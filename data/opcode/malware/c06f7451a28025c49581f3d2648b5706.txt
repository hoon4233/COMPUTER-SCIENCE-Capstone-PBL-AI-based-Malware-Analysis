sbb
jae
xchg
dec
jae
pop
inc
jae
mov
jae
imul
je
inc
jae
jb
jae
adc
into
dec
cmp
push
cmp
mov
jae
fnstcw
jae
fstp
jae
adc
dec
bound
sbb
cmp
mov
jae
and
aad
dec
jae
mov
cmp
adc
sub
inc
jae
jae
jae
mov
jae
int3
inc
jae
dec
cmp
bound
mov
cmp
cmc
pop
inc
jae
mov
inc
jae
sub
test
cmp
jge
jae
sub
jp
dec
jae
inc
cmp
inc
cmp
das
inc
jae
xor
call
jae
inc
cmp
arpl
fistp
jae
jge
jae
jle
jae
or
xchg
jae
mov
dec
jae
jg
jae
sahf
dec
jae
adc
fs
jae
push
inc
jae
mov
dec
jae
mov
jae
inc
cmp
rol
arpl
jae
fdivr
jae
and
es
inc
jae
push
cmp
dec
cmp
and
jae
mov
cmp
dec
cmp
mov
jae
mov
dec
jae
push
inc
jae
pop
inc
jae
imul
retf
jae
mov
jae
and
fcomp
jae
jecxz
jae
jl
jae
push
jae
mov
jae
adc
jl
inc
jae
mov
int3
sahf
dec
jae
dec
cmp
pushf
dec
jae
fadd
les
inc
jae
pusha
cmp
rol
dec
jae
arpl
inc
ret
cmc
sahf
dec
jae
arpl
add
jae
mov
jae
popf
dec
jae
rol
popa
mov
jae
sahf
inc
jae
and
jae
imul
or
inc
jae
xchg
inc
jae
cmp
outs
cmp
mov
nop
inc
jae
pop
cmp
push
cmp
fs
jae
(bad)
cmp
dec
cmp
mov
jae
(bad)
cmp
mov
dec
jae
arpl
cmp
jae
inc
cmp
fs
jae
cmp
mov
cmp
arpl
cmp
jmp
cmp
fidivr
jae
cmovns
add
inc
jae
xchg
dec
jae
mov
inc
jae
adc
sub
dec
cmp
enter
push
dec
jae
mov
dec
jae
lahf
dec
jae
dec
cmp
popf
dec
jae
adc
jae
mov
dec
jae
fiadd
icebp
dec
cmp
mov
jae
mov
jae
jno
jae
cmovns
inc
cmp
xchg
cmp
xchg
dec
jae
fiadd
jno
inc
jae
and
inc
mov
jae
mov
jae
ret
repz
jae
fiadd
mov
dec
jae
cmovs
push
cmp
inc
cmp
(bad)
inc
jae
add
add
add
cmc
pop
pop
add
pop
pop
add
pop
pop
add
add
add
adc
or
add
or
add
pop
pop
add
pop
pop
add
pop
add
pop
add
pop
add
pop
add
pop
pop
add
pop
pop
add
add
add
add
dec
adc
pop
add
add
pop
pop
add
pop
pop
add
pop
pop
add
pusha
pop
add
pusha
pop
add
pusha
pop
add
pusha
pop
add
add
add
pusha
pop
add
add
cs
add
pop
add
add
add
add
add
popa
pop
add
bound
pop
fs
add
fs
add
fs
add
gs
add
add
add
add
add
pop
add
pop
add
pop
add
add
div
add
pop
add
jbe
add
add
add
adc
sbb
imul
cmp
add
pop
add
push
add
push
add
push
add
push
add
pop
add
push
add
imul
ins
pop
add
ins
pop
add
ins
pop
add
ins
pop
add
jo
add
pop
add
jae
add
jae
add
jae
add
pop
add
pop
add
jbe
add
jbe
add
add
xchg
sbb
sbb
sbb
add
add
add
add
js
add
js
add
pop
add
jns
add
jns
add
jns
add
jns
add
pop
add
pop
add
jns
add
jnp
add
jge
add
jle
add
jle
add
jle
add
jle
add
pop
add
sbb
sbb
pop
add
add
add
add
test
add
add
aas
test
and
mov
add
add
ret
mov
add
add
adc
add
in
pop
add
test
sti
test
pop
pop
add
mov
cmp
pop
add
pop
add
add
and
xchg
pop
add
add
add
add
add
inc
add
add
add
mov
fwait
mov
sahf
mov
inc
mov
stos
mov
xor
xchg
pop
add
pop
add
xchg
pop
add
add
add
add
add
add
add
pop
add
movs
pop
add
pop
add
add
add
test
add
add
loopne
pop
add
lods
pop
add
stos
pop
add
add
add
adc
add
jp
pop
add
test
pop
add
stos
pop
add
stos
pop
add
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
adc
das
mov
add
pop
add
mov
add
add
add
push
inc
add
add
add
lods
pop
add
pop
add
scas
pop
add
scas
pop
add
scas
pop
add
scas
pop
add
pop
add
mov
add
mov
add
mov
add
add
add
add
mov
add
mov
add
pop
add
mov
add
add
mov
add
mov
add
mov
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
fs
pop
add
(bad)
pop
add
pop
add
add
add
pop
inc
add
add
add
add
add
pop
add
add
pop
add
add
mov
pop
add
mov
pop
add
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
rcr
ret
bnd
cmp
ret
pop
add
ret
pop
add
add
les
faddp
pop
add
les
stos
lds
xor
pop
add
pop
add
(bad)
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcr
add
add
sahf
rcr
add
rcr
add
add
not
pop
add
add
add
xchg
inc
pop
add
add
repz
add
repz
add
cmc
pop
add
add
add
pop
add
clc
pop
add
add
add
clc
pop
add
add
add
sbb
push
add
add
cmc
pop
add
cmc
pop
add
cmc
pop
add
cmc
pop
add
clc
pop
add
clc
pop
add
add
add
sti
pop
add
add
add
sti
pop
add
add
add
inc
add
add
add
clc
pop
add
clc
pop
add
clc
pop
add
stc
pop
add
sti
pop
add
sti
pop
add
add
add
cld
pop
add
add
add
pop
add
add
sahf
add
rol
pop
add
add
add
add
add
std
pop
add
std
pop
add
pop
add
add
add
xchg
add
add
add
adc
pop
pop
add
add
add
sbb
add
add
add
add
add
add
add
add
and
or
add
add
lds
pop
add
add
add
sbb
add
add
jne
pop
add
add
or
add
add
and
adc
add
add
xor
pop
add
add
add
inc
add
add
add
or
popf
or
add
pop
add
pop
add
pop
add
pop
add
pop
add
adc
and
pop
add
adc
add
add
add
adc
add
add
add
add
add
adc
in
adc
sti
adc
mov
adc
xchg
adc
xchg
adc
push
adc
les
pop
add
adc
add
adc
add
adc
add
pop
adc
or
arpl
pop
add
add
add
pop
add
sbb
add
add
out
pop
add
add
add
sbb
push
add
add
push
pop
add
push
pop
add
pop
pop
add
sbb
fcomp
pop
add
add
aas
and
sbb
add
add
add
sbb
add
add
add
inc
add
add
add
sbb
stos
sbb
les
pop
add
sbb
mov
pop
add
add
add
add
add
and
add
add
pop
and
add
add
nop
sbb
or
add
jne
pop
add
add
push
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
and
add
add
inc
and
add
add
fcomp
inc
add
add
add
and
sbb
pop
add
pop
add
add
add
adc
push
popa
pop
add
bound
pop
popa
pop
add
add
add
sbb
add
add
jp
add
cmc
and
or
add
and
add
pop
add
pop
add
pop
add
es
add
es
add
es
add
es
add
es
add
es
add
sub
sub
pop
add
sub
inc
sub
add
pop
add
pop
add
pop
add
pop
add
pop
add
cs
add
xor
add
pop
add
xor
add
pop
add
xor
cmp
pop
add
pop
add
xor
in
xor
mov
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
cmp
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
add
add
pop
add
pop
add
pop
add
pop
add
ds
add
ds
add
ds
add
ds
add
ds
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
pop
add
inc
pop
add
inc
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
add
add
dec
pop
add
dec
pop
add
dec
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
pop
add
push
pop
add
push
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
add
pop
pop
add
pop
pop
add
add
pop
add
pop
add
pusha
pop
add
pop
add
pop
add
pop
add
pop
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
bound
add
add
push
arpl
add
arpl
add
add
(bad)
arpl
add
add
add
add
push
fs
add
add
add
add
add
add
loop
pop
add
add
add
add
push
push
inc
add
add
add
pop
add
pop
add
add
pop
add
gs
add
add
add
add
add
add
nop
push
inc
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
add
ins
pop
add
pop
add
ins
pop
add
push
inc
add
add
add
add
add
add
add
pop
add
add
add
jae
add
add
add
jae
add
ja
add
add
add
ja
add
add
add
pop
inc
add
add
add
je
add
je
add
je
add
je
add
pop
add
pop
add
jbe
add
pop
add
ja
add
ja
add
add
add
pop
add
sbb
pop
inc
add
add
add
add
add
add
add
jg
add
add
add
xchg
add
add
dec
xchg
sbb
add
add
add
add
add
add
add
add
add
mov
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
pop
add
xchg
pop
add
add
add
xchg
pop
add
add
add
pop
inc
add
add
add
mov
stos
mov
mov
(bad)
pop
add
nop
pop
add
nop
pop
add
xchg
pop
add
pop
add
xchg
pop
add
xchg
pop
add
add
add
add
lahf
mov
pop
add
add
add
and
and
add
cmc
xchg
pop
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
pop
add
pop
add
xchg
pop
add
xchg
pop
add
pop
add
pop
add
pop
add
pop
add
cwde
pop
add
cdq
pop
add
call
jae
pop
add
popf
pop
add
popf
pop
add
sahf
pop
add
sahf
pop
add
sahf
pop
add
pop
add
pop
add
lahf
pop
add
pop
add
pop
add
pop
add
add
add
mov
add
add
add
add
add
and
add
add
mov
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
pop
add
movs
pop
add
movs
pop
add
movs
pop
add
movs
pop
add
cmps
pop
add
cmps
pop
add
cmps
pop
add
cmps
pop
add
lods
pop
add
lods
pop
add
lods
pop
add
lods
pop
add
mov
add
mov
add
mov
add
mov
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
mov
add
pop
add
mov
add
mov
add
add
add
add
add
pop
add
add
add
mov
adc
mov
add
xchg
mov
add
enter
add
add
jne
pop
add
add
mov
add
daa
add
xchg
lds
iret
lds
fwait
lds
add
add
clc
and
sbb
add
xor
mov
pop
add
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
rcr
rcr
rcr
rcr
rcr
rcr
ret
pusha
ret
pop
add
les
imul
add
lds
and
enter
add
add
add
and
add
add
jne
pop
add
add
(bad)
pop
add
(bad)
pop
add
(bad)
pop
add
enter
enter
enter
enter
enter
add
add
retf
add
add
jle
pop
add
retf
pop
add
add
add
retf
pop
add
int
add
add
add
add
das
rcr
add
add
aaa
rcr
add
add
add
inc
add
add
add
int
add
int
add
int
add
iret
pop
add
rcr
sub
pop
add
rcr
add
add
xchg
rcr
or
aam
add
add
add
aam
add
add
and
pop
add
jmp
add
pusha
and
adc
aad
add
pop
add
(bad)
pop
add
(bad)
pop
add
fstp
push
fstp
mov
pop
add
fistp
inc
fstp
xchg
pop
add
ficomp
jmp
add
loopne
add
loop
add
in
add
out
add
call
pop
add
add
or
out
pop
add
pop
add
add
add
and
or
add
adc
jmp
push
jmp
add
in
pop
add
pop
add
out
pop
add
out
pop
add
add
add
out
pop
add
lock
add
add
add
lock
add
lock
add
add
add
lock
add
icebp
pop
add
add
add
icebp
pop
add
hlt
pop
add
add
add
pop
add
add
add
inc
add
add
add
pop
add
add
pop
add
repz
add
pop
add
pop
add
hlt
pop
add
pop
add
pop
add
add
add
add
mov
pop
add
add
mov
pop
add
maxps
xchg
maxps
add
add
mov
add
add
add
in
pop
add
add
sbb
pop
add
add
sbb
pop
add
pop
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
pop
add
pop
add
or
iret
or
cmp
add
add
or
add
or
pop
add
add
or
pop
add
pop
add
pop
add
push
pop
add
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
pop
add
add
add
add
add
add
inc
sub
loopne
pop
add
pop
add
add
add
add
add
adc
iret
adc
adc
adc
lods
adc
cld
adc
inc
adc
mov
pop
add
adc
loope
pop
add
adc
jecxz
pop
add
adc
sub
pop
add
pop
add
add
sbb
and
pop
add
sbb
push
sbb
cwde
sbb
jns
pop
add
sbb
add
add
sbb
add
sbb
pop
add
pop
add
and
aad
pop
add
and
pop
and
and
pop
add
pop
add
pop
add
and
pop
add
sub
add
pop
add
pop
add
sub
sub
inc
sub
inc
sub
inc
sub
add
add
and
xor
add
add
scas
xor
add
add
and
add
add
add
sub
add
sub
pop
add
sub
pop
add
cs
add
das
pop
add
xor
xor
pop
add
pop
add
pop
add
xor
outs
xor
cmps
xor
cmps
xor
cmps
xor
daa
add
dec
pop
pop
add
pop
pop
add
add
add
es
add
add
pop
add
add
pop
add
xor
stos
xor
mov
pop
add
xor
add
xor
add
pop
add
pop
add
ss
add
aaa
pop
add
pop
add
pop
add
cmp
(bad)
cmp
(bad)
cmp
inc
cmp
inc
cmp
arpl
pop
add
pop
add
pop
add
cmp
lds
pop
add
cmp
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
dec
pop
add
dec
pop
add
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
push
pop
add
push
pop
add
pop
pop
add
pop
add
pop
add
add
add
add
or
pop
add
pop
pop
add
add
add
inc
add
add
add
pop
add
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
add
add
dec
inc
and
pop
pop
add
add
add
pop
add
add
add
add
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
add
pop
pop
add
pop
add
pop
add
add
add
add
fdivr
add
jle
add
jge
add
add
add
sub
imul
add
pusha
pop
add
pusha
pop
add
pusha
pop
add
pusha
pop
add
bound
popa
bound
in
bound
add
arpl
jle
pop
add
arpl
stos
arpl
aaa
fs
add
gs
add
pop
add
pop
add
pop
add
addr16
add
addr16
add
push
pop
add
imul
push
imul
mov
pop
add
imul
push
push
add
push
add
imul
imul
imul
ins
pop
add
ins
pop
add
ins
pop
add
pop
add
ins
pop
add
ins
pop
add
pop
add
jno
add
jb
add
jb
add
jb
add
jb
add
jae
add
pop
add
pop
add
pop
add
jae
add
jae
add
jae
add
je
add
pop
add
pop
add
je
add
je
add
jne
add
pop
add
jne
add
jne
add
jne
add
jbe
add
pop
add
pop
add
pop
add
jbe
add
jbe
add
jbe
add
ja
add
ja
add
pop
add
pop
add
ja
add
ja
add
jns
add
jp
add
jp
add
jp
add
jl
add
jge
add
jge
add
jge
add
jge
add
add
and
mov
sub
pop
add
add
add
add
add
jle
add
jle
add
jg
add
sbb
sbb
sbb
sbb
sbb
sbb
rol
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
test
inc
test
test
iret
test
add
pop
add
pop
add
pop
add
pop
add
pop
add
xchg
stos
mov
stos
mov
cmp
mov
pop
mov
je
pop
add
mov
add
pop
add
mov
into
mov
inc
mov
icebp
mov
or
mov
or
mov
push
mov
push
mov
add
add
add
add
add
inc
or
or
cmp
add
inc
lea
add
mov
add
add
mov
add
mov
add
add
out
pop
add
add
add
(bad)
pop
add
(bad)
pop
add
(bad)
pop
add
nop
pop
add
add
add
nop
pop
add
xchg
pop
add
add
add
add
add
add
or
add
add
adc
adc
add
add
inc
call
cmp
add
add
add
add
add
add
add
call
push
add
add
add
add
fwait
pop
add
add
jo
inc
add
add
add
fwait
pop
add
pushf
pop
add
pushf
pop
add
pop
add
pop
add
pop
add
popf
pop
add
add
add
popf
pop
add
add
add
pop
add
pop
add
pop
add
adc
int
pop
add
loop
add
add
add
sub
add
add
add
add
sbb
pop
add
mov
pop
add
mov
pop
add
cmps
pop
add
stos
pop
add
stos
pop
add
pop
add
pop
add
pop
add
scas
pop
add
scas
pop
add
scas
pop
add
mov
add
pop
add
mov
add
mov
add
mov
add
pop
add
pop
add
mov
add
mov
add
pop
add
add
add
pop
add
pop
add
pop
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
mov
pop
add
mov
pop
add
pop
add
pop
add
rcr
ret
pusha
les
pop
(bad)
pop
add
pop
add
pop
add
(bad)
pop
add
(bad)
pop
add
(bad)
pop
add
(bad)
pop
add
(bad)
pop
add
enter
leave
pop
add
retf
xlat
int3
pop
add
pop
add
iret
pop
add
rcr
int
pop
add
rcr
rcl
pop
add
rcr
add
pop
add
aam
add
aam
add
aam
add
aad
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
fcomp
jmp
add
pop
add
pop
add
fstp
cmp
pop
add
pop
add
pop
add
pop
add
loope
add
loop
add
loop
add
loop
add
loop
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
add
or
stos
in
add
jmp
mov
das
inc
add
add
add
add
add
add
add
jmp
add
add
add
add
inc
add
in
pop
add
add
add
in
pop
add
in
pop
add
add
add
in
pop
add
add
add
das
inc
add
in
pop
add
add
pop
add
in
pop
add
in
pop
add
add
add
pop
add
clc
pop
add
pop
add
xor
add
add
add
add
add
add
and
pop
add
add
add
add
add
add
mov
pusha
add
xor
add
add
add
add
add
add
pop
add
add
add
adc
pop
pusha
add
add
add
xor
add
add
add
add
add
add
rol
add
and
adc
add
add
retf
add
add
add
inc
add
add
add
pusha
add
add
pusha
add
or
xor
pusha
add
pusha
add
or
ror
add
pusha
add
or
add
or
add
or
pusha
add
or
pusha
add
pusha
add
adc
mov
pusha
add
adc
loopne
pusha
add
pusha
add
adc
fcom
pusha
add
adc
mov
add
add
add
add
adc
add
mov
add
add
xor
add
add
test
add
pusha
add
add
add
sbb
add
add
adc
pusha
add
sbb
add
add
sbb
pusha
add
add
dec
push
pusha
add
push
pusha
add
add
add
inc
add
add
add
sbb
retf
sbb
repnz
aas
sbb
pusha
add
push
pusha
add
add
add
add
retf
add
and
shl
pusha
add
add
add
add
add
pop
pusha
add
pop
pusha
add
pusha
add
and
ret
and
and
cs
add
add
add
cs
add
add
add
xor
and
add
xchg
and
pushf
and
stos
and
shl
add
pusha
add
and
add
and
add
and
pusha
add
daa
pusha
add
pusha
add
pusha
add
pusha
add
sub
jecxz
pusha
add
sub
imul
pusha
add
pusha
add
sub
dec
sub
jnp
pusha
add
sub
data16
add
pusha
add
pusha
add
sub
add
pusha
add
sub
pusha
add
cs
add
pusha
add
cs
add
cs
add
add
rol
add
pusha
add
inc
pusha
add
add
add
add
add
das
pusha
add
xor
ja
pusha
add
xor
scas
xor
xlat
xor
pusha
ss
add
pusha
add
cmp
aas
cmp
aas
cmp
movs
cmp
loope
pusha
add
cmp
add
pusha
add
add
aas
pusha
add
pusha
add
pusha
add
inc
pusha
add
inc
pusha
add
add
loope
pusha
add
pusha
add
inc
pusha
add
add
add
xor
push
add
add
inc
pusha
add
inc
pusha
add
pusha
add
pusha
add
pusha
add
inc
pusha
add
inc
pusha
add
inc
pusha
add
inc
pusha
add
inc
pusha
add
inc
pusha
add
inc
pusha
add
add
add
add
adc
add
pusha
add
dec
pusha
add
add
add
add
add
dec
pusha
add
dec
pusha
add
dec
pusha
add
dec
pusha
add
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
dec
pusha
add
add
add
add
push
dec
pusha
add
dec
pusha
add
add
add
xor
or
add
retf
add
dec
pusha
add
dec
pusha
add
dec
pusha
add
dec
pusha
add
dec
pusha
add
pusha
add
dec
pusha
add
pusha
add
pusha
add
pusha
add
add
add
add
add
dec
pusha
add
dec
pusha
add
dec
pusha
add
add
cld
jae
add
je
add
add
add
xor
add
pusha
add
pusha
add
pusha
add
pusha
add
dec
pusha
add
pusha
add
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
pusha
add
push
pusha
add
push
pusha
add
pusha
add
push
pusha
add
push
pusha
add
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
push
pusha
add
pusha
add
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pusha
add
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pusha
add
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pusha
add
pop
pusha
add
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pop
pusha
add
pusha
pusha
add
pusha
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
pusha
add
pusha
pusha
add
popa
pusha
add
pusha
add
fs
add
gs
add
gs
add
pusha
add
pusha
add
gs
add
gs
add
pusha
add
addr16
add
addr16
add
addr16
add
addr16
add
pusha
add
add
add
push
pusha
add
imul
mov
add
pusha
add
imul
imul
imul
ins
pusha
add
ins
pusha
add
ins
pusha
add
ins
pusha
add
ins
pusha
add
pusha
add
pusha
add
pusha
add
outs
pusha
add
outs
pusha
add
outs
pusha
add
outs
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
jo
add
jb
add
jae
add
jae
add
add
add
add
mov
jbe
add
jbe
add
add
add
add
add
pusha
add
pusha
add
pusha
add
jne
add
jbe
add
pusha
add
add
add
jp
add
add
add
jp
add
add
add
ss
add
add
add
ja
add
js
add
js
add
jns
add
jns
add
jns
add
add
jp
add
jp
add
jnp
add
add
add
jnp
add
jl
add
add
add
jl
add
jle
add
add
add
jle
add
jg
add
add
add
jg
add
add
pop
aaa
inc
add
add
add
jg
add
pusha
add
jg
add
jg
add
jg
add
and
add
add
add
add
add
add
add
add
pusha
add
and
add
add
test
add
add
add
or
xor
pusha
add
add
add
mov
or
mov
add
add
dec
mov
das
add
jo
pusha
add
xchg
pusha
add
pusha
add
add
add
aaa
inc
add
add
cli
mov
or
pusha
add
lea
fisttp
pusha
add
pusha
add
(bad)
pusha
add
pusha
add
pusha
add
(bad)
pusha
add
pusha
add
pusha
add
pusha
add
nop
pusha
add
xchg
pusha
add
pusha
add
pusha
add
xchg
pusha
add
xchg
pusha
add
xchg
pusha
add
pusha
add
pusha
add
add
add
add
add
add
sub
call
fstp
add
nop
cmp
or
add
push
pusha
add
pusha
add
cwde
pusha
add
add
pusha
add
call
rcr
add
add
add
or
pushf
pusha
add
add
add
pushf
pusha
add
mov
add
mov
pusha
add
add
add
cmp
pop
add
add
popf
pusha
add
popf
pusha
add
lahf
pusha
add
mov
pusha
add
add
add
add
add
movs
pusha
add
add
add
pusha
add
test
add
push
add
add
cmp
or
movs
pusha
add
pusha
add
movs
pusha
add
pusha
add
cmps
pusha
add
cmps
pusha
add
cmps
pusha
add
cmps
pusha
add
pusha
add
test
add
test
add
pusha
add
stos
pusha
add
add
add
stos
pusha
add
stos
pusha
add
add
add
stos
pusha
add
add
add
lods
pusha
add
add
add
pusha
add
mov
add
add
add
add
add
add
add
pusha
add
add
add
mov
add
add
add
mov
add
mov
pusha
add
mov
or
ins
mov
add
jae
pusha
add
mov
add
mov
pusha
add
shl
add
add
shl
add
add
add
add
add
add
pusha
add
add
add
pusha
add
lds
add
add
out
pusha
add
out
add
add
add
add
inc
add
inc
inc
str
add
pusha
add
jmp
or
(bad)
jmp
add
add
add
jmp
add
add
add
add
add
out
pusha
add
cmc
pusha
add
cmc
pusha
add
add
test
inc
add
add
add
pusha
add
add
pusha
add
lock
add
lock
add
icebp
pusha
add
add
cmc
pusha
add
cmc
pusha
add
cmc
pusha
add
cmc
pusha
add
pusha
add
pusha
add
add
pusha
add
pusha
add
cmc
pusha
add
add
add
clc
pusha
add
add
add
adc
js
popa
add
sbb
sbb
add
add
add
cmp
inc
add
add
stc
pusha
add
stc
pusha
add
stc
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
sti
pusha
add
sti
pusha
add
pusha
add
std
pusha
add
pusha
add
(bad)
pusha
add
jmp
pop
add
mov
add
test
popa
add
add
test
popa
add
add
mov
popa
add
add
mov
add
add
popa
add
popa
add
or
mov
or
into
or
mov
add
or
add
or
popa
add
adc
adc
add
popa
add
adc
hlt
adc
hlt
adc
jno
popa
add
popa
add
push
popa
add
push
popa
add
push
popa
add
popa
add
pop
popa
add
add
popa
add
popa
add
popa
add
sbb
sub
popa
add
sbb
sub
sbb
jno
popa
add
popa
add
and
add
add
ins
and
add
add
pop
cmp
add
add
add
sbb
retf
sbb
pop
sbb
add
popa
add
pop
popa
add
pop
popa
add
and
and
popa
add
popa
add
fs
add
add
add
fs
add
add
add
add
add
and
cmp
popa
add
and
add
and
add
popa
add
es
add
es
add
sub
pop
sub
jno
popa
add
sub
mov
popa
add
sub
add
popa
add
sub
popa
add
das
popa
add
xor
mov
popa
add
popa
add
popa
add
xor
add
xor
add
xor
add
xor
popa
add
popa
add
cmp
xor
popa
add
popa
add
cmp
cmp
cmp
pop
cmp
xor
add
popa
add
popa
add
aas
popa
add
popa
add
popa
add
inc
popa
add
inc
popa
add
popa
add
popa
add
inc
popa
add
inc
popa
add
popa
add
dec
popa
add
add
popa
add
popa
add
dec
popa
add
dec
popa
add
popa
add
popa
add
popa
add
dec
popa
add
popa
add
add
push
popa
add
popa
add
push
popa
add
popa
add
push
popa
add
popa
add
pop
popa
add
popa
add
add
pop
popa
add
add
pop
popa
add
pop
popa
add
popa
add
popa
add
pop
popa
add
pop
popa
add
pusha
popa
add
popa
popa
add
bound
sub
add
arpl
repnz
jmp
add
arpl
add
add
add
gs
add
add
add
popa
add
popaw
add
add
add
popaw
add
push
add
xor
add
push
add
add
add
popa
add
add
add
add
sbb
add
ins
popa
add
add
add
add
add
push
add
push
add
popa
add
imul
imul
ins
popa
add
ins
popa
add
ins
popa
add
add
add
add
add
add
adc
outs
popa
add
add
add
ds
add
add
add
popa
add
ins
popa
add
ins
popa
add
outs
popa
add
add
outs
popa
add
outs
popa
add
add
add
add
add
add
jecxz
popa
add
add
cmp
inc
add
add
add
popa
add
jo
add
jo
add
jo
add
jo
add
jno
add
jb
add
jb
add
popa
add
popa
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
popa
add
add
je
add
jne
add
popa
add
popa
add
jbe
add
jbe
add
jbe
add
jbe
add
popa
add
popa
add
js
add
add
add
add
add
or
leave
jns
add
add
add
add
or
popa
add
add
add
inc
inc
add
add
add
popa
add
popa
add
add
popa
add
popa
add
popa
add
popa
add
popa
add
popa
add
popa
add
popa
add
popa
add
jg
add
add
add
add
sbb
popa
add
add
add
add
add
popa
add
popa
add
popa
add
and
test
popa
add
popa
add
popa
add
test
fwait
test
stos
test
push
add
add
add
add
mov
test
add
add
add
mov
add
add
add
add
and
popa
add
pushf
popa
add
add
add
add
add
popa
add
popa
add
add
jmp
add
add
xchg
add
aas
mov
or
mov
add
add
add
fisub
popa
add
movs
popa
add
add
add
popa
add
cmps
popa
add
add
add
popa
add
add
mov
popa
add
add
add
add
add
cmps
popa
add
cmps
popa
add
cmps
popa
add
popa
add
popa
add
cmps
popa
add
popa
add
test
add
popa
add
test
popa
add
stos
popa
add
stos
popa
add
popa
add
stos
popa
add
stos
popa
add
stos
popa
add
stos
popa
add
stos
popa
add
stos
popa
add
stos
popa
add
popa
add
popa
add
lods
popa
add
lods
popa
add
lods
popa
add
lods
popa
add
popa
add
popa
add
popa
add
popa
add
popa
add
lods
popa
add
lods
popa
add
lods
popa
add
lods
popa
add
popa
add
add
add
add
add
add
add
scas
popa
add
mov
add
scas
popa
add
add
in
mov
add
mov
add
add
add
mov
add
mov
add
add
add
mov
add
mov
add
add
add
mov
add
mov
add
dec
mov
adc
outs
(bad)
popa
add
add
add
popa
add
inc
inc
add
add
add
add
add
add
add
lds
add
add
add
(bad)
popa
add
add
add
(bad)
popa
add
shl
add
add
jne
popa
add
shl
add
add
(bad)
shl
add
shl
add
add
call
add
add
add
add
add
add
add
add
outs
in
add
in
add
popa
add
add
add
inc
add
add
add
popa
add
popa
add
popa
add
(bad)
popa
add
popa
add
popa
add
fsub
dec
(bad)
leave
frstor
mov
loope
add
in
add
popa
add
popa
add
add
add
add
inc
add
rol
add
add
in
popa
add
popa
add
in
popa
add
add
add
lock
add
icebp
popa
add
icebp
popa
add
inc
inc
add
add
add
add
add
add
add
lock
add
add
add
icebp
popa
add
add
add
icebp
popa
add
repz
add
add
add
repz
add
hlt
popa
add
add
add
adc
fdecstp
popa
add
add
add
mul
add
add
cmp
add
cmc
popa
add
popa
add
cmc
popa
add
mul
push
add
add
add
add
popa
add
add
add
add
add
popa
add
cli
popa
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
sti
popa
add
add
add
add
add
add
add
add
add
add
add
add
inc
(bad)
popa
add
(bad)
popa
add
add
add
inc
inc
add
add
add
cld
popa
add
cld
popa
add
popa
add
popa
add
cld
popa
add
std
popa
add
std
popa
add
std
popa
add
std
popa
add
std
popa
add
std
popa
add
(bad)
popa
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
inc
add
add
add
add
add
add
add
add
or
xchg
movs
mov
fst
cmc
jne
sbb
add
add
add
add
add
push
ins
imul
sub
xor
xor
mov
add
add
add
add
add
add
add
out
(bad)
test
cdq
cmps
jno
movs
cmp
sahf
add
add
add
add
add
and
and
and
add
and
inc
ins
imul
inc
outs
outs
je
outs
ins
xor
and
and
into
into
mov
lahf
cs
xor
mov
mov
scas
hlt
call
push
dec
xor
adc
sbb
gs
mov
fld
jge
arpl
dec
xchg
lods
fld
dec
lods
xor
or
stos
add
xchg
aad
add
and
add
add
add
imul
add
mov
ret
sbb
add
and
and
push
add
ins
je
add
push
add
add
add
push
add
xor
add
add
add
add
add
and
add
add
add
sldt
adc
add
add
or
push
pop
add
xor
add
add
and
test
add
push
sbb
add
add
and
test
add
mov
adc
add
add
and
push
push
add
sub
add
xor
add
pusha
add
add
add
add
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
inc
and
inc
and
inc
loopne
add
inc
pusha
add
loopne
add
inc
add
add
add
add
(bad)
inc
and
add
pusha
add
pusha
mov
add
loopne
add
add
pusha
mov
rol
inc
loopne
add
add
loopne
add
add
add
and
and
inc
add
inc
add
and
and
pusha
add
pusha
add
and
mov
inc
pusha
add
and
add
inc
add
inc
add
pusha
add
mov
add
and
add
and
rol
add
shl
mov
mov
loopne
loopne
loopne
rol
add
loopne
add
loopne
add
loopne
add
jmp
add
mov
inc
shl
add
clc
lock
fdivr
add
call
inc
sar
clc
add
clc
inc
cwde
rcr
add
clc
lock
(bad)
clc
add
(bad)
clc
add
enter
clc
lock
mov
add
mov
enter
rol
add
clc
add
sbb
fcom
mov
rcr
add
lock
add
enter
rol
lock
clc
add
mov
clc
add
clc
clc
add
(bad)
inc
inc
sbb
xor
add
ror
cwde
ror
mov
loopne
add
lock
add
(bad)
inc
inc
mov
add
mov
add
rol
mov
rol
call
mov
loopne
test
loopne
mov
clc
call
add
lock
mov
add
loopne
add
lock
add
clc
clc
add
mov
inc
enter
inc
jo
add
mov
add
shr
add
mov
pop
mov
mov
add
rol
mov
enter
enter
rol
test
rol
cwde
enter
call
fadd
mov
fadd
mov
lock
add
loopne
test
loopne
enter
or
lock
call
clc
add
enter
call
clc
add
clc
clc
add
clc
clc
add
sar
add
lock
or
inc
mov
inc
clc
(bad)
inc
adc
cmp
or
add
pusha
push
add
js
add
nop
add
adc
or
add
push
mov
add
test
pop
mov
add
mov
push
cwde
mov
jo
mov
add
add
js
add
cmp
or
mov
add
mov
add
mov
add
js
add
nop
rol
nop
rol
mov
add
mov
rol
loopne
add
js
add
mov
add
mov
add
mov
add
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
or
rol
add
rol
add
rol
cwde
rcl
mov
mov
add
nop
fadd
add
fadd
and
fadd
xor
fadd
cwde
rcr
adc
fadd
rcl
add
fcomp
add
fcomp
add
fcomp
add
fcomp
add
call
add
add
arpl
add
add
add
add
add
add
and
add
fimul
scas
add
loope
aad
data16
add
add
jecxz
jle
(bad)
(bad)
retf
xchg
fldenv
(bad)
fcomip
mul
stc
add
out
dec
adc
enter
add
mov
imul
out
add
cmc
adc
inc
jmp
push
push
retf
sbb
jecxz
fcomp
mov
pop
pop
pop
imul
xlat
and
inc
rcr
ja
add
add
add
inc
push
dec
fstp
enter
pop
pop
dec
dec
dec
mov
mov
pop
je
add
add
rol
add
add
push
iret
test
leave
xchg
xchg
xchg
xchg
fcomip
clc
mov
pop
and
(bad)
jns
out
out
loopne
inc
add
add
add
loop
pop
js
push
inc
leave
loopne
cmc
inc
mov
xor
mov
inc
out
add
(bad)
hlt
aad
adc
loopne
add
add
add
and
adc
cmc
pusha
mov
mov
inc
test
dec
dec
dec
mov
movs
leave
mov
add
retf
and
ins
pusha
xchg
pop
add
cwde
adc
add
push
aad
jns
hlt
out
fucomp
ins
fild
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
mov
shl
inc
movs
push
sahf
repz
mov
cld
add
and
loope
jns
push
dec
sub
dec
dec
dec
dec
dec
dec
dec
mov
lods
dec
mov
addr16
mov
push
add
add
(bad)
(bad)
test
or
dec
dec
dec
pop
pop
pop
test
jmp
out
push
add
add
add
jbe
(bad)
fadd
or
dec
dec
dec
or
pop
dec
jmp
push
push
inc
cmp
push
add
add
add
add
cmp
dec
or
dec
dec
dec
dec
dec
or
or
fisttp
pop
add
pop
add
ret
ins
adc
dec
mov
dec
pusha
pusha
pusha
pusha
dec
dec
dec
mov
mov
jmp
inc
movs
ficomp
add
add
popf
cmc
(bad)
(bad)
cmp
cmps
pusha
push
pusha
pusha
pusha
pusha
pusha
dec
push
dec
mov
push
pop
icebp
pop
aad
(bad)
inc
jle
(bad)
(bad)
out
mov
mov
push
push
push
push
push
pusha
clc
push
dec
or
lea
mov
add
(bad)
mov
mov
cmp
add
add
js
mov
lods
pop
pop
lea
add
add
(bad)
mov
dec
add
add
push
push
push
push
add
out
mov
mov
mov
pop
lods
push
imul
jle
mov
dec
dec
pusha
pusha
scas
add
ins
ins
ins
push
add
js
push
push
clc
dec
pop
pop
lea
mov
mov
add
add
add
shr
push
add
adc
adc
push
pusha
push
add
or
push
(bad)
fcmovnb
call
add
add
add
add
xlat
cmp
mov
add
push
mov
adc
jns
ins
add
pusha
pusha
lods
mov
push
(bad)
in
sbb
add
add
mov
ins
jns
jns
push
js
push
add
or
pop
xchg
mov
add
xchg
sbb
push
js
adc
adc
mov
cmps
mov
push
or
mov
xchg
add
lock
xchg
cmc
cmps
add
add
ins
push
add
mov
mov
push
mov
jp
mov
add
add
mov
cmc
cmps
lods
pusha
pusha
pusha
js
mov
mov
cli
shl
xlat
lahf
sbb
xchg
bound
nop
nop
mov
popa
xchg
xchg
outs
popa
jp
bound
push
push
push
rcr
add
add
push
dec
push
push
pop
jne
xchg
jnp
sbb
popa
outs
xchg
xchg
pop
jae
push
push
push
push
pop
rcl
cld
sahf
lahf
push
pop
dec
push
push
push
push
test
push
cmps
test
pop
pop
push
push
push
push
rcl
pop
jo
add
push
dec
push
push
dec
push
push
push
push
push
push
push
push
push
push
push
pop
push
push
push
push
push
push
xchg
pop
jae
add
in
push
pop
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
pop
dec
push
push
push
push
push
push
pop
xchg
sti
jno
add
add
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
jae
pop
jl
add
add
test
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
pop
pop
push
push
push
push
pop
(bad)
(bad)
pop
jbe
add
add
push
dec
pop
pop
pop
dec
dec
dec
dec
push
push
dec
pop
push
push
push
push
pop
popa
pop
bound
add
push
push
test
sti
jne
test
dec
dec
push
test
pop
push
(bad)
rol
addr16
in
outs
pop
(bad)
xchg
(bad)
pop
pop
test
push
push
pop
test
add
jg
jge
jge
jno
pop
push
pop
pop
push
pop
xchg
je
add
add
add
xlat
jo
pop
jno
jno
jnp
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
or
add
add
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
add
loopne
add
mov
add
mov
add
and
and
inc
add
add
and
add
rol
loopne
add
pusha
inc
and
add
add
add
and
inc
shl
add
and
loopne
inc
add
inc
pusha
add
pusha
add
inc
pusha
add
add
add
pusha
add
mov
mov
add
inc
mov
add
pusha
mov
add
and
mov
rol
and
loopne
and
loopne
and
add
loopne
add
jmp
add
loopne
add
inc
loopne
inc
add
inc
cwde
rcr
add
mov
add
clc
clc
add
(bad)
clc
add
clc
inc
rcr
add
(bad)
clc
add
(bad)
inc
nop
enter
call
mov
add
add
clc
lock
clc
lock
sar
add
inc
inc
js
add
rol
loopne
add
rcr
add
clc
clc
add
enter
js
add
mov
or
enter
enter
enter
rol
call
call
fadd
test
loopne
mov
cwde
call
add
mov
add
loopne
add
clc
clc
add
(bad)
inc
clc
(bad)
inc
xor
mov
add
test
push
cwde
test
fcom
test
push
js
add
mov
add
cwde
rol
cwde
rol
mov
rol
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
mov
rol
or
add
loopne
add
mov
fadd
inc
mov
add
enter
enter
fcomp
add
call
loopne
or
loopne
test
loopne
add
call
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
(bad)
call
add
clc
lock
clc
lock
fdivr
add
call
clc
add
clc
clc
add
clc
clc
add
(bad)
inc
test
add
adc
and
sbb
and
or
add
inc
dec
add
mov
adc
add
pop
pop
add
pop
add
pusha
push
add
dec
jo
sub
add
push
jo
sbb
add
push
jo
or
add
jo
add
add
push
js
sbb
mov
inc
mov
and
add
js
add
sbb
pop
sbb
push
mov
add
cwde
mov
add
mov
test
dec
sub
cmp
test
cmp
test
push
nop
test
pusha
nop
test
push
nop
test
js
test
pop
cwde
test
pusha
cwde
test
jo
test
add
mov
or
mov
dec
xor
jo
mov
cmp
mov
push
cwde
mov
js
mov
mov
mov
add
cmp
inc
mov
add
nop
mov
add
mov
add
mov
add
test
add
mov
add
mov
add
mov
add
sar
add
add
or
rol
mov
add
cwde
rol
cwde
rol
mov
rol
test
add
add
dec
pop
pop
xchg
add
pop
cmp
add
mov
adc
inc
pop
add
add
outs
jnp
add
pusha
pusha
pusha
cmc
add
cld
xor
add
add
add
add
call
push
dec
dec
dec
bound
add
aaa
call
add
je
mov
dec
test
jbe
test
popa
jb
xor
ja
add
ins
add
xchg
xchg
mov
loop
popa
popa
mov
fdivr
push
add
sbb
add
add
jae
mov
test
cmp
cmp
cmp
jbe
xor
pop
mov
hlt
dec
add
add
aas
xchg
test
cmp
cmp
xor
jecxz
dec
call
add
add
add
add
dec
dec
or
cmp
push
popa
or
pop
pop
adc
add
add
add
in
add
dec
dec
dec
dec
or
popf
outs
js
test
fwait
add
add
add
add
xchg
xchg
aas
aas
aas
dec
aas
aas
arpl
xor
add
stos
mov
aas
aas
aas
icebp
icebp
add
dec
test
add
xchg
mov
inc
inc
aas
add
cmp
bound
add
add
add
xchg
inc
pcmpgtw
add
dec
bound
loope
push
fnsave
mov
aas
aas
aas
cmp
dec
(bad)
fnstenv
add
retf
lods
stos
cmps
mov
call
push
lea
xchg
mov
(bad)
xchg
add
inc
xchg
movs
cmps
mov
arpl
dec
ins
imul
inc
inc
(bad)
fbld
or
mov
adc
dec
dec
cmp
add
mov
cmp
dec
ret
dec
push
push
push
mov
cmp
inc
inc
jp
add
jp
mov
mov
pop
mov
cmp
dec
jnp
inc
cmp
ds
cmp
add
add
ds
cmp
cmp
cmp
inc
cmp
inc
cmp
jle
cmp
cmp
cmp
cmp
inc
cmp
cmp
add
dec
inc
inc
cmp
pop
inc
inc
ds
dec
cmp
inc
cmp
add
add
dec
cmp
dec
inc
cmp
push
inc
inc
cmp
add
add
xchg
mov
dec
inc
dec
inc
push
jle
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
(bad)
inc
mov
mov
rol
mov
retf
leave
rol
cmp
add
loop
add
(bad)
add
out
add
mov
add
mov
add
(bad)
cld
add
std
stc
add
cli
test
(bad)
sti
add
(bad)
sti
add
ror
jbe
rol
in
add
mov
mov
push
lods
mov
add
mov
add
mov
scas
add
mov
add
loope
add
pushf
stos
add
mov
add
call
jb
mov
add
loopne
add
jmp
pop
div
add
(bad)
inc
adc
inc
add
clc
add
(bad)
in
add
cld
add
mov
int3
add
stos
rol
sub
add
mov
add
sti
cld
add
stc
std
add
mov
mov
add
mov
add
cdq
loopne
dec
xchg
rol
(bad)
adc
jecxz
add
repnz
in
cld
add
jmp
add
inc
add
jmp
add
jecxz
add
jmp
xor
mov
add
mov
cld
add
fscale
add
(bad)
inc
add
test
test
rol
dec
lods
rol
push
mov
add
rol
add
fadd
add
out
add
shr
add
sahf
rol
add
stos
loop
add
add
mov
fild
xor
(bad)
fld
fwait
test
stos
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
add
iret
iret
add
fld
and
ret
rol
icebp
out
add
rol
add
in
add
in
rol
loop
(bad)
add
add
add
jne
ja
jns
jnp
jge
jg
add
addr16
ins
outs
outs
jo
jb
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
add
dec
dec
dec
dec
dec
dec
push
push
push
push
push
add
add
inc
inc
inc
inc
inc
inc
add
add
add
xor
xor
ss
cmp
cmp
cmp
add
add
es
sub
sub
sub
cs
xor
add
add
sbb
push
pop
and
and
and
add
add
add
add
adc
push
pop
sbb
sbb
add
add
add
add
or
adc
add
add
add
add
add
add
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
add
add
add
add
add
add
and
jnp
ret
fwait
mov
repz
cld
add
cld
std
add
cli
stc
add
jmp
cli
add
(bad)
std
add
add
add
(bad)
inc
add
add
mov
rol
(bad)
retf
into
add
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
add
add
loope
clc
add
(bad)
loope
aad
in
add
(bad)
add
(bad)
inc
cmc
icebp
call
add
std
(bad)
cmp
ffreep
call
iret
test
jmp
loop
push
bnd
adc
cli
repz
add
add
add
add
(bad)
cli
add
clc
test
in
add
(bad)
cld
add
cld
test
(bad)
sti
add
(bad)
cli
add
(bad)
clc
add
mov
add
repnz
hlt
cmc
dec
(bad)
bnd
call
clc
js
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
add
in
fild
std
(bad)
inc
(bad)
(bad)
(bad)
js
loopne
js
int
js
xlat
out
mov
repnz
js
stc
jmp
div
loop
lock
div
in
xchg
out
in
call
jmp
fidivr
jmp
jecxz
iret
in
out
cli
jne
lock
jp
hlt
repnz
div
add
jmp
add
(bad)
(bad)
inc
add
add
repz
loop
ins
pushf
mov
add
mov
stos
mov
add
into
std
inc
mov
(bad)
(bad)
cmp
mov
jmp
test
enter
xlat
aad
iret
aam
xor
xchg
mov
push
mov
push
mov
jmp
mov
(bad)
cmp
mov
popa
xchg
mov
popf
mov
aam
jmp
out
(bad)
(bad)
out
add
cmc
jmp
(bad)
push
mov
push
rcr
sub
lods
retf
rcr
retf
clc
cmp
(bad)
call
(bad)
call
(bad)
(bad)
call
add
add
(bad)
(bad)
inc
out
in
in
out
add
icebp
repz
dec
mov
sub
add
mov
mov
ins
fdiv
(bad)
pop
out
sti
stc
or
in
add
clc
add
mov
and
mov
adc
inc
imul
add
idiv
add
stc
cli
add
cli
add
iret
inc
gs
ret
(bad)
(bad)
(bad)
jmp
call
bnd
call
mov
(bad)
cld
and
(bad)
cli
add
jmp
pusha
pushf
(bad)
jge
ret
in
(bad)
in
call
jmp
push
cli
clc
repnz
out
jecxz
hlt
lock
add
pop
add
mov
inc
mov
retf
mov
jmp
in
(bad)
call
in
dec
loop
add
loopne
fwait
mov
loop
outs
movs
inc
test
inc
mov
(bad)
cld
add
stc
inc
mov
clc
inc
mov
clc
inc
movs
cli
inc
stos
cld
inc
mov
sti
pop
mov
sar
call
push
test
into
sti
cdq
(bad)
(bad)
(bad)
xor
(bad)
inc
mov
push
shl
std
or
jmp
xchg
cld
loope
mov
div
in
loope
in
call
fiadd
add
add
repnz
inc
(bad)
(bad)
inc
mov
fild
ret
arpl
stc
mov
(bad)
sti
pop
mov
fdivrp
add
(bad)
inc
fcos
inc
xchg
(bad)
std
add
inc
test
inc
mov
(bad)
inc
(bad)
inc
into
(bad)
inc
sar
inc
aad
inc
fdivr
inc
sar
dec
ret
(bad)
inc
lods
(bad)
inc
mov
stc
inc
mov
(bad)
(bad)
(bad)
cld
jmp
jge
ficomp
loope
daa
in
cli
std
add
retf
inc
(bad)
(bad)
(bad)
xor
(bad)
dec
mov
cld
sbb
jmp
(bad)
scas
(bad)
in
(bad)
mov
ffree
add
mov
mov
pop
push
xchg
mov
std
addr16
(bad)
inc
out
call
mov
aad
add
in
inc
je
(bad)
adc
call
repz
push
enter
mov
fsin
or
mov
add
mov
adc
sar
mov
in
(bad)
(bad)
inc
mov
inc
pushf
cli
sti
push
mov
(bad)
clc
out
fcom
js
stos
add
mov
add
jecxz
dec
lea
jmp
(bad)
(bad)
dec
fsub
inc
scas
iret
dec
(bad)
inc
mov
movs
(bad)
fcmovu
fdivr
(bad)
mov
aad
scas
stos
aad
stos
mov
add
add
(bad)
inc
mov
out
mov
int3
mov
mov
in
repnz
and
(bad)
dec
(bad)
inc
js
dec
mov
sar
mov
jecxz
add
add
inc
cmp
add
fdivr
add
mov
inc
pop
xchg
call
mov
inc
(bad)
(bad)
cld
sbb
(bad)
ficom
xchg
cmps
sub
mov
inc
js
std
call
inc
ret
es
mov
dec
cli
inc
(bad)
cli
or
fst
test
xlat
push
out
(bad)
and
aad
cli
add
add
lods
int3
loopne
mov
shl
je
mov
clc
stc
push
in
cmc
dec
mov
call
out
idiv
add
ja
inc
fsubr
dec
stos
loopne
or
(bad)
add
sti
inc
sar
inc
sar
inc
sar
inc
sar
inc
sar
inc
ret
add
mov
call
movs
(bad)
fcos
stc
pop
mov
rol
int3
aam
scas
inc
test
sti
add
idiv
cmp
cld
push
(bad)
(bad)
inc
in
hlt
std
inc
nop
lods
push
aad
pop
fsub
in
mov
(bad)
loop
ret
add
add
add
jle
ret
jne
xchg
ret
cli
(bad)
clc
daa
stc
(bad)
inc
lock
inc
mov
fdivr
or
int3
call
(bad)
(bad)
call
popf
(bad)
inc
mov
(bad)
inc
sar
inc
sar
inc
iret
cld
inc
iret
std
inc
int3
cld
inc
int
inc
leave
std
inc
leave
cld
inc
into
(bad)
inc
into
(bad)
inc
stos
in
add
stos
inc
cmps
(bad)
inc
int
cld
test
cmc
fild
ror
add
fdivr
dec
mov
(bad)
ds
inc
jmp
inc
fucomp
inc
rcr
(bad)
cld
cli
cmc
add
loopne
add
in
push
fcmovbe
mov
leave
rcl
out
cld
add
mov
(bad)
(bad)
sub
push
add
(bad)
inc
repz
inc
out
inc
popf
(bad)
add
idiv
or
jns
inc
(bad)
inc
sar
inc
sar
inc
sar
inc
xlat
(bad)
inc
xlat
std
inc
xlat
(bad)
inc
(bad)
std
inc
aam
inc
aam
inc
sar
inc
leave
cld
inc
(bad)
sti
inc
sar
inc
retf
add
popf
(bad)
(bad)
adc
repnz
into
mov
ret
(bad)
(bad)
adc
add
inc
scas
icebp
inc
(bad)
inc
mov
popf
jmp
jmp
(bad)
aad
add
call
loopne
stc
clc
repz
add
add
fsubr
sti
add
jmp
std
and
mov
cld
or
sti
dec
mov
stos
dec
xchg
(bad)
jg
inc
(bad)
inc
(bad)
std
inc
fdivr
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
(bad)
inc
xlat
std
inc
sar
inc
iret
std
inc
(bad)
cld
inc
int3
(bad)
inc
mov
test
(bad)
and
mov
push
(bad)
iret
dec
mov
inc
sar
add
mov
mov
cld
out
call
mov
repnz
fistp
aad
cmps
ret
mov
fcmovbe
mov
add
add
retf
add
retf
(bad)
inc
sti
test
(bad)
jmp
rcr
out
outs
test
dec
jno
inc
xchg
inc
mov
inc
mov
clc
inc
(bad)
inc
(bad)
inc
(bad)
inc
loop
inc
in
inc
in
inc
out
inc
out
inc
out
inc
out
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
iret
(bad)
inc
(bad)
cld
inc
xlat
(bad)
dec
(bad)
iret
dec
xchg
sar
sar
std
add
cld
add
idiv
add
(bad)
(bad)
adc
(bad)
inc
(bad)
loope
cs
(bad)
jmp
(bad)
push
in
(bad)
(bad)
(bad)
(bad)
(bad)
call
ficom
loope
lds
in
retf
add
jmp
add
add
fwait
ret
(bad)
(bad)
std
add
(bad)
rol
mov
js
mov
sbb
scas
call
(bad)
cli
xchg
repz
(bad)
cmp
(bad)
inc
(bad)
cld
inc
(bad)
inc
loop
inc
in
inc
out
inc
jmp
(bad)
inc
jmp
inc
jmp
inc
jmp
add
std
inc
loop
inc
(bad)
inc
fdivr
inc
(bad)
(bad)
inc
into
cld
inc
fdivr
inc
mov
dec
pop
xchg
call
(bad)
lock
pushf
int
add
loope
dec
(bad)
(bad)
inc
(bad)
std
dec
xchg
mov
cld
imul
jmp
repz
jmp
(bad)
jne
ffreep
(bad)
stc
stc
bnd
(bad)
dec
(bad)
(bad)
inc
add
add
cli
stc
add
(bad)
inc
jbe
mov
mov
cdq
add
(bad)
(bad)
cld
idiv
stc
call
(bad)
inc
repz
inc
call
sti
inc
in
(bad)
inc
cmc
(bad)
inc
out
(bad)
inc
out
std
inc
out
(bad)
inc
out
(bad)
inc
out
(bad)
inc
in
std
inc
jmp
add
sti
inc
loope
inc
(bad)
inc
fdivr
dec
shr
pop
jge
inc
popf
dec
(bad)
jmp
add
(bad)
inc
xchg
(bad)
inc
mov
add
mov
mov
out
aam
out
fnstsw
(bad)
jmp
(bad)
std
jno
div
add
div
add
add
add
jecxz
add
add
add
(bad)
dec
mov
fdivr
enter
(bad)
jmp
adc
push
cmc
cli
inc
(bad)
(bad)
inc
cmc
sti
call
aam
inc
cli
inc
repz
inc
repnz
inc
repnz
inc
icebp
(bad)
inc
icebp
(bad)
inc
out
std
inc
in
(bad)
inc
clc
(bad)
inc
out
inc
fdivrp
inc
loop
dec
mov
aad
add
idiv
add
(bad)
inc
mov
inc
mov
out
inc
mov
inc
jmp
inc
(bad)
mov
call
in
mov
hlt
in
ss
imul
add
(bad)
inc
std
(bad)
sti
add
out
add
std
in
or
cmp
out
(bad)
(bad)
scas
sti
std
dec
mov
cmp
or
pop
pop
dec
daa
sub
and
dec
idiv
add
(bad)
inc
clc
cld
inc
cmc
cld
inc
cmc
std
inc
cmc
std
inc
idiv
inc
lock
dec
enter
idiv
inc
in
(bad)
inc
fdivrp
inc
fdivr
inc
jecxz
inc
into
(bad)
inc
ret
add
cli
inc
mov
inc
lods
(bad)
inc
mov
stc
add
popf
mov
jae
lods
add
add
add
(bad)
inc
jl
rol
mov
int
inc
lea
inc
(bad)
(bad)
call
hlt
(bad)
dec
repz
inc
movs
lods
call
or
inc
std
(bad)
inc
sti
std
inc
std
(bad)
inc
cld
(bad)
inc
cld
(bad)
inc
idiv
inc
(bad)
(bad)
dec
fcmovu
dec
sbb
dec
sti
dec
jmp
dec
int3
jmp
add
(bad)
std
inc
sar
add
sti
inc
movs
idiv
add
call
scas
push
sub
jmp
add
repz
(bad)
sti
add
add
mov
rcl
inc
mov
(bad)
scas
(bad)
(bad)
dec
in
inc
in
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
std
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
std
(bad)
inc
(bad)
(bad)
inc
cld
(bad)
inc
idiv
inc
cli
cld
dec
mov
call
pop
and
call
cmp
or
repnz
int
inc
ret
add
sti
inc
lods
stc
inc
lods
(bad)
stc
or
sar
pop
xchg
mov
dec
and
ret
add
fninit
add
fsub
add
mov
add
hlt
retf
xchg
mov
call
out
sti
inc
jmp
add
cli
inc
icebp
stc
inc
cmc
stc
inc
cld
std
dec
(bad)
(bad)
call
std
(bad)
call
std
std
call
std
std
call
std
std
inc
(bad)
(bad)
inc
cld
(bad)
inc
stc
(bad)
inc
(bad)
(bad)
dec
cmc
sti
call
test
cdq
call
sahf
cmps
dec
into
(bad)
add
(bad)
inc
retf
add
std
inc
mov
cli
inc
lods
stc
inc
scas
std
std
add
xchg
stos
jecxz
int
cmps
movs
ret
shl
call
add
jecxz
add
add
add
mov
mov
dec
sbb
mov
(bad)
inc
out
inc
jmp
inc
icebp
sti
inc
clc
cld
inc
(bad)
(bad)
inc
std
(bad)
call
std
cld
jmp
std
jmp
(bad)
cld
call
cld
(bad)
call
std
(bad)
inc
cld
inc
repnz
inc
hlt
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
loop
inc
sar
inc
int3
(bad)
inc
(bad)
add
inc
test
(bad)
inc
jns
jmp
xchg
inc
(bad)
mov
jb
iret
fld
xchg
mov
add
fucomip
test
add
add
(bad)
call
lods
ret
sbb
mov
(bad)
jmp
std
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
cli
(bad)
inc
std
(bad)
call
std
(bad)
cmp
std
std
jmp
cld
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
hlt
clc
inc
out
sti
inc
jmp
cli
inc
(bad)
inc
(bad)
inc
sar
inc
int3
(bad)
inc
(bad)
add
std
inc
mov
dec
push
aam
pop
cdq
lods
stc
pop
cdq
lods
fcom
retf
in
cmc
test
jecxz
cli
add
fsub
add
fsubp
add
gs
inc
popf
mov
dec
xchg
movs
call
bound
or
dec
cmp
call
aas
inc
call
cli
sti
jmp
std
std
jmp
std
std
jmp
std
std
dec
(bad)
(bad)
dec
out
inc
(bad)
(bad)
inc
std
(bad)
inc
icebp
std
inc
in
inc
loopne
inc
fdivr
inc
sar
inc
retf
add
(bad)
inc
leave
(bad)
inc
mov
call
mov
call
(bad)
mov
(bad)
cmp
ror
test
stc
add
(bad)
sti
add
leave
ror
(bad)
mov
mov
cmp
outs
(bad)
sbb
and
or
inc
inc
dec
cmp
dec
lea
dec
cli
jmp
cli
sti
jmp
cld
cld
jmp
std
cld
call
cld
inc
(bad)
(bad)
call
fdivr
or
sbb
call
(bad)
or
(bad)
inc
std
(bad)
inc
hlt
(bad)
inc
(bad)
inc
fdivr
inc
sar
inc
hlt
call
mov
xchg
(bad)
cmp
xchg
inc
mov
(bad)
jle
mov
jmp
repnz
add
test
add
std
cli
add
rcr
add
retf
sar
stos
fsub
cli
inc
mov
cmp
ret
call
loop
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
dec
and
dec
add
or
or
dec
aas
aas
dec
jns
inc
idiv
adc
movs
jmp
outs
test
inc
sbb
jne
ret
(bad)
cmp
jg
(bad)
movs
leave
aad
jmp
cmc
test
sti
inc
std
(bad)
sti
add
mov
add
scas
rol
out
lock
mov
mov
(bad)
aas
sbb
sub
xchg
jmp
fwait
stos
jmp
scas
mov
call
loopne
or
lock
repz
out
icebp
inc
icebp
cmc
call
lock
call
test
dec
pusha
imul
adc
jmp
inc
push
(bad)
cmp
(bad)
cmp
(bad)
dec
mov
inc
aad
push
mov
stc
push
mov
dec
push
pushf
scas
add
in
sti
add
(bad)
sti
add
mov
mov
mov
leave
sar
loop
(bad)
stc
xlat
(bad)
clc
jmp
test
dec
stos
(bad)
aas
jle
(bad)
cmp
ins
mov
aas
jno
push
jbe
push
jl
push
xchg
push
jg
push
adc
cmp
sbb
xchg
dec
jmp
inc
aam
call
int3
sar
outs
mov
call
lods
mov
pop
cwde
mov
mov
add
inc
retf
add
fsub
addr16
(bad)
sar
retf
div
cli
int3
hlt
icebp
(bad)
(bad)
std
idiv
aad
idiv
ret
jmp
leave
call
mov
dec
mov
(bad)
cmp
jg
(bad)
cmp
(bad)
cmp
cdq
(bad)
cmp
aas
sbb
jmp
mov
call
rcl
call
sar
xchg
int
dec
lods
mov
cli
je
mov
int3
fcmovnu
push
retf
add
add
add
(bad)
inc
rcr
jecxz
call
ret
iret
call
fdivr
cld
std
enter
int3
hlt
repnz
sar
cmc
(bad)
fdivr
cli
call
(bad)
cli
call
div
(bad)
mov
(bad)
jmp
iret
xlat
call
rcr
call
rcr
jmp
in
dec
hlt
hlt
jmp
into
aam
xchg
into
aam
nop
int3
sar
nop
int3
sar
mov
sar
cdq
rcr
push
mov
inc
scas
ret
(bad)
call
add
add
in
repnz
add
add
cli
stc
add
mov
add
ins
cmps
mov
retf
repz
cld
sar
hlt
std
retf
hlt
repnz
cmc
repnz
hlt
icebp
dec
hlt
icebp
dec
div
call
sti
idiv
aad
idiv
xlat
(bad)
stc
(bad)
(bad)
cli
(bad)
(bad)
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
call
std
stc
call
cli
idiv
aam
idiv
enter
(bad)
retf
sar
(bad)
retf
sar
xchg
int
call
retf
sar
xchg
rcl
call
mov
xchg
int
jl
leave
sti
outs
cmps
mov
mov
xlat
fiadd
(bad)
(bad)
sti
add
add
add
(bad)
xchg
xchg
mov
retf
sti
(bad)
sti
stc
leave
repz
dec
cmc
repnz
div
dec
cmc
repnz
cmc
repnz
hlt
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
repz
dec
div
dec
cmc
hlt
call
retf
xchg
int
dec
iret
aam
mov
sar
pop
pushf
mov
sahf
xlat
(bad)
ja
ret
popf
scas
movs
push
xchg
cmps
add
lods
add
(bad)
cld
add
mov
add
(bad)
dec
jno
mov
mov
(bad)
(bad)
std
(bad)
repnz
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
div
dec
div
dec
div
dec
div
dec
cmc
repnz
div
dec
cmc
hlt
call
retf
xchg
int
dec
rcl
(bad)
jge
leave
dec
cmps
dec
stos
mov
scas
xchg
mov
add
(bad)
sti
add
repnz
jmp
hlt
jnp
mov
out
xlat
std
clc
dec
repz
dec
div
dec
cmc
repnz
div
dec
div
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repz
div
dec
cmc
repnz
div
dec
repnz
call
retf
sar
xchg
int3
sar
nop
int3
sar
xchg
rcl
jmp
mov
(bad)
push
mov
(bad)
rcr
in
rcl
add
repz
add
add
add
test
sub
add
mov
movs
mov
aad
clc
clc
sar
hlt
dec
hlt
icebp
call
clc
cmc
dec
div
dec
repnz
repz
dec
repz
dec
div
call
clc
hlt
dec
div
dec
cmc
repnz
cmc
repnz
hlt
icebp
dec
div
inc
out
out
dec
int3
sar
(bad)
int3
sar
xchg
rcl
dec
jle
(bad)
gs
(bad)
jp
(bad)
std
dec
xchg
cmps
icebp
fwait
ror
sub
cwde
mov
retf
mov
add
test
dec
div
stc
sar
clc
cli
mov
fcmovu
cli
lahf
fcomp
std
popf
(bad)
(bad)
lahf
xlat
fdivr
test
in
inc
icebp
icebp
call
clc
hlt
call
div
call
div
call
cld
stc
push
(bad)
iret
call
iret
aam
mov
sar
push
cwde
lods
push
mov
std
pop
mov
(bad)
(bad)
inc
add
add
(bad)
add
jmp
add
cld
std
add
(bad)
sbb
retf
ror
xchg
ror
mov
mov
arpl
call
lods
inc
movs
call
mov
fs
mov
call
loopne
(bad)
mov
jmp
xlat
call
int3
sar
xchg
int
dec
ret
int
movs
fucom
std
add
test
dec
popf
mov
rol
std
(bad)
sti
add
jmp
add
loop
out
out
push
mov
fdivr
ror
cwde
mov
(bad)
inc
test
mov
push
mov
push
sar
mov
inc
sar
xchg
iret
(bad)
call
iret
(bad)
call
mov
mov
xchg
mov
les
nop
mov
out
mov
xlat
loopne
mov
fisttp
jmp
retf
(bad)
add
(bad)
call
(bad)
call
(bad)
(bad)
call
sti
stc
cli
xchg
mov
mov
mov
cld
push
mov
push
(bad)
jns
(bad)
mov
call
mov
dec
(bad)
cmps
cld
cwde
mov
jmp
cli
sti
push
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
inc
mov
add
in
sub
dec
mov
(bad)
push
add
(bad)
inc
(bad)
push
add
imul
add
scas
add
mov
xor
mov
in
int3
aam
fcmove
(bad)
(bad)
(bad)
push
icebp
fild
(bad)
stc
jmp
add
div
add
add
jmp
fld
lock
repnz
loope
std
(bad)
sti
add
es
xchg
in
add
enter
mov
aam
rcl
xor
out
or
out
lock
pop
mov
fcom
shr
bound
iret
shr
aam
push
jmp
hlt
les
cmc
out
jecxz
ror
mov
repnz
in
lods
rcr
mov
jecxz
ds
inc
jns
test
add
std
mov
les
add
add
lods
(bad)
fld
pop
xchg
mov
add
mov
dec
idiv
add
into
inc
pop
push
dec
mov
inc
(bad)
(bad)
add
inc
xchg
jmp
jns
call
jmp
add
jecxz
pushf
push
test
cld
xor
icebp
cld
add
out
add
mov
mov
(bad)
(bad)
test
test
(bad)
(bad)
cld
add
test
ret
stos
retf
fild
in
cli
pop
(bad)
sti
add
sar
mov
inc
stos
sti
inc
mov
(bad)
sti
add
(bad)
cld
add
(bad)
sti
add
sti
add
into
idiv
(bad)
dec
lea
(bad)
sub
jmp
cld
dec
in
cmc
cli
add
cwde
mov
(bad)
mov
in
cwde
out
retf
idiv
add
(bad)
fild
je
rol
fucomp
push
stc
cld
sti
add
out
pop
jnp
dec
xchg
sar
add
fdivr
or
ret
inc
cwde
(bad)
dec
stos
sar
movsx
inc
mov
cli
push
mov
(bad)
(bad)
cld
fldcw
jbe
jbe
lods
in
cmp
sti
cld
call
fucomip
jmp
(bad)
(bad)
add
ret
mov
mov
aad
test
pop
lahf
mov
loopne
xchg
(bad)
fdiv
jl
repnz
push
fsubr
dec
cld
inc
cwde
retf
inc
retf
call
jecxz
adc
mov
inc
mov
inc
scas
call
inc
cmp
or
push
jge
adc
cmp
or
mov
std
std
add
idiv
pop
mov
repz
loope
add
fidivr
inc
xor
jo
loopne
cmp
push
add
fdivrp
pop
mov
fdivr
adc
jmp
iret
(bad)
inc
aad
inc
fdivr
inc
aam
inc
sar
inc
sar
inc
sar
inc
shl
push
xchg
inc
pushf
retf
(bad)
fdivrp
mov
jmp
test
adc
inc
out
stc
and
enter
mov
mov
jecxz
(bad)
fwait
test
into
fiadd
(bad)
and
iret
ficom
retf
out
add
(bad)
std
pop
mov
sar
or
jmp
aad
inc
fdivr
inc
fscale
inc
xlat
std
inc
aad
inc
sar
inc
int3
(bad)
inc
(bad)
(bad)
inc
(bad)
retf
mov
fdivr
scas
ret
(bad)
in
and
(bad)
mov
mov
push
jmp
(bad)
retf
in
dec
div
(bad)
(bad)
fld
cmps
(bad)
fld
(bad)
in
add
out
add
loop
pop
xchg
mov
scas
sub
inc
test
inc
fdivrp
inc
fdivr
inc
jecxz
inc
in
inc
in
inc
in
inc
loopne
inc
(bad)
inc
(bad)
cld
inc
retf
add
(bad)
dec
xchg
leave
inc
mov
inc
test
inc
in
(bad)
inc
cmc
jmp
mov
std
loope
retf
push
jmp
les
jnp
pop
or
shr
add
(bad)
inc
xor
out
sub
inc
(bad)
inc
loop
inc
out
(bad)
inc
out
(bad)
inc
jmp
inc
in
(bad)
inc
in
std
inc
call
cld
inc
(bad)
inc
aad
inc
aad
inc
mov
dec
mov
(bad)
inc
shr
sti
jb
mov
lahf
lock
ins
jmp
int
cmc
imul
pop
rcl
retf
add
call
add
rcl
add
out
add
in
add
loopne
cmp
stos
sar
ret
std
(bad)
std
or
inc
xchg
mov
inc
(bad)
dec
loopne
inc
repz
inc
icebp
cld
inc
icebp
(bad)
inc
in
std
inc
cmc
(bad)
inc
icebp
(bad)
inc
(bad)
inc
mov
into
inc
cmc
inc
mov
fdivr
add
mov
aam
jecxz
(bad)
out
out
in
repz
(bad)
(bad)
inc
mov
mov
cmp
scas
aam
mov
fucomip
inc
pop
pusha
call
push
pop
dec
int
inc
(bad)
(bad)
inc
idiv
inc
cmc
sti
inc
sti
(bad)
inc
mov
mov
inc
loope
inc
(bad)
add
(bad)
inc
mov
cli
or
fdivr
jae
cmps
pop
jne
cmps
add
add
ins
add
add
add
ret
add
mov
cmp
(bad)
(bad)
stos
std
(bad)
std
inc
out
(bad)
inc
cld
(bad)
dec
out
inc
sti
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sti
cld
inc
cld
(bad)
inc
iret
sar
cmovl
adc
call
outs
dec
(bad)
cmps
inc
aam
inc
mov
clc
inc
stos
std
stc
push
xchg
fdivr
pop
mov
add
mov
je
rol
jo
add
(bad)
sti
add
add
mov
aas
xor
(bad)
cld
ds
inc
out
inc
idiv
inc
std
(bad)
dec
cld
std
call
std
(bad)
call
cld
std
call
(bad)
(bad)
inc
sti
std
inc
(bad)
(bad)
dec
repnz
call
scas
mov
adc
jmp
inc
sar
add
(bad)
std
add
mov
xchg
mov
(bad)
push
ret
fucom
add
add
add
ret
(bad)
fnsave
xchg
mov
jbe
idiv
push
stc
(bad)
inc
cli
(bad)
inc
clc
cli
call
(bad)
(bad)
jmp
std
cld
call
std
std
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
repz
inc
idiv
inc
lock
inc
(bad)
inc
retf
add
sti
inc
mov
idiv
and
scas
std
sub
(bad)
sbb
iret
fld
cmc
(bad)
inc
lods
int
add
xchg
movs
jmp
addr16
add
inc
inc
call
add
sub
clc
push
sti
sti
call
std
dec
in
out
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
lock
inc
fdivr
inc
sar
inc
retf
(bad)
dec
jne
jmp
cld
jnp
sar
xchg
stos
jb
jl
add
movs
add
add
add
(bad)
clc
add
loop
adc
(bad)
shl
outs
lods
mov
cld
and
(bad)
adc
mov
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
loop
dec
inc
inc
inc
lods
inc
fdivr
dec
lods
iret
jmp
test
jmp
dec
stos
std
addr16
mov
mov
loopne
mov
loope
add
add
add
(bad)
sti
add
xchg
add
cmps
add
lods
xor
out
push
cdq
scas
jmp
nop
mov
jmp
mov
call
int3
aam
push
aam
call
aam
call
mov
jno
adc
push
call
inc
push
push
movs
(bad)
aas
jnp
jmp
stos
inc
enter
mov
(bad)
ins
test
(bad)
jbe
int
cmp
lds
std
(bad)
sti
add
out
add
fsub
cmp
(bad)
sti
sti
(bad)
out
in
(bad)
popf
into
(bad)
(bad)
jns
mov
inc
xchg
(bad)
cmp
(bad)
cmp
push
jne
push
mov
call
jmp
mov
call
xlat
(bad)
jle
(bad)
cli
cmp
mov
add
add
add
ret
mov
add
outs
add
in
call
sti
idiv
aad
idiv
aad
cli
dec
div
push
fsub
jmp
xlat
(bad)
mov
(bad)
fdivr
mov
out
call
iret
aam
mov
sar
nop
int3
sar
jno
mov
(bad)
sahf
ret
ror
add
add
add
add
(bad)
inc
bound
les
pop
sbb
repnz
idiv
leave
repz
retf
dec
div
call
cli
idiv
aad
idiv
xlat
std
clc
call
std
clc
call
std
clc
call
sti
idiv
sar
idiv
retf
call
retf
sar
xchg
iret
aam
test
int3
(bad)
je
ret
mov
lods
addr16
jge
add
mov
repnz
add
retf
add
fcmovu
call
(bad)
stc
stc
leave
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
repz
dec
repz
dec
repz
dec
repz
cmc
repnz
repnz
call
sar
xchg
rcl
(bad)
jge
(bad)
jmp
mov
cmp
push
movs
ror
mov
add
add
out
add
int3
add
mov
mov
out
fdivr
stc
stc
sar
cmc
cld
sar
cmc
cld
iret
div
call
stc
cmc
(bad)
sar
cmc
dec
div
dec
hlt
icebp
dec
div
inc
lock
call
retf
sar
xchg
rcl
(bad)
pop
call
ins
test
out
(bad)
fisubr
lock
repz
sti
stc
add
add
add
loop
pop
fwait
lods
add
test
push
nop
cmps
adc
mov
push
rcr
call
into
aad
movs
(bad)
(bad)
mov
cmc
repz
cld
clc
(bad)
mov
enter
rcl
(bad)
jns
(bad)
mov
cld
add
mov
adc
dec
jns
cld
std
std
add
(bad)
loope
push
xchg
cmps
add
test
add
rcr
mov
jl
mov
call
scas
(bad)
arpl
sar
(bad)
iret
call
retf
sar
(bad)
int3
sar
xchg
into
aam
nop
int3
sar
nop
int3
sar
outs
test
mov
add
div
add
mov
mov
ret
clc
stc
add
(bad)
dec
hlt
stc
sti
(bad)
in
lock
call
mov
mov
jno
mov
inc
ret
push
fwait
scas
call
std
inc
lock
add
in
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
jmp
leave
aad
add
jmp
add
rcl
(bad)
push
fcmovbe
retf
inc
repz
ins
clc
in
rcl
loop
(bad)
xchg
(bad)
aad
cs
loop
add
(bad)
add
(bad)
inc
jp
mov
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
rol
iret
iret
lea
(bad)
and
ret
ror
icebp
out
mov
mov
mov
pop
fs
inc
shr
sti
push
sahf
sar
add
stos
loop
add
(bad)
and
mov
fcomi
xor
(bad)
(bad)
fwait
test
stos
nop
cdq
mov
lds
int3
in
add
in
add
cld
sti
add
std
inc
(bad)
(bad)
inc
enter
test
shl
dec
lods
shr
push
mov
inc
rol
je
fadd
fs
fwait
ret
mov
(bad)
(bad)
adc
jecxz
add
repnz
in
cld
inc
jmp
add
(bad)
inc
popf
fdivr
add
int
jmp
retf
jmp
xor
fld
push
stos
shr
out
clc
dec
mov
inc
sti
cld
inc
stc
std
inc
mov
mov
cld
add
loopne
mov
ja
test
test
add
xchg
mov
inc
pushf
mov
jnp
into
loopne
add
jmp
pop
div
jmp
(bad)
(bad)
call
(bad)
inc
repnz
dec
(bad)
in
add
cld
inc
mov
int3
cld
xchg
mov
add
mov
add
mov
jne
pop
mov
call
loope
inc
pushf
stos
dec
mov
(bad)
cmp
mov
jb
mov
add
mov
scas
int
add
mov
pop
mov
in
std
jle
enter
mov
push
lods
mov
jmp
mov
(bad)
xchg
enter
mov
shl
mov
add
iret
xlat
add
lods
mov
(bad)
fdivrp
cld
(bad)
(bad)
stc
(bad)
fsqrt
idiv
fdivr
sti
dec
(bad)
sti
call
ror
jbe
shl
ret
rcr
movs
mov
rol
pushf
ror
cmps
mov
les
jle
mov
jg
loop
imul
(bad)
(bad)
mov
out
call
mov
push
mov
add
div
add
add
add
icebp
call
add
rcr
addr16
mov
shr
mov
retf
leave
sar
cmp
push
imul
cld
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
ins
xor
add
add
mov
add
into
adc
add
or
inc
cli
adc
add
or
push
imul
add
add
jno
add
ins
je
add
add
inc
dec
inc
cmp
popa
pop
add
xchg
add
add
add
inc
add
add
and
add
inc
arpl
and
add
fsub
add
aas
popa
xor
adc
adc
push
(bad)
mov
jo
jmp
xchg
dec
add
add
sbb
mov
lods
lock
shr
mov
add
dec
int
leave
sub
sub
imul
jecxz
xchg
xchg
or
or
movs
jo
add
pop
cmp
cmp
js
icebp
icebp
dec
add
inc
and
pop
test
add
add
jno
or
mov
sub
sub
push
movs
movs
out
loope
jns
sbb
sbb
add
sbb
sub
daa
leave
push
movs
mov
push
xchg
cmp
ss
jne
out
out
sbb
mov
ror
pop
add
add
add
inc
addr16
loope
fsub
push
xchg
nop
nop
ss
repnz
in
xchg
dec
add
add
sbb
test
push
push
cs
jmp
cwde
mov
pop
pop
pop
ds
cli
cmc
cmc
dec
sub
dec
dec
dec
stos
pop
add
add
je
mov
das
sbb
out
jl
sbb
add
inc
and
sar
data16
adc
mov
ror
int
or
enter
mov
xor
cmp
ins
cmp
inc
inc
inc
bound
adc
mov
frstpm(287
ja
nop
lea
jno
lock
push
or
push
sub
xor
add
jg
aad
add
dec
mov
cmp
jp
repz
daa
add
add
jb
or
add
jnp
sbb
sbb
add
add
pop
push
push
xchg
dec
add
das
das
jno
outs
in
out
popf
call
add
add
add
adc
adc
retf
or
or
sbb
ret
ret
mov
rol
pop
pop
pop
pop
pop
mov
mov
iret
iret
push
push
push
scas
stos
stos
retf
fcmovnbe
xlat
(bad)
fcmovb
mov
(bad)
sbb
add
add
add
sbb
repz
cli
add
add
push
add
(bad)
add
and
and
inc
xor
xor
jmp
xchg
div
repnz
sub
loop
cmps
mov
jp
ja
mov
inc
inc
jecxz
fidiv
ss
out
push
push
push
das
cs
out
div
dec
dec
dec
pop
push
push
mov
(bad)
jbe
jae
outs
outs
sahf
fwait
fwait
loope
add
outs
add
add
push
add
push
add
imul
stc
add
or
inc
sub
add
add
inc
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
dec
mov
aad
pop
mov
(bad)
mov
xlat
scas
pusha
ret
mov
sub
test
imul
sub
ret
and
dec
adc
xor
pop
mov
jl
and
or
mov
or
add
fisub
push
xor
sbb
pop
and
das
and
scas
mov
loopne
nop
sbb
lds
inc
adc
lods
sub
fcmove
or
iret
sbb
fwait
rcr
cmp
mov
popa
lahf
js
ins
or
popa
sbb
push
iret
pop
push
xchg
dec
adc
mov
jge
lea
enter
mov
xor
nop
lock
retf
mov
cmp
push
dec
inc
cmp
loope
cmp
aaa
or
add
and
js
nop
push
mov
add
adc
lds
pushf
push
into
push
add
lods
rol
xchg
pop
rol
push
mov
jecxz
(bad)
mov
test
sub
(bad)
push
sbb
not
inc
les
pop
xor
les
add
test
sbb
push
rol
xchg
in
daa
xchg
add
adc
lds
icebp
pushf
inc
cwde
popa
icebp
lods
add
add
sub
or
jbe
inc
pop
mov
add
mov
popf
or
mov
movs
xor
add
add
or
xchg
ror
sub
leave
nop
cs
sbb
or
xchg
add
test
push
cmp
or
dec
and
jmp
dec
pop
test
push
xor
or
push
cmp
ud2
or
or
push
pop
lods
lods
or
adc
and
sbb
adc
inc
cmp
sub
fdivr
pop
mov
inc
pushf
icebp
sub
nop
or
push
add
imul
test
xor
xchg
shl
out
clc
ror
into
mov
and
sbb
jmp
loopne
inc
loope
cli
xor
mov
jno
jp
lds
add
mov
stc
adc
mov
js
pop
lahf
into
ss
mov
scas
xor
jecxz
inc
pop
sbb
sub
rcr
jg
inc
dec
lods
outs
and
retf
add
and
into
push
popa
dec
mov
add
xchg
push
or
lods
aaa
call
add
push
lods
push
mov
adc
ficom
adc
adc
mov
dec
inc
mov
push
cmp
add
xchg
or
leave
in
add
outs
mov
mov
adc
xchg
adc
retf
jno
ss
xchg
or
xchg
jp
dec
mov
sbb
add
sahf
add
jmp
pop
retf
test
add
add
or
sbb
jnp
mov
cmp
and
jnp
mov
leave
mov
inc
aam
cmp
movs
mov
ror
adc
xchg
lea
adc
sub
inc
add
push
shr
and
jo
xchg
outs
outs
lock
and
dec
pusha
and
add
(bad)
shl
(bad)
push
inc
cmp
sub
mov
sub
rcr
lock
cmc
or
add
ror
inc
retf
rcl
or
and
xchg
jns
bound
dec
inc
add
xchg
sbb
pop
sbb
push
mov
icebp
mov
outs
mov
jb
cwde
adc
rol
push
or
and
and
rol
ror
lds
inc
movs
mov
cmp
mov
popa
jbe
mov
(bad)
sar
mov
ret
mov
or
or
and
shl
aad
and
fmul
pusha
inc
test
add
loopne
daa
push
adc
cs
xchg
and
popa
sub
stos
xchg
pop
or
sbb
mov
add
ficom
dec
(bad)
mov
jmp
icebp
or
clc
shr
add
ror
mov
sub
mov
pop
adc
jno
xor
mov
cmc
or
test
test
(bad)
or
inc
jmp
xor
xchg
mov
je
and
sub
add
call
pop
jmp
lea
(bad)
push
pop
and
pop
add
inc
xchg
or
fcom
jnp
and
xchg
shl
and
add
or
(bad)
xor
push
add
sub
push
dec
loopne
adc
jae
clc
inc
mov
inc
js
mov
pusha
push
test
(bad)
and
loop
shr
dec
adc
sub
hlt
or
cmp
cli
sbb
push
rol
push
in
jno
inc
inc
loopne
rol
(bad)
jo
adc
fisubr
outs
cmp
(bad)
fcom
test
sbb
cmp
loope
cmp
loope
mov
inc
sbb
or
inc
les
sbb
add
push
xor
adc
cmp
test
and
xor
xor
call
mov
shl
dec
xor
sbb
mov
add
push
inc
test
sbb
mov
dec
xor
pop
pop
rcl
pop
sbb
sbb
sbb
sbb
or
ins
sbb
ret
mov
xor
cmp
xchg
cmp
test
add
rcl
add
sub
pusha
mov
lsl
and
and
jo
or
sbb
shr
sub
push
adc
push
nop
dec
add
pop
xchg
xor
fiadd
mov
push
mov
or
adc
cmovs
mov
mov
inc
jge
mov
adc
pop
jns
push
inc
jecxz
str
and
xor
or
into
xor
push
jbe
inc
sbb
clc
and
loopne
jae
ret
xchg
call
xor
test
cmp
jmp
cmp
and
pop
inc
inc
mov
pop
in
or
stos
mov
cmp
adc
mov
jae
nop
and
lock
xor
mov
jle
and
arpl
mov
pop
pcmpgtd
and
mov
mov
adc
pusha
movups
mov
push
add
jb
push
push
add
dec
adc
rol
add
test
and
test
movs
cmc
mov
xor
push
push
and
add
jno
out
mov
jle
or
loopne
push
das
movlps
les
rcl
call
xor
iret
or
or
dec
mov
dec
cs
mov
or
or
xchg
test
add
mov
in
adc
xor
cs
dec
test
push
cmp
mov
scas
test
sbb
mov
cmp
xor
or
or
loop
adc
test
inc
sub
inc
and
mov
jecxz
adc
sbb
jo
stos
add
jle
loopne
add
cmp
ins
or
mov
add
les
or
adc
add
inc
cmp
mov
inc
fdivr
push
pop
jg
cdq
and
lods
push
pop
test
or
xor
clc
jno
lock
push
or
jae
leave
sub
xchg
sub
pop
mov
(bad)
mov
inc
pop
push
xchg
enter
sub
(bad)
xor
loopne
fs
jns
adc
push
rcl
mov
test
mov
ret
mov
or
je
adc
sub
aam
xor
push
or
push
inc
jp
lock
rol
push
in
fiadd
adc
out
pop
hlt
sbb
mov
inc
push
jae
add
or
add
sbb
mov
sub
sbb
xor
mov
mul
push
add
es
aaa
adc
or
popa
or
mov
adc
or
icebp
pusha
push
sbb
push
inc
movs
push
retf
add
imul
dec
ret
adc
nop
ret
xor
mov
sub
or
pusha
dec
mov
adc
and
or
adc
add
xor
or
xchg
adc
aas
adc
xchg
xor
and
adc
jbe
jo
mov
push
inc
push
popa
ret
xor
mov
or
movq
mov
xchg
pop
inc
push
je
ror
pusha
add
jo
mov
add
pusha
add
xlat
push
jmp
adc
inc
lods
ss
add
jo
dec
aad
or
and
xchg
test
add
pusha
aaa
retf
add
sub
push
add
xor
sbb
ror
repz
jo
jo
enter
inc
or
leave
xor
add
nop
mov
mov
sub
lock
loopne
iret
sbb
ret
cmp
test
sub
pop
adc
loope
jmp
push
or
add
dec
and
add
loopne
add
test
adc
adc
push
mul
cmp
or
add
sub
jp
mov
in
jg
add
rcl
jmp
add
lock
push
imul
jno
jb
push
adc
mov
sub
xchg
adc
or
or
adc
fnstenv
or
dec
aaa
adc
push
das
and
xchg
pusha
aaa
loop
movzx
and
pushf
arpl
ss
mov
jecxz
adc
icebp
cmp
or
inc
js
xchg
or
adc
xchg
aam
loope
sbb
loopne
scas
popa
adc
(bad)
shl
xchg
adc
or
test
inc
add
add
push
pop
push
rcl
pusha
xchg
add
or
adc
nop
pop
cmp
pop
sub
or
and
pop
inc
adc
adc
or
adc
mov
or
inc
pop
adc
cmc
adc
adc
sbb
stos
mov
jg
adc
push
mov
outs
loopne
sbb
adc
or
sbb
or
dec
adc
call
scas
pop
adc
xchg
lea
xchg
add
pop
int
pushf
ror
adc
xor
jo
je
popf
fmul
sbb
adc
adc
inc
pop
aam
pop
fcom
adc
out
lahf
cmp
sbb
or
mov
jns
sahf
add
pop
inc
lahf
add
xor
or
sysexit
rol
jno
rol
add
add
mov
rol
fst
add
mov
or
lock
adc
pop
sbb
add
or
nop
bndstx
xor
add
or
add
xor
xlat
adc
aad
bswap
pusha
or
xor
nop
pop
pop
adc
push
xor
shl
sahf
add
pop
xor
or
lock
xor
add
pop
mov
add
loopne
dec
add
xor
mov
pop
jns
movs
jl
adc
add
pusha
or
add
xor
rol
shld
add
adc
dec
adc
jae
movs
movs
and
add
add
add
mov
cmp
cmps
mov
add
stos
movs
cmp
pop
and
in
or
xor
cli
loopne
mov
add
add
add
pusha
or
adc
mov
scas
loopne
xor
add
stos
into
mov
push
adc
mov
add
add
mov
add
pop
(bad)
add
nop
pop
fnstenv
jae
or
add
inc
xor
dec
mov
cli
push
adc
or
xor
mov
or
adc
or
adc
pusha
add
cmp
adc
add
or
jmp
outs
mov
add
adc
mov
jno
or
jg
or
fwait
mov
xchg
pop
jg
or
fwait
adc
and
rol
push
cmp
adc
mov
sbb
mov
jnp
dec
jnp
push
dec
sti
mov
sbb
pop
mov
jnp
pop
fwait
mov
mov
pop
sti
mov
sbb
add
cmp
add
add
adc
add
arpl
or
sbb
add
aaa
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
cmp
inc
sub
add
add
add
popa
cmp
sbb
or
add
ins
je
add
adc
add
inc
cmp
popa
pop
add
xchg
add
add
add
inc
add
add
and
add
inc
bound
and
add
fsub
add
aas
popa
xor
adc
adc
(bad)
mov
jo
jmp
xchg
dec
add
add
sbb
mov
lods
lock
shr
mov
add
dec
int
leave
sub
sub
imul
jecxz
xchg
xchg
or
or
movs
jo
add
pop
cmp
cmp
js
lock
add
inc
and
pop
test
add
add
jno
or
mov
sub
sub
push
movs
movs
out
loope
jns
sbb
sbb
add
sbb
sub
daa
leave
push
movs
mov
push
xchg
cmp
aaa
jns
jbe
out
out
sbb
mov
ror
add
add
inc
inc
inc
addr16
loop
frstor
push
xchg
nop
nop
ss
icebp
in
in
xchg
dec
add
add
sbb
test
push
push
sub
ins
jmp
cwde
mov
pop
pop
pop
ds
cli
cmc
cmc
dec
sub
dec
dec
dec
stos
pop
add
add
je
mov
das
sbb
out
jl
sbb
add
inc
and
sar
data16
adc
mov
ror
int3
or
or
test
leave
(bad)
mov
xor
cmp
ins
cmp
inc
inc
inc
arpl
adc
mov
frstpm(287
ja
nop
lea
jb
lock
push
or
push
sub
xor
add
jg
aad
add
dec
mov
cmp
cmp
jp
repz
daa
add
add
jb
or
add
jnp
sbb
sbb
add
add
pop
push
push
xchg
dec
add
das
das
jo
ins
in
out
popf
call
add
add
add
adc
adc
retf
or
or
sbb
ret
mov
(bad)
rcl
pop
pop
pop
push
push
push
mov
mov
into
into
push
push
push
scas
stos
stos
retf
fcmovbe
(bad)
(bad)
fcmovb
mov
(bad)
sbb
add
add
add
sbb
repz
cli
add
add
push
add
(bad)
add
and
and
inc
xor
xor
jmp
xchg
div
repnz
sub
loop
cmps
mov
jp
ja
mov
inc
inc
jecxz
fidiv
ss
out
push
push
push
das
cs
out
div
dec
dec
dec
pop
push
push
mov
(bad)
jbe
jae
outs
outs
sahf
fwait
fwait
loope
add
outs
add
add
push
add
push
add
imul
stc
add
or
inc
sub
add
add
inc
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
dec
mov
aad
pop
mov
(bad)
mov
xlat
scas
pusha
ret
mov
inc
shr
adc
imul
adc
bound
inc
mov
mov
xor
stos
in
push
iret
outs
mov
cmp
add
inc
push
out
rol
inc
sbb
fisubr
or
jbe
sar
lock
add
mov
shl
aaa
sub
lea
outs
xor
inc
ins
adc
and
add
and
in
jp
(bad)
ror
adc
mov
xlat
add
icebp
mov
sbb
enter
loop
inc
adc
adc
enter
add
mov
arpl
push
mov
or
int3
push
popa
mov
cmp
or
push
nop
adc
sahf
cmp
inc
movs
add
inc
cmp
cmp
xchg
push
mov
inc
mov
cmp
push
ror
sbb
and
inc
cmp
cmp
int3
xor
jbe
ja
or
mov
jg
loope
dec
and
adc
add
inc
nop
jbe
and
inc
lock
inc
inc
call
mov
pop
int3
sbb
adc
sub
ins
adc
adc
les
rol
das
mov
or
mov
add
push
icebp
lock
jne
mov
leave
xor
cmp
add
and
ficomp
push
adc
dec
push
call
test
adc
pop
or
xchg
clc
add
call
add
dec
sub
test
and
push
inc
xor
adc
daa
ins
mov
sbb
sub
mov
test
nop
or
xor
les
adc
inc
mov
and
arpl
inc
vmread
iret
or
movs
adc
or
mov
ss
leave
xor
cdq
add
xchg
jbe
and
test
sbb
cs
cmp
ret
in
int3
sub
sbb
lds
push
test
xor
sbb
inc
je
pop
pop
or
pushf
dec
push
mov
xor
in
cmp
or
dec
jb
hlt
cli
outs
inc
push
or
unpcklps
inc
rol
scas
icebp
int3
bound
sub
sbb
adc
add
mov
or
stos
add
in
sub
mov
fdivr
mov
add
inc
pop
and
mov
jae
or
dec
sub
stos
loopne
ror
and
dec
cmp
push
rcl
and
sub
aad
add
and
inc
lds
cmp
retf
cmp
dec
int
xor
or
or
xor
shl
adc
inc
adc
add
movs
icebp
rol
mov
pop
loope
mov
mov
adc
inc
dec
ins
push
movaps
dec
push
dec
cmp
or
sbb
mov
mov
add
mov
adc
adc
fcomip
and
cmp
mov
adc
cmps
adc
pop
add
js
add
(bad)
in
mov
mov
mov
inc
or
mov
and
enter
scas
xor
xor
xlat
hlt
sbb
and
dec
enter
pop
in
outs
les
add
inc
dec
or
xchg
add
or
pop
and
mov
pop
mov
sub
or
cmp
jno
in
sub
or
or
push
adc
enter
xchg
and
add
inc
test
repnz
cmp
add
sub
js
inc
jl
nop
xlat
in
push
test
pop
adc
inc
or
pusha
cmps
adc
add
pushf
test
xchg
dec
or
in
or
dec
push
enter
and
inc
push
or
inc
cmp
adc
sub
imul
sub
and
mov
push
or
jecxz
es
sbb
popa
xchg
add
pop
inc
pusha
inc
cmp
adc
icebp
dec
ret
push
or
sub
add
nop
pop
pusha
addr16
add
gs
adc
test
bound
(bad)
jo
mov
lock
mov
call
push
pusha
inc
fmul
push
or
adc
push
and
xchg
add
push
pop
pop
jo
cmp
add
or
or
push
sbb
add
mov
and
adc
inc
jae
rol
clc
dec
cmp
push
mov
pusha
movs
pop
jns
adc
and
add
push
push
mov
addr16
rol
xor
js
and
lock
or
add
call
retf
and
xor
ret
push
and
adc
dec
enter
push
aaa
and
add
cmp
cmp
stos
mov
inc
jmp
and
mov
or
pop
add
stos
or
add
and
sbb
les
adc
jle
(bad)
sbb
mov
outs
loopne
or
or
cmp
mov
add
xchg
push
dec
push
mov
and
pusha
add
mov
add
jecxz
xchg
sub
rol
sbb
or
enter
or
pushf
or
mov
aaa
inc
lock
js
mov
cmp
xlat
popa
lods
ror
nop
pop
fdiv
pop
or
add
add
adc
or
js
pop
push
clc
lds
add
pusha
add
or
or
aam
pop
inc
dec
sub
les
mov
push
mov
or
mov
push
add
inc
xchg
icebp
mov
add
nop
sub
les
js
nop
pop
add
lahf
mov
mov
adc
movs
sbb
loopne
jns
imul
retf
je
mov
add
bswap
sbb
mov
jmp
pop
outs
inc
test
ror
adc
aaa
loop
(bad)
adc
or
cmp
nop
dec
ins
mov
sub
or
fsub
inc
dec
sbb
or
push
fiadd
loopne
cmp
mov
xor
add
in
xchg
sbb
pop
adc
ret
mov
sbb
mov
aaa
js
and
adc
mov
cmp
or
or
push
sbb
add
adc
arpl
mov
xor
rcl
add
lock
add
movs
jb
setle
adc
mov
xor
and
retf
add
mov
popa
pop
sub
cmps
inc
cs
push
cmp
loope
adc
pusha
adc
add
inc
pushf
inc
and
sbb
adc
sbb
mov
add
push
add
cs
call
push
dec
in
and
inc
add
inc
adc
sbb
or
inc
ror
jge
xchg
arpl
sub
and
xor
inc
test
fild
imul
aad
mov
hlt
push
loopne
xor
or
lock
data16
or
mov
and
out
or
test
or
test
pop
push
loope
adc
jno
add
add
ss
(bad)
enter
xor
inc
adc
mov
push
addr16
scas
add
movs
pop
in
adc
mov
mov
daa
add
add
push
and
xchg
in
xchg
out
lahf
or
fdiv
push
inc
or
fiadd
or
fsubp
sbb
test
push
jmp
(bad)
and
and
inc
push
adc
adc
fimul
lock
push
jno
js
ret
out
dec
rol
ror
mov
add
sbb
xor
mov
push
repnz
sbb
arpl
mov
bound
outs
mov
aaa
push
jp
add
dec
movs
inc
push
ror
pop
add
push
add
ss
add
and
add
mov
add
xor
pop
rol
aaa
adc
shl
add
rol
loop
push
adc
jg
adc
or
add
nop
push
add
test
add
add
rcr
inc
sub
mov
inc
cmps
mov
sub
inc
xor
daa
ror
jae
pop
shr
adc
cmp
add
add
sbb
adc
hlt
inc
call
push
pusha
xor
xchg
lock
push
inc
or
mov
daa
cmps
xchg
mov
pminub
add
mov
lock
xor
add
xchg
sub
cmp
shl
aaa
or
pusha
push
add
adc
or
push
outs
add
and
add
jne
fadd
adc
es
lods
adc
test
or
sbb
xor
mov
jmp
mov
add
xchg
add
loopne
sysret
add
cmp
test
and
jmp
mov
and
or
add
bound
shr
dec
mov
imul
rol
or
inc
push
ror
aaa
pop
bound
shl
push
or
es
(bad)
adc
mov
add
add
add
stos
and
pop
rol
lock
not
ins
(bad)
or
sbb
xor
into
and
imul
mov
adc
xor
rol
adc
mov
xchg
adc
add
idiv
int3
fs
xchg
nop
or
and
jge
add
or
push
loopne
push
xchg
or
push
add
ror
xchg
push
(bad)
pusha
or
mov
fucom
add
je
or
or
and
cmp
sbb
adc
neg
sbb
loop
adc
xor
sti
call
pop
xchg
or
sbb
rol
mov
pop
xor
fnstenv
add
test
xchg
push
push
push
pop
in
test
rol
mov
or
and
cmp
fadd
or
inc
xchg
mov
retf
lock
test
add
add
push
fcmove
sub
xchg
add
pop
adc
add
aam
or
sub
pop
adc
or
adc
dec
adc
lock
adc
test
adc
or
add
xor
icebp
xor
dec
add
ds
add
add
(bad)
dec
push
xor
jno
ds
push
dec
loopne
loope
cmp
js
jno
xlat
enter
ror
pop
and
loop
jns
popa
add
xor
or
add
pusha
sub
jno
xchg
nop
adc
adc
add
mov
sbb
pop
mov
nop
je
adc
or
or
and
xor
dec
adc
data16
loopne
add
sub
rol
jo
enter
cdq
push
out
imul
bound
lock
mov
or
pusha
sub
or
xor
leave
adc
mov
push
push
or
icebp
cmps
or
pop
test
adc
add
rol
je
xchg
out
shl
add
mov
loopne
or
inc
addr16
cld
jne
or
add
es
icebp
or
or
adc
mov
or
icebp
loopne
popa
push
jno
xchg
cmp
xchg
arpl
xchg
ror
sbb
test
mov
and
jg
cmp
push
sub
add
(bad)
push
and
and
out
adc
and
inc
cmps
adc
adc
nop
add
adc
pop
adc
lahf
popf
call
xor
mov
movs
adc
mov
retf
mov
or
ror
std
push
adc
call
lods
add
push
stc
aad
sbb
pop
inc
pop
ficomp
je
add
nop
or
push
or
cmp
inc
or
or
push
add
dec
scas
add
adc
or
mov
or
pop
nop
add
push
add
or
adc
push
add
xlat
add
ror
push
adc
or
jnp
xor
sbb
push
inc
and
jns
or
or
or
aam
loopne
bound
or
mov
jae
add
pusha
pop
shl
stc
xor
add
or
mov
adc
add
or
ror
loopne
and
add
vmwrite
xchg
loopne
push
nop
or
add
mov
adc
lock
adc
add
xor
jns
or
inc
add
pop
jae
or
nop
bswap
mov
add
add
or
pop
push
mov
nop
or
xor
xor
add
add
or
push
or
add
pop
dec
pop
or
add
dec
add
fstp
xor
mov
mov
and
rol
mov
or
xor
push
and
push
loopne
outs
jmp
sbb
jl
pop
xchg
mov
fwait
push
or
loopne
or
mov
push
adc
shl
add
xor
push
fst
or
add
add
mov
add
pop
(bad)
add
nop
pop
fnstenv
jae
or
add
inc
xor
dec
cmp
or
or
xor
nop
or
add
push
or
or
add
mov
adc
add
adc
mov
cmp
icebp
push
stos
push
adc
or
adc
mov
stos
adc
cmp
adc
pop
(bad)
or
cld
ret
sub
mov
dec
adc
mov
xchg
or
les
les
lds
lds
push
jl
pop
icebp
cvtps2pd
cld
lds
(bad)
bound
fs
(bad)
data16
push
(bad)
ins
fadd
outs
cld
(bad)
jo
(bad)
jno
adc
cmp
add
add
adc
or
inc
xchg
push
add
add
add
popa
addr16
add
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
pop
add
xchg
add
add
add
inc
add
add
and
add
inc
arpl
and
add
fsub
add
aas
popa
xor
adc
adc
(bad)
mov
jo
jmp
xchg
dec
add
add
sbb
mov
lods
lock
shr
mov
add
dec
int
leave
sub
sub
call
xchg
or
or
movs
jo
add
pop
cmp
cmp
js
icebp
icebp
dec
add
inc
and
pop
test
add
add
jno
or
mov
sub
sub
imul
movs
in
loopne
jns
sbb
sbb
add
sbb
sub
daa
leave
push
movs
mov
push
xchg
cmp
aaa
jns
jbe
out
out
sbb
mov
ror
pop
add
add
add
inc
addr16
loop
frstor
push
xchg
nop
nop
xor
je
in
in
xchg
dec
add
add
sbb
test
push
push
cs
jmp
mov
pop
pop
ds
cli
cmc
cmc
dec
sub
dec
dec
dec
stos
pop
add
add
je
mov
das
sbb
out
jl
sbb
add
inc
and
sar
data16
mov
int
or
or
test
mov
aam
xor
pop
xor
ins
cmp
inc
inc
inc
bound
adc
mov
frstpm(287
ja
nop
lea
jb
lock
push
or
push
sub
xor
add
jg
aad
add
dec
mov
cmp
cmp
clc
repz
daa
add
add
jb
or
add
jnp
sbb
sbb
add
add
pop
push
push
xchg
dec
add
das
das
jo
ins
in
out
pushf
cdq
cdq
dec
dec
dec
lods
pop
add
add
add
adc
adc
retf
or
or
sbb
ret
ret
mov
rol
push
push
push
push
push
mov
mov
into
into
pfacc
stos
stos
retf
fcmovbe
(bad)
(bad)
fcmovb
mov
(bad)
sbb
add
add
add
sbb
repz
cli
add
add
push
add
(bad)
add
and
and
inc
xor
xor
jmp
xchg
div
repnz
sub
loop
cmps
mov
jp
ja
mov
inc
inc
jecxz
fidiv
ss
out
push
push
push
das
cs
out
div
dec
dec
dec
pop
push
push
mov
(bad)
jbe
jae
outs
outs
sahf
fwait
fwait
loope
add
outs
add
add
push
add
push
add
imul
stc
add
or
inc
sub
add
add
inc
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
dec
mov
aad
pop
mov
(bad)
mov
shl
mov
fcom
jo
lods
ret
(bad)
loopne
push
dec
(bad)
in
lea
push
hlt
xchg
scas
pushf
mov
add
add
add
mov
pop
mov
and
out
adc
push
xchg
lahf
push
loop
mov
adc
xchg
xor
dec
sbb
into
dec
bound
loope
mov
rcl
and
popa
add
inc
sub
mov
sbb
lods
loop
mov
into
push
inc
push
jnp
icebp
xchg
push
das
icebp
dec
nop
dec
pop
xchg
dec
cmp
cdq
sub
loop
retf
dec
(bad)
lds
aam
xchg
inc
push
push
lods
pop
push
and
dec
and
cmovne
int
push
cmp
iret
xor
inc
adc
aaa
js
push
(bad)
das
icebp
movs
adc
outs
sub
pop
add
or
dec
inc
pop
fsub
adc
mov
enter
dec
adc
mov
hlt
mov
shr
dec
and
add
les
add
push
push
ror
daa
repnz
xchg
aaa
outs
je
pop
add
daa
fild
rcr
into
or
addr16
or
inc
pop
sub
push
push
and
adc
je
rol
loope
or
mov
pop
or
adc
or
lds
push
or
addr16
bound
pop
addr16
push
jmp
ins
push
adc
or
cmp
add
push
sbb
mov
inc
out
call
sbb
pop
xchg
push
mov
les
inc
and
bound
fadd
inc
data16
or
(bad)
mov
mov
inc
adc
or
retf
call
mov
ret
and
xchg
and
mov
add
or
pop
movs
clc
jbe
xchg
je
xchg
(bad)
or
or
stc
xor
push
mov
or
icebp
sub
adc
xchg
into
sub
ret
mov
icebp
inc
and
mov
add
loopne
ret
enter
icebp
mov
or
test
inc
xchg
popf
es
and
jno
inc
mov
and
add
fs
push
sub
adc
data16
inc
mov
jmp
pop
dec
cs
je
dec
cwde
xor
mov
rcl
mov
xchg
adc
pop
dec
jmp
dec
adc
cld
jb
or
push
shld
or
lods
adc
paddw
imul
add
cmp
and
and
xchg
sbb
and
push
and
or
movlps
arpl
mov
nop
xor
je
pop
icebp
hlt
and
sbb
xchg
mov
cmp
mov
push
xchg
inc
movs
outs
sbb
and
xlat
(bad)
mov
or
jge
add
hlt
inc
in
or
inc
pop
fmul
dec
sub
cmp
xor
push
js
mov
scas
add
ss
add
arpl
xor
sub
and
sub
push
movs
jb
test
into
jb
xchg
lods
adc
(bad)
shl
push
dec
add
and
add
push
dec
test
push
ins
add
cmp
arpl
or
add
je
(bad)
mov
push
mov
sub
jno
cmp
jmp
sub
xchg
scas
mov
nop
popa
or
daa
cmp
or
mov
pop
dec
adc
adc
imul
pop
mov
loop
sbb
sbb
je
cmp
aam
mov
add
and
sub
aaa
push
adc
inc
mov
sub
push
jp
leave
rcl
nop
out
mov
cmp
and
addr16
push
inc
iret
and
lock
sub
jecxz
test
mov
mov
adc
rcr
push
mov
popf
xchg
or
rol
sub
loopne
pop
mov
or
in
sbb
call
dec
and
mov
push
and
mov
inc
adc
bound
das
mov
lds
(bad)
add
cwde
mov
xor
and
inc
dec
xchg
mov
inc
and
sbb
add
mov
pop
xchg
or
test
and
and
mov
fisubr
lock
dec
and
xchg
sahf
jo
jns
xor
nop
leave
or
add
push
cwde
xchg
push
mov
add
js
sbb
mov
jns
push
dec
aaa
adc
fcomip
add
push
mov
ret
hlt
adc
adc
add
les
(bad)
inc
mov
add
or
(bad)
mov
xor
inc
dec
adc
pushf
popa
sbb
cmp
add
mov
inc
sub
lahf
nop
dec
sub
add
jns
(bad)
or
loope
test
cmp
add
mov
mov
or
lods
inc
stos
data16
xor
inc
sub
pop
loopne
sub
or
cmp
sub
lds
stos
ror
mov
adc
test
xor
xor
shl
nop
and
mov
inc
add
xchg
add
inc
pop
and
dec
adc
push
mov
jb
sbb
add
and
push
and
adc
push
add
cli
repz
test
lds
cli
rcr
push
push
pop
inc
add
pop
(bad)
push
push
pop
call
dec
ds
xor
adc
inc
aaa
aam
(bad)
sub
sbb
inc
xor
clc
jb
push
psrad
js
add
dec
loopne
pop
icebp
adc
mov
inc
inc
sub
pop
loope
xor
pop
xchg
or
rcl
rol
mov
je
shr
add
fcomp
or
mov
inc
and
add
inc
sub
push
int
or
movs
adc
lock
sbb
and
dec
stos
adc
dec
jo
sub
and
xor
cwde
adc
sbb
test
sbb
adc
push
or
jmp
or
add
leave
call
and
icebp
cwde
shl
(bad)
or
fadd
jle
or
pusha
cmp
push
sbb
and
inc
repnz
test
and
cmp
test
sub
fs
jl
jecxz
gs
cmp
sub
sub
cwde
add
mov
adc
lods
adc
inc
or
test
loop
fwait
sub
pusha
push
xor
fcomp
and
dec
(bad)
jmp
outs
jl
nop
adc
int3
and
add
add
inc
xchg
sub
inc
dec
jo
test
retf
cmp
add
or
sbb
push
cwde
arpl
lea
nop
cmpps
call
push
add
adc
pop
mov
or
mov
and
push
push
inc
xchg
leave
and
sub
mov
rol
shl
jae
in
popf
jno
das
out
inc
sub
and
cwde
in
inc
xchg
adc
mov
or
pushf
xor
clc
test
jg
cmp
add
inc
fadd
or
add
sub
cmp
stos
adc
or
and
adc
add
and
ret
fidiv
xchg
xchg
push
and
or
sbb
adc
aas
or
je
add
pusha
mov
ss
cdq
aam
sbb
inc
adc
sbb
outs
and
cmp
xor
or
xor
mov
and
sar
bound
jb
cmp
or
mov
loopne
repz
add
nop
push
or
enter
pop
add
out
enter
xchg
adc
mov
das
mov
push
test
inc
pop
or
lock
rcr
and
push
jns
add
adc
push
faddp
sub
xor
test
adc
xor
push
icebp
add
adc
adc
xchg
add
mov
add
or
nop
and
nop
add
nop
and
xor
push
inc
aas
add
cmp
push
xchg
loope
mov
jp
adc
shl
adc
ror
ror
js
push
mov
mov
or
lock
push
xchg
jp
inc
pop
retf
jo
xchg
jp
ror
pop
repnz
xor
icebp
add
jno
dec
jb
add
mov
or
push
add
or
push
cvtps2pd
mov
and
add
mov
(bad)
test
dec
les
mov
sub
adc
push
and
mov
inc
push
add
jae
fiadd
add
xor
xchg
or
jae
xor
mov
cmp
push
push
rdtsc
inc
into
push
add
add
inc
push
cdq
bound
in
shl
push
mov
imul
or
adc
sub
add
rol
ret
shl
push
add
jae
test
jle
and
outs
rcl
test
test
xor
push
add
sub
add
adc
add
loop
xchg
loopne
pusha
push
push
jp
push
and
add
push
mov
cmp
and
mov
add
pusha
or
sar
mov
mov
push
add
or
push
or
inc
add
call
jo
sbb
mov
psllw
push
call
or
outs
adc
adc
xchg
push
rol
dec
mul
push
mov
and
inc
xor
xchg
(bad)
mov
and
or
mov
xor
loop
xor
add
popf
xor
push
add
adc
xchg
nop
and
out
adc
add
pusha
add
add
pop
ror
push
rcl
adc
xchg
or
or
sbb
cli
push
packuswb
cmc
lock
ror
or
push
xchg
or
inc
aad
add
pop
(bad)
pop
sbb
add
adc
or
add
mov
jo
and
rol
loopne
je
sub
loopne
lock
retf
push
rol
push
inc
inc
or
adc
cmc
mov
pop
pusha
and
add
pop
mov
movsx
adc
adc
jge
adc
adc
and
adc
jns
inc
bound
cmp
lock
push
add
and
pslld
or
fst
mov
or
adc
add
leave
adc
and
add
pusha
sbb
xor
nop
or
or
jo
or
frstor
or
adc
or
sbb
pusha
add
call
push
and
dec
pusha
por
adc
je
or
add
adc
xor
and
add
mov
and
mov
pop
pop
rcl
ret
add
xor
xlat
adc
add
aas
xor
pop
adc
pusha
es
adc
xor
mov
mov
adc
or
or
or
or
push
mov
add
scas
rcr
add
adc
(bad)
adc
xor
adc
add
cmp
call
(bad)
jne
dec
dec
sub
lock
inc
and
aas
add
cmp
inc
and
lds
mov
ja
pop
sub
popf
icebp
adc
mov
adc
rcr
xor
add
add
cwde
xchg
xchg
rol
ror
jo
popa
add
lock
push
and
ret
ffree
or
movups
add
rol
dec
imul
fucomp
adc
jl
clc
xchg
adc
inc
icebp
lock
mov
adc
push
push
xor
cmp
adc
add
or
adc
add
and
add
adc
mov
sub
out
rcl
cmp
push
fcomp
or
add
jno
outs
rol
rcr
(bad)
setno
btr
dec
and
push
mov
js
jge
push
xchg
add
pusha
add
adc
push
shl
adc
and
add
sbb
shl
popa
adc
xchg
mov
add
lea
xor
adc
inc
ret
or
stos
xchg
popf
inc
add
xchg
pusha
movzx
pop
rcr
inc
jb
add
inc
add
or
jo
ss
adc
inc
js
mov
enter
ss
add
and
push
rol
add
sub
add
add
setge
daa
and
dec
mov
in
mov
add
xor
push
push
inc
xor
dec
outs
mov
stos
popf
adc
sub
nop
push
pushf
rcr
test
rcl
push
add
fst
dec
aam
enter
rol
jo
or
mov
adc
pmovmskb
adc
xor
or
adc
or
cmp
outs
mov
add
cmps
js
adc
por
adc
push
arpl
popa
push
test
add
stos
pop
mov
daa
push
pop
add
adc
adc
xor
add
adc
sub
xor
ror
inc
popf
shl
add
push
or
ret
or
shr
inc
xor
daa
xor
clc
rcr
into
and
inc
add
pusha
push
inc
add
or
add
cmp
add
lds
nop
xchg
jmp
adc
adc
xor
sub
outs
ror
inc
and
xor
loopne
pop
xor
sub
dec
lahf
pop
adc
nop
xchg
lea
or
imul
fist
mov
add
(bad)
pop
outs
push
and
xor
jno
dec
rol
adc
lock
nop
push
pop
adc
dec
and
pop
icebp
push
pop
adc
ror
pop
(bad)
and
push
icebp
nop
mov
add
rcr
xor
call
xor
and
push
rol
out
fldcw
popf
aad
dec
add
ins
lock
or
gs
and
and
add
jo
sbb
sub
xchg
sbb
or
adc
adc
or
mov
cdq
outs
and
out
add
adc
add
push
xor
add
add
fsub
test
in
adc
iret
sub
or
mov
pop
sbb
data16
mov
or
mov
bound
pop
int
shl
cmp
movs
jo
je
shr
mov
je
add
nop
or
push
or
pop
shr
or
inc
or
or
sbb
inc
mov
mov
or
pop
nop
add
push
add
or
adc
push
add
xlat
add
ror
push
adc
pop
push
popf
(bad)
dec
inc
add
push
inc
and
jns
or
or
add
loopne
bound
or
and
add
jae
add
pusha
pop
shl
stc
mov
movs
xor
cmps
and
mov
adc
add
or
ror
inc
pop
(bad)
in
add
vmwrite
xchg
loopne
push
nop
or
add
add
pop
adc
add
xor
jns
or
inc
add
pop
jae
or
nop
bswap
mov
add
add
or
pop
lods
mov
sub
or
xor
add
add
or
push
or
xor
xchg
mov
add
pop
xchg
pop
or
add
dec
add
std
fidivr
add
(bad)
xor
hlt
dec
fbld
add
adc
add
add
or
xor
push
and
push
loopne
mov
add
mov
jl
pop
xchg
mov
fwait
push
or
loopne
dec
cmp
adc
fcomi
fucom
and
push
adc
mov
add
add
mov
add
pop
(bad)
add
nop
pop
fnstenv
jae
or
add
inc
xor
dec
mov
stos
or
mov
xor
add
xchg
or
add
push
or
or
add
fnsave
add
pop
add
adc
mov
ret
ds
add
push
stos
push
adc
or
adc
mov
stos
xor
jp
adc
lock
(bad)
or
push
call
sub
sbb
nop
loope
mov
outs
shr
push
jmp
pop
jmp
sahf
jmp
shr
sahf
(bad)
jmp
ds
test
jmp
scas
(bad)
jmp
mov
jmp
add
cmp
add
add
adc
or
inc
lds
add
add
add
popa
gs
add
je
add
dec
inc
cmp
popa
pop
add
xchg
add
add
add
inc
add
add
and
add
inc
bound
and
add
fldenv
add
aas
popa
xor
adc
adc
push
(bad)
mov
jo
jmp
xchg
dec
add
add
sbb
mov
lods
lock
shr
mov
add
dec
int3
enter
sub
imul
jecxz
xchg
xchg
or
or
movs
jo
add
pop
cmp
cmp
js
lock
add
inc
and
pop
test
add
add
jno
or
mov
sub
sub
push
movs
movs
out
loope
jns
sbb
sbb
add
sbb
sub
daa
leave
push
movs
mov
push
xchg
cmp
aaa
js
jne
out
out
sbb
mov
ror
add
add
es
addr16
loop
frstor
push
xchg
nop
nop
xor
je
in
in
xchg
dec
add
add
sbb
test
push
push
cs
jmp
cwde
mov
pop
pop
pop
ds
cli
cmc
cmc
dec
sub
dec
dec
dec
stos
pop
add
add
je
mov
das
sbb
out
jl
push
sbb
test
inc
add
sar
data16
adc
mov
ror
int3
or
test
mov
xor
cmp
ins
cmp
inc
inc
inc
arpl
adc
mov
frstpm(287
ja
xchg
mov
jno
lock
push
or
push
sub
xor
add
jg
aad
add
dec
mov
cmp
jp
repz
daa
add
add
jb
or
add
jnp
sbb
sbb
add
add
pop
push
push
xchg
dec
add
das
das
jo
ins
in
out
pushf
cdq
cdq
dec
dec
dec
lods
pop
add
add
add
adc
adc
retf
or
or
sbb
ret
mov
xlat
rcl
push
push
push
push
push
push
mov
mov
into
into
pfacc
stos
stos
retf
fcmovnbe
xlat
(bad)
fcmovb
mov
(bad)
sbb
add
add
add
sbb
repz
cli
add
add
push
add
(bad)
add
and
and
inc
xor
xor
jmp
xchg
div
repnz
sub
loop
cmps
mov
jp
ja
mov
inc
inc
jecxz
fidiv
ss
out
push
push
push
das
cs
out
div
dec
dec
dec
pop
push
push
mov
(bad)
jbe
jae
outs
outs
sahf
fwait
fwait
loope
add
outs
add
add
push
add
push
add
imul
stc
add
or
inc
sub
add
add
inc
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
dec
mov
push
aas
mov
and
and
push
das
mov
inc
cmp
mov
jmp
adc
cdq
lds
daa
xor
and
mov
inc
cwde
shl
mov
test
pushf
inc
and
sbb
mov
loop
dec
inc
mov
(bad)
pop
mov
popa
pop
mov
add
push
or
inc
mov
das
loopne
cmp
or
mov
and
das
lea
add
repz
pusha
mov
icebp
cmps
push
in
adc
pop
and
mov
jmp
ins
pop
icebp
arpl
mov
ret
clc
cmp
mov
inc
add
clc
stos
mov
adc
adc
and
test
cmp
movs
inc
and
and
cmp
nop
jecxz
add
add
and
leave
cmp
and
mov
adc
adc
inc
inc
cmp
and
push
inc
or
popa
push
inc
mov
es
inc
aaa
inc
mov
push
icebp
or
lock
test
hlt
push
dec
cmp
adc
fdiv
jecxz
ins
cmp
adc
popa
mov
clc
mov
sub
dec
cmp
or
adc
add
add
jae
cmp
or
inc
pop
bound
test
add
or
cmc
ror
dec
adc
adc
push
mov
movs
xchg
fnstcw
adc
rcr
adc
or
jle
cmp
es
jnp
cdq
inc
dec
adc
or
bound
(bad)
push
push
mov
lock
dec
sub
les
inc
adc
dec
pop
mov
popf
dec
rol
cmp
call
and
dec
xor
jl
adc
dec
adc
add
loopne
sahf
add
sub
js
(bad)
daa
icebp
mov
mov
mov
movs
adc
push
sub
adc
mov
(bad)
ss
inc
and
xor
adc
push
inc
inc
and
and
pusha
mov
cmp
or
rol
test
xchg
xchg
dec
jp
and
cmp
jno
nop
or
ins
loope
daa
mov
push
inc
jbe
mov
mov
loopne
push
or
fst
gs
add
sbb
dec
inc
sbb
(bad)
or
and
daa
je
popa
(bad)
sub
aaa
mov
pop
inc
mov
ret
inc
push
dec
sub
int3
or
sub
mov
xchg
into
or
in
sbb
xor
icebp
int3
inc
dec
mov
xor
jge
arpl
aaa
mov
jp
lods
inc
and
mov
pop
bswap
les
jno
add
and
inc
outs
in
mov
test
(bad)
in
dec
mov
ror
sub
les
adc
cmp
gs
cmp
icebp
dec
cmp
icebp
clc
(bad)
mov
hlt
sbb
or
les
add
cmp
test
cwde
add
ins
les
sub
and
jl
sbb
fcomp
fs
outs
and
add
mov
or
xchg
sub
pop
mov
dec
adc
mov
xor
shr
cli
xor
cmp
add
and
shl
sub
inc
push
or
mov
sbb
inc
mov
or
mov
and
add
mov
push
mov
test
lods
and
jae
dec
cmp
jno
jb
mov
sbb
inc
mov
pusha
lods
adc
add
loop
or
aam
sbb
retf
add
inc
xchg
ror
and
mov
nop
pop
pop
xor
psubsb
(bad)
adc
mov
xor
pusha
mov
nop
rol
out
or
or
or
dec
push
fwait
ins
and
int3
or
sub
sbb
pop
dec
adc
adc
and
lods
adc
(bad)
jecxz
js
mov
sub
sub
jo
(bad)
xchg
xchg
push
inc
inc
push
rol
aam
push
fadd
and
inc
or
pop
pop
and
add
lahf
or
daa
adc
test
stc
loop
adc
mov
hlt
aam
and
in
adc
dec
and
xor
je
sub
cmps
or
loope
adc
retf
and
jo
push
mov
add
mov
lods
ds
nop
pop
lock
add
add
sbb
loopne
adc
sar
sbb
adc
cmp
or
mov
test
je
and
stc
inc
sub
push
add
xchg
movs
rcr
(bad)
cmp
pop
enter
adc
cwde
(bad)
and
adc
inc
cmps
push
push
mov
and
icebp
mov
inc
cmps
push
and
xchg
push
cmps
mov
sub
add
add
inc
es
mov
sbb
sub
and
dec
rol
add
mov
xor
stc
push
iret
or
js
ret
jae
add
hlt
and
and
call
mov
push
add
inc
add
and
jbe
jno
xor
ret
or
int3
push
add
adc
or
ror
retf
add
loop
add
dec
nop
sub
add
neg
jnp
sub
pop
les
mov
mov
xchg
jp
push
mov
fwait
push
add
mov
js
and
rol
js
adc
push
and
dec
les
inc
and
aam
aaa
or
push
pop
inc
jmp
xchg
shl
push
inc
cli
or
out
into
dec
mov
shl
in
pop
add
int3
lds
loopne
loop
xor
and
adc
add
les
rol
pusha
jno
mov
jl
adc
add
dec
add
push
adc
adc
repz
dec
push
dec
or
or
push
aaa
lods
inc
and
or
fild
dec
jg
sub
and
mov
rol
daa
mov
mov
fistp
and
push
push
xchg
sbb
imul
xchg
dec
add
movs
mov
xchg
or
(bad)
jns
leave
pop
mov
ror
lds
cmp
movs
nop
jmp
pusha
sbb
adc
sub
xor
cwde
cmps
aaa
adc
mov
mov
mov
adc
outs
mov
mov
js
and
int3
add
sub
xchg
jp
es
or
add
dec
add
push
adc
aam
or
add
mov
or
adc
js
icebp
loopne
inc
mov
in
sbb
inc
repnz
mov
leave
lds
(bad)
and
sbb
adc
mov
jo
and
outs
jo
ja
ins
inc
inc
push
mov
mov
sar
or
adc
hlt
add
fisub
arpl
push
sbb
and
test
dec
dec
bound
mov
(bad)
cld
push
in
mov
fcomp
cwde
aaa
xor
and
dec
sbb
aaa
or
loope
adc
dec
mov
test
push
(bad)
das
(bad)
ficom
xchg
in
cmp
add
rcl
sbb
xchg
into
jl
or
inc
jo
add
or
xchg
(bad)
and
xor
jecxz
mov
cwde
je
pop
stc
sub
hlt
adc
or
inc
(bad)
cmp
dec
push
popf
xor
je
and
add
mov
mov
bound
sbb
add
js
add
mov
dec
repnz
or
and
sub
call
mov
inc
jb
jae
pop
cmp
mov
adc
outs
test
or
add
ror
or
inc
adc
add
loopne
cmp
add
xchg
and
adc
hlt
adc
loopne
or
add
mov
jnp
add
pop
cmp
adc
mov
not
or
pop
xchg
and
or
jp
xchg
push
pop
lock
ins
test
jecxz
or
and
inc
sbb
and
push
add
dec
or
jge
adc
add
add
inc
sbb
xor
lahf
lds
retf
mov
inc
pop
adc
add
add
loop
push
adc
jo
jmp
or
push
add
rcr
mov
adc
and
and
daa
push
add
call
or
or
or
lock
loopne
pop
or
add
jne
fcmovnb
or
loopne
leave
add
adc
bound
xor
cmps
adc
lock
xor
dec
jo
enter
add
mov
adc
add
push
or
cmps
adc
pop
add
je
push
inc
jmp
test
and
popf
xor
rol
add
stc
push
add
je
mov
pop
add
and
lea
mov
and
add
loopne
outs
loopne
pop
sar
ss
or
cmp
and
add
cmp
mov
push
pusha
ds
adc
shr
or
push
sub
add
add
and
adc
lock
and
sub
add
and
lea
data16
or
or
and
int3
nop
or
inc
pop
or
add
push
mov
push
daa
lahf
ret
push
pop
add
or
add
icebp
jne
enter
or
add
add
jmp
cmp
mov
or
or
call
pop
loopne
add
pop
mov
inc
push
adc
ror
jns
push
sub
imul
aaa
adc
push
or
or
mov
imul
adc
add
inc
lock
jne
and
adc
nop
or
add
dec
nop
or
push
or
mov
adc
pusha
dec
ins
loopne
outs
adc
sub
mov
nop
add
ror
jge
ins
or
and
popa
sbb
mov
add
xchg
inc
add
mov
imul
in
loope
(bad)
fidivr
or
mov
ret
push
pusha
prefetch
or
adc
ror
sar
jmp
or
add
ret
sub
rcr
push
jl
sbb
loopne
outs
lock
loope
add
loopne
and
or
mov
mov
push
mov
push
or
pop
cmc
or
inc
and
inc
add
add
push
add
xor
jae
add
bound
pushf
mov
mov
add
mov
fdiv
sub
arpl
repnz
or
xor
jne
inc
inc
push
jmp
cmovae
add
ror
pusha
xchg
add
add
inc
xchg
add
aam
adc
xchg
add
inc
pop
inc
or
and
loope
lock
add
add
inc
push
mov
add
push
jge
adc
rol
inc
sbb
inc
or
add
adc
or
enter
pop
fidiv
icebp
mov
mov
js
and
or
jne
add
lock
aam
adc
add
or
push
add
adc
cmps
adc
add
out
inc
xchg
mov
or
fmul
lahf
loopne
stos
add
call
adc
xchg
lods
add
(bad)
jae
push
pusha
cmp
shl
test
mov
xchg
test
jne
cmc
cs
cmp
fidiv
mov
adc
add
adc
mov
pop
pop
push
add
lods
adc
jbe
nop
or
and
adc
lock
pop
cwde
adc
loope
push
pop
mov
rcr
mov
dec
adc
adc
adc
mov
add
inc
and
pop
dec
add
and
mov
mov
and
or
mov
push
inc
and
rol
mov
dec
(bad)
mov
call
js
push
mov
xchg
shl
push
rcl
or
cmp
pop
or
jle
push
adc
loopne
sub
inc
add
out
sbb
sub
pop
rol
loop
add
pop
repnz
adc
add
inc
sbb
movs
adc
ss
inc
sbb
jo
lock
cmp
push
or
pop
outs
and
mov
add
loopne
daa
shl
es
mov
or
cmp
pusha
or
mov
pop
icebp
add
sbb
inc
enter
adc
mov
popa
jle
adc
or
adc
mov
jae
add
ins
pusha
and
shl
test
add
mov
add
or
icebp
and
or
ret
ror
test
adc
xor
pop
adc
jl
add
lock
and
adc
gs
adc
push
push
push
cmp
sbb
and
add
ja
in
stc
adc
mov
jo
sbb
lock
pop
fild
xchg
sub
daa
and
mov
mov
jge
jo
xchg
jo
icebp
push
push
fidivr
adc
adc
push
xor
or
ja
sbb
ss
adc
movs
add
or
fs
fdivr
mov
or
push
sub
adc
pop
push
or
cmps
add
push
ret
or
imul
or
or
xchg
jge
jl
mov
push
sub
add
push
and
loopne
repz
ror
dec
loopne
push
in
adc
sar
fs
sub
mov
adc
sbb
push
add
or
mov
jl
or
add
enter
lods
daa
push
add
adc
pusha
sub
adc
mov
or
xchg
add
push
cdq
cmp
cmovo
imul
jge
xchg
lahf
or
or
lods
or
dec
push
test
shl
(bad)
sub
mov
adc
push
mov
add
retf
xor
xchg
add
aaa
adc
nop
(bad)
in
cmp
sbb
push
call
mov
popf
retf
or
adc
cmp
bound
pop
pusha
int3
add
or
add
sub
xchg
push
jno
mov
or
or
jbe
xchg
or
popf
adc
cs
add
or
and
dec
xchg
push
retf
push
adc
cmp
add
dec
ins
inc
test
add
daa
or
sbb
icebp
or
push
or
adc
ror
popa
add
pusha
inc
dec
jo
adc
(bad)
mov
add
push
rep
adc
les
jl
icebp
add
dec
xor
xor
(bad)
push
xor
xchg
add
ja
mov
dec
mov
or
rcl
mov
add
test
jae
jl
adc
sub
cld
adc
imul
or
sbb
mov
inc
jns
dec
dec
mov
or
add
mov
out
push
int3
adc
pmullw
jmp
push
lods
int
fwait
lea
pop
sub
xor
add
inc
movs
adc
fisubr
(bad)
cmp
or
nop
test
icebp
adc
fld
mov
into
sbb
iret
ins
adc
ss
jge
fcomp
(bad)
fstp
(bad)
std
fucom
sbb
adc
add
popf
fsubrp
ins
adc
and
jae
or
sbb
sbb
pop
inc
pop
repz
(bad)
cmp
sbb
movs
mov
add
(bad)
inc
pop
aam
pop
fdiv
loopne
mov
add
pop
(bad)
add
xor
sti
mov
mov
add
loope
outs
adc
pusha
or
add
xlat
add
ror
push
adc
or
jle
dec
inc
add
push
inc
and
jns
or
or
push
add
loopne
bound
or
and
add
jae
add
pusha
pop
shl
stc
and
ds
xor
ss
add
pop
push
add
jae
or
ror
inc
pop
xor
add
vmwrite
xchg
loopne
push
nop
or
add
out
adc
add
sub
add
xor
jns
or
inc
add
lock
jae
or
nop
bswap
mov
add
add
or
pop
jp
jmp
nop
or
xor
xor
add
add
or
push
or
add
pop
pop
pop
or
add
dec
add
fsubrp
xor
push
xor
pop
ret
arpl
add
adc
add
add
or
xor
push
and
push
loopne
jg
add
mov
jl
pop
xchg
mov
fwait
push
or
loopne
sbb
in
push
adc
shr
mov
sbb
or
adc
mov
add
add
mov
add
pop
(bad)
add
nop
pop
fnstenv
jae
or
add
inc
xor
dec
sub
rol
or
mov
xor
add
xchg
or
add
push
or
or
add
jmp
add
adc
mov
nop
jp
loopne
mov
add
push
stos
push
adc
or
adc
mov
stos
xor
inc
lahf
hlt
cmp
aam
hlt
push
pop
adc
fsubp
push
pop
cmc
cmp
add
outs
cmc
pop
mov
pop
push
pusha
pop
mul
mul
data16
dec
dec
push
imul
outs
push
jo
div
div
jbe
idiv
idiv
idiv
jle
test
add
add
adc
or
inc
stos
adc
add
popa
addr16
adc
add
add
dec
inc
cmp
popa
pop
add
xchg
add
add
add
inc
add
add
and
add
inc
arpl
and
add
fsub
add
aas
popa
xor
adc
adc
push
(bad)
mov
jo
jmp
xchg
dec
add
add
sbb
mov
lods
lock
shr
mov
add
dec
int
leave
sub
sub
call
xchg
or
or
movs
jo
add
pop
cmp
cmp
js
icebp
icebp
dec
add
inc
and
pop
test
add
add
jno
or
mov
sub
sub
push
movs
movs
in
loopne
jns
sbb
sbb
add
sbb
sub
daa
leave
push
movs
mov
push
xchg
cmp
aaa
js
jne
out
out
sbb
mov
ror
add
add
inc
inc
inc
fs
fsub
push
xchg
nop
nop
xor
je
in
in
xchg
dec
add
add
sbb
test
push
push
cs
jmp
mov
pop
pop
ds
cli
cmc
cmc
dec
sub
dec
dec
dec
stos
pop
add
add
je
mov
das
sbb
out
jl
push
sbb
test
inc
add
sar
data16
mov
int
or
test
(bad)
les
xor
cmp
ins
cmp
inc
inc
inc
bound
adc
mov
frstpm(287
ja
nop
lea
jb
lock
push
or
push
sub
xor
add
jg
aad
add
dec
mov
cmp
jp
repz
daa
add
add
jb
or
add
jnp
sbb
sbb
add
add
add
push
xchg
dec
add
das
das
jno
outs
in
out
pushf
cdq
cdq
dec
dec
dec
lods
pop
add
add
add
adc
adc
retf
or
ret
mov
rol
pop
pop
pop
pop
pop
mov
mov
into
into
push
push
push
scas
stos
stos
retf
fcmovbe
(bad)
(bad)
fcmovb
mov
(bad)
sbb
add
add
add
sbb
repz
cli
add
add
push
add
(bad)
add
and
and
inc
xor
xor
jmp
xchg
div
repnz
sub
loop
sbb
sbb
xchg
jp
ja
mov
inc
inc
jecxz
fidiv
ss
out
push
push
push
das
cs
out
div
dec
dec
dec
pop
push
push
mov
(bad)
jbe
jae
outs
outs
sahf
fwait
fwait
loope
add
outs
add
add
push
add
push
add
imul
stc
add
or
inc
sub
add
add
inc
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
dec
mov
aad
pop
mov
(bad)
mov
xlat
scas
pusha
ret
mov
mov
aas
mov
adc
push
sub
out
cwde
fdiv
xor
pop
mov
les
sbb
(bad)
int3
fnsave
js
pop
cmp
adc
push
cmp
mov
xchg
call
mov
push
pop
and
xlat
jecxz
arpl
int3
cmp
push
mov
mov
ret
adc
xchg
add
and
xchg
xchg
adc
in
sub
sbb
mov
ror
pop
aam
mov
(bad)
lfs
pusha
xchg
les
add
mov
adc
or
push
or
loopne
pop
mov
inc
in
push
aam
cmp
test
inc
cs
adc
cmp
sar
rol
in
or
lds
push
je
adc
icebp
dec
xor
dec
cmp
mov
xchg
pop
popfw
inc
jmp
xor
fnsave
add
push
pop
push
and
and
adc
(bad)
adc
inc
or
arpl
lds
jo
push
cs
push
adc
test
jecxz
inc
data16
retw
xor
iret
aaa
add
mov
test
dec
mov
pop
adc
(bad)
daa
push
mov
cmps
jo
xor
scas
(bad)
rol
inc
lahf
js
adc
syscall
ins
rol
mov
adc
xor
and
bound
push
mov
or
movs
adc
fs
pop
xchg
stc
add
inc
or
mov
mov
mov
cmp
sub
mov
and
and
inc
lea
data16
add
lock
movs
ins
ins
repz
adc
js
push
sub
or
(bad)
test
hlt
arpl
fdiv
test
hlt
in
inc
inc
or
inc
or
les
repz
pusha
and
add
mov
test
xor
or
in
nop
pause
and
mov
and
jg
inc
sbb
jl
jecxz
adc
xchg
and
rol
sbb
xchg
jns
shl
xchg
sub
(bad)
inc
pop
sbb
mov
xchg
add
cld
stos
push
inc
sbb
shl
dec
or
inc
cdq
shr
retf
adc
xchg
shr
mov
jo
movs
inc
pusha
das
adc
sub
inc
stos
inc
(bad)
arpl
mov
sub
inc
dec
lea
pop
push
icebp
(bad)
fnstcw
push
adc
cmp
or
pushf
and
adc
gs
dec
sbb
ret
dec
inc
jmp
jae
and
aam
mov
out
adc
jae
int3
adc
add
mov
mov
stos
nop
cmp
fidivr
sub
cs
add
add
addr16
xor
inc
in
les
ret
inc
jae
cmp
(bad)
test
inc
inc
cmp
pop
sbb
sub
pusha
add
or
pop
out
fild
nop
or
mov
rol
and
js
enter
or
sbb
add
xchg
pop
retf
pop
mov
dec
and
dec
add
ret
xchg
je
cmp
je
and
push
lock
mov
mov
outs
icebp
mov
or
lds
or
inc
cmp
adc
sub
xchg
add
cmp
ret
test
cmps
rol
or
add
add
add
add
xchg
mov
lea
mov
sub
or
bound
or
shl
rol
mov
or
add
rcl
or
ror
add
or
adc
xor
sbb
add
jge
xor
cmp
or
mov
add
icebp
loopne
ret
and
add
movs
rcl
and
and
sub
cmp
les
(bad)
mov
(bad)
fsub
inc
adc
or
cmc
jmp
jo
loopne
test
xor
adc
cmps
adc
sub
push
call
and
add
sahf
adc
add
enter
add
rcl
push
adc
mov
mov
inc
sub
xor
arpl
dec
rcl
mov
cmp
mov
and
add
js
andps
inc
cmp
pop
dec
adc
imul
pop
rcr
mov
and
mov
ret
push
movs
add
loope
js
inc
cmp
loopne
or
push
cmp
je
jae
int3
or
add
call
adc
loope
cmp
scas
adc
adc
cs
rcr
or
outs
xchg
adc
lea
scas
clc
call
add
inc
das
jb
add
sbb
xchg
xor
push
xor
dec
fisttp
lods
adc
inc
push
(bad)
push
loopne
sbb
inc
mov
out
pop
or
jmp
or
mov
jb
in
add
push
jbe
shl
sbb
cmp
mov
add
add
jnp
or
inc
cmps
xor
and
mov
mov
adc
adc
sbb
jo
xor
sbb
add
and
mov
add
mov
jae
ret
sbb
js
mov
push
test
inc
sbb
add
in
xchg
add
push
jmp
add
cwde
sbb
and
push
sbb
push
xchg
enter
rcr
add
loope
or
or
out
add
or
cmp
and
fcom
ret
xor
inc
sbb
sub
or
dec
add
inc
inc
adc
add
dec
inc
and
sbb
push
cmp
stc
lods
and
ret
and
js
sbb
lock
xchg
test
dec
push
add
jg
gs
push
loope
int3
xor
arpl
and
sbb
mov
add
bound
or
or
dec
outs
outs
sar
cmp
mov
inc
int3
ret
cmp
retf
push
adc
mov
push
push
loope
add
mov
test
xchg
gs
sbb
mov
mov
inc
and
mov
inc
cmp
jmp
ds
inc
cmp
xor
sbb
pop
push
sbb
jmp
inc
int3
or
push
mov
mov
pcmpeqb
movs
add
jle
inc
sbb
mov
add
(bad)
xchg
in
loope
inc
cmp
or
ins
add
xor
int
inc
push
lea
call
(bad)
bound
inc
or
inc
push
or
(bad)
fadd
add
push
mov
fild
pop
lods
push
sub
dec
inc
mov
stos
or
sub
and
and
push
fst
lea
inc
pop
dec
xor
sbb
int
movs
pop
push
dec
cmp
rol
jmp
or
jmp
push
mov
adc
or
adc
xor
ins
push
iret
push
das
aaa
xchg
js
push
mov
repz
popf
xchg
mov
inc
mov
adc
popf
pusha
jbe
adc
mov
aaa
sbb
pop
add
or
or
sbb
mov
jp
xor
xor
(bad)
mov
leave
in
dec
adc
jno
adc
fsub
mov
add
test
imul
in
or
dec
sub
push
push
xor
dec
(bad)
dec
xchg
cmp
jmp
sub
ret
pushf
push
bound
fcomi
xchg
shl
lea
jne
mov
xchg
adc
bound
xor
adc
inc
add
push
adc
pop
add
mov
add
add
pop
retf
scas
in
pop
and
(bad)
adc
or
jo
xlat
ja
dec
loopne
or
add
mov
jns
adc
in
mov
and
or
push
aam
loope
sbb
and
push
aad
cmp
adc
add
jne
hlt
adc
adc
test
add
mov
pushf
nop
aas
add
xor
rol
and
mov
or
add
add
cwde
adc
add
(bad)
and
les
fisub
mov
adc
push
push
out
push
jae
pusha
push
gs
push
or
add
test
shl
icebp
xor
and
fisub
or
inc
mul
adc
adc
add
push
or
add
add
and
xlat
loop
mov
push
adc
xchg
icebp
or
mov
add
push
inc
pop
mov
adc
or
nop
sbb
mov
icebp
mov
xor
retf
or
dec
movs
adc
mov
pop
xchg
inc
add
adc
ret
push
sbb
add
add
adc
add
arpl
add
adc
pop
gs
pop
jb
adc
repz
or
test
jge
mov
popa
sub
or
bound
add
js
or
cs
and
mov
adc
popf
push
adc
or
pop
or
jns
inc
and
jb
mov
dec
jne
ret
lock
in
inc
sbb
icebp
add
push
stos
pop
xchg
ror
push
add
adc
pushf
pusha
jg
rcl
add
mov
scas
and
add
pop
add
mov
adc
hlt
aam
or
add
cdq
or
push
pop
dec
adc
push
and
xor
(bad)
push
or
repnz
adc
xadd
cwde
js
mov
sbb
adc
sbb
adc
push
xchg
push
push
jecxz
lgs
inc
pusha
push
xchg
and
adc
xchg
pop
rol
or
jle
sbb
add
adc
and
xor
test
rol
cdq
or
dec
add
dec
rol
inc
xor
rol
lock
adc
loopne
jle
add
adc
jo
or
add
mov
add
xchg
adc
or
(bad)
fcom
push
loopne
test
cmps
adc
and
or
cwde
enter
adc
jo
xor
fwait
push
and
inc
inc
xor
xor
or
rcl
loopne
dec
rol
add
loope
loop
adc
xchg
and
loopne
adc
rcr
lock
rol
push
test
dec
sub
mov
adc
push
dec
jmp
push
repz
or
inc
or
adc
das
das
js
retf
imul
imul
jge
push
popa
add
repnz
pop
inc
test
or
ins
cs
adc
add
punpcklwd
xchg
add
sub
adc
xchg
xor
or
dec
pusha
push
push
jne
or
pop
cli
mov
mov
mov
jle
add
adc
xor
int3
inc
mov
dec
adc
add
or
or
inc
pop
xchg
adc
rcl
nop
(bad)
je
add
nop
or
push
or
or
xor
or
push
add
stos
mov
adc
or
mov
or
pop
nop
add
push
add
or
adc
push
add
(bad)
lock
ror
ror
push
adc
or
jp
sbb
add
push
inc
and
jns
or
or
or
rcl
or
add
aas
mov
jae
add
pusha
pop
shl
stc
sub
add
or
mov
adc
add
or
ror
add
jmp
add
or
add
call
adc
add
xor
jns
or
inc
add
pop
jae
or
nop
bswap
mov
add
add
or
nop
pop
sbb
sub
or
xor
add
add
or
push
or
add
pop
call
bound
add
dec
add
(bad)
xor
bound
mov
lock
adc
add
add
or
xor
push
and
push
loopne
pop
jmp
sbb
jl
pop
xchg
mov
fwait
push
or
loopne
mov
adc
shl
add
or
mov
adc
cmp
cli
adc
pop
or
jno
or
jo
jns
or
or
add
rol
stos
syscall
mov
stos
and
push
mov
mov
add
push
or
or
add
mov
jp
xor
pop
add
adc
mov
xor
add
push
stos
push
adc
or
or
jg
or
pop
mov
push
or
mov
in
sbb
sub
lock
idiv
(bad)
sti
mov
cmp
ins
icebp
clts
jl
or
fadd
push
cld
rcl
rcl
rcl
push
jl
sbb
fadd
sbb
add
add
add
add
add
add
push
push
add
popa
addr16
sbb
pop
push
add
ins
je
add
add
inc
dec
inc
cmp
popa
pop
add
xchg
add
add
add
inc
add
add
and
add
inc
arpl
and
add
fldenv
add
aas
popa
xor
adc
adc
push
(bad)
mov
jo
call
xchg
dec
add
add
sbb
mov
lods
lock
shr
mov
add
dec
int3
enter
sub
imul
jecxz
xchg
xchg
or
or
movs
jo
add
pop
cmp
cmp
js
icebp
icebp
dec
add
inc
and
pop
test
add
add
jno
or
mov
sub
sub
push
movs
movs
in
loopne
jns
sbb
sbb
add
sbb
sub
daa
leave
push
movs
mov
push
xchg
cmp
ss
jne
out
out
sbb
mov
ror
add
add
inc
inc
inc
fs
frstor
push
xchg
nop
nop
xor
je
in
in
xchg
dec
add
add
sbb
test
push
push
cs
jmp
cwde
mov
pop
pop
pop
ds
cli
cmc
cmc
dec
sub
dec
dec
dec
stos
pop
add
add
je
mov
das
sbb
out
jl
push
sbb
test
inc
add
sar
data16
adc
mov
ror
int3
or
test
mov
xor
cmp
ins
cmp
inc
inc
inc
arpl
adc
mov
frstpm(287
ja
xchg
mov
jb
lock
push
or
push
sub
xor
add
jg
aad
add
dec
mov
cmp
jp
repz
daa
add
add
jb
or
add
jnp
sbb
sbb
add
add
pop
push
push
xchg
dec
add
das
das
jo
ins
in
out
popf
call
add
add
add
adc
adc
retf
or
sbb
ret
ret
mov
rol
push
push
push
push
push
mov
mov
iret
iret
push
push
push
scas
stos
stos
retf
mov
fcmovu
ret
mov
(bad)
sbb
add
add
add
sbb
repz
cli
add
add
push
add
(bad)
add
and
and
inc
xor
xor
jmp
xchg
div
repnz
sub
loop
cmps
mov
jp
ja
mov
inc
inc
jecxz
fidiv
ss
out
push
push
push
das
cs
out
div
dec
dec
dec
pop
push
push
mov
(bad)
jbe
jae
outs
outs
sahf
fwait
fwait
loope
add
outs
add
add
push
add
push
add
imul
stc
add
or
inc
sub
add
add
inc
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
dec
mov
int3
adc
pop
(bad)
aad
call
mov
and
sbb
mov
loope
test
mov
sub
and
xchg
mov
js
js
hlt
and
mov
imul
mov
enter
push
sar
cmp
push
(bad)
lds
fs
push
(bad)
fisub
xor
or
icebp
les
push
test
xchg
test
and
lods
jo
test
or
add
or
mov
jbe
sahf
jbe
(bad)
jl
mov
fs
jnp
sub
xor
icebp
push
jnp
inc
out
xor
int3
push
pop
inc
test
adc
mov
or
add
fwait
adc
mov
icebp
and
mov
add
inc
push
les
inc
cs
inc
ss
nop
or
and
push
add
(bad)
inc
and
mov
aam
or
adc
cmp
add
adc
push
mov
or
sbb
nop
mov
mov
adc
adc
outs
or
adc
cld
add
ret
cmp
inc
xor
hlt
dec
cmp
sub
pop
sub
or
inc
cmp
cmp
and
in
pusha
or
and
xor
xor
add
fild
das
leave
mov
xchg
or
sbb
lds
cmp
or
fldenv
fild
push
or
(bad)
push
and
test
mov
add
inc
xchg
shr
je
cmp
sub
movs
or
add
add
gs
sbb
cmp
loopne
cmp
or
dec
or
add
xchg
lds
sbb
inc
icebp
xchg
and
pop
add
add
push
or
mov
loope
sbb
popa
push
or
mov
rol
push
adc
lds
lock
cmp
mov
(bad)
das
inc
test
dec
add
ret
in
imul
push
cs
data16
pinsrw
inc
or
lods
test
ins
loopne
add
mov
push
and
or
push
xor
sbb
mov
sub
imul
fmul
popf
adc
push
cs
adc
stos
in
cld
sbb
nop
movs
icebp
je
rcl
or
and
adc
(bad)
add
jp
sbb
mov
mov
push
push
inc
(bad)
enter
icebp
dec
cmp
test
mov
mov
fist
push
outs
pop
xchg
outs
cmp
push
out
adc
cmp
add
sub
les
and
mov
mov
pop
adc
sub
lock
and
loop
xor
nop
mov
add
ror
and
mov
push
cmp
jge
nop
ror
adc
mov
push
ret
in
pop
enter
or
add
adc
push
push
xor
sub
sub
repnz
sbb
add
add
mov
add
inc
adc
pop
stc
or
adc
add
push
repnz
adc
dec
sbb
cwde
test
inc
mov
loop
jo
dec
adc
inc
aaa
je
add
rol
adc
ret
or
xchg
mov
sub
or
outs
or
es
or
inc
sbb
add
or
cmp
out
adc
mov
pop
xor
(bad)
pop
sub
fwait
jns
test
bound
or
xor
push
add
mov
inc
sbb
add
les
cmp
js
mov
sbb
imul
inc
mov
add
xchg
mov
or
ret
or
inc
and
sbb
inc
and
aad
test
pop
les
xchg
arpl
mov
xchg
jb
mov
popf
pusha
sbb
cmp
test
sbb
in
js
imul
jp
push
push
popa
out
inc
add
push
or
rcl
xchg
and
xor
into
test
xor
mov
adc
movs
sbb
xchg
lea
les
sbb
and
pop
or
mov
int
dec
mov
ficom
js
mov
and
xchg
pusha
xor
mov
cli
lock
adc
jle
inc
cmp
add
push
inc
and
icebp
add
adc
push
cwde
test
inc
add
sub
adc
mov
pop
cli
ret
imul
test
and
call
inc
nop
pop
int3
(bad)
and
push
add
inc
pop
mov
adc
jmp
add
sbb
nop
mov
add
inc
aaa
repnz
add
inc
ins
call
push
cmp
cwde
rol
adc
sub
dec
add
jo
ds
lea
adc
aaa
mov
inc
xor
les
rol
je
lsl
and
add
and
sub
pushf
and
jne
pop
out
sub
cmps
xchg
mov
jl
and
fwait
xor
and
adc
and
mov
nop
jno
imul
in
dec
sub
loop
add
push
jg
pusha
inc
cmp
mov
cmp
jecxz
or
push
inc
cmp
iret
popa
sub
das
and
add
jbe
mov
and
add
mov
pop
arpl
and
cmp
xor
push
mov
or
cdq
lods
add
push
popa
xchg
shl
cmp
mov
inc
mov
push
fiadd
enter
inc
xchg
pop
in
and
xor
xor
add
sbb
mov
and
ja
sti
data16
mov
inc
and
test
stos
(bad)
adc
xchg
scas
ins
inc
and
add
dec
and
sub
je
and
addr16
and
jno
and
bound
hlt
ret
into
lsl
push
addr16
enter
mov
pop
adc
fs
(bad)
repnz
inc
sub
or
adc
rcl
add
rcl
add
adc
pop
lods
and
pop
sub
out
mov
pop
dec
xchg
lea
add
or
push
dec
and
data16
retf
mov
test
jecxz
xchg
adc
mov
sub
push
cmp
and
mov
adc
jb
mov
mov
fst
add
jae
test
sbb
inc
pop
lss
push
jp
enter
lsl
clc
fcmovnbe
bound
repnz
jns
add
dec
loopne
mov
push
retf
or
inc
cmc
jl
add
mov
out
inc
and
(bad)
cmp
adc
je
ror
daa
push
adc
loope
adc
jo
xchg
or
or
mov
retf
test
test
pop
pop
ss
inc
dec
pop
fs
pop
in
ins
cmp
pop
inc
js
and
mov
xchg
iret
pusha
rol
jo
daa
and
sbb
and
ins
rol
int3
js
add
jle
pushf
cmp
add
and
fmul
mov
sbb
jle
in
sub
ret
adc
adc
mov
les
add
aas
xchg
loopne
test
pop
fiadd
add
out
js
or
xchg
sbb
xchg
or
or
add
lods
fmul
cmp
adc
xchg
mov
fsubr
nop
add
inc
mov
mov
jb
or
icebp
mov
test
or
inc
fdivrp
and
enter
sbb
mov
scas
or
pusha
add
pop
rol
add
xor
icebp
inc
or
xor
xor
mov
push
scas
push
add
jo
mov
gs
jne
and
mov
int3
adc
and
and
push
adc
inc
movnti
inc
ror
ror
loope
add
ds
xchg
adc
or
push
push
xor
jb
xor
dec
push
test
clc
xor
mov
pextrw
add
popf
and
mov
adc
sbb
test
push
or
pop
or
pop
add
pop
(bad)
inc
adc
mov
mov
add
push
in
adc
nop
xor
sub
mov
in
xor
outs
loopne
or
xchg
sti
test
xor
inc
push
pop
movs
adc
adc
mov
cmps
inc
adc
(bad)
push
lock
add
test
adc
push
cmp
inc
in
lock
cmp
inc
ror
inc
add
repz
sub
adc
pop
icebp
mov
push
inc
pmuludq
xor
scas
sbb
aaa
adc
loopne
mov
xor
ja
xor
push
xor
fsub
sbb
mov
cmp
xchg
mov
add
jo
or
and
rol
push
pop
adc
rol
or
pop
mov
add
cmps
or
icebp
add
pop
xchg
test
pop
cmp
add
shl
mov
retf
rol
inc
sub
adc
jg
aad
mov
adc
cmpps
out
sbb
test
or
add
aam
ja
xchg
or
or
call
add
push
cmp
imul
adc
and
jle
cmovbe
test
das
inc
add
and
test
or
or
or
xor
jl
imul
or
add
adc
push
adc
and
or
add
or
add
aaa
xchg
push
push
adc
ds
add
mov
sub
or
push
add
pushf
lock
psraw
push
(bad)
adc
and
add
and
push
mov
inc
cmp
jbe
adc
adc
xor
and
enter
jo
shl
xor
mov
xchg
push
xor
mov
push
or
rol
mov
pusha
xor
movs
jge
ror
add
xor
add
and
call
and
adc
or
pop
adc
mov
in
sbb
or
movs
adc
adc
test
or
or
push
stc
xchg
or
aaa
and
call
xchg
jge
ror
and
nop
push
add
add
push
xchg
aaa
xchg
js
rol
data16
pop
ret
pusha
inc
js
xor
popa
adc
sbb
inc
loopne
lods
jb
js
inc
(bad)
mov
xchg
pop
gs
inc
mov
add
jo
hlt
adc
mov
adc
sbb
xchg
ja
and
jmp
test
loop
and
xor
repnz
dec
loopne
fist
push
adc
loopne
xchg
jnp
add
mov
add
adc
aam
imul
add
push
adc
in
add
loope
pusha
mov
mov
arpl
or
loopne
pop
push
or
adc
or
pop
imul
or
pop
and
or
add
push
test
add
and
repnz
loopne
add
fmul
shl
div
repz
sbb
or
gs
test
test
or
inc
push
pop
lock
add
push
mov
ss
add
loopne
mov
or
cwde
popf
cmp
enter
mov
cmc
cmp
add
invd
movups
jne
(bad)
inc
cmp
xor
lock
add
cmp
nop
or
rol
and
sub
leave
mov
retf
add
jno
neg
adc
xchg
push
icebp
test
inc
jb
jo
daa
mov
add
icebp
ror
mov
adc
shl
loope
test
sub
inc
push
xchg
pop
adc
add
pushf
or
or
mov
inc
lock
push
js
dec
adc
ud1
rol
pop
and
adc
mov
xchg
cmc
push
add
outs
outs
rol
fstp
pop
mov
retf
gs
lea
and
add
sub
sti
movs
cdq
mov
arpl
mov
xor
loop
outs
adc
pusha
add
add
xor
adc
pop
inc
sub
adc
cmp
adc
add
cmp
jb
rol
xor
add
add
nop
lea
mov
adc
or
loop
or
adc
add
jbe
mov
rol
add
add
jo
shl
mov
retf
add
push
inc
add
pop
ret
pop
xor
pop
sbb
and
xchg
or
mov
mov
dec
pop
inc
sbb
add
mov
jnp
jno
retf
inc
push
push
adc
mov
popa
lahf
fwait
popw
mov
stos
pop
adc
add
stos
adc
adc
fcom
mov
adc
adc
mov
(bad)
mov
call
add
or
and
nop
add
nop
push
ret
movs
ins
data16
es
rcl
push
jmp
das
ins
adc
and
or
add
push
ret
in
sbb
mov
sbb
mov
es
sar
adc
xchg
outs
fwait
adc
hlt
add
ror
leave
adc
pusha
in
rcr
repz
push
inc
adc
push
inc
adc
push
mov
mov
sub
xchg
xor
mov
jb
mov
add
push
loopne
add
add
or
push
retf
jo
adc
adc
adc
push
inc
and
icebp
pop
dec
fidivr
mov
retf
inc
or
sub
mov
add
inc
xchg
test
xor
mov
lock
sti
adc
fldenv
stos
adc
aam
add
adc
add
or
add
ror
push
adc
movs
or
add
add
mov
rol
mov
mov
adc
add
mov
sar
stos
adc
adc
sub
mov
iret
pop
rol
repnz
iret
daa
icebp
xor
or
mov
add
(bad)
or
inc
add
mov
sbb
push
jae
or
cmp
sbb
pop
inc
pop
adc
adc
inc
pop
sbb
movs
rcl
es
aam
pop
fcom
adc
daa
cmp
pop
(bad)
add
xor
sti
mov
jns
rol
jno
pop
inc
rol
push
xor
or
sysexit
rol
jno
rol
add
add
aam
or
fst
add
mov
or
lock
adc
pop
sbb
add
or
nop
cvtdq2ps
xor
add
or
add
xor
xlat
adc
aad
bswap
pusha
or
xor
xor
(bad)
nop
or
adc
push
xor
rcl
jge
xor
rol
pop
xor
or
lock
xor
add
pop
mov
add
loopne
dec
add
xor
shl
pop
jns
fnstcw
mov
add
add
xor
rol
movs
rol
adc
dec
adc
jae
fsub
or
add
mov
cmp
rcr
loopne
adc
add
fsubp
cmp
and
add
add
add
add
add
pusha
or
adc
mov
scas
loopne
je
add
fimul
dec
adc
add
or
pop
fidiv
adc
cmp
cli
adc
fisttp
shl
jns
or
or
adc
rol
lods
syscall
mov
stos
and
push
lock
push
adc
adc
or
adc
pusha
add
cmp
jno
add
xor
in
add
or
adc
out
jno
or
jg
or
dec
xchg
pop
jg
or
sahf
adc
or
inc
rol
mov
jl
adc
lock
jge
call
pop
call
das
sahf
call
icebp
jle
jmp
pop
jmp
sahf
jmp
fsubrp
sahf
(bad)
jmp
ds
add
add
adc
add
add
add
push
add
popa
xor
sbb
jp
add
ins
je
add
add
inc
dec
inc
cmp
popa
pop
add
xchg
add
add
add
inc
add
add
and
add
inc
arpl
and
add
fsub
add
aas
popa
xor
adc
adc
(bad)
mov
jo
call
xchg
dec
add
add
sbb
mov
lods
lock
shr
mov
add
dec
int
leave
sub
sub
imul
jecxz
xchg
xchg
or
or
movs
jo
add
pop
cmp
cmp
js
lock
add
inc
and
pop
test
add
add
jno
or
mov
sub
sub
push
movs
movs
in
loopne
jns
sbb
sbb
add
sbb
sub
daa
leave
push
movs
mov
push
xchg
cmp
ss
jne
out
out
sbb
mov
ror
add
add
add
inc
addr16
loope
fsub
push
xchg
nop
nop
ss
repnz
in
xchg
dec
add
add
sbb
test
push
push
sub
ins
jmp
mov
pop
pop
ds
cli
cmc
cmc
dec
sub
dec
dec
dec
stos
pop
add
add
je
mov
das
sbb
out
jl
sbb
add
inc
and
sar
data16
adc
mov
ror
int
or
leave
(bad)
mov
xor
cmp
ins
cmp
inc
inc
inc
bound
adc
mov
frstpm(287
ja
xchg
mov
jb
lock
push
or
push
sub
xor
add
jg
aad
add
dec
mov
cmp
jp
repz
daa
add
add
jb
or
add
jnp
sbb
sbb
add
add
add
push
xchg
dec
add
das
das
jo
ins
in
out
pushf
cdq
cdq
dec
dec
dec
lods
pop
add
add
add
adc
adc
retf
or
sbb
ret
ret
mov
rol
pop
pop
pop
pop
pop
mov
mov
iret
iret
pfacc
stos
stos
retf
mov
fcmovu
ret
and
add
jb
sbb
add
add
add
sbb
repz
cli
add
add
push
add
(bad)
add
and
and
inc
xor
xor
jmp
xchg
div
repnz
sub
loop
cmps
mov
jp
ja
mov
inc
inc
jecxz
fidiv
ss
out
push
push
push
das
cs
out
div
dec
dec
dec
pop
push
push
mov
(bad)
jbe
jae
outs
outs
sahf
fwait
fwait
loope
add
outs
add
add
push
add
push
add
imul
stc
add
or
inc
sub
add
add
inc
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
dec
mov
aad
pop
mov
(bad)
mov
xlat
scas
pusha
ret
mov
and
(bad)
stos
pop
mov
mov
jae
mov
xchg
out
adc
cdq
adc
dec
movs
popa
sti
aam
mov
cmp
and
mov
sub
les
or
test
add
mov
sbb
mov
inc
shl
popa
inc
ret
nop
adc
jl
dec
shl
jns
push
rol
cmp
(bad)
pop
icebp
mov
cmps
or
sub
and
inc
pop
mov
mov
rcr
cmp
out
cmp
xchg
and
mov
mov
mov
inc
mov
pop
adc
ror
inc
jecxz
mov
xchg
pop
inc
mov
sbb
shl
loopne
ret
xchg
addr16
icebp
add
or
jmp
rcr
inc
les
les
or
inc
or
adc
std
bound
aaa
pusha
adc
cmp
lock
aaa
les
iret
cmp
or
or
imul
jb
inc
out
lds
aaa
or
xchg
loop
adc
add
pop
or
or
add
or
adc
adc
sbb
test
jl
add
fcmovnb
add
or
lock
mov
jae
mov
sub
nop
xchg
xchg
adc
inc
push
or
fisttp
inc
cmp
add
pop
aad
inc
inc
cmp
or
rcl
and
les
rol
add
and
nop
push
popf
and
or
repnz
js
sbb
dec
and
cmp
xchg
push
and
cmps
add
out
adc
cmp
mov
inc
div
out
and
dec
adc
jae
(bad)
push
or
add
add
sub
add
mov
(bad)
xchg
and
jp
clc
jno
sbb
inc
mov
call
add
sub
rcl
push
mov
scas
dec
add
sbb
adc
cmp
or
lea
xchg
repnz
adc
enter
adc
das
or
sbb
dec
jo
lods
mov
adc
cmp
adc
(bad)
push
cmp
push
and
jns
xlat
or
add
sub
inc
jp
and
and
dec
jo
movs
stos
adc
adc
js
(bad)
xor
test
add
inc
mov
xchg
push
mov
int3
sbb
mov
add
cmovno
or
mov
add
bndldx
aam
adc
mov
cmp
push
add
sbb
cmp
push
outs
cmp
xor
test
mov
xchg
jl
arpl
or
inc
add
daa
mov
sub
inc
xlat
mov
jecxz
popa
pop
xor
xor
inc
and
sub
xchg
pusha
push
stos
or
pop
outs
cmp
cmp
andps
inc
rol
inc
push
mov
and
xchg
sub
or
ret
push
scas
mov
inc
push
dec
cmp
dec
and
test
and
mov
inc
and
push
or
repnz
pop
jmp
hlt
call
add
push
shl
add
aam
movs
pusha
sub
dec
adc
sub
fwait
jmp
loope
gs
ins
xchg
mov
test
daa
call
xbegin
mov
call
cs
and
push
nop
inc
xlat
push
arpl
enter
mov
mov
and
test
and
inc
mov
ins
ret
fwait
add
or
dec
sbb
(bad)
sbb
and
cmp
xchg
and
push
js
sbb
idiv
test
rcr
inc
mov
cwde
and
jb
cmp
lock
inc
xchg
push
popa
add
inc
stos
or
mov
nop
out
loopne
sti
repz
pop
pop
loop
js
loop
mov
dec
add
and
pusha
sbb
fsub
mov
or
fs
add
sbb
inc
(bad)
mov
adc
mov
inc
mov
dec
xor
add
add
ins
ror
popf
movs
adc
dec
sahf
sbb
or
test
shl
mul
push
out
lds
add
adc
push
adc
and
rcl
add
in
adc
jo
lods
test
push
cmp
sub
lock
add
cmc
sbb
or
lock
sbb
popa
test
pop
test
out
adc
adc
adc
ficom
(bad)
adc
or
adc
dec
cmps
sbb
and
cli
in
lahf
mov
not
add
adc
pop
mov
inc
xchg
pop
mov
int3
lods
push
inc
cmp
inc
inc
bound
mov
inc
inc
push
sar
or
dec
rol
push
push
sbb
les
and
cmp
popa
dec
adc
in
and
inc
mov
mov
nop
sysexit
and
loop
pop
add
je
push
xchg
mov
inc
and
pop
cmp
push
sbb
and
add
in
mov
dec
aaa
in
ret
repnz
popa
cmp
inc
or
rol
dec
add
xchg
and
push
les
aad
je
push
or
inc
cmp
lock
push
push
cmps
loopne
mov
dec
pop
add
and
and
or
lock
adc
mov
loope
gs
out
(bad)
loopne
ror
lds
dec
inc
push
inc
sub
inc
or
cmps
test
or
sbb
push
test
or
add
cmp
fild
inc
(bad)
push
jne
or
cmp
jb
or
dec
popa
and
jo
aaa
xchg
rol
cwde
shl
lock
inc
mov
sub
mov
lock
or
mov
sub
dec
inc
and
cmp
push
mov
adc
in
mov
add
movs
inc
aam
adc
add
js
les
loopne
and
dec
adc
mov
cmp
add
add
clc
jb
cmp
mov
pop
enter
mov
loop
es
xor
or
sbb
call
lds
dec
ret
push
cmp
push
or
call
add
cld
or
mov
mov
ins
and
inc
mov
outs
pop
cmp
mov
test
mov
and
inc
sbb
and
mov
jnp
and
mov
loopne
add
cmp
cwde
and
adc
sub
or
outs
inc
mov
gs
push
inc
je
jo
es
push
outs
and
push
add
inc
xor
or
mov
xchg
dec
add
mov
adc
leave
or
icebp
sbb
(bad)
xchg
mov
add
daa
sub
pop
imul
repnz
(bad)
mov
add
add
inc
ret
xor
pusha
dec
test
or
mov
popa
mov
adc
loop
cmp
scas
scas
push
fadd
cli
enter
clc
push
jo
scas
adc
pop
add
psubusb
add
rcr
gs
shl
dec
mov
xor
data16
push
add
ret
nop
add
add
push
cmp
push
sub
mov
and
in
mov
mov
test
(bad)
sub
or
test
or
scas
mov
js
xchg
iret
add
shl
push
or
ret
retf
pop
dec
int
xor
cmp
xchg
mov
test
sbb
sbb
and
rol
push
xor
nop
pop
inc
addr16
add
loopne
stc
add
sbb
cmps
adc
and
loopne
cwde
test
add
push
mov
repz
push
loopne
shl
int3
ror
mov
pop
add
push
(bad)
shl
ror
loope
test
inc
and
cmp
push
lock
fdiv
mov
sub
ss
or
pop
fs
push
outs
sub
adc
push
daa
xor
add
or
and
jo
(bad)
mov
push
loopne
shl
popa
or
add
nop
sbb
adc
adc
or
aam
enter
nop
push
mov
test
push
push
push
lock
in
add
xor
ins
loopne
or
lods
gs
mov
or
movs
dec
add
or
cmp
leave
add
xor
lock
xor
xor
push
sbb
add
ror
or
mov
dec
sub
loopne
push
dec
adc
fldenv
adc
cvtdq2ps
adc
and
adc
adc
mov
pop
jp
pop
add
rcl
jo
inc
inc
add
add
sidtd
pop
je
or
aas
inc
add
das
shr
xor
adc
mov
xor
xchg
mov
in
add
jo
and
popa
jo
jo
shl
sbb
or
xchg
push
repnz
push
pushf
gs
xor
adc
and
icebp
mov
outs
loopne
movs
xor
fcmovnbe
adc
and
outs
xchg
jge
loopne
in
gs
or
inc
add
or
push
data16
xor
push
lock
adc
aas
sahf
rcl
ror
jp
add
or
rol
and
pushf
add
or
fidiv
pop
ret
pop
add
icebp
lock
shl
les
xor
inc
push
daa
xor
mov
or
push
add
icebp
add
jo
icebp
xor
popf
sub
pop
add
dec
add
adc
loopne
and
jae
pop
and
or
or
loop
sti
arpl
mov
mov
adc
or
xchg
and
and
jae
sbb
mov
or
adc
or
aaa
out
push
adc
gs
mov
adc
or
add
xchg
pop
and
mov
adc
push
add
arpl
inc
mov
and
push
(bad)
fcom
pop
stc
add
adc
jmp
xchg
mov
and
jp
and
fucomp
adc
push
and
das
jle
adc
repz
ins
xor
mov
add
adc
rcr
nop
and
add
push
mov
add
push
push
mov
adc
ror
or
sbb
sbb
or
or
adc
jnp
pusha
add
lock
inc
or
add
leave
and
mov
adc
push
jecxz
sbb
not
dec
ror
inc
adc
shl
push
or
adc
cmp
lock
add
add
add
xchg
adc
xchg
fild
xchg
out
popa
jg
adc
xchg
pusha
add
xor
shl
adc
push
or
sub
pop
jo
pushf
loopne
and
adc
mov
rcl
rol
daa
adc
shr
loopne
add
push
outs
loopne
jne
adc
nop
add
bsr
push
dec
je
cmp
adc
xor
data16
or
data16
js
pop
sbb
adc
inc
cdq
out
stc
jne
rol
sahf
lock
jbe
jge
adc
or
arpl
fcom
lahf
mov
icebp
add
stos
adc
pmulhw
je
mov
add
lock
rcr
daa
cmp
or
movs
fld
or
jg
add
adc
pop
or
xor
cmp
or
add
pop
loopne
adc
cmp
pop
out
add
inc
inc
ss
ror
and
jo
iret
dec
jno
nop
add
adc
or
or
adc
sub
adc
pop
fiadd
pop
mov
cmp
cmps
mov
or
test
ret
add
mov
and
push
stos
adc
add
add
stos
ret
xor
adc
lahf
or
jbe
add
pop
mov
jle
inc
popf
shl
jge
add
rcl
stos
add
cmps
sbb
xor
leave
jbe
push
mov
sbb
add
mov
or
outs
mov
or
inc
es
cmp
or
cmp
sbb
inc
or
adc
sbb
or
inc
push
adc
loopne
or
outs
mov
push
loopne
pop
and
dec
adc
ret
push
push
jg
outs
mov
or
adc
xchg
fst
imul
sub
sub
mov
add
sbb
mov
jns
push
or
pusha
sub
adc
rol
mov
pushf
and
and
adc
adc
icebp
jnp
es
add
or
jb
mov
icebp
xor
stos
add
adc
adc
add
adc
push
or
mov
pop
and
pop
rol
or
push
xchg
nop
add
loopne
iret
mov
push
and
sahf
or
mov
add
push
pusha
push
cmovne
adc
adc
mov
push
rol
mov
sbb
cs
or
add
add
stc
xor
sub
or
or
xor
retf
or
sub
mov
add
xchg
adc
add
or
sub
cmps
adc
mov
add
adc
adc
add
adc
adc
or
and
or
inc
add
mov
arpl
push
and
xchg
add
pop
int
(bad)
jle
(bad)
sbb
je
enter
adc
pcmpeqb
mov
adc
mov
ins
icebp
or
inc
or
or
push
add
leave
sahf
cld
adc
mov
or
pop
nop
add
push
add
or
adc
push
add
xlat
add
ror
push
adc
or
add
push
inc
and
jns
or
or
or
add
aas
mov
jae
add
pusha
pop
shl
stc
pusha
int3
out
adc
xor
les
mov
adc
add
or
ror
loopne
mov
vmwrite
xchg
loopne
push
nop
or
add
jl
dec
adc
mov
xor
jnp
add
xor
jns
or
inc
add
pop
jae
or
nop
bswap
mov
add
add
or
pop
or
inc
popa
or
or
xor
add
add
adc
push
or
add
pop
in
pop
or
add
dec
add
mov
xor
pop
push
or
mov
pop
add
add
or
xor
push
and
push
loopne
or
or
mov
fwait
push
or
loopne
test
adc
mov
es
sbb
or
adc
mov
add
add
mov
add
pop
(bad)
add
nop
pop
fnstenv
jae
or
add
inc
xor
dec
pusha
aad
push
adc
or
xor
xchg
or
add
push
or
or
add
ror
jl
xor
pop
add
adc
mov
push
popf
leave
ds
add
push
stos
push
adc
or
adc
mov
stos
lock
std
adc
lock
(bad)
or
fstp
dec
dec
icebp
ror
in
fucom
ins
adc
push
xlat
jecxz
fiadd
or
fsubrp
fstp
out
std
fdivp
sbb
hlt
pop
fcomip
lods
adc
nop
(bad)
mov
(bad)
std
fild
push
loopne
ds
pop
loopne
jle
or
or
loopne
(bad)
loopne
push
loope
add
cmp
add
add
adc
or
inc
cld
or
add
push
add
popa
xor
sbb
fmul
add
ins
je
add
or
add
inc
cmp
popa
pop
add
xchg
add
add
add
inc
add
add
add
and
inc
inc
inc
arpl
and
add
fsub
add
aas
popa
xor
adc
adc
(bad)
mov
xor
jo
or
xchg
dec
add
add
sbb
lock
shr
mov
lods
mov
add
dec
int3
enter
push
jecxz
cwde
xchg
xchg
or
or
sub
add
pop
div
icebp
cmp
cmp
add
inc
and
pop
test
movs
test
add
jp
dec
add
add
add
mov
push
push
loope
jmp
sbb
add
sbb
leave
push
push
mov
add
cmp
aaa
js
jne
or
mov
ror
add
add
add
inc
addr16
loope
fsub
push
xchg
nop
nop
repnz
in
ss
xchg
dec
add
add
sbb
test
push
push
outs
ins
ins
jmp
mov
aas
add
pop
stc
hlt
hlt
ds
dec
dec
dec
stos
pop
add
add
je
mov
das
sbb
out
jl
sbb
add
inc
and
sar
and
inc
inc
inc
bound
adc
adc
mov
int3
int3
or
or
test
mov
aam
xor
jle
jl
xor
ins
cmp
mov
frstpm(287
ja
nop
lea
xor
jne
jb
or
push
sub
xor
add
jg
aad
add
dec
mov
clc
repz
add
add
jb
or
add
jnp
sbb
sbb
add
add
pop
push
push
xchg
dec
add
ins
in
out
pushf
cdq
cdq
xor
das
dec
dec
dec
lods
pop
add
add
add
adc
adc
retf
or
or
sbb
mov
xlat
rcl
push
push
push
mov
mov
iret
iret
(bad)
(bad)
imul
fcmovnbe
xlat
(bad)
fcmovb
mov
(bad)
sbb
add
add
add
sbb
repz
cli
add
add
push
add
(bad)
add
and
and
xor
dec
dec
dec
call
cmps
cmps
out
loop
sub
cmps
mov
jp
ja
mov
inc
inc
jecxz
fdivp
out
out
aaa
ss
push
push
jmp
out
cs
div
dec
dec
dec
pop
push
push
push
push
push
mov
(bad)
jbe
jae
outs
outs
sahf
fwait
fwait
loope
add
outs
add
add
push
add
push
add
imul
or
fidiv
push
pop
add
pop
add
add
and
add
or
inc
sub
add
add
inc
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
dec
mov
aad
pop
mov
(bad)
mov
xlat
scas
pusha
ret
mov
mov
shr
mov
mov
ret
js
ss
ins
popf
sahf
cdq
and
or
test
test
test
mov
adc
mov
mov
mov
and
sbb
ret
fdivr
mov
inc
lea
pop
add
inc
inc
and
pop
test
rol
jno
ss
cmps
xchg
lahf
xchg
jmp
icebp
xor
loopne
xor
jecxz
loopne
fdivr
mov
or
jmp
push
xchg
rol
(bad)
mov
adc
and
rep
adc
inc
mov
mov
adc
cmp
popf
xor
dec
add
movs
and
adc
or
ret
fsub
bound
lock
pushf
cmp
rol
sub
or
cmp
ins
jae
add
ins
rol
ss
and
add
mov
mov
test
add
dec
adc
mov
cmp
fnstenv
imul
jno
mov
bound
cmps
sbb
dec
or
lods
ror
dec
and
cvttps2pi
cmps
push
add
push
mov
jmp
jecxz
add
jp
ret
or
fistp
push
push
fwait
mov
mov
cmp
cmp
leave
std
jmp
cdq
fcom
push
or
inc
sbb
lds
shl
test
inc
call
add
add
dec
add
retf
inc
or
xchg
inc
cwde
jae
and
add
loopne
or
fs
fldenv
push
das
push
test
enter
bound
test
test
test
push
dec
daa
jmp
and
(bad)
mov
pop
adc
mov
scas
enter
fistp
shl
lods
xor
dec
jb
mov
movs
ror
and
inc
sbb
xor
cmp
add
push
inc
and
fdivr
add
add
ins
pop
inc
inc
sub
xor
sub
nop
or
movs
and
adc
mov
jae
sbb
stos
mul
or
pusha
(bad)
cmp
scas
jecxz
add
data16
and
and
add
aad
mov
lds
loop
and
das
add
and
add
push
xor
test
mov
push
ins
movs
lahf
les
add
sub
pop
jmp
mov
or
imul
or
js
rdtsc
stos
cld
add
adc
sahf
pusha
jp
cmp
or
outs
add
in
icebp
test
adc
mov
mov
arpl
pop
add
sub
mov
and
push
mov
xchg
popf
xor
sbb
or
mov
add
xchg
popa
add
bound
and
mov
xor
loopne
jmp
in
sub
ret
sbb
and
xchg
add
or
rol
adc
icebp
push
adc
pusha
add
mov
test
ret
adc
inc
mov
sub
and
int3
das
int3
ja
ins
mov
shl
lea
add
adc
push
mov
push
add
add
add
dec
or
test
mov
add
jl
add
popa
sbb
pop
push
adc
cmp
jne
push
add
pushf
(bad)
adc
jp
adc
and
pop
(bad)
es
add
pop
mov
enter
cmp
mov
add
mov
pusha
and
or
jns
das
sbb
adc
and
push
inc
pop
xor
add
cwde
aad
push
mov
push
inc
and
jmp
dec
(bad)
(bad)
cmps
nop
ss
add
cmp
inc
xor
adc
push
dec
push
cmp
xor
cwde
mov
inc
jmp
fld
mov
push
push
sbb
mov
dec
xchg
mov
add
sbb
cld
pusha
push
pop
inc
dec
sbb
sar
icebp
inc
add
or
dec
int3
add
or
inc
ss
and
xor
fist
adc
mov
pop
cs
inc
loope
dec
pop
cmp
cmps
jne
sar
inc
mov
adc
mov
or
add
cmp
push
xor
jno
xlat
push
and
push
xchg
fsubr
pop
dec
jo
or
and
push
loope
jne
bound
dec
push
ret
mov
leave
inc
les
mov
adc
cmps
rcr
dec
ret
adc
or
lods
add
stos
sub
xor
or
lds
inc
inc
adc
or
push
cmp
pop
inc
or
repnz
adc
adc
push
ds
mov
dec
sub
or
cmp
adc
xor
sub
inc
jle
push
sub
lods
push
imul
sub
stos
add
sbb
xlat
mov
sbb
mov
dec
and
inc
and
mov
sub
or
data16
mov
sbb
mov
inc
lds
adc
ins
and
and
push
cmp
add
inc
xchg
push
mov
sbb
js
xchg
or
ret
xor
pop
xchg
movs
inc
add
xor
and
push
mov
and
loop
mov
dec
ret
lds
inc
or
loop
dec
les
aad
add
fadd
mov
int3
in
aam
adc
mov
and
add
or
mov
aas
call
aam
push
sbb
add
push
mov
xchg
or
mov
pop
push
nop
add
int3
mov
sbb
push
out
add
xor
test
xor
das
add
and
pavgb
adc
mov
and
xchg
cmp
sub
enter
pop
sbb
push
jbe
(bad)
push
push
popa
adc
mov
sbb
and
hlt
cwde
lds
in
pusha
push
push
bound
not
push
test
add
add
xor
adc
add
inc
mov
or
or
and
mov
or
shr
mov
xor
add
cmp
inc
add
loopne
aaa
js
adc
stos
adc
(bad)
pusha
inc
es
and
sbb
or
lea
and
shl
shr
retf
loopne
aaa
add
jno
add
dec
ret
popa
pop
push
add
shl
sbb
popa
or
scas
inc
inc
dec
push
or
test
ror
or
pusha
inc
es
add
push
or
mov
add
add
and
rol
scas
jno
add
test
mov
call
cs
push
mov
ret
push
mov
jge
fmul
(bad)
outs
nop
or
das
or
add
ret
lock
loop
iret
clc
mov
jecxz
nop
(bad)
mov
retf
repnz
iret
mov
into
jnp
repz
dec
cli
rcr
add
add
add
add
add
add
add
or
add
popa
xor
sbb
in
add
ins
je
add
adc
add
inc
cmp
popa
pop
add
xchg
add
add
add
inc
add
add
and
add
inc
arpl
and
add
fldenv
add
aas
popa
xor
adc
adc
(bad)
mov
jo
call
xchg
dec
add
add
sbb
mov
lods
lock
shr
mov
add
dec
int3
enter
sub
imul
jecxz
xchg
xchg
or
or
movs
jo
add
pop
cmp
cmp
js
lock
add
inc
and
pop
test
add
add
jno
or
mov
sub
sub
push
movs
movs
out
loope
jns
sbb
sbb
add
sbb
sub
daa
leave
push
movs
mov
push
xchg
cmp
aaa
js
jne
out
out
sbb
mov
ror
pop
add
add
add
inc
addr16
loop
frstor
push
xchg
nop
nop
ss
icebp
in
in
xchg
dec
add
add
sbb
test
push
push
cs
jmp
cwde
mov
pop
pop
pop
ds
cli
cmc
cmc
dec
sub
dec
dec
dec
stos
pop
add
add
je
mov
das
sbb
out
jl
sbb
add
inc
and
sar
data16
adc
mov
ror
int
or
enter
mov
xor
cmp
ins
cmp
inc
inc
inc
bound
adc
mov
frstpm(287
ja
xchg
mov
jb
lock
push
or
push
sub
xor
add
jg
aad
add
dec
mov
cmp
jp
repz
daa
add
add
jb
or
add
jnp
sbb
sbb
add
add
pop
push
push
xchg
dec
add
das
das
jno
outs
in
out
pushf
cdq
cdq
dec
dec
dec
lods
pop
add
add
add
adc
adc
retf
or
sbb
ret
mov
xlat
rcl
pop
pop
pop
push
push
push
mov
mov
iret
iret
push
push
push
scas
stos
stos
retf
mov
fcmovu
ret
mov
(bad)
sbb
add
add
add
sbb
repz
cli
add
add
push
add
(bad)
add
and
and
inc
xor
xor
jmp
xchg
div
repnz
sub
loop
cmps
mov
jp
ja
mov
inc
inc
jecxz
fidiv
ss
out
push
push
push
das
cs
out
div
dec
dec
dec
pop
push
push
mov
(bad)
jbe
jae
outs
outs
sahf
fwait
fwait
loope
add
outs
add
add
push
add
push
add
imul
stc
add
or
inc
sub
add
add
inc
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
dec
mov
aad
pop
mov
(bad)
mov
xlat
scas
pusha
ret
mov
sbb
stos
pop
fwait
adc
adc
and
in
sbb
test
enter
jae
pop
mov
add
fxch
or
mov
loop
imul
and
clc
dec
fs
mov
mov
loop
lds
icebp
fmul
bound
sub
mov
pop
(bad)
int
mov
sbb
push
sub
fwait
mov
push
cdq
mov
jno
fstp
lock
fsubr
(bad)
loop
gs
and
inc
aas
dec
fidiv
mov
addr16
fcmove
enter
or
sbb
sub
and
add
xchg
mov
jb
xor
and
lds
xchg
ins
cmps
cwde
cmp
xor
push
adc
inc
cmp
loopne
push
or
sbb
pop
adc
rol
dec
cmp
push
cs
clc
inc
add
sub
pop
xor
ins
inc
adc
sub
adc
xchg
inc
push
sbb
add
repz
inc
daa
es
pop
imul
add
enter
mov
lods
push
icebp
rcl
lods
or
bound
add
test
adc
sbb
or
icebp
sub
dec
push
test
jno
xor
mov
test
and
paddusw
pop
imul
jb
hlt
loop
inc
sub
mov
inc
cdq
adc
sub
push
push
rcr
rol
les
test
add
bound
adc
inc
push
cmp
inc
add
jg
or
nop
and
mov
adc
call
inc
movs
push
add
fisttp
mov
or
sbb
fs
sub
js
inc
sub
inc
test
add
nop
inc
push
cmp
add
mov
cmp
dec
aaa
add
mov
jo
push
adc
push
sbb
or
pushf
xor
arpl
adc
adc
nop
loopne
xchg
sub
sbb
add
ror
(bad)
push
icebp
adc
out
inc
lods
jo
inc
push
les
into
inc
inc
mov
in
fisubr
add
mov
cmp
add
adc
push
sbb
mov
jp
retf
inc
add
pop
or
(bad)
in
inc
or
xor
mov
jae
or
adc
fs
popf
mov
(bad)
push
add
rcr
jmp
fs
ret
or
movs
mov
adc
jge
enter
(bad)
repz
or
nop
ins
add
mov
mov
ret
cmc
sub
enter
popa
test
mov
repnz
sub
xor
inc
sub
cmp
mov
inc
xor
sub
in
xor
popf
loopne
dec
cmp
cmp
mov
loopne
leave
cmc
push
inc
xor
imul
add
pop
les
xor
cmp
mov
adc
das
(bad)
inc
adc
sub
dec
daa
sbb
and
dec
push
sbb
movs
or
cmp
xor
push
or
sbb
or
adc
push
sbb
cmp
and
push
dec
add
nop
add
pop
or
sbb
gs
push
rol
sbb
pusha
pop
call
add
sahf
js
sub
jecxz
fbstp
das
push
shr
loopne
cmp
add
sbb
add
test
and
mov
mov
xchg
or
popa
adc
sbb
push
mov
adc
cwde
ret
jmp
push
and
push
mov
jo
add
adc
popa
or
and
adc
mov
or
and
clc
nop
bound
ror
arpl
inc
movs
inc
popa
push
jb
lds
out
push
and
pop
lock
or
and
mov
mov
mov
bound
popa
and
xor
or
stc
sub
push
mov
mov
mov
mov
and
xchg
fimul
inc
jnp
arpl
xor
das
pusha
leave
sbb
add
pusha
rol
(bad)
inc
or
jmp
dec
add
test
adc
xor
and
(bad)
xchg
xchg
sub
xor
js
inc
and
mov
sub
inc
cwde
push
and
call
pop
sbb
xlat
nop
mov
dec
or
mov
and
add
inc
sbb
inc
mov
ret
cwde
push
push
mov
cmps
inc
sbb
xor
fsub
push
add
ret
sub
cwde
adc
adc
and
and
nop
arpl
shl
mov
mov
dec
inc
inc
adc
and
aaa
loopne
fnstsw
in
arpl
or
and
sub
(bad)
cmp
push
add
xchg
cs
imul
aaa
pushf
and
inc
add
sub
popa
(bad)
(bad)
push
or
popa
add
mov
and
enter
in
dec
dec
add
dec
push
add
add
adc
cmp
imul
add
add
loopne
jmp
cmp
inc
jp
lods
fs
add
push
enter
mov
test
(bad)
adc
xchg
mov
mov
add
int3
inc
pushf
or
mov
adc
mov
leave
and
sbb
inc
inc
xor
and
xor
cmp
xor
push
jo
(bad)
aam
sbb
or
mov
rol
test
xlat
loop
pop
xor
mov
(bad)
retf
jno
inc
mov
add
add
sti
xor
and
(bad)
and
(bad)
xor
daa
or
and
mov
(bad)
aam
xchg
outs
cmps
icebp
enter
mov
test
sub
add
ds
adc
mov
push
xor
add
sub
adc
xor
add
stos
and
icebp
mov
loopne
fnstsw
mov
pop
sub
sbb
sbb
inc
dec
enter
enter
cdq
cmp
adc
push
(bad)
in
and
nop
mov
int
mov
cwde
xchg
sar
adc
fidivr
ror
and
nop
pop
lods
ret
or
xchg
jno
lds
add
inc
cmp
adc
nop
jo
mov
pusha
sub
les
sbb
nop
int
imul
and
mov
xchg
stos
enter
nop
rol
test
adc
jl
xor
adc
popa
les
or
and
mov
or
rol
cli
push
and
dec
and
add
push
inc
daa
bound
mov
enter
nop
or
add
mov
xchg
lods
add
xchg
dec
das
loop
aaa
and
xor
add
inc
and
dec
xor
ret
mov
ret
int
xchg
or
or
inc
cmp
xchg
or
mov
push
push
popa
mov
and
xor
xor
xchg
aam
cmp
ror
mov
lock
pop
ins
mov
popa
(bad)
sbb
add
inc
cmp
push
adc
add
mov
pusha
call
outs
adc
xor
adc
loope
mov
dec
sub
add
outs
or
and
mov
arpl
sbb
xchg
mov
cmp
or
leave
and
int
adc
add
push
dec
and
pop
sbb
in
stos
in
or
mov
scas
xchg
mov
sub
cmps
inc
or
in
into
mov
in
add
or
or
cmp
dec
sbb
xchg
ror
inc
and
cmp
jo
pusha
adc
jo
int3
lock
in
enter
(bad)
das
or
add
(bad)
xlat
adc
mov
jo
or
push
jno
icebp
dec
cld
loop
add
cmp
mov
adc
push
enter
and
and
arpl
xchg
jle
daa
adc
push
movs
or
inc
lods
and
out
or
push
and
rol
je
pop
add
inc
push
pop
jno
inc
rcl
leave
cmps
sbb
nop
add
pop
add
movq
pop
lock
adc
fiadd
sbb
test
push
xor
cmps
adc
icebp
add
adc
rcr
dec
push
pop
or
pop
sbb
(bad)
adc
inc
ins
or
inc
xchg
aaa
adc
push
ret
jmp
cmp
test
adc
add
sub
xor
mov
push
shr
or
loop
test
pusha
jnp
shl
xchg
adc
add
test
add
hlt
jno
add
sub
add
(bad)
push
adc
mov
into
inc
push
add
fucom
push
pop
inc
mov
xchg
add
or
xor
lds
lods
jo
pop
and
sbb
(bad)
or
xchg
inc
lods
jbe
repz
add
and
add
add
adc
cmp
fwait
mov
add
or
loopne
or
ds
bound
lahf
sbb
jae
add
inc
add
jo
cs
adc
nop
xchg
mov
pop
and
xor
lock
loop
out
adc
add
xor
(bad)
call
bound
inc
xor
ror
sbb
pusha
push
mov
add
mov
push
data16
adc
add
loope
hlt
loopne
(bad)
and
pop
adc
add
adc
and
mov
or
sub
push
push
cmp
sub
or
adc
lock
mov
outs
or
add
adc
pusha
mov
aaa
add
add
mov
sbb
xor
scas
aad
adc
xchg
adc
lods
jno
or
sub
cvtpi2ps
adc
sbb
pop
mov
adc
pop
fidivr
adc
loopne
(bad)
push
fwait
mov
push
add
test
mov
imul
mov
into
inc
or
push
xchg
cmc
sub
adc
push
jmp
adc
adc
and
jmp
daa
push
and
and
mov
push
adc
push
xchg
rcl
inc
pushf
jg
and
add
push
nop
jb
inc
add
xchg
sbb
ja
adc
mov
dec
rcr
adc
sahf
cmp
push
add
add
adc
or
sbb
push
jae
or
cli
mov
imul
pop
and
je
add
nop
or
push
or
cmp
inc
or
or
push
add
dec
mov
mov
mov
pop
cmp
adc
nop
add
push
add
or
adc
push
add
xlat
add
ror
push
adc
or
cmps
sub
add
push
inc
and
jns
or
or
add
loopne
bound
or
mov
jae
add
pusha
pop
shl
stc
and
add
or
mov
adc
add
or
ror
loopne
pusha
jmp
add
or
add
add
pop
adc
add
xor
jns
or
inc
add
pop
jae
or
nop
bswap
mov
add
add
or
pop
stos
call
or
xor
xor
add
add
or
push
or
add
pop
(bad)
pop
or
add
dec
add
fisubr
xor
repnz
and
rol
mov
or
xor
push
and
push
loopne
scas
jmp
or
xchg
mov
fwait
push
or
loopne
dec
sbb
shr
add
or
sub
push
or
or
jno
or
jo
jns
or
mov
or
rol
stos
syscall
mov
stos
and
push
mov
sbb
add
test
or
add
lods
jo
add
pop
add
adc
mov
sar
icebp
push
stos
push
adc
or
adc
mov
stos
lock
fist
jns
pop
(bad)
or
(bad)
jmp
mov
jnp
and
mov
mov
sbb
pop
mov
fwait
mov
fstp
sbb
pop
mov
fwait
mov
fstp
sbb
add
add
add
add
add
add
sub
add
or
add
ins
ins
popa
outs
xor
add
or
ret
loop
ror
aam
ret
add
add
inc
add
add
or
inc
sub
add
or
add
ins
ins
popa
outs
xor
add
or
enter
sub
inc
sub
add
push
inc
or
ja
adc
add
add
add
or
add
ins
ins
popa
outs
xor
add
or
mov
ret
es
sub
add
or
mov
add
add
add
or
popa
ins
xor
add
fist
lahf
push
adc
add
add
add
add
or
push
popa
jae
push
outs
jb
add
add
push
dec
add
add
and
add
add
sub
inc
and
add
invd
add
gs
popa
ins
add
add
push
push
add
add
and
inc
lahf
add
add
push
add
gs
xor
add
adc
xlat
mov
mov
mov
jmp
add
add
add
add
adc
add
call
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
jmp
nop
add
retf
into
int3
in
add
push
add
gs
xor
add
or
rcr
mov
jmp
add
add
add
add
add
call
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
inc
sub
add
adc
add
gs
xor
add
push
add
fadd
jmp
mov
cwde
add
inc
adc
pop
add
add
add
add
push
add
gs
xor
add
or
rol
mov
mov
xchg
add
ja
adc
add
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
bound
add
add
sbb
and
movs
pop
inc
add
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
nop
adc
add
add
fcomp
add
pop
inc
add
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
enter
add
add
sbb
inc
add
inc
add
add
add
add
adc
add
adc
add
add
or
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
adc
push
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
add
pop
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
bound
push
add
add
add
mov
inc
add
sbb
mov
sbb
inc
cli
sbb
dec
or
add
sbb
add
xor
add
pop
sbb
add
test
add
mov
rcl
xor
pop
add
and
add
and
add
and
and
pop
jbe
arpl
cs
ins
add
add
sub
or
add
add
cmp
inc
add
stc
cmp
add
(bad)
dec
add
add
add
add
add
add
add
add
inc
add
jb
add
add
add
add
add
add
fs
je
push
gs
data16
imul
inc
ins
imul
add
add
inc
add
add
add
pop
inc
add
add
add
push
inc
add
add
add
add
add
add
lock
inc
add
add
add
add
add
add
add
add
push
inc
add
add
add
push
inc
add
add
add
add
add
add
push
inc
add
add
add
push
inc
add
add
add
add
add
inc
add
add
add
push
inc
add
add
add
add
push
add
add
inc
add
add
add
push
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
int3
xor
pop
add
add
add
add
inc
add
add
add
xor
pop
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
mov
add
add
inc
add
add
add
sub
pop
add
add
add
pop
sub
push
add
add
inc
add
add
add
push
inc
add
add
add
adc
add
test
add
cmp
inc
add
add
add
adc
add
add
add
add
push
adc
add
add
add
adc
add
add
add
adc
pop
add
add
inc
add
add
add
inc
add
add
add
or
add
js
inc
add
add
add
add
in
or
add
add
add
add
add
inc
add
add
add
push
pop
add
(bad)
(bad)
inc
add
add
bound
add
add
dec
scas
mov
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
sbb
add
add
sbb
pop
hlt
pop
inc
add
or
add
add
xor
inc
add
add
sub
add
add
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
stc
add
or
(bad)
(bad)
(bad)
call
inc
add
pop
inc
add
pop
inc
add
add
add
pop
inc
add
inc
add
dec
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
add
pop
inc
add
add
add
call
and
pop
add
add
loop
and
sub
jmp
add
add
add
inc
add
add
add
(bad)
popa
add
bound
es
inc
add
adc
sub
pop
add
inc
add
add
add
and
push
add
outs
add
pop
add
outs
add
je
ja
popa
add
add
add
outs
add
add
pop
add
outs
add
ins
add
outs
add
add
jb
outs
add
add
je
jae
pop
add
push
push
jle
aas
xchg
int3
xchg
cli
gs
movs
jg
push
push
ins
popf
pop
dec
jb
add
add
add
add
add
add
outs
add
je
add
bound
jo
add
mov
add
add
add
push
dec
and
xchg
or
push
pop
test
inc
mov
sbb
add
add
add
add
aam
inc
add
add
add
mov
(bad)
cld
dec
mov
lds
add
add
add
add
add
jbe
add
add
add
jge
add
add
lahf
sbb
jns
xchg
push
inc
sbb
sbb
call
add
add
add
add
add
sub
add
add
add
add
push
add
add
retf
xchg
aaa
dec
test
sbb
add
add
add
inc
or
add
(bad)
test
cdq
cmps
jno
movs
cmp
sahf
and
add
add
xchg
inc
add
add
push
add
add
sbb
gs
mov
fld
add
or
add
push
add
add
add
cmp
inc
add
add
fcom
out
cmp
mov
dec
mov
data16
add
or
add
add
add
push
add
add
add
loopne
inc
add
add
add
add
xor
adc
loop
cmps
call
or
add
adc
add
int
add
add
add
add
push
add
add
sbb
dec
xchg
adc
jg
cmc
nop
mov
or
add
add
add
add
add
clc
inc
add
add
add
add
inc
add
add
add
push
pop
add
(bad)
(bad)
inc
add
add
add
add
jo
inc
add
inc
add
add
add
add
mov
add
add
add
add
nop
arpl
pop
add
add
mov
push
fs
add
bound
add
add
test
nop
add
add
add
inc
add
add
inc
add
add
adc
add
add
shl
cli
add
adc
add
add
inc
add
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
fs
add
or
(bad)
(bad)
(bad)
inc
add
dec
add
add
adc
add
add
jo
inc
add
push
in
adc
add
add
inc
add
add
add
fcom
inc
add
add
add
add
and
push
add
add
sbb
push
add
add
inc
add
add
add
stc
add
or
add
add
inc
add
add
add
sbb
inc
add
add
add
add
add
inc
add
stc
add
or
add
add
add
add
add
jl
inc
add
add
or
add
add
add
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
addr16
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
addr16
add
arpl
clc
bound
cmp
add
inc
add
inc
add
addr16
add
add
add
inc
add
bound
cmp
add
inc
add
inc
add
addr16
add
add
add
inc
add
bound
cmp
add
inc
add
inc
add
add
bound
cmp
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
daa
cmp
and
inc
add
add
push
and
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
bound
add
add
mov
add
add
add
add
sub
add
add
les
add
add
add
addr16
add
add
add
addr16
add
add
int3
addr16
add
add
add
push
add
bound
add
add
lods
lds
add
add
add
sbb
movs
daa
inc
add
pop
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
imul
stc
add
or
(bad)
(bad)
(bad)
inc
or
add
daa
inc
add
add
add
add
add
mov
daa
inc
add
add
add
add
sbb
inc
add
add
add
imul
stc
add
or
or
add
inc
add
add
daa
inc
add
add
add
add
daa
inc
add
add
add
or
add
daa
inc
add
add
add
xchg
mov
daa
inc
add
add
add
or
add
daa
inc
add
add
in
ins
inc
add
daa
inc
add
add
inc
add
add
add
pop
or
push
add
add
ins
inc
add
add
daa
inc
add
add
add
adc
push
add
add
inc
add
add
add
stc
add
or
adc
add
inc
add
add
add
inc
or
adc
add
adc
add
add
or
adc
add
inc
add
add
add
or
or
add
jo
inc
add
stc
add
or
or
add
inc
add
add
add
inc
or
adc
add
int3
outs
inc
add
add
or
adc
add
inc
add
add
add
or
or
add
sub
inc
add
stc
add
or
or
add
inc
add
add
add
pop
or
sldt
add
stc
add
sub
sldt
add
sbb
ins
add
add
add
add
add
add
or
add
add
inc
add
add
add
inc
or
adc
add
xor
push
stc
add
or
adc
add
inc
add
add
inc
add
add
add
add
add
jo
add
cli
add
or
add
add
add
daa
inc
add
add
add
inc
add
sub
or
add
inc
add
add
daa
inc
add
add
add
inc
add
sub
or
add
inc
add
add
daa
inc
add
add
add
jno
add
sub
pop
add
add
or
add
daa
inc
add
add
add
jb
add
sub
push
add
add
inc
add
jb
add
inc
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
addr16
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
jb
add
inc
add
addr16
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
push
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
jb
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
imul
cmp
add
inc
add
inc
add
imul
cmp
add
inc
add
inc
add
add
add
jb
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
push
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
mov
pop
add
add
add
jp
pop
add
inc
add
lea
and
pop
add
add
mov
pop
add
add
add
adc
and
aas
add
add
mov
pop
add
add
add
sbb
and
(bad)
inc
add
fdiv
pop
add
add
add
mov
ins
and
outs
add
add
jb
pop
add
add
add
xchg
cmc
pop
add
clc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
(bad)
test
cdq
cmps
jno
movs
cmp
sahf
or
mov
pop
push
sub
into
mov
lahf
cs
xor
mov
(bad)
call
mul
or
inc
mov
cmp
cwde
add
adc
add
add
add
dec
add
add
(bad)
cmp
add
add
icebp
mov
jns
add
pop
lods
add
add
popw
push
and
inc
ins
imul
jae
jb
outs
outs
je
outs
ins
xor
push
jae
jb
outs
outs
je
outs
ins
xor
xchg
push
fwait
add
add
add
add
add
add
add
add
mov
add
xchg
add
add
add
add
push
mov
xor
adc
xlat
add
xor
rcl
xchg
dec
add
scas
(bad)
lods
dec
popa
push
or
scas
int
adc
leave
loop
test
jbe
nop
in
cmp
ret
jno
push
jp
test
test
out
mov
add
add
add
add
dec
add
add
or
lods
jecxz
mov
xor
stos
mov
(bad)
cdq
adc
xchg
dec
lea
pop
xor
add
add
push
and
add
add
add
add
add
add
int
add
add
ins
add
add
add
push
add
push
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
(bad)
inc
add
add
add
add
test
push
gs
fs
je
je
add
data16
ins
gs
ins
add
inc
outs
arpl
inc
je
cs
bound
outs
ja
gs
push
bound
outs
ja
gs
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
add
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
gs
push
jl
rcl
mov
add
lock
sub
test
adc
sub
sub
rcl
mov
add
lock
sub
lods
cmps
inc
xchg
or
adc
shl
(bad)
outs
mov
test
jl
cmp
add
add
add
add
dec
add
add
pop
mov
cdq
mov
mov
and
push
mov
xchg
inc
mov
xor
jno
add
add
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
std
(bad)
jmp
std
(bad)
jmp
std
(bad)
jmp
add
add
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
(bad)
std
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
test
or
add
adc
add
or
add
test
test
or
add
adc
add
or
add
push
add
add
popa
bound
add
je
jb
arpl
outs
add
ins
je
push
gs
arpl
gs
jb
je
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
push
inc
dec
dec
inc
push
dec
cs
inc
pop
add
inc
outs
ins
arpl
imul
je
imul
je
imul
add
cmp
add
rol
add
clc
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
sar
mov
add
lock
sub
sar
mov
add
lock
sub
sar
mov
add
lock
sub
mov
gs
mov
inc
cmc
adc
jmp
bound
mov
nop
aad
cmp
add
add
add
add
dec
add
add
sub
pop
shl
(bad)
les
jns
or
arpl
add
add
push
xor
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
add
push
add
sub
add
add
add
add
add
add
add
cmps
std
(bad)
jmp
(bad)
jmp
std
(bad)
jmp
std
(bad)
jmp
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
add
push
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
push
inc
dec
dec
inc
push
dec
cs
inc
pop
add
inc
outs
ins
arpl
imul
push
imul
je
imul
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
xchg
adc
jne
mov
ret
adc
jne
mov
ret
adc
jne
mov
mov
out
test
in
push
bound
xor
and
sahf
int3
push
pop
lds
cmp
add
add
add
add
dec
add
add
repz
(bad)
cld
dec
popa
inc
jbe
lods
cdq
inc
inc
xchg
daa
or
and
add
add
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
or
add
or
add
add
add
add
add
add
std
(bad)
jmp
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
xor
sub
add
xor
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
push
inc
dec
dec
inc
push
xor
dec
inc
pop
add
inc
outs
ins
inc
je
xor
push
jo
outs
ja
add
inc
outs
ja
add
add
cmp
add
rol
add
dec
add
add
add
add
add
add
add
add
add
add
neg
adc
das
dec
sti
xchg
stc
repnz
adc
das
dec
sti
ret
or
adc
adc
jne
mov
mov
add
mov
gs
push
dec
inc
inc
mov
push
mov
dec
inc
add
clc
out
add
inc
test
iret
pop
add
stos
cmc
and
pop
pop
fs
scas
ss
stc
pop
ins
loopne
enter
mov
ins
ficomp
add
pusha
or
xor
cmp
inc
add
inc
add
add
add
add
add
add
sub
add
add
sub
add
cmp
sub
add
add
add
add
xor
inc
add
cmp
inc
add
inc
dec
dec
inc
dec
inc
xor
cs
inc
pop
add
inc
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
outs
ins
ins
outs
outs
inc
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
jl
(bad)
xlat
sbb
mov
add
(bad)
xlat
sbb
mov
add
mov
rcl
mov
add
clc
jne
mov
push
cmps
jmp
mov
add
pop
retf
mov
icebp
dec
inc
xchg
pop
cmp
call
add
add
add
cmp
add
add
pop
leave
adc
dec
cmps
and
mov
sub
ins
mov
or
adc
retf
xchg
add
add
push
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
adc
add
adc
add
add
std
(bad)
jmp
std
(bad)
jmp
std
(bad)
jmp
std
(bad)
inc
add
add
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
or
(bad)
inc
add
add
add
add
pop
test
or
add
(bad)
std
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
outs
ins
outs
jb
inc
outs
popa
bound
add
je
push
inc
add
add
push
add
je
jne
push
add
popa
add
add
add
outs
add
imul
je
jb
and
push
dec
inc
dec
push
pop
xor
cs
inc
pop
add
arpl
gs
dec
imul
push
gs
inc
outs
js
push
imul
inc
outs
js
sbb
add
or
add
add
inc
add
add
add
clc
push
pop
add
(bad)
(bad)
inc
add
add
add
adc
push
add
add
add
test
add
add
add
inc
add
add
add
add
movs
jg
add
add
add
add
add
add
add
ins
add
inc
add
inc
bound
add
add
je
sbb
add
inc
add
pop
inc
add
adc
add
inc
add
add
add
cli
add
adc
adc
add
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
pop
inc
add
add
add
add
inc
or
adc
add
jl
inc
add
add
pop
inc
add
add
add
or
add
daa
inc
add
add
add
test
mov
inc
add
add
add
sbb
push
add
add
add
add
test
sbb
inc
add
add
add
or
add
daa
inc
add
add
add
add
add
mov
pop
inc
add
add
add
add
sub
inc
add
add
add
test
and
add
pop
inc
add
add
add
adc
pop
add
add
inc
add
add
push
xchg
and
add
pop
inc
add
add
inc
add
add
add
test
inc
add
add
add
stc
add
pop
inc
add
add
add
sbb
add
add
add
add
xchg
sbb
inc
add
add
add
add
pop
or
add
add
mov
inc
add
add
pop
inc
add
add
add
adc
ins
add
add
inc
add
add
add
inc
add
add
pop
inc
add
add
add
sbb
jo
add
test
inc
add
add
add
add
or
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
pop
inc
add
add
add
or
add
daa
inc
add
add
add
add
pop
inc
add
add
add
or
add
inc
add
add
mov
cli
add
or
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
inc
add
xchg
mov
pop
inc
add
(bad)
(bad)
inc
or
add
daa
inc
add
add
add
mov
mov
inc
add
add
add
or
add
daa
inc
add
add
add
mov
mov
inc
add
add
add
adc
mov
add
inc
or
adc
add
mov
push
stc
add
pop
inc
add
add
add
sbb
nop
add
add
add
add
mov
sbb
inc
add
add
inc
add
add
inc
add
add
add
inc
add
cli
add
or
add
add
add
adc
cwde
add
add
inc
add
add
add
add
pop
inc
add
add
add
lea
push
lea
sbb
inc
add
lea
dec
lea
pop
lea
imul
inc
add
inc
add
inc
add
mov
or
add
lea
mov
inc
add
lea
ror
inc
add
lea
clc
lea
add
mov
pop
mov
sub
inc
add
add
add
jg
add
dec
inc
add
inc
add
inc
add
jg
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
add
add
jg
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
mov
and
inc
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
jg
add
dec
inc
add
inc
add
inc
add
add
add
lea
rol
add
dec
inc
add
inc
add
inc
add
add
add
lea
call
jg
add
dec
inc
add
inc
add
inc
add
add
cmp
add
inc
add
inc
add
lea
cmp
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
mov
mov
inc
add
dec
inc
add
inc
add
inc
add
jg
add
dec
inc
add
inc
add
inc
add
add
cmp
add
inc
add
inc
add
lea
add
inc
add
dec
inc
add
inc
add
inc
add
add
jg
add
dec
inc
add
inc
add
inc
add
lea
push
add
jg
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
jg
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
add
jg
add
dec
inc
add
inc
add
inc
add
add
jg
add
dec
inc
add
inc
add
inc
add
add
jg
add
dec
inc
add
inc
add
inc
add
add
add
add
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
or
inc
add
add
add
js
pop
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
mov
add
add
add
inc
add
add
add
mov
add
add
fmul
add
aam
inc
add
add
add
mov
adc
mov
push
xchg
inc
add
bound
add
add
rcr
adc
inc
add
inc
add
sbb
dec
add
add
inc
add
add
add
xchg
inc
add
add
daa
inc
add
add
add
adc
dec
add
add
inc
add
add
add
stc
add
or
and
add
inc
add
add
inc
add
add
add
xchg
inc
add
cli
add
adc
pop
add
add
sub
push
add
add
or
and
add
add
add
add
inc
add
or
and
add
add
add
inc
or
sbb
add
add
add
add
xchg
inc
add
add
sub
add
add
add
add
inc
add
add
add
add
add
sub
add
add
add
adc
pusha
add
add
inc
add
add
add
add
or
push
add
add
sbb
add
add
or
and
add
adc
inc
add
stc
add
or
and
add
inc
add
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
add
or
(bad)
(bad)
(bad)
inc
sbb
ins
add
add
inc
add
add
add
cdq
inc
add
add
das
inc
add
add
add
or
add
inc
add
add
add
cli
add
or
add
add
add
adc
je
add
inc
or
adc
add
hlt
cdq
inc
add
add
das
inc
add
add
add
adc
js
add
inc
or
and
add
push
call
dec
das
inc
add
add
add
adc
jl
add
inc
or
and
add
mov
inc
add
add
das
inc
add
add
add
sbb
add
add
inc
add
add
add
inc
add
add
das
inc
add
add
add
sbb
test
add
pop
or
or
add
add
add
add
add
das
inc
add
add
add
pop
inc
add
add
add
inc
add
add
or
add
add
inc
add
add
inc
add
add
test
push
je
inc
add
add
inc
add
add
or
add
add
cld
pushf
inc
add
stc
add
or
add
add
inc
add
add
inc
add
add
add
inc
add
adc
sbb
add
inc
add
add
or
sbb
add
mov
stc
add
das
inc
add
add
add
or
add
inc
add
add
add
sahf
inc
add
cli
add
or
add
add
add
adc
mov
or
adc
add
fs
inc
add
add
sub
add
add
add
adc
movs
add
add
inc
add
add
add
sahf
inc
add
add
or
adc
add
inc
add
add
or
pop
add
add
inc
add
add
and
pop
add
add
adc
lods
add
add
or
add
add
test
add
das
inc
add
add
add
adc
mov
add
inc
or
or
add
loopne
inc
add
add
sub
or
add
inc
add
add
inc
add
add
add
inc
add
push
cld
and
or
add
inc
add
add
or
adc
add
pop
mov
add
or
adc
add
inc
add
add
inc
add
add
add
add
das
inc
add
add
add
adc
rol
add
or
add
add
add
add
add
inc
add
stc
add
or
add
add
add
add
add
or
push
add
add
stc
add
or
push
add
add
sbb
enter
test
inc
add
add
add
mov
add
pop
inc
add
add
add
adc
int3
add
add
or
sbb
add
ins
mov
add
or
sbb
add
inc
add
add
add
add
inc
add
add
add
mov
add
or
and
add
inc
add
add
add
add
inc
add
add
add
add
add
inc
add
add
or
adc
add
add
add
add
inc
add
add
add
add
or
sbb
add
inc
add
add
add
add
inc
add
add
add
inc
add
add
or
pop
add
add
movs
inc
add
inc
add
movs
inc
add
movs
inc
add
movs
inc
add
movs
inc
add
movs
inc
add
movs
inc
add
movs
inc
add
movs
inc
add
movs
inc
add
inc
add
add
add
mov
pop
mov
cmp
add
inc
add
inc
add
pop
pop
mov
cmp
add
inc
add
inc
add
pop
pop
mov
cmp
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
movs
inc
add
movs
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
mov
cmp
add
inc
add
inc
add
pop
pop
mov
cmp
add
inc
add
inc
add
pop
pop
mov
cmp
add
inc
add
inc
add
nop
inc
add
inc
add
dec
inc
add
inc
add
inc
add
movs
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
mov
cmp
add
inc
add
inc
add
mov
cmp
add
inc
add
inc
add
nop
inc
add
inc
add
dec
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
mov
cmp
add
inc
add
inc
add
mov
cmp
add
inc
add
inc
add
movs
inc
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
mov
cmp
add
inc
add
inc
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
movs
inc
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
movs
inc
add
add
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
mov
cmp
add
inc
add
inc
add
add
add
mov
cmp
add
inc
add
inc
add
add
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
xchg
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
movs
inc
add
mov
cmp
add
inc
add
inc
add
movs
inc
add
inc
add
cmps
or
add
add
add
mov
add
add
add
jge
and
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
inc
add
add
add
clc
push
pop
add
(bad)
(bad)
inc
add
add
inc
add
add
movs
inc
add
movs
inc
add
add
add
add
clc
movs
inc
add
add
add
cmps
inc
add
add
add
movs
inc
add
add
add
mov
push
lods
inc
add
add
add
(bad)
mov
add
add
add
add
sbb
inc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
sub
mov
inc
add
sbb
inc
add
add
add
push
stc
add
adc
add
add
inc
add
add
add
sbb
inc
add
add
add
lods
inc
add
stc
add
cmovb
adc
add
inc
add
add
add
add
add
add
add
or
and
add
add
add
test
inc
add
add
add
inc
add
add
or
sbb
add
inc
add
add
add
inc
add
add
loopne
inc
add
add
sub
or
add
inc
add
add
add
test
inc
add
add
add
inc
add
add
pop
inc
add
add
add
adc
pop
add
add
sub
or
add
fsubr
mov
sub
or
add
inc
add
add
inc
add
add
add
inc
add
cli
add
adc
or
add
inc
add
add
add
sub
sbb
add
mov
mov
sub
sbb
add
inc
add
add
inc
add
add
add
mov
add
cli
add
adc
pop
add
add
sbb
ins
add
add
inc
add
add
add
add
add
mov
add
add
sub
sbb
add
add
add
pop
or
and
add
mov
inc
add
add
sub
add
add
add
sbb
je
add
pop
or
add
add
sub
add
or
add
add
inc
add
add
add
sbb
inc
add
add
add
stc
add
sub
add
add
add
adc
jl
add
sbb
inc
add
add
add
add
add
mov
add
stc
add
sub
add
add
add
or
and
add
pop
mov
add
stc
add
sub
add
add
add
adc
test
add
inc
or
adc
add
add
add
add
add
sub
add
add
add
or
adc
add
adc
inc
add
add
sub
add
add
add
adc
mov
add
inc
or
adc
add
mov
push
inc
sub
add
add
inc
add
add
or
daa
add
add
mov
add
add
sub
add
add
add
sbb
xchg
add
add
inc
add
add
add
mov
add
add
sub
add
add
add
add
cwde
add
add
add
add
stc
add
sub
sub
add
inc
add
add
inc
add
add
add
add
sub
push
add
add
sbb
mov
or
sub
add
cld
mov
add
stc
add
or
sub
add
inc
add
movs
add
add
or
sub
add
test
add
or
sub
add
inc
add
add
or
or
add
or
inc
add
or
or
add
inc
add
add
inc
add
add
add
add
stc
add
adc
sldt
add
pop
add
or
sub
add
enter
sar
push
pushf
or
sub
add
inc
add
add
inc
add
add
cmp
inc
add
cli
add
or
add
add
inc
add
add
inc
add
add
add
cli
add
or
add
add
add
adc
mov
or
sbb
add
aam
inc
add
add
sub
add
add
add
adc
rol
add
inc
add
add
add
inc
add
add
and
add
inc
add
add
add
add
inc
add
add
add
add
add
add
and
or
add
add
add
add
inc
add
add
add
mov
add
and
push
add
add
pop
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
(bad)
(bad)
(bad)
inc
adc
rol
add
sub
inc
add
add
add
mov
add
or
add
add
add
adc
aam
add
inc
or
and
add
dec
mov
add
or
and
add
inc
add
add
add
add
inc
add
add
add
add
or
and
add
inc
add
add
add
add
add
add
inc
add
add
or
add
add
add
loopne
add
fcom
inc
add
add
sub
push
cld
and
add
add
inc
add
add
add
add
inc
add
add
add
add
add
or
pop
add
add
adc
call
or
add
add
movs
mov
add
or
add
add
inc
add
add
add
add
or
or
add
add
inc
add
stc
add
or
or
add
inc
add
add
add
add
or
adc
add
pusha
mov
add
or
adc
add
mov
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
add
cmps
inc
add
add
dec
inc
add
inc
add
inc
add
cmps
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
add
cmps
inc
add
add
dec
inc
add
inc
add
inc
add
cmps
inc
add
add
dec
inc
add
inc
add
inc
add
cmps
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
mov
add
push
movs
inc
add
dec
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
inc
add
cmps
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
test
add
add
dec
inc
add
inc
add
inc
add
mov
add
xor
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
test
add
add
dec
inc
add
inc
add
inc
add
test
add
add
dec
inc
add
inc
add
inc
add
add
add
test
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
mov
add
jo
inc
add
add
dec
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
add
add
test
inc
add
dec
inc
add
inc
add
inc
add
add
call
movs
inc
add
dec
inc
add
inc
add
inc
add
stos
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
stos
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
add
dec
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
stos
inc
add
add
dec
inc
add
inc
add
inc
add
stos
inc
add
add
dec
inc
add
inc
add
inc
add
stos
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
add
dec
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
stos
inc
add
add
dec
inc
add
inc
add
inc
add
stos
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
lods
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
inc
add
movs
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
add
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
inc
add
add
add
js
pop
add
(bad)
(bad)
inc
add
add
bound
add
mov
add
clc
mov
add
push
pop
inc
add
add
add
inc
add
add
add
inc
add
add
add
rol
add
add
inc
add
add
add
mov
add
add
sbb
and
add
add
shr
xor
xor
add
add
fs
inc
add
add
sbb
cmp
add
test
inc
add
add
add
stc
add
pop
inc
add
add
add
adc
inc
add
add
inc
add
add
add
leave
inc
add
add
or
or
add
inc
add
add
add
inc
add
add
add
inc
add
add
or
push
add
add
sbb
dec
add
add
inc
add
add
add
leave
inc
add
add
or
sldt
add
adc
dec
add
add
inc
add
add
add
inc
add
add
or
and
add
inc
add
add
add
inc
or
sbb
add
mov
inc
add
add
or
sbb
add
inc
add
add
add
add
adc
inc
add
add
or
or
add
inc
add
add
add
inc
or
sbb
add
nop
retf
inc
add
add
or
sbb
add
inc
add
add
add
inc
add
add
add
retf
inc
add
add
or
push
add
add
add
pusha
add
add
add
add
inc
add
add
or
and
add
inc
add
add
add
or
adc
add
ins
int3
inc
add
or
adc
add
inc
add
add
add
inc
or
or
add
int3
int3
inc
add
add
or
or
add
inc
add
add
add
inc
add
add
add
add
or
sbb
add
inc
add
add
add
clc
or
pop
add
add
add
or
pop
add
add
sub
je
add
adc
inc
add
add
add
int
add
or
xor
add
inc
add
add
add
pop
or
sbb
add
mov
inc
add
add
or
sbb
add
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
inc
add
or
(bad)
(bad)
(bad)
inc
pop
add
or
xor
add
ror
add
stc
add
or
xor
add
inc
add
add
inc
add
add
add
inc
add
add
or
pop
add
add
adc
mov
add
sbb
inc
add
add
add
add
add
add
or
add
add
add
inc
add
add
add
rol
pusha
stc
add
or
sbb
add
inc
add
add
or
and
add
add
add
add
inc
add
add
or
and
add
add
inc
add
add
add
add
add
add
or
sub
add
add
inc
add
add
add
rol
loopne
add
or
add
add
adc
pushf
add
add
or
adc
add
add
add
add
add
stc
add
or
adc
add
add
or
daa
add
add
stc
add
or
daa
add
add
add
movs
add
add
add
add
rol
jo
add
or
add
add
adc
test
add
sbb
inc
add
add
add
rol
sar
add
or
push
add
add
add
lods
add
add
add
add
add
add
or
sub
add
inc
add
add
or
add
add
push
stc
add
or
add
add
inc
add
add
inc
add
add
loopne
inc
add
stc
add
or
adc
add
inc
add
mov
or
sub
add
cmp
inc
add
stc
add
or
sub
add
inc
add
add
inc
add
add
add
aam
add
add
or
sub
add
inc
add
add
add
add
add
add
aam
add
add
or
and
add
inc
add
add
add
add
inc
add
add
add
aam
add
add
or
or
add
inc
add
add
add
add
add
add
add
add
or
and
add
inc
add
add
add
add
or
add
add
js
inc
add
stc
add
or
add
add
inc
add
add
add
add
add
add
aad
add
cli
add
or
and
add
inc
add
add
add
add
add
add
add
add
or
sub
add
inc
add
add
add
add
add
add
inc
add
cli
add
or
adc
add
inc
add
add
add
add
inc
add
add
add
(bad)
inc
add
add
or
or
add
inc
add
loopne
add
xor
inc
add
add
add
inc
add
stc
add
or
das
add
add
adc
in
add
sbb
inc
add
add
add
xlat
inc
add
stc
add
or
pop
add
add
adc
call
or
add
add
dec
fadd
sar
add
or
add
add
inc
add
add
add
add
or
or
add
add
add
add
stc
add
or
or
add
add
add
add
or
sbb
add
add
add
add
inc
add
stc
add
or
sbb
add
add
add
add
add
add
inc
add
add
or
add
add
add
or
add
inc
add
add
add
add
cli
add
or
add
add
add
or
add
inc
add
add
add
fld
adc
add
or
add
add
add
adc
add
add
sub
inc
add
add
add
inc
add
cli
add
or
add
add
add
fild
sbb
inc
add
fild
(bad)
fiadd
call
add
inc
add
fiadd
fcmovnu
inc
add
fiadd
cmc
fiadd
add
inc
add
fild
inc
fild
push
fild
pop
fild
push
inc
add
inc
add
inc
add
fild
mov
fild
rcr
inc
add
fild
in
fild
stc
fild
push
fadd
adc
inc
add
fadd
sub
fadd
inc
fadd
push
fadd
popa
fadd
outs
fadd
add
add
adc
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
rol
mov
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
int3
rol
mov
inc
add
inc
add
inc
add
rol
mov
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
fadd
dec
fadd
xor
inc
add
add
dec
inc
add
inc
add
inc
add
fild
xchg
ret
cmp
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
fild
in
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
fild
pop
ret
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
fild
or
inc
add
inc
add
dec
inc
add
inc
add
inc
add
fadd
and
add
add
ret
inc
add
dec
inc
add
inc
add
inc
add
fiadd
cld
ret
inc
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
fild
add
add
dec
les
cmp
add
inc
add
inc
add
add
add
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
les
cmp
add
inc
add
inc
add
fiadd
in
les
cmp
add
inc
add
inc
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
lds
cmp
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
inc
add
dec
inc
add
inc
add
inc
add
fild
int3
mov
mov
inc
add
inc
add
inc
add
fild
hlt
mov
mov
inc
add
inc
add
inc
add
fiadd
sbb
inc
add
dec
inc
add
inc
add
inc
add
fiadd
inc
mov
cmp
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
cmp
and
(bad)
inc
add
fiadd
add
add
add
xchg
test
add
add
add
xchg
xchg
add
add
add
test
add
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
inc
add
add
add
push
pop
add
(bad)
(bad)
inc
add
add
add
sbb
bound
adc
add
in
fadd
in
fadd
add
add
jl
inc
add
add
add
add
xor
inc
add
add
add
fld
cmp
add
xor
inc
add
add
add
bound
add
add
xchg
sub
add
add
popa
add
popa
add
arpl
jb
imul
add
and
je
jns
jo
add
add
add
add
je
das
add
popa
add
popa
add
arpl
jb
imul
pushf
adc
inc
add
add
add
lods
adc
or
add
pusha
out
add
push
mov
add
add
adc
dec
add
add
inc
add
add
add
out
add
cli
add
or
add
add
add
sbb
push
add
add
inc
add
add
sub
inc
add
add
adc
adc
add
inc
add
push
add
add
or
cmp
add
add
add
add
stc
add
or
cmp
add
add
add
test
inc
add
add
add
jmp
add
or
push
add
add
adc
pop
add
add
inc
add
add
test
inc
add
add
adc
and
add
inc
add
add
add
test
inc
add
add
or
inc
add
add
or
xor
add
inc
add
add
inc
add
add
add
add
add
inc
add
cli
add
or
add
add
add
add
fcom
inc
add
add
add
inc
add
push
in
adc
pop
add
add
or
add
inc
add
add
add
add
or
add
add
add
adc
jo
add
lods
adc
or
add
fsubr
inc
add
push
hlt
adc
or
add
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
adc
and
add
add
add
sbb
inc
add
add
add
add
or
pop
add
add
adc
jl
add
inc
or
xor
add
clc
jmp
add
add
or
xor
add
inc
add
add
or
xor
add
pop
in
inc
add
add
or
xor
add
inc
add
add
inc
add
add
je
inc
add
stc
add
adc
sbb
add
inc
add
add
or
xor
add
shr
inc
add
add
adc
xor
add
inc
add
add
inc
add
add
add
in
inc
add
stc
add
adc
pop
add
add
sbb
nop
add
add
add
dec
in
inc
add
add
adc
and
add
inc
add
add
inc
add
add
enter
push
stc
add
adc
add
add
inc
add
add
or
add
add
add
add
add
out
inc
add
add
adc
add
add
add
inc
add
add
add
stc
add
adc
push
add
add
adc
mov
or
das
add
add
out
inc
add
add
adc
das
add
add
adc
movs
add
add
inc
add
add
add
inc
add
add
adc
add
add
adc
test
add
inc
or
sldt
add
stc
add
adc
sldt
add
adc
lods
add
add
or
sbb
add
add
add
add
lock
add
stc
add
cmovb
sbb
add
add
adc
add
add
fs
add
push
pushf
adc
add
add
inc
add
add
inc
add
add
add
stc
add
adc
add
add
inc
add
add
or
or
add
add
add
add
lock
add
or
or
add
add
inc
add
add
inc
icebp
inc
add
adc
or
add
inc
add
add
add
add
inc
add
add
add
stc
add
or
xor
add
inc
add
add
add
add
or
adc
repnz
add
stc
add
adc
adc
add
add
inc
add
add
add
add
cli
add
adc
sbb
add
inc
add
add
inc
add
add
add
cli
add
adc
and
add
inc
add
add
inc
add
add
add
repnz
add
cli
add
adc
add
add
inc
add
add
inc
add
add
add
inc
add
cli
add
adc
sbb
add
inc
add
add
add
add
or
daa
add
add
add
adc
daa
add
add
pop
add
add
add
add
call
stc
add
or
cmp
add
inc
add
add
add
add
or
sub
add
pop
hlt
inc
add
stc
add
adc
sub
add
inc
add
add
add
add
or
adc
add
mov
stc
add
or
adc
add
inc
add
add
add
add
inc
add
add
add
add
adc
and
add
inc
add
add
add
add
add
je
inc
add
push
sbb
inc
add
add
add
adc
lock
add
or
adc
add
fdiv
inc
add
adc
adc
add
inc
add
hlt
add
add
or
cmp
add
cmp
inc
add
or
cmp
add
inc
add
add
add
add
or
sbb
add
add
inc
add
adc
sbb
add
inc
add
add
inc
add
add
add
inc
add
push
pop
adc
add
add
adc
add
add
clc
or
adc
add
int3
test
pusha
adc
adc
add
inc
add
add
add
test
inc
add
add
add
inc
add
add
adc
adc
add
inc
add
add
add
add
or
push
add
add
add
adc
push
add
add
add
or
add
fcom
inc
add
add
add
stc
inc
add
push
test
inc
add
add
add
add
adc
add
fcom
inc
add
add
add
inc
add
push
nop
adc
or
add
inc
add
add
add
fcom
inc
add
add
add
inc
add
push
pushf
adc
sub
add
inc
add
add
add
add
or
sub
add
pop
stc
inc
add
stc
add
adc
sub
add
inc
add
add
add
sbb
inc
add
add
add
stc
add
adc
sub
add
inc
add
and
add
adc
inc
add
add
add
add
add
inc
add
adc
xor
add
add
add
je
inc
add
(bad)
(bad)
inc
add
add
add
add
cli
inc
add
or
(bad)
(bad)
(bad)
inc
sub
sub
add
enter
cmp
add
jo
inc
add
inc
add
add
add
or
sub
add
fcom
inc
add
add
add
cld
inc
add
inc
add
add
add
sub
xor
add
adc
inc
add
add
add
add
adc
cmp
add
inc
add
add
add
inc
or
and
add
cmp
inc
add
add
adc
and
add
pushf
std
inc
add
std
inc
add
std
inc
add
std
inc
add
std
inc
add
inc
sbb
inc
add
inc
add
inc
(bad)
add
inc
(bad)
std
inc
add
inc
and
inc
aas
inc
dec
inc
pop
inc
data16
jae
inc
add
inc
call
add
inc
add
inc
(bad)
inc
add
inc
cmc
inc
add
inc
add
inc
sub
inc
add
inc
inc
inc
push
inc
pop
inc
push
inc
add
inc
add
inc
(bad)
inc
add
inc
push
add
adc
inc
add
add
sub
add
add
add
xor
inc
add
add
dec
inc
add
inc
add
inc
add
inc
pop
fld
je
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
aam
inc
add
add
dec
inc
add
inc
add
inc
add
fld
je
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
fiadd
je
inc
add
dec
inc
add
inc
add
inc
add
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
pushf
fiadd
je
inc
add
dec
inc
add
inc
add
inc
add
fiadd
je
inc
add
dec
inc
add
inc
add
inc
add
inc
add
fiadd
je
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
inc
fild
je
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
(bad)
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
dec
inc
add
inc
add
inc
add
add
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
inc
int3
loopne
add
add
dec
inc
add
inc
add
inc
add
add
add
inc
hlt
loopne
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
inc
loope
add
add
dec
inc
add
inc
add
inc
add
add
add
add
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
loope
add
add
dec
inc
add
inc
add
inc
add
add
add
inc
or
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
loop
add
add
dec
inc
add
inc
add
inc
add
add
add
loop
add
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
add
dec
inc
add
inc
add
inc
add
add
je
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
jecxz
add
add
dec
inc
add
inc
add
inc
add
jecxz
add
add
dec
inc
add
inc
add
inc
add
add
sbb
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
add
in
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
sub
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
add
dec
inc
add
inc
add
inc
add
inc
movs
in
add
add
dec
inc
add
inc
add
inc
add
in
add
add
dec
inc
add
inc
add
inc
add
add
add
inc
hlt
in
add
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
dec
inc
add
inc
add
inc
add
inc
or
inc
add
add
add
dec
inc
add
inc
add
inc
add
add
add
inc
add
add
add
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
dec
mov
in
dec
adc
add
add
add
xor
inc
add
add
add
add
add
add
add
add
cmp
push
push
inc
add
pop
inc
add
add
add
inc
add
add
add
add
add
(bad)
(bad)
call
inc
add
add
mov
inc
add
add
add
add
add
pop
inc
add
(bad)
(bad)
(bad)
call
add
add
adc
add
add
movs
push
inc
add
add
add
add
add
inc
add
add
add
add
dec
movs
inc
add
(bad)
(bad)
(bad)
clc
sub
inc
add
add
test
inc
add
add
add
add
add
inc
add
(bad)
(bad)
inc
inc
add
add
add
add
inc
add
mov
add
inc
addr16
add
(bad)
(bad)
push
sub
enter
push
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
js
inc
add
test
cmp
bound
dec
adc
aam
inc
add
add
add
add
add
add
add
add
add
add
jl
inc
add
(bad)
(bad)
inc
push
inc
add
add
add
bound
add
add
loopne
inc
add
add
add
add
add
inc
add
add
add
add
sub
inc
add
(bad)
(bad)
inc
pop
inc
add
add
add
adc
add
add
in
push
inc
add
add
add
add
add
inc
add
add
add
add
clc
bound
(bad)
(bad)
(bad)
inc
xor
hlt
push
inc
add
add
adc
inc
add
inc
add
add
add
inc
add
(bad)
(bad)
push
add
add
pop
inc
add
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
jmp
add
adc
inc
add
add
add
add
add
add
(bad)
inc
pop
inc
add
add
add
add
add
pop
inc
add
add
add
add
add
inc
add
add
add
add
or
add
add
add
sbb
add
or
add
in
jmp
inc
add
add
add
add
add
add
add
jmp
add
and
add
add
add
add
add
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
in
jmp
add
adc
add
and
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
or
add
adc
add
adc
add
or
add
add
add
adc
add
or
add
or
add
or
add
adc
add
dec
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
or
add
(bad)
(bad)
inc
fcom
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
and
add
add
add
dec
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
sub
inc
add
add
add
add
add
sub
inc
add
sub
inc
add
sub
inc
add
sub
add
or
add
adc
add
or
add
adc
add
add
add
std
(bad)
dec
add
add
add
pop
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
add
add
add
add
add
add
add
add
add
adc
add
test
add
add
add
inc
inc
add
inc
add
add
add
add
add
add
pop
inc
add
pop
inc
add
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
ins
add
add
add
mov
inc
add
imul
add
sub
add
imul
add
add
and
add
add
mov
add
add
inc
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
cwde
das
inc
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
data16
push
gs
jb
push
popa
imul
outs
fs
xor
data16
push
outs
fs
gs
add
gs
outs
outs
je
outs
ins
xor
add
add
imul
add
dec
outs
imul
add
dec
push
jb
jns
outs
outs
add
add
je
add
add
ins
inc
gs
gs
inc
jb
outs
fs
add
add
ins
push
imul
jb
inc
fs
arpl
add
inc
push
outs
jbe
jb
imul
imul
add
add
add
add
add
add
fsubp
push
pop
pop
sbb
push
mov
shr
and
cmp
inc
ds
jg
push
dec
and
xchg
or
push
pop
test
inc
mov
std
mov
mov
mov
sub
fcom
dec
lods
xor
or
stos
add
xchg
push
imul
add
add
cs
push
add
xor
sub
inc
add
add
add
add
add
add
add
inc
add
add
pop
bound
fcom
add
inc
cmp
outs
addr16
ins
and
ins
gs
dec
imul
je
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
add
mov
add
add
add
add
add
add
pop
inc
add
inc
add
pop
bound
fcom
lods
xor
or
stos
add
xchg
dec
popa
bound
xor
lods
xor
or
stos
add
xchg
push
gs
xor
add
push
gs
xor
add
dec
popa
bound
xor
add
gs
xor
add
arpl
xor
add
add
push
gs
ins
push
popa
add
bound
xor
add
lods
xor
or
stos
add
xchg
ins
outs
jne
popa
imul
dec
lods
xor
or
stos
add
xchg
inc
push
add
ins
popa
bound
jns
outs
jne
je
ins
popa
bound
ins
ins
inc
outs
jne
je
add
add
dec
lods
xor
or
stos
add
xchg
inc
push
add
ins
xor
xor
cmps
js
xor
stos
push
bound
outs
ja
gs
add
sub
push
sbb
mov
pushf
int3
inc
cmp
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
imul
outs
arpl
push
dec
inc
outs
arpl
inc
je
add
je
je
popa
addr16
popa
jae
add
dec
lods
xor
or
stos
add
xchg
inc
outs
jb
add
add
scas
stc
shl
mov
mov
push
popa
bound
jb
jo
add
add
outs
jle
test
mov
jle
add
cmp
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
dec
push
inc
dec
dec
inc
push
dec
outs
arpl
add
add
inc
outs
ins
arpl
imul
add
add
add
add
add
add
mov
or
clc
pop
bound
fcom
bound
xor
add
dec
lods
xor
or
stos
add
xchg
inc
outs
ins
ins
popa
outs
xor
add
add
push
popa
addr16
imul
outs
jne
jo
imul
call
mov
(bad)
cld
dec
push
jo
outs
ja
xor
cmps
loopne
sahf
loop
fimul
sbb
fisttp
mov
pop
push
dec
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
dec
push
inc
dec
dec
inc
push
xor
outs
arpl
add
add
inc
outs
ins
inc
je
xor
add
push
add
add
add
add
add
add
inc
add
bound
fcom
inc
outs
ja
xor
arpl
dec
inc
push
push
add
outs
jne
gs
push
outs
jne
popa
push
imul
outs
add
arpl
arpl
inc
imul
inc
jae
imul
jb
imul
je
add
add
fs
jae
add
mov
sbb
inc
pop
xlat
pop
shl
jae
push
imul
ins
outs
jne
jne
push
ins
outs
jne
gs
gs
add
dec
popa
bound
add
ins
outs
jne
ins
gs
jb
imul
outs
ins
ins
popa
outs
fs
ror
xor
or
stos
add
xchg
imul
add
jae
jae
inc
gs
gs
add
add
je
je
push
fs
jae
add
dec
imul
xor
add
inc
outs
ins
ins
popa
outs
xor
add
add
ins
ins
popa
outs
xor
add
add
fs
gs
jb
push
ins
fs
imul
je
add
ins
outs
jne
jae
imul
lods
xor
or
stos
add
xchg
inc
jb
ins
xor
add
popa
ins
xor
add
dec
lods
xor
or
stos
add
xchg
inc
outs
ins
bound
add
pop
add
add
ins
ins
outs
outs
add
adc
add
push
push
dec
inc
outs
ja
ins
outs
popa
fs
outs
inc
imul
add
dec
add
arpl
jb
outs
add
outs
add
je
add
dec
add
add
add
add
dec
or
add
add
add
add
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
fs
jo
xor
cs
ins
add
add
push
add
add
addr16
jb
popa
je
dec
gs
add
add
or
add
or
add
add
or
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
addr16
gs
popa
ins
jne
inc
js
add
enter
and
inc
add
add
sbb
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
push
gs
ins
outs
jae
dec
gs
enter
ins
or
add
and
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
or
gs
imul
je
add
add
or
add
xor
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
je
gs
add
outs
addr16
imul
dec
imul
add
add
inc
gs
gs
inc
add
add
adc
or
add
add
add
add
xor
add
push
add
add
inc
add
add
jo
add
add
add
jae
add
add
add
add
add
add
push
add
add
add
add
add
add
jo
outs
add
jae
add
add
je
add
add
dec
lock
mov
add
lock
sub
sar
mov
add
lock
sub
add
add
dec
lods
xor
or
stos
add
xchg
adc
add
(bad)
(bad)
in
int
or
mov
add
add
add
shl
jns
add
add
add
add
pop
sbb
and
add
add
add
add
add
dec
add
(bad)
xor
or
stos
add
xchg
or
add
(bad)
(bad)
in
mov
imul
add
add
add
mov
imul
add
pusha
add
add
cmp
pop
add
jb
outs
add
jb
popa
add
and
inc
add
ins
add
jae
pop
add
outs
add
add
outs
add
je
and
inc
add
jo
ins
add
jb
add
pop
add
inc
add
push
add
add
inc
add
add
pop
add
and
add
add
loope
lods
xor
or
stos
add
xchg
add
add
retf
pop
jne
add
dec
std
and
mov
jle
imul
js
push
mov
xchg
mov
imul
add
add
add
add
sbb
add
arpl
push
jne
push
add
add
push
add
cmp
das
add
add
ja
ja
add
add
add
add
jne
outs
add
popa
add
add
outs
add
das
add
add
bound
popa
add
das
add
add
jb
arpl
push
add
xor
xor
xor
xor
add
je
ins
add
add
xor
stc
stos
inc
xchg
pop
mov
jne
push
or
js
lods
aas
ja
and
mov
mov
(bad)
cld
dec
mov
lds
push
ins
xchg
mov
cld
jmp
add
xor
or
stos
add
xchg
outs
jo
dec
outs
imul
ins
popa
bound
ja
jae
dec
add
fs
imul
xor
or
stos
add
xchg
push
imul
outs
jo
dec
outs
imul
push
jae
jb
popa
ins
gs
push
add
arpl
push
jne
push
add
outs
jne
fs
fs
imul
imul
add
add
ins
popa
bound
outs
je
arpl
fs
ins
popa
bound
outs
je
arpl
jne
je
arpl
inc
ins
outs
jae
push
imul
ins
popa
bound
outs
jne
inc
gs
add
add
ins
popa
bound
je
jb
gs
add
add
push
push
je
outs
outs
dec
gs
jo
add
je
inc
jb
arpl
add
ins
popa
bound
outs
fs
outs
jne
je
add
add
arpl
add
arpl
push
jne
push
outs
jae
outs
add
add
inc
jb
ins
gs
add
popa
ins
xor
add
popa
ins
gs
inc
jb
ins
gs
fs
outs
fs
gs
add
fs
gs
jb
push
gs
imul
add
je
outs
imul
arpl
inc
ins
outs
jae
push
popa
ins
imul
add
imul
push
jns
bound
add
add
adc
xor
or
stos
add
xchg
dec
imul
arpl
dec
imul
ins
add
add
arpl
ins
imul
fs
outs
add
inc
push
add
add
inc
push
add
add
gs
add
arpl
push
gs
je
add
add
fs
ins
gs
jb
add
add
bound
outs
ja
gs
add
aad
dec
lea
pop
xor
bound
pop
addr16
cmp
add
add
icebp
ja
bound
add
add
outs
ja
outs
outs
je
js
dec
popa
bound
add
adc
add
add
adc
add
pop
add
add
gs
xor
add
add
push
gs
outs
jb
addr16
jne
fs
imul
adc
and
inc
add
add
cmp
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
dec
gs
popa
addr16
outs
js
add
inc
add
add
add
dec
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jne
inc
push
imul
add
add
inc
add
add
push
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
inc
imul
outs
ja
add
inc
add
adc
add
add
pusha
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
outs
fs
imul
inc
add
add
inc
add
inc
add
add
ins
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
jb
popa
fs
jb
arpl
jae
add
add
adc
inc
add
add
js
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
je
jne
add
sldt
add
je
imul
js
inc
add
adc
inc
add
adc
add
add
test
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
outs
fs
gs
popa
addr16
add
add
adc
inc
add
add
nop
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
arpl
add
inc
add
add
add
pushf
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
push
jb
outs
je
imul
adc
mov
add
test
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
outs
jae
dec
gs
popa
addr16
add
add
adc
inc
add
push
inc
add
add
mov
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
dec
imul
data16
jae
dec
jne
bound
add
add
arpl
fs
outs
add
push
popa
ins
imul
add
imul
add
dec
jne
addr16
outs
fs
imul
jne
addr16
imul
add
add
inc
add
add
add
add
add
add
test
push
add
add
or
add
cld
pop
gs
mov
imul
add
pop
add
add
je
je
jo
cmp
das
add
add
popa
add
add
add
add
bound
popa
add
add
outs
add
das
add
add
bound
add
pop
add
popa
add
add
add
je
ins
add
add
jae
add
pop
add
add
add
add
add
popa
add
add
cmp
add
outs
add
je
add
je
cmp
add
add
add
je
imul
cmp
add
add
outs
add
add
add
add
jb
outs
add
cmp
add
add
add
popa
add
add
add
add
add
outs
add
add
add
add
add
add
jo
ins
add
jns
push
add
add
dec
add
arpl
imul
add
add
add
add
and
add
sbb
add
popa
add
arpl
je
imul
push
add
je
ins
add
add
add
add
add
sub
add
xchg
gs
push
jl
rcl
mov
add
lock
sub
test
adc
sub
sub
add
sub
ja
add
add
cmp
push
add
xor
and
push
add
xor
add
add
add
popa
add
add
cmp
add
outs
add
je
add
je
cmp
add
add
add
je
imul
cmp
add
add
outs
add
add
add
add
jb
outs
add
cmp
add
add
add
popa
add
add
add
outs
add
add
add
add
add
add
je
push
add
add
add
add
add
add
and
add
or
add
je
add
jo
add
add
sbb
add
pop
add
add
bound
popa
add
add
je
ins
add
add
add
add
add
jae
add
imul
add
push
add
add
mov
pop
cli
xchg
xor
push
add
icebp
dec
lods
xor
or
stos
add
xchg
or
add
add
pop
sbb
and
add
add
add
add
imul
jge
add
add
add
add
add
add
add
add
and
pop
aad
add
add
cmp
add
test
mov
or
outs
(bad)
test
cmp
arpl
mov
pop
push
push
arpl
push
cli
push
push
push
mov
xchg
pop
cli
xchg
sub
dec
mov
add
add
push
add
add
add
add
sub
shl
push
push
push
mov
pop
push
push
push
call
pop
add
or
add
and
sbb
and
add
add
add
add
sbb
dec
sbb
add
add
jns
lods
xor
or
stos
add
xchg
sbb
add
pop
add
ins
add
add
jae
pop
add
add
add
ins
add
add
ror
xor
or
stos
add
xchg
sbb
add
pop
add
ins
add
add
jae
pop
add
add
add
ins
add
add
sbb
add
pop
add
ins
add
add
jae
pop
add
add
add
ins
add
add
sbb
add
pop
add
ins
add
add
jae
pop
add
add
ins
add
add
adc
xor
or
stos
add
xchg
or
xor
or
stos
add
xchg
push
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
outs
add
add
outs
add
je
and
inc
add
jo
ins
add
jb
add
pop
add
popa
add
outs
add
add
add
add
add
jo
ins
add
jns
and
dec
add
ins
add
outs
add
and
dec
add
popa
add
add
add
push
add
add
add
add
xor
xor
add
or
add
add
add
add
or
add
or
add
adc
add
adc
add
sbb
add
sbb
add
and
add
and
add
add
add
xor
add
inc
add
add
imul
add
jbe
popa
dec
xor
jb
add
add
add
push
dec
push
cmp
push
bound
push
pop
test
pop
not
dec
outs
data16
or
outs
(bad)
test
push
push
lahf
push
std
add
xlat
push
xor
xchg
ss
add
add
adc
add
pop
push
push
jp
dec
pop
cli
push
add
adc
add
pop
add
jb
ins
add
add
add
add
add
add
add
mov
mov
dec
sbb
mov
cmp
adc
add
cld
pop
cli
push
(bad)
(bad)
or
push
pop
jne
xchg
out
mov
inc
add
ins
add
add
add
add
push
add
outs
add
add
push
add
js
je
add
push
add
add
bound
sbb
add
je
popa
add
dec
add
ins
add
add
or
add
imul
jne
je
add
dec
add
ins
add
add
add
add
add
jno
add
push
add
ins
add
add
add
add
add
add
add
add
add
jnp
sub
add
add
add
add
add
add
or
add
outs
add
je
imul
add
add
push
add
ins
add
arpl
je
add
add
add
add
add
popa
add
add
add
inc
add
add
imul
add
add
add
add
and
and
add
add
add
push
add
add
jb
arpl
push
add
outs
add
popa
add
add
outs
add
add
or
add
push
jne
ins
add
je
outs
add
add
add
add
bound
jne
je
je
outs
add
add
add
add
add
outs
js
pop
add
add
add
add
push
add
add
add
add
add
push
add
add
add
inc
add
add
jae
dec
add
ins
add
add
or
add
je
imul
add
add
add
jb
popa
add
add
add
add
bound
popa
add
add
outs
add
das
add
jae
add
sub
add
add
add
add
xchg
pop
cli
xchg
test
add
mov
push
add
add
or
add
push
push
mov
loope
sub
add
add
add
push
add
cmp
das
add
add
jne
add
je
jo
popa
add
add
add
outs
add
das
add
add
jb
ins
add
add
add
add
add
add
popa
add
add
add
add
bound
popa
add
add
outs
add
add
or
add
arpl
push
sbb
and
jnp
add
add
add
add
add
add
push
add
ins
add
outs
add
add
add
or
push
inc
inc
ss
dec
dec
pop
pop
jbe
popa
push
popa
jb
popa
je
dec
gs
push
je
add
pop
pop
jbe
popa
push
popa
jb
ins
jo
jno
add
pop
pop
jbe
popa
push
popa
jb
outs
add
jbe
popa
push
popa
jb
popa
je
dec
gs
inc
popa
ins
ins
dec
fs
data16
jbe
popa
push
popa
jb
popa
je
dec
gs
inc
popa
ins
ins
dec
add
add
jbe
popa
push
popa
jb
gs
popa
jb
add
add
add
bound
outs
add
je
cmp
bound
ins
add
outs
add
add
pop
pop
jbe
popa
push
je
push
cmp
add
jbe
popa
push
je
dec
xor
add
jbe
popa
inc
outs
outs
ins
push
popa
jb
jne
ins
add
add
pop
pop
jbe
popa
inc
js
je
jb
arpl
add
adc
add
lea
bound
mov
add
cmp
add
add
add
or
add
add
jbe
popa
push
jb
outs
je
imul
bound
xor
add
add
sbb
rcr
add
jbe
popa
push
popa
jb
ins
jo
add
add
jbe
popa
push
popa
jb
imul
popa
push
popa
jb
outs
je
pop
pop
jbe
popa
push
popa
jb
jne
add
add
add
jbe
popa
push
xor
popa
jb
add
jbe
popa
push
popa
jb
outs
add
jbe
popa
dec
popa
je
dec
fs
je
add
pop
pop
jbe
popa
dec
xor
je
add
pop
pop
jbe
popa
inc
imul
add
pop
pop
jbe
popa
dec
imul
je
je
add
add
jbe
popa
inc
imul
add
pop
pop
jbe
popa
push
je
push
outs
push
outs
imul
add
jbe
popa
push
popa
jb
popa
je
pop
pop
jbe
popa
push
je
push
outs
inc
outs
jae
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
add
push
imul
jae
bound
pop
pop
jbe
popa
dec
outs
push
je
push
popa
jb
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
dec
outs
push
je
add
pop
pop
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
pop
pop
jbe
popa
dec
gs
add
add
jbe
popa
dec
popa
je
dec
fs
popa
ins
ins
add
jbe
popa
push
cmp
jb
add
jbe
popa
inc
push
dec
outs
je
add
jbe
popa
inc
jo
cmp
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
push
popa
jb
jae
inc
add
add
jbe
popa
push
je
dec
xor
add
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
inc
ins
jo
pop
pop
jbe
popa
dec
xor
popa
jb
add
jbe
popa
push
popa
jb
jae
inc
je
add
pop
pop
jbe
popa
push
popa
jb
fs
jbe
popa
push
popa
jb
jne
add
jbe
popa
dec
xor
jb
add
jbe
popa
push
popa
jb
outs
jb
gs
add
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
popa
jb
outs
jo
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jb
outs
imul
inc
jb
gs
bound
imul
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
popa
je
dec
fs
popa
ins
ins
dec
add
add
jbe
popa
inc
popa
jae
dec
bound
popa
jb
ins
popa
bound
jo
imul
add
push
imul
pop
pop
jbe
popa
dec
bound
gs
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
sbb
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
gs
cmp
add
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
dec
add
pop
pop
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
dec
bound
popa
jb
add
add
outs
add
add
add
pop
pop
jbe
popa
dec
bound
gs
fs
data16
add
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
add
add
add
add
add
add
cmp
das
add
add
ins
add
jae
add
ins
add
add
ins
add
jae
outs
add
je
add
outs
add
das
add
jne
ins
add
jne
jae
add
jae
je
popa
add
add
add
ja
aas
add
add
imul
jne
ins
add
add
imul
cmp
add
add
bound
popa
add
add
imul
cmp
add
add
push
mov
add
add
mov
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
aaa
add
add
add
push
jns
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
gs
mov
fld
xlat
je
addr16
mov
mov
push
lods
xor
or
stos
add
xchg
dec
ins
popa
addr16
popa
addr16
add
dec
ins
popa
cmp
add
popa
gs
push
popa
jae
ja
jb
add
add
push
jae
jb
popa
ins
add
add
dec
ins
popa
xor
add
popa
xor
add
popa
xor
add
popa
addr16
add
outs
ins
arpl
xor
fs
ins
add
add
adc
add
dec
outs
imul
inc
outs
outs
je
outs
ins
jae
add
sub
inc
sub
add
add
les
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
outs
fs
gs
imul
add
mov
inc
add
add
rcr
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
outs
jne
gs
je
add
dec
popa
bound
aaa
add
add
add
les
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
arpl
arpl
dec
xchg
lods
fld
and
pushf
mov
pop
mov
or
inc
add
inc
add
add
fcomp
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
je
dec
dec
add
jo
jo
dec
data16
dec
outs
ins
gs
add
add
or
nop
add
add
add
sub
cmp
sub
cmp
xor
popa
add
add
or
add
repnz
push
cmp
cmp
add
add
add
add
popa
add
adc
add
adc
push
rcl
nop
cmp
xor
and
popa
add
add
aaa
retf
and
ins
inc
cmps
test
ds
pop
pop
xor
jg
mov
push
fisttp
gs
sbb
jns
xchg
push
inc
sbb
sbb
call
pop
dec
mov
call
ins
add
add
xor
or
stos
add
xchg
outs
jo
outs
push
imul
jo
outs
push
gs
arpl
je
je
jo
outs
imul
add
je
je
jns
xor
add
add
fs
gs
popa
imul
inc
popa
outs
arpl
add
add
fs
imul
gs
xor
add
push
jns
bound
add
add
gs
xor
add
outs
jne
ins
gs
jb
add
je
je
popa
outs
addr16
popa
outs
addr16
popa
je
add
gs
cmp
add
inc
add
inc
add
add
call
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jns
je
ins
dec
outs
jne
add
adc
inc
add
add
hlt
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
outs
jne
je
ins
inc
outs
jne
je
add
add
inc
add
sub
add
add
add
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
popa
bound
outs
jne
je
ins
add
adc
inc
add
add
or
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
je
popa
outs
addr16
popa
outs
addr16
outs
jne
je
add
add
fs
outs
imul
add
inc
gs
jae
dec
add
add
dec
imul
add
add
ins
je
jb
add
je
arpl
jne
je
add
je
jns
add
je
jns
gs
outs
add
add
imul
ins
push
jb
imul
add
add
add
add
add
add
add
inc
add
add
add
dec
jne
je
inc
jns
gs
outs
push
imul
mov
inc
add
cs
add
add
sbb
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
outs
inc
add
add
mov
inc
add
add
add
and
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
pop
gs
dec
add
push
pop
jne
xchg
out
mov
inc
add
add
add
inc
add
push
push
jp
dec
pop
cli
push
add
adc
add
cld
pop
cli
push
dec
add
push
pop
jne
xchg
out
mov
inc
add
add
add
pop
rcl
nop
add
jo
xchg
clc
sti
cmps
mov
fmulp
sbb
ja
fucomip
cmc
sbb
inc
inc
xchg
(bad)
mov
add
push
adc
loop
cmps
call
out
scas
cld
adc
xchg
adc
call
gs
fs
arpl
jne
je
dec
popa
bound
xor
add
gs
xor
add
gs
xor
push
popa
ins
imul
bound
add
push
jb
gs
popa
ins
add
add
inc
ins
popa
imul
arpl
add
inc
outs
ins
ins
popa
outs
fs
add
add
arpl
outs
je
inc
gs
add
inc
gs
popa
ins
imul
add
adc
call
add
add
add
add
add
add
add
add
add
popa
add
ins
add
and
push
add
jb
imul
and
inc
add
bound
jne
add
add
add
push
add
add
pop
and
retf
pop
and
rcl
add
nop
add
push
add
add
push
add
or
dec
jp
or
test
inc
add
add
add
add
mov
push
add
push
pop
jmp
gs
not
bound
xchg
cld
pop
gs
cli
not
push
push
dec
add
add
push
add
add
pop
push
cmp
add
xor
add
inc
bound
addr16
add
pop
iret
jle
push
add
or
sbb
repz
int
mov
rcl
nop
test
rcl
add
add
add
add
or
(bad)
iret
xchg
cld
pop
gs
cli
not
pop
iret
jle
push
add
or
sbb
repz
out
in
jle
push
add
test
cli
not
add
add
arpl
ins
add
add
add
and
jb
add
jae
jbe
jb
xor
xor
and
das
add
and
das
add
and
and
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
ins
add
add
add
add
ins
add
add
add
add
add
add
dec
lods
xor
or
stos
add
xchg
push
add
add
push
and
rcl
add
nop
add
add
add
pop
xor
jbe
mov
dec
mov
cmp
int3
jmp
mov
xchg
mov
lods
mov
cmp
mov
dec
mov
pandn
sahf
hlt
aam
inc
mov
dec
pusha
ss
add
add
je
ins
popa
jae
dec
popa
ins
gs
add
add
inc
add
xor
add
add
xor
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
outs
jb
addr16
jne
fs
imul
adc
sub
inc
add
add
cmp
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jae
outs
arpl
jns
je
je
add
add
adc
inc
add
add
add
dec
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
ins
outs
jne
gs
gs
outs
je
adc
inc
add
xor
add
add
push
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
push
add
add
add
add
add
bound
push
mov
add
js
add
add
add
jb
add
je
add
outs
add
je
jb
outs
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
sbb
test
push
pop
dec
push
test
jb
addr16
(bad)
dec
dec
or
test
jge
add
gs
jb
addr16
sub
jmp
dec
outs
js
dec
outs
(bad)
test
pop
pop
arpl
pop
in
pop
dec
add
add
or
add
hlt
data16
shl
jns
add
add
add
add
push
arpl
outs
ins
dec
jb
jae
ins
je
add
cmp
add
xor
add
pusha
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
jne
(bad)
jmp
push
pop
xchg
bound
xchg
sub
mov
mov
test
mov
pop
outs
(bad)
test
jo
push
push
or
mov
push
add
bound
push
lahf
push
retf
pop
dec
push
out
push
add
add
dec
add
add
add
add
push
sbb
push
mov
xchg
jp
push
jmp
jae
mov
movs
jg
push
outs
(bad)
test
in
pop
dec
or
pop
int
lahf
push
retf
pop
dec
push
arpl
pop
in
pop
dec
add
add
adc
add
outs
(bad)
test
mov
dec
jb
cmp
inc
add
add
imul
adc
push
add
add
inc
add
add
add
add
or
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
xor
add
fbld
push
cmp
dec
jg
dec
push
outs
(bad)
test
cmp
push
int
sub
bound
in
pop
dec
or
mov
jbe
xor
add
add
icebp
push
xor
add
add
push
xor
add
add
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
ins
add
add
add
and
jb
add
jae
jbe
jb
xor
xor
and
das
add
and
and
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
ins
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
jb
outs
add
add
jae
add
outs
add
ins
add
cmp
add
add
add
popa
add
jae
ja
outs
add
add
add
add
add
outs
add
je
imul
je
popa
add
bound
popa
add
add
add
add
add
ins
add
add
add
and
je
popa
add
imul
add
ins
add
add
add
ins
add
add
test
xchg
(bad)
gs
mov
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
das
pop
xchg
bound
xchg
pop
jmp
add
add
add
add
add
outs
add
jb
popa
add
and
inc
add
ins
add
jae
pop
add
outs
add
add
outs
add
je
and
inc
add
jo
ins
add
jb
add
pop
add
inc
add
push
add
add
inc
add
add
pop
add
and
push
add
cmp
das
add
add
ja
ja
add
add
add
add
jne
outs
add
popa
add
add
outs
add
add
xchg
add
inc
add
add
add
outs
add
jb
popa
add
and
inc
add
ins
add
jae
pop
add
outs
add
add
outs
add
je
and
inc
add
jo
ins
add
jb
add
pop
add
inc
add
push
add
add
inc
add
add
pop
add
and
push
add
cmp
das
add
add
ja
ja
add
add
add
add
add
add
add
outs
add
add
add
add
add
outs
add
jb
popa
add
and
inc
add
ins
add
jae
pop
add
outs
add
add
outs
add
je
and
inc
add
jo
ins
add
jb
add
pop
add
inc
add
push
add
add
inc
add
add
pop
add
and
push
add
cmp
das
add
add
ja
ja
add
outs
add
jno
jne
outs
add
popa
add
add
outs
add
add
adc
inc
add
inc
inc
add
add
ins
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
outs
add
jb
popa
add
and
inc
add
ins
add
jae
pop
add
outs
add
add
outs
add
je
and
inc
add
jo
ins
add
jb
add
pop
add
inc
add
push
add
add
inc
add
add
pop
add
and
push
add
cmp
das
add
add
ja
ja
add
imul
cmp
add
outs
add
add
add
mov
add
inc
add
add
add
outs
add
jb
popa
add
and
inc
add
ins
add
jae
pop
add
outs
add
add
outs
add
je
and
inc
add
jo
ins
add
jb
add
pop
add
inc
add
push
add
add
inc
add
add
pop
add
and
push
add
cmp
das
add
add
ja
ja
add
jns
jno
jne
outs
add
popa
add
add
outs
add
add
add
mov
add
inc
add
add
add
outs
add
jb
popa
add
and
inc
add
ins
add
jae
pop
add
outs
add
add
outs
add
je
and
inc
add
jo
ins
add
jb
add
pop
add
inc
add
push
add
add
inc
add
add
pop
add
and
push
add
cmp
das
add
add
ja
ja
add
ja
jno
jne
outs
add
popa
add
add
outs
add
add
add
adc
inc
add
inc
add
add
js
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
add
add
outs
add
jb
popa
add
and
inc
add
ins
add
jae
pop
add
outs
add
add
outs
add
je
and
inc
add
jo
ins
add
jb
add
pop
add
inc
add
push
add
add
inc
add
add
pop
add
and
push
add
cmp
das
add
add
ja
ja
add
imul
add
add
outs
add
add
data16
add
add
(bad)
not
push
add
gs
xchg
jmp
dec
outs
(bad)
test
push
pop
or
loopne
imul
pop
xchg
bound
xchg
sub
jne
mov
test
lahf
push
retf
pop
dec
push
outs
(bad)
test
jmp
push
or
test
outs
js
mov
dec
mov
push
pop
inc
add
add
add
add
add
pop
add
fbld
push
add
add
add
outs
add
je
add
push
add
add
mov
pusha
sti
ins
mov
gs
gs
add
add
add
add
ins
punpcklwd
add
(bad)
not
jl
push
lds
cwde
cmp
ins
popf
pop
push
jg
add
add
sti
ins
mov
add
add
pop
add
mov
pop
add
add
push
add
mov
pusha
sub
shl
jns
xchg
pop
jne
dec
rcl
nop
or
xchg
push
push
sub
mov
cmp
pop
retf
push
sub
adc
push
mov
push
push
push
sub
rcl
nop
mov
pusha
fnstcw
pop
mov
cmc
push
xor
add
add
add
pop
add
add
hlt
mov
pop
add
add
jbe
arpl
cmp
pop
retf
push
sub
adc
push
mov
push
push
push
sub
rcl
nop
mov
pusha
fnstcw
pop
mov
dec
sub
add
push
rcl
nop
sub
cli
pop
scas
mov
nop
jmp
maxps
add
add
pop
add
mov
pop
add
add
push
mov
cmp
pop
retf
push
sub
or
nop
mov
pusha
add
add
sbb
add
add
jo
ins
add
jb
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xchg
int3
xchg
cli
gs
and
sub
pop
push
mov
add
add
add
test
xchg
(bad)
gs
mov
add
and
add
push
add
jne
outs
add
add
push
add
add
add
je
inc
add
js
add
xor
add
dec
add
je
add
outs
add
je
and
inc
add
jo
ins
add
jb
add
pop
add
add
jbe
add
add
add
sbb
and
add
add
add
add
or
add
or
add
add
add
pop
add
add
imul
outs
outs
ja
gs
popa
addr16
add
adc
add
push
outs
fs
gs
popa
addr16
imul
add
add
add
gs
arpl
add
add
add
outs
add
jns
add
add
add
add
inc
add
ins
add
popa
add
add
add
lods
xor
or
stos
add
xchg
push
add
add
cmp
pop
add
popa
add
add
add
add
add
jo
add
add
add
add
popa
add
data16
outs
add
popa
add
add
adc
add
ja
popa
add
add
popa
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
jb
add
push
add
add
add
je
inc
add
ins
add
outs
add
add
je
add
sbb
add
push
add
add
add
jb
add
jne
je
je
outs
add
add
add
push
add
add
jo
ins
add
je
je
add
inc
add
jb
add
sbb
add
push
add
add
add
jb
add
imul
outs
add
add
add
sbb
add
push
add
ins
add
ins
add
inc
add
outs
add
jae
add
add
push
add
add
push
add
add
ins
add
add
add
outs
add
add
sub
add
push
add
add
add
add
add
dec
add
push
add
je
and
push
add
add
add
add
or
add
pop
add
push
inc
jb
add
add
add
add
add
pop
dec
xchg
pop
jne
dec
rcl
nop
test
ins
outs
pusha
mov
dec
push
xchg
xchg
add
add
add
test
fmul
stc
pop
mov
pop
retf
push
or
stc
pop
mov
jg
dec
movs
arpl
gs
xchg
pop
jne
dec
mov
pusha
add
add
add
add
sub
add
add
ins
add
imul
popa
add
add
outs
add
je
popa
add
je
aas
add
imul
add
push
add
add
add
add
imul
arpl
outs
add
add
bound
popa
add
add
or
add
jge
retf
push
or
xchg
add
add
or
add
dec
xchg
pop
jne
dec
or
xchg
add
and
add
rcl
nop
mov
imul
pop
pushf
addr16
int
mov
rcl
nop
or
test
add
add
add
add
push
add
add
outs
add
add
add
add
add
add
add
add
arpl
push
push
cmp
sub
cmp
add
add
adc
add
jns
iret
xchg
cld
pop
gs
es
not
jne
pop
add
add
push
add
add
pop
jnp
push
pop
adc
push
sub
pop
add
add
add
pop
test
not
(bad)
xor
pop
in
mov
push
or
xchg
or
test
cli
not
jle
jle
push
add
add
and
xor
xor
aaa
add
add
add
add
add
add
add
push
rcl
nop
loope
outs
pusha
test
not
push
mov
push
test
outs
jg
add
add
add
add
sub
dec
sub
jbe
not
add
add
add
dec
lods
xor
or
stos
add
xchg
nop
add
add
je
je
jo
cmp
das
add
add
ja
ja
add
ins
add
add
ins
add
jae
outs
add
je
add
outs
add
das
add
add
imul
arpl
outs
add
ins
add
outs
add
add
outs
add
add
add
add
jae
jo
popa
add
add
pop
add
add
add
je
ins
add
add
jb
outs
add
jae
imul
cmp
add
add
add
add
jb
outs
add
imul
add
add
xor
add
add
add
add
imul
cmp
add
add
bound
popa
add
add
add
add
add
add
add
push
dec
push
cmp
push
bound
push
pop
test
pop
not
dec
outs
data16
or
jmp
jle
push
add
popa
addr16
outs
pusha
or
outs
(bad)
test
enter
rcl
nop
add
add
inc
dec
lods
xor
or
stos
add
xchg
add
add
popa
add
add
jb
outs
add
add
jae
add
outs
add
ins
add
cmp
add
add
ins
mov
jl
dec
loope
outs
pusha
add
or
add
sti
ins
mov
push
loope
outs
pusha
add
add
or
add
outs
js
add
add
add
add
add
ins
mov
jl
dec
adc
push
add
push
add
add
ins
mov
push
adc
push
and
add
or
add
rcl
nop
mov
pusha
add
add
or
add
mov
add
add
bound
add
add
add
add
bound
nop
cmp
add
add
add
and
popa
add
add
or
add
sti
ins
mov
push
add
add
or
add
aas
xchg
int3
xchg
cli
gs
add
add
push
add
add
ins
mov
ins
stos
mov
(bad)
fnstsw
add
add
add
ins
mov
ins
add
add
push
add
add
outs
add
jne
jo
push
add
outs
add
add
add
or
add
inc
addr16
xchg
shl
push
sbb
add
or
add
iret
imul
es
jo
add
add
add
add
retf
push
test
push
add
add
adc
add
aas
xchg
int3
xchg
cli
gs
sbb
dec
push
or
pop
add
add
sbb
add
push
add
add
add
jb
add
jb
popa
add
add
add
add
add
add
add
add
add
imul
inc
add
add
add
ins
add
outs
add
add
je
add
pop
pop
jbe
popa
push
popa
jb
ins
jo
add
add
jbe
popa
push
popa
jb
jb
add
add
add
outs
add
ins
add
arpl
push
add
add
jbe
popa
inc
popa
jae
dec
bound
add
add
jbe
popa
inc
outs
add
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
add
add
mul
add
add
add
add
add
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
push
bound
outs
add
jbe
popa
inc
jb
push
popa
jb
pop
pop
jbe
popa
inc
jb
inc
outs
jo
add
add
imul
imul
add
sub
add
sbb
add
add
add
add
ins
add
outs
add
add
je
add
pop
pop
jbe
popa
push
cmp
je
xor
add
add
add
add
xchg
int3
xchg
cli
gs
xor
xor
xor
xor
add
add
sbb
add
aas
xchg
int3
xchg
cli
gs
or
pop
or
imul
das
push
test
add
add
or
add
je
add
je
xor
add
adc
add
je
js
je
je
jns
jo
add
add
add
add
add
add
add
add
jo
outs
add
outs
add
add
add
add
add
je
js
je
inc
add
add
add
add
add
je
jns
jo
add
add
add
je
add
add
or
add
inc
add
ins
add
outs
add
add
add
add
add
add
gs
pop
cli
push
sbb
adc
add
jns
iret
xchg
cld
pop
gs
rcl
jne
xchg
out
mov
inc
add
add
add
push
sub
(bad)
not
add
add
add
add
add
(bad)
not
push
sub
add
add
add
add
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
add
add
or
add
jo
popa
add
add
add
add
add
add
nop
jmp
xchg
cli
gs
outs
(bad)
test
inc
push
rcl
jne
xchg
out
mov
inc
add
add
add
add
add
add
or
and
add
add
and
add
or
sbb
add
add
sbb
add
push
add
add
add
sbb
or
add
add
add
or
adc
add
add
adc
add
or
gs
gs
xor
cs
ins
add
add
or
gs
popa
jae
inc
jb
outs
jb
add
add
push
inc
add
inc
add
add
test
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jo
dec
arpl
add
add
adc
inc
add
add
add
nop
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jb
arpl
fs
jae
add
sbb
add
add
pushf
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
outs
popa
fs
imul
add
add
push
add
add
xchg
int3
xchg
hlt
pop
hlt
pop
sub
jp
add
push
inc
add
push
inc
add
add
test
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
inc
jb
gs
imul
sbb
add
add
add
mov
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jne
jb
outs
je
jb
arpl
jae
add
sbb
add
add
rcr
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
push
outs
ja
xor
jb
arpl
jae
add
push
inc
add
push
inc
add
add
int3
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
inc
imul
outs
ja
add
inc
add
inc
add
add
fcomp
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
outs
fs
imul
push
add
add
inc
add
inc
add
add
in
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
jne
ins
inc
ins
ins
outs
arpl
add
adc
add
arpl
outs
add
add
bound
popa
add
add
add
mov
inc
add
push
inc
add
add
lock
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
jne
ins
inc
jb
gs
js
add
mov
inc
add
push
inc
add
add
cld
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
dec
jo
outs
push
jb
arpl
jae
mov
inc
add
inc
add
add
or
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
popa
jo
cs
ins
add
add
gs
outs
fs
gs
imul
js
add
add
lods
push
inc
add
add
adc
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
inc
ins
outs
jae
dec
popa
outs
fs
add
push
inc
add
add
and
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
popa
fs
jb
arpl
jae
gs
outs
jb
add
add
push
inc
add
add
sub
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
outs
push
add
add
mov
inc
add
add
cmp
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
dec
outs
jbe
dec
gs
outs
jb
add
add
push
inc
add
add
inc
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ja
arpl
inc
js
add
inc
add
push
inc
add
add
push
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
ins
xor
add
js
jb
arpl
outs
outs
inc
add
add
ins
push
inc
add
inc
add
add
pop
sbb
mov
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
jb
jns
arpl
add
inc
add
push
inc
add
add
push
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
or
add
add
add
add
add
sub
add
add
add
add
add
add
add
pop
add
add
add
add
ins
popf
pop
push
jg
add
add
cli
not
add
add
add
add
xchg
dec
xchg
push
xchg
js
add
add
add
add
outs
add
outs
add
bound
add
add
add
add
add
lds
add
adc
add
arpl
push
add
push
add
add
add
add
add
xchg
int3
xchg
mov
pop
add
add
adc
add
arpl
outs
add
ins
add
ins
add
ins
add
add
add
add
je
popa
add
imul
add
ins
add
add
add
imul
add
add
push
add
add
add
add
add
sbb
add
push
add
add
add
push
add
popa
add
push
add
add
add
add
add
add
jns
dec
add
je
imul
push
add
add
add
add
add
jns
jae
push
add
add
jb
add
add
push
add
add
add
ins
add
popa
add
push
add
outs
add
add
xor
xor
add
add
add
pop
add
add
add
add
jb
outs
add
imul
jae
add
add
or
add
jnp
push
pop
xchg
jp
push
add
add
push
add
add
and
push
pop
add
or
add
mov
dec
dec
(bad)
pop
add
add
add
add
add
outs
add
ins
add
add
jne
add
add
push
add
add
outs
add
imul
add
add
popa
add
add
add
add
mov
or
add
es
not
mov
pop
add
add
push
add
add
add
imul
popa
add
add
outs
add
add
jns
add
or
add
(bad)
pop
add
xchg
out
mov
add
add
add
push
add
jb
imul
imul
add
imul
push
add
jae
je
add
dec
add
push
add
je
add
add
add
je
data16
ins
add
add
add
jae
jne
bound
data16
ins
add
add
jae
add
add
inc
add
ins
add
je
add
outs
add
add
jb
add
add
or
add
pop
pop
jbe
popa
dec
gs
inc
popa
arpl
popa
jb
add
add
jbe
popa
push
popa
jb
gs
add
add
pop
pop
jbe
popa
inc
outs
jb
popa
arpl
popa
jb
ins
popa
bound
jae
jb
inc
js
jb
jae
imul
bound
cmp
je
xor
add
add
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
inc
outs
outs
ins
push
popa
jb
add
add
gs
call
xor
cdq
cmps
jno
movs
cmp
sahf
sub
dec
test
sbb
into
into
mov
lahf
cs
xor
mov
mov
scas
hlt
call
push
ins
popa
bound
popa
ins
imul
add
add
pop
leave
adc
dec
cmps
and
mov
sub
imul
inc
outs
js
add
add
jge
mov
inc
xchg
jmp
sbb
in
inc
cmp
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
push
dec
inc
dec
push
pop
xor
outs
arpl
add
add
arpl
gs
dec
imul
add
add
add
add
add
add
call
pop
inc
add
add
xchg
sbb
imul
add
bound
outs
je
arpl
inc
outs
outs
je
imul
dec
gs
popa
add
je
je
popa
ins
imul
bound
ins
add
push
push
ins
addr16
outs
ins
outs
jb
add
add
push
lods
xor
or
stos
add
xchg
push
jae
jb
outs
outs
je
outs
ins
add
addr16
fs
imul
je
add
add
push
outs
fs
imul
ins
popa
bound
jae
jb
push
imul
add
add
je
popa
jo
jne
add
adc
inc
add
pop
inc
add
add
js
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
gs
jae
inc
popa
jo
jne
add
adc
inc
cmc
repnz
xlat
xchg
xor
in
adc
inc
add
pop
inc
add
add
test
bound
mov
or
je
jmp
push
mov
call
jmp
add
add
je
gs
popa
add
inc
gs
popa
ins
imul
fs
gs
popa
add
push
jne
outs
dec
gs
popa
add
jb
push
popa
ins
imul
add
outs
inc
imul
popa
jbe
inc
imul
jo
popa
je
add
dec
jne
jo
outs
add
inc
dec
gs
popa
add
add
push
gs
jo
je
imul
fs
arpl
add
movs
add
add
pop
add
imul
pop
add
add
add
add
add
dec
push
mov
pusha
sbb
add
add
add
das
add
add
dec
lods
xor
or
stos
add
xchg
and
add
pop
add
imul
pop
add
add
outs
add
add
add
add
add
add
add
add
add
jae
popa
add
add
add
add
add
add
add
dec
push
mov
pusha
sbb
xor
das
add
add
add
add
add
imul
add
adc
add
ins
add
jae
jae
popa
add
add
add
add
add
popa
add
add
add
add
jns
fld
xor
jns
mov
ftst
xor
adc
jg
cmc
nop
mov
ds
dec
cwde
popf
(bad)
pop
cmp
lods
xor
or
stos
add
xchg
inc
add
add
add
add
add
cmp
add
add
add
imul
xchg
add
add
or
add
add
add
or
push
add
add
push
add
add
add
add
add
iret
imul
dec
outs
pusha
sub
push
in
shl
push
add
pop
(bad)
push
inc
jb
add
add
add
mov
dec
add
add
add
add
and
add
add
add
pop
add
add
add
add
add
mov
add
add
add
mov
add
add
add
(bad)
and
add
push
and
add
add
add
add
add
add
add
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
jbe
popa
dec
outs
inc
jae
jb
add
add
add
add
cmp
add
add
pop
pop
jbe
popa
push
je
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
je
add
adc
add
push
add
data16
add
add
je
add
sbb
add
pop
add
ins
add
add
jbe
add
add
outs
add
add
or
add
outs
data16
add
add
sbb
add
inc
add
add
je
push
add
jb
jae
imul
add
add
adc
add
inc
add
je
outs
add
jo
add
je
add
add
add
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
jne
add
je
dec
add
popa
add
add
add
add
jb
add
jo
outs
add
jae
add
outs
add
add
add
add
add
add
add
add
add
add
push
pop
sub
bound
add
add
add
add
jne
bound
push
pop
mul
xchg
cmp
add
or
add
lea
bound
mov
add
add
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
outs
add
ins
add
cmp
add
add
je
ins
add
add
ins
add
add
add
sbb
add
inc
add
dec
add
add
push
add
add
inc
add
add
add
add
popa
add
jo
ins
add
arpl
popa
add
add
outs
add
add
sub
add
sub
add
ins
add
add
add
arpl
outs
add
add
add
add
retf
push
lds
arpl
jns
jmp
sbb
sub
bound
bound
(bad)
aad
sub
push
out
push
in
fimul
add
popa
addr16
outs
pusha
or
in
repz
loopne
push
xchg
ss
jg
sub
mov
jl
pop
or
dec
add
add
adc
add
jne
jae
add
outs
add
ins
add
add
add
add
add
jae
add
push
add
add
add
pop
not
push
add
gs
xchg
jmp
dec
jnp
push
pop
add
and
sbb
test
or
imul
cmp
nop
cli
push
or
pop
or
test
lahf
xchg
push
push
sbb
xchg
mov
jnp
push
pop
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
push
lds
arpl
jns
dec
cmp
push
bound
nop
call
jne
(bad)
jmp
(bad)
in
jle
push
add
popa
addr16
outs
pusha
or
in
repz
loopne
push
xchg
ss
jg
sub
mov
jl
pop
or
dec
add
add
push
add
add
push
pop
sub
bound
add
cmp
sub
bound
add
add
add
cmp
add
add
jo
add
push
add
cmp
das
add
add
ja
ja
add
data16
jno
data16
add
outs
add
das
add
popa
add
add
add
add
add
outs
add
outs
add
outs
add
add
add
jae
jo
aas
add
outs
add
je
imul
je
popa
add
bound
popa
add
add
add
data16
add
je
je
jo
cmp
das
add
add
ja
ja
add
data16
jno
data16
add
outs
add
das
add
popa
add
add
add
add
add
add
add
jae
jo
aas
add
outs
add
je
imul
je
popa
add
bound
popa
add
add
rol
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
and
jbe
in
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
iretw
adc
pusha
rcl
sub
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
and
ins
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
outs
add
dec
add
ins
add
add
add
add
add
outs
add
and
xor
js
add
push
add
add
and
arpl
bound
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
add
add
inc
add
push
add
push
add
add
dec
add
add
outs
add
and
add
push
add
add
add
add
add
outs
add
and
xor
js
add
sbb
add
sub
and
popa
add
add
jo
je
jb
xor
and
cmp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jb
outs
add
add
jae
and
imul
add
add
push
add
add
add
add
je
jb
and
imul
add
sbb
add
sub
and
popa
add
add
arpl
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
popa
add
push
add
outs
add
add
xor
xor
and
push
add
add
add
add
data16
jne
outs
add
add
add
add
add
and
je
jb
popa
add
and
imul
outs
add
add
outs
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
and
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
popa
inc
imul
outs
jae
jb
arpl
add
adc
add
ins
push
dec
push
sbb
and
hlt
data16
ins
push
dec
push
add
add
add
add
add
jnp
add
add
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jbe
popa
dec
jae
je
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
jns
jae
je
add
jb
outs
add
je
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
bound
jns
je
add
jo
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
popa
inc
outs
outs
ins
push
je
add
add
fiadd
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
data16
add
and
cmp
add
add
add
imul
imul
add
add
add
xchg
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
jbe
popa
dec
outs
jo
je
imul
bound
je
push
popa
jb
outs
jo
add
add
add
add
add
outs
add
add
jae
dec
add
ins
add
inc
add
outs
add
dec
add
outs
add
add
outs
add
and
xor
js
add
sbb
add
and
and
push
add
jb
add
add
inc
add
add
add
add
add
add
add
push
add
outs
add
add
jae
and
cmp
add
add
and
and
arpl
bound
dec
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
and
and
data16
jae
je
popa
add
add
add
add
add
add
and
and
and
and
data16
jae
je
jns
ins
add
and
cmp
add
add
add
and
and
and
and
imul
je
ins
add
jo
and
cmp
add
add
add
add
add
add
add
add
add
outs
add
ins
add
outs
add
add
add
add
add
and
and
and
and
imul
jb
imul
and
cmp
add
add
add
add
add
add
jb
outs
add
dec
add
ins
add
add
add
add
add
outs
add
and
xor
js
add
and
add
and
and
and
and
je
jb
popa
add
and
push
add
outs
add
add
add
add
add
add
add
add
add
add
jns
and
push
add
add
add
add
add
add
add
add
add
add
add
jns
and
jne
arpl
popa
add
add
popa
add
imul
add
add
add
add
add
add
add
add
add
jns
and
jne
imul
cmp
add
add
dec
add
jae
je
inc
add
jb
outs
add
and
cmp
add
add
add
add
add
add
add
push
add
add
add
sub
add
add
popa
add
add
add
add
add
add
outs
add
ins
add
add
add
add
add
add
add
add
dec
add
push
add
ja
add
push
add
outs
add
add
jae
add
add
pop
pop
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
push
gs
bound
jb
jae
add
and
add
push
add
pop
add
push
add
dec
add
inc
add
push
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
jbe
popa
push
je
inc
outs
ins
jo
add
add
jbe
popa
push
dec
xor
add
push
add
add
imul
inc
add
add
add
add
add
add
add
push
test
sub
inc
add
add
add
add
add
add
add
add
add
add
push
dec
push
cmp
push
bound
push
pop
test
pop
not
dec
outs
data16
or
jmp
(bad)
in
jle
ins
mov
add
dec
add
add
or
add
add
pop
call
add
add
add
add
jae
add
push
add
outs
add
imul
add
popa
add
jae
ja
outs
add
add
add
add
add
add
popa
add
jae
ja
outs
add
add
outs
add
data16
jb
ins
add
add
add
add
jae
add
push
add
outs
add
imul
add
imul
outs
add
ins
add
add
add
and
add
jne
jae
add
push
add
outs
add
imul
add
ins
add
imul
sub
add
jne
jae
add
push
add
outs
add
imul
add
popa
add
jae
jo
outs
add
je
add
add
adc
add
arpl
push
add
inc
add
add
add
or
add
dec
add
popa
add
add
add
add
add
add
add
not
push
push
jp
dec
pop
cli
push
add
push
add
add
pop
cli
push
cli
not
push
push
jne
xchg
out
mov
inc
add
add
add
jle
push
lds
cwde
or
jns
add
add
sbb
add
cli
not
pusha
jg
cmps
pop
or
pop
mov
add
add
add
add
or
add
and
call
add
add
add
add
cmp
das
add
add
add
bound
add
add
ins
add
jae
outs
add
je
add
outs
add
das
add
add
bound
add
das
add
popa
add
add
popa
add
add
imul
ja
popa
add
add
popa
add
add
imul
add
imul
add
add
jae
jo
popa
add
add
add
add
cmp
das
add
add
add
bound
add
add
ins
add
jae
outs
add
je
add
outs
add
das
add
add
bound
add
das
add
popa
add
add
popa
add
add
imul
ja
popa
add
add
popa
add
add
imul
add
imul
add
and
jb
add
imul
add
push
add
bound
ins
add
je
add
jae
jo
popa
add
add
add
add
adc
push
add
add
bound
outs
add
add
add
add
add
arpl
push
add
inc
add
add
dec
add
popa
add
add
add
add
jbe
popa
push
popa
jb
outs
fs
outs
popa
fs
data16
add
jl
add
das
add
add
pop
add
sub
das
add
add
and
pop
add
das
add
add
sub
das
add
add
add
add
add
add
add
add
add
das
add
add
dec
add
sub
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
sub
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
sub
das
add
add
js
pop
add
das
add
add
add
add
sub
das
add
add
push
add
sub
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
add
add
add
sub
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
add
add
pop
pop
jbe
popa
inc
jb
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
gs
ja
gs
add
jle
add
das
add
add
add
add
add
das
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
add
mov
add
das
add
add
add
jp
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
cmp
sub
das
add
add
add
add
add
das
add
add
add
cmp
sub
das
add
add
add
add
add
das
add
add
add
xor
sub
das
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
js
add
das
add
add
add
das
add
add
add
cmp
sub
das
add
add
add
cmp
sub
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
sub
das
add
add
add
add
add
das
add
add
add
xor
sub
das
add
add
sub
das
add
add
add
add
add
das
add
add
add
cmp
sub
add
add
pop
pop
jbe
popa
push
je
xor
arpl
add
add
cmp
xor
aaa
add
add
das
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
add
sub
das
add
add
cmp
add
add
add
add
add
add
das
add
add
add
add
add
das
add
add
add
xor
add
add
add
add
das
add
add
add
cmp
sub
das
add
add
add
aaa
add
add
add
jle
add
das
add
add
imul
sub
das
add
add
popa
add
sub
das
add
add
add
add
add
add
add
dec
add
add
das
add
add
add
add
add
das
add
add
add
add
add
add
add
sub
das
add
add
add
add
add
add
add
add
sub
das
add
add
jo
sub
add
je
add
das
add
add
sub
das
add
add
add
add
add
add
add
das
add
add
sub
das
add
add
inc
add
das
add
add
sub
push
add
das
add
add
ins
add
arpl
imul
add
add
add
sub
das
add
add
sub
das
add
add
ins
add
outs
add
sub
das
add
add
add
add
add
add
add
add
add
jae
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
jbe
popa
inc
gs
add
add
int3
xor
sbb
retf
xchg
aaa
dec
test
sbb
gs
call
xor
cdq
iretw
adc
pusha
rcl
mov
add
add
add
or
push
jae
jb
outs
outs
je
outs
ins
xor
sub
add
inc
add
add
add
loope
add
jle
add
cmp
add
add
add
push
jns
bound
add
pop
add
arpl
gs
dec
imul
push
gs
inc
outs
js
add
and
add
push
add
dec
add
add
inc
xor
or
add
sub
add
in
add
and
adc
add
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
push
imul
add
add
daa
push
add
or
bound
and
inc
sub
add
add
add
arpl
xor
add
or
add
add
push
jg
adc
add
add
inc
add
add
or
je
je
gs
popa
addr16
pop
add
arpl
gs
dec
imul
push
gs
inc
outs
js
add
add
add
or
sub
dec
add
add
inc
xor
or
add
data16
add
or
add
inc
xor
add
push
add
add
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
je
je
popa
ins
imul
xor
add
ja
out
add
or
inc
sub
push
add
popa
ins
xor
add
or
iret
sti
iret
mov
add
or
add
push
jge
or
adc
add
add
add
add
addr16
gs
add
add
add
add
add
inc
dec
inc
cmp
popa
or
or
test
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
sub
add
add
or
add
and
add
sbb
mov
inc
add
or
inc
cwde
lock
xchg
push
ds
sub
loop
xchg
push
sbb
add
add
fadd
rol
rol
or
dec
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
call
iret
ret
int3
cmc
iret
sti
iret
mov
add
add
or
imul
imul
dec
add
add
add
add
inc
dec
inc
cmp
popa
or
or
xchg
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
and
add
add
add
sub
add
add
or
add
adc
les
leave
pop
neg
adc
add
add
add
add
arpl
dec
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
call
leave
iret
sar
iret
mov
add
add
or
imul
je
add
add
je
add
dec
inc
cmp
popa
and
sbb
add
add
(bad)
(bad)
out
in
in
in
repz
icebp
in
in
fmul
in
int3
mov
shr
mov
int3
mov
int3
mov
int3
mov
iret
mov
into
mov
int
jmp
nop
repz
mov
test
in
test
jmp
xchg
out
mov
in
cmp
jo
stc
jnp
idiv
hlt
jns
repz
icebp
jns
in
pop
in
pop
clc
xchg
test
and
je
pushf
test
pushf
test
test
push
(bad)
xor
std
xor
cld
xor
cli
xor
clc
xor
div
add
xor
hlt
xor
repz
repnz
lock
out
xor
in
xor
jmp
das
add
das
add
das
add
das
add
cs
cs
sub
fisubr
fisubr
xlat
sub
aam
add
sub
shr
add
sub
cld
aas
adc
aas
adc
aas
adc
ds
ds
cmp
in
cmp
jmp
cmp
in
adc
cmp
fnstsw
pand
pminub
psubusw
(bad)
aaa
(bad)
cmp
loop
adc
cmp
aam
psrlq
psubw
out
push
(bad)
inc
push
not
cmc
push
sub
push
sub
bound
sti
arpl
pop
cmp
outs
dec
jmp
js
(bad)
(bad)
inc
add
add
stc
add
add
ja
sub
add
add
add
xor
test
mov
nop
mov
and
xchg
mov
xor
push
adc
mov
add
ss
xchg
nop
ins
cmp
xor
cmp
xor
cmp
push
pop
sbb
and
aam
retf
jne
cmp
rol
ins
cmp
daa
fadd
sub
test
icebp
pop
or
add
pop
or
sbb
or
or
cs
mov
mov
sbb
xchg
mov
mov
sbb
arpl
dec
inc
xor
mov
and
repnz
es
dec
inc
test
xchg
das
sub
jae
add
sbb
rcr
sub
xor
cmps
mov
xor
call
jmp
scas
pusha
ret
push
push
sub
add
add
add
add
add
add
arpl
dec
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
call
leave
mov
(bad)
mov
sti
iret
mov
add
add
push
add
addr16
fs
add
je
add
dec
inc
cmp
popa
and
and
xchg
add
add
add
(bad)
(bad)
jmp
adc
(bad)
jmp
stc
add
add
add
sub
add
add
add
add
add
test
xchg
adc
fwait
push
pop
pop
jle
adc
mov
push
stos
ss
mov
ins
pop
jb
in
cwde
or
outs
ret
popa
dec
push
jnp
cmps
push
jmp
nop
das
ja
gs
pop
mov
push
test
push
(bad)
fmulp
int
add
cmp
cmp
fadd
rol
rol
or
dec
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
call
int3
in
mov
mov
add
add
pop
add
push
push
add
mov
sti
iret
mov
xor
add
xchg
add
add
or
sbb
pop
add
add
sub
push
add
popa
ins
xor
add
or
into
(bad)
xlat
(bad)
mov
shr
add
add
add
adc
adc
add
add
add
add
pop
add
bound
outs
je
pop
add
add
aaa
add
add
das
add
xlat
(bad)
int3
in
inc
data16
add
add
bound
outs
je
imul
add
iret
add
or
add
push
pop
add
add
add
add
xor
add
xor
add
xor
add
cmp
add
xor
add
and
add
add
add
add
xor
add
add
xor
add
add
xor
add
das
add
xlat
(bad)
mov
mov
adc
ins
popa
bound
jae
jb
inc
js
jb
jae
imul
add
in
(bad)
jmp
inc
add
rol
mov
or
adc
sbb
pop
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
jmp
nop
add
retf
into
int3
in
push
add
in
jmp
mov
int
mov
(bad)
jmp
add
add
add
or
ins
popa
bound
jae
jb
push
imul
mov
enter
(bad)
lods
add
add
add
rol
mov
or
or
sbb
pop
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
jmp
nop
add
retf
into
int3
in
jo
mov
enter
(bad)
lods
mov
loope
fcmove
mov
ret
out
aam
mov
mov
mov
(bad)
sar
mov
mov
mov
mov
mov
mov
mov
aad
sar
lods
enter
leave
mov
mov
in
int
(bad)
lods
mov
mov
retf
int
mov
add
add
pop
add
inc
outs
ins
add
add
add
add
add
add
add
add
pop
add
add
and
mov
add
into
int3
in
add
add
mov
inc
inc
add
add
or
ins
popa
bound
popa
ins
imul
dec
add
add
add
add
add
push
add
add
and
nop
add
retf
into
int3
in
add
add
shl
add
add
or
ins
popa
bound
fs
imul
add
add
add
add
add
add
add
add
nop
add
retf
into
int3
in
add
push
add
ret
iret
fild
inc
xor
or
imul
jb
sbb
pop
add
add
add
add
add
fdivr
loopne
adc
dec
inc
add
add
add
pusha
add
(bad)
fild
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
or
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
push
idiv
cmps
js
imul
dec
sbb
adc
fwait
mov
dec
repnz
(bad)
inc
push
lods
cld
pop
loop
sub
lock
pop
pop
pop
pop
xchg
push
and
mov
inc
ret
adc
sti
lock
lock
rcr
jl
into
(bad)
idiv
popa
std
imul
dec
shl
retf
lea
std
cmps
es
outs
pop
ficomp
mov
scas
ins
shl
(bad)
inc
cmp
sbb
ret
mov
fisubr
inc
cmc
aas
(bad)
fld
and
loope
or
lgdtd
rcl
leave
stos
add
add
add
add
add
add
je
add
add
and
add
push
pop
add
add
inc
mov
add
push
or
ins
outs
outs
inc
imul
call
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
dec
add
add
inc
xor
or
add
dec
add
add
add
xchg
stc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
inc
cmps
add
add
or
ins
outs
outs
inc
imul
call
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
add
add
inc
xor
or
add
dec
add
add
add
xchg
stc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
inc
jb
test
sub
add
add
rol
add
cmp
add
inc
xchg
add
add
or
push
imul
inc
outs
js
add
pop
add
arpl
gs
dec
imul
push
gs
inc
outs
js
add
add
push
sbb
verw
dec
add
add
inc
xor
or
add
loope
add
scas
or
add
inc
xor
add
push
add
add
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
dec
xor
xor
dec
and
xchg
or
push
pop
test
inc
mov
pop
pop
sbb
push
mov
shr
cdq
iretw
adc
pusha
rcl
outs
add
cmp
or
data16
push
gs
jb
push
add
add
inc
and
ror
ror
imul
ret
ror
ror
test
add
add
ficom
add
add
push
add
add
add
push
add
xor
add
add
add
add
add
and
add
add
add
sldt
adc
add
add
or
push
pop
add
xor
add
add
and
test
add
push
sbb
add
add
and
test
add
mov
adc
add
add
and
push
push
add
sub
add
xor
add
pusha
add
add
add
add
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
inc
and
inc
and
inc
loopne
add
inc
pusha
add
loopne
add
inc
add
add
add
add
(bad)
inc
and
add
pusha
add
pusha
mov
add
loopne
add
add
pusha
mov
rol
inc
loopne
add
add
loopne
add
add
add
and
and
inc
add
inc
add
and
and
pusha
add
pusha
add
and
mov
inc
pusha
add
and
add
inc
add
inc
add
pusha
add
mov
add
and
add
and
rol
add
shl
mov
mov
loopne
loopne
loopne
rol
add
loopne
add
loopne
add
loopne
add
jmp
add
mov
inc
shl
add
clc
lock
fdivr
add
call
inc
sar
clc
add
clc
inc
cwde
rcr
add
clc
lock
(bad)
clc
add
(bad)
clc
add
enter
clc
lock
mov
add
mov
enter
rol
add
clc
add
sbb
fcom
mov
rcr
add
lock
add
enter
rol
lock
clc
add
mov
clc
add
clc
clc
add
(bad)
inc
inc
sbb
xor
add
ror
cwde
ror
mov
loopne
add
lock
add
(bad)
inc
inc
mov
add
mov
add
rol
mov
rol
call
mov
loopne
test
loopne
mov
clc
call
add
lock
mov
add
loopne
add
lock
add
clc
clc
add
mov
inc
enter
inc
jo
add
mov
add
shr
add
mov
pop
mov
mov
add
rol
mov
enter
enter
rol
test
rol
cwde
enter
call
fadd
mov
fadd
mov
lock
add
loopne
test
loopne
enter
or
lock
call
clc
add
enter
call
clc
add
clc
clc
add
clc
clc
add
sar
add
lock
or
inc
mov
inc
clc
(bad)
inc
adc
cmp
or
add
pusha
push
add
js
add
nop
add
adc
or
add
push
mov
add
test
pop
mov
add
mov
push
cwde
mov
jo
mov
add
add
js
add
cmp
or
mov
add
mov
add
mov
add
js
add
nop
rol
nop
rol
mov
add
mov
rol
loopne
add
js
add
mov
add
mov
add
mov
add
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
or
rol
add
rol
add
rol
cwde
rcl
mov
mov
add
nop
fadd
add
fadd
and
fadd
xor
fadd
cwde
rcr
adc
fadd
rcl
add
fcomp
add
fcomp
add
fcomp
add
fcomp
add
call
add
add
arpl
add
add
add
add
add
add
and
add
fimul
scas
add
loope
aad
data16
add
add
jecxz
jle
(bad)
(bad)
retf
xchg
fldenv
(bad)
fcomip
mul
stc
add
out
dec
adc
enter
add
mov
imul
out
add
cmc
adc
inc
jmp
push
push
retf
sbb
jecxz
fcomp
mov
pop
pop
pop
imul
xlat
and
inc
rcr
ja
add
add
add
inc
push
dec
fstp
enter
pop
pop
dec
dec
dec
mov
mov
pop
je
add
add
rol
add
add
push
iret
test
leave
xchg
xchg
xchg
xchg
fcomip
clc
mov
pop
and
(bad)
jns
out
out
loopne
inc
add
add
add
loop
pop
js
push
inc
leave
loopne
cmc
inc
mov
xor
mov
inc
out
add
(bad)
hlt
aad
adc
loopne
add
add
add
and
adc
cmc
pusha
mov
mov
inc
test
dec
dec
dec
mov
movs
leave
mov
add
retf
and
ins
pusha
xchg
pop
add
cwde
adc
add
push
aad
jns
hlt
out
fucomp
ins
fild
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
mov
shl
inc
movs
push
sahf
repz
mov
cld
add
and
loope
jns
push
dec
sub
dec
dec
dec
dec
dec
dec
dec
mov
lods
dec
mov
addr16
mov
push
add
add
(bad)
(bad)
test
or
dec
dec
dec
pop
pop
pop
test
jmp
out
push
add
add
add
jbe
(bad)
fadd
or
dec
dec
dec
or
pop
dec
jmp
push
push
inc
cmp
push
add
add
add
add
cmp
dec
or
dec
dec
dec
dec
dec
or
or
fisttp
pop
add
pop
add
ret
ins
adc
dec
mov
dec
pusha
pusha
pusha
pusha
dec
dec
dec
mov
mov
jmp
inc
movs
ficomp
add
add
popf
cmc
(bad)
(bad)
cmp
cmps
pusha
push
pusha
pusha
pusha
pusha
pusha
dec
push
dec
mov
push
pop
icebp
pop
aad
(bad)
inc
jle
(bad)
(bad)
out
mov
mov
push
push
push
push
push
pusha
clc
push
dec
or
lea
mov
add
(bad)
mov
mov
cmp
add
add
js
mov
lods
pop
pop
lea
add
add
(bad)
mov
dec
add
add
push
push
push
push
add
out
mov
mov
mov
pop
lods
push
imul
jle
mov
dec
dec
pusha
pusha
scas
add
ins
ins
ins
push
add
js
push
push
clc
dec
pop
pop
lea
mov
mov
add
add
add
shr
push
add
adc
adc
push
pusha
push
add
or
push
(bad)
fcmovnb
call
add
add
add
add
xlat
cmp
mov
add
push
mov
adc
jns
ins
add
pusha
pusha
lods
mov
push
(bad)
in
sbb
add
add
mov
ins
jns
jns
push
js
push
add
or
pop
xchg
mov
add
xchg
sbb
push
js
adc
adc
mov
cmps
mov
push
or
mov
xchg
add
lock
xchg
cmc
cmps
add
add
ins
push
add
mov
mov
push
mov
jp
mov
add
add
mov
cmc
cmps
lods
pusha
pusha
pusha
js
mov
mov
cli
shl
xlat
lahf
sbb
xchg
bound
nop
nop
mov
popa
xchg
xchg
outs
popa
jp
bound
push
push
push
rcr
add
add
push
dec
push
push
pop
jne
xchg
jnp
sbb
popa
outs
xchg
xchg
pop
jae
push
push
push
push
pop
rcl
cld
sahf
lahf
push
pop
dec
push
push
push
push
test
push
cmps
test
pop
pop
push
push
push
push
rcl
pop
jo
add
push
dec
push
push
dec
push
push
push
push
push
push
push
push
push
push
push
pop
push
push
push
push
push
push
xchg
pop
jae
add
in
push
pop
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
pop
dec
push
push
push
push
push
push
pop
xchg
sti
jno
add
add
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
jae
pop
jl
add
add
test
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
pop
pop
push
push
push
push
pop
(bad)
(bad)
pop
jbe
add
add
push
dec
pop
pop
pop
dec
dec
dec
dec
push
push
dec
pop
push
push
push
push
pop
popa
pop
bound
add
push
push
test
sti
jne
test
dec
dec
push
test
pop
push
(bad)
rol
addr16
in
outs
pop
(bad)
xchg
(bad)
pop
pop
test
push
push
pop
test
add
jg
jge
jge
jno
pop
push
pop
pop
push
pop
xchg
je
add
add
add
xlat
jo
pop
jno
jno
jnp
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
or
add
add
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
add
loopne
add
mov
add
mov
add
and
and
inc
add
add
and
add
rol
loopne
add
pusha
inc
and
add
add
add
and
inc
shl
add
and
loopne
inc
add
inc
pusha
add
pusha
add
inc
pusha
add
add
add
pusha
add
mov
mov
add
inc
mov
add
pusha
mov
add
and
mov
rol
and
loopne
and
loopne
and
add
loopne
add
jmp
add
loopne
add
inc
loopne
inc
add
inc
cwde
rcr
add
mov
add
clc
clc
add
(bad)
clc
add
clc
inc
rcr
add
(bad)
clc
add
(bad)
inc
nop
enter
call
mov
add
add
clc
lock
clc
lock
sar
add
inc
inc
js
add
rol
loopne
add
rcr
add
clc
clc
add
enter
js
add
mov
or
enter
enter
enter
rol
call
call
fadd
test
loopne
mov
cwde
call
add
mov
add
loopne
add
clc
clc
add
(bad)
inc
clc
(bad)
inc
xor
mov
add
test
push
cwde
test
fcom
test
push
js
add
mov
add
cwde
rol
cwde
rol
mov
rol
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
mov
rol
or
add
loopne
add
mov
fadd
inc
mov
add
enter
enter
fcomp
add
call
loopne
or
loopne
test
loopne
add
call
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
(bad)
call
add
clc
lock
clc
lock
fdivr
add
call
clc
add
clc
clc
add
clc
clc
add
(bad)
inc
test
add
adc
and
sbb
and
or
add
inc
dec
add
mov
adc
add
pop
pop
add
pop
add
pusha
push
add
dec
jo
sub
add
push
jo
sbb
add
push
jo
or
add
jo
add
add
push
js
sbb
mov
inc
mov
and
add
js
add
sbb
pop
sbb
push
mov
add
cwde
mov
add
mov
test
dec
sub
cmp
test
cmp
test
push
nop
test
pusha
nop
test
push
nop
test
js
test
pop
cwde
test
pusha
cwde
test
jo
test
add
mov
or
mov
dec
xor
jo
mov
cmp
mov
push
cwde
mov
js
mov
mov
mov
add
cmp
inc
mov
add
nop
mov
add
mov
add
mov
add
test
add
mov
add
mov
add
mov
add
sar
add
add
or
rol
mov
add
cwde
rol
cwde
rol
mov
rol
test
add
add
dec
pop
pop
xchg
add
pop
cmp
add
mov
adc
inc
pop
add
add
outs
jnp
add
pusha
pusha
pusha
cmc
add
cld
xor
add
add
add
add
call
push
dec
dec
dec
bound
add
aaa
call
add
je
mov
dec
test
jbe
test
popa
jb
xor
ja
add
ins
add
xchg
xchg
mov
loop
popa
popa
mov
fdivr
push
add
sbb
add
add
jae
mov
test
cmp
cmp
cmp
jbe
xor
pop
mov
hlt
dec
add
add
aas
xchg
test
cmp
cmp
xor
jecxz
dec
call
add
add
add
add
dec
dec
or
cmp
push
popa
or
pop
pop
adc
add
add
add
in
add
dec
dec
dec
dec
or
popf
outs
js
test
fwait
add
add
add
add
xchg
xchg
aas
aas
aas
dec
aas
aas
arpl
xor
add
stos
mov
aas
aas
aas
icebp
icebp
add
dec
test
add
xchg
mov
inc
inc
aas
add
cmp
bound
add
add
add
xchg
inc
pcmpgtw
add
dec
bound
loope
push
fnsave
mov
aas
aas
aas
cmp
dec
(bad)
fnstenv
add
retf
lods
stos
cmps
mov
call
push
lea
xchg
mov
(bad)
xchg
add
inc
xchg
movs
cmps
mov
arpl
dec
ins
imul
inc
inc
(bad)
fbld
or
mov
adc
dec
dec
cmp
add
mov
cmp
dec
ret
dec
push
push
push
mov
cmp
inc
inc
jp
add
jp
mov
mov
pop
mov
cmp
dec
jnp
inc
cmp
ds
cmp
add
add
ds
cmp
cmp
cmp
inc
cmp
inc
cmp
jle
cmp
cmp
cmp
cmp
inc
cmp
cmp
add
dec
inc
inc
cmp
pop
inc
inc
ds
dec
cmp
inc
cmp
add
add
dec
cmp
dec
inc
cmp
push
inc
inc
cmp
add
add
xchg
mov
dec
inc
dec
inc
push
jle
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
(bad)
inc
mov
mov
rol
mov
retf
leave
rol
cmp
add
loop
add
(bad)
add
out
add
mov
add
mov
add
(bad)
cld
add
std
stc
add
cli
test
(bad)
sti
add
(bad)
sti
add
ror
jbe
rol
in
add
mov
mov
push
lods
mov
add
mov
add
mov
scas
add
mov
add
loope
add
pushf
stos
add
mov
add
call
jb
mov
add
loopne
add
jmp
pop
div
add
(bad)
inc
adc
inc
add
clc
add
(bad)
in
add
cld
add
mov
int3
add
stos
rol
sub
add
mov
add
sti
cld
add
stc
std
add
mov
mov
add
mov
add
cdq
loopne
dec
xchg
rol
(bad)
adc
jecxz
add
repnz
in
cld
add
jmp
add
inc
add
jmp
add
jecxz
add
jmp
xor
mov
add
mov
cld
add
fscale
add
(bad)
inc
add
test
test
rol
dec
lods
rol
push
mov
add
rol
add
fadd
add
out
add
shr
add
sahf
rol
add
stos
loop
add
add
mov
fild
xor
(bad)
fld
fwait
test
stos
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
add
iret
iret
add
fld
and
ret
rol
icebp
out
add
rol
add
in
add
in
rol
loop
(bad)
add
add
add
jne
ja
jns
jnp
jge
jg
add
addr16
ins
outs
outs
jo
jb
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
add
dec
dec
dec
dec
dec
dec
push
push
push
push
push
add
add
inc
inc
inc
inc
inc
inc
add
add
add
xor
xor
ss
cmp
cmp
cmp
add
add
es
sub
sub
sub
cs
xor
add
add
sbb
push
pop
and
and
and
add
add
add
add
adc
push
pop
sbb
sbb
add
add
add
add
or
adc
add
add
add
add
add
add
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
add
add
add
add
add
add
and
jnp
ret
fwait
mov
repz
cld
add
cld
std
add
cli
stc
add
jmp
cli
add
(bad)
std
add
add
add
(bad)
inc
add
add
mov
rol
(bad)
retf
into
add
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
add
add
loope
clc
add
(bad)
loope
aad
in
add
(bad)
add
(bad)
inc
cmc
icebp
call
add
std
(bad)
cmp
ffreep
call
iret
test
jmp
loop
push
bnd
adc
cli
repz
add
add
add
add
(bad)
cli
add
clc
test
in
add
(bad)
cld
add
cld
test
(bad)
sti
add
(bad)
cli
add
(bad)
clc
add
mov
add
repnz
hlt
cmc
dec
(bad)
bnd
call
clc
js
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
add
in
fild
std
(bad)
inc
(bad)
(bad)
(bad)
js
loopne
js
int
js
xlat
out
mov
repnz
js
stc
jmp
div
loop
lock
div
in
xchg
out
in
call
jmp
fidivr
jmp
jecxz
iret
in
out
cli
jne
lock
jp
hlt
repnz
div
add
jmp
add
(bad)
(bad)
inc
add
add
repz
loop
ins
pushf
mov
add
mov
stos
mov
add
into
std
inc
mov
(bad)
(bad)
cmp
mov
jmp
test
enter
xlat
aad
iret
aam
xor
xchg
mov
push
mov
push
mov
jmp
mov
(bad)
cmp
mov
popa
xchg
mov
popf
mov
aam
jmp
out
(bad)
(bad)
out
add
cmc
jmp
(bad)
push
mov
push
rcr
sub
lods
retf
rcr
retf
clc
cmp
(bad)
call
(bad)
call
(bad)
(bad)
call
add
add
(bad)
(bad)
inc
out
in
in
out
add
icebp
repz
dec
mov
sub
add
mov
mov
ins
fdiv
(bad)
pop
out
sti
stc
or
in
add
clc
add
mov
and
mov
adc
inc
imul
add
idiv
add
stc
cli
add
cli
add
iret
inc
gs
ret
(bad)
(bad)
(bad)
jmp
call
bnd
call
mov
(bad)
cld
and
(bad)
cli
add
jmp
pusha
pushf
(bad)
jge
ret
in
(bad)
in
call
jmp
push
cli
clc
repnz
out
jecxz
hlt
lock
add
pop
add
mov
inc
mov
retf
mov
jmp
in
(bad)
call
in
dec
loop
add
loopne
fwait
mov
loop
outs
movs
inc
test
inc
mov
(bad)
cld
add
stc
inc
mov
clc
inc
mov
clc
inc
movs
cli
inc
stos
cld
inc
mov
sti
pop
mov
sar
call
push
test
into
sti
cdq
(bad)
(bad)
(bad)
xor
(bad)
inc
mov
push
shl
std
or
jmp
xchg
cld
loope
mov
div
in
loope
in
call
fiadd
add
add
repnz
inc
(bad)
(bad)
inc
mov
fild
ret
arpl
stc
mov
(bad)
sti
pop
mov
fdivrp
add
(bad)
inc
fcos
inc
xchg
(bad)
std
add
inc
test
inc
mov
(bad)
inc
(bad)
inc
into
(bad)
inc
sar
inc
aad
inc
fdivr
inc
sar
dec
ret
(bad)
inc
lods
(bad)
inc
mov
stc
inc
mov
(bad)
(bad)
(bad)
cld
jmp
jge
ficomp
loope
daa
in
cli
std
add
retf
inc
(bad)
(bad)
(bad)
xor
(bad)
dec
mov
cld
sbb
jmp
(bad)
scas
(bad)
in
(bad)
mov
ffree
add
mov
mov
pop
push
xchg
mov
std
addr16
(bad)
inc
out
call
mov
aad
add
in
inc
je
(bad)
adc
call
repz
push
enter
mov
fsin
or
mov
add
mov
adc
sar
mov
in
(bad)
(bad)
inc
mov
inc
pushf
cli
sti
push
mov
(bad)
clc
out
fcom
js
stos
add
mov
add
jecxz
dec
lea
jmp
(bad)
(bad)
dec
fsub
inc
scas
iret
dec
(bad)
inc
mov
movs
(bad)
fcmovu
fdivr
(bad)
mov
aad
scas
stos
aad
stos
mov
add
add
(bad)
inc
mov
out
mov
int3
mov
mov
in
repnz
and
(bad)
dec
(bad)
inc
js
dec
mov
sar
mov
jecxz
add
add
inc
cmp
add
fdivr
add
mov
inc
pop
xchg
call
mov
inc
(bad)
(bad)
cld
sbb
(bad)
ficom
xchg
cmps
sub
mov
inc
js
std
call
inc
ret
es
mov
dec
cli
inc
(bad)
cli
or
fst
test
xlat
push
out
(bad)
and
aad
cli
add
add
lods
int3
loopne
mov
shl
je
mov
clc
stc
push
in
cmc
dec
mov
call
out
idiv
add
ja
inc
fsubr
dec
stos
loopne
or
(bad)
add
sti
inc
sar
inc
sar
inc
sar
inc
sar
inc
sar
inc
ret
add
mov
call
movs
(bad)
fcos
stc
pop
mov
rol
int3
aam
scas
inc
test
sti
add
idiv
cmp
cld
push
(bad)
(bad)
inc
in
hlt
std
inc
nop
lods
push
aad
pop
fsub
in
mov
(bad)
loop
ret
add
add
add
jle
ret
jne
xchg
ret
cli
(bad)
clc
daa
stc
(bad)
inc
lock
inc
mov
fdivr
or
int3
call
(bad)
(bad)
call
popf
(bad)
inc
mov
(bad)
inc
sar
inc
sar
inc
iret
cld
inc
iret
std
inc
int3
cld
inc
int
inc
leave
std
inc
leave
cld
inc
into
(bad)
inc
into
(bad)
inc
stos
in
add
stos
inc
cmps
(bad)
inc
int
cld
test
cmc
fild
ror
add
fdivr
dec
mov
(bad)
ds
inc
jmp
inc
fucomp
inc
rcr
(bad)
cld
cli
cmc
add
loopne
add
in
push
fcmovbe
mov
leave
rcl
out
cld
add
mov
(bad)
(bad)
sub
push
add
(bad)
inc
repz
inc
out
inc
popf
(bad)
add
idiv
or
jns
inc
(bad)
inc
sar
inc
sar
inc
sar
inc
xlat
(bad)
inc
xlat
std
inc
xlat
(bad)
inc
(bad)
std
inc
aam
inc
aam
inc
sar
inc
leave
cld
inc
(bad)
sti
inc
sar
inc
retf
add
popf
(bad)
(bad)
adc
repnz
into
mov
ret
(bad)
(bad)
adc
add
inc
scas
icebp
inc
(bad)
inc
mov
popf
jmp
jmp
(bad)
aad
add
call
loopne
stc
clc
repz
add
add
fsubr
sti
add
jmp
std
and
mov
cld
or
sti
dec
mov
stos
dec
xchg
(bad)
jg
inc
(bad)
inc
(bad)
std
inc
fdivr
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
(bad)
inc
xlat
std
inc
sar
inc
iret
std
inc
(bad)
cld
inc
int3
(bad)
inc
mov
test
(bad)
and
mov
push
(bad)
iret
dec
mov
inc
sar
add
mov
mov
cld
out
call
mov
repnz
fistp
aad
cmps
ret
mov
fcmovbe
mov
add
add
retf
add
retf
(bad)
inc
sti
test
(bad)
jmp
rcr
out
outs
test
dec
jno
inc
xchg
inc
mov
inc
mov
clc
inc
(bad)
inc
(bad)
inc
(bad)
inc
loop
inc
in
inc
in
inc
out
inc
out
inc
out
inc
out
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
iret
(bad)
inc
(bad)
cld
inc
xlat
(bad)
dec
(bad)
iret
dec
xchg
sar
sar
std
add
cld
add
idiv
add
(bad)
(bad)
adc
(bad)
inc
(bad)
loope
cs
(bad)
jmp
(bad)
push
in
(bad)
(bad)
(bad)
(bad)
(bad)
call
ficom
loope
lds
in
retf
add
jmp
add
add
fwait
ret
(bad)
(bad)
std
add
(bad)
rol
mov
js
mov
sbb
scas
call
(bad)
cli
xchg
repz
(bad)
cmp
(bad)
inc
(bad)
cld
inc
(bad)
inc
loop
inc
in
inc
out
inc
jmp
(bad)
inc
jmp
inc
jmp
inc
jmp
add
std
inc
loop
inc
(bad)
inc
fdivr
inc
(bad)
(bad)
inc
into
cld
inc
fdivr
inc
mov
dec
pop
xchg
call
(bad)
lock
pushf
int
add
loope
dec
(bad)
(bad)
inc
(bad)
std
dec
xchg
mov
cld
imul
jmp
repz
jmp
(bad)
jne
ffreep
(bad)
stc
stc
bnd
(bad)
dec
(bad)
(bad)
inc
add
add
cli
stc
add
(bad)
inc
jbe
mov
mov
cdq
add
(bad)
(bad)
cld
idiv
stc
call
(bad)
inc
repz
inc
call
sti
inc
in
(bad)
inc
cmc
(bad)
inc
out
(bad)
inc
out
std
inc
out
(bad)
inc
out
(bad)
inc
out
(bad)
inc
in
std
inc
jmp
add
sti
inc
loope
inc
(bad)
inc
fdivr
dec
shr
pop
jge
inc
popf
dec
(bad)
jmp
add
(bad)
inc
xchg
(bad)
inc
mov
add
mov
mov
out
aam
out
fnstsw
(bad)
jmp
(bad)
std
jno
div
add
div
add
add
add
jecxz
add
add
add
(bad)
dec
mov
fdivr
enter
(bad)
jmp
adc
push
cmc
cli
inc
(bad)
(bad)
inc
cmc
sti
call
aam
inc
cli
inc
repz
inc
repnz
inc
repnz
inc
icebp
(bad)
inc
icebp
(bad)
inc
out
std
inc
in
(bad)
inc
clc
(bad)
inc
out
inc
fdivrp
inc
loop
dec
mov
aad
add
idiv
add
(bad)
inc
mov
inc
mov
out
inc
mov
inc
jmp
inc
(bad)
mov
call
in
mov
hlt
in
ss
imul
add
(bad)
inc
std
(bad)
sti
add
out
add
std
in
or
cmp
out
(bad)
(bad)
scas
sti
std
dec
mov
cmp
or
pop
pop
dec
daa
sub
and
dec
idiv
add
(bad)
inc
clc
cld
inc
cmc
cld
inc
cmc
std
inc
cmc
std
inc
idiv
inc
lock
dec
enter
idiv
inc
in
(bad)
inc
fdivrp
inc
fdivr
inc
jecxz
inc
into
(bad)
inc
ret
add
cli
inc
mov
inc
lods
(bad)
inc
mov
stc
add
popf
mov
jae
lods
add
add
add
(bad)
inc
jl
rol
mov
int
inc
lea
inc
(bad)
(bad)
call
hlt
(bad)
dec
repz
inc
movs
lods
call
or
inc
std
(bad)
inc
sti
std
inc
std
(bad)
inc
cld
(bad)
inc
cld
(bad)
inc
idiv
inc
(bad)
(bad)
dec
fcmovu
dec
sbb
dec
sti
dec
jmp
dec
int3
jmp
add
(bad)
std
inc
sar
add
sti
inc
movs
idiv
add
call
scas
push
sub
jmp
add
repz
(bad)
sti
add
add
mov
rcl
inc
mov
(bad)
scas
(bad)
(bad)
dec
in
inc
in
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
std
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
std
(bad)
inc
(bad)
(bad)
inc
cld
(bad)
inc
idiv
inc
cli
cld
dec
mov
call
pop
and
call
cmp
or
repnz
int
inc
ret
add
sti
inc
lods
stc
inc
lods
(bad)
stc
or
sar
pop
xchg
mov
dec
and
ret
add
fninit
add
fsub
add
mov
add
hlt
retf
xchg
mov
call
out
sti
inc
jmp
add
cli
inc
icebp
stc
inc
cmc
stc
inc
cld
std
dec
(bad)
(bad)
call
std
(bad)
call
std
std
call
std
std
call
std
std
inc
(bad)
(bad)
inc
cld
(bad)
inc
stc
(bad)
inc
(bad)
(bad)
dec
cmc
sti
call
test
cdq
call
sahf
cmps
dec
into
(bad)
add
(bad)
inc
retf
add
std
inc
mov
cli
inc
lods
stc
inc
scas
std
std
add
xchg
stos
jecxz
int
cmps
movs
ret
shl
call
add
jecxz
add
add
add
mov
mov
dec
sbb
mov
(bad)
inc
out
inc
jmp
inc
icebp
sti
inc
clc
cld
inc
(bad)
(bad)
inc
std
(bad)
call
std
cld
jmp
std
jmp
(bad)
cld
call
cld
(bad)
call
std
(bad)
inc
cld
inc
repnz
inc
hlt
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
loop
inc
sar
inc
int3
(bad)
inc
(bad)
add
inc
test
(bad)
inc
jns
jmp
xchg
inc
(bad)
mov
jb
iret
fld
xchg
mov
add
fucomip
test
add
add
(bad)
call
lods
ret
sbb
mov
(bad)
jmp
std
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
cli
(bad)
inc
std
(bad)
call
std
(bad)
cmp
std
std
jmp
cld
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
hlt
clc
inc
out
sti
inc
jmp
cli
inc
(bad)
inc
(bad)
inc
sar
inc
int3
(bad)
inc
(bad)
add
std
inc
mov
dec
push
aam
pop
cdq
lods
stc
pop
cdq
lods
fcom
retf
in
cmc
test
jecxz
cli
add
fsub
add
fsubp
add
gs
inc
popf
mov
dec
xchg
movs
call
bound
or
dec
cmp
call
aas
inc
call
cli
sti
jmp
std
std
jmp
std
std
jmp
std
std
dec
(bad)
(bad)
dec
out
inc
(bad)
(bad)
inc
std
(bad)
inc
icebp
std
inc
in
inc
loopne
inc
fdivr
inc
sar
inc
retf
add
(bad)
inc
leave
(bad)
inc
mov
call
mov
call
(bad)
mov
(bad)
cmp
ror
test
stc
add
(bad)
sti
add
leave
ror
(bad)
mov
mov
cmp
outs
(bad)
sbb
and
or
inc
inc
dec
cmp
dec
lea
dec
cli
jmp
cli
sti
jmp
cld
cld
jmp
std
cld
call
cld
inc
(bad)
(bad)
call
fdivr
or
sbb
call
(bad)
or
(bad)
inc
std
(bad)
inc
hlt
(bad)
inc
(bad)
inc
fdivr
inc
sar
inc
hlt
call
mov
xchg
(bad)
cmp
xchg
inc
mov
(bad)
jle
mov
jmp
repnz
add
test
add
std
cli
add
rcr
add
retf
sar
stos
fsub
cli
inc
mov
cmp
ret
call
loop
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
dec
and
dec
add
or
or
dec
aas
aas
dec
jns
inc
idiv
adc
movs
jmp
outs
test
inc
sbb
jne
ret
(bad)
cmp
jg
(bad)
movs
leave
aad
jmp
cmc
test
sti
inc
std
(bad)
sti
add
mov
add
scas
rol
out
lock
mov
mov
(bad)
aas
sbb
sub
xchg
jmp
fwait
stos
jmp
scas
mov
call
loopne
or
lock
repz
out
icebp
inc
icebp
cmc
call
lock
call
test
dec
pusha
imul
adc
jmp
inc
push
(bad)
cmp
(bad)
cmp
(bad)
dec
mov
inc
aad
push
mov
stc
push
mov
dec
push
pushf
scas
add
in
sti
add
(bad)
sti
add
mov
mov
mov
leave
sar
loop
(bad)
stc
xlat
(bad)
clc
jmp
test
dec
stos
(bad)
aas
jle
(bad)
cmp
ins
mov
aas
jno
push
jbe
push
jl
push
xchg
push
jg
push
adc
cmp
sbb
xchg
dec
jmp
inc
aam
call
int3
sar
outs
mov
call
lods
mov
pop
cwde
mov
mov
add
inc
retf
add
fsub
addr16
(bad)
sar
retf
div
cli
int3
hlt
icebp
(bad)
(bad)
std
idiv
aad
idiv
ret
jmp
leave
call
mov
dec
mov
(bad)
cmp
jg
(bad)
cmp
(bad)
cmp
cdq
(bad)
cmp
aas
sbb
jmp
mov
call
rcl
call
sar
xchg
int
dec
lods
mov
cli
je
mov
int3
fcmovnu
push
retf
add
add
add
(bad)
inc
rcr
jecxz
call
ret
iret
call
fdivr
cld
std
enter
int3
hlt
repnz
sar
cmc
(bad)
fdivr
cli
call
(bad)
cli
call
div
(bad)
mov
(bad)
jmp
iret
xlat
call
rcr
call
rcr
jmp
in
dec
hlt
hlt
jmp
into
aam
xchg
into
aam
nop
int3
sar
nop
int3
sar
mov
sar
cdq
rcr
push
mov
inc
scas
ret
(bad)
call
add
add
in
repnz
add
add
cli
stc
add
mov
add
ins
cmps
mov
retf
repz
cld
sar
hlt
std
retf
hlt
repnz
cmc
repnz
hlt
icebp
dec
hlt
icebp
dec
div
call
sti
idiv
aad
idiv
xlat
(bad)
stc
(bad)
(bad)
cli
(bad)
(bad)
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
call
std
stc
call
cli
idiv
aam
idiv
enter
(bad)
retf
sar
(bad)
retf
sar
xchg
int
call
retf
sar
xchg
rcl
call
mov
xchg
int
jl
leave
sti
outs
cmps
mov
mov
xlat
fiadd
(bad)
(bad)
sti
add
add
add
(bad)
xchg
xchg
mov
retf
sti
(bad)
sti
stc
leave
repz
dec
cmc
repnz
div
dec
cmc
repnz
cmc
repnz
hlt
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
repz
dec
div
dec
cmc
hlt
call
retf
xchg
int
dec
iret
aam
mov
sar
pop
pushf
mov
sahf
xlat
(bad)
ja
ret
popf
scas
movs
push
xchg
cmps
add
lods
add
(bad)
cld
add
mov
add
(bad)
dec
jno
mov
mov
(bad)
(bad)
std
(bad)
repnz
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
div
dec
div
dec
div
dec
div
dec
cmc
repnz
div
dec
cmc
hlt
call
retf
xchg
int
dec
rcl
(bad)
jge
leave
dec
cmps
dec
stos
mov
scas
xchg
mov
add
(bad)
sti
add
repnz
jmp
hlt
jnp
mov
out
xlat
std
clc
dec
repz
dec
div
dec
cmc
repnz
div
dec
div
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repz
div
dec
cmc
repnz
div
dec
repnz
call
retf
sar
xchg
int3
sar
nop
int3
sar
xchg
rcl
jmp
mov
(bad)
push
mov
(bad)
rcr
in
rcl
add
repz
add
add
add
test
sub
add
mov
movs
mov
aad
clc
clc
sar
hlt
dec
hlt
icebp
call
clc
cmc
dec
div
dec
repnz
repz
dec
repz
dec
div
call
clc
hlt
dec
div
dec
cmc
repnz
cmc
repnz
hlt
icebp
dec
div
inc
out
out
dec
int3
sar
(bad)
int3
sar
xchg
rcl
dec
jle
(bad)
gs
(bad)
jp
(bad)
std
dec
xchg
cmps
icebp
fwait
ror
sub
cwde
mov
retf
mov
add
test
dec
div
stc
sar
clc
cli
mov
fcmovu
cli
lahf
fcomp
std
popf
(bad)
(bad)
lahf
xlat
fdivr
test
in
inc
icebp
icebp
call
clc
hlt
call
div
call
div
call
cld
stc
push
(bad)
iret
call
iret
aam
mov
sar
push
cwde
lods
push
mov
std
pop
mov
(bad)
(bad)
inc
add
add
(bad)
add
jmp
add
cld
std
add
(bad)
sbb
retf
ror
xchg
ror
mov
mov
arpl
call
lods
inc
movs
call
mov
fs
mov
call
loopne
(bad)
mov
jmp
xlat
call
int3
sar
xchg
int
dec
ret
int
movs
fucom
std
add
test
dec
popf
mov
rol
std
(bad)
sti
add
jmp
add
loop
out
out
push
mov
fdivr
ror
cwde
mov
(bad)
inc
test
mov
push
mov
push
sar
mov
inc
sar
xchg
iret
(bad)
call
iret
(bad)
call
mov
mov
xchg
mov
les
nop
mov
out
mov
xlat
loopne
mov
fisttp
jmp
retf
(bad)
add
(bad)
call
(bad)
call
(bad)
(bad)
call
sti
stc
cli
xchg
mov
mov
mov
cld
push
mov
push
(bad)
jns
(bad)
mov
call
mov
dec
(bad)
cmps
cld
cwde
mov
jmp
cli
sti
push
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
inc
mov
add
in
sub
dec
mov
(bad)
push
add
(bad)
inc
(bad)
push
add
imul
add
scas
add
mov
xor
mov
in
int3
aam
fcmove
(bad)
(bad)
(bad)
push
icebp
fild
(bad)
stc
jmp
add
div
add
add
jmp
fld
lock
repnz
loope
std
(bad)
sti
add
es
xchg
in
add
enter
mov
aam
rcl
xor
out
or
out
lock
pop
mov
fcom
shr
bound
iret
shr
aam
push
jmp
hlt
les
cmc
out
jecxz
ror
mov
repnz
in
lods
rcr
mov
jecxz
ds
inc
jns
test
add
std
mov
les
add
add
lods
(bad)
fld
pop
xchg
mov
add
mov
dec
idiv
add
into
inc
pop
push
dec
mov
inc
(bad)
(bad)
add
inc
xchg
jmp
jns
call
jmp
add
jecxz
pushf
push
test
cld
xor
icebp
cld
add
out
add
mov
mov
(bad)
(bad)
test
test
(bad)
(bad)
cld
add
test
ret
stos
retf
fild
in
cli
pop
(bad)
sti
add
sar
mov
inc
stos
sti
inc
mov
(bad)
sti
add
(bad)
cld
add
(bad)
sti
add
sti
add
into
idiv
(bad)
dec
lea
(bad)
sub
jmp
cld
dec
in
cmc
cli
add
cwde
mov
(bad)
mov
in
cwde
out
retf
idiv
add
(bad)
fild
je
rol
fucomp
push
stc
cld
sti
add
out
pop
jnp
dec
xchg
sar
add
fdivr
or
ret
inc
cwde
(bad)
dec
stos
sar
movsx
inc
mov
cli
push
mov
(bad)
(bad)
cld
fldcw
jbe
jbe
lods
in
cmp
sti
cld
call
fucomip
jmp
(bad)
(bad)
add
ret
mov
mov
aad
test
pop
lahf
mov
loopne
xchg
(bad)
fdiv
jl
repnz
push
fsubr
dec
cld
inc
cwde
retf
inc
retf
call
jecxz
adc
mov
inc
mov
inc
scas
call
inc
cmp
or
push
jge
adc
cmp
or
mov
std
std
add
idiv
pop
mov
repz
loope
add
fidivr
inc
xor
jo
loopne
cmp
push
add
fdivrp
pop
mov
fdivr
adc
jmp
iret
(bad)
inc
aad
inc
fdivr
inc
aam
inc
sar
inc
sar
inc
sar
inc
shl
push
xchg
inc
pushf
retf
(bad)
fdivrp
mov
jmp
test
adc
inc
out
stc
and
enter
mov
mov
jecxz
(bad)
fwait
test
into
fiadd
(bad)
and
iret
ficom
retf
out
add
(bad)
std
pop
mov
sar
or
jmp
aad
inc
fdivr
inc
fscale
inc
xlat
std
inc
aad
inc
sar
inc
int3
(bad)
inc
(bad)
(bad)
inc
(bad)
retf
mov
fdivr
scas
ret
(bad)
in
and
(bad)
mov
mov
push
jmp
(bad)
retf
in
dec
div
(bad)
(bad)
fld
cmps
(bad)
fld
(bad)
in
add
out
add
loop
pop
xchg
mov
scas
sub
inc
test
inc
fdivrp
inc
fdivr
inc
jecxz
inc
in
inc
in
inc
in
inc
loopne
inc
(bad)
inc
(bad)
cld
inc
retf
add
(bad)
dec
xchg
leave
inc
mov
inc
test
inc
in
(bad)
inc
cmc
jmp
mov
std
loope
retf
push
jmp
les
jnp
pop
or
shr
add
(bad)
inc
xor
out
sub
inc
(bad)
inc
loop
inc
out
(bad)
inc
out
(bad)
inc
jmp
inc
in
(bad)
inc
in
std
inc
call
cld
inc
(bad)
inc
aad
inc
aad
inc
mov
dec
mov
(bad)
inc
shr
sti
jb
mov
lahf
lock
ins
jmp
int
cmc
imul
pop
rcl
retf
add
call
add
rcl
add
out
add
in
add
loopne
cmp
stos
sar
ret
std
(bad)
std
or
inc
xchg
mov
inc
(bad)
dec
loopne
inc
repz
inc
icebp
cld
inc
icebp
(bad)
inc
in
std
inc
cmc
(bad)
inc
icebp
(bad)
inc
(bad)
inc
mov
into
inc
cmc
inc
mov
fdivr
add
mov
aam
jecxz
(bad)
out
out
in
repz
(bad)
(bad)
inc
mov
mov
cmp
scas
aam
mov
fucomip
inc
pop
pusha
call
push
pop
dec
int
inc
(bad)
(bad)
inc
idiv
inc
cmc
sti
inc
sti
(bad)
inc
mov
mov
inc
loope
inc
(bad)
add
(bad)
inc
mov
cli
or
fdivr
jae
cmps
pop
jne
cmps
add
add
ins
add
add
add
ret
add
mov
cmp
(bad)
(bad)
stos
std
(bad)
std
inc
out
(bad)
inc
cld
(bad)
dec
out
inc
sti
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sti
cld
inc
cld
(bad)
inc
iret
sar
cmovl
adc
call
outs
dec
(bad)
cmps
inc
aam
inc
mov
clc
inc
stos
std
stc
push
xchg
fdivr
pop
mov
add
mov
je
rol
jo
add
(bad)
sti
add
add
mov
aas
xor
(bad)
cld
ds
inc
out
inc
idiv
inc
std
(bad)
dec
cld
std
call
std
(bad)
call
cld
std
call
(bad)
(bad)
inc
sti
std
inc
(bad)
(bad)
dec
repnz
call
scas
mov
adc
jmp
inc
sar
add
(bad)
std
add
mov
xchg
mov
(bad)
push
ret
fucom
add
add
add
ret
(bad)
fnsave
xchg
mov
jbe
idiv
push
stc
(bad)
inc
cli
(bad)
inc
clc
cli
call
(bad)
(bad)
jmp
std
cld
call
std
std
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
repz
inc
idiv
inc
lock
inc
(bad)
inc
retf
add
sti
inc
mov
idiv
and
scas
std
sub
(bad)
sbb
iret
fld
cmc
(bad)
inc
lods
int
add
xchg
movs
jmp
addr16
add
inc
inc
call
add
sub
clc
push
sti
sti
call
std
dec
in
out
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
lock
inc
fdivr
inc
sar
inc
retf
(bad)
dec
jne
jmp
cld
jnp
sar
xchg
stos
jb
jl
add
movs
add
add
add
(bad)
clc
add
loop
adc
(bad)
shl
outs
lods
mov
cld
and
(bad)
adc
mov
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
loop
dec
inc
inc
inc
lods
inc
fdivr
dec
lods
iret
jmp
test
jmp
dec
stos
std
addr16
mov
mov
loopne
mov
loope
add
add
add
(bad)
sti
add
xchg
add
cmps
add
lods
xor
out
push
cdq
scas
jmp
nop
mov
jmp
mov
call
int3
aam
push
aam
call
aam
call
mov
jno
adc
push
call
inc
push
push
movs
(bad)
aas
jnp
jmp
stos
inc
enter
mov
(bad)
ins
test
(bad)
jbe
int
cmp
lds
std
(bad)
sti
add
out
add
fsub
cmp
(bad)
sti
sti
(bad)
out
in
(bad)
popf
into
(bad)
(bad)
jns
mov
inc
xchg
(bad)
cmp
(bad)
cmp
push
jne
push
mov
call
jmp
mov
call
xlat
(bad)
jle
(bad)
cli
cmp
mov
add
add
add
ret
mov
add
outs
add
in
call
sti
idiv
aad
idiv
aad
cli
dec
div
push
fsub
jmp
xlat
(bad)
mov
(bad)
fdivr
mov
out
call
iret
aam
mov
sar
nop
int3
sar
jno
mov
(bad)
sahf
ret
ror
add
add
add
add
(bad)
inc
bound
les
pop
sbb
repnz
idiv
leave
repz
retf
dec
div
call
cli
idiv
aad
idiv
xlat
std
clc
call
std
clc
call
std
clc
call
sti
idiv
sar
idiv
retf
call
retf
sar
xchg
iret
aam
test
int3
(bad)
je
ret
mov
lods
addr16
jge
add
mov
repnz
add
retf
add
fcmovu
call
(bad)
stc
stc
leave
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
repz
dec
repz
dec
repz
dec
repz
cmc
repnz
repnz
call
sar
xchg
rcl
(bad)
jge
(bad)
jmp
mov
cmp
push
movs
ror
mov
add
add
out
add
int3
add
mov
mov
out
fdivr
stc
stc
sar
cmc
cld
sar
cmc
cld
iret
div
call
stc
cmc
(bad)
sar
cmc
dec
div
dec
hlt
icebp
dec
div
inc
lock
call
retf
sar
xchg
rcl
(bad)
pop
call
ins
test
out
(bad)
fisubr
lock
repz
sti
stc
add
add
add
loop
pop
fwait
lods
add
test
push
nop
cmps
adc
mov
push
rcr
call
into
aad
movs
(bad)
(bad)
mov
cmc
repz
cld
clc
(bad)
mov
enter
rcl
(bad)
jns
(bad)
mov
cld
add
mov
adc
dec
jns
cld
std
std
add
(bad)
loope
push
xchg
cmps
add
test
add
rcr
mov
jl
mov
call
scas
(bad)
arpl
sar
(bad)
iret
call
retf
sar
(bad)
int3
sar
xchg
into
aam
nop
int3
sar
nop
int3
sar
outs
test
mov
add
div
add
mov
mov
ret
clc
stc
add
(bad)
dec
hlt
stc
sti
(bad)
in
lock
call
mov
mov
jno
mov
inc
ret
push
fwait
scas
call
std
inc
lock
add
in
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
jmp
leave
aad
add
jmp
add
rcl
(bad)
push
fcmovbe
retf
inc
repz
ins
clc
in
rcl
loop
(bad)
xchg
(bad)
aad
cs
loop
add
(bad)
add
(bad)
inc
jp
mov
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
rol
iret
iret
lea
(bad)
and
ret
ror
icebp
out
mov
mov
mov
pop
fs
inc
shr
sti
push
sahf
sar
add
stos
loop
add
(bad)
and
mov
fcomi
xor
(bad)
(bad)
fwait
test
stos
nop
cdq
mov
lds
int3
in
add
in
add
cld
sti
add
std
inc
(bad)
(bad)
inc
enter
test
shl
dec
lods
shr
push
mov
inc
rol
je
fadd
fs
fwait
ret
mov
(bad)
(bad)
adc
jecxz
add
repnz
in
cld
inc
jmp
add
(bad)
inc
popf
fdivr
add
int
jmp
retf
jmp
xor
fld
push
stos
shr
out
clc
dec
mov
inc
sti
cld
inc
stc
std
inc
mov
mov
cld
add
loopne
mov
ja
test
test
add
xchg
mov
inc
pushf
mov
jnp
into
loopne
add
jmp
pop
div
jmp
(bad)
(bad)
call
(bad)
inc
repnz
dec
(bad)
in
add
cld
inc
mov
int3
cld
xchg
mov
add
mov
add
mov
jne
pop
mov
call
loope
inc
pushf
stos
dec
mov
(bad)
cmp
mov
jb
mov
add
mov
scas
int
add
mov
pop
mov
in
std
jle
enter
mov
push
lods
mov
jmp
mov
(bad)
xchg
enter
mov
shl
mov
add
iret
xlat
add
lods
mov
(bad)
fdivrp
cld
(bad)
(bad)
stc
(bad)
fsqrt
idiv
fdivr
sti
dec
(bad)
sti
call
ror
jbe
shl
ret
rcr
movs
mov
rol
pushf
ror
cmps
mov
les
jle
mov
jg
loop
imul
(bad)
(bad)
mov
out
call
mov
push
mov
add
div
add
add
add
icebp
call
add
rcr
addr16
mov
shr
mov
retf
leave
sar
cmp
push
imul
cld
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
ins
xor
add
add
mov
add
loop
add
jmp
add
add
add
add
add
je
add
add
and
mov
add
je
add
sub
pop
(bad)
inc
je
add
add
add
ins
ins
popa
outs
xor
add
sbb
sub
push
sub
loope
mov
rcl
in
(bad)
ror
stos
mov
ret
rol
add
add
add
add
mov
add
into
int3
in
and
int3
loope
mov
mov
in
(bad)
ror
stc
rcl
mov
(bad)
int3
(bad)
rol
repnz
cli
dec
inc
add
add
add
add
or
push
imul
add
add
mov
aaa
adc
add
sbb
sbb
add
and
inc
sub
add
add
add
ins
ins
popa
outs
fs
add
in
aad
shl
adc
adc
add
add
add
add
add
ins
ins
popa
outs
xor
add
or
mov
enter
(bad)
div
or
rcl
add
add
add
add
add
or
arpl
inc
imul
or
mov
fdivr
or
adc
add
add
add
add
add
or
inc
outs
ins
ins
popa
outs
xor
add
or
mov
ror
test
add
add
push
add
add
add
or
add
push
push
fs
jae
add
add
add
ja
push
add
sbb
inc
test
add
je
imul
add
inc
outs
ins
arpl
imul
push
imul
cmp
sbb
sub
mov
inc
xor
or
add
jecxz
add
adc
or
add
push
add
add
and
add
add
int
add
add
add
adc
add
jns
add
fsubrp
mov
push
into
jns
add
and
add
add
add
push
or
add
add
add
add
add
repnz
and
add
add
add
jae
add
sldt
add
add
add
les
(bad)
add
add
add
add
or
ins
popa
bound
jns
outs
jne
je
add
or
rcl
retf
ror
idiv
xor
adc
add
add
(bad)
inc
xchg
add
add
push
add
gs
add
add
mov
ror
mul
mov
mov
test
jmp
mov
out
rol
repnz
cli
dec
inc
or
mov
rcl
in
(bad)
ror
stos
mov
ret
shl
mov
mov
in
(bad)
ror
stc
rcl
mov
(bad)
int3
(bad)
rol
repnz
cli
dec
inc
add
add
add
ins
sbb
add
add
add
or
add
gs
xor
add
fcom
mov
mov
js
push
push
mov
adc
add
and
or
push
imul
add
add
mov
aaa
adc
push
add
add
inc
add
inc
sub
add
or
fs
gs
jb
push
add
shl
retf
test
add
push
add
and
inc
sbb
add
push
add
je
add
add
push
pop
add
push
add
adc
add
add
add
je
add
add
push
jmp
adc
inc
sub
add
adc
add
popa
ins
xor
add
or
aad
mov
lock
mov
daa
push
adc
add
add
add
adc
add
add
arpl
add
add
add
ja
inc
or
adc
add
add
bound
and
inc
and
add
add
arpl
add
add
add
add
add
add
adc
inc
add
add
add
push
add
ins
bound
add
add
add
jg
sub
or
adc
inc
sub
add
adc
add
fs
jae
add
or
mov
enter
(bad)
div
or
rcl
add
add
add
add
add
fs
inc
push
push
add
in
rol
not
shl
scas
rol
add
adc
adc
add
add
add
add
add
push
add
popa
ins
xor
add
adc
retf
ror
not
mov
jmp
lods
ret
mov
mov
sldt
aas
or
add
or
inc
xor
add
pop
push
add
arpl
add
std
ret
hlt
int3
aam
cmps
leave
int3
mov
rol
mov
add
add
sub
inc
add
add
or
je
je
popa
addr16
popa
jae
add
add
add
add
push
add
add
xor
adc
add
add
nop
pop
add
add
into
int3
in
add
add
add
or
je
je
popa
addr16
imul
cmp
ja
push
add
add
xor
adc
add
add
pop
add
inc
outs
ja
xor
call
add
inc
outs
ins
inc
je
xor
push
jo
outs
ja
add
loopne
cmp
inc
inc
ud2
add
push
add
add
inc
xor
or
add
ret
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fild
add
add
or
add
add
add
xor
add
out
adc
cmp
add
inc
lea
add
cs
add
inc
outs
ja
xor
call
add
inc
outs
ins
inc
je
xor
push
jo
outs
ja
add
mov
add
add
or
sub
push
add
add
inc
xor
or
add
ret
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fild
add
add
or
add
add
add
mov
out
adc
cmp
add
inc
xor
or
ins
popa
bound
ins
ins
push
popa
add
add
add
std
aam
retf
ror
div
mov
add
in
add
add
daa
add
(bad)
inc
xor
add
sbb
ins
popa
bound
ins
ins
inc
outs
jne
je
add
or
rcl
retf
ror
idiv
xor
pop
rol
add
(bad)
inc
xor
add
sbb
add
gs
xor
add
add
sub
add
ja
inc
adc
add
nop
add
call
in
add
das
add
add
fs
imul
je
add
or
mov
fdivr
or
adc
add
add
add
add
add
or
dec
imul
xor
call
dec
push
inc
outs
ins
arpl
imul
push
imul
mov
push
movhps
sub
fild
add
and
adc
add
add
xor
add
add
dec
or
add
push
add
add
and
add
add
int
add
add
add
add
pop
or
add
in
inc
add
fsubrp
mov
clc
sar
add
and
add
add
add
enter
pop
add
add
add
add
ret
mov
and
add
add
add
in
add
or
add
or
add
aam
iret
ffreep
jmp
add
add
add
add
add
or
add
mov
(bad)
int3
mov
(bad)
mov
inc
sub
add
push
push
add
gs
xor
add
push
add
loopne
lock
add
add
inc
adc
add
add
add
add
pop
push
add
gs
xor
add
or
retf
stc
aam
mov
mov
add
rol
mov
adc
add
call
add
add
add
and
add
gs
xor
add
or
mov
retf
add
rol
mov
adc
add
call
add
add
retf
add
add
or
push
popa
bound
jb
jo
add
adc
dec
push
inc
outs
ins
arpl
imul
je
imul
add
sbb
push
syscall
add
mov
add
and
adc
add
add
xor
add
add
sar
add
push
add
add
inc
mov
add
add
add
add
add
ja
pop
add
int
add
add
add
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
add
push
push
mov
sbb
and
add
add
add
add
add
add
jo
mov
sbb
and
add
fsubrp
mov
add
xor
inc
fiadd
add
xor
add
bound
outs
ja
gs
add
adc
outs
arpl
inc
je
cs
bound
outs
ja
gs
add
and
dec
ja
(bad)
add
pushf
add
add
add
sbb
add
sbb
add
dec
add
add
add
add
rcl
jae
iret
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
add
inc
add
add
add
add
add
add
and
add
inc
js
add
add
add
lock
add
add
add
sbb
add
and
inc
sub
add
add
addr16
js
add
add
add
lock
add
add
add
sbb
add
and
inc
sub
add
add
addr16
js
add
add
add
lock
add
add
add
sbb
add
and
inc
sub
add
add
addr16
js
add
add
add
inc
lock
add
add
sbb
add
and
inc
add
and
add
outs
jne
popa
imul
or
ins
outs
jne
popa
imul
and
add
and
add
outs
jne
gs
gs
add
add
add
mov
and
and
or
inc
add
add
jne
ins
gs
jb
imul
add
in
aad
shl
add
add
add
add
outs
jne
jo
imul
sub
add
add
verw
outs
jne
popa
push
imul
outs
add
add
retf
ror
test
test
shl
int3
(bad)
shl
shl
add
add
add
add
or
ins
outs
jne
gs
push
add
add
scas
rol
ret
mov
(bad)
int3
add
(bad)
inc
sub
add
sub
add
outs
jne
jne
push
adc
adc
mov
mov
retf
stc
rcl
mov
(bad)
int3
mov
(bad)
mov
inc
add
add
add
or
ins
outs
jne
jae
imul
add
add
outs
jne
jae
imul
add
add
add
or
inc
jae
imul
je
add
add
leave
mov
add
sldt
jae
jae
inc
ins
gs
jb
imul
add
in
aad
shl
add
dec
xor
sub
sbb
jns
xchg
push
inc
sbb
sbb
call
ins
inc
cmps
test
ds
pop
pop
xor
cdq
iretw
adc
pusha
rcl
iret
data16
sub
add
add
add
ins
push
outs
fs
gs
or
mov
(bad)
ret
add
arpl
add
inc
add
add
ficom
add
add
push
add
add
add
push
add
xor
add
add
add
add
add
and
add
add
add
sldt
adc
add
add
or
push
pop
add
xor
add
add
and
test
add
push
sbb
add
add
and
test
add
mov
adc
add
add
and
push
push
add
sub
add
xor
add
pusha
add
add
add
add
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
inc
and
inc
and
inc
loopne
add
inc
pusha
add
loopne
add
inc
add
add
add
add
(bad)
inc
and
add
pusha
add
pusha
mov
add
loopne
add
add
pusha
mov
rol
inc
loopne
add
add
loopne
add
add
add
and
and
inc
add
inc
add
and
and
pusha
add
pusha
add
and
mov
inc
pusha
add
and
add
inc
add
inc
add
pusha
add
mov
add
and
add
and
rol
add
shl
mov
mov
loopne
loopne
loopne
rol
add
loopne
add
loopne
add
loopne
add
jmp
add
mov
inc
shl
add
clc
lock
fdivr
add
call
inc
sar
clc
add
clc
inc
cwde
rcr
add
clc
lock
(bad)
clc
add
(bad)
clc
add
enter
clc
lock
mov
add
mov
enter
rol
add
clc
add
sbb
fcom
mov
rcr
add
lock
add
enter
rol
lock
clc
add
mov
clc
add
clc
clc
add
(bad)
inc
inc
sbb
xor
add
ror
cwde
ror
mov
loopne
add
lock
add
(bad)
inc
inc
mov
add
mov
add
rol
mov
rol
call
mov
loopne
test
loopne
mov
clc
call
add
lock
mov
add
loopne
add
lock
add
clc
clc
add
mov
inc
enter
inc
jo
add
mov
add
shr
add
mov
pop
mov
mov
add
rol
mov
enter
enter
rol
test
rol
cwde
enter
call
fadd
mov
fadd
mov
lock
add
loopne
test
loopne
enter
or
lock
call
clc
add
enter
call
clc
add
clc
clc
add
clc
clc
add
sar
add
lock
or
inc
mov
inc
clc
(bad)
inc
adc
cmp
or
add
pusha
push
add
js
add
nop
add
adc
or
add
push
mov
add
test
pop
mov
add
mov
push
cwde
mov
jo
mov
add
add
js
add
cmp
or
mov
add
mov
add
mov
add
js
add
nop
rol
nop
rol
mov
add
mov
rol
loopne
add
js
add
mov
add
mov
add
mov
add
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
or
rol
add
rol
add
rol
cwde
rcl
mov
mov
add
nop
fadd
add
fadd
and
fadd
xor
fadd
cwde
rcr
adc
fadd
rcl
add
fcomp
add
fcomp
add
fcomp
add
fcomp
add
call
add
add
arpl
add
add
add
add
add
add
and
add
fimul
scas
add
loope
aad
data16
add
add
jecxz
jle
(bad)
(bad)
retf
xchg
fldenv
(bad)
fcomip
mul
stc
add
out
dec
adc
enter
add
mov
imul
out
add
cmc
adc
inc
jmp
push
push
retf
sbb
jecxz
fcomp
mov
pop
pop
pop
imul
xlat
and
inc
rcr
ja
add
add
add
inc
push
dec
fstp
enter
pop
pop
dec
dec
dec
mov
mov
pop
je
add
add
rol
add
add
push
iret
test
leave
xchg
xchg
xchg
xchg
fcomip
clc
mov
pop
and
(bad)
jns
out
out
loopne
inc
add
add
add
loop
pop
js
push
inc
leave
loopne
cmc
inc
mov
xor
mov
inc
out
add
(bad)
hlt
aad
adc
loopne
add
add
add
and
adc
cmc
pusha
mov
mov
inc
test
dec
dec
dec
mov
movs
leave
mov
add
retf
and
ins
pusha
xchg
pop
add
cwde
adc
add
push
aad
jns
hlt
out
fucomp
ins
fild
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
mov
shl
inc
movs
push
sahf
repz
mov
cld
add
and
loope
jns
push
dec
sub
dec
dec
dec
dec
dec
dec
dec
mov
lods
dec
mov
addr16
mov
push
add
add
(bad)
(bad)
test
or
dec
dec
dec
pop
pop
pop
test
jmp
out
push
add
add
add
jbe
(bad)
fadd
or
dec
dec
dec
or
pop
dec
jmp
push
push
inc
cmp
push
add
add
add
add
cmp
dec
or
dec
dec
dec
dec
dec
or
or
fisttp
pop
add
pop
add
ret
ins
adc
dec
mov
dec
pusha
pusha
pusha
pusha
dec
dec
dec
mov
mov
jmp
inc
movs
ficomp
add
add
popf
cmc
(bad)
(bad)
cmp
cmps
pusha
push
pusha
pusha
pusha
pusha
pusha
dec
push
dec
mov
push
pop
icebp
pop
aad
(bad)
inc
jle
(bad)
(bad)
out
mov
mov
push
push
push
push
push
pusha
clc
push
dec
or
lea
mov
add
(bad)
mov
mov
cmp
add
add
js
mov
lods
pop
pop
lea
add
add
(bad)
mov
dec
add
add
push
push
push
push
add
out
mov
mov
mov
pop
lods
push
imul
jle
mov
dec
dec
pusha
pusha
scas
add
ins
ins
ins
push
add
js
push
push
clc
dec
pop
pop
lea
mov
mov
add
add
add
shr
push
add
adc
adc
push
pusha
push
add
or
push
(bad)
fcmovnb
call
add
add
add
add
xlat
cmp
mov
add
push
mov
adc
jns
ins
add
pusha
pusha
lods
mov
push
(bad)
in
sbb
add
add
mov
ins
jns
jns
push
js
push
add
or
pop
xchg
mov
add
xchg
sbb
push
js
adc
adc
mov
cmps
mov
push
or
mov
xchg
add
lock
xchg
cmc
cmps
add
add
ins
push
add
mov
mov
push
mov
jp
mov
add
add
mov
cmc
cmps
lods
pusha
pusha
pusha
js
mov
mov
cli
shl
xlat
lahf
sbb
xchg
bound
nop
nop
mov
popa
xchg
xchg
outs
popa
jp
bound
push
push
push
rcr
add
add
push
dec
push
push
pop
jne
xchg
jnp
sbb
popa
outs
xchg
xchg
pop
jae
push
push
push
push
pop
rcl
cld
sahf
lahf
push
pop
dec
push
push
push
push
test
push
cmps
test
pop
pop
push
push
push
push
rcl
pop
jo
add
push
dec
push
push
dec
push
push
push
push
push
push
push
push
push
push
push
pop
push
push
push
push
push
push
xchg
pop
jae
add
in
push
pop
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
pop
dec
push
push
push
push
push
push
pop
xchg
sti
jno
add
add
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
jae
pop
jl
add
add
test
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
pop
pop
push
push
push
push
pop
(bad)
(bad)
pop
jbe
add
add
push
dec
pop
pop
pop
dec
dec
dec
dec
push
push
dec
pop
push
push
push
push
pop
popa
pop
bound
add
push
push
test
sti
jne
test
dec
dec
push
test
pop
push
(bad)
rol
addr16
in
outs
pop
(bad)
xchg
(bad)
pop
pop
test
push
push
pop
test
add
jg
jge
jge
jno
pop
push
pop
pop
push
pop
xchg
je
add
add
add
xlat
jo
pop
jno
jno
jnp
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
or
add
add
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
add
loopne
add
mov
add
mov
add
and
and
inc
add
add
and
add
rol
loopne
add
pusha
inc
and
add
add
add
and
inc
shl
add
and
loopne
inc
add
inc
pusha
add
pusha
add
inc
pusha
add
add
add
pusha
add
mov
mov
add
inc
mov
add
pusha
mov
add
and
mov
rol
and
loopne
and
loopne
and
add
loopne
add
jmp
add
loopne
add
inc
loopne
inc
add
inc
cwde
rcr
add
mov
add
clc
clc
add
(bad)
clc
add
clc
inc
rcr
add
(bad)
clc
add
(bad)
inc
nop
enter
call
mov
add
add
clc
lock
clc
lock
sar
add
inc
inc
js
add
rol
loopne
add
rcr
add
clc
clc
add
enter
js
add
mov
or
enter
enter
enter
rol
call
call
fadd
test
loopne
mov
cwde
call
add
mov
add
loopne
add
clc
clc
add
(bad)
inc
clc
(bad)
inc
xor
mov
add
test
push
cwde
test
fcom
test
push
js
add
mov
add
cwde
rol
cwde
rol
mov
rol
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
mov
rol
or
add
loopne
add
mov
fadd
inc
mov
add
enter
enter
fcomp
add
call
loopne
or
loopne
test
loopne
add
call
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
(bad)
call
add
clc
lock
clc
lock
fdivr
add
call
clc
add
clc
clc
add
clc
clc
add
(bad)
inc
test
add
adc
and
sbb
and
or
add
inc
dec
add
mov
adc
add
pop
pop
add
pop
add
pusha
push
add
dec
jo
sub
add
push
jo
sbb
add
push
jo
or
add
jo
add
add
push
js
sbb
mov
inc
mov
and
add
js
add
sbb
pop
sbb
push
mov
add
cwde
mov
add
mov
test
dec
sub
cmp
test
cmp
test
push
nop
test
pusha
nop
test
push
nop
test
js
test
pop
cwde
test
pusha
cwde
test
jo
test
add
mov
or
mov
dec
xor
jo
mov
cmp
mov
push
cwde
mov
js
mov
mov
mov
add
cmp
inc
mov
add
nop
mov
add
mov
add
mov
add
test
add
mov
add
mov
add
mov
add
sar
add
add
or
rol
mov
add
cwde
rol
cwde
rol
mov
rol
test
add
add
dec
pop
pop
xchg
add
pop
cmp
add
mov
adc
inc
pop
add
add
outs
jnp
add
pusha
pusha
pusha
cmc
add
cld
xor
add
add
add
add
call
push
dec
dec
dec
bound
add
aaa
call
add
je
mov
dec
test
jbe
test
popa
jb
xor
ja
add
ins
add
xchg
xchg
mov
loop
popa
popa
mov
fdivr
push
add
sbb
add
add
jae
mov
test
cmp
cmp
cmp
jbe
xor
pop
mov
hlt
dec
add
add
aas
xchg
test
cmp
cmp
xor
jecxz
dec
call
add
add
add
add
dec
dec
or
cmp
push
popa
or
pop
pop
adc
add
add
add
in
add
dec
dec
dec
dec
or
popf
outs
js
test
fwait
add
add
add
add
xchg
xchg
aas
aas
aas
dec
aas
aas
arpl
xor
add
stos
mov
aas
aas
aas
icebp
icebp
add
dec
test
add
xchg
mov
inc
inc
aas
add
cmp
bound
add
add
add
xchg
inc
pcmpgtw
add
dec
bound
loope
push
fnsave
mov
aas
aas
aas
cmp
dec
(bad)
fnstenv
add
retf
lods
stos
cmps
mov
call
push
lea
xchg
mov
(bad)
xchg
add
inc
xchg
movs
cmps
mov
arpl
dec
ins
imul
inc
inc
(bad)
fbld
or
mov
adc
dec
dec
cmp
add
mov
cmp
dec
ret
dec
push
push
push
mov
cmp
inc
inc
jp
add
jp
mov
mov
pop
mov
cmp
dec
jnp
inc
cmp
ds
cmp
add
add
ds
cmp
cmp
cmp
inc
cmp
inc
cmp
jle
cmp
cmp
cmp
cmp
inc
cmp
cmp
add
dec
inc
inc
cmp
pop
inc
inc
ds
dec
cmp
inc
cmp
add
add
dec
cmp
dec
inc
cmp
push
inc
inc
cmp
add
add
xchg
mov
dec
inc
dec
inc
push
jle
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
(bad)
inc
mov
mov
rol
mov
retf
leave
rol
cmp
add
loop
add
(bad)
add
out
add
mov
add
mov
add
(bad)
cld
add
std
stc
add
cli
test
(bad)
sti
add
(bad)
sti
add
ror
jbe
rol
in
add
mov
mov
push
lods
mov
add
mov
add
mov
scas
add
mov
add
loope
add
pushf
stos
add
mov
add
call
jb
mov
add
loopne
add
jmp
pop
div
add
(bad)
inc
adc
inc
add
clc
add
(bad)
in
add
cld
add
mov
int3
add
stos
rol
sub
add
mov
add
sti
cld
add
stc
std
add
mov
mov
add
mov
add
cdq
loopne
dec
xchg
rol
(bad)
adc
jecxz
add
repnz
in
cld
add
jmp
add
inc
add
jmp
add
jecxz
add
jmp
xor
mov
add
mov
cld
add
fscale
add
(bad)
inc
add
test
test
rol
dec
lods
rol
push
mov
add
rol
add
fadd
add
out
add
shr
add
sahf
rol
add
stos
loop
add
add
mov
fild
xor
(bad)
fld
fwait
test
stos
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
add
iret
iret
add
fld
and
ret
rol
icebp
out
add
rol
add
in
add
in
rol
loop
(bad)
add
add
add
jne
ja
jns
jnp
jge
jg
add
addr16
ins
outs
outs
jo
jb
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
add
dec
dec
dec
dec
dec
dec
push
push
push
push
push
add
add
inc
inc
inc
inc
inc
inc
add
add
add
xor
xor
ss
cmp
cmp
cmp
add
add
es
sub
sub
sub
cs
xor
add
add
sbb
push
pop
and
and
and
add
add
add
add
adc
push
pop
sbb
sbb
add
add
add
add
or
adc
add
add
add
add
add
add
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
add
add
add
add
add
add
and
jnp
ret
fwait
mov
repz
cld
add
cld
std
add
cli
stc
add
jmp
cli
add
(bad)
std
add
add
add
(bad)
inc
add
add
mov
rol
(bad)
retf
into
add
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
add
add
loope
clc
add
(bad)
loope
aad
in
add
(bad)
add
(bad)
inc
cmc
icebp
call
add
std
(bad)
cmp
ffreep
call
iret
test
jmp
loop
push
bnd
adc
cli
repz
add
add
add
add
(bad)
cli
add
clc
test
in
add
(bad)
cld
add
cld
test
(bad)
sti
add
(bad)
cli
add
(bad)
clc
add
mov
add
repnz
hlt
cmc
dec
(bad)
bnd
call
clc
js
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
add
in
fild
std
(bad)
inc
(bad)
(bad)
(bad)
js
loopne
js
int
js
xlat
out
mov
repnz
js
stc
jmp
div
loop
lock
div
in
xchg
out
in
call
jmp
fidivr
jmp
jecxz
iret
in
out
cli
jne
lock
jp
hlt
repnz
div
add
jmp
add
(bad)
(bad)
inc
add
add
repz
loop
ins
pushf
mov
add
mov
stos
mov
add
into
std
inc
mov
(bad)
(bad)
cmp
mov
jmp
test
enter
xlat
aad
iret
aam
xor
xchg
mov
push
mov
push
mov
jmp
mov
(bad)
cmp
mov
popa
xchg
mov
popf
mov
aam
jmp
out
(bad)
(bad)
out
add
cmc
jmp
(bad)
push
mov
push
rcr
sub
lods
retf
rcr
retf
clc
cmp
(bad)
call
(bad)
call
(bad)
(bad)
call
add
add
(bad)
(bad)
inc
out
in
in
out
add
icebp
repz
dec
mov
sub
add
mov
mov
ins
fdiv
(bad)
pop
out
sti
stc
or
in
add
clc
add
mov
and
mov
adc
inc
imul
add
idiv
add
stc
cli
add
cli
add
iret
inc
gs
ret
(bad)
(bad)
(bad)
jmp
call
bnd
call
mov
(bad)
cld
and
(bad)
cli
add
jmp
pusha
pushf
(bad)
jge
ret
in
(bad)
in
call
jmp
push
cli
clc
repnz
out
jecxz
hlt
lock
add
pop
add
mov
inc
mov
retf
mov
jmp
in
(bad)
call
in
dec
loop
add
loopne
fwait
mov
loop
outs
movs
inc
test
inc
mov
(bad)
cld
add
stc
inc
mov
clc
inc
mov
clc
inc
movs
cli
inc
stos
cld
inc
mov
sti
pop
mov
sar
call
push
test
into
sti
cdq
(bad)
(bad)
(bad)
xor
(bad)
inc
mov
push
shl
std
or
jmp
xchg
cld
loope
mov
div
in
loope
in
call
fiadd
add
add
repnz
inc
(bad)
(bad)
inc
mov
fild
ret
arpl
stc
mov
(bad)
sti
pop
mov
fdivrp
add
(bad)
inc
fcos
inc
xchg
(bad)
std
add
inc
test
inc
mov
(bad)
inc
(bad)
inc
into
(bad)
inc
sar
inc
aad
inc
fdivr
inc
sar
dec
ret
(bad)
inc
lods
(bad)
inc
mov
stc
inc
mov
(bad)
(bad)
(bad)
cld
jmp
jge
ficomp
loope
daa
in
cli
std
add
retf
inc
(bad)
(bad)
(bad)
xor
(bad)
dec
mov
cld
sbb
jmp
(bad)
scas
(bad)
in
(bad)
mov
ffree
add
mov
mov
pop
push
xchg
mov
std
addr16
(bad)
inc
out
call
mov
aad
add
in
inc
je
(bad)
adc
call
repz
push
enter
mov
fsin
or
mov
add
mov
adc
sar
mov
in
(bad)
(bad)
inc
mov
inc
pushf
cli
sti
push
mov
(bad)
clc
out
fcom
js
stos
add
mov
add
jecxz
dec
lea
jmp
(bad)
(bad)
dec
fsub
inc
scas
iret
dec
(bad)
inc
mov
movs
(bad)
fcmovu
fdivr
(bad)
mov
aad
scas
stos
aad
stos
mov
add
add
(bad)
inc
mov
out
mov
int3
mov
mov
in
repnz
and
(bad)
dec
(bad)
inc
js
dec
mov
sar
mov
jecxz
add
add
inc
cmp
add
fdivr
add
mov
inc
pop
xchg
call
mov
inc
(bad)
(bad)
cld
sbb
(bad)
ficom
xchg
cmps
sub
mov
inc
js
std
call
inc
ret
es
mov
dec
cli
inc
(bad)
cli
or
fst
test
xlat
push
out
(bad)
and
aad
cli
add
add
lods
int3
loopne
mov
shl
je
mov
clc
stc
push
in
cmc
dec
mov
call
out
idiv
add
ja
inc
fsubr
dec
stos
loopne
or
(bad)
add
sti
inc
sar
inc
sar
inc
sar
inc
sar
inc
sar
inc
ret
add
mov
call
movs
(bad)
fcos
stc
pop
mov
rol
int3
aam
scas
inc
test
sti
add
idiv
cmp
cld
push
(bad)
(bad)
inc
in
hlt
std
inc
nop
lods
push
aad
pop
fsub
in
mov
(bad)
loop
ret
add
add
add
jle
ret
jne
xchg
ret
cli
(bad)
clc
daa
stc
(bad)
inc
lock
inc
mov
fdivr
or
int3
call
(bad)
(bad)
call
popf
(bad)
inc
mov
(bad)
inc
sar
inc
sar
inc
iret
cld
inc
iret
std
inc
int3
cld
inc
int
inc
leave
std
inc
leave
cld
inc
into
(bad)
inc
into
(bad)
inc
stos
in
add
stos
inc
cmps
(bad)
inc
int
cld
test
cmc
fild
ror
add
fdivr
dec
mov
(bad)
ds
inc
jmp
inc
fucomp
inc
rcr
(bad)
cld
cli
cmc
add
loopne
add
in
push
fcmovbe
mov
leave
rcl
out
cld
add
mov
(bad)
(bad)
sub
push
add
(bad)
inc
repz
inc
out
inc
popf
(bad)
add
idiv
or
jns
inc
(bad)
inc
sar
inc
sar
inc
sar
inc
xlat
(bad)
inc
xlat
std
inc
xlat
(bad)
inc
(bad)
std
inc
aam
inc
aam
inc
sar
inc
leave
cld
inc
(bad)
sti
inc
sar
inc
retf
add
popf
(bad)
(bad)
adc
repnz
into
mov
ret
(bad)
(bad)
adc
add
inc
scas
icebp
inc
(bad)
inc
mov
popf
jmp
jmp
(bad)
aad
add
call
loopne
stc
clc
repz
add
add
fsubr
sti
add
jmp
std
and
mov
cld
or
sti
dec
mov
stos
dec
xchg
(bad)
jg
inc
(bad)
inc
(bad)
std
inc
fdivr
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
(bad)
inc
xlat
std
inc
sar
inc
iret
std
inc
(bad)
cld
inc
int3
(bad)
inc
mov
test
(bad)
and
mov
push
(bad)
iret
dec
mov
inc
sar
add
mov
mov
cld
out
call
mov
repnz
fistp
aad
cmps
ret
mov
fcmovbe
mov
add
add
retf
add
retf
(bad)
inc
sti
test
(bad)
jmp
rcr
out
outs
test
dec
jno
inc
xchg
inc
mov
inc
mov
clc
inc
(bad)
inc
(bad)
inc
(bad)
inc
loop
inc
in
inc
in
inc
out
inc
out
inc
out
inc
out
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
iret
(bad)
inc
(bad)
cld
inc
xlat
(bad)
dec
(bad)
iret
dec
xchg
sar
sar
std
add
cld
add
idiv
add
(bad)
(bad)
adc
(bad)
inc
(bad)
loope
cs
(bad)
jmp
(bad)
push
in
(bad)
(bad)
(bad)
(bad)
(bad)
call
ficom
loope
lds
in
retf
add
jmp
add
add
fwait
ret
(bad)
(bad)
std
add
(bad)
rol
mov
js
mov
sbb
scas
call
(bad)
cli
xchg
repz
(bad)
cmp
(bad)
inc
(bad)
cld
inc
(bad)
inc
loop
inc
in
inc
out
inc
jmp
(bad)
inc
jmp
inc
jmp
inc
jmp
add
std
inc
loop
inc
(bad)
inc
fdivr
inc
(bad)
(bad)
inc
into
cld
inc
fdivr
inc
mov
dec
pop
xchg
call
(bad)
lock
pushf
int
add
loope
dec
(bad)
(bad)
inc
(bad)
std
dec
xchg
mov
cld
imul
jmp
repz
jmp
(bad)
jne
ffreep
(bad)
stc
stc
bnd
(bad)
dec
(bad)
(bad)
inc
add
add
cli
stc
add
(bad)
inc
jbe
mov
mov
cdq
add
(bad)
(bad)
cld
idiv
stc
call
(bad)
inc
repz
inc
call
sti
inc
in
(bad)
inc
cmc
(bad)
inc
out
(bad)
inc
out
std
inc
out
(bad)
inc
out
(bad)
inc
out
(bad)
inc
in
std
inc
jmp
add
sti
inc
loope
inc
(bad)
inc
fdivr
dec
shr
pop
jge
inc
popf
dec
(bad)
jmp
add
(bad)
inc
xchg
(bad)
inc
mov
add
mov
mov
out
aam
out
fnstsw
(bad)
jmp
(bad)
std
jno
div
add
div
add
add
add
jecxz
add
add
add
(bad)
dec
mov
fdivr
enter
(bad)
jmp
adc
push
cmc
cli
inc
(bad)
(bad)
inc
cmc
sti
call
aam
inc
cli
inc
repz
inc
repnz
inc
repnz
inc
icebp
(bad)
inc
icebp
(bad)
inc
out
std
inc
in
(bad)
inc
clc
(bad)
inc
out
inc
fdivrp
inc
loop
dec
mov
aad
add
idiv
add
(bad)
inc
mov
inc
mov
out
inc
mov
inc
jmp
inc
(bad)
mov
call
in
mov
hlt
in
ss
imul
add
(bad)
inc
std
(bad)
sti
add
out
add
std
in
or
cmp
out
(bad)
(bad)
scas
sti
std
dec
mov
cmp
or
pop
pop
dec
daa
sub
and
dec
idiv
add
(bad)
inc
clc
cld
inc
cmc
cld
inc
cmc
std
inc
cmc
std
inc
idiv
inc
lock
dec
enter
idiv
inc
in
(bad)
inc
fdivrp
inc
fdivr
inc
jecxz
inc
into
(bad)
inc
ret
add
cli
inc
mov
inc
lods
(bad)
inc
mov
stc
add
popf
mov
jae
lods
add
add
add
(bad)
inc
jl
rol
mov
int
inc
lea
inc
(bad)
(bad)
call
hlt
(bad)
dec
repz
inc
movs
lods
call
or
inc
std
(bad)
inc
sti
std
inc
std
(bad)
inc
cld
(bad)
inc
cld
(bad)
inc
idiv
inc
(bad)
(bad)
dec
fcmovu
dec
sbb
dec
sti
dec
jmp
dec
int3
jmp
add
(bad)
std
inc
sar
add
sti
inc
movs
idiv
add
call
scas
push
sub
jmp
add
repz
(bad)
sti
add
add
mov
rcl
inc
mov
(bad)
scas
(bad)
(bad)
dec
in
inc
in
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
std
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
std
(bad)
inc
(bad)
(bad)
inc
cld
(bad)
inc
idiv
inc
cli
cld
dec
mov
call
pop
and
call
cmp
or
repnz
int
inc
ret
add
sti
inc
lods
stc
inc
lods
(bad)
stc
or
sar
pop
xchg
mov
dec
and
ret
add
fninit
add
fsub
add
mov
add
hlt
retf
xchg
mov
call
out
sti
inc
jmp
add
cli
inc
icebp
stc
inc
cmc
stc
inc
cld
std
dec
(bad)
(bad)
call
std
(bad)
call
std
std
call
std
std
call
std
std
inc
(bad)
(bad)
inc
cld
(bad)
inc
stc
(bad)
inc
(bad)
(bad)
dec
cmc
sti
call
test
cdq
call
sahf
cmps
dec
into
(bad)
add
(bad)
inc
retf
add
std
inc
mov
cli
inc
lods
stc
inc
scas
std
std
add
xchg
stos
jecxz
int
cmps
movs
ret
shl
call
add
jecxz
add
add
add
mov
mov
dec
sbb
mov
(bad)
inc
out
inc
jmp
inc
icebp
sti
inc
clc
cld
inc
(bad)
(bad)
inc
std
(bad)
call
std
cld
jmp
std
jmp
(bad)
cld
call
cld
(bad)
call
std
(bad)
inc
cld
inc
repnz
inc
hlt
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
loop
inc
sar
inc
int3
(bad)
inc
(bad)
add
inc
test
(bad)
inc
jns
jmp
xchg
inc
(bad)
mov
jb
iret
fld
xchg
mov
add
fucomip
test
add
add
(bad)
call
lods
ret
sbb
mov
(bad)
jmp
std
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
cli
(bad)
inc
std
(bad)
call
std
(bad)
cmp
std
std
jmp
cld
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
hlt
clc
inc
out
sti
inc
jmp
cli
inc
(bad)
inc
(bad)
inc
sar
inc
int3
(bad)
inc
(bad)
add
std
inc
mov
dec
push
aam
pop
cdq
lods
stc
pop
cdq
lods
fcom
retf
in
cmc
test
jecxz
cli
add
fsub
add
fsubp
add
gs
inc
popf
mov
dec
xchg
movs
call
bound
or
dec
cmp
call
aas
inc
call
cli
sti
jmp
std
std
jmp
std
std
jmp
std
std
dec
(bad)
(bad)
dec
out
inc
(bad)
(bad)
inc
std
(bad)
inc
icebp
std
inc
in
inc
loopne
inc
fdivr
inc
sar
inc
retf
add
(bad)
inc
leave
(bad)
inc
mov
call
mov
call
(bad)
mov
(bad)
cmp
ror
test
stc
add
(bad)
sti
add
leave
ror
(bad)
mov
mov
cmp
outs
(bad)
sbb
and
or
inc
inc
dec
cmp
dec
lea
dec
cli
jmp
cli
sti
jmp
cld
cld
jmp
std
cld
call
cld
inc
(bad)
(bad)
call
fdivr
or
sbb
call
(bad)
or
(bad)
inc
std
(bad)
inc
hlt
(bad)
inc
(bad)
inc
fdivr
inc
sar
inc
hlt
call
mov
xchg
(bad)
cmp
xchg
inc
mov
(bad)
jle
mov
jmp
repnz
add
test
add
std
cli
add
rcr
add
retf
sar
stos
fsub
cli
inc
mov
cmp
ret
call
loop
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
dec
and
dec
add
or
or
dec
aas
aas
dec
jns
inc
idiv
adc
movs
jmp
outs
test
inc
sbb
jne
ret
(bad)
cmp
jg
(bad)
movs
leave
aad
jmp
cmc
test
sti
inc
std
(bad)
sti
add
mov
add
scas
rol
out
lock
mov
mov
(bad)
aas
sbb
sub
xchg
jmp
fwait
stos
jmp
scas
mov
call
loopne
or
lock
repz
out
icebp
inc
icebp
cmc
call
lock
call
test
dec
pusha
imul
adc
jmp
inc
push
(bad)
cmp
(bad)
cmp
(bad)
dec
mov
inc
aad
push
mov
stc
push
mov
dec
push
pushf
scas
add
in
sti
add
(bad)
sti
add
mov
mov
mov
leave
sar
loop
(bad)
stc
xlat
(bad)
clc
jmp
test
dec
stos
(bad)
aas
jle
(bad)
cmp
ins
mov
aas
jno
push
jbe
push
jl
push
xchg
push
jg
push
adc
cmp
sbb
xchg
dec
jmp
inc
aam
call
int3
sar
outs
mov
call
lods
mov
pop
cwde
mov
mov
add
inc
retf
add
fsub
addr16
(bad)
sar
retf
div
cli
int3
hlt
icebp
(bad)
(bad)
std
idiv
aad
idiv
ret
jmp
leave
call
mov
dec
mov
(bad)
cmp
jg
(bad)
cmp
(bad)
cmp
cdq
(bad)
cmp
aas
sbb
jmp
mov
call
rcl
call
sar
xchg
int
dec
lods
mov
cli
je
mov
int3
fcmovnu
push
retf
add
add
add
(bad)
inc
rcr
jecxz
call
ret
iret
call
fdivr
cld
std
enter
int3
hlt
repnz
sar
cmc
(bad)
fdivr
cli
call
(bad)
cli
call
div
(bad)
mov
(bad)
jmp
iret
xlat
call
rcr
call
rcr
jmp
in
dec
hlt
hlt
jmp
into
aam
xchg
into
aam
nop
int3
sar
nop
int3
sar
mov
sar
cdq
rcr
push
mov
inc
scas
ret
(bad)
call
add
add
in
repnz
add
add
cli
stc
add
mov
add
ins
cmps
mov
retf
repz
cld
sar
hlt
std
retf
hlt
repnz
cmc
repnz
hlt
icebp
dec
hlt
icebp
dec
div
call
sti
idiv
aad
idiv
xlat
(bad)
stc
(bad)
(bad)
cli
(bad)
(bad)
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
call
std
stc
call
cli
idiv
aam
idiv
enter
(bad)
retf
sar
(bad)
retf
sar
xchg
int
call
retf
sar
xchg
rcl
call
mov
xchg
int
jl
leave
sti
outs
cmps
mov
mov
xlat
fiadd
(bad)
(bad)
sti
add
add
add
(bad)
xchg
xchg
mov
retf
sti
(bad)
sti
stc
leave
repz
dec
cmc
repnz
div
dec
cmc
repnz
cmc
repnz
hlt
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
repz
dec
div
dec
cmc
hlt
call
retf
xchg
int
dec
iret
aam
mov
sar
pop
pushf
mov
sahf
xlat
(bad)
ja
ret
popf
scas
movs
push
xchg
cmps
add
lods
add
(bad)
cld
add
mov
add
(bad)
dec
jno
mov
mov
(bad)
(bad)
std
(bad)
repnz
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
div
dec
div
dec
div
dec
div
dec
cmc
repnz
div
dec
cmc
hlt
call
retf
xchg
int
dec
rcl
(bad)
jge
leave
dec
cmps
dec
stos
mov
scas
xchg
mov
add
(bad)
sti
add
repnz
jmp
hlt
jnp
mov
out
xlat
std
clc
dec
repz
dec
div
dec
cmc
repnz
div
dec
div
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repz
div
dec
cmc
repnz
div
dec
repnz
call
retf
sar
xchg
int3
sar
nop
int3
sar
xchg
rcl
jmp
mov
(bad)
push
mov
(bad)
rcr
in
rcl
add
repz
add
add
add
test
sub
add
mov
movs
mov
aad
clc
clc
sar
hlt
dec
hlt
icebp
call
clc
cmc
dec
div
dec
repnz
repz
dec
repz
dec
div
call
clc
hlt
dec
div
dec
cmc
repnz
cmc
repnz
hlt
icebp
dec
div
inc
out
out
dec
int3
sar
(bad)
int3
sar
xchg
rcl
dec
jle
(bad)
gs
(bad)
jp
(bad)
std
dec
xchg
cmps
icebp
fwait
ror
sub
cwde
mov
retf
mov
add
test
dec
div
stc
sar
clc
cli
mov
fcmovu
cli
lahf
fcomp
std
popf
(bad)
(bad)
lahf
xlat
fdivr
test
in
inc
icebp
icebp
call
clc
hlt
call
div
call
div
call
cld
stc
push
(bad)
iret
call
iret
aam
mov
sar
push
cwde
lods
push
mov
std
pop
mov
(bad)
(bad)
inc
add
add
(bad)
add
jmp
add
cld
std
add
(bad)
sbb
retf
ror
xchg
ror
mov
mov
arpl
call
lods
inc
movs
call
mov
fs
mov
call
loopne
(bad)
mov
jmp
xlat
call
int3
sar
xchg
int
dec
ret
int
movs
fucom
std
add
test
dec
popf
mov
rol
std
(bad)
sti
add
jmp
add
loop
out
out
push
mov
fdivr
ror
cwde
mov
(bad)
inc
test
mov
push
mov
push
sar
mov
inc
sar
xchg
iret
(bad)
call
iret
(bad)
call
mov
mov
xchg
mov
les
nop
mov
out
mov
xlat
loopne
mov
fisttp
jmp
retf
(bad)
add
(bad)
call
(bad)
call
(bad)
(bad)
call
sti
stc
cli
xchg
mov
mov
mov
cld
push
mov
push
(bad)
jns
(bad)
mov
call
mov
dec
(bad)
cmps
cld
cwde
mov
jmp
cli
sti
push
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
inc
mov
add
in
sub
dec
mov
(bad)
push
add
(bad)
inc
(bad)
push
add
imul
add
scas
add
mov
xor
mov
in
int3
aam
fcmove
(bad)
(bad)
(bad)
push
icebp
fild
(bad)
stc
jmp
add
div
add
add
jmp
fld
lock
repnz
loope
std
(bad)
sti
add
es
xchg
in
add
enter
mov
aam
rcl
xor
out
or
out
lock
pop
mov
fcom
shr
bound
iret
shr
aam
push
jmp
hlt
les
cmc
out
jecxz
ror
mov
repnz
in
lods
rcr
mov
jecxz
ds
inc
jns
test
add
std
mov
les
add
add
lods
(bad)
fld
pop
xchg
mov
add
mov
dec
idiv
add
into
inc
pop
push
dec
mov
inc
(bad)
(bad)
add
inc
xchg
jmp
jns
call
jmp
add
jecxz
pushf
push
test
cld
xor
icebp
cld
add
out
add
mov
mov
(bad)
(bad)
test
test
(bad)
(bad)
cld
add
test
ret
stos
retf
fild
in
cli
pop
(bad)
sti
add
sar
mov
inc
stos
sti
inc
mov
(bad)
sti
add
(bad)
cld
add
(bad)
sti
add
sti
add
into
idiv
(bad)
dec
lea
(bad)
sub
jmp
cld
dec
in
cmc
cli
add
cwde
mov
(bad)
mov
in
cwde
out
retf
idiv
add
(bad)
fild
je
rol
fucomp
push
stc
cld
sti
add
out
pop
jnp
dec
xchg
sar
add
fdivr
or
ret
inc
cwde
(bad)
dec
stos
sar
movsx
inc
mov
cli
push
mov
(bad)
(bad)
cld
fldcw
jbe
jbe
lods
in
cmp
sti
cld
call
fucomip
jmp
(bad)
(bad)
add
ret
mov
mov
aad
test
pop
lahf
mov
loopne
xchg
(bad)
fdiv
jl
repnz
push
fsubr
dec
cld
inc
cwde
retf
inc
retf
call
jecxz
adc
mov
inc
mov
inc
scas
call
inc
cmp
or
push
jge
adc
cmp
or
mov
std
std
add
idiv
pop
mov
repz
loope
add
fidivr
inc
xor
jo
loopne
cmp
push
add
fdivrp
pop
mov
fdivr
adc
jmp
iret
(bad)
inc
aad
inc
fdivr
inc
aam
inc
sar
inc
sar
inc
sar
inc
shl
push
xchg
inc
pushf
retf
(bad)
fdivrp
mov
jmp
test
adc
inc
out
stc
and
enter
mov
mov
jecxz
(bad)
fwait
test
into
fiadd
(bad)
and
iret
ficom
retf
out
add
(bad)
std
pop
mov
sar
or
jmp
aad
inc
fdivr
inc
fscale
inc
xlat
std
inc
aad
inc
sar
inc
int3
(bad)
inc
(bad)
(bad)
inc
(bad)
retf
mov
fdivr
scas
ret
(bad)
in
and
(bad)
mov
mov
push
jmp
(bad)
retf
in
dec
div
(bad)
(bad)
fld
cmps
(bad)
fld
(bad)
in
add
out
add
loop
pop
xchg
mov
scas
sub
inc
test
inc
fdivrp
inc
fdivr
inc
jecxz
inc
in
inc
in
inc
in
inc
loopne
inc
(bad)
inc
(bad)
cld
inc
retf
add
(bad)
dec
xchg
leave
inc
mov
inc
test
inc
in
(bad)
inc
cmc
jmp
mov
std
loope
retf
push
jmp
les
jnp
pop
or
shr
add
(bad)
inc
xor
out
sub
inc
(bad)
inc
loop
inc
out
(bad)
inc
out
(bad)
inc
jmp
inc
in
(bad)
inc
in
std
inc
call
cld
inc
(bad)
inc
aad
inc
aad
inc
mov
dec
mov
(bad)
inc
shr
sti
jb
mov
lahf
lock
ins
jmp
int
cmc
imul
pop
rcl
retf
add
call
add
rcl
add
out
add
in
add
loopne
cmp
stos
sar
ret
std
(bad)
std
or
inc
xchg
mov
inc
(bad)
dec
loopne
inc
repz
inc
icebp
cld
inc
icebp
(bad)
inc
in
std
inc
cmc
(bad)
inc
icebp
(bad)
inc
(bad)
inc
mov
into
inc
cmc
inc
mov
fdivr
add
mov
aam
jecxz
(bad)
out
out
in
repz
(bad)
(bad)
inc
mov
mov
cmp
scas
aam
mov
fucomip
inc
pop
pusha
call
push
pop
dec
int
inc
(bad)
(bad)
inc
idiv
inc
cmc
sti
inc
sti
(bad)
inc
mov
mov
inc
loope
inc
(bad)
add
(bad)
inc
mov
cli
or
fdivr
jae
cmps
pop
jne
cmps
add
add
ins
add
add
add
ret
add
mov
cmp
(bad)
(bad)
stos
std
(bad)
std
inc
out
(bad)
inc
cld
(bad)
dec
out
inc
sti
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sti
cld
inc
cld
(bad)
inc
iret
sar
cmovl
adc
call
outs
dec
(bad)
cmps
inc
aam
inc
mov
clc
inc
stos
std
stc
push
xchg
fdivr
pop
mov
add
mov
je
rol
jo
add
(bad)
sti
add
add
mov
aas
xor
(bad)
cld
ds
inc
out
inc
idiv
inc
std
(bad)
dec
cld
std
call
std
(bad)
call
cld
std
call
(bad)
(bad)
inc
sti
std
inc
(bad)
(bad)
dec
repnz
call
scas
mov
adc
jmp
inc
sar
add
(bad)
std
add
mov
xchg
mov
(bad)
push
ret
fucom
add
add
add
ret
(bad)
fnsave
xchg
mov
jbe
idiv
push
stc
(bad)
inc
cli
(bad)
inc
clc
cli
call
(bad)
(bad)
jmp
std
cld
call
std
std
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
repz
inc
idiv
inc
lock
inc
(bad)
inc
retf
add
sti
inc
mov
idiv
and
scas
std
sub
(bad)
sbb
iret
fld
cmc
(bad)
inc
lods
int
add
xchg
movs
jmp
addr16
add
inc
inc
call
add
sub
clc
push
sti
sti
call
std
dec
in
out
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
lock
inc
fdivr
inc
sar
inc
retf
(bad)
dec
jne
jmp
cld
jnp
sar
xchg
stos
jb
jl
add
movs
add
add
add
(bad)
clc
add
loop
adc
(bad)
shl
outs
lods
mov
cld
and
(bad)
adc
mov
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
loop
dec
inc
inc
inc
lods
inc
fdivr
dec
lods
iret
jmp
test
jmp
dec
stos
std
addr16
mov
mov
loopne
mov
loope
add
add
add
(bad)
sti
add
xchg
add
cmps
add
lods
xor
out
push
cdq
scas
jmp
nop
mov
jmp
mov
call
int3
aam
push
aam
call
aam
call
mov
jno
adc
push
call
inc
push
push
movs
(bad)
aas
jnp
jmp
stos
inc
enter
mov
(bad)
ins
test
(bad)
jbe
int
cmp
lds
std
(bad)
sti
add
out
add
fsub
cmp
(bad)
sti
sti
(bad)
out
in
(bad)
popf
into
(bad)
(bad)
jns
mov
inc
xchg
(bad)
cmp
(bad)
cmp
push
jne
push
mov
call
jmp
mov
call
xlat
(bad)
jle
(bad)
cli
cmp
mov
add
add
add
ret
mov
add
outs
add
in
call
sti
idiv
aad
idiv
aad
cli
dec
div
push
fsub
jmp
xlat
(bad)
mov
(bad)
fdivr
mov
out
call
iret
aam
mov
sar
nop
int3
sar
jno
mov
(bad)
sahf
ret
ror
add
add
add
add
(bad)
inc
bound
les
pop
sbb
repnz
idiv
leave
repz
retf
dec
div
call
cli
idiv
aad
idiv
xlat
std
clc
call
std
clc
call
std
clc
call
sti
idiv
sar
idiv
retf
call
retf
sar
xchg
iret
aam
test
int3
(bad)
je
ret
mov
lods
addr16
jge
add
mov
repnz
add
retf
add
fcmovu
call
(bad)
stc
stc
leave
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
repz
dec
repz
dec
repz
dec
repz
cmc
repnz
repnz
call
sar
xchg
rcl
(bad)
jge
(bad)
jmp
mov
cmp
push
movs
ror
mov
add
add
out
add
int3
add
mov
mov
out
fdivr
stc
stc
sar
cmc
cld
sar
cmc
cld
iret
div
call
stc
cmc
(bad)
sar
cmc
dec
div
dec
hlt
icebp
dec
div
inc
lock
call
retf
sar
xchg
rcl
(bad)
pop
call
ins
test
out
(bad)
fisubr
lock
repz
sti
stc
add
add
add
loop
pop
fwait
lods
add
test
push
nop
cmps
adc
mov
push
rcr
call
into
aad
movs
(bad)
(bad)
mov
cmc
repz
cld
clc
(bad)
mov
enter
rcl
(bad)
jns
(bad)
mov
cld
add
mov
adc
dec
jns
cld
std
std
add
(bad)
loope
push
xchg
cmps
add
test
add
rcr
mov
jl
mov
call
scas
(bad)
arpl
sar
(bad)
iret
call
retf
sar
(bad)
int3
sar
xchg
into
aam
nop
int3
sar
nop
int3
sar
outs
test
mov
add
div
add
mov
mov
ret
clc
stc
add
(bad)
dec
hlt
stc
sti
(bad)
in
lock
call
mov
mov
jno
mov
inc
ret
push
fwait
scas
call
std
inc
lock
add
in
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
jmp
leave
aad
add
jmp
add
rcl
(bad)
push
fcmovbe
retf
inc
repz
ins
clc
in
rcl
loop
(bad)
xchg
(bad)
aad
cs
loop
add
(bad)
add
(bad)
inc
jp
mov
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
rol
iret
iret
lea
(bad)
and
ret
ror
icebp
out
mov
mov
mov
pop
fs
inc
shr
sti
push
sahf
sar
add
stos
loop
add
(bad)
and
mov
fcomi
xor
(bad)
(bad)
fwait
test
stos
nop
cdq
mov
lds
int3
in
add
in
add
cld
sti
add
std
inc
(bad)
(bad)
inc
enter
test
shl
dec
lods
shr
push
mov
inc
rol
je
fadd
fs
fwait
ret
mov
(bad)
(bad)
adc
jecxz
add
repnz
in
cld
inc
jmp
add
(bad)
inc
popf
fdivr
add
int
jmp
retf
jmp
xor
fld
push
stos
shr
out
clc
dec
mov
inc
sti
cld
inc
stc
std
inc
mov
mov
cld
add
loopne
mov
ja
test
test
add
xchg
mov
inc
pushf
mov
jnp
into
loopne
add
jmp
pop
div
jmp
(bad)
(bad)
call
(bad)
inc
repnz
dec
(bad)
in
add
cld
inc
mov
int3
cld
xchg
mov
add
mov
add
mov
jne
pop
mov
call
loope
inc
pushf
stos
dec
mov
(bad)
cmp
mov
jb
mov
add
mov
scas
int
add
mov
pop
mov
in
std
jle
enter
mov
push
lods
mov
jmp
mov
(bad)
xchg
enter
mov
shl
mov
add
iret
xlat
add
lods
mov
(bad)
fdivrp
cld
(bad)
(bad)
stc
(bad)
fsqrt
idiv
fdivr
sti
dec
(bad)
sti
call
ror
jbe
shl
ret
rcr
movs
mov
rol
pushf
ror
cmps
mov
les
jle
mov
jg
loop
imul
(bad)
(bad)
mov
out
call
mov
push
mov
add
div
add
add
add
icebp
call
add
rcr
addr16
mov
shr
mov
retf
leave
sar
cmp
push
imul
cld
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
ins
xor
add
add
mov
add
cwde
sbb
add
add
inc
add
add
or
push
imul
add
add
das
or
add
add
inc
add
inc
and
add
je
add
add
add
ja
push
add
add
xor
and
inc
pop
add
add
push
add
gs
xor
add
pop
add
mov
and
and
and
and
and
and
jmp
mov
int3
cmc
iret
sti
iret
mov
add
js
js
popf
or
add
sub
sbb
and
nop
add
add
popa
outs
jae
push
gs
inc
add
add
add
add
gs
add
add
add
add
pop
fmul
add
or
add
add
add
fs
popa
outs
arpl
add
or
sub
inc
sub
mov
call
add
add
push
add
add
add
push
or
arpl
inc
gs
popa
imul
sub
dec
sub
mov
test
add
adc
add
sbb
add
add
or
push
imul
add
add
(bad)
sbb
or
adc
inc
add
inc
cmp
add
add
je
push
imul
add
add
lods
mov
ret
rcl
in
(bad)
rcl
retf
mov
add
pop
inc
adc
add
or
add
add
je
push
imul
add
add
stc
rcl
aad
mov
ret
int
mov
mov
mov
add
test
add
(bad)
inc
jle
add
or
add
ins
ins
popa
outs
xor
add
or
mov
mov
mov
add
add
push
aaa
add
add
enter
int
mov
in
(bad)
sar
shl
les
jmp
in
into
repz
mov
(bad)
mov
test
ret
std
enter
mov
leave
mov
mov
mov
sbb
add
or
add
popa
ins
gs
add
xlat
sbb
adc
add
add
add
or
add
arpl
add
loope
mov
mov
iret
iret
fidivr
mov
mov
mov
add
add
adc
add
add
add
add
add
add
inc
ins
ins
add
add
push
rol
out
add
add
add
xor
add
and
and
inc
jne
add
or
bound
cmp
add
cmp
ret
mov
mov
cmps
mov
retf
int
and
and
and
and
and
and
and
and
cmc
iret
sti
iret
mov
mov
ret
ret
mov
lds
add
loopne
ret
add
and
sbb
pop
add
nop
add
add
popa
outs
jae
push
gs
inc
add
add
push
push
add
ins
bound
add
add
add
pop
or
or
sbb
push
push
add
add
add
int
int
ror
(bad)
aad
add
int
mov
lds
aam
cmps
int
or
mov
shr
call
rol
mov
scas
and
add
add
add
add
xor
add
add
xor
add
add
xor
add
add
add
or
arpl
inc
ins
gs
jb
add
or
(bad)
in
aad
mov
mov
add
push
sbb
aaa
add
add
add
add
add
or
arpl
push
jne
push
add
add
cli
sar
cs
adc
push
scas
add
add
add
add
add
or
je
je
jns
bound
add
add
adc
push
ja
push
add
add
jl
adc
add
and
inc
dec
add
add
(bad)
je
je
popa
outs
addr16
popa
outs
addr16
popa
je
add
add
pop
xor
rcl
sub
or
mov
shr
cli
int
mov
xlat
mov
mov
fcom
jmp
out
shl
dec
dec
cs
add
(bad)
inc
and
or
inc
outs
ins
ins
popa
outs
xor
add
add
cs
pop
xor
out
add
adc
add
add
add
add
or
dec
imul
xor
call
dec
push
inc
outs
ins
arpl
imul
push
imul
push
add
jae
movlps
sub
cld
add
add
inc
xor
or
add
shr
popf
or
add
jge
add
push
add
add
and
add
add
int
add
add
add
add
pop
or
add
in
inc
add
fsubrp
mov
clc
sar
add
and
add
add
add
add
add
repnz
add
add
add
push
or
add
add
add
add
add
cli
int
dec
inc
add
add
add
add
add
add
add
add
add
fadd
jmp
and
add
add
add
in
or
add
add
add
add
add
retf
mov
lods
add
add
add
adc
add
gs
xor
add
add
add
(bad)
cli
(bad)
mov
mov
aad
mov
aam
retf
shl
int
mov
add
test
inc
or
call
add
add
add
add
bound
xor
add
add
add
(bad)
aad
mov
int
add
daa
push
inc
adc
add
add
add
push
add
gs
aaa
add
add
mov
shr
cli
int
mov
xlat
mov
mov
mov
inc
ins
imul
mov
retf
mov
xor
xor
in
enter
icebp
aam
mov
fidiv
scas
mov
ret
mov
fcmovbe
jmp
ret
out
ror
call
sar
mov
int
lods
mov
rcl
aad
mov
xlat
rol
mov
int
mov
retf
mov
mov
add
add
xlat
sbb
add
pop
add
add
add
push
add
gs
add
add
add
ret
mov
fadd
jmp
(bad)
mov
add
cli
add
add
call
add
add
add
sbb
add
gs
cmp
add
adc
mov
shr
cli
int
enter
mov
(bad)
mov
add
add
pusha
or
adc
pop
add
nop
add
retf
into
int3
in
add
and
or
push
imul
add
add
dec
sbb
adc
add
add
inc
add
inc
aas
add
sbb
add
add
je
push
gs
arpl
add
add
mov
mov
int
int
mov
int
(bad)
add
add
add
test
add
add
add
add
je
push
gs
arpl
add
retf
out
cli
retf
ret
rcl
mov
ret
cli
int
mov
int
(bad)
add
add
add
dec
or
add
push
add
(bad)
inc
inc
add
sbb
add
add
je
push
gs
arpl
add
add
shl
repnz
retf
int
(bad)
add
add
add
out
inc
adc
add
add
push
add
popa
ins
xor
add
or
mov
retf
int
mov
add
add
cld
or
add
or
inc
das
add
add
add
popa
ins
xor
add
or
mov
retf
int
mov
add
add
(bad)
or
add
push
add
add
add
add
je
jo
outs
imul
add
push
lock
pop
push
add
add
pop
add
inc
das
add
add
or
ins
popa
bound
jo
imul
add
add
cli
int
dec
inc
cmp
add
fild
inc
or
adc
add
add
das
add
add
push
add
popa
ins
xor
add
or
mov
retf
int
mov
add
add
mov
pop
sbb
add
add
inc
sub
add
and
add
push
jns
xor
add
push
es
add
add
add
add
xor
adc
and
inc
jns
add
and
add
push
jns
xor
add
cmp
ret
mov
mov
clc
mov
retf
int
and
and
and
and
and
and
and
and
cmc
iret
sti
iret
mov
mov
mov
mov
int
add
xchg
adc
add
add
add
add
add
nop
add
add
popa
outs
jae
push
gs
inc
add
add
add
pop
add
fs
imul
add
fcom
ret
enter
nop
adc
ja
adc
add
add
or
dec
imul
xor
call
dec
push
inc
outs
ins
arpl
imul
push
imul
xchg
add
scas
add
dec
inc
or
push
add
add
inc
xor
or
add
shr
push
or
add
jge
add
push
add
add
and
add
add
int
add
add
add
adc
add
jns
add
fsubrp
mov
push
into
jns
push
add
add
add
add
add
add
pop
add
add
add
add
cli
int
dec
inc
add
add
add
add
add
add
or
add
or
add
aad
mov
int
and
add
add
add
xchg
pop
add
or
add
or
add
rcl
shr
sub
and
add
add
add
cmc
or
add
add
add
leave
mov
int
int3
cmc
sub
and
add
add
add
in
or
add
add
add
mov
lods
add
add
add
add
add
add
add
add
push
dec
inc
add
add
add
add
push
add
gs
xor
add
push
add
shl
cli
mov
in
add
pop
inc
adc
inc
dec
add
add
add
gs
xor
add
sub
xlat
mov
mov
ret
retf
mov
ret
int
mov
aam
cmps
mov
mov
mov
mov
inc
inc
add
ja
inc
adc
add
add
jmp
add
sub
add
push
je
imul
dec
push
inc
outs
ins
arpl
imul
je
imul
add
add
sub
lods
add
add
inc
xor
or
add
jecxz
add
jl
add
sar
add
push
add
add
inc
mov
add
add
add
add
add
ja
pop
add
int
add
add
add
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
add
add
sub
pop
jnp
push
pop
es
not
push
add
add
add
add
add
add
or
(bad)
iret
xchg
cld
pop
gs
add
jmp
pop
cli
not
mov
add
pop
fsubrp
mov
add
xor
inc
mov
add
sub
add
ins
ins
outs
outs
inc
imul
call
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
jb
add
and
adc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
sub
add
add
add
add
add
add
cmp
add
cmp
add
add
add
and
outs
jne
popa
imul
or
ins
outs
jne
popa
imul
pop
add
add
or
ins
outs
jne
gs
gs
add
add
leave
mov
add
inc
push
add
add
or
ins
outs
jne
ins
gs
jb
adc
add
(bad)
in
aad
or
add
add
add
add
or
ins
outs
jne
gs
je
adc
push
add
stc
rcl
(bad)
fcom
ret
into
mov
mov
adc
inc
add
int3
xor
cmp
rol
dec
mov
lds
inc
mov
pop
mov
jne
push
cmp
lods
xor
or
stos
add
xchg
popf
jbe
add
add
add
dec
popa
imul
inc
add
add
ficom
add
add
push
add
add
add
push
add
xor
add
add
add
add
add
and
add
add
add
sldt
adc
add
add
or
push
pop
add
xor
add
add
and
test
add
push
sbb
add
add
and
test
add
mov
adc
add
add
and
push
push
add
sub
add
xor
add
pusha
add
add
add
add
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
inc
and
inc
and
inc
loopne
add
inc
pusha
add
loopne
add
inc
add
add
add
add
(bad)
inc
and
add
pusha
add
pusha
mov
add
loopne
add
add
pusha
mov
rol
inc
loopne
add
add
loopne
add
add
add
and
and
inc
add
inc
add
and
and
pusha
add
pusha
add
and
mov
inc
pusha
add
and
add
inc
add
inc
add
pusha
add
mov
add
and
add
and
rol
add
shl
mov
mov
loopne
loopne
loopne
rol
add
loopne
add
loopne
add
loopne
add
jmp
add
mov
inc
shl
add
clc
lock
fdivr
add
call
inc
sar
clc
add
clc
inc
cwde
rcr
add
clc
lock
(bad)
clc
add
(bad)
clc
add
enter
clc
lock
mov
add
mov
enter
rol
add
clc
add
sbb
fcom
mov
rcr
add
lock
add
enter
rol
lock
clc
add
mov
clc
add
clc
clc
add
(bad)
inc
inc
sbb
xor
add
ror
cwde
ror
mov
loopne
add
lock
add
(bad)
inc
inc
mov
add
mov
add
rol
mov
rol
call
mov
loopne
test
loopne
mov
clc
call
add
lock
mov
add
loopne
add
lock
add
clc
clc
add
mov
inc
enter
inc
jo
add
mov
add
shr
add
mov
pop
mov
mov
add
rol
mov
enter
enter
rol
test
rol
cwde
enter
call
fadd
mov
fadd
mov
lock
add
loopne
test
loopne
enter
or
lock
call
clc
add
enter
call
clc
add
clc
clc
add
clc
clc
add
sar
add
lock
or
inc
mov
inc
clc
(bad)
inc
adc
cmp
or
add
pusha
push
add
js
add
nop
add
adc
or
add
push
mov
add
test
pop
mov
add
mov
push
cwde
mov
jo
mov
add
add
js
add
cmp
or
mov
add
mov
add
mov
add
js
add
nop
rol
nop
rol
mov
add
mov
rol
loopne
add
js
add
mov
add
mov
add
mov
add
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
or
rol
add
rol
add
rol
cwde
rcl
mov
mov
add
nop
fadd
add
fadd
and
fadd
xor
fadd
cwde
rcr
adc
fadd
rcl
add
fcomp
add
fcomp
add
fcomp
add
fcomp
add
call
add
add
arpl
add
add
add
add
add
add
and
add
fimul
scas
add
loope
aad
data16
add
add
jecxz
jle
(bad)
(bad)
retf
xchg
fldenv
(bad)
fcomip
mul
stc
add
out
dec
adc
enter
add
mov
imul
out
add
cmc
adc
inc
jmp
push
push
retf
sbb
jecxz
fcomp
mov
pop
pop
pop
imul
xlat
and
inc
rcr
ja
add
add
add
inc
push
dec
fstp
enter
pop
pop
dec
dec
dec
mov
mov
pop
je
add
add
rol
add
add
push
iret
test
leave
xchg
xchg
xchg
xchg
fcomip
clc
mov
pop
and
(bad)
jns
out
out
loopne
inc
add
add
add
loop
pop
js
push
inc
leave
loopne
cmc
inc
mov
xor
mov
inc
out
add
(bad)
hlt
aad
adc
loopne
add
add
add
and
adc
cmc
pusha
mov
mov
inc
test
dec
dec
dec
mov
movs
leave
mov
add
retf
and
ins
pusha
xchg
pop
add
cwde
adc
add
push
aad
jns
hlt
out
fucomp
ins
fild
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
mov
shl
inc
movs
push
sahf
repz
mov
cld
add
and
loope
jns
push
dec
sub
dec
dec
dec
dec
dec
dec
dec
mov
lods
dec
mov
addr16
mov
push
add
add
(bad)
(bad)
test
or
dec
dec
dec
pop
pop
pop
test
jmp
out
push
add
add
add
jbe
(bad)
fadd
or
dec
dec
dec
or
pop
dec
jmp
push
push
inc
cmp
push
add
add
add
add
cmp
dec
or
dec
dec
dec
dec
dec
or
or
fisttp
pop
add
pop
add
ret
ins
adc
dec
mov
dec
pusha
pusha
pusha
pusha
dec
dec
dec
mov
mov
jmp
inc
movs
ficomp
add
add
popf
cmc
(bad)
(bad)
cmp
cmps
pusha
push
pusha
pusha
pusha
pusha
pusha
dec
push
dec
mov
push
pop
icebp
pop
aad
(bad)
inc
jle
(bad)
(bad)
out
mov
mov
push
push
push
push
push
pusha
clc
push
dec
or
lea
mov
add
(bad)
mov
mov
cmp
add
add
js
mov
lods
pop
pop
lea
add
add
(bad)
mov
dec
add
add
push
push
push
push
add
out
mov
mov
mov
pop
lods
push
imul
jle
mov
dec
dec
pusha
pusha
scas
add
ins
ins
ins
push
add
js
push
push
clc
dec
pop
pop
lea
mov
mov
add
add
add
shr
push
add
adc
adc
push
pusha
push
add
or
push
(bad)
fcmovnb
call
add
add
add
add
xlat
cmp
mov
add
push
mov
adc
jns
ins
add
pusha
pusha
lods
mov
push
(bad)
in
sbb
add
add
mov
ins
jns
jns
push
js
push
add
or
pop
xchg
mov
add
xchg
sbb
push
js
adc
adc
mov
cmps
mov
push
or
mov
xchg
add
lock
xchg
cmc
cmps
add
add
ins
push
add
mov
mov
push
mov
jp
mov
add
add
mov
cmc
cmps
lods
pusha
pusha
pusha
js
mov
mov
cli
shl
xlat
lahf
sbb
xchg
bound
nop
nop
mov
popa
xchg
xchg
outs
popa
jp
bound
push
push
push
rcr
add
add
push
dec
push
push
pop
jne
xchg
jnp
sbb
popa
outs
xchg
xchg
pop
jae
push
push
push
push
pop
rcl
cld
sahf
lahf
push
pop
dec
push
push
push
push
test
push
cmps
test
pop
pop
push
push
push
push
rcl
pop
jo
add
push
dec
push
push
dec
push
push
push
push
push
push
push
push
push
push
push
pop
push
push
push
push
push
push
xchg
pop
jae
add
in
push
pop
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
pop
dec
push
push
push
push
push
push
pop
xchg
sti
jno
add
add
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
jae
pop
jl
add
add
test
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
pop
pop
push
push
push
push
pop
(bad)
(bad)
pop
jbe
add
add
push
dec
pop
pop
pop
dec
dec
dec
dec
push
push
dec
pop
push
push
push
push
pop
popa
pop
bound
add
push
push
test
sti
jne
test
dec
dec
push
test
pop
push
(bad)
rol
addr16
in
outs
pop
(bad)
xchg
(bad)
pop
pop
test
push
push
pop
test
add
jg
jge
jge
jno
pop
push
pop
pop
push
pop
xchg
je
add
add
add
xlat
jo
pop
jno
jno
jnp
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
or
add
add
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
add
loopne
add
mov
add
mov
add
and
and
inc
add
add
and
add
rol
loopne
add
pusha
inc
and
add
add
add
and
inc
shl
add
and
loopne
inc
add
inc
pusha
add
pusha
add
inc
pusha
add
add
add
pusha
add
mov
mov
add
inc
mov
add
pusha
mov
add
and
mov
rol
and
loopne
and
loopne
and
add
loopne
add
jmp
add
loopne
add
inc
loopne
inc
add
inc
cwde
rcr
add
mov
add
clc
clc
add
(bad)
clc
add
clc
inc
rcr
add
(bad)
clc
add
(bad)
inc
nop
enter
call
mov
add
add
clc
lock
clc
lock
sar
add
inc
inc
js
add
rol
loopne
add
rcr
add
clc
clc
add
enter
js
add
mov
or
enter
enter
enter
rol
call
call
fadd
test
loopne
mov
cwde
call
add
mov
add
loopne
add
clc
clc
add
(bad)
inc
clc
(bad)
inc
xor
mov
add
test
push
cwde
test
fcom
test
push
js
add
mov
add
cwde
rol
cwde
rol
mov
rol
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
mov
rol
or
add
loopne
add
mov
fadd
inc
mov
add
enter
enter
fcomp
add
call
loopne
or
loopne
test
loopne
add
call
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
(bad)
call
add
clc
lock
clc
lock
fdivr
add
call
clc
add
clc
clc
add
clc
clc
add
(bad)
inc
test
add
adc
and
sbb
and
or
add
inc
dec
add
mov
adc
add
pop
pop
add
pop
add
pusha
push
add
dec
jo
sub
add
push
jo
sbb
add
push
jo
or
add
jo
add
add
push
js
sbb
mov
inc
mov
and
add
js
add
sbb
pop
sbb
push
mov
add
cwde
mov
add
mov
test
dec
sub
cmp
test
cmp
test
push
nop
test
pusha
nop
test
push
nop
test
js
test
pop
cwde
test
pusha
cwde
test
jo
test
add
mov
or
mov
dec
xor
jo
mov
cmp
mov
push
cwde
mov
js
mov
mov
mov
add
cmp
inc
mov
add
nop
mov
add
mov
add
mov
add
test
add
mov
add
mov
add
mov
add
sar
add
add
or
rol
mov
add
cwde
rol
cwde
rol
mov
rol
test
add
add
dec
pop
pop
xchg
add
pop
cmp
add
mov
adc
inc
pop
add
add
outs
jnp
add
pusha
pusha
pusha
cmc
add
cld
xor
add
add
add
add
call
push
dec
dec
dec
bound
add
aaa
call
add
je
mov
dec
test
jbe
test
popa
jb
xor
ja
add
ins
add
xchg
xchg
mov
loop
popa
popa
mov
fdivr
push
add
sbb
add
add
jae
mov
test
cmp
cmp
cmp
jbe
xor
pop
mov
hlt
dec
add
add
aas
xchg
test
cmp
cmp
xor
jecxz
dec
call
add
add
add
add
dec
dec
or
cmp
push
popa
or
pop
pop
adc
add
add
add
in
add
dec
dec
dec
dec
or
popf
outs
js
test
fwait
add
add
add
add
xchg
xchg
aas
aas
aas
dec
aas
aas
arpl
xor
add
stos
mov
aas
aas
aas
icebp
icebp
add
dec
test
add
xchg
mov
inc
inc
aas
add
cmp
bound
add
add
add
xchg
inc
pcmpgtw
add
dec
bound
loope
push
fnsave
mov
aas
aas
aas
cmp
dec
(bad)
fnstenv
add
retf
lods
stos
cmps
mov
call
push
lea
xchg
mov
(bad)
xchg
add
inc
xchg
movs
cmps
mov
arpl
dec
ins
imul
inc
inc
(bad)
fbld
or
mov
adc
dec
dec
cmp
add
mov
cmp
dec
ret
dec
push
push
push
mov
cmp
inc
inc
jp
add
jp
mov
mov
pop
mov
cmp
dec
jnp
inc
cmp
ds
cmp
add
add
ds
cmp
cmp
cmp
inc
cmp
inc
cmp
jle
cmp
cmp
cmp
cmp
inc
cmp
cmp
add
dec
inc
inc
cmp
pop
inc
inc
ds
dec
cmp
inc
cmp
add
add
dec
cmp
dec
inc
cmp
push
inc
inc
cmp
add
add
xchg
mov
dec
inc
dec
inc
push
jle
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
(bad)
inc
mov
mov
rol
mov
retf
leave
rol
cmp
add
loop
add
(bad)
add
out
add
mov
add
mov
add
(bad)
cld
add
std
stc
add
cli
test
(bad)
sti
add
(bad)
sti
add
ror
jbe
rol
in
add
mov
mov
push
lods
mov
add
mov
add
mov
scas
add
mov
add
loope
add
pushf
stos
add
mov
add
call
jb
mov
add
loopne
add
jmp
pop
div
add
(bad)
inc
adc
inc
add
clc
add
(bad)
in
add
cld
add
mov
int3
add
stos
rol
sub
add
mov
add
sti
cld
add
stc
std
add
mov
mov
add
mov
add
cdq
loopne
dec
xchg
rol
(bad)
adc
jecxz
add
repnz
in
cld
add
jmp
add
inc
add
jmp
add
jecxz
add
jmp
xor
mov
add
mov
cld
add
fscale
add
(bad)
inc
add
test
test
rol
dec
lods
rol
push
mov
add
rol
add
fadd
add
out
add
shr
add
sahf
rol
add
stos
loop
add
add
mov
fild
xor
(bad)
fld
fwait
test
stos
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
add
iret
iret
add
fld
and
ret
rol
icebp
out
add
rol
add
in
add
in
rol
loop
(bad)
add
add
add
jne
ja
jns
jnp
jge
jg
add
addr16
ins
outs
outs
jo
jb
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
add
dec
dec
dec
dec
dec
dec
push
push
push
push
push
add
add
inc
inc
inc
inc
inc
inc
add
add
add
xor
xor
ss
cmp
cmp
cmp
add
add
es
sub
sub
sub
cs
xor
add
add
sbb
push
pop
and
and
and
add
add
add
add
adc
push
pop
sbb
sbb
add
add
add
add
or
adc
add
add
add
add
add
add
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
add
add
add
add
add
add
and
jnp
ret
fwait
mov
repz
cld
add
cld
std
add
cli
stc
add
jmp
cli
add
(bad)
std
add
add
add
(bad)
inc
add
add
mov
rol
(bad)
retf
into
add
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
add
add
loope
clc
add
(bad)
loope
aad
in
add
(bad)
add
(bad)
inc
cmc
icebp
call
add
std
(bad)
cmp
ffreep
call
iret
test
jmp
loop
push
bnd
adc
cli
repz
add
add
add
add
(bad)
cli
add
clc
test
in
add
(bad)
cld
add
cld
test
(bad)
sti
add
(bad)
cli
add
(bad)
clc
add
mov
add
repnz
hlt
cmc
dec
(bad)
bnd
call
clc
js
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
add
in
fild
std
(bad)
inc
(bad)
(bad)
(bad)
js
loopne
js
int
js
xlat
out
mov
repnz
js
stc
jmp
div
loop
lock
div
in
xchg
out
in
call
jmp
fidivr
jmp
jecxz
iret
in
out
cli
jne
lock
jp
hlt
repnz
div
add
jmp
add
(bad)
(bad)
inc
add
add
repz
loop
ins
pushf
mov
add
mov
stos
mov
add
into
std
inc
mov
(bad)
(bad)
cmp
mov
jmp
test
enter
xlat
aad
iret
aam
xor
xchg
mov
push
mov
push
mov
jmp
mov
(bad)
cmp
mov
popa
xchg
mov
popf
mov
aam
jmp
out
(bad)
(bad)
out
add
cmc
jmp
(bad)
push
mov
push
rcr
sub
lods
retf
rcr
retf
clc
cmp
(bad)
call
(bad)
call
(bad)
(bad)
call
add
add
(bad)
(bad)
inc
out
in
in
out
add
icebp
repz
dec
mov
sub
add
mov
mov
ins
fdiv
(bad)
pop
out
sti
stc
or
in
add
clc
add
mov
and
mov
adc
inc
imul
add
idiv
add
stc
cli
add
cli
add
iret
inc
gs
ret
(bad)
(bad)
(bad)
jmp
call
bnd
call
mov
(bad)
cld
and
(bad)
cli
add
jmp
pusha
pushf
(bad)
jge
ret
in
(bad)
in
call
jmp
push
cli
clc
repnz
out
jecxz
hlt
lock
add
pop
add
mov
inc
mov
retf
mov
jmp
in
(bad)
call
in
dec
loop
add
loopne
fwait
mov
loop
outs
movs
inc
test
inc
mov
(bad)
cld
add
stc
inc
mov
clc
inc
mov
clc
inc
movs
cli
inc
stos
cld
inc
mov
sti
pop
mov
sar
call
push
test
into
sti
cdq
(bad)
(bad)
(bad)
xor
(bad)
inc
mov
push
shl
std
or
jmp
xchg
cld
loope
mov
div
in
loope
in
call
fiadd
add
add
repnz
inc
(bad)
(bad)
inc
mov
fild
ret
arpl
stc
mov
(bad)
sti
pop
mov
fdivrp
add
(bad)
inc
fcos
inc
xchg
(bad)
std
add
inc
test
inc
mov
(bad)
inc
(bad)
inc
into
(bad)
inc
sar
inc
aad
inc
fdivr
inc
sar
dec
ret
(bad)
inc
lods
(bad)
inc
mov
stc
inc
mov
(bad)
(bad)
(bad)
cld
jmp
jge
ficomp
loope
daa
in
cli
std
add
retf
inc
(bad)
(bad)
(bad)
xor
(bad)
dec
mov
cld
sbb
jmp
(bad)
scas
(bad)
in
(bad)
mov
ffree
add
mov
mov
pop
push
xchg
mov
std
addr16
(bad)
inc
out
call
mov
aad
add
in
inc
je
(bad)
adc
call
repz
push
enter
mov
fsin
or
mov
add
mov
adc
sar
mov
in
(bad)
(bad)
inc
mov
inc
pushf
cli
sti
push
mov
(bad)
clc
out
fcom
js
stos
add
mov
add
jecxz
dec
lea
jmp
(bad)
(bad)
dec
fsub
inc
scas
iret
dec
(bad)
inc
mov
movs
(bad)
fcmovu
fdivr
(bad)
mov
aad
scas
stos
aad
stos
mov
add
add
(bad)
inc
mov
out
mov
int3
mov
mov
in
repnz
and
(bad)
dec
(bad)
inc
js
dec
mov
sar
mov
jecxz
add
add
inc
cmp
add
fdivr
add
mov
inc
pop
xchg
call
mov
inc
(bad)
(bad)
cld
sbb
(bad)
ficom
xchg
cmps
sub
mov
inc
js
std
call
inc
ret
es
mov
dec
cli
inc
(bad)
cli
or
fst
test
xlat
push
out
(bad)
and
aad
cli
add
add
lods
int3
loopne
mov
shl
je
mov
clc
stc
push
in
cmc
dec
mov
call
out
idiv
add
ja
inc
fsubr
dec
stos
loopne
or
(bad)
add
sti
inc
sar
inc
sar
inc
sar
inc
sar
inc
sar
inc
ret
add
mov
call
movs
(bad)
fcos
stc
pop
mov
rol
int3
aam
scas
inc
test
sti
add
idiv
cmp
cld
push
(bad)
(bad)
inc
in
hlt
std
inc
nop
lods
push
aad
pop
fsub
in
mov
(bad)
loop
ret
add
add
add
jle
ret
jne
xchg
ret
cli
(bad)
clc
daa
stc
(bad)
inc
lock
inc
mov
fdivr
or
int3
call
(bad)
(bad)
call
popf
(bad)
inc
mov
(bad)
inc
sar
inc
sar
inc
iret
cld
inc
iret
std
inc
int3
cld
inc
int
inc
leave
std
inc
leave
cld
inc
into
(bad)
inc
into
(bad)
inc
stos
in
add
stos
inc
cmps
(bad)
inc
int
cld
test
cmc
fild
ror
add
fdivr
dec
mov
(bad)
ds
inc
jmp
inc
fucomp
inc
rcr
(bad)
cld
cli
cmc
add
loopne
add
in
push
fcmovbe
mov
leave
rcl
out
cld
add
mov
(bad)
(bad)
sub
push
add
(bad)
inc
repz
inc
out
inc
popf
(bad)
add
idiv
or
jns
inc
(bad)
inc
sar
inc
sar
inc
sar
inc
xlat
(bad)
inc
xlat
std
inc
xlat
(bad)
inc
(bad)
std
inc
aam
inc
aam
inc
sar
inc
leave
cld
inc
(bad)
sti
inc
sar
inc
retf
add
popf
(bad)
(bad)
adc
repnz
into
mov
ret
(bad)
(bad)
adc
add
inc
scas
icebp
inc
(bad)
inc
mov
popf
jmp
jmp
(bad)
aad
add
call
loopne
stc
clc
repz
add
add
fsubr
sti
add
jmp
std
and
mov
cld
or
sti
dec
mov
stos
dec
xchg
(bad)
jg
inc
(bad)
inc
(bad)
std
inc
fdivr
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
(bad)
inc
xlat
std
inc
sar
inc
iret
std
inc
(bad)
cld
inc
int3
(bad)
inc
mov
test
(bad)
and
mov
push
(bad)
iret
dec
mov
inc
sar
add
mov
mov
cld
out
call
mov
repnz
fistp
aad
cmps
ret
mov
fcmovbe
mov
add
add
retf
add
retf
(bad)
inc
sti
test
(bad)
jmp
rcr
out
outs
test
dec
jno
inc
xchg
inc
mov
inc
mov
clc
inc
(bad)
inc
(bad)
inc
(bad)
inc
loop
inc
in
inc
in
inc
out
inc
out
inc
out
inc
out
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
iret
(bad)
inc
(bad)
cld
inc
xlat
(bad)
dec
(bad)
iret
dec
xchg
sar
sar
std
add
cld
add
idiv
add
(bad)
(bad)
adc
(bad)
inc
(bad)
loope
cs
(bad)
jmp
(bad)
push
in
(bad)
(bad)
(bad)
(bad)
(bad)
call
ficom
loope
lds
in
retf
add
jmp
add
add
fwait
ret
(bad)
(bad)
std
add
(bad)
rol
mov
js
mov
sbb
scas
call
(bad)
cli
xchg
repz
(bad)
cmp
(bad)
inc
(bad)
cld
inc
(bad)
inc
loop
inc
in
inc
out
inc
jmp
(bad)
inc
jmp
inc
jmp
inc
jmp
add
std
inc
loop
inc
(bad)
inc
fdivr
inc
(bad)
(bad)
inc
into
cld
inc
fdivr
inc
mov
dec
pop
xchg
call
(bad)
lock
pushf
int
add
loope
dec
(bad)
(bad)
inc
(bad)
std
dec
xchg
mov
cld
imul
jmp
repz
jmp
(bad)
jne
ffreep
(bad)
stc
stc
bnd
(bad)
dec
(bad)
(bad)
inc
add
add
cli
stc
add
(bad)
inc
jbe
mov
mov
cdq
add
(bad)
(bad)
cld
idiv
stc
call
(bad)
inc
repz
inc
call
sti
inc
in
(bad)
inc
cmc
(bad)
inc
out
(bad)
inc
out
std
inc
out
(bad)
inc
out
(bad)
inc
out
(bad)
inc
in
std
inc
jmp
add
sti
inc
loope
inc
(bad)
inc
fdivr
dec
shr
pop
jge
inc
popf
dec
(bad)
jmp
add
(bad)
inc
xchg
(bad)
inc
mov
add
mov
mov
out
aam
out
fnstsw
(bad)
jmp
(bad)
std
jno
div
add
div
add
add
add
jecxz
add
add
add
(bad)
dec
mov
fdivr
enter
(bad)
jmp
adc
push
cmc
cli
inc
(bad)
(bad)
inc
cmc
sti
call
aam
inc
cli
inc
repz
inc
repnz
inc
repnz
inc
icebp
(bad)
inc
icebp
(bad)
inc
out
std
inc
in
(bad)
inc
clc
(bad)
inc
out
inc
fdivrp
inc
loop
dec
mov
aad
add
idiv
add
(bad)
inc
mov
inc
mov
out
inc
mov
inc
jmp
inc
(bad)
mov
call
in
mov
hlt
in
ss
imul
add
(bad)
inc
std
(bad)
sti
add
out
add
std
in
or
cmp
out
(bad)
(bad)
scas
sti
std
dec
mov
cmp
or
pop
pop
dec
daa
sub
and
dec
idiv
add
(bad)
inc
clc
cld
inc
cmc
cld
inc
cmc
std
inc
cmc
std
inc
idiv
inc
lock
dec
enter
idiv
inc
in
(bad)
inc
fdivrp
inc
fdivr
inc
jecxz
inc
into
(bad)
inc
ret
add
cli
inc
mov
inc
lods
(bad)
inc
mov
stc
add
popf
mov
jae
lods
add
add
add
(bad)
inc
jl
rol
mov
int
inc
lea
inc
(bad)
(bad)
call
hlt
(bad)
dec
repz
inc
movs
lods
call
or
inc
std
(bad)
inc
sti
std
inc
std
(bad)
inc
cld
(bad)
inc
cld
(bad)
inc
idiv
inc
(bad)
(bad)
dec
fcmovu
dec
sbb
dec
sti
dec
jmp
dec
int3
jmp
add
(bad)
std
inc
sar
add
sti
inc
movs
idiv
add
call
scas
push
sub
jmp
add
repz
(bad)
sti
add
add
mov
rcl
inc
mov
(bad)
scas
(bad)
(bad)
dec
in
inc
in
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
std
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
std
(bad)
inc
(bad)
(bad)
inc
cld
(bad)
inc
idiv
inc
cli
cld
dec
mov
call
pop
and
call
cmp
or
repnz
int
inc
ret
add
sti
inc
lods
stc
inc
lods
(bad)
stc
or
sar
pop
xchg
mov
dec
and
ret
add
fninit
add
fsub
add
mov
add
hlt
retf
xchg
mov
call
out
sti
inc
jmp
add
cli
inc
icebp
stc
inc
cmc
stc
inc
cld
std
dec
(bad)
(bad)
call
std
(bad)
call
std
std
call
std
std
call
std
std
inc
(bad)
(bad)
inc
cld
(bad)
inc
stc
(bad)
inc
(bad)
(bad)
dec
cmc
sti
call
test
cdq
call
sahf
cmps
dec
into
(bad)
add
(bad)
inc
retf
add
std
inc
mov
cli
inc
lods
stc
inc
scas
std
std
add
xchg
stos
jecxz
int
cmps
movs
ret
shl
call
add
jecxz
add
add
add
mov
mov
dec
sbb
mov
(bad)
inc
out
inc
jmp
inc
icebp
sti
inc
clc
cld
inc
(bad)
(bad)
inc
std
(bad)
call
std
cld
jmp
std
jmp
(bad)
cld
call
cld
(bad)
call
std
(bad)
inc
cld
inc
repnz
inc
hlt
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
loop
inc
sar
inc
int3
(bad)
inc
(bad)
add
inc
test
(bad)
inc
jns
jmp
xchg
inc
(bad)
mov
jb
iret
fld
xchg
mov
add
fucomip
test
add
add
(bad)
call
lods
ret
sbb
mov
(bad)
jmp
std
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
cli
(bad)
inc
std
(bad)
call
std
(bad)
cmp
std
std
jmp
cld
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
hlt
clc
inc
out
sti
inc
jmp
cli
inc
(bad)
inc
(bad)
inc
sar
inc
int3
(bad)
inc
(bad)
add
std
inc
mov
dec
push
aam
pop
cdq
lods
stc
pop
cdq
lods
fcom
retf
in
cmc
test
jecxz
cli
add
fsub
add
fsubp
add
gs
inc
popf
mov
dec
xchg
movs
call
bound
or
dec
cmp
call
aas
inc
call
cli
sti
jmp
std
std
jmp
std
std
jmp
std
std
dec
(bad)
(bad)
dec
out
inc
(bad)
(bad)
inc
std
(bad)
inc
icebp
std
inc
in
inc
loopne
inc
fdivr
inc
sar
inc
retf
add
(bad)
inc
leave
(bad)
inc
mov
call
mov
call
(bad)
mov
(bad)
cmp
ror
test
stc
add
(bad)
sti
add
leave
ror
(bad)
mov
mov
cmp
outs
(bad)
sbb
and
or
inc
inc
dec
cmp
dec
lea
dec
cli
jmp
cli
sti
jmp
cld
cld
jmp
std
cld
call
cld
inc
(bad)
(bad)
call
fdivr
or
sbb
call
(bad)
or
(bad)
inc
std
(bad)
inc
hlt
(bad)
inc
(bad)
inc
fdivr
inc
sar
inc
hlt
call
mov
xchg
(bad)
cmp
xchg
inc
mov
(bad)
jle
mov
jmp
repnz
add
test
add
std
cli
add
rcr
add
retf
sar
stos
fsub
cli
inc
mov
cmp
ret
call
loop
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
dec
and
dec
add
or
or
dec
aas
aas
dec
jns
inc
idiv
adc
movs
jmp
outs
test
inc
sbb
jne
ret
(bad)
cmp
jg
(bad)
movs
leave
aad
jmp
cmc
test
sti
inc
std
(bad)
sti
add
mov
add
scas
rol
out
lock
mov
mov
(bad)
aas
sbb
sub
xchg
jmp
fwait
stos
jmp
scas
mov
call
loopne
or
lock
repz
out
icebp
inc
icebp
cmc
call
lock
call
test
dec
pusha
imul
adc
jmp
inc
push
(bad)
cmp
(bad)
cmp
(bad)
dec
mov
inc
aad
push
mov
stc
push
mov
dec
push
pushf
scas
add
in
sti
add
(bad)
sti
add
mov
mov
mov
leave
sar
loop
(bad)
stc
xlat
(bad)
clc
jmp
test
dec
stos
(bad)
aas
jle
(bad)
cmp
ins
mov
aas
jno
push
jbe
push
jl
push
xchg
push
jg
push
adc
cmp
sbb
xchg
dec
jmp
inc
aam
call
int3
sar
outs
mov
call
lods
mov
pop
cwde
mov
mov
add
inc
retf
add
fsub
addr16
(bad)
sar
retf
div
cli
int3
hlt
icebp
(bad)
(bad)
std
idiv
aad
idiv
ret
jmp
leave
call
mov
dec
mov
(bad)
cmp
jg
(bad)
cmp
(bad)
cmp
cdq
(bad)
cmp
aas
sbb
jmp
mov
call
rcl
call
sar
xchg
int
dec
lods
mov
cli
je
mov
int3
fcmovnu
push
retf
add
add
add
(bad)
inc
rcr
jecxz
call
ret
iret
call
fdivr
cld
std
enter
int3
hlt
repnz
sar
cmc
(bad)
fdivr
cli
call
(bad)
cli
call
div
(bad)
mov
(bad)
jmp
iret
xlat
call
rcr
call
rcr
jmp
in
dec
hlt
hlt
jmp
into
aam
xchg
into
aam
nop
int3
sar
nop
int3
sar
mov
sar
cdq
rcr
push
mov
inc
scas
ret
(bad)
call
add
add
in
repnz
add
add
cli
stc
add
mov
add
ins
cmps
mov
retf
repz
cld
sar
hlt
std
retf
hlt
repnz
cmc
repnz
hlt
icebp
dec
hlt
icebp
dec
div
call
sti
idiv
aad
idiv
xlat
(bad)
stc
(bad)
(bad)
cli
(bad)
(bad)
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
call
std
stc
call
cli
idiv
aam
idiv
enter
(bad)
retf
sar
(bad)
retf
sar
xchg
int
call
retf
sar
xchg
rcl
call
mov
xchg
int
jl
leave
sti
outs
cmps
mov
mov
xlat
fiadd
(bad)
(bad)
sti
add
add
add
(bad)
xchg
xchg
mov
retf
sti
(bad)
sti
stc
leave
repz
dec
cmc
repnz
div
dec
cmc
repnz
cmc
repnz
hlt
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
repz
dec
div
dec
cmc
hlt
call
retf
xchg
int
dec
iret
aam
mov
sar
pop
pushf
mov
sahf
xlat
(bad)
ja
ret
popf
scas
movs
push
xchg
cmps
add
lods
add
(bad)
cld
add
mov
add
(bad)
dec
jno
mov
mov
(bad)
(bad)
std
(bad)
repnz
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
div
dec
div
dec
div
dec
div
dec
cmc
repnz
div
dec
cmc
hlt
call
retf
xchg
int
dec
rcl
(bad)
jge
leave
dec
cmps
dec
stos
mov
scas
xchg
mov
add
(bad)
sti
add
repnz
jmp
hlt
jnp
mov
out
xlat
std
clc
dec
repz
dec
div
dec
cmc
repnz
div
dec
div
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repz
div
dec
cmc
repnz
div
dec
repnz
call
retf
sar
xchg
int3
sar
nop
int3
sar
xchg
rcl
jmp
mov
(bad)
push
mov
(bad)
rcr
in
rcl
add
repz
add
add
add
test
sub
add
mov
movs
mov
aad
clc
clc
sar
hlt
dec
hlt
icebp
call
clc
cmc
dec
div
dec
repnz
repz
dec
repz
dec
div
call
clc
hlt
dec
div
dec
cmc
repnz
cmc
repnz
hlt
icebp
dec
div
inc
out
out
dec
int3
sar
(bad)
int3
sar
xchg
rcl
dec
jle
(bad)
gs
(bad)
jp
(bad)
std
dec
xchg
cmps
icebp
fwait
ror
sub
cwde
mov
retf
mov
add
test
dec
div
stc
sar
clc
cli
mov
fcmovu
cli
lahf
fcomp
std
popf
(bad)
(bad)
lahf
xlat
fdivr
test
in
inc
icebp
icebp
call
clc
hlt
call
div
call
div
call
cld
stc
push
(bad)
iret
call
iret
aam
mov
sar
push
cwde
lods
push
mov
std
pop
mov
(bad)
(bad)
inc
add
add
(bad)
add
jmp
add
cld
std
add
(bad)
sbb
retf
ror
xchg
ror
mov
mov
arpl
call
lods
inc
movs
call
mov
fs
mov
call
loopne
(bad)
mov
jmp
xlat
call
int3
sar
xchg
int
dec
ret
int
movs
fucom
std
add
test
dec
popf
mov
rol
std
(bad)
sti
add
jmp
add
loop
out
out
push
mov
fdivr
ror
cwde
mov
(bad)
inc
test
mov
push
mov
push
sar
mov
inc
sar
xchg
iret
(bad)
call
iret
(bad)
call
mov
mov
xchg
mov
les
nop
mov
out
mov
xlat
loopne
mov
fisttp
jmp
retf
(bad)
add
(bad)
call
(bad)
call
(bad)
(bad)
call
sti
stc
cli
xchg
mov
mov
mov
cld
push
mov
push
(bad)
jns
(bad)
mov
call
mov
dec
(bad)
cmps
cld
cwde
mov
jmp
cli
sti
push
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
inc
mov
add
in
sub
dec
mov
(bad)
push
add
(bad)
inc
(bad)
push
add
imul
add
scas
add
mov
xor
mov
in
int3
aam
fcmove
(bad)
(bad)
(bad)
push
icebp
fild
(bad)
stc
jmp
add
div
add
add
jmp
fld
lock
repnz
loope
std
(bad)
sti
add
es
xchg
in
add
enter
mov
aam
rcl
xor
out
or
out
lock
pop
mov
fcom
shr
bound
iret
shr
aam
push
jmp
hlt
les
cmc
out
jecxz
ror
mov
repnz
in
lods
rcr
mov
jecxz
ds
inc
jns
test
add
std
mov
les
add
add
lods
(bad)
fld
pop
xchg
mov
add
mov
dec
idiv
add
into
inc
pop
push
dec
mov
inc
(bad)
(bad)
add
inc
xchg
jmp
jns
call
jmp
add
jecxz
pushf
push
test
cld
xor
icebp
cld
add
out
add
mov
mov
(bad)
(bad)
test
test
(bad)
(bad)
cld
add
test
ret
stos
retf
fild
in
cli
pop
(bad)
sti
add
sar
mov
inc
stos
sti
inc
mov
(bad)
sti
add
(bad)
cld
add
(bad)
sti
add
sti
add
into
idiv
(bad)
dec
lea
(bad)
sub
jmp
cld
dec
in
cmc
cli
add
cwde
mov
(bad)
mov
in
cwde
out
retf
idiv
add
(bad)
fild
je
rol
fucomp
push
stc
cld
sti
add
out
pop
jnp
dec
xchg
sar
add
fdivr
or
ret
inc
cwde
(bad)
dec
stos
sar
movsx
inc
mov
cli
push
mov
(bad)
(bad)
cld
fldcw
jbe
jbe
lods
in
cmp
sti
cld
call
fucomip
jmp
(bad)
(bad)
add
ret
mov
mov
aad
test
pop
lahf
mov
loopne
xchg
(bad)
fdiv
jl
repnz
push
fsubr
dec
cld
inc
cwde
retf
inc
retf
call
jecxz
adc
mov
inc
mov
inc
scas
call
inc
cmp
or
push
jge
adc
cmp
or
mov
std
std
add
idiv
pop
mov
repz
loope
add
fidivr
inc
xor
jo
loopne
cmp
push
add
fdivrp
pop
mov
fdivr
adc
jmp
iret
(bad)
inc
aad
inc
fdivr
inc
aam
inc
sar
inc
sar
inc
sar
inc
shl
push
xchg
inc
pushf
retf
(bad)
fdivrp
mov
jmp
test
adc
inc
out
stc
and
enter
mov
mov
jecxz
(bad)
fwait
test
into
fiadd
(bad)
and
iret
ficom
retf
out
add
(bad)
std
pop
mov
sar
or
jmp
aad
inc
fdivr
inc
fscale
inc
xlat
std
inc
aad
inc
sar
inc
int3
(bad)
inc
(bad)
(bad)
inc
(bad)
retf
mov
fdivr
scas
ret
(bad)
in
and
(bad)
mov
mov
push
jmp
(bad)
retf
in
dec
div
(bad)
(bad)
fld
cmps
(bad)
fld
(bad)
in
add
out
add
loop
pop
xchg
mov
scas
sub
inc
test
inc
fdivrp
inc
fdivr
inc
jecxz
inc
in
inc
in
inc
in
inc
loopne
inc
(bad)
inc
(bad)
cld
inc
retf
add
(bad)
dec
xchg
leave
inc
mov
inc
test
inc
in
(bad)
inc
cmc
jmp
mov
std
loope
retf
push
jmp
les
jnp
pop
or
shr
add
(bad)
inc
xor
out
sub
inc
(bad)
inc
loop
inc
out
(bad)
inc
out
(bad)
inc
jmp
inc
in
(bad)
inc
in
std
inc
call
cld
inc
(bad)
inc
aad
inc
aad
inc
mov
dec
mov
(bad)
inc
shr
sti
jb
mov
lahf
lock
ins
jmp
int
cmc
imul
pop
rcl
retf
add
call
add
rcl
add
out
add
in
add
loopne
cmp
stos
sar
ret
std
(bad)
std
or
inc
xchg
mov
inc
(bad)
dec
loopne
inc
repz
inc
icebp
cld
inc
icebp
(bad)
inc
in
std
inc
cmc
(bad)
inc
icebp
(bad)
inc
(bad)
inc
mov
into
inc
cmc
inc
mov
fdivr
add
mov
aam
jecxz
(bad)
out
out
in
repz
(bad)
(bad)
inc
mov
mov
cmp
scas
aam
mov
fucomip
inc
pop
pusha
call
push
pop
dec
int
inc
(bad)
(bad)
inc
idiv
inc
cmc
sti
inc
sti
(bad)
inc
mov
mov
inc
loope
inc
(bad)
add
(bad)
inc
mov
cli
or
fdivr
jae
cmps
pop
jne
cmps
add
add
ins
add
add
add
ret
add
mov
cmp
(bad)
(bad)
stos
std
(bad)
std
inc
out
(bad)
inc
cld
(bad)
dec
out
inc
sti
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sti
cld
inc
cld
(bad)
inc
iret
sar
cmovl
adc
call
outs
dec
(bad)
cmps
inc
aam
inc
mov
clc
inc
stos
std
stc
push
xchg
fdivr
pop
mov
add
mov
je
rol
jo
add
(bad)
sti
add
add
mov
aas
xor
(bad)
cld
ds
inc
out
inc
idiv
inc
std
(bad)
dec
cld
std
call
std
(bad)
call
cld
std
call
(bad)
(bad)
inc
sti
std
inc
(bad)
(bad)
dec
repnz
call
scas
mov
adc
jmp
inc
sar
add
(bad)
std
add
mov
xchg
mov
(bad)
push
ret
fucom
add
add
add
ret
(bad)
fnsave
xchg
mov
jbe
idiv
push
stc
(bad)
inc
cli
(bad)
inc
clc
cli
call
(bad)
(bad)
jmp
std
cld
call
std
std
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
repz
inc
idiv
inc
lock
inc
(bad)
inc
retf
add
sti
inc
mov
idiv
and
scas
std
sub
(bad)
sbb
iret
fld
cmc
(bad)
inc
lods
int
add
xchg
movs
jmp
addr16
add
inc
inc
call
add
sub
clc
push
sti
sti
call
std
dec
in
out
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
lock
inc
fdivr
inc
sar
inc
retf
(bad)
dec
jne
jmp
cld
jnp
sar
xchg
stos
jb
jl
add
movs
add
add
add
(bad)
clc
add
loop
adc
(bad)
shl
outs
lods
mov
cld
and
(bad)
adc
mov
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
loop
dec
inc
inc
inc
lods
inc
fdivr
dec
lods
iret
jmp
test
jmp
dec
stos
std
addr16
mov
mov
loopne
mov
loope
add
add
add
(bad)
sti
add
xchg
add
cmps
add
lods
xor
out
push
cdq
scas
jmp
nop
mov
jmp
mov
call
int3
aam
push
aam
call
aam
call
mov
jno
adc
push
call
inc
push
push
movs
(bad)
aas
jnp
jmp
stos
inc
enter
mov
(bad)
ins
test
(bad)
jbe
int
cmp
lds
std
(bad)
sti
add
out
add
fsub
cmp
(bad)
sti
sti
(bad)
out
in
(bad)
popf
into
(bad)
(bad)
jns
mov
inc
xchg
(bad)
cmp
(bad)
cmp
push
jne
push
mov
call
jmp
mov
call
xlat
(bad)
jle
(bad)
cli
cmp
mov
add
add
add
ret
mov
add
outs
add
in
call
sti
idiv
aad
idiv
aad
cli
dec
div
push
fsub
jmp
xlat
(bad)
mov
(bad)
fdivr
mov
out
call
iret
aam
mov
sar
nop
int3
sar
jno
mov
(bad)
sahf
ret
ror
add
add
add
add
(bad)
inc
bound
les
pop
sbb
repnz
idiv
leave
repz
retf
dec
div
call
cli
idiv
aad
idiv
xlat
std
clc
call
std
clc
call
std
clc
call
sti
idiv
sar
idiv
retf
call
retf
sar
xchg
iret
aam
test
int3
(bad)
je
ret
mov
lods
addr16
jge
add
mov
repnz
add
retf
add
fcmovu
call
(bad)
stc
stc
leave
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
repz
dec
repz
dec
repz
dec
repz
cmc
repnz
repnz
call
sar
xchg
rcl
(bad)
jge
(bad)
jmp
mov
cmp
push
movs
ror
mov
add
add
out
add
int3
add
mov
mov
out
fdivr
stc
stc
sar
cmc
cld
sar
cmc
cld
iret
div
call
stc
cmc
(bad)
sar
cmc
dec
div
dec
hlt
icebp
dec
div
inc
lock
call
retf
sar
xchg
rcl
(bad)
pop
call
ins
test
out
(bad)
fisubr
lock
repz
sti
stc
add
add
add
loop
pop
fwait
lods
add
test
push
nop
cmps
adc
mov
push
rcr
call
into
aad
movs
(bad)
(bad)
mov
cmc
repz
cld
clc
(bad)
mov
enter
rcl
(bad)
jns
(bad)
mov
cld
add
mov
adc
dec
jns
cld
std
std
add
(bad)
loope
push
xchg
cmps
add
test
add
rcr
mov
jl
mov
call
scas
(bad)
arpl
sar
(bad)
iret
call
retf
sar
(bad)
int3
sar
xchg
into
aam
nop
int3
sar
nop
int3
sar
outs
test
mov
add
div
add
mov
mov
ret
clc
stc
add
(bad)
dec
hlt
stc
sti
(bad)
in
lock
call
mov
mov
jno
mov
inc
ret
push
fwait
scas
call
std
inc
lock
add
in
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
jmp
leave
aad
add
jmp
add
rcl
(bad)
push
fcmovbe
retf
inc
repz
ins
clc
in
rcl
loop
(bad)
xchg
(bad)
aad
cs
loop
add
(bad)
add
(bad)
inc
jp
mov
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
rol
iret
iret
lea
(bad)
and
ret
ror
icebp
out
mov
mov
mov
pop
fs
inc
shr
sti
push
sahf
sar
add
stos
loop
add
(bad)
and
mov
fcomi
xor
(bad)
(bad)
fwait
test
stos
nop
cdq
mov
lds
int3
in
add
in
add
cld
sti
add
std
inc
(bad)
(bad)
inc
enter
test
shl
dec
lods
shr
push
mov
inc
rol
je
fadd
fs
fwait
ret
mov
(bad)
(bad)
adc
jecxz
add
repnz
in
cld
inc
jmp
add
(bad)
inc
popf
fdivr
add
int
jmp
retf
jmp
xor
fld
push
stos
shr
out
clc
dec
mov
inc
sti
cld
inc
stc
std
inc
mov
mov
cld
add
loopne
mov
ja
test
test
add
xchg
mov
inc
pushf
mov
jnp
into
loopne
add
jmp
pop
div
jmp
(bad)
(bad)
call
(bad)
inc
repnz
dec
(bad)
in
add
cld
inc
mov
int3
cld
xchg
mov
add
mov
add
mov
jne
pop
mov
call
loope
inc
pushf
stos
dec
mov
(bad)
cmp
mov
jb
mov
add
mov
scas
int
add
mov
pop
mov
in
std
jle
enter
mov
push
lods
mov
jmp
mov
(bad)
xchg
enter
mov
shl
mov
add
iret
xlat
add
lods
mov
(bad)
fdivrp
cld
(bad)
(bad)
stc
(bad)
fsqrt
idiv
fdivr
sti
dec
(bad)
sti
call
ror
jbe
shl
ret
rcr
movs
mov
rol
pushf
ror
cmps
mov
les
jle
mov
jg
loop
imul
(bad)
(bad)
mov
out
call
mov
push
mov
add
div
add
add
add
icebp
call
add
rcr
addr16
mov
shr
mov
retf
leave
sar
cmp
push
imul
cld
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
ins
xor
add
mov
add
xchg
add
inc
add
cmp
add
ins
je
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
cmp
add
add
add
or
inc
outs
je
inc
jb
arpl
or
pusha
jmp
add
cwde
sbb
add
add
add
add
add
popa
ins
gs
add
push
adc
adc
add
add
add
add
ins
popa
bound
outs
fs
outs
jne
je
add
or
mov
mov
int
xor
cmc
add
cmp
add
xor
sbb
inc
cmp
add
add
add
inc
outs
outs
je
arpl
fs
add
push
add
std
aam
shr
xor
cmc
add
in
add
add
xor
sbb
inc
xor
verw
inc
outs
outs
je
arpl
jne
je
add
or
rcl
shr
cmc
add
test
mov
adc
add
(bad)
inc
add
or
push
imul
add
add
cmps
sbb
or
add
bound
and
inc
xor
add
pop
or
arpl
push
imul
add
int
mov
mov
add
sbb
mov
add
sub
add
add
or
je
jb
push
add
add
add
add
add
sub
sbb
add
add
add
or
add
je
outs
imul
add
mov
rcl
mov
mov
iret
sti
iret
mov
jne
pop
or
add
add
sub
inc
xor
add
or
add
je
outs
imul
add
les
retf
int
add
lahf
push
mov
adc
add
add
add
add
or
outs
jo
dec
outs
imul
add
mov
cli
enter
retf
mov
lock
pop
pop
mov
adc
add
(bad)
inc
push
add
add
add
arpl
add
div
fild
add
jg
inc
adc
add
mov
retf
int
fcmove
fbstp
cli
dec
inc
mov
mov
stos
xlat
mov
lods
mov
int
int
dec
inc
add
add
add
or
arpl
add
stc
rcl
mov
retf
int
sti
iret
mov
mov
retf
int
add
jg
inc
adc
add
add
mov
int
cli
leave
call
iret
sti
iret
mov
mov
mov
mov
mov
(bad)
mov
(bad)
iret
sti
iret
mov
add
add
push
push
add
popa
ins
xor
add
or
mov
retf
int
sti
iret
mov
add
outs
sbb
adc
add
add
push
add
outs
ja
jo
imul
add
add
pop
retf
mov
neg
mov
retf
int
mov
cli
enter
iret
mov
mov
enter
retf
int
iret
iret
fidivr
mov
mov
into
stos
mov
mov
mov
ret
rcl
mov
retf
int
sti
iret
mov
mov
add
add
pop
add
movs
add
sub
pop
add
add
call
push
bound
outs
ja
gs
add
adc
outs
arpl
inc
je
cs
bound
outs
ja
gs
add
and
mov
sub
pop
add
add
add
push
add
pop
or
add
add
add
add
rcl
jae
iret
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
add
inc
add
add
add
add
mov
push
mov
jmp
movs
add
add
add
push
add
cmp
das
add
add
add
add
add
add
mov
in
and
into
int
ret
jo
add
test
add
add
add
add
add
add
je
je
jo
cmp
das
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
push
add
add
add
or
add
push
add
add
sbb
add
add
add
inc
push
add
add
or
dec
imul
ins
add
(bad)
mov
int3
in
mov
sti
add
scas
add
add
add
retf
out
cli
int3
in
mov
(bad)
mov
xlat
(bad)
int3
in
call
mov
leave
stos
add
add
add
add
or
jo
arpl
ins
imul
or
add
push
retf
add
and
sbb
add
and
and
sub
add
add
adc
arpl
inc
ins
outs
jae
push
popa
ins
imul
push
add
jmp
mov
mov
pop
js
pop
inc
adc
add
add
(bad)
rcl
loop
not
mov
mov
(bad)
shr
(bad)
movs
ret
mov
fcmovb
mov
mov
mov
mov
scas
enter
mov
mov
into
stos
mov
iret
(bad)
shr
(bad)
movs
ret
mov
fidiv
in
mov
iret
mov
mov
add
ss
ins
outs
outs
inc
imul
call
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
je
add
and
adc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
bound
xchg
dec
sub
sub
add
js
add
add
add
add
js
add
mov
mov
add
add
add
or
inc
outs
ins
ins
popa
outs
xor
add
push
add
(bad)
mov
retf
jmp
jmp
add
sbb
or
adc
add
add
add
adc
add
dec
outs
ja
jae
dec
add
add
add
add
adc
fcmove
mov
int
mov
(bad)
fisubr
add
and
and
sub
add
add
add
fs
jne
push
outs
jae
outs
add
or
mov
mov
into
mov
mov
add
adc
push
add
pop
add
add
add
add
push
add
imul
jae
push
imul
add
add
scas
mov
rol
in
mov
mov
pop
mov
pop
inc
adc
add
add
les
int
mov
int
(bad)
mov
sti
rcl
mov
aam
cli
mov
mov
into
idiv
movs
mov
mov
(bad)
mov
mov
mov
fcmovb
cli
mov
xlat
rol
leave
iret
mov
mov
rol
in
mov
mov
mov
mov
out
mov
(bad)
mov
scas
mov
loop
test
int3
in
mov
mov
inc
add
add
or
inc
outs
ins
ins
popa
outs
xor
add
or
(bad)
mov
mov
add
sbb
add
sbb
add
add
or
ins
outs
outs
inc
imul
call
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
jb
add
and
adc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
sub
add
add
add
add
add
add
rcl
add
mov
add
add
add
push
add
popa
ins
gs
add
repz
mov
rol
add
scas
add
add
add
add
sbb
add
ins
bound
add
add
add
mov
adc
add
add
push
add
int3
loope
mov
int3
loope
mov
mov
add
add
xor
add
add
xor
add
pop
add
add
or
arpl
inc
fs
jns
bound
add
out
cli
int3
in
mov
sti
add
scas
add
add
add
(bad)
retf
int
sti
iret
mov
mov
cli
int3
in
mov
loop
(bad)
mov
add
add
add
add
push
add
popa
ins
gs
add
or
mov
call
js
cwde
or
adc
add
add
add
add
add
fs
jne
push
add
or
mov
mov
enter
dec
inc
add
adc
inc
add
add
push
add
add
add
add
fs
jne
push
add
add
inc
add
or
inc
add
add
adc
add
add
pop
add
fs
outs
add
or
mov
and
add
sbb
adc
adc
sbb
mov
add
into
int3
in
add
add
add
push
add
gs
add
add
daa
add
pop
call
cwde
sbb
add
add
or
push
imul
add
add
aaa
adc
add
adc
sbb
add
and
inc
movs
add
add
push
add
outs
ja
outs
outs
je
js
dec
popa
bound
add
push
add
outs
ja
outs
outs
je
js
dec
popa
bound
add
add
push
add
add
add
arpl
adc
sbb
pop
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
jmp
nop
add
retf
into
int3
in
add
sub
add
and
add
popa
ins
xor
add
or
rol
mov
mov
js
xchg
adc
adc
add
add
or
push
gs
imul
add
or
push
gs
imul
add
add
add
test
mov
adc
add
call
add
add
add
and
add
fs
imul
add
fs
imul
loope
jbe
mov
adc
add
call
add
add
add
add
gs
popa
ins
gs
push
add
push
jae
jb
popa
ins
gs
push
add
add
js
fadd
cmp
add
push
add
call
add
add
xchg
add
cmp
add
add
bound
call
outs
arpl
inc
je
cs
bound
outs
ja
gs
add
add
or
add
or
sub
pop
add
add
add
add
add
add
add
add
rcl
jae
iret
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
add
inc
add
add
add
add
mov
push
mov
jmp
movs
add
add
add
push
add
cmp
das
add
add
add
add
add
add
mov
in
and
into
int
ret
jo
add
test
add
add
add
add
add
add
je
je
jo
cmp
das
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
push
add
add
add
or
add
push
add
add
sbb
add
add
add
inc
xchg
add
add
add
inc
fs
adc
outs
arpl
inc
je
cs
bound
outs
ja
gs
add
and
or
sub
pop
add
add
add
xor
add
dec
add
add
add
add
rcl
jae
iret
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
add
inc
add
add
add
add
mov
push
mov
jmp
movs
add
add
add
push
add
cmp
das
add
add
add
add
add
add
mov
in
and
into
int
ret
jo
add
test
add
add
add
add
add
add
je
je
jo
cmp
das
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
push
add
add
add
or
add
push
add
add
sbb
add
add
add
inc
sbb
add
es
je
add
add
and
rol
or
inc
call
push
bound
outs
ja
gs
add
adc
outs
arpl
inc
je
cs
bound
outs
ja
gs
add
and
pop
invd
add
pop
add
add
add
add
dec
add
add
add
add
rcl
jae
iret
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
add
inc
add
add
add
add
mov
push
mov
jmp
movs
add
add
add
push
add
cmp
das
add
add
add
add
add
add
mov
in
and
into
int
ret
jo
add
test
add
add
add
add
add
add
je
je
jo
cmp
das
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
push
add
add
add
or
add
push
add
add
sbb
add
add
add
inc
xor
add
daa
or
arpl
push
outs
fs
gs
add
or
mov
retf
int
retf
leave
call
push
sbb
adc
add
add
add
add
push
add
gs
add
add
add
or
add
or
add
or
push
jae
jb
outs
outs
je
outs
ins
xor
call
inc
ins
imul
jae
jb
outs
outs
je
outs
ins
xor
add
add
push
cwde
or
push
add
dec
add
add
add
add
add
add
repnz
inc
and
add
pop
add
js
je
add
je
js
jmp
add
add
or
or
push
inc
loopne
(bad)
call
add
je
add
je
jns
xor
add
inc
and
add
sub
add
inc
push
add
add
add
add
add
dec
add
add
cwde
sbb
add
add
add
add
add
push
je
imul
dec
push
inc
outs
ins
arpl
imul
je
imul
add
add
or
xchg
add
add
inc
xor
or
add
fnstenv
add
sar
add
push
add
add
and
add
add
add
mov
add
add
mov
rol
int
add
add
add
or
(bad)
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
add
add
push
add
mov
add
add
add
add
add
add
add
outs
pusha
mov
add
fsubrp
mov
mov
xor
inc
xor
add
sub
add
fs
gs
jb
push
add
retf
ror
div
int
cmps
add
sbb
mov
add
inc
sub
add
sub
add
fs
ins
gs
jb
add
or
enter
(bad)
in
std
add
sbb
mov
add
inc
sub
add
sub
add
fs
gs
je
add
or
(bad)
fcom
ret
mov
mov
add
sbb
sbb
add
add
add
inc
sub
add
sub
popa
ins
xor
add
or
mov
retf
int
call
js
cwde
or
adc
add
add
add
jae
push
imul
add
inc
outs
ins
arpl
imul
push
imul
pusha
sbb
scas
add
dec
inc
or
or
inc
xor
or
add
shr
push
or
add
jge
add
push
add
add
and
add
add
int
add
add
add
sub
or
add
in
inc
add
fsubrp
mov
or
add
add
add
add
add
add
repnz
add
add
add
in
add
add
add
add
mov
lods
add
add
add
add
add
adc
add
add
add
add
add
ret
mov
aad
mov
int
int3
aam
cmps
int
sub
and
add
add
add
in
add
or
add
or
add
aam
iret
ffreep
jmp
add
add
inc
outs
je
jb
gs
add
add
add
hlt
mov
shr
(bad)
ret
out
int3
shl
add
add
add
mov
arpl
sbb
sbb
pop
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
jmp
nop
add
retf
into
int3
in
add
or
ins
popa
bound
outs
jne
inc
gs
add
add
mov
jmp
ret
out
add
add
add
cmp
add
arpl
sbb
sbb
pop
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
jmp
nop
add
retf
into
int3
in
add
push
add
gs
xor
add
or
mov
mov
mov
in
mov
add
add
xor
add
arpl
adc
sbb
pop
add
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
jmp
nop
add
retf
into
int3
in
add
push
add
gs
xor
add
fnstenv
mov
je
cmp
das
ja
ja
xor
xor
outs
popaw
arpl
add
add
add
hlt
or
add
jmp
dec
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
addr16
add
push
fild
add
fiadd
add
fadd
add
rol
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
push
add
push
add
jmp
add
jmp
add
rol
inc
add
add
inc
add
add
jg
adc
jg
lock
push
add
push
pop
(bad)
push
aas
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
inc
add
xor
add
outs
jne
popa
imul
or
ins
outs
jne
popa
imul
inc
and
add
xor
add
outs
jne
fs
add
add
in
mov
and
add
add
inc
and
add
xor
add
outs
jne
gs
gs
add
add
add
mov
and
and
or
inc
add
add
int3
xor
and
pop
and
inc
push
add
jo
xchg
clc
sti
cmps
mov
fmulp
sbb
ja
dec
lods
xor
or
stos
add
xchg
retf
add
pop
add
add
add
ins
push
imul
add
int
mov
mov
add
add
inc
add
add
ficom
add
add
push
add
add
add
push
add
xor
add
add
add
add
add
and
add
add
add
sldt
adc
add
add
or
push
pop
add
xor
add
add
and
test
add
push
sbb
add
add
and
test
add
mov
adc
add
add
and
push
push
add
sub
add
xor
add
pusha
add
add
add
add
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
inc
and
inc
and
inc
loopne
add
inc
pusha
add
loopne
add
inc
add
add
add
add
(bad)
inc
and
add
pusha
add
pusha
mov
add
loopne
add
add
pusha
mov
rol
inc
loopne
add
add
loopne
add
add
add
and
and
inc
add
inc
add
and
and
pusha
add
pusha
add
and
mov
inc
pusha
add
and
add
inc
add
inc
add
pusha
add
mov
add
and
add
and
rol
add
shl
mov
mov
loopne
loopne
loopne
rol
add
loopne
add
loopne
add
loopne
add
jmp
add
mov
inc
shl
add
clc
lock
fdivr
add
call
inc
sar
clc
add
clc
inc
cwde
rcr
add
clc
lock
(bad)
clc
add
(bad)
clc
add
enter
clc
lock
mov
add
mov
enter
rol
add
clc
add
sbb
fcom
mov
rcr
add
lock
add
enter
rol
lock
clc
add
mov
clc
add
clc
clc
add
(bad)
inc
inc
sbb
xor
add
ror
cwde
ror
mov
loopne
add
lock
add
(bad)
inc
inc
mov
add
mov
add
rol
mov
rol
call
mov
loopne
test
loopne
mov
clc
call
add
lock
mov
add
loopne
add
lock
add
clc
clc
add
mov
inc
enter
inc
jo
add
mov
add
shr
add
mov
pop
mov
mov
add
rol
mov
enter
enter
rol
test
rol
cwde
enter
call
fadd
mov
fadd
mov
lock
add
loopne
test
loopne
enter
or
lock
call
clc
add
enter
call
clc
add
clc
clc
add
clc
clc
add
sar
add
lock
or
inc
mov
inc
clc
(bad)
inc
adc
cmp
or
add
pusha
push
add
js
add
nop
add
adc
or
add
push
mov
add
test
pop
mov
add
mov
push
cwde
mov
jo
mov
add
add
js
add
cmp
or
mov
add
mov
add
mov
add
js
add
nop
rol
nop
rol
mov
add
mov
rol
loopne
add
js
add
mov
add
mov
add
mov
add
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
or
rol
add
rol
add
rol
cwde
rcl
mov
mov
add
nop
fadd
add
fadd
and
fadd
xor
fadd
cwde
rcr
adc
fadd
rcl
add
fcomp
add
fcomp
add
fcomp
add
fcomp
add
call
add
add
arpl
add
add
add
add
add
add
and
add
fimul
scas
add
loope
aad
data16
add
add
jecxz
jle
(bad)
(bad)
retf
xchg
fldenv
(bad)
fcomip
mul
stc
add
out
dec
adc
enter
add
mov
imul
out
add
cmc
adc
inc
jmp
push
push
retf
sbb
jecxz
fcomp
mov
pop
pop
pop
imul
xlat
and
inc
rcr
ja
add
add
add
inc
push
dec
fstp
enter
pop
pop
dec
dec
dec
mov
mov
pop
je
add
add
rol
add
add
push
iret
test
leave
xchg
xchg
xchg
xchg
fcomip
clc
mov
pop
and
(bad)
jns
out
out
loopne
inc
add
add
add
loop
pop
js
push
inc
leave
loopne
cmc
inc
mov
xor
mov
inc
out
add
(bad)
hlt
aad
adc
loopne
add
add
add
and
adc
cmc
pusha
mov
mov
inc
test
dec
dec
dec
mov
movs
leave
mov
add
retf
and
ins
pusha
xchg
pop
add
cwde
adc
add
push
aad
jns
hlt
out
fucomp
ins
fild
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
mov
shl
inc
movs
push
sahf
repz
mov
cld
add
and
loope
jns
push
dec
sub
dec
dec
dec
dec
dec
dec
dec
mov
lods
dec
mov
addr16
mov
push
add
add
(bad)
(bad)
test
or
dec
dec
dec
pop
pop
pop
test
jmp
out
push
add
add
add
jbe
(bad)
fadd
or
dec
dec
dec
or
pop
dec
jmp
push
push
inc
cmp
push
add
add
add
add
cmp
dec
or
dec
dec
dec
dec
dec
or
or
fisttp
pop
add
pop
add
ret
ins
adc
dec
mov
dec
pusha
pusha
pusha
pusha
dec
dec
dec
mov
mov
jmp
inc
movs
ficomp
add
add
popf
cmc
(bad)
(bad)
cmp
cmps
pusha
push
pusha
pusha
pusha
pusha
pusha
dec
push
dec
mov
push
pop
icebp
pop
aad
(bad)
inc
jle
(bad)
(bad)
out
mov
mov
push
push
push
push
push
pusha
clc
push
dec
or
lea
mov
add
(bad)
mov
mov
cmp
add
add
js
mov
lods
pop
pop
lea
add
add
(bad)
mov
dec
add
add
push
push
push
push
add
out
mov
mov
mov
pop
lods
push
imul
jle
mov
dec
dec
pusha
pusha
scas
add
ins
ins
ins
push
add
js
push
push
clc
dec
pop
pop
lea
mov
mov
add
add
add
shr
push
add
adc
adc
push
pusha
push
add
or
push
(bad)
fcmovnb
call
add
add
add
add
xlat
cmp
mov
add
push
mov
adc
jns
ins
add
pusha
pusha
lods
mov
push
(bad)
in
sbb
add
add
mov
ins
jns
jns
push
js
push
add
or
pop
xchg
mov
add
xchg
sbb
push
js
adc
adc
mov
cmps
mov
push
or
mov
xchg
add
lock
xchg
cmc
cmps
add
add
ins
push
add
mov
mov
push
mov
jp
mov
add
add
mov
cmc
cmps
lods
pusha
pusha
pusha
js
mov
mov
cli
shl
xlat
lahf
sbb
xchg
bound
nop
nop
mov
popa
xchg
xchg
outs
popa
jp
bound
push
push
push
rcr
add
add
push
dec
push
push
pop
jne
xchg
jnp
sbb
popa
outs
xchg
xchg
pop
jae
push
push
push
push
pop
rcl
cld
sahf
lahf
push
pop
dec
push
push
push
push
test
push
cmps
test
pop
pop
push
push
push
push
rcl
pop
jo
add
push
dec
push
push
dec
push
push
push
push
push
push
push
push
push
push
push
pop
push
push
push
push
push
push
xchg
pop
jae
add
in
push
pop
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
pop
dec
push
push
push
push
push
push
pop
xchg
sti
jno
add
add
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
jae
pop
jl
add
add
test
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
pop
pop
push
push
push
push
pop
(bad)
(bad)
pop
jbe
add
add
push
dec
pop
pop
pop
dec
dec
dec
dec
push
push
dec
pop
push
push
push
push
pop
popa
pop
bound
add
push
push
test
sti
jne
test
dec
dec
push
test
pop
push
(bad)
rol
addr16
in
outs
pop
(bad)
xchg
(bad)
pop
pop
test
push
push
pop
test
add
jg
jge
jge
jno
pop
push
pop
pop
push
pop
xchg
je
add
add
add
xlat
jo
pop
jno
jno
jnp
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
or
add
add
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
add
loopne
add
mov
add
mov
add
and
and
inc
add
add
and
add
rol
loopne
add
pusha
inc
and
add
add
add
and
inc
shl
add
and
loopne
inc
add
inc
pusha
add
pusha
add
inc
pusha
add
add
add
pusha
add
mov
mov
add
inc
mov
add
pusha
mov
add
and
mov
rol
and
loopne
and
loopne
and
add
loopne
add
jmp
add
loopne
add
inc
loopne
inc
add
inc
cwde
rcr
add
mov
add
clc
clc
add
(bad)
clc
add
clc
inc
rcr
add
(bad)
clc
add
(bad)
inc
nop
enter
call
mov
add
add
clc
lock
clc
lock
sar
add
inc
inc
js
add
rol
loopne
add
rcr
add
clc
clc
add
enter
js
add
mov
or
enter
enter
enter
rol
call
call
fadd
test
loopne
mov
cwde
call
add
mov
add
loopne
add
clc
clc
add
(bad)
inc
clc
(bad)
inc
xor
mov
add
test
push
cwde
test
fcom
test
push
js
add
mov
add
cwde
rol
cwde
rol
mov
rol
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
mov
rol
or
add
loopne
add
mov
fadd
inc
mov
add
enter
enter
fcomp
add
call
loopne
or
loopne
test
loopne
add
call
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
(bad)
call
add
clc
lock
clc
lock
fdivr
add
call
clc
add
clc
clc
add
clc
clc
add
(bad)
inc
test
add
adc
and
sbb
and
or
add
inc
dec
add
mov
adc
add
pop
pop
add
pop
add
pusha
push
add
dec
jo
sub
add
push
jo
sbb
add
push
jo
or
add
jo
add
add
push
js
sbb
mov
inc
mov
and
add
js
add
sbb
pop
sbb
push
mov
add
cwde
mov
add
mov
test
dec
sub
cmp
test
cmp
test
push
nop
test
pusha
nop
test
push
nop
test
js
test
pop
cwde
test
pusha
cwde
test
jo
test
add
mov
or
mov
dec
xor
jo
mov
cmp
mov
push
cwde
mov
js
mov
mov
mov
add
cmp
inc
mov
add
nop
mov
add
mov
add
mov
add
test
add
mov
add
mov
add
mov
add
sar
add
add
or
rol
mov
add
cwde
rol
cwde
rol
mov
rol
test
add
add
dec
pop
pop
xchg
add
pop
cmp
add
mov
adc
inc
pop
add
add
outs
jnp
add
pusha
pusha
pusha
cmc
add
cld
xor
add
add
add
add
call
push
dec
dec
dec
bound
add
aaa
call
add
je
mov
dec
test
jbe
test
popa
jb
xor
ja
add
ins
add
xchg
xchg
mov
loop
popa
popa
mov
fdivr
push
add
sbb
add
add
jae
mov
test
cmp
cmp
cmp
jbe
xor
pop
mov
hlt
dec
add
add
aas
xchg
test
cmp
cmp
xor
jecxz
dec
call
add
add
add
add
dec
dec
or
cmp
push
popa
or
pop
pop
adc
add
add
add
in
add
dec
dec
dec
dec
or
popf
outs
js
test
fwait
add
add
add
add
xchg
xchg
aas
aas
aas
dec
aas
aas
arpl
xor
add
stos
mov
aas
aas
aas
icebp
icebp
add
dec
test
add
xchg
mov
inc
inc
aas
add
cmp
bound
add
add
add
xchg
inc
pcmpgtw
add
dec
bound
loope
push
fnsave
mov
aas
aas
aas
cmp
dec
(bad)
fnstenv
add
retf
lods
stos
cmps
mov
call
push
lea
xchg
mov
(bad)
xchg
add
inc
xchg
movs
cmps
mov
arpl
dec
ins
imul
inc
inc
(bad)
fbld
or
mov
adc
dec
dec
cmp
add
mov
cmp
dec
ret
dec
push
push
push
mov
cmp
inc
inc
jp
add
jp
mov
mov
pop
mov
cmp
dec
jnp
inc
cmp
ds
cmp
add
add
ds
cmp
cmp
cmp
inc
cmp
inc
cmp
jle
cmp
cmp
cmp
cmp
inc
cmp
cmp
add
dec
inc
inc
cmp
pop
inc
inc
ds
dec
cmp
inc
cmp
add
add
dec
cmp
dec
inc
cmp
push
inc
inc
cmp
add
add
xchg
mov
dec
inc
dec
inc
push
jle
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
(bad)
inc
mov
mov
rol
mov
retf
leave
rol
cmp
add
loop
add
(bad)
add
out
add
mov
add
mov
add
(bad)
cld
add
std
stc
add
cli
test
(bad)
sti
add
(bad)
sti
add
ror
jbe
rol
in
add
mov
mov
push
lods
mov
add
mov
add
mov
scas
add
mov
add
loope
add
pushf
stos
add
mov
add
call
jb
mov
add
loopne
add
jmp
pop
div
add
(bad)
inc
adc
inc
add
clc
add
(bad)
in
add
cld
add
mov
int3
add
stos
rol
sub
add
mov
add
sti
cld
add
stc
std
add
mov
mov
add
mov
add
cdq
loopne
dec
xchg
rol
(bad)
adc
jecxz
add
repnz
in
cld
add
jmp
add
inc
add
jmp
add
jecxz
add
jmp
xor
mov
add
mov
cld
add
fscale
add
(bad)
inc
add
test
test
rol
dec
lods
rol
push
mov
add
rol
add
fadd
add
out
add
shr
add
sahf
rol
add
stos
loop
add
add
mov
fild
xor
(bad)
fld
fwait
test
stos
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
add
iret
iret
add
fld
and
ret
rol
icebp
out
add
rol
add
in
add
in
rol
loop
(bad)
add
add
add
jne
ja
jns
jnp
jge
jg
add
addr16
ins
outs
outs
jo
jb
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
add
dec
dec
dec
dec
dec
dec
push
push
push
push
push
add
add
inc
inc
inc
inc
inc
inc
add
add
add
xor
xor
ss
cmp
cmp
cmp
add
add
es
sub
sub
sub
cs
xor
add
add
sbb
push
pop
and
and
and
add
add
add
add
adc
push
pop
sbb
sbb
add
add
add
add
or
adc
add
add
add
add
add
add
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
add
add
add
add
add
add
and
jnp
ret
fwait
mov
repz
cld
add
cld
std
add
cli
stc
add
jmp
cli
add
(bad)
std
add
add
add
(bad)
inc
add
add
mov
rol
(bad)
retf
into
add
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
add
add
loope
clc
add
(bad)
loope
aad
in
add
(bad)
add
(bad)
inc
cmc
icebp
call
add
std
(bad)
cmp
ffreep
call
iret
test
jmp
loop
push
bnd
adc
cli
repz
add
add
add
add
(bad)
cli
add
clc
test
in
add
(bad)
cld
add
cld
test
(bad)
sti
add
(bad)
cli
add
(bad)
clc
add
mov
add
repnz
hlt
cmc
dec
(bad)
bnd
call
clc
js
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
add
in
fild
std
(bad)
inc
(bad)
(bad)
(bad)
js
loopne
js
int
js
xlat
out
mov
repnz
js
stc
jmp
div
loop
lock
div
in
xchg
out
in
call
jmp
fidivr
jmp
jecxz
iret
in
out
cli
jne
lock
jp
hlt
repnz
div
add
jmp
add
(bad)
(bad)
inc
add
add
repz
loop
ins
pushf
mov
add
mov
stos
mov
add
into
std
inc
mov
(bad)
(bad)
cmp
mov
jmp
test
enter
xlat
aad
iret
aam
xor
xchg
mov
push
mov
push
mov
jmp
mov
(bad)
cmp
mov
popa
xchg
mov
popf
mov
aam
jmp
out
(bad)
(bad)
out
add
cmc
jmp
(bad)
push
mov
push
rcr
sub
lods
retf
rcr
retf
clc
cmp
(bad)
call
(bad)
call
(bad)
(bad)
call
add
add
(bad)
(bad)
inc
out
in
in
out
add
icebp
repz
dec
mov
sub
add
mov
mov
ins
fdiv
(bad)
pop
out
sti
stc
or
in
add
clc
add
mov
and
mov
adc
inc
imul
add
idiv
add
stc
cli
add
cli
add
iret
inc
gs
ret
(bad)
(bad)
(bad)
jmp
call
bnd
call
mov
(bad)
cld
and
(bad)
cli
add
jmp
pusha
pushf
(bad)
jge
ret
in
(bad)
in
call
jmp
push
cli
clc
repnz
out
jecxz
hlt
lock
add
pop
add
mov
inc
mov
retf
mov
jmp
in
(bad)
call
in
dec
loop
add
loopne
fwait
mov
loop
outs
movs
inc
test
inc
mov
(bad)
cld
add
stc
inc
mov
clc
inc
mov
clc
inc
movs
cli
inc
stos
cld
inc
mov
sti
pop
mov
sar
call
push
test
into
sti
cdq
(bad)
(bad)
(bad)
xor
(bad)
inc
mov
push
shl
std
or
jmp
xchg
cld
loope
mov
div
in
loope
in
call
fiadd
add
add
repnz
inc
(bad)
(bad)
inc
mov
fild
ret
arpl
stc
mov
(bad)
sti
pop
mov
fdivrp
add
(bad)
inc
fcos
inc
xchg
(bad)
std
add
inc
test
inc
mov
(bad)
inc
(bad)
inc
into
(bad)
inc
sar
inc
aad
inc
fdivr
inc
sar
dec
ret
(bad)
inc
lods
(bad)
inc
mov
stc
inc
mov
(bad)
(bad)
(bad)
cld
jmp
jge
ficomp
loope
daa
in
cli
std
add
retf
inc
(bad)
(bad)
(bad)
xor
(bad)
dec
mov
cld
sbb
jmp
(bad)
scas
(bad)
in
(bad)
mov
ffree
add
mov
mov
pop
push
xchg
mov
std
addr16
(bad)
inc
out
call
mov
aad
add
in
inc
je
(bad)
adc
call
repz
push
enter
mov
fsin
or
mov
add
mov
adc
sar
mov
in
(bad)
(bad)
inc
mov
inc
pushf
cli
sti
push
mov
(bad)
clc
out
fcom
js
stos
add
mov
add
jecxz
dec
lea
jmp
(bad)
(bad)
dec
fsub
inc
scas
iret
dec
(bad)
inc
mov
movs
(bad)
fcmovu
fdivr
(bad)
mov
aad
scas
stos
aad
stos
mov
add
add
(bad)
inc
mov
out
mov
int3
mov
mov
in
repnz
and
(bad)
dec
(bad)
inc
js
dec
mov
sar
mov
jecxz
add
add
inc
cmp
add
fdivr
add
mov
inc
pop
xchg
call
mov
inc
(bad)
(bad)
cld
sbb
(bad)
ficom
xchg
cmps
sub
mov
inc
js
std
call
inc
ret
es
mov
dec
cli
inc
(bad)
cli
or
fst
test
xlat
push
out
(bad)
and
aad
cli
add
add
lods
int3
loopne
mov
shl
je
mov
clc
stc
push
in
cmc
dec
mov
call
out
idiv
add
ja
inc
fsubr
dec
stos
loopne
or
(bad)
add
sti
inc
sar
inc
sar
inc
sar
inc
sar
inc
sar
inc
ret
add
mov
call
movs
(bad)
fcos
stc
pop
mov
rol
int3
aam
scas
inc
test
sti
add
idiv
cmp
cld
push
(bad)
(bad)
inc
in
hlt
std
inc
nop
lods
push
aad
pop
fsub
in
mov
(bad)
loop
ret
add
add
add
jle
ret
jne
xchg
ret
cli
(bad)
clc
daa
stc
(bad)
inc
lock
inc
mov
fdivr
or
int3
call
(bad)
(bad)
call
popf
(bad)
inc
mov
(bad)
inc
sar
inc
sar
inc
iret
cld
inc
iret
std
inc
int3
cld
inc
int
inc
leave
std
inc
leave
cld
inc
into
(bad)
inc
into
(bad)
inc
stos
in
add
stos
inc
cmps
(bad)
inc
int
cld
test
cmc
fild
ror
add
fdivr
dec
mov
(bad)
ds
inc
jmp
inc
fucomp
inc
rcr
(bad)
cld
cli
cmc
add
loopne
add
in
push
fcmovbe
mov
leave
rcl
out
cld
add
mov
(bad)
(bad)
sub
push
add
(bad)
inc
repz
inc
out
inc
popf
(bad)
add
idiv
or
jns
inc
(bad)
inc
sar
inc
sar
inc
sar
inc
xlat
(bad)
inc
xlat
std
inc
xlat
(bad)
inc
(bad)
std
inc
aam
inc
aam
inc
sar
inc
leave
cld
inc
(bad)
sti
inc
sar
inc
retf
add
popf
(bad)
(bad)
adc
repnz
into
mov
ret
(bad)
(bad)
adc
add
inc
scas
icebp
inc
(bad)
inc
mov
popf
jmp
jmp
(bad)
aad
add
call
loopne
stc
clc
repz
add
add
fsubr
sti
add
jmp
std
and
mov
cld
or
sti
dec
mov
stos
dec
xchg
(bad)
jg
inc
(bad)
inc
(bad)
std
inc
fdivr
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
(bad)
inc
xlat
std
inc
sar
inc
iret
std
inc
(bad)
cld
inc
int3
(bad)
inc
mov
test
(bad)
and
mov
push
(bad)
iret
dec
mov
inc
sar
add
mov
mov
cld
out
call
mov
repnz
fistp
aad
cmps
ret
mov
fcmovbe
mov
add
add
retf
add
retf
(bad)
inc
sti
test
(bad)
jmp
rcr
out
outs
test
dec
jno
inc
xchg
inc
mov
inc
mov
clc
inc
(bad)
inc
(bad)
inc
(bad)
inc
loop
inc
in
inc
in
inc
out
inc
out
inc
out
inc
out
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
iret
(bad)
inc
(bad)
cld
inc
xlat
(bad)
dec
(bad)
iret
dec
xchg
sar
sar
std
add
cld
add
idiv
add
(bad)
(bad)
adc
(bad)
inc
(bad)
loope
cs
(bad)
jmp
(bad)
push
in
(bad)
(bad)
(bad)
(bad)
(bad)
call
ficom
loope
lds
in
retf
add
jmp
add
add
fwait
ret
(bad)
(bad)
std
add
(bad)
rol
mov
js
mov
sbb
scas
call
(bad)
cli
xchg
repz
(bad)
cmp
(bad)
inc
(bad)
cld
inc
(bad)
inc
loop
inc
in
inc
out
inc
jmp
(bad)
inc
jmp
inc
jmp
inc
jmp
add
std
inc
loop
inc
(bad)
inc
fdivr
inc
(bad)
(bad)
inc
into
cld
inc
fdivr
inc
mov
dec
pop
xchg
call
(bad)
lock
pushf
int
add
loope
dec
(bad)
(bad)
inc
(bad)
std
dec
xchg
mov
cld
imul
jmp
repz
jmp
(bad)
jne
ffreep
(bad)
stc
stc
bnd
(bad)
dec
(bad)
(bad)
inc
add
add
cli
stc
add
(bad)
inc
jbe
mov
mov
cdq
add
(bad)
(bad)
cld
idiv
stc
call
(bad)
inc
repz
inc
call
sti
inc
in
(bad)
inc
cmc
(bad)
inc
out
(bad)
inc
out
std
inc
out
(bad)
inc
out
(bad)
inc
out
(bad)
inc
in
std
inc
jmp
add
sti
inc
loope
inc
(bad)
inc
fdivr
dec
shr
pop
jge
inc
popf
dec
(bad)
jmp
add
(bad)
inc
xchg
(bad)
inc
mov
add
mov
mov
out
aam
out
fnstsw
(bad)
jmp
(bad)
std
jno
div
add
div
add
add
add
jecxz
add
add
add
(bad)
dec
mov
fdivr
enter
(bad)
jmp
adc
push
cmc
cli
inc
(bad)
(bad)
inc
cmc
sti
call
aam
inc
cli
inc
repz
inc
repnz
inc
repnz
inc
icebp
(bad)
inc
icebp
(bad)
inc
out
std
inc
in
(bad)
inc
clc
(bad)
inc
out
inc
fdivrp
inc
loop
dec
mov
aad
add
idiv
add
(bad)
inc
mov
inc
mov
out
inc
mov
inc
jmp
inc
(bad)
mov
call
in
mov
hlt
in
ss
imul
add
(bad)
inc
std
(bad)
sti
add
out
add
std
in
or
cmp
out
(bad)
(bad)
scas
sti
std
dec
mov
cmp
or
pop
pop
dec
daa
sub
and
dec
idiv
add
(bad)
inc
clc
cld
inc
cmc
cld
inc
cmc
std
inc
cmc
std
inc
idiv
inc
lock
dec
enter
idiv
inc
in
(bad)
inc
fdivrp
inc
fdivr
inc
jecxz
inc
into
(bad)
inc
ret
add
cli
inc
mov
inc
lods
(bad)
inc
mov
stc
add
popf
mov
jae
lods
add
add
add
(bad)
inc
jl
rol
mov
int
inc
lea
inc
(bad)
(bad)
call
hlt
(bad)
dec
repz
inc
movs
lods
call
or
inc
std
(bad)
inc
sti
std
inc
std
(bad)
inc
cld
(bad)
inc
cld
(bad)
inc
idiv
inc
(bad)
(bad)
dec
fcmovu
dec
sbb
dec
sti
dec
jmp
dec
int3
jmp
add
(bad)
std
inc
sar
add
sti
inc
movs
idiv
add
call
scas
push
sub
jmp
add
repz
(bad)
sti
add
add
mov
rcl
inc
mov
(bad)
scas
(bad)
(bad)
dec
in
inc
in
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
std
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
std
(bad)
inc
(bad)
(bad)
inc
cld
(bad)
inc
idiv
inc
cli
cld
dec
mov
call
pop
and
call
cmp
or
repnz
int
inc
ret
add
sti
inc
lods
stc
inc
lods
(bad)
stc
or
sar
pop
xchg
mov
dec
and
ret
add
fninit
add
fsub
add
mov
add
hlt
retf
xchg
mov
call
out
sti
inc
jmp
add
cli
inc
icebp
stc
inc
cmc
stc
inc
cld
std
dec
(bad)
(bad)
call
std
(bad)
call
std
std
call
std
std
call
std
std
inc
(bad)
(bad)
inc
cld
(bad)
inc
stc
(bad)
inc
(bad)
(bad)
dec
cmc
sti
call
test
cdq
call
sahf
cmps
dec
into
(bad)
add
(bad)
inc
retf
add
std
inc
mov
cli
inc
lods
stc
inc
scas
std
std
add
xchg
stos
jecxz
int
cmps
movs
ret
shl
call
add
jecxz
add
add
add
mov
mov
dec
sbb
mov
(bad)
inc
out
inc
jmp
inc
icebp
sti
inc
clc
cld
inc
(bad)
(bad)
inc
std
(bad)
call
std
cld
jmp
std
jmp
(bad)
cld
call
cld
(bad)
call
std
(bad)
inc
cld
inc
repnz
inc
hlt
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
loop
inc
sar
inc
int3
(bad)
inc
(bad)
add
inc
test
(bad)
inc
jns
jmp
xchg
inc
(bad)
mov
jb
iret
fld
xchg
mov
add
fucomip
test
add
add
(bad)
call
lods
ret
sbb
mov
(bad)
jmp
std
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
cli
(bad)
inc
std
(bad)
call
std
(bad)
cmp
std
std
jmp
cld
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
hlt
clc
inc
out
sti
inc
jmp
cli
inc
(bad)
inc
(bad)
inc
sar
inc
int3
(bad)
inc
(bad)
add
std
inc
mov
dec
push
aam
pop
cdq
lods
stc
pop
cdq
lods
fcom
retf
in
cmc
test
jecxz
cli
add
fsub
add
fsubp
add
gs
inc
popf
mov
dec
xchg
movs
call
bound
or
dec
cmp
call
aas
inc
call
cli
sti
jmp
std
std
jmp
std
std
jmp
std
std
dec
(bad)
(bad)
dec
out
inc
(bad)
(bad)
inc
std
(bad)
inc
icebp
std
inc
in
inc
loopne
inc
fdivr
inc
sar
inc
retf
add
(bad)
inc
leave
(bad)
inc
mov
call
mov
call
(bad)
mov
(bad)
cmp
ror
test
stc
add
(bad)
sti
add
leave
ror
(bad)
mov
mov
cmp
outs
(bad)
sbb
and
or
inc
inc
dec
cmp
dec
lea
dec
cli
jmp
cli
sti
jmp
cld
cld
jmp
std
cld
call
cld
inc
(bad)
(bad)
call
fdivr
or
sbb
call
(bad)
or
(bad)
inc
std
(bad)
inc
hlt
(bad)
inc
(bad)
inc
fdivr
inc
sar
inc
hlt
call
mov
xchg
(bad)
cmp
xchg
inc
mov
(bad)
jle
mov
jmp
repnz
add
test
add
std
cli
add
rcr
add
retf
sar
stos
fsub
cli
inc
mov
cmp
ret
call
loop
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
dec
and
dec
add
or
or
dec
aas
aas
dec
jns
inc
idiv
adc
movs
jmp
outs
test
inc
sbb
jne
ret
(bad)
cmp
jg
(bad)
movs
leave
aad
jmp
cmc
test
sti
inc
std
(bad)
sti
add
mov
add
scas
rol
out
lock
mov
mov
(bad)
aas
sbb
sub
xchg
jmp
fwait
stos
jmp
scas
mov
call
loopne
or
lock
repz
out
icebp
inc
icebp
cmc
call
lock
call
test
dec
pusha
imul
adc
jmp
inc
push
(bad)
cmp
(bad)
cmp
(bad)
dec
mov
inc
aad
push
mov
stc
push
mov
dec
push
pushf
scas
add
in
sti
add
(bad)
sti
add
mov
mov
mov
leave
sar
loop
(bad)
stc
xlat
(bad)
clc
jmp
test
dec
stos
(bad)
aas
jle
(bad)
cmp
ins
mov
aas
jno
push
jbe
push
jl
push
xchg
push
jg
push
adc
cmp
sbb
xchg
dec
jmp
inc
aam
call
int3
sar
outs
mov
call
lods
mov
pop
cwde
mov
mov
add
inc
retf
add
fsub
addr16
(bad)
sar
retf
div
cli
int3
hlt
icebp
(bad)
(bad)
std
idiv
aad
idiv
ret
jmp
leave
call
mov
dec
mov
(bad)
cmp
jg
(bad)
cmp
(bad)
cmp
cdq
(bad)
cmp
aas
sbb
jmp
mov
call
rcl
call
sar
xchg
int
dec
lods
mov
cli
je
mov
int3
fcmovnu
push
retf
add
add
add
(bad)
inc
rcr
jecxz
call
ret
iret
call
fdivr
cld
std
enter
int3
hlt
repnz
sar
cmc
(bad)
fdivr
cli
call
(bad)
cli
call
div
(bad)
mov
(bad)
jmp
iret
xlat
call
rcr
call
rcr
jmp
in
dec
hlt
hlt
jmp
into
aam
xchg
into
aam
nop
int3
sar
nop
int3
sar
mov
sar
cdq
rcr
push
mov
inc
scas
ret
(bad)
call
add
add
in
repnz
add
add
cli
stc
add
mov
add
ins
cmps
mov
retf
repz
cld
sar
hlt
std
retf
hlt
repnz
cmc
repnz
hlt
icebp
dec
hlt
icebp
dec
div
call
sti
idiv
aad
idiv
xlat
(bad)
stc
(bad)
(bad)
cli
(bad)
(bad)
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
call
std
stc
call
cli
idiv
aam
idiv
enter
(bad)
retf
sar
(bad)
retf
sar
xchg
int
call
retf
sar
xchg
rcl
call
mov
xchg
int
jl
leave
sti
outs
cmps
mov
mov
xlat
fiadd
(bad)
(bad)
sti
add
add
add
(bad)
xchg
xchg
mov
retf
sti
(bad)
sti
stc
leave
repz
dec
cmc
repnz
div
dec
cmc
repnz
cmc
repnz
hlt
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
repz
dec
div
dec
cmc
hlt
call
retf
xchg
int
dec
iret
aam
mov
sar
pop
pushf
mov
sahf
xlat
(bad)
ja
ret
popf
scas
movs
push
xchg
cmps
add
lods
add
(bad)
cld
add
mov
add
(bad)
dec
jno
mov
mov
(bad)
(bad)
std
(bad)
repnz
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
div
dec
div
dec
div
dec
div
dec
cmc
repnz
div
dec
cmc
hlt
call
retf
xchg
int
dec
rcl
(bad)
jge
leave
dec
cmps
dec
stos
mov
scas
xchg
mov
add
(bad)
sti
add
repnz
jmp
hlt
jnp
mov
out
xlat
std
clc
dec
repz
dec
div
dec
cmc
repnz
div
dec
div
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repz
div
dec
cmc
repnz
div
dec
repnz
call
retf
sar
xchg
int3
sar
nop
int3
sar
xchg
rcl
jmp
mov
(bad)
push
mov
(bad)
rcr
in
rcl
add
repz
add
add
add
test
sub
add
mov
movs
mov
aad
clc
clc
sar
hlt
dec
hlt
icebp
call
clc
cmc
dec
div
dec
repnz
repz
dec
repz
dec
div
call
clc
hlt
dec
div
dec
cmc
repnz
cmc
repnz
hlt
icebp
dec
div
inc
out
out
dec
int3
sar
(bad)
int3
sar
xchg
rcl
dec
jle
(bad)
gs
(bad)
jp
(bad)
std
dec
xchg
cmps
icebp
fwait
ror
sub
cwde
mov
retf
mov
add
test
dec
div
stc
sar
clc
cli
mov
fcmovu
cli
lahf
fcomp
std
popf
(bad)
(bad)
lahf
xlat
fdivr
test
in
inc
icebp
icebp
call
clc
hlt
call
div
call
div
call
cld
stc
push
(bad)
iret
call
iret
aam
mov
sar
push
cwde
lods
push
mov
std
pop
mov
(bad)
(bad)
inc
add
add
(bad)
add
jmp
add
cld
std
add
(bad)
sbb
retf
ror
xchg
ror
mov
mov
arpl
call
lods
inc
movs
call
mov
fs
mov
call
loopne
(bad)
mov
jmp
xlat
call
int3
sar
xchg
int
dec
ret
int
movs
fucom
std
add
test
dec
popf
mov
rol
std
(bad)
sti
add
jmp
add
loop
out
out
push
mov
fdivr
ror
cwde
mov
(bad)
inc
test
mov
push
mov
push
sar
mov
inc
sar
xchg
iret
(bad)
call
iret
(bad)
call
mov
mov
xchg
mov
les
nop
mov
out
mov
xlat
loopne
mov
fisttp
jmp
retf
(bad)
add
(bad)
call
(bad)
call
(bad)
(bad)
call
sti
stc
cli
xchg
mov
mov
mov
cld
push
mov
push
(bad)
jns
(bad)
mov
call
mov
dec
(bad)
cmps
cld
cwde
mov
jmp
cli
sti
push
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
inc
mov
add
in
sub
dec
mov
(bad)
push
add
(bad)
inc
(bad)
push
add
imul
add
scas
add
mov
xor
mov
in
int3
aam
fcmove
(bad)
(bad)
(bad)
push
icebp
fild
(bad)
stc
jmp
add
div
add
add
jmp
fld
lock
repnz
loope
std
(bad)
sti
add
es
xchg
in
add
enter
mov
aam
rcl
xor
out
or
out
lock
pop
mov
fcom
shr
bound
iret
shr
aam
push
jmp
hlt
les
cmc
out
jecxz
ror
mov
repnz
in
lods
rcr
mov
jecxz
ds
inc
jns
test
add
std
mov
les
add
add
lods
(bad)
fld
pop
xchg
mov
add
mov
dec
idiv
add
into
inc
pop
push
dec
mov
inc
(bad)
(bad)
add
inc
xchg
jmp
jns
call
jmp
add
jecxz
pushf
push
test
cld
xor
icebp
cld
add
out
add
mov
mov
(bad)
(bad)
test
test
(bad)
(bad)
cld
add
test
ret
stos
retf
fild
in
cli
pop
(bad)
sti
add
sar
mov
inc
stos
sti
inc
mov
(bad)
sti
add
(bad)
cld
add
(bad)
sti
add
sti
add
into
idiv
(bad)
dec
lea
(bad)
sub
jmp
cld
dec
in
cmc
cli
add
cwde
mov
(bad)
mov
in
cwde
out
retf
idiv
add
(bad)
fild
je
rol
fucomp
push
stc
cld
sti
add
out
pop
jnp
dec
xchg
sar
add
fdivr
or
ret
inc
cwde
(bad)
dec
stos
sar
movsx
inc
mov
cli
push
mov
(bad)
(bad)
cld
fldcw
jbe
jbe
lods
in
cmp
sti
cld
call
fucomip
jmp
(bad)
(bad)
add
ret
mov
mov
aad
test
pop
lahf
mov
loopne
xchg
(bad)
fdiv
jl
repnz
push
fsubr
dec
cld
inc
cwde
retf
inc
retf
call
jecxz
adc
mov
inc
mov
inc
scas
call
inc
cmp
or
push
jge
adc
cmp
or
mov
std
std
add
idiv
pop
mov
repz
loope
add
fidivr
inc
xor
jo
loopne
cmp
push
add
fdivrp
pop
mov
fdivr
adc
jmp
iret
(bad)
inc
aad
inc
fdivr
inc
aam
inc
sar
inc
sar
inc
sar
inc
shl
push
xchg
inc
pushf
retf
(bad)
fdivrp
mov
jmp
test
adc
inc
out
stc
and
enter
mov
mov
jecxz
(bad)
fwait
test
into
fiadd
(bad)
and
iret
ficom
retf
out
add
(bad)
std
pop
mov
sar
or
jmp
aad
inc
fdivr
inc
fscale
inc
xlat
std
inc
aad
inc
sar
inc
int3
(bad)
inc
(bad)
(bad)
inc
(bad)
retf
mov
fdivr
scas
ret
(bad)
in
and
(bad)
mov
mov
push
jmp
(bad)
retf
in
dec
div
(bad)
(bad)
fld
cmps
(bad)
fld
(bad)
in
add
out
add
loop
pop
xchg
mov
scas
sub
inc
test
inc
fdivrp
inc
fdivr
inc
jecxz
inc
in
inc
in
inc
in
inc
loopne
inc
(bad)
inc
(bad)
cld
inc
retf
add
(bad)
dec
xchg
leave
inc
mov
inc
test
inc
in
(bad)
inc
cmc
jmp
mov
std
loope
retf
push
jmp
les
jnp
pop
or
shr
add
(bad)
inc
xor
out
sub
inc
(bad)
inc
loop
inc
out
(bad)
inc
out
(bad)
inc
jmp
inc
in
(bad)
inc
in
std
inc
call
cld
inc
(bad)
inc
aad
inc
aad
inc
mov
dec
mov
(bad)
inc
shr
sti
jb
mov
lahf
lock
ins
jmp
int
cmc
imul
pop
rcl
retf
add
call
add
rcl
add
out
add
in
add
loopne
cmp
stos
sar
ret
std
(bad)
std
or
inc
xchg
mov
inc
(bad)
dec
loopne
inc
repz
inc
icebp
cld
inc
icebp
(bad)
inc
in
std
inc
cmc
(bad)
inc
icebp
(bad)
inc
(bad)
inc
mov
into
inc
cmc
inc
mov
fdivr
add
mov
aam
jecxz
(bad)
out
out
in
repz
(bad)
(bad)
inc
mov
mov
cmp
scas
aam
mov
fucomip
inc
pop
pusha
call
push
pop
dec
int
inc
(bad)
(bad)
inc
idiv
inc
cmc
sti
inc
sti
(bad)
inc
mov
mov
inc
loope
inc
(bad)
add
(bad)
inc
mov
cli
or
fdivr
jae
cmps
pop
jne
cmps
add
add
ins
add
add
add
ret
add
mov
cmp
(bad)
(bad)
stos
std
(bad)
std
inc
out
(bad)
inc
cld
(bad)
dec
out
inc
sti
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sti
cld
inc
cld
(bad)
inc
iret
sar
cmovl
adc
call
outs
dec
(bad)
cmps
inc
aam
inc
mov
clc
inc
stos
std
stc
push
xchg
fdivr
pop
mov
add
mov
je
rol
jo
add
(bad)
sti
add
add
mov
aas
xor
(bad)
cld
ds
inc
out
inc
idiv
inc
std
(bad)
dec
cld
std
call
std
(bad)
call
cld
std
call
(bad)
(bad)
inc
sti
std
inc
(bad)
(bad)
dec
repnz
call
scas
mov
adc
jmp
inc
sar
add
(bad)
std
add
mov
xchg
mov
(bad)
push
ret
fucom
add
add
add
ret
(bad)
fnsave
xchg
mov
jbe
idiv
push
stc
(bad)
inc
cli
(bad)
inc
clc
cli
call
(bad)
(bad)
jmp
std
cld
call
std
std
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
repz
inc
idiv
inc
lock
inc
(bad)
inc
retf
add
sti
inc
mov
idiv
and
scas
std
sub
(bad)
sbb
iret
fld
cmc
(bad)
inc
lods
int
add
xchg
movs
jmp
addr16
add
inc
inc
call
add
sub
clc
push
sti
sti
call
std
dec
in
out
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
lock
inc
fdivr
inc
sar
inc
retf
(bad)
dec
jne
jmp
cld
jnp
sar
xchg
stos
jb
jl
add
movs
add
add
add
(bad)
clc
add
loop
adc
(bad)
shl
outs
lods
mov
cld
and
(bad)
adc
mov
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
loop
dec
inc
inc
inc
lods
inc
fdivr
dec
lods
iret
jmp
test
jmp
dec
stos
std
addr16
mov
mov
loopne
mov
loope
add
add
add
(bad)
sti
add
xchg
add
cmps
add
lods
xor
out
push
cdq
scas
jmp
nop
mov
jmp
mov
call
int3
aam
push
aam
call
aam
call
mov
jno
adc
push
call
inc
push
push
movs
(bad)
aas
jnp
jmp
stos
inc
enter
mov
(bad)
ins
test
(bad)
jbe
int
cmp
lds
std
(bad)
sti
add
out
add
fsub
cmp
(bad)
sti
sti
(bad)
out
in
(bad)
popf
into
(bad)
(bad)
jns
mov
inc
xchg
(bad)
cmp
(bad)
cmp
push
jne
push
mov
call
jmp
mov
call
xlat
(bad)
jle
(bad)
cli
cmp
mov
add
add
add
ret
mov
add
outs
add
in
call
sti
idiv
aad
idiv
aad
cli
dec
div
push
fsub
jmp
xlat
(bad)
mov
(bad)
fdivr
mov
out
call
iret
aam
mov
sar
nop
int3
sar
jno
mov
(bad)
sahf
ret
ror
add
add
add
add
(bad)
inc
bound
les
pop
sbb
repnz
idiv
leave
repz
retf
dec
div
call
cli
idiv
aad
idiv
xlat
std
clc
call
std
clc
call
std
clc
call
sti
idiv
sar
idiv
retf
call
retf
sar
xchg
iret
aam
test
int3
(bad)
je
ret
mov
lods
addr16
jge
add
mov
repnz
add
retf
add
fcmovu
call
(bad)
stc
stc
leave
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
repz
dec
repz
dec
repz
dec
repz
cmc
repnz
repnz
call
sar
xchg
rcl
(bad)
jge
(bad)
jmp
mov
cmp
push
movs
ror
mov
add
add
out
add
int3
add
mov
mov
out
fdivr
stc
stc
sar
cmc
cld
sar
cmc
cld
iret
div
call
stc
cmc
(bad)
sar
cmc
dec
div
dec
hlt
icebp
dec
div
inc
lock
call
retf
sar
xchg
rcl
(bad)
pop
call
ins
test
out
(bad)
fisubr
lock
repz
sti
stc
add
add
add
loop
pop
fwait
lods
add
test
push
nop
cmps
adc
mov
push
rcr
call
into
aad
movs
(bad)
(bad)
mov
cmc
repz
cld
clc
(bad)
mov
enter
rcl
(bad)
jns
(bad)
mov
cld
add
mov
adc
dec
jns
cld
std
std
add
(bad)
loope
push
xchg
cmps
add
test
add
rcr
mov
jl
mov
call
scas
(bad)
arpl
sar
(bad)
iret
call
retf
sar
(bad)
int3
sar
xchg
into
aam
nop
int3
sar
nop
int3
sar
outs
test
mov
add
div
add
mov
mov
ret
clc
stc
add
(bad)
dec
hlt
stc
sti
(bad)
in
lock
call
mov
mov
jno
mov
inc
ret
push
fwait
scas
call
std
inc
lock
add
in
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
jmp
leave
aad
add
jmp
add
rcl
(bad)
push
fcmovbe
retf
inc
repz
ins
clc
in
rcl
loop
(bad)
xchg
(bad)
aad
cs
loop
add
(bad)
add
(bad)
inc
jp
mov
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
rol
iret
iret
lea
(bad)
and
ret
ror
icebp
out
mov
mov
mov
pop
fs
inc
shr
sti
push
sahf
sar
add
stos
loop
add
(bad)
and
mov
fcomi
xor
(bad)
(bad)
fwait
test
stos
nop
cdq
mov
lds
int3
in
add
in
add
cld
sti
add
std
inc
(bad)
(bad)
inc
enter
test
shl
dec
lods
shr
push
mov
inc
rol
je
fadd
fs
fwait
ret
mov
(bad)
(bad)
adc
jecxz
add
repnz
in
cld
inc
jmp
add
(bad)
inc
popf
fdivr
add
int
jmp
retf
jmp
xor
fld
push
stos
shr
out
clc
dec
mov
inc
sti
cld
inc
stc
std
inc
mov
mov
cld
add
loopne
mov
ja
test
test
add
xchg
mov
inc
pushf
mov
jnp
into
loopne
add
jmp
pop
div
jmp
(bad)
(bad)
call
(bad)
inc
repnz
dec
(bad)
in
add
cld
inc
mov
int3
cld
xchg
mov
add
mov
add
mov
jne
pop
mov
call
loope
inc
pushf
stos
dec
mov
(bad)
cmp
mov
jb
mov
add
mov
scas
int
add
mov
pop
mov
in
std
jle
enter
mov
push
lods
mov
jmp
mov
(bad)
xchg
enter
mov
shl
mov
add
iret
xlat
add
lods
mov
(bad)
fdivrp
cld
(bad)
(bad)
stc
(bad)
fsqrt
idiv
fdivr
sti
dec
(bad)
sti
call
ror
jbe
shl
ret
rcr
movs
mov
rol
pushf
ror
cmps
mov
les
jle
mov
jg
loop
imul
(bad)
(bad)
mov
out
call
mov
push
mov
add
div
add
add
add
icebp
call
add
rcr
addr16
mov
shr
mov
retf
leave
sar
cmp
push
imul
cld
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
ins
xor
add
add
mov
add
mov
pop
add
cmp
add
add
add
add
add
arpl
xor
add
cs
add
ins
je
add
ins
add
inc
dec
es
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
lock
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
jmp
fxch
mov
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
mov
leave
mov
leave
mov
retf
retf
leave
mov
leave
mov
retf
retf
retf
retf
retf
retf
retf
retf
leave
mov
retf
retf
leave
mov
retf
retf
retf
repz
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
retf
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovne
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
aad
retf
mov
jle
nop
jp
test
jmp
out
out
out
out
out
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
leave
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
out
out
out
out
out
out
ror
les
pushf
jno
lods
mov
jae
jnp
mov
mov
mov
out
out
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
out
out
out
lods
xchg
add
loopne
cli
jmp
stc
lock
repnz
stc
lock
mov
mov
movs
mov
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
mov
xor
(bad)
cwde
mul
mov
out
cli
in
aad
out
jecxz
lock
out
jecxz
in
aad
jecxz
xchg
imul
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
lock
jmp
push
sub
movs
pop
in
jp
ror
jecxz
cli
jmp
stc
jmp
cli
in
aad
jmp
lock
mov
fst
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
mov
aaa
xlat
lods
(bad)
loopne
jae
enter
cdq
neg
scas
clc
jecxz
stc
out
cli
call
mul
mov
(bad)
cwde
test
push
lods
xchg
sub
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
cwde
jb
mov
inc
shl
in
jp
int
lock
cdq
hlt
fsubr
loopne
mul
mov
fsubr
int
(bad)
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ins
stos
cwde
outs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
mov
mov
inc
leave
xchg
push
shl
in
jp
leave
test
rcl
(bad)
cwde
icebp
(bad)
cwde
out
ror
sar
outs
jle
sub
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ins
lods
call
ins
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
lea
mov
inc
ret
retf
cdq
push
shl
loopne
jae
ret
sub
lds
ret
sub
mov
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
outs
test
jo
call
outs
stos
fwait
ins
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
stos
mov
jo
mov
inc
ret
leave
xchg
push
shl
(bad)
fidivr
(bad)
shl
sahf
jnp
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
rol
mov
inc
ret
lea
push
iret
lahf
pop
shl
shl
leave
xchg
push
(bad)
nop
push
sahf
push
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
mov
sbb
jg
mov
dec
ret
lea
dec
ret
(bad)
nop
push
shl
mov
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmove
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
repz
out
xchg
jle
xchg
fadd
in
shl
mov
fnsave
retf
shl
push
sub
fmul
out
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
inc
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
out
out
out
hlt
out
jmp
mul
fdivr
in
out
in
out
in
out
fmulp
mov
xor
(bad)
out
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
inc
add
add
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fxch
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
adc
call
mov
jle
sub
ins
loope
enter
out
out
out
out
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
inc
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fxch
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
out
out
out
out
out
out
cmc
lock
push
sub
popa
ds
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
inc
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fxch
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
mov
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
enter
hlt
jmp
fxch
mov
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
add
fxch
mov
retf
retf
retf
retf
retf
add
add
(bad)
fxch
mov
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
mov
retf
mov
enter
mov
leave
mov
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
mov
retf
leave
mov
leave
mov
retf
retf
mov
repz
add
hlt
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
add
push
hlt
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
add
push
hlt
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
add
hlt
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
add
inc
add
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
add
hlt
jmp
div
jmp
stos
cdq
outs
div
jmp
stos
cdq
outs
div
jmp
stos
cdq
outs
div
jmp
div
jmp
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
jmp
div
jmp
stos
cdq
outs
div
jmp
div
jmp
stos
cdq
outs
stos
cdq
outs
div
jmp
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
jmp
div
jmp
stos
cdq
outs
div
jmp
stos
cdq
outs
stos
cdq
outs
div
jmp
div
jmp
div
jmp
div
jmp
stos
cdq
outs
div
jmp
div
jmp
stos
cdq
outs
div
jmp
stos
cdq
outs
div
jmp
div
jmp
div
jmp
stos
cdq
outs
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
add
push
hlt
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
add
hlt
jmp
div
jmp
stos
cdq
outs
div
jmp
stos
cdq
outs
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
stos
cdq
outs
div
jmp
div
jmp
div
jmp
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
add
push
hlt
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
jmp
div
jmp
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
jmp
stos
cdq
outs
div
jmp
div
jmp
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
jmp
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
jmp
div
jmp
stos
cdq
outs
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
jmp
stos
cdq
outs
div
jmp
stos
cdq
outs
div
jmp
stos
cdq
outs
div
jmp
div
jmp
stos
cdq
outs
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
stos
cdq
outs
div
jmp
div
jmp
stos
cdq
outs
stos
cdq
outs
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
add
push
hlt
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
div
jmp
jmp
repz
cdq
outs
div
jmp
repz
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
jmp
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
jmp
cdq
outs
div
jmp
repz
repz
repz
cdq
outs
div
jmp
repz
repz
repz
repz
cdq
outs
div
jmp
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
div
jmp
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
div
jmp
repz
cdq
outs
div
jmp
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
cdq
outs
div
jmp
cdq
outs
div
jmp
repz
repz
repz
repz
cdq
outs
div
jmp
repz
repz
cdq
outs
div
jmp
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
div
call
repz
cdq
outs
div
call
repz
repz
cdq
outs
div
call
repz
repz
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
call
repz
repz
cdq
outs
div
call
repz
repz
repz
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
call
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
div
call
repz
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
call
repz
repz
repz
repz
repz
repz
repz
repz
repz
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
call
repz
repz
repz
cdq
outs
div
call
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
div
call
repz
repz
repz
repz
repz
cdq
outs
div
call
repz
cdq
outs
div
call
repz
repz
repz
repz
repz
cdq
outs
div
call
repz
repz
repz
repz
cdq
outs
div
call
repz
cdq
outs
div
call
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
div
out
repnz
repnz
repnz
repnz
cdq
outs
div
out
repnz
repnz
cdq
outs
div
out
repnz
repnz
repnz
repnz
repnz
repnz
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
out
repnz
repnz
repnz
repnz
cdq
outs
div
out
repnz
cdq
outs
div
out
repnz
cdq
outs
div
out
repnz
repnz
repnz
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
stos
cdq
outs
div
out
repnz
repnz
cdq
outs
div
out
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
div
out
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
div
out
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
div
out
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
add
aas
or
add
and
sbb
add
and
and
inc
sub
add
add
add
ins
ins
popa
outs
xor
add
or
(bad)
in
std
enter
add
pop
nop
adc
adc
inc
sub
add
add
add
ins
ins
popa
outs
fs
add
or
mov
mov
rol
nop
adc
adc
add
add
add
add
add
arpl
xor
add
or
add
adc
or
adc
sbb
add
and
inc
sub
add
add
ins
ins
popa
outs
xor
add
or
enter
xlat
mov
push
add
add
push
add
(bad)
inc
sub
add
push
or
inc
outs
ins
ins
popa
outs
xor
add
or
mov
mov
enter
add
or
ja
adc
add
add
push
add
popa
ins
xor
add
push
add
jmp
retf
jmp
test
clc
add
scas
adc
add
adc
inc
cmp
add
or
add
ins
imul
bound
add
add
or
add
add
adc
add
add
rcl
add
into
int3
in
add
add
add
push
add
gs
aaa
add
add
retf
jmp
jmp
mov
or
add
add
add
adc
sbb
inc
add
add
add
push
add
popa
ins
xor
add
or
xlat
mov
(bad)
ret
add
scas
adc
push
adc
add
add
add
add
push
add
gs
add
add
add
add
loopne
add
or
add
add
add
add
add
imul
add
or
add
imul
xor
arpl
add
or
and
inc
add
add
jne
dec
popa
ins
add
add
add
add
push
add
pop
add
imul
or
and
inc
sub
or
push
popa
jae
ja
jb
add
add
add
add
push
add
push
add
xor
xor
add
pop
add
inc
and
add
sysret
add
arpl
outs
je
add
add
add
push
add
push
add
inc
sub
add
adc
add
gs
xor
add
add
add
xor
mov
add
mov
mov
and
inc
sub
add
adc
add
gs
xor
add
add
add
cmp
mov
add
sbb
mov
pop
add
add
add
add
push
add
gs
cmp
add
or
mov
xlat
rcl
retf
mov
add
inc
add
add
sbb
inc
sub
add
adc
add
gs
add
add
add
out
mov
aad
sti
mov
add
add
add
add
add
add
add
add
gs
xor
add
fadd
jmp
mov
jbe
push
add
add
pop
add
add
add
add
bound
xor
add
push
add
cli
mov
add
addr16
add
push
add
add
sub
add
push
push
add
popa
ins
xor
add
or
mov
call
js
sub
adc
add
add
add
je
add
add
or
add
push
add
add
xor
adc
add
inc
and
add
je
add
add
or
add
push
add
add
xor
adc
add
inc
sub
or
dec
gs
fs
arpl
jne
je
add
add
add
add
add
adc
add
inc
sub
add
sbb
add
arpl
add
std
xlat
(bad)
xor
add
add
add
add
add
adc
inc
sub
push
add
arpl
add
mov
les
add
aaa
add
add
add
add
add
add
add
arpl
add
aam
add
addr16
add
add
inc
daa
add
add
bound
xor
add
add
add
mov
add
addr16
add
push
add
add
add
add
push
add
gs
xor
add
push
add
mov
add
addr16
add
sbb
add
add
push
add
gs
cmp
add
add
mov
add
addr16
add
sbb
inc
sub
add
and
add
gs
xor
add
or
retf
out
cli
xlat
jmp
add
mov
sbb
inc
sub
add
and
add
gs
xor
add
or
xlat
mov
aam
mov
add
add
add
(bad)
inc
add
add
add
add
je
imul
add
inc
outs
ins
arpl
imul
push
imul
jo
scas
adc
pop
push
add
adc
sub
test
add
inc
xor
or
add
jl
add
push
or
jge
add
push
add
add
and
add
add
int
add
add
add
adc
add
jns
add
fsubrp
mov
push
into
jns
add
and
add
add
add
add
add
repnz
add
add
add
push
or
add
add
add
cli
mov
add
add
add
push
or
add
add
add
fadd
jmp
and
add
add
add
in
or
add
add
add
mov
lods
add
add
add
add
bound
outs
ja
gs
add
adc
outs
arpl
inc
je
cs
bound
outs
ja
gs
add
push
push
sbb
add
adc
or
add
add
sub
add
dec
add
add
add
add
rcl
jae
iret
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
add
inc
add
add
add
add
add
add
and
add
gs
xor
add
sub
(bad)
jmp
mov
aad
mov
int
stos
mov
stc
retf
loopne
int
lods
mov
int3
aam
cmps
mov
add
add
add
pop
or
add
and
inc
je
add
and
add
gs
xor
add
add
retf
mov
mul
sti
enter
aam
rcl
mov
shl
test
mov
mov
shl
retf
scas
mov
mov
(bad)
ret
(bad)
shl
test
mov
add
add
aaa
adc
add
and
inc
add
dec
xor
push
fcom
out
cmp
mov
dec
mov
cvtpd2ps
fnstenv
mov
dec
mov
cmp
int3
jmp
xor
or
stos
add
xchg
lds
add
add
add
ins
inc
gs
gs
inc
jb
outs
fs
or
mov
int
mov
cli
sar
sbb
add
and
ficom
add
add
push
add
add
add
push
add
xor
add
add
add
add
add
and
add
add
add
sldt
adc
add
add
or
push
pop
add
xor
add
add
and
test
add
push
sbb
add
add
and
test
add
mov
adc
add
add
and
push
push
add
sub
add
xor
add
pusha
add
add
add
add
add
add
(bad)
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
inc
and
inc
and
inc
loopne
add
inc
pusha
add
loopne
add
inc
add
add
add
add
(bad)
inc
and
add
pusha
add
pusha
mov
add
loopne
add
add
pusha
mov
rol
inc
loopne
add
add
loopne
add
add
add
and
and
inc
add
inc
add
and
and
pusha
add
pusha
add
and
mov
inc
pusha
add
and
add
inc
add
inc
add
pusha
add
mov
add
and
add
and
rol
add
shl
mov
mov
loopne
loopne
loopne
rol
add
loopne
add
loopne
add
loopne
add
jmp
add
mov
inc
shl
add
clc
lock
fdivr
add
call
inc
sar
clc
add
clc
inc
cwde
rcr
add
clc
lock
(bad)
clc
add
(bad)
clc
add
enter
clc
lock
mov
add
mov
enter
rol
add
clc
add
sbb
fcom
mov
rcr
add
lock
add
enter
rol
lock
clc
add
mov
clc
add
clc
clc
add
(bad)
inc
inc
sbb
xor
add
ror
cwde
ror
mov
loopne
add
lock
add
(bad)
inc
inc
mov
add
mov
add
rol
mov
rol
call
mov
loopne
test
loopne
mov
clc
call
add
lock
mov
add
loopne
add
lock
add
clc
clc
add
mov
inc
enter
inc
jo
add
mov
add
shr
add
mov
pop
mov
mov
add
rol
mov
enter
enter
rol
test
rol
cwde
enter
call
fadd
mov
fadd
mov
lock
add
loopne
test
loopne
enter
or
lock
call
clc
add
enter
call
clc
add
clc
clc
add
clc
clc
add
sar
add
lock
or
inc
mov
inc
clc
(bad)
inc
adc
cmp
or
add
pusha
push
add
js
add
nop
add
adc
or
add
push
mov
add
test
pop
mov
add
mov
push
cwde
mov
jo
mov
add
add
js
add
cmp
or
mov
add
mov
add
mov
add
js
add
nop
rol
nop
rol
mov
add
mov
rol
loopne
add
js
add
mov
add
mov
add
mov
add
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
or
rol
add
rol
add
rol
cwde
rcl
mov
mov
add
nop
fadd
add
fadd
and
fadd
xor
fadd
cwde
rcr
adc
fadd
rcl
add
fcomp
add
fcomp
add
fcomp
add
fcomp
add
call
add
add
arpl
add
add
add
add
add
add
and
add
fimul
scas
add
loope
aad
data16
add
add
jecxz
jle
(bad)
(bad)
retf
xchg
fldenv
(bad)
fcomip
mul
stc
add
out
dec
adc
enter
add
mov
imul
out
add
cmc
adc
inc
jmp
push
push
retf
sbb
jecxz
fcomp
mov
pop
pop
pop
imul
xlat
and
inc
rcr
ja
add
add
add
inc
push
dec
fstp
enter
pop
pop
dec
dec
dec
mov
mov
pop
je
add
add
rol
add
add
push
iret
test
leave
xchg
xchg
xchg
xchg
fcomip
clc
mov
pop
and
(bad)
jns
out
out
loopne
inc
add
add
add
loop
pop
js
push
inc
leave
loopne
cmc
inc
mov
xor
mov
inc
out
add
(bad)
hlt
aad
adc
loopne
add
add
add
and
adc
cmc
pusha
mov
mov
inc
test
dec
dec
dec
mov
movs
leave
mov
add
retf
and
ins
pusha
xchg
pop
add
cwde
adc
add
push
aad
jns
hlt
out
fucomp
ins
fild
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
mov
shl
inc
movs
push
sahf
repz
mov
cld
add
and
loope
jns
push
dec
sub
dec
dec
dec
dec
dec
dec
dec
mov
lods
dec
mov
addr16
mov
push
add
add
(bad)
(bad)
test
or
dec
dec
dec
pop
pop
pop
test
jmp
out
push
add
add
add
jbe
(bad)
fadd
or
dec
dec
dec
or
pop
dec
jmp
push
push
inc
cmp
push
add
add
add
add
cmp
dec
or
dec
dec
dec
dec
dec
or
or
fisttp
pop
add
pop
add
ret
ins
adc
dec
mov
dec
pusha
pusha
pusha
pusha
dec
dec
dec
mov
mov
jmp
inc
movs
ficomp
add
add
popf
cmc
(bad)
(bad)
cmp
cmps
pusha
push
pusha
pusha
pusha
pusha
pusha
dec
push
dec
mov
push
pop
icebp
pop
aad
(bad)
inc
jle
(bad)
(bad)
out
mov
mov
push
push
push
push
push
pusha
clc
push
dec
or
lea
mov
add
(bad)
mov
mov
cmp
add
add
js
mov
lods
pop
pop
lea
add
add
(bad)
mov
dec
add
add
push
push
push
push
add
out
mov
mov
mov
pop
lods
push
imul
jle
mov
dec
dec
pusha
pusha
scas
add
ins
ins
ins
push
add
js
push
push
clc
dec
pop
pop
lea
mov
mov
add
add
add
shr
push
add
adc
adc
push
pusha
push
add
or
push
(bad)
fcmovnb
call
add
add
add
add
xlat
cmp
mov
add
push
mov
adc
jns
ins
add
pusha
pusha
lods
mov
push
(bad)
in
sbb
add
add
mov
ins
jns
jns
push
js
push
add
or
pop
xchg
mov
add
xchg
sbb
push
js
adc
adc
mov
cmps
mov
push
or
mov
xchg
add
lock
xchg
cmc
cmps
add
add
ins
push
add
mov
mov
push
mov
jp
mov
add
add
mov
cmc
cmps
lods
pusha
pusha
pusha
js
mov
mov
cli
shl
xlat
lahf
sbb
xchg
bound
nop
nop
mov
popa
xchg
xchg
outs
popa
jp
bound
push
push
push
rcr
add
add
push
dec
push
push
pop
jne
xchg
jnp
sbb
popa
outs
xchg
xchg
pop
jae
push
push
push
push
pop
rcl
cld
sahf
lahf
push
pop
dec
push
push
push
push
test
push
cmps
test
pop
pop
push
push
push
push
rcl
pop
jo
add
push
dec
push
push
dec
push
push
push
push
push
push
push
push
push
push
push
pop
push
push
push
push
push
push
xchg
pop
jae
add
in
push
pop
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
pop
dec
push
push
push
push
push
push
pop
xchg
sti
jno
add
add
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
jae
pop
jl
add
add
test
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
pop
pop
push
push
push
push
pop
(bad)
(bad)
pop
jbe
add
add
push
dec
pop
pop
pop
dec
dec
dec
dec
push
push
dec
pop
push
push
push
push
pop
popa
pop
bound
add
push
push
test
sti
jne
test
dec
dec
push
test
pop
push
(bad)
rol
addr16
in
outs
pop
(bad)
xchg
(bad)
pop
pop
test
push
push
pop
test
add
jg
jge
jge
jno
pop
push
pop
pop
push
pop
xchg
je
add
add
add
xlat
jo
pop
jno
jno
jnp
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
or
add
add
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
add
loopne
add
mov
add
mov
add
and
and
inc
add
add
and
add
rol
loopne
add
pusha
inc
and
add
add
add
and
inc
shl
add
and
loopne
inc
add
inc
pusha
add
pusha
add
inc
pusha
add
add
add
pusha
add
mov
mov
add
inc
mov
add
pusha
mov
add
and
mov
rol
and
loopne
and
loopne
and
add
loopne
add
jmp
add
loopne
add
inc
loopne
inc
add
inc
cwde
rcr
add
mov
add
clc
clc
add
(bad)
clc
add
clc
inc
rcr
add
(bad)
clc
add
(bad)
inc
nop
enter
call
mov
add
add
clc
lock
clc
lock
sar
add
inc
inc
js
add
rol
loopne
add
rcr
add
clc
clc
add
enter
js
add
mov
or
enter
enter
enter
rol
call
call
fadd
test
loopne
mov
cwde
call
add
mov
add
loopne
add
clc
clc
add
(bad)
inc
clc
(bad)
inc
xor
mov
add
test
push
cwde
test
fcom
test
push
js
add
mov
add
cwde
rol
cwde
rol
mov
rol
cwde
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
rol
mov
rol
or
add
loopne
add
mov
fadd
inc
mov
add
enter
enter
fcomp
add
call
loopne
or
loopne
test
loopne
add
call
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
(bad)
call
add
clc
lock
clc
lock
fdivr
add
call
clc
add
clc
clc
add
clc
clc
add
(bad)
inc
test
add
adc
and
sbb
and
or
add
inc
dec
add
mov
adc
add
pop
pop
add
pop
add
pusha
push
add
dec
jo
sub
add
push
jo
sbb
add
push
jo
or
add
jo
add
add
push
js
sbb
mov
inc
mov
and
add
js
add
sbb
pop
sbb
push
mov
add
cwde
mov
add
mov
test
dec
sub
cmp
test
cmp
test
push
nop
test
pusha
nop
test
push
nop
test
js
test
pop
cwde
test
pusha
cwde
test
jo
test
add
mov
or
mov
dec
xor
jo
mov
cmp
mov
push
cwde
mov
js
mov
mov
mov
add
cmp
inc
mov
add
nop
mov
add
mov
add
mov
add
test
add
mov
add
mov
add
mov
add
sar
add
add
or
rol
mov
add
cwde
rol
cwde
rol
mov
rol
test
add
add
dec
pop
pop
xchg
add
pop
cmp
add
mov
adc
inc
pop
add
add
outs
jnp
add
pusha
pusha
pusha
cmc
add
cld
xor
add
add
add
add
call
push
dec
dec
dec
bound
add
aaa
call
add
je
mov
dec
test
jbe
test
popa
jb
xor
ja
add
ins
add
xchg
xchg
mov
loop
popa
popa
mov
fdivr
push
add
sbb
add
add
jae
mov
test
cmp
cmp
cmp
jbe
xor
pop
mov
hlt
dec
add
add
aas
xchg
test
cmp
cmp
xor
jecxz
dec
call
add
add
add
add
dec
dec
or
cmp
push
popa
or
pop
pop
adc
add
add
add
in
add
dec
dec
dec
dec
or
popf
outs
js
test
fwait
add
add
add
add
xchg
xchg
aas
aas
aas
dec
aas
aas
arpl
xor
add
stos
mov
aas
aas
aas
icebp
icebp
add
dec
test
add
xchg
mov
inc
inc
aas
add
cmp
bound
add
add
add
xchg
inc
pcmpgtw
add
dec
bound
loope
push
fnsave
mov
aas
aas
aas
cmp
dec
(bad)
fnstenv
add
retf
lods
stos
cmps
mov
call
push
lea
xchg
mov
(bad)
xchg
add
inc
xchg
movs
cmps
mov
arpl
dec
ins
imul
inc
inc
(bad)
fbld
or
mov
adc
dec
dec
cmp
add
mov
cmp
dec
ret
dec
push
push
push
mov
cmp
inc
inc
jp
add
jp
mov
mov
pop
mov
cmp
dec
jnp
inc
cmp
ds
cmp
add
add
ds
cmp
cmp
cmp
inc
cmp
inc
cmp
jle
cmp
cmp
cmp
cmp
inc
cmp
cmp
add
dec
inc
inc
cmp
pop
inc
inc
ds
dec
cmp
inc
cmp
add
add
dec
cmp
dec
inc
cmp
push
inc
inc
cmp
add
add
xchg
mov
dec
inc
dec
inc
push
jle
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
(bad)
inc
mov
mov
rol
mov
retf
leave
rol
cmp
add
loop
add
(bad)
add
out
add
mov
add
mov
add
(bad)
cld
add
std
stc
add
cli
test
(bad)
sti
add
(bad)
sti
add
ror
jbe
rol
in
add
mov
mov
push
lods
mov
add
mov
add
mov
scas
add
mov
add
loope
add
pushf
stos
add
mov
add
call
jb
mov
add
loopne
add
jmp
pop
div
add
(bad)
inc
adc
inc
add
clc
add
(bad)
in
add
cld
add
mov
int3
add
stos
rol
sub
add
mov
add
sti
cld
add
stc
std
add
mov
mov
add
mov
add
cdq
loopne
dec
xchg
rol
(bad)
adc
jecxz
add
repnz
in
cld
add
jmp
add
inc
add
jmp
add
jecxz
add
jmp
xor
mov
add
mov
cld
add
fscale
add
(bad)
inc
add
test
test
rol
dec
lods
rol
push
mov
add
rol
add
fadd
add
out
add
shr
add
sahf
rol
add
stos
loop
add
add
mov
fild
xor
(bad)
fld
fwait
test
stos
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
add
iret
iret
add
fld
and
ret
rol
icebp
out
add
rol
add
in
add
in
rol
loop
(bad)
add
add
add
jne
ja
jns
jnp
jge
jg
add
addr16
ins
outs
outs
jo
jb
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
add
dec
dec
dec
dec
dec
dec
push
push
push
push
push
add
add
inc
inc
inc
inc
inc
inc
add
add
add
xor
xor
ss
cmp
cmp
cmp
add
add
es
sub
sub
sub
cs
xor
add
add
sbb
push
pop
and
and
and
add
add
add
add
adc
push
pop
sbb
sbb
add
add
add
add
or
adc
add
add
add
add
add
add
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
add
add
add
add
add
add
and
jnp
ret
fwait
mov
repz
cld
add
cld
std
add
cli
stc
add
jmp
cli
add
(bad)
std
add
add
add
(bad)
inc
add
add
mov
rol
(bad)
retf
into
add
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
add
add
loope
clc
add
(bad)
loope
aad
in
add
(bad)
add
(bad)
inc
cmc
icebp
call
add
std
(bad)
cmp
ffreep
call
iret
test
jmp
loop
push
bnd
adc
cli
repz
add
add
add
add
(bad)
cli
add
clc
test
in
add
(bad)
cld
add
cld
test
(bad)
sti
add
(bad)
cli
add
(bad)
clc
add
mov
add
repnz
hlt
cmc
dec
(bad)
bnd
call
clc
js
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
add
in
fild
std
(bad)
inc
(bad)
(bad)
(bad)
js
loopne
js
int
js
xlat
out
mov
repnz
js
stc
jmp
div
loop
lock
div
in
xchg
out
in
call
jmp
fidivr
jmp
jecxz
iret
in
out
cli
jne
lock
jp
hlt
repnz
div
add
jmp
add
(bad)
(bad)
inc
add
add
repz
loop
ins
pushf
mov
add
mov
stos
mov
add
into
std
inc
mov
(bad)
(bad)
cmp
mov
jmp
test
enter
xlat
aad
iret
aam
xor
xchg
mov
push
mov
push
mov
jmp
mov
(bad)
cmp
mov
popa
xchg
mov
popf
mov
aam
jmp
out
(bad)
(bad)
out
add
cmc
jmp
(bad)
push
mov
push
rcr
sub
lods
retf
rcr
retf
clc
cmp
(bad)
call
(bad)
call
(bad)
(bad)
call
add
add
(bad)
(bad)
inc
out
in
in
out
add
icebp
repz
dec
mov
sub
add
mov
mov
ins
fdiv
(bad)
pop
out
sti
stc
or
in
add
clc
add
mov
and
mov
adc
inc
imul
add
idiv
add
stc
cli
add
cli
add
iret
inc
gs
ret
(bad)
(bad)
(bad)
jmp
call
bnd
call
mov
(bad)
cld
and
(bad)
cli
add
jmp
pusha
pushf
(bad)
jge
ret
in
(bad)
in
call
jmp
push
cli
clc
repnz
out
jecxz
hlt
lock
add
pop
add
mov
inc
mov
retf
mov
jmp
in
(bad)
call
in
dec
loop
add
loopne
fwait
mov
loop
outs
movs
inc
test
inc
mov
(bad)
cld
add
stc
inc
mov
clc
inc
mov
clc
inc
movs
cli
inc
stos
cld
inc
mov
sti
pop
mov
sar
call
push
test
into
sti
cdq
(bad)
(bad)
(bad)
xor
(bad)
inc
mov
push
shl
std
or
jmp
xchg
cld
loope
mov
div
in
loope
in
call
fiadd
add
add
repnz
inc
(bad)
(bad)
inc
mov
fild
ret
arpl
stc
mov
(bad)
sti
pop
mov
fdivrp
add
(bad)
inc
fcos
inc
xchg
(bad)
std
add
inc
test
inc
mov
(bad)
inc
(bad)
inc
into
(bad)
inc
sar
inc
aad
inc
fdivr
inc
sar
dec
ret
(bad)
inc
lods
(bad)
inc
mov
stc
inc
mov
(bad)
(bad)
(bad)
cld
jmp
jge
ficomp
loope
daa
in
cli
std
add
retf
inc
(bad)
(bad)
(bad)
xor
(bad)
dec
mov
cld
sbb
jmp
(bad)
scas
(bad)
in
(bad)
mov
ffree
add
mov
mov
pop
push
xchg
mov
std
addr16
(bad)
inc
out
call
mov
aad
add
in
inc
je
(bad)
adc
call
repz
push
enter
mov
fsin
or
mov
add
mov
adc
sar
mov
in
(bad)
(bad)
inc
mov
inc
pushf
cli
sti
push
mov
(bad)
clc
out
fcom
js
stos
add
mov
add
jecxz
dec
lea
jmp
(bad)
(bad)
dec
fsub
inc
scas
iret
dec
(bad)
inc
mov
movs
(bad)
fcmovu
fdivr
(bad)
mov
aad
scas
stos
aad
stos
mov
add
add
(bad)
inc
mov
out
mov
int3
mov
mov
in
repnz
and
(bad)
dec
(bad)
inc
js
dec
mov
sar
mov
jecxz
add
add
inc
cmp
add
fdivr
add
mov
inc
pop
xchg
call
mov
inc
(bad)
(bad)
cld
sbb
(bad)
ficom
xchg
cmps
sub
mov
inc
js
std
call
inc
ret
es
mov
dec
cli
inc
(bad)
cli
or
fst
test
xlat
push
out
(bad)
and
aad
cli
add
add
lods
int3
loopne
mov
shl
je
mov
clc
stc
push
in
cmc
dec
mov
call
out
idiv
add
ja
inc
fsubr
dec
stos
loopne
or
(bad)
add
sti
inc
sar
inc
sar
inc
sar
inc
sar
inc
sar
inc
ret
add
mov
call
movs
(bad)
fcos
stc
pop
mov
rol
int3
aam
scas
inc
test
sti
add
idiv
cmp
cld
push
(bad)
(bad)
inc
in
hlt
std
inc
nop
lods
push
aad
pop
fsub
in
mov
(bad)
loop
ret
add
add
add
jle
ret
jne
xchg
ret
cli
(bad)
clc
daa
stc
(bad)
inc
lock
inc
mov
fdivr
or
int3
call
(bad)
(bad)
call
popf
(bad)
inc
mov
(bad)
inc
sar
inc
sar
inc
iret
cld
inc
iret
std
inc
int3
cld
inc
int
inc
leave
std
inc
leave
cld
inc
into
(bad)
inc
into
(bad)
inc
stos
in
add
stos
inc
cmps
(bad)
inc
int
cld
test
cmc
fild
ror
add
fdivr
dec
mov
(bad)
ds
inc
jmp
inc
fucomp
inc
rcr
(bad)
cld
cli
cmc
add
loopne
add
in
push
fcmovbe
mov
leave
rcl
out
cld
add
mov
(bad)
(bad)
sub
push
add
(bad)
inc
repz
inc
out
inc
popf
(bad)
add
idiv
or
jns
inc
(bad)
inc
sar
inc
sar
inc
sar
inc
xlat
(bad)
inc
xlat
std
inc
xlat
(bad)
inc
(bad)
std
inc
aam
inc
aam
inc
sar
inc
leave
cld
inc
(bad)
sti
inc
sar
inc
retf
add
popf
(bad)
(bad)
adc
repnz
into
mov
ret
(bad)
(bad)
adc
add
inc
scas
icebp
inc
(bad)
inc
mov
popf
jmp
jmp
(bad)
aad
add
call
loopne
stc
clc
repz
add
add
fsubr
sti
add
jmp
std
and
mov
cld
or
sti
dec
mov
stos
dec
xchg
(bad)
jg
inc
(bad)
inc
(bad)
std
inc
fdivr
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
fdivrp
inc
fdivrp
inc
(bad)
inc
(bad)
inc
xlat
std
inc
sar
inc
iret
std
inc
(bad)
cld
inc
int3
(bad)
inc
mov
test
(bad)
and
mov
push
(bad)
iret
dec
mov
inc
sar
add
mov
mov
cld
out
call
mov
repnz
fistp
aad
cmps
ret
mov
fcmovbe
mov
add
add
retf
add
retf
(bad)
inc
sti
test
(bad)
jmp
rcr
out
outs
test
dec
jno
inc
xchg
inc
mov
inc
mov
clc
inc
(bad)
inc
(bad)
inc
(bad)
inc
loop
inc
in
inc
in
inc
out
inc
out
inc
out
inc
out
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
iret
(bad)
inc
(bad)
cld
inc
xlat
(bad)
dec
(bad)
iret
dec
xchg
sar
sar
std
add
cld
add
idiv
add
(bad)
(bad)
adc
(bad)
inc
(bad)
loope
cs
(bad)
jmp
(bad)
push
in
(bad)
(bad)
(bad)
(bad)
(bad)
call
ficom
loope
lds
in
retf
add
jmp
add
add
fwait
ret
(bad)
(bad)
std
add
(bad)
rol
mov
js
mov
sbb
scas
call
(bad)
cli
xchg
repz
(bad)
cmp
(bad)
inc
(bad)
cld
inc
(bad)
inc
loop
inc
in
inc
out
inc
jmp
(bad)
inc
jmp
inc
jmp
inc
jmp
add
std
inc
loop
inc
(bad)
inc
fdivr
inc
(bad)
(bad)
inc
into
cld
inc
fdivr
inc
mov
dec
pop
xchg
call
(bad)
lock
pushf
int
add
loope
dec
(bad)
(bad)
inc
(bad)
std
dec
xchg
mov
cld
imul
jmp
repz
jmp
(bad)
jne
ffreep
(bad)
stc
stc
bnd
(bad)
dec
(bad)
(bad)
inc
add
add
cli
stc
add
(bad)
inc
jbe
mov
mov
cdq
add
(bad)
(bad)
cld
idiv
stc
call
(bad)
inc
repz
inc
call
sti
inc
in
(bad)
inc
cmc
(bad)
inc
out
(bad)
inc
out
std
inc
out
(bad)
inc
out
(bad)
inc
out
(bad)
inc
in
std
inc
jmp
add
sti
inc
loope
inc
(bad)
inc
fdivr
dec
shr
pop
jge
inc
popf
dec
(bad)
jmp
add
(bad)
inc
xchg
(bad)
inc
mov
add
mov
mov
out
aam
out
fnstsw
(bad)
jmp
(bad)
std
jno
div
add
div
add
add
add
jecxz
add
add
add
(bad)
dec
mov
fdivr
enter
(bad)
jmp
adc
push
cmc
cli
inc
(bad)
(bad)
inc
cmc
sti
call
aam
inc
cli
inc
repz
inc
repnz
inc
repnz
inc
icebp
(bad)
inc
icebp
(bad)
inc
out
std
inc
in
(bad)
inc
clc
(bad)
inc
out
inc
fdivrp
inc
loop
dec
mov
aad
add
idiv
add
(bad)
inc
mov
inc
mov
out
inc
mov
inc
jmp
inc
(bad)
mov
call
in
mov
hlt
in
ss
imul
add
(bad)
inc
std
(bad)
sti
add
out
add
std
in
or
cmp
out
(bad)
(bad)
scas
sti
std
dec
mov
cmp
or
pop
pop
dec
daa
sub
and
dec
idiv
add
(bad)
inc
clc
cld
inc
cmc
cld
inc
cmc
std
inc
cmc
std
inc
idiv
inc
lock
dec
enter
idiv
inc
in
(bad)
inc
fdivrp
inc
fdivr
inc
jecxz
inc
into
(bad)
inc
ret
add
cli
inc
mov
inc
lods
(bad)
inc
mov
stc
add
popf
mov
jae
lods
add
add
add
(bad)
inc
jl
rol
mov
int
inc
lea
inc
(bad)
(bad)
call
hlt
(bad)
dec
repz
inc
movs
lods
call
or
inc
std
(bad)
inc
sti
std
inc
std
(bad)
inc
cld
(bad)
inc
cld
(bad)
inc
idiv
inc
(bad)
(bad)
dec
fcmovu
dec
sbb
dec
sti
dec
jmp
dec
int3
jmp
add
(bad)
std
inc
sar
add
sti
inc
movs
idiv
add
call
scas
push
sub
jmp
add
repz
(bad)
sti
add
add
mov
rcl
inc
mov
(bad)
scas
(bad)
(bad)
dec
in
inc
in
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
std
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
std
(bad)
inc
(bad)
(bad)
inc
cld
(bad)
inc
idiv
inc
cli
cld
dec
mov
call
pop
and
call
cmp
or
repnz
int
inc
ret
add
sti
inc
lods
stc
inc
lods
(bad)
stc
or
sar
pop
xchg
mov
dec
and
ret
add
fninit
add
fsub
add
mov
add
hlt
retf
xchg
mov
call
out
sti
inc
jmp
add
cli
inc
icebp
stc
inc
cmc
stc
inc
cld
std
dec
(bad)
(bad)
call
std
(bad)
call
std
std
call
std
std
call
std
std
inc
(bad)
(bad)
inc
cld
(bad)
inc
stc
(bad)
inc
(bad)
(bad)
dec
cmc
sti
call
test
cdq
call
sahf
cmps
dec
into
(bad)
add
(bad)
inc
retf
add
std
inc
mov
cli
inc
lods
stc
inc
scas
std
std
add
xchg
stos
jecxz
int
cmps
movs
ret
shl
call
add
jecxz
add
add
add
mov
mov
dec
sbb
mov
(bad)
inc
out
inc
jmp
inc
icebp
sti
inc
clc
cld
inc
(bad)
(bad)
inc
std
(bad)
call
std
cld
jmp
std
jmp
(bad)
cld
call
cld
(bad)
call
std
(bad)
inc
cld
inc
repnz
inc
hlt
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
loop
inc
sar
inc
int3
(bad)
inc
(bad)
add
inc
test
(bad)
inc
jns
jmp
xchg
inc
(bad)
mov
jb
iret
fld
xchg
mov
add
fucomip
test
add
add
(bad)
call
lods
ret
sbb
mov
(bad)
jmp
std
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
cli
(bad)
inc
std
(bad)
call
std
(bad)
cmp
std
std
jmp
cld
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
hlt
clc
inc
out
sti
inc
jmp
cli
inc
(bad)
inc
(bad)
inc
sar
inc
int3
(bad)
inc
(bad)
add
std
inc
mov
dec
push
aam
pop
cdq
lods
stc
pop
cdq
lods
fcom
retf
in
cmc
test
jecxz
cli
add
fsub
add
fsubp
add
gs
inc
popf
mov
dec
xchg
movs
call
bound
or
dec
cmp
call
aas
inc
call
cli
sti
jmp
std
std
jmp
std
std
jmp
std
std
dec
(bad)
(bad)
dec
out
inc
(bad)
(bad)
inc
std
(bad)
inc
icebp
std
inc
in
inc
loopne
inc
fdivr
inc
sar
inc
retf
add
(bad)
inc
leave
(bad)
inc
mov
call
mov
call
(bad)
mov
(bad)
cmp
ror
test
stc
add
(bad)
sti
add
leave
ror
(bad)
mov
mov
cmp
outs
(bad)
sbb
and
or
inc
inc
dec
cmp
dec
lea
dec
cli
jmp
cli
sti
jmp
cld
cld
jmp
std
cld
call
cld
inc
(bad)
(bad)
call
fdivr
or
sbb
call
(bad)
or
(bad)
inc
std
(bad)
inc
hlt
(bad)
inc
(bad)
inc
fdivr
inc
sar
inc
hlt
call
mov
xchg
(bad)
cmp
xchg
inc
mov
(bad)
jle
mov
jmp
repnz
add
test
add
std
cli
add
rcr
add
retf
sar
stos
fsub
cli
inc
mov
cmp
ret
call
loop
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
dec
and
dec
add
or
or
dec
aas
aas
dec
jns
inc
idiv
adc
movs
jmp
outs
test
inc
sbb
jne
ret
(bad)
cmp
jg
(bad)
movs
leave
aad
jmp
cmc
test
sti
inc
std
(bad)
sti
add
mov
add
scas
rol
out
lock
mov
mov
(bad)
aas
sbb
sub
xchg
jmp
fwait
stos
jmp
scas
mov
call
loopne
or
lock
repz
out
icebp
inc
icebp
cmc
call
lock
call
test
dec
pusha
imul
adc
jmp
inc
push
(bad)
cmp
(bad)
cmp
(bad)
dec
mov
inc
aad
push
mov
stc
push
mov
dec
push
pushf
scas
add
in
sti
add
(bad)
sti
add
mov
mov
mov
leave
sar
loop
(bad)
stc
xlat
(bad)
clc
jmp
test
dec
stos
(bad)
aas
jle
(bad)
cmp
ins
mov
aas
jno
push
jbe
push
jl
push
xchg
push
jg
push
adc
cmp
sbb
xchg
dec
jmp
inc
aam
call
int3
sar
outs
mov
call
lods
mov
pop
cwde
mov
mov
add
inc
retf
add
fsub
addr16
(bad)
sar
retf
div
cli
int3
hlt
icebp
(bad)
(bad)
std
idiv
aad
idiv
ret
jmp
leave
call
mov
dec
mov
(bad)
cmp
jg
(bad)
cmp
(bad)
cmp
cdq
(bad)
cmp
aas
sbb
jmp
mov
call
rcl
call
sar
xchg
int
dec
lods
mov
cli
je
mov
int3
fcmovnu
push
retf
add
add
add
(bad)
inc
rcr
jecxz
call
ret
iret
call
fdivr
cld
std
enter
int3
hlt
repnz
sar
cmc
(bad)
fdivr
cli
call
(bad)
cli
call
div
(bad)
mov
(bad)
jmp
iret
xlat
call
rcr
call
rcr
jmp
in
dec
hlt
hlt
jmp
into
aam
xchg
into
aam
nop
int3
sar
nop
int3
sar
mov
sar
cdq
rcr
push
mov
inc
scas
ret
(bad)
call
add
add
in
repnz
add
add
cli
stc
add
mov
add
ins
cmps
mov
retf
repz
cld
sar
hlt
std
retf
hlt
repnz
cmc
repnz
hlt
icebp
dec
hlt
icebp
dec
div
call
sti
idiv
aad
idiv
xlat
(bad)
stc
(bad)
(bad)
cli
(bad)
(bad)
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
(bad)
fdivr
cli
call
std
stc
call
cli
idiv
aam
idiv
enter
(bad)
retf
sar
(bad)
retf
sar
xchg
int
call
retf
sar
xchg
rcl
call
mov
xchg
int
jl
leave
sti
outs
cmps
mov
mov
xlat
fiadd
(bad)
(bad)
sti
add
add
add
(bad)
xchg
xchg
mov
retf
sti
(bad)
sti
stc
leave
repz
dec
cmc
repnz
div
dec
cmc
repnz
cmc
repnz
hlt
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
hlt
icebp
dec
repz
dec
div
dec
cmc
hlt
call
retf
xchg
int
dec
iret
aam
mov
sar
pop
pushf
mov
sahf
xlat
(bad)
ja
ret
popf
scas
movs
push
xchg
cmps
add
lods
add
(bad)
cld
add
mov
add
(bad)
dec
jno
mov
mov
(bad)
(bad)
std
(bad)
repnz
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
div
dec
div
dec
div
dec
div
dec
cmc
repnz
div
dec
cmc
hlt
call
retf
xchg
int
dec
rcl
(bad)
jge
leave
dec
cmps
dec
stos
mov
scas
xchg
mov
add
(bad)
sti
add
repnz
jmp
hlt
jnp
mov
out
xlat
std
clc
dec
repz
dec
div
dec
cmc
repnz
div
dec
div
dec
div
dec
div
dec
div
dec
cmc
repnz
cmc
repnz
cmc
repz
div
dec
cmc
repnz
div
dec
repnz
call
retf
sar
xchg
int3
sar
nop
int3
sar
xchg
rcl
jmp
mov
(bad)
push
mov
(bad)
rcr
in
rcl
add
repz
add
add
add
test
sub
add
mov
movs
mov
aad
clc
clc
sar
hlt
dec
hlt
icebp
call
clc
cmc
dec
div
dec
repnz
repz
dec
repz
dec
div
call
clc
hlt
dec
div
dec
cmc
repnz
cmc
repnz
hlt
icebp
dec
div
inc
out
out
dec
int3
sar
(bad)
int3
sar
xchg
rcl
dec
jle
(bad)
gs
(bad)
jp
(bad)
std
dec
xchg
cmps
icebp
fwait
ror
sub
cwde
mov
retf
mov
add
test
dec
div
stc
sar
clc
cli
mov
fcmovu
cli
lahf
fcomp
std
popf
(bad)
(bad)
lahf
xlat
fdivr
test
in
inc
icebp
icebp
call
clc
hlt
call
div
call
div
call
cld
stc
push
(bad)
iret
call
iret
aam
mov
sar
push
cwde
lods
push
mov
std
pop
mov
(bad)
(bad)
inc
add
add
(bad)
add
jmp
add
cld
std
add
(bad)
sbb
retf
ror
xchg
ror
mov
mov
arpl
call
lods
inc
movs
call
mov
fs
mov
call
loopne
(bad)
mov
jmp
xlat
call
int3
sar
xchg
int
dec
ret
int
movs
fucom
std
add
test
dec
popf
mov
rol
std
(bad)
sti
add
jmp
add
loop
out
out
push
mov
fdivr
ror
cwde
mov
(bad)
inc
test
mov
push
mov
push
sar
mov
inc
sar
xchg
iret
(bad)
call
iret
(bad)
call
mov
mov
xchg
mov
les
nop
mov
out
mov
xlat
loopne
mov
fisttp
jmp
retf
(bad)
add
(bad)
call
(bad)
call
(bad)
(bad)
call
sti
stc
cli
xchg
mov
mov
mov
cld
push
mov
push
(bad)
jns
(bad)
mov
call
mov
dec
(bad)
cmps
cld
cwde
mov
jmp
cli
sti
push
(bad)
(bad)
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
clc
aas
inc
add
(bad)
lock
inc
add
add
add
inc
add
add
add
sldt
cld
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
add
rol
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
inc
add
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
inc
mov
add
in
sub
dec
mov
(bad)
push
add
(bad)
inc
(bad)
push
add
imul
add
scas
add
mov
xor
mov
in
int3
aam
fcmove
(bad)
(bad)
(bad)
push
icebp
fild
(bad)
stc
jmp
add
div
add
add
jmp
fld
lock
repnz
loope
std
(bad)
sti
add
es
xchg
in
add
enter
mov
aam
rcl
xor
out
or
out
lock
pop
mov
fcom
shr
bound
iret
shr
aam
push
jmp
hlt
les
cmc
out
jecxz
ror
mov
repnz
in
lods
rcr
mov
jecxz
ds
inc
jns
test
add
std
mov
les
add
add
lods
(bad)
fld
pop
xchg
mov
add
mov
dec
idiv
add
into
inc
pop
push
dec
mov
inc
(bad)
(bad)
add
inc
xchg
jmp
jns
call
jmp
add
jecxz
pushf
push
test
cld
xor
icebp
cld
add
out
add
mov
mov
(bad)
(bad)
test
test
(bad)
(bad)
cld
add
test
ret
stos
retf
fild
in
cli
pop
(bad)
sti
add
sar
mov
inc
stos
sti
inc
mov
(bad)
sti
add
(bad)
cld
add
(bad)
sti
add
sti
add
into
idiv
(bad)
dec
lea
(bad)
sub
jmp
cld
dec
in
cmc
cli
add
cwde
mov
(bad)
mov
in
cwde
out
retf
idiv
add
(bad)
fild
je
rol
fucomp
push
stc
cld
sti
add
out
pop
jnp
dec
xchg
sar
add
fdivr
or
ret
inc
cwde
(bad)
dec
stos
sar
movsx
inc
mov
cli
push
mov
(bad)
(bad)
cld
fldcw
jbe
jbe
lods
in
cmp
sti
cld
call
fucomip
jmp
(bad)
(bad)
add
ret
mov
mov
aad
test
pop
lahf
mov
loopne
xchg
(bad)
fdiv
jl
repnz
push
fsubr
dec
cld
inc
cwde
retf
inc
retf
call
jecxz
adc
mov
inc
mov
inc
scas
call
inc
cmp
or
push
jge
adc
cmp
or
mov
std
std
add
idiv
pop
mov
repz
loope
add
fidivr
inc
xor
jo
loopne
cmp
push
add
fdivrp
pop
mov
fdivr
adc
jmp
iret
(bad)
inc
aad
inc
fdivr
inc
aam
inc
sar
inc
sar
inc
sar
inc
shl
push
xchg
inc
pushf
retf
(bad)
fdivrp
mov
jmp
test
adc
inc
out
stc
and
enter
mov
mov
jecxz
(bad)
fwait
test
into
fiadd
(bad)
and
iret
ficom
retf
out
add
(bad)
std
pop
mov
sar
or
jmp
aad
inc
fdivr
inc
fscale
inc
xlat
std
inc
aad
inc
sar
inc
int3
(bad)
inc
(bad)
(bad)
inc
(bad)
retf
mov
fdivr
scas
ret
(bad)
in
and
(bad)
mov
mov
push
jmp
(bad)
retf
in
dec
div
(bad)
(bad)
fld
cmps
(bad)
fld
(bad)
in
add
out
add
loop
pop
xchg
mov
scas
sub
inc
test
inc
fdivrp
inc
fdivr
inc
jecxz
inc
in
inc
in
inc
in
inc
loopne
inc
(bad)
inc
(bad)
cld
inc
retf
add
(bad)
dec
xchg
leave
inc
mov
inc
test
inc
in
(bad)
inc
cmc
jmp
mov
std
loope
retf
push
jmp
les
jnp
pop
or
shr
add
(bad)
inc
xor
out
sub
inc
(bad)
inc
loop
inc
out
(bad)
inc
out
(bad)
inc
jmp
inc
in
(bad)
inc
in
std
inc
call
cld
inc
(bad)
inc
aad
inc
aad
inc
mov
dec
mov
(bad)
inc
shr
sti
jb
mov
lahf
lock
ins
jmp
int
cmc
imul
pop
rcl
retf
add
call
add
rcl
add
out
add
in
add
loopne
cmp
stos
sar
ret
std
(bad)
std
or
inc
xchg
mov
inc
(bad)
dec
loopne
inc
repz
inc
icebp
cld
inc
icebp
(bad)
inc
in
std
inc
cmc
(bad)
inc
icebp
(bad)
inc
(bad)
inc
mov
into
inc
cmc
inc
mov
fdivr
add
mov
aam
jecxz
(bad)
out
out
in
repz
(bad)
(bad)
inc
mov
mov
cmp
scas
aam
mov
fucomip
inc
pop
pusha
call
push
pop
dec
int
inc
(bad)
(bad)
inc
idiv
inc
cmc
sti
inc
sti
(bad)
inc
mov
mov
inc
loope
inc
(bad)
add
(bad)
inc
mov
cli
or
fdivr
jae
cmps
pop
jne
cmps
add
add
ins
add
add
add
ret
add
mov
cmp
(bad)
(bad)
stos
std
(bad)
std
inc
out
(bad)
inc
cld
(bad)
dec
out
inc
sti
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sti
cld
inc
cld
(bad)
inc
iret
sar
cmovl
adc
call
outs
dec
(bad)
cmps
inc
aam
inc
mov
clc
inc
stos
std
stc
push
xchg
fdivr
pop
mov
add
mov
je
rol
jo
add
(bad)
sti
add
add
mov
aas
xor
(bad)
cld
ds
inc
out
inc
idiv
inc
std
(bad)
dec
cld
std
call
std
(bad)
call
cld
std
call
(bad)
(bad)
inc
sti
std
inc
(bad)
(bad)
dec
repnz
call
scas
mov
adc
jmp
inc
sar
add
(bad)
std
add
mov
xchg
mov
(bad)
push
ret
fucom
add
add
add
ret
(bad)
fnsave
xchg
mov
jbe
idiv
push
stc
(bad)
inc
cli
(bad)
inc
clc
cli
call
(bad)
(bad)
jmp
std
cld
call
std
std
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
repz
inc
idiv
inc
lock
inc
(bad)
inc
retf
add
sti
inc
mov
idiv
and
scas
std
sub
(bad)
sbb
iret
fld
cmc
(bad)
inc
lods
int
add
xchg
movs
jmp
addr16
add
inc
inc
call
add
sub
clc
push
sti
sti
call
std
dec
in
out
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
lock
inc
fdivr
inc
sar
inc
retf
(bad)
dec
jne
jmp
cld
jnp
sar
xchg
stos
jb
jl
add
movs
add
add
add
(bad)
clc
add
loop
adc
(bad)
shl
outs
lods
mov
cld
and
(bad)
adc
mov
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
loop
dec
inc
inc
inc
lods
inc
fdivr
dec
lods
iret
jmp
test
jmp
dec
stos
std
addr16
mov
mov
loopne
mov
loope
add
add
add
(bad)
sti
add
xchg
add
cmps
add
lods
xor
out
push
cdq
scas
jmp
nop
mov
jmp
mov
call
int3
aam
push
aam
call
aam
call
mov
jno
adc
push
call
inc
push
push
movs
(bad)
aas
jnp
jmp
stos
inc
enter
mov
(bad)
ins
test
(bad)
jbe
int
cmp
lds
std
(bad)
sti
add
out
add
fsub
cmp
(bad)
sti
sti
(bad)
out
in
(bad)
popf
into
(bad)
(bad)
jns
mov
inc
xchg
(bad)
cmp
(bad)
cmp
push
jne
push
mov
call
jmp
mov
call
xlat
(bad)
jle
(bad)
cli
cmp
mov
add
add
add
ret
mov
add
outs
add
in
call
sti
idiv
aad
idiv
aad
cli
dec
div
push
fsub
jmp
xlat
(bad)
mov
(bad)
fdivr
mov
out
call
iret
aam
mov
sar
nop
int3
sar
jno
mov
(bad)
sahf
ret
ror
add
add
add
add
(bad)
inc
bound
les
pop
sbb
repnz
idiv
leave
repz
retf
dec
div
call
cli
idiv
aad
idiv
xlat
std
clc
call
std
clc
call
std
clc
call
sti
idiv
sar
idiv
retf
call
retf
sar
xchg
iret
aam
test
int3
(bad)
je
ret
mov
lods
addr16
jge
add
mov
repnz
add
retf
add
fcmovu
call
(bad)
stc
stc
leave
repnz
hlt
repnz
hlt
icebp
dec
hlt
icebp
dec
repz
dec
repz
dec
repz
dec
repz
cmc
repnz
repnz
call
sar
xchg
rcl
(bad)
jge
(bad)
jmp
mov
cmp
push
movs
ror
mov
add
add
out
add
int3
add
mov
mov
out
fdivr
stc
stc
sar
cmc
cld
sar
cmc
cld
iret
div
call
stc
cmc
(bad)
sar
cmc
dec
div
dec
hlt
icebp
dec
div
inc
lock
call
retf
sar
xchg
rcl
(bad)
pop
call
ins
test
out
(bad)
fisubr
lock
repz
sti
stc
add
add
add
loop
pop
fwait
lods
add
test
push
nop
cmps
adc
mov
push
rcr
call
into
aad
movs
(bad)
(bad)
mov
cmc
repz
cld
clc
(bad)
mov
enter
rcl
(bad)
jns
(bad)
mov
cld
add
mov
adc
dec
jns
cld
std
std
add
(bad)
loope
push
xchg
cmps
add
test
add
rcr
mov
jl
mov
call
scas
(bad)
arpl
sar
(bad)
iret
call
retf
sar
(bad)
int3
sar
xchg
into
aam
nop
int3
sar
nop
int3
sar
outs
test
mov
add
div
add
mov
mov
ret
clc
stc
add
(bad)
dec
hlt
stc
sti
(bad)
in
lock
call
mov
mov
jno
mov
inc
ret
push
fwait
scas
call
std
inc
lock
add
in
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
clc
jo
aas
lock
pop
lock
add
add
add
add
rol
add
add
add
clc
add
add
add
psubb
add
clc
add
aas
clc
add
(bad)
add
psubb
add
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
inc
add
inc
add
inc
add
inc
add
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
jmp
leave
aad
add
jmp
add
rcl
(bad)
push
fcmovbe
retf
inc
repz
ins
clc
in
rcl
loop
(bad)
xchg
(bad)
aad
cs
loop
add
(bad)
add
(bad)
inc
jp
mov
add
leave
jmp
sub
push
cmps
jmp
push
mov
xlat
rol
iret
iret
lea
(bad)
and
ret
ror
icebp
out
mov
mov
mov
pop
fs
inc
shr
sti
push
sahf
sar
add
stos
loop
add
(bad)
and
mov
fcomi
xor
(bad)
(bad)
fwait
test
stos
nop
cdq
mov
lds
int3
in
add
in
add
cld
sti
add
std
inc
(bad)
(bad)
inc
enter
test
shl
dec
lods
shr
push
mov
inc
rol
je
fadd
fs
fwait
ret
mov
(bad)
(bad)
adc
jecxz
add
repnz
in
cld
inc
jmp
add
(bad)
inc
popf
fdivr
add
int
jmp
retf
jmp
xor
fld
push
stos
shr
out
clc
dec
mov
inc
sti
cld
inc
stc
std
inc
mov
mov
cld
add
loopne
mov
ja
test
test
add
xchg
mov
inc
pushf
mov
jnp
into
loopne
add
jmp
pop
div
jmp
(bad)
(bad)
call
(bad)
inc
repnz
dec
(bad)
in
add
cld
inc
mov
int3
cld
xchg
mov
add
mov
add
mov
jne
pop
mov
call
loope
inc
pushf
stos
dec
mov
(bad)
cmp
mov
jb
mov
add
mov
scas
int
add
mov
pop
mov
in
std
jle
enter
mov
push
lods
mov
jmp
mov
(bad)
xchg
enter
mov
shl
mov
add
iret
xlat
add
lods
mov
(bad)
fdivrp
cld
(bad)
(bad)
stc
(bad)
fsqrt
idiv
fdivr
sti
dec
(bad)
sti
call
ror
jbe
shl
ret
rcr
movs
mov
rol
pushf
ror
cmps
mov
les
jle
mov
jg
loop
imul
(bad)
(bad)
mov
out
call
mov
push
mov
add
div
add
add
add
icebp
call
add
rcr
addr16
mov
shr
mov
retf
leave
sar
cmp
push
imul
cld
add
inc
add
inc
add
pop
add
add
add
add
add
add
add
pop
add
rol
add
add
add
pop
add
lock
add
lock
add
clc
pop
add
(bad)
inc
add
inc
add
ins
xor
add
add
cmp
add
cdq
or
add
add
inc
and
add
add
add
gs
add
add
add
add
rol
add
rcl
add
add
add
add
push
add
gs
add
add
add
add
add
loopne
add
or
adc
add
add
add
add
add
je
add
add
add
(bad)
or
pop
or
add
jmp
mov
mov
clc
(bad)
mov
mov
shr
cli
int
mov
mov
mov
mov
mov
mov
xlat
mul
or
hlt
mov
mov
lds
mov
iret
int
retf
stc
retf
mov
mov
(bad)
xlat
jmp
retf
jmp
mov
jmp
mov
sar
rcl
leave
iret
mov
repz
inc
xor
mov
mov
leave
mov
rcl
mov
loop
mov
mov
repz
mov
mov
aam
mov
sar
rcl
mov
mov
shr
aam
mov
mov
inc
xor
mov
mov
mov
mov
mov
add
pop
jmp
fild
add
add
arpl
xor
add
mov
add
ins
je
add
dec
stos
fild
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
out
out
out
(bad)
ror
mov
sub
ror
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmc
cmc
cmc
aad
enter
lea
mov
outs
mov
jbe
sbb
aas
xchg
outs
push
mov
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
mov
xchg
pop
(bad)
out
(bad)
in
retf
(bad)
bnd
bnd
arpl
test
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
shr
sar
call
(bad)
out
xlat
push
jecxz
bnd
out
xlat
(bad)
call
mov
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
xchg
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
out
xchg
lods
pop
lock
jl
fcom
call
(bad)
out
xlat
(bad)
out
(bad)
out
xlat
(bad)
in
int3
(bad)
call
mov
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
sahf
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
stos
pushf
fwait
imul
(bad)
je
rol
in
(bad)
call
(bad)
in
retf
(bad)
(bad)
call
cli
ficomp
cdq
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
lock
aad
cli
ficomp
out
(bad)
out
(bad)
out
(bad)
in
cli
ficomp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
lahf
push
loopne
pop
jmp
rol
fstp
fstp
rol
shr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
iret
xchg
dec
fsub
out
push
(bad)
je
retf
jl
sub
into
xor
jl
sub
lods
pop
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
xor
xor
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
aas
mov
stos
pop
in
(bad)
out
imul
shr
dec
sub
mov
jge
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
xchg
push
leave
mov
lea
xchg
dec
xlat
mov
(bad)
(bad)
xlat
mov
cmps
ins
cmp
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
jecxz
mov
xchg
pop
mov
xchg
dec
rcl
rcr
mov
ja
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
repz
ret
repnz
(bad)
repnz
cmc
shl
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
jmp
mov
ffree
cmc
aad
jmp
mov
icebp
iret
scas
hlt
aam
ror
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
mov
xor
(bad)
out
out
out
out
out
out
loop
rcr
sub
fdivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
clc
test
xchg
inc
adc
pop
cmp
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
out
xchg
xchg
fs
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
out
out
out
(bad)
ror
mov
sub
ror
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmc
cmc
cmc
aad
enter
lea
mov
outs
mov
jbe
sbb
aas
xchg
outs
push
mov
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
mov
xchg
pop
(bad)
out
(bad)
in
retf
(bad)
bnd
bnd
arpl
test
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
shr
sar
call
(bad)
out
xlat
push
jecxz
bnd
out
xlat
(bad)
call
mov
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
xchg
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
out
xchg
lods
pop
lock
jl
fcom
call
(bad)
out
xlat
(bad)
out
(bad)
out
xlat
(bad)
in
int3
(bad)
call
mov
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
sahf
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
stos
pushf
fwait
imul
(bad)
je
rol
in
(bad)
call
(bad)
in
retf
(bad)
(bad)
call
cli
ficomp
cdq
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
lock
aad
cli
ficomp
out
(bad)
out
(bad)
out
(bad)
in
cli
ficomp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
lahf
push
loopne
pop
jmp
rol
fstp
fstp
rol
shr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
inc
add
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
iret
xchg
dec
fsub
out
push
(bad)
je
retf
jl
sub
into
xor
jl
sub
lods
pop
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
xor
xor
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
aas
mov
stos
pop
in
(bad)
out
imul
shr
dec
sub
mov
jge
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
xchg
push
leave
mov
lea
xchg
dec
xlat
mov
(bad)
(bad)
xlat
mov
cmps
ins
cmp
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
inc
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
jecxz
mov
xchg
pop
mov
xchg
dec
rcl
rcr
mov
ja
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
repz
ret
repnz
(bad)
repnz
cmc
shl
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
jmp
mov
ffree
cmc
aad
jmp
mov
icebp
iret
scas
hlt
aam
ror
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
mov
xor
(bad)
out
out
out
out
out
out
loop
rcr
sub
fdivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
clc
test
xchg
inc
adc
pop
cmp
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
out
xchg
xchg
fs
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
out
out
out
(bad)
ror
mov
sub
ror
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmc
cmc
cmc
aad
enter
lea
mov
outs
mov
jbe
sbb
aas
xchg
outs
push
mov
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
mov
xchg
pop
(bad)
out
(bad)
in
retf
(bad)
bnd
bnd
arpl
test
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
shr
sar
call
(bad)
out
xlat
push
jecxz
bnd
out
xlat
(bad)
call
mov
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
xchg
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
out
xchg
lods
pop
lock
jl
fcom
call
(bad)
out
xlat
(bad)
out
(bad)
out
xlat
(bad)
in
int3
(bad)
call
mov
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
sahf
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
stos
pushf
fwait
imul
(bad)
je
rol
in
(bad)
call
(bad)
in
retf
(bad)
(bad)
call
cli
ficomp
cdq
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
lock
aad
cli
ficomp
out
(bad)
out
(bad)
out
(bad)
in
cli
ficomp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
lahf
push
loopne
pop
jmp
rol
fstp
fstp
rol
shr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
iret
xchg
dec
fsub
out
push
(bad)
je
retf
jl
sub
into
xor
jl
sub
lods
pop
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
xor
xor
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
aas
mov
stos
pop
in
(bad)
out
imul
shr
dec
sub
mov
jge
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
xchg
push
leave
mov
lea
xchg
dec
xlat
mov
(bad)
(bad)
xlat
mov
cmps
ins
cmp
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
jecxz
mov
xchg
pop
mov
xchg
dec
rcl
rcr
mov
ja
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
repz
ret
repnz
(bad)
repnz
cmc
shl
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
jmp
mov
ffree
cmc
aad
jmp
mov
icebp
iret
scas
hlt
aam
ror
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
mov
xor
(bad)
out
out
out
out
out
out
loop
rcr
sub
fdivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
clc
test
xchg
inc
adc
pop
cmp
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
out
xchg
xchg
fs
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
out
out
out
(bad)
ror
mov
sub
ror
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmc
cmc
cmc
aad
enter
lea
mov
outs
mov
jbe
sbb
aas
xchg
outs
push
mov
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
mov
xchg
pop
(bad)
out
(bad)
in
retf
(bad)
bnd
bnd
arpl
test
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
shr
sar
call
(bad)
out
xlat
push
jecxz
bnd
out
xlat
(bad)
call
mov
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
xchg
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
out
xchg
lods
pop
lock
jl
fcom
call
(bad)
out
xlat
(bad)
out
(bad)
out
xlat
(bad)
in
int3
(bad)
call
mov
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
sahf
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
stos
pushf
fwait
imul
(bad)
je
rol
in
(bad)
call
(bad)
in
retf
(bad)
(bad)
call
cli
ficomp
cdq
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
lock
aad
cli
ficomp
out
(bad)
out
(bad)
out
(bad)
in
cli
ficomp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
lahf
push
loopne
pop
jmp
rol
fstp
fstp
rol
shr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
iret
xchg
dec
fsub
out
push
(bad)
je
retf
jl
sub
into
xor
jl
sub
lods
pop
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
add
(bad)
inc
add
add
add
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
xor
xor
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
aas
mov
stos
pop
in
(bad)
out
imul
shr
dec
sub
mov
jge
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
xchg
push
leave
mov
lea
xchg
dec
xlat
mov
(bad)
(bad)
xlat
mov
cmps
ins
cmp
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
jecxz
mov
xchg
pop
mov
xchg
dec
rcl
rcr
mov
ja
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
repz
ret
repnz
(bad)
repnz
cmc
shl
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
jmp
mov
ffree
cmc
aad
jmp
mov
icebp
iret
scas
hlt
aam
ror
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
call
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
mov
xor
(bad)
out
out
out
out
out
out
loop
rcr
sub
fdivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
clc
test
xchg
inc
adc
pop
cmp
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
out
xchg
xchg
fs
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
cli
cli
out
out
out
(bad)
ror
mov
sub
ror
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmc
cmc
cmc
aad
enter
lea
mov
outs
mov
jbe
sbb
aas
xchg
outs
push
mov
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
mov
xchg
pop
(bad)
out
(bad)
in
retf
(bad)
bnd
bnd
arpl
test
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
gs
bound
arpl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
shr
sar
call
(bad)
out
xlat
push
jecxz
bnd
out
xlat
(bad)
call
mov
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
xchg
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
out
xchg
lods
pop
lock
jl
fcom
call
(bad)
out
xlat
(bad)
out
(bad)
out
xlat
(bad)
in
int3
(bad)
call
mov
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cdq
cdq
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
jmp
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
sahf
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
stos
pushf
fwait
imul
(bad)
je
rol
in
(bad)
call
(bad)
in
retf
(bad)
(bad)
call
cli
ficomp
cdq
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
add
add
add
cmp
cmp
and
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
lock
aad
cli
ficomp
out
(bad)
out
(bad)
out
(bad)
in
cli
ficomp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cdq
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
call
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
xor
fisttp
xor
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
lahf
push
loopne
pop
jmp
rol
fstp
fstp
rol
shr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cdq
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
jb
(bad)
xchg
pop
sar
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
iret
xchg
dec
fsub
out
push
(bad)
je
retf
jl
sub
into
xor
jl
sub
lods
pop
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
and
and
cmp
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
and
cdq
cdq
cdq
(bad)
(bad)
call
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
jmp
test
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
xor
xor
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
aas
mov
stos
pop
in
(bad)
out
imul
shr
dec
sub
mov
jge
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
(bad)
call
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
xchg
push
leave
mov
lea
xchg
dec
xlat
mov
(bad)
(bad)
xlat
mov
cmps
ins
cmp
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
call
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
movs
xchg
fwait
sahf
mov
xchg
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
jecxz
mov
xchg
pop
mov
xchg
dec
rcl
rcr
mov
ja
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cdq
cdq
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
mov
repz
ret
repnz
(bad)
repnz
cmc
shl
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
jmp
mov
ffree
cmc
aad
jmp
mov
icebp
iret
scas
hlt
aam
ror
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
cmp
cmp
cmp
(bad)
(bad)
(bad)
cmp
cmp
cmp
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
call
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lock
mov
xor
(bad)
out
out
out
out
out
out
loop
rcr
sub
fdivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
add
add
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
clc
test
xchg
inc
adc
pop
cmp
retf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
out
xchg
xchg
fs
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
div
cli
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
ss
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
(bad)
(bad)
cli
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
add
hlt
jmp
(bad)
(bad)
(bad)
cld
div
cli
repnz
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
(bad)
(bad)
(bad)
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
std
clc
cmc
(bad)
cli
idiv
cmc
test
int
sub
push
pop
jbe
test
push
and
ja
mov
rol
imul
shl
out
in
lock
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
(bad)
(bad)
(bad)
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
cld
clc
idiv
idiv
repz
hlt
ja
xor
popa
push
add
cmp
xchg
mov
test
iret
in
call
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
(bad)
(bad)
(bad)
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
clc
idiv
div
sti
cmps
movs
mov
cmp
push
arpl
aas
push
add
pop
add
ja
mov
outs
mov
jbe
mov
loopne
(bad)
hlt
out
mov
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
(bad)
(bad)
(bad)
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
xchg
mov
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
mov
sar
xor
dec
data16
ins
jge
sub
or
xor
xchg
nop
scas
mov
mov
jns
lods
mov
mov
fwait
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
imul
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
(bad)
(bad)
(bad)
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
(bad)
(bad)
dec
gs
bound
arpl
(bad)
push
in
push
in
push
in
push
in
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
xchg
shr
shr
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
jle
mov
push
imul
push
push
sub
outs
test
push
and
push
dec
gs
js
pop
xchg
xchg
push
scas
call
(bad)
jmp
fwait
in
bound
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
cmp
cmp
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
(bad)
(bad)
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
lea
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
clc
out
(bad)
clc
out
(bad)
clc
out
shl
in
xchg
shr
shr
shr
shr
clc
out
xchg
shr
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
cmps
fwait
pop
lea
xor
and
js
lods
jo
stos
dec
push
mov
fwait
mov
push
scas
push
into
ret
jmp
push
mov
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
clc
out
add
clc
out
add
add
add
(bad)
clc
out
(bad)
clc
out
add
clc
out
add
clc
out
add
add
clc
out
add
add
clc
out
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
add
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
clc
out
(bad)
clc
out
(bad)
(bad)
(bad)
(bad)
clc
out
add
clc
out
(bad)
clc
out
(bad)
clc
out
add
clc
out
(bad)
clc
out
(bad)
clc
out
add
clc
out
(bad)
clc
out
(bad)
clc
out
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
mov
(bad)
jmp
jmp
inc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
clc
out
(bad)
clc
out
shl
out
sahf
(bad)
jmp
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
xchg
shr
loopne
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
pusha
enter
lahf
inc
outs
jb
xor
sub
mov
and
icebp
mov
loope
mov
push
or
xlat
scas
aam
pop
mov
dec
ror
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
add
(bad)
(bad)
inc
add
cmp
cmp
cmp
add
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
(bad)
(bad)
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
jo
idiv
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
inc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
clc
out
shl
out
mov
out
(bad)
clc
out
(bad)
clc
out
inc
cmps
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
call
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
xlat
cwde
push
pushf
jo
pushf
cs
pop
push
xor
mov
into
jmp
(bad)
in
cdq
mov
mov
mov
repz
test
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
cmp
add
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
(bad)
(bad)
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
xchg
jbe
(bad)
(bad)
call
xor
fisttp
xor
(bad)
(bad)
inc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
clc
out
mov
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
xor
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
mov
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
outs
rcl
enter
imul
pop
jg
scas
ror
int3
shr
iret
aam
retf
mov
shl
mov
loopne
int3
out
mov
iret
dec
pushf
cmp
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
add
cmp
cmp
add
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
add
add
add
(bad)
clc
out
(bad)
clc
out
(bad)
(bad)
(bad)
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
add
add
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
xchg
jnp
(bad)
(bad)
dec
jb
(bad)
xchg
pop
sar
(bad)
(bad)
inc
out
(bad)
clc
out
(bad)
clc
out
(bad)
clc
out
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
clc
icebp
mov
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
xor
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
cwde
shr
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
jne
xchg
js
call
pop
js
lea
rcl
out
fcmovnu
cmc
fcmovnu
repz
cli
fsub
stc
jge
mov
pushf
rol
lods
cdq
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
clc
icebp
(bad)
clc
icebp
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
add
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
cmp
cmp
cmp
add
add
clc
icebp
(bad)
clc
icebp
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
add
(bad)
clc
icebp
(bad)
clc
icebp
add
add
add
(bad)
clc
icebp
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
cdq
or
shl
retf
xchg
in
test
(bad)
dec
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
clc
icebp
(bad)
fucomip
(bad)
clc
icebp
(bad)
clc
icebp
xor
xor
xor
(bad)
clc
icebp
vpaddsw
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
outs
(bad)
nop
je
cwde
pop
mov
ins
xchg
call
cli
mov
mov
in
xchg
xchg
lahf
mov
mov
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
cmp
cmp
cmp
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
(bad)
(bad)
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
add
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
xchg
jp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
icebp
(bad)
clc
icebp
(bad)
clc
icebp
(bad)
clc
icebp
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
clc
repnz
lock
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
(bad)
jmp
loopne
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
stos
ja
in
mov
mov
mov
sub
sub
mov
rcr
xchg
loopne
mov
rcr
test
ret
addr16
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
add
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
add
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
add
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
add
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
(bad)
(bad)
(bad)
clc
repnz
add
add
(bad)
clc
repnz
clc
repnz
clc
repnz
add
clc
repnz
clc
repnz
clc
repnz
add
clc
repnz
add
clc
repnz
clc
repnz
clc
repnz
add
clc
repnz
add
clc
repnz
clc
repnz
clc
repnz
add
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
(bad)
jmp
dec
movs
xchg
fwait
sahf
mov
xchg
xchg
(bad)
(bad)
(bad)
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
div
jmp
(bad)
(bad)
(bad)
cli
repnz
clc
repnz
clc
repnz
lock
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
ret
jmp
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
test
push
call
arpl
jl
inc
pop
aaa
cmp
inc
pop
pop
pop
jno
cmp
mov
mov
lods
inc
popf
or
ss
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
add
add
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
add
add
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
add
add
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
(bad)
(bad)
(bad)
clc
repnz
clc
repnz
add
clc
repnz
clc
repnz
clc
repnz
clc
repnz
add
add
add
add
clc
repnz
clc
repnz
clc
repnz
add
add
add
add
clc
repnz
clc
repnz
clc
repnz
add
add
add
add
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
div
jmp
(bad)
(bad)
(bad)
cli
repnz
clc
repnz
clc
repnz
clc
repnz
lock
jmp
mov
mov
in
shl
lock
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
mov
arpl
cmp
bound
jnp
dec
bound
gs
dec
gs
inc
pusha
push
pop
outs
push
mov
inc
sahf
test
lods
xor
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
(bad)
(bad)
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
repnz
clc
repnz
clc
repnz
clc
repnz
div
jmp
(bad)
(bad)
(bad)
cli
repnz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
sahf
jl
popf
bound
pop
jp
pop
outs
jp
xchg
push
ins
pop
push
outs
pop
push
gs
ja
lea
lods
test
dec
push
mov
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
(bad)
(bad)
(bad)
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
div
jmp
(bad)
(bad)
(bad)
cli
repnz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
movs
jae
fwait
js
popf
push
fwait
jno
test
cmps
movs
mov
data16
imul
or
popa
stos
xchg
test
cmp
or
(bad)
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
(bad)
(bad)
(bad)
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
div
jmp
(bad)
(bad)
(bad)
cli
repnz
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
sub
cmp
fs
pushf
jne
lods
xchg
mov
leave
scas
(bad)
mov
call
mov
mov
adc
xor
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
(bad)
(bad)
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
add
div
jmp
(bad)
(bad)
(bad)
cli
repnz
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
xor
outs
xor
imul
pop
cmps
jns
js
dec
outs
pop
data16
cdq
mov
push
jle
mov
sahf
dec
xchg
addr16
cmps
ins
adc
dec
push
xchg
push
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
(bad)
(bad)
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
add
div
jmp
(bad)
(bad)
(bad)
cld
div
cli
repnz
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
(bad)
stc
hlt
add
div
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
div
cli
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
hlt
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
ss
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jge
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jge
mov
fidivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jge
mov
fidivr
fidivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jge
mov
fidivr
fidivr
fidivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fidivr
mov
ss
ss
ss
jge
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
xlat
mov
(bad)
(bad)
push
cmc
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
add
cli
imul
cli
imul
xlat
mov
(bad)
(bad)
push
cmc
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
add
cli
imul
cli
imul
xlat
mov
(bad)
(bad)
push
cmc
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
add
cli
imul
cli
imul
xlat
mov
(bad)
(bad)
push
cmc
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
add
cli
imul
cli
imul
xlat
mov
(bad)
(bad)
push
cmc
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
add
cli
imul
cli
imul
xlat
mov
(bad)
(bad)
push
cmc
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
add
cli
imul
cli
imul
mov
jl
std
push
cmc
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
div
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
imul
cli
imul
mov
jl
(bad)
(bad)
cli
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
cmc
repnz
(bad)
push
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
add
cli
imul
cli
imul
mov
jl
(bad)
push
clc
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
idiv
out
(bad)
(bad)
push
fnsave
fcomip
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
imul
mov
jl
repnz
fcomip
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
add
imul
cli
imul
mov
jl
(bad)
(bad)
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
clc
cmc
icebp
(bad)
(bad)
(bad)
mov
jl
repnz
loope
out
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
sti
mul
mov
jl
repnz
loope
out
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
add
cli
imul
cli
imul
mov
jl
cld
push
div
div
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
cld
push
fnsave
fucomip
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
stc
icebp
mov
jl
repnz
fucomip
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
imul
cli
imul
mov
jl
std
std
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
std
std
std
mov
jl
repnz
loop
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
(bad)
cld
repnz
jl
lock
mov
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
add
cli
imul
cli
imul
mov
jl
(bad)
(bad)
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
gs
xor
div
stc
div
stc
div
stc
div
stc
div
gs
xor
inc
xor
div
stc
div
stc
div
stc
div
gs
xor
div
gs
xor
inc
xor
inc
xor
div
stc
div
stc
div
stc
div
gs
xor
inc
xor
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
(bad)
(bad)
push
fnsave
in
jmp
jmp
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
pop
cmps
(bad)
pop
jmp
retf
retf
pop
cmps
(bad)
pop
jmp
retf
pop
jmp
retf
retf
retf
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
jmp
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
out
mov
jl
lock
mov
jmp
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
retf
pop
cmps
(bad)
pop
cmps
(bad)
pop
jmp
retf
retf
retf
retf
retf
pop
cmps
(bad)
pop
jmp
retf
pop
jmp
retf
retf
retf
pop
jmp
retf
retf
pop
cmps
(bad)
pop
cmps
(bad)
pop
jmp
retf
retf
retf
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
jmp
retf
retf
retf
pop
jmp
retf
retf
cli
imul
cli
imul
mov
jl
std
(bad)
clc
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
xor
clc
repnz
clc
repnz
xor
clc
repnz
clc
repnz
xor
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
xor
clc
repnz
clc
repnz
clc
repnz
xor
clc
repnz
xor
inc
xor
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
clc
repnz
std
push
fnsave
jmp
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
out
out
cmps
(bad)
pop
out
out
cmps
(bad)
pop
cmps
(bad)
pop
out
out
out
out
out
out
cmps
(bad)
pop
out
out
cmps
(bad)
pop
cmps
(bad)
pop
out
out
out
out
out
out
out
out
cmps
(bad)
pop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
cld
cli
lock
jl
lock
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
out
out
out
out
cmps
(bad)
pop
out
out
cmps
(bad)
pop
out
out
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
out
out
out
out
out
out
out
out
out
out
cmps
(bad)
pop
out
out
out
out
cmps
(bad)
pop
out
out
out
out
cmps
(bad)
pop
out
out
out
out
out
out
cmps
(bad)
pop
out
out
out
out
add
cli
imul
cli
imul
mov
jl
std
(bad)
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
gs
xor
inc
xor
div
stc
div
stc
div
gs
xor
div
stc
div
stc
div
stc
div
stc
div
stc
div
gs
xor
div
stc
div
stc
div
gs
xor
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
(bad)
std
push
fnsave
in
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
pop
call
pop
cmps
(bad)
pop
cmps
(bad)
pop
call
pop
call
(bad)
call
les
les
(bad)
call
(bad)
call
pop
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
cmc
mov
jl
icebp
fidiv
in
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
les
(bad)
call
pop
cmps
(bad)
pop
call
les
les
(bad)
call
les
(bad)
call
(bad)
call
les
les
pop
call
les
(bad)
call
les
(bad)
call
sti
div
sti
div
mov
jl
cld
(bad)
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
gs
xor
inc
xor
div
gs
xor
div
sti
div
sti
div
gs
xor
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
gs
xor
div
gs
xor
div
gs
xor
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
sti
div
(bad)
cld
(bad)
mov
jl
repnz
jmp
in
call
mov
in
call
mov
in
call
mov
in
call
mov
in
call
mov
in
call
mov
in
call
mov
in
call
pop
call
mov
(bad)
pop
call
mov
(bad)
pop
call
mov
in
call
mov
in
call
mov
in
call
mov
in
call
mov
in
call
mov
in
call
mov
in
call
mov
in
call
mov
mov
mov
jl
stc
jmp
in
call
mov
in
call
mov
in
call
mov
in
call
mov
in
call
mov
(bad)
pop
call
pop
call
mov
(bad)
pop
call
mov
in
cmps
(bad)
pop
call
mov
(bad)
pop
call
mov
in
call
pop
call
mov
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
call
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
add
cli
div
cli
div
mov
jl
std
(bad)
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
gs
xor
div
stc
div
gs
xor
div
stc
div
stc
div
gs
xor
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
gs
xor
div
gs
xor
div
stc
div
gs
xor
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
(bad)
std
push
fnsave
in
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
jmp
mov
(bad)
pop
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
mov
mov
jl
cli
in
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
mov
loope
jmp
pop
cmps
(bad)
pop
cmps
(bad)
pop
jmp
pop
jmp
pop
jmp
mov
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
jmp
mov
loope
jmp
pop
jmp
mov
loope
jmp
mov
loope
jmp
pop
jmp
mov
out
cli
imul
mov
jl
(bad)
(bad)
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
gs
xor
cmc
icebp
div
icebp
gs
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
cmc
icebp
div
icebp
div
icebp
div
icebp
div
icebp
gs
xor
cmc
icebp
div
icebp
div
icebp
gs
xor
cmc
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
div
icebp
(bad)
(bad)
(bad)
mov
jl
repnz
jmp
out
mov
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
(bad)
pop
out
mov
fistp
fistp
fistp
fistp
(bad)
pop
out
mov
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
mov
mov
jl
std
jmp
out
mov
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
fistp
(bad)
pop
out
mov
(bad)
pop
out
mov
(bad)
pop
out
mov
(bad)
pop
out
mov
fistp
fistp
fistp
fistp
fistp
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
out
mov
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
add
cli
imul
cli
cmc
out
mov
jl
(bad)
(bad)
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
gs
xor
div
stc
div
gs
xor
div
stc
div
gs
xor
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
gs
xor
inc
xor
inc
xor
inc
xor
inc
xor
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
stc
div
(bad)
(bad)
push
fnsave
repz
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shl
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
out
in
shl
pop
out
in
shr
in
shl
shr
in
shr
in
shl
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
sar
std
stc
mov
jl
repnz
repz
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shr
in
shl
shr
in
shl
shr
in
shr
in
shr
in
shr
in
shl
shr
in
shr
in
shl
pop
out
in
shr
in
shr
in
shr
in
shl
shr
in
shr
in
shl
shl
shr
in
shr
in
shl
shr
in
rol
add
cmc
in
cli
cmc
in
mov
jl
(bad)
(bad)
stc
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
xor
stc
repz
stc
repz
xor
stc
repz
stc
repz
xor
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
xor
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
(bad)
push
fnsave
icebp
lock
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
fldenv
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
fldenv
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
fldenv
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
lock
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
fscale
sti
cli
mov
jl
icebp
(bad)
icebp
lock
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
f2xm1
in
fldenv
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
lock
fldenv
f2xm1
in
f2xm1
in
fldenv
fldenv
f2xm1
in
f2xm1
in
fldenv
f2xm1
in
f2xm1
in
fldenv
fldenv
f2xm1
in
f2xm1
in
fldenv
f2xm1
in
fld
add
hlt
in
stc
hlt
in
mov
jl
(bad)
(bad)
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
gs
xor
inc
xor
inc
xor
inc
xor
inc
xor
stc
icebp
sti
stc
icebp
sti
stc
icebp
gs
xor
stc
icebp
sti
stc
icebp
sti
stc
icebp
gs
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
sti
stc
icebp
(bad)
(bad)
push
fnsave
hlt
hlt
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fsub
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
hlt
jmp
fdiv
jmp
pop
hlt
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdivr
cli
cli
mov
jl
lock
hlt
hlt
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
fdiv
jmp
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
hlt
jmp
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
hlt
jmp
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
hlt
jmp
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
add
stc
hlt
jmp
hlt
jmp
mov
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
gs
xor
div
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
gs
xor
div
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
gs
xor
div
div
cmc
div
cmc
div
cmc
gs
xor
div
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
div
cmc
(bad)
std
push
fnsave
cmc
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
cmps
(bad)
pop
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
cmps
(bad)
pop
out
jmp
out
jmp
out
jmp
out
jmp
cmps
(bad)
pop
out
jmp
out
jmp
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
cld
cld
div
fnsave
cmc
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
out
jmp
out
jmp
cmps
(bad)
pop
out
jmp
out
jmp
cmps
(bad)
pop
out
jmp
out
jmp
out
jmp
out
jmp
cmps
(bad)
pop
out
jmp
out
jmp
out
jmp
out
jmp
cmps
(bad)
pop
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
cmps
(bad)
pop
out
jmp
cmps
(bad)
pop
out
jmp
out
jmp
cmps
(bad)
pop
out
jmp
cmps
(bad)
pop
out
jmp
add
stc
hlt
jmp
std
cld
(bad)
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
gs
xor
stc
cmc
clc
stc
cmc
gs
xor
inc
xor
inc
xor
inc
xor
inc
xor
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
gs
xor
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
clc
stc
cmc
std
cld
push
fnsave
hlt
div
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fsub
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
div
fdiv
icebp
fdiv
icebp
fsub
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fsub
pop
div
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdivr
cli
cld
mov
jl
lock
hlt
div
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fsub
fsub
fsub
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fsub
fdiv
icebp
fdiv
icebp
fsub
fdiv
icebp
fdiv
icebp
fdiv
icebp
fdiv
icebp
fsub
pop
cmps
(bad)
pop
cmps
(bad)
pop
div
fsub
fdiv
icebp
fdiv
icebp
fsub
stc
hlt
jmp
mov
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
cli
cli
hlt
(bad)
(bad)
std
mov
jl
repnz
repnz
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fdivr
std
div
(bad)
repnz
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fsubr
out
fadd
add
repz
mov
stc
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
stc
repz
std
push
fnsave
hlt
repz
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
(bad)
imul
mov
jl
icebp
fnsave
hlt
repz
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fcomip
out
fild
add
repz
repz
xlat
mov
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
mov
jl
xlat
mov
fnstcw
imul
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
mov
jl
xlat
mov
fnstcw
imul
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
div
in
add
clc
repnz
repnz
out
in
mov
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
fnstcw
repnz
repz
(bad)
mov
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
aam
out
lock
icebp
fcomi
repz
(bad)
mov
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
mov
jl
mov
add
div
in
repnz
repnz
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
jecxz
icebp
in
icebp
in
icebp
in
lock
icebp
jecxz
icebp
in
lock
lock
icebp
in
lock
lock
icebp
jecxz
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
out
loope
lock
lock
lock
lock
lock
lock
out
loope
lock
out
loope
out
loope
out
loope
lock
out
loope
lock
out
loope
out
loope
lock
lock
out
loope
lock
out
loope
out
loope
out
loope
lock
out
loope
lock
lock
lock
lock
lock
lock
out
loope
lock
lock
lock
lock
lock
lock
out
loope
lock
out
loope
out
loope
out
loope
lock
out
loope
lock
out
loope
out
loope
lock
lock
out
loope
lock
out
loope
out
loope
out
loope
lock
out
loope
lock
lock
lock
lock
lock
lock
out
loope
lock
lock
lock
lock
lock
lock
out
loope
lock
out
loope
out
loope
out
loope
lock
out
loope
lock
out
loope
out
loope
lock
lock
out
loope
lock
out
loope
out
loope
out
loope
lock
out
loope
lock
lock
lock
lock
lock
lock
out
loope
lock
lock
lock
lock
lock
lock
out
loope
lock
out
loope
out
loope
out
loope
lock
out
loope
lock
out
loope
out
loope
lock
lock
out
loope
lock
out
loope
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
jecxz
lock
lock
icebp
in
lock
lock
icebp
in
icebp
jecxz
lock
icebp
in
icebp
in
icebp
in
icebp
jecxz
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
add
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
jecxz
icebp
in
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
out
loope
lock
lock
lock
lock
lock
lock
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loopne
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
fcomip
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
fcomip
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
fcomip
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
fcomip
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
lock
lock
lock
lock
lock
lock
out
loope
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
in
icebp
jecxz
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
icebp
in
add
mov
or
add
sbb
add
and
and
inc
sub
or
inc
outs
ins
ins
popa
outs
xor
add
or
(bad)
hlt
mov
sub
xor
add
add
adc
pop
ja
adc
add
(bad)
inc
pop
add
add
push
add
gs
add
add
add
add
add
or
adc
add
add
add
int3
xor
add
sbb
dec
xchg
adc
jg
cmc
nop
mov
cmc
repnz
xlat
xchg
xor
in
cmp
xor
or
stos
add
xchg
pop
push
push
add
add
add
add
ins
inc
fs
arpl
add
in
jmp
in
(bad)
jmp
inc
add
add
(bad)
(bad)
(bad)
jmp
ins
xor
add
add
cmp
add
lock
add
push
sbb
add
add
add
daa
add
add
popa
xor
sbb
bound
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
cmp
xor
idiv
add
sar
clc
test
push
add
nop
add
fcmove
(bad)
jmp
add
call
dec
fs
lock
or
add
xor
mov
aaa
stos
iret
lock
repz
add
jmp
add
or
fsub
f2xm1
sti
xchg
add
imul
lea
pop
push
(bad)
iret
mov
repz
xchg
std
mov
(bad)
fild
xlat
jecxz
cmc
mov
sti
int3
push
add
mov
out
aad
add
popf
int
add
add
stos
jle
les
add
in
mov
add
(bad)
retf
mov
cli
(bad)
cmc
nop
xor
loop
(bad)
inc
add
int3
lods
dec
ins
mov
(bad)
sti
out
repz
out
push
lods
(bad)
idiv
repnz
mov
push
add
cli
add
fdivrp
mov
aad
(bad)
add
int3
add
ins
cmc
(bad)
std
(bad)
xchg
push
add
clc
mov
add
sbb
rcr
add
ret
arpl
or
ins
or
jecxz
(bad)
jmp
cli
repnz
dec
inc
add
jmp
ret
add
test
xlat
rcl
inc
mov
(bad)
push
sub
mov
call
lea
retf
stos
add
in
push
add
lods
lods
movs
pop
repz
std
lds
div
cld
loopne
mov
lds
das
adc
retf
push
xchg
add
xchg
mov
in
or
rol
(bad)
cli
(bad)
imul
push
sub
std
stc
icebp
int
add
cli
(bad)
inc
sti
add
test
xor
cli
clc
(bad)
cmp
mov
jl
sub
mov
add
mov
icebp
cli
sti
(bad)
fisubr
ret
jecxz
and
inc
mov
cmc
or
into
(bad)
in
out
jno
push
push
repz
jecxz
sub
or
sbb
cmps
add
mov
loopne
xchg
xchg
push
(bad)
mov
add
fistp
ret
std
(bad)
sub
stc
mov
add
lds
std
(bad)
or
jnp
in
adc
or
call
out
retf
ret
ror
inc
inc
jb
sub
push
add
icebp
add
mov
in
loopne
push
je
(bad)
stc
add
lods
push
cld
(bad)
cli
jns
loop
ins
pushf
cmc
in
out
mov
in
in
or
pushf
or
inc
cmp
movs
push
sbb
push
cmps
in
inc
out
popf
or
sti
sti
(bad)
out
add
out
out
cmc
jmp
jecxz
cmp
mov
fcmovne
or
dec
test
(bad)
and
(bad)
or
fmul
mov
inc
clc
cmc
adc
addr16
jnp
cli
mov
cld
stc
add
sti
or
fcmovnb
cli
enter
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
inc
add
add
add
add
add
add
or
add
or
mov
shl
pop
sub
les
ds
xor
inc
adc
mov
push
mov
and
sbb
mov
test
ins
cld
sbb
xchg
popf
xchg
cmp
or
rol
iret
and
cmps
dec
jmp
cmp
pop
mov
mov
sahf
sub
xchg
in
(bad)
inc
inc
adc
sbb
cdq
sub
and
adc
xchg
adc
push
clc
popa
and
leave
or
outs
test
mov
retf
and
adc
xchg
movs
cmc
xor
call
shr
rol
push
dec
fld
jns
mov
push
mov
mov
js
mov
xor
mov
lods
add
lea
data16
jo
(bad)
pcmpeqb
and
das
lea
cmp
sub
mov
inc
lahf
push
dec
loope
mov
fisub
add
pop
pop
cmp
xor
es
mov
das
add
cmp
push
mov
dec
fwait
push
cmp
sub
fadd
or
jb
je
add
les
cmp
mov
test
ret
sub
cmp
xor
xor
sub
xchg
inc
mov
and
loope
push
sub
rol
rol
cmp
xor
ret
or
je
pusha
and
les
jl
call
sbb
inc
pcmpgtb
or
add
inc
and
xchg
cmp
push
xchg
cmovns
pop
adc
rol
and
adc
add
les
pop
xor
pop
(bad)
hlt
and
cmp
mov
push
inc
or
js
inc
pop
(bad)
nop
add
inc
mov
pop
test
mov
jmp
add
stos
inc
sub
add
xor
xchg
or
lahf
push
adc
nop
add
lock
test
mov
loop
and
and
clc
fadd
or
dec
shl
loope
and
adc
inc
dec
sbb
or
inc
dec
mov
xlat
push
lods
add
mov
add
or
push
fdiv
sbb
mov
add
jae
push
add
and
mov
push
add
out
ror
dec
clc
inc
or
scas
ins
lock
push
dec
mov
xor
inc
cs
push
push
or
push
cli
push
push
sbb
mov
sbb
mov
loopne
int3
pusha
jae
xlat
sbb
push
jmp
or
xor
mov
push
inc
add
adc
push
dec
and
fdivr
jae
imul
(bad)
and
dec
add
icebp
mov
cmp
dec
ror
lock
sbb
and
rcl
ret
sbb
or
xor
retf
mov
stos
shr
or
enter
add
sbb
mov
pusha
pop
add
pop
mov
into
cmp
xor
dec
cs
cld
(bad)
mov
stc
sti
retf
fucomip
mov
add
mov
add
test
mov
push
add
lock
daa
push
mov
ja
cmp
or
add
push
add
or
add
pop
and
jo
inc
jo
jo
ret
pusha
test
push
test
push
test
mov
cdq
xchg
add
or
add
push
jg
jo
cmp
mov
and
push
or
test
and
fcomp
in
add
jecxz
jne
inc
adc
inc
and
mov
adc
loope
push
mov
lods
imul
or
rol
xor
add
bound
and
rcr
loopne
sbb
sbb
in
push
adc
rcl
push
sub
pop
or
les
into
sub
inc
shl
add
mov
adc
and
scas
leave
push
mov
pop
and
test
out
clc
inc
inc
mov
sub
xchg
and
mov
push
int3
mov
or
movs
xchg
rcl
nop
jns
or
rcl
lock
add
mov
and
add
hlt
mov
or
add
add
call
dec
out
mov
cmp
ins
mov
cli
mov
jns
inc
cmpxchg
call
setnp
add
js
push
dec
popa
shr
sub
imul
add
cmp
or
jns
push
xchg
test
inc
add
sbb
sub
imul
mov
sub
out
cmps
cmp
inc
or
stc
cmovg
push
xor
add
adc
dec
push
stos
pop
loop
pop
jae
ret
or
dec
pusha
ret
add
cmp
xor
fs
and
and
pusha
or
inc
push
shr
add
sub
push
outs
adc
or
dec
or
add
mov
addr16
sub
push
pop
adc
js
sbb
sub
call
mov
adc
fiadd
ins
loopne
sbb
and
mov
sbb
sub
cmp
push
sub
mov
inc
and
fucomi
out
push
not
inc
mov
push
xor
or
fisub
mov
mov
ret
movs
jp
add
add
xchg
pop
ss
and
dec
enter
rol
jle
test
mov
mov
lods
xor
inc
cs
repnz
dec
inc
adc
adc
enter
test
add
add
xor
ror
dec
ret
add
loop
addr16
icebp
push
lods
lock
ret
add
inc
in
fsub
inc
imul
adc
add
adc
mov
sbb
xor
jle
shr
jecxz
push
nop
data16
mov
cmps
or
ror
jecxz
add
popa
add
aad
inc
sbb
add
lock
dec
mov
ins
nop
mov
adc
or
push
sub
dec
(bad)
or
rcl
push
xor
adc
add
nop
arpl
(bad)
xor
push
mov
mov
data16
fcmovnb
clc
and
popa
es
jp
movs
xor
js
or
mov
sub
add
fcmovbe
add
mov
mov
stos
cmp
add
and
test
pusha
push
xor
jo
or
or
enter
and
mov
or
and
xor
mov
or
push
sub
into
lock
sbb
lock
add
movs
add
add
js
add
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
std
push
push
adc
mov
inc
fmul
mov
lahf
or
repnz
test
(bad)
cmp
fsub
push
cld
xchg
inc
cld
adc
cmps
leave
addr16
test
and
in
push
mov
adc
push
mov
add
ss
ja
pusha
xchg
(bad)
sbb
add
sbb
adc
(bad)
and
push
in
jb
arpl
fcomp
in
cs
sbb
xor
enter
pusha
push
or
xor
mov
test
mov
push
outs
pusha
sub
pop
jmp
sub
ss
dec
imul
adc
mov
xchg
cmp
xor
test
add
push
int3
push
inc
lock
xchg
pop
and
or
cmp
movs
pusha
adc
and
inc
mov
sub
fist
(bad)
ins
and
test
pop
adc
cld
imul
inc
mov
adc
add
lods
adc
(bad)
aas
(bad)
xor
mov
sbb
mov
pop
inc
dec
dec
hlt
movhps
jo
add
rol
sbb
fadd
and
push
push
das
lea
adc
sub
pop
shl
push
mov
icebp
dec
or
loope
add
clc
and
inc
pop
pop
xor
mov
rol
sbb
dec
test
nop
sbb
jecxz
add
add
and
adc
adc
xor
inc
push
lods
inc
sar
mov
inc
cmp
cmps
pop
inc
sbb
push
int
inc
xor
(bad)
sbb
xor
mov
sub
and
(bad)
and
jo
xor
adc
nop
and
jne
xchg
push
dec
nop
daa
jmp
add
cmp
cld
and
xchg
scas
lods
cld
arpl
(bad)
cmp
xchg
lock
and
call
int
push
adc
retf
cwde
xor
dec
xchg
or
pop
test
int3
or
add
mov
jae
jns
cld
jae
inc
jmp
or
aad
mov
pop
or
in
push
cld
sub
(bad)
aam
push
mov
mov
add
sub
rol
add
imul
daa
jecxz
add
add
inc
nop
add
xor
retf
cld
add
imul
shl
call
inc
test
mov
arpl
inc
stc
dec
scas
push
sub
add
and
xor
inc
in
pusha
cmps
ret
ret
sub
sbb
or
push
into
pop
adc
xlat
and
add
rcl
hlt
(bad)
and
and
xor
push
(bad)
mov
mov
rol
rol
jo
sub
in
push
xchg
add
loope
sahf
xchg
mov
push
shl
dec
push
xchg
unpckhps
adc
push
in
cwde
or
or
int3
aas
(bad)
xlat
mov
loop
and
cld
inc
inc
or
fs
add
mov
xor
push
movs
cmc
jmp
xchg
pushf
mul
add
out
jg
inc
xor
popa
loope
arpl
xchg
inc
mov
pop
ret
sub
test
stos
push
sbb
mov
ss
mov
lock
pusha
mov
inc
adc
push
add
xchg
adc
(bad)
mov
(bad)
and
icebp
dec
or
lock
sub
add
inc
inc
cli
push
sahf
add
scas
and
addr16
or
jle
and
or
fiadd
inc
inc
lods
xor
sbb
mov
movs
xchg
mov
or
dec
push
adc
push
(bad)
xor
mov
lock
adc
push
adc
dec
inc
dec
push
adc
dec
pop
add
adc
rcr
ror
pop
pushf
rol
mov
mov
and
fst
push
or
push
add
ret
sub
mov
mov
and
test
sub
and
adc
std
sbb
push
jmp
adc
and
lods
rol
adc
jg
arpl
cwde
fisttp
int
adc
xor
inc
pop
pusha
or
les
test
inc
and
add
je
and
and
mov
pushf
xchg
and
and
(bad)
scas
and
and
inc
(bad)
stc
lss
lds
je
cwde
or
add
and
sub
add
push
adc
dec
mov
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
ror
cdq
mov
xchg
and
xchg
and
sbb
cs
arpl
das
aas
push
xor
mov
and
loop
mov
pop
outs
movs
dec
or
mov
dec
sub
outs
sub
xchg
dec
add
stc
push
jae
shl
add
jecxz
xor
mov
std
ret
xor
int3
cdq
or
das
push
xchg
push
push
inc
pop
fwait
push
std
mov
das
call
push
sub
movs
push
dec
clc
cmps
dec
fwait
push
inc
add
sti
addr16
fld
pusha
add
and
jmp
inc
and
sub
mov
retf
adc
and
push
push
mul
cli
cmps
arpl
push
ror
sbb
and
push
xor
add
cdq
sbb
adc
xchg
ja
add
xor
xchg
stc
shl
pop
lea
cmp
mov
inc
out
inc
dec
xor
add
xor
pop
and
adc
inc
rol
adc
aas
cmp
pop
or
iret
sbb
sbb
fnstsw
out
aam
inc
cmp
jae
test
inc
repz
pop
dec
adc
fs
adc
sub
and
or
and
dec
and
push
cld
push
dec
cmp
mov
inc
hlt
cwde
adc
jl
xchg
cs
std
rcr
aas
xor
ret
int3
dec
push
push
nop
xor
add
bound
cwd
mov
add
imul
or
rcr
jge
jmp
push
inc
add
mov
and
dec
pop
call
xor
push
pop
arpl
aam
inc
add
and
popf
pusha
mov
inc
test
lock
rcr
adc
inc
push
or
outs
aam
jmp
or
mov
xchg
fwait
dec
inc
push
cld
mov
pop
dec
mov
add
cmp
push
fld
test
xchg
mov
sub
loopne
add
xor
adc
and
pop
add
mov
inc
sbb
aam
xor
and
inc
xor
ret
or
add
mov
push
sub
jge
nop
sbb
cld
xchg
int
arpl
xor
test
and
add
sub
adc
dec
inc
inc
in
push
aad
or
call
popa
push
sysenter
mov
jl
test
lods
cmp
jmp
cwde
mov
daa
push
rol
dec
add
movs
xchg
enter
inc
push
inc
add
add
std
iret
test
icebp
xchg
xchg
aaa
pop
aas
les
or
das
inc
idiv
add
ret
lds
push
add
les
inc
mov
or
inc
inc
inc
shl
xor
adc
inc
mov
ror
dec
or
push
fwait
push
mov
push
movs
shl
(bad)
pusha
adc
test
add
sub
sbb
sbb
dec
push
bnd
sbb
add
mov
add
xor
or
pop
mov
enter
mov
dec
push
push
adc
arpl
pop
xchg
dec
shr
ret
ins
movs
and
aam
add
pop
dec
push
adc
add
push
mov
and
adc
nop
xchg
es
in
mov
push
(bad)
or
dec
push
inc
add
and
mov
jl
rol
sub
sub
mov
xchg
add
mov
mov
jmp
popa
inc
ficom
or
pop
shl
in
aam
inc
push
mov
jge
and
xor
or
or
xor
xor
add
and
sub
stc
add
or
inc
sub
add
add
or
add
or
mov
inc
push
push
adc
pop
enter
inc
add
or
add
and
xor
sub
sbb
mov
sahf
test
sets
and
pop
ror
int
and
das
dec
iret
jg
dec
fst
out
lds
cli
xchg
mov
mov
or
sbb
or
add
adc
int3
pusha
add
lock
mov
js
mov
xchg
jg
out
xchg
sbb
ret
xchg
movs
das
inc
jae
aam
sti
sti
dec
ret
fs
dec
and
cmp
ret
retf
xchg
push
lods
push
(bad)
sbb
jbe
sub
lahf
sbb
imul
jg
inc
or
mov
dec
add
int
or
les
jo
repz
sub
sub
pop
fild
push
xchg
shr
clc
shr
pop
xor
mov
push
inc
(bad)
jmp
add
add
sbb
adc
inc
es
cld
aaa
test
hlt
adc
je
and
das
xchg
enter
sahf
or
ret
aas
icebp
lea
pop
mov
pop
add
nop
adc
pop
sbb
inc
cs
lock
add
aad
push
(bad)
je
retf
mov
sbb
push
adc
or
getsec
add
dec
inc
add
push
pop
pop
or
and
xchg
pop
sahf
cmp
push
stc
dec
and
adc
add
add
inc
and
mov
or
ins
xchg
nop
es
or
xchg
xlat
inc
popf
add
les
mov
loopne
sub
push
pusha
test
and
fs
dec
test
sbb
adc
int
js
add
or
mov
ds
mov
les
and
add
xchg
jne
lea
fdivrp
add
in
mov
push
add
pop
aam
outs
mov
popf
xor
adc
or
inc
add
and
les
mov
push
jmp
pusha
xor
or
dec
sbb
je
push
dec
or
repz
or
adc
mov
push
in
les
std
ins
xor
pop
inc
inc
mov
sbb
or
add
push
movs
jecxz
mov
mov
lds
mov
jae
dec
and
add
pop
pusha
adc
or
or
test
js
(bad)
out
jge
inc
into
pop
and
sbb
and
aas
imul
mov
nop
cmp
inc
ret
adc
(bad)
mov
mov
test
adc
push
or
push
sub
jo
adc
cmp
pop
int3
pop
sahf
dec
xchg
dec
push
je
fld
or
or
push
(bad)
cld
xor
jmp
push
(bad)
mov
(bad)
jmp
lods
cmp
test
xchg
dec
sub
mov
out
mov
and
test
inc
sbb
sbb
shl
inc
cmp
int3
jb
in
pop
sub
test
xchg
sbb
inc
mov
add
shl
add
push
nop
mov
sti
cmc
aaa
aam
call
idiv
or
jg
test
or
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
shl
pop
xor
mov
ret
xchg
or
inc
les
cmp
pop
or
add
sbb
ror
jg
sahf
or
xor
dec
and
repz
dec
inc
add
mov
mov
dec
xchg
pop
or
xor
xor
(bad)
xchg
es
jg
add
jo
mov
movs
es
and
aad
stc
push
and
mov
(bad)
cmp
push
cmps
mov
add
xlat
push
shl
cs
push
outs
adc
or
cmp
mov
rol
cmp
or
add
push
inc
or
cwde
adc
dec
mov
movs
repz
retf
add
mov
ret
mov
pop
dec
ret
aas
and
(bad)
test
inc
cmp
xchg
jg
and
mov
cld
ret
mov
call
pop
or
(bad)
jns
fsub
sub
jno
aam
mov
push
movnti
sbb
jo
mov
jae
xor
and
add
sahf
inc
and
xor
xor
inc
(bad)
std
mov
mov
adc
jnp
push
lds
out
test
iret
cmp
(bad)
rcl
add
lahf
inc
iret
inc
adc
sbb
pop
and
or
jbe
pop
ds
cmc
(bad)
sbb
(bad)
and
jne
dec
jae
inc
push
add
xlat
adc
or
stos
or
mov
xor
adc
jns
cmp
adc
push
sbb
xor
invd
cmp
sub
and
sub
push
pop
inc
popf
pusha
push
or
or
and
ret
pop
cmp
push
ja
mov
push
jmp
xchg
stos
daa
add
nop
or
sbb
xchg
test
add
push
and
push
jo
aas
fsubr
push
or
jecxz
inc
xchg
test
rol
mov
xchg
in
sub
(bad)
push
lods
add
and
test
add
mov
(bad)
fs
add
mov
aad
movs
cmp
pusha
cmp
pop
xor
in
inc
cli
pop
xor
inc
and
xor
inc
push
mov
inc
or
add
cmp
adc
or
test
mov
add
das
jmp
adc
popf
add
movs
xchg
add
lock
adc
add
sub
mov
mov
or
aaa
push
mov
xor
cmp
adc
add
jns
(bad)
into
dec
sub
push
adc
mov
clc
dec
or
in
add
inc
sbb
mov
aas
xor
sbb
jmp
ret
inc
enter
jno
cmp
jecxz
pop
cmp
inc
adc
outs
mov
in
test
sub
test
mov
xor
add
push
sbb
in
and
inc
(bad)
shl
mov
(bad)
adc
add
add
jae
arpl
fs
or
test
and
or
add
cld
lock
repnz
adc
xor
xor
adc
dec
cmp
loopne
and
cmc
add
sbb
mov
sbb
sti
mov
mov
sbb
fcom
push
dec
and
std
test
mov
and
call
and
push
add
or
ins
cwde
and
xor
das
test
gs
and
mov
pop
sub
movlhps
das
dec
popa
sub
(bad)
(bad)
adc
jno
dec
sahf
rol
pushf
add
rol
and
aaa
pop
mov
adc
daa
ds
fld
sbb
jae
ret
adc
and
les
or
fcom
push
(bad)
push
xor
add
bound
dec
or
(bad)
repz
mov
dec
lock
jecxz
in
jbe
and
loopne
lods
add
inc
call
es
mov
cmp
sub
sub
jb
sbb
test
lods
cmp
push
int3
cmps
dec
add
adc
inc
mov
retf
add
mov
adc
test
xor
inc
(bad)
aam
aas
mov
loope
or
or
sub
mov
adc
les
retf
jmp
inc
mov
loopne
jmp
mov
add
adc
add
cmp
retf
adc
pop
rcl
inc
adc
nop
add
xchg
ret
dec
(bad)
cmp
nop
push
adc
push
shl
xchg
adc
sub
and
xchg
pop
and
mov
push
mov
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
and
sub
loope
pop
add
adc
loopne
mov
pusha
fdivr
ret
aas
inc
or
clc
xchg
inc
sbb
daa
add
loop
or
inc
or
icebp
or
inc
inc
iret
sahf
std
inc
es
(bad)
lea
mov
sar
add
xchg
popa
aas
movs
call
push
xchg
mov
ins
or
jmp
lahf
jg
test
xor
xchg
and
stc
xlat
out
fist
dec
(bad)
adc
or
aad
call
inc
mov
and
adc
les
adc
sbb
inc
pop
add
adc
sbb
call
or
jmp
imul
add
iret
add
pop
push
xchg
inc
push
dec
rcl
test
jnp
or
mov
inc
imul
shl
inc
sub
xor
add
sub
out
add
jb
out
or
push
add
dec
adc
xchg
jg
sbb
call
sub
ret
mov
or
fild
dec
rol
stc
or
sbb
(bad)
aas
sti
std
xor
adc
push
inc
add
inc
enter
pop
scas
xor
ds
cmp
iret
pop
(bad)
adc
aas
sbb
fild
or
dec
inc
das
cmp
(bad)
push
push
movs
rol
inc
movs
or
pop
hlt
into
aas
sub
add
call
jo
daa
mov
add
xchg
inc
shl
or
push
je
test
call
mov
pop
nop
mov
aam
and
xor
inc
cs
or
enter
push
mov
daa
jmp
nop
dec
pop
inc
pushf
mov
test
or
ret
adc
pushf
ja
sbb
test
cmp
pop
cmp
pop
push
push
mov
cmps
push
mov
inc
loop
mov
movs
inc
and
sbb
sub
rcl
fcomp
js
jmp
push
std
mov
fs
sub
xor
repnz
or
or
sub
push
add
sbb
mov
push
hlt
mov
imul
into
ss
jmp
and
xor
and
loope
sar
call
sbb
xchg
cmc
ud1
push
add
bound
test
add
add
outs
push
push
sar
sbb
pop
or
movs
dec
sub
dec
ss
sub
xor
push
aas
(bad)
fiadd
adc
bound
xchg
add
add
or
cmps
push
retf
cld
mov
xor
add
adc
xchg
inc
or
fs
pop
inc
lods
sub
fld
xchg
fild
jns
mov
sub
mov
mov
scas
xor
xor
aaa
inc
mov
or
shl
sub
sub
js
mov
jg
add
dec
popa
lock
out
xchg
mov
fsub
aas
pushf
adc
rol
mov
(bad)
js
rcl
pcmpeqd
cld
jge
int
adc
xlat
or
inc
fwait
jnp
cmp
xchg
mov
aam
mov
std
es
test
add
adc
std
or
mov
loopne
pop
scas
adc
cmp
xchg
test
ins
or
inc
cmp
cs
rcr
mov
sbb
add
in
and
add
add
nop
pop
ror
jns
test
add
pop
ret
ins
dec
inc
add
and
add
cmp
inc
sub
add
add
add
add
or
add
or
mov
ror
cdq
inc
push
adc
or
xchg
lods
jg
push
mov
and
jg
leave
or
mov
test
cwde
and
call
shl
and
xchg
sbb
stc
and
and
xchg
iret
nop
lock
and
adc
jmp
add
adc
jg
push
clc
jno
mov
mov
pop
call
inc
dec
adc
mov
mov
pushf
mov
adc
push
cdq
sahf
pop
jo
cmps
sbb
(bad)
adc
xor
fist
std
pop
rol
rol
add
rcr
js
loope
lea
xchg
add
xor
lds
or
in
push
adc
sub
movs
ror
data16
xchg
jg
(bad)
jne
xor
call
ret
add
add
loope
scas
aad
xor
xor
lods
or
add
inc
inc
add
dec
jo
test
cmp
adc
icebp
pop
add
push
and
dec
xor
or
adc
cmc
lock
adc
aas
std
cld
mov
aas
push
or
or
inc
cld
mov
hlt
adc
sbb
or
ss
enter
inc
push
nop
add
cld
repz
shl
js
or
mov
add
rcl
in
test
push
adc
jecxz
xchg
or
dec
rcl
or
xor
xor
xchg
inc
rcr
mov
nop
mov
aas
sahf
cld
xchg
mov
xchg
inc
cmps
or
popf
adc
inc
inc
(bad)
cld
mov
pusha
push
adc
clc
dec
add
or
aas
ror
pop
inc
and
add
add
push
pop
add
(bad)
cli
prefetch
add
or
mov
sahf
cmp
inc
cli
xor
or
nop
cmp
dec
sbb
mov
fdiv
fldcw
out
or
(bad)
inc
push
cmp
loop
add
add
sub
inc
mov
popf
sti
dec
or
cld
mov
sbb
and
pop
xchg
xchg
inc
fs
push
adc
aas
xor
mov
push
popf
rol
xor
pop
loop
xor
push
mov
and
int
push
shl
outs
mov
add
sti
mov
dec
nop
push
add
sub
clc
dec
or
xchg
add
prefetchwt1
or
popa
or
dec
pop
add
inc
adc
test
rcl
cmp
or
sbb
adc
push
movs
inc
xchg
cld
call
mov
mov
int
cmp
inc
jl
les
or
adc
xor
push
mov
dec
inc
dec
in
pop
add
inc
out
lods
add
adc
inc
dec
adc
movs
adc
xchg
push
push
xor
or
jo
mov
dec
add
movs
lock
sbb
and
nop
loope
test
aas
push
mov
inc
xor
adc
or
inc
sub
pusha
(bad)
sub
xor
and
fistp
aas
in
call
rol
add
push
push
cwde
jo
pop
jle
(bad)
sub
ret
dec
mov
cmp
fdivr
movs
aaa
xchg
mov
popa
int3
aas
push
loope
aas
cmp
mul
nop
int3
aad
pop
sbb
loop
adc
push
leave
xor
ret
sbb
or
test
or
lock
adc
mov
inc
sub
lds
xor
push
sbb
cmp
and
dec
adc
les
mov
ret
or
and
mov
adc
add
push
push
test
lock
adc
scas
adc
sub
adc
mov
mov
xchg
add
inc
push
or
xchg
mov
imul
sbb
adc
cwde
call
or
movs
popa
adc
mov
mov
aas
or
add
add
loop
sbb
retf
or
add
ror
add
add
sbb
push
rol
rol
or
lgdtd
lea
add
add
add
popa
xor
sbb
popa
add
sbb
add
adc
inc
cmp
popa
xor
xor
idiv
add
jmp
jns
ins
mov
neg
or
(bad)
fdivrp
iret
pusha
xchg
mov
movs
lods
mov
mov
test
(bad)
sti
fsubr
aam
(bad)
in
out
je
fwait
in
div
push
outs
retf
out
into
jmp
cmc
int3
(bad)
in
cld
std
mov
pop
inc
pop
jne
repz
(bad)
(bad)
(bad)
mov
in
pop
and
out
repz
idiv
addr16
jmp
mov
into
mov
sub
out
test
xlat
(bad)
fndisi(8087
jns
mov
sbb
out
test
xlat
popa
ss
out
cli
mov
loope
scas
mov
cld
jmp
dec
addr16
fld
stos
jecxz
call
repz
mul
(bad)
retf
fild
mov
lods
mov
cmc
cld
aaa
pop
test
jecxz
mov
(bad)
leave
ror
adc
inc
pop
fdiv
cld
sti
div
loop
and
repz
ret
(bad)
iret
(bad)
jmp
rcr
aam
jmp
pushf
mov
mov
out
repz
cmp
test
out
xor
div
sti
in
neg
xchg
out
jmp
out
mov
jmp
cld
xchg
mov
mov
sti
sti
not
aad
mov
stos
int3
jnp
aam
out
js
xor
sbb
mov
rcl
xchg
xchg
sahf
mov
lea
hlt
inc
ja
rcl
sbb
(bad)
arpl
jecxz
in
sub
mov
aad
repz
jns
addr16
mov
ds
popf
mov
int
sti
idiv
push
adc
aas
popa
mov
out
movs
mov
xchg
mov
inc
push
(bad)
popf
cmps
(bad)
sti
jmp
mov
mov
sti
neg
ror
test
in
std
movs
shl
(bad)
out
mov
aam
into
into
out
ret
out
mov
frstor
mov
in
fstp
loope
mov
iret
xlat
rcr
mov
hlt
rcr
out
hlt
loop
out
mov
adc
sti
(bad)
inc
jecxz
(bad)
out
div
div
repz
sti
sti
shr
repz
out
idiv
push
sti
sti
idiv
call
out
repz
not
jmp
out
out
out
fucomi
repz
sti
(bad)
jmp
lock
sti
fucomi
div
div
(bad)
sti
sti
ret
out
icebp
(bad)
push
sti
(bad)
(bad)
(bad)
sti
idiv
sti
out
jmp
clc
repz
jmp
(bad)
sti
inc
out
fucomip
repz
repz
(bad)
sti
clc
repz
test
test
repz
out
(bad)
jmp
loope
repz
fcom
jecxz
loop
fucomi
repz
sti
shr
imul
out
jmp
jmp
call
mov
(bad)
fcmovne
ret
xchg
mov
mov
xlat
jmp
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
add
add
xor
xor
add
inc
std
or
mov
rol
mov
ret
and
xor
jno
sub
test
mov
sub
inc
xchg
sub
pop
mov
das
xor
(bad)
fsubr
mov
jmp
and
or
pushf
mov
mov
push
cmps
es
adc
adc
push
pop
sbb
mov
jl
aad
mov
adc
xchg
enter
pop
add
(bad)
outs
aam
js
jmp
add
add
push
dec
jo
retf
jecxz
(bad)
xchg
pop
adc
inc
and
js
dec
nop
loope
retf
mov
and
(bad)
movs
out
jne
mov
aad
lods
mov
test
jno
adc
add
inc
mov
pop
adc
ret
or
mov
popf
sti
xchg
jge
dec
push
or
mov
push
das
mov
and
inc
add
repnz
sbb
aad
test
push
sbb
sbb
dec
mov
(bad)
jnp
jmp
pushf
jo
adc
clc
nop
or
or
inc
push
adc
add
pusha
inc
or
mov
ror
inc
jmp
and
add
and
loope
xor
dec
and
(bad)
loopne
xchg
inc
mov
popa
mov
rcl
in
int3
mov
dec
push
xor
inc
adc
mov
loop
and
dec
or
sbb
movs
or
inc
xor
sub
inc
adc
fadd
shl
xor
xchg
fs
push
xchg
jmp
lock
or
or
aam
inc
or
add
push
push
dec
popa
into
xchg
enter
xor
mov
mov
in
add
shl
and
test
jne
pop
cmp
mov
xchg
xor
dec
xor
popa
sbb
add
and
loop
sub
popa
or
inc
popa
dec
sbb
jl
ror
pushf
jb
outs
sbb
inc
sub
shl
and
les
xor
mov
sti
pop
push
(bad)
mov
add
pop
js
or
repz
jno
jg
ret
mov
and
shr
sbb
sub
ret
sar
add
mov
push
or
cmps
mov
or
jo
inc
and
popa
cmp
mov
or
or
in
dec
push
aaa
jo
leave
push
test
push
sub
sbb
out
leave
sub
xchg
add
mov
mov
or
inc
add
cs
ror
or
inc
outs
shr
add
add
add
xor
adc
iret
into
pop
sti
push
add
mov
adc
shl
dec
or
dec
pop
mov
pop
push
sbb
or
push
leave
fidivr
loopne
sub
mov
and
adc
adc
ins
in
xchg
add
int3
loope
lahf
and
pusha
inc
or
enter
inc
sub
mov
add
loopne
add
adc
mov
ins
arpl
mov
and
xchg
mov
mov
int
aam
add
fistp
outs
es
add
adc
inc
xchg
(bad)
enter
mov
push
or
add
pop
and
add
outs
add
jnp
aas
sbb
mov
outs
jle
add
and
data16
sbb
clc
mov
add
inc
xor
push
push
add
rcl
lock
xor
adc
dec
inc
sbb
adc
std
rol
xor
add
mov
xor
popa
call
les
shl
xchg
(bad)
add
fadd
sbb
adc
mov
sub
jo
es
nop
or
inc
mov
push
aam
xor
or
mov
push
or
mov
inc
dec
xor
lea
movs
popa
hlt
inc
add
adc
inc
ss
inc
leave
dec
adc
xchg
add
test
pusha
jl
adc
mov
add
or
add
ja
push
ins
inc
push
jae
xchg
fs
dec
dec
pop
and
and
dec
daa
test
and
sbb
adc
add
rol
ror
imul
add
test
sbb
or
sbb
adc
pop
mov
das
cmp
pop
fdiv
inc
and
sbb
mov
gs
adc
xor
xor
and
add
rol
inc
and
mov
pusha
mov
inc
pusha
loopne
xchg
pusha
inc
sbb
mov
ret
xor
jo
sbb
or
ss
add
add
loope
sbb
sar
jo
mov
arpl
aaa
lods
ret
dec
ja
sar
jecxz
jne
(bad)
sbb
add
push
add
add
lds
adc
pop
shl
jle
aad
jbe
popf
cmp
inc
pop
jne
sub
popa
sbb
adc
xor
add
inc
add
loopne
or
sbb
and
rol
or
rol
pop
mov
xchg
add
or
push
push
and
adc
nop
or
pop
scas
jnp
add
and
addr16
(bad)
dec
add
fld
ins
jp
add
mov
adc
rol
icebp
js
adc
jae
fcmovnu
repnz
mov
lods
xor
push
or
inc
and
jns
popa
mov
popa
or
cld
lock
pop
push
mov
sub
fdivr
les
test
test
rol
and
and
call
out
pop
out
shl
mov
lods
scas
das
push
icebp
add
int3
add
push
bound
clc
inc
cmp
rcl
mov
js
mov
pop
clc
ret
inc
and
mov
sbb
les
dec
mov
push
ins
popa
or
add
adc
add
pusha
mov
jge
jecxz
pop
loopne
inc
push
xor
inc
add
ja
rcl
xor
sar
jo
jae
jecxz
sub
adc
add
fxch
pop
xor
and
add
add
add
add
xor
add
or
add
or
mov
rol
dec
push
ret
and
mov
lds
or
xor
dec
fmul
icebp
lahf
mov
or
pop
movs
mov
or
sti
xchg
and
call
das
fwait
cmp
int3
mov
xchg
cmp
fs
cmc
dec
mov
pop
(bad)
popa
leave
nop
loop
stos
ds
cmp
test
neg
push
add
les
ret
ss
jecxz
add
cli
adc
inc
sbb
mov
jno
sub
lock
aas
psubq
enter
xchg
add
aas
gs
or
sub
loop
mov
mov
fdiv
push
xchg
jno
ss
pop
add
jo
or
ret
rcr
push
clc
(bad)
in
sahf
and
mov
xchg
mov
jae
or
cld
retf
daa
rol
pushf
lock
mov
(bad)
stc
xchg
mov
mov
cdq
dec
jno
lock
mov
in
lock
push
and
and
adc
adc
fadd
pop
xchg
and
inc
push
xchg
push
xchg
inc
lea
aas
sbb
add
sar
or
or
add
(bad)
and
xchg
cli
in
xchg
aas
mov
mov
adc
arpl
add
aam
ret
sub
and
inc
push
xor
mov
test
mov
enter
sbb
icebp
xor
ret
popa
rol
add
fsub
and
or
movmskps
dec
or
sbb
add
aas
adc
or
nop
mov
push
sbb
add
dec
and
nop
adc
push
adc
call
cmp
adc
sbb
adc
lds
and
js
push
enter
pusha
add
inc
adc
inc
or
loop
sbb
(bad)
rol
fsubr
jne
xchg
push
ret
movs
and
push
pop
or
in
sbb
adc
inc
jo
call
jp
add
sbb
push
pxor
sub
enter
or
fsub
mov
push
sub
rol
add
jl
iret
sub
cmps
cld
inc
fnstcw
xor
in
inc
mov
aas
adc
adc
xor
les
test
push
inc
rol
add
pop
inc
xchg
fdivr
xor
adc
xor
xchg
jnp
(bad)
ror
add
or
add
fs
aas
sar
bound
add
loopne
repz
or
pusha
jecxz
xor
sbb
or
cwde
add
add
sbb
int3
mov
mov
ret
adc
hlt
aas
sar
(bad)
aas
pop
jo
inc
push
fdivr
test
inc
loopne
or
pusha
std
aaa
xor
add
or
jbe
jmp
xchg
xor
nop
pop
xor
pop
xchg
cmp
ins
jns
add
mov
adc
or
xor
inc
xor
call
scas
cmp
adc
aas
jns
js
aas
fs
cmp
sbb
ds
fs
arpl
nop
fstp
das
inc
pop
pop
(bad)
and
rcr
ins
bnd
add
inc
mov
add
int3
inc
je
xor
enter
xchg
inc
loopne
xor
push
xchg
test
add
inc
enter
push
sar
sbb
test
xchg
(bad)
jb
rol
push
rol
mov
pop
xchg
rcr
mov
cmpxchg
fstp
xchg
mov
xor
aas
test
jg
adc
std
call
xor
add
sbb
sbb
mov
mov
js
and
icebp
(bad)
test
cdq
or
cmp
and
or
sub
and
pop
and
adc
test
je
test
sbb
adc
mov
rol
out
sti
inc
xchg
movs
and
dec
xor
dec
adc
cmps
test
lods
adc
inc
and
aas
out
popa
lahf
sub
add
pusha
or
xchg
mov
or
sub
sub
or
push
gs
popa
adc
rcl
retf
fs
jnp
add
add
cmp
push
or
rcl
or
int3
jb
mov
mov
outs
adc
mov
xor
and
xchg
lock
fs
(bad)
and
cmp
or
mov
adc
popa
dec
retf
push
movs
and
(bad)
adc
add
rol
xchg
push
and
clc
inc
ss
add
cmp
cli
icebp
add
sbb
(bad)
mov
add
mov
add
xor
mov
mov
movs
cs
jmp
add
stc
add
add
add
add
xor
das
add
or
add
or
mov
rol
mov
inc
jg
adc
ret
mov
add
aam
inc
dec
mov
sbb
push
or
xor
in
sub
inc
inc
add
cmp
mov
cmp
lods
pop
les
loope
add
jg
int3
fs
mov
mov
pop
inc
or
xchg
lods
or
xchg
ret
nop
add
adc
mov
xchg
sbb
xlat
stos
xchg
mov
cs
dec
loopne
and
cmp
push
or
push
shl
adc
(bad)
jp
or
lahf
add
and
(bad)
(bad)
rcr
mov
sub
(bad)
fdivr
retf
ds
cld
jae
bound
or
jle
aam
test
aas
adc
in
dec
(bad)
loopne
fiadd
shl
lods
pop
push
cmp
scas
les
cmp
inc
jns
je
mov
jnp
sub
pusha
(bad)
or
cvtps2pd
pop
mov
and
push
inc
fild
call
shl
jmp
jno
sub
sub
nop
inc
and
inc
mov
jecxz
add
lock
dec
and
add
and
adc
adc
or
jmp
add
mov
ins
pusha
jecxz
jmp
xor
or
fdiv
inc
adc
in
sbb
sub
test
xor
adc
adc
pusha
dec
mulps
adc
sbb
aas
sub
adc
adc
or
cld
ret
inc
push
ins
and
sbb
js
dec
sbb
cld
shl
add
or
cmp
sbb
mov
inc
dec
data16
shl
xor
or
mov
ret
ret
jns
cld
xchg
or
push
(bad)
xchg
ret
add
jo
add
mov
jo
cs
or
cwde
pusha
lds
cwde
repnz
add
in
inc
ret
sbb
xchg
push
jecxz
jo
es
add
sub
or
sub
je
aad
dec
ret
add
push
or
xchg
mov
fld
pusha
leave
aas
jmp
add
arpl
add
mov
xor
or
fnsave
add
pop
setbe
adc
add
jl
xor
or
xor
pop
jb
add
sbb
les
inc
inc
mov
adc
or
add
aaa
cmp
mov
pop
repz
add
inc
std
adc
or
dec
xor
es
xor
pusha
inc
dec
leave
(bad)
sbb
xor
inc
and
dec
inc
xor
mov
aaa
pop
sub
lea
or
dec
xor
xor
repz
xor
and
or
add
inc
adc
dec
add
inc
or
ins
mov
cmp
xor
add
rcl
sbb
add
xor
nop
dec
mov
(bad)
or
ret
cmp
pmuludq
ror
cmp
jb
xor
(bad)
adc
jnp
and
mov
ret
(bad)
daa
fs
(bad)
hlt
add
mov
sbb
dec
push
les
in
aaa
add
inc
add
push
add
cmps
daa
bswap
pop
(bad)
cmp
inc
or
mov
or
and
aas
int3
pop
das
adc
sbb
paddusb
psubsb
mov
sbb
(bad)
jecxz
loope
ins
and
pop
rol
push
or
mov
mov
nop
add
lods
pop
or
pushf
mov
adc
add
push
inc
push
cmps
bound
cmp
popa
ret
and
(bad)
popf
mov
add
(bad)
dec
push
sbb
and
nop/reserved
adc
rcr
rol
mov
push
add
mov
push
xchg
cmp
cmps
rol
adc
or
add
mul
aas
popa
sbb
add
shr
pusha
push
push
push
pusha
or
or
mov
add
add
pop
bound
jo
add
mov
cmp
dec
sub
xor
test
add
dec
loope
loopne
add
add
sti
mov
add
add
inc
sbb
call
ud2
nop
mov
and
add
adc
jae
daa
add
mov
or
mov
ss
adc
fldcw
and
adc
es
pop
adc
ror
lock
cmp
pop
or
les
push
or
nop/reserved
pop
nop
xchg
cwde
(bad)
les
test
and
mov
adc
int3
inc
add
push
xchg
and
sbb
adc
repnz
xchg
push
loopne
add
out
jl
or
hlt
movs
lea
dec
pop
mov
jb
ret
nop
sub
inc
(bad)
push
mov
call
jl
inc
add
rol
bound
test
icebp
test
shl
adc
loopne
jmp
pusha
push
add
add
and
mov
and
add
stc
add
add
add
add
xor
das
add
or
add
or
mov
rol
mov
ret
xchg
test
add
and
mov
ror
mov
test
push
mov
add
and
test
inc
in
test
jg
adc
dec
mov
sub
xchg
sbb
or
rol
or
push
pop
push
test
cmp
cli
out
add
adc
call
xor
inc
popa
pusha
ret
adc
sub
pop
push
dec
or
clc
pop
scas
arpl
fs
aas
or
fmul
nop
mov
aas
push
add
sub
xor
add
inc
(bad)
adc
and
inc
dec
adc
and
xchg
mov
mov
dec
xchg
cmp
mov
adc
sub
pop
or
or
inc
jle
sub
ja
inc
inc
int
stc
pop
inc
pusha
pop
call
popa
ins
mov
add
and
frstor
test
add
add
or
mov
jecxz
inc
cli
sub
adc
call
xchg
(bad)
addr16
add
lock
int
repz
sbb
or
mov
push
push
bnd
shl
pop
mov
add
pusha
xor
or
dec
xor
and
ror
jg
inc
inc
or
sub
out
or
sbb
or
mov
adc
inc
ret
xchg
add
cmp
adc
inc
or
cmp
sahf
aad
shr
dec
sub
ret
aas
inc
lock
dec
or
pop
xchg
add
adc
loope
sbb
inc
arpl
and
(bad)
pop
bound
hlt
enter
loop
adc
movs
lock
pushf
mov
inc
cld
mov
nop
add
cmp
and
test
adc
lds
retf
ss
inc
or
push
rcr
(bad)
jl
mov
stc
cld
xchg
inc
jns
add
mov
retf
sub
or
in
and
sub
mov
sahf
or
inc
xor
mov
test
xchg
push
hlt
pusha
add
cmps
add
add
shr
dec
dec
aam
xor
mov
sbb
jp
aas
inc
pushf
mov
add
push
add
adc
les
add
and
mov
inc
jbe
dec
xor
xor
aaa
cmps
sbb
adc
inc
push
int3
xchg
push
repnz
or
mov
push
sbb
aas
fadd
add
add
add
rcr
nop
adc
xor
mov
adc
xor
pusha
inc
int
and
mov
call
adc
or
push
aas
sar
jecxz
xor
jo
fnstcw
xor
rol
inc
fld
inc
adc
add
call
xchg
push
mov
rcl
mov
jp
sbb
repz
add
outs
add
jmp
or
scas
or
loop
add
or
or
and
inc
sbb
loopne
aas
ret
or
and
jl
leave
pop
(bad)
mov
add
or
aas
retf
js
retf
sbb
aam
ror
movs
xor
add
add
pop
add
push
pop
test
inc
jecxz
inc
add
jno
or
shl
mov
sbb
sbb
inc
inc
xor
sub
cmp
lock
scas
and
pop
cmp
adc
fcomp
adc
ret
xor
test
mov
loope
adc
sub
inc
inc
push
mov
push
and
mov
or
sbb
add
addr16
or
push
push
fnstsw
cwde
mov
mov
(bad)
jmp
adc
push
dec
dec
ins
mov
pop
or
cmp
add
inc
or
icebp
add
loopne
jne
mov
push
add
add
pusha
add
add
lea
clc
(bad)
sbb
mov
or
add
cmp
adc
xor
gs
sub
push
add
sbb
jg
mov
pusha
icebp
loopne
cmp
push
(bad)
jno
or
add
dec
call
int3
outs
sub
or
lock
or
inc
add
popa
mov
add
push
jmp
shr
retf
es
pop
ret
or
test
or
les
nop
xor
pop
test
aaa
inc
or
ret
mov
add
jmp
(bad)
jo
xor
lock
sbb
lock
jle
pshufw
pop
xor
add
int3
mov
add
xchg
les
sub
xor
or
push
add
clc
cmp
rol
jmp
inc
adc
and
ficom
test
mov
mov
inc
xor
cmc
stos
push
int
push
cmp
or
clc
sub
mov
xchg
test
icebp
lds
add
pop
and
rcl
and
xor
and
loope
scas
(bad)
adc
pop
push
icebp
or
and
stc
add
add
add
add
xor
das
add
or
add
or
mov
rol
mov
ret
xchg
inc
ror
mov
xor
xor
out
xchg
jg
dec
dec
adc
inc
sub
push
pusha
das
sub
and
adc
clc
rcr
aas
sbb
popf
test
inc
dec
xchg
sub
xor
gs
out
dec
mov
rcl
add
xor
clc
test
push
adc
or
pop
movs
divps
inc
test
and
inc
or
loope
inc
mov
adc
mov
cmp
jmp
(bad)
adc
add
cmp
scas
inc
cmp
and
xor
les
dec
ds
and
ror
add
sbb
mov
pop
or
xor
adc
hlt
imul
repz
fwait
mov
fild
(bad)
in
icebp
scas
inc
sub
inc
inc
and
xchg
inc
paddsb
jnp
std
xchg
nop
hlt
aam
jg
inc
jo
add
mov
std
xor
inc
xlat
clc
les
ss
inc
pop
sbb
jo
sbb
push
icebp
test
out
or
aas
mov
aam
dec
xor
lock
sbb
dec
add
or
dec
inc
adc
add
cmp
rol
(bad)
xor
(bad)
cs
sar
mov
jo
aas
dec
add
inc
or
xor
test
fld
rol
add
in
inc
notrack
fiadd
cld
and
pop
add
mov
or
inc
add
mov
inc
or
push
inc
push
push
sub
iret
push
jg
rol
add
and
adc
pushf
or
jae
aas
or
iret
and
add
arpl
mov
sahf
add
movs
(bad)
push
inc
lea
and
pop
and
add
push
push
cld
jecxz
and
inc
js
xor
sbb
pop
and
sar
(bad)
ss
or
jo
inc
mov
or
nop
ror
xor
push
xor
add
or
adc
add
mov
push
das
add
and
or
iret
xor
push
adc
add
pop
inc
or
mov
push
or
jnp
and
or
add
adc
add
xchg
int3
push
xor
dec
or
push
adc
or
test
adc
aas
cmp
sub
inc
xor
enter
inc
push
and
inc
mov
cwde
sub
add
sbb
getsec
shl
or
xor
ret
pusha
or
or
jmp
or
ins
or
and
inc
mov
(bad)
hlt
(bad)
fisttp
xor
xor
add
dec
loope
test
add
add
in
unpcklps
adc
inc
in
addr16
dec
xor
push
mov
jp
and
adc
fld
mov
and
leave
add
call
sbb
lock
mov
add
push
push
ret
and
inc
xchg
and
repnz
bound
push
or
inc
mov
and
inc
mov
xlat
(bad)
cli
mov
adc
xor
out
dec
nop
mov
stc
(bad)
popa
add
fistp
or
push
mov
jbe
inc
pop
sbb
in
mov
mov
popf
sub
and
(bad)
or
cmp
mov
inc
aas
mov
psubb
ret
pop
pop
int3
pop
jmp
push
jecxz
inc
lds
dec
loopne
xchg
jecxz
leave
js
sbb
lds
mov
sbb
or
xchg
adc
shr
mov
xor
jge
nop
shl
shl
inc
shl
mov
ret
jmp
xor
inc
or
add
xchg
add
sub
mov
dec
cmp
push
xchg
rol
fs
jo
cmp
and
ss
mov
mov
push
xchg
arpl
jecxz
neg
aaa
mov
mov
and
int3
loop
cmp
rol
or
pop
adc
test
fadd
or
pop
add
loop
add
cwde
xor
add
inc
xchg
push
add
and
add
nop
inc
and
xor
dec
lods
ror
clc
inc
add
pop
clc
inc
lahf
adc
nop
xchg
or
fidiv
push
add
lock
pop
push
xchg
and
mov
int3
loope
jg
inc
add
add
lods
adc
add
sub
sbb
jg
push
lahf
add
les
jb
add
adc
add
(bad)
add
cwde
(bad)
mov
add
push
cli
adc
jecxz
cmp
and
add
inc
cld
and
dec
int
cmp
push
inc
sub
(bad)
mov
xchg
je
add
inc
xor
and
cmc
lods
outs
(bad)
jmp
pop
adc
add
stc
add
add
add
add
xor
das
add
or
add
or
mov
rol
inc
sbb
xchg
and
sub
mov
push
clc
das
cdq
adc
repnz
ss
pusha
inc
push
lea
aad
push
stos
inc
xchg
(bad)
fmul
ret
dec
test
jo
loopne
popf
adc
inc
fwait
or
dec
cld
and
inc
pusha
aas
movs
pop
std
std
mov
rol
xor
sub
or
repnz
xchg
pop
movs
or
in
leave
ror
test
cmp
and
jg
mov
xchg
in
and
mov
and
xchg
push
js
ret
mov
and
lahf
(bad)
outs
sahf
clc
cmp
jg
and
lock
rol
cmc
outs
inc
mov
ficomp
ins
mov
fsubr
jno
add
nop
test
pop
push
stc
daa
sub
mov
push
cmps
push
loopne
jg
ret
pusha
inc
mov
sbb
lock
mov
add
or
les
sbb
cli
ins
aam
aas
sub
and
or
and
sbb
inc
or
add
(bad)
and
or
push
xchg
inc
ret
in
(bad)
sbb
in
xchg
dec
sbb
or
add
or
inc
inc
add
loop
add
sbb
or
pop
mov
add
adc
cld
shl
inc
sbb
stc
test
cmp
hlt
add
xor
add
sub
lock
mov
sbb
xchg
pop
(bad)
xor
pop
pop
or
adc
int3
repz
adc
cmp
or
or
int3
aas
xchg
mov
mov
and
add
xchg
add
icebp
dec
and
aas
stc
cmp
lea
dec
push
xchg
cmps
aas
daa
fdiv
push
inc
and
aas
ins
inc
test
call
jno
and
add
test
je
mov
(bad)
or
inc
mov
lock
add
push
cwde
sub
adc
and
add
push
add
sar
inc
rol
push
loopne
shr
inc
jbe
rol
aas
push
pushf
push
dec
dec
nop
aas
mov
adc
mov
scas
adc
or
nop
mov
mov
or
call
dec
or
xor
cwde
sti
repnz
xor
mov
add
add
movups
inc
(bad)
retf
jmp
or
inc
pop
leave
adc
inc
rcl
leave
dec
rcl
or
jge
aas
ret
mov
xor
mov
(bad)
cld
push
ret
add
(bad)
and
int3
fcomp
test
fsin
or
mov
int
loopne
jecxz
mov
inc
adc
fadd
stos
test
int
jge
aas
in
jle
inc
rol
jmp
push
ds
xor
push
ret
cmp
mov
sahf
xor
hlt
add
sbb
out
test
adc
out
xchg
ja
pop
cld
repz
and
adc
aas
aam
xor
aas
les
hlt
cli
inc
and
add
push
js
sub
dec
push
data16
or
ss
aad
rcr
loop
jnp
sti
aas
push
mov
lea
and
ss
inc
xchg
inc
jecxz
loope
(bad)
js
cmps
cmp
add
cmp
mov
dec
clc
pop
inc
adc
rcr
js
add
scas
std
or
fadd
addr16
sub
sbb
inc
popa
cld
and
mov
(bad)
push
inc
outs
adc
mov
sbb
dec
dec
aas
sub
sbb
inc
push
popa
cmp
in
pop
or
inc
inc
pop
jecxz
push
mov
mov
or
in
pop
loopne
data16
jb
sbb
imul
push
push
push
xor
mov
popa
and
nop
enter
aam
xchg
rol
pop
add
out
pop
mov
arpl
add
popa
sbb
test
inc
cld
ror
and
sub
fsub
setbe
add
push
ret
add
push
arpl
mov
fdiv
inc
jmp
or
xchg
pushf
ret
mov
add
sbb
mov
cmp
cmp
js
sub
and
xor
cmps
jge
retf
or
mov
pop
mov
je
and
leave
mov
or
add
fcomp
mov
mov
inc
inc
push
lock
cmp
add
push
loopne
(bad)
dec
aas
add
loopne
add
ret
rcl
mov
add
mov
and
xchg
xchg
and
cli
push
jo
loopne
mov
pusha
mov
das
clc
add
jle
movq
cmps
pop
stc
pop
push
jnp
push
or
and
add
push
lock
dec
lock
push
and
inc
add
inc
sub
cwde
bound
or
cmovs
add
shr
xor
rol
mov
mov
les
ficomp
xchg
push
lea
and
add
add
add
add
xor
das
add
or
add
or
mov
rol
xchg
ret
and
mov
ret
push
or
xor
enter
inc
pusha
(bad)
(bad)
push
in
lahf
mov
or
repz
push
cmp
xor
movs
xchg
mov
mov
js
inc
retf
xchg
rcl
sbb
and
or
cld
dec
xchg
inc
and
cmp
ror
xchg
push
add
mov
loope
jecxz
mov
or
adc
in
add
mov
jno
add
and
sub
js
rol
ss
cmp
mov
jb
or
lock
aas
add
inc
mov
mov
lahf
xchg
adc
and
mov
data16
cmp
xchg
dec
or
inc
aam
inc
dec
xchg
and
stc
out
inc
(bad)
push
sub
js
cld
out
sbb
loopne
or
xchg
and
xor
cmp
sar
xlat
mov
dec
adc
aad
pop
mov
inc
push
add
add
dec
add
inc
adc
fild
and
mov
inc
adc
inc
mov
jae
add
add
dec
and
aas
ins
dec
adc
aas
pop
clc
jecxz
push
inc
pop
bnd
or
add
xor
aas
sub
adc
pop
mov
and
add
mov
pop
bound
and
nop
sar
cmp
inc
pop
lods
adc
ret
and
gs
loope
mov
pushf
lods
sub
add
(bad)
leave
aas
push
cld
push
add
jnp
add
add
add
push
mov
add
add
jae
inc
mov
add
cld
push
test
mov
loopne
push
and
jl
lock
adc
or
aam
mov
add
mov
aad
xor
fsub
cmp
xor
xchg
inc
sub
nop
ret
or
cld
push
mov
ins
xor
aas
xchg
les
nop
xor
int3
popa
dec
add
sar
push
sbb
adc
push
mov
push
pushf
and
add
mov
xchg
add
js
inc
or
aad
push
push
outs
and
ds
aas
adc
rcr
and
add
adc
or
dec
jge
popf
jbe
pop
mov
(bad)
add
iret
pusha
and
ret
das
push
push
aas
inc
dec
ror
or
or
add
lock
iret
push
mov
dec
push
or
inc
or
sbb
push
inc
nop
aas
mov
inc
loopne
(bad)
or
std
arpl
inc
nop
or
daa
inc
and
xor
or
fistp
mov
add
inc
(bad)
nop
nop
xor
mov
xor
ins
lahf
repz
int
jle
fisub
push
add
mov
fwait
inc
outs
aaa
repz
mov
clc
inc
adc
adc
out
mov
add
call
inc
dec
call
aam
mov
inc
inc
and
add
rol
cmp
mov
adc
cmc
mov
add
aas
es
and
ret
add
shl
icebp
(bad)
sti
jae
repnz
dec
dec
icebp
out
pop
jae
stos
pop
jae
xor
fdiv
(bad)
mul
cmp
daa
ret
push
aaa
in
cs
mov
out
and
enter
inc
or
ret
cmps
inc
test
ss
or
pop
push
inc
xchg
popa
or
pushf
push
fimul
in
push
lock
xor
gs
or
adc
sub
gs
add
ror
rcr
nop
add
jl
or
nop
mov
dec
cld
inc
or
pop
xchg
and
or
add
xchg
push
add
adc
xor
inc
sbb
jno
xor
loopne
and
add
dec
or
or
mov
ror
nop
or
cwde
inc
sbb
or
push
cmp
add
pop
je
add
add
dec
pusha
test
leave
push
scas
mov
add
xor
or
test
and
sbb
adc
dec
pop
or
mov
xchg
loop
mov
popa
pop
or
loopne
pop
dec
movs
push
mov
inc
add
stc
arpl
adc
inc
push
mov
push
sub
push
mov
push
cmps
sub
retf
(bad)
rcl
cmp
inc
add
pop
sbb
mov
mov
lds
(bad)
mov
and
in
cmp
sub
inc
int3
inc
add
enter
nop
inc
pop
inc
ret
or
(bad)
das
sub
pop
or
arpl
dec
add
in
and
push
jo
les
adc
mov
inc
cli
nop
jno
loopne
or
sbb
or
pop
mov
xor
push
les
dec
lock
and
xchg
je
push
mov
ret
and
les
aad
xchg
inc
inc
xchg
rol
test
cmp
adc
sbb
or
lods
adc
mov
add
adc
clc
and
fs
add
add
add
add
xor
xor
add
inc
dec
sbb
mov
rol
mov
rcr
push
js
mov
inc
xor
inc
xchg
xchg
mov
pop
push
mov
out
mov
or
jb
mov
call
das
not
call
lods
in
stc
loopne
push
into
mov
(bad)
sbb
mul
inc
or
push
xor
jnp
es
sar
idiv
mov
adc
or
add
loopne
sbb
add
cwde
and
cli
ins
sbb
and
(bad)
cmp
cmp
enter
add
clc
aaa
jns
add
or
push
adc
cmc
mov
pop
jmp
rol
clc
aaa
imul
jnp
inc
sub
inc
dec
add
sub
xchg
pop
sbb
push
inc
dec
cld
adc
jo
sbb
ja
pop
cmc
jmp
mov
sub
push
jp
call
adc
stos
test
iret
or
and
pop
xor
add
inc
or
adc
add
cli
and
xor
and
loope
add
in
leave
or
mov
inc
add
inc
ret
fidivr
adc
add
mov
cmc
mov
add
unpcklps
add
and
aaa
(bad)
rcl
(bad)
nop
rol
sbb
add
aas
mov
ins
cmp
jo
test
cmp
(bad)
push
or
add
das
pop
rol
or
xor
xor
cmp
inc
push
data16
arpl
mov
or
jb
inc
jl
mov
nop
add
pop
pop
xchg
shl
ins
cld
rol
or
mov
dec
aas
(bad)
test
jne
inc
add
cmps
dec
(bad)
push
sbb
push
or
fs
test
jp
push
add
mov
in
adc
aas
and
int
mov
adc
inc
adc
rcl
push
lea
pop
dec
sub
or
ror
xchg
mov
sbb
inc
push
and
add
out
xchg
inc
add
inc
cdq
(bad)
and
xchg
add
xchg
lock
lds
add
sbb
rol
jg
(bad)
icebp
dec
xcrypt-ctr
cmps
pop
inc
rcl
and
or
inc
add
iret
ret
adc
add
cs
(bad)
push
stc
fld
shl
add
adc
mov
daa
inc
mov
add
add
or
mov
je
mov
pusha
add
add
and
adc
xor
lods
xor
retf
xor
pusha
inc
sbb
pusha
inc
push
int
or
or
cld
adc
aaa
sar
and
ret
or
push
adc
ror
lea
aam
repnz
and
mov
mov
dec
lds
pop
dec
push
add
push
ret
pusha
cs
or
test
mov
iret
in
je
adc
xor
sbb
add
sbb
int3
add
sbb
mov
enter
repnz
test
inc
xor
std
add
nop
push
das
cld
inc
or
sar
rol
ds
sti
ror
or
add
leave
aam
adc
retf
idiv
jl
wrmsr
xchg
xchg
dec
mov
cli
fs
fcomp
jecxz
call
add
pop
add
pop
adc
xchg
in
mov
xchg
push
add
movs
push
xor
add
in
add
retf
mov
punpcklwd
lock
stc
xchg
cmp
packssdw
add
adc
add
adc
pop
test
das
or
fmul
ss
add
int3
outs
sbb
mov
xor
ja
and
pop
xchg
repnz
xchg
fiadd
xor
xor
push
inc
inc
test
adc
xor
imul
mov
adc
lock
xor
mov
or
sbb
ret
adc
push
or
and
add
cld
push
cmp
les
jo
inc
mov
dec
or
rol
add
aas
cwde
or
mov
pop
xchg
retf
popa
push
sbb
xor
ins
nop
shl
rcr
lock
mov
add
rol
mov
or
fst
data16
cwde
call
(bad)
cmp
inc
jge
jecxz
sub
pop
jbe
and
add
pop
jns
mov
cmp
cmp
inc
or
sbb
push
test
mov
inc
aad
nop
inc
mov
sbb
adc
bound
jbe
cmp
je
or
sbb
and
add
jno
outs
cld
ret
pop
mov
repnz
mov
adc
sub
aaa
hlt
add
test
cmp
(bad)
test
icebp
inc
inc
xchg
lock
rol
sub
adc
add
bound
sbb
add
and
sahf
mov
aad
or
test
xlat
xchg
ret
loopne
or
adc
push
mov
cmp
add
mov
and
add
add
add
add
xor
xor
add
inc
dec
sbb
mov
rol
mov
ret
xchg
inc
adc
mov
xor
xor
or
sub
nop
ror
loope
adc
or
xor
movs
(bad)
adc
add
loopne
stos
jg
dec
push
das
xchg
jp
pop
stos
mov
shl
(bad)
loopne
xor
cmp
sub
(bad)
add
loop
sub
test
pop
or
add
cmp
pusha
push
push
fs
sub
xchg
mov
xchg
and
sbb
push
lock
pop
xchg
dec
pop
xor
cmp
and
and
add
(bad)
pop
or
les
movs
pop
jge
stos
add
add
or
xchg
xor
cli
push
inc
aam
push
mov
adc
ja
fadd
arpl
sbb
rol
mov
call
adc
pop
add
mov
call
popa
out
inc
cmp
ins
cmps
lea
idiv
push
std
lahf
pop
scas
add
jo
aas
jg
call
pop
inc
pop
add
push
or
cld
xor
inc
adc
movs
dec
inc
xor
push
pusha
push
std
add
push
sub
add
and
pop
mov
or
jg
mov
cld
add
add
xor
adc
cwde
cwde
jno
pop
sar
fs
pop
rcl
add
nop
add
and
syscall
and
pop
jnp
add
cld
adc
inc
pop
xor
push
adc
nop
mov
sahf
cs
icebp
inc
or
fs
xor
fs
add
(bad)
in
hlt
(bad)
jno
sbb
push
dec
das
adc
add
pop
or
cld
mov
cmps
sub
rol
xor
sbb
sub
pop
inc
unpcklps
push
ret
or
cld
ret
lds
or
imul
aas
inc
cld
mov
pusha
add
out
(bad)
inc
rol
rol
pop
mov
inc
and
inc
sbb
ror
pop
add
add
or
push
cdq
add
pushf
rol
or
sbb
push
(bad)
or
and
neg
mov
bound
daa
inc
add
(bad)
aas
adc
rol
aas
fmul
add
mov
lock
xor
rol
add
leave
mov
adc
add
inc
mov
push
cmp
push
xchg
nop
inc
or
xor
jno
sub
cmc
dec
or
shufps
(bad)
daa
adc
push
xor
lods
movs
cmps
sahf
jnp
jecxz
pop
int
add
or
js
les
(bad)
(bad)
cmp
mov
fld
dec
xlat
cmp
inc
stos
adc
and
aam
adc
fild
adc
test
pop
or
ror
xor
cld
adc
xchg
rcl
dec
jmp
pop
(bad)
fadd
add
repz
push
or
adc
fs
jns
mov
cmps
cld
xchg
mov
or
add
inc
xor
inc
or
loopne
push
push
add
arpl
cmp
push
push
pop
and
mov
push
sub
cli
(bad)
call
sub
mov
xchg
test
fadd
inc
or
ret
sbb
mov
fld
aas
xchg
add
mov
xchg
add
or
push
icebp
add
nop
test
jo
mov
(bad)
xor
ror
and
mov
jno
loope
or
dec
inc
cmc
(bad)
in
test
inc
loopne
sbb
add
repnz
add
and
enter
sbb
sbb
loop
(bad)
icebp
add
sbb
aaa
ss
adc
adc
and
inc
(bad)
sub
adc
ror
xchg
mov
or
mov
xor
jno
push
mov
inc
fs
add
inc
xor
and
in
push
add
pop
or
adc
call
inc
sub
test
mov
xchg
mov
shl
rol
je
add
enter
mov
mov
add
je
rol
lods
sub
inc
movs
push
retf
sbb
ror
push
add
mov
cmp
add
add
add
add
punpckhbw
scas
jbe
test
xor
ror
or
dec
add
add
les
pop
add
aas
and
xor
pmaddwd
add
push
add
pusha
inc
pop
adc
cmp
and
adc
add
enter
aam
add
pop
and
mov
xchg
jmp
or
lock
push
add
pop
dec
jo
push
inc
inc
add
mov
add
mov
sbb
mov
ror
or
test
fadd
sbb
inc
std
inc
inc
movq
xchg
and
rol
popa
add
dec
inc
mov
adc
cdq
jp
sbb
xchg
jo
xlat
inc
xor
or
ror
xor
push
je
ins
xchg
(bad)
das
in
cmp
aam
and
aas
scas
lock
loopne
dec
adc
stos
xchg
and
dec
pop
cli
add
into
inc
and
mov
inc
add
js
lods
cmps
lds
jo
mov
adc
pusha
or
gs
sub
inc
add
and
add
add
add
add
xor
xor
add
inc
dec
sbb
mov
rol
pop
mov
jle
inc
adc
pop
adc
push
cwde
ret
into
sbb
dec
adc
mov
add
pop
xchg
test
(bad)
and
xor
js
xor
jo
and
inc
xchg
scas
fild
mov
xor
mov
xchg
pop
shl
mov
dec
inc
shr
or
pop
xor
xchg
call
or
and
adc
push
sub
inc
rcl
xor
adc
jecxz
mov
div
int3
cmp
add
adc
mov
loop
cli
jmp
bound
xchg
dec
inc
dec
cwde
xor
mov
jnp
or
daa
mov
in
jne
fbstp
loop
(bad)
sub
clc
push
(bad)
aas
out
xor
adc
add
push
or
add
and
lahf
jnp
xchg
jns
ret
and
pop
aad
jns
fisub
rol
call
nop
jmp
inc
fcom
fmul
out
or
inc
pusha
adc
iret
sub
xor
sub
sub
push
inc
dec
add
push
pop
push
in
mov
pop
loop
add
mov
and
add
xor
jbe
sub
and
(bad)
push
push
push
aad
sbb
cld
xchg
retf
in
add
add
inc
or
repz
sbb
lds
test
enter
push
dec
mov
test
xor
inc
cmp
nop
xor
nop
add
pop
(bad)
and
aad
test
and
je
retf
inc
mov
inc
dec
pop
push
enter
push
int3
add
ror
or
push
push
mov
shl
and
test
lds
in
ins
nop
iret
inc
ret
push
push
xor
sub
jl
ret
pop
sbb
paddb
cmp
das
call
sbb
(bad)
or
and
add
cld
adc
push
test
mov
loopne
retf
into
repnz
mov
add
or
or
test
jo
push
(bad)
enter
pop
cmp
test
hlt
mov
icebp
dec
ud0
inc
xor
push
out
add
and
xor
add
or
les
or
lds
inc
cld
adc
aas
pop
loop
dec
add
clc
xchg
int3
inc
fs
jae
test
or
sbb
repnz
xchg
mov
inc
mov
pop
push
or
repz
add
add
ror
fadd
adc
inc
sbb
add
add
or
sar
adc
js
mov
ror
or
pop
(bad)
mov
sub
add
and
inc
fdivrp
test
rol
jo
int
shl
or
jl
mov
fcom
dec
xor
mov
mov
or
and
inc
inc
or
cld
and
jecxz
test
into
add
and
add
pcmpgtb
inc
outs
lock
dec
fisub
pop
std
sysenter
mov
mov
int
in
shl
call
lock
or
sbb
cld
inc
or
mov
ds
mov
in
xlat
dec
dec
cmc
adc
jno
sub
aas
and
leave
icebp
ficom
dec
or
sbb
add
hlt
or
(bad)
mov
cmp
xchg
mov
sbb
and
mov
adc
sbb
cmp
jge
mov
cmp
(bad)
pop
xchg
test
and
iret
sti
mov
add
sub
adc
and
cmova
loop
xor
jmp
or
inc
or
pop
add
rol
popa
and
add
dec
and
out
mov
cmps
push
add
das
nop
inc
push
fs
cmp
stos
pusha
popf
pop
and
test
and
call
adc
mov
cwde
inc
nop
ror
jno
push
mov
and
add
or
add
(bad)
add
xor
and
mov
xlat
es
inc
sub
lock
fs
ins
mov
cwde
and
inc
add
ret
push
mov
stos
ins
and
sub
push
cmp
add
sub
sbb
test
mov
packsswb
sbb
icebp
mov
add
and
cli
xor
aas
cwde
push
pop
gs
loope
mov
dec
add
sbb
rol
push
add
and
push
adc
and
pop
push
cmp
test
and
jg
and
mov
inc
sbb
xchg
push
mov
push
add
inc
pop
aaa
int
aas
add
or
enter
rol
add
or
xchg
jo
or
into
mov
pop
push
and
add
push
loopne
mov
fadd
and
popa
add
add
icebp
push
fs
mov
outs
data16
inc
sbb
rol
aas
(bad)
pushf
pop
cld
mov
das
jmp
(bad)
cwde
or
inc
xchg
inc
adc
push
test
inc
or
add
shl
clc
xchg
add
adc
jbe
mov
sub
cmp
test
push
mov
sti
maxps
in
xchg
les
rcl
sub
inc
add
lds
ins
jnp
mov
adc
add
add
inc
jo
mov
or
sbb
sub
enter
or
adc
sub
aas
cld
inc
pop
jecxz
inc
inc
add
and
add
add
add
add
xor
xor
add
inc
dec
sbb
mov
rol
push
add
xchg
and
cmp
enter
mov
sub
jno
in
scas
mov
(bad)
mov
mov
and
sbb
lahf
mov
mov
inc
into
xchg
dec
add
inc
jns
pop
or
adc
rcl
push
(bad)
sti
aaa
push
pusha
mov
or
inc
ret
adc
add
shl
add
push
add
test
jns
in
leave
test
test
inc
push
and
loop
and
ret
or
loopne
in
push
jp
out
push
adc
mov
pop
(bad)
icebp
jo
xchg
mov
daa
push
inc
jns
in
add
jl
jno
iret
lahf
out
pop
(bad)
in
pusha
mov
xor
push
stos
les
push
scas
inc
or
mov
je
or
cld
xor
jp
jmp
jge
push
wrmsr
pop
rcl
das
popa
add
mov
fidiv
xchg
or
push
sbb
pop
adc
or
pop
cli
cld
shl
aas
test
int
adc
dec
xor
std
ror
xor
hlt
xacquire
add
xchg
xor
lds
inc
in
inc
adc
dec
push
cmp
push
add
jns
add
cmps
or
aad
push
inc
pusha
adc
mov
mov
dec
or
in
dec
mov
cmp
xor
(bad)
or
dec
les
pop
loope
push
das
nop
and
add
das
inc
add
or
sbb
pushf
cld
rol
enter
xor
dec
out
daa
cmp
call
pop
mov
mov
fs
inc
inc
wbinvd
pop
mov
lds
pop
mov
clc
repz
adc
inc
pop
sbb
sbb
outs
pop
inc
lock
jl
inc
xor
inc
add
inc
nop
inc
or
jl
jo
push
add
test
loope
aas
(bad)
lock
sbb
inc
test
push
cld
jae
scas
inc
inc
loopne
or
and
add
or
cmp
cld
and
aas
sbb
inc
pop
push
je
jecxz
jno
sbb
sub
inc
push
mov
or
adc
xacquire
or
cmps
mov
imul
ror
xchg
add
loopne
push
leave
aas
add
inc
xchg
cld
jmp
dec
sub
rol
add
sbb
test
mov
add
ret
inc
mov
or
add
dec
les
and
adc
and
rcl
add
nop
sbb
xor
push
xchg
pop
add
mov
rol
or
mov
(bad)
xor
adc
inc
jle
xchg
or
add
inc
or
add
dec
adc
push
add
add
scas
xchg
fisubr
aas
(bad)
jo
or
pop
pop
repz
xor
fadd
add
(bad)
enter
or
xchg
cmp
shl
or
xor
(bad)
repz
nop
inc
pop
out
fcom
(bad)
repnz
pop
ret
pop
outs
inc
cmps
(bad)
aaa
hlt
(bad)
enter
xor
xchg
int3
aas
adc
pop
and
mov
mov
add
xor
add
jl
stos
sbb
loope
sbb
inc
add
ror
nop
pop
mov
dec
cmp
xchg
ss
adc
add
stc
mov
mov
(bad)
ror
mov
and
loopne
aas
and
nop
or
ds
xchg
add
adc
gs
add
mov
das
or
jg
mov
ds
or
stc
and
add
sub
xor
inc
inc
sbb
mov
or
add
mov
pusha
or
call
sbb
mov
add
test
sbb
dec
mov
cld
ret
adc
ror
xor
push
jo
inc
call
push
add
add
jae
sub
xor
dec
xchg
ss
or
enter
not
pop
or
sbb
xor
adc
mov
push
leave
and
adc
sub
add
jl
ins
aas
sbb
clc
and
fwait
sbb
or
add
ins
jmp
push
call
xor
aam
add
loopne
(bad)
cmp
or
inc
add
cmp
ins
ror
(bad)
cmps
or
pop
gs
arpl
mov
nop
add
cwde
ror
retf
dec
mov
dec
je
adc
or
push
mov
cmps
pop
and
inc
push
or
loopne
ret
sbb
xor
ror
sbb
pusha
loopne
cmp
mov
gs
and
popa
sbb
cli
movs
inc
daa
lock
sbb
and
add
pop
add
or
push
je
push
add
rol
pusha
sbb
repnz
js
cmps
or
cmp
or
pop
loope
movs
push
(bad)
push
sub
xor
xchg
test
add
(bad)
xor
adc
mov
push
test
push
int3
adc
or
sub
push
add
jo
add
in
pop
das
retf
loopne
int3
push
add
pusha
xor
push
sbb
sub
mov
lds
fs
adc
jle
add
loopne
outs
popa
inc
sbb
loopne
jo
and
std
(bad)
jae
jmp
pop
pop
xchg
and
dec
inc
cmp
(bad)
push
int3
mov
adc
movs
add
mov
pop
inc
add
mov
mov
adc
loop
je
add
movs
pusha
mov
in
mov
xlat
inc
inc
or
ror
out
dec
add
and
jl
add
ret
push
jno
inc
sub
push
inc
and
add
stc
add
add
add
add
add
or
add
or
mov
rol
sub
and
clc
iret
pop
aas
popa
inc
(bad)
sub
clc
inc
sbb
mov
pop
push
mov
rol
lock
pop
enter
adc
and
sysexit
or
sub
ud0
std
and
(bad)
cmps
test
dec
xchg
adc
or
call
stos
push
popa
ror
cld
jmp
aam
inc
setne
xor
in
sbb
add
ret
ins
and
add
int3
or
add
mov
test
push
and
add
mov
sbb
push
xchg
dec
add
fild
pop
and
(bad)
cmp
stc
and
in
mov
fnstsw
inc
xchg
imul
push
add
sbb
or
add
mov
popa
or
call
or
pop
or
cmps
dec
add
push
test
cmp
sbb
movs
xchg
jg
pushf
pop
rcl
add
xor
xor
mov
pop
fild
inc
or
mov
fidivr
inc
cld
inc
lea
push
push
or
add
lock
inc
test
and
inc
fs
call
adc
inc
or
and
call
xor
nop
add
sbb
add
adc
arpl
add
or
pop
cmp
rol
dec
or
push
or
add
test
or
rcl
inc
add
add
int
test
jecxz
xchg
xor
or
adc
rcr
push
jge
push
aaa
call
sub
in
(bad)
push
or
inc
in
push
add
push
aas
lods
mov
inc
or
inc
and
add
mov
cld
and
or
jl
mov
inc
adc
mov
xor
ret
rol
pusha
add
stos
ret
ins
inc
sub
leave
or
fisttp
out
sysexit
pop
mov
pop
xchg
outs
std
push
add
rol
dec
das
(bad)
hlt
rcl
repnz
shl
push
or
(bad)
hlt
adc
xor
xadd
dec
add
xor
add
push
xlat
popa
shl
and
scas
lods
daa
in
add
add
sub
cmp
lods
jnp
lods
scas
or
or
out
or
cmp
xor
(bad)
std
imul
jge
popa
add
adc
aas
rcr
push
inc
arpl
xchg
mov
add
sbb
jno
andnps
(bad)
ficom
(bad)
loop
adc
add
shr
inc
add
stc
add
add
add
add
xor
xor
add
inc
dec
sbb
mov
rol
mov
xchg
and
hlt
addr16
and
cmp
enter
pop
sub
inc
stos
and
(bad)
xchg
pop
daa
cld
add
inc
add
ja
retf
out
fbld
push
sub
xor
call
ret
or
dec
int3
call
mov
add
jo
sar
out
dec
pusha
test
push
xchg
or
pop
push
adc
nop
jo
add
(bad)
jmp
imul
daa
inc
les
push
xchg
ror
cmc
scas
(bad)
mov
mov
ja
xchg
add
das
xor
call
lss
loope
jmp
or
xor
mov
lock
push
or
test
loope
dec
and
push
sahf
daa
loop
dec
adc
mov
mov
xor
loope
add
clc
(bad)
arpl
inc
xor
ret
dec
das
sub
ja
add
inc
nop
adc
add
pcmpeqd
xchg
add
adc
or
sbb
inc
and
xor
add
mov
push
cld
inc
inc
inc
enter
pop
jns
lock
pop
add
mov
(bad)
jl
test
mov
add
mov
add
aas
xchg
les
adc
cmp
sbb
mov
comiss
loopne
add
mov
aas
gs
push
inc
(bad)
sbb
mov
iret
push
retf
dec
xor
adc
js
add
pop
enter
(bad)
dec
test
jecxz
ss
js
rol
dec
xor
rol
add
xor
fidivr
dec
or
adc
add
movhps
sar
add
je
aas
add
and
adc
dec
or
or
aad
or
or
fwait
(bad)
sbb
loop
adc
rcl
cld
xor
xchg
cmp
jmp
aas
dec
std
sub
cmp
xchg
ret
pop
and
adc
inc
lock
jl
loopne
xor
sbb
test
cmp
add
adc
add
inc
cvttps2pi
les
nop
or
loopne
inc
add
ror
xor
test
dec
and
rol
jbe
add
and
or
mov
(bad)
xor
cmp
test
sub
cmp
ret
pushf
jb
xor
or
outs
or
push
dec
add
xchg
pusha
mov
ss
add
or
xchg
or
add
inc
xchg
dec
inc
shr
adc
sbb
mov
test
xor
mov
push
lods
inc
jns
arpl
pusha
mov
pop
std
wrmsr
push
lock
add
pop
ins
int3
stos
int
add
inc
cs
xor
xor
mov
add
xchg
and
int3
stos
movs
unpcklps
mov
add
mov
add
les
hlt
push
or
clc
mov
into
cmp
jmp
mov
adc
add
ins
adc
sbb
xchg
push
int3
pop
lods
add
or
adc
dec
push
push
neg
daa
inc
inc
add
mov
push
xor
or
xchg
enter
or
add
or
xor
and
inc
enter
(bad)
leave
sub
and
xchg
add
mov
inc
js
add
mov
sbb
cld
xchg
pushf
icebp
lea
pusha
sub
mov
xlat
aas
or
sub
sbb
push
push
ret
scas
dec
sbb
or
out
movhps
or
pop
xchg
loope
adc
add
or
mov
jo
fld
(bad)
cmp
adc
test
xchg
xor
sbb
xor
rcl
inc
rol
clc
test
push
pusha
mov
inc
cmp
or
or
and
hlt
jecxz
leave
sti
(bad)
sbb
sbb
mov
add
sub
add
rcr
clc
pop
xor
mov
mov
xor
rcr
sbb
add
adc
add
sbb
nop/reserved
pop
jo
and
ret
or
xchg
movs
sub
clc
ret
cmp
enter
push
rcr
add
ror
add
ss
add
xor
imul
and
and
or
sub
add
or
loopne
or
or
mov
mov
cmp
mov
stc
nop
inc
jo
push
test
mov
inc
and
dec
lock
pop
je
cmp
imul
and
add
vmovntpd
inc
add
test
and
mov
cmp
test
xchg
stos
jmp
mov
mov
jae
adc
rcl
mov
pop
icebp
(bad)
and
add
mov
js
sub
add
cmp
add
mov
xlat
(bad)
clc
mov
push
xor
or
sub
jno
inc
inc
loop
ja
add
int3
and
mov
or
rcl
jnp
jb
ret
adc
lock
adc
push
and
add
and
add
add
add
add
xor
xor
add
inc
dec
sbb
mov
rol
retf
xchg
and
pushf
mov
nop
and
and
fdivr
iret
fbld
jae
outs
add
xchg
pop
std
xchg
pop
xor
ds
nop
(bad)
rol
push
mov
or
daa
ret
or
sbb
loope
push
fdivr
popa
sbb
scas
sub
adc
dec
rol
dec
mov
add
mov
jl
pusha
mov
or
pop
dec
adc
inc
test
mov
push
test
(bad)
popf
pusha
shl
test
das
xor
mov
dec
imul
jl
dec
les
(bad)
sbb
or
repz
nop
imul
enter
adc
dec
int3
and
call
and
mov
xor
xor
mov
(bad)
jmp
push
sbb
aas
adc
dec
mov
ret
cmp
lea
add
inc
xor
cld
jmp
ret
test
and
mov
mov
pop
jne
repnz
inc
ret
dec
and
inc
lock
add
mov
std
(bad)
adc
sub
nop
ror
das
cwde
inc
inc
or
nop
inc
or
ret
(bad)
aas
push
mov
add
and
mov
ins
test
add
add
lock
add
enter
add
ret
add
and
rol
ret
mov
inc
mov
adc
rol
ret
or
cwde
adc
jecxz
add
pushf
add
sub
arpl
and
jb
ret
js
dec
or
adc
adc
les
pop
mov
mov
or
adc
jmp
mov
aas
inc
or
ret
sbb
dec
or
adc
(bad)
cli
dec
or
sar
arpl
pop
xor
add
push
push
mov
aas
mov
inc
in
les
jnp
rol
sub
sub
xchg
adc
(bad)
cld
and
aas
or
push
or
sbb
xor
jb
add
pushf
xor
push
pop
mov
or
aas
push
hlt
fild
sub
xor
xchg
loopne
pop
inc
and
add
sub
mov
sbb
add
ret
jo
stc
add
add
sbb
call
xor
or
lods
push
inc
lods
cmp
pusha
add
add
add
pushf
pusha
inc
add
ret
(bad)
sar
add
iret
and
jo
add
nop
mov
add
xor
or
and
add
push
ret
push
xchg
mov
xchg
add
xor
push
mov
pop
std
(bad)
xor
int
xor
enter
or
frstor
sar
jecxz
push
xor
inc
repz
or
out
jge
pop
jmp
fs
pop
add
and
aas
scas
arpl
nop
out
inc
push
sbb
and
adc
lahf
stos
cs
in
add
fbld
inc
mov
add
xor
mov
cli
inc
shl
cmp
shl
int3
push
scas
cmp
inc
inc
(bad)
lock
add
dec
(bad)
and
or
dec
xor
jmp
les
adc
outs
int
fadd
cmp
pop
lahf
mov
xor
nop
int3
jg
fcmovnu
pop
mov
pop
or
ret
stc
(bad)
std
test
out
std
add
inc
add
add
sbb
mov
inc
cmp
test
or
jecxz
retf
adc
sbb
mov
xchg
inc
lock
push
outs
test
loope
jmp
add
xor
add
fadd
sub
sbb
loop
add
(bad)
pop
aam
(bad)
adc
push
ins
mov
shl
add
icebp
add
push
(bad)
ss
call
adc
iret
cmp
push
cld
cmp
call
add
push
inc
xchg
xor
mov
add
mov
adc
or
test
xor
arpl
mov
or
xor
(bad)
lock
les
sbb
inc
or
inc
add
lock
mov
mov
popa
sbb
inc
cmps
xor
inc
sbb
test
or
dec
(bad)
mov
xchg
add
out
xchg
adc
inc
sub
mov
frstor
add
cmp
or
aam
pop
add
add
pop
icebp
cmps
push
je
retf
ret
clc
pop
cmp
sbb
add
cmp
or
(bad)
loope
mov
lahf
add
xor
and
or
pop
or
push
(bad)
adc
fs
adc
lock
ss
add
lds
and
sub
add
and
cs
xchg
xor
pop
stc
lds
(bad)
xor
cmp
test
shl
inc
and
push
inc
add
cmc
and
mov
add
jle
and
dec
(bad)
adc
lock
loope
mov
mov
adc
and
add
add
add
add
xor
xor
add
inc
dec
sbb
mov
rol
or
ret
test
mov
adc
add
and
dec
adc
test
xchg
add
lock
push
sub
and
or
sub
add
imul
add
cmp
adc
push
sahf
push
add
add
and
arpl
xor
add
aas
add
ror
fsub
add
jle
jnp
cld
aaa
mov
push
sbb
pop
test
or
ins
or
mov
or
mov
fsub
pop
push
or
mov
sub
add
mov
add
(bad)
dec
les
adc
push
pop
adc
and
retf
or
fst
cmp
sub
or
xchg
add
int3
retf
les
adc
jmp
mov
inc
aam
adc
movs
and
jnp
out
popa
ffreep
cmp
pop
lods
mov
fcomp
push
sbb
cmc
adc
xchg
cmp
(bad)
fst
test
arpl
fisttp
and
inc
add
or
or
add
icebp
mov
(bad)
cmp
test
inc
pusha
inc
push
shl
or
nop
jo
push
pop
jo
(bad)
mov
inc
lea
rol
or
sub
pop
and
xor
jo
inc
or
or
aas
jae
fadd
or
dec
xchg
rol
inc
cmp
mov
pushf
ins
add
sbb
inc
and
inc
jo
shr
hlt
fadd
adc
nop
inc
or
cwde
rol
adc
rol
sbb
xchg
cmp
add
aas
jl
mov
inc
and
xor
sar
inc
adc
push
add
movaps
nop
inc
paddusb
inc
xchg
fidivr
and
ret
add
cmp
repnz
aas
fs
pusha
imul
inc
pop
xor
out
rol
cmp
mov
sub
mov
add
adc
or
jp
add
or
into
aas
xchg
sbb
add
iret
or
adc
aas
jns
xchg
add
xor
jno
xor
sub
jmp
dec
cmps
je
inc
dec
btr
ret
ret
push
and
aad
dec
add
rol
(bad)
icebp
iret
add
xchg
pusha
cwde
aas
shl
aas
fisttp
add
or
inc
adc
rol
pushf
xchg
add
ds
(bad)
das
add
add
add
fs
xor
sbb
add
pop
mov
aaa
fdiv
mov
aas
and
(bad)
or
cmps
or
mov
add
cmp
xor
or
je
add
and
or
std
add
outs
movs
out
add
rcl
xchg
or
inc
xor
inc
jmp
repnz
bound
or
or
inc
or
out
aas
jle
xor
mov
ret
pusha
aaa
add
and
ror
xor
sbb
add
push
add
and
in
pop
inc
ret
mov
add
jmp
lahf
cmp
int3
scas
out
jmp
push
cld
inc
scas
clflush
cld
repnz
stos
mov
aam
or
dec
adc
retf
or
or
stos
inc
adc
xor
ret
dec
pusha
adc
sbb
push
lock
push
xor
sbb
and
push
sbb
pusha
ror
inc
sub
adc
mov
or
mov
or
and
or
mov
popf
xor
add
popa
xchg
das
jns
jns
xor
and
rcr
add
inc
add
and
pop
adc
call
inc
sbb
sti
ret
add
lods
sbb
push
mov
ds
add
adc
shl
and
jns
sbb
fs
sbb
rcr
lock
push
and
adc
pop
xor
inc
or
rol
and
rol
xchg
add
inc
adc
pop
lahf
add
inc
add
and
(bad)
adc
addr16
add
loopne
add
shr
mov
pop
nop
pusha
pop
popf
enter
popa
or
and
mov
add
adc
adc
stc
mov
les
add
test
inc
or
cli
add
push
pusha
xor
or
call
push
sub
sbb
push
xchg
into
jb
arpl
or
dec
add
cmc
bswap
shl
cli
mov
add
bound
in
mov
adc
or
cmp
ret
and
rcl
mov
add
popa
mov
inc
and
fild
cmc
add
add
movs
add
xor
xchg
loopne
add
push
mov
jecxz
push
sub
add
in
or
test
pusha
test
movs
loopne
lea
inc
and
add
popf
lock
inc
test
cmp
inc
add
and
sbb
add
inc
add
add
stos
adc
shl
jno
jg
add
(bad)
popa
sub
add
add
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
test
or
arpl
hlt
ror
and
cmp
and
sub
repnz
inc
or
and
xor
arpl
xchg
push
dec
jo
fmul
nop
push
push
sbb
adc
test
mov
out
(bad)
ss
pop
pop
cld
retf
nop
add
jnp
push
add
mov
push
retf
(bad)
aas
sbb
rcl
test
fs
mov
test
add
xchg
or
dec
mov
jno
push
adc
or
adc
mov
jp
into
jl
xlat
dec
sbb
sub
shl
les
ror
nop
rol
jge
sbb
lods
movs
add
std
out
inc
xchg
sbb
js
cld
scas
inc
add
nop
jmp
hlt
dec
mov
push
arpl
cmp
or
and
add
mov
pop
loop
mov
add
sub
cmp
test
(bad)
add
mov
dec
xor
stc
inc
inc
ret
cld
arpl
adc
dec
and
or
push
dec
movs
xor
and
pop
inc
in
adc
add
dec
rol
and
aas
fisttp
inc
or
daa
in
neg
push
js
xchg
add
mov
inc
inc
jmp
push
inc
sbb
push
stc
pop
inc
and
add
pop
adc
clc
add
or
test
aas
or
jno
push
call
adc
movs
push
cmp
inc
movss
sub
pop
add
sbb
adc
fs
and
sub
pop
or
push
or
sbb
or
gs
add
adc
loopne
inc
push
adc
sub
cld
jmp
add
test
mov
bound
test
jnp
add
or
in
or
and
adc
or
sub
mov
inc
sbb
fdiv
les
or
mov
and
ret
cmp
mov
(bad)
and
ins
movs
adc
pop
xor
sub
sub
adc
ja
mov
mov
rcr
fcom
xor
lock
sub
pusha
mov
xchg
inc
push
pop
(bad)
cs
sub
lock
mov
sub
xor
icebp
fiadd
and
add
fld
call
push
pop
sbb
aaa
fs
arpl
push
hlt
lock
and
and
sbb
mov
test
xor
xor
rcl
das
mov
shl
add
test
aas
sbb
adc
hlt
adc
sub
bound
mov
jmp
add
int
xor
jecxz
cmp
push
or
sbb
xlat
mov
inc
lods
iret
pop
cld
mov
fwait
inc
xchg
inc
inc
xor
out
dec
inc
(bad)
or
daa
jo
add
xor
add
or
(bad)
dec
add
pushf
dec
ss
cwde
or
test
cdq
sub
xor
xor
xor
out
push
inc
ror
pop
xchg
jns
(bad)
cld
mov
inc
js
pop
mov
cs
rol
nop
fadd
sbb
ror
repnz
sar
jge
aaa
inc
inc
jns
add
jnp
mov
and
dec
add
cmovl
jg
mov
sbb
mov
pop
sbb
pop
leave
mov
mov
inc
and
(bad)
jo
jnp
icebp
(bad)
dec
fsubr
cmp
idiv
adc
sbb
or
test
call
inc
or
push
add
push
and
push
sbb
and
jl
inc
push
pusha
mov
mov
es
push
aam
sbb
jno
rol
rol
add
das
mov
bound
ss
inc
cmp
push
loop
push
cwde
nop
call
push
dec
push
(bad)
cmp
mov
mov
adc
add
sar
ds
add
(bad)
push
add
pusha
loop
test
adc
or
xor
add
adc
enter
shr
test
add
pop
enter
and
dec
add
add
or
add
pavgb
cli
nop
xchg
cmp
pop
iret
inc
dec
and
fsub
dec
add
sub
sysexit
or
pop
inc
cmp
(bad)
xor
sub
pop
mov
int3
test
aad
add
loope
and
rol
jl
sbb
int3
and
rcr
cmp
mov
add
adc
add
add
sub
sub
repnz
mov
aas
fiadd
and
in
movs
sbb
xadd
add
cwde
sub
or
inc
add
mov
mov
adc
inc
aam
inc
test
add
add
stc
add
add
add
add
xor
xor
add
inc
dec
sbb
mov
rol
mov
ret
xchg
inc
dec
pop
mov
xor
lods
add
push
or
add
push
jns
or
xor
and
pop
and
xchg
xor
mov
aas
add
and
xchg
and
xchg
push
in
int3
call
in
dec
cld
sub
add
cmp
add
loopne
and
inc
popa
add
iret
mov
mov
fisttp
cld
aaa
inc
sbb
push
jmp
fistp
cmps
fs
sbb
and
and
cmp
popa
das
popa
lahf
inc
pop
adc
inc
or
inc
xor
xor
mov
xchg
outs
cld
cmc
cmp
fisub
pop
jns
fcom
pop
lds
push
inc
mov
dec
ret
div
popa
xlat
mov
fisttp
fnstcw
push
push
inc
mov
add
cwde
cmp
and
sub
stc
std
pop
xor
(bad)
nop
sbb
pop
or
sbb
inc
or
rcl
icebp
test
sbb
push
xchg
cmp
mov
shl
pop
cs
movups
inc
mov
mov
jmp
jno
or
aas
sub
dec
add
mov
fsub
adc
dec
or
loopne
inc
or
cdq
inc
sub
xor
pop
xor
cld
jae
add
cmp
push
push
das
mov
sub
test
mov
sbb
sub
xor
clc
and
mov
mov
and
add
mov
add
ins
jo
or
add
pushf
pusha
inc
push
cmps
add
adc
(bad)
mov
or
div
(bad)
xor
or
cmp
add
dec
cmps
inc
arpl
or
cld
repz
or
add
adc
sti
std
xor
aas
cmp
test
push
mov
dec
xchg
and
cmp
push
mov
ins
aas
cld
std
adc
add
arpl
dec
mov
jo
sar
cmps
or
push
cmp
fiadd
adc
ret
lahf
ja
mov
ret
ret
or
or
addr16
sbb
xor
xor
dec
add
ror
ret
or
xor
ret
and
shl
or
or
inc
push
cmps
js
inc
das
adc
aam
or
ret
inc
inc
lock
adc
aas
cs
add
imul
add
mov
fs
inc
or
pop
jecxz
or
pop
add
add
aam
sub
xor
pusha
push
or
repz
add
sbb
jo
ret
aad
nop
and
jecxz
cld
jae
fld
xchg
sub
ss
sete
sar
movs
aas
(bad)
push
and
sar
mov
mov
aam
fdivrp
add
and
xadd
nop
ret
rcr
push
inc
and
push
leave
xchg
popa
sti
inc
stc
mov
inc
xor
bound
push
add
inc
test
(bad)
int3
pushf
add
(bad)
sbb
(bad)
jmp
or
enter
push
jns
adc
rol
rol
test
add
lock
adc
aas
call
and
sti
pop
pop
test
nop
repnz
add
nop
gs
rol
sub
adc
mov
push
js
add
push
push
mov
and
and
sbb
pop
pop
mov
add
sub
xor
or
or
inc
aam
bound
ret
out
(bad)
icebp
or
cmp
sbb
fwait
lahf
clc
and
adc
add
add
sbb
mov
rol
and
adc
cmp
ins
fsub
adc
or
and
mov
idiv
mov
pop
mov
push
inc
rol
add
pop
inc
pop
xor
add
sub
shr
cmp
or
add
inc
clc
(bad)
sbb
clc
nop
cmp
loope
mov
xor
sbb
add
repnz
add
add
lock
sbb
sbb
daa
pop
xor
adc
pop
pop
es
fadd
xor
add
repnz
int
add
add
jno
push
rol
call
aas
jo
add
or
pop
out
dec
mov
adc
adc
cmp
adc
cmp
or
adc
pop
or
add
call
or
or
xor
adc
sub
pop
int
inc
sub
jo
cmp
or
inc
add
mov
mov
popa
or
cmp
adc
mov
test
adc
call
or
mov
or
loop
sub
push
mov
xor
ror
fs
shl
pop
clc
ret
std
stos
pop
sar
add
and
add
add
add
add
xor
xor
add
inc
dec
sbb
mov
rol
mov
shl
jne
loopne
mov
mov
cmps
mov
pop
dec
and
outs
int3
popf
jg
sub
jb
mov
and
aam
jmp
cmp
mov
jge
shl
jg
bound
je
inc
push
sbb
inc
adc
add
or
shr
shl
ret
add
nop
adc
and
or
out
leave
adc
pop
pop
mov
and
xchg
push
dec
jmp
out
add
sbb
ins
cld
adc
inc
loopne
or
sbb
lock
pop
retf
mov
jp
adc
sbb
loopne
jecxz
add
mov
enter
(bad)
fld
adc
push
cwde
sbb
das
cmc
rcl
jl
inc
mov
ret
lahf
cs
clc
cld
jae
mov
cmp
mov
cwde
sub
test
xor
or
cwde
jl
or
push
pop
adc
enter
mov
xor
repz
cmc
and
sbb
cs
or
cmp
inc
adc
adc
and
sbb
sub
xchg
push
je
xor
lock
or
nop
sbb
lock
add
movups
arpl
and
mov
add
popa
aas
adc
add
pusha
mov
ud0
lock
xchg
push
push
dec
push
add
rol
sbb
enter
adc
rol
push
push
jns
and
or
cmp
adc
popa
repnz
lds
lock
cmp
pop
sub
rol
(bad)
jl
leave
lock
add
adc
ret
shl
add
inc
or
call
adc
xor
adc
mov
xor
or
sub
mov
inc
mov
pop
xor
test
pusha
add
add
fs
add
aas
sub
rcl
xchg
ror
gs
test
and
add
adc
add
pushf
add
jg
xor
adc
xor
pop
and
push
inc
push
mov
mov
aas
inc
and
dec
push
or
lock
enter
or
cwde
rol
in
in
fistp
movs
(bad)
inc
or
xchg
loopne
or
js
ret
jg
dec
xor
enter
sub
inc
bnd
mov
jl
xchg
inc
mov
add
fldenv
push
jnp
and
sar
rol
jo
or
or
mov
add
sahf
sbb
or
add
push
in
sub
adc
xor
ror
inc
ret
add
(bad)
movs
xor
xor
dec
stc
dec
xor
sahf
jp
or
or
outs
nop
aam
adc
aas
int
fmul
aas
sbb
rcl
cmp
xor
fs
mov
xor
xchg
jle
or
xchg
scas
cmp
mov
inc
loope
inc
mov
mov
movs
inc
arpl
out
icebp
inc
das
mov
sub
sbb
and
adc
inc
ror
enter
add
inc
mov
add
inc
adc
add
pop
lahf
aam
leave
inc
sbb
xor
out
out
add
push
repnz
cld
xor
pop
xor
icebp
cmp
add
and
or
push
or
cmp
pusha
pusha
mov
lods
(bad)
inc
nop
and
loopne
leave
bound
xor
sbb
push
sub
xchg
out
add
clc
xchg
xor
mov
call
addr16
add
sub
pop
clc
ret
adc
iret
pop
push
add
pusha
push
cmp
mov
add
ror
add
jno
add
pop
and
sbb
mov
xor
jecxz
retf
or
or
sbb
sbb
rol
add
or
add
xchg
pusha
push
add
loope
sbb
enter
arpl
jmp
and
mov
or
xchg
add
in
inc
jmp
or
sub
dec
push
adc
or
add
(bad)
in
or
xchg
inc
push
push
cmp
add
mov
or
or
je
or
push
movs
adc
cwde
inc
push
xor
push
loopne
cmp
mov
push
ror
add
jmp
add
inc
push
out
inc
mov
pop
jp
adc
sub
add
adc
pop
sbb
retf
add
cld
(bad)
add
ret
packssdw
add
inc
pop
push
adc
push
mov
add
and
push
add
or
pop
adc
cli
pop
sub
add
pusha
rcl
mov
push
pop
cmp
outs
ins
hlt
add
add
or
pop
jo
mov
inc
jl
add
rol
test
and
and
or
sbb
or
mov
movs
and
imul
push
pusha
hlt
pop
mov
stos
xlat
mov
add
and
add
add
add
add
xor
das
add
or
add
or
mov
rol
retf
xchg
and
hlt
aaa
inc
adc
fmul
icebp
pop
mov
sbb
mov
(bad)
stc
inc
mov
lahf
dec
pop
daa
arpl
in
movs
ror
daa
in
dec
inc
inc
cmps
dec
jg
adc
cwde
jne
pop
xchg
test
add
sub
pusha
adc
inc
pusha
rol
add
mov
add
js
mov
jnp
cmp
or
xor
and
popa
jno
les
jmp
and
mov
je
xchg
out
aas
jbe
xchg
(bad)
jmp
adc
mov
add
cmp
or
or
mov
mov
loop
pop
pextrw
cmp
jae
and
in
inc
mov
or
add
adc
xchg
push
inc
mov
mov
jae
lock
call
xchg
shr
or
les
lar
fsub
mov
das
(bad)
or
add
fmul
add
lock
(bad)
movs
ror
aas
(bad)
loopne
push
pop
dec
inc
pop
sbb
aas
mov
jno
jle
std
repz
cld
loope
sub
mov
sub
cld
xchg
xchg
or
orps
sbb
push
sbb
adc
fdivr
popa
sbb
add
jmp
or
add
sub
rol
xor
and
cwde
add
inc
push
or
or
retf
xchg
lock
fistp
inc
or
push
(bad)
sub
or
nop
inc
inc
or
or
enter
(bad)
cmp
sbb
cld
xchg
ret
fs
or
and
adc
pusha
mov
fdiv
iret
xor
adc
add
add
add
xor
push
or
rol
push
jmp
push
sbb
scas
or
lock
inc
push
and
ret
imul
rol
mov
or
movs
test
stos
(bad)
fdiv
popa
mov
add
popa
mov
rol
aaa
adc
dec
push
xor
test
and
inc
push
sar
mov
or
nop
xor
loope
add
jnp
xor
or
push
lock
pop
sahf
add
sub
shl
xchg
dec
(bad)
test
add
or
pop
daa
and
pop
imul
ret
js
inc
xor
add
mov
xor
add
test
push
mov
mov
xor
adc
inc
and
jecxz
xor
loop
pusha
repz
retf
add
mov
pushf
adc
dec
or
aaa
xchg
aaa
arpl
xor
dec
or
int
aaa
inc
aas
xor
jecxz
add
fs
adc
add
adc
ss
pop
inc
cs
fcomp
dec
xor
imul
ds
push
outs
mov
adc
lea
arpl
sti
out
test
dec
xor
inc
(bad)
daa
out
adc
xor
adc
inc
adc
xchg
cdq
das
repz
xor
or
cmc
cmp
popa
pop
cli
push
and
rep
add
inc
lods
popa
mov
sti
(bad)
jmp
add
and
repnz
jg
add
fmul
push
xor
sub
inc
pop
xor
sub
sbb
jnp
(bad)
(bad)
mov
dec
sbb
cmp
push
mov
sbb
loop
cwde
jae
xor
ret
pop
and
jmp
inc
jecxz
add
leave
and
cld
adc
clc
(bad)
sbb
mov
int
popa
mov
out
add
push
lahf
adc
adc
fadd
and
jo
jg
sbb
sbb
push
jb
inc
shl
xor
or
add
popf
loop
sbb
or
mov
add
and
dec
push
loop
cmp
les
dec
inc
sbb
xchg
sbb
(bad)
in
loopne
pop
sub
mov
mov
aas
jp
sbb
adc
mov
push
or
add
add
xor
sbb
xchg
jae
stos
test
add
mov
popf
call
xchg
or
add
pop
pmaxsw
mov
or
cld
or
mov
and
ret
add
bound
xor
rcr
jecxz
xchg
fadd
pop
pusha
add
fdivrp
inc
and
and
push
sub
or
or
adc
jo
push
mov
or
shl
test
test
and
sbb
sub
add
jecxz
or
inc
out
inc
or
and
pop
dec
xchg
or
rcl
test
fisttp
stos
xchg
mov
sbb
add
inc
add
retf
mov
or
and
add
add
add
add
xor
das
add
or
add
or
mov
rol
add
or
jp
test
mov
cld
out
xchg
sbb
adc
mov
cli
daa
lds
xchg
std
add
sbb
dec
xor
cli
lock
dec
adc
bswap
mov
xchg
pop
adc
int3
dec
or
cmp
clc
test
(bad)
hlt
xlat
and
test
pop
adc
ret
jmp
mov
rcl
jmp
cmp
or
adc
adc
mov
clc
xlat
inc
rcl
(bad)
fsub
pop
retf
mov
cmp
fwait
adc
js
repz
add
(bad)
adc
nop
and
sbb
jle
jp
lea
inc
cmp
cs
bound
es
inc
mov
or
aaa
jg
aaa
inc
mov
out
lea
push
dec
cmp
mov
sub
or
or
adc
mov
mov
inc
addr16
pushf
cmp
push
cmp
test
push
inc
xor
cld
out
or
sub
jg
and
inc
das
add
xchg
add
mov
shr
or
retf
mov
and
movs
movs
push
sub
push
enter
push
shl
and
inc
xor
icebp
lds
mov
dec
and
lock
mov
test
sbb
dec
push
inc
push
or
add
push
int3
xor
inc
ds
cmp
xor
or
mov
cmp
mov
sbb
inc
dec
or
ja
das
(bad)
and
ret
or
pop
les
dec
or
lock
das
in
or
in
add
dec
or
sbb
inc
pop
adc
or
(bad)
aas
inc
mov
nop
lock
adc
cmps
and
sub
repnz
push
pop
adc
fs
repz
aas
mov
push
inc
pop
cld
xor
pop
bound
or
enter
ret
cvttps2pi
xor
sbb
inc
mov
pop
jo
and
fwait
(bad)
jmp
or
and
adc
popa
sbb
or
xchg
ret
adc
adc
dec
or
mov
add
cmp
add
or
jo
xor
movs
cli
xchg
or
rol
add
cmp
ret
add
call
sub
inc
or
nop
add
adc
mov
dec
or
adc
add
je
int3
inc
std
fdiv
dec
add
or
inc
adc
inc
add
xor
or
or
loope
aas
and
adc
repz
and
in
inc
or
ror
aas
out
sub
pop
adc
repz
or
repz
popa
and
cs
js
inc
xlat
push
outs
jecxz
sbb
dec
and
and
scas
inc
nop
push
add
or
mov
xor
int
aam
repz
xor
xchg
lock
or
or
or
mov
call
cs
xor
sbb
push
xor
add
cli
inc
rol
jp
rcr
inc
mov
mov
mov
jle
adc
xlat
xchg
inc
adc
cmp
lds
sbb
rol
add
jl
add
rol
push
xor
ror
jnp
rcl
clc
clc
cmp
or
aam
or
dec
into
add
pop
repz
add
dec
das
mov
adc
push
push
and
add
adc
out
dec
and
xor
sbb
lock
sbb
xor
add
and
mov
jg
add
xor
and
sbb
and
add
push
or
add
add
cmp
add
or
add
bound
dec
js
repz
or
sbb
enter
add
dec
rcl
aas
sub
sbb
add
enter
add
add
test
(bad)
push
mov
push
mov
adc
mov
jo
mov
jp
add
adc
sbb
cld
arpl
retf
and
add
in
add
sbb
mov
rol
xor
push
xor
test
js
push
addr16
(bad)
xor
xchg
dec
push
ret
fadd
clc
ins
pusha
add
xchg
jo
sbb
mov
push
je
and
add
fld
jge
loopne
sub
mov
sbb
cld
xchg
mov
(bad)
cwde
in
pop
add
mov
jg
add
add
lods
ret
pusha
es
mov
arpl
xor
push
clc
xor
add
add
sub
jge
and
and
add
push
pop
or
ins
int3
add
push
rcl
cmp
lock
cmp
and
push
mov
push
cmovs
cmp
xchg
add
int3
loopne
mov
icebp
push
adc
enter
rol
push
js
and
nop
je
loope
cs
add
dec
push
or
cld
jecxz
inc
int
adc
xchg
inc
loop
sbb
add
add
and
mov
pop
cmp
lds
enter
add
and
add
add
add
add
xor
das
add
or
add
or
mov
rol
mov
ret
xchg
test
or
lahf
cmp
popa
ror
and
cmp
out
test
push
movs
movs
retf
adc
xchg
mov
in
test
or
xchg
mov
add
jmp
push
cmp
sub
cmovnp
push
data16
ins
cli
(bad)
jmp
cmp
xor
dec
rol
mov
loop
adc
pop
xchg
push
cwde
xor
push
cwde
pop
das
ins
rol
fs
cmp
add
lock
dec
push
add
dec
(bad)
jg
mov
dec
inc
add
mov
pop
jo
icebp
bound
in
jo
rol
dec
and
add
inc
add
cld
adc
inc
(bad)
loop
sbb
add
mov
jbe
sub
adc
adc
pusha
cmp
cwde
ret
arpl
nop
inc
call
dec
sbb
sbb
popa
idiv
jnp
loopne
jmp
and
das
xchg
std
xchg
jmp
xor
add
and
sub
push
mov
add
mov
shr
sbb
add
test
inc
loope
test
sbb
add
dec
and
inc
push
sbb
lea
int
and
xor
inc
sub
add
sbb
(bad)
pop
icebp
ret
mov
(bad)
sub
nop
pusha
inc
fs
xor
or
xor
dec
xchg
and
pusha
(bad)
pop
pushf
jo
add
pop
std
or
les
or
adc
iret
and
aas
or
add
or
add
cmp
ret
add
xor
mov
inc
mov
mov
inc
inc
adc
dec
pop
sbb
imul
subps
lock
add
(bad)
aas
into
sub
pop
icebp
(bad)
aas
add
shl
cld
jmp
daa
std
add
push
sbb
jmp
adc
and
add
test
or
hlt
loop
inc
leave
inc
repz
pusha
test
xchg
fdiv
adc
inc
push
push
add
scas
loopne
rcr
jl
push
ss
xchg
inc
jns
add
jae
rol
(bad)
xor
mov
xchg
adc
fcom
popa
lds
and
lods
aas
cmp
add
pop
push
nop
mov
inc
or
cmps
sub
cdq
cmps
rol
aas
push
mov
pop
add
cmp
push
sbb
adc
or
hlt
adc
push
(bad)
mov
jo
ins
add
or
pop
mov
adc
adc
xor
fs
and
mov
cmps
test
(bad)
mov
pushf
cmp
inc
neg
or
mov
add
xchg
xor
push
loopne
push
or
or
cld
push
or
aas
ins
retf
inc
test
inc
hlt
loopne
cmps
dec
pop
and
aam
push
nop
or
mov
xchg
add
or
mov
out
mov
daa
ret
or
rol
xor
inc
ror
add
adc
inc
jg
jnp
inc
and
ret
retf
ds
retf
pcmpgtb
add
inc
mov
xor
inc
inc
mov
add
retf
std
pop
or
adc
inc
das
or
ret
leave
push
mov
test
sbb
shr
inc
xor
mov
test
aad
add
sub
test
pushf
inc
in
cmps
cmp
mov
push
(bad)
test
xor
mov
daa
sbb
push
in
push
add
ret
add
mov
scas
ins
pusha
xor
mov
adc
loopne
leave
mov
(bad)
dec
sbb
test
ret
lahf
and
das
leave
nop
sbb
rcl
test
fsubr
cmp
add
test
cld
jecxz
cmp
add
mov
jecxz
mov
and
lock
shl
or
or
push
push
xor
push
xor
inc
dec
mov
(bad)
enter
nop/reserved
test
xchg
mov
add
xor
inc
pop
mov
xor
push
mov
(bad)
cmp
inc
ds
sbb
add
aaa
push
pusha
test
nop
pusha
add
mov
dec
mov
ret
push
add
adc
sub
(bad)
mov
sbb
stos
push
xchg
and
loope
xchg
shl
mov
dec
fadd
push
add
pop
idiv
inc
add
mov
cdq
jmp
movs
dec
sub
adc
or
(bad)
xor
out
rcr
sbb
shl
add
pop
retf
pusha
push
sbb
inc
(bad)
jae
dec
js
or
add
pop
outs
add
mov
(bad)
and
xor
push
call
adc
inc
test
sbb
call
add
jo
ins
adc
(bad)
das
push
cmp
imul
push
js
add
adc
das
jp
nop
jno
mov
adc
jo
xor
and
dec
pusha
jmp
add
rol
push
lock
stos
pop
inc
add
add
jno
adc
std
lock
sub
add
and
add
add
add
add
xor
das
add
or
add
or
mov
rol
mov
ret
xchg
inc
leave
add
cmc
bound
pop
mov
push
xor
and
sbb
pop
adc
push
pop
xor
inc
(bad)
(bad)
mov
cli
in
daa
nop
call
cmc
nop
mov
sbb
mov
and
and
hlt
xchg
test
aas
add
pop
inc
mov
gs
mov
std
pop
cli
daa
and
or
add
add
inc
jnp
push
mov
pop
adc
and
mov
cmps
inc
xchg
jg
and
and
loope
mov
addr16
cmp
(bad)
hlt
add
int3
daa
rol
out
popf
and
stos
inc
cwde
push
push
or
cmp
inc
cwde
xchg
mov
(bad)
sub
inc
pusha
cmp
sub
jmp
in
aas
push
(bad)
jp
jmp
stc
les
jo
xor
push
inc
xchg
inc
add
pop
test
loop
or
inc
mov
sbb
call
shl
rcr
adc
nop
jne
sub
add
inc
adc
lea
adc
add
mov
dec
adc
aas
cmc
fld
jbe
icebp
inc
add
sbb
and
adc
or
in
adc
sbb
and
xor
push
pop
adc
mov
adc
inc
push
popa
in
dec
or
in
ret
lock
adc
rol
jmp
inc
inc
pop
sbb
cld
mov
and
add
sbb
loopne
sub
call
fadd
nop
mov
cmp
std
xor
rol
shl
cs
aas
pop
xchg
(bad)
cmp
or
mov
add
lahf
into
clc
ret
cld
xor
add
add
test
xchg
xchg
nop
or
int3
lock
add
ins
sub
adc
mov
into
inc
add
inc
pause
pop
or
or
add
add
xor
(bad)
jge
mov
pop
add
add
sub
mov
adc
xor
aad
adc
leave
inc
and
repz
xor
adc
ror
cld
adc
inc
or
xor
adc
in
or
pop
cmp
xor
or
cld
push
inc
or
xor
pop
jb
add
add
adc
inc
jo
or
pusha
sub
das
cld
jae
pop
mov
fmul
and
adc
xor
repz
inc
dec
push
outs
add
sbb
and
inc
and
pop
sub
aam
sub
ficom
jmp
inc
jecxz
and
lock
(bad)
mov
xor
fs
inc
sub
fidiv
adc
xchg
ret
adc
int
int
dec
push
or
test
ror
aas
nop
retf
adc
xor
push
xchg
dec
sti
inc
pop
jo
push
out
add
jl
or
adc
add
jp
sbb
sub
jmp
nop
pusha
(bad)
loope
xchg
icebp
iret
xor
or
(bad)
or
and
nop
xor
rol
fs
nop
stos
stos
ret
aas
ss
jo
push
or
in
out
add
xchg
mov
adc
and
rol
add
pusha
sbb
inc
dec
or
test
js
stc
add
xor
add
lods
aaa
adc
and
xor
add
into
loopne
or
add
push
adc
ins
pushf
in
pop
stos
ret
jecxz
cs
or
xchg
call
and
(bad)
mov
rdmsr
add
xor
or
clc
add
add
inc
lea
add
sbb
add
inc
push
retf
or
or
inc
push
add
mov
sub
lea
add
mov
xchg
lods
and
and
cmp
sbb
test
and
sbb
outs
jns
add
cld
jecxz
(bad)
lock
add
movs
push
ret
rol
add
popa
sbb
add
shl
mov
call
les
and
push
push
call
(bad)
add
sbb
(bad)
cs
lock
repz
ret
add
fadd
or
rol
pop
add
jb
inc
cld
jecxz
inc
loopne
ret
and
sub
and
jmp
and
mov
cli
test
arpl
inc
lds
loop
jle
rcl
push
sbb
pusha
loopne
xor
arpl
rol
jl
mov
loop
fiadd
test
xchg
xor
cmp
shl
mov
jmp
adc
clc
xchg
xor
(bad)
push
les
xor
mov
dec
add
cmp
pop
pop
loope
data16
and
jo
call
add
sub
add
add
add
add
or
add
or
mov
rol
mov
sar
cmp
ror
mov
add
lds
sbb
data16
push
pop
or
push
add
mov
sub
inc
push
dec
xchg
pop
(bad)
sub
inc
and
outs
pop
in
test
pusha
sub
test
mov
scas
xchg
sub
mov
mov
sbb
lock
or
icebp
outs
xchg
adc
push
lock
rcl
mov
rcr
in
pop
xchg
cld
retf
rep
(bad)
mov
push
xor
pop
das
retf
and
std
mov
or
sub
lock
or
sbb
adc
ret
pop
xchg
es
repnz
sbb
lahf
or
dec
xor
mov
jg
out
std
and
xchg
lock
mov
sbb
out
sbb
stc
xchg
iret
inc
or
push
pop
push
push
dec
call
(bad)
sti
push
lds
cmp
xor
mov
clc
hlt
xor
pop
mov
(bad)
pushf
cli
daa
enter
jecxz
jae
jp
sbb
add
add
inc
push
inc
or
inc
and
inc
adc
xchg
adc
dec
and
inc
adc
add
xchg
shl
or
and
push
add
xchg
inc
or
pusha
xor
fsub
adc
mov
push
cmc
pop
dec
xor
cmc
xchg
sar
sub
leave
sbb
int3
icebp
(bad)
sbb
cld
jecxz
aas
xor
add
aas
add
add
retf
aas
pop
mov
sbb
add
popa
or
ret
pusha
rol
add
fsub
and
or
dec
and
cmp
push
repz
or
loopne
add
push
add
rol
jo
ror
add
rol
push
dec
sub
std
add
aas
inc
sbb
pop
xchg
add
jecxz
or
dec
mov
or
add
in
or
popa
inc
adc
lods
pop
adc
test
dec
and
ror
inc
adc
mov
mov
push
push
call
stc
leave
add
or
js
mov
inc
sbb
add
jns
add
ds
pop
pminub
mov
inc
inc
add
push
inc
lock
(bad)
ins
and
ja
imul
lock
cmps
or
push
or
out
(bad)
fadd
add
mov
add
and
pushf
add
sbb
mov
rol
add
pop
mov
std
movups
ret
sbb
xor
dec
cmp
jecxz
add
inc
and
inc
or
enter
mov
or
adc
or
push
and
add
push
(bad)
dec
inc
inc
aam
pop
and
fadd
pusha
and
dec
xor
cld
arpl
add
add
call
xor
inc
sbb
sub
dec
rcr
xor
fcom
leave
xchg
mov
inc
and
inc
cmp
add
push
xor
mov
dec
nop
xor
sub
leave
sbb
xchg
or
enter
fcomp
ins
and
mov
lods
add
int3
pop
sbb
(bad)
cmp
loopne
mov
arpl
xchg
pop
inc
inc
cs
and
(bad)
xlat
rcl
push
jns
int
jecxz
push
adc
xor
loopne
xor
test
jo
pusha
lahf
and
bnd
sub
jecxz
add
add
fidiv
add
sbb
pop
adc
jo
fistp
push
clc
cmpxchg
cmovle
add
sub
or
push
inc
shl
sti
add
inc
add
adc
pop
shr
pop
or
sbb
jae
xor
sbb
add
pop
je
push
dec
je
aas
cld
adc
jo
cmp
and
cmp
adc
adc
or
add
or
xor
xchg
add
(bad)
mov
sbb
or
xor
sub
pop
and
or
pushf
sub
div
(bad)
dec
in
push
or
xor
cmp
call
pusha
pop
xor
add
rol
or
rol
push
retf
movs
add
cdq
rcr
adc
jmp
ret
bound
mov
sbb
idiv
xchg
popa
test
loopne
movs
fadd
sub
(bad)
pop
mov
or
mov
rcr
and
add
in
je
mov
cmp
cmp
mov
and
(bad)
jp
push
(bad)
icebp
mov
xchg
mov
jg
add
jo
jp
lock
xchg
and
sbb
adc
add
adc
or
push
add
xchg
and
mov
movsx
inc
dec
sbb
mov
rol
adc
or
popf
bound
mov
and
maxps
test
mov
add
stc
add
add
add
add
xor
add
or
add
or
mov
rol
inc
sbb
xchg
and
hlt
xchg
inc
nop
and
cmp
enter
xor
(bad)
fsubr
mov
or
sti
ja
les
adc
hlt
std
xor
sahf
les
jo
int3
leave
jae
into
cmp
lea
cmp
jg
fiadd
das
inc
mov
sbb
lods
test
rcl
add
add
xchg
lock
pop
adc
inc
sbb
js
dec
inc
xor
les
adc
jns
and
add
sub
loopne
mov
push
adc
ret
or
jne
mov
and
(bad)
mov
sub
inc
pusha
add
adc
mov
mov
mov
movs
jnp
dec
cld
push
lock
repnz
or
inc
cmp
sub
mov
adc
mov
les
(bad)
dec
fs
out
in
adc
inc
xor
mov
sub
add
cmp
add
in
int3
mov
adc
xor
stc
jae
cmp
popa
cwde
and
adc
pushf
adc
adc
or
adc
aas
and
jecxz
aas
xor
add
lock
int3
dec
add
xchg
movs
adc
xor
ss
push
jecxz
add
cld
mov
mov
repz
ja
test
lock
or
loope
or
or
ret
sub
or
jge
adc
or
cmp
mov
inc
xchg
xor
ja
dec
repz
xor
neg
ret
pushf
repnz
adc
adc
mov
add
inc
rol
add
int3
sub
pop
mov
or
or
xor
adc
or
jmp
pop
js
add
call
(bad)
cld
push
or
cs
or
xchg
sbb
or
and
cmp
aas
or
iret
and
cli
add
inc
xor
push
or
add
inc
cmp
aaa
mov
push
leave
aas
test
pusha
mov
or
mov
mov
aam
nop
or
mov
xchg
test
popa
add
adc
shr
ds
cmp
sub
les
jno
lock
inc
pop
das
or
adc
cmp
adc
vmovq
adc
add
unpcklps
das
or
(bad)
push
or
dec
add
test
or
xor
inc
jb
mov
xor
inc
loopne
aas
push
xchg
dec
sbb
aam
and
mov
add
lahf
push
adc
or
xor
and
nop
inc
add
dec
xor
inc
not
push
jecxz
adc
fld
inc
mov
sub
ror
xchg
or
inc
int
cmp
jmp
push
fild
or
(bad)
push
cs
fsubr
xchg
push
xor
adc
add
push
jmp
ins
jle
inc
sbb
jno
or
loop
aas
retf
or
iret
push
xor
adc
int3
inc
rcl
nop
out
add
cmp
and
or
jmp
inc
(bad)
daa
inc
bound
adc
aas
ror
aas
scas
fs
and
nop
lock
inc
add
enter
mov
pusha
mov
jb
dec
push
dec
loopne
std
adc
fcomp
test
mov
mov
rcl
inc
jge
pusha
xor
add
(bad)
enter
push
shl
loopne
ret
pop
stos
inc
pushf
jg
popa
jp
loopne
and
or
int3
mov
pop
inc
adc
adc
pop
movs
cmp
dec
add
mov
shl
and
pop
addr16
jmp
cmp
push
add
or
push
jo
daa
sbb
mov
ss
push
cmp
or
mov
lea
mov
push
push
rol
and
mov
add
inc
sbb
add
push
ins
and
and
nop
sub
arpl
test
cmp
pop
xor
add
inc
add
loopne
or
sbb
and
rol
and
inc
jo
cmp
or
add
mov
mov
add
push
cmp
add
cmp
push
dec
xor
pop
sbb
test
and
dec
ret
loope
aas
clc
loope
dec
stc
inc
add
cld
mov
and
mov
sub
add
add
cs
jno
jae
rcr
jo
xor
jl
push
repz
test
ficom
and
lods
adc
lock
and
lea
hlt
mov
cmp
aas
adc
or
inc
push
or
add
adc
fisttp
or
and
dec
jo
dec
ds
int
dec
in
or
dec
out
inc
add
xor
mov
add
dec
loopne
add
ret
cmp
xchg
add
cmp
push
sbb
add
dec
add
pop
add
add
popa
xor
sbb
pusha
add
out
add
ins
je
add
pop
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
in
repz
(bad)
out
sub
leave
cmc
(bad)
test
std
pop
retf
icebp
inc
retf
mov
aad
in
add
retf
leave
retf
adc
jecxz
mov
cmp
hlt
pop
movs
(bad)
aaa
mov
cmps
retf
fiadd
bound
jecxz
add
(bad)
fucomp
fdiv
cld
cmps
fldcw
jb
repz
in
sti
add
or
cdq
aam
dec
pushf
ret
cli
adc
mov
mov
shl
cld
test
jb
sbb
push
sar
or
add
mov
in
add
add
xor
add
cmp
xchg
stos
in
test
cmc
mov
cli
mov
(bad)
hlt
cmc
mov
cmc
push
fwait
mov
retf
out
mov
in
xchg
jmp
repz
mov
cmp
sub
out
repz
jmp
fadd
push
xchg
mov
stc
xchg
in
jnp
call
stc
mov
loop
(bad)
out
push
leave
lock
hlt
(bad)
call
sahf
shr
(bad)
div
test
in
push
mov
(bad)
in
mov
fiadd
cdq
xlat
daa
sub
retf
mov
cld
imul
lods
aad
jmp
imul
mov
hlt
jnp
cli
add
dec
movs
int3
cdq
int
or
mov
pushf
in
sar
push
cmc
hlt
xchg
rcl
jge
movs
in
adc
inc
fdivr
movs
jmp
xchg
xchg
mov
call
shr
fwait
(bad)
aad
(bad)
(bad)
(bad)
stc
sub
or
and
push
lods
rol
outs
cmps
cld
cli
cmc
fwait
in
push
xchg
or
in
stc
clc
mov
in
lods
loopne
(bad)
(bad)
neg
cmp
mov
lock
mov
imul
repnz
xchg
mov
dec
sar
jmp
ret
jne
idiv
cli
stc
xchg
loopne
lods
rcr
bound
scas
into
jae
lock
clc
add
movs
(bad)
loopne
add
stc
std
cli
or
or
push
div
scas
popa
(bad)
or
pop
sahf
mov
xchg
scas
int3
fneni(8087
lahf
leave
xlat
sbb
mov
push
nop
clc
sti
cld
jo
clc
push
ret
nop
cmps
cs
scas
ficomp
out
call
xor
sbb
out
lea
lock
aas
(bad)
mov
outs
mov
(bad)
std
std
(bad)
(bad)
std
(bad)
std
(bad)
std
(bad)
std
std
(bad)
std
std
std
push
jo
and
fwait
rcr
(bad)
movs
call
sub
jo
iret
movzx
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
outs
pusha
inc
xchg
adc
lds
mov
mov
les
movs
xor
mov
cmovbe
aaa
shl
mov
push
push
mov
sbb
jne
lds
imul
repnz
call
nop
daa
push
push
add
jnp
jno
mov
cmp
enter
push
ins
xchg
xchg
movs
add
push
movs
enter
adc
push
ret
jp
sub
pop
sub
popa
enter
sbb
mov
out
ins
xchg
xor
stc
mov
inc
das
sbb
push
inc
inc
add
adc
jle
push
jle
inc
or
loopne
arpl
xor
xchg
sub
ins
inc
retf
pop
into
push
lods
test
mov
test
outs
fnstsw
mov
sbb
inc
fwait
add
repnz
sub
pop
dec
in
mov
add
sbb
xchg
lock
push
popf
in
pop
cmp
rol
sbb
dec
and
retf
js
adc
or
cwde
inc
push
imul
xchg
or
fucom
adc
test
xor
sub
sahf
push
sbb
sbb
rol
shl
or
push
test
ret
inc
sbb
inc
stos
add
inc
push
xor
adc
or
and
mov
sub
shl
push
sub
or
sub
inc
push
xchg
adc
pop
sub
out
out
or
inc
ror
lods
in
add
push
xor
sub
das
cmp
mov
loopne
push
or
add
sbb
sbb
add
xor
jno
inc
sbb
int
cmp
pusha
mov
cmps
or
and
in
pusha
push
dec
or
sbb
mov
sbb
cmp
pop
pusha
xor
inc
or
clc
loopne
sbb
mov
push
add
ret
adc
es
and
sub
dec
adc
push
xor
jecxz
call
mov
sbb
jb
or
nop
pop
scas
inc
or
inc
add
cmps
stos
out
mov
mov
and
and
ret
fwait
scas
xor
push
adc
push
iret
push
fmul
mov
jo
icebp
ret
loopne
mov
ds
rcl
cmp
pushf
xchg
push
mov
enter
and
adc
sbb
daa
push
cwde
adc
xor
retf
jae
pop
mov
add
cmp
or
and
and
cs
add
adc
retf
cmp
inc
or
cmp
jge
or
mov
test
or
pop
cli
sub
dec
fimul
inc
add
hlt
fcom
nop
ret
int3
and
add
xor
and
or
icebp
leave
push
xlat
ins
sbb
nop
and
add
xor
ins
arpl
add
and
fs
out
mov
adc
mov
or
push
push
test
dec
fsub
ret
arpl
repz
fsubr
sbb
add
rol
push
shr
add
imul
xor
push
lods
fcom
pop
or
jnp
cld
les
pop
movs
mov
mov
mov
add
add
popa
call
pusha
xchg
jno
sbb
add
adc
das
enter
inc
adc
push
(bad)
or
jo
ja
ror
push
inc
and
adc
xor
rcl
add
stos
ds
push
call
(bad)
cmp
push
lods
sbb
ds
and
enter
and
add
pusha
sbb
loope
cmps
mov
test
(bad)
and
sbb
add
cmp
or
and
push
or
imul
xchg
add
pop
bound
adc
loop
dec
sub
sub
ret
push
and
xor
inc
retf
and
cmp
sub
ja
(bad)
adc
pop
pop
add
adc
add
and
add
or
inc
sub
add
add
or
add
or
mov
inc
js
adc
pop
enter
xchg
add
dec
cwde
and
xor
hlt
movs
ret
adc
sbb
push
gs
mov
mov
(bad)
push
sbb
rcl
adc
and
ret
or
shl
mov
ss
rcr
ficomp
add
xor
inc
ja
ins
ins
shl
cmp
inc
and
dec
mov
xchg
push
sbb
mov
ret
movs
ins
push
sbb
out
ret
cmp
test
aas
push
inc
adc
aam
inc
mov
push
pop
mov
loopne
sbb
pop
xchg
dec
pop
popa
mov
shl
jecxz
mov
sub
add
xchg
rol
loope
xchg
inc
mov
mov
add
inc
sub
popf
pusha
mov
retf
xor
xchg
das
cmc
cvttps2pi
xor
mov
(bad)
inc
add
sub
mov
adc
push
shr
adc
xor
out
test
mov
adc
loope
cwde
adc
xor
inc
dec
add
cmps
inc
push
push
or
add
push
push
xor
mov
add
and
and
jne
mov
or
sbb
push
sbb
xchg
push
jo
xchg
pusha
jnp
add
adc
fs
or
xor
jle
adc
out
push
mov
or
sbb
dec
or
in
lea
jae
xchg
bound
je
add
sub
je
ror
jns
push
sbb
ret
or
push
add
arpl
or
in
add
jne
inc
cmp
ins
mov
daa
cmp
rol
mov
fmul
push
outs
sbb
mov
mov
xchg
(bad)
push
inc
clc
jae
dec
inc
test
ret
sbb
arpl
push
(bad)
out
int3
sbb
loopne
sub
add
and
sub
(bad)
rcr
add
push
push
add
xor
and
mov
shr
sbb
and
sub
scas
mov
or
pushf
adc
add
imul
nop
mov
mov
mov
add
sti
enter
or
lods
outs
les
and
daa
sti
in
scas
cmp
movs
dec
add
ret
push
xchg
add
push
or
inc
push
or
movs
xchg
adc
or
shl
lds
ins
mov
or
rol
adc
or
int3
or
lock
pop
or
push
add
sbb
mov
shl
cmp
dec
jecxz
sbb
push
int3
sub
cmp
xor
stos
sbb
adc
ds
or
sbb
push
add
call
xor
xor
push
and
and
cwde
mov
adc
test
sbb
(bad)
mov
call
add
clc
add
dec
jo
cmp
outs
sub
pop
je
jno
lock
cmovle
add
out
repz
retf
inc
pop
sbb
cmp
and
in
jae
mov
icebp
xor
or
push
pop
(bad)
std
popf
mov
shl
mov
sbb
call
mov
xor
sub
add
ja
inc
sbb
adc
pop
cwde
inc
cmp
sbb
popa
push
xchg
sub
test
add
inc
mov
loopne
and
sbb
pop
sbb
lock
inc
pusha
ret
or
inc
push
inc
fadd
and
mov
dec
test
mov
add
ins
fadd
shr
push
mov
mov
sbb
xor
sub
sbb
or
push
xor
das
test
and
pusha
(bad)
ds
mov
ds
pop
sub
and
and
out
inc
adc
ror
sbb
adc
and
(bad)
mov
or
xchg
rcl
and
push
pushf
ror
push
pop
fbld
loope
inc
add
adc
add
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
push
inc
pushf
cmp
sahf
add
popf
or
xor
mov
test
loope
mov
rcl
cmps
ret
scas
pop
fld
lahf
push
ss
sub
ins
sbb
add
xchg
mov
sub
loopne
ja
push
inc
push
mov
cs
xor
adc
mov
add
dec
inc
cmp
cmp
sub
pop
push
sub
push
sbb
nop
adc
sbb
pop
(bad)
mov
cmps
adc
adc
jle
div
push
retf
mov
nop
out
ret
adc
add
dec
mov
outs
push
retf
adc
rol
test
shl
xchg
sub
and
or
ds
sub
mov
and
dec
mov
inc
(bad)
sbb
add
scas
or
clc
fs
mov
clc
pop
adc
cmps
clc
stc
or
rol
pop
adc
inc
or
jbe
adc
mov
fwait
and
sbb
rol
pop
xor
hlt
inc
rol
inc
jne
ret
rol
lock
mov
pop
mul
mov
fwait
clc
jno
imul
ss
bound
xor
inc
push
mov
jg
arpl
les
sub
fld
xor
sbb
fs
les
clc
loope
mov
cdq
(bad)
retf
ds
or
ror
(bad)
adc
push
shr
call
push
push
push
mov
leave
shl
cwde
mov
loop
mov
cmp
addr16
or
lahf
jl
inc
add
cli
jmp
(bad)
ins
lock
inc
dec
dec
adc
or
fcom
xchg
imul
dec
add
push
mov
push
js
iret
cmp
xchg
xchg
or
(bad)
mov
adc
push
xor
ins
mov
nop
inc
inc
mov
mov
mov
or
xor
fld
mov
cli
adc
add
enter
cmc
xor
add
mov
dec
rol
xor
jno
sub
mov
jb
mov
je
xor
or
inc
sub
pop
xchg
ror
inc
es
or
xor
or
dec
retf
add
add
sbb
aas
popa
mov
add
jmp
xor
std
enter
add
mov
push
cmp
inc
sbb
mov
cs
dec
add
cli
les
ret
daa
rcl
mov
inc
or
or
(bad)
int3
adc
or
xor
and
mov
es
shl
les
imul
adc
imul
xor
rcr
dec
xor
aad
sub
lock
pop
mov
dec
or
cmp
leave
rcl
mov
add
jo
lock
hlt
or
or
out
cmp
outs
mov
popa
inc
sbb
jmp
dec
sbb
jl
push
test
xor
mov
push
xor
or
jl
(bad)
or
adc
mov
neg
or
rol
mov
(bad)
inc
lock
sbb
adc
or
mov
mov
sbb
imul
or
pusha
inc
or
adc
pop
mov
rol
and
mov
add
rcl
adc
(bad)
div
ss
dec
stos
mov
sbb
je
or
add
les
ins
pop
inc
or
sub
adc
mov
lock
or
js
or
sbb
pop
push
mov
push
call
ret
ss
mov
jge
loopne
sti
rol
div
add
push
fwait
adc
or
pop
pop
and
inc
jns
mov
inc
add
and
add
or
inc
sub
add
add
or
add
or
mov
rol
push
and
xchg
adc
pushf
ins
iret
xor
es
add
ret
sbb
fcomp
jb
mov
pop
loop
and
ja
xchg
cwde
sbb
inc
cs
jp
dec
or
pop
pusha
inc
rol
(bad)
push
mov
mov
jmp
mov
inc
ja
std
mov
and
or
inc
mov
pop
jg
inc
inc
mov
mov
pop
add
mov
sub
add
inc
pusha
push
inc
xchg
mov
adc
add
and
add
xchg
cmp
lahf
dec
das
push
jge
inc
and
xor
sub
and
push
push
add
pop
mov
push
mov
sub
xchg
xchg
sub
add
pushf
loope
jns
push
push
cmp
add
sbb
mov
adc
sbb
shl
clc
in
mov
ss
push
add
push
shr
and
push
inc
jge
sub
push
cli
adc
xor
pusha
cmp
inc
or
and
add
mov
rol
pop
shl
or
push
loope
and
pop
ret
lods
adc
daa
cmp
rol
retf
push
sub
rol
push
cmp
mov
inc
ss
in
and
or
xor
sbb
dec
pop
js
mov
je
push
or
pop
gs
mov
or
lock
sub
retf
cli
inc
xchg
xchg
inc
add
and
call
call
in
rol
sbb
rol
or
ret
and
cmp
lock
push
outs
cmp
dec
add
cmp
add
pusha
ret
sbb
aam
xchg
mov
adc
sbb
add
inc
cmp
(bad)
adc
mov
mov
add
push
dec
pusha
xchg
adc
xchg
add
or
sti
ins
mov
sbb
inc
adc
daa
dec
pop
push
dec
mov
enter
xor
jmp
add
sub
mov
adc
add
inc
add
xchg
pusha
jno
or
sub
and
adc
or
adc
jno
jb
xor
mov
jecxz
sub
pop
dec
leave
movs
rol
rol
cmp
sbb
cmp
rol
inc
adc
xor
adc
nop
xchg
jmp
xor
clc
sub
lea
shr
or
adc
add
loopne
mov
lahf
jl
prefetch
xchg
jb
sub
inc
into
inc
ret
add
add
push
push
inc
cmp
ins
inc
(bad)
rol
leave
es
pusha
jo
fisub
pop
jecxz
and
mov
(bad)
lahf
or
ds
pusha
push
(bad)
pusha
xor
nop
xor
and
stc
stc
lahf
add
add
mov
pusha
push
sar
pop
sbb
lea
dec
lods
jmp
(bad)
ret
add
push
xchg
xor
daa
sbb
xchg
pop
enter
loopne
or
xchg
ss
nop
mov
icebp
(bad)
xlat
dec
out
jo
icebp
mov
scas
hlt
xchg
dec
cli
xlat
pop
nop
jge
adc
rol
adc
test
test
add
push
pop
adc
adc
or
sbb
inc
mov
and
test
aam
cmp
fsubr
fsub
push
int3
in
scas
jb
adc
xchg
push
ret
mov
pop
pushf
sahf
add
loopne
push
pop
ror
cs
dec
daa
int3
shl
ror
adc
fcom
adc
ss
add
ror
jbe
test
mov
add
cmp
or
cmp
add
mov
sub
or
sbb
mov
inc
sbb
fadd
cmps
push
inc
and
adc
cmp
adc
dec
pop
add
dec
push
sub
add
dec
and
or
mov
rcl
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
dec
mov
dec
xchg
sub
or
lds
xor
fwait
and
adc
or
dec
fisttp
jecxz
mov
(bad)
adc
dec
jno
mov
xchg
pusha
shl
mov
xor
mov
xor
cdq
repz
and
lds
sbb
arpl
sub
add
pop
loop
pusha
inc
xlat
add
sbb
imul
inc
xor
xchg
adc
cmp
sub
movs
add
push
and
mov
movs
pop
mov
(bad)
rol
mul
cmps
adc
adc
adc
ret
or
push
or
sbb
outs
lods
jecxz
inc
add
adc
or
cmp
jmp
push
movs
inc
jae
ror
xchg
fisttp
shl
lock
sbb
add
mov
add
add
add
jns
in
or
lods
lock
shl
ins
rol
or
xor
mov
out
dec
nop
sub
push
or
sbb
add
iret
sub
hlt
shl
push
dec
mov
mov
mov
sub
mov
mov
pop
xchg
xchg
add
lock
xchg
add
rol
fwait
push
pop
mov
or
je
and
push
call
nop
loope
pop
inc
fdiv
jecxz
push
or
mov
push
add
adc
adc
add
sbb
popa
and
(bad)
jo
mov
cmp
add
cmp
arpl
add
mov
fmul
push
ds
sbb
lds
loopne
add
sub
ret
ds
inc
scas
mov
push
push
adc
add
adc
add
xor
and
out
mov
outs
lock
daa
push
pushf
popa
inc
sbb
ins
sub
mov
xor
jo
or
mov
in
and
add
fimul
sbb
sub
sub
add
xor
ret
nop
xor
add
or
movs
push
pop
icebp
shl
inc
or
mov
mov
pushf
nop
lods
or
push
iret
dec
add
lods
or
cmp
inc
adc
add
add
inc
or
xor
add
cwde
add
dec
adc
mov
adc
add
sbb
shl
add
cmp
add
and
push
cmp
nop
call
adc
inc
cmp
sub
add
add
je
push
gs
add
sbb
cmp
pushf
pop
xor
das
adc
add
ins
test
adc
inc
mov
push
adc
add
repnz
adc
out
sar
lock
or
out
fcom
pop
push
js
dec
pop
sbb
dec
fsub
cwde
inc
lock
cmp
ror
shl
and
in
and
dec
mov
adc
adc
push
js
pop
sbb
and
dec
out
mov
xor
test
sub
add
mov
std
push
sbb
arpl
pop
js
inc
xor
sahf
ja
and
and
les
mov
bound
ins
lock
cmp
add
mov
adc
and
mov
sub
or
loopne
leave
sub
out
adc
pop
or
adc
stos
lods
lock
rol
xchg
loopne
sub
sbb
rcl
inc
add
xor
adc
sbb
adc
xor
xchg
mov
push
les
mov
inc
or
add
add
mov
mov
add
ficomp
add
inc
pop
aad
inc
add
xor
push
(bad)
add
sub
and
adc
sbb
add
and
jne
and
cmps
sbb
add
test
mov
ret
xor
lods
and
jecxz
outs
jns
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
mov
pop
sub
lahf
mov
or
add
xor
xor
add
inc
push
pop
jo
dec
and
sbb
ret
add
or
cmps
call
ret
dec
in
sbb
fist
push
test
adc
sbb
fs
push
fiadd
lahf
inc
xchg
sbb
push
int
sbb
out
stos
inc
sub
ret
sub
mov
add
xchg
xor
iret
adc
popa
dec
sbb
(bad)
and
cmp
push
xchg
sub
test
sub
jmp
inc
fs
loope
inc
inc
add
shl
push
jp
mov
popf
push
out
pop
pop
mov
inc
leave
repz
xchg
jg
and
(bad)
addr16
or
mov
je
rcr
popa
dec
repz
std
retf
aaa
dec
pusha
sbb
cld
movs
call
xor
lea
out
pop
maskmovq
outs
clc
fiadd
mov
sub
jmp
xchg
mov
push
push
test
or
or
lock
mov
dec
retf
mov
xor
iret
pop
jbe
push
ret
aas
pop
mov
clc
popa
ret
add
shl
adc
ss
sar
cld
xchg
or
les
mov
(bad)
or
out
sbb
mov
xor
int
and
movhps
es
or
push
pop
sbb
test
js
mov
sub
jo
dec
out
adc
dec
inc
or
add
nop
push
mov
adc
addr16
movs
js
push
sbb
test
or
leave
and
add
cmp
add
or
add
adc
mov
cmps
adc
ror
cmp
add
inc
xor
ror
add
push
push
mov
inc
outs
or
dec
add
inc
pop
shr
sar
mov
xor
add
add
shl
pop
mov
and
adc
xor
nop
ud0
repz
scas
adc
je
pop
mov
les
lds
add
cmp
mov
bound
jae
or
mov
bswap
ficomp
sbb
cmp
pusha
pusha
push
daa
inc
mov
sar
and
or
sbb
and
sub
dec
cld
(bad)
mov
aas
dec
lods
dec
cmps
test
cld
mov
push
or
enterw
add
and
dec
add
xor
sub
mov
cwde
mov
inc
jnp
or
and
pop
sub
mov
add
push
sub
add
loope
adc
adc
repz
sbb
inc
stos
mov
adc
nop
add
mov
jmp
lock
or
add
mov
or
test
or
shl
or
add
jno
rcl
out
add
inc
daa
adc
mov
mov
add
test
cmp
ret
add
push
fimul
sub
push
je
sbb
add
std
lock
sbb
les
inc
pop
add
ror
mov
mov
inc
cld
push
cld
mov
xchg
lea
sub
jne
adc
cmps
add
mov
out
mov
jle
scas
arpl
add
and
aaa
in
cmp
lea
push
clc
mov
int
dec
and
jmp
fsub
cmc
pop
daa
add
pushf
bound
xor
add
or
test
add
and
inc
xor
add
cwde
lahf
mov
lock
jecxz
out
lock
mov
sbb
clc
inc
push
mov
loope
and
test
inc
cld
and
jae
add
cmpxchg
add
clc
ret
inc
mov
fs
mov
ret
add
stc
arpl
mov
les
lock
daa
or
add
popa
shr
inc
mov
or
mov
xchg
inc
mov
adc
pop
add
push
pusha
sbb
add
ja
cmp
and
inc
(bad)
jge
rol
sbb
mov
pop
and
mov
aaa
ins
push
daa
add
pop
rcr
mov
loop
pop
inc
ret
add
add
in
gs
add
cmp
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
cs
nop
sub
mov
bound
xchg
sahf
cmp
ret
inc
test
inc
adc
jle
in
dec
mov
adc
ror
ins
rol
or
rcl
xchg
push
mov
loop
popf
inc
jg
mov
data16
fwait
or
ret
ret
lahf
fs
sub
or
push
add
ror
movs
enter
add
call
cmp
outs
stos
pop
sub
pop
inc
mov
outs
loope
scas
aas
ja
and
xor
out
shl
add
push
mov
loop
sbb
push
pop
imul
mov
rcl
cli
rol
sahf
sbb
clc
and
push
inc
pop
or
push
mov
mov
mov
mov
inc
xchg
jl
push
mov
jmp
das
stc
retf
sub
push
cmp
xor
cmps
push
lahf
icebp
in
test
inc
mov
mov
fcom
in
and
push
or
and
inc
pmulhuw
or
(bad)
xor
retf
daa
ss
and
or
cmp
in
add
mov
or
inc
add
nop
xchg
inc
push
mov
mov
fsub
shr
fwait
jl
or
mov
out
or
and
xor
add
jge
add
nop
sub
inc
arpl
cs
and
pop
xor
and
or
pop
in
add
xchg
push
repnz
ret
mov
jno
push
xor
shl
pushf
xor
inc
dec
and
add
mov
or
clc
dec
sub
mov
xor
shr
xor
inc
xor
cmp
xchg
mov
push
ds
jmp
adc
push
push
or
mov
cli
xor
adc
mov
test
inc
push
int3
jo
dec
adc
or
mov
xor
add
push
push
jno
pop
lahf
sub
add
xor
cwde
fwait
sar
out
and
scas
movs
nop
in
pusha
xchg
in
out
mov
mov
test
pop
sub
cwde
ror
adc
mov
and
iret
sub
les
or
movs
dec
mov
loopne
lods
jne
test
rol
jo
xor
xor
ror
inc
nop
xchg
xchg
push
jne
or
test
add
push
push
xchg
dec
and
aam
rcl
inc
jp
in
jle
xor
push
adc
imul
mov
fsub
sbb
cmp
push
mov
pusha
pusha
cmp
adc
cmp
test
data16
stc
sbb
mov
adc
pop
inc
and
sub
test
mov
test
mov
pop
or
bound
mov
sbb
jle
loopne
cmp
les
or
mov
or
mov
adc
loop
adc
and
or
and
mov
mov
into
add
out
sub
cmps
mov
mov
ins
mov
push
pop
rol
push
cmp
add
ret
jp
adc
pusha
sar
inc
xor
inc
or
shl
outs
sub
add
push
mov
inc
jo
sbb
xchg
arpl
adc
rol
inc
or
or
cmp
add
js
mov
pop
add
lods
mov
inc
std
and
pop
pop
mov
add
mov
dec
cmp
mov
and
mov
or
rol
xor
pop
test
push
sbb
mov
mov
xchg
or
repz
xchg
(bad)
or
retf
add
dec
jl
pop
sbb
mov
adc
sub
jecxz
add
pusha
sub
sbb
or
mov
pop
in
nop
sbb
or
repnz
fadd
or
pop
pusha
bound
inc
imul
les
add
icebp
sbb
xor
retf
add
aas
frstor
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sub
out
fwait
xchg
je
dec
mov
inc
sub
test
iret
fmul
cld
push
out
call
addr16
mov
dec
leave
cmps
add
pop
cmp
int3
(bad)
iret
push
scas
fmul
inc
movs
inc
or
das
sub
add
push
adc
imul
rol
in
int3
movs
pop
setns
xor
mov
adc
push
dec
jmp
sub
xchg
sub
cmp
test
add
cmovle
sub
mov
sbb
je
or
mov
icebp
mov
xchg
mov
mov
ds
clc
jecxz
retf
dec
mov
pop
cmp
sbb
ins
mov
add
push
inc
cld
push
xchg
jl
dec
dec
adc
rol
dec
retf
out
sub
xor
jmp
mov
jmp
xor
mov
call
mov
test
adc
in
(bad)
xchg
sbb
fcom
inc
add
push
inc
or
or
or
inc
push
pusha
ror
or
xor
ja
in
lea
sub
pop
cmp
add
cmp
push
fs
or
and
test
fs
push
or
arpl
push
mov
pop
in
xor
pop
sbb
and
sbb
mov
lea
daa
add
loopne
cld
push
int3
and
inc
or
inc
and
dec
cmp
xchg
data16
add
fsub
jmp
mov
and
leave
add
imul
shl
mov
adc
mov
call
or
mov
or
dec
push
xor
dec
in
and
imul
pushf
add
push
adc
int
(bad)
push
or
xor
sub
rol
push
imul
sub
mov
mov
inc
adc
mov
mov
inc
inc
inc
mov
push
outs
or
jmp
sub
cwde
and
adc
jmp
xor
sbb
inc
push
cmp
or
iret
sub
les
test
inc
sbb
mov
sbb
sbb
movs
sahf
pop
and
and
enter
sbb
xor
mov
inc
retf
adc
push
xchg
ret
std
nop
inc
lds
pop
adc
adc
mov
les
adc
or
mov
push
sub
adc
push
in
and
push
daa
imul
push
mov
inc
repz
(bad)
mov
inc
es
test
enter
add
sbb
adc
adc
shr
test
arpl
inc
add
mov
xchg
add
sub
adc
pop
out
add
das
rol
cmp
sbb
loope
pop
popa
js
add
or
mov
cmp
sub
inc
lds
inc
cmp
jo
(bad)
push
dec
repnz
cld
nop
fldcw
pop
and
add
mov
scas
hlt
push
xor
add
pop
sbb
adc
cld
test
mov
ror
or
mov
add
xor
loopne
mov
ret
cmp
mov
cwde
mov
mov
jo
push
adc
add
out
ja
loop
ret
loopne
and
jo
or
ins
and
les
loop
mov
sar
add
icebp
xchg
or
add
icebp
int
add
add
cmp
cmps
inc
push
xchg
lock
jo
and
and
adc
pop
sbb
or
inc
push
(bad)
xchg
or
stos
ror
inc
xor
mov
and
test
lock
adc
test
dec
nop
mov
inc
icebp
mov
(bad)
das
and
sbb
rol
rol
fdivrp
cwde
stos
add
or
pusha
mov
js
(bad)
cmps
pusha
ror
add
rol
and
mov
or
add
pop
loopne
mov
pusha
or
add
add
pop
add
mov
sub
adc
mov
add
pop
cmp
or
push
dec
rdpmc
aad
xor
and
add
or
inc
sub
add
add
or
add
or
mov
inc
jg
push
adc
imul
sbb
add
ror
imul
mov
sub
sbb
aaa
test
xchg
ja
xor
mov
and
xor
add
jnp
mov
movs
inc
inc
fadd
cmp
repz
shl
test
ror
dec
or
popa
pop
dec
retf
xchg
sbb
add
fwait
xchg
popa
add
push
mov
mov
or
push
call
cmp
or
repz
mov
out
jnp
lods
push
ja
mov
leave
add
and
dec
sub
fnsave
dec
and
(bad)
sar
mov
imul
test
addr16
or
test
ret
pop
lods
pop
(bad)
shr
add
xchg
movs
cwde
adc
jle
add
loopne
sub
ror
(bad)
and
xchg
call
push
stc
cmp
pusha
in
out
push
ins
outs
loopne
dec
and
loopne
(bad)
dec
test
dec
xlat
stc
inc
pop
jo
fadd
inc
add
ins
ror
and
rol
std
jb
add
add
add
add
in
add
adc
jle
mov
mov
add
inc
push
sbb
add
xor
jb
retf
and
fcom
jbe
mov
mov
inc
add
fcomp
ret
sbb
inc
movs
inc
pusha
jl
ret
push
and
rol
pop
mov
push
adc
mov
jo
inc
out
cmp
sbb
sub
xchg
retf
es
mov
mov
push
(bad)
or
cmp
add
(bad)
and
xor
inc
sbb
and
adc
or
cmp
and
or
(bad)
sub
push
sbb
loop
xchg
xor
mov
call
add
xchg
add
imul
add
mov
dec
jo
cmp
call
pop
xor
jnp
mov
and
stos
scas
mov
inc
es
xchg
xchg
inc
imul
and
add
pushf
xor
ror
mov
sub
mov
sub
adc
or
rcr
adc
outs
scas
(bad)
push
xchg
or
xor
(bad)
ror
xor
enter
pusha
bound
inc
adc
xchg
mov
xor
inc
sub
sub
popa
into
daa
push
push
mov
(bad)
test
std
or
sub
sub
add
dec
push
test
aam
xchg
adc
pop
or
push
out
xor
add
add
and
cmp
cmp
mov
imul
retf
cmp
rcr
add
inc
adc
cld
lods
leave
xchg
cmp
inc
mov
push
mov
in
add
stc
cmp
add
xchg
add
or
and
retf
popf
pop
xchg
add
lods
dec
sbb
inc
add
add
retf
adc
push
xor
(bad)
cli
sub
ins
and
stc
ins
jno
sbb
add
xchg
(bad)
adc
aas
cld
pop
dec
xor
xchg
add
inc
and
(bad)
and
and
pop
ja
mov
cli
add
rcl
inc
ds
xchg
int3
cli
dec
xor
dec
sbb
add
pop
inc
mov
pop
enter
adc
dec
in
and
lods
jno
add
mov
add
int3
push
mov
xchg
mov
adc
lock
sub
adc
add
and
adc
js
or
clc
adc
inc
sub
clc
popa
add
inc
popa
adc
inc
xor
sub
add
mov
or
in
adc
fadd
cwde
and
and
ret
bound
test
add
add
dec
ror
add
or
inc
xchg
je
or
add
in
ret
js
adc
mov
ds
leave
pop
sub
cmp
pop
sub
ja
sbb
sub
or
inc
or
les
jbe
test
rcl
push
sbb
fwait
xchg
inc
inc
cwde
pop
out
push
or
sub
jbe
pop
push
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
ja
sub
xchg
add
xchg
popa
movs
mov
out
and
data16
outs
loopne
add
popa
lock
cmp
test
push
loop
nop/reserved
pop
jnp
dec
mov
mov
mov
fst
test
je
call
pop
mov
les
cmp
add
rcr
cmps
dec
sbb
sub
cmp
push
add
loopne
adc
xchg
xchg
and
and
clc
shl
cmps
ins
dec
xor
nop
and
cmp
mov
lock
pmaxsw
aam
fwait
push
push
mov
les
adc
mov
lds
or
push
rcr
xor
inc
test
syscall
scas
arpl
fld
push
jl
test
jbe
lock
jns
and
mov
pusha
pusha
nop
arpl
pop
xor
add
adc
ss
mov
scas
push
aam
idiv
in
ret
(bad)
(bad)
popf
jge
mov
dec
cld
or
xchg
adc
fcom
rol
in
add
mov
cmp
retf
loopne
sbb
adc
xor
add
sbb
inc
cs
xor
push
mov
inc
jnp
push
jo
sbb
fs
add
arpl
push
add
rol
mov
fs
test
jle
nop
mov
add
adc
sbb
and
inc
push
sub
mov
inc
add
nop
ret
push
dec
(bad)
callw
and
jo
les
mov
sbb
dec
arpl
and
(bad)
fdiv
leave
aam
retf
ret
sbb
cdq
fs
sub
adc
cli
call
push
cmp
pusha
and
stos
xor
add
add
shl
adc
sbb
and
jmp
int3
push
sub
leave
and
adc
push
lods
int3
inc
nop
lods
mov
ds
inc
adc
movs
mov
mov
or
ror
dec
inc
add
(bad)
mov
or
and
cld
mov
xchg
inc
adc
mov
bswap
shl
sar
or
scas
in
sub
or
cmp
add
inc
and
add
aaa
add
into
xchg
out
or
cmp
das
mov
add
xor
mov
add
xchg
cmp
shl
inc
cwde
adc
add
add
sbb
sbb
add
mov
inc
mov
(bad)
lock
(bad)
ret
mov
dec
xor
clc
repz
fisub
(bad)
in
movlps
repnz
or
ret
shl
lods
loopne
(bad)
and
or
inc
sbb
pop
js
popf
pop
jo
cmp
adc
mov
mov
add
in
push
out
or
jp
dec
das
jo
and
adc
xor
push
lds
dec
addr16
loop
aas
cmp
popf
ret
mov
push
test
retf
aaa
adc
das
ret
add
(bad)
ins
shl
mov
or
adc
sti
jmp
pop
movzx
jnp
mov
sub
xor
pop
cmp
cmc
repnz
cmp
clc
jecxz
imul
xor
cmp
add
adc
and
xlat
cdq
pop
rol
dec
adc
or
add
popf
loop
retf
add
push
pusha
add
or
adc
hlt
ror
in
inc
or
and
cmp
adc
loopne
adc
inc
sbb
mov
and
mov
je
or
dec
xor
rol
sub
pop
and
pusha
cmp
jo
and
add
mov
mov
adc
jo
add
sbb
arpl
jp
je
ret
clc
rcr
jne
leave
or
inc
cmp
jb
dec
dec
shl
out
add
(bad)
cmp
add
lods
pusha
sbb
mov
mov
pop
push
repz
adc
jae
mov
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcr
inc
gs
inc
cmp
sub
test
dec
cld
cmp
mov
clc
and
mov
add
popf
retf
xchg
sub
test
inc
mov
xlat
emms
dec
pusha
pop
jno
mov
(bad)
jg
fiadd
and
loop
stos
push
dec
fidiv
pop
xor
adc
cmp
sbb
mov
nop
clc
pop
mov
jl
shl
mov
add
retf
ret
dec
dec
mov
mov
mov
adc
dec
mov
jmp
add
jo
jg
inc
movs
inc
ret
mov
mov
push
push
and
cld
xchg
lods
inc
mov
mov
shl
mov
pusha
adc
test
fstp
add
test
and
push
xchg
or
sbb
mov
cmp
scas
add
jnp
jecxz
and
or
int3
pusha
add
add
xor
mov
lods
add
fs
sub
mov
hlt
add
xor
ret
and
cmps
dec
xor
jg
mov
inc
adc
push
or
mov
pusha
rol
cmp
int3
and
add
pop
or
cdq
xor
cmovp
mov
adc
popf
jg
add
ret
dec
and
push
sbb
mov
aas
rol
dec
daa
int3
add
sbb
mov
or
popa
mov
mov
inc
add
int3
push
mov
imul
adc
add
add
push
pop
rcl
rol
or
sub
dec
mov
sub
sub
xchg
sbb
or
or
(bad)
in
and
ret
jns
mov
pop
test
xchg
jmp
mov
js
adc
add
dec
and
adc
cmp
dec
shr
sub
rcl
mov
add
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
push
adc
imul
sbb
add
ror
imul
mov
sub
sbb
aaa
test
xchg
ja
arpl
jae
test
xchg
add
or
fdivr
sbb
mov
mov
push
push
or
dec
pop
test
adc
sbb
or
cdq
push
inc
ret
xchg
sub
or
pusha
rol
push
popf
or
xor
bound
adc
sub
sub
(bad)
(bad)
push
sub
repz
mov
out
jnp
push
out
push
ja
mov
leave
add
and
dec
sub
fnsave
dec
and
(bad)
ror
shl
dec
inc
test
addr16
or
test
ret
pop
lods
pop
(bad)
shr
add
xchg
movs
cwde
adc
jle
add
loopne
sub
ror
(bad)
and
xchg
call
push
stc
cmp
and
ja
mov
jo
cmps
adc
lock
daa
xor
mul
fst
push
sbb
inc
or
or
inc
inc
sub
ins
adc
(bad)
xlat
pusha
rol
push
cmp
add
fild
push
add
inc
pusha
rol
push
nop
add
mov
pop
cld
and
sub
cmc
bound
shl
rol
fs
inc
cs
add
(bad)
pusha
cmp
lahf
shl
rol
xor
and
adc
or
in
ret
or
add
add
cmps
sub
inc
and
or
sub
mov
mov
mov
or
ret
pop
imul
shr
sbb
lds
jl
movs
add
mov
mov
aad
and
add
mov
clc
lock
sbb
lock
pusha
push
or
inc
xor
lods
mov
adc
push
jb
mov
add
add
repz
(bad)
fdivr
retf
retf
mov
outs
add
mov
jno
or
jae
mov
sub
jmp
xor
test
mov
adc
cmp
sbb
clc
mov
and
pop
mov
xor
lock
mov
nop
jo
adc
dec
xor
add
iret
and
or
fs
xchg
xchg
ins
ret
inc
adc
xchg
push
or
and
rol
adc
fs
mov
pop
mov
xor
jecxz
add
mov
in
mov
lods
icebp
pusha
repnz
sub
movs
or
mov
and
jae
lods
jnp
add
sbb
js
mov
(bad)
jmp
shl
movs
xor
ret
dec
xor
mov
loopne
cmp
adc
and
mov
add
jns
adc
pusha
add
cmp
mov
aad
mov
inc
xchg
dec
test
lods
adc
stos
cmp
dec
icebp
add
or
sub
jno
std
mov
inc
add
out
mov
inc
adc
add
xor
int
sbb
adc
mov
and
xor
movs
lock
bound
loope
mov
jo
sub
adc
mov
adc
pop
or
and
inc
push
popf
enter
rol
shr
ror
mov
inc
sbb
jg
ret
enter
jo
sbb
add
add
bound
loopne
das
sar
add
cmp
inc
and
adc
or
sub
movs
mov
adc
push
les
cmp
fiadd
and
ins
add
add
and
mov
jo
mov
add
dec
rol
fadd
sub
lock
adc
cli
inc
xchg
je
adc
and
pop
inc
sbb
mov
lahf
add
inc
add
xor
lods
push
mov
mov
xor
adc
sbb
rol
xchg
pusha
sbb
mov
pop
dec
dec
data16
inc
sub
les
fstp
or
and
add
or
inc
sub
add
add
or
add
or
mov
inc
ja
jge
bound
inc
mov
mov
push
add
ror
movs
dec
movs
dec
adc
pusha
add
ja
sub
or
shr
xchg
and
gs
ja
sub
daa
inc
sub
je
or
mov
mov
icebp
push
or
sbb
dec
and
out
xor
jl
and
or
add
mov
sbb
pusha
add
nop
xchg
repnz
xchg
push
mov
and
pop
adc
pop
sub
xchg
adc
dec
fwait
lahf
pop
test
or
dec
and
jnp
ja
(bad)
or
arpl
lahf
jne
aam
mov
push
sub
loop
mov
das
mov
ret
push
or
push
xor
fcos
add
mov
js
loop
xchg
in
fcom
and
or
retf
mov
inc
add
jbe
push
add
inc
rol
adc
pusha
xor
iret
xor
xor
adc
add
cmp
add
xchg
xchg
fwait
inc
jae
add
sbb
add
in
or
cmps
cmp
dec
pop
ror
xor
popa
push
cmp
add
sbb
dec
add
and
add
add
mov
xchg
lock
xor
pop
push
push
mov
aas
cmp
sbb
movs
xchg
push
(bad)
or
int3
loopne
rcr
pusha
icebp
add
cmp
inc
daa
(bad)
mov
out
or
ins
mov
or
add
pusha
inc
repz
jno
xchg
in
js
rol
into
cmp
jae
jno
or
dec
xchg
inc
push
mov
push
lods
jb
cmp
adc
inc
mov
and
je
imul
jmp
xchg
lods
popa
inc
xor
in
int3
adc
sub
arpl
rcr
cmp
lods
rol
scas
dec
pop
inc
inc
jno
cmp
or
cmp
xchg
jle
js
add
push
aam
add
or
adc
int3
or
cmp
dec
sbb
shl
loope
mov
pusha
adc
cld
and
push
sbb
inc
mov
scas
push
in
fild
aam
add
daa
adc
jno
push
mov
add
adc
add
into
xor
and
and
rcl
or
retf
and
mov
js
xor
cmp
mov
and
add
js
or
push
sub
sub
cmp
call
xchg
repnz
pushf
hlt
xchg
inc
cmp
(bad)
add
enter
and
push
cdq
push
mov
or
shr
cmp
mov
mov
inc
pop
cmp
pushf
rol
inc
sbb
lock
mov
out
add
mov
or
xor
mov
sub
inc
nop
(bad)
sub
cwde
push
sbb
rcl
xor
adc
xchg
inc
add
mov
inc
add
add
add
adc
or
add
and
cmp
test
sbb
jae
call
cmp
nop
rcl
adc
je
mov
call
lea
loop
clc
sbb
add
arpl
pop
scas
mov
xor
inc
es
dec
or
add
sbb
mov
sub
xor
push
hlt
push
add
stos
call
inc
add
or
add
dec
push
sbb
ror
jno
mov
lock
ss
adc
xchg
inc
cmp
sbb
mov
stos
and
push
add
sbb
mov
mov
and
loope
ins
lods
and
sbb
or
mov
or
ins
icebp
inc
fst
ret
add
rcr
sbb
retf
adc
mov
inc
dec
sbb
push
mov
rol
add
inc
adc
shl
jno
or
and
call
push
adc
fst
adc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
out
ffree
ja
add
inc
adc
into
and
jno
inc
jnp
mov
fisttp
xchg
xchg
in
mov
scas
sbb
ficom
sub
mov
or
mov
xor
add
test
xor
aaa
or
inc
mov
(bad)
dec
and
(bad)
es
fcom
pop
pop
xor
push
sub
test
dec
and
dec
sbb
inc
rcr
mov
fstp
mov
push
ja
xor
mov
stos
inc
ja
xchg
popa
or
jecxz
mov
pop
mov
or
test
(bad)
(bad)
inc
ja
mov
jns
add
mov
fadd
ss
or
clc
cmp
mov
pop
mov
adc
retf
cmp
adc
add
xor
out
cld
inc
mov
rol
dec
sti
jbe
push
jbe
imul
push
lea
jl
call
sbb
pop
ins
and
fisubr
fadd
inc
add
cmp
or
add
cld
jb
add
fistp
xor
inc
add
mov
or
mov
in
dec
addr16
mov
rol
addr16
ret
sbb
mov
mov
or
push
and
push
sbb
adc
arpl
in
daa
retf
rcl
in
fmul
retf
sbb
nop
es
daa
test
add
and
lock
add
sub
into
adc
and
jle
mov
push
push
mov
cmp
leave
push
cmps
dec
add
imul
xor
dec
repz
lods
rol
adc
and
mov
add
jno
mov
fdiv
jmp
sbb
adc
add
or
je
imul
add
pop
add
adc
jns
and
(bad)
or
cmp
or
ins
lods
xchg
test
cmp
cld
or
lods
cmp
mov
cmp
push
mov
loope
es
or
sub
lods
push
cs
mov
ins
xchg
mov
or
add
inc
and
add
test
add
xchg
les
and
(bad)
and
imul
inc
sub
and
sub
js
or
and
push
sub
inc
add
repz
adc
daa
and
add
cld
add
or
pusha
xlat
adc
cs
sub
adc
pop
inc
cmp
inc
sbb
xor
add
lahf
lods
mov
mov
add
push
sbb
daa
ror
sub
movs
adc
add
loopne
mov
adc
xor
or
mov
repnz
cmp
adc
cmp
cmp
cmp
push
sti
js
ret
sbb
mov
adc
pop
test
mov
mov
mov
and
test
aas
shl
shl
dec
(bad)
xor
pop
mov
add
call
arpl
clc
sahf
cmp
pop
add
cwde
sar
(bad)
(bad)
clc
test
ins
and
pop
mov
sub
fs
add
add
xor
and
sub
sbb
inc
cs
inc
push
sbb
or
cwde
shl
mov
jne
sbb
sub
inc
mov
and
add
or
or
loope
pusha
add
mov
inc
clc
and
push
les
cwde
shr
retf
jo
pop
cld
lock
mov
add
in
push
arpl
or
cld
cli
or
js
mov
inc
or
fmul
and
mov
dec
ror
xor
ja
mov
sub
add
or
jbe
inc
pop
sbb
add
mov
sbb
pop
shr
add
sahf
xor
add
adc
hlt
xchg
dec
add
and
xor
add
pop
inc
xor
cwde
lds
nop
add
fisttp
cmp
in
mov
das
xor
and
adc
popf
loopne
mov
dec
xlat
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
cmp
add
loope
sub
je
xchg
mov
inc
xor
in
test
cld
mov
mov
mov
push
inc
cmps
in
shl
test
cmp
mov
test
sub
sbb
and
add
popa
mov
fwait
jmp
sbb
pop
loopne
xchg
adc
pop
mov
lock
inc
pop
ret
int3
movs
cwde
aad
aam
mov
mov
push
jno
adc
sub
cmp
pusha
shl
adc
push
mov
push
xor
in
inc
and
cld
inc
jo
test
mov
in
push
adc
js
mov
mov
push
xchg
jl
mov
xchg
ja
inc
inc
cmp
stc
and
sbb
cmp
jb
inc
int
and
lea
popa
retf
pop
pop
mov
bound
fisttp
add
add
(bad)
jl
into
push
scas
jo
clc
adc
push
mov
xchg
and
mov
icebp
jb
daa
inc
and
in
pop
xlat
pop
and
cmc
and
adc
add
xchg
inc
or
push
mov
xor
rol
jae
and
add
pop
adc
out
pop
push
adc
les
inc
mov
xchg
inc
or
adc
mov
(bad)
and
shl
aas
sbb
mov
adc
sbb
mov
in
adc
mov
xchg
inc
mov
push
xor
adc
dec
sbb
and
cmp
in
push
push
rcr
pop
pusha
sbb
push
push
cmp
jno
popa
add
and
add
loop
push
jge
push
test
add
or
popa
lods
and
sbb
sbb
dec
xor
les
ja
cmp
add
cs
jp
iret
sbb
cwde
and
adc
and
popf
adc
add
mov
ss
ret
cmp
mov
and
(bad)
and
aam
out
movs
pop
leave
mov
push
sub
or
add
stos
cmp
lods
loopne
pop
fisttp
and
mov
add
imul
lods
mov
cmp
ret
mov
jb
test
mov
inc
or
add
and
or
xor
push
inc
inc
push
into
mov
mov
adc
fdiv
xrelease
xor
xor
test
mov
retf
sbb
fsubr
xor
xchg
push
repnz
push
rol
daa
retf
outs
ins
or
mov
inc
popa
xchg
add
loopne
ret
and
rol
out
xor
push
add
inc
sbb
xchg
mov
jae
ret
push
cmp
int
cmp
add
mov
add
add
cwde
inc
(bad)
or
es
mov
jae
pop
mov
and
cwde
and
or
je
mov
xor
arpl
into
add
xor
shr
loopne
into
sbb
add
into
add
push
pop
mov
(bad)
in
jecxz
cmp
adc
add
push
sub
jno
lock
or
inc
in
adc
pusha
inc
mov
mov
je
inc
push
dec
pop
aas
cmp
scas
shl
ret
xchg
cmp
shl
add
out
iret
or
bound
add
push
and
sbb
pusha
rol
hlt
and
loopne
cli
cwde
and
sbb
cmp
add
rol
in
dec
adc
ret
popa
adc
pop
jno
sub
or
xchg
add
rol
adc
jo
ss
mov
or
pop
dec
push
or
pusha
shr
inc
cmp
fxch
inc
mov
add
xor
popa
xchg
mov
pop
cmp
or
cld
inc
add
adc
fadd
add
add
enter
mov
push
gs
add
iret
adc
adc
lock
outs
div
sbb
ret
add
mov
sbb
pop
adc
scas
mov
sub
add
xchg
gs
popa
add
cmp
ret
or
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
mov
pop
mov
or
adc
mov
sbb
inc
and
pop
add
and
loop
cwde
mov
mov
retf
loop
mov
xor
icebp
sbb
movs
or
push
add
pusha
enter
jbe
mov
popf
add
inc
mov
out
pop
nop
repnz
out
ja
clc
mov
mov
push
std
popa
cmc
pop
mov
mov
mov
or
lock
or
mov
lock
xor
inc
sbb
xor
(bad)
retf
sub
inc
mov
pop
shr
pop
mov
jmp
(bad)
sbb
add
mov
add
jge
(bad)
ret
xor
and
push
fadd
add
push
(bad)
pop
push
adc
leave
push
or
and
test
sub
mov
cmp
lds
mov
popa
bound
adc
aaa
adc
inc
inc
add
fadd
adc
or
dec
and
adc
xor
inc
dec
or
or
or
ss
pusha
rcr
dec
adc
sub
add
mov
mov
nop
add
(bad)
push
fs
inc
and
enter
movs
mov
outs
adc
pusha
add
sbb
xor
mov
mov
sub
add
mov
cmp
mov
xchg
arpl
das
les
(bad)
and
or
popa
inc
inc
inc
sbb
add
inc
push
arpl
ror
inc
mov
or
inc
sbb
sub
test
aaa
mov
mov
aam
pop
sbb
adc
inc
pop
psubb
and
adc
dec
pop
sub
xor
test
mov
push
inc
xor
xor
mov
xchg
sub
adc
cdq
adc
in
lods
push
push
test
or
push
sbb
lods
lock
push
adc
pushf
push
mov
pop
inc
in
inc
movs
mov
adc
inc
js
retf
or
int3
pop
mov
add
mov
adc
xor
add
rcr
inc
xor
popa
add
adc
repnz
or
arpl
leave
adc
mov
add
daa
push
dec
sub
mov
pushf
fsubr
cmps
(bad)
cwde
loop
or
seto
mov
or
or
jb
fwait
int
cmp
jae
adc
cmp
nop
inc
or
int
or
cmps
sub
repz
or
and
int3
and
rcl
in
or
lahf
test
add
dec
rol
add
sub
xor
(bad)
into
test
in
adc
push
loopne
add
inc
sub
or
cmp
xor
add
add
loope
ret
xor
pusha
xchg
cwde
inc
add
fmul
repz
add
and
sub
icebp
mov
out
push
imul
add
pop
jl
dec
mov
or
js
xor
popf
test
call
mov
inc
add
stc
out
scas
cli
jmp
jp
and
and
dec
mov
mov
dec
or
add
pop
movs
popa
adc
or
rol
loopne
aam
xor
add
mov
and
sbb
adc
pop
sbb
sar
ja
inc
js
push
test
cwde
adc
jle
and
add
inc
pop
fisubr
add
ins
mov
out
add
mov
addr16
and
add
add
(bad)
jo
sbb
add
pusha
pop
aaa
(bad)
push
pushf
and
hlt
adc
inc
les
pop
add
and
mov
pop
int3
popa
or
test
xchg
je
adc
or
lahf
sub
scas
add
ror
inc
(bad)
dec
inc
mov
or
call
sbb
pusha
test
jl
add
push
push
daa
mov
adc
push
cmp
and
push
add
add
sub
mov
push
xchg
shl
add
push
mov
pop
or
add
add
popw
pusha
rol
cwde
dec
add
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
rol
nop
sub
scas
jmp
es
xor
(bad)
cmps
xor
inc
push
adc
loopne
stos
add
push
pusha
or
jecxz
sbb
sbb
xchg
(bad)
aam
sub
mov
test
cmp
lea
rol
and
push
cli
jnp
dec
pusha
fwait
adc
and
dec
mov
pop
imul
dec
jns
mov
inc
xor
inc
ror
mov
lock
lods
push
sbb
add
or
lds
fisubr
mov
push
jg
jbe
fdiv
inc
and
and
adc
mov
pop
push
movs
les
lock
movups
stc
mov
lahf
adc
ret
in
iret
lds
sbb
push
test
xchg
sub
push
data16
ja
lahf
mov
int3
push
mov
push
xor
cmc
xchg
sub
icebp
mov
nop
and
ds
jmp
pop
fmul
sub
cwde
xchg
outs
pop
or
pop
(bad)
aam
inc
adc
sub
mov
cs
mov
xor
dec
add
rcl
adc
sbb
dec
dec
nop
adc
push
or
mov
inc
adc
retf
es
loopne
jp
mov
mov
or
into
nop
rol
jb
(bad)
cmp
mov
ret
cmp
add
pop
sbb
(bad)
or
inc
mov
ss
es
push
cmp
sbb
rol
and
movs
inc
inc
je
rcl
les
prefetcht1
enter
mov
rcr
mov
jg
jne
inc
sbb
push
add
in
ret
mov
mov
and
popf
(bad)
fwait
cmp
xchg
pop
add
cmp
cmp
pop
sar
add
adc
adc
dec
stos
(bad)
mov
inc
es
imul
(bad)
int
sub
add
cwde
jo
aas
data16
leave
sbb
add
movs
inc
adc
dec
xor
or
scas
adc
push
movs
push
adc
sbb
xchg
jnp
xchg
cmps
mov
cld
add
sbb
sbb
mov
cwde
mov
daa
inc
inc
cdq
push
daa
sub
lock
ds
icebp
sbb
inc
shl
bound
cs
mov
and
ret
(bad)
in
mov
aam
xchg
(bad)
push
push
cwde
imul
add
xor
pop
mov
inc
dec
aam
add
push
cld
pop
dec
sub
or
mov
xor
mov
add
cmp
inc
adc
xor
ror
test
mov
inc
push
cmp
dec
push
inc
mov
inc
adc
inc
sub
xor
adc
adc
and
add
adc
add
fidivr
push
xchg
or
dec
add
icebp
lahf
sbb
cli
or
or
rol
inc
inc
imul
sahf
test
add
shl
or
push
sub
rol
add
jecxz
cmp
(bad)
or
js
cmp
adc
das
std
hlt
nop
dec
add
ds
xor
sbb
add
pop
mov
nop
mov
stc
pushf
inc
fidiv
adc
mov
das
add
rol
div
sbb
add
dec
rcr
rol
pusha
pusha
adc
or
xor
or
or
and
mov
pusha
or
js
adc
pusha
inc
add
(bad)
pop
rol
enter
inc
push
pop
add
jle
sbb
pushf
pusha
pop
jle
mov
and
mov
push
add
add
jnp
xchg
mov
add
or
inc
adc
cmp
add
xor
ret
mov
out
pop
or
rol
jno
inc
adc
in
rol
shl
and
sub
add
sbb
fdivr
or
fcom
mov
cwde
jb
lods
pusha
test
sbb
dec
shl
cdq
fdiv
dec
xchg
adc
movs
xor
adc
add
xor
xchg
sub
test
xor
add
add
jb
inc
adc
(bad)
push
stos
jmp
and
add
or
inc
sub
add
add
or
add
or
mov
inc
js
adc
pop
enter
xchg
add
dec
cwde
and
xor
hlt
movs
ret
adc
sbb
push
gs
mov
mov
(bad)
push
sbb
rcl
adc
and
ret
or
shl
mov
ss
rcr
ficomp
add
xor
inc
ja
ins
ins
shl
cmp
inc
and
dec
mov
xchg
push
sbb
mov
ret
movs
ins
push
sbb
out
ret
cmp
test
aas
push
inc
adc
aam
inc
mov
push
pop
mov
loopne
sbb
pop
xchg
dec
pop
popa
mov
shl
jecxz
mov
sub
add
xchg
rol
loope
xchg
inc
mov
mov
add
inc
sub
popf
pusha
mov
retf
xor
xchg
das
cmc
cvttps2pi
xor
mov
(bad)
inc
add
sub
mov
adc
push
shr
adc
xor
out
test
mov
adc
loope
cwde
adc
xor
inc
dec
add
cmps
inc
push
push
or
add
push
push
xor
mov
add
and
and
jne
mov
or
sbb
push
sbb
xchg
push
jo
push
dec
push
adc
fs
or
xor
jle
adc
out
xchg
xor
das
dec
ss
int3
sbb
dec
or
in
lea
jae
xchg
inc
push
je
mov
mov
je
ror
mov
into
and
add
push
add
bound
add
and
out
cmp
les
sahf
sub
mov
es
in
add
xor
and
pop
sar
sub
and
cmp
ret
and
xor
xchg
cli
ret
dec
xor
les
mov
xor
push
adc
mov
adc
or
mov
rcr
add
push
push
add
mov
sbb
les
das
mov
sbb
mov
jae
sub
clc
adc
into
and
scas
mov
enter
xor
mov
bound
adc
nop
rol
(bad)
mov
mov
add
pop
fisttp
psubq
ror
adc
lock
ds
retf
inc
sub
push
xchg
push
lock
or
fmul
or
jb
inc
xor
outs
xor
adc
mov
mov
push
dec
inc
push
inc
or
inc
or
ret
popa
sub
dec
push
add
rol
movs
inc
and
cs
jmp
lea
outs
mov
iret
xor
cmp
pusha
push
add
jl
sub
sti
mov
sbb
add
adc
cmp
shl
xor
shl
pop
add
je
push
add
and
dec
cmp
movs
xchg
aaa
or
lea
in
add
xor
adc
loope
cmp
rcr
test
sbb
sbb
rol
enter
loop
in
pmullw
pop
fs
test
mov
mov
and
adc
ret
sub
mov
add
test
jge
ja
add
xor
dec
add
xor
adc
push
fild
fadd
sbb
cmp
mov
inc
add
sub
add
lock
and
inc
fadd
or
xor
push
test
adc
add
pop
jo
adc
mov
jb
test
add
rol
fsub
hlt
and
and
add
mov
push
inc
test
shl
and
pop
push
test
add
sbb
mov
add
inc
add
pop
aad
sub
rcr
mov
push
mov
pop
cli
rol
imul
lea
adc
test
fidivr
jl
mov
push
add
mov
push
or
xchg
fsub
pop
or
add
or
xchg
mov
pusha
test
les
pop
inc
adc
repz
or
and
add
or
inc
sub
add
add
or
add
or
mov
inc
ja
or
ret
xchg
or
mov
mov
sub
enter
mov
das
bound
mov
pop
sub
push
mov
or
(bad)
mov
pop
inc
dec
push
push
and
pop
inc
sbb
fimul
push
mov
inc
sbb
in
xchg
add
pop
clc
outs
sub
xchg
adc
movs
gs
rol
cmp
pop
ret
xchg
xor
repz
or
mov
sub
and
pop
je
mov
add
ror
xchg
aam
adc
sub
mov
mov
inc
or
mov
ror
in
repnz
mov
lahf
inc
pop
nop
xor
icebp
test
push
mov
outs
and
bound
test
shl
jb
ja
cld
jl
mov
inc
syscall
or
scas
push
mov
add
nop
add
imul
loop
and
in
test
nop
out
je
add
les
xchg
test
mov
aaa
inc
or
xor
inc
add
xchg
dec
or
push
fs
or
mov
adc
and
xchg
(bad)
or
aaa
push
cmp
lods
adc
cmp
xor
pop
les
lods
mov
xchg
pop
test
xor
loop
data16
mov
int3
sbb
inc
sbb
sbb
ret
fwait
sbb
and
dec
aaa
pop
mov
clts
adc
jns
or
mov
out
mov
xor
aaa
sbb
dec
or
sbb
call
cmp
movs
add
xor
jno
inc
stos
pop
(bad)
int
cmp
pusha
mov
or
ret
and
in
inc
xchg
dec
jle
adc
push
ror
push
cmp
pop
pusha
xor
push
add
mov
or
mov
or
dec
adc
or
xor
shl
push
push
lds
sub
in
inc
cmp
int3
jo
enter
adc
ins
add
fsubr
mov
shl
cmp
and
and
ret
imul
push
retf
adc
or
ret
loopne
mov
ds
enter
and
pushf
xchg
push
mov
enter
and
popa
aam
xchg
add
pop
data16
sbb
and
xchg
nop
xor
retf
jae
pop
mov
add
cmp
xchg
and
cs
lock
and
and
xor
pop
or
add
or
sub
mov
mov
loopne
mov
or
adc
pop
call
xor
or
or
arpl
and
sbb
add
rol
and
(bad)
daa
cmp
scas
push
mov
inc
push
fwait
iret
jmp
add
sbb
lea
xchg
xchg
loopne
sub
popf
pushf
ja
xor
sar
cmp
pop
call
rcl
xor
into
daa
sbb
inc
pusha
mov
test
pop
test
add
ret
mov
inc
pop
and
rol
push
int3
scas
pop
out
inc
add
inc
add
and
inc
cs
das
int
add
add
ja
rcl
xchg
push
add
dec
nop
or
adc
add
pusha
add
jae
sbb
xor
adc
sub
or
add
fistp
test
movs
mov
inc
or
or
test
or
in
das
inc
nop
mov
push
bound
add
or
jbe
add
mov
xor
cmp
scas
minps
pop
mov
push
mov
bound
push
adc
rol
ss
push
or
add
cmp
push
jo
push
xor
add
mov
sbb
push
cwde
inc
cmp
sub
mov
rol
or
aad
jo
push
mov
sub
loopne
xor
adc
or
cmp
adc
push
rol
rol
or
lgdtd
or
add
add
add
popa
xor
sbb
pop
add
std
or
add
add
or
add
inc
cmp
popa
xor
xor
idiv
add
cli
inc
gs
loope
leave
dec
mov
fs
call
jno
mov
adc
hlt
inc
js
xor
(bad)
push
vpaddd
add
mov
mov
(bad)
dec
cs
int3
xchg
jmp
cld
cmps
mov
in
(bad)
ss
outs
test
(bad)
push
(bad)
(bad)
fcomp
int
add
pop
jbe
xchg
(bad)
(bad)
sar
movs
fcmove
push
adc
jmp
push
push
test
hlt
sti
(bad)
test
lea
out
fs
enter
fsub
rcr
(bad)
push
test
lock
cld
mov
in
mov
xchg
xor
jp
cmc
xchg
xlat
in
add
adc
cld
retf
out
mov
retf
fild
push
mov
dec
mov
je
fstp
out
movs
jmp
out
pop
dec
jl
in
movs
loop
(bad)
in
fidivr
cmp
stc
mov
fstp
clc
(bad)
mov
jmp
ja
out
std
(bad)
(bad)
ficomp
pop
jp
fwait
loopne
in
std
dec
outs
pop
mov
xchg
sub
jae
sti
sub
arpl
mov
out
int3
out
cli
test
add
cmps
fucomp
jb
(bad)
ds
(bad)
jmp
push
(bad)
(bad)
retf
or
(bad)
jnp
sbb
push
push
sbb
mov
aaa
mov
xchg
retf
les
clc
jb
(bad)
aad
call
mov
inc
add
out
sbb
dec
retf
mov
cmp
(bad)
ja
cmc
xor
inc
mov
idiv
lds
lods
jmp
aam
lahf
iret
loopne
hlt
aad
sbb
xchg
mov
repz
mov
aam
jnp
ds
cli
stc
xchg
adc
xchg
sar
add
push
or
aad
retf
jmp
xchg
(bad)
repz
mov
mov
stc
add
pop
sahf
mov
shl
sar
stos
bound
ret
sbb
sar
fst
xchg
(bad)
jmp
and
cmps
mov
adc
pop
arpl
add
loopne
retf
(bad)
div
iret
fild
mov
retf
add
ror
popa
sbb
rcr
in
out
jmp
cmps
jge
js
mov
ds
repz
sbb
cdq
clc
loopne
fild
rcr
dec
ins
pop
push
scas
rcl
hlt
xchg
out
scas
cmp
pushf
sbb
or
(bad)
jmp
popa
daa
enter
retf
jmp
movs
mov
popf
fadd
pop
stos
in
test
mov
repz
icebp
ror
push
(bad)
in
js
call
scas
loope
fsub
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
jo
mov
cs
test
xchg
movs
rol
(bad)
in
xchg
add
scas
sbb
push
adc
inc
outs
pusha
push
inc
push
(bad)
lea
pop
jmp
xor
hlt
fcmovnu
dec
daa
dec
lahf
sbb
stos
ror
push
xor
pop
and
mov
icebp
jmp
inc
sbb
sub
push
cmp
aam
push
stos
not
ror
pop
sbb
mov
jnp
in
pop
mov
add
push
and
and
add
mov
xor
mov
adc
mov
pop
sbb
mov
xlat
test
sub
test
push
in
into
sbb
pop
shl
or
les
jne
add
loopne
cdq
mov
xchg
jle
and
adc
rcr
sub
or
das
mov
push
loope
mov
mov
cmps
ret
add
in
loopne
les
push
out
and
call
push
int
add
adc
sti
add
(bad)
cmp
mov
inc
and
mov
movs
inc
or
sub
cld
ror
add
add
mov
push
int3
jno
xor
add
sub
push
mov
inc
mov
push
ror
aaa
jecxz
adc
dec
push
or
xchg
and
imul
xchg
add
and
mov
sub
fs
cdq
lds
fadd
call
bound
adc
mov
pusha
inc
add
lock
addr16
icebp
lock
add
or
test
jb
test
rcr
inc
loopne
movs
xchg
dec
cmp
and
xchg
nop
push
inc
or
movs
and
inc
enter
mov
call
or
xchg
inc
jo
adc
ror
les
shl
dec
test
or
adc
or
xchg
adc
sbb
loope
daa
sahf
dec
or
and
js
inc
sub
add
xchg
shrd
mov
lds
cmp
jae
arpl
hlt
cmp
push
and
add
les
ret
rol
mov
push
dec
sbb
popa
push
mov
xor
add
dec
mov
sub
xchg
rol
xor
jo
arpl
xor
push
cdq
shl
retf
and
xor
inc
sub
mov
icebp
dec
and
or
rcr
pushf
or
adc
mov
sub
call
push
sub
mov
cdq
add
pop
push
or
outs
cwde
add
add
call
lock
dec
or
call
mov
cmp
xchg
push
xchg
adc
mov
pusha
or
ins
sub
shr
popa
and
ror
scas
sub
and
or
xchg
les
xchg
adc
add
sbb
icebp
adc
jecxz
mov
push
js
xchg
add
cmps
jl
dec
or
mov
test
add
in
dec
into
fild
mov
inc
add
(bad)
add
adc
jo
adc
stos
push
xchg
inc
sbb
cmp
fadd
or
or
adc
rcl
nop
add
inc
je
pop
add
mov
or
add
mov
or
cmp
add
and
mov
movs
sbb
or
sbb
add
test
add
ss
ret
or
pop
rol
push
cmp
test
cwde
inc
(bad)
daa
les
daa
mov
xchg
push
inc
mov
push
clc
xchg
lods
adc
and
mov
daa
nop
rcl
add
sub
cmp
add
adc
add
jl
fs
pop
sub
and
adc
sbb
add
popa
pshufw
cs
add
xchg
cwde
sbb
and
test
add
aam
inc
and
adc
lods
push
add
loope
add
pop
pop
inc
dec
pop
sahf
loopne
imul
or
add
xchg
inc
xchg
push
add
cwde
and
enter
mov
mov
rol
inc
or
adc
test
nop
leave
or
outs
rol
sbb
jno
xor
cdq
or
sub
test
loopne
lock
adc
mov
add
add
adc
push
and
pop
cwde
lds
add
cmovl
popf
or
ds
add
add
push
rcl
(bad)
js
sub
adc
push
cmp
ja
push
push
pushf
jecxz
jbe
dec
mov
clc
loop
leave
mov
inc
mov
and
xchg
adc
push
adc
mov
inc
add
and
add
add
inc
sub
add
add
add
add
xchg
add
or
xor
add
or
dec
sub
jmp
popa
cmp
jg
or
xchg
jmp
xor
lock
jecxz
dec
test
out
or
cwde
nop
bnd
movs
jg
sub
xor
(bad)
pushf
or
icebp
aam
stc
outs
jmp
xchg
sub
pop
sub
fiadd
fild
shl
lds
push
pop
sub
scas
cdq
pop
mov
sub
or
jmp
add
add
stc
add
add
inc
sub
add
add
add
add
xchg
add
or
mov
or
ror
movs
dec
push
loopne
inc
add
add
pop
xor
cli
add
test
je
add
push
shl
or
xchg
and
and
int3
aas
add
adc
test
xchg
outs
dec
dec
pop
push
out
pushf
jg
jo
pop
pusha
or
lods
add
pushf
or
popa
jmp
rcl
inc
sub
jmp
pop
ss
enter
pop
cmp
scas
fistp
sbb
add
add
add
add
dec
add
xor
add
add
add
popa
xor
sbb
pop
add
xchg
add
ins
je
add
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
mov
rcr
jb
xchg
leave
(bad)
std
std
xor
fcmovnu
loop
xchg
mov
cli
mov
(bad)
jmp
icebp
hlt
cdq
cmps
mov
(bad)
aad
(bad)
cmp
cmp
mov
dec
jbe
pop
bound
sahf
mov
imul
mov
(bad)
repnz
mov
add
cwde
pushf
retf
rcl
fist
xor
xor
mov
js
jae
stos
pop
cmp
ret
popf
mov
xchg
lods
mov
or
int3
into
ror
lods
in
out
out
mov
mov
ret
inc
cmp
in
retf
mov
stc
push
shr
jmp
in
jnp
mov
cmc
repnz
sti
hlt
push
pop
push
jnp
mov
les
ret
mov
retf
jl
mov
fidivr
repnz
cli
lock
aam
stos
mov
xchg
mov
mov
shl
stc
cli
(bad)
retf
in
out
int
movs
mov
imul
jecxz
loopne
loop
imul
mov
xchg
mov
jmp
mov
(bad)
(bad)
cli
cli
jge
int
out
icebp
and
stc
and
jno
jnp
mov
js
enter
pop
jbe
sub
mov
nop
stos
cmp
dec
mov
test
jecxz
out
mov
mov
inc
bound
repz
inc
call
jmp
cmc
imul
cmps
inc
ins
cwde
pop
cdq
mov
test
jmp
cld
(bad)
jecxz
sahf
ret
mov
ins
pusha
jle
sub
inc
cwde
lds
mov
gs
sbb
jns
les
xchg
sub
mov
imul
mov
mov
jmp
in
lods
ror
cli
std
(bad)
and
jnp
(bad)
cmp
movs
ret
pop
ror
lods
ret
jmp
dec
sub
loop
fdivrp
sti
(bad)
in
out
(bad)
lods
mov
out
rcl
test
aam
repz
sub
pushf
sar
jmp
stos
rol
iret
loop
mov
cmp
loop
jno
and
fstp
loopne
jmp
(bad)
in
jae
sbb
mov
mov
mov
mov
repz
enter
xchg
out
icebp
lock
arpl
jo
bound
cs
adc
test
stc
test
repz
repz
int
sub
mov
mov
in
jne
ror
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
outs
lahf
push
sub
mov
and
popa
int3
cmps
test
adc
iret
sbb
jp
xor
mov
neg
nop
jae
mov
xor
adc
outs
sbb
repnz
es
int3
adc
lods
jge
or
push
stc
aam
data16
pop
sti
ror
fld
test
je
mov
mov
fs
mov
push
movs
test
mov
sbb
pop
dec
add
add
and
fsub
adc
pop
or
rcr
and
int3
push
repnz
adc
pop
mov
or
adc
inc
xor
lsl
xchg
add
dec
or
mov
shl
mov
adc
push
adc
and
shr
(bad)
rol
jg
in
ror
add
ret
and
daa
add
ret
nop
xor
xchg
test
ret
ficomp
test
mov
dec
adc
sub
mov
and
test
add
fs
add
enter
and
add
mov
fdiv
or
popa
add
or
add
xchg
inc
or
or
adc
pop
add
cwde
add
inc
repnz
add
mov
pop
mov
and
hlt
repz
gs
data16
cmp
cwde
mov
loopne
push
sbb
movlhps
xor
pusha
jno
jbe
sub
add
xor
sbb
js
repz
int3
shl
sbb
push
add
sbb
ror
sub
push
push
addr16
mov
add
push
push
rol
or
add
dec
sbb
dec
cmp
dec
or
and
aaa
jno
out
xor
pop
add
and
movs
sbb
ret
xchg
and
pop
mov
int3
or
popa
inc
sub
xor
sbb
in
pop
push
or
les
adc
xor
in
mov
test
dec
sub
mov
and
fsub
dec
ds
bound
and
ret
pop
icebp
adc
outs
cmp
and
iret
add
cs
pop
xor
fwait
ds
je
and
je
rol
test
test
cs
add
cs
inc
int
popf
sub
dec
add
fwait
adc
or
out
or
and
adc
rol
mov
and
mov
loopne
shl
out
xor
mov
aas
js
(bad)
into
push
and
ss
adc
adc
fadd
je
sbb
sub
clc
loopne
pcmpeqb
mov
adc
jl
dec
inc
xor
add
sub
xchg
push
mov
sbb
les
ret
and
inc
add
dec
scas
int
popf
shl
loopne
or
mov
add
xor
repnz
std
popa
mov
and
mov
in
xchg
inc
add
or
jl
shr
out
mov
push
cwde
xor
add
mov
push
sub
outs
out
cld
xor
sub
mov
nop
ret
sub
jbe
je
xor
call
scas
pop
mov
and
sub
stos
push
int
out
jo
or
adc
xor
inc
dec
adc
sbb
sub
ins
popa
or
mov
test
js
jle
rcr
cmp
add
adc
push
jb
pusha
adc
xor
add
movs
loopne
adc
loopne
stos
test
pop
jbe
add
call
sub
cmp
cmp
ror
and
inc
lods
loop
stos
push
inc
sub
add
push
adc
jl
loopne
mov
inc
add
xor
or
and
dec
(bad)
cmp
rcr
add
out
sbb
cmp
xor
mov
out
nop
xchg
xor
outs
mov
add
mov
dec
outs
js
xchg
mov
sub
mov
inc
or
xchg
sbb
xor
sub
pop
fcmovbe
or
jne
add
hlt
xchg
add
xor
cdq
add
data16
cdq
iret
in
xor
leave
sub
inc
add
lahf
nop
ret
add
and
loopne
push
pusha
repz
fsubr
sbb
into
jbe
xchg
adc
xchg
lds
fadd
int3
and
add
adc
or
or
or
xor
sbb
test
enter
in
mov
inc
mov
adc
inc
and
sbb
push
mov
lock
xor
sbb
push
pop
xor
xchg
or
loopne
cmp
add
rol
and
lahf
and
ss
and
xor
jo
or
ror
rol
pop
loope
mov
clc
xor
loopne
or
pop
ret
or
mov
xor
and
xor
add
jo
xchg
hlt
mov
sbb
adc
sbb
inc
add
jno
test
adc
call
fchs
add
jo
push
pop
loopne
or
rol
shl
push
ins
inc
inc
push
test
xor
xchg
xchg
add
adc
and
cs
daa
adc
dec
mov
xor
sbb
or
dec
ror
add
nop
lds
mov
add
inc
push
xchg
adc
pop
inc
dec
inc
add
and
add
add
inc
sub
add
add
or
dec
mov
xchg
or
adc
pop
cld
test
ret
sbb
or
cmps
or
and
or
(bad)
in
movs
jno
loop
inc
inc
sbb
sbb
add
fisubr
cdq
adc
hlt
call
or
jge
lods
dec
adc
and
dec
mov
add
mov
sub
rcl
popa
mov
es
loope
nop
mov
in
and
pop
add
nop
xor
pop
pop
push
add
scas
push
adc
and
and
add
add
inc
sub
add
add
add
add
or
ja
pop
xchg
push
loopne
and
shl
xor
inc
movs
push
push
or
adc
inc
xor
(bad)
in
add
pop
or
jbe
dec
and
dec
mov
cmp
add
lahf
xor
mov
and
pop
in
adc
sahf
xchg
jmp
(bad)
das
add
lea
xchg
sub
mov
add
sub
or
push
scas
(bad)
or
out
push
js
mov
nop
jb
mov
and
add
add
inc
sub
add
add
add
add
or
lock
xchg
or
push
test
sub
push
push
xchg
xchg
cld
cld
mov
(bad)
push
mov
mov
mov
outs
leave
aas
adc
adc
fidivr
jno
loop
sub
je
and
sub
xor
div
fwait
add
pop
adc
cmp
and
clc
adc
loope
xchg
or
adc
int
aam
inc
sbb
push
outs
adc
sbb
pop
lea
push
inc
loopne
ins
add
push
and
push
xor
xchg
cmp
push
mov
add
inc
sub
add
add
add
add
or
dec
adc
and
adc
jecxz
test
cld
ja
and
inc
popa
cld
adc
rol
jl
xlat
es
test
push
fdiv
daa
push
lds
adc
pop
dec
lahf
sahf
mov
dec
push
mov
add
and
add
rol
and
shr
cmp
sub
jecxz
mov
js
lahf
stos
stos
add
xor
add
stc
add
add
inc
sub
add
add
or
add
or
mov
rol
rcr
mov
ret
jg
inc
or
ja
mov
sbb
mov
shl
cwde
movs
shl
dec
add
and
ud0
push
rol
push
test
(bad)
mov
lds
mov
loopne
jg
sahf
hlt
clc
(bad)
ret
fidiv
jns
and
call
pop
adc
mov
sar
adc
add
jg
in
mov
daa
add
xchg
inc
fnstenv
mov
arpl
or
cmp
add
jo
adc
mov
lds
movs
add
mov
jecxz
xchg
adc
jo
sub
(bad)
sbb
pop
sub
ja
and
ret
adc
pop
dec
jmp
xchg
inc
pushf
add
(bad)
jmp
jg
in
cmp
pop
loope
push
movs
inc
hlt
jnp
dec
and
cmp
daa
push
xchg
add
into
or
inc
repnz
or
jo
inc
push
aas
(bad)
int3
push
les
pop
or
sub
hlt
jb
xor
rol
les
inc
inc
das
dec
cld
mov
aas
adc
xor
aas
mov
ror
pop
call
ror
pushf
adc
aas
xor
test
cwde
lock
push
push
jo
and
nop
pop
inc
sbb
add
adc
mov
rol
add
add
fs
repz
add
fcom
inc
ins
(bad)
xor
jbe
lea
and
or
xor
push
push
and
inc
push
(bad)
call
dec
and
and
xor
wrmsr
or
add
inc
sahf
mov
sbb
test
cmps
or
bound
mov
loopne
add
pop
sub
(bad)
inc
shl
inc
mov
or
(bad)
push
(bad)
shl
or
and
aas
mov
adc
inc
lea
nop
mov
imul
sbb
(bad)
xrelease
nop
retf
in
aas
mov
mov
dec
sar
fisttp
aam
inc
sub
out
mov
in
aas
push
dec
rol
pop
jmp
or
pop
mov
add
xor
push
inc
les
rcl
int3
sbb
xchg
add
and
add
pop
lods
dec
cmp
ds
or
and
or
lds
shr
sar
inc
sbb
(bad)
aam
popa
adc
jmp
scas
clc
shl
mov
or
and
sbb
sbb
adc
add
hlt
and
(bad)
adc
inc
jb
mov
pop
add
add
dec
mov
or
js
or
sub
aam
xor
leave
aas
xchg
pop
xchg
cmp
add
cs
loop
xchg
xor
loopne
in
repz
cs
or
push
cs
dec
(bad)
sub
xor
and
lods
loope
lods
in
sbb
adc
jge
add
ss
pusha
ret
aas
call
je
inc
sub
push
push
mov
je
(bad)
sub
mov
andnps
pusha
or
popa
or
mov
mov
add
dec
inc
inc
xor
jp
pop
cmovl
xor
ret
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
vfrczpd
(bad)
pusha
loope
rcr
or
scas
(bad)
lods
cmp
leave
sbb
dec
xchg
sbb
(bad)
cmp
cpuid
adc
add
sbb
pop
cmps
push
xchg
(bad)
push
xchg
jl
jb
call
inc
push
adc
(bad)
cld
enter
mov
cmp
pop
add
inc
and
rcl
add
addr16
and
dec
loopne
fsub
movs
ret
jge
mov
pop
shl
add
sbb
in
pop
xchg
jg
adc
sub
mov
xchg
fs
das
daa
add
mov
or
and
dec
inc
and
daa
test
movs
jo
xchg
sub
arpl
out
or
(bad)
adc
pop
jns
cli
xlat
push
inc
adc
mov
shr
rcr
xchg
inc
adc
add
imul
inc
icebp
scas
add
or
aad
clc
test
cld
lods
sub
inc
pop
mov
add
add
mov
xor
test
sar
call
adc
nop
add
sbb
test
fistp
lea
mov
cmp
movlhps
fs
inc
or
and
test
and
xchg
xchg
push
mov
dec
mov
and
(bad)
cs
in
xor
hlt
into
aas
hlt
clc
test
xchg
dec
ss
sbb
add
stc
add
add
inc
sub
add
add
or
add
or
rol
sub
imul
call
out
adc
pop
mov
sbb
push
and
mov
gs
xchg
arpl
aad
repz
mov
add
cmp
in
mov
(bad)
cmp
fsubr
inc
mov
sub
es
push
cmp
cwde
clc
daa
xchg
inc
cmp
and
adc
daa
and
(bad)
aaa
or
stos
clc
pop
ror
shl
or
inc
xor
cmp
cmp
loope
sub
add
add
lahf
add
add
sub
push
sub
add
mov
dec
call
pop
cdq
mov
mov
or
xchg
sbb
jle
and
daa
adc
or
bound
mov
dec
adc
std
retf
ret
call
mov
lods
sbb
aaa
ret
pop
(bad)
shl
mov
inc
daa
rcr
adc
pop
cmp
push
pop
dec
add
outs
out
or
pop
and
add
or
push
xor
mov
mov
das
jno
adc
cmp
jns
dec
sbb
loope
iret
pop
mov
xor
clc
mov
adc
aas
or
adc
ror
inc
pop
ror
mov
popf
aas
sbb
inc
mov
add
xor
hlt
add
in
dec
adc
mov
xchg
pop
cmp
add
ss
add
push
fs
inc
inc
adc
movs
inc
dec
movs
test
(bad)
mov
sbb
sbb
push
inc
add
stc
add
add
inc
sub
add
add
or
add
or
nop
mov
or
sub
mov
jnp
ret
test
mov
aad
and
adc
ss
sbb
xor
cld
ret
enter
xchg
sbb
jne
mov
es
xor
popa
rcr
adc
fcmovb
xchg
sub
popa
push
test
(bad)
mov
dec
or
pop
xor
rol
fisttp
test
movs
dec
repz
add
or
lods
and
fs
mov
inc
mov
jp
adc
xor
mov
sbb
adc
(bad)
xchg
mov
push
mov
fs
mov
xchg
inc
ins
int3
xchg
jg
add
pusha
(bad)
push
(bad)
xor
mov
pop
mov
imul
(bad)
lea
(bad)
sar
xor
ret
inc
imul
aam
mov
sbb
sbb
(bad)
in
lods
adc
and
cmps
pop
(bad)
shl
and
sti
popf
pop
test
repnz
inc
or
xor
enter
lock
and
mov
int3
adc
xchg
je
inc
and
sbb
xchg
inc
mov
bound
add
les
inc
inc
das
add
nop
loope
sub
(bad)
jl
int3
add
xchg
push
push
jo
inc
sbb
daa
pop
jae
adc
or
xchg
aas
lock
adc
inc
or
iret
or
pop
les
gs
or
inc
fcom
cdq
sbb
lock
ins
adc
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
vfrczpd
adc
adc
adc
or
scas
(bad)
lods
cmp
leave
inc
test
popa
pop
es
mov
push
ror
hlt
shl
inc
test
jmp
push
pusha
mov
stc
and
fistp
xor
cwde
fs
sub
or
stc
xchg
movs
das
(bad)
int3
mov
sar
icebp
lods
inc
xchg
inc
mov
inc
add
cmps
sub
mov
xor
cld
cld
sbb
jmp
neg
outs
add
or
adc
pop
shl
add
sbb
in
pop
xchg
jg
adc
sub
mov
push
test
(bad)
jmp
push
(bad)
xchg
mov
inc
cmps
jg
hlt
dec
jmp
xor
lods
xchg
jg
xchg
push
ficom
pop
mov
push
ret
inc
push
xchg
(bad)
bound
sbb
lea
add
fiadd
fs
(bad)
jne
mov
and
mov
or
xor
imul
push
add
inc
mov
xchg
mov
inc
aam
inc
push
pop
push
dec
adc
sbb
std
ror
rol
xor
pusha
icebp
dec
push
es
mov
push
dec
sub
and
sub
loop
sti
int3
aam
setbe
adc
mov
adc
and
sbb
rol
jecxz
dec
es
mov
inc
add
stc
add
add
inc
sub
add
add
or
add
or
rol
sub
imul
rol
mov
lods
rcl
nop
pusha
scas
push
dec
push
pop
les
lock
sbb
push
pusha
xchg
arpl
aad
repz
mov
add
cmp
in
mov
(bad)
cmp
xchg
and
mov
es
push
cmp
cwde
clc
daa
xchg
inc
cmp
and
adc
in
sub
add
pop
ror
shl
or
xchg
mov
sub
and
test
(bad)
cli
test
adc
or
inc
inc
and
push
fst
mov
xchg
sbb
xchg
xchg
cmp
cmp
iret
into
and
xchg
mov
in
add
add
mov
sub
in
pop
push
push
(bad)
aam
cmp
ror
std
mov
(bad)
int
mov
rcl
mov
or
paddd
enter
js
jo
sub
cmp
into
popa
cmp
movs
pusha
inc
push
xchg
shl
les
adc
inc
cmp
and
sbb
test
dec
jp
std
push
inc
inc
js
repz
add
pop
mov
aaa
(bad)
push
adc
rol
call
popf
adc
add
stc
rol
or
mov
les
test
bound
prefetchnta
dec
mov
push
inc
sub
cs
push
add
adc
test
push
adc
pushf
icebp
iret
cmp
pop
out
jbe
or
xchg
push
adc
and
add
add
inc
sub
add
add
or
add
or
nop
mov
or
sub
mov
jnp
cli
fwait
sub
test
fld
or
sbb
in
push
dec
fs
dec
jg
dec
(bad)
inc
jo
aas
adc
shl
dec
add
adc
push
nop
movlps
push
rol
push
test
(bad)
mov
dec
or
pop
xor
out
add
jmp
arpl
add
dec
repz
ror
inc
or
mov
cmp
aas
mov
cmps
and
xor
mov
sbb
adc
iret
xor
and
jl
cmp
push
sbb
ja
xchg
call
xor
mov
adc
pop
imul
(bad)
lea
(bad)
xchg
mov
in
mov
sub
nop
leave
call
ja
sar
sbb
add
adc
or
stos
adc
fsubr
adc
std
into
dec
push
loopne
lahf
sbb
icebp
xchg
xor
enter
lock
and
mov
int3
xor
push
xchg
je
inc
and
sbb
xchg
inc
mov
bound
add
les
inc
inc
das
add
nop
loope
movs
sub
dec
add
loopne
xor
inc
sbb
daa
pop
jecxz
adc
ror
arpl
sbb
sub
xchg
out
xlat
or
icebp
dec
cdq
adc
dec
out
cwde
sbb
push
mov
add
add
add
inc
sub
add
add
add
add
or
add
or
mov
cmp
inc
add
push
js
dec
pushf
dec
mov
adc
push
and
push
sbb
mov
lds
ret
xchg
add
cmp
aaa
loopne
or
inc
rcr
pushf
add
pusha
repnz
aas
imul
sub
mov
jmp
lods
sub
or
cmps
add
int3
cmp
into
mov
ins
ficomp
add
jmp
scas
pop
push
cmp
add
inc
adc
inc
lods
jns
ins
add
mov
inc
adc
cmp
add
xor
xor
sub
call
xor
mov
pop
xchg
adc
push
xchg
mov
fimul
ret
sub
lock
stc
(bad)
cmps
dec
sbb
arpl
and
movs
clc
xlat
sbb
pusha
xor
mov
dec
icebp
rcr
sub
mov
inc
add
push
mov
jg
push
sub
loopne
dec
pop
jo
push
inc
add
loopne
lds
mov
enter
lock
fcom
dec
add
push
inc
and
jbe
pop
inc
pop
sub
xchg
test
sbb
cdq
add
jge
fdivr
cmp
add
add
cmp
add
xor
ror
test
stc
mov
add
es
hlt
xor
pop
push
lods
mov
or
add
movs
pop
and
je
inc
shl
int3
and
add
or
xchg
arpl
or
xor
sbb
test
xchg
ins
enter
inc
sub
clc
ret
mov
add
clc
test
add
jo
inc
or
jae
and
mov
mov
or
push
cld
push
add
cmp
sub
pop
xchg
push
inc
dec
push
dec
mov
nop
xor
shl
imul
mov
mov
or
inc
loopne
and
mov
cmp
xlat
jl
lds
lods
mov
repnz
and
jbe
lock
mov
adc
add
pop
add
pop
ds
aas
icebp
cld
jae
daa
das
in
cmps
or
test
ror
aas
lods
rol
inc
sub
sbb
rol
and
add
jns
or
mov
or
inc
icebp
(bad)
or
xor
or
cld
xchg
inc
sub
fs
or
call
add
cmove
jae
ror
leave
and
jo
or
hlt
sub
inc
into
(bad)
mov
jae
dec
adc
or
enter
addr16
xchg
movs
mov
loop
daa
ds
add
ror
hlt
mov
mov
repz
or
lds
add
ror
lea
mov
jge
xchg
add
shl
and
sbb
mov
or
sub
rol
call
cmp
inc
out
shl
shr
adc
inc
mov
int
mov
add
push
or
dec
rcl
dec
add
mov
push
dec
icebp
add
sub
mov
aas
mov
jae
out
int3
rcl
stos
or
out
scas
int
outs
test
test
sbb
inc
and
sti
inc
xor
add
push
jmp
out
paddb
pop
sahf
cwde
add
mov
gs
mov
mov
movs
add
push
mov
push
and
dec
cmp
ret
jmp
test
fsub
adc
push
clc
pcmpeqd
pop
adc
mov
inc
push
loopne
mov
ror
and
lods
push
mov
imul
adc
adc
mov
or
cld
popa
adc
mov
inc
xabort
cmp
in
js
mov
sub
popa
fadd
push
adc
add
inc
add
ja
mov
mov
loopne
cmp
inc
and
mov
add
push
sbb
inc
or
or
or
dec
dec
push
push
les
add
add
cmp
add
enter
nop
or
icebp
getsec
mov
sar
test
pop
xchg
pusha
add
div
pop
push
lds
dec
jecxz
add
sar
sub
call
xor
je
(bad)
test
push
adc
loopne
add
cmps
cmp
inc
adc
push
and
adc
adc
test
add
shl
inc
xchg
rol
dec
push
mov
pcmpgtb
xchg
xchg
pop
inc
sbb
add
add
xchg
jle
add
inc
sbb
lock
add
xor
lea
arpl
jge
test
jo
push
dec
ss
or
add
dec
cld
add
adc
or
pop
loopne
sbb
pop
dec
add
xor
xor
mov
lock
or
mov
add
(bad)
call
and
add
xchg
lea
add
mov
push
nop
xchg
xor
cmp
js
inc
push
push
adc
cmp
cmp
add
inc
jno
mov
dec
add
add
push
cmp
add
jl
add
add
inc
fadd
push
fcmove
or
push
mov
pusha
dec
inc
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
shl
dec
fcomp
mov
pop
push
xchg
mov
push
or
or
and
mov
leave
jo
push
sbb
xor
dec
dec
xor
cld
sub
ins
ret
mov
or
cmps
pusha
xchg
aam
or
xchg
cmp
xor
retf
in
icebp
inc
cmps
(bad)
push
call
pusha
add
sbb
stc
cmp
retf
inc
add
mov
test
adc
sbb
inc
dec
mov
sbb
pop
mov
or
inc
add
add
sub
rcr
test
or
int3
push
and
(bad)
mov
cmp
cwde
or
fs
mov
ret
add
or
cs
xchg
fs
and
popf
ret
dec
xchg
push
stos
dec
push
push
dec
sub
int
push
lock
je
mov
push
and
pop
xor
dec
xor
shl
or
sub
push
out
fs
das
pushf
cwde
add
loopne
inc
and
push
loope
(bad)
jne
les
jo
mov
cmp
inc
add
mov
adc
pop
arpl
test
imul
add
mov
xor
and
clc
mov
push
inc
adc
adc
sub
movs
add
add
and
xchg
xor
or
clc
jae
and
adc
adc
adc
pop
jl
dec
aas
push
enter
inc
or
(bad)
push
jl
test
inc
dec
push
inc
sub
adc
adc
add
(bad)
aas
(bad)
ins
loop
or
jl
rol
sub
add
inc
sub
mov
xor
hlt
jb
das
dec
hlt
and
sbb
inc
or
cmc
inc
scas
sbb
push
ror
mov
sub
enter
add
es
add
(bad)
or
pop
adc
and
dec
cmp
sbb
add
js
and
shr
loopne
es
add
popa
mov
fiadd
pushf
shr
movs
and
es
push
jo
daa
sub
xor
mov
and
inc
adc
xor
xchg
inc
pop
hlt
push
jl
adc
aam
inc
sub
loope
adc
inc
loope
adc
in
mov
and
cwde
adc
sbb
add
mov
cld
push
or
hlt
int3
add
mov
inc
inc
adc
and
rcl
rol
adc
add
sub
mov
clc
add
or
or
or
sbb
adc
mov
and
mov
or
(bad)
mov
(bad)
ret
nop
and
push
mov
lea
sub
into
add
mov
and
add
xchg
js
or
mov
cmp
out
pop
mov
ror
adc
dec
adc
sbb
sbb
jmp
xchg
inc
ret
repnz
imul
daa
xor
ret
stos
in
dec
push
cmp
mov
push
add
lods
(bad)
pop
xor
pop
mov
mov
jb
idiv
push
int3
lock
or
leave
sub
or
cli
rol
or
mov
cmc
jl
or
mov
inc
mov
test
clc
ret
adc
or
adc
or
stos
loope
push
mov
sub
lock
sub
pop
lea
add
push
loopne
pop
test
cmp
fadd
pop
shl
dec
rol
xchg
mov
das
xchg
mov
push
mov
sub
push
push
adc
mov
arpl
mov
sar
ret
lock
pop
push
loopne
jns
inc
sbb
cwde
xchg
mov
(bad)
push
call
lea
je
adc
ror
xchg
mov
pop
out
inc
leave
dec
jp
xchg
fmulp
movs
es
imul
dec
push
add
sbb
jno
or
mov
and
pop
mov
inc
and
loop
inc
das
loopne
and
add
cwde
push
dec
cmps
xor
inc
push
ret
mov
adc
mov
sbb
rol
nop
xchg
(bad)
cmp
push
dec
mov
sahf
push
lock
pop
mov
adc
or
enter
dec
inc
inc
enter
out
push
aam
pavgb
adc
rcl
mov
inc
jae
and
or
call
add
hlt
add
xor
add
xchg
mov
or
add
dec
mov
mov
add
add
scas
pushf
test
or
push
xchg
sbb
or
add
pusha
add
and
and
ror
nop
ret
inc
icebp
adc
push
enter
jp
lahf
(bad)
inc
push
mov
pusha
ss
sbb
or
add
pop
jle
xchg
lock
inc
clc
ret
rol
adc
sbb
test
hlt
and
aas
jl
or
nop
add
inc
adc
or
sbb
add
sbb
or
mov
xor
push
sub
popa
push
and
adc
push
sub
ror
cwde
nop
add
or
sub
add
xchg
sbb
xor
xchg
inc
dec
jae
or
add
mov
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
push
enter
mov
leave
xor
fs
call
ret
test
mov
dec
lea
inc
aam
sbb
inc
das
sub
push
pushf
ror
ret
add
cmp
js
pop
adc
inc
or
test
and
ret
inc
jae
xchg
mov
loopne
ficomp
xor
in
adc
das
dec
add
lea
out
test
loopne
into
or
jae
pop
sbb
xor
ss
sub
inc
adc
and
add
dec
xchg
sub
mov
(bad)
mov
imul
adc
add
movs
mov
rol
pop
xchg
or
mov
mov
pusha
mov
bound
enter
add
jp
pop
add
xor
syscall
xor
rcr
or
(bad)
mov
inc
das
cmp
push
rcr
xor
pop
add
push
adc
xchg
inc
adc
add
xor
sbb
dec
push
dec
and
fadd
rol
inc
call
or
out
xor
pusha
test
adc
add
or
and
shl
syscall
dec
or
enter
adc
cs
jl
inc
adc
jle
add
cmp
jmp
push
push
test
mov
sbb
pop
mov
mov
inc
pop
xor
(bad)
or
add
ins
sbb
ror
mov
push
pop
test
inc
add
clc
and
retf
pop
loopne
ret
ret
add
call
sbb
adc
neg
ret
inc
nop
dec
and
jecxz
adc
das
xor
mov
pop
adc
xor
rol
xor
lods
push
dec
adc
add
inc
sub
sub
repnz
push
pop
mov
and
xchg
adc
test
push
mov
icebp
xor
xchg
clc
loop
dec
sub
xor
or
cdq
jae
aas
or
adc
add
stos
jo
adc
cld
dec
ror
and
shl
ret
frstor
popf
call
js
mov
sahf
adc
or
test
vsqrtps
xor
push
push
sub
aad
and
pusha
or
sahf
movs
lods
repnz
add
or
push
push
or
repz
dec
add
jo
adc
pop
dec
daa
into
clc
loopne
(bad)
add
xor
test
ins
imul
sub
ret
or
dec
sub
cmp
adc
jmp
add
inc
add
push
push
xor
add
inc
sub
xor
or
cmps
js
or
xchg
or
mov
cs
lock
das
xor
add
jne
cmp
call
or
ss
mov
cmp
adc
inc
test
sbb
and
clc
mov
out
and
movs
or
stos
test
scas
mov
xchg
arpl
push
adc
mov
sar
fs
and
fcom
lds
into
and
push
and
(bad)
enter
and
jmp
sti
push
and
pop
fadd
cmp
add
js
sub
mov
add
push
push
jmp
add
adc
jbe
add
test
ficom
jbe
loopne
inc
and
cmp
pop
add
push
or
mov
push
or
adc
push
or
cli
ror
push
and
push
mov
lds
jecxz
mov
xchg
(bad)
pusha
hlt
loop
jmp
cs
lea
inc
sub
dec
(bad)
cmp
mov
or
nop
add
mov
push
(bad)
cmp
emms
xor
popa
dec
outs
cmp
xchg
fidiv
cmp
add
cmp
xor
dec
outs
js
pop
fadd
shl
inc
retf
ror
pusha
add
cwde
xor
jp
mov
rol
push
movs
sub
retf
pop
repnz
add
nop
xchg
adc
mov
pushf
retf
dec
add
jo
cdq
rcl
push
push
sbb
adc
pop
mov
test
mov
test
and
leave
into
jbe
popa
or
add
add
push
jne
movs
add
mov
inc
add
push
sub
loop
mov
and
and
or
sbb
adc
and
add
and
add
jb
and
add
(bad)
nop
or
jl
sbb
cwde
add
clc
adc
and
sbb
popf
inc
dec
xchg
lock
jo
add
mov
sub
or
rcl
cmc
or
in
add
jo
test
lock
push
(bad)
sbb
add
or
or
call
add
enter
nop
add
push
add
pushf
sub
dec
enter
int3
pusha
push
jnp
add
xchg
test
clc
inc
pop
xchg
nop
test
jo
push
xor
pop
call
xor
lock
aas
aam
add
popa
push
lds
fiadd
test
xor
add
adc
mov
pop
jb
adc
and
sbb
mov
sbb
add
push
ret
and
arpl
jns
mov
(bad)
fcomp
sbb
or
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
shl
jmp
scas
xor
xchg
mov
in
popa
ret
xchg
cmp
jae
mov
mov
xchg
mov
cld
adc
xchg
xlat
mov
jmp
jge
and
mov
fdiv
mov
fadd
fs
rol
loopne
ret
push
pop
test
xor
ret
push
std
gs
adc
add
es
ror
dec
arpl
cwde
pop
inc
daa
ret
lock
jp
sub
arpl
sbb
rol
dec
add
in
cdq
push
jbe
movs
xchg
ret
fwait
bound
(bad)
fistp
ss
inc
add
push
pop
pop
js
lods
aad
retf
rcl
(bad)
sbb
int
sbb
add
sbb
xchg
repnz
mov
mov
jb
inc
sbb
xchg
les
mov
xor
pusha
int3
mov
ret
mov
sub
dec
adc
jmp
jae
repnz
sti
xor
pop
and
cmp
popa
adc
inc
sbb
sub
add
(bad)
rol
or
ror
sbb
sub
inc
push
imul
add
sbb
inc
(bad)
pop
out
or
(bad)
fldenv
iret
add
xor
not
pop
add
inc
and
sub
add
inc
and
and
inc
out
adc
push
and
adc
xchg
fwait
xor
add
or
or
sub
inc
pop
sbb
pop
pushw
sub
dec
adc
icebp
or
dec
sub
pop
adc
sti
call
fadd
pusha
dec
add
daa
(bad)
or
jl
test
shl
xor
popa
push
inc
inc
adc
add
mov
lea
(bad)
call
sub
and
std
pop
and
inc
pop
lea
push
add
mov
push
inc
inc
sub
ror
adc
sub
jno
or
test
add
add
inc
xchg
push
adc
pop
push
ret
or
xchg
enter
loop
pop
std
or
ret
xor
jb
or
adc
les
inc
add
xor
push
cmc
sub
(bad)
mov
icebp
adc
jb
icebp
mov
or
mov
das
add
and
adc
stos
shl
push
(bad)
sbb
cmp
xor
je
leave
add
mov
adc
dec
sub
movs
inc
inc
add
test
lds
gs
push
add
xchg
sti
lods
loopne
ror
jno
daa
ins
xchg
add
aam
push
adc
add
pop
ins
push
les
push
sub
(bad)
adc
or
or
loopne
adc
xor
ret
push
xor
xor
mov
mov
adc
in
mov
sar
add
xor
les
cmp
in
out
xor
adc
sub
or
inc
push
mov
arpl
(bad)
sub
js
inc
in
or
lock
push
push
inc
mov
adc
test
inc
sbb
(bad)
cld
icebp
(bad)
xor
les
aas
or
pop
mov
fbstp
pusha
inc
add
and
add
mov
push
inc
jle
mov
mov
adc
fild
dec
inc
adc
dec
shl
adc
sub
add
inc
nop
inc
xor
xchg
or
pushf
and
push
add
push
push
test
cmp
xchg
rol
add
xchg
add
inc
mov
push
xchg
mov
daa
dec
mov
xchg
enter
adc
add
add
sbb
adc
loop
adc
js
gs
or
ret
test
push
loopne
out
arpl
dec
jno
or
push
push
sbb
jo
inc
sbb
inc
leave
or
out
or
push
sbb
push
push
ret
add
cmp
and
jno
movs
stc
inc
push
int
add
or
sub
or
sbb
jo
sub
in
clc
and
cmp
dec
movaps
pop
push
add
mov
sub
push
inc
xor
fmul
cmp
add
push
mov
loope
stos
xchg
mov
rol
adc
mov
rcr
jns
inc
ds
jle
adc
add
test
add
push
pop
xor
pop
adc
add
aam
not
daa
aas
jno
or
cwde
dec
pop
sahf
sbb
les
xor
pusha
add
jge
inc
and
and
mov
inc
ds
outs
mov
push
push
sbb
test
dec
push
pop
ficom
sbb
sbb
sub
and
xchg
scas
adc
or
movs
dec
add
adc
mov
or
shl
add
add
stos
pop
or
mov
ins
shr
ror
ins
(bad)
and
add
or
or
cwde
or
cmp
pop
pop
push
or
xchg
or
and
sub
imul
loopne
test
xor
add
add
adc
pop
and
or
adc
or
xor
sub
fcmovnu
push
xor
xor
and
pop
out
xor
add
mov
add
inc
or
jo
repnz
sbb
push
xor
ror
push
xor
loopne
fprem
or
and
loope
inc
loopne
and
rol
nop
mov
icebp
lea
cwde
add
pop
imul
or
rol
loop
mov
adc
sbb
add
div
and
es
or
xor
fisttp
test
add
push
dec
sbb
adc
add
inc
and
nop
xchg
stos
enter
nop
mov
sbb
sbb
pusha
add
sub
ins
mov
shl
in
je
or
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
js
ds
test
movs
popa
nop
adc
or
sbb
iretw
add
push
call
push
es
sbb
xor
push
popa
mov
dec
or
xor
test
mov
rol
inc
jb
rcr
loope
mov
sbb
add
xchg
add
mov
adc
addr16
add
push
pop
push
jl
xor
ficom
scas
add
adc
or
or
(bad)
loop
mov
ins
loopne
fadd
sbb
mov
test
(bad)
inc
xor
out
push
mov
add
push
xor
enter
sbb
or
jbe
test
data16
and
ins
push
enter
mov
or
mov
jno
stc
fwait
mov
mov
cmp
inc
int3
xchg
sbb
inc
push
ss
fmul
rcr
sbb
or
jo
xor
add
ret
fistp
inc
push
xchg
test
mov
push
push
clc
adc
add
(bad)
ins
bound
or
movs
rol
lds
push
inc
sbb
and
and
imul
les
pop
add
inc
mov
dec
and
push
or
or
and
jns
push
lock
js
out
adc
sbb
jo
sbb
mov
xor
iret
es
sub
dec
push
jnp
push
or
pushf
jo
add
bound
sbb
test
mov
imul
leave
pop
(bad)
mov
inc
add
dec
icebp
inc
sbb
or
push
and
cmp
sbb
inc
xor
(bad)
mov
(bad)
push
sbb
inc
inc
aas
das
cld
mov
or
jo
dec
adc
push
add
sbb
cdq
jae
adc
mov
add
rol
mov
test
cmovle
lods
ror
pop
mov
push
inc
pop
inc
inc
lock
or
loopne
(bad)
or
or
xchg
imul
bound
mov
xchg
lods
add
jle
adc
jo
and
or
test
mov
pop
xchg
retf
xor
rol
lds
add
push
xor
(bad)
es
add
dec
add
add
(bad)
movs
lock
cs
add
addr16
add
rol
push
call
clc
ret
or
jae
xchg
enter
xchg
sbb
or
cmp
test
xor
into
adc
loope
push
add
sar
stc
xchg
and
test
jae
or
or
mov
dec
call
leave
and
pcmpgtb
jne
sub
xchg
xor
or
clc
jae
aas
(bad)
lods
adc
or
add
cli
in
adc
movs
inc
mov
xor
inc
xrelease
xchg
rcl
(bad)
fwait
mov
mov
add
mov
iret
cmp
sub
daa
popf
jo
mov
push
and
les
cmp
xor
mov
ficom
ror
adc
pusha
jge
add
rcr
lds
xchg
pop
inc
daa
pop
test
lea
sbb
adc
or
xor
and
or
pop
imul
sub
or
add
or
loopne
pop
sbb
shl
add
pop
nop
pop
mov
or
(bad)
cmp
dec
mov
pop
and
push
lds
ss
cmp
enter
jno
pop
aam
jp
sub
cmp
xchg
test
ret
adc
lock
pop
cwde
adc
mov
add
test
sub
xchg
nop
or
and
or
dec
jb
cmp
adc
popa
adc
icebp
add
js
pop
push
and
out
mov
dec
jl
or
add
in
xchg
lock
fadd
stos
and
add
or
mov
xchg
xchg
pop
add
jge
add
nop
sbb
and
(bad)
sbb
or
jecxz
dec
mov
push
xor
xchg
mov
or
ror
rol
pushf
popa
sbb
(bad)
or
xchg
inc
or
and
fsub
sbb
imul
pop
rol
sub
stc
rol
icebp
pop
push
dec
and
inc
mov
xor
mov
sbb
leave
dec
cmp
repz
jns
cmp
cmp
sbb
mov
cmpxchg
add
jl
sahf
push
and
imul
fsubp
push
fimul
test
dec
jo
push
cmp
xor
jb
pop
cmp
xor
push
enter
or
xchg
loop
cmps
outs
jo
add
add
leave
enter
mov
adc
mov
mov
rcr
pop
or
aam
sbb
and
rol
or
jb
jp
loope
adc
jmp
in
pop
movs
rol
inc
jl
or
mov
dec
sbb
pusha
push
sbb
add
sbb
push
inc
hlt
mov
ss
add
xor
adc
add
inc
(bad)
pop
sub
(bad)
adc
mov
test
pop
jle
xchg
dec
mov
rol
mov
pusha
pusha
loop
mov
test
ror
adc
mov
dec
scas
or
and
sub
and
imul
or
nop
or
sub
mov
ret
das
jo
add
pusha
cmp
or
mov
adc
aas
aam
lea
arpl
out
mov
or
in
xchg
sub
and
dec
cwde
add
adc
mov
daa
add
push
fadd
es
add
push
add
push
or
cmp
and
or
lock
and
(bad)
ss
pop
sbb
or
push
rol
sbb
or
push
aas
sbb
inc
loopne
or
jecxz
wrmsr
ror
fmul
pop
jb
add
leave
(bad)
xor
je
bound
rol
adc
jg
inc
dec
dec
dec
rcl
add
pushf
call
add
xor
daa
fld
xchg
xchg
test
mov
add
pushf
mov
add
xor
adc
dec
and
sub
sbb
daa
outs
or
retf
cwde
mov
aad
sub
cwde
loope
jmp
or
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
mov
sbb
jmp
mov
in
push
dec
push
shl
inc
xchg
(bad)
fcomp
popa
push
mov
shl
cmp
out
mov
jmp
imul
fadd
mov
ret
push
aaa
and
inc
imul
mov
fadd
jo
mov
pop
mov
xchg
(bad)
pop
shl
jo
mov
push
scas
xchg
add
cmp
adc
push
enter
xchg
nop
ficomp
xor
retf
nop
test
sbb
pop
add
je
inc
ret
je
sbb
or
adc
es
sbb
gs
mov
adc
pushf
sub
into
clc
pop
and
mov
sbb
and
in
push
xchg
fcomp
mov
pop
mov
and
ret
mov
jmp
xor
ds
loopne
xchg
fimul
loop
pop
xchg
or
mov
movs
mov
cli
ins
xor
push
pop
lods
inc
pop
add
push
adc
and
int3
add
sbb
jge
sub
mov
rol
mov
mov
push
loop
xor
in
(bad)
mov
or
add
sbb
ror
int3
hlt
fld
lea
or
push
xor
rcl
adc
cld
mov
push
push
pop
inc
sbb
neg
adc
push
inc
sbb
mov
add
dec
or
je
add
popaw
dec
and
add
or
or
sbb
and
push
sbb
test
pusha
rol
aam
push
pop
dec
retf
movs
and
push
sbb
and
adc
sar
inc
add
mov
or
adc
inc
or
test
add
or
push
adc
sub
rol
ins
mov
xchg
rol
movs
mov
cmp
sbb
pusha
mov
aas
pop
lods
cwde
or
add
push
lods
adc
cwde
pushf
loopne
add
imul
xor
dec
inc
add
or
pop
mov
adc
bound
fwait
and
and
add
movs
inc
xchg
add
push
inc
or
mov
(bad)
es
push
xor
adc
pop
mov
push
enter
jecxz
aas
pushf
test
ret
xchg
jb
and
xor
(bad)
cld
adc
je
mov
sysret
je
enter
mov
adc
or
mov
mov
inc
cld
adc
mov
les
cmp
xor
adc
inc
fistp
rol
setle
xor
retf
jl
or
push
push
or
add
adc
sbb
add
lea
inc
rol
xor
add
push
mov
mov
push
and
sahf
stc
jae
and
loopne
and
repz
ret
add
bound
push
push
inc
popa
mov
test
sub
cmovl
cmc
clc
and
or
and
jl
xor
push
xor
add
hlt
aas
or
rol
mov
mov
adc
sub
or
imul
or
add
sub
aas
push
mov
adc
popa
pop
dec
pop
fs
pop
inc
aaa
adc
mov
mov
or
inc
sbb
pop
adc
loopne
cmp
inc
or
push
adc
xor
(bad)
adc
daa
add
mov
cs
nop
mov
movs
and
fsub
or
jge
inc
pop
push
inc
or
adc
mov
push
outs
popa
mov
or
add
lock
sahf
cmp
fidiv
pop
cmp
or
pop
fs
jns
ss
add
fsub
adc
js
push
inc
(bad)
push
or
push
mov
and
mov
popa
pop
xchg
cld
xchg
and
pop
sbb
add
mov
mov
mov
sub
adc
vcvttss2si
mov
cwde
inc
das
jl
or
adc
adc
ror
inc
mov
sbb
fiadd
dec
jb
jb
retf
sbb
pop
sub
and
add
mov
bound
mov
ds
mov
adc
cli
mov
mov
adc
enter
loopne
aaa
fadd
sbb
mov
xchg
je
mov
cmps
adc
push
add
push
inc
xchg
inc
cmp
push
pop
cmp
xor
adc
add
hlt
cmps
lds
mov
inc
and
xchg
mov
inc
and
or
pusha
dec
inc
sbb
add
stos
sbb
xor
sbb
sbb
hlt
and
out
shl
rol
add
cmp
or
sbb
inc
pop
lahf
cli
aam
dec
adc
or
rol
jb
adc
jmp
(bad)
sbb
adc
test
inc
mov
cmp
pop
fild
mov
mov
sbb
push
jg
mov
pop
mov
add
loopne
test
add
push
stos
fadd
ds
adc
mov
jecxz
mov
or
rol
and
outs
jo
inc
fsub
mov
shl
pusha
mov
cwde
sub
sub
push
or
sbb
andnps
add
mov
add
or
inc
pop
and
push
or
test
mov
add
inc
push
and
ror
popa
pop
dec
jo
adc
(bad)
adc
add
add
pop
add
test
xor
sbb
ret
data16
xor
add
xchg
or
mov
idiv
add
and
popa
inc
leave
jnp
jb
and
mov
xor
or
xor
dec
add
inc
or
sbb
mov
adc
dec
sbb
pusha
rdpmc
adc
mov
loope
mov
add
lock
push
in
push
sub
push
popa
cmp
push
movs
and
add
xchg
pop
add
sete
pop
fndisi(8087
add
add
adc
(bad)
add
es
and
ret
int3
aaa
inc
sub
or
daa
inc
iret
nop
push
dec
sbb
xor
inc
(bad)
xor
add
inc
add
add
add
adc
add
dec
add
sbb
add
add
add
popa
xor
sbb
pop
add
cli
sbb
add
add
sbb
add
inc
cmp
popa
xor
xor
idiv
add
(bad)
icebp
(bad)
scas
add
mov
add
xchg
fwait
push
retf
cmps
mov
(bad)
(bad)
daa
mov
jb
stc
clc
enter
(bad)
(bad)
cld
std
out
push
out
(bad)
(bad)
jmp
icebp
(bad)
fsubr
aaa
fwait
lds
aam
pushf
shl
std
imul
dec
ror
add
xchg
enter
dec
mov
int3
loopne
push
gs
fwait
in
sti
shr
mov
fadd
nop
leave
jge
sahf
add
sbb
mov
cli
(bad)
push
repz
jp
int3
cmp
stos
ror
in
shl
loope
rcr
(bad)
jmp
fstp
data16
call
xchg
mov
cmps
(bad)
xchg
fdiv
push
fwait
mov
jecxz
(bad)
(bad)
fadd
leave
shr
mov
mov
sub
icebp
hlt
cmc
ja
(bad)
aam
inc
jnp
sub
xlat
jmp
mov
in
xchg
leave
fild
mov
loope
fdiv
cli
jl
(bad)
sti
cld
loop
aam
mov
loop
pop
xchg
pop
retf
mov
jmp
mov
jmp
aam
jmp
inc
mov
out
clc
(bad)
push
cmc
out
fst
shl
stos
into
jge
jmp
lea
std
cli
(bad)
nop
ss
in
add
stos
(bad)
cmc
std
jae
(bad)
out
loope
mov
retf
fisttp
mov
jmp
repz
(bad)
fistp
aas
fdivr
mov
(bad)
imul
fdivp
arpl
add
pop
mov
mov
cld
dec
ret
out
int3
jmp
xchg
(bad)
adc
cli
repnz
f2xm1
test
mov
icebp
jmp
int
clc
clc
mov
shr
cli
icebp
ret
jecxz
test
lods
sbb
sahf
retf
or
mov
loop
(bad)
mov
popf
lods
and
mov
iret
icebp
sub
sbb
mov
hlt
mov
stc
stc
std
cli
xlat
bnd
leave
outs
push
stc
push
movs
shl
div
mov
rcr
scas
jg
lock
mov
sahf
iret
scas
pop
cli
stc
mov
sub
test
fsub
mov
in
in
shr
div
(bad)
in
lock
icebp
or
fsubr
idiv
cld
outs
sar
push
jg
mov
stc
dec
(bad)
mov
xchg
mov
(bad)
ins
into
in
dec
pcmpeqw
lock
inc
loop
in
sti
mov
mov
aam
fsub
xchg
mov
xor
retf
dec
scas
aad
mov
ja
std
or
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
mov
sub
int3
fxch
pop
sub
adc
shl
in
icebp
clc
addr16
push
dec
add
sbb
add
aam
push
add
jne
and
pop
inc
push
cmps
add
aam
or
jg
lods
and
push
inc
(bad)
popf
adc
repnz
and
in
sub
mov
fcom
or
add
xchg
inc
xchg
mov
push
dec
push
jns
add
or
or
xchg
and
adc
cmp
dec
xor
pop
scas
push
pushf
shl
cmp
test
ins
leave
lods
xor
mov
mov
pop
fcmovb
popa
movs
ror
inc
push
pusha
les
or
cwde
cvtdq2ps
int
cmp
push
dec
sahf
arpl
enter
mov
mov
or
or
test
jl
add
add
push
ret
add
movs
and
enter
loope
or
les
and
loop
jo
add
add
push
loop
adc
jns
xchg
add
add
and
sub
pop
sbb
adc
adc
dec
arpl
sbb
jl
rcr
add
mov
adc
add
int3
mov
adc
sbb
xor
or
popa
mov
cmp
dec
adc
and
push
add
sbb
xor
xor
adc
pop
pmaxsw
add
ss
mov
inc
mov
inc
adc
push
cmp
sbb
xchg
rol
and
inc
inc
xchg
fs
sub
leave
xor
inc
dec
sar
adc
lahf
je
or
inc
push
xchg
push
fs
sbb
rcl
or
sub
jo
rcr
fnsave
shl
xor
nop
sub
jo
rol
add
ror
or
inc
and
pop
(bad)
repnz
nop
mov
arpl
add
cmp
inc
add
adc
or
fs
mov
adc
xchg
jp
push
inc
and
pop
mov
inc
ret
in
(bad)
xor
xchg
call
mov
inc
test
or
pop
add
fsubr
retf
es
mov
mov
adc
inc
mov
add
push
cmp
adc
cmp
retf
shl
inc
adc
push
adc
hlt
or
or
icebp
retf
pop
inc
(bad)
fdiv
or
je
cwde
push
sbb
xchg
int3
xor
adc
add
xor
rol
mov
and
add
or
inc
sub
add
add
add
add
or
mov
rol
add
adc
and
(bad)
movs
push
adc
add
inc
fwait
test
stc
cld
mov
cmps
fsubr
mov
ins
add
stc
add
pushf
or
dec
push
les
xor
and
add
out
pop
add
sub
nop
add
push
jb
sub
push
ds
loop
enter
sbb
dec
enter
or
mov
addr16
mov
imul
sub
dec
data16
jl
in
xor
dec
xor
daa
sbb
sub
(bad)
push
add
nop
and
add
outs
jne
mov
cwde
out
dec
xchg
sbb
jns
add
jl
add
sbb
mov
fdiv
retf
fild
pop
gs
ret
in
dec
aaa
pop
mov
iret
push
adc
sub
sub
push
dec
jl
cmc
inc
pop
cmp
(bad)
sti
mov
dec
stos
or
xor
and
mov
imul
mov
pop
ds
add
adc
adc
aam
and
mov
sub
ret
adc
cs
lods
inc
(bad)
adc
xor
and
add
inc
sub
add
fist
sti
or
inc
adc
(bad)
mov
call
jae
inc
fistp
sub
sbb
movs
inc
jecxz
ja
popa
shl
inc
sub
push
les
cli
in
sub
jl
loopne
sub
and
dec
xchg
add
adc
sbb
loope
and
in
push
add
sub
jmp
adc
push
enter
inc
dec
enter
stos
nop
xchg
loopne
and
jle
mov
mov
inc
stos
movs
xor
dec
dec
repnz
mov
sub
or
test
cs
stos
(bad)
cmps
sbb
mov
test
mov
mov
clc
mov
add
add
jmp
push
call
call
aam
gs
popa
test
out
pop
nop
xchg
inc
mov
pop
cmps
loop
inc
xlat
in
inc
and
xor
imul
sub
ds
add
imul
add
or
pop
or
add
inc
loopne
adc
cdq
mov
jmp
adc
mov
push
ret
and
mov
aas
mov
mov
bound
(bad)
dec
mov
je
dec
add
call
fs
xor
daa
mov
addr16
mov
loope
cmp
jbe
rcl
jo
lea
push
cmp
jo
cmp
adc
test
cwde
xor
mov
mov
aas
xor
rol
das
pop
in
inc
jo
out
shl
stos
add
stc
sub
jnp
retf
stc
dec
adc
pop
mov
stc
add
or
inc
sub
add
add
add
add
or
aaa
test
cmp
enter
xchg
pop
pop
or
add
xor
mov
pop
nop
add
jp
fcom
xor
scas
dec
push
sub
pop
jns
shl
mov
ret
or
and
(bad)
sbb
retf
mov
add
pop
jmp
jmp
adc
dec
test
cmp
push
dec
dec
xchg
dec
inc
inc
and
movs
loopne
add
mov
inc
retf
pushf
xor
add
test
mov
xchg
inc
nop
inc
and
cmp
and
lea
add
sub
push
or
add
sub
mov
dec
aam
xor
pop
sbb
repnz
or
dec
mov
or
cld
leave
xor
lds
pop
fwait
in
add
sub
icebp
dec
les
inc
outs
fsub
add
dec
ror
call
add
sub
sbb
ins
pop
dec
mov
push
mov
inc
pop
or
add
cmp
int3
daa
dec
jl
or
fst
xor
dec
hlt
jb
adc
or
int3
inc
(bad)
and
xor
xor
add
xor
jg
xor
mov
rcl
fcom
vprotb
ret
or
movs
arpl
xor
adc
inc
or
mov
xor
ins
or
xchg
add
inc
add
ret
cld
popa
dec
add
xor
adc
cmp
adc
mov
inc
movs
rol
sub
push
xchg
mov
adc
jns
push
cmp
ror
add
jp
push
pusha
push
jp
or
mov
xchg
imul
mov
xor
fs
add
cmps
dec
cmps
push
movs
test
and
mov
mov
push
add
xchg
cmp
add
sub
call
sub
pushf
adc
or
leave
sbb
sub
pushf
push
call
push
push
sbb
push
lahf
mov
mov
daa
(bad)
sub
or
das
icebp
(bad)
test
pop
or
and
jp
cmp
add
fist
or
retf
pop
icebp
mov
add
(bad)
adc
mov
bound
and
sbb
cmp
adc
add
cmp
or
ficom
mov
mov
add
cdq
cmp
push
cmp
jl
retf
pushf
and
and
add
push
or
pop
mov
inc
pusha
nop
popf
add
retf
mov
jne
add
je
xchg
mov
xchg
sbb
retf
xlat
add
sbb
nop
int3
loope
fsub
mov
fcmovnb
js
add
add
stc
add
or
inc
sub
add
add
and
add
or
add
(bad)
or
sub
add
adc
push
bound
xor
pushf
adc
sbb
add
add
test
adc
sbb
xor
addr16
push
inc
inc
leave
fs
ror
inc
stos
cmp
add
inc
cwde
inc
aaa
mov
mov
push
mov
xchg
jo
dec
ucomiss
mov
popf
push
push
pop
ss
mov
xor
xor
xchg
daa
or
setg
fdivr
icebp
add
leave
add
ficom
mov
add
movs
leave
push
cmp
xchg
add
mov
(bad)
sub
addr16
imul
dec
daa
lods
and
mov
test
add
movs
arpl
push
and
pop
call
mov
pop
push
mov
outs
pusha
pop
push
inc
xor
es
mov
clc
mov
push
jle
pop
mov
inc
pop
or
mov
shl
fwait
inc
imul
push
inc
sub
aam
lds
arpl
mov
push
dec
adc
pop
inc
loope
loop
or
cmp
ret
or
popf
cmp
sbb
mov
add
push
leave
cmp
rol
or
mov
push
(bad)
sbb
dec
test
mov
test
push
sub
rol
adc
fdiv
inc
jae
call
mov
(bad)
and
sbb
adc
xor
test
inc
cmp
xchg
enter
inc
mov
mov
ret
shl
jb
inc
push
cmp
inc
dec
xor
or
lahf
adc
xchg
and
inc
in
push
inc
lahf
jb
jb
mov
sub
sub
dec
xor
dec
add
mov
add
test
push
shl
lahf
loopne
test
in
inc
sub
push
add
mov
adc
test
or
xor
imul
xchg
mov
xor
lods
push
xchg
xor
addr16
inc
mov
push
add
mov
(bad)
mov
mov
lds
sbb
mov
test
push
add
or
pop
xchg
xor
and
pop
add
scas
fsub
inc
inc
cmp
sub
or
cdq
cld
pusha
add
dec
es
test
pop
xor
jo
or
ds
lock
imul
sbb
and
push
rol
icebp
sahf
cmp
xor
adc
add
icebp
inc
lds
lahf
je
or
cmp
popa
test
push
movs
push
adc
xor
mov
ins
inc
aaa
scas
ss
(bad)
sub
dec
xchg
test
pop
loopne
push
sub
inc
aaa
aas
les
nop
inc
adc
and
loopne
add
les
adc
add
stc
add
or
inc
sub
add
add
add
add
or
shl
pop
enter
xchg
add
add
push
stc
jb
(bad)
cwde
test
aad
and
adc
adc
push
inc
js
mov
ins
add
test
jo
lahf
xor
and
xchg
sbb
and
mov
aam
inc
rol
xchg
sbb
sbb
push
push
pusha
pop
rol
sub
and
cs
push
inc
dec
adc
inc
jae
test
and
or
adc
movs
sub
stos
adc
add
push
leave
sbb
push
in
adc
mov
pop
and
inc
pop
push
mov
jno
add
inc
in
mov
pushf
cmp
in
shl
adc
fld
sub
and
or
inc
enter
or
push
jo
add
sbb
cld
(bad)
add
inc
xchg
sub
inc
icebp
(bad)
jns
rol
adc
lock
add
and
xchg
or
or
xor
pop
cmp
sar
lods
repnz
add
mov
xor
and
in
loopne
sub
cwde
xor
add
or
mov
or
imul
loopne
or
mov
jl
ret
cmps
xchg
mov
inc
into
push
xor
pop
mov
xor
mov
fst
and
push
push
cld
ror
and
movs
cwde
or
mov
jle
jmp
cmps
xchg
cs
or
and
cmp
cmp
sbb
dec
or
xchg
push
ret
push
add
popa
sahf
fistp
xor
xchg
inc
inc
dec
or
inc
cmp
adc
nop
inc
sbb
mov
and
add
hlt
or
test
mov
scas
fcom
jmp
daa
pop
push
inc
adc
daa
or
push
jl
addr16
push
adc
inc
sahf
or
loop
mov
or
push
push
pop
and
or
inc
aaa
xchg
hlt
sti
or
ss
mov
add
into
inc
mov
inc
pop
cmp
jo
add
cmp
adc
and
push
inc
fs
mov
ss
add
or
push
pusha
pusha
inc
shl
dec
or
jno
and
sbb
push
dec
add
pop
icebp
retf
add
mov
add
dec
inc
test
mov
fmul
add
inc
arpl
aaa
movs
dec
es
push
or
jne
or
test
add
fimul
jo
jge
fs
daa
mov
loopne
sbb
or
mov
jge
add
neg
inc
lds
sahf
or
push
xor
and
add
sub
inc
sub
add
add
add
add
or
mov
test
enter
xchg
and
in
mov
add
xchg
jo
cwde
jb
pop
je
xchg
sub
hlt
out
dec
adc
inc
fsubr
test
mov
xor
cld
inc
sbb
rcr
dec
sahf
push
pop
cmp
retf
push
cmps
mov
add
dec
inc
mov
add
add
call
addr16
sbb
pop
stos
dec
mov
pop
pop
test
pusha
inc
aam
adc
cli
sbb
push
gs
nop
les
adc
cmp
cmps
add
cdq
or
push
mov
or
lods
mov
imul
(bad)
rcr
sub
les
xor
push
push
inc
push
add
cmp
in
pop
ds
pop
hlt
jl
inc
add
push
movs
pop
sub
sbb
mov
and
scas
adc
lahf
lods
aad
and
cmp
repz
daa
and
adc
sbb
popa
ror
or
shl
inc
cmp
inc
lock
inc
es
adc
and
imul
adc
adc
js
ret
or
jb
sbb
jp
ror
pop
sub
xchg
sbb
jl
pop
adc
inc
movs
pop
mov
pop
adc
rol
push
loopne
add
enter
or
cmp
cmp
push
arpl
push
inc
shl
dec
or
(bad)
and
test
int3
and
inc
cs
dec
lock
xor
xor
jp
loopne
add
int3
loopne
es
fcomp
adc
mov
jo
or
retf
pop
and
add
rol
dec
int3
adc
or
push
xor
sbb
sbb
cmp
add
pop
push
add
mov
push
or
pop
ror
dec
stos
dec
or
cli
rcl
push
test
sub
xchg
inc
sbb
movs
sub
cwde
retf
sub
push
sbb
sub
xor
iret
das
sub
push
cmp
cwde
mov
jge
and
cwde
rol
aam
enterw
cli
xor
sub
add
and
sbb
hlt
retf
jbe
push
add
popa
push
rcl
xchg
add
pop
aas
pop
mov
push
pop
pushf
mov
dec
xor
xor
js
sub
and
inc
push
hlt
add
int
sbb
hlt
int
sbb
ror
xchg
sbb
rol
cmp
mov
je
or
xchg
push
add
xrelease
inc
mov
or
retf
es
scas
or
adc
pop
mov
add
cs
outs
repnz
add
inc
push
xor
sets
pusha
xchg
pop
mov
enter
int3
and
std
les
adc
call
sbb
mov
loopne
adc
inc
lock
push
add
aas
sbb
jbe
pop
mov
and
cmp
mov
jb
cmp
lock
cmp
iret
add
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
cmp
bound
add
je
jecxz
mov
inc
push
int
das
test
cwde
add
dec
cdq
push
inc
add
add
sub
mov
inc
pusha
inc
and
in
add
or
inc
shl
repnz
mov
or
adc
mov
ret
mov
sub
inc
sti
inc
mov
add
add
in
cwde
mov
mov
mov
mov
cmp
pusha
rol
inc
stos
push
push
movs
enter
int
xor
push
mov
and
xchg
out
mov
xor
sbb
sub
popa
icebp
inc
inc
sahf
xor
sub
nop
xchg
fstp
jb
mov
and
in
cmp
nop
ror
loopne
or
sub
mov
dec
xor
add
mov
mov
push
ret
pop
and
sbb
(bad)
je
loopne
stos
cmp
or
aad
cmc
mov
xor
pop
cmp
(bad)
ds
jl
add
es
inc
xchg
fs
rol
sub
test
or
je
rcl
push
inc
inc
cmp
ret
inc
inc
xchg
and
pusha
or
mov
xchg
fs
or
cmp
mov
and
jo
inc
sub
ret
sub
jno
push
lea
add
pop
leave
mov
push
xor
push
hlt
ror
daa
xchg
add
push
sbb
jle
push
add
adc
inc
dec
les
or
add
inc
leave
je
rcr
dec
push
mov
or
nop
adc
nop
sub
outs
pop
aam
xor
inc
push
pop
mov
rol
mov
mov
sub
inc
xor
and
enterw
xor
dec
mov
rcl
pop
inc
jnp
cs
dec
and
xor
shl
and
sub
xor
nop
call
or
pop
dec
push
add
imul
aaa
lds
adc
fnsave
dec
inc
in
inc
add
push
sub
add
xor
add
jge
adc
sub
mov
add
nop
and
lock
nop
dec
add
jno
adc
inc
mov
daa
inc
and
mov
adc
mov
aaa
les
mov
add
and
add
icebp
or
cld
add
sub
inc
(bad)
mov
les
adc
dec
xor
or
add
test
pop
test
inc
aaa
mov
in
add
sbb
inc
adc
and
nop
add
or
adc
adc
inc
push
dec
mov
inc
add
pop
push
jle
cmp
inc
sbb
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
adc
adc
add
add
dec
add
xor
add
add
add
popa
xor
sbb
pop
add
sub
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
sbb
mov
cli
cmc
jmp
retf
add
mov
(bad)
(bad)
cmp
add
(bad)
(bad)
sti
mov
cld
stos
add
jecxz
(bad)
xchg
add
retf
mov
ss
std
mov
fwait
cmc
std
in
add
fxch
std
fwait
add
aam
jmp
add
(bad)
cmc
jmp
cld
repz
(bad)
(bad)
jne
(bad)
push
std
(bad)
(bad)
fadd
movs
(bad)
inc
add
cld
mov
sub
addr16
cdq
push
sti
mov
ret
(bad)
hlt
dec
(bad)
cld
mov
out
cld
out
(bad)
(bad)
sub
jmp
cld
xlat
dec
std
mov
mov
es
test
add
(bad)
and
in
cld
retf
out
(bad)
(bad)
xchg
leave
xchg
dec
std
rol
mov
in
loop
repnz
add
inc
(bad)
(bad)
aam
add
jmp
mov
add
jmp
cld
out
inc
add
sti
fadd
mov
retf
test
leave
inc
(bad)
(bad)
add
dec
std
std
fsub
(bad)
(bad)
mov
mov
pushf
adc
test
add
std
(bad)
jmp
pop
sti
mov
cli
fcom
fwait
std
in
imul
jecxz
lods
add
cmps
sbb
add
test
cmc
mov
int3
cmps
jle
out
fnstcw
fwait
(bad)
jecxz
mov
add
xchg
add
mov
sar
aad
std
out
jns
mov
mov
pop
add
mov
(bad)
out
loope
mov
fstp
lock
aad
in
jmp
clc
(bad)
(bad)
sti
lods
or
mov
(bad)
mov
rol
popf
das
(bad)
cmc
add
(bad)
xor
ret
fdivr
std
icebp
sub
into
or
mov
std
rol
std
out
cmp
mov
cli
mov
mov
icebp
cwde
pop
(bad)
(bad)
clc
rol
push
and
retf
adc
cli
in
add
aam
jne
cld
std
rol
shl
add
fstp
lds
loopne
add
std
(bad)
in
adc
shr
or
mov
cli
mov
stos
or
repnz
cmp
clc
rol
mov
in
mov
sti
idiv
(bad)
repz
lahf
pop
into
xchg
and
xlat
add
into
add
sti
in
add
neg
mov
cmc
mov
outs
add
(bad)
xor
outs
and
xchg
adc
cli
idiv
push
in
retf
sub
mov
scas
ins
adc
ret
xchg
push
addr16
pop
jecxz
clc
loope
loopne
cmp
pop
stc
xchg
pop
in
fistp
mov
jmp
cld
icebp
lock
shr
loopne
jecxz
cmps
inc
ds
icebp
test
xchg
xor
mov
cld
mov
hlt
fiadd
cmc
in
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
dec
mov
mov
loop
jne
fsub
inc
or
push
mov
popa
inc
mov
daa
lea
xor
lods
and
mov
cld
cdq
mov
mov
shr
fnstenv
dec
xchg
add
sbb
rcl
or
inc
mov
dec
xor
push
aad
ds
and
(bad)
inc
(bad)
inc
mov
push
loope
and
dec
mov
jge
inc
sar
xor
sub
push
daa
sbb
sbb
push
mov
sbb
not
(bad)
popf
and
inc
sub
(bad)
loopne
and
adc
adc
test
rcr
dec
add
push
shl
hlt
inc
shl
mov
xor
add
or
jno
sub
test
or
pop
push
sbb
ror
clc
pusha
ins
lods
push
pop
add
lock
shl
int3
adc
adc
and
add
adc
test
xor
test
pop
xchg
and
adc
add
sub
jb
adc
loope
or
xchg
mov
mov
xchg
or
add
inc
or
pop
and
dec
pusha
icebp
add
mov
in
sub
mov
ret
push
mov
xor
xor
adc
push
ja
mov
or
or
add
and
movs
push
pop
dec
in
pusha
add
add
pop
inc
push
jl
push
inc
add
sbb
pushf
mov
add
in
ret
sub
add
cwde
pusha
ret
push
jmp
push
mov
adc
push
ror
sub
rcl
jae
xor
xchg
jmp
stos
lods
es
inc
add
mov
pop
fs
xor
add
in
pop
adc
jmp
and
adc
popa
xchg
adc
add
or
inc
add
mov
mov
jl
push
push
loope
xor
daa
mov
xor
ror
cmp
push
cmp
adc
cmp
loopne
add
or
fsub
shl
rol
sbb
nop
sbb
add
rcr
mov
stos
and
test
mov
pop
sub
inc
inc
mov
lock
push
popa
push
rol
(bad)
test
lock
or
sub
xor
add
push
pusha
ret
or
mov
add
icebp
add
and
add
or
aas
xor
inc
xor
xor
xor
pop
sub
cmps
adc
xor
push
add
push
and
sub
cmp
xor
leave
add
and
push
pop
push
xlat
movs
push
inc
add
jno
sub
adc
inc
sbb
int3
adc
add
dec
shl
sub
inc
push
fisttp
adc
cmps
add
sub
rcr
out
je
and
shl
fwait
adc
dec
mov
shl
dec
fwait
add
aaa
cmps
pushf
xchg
test
(bad)
cwde
mov
loope
inc
movs
pop
mov
nop
add
inc
mov
shr
clc
jmp
mov
push
inc
test
les
(bad)
xchg
or
mov
gs
push
call
add
lods
mov
add
mov
fsub
adc
sbb
xchg
xchg
mov
mov
jbe
stc
inc
prefetchnta
add
rol
add
push
sbb
cmp
or
mov
mov
add
pop
les
rol
inc
sub
sbb
xor
or
add
push
cmp
stos
(bad)
stc
sub
or
mov
cmpxchg
sub
sub
add
sub
sbb
and
imul
or
loopne
adc
nop
xor
mov
jnp
rcl
clc
push
das
outs
add
addr16
or
rol
add
add
sub
loop
pop
dec
sub
loop
add
jecxz
sbb
adc
call
mov
xor
rcl
mov
stos
fs
sbb
or
je
xchg
pop
and
add
push
mov
adc
or
inc
adc
xor
adc
and
adc
or
pop
or
lods
jge
les
xor
xor
pusha
cmp
fst
and
or
sub
shl
loopne
aas
or
add
nop
loope
jle
add
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
test
shl
mov
cmp
lods
pop
hlt
test
dec
test
xor
push
in
test
sbb
mov
xchg
xchg
inc
pop
leave
push
inc
and
sbb
pop
pop
and
pushw
push
lods
sbb
mov
in
mov
rcl
add
and
inc
mov
js
or
inc
adc
mov
add
mov
mov
adc
pusha
and
xor
mov
inc
xor
int3
enter
pop
mov
xchg
mov
lea
sub
stos
arpl
xchg
jb
es
and
ret
sub
mov
cmp
push
es
add
jmp
mov
rol
jb
in
mov
and
ret
dec
add
adc
mov
inc
sbb
sub
or
scas
das
pop
jo
xor
sub
mov
sub
jno
mov
int
repz
and
pusha
xor
inc
add
sub
mov
call
add
dec
or
and
mov
push
fiadd
inc
loop
sub
or
or
add
sbb
push
movs
nop
mov
nop
rol
xor
shl
cmp
sbb
aam
retf
inc
outs
mov
cmp
ret
or
and
arpl
in
rol
je
test
and
pop
inc
xor
add
or
cmp
xor
xchg
push
xchg
gs
push
sbb
pushf
icebp
leave
ins
xchg
ror
add
jmp
mov
add
dec
mov
push
add
cmp
add
rol
jo
into
cmp
leave
xor
add
outs
lods
rol
inc
or
and
iret
add
ins
mov
or
add
sub
(bad)
push
mov
add
sbb
xor
mov
inc
and
sbb
push
mov
mov
xchg
sub
push
or
ror
adc
sbb
shl
and
sub
cmp
call
or
popa
inc
cmp
jno
jo
(bad)
(bad)
jmp
rol
mov
cdq
bound
dec
leave
sets
dec
mov
test
add
(bad)
icebp
inc
jg
icebp
add
shl
add
jge
sbb
loopne
sbb
(bad)
sub
and
adc
xor
and
mov
add
add
adc
or
push
and
add
inc
jno
and
mov
jae
je
rol
stos
les
pop
push
inc
mov
add
dec
aam
(bad)
sbb
jmp
leave
adc
dec
pop
(bad)
(bad)
sub
push
in
int
inc
xor
add
mov
ror
push
(bad)
retf
in
add
hlt
inc
mov
push
cwde
popa
xchg
ins
lock
add
push
sbb
dec
or
sub
add
push
pop
jg
iret
xor
mov
cmp
adc
daa
adc
mov
add
push
adc
jge
lds
jo
pop
(bad)
sar
cmp
test
cmp
and
push
add
movs
sar
push
add
rol
sub
and
inc
add
inc
add
dec
sbb
rol
add
sub
or
fucomip
inc
daa
outs
and
xor
pop
add
xor
push
mov
cmp
xor
xor
or
add
dec
loopne
inc
sbb
add
loop
test
pusha
xor
and
(bad)
add
popa
popa
and
add
jo
push
cld
adc
rol
jno
dec
fsub
sbb
inc
add
xlat
clc
mov
je
out
imul
push
movs
rol
sub
push
outs
rol
inc
xor
add
and
dec
inc
or
loopne
push
sbb
add
dec
enter
add
and
test
push
xor
add
out
xor
pop
mov
inc
sbb
dec
adc
or
test
or
out
sbb
sbb
fwait
cmp
inc
xchg
je
or
push
nop
pop
add
mov
adc
or
movs
and
pushf
xchg
or
push
mov
inc
add
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
or
or
cmp
mov
ret
xchg
and
sbb
push
mov
or
adc
mov
sbb
(bad)
jecxz
aaa
mov
mov
jle
sbb
xchg
(bad)
movs
inc
sub
call
xchg
push
add
adc
inc
movs
iret
or
les
dec
dec
inc
add
movs
pop
test
repnz
push
adc
xchg
jp
lods
shl
shl
pop
mov
retf
shl
adc
mov
xchg
inc
inc
add
add
pop
data16
repnz
mov
test
test
or
add
(bad)
retf
cmp
repnz
add
inc
mov
leave
xor
pop
xchg
and
add
fnstcw
in
movs
mov
jecxz
adc
or
in
lods
pusha
push
mov
and
add
bound
pop
and
jo
cld
push
pop
and
add
and
or
add
cmp
xchg
lock
or
jle
adc
mov
test
sbb
dec
sbb
popa
sbb
or
test
inc
sub
pop
jno
xchg
rol
or
test
or
js
ror
mov
icebp
add
xchg
pusha
lock
retf
add
and
add
pop
inc
adc
sbb
shl
mov
enter
into
call
xor
outs
cmp
add
pop
mov
adc
inc
cmp
stc
add
sbb
mov
adc
minps
cmp
nop
test
not
nop
add
adc
es
push
sbb
dec
add
es
inc
inc
and
in
test
inc
sbb
adc
add
sbb
in
ror
int3
repz
mov
mov
outs
push
imul
or
and
sahf
inc
inc
(bad)
adc
rol
jb
rol
jmp
sbb
inc
rol
lods
xor
dec
sub
add
adc
push
out
or
add
outs
adc
dec
adc
add
rcl
add
pop
test
or
out
ret
mov
call
out
lds
or
add
cmp
pop
sbb
xchg
adc
pop
push
jo
or
xchg
and
or
ins
inc
adc
xor
add
pushf
and
mov
push
aas
adc
inc
mov
or
adc
inc
(bad)
sub
mov
inc
mov
sbb
mov
add
push
jo
sub
jmp
sbb
sbb
or
push
cwde
push
ja
adc
popf
test
sub
pop
push
lds
adc
sbb
(bad)
sbb
dec
pcmpeqb
shl
adc
sbb
adc
aas
pop
popa
inc
add
rol
pop
xor
xor
sbb
pop
pop
loop
cmp
add
add
hlt
or
push
fwait
xor
jnp
sub
add
xor
or
enter
ret
cmc
clc
cli
jmp
or
cmp
test
push
pop
call
mov
mov
or
add
pusha
add
or
or
ins
mov
sub
add
mov
add
sbb
stos
rol
ror
sub
inc
cld
jo
pop
aam
sbb
inc
add
add
and
or
sub
add
and
mov
loopne
mov
jo
adc
ror
loopne
inc
dec
jno
or
or
xchg
jo
mov
clc
loope
cmp
add
movs
and
jmp
add
add
pusha
sbb
adc
jmp
xchg
adc
inc
push
inc
or
cwde
or
bound
sub
or
mov
sub
pusha
or
mov
es
ret
adc
add
lock
or
add
bound
and
pop
je
ret
pop
loopne
rol
mov
add
xor
dec
lods
mov
daa
push
and
mov
lock
xchg
or
mov
mov
or
and
xor
ret
adc
(bad)
xor
aaa
mov
and
jno
add
mov
or
or
inc
sbb
rcr
clc
lds
pop
xchg
add
push
test
and
add
or
inc
sub
add
add
or
add
or
jo
or
loope
dec
pop
test
and
mov
dec
stos
adc
inc
sbb
movs
or
sbb
dec
mov
pop
aam
gs
inc
sbb
pusha
and
inc
adc
mov
and
stos
lahf
stos
clc
lock
mov
loope
push
dec
cmp
xchg
cwde
call
imul
jbe
or
cmp
xor
lahf
inc
push
dec
pop
or
mov
cmp
jno
inc
xchg
dec
aas
gs
loope
push
sub
enter
add
adc
inc
mov
push
sub
pop
adc
mov
push
retf
aas
aaa
add
rol
sub
fadd
jo
pop
mov
and
mov
sub
icebp
push
scas
inc
add
shl
adc
push
js
int
popa
frstor
sub
(bad)
sbb
or
(bad)
or
add
xor
inc
jmp
or
sbb
out
gs
xchg
inc
(bad)
shl
imul
xchg
sub
loopne
dec
adc
rol
adc
inc
add
xchg
push
les
inc
and
or
or
loopne
or
shl
cld
cmp
dec
adc
xor
pop
add
add
add
adc
adc
loopne
inc
fs
dec
pop
jno
xchg
pop
dec
rol
add
add
outs
lods
loopne
pop
sahf
cmp
retf
add
mov
enter
fs
inc
sub
inc
and
or
cmp
push
cmc
shl
sbb
mov
lahf
lock
ror
adc
xor
push
or
hlt
add
retf
sahf
es
out
es
push
or
pushf
test
inc
sbb
adc
inc
or
sub
ins
inc
ret
test
xor
mov
call
and
rol
add
les
mov
pop
jo
inc
cmp
xor
and
mov
or
push
imul
test
sub
inc
outs
fdiv
or
or
dec
jp
push
mov
mov
inc
inc
pop
xor
mov
add
adc
or
jl
add
add
push
nop
add
mov
(bad)
jb
push
ret
loope
rol
push
adc
adc
es
adc
rcl
mov
push
mov
test
test
or
lock
push
jp
or
test
lea
pop
inc
xor
dec
jae
or
pusha
leave
sub
sub
xchg
push
inc
sbb
ret
inc
int
push
inc
pop
or
hlt
popa
inc
xor
add
or
sub
xor
rol
je
fiadd
xor
mov
sub
lock
push
sbb
add
inc
daa
or
or
xchg
push
call
(bad)
pusha
pop
or
rol
add
cwde
sbb
scas
sbb
js
or
push
add
out
js
or
ficom
inc
pop
adc
add
or
inc
inc
add
mov
es
mov
add
adc
ror
adc
pusha
and
sub
dec
inc
test
inc
inc
(bad)
sub
sbb
push
jmp
icebp
cmp
mov
push
sbb
add
adc
pop
or
and
sbb
add
add
sub
add
ret
popa
add
je
add
(bad)
rol
cmp
add
xlat
call
aaa
mov
loop
mov
mov
add
cwde
ret
adc
fadd
sbb
enter
add
pop
sbb
adc
mov
jne
rol
inc
add
retf
imul
xchg
and
or
test
mov
dec
test
adc
call
add
jo
mov
mov
and
pop
add
push
adc
js
mul
xor
icebp
xor
dec
cld
inc
add
xchg
mov
dec
mov
push
push
mov
add
xor
sbb
int3
movs
loope
imul
xchg
add
xor
les
nop
and
outs
jo
or
popa
adc
addr16
xchg
xor
push
test
or
repz
inc
lock
adc
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
mov
sub
or
adc
xchg
test
xchg
dec
pop
dec
shl
xchg
add
stc
add
or
inc
sub
add
add
add
add
or
ret
add
mov
lea
xchg
(bad)
mov
push
add
sbb
pusha
xchg
dec
push
sbb
xor
push
mov
and
add
stc
add
or
inc
sub
add
add
or
dec
inc
adc
mov
(bad)
call
out
and
stc
test
sbb
sti
push
jmp
cmp
aad
push
add
and
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
or
outs
ins
inc
jecxz
mov
cld
imul
inc
jg
mov
sti
aaa
ret
data16
test
mov
add
enter
test
cli
jae
or
sbb
or
or
push
repnz
aas
sub
pusha
sbb
cmovne
add
and
stos
shl
cmp
dec
jne
mov
cmp
mov
shl
cmp
icebp
sgdtd
sbb
test
shl
mov
mov
inc
xor
in
aas
adc
cmp
mov
stc
aaa
mov
or
enter
pop
mov
sar
(bad)
ret
inc
repnz
sbb
push
or
and
js
inc
jo
inc
inc
lds
push
lahf
loopne
inc
and
std
out
or
inc
and
add
dec
(bad)
sti
adc
in
push
push
add
inc
(bad)
push
add
sub
aas
ds
push
ror
and
out
push
inc
mov
and
or
mov
nop
pop
push
xor
add
inc
cld
repz
jg
inc
sahf
push
pop
(bad)
arpl
dec
jbe
adc
ror
call
loope
sbb
xor
iret
xor
push
ss
or
sbb
pop
add
es
ret
cmp
and
sbb
adc
and
rol
dec
add
iret
add
mov
or
(bad)
adc
cs
pop
loopne
jmp
mov
ror
adc
sub
push
lock
sub
aas
ror
fwait
(bad)
mov
mov
dec
cmc
add
pop
add
cld
xchg
mov
rol
push
cmp
pop
sub
xchg
loope
inc
sub
loop
inc
scas
cld
jecxz
sbb
and
push
xchg
jo
sbb
xor
pop
adc
into
or
adc
dec
xor
and
add
iret
push
out
hlt
sar
and
adc
mov
inc
push
or
xchg
data16
xchg
sub
cli
iret
movs
mov
adc
lea
push
test
or
ss
add
ss
loopne
or
je
push
das
pop
bound
and
mov
in
add
xor
cld
jae
pop
pop
sbb
popa
repnz
sbb
test
or
mov
xchg
mov
jno
or
xor
cld
dec
int
in
xchg
cmp
inc
nop
sbb
add
into
aas
mov
push
adc
bswap
push
or
test
test
cbw
ror
xor
and
xlat
ins
ror
pushf
repnz
xor
cld
xchg
add
cmps
cld
adc
or
enter
iret
push
call
cmp
add
sbb
pop
data16
jecxz
fiadd
inc
sbb
scas
inc
xchg
mov
in
mov
(bad)
jb
or
add
mov
std
ror
jg
arpl
dec
sar
aas
xchg
dec
xor
add
xchg
(bad)
loop
test
sbb
push
sbb
cmp
jo
add
adc
dec
pop
push
stc
inc
pop
cli
adc
inc
add
data16
fmul
or
or
call
push
push
fadd
fnstcw
push
add
mov
enter
xchg
mov
or
pushf
add
jns
cmovb
mov
sbb
icebp
(bad)
adc
mov
test
push
add
xchg
push
add
dec
rol
enter
fadd
sbb
daa
in
xor
add
mov
xor
cmps
test
mov
sub
and
sbb
test
mov
inc
cmp
add
enter
mov
push
enter
cwde
movs
aas
clc
inc
and
and
or
test
nop
add
popa
and
mov
sbb
imul
dec
sub
and
sbb
push
add
aad
sbb
lds
pushf
jo
lods
push
pusha
xor
xor
(bad)
clc
mov
adc
adc
adc
and
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
add
lock
je
jecxz
adc
movs
pop
clc
out
jecxz
add
fld
fwait
mov
in
inc
push
push
push
mov
and
stos
lahf
stos
clc
lock
(bad)
xor
rcl
shl
iret
mov
add
add
sub
pop
sub
out
int3
sbb
test
add
in
dec
aas
add
loope
and
inc
jg
js
inc
lock
xchg
sbb
mov
mov
or
stos
adc
push
push
sub
mov
xor
out
mov
mov
imul
or
mov
adc
ror
push
sub
adc
xchg
sub
xchg
inc
add
rcl
fsub
lahf
mov
add
test
or
jecxz
ror
cmp
jns
out
xchg
xchg
jg
(bad)
or
and
aam
aas
into
pusha
adc
pusha
enter
xchg
adc
mov
jg
cld
icebp
(bad)
adc
aas
pop
or
inc
dec
(bad)
adc
add
(bad)
leave
loopne
das
test
retf
clc
mov
inc
xor
dec
inc
dec
or
test
rol
sub
and
sub
mov
dec
push
(bad)
clc
mov
loopne
add
rcl
mov
stc
push
push
imul
and
xor
add
or
inc
xchg
les
rol
jl
add
xor
test
adc
lods
loopne
dec
adc
clc
les
cvttps2pi
add
jmp
nop
or
jne
add
or
xor
add
lock
xchg
push
xchg
ret
das
dec
push
stc
xchg
sub
cwde
add
test
xor
and
cld
adc
cvttps2pi
mov
mov
inc
xchg
shl
in
inc
jno
mov
xor
pop
add
add
or
add
pop
cmp
inc
cmp
xor
arpl
mov
aas
jmp
dec
push
stos
popa
push
jo
or
add
inc
outs
fdiv
or
or
dec
sbb
push
add
pop
cld
inc
inc
pop
xor
mov
add
xchg
mov
and
cmp
or
(bad)
mov
js
sbb
add
jb
out
or
push
mov
syscall
sti
push
push
imul
inc
and
mov
adc
inc
sub
cld
add
sar
sbb
mov
ret
sub
test
add
sub
cmp
or
cmp
(bad)
cld
ret
mov
jmp
xchg
add
xor
ret
test
fld
loop
cs
sbb
outs
xor
test
cmp
add
inc
ins
rol
mov
mov
or
adc
cld
rol
inc
dec
or
enter
sbb
leave
movs
fs
nop
sbb
add
adc
lock
jae
push
cld
inc
jp
loopne
xor
je
out
and
add
add
aas
push
hlt
adc
inc
pusha
loope
out
or
test
dec
add
rcr
adc
sub
add
cli
add
push
add
nop
push
mov
out
rol
xor
mov
jmp
and
adc
adc
stc
pop
add
or
push
nop
loop
add
add
pusha
pusha
adc
cmp
sbb
and
ficomp
inc
add
cmp
xor
adc
sub
and
or
pop
imul
and
lock
mov
shr
or
lods
dec
adc
sbb
or
test
ins
dec
add
xor
jg
mov
mov
sbb
test
add
mov
add
cmp
xchg
or
call
add
mov
fmul
mov
movs
loopne
xlat
sbb
and
and
cdq
inc
gs
inc
xor
xchg
and
add
and
add
or
inc
sub
add
add
add
add
or
add
or
(bad)
(bad)
rol
shl
ret
xchg
and
enter
mov
xor
xchg
mov
adc
add
xor
ss
int
sub
push
mov
in
js
fadd
sbb
arpl
cmps
das
movs
push
cmp
push
into
adc
inc
adc
cwde
mov
shl
and
dec
bound
out
dec
loope
pop
fiadd
inc
aaa
dec
xchg
add
fs
rcl
add
lea
xchg
ror
sub
mov
push
je
pop
shr
and
mov
pop
mov
adc
add
les
jns
pop
xchg
mov
test
call
mov
push
mov
sbb
and
pop
mov
ficom
stos
adc
mov
ins
add
mov
push
push
dec
dec
ficom
jo
and
movs
add
xor
call
add
ror
lahf
in
test
inc
and
mov
inc
and
rol
pop
add
inc
xor
lods
loop
add
adc
clc
or
or
test
or
xor
and
loopne
and
xor
push
push
xchg
add
test
dec
pop
and
push
test
lods
mov
adc
xor
push
push
jns
xor
fs
test
mov
in
(bad)
xor
xchg
aam
jo
xchg
push
sub
jo
adc
inc
dec
(bad)
sub
mov
icebp
add
xchg
pusha
lock
mov
and
add
pop
adc
rcr
shl
adc
xchg
js
out
add
test
xor
outs
cmp
add
and
adc
inc
cmp
dec
push
sysret
sbb
mov
adc
minps
rcl
add
adc
es
imul
and
add
dec
add
mov
es
inc
inc
and
dec
xor
(bad)
es
adc
sbb
and
cmp
xor
add
or
mov
add
cld
adc
or
xor
hlt
push
xor
pop
fs
add
cli
jmp
sbb
inc
rol
lods
loopne
inc
ins
js
dec
sub
add
adc
and
icebp
add
inc
lock
dec
rol
pushf
loopne
or
sub
xor
cmp
push
pop
les
pop
jno
and
sub
xchg
add
mov
add
data16
inc
pop
add
add
add
dec
or
xchg
icebp
add
pop
cwde
or
ret
add
and
push
or
pushf
and
mov
push
aas
pop
mov
inc
mov
or
adc
xor
dec
xor
add
mov
fwait
ror
pusha
sahf
cmp
add
sub
aaa
test
inc
add
add
add
and
or
mov
pop
icebp
add
push
movs
xor
int3
adc
hlt
inc
(bad)
and
inc
pop
or
mov
add
sub
adc
daa
jl
add
mov
adc
dec
loopne
mov
or
call
xchg
inc
mov
test
add
ror
add
pushf
pushf
sbb
add
pushf
in
sbb
ror
push
sub
or
test
jecxz
mov
aam
sub
ret
test
enter
test
mov
jne
add
push
sub
add
jmp
add
inc
add
pusha
popa
adc
fadd
jle
xchg
or
mov
add
icebp
or
dec
inc
add
adc
add
xor
and
fnstenv
or
pop
bound
mov
adc
enter
test
push
xor
cmp
add
rol
aam
and
push
cmp
rol
add
push
aam
mov
ror
push
retf
xchg
push
les
pop
fsub
fist
xchg
ins
rol
pop
aam
push
add
xor
xor
push
inc
sbb
adc
aas
dec
loope
mov
popa
add
push
mov
and
or
and
call
jo
dec
sbb
adc
shl
inc
dec
or
cld
cld
(bad)
clc
push
loopne
dec
les
mov
lock
cdq
adc
adc
pop
sub
add
sbb
or
lock
lods
jb
cwde
mov
or
push
sbb
or
scas
pop
dec
inc
inc
sbb
stos
xchg
pop
clc
rcr
clc
lds
pop
xchg
add
pop
test
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
das
mov
adc
and
test
outs
mov
into
scas
and
inc
sbb
fisttp
std
sbb
xlat
add
and
stc
sbb
push
int3
cmp
test
sub
sbb
mov
cli
xchg
into
lahf
mov
push
push
mov
call
lahf
(bad)
lods
fwait
jae
mov
and
outs
add
cmp
push
or
add
fs
in
dec
jg
xor
loopne
mov
add
mov
xor
or
or
pop
daa
enter
dec
sub
or
mov
mov
add
adc
jb
dec
lahf
inc
sub
jb
leave
repnz
mov
inc
in
or
cmc
inc
retf
xor
inc
or
cmps
or
icebp
add
stos
iret
lahf
int3
add
sub
adc
or
add
test
xchg
sbb
mov
add
inc
or
(bad)
or
pop
loopne
pop
xchg
xor
add
jno
and
add
push
push
mov
add
xchg
loope
add
or
or
dec
das
cmp
mov
xchg
pop
dec
mov
ror
in
add
fistp
adc
sub
rcr
das
mov
xor
or
hlt
or
lea
sub
push
jo
sbb
imul
rol
push
in
adc
xlat
inc
sub
or
add
or
rol
jl
mov
outs
enter
or
mov
dec
sbb
push
adc
adc
dec
sub
leave
inc
sbb
in
mov
inc
imul
jl
sar
mov
xor
inc
and
nop
and
mov
arpl
leave
xor
xchg
mov
ror
push
sahf
or
mov
es
adc
scas
mov
adc
and
add
retf
inc
add
aam
inc
adc
loopne
mov
xor
jmp
xlat
shr
cmp
loopne
add
add
add
ins
xor
or
addr16
(bad)
mov
push
inc
test
int3
adc
pop
inc
dec
and
cld
ror
or
or
push
xor
dec
jae
ja
rol
nop
cmp
add
sbb
dec
inc
mov
add
mov
and
loop
sub
add
add
jno
add
xor
dec
sub
push
push
cmp
add
sub
rol
cmp
sub
test
adc
hlt
and
sbb
pop
adc
inc
les
dec
or
add
call
cdq
push
add
add
mov
lods
jo
or
jp
sbb
out
addr16
movhps
repz
or
mov
leave
and
xchg
dec
icebp
or
inc
pop
sbb
stc
and
lods
rol
or
xor
jo
push
and
sbb
add
inc
mov
add
lods
lods
out
daa
jns
adc
rol
mov
add
fldcw
and
rcr
pop
call
loopne
xchg
xchg
loopne
add
pusha
shr
adc
sbb
dec
test
outs
movs
ret
jno
pop
and
adc
sbb
and
inc
pop
adc
or
(bad)
in
rol
inc
inc
add
mov
adc
push
add
mov
add
cvttps2pi
add
lods
and
nop
inc
add
inc
add
es
sbb
rol
add
fisttp
adc
and
mov
adc
push
loopne
or
loopne
push
add
add
add
cmp
xor
popa
movlps
sbb
lock
adc
push
nop
add
inc
pusha
loopne
or
and
fidivr
aaa
sub
dec
xor
add
ss
and
lock
dec
iret
and
rol
mov
or
or
adc
aaa
inc
xchg
xchg
sbb
or
and
or
mov
sub
ror
add
and
add
mov
push
js
or
shl
dec
mov
push
cmps
xor
push
loopne
add
fadd
out
adc
adc
mov
fs
jb
adc
les
and
adc
and
add
xor
sub
mov
cmp
shl
shl
mov
pusha
add
mov
adc
sbb
and
or
jecxz
(bad)
mov
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
adc
ret
xchg
and
dec
mov
lds
xlat
inc
fisttp
jno
cmp
and
and
loope
outs
dec
adc
xchg
and
mov
or
jne
enter
mov
cmp
inc
imul
sub
add
mov
and
and
sub
jno
and
pop
xor
xchg
xor
ror
mov
loop
sub
add
pop
ss
nop
add
xchg
and
aas
data16
or
mov
jne
sub
or
int
enter
inc
popf
cmp
(bad)
sbb
js
mov
loopne
and
inc
outs
add
sbb
adc
shl
push
leave
mov
push
inc
or
pop
cld
cmp
or
rol
or
imul
dec
movs
push
add
mov
sub
inc
aaa
inc
int3
xor
jle
push
sbb
test
xor
inc
add
and
and
lds
js
movs
(bad)
or
mov
test
fs
and
add
ret
or
lock
add
or
pop
cmp
rol
les
and
add
mov
add
leave
outs
push
lea
xor
adc
push
ja
mov
or
or
add
and
movs
push
pop
dec
in
pusha
add
add
pop
inc
push
push
add
sbb
pushf
mov
add
in
ret
sub
add
cwde
pusha
ret
add
mov
push
mov
adc
add
and
adc
mov
xchg
loope
cmps
es
inc
add
mov
inc
fs
add
and
pop
adc
jmp
add
and
adc
adc
mov
push
mov
int3
xor
lods
mov
inc
ret
es
push
push
loope
xor
daa
je
cmp
push
xchg
xor
mov
mov
inc
pop
cmp
push
cmp
in
cmp
adc
cmp
loopne
add
or
fsub
shl
rol
sbb
nop
sbb
add
rcr
jl
test
xlat
test
mov
pop
sub
inc
add
add
push
popa
push
rol
(bad)
mov
or
popf
fdiv
enter
pusha
ret
or
cmp
jb
pop
(bad)
icebp
add
and
add
push
inc
xor
sbb
pop
sub
movs
adc
xor
lock
push
and
sub
in
fdiv
add
add
ret
rcr
repnz
inc
add
jno
sub
les
mov
(bad)
adc
add
dec
shl
sub
sbb
ror
daa
or
ret
xchg
push
lock
sub
cmp
mov
jae
adc
add
pop
pop
inc
je
or
xor
(bad)
fild
fistp
arpl
inc
pop
push
xchg
bound
inc
adc
mov
add
xchg
mov
adc
arpl
and
mov
push
add
fild
ins
rol
push
xchg
xchg
push
fadd
add
xor
or
adc
mov
ud2
pop
rol
(bad)
loopne
mov
mov
sbb
mov
add
pusha
add
inc
add
push
call
sub
and
inc
add
push
add
xlat
sbb
call
rol
xor
adc
xor
push
sub
pop
pop
loop
cmps
lock
mov
push
xchg
mov
mov
psubusb
pop
dec
inc
sbb
cmp
jl
pop
mov
add
add
pusha
add
cmp
inc
add
rol
nop
sub
les
ret
mov
(bad)
(bad)
xor
ret
add
loope
xchg
adc
and
sub
and
or
adc
sub
ss
add
and
or
or
inc
add
call
or
loopne
fisubr
bound
sub
add
mov
mov
test
adc
rcl
xchg
pushf
ins
bound
adc
into
and
cmp
add
cmp
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
(bad)
clc
xchg
aad
add
nop
inc
clc
scas
(bad)
mov
(bad)
cld
sbb
rcl
(bad)
mov
(bad)
sbb
inc
adc
sbb
or
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
inc
add
call
push
push
js
stc
inc
fadd
sbb
adc
into
or
fdivr
test
ins
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
inc
push
mov
(bad)
and
outs
loopne
xchg
adc
fdiv
inc
xchg
push
loope
(bad)
and
movs
leave
xchg
daa
sbb
or
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
(bad)
clc
xchg
aad
add
nop
inc
clc
scas
(bad)
mov
(bad)
cld
sbb
rcl
(bad)
mov
(bad)
sbb
inc
adc
sbb
or
add
add
adc
add
add
dec
add
sub
add
add
add
popa
xor
sbb
pop
add
mov
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
mov
jne
daa
cmps
fdiv
enter
dec
sub
in
in
std
jbe
in
jno
cli
cmp
scas
mov
enter
movs
mov
inc
jp
repnz
jne
test
cmp
repz
test
adc
xor
repz
cdq
sbb
mov
xchg
rol
mov
mov
ins
fsub
fcomp
cwde
leave
push
repz
aad
(bad)
repz
int
lahf
fcom
jl
pop
mov
retf
dec
mov
ret
std
retf
inc
ret
mov
push
mov
fs
jp
out
lock
imul
fld
in
xchg
stos
loope
imul
jmp
inc
scas
in
mov
scas
cdq
(bad)
(bad)
cdq
stc
stc
clc
out
dec
xchg
leave
pop
shl
std
out
cs
adc
icebp
mov
cmp
call
jp
push
fisubr
sub
and
imul
std
out
ins
add
push
pop
call
jmp
cmps
ficomp
imul
jmp
(bad)
scas
jecxz
jnp
dec
imul
push
and
xchg
sub
mov
jmp
ret
push
(bad)
inc
call
loopne
test
pop
push
add
mov
stc
std
clc
stc
enter
out
test
cmp
jno
movs
loop
aam
dec
idiv
idiv
(bad)
(bad)
(bad)
mov
sti
arpl
lds
mov
ins
(bad)
cli
inc
(bad)
cld
(bad)
(bad)
(bad)
cld
jmp
lods
in
jmp
jmp
test
pusha
lods
loop
cld
cld
std
pop
jg
aad
cmp
iret
scas
mov
sub
call
mov
jns
imul
and
fmul
(bad)
std
xor
div
clc
cmc
jmp
pop
cld
xlat
and
test
mov
cs
(bad)
fmul
lods
nop
stc
cli
std
das
arpl
mov
ins
ret
ror
jne
not
add
(bad)
cld
repnz
sbb
idiv
mov
ja
aas
stc
in
test
iret
sbb
jecxz
pushf
fimul
lock
fiadd
stc
out
lea
push
out
out
out
movs
jecxz
mov
inc
loop
nop
ret
div
mov
idiv
or
(bad)
cmc
jg
pop
sbb
jmp
(bad)
int3
stc
mov
cld
xchg
rcl
ror
push
div
div
xor
pop
mov
aas
add
pusha
or
and
xlat
add
(bad)
fstp
fisub
pop
cmc
mov
cld
loop
(bad)
stc
js
fisub
fisub
lea
xchg
je
int
mov
adc
bound
(bad)
fbld
push
and
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
cmp
dec
fldcw
mov
shl
mov
lds
jne
add
imul
and
mov
mov
mov
popf
dec
jbe
lods
mov
lea
into
mov
sub
shl
repz
ret
adc
leave
shl
adc
dec
test
dec
inc
stos
adc
retf
xchg
gs
sbb
outs
and
test
lea
dec
jno
fs
inc
mov
and
sub
push
(bad)
ficomp
inc
rcl
fstp
mov
dec
push
stos
adc
test
test
outs
mov
imul
(bad)
out
sub
pusha
jo
loopne
and
cmc
cld
cdq
pop
ret
mov
fbld
nop
shl
dec
loop
repnz
jle
mov
das
jle
call
enter
in
jmp
add
in
mov
mov
and
and
clc
adc
adc
add
sbb
cdq
or
mov
sbb
ror
or
and
sub
leave
jl
or
pop
loopne
xchg
cdq
mov
out
sahf
sub
and
inc
cmp
jo
lea
jmp
inc
sub
adc
xchg
push
lds
inc
push
push
call
into
pop
pop
jo
mov
push
or
add
adc
add
daa
pop
xchg
sti
inc
rol
aam
cmps
pushf
pop
push
push
inc
sbb
movups
fs
mov
fild
ficomp
std
inc
repz
and
and
or
addps
shl
lahf
and
jns
jno
cdq
cmps
std
in
push
fs
sub
jmp
out
xor
setl
in
cmps
std
fs
lods
fstsw
inc
push
jo
ret
cmp
xchg
and
mov
test
xchg
nop
loope
sbb
lods
rol
cmp
jns
jbe
mov
aas
pop
call
push
fwait
push
stos
mov
out
sbb
adc
cmp
dec
repnz
sahf
imul
inc
mov
ret
out
mov
add
adc
mov
cmp
stos
mov
icebp
call
xchg
outs
stos
sbb
or
add
sar
pop
pusha
mov
test
aam
add
mov
ja
(bad)
(bad)
or
or
aas
pop
cmp
add
adc
inc
xchg
add
fnstcw
shl
idiv
mov
push
jmp
adc
and
ret
cmp
and
cmp
clc
xor
mov
and
ss
addr16
ror
jl
into
dec
hlt
inc
or
rcr
add
pop
and
jns
pop
jl
mov
jg
inc
or
icebp
mov
(bad)
cmp
scas
je
int
mov
mov
xor
mov
aaa
inc
(bad)
cmp
rol
pusha
adc
inc
das
jge
adc
ror
int
das
push
add
inc
pop
popf
cmp
ins
nop
adc
add
cmps
scas
mov
inc
add
cwde
adc
lock
pop
(bad)
cmp
pop
or
add
inc
or
add
add
cdq
cwde
inc
jecxz
pop
mov
cld
js
or
lock
pusha
sbb
xor
stos
mov
in
and
pusha
int3
ret
push
(bad)
les
mov
inc
sbb
mov
das
test
adc
test
or
out
xchg
and
icebp
mov
xchg
mov
add
popf
or
add
push
popa
or
rol
jbe
divps
push
sub
or
popa
add
sub
icebp
push
mov
cmp
rcl
rol
mov
cmp
mov
arpl
dec
mov
sbb
mov
adc
jp
or
inc
cmp
xchg
nop
pop
test
(bad)
ror
sub
js
xchg
mov
or
inc
inc
lock
retf
push
pusha
mov
mov
pop
into
jb
jne
add
(bad)
jne
jo
add
dec
int3
bound
repz
enter
cwde
mov
push
test
add
repz
or
mov
and
inc
into
jb
repz
call
leave
pop
sbb
add
or
inc
sub
add
add
add
add
or
add
std
sbb
movs
add
mov
sbb
dec
mov
mov
inc
test
inc
add
dec
adc
mov
adc
mov
(bad)
mov
sbb
jno
movs
mov
sbb
push
jne
mov
dec
push
addr16
nop
aas
pop
retf
aam
push
stos
or
mov
int3
test
inc
fisubr
push
xor
pushf
xchg
arpl
fnstsw
repz
sar
les
mov
sub
js
sub
push
outs
sbb
int3
adc
add
pop
sub
push
mov
mov
sub
cwde
mov
add
ret
adc
jmp
lods
push
inc
inc
int
pop
lods
or
push
cmp
mov
pop
hlt
sub
lods
dec
cs
jmp
jg
mov
push
ja
(bad)
sub
cmp
repnz
ins
adc
std
fisttp
mov
ja
pop
jge
aam
retf
jb
cmp
and
out
add
adc
add
or
inc
sub
add
add
add
add
or
add
std
inc
push
dec
mov
or
jb
mov
sbb
dec
pushf
mov
sahf
cmp
lds
inc
sbb
in
adc
inc
mov
out
pop
pop
leave
bnd
ja
std
ret
loop
add
xchg
sub
enter
aaa
adc
hlt
pop
aaa
push
(bad)
cmp
and
(bad)
mov
sub
stos
inc
inc
rcr
ret
sbb
sar
mov
fcomip
jno
or
ror
ja
(bad)
add
sbb
ja
fcmovb
dec
inc
sbb
sbb
inc
mov
cwde
xor
fdivr
sub
arpl
ja
xchg
sbb
sbb
cmps
push
addr16
scas
ins
mov
jl
test
dec
scas
test
ffreep
adc
mov
scas
push
dec
jle
inc
and
rcl
repz
arpl
or
pop
fnstsw
push
jns
jmp
iret
pop
mov
xor
add
xor
push
mov
xor
inc
sub
or
test
jnp
je
pusha
sub
loope
and
push
push
or
adc
mov
loop
xor
fsub
add
and
imul
jecxz
inc
push
leave
arpl
push
(bad)
sbb
movs
inc
dec
sbb
xchg
dec
iret
es
hlt
mov
add
pop
mov
dec
and
bound
stos
stc
iret
ss
leave
in
sub
cdq
mov
movs
add
call
cld
imul
add
and
add
or
inc
sub
add
add
add
add
std
repz
(bad)
or
sub
ret
adc
cmps
cwde
dec
mov
inc
xor
clc
adc
mov
nop
xor
xchg
mov
or
pop
sub
(bad)
retf
loopne
nop
sub
popa
jno
in
dec
xchg
sub
mov
pop
xchg
jb
mov
ror
repz
mov
xchg
inc
popa
adc
movs
dec
push
pusha
inc
sub
push
sub
scas
dec
xchg
mov
pop
or
push
push
or
dec
scas
lods
pop
loope
dec
retf
fdivr
mov
pop
sub
cmc
call
sub
clc
or
add
mov
push
outs
out
in
leave
xchg
cmp
inc
jae
jl
mov
ret
stos
cmp
mov
fistp
sti
mov
push
and
iret
mov
mov
sub
pop
and
sahf
jo
jns
sbb
test
add
push
dec
dec
sbb
lahf
out
dec
std
or
je
pop
mov
icebp
pop
pop
add
jne
je
mov
add
mov
cmp
dec
sbb
and
test
xor
or
mov
cmp
xor
test
(bad)
js
pop
or
int3
pop
loop
sub
adc
push
push
mov
in
push
fisub
pop
and
mov
jmp
cmp
aas
(bad)
cmp
push
xor
das
js
bound
prefetch
or
ja
sub
and
mov
inc
loopne
popf
jbe
test
jns
call
lods
lock
cdq
jp
mov
jmp
aas
jg
lock
sbb
das
jmp
fwait
and
push
sub
and
inc
test
shr
xor
imul
enter
cmp
xchg
icebp
(bad)
aas
jge
in
mov
stos
in
mov
inc
add
shld
add
or
iret
es
cld
arpl
mov
es
into
sub
mov
mov
aas
inc
sub
aas
xchg
fcmovne
shr
mov
fwait
popa
mov
ss
fwait
(bad)
adc
or
mov
(bad)
(bad)
xchg
ins
pushf
adc
mov
stc
add
or
inc
sub
add
add
add
add
or
inc
mov
inc
jg
push
repnz
loope
xchg
add
test
dec
cmp
fsubr
jno
ret
jne
dec
mov
mov
adc
call
pusha
retf
ins
mov
mov
mov
push
sbb
dec
jbe
ss
adc
push
mov
ret
add
test
scas
das
mov
sub
xor
mov
sub
loop
push
adc
cdq
pop
fs
repnz
inc
fs
jg
lahf
jo
mul
or
add
call
adc
nop
jno
mov
mov
mov
or
ins
cwde
je
lods
mov
aaa
outs
dec
xor
cs
add
jmp
jns
ins
sar
sbb
jae
(bad)
jl
fs
ret
fld
(bad)
(bad)
int
test
out
sbb
mov
pop
sbb
mov
xlat
ds
mov
xor
xor
stc
ja
hlt
cmp
fsub
adc
jl
jne
jbe
cmc
neg
jg
test
loopne
into
adc
and
mov
lock
(bad)
sbb
push
pusha
loop
es
fcom
cmp
jecxz
aas
xchg
cmp
test
xor
loop
inc
add
(bad)
adc
jo
lds
repnz
sub
lock
inc
xchg
loop
ja
sub
sbb
xchg
imul
and
iret
pop
push
xchg
rol
add
popf
imul
xchg
cmps
popf
jp
sbb
mov
mov
inc
xchg
cmp
push
add
fcomp
mov
mov
mov
aas
jae
arpl
ret
stos
stos
stos
ret
jmp
push
mov
nop
add
cwde
stos
xchg
scas
ds
mov
cli
push
jmp
nop
fsub
adc
shr
pop
stos
lods
scas
aaa
clc
loopne
ds
call
push
or
in
scas
mov
mov
cwde
add
aas
inc
mov
(bad)
and
dec
icebp
(bad)
adc
push
jmp
jns
dec
lock
mov
aas
fs
sub
sbb
jo
xchg
or
(bad)
adc
inc
cmp
cmp
add
mov
in
pop
mov
jbe
and
in
push
cmp
out
stos
add
aas
pop
add
hlt
sub
mov
lods
mov
mov
xor
push
add
dec
addr16
loopne
cvtps2pd
nop
dec
div
bound
stos
lods
ss
fcmovnbe
int3
ins
mov
and
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
ror
sub
mov
inc
pushf
clc
(bad)
fistp
retf
jne
popf
lea
es
sbb
movs
mov
retf
lds
(bad)
sub
and
xchg
and
fcom
inc
sbb
sub
xchg
push
popa
outs
xchg
adc
aam
test
sbb
ins
pop
push
stos
push
stos
inc
bound
aaa
mov
push
or
shr
adc
xor
jne
ror
pop
push
imul
fist
jmp
repnz
xchg
jecxz
pop
jg
cmp
jecxz
(bad)
mov
fmulp
sbb
cmp
or
mov
pop
cmovle
xchg
mov
inc
cmps
adc
cli
iret
pop
xchg
inc
rcr
dec
mov
pop
adc
jbe
dec
icebp
daa
mov
nop
pop
fidivr
fcmovnu
add
call
inc
mov
xor
jg
mov
push
pop
call
in
lahf
dec
lahf
fidivr
enter
or
test
add
add
out
(bad)
lahf
jg
add
pusha
add
sbb
jnp
inc
sub
test
and
sub
inc
and
or
jle
mov
and
sub
pusha
xor
inc
ins
pop
mov
dec
loop
cmp
jecxz
dec
pusha
push
add
inc
push
mov
repnz
test
dec
ins
test
xor
pop
xor
mov
rcr
into
je
rol
xor
sub
xchg
sbb
jns
pop
out
mov
and
into
aas
popf
test
push
cmp
ror
sub
test
adc
mov
ins
retf
sub
les
and
xchg
add
or
add
cmp
mov
inc
fcmove
sbb
lods
mov
add
sub
nop
mov
xchg
icebp
(bad)
xor
and
xor
imul
fcom
inc
add
call
loopne
nop
cmp
les
or
mov
je
mov
and
adc
add
sets
iret
sub
int3
adc
xchg
add
call
jge
iret
pop
in
push
into
aas
push
or
dec
ds
xor
popa
and
inc
adc
(bad)
imul
mov
and
cdq
cld
nop
mov
repnz
adc
cmp
xor
adc
add
int
stc
ret
add
stc
add
adc
inc
sub
add
add
add
add
or
add
or
mov
aas
jg
adc
hlt
cmps
shl
xor
lds
mov
mov
inc
mov
and
int3
popa
mov
xchg
inc
lea
inc
shr
inc
xchg
sub
lods
sub
xlat
mov
mov
jecxz
dec
mov
(bad)
clc
(bad)
scas
sub
mov
dec
in
test
sbb
mov
sub
xlat
scas
mov
pusha
adc
add
jb
(bad)
dec
push
scas
dec
push
rcr
cs
pop
cmc
mov
pop
test
mov
test
sub
ror
rcr
sub
aaa
retf
fbstp
pop
scas
cld
ins
sbb
sbb
mov
or
sub
pop
jb
mov
(bad)
dec
add
not
ret
adc
call
dec
mov
movs
stc
adc
mov
xor
push
iret
push
out
outs
dec
ss
xor
jge
cmps
ins
std
scas
inc
push
test
pop
cli
mov
sub
fcmovu
popf
sti
ss
xchg
xor
and
xchg
addr16
ja
cld
push
iret
pop
xor
pop
add
add
dec
and
jge
repnz
pusha
jge
ins
loop
or
sub
adc
movs
inc
dec
and
sbb
sahf
jno
adc
fisttp
ss
xchg
inc
(bad)
in
push
xor
push
or
push
sub
nop
inc
push
or
es
popa
inc
sub
sti
hlt
fadd
jo
or
xchg
pop
test
pop
jbe
mov
jl
iret
cmp
mov
mov
sbb
jb
mov
or
test
add
xchg
pop
dec
pusha
add
movs
xor
cmp
mov
pop
pop
mov
shl
sub
movs
xor
jmp
retf
repnz
inc
sub
mov
mov
xchg
dec
dec
movs
dec
pusha
mov
inc
les
pop
sub
dec
ds
test
dec
push
add
cmp
or
cli
stos
scas
sub
sub
adc
and
dec
rol
sub
mov
idiv
stos
mov
pusha
add
fcomp
adc
push
and
mov
fisubr
scas
mov
and
and
inc
test
mov
lea
rcr
mov
mov
xor
add
rol
mov
pop
lods
in
shl
mov
nop
mov
adc
dec
add
or
xor
jmp
sbb
sbb
lea
into
push
les
into
or
pop
mov
or
adc
inc
add
and
hlt
add
pop
add
inc
or
pop
in
or
sbb
xor
aas
push
lock
cmp
add
lea
cmp
ja
pop
push
jae
pop
idiv
or
dec
xor
test
clc
inc
aam
lock
ss
jb
and
xchg
(bad)
jns
adc
sbb
cs
adc
jl
or
or
inc
and
pop
popa
xor
adc
test
mov
pop
mov
jecxz
repz
adc
dec
sub
rol
add
test
adc
dec
jl
inc
sbb
outs
add
cli
call
jmp
mul
ins
pop
sar
xchg
loope
mov
add
or
add
sbb
push
cmp
psllq
mov
mov
rol
pop
inc
add
aaa
js
push
add
rol
xchg
add
cmp
pop
add
push
cmp
add
loop
and
push
enter
lea
sbb
or
push
pop
fdiv
add
adc
mov
add
xor
or
mov
pusha
xor
pop
jg
add
inc
push
xchg
push
pcmpeqb
loope
js
mov
and
mov
inc
sbb
inc
or
and
mov
mov
and
sub
inc
dec
mov
or
ror
mov
push
int3
lock
inc
mov
add
loope
adc
retf
push
add
pop
sub
outs
lock
lock
ret
or
cmp
push
and
enter
xchg
mov
inc
sbb
mov
adc
mov
sbb
dec
sub
fwait
loopne
cmps
cmp
sbb
mov
adc
mov
jp
mov
in
mov
xor
add
enter
xor
cmp
add
push
test
je
push
or
add
and
add
stc
add
adc
inc
sub
add
add
add
add
or
add
or
mov
aas
xor
shl
xchg
mov
xor
pop
aaa
test
sbb
sbb
xor
cmps
dec
pushf
mov
xchg
push
xchg
fnstenv
jmp
mov
loop
push
es
pop
cld
mov
sbb
dec
arpl
push
mov
sub
cs
xchg
inc
aam
rep
imul
retf
jo
shl
adc
dec
test
dec
inc
stos
adc
retf
xchg
rcr
or
mov
mov
enter
jecxz
sbb
inc
xor
or
lods
mov
or
jmp
add
fcomi
sub
and
or
out
fwait
mov
fidiv
mov
or
test
mov
into
mov
(bad)
pusha
jo
jo
and
(bad)
cld
cdq
pop
ret
mov
(bad)
(bad)
iret
pop
cmps
imul
les
call
sbb
pop
stc
mov
mov
rcl
xchg
push
fidivr
fwait
pusha
aam
add
sbb
mov
or
push
retf
stc
xor
sti
in
and
add
clc
adc
adc
add
pop
fimul
xor
dec
and
jo
ret
inc
jmp
inc
push
(bad)
fdiv
test
test
repz
pop
jg
loopne
adc
add
xchg
pop
out
and
cwde
cmp
jo
call
or
pop
xchg
lock
inc
add
shl
cmp
and
rol
(bad)
mov
mov
mov
add
fdiv
loope
add
sbb
mov
or
cmp
jmp
les
sub
test
repnz
fdiv
jecxz
aas
add
adc
pop
test
mov
or
sub
sbb
cli
pop
sub
push
(bad)
scas
add
inc
inc
cmp
ins
rol
mov
mov
adc
mov
ds
push
in
inc
mov
aas
mov
jne
and
sbb
enter
cwde
mov
mov
mov
push
sub
and
or
push
or
loop
cmp
rol
mov
mov
xor
xor
xchg
xchg
add
sub
adc
out
inc
into
mov
xchg
imul
les
adc
pusha
or
or
in
sbb
sbb
repz
add
xor
rcr
(bad)
call
nop
lock
mov
movs
lods
mov
bound
sbb
cmp
sbb
adc
inc
ss
call
push
mov
repz
out
pop
or
xor
push
test
inc
int
aas
or
inc
sbb
cmp
int
and
rol
ss
cmp
inc
or
or
adc
ret
jmp
adc
mov
jle
inc
cmp
inc
les
inc
and
cld
push
or
pop
scas
push
push
arpl
cmc
xlat
adc
sub
jbe
add
inc
retf
cmp
rol
add
mov
mov
leave
inc
or
sub
adc
add
or
add
mov
xlat
xor
lahf
std
ret
add
clc
add
shl
adc
sbb
and
cmps
inc
mov
xchg
pusha
or
fst
nop
cmp
xchg
inc
pop
sub
push
cwde
ret
pusha
add
and
pusha
int3
ret
push
(bad)
les
mov
inc
sbb
mov
aas
add
adc
adc
or
popa
or
add
sub
or
nop
mov
and
in
add
sub
add
push
mov
lea
add
lock
pop
sbb
or
pop
inc
and
push
nop
xchg
and
inc
or
and
add
mov
es
leave
leave
dec
jp
adc
pop
add
push
loope
add
inc
ror
mov
movs
sub
cdq
mov
sub
add
add
repnz
ror
xchg
int3
add
ror
into
add
push
and
cmps
dec
int
pop
repz
popf
adc
mov
loopne
rcl
dec
into
jb
repz
call
mov
or
dec
iret
jp
repz
clc
movs
daa
aas
or
add
jg
add
and
add
xor
inc
sub
add
add
add
add
or
add
or
mov
aas
jg
adc
hlt
cmps
shl
xor
adc
pop
fsubr
mov
jp
fnstenv
in
xchg
and
pop
inc
leave
push
gs
xchg
xor
pop
sbb
out
xor
and
xor
adc
lea
xchg
ins
sub
movs
dec
jns
test
aad
rol
rcr
dec
xor
mov
fnstenv
rep
dec
sub
ins
je
cdq
dec
mov
fnstsw
aaa
sub
mov
sbb
loope
mov
movzx
pop
mov
sub
loopne
sub
cwde
xor
int3
cdq
jae
push
adc
push
adc
pop
xor
test
stos
pop
int
mov
jbe
push
adc
bound
cwde
sub
adc
mov
ffreep
add
ror
add
mov
int
and
push
dec
iret
cmp
mov
popf
pop
adc
jg
stc
(bad)
jns
mov
and
pop
iret
mov
loope
pop
out
scas
cdq
push
sub
gs
or
add
inc
or
xchg
inc
mov
loopne
call
jae
arpl
cmp
xor
cmp
pushf
mov
add
push
xchg
rol
and
push
cld
add
and
popa
dec
es
push
(bad)
les
adc
out
push
bound
add
sub
rol
cmp
in
push
cmp
adc
es
rol
invd
pusha
xchg
out
and
xor
mov
clc
xor
rcr
fadd
or
push
fsub
inc
cmova
mov
add
mov
icebp
rcl
dec
nop
add
sbb
das
iret
push
jl
or
add
fsub
ss
push
and
and
push
pop
adc
fcom
ss
pusha
jmp
frndint
lock
xor
test
pop
push
cld
xor
aas
add
pusha
rcr
add
movs
add
pop
mov
lock
cld
popa
or
rcl
nop
rol
or
and
cdq
cwde
sti
(bad)
or
push
and
sub
inc
dec
adc
cmp
lods
rol
inc
in
mov
mov
mov
mov
gs
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
sbb
mov
rol
mov
ret
xchg
mov
mov
movs
pop
pop
mov
ret
and
inc
mov
push
in
sub
mov
push
mov
sub
mov
int
push
aam
mov
inc
jle
adc
lds
xor
mov
shl
dec
xor
mov
push
jmp
mov
inc
in
shr
sub
into
dec
fwait
pop
mov
jno
mov
js
(bad)
aad
aaa
outs
fild
mov
push
fdivr
sub
xchg
bound
mov
pop
or
mov
out
push
pop
jnp
mov
or
fs
stos
dec
lea
out
(bad)
push
pop
mov
lea
ffreep
jg
cmp
(bad)
(bad)
and
inc
mov
movs
out
and
sbb
jne
retf
inc
in
adc
and
dec
mov
enter
xchg
mov
add
mov
cdq
jmp
sti
clc
out
jg
jmp
inc
sub
inc
add
retf
retf
pop
adc
add
fs
sub
rcr
mov
into
pusha
loop
imul
repnz
ror
(bad)
in
lea
cmp
dec
sbb
push
adc
xor
les
cmp
sbb
adc
or
mov
test
leave
fs
gs
cmp
retf
cwde
loopne
cwde
aam
rol
push
adc
and
pop
rcl
ror
mov
lds
jg
inc
or
into
adc
int3
adc
adc
(bad)
mov
adc
inc
xchg
inc
movs
xchg
shl
cmp
seto
and
inc
ret
sub
pop
ss
or
bound
push
lods
push
out
cmovae
jl
add
ret
(bad)
nop
or
add
add
inc
sub
in
mov
xor
push
movsx
add
int
sub
icebp
add
ret
mov
mov
sub
inc
mov
xchg
sar
ror
jo
pop
add
fcom
push
popa
ret
add
xchg
pusha
icebp
sbb
les
fdiv
(bad)
push
ja
nop
push
and
add
and
mov
mov
leave
and
test
jae
cs
adc
add
and
xor
inc
rol
sub
out
jp
test
mov
aaa
dec
test
mov
(bad)
xor
jbe
retf
add
sbb
fist
xchg
inc
dec
cmp
bound
inc
sbb
movs
xchg
sbb
stos
int
fisttp
cs
repz
icebp
lds
fdiv
dec
pop
push
cmp
mov
mov
or
dec
cmp
aaa
es
or
inc
sub
or
aaa
jecxz
cli
lea
inc
jge
(bad)
pop
mov
push
sti
pop
test
sub
or
sahf
pop
cdq
popa
push
jg
adc
ins
xor
ss
aam
rol
into
sbb
enter
inc
gs
mov
std
mul
xchg
jle
(bad)
mov
call
(bad)
pushf
in
sti
lock
das
inc
rcl
cmp
pop
in
(bad)
(bad)
cld
test
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
sar
sbb
mov
mov
add
sbb
rcr
cmp
leave
adc
cmps
cmp
jns
push
retf
sub
scas
push
aaa
sbb
enter
dec
adc
shl
cwde
dec
mov
test
bound
pusha
ret
cmp
cmps
lods
pop
mov
nop
lods
ins
pop
pop
std
ror
and
mov
lds
mov
sub
mov
push
(bad)
(bad)
mov
cmps
(bad)
pushf
push
add
gs
or
imul
ins
leavew
mov
sbb
outs
imul
and
sahf
sbb
dec
hlt
out
popf
push
mov
fdivr
push
test
add
sbb
fwait
pop
mov
aad
jb
mov
sbb
neg
das
xchg
jmp
xchg
mov
icebp
aam
jmp
int
pop
or
push
repz
out
icebp
xchg
dec
mov
ins
sti
shl
or
and
add
sbb
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
aam
adc
and
add
or
inc
sub
add
add
add
add
or
add
sub
rol
cmp
add
mov
stos
cwde
movs
popf
xchg
add
xchg
mov
or
push
xor
pop
and
imul
repnz
cmp
lahf
inc
jnp
push
pop
mov
shl
pop
xor
and
dec
call
cmp
lds
ins
adc
push
push
xchg
add
das
aad
sub
and
add
or
inc
sub
add
add
add
add
or
add
gs
mov
or
sub
inc
sub
push
je
cdq
dec
mov
lds
add
nop
(bad)
and
sbb
xor
adc
(bad)
pop
sub
movs
retf
xchg
xor
mov
sub
sub
mov
adc
cdq
movs
push
mov
adc
mov
shl
inc
sbb
ss
sub
push
scas
or
mov
sbb
rcl
inc
mov
cdq
inc
xchg
loop
lea
addr16
mov
cmc
dec
retf
add
xchg
enter
bound
loope
fs
adc
fwait
jbe
and
repnz
cld
cdq
aaa
add
nop
xor
(bad)
repnz
test
ss
mov
pop
int
mov
aad
sbb
sbb
call
mov
rol
xchg
xor
pop
pop
js
or
mov
mov
sbb
inc
loop
sub
ret
cmp
pop
fstp
nop
mov
xchg
retf
aaa
inc
pop
hlt
sbb
adc
or
pop
mov
test
aad
loope
add
jg
inc
retf
and
popa
add
adc
ss
xchg
or
push
xor
pop
loope
push
add
scas
fs
xor
cld
inc
mov
mov
and
retf
or
inc
cmp
cmp
sub
add
xor
add
mov
nop
(bad)
adc
dec
add
leave
and
mov
add
sbb
xchg
push
add
ror
and
inc
jge
dec
ror
push
mov
add
cmp
(bad)
sbb
cmc
or
call
pop
cmps
call
push
xor
clc
pop
or
and
push
push
xchg
sbb
ror
sbb
inc
or
(bad)
jmp
mov
mov
push
repz
or
adc
or
push
dec
dec
push
add
cmp
inc
or
add
push
dec
pop
aam
imul
fcom
retf
adc
add
sub
mov
aas
lahf
dec
mov
jmp
mov
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
gs
mov
or
sub
loope
sbb
idiv
fist
inc
sbb
xor
enter
(bad)
sbb
dec
retf
loope
aam
sub
leave
mov
retf
xchg
xor
mov
mov
sbb
sub
loopne
sub
inc
or
dec
xchg
push
inc
and
dec
xor
cld
lods
adc
inc
mov
mov
mov
add
xor
pop
push
push
test
and
jecxz
xchg
dec
mov
test
sbb
or
mov
mov
ret
sub
sbb
mov
call
mov
add
adc
push
inc
and
sbb
mov
cmp
scas
cdq
push
sub
int3
xlat
in
add
daa
xchg
jo
cmps
aaa
cdq
adc
cmp
lock
call
fstp
dec
push
test
xacquire
and
mov
std
int3
nop
es
inc
imul
int3
fwait
pop
dec
ret
les
pop
cdq
cmps
push
xor
lahf
(bad)
(bad)
inc
pop
mov
mov
jnp
aad
cmp
add
sub
rol
cmp
xchg
pop
(bad)
adc
and
icebp
sub
hlt
mov
add
mov
push
popa
add
imul
mov
sahf
popa
test
gs
xchg
aam
cmp
push
inc
sbb
retf
cld
push
push
in
and
rol
adc
xchg
sub
movs
test
jo
sbb
and
popa
xchg
inc
sahf
call
add
add
sub
lock
mov
aas
adc
shl
mov
jmp
xchg
pop
or
repz
mov
mov
add
movs
and
into
add
nop
xchg
rcr
sub
repz
adc
and
nop
ret
xchg
lar
push
test
dec
sbb
adc
mov
scas
sbb
int
push
fdiv
mov
or
or
test
cdq
cld
and
add
sub
xor
add
clc
xor
sub
mov
lahf
mov
(bad)
daa
in
adc
lock
call
dec
inc
mov
repnz
add
rol
add
xor
fdiv
and
or
ffreep
inc
inc
sub
inc
add
or
test
inc
add
or
ror
lods
xor
aad
mov
lock
nop
in
add
retf
or
add
pop
jecxz
fwait
outs
pop
jae
fwait
xlat
arpl
or
adc
push
or
xor
mov
mov
fnstsw
jbe
push
fld
dec
rol
pop
mov
mov
aaa
out
clc
jecxz
aas
mov
jae
rol
lods
cmp
cs
mov
in
aad
or
fdiv
out
jp
or
xor
lfs
mov
dec
pop
mov
rol
jl
int3
lods
jno
or
icebp
add
pop
xor
cld
repz
std
hlt
pop
sbb
inc
sub
clc
adc
and
jne
std
mul
xchg
(bad)
idiv
adc
cmp
add
cmp
jo
adc
add
add
dec
add
pop
add
add
popa
xor
sbb
pop
add
imul
add
add
add
inc
dec
inc
cmp
popa
add
add
add
add
add
rol
rcr
cmps
retf
lock
loop
call
mov
(bad)
imul
dec
jmp
fcom
xchg
bound
jae
add
add
jecxz
inc
mov
stos
mov
(bad)
imul
dec
call
call
fmul
mov
add
add
add
aam
push
jmp
dec
jmp
fadd
add
add
add
add
aam
push
jmp
dec
jmp
fadd
dec
mov
xor
and
aam
push
jmp
dec
jmp
fadd
xchg
mov
bound
dec
push
add
call
(bad)
push
jmp
dec
jmp
fadd
fdivr
xchg
jae
jae
add
aam
loop
call
mov
(bad)
imul
dec
jmp
call
mov
add
add
aam
(bad)
mov
stos
mov
(bad)
imul
dec
call
call
dec
fdivr
xchg
and
push
aam
push
jmp
dec
jmp
inc
add
add
mov
add
add
jecxz
mov
dec
dec
jmp
inc
dec
fadd
cmp
add
aam
push
jmp
dec
jmp
inc
xchg
fadd
jp
add
add
add
push
aam
push
jmp
dec
jmp
inc
(bad)
add
add
add
aam
lock
loop
call
imul
dec
(bad)
mov
jmp
mov
add
add
aam
jecxz
inc
mov
stos
imul
dec
push
call
call
fmul
mov
add
add
aam
aam
push
jmp
dec
jmp
fadd
add
add
add
jecxz
aam
push
jmp
dec
jmp
fadd
cmp
add
add
call
loop
mov
dec
dec
jmp
fadd
jp
add
add
add
push
add
call
(bad)
push
jmp
dec
jmp
fadd
mov
add
add
add
repnz
out
fcmovu
into
into
into
ret
mov
mov
stos
stos
sahf
sahf
sahf
xchg
xchg
xchg
xchg
outs
outs
outs
bound
push
push
push
dec
dec
dec
ds
xor
es
sbb
push
push
(bad)
sti
lock
cmp
add
inc
(bad)
inc
add
(bad)
inc
inc
(bad)
(bad)
(bad)
(bad)
jmp
stc
add
add
inc
sub
add
add
add
add
or
mov
rol
dec
sbb
mov
lds
daa
adc
lods
mov
and
xchg
mov
dec
and
js
loop
sti
(bad)
mov
aas
jno
jb
clc
popa
arpl
mov
mov
pop
inc
dec
mov
setge
imul
xchg
push
push
enter
push
mov
push
cmp
dec
(bad)
mov
and
cmp
imul
ret
stc
inc
xchg
test
adc
fisttp
mov
mov
loope
cmp
jmp
xor
rol
fs
pop
xlat
leave
xor
jns
nop
imul
loop
lahf
das
cmps
and
jecxz
gs
xchg
rol
and
jae
sub
fs
out
push
add
ficomp
mov
cmp
mov
lods
or
popa
pop
shr
mov
dec
bound
cs
cmp
mov
(bad)
cwde
jns
fucomip
pop
jecxz
icebp
and
js
mov
jo
into
push
cmps
and
add
loope
lds
psubsb
rol
and
xchg
outs
bound
pop
ret
push
cmp
jne
cmp
mov
or
or
pop
mov
mov
(bad)
and
cmp
push
add
cmp
xchg
and
pusha
push
rcl
jp
in
mov
and
(bad)
jo
inc
xlat
fadd
nop
push
sub
mov
add
cmps
gs
push
push
mov
movs
or
pop
and
jnp
test
sub
adc
les
jns
(bad)
lock
repnz
inc
or
pop
pop
jmp
test
mov
add
dec
les
stos
xchg
inc
out
es
xor
add
dec
xor
lods
xchg
lea
mov
fimul
and
sbb
xor
enter
inc
jecxz
ret
push
xor
xor
xchg
sbb
scas
int3
(bad)
rol
mov
cmp
jo
sar
leave
sub
mov
neg
mov
ret
sub
sar
and
icebp
dec
xchg
int3
add
mov
hlt
sti
outs
rol
mov
ret
mov
ret
ror
int3
cmp
inc
mov
dec
pushf
jno
sbb
mov
fwait
stos
xor
and
retf
push
in
scas
retf
shl
int
cmp
scas
ret
push
inc
in
ret
dec
vcvttss2si
cld
or
sbb
test
adc
or
sar
push
sub
mov
repz
xor
jmp
sbb
arpl
inc
jmp
xchg
xor
jno
sub
(bad)
div
sub
inc
sbb
fsubr
push
push
mov
ror
mov
mov
jae
js
xor
cmp
into
inc
icebp
add
mov
int
fdivp
(bad)
aam
inc
cli
xor
push
arpl
shl
push
mov
ds
cmc
cli
mov
xor
je
cmp
push
fnstsw
ins
fidiv
(bad)
fwait
push
adc
xor
jnp
(bad)
add
xor
pop
xchg
mov
int3
call
xor
push
dec
sti
div
movs
into
xor
lahf
lahf
jge
in
dec
jmp
sti
(bad)
lock
pop
cli
adc
jnp
inc
inc
loop
push
xor
test
shl
cdq
xor
and
mov
xchg
stc
lds
pop
sbb
mov
arpl
(bad)
push
out
adc
push
iret
sub
xlat
xor
clc
inc
fisub
outs
sub
(bad)
fisttp
adc
cmp
adc
dec
xor
cmp
iret
add
xor
inc
and
push
pop
mov
lds
outs
in
push
enter
mov
add
add
add
add
add
dec
add
and
add
add
add
popa
xor
sbb
pop
add
add
add
add
and
add
inc
cmp
popa
xor
ss
inc
(bad)
xchg
add
call
(bad)
jmp
(bad)
icebp
jp
jmp
iret
xchg
mov
(bad)
(bad)
clc
jmp
(bad)
stos
xor
std
in
in
mov
int3
stos
(bad)
mov
fmul
mov
push
add
pop
std
test
(bad)
mov
repz
in
retf
scas
jns
mov
dec
(bad)
cmc
mov
mov
pushf
cmp
xlat
add
fldenv
xchg
push
add
cld
stos
lahf
ins
push
push
addr16
stc
fwait
(bad)
aad
int
cdq
mov
movs
inc
add
retf
out
imul
adc
mov
(bad)
push
push
(bad)
sti
mov
ja
cld
add
mov
(bad)
repz
in
push
xor
(bad)
mov
dec
xor
not
push
call
add
fld
out
mov
into
(bad)
(bad)
in
(bad)
dec
add
(bad)
mov
call
add
mov
test
add
sub
inc
ss
in
xchg
(bad)
mov
inc
(bad)
fiadd
mov
jne
cmc
mov
in
(bad)
test
cld
div
sti
mov
out
addr16
sub
rcr
xlat
mov
xchg
inc
add
pop
in
aaa
rol
retf
xrelease
cmps
cdq
call
add
mov
(bad)
ror
div
cdq
pop
inc
cld
stos
adc
push
(bad)
(bad)
cli
in
ret
pop
dec
repz
int3
idiv
cld
out
out
icebp
scas
pusha
call
add
in
fst
int
xchg
dec
(bad)
out
pop
into
mov
fmul
leave
fwait
xor
jecxz
push
hlt
mov
stc
push
les
std
mov
mov
inc
xchg
sub
cmc
xchg
add
out
jmp
hlt
stos
sti
(bad)
(bad)
dec
dec
stos
xchg
xchg
movs
mov
jle
jg
es
(bad)
fadd
(bad)
jmp
add
addr16
(bad)
xchg
lahf
aas
(bad)
sahf
outs
xor
stc
idiv
lds
loop
mov
clc
mov
lock
idiv
std
cmps
add
repnz
sahf
sbb
idiv
imul
(bad)
rol
rcl
add
sti
stos
add
int
call
or
sti
std
test
jne
(bad)
mov
sbb
inc
in
mov
(bad)
out
out
(bad)
clc
mul
add
lds
rol
mov
repnz
pop
fnstsw
clc
cld
sti
fstp
in
ret
retf
clc
test
out
pushf
std
mov
stc
mov
out
add
fisub
mov
icebp
jmp
or
les
stc
scas
paddd
add
scas
add
leave
leave
cli
div
cmc
dec
dec
add
mov
clc
mov
sti
rol
fidivr
and
iret
int3
loope
ret
stos
rcr
cwde
lea
dec
xor
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
cmp
stc
xchg
push
rdpmc
pop
aam
xor
lds
sbb
and
loopne
sub
js
cld
aad
mov
xchg
add
mov
lahf
cmp
cwde
mov
sahf
cmps
push
hlt
mov
or
icebp
test
cmps
call
add
inc
rcl
cmp
inc
dec
nop
and
out
movs
rol
and
adc
cmp
mov
xor
adc
inc
add
mov
scas
sbb
stos
iret
inc
nop
jle
inc
loope
xor
cmp
cmp
mov
shr
data16
xchg
xor
mov
jg
mov
sbb
rol
test
add
sub
mov
movs
dec
aad
loop
xlat
stos
sub
cld
inc
mov
mov
jb
scas
inc
sub
xchg
mov
cmp
aaa
push
or
adc
inc
aad
(bad)
adc
dec
adc
and
and
test
add
xchg
and
push
or
daa
ror
jne
test
call
clc
mov
test
fild
cmp
add
pop
jl
test
cmps
inc
aaa
fwait
and
loopne
pop
and
add
and
adc
scas
fadd
pop
cmp
mov
mov
or
cld
lock
inc
test
inc
(bad)
fwait
jo
in
sub
push
sbb
lea
cmove
inc
or
xchg
gs
mov
mov
inc
outs
jno
xchg
gs
adc
popa
inc
imul
dec
or
shl
ret
xchg
rol
in
push
in
cmp
nop
lea
cmp
or
push
dec
add
or
hlt
push
jmp
or
pushf
inc
dec
add
adc
mov
stos
in
pop
ret
sbb
retf
push
call
imul
push
cmp
mov
mov
or
leave
pop
push
add
mov
outs
shl
mov
xchg
hlt
ret
xchg
pusha
add
inc
push
stos
sub
out
add
arpl
shr
(bad)
xor
mov
xor
pusha
lahf
mov
fs
shl
les
and
repz
mov
sub
or
inc
add
xor
mov
inc
or
adc
and
sbb
mov
pusha
es
aaa
mov
fdiv
add
shr
xchg
adc
cmps
dec
cmp
mov
leave
mov
in
add
mov
jecxz
mov
jo
int
(bad)
cmp
jmp
add
call
pop
call
add
cmp
or
mov
or
test
mov
cmps
cli
dec
hlt
loop
push
popa
jae
xchg
retf
and
cmp
xor
mov
dec
add
xor
stc
or
enter
adc
fidivr
cmp
add
pushf
mov
add
mov
xor
sub
addr16
add
or
and
pop
cmc
sbb
jle
cmp
outs
dec
or
pushf
push
push
cs
movs
lods
ss
ss
aaa
xor
pop
cld
inc
out
add
mov
add
xor
sbb
es
aas
add
jns
or
mov
jae
loope
jns
pop
dec
adc
sbb
dec
jo
mov
inc
adc
cmp
or
ja
xor
jo
jmp
scas
jns
pushf
inc
or
mov
add
das
mov
jns
arpl
or
fadd
in
pusha
pop
or
adc
call
add
jnp
nop
add
aam
test
dec
gs
loope
pop
jbe
xor
jg
xor
xor
and
push
rcl
push
mov
or
popa
lea
aam
and
test
cmp
adc
mov
sbb
in
mov
sbb
sub
test
and
pop
(bad)
mov
add
pusha
cmp
sub
pop
sub
add
js
aaa
mov
mov
lds
push
jl
inc
popa
mov
add
icebp
add
jl
sub
fist
inc
push
call
add
inc
add
in
adc
clc
push
push
push
adc
cmp
and
sub
or
add
push
adc
aas
js
aas
pop
cdq
add
adc
popf
icebp
je
cmp
cmp
sbb
mov
test
test
adc
mov
and
pop
adc
pop
inc
push
xchg
push
and
sbb
loope
lea
movs
cmp
xchg
test
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
xchg
xchg
xchg
inc
add
adc
outs
mov
mov
add
mov
data16
ins
mov
xor
mov
shl
inc
inc
dec
test
pop
cs
mov
dec
int3
mov
mov
int
xchg
dec
push
dec
adc
push
loop
pop
xor
jno
sbb
das
aad
(bad)
enter
inc
jg
fdivr
adc
jo
cmp
pop
dec
pmullw
mov
fs
pop
or
mov
ror
and
sbb
xor
sar
jp
jns
pop
leave
xchg
cli
cmp
aas
call
ins
adc
dec
sub
lahf
fimul
cmp
or
push
popf
test
lea
sub
clc
call
std
pop
sbb
call
cs
add
icebp
arpl
adc
call
dec
inc
outs
inc
jb
cdq
mov
mov
and
dec
push
or
clc
iret
pop
cmp
repnz
pop
ret
mov
adc
push
mov
dec
push
sbb
enter
push
or
sbb
and
(bad)
mov
cmp
and
jbe
bound
inc
cmps
and
mov
sti
and
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
out
pusha
lahf
or
es
cld
adc
xlat
scas
lahf
inc
jg
(bad)
cld
sub
(bad)
jnp
push
sub
repz
inc
cdq
sub
pop
sub
and
inc
and
mov
pop
pop
mov
mov
xchg
adc
ror
loopne
imul
xor
sub
jne
loopne
xor
adc
cmp
mov
or
pop
rol
dec
add
popa
or
mov
and
out
test
daa
stos
test
and
push
dec
and
movs
inc
add
hlt
daa
adc
sub
fs
pop
sub
add
sub
and
xchg
mov
loop
mov
xor
jmp
retf
mov
scas
ret
scas
jmp
xor
jp
xor
div
dec
pop
(bad)
call
mov
repz
(bad)
xchg
jnp
sub
mov
xor
jae
sbb
ret
inc
or
test
int3
lock
xor
gs
loop
or
test
aam
xchg
test
sbb
outs
mov
(bad)
inc
adc
inc
adc
jp
adc
mov
add
daa
cmp
nop
enter
or
jl
je
mov
mov
mov
or
xor
inc
iret
or
cld
sbb
adc
and
enter
test
ror
adc
inc
inc
jl
add
cmp
loope
and
test
cmp
dec
adc
(bad)
hlt
inc
xchg
pop
inc
mov
sub
inc
add
or
cld
inc
mov
pop
push
dec
pop
push
jo
nop
or
or
push
rcr
add
icebp
xchg
mov
xor
in
outs
and
inc
iret
or
sbb
cdq
icebp
lds
stos
scas
loop
in
mov
mov
or
push
add
and
add
add
inc
sub
add
add
add
add
or
add
or
scas
mov
or
mov
adc
test
or
clc
lock
inc
xchg
adc
mov
add
push
push
push
aam
leave
rcr
adc
(bad)
jmp
fsub
pusha
(bad)
push
sub
iret
pop
stos
adc
jge
xlat
lds
das
jg
xor
ret
pop
xor
sbb
lahf
ss
lods
xchg
sbb
cmc
stos
xchg
mov
test
cmps
jle
aaa
and
sbb
fcomp
rol
push
inc
push
movs
push
pop
lods
push
push
and
sub
sub
lock
lea
lea
ret
and
inc
test
or
add
dec
jnp
loopne
mov
mov
inc
pop
pop
retf
ins
or
nop
repnz
adc
and
movs
les
in
fsubr
popa
push
mov
xor
push
mov
mov
push
add
jp
test
(bad)
sti
daa
retf
sub
xchg
pop
sub
outs
lea
cli
ins
lods
outs
cld
cmps
call
and
xchg
sub
call
cld
inc
dec
and
les
lea
xor
loope
adc
adc
xor
addr16
add
inc
add
sub
cld
ror
add
jo
or
mov
hlt
pop
icebp
mov
add
or
lods
fsub
dec
adc
aas
mov
xor
pop
sbb
cmp
ins
outs
mov
sub
rcl
js
mov
adc
push
push
shl
pop
or
sub
dec
mov
sbb
or
inc
and
mov
inc
and
and
pop
mul
inc
int
and
and
sahf
pop
icebp
dec
sbb
mov
cwde
outs
and
movs
inc
xchg
adc
mov
inc
pop
inc
and
xchg
push
and
or
jmp
mov
cmp
xor
sbb
imul
loop
xchg
add
or
sbb
sub
cmp
or
push
into
nop
(bad)
aas
shl
lods
mov
adc
mov
mov
xchg
ror
aam
ret
sub
add
add
les
ins
icebp
lds
addr16
or
hlt
pusha
jno
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
jg
adc
pop
mov
mov
dec
sbb
lock
mov
adc
outs
mov
bound
shl
inc
mov
outs
inc
cwde
adc
retf
lock
lock
mov
pop
lods
jns
addr16
xchg
test
or
jbe
cmp
std
fnsave
jp
lods
sar
je
test
pop
push
and
data16
pop
push
and
int3
inc
push
mov
aad
dec
jg
dec
sub
xor
shr
loopne
in
xchg
and
inc
and
inc
jg
movs
pop
cmp
int3
add
jg
inc
leave
cli
pop
inc
or
dec
xor
cdq
ds
fs
and
imul
pop
cmp
aam
or
shr
xchg
and
(bad)
or
les
dec
retf
bound
xchg
mov
fidivr
dec
adc
pusha
push
sub
movs
jmp
push
xchg
fwait
jg
and
xchg
jnp
sub
lock
pop
mov
ret
sub
loopne
xchg
add
cwde
loopne
jbe
or
mov
lds
jmp
inc
ret
sub
test
inc
pop
data16
or
mov
repz
cmps
mov
or
mov
rcr
leave
aas
push
nop
enter
xor
loope
bound
jb
inc
sbb
inc
or
sub
movs
add
xor
js
and
cmp
xor
lea
das
int3
lock
or
pop
pusha
rcr
cld
xor
gs
adc
push
and
jecxz
js
xor
and
or
sar
test
das
rcl
add
adc
adc
pop
xor
or
cmp
lea
mov
sbb
adc
add
xor
xor
or
add
adc
(bad)
rol
pop
and
dec
lahf
scas
sub
(bad)
aas
sub
adc
push
test
push
imul
add
push
dec
sub
sub
lods
inc
aaa
sub
stos
mov
xchg
repz
inc
call
xor
mov
adc
sar
mov
mov
rol
lods
adc
daa
lods
scas
mov
adc
inc
lods
jo
push
pop
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
sar
int3
dec
adc
retf
dec
sub
pop
loop
inc
or
dec
push
push
clc
outs
inc
and
popa
inc
bound
and
jo
xlat
iret
fistp
jl
adc
mov
push
inc
inc
mov
lods
fs
lahf
iret
mov
out
les
sub
retfw
mov
sub
movs
inc
and
pop
cdq
cmps
jno
dec
mov
(bad)
repnz
cmc
daa
push
add
add
xlat
pop
push
jg
mov
and
dec
arpl
imul
lea
mov
xor
inc
xor
inc
inc
retf
push
adc
fs
xchg
xchg
add
lods
ins
mov
push
adc
mov
in
ucomiss
adc
cs
ins
fdiv
pop
and
inc
mov
inc
test
xchg
add
sub
jmp
sar
aaa
retf
push
hlt
in
jbe
lock
sar
jmp
xor
mov
mov
cmps
dec
mov
sti
dec
push
es
xchg
cmp
(bad)
pushf
push
xor
ror
test
movups
aad
and
cdq
pop
pop
lock
shr
or
dec
gs
and
cld
and
sar
sbb
into
cld
jecxz
mov
dec
or
shl
inc
or
cld
xchg
add
dec
dec
xchg
loop
movs
adc
aas
mov
js
xchg
or
push
mov
fdiv
(bad)
pop
adc
movs
les
sub
push
and
adc
movs
aaa
rol
das
inc
and
fwait
hlt
cmp
dec
sbb
jns
mov
or
hlt
test
and
popa
(bad)
xor
or
ret
aas
dec
jo
out
cmp
sar
aam
dec
add
add
or
enter
bswap
lock
push
xchg
push
xor
enter
arpl
mov
adc
add
add
push
dec
push
les
or
sar
cld
xor
stos
push
jne
jmp
cli
rcl
das
push
std
or
add
sub
nop
or
push
jno
stos
add
jo
push
add
in
add
cmps
add
nop
retf
xchg
mov
cmps
mov
mov
mov
mov
dec
add
add
stc
add
add
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
xor
pop
mov
rep
xchg
adc
(bad)
xchg
jg
cld
sbb
enter
sbb
lods
inc
dec
xor
adc
fst
inc
mov
imul
xchg
xchg
adc
mov
inc
pop
call
ror
inc
in
add
sbb
cmp
test
xchg
or
cld
mov
jbe
test
mov
and
dec
cmp
popf
rcl
fild
cmp
outs
inc
cs
test
inc
mov
test
xor
push
add
sub
outs
pop
jmp
or
jl
mov
inc
mov
mov
sbb
jmp
(bad)
cmp
mov
sbb
sub
cmps
sub
mov
arpl
daa
(bad)
shl
mov
push
or
cmps
adc
add
(bad)
xor
mov
outs
scas
dec
icebp
shl
push
imul
nop
fsub
dec
cmp
out
push
mov
xor
sub
mov
push
leave
inc
outs
or
inc
xor
push
dec
sbb
adc
mov
add
mov
icebp
iret
sbb
xchg
inc
and
push
mov
inc
xor
std
xchg
(bad)
aas
and
sbb
aas
movs
xor
inc
js
or
adc
or
test
les
sub
mov
push
pop
cld
and
gs
xchg
add
pshufw
push
psllw
add
pop
and
sar
lahf
add
inc
or
dec
mov
xchg
out
outs
mov
pop
and
rcr
or
inc
aaa
clc
mov
push
adc
sub
or
add
inc
stc
dec
or
add
inc
and
fst
rol
mov
inc
leave
aas
clc
adc
comiss
std
or
clc
rcl
adc
mov
or
jl
outs
and
push
aad
je
inc
addr16
cs
add
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
inc
xor
aam
popa
lds
push
inc
inc
retf
xor
ror
mov
popa
inc
(bad)
shr
aaa
hlt
sub
adc
adc
nop
push
mov
add
mov
or
(bad)
push
jp
movs
sbb
call
push
or
inc
imul
and
dec
fwait
sbb
repz
sbb
mov
pop
mov
sbb
xor
cdq
fnstenv
lods
fadd
push
sub
nop
adc
sub
imul
cwde
sub
je
fwait
sub
dec
xchg
mov
mov
xor
rcr
dec
in
mov
and
test
jg
fadd
xchg
enter
add
adc
add
test
pop
sub
xor
fist
or
mov
lahf
or
xor
pop
xor
sahf
stos
(bad)
jge
add
jmp
jge
pop
add
push
add
in
push
xor
test
mov
sahf
sub
jg
repz
daa
push
les
mov
shr
adc
jno
and
inc
shr
adc
or
cld
or
ftst
fisub
and
clc
arpl
xchg
dec
and
retf
fdiv
add
fwait
mov
xor
xchg
popa
lds
ret
call
test
xchg
(bad)
aad
aam
adc
bound
xchg
call
inc
dec
nop
cwde
scas
stc
push
xchg
sub
cmp
inc
and
pusha
push
sub
sub
and
push
daa
push
sub
inc
xor
jae
aas
ret
sub
pop
fdiv
push
xor
and
xchg
add
inc
js
jbe
or
inc
sub
dec
cli
leave
imul
adc
aas
cmovl
inc
and
and
adc
jns
aam
stos
add
movs
mov
add
inc
(bad)
cld
jecxz
xor
lock
mov
mov
or
leave
mov
push
jmp
inc
nop
mov
es
outs
inc
adc
or
in
mov
scas
inc
in
jnp
mov
mov
mov
inc
add
stc
add
add
inc
sub
add
add
add
add
or
mov
inc
jg
seto
pusha
or
or
add
(bad)
cld
gs
mov
mov
mov
dec
sbb
bound
faddp
sbb
dec
and
inc
icebp
jecxz
push
dec
mov
push
sub
adc
dec
dec
cs
std
shl
ins
aam
push
adc
or
xor
das
push
sahf
je
jae
xchg
xor
inc
xchg
mov
les
inc
or
outs
in
mov
push
push
and
je
test
(bad)
ror
lods
pop
jmp
add
mov
pop
aad
outs
scas
bound
push
inc
call
pop
lds
jg
cmp
jl
int
sbb
cld
imul
dec
or
imul
out
aam
sub
dec
int3
lock
inc
int3
mov
out
fadd
inc
xor
xor
jbe
mov
jnp
adc
jg
pop
popa
daa
mov
pusha
out
xor
daa
adc
xor
add
and
(bad)
xor
dec
popa
sub
push
cld
rol
ins
mov
push
test
mov
std
gs
push
mov
inc
shl
sbb
xchg
mov
push
mov
jbe
push
(bad)
cmp
lar
loopne
dec
push
(bad)
mov
sbb
cld
and
loopne
dec
cwde
adc
mov
fadd
sbb
and
sbb
cmp
or
mov
bound
xchg
and
aas
popa
push
adc
movs
or
push
add
(bad)
popa
(bad)
xor
and
dec
nop
and
call
dec
popa
lea
xchg
inc
cmc
mov
sub
xchg
push
xor
push
inc
xchg
loop
mov
push
or
adc
fdiv
or
mov
xor
xchg
repnz
mov
and
jne
and
add
and
adc
add
pop
sbb
aas
jl
push
fild
xchg
and
rol
add
and
sub
popf
rcr
cs
dec
rcl
retf
push
push
into
aas
pop
sbb
sbb
hlt
outs
xchg
add
add
stc
add
add
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
jg
adc
dec
push
or
xor
lahf
inc
mov
sti
and
push
and
push
call
dec
push
hlt
aaa
mov
imul
dec
and
pop
es
and
pop
repz
fidiv
jl
lods
call
lds
jo
fidivr
popa
jnp
test
xchg
inc
xchg
xor
jl
adc
pop
jo
or
sub
xchg
push
cwde
push
imul
cmps
fs
mov
arpl
and
outs
lea
and
pop
test
and
ins
inc
js
fs
sub
call
push
pop
ret
mov
das
xchg
stos
push
and
call
or
and
add
in
stc
pop
and
ins
adc
lods
or
pusha
xchg
sbb
or
hlt
(bad)
cld
cmp
cmp
(bad)
lods
movs
call
rcr
stc
mov
retf
pop
dec
dec
mov
xchg
mov
enter
call
push
mov
int
in
adc
inc
sar
xor
jne
enter
jl
push
rol
aas
(bad)
push
jecxz
or
mov
and
xor
inc
ret
and
icebp
mov
push
dec
and
int3
adc
cmp
jg
adc
adc
aaa
push
xchg
xchg
or
dec
repnz
sbb
into
pusha
loopne
dec
clc
test
or
mov
inc
cmp
retf
sbb
xchg
sar
hlt
ror
and
cmp
sbb
push
adc
pop
or
adc
xchg
adc
call
test
mov
mov
adc
or
ror
cmp
in
fadd
mov
inc
xor
mov
push
jmp
inc
push
test
xchg
sbb
iret
add
aas
xchg
and
push
movs
mov
or
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
dec
pusha
rol
scas
popa
mov
inc
cwde
jo
ret
(bad)
cmp
(bad)
lds
fdiv
adc
retf
xchg
push
push
mov
enter
cmp
ror
inc
leave
xchg
xor
dec
push
sbb
cmps
mov
xchg
xor
or
jecxz
adc
add
pop
push
jmp
and
loopne
jnp
adc
mov
cmc
call
xchg
jg
jle
mov
and
icebp
push
test
or
mov
inc
xchg
int
and
pop
test
mov
and
dec
inc
stos
jne
call
daa
dec
retf
shr
cmp
fbstp
fst
inc
(bad)
and
repnz
add
adc
sar
pop
cmps
shl
jg
scas
xchg
jo
shl
sub
mov
or
js
mov
and
imul
pop
and
movs
les
fpatan
dec
adc
aas
xchg
int3
lock
outs
and
dec
or
dec
icebp
dec
sbb
and
les
sub
mov
dec
push
and
sbb
add
gs
xor
or
unpcklps
xchg
mov
push
sub
popa
icebp
dec
sub
bound
cmp
and
inc
xchg
mov
nop
dec
dec
mov
adc
mov
js
push
gs
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
push
pusha
mov
pop
enter
or
mov
lds
push
push
inc
aas
mov
cli
test
xchg
adc
dec
xchg
dec
xchg
mov
inc
rol
lahf
sub
loopne
add
mov
xor
mov
jne
adc
mov
dec
xor
aas
pop
inc
nop
stc
fist
pop
pop
push
push
or
mov
inc
push
(bad)
in
in
mov
xchg
aaa
movs
push
sbb
stc
(bad)
and
inc
test
add
adc
jecxz
dec
loop
mov
and
and
or
and
sub
sbb
lahf
fimul
mov
fisubr
sti
inc
add
dec
imul
cmp
inc
pop
adc
popa
mov
xchg
mov
stos
inc
xor
add
cmp
xlat
mov
fs
xor
aam
push
inc
or
jl
loope
cs
add
aaa
das
les
daa
sbb
cmp
daa
adc
mov
adc
add
dec
nop
jp
push
call
mov
aam
sbb
sub
test
push
call
add
xor
mov
test
mov
call
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
lock
mov
cmp
push
loope
jg
sbb
pushf
or
ret
mov
daa
inc
adc
adc
mov
or
arpl
popa
enter
cli
cmp
and
xchg
push
sub
push
inc
push
movs
in
push
test
add
loopne
or
pop
mov
inc
push
test
fmulp
stos
into
sub
test
push
push
pop
cmc
aaa
lods
shr
jmp
and
dec
call
pop
jle
call
xor
inc
adc
call
pop
adc
(bad)
cmp
adc
mov
sbb
inc
outs
(bad)
mov
or
test
ss
sub
adc
sbb
sbb
xchg
and
mov
cmp
aas
jp
inc
push
cli
ja
add
iret
adc
add
jae
dec
push
cmp
mov
aaa
in
pop
pop
arpl
fsub
mov
js
jmp
movs
inc
nop
xchg
mov
jmp
(bad)
cmp
pop
add
retf
or
mov
add
and
add
add
inc
sub
add
add
add
add
or
clc
mov
and
dec
or
pop
lahf
mov
push
sbb
jecxz
jg
fisttp
shl
push
xchg
hlt
es
test
sub
add
dec
test
and
adc
dec
sahf
xchg
dec
add
dec
cmp
loop
xchg
gs
xor
gs
daa
add
inc
sub
jne
inc
push
jb
inc
adc
mov
cld
aaa
shl
mov
inc
sbb
loopne
lock
add
adc
sbb
and
(bad)
sbb
pop
mov
mov
jnp
mov
jnp
add
and
add
add
inc
sub
add
add
add
add
or
dec
sbb
lock
lods
or
sub
mov
inc
sub
mov
dec
or
or
and
ins
loop
mov
rcr
dec
jo
xchg
fist
test
jle
sub
nop
or
push
call
sbb
jmp
and
and
and
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
rol
adc
add
add
dec
add
or
add
add
add
popa
xor
sbb
pop
add
sub
add
ins
je
add
or
add
inc
cmp
popa
xor
xor
idiv
add
call
retf
loop
int3
cli
enter
add
fwait
dec
jmp
js
in
add
mov
retf
movs
sub
call
(bad)
in
dec
neg
nop
(bad)
mov
(bad)
clc
test
jl
(bad)
lds
test
add
mov
out
add
(bad)
sub
mov
std
out
fxch
mov
out
mov
addr16
cdq
add
mov
(bad)
mov
(bad)
scas
add
mov
(bad)
xchg
add
cmc
(bad)
inc
or
mov
stc
fmul
xchg
push
mov
add
in
(bad)
hlt
pop
rep
add
movs
add
out
(bad)
mov
(bad)
repz
(bad)
(bad)
std
cld
in
std
std
repz
(bad)
add
clc
mov
xchg
add
je
std
fst
call
add
sbb
fnstsw
shr
(bad)
in
sub
jmp
std
fdivr
(bad)
call
sar
push
jnp
clc
test
ret
mov
(bad)
rep
(bad)
fild
retf
movs
push
leave
add
icebp
div
jb
mov
(bad)
dec
jl
jmp
push
mov
call
(bad)
pop
add
ins
add
hlt
aaa
iret
mov
jmp
add
out
pusha
cli
mov
nop
add
cmc
sar
bound
inc
add
ret
jns
repnz
add
add
xchg
add
mov
(bad)
rcr
mov
mov
(bad)
fidivr
js
loop
add
std
in
call
add
(bad)
or
add
loopne
std
mov
clc
xchg
add
in
mov
inc
push
xlat
test
(bad)
cld
aam
lock
(bad)
mov
(bad)
jmp
add
ret
pushf
or
js
retf
shl
std
shr
mov
jmp
cmc
leave
or
test
retf
scas
xor
add
mov
stc
rol
jo
stc
pop
jmp
clc
cwde
add
mov
cmc
hlt
in
iret
mov
cld
fcomp
mov
(bad)
(bad)
clc
dec
cmp
jno
dec
pop
(bad)
fsubr
jb
inc
push
dec
pop
loope
int
cmps
imul
jb
mov
(bad)
fild
shr
std
mov
mul
shl
adc
mov
cli
mov
cld
lock
loope
out
aam
cld
fwait
add
test
sti
xchg
add
call
out
ret
clc
(bad)
out
out
out
push
sub
int
stc
xlat
ja
aad
repnz
ret
xlat
fisubr
pop
rcr
stc
mov
cli
scas
or
sti
in
lock
movs
or
stc
sti
(bad)
cld
mov
or
lds
xlat
adc
loopne
stc
not
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
xlat
loope
mov
cmp
int3
or
xchg
adc
shl
inc
add
mov
push
add
push
mov
ins
or
mov
sub
repnz
mov
dec
mov
adc
test
mov
sbb
dec
jmp
add
pop
cmps
ficomp
(bad)
and
call
add
dec
ror
popa
mov
mov
(bad)
cmp
mov
repnz
push
ds
popa
pop
dec
movq
inc
mov
mov
or
pusha
add
push
stos
sub
cmp
ret
adc
(bad)
push
imul
nop
sbb
mov
jno
or
jb
push
dec
xchg
mov
and
sub
outs
add
xor
add
call
imul
jo
adc
in
lds
xor
add
cmc
mov
pop
xor
fnsave
add
or
nop
(bad)
sub
sbb
aas
hlt
push
or
inc
aaa
sbb
aas
arpl
adc
xor
push
or
push
movhps
add
dec
sbb
lods
rol
sbb
xchg
or
xor
ror
and
and
int3
js
inc
xor
push
rcl
xor
sbb
sbb
xchg
adc
xchg
pop
pusha
shl
jle
dec
or
and
movs
test
dec
dec
xor
int3
imul
and
test
das
aas
ins
mov
loopne
sbb
dec
repz
jecxz
or
cmps
inc
adc
stos
bound
rol
out
rcl
repnz
adc
sub
pop
shl
movs
cwde
inc
jecxz
ja
mov
sbb
cmp
and
or
dec
pop
and
mov
sub
xchg
inc
inc
mov
push
push
jno
sub
sbb
or
mov
outs
mov
push
push
dec
daa
and
inc
push
ja
push
popa
add
js
adc
lea
and
jo
xor
and
or
push
xor
imul
inc
sbb
add
push
leave
ins
mov
push
dec
push
fwait
or
xor
dec
or
mov
shl
sub
sbb
adc
sbb
push
and
and
popa
ret
push
fsub
xor
sub
pop
jb
or
movs
add
push
adc
add
bswap
mov
dec
mov
push
cmp
(bad)
cld
add
xchg
xchg
xchg
aad
pusha
inc
add
xlat
std
ret
pcmpgtb
push
out
or
les
xor
xor
mov
mov
pushf
pusha
ret
jp
or
mov
cmp
dec
mov
mov
mov
loope
lock
jle
sbb
inc
sub
retf
jo
push
xor
enter
push
mov
mov
nop
je
(bad)
and
mov
mov
push
scas
or
nop
push
mov
jp
ror
adc
mov
jno
mov
ffreep
icebp
dec
xor
fisttp
pop
das
xchg
sub
sub
pop
add
xor
xchg
(bad)
nop
ret
and
sbb
or
shl
loope
inc
cmp
and
rol
loop
add
adc
test
cmp
add
js
add
push
xchg
ds
or
add
inc
js
push
push
mov
sub
add
hlt
loop
or
add
ss
inc
adc
xor
call
test
or
pop
inc
loopne
push
cwde
fadd
mov
or
nop
add
add
mov
ror
sbb
popa
cmp
jae
arpl
inc
sub
mov
add
test
xchg
stos
push
add
jl
and
inc
mov
inc
and
lods
popa
add
pop
inc
xor
and
mov
jo
inc
aam
jl
mov
mov
rcl
xchg
retf
fs
(bad)
fwait
pop
sub
push
rol
add
fs
data16
mov
inc
(bad)
lock
(bad)
loopne
inc
cmp
push
jne
out
shl
mov
add
adc
xor
jo
jae
clc
je
cmp
mov
xchg
movs
and
jl
sub
add
dec
adc
add
push
daa
sbb
adc
inc
add
xchg
sbb
or
dec
sbb
inc
pop
leave
and
dec
rcl
dec
sub
add
and
add
or
inc
sub
add
add
add
add
or
mov
mov
or
mov
or
and
(bad)
sub
mov
ret
sbb
push
retf
fmul
jg
sub
in
mov
and
cmp
sub
ja
cmp
movs
aas
add
pop
or
mov
icebp
hlt
mov
inc
fnstenv
retf
sub
int
jo
fist
inc
mov
sbb
pop
adc
pop
sbb
pop
mov
xor
or
push
cmp
and
aas
and
cmp
or
cld
pop
stos
and
loop
aam
and
xor
in
or
sbb
and
jp
push
mov
daa
xor
int3
pop
mov
fsubr
jns
addr16
dec
fnstenv
loop
and
ret
hlt
or
pop
push
cmp
mov
inc
rol
into
pop
add
ins
stc
pop
loopne
mov
push
and
add
ficom
pop
movs
retf
sub
or
(bad)
pop
adc
jg
cmps
mov
xchg
pushf
sbb
sbb
cmp
add
mov
rol
xchg
lock
adc
mov
adc
popf
add
add
(bad)
cld
repz
(bad)
xor
xchg
push
test
leave
int
pop
or
add
lock
sbb
xor
push
in
dec
push
leave
push
movs
push
add
cmp
add
adc
add
add
dec
add
adc
add
add
add
popa
xor
sbb
push
add
sub
add
add
adc
add
inc
cmp
popa
xor
xor
idiv
add
inc
inc
jmp
add
cmp
xlat
data16
push
jecxz
add
test
jne
jae
in
xchg
xchg
mov
pop
mov
mov
add
jmp
aaa
aaa
pushf
add
loop
jnp
data16
(bad)
fild
add
outs
outs
icebp
stos
stos
icebp
xchg
xchg
std
repz
cmc
add
out
sub
and
mov
(bad)
dec
add
loop
je
lods
lods
lds
loope
cmp
and
test
fsin
add
loope
arpl
je
mov
(bad)
jecxz
not
aad
adc
fcmovnb
ret
imul
mov
sbb
imul
add
bound
dec
dec
sti
int3
int3
mov
(bad)
icebp
add
cmp
jbe
jmp
mov
add
mov
aam
push
push
hlt
pusha
pusha
fcomp
mov
add
sahf
sahf
fst
shl
mov
icebp
popf
popf
bnd
out
mov
stc
mov
loope
push
mov
add
int
jmp
inc
inc
in
dec
leave
cwde
xchg
test
iret
dec
dec
test
mov
pop
cmc
jmp
in
pop
pop
fadd
inc
inc
in
ret
mov
loopne
out
jecxz
ret
loope
fcmovnu
xor
cli
lods
lods
(bad)
in
jmp
pop
pop
in
cdq
in
jg
lods
cmp
fist
fcomp
div
idiv
xchg
xchg
fcomp
out
dec
dec
loopne
ds
mov
les
jp
stc
mov
daa
es
pop
std
ins
ins
jmp
scas
sar
loopne
retf
mov
mov
and
ficom
sti
(bad)
(bad)
(bad)
cli
stc
in
mov
inc
inc
jmp
lahf
aad
lahf
cwde
and
stc
mov
call
push
fadd
cdq
or
cli
call
or
sbb
ror
out
mov
fcom
int3
or
mov
push
in
xchg
mov
dec
std
jno
lds
mov
push
xchg
or
aad
xor
adc
mov
xor
outs
out
jo
cmps
cmps
mov
or
outs
outs
rcl
icebp
xchg
xchg
clc
cmps
cmps
cli
out
imul
stc
add
xlat
push
add
add
jecxz
mov
scas
scas
mov
push
jmp
mov
icebp
cwde
cwde
test
xor
repnz
jmp
xchg
int3
adc
stc
xlat
xlat
std
fcom
out
and
and
jmp
movs
lock
fmul
ret
add
inc
out
ja
ror
idiv
jmp
lods
sub
out
mov
imul
add
ins
imul
mov
das
das
fbld
in
(bad)
std
std
cld
jmp
pop
(bad)
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
adc
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
icebp
and
test
or
sbb
adc
xor
xor
inc
and
cs
mov
push
js
and
adc
push
mov
rol
xor
add
or
xchg
mov
shl
adc
and
fadd
or
jns
xor
cwde
sbb
dec
cmp
xchg
inc
dec
pop
adc
cmp
call
and
inc
sbb
add
adc
ins
or
push
ret
addr16
xor
repz
add
add
sub
lods
sbb
jo
loopne
and
cmps
adc
inc
in
fs
daa
dec
shr
sub
add
movs
add
adc
inc
sub
cmps
cwde
mov
js
sub
mov
push
aas
and
xchg
out
cmp
nop
ret
lods
xchg
ret
push
jae
inc
lea
pusha
mov
mov
dec
push
jnp
ja
fsubp
lock
mov
call
xchg
pusha
prefetch
and
cmp
mov
cmp
mov
icebp
xchg
xchg
adc
add
mov
or
mov
jmp
add
cmp
pop
jo
es
and
das
mov
sbb
push
iret
das
sub
icebp
(bad)
xor
lods
nop
retf
inc
add
movs
dec
push
daa
pop
je
dec
push
or
xor
or
and
add
inc
xchg
test
or
aas
cmp
add
xor
adc
adc
pop
dec
mov
or
enter
sti
clc
ror
jp
popa
inc
adc
mov
or
sbb
mov
stos
scas
inc
inc
movs
inc
or
test
xor
or
xchg
or
adc
add
or
push
and
push
lods
push
fcomp
mov
adc
jecxz
mov
mov
add
cmp
lock
add
push
mov
jmp
xor
mov
retf
inc
sbb
rol
xor
das
loopne
xor
pusha
or
sub
int3
or
in
xchg
inc
push
test
stos
scas
cmp
xchg
dec
cs
xchg
pop
ror
sbb
lds
add
add
add
or
sbb
inc
push
outs
mov
out
loopne
aaa
test
xor
es
movs
or
sbb
cmp
add
shl
pop
push
rol
sub
mov
sbb
mov
mov
dec
add
jo
aaa
mov
and
ror
inc
(bad)
push
mov
call
rol
loopne
jl
sbb
mov
push
mov
pop
inc
mov
mov
nop
add
clc
loopne
je
or
test
mov
cmp
push
test
rol
add
arpl
jg
add
sub
jmp
and
clc
lods
mov
ret
jmp
mov
lea
and
inc
icebp
mov
out
stc
repnz
lahf
sti
out
and
mov
fistp
adc
push
ror
push
cwde
mov
ja
jge
into
mul
mov
pop
call
dec
jge
jmp
pop
add
add
imul
cli
imul
add
dec
add
xchg
mov
sbb
test
mov
mov
int3
pop
out
jb
(bad)
je
popa
test
les
add
pop
nop
adc
pushf
(bad)
or
and
sbb
in
stos
sbb
fistp
mov
cdq
shl
cmps
inc
into
inc
add
push
test
inc
sbb
sbb
sbb
add
lahf
push
adc
pop
daa
mov
inc
daa
(bad)
enter
mov
pop
fdivr
or
mov
or
je
(bad)
or
test
add
nop
mov
add
add
stc
add
adc
inc
sub
add
add
add
add
or
mov
inc
sub
scas
xchg
sub
or
pop
push
xchg
push
xor
and
sub
xchg
xchg
popa
jp
cld
xor
dec
adc
sub
or
add
stc
add
adc
inc
sub
add
add
push
add
or
(bad)
std
or
mov
or
js
add
xchg
enter
adc
arpl
int
push
(bad)
push
sbb
data16
adc
retf
xchg
inc
dec
sub
jge
rol
cmc
mov
rol
stos
adc
sbb
mov
cmc
out
push
cmp
dec
and
fs
stos
aam
pop
add
or
add
stc
add
adc
inc
sub
add
add
or
add
push
add
fmul
mov
xchg
and
ins
add
bound
mov
inc
add
aam
iret
pop
add
mov
sub
rol
or
adc
or
mov
and
mov
and
add
adc
inc
sub
add
add
or
(bad)
std
mov
jg
add
pop
cmp
inc
ret
jp
push
add
(bad)
mov
inc
jbe
nop
cmc
cmp
sbb
sbb
mov
mov
mov
jo
mov
fs
mov
iret
mov
cwde
(bad)
jmp
stc
add
adc
inc
sub
add
add
add
add
or
call
test
add
mov
ret
xchg
adc
push
fadd
push
mov
add
or
mov
mov
and
adc
mov
mov
or
xor
cdq
adc
pop
dec
mov
dec
test
stc
xor
aas
adc
and
xchg
nop
sub
add
stc
add
sbb
inc
sub
add
add
or
dec
sbb
mov
pop
or
cmps
dec
cwde
jo
mov
inc
fadd
inc
test
fst
js
mov
mov
aaa
das
loope
pop
cmps
inc
push
pop
sbb
or
push
xor
mov
cwde
xor
or
std
and
inc
setp
or
and
and
and
add
adc
inc
sub
add
sub
or
add
or
mov
rol
mov
ret
xchg
cmp
inc
mov
push
mov
ret
ror
xor
popa
shl
leave
or
add
ror
and
mov
loope
dec
add
test
sbb
inc
adc
stos
adc
dec
jl
push
push
stos
mov
push
adc
push
shr
sub
dec
push
inc
inc
dec
adc
dec
sbb
sbb
mov
and
and
inc
sub
iret
cdq
sbb
inc
test
loopne
or
pop
or
push
ret
(bad)
or
mov
inc
jnp
dec
push
mov
inc
popa
inc
sub
test
fiadd
dec
pop
test
sahf
sbb
shl
or
sbb
mov
mov
or
mov
and
nop
xor
mov
call
loopne
rcr
cmp
cmp
xchg
sbb
in
xor
dec
cli
jo
adc
pop
fisttp
lock
add
or
adc
and
inc
or
push
jb
adc
das
in
xchg
inc
adc
adc
adc
add
inc
push
jle
mov
adc
cld
stc
xchg
xchg
clc
retf
cld
xor
add
xor
mov
inc
xor
ret
or
cmc
je
(bad)
aas
push
ins
or
xor
push
mov
sub
(bad)
or
cmps
nop
arpl
sub
sbb
adc
or
inc
sub
ins
push
int
push
dec
inc
mov
xor
and
popa
sbb
mov
xchg
or
ds
loopne
inc
xchg
jmp
inc
inc
push
in
adc
add
xchg
mov
push
sahf
mov
mov
mov
push
retf
xor
adc
nop
inc
ss
lock
pop
push
xor
adc
nop
mov
xor
inc
xchg
in
sub
ret
aas
shl
add
xor
mov
mov
ror
pop
cld
ror
or
or
add
cld
repz
sub
dec
xor
dec
adc
adc
pushf
mov
ror
or
cmp
mov
loope
sbb
push
add
and
push
(bad)
cs
(bad)
mov
aas
or
mov
cmp
adc
adc
ss
pusha
ret
inc
sbb
das
loope
xor
sub
enter
sub
mov
or
repz
push
sbb
inc
sbb
and
in
mov
adc
retf
adc
add
jge
inc
int
mov
and
repnz
shl
mov
sbb
add
sbb
pusha
sub
out
call
adc
iret
es
add
push
pop
or
test
cld
jae
mov
add
aad
adc
adc
fild
jl
iret
pop
lea
icebp
or
fwait
cld
add
add
sar
and
test
push
and
add
sbb
push
add
jne
add
retf
jl
lds
jecxz
clc
inc
adc
adc
mov
push
rol
out
aaa
aam
pop
sub
ret
and
rol
mov
rol
add
cli
adc
adc
js
nop
out
pmulhuw
aas
sub
lahf
ret
in
jns
and
sti
aas
ror
push
jge
shl
pop
add
sar
pop
pusha
cmp
daa
and
inc
std
sub
add
jmp
add
xlat
fisub
lock
and
jge
pop
call
sub
add
inc
loopne
push
rol
add
add
(bad)
pop
lock
adc
in
or
jg
push
and
jo
lods
cld
add
dec
rol
add
sbb
inc
in
fadd
adc
mov
add
sbb
add
and
add
add
lds
mov
push
out
inc
push
js
pop
cs
(bad)
xor
test
je
sub
and
and
sbb
call
and
dec
xor
sbb
and
(bad)
cwde
mov
cmp
sbb
mov
add
mov
shl
jo
or
push
mov
and
cmps
xor
aas
mov
aas
or
xchg
mov
or
outs
xor
ins
shl
pop
jb
push
push
repz
cmp
inc
add
and
add
fs
add
add
add
or
add
or
mov
rol
lock
dec
and
and
and
dec
or
mov
add
dec
or
shl
iret
pop
test
sub
out
inc
add
enter
mov
inc
shl
es
or
adc
in
mov
xchg
inc
movs
sbb
or
or
les
or
inc
test
dec
mov
or
inc
add
xchg
sub
inc
enter
(bad)
enter
inc
and
sbb
aam
add
or
sbb
adc
mov
xchg
ins
dec
(bad)
adc
add
ja
add
push
or
and
daa
inc
and
out
add
and
iret
ret
push
das
inc
test
lea
js
inc
mov
mov
rol
mov
jmp
push
push
dec
cmp
add
and
daa
in
add
jp
not
retf
pusha
adc
adc
loop
pop
mov
inc
xchg
inc
push
test
loope
push
cmps
sbb
comiss
dec
sub
movs
push
inc
add
sbb
arpl
and
das
mov
mov
pop
pusha
push
sbb
xor
pop
or
sbb
adc
xor
repz
and
test
add
push
adc
push
cmp
mov
add
cmp
rol
xchg
inc
dec
ja
jo
inc
sbb
movs
adc
movs
ins
xor
sahf
ret
adc
ret
sub
adc
bound
rcr
mov
mov
adc
sbb
inc
inc
ror
retf
xchg
or
sub
cs
inc
adc
or
dec
mov
adc
or
pusha
popa
retf
je
lds
cmp
mov
add
jae
xor
mov
repnz
dec
mov
adc
dec
mov
dec
ret
ret
ds
push
cmp
lock
and
dec
imul
fchs
add
or
nop
into
mov
xor
inc
jecxz
add
and
mov
arpl
ret
xor
dec
sub
nop
or
sbb
outs
mov
cs
jo
or
adc
inc
cmp
xor
sbb
loope
pop
aam
add
mov
xor
ja
mov
lock
sbb
fistp
add
pop
add
cmp
fwait
xor
dec
pop
xor
jno
add
loop
sbb
sub
xor
pop
sbb
and
add
loopne
xor
mov
add
mov
add
pusha
mov
(bad)
pop
and
icebp
enter
mov
cmp
rol
add
mov
fwait
aas
xchg
add
inc
loope
or
aaa
mov
sbb
adc
pop
mov
jns
sub
mov
retfw
daa
lahf
sbb
dec
fld
push
(bad)
cmp
sub
and
popf
jns
sbb
cmp
stos
hlt
add
jnp
sbb
in
add
rol
mov
inc
pop
test
xor
add
sub
inc
aaa
fcomp
add
xor
cld
or
mov
sar
sbb
pop
xor
adc
mov
or
mov
adc
fadd
adc
adc
test
mov
rol
das
push
and
adc
inc
adc
repz
or
xor
sub
out
je
prefetch
or
loop
int3
popa
cs
inc
inc
sub
inc
cs
pop
div
sub
pusha
adc
mov
(bad)
xchg
add
mov
fcmovne
lahf
or
mov
pop
xor
add
push
lea
pop
test
inc
pop
add
xor
push
lea
sbb
mov
loope
inc
adc
or
xor
jl
inc
ret
sbb
test
sub
push
adc
dec
test
sbb
(bad)
and
mov
inc
cmp
mov
repz
add
xchg
add
inc
sbb
inc
ret
mov
add
cld
mov
adc
xchg
add
and
adc
and
mov
ror
or
and
les
and
pop
cmp
inc
and
pop
pop
cmp
add
stc
mov
cmovno
add
aam
and
mov
or
cmp
and
adc
add
add
dec
add
sub
add
add
add
popa
xor
sbb
push
add
pop
sub
add
add
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
inc
inc
fadd
jmp
add
fst
fdivr
cmp
fdiv
add
jecxz
cmp
fcmovnu
jmp
enter
in
add
xchg
test
add
fisub
jmp
mov
je
icebp
jge
jmp
fwait
icebp
add
jecxz
mov
in
add
mov
mov
bnd
cld
(bad)
push
mov
icebp
mov
es
imul
(bad)
rep
stos
(bad)
xchg
xchg
icebp
pushf
pushf
hlt
bound
ins
imul
pop
rol
add
ret
ret
add
cmp
add
imul
push
hlt
pop
pop
ret
add
fldenv
stc
add
cli
rcl
mov
jp
sbb
stos
add
test
fs
add
in
xor
sub
jl
pop
pop
les
leave
sbb
sti
rol
in
in
jmp
(bad)
in
push
push
bnd
jmp
pop
repz
push
std
int
std
repz
mov
repnz
mov
dec
out
mov
sub
cmps
sub
(bad)
dec
dec
lds
out
mov
sbb
repz
(bad)
xchg
nop
mov
cmp
mov
pop
pop
retf
jecxz
xchg
leave
movs
movs
jecxz
call
cdq
adc
div
repnz
aas
lock
cli
popf
popf
aam
or
inc
inc
stc
lods
stos
stc
mov
jmp
pop
pop
add
lahf
lahf
retf
or
clc
push
push
ret
or
clc
mov
mov
daa
mov
jge
mov
nop
nop
jmp
jle
jo
cmc
lock
clc
mov
or
mov
paddsb
clc
xchg
xchg
cli
stc
clc
(bad)
pop
pop
clc
iret
iret
cld
fcom
(bad)
stc
stc
cld
(bad)
icebp
cwde
xchg
repnz
cmps
std
out
lock
shl
xor
iret
iret
loope
dec
repz
repz
jns
push
push
icebp
mov
mov
scas
(bad)
outs
outs
mul
dec
dec
fdiv
xor
outs
outs
repz
pop
stc
dec
dec
icebp
push
repz
fiadd
xrelease
xchg
xchg
icebp
xlat
xlat
test
dec
mov
or
enter
addr16
nop
loop
das
out
test
enter
addr16
mov
in
or
js
hlt
scas
scas
call
add
out
call
push
ja
loop
push
xchg
jns
rcl
adc
push
push
mov
das
retf
add
stos
push
push
mov
cwde
fnsave
clc
addr16
mov
jecxz
xor
shl
(bad)
(bad)
call
cld
mov
out
and
cld
mov
div
in
jmp
aas
out
add
jp
(bad)
add
fistp
lock
jae
(bad)
jo
mul
cli
add
outs
fnsave
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
je
mov
sbb
add
sbb
inc
les
cld
and
and
adc
xor
int3
fwait
inc
(bad)
or
jmp
adc
test
and
add
inc
in
lock
loop
inc
inc
data16
xchg
adc
xor
push
lea
or
and
sbb
fiadd
adc
jg
or
cwde
and
mov
data16
scas
push
xchg
adc
sbb
push
xor
(bad)
sbb
test
dec
mov
cwde
shl
(bad)
pusha
xchg
ficomp
add
aam
adc
stos
ret
and
inc
call
add
repnz
or
xchg
fadd
(bad)
jmp
cwde
add
adc
sbb
push
enter
mov
and
cmp
add
leave
sub
and
pop
xchg
int3
add
andps
ret
pop
adc
jno
inc
inc
push
mov
rcl
push
inc
adc
adc
or
or
inc
and
test
std
pop
ror
xchg
clc
xchg
sbb
or
les
add
mov
push
cmp
mov
dec
xor
mov
pop
and
cmp
push
inc
sbb
clc
adc
or
sub
pusha
jo
and
xor
add
xchg
ror
add
sub
inc
sbb
dec
adc
adc
sbb
inc
inc
outs
int3
mov
adc
test
cdq
inc
or
pushf
loop
sub
in
inc
sbb
or
push
mov
sub
or
add
shr
jae
loop
push
aam
inc
rol
add
inc
pop
add
inc
sbb
in
stos
add
sub
mov
or
jl
ret
sub
xor
ins
push
rol
rcl
inc
and
jno
sbb
mov
dec
nop
inc
add
sahf
inc
push
cmp
int3
xor
inc
fdiv
jp
adc
in
xchg
xor
cmp
push
ret
ret
pop
and
adc
pop
inc
cwde
hlt
ret
adc
mov
jo
pop
push
fst
add
in
cs
ret
xor
leave
pop
mov
xor
jl
adc
mov
inc
adc
xchg
shl
inc
pop
pop
push
adc
mov
or
lods
jo
sbb
xchg
in
adc
or
or
inc
sbb
sbb
test
pop
in
test
retf
xor
or
mov
push
push
push
mov
call
pop
and
les
and
fadd
or
shr
mov
xor
ror
mov
or
xchg
or
mov
xchg
retf
add
add
lock
fld
test
retf
push
pusha
rol
aam
add
das
dec
and
dec
xor
mov
adc
xor
or
jne
mov
cmp
leave
mov
int3
mov
inc
cmp
xor
xor
pushf
sbb
cmp
stos
cmp
lock
adc
xchg
inc
ss
nop
mov
pop
mov
inc
imul
xchg
and
lock
mov
out
test
adc
add
dec
or
xchg
pop
repnz
cs
dec
add
inc
inc
adc
test
xor
mov
rcr
add
mov
or
rol
rol
or
push
js
push
pop
or
sub
add
sbb
cmp
mov
(bad)
call
adc
in
jl
xchg
ror
push
xor
les
add
jb
inc
repz
sbb
jo
inc
call
pop
and
and
fs
push
add
sub
and
repnz
cwde
int3
movs
es
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
sbb
dec
sub
adc
and
data16
jb
fadd
(bad)
and
sub
adc
inc
mov
lock
add
test
rol
adc
movs
iret
mov
push
or
inc
(bad)
(bad)
fwait
aaa
pop
cmp
push
sbb
dec
add
mov
sbb
and
add
add
sbb
es
jmp
xor
dec
cdq
jmp
mov
and
xlat
mov
sub
and
xor
mov
das
dec
dec
ins
dec
inc
imul
out
inc
and
in
xchg
sub
xchg
leave
push
cmp
xchg
or
and
dec
mov
ret
add
adc
and
mov
push
add
int
mov
push
xchg
je
jb
xor
mov
xchg
rol
jno
inc
mov
and
inc
or
xor
shr
pop
sahf
hlt
pop
sub
xchg
xchg
xchg
inc
add
add
adc
inc
hlt
push
inc
sub
das
mov
and
ds
inc
or
int3
jecxz
add
add
inc
add
jb
or
push
inc
and
sub
or
or
jp
rol
jg
mov
sbb
int3
adc
xor
cmp
mov
retf
or
test
movs
and
xchg
sbb
add
(bad)
adc
inc
and
and
enter
call
(bad)
jno
add
push
inc
arpl
add
test
push
cmp
lea
mov
sub
leave
or
call
je
dec
sbb
das
xor
inc
inc
in
add
sbb
add
nop/reserved
push
lods
scas
imul
inc
adc
adc
sub
or
push
add
inc
in
loope
and
jb
test
mov
enter
hlt
jl
or
lods
and
xchg
ffreep
adc
adc
int3
jo
inc
or
les
dec
sub
inc
sub
movs
mov
jnp
mov
loopne
pop
pop
mov
or
dec
or
(bad)
nop
inc
push
adc
jb
das
dec
and
dec
sbb
shl
sbb
cli
mov
xor
dec
inc
add
mov
push
iret
lock
rol
lea
popf
mov
js
ror
mov
mov
dec
sbb
mov
add
retf
push
adc
cmp
adc
and
jecxz
repz
or
iret
pusha
pusha
xchg
test
ins
pusha
leave
adc
fs
hlt
adc
lods
mov
mov
icebp
jae
push
out
mov
dec
jmp
xor
or
mov
daa
mov
shl
stc
push
test
sahf
and
sub
cld
or
xor
sub
ja
jle
add
xor
scas
test
sub
daa
mov
mov
xor
xor
add
in
int
xlat
mov
test
mov
jecxz
sahf
xchg
mov
lahf
push
lods
pusha
sbb
dec
add
int3
lea
add
jge
dec
cmp
sbb
xchg
xor
add
mov
inc
and
mov
and
ins
adc
jl
mov
ds
xchg
pushf
icebp
adc
add
or
lods
or
cli
lds
or
lea
clc
outs
pop
add
xchg
adc
sub
movs
cli
popa
add
inc
sbb
je
movs
ficom
sub
or
or
vmread
xor
out
outs
pushf
bound
mov
sub
popf
add
mov
test
jl
and
rol
add
(bad)
cmp
push
and
rol
aad
outs
icebp
bound
push
arpl
int3
rol
or
mov
lods
stc
dec
add
adc
adc
xchg
pusha
les
adc
cwde
inc
jl
jmp
or
icebp
cmp
and
cmp
inc
push
xor
shl
adc
push
in
js
jl
adc
retw
push
jo
xchg
inc
into
xchg
out
cmp
pusha
dec
pop
add
das
cli
or
clc
xor
arpl
push
add
xchg
sbb
xor
xor
xor
icebp
add
ror
jbe
ja
mov
xor
cdq
sbb
ror
xchg
(bad)
into
in
adc
sbb
add
loopne
add
cwde
and
(bad)
cwde
dec
adc
iret
sar
cdq
pop
shl
mov
nop
loopne
into
mov
lock
sbb
mov
pop
aam
je
or
xor
rcl
loopne
pop
mov
and
mov
push
jne
and
aad
push
es
push
lahf
and
jmp
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
inc
or
lods
or
rdpmc
data16
jb
icebp
jno
or
lea
or
leave
sub
adc
sbb
fcomp
inc
mov
inc
leave
xchg
cmp
mov
in
xchg
out
dec
outs
(bad)
push
cmp
shl
xor
inc
jno
mov
sbb
jo
xor
mov
inc
nop
retf
xchg
sbb
(bad)
xchg
add
push
lods
inc
xchg
jecxz
xchg
xchg
or
enter
add
adc
les
jnp
mov
add
jmp
and
lock
aam
pop
add
xor
mov
adc
dec
pusha
cmc
adc
rol
xchg
out
fwait
cmp
pop
pushf
jmp
out
mov
js
mov
mov
dec
mov
push
cdq
sub
in
icebp
(bad)
sti
popf
and
cmp
dec
addr16
test
inc
repnz
add
or
jno
sbb
enter
or
test
or
xor
gs
mov
or
cld
jecxz
aas
cvttps2pi
push
xor
mov
push
cmp
test
mov
xor
pusha
lock
add
push
xchg
dec
push
sbb
leave
cmp
cmp
aas
retf
les
push
or
add
inc
and
inc
aaa
sbb
add
scas
or
int3
jno
in
(bad)
xchg
dec
fdivp
(bad)
cmp
in
(bad)
push
sar
cmp
sbb
dec
jae
adc
gs
ret
or
call
movs
inc
and
and
cs
and
push
cld
push
add
mov
pop
mov
and
and
int3
mov
inc
xchg
test
dec
xor
call
adc
(bad)
inc
add
sar
int3
aas
jmp
(bad)
stos
add
test
repnz
adc
inc
ss
sbb
mov
retf
ror
and
mov
xor
add
cld
adc
aas
test
jne
pop
rcr
repnz
daa
cmps
mov
ins
mov
sub
movs
inc
pop
aas
or
dec
add
xor
add
or
shl
dec
and
mov
cld
push
(bad)
adc
sbb
ror
cld
jecxz
aas
sbb
ss
jl
leave
inc
sbb
add
cmp
les
inc
adc
xor
in
int
pop
inc
mov
or
or
or
xor
or
add
push
pop
nop
add
icebp
nop
sar
sub
xor
push
and
inc
pop
int3
inc
leave
add
(bad)
hlt
cli
push
gs
adc
add
lock
xchg
and
and
enter
inc
lods
inc
add
sbb
xchg
xchg
add
mov
dec
cs
add
xor
sahf
movs
adc
add
add
or
ret
das
in
push
add
lahf
jno
bound
push
mov
add
cwde
add
dec
and
addr16
sbb
push
out
aas
pop
sub
jp
add
add
or
jp
add
cmp
xor
push
cmp
cmp
adc
xor
bound
ret
es
adc
xor
dec
add
sbb
je
pop
dec
jmp
sub
xor
lds
pop
leave
push
pop
dec
inc
mov
popa
sbb
ret
and
xor
dec
add
inc
sbb
daa
xor
stos
adc
nop
push
mov
ror
sub
push
cwde
inc
adc
pusha
adc
adc
jp
push
dec
pop
xchg
add
and
cmp
shr
mov
and
or
pop
sub
inc
add
mov
rsqrtps
sub
add
xchg
mov
add
inc
fidivr
push
add
add
cld
mov
sbb
sbb
sbb
inc
bound
inc
push
inc
stc
js
sbb
ins
bound
inc
add
and
adc
cmp
loopne
pop
ret
cmp
push
cmp
and
cmp
xchg
sbb
cmp
movs
add
sbb
xchg
xchg
and
sbb
retf
imul
pop
rol
push
ds
scas
icebp
xchg
jl
pop
and
adc
inc
sub
rol
and
cwde
mov
add
dec
push
cwde
in
ja
inc
or
mov
push
jnp
add
jecxz
or
xchg
mov
xchg
dec
xchg
ror
and
dec
fcmovnb
sub
cdq
adc
loope
(bad)
and
dec
in
xchg
and
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
scas
push
ret
and
test
add
and
or
loop
mov
les
mov
and
mov
mov
pop
imul
out
pop
xor
lahf
or
or
(bad)
sbb
out
adc
xchg
daa
pop
pop
push
or
out
xchg
jg
scas
cmp
add
mov
add
pop
push
inc
cmc
inc
loopne
mov
popa
(bad)
sbb
stc
scas
frstor
call
jge
cwde
sub
jp
xor
or
and
dec
stc
(bad)
retf
add
mov
or
sub
leave
push
xor
jl
adc
dec
dec
retf
inc
mov
mov
dec
push
xchg
test
or
enter
cmp
sub
pusha
test
mov
int3
add
sbb
pop
add
repnz
inc
sub
adc
sbb
sub
aam
fbld
or
and
scas
sub
inc
adc
ror
mov
js
adc
pop
adc
in
add
popa
movs
or
mov
mov
and
adc
pusha
jb
or
arpl
sub
std
repnz
adc
push
add
jno
sbb
xchg
(bad)
and
inc
inc
or
add
retf
aas
sub
xor
pop
and
mov
and
inc
jno
inc
inc
xchg
jmp
test
adc
sub
repz
xchg
rol
xchg
test
or
rcl
in
add
and
sahf
jl
jecxz
repz
retf
cs
ror
mov
inc
push
cld
ror
adc
xor
or
add
and
pop
nop
sub
or
dec
sub
hlt
les
add
movs
sar
or
push
add
repz
add
aas
push
adc
dec
aas
mov
push
out
add
mov
loope
xor
jmp
ror
add
xrelease
call
or
xor
lock
push
or
sub
mov
fdivr
adc
or
ins
adc
push
cmp
dec
aaa
nop
sbb
hlt
repz
daa
or
dec
mov
push
adc
push
xor
adc
or
sar
fld
dec
por
push
and
aam
mov
add
or
retf
ins
rol
and
inc
push
in
adc
inc
adc
je
pushf
xor
adc
dec
adc
int3
loop
je
cld
xor
mov
adc
repz
push
add
and
add
das
cmp
mov
or
cdq
call
dec
xor
add
(bad)
sbb
ins
sub
xor
aas
pop
imul
jmp
rol
pop
sub
add
cmp
dec
xor
push
(bad)
int3
aas
mov
adc
idiv
adc
xlat
add
add
mov
add
aas
jmp
rol
lds
popa
or
mov
adc
rcl
int3
or
and
jae
ret
push
xor
pop
ins
and
ret
call
and
loope
lock
add
inc
fs
add
(bad)
mov
pop
test
mov
mov
mov
jnp
xor
pusha
mov
cs
ror
popf
push
mov
sbb
add
(bad)
dec
inc
jecxz
jno
push
inc
add
add
xor
add
jl
adc
adc
test
enter
rol
cwde
inc
mov
and
xchg
sbb
js
inc
jmp
cmp
inc
push
jl
sbb
sub
and
mov
pop
xchg
xchg
inc
mul
inc
xchg
cmp
or
lods
cwde
or
inc
arpl
sub
enter
xor
mov
and
inc
adc
adc
je
orps
xchg
and
cmp
add
pop
adc
inc
dec
(bad)
jno
cmp
rol
mov
sar
adc
js
dec
dec
rol
jbe
pop
test
rol
repnz
or
or
mov
add
sbb
shl
mov
cs
sub
popa
mov
or
sbb
adc
aas
enter
sbb
(bad)
adc
add
inc
xor
sub
fwait
addr16
and
ret
sbb
xchg
icebp
add
mov
or
and
sbb
adc
or
and
dec
pop
jmp
cdq
push
sbb
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
mov
ret
xchg
std
xchg
call
and
enter
xor
cmp
or
outs
sbb
stos
sub
out
xchg
(bad)
inc
lds
ret
(bad)
adc
or
cs
xlat
sub
or
dec
xor
mov
and
or
dec
adc
sub
inc
cwde
xor
ret
ror
pushf
and
pop
nop
and
jge
and
or
pop
add
sbb
and
lods
jg
rcl
inc
mov
adc
pop
in
or
add
les
xor
pop
xchg
and
fbld
or
or
mov
dec
and
test
mov
retf
inc
push
mov
popa
mov
push
sbb
push
adc
fild
cmps
cmps
in
adc
jne
and
dec
pusha
xchg
imul
iret
adc
or
xchg
jo
dec
call
sbb
daa
xor
sub
push
inc
inc
scas
push
push
sub
dec
pop
jae
rol
and
jp
cmp
dec
add
push
pusha
rol
into
stc
ret
mov
enter
sub
pusha
or
or
or
xor
and
jecxz
and
push
jo
das
add
xor
out
pop
pop
sbb
popa
mov
stc
xchg
mov
cmp
cmp
cld
xor
das
add
mov
and
inc
cmp
dec
and
mov
cdq
xchg
inc
and
call
xor
or
inc
jno
loope
jb
sbb
(bad)
ds
or
and
mov
dec
mov
stc
dec
aas
push
cld
add
aas
jno
jecxz
or
shl
inc
pop
jae
sub
aas
xchg
xchg
shr
movs
and
loopne
lds
popf
or
adc
gs
jae
sbb
int
dec
or
mov
dec
and
(bad)
repnz
or
lods
inc
or
ret
aas
inc
push
pop
inc
add
mov
jl
(bad)
sub
and
sub
or
loopne
(bad)
pop
jle
add
add
cld
and
cmp
imul
pop
cmp
xchg
les
popf
sub
or
aaa
fsub
loopne
xor
pop
outs
std
inc
mov
push
iret
jo
add
or
inc
inc
test
leave
push
js
nop
add
inc
ror
push
push
sbb
adc
push
loope
fdiv
sbb
jne
add
add
mov
ret
push
pop
mov
push
push
sbb
mov
loop
jae
rcr
add
test
adc
xor
push
daa
popa
ins
mov
and
xor
dec
adc
add
and
add
add
xchg
idiv
dec
jmp
xor
inc
pop
add
dec
rol
xor
add
dec
test
add
xor
or
inc
or
push
ret
ret
aas
adc
mov
sbb
pop
cwde
lods
adc
xchg
neg
push
arpl
je
add
and
jno
lock
mov
mov
ret
call
fsub
push
inc
mov
ss
inc
adc
dec
sub
loopne
(bad)
out
jae
sti
inc
or
mov
test
adc
movups
push
rol
add
mov
aad
and
inc
mov
mov
popf
js
aas
mul
sub
inc
push
push
nop
xchg
sub
or
adc
pop
add
inc
adc
push
cmp
call
outs
adc
sbb
xchg
sub
push
fwait
lock
adc
hlt
xchg
sbb
nop
adc
adc
add
mov
bound
and
retf
add
inc
and
and
lods
clc
xchg
xchg
and
aam
xor
and
sbb
fistp
and
and
and
adc
lock
xor
loope
cmp
fs
mov
add
enter
jmp
sub
jecxz
das
xchg
not
loop
les
sbb
das
scas
xchg
retf
rol
pop
sahf
in
or
pusha
add
inc
outs
sar
push
sbb
or
adc
paddusw
rcl
enter
and
(bad)
adc
je
or
adc
sbb
push
js
sbb
add
xor
sub
outs
fisub
push
ret
lods
out
dec
rol
js
repnz
or
jo
leave
and
add
nop
add
push
popf
add
gs
mov
or
jp
imul
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
cmp
ret
rcr
rol
push
dec
nop
and
test
(bad)
jg
add
mov
arpl
cmp
js
and
(bad)
sbb
pop
xor
jb
leave
xchg
gs
pop
push
pop
xor
test
and
sbb
loopne
mov
pushf
or
(bad)
mov
sbb
out
movs
adc
dec
xchg
cmp
adc
sbb
rcl
xor
cdq
std
fwait
add
sbb
mov
adc
inc
add
fcomp
cdq
pop
xchg
or
and
inc
pushf
sbb
repnz
out
or
fdiv
add
xor
push
sbb
add
jno
dec
push
jl
or
stc
ja
lds
inc
loop
mov
push
retf
adc
test
dec
cmp
or
mov
adc
aam
and
sub
fs
push
sub
jp
call
push
mov
push
in
mov
xor
inc
inc
shl
mov
test
sbb
pop
adc
mov
pop
mov
rol
mul
dec
sub
xchg
pop
add
jae
inc
sar
add
ror
dec
push
jg
inc
push
xor
mov
es
and
jb
xchg
dec
and
dec
(bad)
add
inc
mov
lds
rcr
add
or
add
and
jmp
ret
ffreep
nop
inc
or
adc
cmp
movs
loop
xor
mov
and
aas
and
xor
or
jl
es
aas
or
ret
or
or
dec
push
mov
xor
in
xor
add
xor
sub
mov
add
sbb
or
and
and
stc
int
dec
add
push
xchg
push
push
jae
cmp
adc
mov
sub
in
inc
sbb
jecxz
adc
test
adc
iret
xchg
xchg
add
add
xor
adc
ret
jl
xchg
ret
inc
ds
inc
les
mov
rol
jns
add
xor
push
lods
pop
pop
and
or
mov
sbb
dec
adc
out
or
mov
add
push
or
add
sbb
or
sbb
and
pop
adc
popf
hlt
xchg
add
mov
and
adc
jno
jo
dec
(bad)
call
int3
rol
sub
daa
scas
push
rol
or
(bad)
push
sbb
enter
pop
rcl
mov
fld
ins
mov
adc
push
fchs
leave
and
xor
xor
add
sub
pop
xor
jae
mov
push
lock
xor
inc
pushf
inc
ror
adc
and
das
ss
add
in
pop
sbb
and
ins
(bad)
jmp
sar
or
mov
sar
mov
data16
call
in
mov
xchg
add
rcl
dec
adc
mov
or
ud0
adc
mov
pop
in
inc
add
pop
adc
ds
inc
cld
lock
or
mov
adc
push
dec
mov
mov
inc
adc
test
mov
lock
loopne
ret
aas
aam
add
mov
push
inc
pusha
rol
or
sti
pop
movlps
pusha
rcr
sub
pcmpeqb
ret
mov
or
fdivr
enter
test
not
or
pushw
or
pusha
aad
inc
xor
int3
dec
add
enter
xchg
add
cld
adc
arpl
or
inc
add
hlt
inc
adc
mov
(bad)
and
aad
and
xchg
dec
or
call
inc
or
clc
pop
add
adc
dec
inc
sub
mov
fisttp
adc
push
mov
sub
and
in
xchg
pop
jno
inc
push
jns
inc
adc
dec
or
dec
in
dec
xor
idiv
and
add
fs
xchg
dec
aam
adc
inc
mov
call
dec
or
push
push
in
add
xchg
rcr
repnz
pusha
cli
arpl
lds
and
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
inc
or
inc
jl
mov
mov
fcomp
call
setb
inc
loopne
mov
jl
cmp
add
ret
aas
xor
push
lea
dec
xor
lods
imul
pop
adc
xchg
sbb
pusha
xor
xchg
cmp
push
dec
pop
inc
mov
mov
jge
adc
cs
sub
fld
cwde
jbe
xchg
inc
imul
inc
mov
pop
cwde
ss
pop
das
mov
and
arpl
adc
cld
add
mov
daa
xchg
cmp
cld
cmp
cmp
call
or
sub
mov
mov
imul
sub
test
sar
jb
sub
ss
retf
stos
mov
cmp
or
jae
lock
or
push
data16
sub
mov
mov
loopne
rol
add
lahf
and
mov
aaa
nop
aas
bound
dec
and
mov
lds
popa
and
mov
repnz
adc
shl
or
rol
push
inc
mov
fadd
mov
call
fs
add
inc
rol
dec
sbb
push
sbb
xchg
mov
adc
push
enter
add
pop
aas
js
aam
inc
sar
xor
push
inc
(bad)
jae
sub
inc
mov
add
outs
inc
repz
push
sbb
xor
pop
ds
push
sub
adc
invlpg
xor
add
or
cmovs
test
dec
or
(bad)
clc
stc
dec
sbb
or
mov
(bad)
aas
aas
int3
adc
lea
pop
call
lock
dec
retf
or
sub
push
inc
les
inc
adc
jl
retf
mov
sub
aaa
cs
inc
lea
add
jl
iret
xor
pop
and
push
dec
sub
ror
add
xor
sub
inc
lock
dec
push
xor
adc
xor
push
pop
mov
inc
and
adc
aas
xlat
and
inc
setg
enter
xchg
inc
adc
mov
repnz
pop
xchg
sbb
add
adc
out
ret
jmp
(bad)
ud0
loopne
or
pop
mov
adc
pop
inc
sbb
or
inc
arpl
adc
or
adc
push
and
xor
and
int
sub
mov
hlt
xor
or
adc
loop
add
inc
in
nop
jo
inc
clc
jmp
or
pop
sbb
mov
or
int
int3
or
xor
rol
and
mov
int3
loopne
retf
cld
pop
pop
and
leave
aas
sbb
adc
dec
jge
sbb
or
dec
sub
jns
xor
out
xchg
les
xor
dec
jns
sbb
int3
popa
add
push
rol
add
adc
jle
inc
adc
dec
lock
inc
xor
inc
or
ret
or
pop
cmp
popf
mov
lock
fcom
sub
ja
movs
ret
inc
push
ds
loopne
inc
xor
je
and
jne
mov
fimul
aas
jl
(bad)
(bad)
or
dec
bound
mov
dec
sti
pop
cmp
bound
sbb
bound
inc
nop
push
cmps
sbb
and
adc
push
inc
xchg
adc
or
cmps
adc
and
sbb
add
push
nop
xchg
cmp
pop
cs
div
in
inc
sub
es
test
pop
add
inc
adc
push
vpacksswb
(bad)
mov
shl
mov
inc
fistp
and
loopne
iret
sbb
jl
and
xor
or
rol
xor
cld
ror
repz
adc
les
cmp
ret
test
aam
pop
mov
je
cmp
call
add
xor
push
inc
inc
and
lds
mov
mov
or
retf
cli
pop
retf
nop
and
mov
xor
cmp
sub
and
add
mov
add
stc
add
or
inc
sub
add
add
or
add
or
mov
inc
or
test
xchg
jne
leave
jae
dec
push
sub
and
call
cmp
(bad)
xchg
pop
and
stos
sub
loopne
nop
sub
inc
add
mov
aaa
push
adc
out
mov
dec
cmp
jp
xchg
xchg
test
cmps
adc
repz
mov
mov
sbb
push
push
sbb
push
or
mov
sub
pusha
cmc
xchg
mov
and
mov
dec
adc
add
das
inc
mov
dec
mov
sub
int3
mov
imul
call
add
not
mov
add
(bad)
dec
push
mov
and
or
dec
jmp
adc
lock
test
int
cmp
sbb
pop
imul
dec
gs
pop
push
mov
add
push
cmps
test
cmp
sub
adc
inc
and
pop
into
jb
clc
add
nop
push
push
sbb
and
or
repnz
and
add
push
inc
adc
push
adc
ret
xor
xchg
push
test
test
ret
xchg
sub
mov
inc
aas
push
je
mov
xchg
add
lea
adc
arpl
ret
retf
push
push
dec
ret
mov
(bad)
and
mov
jge
sbb
mov
mov
push
xchg
cdq
movs
xor
test
inc
sub
loopne
lds
mov
adc
xchg
les
or
and
push
les
pop
xchg
xchg
imul
jo
push
inc
sbb
movs
inc
sub
jno
aas
add
loopne
add
inc
inc
(bad)
call
mov
mov
test
push
fnstenv
push
inc
mov
(bad)
cmp
adc
mov
ins
mov
pop
pop
lods
mov
sub
xor
adc
clc
call
push
dec
mov
adc
push
inc
(bad)
xor
mov
and
xor
xor
adc
int
adc
adc
mov
in
stos
mov
(bad)
aam
mov
enter
sbb
cmp
(bad)
adc
std
jo
push
push
call
sbb
push
inc
mov
icebp
out
mov
or
xor
pop
clc
and
setae
ret
xor
rol
inc
mov
push
ins
outs
rol
xor
xor
pushf
mov
and
sti
add
les
fimul
push
adc
or
add
add
sub
rol
adc
or
hlt
add
push
sub
push
or
test
jo
or
sbb
add
aam
sahf
cmp
and
cmp
add
in
and
sbb
and
iret
cs
cmps
into
and
xor
inc
cmp
sbb
mov
pop
lock
push
lods
xor
xchg
or
repz
adc
adc
outs
cmp
inc
ss
push
mov
xor
lea
inc
sbb
repnz
xor
loopne
rol
jp
mov
mov
cmp
sub
push
aam
test
sbb
int
fisttp
xchg
retf
mov
test
stos
push
nop
xchg
add
lods
mov
mov
or
push
mov
adc
shl
pop
mov
inc
push
jl
mov
in
addr16
add
ror
mov
imul
inc
adc
test
or
pop
mov
fcmovnbe
inc
push
adc
mov
inc
clc
or
bound
cs
mov
jmp
inc
inc
ret
adc
rol
loopne
cmp
mov
sub
ss
inc
xchg
dec
aaa
test
mov
mov
test
and
and
or
push
fcomp
rcr
rol
aam
add
call
xchg
je
mov
pop
push
test
cmpps
or
sbb
mov
xchg
nop
je
inc
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
push
sbb
add
dec
add
cmp
add
add
add
popa
xor
sbb
push
add
add
add
ins
je
add
cmp
add
inc
cmp
popa
xor
xor
idiv
add
gs
(bad)
repnz
call
lods
jo
push
add
push
add
imul
in
mov
loop
mov
push
stos
leave
pusha
mov
or
sub
ins
adc
sub
not
test
add
add
jmp
jmp
ins
je
test
xchg
sub
outs
add
jno
daa
jbe
enter
imul
outs
xchg
stos
mov
push
push
push
push
into
mov
lea
add
(bad)
cmp
inc
push
mov
add
inc
push
mov
leave
xlat
enter
lods
mov
je
data16
fmul
add
add
add
mov
div
rcl
dec
push
xchg
add
jae
nop
dec
enter
fucom
xchg
mov
xchg
adc
mov
scas
xchg
out
fwait
mov
mov
xchg
push
mov
hlt
xchg
test
xchg
dec
cmps
xchg
add
push
add
or
add
add
mov
push
add
mov
cmps
xchg
mov
clc
in
jmp
and
ja
and
xchg
add
inc
(bad)
(bad)
fild
and
xor
jb
std
add
xchg
cmps
into
test
add
cs
and
push
xchg
and
jmp
stc
out
imul
add
je
imul
xor
jb
sub
cli
in
jne
dec
inc
pop
and
add
inc
outs
pushf
outs
jne
cmp
add
sub
add
dec
xor
xchg
xchg
cmp
xor
mov
cld
and
idiv
stc
add
cld
ss
mov
sub
out
idiv
cwde
add
jmp
push
addr16
push
std
xor
retf
cmp
push
sub
aaa
es
arpl
adc
popw
xor
add
adc
sbb
adc
nop
xchg
stos
js
(bad)
fmulp
fnstenv
retf
ficom
cmp
arpl
(bad)
mov
out
adc
cdq
adc
out
dec
test
cmp
jl
and
repnz
push
adc
push
(bad)
mov
dec
xchg
add
cmp
out
xor
int3
and
ftst
test
or
xlat
jg
ror
and
jnp
js
aaa
pop
leave
adc
out
icebp
mov
pop
imul
inc
adc
retf
retf
fstp
jns
and
and
pushf
mov
gs
push
mov
jae
clc
leave
mov
cmp
adc
cwde
adc
xchg
fs
mov
or
nop
and
dec
and
adc
retf
into
out
div
idiv
idiv
div
push
(bad)
clc
(bad)
push
sbb
cmp
dec
sub
pop
jne
jno
test
pop
pop
push
idiv
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
adc
inc
sub
add
add
add
add
or
add
or
mov
rol
out
add
push
dec
pushf
dec
xor
or
inc
cmp
mov
adc
xor
ret
pop
push
dec
xor
enter
push
mov
or
fcom
sysret
push
jp
stos
cmp
rol
add
add
or
dec
out
nop
in
jo
or
add
xchg
(bad)
aam
sbb
fs
pop
add
xchg
cmp
in
inc
outs
int
cmp
ror
adc
shl
add
sub
push
sub
out
adc
push
inc
dec
xchg
and
inc
xchg
push
and
dec
adc
add
push
mov
ss
pop
add
jo
ret
js
and
popa
ret
xchg
cdq
shl
mov
xchg
inc
pop
cmp
out
cmps
inc
or
inc
mov
rcr
movs
stos
xor
loop
pushf
and
push
cmp
icebp
inc
lock
add
sbb
push
or
gs
aas
push
push
dec
icebp
(bad)
xor
lock
lahf
or
clc
jecxz
test
and
sub
or
js
fiadd
sbb
je
pop
and
std
pusha
or
nop
cwde
jb
sbb
push
gs
adc
ficom
and
icebp
or
or
int3
and
and
sbb
mov
cs
imul
pusha
retf
hlt
xchg
add
xor
cmps
lea
inc
and
lea
cmp
sysret
dec
push
inc
push
or
add
jbe
jnp
jns
sbb
xor
cmp
sbb
loope
mov
dec
jmp
cmps
mov
call
push
sub
dec
jae
push
xchg
adc
in
xchg
push
aas
nop
pusha
xor
setno
mov
stos
xchg
pop
or
dec
add
add
test
push
add
leave
rcpps
stos
leave
stos
popa
xor
fidiv
sub
inc
push
jmp
pop
sub
add
mov
out
movs
dec
jp
jmp
add
call
icebp
movs
shr
loope
sbb
push
mov
mov
sbb
cwde
and
dec
add
sbb
push
xchg
pop
ret
cmp
inc
mov
ror
and
jnp
mov
(bad)
xchg
add
inc
and
call
mov
sbb
mov
int
mov
or
pop
mov
enter
dec
add
inc
inc
adc
loopne
ins
sbb
shl
lods
or
jns
imul
adc
arpl
mov
(bad)
hlt
cmp
or
add
nop
cdq
aas
jne
push
dec
add
xchg
dec
dec
ret
xor
dec
add
add
inc
sub
adc
and
push
push
int
push
in
pushf
push
pop
cwde
add
or
adc
les
nop
sub
test
mov
pop
push
int
adc
or
xor
nop
add
loopne
add
push
mul
aas
push
daa
nop
inc
xor
jl
pop
outs
lock
add
fist
adc
cmp
jl
jp
xchg
mov
jl
pop
push
push
cli
cmps
mov
icebp
push
rcl
sub
adc
test
arpl
push
dec
inc
call
loope
push
(bad)
cmp
push
je
and
add
add
jp
jae
test
adc
mov
xchg
sub
test
leave
pop
push
or
cmps
sbb
add
out
add
pop
mov
xor
(bad)
mov
xor
rcr
mov
push
cmp
adc
and
add
retf
adc
outs
push
add
adc
add
mov
adc
mov
(bad)
sbb
ret
inc
adc
loopne
cmp
inc
and
mov
add
push
mov
xchg
sbb
sbb
pop
lock
xor
pusha
popa
stos
clc
sbb
mov
and
cmp
add
or
or
addr16
cdq
xchg
lahf
lock
cs
inc
sahf
or
add
and
sub
in
std
add
push
add
add
xor
mov
mov
or
sbb
dec
sar
shl
xor
inc
add
or
add
stc
add
or
inc
sub
add
add
sub
add
inc
dec
sbb
jo
push
jge
out
pop
enter
xchg
and
call
adc
cmp
ror
out
cmp
pop
xchg
inc
stos
cld
aaa
in
fild
sbb
push
out
mov
fadd
add
shl
dec
ins
inc
shl
inc
pop
inc
daa
and
and
aas
push
cmp
push
hlt
loopne
stos
push
sub
cli
xor
adc
push
(bad)
(bad)
mov
test
call
inc
out
jg
push
mov
les
pop
sbb
or
mov
jb
or
(bad)
mov
in
dec
jl
mov
pop
xchg
(bad)
jge
dec
sbb
mov
inc
ins
or
dec
(bad)
int
stos
sub
leave
xchg
inc
ss
xor
in
pop
sub
cdq
cmp
adc
mov
je
mov
push
mov
int3
mov
pusha
sub
mov
movs
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
clc
out
or
pop
push
or
pop
enter
add
test
repz
xchg
xchg
xor
cld
ja
mov
or
clc
mov
mov
xor
xchg
popa
enter
ss
xchg
or
push
sbb
jbe
and
call
cmp
push
or
ins
or
popa
mov
push
mov
jecxz
stos
pop
mov
mov
mov
stos
jno
dec
push
mov
xor
or
faddp
mov
mov
enter
nop
ret
xchg
adc
adc
add
pop
sbb
leave
inc
call
cld
push
mov
pusha
sub
sub
dec
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
xchg
sbb
enter
xchg
add
sbb
inc
loopne
jp
xor
sbb
ss
test
movs
leave
mov
sub
leave
xchg
xor
pop
(bad)
nop
ret
mov
fdivr
push
enter
ds
push
add
adc
test
ins
fcmovnb
lock
lods
inc
sbb
push
add
sub
jo
rcl
xchg
ins
popa
test
xor
mov
add
fsubr
call
(bad)
sti
sti
das
jo
sbb
mov
shl
repz
repz
cmp
xor
stos
mov
push
int
std
or
fstp
inc
imul
sbb
pop
in
ffreep
out
cdq
or
adc
mov
je
mov
xchg
xchg
es
arpl
xor
andps
pop
and
mov
std
pop
and
jecxz
jnp
fisubr
out
sub
add
push
add
and
add
sub
test
adc
nop
push
add
repnz
and
mov
push
pop
mov
je
sub
xchg
inc
mov
fistp
test
and
and
in
add
mov
mov
sub
dec
or
pause
mov
call
xchg
dec
inc
sbb
in
data16
loopne
ret
int3
inc
repnz
or
xor
xchg
call
sub
mov
mov
shl
(bad)
or
les
int
adc
mov
push
push
ins
loopne
test
jae
inc
add
fidivr
scas
and
leave
dec
inc
cmp
out
mov
add
dec
adc
outs
sbb
add
add
push
hlt
sub
mov
es
pop
addr16
mov
sub
xchg
les
retf
shr
and
fdivr
xchg
ins
imul
push
inc
ins
pop
into
jmp
xchg
inc
jp
mov
outs
inc
sahf
dec
jae
xor
adc
in
mov
dec
sub
(bad)
jmp
ds
jecxz
add
add
stos
add
inc
inc
push
aas
in
(bad)
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
add
cld
sbb
mov
pop
xchg
clc
mov
inc
adc
inc
loopne
mov
mov
inc
xor
xchg
inc
aas
sub
jo
mov
inc
shl
in
imul
pop
or
xchg
popa
or
inc
shr
loopne
popa
push
pop
jp
out
inc
(bad)
cmp
iret
sar
push
jmp
adc
(bad)
nop
dec
(bad)
push
add
cli
daa
in
pop
cdq
mov
and
and
outs
pusha
adc
sub
cs
mov
cli
(bad)
adc
pop
push
mov
mov
in
adc
pop
xor
bound
mov
nop
sbb
mov
jg
shr
dec
dec
pop
xor
jmp
test
sar
adc
cmp
lds
mov
fdiv
push
cmc
dec
or
sub
or
pop
or
adc
mov
bound
dec
in
or
movs
jno
xor
push
hlt
ret
aam
xor
add
jns
shr
scas
or
rol
or
xor
dec
and
ds
jmp
push
xor
popf
inc
xchg
push
or
popa
(bad)
pop
and
push
cmp
cmp
sbb
(bad)
jno
push
push
icebp
xor
or
clc
(bad)
jge
fld
sbb
ins
clc
iret
xchg
push
sbb
inc
xor
xor
mov
aam
push
sub
std
add
xchg
jge
and
(bad)
and
(bad)
push
and
sub
adc
enter
adc
stc
adc
jns
pop
es
out
aad
rcr
mov
add
es
push
or
lods
mov
pop
xchg
jno
aam
add
pushf
int3
cmc
dec
add
sbb
inc
mov
xchg
cmps
inc
mov
sub
add
inc
xchg
scas
mov
inc
aad
retf
movs
test
fwait
inc
and
dec
hlt
dec
icebp
dec
xor
jmp
or
inc
fistp
movs
inc
out
aas
rcr
iret
aas
ret
out
aas
call
ror
retw
movs
mov
mov
push
lahf
pop
adc
fnstcw
push
pop
imul
(bad)
adc
sub
mov
mov
out
xchg
xchg
mov
inc
mov
jmp
adc
sbb
repz
adc
ins
pop
rol
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
add
or
pop
enter
jae
and
mov
lahf
or
xor
mov
sbb
lock
mov
xchg
add
je
(bad)
movs
inc
(bad)
movs
bound
imul
or
add
cld
shl
and
loopne
adc
aam
call
je
repz
stos
inc
push
add
int3
add
mov
int
fs
xchg
adc
lods
jle
std
imul
lahf
xchg
jg
inc
fwait
ss
push
jg
icebp
xor
mul
pop
adc
inc
mov
adc
inc
pushf
or
cmc
pop
push
xor
add
into
shl
sbb
ret
cmc
in
xchg
(bad)
fadd
ror
into
dec
xchg
sahf
or
xor
(bad)
int3
sub
adc
daa
inc
mov
push
xchg
mov
ja
fdivrp
cmp
dec
mov
fwait
pop
push
dec
(bad)
jg
push
fiadd
mov
outs
xchg
das
aas
fsubr
cmc
fisubr
test
aam
inc
push
inc
(bad)
leave
aas
outs
add
test
dec
xor
movs
rol
sar
and
fdiv
movaps
jo
ret
(bad)
cmp
jno
push
dec
add
mov
bound
push
mov
dec
aaa
test
or
and
movs
adc
or
icebp
out
pusha
cs
add
les
mov
push
cld
call
and
arpl
xor
test
push
push
hlt
and
je
sub
shl
pop
push
dec
add
aas
addr16
dec
xor
ins
xor
ret
pop
add
and
push
cs
ins
mov
and
cdq
fld
arpl
cdq
jmp
push
dec
or
daa
popa
xchg
pop
cmps
sub
movs
jo
sahf
test
test
mov
stc
seto
xchg
icebp
dec
mov
push
popf
dec
retf
or
pop
(bad)
stos
jmp
xchg
adc
les
jmp
fisttp
push
mov
(bad)
fstp
or
sub
push
push
rcr
cmp
or
aad
inc
fisttp
xchg
pop
mov
scas
jns
fdivr
xor
call
jecxz
push
jae
mov
xchg
add
sub
inc
outs
or
or
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
mov
pop
enter
cmp
dec
pushf
clc
xor
aas
add
iret
std
jnp
(bad)
mov
xchg
stc
mul
mov
sbb
add
(bad)
call
ss
clc
daa
add
into
xchg
sar
test
sub
adc
jne
cmp
je
mov
stc
ja
jmp
addr16
out
xor
and
xor
cmps
xchg
adc
mov
das
movs
jmp
pand
dec
xor
mov
or
push
mov
pop
mov
and
xchg
sbb
push
inc
jg
adc
cli
bswap
(bad)
iret
xchg
sar
and
mov
(bad)
push
dec
mov
xchg
jmp
adc
out
(bad)
sar
sti
ss
scas
xchg
mov
test
rol
aas
adc
or
imul
popa
jmp
xor
cmp
dec
fdivr
gs
aaa
cli
push
jmp
(bad)
jg
or
jmp
or
sub
shl
aaa
mov
repz
sub
push
pop
inc
push
cmp
popf
cmc
pop
fcmovb
sbb
inc
loopne
aas
inc
mov
cmp
add
xor
frstor
adc
scas
loope
popf
inc
out
mov
xor
xchg
inc
inc
or
(bad)
or
xchg
adc
jo
ret
xchg
loope
push
jle
lods
mov
inc
and
retf
xor
inc
xor
movs
inc
push
push
push
test
or
inc
test
pop
data16
nop
mov
je
pop
dec
es
jnp
inc
mov
or
mov
fsub
inc
mov
add
jns
mov
push
inc
fstp
aaa
mov
scas
mov
movs
adc
movs
add
jg
jae
aas
aad
xchg
or
adc
xor
loopne
loop
or
inc
fld
ret
pop
adc
and
nop
inc
or
mov
xor
adc
out
and
inc
add
nop
or
mov
add
sub
cs
in
sbb
mov
cdq
fstp
cmp
in
js
mov
out
push
inc
fimul
movs
add
ins
push
retf
adc
push
adc
add
mov
xchg
sbb
ror
push
jmp
or
and
fadd
int3
sbb
movs
out
pop
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sbb
enter
cmp
mov
int3
sbb
out
(bad)
(bad)
sbb
or
clc
outs
mov
jno
pop
adc
and
test
inc
and
cmps
cmps
inc
push
or
adc
or
or
popa
je
retf
jg
mov
adc
outs
pusha
mov
dec
shl
or
retf
ret
mov
push
call
outs
add
mov
dec
call
adc
fimul
ret
add
aad
daa
jo
xor
sub
inc
loopne
adc
mov
adc
sbb
in
mov
les
rol
iret
add
mov
pop
stos
xlat
push
jo
sub
mov
cmp
nop
and
dec
in
test
call
mov
or
out
enter
pusha
sar
dec
cmp
add
dec
sub
in
call
cmp
shl
outs
mov
jne
arpl
es
inc
adc
addr16
jno
inc
xor
add
fist
mov
inc
or
adc
mov
loop
mov
repnz
sbb
push
les
cld
jecxz
inc
test
sbb
stc
cmc
pop
and
push
jle
dec
push
adc
inc
arpl
and
add
mov
sbb
and
sub
add
or
dec
sbb
mov
adc
jge
and
ror
sub
inc
xor
inc
push
inc
sbb
fst
outs
or
ret
adc
jno
repz
pop
xchg
dec
mov
mov
fcomp
cmp
rcl
aam
push
mov
aam
out
adc
ret
add
cs
and
sub
inc
out
push
shr
test
cwde
in
aas
push
dec
xor
ret
shl
push
xchg
gs
adc
xchg
xchg
xchg
(bad)
imul
dec
mov
sbb
and
repz
cdq
inc
into
fwait
xor
popa
push
xchg
and
out
mov
adc
push
add
mov
push
xchg
push
or
pop
dec
xchg
nop
ret
fmul
adc
ins
sbb
mov
adc
int3
push
jne
cmp
(bad)
mov
test
enter
vunpckhps
fcmovnbe
not
sbb
ror
mov
add
mov
je
mov
inc
inc
aad
stc
push
adc
add
xor
or
jae
pop
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
loopne
cmp
mov
ret
xchg
and
inc
lock
(bad)
mov
fmul
(bad)
pop
sub
enter
fsub
fistp
sub
cmp
mov
lock
fwait
xchg
jecxz
xchg
test
push
or
loope
sub
dec
jp
test
sub
adc
ss
icebp
xchg
inc
pop
call
xor
jp
dec
(bad)
in
mov
adc
xor
inc
cmp
cmp
adc
push
mov
stc
add
ret
xchg
std
sub
dec
mov
xchg
add
sub
mov
mov
cmc
scas
dec
cdq
jg
shl
cmp
out
test
inc
std
outs
mov
or
(bad)
in
call
sub
jl
call
int3
loope
cmps
and
loope
ds
in
aad
enter
in
cmc
int
mov
cmc
push
lock
jmp
inc
mov
mov
call
(bad)
pop
mov
xchg
mov
mov
ror
mov
cld
out
xor
aam
mov
out
cs
xor
or
(bad)
or
jecxz
inc
mov
add
mov
pop
push
cmp
je
inc
(bad)
jl
push
sbb
outs
adc
je
pop
jae
test
adc
inc
sub
cmp
retf
call
nop
arpl
mov
test
xor
iret
aas
fs
add
and
jecxz
sbb
inc
adc
mov
test
sbb
adc
mov
rep
(bad)
mov
mov
popa
and
inc
call
xchg
pop
and
inc
jne
dec
push
xor
push
cwde
fst
and
mov
jne
jae
add
mov
loop
(bad)
mov
or
push
mov
cs
repnz
sub
and
pop
or
xchg
(bad)
jp
dec
or
add
or
add
adc
fcomp
setp
(bad)
push
daa
push
sub
fdiv
or
retf
jl
into
stc
iret
or
aas
shl
mov
pop
cmps
rcr
call
into
xchg
movs
clc
mov
or
call
loope
mov
and
dec
arpl
lea
pop
or
inc
mov
inc
lods
lods
cmp
and
xchg
mov
mov
call
leave
cld
push
cmp
dec
push
mov
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
add
jb
pop
enter
cmp
call
lds
xor
xchg
mov
sbb
clc
inc
xchg
sbb
test
pusha
mov
cmp
imul
add
push
or
add
sbb
mov
je
add
push
cmc
pop
call
loope
adc
sbb
push
les
adc
inc
push
mov
jne
add
lahf
xchg
jg
add
adc
popa
into
mov
adc
mov
retf
sbb
scas
lea
xor
daa
into
(bad)
push
repnz
sbb
iret
jp
push
nop
mov
or
cmp
mov
or
mov
xchg
pop
dec
sbb
movnti
pop
cld
iret
mov
cmp
addr16
icebp
int3
imul
popa
(bad)
pop
dec
jne
retf
loopne
out
add
add
inc
test
inc
iret
lea
mov
or
retf
xor
push
mov
pop
mov
lock
xor
pop
cmps
sbb
sub
arpl
add
sahf
add
sysexit
add
(bad)
xchg
pop
mov
xor
inc
pop
call
pop
daa
add
je
xchg
fidivr
xor
inc
sub
sbb
dec
sub
mov
or
add
push
retf
adc
hlt
inc
sub
jmp
pop
outs
xchg
std
push
retf
cwde
fs
ror
aas
and
mov
add
js
cmp
xor
xchg
sub
sbb
test
adc
cwde
add
cmps
inc
push
inc
mov
dec
or
or
mov
jbe
xchg
(bad)
dec
xchg
inc
mov
adc
or
(bad)
push
movs
inc
mov
xor
setns
mov
rcl
pop
xchg
mov
leave
aaa
mov
je
and
ret
push
cmc
int
and
call
mov
dec
add
aam
bound
icebp
(bad)
cmp
add
jge
jmp
lea
and
xor
stc
(bad)
xor
or
retf
inc
in
push
inc
(bad)
ja
arpl
mov
pop
add
test
je
mov
mov
add
inc
ins
mov
xchg
jb
aas
inc
stc
dec
sbb
inc
lea
pop
in
mov
jle
xor
add
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rcr
shl
enter
xchg
mov
lds
lock
loopne
test
inc
mov
jo
xchg
and
pushf
data16
dec
add
test
rcl
test
fs
test
and
out
cli
sub
jno
dec
push
dec
push
mov
adc
stos
lds
mov
adc
lock
in
push
mov
add
sbb
dec
fnstcw
or
cld
call
test
pop
mov
mov
loopne
jg
cmp
push
int3
loopne
aas
xlat
or
cmc
dec
ss
push
cmp
cmp
dec
sbb
inc
cmp
and
xor
stos
pop
stos
sahf
and
repnz
push
mov
sti
das
je
rol
imul
cmp
sbb
push
enter
(bad)
xchg
or
dec
push
stos
mov
xor
push
mov
fnstenv
mov
aas
or
fdivr
or
push
mov
cmp
inc
adc
or
mov
add
sbb
or
or
or
add
mov
jbe
aas
inc
xor
inc
pop
je
nop
pop
out
push
adc
loopne
mov
xor
adc
xchg
xor
(bad)
aas
push
dec
clc
inc
jg
rcl
or
shl
add
(bad)
clc
add
or
rcr
fs
cld
add
in
stos
leave
push
and
push
mov
inc
xor
pop
outs
mov
daa
nop
mov
fimul
ror
nop
jne
loopne
pop
add
retf
xchg
push
mov
jnp
add
cmp
inc
mov
mov
inc
inc
fimul
sub
sub
sub
push
lods
mov
popf
popa
xor
cmps
mov
sbb
lds
cmp
cmp
aas
imul
push
lea
or
push
pop
jle
out
(bad)
lea
add
ins
mov
xchg
inc
push
test
mov
jle
iret
data16
xchg
lock
sub
(bad)
ss
or
out
mov
jne
xor
shr
or
mov
mov
shl
xor
and
(bad)
aad
inc
icebp
or
jmp
sbb
mov
mov
mov
xor
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
add
or
pop
enter
aas
push
pop
cmp
inc
mov
test
dec
lds
adc
sbb
pop
xor
fbstp
dec
outs
popa
xchg
cdq
and
ins
inc
mov
dec
xchg
sub
in
inc
jp
inc
mov
retf
and
xor
xor
adc
push
xor
mov
mov
cmc
jmp
sbb
in
mov
hlt
xchg
stos
xor
arpl
cs
test
or
mov
cmp
shl
cwde
sub
cs
or
das
dec
mov
hlt
nop
ins
dec
mov
aas
cmp
(bad)
pop
loopne
xor
pop
jmp
out
rol
inc
scas
inc
iret
inc
dec
jns
mov
(bad)
push
paddb
or
jg
xor
jmp
mov
inc
jb
xlat
aas
out
retf
inc
stc
cli
lahf
xor
push
data16
enter
and
lock
icebp
jg
or
mov
adc
repnz
ja
pop
(bad)
retf
adc
xor
add
jbe
std
and
imul
popf
icebp
iret
pop
and
ror
ror
jno
mov
mov
xor
mov
jns
adc
push
xor
jne
xor
push
ss
xor
inc
xor
ret
xor
test
sbb
mov
mov
nop
sub
pusha
pop
cmp
test
inc
pushf
shl
add
js
jl
or
jle
movs
lsl
mov
fisub
or
jge
cmps
inc
sbb
test
inc
inc
(bad)
repnz
xchg
ins
xchg
iret
mov
and
inc
loopne
movs
xchg
mov
call
pop
adc
call
pop
stos
dec
dec
or
(bad)
call
or
jnp
pop
or
scas
xor
mov
loop
add
cmp
sub
(bad)
fidivr
push
(bad)
pop
jnp
movs
xor
cwde
(bad)
jl
xchg
xchg
sub
mov
sbb
jne
adc
popa
push
call
push
sbb
cwde
push
push
pusha
dec
mov
stc
adc
shr
inc
nop
xlat
nop
or
int
adc
repnz
pop
fmul
lea
ins
shr
or
stc
adc
jg
dec
enter
add
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
adc
push
mov
adc
jle
clc
inc
loopne
test
xor
sbb
mov
(bad)
call
add
mov
shl
nop
and
add
test
inc
cmp
adc
adc
bound
or
jp
cwde
xchg
and
test
(bad)
cmp
pop
push
push
push
sti
inc
outs
into
pushf
or
cld
arpl
push
pop
(bad)
adc
push
xor
inc
mov
push
ds
mov
adc
mov
add
pop
sbb
xor
mov
xor
inc
outs
push
mov
or
add
pop
jge
stos
ffree
(bad)
inc
xchg
cwde
call
cld
cmc
mov
fdivr
push
popa
jmp
push
adc
mov
push
dec
scas
or
fdiv
dec
inc
lods
les
xor
je
jo
std
dec
fs
aas
jmp
jno
dec
loop
ret
outs
sar
adc
lds
sbb
outs
fdivrp
arpl
adc
aad
sahf
jge
movs
cmps
fbld
cmp
popf
xor
add
add
xchg
sahf
inc
jmp
ror
cwde
fadd
and
(bad)
dec
add
fscale
ret
cdq
inc
shr
xchg
shl
jns
lea
push
jo
aas
out
xchg
or
or
push
push
repnz
inc
xor
test
aas
sub
ins
xor
aas
jmp
hlt
pushf
xor
cmp
cmp
pusha
adc
xchg
sahf
or
loop
xchg
cmp
mov
mov
mov
movs
nop
sub
movs
inc
dec
cld
or
aas
icebp
ins
clc
and
mov
fucomp
daa
inc
(bad)
mov
or
fist
jns
sbb
inc
jge
adc
nop
pop
sub
push
arpl
hlt
cld
mov
mov
or
hlt
xchg
and
gs
inc
mov
inc
jo
adc
xchg
aad
dec
stos
inc
movs
mov
add
movs
repz
sbb
jns
mov
fldenv
dec
ss
or
(bad)
mov
pop
(bad)
retf
mov
cli
mov
arpl
push
ret
aaa
jnp
in
(bad)
test
test
inc
es
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
cmp
cmp
adc
ret
xchg
iret
sub
add
lods
fs
test
push
in
add
lahf
lahf
push
es
popa
ret
cdq
add
and
(bad)
movs
cmp
and
into
into
cmp
enter
or
loopne
shl
pushf
inc
adc
or
add
in
adc
push
nop
add
stos
or
stos
and
outs
inc
dec
add
jmp
dec
xor
sbb
add
add
fwait
cwde
add
mov
arpl
loopne
adc
lods
pop
outs
add
adc
mov
adc
outs
ss
aaa
inc
push
imul
xor
inc
js
and
xlat
fiadd
loope
es
inc
test
mov
xlat
aas
dec
syscall
jecxz
shl
fucomip
jmp
dec
inc
shl
shl
jg
lods
mov
xchg
xor
sbb
adc
mov
inc
ins
and
pusha
push
(bad)
ja
clc
dec
xor
xor
jns
mov
jbe
std
and
inc
lds
adc
push
xchg
dec
aaa
mov
loope
or
adc
mov
push
repz
icebp
neg
aas
imul
(bad)
jae
inc
rcr
mov
mov
loopne
sbb
add
xor
sbb
jle
enter
pop
aam
push
nop
shl
xchg
fdivr
cmps
clc
nop
fwait
add
pop
push
and
push
mov
push
pop
test
jne
push
xchg
call
push
jae
add
(bad)
mov
inc
call
cdq
fdivr
fisttp
test
js
jecxz
inc
or
es
aaa
add
lock
nop
lea
test
push
cmp
in
push
adc
test
sub
dec
xchg
and
cld
neg
mov
sub
pop
mov
or
ficom
ins
sub
xor
mov
adc
add
or
inc
sub
add
add
add
add
or
add
or
mov
cdq
or
sub
arpl
inc
pushf
call
hlt
cs
pushf
mov
pop
or
dec
push
mov
xchg
jl
in
add
jg
out
mov
rol
ret
sar
ins
(bad)
(bad)
cld
arpl
push
and
je
push
mov
add
inc
jmp
pop
or
adc
jg
adc
mov
push
cmc
rol
pop
punpcklwd
push
dec
cmp
mov
sbb
int
mov
icebp
sub
cld
xlat
rcl
cdq
xchg
into
stos
gs
scas
aaa
dec
or
lock
cdq
push
ins
out
int
neg
test
popf
or
inc
ret
xchg
inc
jmp
mov
adc
out
sbb
jle
add
inc
xor
xor
xchg
das
pop
add
lahf
hlt
bound
out
mov
sar
or
cmp
ret
dec
pop
call
dec
inc
mov
lock
add
pop
mov
ja
sbb
jecxz
aas
dec
loopne
inc
jne
les
sub
aam
pop
xor
shr
and
add
or
push
sbb
icebp
loope
sbb
and
call
cmps
int
xchg
aaa
loopne
mov
mov
cmp
mov
add
add
and
xor
aam
xchg
aaa
dec
and
adc
xor
inc
clc
(bad)
mov
clc
cmps
bound
and
and
mov
xor
mov
aam
ret
pop
lea
xchg
xor
js
(bad)
jl
mov
test
mov
sbb
add
aaa
mov
xchg
(bad)
cmp
movs
xchg
int
fwait
pop
add
xor
dec
pop
arpl
int
jae
inc
inc
jne
fldenv
adc
jmp
dec
cdq
fiadd
adc
mov
out
gs
ror
sub
xchg
inc
sti
iret
push
hlt
add
push
cmp
cwde
sub
imul
push
or
loope
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
adc
adc
dec
pushf
dec
icebp
pop
cmp
pop
sub
dec
mov
mov
cmp
push
mov
adc
repnz
push
push
push
or
inc
hlt
xor
call
fld
sbb
ret
inc
jae
inc
popf
bound
ret
mov
push
hlt
iret
call
or
out
xchg
or
loopne
movs
dec
popf
inc
xchg
cs
mov
push
pushf
and
pop
pop
mov
xchg
jp
fcmovnbe
rcr
xchg
sub
sbb
xchg
movs
arpl
mov
std
out
int3
pop
mov
std
xchg
or
xchg
sbb
mul
dec
stos
adc
int
movs
add
mov
in
mov
pop
pop
pop
stos
cmp
lahf
pushf
push
jmp
addr16
inc
stos
sbb
mov
add
add
(bad)
fst
cmp
mov
mul
iret
add
push
addr16
sub
push
push
dec
sbb
retf
or
or
jne
xor
jno
inc
adc
lock
or
sbb
xor
sbb
push
mov
push
into
push
add
pop
pusha
les
lahf
inc
rol
adc
push
push
cmp
fisub
and
jns
mov
call
popa
fsubr
add
xor
mov
jbe
aaa
xchg
xchg
aad
xor
nop
ror
push
adc
xchg
sbb
loopne
pop
cmp
inc
or
dec
sbb
and
pop
inc
in
or
xchg
sub
pop
aaa
bound
rol
add
pop
or
jecxz
xchg
adc
xchg
fisub
push
hlt
movs
pop
or
dec
push
dec
xchg
(bad)
cmc
int
ds
iret
cmp
mov
movs
inc
xchg
pusha
push
mov
fidivr
les
cmp
mov
push
repnz
scas
and
adc
and
adc
fidiv
add
pop
rol
jmp
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
shr
adc
dec
call
adc
push
dec
jno
sub
shl
fmul
xchg
and
clc
out
mov
adc
push
xor
cs
push
xchg
and
call
or
xor
out
pushf
add
or
jg
mov
adc
cmp
mov
icebp
mov
cmps
dec
test
sub
mov
fisttp
in
mov
push
and
mov
dec
inc
(bad)
jns
mov
jae
mov
push
repz
sbb
dec
test
cmp
out
or
mov
pop
les
jmp
push
nop
cld
(bad)
rcr
jg
or
int3
fdivr
call
and
call
ins
call
xor
cmp
in
mov
adc
lahf
out
push
add
ins
pusha
gs
cmp
xor
xchg
sub
dec
(bad)
call
cmp
lods
ror
mov
xor
js
and
leave
jg
push
aas
and
mov
aad
stc
test
add
or
je
pushf
and
sbb
add
std
inc
dec
ins
sub
arpl
jne
les
outs
adc
sub
jns
and
inc
xchg
std
push
push
popa
ss
call
or
and
pop
dec
in
test
pop
jae
in
inc
push
ss
imul
inc
int
sbb
popf
imul
repnz
inc
pop
push
arpl
jecxz
shl
inc
test
xchg
rcl
push
cld
jecxz
fwait
add
bound
jb
or
dec
nop
out
outs
or
pop
or
push
inc
ds
pusha
aad
or
rcl
ret
popf
push
in
inc
daa
rcl
ins
mov
mov
push
or
inc
inc
inc
sbb
xchg
xchg
(bad)
js
inc
in
mov
cmp
dec
pop
push
shr
push
jp
xchg
mov
sar
push
and
inc
movs
or
js
adc
cld
jecxz
adc
lea
push
xchg
xor
add
or
inc
sub
add
add
add
add
or
add
or
mov
ror
adc
sbb
and
xor
and
pushf
ror
or
jg
cmp
es
and
cs
cli
xchg
mov
loopne
xchg
adc
cmc
mov
dec
mov
std
adc
add
or
inc
mov
cdq
mov
sbb
es
stc
in
jne
popa
sbb
adc
test
or
cmp
pop
ret
add
aad
mov
push
lods
ror
aaa
in
pop
push
jecxz
mov
(bad)
lahf
fstp
push
jmp
jp
mov
xchg
test
leave
xchg
and
lea
xchg
jns
pop
sti
dec
lea
add
adc
dec
rcl
jae
cmp
sbb
mov
jl
push
scas
xor
ins
xor
push
lods
dec
int
sub
cmp
fadd
add
and
dec
jl
fsubr
(bad)
out
neg
fistp
nop
xchg
scas
and
jge
or
xor
push
daa
rol
enter
(bad)
adc
rol
rol
jae
lock
(bad)
sub
push
xor
inc
mov
push
add
call
add
or
(bad)
sub
sub
inc
pop
shr
and
call
cld
mov
gs
aaa
sbb
dec
inc
lahf
imul
cs
fldcw
clc
xor
(bad)
dec
(bad)
in
adc
xchg
xor
les
or
dec
pop
pop
or
add
inc
nop
pop
push
xchg
inc
les
sub
push
push
bound
mov
inc
cmp
inc
pop
mov
add
sub
jmp
rcr
aas
mov
shl
cmp
sbb
(bad)
aas
lods
rol
pop
ds
(bad)
xchg
lods
mov
rcl
arpl
repnz
bt
add
adc
arpl
movs
mov
push
cmp
js
ror
cmp
loope
dec
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcr
sub
mov
dec
xor
mov
xor
adc
adc
je
inc
loopne
jo
push
std
mov
push
movs
inc
lea
das
pop
js
and
inc
add
lock
iret
cwde
add
dec
iret
pop
xor
mov
jg
or
push
loopne
mov
cmp
into
cld
xchg
inc
add
sbb
inc
mov
cmp
lods
inc
mov
fldenv
lock
iret
aas
movups
or
sbb
xor
pop
fcomp
sub
retf
fxam
fisubr
jge
(bad)
addr16
shr
(bad)
jne
aad
(bad)
mov
and
mov
(bad)
addr16
ins
sbb
fdiv
and
add
pop
out
push
fadd
xchg
cmp
dec
popa
in
inc
pop
das
test
retf
xchg
fwait
loopne
xor
pop
loope
and
jmp
sbb
jb
in
push
(bad)
cmp
(bad)
loopne
jg
jns
rol
test
pop
ss
and
lds
mov
add
sbb
pop
pop
xchg
out
pop
dec
mov
mov
inc
dec
std
add
push
jne
xchg
and
fnstcw
cld
or
sbb
or
sbb
push
push
adc
hlt
xchg
or
jge
xor
inc
add
xchg
pop
jne
add
and
inc
into
or
or
cmp
adc
push
clc
add
and
add
xor
add
dec
and
mov
xchg
stc
fwait
inc
retf
adc
cmps
inc
loop
nop
push
add
xchg
pop
gs
cmps
sub
pushf
clc
xor
(bad)
rcpps
dec
push
adc
sbb
(bad)
aas
daa
inc
xchg
dec
cmp
fsub
adc
mov
dec
jo
sub
sub
add
and
push
dec
mov
adc
cmps
inc
hlt
or
adc
mov
loope
dec
jp
pop
ss
stos
mov
inc
mov
test
enter
jecxz
inc
rol
enter
mov
test
sub
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
add
or
pop
enter
xchg
dec
xor
imul
clc
inc
(bad)
mov
popf
jno
push
movs
inc
jp
sbb
sbb
add
icebp
movs
aas
or
jb
cdq
repnz
xor
push
or
or
sar
mov
add
jo
adc
add
out
pop
add
pop
inc
mov
cld
mov
das
adc
cmps
pop
jmp
jo
and
mov
xchg
inc
cmps
push
out
xchg
mov
call
or
bswap
pop
mov
mov
mov
ins
sbb
aam
or
fs
das
dec
adc
dec
xchg
cmp
pop
mov
imul
dec
shr
int3
pushf
add
mul
or
ja
je
sub
sbb
into
cwde
jmp
cmp
js
fwait
xor
(bad)
stc
addr16
dec
inc
notrack
repnz
xor
sbb
xor
cmp
inc
sbb
mov
adc
xor
cdq
sub
add
inc
ret
pop
jl
sbb
xor
fsubr
and
dec
adc
pusha
add
shl
push
popf
loop
add
or
pop
test
pop
jbe
inc
jle
adc
or
sub
ja
sbb
inc
(bad)
jno
push
mov
test
adc
add
mov
inc
push
pop
jne
sar
sub
cmp
push
mov
jns
popa
ret
aas
push
test
cld
add
add
xchg
sbb
sahf
inc
std
lods
pusha
rcr
mov
adc
add
test
aad
xchg
xor
adc
aas
or
inc
xor
call
mov
inc
stc
adc
mov
jnp
pop
inc
(bad)
xor
cmp
pushf
sub
inc
lods
xor
sbb
pop
xor
add
in
xchg
repnz
and
shl
add
dec
pop
jns
sar
scas
shl
ret
pop
or
sti
pushf
jnp
test
xor
add
xchg
frstor
loop
icebp
clc
and
jecxz
fcmovnbe
inc
out
ret
inc
add
stc
add
or
inc
sub
add
and
sub
add
inc
dec
sbb
nop
mov
sub
mov
dec
cld
push
and
add
push
daa
xchg
ret
aas
add
xor
sbb
inc
mov
mov
sbb
and
in
mov
daa
and
and
pop
xchg
nop
and
pusha
pusha
scas
jg
xor
bound
cdq
add
ret
xchg
call
push
bound
adc
out
push
or
cdq
lock
adc
jne
cli
pop
lods
xor
xchg
fiadd
mov
sub
or
mov
ds
mov
aad
mov
add
nop
adc
rol
pop
adc
pusha
push
and
in
arpl
jmp
push
cli
pop
mov
mov
neg
mov
stos
inc
adc
scas
mov
movs
out
ror
add
in
(bad)
(bad)
int
std
xchg
stc
jmp
sti
jae
pop
retf
(bad)
outs
ret
or
pop
xor
adc
clc
iret
sub
pusha
arpl
cdq
adc
xchg
add
cmc
cmps
sbb
sub
rol
or
inc
xor
mov
pop
jl
pop
enter
xor
inc
cwde
inc
test
add
fild
inc
mov
(bad)
test
mov
push
mov
lock
test
test
ins
or
add
das
scas
or
loop
clc
sub
mov
loope
sbb
in
cdq
and
inc
inc
inc
fcomp
push
add
adc
or
inc
movs
popf
xor
mov
sub
ins
sub
sahf
pop
xor
mov
push
jp
and
test
dec
push
adc
adc
pusha
pusha
push
xor
or
and
cld
jecxz
aas
ja
dec
call
push
cmps
stos
popf
pop
mov
sbb
push
add
adc
jmp
sub
push
enter
xor
pop
fwait
and
add
sub
sbb
and
dec
sub
aad
pop
add
xor
and
inc
and
xor
jbe
mov
ror
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
push
add
add
add
add
add
add
or
inc
adc
adc
add
add
dec
add
sbb
add
add
add
popa
xor
sbb
push
add
neg
add
ins
je
add
sbb
add
inc
cmp
popa
xor
xor
idiv
add
pop
adc
xchg
std
in
cld
push
je
add
add
xchg
sub
enter
shl
jne
hlt
adc
stos
jecxz
aaa
mov
cld
int3
xlat
mov
fnstenv
out
jmp
xchg
ret
add
cmp
(bad)
pop
popa
mov
dec
inc
xor
aad
cld
(bad)
std
sub
adc
add
add
movs
mov
dec
push
mov
(bad)
mov
fimul
xor
call
ins
push
imul
mov
int
int
lds
push
xor
stc
cmp
inc
sti
and
ror
inc
xchg
add
mov
test
shl
cmc
jnp
loope
aas
mov
or
cmp
repz
adc
in
push
xchg
cmp
fcos
in
(bad)
in
add
lahf
enter
jbe
jne
loope
and
jb
sti
icebp
repnz
cwde
(bad)
(bad)
out
jmp
mov
pusha
ins
stos
add
xchg
ret
mov
cli
(bad)
push
pusha
jge
cdq
cmps
in
ror
(bad)
(bad)
(bad)
push
(bad)
and
and
(bad)
sub
and
std
inc
push
out
lods
mov
arpl
add
inc
clc
dec
dec
out
add
inc
fild
or
and
xor
inc
cld
mov
or
push
xchg
sbb
mov
imul
push
shl
fild
(bad)
das
dec
in
aas
pop
cld
add
fstp
call
sbb
or
jns
in
cmp
out
in
inc
imul
xor
adc
or
mov
inc
jmp
dec
add
add
stc
popf
mov
out
fucomi
jmp
test
clc
idiv
inc
in
clc
stc
jge
adc
inc
pop
(bad)
outs
push
mov
cmp
xor
or
xchg
lock
fwait
(bad)
adc
push
aaa
mov
fistp
std
inc
cs
or
ja
out
add
xchg
mov
in
sbb
push
fisttp
sub
mov
xchg
mov
icebp
inc
pusha
aad
pop
call
mov
div
repz
jno
dec
push
idiv
iret
icebp
cs
dec
xchg
adc
pusha
out
and
out
cmp
outs
mov
push
inc
pop
mov
(bad)
cli
(bad)
cli
nop
movs
fidivr
data16
cmc
cmc
in
nop
cmps
iret
add
push
js
(bad)
clc
stc
repnz
arpl
or
adc
fcos
cmc
cld
std
sti
fiadd
cli
add
or
out
sbb
adc
jne
aaa
jns
(bad)
(bad)
xlat
(bad)
jg
push
mov
cmps
pushf
mov
scas
scas
repnz
dec
int3
loope
(bad)
xchg
mov
popa
(bad)
cli
cmps
popf
outs
scas
add
ins
and
pushf
bound
cwde
cs
or
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
or
mov
movs
sub
cdq
pusha
mov
lds
inc
inc
dec
mov
inc
lock
xchg
gs
adc
pop
xor
adc
or
push
mov
dec
sub
(bad)
lea
pop
outs
push
call
or
or
push
movs
cwde
inc
mov
push
push
pusha
ret
mov
adc
(bad)
sbb
cmp
push
jl
pusha
movs
inc
or
mov
add
sbb
dec
adc
adc
inc
adc
movs
pop
lock
and
or
shl
add
adc
pop
int3
cwde
pusha
mov
arpl
push
sub
push
movs
push
sub
pop
lock
pop
ror
push
aas
mov
daa
aas
xchg
fst
js
bound
int
push
rol
jns
and
inc
or
inc
retf
inc
out
cmp
pop
ss
mov
in
pop
inc
lea
xor
mov
jg
fcom
pop
adc
and
shl
ret
lods
enter
hlt
int3
rol
(bad)
stc
rol
or
push
sbb
popa
mov
add
cmp
mov
sub
rcr
dec
mov
add
sub
and
add
lds
adc
mov
sbb
inc
adc
or
sbb
add
sub
push
and
inc
xchg
dec
pop
and
mov
sbb
mov
push
movs
lds
movs
sbb
add
cmc
fld
jno
push
mov
aam
and
sbb
leave
arpl
mov
pop
nop
js
loope
or
test
xor
or
xor
pop
cmp
call
jmp
in
outs
shl
xor
push
fmul
mov
and
mov
sbb
fisubr
sub
and
dec
xor
xor
pop
mov
(bad)
mov
retf
imul
add
rol
hlt
loopne
and
dec
or
adc
out
icebp
pop
adc
and
sub
adc
and
add
push
xchg
push
and
jg
mov
dec
inc
add
enter
mov
and
push
dec
fsubr
dec
xor
xor
cmp
dec
sbb
xlat
dec
inc
enter
mov
push
fdiv
or
xor
pusha
or
in
ret
and
daa
adc
sub
pop
mov
xor
in
mov
mov
aas
shr
dec
xor
xor
or
ror
jnp
setg
dec
add
add
lds
fs
push
enter
push
out
or
cli
push
jno
push
sbb
cmp
inc
push
sub
loopne
dec
int
nop
cmp
xor
or
add
loopne
push
dec
cmp
add
shl
out
mov
adc
jne
jae
inc
in
cmp
add
inc
pop
xor
repz
and
nop
stc
and
adc
std
inc
(bad)
push
aas
xchg
adc
add
test
or
adc
mov
pop
and
and
adc
daa
icebp
xchg
fwait
les
aas
jmp
sub
pop
inc
scas
xor
or
sbb
sub
pop
or
and
xor
sub
add
mov
aas
(bad)
push
and
bound
mov
push
add
add
rol
or
or
adc
sub
in
sbb
arpl
dec
cmp
rol
add
mov
push
cmp
mov
les
sbb
add
psrlq
mov
add
add
or
or
nop
inc
in
sbb
sbb
or
mov
add
clc
and
mov
adc
sbb
add
cmp
loopne
lea
add
pop
loopne
add
adc
loopne
jge
xchg
push
mov
add
inc
xor
loop
add
and
dec
mov
adc
clc
arpl
dec
push
dec
or
(bad)
add
sub
push
add
add
mov
xchg
and
sbb
push
push
rol
jo
pop
push
adc
jmp
xchg
cmp
add
add
stc
add
or
inc
sub
add
add
add
add
repnz
or
push
adc
rcl
(bad)
hlt
cmp
jmp
loope
cmps
mov
cld
fild
adc
sbb
jmp
or
jbe
cwde
loopne
pusha
lods
adc
add
sbb
movs
inc
cmp
(bad)
xor
jp
shr
loope
and
add
leave
(bad)
add
in
adc
adc
cmp
push
jg
ds
xor
or
cdq
add
stc
mov
xor
cwde
mov
xor
dec
or
data16
clc
mov
xor
pop
add
in
test
(bad)
fidivr
mov
push
dec
mov
push
(bad)
jne
push
(bad)
aaa
mov
sbb
and
dec
inc
mov
or
and
or
push
push
mov
outs
or
pusha
inc
add
stc
add
or
inc
sub
add
add
sub
add
inc
dec
sbb
dec
shr
dec
mov
add
pop
inc
clc
retf
lahf
inc
movzx
clc
push
pusha
pop
mov
leave
mov
inc
jb
mov
mov
jb
ins
push
clc
cmp
cli
test
adc
stc
pop
ret
jg
jle
nop
popa
shl
shl
sbb
leave
xchg
or
loopne
xor
adc
loopne
inc
pop
sbb
clc
shr
xchg
mov
iret
push
xchg
movs
inc
rol
call
sub
xor
cld
dec
gs
mov
push
and
sbb
inc
push
scas
in
push
call
pop
or
and
mov
call
push
sub
ret
pop
retf
sahf
dec
mov
outs
jmp
int
mov
ffreep
or
mov
inc
mov
test
inc
mov
mov
les
pop
shl
ror
jle
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
adc
sub
inc
mov
pop
cmp
(bad)
std
enter
scas
unpckhps
add
or
push
and
inc
mov
je
and
les
call
popa
mov
mov
sub
repnz
ret
jbe
adc
xor
mov
mov
cwde
ds
xor
mov
dec
pop
fidiv
mov
test
test
fisub
sbb
mov
mov
cwde
push
arpl
enter
shl
pusha
imul
add
inc
push
xor
lods
(bad)
push
sbb
sub
cwde
add
mov
loopne
cmp
sub
sbb
js
xchg
jg
and
or
pop
(bad)
rcl
or
icebp
fbld
jo
loopne
retf
xchg
mov
mov
(bad)
mov
ret
mov
add
ja
sbb
clc
daa
stos
pop
cmc
add
adc
cmp
mov
std
push
and
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
aas
dec
pop
inc
int
enter
jno
scas
or
inc
mov
mov
or
mov
xor
sbb
adc
imul
dec
aad
loopne
nop
test
ds
add
or
and
and
mov
push
call
popa
cdq
sub
mov
add
or
dec
shl
push
push
sub
ror
pusha
hlt
mov
fstp
adc
ins
enter
inc
dec
pop
(bad)
es
js
sbb
add
imul
jo
bnd
ss
cld
inc
(bad)
js
dec
movs
jb
(bad)
pop
sub
adc
stc
xlat
int3
adc
ss
enter
in
xor
or
lock
adc
retf
add
or
dec
nop
shr
js
push
jge
idiv
push
add
shl
jmp
pop
add
sbb
imul
loopne
mov
dec
mov
shr
push
pusha
test
xor
inc
int3
jo
ja
mov
adc
or
nop
pop
and
rcl
cmc
add
add
in
xlat
sbb
and
add
or
inc
sub
add
add
add
add
or
add
std
jae
jmp
adc
dec
sbb
fist
ins
mov
divps
dec
and
push
nop
mov
push
mov
mov
int3
cwde
pop
push
cmp
push
mov
push
cld
sub
mov
retf
push
pusha
pop
mov
or
pushf
shr
in
xor
rol
add
shl
shl
mov
arpl
push
adc
dec
je
xor
icebp
lea
imul
add
inc
int
aas
add
es
xor
out
add
shr
dec
inc
cdq
and
pop
data16
sbb
leave
inc
cmp
or
repnz
popf
sbb
mov
dec
and
ret
out
inc
daa
or
fild
adc
lock
loope
pop
mov
mov
sar
sbb
cwde
loop
or
inc
dec
leave
xor
xchg
adc
(bad)
fcmove
rcl
jg
jg
adc
daa
loopne
add
push
test
or
mov
or
and
repz
add
and
ret
cld
inc
mov
push
call
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sahf
or
dec
pop
or
mov
mov
data16
or
adc
(bad)
xchg
lods
jo
xchg
add
xchg
mov
or
ret
xchg
and
mov
cmps
dec
push
nop
adc
push
inc
push
add
ror
or
sub
sbb
inc
retf
xchg
add
xor
ins
push
xchg
push
inc
add
mov
inc
mov
mov
lahf
sbb
and
int3
les
mov
jo
inc
and
xchg
mov
mov
adc
xchg
fdivr
pop
cmp
fs
add
jo
sbb
test
push
(bad)
stos
and
retf
xchg
and
into
je
push
xor
mov
sub
dec
sbb
mov
test
loopne
add
sub
(bad)
pop
call
dec
jp
sub
nop
adc
mov
add
push
aam
xor
push
repnz
cli
mov
add
inc
mov
dec
inc
mov
push
or
ins
hlt
rsqrtps
inc
sub
test
push
push
test
xchg
call
sub
mov
cdq
daa
loope
inc
mov
fsub
sar
and
cmp
or
les
mov
dec
or
dec
mov
and
mov
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
mov
pop
enter
xor
call
data16
inc
mov
shr
cld
shr
movs
adc
mov
sub
cs
retw
inc
aas
add
(bad)
test
or
test
add
stos
push
lds
add
push
xor
inc
sub
cwde
push
push
sbb
les
push
sub
or
aas
mov
push
adc
sbb
lods
push
retf
neg
mov
pushf
fs
inc
inc
xor
(bad)
pop
lock
xchg
mov
in
sbb
pop
lock
sbb
dec
push
add
out
or
js
mov
(bad)
ror
sbb
cmp
push
fs
sub
inc
pop
adc
jns
cmovp
dec
mov
xor
inc
pusha
or
inc
pusha
inc
xor
lds
push
ja
sahf
adc
push
fs
js
mov
inc
loope
adc
or
nop
or
leave
aas
gs
movs
lds
stc
repz
and
add
fdiv
adc
ret
inc
aas
cwde
test
rol
add
sbb
les
cmp
xor
and
push
jl
add
enter
add
and
or
int
inc
vpgatherdd
std
xchg
xor
ret
jo
cwde
nop
ins
popf
and
fsubr
(bad)
rcr
push
xchg
test
jmp
sub
les
dec
int3
shl
or
add
loopne
out
test
adc
cs
and
mov
and
inc
fwait
add
xchg
inc
adc
or
inc
dec
sbb
mov
dec
and
aaa
inc
mov
adc
pop
add
or
cmps
nop
or
ficomp
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
mov
or
pop
enter
dec
and
mov
ret
or
imul
es
cdq
jg
inc
pop
sbb
lock
adc
sbb
data16
aam
fs
mov
sub
out
xchg
movs
xchg
adc
movs
nop
xchg
rcr
mov
push
push
push
mov
fucomp
outs
jmp
push
call
mov
mov
ja
lods
push
jg
inc
sub
sub
dec
sub
lock
inc
xchg
sub
pop
sub
jne
add
lock
inc
xor
add
adc
inc
rcr
(bad)
jle
or
pop
push
les
push
in
fild
imul
mov
jmp
scas
aad
retf
pop
pop
sub
cmps
dec
mov
mov
fistp
push
push
mov
outs
std
cmp
xor
sbb
inc
cmp
xor
mov
loop
imul
cmc
mov
dec
jecxz
inc
mov
adc
push
das
mov
cmp
pusha
push
pop
cli
xchg
push
xchg
add
or
inc
sub
add
add
add
add
or
add
or
lock
mov
rcl
ret
xchg
hlt
or
inc
sbb
add
pop
es
mov
(bad)
jnp
mov
add
loopne
xchg
push
mov
xchg
adc
cmp
aad
pop
mov
adc
dec
mov
inc
xor
test
sub
call
test
push
pop
inc
loopne
lods
pusha
ret
mov
mov
(bad)
sti
daa
loopne
and
inc
and
lds
fs
adc
push
fldcw
ins
(bad)
mov
leave
add
(bad)
jb
stc
add
push
(bad)
test
xchg
or
cwde
push
push
jae
clc
aaa
inc
rol
popf
ins
cmc
pop
imul
sbb
out
sar
imul
aas
sahf
loop
push
fmul
mov
dec
lahf
dec
popf
call
or
sar
adc
add
push
sahf
scas
jl
div
lods
jp
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
inc
mov
ret
xchg
addr16
push
push
adc
inc
test
ss
add
push
xchg
lods
fidiv
leave
ror
sbb
mov
xchg
popa
sub
dec
fwait
arpl
sbb
mov
retf
push
sbb
cmp
add
pop
stos
xchg
into
cli
out
fist
push
sub
pop
mov
retf
aas
push
(bad)
test
add
cld
retf
xor
lea
aad
jecxz
aas
outs
pusha
sbb
dec
jg
les
push
or
lock
imul
push
jmp
shl
hlt
inc
xlat
stos
push
and
mov
ffreep
or
dec
jl
out
movs
inc
adc
adc
sahf
xor
adc
pop
cmp
and
or
mov
cmc
inc
icebp
repz
sbb
add
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
and
(bad)
cli
ja
mov
adc
adc
xor
push
jmp
xchg
or
dec
xchg
(bad)
xchg
(bad)
mov
adc
mov
popf
loopne
icebp
xor
sbb
xchg
enter
mov
mov
sbb
lea
push
fdiv
aam
aad
cmp
ins
stos
xlat
scas
pusha
pop
cli
sti
xlat
mov
mov
pop
cmp
adc
lahf
adc
sti
mov
mov
and
or
aaa
pop
in
aas
lds
sbb
(bad)
pop
sbb
cmp
jp
icebp
loopne
cmp
and
call
pop
xor
or
add
nop
pop
xor
lock
sar
add
inc
pusha
push
jecxz
fadd
add
outs
or
push
in
inc
push
scas
pop
or
stos
lds
pop
cmp
jle
or
outs
sahf
jge
arpl
pop
movs
(bad)
mov
hlt
aaa
popa
test
cmp
push
loopne
xchg
std
stos
pop
iret
mov
jecxz
cmp
adc
popf
cmp
cmp
dec
cmp
add
les
mov
pusha
loopne
adc
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
mov
cld
jmp
mov
ret
xchg
gs
or
ret
mov
or
add
xchg
stc
iret
(bad)
sub
mov
jmp
int
stc
aaa
add
inc
leave
xor
xchg
add
shl
inc
cmp
je
xchg
pop
and
stos
aad
pop
mov
mov
and
push
js
dec
rol
add
dec
popf
mov
fstp
push
dec
nop
jg
xchg
clc
mov
add
test
cmp
fwait
sub
in
jmp
xor
pop
shl
inc
test
aaa
call
xchg
mov
loopne
sub
movs
inc
xchg
lea
movs
(bad)
jb
sub
pop
push
mov
or
dec
mov
sbb
xchg
sbb
ja
mov
push
pop
sar
push
xchg
push
dec
sbb
xor
inc
cmc
add
pop
add
ret
cmp
(bad)
add
add
stc
add
or
inc
sub
add
add
add
add
or
mov
sub
pop
cdq
and
and
mov
mov
push
xchg
xchg
cwde
nop
inc
xor
loopne
xor
adc
jg
xor
cmp
test
int
xor
std
dec
mov
loopne
xor
add
and
mov
shl
dec
mov
aad
pop
mov
(bad)
mov
xlat
cmps
adc
adc
sahf
test
push
nop
or
inc
pop
cld
adc
(bad)
rcl
shl
mov
arpl
add
add
stc
add
or
inc
sub
add
or
pop
add
or
add
or
lock
pop
mov
sbb
cmp
(bad)
xchg
arpl
add
stc
out
xchg
inc
inc
xor
dec
fstp
pop
ds
sbb
xor
test
cmp
mov
mov
rol
rol
or
lgdtd
sub
add
add
add
popa
xor
sbb
push
add
shr
add
ins
je
add
sub
add
inc
cmp
popa
xor
xor
idiv
add
sub
(bad)
and
cmps
inc
ss
cmp
push
(bad)
jl
(bad)
mov
repnz
pop
mov
push
pop
je
bound
es
push
ins
(bad)
mov
cmc
dec
imul
and
sub
and
sti
dec
push
cmp
stos
movs
(bad)
jae
enter
jae
mov
push
shr
in
je
(bad)
inc
test
xor
out
inc
pop
ffree
mov
pop
add
jp
ins
mov
xchg
movs
jmp
repz
adc
inc
xchg
or
cmc
push
jno
jl
jmp
dec
lods
sub
inc
popa
sahf
sub
mov
fwait
jmp
repz
jmp
xlat
xor
ins
arpl
xchg
test
add
icebp
jae
in
outs
jmp
push
hlt
adc
mov
push
jbe
popf
mov
gs
call
sar
pop
jns
scas
test
fwait
xchg
cmps
adc
xor
mov
pushf
fild
jmp
clc
dec
gs
xor
in
dec
fistp
cmc
jns
dec
cmps
dec
inc
cmps
sbb
call
adc
jmp
pop
in
sar
fwait
cmps
(bad)
push
jno
jne
cli
imul
(bad)
stos
mov
ins
adc
mov
cs
mov
lock
out
mov
ror
not
xchg
sbb
cli
stc
clc
call
std
js
cld
pop
je
test
rcr
rcl
sti
div
lock
dec
sti
test
pushf
sbb
repz
out
pushf
sbb
test
push
ins
repnz
ins
les
cli
push
jno
pop
jl
xchg
mov
(bad)
std
clc
clc
in
push
(bad)
inc
dec
cli
push
jne
fcom
popf
adc
loopne
popa
clc
inc
pop
pushf
and
or
dec
lahf
cmp
fisttp
hlt
pop
jbe
(bad)
jecxz
mov
sbb
addr16
mov
icebp
inc
push
repnz
(bad)
pop
jnp
(bad)
cmc
stc
stc
loop
das
not
fwait
xor
sahf
and
mov
push
clc
pop
js
dec
pop
scas
pop
dec
clc
movs
mov
mov
pusha
push
xchg
sub
movs
xor
mov
adc
cdq
mov
add
aas
ficomp
sti
out
in
clc
cld
cli
out
pop
jno
xchg
sub
sbb
in
pop
cli
pop
jl
test
mul
neg
(bad)
push
jae
aaa
inc
nop
pop
push
hlt
addr16
adc
shl
cdq
sub
sti
push
je
aaa
inc
out
lock
fidivr
dec
sti
call
ror
xor
and
rcl
scas
cmp
cli
sti
cld
loopne
xchg
pop
psadbw
clc
(bad)
fucomp
scas
daa
and
ror
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
mov
popa
imul
mov
xchg
mov
sub
mov
or
dec
call
lock
test
mov
jecxz
dec
add
mov
or
(bad)
psubusb
clc
jo
xor
adc
xor
or
add
into
or
data16
and
and
or
pusha
add
push
js
out
cmp
push
adc
sub
sub
call
and
sub
or
dec
lock
and
ss
sub
enter
cwde
cmp
pushf
jmp
pop
push
cmp
sbb
pop
cmp
push
sbb
mov
sbb
and
in
push
in
sbb
push
and
clc
icebp
and
ss
sub
clc
or
jb
inc
jno
ret
dec
pop
dec
sbb
or
test
ss
mov
mov
inc
(bad)
es
jo
das
hlt
mov
push
or
or
dec
adc
pop
mov
or
les
sbb
mov
push
daa
or
shl
xor
mov
or
jo
push
mov
je
adc
sbb
jo
or
adc
mov
adc
das
push
mov
adc
dec
xor
dec
ror
mov
cmp
push
daa
pushf
push
inc
rcr
in
add
xchg
pop
add
cmp
test
test
les
les
cmp
fistp
and
add
push
leave
add
inc
cmp
xor
repnz
in
jecxz
es
mov
pop
nop
je
add
in
repz
movs
mov
ds
(bad)
or
pop
sub
fwait
inc
inc
movs
nop
inc
add
sub
mov
add
in
mov
out
mov
mov
mov
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
sbb
mov
cmp
push
sub
and
adc
inc
push
in
ret
push
cwde
add
xchg
and
push
push
mov
loop
sbb
jp
xor
jle
sbb
outs
pushf
mov
jg
loopne
rol
sahf
movs
cmp
sbb
mov
adc
push
adc
add
mov
xor
push
rcr
daa
rol
cs
or
loope
mov
xor
out
push
test
fisub
add
dec
push
adc
sub
cmp
test
adc
in
inc
mov
adc
dec
and
inc
adc
xchg
add
or
add
xor
add
ins
cwde
xor
or
adc
mov
sbb
ror
test
das
or
pusha
ja
add
and
ret
popa
pop
ret
cmp
add
pop
push
sub
ss
clc
add
add
ss
int3
xor
gs
sbb
sbb
jg
push
sub
xchg
xchg
inc
pop
sbb
cli
adc
push
inc
mov
sub
(bad)
cs
sar
push
xor
cmp
add
xchg
je
lds
int3
xor
aad
pop
dec
or
pop
daa
adc
add
dec
mov
and
(bad)
add
adc
repz
cmp
sub
push
sbb
xor
or
dec
ss
sub
rcr
in
in
les
cmp
or
rol
add
jb
sbb
add
or
pushf
inc
push
daa
jae
inc
rol
shl
push
dec
out
and
dec
or
add
pop
mov
retf
push
les
pushf
ins
inc
xor
je
mov
mov
mov
ss
inc
(bad)
or
mov
js
dec
xor
cmp
add
in
add
mov
mov
rol
push
dec
inc
add
inc
mov
add
in
inc
jno
add
sub
js
test
push
and
jp
add
mov
pop
cmps
pushf
xor
sub
mov
pop
dec
rcr
push
aas
cmp
and
jo
int
fadd
or
add
inc
add
call
(bad)
sbb
inc
adc
inc
mov
or
nop
mov
cmp
push
inc
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
inc
adc
sub
enter
and
sbb
dec
mov
enter
dec
retf
xor
or
add
lea
xchg
fdiv
pop
clc
shl
call
xchg
adc
(bad)
lods
cwde
or
fsubr
stos
push
mov
mov
push
rcr
sub
and
out
lea
movs
push
mov
and
cmp
(bad)
aam
arpl
pop
cmp
xor
mov
and
xchg
pop
push
pop
enter
mov
xor
inc
sbb
xor
adc
ffree
(bad)
adc
inc
or
xor
adc
adc
dec
xchg
je
jp
sub
cmp
and
imul
mov
rcl
jo
sbb
leave
sbb
retf
mov
adc
xchg
xor
xchg
cmc
jo
out
and
cwde
jae
dec
fimul
bound
sub
adc
add
mov
xor
or
push
inc
mov
cmp
es
mov
and
in
or
sbb
add
pop
test
or
cmp
or
iret
push
xchg
or
add
shl
icebp
sbb
xchg
ror
fsub
sub
sub
xchg
lea
add
xchg
les
sub
adc
mov
sbb
pop
popa
add
or
pop
inc
add
xchg
(bad)
mov
and
sub
and
or
inc
jl
movs
ss
popa
enter
jae
movntps
mov
add
dec
arpl
popf
repz
xchg
inc
and
ret
jns
call
xchg
inc
sbb
ret
(bad)
inc
hlt
mov
sub
inc
adc
lea
xor
sub
xchg
movs
cmp
arpl
sub
pop
sbb
add
test
les
retf
inc
xchg
add
or
inc
add
addr16
push
daa
aaa
inc
cmp
adc
pushf
ror
arpl
mov
sub
sbb
sub
add
add
xor
add
cmp
adc
pusha
int
int3
sbb
sbb
or
(bad)
or
es
push
sbb
or
push
xor
or
push
(bad)
(bad)
sahf
and
shr
or
and
aas
inc
jo
sub
fbld
xchg
pop
js
icebp
inc
movntq
(bad)
adc
ins
mov
je
ds
jb
pop
sub
rol
cmp
and
fld
cmps
mov
sbb
je
or
mov
mov
mov
bswap
inc
pop
jns
inc
cmc
inc
or
xchg
xchg
add
loopne
add
mov
pop
adc
sub
or
jns
dec
and
lds
pop
call
mov
add
dec
imul
fs
mov
inc
mov
adc
add
and
add
add
inc
sub
add
add
add
add
or
push
and
ins
mul
xchg
xchg
or
lods
and
dec
les
pusha
and
xchg
jno
loop
popa
mov
test
jno
xchg
and
stc
push
enter
sbb
mov
iret
xchg
call
and
mov
int3
lahf
inc
pop
push
mov
sub
push
jns
(bad)
push
dec
or
sbb
leave
test
js
(bad)
stc
adc
and
sub
mov
loope
es
nop
and
mov
mov
(bad)
ret
test
sbb
repnz
xor
sbb
js
and
or
aad
dec
push
sub
mov
outs
pop
dec
xor
je
push
mov
push
xchg
cmp
loopne
movs
retf
and
rol
push
mov
int3
outs
dec
adc
xchg
aaa
dec
jbe
jmp
and
fsub
adc
pop
dec
scas
dec
pop
inc
jno
inc
inc
fmul
sub
(bad)
or
push
add
push
pushf
jno
cmp
jo
add
or
fcom
xor
movs
lock
xor
adc
add
or
sub
dec
js
mov
push
and
stos
mov
mov
sbb
loopne
(bad)
dec
xchg
adc
add
adc
mov
add
dec
dec
mov
test
repz
sub
ret
mov
push
mov
inc
test
in
add
and
movs
push
sar
lock
ds
adc
xchg
les
ror
or
add
adc
pop
adc
int3
sub
inc
sbb
sub
or
dec
xor
push
retf
cld
hlt
rol
lea
push
sbb
add
push
pop
ins
inc
jmp
into
sub
dec
sub
dec
and
xor
ret
sub
xor
cwde
push
xor
push
cmp
adc
sbb
sub
and
mov
pusha
mov
sbb
js
ror
sbb
inc
sbb
ins
adc
pop
je
add
in
or
and
fdiv
or
mov
xor
fidiv
bound
(bad)
punpcklwd
or
adc
adc
push
test
aam
mov
inc
inc
or
push
lock
mov
mov
jns
adc
leave
or
mov
dec
and
inc
xor
or
gs
add
mov
jb
push
ja
js
sbb
or
ror
imul
mov
sub
xchg
sub
nop
mov
movs
dec
sti
in
sub
push
(bad)
sub
in
wbinvd
movs
mov
(bad)
xchg
pop
je
add
pusha
nop
jmp
lock
and
and
movs
mov
fcom
and
cmps
call
jb
xor
or
les
aam
sbb
add
add
inc
sub
add
add
add
add
arpl
dec
sbb
in
movs
add
sub
dec
mov
imul
sar
inc
add
ret
adc
and
adc
jbe
and
xor
pushf
dec
mov
int
sub
and
push
test
adc
into
data16
xlat
int3
mov
fidivr
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
jo
scas
sbb
out
xchg
inc
or
dec
sub
retf
(bad)
xchg
and
dec
add
or
mov
adc
cmp
push
movhps
mov
xchg
gs
push
xchg
and
fs
sub
mov
aad
popa
retf
jns
mov
add
in
and
int
aas
sub
mul
inc
bound
or
and
lods
ds
and
lods
push
fnstcw
add
jl
loop
push
xchg
push
shl
adc
ret
aad
(bad)
push
mov
leave
mov
rol
mov
test
pop
add
xchg
or
cmp
xor
add
inc
daa
dec
cmp
and
xchg
loop
xchg
inc
fucomp
aad
sbb
add
call
add
fmul
shl
add
dec
popf
les
lock
enter
mov
inc
xchg
dec
add
lods
cmp
xor
pop
repnz
call
or
cmp
in
add
dec
xchg
cmp
ret
or
jle
mov
sbb
int
bound
mov
test
int3
adc
xchg
push
nop
sbb
dec
loopne
(bad)
mov
cmp
mov
mov
or
sub
dec
ss
inc
push
or
adc
push
sbb
test
ret
sub
add
sub
jl
add
or
ror
ss
adc
ret
das
leave
pushf
lock
cmps
xor
les
das
daa
pushf
add
leave
adc
mov
das
jnp
jmp
or
push
call
xchg
inc
push
mov
jbe
icebp
lock
das
cmp
add
cmp
mov
mov
inc
pusha
push
xchg
jle
inc
adc
iret
xor
and
and
add
xchg
push
and
mov
inc
push
aaa
mov
jo
adc
adc
jl
mov
inc
xchg
sub
lock
cmp
cwde
loop
sub
mov
mov
inc
pop
cs
and
and
add
test
sub
(bad)
mov
mov
dec
xor
bnd
dec
cmp
ins
adc
int3
and
sbb
push
xchg
pusha
pop
sbb
fcom
pop
cdq
add
xor
in
in
inc
sbb
jnp
rcl
fmul
or
or
les
int3
or
jb
cmp
mov
rcl
sbb
lock
mov
loopne
inc
aaa
mov
cmp
in
push
sbb
(bad)
loopne
pop
adc
add
cmp
movs
xor
push
(bad)
in
and
sub
mov
test
test
mov
loope
sbb
add
fild
loope
inc
sub
and
loop
pop
add
(bad)
adc
int3
sbb
xchg
enter
cmp
bound
cdq
rol
xchg
aad
mov
pop
push
or
pop
ret
push
push
mov
pop
pop
sub
ret
pop
xor
xchg
inc
adc
clc
or
aas
inc
add
imul
inc
or
sbb
adc
std
dec
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
jo
or
mov
adc
or
xchg
sbb
push
dec
pushf
clc
outs
int
sbb
xchg
pushf
push
xor
xchg
inc
sbb
sbb
dec
xchg
and
and
jle
loop
stos
add
fcmovb
lds
sub
lock
stc
xchg
mov
add
mov
xor
dec
rcl
adc
data16
retf
adc
jg
add
or
pop
mov
xlat
int3
jb
jp
stos
inc
sub
or
and
inc
pop
sub
sub
dec
pop
cwde
push
das
(bad)
fnstenv
sub
dec
push
sbb
loop
mov
lds
mov
inc
std
retf
hlt
and
sub
ror
sub
call
jo
mov
adc
sar
(bad)
lods
and
lea
push
out
pop
stos
and
inc
es
push
mov
or
jmp
jae
adc
and
leave
add
adc
jnp
leave
mov
fistp
pop
pop
cld
mov
sbb
mov
nop
xor
into
inc
push
hlt
and
call
shr
or
cdq
popa
push
(bad)
clc
and
pop
add
and
xor
sbb
mov
add
adc
or
adc
adc
test
or
push
mov
sbb
mov
or
inc
xchg
cld
adc
arpl
sub
sbb
(bad)
call
adc
dec
pop
call
mov
fdiv
pop
pop
mov
mov
add
lock
cmp
mov
repz
sbb
push
sbb
mov
or
aam
cmp
(bad)
loope
cmp
adc
dec
sbb
jge
dec
das
adc
test
adc
iret
ins
adc
xor
iret
push
lods
sbb
add
push
lock
sahf
add
repz
lea
inc
sub
fcom
cdq
jnp
les
lods
push
cwde
ins
mov
inc
daa
inc
inc
mov
icebp
iret
add
adc
add
xchg
sbb
cwde
sbb
push
pop
scas
ins
adc
aas
(bad)
cmp
ret
add
aaa
and
add
outs
leave
and
sbb
jo
xlat
or
lahf
or
or
aas
jno
adc
pop
mov
loopne
inc
push
sub
ret
or
mov
dec
push
xor
dec
(bad)
arpl
add
adc
pop
or
xor
dec
sbb
mov
rcl
adc
retf
push
retf
les
jecxz
adc
dec
or
and
cmc
add
ret
in
icebp
inc
add
ror
mov
adc
mov
hlt
add
add
and
add
add
inc
sub
add
sbb
sbb
add
inc
dec
sbb
push
lahf
inc
(bad)
adc
dec
cmp
xchg
or
push
adc
(bad)
jp
mov
daa
xlat
jl
icebp
jb
sbb
inc
jp
fcom
mov
popa
add
int3
mov
inc
add
jno
pop
inc
mov
add
or
dec
lock
lock
sar
adc
pop
mov
loop
push
adc
inc
add
rcr
or
call
test
je
nop
adc
adc
mov
dec
mov
mov
cld
and
adc
mov
cmp
pop
mov
retf
xchg
and
push
clc
or
rcr
test
add
mov
pop
sbb
ins
or
mov
mov
fmul
pop
adc
sub
adc
pop
into
xchg
add
out
cmp
cmp
(bad)
jl
fs
scas
add
nop
hlt
or
call
not
cmp
cld
pop
call
xor
adc
ins
sub
cdq
cmp
push
and
addr16
and
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
or
and
add
call
push
jbe
mov
fdiv
sub
fwait
call
arpl
push
inc
dec
lea
adc
loopne
sbb
es
jmp
and
loope
mov
sub
inc
bound
add
inc
mov
loopne
ror
pop
xchg
sub
inc
fidivr
push
test
mov
test
adc
jp
and
xor
xchg
xchg
test
xor
pushw
(bad)
retf
and
pop
cmp
mov
aam
nop
and
mov
xlat
or
daa
mov
mov
dec
enter
ret
lds
and
imul
call
in
or
jmp
sub
neg
adc
push
mov
js
enter
clc
xchg
adc
mov
and
xor
push
or
and
mov
sub
ja
movs
xchg
jb
in
fmul
es
mov
xchg
pop
push
test
mov
int3
xor
or
popa
int3
push
adc
out
jg
push
mov
inc
mul
jl
or
mov
push
xchg
fcmove
and
xchg
cmp
cmp
sbb
pop
xchg
and
or
add
pushf
dec
add
inc
sub
movsx
xor
mov
jo
add
call
nop
icebp
test
retf
inc
sub
sbb
or
dec
jecxz
adc
(bad)
or
push
sbb
cmp
fwait
mov
(bad)
and
ret
cmp
pusha
add
sub
je
mov
push
push
dec
sub
ret
gs
mov
dec
or
pop
rol
jmp
mov
adc
int3
and
shr
adc
adc
sti
xchg
inc
daa
outs
test
pop
daa
push
movs
shr
arpl
test
jb
or
outs
iret
lds
mov
add
lea
into
add
adc
add
push
sub
mov
xchg
or
push
and
movs
ins
add
or
clc
lock
loopne
bound
ins
in
loop
and
mov
ror
adc
inc
ror
mov
dec
and
dec
inc
xchg
imul
mov
push
adc
pop
(bad)
mov
int
cmps
sub
or
cmp
add
daa
int3
sbb
enter
xchg
mov
inc
add
add
jb
add
enter
inc
inc
lods
icebp
dec
or
sub
jne
retf
mov
sete
adc
adc
(bad)
xor
dec
int3
repnz
inc
cmp
add
add
and
add
add
inc
sub
add
add
add
add
inc
std
or
mov
rol
ins
enter
push
movs
js
mov
rol
mov
pop
dec
retf
sar
ins
jo
jb
inc
or
repz
pop
aaa
and
nop
dec
mov
dec
mov
fucomi
push
ror
xor
imul
jmp
lods
pushf
(bad)
iret
xchg
or
add
popf
enter
xchg
or
mov
sar
cmp
pop
mov
inc
repnz
ins
ret
xchg
xchg
jl
adc
inc
mov
xor
push
rol
out
or
cmp
or
pushf
add
data16
fidivr
mov
pop
mov
sahf
jo
ins
and
dec
add
xor
ret
inc
in
push
sub
xor
or
push
mov
mov
ret
adc
test
mov
pushf
xor
inc
add
out
jb
call
xor
mov
shr
inc
add
imul
imul
dec
pop
popa
mov
or
jo
or
add
pusha
adc
retf
sub
jl
sub
ins
test
pusha
test
and
or
adc
and
add
mov
ss
clc
lds
and
fwait
nop
xor
(bad)
cmp
xchg
shr
mov
mov
icebp
(bad)
sbb
push
(bad)
adc
mov
mov
inc
add
fwait
push
add
cwde
arpl
in
ret
lods
mov
push
push
xor
inc
pop
fcom
cmp
lea
inc
pop
push
mov
daa
test
jecxz
xor
xchg
repz
add
and
bound
dec
xor
xchg
adc
sub
fadd
es
mov
mov
add
dec
xor
test
mov
xor
retf
sbb
lock
pop
push
fdiv
or
je
add
inc
sub
mov
sbb
adc
push
cwde
and
mov
bound
out
shl
je
sbb
shr
xchg
push
adc
add
mov
ins
in
add
into
pop
xchg
dec
push
sub
dec
or
or
xchg
mov
sbb
sbb
push
neg
or
push
aad
popa
dec
pop
ds
mov
loope
adc
jns
inc
sub
lock
(bad)
jnp
sbb
int3
adc
and
ret
(bad)
xor
retf
fist
ins
mov
dec
jmp
rol
pop
je
inc
sub
je
fdiv
and
sbb
push
add
sub
les
mov
sbb
sub
mov
ret
sti
cmp
(bad)
sub
idiv
mov
sub
lock
shl
inc
dec
inc
retf
xchg
inc
dec
sbb
cmp
adc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
and
inc
push
or
jbe
push
movs
cmp
xor
mov
cmps
or
aam
aad
jg
nop
cmp
xlat
movs
dec
stos
adc
outs
scas
adc
ret
xor
movs
rol
repz
adc
cmp
mov
cmp
imul
xchg
and
fst
jb
inc
xchg
xor
xchg
xor
inc
sbb
jo
sar
cmp
inc
dec
or
outs
sub
rol
adc
xor
enter
cmp
add
mov
loop
outs
push
xchg
shr
popf
sahf
xor
es
push
or
repnz
test
add
pop
push
inc
mov
jno
cmp
push
inc
add
or
jbe
ror
mov
shr
mov
push
xor
inc
or
inc
add
xchg
xchg
cs
and
nop
and
xor
lock
lds
add
aam
add
pop
ret
adc
mov
arpl
xchg
fldcw
ret
xchg
adc
retf
xchg
movs
enter
adc
repnz
leave
adc
mov
or
jo
add
cmp
mov
mov
cmp
fs
or
cmp
enter
mov
cmp
inc
inc
ins
cmp
inc
cmp
xchg
push
inc
pop
cmp
mov
and
xchg
cmp
or
rol
adc
rcl
jns
mov
add
xor
(bad)
fdiv
lea
aaa
retf
lea
test
(bad)
sbb
pop
jmp
xor
pop
rol
add
sbb
sub
(bad)
push
cmp
and
cmp
ins
mov
mov
sub
xor
nop
shl
adc
mov
adc
add
xchg
mov
jecxz
and
sbb
ins
mov
repnz
mov
pop
push
nop
or
jo
cmp
fs
and
push
mov
daa
adc
jae
rol
dec
jo
inc
dec
push
lock
pop
test
ror
or
add
inc
das
scas
popf
add
sbb
repnz
fadd
aaa
cmp
xchg
inc
push
push
rcr
jmp
sbb
ret
rol
cmps
fadd
mov
loopne
cmp
(bad)
or
pushf
rol
nop
pop
inc
xor
ins
mov
and
cmp
and
push
adc
lods
mov
dec
daa
push
ins
jne
add
dec
das
and
push
add
add
stc
add
add
inc
sub
add
add
add
add
or
clc
outs
fdivr
ja
adc
in
cmps
mov
rcr
sbb
mul
pop
push
or
lahf
xchg
jg
(bad)
and
or
and
cmp
shl
sub
cmps
ret
xor
int
cwde
adc
or
add
sub
sub
out
pop
sbb
(bad)
jne
mov
mov
loop
adc
fstp
sub
cmc
adc
out
sahf
and
cmp
xor
xchg
and
clc
xchg
mov
lods
push
xchg
pop
pusha
inc
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
pop
xchg
dec
push
add
cmp
rcl
mov
mov
arpl
sub
test
add
(bad)
retf
xchg
arpl
inc
push
sbb
or
ret
push
adc
fsub
mov
cdq
aam
add
bound
call
sbb
jp
mov
and
rol
adc
push
cmp
and
adc
mov
ror
adc
popa
cmp
rol
mov
mov
push
pop
add
xor
aam
xor
add
mov
jg
xchg
and
xchg
ins
add
sub
inc
add
je
jb
adc
sub
frstor
mov
sbb
pop
or
mov
movs
push
mov
push
sbb
pop
mov
fcomp
mov
mov
sub
mov
jno
aam
xchg
mov
xchg
and
mov
adc
ret
(bad)
dec
and
add
and
(bad)
jmp
push
or
add
xor
add
lea
in
adc
aaa
lods
mov
mov
neg
rol
mov
or
sub
add
mov
adc
repz
jmp
and
and
mov
adc
push
add
cs
mov
sbb
add
shr
cs
enter
rcl
pusha
xor
push
sub
add
fld
int3
add
sbb
xor
add
mov
xor
xchg
inc
push
mov
xchg
lds
loope
or
add
and
push
iret
and
or
in
or
pop
inc
enter
rol
adc
loope
aaa
fistp
loopne
pushf
xor
sbb
bound
or
call
adc
dec
sub
je
rol
inc
or
dec
cmp
retf
int3
push
dec
cmp
add
retf
or
rcl
mov
mov
push
add
xor
iret
sbb
jb
popf
in
stos
out
mov
inc
add
stc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
and
sbb
inc
ss
mov
add
sbb
pop
call
mov
xchg
add
nop
mov
add
sub
mov
mov
les
sbb
pop
mov
(bad)
or
retf
(bad)
push
adc
inc
test
or
out
or
add
sbb
loop
fldcw
cld
lods
adc
test
int3
dec
xchg
mov
inc
add
adc
imul
cmp
and
and
shl
ucomiss
mov
mov
aad
or
les
cmp
cmp
mov
push
mov
dec
outs
sub
jo
rol
ret
lea
mov
dec
popf
into
ins
and
fcomp
in
das
sbb
pusha
xchg
sbb
adc
mov
cmp
push
loope
sbb
push
inc
xchg
cdq
shl
jmp
sar
js
push
(bad)
les
ret
cmps
mov
hlt
cmps
pop
ss
adc
or
pop
shl
loopne
(bad)
push
pop
push
inc
adc
mov
out
ss
popf
xor
push
arpl
add
or
add
fdiv
inc
fld
add
rcl
loope
adc
pusha
or
ja
mov
or
arpl
jl
or
adc
ror
sub
fs
cwde
bound
push
xor
pop
jns
lock
aas
mov
ret
test
test
les
les
cmp
fistp
and
add
fmul
add
dec
push
in
add
dec
rcl
adc
ret
add
rol
add
cmp
and
sub
aam
imul
mov
and
inc
movs
nop
inc
add
stos
in
mov
cwde
xchg
add
mov
and
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
loopne
mov
rol
rol
or
lgdtd
and
add
add
add
popa
xor
sbb
push
add
jmp
add
ins
je
add
pop
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
cmc
add
out
add
out
push
inc
add
icebp
add
movs
add
jmp
(bad)
std
cli
std
imul
stos
add
in
in
retf
push
mov
add
xchg
add
xlat
sbb
in
jecxz
mov
(bad)
adc
mov
out
add
jns
popf
bound
(bad)
xchg
add
loope
fidiv
cwde
imul
push
(bad)
(bad)
adc
cli
ret
(bad)
(bad)
cmp
imul
xchg
mov
sbb
cld
aam
(bad)
and
add
mov
mov
repnz
call
add
inc
dec
add
jmp
mov
retf
add
fld
(bad)
stos
and
fcmovb
or
dec
add
mov
repnz
in
jb
rcr
in
push
out
add
jecxz
(bad)
jmp
or
mov
dec
(bad)
inc
retf
scas
mov
add
add
mov
retf
cmc
repnz
(bad)
(bad)
cs
loop
stos
adc
fmul
(bad)
std
hlt
(bad)
repz
popf
add
ror
ja
std
retf
mov
ret
xchg
pop
push
mov
add
imul
xchg
pop
add
add
sbb
mov
mov
int3
mov
push
cmps
ins
adc
repz
push
mov
add
mov
jmp
add
mov
mov
push
in
adc
add
adc
add
adc
jecxz
sti
cmc
jmp
mov
(bad)
cli
push
call
add
fiadd
int3
mov
ret
or
mov
fadd
call
xchg
push
pop
test
mov
add
call
repz
(bad)
lods
or
test
cmp
dec
add
cli
std
imul
jmp
add
cld
in
mov
add
mov
les
sti
mov
rol
scas
add
retf
mov
push
div
lock
out
aad
(bad)
out
add
cli
or
add
js
push
stos
jle
call
add
jmp
clc
(bad)
add
stc
or
test
mov
mov
or
stos
or
mov
inc
std
inc
(bad)
mov
test
(bad)
jmp
cld
out
icebp
out
repnz
iret
scas
adc
clc
not
adc
out
call
rol
clc
fiadd
cld
fld
ja
cld
jmp
cld
cld
add
out
xor
or
nop
or
leave
add
in
or
in
jg
rol
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
test
inc
add
mov
mov
adc
loopne
push
mov
outs
outs
add
adc
aad
or
or
push
add
cs
push
(bad)
(bad)
sbb
sub
xor
inc
dec
and
add
adc
or
xchg
rcl
inc
mov
and
pushf
jne
inc
rol
pop
push
ins
inc
mov
stos
into
adc
inc
lds
nop
in
mov
test
add
rol
ins
rcl
cmp
cmp
add
sub
pushf
cdq
sbb
loop
cmp
mov
cmp
mov
inc
push
mov
dec
xchg
dec
jecxz
xchg
dec
or
stos
inc
fs
add
pushf
popf
push
loopne
je
add
push
xchg
or
ins
adc
cwde
loopne
push
push
mov
push
jmp
mov
inc
and
add
jo
cdq
add
loop
cmps
xchg
sahf
push
adc
and
fcomp
mov
push
inc
mov
(bad)
jb
addps
dec
xor
xor
mov
sbb
push
push
xor
adc
inc
add
out
adc
adc
jo
sub
adc
add
pop
or
add
mov
mov
cmp
mov
cmp
popa
adc
nop
push
add
in
or
add
sub
rol
or
adc
add
mov
rcr
add
in
push
fabs
mov
nop
fs
hlt
or
loope
or
add
sbb
or
fs
dec
mov
inc
and
dec
adc
cwde
adc
cmps
adc
add
jae
pop
adc
pop
enter
and
loopne
or
or
shl
push
(bad)
pop
les
mov
rcl
inc
or
add
or
xchg
rol
xor
and
test
call
int
inc
sub
add
pop
dec
or
fmulp
lods
mov
and
rol
push
push
sub
aaa
xchg
xor
mov
or
scas
mov
scas
pop
push
out
mov
pop
mov
push
scas
or
fmul
imul
ret
or
or
add
push
dec
fdiv
push
mov
cmp
cmps
lahf
push
and
add
pop
imul
and
sub
or
and
daa
or
enter
xor
pop
pop
popf
lods
fldenv
xor
jmp
xchg
mov
pop
mov
pusha
xchg
xchg
int3
and
lods
jl
dec
int
pop
adc
and
popa
fwait
jmp
and
or
dec
push
(bad)
in
int3
jno
cmp
ror
push
pop
cmp
dec
adc
daa
push
sub
add
movs
test
mov
inc
inc
or
scas
je
int3
xor
outs
pop
adc
clc
xor
adc
adc
leave
sbb
mov
push
sbb
enter
sbb
sbb
adc
mov
hlt
add
cdq
popa
in
inc
rol
sub
cmc
push
xor
or
mov
aas
sbb
add
mov
adc
(bad)
cmps
xchg
push
in
inc
or
inc
pop
stos
mov
or
rol
and
or
adc
add
bound
add
test
enter
jmp
ror
nop
add
rol
test
add
aaa
adc
or
and
rol
(bad)
sbb
inc
push
test
les
sbb
lock
dec
enter
or
add
dec
xor
test
sbb
inc
or
push
nop
test
shl
sbb
bound
add
sbb
add
loopne
and
loopne
sbb
add
and
xchg
push
inc
adc
jp
or
add
push
sbb
jp
add
ss
add
mov
aad
sbb
jo
jns
ret
and
and
adc
mov
in
add
inc
add
inc
add
arpl
sbb
or
add
jecxz
pop
rol
adc
add
add
add
test
sub
xor
or
add
out
pop
daa
sbb
xchg
and
inc
and
xchg
test
les
or
xor
pop
xor
sub
mov
or
movs
or
movs
or
mov
or
hlt
arpl
inc
inc
sbb
add
inc
and
adc
and
ds
mov
inc
sub
pusha
aam
ds
pop
or
push
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
pop
add
add
inc
sub
add
add
or
add
or
mov
rol
mov
ret
add
mov
xchg
rcl
push
mov
icebp
push
loopne
pushf
inc
inc
out
cwde
call
and
sbb
push
in
pop
or
sub
sbb
sub
mov
or
add
mov
sbb
push
mov
add
mov
inc
pop
add
rol
mov
sbb
add
cmc
inc
sbb
cmp
inc
ret
pop
mov
cdq
arpl
or
mov
or
(bad)
loopne
imul
add
or
xor
adc
or
adc
jecxz
sub
sub
adc
mov
dec
xchg
adc
add
adc
cwde
loopne
pop
pop
push
sbb
shl
loopne
cmp
xor
icebp
enter
lods
dec
mov
xchg
outs
add
stc
outs
mov
inc
or
mov
dec
repz
sbb
ins
pusha
ret
dec
mov
xchg
xchg
mov
or
rcr
pusha
or
lods
and
xchg
adc
pop
or
or
pop
and
leave
xchg
mov
mov
call
adc
(bad)
or
jne
shl
or
mov
or
dec
inc
xor
add
sar
xor
adc
mov
mov
test
hlt
dec
adc
pusha
mov
xor
aam
add
sub
jecxz
mov
pop
xchg
addr16
sub
cmps
daa
xor
cmp
jmp
test
pop
and
or
or
imul
add
sbb
adc
mov
mov
mov
adc
or
ins
fcomp
and
jno
sub
add
add
adc
add
adc
xor
test
and
xor
or
scas
xor
sub
and
add
jmp
arpl
push
rol
xor
pusha
push
mov
xchg
and
pop
sbb
xchg
or
add
sbb
jo
xor
or
int3
mov
test
rol
outs
add
ret
(bad)
pop
jo
sbb
xchg
and
or
or
or
int3
call
inc
js
pop
and
int
daa
and
jmp
leave
or
loop
cmp
or
ret
push
xchg
pop
pusha
jb
dec
punpcklbw
ret
pop
add
xchg
iret
push
(bad)
dec
xlat
and
nop
push
add
push
and
inc
or
cmp
cmp
pop
stc
or
add
mov
sbb
cld
inc
retf
sub
mov
push
jnp
addr16
mov
inc
xor
push
ins
xor
push
and
jns
mov
mov
(bad)
adc
fwait
jnp
mov
ret
sub
or
add
mov
cmc
push
inc
pop
inc
and
jne
dec
add
dec
ds
inc
sar
jp
dec
pop
and
sbb
xor
ror
add
mov
inc
sub
pusha
push
dec
mov
sbb
mov
or
js
cmp
lock
lods
in
aad
or
inc
add
mov
sbb
xor
push
jno
jl
add
add
add
not
addr16
adc
add
or
mov
pop
sub
or
pop
xchg
ret
add
add
pop
fadd
add
add
fadd
sub
mov
mov
jb
aas
dec
and
bound
adc
fadd
or
mov
mov
sbb
adc
dec
int3
or
cmp
dec
loop
jne
inc
or
les
jb
ret
mov
ss
ret
adc
xor
push
or
sbb
ret
sbb
call
or
and
inc
inc
inc
cmovg
or
inc
add
int3
mov
aas
rol
mov
push
add
sbb
adc
sbb
push
inc
push
or
mov
dec
mov
and
rol
add
or
mov
adc
sbb
sbb
push
sbb
push
inc
rol
adc
xor
sbb
push
outs
xchg
rol
inc
mov
sub
and
mov
sbb
add
add
mov
test
push
xor
pop
cmpps
inc
xchg
add
or
inc
mov
xor
push
test
add
loopne
test
les
xchg
or
add
test
es
and
dec
cmps
push
xchg
inc
adc
rol
jecxz
push
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
sbb
call
push
pop
xor
fsubr
in
inc
jg
jo
dec
xchg
mov
out
movs
shl
addr16
xchg
sbb
pop
call
cmps
push
mov
push
adc
or
adc
or
lahf
add
sub
retf
cmps
inc
mov
cwde
add
add
pop
dec
xor
sub
call
dec
push
ins
inc
sbb
push
inc
stc
push
in
pop
jg
aam
push
adc
add
xchg
hlt
inc
retf
sbb
jbe
cmp
sub
add
push
xchg
mov
mov
cmp
pushf
push
loopne
mov
ins
(bad)
or
adc
dec
xchg
sbb
jle
bnd
or
sbb
loop
mov
adc
add
push
inc
mov
sbb
jo
lock
retf
add
loope
rcl
push
(bad)
cmp
xchg
mov
cmps
and
cmp
cmp
test
por
add
xor
rol
mov
les
(bad)
adc
ins
pusha
ret
dec
mov
add
daa
je
xor
popa
xchg
xor
inc
inc
add
jnp
xor
mov
add
xchg
and
adc
arpl
or
je
pusha
add
sub
or
bound
pushf
fs
mov
jns
xchg
or
ret
dec
jmp
rol
nop
mov
add
jmp
mov
add
inc
or
push
xchg
shl
in
xor
adc
jne
add
inc
pop
pusha
mov
lods
inc
inc
add
test
or
xor
ss
shl
add
inc
mov
mov
add
movs
xchg
test
loopne
push
inc
pushf
push
mov
mov
movs
shl
inc
adc
add
loopne
mov
mov
and
pop
dec
lock
add
lea
or
rol
leave
pop
push
push
add
sub
jmp
pop
sub
cmp
or
mov
xor
adc
or
cwde
loope
add
inc
ret
aam
mov
lds
xlat
lea
add
cmp
or
fmul
or
or
add
pop
dec
dec
and
fcom
enter
inc
shr
jmp
cld
in
inc
add
sbb
xor
ror
adc
or
dec
cs
js
or
jae
stc
push
ss
cli
mov
cmp
inc
leave
ss
ins
and
(bad)
sbb
shl
mov
fadd
pop
daa
test
push
leave
jne
mov
jo
inc
inc
pop
add
jo
mov
and
sbb
inc
or
sar
or
les
add
sbb
shr
outs
imul
xlat
inc
mov
inc
into
and
cmp
xchg
fimul
jl
xor
popa
int3
pop
dec
and
mov
or
and
adc
in
add
add
and
jmp
ret
or
mov
or
inc
or
cld
mov
push
mov
pop
stc
dec
xor
and
inc
inc
loopne
data16
ror
inc
ret
punpckhbw
push
pusha
adc
pushf
inc
add
jno
push
cwde
nop
add
inc
or
and
sbb
loope
mov
inc
adc
adc
add
add
push
inc
adc
and
sbb
dec
inc
or
or
aam
or
inc
or
popa
sub
fld
xor
and
adc
loopne
sbb
loope
dec
sub
fadd
and
xchg
rol
cmps
jo
adc
popa
or
or
fsub
sbb
inc
pop
or
cmp
loop
stc
enter
xor
dec
jo
adc
xor
dec
loop
and
adc
rol
or
mov
adc
add
xor
add
cmp
and
ins
inc
add
xor
in
or
inc
add
mov
pop
mov
cs
sbb
xor
adc
add
bound
mov
and
add
and
lahf
inc
(bad)
sub
adc
loop
pop
loopne
sub
jo
(bad)
pop
loope
movs
sub
sbb
mov
add
(bad)
fadd
sbb
and
add
sbb
mov
sbb
fadd
cld
and
inc
enter
rol
sbb
test
xor
add
adc
mov
push
or
add
movs
add
inc
and
mov
adc
push
ins
xor
or
dec
adc
nop
sub
pusha
test
sbb
sub
and
inc
pusha
jmp
and
and
retf
and
add
stc
add
add
inc
sub
add
add
or
add
or
jo
mov
pop
mov
and
mov
sbb
mov
je
dec
xchg
loopne
add
jle
and
xor
adc
xchg
sub
dec
sbb
repz
and
out
(bad)
icebp
xor
jno
mov
xchg
xor
js
daa
adc
push
test
add
lods
adc
and
add
inc
je
push
loop
jg
push
and
xchg
mov
aad
sbb
leave
data16
clc
sub
adc
or
cmp
arpl
and
ret
enter
lock
cmp
or
(bad)
rol
xchg
xchg
mov
xor
je
pop
mov
xchg
pop
jno
fsub
mov
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
and
loopne
xchg
dec
loopne
or
and
xor
mov
mov
test
lea
xor
cs
lods
mov
xchg
imul
test
ror
adc
push
or
imul
dec
xchg
dec
xchg
(bad)
jmp
je
cmp
add
dec
shl
cmp
lock
scas
aad
adc
xor
add
fdiv
dec
stos
inc
and
nop
jne
cmps
movs
ret
add
adc
stos
push
inc
into
adc
inc
adc
std
jns
push
add
add
int
sbb
push
push
xchg
push
ins
xor
and
xor
mov
das
or
fisubr
inc
and
aas
ds
js
ret
test
add
adc
or
adc
or
retf
or
jno
pusha
(bad)
mov
inc
icebp
or
adc
cmp
sbb
xor
(bad)
sbb
popa
ror
inc
sub
and
data16
adc
mov
dec
repz
sbb
ins
pusha
ret
dec
mov
xchg
xchg
mov
or
rcr
pusha
or
lods
and
xchg
adc
push
or
or
pop
and
leave
test
mov
mov
test
adc
adc
(bad)
or
je
shl
or
mov
or
inc
inc
icebp
fadd
or
shr
sub
sbb
pop
add
and
aam
xchg
retf
and
cdq
test
or
xchg
and
pusha
js
add
add
sub
jecxz
mov
dec
inc
and
data16
sub
data16
xor
cmp
jmp
inc
pop
or
dec
pop
mov
inc
add
sbb
adc
mov
shr
pop
push
shl
retf
pop
cwde
pop
xchg
and
xor
sub
add
add
adc
add
adc
test
ret
xor
adc
test
and
lock
push
stc
daa
sub
and
add
fwait
pop
(bad)
lds
inc
sub
call
xchg
and
or
add
sbb
jo
das
add
or
int3
mov
test
rol
outs
add
ret
out
xlat
outs
mov
push
xchg
and
or
or
or
int3
call
xor
mov
and
int
and
shr
sbb
xor
lds
mov
and
cmp
or
ret
push
xchg
pop
and
inc
punpcklbw
ret
pop
add
iret
push
(bad)
cmp
xchg
and
sub
add
push
and
inc
or
cmp
cmp
push
stc
or
add
mov
sbb
cld
inc
retf
sub
mov
push
cmp
or
sbb
xor
adc
sbb
inc
mov
mov
(bad)
adc
mov
cs
ret
sub
or
add
mov
cmc
push
inc
(bad)
dec
and
jne
dec
add
dec
ds
inc
sar
jp
dec
pop
and
sbb
xor
ror
add
popa
pop
inc
shl
or
lock
or
rol
mov
adc
repz
xor
pop
out
cmp
inc
adc
mov
add
adc
(bad)
push
inc
add
jo
pextrw
jo
push
pop
icebp
or
pop
inc
adc
test
mov
adc
and
stos
xor
dec
(bad)
mov
add
add
or
mov
je
xor
(bad)
es
mov
cwde
inc
or
les
outs
mov
test
mov
cmp
and
cwde
add
clc
adc
ja
bound
das
nop
test
jmp
lea
and
pop
sbb
std
push
or
xor
xchg
clc
pusha
add
inc
add
int
sbb
mov
cmp
add
push
or
sahf
mov
push
add
inc
xor
movs
adc
cmp
or
mov
and
xor
pop
mov
sbb
add
cmp
adc
and
push
inc
nop
add
or
adc
mov
enter
ret
or
cmp
xchg
adc
xchg
pop
rol
movs
mov
or
mov
(bad)
xchg
fadd
inc
inc
adc
call
and
sub
or
mov
push
push
test
sub
and
and
push
add
shl
mov
mov
add
sbb
rol
add
mov
test
mov
test
mov
dec
jmp
add
add
inc
sub
add
add
or
add
or
mov
aas
dec
addr16
lds
and
dec
or
mov
lds
push
test
mov
nop
push
mov
pusha
pop
imul
jbe
pop
jb
sahf
mov
mov
aam
inc
sub
pushf
sub
pop
or
sbb
xor
cmp
cmp
ins
sbb
bound
sbb
jmp
sub
or
push
shr
push
or
cmp
inc
ror
sbb
inc
(bad)
push
sbb
push
add
xor
dec
adc
call
dec
sub
icebp
pop
sbb
sbb
jmp
xchg
and
icebp
push
ds
and
xor
mov
into
dec
sub
mov
add
inc
aam
mov
push
jne
pusha
mov
jb
push
sub
mov
adc
and
cmp
pop
dec
add
sbb
aas
or
ror
sub
adc
adc
inc
in
int
push
and
popa
push
nop
push
dec
xchg
mov
aam
add
xchg
mov
rcr
dec
inc
add
and
clc
rol
test
jns
rol
add
dec
or
clc
add
pop
ret
inc
add
mov
add
das
aam
push
sbb
lods
adc
loope
dec
push
sbb
in
ror
into
lock
add
add
or
xor
fld
add
sub
mov
cmp
lods
inc
ret
push
sub
adc
add
inc
adc
mov
enter
aam
inc
adc
and
inc
add
xor
(bad)
xchg
pop
cmps
xor
add
ss
cmp
add
adc
add
leave
and
enter
inc
jmp
rol
jne
xor
add
cmp
jge
jo
or
in
sbb
mov
icebp
add
loope
pop
jb
add
sub
or
pushf
inc
inc
add
stos
inc
mov
jns
pop
or
ins
dec
ror
sahf
in
loopne
cmps
popf
add
xor
inc
xor
adc
nop
rol
test
shl
fwait
out
add
arpl
sbb
xor
inc
xchg
cld
es
mov
test
or
mov
sti
jmp
push
ins
mov
sub
lock
xor
in
xor
and
push
add
add
ss
lds
rcr
adc
and
popa
cmps
sbb
fwait
sbb
add
cmp
or
adc
pushf
ror
fcom
cmps
jl
mov
adc
and
and
or
and
and
or
push
push
jae
aam
push
dec
or
popf
mov
inc
punpcklbw
cmp
nop
xor
push
adc
cmp
jae
loop
sbb
dec
aam
inc
ds
enter
mov
add
sub
pop
int
and
push
push
or
pop
sub
or
xchg
pop
add
or
mov
inc
ss
jb
adc
call
mov
or
rol
dec
cmp
lahf
repz
inc
pop
jge
xor
loopne
(bad)
pop
cmp
mov
mov
adc
sbb
adc
mov
dec
and
or
mov
adc
inc
call
add
pop
jo
adc
and
adc
mov
and
or
add
add
not
add
sub
xor
cmp
sbb
mov
mov
xor
or
pusha
adc
loopne
push
loop
push
adc
adc
and
sub
call
cmp
ins
add
xchg
mov
cmp
popa
or
jle
nop
daa
mov
or
pop
inc
adc
push
pusha
push
sub
inc
movs
cmp
push
push
bound
fistp
xchg
pop
and
or
adc
pop
ins
popa
and
inc
push
add
jo
add
jl
and
(bad)
shl
mov
test
(bad)
mov
or
add
pop
push
inc
mov
jp
les
xchg
add
inc
lock
xor
jnp
shl
mov
add
sbb
nop
xor
add
push
inc
and
inc
or
and
or
enter
add
adc
pusha
mov
or
add
mov
sbb
loopne
and
add
push
jne
sbb
popa
and
(bad)
loopne
inc
nop
and
jo
adc
mov
loope
inc
push
(bad)
xchg
mov
or
adc
push
movs
mov
add
xchg
loopne
push
mov
or
adc
ror
jle
add
cmp
inc
sbb
aam
pop
inc
sub
rcl
lahf
sbb
cli
clc
out
xchg
retf
cmp
and
add
cmp
adc
mov
rol
rol
or
lgdtd
sbb
add
add
add
popa
xor
sbb
push
add
ficom
add
ins
je
add
pop
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
test
jmp
fs
mov
mov
push
les
(bad)
inc
(bad)
in
add
movs
ja
hlt
add
dec
in
cld
mov
jmp
push
(bad)
icebp
add
in
(bad)
jmp
cli
lods
add
in
(bad)
mov
(bad)
std
stos
(bad)
fiadd
push
mov
loope
(bad)
aam
jmp
add
stc
add
ret
pop
(bad)
cld
repz
jae
rol
(bad)
fld
int
(bad)
fiadd
std
(bad)
(bad)
cld
mov
xchg
push
add
enter
test
cmps
add
cmps
or
cli
xchg
(bad)
std
cmp
add
retf
push
sar
xlat
retf
mov
(bad)
sbb
xchg
add
inc
jne
call
rol
ror
cdq
push
test
aaa
sti
aam
(bad)
(bad)
and
jecxz
cmc
out
neg
(bad)
(bad)
sub
retf
xlat
mov
xchg
hlt
or
add
(bad)
lods
cmp
add
test
add
jmp
add
ficomp
mov
cmp
jno
xchg
dec
add
add
mov
mov
(bad)
fisttp
cli
ret
pop
scas
add
sub
in
jae
test
repnz
(bad)
rcr
jmp
out
jmp
mov
leave
or
(bad)
stc
repz
jecxz
jmp
fld
cli
mov
sti
int3
cmp
mov
(bad)
in
add
mov
(bad)
push
jmp
add
stc
out
xchg
add
aad
cli
repz
ret
addr16
cmc
scas
adc
mov
out
in
out
mov
(bad)
cli
out
xchg
pop
or
pop
mov
push
jmp
pop
mov
add
mov
aad
add
fld
(bad)
jmp
add
adc
popf
addr16
or
in
or
fmul
repnz
ret
jno
mov
pop
rcr
loope
mov
sar
push
das
sti
ret
mov
rcr
rol
hlt
mov
retf
xchg
or
mov
(bad)
clc
or
repnz
mov
scas
add
leave
pop
idiv
hlt
call
(bad)
push
mov
sti
mov
mov
push
cld
int3
add
adc
add
test
mov
clc
out
ret
mov
repz
aad
xchg
push
add
mov
sti
mov
stc
lds
sahf
ins
sbb
retf
add
rol
lea
repnz
(bad)
cmps
sti
cli
clc
mov
bnd
clc
icebp
or
icebp
mov
and
retf
inc
cld
rcl
imul
and
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
xor
add
inc
std
or
mov
rol
fs
and
mov
push
xor
ret
push
mov
std
cdq
test
sub
xchg
cmp
rol
add
add
add
dec
adc
or
and
push
push
test
gs
lds
imul
in
add
jecxz
ds
push
bound
jecxz
mov
sub
push
test
push
xchg
cmp
pop
mov
sub
xchg
inc
fsub
leave
pop
xor
mov
inc
cmp
hlt
mov
ret
jg
loop
cmp
fwait
and
xchg
stos
xor
fnstcw
iret
mov
inc
(bad)
test
sub
inc
mov
jns
mov
fidiv
sbb
pusha
cmp
int
xchg
(bad)
clc
bnd
push
add
pop
add
push
popa
mov
mov
cmp
or
or
sub
movs
out
sub
push
mov
les
xchg
lock
and
or
add
cmp
push
add
push
pusha
xchg
xchg
pop
and
xor
mov
rol
jb
in
and
inc
rol
nop
add
dec
shl
sub
push
rol
cmp
add
push
repz
sub
sub
repnz
adc
mov
cdq
nop
sbb
mov
xchg
inc
push
leave
cmp
or
cmp
rol
fsubr
mov
mov
and
pop
lock
inc
cmp
push
and
jo
out
xchg
rol
and
add
lock
ret
xchg
fadd
mov
mov
stos
xor
xor
lods
adc
or
add
cmp
(bad)
fcmovb
stos
repz
loope
gs
xchg
push
add
xor
lods
arpl
popf
push
rol
inc
sub
add
adc
arpl
cmp
pusha
lods
mov
loop
enter
add
lock
pop
mov
arpl
mov
cs
or
dec
add
mov
add
cwde
push
rol
jl
shl
sub
pop
or
add
and
test
je
into
sbb
enter
inc
test
or
cmp
sahf
pop
add
or
aam
add
jb
test
sub
add
and
and
fsub
rol
push
add
add
inc
pop
ins
pop
daa
ds
and
and
jl
or
push
pop
push
pusha
or
mov
or
sbb
das
lea
fsubr
ss
xor
cs
xor
push
jne
pcmpgtb
add
lahf
popf
test
(bad)
fiadd
les
outs
loopne
or
xrelease
or
xor
add
stos
test
lea
mov
movs
add
pop
mov
pop
inc
sbb
mov
retf
sti
lods
rcr
sbb
test
loopne
js
push
and
and
mov
and
add
aas
pop
sti
pop
test
fmul
mov
lods
mov
daa
data16
jnp
add
mov
out
iret
adc
push
dec
xlat
push
dec
adc
out
mov
popf
mov
xchg
sub
jne
push
loopne
adc
icebp
mov
sub
push
pop
or
adc
add
inc
(bad)
cld
inc
mov
dec
ret
loopne
test
dec
add
and
dec
dec
inc
sbb
nop
and
fadd
xchg
ror
dec
add
call
leave
inc
or
add
jno
imul
pop
sbb
xchg
int3
pusha
and
adc
push
mov
inc
or
add
or
or
and
into
add
lods
fild
test
push
xor
pop
adc
sub
inc
mov
adc
push
je
push
or
ror
add
maxps
adc
(bad)
mov
mov
xchg
mov
enter
enter
ror
lock
pop
cmps
sub
inc
scas
lock
mov
dec
jp
mov
sub
mov
add
and
xor
pop
add
push
cmp
adc
inc
dec
hlt
hlt
(bad)
aaa
xchg
push
xchg
test
adc
push
sbb
(bad)
push
mov
add
xor
call
out
dec
cmp
mov
imul
inc
pop
mov
add
push
adc
ret
adc
jg
and
icebp
or
add
xchg
add
push
adc
mov
pop
jge
add
std
sub
stc
push
out
nop
inc
or
pusha
xchg
or
add
inc
push
jge
loop
imul
retf
mov
aad
mov
xchg
mov
add
test
or
xor
fs
out
mov
loope
sbb
test
dec
add
(bad)
out
fild
lahf
data16
sqrtps
and
and
jo
adc
loop
xor
add
add
leave
stos
add
adc
xor
fidiv
inc
retf
les
dec
sub
xor
sar
dec
ins
jl
xor
xchg
inc
inc
push
mov
add
adc
add
sub
stc
mov
jecxz
enter
outs
mov
fcomp
adc
inc
add
in
mov
mov
sbb
loopne
(bad)
shl
add
js
fist
mov
(bad)
and
or
xchg
loope
jg
inc
and
add
scas
adc
sub
sbb
or
add
pop
mov
xchg
or
shl
xor
mov
or
mov
aaa
mov
add
add
and
icebp
add
or
add
clc
loope
jno
inc
adc
xor
lock
add
adc
sbb
mov
or
mov
mov
jecxz
cmp
adc
xchg
adc
fadd
push
fidiv
and
in
imul
or
sbb
and
and
outs
rol
aam
popa
stos
in
retf
cmp
inc
or
inc
out
fistp
les
xchg
sti
cmp
add
and
add
add
inc
sub
add
add
xor
add
inc
std
or
mov
rol
mov
ret
xchg
sti
adc
xor
(bad)
int3
xor
jecxz
ds
or
and
and
imul
scas
sahf
or
aas
sub
push
fs
in
cs
push
jp
fchs
dec
pop
movs
push
sahf
and
push
and
test
test
sub
sbb
or
jb
sbb
adc
mov
cli
test
rol
loope
iret
pop
es
fidivr
and
rcr
xor
mov
or
mov
mov
nop
shl
adc
adc
fs
push
adc
push
into
sbb
adc
cli
mov
pop
inc
push
mov
adc
dec
(bad)
or
and
dec
sbb
sbb
xchg
test
xor
fist
add
(bad)
add
cmp
inc
adc
test
(bad)
cmp
jno
and
adc
fwait
or
mov
add
push
cmp
pop
dec
pushf
and
lea
push
in
mov
sbb
lock
and
add
sub
and
mov
in
jo
enter
xor
or
mov
lea
adc
pusha
lea
dec
repnz
outs
push
jo
pop
sbb
faddp
add
sbb
les
out
sbb
xchg
inc
xchg
lds
lahf
pop
jb
adc
pop
jl
or
adc
mov
and
ret
fld
or
or
ror
js
test
mov
test
sub
sub
push
or
add
jl
(bad)
inc
(bad)
or
or
fs
xor
xor
or
or
int3
daa
ret
sub
lea
sbb
push
push
adc
add
add
cmps
in
or
or
les
xor
rcl
ret
mov
xor
or
pusha
push
mov
mov
les
repnz
dec
jge
cmp
or
(bad)
push
jl
retf
inc
mov
push
ret
and
ror
test
sub
das
mov
inc
test
or
loopne
or
(bad)
mov
and
add
repnz
jecxz
ret
mov
popw
or
inc
add
jae
mov
mov
shl
add
sbb
jge
push
mov
or
mov
add
or
enter
add
add
inc
inc
mov
xor
jp
and
and
mov
pop
xchg
pusha
mov
mov
bound
or
add
pop
add
xor
sar
clc
gs
cmp
sub
sar
or
add
cmp
sbb
mov
and
add
icebp
inc
scas
jmp
cmp
sar
mov
ds
inc
pop
gs
arpl
sbb
inc
test
dec
sbb
mov
cmp
imul
outs
test
inc
pop
sub
inc
(bad)
das
dec
dec
jo
adc
adc
inc
jl
xor
xchg
dec
call
int3
pushf
scas
out
popf
push
adc
add
xchg
inc
push
xchg
mov
fld
push
inc
push
sub
inc
add
xchg
dec
pop
jb
rcl
add
xor
push
or
adc
push
sub
mov
ins
outs
adc
add
inc
sub
mov
sub
mov
xor
adc
mov
pusha
fsubr
add
test
sub
ror
rcr
or
and
(bad)
sub
or
(bad)
stc
push
js
imul
add
sbb
add
or
(bad)
jo
jns
and
mov
inc
or
and
retf
mov
xor
fadd
xchg
cmps
add
adc
add
add
inc
and
out
jno
and
and
push
jns
and
xchg
dec
les
push
push
mov
jo
or
sar
mov
popa
mov
loopne
push
nop
add
or
push
pop
test
daa
cs
aaa
shl
fbstp
add
adc
xchg
cmp
cwde
push
cmp
pop
jo
(bad)
sbb
dec
sahf
push
add
sub
xor
xchg
add
and
cdq
inc
or
or
add
xor
add
adc
es
push
retf
adc
push
inc
in
loopne
xchg
push
inc
push
and
cmp
add
aam
add
int
sbb
bound
sbb
or
loopne
inc
jp
adc
stc
adc
adc
adc
cli
mov
add
push
dec
sub
enter
add
adc
cdq
xor
adc
sbb
add
xchg
ret
pusha
rol
rcl
mov
push
pusha
mov
mov
sub
mov
pop
sub
sub
xchg
xchg
inc
xchg
adc
xor
dec
jno
push
gs
or
adc
sub
inc
aas
into
adc
push
and
pop
or
xchg
clc
add
inc
and
jl
mov
pusha
mov
(bad)
pusha
add
int3
and
xor
mov
cwde
xchg
add
mov
pop
sbb
xor
inc
mov
enter
enter
bound
aas
push
ret
mov
mov
daa
call
pop
mov
or
fsub
ss
add
stc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
xor
add
inc
std
or
mov
rol
fs
and
mov
push
xor
ret
push
mov
std
cdq
test
sub
xchg
cmp
rol
add
add
add
dec
adc
or
and
push
push
test
gs
lds
imul
in
add
jecxz
ds
push
bound
jecxz
mov
sub
push
test
push
xchg
cmp
pop
mov
sub
xchg
inc
fsub
leave
pop
xor
mov
inc
cmp
hlt
mov
ret
jg
loop
cmp
fwait
and
xchg
stos
xor
fnstcw
iret
mov
inc
(bad)
test
sub
inc
mov
jns
mov
fidiv
sbb
pusha
cmp
int
xchg
(bad)
clc
bnd
push
add
pop
add
push
popa
mov
mov
cmp
or
or
sub
movs
out
sub
push
mov
les
xchg
lock
and
or
add
cmp
push
add
push
pusha
xchg
xchg
pop
and
xor
mov
rol
jb
in
and
inc
rol
nop
add
dec
shl
sub
push
rol
cmp
add
push
repz
sub
sub
repnz
adc
mov
cdq
nop
sbb
mov
xchg
inc
push
leave
cmp
or
cmp
rol
fsubr
mov
mov
and
pop
lock
inc
cmp
push
and
jo
out
xchg
rol
and
add
lock
ret
xchg
fadd
mov
mov
stos
xor
xor
lods
adc
or
add
cmp
(bad)
fcmovb
stos
repz
loope
gs
xchg
push
add
xor
lods
arpl
popf
push
rol
inc
sub
add
adc
arpl
cmp
pusha
lods
mov
loop
enter
add
lock
pop
mov
arpl
mov
cs
or
dec
add
mov
add
cwde
push
rol
jl
shl
sub
pop
or
add
and
test
je
into
sbb
enter
inc
test
or
cmp
sahf
pop
add
or
aam
add
jb
test
sub
add
and
and
fsub
rol
push
add
add
inc
pop
ins
pop
daa
ds
and
and
jl
or
push
pop
push
pusha
or
mov
or
sbb
das
lea
fsubr
ss
xor
cs
xor
push
jne
pcmpgtb
add
lahf
popf
test
(bad)
fiadd
les
outs
loopne
or
xrelease
or
xor
add
stos
test
lea
mov
movs
add
pop
mov
pop
inc
sbb
mov
retf
sti
lods
rcr
sbb
test
loopne
js
push
and
and
mov
and
add
aas
pop
sti
pop
test
fmul
mov
lods
mov
daa
data16
jnp
add
mov
out
iret
adc
push
dec
xlat
push
dec
adc
out
mov
popf
mov
xchg
sub
jne
push
loopne
adc
icebp
mov
sub
push
pop
or
adc
add
inc
(bad)
cld
inc
mov
dec
ret
loopne
test
dec
add
and
dec
dec
inc
sbb
nop
and
fadd
xchg
ror
dec
add
call
leave
inc
or
add
jno
imul
pop
sbb
xchg
int3
pusha
and
adc
push
mov
inc
or
add
or
or
and
into
add
lods
fild
test
push
xor
pop
adc
sub
inc
mov
adc
push
je
push
or
ror
add
maxps
adc
(bad)
mov
mov
xchg
mov
enter
enter
ror
lock
pop
cmps
sub
inc
scas
lock
mov
dec
jp
mov
sub
mov
add
and
xor
pop
add
push
cmp
adc
inc
dec
hlt
hlt
(bad)
aaa
xchg
push
xchg
test
adc
push
sbb
(bad)
push
mov
add
xor
call
out
dec
cmp
mov
imul
inc
pop
mov
add
push
adc
ret
adc
jg
and
icebp
or
add
xchg
add
push
adc
mov
pop
jge
add
std
sub
stc
push
out
nop
inc
or
pusha
xchg
or
add
inc
push
jge
loop
imul
retf
mov
aad
mov
xchg
mov
add
test
or
xor
fs
out
mov
loope
sbb
test
dec
add
(bad)
out
fild
lahf
data16
sqrtps
and
and
jo
adc
loop
xor
add
add
leave
stos
add
adc
xor
fidiv
inc
retf
les
dec
sub
xor
sar
dec
ins
jl
xor
xchg
inc
inc
push
mov
add
adc
add
sub
stc
mov
jecxz
enter
outs
mov
fcomp
adc
inc
add
in
mov
mov
sbb
loopne
(bad)
shl
add
js
fist
mov
(bad)
and
or
xchg
loope
jg
inc
and
add
scas
adc
sub
sbb
or
add
pop
mov
xchg
or
shl
xor
mov
or
mov
aaa
mov
add
add
and
icebp
add
or
add
clc
loope
jno
inc
adc
xor
lock
add
adc
sbb
mov
or
mov
mov
jecxz
cmp
adc
xchg
adc
fadd
push
fidiv
and
in
imul
or
sbb
and
and
outs
rol
aam
popa
stos
in
retf
cmp
inc
or
inc
out
fistp
les
xchg
sti
cmp
add
cmp
inc
or
add
dec
add
inc
add
add
popa
xor
sbb
push
add
add
add
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
ret
add
std
fimul
push
add
movs
jne
mov
(bad)
jmp
imul
mov
(bad)
jmp
leave
(bad)
out
add
add
mov
mov
add
test
stc
mov
(bad)
test
xchg
add
retf
fcmovb
(bad)
dec
(bad)
cli
aad
mov
cmps
pop
add
xchg
mov
(bad)
(bad)
cli
add
loop
in
call
call
pop
mov
cmp
out
call
add
xlat
daa
(bad)
fiadd
std
out
(bad)
mov
push
test
movs
add
aad
(bad)
call
(bad)
call
(bad)
jecxz
(bad)
stos
xchg
enter
pop
repz
call
add
in
dec
add
fnstcw
sar
int3
mov
stos
or
aaa
xchg
dec
add
(bad)
(bad)
mov
add
in
in
in
mov
std
repz
push
xor
enter
add
neg
fisubr
push
add
hlt
mov
push
ja
scas
add
add
jmp
pushf
pop
add
retf
sub
in
lods
je
jmp
add
or
bound
(bad)
loop
xchg
pop
pop
cli
cmc
jmp
mov
hlt
repz
stos
add
adc
sbb
sti
in
retf
mov
(bad)
in
movs
retf
fst
mov
retf
or
pop
sub
push
push
lods
imul
mov
xlat
rcr
data16
aam
cli
stos
add
popf
add
mov
add
repz
movs
imul
mov
test
in
lods
cwde
xchg
pop
add
les
hlt
ret
add
std
loope
sti
std
lods
mov
int
faddp
add
add
lods
add
(bad)
stc
jmp
add
repz
(bad)
push
jecxz
cli
scas
add
in
lock
fiadd
out
(bad)
fiadd
jmp
call
add
lock
icebp
pop
hlt
fld
icebp
rol
icebp
lock
stc
div
(bad)
hlt
cli
cli
(bad)
call
add
stc
clc
(bad)
mov
dec
add
into
push
div
loop
jmp
mov
add
repz
add
mov
sti
(bad)
cli
clc
idiv
(bad)
cli
add
push
loope
ret
sti
mov
sti
fiadd
in
faddp
cli
loope
xchg
push
or
(bad)
add
jg
enter
cmp
fimul
stc
into
add
scas
add
ror
rol
mov
jge
stos
pmaddwd
add
cli
fiadd
cli
mov
stc
loope
inc
push
(bad)
stos
push
std
cli
std
call
in
add
mov
scas
jp
clc
clc
cmc
iret
xchg
(bad)
loopne
clc
call
stc
in
add
add
repnz
mov
pop
repz
or
fmul
call
mov
dec
add
jp
(bad)
stc
rol
out
iret
or
lods
push
rcr
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
call
pushf
xor
and
mov
arpl
ror
cwde
and
lahf
mov
lds
mov
ret
xor
and
dec
ret
movs
ins
xchg
sub
call
mov
mov
sub
adc
push
or
mov
rol
and
scas
aaa
outs
sub
(bad)
out
adc
add
adc
push
mov
adc
dec
punpckhbw
or
mov
pop
inc
cli
adc
sbb
add
les
and
je
inc
stc
adc
test
adc
xor
enter
and
bound
add
lods
add
dec
lds
or
inc
inc
add
mov
out
dec
sbb
adc
mov
in
add
arpl
scas
pop
aaa
jle
shl
jo
inc
xor
adc
inc
add
or
stos
clc
ror
or
mov
clc
arpl
mov
aaa
nop
mov
in
and
and
inc
or
movs
inc
inc
add
js
inc
sub
add
pop
rol
mov
shl
imul
and
adc
fiadd
test
or
inc
ins
add
add
push
or
adc
add
int
pop
lods
inc
rol
mov
sbb
aam
inc
adc
pusha
nop
sbb
add
cwde
jecxz
add
sub
push
sub
push
test
adc
mov
xchg
push
rol
fsub
add
sbb
pop
or
push
adc
push
sbb
popa
nop
adc
jl
inc
adc
cwde
je
add
push
js
add
pop
clc
add
push
loop
add
mov
pop
fdiv
adc
mov
adc
push
in
das
push
lods
add
cmp
and
(bad)
sbb
inc
add
sbb
xor
ror
or
jno
push
je
add
jne
jae
and
cwde
jb
adc
test
test
cmp
add
xor
pop
xchg
cmp
add
or
xor
adc
inc
mov
mov
js
inc
int
fsubr
mov
popa
jle
add
inc
add
or
cs
add
inc
inc
or
lods
and
repz
in
jae
push
xor
retf
mov
cwde
xor
inc
xchg
inc
pop
xchg
add
pop
xchg
mov
loopne
add
mov
ret
call
adc
rol
or
lds
sub
les
test
mov
mov
sub
or
adc
nop
enter
push
mov
clc
inc
test
sbb
mov
mov
inc
fimul
mov
inc
adc
inc
aaa
push
mov
dec
mov
sub
xor
inc
sub
stos
and
int3
jmp
call
inc
outs
mov
pop
mov
adc
lds
loop
push
adc
out
push
imul
or
loopne
add
adc
idiv
add
call
add
out
and
add
mul
frstor
or
mov
adc
test
in
mov
jnp
cwde
cmps
ret
popf
and
popf
or
movs
jmp
xchg
mov
add
cmp
repnz
sub
and
les
adc
cmp
jno
jae
xchg
push
rol
cmp
nop
or
js
and
mov
or
and
sbb
pusha
pop
inc
fadd
cmp
inc
sbb
nop
or
jo
push
adc
add
dec
(bad)
xor
inc
or
or
bound
ins
adc
adc
mov
sub
stc
add
mov
sub
fadd
push
js
(bad)
mov
jle
ror
xor
sbb
test
ret
sbb
sub
sbb
rol
adc
adc
lds
xor
pop
xchg
int3
add
add
mov
push
pop
imul
retf
adc
loopne
aas
mov
xor
push
rcl
loopne
aas
pop
xchg
add
add
pop
adc
add
stc
add
add
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
popf
jo
and
inc
test
adc
jns
les
xchg
xor
xchg
pushf
pusha
mov
adc
sub
inc
mov
adc
mov
push
stos
popa
sub
jno
movs
cwde
adc
ret
push
xor
sub
push
fimul
push
push
or
test
ror
test
inc
inc
nop
pop
cmps
push
xchg
add
push
(bad)
arpl
sub
xor
push
pop
xor
fsub
mov
clc
and
xchg
xchg
push
fadd
inc
cmps
inc
xchg
pop
aaa
outs
nop
jp
retf
mov
jo
or
bound
popa
jbe
imul
mov
push
pop
push
icebp
lea
xchg
pop
mov
int3
pop
shl
sub
dec
gs
adc
add
xor
cmps
sbb
pop
ret
adc
cli
icebp
or
mov
dec
and
jne
pop
push
adc
shl
bound
or
loope
mov
leave
mov
mov
call
add
sbb
fdiv
ret
and
test
mov
aam
add
dec
inc
or
inc
daa
adc
inc
jb
adc
aam
popa
ror
fs
mov
push
jo
loopne
inc
inc
nop
add
(bad)
xor
add
ds
or
sub
test
adc
mov
xchg
jmp
push
inc
or
and
add
je
or
or
xchg
add
and
test
push
sub
adc
fdiv
add
sub
inc
dec
test
dec
pop
or
adc
test
pop
pop
mov
aas
nop
and
shl
fst
call
sbb
adc
mov
push
pop
pop
call
add
mov
inc
add
cld
rol
sbb
popa
test
push
mov
int
cmp
adc
cmp
loopne
mov
xor
xor
mov
pop
icebp
and
and
lock
nop
adc
sar
in
inc
push
cmp
shr
add
or
xor
inc
adc
mov
push
xchg
add
dec
sbb
test
in
adc
or
add
lock
lock
lock
outs
push
or
out
dec
fs
sbb
or
cmp
add
add
shl
adc
sub
pop
ret
rcl
sub
add
add
push
mov
pop
jae
aaa
and
mov
or
lock
sub
pop
and
or
pushf
bound
sub
xor
pop
mov
inc
cli
ret
scas
popf
dec
or
pushf
enter
cmp
xor
inc
daa
leave
push
outs
sbb
jns
das
jo
mov
aaa
inc
xor
push
imul
ins
fld
stos
add
or
sub
loopne
and
mov
loope
mov
xor
movs
mov
jmp
jae
add
fwait
loopne
adc
int3
adc
adc
mov
pusha
inc
add
jo
cli
(bad)
lea
dec
repz
adc
dec
mov
icebp
add
mov
pop
xchg
adc
push
mov
(bad)
cs
out
push
cld
and
(bad)
aad
test
cwde
or
and
add
add
xor
movs
(bad)
inc
and
jge
xlat
add
fucom
sbb
(bad)
and
sar
push
enter
mov
adc
loopne
in
and
push
cwde
add
add
xor
sbb
nop
jp
mov
std
arpl
sbb
(bad)
pop
push
movs
push
pusha
mov
adc
dec
mov
push
xor
test
or
psrlq
and
xchg
stos
loopne
or
sahf
sbb
mov
cmp
or
adc
adc
mov
pop
mov
add
xchg
popa
add
add
cmp
sbb
popa
wbinvd
sbb
or
xor
ret
sti
add
mov
loopne
and
sub
sbb
cmp
mov
add
xor
add
frstor
pop
or
push
in
inc
add
clc
sbb
add
jnp
lds
cwde
or
jnp
add
add
add
cwde
add
jns
add
mov
adc
pop
cmp
or
pop
iret
jle
rcr
add
add
stc
add
add
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
and
les
xor
pushf
sbb
jae
and
push
adc
add
sub
mov
dec
nop
and
and
rcl
and
or
fisub
xchg
dec
sub
adc
and
aam
pop
sub
dec
xor
xchg
xchg
dec
push
daa
or
push
icebp
adc
test
cmp
mov
xor
xchg
sti
jno
(bad)
mov
mov
pop
sub
and
xor
adc
arpl
cmc
rol
(bad)
or
adc
ret
mov
mov
nop
or
jae
inc
xchg
dec
inc
jle
ss
ret
or
inc
ret
test
pusha
cmp
inc
movs
or
lods
les
enter
dec
popa
mov
inc
sub
dec
sbb
adc
jmp
and
(bad)
sbb
add
xor
adc
mov
pop
nop
call
inc
inc
or
sub
movs
inc
sbb
push
ss
mov
mov
push
adc
xor
sub
push
and
inc
loopne
add
push
pop
xchg
xchg
scas
xchg
pusha
rol
push
es
add
xor
or
xchg
pusha
inc
(bad)
and
xor
add
rcr
add
mov
mov
stc
mov
add
and
or
sbb
inc
mov
adc
mov
add
and
mov
adc
add
adc
pop
lock
fsub
cwde
cdq
adc
ror
sbb
pop
(bad)
pop
icebp
xor
add
pop
pusha
add
add
or
inc
loope
pop
sbb
inc
adc
and
loope
mov
add
rol
test
mov
outs
sbb
add
mov
fild
bound
dec
adc
jo
inc
dec
sub
add
add
adc
sub
and
add
push
add
inc
pusha
pop
inc
cdq
in
adc
sub
inc
icebp
ret
or
in
rol
jbe
inc
pop
rcr
and
xor
or
add
and
test
add
add
jp
jl
ret
add
mov
xchg
jno
or
hlt
adc
sub
add
or
pop
test
pop
inc
sub
prefetch
or
adc
and
add
das
les
mov
pop
add
ret
cmp
test
mov
or
pop
nop
inc
add
inc
jo
mov
add
jmp
test
sub
xchg
sbb
mov
test
js
mov
sub
(bad)
mov
sub
or
xor
loope
dec
bound
nop
(bad)
pop
lock
loopne
popf
push
pusha
fwait
ret
sar
push
mov
push
sub
in
xchg
mov
or
mov
sub
sbb
scas
cdq
push
dec
add
cwde
bound
ins
nop
popa
add
mov
dec
sbb
nop
sbb
movs
inc
test
mov
mov
mov
popf
in
les
mov
pop
mov
rol
movs
rol
and
lahf
jnp
int3
cmps
mov
xchg
aad
or
or
and
(bad)
loopne
or
sub
pusha
clc
and
aas
push
nop
loop
out
add
xor
jae
adc
inc
pusha
push
loopne
rol
adc
loopne
mov
mov
and
push
and
ret
sbb
adc
and
or
add
sbb
inc
add
adc
push
(bad)
int
add
call
and
cwde
lock
imul
push
and
mov
adc
mov
adc
call
test
and
icebp
xchg
shl
and
or
mov
mov
xor
shl
rol
jo
bound
pop
adc
adc
add
xchg
xchg
push
and
push
sbb
or
pusha
and
jb
and
dec
mov
mov
add
dec
lock
sbb
or
add
rcr
mov
push
push
test
xlat
jle
mov
shr
sbb
and
mov
cld
adc
pop
push
int
and
or
mov
sbb
aaa
and
mov
sbb
or
mov
jne
xor
add
add
stc
add
add
inc
sub
add
add
add
or
add
or
mov
rol
mov
ret
sbb
inc
or
in
lds
nop
bound
mov
sbb
mov
mov
dec
loop
add
xchg
mov
loope
bound
or
mov
xchg
adc
loop
test
adc
mov
push
add
jbe
fldenv
add
scas
pop
das
push
(bad)
lods
dec
aas
sbb
aad
and
pop
test
jae
inc
mov
jo
test
pop
adc
mov
jmp
lods
inc
cmp
ror
and
loopne
mov
sbb
mov
mov
mov
and
nop
and
dec
xor
(bad)
or
mov
inc
cs
(bad)
add
cwde
daa
add
sbb
push
enter
data16
and
test
mov
es
call
rol
ret
(bad)
push
pop
je
aam
sbb
inc
mov
je
mov
mov
pop
shl
leave
xadd
les
pop
xor
add
jne
ja
adc
das
pushf
adc
adc
xor
(bad)
or
or
and
or
adc
add
sbb
hlt
repz
add
repnz
hlt
or
and
and
sub
push
inc
cdq
mov
shl
add
push
dec
and
or
pop
pop
jo
add
push
popa
dec
sub
push
or
lock
test
sbb
ror
inc
adc
pop
sub
rol
inc
inc
mov
or
adc
pop
add
add
ins
adc
push
mov
mov
inc
or
pop
push
sbb
and
jecxz
mov
and
sbb
inc
mov
adc
les
sbb
test
adc
sbb
cmps
pop
pop
mov
stos
ror
add
pop
retf
nop
lock
push
inc
xchg
add
push
fmul
or
invd
popf
mov
inc
jo
inc
jb
push
add
mov
dec
and
adc
push
in
sar
push
mov
add
rcl
add
fwait
and
aas
sbb
rol
ins
stc
arpl
fnsave
ins
nop
inc
sub
push
cli
mov
sub
inc
sub
jo
adc
mov
inc
sub
sub
sub
mov
adc
add
mov
mov
pop
loopne
add
dec
pop
add
and
add
jnp
loope
sbb
dec
call
push
or
inc
push
pop
adc
adc
mov
dec
xchg
jo
das
adc
push
xchg
inc
adc
push
push
sub
dec
inc
and
iret
adc
jne
jecxz
cmps
stc
out
jnp
push
jno
add
aam
dec
push
inc
sub
mov
movs
add
xchg
jb
inc
and
adc
sub
js
out
fmul
hlt
sahf
xchg
out
dec
xor
or
jb
loop
call
jl
push
add
adc
test
mov
lock
push
sbb
frstor
cmp
or
pop
loopne
add
repnz
dec
add
xchg
repnz
pop
fcom
mov
dec
and
add
push
sar
and
mov
mov
or
and
or
mov
inc
sub
push
and
stc
add
sub
pop
into
adc
dec
retf
cpuid
and
push
add
fs
jb
xor
(bad)
shr
jp
or
and
or
loopne
add
fld
and
cwde
shl
and
inc
popa
add
or
xchg
pusha
mov
add
test
sub
adc
add
popa
pop
fidivr
add
jo
adc
rol
test
iret
test
pop
and
pop
dec
sbb
jae
add
dec
popf
push
fs
test
dec
add
mov
and
or
das
mov
and
mov
or
les
sbb
or
sub
add
(bad)
leave
sub
dec
or
lock
nop
add
add
test
or
sub
sub
add
loopne
add
push
adc
pusha
or
pop
adc
shl
pusha
fadd
bound
push
sub
or
rol
leave
dec
test
sbb
rol
and
aas
inc
ror
push
or
push
and
adc
xor
rcl
add
stc
add
add
inc
sub
add
add
add
or
add
or
mov
rol
loope
ret
xchg
or
rcr
mov
inc
fmul
push
pusha
cmps
adc
mov
leave
xchg
les
(bad)
or
es
popa
push
les
push
xor
mov
adc
loop
enter
pushf
sbb
sbb
rol
xor
test
jb
fisub
ret
adc
add
add
push
push
std
add
add
cdq
pop
stos
dec
fchs
adc
pusha
mov
stos
add
add
adc
cmps
or
sbb
jno
or
repnz
mov
xchg
adc
and
(bad)
mov
xor
adc
or
je
mov
data16
xchg
in
inc
add
fst
or
sbb
cmps
aaa
shl
push
shl
dec
jecxz
es
push
ror
jbe
mov
xor
cwde
and
adc
lods
sbb
or
fisub
adc
jb
xchg
lds
add
xor
or
and
add
jg
mov
jne
loop
sbb
add
sub
xor
in
and
add
cmp
es
mov
adc
das
lock
jo
add
test
add
or
pusha
enter
push
mov
lea
cmp
adc
adc
xchg
mov
or
cdq
cld
movs
push
or
pop
and
add
or
pop
test
les
and
dec
and
icebp
nop
and
dec
add
or
sbb
add
cwde
inc
and
add
fs
lock
mov
inc
(bad)
jo
push
and
adc
and
pop
cmp
and
aas
sahf
mov
arpl
movs
xor
rcl
and
pop
cmp
js
inc
pop
cmps
or
add
add
shl
sub
mov
ret
push
mov
sub
ins
push
call
into
hlt
jecxz
(bad)
fcom
les
pop
pop
xchg
add
bound
push
add
mov
inc
add
add
adc
push
sbb
pop
lock
or
pop
pop
dec
add
test
outs
movs
add
or
add
pop
es
mov
sbb
retf
cmp
xor
pop
stc
push
or
and
rcl
sub
push
cdq
mov
add
xchg
add
push
sbb
xor
pop
loopne
add
inc
xchg
(bad)
std
and
sbb
pop
dec
inc
lea
mov
inc
add
test
add
add
xlat
dec
adc
or
mov
pop
shr
cmps
pop
inc
push
sub
inc
mov
add
mov
das
inc
ds
and
pushf
icebp
ret
add
push
enter
add
out
add
out
mov
and
sub
mov
das
mov
adc
add
push
cwde
sub
add
inc
outs
fiadd
xchg
or
or
or
lds
push
dec
add
add
push
jge
mov
pop
loopne
add
or
ror
inc
aaa
sub
and
popf
je
shl
scas
mov
mov
add
inc
mov
fs
xor
ret
cmp
jbe
add
ins
pop
xor
sbb
cmps
sub
pusha
add
loopne
(bad)
in
adc
push
add
jmp
and
inc
pop
ja
mov
sub
js
shl
mov
and
and
xor
adc
loope
inc
enter
xchg
add
cwde
je
es
pusha
add
ds
sbb
or
or
cmp
sbb
xor
pop
xchg
sbb
cmp
xor
mov
pop
(bad)
xchg
add
orps
stc
dec
ret
mov
xor
(bad)
jnp
test
sub
cmp
icebp
pop
and
adc
call
inc
je
repz
mov
or
ror
inc
add
and
pushf
loope
imul
sbb
adc
push
ror
repnz
add
pop
sbb
loope
xchg
mov
add
and
cmp
and
mov
add
add
adc
inc
ret
das
sbb
dec
xchg
pusha
pop
data16
pop
xor
dec
pusha
inc
inc
mov
add
jnp
ret
push
les
add
inc
cdq
in
xchg
dec
push
xchg
push
adc
cmp
rol
shl
xchg
adc
push
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
xchg
sub
test
or
and
and
push
or
outs
or
test
mov
inc
cmp
ins
xchg
inc
ins
add
mov
rol
aaa
bound
fadd
sbb
adc
lods
cmp
push
push
mov
dec
jo
mov
xchg
cld
pusha
rol
mov
add
or
shr
pop
call
add
in
xor
test
je
lds
fcomp
mov
and
and
or
js
retf
ret
sub
movhps
out
retf
stos
bound
sbb
xchg
jmp
or
add
and
mov
es
xor
or
sub
arpl
sbb
add
inc
mov
adc
jmp
mov
dec
mov
call
pop
sbb
mov
push
or
jae
movs
push
or
sbb
push
pop
push
ins
pusha
adc
mov
pop
leave
adc
mov
jl
inc
adc
push
inc
mov
add
pop
or
add
aas
arpl
dec
push
test
inc
test
jns
ret
aam
inc
or
call
adc
add
pusha
mov
jae
cs
loope
cmp
xor
ins
xchg
or
push
sbb
les
bound
inc
push
push
cmp
or
cmp
adc
ret
clc
push
add
xchg
add
xchg
add
pop
aam
or
and
icebp
add
and
mov
add
xor
loope
sub
pop
push
in
push
push
mov
arpl
sub
mov
sub
inc
sbb
push
es
xlat
es
or
add
adc
sbb
or
pop
pop
je
inc
or
inc
and
add
or
mov
push
adc
push
lds
inc
nop
sub
add
cmp
add
add
pusha
sub
mov
aas
dec
mov
loop
aas
ins
movs
ror
popa
pop
mov
add
je
sbb
push
mov
rol
or
pop
mov
and
push
pop
icebp
outs
es
xor
push
ret
js
add
rol
mov
es
and
sub
or
jno
or
jl
inc
adc
mov
pop
push
xchg
cmp
jl
push
inc
pop
add
inc
imul
add
outs
dec
inc
enter
mov
push
ret
aad
cwde
inc
adc
cmp
std
xor
or
jae
cmp
push
push
ret
add
mov
pusha
xchg
fcomp
add
push
sub
push
int
mov
pusha
ss
cmp
and
fsub
xchg
add
fmul
or
fist
cwde
loop
xor
rcl
cwde
push
repnz
enter
or
add
push
sbb
adc
adc
cwde
add
pop
add
mov
dec
jmp
nop
mov
or
adc
sbb
ror
add
jecxz
mov
cli
(bad)
xlat
mov
add
ja
adc
test
adc
or
push
rol
ins
lock
add
adc
sub
enter
loop
lods
dec
sub
cdq
call
cpuid
and
inc
fadd
push
jl
lock
or
adc
sbb
add
loopne
and
or
sbb
pushf
xor
les
test
add
rcl
lea
adc
test
push
sbb
dec
fs
aaa
mov
add
cli
ror
enter
dec
and
dec
movs
adc
rol
or
in
xor
dec
inc
sub
jo
xor
add
dec
push
adc
add
dec
push
or
sbb
inc
cmp
or
cmp
or
add
pop
rol
push
inc
xchg
das
mov
or
inc
xchg
enter
popa
add
or
add
push
or
cmp
or
pusha
or
shr
loopne
or
add
aas
clc
inc
adc
and
xor
and
loope
enter
add
xchg
mov
das
cwde
push
bswap
mov
add
inc
enter
dec
ror
add
add
inc
sub
add
add
or
add
or
mov
inc
xor
loope
inc
push
and
dec
loop
mov
sub
(bad)
int3
lds
inc
int
or
and
sub
ret
sub
pop
or
add
es
sbb
mov
add
imul
pusha
rol
cwde
add
gs
inc
cdq
push
or
inc
xor
xchg
xchg
test
rcr
pop
add
int3
xchg
mov
sar
cmc
ret
setnp
adc
xchg
jo
mov
and
add
adc
dec
sub
ror
add
data16
rol
mov
and
or
jecxz
or
leave
sar
enter
sbb
stos
and
in
scas
pop
xchg
inc
pop
movs
ins
push
add
cmp
aam
push
sti
aam
adc
js
sbb
rol
push
adc
mov
nop
aas
dec
sbb
lds
cdq
pop
xchg
sbb
fs
subps
mov
dec
add
cwde
ror
push
add
or
and
inc
or
das
in
bound
add
inc
push
inc
sub
loopne
xor
rol
add
inc
adc
mov
inc
or
fs
(bad)
fdiv
or
sub
xchg
mov
sbb
xor
xor
or
dec
and
test
adc
push
and
inc
add
cmp
retf
jo
les
pop
pop
loopne
add
cmp
dec
xor
clc
push
add
loop
sbb
fdiv
or
mov
addr16
adc
inc
or
add
push
cmp
leave
add
lds
dec
and
push
sbb
sub
push
or
and
inc
add
and
adc
inc
adc
or
lds
sub
inc
daa
mov
adc
add
pop
pop
inc
or
mov
cld
test
jg
inc
inc
adc
xchg
add
sbb
add
nop
add
push
sar
and
or
aas
ins
test
push
adc
mov
lock
sbb
push
int3
cmp
sbb
icebp
mov
sub
adc
or
and
mov
or
xchg
les
push
and
inc
xor
add
mov
loop
shr
call
or
mov
dec
inc
adc
sbb
les
or
shl
inc
mov
rcr
xor
and
xor
fsubr
adc
mov
std
adc
add
or
add
push
add
je
mov
push
inc
pusha
call
push
test
sub
add
and
scas
mov
mov
fmul
add
ret
jno
inc
and
dec
rol
adc
xor
add
shr
jno
cli
repnz
or
and
add
or
arpl
push
and
adc
enter
inc
add
add
adc
in
add
mov
pop
retf
movs
pushf
sbb
pop
sbb
jnp
xor
jb
xchg
test
pop
mov
je
(bad)
das
pop
add
lods
push
sub
adc
cs
or
sub
dec
adc
ror
add
xchg
push
das
xor
add
call
sbb
mov
sub
and
adc
daa
popa
nop
xor
add
or
push
push
fadd
mov
xchg
popa
adc
adc
jl
inc
or
adc
outs
jo
add
add
pusha
mov
dec
cmp
xchg
dec
loope
and
mov
rcr
loopne
dec
push
pop
pop
int3
test
fs
inc
fistp
adc
cld
pusha
add
adc
xchg
sub
mov
add
nop
shl
inc
enter
add
lock
sub
test
sub
arpl
mov
cmp
or
arpl
adc
xor
xchg
(bad)
nop
pop
sbb
jno
out
movs
loope
inc
nop
or
nop
mov
xor
dec
or
shr
jne
es
add
push
inc
pop
xor
and
and
aaa
add
call
(bad)
sbb
loopne
jno
adc
ss
or
add
mov
adc
sub
das
jecxz
or
movs
test
dec
add
add
stc
add
add
inc
sub
add
add
or
add
or
mov
rol
adc
daa
adc
xor
and
and
test
mov
ror
mov
pushf
rol
dec
adc
sbb
mov
cmp
adc
inc
adc
sub
out
dec
xor
cmp
movs
add
add
add
xchg
cmp
push
push
into
test
lea
test
inc
cld
pusha
inc
jbe
and
add
fs
out
rcl
add
adc
or
inc
adc
add
push
inc
inc
mov
adc
xor
popa
push
jle
js
stos
cwde
xchg
add
xchg
mov
pop
add
jmp
shl
pop
stos
bound
push
pop
fs
jne
add
popa
adc
inc
dec
inc
int
sbb
add
fwait
push
or
dec
cld
and
rcl
sub
or
cmp
push
or
je
cld
mov
push
aam
lods
div
retf
es
sub
and
push
sub
jno
ss
inc
add
fsub
sub
bound
add
and
adc
pop
mov
add
pop
dec
push
mov
and
inc
dec
or
pop
jnp
fadd
adc
fsub
sbb
inc
mov
xor
and
or
dec
and
dec
or
pop
pushf
loopne
add
jno
in
loopne
js
mov
pop
sbb
or
pusha
inc
add
and
add
or
mov
jecxz
add
adc
push
push
sub
adc
retf
sub
fld
add
mov
sub
pop
jo
and
mov
lds
adc
jp
push
add
sar
push
push
add
pusha
push
cmps
add
add
loopne
das
and
enter
adc
add
add
pop
pop
sbb
pop
push
je
push
and
or
inc
adc
or
inc
push
push
and
and
add
sbb
ret
sbb
inc
dec
pushf
mov
pop
push
loopne
add
cmp
adc
push
stos
cld
lock
push
int3
loopne
push
bound
mov
xor
fwait
inc
xor
out
add
in
sub
pop
dec
adc
cwde
adc
or
adc
shl
add
add
sub
inc
inc
ret
inc
push
pop
mov
js
sub
adc
and
dec
or
das
cwde
adc
je
adc
inc
nop
mov
sti
jl
das
adc
add
or
repnz
pushf
inc
or
jo
rcl
lea
xor
aas
sbb
push
inc
pop
pop
out
jmp
stos
ret
sub
xor
dec
adc
mov
add
dec
popa
and
sub
(bad)
add
jge
xor
mov
or
sbb
inc
xor
icebp
mov
jbe
clc
pop
push
or
jp
mov
and
loope
pop
mov
ret
sub
pop
ror
out
mov
add
sub
fstp
sub
pop
and
adc
or
clc
xor
add
mov
adc
cmp
mov
ret
lods
or
ret
inc
and
inc
aad
sbb
adc
sbb
sub
(bad)
mov
imul
and
mov
sub
popa
dec
push
add
xor
pop
adc
aas
repnz
push
and
add
push
or
add
ss
or
aam
add
in
xor
mov
daa
xor
sbb
add
mov
xor
call
mov
inc
rol
mov
ret
inc
add
outs
pop
sbb
pusha
das
cmp
push
rol
or
dec
add
and
sub
mov
sbb
inc
inc
das
mov
push
test
jb
ret
add
mov
ins
je
movs
pop
pop
nop
or
nop
mov
and
and
push
imul
dec
mov
cvttps2pi
lds
rcr
add
cmp
sub
sub
sbb
add
and
pop
mov
adc
sbb
and
mov
add
or
mov
loop
cmps
js
sbb
adc
add
out
sbb
inc
mov
add
mov
pop
add
add
xchg
pusha
add
push
dec
inc
adc
bswap
test
adc
test
cmp
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
lock
pushf
dec
rcr
add
adc
mov
cmps
mov
dec
xor
test
(bad)
shl
cmp
test
adc
cmps
adc
loope
inc
movs
xchg
pop
loope
mov
mov
test
loop
leave
or
jnp
in
and
rol
popa
retf
push
and
add
fld
inc
inc
cs
popf
pop
cmp
sbb
add
test
add
adc
out
inc
and
sub
lea
mov
pop
int
pop
inc
add
adc
bound
xor
add
mov
cmp
or
es
and
mov
addr16
sub
test
cwde
inc
fisub
sub
pusha
adc
mov
mov
sbb
xor
mov
(bad)
ja
sbb
pop
sub
add
mov
pop
push
xor
pop
cmps
sbb
and
aas
dec
jp
pop
xor
lds
sbb
mov
and
add
xor
pop
add
add
adc
mov
adc
lds
or
rcr
xchg
jl
inc
adc
jp
add
retf
or
fadd
ror
sbb
mov
add
add
or
add
push
sub
xchg
js
comiss
and
retf
add
cmp
pop
mov
mov
pusha
add
mov
mov
lock
pop
lds
push
dec
sbb
pusha
add
fs
jecxz
add
pushf
or
and
movhps
adc
sub
cmp
add
js
add
shr
clc
call
and
pop
adc
sbb
inc
addr16
fst
xor
js
lods
test
daa
(bad)
and
pop
adc
or
pop
jg
xchg
add
and
adc
or
cmp
push
or
or
pusha
jo
aad
jl
and
sbb
cmp
sbb
adc
jmp
imul
and
add
test
add
dec
push
ret
xor
dec
or
jno
push
add
fild
aam
inc
push
pop
mov
je
add
cmp
bound
ins
rcr
add
mov
xor
and
lods
jo
sub
inc
popa
ret
js
cvttps2pi
icebp
jb
xor
loopne
stos
rcr
sub
les
and
xor
inc
dec
mov
or
out
mov
call
retf
dec
sar
dec
add
add
sub
sub
or
adc
and
add
cwde
cwde
stos
xor
or
mov
loopne
leave
mov
and
add
or
(bad)
rcr
sub
les
leave
inc
lock
call
cli
cs
ror
add
test
mov
or
mov
pop
pusha
sar
retf
xor
xchg
adc
daa
imul
and
test
cs
add
or
sub
or
dec
add
js
nop/reserved
xlat
sbb
retf
inc
dec
ror
ror
mov
cmp
xor
fcomp
pop
adc
add
(bad)
or
jp
or
adc
(bad)
jmp
add
pop
inc
xchg
rol
pusha
inc
pop
es
lahf
jl
js
or
push
ins
xor
test
push
add
adc
inc
add
in
nop
jo
inc
and
inc
les
aas
lock
and
adc
inc
sbb
add
dec
adc
(bad)
adc
cld
stos
and
loope
adc
or
pop
nop
mov
xor
add
push
ror
and
dec
dec
and
and
mov
or
inc
mov
test
push
jg
inc
in
jmp
push
cmp
ror
loope
push
nop
ror
and
sub
add
jl
adc
(bad)
loopne
inc
push
mov
and
pusha
movs
in
(bad)
push
add
or
(bad)
mov
leave
adc
inc
sbb
and
pusha
mov
xchg
test
test
popa
pop
add
xor
xchg
add
and
add
add
inc
sub
add
sub
or
add
or
mov
rol
mov
inc
sbb
inc
loopne
es
ret
mov
ja
push
nop
bound
into
mov
pusha
sub
and
fs
pop
push
push
sbb
inc
push
bound
xor
push
adc
inc
xchg
fwait
sub
aaa
stos
ret
mov
pop
mov
sbb
gs
adc
add
xlat
(bad)
push
xor
sbb
or
cmps
and
movs
mov
inc
and
pop
sbb
(bad)
lea
in
sbb
push
xor
mov
push
add
pusha
add
test
shl
dec
adc
not
or
mov
add
pop
push
or
adc
scas
inc
es
inc
jl
adc
mov
iret
es
inc
dec
xchg
pop
in
mov
xor
push
cli
adc
mov
pushf
adc
mov
aad
(bad)
push
aad
push
xor
enter
pop
int
push
xor
xchg
adc
xchg
push
xor
and
test
or
lock
es
pop
inc
jecxz
sbb
lock
or
nop
add
(bad)
and
add
and
adc
lods
mov
inc
mov
and
add
adc
push
sbb
lahf
in
add
push
inc
pusha
mov
inc
and
add
and
sbb
jg
and
sbb
inc
aam
lds
add
or
adc
(bad)
je
or
xchg
(bad)
push
fiadd
pop
mov
push
sub
inc
or
dec
ins
(bad)
add
fsub
inc
sub
adc
inc
add
and
(bad)
dec
add
push
dec
add
pop
clc
jb
add
jl
add
aas
cmp
push
add
inc
mov
inc
mov
rol
inc
ins
ror
movs
mov
loop
adc
cwde
lock
bound
movs
adc
push
xor
rol
movs
leave
xchg
adc
nop
mov
cmp
or
retf
cwde
adc
add
adc
xchg
int3
push
add
add
mov
push
in
rol
mov
rol
xchg
repnz
lds
pusha
xchg
and
or
or
push
adc
ret
shr
nop
add
and
sbb
jl
add
inc
add
aam
add
sub
loop
adc
or
mov
mov
or
inc
pop
and
cmps
mov
add
xchg
jnp
xor
inc
add
mov
ret
or
add
sub
fs
aaa
add
call
inc
nop
adc
ins
jo
sbb
hlt
repnz
sbb
rol
or
ficom
hlt
ret
cs
push
pop
and
add
add
xor
jbe
outs
push
in
int3
cmp
das
and
adc
push
adc
dec
adc
push
cmps
add
mov
out
das
and
or
xor
inc
adc
into
out
bound
(bad)
lahf
pop
jbe
mov
movs
fdiv
adc
cmp
xchg
inc
dec
test
jbe
xor
add
sbb
mov
xor
or
mov
adc
pop
add
mov
xor
ret
jecxz
das
sub
add
jne
ds
add
lock
or
sub
je
sub
loope
loopne
inc
xor
and
pusha
movs
or
or
jl
or
xchg
push
dec
loope
pop
rol
add
push
nop
mov
adc
mov
addr16
add
scas
inc
call
ret
add
and
add
pop
mov
push
call
rol
enter
adc
xor
inc
sbb
div
mov
adc
cmp
icebp
pop
and
sbb
rol
retf
add
clc
ret
lock
call
sub
push
ror
frstor
or
inc
or
and
inc
fadd
push
jbe
retf
xor
lods
(bad)
or
rol
sbb
add
mov
mov
xor
inc
xor
aad
sbb
push
adc
push
xchg
push
xchg
outs
and
bound
rol
and
aas
inc
and
fidiv
in
adc
push
add
lods
and
add
stc
add
add
inc
sub
add
add
add
or
add
or
mov
rol
xor
sub
sbb
sub
add
xor
lods
mov
or
fsubr
cmps
mov
lods
pop
fadd
add
lods
js
push
mov
mov
cmps
add
sbb
xchg
mov
test
sbb
in
fldenv
cmp
lods
add
add
or
jno
xchg
add
shl
push
daa
pop
sub
sbb
mov
add
push
push
sbb
or
je
sbb
das
and
and
aaa
fidiv
inc
xchg
dec
popa
add
cmps
pop
nop
and
dec
inc
and
dec
std
mov
and
(bad)
(bad)
fs
cmp
sbb
lock
adc
ss
add
sub
adc
nop
and
push
test
adc
push
cdq
inc
ret
mov
add
cdq
fcom
mov
add
inc
pop
stos
inc
and
pop
jmp
adc
fdiv
push
mov
dec
jo
mov
bound
inc
add
or
inc
outs
adc
aas
or
loope
and
sub
ret
dec
mov
add
in
add
les
add
pusha
sub
add
and
movs
and
inc
push
loopne
lea
inc
sub
inc
inc
sbb
fs
push
cmp
and
add
or
inc
rcr
dec
adc
xor
add
lds
and
xor
aas
pop
adc
or
and
and
add
pop
pusha
add
mov
leave
push
push
adc
push
xor
and
jle
mov
inc
call
push
dec
jecxz
xchg
push
pop
inc
int3
adc
adc
jecxz
or
push
rol
and
loope
pop
xchg
popa
adc
std
sub
add
movs
pop
pushf
mov
xor
cmp
add
xor
inc
mov
pop
xor
or
push
and
push
cmp
jo
or
and
(bad)
sub
inc
mov
sbb
cmp
mov
nop
ret
add
fild
cmp
loopne
and
movs
imul
les
int3
sub
push
or
sbb
cli
xor
and
loopne
add
sub
jnp
add
sub
mov
mov
adc
push
pop
data16
add
inc
mov
adc
cld
rol
push
add
(bad)
sub
mov
or
aaa
les
xchg
xchg
pop
lods
xor
inc
adc
test
or
jae
jbe
das
(bad)
push
and
rcl
lock
inc
pusha
xchg
dec
loopne
adc
or
mov
les
es
jmp
pop
fsubr
fadd
push
out
mov
xor
sub
push
dec
test
in
mov
mov
or
sbb
push
(bad)
jmp
mov
bound
call
sbb
mov
adc
ins
mov
xor
sbb
je
inc
ja
in
jmp
je
test
dec
clc
mov
add
bound
inc
or
xor
sub
pushf
pop
clc
bound
ja
or
pop
adc
mov
repnz
cs
or
dec
xor
loopne
fiadd
or
inc
xor
sub
add
jb
inc
repz
jne
xor
add
pop
add
adc
mov
sub
mov
mov
or
popa
and
mov
add
add
call
and
pop
mov
inc
sbb
or
add
loopne
cmp
ror
adc
rol
mov
pop
fsub
inc
sbb
push
mov
shl
test
jbe
adc
dec
sbb
and
inc
or
or
lock
enter
cmp
adc
pusha
jno
pop
adc
inc
sbb
mov
mov
adc
inc
mov
push
das
cmp
sbb
enter
or
add
rol
mov
add
sub
inc
dec
or
mov
add
das
ins
ret
inc
or
mov
stos
mov
adc
xlat
and
dec
sub
add
daa
mov
adc
cli
xchg
add
mov
add
inc
aad
test
or
xor
sub
cmps
inc
pushf
xor
and
add
test
and
add
and
add
add
inc
sub
add
add
or
add
or
mov
rol
xor
dec
pushf
cmp
or
and
push
jp
xor
push
or
sub
inc
mov
call
add
or
adc
enter
sub
movs
xor
or
mov
adc
inc
inc
or
or
push
add
inc
je
rol
or
loopne
add
adc
mov
adc
xchg
jl
jns
shl
adc
push
inc
push
add
xchg
or
mov
inc
xchg
outs
push
pop
adc
ds
pop
mov
lock
mov
inc
jl
adc
mov
movs
xchg
sbb
call
cld
or
add
inc
dec
xor
cmp
lock
mov
clc
add
ds
or
pop
jno
test
or
pop
clc
add
xchg
adc
loopne
lea
or
inc
loope
movs
inc
leave
inc
pop
adc
inc
vpmacssww
sub
repnz
adc
sbb
inc
and
loopne
ret
je
mov
movs
ret
adc
add
add
add
and
enter
fcom
dec
sbb
test
inc
add
adc
xor
mov
rol
iret
adc
xchg
and
add
and
or
ins
inc
add
add
and
pop
inc
add
je
shl
adc
xor
iret
or
add
inc
or
pop
or
jne
dec
push
cmp
and
in
add
adc
add
add
inc
xor
sub
xchg
add
and
add
retf
lods
add
clc
push
cwde
lock
xchg
add
pop
js
add
push
push
jp
pop
and
adc
ror
or
adc
cmp
jecxz
and
sbb
test
rcr
(bad)
fdivr
add
mov
test
mov
lahf
pop
or
push
fsub
and
in
inc
in
add
push
es
inc
add
test
mov
add
pop
loopne
sub
(bad)
sar
inc
lock
pop
sbb
adc
xchg
aas
and
or
xlat
and
add
sti
and
nop
sub
or
adc
push
call
inc
clc
inc
add
inc
shl
add
add
(bad)
push
rcl
inc
daa
xor
sub
rcr
jnp
lock
jbe
xor
das
mov
pop
loopne
add
lahf
push
mov
mov
inc
adc
inc
icebp
pushf
inc
clc
cld
add
fs
ret
pop
mov
movs
sub
pop
call
inc
cmp
mov
push
and
xor
and
inc
inc
dec
sbb
push
push
in
inc
mov
add
push
test
sub
cmp
mov
arpl
add
xor
clc
fld
cs
push
unpcklps
mov
sbb
add
dec
or
pusha
inc
add
pop
loopne
fnstsw
enter
push
xor
loopne
or
(bad)
into
sub
inc
add
sbb
fbstp
in
and
push
shl
ret
mov
mov
xor
(bad)
cmp
outs
xlat
mov
lock
nop
mov
or
inc
adc
adc
test
and
push
add
cmp
pop
das
cld
xor
or
and
push
call
lods
inc
push
les
push
lock
bound
add
rcr
mov
cs
dec
mov
jo
and
cmp
or
push
ret
cmps
iret
add
add
jo
or
loop
sbb
call
inc
jecxz
test
sti
pop
mov
or
adc
add
inc
pop
or
jle
test
hlt
loop
addr16
adc
and
retf
rol
pop
xchg
lock
push
(bad)
dec
or
add
ror
mov
or
int3
bound
adc
add
and
adc
jno
pop
add
sbb
xor
add
and
pusha
adc
loope
sub
jns
inc
pop
inc
adc
shl
dec
add
adc
sub
js
push
and
mov
xor
add
stc
add
add
inc
sub
add
add
or
add
or
mov
rol
rol
xor
xchg
cmp
cmp
ret
bound
(bad)
stos
or
or
clc
inc
dec
mov
adc
jl
sbb
mov
or
cwde
and
pop
inc
retf
and
les
cli
inc
retf
xchg
and
loope
adc
adc
sbb
mov
fwait
jp
(bad)
xor
push
push
rol
add
push
xor
dec
xor
enter
mov
in
test
push
aas
inc
mov
dec
test
inc
xchg
pop
xor
xor
add
loop
inc
adc
or
mov
adc
or
sbb
popa
retf
dec
mov
or
inc
adc
adc
adc
in
add
cmps
and
mov
and
and
mov
enter
xchg
(bad)
subps
adc
test
(bad)
out
push
or
pop
popa
add
invd
les
arpl
mov
aaa
nop
mov
in
and
and
inc
or
movs
inc
inc
add
js
inc
sub
add
pop
rol
mov
shl
push
xor
mov
jo
or
je
pop
push
xor
push
push
add
and
sbb
pusha
add
or
jo
les
cs
repz
sub
test
or
or
test
les
cmp
pop
add
adc
jno
test
push
ins
inc
mov
mov
xlat
or
inc
inc
adc
cmp
sahf
js
add
add
rcl
add
add
jmp
mov
loopne
pop
or
jae
das
or
(bad)
sub
add
enter
and
and
int3
add
or
adc
xlat
inc
dec
lods
jecxz
push
in
loopne
xor
mov
mov
es
add
sbb
inc
add
push
inc
shl
jmp
add
loopne
pop
and
mov
rol
push
js
add
lock
xchg
das
cmp
add
pop
cwde
fwait
jo
or
cld
loopne
add
pop
xchg
add
push
push
add
mov
or
mov
or
and
inc
fbld
push
adc
push
js
inc
leave
inc
mov
pop
rol
and
cmp
or
(bad)
fmul
adc
push
mov
es
sub
jo
shr
push
das
cwde
pusha
add
inc
and
add
mov
fdiv
adc
xchg
xchg
scas
and
adc
xor
inc
adc
mov
and
xchg
inc
xor
sbb
push
hlt
lea
scas
mov
addr16
jb
and
push
mov
fstp
loopne
adc
mov
or
mov
test
mov
mov
out
adc
add
cmc
fcom
mov
(bad)
aaa
mov
test
jmp
or
fst
add
mov
call
add
out
adc
sbb
pop
frstor
or
inc
and
inc
add
dec
jo
fucomi
mov
js
enter
mov
mov
and
add
xchg
mov
pop
out
xchg
cmp
mov
fiadd
add
sub
sbb
les
fmul
rcl
jo
(bad)
push
push
rol
cmp
nop
or
adc
xor
(bad)
jbe
in
xor
add
adc
test
and
adc
inc
or
inc
or
cwde
and
leave
pop
inc
xor
sbb
or
push
ror
mov
adc
fsub
sub
add
mov
daa
add
add
js
inc
dec
push
and
adc
or
mov
xchg
pop
rol
(bad)
add
add
jge
movs
inc
(bad)
mov
inc
ins
and
xor
ret
jo
xor
loopne
sbb
xor
push
and
add
or
xor
sbb
jle
add
and
pushf
xor
xor
push
shl
add
xchg
add
cmp
jo
mov
rol
rol
or
lgdtd
jbe
add
add
add
popa
xor
sbb
dec
add
data16
add
add
add
inc
dec
inc
cmp
popa
inc
add
add
inc
retf
add
cli
out
in
in
mov
xchg
pop
add
(bad)
mov
in
or
or
mov
mov
push
fcmovu
(bad)
in
imul
repz
mov
add
cmps
shl
out
enter
iret
xchg
add
fcmovnbe
(bad)
test
out
mov
bound
xchg
push
mov
mov
(bad)
(bad)
retf
into
dec
dec
(bad)
std
add
or
(bad)
(bad)
(bad)
(bad)
std
repz
cld
std
test
ins
mov
xchg
fwait
outs
daa
lods
xor
in
fcmove
das
sub
jecxz
retf
neg
fstp
dec
mov
adc
mov
mov
inc
in
in
jne
lahf
mov
xor
inc
test
mov
mov
fcmovnbe
enter
mov
xor
int
mov
dec
mov
and
sub
arpl
xchg
enter
ss
mov
lea
cmc
hlt
in
stos
jnp
into
push
sub
fsubp
mul
int3
mov
aaa
lds
cmps
test
idiv
imul
cmc
out
out
(bad)
mov
mov
in
repz
enter
cmc
retf
xchg
push
sbb
dec
add
pop
int3
mov
(bad)
std
out
mov
cmp
fwait
cmp
and
in
jecxz
jae
jne
mov
enter
into
(bad)
mov
mov
div
in
mov
xchg
int
jbe
imul
scas
int3
enter
xor
in
idiv
pushf
cmp
or
ret
lea
jl
jmp
add
imul
aad
loopne
jne
mov
sbb
in
icebp
fneni(8087
loope
(bad)
call
sub
jp
(bad)
jmp
dec
dec
jmp
jnp
mov
daa
iret
aad
sar
sahf
xor
add
push
dec
fsubr
loope
mov
out
mov
out
sti
out
shr
shr
xchg
pop
adc
mov
cmp
mov
shl
rcr
lahf
ret
scas
xchg
cmp
dec
push
int3
mov
into
pop
pop
cmc
loop
(bad)
lods
mov
cs
sbb
sar
jle
push
test
mov
pop
dec
push
sahf
out
fidivr
pop
add
pop
sbb
ja
scas
nop
dec
mov
inc
mov
idiv
sti
sti
out
out
out
cli
(bad)
(bad)
jmp
jmp
(bad)
cli
repz
sti
(bad)
jmp
out
jmp
lock
sti
push
div
sti
(bad)
sti
repz
sti
cli
icebp
out
jmp
div
div
div
jmp
call
jmp
cmp
inc
jae
ds
mov
rcl
rol
xchg
sub
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
cmp
add
inc
std
or
mov
rol
mov
and
push
push
jbe
rol
pextrw
(bad)
and
scas
inc
xor
adc
adc
adc
adc
rol
dec
and
mov
mov
rol
sahf
dec
and
push
add
mov
mov
xchg
push
mov
pusha
add
mov
cmp
push
or
cmp
sbb
inc
gs
dec
sbb
int3
inc
or
rol
sub
mov
pop
aad
rol
cmps
outs
mov
or
inc
stos
sub
pop
sub
inc
and
push
rol
and
inc
ins
mov
adc
cmc
inc
ds
adc
popa
fild
add
ret
add
xor
push
ss
mov
(bad)
jl
bound
ficom
lock
jle
or
lock
xor
xor
inc
jl
les
xor
or
dec
adc
fadd
add
xor
cmp
pop
mov
pop
je
aam
ror
lds
add
cmp
xor
or
and
stc
and
aam
lea
aaa
out
or
pop
es
cld
nop
add
cmp
les
sub
dec
adc
test
paddq
fs
inc
jo
aaa
pop
jbe
movs
xchg
pop
jb
push
mov
dec
push
pop
arpl
push
test
or
jo
add
test
ror
jl
jmp
pop
and
add
lock
or
add
inc
daa
pushf
jb
fiadd
push
push
hlt
jecxz
lahf
pushf
push
test
mov
sub
aam
add
and
xchg
push
dec
loope
movs
xchg
out
nop
add
loop
ret
jmp
into
push
or
les
dec
pushf
adc
dec
inc
hlt
xor
ret
adc
pushf
cmp
loopne
stos
inc
mov
mov
stos
cmp
jp
mov
sbb
adc
adc
xchg
xor
adc
adc
mov
inc
aaa
fwait
push
cmps
inc
fimul
mov
push
sar
and
int
icebp
add
xor
sahf
cli
out
jmp
mov
adc
add
or
aaa
inc
inc
or
adc
inc
push
pop
push
pop
xor
jmp
pushf
das
cmps
pop
xchg
inc
xchg
movs
mov
inc
and
lods
xor
mov
enter
or
retf
in
iret
mov
imul
add
ja
xor
push
mov
push
jmp
dec
jo
or
scas
int
push
call
adc
mov
adc
jmp
aaa
pop
cmp
cmps
push
mov
int
lds
int
cmp
ret
fwait
inc
xor
or
push
add
pusha
sub
ds
cmp
dec
loope
(bad)
stc
int
retf
add
mov
cld
or
push
adc
call
js
shr
or
sahf
stos
aas
pop
js
les
xchg
in
(bad)
jmp
sbb
arpl
inc
and
iret
cmp
add
sub
adc
or
push
inc
add
or
cli
jmp
jo
call
daa
sbb
(bad)
(bad)
call
and
into
xor
gs
pusha
sbb
cmp
push
mov
sbb
pop
add
dec
test
mov
xchg
aas
rcl
les
dec
or
js
push
in
mov
add
rol
adc
das
xchg
jo
jg
sbb
lock
inc
xor
adc
add
inc
xor
call
rcr
dec
inc
inc
xor
push
ret
outs
sbb
and
clc
lea
xor
pop
lahf
mov
es
xchg
pop
sbb
sbb
leave
mov
adc
inc
sbb
push
int
adc
cmp
adc
pop
jns
or
push
or
enter
dec
and
and
or
add
sbb
call
inc
add
inc
add
stc
xrelease
dec
inc
mov
hlt
nop
jecxz
cli
fs
inc
adc
dec
jb
add
inc
pusha
or
adc
fadd
push
cli
inc
or
push
das
cmp
outs
je
sbb
jne
dec
pop
loop
imul
sbb
or
stos
lock
sbb
cmp
repnz
or
sub
add
adc
rol
das
pusha
inc
or
mov
sbb
and
or
mov
out
sar
repnz
push
in
adc
mov
dec
add
cmp
sahf
mov
jbe
ficomp
adc
adc
xor
sbb
inc
add
mov
cmp
nop
add
loopne
mov
add
inc
add
inc
pop
sub
push
sub
and
sbb
pop
sub
xor
or
rol
clc
inc
sbb
mov
add
inc
ucomiss
or
call
add
test
or
mov
es
rol
cwde
mov
test
or
pusha
push
xchg
enter
push
or
data16
jg
loop
je
or
sub
adc
leave
lea
or
push
fadd
sub
add
mov
nop
jae
loopne
daa
inc
pop
or
mov
jmp
sub
push
cmp
add
icebp
aad
call
add
dec
mov
adc
add
jle
add
add
mov
fadd
and
cwde
rcr
sub
inc
lea
adc
adc
adc
lods
and
mov
add
adc
or
cdq
test
or
rol
add
add
mov
xor
add
inc
das
inc
not
xor
or
and
and
pop
add
add
lock
dec
dec
add
call
or
pop
add
adc
enter
sbb
in
mov
add
sbb
movs
aas
pop
rol
add
xchg
or
(bad)
cmp
add
mov
mov
mov
push
jl
or
rol
or
adc
mov
sbb
(bad)
ss
adc
and
add
pusha
jmp
and
adc
ret
xor
push
add
xchg
push
or
rcl
movs
jne
in
cmp
mov
pop
add
mov
or
add
push
add
pusha
add
add
jge
add
xchg
sbb
xchg
add
adc
fisubr
test
mov
movs
push
sbb
add
clc
in
cmp
add
push
xchg
les
loop
lds
pop
and
pop
mov
xchg
dec
jno
sub
add
cmp
xor
jb
ins
sbb
sbb
sbb
push
inc
add
(bad)
sbb
(bad)
stos
add
mov
inc
or
dec
mov
jbe
or
ficomp
adc
add
adc
mov
and
mov
ficom
or
sbb
jno
add
es
loopne
cmp
shr
mov
fisttp
inc
or
pusha
pop
sub
and
push
add
pop
xor
cdq
repz
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
or
push
movs
inc
inc
mov
ins
cmp
mov
ret
addr16
test
(bad)
loop
jo
inc
mov
ins
mov
int
inc
xor
enter
xchg
call
mov
imul
sti
mov
jle
mov
dec
mov
rol
lea
push
cmps
inc
and
aaa
xchg
inc
and
inc
pop
sub
add
sub
jge
adc
jo
aas
and
or
(bad)
adc
repnz
add
or
add
add
outs
sbb
retf
mov
data16
mov
fsub
dec
push
xchg
sbb
retf
retf
adc
mov
add
jb
pushf
shr
push
loope
out
test
jg
push
int3
lahf
cmp
test
adc
jmp
les
inc
or
loopne
fwait
nop
or
lock
and
add
adc
push
add
add
aas
xor
xor
jl
int
or
adc
mov
bound
sub
rol
or
pop
and
mov
lea
lods
mov
mov
xor
add
sbb
iret
aas
loop
jecxz
cmp
and
add
fs
arpl
add
xchg
icebp
(bad)
cmp
arpl
sbb
movs
cmp
sub
mov
add
clc
iret
(bad)
jmp
dec
sbb
or
or
cld
arpl
dec
mov
cmp
mov
adc
add
rcl
jl
pop
inc
lods
cld
and
and
add
mov
or
xor
mov
add
xchg
inc
(bad)
mov
dec
pop
das
xor
stos
inc
dec
lds
and
add
ds
invd
inc
or
call
add
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
lock
xchg
or
sub
gs
ret
imul
xchg
or
cli
fucomi
out
bound
daa
(bad)
jno
mov
add
xor
or
xchg
push
jmp
(bad)
dec
sahf
xchg
and
popa
es
xlat
iret
pop
aaa
outs
fdivr
mov
or
cmp
in
pop
adc
sbb
nop
mov
ret
jle
retf
nop
add
and
ins
les
adc
outs
jmp
lods
or
xor
repz
mov
sub
cmp
mov
cs
mov
and
inc
nop
adc
sub
call
inc
mov
adc
adc
scas
mov
cmp
and
test
xor
ins
add
adc
inc
fs
lock
adc
add
sub
sbb
sub
cmovns
lock
je
mov
sti
cmp
jb
lock
outs
and
dec
inc
mov
daa
or
and
pop
mov
mov
inc
sbb
inc
aam
iret
shl
iret
sub
ret
movs
repz
adc
in
test
in
ret
pop
adc
push
add
adc
inc
js
inc
daa
stc
test
xor
int
in
mov
rol
pop
xor
inc
sub
out
push
outs
and
lds
xchg
add
mov
push
adc
adc
aaa
arpl
pop
std
and
int3
movs
add
adc
js
nop
add
test
ret
sbb
or
outs
jo
into
or
add
call
cmp
js
cmps
cmp
cmc
jecxz
xor
adc
and
ret
push
xchg
aas
pop
or
ror
aaa
add
loopne
adc
and
fldenv
dec
and
or
xor
shl
int
pop
fadd
and
cmc
and
loope
push
(bad)
cwde
mov
mov
adc
xchg
add
ins
clc
xor
sbb
lods
add
and
ltr
mov
xor
or
pop
sbb
xor
xor
sub
pop
retf
(bad)
push
dec
sub
aas
loope
mov
ret
or
and
sub
jle
in
sub
fmul
push
mov
push
inc
or
fs
retf
or
mov
push
jp
dec
ret
or
inc
inc
sbb
jb
push
sbb
adc
xchg
mov
movs
sub
retf
add
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
pop
enter
jb
arpl
dec
jno
sbb
mov
in
jne
test
add
xor
and
outs
das
je
retf
push
les
push
fisttp
dec
jo
in
pop
add
or
loopne
mov
inc
xor
popf
sbb
add
ds
add
aam
xchg
cld
frstor
push
mov
mov
cmp
(bad)
or
ret
and
or
iret
push
pop
pop
dec
into
clc
adc
dec
or
lea
jmp
rol
jg
and
repz
pop
xor
test
xchg
(bad)
sub
cmp
ret
sub
sbb
add
and
jg
and
pop
and
jno
sub
ins
adc
push
cmp
mov
outs
add
adc
call
mov
int3
sbb
or
push
icebp
sub
les
leave
xchg
mov
ds
adc
in
adc
mov
jo
or
test
enter
jecxz
cmp
stc
push
sbb
or
inc
and
add
add
add
sub
add
xor
pusha
mov
es
or
dec
cmp
add
mov
shl
es
in
adc
add
sub
loopne
(bad)
adc
fadd
xor
(bad)
test
xchg
(bad)
pop
and
or
or
fisttp
inc
adc
or
mov
xchg
or
mov
push
es
pusha
loopne
add
int3
mov
jae
sahf
imul
enter
(bad)
in
adc
mov
pop
cmp
in
ret
or
mov
add
sbb
shl
push
push
xor
jno
dec
(bad)
mov
pushf
loopne
lods
or
inc
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
nop
or
push
movs
inc
inc
mov
ins
cmp
mov
ret
addr16
test
(bad)
loop
jo
inc
mov
ins
mov
int
inc
xor
enter
xchg
call
mov
imul
sti
mov
jle
mov
dec
mov
rol
lea
push
cmps
inc
and
aaa
xchg
inc
and
inc
pop
sub
add
sub
jge
adc
jo
aas
and
or
(bad)
adc
repnz
add
or
add
add
outs
sbb
retf
mov
data16
mov
fsub
dec
push
xchg
sbb
retf
retf
adc
mov
add
jb
pushf
shr
push
loope
out
test
jg
push
int3
lahf
cmp
test
adc
jmp
les
inc
or
loopne
fwait
nop
or
lock
and
add
adc
push
add
add
aas
xor
xor
jl
int
or
adc
mov
bound
sub
rol
or
pop
and
mov
lea
lods
mov
mov
xor
add
sbb
iret
aas
loop
jecxz
cmp
and
add
fs
arpl
add
xchg
icebp
(bad)
cmp
arpl
sbb
movs
cmp
sub
mov
add
clc
iret
(bad)
jmp
dec
sbb
or
or
cld
arpl
dec
mov
cmp
mov
adc
add
rcl
jl
pop
inc
lods
cld
and
and
add
mov
or
xor
mov
add
xchg
inc
(bad)
mov
dec
pop
das
xor
stos
inc
dec
lds
and
add
ds
invd
inc
or
call
add
add
stc
add
or
inc
sub
add
add
add
or
add
or
nop
or
or
and
xor
mov
inc
push
add
imul
adc
ss
pop
xchg
fwait
cmp
shl
pop
mov
mov
xchg
pop
std
cmc
xor
lea
aaa
pop
les
and
ret
or
stc
add
inc
dec
sub
or
sbb
mov
xor
xor
adc
pop
mov
inc
xchg
pop
leave
idiv
push
in
add
xor
jo
jnp
xor
fldcw
and
or
bound
sbb
jp
push
sbb
cmp
(bad)
(bad)
mov
aas
push
jne
inc
or
add
adc
in
sbb
add
sub
or
mov
sub
cmp
mov
add
ss
je
and
or
jo
inc
pop
clc
or
add
sub
mov
leave
je
add
adc
dec
push
movs
mov
daa
or
or
test
mov
inc
and
sbb
retf
or
rol
(bad)
and
add
jo
test
in
inc
push
push
pusha
xor
adc
fadd
(bad)
jno
getsec
sbb
lock
pushf
add
inc
rol
rol
mov
mul
jg
js
adc
mov
add
std
cld
jecxz
aaa
in
add
sbb
test
(bad)
cmp
cmc
sub
add
sub
sbb
inc
cmp
cld
popa
add
sub
inc
(bad)
xchg
inc
add
aam
inc
xchg
inc
mov
or
aam
aas
dec
add
pusha
loopne
xor
sub
lea
jb
inc
mov
adc
cmp
sbb
inc
xchg
aas
and
add
aas
adc
rol
or
pop
jbe
push
add
cwde
jecxz
pop
xchg
dec
or
add
loope
cdq
ja
adc
sub
arpl
mov
inc
ret
or
inc
cdq
sbb
retf
ret
or
sbb
and
add
rol
pop
jae
dec
inc
or
popa
clc
push
sbb
(bad)
aam
add
push
push
push
or
add
jae
pop
mov
push
cld
out
and
and
xchg
mov
xor
mov
or
push
dec
inc
add
sub
push
(bad)
push
in
push
lea
inc
add
and
add
or
inc
sub
add
add
and
add
inc
dec
sbb
lock
pop
enter
xor
xor
or
rol
lock
add
sbb
jno
mov
cmp
dec
sub
js
test
in
lock
fisttp
add
inc
xor
popf
sbb
add
sub
cli
sub
or
frstor
push
mov
mov
cmp
(bad)
or
ret
and
add
dec
int3
lock
iret
push
pop
pop
dec
into
clc
adc
dec
or
xlat
fbld
out
xchg
xor
add
int
aas
push
popa
jge
and
(bad)
pop
test
jge
test
adc
adc
ss
test
(bad)
nop
inc
inc
inc
movs
shr
mov
int
jl
add
(bad)
ins
adc
push
cmp
xor
and
sub
or
add
in
(bad)
fdiv
ins
stos
cld
es
sbb
jle
and
arpl
cmp
mov
pusha
sub
add
jo
or
test
enter
jecxz
jo
call
or
ds
adc
add
add
add
sub
add
rol
sbb
arpl
es
mov
and
pop
aaa
out
mov
(bad)
push
dec
cld
and
jo
mov
sub
jo
pop
add
mov
nop
xor
inc
dec
pop
std
jo
fmul
inc
adc
or
mov
jg
xchg
shl
mov
js
ror
pop
dec
adc
clc
cmc
mov
and
add
ror
nop
add
and
sahf
jnp
shl
loopne
ret
add
and
cmp
and
movs
mov
mov
mov
aas
sbb
inc
cmps
push
in
sub
or
pushf
rcl
or
mov
push
jle
add
add
or
inc
sub
add
add
cmp
add
inc
dec
sbb
mov
rol
mov
adc
dec
mov
aas
jne
jl
fld
push
inc
mov
push
enter
xor
adc
inc
inc
jbe
or
mov
(bad)
pop
sub
cwde
sahf
dec
adc
inc
sub
pop
adc
fwait
and
add
xchg
jmp
cmp
xchg
xchg
jo
jmp
neg
fs
jb
and
or
sbb
jns
mov
nop
es
pop
sbb
movs
sub
push
push
cmp
add
or
mov
cmc
jo
jae
sub
in
sbb
hlt
fbstp
pusha
cli
sbb
(bad)
lea
sbb
and
inc
popf
jmp
sub
shl
add
and
pop
ror
sbb
test
jge
or
inc
xchg
into
dec
adc
(bad)
ss
bound
xchg
push
stos
movaps
mov
ret
xchg
dec
pop
sub
xchg
inc
dec
push
cmp
arpl
or
pusha
jae
sub
lods
inc
add
es
sbb
nop
aaa
in
xor
int
sbb
rol
nop
nop
add
popf
in
inc
add
loope
mov
push
sub
cmp
nop
push
adc
cmp
ret
or
loop
sbb
in
ret
pop
xor
shl
aam
aaa
aas
mov
in
aas
push
jne
ret
aas
dec
es
dec
cmp
pop
fxch
aas
std
dec
xchg
es
fnstsw
lea
loope
loopne
sub
adc
dec
sahf
xor
(bad)
jae
dec
fiadd
or
aaa
rol
push
mov
and
jno
xor
cwde
xor
adc
adc
or
push
addr16
push
sbb
xor
inc
inc
cmp
xchg
jecxz
adc
cs
cmp
push
(bad)
jae
push
pop
xor
add
adc
js
push
call
or
pop
fadd
push
adc
movs
inc
mov
int
push
adc
jb
mov
or
add
mov
aaa
cmps
dec
das
movs
xor
rol
mov
popf
mov
and
shl
in
cmp
adc
add
mov
dec
add
or
push
sub
sti
stos
inc
adc
aam
inc
out
inc
or
xor
and
loopne
pop
cmp
jb
je
sub
call
xchg
or
(bad)
push
loopne
or
(bad)
icebp
inc
push
popf
js
(bad)
dec
jo
cmp
cmps
(bad)
arpl
xor
imul
inc
or
fs
popf
or
bound
and
lzcnt
add
loop
sub
aas
cli
pop
test
aas
fistp
aas
mov
xor
loopne
add
sbb
jmp
mov
(bad)
movhps
mov
test
cs
dec
inc
push
call
clc
les
xor
push
sahf
outs
push
push
mov
lahf
aam
(bad)
sar
push
jo
aas
lods
loopne
ror
std
nop
inc
push
adc
clc
jle
or
xor
retf
add
sub
cli
jmp
mov
repnz
add
les
and
mov
push
and
adc
dec
add
mov
or
xor
aaa
or
std
sbb
or
xor
add
sbb
xchg
ins
fsub
push
ja
sbb
sub
add
cmp
jecxz
js
pusha
std
dec
cmp
imul
jp
and
inc
das
call
test
hlt
lods
add
xor
pop
nop
enter
add
inc
add
jecxz
or
(bad)
or
(bad)
or
cs
fcomp
add
dec
mov
add
test
clc
jo
or
dec
mov
or
rol
das
loop
or
enter
fdivr
xor
pop
adc
xchg
xchg
in
add
rol
adc
push
add
in
pop
stc
sar
inc
xchg
mov
sbb
ror
lock
jmp
add
sbb
test
ins
xor
ret
adc
pop
push
sub
xor
or
stos
pop
mov
test
fadd
shufps
or
out
and
add
ror
inc
and
jmp
add
ret
add
xor
push
or
add
ins
imul
add
cld
mov
sub
push
adc
add
daa
add
jne
xor
mov
adc
js
and
sub
sbb
clc
xchg
call
inc
and
jp
push
jl
aas
das
rol
adc
ror
xor
pop
inc
lea
dec
fs
or
lea
mov
xor
mov
or
leave
lahf
sbb
add
add
and
xchg
es
in
pop
and
mov
and
cdq
adc
mov
push
push
cmp
mov
mov
push
movs
and
jae
jns
aas
pop
popa
or
dec
add
mov
cmp
pop
adc
out
loopne
pop
dec
and
pop
inc
add
call
ror
adc
or
sub
xor
dec
call
pop
dec
or
xor
xchg
add
and
or
add
(bad)
mov
add
clc
(bad)
sbb
add
and
add
adc
loopne
adc
sub
add
jo
or
pop
movs
sbb
add
rol
std
sub
into
popf
mov
and
mov
mov
test
inc
cmps
or
add
dec
or
inc
pop
adc
loop
test
mov
rol
or
add
stos
test
sub
adc
mov
in
add
dec
loopne
test
into
push
mov
or
dec
les
ret
mov
add
lahf
imul
loopne
rcr
jo
(bad)
rol
std
stos
mov
or
test
nop
and
add
fwait
es
add
jl
(bad)
sbb
adc
and
adc
inc
or
sbb
mov
dec
add
icebp
jmp
popf
dec
add
adc
push
test
inc
push
push
int
xor
add
and
inc
fs
or
mov
in
or
fadd
and
ins
ret
xchg
pop
mov
xor
adc
nop
ret
cs
repnz
mov
rcr
sbb
jb
mov
inc
adc
pop
cwde
inc
add
add
and
add
or
inc
sub
add
add
cmp
add
inc
std
or
mov
rol
mov
inc
and
fcmovnb
mov
adc
les
add
cmp
xor
push
add
mov
adc
xor
outs
mov
cmp
pop
mov
repz
add
pop
fadd
and
adc
fwait
xor
dec
mov
dec
jnp
fiadd
cmps
dec
pop
retf
test
xrelease
aaa
sub
and
test
dec
mov
fidiv
dec
jne
adc
adc
mov
adc
pop
dec
lock
or
(bad)
adc
mov
enter
sbb
ins
in
dec
and
pusha
inc
and
inc
inc
jl
cwde
or
inc
mov
inc
add
pusha
adc
mov
or
dec
pop
dec
fsubr
rcl
xchg
pop
sub
dec
add
push
or
in
dec
xchg
ins
std
push
sub
fadd
xor
adc
add
sgdtd
or
ret
shrd
icebp
ret
mov
or
xchg
xchg
shl
sbb
popa
mov
mov
aam
add
jmp
daa
add
cmp
popa
dec
push
inc
add
inc
inc
(bad)
push
ret
inc
push
adc
ds
push
dec
push
add
js
movs
cmp
xor
xor
xchg
xchg
pop
ror
lods
mov
adc
cmp
and
adc
fsub
mov
int
fdiv
leave
in
add
pop
jae
add
add
jno
adc
and
adc
(bad)
cwde
add
call
mov
jbe
out
add
rol
in
sub
fsub
call
cmp
xchg
push
mov
jmp
aas
std
sar
es
add
lock
add
push
cmp
arpl
inc
push
cmp
and
or
(bad)
jmp
add
add
or
ret
pop
mov
sbb
js
int
iret
cmp
stos
aas
fsubr
mov
fwait
daa
or
push
and
lock
sbb
mov
lea
or
and
push
push
cmp
and
cmp
xchg
add
xor
push
xor
lock
test
mov
adc
add
adc
jo
mov
push
add
fisttp
fadd
xchg
cmp
or
jo
or
aas
mov
or
into
cmp
ret
add
les
dec
nop
push
or
jl
test
pop
(bad)
out
inc
in
or
das
lds
and
dec
fst
popa
mov
(bad)
std
in
lods
dec
inc
inc
mov
push
test
shr
inc
add
in
mov
sub
push
js
add
scas
adc
into
inc
xor
and
cmp
cs
shr
mov
repz
int
(bad)
pusha
icebp
add
adc
add
and
outs
or
popf
scas
inc
inc
cmp
dec
mov
add
pusha
mov
test
ror
cmp
pusha
xor
mov
push
cmp
dec
cwde
ret
add
push
hlt
xor
adc
push
js
rcl
mov
or
mov
adc
das
lock
test
pop
add
add
cmp
add
push
pop
jl
add
sub
clc
ror
pop
inc
add
pusha
or
pusha
add
push
push
or
or
add
xor
sar
or
sbb
(bad)
cld
inc
and
loop
jl
push
lods
adc
add
or
popa
movhps
add
add
xor
mov
or
sub
and
inc
sbb
cld
xchg
add
sbb
inc
or
or
push
inc
in
pop
add
add
popa
xor
cmp
add
repnz
sbb
and
adc
rcr
add
and
pop
dec
push
cmp
cmp
pop
inc
mov
inc
pusha
les
xor
or
add
lock
add
ror
mov
or
adc
sbb
loopne
add
mov
pop
xchg
adc
push
add
sub
jl
add
or
fsub
aad
inc
or
ror
sub
cmp
dec
ds
xrelease
mov
cmp
cmp
ror
or
add
mov
adc
loope
cmp
mov
clc
in
xchg
add
test
or
clc
xchg
retf
dec
pop
add
adc
add
push
or
js
push
mul
add
rol
push
mov
adc
mov
or
add
cmp
les
adc
cmp
mov
andps
inc
mov
sub
popa
or
add
add
add
or
ret
or
cmp
(bad)
add
lock
xchg
jb
lock
pop
adc
inc
pop
fwait
js
pop
rcl
inc
enter
and
push
adc
and
rol
sbb
cmp
inc
push
mov
cmp
xchg
mov
xor
push
mov
xor
xchg
(bad)
push
mov
call
les
call
jmp
mov
or
adc
or
inc
cmp
in
ror
jo
inc
mov
sbb
and
out
mov
test
xor
adc
pop
inc
sub
pop
xor
add
pop
cmp
sub
or
or
mov
sub
sbb
push
ret
popa
or
xor
add
add
cmp
sub
mov
jp
and
ja
xchg
add
loopne
and
adc
add
clc
mov
add
push
or
add
adc
inc
or
clc
fadd
test
inc
sub
into
ret
add
mov
pop
rol
adc
hlt
loope
add
push
add
popa
call
add
movs
inc
or
popa
and
and
ret
push
and
mov
adc
inc
lock
loopne
cmp
or
jb
xor
inc
adc
push
add
xchg
add
inc
mov
sbb
imul
add
ss
sbb
mov
mov
adc
adc
xor
inc
mov
add
cdq
add
inc
cmp
or
sbb
pushf
jecxz
out
clc
adc
nop
les
or
in
js
popf
(bad)
xchg
push
cmp
pusha
test
sbb
or
icebp
xchg
stc
xchg
(bad)
ror
sbb
fucomi
push
mov
popa
or
lods
dec
leave
je
pusha
pop
sbb
movs
or
add
rol
aad
or
and
inc
sub
mov
mov
scas
sbb
and
or
sub
xchg
cmp
pop
mov
pop
movs
cmp
push
fadd
adc
add
cmp
jecxz
jle
dec
sbb
xchg
ins
add
popa
fadd
int3
(bad)
scas
fucomip
test
sub
jo
sub
ror
or
push
jbe
mov
xor
or
jne
cmp
adc
sbb
sbb
sbb
add
add
mov
add
mov
xchg
or
sbb
inc
rcr
xor
adc
add
add
outs
inc
or
push
test
adc
add
and
add
or
inc
sub
add
add
cmp
add
inc
std
or
mov
rol
mov
inc
adc
mov
and
inc
or
sbb
mov
cmp
dec
xchg
xchg
xor
(bad)
(bad)
add
or
iret
or
push
inc
mov
pop
je
or
repz
xchg
mov
add
ins
jmp
ret
xor
(bad)
pushf
shl
sub
gs
mov
xchg
in
fdiv
test
push
sub
jl
dec
dec
xchg
and
xchg
adc
rol
or
add
aad
gs
and
ja
(bad)
loope
(bad)
mov
in
sub
or
sbb
sub
jo
mov
dec
sbb
pop
jecxz
mov
mov
add
add
mov
or
shl
jmp
jns
pop
add
or
cmp
std
fs
jb
test
mov
mov
push
sbb
and
cmp
mov
mov
sbb
and
test
addr16
add
les
xor
and
inc
push
cmp
xor
and
and
add
push
lds
inc
mov
cmovl
sub
and
pop
scas
push
jno
pop
ins
and
push
or
add
add
pop
or
push
aaa
ins
jb
int
fnsave
pusha
daa
es
ds
les
xor
xchg
test
pop
mov
dec
aas
std
clc
arpl
mov
aas
outs
jb
movs
aaa
loopne
push
ret
cmps
push
and
ret
test
cmps
dec
cdq
addr16
ret
cmp
jmp
fcmove
pushf
cwde
push
mov
dec
mov
ret
inc
dec
test
sub
pop
xrelease
jecxz
ret
test
mov
sub
inc
fisttp
shl
add
enter
mov
jno
pop
jecxz
mov
mov
mov
and
movs
inc
sub
jae
aaa
mov
jecxz
adc
in
or
cmp
add
punpcklbw
(bad)
or
imul
mov
mov
add
and
imul
inc
mov
lea
or
jmp
mov
cmp
xchg
ret
or
sub
mov
mov
lods
fdiv
jns
sub
xchg
sbb
ror
(bad)
sbb
jmp
clc
jmp
add
hlt
add
inc
or
pop
movs
add
xchg
call
out
aam
jb
add
leave
(bad)
leave
or
add
ins
mov
xor
sub
push
stc
mov
clc
fsub
int
fndisi(8087
pop
jp
pop
xchg
inc
nop
xor
mov
sbb
loope
cmp
cmp
mov
and
push
mov
sbb
inc
adc
cmp
add
add
leave
cmp
fidivr
xchg
(bad)
stc
or
shl
in
rol
jo
pop
cmp
out
jl
inc
add
mov
add
xor
test
leave
and
sub
cmp
sub
cmp
add
xor
adc
sub
xor
add
sbb
scas
inc
in
movs
and
test
cld
mov
cmp
les
sbb
mov
dec
push
and
test
xchg
scas
data16
pusha
pop
cmp
nop
popa
add
inc
and
test
mov
or
les
jno
push
xchg
ror
and
cmp
loope
xchg
mov
(bad)
call
test
mov
shl
push
add
test
push
test
mov
add
or
cwde
add
mov
(bad)
test
and
add
mov
movs
and
add
add
inc
lea
mov
and
add
daa
rol
adc
pop
js
jl
rol
or
mov
xor
shl
mov
add
xchg
aaa
inc
hlt
add
and
mov
mov
mov
or
pusha
add
loop
inc
add
sbb
inc
and
mov
or
pop
les
andnps
or
test
mov
push
addr16
pusha
add
rol
sbb
jmp
or
or
inc
ins
dec
mov
adc
js
pop
mov
jmp
xor
add
dec
and
ret
aam
xor
add
ror
shl
add
push
add
push
mov
cmp
add
adc
sbb
push
or
cmp
les
xlat
mov
or
ret
mov
push
les
add
push
xor
push
outs
cmp
fcomp
add
icebp
pop
adc
add
dec
and
test
sbb
add
les
adc
call
bound
mov
or
mov
loope
push
loopne
mov
inc
adc
dec
add
jge
add
inc
push
jg
add
pop
ror
dec
inc
sar
mov
lea
loopne
push
mov
or
je
add
and
inc
aam
pop
or
inc
xor
or
add
mov
and
test
(bad)
clc
mov
or
pop
or
cmp
or
xchg
mov
cmps
mov
adc
enter
mov
inc
js
pop
mov
jnp
add
add
sbb
inc
pop
add
cmp
xor
sbb
test
and
push
xor
adc
cmp
add
imul
cs
pop
or
add
add
push
add
pop
push
push
add
pop
mov
sbb
add
sub
lock
fadd
or
(bad)
or
shl
loope
test
imul
das
loopne
cmps
mov
and
ror
call
mov
and
mov
adc
ins
mov
and
lds
dec
ret
sbb
add
push
sbb
sub
dec
out
inc
add
mov
mov
test
sbb
inc
add
cmp
add
pop
xor
lock
pusha
loopne
scas
mov
cmp
hlt
lods
xor
inc
pop
jb
fild
lock
pop
loop
push
je
or
inc
or
loopne
aad
add
(bad)
out
pop
add
xor
and
or
pusha
les
mov
ret
and
ret
sbb
xor
push
and
adc
cli
or
or
pusha
mov
dec
mov
mov
sbb
xchg
test
js
push
mov
xchg
push
das
lods
inc
push
mov
jmp
add
mov
aad
xor
pushf
and
mov
mov
push
add
xchg
clc
(bad)
or
adc
push
add
stos
aaa
nop
outs
sub
popa
add
inc
add
adc
sub
sub
or
gs
adc
add
xor
pop
test
or
or
(bad)
xor
(bad)
cmp
sbb
pusha
add
mov
repz
push
mov
ss
adc
inc
push
inc
mov
adc
ror
push
mov
and
add
or
inc
sub
add
add
cmp
add
inc
std
or
mov
rol
mov
ret
xchg
and
cwde
pusha
retf
xchg
and
fwait
enter
or
pushf
lock
in
ins
sbb
or
inc
pop
mov
adc
cmp
and
dec
int3
cwde
jo
fnstcw
mov
addr16
dec
inc
or
mov
xchg
and
xor
xor
les
stos
jns
fst
and
dec
xor
sub
sbb
pop
and
add
mov
les
cdq
xor
push
push
adc
enter
xchg
xchg
and
cmp
and
enter
xor
jge
push
or
retf
shl
ror
mov
add
and
cmp
rol
add
test
pop
and
sbb
jecxz
xchg
push
leave
pop
cmp
dec
ds
pushf
dec
jg
je
icebp
and
mov
inc
mov
cmp
daa
sbb
mov
cvtps2pd
jo
lds
push
nop
out
adc
adc
and
into
add
nop
repz
xchg
or
pop
add
(bad)
daa
adc
push
pop
rcr
jbe
test
push
adc
loopne
push
dec
cmp
inc
push
push
(bad)
loopne
add
inc
mov
inc
or
or
test
lds
push
cmp
inc
test
xchg
pop
outs
cdq
movs
aaa
cmp
call
ror
sbb
and
adc
cmp
rcr
pop
scas
add
push
adc
lock
fdiv
aaa
jl
leave
daa
sahf
pop
and
pavgb
lds
ds
sbb
or
push
fisttp
stos
jmp
out
loop
jns
sbb
je
pop
sub
add
push
mov
call
push
lods
call
push
adc
movs
mov
pop
xlat
pop
repz
cmp
outs
push
test
(bad)
imul
inc
(bad)
aad
mov
int
fwait
imul
aas
pop
jno
inc
test
adc
stos
inc
sar
add
pop
dec
adc
or
mov
cs
jmp
add
push
(bad)
lock
add
pushf
sbb
out
or
or
mov
cwde
adc
inc
fs
imul
or
or
nop
lods
(bad)
pusha
mov
les
add
arpl
add
in
xchg
in
(bad)
pop
mov
popf
mov
mov
sub
dec
mov
cmova
and
mov
dec
test
or
push
clc
or
lods
scas
out
adc
sbb
nop
and
mov
std
add
xlat
adc
pusha
inc
sbb
adc
jecxz
adc
adc
add
idiv
push
pop
adc
sub
push
movs
loopne
sbb
int3
fsubr
cmp
pusha
xchg
ret
mov
add
inc
dec
xor
clc
bnd
fidiv
stos
cmp
cmp
add
add
arpl
mov
aaa
sub
and
add
sub
pop
sbb
repnz
mov
mov
mov
nop
inc
(bad)
or
daa
adc
add
sbb
repz
xor
pop
xor
add
fs
xor
mov
mov
xor
or
inc
add
jno
xor
adc
inc
lock
add
dec
or
adc
sbb
fld
adc
mov
add
cwde
add
xor
das
push
mov
xchg
mov
pusha
add
dec
pop
and
nop
push
push
popa
or
loopne
push
add
dec
mov
inc
int3
adc
xor
shl
adc
loopne
add
andps
or
(bad)
add
xor
popa
push
push
cmp
sub
inc
and
retf
push
(bad)
js
cmp
mov
sub
inc
dec
fistp
xchg
jo
or
into
push
add
xchg
loopne
mov
mov
outs
pushf
inc
sbb
mov
setb
sbb
rol
pushf
add
clc
mov
add
aas
stos
inc
add
ret
adc
jo
push
cld
ror
jle
add
aaa
out
dec
xor
movs
pop
mov
popa
mov
push
mov
add
call
(bad)
or
adc
pop
rol
outs
mov
aam
mov
sbb
pop
push
and
push
sub
das
fsub
pop
dec
mov
pop
fsub
pop
(bad)
cwde
les
add
mov
push
inc
push
fdiv
push
cmp
test
jae
or
mov
add
mov
xchg
cld
jno
mov
or
mov
or
inc
add
lock
or
aam
add
mov
call
push
sub
add
rol
fadd
adc
push
pop
clc
cmp
loopne
pop
add
jae
push
test
jl
mov
mov
sbb
rol
push
mov
das
jle
test
mov
fidiv
mov
or
mov
cmp
mov
or
lock
and
loope
and
inc
sbb
adc
or
adc
pop
mov
and
sub
pusha
push
pop
or
push
test
mov
and
cdq
xor
add
nop
inc
add
inc
push
cmp
sbb
mov
inc
mov
sbb
in
mov
inc
sub
nop
pop
fnstsw
or
or
or
or
cmp
pop
aad
sub
jge
test
or
sbb
ror
lock
sub
adc
or
mov
fistp
mov
fs
loope
add
aad
cs
mov
xchg
inc
cmp
inc
cmp
inc
sub
jo
add
mov
adc
push
scas
pop
jp
pop
add
and
xlat
push
inc
jne
add
call
add
inc
and
sbb
pop
add
mov
and
outs
add
inc
or
adc
call
jle
inc
sub
shl
adc
or
stos
mov
loopne
sub
lahf
aas
inc
jo
sbb
fs
daa
pusha
ret
or
inc
shl
push
inc
ins
inc
jae
pop
push
rol
pop
and
push
nop
aaa
mov
inc
clc
les
adc
test
xchg
pop
add
dec
sbb
popf
out
xor
daa
jo
test
inc
push
push
enter
sbb
pop
popf
into
sbb
add
outs
call
enter
or
test
inc
rol
jne
pusha
add
mov
adc
mov
mov
popf
sub
sbb
jo
mov
inc
or
call
ins
mov
inc
shl
or
or
pop
mov
idiv
out
and
cs
bound
test
add
adc
test
fs
scas
dec
mov
add
in
mov
in
pop
or
sub
xor
lock
enter
rol
jl
or
into
int3
pop
inc
mov
test
add
mov
add
mov
or
add
(bad)
dec
adc
adc
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
inc
test
loope
ret
mov
or
call
xchg
rcr
jp
jmp
adc
sbb
sub
pop
pop
xor
bound
mov
push
mov
ds
xor
(bad)
movs
dec
loop
enter
mov
xchg
mov
mov
jecxz
adc
inc
cmp
add
js
out
sbb
dec
jno
mov
mov
rol
inc
or
ds
add
add
arpl
fistp
sbb
test
pop
pop
lods
or
gs
cmp
inc
and
adc
icebp
fcmovnbe
dec
sbb
add
popf
mov
loop
enter
push
leave
lods
gs
cmp
test
or
cld
inc
retf
jge
cmp
mov
mov
outs
test
xor
dec
leave
inc
xchg
mov
add
cmp
or
or
(bad)
pop
pop
loop
imul
(bad)
jb
inc
inc
inc
pop
pop
mov
inc
pusha
retf
jae
in
dec
add
cld
add
test
adc
cmp
cmp
push
sbb
inc
js
and
cmp
push
adc
xchg
pushf
cmp
add
aam
arpl
add
or
xchg
test
sbb
jge
add
and
scas
lods
xchg
ret
pop
push
jo
mov
loop
arpl
xchg
push
mov
cmp
xor
loopne
jp
push
mov
dec
test
mov
and
into
aaa
jecxz
ror
js
jns
aas
jbe
jmp
or
sub
mov
mov
xor
cs
cmp
push
adc
cdq
out
cwde
data16
inc
adc
enter
inc
js
push
dec
sbb
dec
sbb
js
mov
call
or
(bad)
push
xor
rcl
sbb
adc
push
sahf
call
cmp
rol
mov
rcl
jbe
jnp
mov
cli
sbb
inc
add
push
fcomip
add
sahf
add
test
inc
jge
mov
inc
dec
and
(bad)
into
cmp
es
inc
fisttp
and
pop
add
xchg
aam
and
mul
adc
sub
loope
adc
adc
rol
inc
in
dec
aaa
adc
sub
inc
pop
mov
sub
test
add
stos
mov
sub
add
clc
push
sub
jp
adc
inc
sbb
add
inc
jno
inc
cli
pop
pushf
mov
xchg
cli
mov
in
cmps
icebp
cld
pusha
imul
pusha
aam
push
(bad)
xchg
push
or
aaa
outs
shl
mov
fmul
ror
mov
add
pushf
loope
xor
mov
cld
(bad)
jmp
ficomp
sbb
nop
add
push
cmp
dec
or
scas
pop
retf
or
add
data16
or
out
call
cmp
xchg
or
xor
adc
lock
aas
xchg
mov
rcr
or
ror
push
aad
xor
adc
or
lods
call
out
mov
jno
inc
xor
cmc
ret
dec
adc
or
add
sar
call
jmp
inc
nop
cmps
fnsave
call
xor
sbb
inc
adc
add
mov
xchg
sbb
call
or
and
add
or
and
pop
sbb
add
js
inc
inc
or
jl
gs
lock
add
mov
add
jecxz
cmps
push
push
xor
push
nop
xchg
mov
inc
es
cmp
and
xor
inc
aaa
cld
and
push
iret
pop
adc
add
inc
loopne
addr16
xchg
push
ror
adc
push
mov
mov
(bad)
pusha
ror
mov
push
jo
add
sub
das
mov
or
jns
add
lock
call
(bad)
push
mov
ins
or
mov
inc
jmp
add
fld
dec
inc
inc
sbb
fadd
cmp
or
xor
add
xchg
nop
and
adc
mov
test
js
adc
sbb
jl
xor
dec
adc
mov
cmp
lock
jae
inc
push
pop
inc
sbb
xchg
push
mov
inc
mov
daa
in
or
lock
sub
add
pop
and
je
inc
lock
test
push
movs
cmp
imul
pop
(bad)
or
or
mov
pop
aaa
cld
loope
arpl
xchg
pushf
dec
and
ror
add
lock
icebp
mov
inc
loop
adc
cmp
cmp
jo
inc
or
mov
add
mov
pop
icebp
mov
xchg
loope
cdq
pop
push
xor
pop
enter
mov
cmp
mov
add
add
or
xchg
call
add
or
test
aad
ds
add
adc
or
das
push
lock
mov
fadd
(bad)
adc
pusha
add
mov
or
lock
pop
dec
inc
pop
adc
loopne
fwait
mov
mov
adc
pop
not
add
or
mov
or
adc
adc
dec
adc
dec
jg
dec
loopne
mov
add
nop
mov
sbb
cwde
rcr
mov
pop
or
add
xor
loopne
xchg
frstor
ret
loopne
inc
fs
test
sbb
push
icebp
add
out
or
sub
or
(bad)
(bad)
dec
stos
sub
xor
lds
mov
push
cwde
add
clc
jecxz
adc
ror
xor
aas
cmp
xchg
mov
inc
mov
push
rol
aas
push
test
xor
std
mov
adc
rol
sbb
sbb
les
cmp
inc
and
push
adc
loopne
inc
jo
mov
(bad)
jns
and
or
xor
shl
add
add
inc
push
adc
rol
sbb
cmps
div
xor
pop
mov
and
in
add
retf
inc
cmp
ja
add
push
xchg
ins
sub
cdq
xor
inc
mov
push
mov
sbb
cli
add
test
or
or
or
push
cli
or
loopne
xor
inc
mov
arpl
sysenter
shl
or
dec
call
and
pop
mov
dec
mov
adc
sbb
ja
repnz
and
jle
sbb
mov
add
pushf
mov
mov
out
ins
inc
inc
push
add
xchg
add
nop
mov
xchg
movs
sbb
inc
add
ins
(bad)
into
dec
jmp
add
rol
sbb
or
loop
cmps
inc
add
and
and
pop
and
int3
out
xor
add
xchg
add
dec
stos
and
pusha
add
cmp
push
or
or
sbb
or
add
mov
(bad)
loop
mov
xor
adc
add
sbb
or
sbb
or
add
pop
and
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
outs
call
dec
xor
fwait
inc
or
cld
mov
or
jb
les
inc
jo
mov
inc
sub
xor
push
add
dec
sub
and
test
mov
xor
shl
sub
call
loopne
cmp
iret
add
mov
cmp
js
sar
or
inc
push
(bad)
fsub
call
cmp
fs
add
inc
cwde
ret
pusha
int3
mov
enter
nop
xor
test
imul
rcl
rol
xor
or
in
(bad)
cld
adc
repnz
sub
xor
imul
inc
mov
pop
mov
sub
push
inc
rcr
retf
and
mov
inc
out
inc
cmp
dec
adc
jg
fs
(bad)
std
lods
cmc
in
iret
jg
mov
pusha
or
(bad)
and
cmp
js
ds
add
inc
jo
sub
mov
mov
add
or
lea
fcom
and
rol
pop
or
int
fst
inc
nop
aaa
add
nop
add
scas
mov
cli
and
adc
sbb
iret
xchg
mov
or
add
dec
das
add
inc
mov
add
dec
ja
mov
add
or
in
or
movs
cmp
sub
and
xor
pop
shl
pop
fisttp
and
cwde
or
popf
ja
aas
adc
xor
pop
or
dec
int
adc
popf
add
add
pop
(bad)
in
mov
xchg
inc
nop
cmp
call
cwde
jp
sub
das
mov
dec
nop
sbb
jno
movs
mov
push
and
lods
fcomp
inc
xor
mov
movs
iret
push
sub
and
aas
mov
pop
xor
dec
jge
xor
dec
jb
adc
scas
adc
pop
cli
add
sbb
popa
enter
dec
sub
test
push
push
cwde
cmp
xor
std
pop
sub
add
pusha
repnz
push
and
cmp
test
nop
mov
pop
icebp
or
or
jno
xchg
lds
pop
fs
inc
cwde
add
xor
inc
ss
push
mov
inc
cvtss2si
hlt
(bad)
ss
adc
xlat
or
scas
mov
cmp
popa
es
xor
aas
sub
add
call
hlt
lea
jno
cmp
(bad)
pop
or
dec
test
or
addr16
xchg
mov
and
add
pop
push
inc
les
call
inc
inc
stos
fadd
add
leave
xor
fdivr
xor
lds
adc
test
push
jmp
aas
aas
mov
add
test
jo
in
sub
aas
mov
xor
add
add
sub
add
pop
in
pusha
loope
(bad)
call
pusha
jo
cmp
in
adc
xchg
push
aam
inc
ss
or
pop
sbb
and
sbb
mov
clc
jae
push
(bad)
nop
inc
push
or
loopne
iret
cmp
pop
aam
mov
sahf
sbb
lds
add
mov
ret
and
aas
and
jbe
inc
and
inc
push
push
jmp
inc
pushf
loop
xchg
mov
mov
sbb
pusha
pop
sbb
add
jno
std
and
and
push
add
mov
or
lds
xchg
add
rol
test
cmp
or
inc
adc
dec
inc
add
mov
push
test
add
and
mov
mov
popa
ret
push
xchg
inc
or
add
adc
sub
and
jge
rcl
and
lods
test
cmp
jae
push
je
and
dec
inc
adc
add
or
ss
adc
test
add
bound
sub
lock
ret
xchg
sbb
dec
inc
mov
test
mov
loop
jg
pusha
sbb
mov
add
or
pop
xor
mov
push
lea
mov
and
and
adc
inc
in
add
pop
mov
or
adc
aas
out
sbb
mov
add
pusha
add
inc
or
sbb
inc
xor
add
cmp
(bad)
loope
jg
rcr
dec
loopne
aas
push
mov
mov
push
add
push
cmp
pusha
jno
push
xchg
cs
lock
ss
and
lock
dec
add
inc
sbb
lar
add
xor
push
sub
push
popa
xor
pop
test
push
push
hlt
or
cld
inc
mov
or
(bad)
cmps
push
jmp
(bad)
clc
xor
or
inc
xor
sub
add
cmp
cmp
mov
or
add
jbe
ss
dec
and
and
pushf
and
ja
add
push
mov
(bad)
add
add
mov
add
inc
and
std
(bad)
lock
int3
and
or
popa
xchg
ror
or
push
push
push
push
sub
or
adc
fiadd
fwait
and
mov
sbb
lds
and
mov
test
sbb
and
je
aad
fs
cmp
sbb
sti
adc
sbb
cmp
and
inc
sub
dec
rcl
push
mov
wrmsr
add
das
sbb
add
xor
adc
adc
lock
mov
xor
xchg
cld
adc
or
mov
push
adc
xchg
cmp
add
adc
lds
or
in
daa
popa
xchg
xor
and
or
repnz
mov
dec
inc
add
and
add
or
inc
sub
add
add
or
add
or
mov
inc
jae
adc
in
ss
ret
adc
cmp
lahf
ret
mov
ret
lods
adc
push
push
ror
mov
push
or
hlt
lock
mov
ss
icebp
jo
add
and
repnz
popa
add
add
inc
je
out
mov
inc
call
jae
sbb
adc
xchg
arpl
mov
mov
cmp
mov
aam
and
std
cld
cmc
sub
add
push
dec
sbb
lock
int
push
je
cdq
mov
cmps
cmp
js
out
inc
push
outs
xchg
std
popf
leave
jecxz
pop
lea
jbe
xrelease
mov
jecxz
or
dec
dec
add
inc
push
xor
sbb
(bad)
div
add
or
pop
or
jae
and
adc
cli
push
dec
push
loopne
fwait
adc
movs
les
or
call
jno
mov
es
push
verw
add
dec
std
adc
xor
call
shl
push
adc
or
adc
adc
and
xchg
sbb
add
push
mov
pop
jne
adc
aas
mov
or
inc
xor
mov
clc
repz
aad
repz
adc
les
mov
pop
add
mov
adc
add
lds
add
jb
xor
jo
and
inc
xor
adc
or
lds
pop
les
or
adc
and
xor
inc
pop
jb
xchg
sbb
dec
adc
adc
add
or
inc
sub
add
add
or
add
or
mov
inc
je
adc
sub
outs
mov
mov
pop
xchg
jg
sub
hlt
out
loopne
inc
sbb
jb
cmp
inc
(bad)
and
rcr
adc
fcom
cld
adc
scas
fild
or
daa
bound
jle
jge
and
nop
mov
popf
cmp
setge
lahf
push
cdq
scas
sbb
lds
cmp
push
imul
mov
cld
cmp
call
clc
sbb
das
sub
stc
das
fmul
jg
push
inc
add
jmp
mov
cmp
inc
or
add
jno
mov
pop
pop
(bad)
ror
inc
call
stos
nop
and
es
or
icebp
retf
jmp
cmp
push
xchg
jecxz
or
dec
push
fnstenv
mov
push
push
imul
push
jg
inc
fld
inc
mov
inc
js
test
sbb
or
xor
clc
repz
dec
pop
inc
mov
pop
or
adc
ret
or
or
lea
in
cmp
dec
inc
cmp
loopne
add
inc
and
fidiv
jecxz
sbb
ins
xchg
ror
and
in
push
push
cmp
out
rol
sub
lahf
or
cmp
xor
rol
xor
bound
add
rol
cmp
inc
ret
inc
adc
inc
inc
ret
adc
int3
aas
push
mov
or
inc
push
inc
cmp
adc
add
sbb
adc
fild
jo
mov
add
xor
xor
xchg
hlt
sbb
push
fbstp
adc
int
jmp
aad
xchg
dec
add
stc
ret
sbb
stos
loope
inc
inc
jmp
push
push
or
ins
mov
push
or
int
ins
mov
add
xchg
test
xor
clc
add
cmp
dec
sub
and
enter
add
out
fldcw
test
in
sti
getsec
push
or
mov
cs
inc
push
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
aas
jg
adc
adc
out
pop
mov
pop
push
sbb
clc
aaa
and
jle
pop
mov
mov
mov
inc
dec
sub
or
inc
or
push
adc
and
push
in
bound
xchg
add
std
mov
inc
test
shl
stos
adc
jle
cli
cdq
repz
loop
lods
pop
inc
cdq
test
clc
inc
mov
sbb
outs
wrmsr
pushf
adc
das
(bad)
cmps
mov
rcl
dec
leave
or
and
add
jge
fwait
loop
push
mov
sub
sbb
dec
inc
sti
test
outs
icebp
inc
sbb
rcr
sbb
ror
push
int
add
add
xchg
push
xlat
or
test
mov
es
dec
adc
rol
push
mov
repnz
popf
pop
aaa
xchg
mov
or
xor
loop
jo
xor
add
stos
adc
mov
dec
xchg
(bad)
loopne
xchg
test
add
add
adc
cwde
js
popf
add
lods
adc
push
ds
clc
push
adc
aas
out
xlat
pop
or
sbb
mov
xchg
repz
inc
pop
adc
sbb
inc
add
dec
and
adc
shl
iret
sub
rol
jge
nop
adc
mov
sub
lock
pop
mov
mov
inc
pop
ins
and
arpl
call
and
shl
and
ret
ins
arpl
push
pop
push
sub
inc
push
mov
leave
in
add
(bad)
push
rol
icebp
popf
sub
inc
or
mov
into
xchg
push
or
adc
shr
daa
inc
(bad)
sbb
call
mov
xor
ror
mov
add
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
inc
jae
adc
in
ss
ret
adc
cmp
lahf
ret
mov
ret
lods
adc
push
push
ror
mov
push
or
hlt
lock
mov
ss
icebp
jo
add
and
repnz
popa
add
add
inc
je
out
mov
inc
call
jae
sbb
adc
xchg
arpl
mov
mov
cmp
mov
aam
and
std
cld
cmc
sub
add
push
dec
sbb
lock
int
push
je
cdq
mov
cmps
cmp
js
out
inc
push
outs
xchg
std
popf
leave
jecxz
pop
lea
jbe
xrelease
mov
jecxz
or
dec
dec
add
inc
push
xor
sbb
(bad)
div
add
or
pop
or
jae
and
adc
cli
push
dec
push
loopne
fwait
adc
movs
les
or
call
jno
mov
es
push
verw
add
dec
std
adc
xor
call
shl
push
adc
or
adc
adc
and
xchg
sbb
add
push
mov
pop
jne
adc
aas
mov
or
inc
xor
mov
clc
repz
aad
repz
adc
les
mov
pop
add
mov
adc
add
lds
add
jb
xor
jo
and
inc
xor
adc
or
lds
pop
les
or
adc
and
xor
inc
pop
jb
xchg
sbb
dec
adc
adc
add
or
inc
sub
add
add
or
add
or
mov
inc
je
adc
dec
fsubr
mov
mov
and
hlt
out
loopne
inc
sbb
jb
cmp
inc
push
and
rcr
adc
fst
cld
adc
scas
fild
or
daa
bound
jle
jge
and
rcr
test
iret
lahf
or
inc
test
jmp
adc
add
mov
add
mov
es
sti
xchg
daa
sub
fistp
jle
pop
mov
mov
sti
adc
ret
sub
popa
or
sbb
add
xchg
adc
mov
arpl
shr
mov
shl
mov
popa
inc
cmp
(bad)
mov
sub
js
inc
pusha
rcl
and
mov
and
mov
inc
push
add
or
add
jmp
xchg
push
fld
dec
retf
div
aaa
dec
pop
mov
cwde
rol
inc
or
add
cmp
or
lahf
jl
cmp
xchg
nop
adc
add
repz
or
push
std
mov
push
aaa
pusha
aam
add
lea
loopne
add
clc
ret
dec
or
add
into
dec
jmp
mov
cmp
js
or
inc
or
push
js
xor
sub
jae
xor
inc
rol
sub
adc
push
xor
and
inc
addr16
inc
inc
pop
sub
add
xor
xor
xor
(bad)
or
add
fmul
dec
add
mov
call
adc
push
inc
add
cli
inc
inc
add
jo
push
add
inc
add
mov
movs
loop
ud0
add
das
cmp
(bad)
xor
fadd
shl
or
or
adc
into
aas
(bad)
or
fcom
sbb
push
push
rol
inc
sub
enter
sbb
sbb
adc
sbb
or
and
mov
or
rcr
sub
mov
out
mov
sub
add
add
stc
add
or
inc
sub
add
add
or
add
or
mov
aas
jg
adc
and
out
pop
cmp
add
cs
cwde
gs
xchg
mov
fild
mov
ret
aad
push
add
push
adc
retf
inc
adc
fdivr
fnstenv
(bad)
jge
cwde
push
push
add
std
mov
inc
test
(bad)
xchg
add
pusha
mov
repz
loop
lods
pop
inc
xchg
test
clc
inc
mov
sbb
outs
wrmsr
pushf
adc
das
(bad)
cmps
or
rcl
dec
leave
or
and
add
add
aad
and
call
adc
(bad)
jge
popa
out
mov
or
push
(bad)
sub
xchg
inc
lock
(bad)
aas
jo
out
push
mov
add
imul
mov
add
xor
nop
adc
mov
inc
test
cmp
xchg
mov
mov
jg
sub
cmp
ret
dec
mov
jge
sbb
sub
or
stos
cmp
out
jmp
push
and
aam
add
add
outs
iret
or
jnp
stc
and
inc
(bad)
js
dec
xor
jle
shl
pop
cmp
or
mov
push
inc
adc
adc
or
stc
and
adc
shl
or
pop
das
test
or
pop
push
mov
inc
pop
ins
and
arpl
call
and
shl
sbb
or
and
jns
jne
nop
lock
add
pop
jo
mov
mov
test
ret
(bad)
aas
cmp
adc
imul
inc
or
xor
aas
xor
mov
sbb
sbb
out
ds
add
mov
lea
and
movs
cwde
data16
test
les
bound
adc
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
cmps
popa
add
push
enter
sbb
and
(bad)
mov
and
out
mov
adc
movs
add
sub
loop
pusha
mov
pop
rcl
or
ins
xchg
dec
jae
xor
adc
add
xor
ret
push
dec
pop
mov
gs
sub
add
sbb
mov
shr
inc
xor
inc
(bad)
push
or
ret
repz
sbb
xor
push
cmps
aaa
lods
gs
sub
jp
xchg
loop
and
xor
add
ss
js
int3
call
jecxz
cdq
mov
jmp
int
aas
jnp
adc
or
pusha
jp
ins
rcr
xchg
repz
sub
push
xor
add
shr
arpl
jmp
(bad)
mov
add
cmovl
sbb
push
cmp
mov
dec
fldenv
adc
retf
jo
xchg
in
add
xchg
mov
or
adc
push
push
cmp
je
push
sub
and
sbb
dec
xchg
ins
jecxz
or
and
xchg
(bad)
pop
mov
mov
in
add
cmp
add
ret
cmovbe
push
xchg
sub
rol
push
fstp
scas
adc
cwde
ret
sbb
movs
and
movs
xchg
pop
(bad)
clc
arpl
adc
enter
dec
dec
or
in
jp
jo
add
mov
dec
aaa
std
hlt
jmp
fldenv
inc
push
shr
sub
inc
std
push
lea
int3
and
test
or
cmp
clc
repz
mov
in
repz
xor
and
xchg
aas
inc
call
push
mov
addr16
sbb
aaa
cmp
fs
push
mov
sub
inc
aaa
mov
call
mov
pop
xor
and
xor
ins
inc
(bad)
sub
es
add
outs
cmp
into
jp
sub
jb
push
aas
test
or
ds
xor
adc
lahf
add
sub
shr
ror
xchg
rol
and
cmp
hlt
or
add
jmp
or
or
push
mov
(bad)
adc
add
and
sub
cmp
mov
int3
sub
push
add
getsec
and
nop
add
adc
mov
dec
nop
sbb
int
clc
aam
cmp
int
fdiv
scas
lahf
(bad)
ins
mov
sub
xchg
lock
sub
dec
add
xor
clc
add
cmp
stos
shl
sub
fidiv
push
call
loopne
add
into
sub
mov
retf
stos
sub
xchg
in
xchg
sbb
pusha
icebp
add
jmp
test
jae
xor
xor
inc
inc
mov
fsubr
stos
jecxz
stos
add
inc
lods
daa
loope
cmp
jl
clc
in
out
xchg
sar
add
(bad)
cs
mov
adc
enter
cmp
or
mov
xor
inc
(bad)
adc
push
pushf
adc
aaa
sbb
sub
pcmpeqb
sbb
aam
pop
aas
jne
adc
mov
mov
or
lea
mov
xor
loopne
push
dec
add
sub
loopne
pop
nop
mov
sbb
add
or
pop
inc
add
mov
push
jno
inc
sub
add
cmp
gs
rol
and
adc
xchg
enter
and
jo
adc
adc
(bad)
mov
(bad)
sbb
push
(bad)
clc
push
sbb
add
hlt
nop
push
dec
inc
sub
or
lahf
adc
or
mov
adc
in
sbb
add
js
mov
jmp
aas
mov
and
cdq
push
xchg
and
ret
xchg
sbb
jb
adc
xor
jo
and
and
scas
adc
shl
adc
cmp
jno
push
mov
loop
mov
test
sbb
loope
ds
xchg
add
inc
push
cmp
aad
arpl
rol
jg
inc
sbb
pop
inc
xor
inc
add
fdiv
inc
ja
leave
cmp
in
or
adc
cmp
(bad)
or
ret
pop
mov
jo
add
cdq
fnstenv
dec
add
add
imul
xor
xchg
xlat
mov
loope
popa
sbb
mov
mov
aaa
pop
xchg
jo
sub
dec
and
mov
(bad)
lock
cmp
xor
loop
add
jno
push
arpl
xchg
jbe
mov
fs
inc
inc
sbb
es
add
lock
and
add
jo
jae
mov
inc
or
fs
or
adc
mov
add
dec
add
inc
in
add
cs
pop
adc
sub
mov
xor
or
xchg
add
clc
add
mov
add
adc
xor
push
add
push
sbb
adc
push
or
and
and
add
mov
aad
push
add
call
sub
sub
movs
cli
lea
hlt
and
sub
and
pop
sub
pop
in
mov
and
pushf
js
ucomiss
pop
test
add
or
xor
rol
ss
(bad)
rcl
or
(bad)
push
push
and
add
fabs
add
inc
js
push
fimul
pop
mov
mov
sbb
cmp
add
aam
add
mov
and
inc
ret
or
mov
xchg
mov
cmp
pusha
sub
cmp
aam
add
inc
mov
xor
or
fwait
aas
and
sub
pop
add
xchg
or
and
mov
xchg
(bad)
push
clc
mov
pop
or
or
inc
or
mov
stos
ror
or
pushf
loop
lahf
repnz
ror
jns
(bad)
call
push
push
add
cmp
xchg
push
adc
js
inc
pusha
inc
or
xor
sub
mov
rol
xchg
ins
loop
or
lock
mov
jmp
mov
and
fadd
iret
test
cvtdq2ps
add
js
add
inc
retf
push
xor
jecxz
adc
add
xchg
push
jmp
add
xchg
cmp
sub
add
inc
pop
dec
popa
mov
sub
adc
rcl
xor
cmp
jo
jmp
pop
sub
sub
adc
js
inc
(bad)
inc
add
mov
or
xor
cmps
ins
cmp
cmp
out
xor
cmps
cmp
adc
jmp
add
das
lock
cs
or
loopne
or
add
popf
adc
rol
or
jae
call
ror
pusha
sbb
test
sbb
xor
pop
cmp
push
(bad)
loopne
nop
mov
and
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
or
add
or
mov
rol
mov
retf
jo
shl
xor
mov
lahf
xchg
inc
rcr
xor
inc
jmp
pop
and
or
retf
jg
ins
jno
sbb
add
inc
(bad)
je
mov
daa
mov
mov
mov
cmp
xchg
pop
cmp
mov
adc
arpl
push
pop
adc
adc
js
ror
or
lods
arpl
or
stos
movs
icebp
mov
xor
and
inc
or
adc
jp
xor
push
push
jp
mov
loop
xchg
or
sub
out
fistp
sbb
xchg
pop
icebp
sub
sub
arpl
pop
inc
lock
imul
xor
ds
sbb
dec
xchg
pop
sbb
dec
(bad)
popa
dec
icebp
cmps
add
pop
push
pushf
jnp
call
leave
add
jae
jmp
xor
push
inc
push
arpl
ret
setbe
js
pop
mov
jo
mov
dec
pop
imul
nop
add
xchg
add
cmp
je
dec
aaa
or
clc
ror
aaa
cmp
sub
(bad)
cs
and
ss
sub
adc
dec
jp
lea
dec
xor
push
aaa
cs
(bad)
xchg
clc
test
ret
test
retf
(bad)
or
inc
push
sbb
mov
clc
add
cmps
or
dec
dec
adc
push
sub
sub
sbb
int3
push
sar
jo
cmps
adc
mov
pushf
or
add
add
mov
add
and
leave
aas
jp
push
aam
mov
fsubr
outs
jmp
mov
or
fimul
mov
lock
push
jmp
repnz
(bad)
cmp
xor
and
mov
cdq
lods
xchg
std
push
pop
sub
lds
xor
lock
aaa
add
sub
aas
(bad)
mov
and
call
aas
push
adc
xchg
loopne
enter
jmp
inc
mov
out
mov
mov
mov
dec
sub
mov
inc
int
icebp
rdtsc
(bad)
xchg
push
cmp
adc
pop
or
(bad)
sbb
cdq
push
sbb
adc
or
fsubr
cmps
call
hlt
mov
pop
add
out
inc
add
or
pop
movs
adc
fidiv
inc
add
test
test
test
dec
push
sbb
aas
jmp
and
mov
retf
shl
adc
dec
cmp
and
adc
retf
ss
(bad)
retf
retf
sbb
mov
dec
sub
inc
add
fldenv
pop
ss
fxch
sbb
and
out
inc
xchg
add
xor
add
mov
mov
push
or
adc
cmp
sbb
call
and
sub
(bad)
pop
fwait
sub
sbb
or
std
inc
cli
jmp
mov
xchg
adc
adc
or
das
push
push
push
and
push
(bad)
mov
adc
jae
aas
(bad)
cmp
mov
imul
mov
cmp
xchg
jb
xchg
or
test
sub
add
loope
cli
popa
mov
and
mov
jne
lahf
sbb
inc
mov
xchg
sbb
and
nop
inc
and
shl
les
pop
inc
sbb
int3
mov
(bad)
mov
and
arpl
lock
or
adc
or
or
sbb
inc
xor
add
jl
add
push
add
pop
call
sbb
ret
cs
xchg
mov
add
mov
adc
pop
mov
pop
jo
xchg
mov
or
sub
mov
mov
sub
add
mov
sbb
call
sbb
xchg
cmp
mov
add
lock
xor
sub
adc
xchg
jo
push
mov
or
add
xchg
xor
adc
add
adc
sbb
ret
test
or
rcl
jecxz
cmp
mov
jne
push
xchg
mov
pop
mov
mov
sub
jno
test
adc
rol
leave
test
push
dec
jle
dec
add
xchg
push
add
xchg
and
sub
and
out
adc
adc
add
lock
adc
adc
jmp
adc
(bad)
sub
pop
mov
and
xchg
rol
popa
and
lock
inc
stos
push
adc
sub
push
push
nop
jns
in
ret
adc
add
adc
pop
push
test
aas
sbb
or
xchg
xor
mov
add
dec
sub
adc
icebp
test
jecxz
mov
xor
and
adc
mov
int
aam
dec
out
clc
xchg
sbb
cmp
add
xor
bound
jl
stos
add
jmp
and
popa
test
(bad)
enter
add
and
mov
add
fsubr
cld
pop
xor
cmp
arpl
xchg
jle
ret
sbb
shr
jne
and
dec
push
mov
rcl
js
sbb
adc
pop
mov
mov
or
(bad)
fsub
les
loopne
fidiv
mov
mov
cdq
shl
xor
ins
and
ret
stos
pop
or
test
cwde
jo
add
pop
nop
dec
or
fisttp
add
jo
jle
adc
sub
bound
push
xor
and
mov
(bad)
adc
add
push
ret
add
nop
add
and
add
stc
add
or
inc
sub
add
add
add
or
add
or
mov
rol
das
mov
push
fldenv
push
xchg
adc
push
add
pop
sbb
inc
movs
mov
cld
and
adc
shl
cmp
daa
mov
cmp
mov
jo
aas
pop
sub
in
js
or
jmp
dec
daa
mov
and
sbb
adc
jno
out
rol
rcl
xor
xchg
outs
or
inc
daa
add
shl
push
dec
icebp
pop
and
mov
dec
inc
mov
lds
ret
xchg
cld
add
inc
sbb
mov
xchg
xchg
fidivr
enter
scas
xchg
cmp
shr
call
mov
add
arpl
sbb
add
add
mov
dec
or
sbb
shl
or
xor
pushf
movs
push
xchg
enter
in
add
nop
adc
loopne
add
pop
rcr
ins
repz
xor
in
ret
pop
bound
nop
aaa
loop
lock
cmp
xchg
jecxz
inc
xor
pop
shl
adc
xor
add
add
pop
test
cmp
push
js
aaa
xor
jecxz
cmp
or
ror
xor
test
mov
cmp
nop
adc
inc
in
(bad)
fist
add
mov
dec
aaa
std
push
stc
fidivr
push
dec
stc
dec
aaa
(bad)
sub
lea
adc
leave
aas
call
jecxz
xor
cmp
inc
add
jl
into
cmp
pop
test
inc
mov
add
xor
dec
adc
adc
add
xchg
push
dec
push
movs
pop
jle
sahf
add
aam
movaps
rcr
aad
rol
out
imul
jecxz
cmps
cwde
je
ret
adc
mov
mov
(bad)
cli
dec
mov
nop
and
call
loop
jae
aas
pusha
(bad)
or
ds
or
dec
mov
push
jmp
movs
fidivr
loopne
add
(bad)
jmp
es
sbb
add
shl
sub
es
jecxz
mov
push
imul
shr
test
mov
jo
mov
vmread
xchg
out
loopne
loopne
adc
inc
mov
sbb
test
shl
sub
loopne
cmp
inc
jb
ret
arpl
push
cli
loopne
rol
sub
mov
outs
mov
mov
xor
sub
dec
pusha
shl
das
cld
add
sbb
cs
shr
jmp
fldcw
fs
inc
(bad)
add
adc
push
jmp
(bad)
call
mov
inc
nop
sbb
pusha
icebp
add
pop
fcmovb
cmp
sub
add
inc
int3
add
je
dec
rol
mov
scas
ret
outs
nop
cmp
mov
mov
loopne
jne
inc
dec
clc
ret
into
or
stos
movs
pop
mov
out
mov
xor
xor
jg
out
aas
cmp
aam
or
or
lds
sub
jno
add
mov
inc
(bad)
fiadd
aas
jne
ror
add
lods
repnz
mov
add
sbb
or
add
or
mov
mov
ret
lock
jp
rcl
mov
in
int3
jo
gs
pusha
push
call
jno
sub
retf
call
add
mov
sub
lock
sub
add
jl
pop
mov
enter
add
add
dec
loope
add
pop
jmp
pushf
xchg
mov
add
pop
mov
int
movs
sbb
dec
add
aam
add
push
xchg
mov
sub
or
pop
test
loop
cmp
and
jo
sub
movs
mov
cmp
mov
and
lock
test
inc
cwde
cwde
xchg
adc
add
xchg
ret
test
dec
inc
add
enter
pop
gs
cmp
xor
ins
js
xchg
add
cmovl
movs
xchg
xor
aas
push
and
js
test
dec
push
adc
int3
stos
and
add
pop
enter
and
sub
adc
add
pushf
sub
adc
ror
int3
jg
inc
and
inc
sub
jl
and
cmc
(bad)
sbb
and
xor
add
sbb
repnz
inc
sub
les
jmp
cmp
or
and
cmp
in
inc
cmp
add
jecxz
ins
mov
aas
jb
add
or
rol
aas
and
mov
shl
call
mov
les
enter
or
sub
int3
cmp
mov
in
inc
mov
jo
jg
and
sbb
jmp
repnz
shl
mov
add
jbe
(bad)
lods
or
sbb
ror
mov
mov
pop
stos
inc
push
add
aam
lock
add
test
inc
xchg
call
inc
mov
jmp
xor
mov
mov
inc
add
mov
or
xor
retf
sbb
push
das
js
and
mov
push
lock
lods
jbe
enter
add
adc
adc
pop
mov
adc
icebp
ud2
ins
add
and
jo
loopne
sub
mov
mov
dec
and
adc
lock
pop
les
(bad)
ret
stos
fist
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
aaa
add
add
or
add
or
mov
rol
mov
retf
jo
shl
xor
xchg
fstp
(bad)
sbb
mov
icebp
cmp
inc
jmp
in
outs
popa
retf
test
adc
(bad)
push
xchg
jg
and
jmp
and
cmc
iret
(bad)
mov
sub
xchg
and
test
repz
push
shl
or
cmps
inc
mov
xor
test
inc
out
sub
jl
test
lock
dec
add
test
push
dec
push
xor
in
push
pushf
xor
inc
icebp
pop
aad
bound
sti
mov
xchg
add
adc
inc
inc
lea
add
or
inc
lock
dec
cmp
sbb
retf
push
setl
(bad)
out
(bad)
jg
rcl
jo
pusha
pop
adc
iret
sub
or
(bad)
cmp
and
sbb
(bad)
cmp
dec
add
mov
shl
jo
popf
push
sbb
test
add
int
ror
xor
or
nop
test
jbe
dec
aas
add
add
aas
or
push
sahf
imul
dec
and
or
jl
(bad)
fst
rol
adc
loop
xor
test
fdivp
je
jl
cld
and
inc
loope
adc
xor
(bad)
and
test
or
adc
mov
or
cmp
push
imul
es
rol
psubw
fstp
std
clc
arpl
adc
sub
mov
mov
mov
inc
xchg
push
shl
xchg
loopne
mov
inc
sub
and
or
pop
repnz
dec
xor
test
lods
mov
push
jmp
add
adc
xchg
ins
test
rcl
arpl
test
jb
push
xchg
cdq
cmp
test
rol
or
lods
ror
mov
loop
(bad)
mov
cli
ret
or
in
test
mov
inc
or
popa
add
push
mov
(bad)
mov
(bad)
mov
les
add
scas
pop
xchg
ret
int3
sbb
rol
sahf
adc
inc
aaa
in
push
ret
and
sub
jl
dec
push
sub
fdiv
add
mov
nop
add
or
and
adc
inc
(bad)
das
xor
fwait
adc
sub
jecxz
or
call
pop
cmp
sbb
adc
aas
dec
xchg
pusha
cmp
dec
pop
and
inc
or
pop
jo
ret
nop
ror
clc
xor
aam
adc
adc
xor
js
mov
lahf
adc
push
xchg
sbb
dec
add
push
push
shl
jl
iret
cmp
add
pop
push
and
sub
jecxz
adc
sub
ret
jmp
clc
inc
lods
(bad)
jmp
xor
out
xor
or
cld
repz
shl
mov
daa
data16
push
mov
aaa
fstp
rol
lea
iret
inc
adc
cdq
std
cli
sub
aaa
or
or
sahf
inc
jns
and
dec
leave
jle
add
in
add
and
sub
xor
jmp
in
dec
xchg
retf
scas
je
mov
aas
repnz
sbb
(bad)
mov
test
or
lea
inc
lds
aam
sbb
inc
sbb
test
inc
adc
and
mov
or
sbb
pushf
shr
mov
push
xchg
and
xchg
rol
ret
mov
pop
jb
mov
mov
jne
and
cmp
punpckldq
mov
and
inc
mov
inc
add
add
jmp
xchg
sbb
mov
aas
outs
sbb
or
enter
and
and
fs
adc
sub
dec
pusha
nop
jns
inc
sbb
jns
cs
(bad)
aaa
inc
test
ror
cld
inc
adc
dec
in
and
add
inc
leave
pop
and
add
lds
dec
adc
arpl
add
add
aas
or
xor
shl
lahf
jne
push
mov
les
and
push
sub
push
inc
in
cmp
lds
or
cld
ret
xchg
add
add
dec
xor
xor
cli
cld
inc
nop
sbb
mov
and
or
xchg
adc
inc
cmps
push
ret
adc
push
test
dec
inc
and
and
jb
or
jp
inc
adc
and
pop
adc
cmp
test
call
mov
and
add
lea
call
nop
cmp
add
or
les
adc
or
xor
es
and
ret
pop
adc
or
rcl
cmp
sbb
test
adc
push
mov
rcr
and
inc
or
cmp
nop
dec
dec
inc
add
and
add
push
add
add
add
add
add
add
or
mov
rol
mov
mov
add
imul
cmp
enter
or
test
pop
and
call
xchg
inc
push
jne
test
das
mov
cmp
or
test
jmp
xor
dec
jo
inc
lea
push
pushf
or
(bad)
sub
add
or
or
fst
cmp
lahf
add
cmp
inc
fisttp
mov
add
or
lods
(bad)
pop
add
cld
jae
and
lahf
or
jle
push
cld
jecxz
cwde
jg
rol
dec
push
sbb
push
idiv
cwde
sub
inc
popa
retf
enter
sbb
adc
clc
popa
sub
aas
outs
call
sbb
ins
fnstenv
pop
ret
adc
nop
or
(bad)
jmp
scas
pop
inc
outs
std
cld
cmc
jecxz
mov
cmps
ret
xchg
and
sub
add
daa
push
add
push
and
sub
fdiv
sbb
mov
shl
or
outs
xor
inc
aaa
inc
add
sub
add
and
mov
or
or
add
aad
push
sar
jo
mov
rol
outs
mov
mov
add
inc
dec
inc
punpckhwd
inc
mov
test
fs
add
test
mov
push
push
aaa
loop
add
jo
or
xchg
std
cwde
repz
fwait
add
adc
(bad)
cwde
js
daa
mov
adc
inc
pop
and
lock
aaa
out
repz
js
push
mov
sub
jnp
inc
jae
cmp
mov
or
xchg
inc
jp
push
cmp
lock
or
stos
xchg
xor
inc
int
icebp
rdtsc
(bad)
jae
and
in
and
pop
or
(bad)
sbb
sub
jae
or
test
push
or
(bad)
push
mov
pop
add
out
inc
shl
pusha
xchg
inc
add
js
rol
clc
add
add
pusha
icebp
(bad)
adc
xor
nop
cmp
sub
and
mov
xor
sub
mov
adc
dec
nop
icebp
iret
or
and
mov
inc
jecxz
sbb
mov
dec
sub
inc
jo
mov
or
mov
aaa
call
jo
add
popa
mov
jo
push
add
lds
adc
mul
inc
and
mov
xchg
push
and
stos
or
push
xchg
stos
adc
xor
jmp
adc
lock
add
fimul
or
das
and
and
jmp
fcomp
arpl
dec
int3
popa
clc
sbb
in
or
cmp
add
aaa
jecxz
sub
and
or
xchg
push
add
mov
jbe
mov
adc
add
mov
xor
inc
sbb
pop
test
dec
cmps
aaa
loopne
test
mov
sbb
sbb
(bad)
mov
inc
add
shl
dec
push
add
or
and
sub
lods
mov
jne
ror
sbb
jmp
sub
stc
pop
sub
cmps
cwde
stos
dec
xchg
mov
or
dec
add
push
sbb
and
enter
jo
adc
out
adc
xchg
xor
push
repnz
or
inc
and
sbb
cmp
adc
rol
sub
add
pop
adc
lds
sub
mov
add
inc
int3
sbb
jo
or
mov
and
test
inc
push
xchg
push
es
and
mov
mov
rol
add
call
mov
or
icebp
test
js
push
adc
les
mov
add
add
dec
add
inc
add
add
popa
xor
sbb
dec
add
mov
je
add
dec
inc
cmp
popa
cmp
cmp
idiv
add
fist
and
pop
cli
(bad)
lods
(bad)
push
adc
(bad)
lea
(bad)
cwde
mov
outs
ja
dec
fst
iret
mov
mov
scas
idiv
cwde
push
xor
and
or
jo
lea
mov
out
xchg
fldenv
shr
jmp
xor
lds
push
xor
hlt
jo
mov
js
into
mov
jbe
imul
push
sub
inc
jmp
mov
pop
xor
xchg
js
out
out
hlt
inc
(bad)
sti
fscale
ror
test
mov
and
pop
xor
and
mov
dec
jmp
retw
xchg
fwait
jp
xor
jmp
xor
cmps
movs
in
jmp
shl
test
stos
idiv
stc
mov
mov
js
js
in
ja
leave
lods
popf
std
fnstenv
xlat
int3
mov
or
movs
cwde
fldcw
test
sub
imul
(bad)
pushf
mov
jbe
int3
mov
jmp
xchg
mov
sub
mov
mov
out
enter
mov
cmp
imul
stos
(bad)
inc
iret
mov
out
sub
aaa
jmp
out
test
cmp
adc
adc
xchg
sub
imul
or
sub
mov
fiadd
ss
into
(bad)
shl
dec
jecxz
xor
test
mov
jb
push
in
out
out
mov
imul
retf
div
inc
sbb
jecxz
dec
mov
sahf
lock
in
fldenv
pop
pusha
call
outs
cli
mov
xlat
pop
xor
mov
jmp
into
ficom
out
push
addr16
dec
sub
xchg
imul
repz
sbb
dec
cmps
add
(bad)
call
mov
mov
dec
mov
(bad)
(bad)
dec
mov
push
and
out
into
jmp
(bad)
lahf
adc
mov
(bad)
mov
test
(bad)
push
(bad)
push
sub
into
mov
mov
(bad)
fmulp
push
out
inc
faddp
(bad)
dec
and
fidivr
div
ficomp
out
mov
not
mov
mov
test
mov
fidivr
(bad)
(bad)
call
mov
fmulp
out
mov
out
mov
test
mov
pushf
jge
mov
div
in
mov
ror
imul
iret
pop
sbb
cmc
ficomp
shl
xchg
rcr
out
pushf
inc
mov
mov
div
hlt
mov
push
mul
ret
aad
jecxz
xchg
dec
and
push
and
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
cmp
add
inc
std
or
mov
rol
mov
ret
xchg
and
push
or
daa
xchg
sbb
sbb
loope
pop
sbb
out
test
inc
test
jnp
mov
inc
fs
xor
xchg
into
xchg
nop
xchg
or
inc
xor
xor
movs
hlt
adc
add
movs
adc
add
push
and
push
outs
cmps
pushf
or
mov
add
jnp
mov
rcr
dec
aad
dec
inc
or
push
cmps
test
dec
add
add
cmp
and
inc
mov
sahf
cmp
mov
inc
movs
or
add
xor
(bad)
jl
dec
adc
movs
cmps
inc
xchg
cmp
adc
rol
cmp
jge
xor
mov
cmps
dec
jmp
int3
xor
loopne
jg
dec
enter
inc
gs
div
inc
or
data16
adc
data16
jns
loope
jl
push
cwde
mov
inc
les
inc
adc
push
push
mov
pusha
aas
movs
push
inc
ror
inc
add
je
sub
cmp
mov
ja
xor
mov
inc
and
xchg
mov
push
fimul
sbb
dec
nop
xor
in
jb
das
(bad)
loop
cmp
repz
bound
loop
xchg
sbb
ss
sti
lock
in
push
dec
push
and
sbb
push
mov
in
fwait
mov
int3
ds
or
sub
cmp
sbb
(bad)
inc
mov
ret
cmp
pop
sub
cs
test
leave
popf
lds
mov
jne
add
fs
retf
jmp
loopne
inc
and
fimul
(bad)
jl
dec
(bad)
aad
les
addr16
jmp
or
cmp
shr
scas
lds
or
stc
rol
push
push
jbe
dec
adc
(bad)
dec
sub
or
push
jmp
jo
add
call
js
push
add
dec
adc
add
adc
mov
outs
pushf
and
or
movs
mov
xor
ins
or
mov
das
idiv
stos
jmp
or
add
fimul
nop
dec
and
sbb
dec
(bad)
leave
or
xor
imul
pop
xor
inc
adc
adc
jbe
or
adc
dec
jno
mov
das
test
jae
push
or
inc
cmp
xor
(bad)
int3
aam
dec
or
mov
xor
adc
adc
sbb
dec
jae
xor
fdivr
push
or
ror
and
dec
add
inc
sub
pop
xor
mov
aam
outs
lods
jo
adc
push
scas
js
js
jl
and
leave
xor
jno
adc
lea
mov
mul
movs
mov
arpl
pop
es
inc
or
xor
les
cld
js
or
pop
or
jo
in
jge
and
jge
inc
rcl
xchg
dec
rep
mov
xchg
nop
sbb
pop
addr16
add
aam
inc
or
mov
sub
addr16
add
sub
mov
and
and
add
daa
js
dec
or
sbb
sub
loope
sbb
pusha
or
iret
je
pop
lds
movs
loopne
pop
mov
add
pop
rol
add
or
mov
ins
inc
clc
ret
adc
jmp
sbb
mov
loop
mov
call
lock
clc
push
or
mov
add
or
pushf
jno
xor
iret
adc
dec
fadd
es
lea
and
not
mov
cmp
mov
sti
fild
mov
sub
or
ja
mov
shl
or
mov
xor
out
scas
push
sbb
xlat
mov
es
jmp
cmp
inc
push
mov
jbe
and
push
add
out
scas
add
es
dec
dec
jbe
jp
sub
xor
loopne
or
adc
inc
push
nop
push
and
add
add
rcr
pop
mov
add
jl
das
mov
cs
lea
add
and
add
sub
jp
pop
xor
mov
xchg
scas
fsub
(bad)
pop
adc
enter
add
mov
gs
xor
or
push
loopne
sbb
xchg
add
xor
aad
add
sub
popf
xor
and
jp
push
adc
rcl
sub
daa
nop
or
push
or
push
sbb
push
or
pusha
pop
jge
add
or
pop
adc
inc
test
ins
xchg
and
inc
push
jb
sbb
add
cwde
movs
and
adc
and
cld
sub
mov
test
adc
or
jo
push
and
add
ror
sahf
jo
stos
lock
call
pop
cs
ror
call
test
cmp
push
mov
mov
enter
mov
pop
adc
call
mov
or
pop
int3
nop
lds
push
and
or
push
mov
adc
jb
or
xchg
mov
jo
sbb
or
pop
inc
frstor
arpl
mov
mov
and
adc
dec
pusha
pusha
add
lods
call
inc
inc
inc
mov
mov
xchg
mov
mov
xor
add
pushf
loopne
(bad)
fadd
cmp
push
xchg
rcr
test
sub
adc
les
mov
mov
cld
in
sub
fucomp
dec
add
push
loopne
push
loope
shl
ss
cld
mov
inc
xor
dec
pop
push
mov
test
push
popa
pop
jo
pop
fbld
daa
pop
add
test
dec
sbb
or
jnp
(bad)
(bad)
cmp
mov
mov
inc
mov
fsubr
push
pop
sub
sub
and
or
jge
add
push
xor
mov
jg
add
and
mov
add
sub
aaa
adc
add
enter
add
mov
sbb
add
in
or
loopne
adc
adc
repnz
or
or
inc
add
inc
les
xlat
mov
pop
xor
pop
add
dec
cmp
push
repnz
push
rol
or
xor
mov
fidiv
lods
mov
fld
rcr
ror
ins
add
cmps
mov
push
repnz
loopne
and
jmp
ret
push
xchg
into
sub
xor
sbb
inc
enter
test
add
and
fadd
fadd
hlt
push
(bad)
pop
or
shl
ins
inc
or
xor
imul
pop
cli
xchg
dec
leave
sbb
popa
add
mov
sbb
jns
adc
test
rol
sbb
dec
jp
add
add
stc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
or
add
or
mov
sar
cld
fwait
lock
sar
pop
pop
and
mov
inc
add
xchg
cwde
shl
adc
mov
enter
sub
ror
test
in
fs
jno
sbb
mov
mov
movs
shl
sub
mov
aam
mov
xor
jp
inc
inc
or
sbb
repnz
mov
adc
dec
js
jmp
dec
clc
xlat
call
and
or
adc
hlt
movs
shr
xor
sub
not
dec
push
jmp
mov
sub
or
add
push
and
adc
retf
icebp
rol
add
int3
in
int3
pop
cld
adc
and
jmp
mov
test
jns
jge
pusha
pop
jle
pop
out
inc
pushf
pop
popa
jle
je
pushf
inc
lods
xchg
daa
loop
sahf
pop
mov
jns
loop
mov
inc
shl
pop
call
jo
jns
sar
lahf
cmc
loop
iret
(bad)
(bad)
cmp
pusha
and
push
cli
add
fild
lahf
jns
cmc
jne
and
sub
inc
add
push
adc
push
jecxz
aas
jmp
add
push
or
push
pop
fld
sub
xchg
sar
nop
in
add
outs
dec
push
je
jge
mov
xchg
jbe
stc
xor
mov
mov
pop
inc
ins
push
mov
mov
and
shr
mov
xchg
xchg
adc
and
add
or
loope
or
add
sub
enter
add
dec
add
test
in
mov
mov
adc
in
and
mov
cld
adc
xor
pop
ror
mov
add
mov
pop
jmp
add
push
les
push
jmp
sub
ins
push
inc
in
inc
pop
adc
fnstcw
retf
cld
or
xor
sbb
aam
scas
mov
xor
mov
mov
enter
(bad)
or
or
call
push
dec
add
xchg
dec
int3
cmp
mov
aam
inc
imul
inc
inc
mov
sbb
xor
sub
inc
hlt
or
add
stc
ud2
push
mov
pop
mov
push
push
fsubr
das
ds
pop
sub
aam
rcl
daa
or
or
loopne
retf
enter
sub
cmp
ficom
imul
push
add
add
and
add
add
inc
sub
add
add
adc
add
or
mov
rol
sbb
call
cmp
mov
xor
sub
xor
mov
retf
xchg
xor
dec
inc
hlt
push
retf
in
imul
and
jmp
mov
bound
test
in
sub
jno
add
mov
dec
sbb
fstp
cmps
xchg
add
adc
fs
add
gs
sahf
push
addr16
rcl
inc
add
jecxz
adc
lock
aas
add
adc
mov
cmp
jo
aad
xor
popa
dec
(bad)
push
inc
outs
and
push
mov
inc
mov
icebp
mov
sub
inc
xchg
add
and
sub
add
cwde
iret
sub
add
clc
(bad)
lods
and
sub
jo
jns
aad
inc
cmp
push
imul
xchg
add
retf
retf
xchg
mov
lods
cmp
les
mov
repnz
xor
loopne
dec
das
add
mov
push
push
inc
call
dec
adc
xor
adc
leave
xor
sbb
pusha
fsub
dec
sub
repnz
mov
lahf
push
or
dec
adc
out
cld
ret
mov
mov
pushf
inc
sub
mul
mov
add
add
add
inc
sub
add
add
add
add
or
scas
(bad)
scas
jg
push
adc
stos
add
mov
sar
mov
inc
mov
and
sub
pop
movs
push
pushf
push
(bad)
sahf
movs
cld
out
add
lds
dec
sub
sub
mov
mov
movs
push
addr16
lahf
adc
sub
push
cmps
or
push
hlt
(bad)
iret
pop
push
popf
xor
sub
push
cmp
jne
adc
sbb
add
push
in
leave
lahf
or
movs
cld
inc
or
leave
inc
sub
xor
push
pusha
into
push
popw
shl
out
pusha
dec
or
sub
gs
cmp
(bad)
cmp
adc
pop
into
adc
add
jo
sbb
sub
std
das
sar
outs
sbb
cld
cmpxchg
retf
adc
clc
data16
cli
xchg
jmp
ja
mov
movs
cwde
stc
iret
rol
add
or
repnz
dec
mov
add
(bad)
mov
xchg
lods
pop
cmp
sub
pop
les
mov
(bad)
add
xchg
retf
sub
mov
xchg
add
int3
and
shl
aam
movs
fimul
xchg
dec
and
cld
rol
sbb
push
mov
adc
add
or
adc
mov
sub
ss
inc
lea
add
cs
enter
cmp
xor
jb
stc
and
dec
push
in
dec
scas
add
xchg
or
pusha
or
inc
inc
add
stc
add
add
inc
sub
add
add
push
add
or
add
or
iret
xchg
mov
mov
inc
mov
adc
scas
pop
cmp
mov
repz
stos
mov
data16
repnz
or
push
sar
and
pop
xor
lods
inc
dec
lea
outs
jmp
clc
pop
retf
out
(bad)
fwait
add
xor
mov
sub
(bad)
push
xchg
or
mov
das
jae
mov
sub
es
or
xor
xchg
retf
test
fst
popf
sub
dec
lds
lds
dec
and
lods
mov
sbb
jno
loop
add
les
mov
cmp
or
fs
push
rcl
bound
nop
loope
xchg
jmp
push
leave
aas
sbb
add
jb
dec
xchg
jecxz
add
(bad)
xor
mov
retf
sbb
aad
ins
call
movs
ja
mov
not
fisttp
in
inc
push
cmp
push
jg
mov
and
inc
inc
adc
sbb
pusha
inc
mov
in
clc
mov
repz
sbb
push
les
add
add
stc
add
add
inc
sub
add
add
adc
add
or
mov
rol
sbb
call
cmp
mov
xor
sub
xor
mov
retf
xchg
xor
dec
inc
hlt
push
retf
in
imul
and
jmp
mov
bound
test
in
sub
jno
add
mov
dec
sbb
fstp
cmps
xchg
add
adc
fs
add
gs
sahf
push
addr16
rcl
inc
add
jecxz
adc
lock
aas
add
adc
mov
cmp
jo
aad
xor
popa
dec
(bad)
push
inc
outs
and
push
mov
inc
mov
icebp
mov
sub
inc
xchg
add
and
sub
add
cwde
iret
sub
add
clc
(bad)
lods
and
sub
jo
jns
aad
inc
cmp
push
imul
xchg
add
retf
retf
xchg
mov
lods
cmp
les
mov
repnz
xor
loopne
dec
das
add
mov
push
push
inc
call
dec
adc
xor
adc
leave
xor
sbb
pusha
fsub
dec
sub
repnz
mov
lahf
push
or
dec
adc
out
cld
ret
mov
mov
pushf
inc
sub
mul
mov
add
add
add
inc
sub
add
add
add
add
or
scas
(bad)
scas
jg
push
adc
stos
add
mov
sar
mov
inc
mov
and
sub
pop
movs
push
pushf
push
(bad)
sahf
movs
cld
out
add
lds
dec
sub
sub
mov
mov
movs
push
addr16
lahf
adc
sub
push
cmps
or
push
hlt
(bad)
iret
pop
push
popf
xor
sub
push
cmp
jne
adc
sbb
add
push
in
leave
lahf
or
movs
cld
inc
or
leave
inc
sub
xor
push
pusha
into
push
popw
shl
out
pusha
dec
or
sub
gs
cmp
(bad)
cmp
adc
pop
into
adc
add
jo
sbb
sub
std
das
sar
outs
sbb
cld
cmpxchg
retf
adc
clc
data16
cli
xchg
jmp
ja
mov
movs
cwde
stc
iret
rol
add
or
repnz
dec
mov
add
(bad)
mov
xchg
lods
pop
cmp
sub
pop
les
mov
(bad)
add
xchg
retf
sub
mov
xchg
add
int3
and
shl
aam
movs
fimul
xchg
dec
and
cld
rol
sbb
push
mov
adc
add
or
adc
mov
sub
ss
inc
lea
add
cs
enter
cmp
xor
jb
stc
and
dec
push
in
dec
scas
add
xchg
or
pusha
or
inc
inc
add
stc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
push
add
or
add
or
iret
xchg
mov
mov
inc
mov
adc
scas
pop
cmp
mov
repz
stos
mov
data16
repnz
or
push
sar
and
pop
xor
lods
inc
dec
lea
outs
jmp
clc
pop
retf
out
(bad)
fwait
add
xor
mov
sub
(bad)
push
xchg
or
mov
das
jae
mov
sub
es
or
xor
xchg
retf
test
fst
popf
sub
dec
lds
lds
dec
and
lods
mov
sbb
jno
loop
add
les
mov
cmp
or
fs
push
rcl
bound
nop
loope
xchg
jmp
push
leave
aas
sbb
add
jb
dec
xchg
jecxz
add
(bad)
xor
mov
retf
sbb
aad
ins
call
movs
ja
mov
not
fisttp
in
inc
push
cmp
push
jg
mov
and
inc
inc
adc
sbb
pusha
inc
mov
in
clc
mov
repz
sbb
push
les
add
add
stc
add
add
inc
sub
add
add
adc
add
or
mov
rol
sbb
call
cmp
mov
xor
sub
xor
mov
retf
xchg
xor
dec
inc
hlt
push
retf
in
imul
and
jmp
mov
bound
test
in
sub
jno
add
mov
dec
sbb
fstp
cmps
xchg
add
adc
fs
add
gs
sahf
push
addr16
rcl
inc
add
jecxz
adc
lock
aas
add
adc
mov
cmp
jo
aad
xor
popa
dec
(bad)
push
inc
outs
and
push
mov
inc
mov
icebp
mov
sub
inc
xchg
add
and
sub
add
cwde
iret
sub
add
clc
(bad)
lods
and
sub
jo
jns
aad
inc
cmp
push
imul
xchg
add
retf
retf
xchg
mov
lods
cmp
les
mov
repnz
xor
loopne
dec
das
add
mov
push
push
inc
call
dec
adc
xor
adc
leave
xor
sbb
pusha
fsub
dec
sub
repnz
mov
lahf
push
or
dec
adc
out
cld
ret
mov
mov
pushf
inc
sub
mul
mov
add
add
add
inc
sub
add
add
add
add
or
scas
(bad)
scas
jg
push
adc
stos
add
mov
sar
mov
inc
mov
and
sub
pop
movs
push
pushf
push
(bad)
sahf
movs
cld
out
add
lds
dec
sub
sub
mov
mov
movs
push
addr16
lahf
adc
sub
push
cmps
or
push
hlt
(bad)
iret
pop
push
popf
xor
sub
push
cmp
jne
adc
sbb
add
push
in
leave
lahf
or
movs
cld
inc
or
leave
inc
sub
xor
push
pusha
into
push
popw
shl
out
pusha
dec
or
sub
gs
cmp
(bad)
cmp
adc
pop
into
adc
add
jo
sbb
sub
std
das
sar
outs
sbb
cld
cmpxchg
retf
adc
clc
data16
cli
xchg
jmp
ja
mov
movs
cwde
stc
iret
rol
add
or
repnz
dec
mov
add
(bad)
mov
xchg
lods
pop
cmp
sub
pop
les
mov
(bad)
add
xchg
retf
sub
mov
xchg
add
int3
and
shl
aam
movs
fimul
xchg
dec
and
cld
rol
sbb
push
mov
adc
add
or
adc
mov
sub
ss
inc
lea
add
cs
enter
cmp
xor
jb
stc
and
dec
push
in
dec
scas
add
xchg
or
pusha
or
inc
inc
add
stc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
add
or
pop
(bad)
push
iret
sahf
or
ret
ins
icebp
fwait
enter
dec
adc
and
sbb
push
pop
lds
dec
(bad)
mov
lods
movs
mov
addr16
bound
push
adc
mov
(bad)
push
sub
mov
sub
inc
inc
movs
adc
jb
mov
sbb
or
adc
(bad)
adc
addr16
cmp
sub
or
icebp
pop
mov
xor
retf
ret
add
xchg
xchg
test
(bad)
in
enter
or
dec
and
loop
add
shl
and
cmp
mov
push
pop
inc
repz
pop
pop
add
sti
mov
jae
iret
mov
call
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
sysret
or
or
pop
inc
add
aas
or
dec
mov
lds
or
inc
rol
test
dec
mov
xor
xchg
xchg
mov
test
ins
jno
mov
adc
dec
popf
and
adc
inc
and
leave
xchg
pusha
mov
pop
in
shl
mov
retf
xor
adc
inc
in
xchg
sbb
sbb
or
push
scas
pop
cmp
inc
lea
mov
inc
(bad)
pusha
fdivr
and
in
or
popf
std
dec
ins
jecxz
xchg
or
and
stos
ret
cmp
mov
popf
push
mov
std
movs
or
add
jo
sbb
jno
daa
(bad)
or
dec
adc
push
inc
dec
mov
cmp
sbb
mov
out
mov
(bad)
mov
(bad)
ficom
inc
dec
dec
dec
sbb
jl
fnstsw
stos
adc
and
mov
shr
jl
repz
cdq
loop
adc
cmp
int3
jns
aad
xchg
pop
push
fidiv
paddsb
ret
xor
and
pop
jns
in
ror
or
mov
sub
xchg
adc
into
jmp
pusha
mov
pop
and
pop
cmp
adc
dec
mov
adc
jp
in
and
inc
popf
call
out
inc
les
out
jbe
ds
(bad)
jecxz
adc
icebp
test
adc
xor
cmp
or
add
sbb
jmp
dec
sub
test
out
mov
adc
add
iret
test
outs
rcr
or
mov
mov
test
add
pusha
retf
in
(bad)
cmp
jne
aaa
lahf
push
rol
lock
adc
mov
push
icebp
les
(bad)
mov
adc
mov
rol
xchg
inc
inc
mov
mov
sub
les
mov
jmp
dec
pop
jb
es
into
jno
out
push
ficomp
cmp
or
(bad)
and
inc
ror
add
nop
push
sub
je
lock
mov
mov
lea
out
push
lock
xor
fsub
push
adc
pushf
add
push
push
test
aad
add
mov
lock
das
mov
and
mov
jo
daa
es
unpckhps
xchg
adc
ror
cmp
lods
adc
or
mov
cmp
mov
cmp
ror
das
sub
jg
hlt
stos
(bad)
adc
mov
mov
rcr
jb
add
jl
repz
push
or
into
add
xor
push
inc
(bad)
cmp
popa
xor
push
lock
jmp
loope
or
cmp
add
repz
shl
dec
mov
add
aam
aaa
mov
neg
mul
and
mov
or
inc
or
stos
and
pop
daa
mov
pop
out
leave
xor
aam
push
iret
sub
jae
icebp
mov
add
rcl
add
add
or
nop
ret
push
daa
cld
bound
mov
push
rol
push
daa
mov
fimul
xor
lock
xor
mov
pop
add
cmp
adc
adc
or
or
nop
inc
add
adc
jbe
add
(bad)
fnstcw
mov
mov
loopne
push
mov
mov
add
inc
mov
aas
in
jecxz
mov
call
pusha
ja
inc
popa
or
inc
add
mov
cvtdq2ps
add
fnstcw
adc
pop
add
cmp
or
sub
loop
and
push
xor
xchg
lods
ins
in
xchg
lock
add
push
adc
cmp
lds
sub
or
mov
outs
push
mov
pop
nop
xor
pusha
xor
popf
mov
pop
sub
xor
pop
sub
aaa
inc
repnz
scas
int3
sahf
jecxz
test
mov
sub
xchg
ret
add
loope
pop
sbb
add
and
sbb
push
cmp
add
je
sbb
aaa
leave
and
arpl
sub
daa
mov
cmp
sbb
push
and
inc
adc
enter
ror
inc
retf
jo
(bad)
sub
inc
(bad)
js
aaa
xchg
fdivr
pop
or
add
sar
(bad)
test
ins
popa
add
inc
sub
add
enter
js
and
icebp
or
cmp
sahf
bound
sub
inc
jle
inc
or
adc
sbb
pop
xor
add
and
cmp
xor
pop
bound
xlat
cdq
jo
stos
push
(bad)
push
(bad)
inc
xchg
mov
push
pushf
loope
aad
inc
or
mov
lea
sub
arpl
add
adc
pusha
and
jb
rol
adc
sbb
das
mov
push
scas
mov
add
push
sbb
add
adc
loope
pop
int3
inc
adc
sbb
sub
pop
or
loopne
lods
xor
sub
inc
adc
add
das
bound
movs
xchg
in
fs
or
and
mov
inc
sub
rol
sbb
mov
aas
dec
fld
test
or
and
mov
xor
push
enter
jne
ins
adc
pop
lods
inc
add
mov
or
loopne
dec
nop
xchg
adc
pop
mov
test
arpl
mov
mov
cs
mov
and
clc
lds
push
nop
or
ror
in
mul
sub
push
sbb
icebp
fsubr
mov
test
jo
or
lock
les
push
dec
bound
das
pop
ror
sahf
or
fldenv
push
mov
inc
mov
sbb
xor
mov
add
jb
push
loope
loope
clc
jo
gs
xchg
pop
in
cs
mov
icebp
rol
dec
adc
or
das
mov
cmp
sbb
loopne
or
es
fcmovu
jb
dec
push
xor
add
cmp
retf
add
push
and
and
sub
ror
fst
add
add
dec
sahf
lea
jo
and
push
pop
sbb
cmp
adc
adc
hlt
in
fsubr
push
aad
mov
sbb
xor
sbb
or
sahf
push
add
inc
packssdw
add
mov
mov
mov
sbb
pusha
and
dec
sbb
lods
inc
or
add
and
les
ror
add
lock
cld
outs
mov
rcl
dec
add
add
add
ds
or
in
pop
cmp
and
dec
mov
or
inc
ds
popa
add
shl
mov
push
sbb
fadd
cmps
xchg
jo
push
mov
fld
adc
sub
inc
add
add
stc
add
add
inc
sub
add
add
add
add
mov
clc
iret
push
add
bound
push
push
ds
or
dec
adc
in
fild
sub
rcl
dec
dec
xchg
or
test
shl
cmpxchg
loop
inc
sbb
add
adc
jmp
adc
pushf
inc
xchg
aam
and
inc
nop
imul
mov
ret
jge
mov
push
and
outs
or
adc
push
shr
xlat
mov
or
mov
jecxz
icebp
mov
dec
dec
adc
shl
retf
add
or
stc
add
add
inc
sub
add
add
or
add
or
nop
and
sub
lock
test
imul
lods
daa
lds
push
lds
pop
in
mov
pop
(bad)
ds
int3
mov
leave
xor
mov
test
cmp
add
and
push
retf
and
add
movs
sub
add
adc
inc
add
adc
cmp
add
stos
sub
adc
call
or
mov
jo
mov
or
jle
cld
inc
lock
and
rol
pop
(bad)
mov
add
jo
jmp
push
inc
xchg
daa
out
xchg
push
add
mov
pusha
test
ja
sar
sub
sbb
inc
outs
adc
lods
adc
ds
mov
xchg
add
pop
leave
and
mov
mov
mov
mov
pusha
mov
adc
xor
shrd
loope
addr16
cld
mov
xor
inc
mov
or
les
mov
push
nop
sub
push
daa
push
mov
cwde
add
xor
add
enter
adc
adc
and
add
add
inc
sub
add
add
add
add
or
add
or
lock
mov
add
icebp
sub
mov
(bad)
mov
(bad)
jecxz
lods
xchg
std
mov
push
jle
pushf
ret
pop
jo
mov
adc
jns
or
sub
test
adc
add
or
cmp
cmp
push
pop
or
scas
stos
mov
add
(bad)
mov
and
jecxz
pop
mov
inc
nop
fistp
pop
mov
pop
or
mov
dec
dec
mov
pop
push
xchg
mov
dec
and
and
lahf
mov
retf
(bad)
mov
retf
inc
mov
fsubr
fmul
jg
xor
loopne
ror
fiadd
sub
dec
sahf
fsub
aas
aam
(bad)
shl
ins
or
dec
pop
dec
xor
dec
arpl
mov
cmp
xchg
add
pop
and
call
jmp
sub
nop
pop
lea
xchg
sub
xchg
push
mov
sub
(bad)
ins
call
and
aas
data16
adc
nop
sbb
and
mov
and
test
in
nop
jg
mov
xor
add
pop
mov
loope
push
push
mov
jbe
xor
iret
das
xor
and
aas
xor
add
stc
add
add
inc
sub
add
add
or
add
or
mov
ror
or
ret
jg
jns
mov
jg
xchg
or
mov
ror
cmp
test
push
aad
test
xor
mov
mov
and
push
repnz
test
lahf
jp
hlt
imul
inc
sub
leave
xor
cli
das
push
add
into
sub
adc
push
call
add
jg
enter
out
sbb
jg
out
cmp
sub
push
add
add
jge
dec
movs
stc
ja
pop
mov
and
outs
or
gs
pusha
shl
mov
mov
mov
div
or
ror
inc
das
dec
nop
sub
pop
jp
pop
add
and
jmp
out
jg
clc
aad
xor
and
and
jmp
mov
push
lods
pop
pop
or
sti
inc
shl
out
add
stos
cmp
xchg
mov
aas
push
lahf
dec
cs
dec
sar
mov
push
or
mov
add
sub
cld
rol
add
sub
pop
aas
out
cmp
stos
cld
arpl
add
test
adc
sub
and
dec
sub
and
add
jmp
repnz
(bad)
sub
xchg
retf
imul
(bad)
retf
or
ja
inc
cld
loopne
dec
das
push
jp
mov
adc
or
dec
adc
push
rol
and
push
add
lods
add
jae
shl
adc
add
jb
jge
or
adc
or
sub
pop
(bad)
push
adc
adc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rcl
sub
call
inc
inc
adc
cmps
je
dec
test
fld
or
add
push
lea
pop
push
rcl
ret
jg
dec
xor
and
sub
(bad)
cmp
adc
mov
ja
(bad)
and
iret
dec
push
add
shr
imul
sub
and
test
add
pop
cmp
nop
mov
or
movs
pop
sub
les
dec
imul
sub
movs
xor
pop
shl
fs
jge
push
mov
adc
dec
add
jmp
mov
ins
cs
sar
sub
pop
dec
and
test
xlat
sub
aas
je
dec
loope
out
sub
dec
xlat
jecxz
loop
stos
adc
sbb
call
inc
dec
add
add
push
shr
adc
sub
jmp
les
jne
cs
cmp
sub
add
push
(bad)
aas
dec
dec
in
jg
add
adc
in
arpl
adc
mov
sub
rcl
loope
and
cmps
push
xchg
inc
mov
xor
mov
clc
(bad)
iret
push
cmp
arpl
add
add
sub
les
ret
aas
stos
lods
add
int3
sbb
cld
add
push
cs
aaa
out
pusha
add
mov
mov
sub
aas
mov
jb
cmp
jl
int
mov
xor
aas
arpl
and
dec
sub
xchg
add
xor
das
in
(bad)
or
or
ret
or
inc
lods
loop
xchg
add
mov
sahf
add
inc
push
cdq
js
aam
inc
clc
or
jmp
imul
add
inc
sub
add
add
add
add
or
add
or
mov
rcl
stos
xor
mov
inc
and
sbb
inc
sbb
dec
imul
leave
mov
icebp
add
call
bound
inc
and
loopne
test
jmp
les
add
sub
das
daa
inc
test
add
mov
adc
jmp
out
add
inc
pop
movs
cmp
outs
pop
adc
pop
jmp
add
mov
sbb
aas
inc
or
fwait
jbe
adc
xchg
or
and
ins
adc
dec
cmc
push
xchg
inc
pusha
sbb
out
imul
mov
lods
sbb
imul
ins
add
enter
mov
fcmovnb
adc
gs
sub
inc
add
fld
adc
xor
imul
mul
(bad)
and
cdq
push
sbb
or
sbb
pop
or
inc
jge
js
(bad)
sti
les
or
ret
inc
pop
mov
popa
cmp
mov
(bad)
xlat
and
jmp
jle
mov
mov
sahf
cld
mov
inc
or
xor
inc
movhlps
or
xor
nop
test
sbb
add
xchg
adc
pop
test
add
icebp
iret
sub
adc
enter
movs
fisubr
add
add
aaa
sahf
jb
inc
gs
scas
lods
loop
inc
mov
mov
jecxz
inc
xor
fs
add
call
nop
(bad)
cmp
push
js
loop
js
test
xor
in
mov
pop
adc
inc
mov
loopne
(bad)
xchg
add
mov
sub
cld
xor
inc
sub
es
pop
cld
xchg
enter
or
aas
pusha
mov
out
sar
xchg
int
mov
mov
xor
and
push
xchg
adc
sbb
cld
jae
dec
mov
inc
jl
mov
inc
jecxz
je
inc
mov
aad
in
inc
dec
in
or
in
push
push
pop
adc
push
mov
add
add
add
inc
sub
add
add
add
add
or
add
or
mov
shl
sub
adc
cmp
or
icebp
js
es
test
adc
cwde
adc
movs
test
inc
dec
in
mov
push
or
and
sub
lea
je
xor
add
lahf
sbb
stos
xor
add
fld
pop
pop
add
jo
dec
mov
pop
xchg
shr
add
sub
nop
sub
add
adc
popa
call
and
add
sbb
popa
mov
jge
mov
xchg
jg
mov
lahf
sub
in
sti
(bad)
stos
pop
shr
js
sbb
mov
hlt
xchg
inc
xlat
cmps
add
sbb
or
(bad)
(bad)
xchg
or
add
aad
loop
popa
shr
in
sbb
add
xor
rcl
and
mov
nop
adc
or
cld
jmp
aaa
lock
mov
hlt
add
cmp
xchg
inc
test
jmp
clc
lds
xchg
jg
cmp
nop
push
nop
daa
iret
or
and
adc
or
js
or
in
add
mov
test
sbb
jo
adc
repnz
xor
or
adc
xor
sbb
push
xor
push
jns
shl
jbe
fs
xor
enter
(bad)
clc
xor
std
mov
loopne
dec
xchg
or
add
outs
scas
mov
add
push
adc
mov
or
or
mov
xchg
sub
push
or
or
pop
jle
(bad)
adc
adc
aas
scas
cld
mov
cmp
retf
cld
icebp
dec
and
clc
xor
out
dec
sub
clc
adc
nop
sub
aas
(bad)
and
mov
jns
sbb
adc
das
retf
or
iret
adc
mov
and
add
cmps
lods
mov
inc
mov
(bad)
pop
inc
adc
ja
test
stc
add
add
inc
sub
add
and
sub
add
inc
dec
sbb
mov
inc
push
(bad)
jmp
push
dec
out
adc
(bad)
mov
mov
add
sbb
add
xchg
add
dec
enter
push
rol
xchg
inc
test
cmc
adc
adc
inc
push
sahf
or
jmp
push
mov
test
enter
mov
and
popa
cmp
add
push
and
daa
pop
sbb
std
push
in
mov
xchg
fs
adc
inc
int3
aam
cmp
cmp
add
fnsave
cwde
into
pop
and
mov
push
xchg
es
and
add
scas
mov
test
dec
push
dec
cmp
shl
cld
stos
xor
pop
cvtps2pd
retf
je
xor
cmp
inc
ret
pop
cmp
pop
lock
imul
pop
loopne
jg
nop
pop
fadd
mov
das
jl
jge
out
(bad)
mov
fisub
mov
cli
out
bound
outs
das
std
fnstcw
(bad)
das
jg
mov
add
out
daa
pop
add
enter
jmp
xor
pusha
pop
cld
lods
ret
clc
sbb
iret
sub
sub
inc
or
add
repnz
sub
add
or
jmp
xchg
dec
sub
je
dec
das
int3
lods
push
xor
bound
stos
or
xchg
dec
pop
mov
mov
and
das
pusha
fcomp
dec
xchg
cmp
lock
jb
(bad)
loop
mov
mov
dec
call
sub
push
and
push
or
lds
xor
dec
push
pushf
sub
sub
les
dec
cmp
sahf
aas
imul
add
sub
add
add
add
add
or
add
or
mov
shl
xor
jmp
adc
cdq
fdiv
and
push
adc
fdivr
cs
out
pop
aas
js
sbb
hlt
sub
add
lds
push
test
add
das
and
test
(bad)
std
test
inc
adc
shl
in
cld
aaa
jae
sbb
and
movs
das
add
cld
mov
fnop
daa
lds
dec
call
add
mov
stc
push
lods
mov
cmp
int3
push
in
xchg
das
cmp
in
(bad)
jb
daa
ja
push
adc
mov
push
jb
or
xchg
in
push
sbb
fs
jnp
mov
js
sub
mov
jge
mov
sub
loopne
arpl
dec
xor
mov
dec
mov
add
ret
mov
mov
(bad)
es
test
fild
shl
jnp
aad
jmp
es
adc
mov
jno
and
jge
or
retf
mov
cld
xor
aas
mov
addr16
pop
adc
or
or
xchg
enter
in
push
mov
(bad)
aam
inc
(bad)
push
(bad)
jne
and
js
add
pop
das
ds
(bad)
fld
add
add
inc
sub
add
add
add
add
or
add
or
mov
xchg
or
sub
inc
movs
mov
sub
sub
dec
nop
aam
jg
push
push
sbb
pop
rcr
daa
rcl
add
mov
pop
xor
push
dec
sub
or
mov
dec
sub
and
nop
push
sub
cwde
popf
or
sub
adc
mov
sub
cmc
scas
sar
xchg
cmp
xchg
and
push
std
out
call
or
add
les
sub
test
aas
lahf
stc
pop
call
aas
dec
sub
in
adc
cmp
loop
xchg
cmp
sub
(bad)
popf
fisub
dec
and
mov
pop
fst
leave
sbb
lahf
mov
jmp
arpl
push
inc
sbb
adc
lock
ss
add
jecxz
out
or
loope
scas
jmp
imul
mul
add
jo
stc
repz
out
les
dec
mov
sbb
(bad)
inc
cmp
push
add
iret
jbe
mov
inc
pop
mov
nop
nop
sbb
adc
dec
add
mov
inc
lock
and
xchg
xchg
jae
call
or
(bad)
or
push
sub
pushf
pop
dec
sub
loopne
sub
inc
pop
and
adc
dec
pop
jmp
cmp
xor
cld
inc
mov
adc
xor
(bad)
loop
add
mov
into
jno
clc
push
push
xchg
add
pop
xchg
inc
or
sub
aam
fidivr
sbb
aas
push
or
lock
das
jecxz
ret
inc
adc
xchg
pop
add
dec
and
add
sbb
pop
sub
add
add
add
inc
sub
add
add
add
add
or
mov
xchg
or
sub
scas
sbb
and
or
mov
sbb
and
or
mov
ins
mov
popa
mov
mov
call
pop
dec
nop
xchg
scas
jg
pop
dec
repnz
pop
push
cmps
add
cmps
sbb
bound
and
test
or
es
xor
cmps
push
and
cmps
stc
out
pop
sbb
mov
std
dec
xchg
sub
and
and
add
jmp
in
fistp
jg
mov
out
imul
jmp
loop
push
and
aad
dec
pop
cmp
xor
jg
not
mov
jge
push
jae
xlat
int
push
dec
xchg
aaa
scas
test
sub
(bad)
jmp
ret
jle
mov
fmulp
(bad)
call
dec
mov
retf
lahf
(bad)
rcr
mov
fistp
mov
jns
or
add
shr
adc
or
or
add
sub
dec
add
mov
pop
jmp
xchg
mov
mov
mov
aam
jp
scas
or
jnp
enter
stos
xor
pop
aas
mov
add
add
stc
add
add
inc
sub
add
add
add
add
or
mov
ror
lea
enter
add
mov
inc
cs
sbb
dec
inc
inc
pusha
add
retf
mul
ss
mov
imul
add
std
and
int3
(bad)
xchg
cmp
pop
jmp
je
inc
enter
add
sub
rol
leave
test
movs
or
lods
xchg
sbb
sub
int
pop
or
adc
mov
cwde
dec
xor
ins
mov
sub
mov
popf
jg
out
test
dec
sub
shr
adc
xchg
xchg
add
xchg
xchg
ins
fcomp
scas
mov
pop
xchg
push
addr16
loopne
or
(bad)
stos
lods
imul
pop
in
dec
xor
jle
mov
lock
adc
xlat
push
dec
inc
sub
enter
or
sti
xchg
movs
push
mov
sbb
scas
sbb
push
ds
pop
scas
out
lahf
sub
push
sti
idiv
mov
sahf
popa
mov
in
stos
pop
iret
mov
add
xchg
inc
dec
cld
les
sub
leave
(bad)
jge
movs
movs
mov
aas
or
arpl
add
shr
lock
add
jecxz
js
add
xor
sar
ucomiss
or
jg
ret
test
jecxz
aas
mov
add
or
inc
fld
mov
sub
mov
mov
enter
mov
mov
and
cld
adc
add
push
es
add
add
stc
add
add
inc
sub
add
add
add
add
or
mov
inc
and
nop
loope
dec
test
ror
and
mov
dec
push
sub
fst
mov
and
inc
popa
add
cld
retf
cwde
jb
cs
in
add
sbb
rcr
nop
aam
or
and
das
daa
push
and
or
ds
dec
mov
nop
pop
cwde
pop
inc
dec
cli
aaa
adc
pop
sete
jo
sub
mov
and
mov
ss
fidivr
mov
fisub
xor
jge
enter
pop
movs
cli
inc
adc
jae
lock
mov
arpl
xchg
or
adc
rol
in
call
imul
push
fadd
fs
mov
retf
std
cmovns
mov
mov
pop
adc
imul
test
mov
sti
je
mov
jle
stos
or
and
push
sbb
aaa
add
pop
outs
xchg
mov
push
add
mov
shl
sbb
xchg
fistp
loop
inc
nop
or
add
inc
inc
dec
cld
cld
push
add
cs
(bad)
sub
add
adc
dec
test
icebp
push
inc
test
mov
adc
pusha
inc
jl
out
mov
icebp
ret
mov
pop
push
dec
inc
jo
inc
jg
sub
inc
or
lods
mov
mov
jmp
adc
mov
pusha
xor
mov
push
pusha
and
retf
les
cmp
jl
or
dec
pop
scas
fs
sub
xchg
mov
push
sub
nop
sub
mov
aaa
push
sub
(bad)
jecxz
ins
jle
mov
inc
stos
call
sbb
rol
mov
pop
adc
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
inc
ins
sub
sub
fistp
and
xchg
mov
inc
sub
adc
jnp
les
sbb
aas
xor
fbstp
dec
mov
adc
aas
mov
sub
out
jnp
jb
cmp
mov
push
push
test
mov
les
int3
mov
cmp
mov
ret
jmp
push
inc
rcr
xor
jle
mov
xchg
fwait
jmp
ffree
jl
push
inc
repz
sub
or
div
fsubr
xchg
mov
fstp
or
push
fmul
mov
push
hlt
out
push
ins
fld
add
inc
and
fwait
loopne
or
rcr
cmc
jmp
mov
mul
stc
cmp
push
add
rcr
mov
add
mov
cld
aas
out
movs
loope
mov
pop
add
or
or
jmp
xchg
int
mov
lock
pop
jmp
int3
aas
adc
and
mov
lea
cld
ret
mov
sub
cmc
push
sbb
add
cmp
xor
mov
mov
test
mov
sbb
and
add
add
inc
sub
add
add
or
add
or
mov
inc
and
mov
inc
jae
lock
sub
xchg
mov
ret
xor
xchg
mov
test
dec
in
xchg
shr
shl
rcr
xchg
mov
cmp
dec
and
(bad)
popf
sub
sbb
dec
cmp
sub
loop
out
pushf
stos
push
cmp
lahf
scas
ins
shr
or
rcr
ret
(bad)
imul
adc
add
stos
movs
fiadd
imul
test
jb
or
pop
ds
pop
mov
call
addr16
lds
mov
fisttp
inc
fld
mov
call
push
std
jmp
(bad)
or
repnz
hlt
cmp
cmps
xchg
mov
xlat
or
in
loopne
test
dec
dec
mov
xchg
jmp
adc
and
mov
retf
das
rcr
(bad)
in
loop
sbb
mov
ror
jne
sbb
pop
mov
int3
aas
mov
xor
fidiv
or
adc
(bad)
cmp
sbb
iret
adc
xor
inc
int3
mov
ret
mov
dec
cmp
push
mov
pop
icebp
inc
pop
mov
jecxz
aas
stos
xchg
repz
popa
cdq
clc
iret
xor
xchg
mov
and
inc
test
loope
sub
cmp
sub
xchg
jmp
mov
xchg
sub
in
mov
xchg
pop
xor
jecxz
imul
fsubr
stos
adc
daa
cs
test
out
or
cmps
loopne
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
nop
inc
xor
cmc
in
and
mov
out
push
inc
or
mov
xor
xchg
xchg
in
pop
mov
repnz
xchg
or
shl
call
or
lods
imul
pop
cld
ret
mov
push
sahf
and
(bad)
fmul
shr
mov
cli
test
fild
scas
cmp
adc
add
rcl
push
sub
sbb
mov
pop
pop
xchg
stos
repz
dec
pop
int
adc
mov
es
mov
aas
adc
daa
pop
jl
inc
mov
and
(bad)
jne
ins
lock
test
xchg
mov
inc
cmc
mov
stos
repnz
xor
or
fisttp
out
push
cmp
dec
stos
out
in
imul
fimul
xchg
fistp
out
push
stc
jns
cmp
scas
cld
ja
mov
cld
jns
or
add
enter
add
aas
ficom
xor
inc
adc
add
lods
mov
jp
xlat
or
or
add
sub
add
adc
jmp
adc
xor
(bad)
mov
push
mov
dec
sub
aas
fld
or
hlt
ret
add
dec
loop
mov
mov
mov
aas
sub
lock
das
mov
add
arpl
dec
mov
ret
or
daa
xor
bound
in
push
movs
add
and
fdiv
add
cmp
or
push
cld
add
pop
add
(bad)
mov
lahf
add
jo
add
push
test
adc
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
sar
sub
pop
inc
xchg
adc
popa
inc
xchg
pop
mov
mov
jle
sbb
sbb
sbb
adc
inc
outs
pop
mov
fsubr
adc
sub
or
inc
js
in
push
dec
mov
dec
xchg
pop
jge
mov
xchg
cmps
push
cmp
hlt
xchg
inc
xor
lahf
push
mov
iret
lea
jmp
mov
fnstenv
fsubr
(bad)
shr
fdivr
retf
mov
fistp
fs
cmps
add
xor
fsubr
xor
jmp
mov
ins
mov
stos
jg
pop
and
lods
jg
or
add
pop
scas
int
adc
xchg
pop
rol
gs
es
test
sbb
jae
fadd
(bad)
jns
(bad)
outs
mov
pop
into
add
pop
jne
and
and
add
add
inc
sub
add
add
adc
add
pushf
add
or
in
or
adc
pop
enter
push
mov
xor
sub
dec
test
mov
jb
xor
cmp
mov
outs
sub
sub
ret
mov
pop
ret
in
(bad)
xor
adc
retf
push
dec
mov
jne
aaa
je
xor
enter
xor
popf
mov
or
enter
pop
mov
jne
rcr
push
jmp
scas
xchg
sub
bound
das
ins
jns
cwde
loop
scas
jno
clc
inc
rol
add
add
sbb
ret
add
add
stc
add
add
inc
sub
add
add
add
add
or
dec
mov
rcl
aas
or
in
mov
cld
jmp
jmp
mov
add
mov
push
fcomi
das
push
inc
push
(bad)
cmp
jae
xor
pop
push
cmp
call
(bad)
and
add
cdq
xor
jg
add
inc
clc
xor
sub
or
cmp
lods
or
add
nop
fild
test
push
add
and
add
add
inc
sub
add
add
sldt
or
enter
jg
add
loop
mov
inc
add
call
sbb
iret
add
lods
sub
aas
arpl
cmp
pop
shl
xchg
push
arpl
inc
mul
pusha
cli
cli
xchg
pop
ss
sub
hlt
bound
(bad)
mov
pop
dec
xchg
nop
or
xchg
xor
es
sar
mov
stos
shr
enter
mov
stos
les
adc
dec
pop
cmp
xchg
je
mov
je
ins
and
mov
add
add
add
add
add
dec
add
popa
add
add
popa
xor
sbb
dec
add
sub
add
add
popa
add
inc
dec
inc
cmp
popa
cmp
cmp
idiv
add
mov
push
dec
jmp
imul
fcomp
push
and
adc
(bad)
mov
xchg
xchg
lods
out
cwde
xchg
add
(bad)
mov
aad
xchg
dec
(bad)
xchg
dec
xor
mov
(bad)
(bad)
int
mov
gs
test
xchg
xchg
lahf
sub
push
xchg
je
mov
inc
enter
xchg
jnp
call
gs
pop
inc
out
push
xchg
imul
addr16
movs
stos
push
inc
jmp
cs
mov
movs
mov
retf
mov
test
jnp
mov
fdiv
inc
mov
mov
xor
stos
stos
in
xlat
push
shr
fsub
jmp
mov
cmps
mov
out
mov
mov
(bad)
jmp
hlt
call
inc
mov
jns
enter
retf
ret
mov
pop
sti
(bad)
mov
add
test
mul
jecxz
mov
mov
rol
out
jmp
jl
popa
cmp
mov
jnp
test
jmp
addr16
cld
(bad)
test
inc
jmp
(bad)
aam
addr16
ja
dec
ja
stos
push
cmp
out
out
pushf
sahf
int3
jae
jmp
(bad)
out
(bad)
mov
pop
mov
pushf
lock
pop
pop
cmp
(bad)
pop
pop
jecxz
xchg
jmp
into
imul
out
mov
cli
out
div
fs
imul
bound
lods
call
jae
out
arpl
mov
out
pop
push
lods
dec
inc
jmp
idiv
div
jmp
fdivrp
into
mov
(bad)
iret
call
(bad)
out
mov
pushf
mov
(bad)
mov
pushf
test
into
mov
jnp
push
jmp
out
aas
sub
lods
pushf
(bad)
out
into
sar
idiv
push
repz
out
out
out
mov
xchg
test
lods
xchg
jmp
(bad)
in
jb
fmulp
test
(bad)
push
out
test
out
out
jae
test
in
imul
pushf
out
jae
out
(bad)
mul
in
jnp
mov
test
out
jnp
neg
faddp
neg
lods
xchg
div
imul
jnp
out
arpl
movs
sahf
out
mov
in
mov
out
out
(bad)
(bad)
mul
pushf
cmp
repnz
out
(bad)
mov
jmp
mov
inc
xor
out
scas
cmp
mul
(bad)
cmp
mul
fsubrp
mov
out
jae
not
ret
test
mov
jle
ret
out
neg
adc
jae
idiv
jmp
mov
div
push
call
cli
jmp
out
mul
(bad)
pushf
dec
sub
inc
dec
mov
inc
lods
dec
dec
mov
int
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
cmp
add
inc
std
or
mov
rol
mov
ret
xchg
sbb
pop
adc
push
pop
fmul
rcr
adc
inc
sub
dec
lock
push
nop
and
cmp
add
add
or
or
loopne
dec
adc
rol
add
dec
or
or
push
les
inc
mov
and
dec
dec
jo
enter
test
in
inc
and
jb
mov
test
js
adc
shl
sub
(bad)
and
adc
xchg
add
xchg
es
mov
loop
popa
dec
mov
adc
stos
push
and
bound
add
movs
or
adc
je
dec
mov
cwde
xlat
push
outs
pop
or
ret
inc
in
mov
pop
repz
inc
push
movs
jmp
and
jmp
jmp
mov
push
imul
or
push
int3
es
lds
rcl
arpl
test
or
xor
out
inc
enter
and
and
stc
inc
repnz
popa
ficom
rcl
ret
mov
or
sub
mov
cmp
lea
xor
xor
mov
inc
push
lahf
add
movs
mov
dec
loop
pop
xchg
xchg
inc
sub
pop
xor
cmp
push
or
ficomp
sub
mov
push
or
movs
xchg
xchg
and
or
dec
or
sub
mov
or
or
sub
dec
bound
sub
js
or
das
mov
adc
push
and
or
mov
nop
lea
push
jecxz
push
cmp
adc
xor
or
retf
out
dec
and
int3
sub
push
test
rol
xor
and
leave
sar
(bad)
or
leave
mov
push
mov
xor
(bad)
push
add
and
or
mov
mov
shl
jecxz
pop
or
push
ret
push
inc
nop
mov
rol
fs
lods
(bad)
add
and
sub
xor
adc
and
and
out
ror
xchg
push
mov
and
mov
pusha
xchg
and
ror
(bad)
xchg
push
cmps
add
and
or
retf
aam
add
ficom
lds
xchg
mov
push
or
add
cs
les
add
sub
sbb
and
ret
xchg
add
or
mov
pop
and
add
sbb
fwait
pusha
ret
xor
cmp
cmp
add
dec
hlt
mov
call
add
dec
mov
mov
inc
pop
and
loopne
add
add
add
adc
xchg
or
or
inc
ins
inc
or
dec
and
pop
popf
pop
inc
lds
xlat
and
stos
sbb
sub
jno
or
mov
jnp
push
cmp
scas
push
push
nop
test
es
ror
enter
or
mov
add
cli
cs
mov
loope
add
mov
mov
and
(bad)
stc
sbb
cmp
les
push
push
inc
or
sub
aas
scas
mov
fadd
sub
les
jle
add
pop
inc
imul
sub
bound
shr
add
ret
popa
test
dec
clts
xor
sub
mov
and
xor
add
int
jp
test
xor
shr
mov
pop
dec
add
mov
push
push
xor
loope
cmps
call
or
add
lock
call
mov
push
(bad)
mov
xor
add
push
jo
add
rol
cwde
mov
and
mov
pop
mov
or
fsub
fadd
inc
inc
mov
js
shrd
aam
nop
dec
inc
add
cmc
or
or
fs
adc
sar
cmp
femms
or
pop
inc
rol
jne
add
or
mov
jno
xchg
or
cmp
add
call
add
sbb
call
or
cvtpi2ps
pop
xchg
jecxz
or
call
sbb
je
adc
add
dec
push
mov
cmp
add
push
fwait
cmp
inc
push
pop
pusha
add
loopne
dec
or
test
rol
add
mov
mov
sbb
js
or
test
xor
movs
add
and
and
push
jp
pusha
push
pusha
call
adc
adc
cmp
add
add
push
scas
pushf
cs
inc
pop
push
dec
pop
aam
add
cwde
inc
mov
and
adc
clc
cmp
pusha
sub
inc
or
rol
add
or
je
and
js
adc
mov
jo
nop
push
in
add
add
cmp
ret
push
and
add
clc
inc
or
cmp
pop
cwde
inc
sub
adc
(bad)
mov
adc
and
inc
or
push
loope
ja
add
or
mov
push
adc
sbb
loop
dec
push
fwait
adc
dec
popa
or
and
or
add
add
movs
cmp
inc
cs
mov
push
push
rol
ror
jg
rol
add
add
cmp
jle
cmp
pop
add
sysenter
pop
and
lock
sbb
cmp
cs
mov
push
hlt
inc
mov
les
inc
pop
sub
pop
add
xor
or
mov
xor
adc
popa
push
push
push
sbb
jp
ss
and
add
or
call
and
jo
lea
xor
adc
test
sub
jno
or
add
inc
lock
test
test
or
js
and
adc
pop
jo
add
ja
mov
mov
dec
inc
inc
push
or
add
mov
fsubr
pop
push
sub
aaa
ds
mov
loopne
popf
cld
loope
add
add
sub
mov
add
outs
and
add
cmp
add
mov
add
sub
rcr
ror
nop
test
adc
mov
adc
cmp
outs
(bad)
pop
rcl
sub
shr
and
loopne
adc
lock
sbb
xor
sub
push
jb
cmp
adc
push
inc
(bad)
(bad)
aam
cmps
or
cmps
dec
mov
sub
or
push
cmp
add
mov
add
mov
pop
xchg
and
call
add
and
or
mov
mov
add
(bad)
and
pop
xlat
stc
jp
or
sub
inc
adc
call
mov
fld
cmps
add
jle
ret
rol
adc
inc
and
pop
pop
mov
inc
add
jmp
pop
frstor
add
pusha
lock
inc
lea
jnp
add
and
cmp
mov
xor
add
mov
push
or
adc
mov
aam
call
and
add
add
push
and
fadd
pop
push
pop
nop
int3
adc
adc
enter
clc
out
xchg
cli
jl
cmps
sbb
rcl
rol
add
inc
pop
sbb
adc
xchg
fs
pop
inc
call
cwde
sbb
outs
mov
pusha
jl
xchg
add
rcl
inc
adc
(bad)
shr
out
(bad)
lock
aad
mov
sbb
sbb
and
xor
fldenv
pushf
sub
xor
xor
ret
out
rol
sub
and
ror
ror
iret
mov
push
les
or
pusha
sbb
adc
pminub
inc
mul
sbb
adc
add
out
adc
jle
test
or
pusha
and
js
fwait
adc
inc
(bad)
das
add
fcom
cmp
jnp
cwde
or
or
push
sbb
add
add
stc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
or
add
or
mov
inc
or
scas
test
push
jl
popa
arpl
or
aad
and
jmp
jg
xor
xchg
movs
mov
sahf
lea
popf
push
jns
in
leave
adc
lock
cmps
retf
(bad)
jmp
mov
pusha
repz
sub
mov
aas
sub
adc
in
mov
push
mov
mov
daa
cmp
push
and
adc
clc
mul
lahf
ss
dec
mov
inc
and
dec
pusha
rcl
mov
pop
and
xchg
shl
pushf
push
inc
lock
les
mov
sub
outs
sbb
dec
sbb
push
push
jmp
scas
jno
jl
xchg
xchg
lea
and
cmps
push
pop
or
adc
fdiv
mov
mov
int3
(bad)
mov
in
push
sub
inc
jmp
sbb
mul
adc
xor
cwde
ds
daa
jmp
pusha
inc
xor
and
adc
jl
cmp
adc
nop
and
dec
mov
cmps
aam
loope
aad
test
(bad)
or
leave
add
add
add
xor
xchg
mov
add
add
cs
add
add
inc
add
adc
fadd
inc
cmp
jne
cwde
inc
xchg
or
test
add
inc
std
cwde
inc
lds
popf
fsub
add
jo
adc
add
andnps
mov
push
and
jl
shr
mov
and
ror
add
gs
and
sbb
inc
inc
sbb
mov
adc
xchg
or
add
push
xchg
repnz
add
xor
pop
add
aas
pushf
cs
or
sbb
leave
test
popa
stos
adc
xor
call
nop
aas
inc
mov
shl
out
cld
jae
inc
rol
stos
mov
pop
ins
sbb
dec
shl
inc
rol
inc
add
stc
add
add
inc
sub
add
add
add
add
or
jo
test
adc
mov
and
adc
out
or
xchg
sub
leave
mov
push
lahf
mov
daa
mov
mov
inc
dec
sar
mov
rol
push
mov
(bad)
push
mov
lds
dec
les
xchg
les
cmp
add
xchg
sahf
sbb
cld
mov
push
dec
aas
push
or
cmp
adc
mov
stos
add
stos
ror
add
in
xlat
iret
cdq
sahf
mov
mov
scas
push
jg
mov
pop
ret
or
adc
mov
pop
cmp
leave
xchg
sbb
pop
mov
mov
inc
mov
std
xor
mov
sub
rol
pop
sti
sti
pop
add
mov
adc
test
mov
inc
pop
adc
jno
mov
rcl
cmp
call
out
loop
pop
rcl
sbb
mov
sbb
out
add
mov
ret
jne
inc
inc
inc
pop
and
adc
daa
and
adc
mov
sbb
pop
jmp
mov
pop
add
out
sbb
add
jo
pop
add
popa
xchg
ja
movs
add
sbb
or
(bad)
xlat
sub
test
sahf
add
mov
sub
mov
cwde
and
push
pusha
push
inc
pop
call
mov
push
ror
cmps
add
ja
xor
inc
add
and
addr16
xor
pushf
push
add
enter
jae
cmp
add
sub
pop
inc
jae
and
cdq
add
mov
add
frstor
shl
sub
xor
and
sub
mov
or
jae
and
test
adc
sub
pop
xchg
test
iret
and
mov
add
movs
sub
(bad)
push
add
jbe
in
mov
div
stos
cmp
nop
test
lds
or
ins
cmps
add
fldcw
movs
inc
xor
ins
jge
es
ins
cmps
lods
retf
push
inc
mov
mov
mov
inc
add
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
sub
sub
mov
push
mov
inc
cdq
xor
ss
push
sub
sbb
mov
add
sbb
dec
or
and
push
xor
jno
add
cmp
shl
cs
retf
imul
add
loope
xchg
jg
xchg
hlt
fstp
popa
mov
and
add
aas
jle
xor
stos
inc
scas
dec
adc
test
xchg
hlt
push
xor
push
fiadd
xor
jp
cdq
and
in
fnstsw
pop
loope
add
push
adc
and
sub
and
cmp
shl
arpl
push
neg
sbb
pusha
mov
mov
xchg
sub
lods
or
rol
dec
popf
push
jne
and
pushf
loopne
or
or
out
or
addr16
cvttps2pi
enter
imul
jb
out
nop
xor
xor
lods
adc
add
call
mov
cld
mov
pop
sbb
xor
add
and
mov
shr
push
push
adc
lock
mov
rcr
inc
jp
ror
lahf
pop
pop
sbb
xor
or
mov
or
or
jo
add
mov
test
imul
sub
add
add
xor
or
iret
pop
pushf
popa
clc
mov
movs
jmp
call
sbb
inc
push
and
sbb
dec
je
dec
daa
or
int
shr
(bad)
push
shl
xchg
sbb
icebp
dec
and
cs
icebp
iret
sub
fmul
add
xor
rol
mov
inc
imul
adc
inc
pushf
sbb
std
mov
adc
and
add
or
xor
and
sub
adc
mov
adc
test
sti
clc
xor
nop
add
and
xchg
adc
aas
scas
cmp
add
movs
cmp
inc
js
inc
shl
(bad)
cmp
push
es
mov
movs
ret
dec
test
mov
int
dec
inc
movs
mov
pop
mov
sub
dec
push
mov
push
xor
lods
mov
add
inc
mov
mov
aad
scas
mov
inc
mov
add
mov
popf
arpl
(bad)
push
dec
mov
xor
cwde
lods
mov
test
cs
dec
dec
push
add
add
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
or
scas
test
push
jl
popa
arpl
or
aad
and
jmp
jg
xor
xchg
movs
mov
sahf
lea
popf
push
jns
in
leave
adc
lock
cmps
retf
(bad)
jmp
mov
pusha
repz
sub
mov
aas
sub
adc
in
mov
push
mov
mov
daa
cmp
push
and
adc
clc
mul
lahf
ss
dec
mov
inc
and
dec
pusha
rcl
mov
pop
and
xchg
shl
pushf
push
inc
lock
les
mov
sub
outs
sbb
dec
sbb
push
push
jmp
scas
jno
jl
xchg
xchg
lea
and
cmps
push
pop
or
adc
fdiv
mov
mov
int3
(bad)
mov
in
push
sub
inc
jmp
sbb
mul
adc
xor
cwde
ds
daa
jmp
pusha
inc
xor
and
adc
jl
cmp
adc
nop
and
dec
mov
cmps
aam
loope
aad
test
(bad)
or
leave
add
add
add
xor
xchg
mov
add
add
cs
add
add
inc
add
adc
fadd
inc
cmp
jne
cwde
inc
xchg
or
test
add
inc
std
cwde
inc
lds
popf
fsub
add
jo
adc
add
andnps
mov
push
and
jl
shr
mov
and
ror
add
gs
and
sbb
inc
inc
sbb
mov
adc
xchg
or
add
push
xchg
repnz
add
xor
pop
add
aas
pushf
cs
or
sbb
leave
test
popa
stos
adc
xor
call
nop
aas
inc
mov
shl
out
cld
jae
inc
rol
stos
mov
pop
ins
sbb
dec
shl
inc
rol
inc
add
stc
add
add
inc
sub
add
add
add
add
or
jo
test
adc
mov
and
adc
out
or
xchg
sub
leave
mov
push
lahf
mov
daa
mov
mov
inc
dec
sar
mov
rol
push
mov
(bad)
push
mov
lds
dec
les
xchg
les
cmp
add
xchg
sahf
sbb
cld
mov
push
dec
aas
push
or
cmp
adc
mov
stos
add
stos
ror
add
in
xlat
iret
cdq
sahf
mov
mov
scas
push
jg
mov
pop
ret
or
adc
mov
pop
cmp
leave
xchg
sbb
pop
mov
mov
inc
mov
std
xor
mov
sub
rol
pop
sti
sti
pop
add
mov
adc
test
mov
inc
pop
adc
jno
mov
rcl
cmp
call
out
loop
pop
rcl
sbb
mov
sbb
out
add
mov
ret
jne
inc
inc
inc
pop
and
adc
daa
and
adc
mov
sbb
pop
jmp
mov
pop
add
out
sbb
add
jo
pop
add
popa
xchg
ja
movs
add
sbb
or
(bad)
xlat
sub
test
sahf
add
mov
sub
or
push
add
gs
mov
push
cs
and
push
adc
pop
add
sbb
ror
pushf
(bad)
cdq
push
(bad)
in
and
adc
ror
fs
pushf
adc
xchg
add
(bad)
call
leave
(bad)
mov
or
or
pop
je
jne
inc
mov
mov
adc
lock
add
and
in
cmp
jno
pop
cmp
dec
push
nop
sub
jb
push
jbe
or
jl
pop
daa
inc
dec
mov
gs
fmul
mov
sar
in
mov
or
test
enter
sahf
fld
scas
xchg
dec
cli
pmaddubsw
dec
and
(bad)
ja
inc
ror
pop
mov
adc
mov
bnd
aas
lods
(bad)
stos
out
pop
xchg
add
add
add
inc
sub
add
add
or
add
or
mov
rol
lock
lods
pop
push
sbb
mov
inc
cdq
xor
ss
cmp
inc
push
sbb
mov
add
sbb
dec
or
and
push
xor
jno
add
cmp
rcl
cs
retf
imul
add
loope
xchg
jg
xchg
hlt
fstp
popa
mov
and
add
aas
jle
xor
stos
inc
scas
dec
adc
test
test
hlt
push
xor
push
fiadd
xor
jp
cdq
and
in
pop
inc
lods
jo
sbb
adc
adc
xchg
sbb
sub
cmp
clc
div
add
mov
push
or
mov
cs
pusha
(bad)
mov
add
imul
popa
movs
dec
xchg
mov
lock
add
out
test
shl
pop
xchg
inc
and
and
xor
daa
cmp
stc
outs
ja
sbb
rol
or
push
sbb
push
pusha
(bad)
(bad)
mov
or
dec
xor
xor
or
aaa
nop
push
jp
jecxz
sbb
push
push
push
jo
aas
dec
jl
inc
sub
fsub
test
sbb
or
adc
or
loopne
sub
fcom
mov
add
adc
mov
popw
mov
(bad)
arpl
cmp
push
jge
push
or
sub
ror
inc
push
jl
inc
sbb
sbb
cmps
aas
fidiv
aam
mov
mov
mov
jo
aas
scas
xor
and
cmp
add
dec
enter
pop
adc
add
add
and
push
mov
add
cmp
add
push
ficom
xor
and
sub
dec
cdq
into
enter
inc
das
adc
test
sti
clc
and
nop
add
and
xchg
adc
aas
stos
bound
rol
mov
or
iret
mov
gs
shl
test
hlt
test
mov
nop
and
jns
or
nop
add
sbb
or
dec
or
add
and
cmp
cmp
unpcklps
and
push
mov
push
and
pushf
stos
xor
test
leave
movs
sahf
jl
xor
fwait
dec
dec
push
add
add
stc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
or
add
or
mov
inc
or
scas
test
push
jl
popa
arpl
or
aad
and
jmp
jg
xor
xchg
movs
mov
sahf
lea
popf
push
jns
in
leave
adc
lock
cmps
retf
(bad)
jmp
mov
pusha
repz
sub
mov
aas
sub
adc
in
mov
push
mov
mov
daa
cmp
push
and
adc
clc
mul
lahf
ss
dec
mov
inc
and
dec
pusha
rcl
mov
pop
and
xchg
shl
pushf
push
inc
lock
les
mov
sub
outs
sbb
dec
sbb
push
push
jmp
scas
jno
jl
xchg
xchg
lea
and
cmps
push
pop
or
adc
fdiv
mov
mov
int3
(bad)
mov
in
push
sub
inc
jmp
sbb
mul
adc
xor
cwde
ds
daa
jmp
pusha
inc
xor
and
adc
jl
cmp
adc
nop
and
dec
mov
cmps
aam
loope
aad
test
(bad)
or
leave
add
add
add
xor
xchg
mov
add
add
cs
add
add
inc
add
adc
fadd
inc
cmp
jne
cwde
inc
xchg
or
test
add
inc
std
cwde
inc
lds
popf
fsub
add
jo
adc
add
andnps
mov
push
and
jl
shr
mov
and
ror
add
gs
and
sbb
inc
inc
sbb
mov
adc
xchg
or
add
push
xchg
repnz
add
xor
pop
add
aas
pushf
cs
or
sbb
leave
test
popa
stos
adc
xor
call
nop
aas
inc
mov
shl
out
cld
jae
inc
rol
stos
mov
pop
ins
sbb
dec
shl
inc
rol
inc
add
stc
add
add
inc
sub
add
add
add
add
or
jo
test
adc
mov
and
adc
out
or
xchg
sub
leave
mov
push
lahf
mov
daa
mov
mov
inc
dec
sar
mov
rol
push
mov
(bad)
push
mov
lds
dec
les
xchg
les
cmp
add
xchg
sahf
sbb
cld
mov
push
dec
aas
push
or
cmp
adc
mov
stos
add
stos
ror
add
in
xlat
iret
cdq
sahf
mov
mov
scas
push
jg
mov
pop
ret
or
adc
mov
pop
cmp
leave
xchg
sbb
pop
mov
mov
inc
mov
std
xor
mov
sub
rol
pop
sti
sti
pop
add
mov
adc
test
mov
inc
pop
adc
jno
mov
rcl
cmp
call
out
loop
pop
rcl
sbb
mov
sbb
out
add
mov
ret
jne
inc
inc
inc
pop
and
adc
daa
and
adc
mov
sbb
pop
jmp
mov
pop
add
out
sbb
add
jo
pop
add
popa
xchg
ja
movs
add
sbb
or
(bad)
xlat
sub
test
sahf
add
mov
sub
or
push
add
gs
mov
push
cs
and
push
adc
pop
add
sbb
ror
pushf
(bad)
cdq
push
(bad)
in
and
adc
ror
fs
pushf
adc
xchg
add
(bad)
call
leave
(bad)
mov
or
or
pop
je
jne
inc
mov
mov
adc
lock
add
and
in
cmp
jno
pop
cmp
dec
push
nop
sub
jb
push
jbe
or
jl
pop
daa
inc
dec
mov
gs
fmul
mov
sar
in
mov
or
test
enter
sahf
fld
scas
xchg
dec
cli
pmaddubsw
dec
and
(bad)
ja
inc
ror
pop
mov
adc
mov
bnd
aas
lods
(bad)
stos
out
pop
xchg
add
add
add
inc
sub
add
add
or
add
or
mov
rol
lock
lods
pop
push
sbb
mov
inc
cdq
xor
ss
cmp
inc
push
sbb
mov
add
sbb
dec
or
and
push
xor
jno
add
cmp
rcl
cs
retf
imul
add
loope
xchg
jg
xchg
hlt
fstp
popa
mov
and
add
aas
jle
xor
stos
inc
scas
dec
adc
test
test
hlt
push
xor
push
fiadd
xor
jp
cdq
and
in
pop
inc
lods
jo
sbb
adc
adc
xchg
sbb
sub
cmp
clc
div
add
mov
push
or
mov
cs
pusha
(bad)
mov
add
imul
popa
movs
dec
xchg
mov
lock
add
out
test
shl
pop
xchg
inc
and
and
xor
daa
cmp
stc
outs
ja
sbb
rol
or
push
sbb
push
pusha
(bad)
(bad)
mov
or
dec
xor
xor
or
aaa
nop
push
jp
jecxz
sbb
push
push
push
jo
aas
dec
jl
inc
sub
fsub
test
sbb
or
adc
or
loopne
sub
fcom
mov
add
adc
mov
popw
mov
(bad)
arpl
cmp
push
jge
push
or
sub
ror
inc
push
jl
inc
sbb
sbb
cmps
aas
fidiv
aam
mov
mov
mov
jo
aas
scas
xor
and
cmp
add
dec
enter
pop
adc
add
add
and
push
mov
add
cmp
add
push
ficom
xor
and
sub
dec
cdq
into
enter
inc
das
adc
test
sti
clc
and
nop
add
and
xchg
adc
aas
stos
bound
rol
mov
or
iret
mov
gs
shl
test
hlt
test
mov
nop
and
jns
or
nop
add
sbb
or
dec
or
add
and
cmp
cmp
unpcklps
and
push
mov
push
and
pushf
stos
xor
test
leave
movs
sahf
jl
xor
fwait
dec
dec
push
add
add
stc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
sbb
add
inc
dec
sbb
movs
mov
aad
mov
mov
or
pop
inc
cmp
sub
mov
outs
les
push
(bad)
pop
pop
xor
and
adc
mov
sti
xchg
xor
sbb
and
xchg
sub
push
push
cli
lods
in
inc
add
cmp
bound
daa
sub
fsubr
sbb
mov
or
and
xchg
jmp
ret
sbb
or
push
iret
sub
sahf
inc
ins
ror
mov
aam
dec
adc
jle
sub
mov
add
adc
dec
or
mov
ss
movs
mov
mov
or
jl
mov
sub
and
adc
adc
dec
mov
xchg
mov
std
sbb
cdq
sbb
sti
push
mov
inc
dec
add
sbb
xchg
ins
fld
fcomp
xor
ja
mov
aaa
out
loop
sub
mov
or
sar
jae
shl
repnz
es
(bad)
stc
add
or
ror
push
cmp
and
add
add
inc
sub
add
add
add
or
add
or
mov
rol
mov
ret
xchg
pop
mov
mov
inc
mov
mov
dec
push
dec
dec
les
or
push
push
and
cmp
enter
adc
dec
add
sbb
add
and
mov
inc
xor
bound
pusha
dec
push
mov
mov
or
or
shl
xor
push
xchg
and
xchg
sbb
dec
loope
inc
mov
lods
push
call
shr
cmp
ret
xchg
sub
adc
mov
inc
push
push
int3
sbb
sub
movs
pop
xchg
jle
push
js
test
sub
lods
xchg
arpl
inc
gs
test
aas
int3
or
(bad)
loop
sub
ffreep
inc
lea
cmp
inc
sahf
and
int3
sbb
xor
sub
aaa
or
imul
add
ficom
stos
add
add
pusha
mov
aam
in
fcomp
add
push
dec
xor
sahf
shl
add
push
sbb
lock
adc
push
dec
and
es
neg
sbb
mov
test
and
or
or
out
test
xor
jo
or
(bad)
push
leave
and
and
pusha
mov
mov
inc
add
mov
inc
xor
add
les
xor
call
mov
jecxz
mov
test
xchg
cmp
inc
or
dec
and
push
mov
xor
or
retf
xor
adc
jl
or
adc
xchg
rol
or
or
add
ret
dec
mov
loopne
sar
adc
ins
xchg
les
sub
adc
cdq
jl
inc
and
mov
sbb
setno
jo
ror
cli
and
sub
add
mov
lock
and
inc
jo
or
fadd
and
pop
xchg
popa
jl
jno
pop
or
js
repnz
or
and
int3
ss
int3
rcl
dec
adc
adc
add
push
mov
mov
sub
and
sub
or
sbb
mov
hlt
mov
adc
inc
loop
mov
cmp
add
mov
dec
cmp
(bad)
or
dec
push
add
call
loop
add
dec
push
add
push
adc
iret
or
bound
push
pop
push
fst
dec
adc
adc
pop
pop
cld
adc
outs
push
jo
add
sub
and
sub
cmp
adc
xchg
inc
or
sub
inc
jae
cmp
xchg
fadd
ret
and
or
dec
push
push
retf
jo
inc
sub
and
xor
pop
ror
xchg
add
rol
dec
ficomp
mov
into
adc
cwde
jo
ss
xor
dec
leave
hlt
mov
cwde
and
and
pusha
jnp
in
je
add
sbb
imul
hlt
js
enter
sar
adc
retf
lea
jmp
repnz
aas
push
adc
cs
call
xor
xchg
or
dec
nop
inc
adc
add
inc
rol
cli
je
rol
inc
out
xchg
rol
das
or
cmp
push
hlt
ror
div
test
pop
mov
add
lock
sbb
push
jno
adc
iret
add
call
test
ror
inc
shr
add
mov
add
popa
mov
bound
adc
add
push
addr16
bound
inc
add
ss
inc
sub
and
add
loopne
or
sbb
sub
jo
push
mov
inc
add
rol
inc
sbb
sti
xor
inc
lock
adc
mov
sub
jno
sbb
mov
and
cmp
adc
add
ret
adc
or
and
cmps
add
call
mov
add
inc
xor
push
add
add
add
and
add
mov
push
sub
in
adc
call
adc
inc
add
add
les
add
ror
adc
sbb
add
inc
ficomp
sub
cmp
inc
or
add
cmps
inc
dec
pop
(bad)
rol
lods
mov
sub
mov
adc
pop
ror
cmp
inc
add
inc
adc
mov
xchg
cmp
test
adc
jg
test
and
and
jno
div
cmp
icebp
push
inc
cmp
cs
(bad)
push
repnz
rcl
cs
inc
(bad)
push
add
sbb
sbb
sbb
ror
sub
aam
rol
inc
xor
cmp
sbb
inc
pop
(bad)
cmp
lock
fadd
add
js
adc
cmp
mov
or
inc
aas
dec
jbe
push
cmp
lahf
daa
jb
enter
sbb
push
inc
adc
mov
pop
pushf
rol
rol
sbb
pop
pop
cmp
sub
pop
cwde
add
data16
sub
sbb
adc
dec
cmp
inc
cwde
or
and
rcl
shl
pop
or
add
push
mov
sbb
cmp
inc
or
cmp
mov
adc
push
or
add
push
mov
inc
inc
lods
xor
xor
or
mov
cmp
ror
adc
pop
enter
pusha
loopne
push
add
sbb
and
add
or
rcl
add
gs
push
mov
fmul
sub
fadd
hlt
nop
add
lods
pusha
mov
jb
add
adc
cmp
or
pusha
add
dec
lods
and
cmps
adc
mov
add
and
pop
xor
push
xor
ins
push
adc
cs
and
sub
adc
mov
add
adc
adc
loopne
sbb
ret
mov
push
mov
and
inc
adc
adc
push
mov
pop
pop
mov
cmp
sahf
xrelease
bound
hlt
ins
les
pop
sbb
mov
mov
movs
xor
shl
out
inc
scas
fsub
pop
xor
loope
imul
daa
ror
mov
ss
mov
or
ret
push
es
sbb
mov
in
iret
ja
sbb
shl
sub
pop
xor
aaa
inc
and
test
jp
add
adc
nop
cmp
pop
shl
add
xlat
add
jbe
inc
ror
ret
mov
inc
adc
xor
or
sub
adc
fadd
fadd
inc
and
push
nop
adc
test
adc
or
fadd
or
and
pusha
out
int
mov
outs
int3
pusha
add
add
jle
add
push
and
inc
sbb
push
add
pusha
add
and
iret
jl
scas
fwait
or
fild
push
int3
sti
mov
jp
mov
ds
adc
cmps
mov
cmp
rol
es
add
add
nop
xchg
cmp
xor
inc
sub
add
mov
sbb
ds
and
pop
add
adc
(bad)
leave
push
push
xor
mov
and
outs
jo
or
aaa
cmp
or
pop
repz
adc
xor
add
jno
dec
push
inc
nop
cmc
cmp
adc
adc
push
mov
ret
jge
ret
add
jo
xor
push
stos
jns
popf
sub
add
add
dec
add
test
lea
pusha
add
call
pop
pusha
xor
add
clc
mov
data16
cdq
scas
add
and
pop
cmp
and
inc
or
pop
int
aas
nop
sbb
dec
inc
add
nop
add
rcr
inc
sbb
fs
jg
(bad)
fcmovb
sub
dec
jle
jne
or
cmps
ds
add
add
stc
add
add
inc
sub
add
add
or
add
or
mov
sar
sub
loopne
pop
or
scas
xchg
mov
cmp
add
cli
mov
sbb
sbb
add
cdq
jbe
jg
adc
das
pop
inc
mov
mov
push
mov
mov
cs
mov
xor
dec
or
lahf
stos
pop
movups
sti
aaa
mov
mov
adc
int3
fsub
shl
add
and
loope
sub
and
fwait
xor
fistp
add
hlt
sar
inc
and
mov
ss
sbb
les
dec
loop
outs
pop
int
add
leave
(bad)
add
pop
out
ja
push
inc
push
cmp
xor
lock
inc
pop
jnp
adc
xor
xchg
cld
daa
cli
pop
xchg
in
push
ins
(bad)
fcom
nop
sub
les
push
xchg
aam
std
inc
(bad)
push
jle
add
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
pop
push
adc
pop
pop
push
add
repnz
adc
jmp
lods
pop
push
dec
add
push
mov
push
ins
mov
outs
xchg
sub
addr16
cdq
xchg
adc
xchg
aam
add
das
push
lock
xchg
xor
adc
inc
xor
add
jmp
xchg
pop
call
inc
add
mov
shl
inc
int
jl
xadd
ins
scas
fisubr
and
into
mov
xor
call
push
sbb
pushf
add
adc
mov
add
xor
stc
aaa
inc
cs
pusha
cdq
(bad)
stc
mov
xor
adc
pop
mov
add
sub
aas
pusha
or
pushf
and
sub
inc
xor
mov
hlt
push
push
or
idiv
in
setp
les
and
mov
(bad)
out
inc
mov
iret
ret
mov
and
sti
or
or
dec
jne
xor
inc
ret
loope
sbb
add
rol
mov
fld
and
adc
inc
call
add
adc
leave
aas
sub
push
repz
sub
and
mov
inc
adc
fild
loopne
xchg
inc
dec
enter
sub
inc
nop
cmovb
dec
inc
inc
into
mov
cmp
xor
and
add
add
inc
sub
add
add
or
add
or
mov
rol
push
mov
sub
push
ret
xchg
daa
mov
mov
mov
add
dec
mov
addr16
sbb
and
sbb
into
adc
adc
jp
imul
jbe
sub
cmps
mov
ret
out
cmp
dec
loopne
cdq
sbb
mov
jo
push
(bad)
sahf
jle
sahf
push
movs
call
cmp
mov
hlt
mov
and
pop
movs
rcr
dec
cmp
mov
jno
dec
stc
ja
xchg
add
add
test
mov
data16
(bad)
and
cmps
and
xchg
fadd
pop
mov
shl
adc
nop
js
pop
aaa
cmp
and
mov
or
gs
popa
mov
pop
pop
push
test
or
xor
je
cld
pop
stos
jg
and
cmp
(bad)
ret
sbb
xor
mov
test
mov
and
dec
cmp
rcr
in
push
inc
retf
pop
fsubr
adc
or
xchg
call
int
push
or
or
adc
ror
pop
dec
addr16
add
mov
sub
push
or
mov
ds
ins
or
sub
bound
cld
and
adc
dec
dec
or
or
(bad)
jecxz
and
in
(bad)
push
jns
sub
and
pop
xor
adc
and
add
add
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
sbb
sar
add
dec
cld
cmps
leave
retf
hlt
add
xor
mov
lea
inc
and
dec
int3
mov
and
or
inc
imul
xor
jnp
loope
lar
inc
rcl
mov
jnp
repnz
or
jecxz
pushf
mov
push
fldenv
int3
fidiv
xchg
jp
enter
mov
fadd
iret
mov
nop
sub
aam
lods
std
cli
adc
cmps
(bad)
aam
or
add
push
stos
push
shl
adc
xor
sub
bound
and
xor
fild
enter
mov
(bad)
push
inc
shr
xchg
inc
push
fadd
push
sbb
sbb
inc
(bad)
bound
xchg
scas
inc
mov
and
rol
push
cmovnp
xor
mov
fcom
cmp
add
xor
push
gs
pop
lock
sub
dec
aam
push
lahf
add
mov
loop
aaa
pop
cmp
jl
hlt
(bad)
cmp
ja
rcr
int
rcl
inc
(bad)
(bad)
test
adc
inc
dec
hlt
loopne
and
xor
inc
or
data16
bound
jge
sub
push
xchg
inc
adc
dec
test
inc
mov
mov
xchg
or
sub
jo
pop
pop
(bad)
sbb
sbb
push
xchg
sub
popa
push
and
pop
rol
cld
rol
ss
stc
add
push
cwde
dec
xor
add
stc
add
add
inc
sub
add
add
or
add
or
mov
rol
nop
and
adc
mov
rcr
lock
mov
and
push
push
mov
out
cdq
push
xor
aas
xchg
pop
jnp
and
mov
pop
cmp
inc
in
xor
cmp
and
(bad)
mov
adc
hlt
adc
mov
inc
add
pop
push
xor
adc
rol
sti
hlt
mov
movs
ss
ret
jns
fidivr
adc
and
jmp
push
and
retf
jg
fidivr
jno
xchg
add
inc
adc
test
add
dec
call
dec
sbb
pop
int3
mov
pop
mov
mov
inc
sub
xor
pop
ss
icebp
lahf
cmp
mov
push
mov
dec
sub
push
or
loope
test
sbb
adc
in
jno
xor
shl
rcr
add
call
rol
inc
mov
or
push
jmp
test
inc
add
and
inc
or
ret
pop
ins
inc
xor
sub
int3
add
adc
adc
adc
sub
xchg
and
xor
pop
jb
and
test
mov
or
mov
jno
rcr
xchg
test
add
pop
add
inc
pop
test
adc
loop
inc
ss
test
retf
and
or
or
adc
aaa
dec
or
leave
inc
and
inc
or
dec
hlt
sub
add
mov
push
or
(bad)
jecxz
dec
jle
xchg
test
add
add
stc
add
add
inc
sub
add
add
or
add
or
mov
rol
mov
inc
push
mov
pop
adc
cwde
inc
into
test
retf
dec
push
loopne
adc
xchg
xchg
adc
(bad)
int3
push
aaa
addr16
add
popa
and
cmp
or
push
(bad)
ins
cmps
jl
cmp
mov
mov
xor
lea
cmp
xchg
sbb
cmps
mov
addr16
sbb
outs
pop
shl
mov
into
push
in
dec
dec
add
sti
scas
dec
adc
jns
and
push
(bad)
(bad)
cmc
sub
sbb
add
adc
cdq
xor
xlat
aam
jle
jno
pop
je
push
(bad)
jg
cmp
add
or
mov
sbb
adc
xor
scas
fbstp
fiadd
mov
pop
fisubr
inc
sub
sbb
leave
pusha
stos
sbb
sub
jmp
(bad)
add
or
dec
add
loop
pushf
test
mov
std
in
lock
iret
push
sbb
icebp
dec
inc
add
cld
jecxz
aas
pop
cld
push
pop
inc
mov
mov
repnz
cmp
mov
mov
add
jb
sub
xor
sub
in
rcl
xor
inc
push
mov
push
adc
xor
xor
adc
mov
iret
and
or
arpl
call
sub
adc
es
mov
sub
mov
and
test
jecxz
xchg
cld
adc
rcl
daa
or
and
add
pop
rcl
and
cmp
adc
jnp
mov
adc
and
cdq
add
std
add
aas
dec
test
add
xchg
push
daa
nop
or
add
sub
mov
pop
adc
movs
cmps
add
add
xor
xchg
xor
ins
cmp
jecxz
pop
adc
inc
test
hlt
dec
pop
sub
nop
cmp
enter
inc
mov
mov
inc
add
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
adc
adc
inc
dec
add
push
mov
test
fdivr
sar
pop
add
jb
and
xchg
sbb
loopne
add
and
(bad)
xor
add
add
adc
lea
and
or
and
jae
xor
jp
enter
(bad)
in
jp
or
sbb
pop
push
or
or
fstp
dec
push
jp
jno
enter
dec
lahf
sub
sub
inc
push
inc
inc
jno
push
and
push
iret
aas
retf
jmp
mov
leave
xchg
add
loopne
rcr
in
ds
stos
cmc
enter
iret
call
stc
xlat
scas
lahf
ins
int3
add
lds
jno
aaa
sahf
call
fidivr
dec
loopne
and
(bad)
(bad)
push
imul
inc
push
or
ins
pop
ins
scas
repz
mov
into
fcmove
or
jmp
or
mov
enter
inc
sbb
adc
cmp
repnz
add
or
lea
lea
ror
jno
push
inc
xchg
mov
sbb
mov
jne
dec
and
inc
test
adc
xchg
or
inc
adc
add
and
push
or
push
or
int3
inc
and
add
dec
push
dec
inc
pushf
or
or
or
cmp
push
xchg
add
xor
adc
not
lea
in
and
xor
pop
inc
std
xchg
leave
add
xor
sub
add
in
and
adc
pop
inc
or
inc
sub
xchg
or
in
jns
mov
and
test
ds
xchg
aas
cmp
xchg
inc
mov
xor
stc
add
add
inc
sub
add
add
or
add
or
mov
rol
mov
lods
jg
pusha
dec
mov
inc
dec
cli
shl
pop
add
sub
cld
daa
loop
sahf
xor
pop
in
xor
or
xchg
or
adc
push
enter
adc
or
and
inc
lea
cmp
jo
ret
pusha
add
in
stos
add
mov
push
cmp
call
jge
or
std
pop
add
dec
pushf
leave
sti
outs
inc
adc
xchg
or
shr
ja
addr16
fnstsw
mov
mov
pop
cmp
push
(bad)
pop
cdq
push
stos
pop
pop
xor
movs
inc
(bad)
jle
dec
sbb
jp
mov
sub
mov
inc
inc
aad
sbb
imul
jo
dec
pop
shr
retf
cli
pop
xor
mov
pusha
mov
dec
xchg
inc
adc
mov
push
out
cdq
ret
rol
adc
pushf
xor
push
inc
call
dec
inc
loope
mov
test
push
cli
mov
(bad)
xchg
sbb
inc
inc
test
movs
rcl
adc
inc
aaa
inc
(bad)
leave
add
xor
ror
xor
loope
dec
push
lea
sub
clc
jne
and
(bad)
clc
or
add
rcl
inc
push
cs
add
stc
add
add
inc
sub
add
pop
add
add
or
add
or
mov
rcl
pop
clc
pop
xor
adc
push
sub
adc
xor
test
mov
lods
test
and
test
sbb
adc
xor
loop
jecxz
xchg
in
push
adc
jae
mov
inc
and
and
dec
dec
mov
int
repnz
dec
leave
and
loopne
xor
push
jmp
or
jo
int3
xchg
xor
fsub
or
xor
push
scas
add
jl
cmp
ret
fwait
sub
dec
mov
mov
mov
retf
and
loop
sub
rol
mov
cmp
pop
test
mov
shl
xchg
pop
popf
icebp
add
test
add
jge
adc
pusha
mov
sar
je
push
bound
rcr
shl
jmp
add
push
movs
test
mov
add
and
mov
sar
imul
jbe
hlt
test
jne
jl
std
arpl
aas
xor
movs
fiadd
inc
and
inc
rol
push
or
add
xchg
test
sbb
aas
mov
in
aas
test
int
jmp
test
xchg
sbb
(bad)
dec
cmp
xchg
inc
xor
mov
push
mov
add
and
popf
mov
push
adc
and
add
add
inc
sub
add
add
add
or
add
or
mov
rol
mov
ret
xchg
inc
pushf
dec
mov
adc
xor
pushf
mov
mov
nop
clc
loopne
test
loop
pop
dec
jo
aas
xor
mov
pop
dec
xor
dec
jl
add
xchg
sbb
aam
mov
pop
adc
jo
in
aam
push
mov
or
adc
aam
xor
cmp
mov
and
shl
out
retf
xchg
sbb
out
dec
xchg
inc
mov
fild
mov
mov
mov
dec
add
cmp
mov
add
pop
pop
mov
push
jmp
push
or
xchg
retf
pop
mov
pop
cs
jbe
xor
outs
sub
mov
sub
mov
and
mov
push
fsubr
pop
jae
mov
mov
dec
mov
in
lods
pop
retf
xchg
pushf
jb
(bad)
idiv
inc
push
aas
pop
xchg
mov
lock
inc
and
xor
push
add
sub
push
test
add
xor
je
dec
and
call
xchg
adc
cdq
std
xchg
ret
sbb
lock
inc
xor
adc
and
or
sub
push
fld
loopne
mov
rol
addr16
repz
and
pop
mov
adc
xchg
nop
mov
or
and
xchg
sbb
jae
es
pop
ret
movs
dec
adc
ret
push
out
or
cmp
les
lods
jl
pop
or
ret
xchg
and
add
push
push
leave
add
(bad)
pop
or
push
(bad)
jae
sbb
or
retf
xor
add
adc
ret
and
loopne
and
aas
mov
mov
arpl
popa
test
fadd
ror
dec
push
mov
xor
jl
lds
inc
and
push
push
push
add
add
popf
lods
call
pushf
loop
cmps
mov
mov
and
hlt
sub
pushf
jo
add
sub
sbb
pop
jb
cmp
pop
and
lock
xor
add
add
push
dec
lods
add
or
aas
scas
sub
inc
sub
or
add
xor
cld
inc
iret
add
mov
and
xor
stos
add
aas
push
pushf
jo
les
push
rcl
dec
rol
jno
jb
call
(bad)
getsec
mov
inc
loop
add
push
cmp
or
jmp
imul
in
adc
scas
test
xchg
adc
add
xor
or
xchg
icebp
iret
or
outs
pop
xchg
int3
add
xchg
jo
or
cwde
adc
aas
sbb
(bad)
mov
push
jp
jle
adc
cld
xchg
add
dec
inc
sub
clts
dec
or
cli
aas
pop
cmp
(bad)
sub
fld
add
imul
dec
mov
out
cwde
(bad)
retf
sbb
ja
add
push
cli
adc
adc
and
aas
ins
(bad)
or
xchg
add
push
ins
scas
mov
mov
leave
xlat
scas
cld
sub
jno
sti
inc
sti
mov
inc
jo
or
adc
and
inc
dec
cld
fiadd
aas
xor
add
mov
daa
dec
add
cmp
inc
out
jo
shr
(bad)
sti
inc
or
nop
inc
xchg
add
dec
push
inc
dec
mov
or
je
and
add
adc
mov
and
pusha
loopne
xchg
push
add
inc
add
push
and
or
cs
xor
xchg
popa
and
clc
sub
cmp
sysenter
mov
retf
adc
mov
inc
out
mov
and
jno
pop
inc
adc
sub
inc
sbb
pusha
pop
inc
(bad)
popa
adc
cmp
or
push
mov
bound
std
rol
(bad)
popa
cmp
adc
fidivr
sbb
add
pushf
rcl
fadd
inc
ss
push
adc
lea
xor
inc
push
nop
shl
push
and
sar
fmul
or
inc
inc
xor
add
xchg
retf
dec
pusha
mov
pop
(bad)
jecxz
add
enter
(bad)
loopne
sbb
and
sub
adc
add
inc
inc
add
xchg
mov
and
ror
clc
emms
movs
inc
adc
adc
xor
ja
push
push
movs
adc
xor
or
fs
pop
shl
les
mov
daa
pop
aaa
test
bound
cmp
mov
push
inc
mov
nop
(bad)
aas
sbb
(bad)
cmc
cmp
inc
jmp
jbe
pop
repz
add
pop
xchg
imul
or
mov
aas
inc
inc
pushf
aam
add
enter
sbb
pop
mov
popa
lea
push
add
(bad)
or
jmp
add
nop
fsub
ins
rol
ins
inc
add
xor
add
(bad)
adc
adc
enter
mov
and
xchg
adc
pusha
push
inc
or
dec
mov
pop
push
pop
mov
call
cmp
lea
mov
adc
mov
add
push
push
add
add
adc
aas
sbb
inc
dec
jge
adc
sbb
cmp
inc
sti
nop
cmps
cmp
jmp
inc
inc
in
sub
adc
mov
int3
or
and
sti
ret
loope
adc
sti
cwde
or
jo
in
sub
enter
mov
mov
aas
(bad)
cmc
sub
jo
mov
xor
add
lahf
loopne
xor
ins
sbb
jo
pop
inc
fild
add
(bad)
shrd
pop
arpl
add
and
add
or
add
add
mov
or
or
mov
inc
add
adc
mov
add
xor
nop
adc
and
enter
cmp
test
pop
data16
aad
and
and
or
or
and
adc
lock
mov
inc
aam
and
inc
mov
cmp
jb
xchg
mov
adc
add
(bad)
jp
mov
fisubr
push
push
xor
cmp
loopne
pop
nop
or
mov
bound
loopne
jbe
test
xor
or
and
or
imul
inc
les
or
and
test
and
mov
sub
sub
sub
inc
sbb
push
and
add
ins
sub
dec
clc
(bad)
cmps
mov
fs
xchg
dec
add
mov
adc
add
stos
ret
popa
cmp
loopne
sub
pop
popa
outs
add
xor
add
int3
cmp
and
sbb
and
jg
fs
add
cmp
sbb
add
pop
loopne
xchg
loopne
ins
jmp
add
loopne
push
add
dec
mov
or
in
and
adc
ud2
or
pop
es
xor
jbe
pop
loopne
add
jl
stos
enter
jne
mov
js
lds
add
and
add
add
inc
sub
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
hlt
pop
daa
or
bound
test
pop
jmp
(bad)
push
mov
dec
add
sbb
add
adc
pop
push
xchg
ins
push
vunpcklps
xchg
mov
jp
jmp
mov
loop
inc
mov
dec
xchg
inc
inc
call
dec
xchg
and
sbb
push
dec
call
adc
sti
push
leave
sar
jg
dec
sbb
call
ss
or
setno
sbb
pop
add
cld
and
sub
add
ins
fisub
adc
inc
test
or
in
jo
mov
cmc
(bad)
or
lods
mov
shl
inc
lods
pop
and
mov
(bad)
outs
push
adc
inc
xor
jo
pusha
loopne
pop
mov
dec
inc
and
call
arpl
pop
(bad)
in
daa
cld
repz
sar
or
inc
and
lahf
or
dec
adc
aas
push
test
nop
cs
push
or
cs
call
cld
repnz
and
dec
sub
cld
mov
sub
mov
dec
and
sub
and
xchg
enter
inc
add
shr
add
push
popa
add
lea
(bad)
push
leave
sub
test
shl
sub
mov
aam
sub
mov
dec
cld
adc
mov
jo
or
ss
rol
or
add
je
add
test
and
inc
(bad)
ds
dec
or
and
repz
adc
adc
cdq
jl
inc
and
mov
mov
or
hlt
or
lds
cmp
push
inc
adc
nop
add
mov
repz
and
shl
sub
dec
arpl
cwde
ds
xor
aas
jns
adc
or
loope
and
add
xchg
or
sub
sub
call
or
or
dec
jl
rcr
pop
xor
test
add
push
xor
(bad)
or
dec
push
add
call
pop
loope
and
aaa
add
inc
push
outs
mov
push
dec
and
pop
push
add
adc
pop
pop
cld
adc
outs
push
jo
add
not
or
in
add
movs
jb
(bad)
in
push
test
mov
aas
popf
mov
add
scas
mov
xchg
push
adc
or
rol
pop
ins
test
(bad)
cmp
cld
arpl
push
adc
cmp
hlt
les
lock
cmps
cwde
push
ins
pop
and
pusha
jns
in
je
nop
push
in
mov
add
aas
test
mov
repz
push
inc
dec
cmp
xlat
cld
jae
or
dec
lock
adc
add
or
xchg
mov
jl
mov
ror
adc
ror
std
add
and
cmp
and
pop
mov
and
inc
sub
mov
and
call
mov
pop
cmps
test
cli
and
pop
lock
jp
enter
or
or
adc
or
push
and
add
repnz
loope
movs
or
adc
push
clc
inc
or
rol
push
add
and
jmp
pusha
fwait
jg
and
mov
call
ror
rol
add
or
in
and
shl
adc
push
add
inc
add
add
sbb
add
loop
mov
adc
fs
inc
sbb
ror
or
shr
dec
and
loopne
cmp
lock
pushf
jecxz
add
sbb
fadd
sub
sub
nop
rcl
add
in
add
mov
inc
xor
jg
inc
or
or
in
and
jg
das
sbb
add
mov
push
or
psrld
and
(bad)
(bad)
cmp
xchg
inc
pop
mov
inc
xchg
daa
nop
cmp
sbb
jp
sub
xor
and
add
adc
push
rol
adc
cld
jecxz
sbb
jo
test
add
dec
shr
cmp
cmp
sub
pushw
or
(bad)
dec
and
add
cmp
fs
mov
sbb
rol
and
dec
imul
imul
jae
inc
or
inc
popf
pop
push
inc
add
inc
sub
add
add
test
push
inc
nop
dec
push
inc
adc
push
repnz
and
test
popa
cwde
adc
jo
arpl
mov
inc
adc
mov
or
sbb
add
stos
mov
or
pop
ret
sbb
jo
cmovge
pop
daa
xor
sbb
loopne
rol
or
nop
xor
inc
pop
inc
add
add
rol
jmp
pusha
inc
push
push
lods
dec
add
add
cwde
es
xor
es
ret
adc
aaa
nop
or
and
inc
and
mov
add
enter
and
pop
loopne
addr16
mov
add
and
and
adc
out
pop
jl
ret
inc
mov
data16
or
sub
adc
in
and
pop
add
nop
adc
and
rol
mov
or
clc
xchg
xchg
and
add
jno
(bad)
fadd
lea
inc
js
ret
inc
inc
adc
nop
stos
inc
inc
ror
test
or
nop
or
sbb
jno
adc
fs
shr
inc
test
or
loopne
mov
loopne
jo
xor
inc
mov
fadd
inc
test
rcl
add
cwde
add
(bad)
shr
nop
scas
mov
(bad)
ss
es
pop
and
and
inc
mov
add
jp
add
ins
nop
nop
mov
inc
(bad)
mov
es
test
add
pop
dec
loopne
adc
cmp
add
test
inc
mov
push
or
nop
enter
sbb
jecxz
or
inc
cdq
repnz
xchg
fs
and
inc
adc
pop
xor
push
rcl
adc
call
or
pusha
ins
(bad)
sub
fdiv
prefetchnta
shl
jp
sub
adc
and
jp
loopne
cmc
mov
xchg
and
xor
jo
adc
out
pop
push
cwde
shl
test
push
add
add
or
in
mov
pusha
dec
or
and
test
xchg
sbb
xor
bound
push
mov
pop
and
(bad)
call
jbe
add
wbinvd
inc
mov
lea
pusha
add
leave
inc
out
into
stos
(bad)
add
loopne
fs
adc
mov
xchg
enter
add
and
cmp
mov
jl
test
sbb
xchg
and
pop
and
adc
and
push
retf
(bad)
add
xchg
or
fiadd
pop
movs
into
adc
mov
shr
and
add
add
inc
sub
add
add
or
add
or
mov
inc
or
pushf
cmp
mov
rcl
dec
or
cmp
sbb
(bad)
fidiv
add
mov
push
mov
gs
(bad)
adc
repnz
xchg
shr
mov
mov
add
inc
xor
inc
test
in
jmp
mov
ins
sub
mov
(bad)
mov
sahf
stos
push
inc
sub
clc
xor
repnz
inc
mov
das
jle
clc
mov
pusha
dec
and
sar
cs
ins
fld
inc
add
push
lds
cmp
lods
jg
call
jo
and
mov
int
and
pusha
ins
xor
cmp
mov
lods
lock
inc
mov
xchg
pusha
cwde
(bad)
jmp
push
and
lock
mov
cwde
fbstp
cs
or
xor
mov
das
retf
call
rcl
nop
lea
push
loope
add
pop
mov
retf
daa
stos
int3
push
inc
push
into
sbb
or
pusha
and
push
aaa
mov
inc
sar
sub
cdq
inc
add
mov
rcl
shl
adc
xchg
jno
and
push
hlt
add
add
ins
ret
int
nop
mov
mov
iret
jae
mov
add
inc
bound
imul
dec
push
xchg
inc
adc
add
inc
sbb
rcl
mov
jo
fisubr
add
jae
aas
lea
(bad)
in
inc
lea
add
fs
dec
pop
fistp
xchg
push
dec
ret
pop
inc
add
stc
add
add
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
or
mov
or
adc
add
aaa
mov
xchg
inc
pop
inc
ret
jecxz
shr
cmp
or
std
fist
test
dec
or
test
push
fdivr
and
adc
mov
mov
jno
idiv
and
inc
inc
or
icebp
out
mov
sbb
pop
loop
adc
cmp
test
xor
jo
mov
jb
or
ficomp
xchg
inc
inc
sub
(bad)
popa
jae
xor
inc
stc
ja
sbb
push
cmp
loopne
jg
cmp
ins
dec
pop
hlt
inc
and
popa
cli
mov
push
mov
mov
fstp
inc
mov
cmp
jo
mov
mov
dec
inc
and
popa
jp
add
mov
loopne
popf
jg
scas
sub
fs
mov
mov
les
push
jmp
add
mov
cmp
mov
mov
xor
cld
ror
inc
jl
test
adc
sub
cs
xor
mov
mov
add
(bad)
and
pop
es
cmp
inc
mov
mov
inc
outs
adc
add
xor
pusha
sub
rcl
xor
clc
dec
adc
cmovl
test
add
add
les
adc
fisubr
add
nop
lds
add
stc
add
add
inc
sub
add
add
add
add
inc
dec
sbb
mov
aas
push
mov
sub
pop
and
(bad)
sub
js
lahf
(bad)
pop
jle
mov
pop
jo
aas
or
jle
mov
jae
dec
push
fldl2e
lahf
cwde
or
sub
adc
in
(bad)
lods
xchg
out
ins
(bad)
mov
sahf
mov
std
sti
inc
mov
lods
clc
loope
xchg
shr
popa
mov
inc
inc
add
inc
test
mov
lds
push
cmp
shl
dec
fwait
add
sub
ret
dec
ds
adc
jne
sub
dec
stos
jo
sub
aas
sub
cld
jnp
out
mov
sar
test
sbb
out
nop
mov
push
ds
int
rcl
add
mov
inc
inc
sti
push
in
adc
ret
lahf
inc
push
jge
dec
jae
cmp
outs
cmp
loop
and
cmp
sti
lock
pop
xchg
test
xor
mov
mov
scas
lock
xor
call
fiadd
sti
jg
clc
neg
aas
push
je
mov
push
and
ins
arpl
xor
test
leave
mov
cwde
rol
inc
cld
xchg
add
adc
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
sub
jle
les
enter
jae
cld
sbb
inc
les
dec
pushf
cmp
push
mov
or
lea
cld
inc
xor
les
mov
lahf
(bad)
sbb
push
icebp
fsubr
aaa
or
cmp
mov
ss
sbb
or
ret
fist
pop
rcl
add
loopne
jmp
inc
and
mov
arpl
rcl
ret
push
(bad)
jp
fsub
iret
pop
mov
aam
push
adc
into
test
xchg
or
xor
jmp
repz
repz
loopne
shr
cli
or
adc
rcl
cmp
mov
inc
pop
and
mov
xchg
(bad)
and
aas
adc
pop
mov
inc
push
mov
push
sub
pop
imul
mov
or
xchg
imul
adc
mov
pop
cmps
xlat
(bad)
mov
and
add
add
inc
sub
add
add
add
add
or
add
or
nop
and
sub
mov
xor
into
lea
jg
and
sbb
sub
lds
push
out
sar
adc
outs
aad
xchg
xor
cld
(bad)
loopne
add
dec
jb
fmul
mov
push
xchg
shl
mov
adc
int3
dec
adc
push
fdivr
cmps
dec
pop
mov
and
adc
xchg
mov
xor
sar
mov
sub
sub
mov
and
shl
leave
bound
push
jp
cmp
int3
add
ret
jg
or
or
dec
(bad)
or
std
adc
mov
mov
fsub
pop
adc
mov
dec
push
jno
sub
add
add
ins
or
push
push
inc
ins
loop
add
cli
pop
dec
loopne
iret
out
jp
xor
fisub
mov
mov
test
jo
inc
inc
xchg
clc
lock
xor
mov
jo
fst
or
sar
nop
ja
ins
add
add
stc
add
add
inc
sub
add
add
add
add
or
push
mov
sub
mov
ret
sbb
loope
inc
dec
cld
stos
push
sbb
or
test
fistp
mov
adc
add
sub
dec
and
xor
es
inc
mov
pop
scas
clc
mov
or
push
cmp
mov
jmp
mov
repnz
stos
stos
adc
sbb
call
es
fwait
inc
scas
push
les
les
jo
or
btc
shr
xor
dec
add
mov
es
dec
loop
sar
repnz
loopne
jno
fwait
push
sti
bound
(bad)
cmp
outs
retf
(bad)
sub
mov
push
mul
ins
mov
fwait
movs
out
scas
jle
gs
out
scas
pop
mov
add
and
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
or
add
or
mov
rol
mov
ret
xchg
add
dec
mov
inc
ja
push
pop
fsubr
(bad)
mov
pop
inc
adc
push
push
push
cmp
fs
pop
outs
add
pop
push
pop
jo
enter
dec
dec
jl
add
daa
inc
mov
cmp
adc
mov
daa
inc
dec
rcr
ret
xchg
and
loop
and
jns
or
mov
and
pop
gs
adc
popa
mov
loope
or
sub
mov
sahf
ss
movs
or
or
clc
pusha
inc
or
cmp
sbb
and
sub
or
popa
lods
pop
adc
xchg
or
mov
leave
and
push
xor
movs
or
cmp
mov
cmp
gs
sub
mov
jl
adc
test
scas
dec
test
movs
(bad)
fisub
push
sub
lods
out
test
push
test
mov
rol
mov
add
bound
and
or
mov
sub
xor
popa
pop
mov
fst
leave
das
sub
xor
inc
inc
or
jmp
retf
push
out
xor
or
xchg
push
jb
sub
push
sub
inc
call
sbb
push
or
or
int3
dec
arpl
xchg
xchg
fadd
inc
xor
sub
push
and
xchg
repnz
movs
xor
mov
mov
and
mov
(bad)
pop
mov
sub
or
mov
xor
xchg
mov
or
sbb
mov
xor
adc
lea
dec
cmc
rol
and
add
stos
add
sub
mov
jmp
add
std
cmc
add
pop
push
add
hlt
rol
and
fdiv
leave
je
loopne
or
xchg
inc
mov
adc
xor
xchg
xor
add
and
pop
xor
shl
mov
test
dec
jo
dec
add
mov
or
dec
es
dec
in
pop
mov
enter
add
outs
adc
add
loop
(bad)
retf
or
push
or
enter
and
add
adc
lods
lock
sub
lock
adc
add
sbb
add
jb
nop
lock
pop
xor
add
in
inc
lds
and
adc
fdiv
pusha
xor
nop
pusha
add
sub
adc
das
int3
mov
add
and
mov
in
repnz
pop
or
shl
add
push
les
dec
movs
add
sub
add
add
aas
mov
loopne
dec
jnp
sub
adc
es
lock
add
push
mov
mov
mov
loopne
cmp
out
push
inc
push
xchg
mov
cmp
test
mov
mov
sbb
sbb
or
push
mov
jno
adc
scas
inc
daa
push
mov
and
add
add
retf
fadd
cs
xor
pusha
mov
inc
add
aas
clc
inc
add
jo
cmp
xor
or
stos
fadd
push
and
xor
test
adc
adc
call
inc
add
test
cwde
lds
push
aaa
push
call
inc
add
sbb
fidiv
jmp
adc
adc
push
mov
and
xchg
mov
or
inc
or
inc
rol
rol
jmp
sbb
xor
fadd
shl
and
inc
or
or
and
sbb
add
push
and
nop
loopne
cmp
xchg
mov
js
push
jmp
sbb
adc
nop
adc
cmp
push
xchg
and
add
les
add
icebp
(bad)
popf
inc
add
test
and
test
cmp
add
inc
cmovp
adc
xor
cmp
cdq
(bad)
pop
push
repnz
out
inc
inc
add
add
adc
or
or
lods
xchg
xor
add
dec
xor
push
dec
mov
rol
adc
das
cmc
rol
xchg
mov
inc
add
add
mov
and
ror
ins
loop
inc
pop
js
inc
sub
dec
adc
add
adc
add
or
ficomp
mov
mov
rcr
ja
and
or
mov
pop
xchg
or
push
js
enter
rol
inc
xchg
inc
fdiv
push
retf
loope
add
mov
mov
sbb
push
xchg
js
push
out
dec
ret
or
hlt
loopne
loop
or
rol
add
inc
and
movs
push
sbb
dec
rol
hlt
pop
push
adc
push
jbe
inc
or
aam
add
loop
and
mov
or
add
nop
or
or
movs
inc
pop
dec
test
mov
(bad)
std
mov
add
inc
mov
sub
cmp
add
add
mov
mov
adc
and
test
jbe
add
(bad)
mov
stos
push
sbb
pop
mov
pop
add
hlt
ret
sub
or
add
mov
inc
imul
and
inc
xor
pop
mov
cmp
mov
adc
call
or
add
sbb
inc
push
mov
stos
or
add
(bad)
out
pop
cld
cmc
add
add
cmp
ins
test
push
ret
mov
sub
jmp
pop
mov
mov
nop
int3
adc
add
and
sbb
xchg
or
add
sub
adc
dec
popa
or
pop
es
xchg
fimul
mov
mov
cs
or
inc
add
sbb
jae
rol
fdivr
sub
sbb
xacquire
add
add
cwde
(bad)
leave
jl
or
xchg
inc
inc
mov
into
sub
sbb
test
sub
stos
sub
pusha
push
mov
add
mov
adc
mov
add
mov
push
mov
add
xchg
mov
add
test
ret
pop
out
mov
(bad)
xchg
dec
and
mov
add
or
fadd
clc
mov
inc
ror
test
adc
or
mov
add
and
mov
mov
adc
shr
add
add
js
bound
adc
mov
inc
sbb
and
pop
js
or
enter
add
sti
loopne
shl
sub
add
(bad)
mov
add
je
pop
or
or
sub
adc
add
inc
inc
jb
dec
add
nop
sub
inc
mov
add
inc
test
mov
sbb
bnd
inc
ds
mov
dec
or
inc
or
mov
lea
and
or
(bad)
ins
and
jo
pop
sub
loopne
js
inc
push
mov
or
lea
mov
dec
and
pusha
add
inc
adc
pushf
xor
sub
int
sub
ins
pusha
or
sti
ror
ret
adc
cmps
sbb
cli
jbe
call
push
push
popa
gs
pusha
dec
sbb
push
nop
sahf
daa
shr
add
nop
pop
adc
add
push
rcl
pusha
mov
add
push
rcl
dec
push
ficom
push
inc
leave
and
adc
cmp
sub
adc
inc
popa
pop
sbb
xchg
add
jp
or
sbb
push
and
adc
fs
and
dec
ror
push
outs
xor
sub
xor
or
pop
lahf
(bad)
inc
imul
inc
mov
jecxz
add
sub
cmp
inc
cmp
push
push
iret
xchg
push
xor
jno
push
xlat
mov
add
pop
das
ror
ror
dec
ror
sar
add
sbb
mov
add
sub
add
adc
add
lfs
add
push
add
and
adc
add
add
add
dec
add
popa
add
add
popa
xor
sbb
dec
add
xchg
popa
add
ins
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
cld
cld
std
std
std
(bad)
(bad)
dec
or
out
out
or
div
div
repnz
stc
stc
(bad)
(bad)
cmovl
adc
or
or
in
(bad)
fimul
push
push
adc
adc
loope
in
in
in
cmp
adc
sbb
fcmovu
fidivr
cmp
loop
loop
or
inc
inc
inc
in
in
or
push
push
push
cmp
cmp
daa
daa
div
div
xor
icebp
icebp
pop
pop
pop
rol
push
push
push
cmp
cmp
das
das
test
test
or
adc
adc
and
and
and
inc
dec
dec
dec
adc
adc
cmc
cmc
cmp
cmp
push
push
jb
jb
out
inc
inc
inc
sub
sub
movs
movs
jmp
cmp
xlat
xlat
(bad)
fbstp
sbb
(bad)
inc
inc
cs
pop
pop
inc
inc
inc
lock
xor
push
jecxz
jecxz
repz
fld
outs
aas
aas
aas
cmps
cmps
cmps
mov
mov
sbb
rcl
shl
and
dec
dec
dec
aam
aam
int3
int3
lods
lods
lods
jmp
ss
cli
cli
sbb
sub
sub
jmp
mov
mov
cmps
cmps
js
js
out
out
in
in
in
mov
fdiv
hlt
hlt
out
out
out
adc
sub
sub
sbb
sbb
push
clc
clc
clc
push
push
push
xor
pop
dec
dec
dec
pop
pop
pop
push
push
push
xchg
xchg
xchg
enter
fstp
jno
jno
sti
sti
inc
inc
inc
push
push
push
xor
xor
add
xor
xor
dec
push
push
push
sub
sub
sub
jbe
lods
lods
aaa
aaa
aaa
and
and
scas
mov
loopne
add
mov
pop
pop
pop
add
add
push
push
mov
dec
dec
dec
(bad)
fnstenv
bound
and
aad
retf
retf
retf
mov
pop
(bad)
(bad)
(bad)
int
int
push
pop
pop
pop
ins
ins
ins
(bad)
(bad)
les
xchg
scas
scas
scas
rol
dec
dec
dec
mov
mov
mov
mov
mov
ds
inc
inc
pop
pop
pop
mov
ret
mov
sbb
popa
popa
popa
jnp
jnp
pop
pop
lahf
lahf
lahf
fwait
fwait
fwait
imul
lea
inc
inc
pop
pop
pop
jae
jae
jle
(bad)
(bad)
(bad)
mov
mov
jp
xchg
xchg
xchg
iret
iret
iret
mov
pushf
pushf
gs
add
push
test
retf
ja
jg
jg
add
xchg
xchg
xchg
jns
jns
jo
mov
xchg
xchg
xchg
mov
mov
jne
imul
data16
cwde
cwde
cwde
xchg
xchg
xchg
leave
leave
leave
pop
pop
pop
add
ins
ins
rcl
rcl
rcl
call
xchg
add
sahf
push
push
push
nop
nop
nop
mov
mov
pusha
pusha
mov
arpl
add
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
inc
std
or
mov
rol
mov
ret
test
or
div
pop
hlt
sbb
mov
clc
jne
shl
arpl
inc
aas
cmp
lea
gs
loope
and
bswap
mov
jle
in
jo
and
int3
cdq
loopne
add
sub
dec
cmp
mov
and
in
dec
test
shl
call
inc
push
mov
pusha
pop
pop
repz
popa
jb
mov
pop
inc
sbb
and
es
push
arpl
aam
mov
cmps
and
jae
rol
mov
add
or
dec
xchg
and
jp
xchg
jmp
gs
add
(bad)
adc
mov
scas
or
hlt
jns
or
andnps
call
(bad)
push
inc
call
nop
push
std
inc
loope
mov
(bad)
adc
push
adc
adc
jo
add
add
lock
cmp
(bad)
in
aas
add
push
shr
sbb
ror
add
sbb
xor
dec
sub
das
sahf
fcom
adc
add
and
dec
or
and
pop
sbb
jne
pushf
rcr
mov
cmp
lds
and
arpl
adc
adc
mov
and
and
add
pop
fs
adc
aas
(bad)
add
adc
add
pop
sbb
lock
das
or
bound
cmp
push
inc
sbb
mov
sbb
and
add
rol
ss
adc
add
jno
and
mov
call
jo
add
(bad)
dec
add
adc
sbb
adc
jo
dec
cmp
and
add
add
push
sbb
mov
aas
or
or
push
cmp
sub
jae
aas
or
pop
cmp
push
hlt
int
and
xor
add
cwde
hlt
jb
mov
add
pop
sbb
je
sbb
dec
and
add
xor
push
push
add
inc
or
mov
mov
sub
mov
or
test
loope
adc
add
icebp
push
push
das
lods
and
icebp
hlt
push
ret
mov
push
pop
rcl
sub
sbb
cwde
xor
add
adc
fdiv
or
hlt
arpl
add
loopne
adc
push
add
inc
dec
or
xor
mul
or
add
sub
mov
xor
dec
or
shl
push
popa
nop
xor
xor
ror
dec
mov
test
mov
int3
inc
push
aaa
push
cmp
inc
daa
ret
adc
loope
sti
xchg
hlt
ror
jae
ret
ret
or
add
or
jno
and
clc
icebp
add
iret
sub
mov
loopne
add
xor
nop
outs
mov
sub
test
mov
iret
sbb
mov
and
ins
xor
inc
push
popf
xchg
inc
push
adc
aas
add
mov
add
je
mov
or
cmp
jmp
or
xchg
sbb
push
and
push
adc
add
add
or
xor
dec
cmp
in
popa
enter
inc
aad
enter
jo
push
add
dec
scas
lock
sub
pop
jo
xchg
ror
arpl
test
adc
add
enter
mov
adc
les
add
add
iret
or
mov
push
sub
sti
adc
push
pop
xor
inc
jl
add
clc
and
and
sub
nop
push
cwde
add
xchg
add
imul
sbb
add
fdiv
nop
sub
adc
adc
adc
push
and
in
and
and
cmp
inc
vmwrite
test
rcr
xor
or
ja
xor
and
das
or
js
sbb
and
jno
icebp
inc
mov
les
or
rol
cmp
dec
add
jns
inc
push
mov
mov
stos
push
add
adc
bound
loopne
pop
inc
add
jl
add
mov
add
call
push
dec
and
jp
xchg
cmp
cmp
adc
repnz
nop
movs
daa
cli
ret
add
mov
sub
and
jnp
push
push
js
sbb
cmps
aas
push
and
dec
jo
sub
or
xchg
repnz
mov
std
pop
add
into
cld
stc
adc
test
or
mov
add
jb
daa
add
add
cld
movs
and
arpl
xchg
cli
arpl
sbb
sub
les
js
pop
fld
in
into
add
sub
out
adc
add
rol
(bad)
js
bound
leave
jno
pushf
push
loope
pop
jl
cvttps2pi
adc
inc
xchg
and
or
xor
pop
sbb
push
push
loope
mov
mov
pop
xchg
jg
or
mov
dec
fistp
loopne
push
or
or
cmp
and
jo
sar
add
loope
cmp
rol
inc
inc
cmp
inc
cmp
push
or
adc
rol
lock
rcr
pop
pusha
test
clc
ror
leave
daa
or
and
bound
add
push
fadd
adc
mov
mov
or
or
(bad)
xor
push
mov
cmp
adc
cmp
rol
xor
or
and
push
in
inc
loope
les
sbb
rol
push
retf
inc
mov
xor
adc
push
push
mov
(bad)
mov
aaa
fs
test
inc
mov
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
xchg
jle
push
add
in
adc
aas
sub
(bad)
cmc
repz
mov
inc
int
mov
sub
and
or
enter
lds
and
fld
add
adc
add
les
ror
and
push
jle
loope
cmp
mov
cli
xor
and
and
loopne
movs
dec
xchg
xor
cmps
inc
stos
adc
lods
sub
fiadd
dec
mov
and
clc
inc
inc
mov
retf
push
jmp
mov
lods
push
mov
sub
xor
add
pop
add
xchg
cmp
mov
ficomp
(bad)
movs
dec
xor
jmp
outs
stc
add
lock
cmps
pop
mov
popa
and
mov
and
xchg
inc
mov
and
cli
test
mov
(bad)
mov
jbe
jo
xor
add
jl
and
cdq
adc
push
into
push
and
outs
std
shl
rcl
adc
inc
xchg
dec
jb
and
sbb
mov
or
mov
loope
mov
ss
pushf
mov
popa
dec
inc
mov
mov
add
xor
or
cwde
xor
or
mov
dec
add
xor
inc
dec
sbb
and
dec
inc
enter
xchg
add
xchg
arpl
sub
jl
and
add
std
pusha
jecxz
add
js
or
cmps
aam
or
adc
adc
fwait
aas
test
inc
or
push
adc
inc
or
sbb
mov
push
add
xor
std
clc
add
scas
hlt
ror
inc
call
or
and
nop
test
dec
movs
add
or
fs
and
xor
xchg
adc
arpl
and
pusha
and
inc
add
imul
dec
ss
add
ret
dec
rol
(bad)
and
nop
add
pushf
push
rcl
adc
cld
loop
and
and
add
jl
les
clc
jecxz
sub
add
invd
mov
dec
inc
add
adc
sbb
aas
push
sub
push
pop
inc
test
push
sub
nop
xor
or
push
pop
(bad)
enter
ror
rol
dec
fadd
adc
adc
mov
inc
int
popf
mov
mov
enter
add
dec
or
pop
loopne
mov
inc
clc
mov
and
sbb
(bad)
ror
inc
jmp
loope
push
push
inc
ror
xor
ret
clc
add
test
mov
les
aas
popf
hlt
push
add
addr16
ret
enter
mov
and
nop
push
push
mov
add
dec
push
sub
popa
shl
or
xor
hlt
xor
clc
cmp
jb
cmp
cwde
and
cmp
xor
clc
rol
dec
jge
mov
test
add
add
repnz
jl
mov
add
loopne
add
push
mov
sti
inc
inc
push
xor
aas
xor
inc
push
or
(bad)
add
test
outs
shl
int3
cmp
add
mov
inc
adc
add
out
or
mov
pop
sahf
icebp
add
fisttp
or
jo
das
clc
adc
cwde
mov
and
inc
inc
loopne
loopne
pop
push
xor
sbb
cld
sar
adc
sbb
enter
inc
mov
fmul
mov
test
dec
fadd
sbb
fiadd
lock
or
lock
or
loopne
scas
mov
mov
daa
cld
icebp
aas
je
add
jae
sbb
loopne
pop
lods
lea
retf
sub
or
into
adc
adc
lock
mov
inc
adc
std
cld
adc
inc
call
mov
nop
mov
(bad)
test
push
jle
test
add
jbe
or
test
nop
xor
or
push
loope
jmp
enter
adc
inc
and
add
or
xor
or
inc
fsub
or
cld
sahf
aas
jbe
mov
cli
inc
pop
ja
leave
dec
add
sbb
pop
imul
adc
loopne
sbb
aas
dec
mov
jae
and
sub
add
jl
mov
mov
adc
cdq
add
(bad)
lock
sub
add
or
or
enter
dec
jg
add
push
add
pushf
push
add
inc
xor
in
pop
add
and
add
or
inc
js
rol
inc
sbb
add
lock
add
lea
int
cmp
mov
adc
and
pop
inc
add
rol
adc
add
lock
mov
pop
leave
inc
add
xor
adc
iret
pop
or
add
mov
add
loope
pop
inc
pop
and
inc
add
in
and
in
xchg
sbb
test
mov
inc
sbb
inc
or
loope
or
and
sub
add
fsubr
pop
mov
or
call
mov
cmp
and
jbe
dec
sub
pusha
aaa
adc
dec
xchg
mov
jae
and
loopne
ret
xchg
add
or
mov
cmp
add
dec
xor
push
cmp
xor
mov
les
or
dec
jecxz
sahf
test
or
xor
adc
lock
sbb
ror
sbb
push
jle
inc
or
inc
mov
pop
jo
xor
sbb
inc
lock
cs
(bad)
inc
and
adc
inc
es
adc
lods
sbb
loopne
or
and
loopne
adc
push
mov
ret
add
cmp
mov
pop
sub
(bad)
cmp
and
(bad)
sub
dec
adc
mov
mov
or
dec
ret
inc
adc
push
test
in
add
data16
sbb
xor
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
and
push
jne
sub
mov
adc
push
or
pop
xchg
xchg
loop
and
xor
(bad)
(bad)
fbstp
push
push
mov
sbb
xchg
lods
lahf
ss
inc
mov
retf
loope
pop
mov
(bad)
mov
dec
test
mov
push
lahf
mov
loopne
ins
aad
pop
cmp
push
or
outs
cmp
mov
sub
sub
cmp
pop
pusha
mov
adc
or
inc
add
sbb
dec
inc
push
loope
loopne
sub
dec
enter
mov
or
dec
icebp
retf
add
iret
cmp
jge
ret
pop
push
imul
ret
push
mov
or
push
outs
rol
or
xor
js
in
out
xchg
aas
outs
std
clc
hlt
sub
ret
inc
mov
and
add
xchg
mov
push
inc
jo
lock
test
jo
leave
nop
dec
xchg
pop
jl
fs
mov
sbb
adc
imul
stc
mov
mov
js
dec
and
xchg
arpl
push
fwait
lock
add
adc
cwde
rol
or
clc
jae
aas
adc
(bad)
in
shr
loopne
dec
xor
lds
push
js
inc
or
aas
xor
nop
dec
das
add
test
dec
and
sub
or
sub
rol
inc
and
mov
mov
dec
les
or
pop
pusha
inc
mov
mov
jno
inc
aas
mov
add
xor
nop
xor
sub
ret
sbb
or
mov
push
lods
xchg
or
pop
cmp
nop
sub
push
xor
add
add
sub
jnp
add
xor
inc
add
push
dec
bound
nop
cmp
add
add
popa
inc
aas
xchg
mov
pop
popf
fcom
repnz
sub
push
and
jo
mov
push
dec
adc
xchg
je
add
push
push
add
das
ins
push
inc
mov
adc
ins
add
add
mov
jae
xor
push
push
add
hlt
add
adc
add
mov
es
les
lds
or
push
push
mov
adc
sub
cmp
(bad)
loopne
das
mov
pusha
sbb
or
(bad)
xor
test
nop
cmp
rol
repnz
dec
pop
repnz
jae
xor
int
inc
sbb
inc
pushf
or
in
jmp
xor
ror
mov
loope
inc
iret
js
dec
or
clc
xor
add
adc
push
sbb
and
enter
jno
sub
test
dec
loop
sbb
and
push
inc
les
sbb
mov
adc
add
push
loopne
inc
or
and
std
push
loop
adc
or
shl
or
adc
call
sub
retf
movs
nop
add
sbb
and
sbb
clc
xor
push
add
jnp
adc
dec
xor
and
pop
add
xor
ret
add
arpl
and
mov
add
mov
rol
retf
jecxz
inc
pop
movs
sar
add
xchg
pushf
sar
in
clc
mov
das
mov
daa
cmp
std
jecxz
test
inc
and
jo
add
pop
adc
(bad)
aaa
add
popf
sbb
ds
mov
push
out
pop
adc
add
add
out
loope
jnp
inc
and
sub
adc
ror
mov
adc
add
retf
xchg
cmp
and
inc
add
or
pusha
add
sub
pop
or
out
aaa
cs
mov
das
add
add
scas
repz
adc
add
add
dec
push
mov
mov
inc
sbb
adc
ss
add
cmps
and
cli
jecxz
fsub
add
add
adc
xor
and
adc
push
xchg
or
adc
popa
enter
adc
cld
or
adc
inc
js
adc
sbb
xor
ret
call
mov
pop
cdq
add
and
add
fs
in
psraw
and
shl
rcr
shl
add
cwde
and
les
push
jg
adc
rol
sub
adc
(bad)
leave
add
cld
adc
nop
xchg
adc
push
cmp
pop
add
add
and
add
outs
pop
fist
enter
retf
xchg
add
lock
pop
je
sbb
adc
inc
add
add
loopne
xchg
rol
lock
add
inc
or
rol
rol
add
inc
es
inc
leave
and
ss
jno
inc
or
or
or
and
inc
add
pop
call
or
add
or
pop
rol
xor
add
je
or
clc
loop
cmp
pop
cmp
retf
sbb
call
add
dec
fadd
or
ret
clc
dec
and
cwde
sub
push
xor
(bad)
sbb
and
mov
add
fmul
jl
add
loopne
pop
dec
hlt
dec
sbb
and
dec
int3
ret
jo
add
add
call
mov
add
mov
push
jae
sub
push
and
wrmsr
loope
adc
jno
add
sub
or
rol
and
cmp
ror
and
js
or
fadd
pop
or
dec
fs
inc
lock
adc
inc
adc
push
or
test
adc
or
xchg
fisttp
dec
sub
(bad)
fs
add
inc
or
xor
and
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
xchg
add
adc
js
mov
cmc
inc
and
lahf
mov
and
jge
adc
and
mov
loop
or
push
or
lea
scas
test
stc
lock
loope
aad
sbb
and
push
xlat
or
jo
rol
pop
inc
cs
fdiv
outs
enter
xchg
or
sbb
cmp
xchg
bound
cwde
sbb
jmp
sbb
xchg
je
mov
aad
jg
int3
or
in
mov
mov
inc
pushf
jle
leave
adc
std
mov
wrmsr
in
test
jecxz
int3
(bad)
push
nop
loopne
stc
sub
int
xchg
sahf
cli
sub
or
xor
iret
into
sub
call
ss
dec
cmp
sub
shl
outs
push
aas
sbb
push
loopne
push
mov
jp
or
sbb
jecxz
(bad)
test
mov
mov
mov
push
pextrw
adc
sub
hlt
push
adc
xchg
leave
and
and
add
nop
sbb
add
ror
ret
pop
dec
enter
ror
(bad)
and
push
push
cmp
lods
pop
mov
and
pop
std
mov
ret
add
mov
inc
mov
push
js
xchg
mov
mov
mov
and
js
inc
sbb
bndldx
js
add
push
sub
cwde
add
cmp
sub
push
add
inc
and
inc
aas
xor
pop
cmp
pusha
and
push
or
jp
rol
std
sub
inc
shld
add
xor
cmp
or
and
xchg
push
xchg
enter
xor
push
dec
sbb
and
inc
sbb
adc
add
mov
adc
daa
add
or
push
or
inc
or
les
and
cwde
rol
jl
or
add
loopne
unpcklps
mov
inc
push
xor
add
loopne
dec
push
inc
add
iret
daa
mov
dec
cmp
sbb
aas
add
rol
pop
add
rcl
or
cmp
ret
cs
cld
mov
aas
leave
test
ret
xor
sbb
add
add
and
aas
gs
(bad)
xor
xor
add
aam
ret
sub
mov
not
lea
cmp
inc
or
add
add
add
xor
cs
and
ret
add
add
cmp
inc
sub
shl
nop
and
clc
repz
cmp
mov
xor
dec
sti
inc
or
adc
inc
arpl
add
push
add
push
jmp
nop
and
sub
and
xor
add
mov
lock
je
add
push
push
popa
lea
sbb
add
dec
xchg
add
or
shl
adc
xor
and
ret
pop
sub
loopne
inc
daa
sub
adc
mov
in
(bad)
icebp
inc
add
mov
add
add
iret
and
adc
xor
adc
mov
(bad)
sbb
inc
rcl
ror
mov
xchg
sbb
push
enter
and
lock
sub
(bad)
and
hlt
dec
dec
or
jge
loope
jg
add
jmp
sub
pop
xor
loopne
and
push
push
dec
retf
jno
dec
nop
outs
adc
mov
stos
and
sbb
xchg
mov
add
mov
mov
test
sbb
aas
lods
mov
or
and
or
cwde
popa
or
icebp
sub
pusha
push
inc
inc
cmp
test
les
mov
das
add
adc
and
cmp
sbb
jno
inc
cmp
sbb
mov
xor
push
xor
mov
adc
fdiv
xor
and
sub
add
push
cmp
mov
adc
imul
mov
sub
rcl
dec
cmp
inc
cmp
inc
or
inc
cmp
jbe
xchg
rol
inc
in
dec
sub
inc
xor
and
ret
or
add
sbb
nop
lods
inc
add
pop
pop
inc
sub
adc
pusha
push
sbb
adc
inc
adc
daa
int3
mov
aas
xor
xchg
xor
add
and
js
add
inc
and
inc
or
push
xchg
sbb
or
mov
inc
add
sub
push
adc
std
nop
inc
dec
add
jg
mov
add
sub
or
imul
or
sbb
push
pop
mov
and
in
sbb
sub
and
push
and
dec
sbb
xor
add
rol
jg
pusha
mov
mov
and
mov
add
test
adc
xor
adc
add
lock
xor
adc
mov
and
add
and
jo
pop
cld
xchg
or
adc
popf
inc
jne
and
icebp
aas
dec
sbb
or
adc
push
inc
arpl
sbb
test
xor
adc
sub
mov
cmp
or
xor
add
or
and
and
mov
inc
or
mov
push
adc
inc
pop
jo
sbb
push
add
add
clc
inc
add
xchg
add
mov
inc
aas
ss
mov
adc
push
inc
pop
or
invd
and
and
add
or
mov
adc
loopne
and
add
jb
nop
cmp
push
mov
add
inc
and
shl
xchg
out
inc
and
mov
add
and
add
or
inc
sub
add
add
or
add
or
nop
and
mov
push
add
sub
in
or
mov
cmc
jecxz
and
adc
or
nop
or
das
out
call
cmp
stos
or
mov
push
mov
pop
aas
sub
xchg
repz
add
sbb
inc
(bad)
rol
and
mov
(bad)
pop
xor
push
jg
pop
aam
repnz
adc
lods
lahf
pop
adc
bound
inc
mov
cmp
add
test
add
lea
push
jle
mov
xchg
add
or
mov
ret
adc
adc
adc
add
xor
retf
or
sub
dec
popa
xor
leave
aad
push
sub
stos
xor
inc
or
cmp
call
arpl
and
sub
add
mov
(bad)
push
or
add
pop
(bad)
adc
stos
les
cmp
add
push
rcr
xor
push
cmp
iret
push
add
and
mov
and
mov
mov
adc
push
jl
retf
add
mov
or
rol
dec
push
inc
adc
hlt
adc
or
jae
sub
xchg
dec
add
add
sbb
ins
inc
push
es
loope
adc
nop
inc
retf
add
or
cmp
into
adc
ret
inc
aas
push
ins
rol
js
femms
movs
cmp
and
or
call
loopne
ret
adc
popa
mov
mov
leave
pop
xor
and
ret
or
clc
mov
adc
or
and
or
add
and
push
aaa
inc
and
add
rcl
dec
or
xchg
leave
inc
xchg
mov
sub
sub
retf
sbb
xor
add
aad
and
adc
inc
cwde
mov
xchg
add
cmp
dec
add
rol
sbb
add
add
nop
add
add
add
mov
cvttps2pi
inc
sub
and
and
dec
add
add
shl
cmps
bound
push
add
mov
inc
sbb
jl
cmp
cwde
loopne
add
or
jle
ins
mov
(bad)
or
or
rol
sub
mov
add
cld
adc
adc
sub
or
les
aas
lsl
pop
sbb
rol
push
bound
adc
call
or
jo
add
add
add
icebp
or
mov
sub
mov
add
mov
adc
push
sub
enter
mov
test
adc
and
or
les
mov
or
jo
int
jns
and
ror
inc
xor
add
pop
mov
mov
mov
mov
mov
das
retf
inc
add
lock
push
add
xor
inc
sub
inc
or
sub
pop
inc
pop
or
mov
or
inc
and
add
jl
iret
fisubr
jecxz
add
cs
or
jp
inc
mov
bound
mov
ret
or
es
or
mov
aas
dec
add
nop
cs
dec
adc
pop
in
mov
out
and
pop
inc
push
mov
sbb
mov
jae
adc
ins
loopne
adc
or
and
dec
or
sub
add
add
aas
and
xchg
popa
in
push
dec
mov
jne
mov
add
adc
dec
and
pushf
test
mov
adc
fld
pop
adc
ds
outs
out
sahf
inc
call
sub
inc
das
inc
inc
and
inc
and
add
push
mov
(bad)
adc
sbb
sub
xchg
pop
add
mov
or
add
fsub
pop
outs
xor
daa
int3
ror
adc
ss
(bad)
mov
and
sub
jbe
shr
and
or
cli
mov
add
push
ret
or
cwde
mov
add
pusha
pop
imul
fs
icebp
xchg
inc
and
inc
add
or
xor
addr16
add
aas
adc
adc
add
xor
xor
xchg
aas
aam
inc
xchg
pop
cmp
(bad)
(bad)
out
or
pusha
add
rol
push
int3
add
cwde
xchg
add
and
add
sbb
or
add
fwait
mov
dec
or
rcl
sbb
sbb
push
push
lock
and
iret
push
or
add
pop
and
inc
or
sub
gs
add
inc
add
push
add
or
or
cmps
mov
add
dec
mov
mov
add
mov
or
rcl
mov
or
add
add
and
xor
arpl
imul
add
lock
sbb
push
test
and
jb
retf
add
sub
push
inc
lods
adc
or
sahf
push
dec
adc
(bad)
mov
ds
rol
and
push
sub
pop
or
jle
ror
call
mov
adc
dec
sbb
sub
add
popa
adc
clc
and
ror
mov
pusha
xchg
clc
in
inc
adc
push
iret
clc
inc
and
adc
and
add
or
inc
sub
add
add
add
add
or
ror
sub
popa
popf
and
add
cmc
mov
(bad)
xor
repz
xchg
xchg
arpl
rcl
xchg
addr16
leave
xchg
cld
xor
sub
cli
sar
nop
fs
xor
mov
jmp
pop
shr
imul
mov
push
aad
and
sub
xor
fild
or
and
or
movs
push
inc
push
add
les
xlat
add
inc
push
(bad)
mov
and
jecxz
pusha
or
ret
xchg
retf
sbb
jmp
aas
dec
sub
pop
pop
and
or
add
mov
mov
mov
out
jo
in
or
sbb
cdq
inc
test
sub
lods
pop
cmp
loop
jo
sahf
cmp
xchg
jmp
cli
mov
int
push
add
push
mov
iret
or
or
int3
mov
sub
mov
add
sub
rol
and
inc
mov
mov
mov
mov
mov
and
aas
sbb
mov
adc
add
mov
adc
or
dec
mov
add
je
sbb
cld
jae
add
stos
xor
add
mov
movs
inc
adc
jno
jecxz
sub
adc
add
(bad)
adc
or
add
(bad)
cmp
inc
add
(bad)
pop
jo
add
mov
push
add
nop
rol
shl
popa
add
push
lock
and
jecxz
cmp
sbb
inc
add
sbb
or
dec
xor
sbb
rol
jge
mov
mov
push
push
sbb
inc
xchg
jo
add
or
add
adc
fs
test
adc
mov
mov
popa
add
or
jnp
mov
add
xchg
sub
xor
add
add
and
mov
mov
add
jae
adc
add
or
inc
sub
add
add
add
add
or
rol
or
add
sub
popa
movs
cmp
nop
dec
inc
cmp
add
sbb
add
dec
jb
add
adc
outs
adc
push
mov
mov
out
adc
ret
iret
fistp
jns
(bad)
(bad)
test
pushf
stc
and
fidiv
clc
jno
mov
mov
fistp
fisub
sub
jne
xchg
jns
call
mov
mov
add
adc
call
jae
add
test
mov
xor
rol
push
dec
rcr
and
and
retf
fld
mov
or
fcom
(bad)
out
mov
jg
lods
pop
jns
sbb
fiadd
sub
retf
mov
dec
adc
jp
xor
pop
sbb
addr16
pop
popa
xchg
add
add
add
lock
inc
xchg
add
nop
lock
inc
push
mov
cmp
add
adc
add
or
and
and
mov
xor
inc
inc
adc
xor
aas
sbb
or
xor
xchg
pop
dec
push
or
pop
pop
adc
adc
push
loope
mov
rcr
add
jo
shl
aam
ret
dec
mov
rol
add
push
jo
xor
sub
dec
add
add
or
aas
push
sub
and
mov
add
mov
je
(bad)
popa
jno
push
les
mov
push
enter
jne
xor
sub
or
add
mov
inc
add
mov
dec
or
enter
push
clc
jecxz
inc
xchg
hlt
xrelease
dec
hlt
rol
sub
or
sub
xor
(bad)
and
jl
mov
std
int3
push
stos
inc
inc
mov
add
fdiv
in
inc
or
add
ja
repz
iret
or
add
stc
add
or
inc
sub
add
add
add
add
or
ror
sub
popa
popf
and
add
cmc
mov
(bad)
xor
repz
xchg
xchg
arpl
rcl
xchg
addr16
leave
xchg
cld
xor
sub
cli
sar
nop
fs
xor
mov
jmp
pop
shr
imul
mov
push
aad
and
sub
xor
fild
or
and
or
movs
push
inc
push
add
les
xlat
add
inc
push
(bad)
mov
and
jecxz
pusha
or
ret
xchg
retf
sbb
jmp
aas
dec
sub
pop
pop
and
or
add
mov
mov
mov
out
jo
in
or
sbb
cdq
inc
test
sub
lods
pop
cmp
loop
jo
sahf
cmp
xchg
jmp
cli
mov
int
push
add
push
mov
iret
or
or
int3
mov
sub
mov
add
sub
rol
and
inc
mov
mov
mov
mov
mov
and
aas
sbb
mov
adc
add
mov
adc
or
dec
mov
add
je
sbb
cld
jae
add
stos
xor
add
mov
movs
inc
adc
jno
jecxz
sub
adc
add
(bad)
adc
or
add
(bad)
cmp
inc
add
(bad)
pop
jo
add
mov
push
add
nop
rol
shl
popa
add
push
lock
and
jecxz
cmp
sbb
inc
add
sbb
or
dec
xor
sbb
rol
jge
mov
mov
push
push
sbb
inc
xchg
jo
add
or
add
adc
fs
test
adc
mov
mov
popa
add
or
jnp
mov
add
xchg
sub
xor
add
add
and
mov
mov
add
jae
adc
add
or
inc
sub
add
add
add
add
or
rol
or
add
sub
popa
movs
cmp
nop
dec
inc
cmp
add
sbb
add
dec
jb
add
adc
outs
adc
push
mov
mov
out
adc
ret
iret
fistp
jns
(bad)
(bad)
test
pushf
stc
and
fidiv
clc
jno
mov
mov
fistp
fisub
sub
jne
xchg
jns
call
mov
mov
add
adc
call
jae
add
test
mov
xor
rol
push
dec
rcr
and
and
retf
fld
mov
or
fcom
(bad)
out
mov
jg
lods
pop
jns
sbb
fiadd
sub
retf
mov
dec
adc
jp
xor
pop
sbb
addr16
pop
popa
xchg
add
add
add
lock
inc
xchg
add
nop
lock
inc
push
mov
cmp
add
adc
add
or
and
and
mov
xor
inc
inc
adc
xor
aas
sbb
or
xor
xchg
pop
dec
push
or
pop
pop
adc
adc
push
loope
mov
rcr
add
jo
shl
aam
ret
dec
mov
rol
add
push
jo
xor
sub
dec
add
add
or
aas
push
sub
and
mov
add
mov
je
(bad)
popa
jno
push
les
mov
push
enter
jne
xor
sub
or
add
mov
inc
add
mov
dec
or
enter
push
clc
jecxz
inc
xchg
hlt
xrelease
dec
hlt
rol
sub
or
sub
xor
(bad)
and
jl
mov
std
int3
push
stos
inc
inc
mov
add
fdiv
in
inc
or
add
ja
repz
iret
or
add
stc
add
or
inc
sub
add
add
add
add
or
ror
sub
popa
popf
and
add
cmc
mov
(bad)
xor
repz
xchg
xchg
arpl
rcl
xchg
addr16
leave
xchg
cld
xor
sub
cli
sar
nop
fs
xor
mov
jmp
pop
shr
imul
mov
push
aad
and
sub
xor
fild
or
and
or
movs
push
inc
push
add
les
xlat
add
inc
push
(bad)
mov
and
jecxz
pusha
or
ret
xchg
retf
sbb
jmp
aas
dec
sub
pop
pop
and
or
add
mov
mov
mov
out
jo
in
or
sbb
cdq
inc
test
sub
lods
pop
cmp
loop
jo
sahf
cmp
xchg
jmp
cli
mov
int
push
add
push
mov
iret
or
or
int3
mov
sub
mov
add
sub
rol
and
inc
mov
mov
mov
mov
mov
and
aas
sbb
mov
adc
add
mov
adc
or
dec
mov
add
je
sbb
cld
jae
add
stos
xor
add
mov
movs
inc
adc
jno
jecxz
sub
adc
add
(bad)
adc
or
add
(bad)
cmp
inc
add
(bad)
pop
jo
add
mov
push
add
nop
rol
shl
popa
add
push
lock
and
jecxz
cmp
sbb
inc
add
sbb
or
dec
xor
sbb
rol
jge
mov
mov
push
push
sbb
inc
xchg
jo
add
or
add
adc
fs
test
adc
mov
mov
popa
add
or
jnp
mov
add
xchg
sub
xor
add
add
and
mov
mov
add
jae
adc
add
or
inc
sub
add
add
add
add
or
rol
or
add
sub
popa
movs
cmp
nop
dec
inc
cmp
add
sbb
add
dec
jb
add
adc
outs
adc
push
mov
mov
out
adc
ret
iret
fistp
jns
(bad)
(bad)
test
pushf
stc
and
fidiv
clc
jno
mov
mov
fistp
fisub
sub
jne
xchg
jns
call
mov
mov
add
adc
call
jae
add
test
mov
xor
rol
push
dec
rcr
and
and
retf
fld
mov
or
fcom
(bad)
out
mov
jg
lods
pop
jns
sbb
fiadd
sub
retf
mov
dec
adc
jp
xor
pop
sbb
addr16
pop
popa
xchg
add
add
add
lock
inc
xchg
add
nop
lock
inc
push
mov
cmp
add
adc
add
or
and
and
mov
xor
inc
inc
adc
xor
aas
sbb
or
xor
xchg
pop
dec
push
or
pop
pop
adc
adc
push
loope
mov
rcr
add
jo
shl
aam
ret
dec
mov
rol
add
push
jo
xor
sub
dec
add
add
or
aas
push
sub
and
mov
add
mov
je
(bad)
popa
jno
push
les
mov
push
enter
jne
xor
sub
or
add
mov
inc
add
mov
dec
or
enter
push
clc
jecxz
inc
xchg
hlt
xrelease
dec
hlt
rol
sub
or
sub
xor
(bad)
and
jl
mov
std
int3
push
stos
inc
inc
mov
add
fdiv
in
inc
or
add
ja
repz
iret
or
add
stc
add
or
inc
sub
add
add
add
add
or
ror
sub
popa
popf
and
add
cmc
mov
(bad)
xor
repz
xchg
xchg
arpl
rcl
xchg
addr16
leave
xchg
cld
xor
sub
cli
sar
nop
fs
xor
mov
jmp
pop
shr
imul
mov
push
aad
and
sub
xor
fild
or
and
or
movs
push
inc
push
add
les
xlat
add
inc
push
(bad)
mov
and
jecxz
pusha
or
ret
xchg
retf
sbb
jmp
aas
dec
sub
pop
pop
and
or
add
mov
mov
mov
out
jo
in
or
sbb
cdq
inc
test
sub
lods
pop
cmp
loop
jo
sahf
cmp
xchg
jmp
cli
mov
int
push
add
push
mov
iret
or
or
int3
mov
sub
mov
add
sub
rol
and
inc
mov
mov
mov
mov
mov
and
aas
sbb
mov
adc
add
mov
adc
or
dec
mov
add
je
sbb
cld
jae
add
stos
xor
add
mov
movs
inc
adc
jno
jecxz
sub
adc
add
(bad)
adc
or
add
(bad)
cmp
inc
add
(bad)
pop
jo
add
mov
push
add
nop
rol
shl
popa
add
push
lock
and
jecxz
cmp
sbb
inc
add
sbb
or
dec
xor
sbb
rol
jge
mov
mov
push
push
sbb
inc
xchg
jo
add
or
add
adc
fs
test
adc
mov
mov
popa
add
or
jnp
mov
add
xchg
sub
xor
add
add
and
mov
mov
add
jae
adc
add
or
inc
sub
add
add
add
add
or
rol
or
add
sub
popa
movs
cmp
nop
dec
inc
cmp
add
sbb
add
dec
jb
add
adc
outs
adc
push
mov
mov
out
adc
ret
iret
fistp
jns
(bad)
(bad)
test
pushf
stc
and
fidiv
clc
jno
mov
mov
fistp
fisub
sub
jne
xchg
jns
call
mov
mov
add
adc
call
jae
add
test
mov
xor
rol
push
dec
rcr
and
and
retf
fld
mov
or
fcom
(bad)
out
mov
jg
lods
pop
jns
sbb
fiadd
sub
retf
mov
dec
adc
jp
xor
pop
sbb
addr16
pop
popa
xchg
add
add
add
lock
inc
xchg
add
nop
lock
inc
push
mov
cmp
add
adc
add
or
and
and
mov
xor
inc
inc
adc
xor
aas
sbb
or
xor
xchg
pop
dec
push
or
pop
pop
adc
adc
push
loope
mov
rcr
add
jo
shl
aam
ret
dec
mov
rol
add
push
jo
xor
sub
dec
add
add
or
aas
push
sub
and
mov
add
mov
je
(bad)
popa
jno
push
les
mov
push
enter
jne
xor
sub
or
add
mov
inc
add
mov
dec
or
enter
push
clc
jecxz
inc
xchg
hlt
xrelease
dec
hlt
rol
sub
or
sub
xor
(bad)
and
jl
mov
std
int3
push
stos
inc
inc
mov
add
fdiv
in
inc
or
add
ja
repz
iret
or
add
stc
add
or
inc
sub
add
add
add
add
or
ror
sub
popa
popf
and
add
cmc
mov
(bad)
xor
repz
xchg
xchg
arpl
rcl
xchg
addr16
leave
xchg
cld
xor
sub
cli
sar
nop
fs
xor
mov
jmp
pop
shr
imul
mov
push
aad
and
sub
xor
fild
or
and
or
movs
push
inc
push
add
les
xlat
add
inc
push
(bad)
mov
and
jecxz
pusha
or
ret
xchg
retf
sbb
jmp
aas
dec
sub
pop
pop
and
or
add
mov
mov
mov
out
jo
in
or
sbb
cdq
inc
test
sub
lods
pop
cmp
loop
jo
sahf
cmp
xchg
jmp
cli
mov
int
push
add
push
mov
iret
or
or
int3
mov
sub
mov
add
sub
rol
and
inc
mov
mov
mov
mov
mov
and
aas
sbb
mov
adc
add
mov
adc
or
dec
mov
add
je
sbb
cld
jae
add
stos
xor
add
mov
movs
inc
adc
jno
jecxz
sub
adc
add
(bad)
adc
or
add
(bad)
cmp
inc
add
(bad)
pop
jo
add
mov
push
add
nop
rol
shl
popa
add
push
lock
and
jecxz
cmp
sbb
inc
add
sbb
or
dec
xor
sbb
rol
jge
mov
mov
push
push
sbb
inc
xchg
jo
add
or
add
adc
fs
test
adc
mov
mov
popa
add
or
jnp
mov
add
xchg
sub
xor
add
add
and
mov
mov
add
jae
adc
add
or
inc
sub
add
add
add
add
or
rol
or
add
sub
popa
movs
cmp
nop
dec
inc
cmp
add
sbb
add
dec
jb
add
adc
outs
adc
push
mov
mov
out
adc
ret
iret
fistp
jns
(bad)
(bad)
test
pushf
stc
and
fidiv
clc
jno
mov
mov
fistp
fisub
sub
jne
xchg
jns
call
mov
mov
add
adc
call
jae
add
test
mov
xor
rol
push
dec
rcr
and
and
retf
fld
mov
or
fcom
(bad)
out
mov
jg
lods
pop
jns
sbb
fiadd
sub
retf
mov
dec
adc
jp
xor
pop
sbb
addr16
pop
popa
xchg
add
add
add
lock
inc
xchg
add
nop
lock
inc
push
mov
cmp
add
adc
add
or
and
and
mov
xor
inc
inc
adc
xor
aas
sbb
or
xor
xchg
pop
dec
push
or
pop
pop
adc
adc
push
loope
mov
rcr
add
jo
shl
aam
ret
dec
mov
rol
add
push
jo
xor
sub
dec
add
add
or
aas
push
sub
and
mov
add
mov
je
(bad)
popa
jno
push
les
mov
push
enter
jne
xor
sub
or
add
mov
inc
add
mov
dec
or
enter
push
clc
jecxz
inc
xchg
hlt
xrelease
dec
hlt
rol
sub
or
sub
xor
(bad)
and
jl
mov
std
int3
push
stos
inc
inc
mov
add
fdiv
in
inc
or
add
ja
repz
iret
or
add
stc
add
or
inc
sub
add
add
add
add
or
ror
sub
popa
popf
and
add
cmc
mov
(bad)
xor
repz
xchg
xchg
arpl
rcl
xchg
addr16
leave
xchg
cld
xor
sub
cli
sar
nop
fs
xor
mov
jmp
pop
shr
imul
mov
push
aad
and
sub
xor
fild
or
and
or
movs
push
inc
push
add
les
xlat
add
inc
push
(bad)
mov
and
jecxz
pusha
or
ret
xchg
retf
sbb
jmp
aas
dec
sub
pop
pop
and
or
add
mov
mov
mov
out
jo
in
or
sbb
cdq
inc
test
sub
lods
pop
cmp
loop
jo
sahf
cmp
xchg
jmp
cli
mov
int
push
add
push
mov
iret
or
or
int3
mov
sub
mov
add
sub
rol
and
inc
mov
mov
mov
mov
mov
and
aas
sbb
mov
adc
add
mov
adc
or
dec
mov
add
je
sbb
cld
jae
add
stos
xor
add
mov
movs
inc
adc
jno
jecxz
sub
adc
add
(bad)
adc
or
add
(bad)
cmp
inc
add
(bad)
pop
jo
add
mov
push
add
nop
rol
shl
popa
add
push
lock
and
jecxz
cmp
sbb
inc
add
sbb
or
dec
xor
sbb
rol
jge
mov
mov
push
push
sbb
inc
xchg
jo
add
or
add
adc
fs
test
adc
mov
mov
popa
add
or
jnp
mov
add
xchg
sub
xor
add
add
and
mov
mov
add
jae
adc
add
or
inc
sub
add
add
add
add
or
rol
or
add
sub
popa
movs
cmp
nop
dec
inc
cmp
add
sbb
add
dec
jb
add
adc
outs
adc
push
mov
mov
out
adc
ret
iret
fistp
jns
(bad)
(bad)
test
pushf
stc
and
fidiv
clc
jno
mov
mov
fistp
fisub
sub
jne
xchg
jns
call
mov
mov
add
adc
call
jae
add
test
mov
xor
rol
push
dec
rcr
and
and
retf
fld
mov
or
fcom
(bad)
out
mov
jg
lods
pop
jns
sbb
fiadd
sub
retf
mov
dec
adc
jp
xor
pop
sbb
addr16
pop
popa
xchg
add
add
add
lock
inc
xchg
add
nop
lock
inc
push
mov
cmp
add
adc
add
or
and
and
mov
xor
inc
inc
adc
xor
aas
sbb
or
xor
xchg
pop
dec
push
or
pop
pop
adc
adc
push
loope
mov
rcr
add
jo
shl
aam
ret
dec
mov
rol
add
push
jo
xor
sub
dec
add
add
or
aas
push
sub
and
mov
add
mov
je
(bad)
popa
jno
push
les
mov
push
enter
jne
xor
sub
or
add
mov
inc
add
mov
dec
or
enter
push
clc
jecxz
inc
xchg
hlt
xrelease
dec
hlt
rol
sub
or
sub
xor
(bad)
and
jl
mov
std
int3
push
stos
inc
inc
mov
add
fdiv
in
inc
or
add
ja
repz
iret
or
add
stc
add
or
inc
sub
add
add
add
add
or
ror
sub
popa
popf
and
add
cmc
mov
(bad)
xor
repz
xchg
xchg
arpl
rcl
xchg
addr16
leave
xchg
cld
xor
sub
cli
sar
nop
fs
xor
mov
jmp
pop
shr
imul
mov
push
aad
and
sub
xor
fild
or
and
or
movs
push
inc
push
add
les
xlat
add
inc
push
(bad)
mov
and
jecxz
pusha
or
ret
xchg
retf
sbb
jmp
aas
dec
sub
pop
pop
and
or
add
mov
mov
mov
out
jo
in
or
sbb
cdq
inc
test
sub
lods
pop
cmp
loop
jo
sahf
cmp
xchg
jmp
cli
mov
int
push
add
push
mov
iret
or
or
int3
mov
sub
mov
add
sub
rol
and
inc
mov
mov
mov
mov
mov
and
aas
sbb
mov
adc
add
mov
adc
or
dec
mov
add
je
sbb
cld
jae
add
stos
xor
add
mov
movs
inc
adc
jno
jecxz
sub
adc
add
(bad)
adc
or
add
(bad)
cmp
inc
add
(bad)
pop
jo
add
mov
push
add
nop
rol
shl
popa
add
push
lock
and
jecxz
cmp
sbb
inc
add
sbb
or
dec
xor
sbb
rol
jge
mov
mov
push
push
sbb
inc
xchg
jo
add
or
add
adc
fs
test
adc
mov
mov
popa
add
or
jnp
mov
add
xchg
sub
xor
add
add
and
mov
mov
add
jae
adc
add
or
inc
sub
add
add
add
add
or
rol
or
add
sub
popa
movs
cmp
nop
dec
inc
cmp
add
sbb
add
dec
jb
add
adc
outs
adc
push
mov
mov
out
adc
ret
iret
fistp
jns
(bad)
(bad)
test
pushf
stc
and
fidiv
clc
jno
mov
mov
fistp
fisub
sub
jne
xchg
jns
call
mov
mov
add
adc
call
jae
add
test
mov
xor
rol
push
dec
rcr
and
and
retf
fld
mov
or
fcom
(bad)
out
mov
jg
lods
pop
jns
sbb
fiadd
sub
retf
mov
dec
adc
jp
xor
pop
sbb
addr16
pop
popa
xchg
add
add
add
lock
inc
xchg
add
nop
lock
inc
push
mov
cmp
add
adc
add
or
and
and
mov
xor
inc
inc
adc
xor
aas
sbb
or
xor
xchg
pop
dec
push
or
pop
pop
adc
adc
push
loope
mov
rcr
add
jo
shl
aam
ret
dec
mov
rol
add
push
jo
xor
sub
dec
add
add
or
aas
push
sub
and
mov
add
mov
je
(bad)
popa
jno
push
les
mov
push
enter
jne
xor
sub
or
add
mov
inc
add
mov
dec
or
enter
push
clc
jecxz
inc
xchg
hlt
xrelease
dec
hlt
rol
sub
or
sub
xor
(bad)
and
jl
mov
std
int3
push
stos
inc
inc
mov
add
fdiv
in
inc
or
add
ja
repz
iret
or
add
stc
add
or
inc
sub
add
add
add
add
or
ror
sub
popa
popf
and
add
cmc
mov
(bad)
xor
repz
xchg
xchg
arpl
rcl
xchg
addr16
leave
xchg
cld
xor
sub
cli
sar
nop
fs
xor
mov
jmp
pop
shr
imul
mov
push
aad
and
sub
xor
fild
or
and
or
movs
push
inc
push
add
les
xlat
add
inc
push
(bad)
mov
and
jecxz
pusha
or
ret
xchg
retf
sbb
jmp
aas
dec
sub
pop
pop
and
or
add
mov
mov
mov
out
jo
in
or
sbb
cdq
inc
test
sub
lods
pop
cmp
loop
jo
sahf
cmp
xchg
jmp
cli
mov
int
push
add
push
mov
iret
or
or
int3
mov
sub
mov
add
sub
rol
and
inc
mov
mov
mov
mov
mov
and
aas
sbb
mov
adc
add
mov
adc
or
dec
mov
add
je
sbb
cld
jae
add
stos
xor
add
mov
movs
inc
adc
jno
jecxz
sub
adc
add
(bad)
adc
or
add
(bad)
cmp
inc
add
(bad)
pop
jo
add
mov
push
add
nop
rol
shl
popa
add
push
lock
and
jecxz
cmp
sbb
inc
add
sbb
or
dec
xor
sbb
rol
jge
mov
mov
push
push
sbb
inc
xchg
jo
add
or
add
adc
fs
test
adc
mov
mov
popa
add
or
jnp
mov
add
xchg
sub
xor
add
add
and
mov
mov
add
jae
adc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
nop
mov
sub
or
inc
in
adc
cmp
xchg
mov
mov
rol
sub
loopne
lds
jo
jo
ror
lds
push
and
adc
enter
adc
cli
xchg
in
(bad)
sub
add
out
jbe
pop
adc
inc
test
and
clc
ja
inc
mov
push
in
movs
int3
imul
mov
inc
push
xchg
xchg
xchg
cmps
or
inc
mov
and
jle
inc
clc
add
or
pop
shr
icebp
push
adc
ret
cmp
pop
xchg
sbb
jmp
mov
fdivr
sub
(bad)
aam
dec
iret
ins
in
pusha
or
or
imul
std
lock
mov
push
(bad)
in
mov
mov
mov
pusha
inc
dec
mov
mov
add
inc
add
enter
or
test
sbb
mov
add
jg
(bad)
das
xor
xor
(bad)
sub
fs
and
or
xchg
retf
cmp
dec
push
ret
jge
hlt
push
adc
xchg
leave
and
loope
and
sub
xchg
adc
(bad)
adc
add
enter
ror
(bad)
and
push
push
cmp
mov
push
sbb
leave
pop
std
mov
ret
add
mov
inc
(bad)
loopne
cmp
dec
and
cmp
dec
inc
call
popa
nop
push
sar
fsub
adc
aas
ins
rcl
or
aam
sbb
icebp
(bad)
xor
xchg
jo
inc
add
xor
adc
mov
and
pop
sub
ror
adc
or
pop
adc
nop
add
inc
or
dec
aas
cmp
repz
and
hlt
repz
inc
ret
enter
xor
push
dec
sbb
inc
sbb
prefetch
lods
mov
mov
adc
daa
(bad)
clc
push
push
and
aas
ins
mov
nop
ror
and
jl
sbb
or
retf
pop
into
nop
inc
add
(bad)
hlt
mov
adc
xchg
in
popf
ja
inc
push
xor
add
sub
retf
adc
add
leave
and
fcom
dec
or
sub
xor
or
test
lock
and
in
inc
xor
in
int
pop
dec
inc
push
add
lock
sbb
mov
sub
mov
sbb
inc
sbb
cmp
inc
add
add
pop
(bad)
and
cs
and
aas
add
add
add
lock
add
ret
aas
xchg
repz
sub
and
push
aam
inc
sub
and
cmp
mov
movs
xor
inc
xor
adc
aas
xchg
mov
getsec
lods
clc
add
leave
int3
or
mov
call
jge
xor
iret
adc
adc
int3
xchg
test
or
icebp
mov
sub
mov
mov
add
add
popf
sar
mov
daa
in
(bad)
repnz
add
into
in
lods
(bad)
in
retf
or
int
mov
xor
mov
rcl
ror
mov
daa
shl
pop
enter
add
in
push
(bad)
dec
mov
call
inc
jg
jno
rol
add
inc
pop
xchg
and
sbb
sbb
add
xor
inc
push
and
(bad)
adc
adc
inc
inc
mov
test
dec
loopne
aas
hlt
jo
sbb
mov
cmp
mov
sub
xchg
aas
lods
and
hlt
ret
or
and
or
adc
bound
add
enter
nop
sub
rcr
retf
(bad)
add
add
mov
sbb
shl
je
adc
sbb
adc
xchg
mov
inc
and
rcl
adc
fs
test
pusha
push
stc
nop
or
loopne
shr
add
adc
push
add
mov
aaa
add
or
nop
popa
and
jo
xlat
and
add
and
sbb
shl
aad
adc
fs
mov
inc
or
cmps
test
and
cmp
sbb
xor
dec
cwde
(bad)
aas
adc
xchg
cld
inc
adc
add
adc
add
cld
add
xor
cmps
cmp
shr
sbb
test
push
inc
sbb
inc
pop
push
xor
add
mov
or
rol
add
(bad)
add
push
cli
wbinvd
in
daa
or
inc
or
xchg
test
in
cwde
xor
add
ret
or
loop
and
jmp
inc
sbb
or
out
sbb
pusha
inc
push
add
or
adc
or
dec
or
xchg
inc
add
sbb
sbb
pop
push
pusha
add
mov
adc
icebp
add
sbb
add
inc
daa
inc
xor
dec
test
clc
loopne
add
inc
sbb
add
pusha
cmps
push
sbb
push
inc
cld
add
pop
mov
or
sbb
cs
(bad)
in
inc
or
push
mov
ret
sbb
mov
sub
pusha
xor
push
inc
es
mov
cli
popa
adc
shl
loope
adc
and
ss
mov
add
add
and
adc
push
js
push
or
sbb
nop
add
sbb
inc
add
inc
shl
xchg
and
jo
mov
rol
mov
mov
add
sub
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
sbb
or
pop
enter
jle
es
pop
push
enter
pusha
nop
mov
cdq
mov
xor
inc
pop
xchg
mov
cmc
mov
and
loopne
mov
jae
scas
push
cwde
or
les
xchg
push
lock
inc
lea
ds
lds
push
jg
call
sbb
push
cmp
cmp
xchg
inc
or
stos
xor
pop
pusha
jo
jb
push
add
ins
ret
add
add
js
dec
inc
(bad)
outs
mov
pop
inc
dec
and
xor
aas
punpcklbw
cmp
mov
pop
cmps
or
lea
hlt
mov
wrmsr
and
in
out
xchg
aas
outs
std
clc
hlt
sub
ret
inc
mov
mov
icebp
cmps
and
xchg
mov
push
inc
adc
fild
jmp
xchg
and
test
in
mov
icebp
imul
stc
mov
mov
js
or
cmps
adc
(bad)
adc
sub
lock
add
adc
cwde
rol
or
clc
jae
aas
adc
(bad)
in
shr
loopne
ret
push
ss
push
sub
popa
or
aas
xor
nop
dec
das
add
test
dec
and
sub
add
rol
adc
cmp
icebp
or
lar
mov
and
adc
push
dec
push
sbb
lds
std
fcom
or
push
hlt
mov
mov
push
shl
shr
cmp
adc
inc
cmp
mov
xor
std
mov
rcl
in
and
push
inc
dec
xor
sbb
mov
and
fstp
rol
inc
test
add
bound
add
test
push
adc
adc
adc
push
sbb
add
inc
mov
das
ins
push
inc
add
xchg
test
sub
pop
push
sar
adc
dec
das
push
push
add
cmp
inc
add
sbb
shl
(bad)
mov
inc
push
out
or
ret
or
sbb
add
test
dec
in
adc
sub
(bad)
hlt
mov
push
ss
in
pop
cmp
mov
ror
ret
sbb
pop
mov
and
ja
or
sbb
add
xor
or
movs
sbb
or
aas
outs
(bad)
add
push
pushf
inc
ins
ins
(bad)
int
or
pushf
add
add
stc
clc
inc
push
push
add
mov
and
mov
and
add
adc
rol
pusha
sub
cmp
mov
inc
sbb
add
add
add
hlt
adc
mov
xor
loopne
jmp
xchg
dec
cld
push
or
dec
fnsave
lea
les
xor
add
adc
add
push
nop
and
xor
jl
cmp
xor
cmp
add
test
dec
cmp
gs
aas
and
sub
or
add
ins
ror
sub
pop
daa
cmp
cmp
ret
push
jno
inc
or
rcr
mov
in
inc
sub
mov
add
nop
adc
add
or
ret
pop
sbb
add
adc
adc
push
cmps
sub
retf
pop
push
loopne
inc
pop
mov
adc
mov
(bad)
cld
and
inc
inc
add
mov
or
xor
inc
adc
lahf
and
enter
mov
xor
cs
push
xor
in
xchg
add
or
sub
push
call
push
pop
dec
jecxz
loopne
mov
add
mov
and
or
mov
add
shl
add
or
mov
inc
xchg
loope
dec
or
xchg
and
fsubr
(bad)
rcr
imul
cmp
pop
and
add
nop
mov
push
inc
enter
pop
inc
push
pusha
daa
cmp
(bad)
xor
loope
xor
mov
xor
or
popa
enter
nop
bound
aas
data16
xor
add
mov
and
or
mov
and
in
sbb
add
sbb
or
jnp
aas
ficom
add
xor
add
mov
push
or
add
push
inc
jle
arpl
add
or
les
jl
sub
inc
adc
and
add
pop
adc
mov
add
inc
xchg
pop
or
dec
adc
push
add
add
push
xchg
dec
inc
push
enter
aas
add
jecxz
(bad)
lock
push
add
mov
sbb
icebp
sub
pop
sbb
xchg
add
clc
mov
push
test
push
add
mov
sbb
fadd
nop
lds
retf
inc
fsub
repz
xor
cmc
adc
push
xchg
enter
call
(bad)
jae
and
mov
add
mov
pusha
add
call
push
push
cli
inc
push
mov
adc
add
inc
add
xor
je
xchg
cli
ror
adc
mov
sbb
mov
and
test
lock
add
xchg
js
pop
add
xchg
scas
sub
push
std
adc
inc
movs
and
pushf
fist
xor
sub
add
test
cmp
or
ror
movs
mov
jae
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
iret
or
lock
sbb
bound
adc
js
pop
pop
push
cmp
mov
mov
mov
xor
pop
adc
popa
mov
add
cmp
adc
pop
sub
xor
repz
add
push
inc
js
pusha
xchg
stc
mov
sub
jmp
or
adc
nop
nop
add
fcomp
pop
inc
pop
pop
fdiv
inc
stos
pusha
icebp
xchg
xchg
jno
cmps
(bad)
or
pop
cmp
add
push
cmp
push
jo
or
jb
es
inc
lods
dec
xchg
push
in
sub
fcomip
add
mov
ret
ret
inc
or
xor
cwde
jp
mov
mov
cmp
mov
mov
outs
lds
jg
cli
jne
loopne
sub
xchg
or
mov
add
loopne
les
test
and
xor
fdiv
add
sysret
inc
and
or
(bad)
dec
adc
sbb
or
leave
cmp
or
inc
cmp
test
fisttp
fldenv
jae
sub
lea
jb
push
pusha
(bad)
loopne
and
push
pusha
mov
inc
fmul
adc
or
cwde
adc
push
and
sbb
inc
inc
sbb
mov
inc
aas
data16
adc
jns
add
dec
aaa
pushf
loopne
dec
cmp
sbb
jae
test
mov
dec
add
inc
and
mov
inc
add
test
jmp
push
inc
jle
lods
ror
dec
aas
fisttp
dec
and
xor
iret
or
ret
rcl
cmps
sbb
sbb
dec
loopne
sbb
or
mov
or
leave
or
mov
push
fxtract
adc
or
inc
and
lds
and
pop
mov
or
jb
add
push
call
cmp
mov
pop
test
fmul
xor
nop
pusha
mov
dec
inc
add
adc
sbb
aas
push
sub
push
pop
inc
test
push
sub
nop
xor
or
push
pop
(bad)
enter
loop
adc
and
add
adc
xor
sub
daa
das
pusha
nop
test
and
fs
and
jl
iret
and
nop
or
test
pop
ins
mov
xor
lea
dec
adc
ins
pusha
add
les
dec
mov
test
xchg
jmp
ror
mov
ror
and
xchg
push
add
adc
fnstsw
inc
dec
push
mov
cmp
push
sub
popa
shl
or
xor
hlt
xor
pushf
aas
out
and
sbb
test
popa
lods
aas
shl
lods
aas
test
adc
adc
pop
fimul
test
or
mov
or
jmp
and
out
nop
(bad)
ror
pop
lock
test
mov
fadd
loopne
inc
retf
ret
sbb
neg
add
(bad)
or
xor
jne
adc
mov
mov
int3
pop
loope
xchg
pop
cmp
add
or
adc
adc
and
add
sbb
das
movs
add
(bad)
add
dec
add
enter
inc
or
and
pop
ins
(bad)
jg
inc
and
loop
ins
or
rol
inc
clc
and
js
inc
(bad)
in
push
mov
loopne
mov
call
add
rcl
sbb
aam
inc
fdiv
xchg
or
psubb
nop
and
bound
or
or
add
call
les
inc
sub
aam
or
or
jo
inc
and
mov
adc
sbb
add
jo
hlt
or
or
adc
mov
sbb
add
jo
adc
pop
cmp
add
std
mov
and
pop
jmp
movaps
add
inc
jo
or
iret
pop
movs
pop
pop
mov
add
add
lahf
fld
pop
add
loopne
adc
and
sahf
mov
cmp
xchg
mov
or
add
adc
adc
and
lock
out
cld
mov
push
xor
or
and
js
inc
add
adc
push
adc
sbb
add
mov
cld
push
call
add
jg
add
repz
and
mov
and
pusha
push
and
pop
inc
rol
mov
adc
cmp
popf
cmp
mov
add
inc
paddb
push
add
mov
pop
dec
adc
adc
add
mov
xor
adc
call
pop
and
push
lock
outs
sub
stos
push
into
xchg
or
sbb
movntq
or
popa
push
adc
add
loopne
sbb
test
jl
add
(bad)
sbb
add
sub
adc
push
add
ins
bound
and
add
sub
add
call
(bad)
cmp
cmp
ror
pop
mov
push
std
adc
loopne
popa
mov
ror
and
jle
inc
add
push
or
imul
cmp
or
fadd
adc
loop
std
mov
inc
mov
mov
in
(bad)
call
push
test
sbb
icebp
pop
mov
sbb
add
cs
sbb
add
stos
adc
push
add
bound
fsub
and
add
sub
inc
sub
add
add
add
add
or
add
or
mov
and
pop
and
pop
pushf
dec
mov
aas
or
mov
clc
jne
shl
sbb
mov
jle
push
mov
dec
ss
inc
loop
adc
pushf
jne
setge
std
neg
loope
inc
or
push
ficom
xor
dec
add
pop
dec
dec
mov
and
dec
sbb
mov
mov
imul
and
into
push
mov
imul
test
inc
loopne
mov
jno
add
and
mov
pop
jne
and
mov
adc
int3
add
popa
inc
test
shl
inc
xchg
adc
shl
xchg
inc
test
sub
ss
rcl
or
add
dec
sti
dec
and
mov
leave
shl
fnstenv
sbb
push
or
pcmpgtd
js
imul
sbb
inc
test
xor
les
mov
dec
mov
adc
or
dec
test
xchg
mov
add
adc
xor
and
inc
dec
adc
outs
clc
loop
sbb
adc
clc
mov
aas
xor
mov
and
movs
lock
je
inc
adc
cmp
int
(bad)
dec
adc
sbb
dec
and
cmp
hlt
add
or
mov
cwde
push
inc
pop
mov
cdq
xor
sub
xor
adc
jae
push
inc
push
add
add
push
dec
aas
sub
sub
cmp
push
icebp
mov
push
ror
cmp
jo
add
jns
xor
and
nop
ret
add
xor
inc
mov
cmp
aas
call
add
sbb
sub
jnp
xchg
add
cmp
push
push
ror
xchg
rol
add
mov
pusha
push
inc
loope
rol
test
movs
aas
fcomi
ret
inc
push
cwde
fadd
inc
ins
add
shl
add
inc
mov
cwde
test
mov
and
mov
cmp
enter
add
or
jge
icebp
dec
pop
aam
mov
and
push
ja
or
and
sub
sbb
shl
scas
or
add
les
les
sbb
aam
lds
sbb
push
ret
mov
push
pop
rcl
sub
sbb
cwde
xor
lods
add
adc
fdiv
or
hlt
arpl
add
loopne
adc
push
sub
dec
or
mov
lock
cs
mov
jno
rol
or
ficom
and
pop
ror
mov
es
mov
add
mov
ins
push
je
retf
ins
in
add
adc
je
dec
adc
mov
push
mov
or
mov
sub
icebp
scas
inc
push
xor
shr
dec
data16
sbb
add
pop
pop
or
dec
push
(bad)
pushf
repnz
adc
add
xor
add
add
push
out
imul
ror
and
ret
enter
adc
rcl
ror
aam
or
ror
add
mov
and
(bad)
lock
pop
or
call
add
push
pop
fcomip
xchg
add
or
sbb
out
adc
add
ss
(bad)
rol
aas
test
xchg
and
sub
sbb
add
ror
jg
popa
sbb
inc
aas
mov
adc
fadd
add
mov
ffree
xchg
rcl
lock
dec
add
loopne
cmp
dec
xor
inc
popa
jae
mov
out
xchg
test
and
mov
or
inc
cmp
(bad)
jl
pusha
and
popa
add
out
mov
cs
add
stos
mov
outs
jl
xchg
add
add
sub
add
pusha
mov
push
sbb
push
or
mov
lock
jg
nop
add
rol
in
push
jg
ret
adc
inc
jg
loopne
sub
sub
ror
add
or
jno
or
mov
ds
add
or
rcl
lock
mov
adc
loopne
inc
aam
mov
ret
arpl
lock
mov
ds
mov
cmp
add
push
jae
xchg
inc
pop
test
add
lock
dec
mov
xchg
ficomp
ret
call
adc
and
mov
data16
inc
adc
leave
adc
mov
sub
and
cmp
retf
js
add
mov
or
(bad)
cmovp
or
push
sahf
adc
adc
adc
or
xor
(bad)
push
rol
mov
inc
add
imul
mov
xchg
ins
rcr
add
add
mov
dec
sub
pop
test
nop
cmp
jae
sbb
sub
add
adc
add
add
es
sub
add
and
inc
sub
test
add
adc
loope
sbb
mov
arpl
ret
xor
adc
xor
pop
or
add
ins
cmp
xchg
pusha
xor
or
lock
aas
js
sub
add
mov
cmp
add
dec
sbb
sbb
add
sbb
rsqrtps
or
adc
aas
cwde
jno
or
bound
stc
inc
add
push
add
lods
inc
adc
inc
add
add
shr
mov
add
push
pop
cld
popa
pop
les
adc
xchg
(bad)
inc
sbb
add
inc
jo
push
xor
pop
inc
fadd
cmp
add
sub
or
or
push
inc
xor
xor
and
dec
or
or
enter
call
add
aas
dec
mov
std
adc
add
add
sbb
adc
add
add
dec
add
jns
add
add
add
popa
xor
sbb
dec
add
sub
add
ins
je
add
add
inc
dec
inc
cmp
popa
cmp
inc
repz
std
in
int3
clc
clc
clc
pop
pop
or
rcl
movs
movs
movs
addr16
loope
enter
dec
div
imul
fcmovne
mov
cwde
cwde
pop
sbb
ja
ja
ret
hlt
hlt
hlt
fstp
xlat
sti
jmp
fstp
fdivp
cmps
push
jmp
lock
in
mov
in
stc
jmp
mul
xchg
out
out
out
mov
sub
mov
retf
retf
pop
pop
pop
(bad)
(bad)
in
in
push
push
push
jmp
xor
lock
stos
call
dec
cli
mov
repnz
cmp
cmp
out
pop
push
pop
and
and
(bad)
inc
inc
test
adc
bnd
(bad)
cld
lock
lods
jb
fucom
lods
inc
adc
in
icebp
jl
fndisi(8087
call
mov
stc
lock
aam
out
iret
mov
jmp
cmp
push
clc
out
mul
shl
nop
imul
mov
jmp
imul
stos
mul
cwde
icebp
xlat
mov
(bad)
mul
xlat
(bad)
neg
rcl
fcmovnu
(bad)
out
into
scas
call
mov
call
jmp
frstor
inc
dec
in
lods
jbe
fcmovu
jecxz
in
in
mov
fsubr
repz
loopne
in
mov
sub
cmp
call
jmp
mov
fidivr
jmp
icebp
in
jmp
test
in
imul
mov
shl
jecxz
icebp
cld
call
and
cwde
sub
loopne
fdivr
ret
(bad)
(bad)
loope
jp
out
fbstp
into
cmc
jmp
aaa
aaa
aaa
neg
mov
push
push
(bad)
fsubr
loop
xor
sahf
fcmovu
ficom
out
fld
out
jecxz
jmp
iret
out
in
repz
call
cld
loope
stc
jmp
fcmove
ret
out
in
out
out
out
in
out
out
call
scas
sub
sub
or
call
push
push
push
cli
call
jmp
ret
(bad)
fnstsw
(bad)
(bad)
(bad)
jmp
jmp
fdiv
movups
jmp
jmp
out
jecxz
jecxz
and
out
out
in
in
jmp
fcmovnu
(bad)
stc
stc
out
in
out
cli
out
in
jmp
sti
cli
cli
cli
daa
daa
daa
add
adc
(bad)
(bad)
pmulhw
in
inc
inc
(bad)
fistp
cmps
js
xchg
pop
jl
jl
ds
test
call
xor
out
dec
dec
dec
cmc
cmc
cmc
out
out
out
out
in
out
out
out
jmp
div
lock
jo
icebp
icebp
repnz
iret
lods
clc
sti
(bad)
cmc
call
(bad)
sti
imul
fild
test
out
in
in
in
in
clc
jmp
out
ficomp
cld
(bad)
(bad)
(bad)
std
std
std
add
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
or
add
or
mov
rol
inc
and
test
and
add
inc
pop
movs
dec
dec
and
mov
or
cmp
xor
mov
movs
pusha
aam
fnstenv
jg
dec
push
in
ss
movs
add
add
sub
xlat
sub
test
into
je
push
adc
dec
cld
pop
jns
jmp
les
or
popa
lds
inc
les
cmps
cmc
(bad)
das
lea
rol
shl
jo
(bad)
out
call
cmps
dec
pushf
aas
jge
jl
stc
jmp
ins
mov
inc
mov
rcr
in
fwait
mov
fisubr
fadd
mov
and
cmp
(bad)
sti
cmc
or
cdq
lds
sbb
je
fwait
xchg
lods
xchg
inc
inc
jp
fldenv
movs
enter
push
mov
pop
test
(bad)
bound
bnd
test
(bad)
fs
ror
adc
js
jge
mov
fld
push
push
retf
cmp
sbb
and
js
add
icebp
push
cmp
(bad)
dec
das
shl
les
push
add
inc
inc
adc
sbb
in
dec
or
xor
add
jnp
sbb
(bad)
push
inc
sub
ss
push
push
fcomp
ins
or
hlt
push
pop
aas
rcr
rol
out
xchg
inc
dec
cli
inc
test
(bad)
push
jmp
jmp
pop
xchg
test
sub
fs
dec
push
pusha
inc
or
sub
dec
sub
std
jl
rol
jp
xor
cld
sub
mov
mov
retf
clc
arpl
cmp
test
fldenv
nop
mov
out
fnsave
sub
mov
adc
sar
mov
push
dec
inc
add
int
cmp
mov
xchg
ret
mov
out
lods
ins
loope
rcr
sub
mov
inc
les
xchg
push
pcmpeqd
cmp
xchg
mov
rol
add
adc
or
xor
clc
add
clc
jae
arpl
lock
arpl
add
mov
adc
jecxz
mov
jo
sub
cmp
dec
add
mov
inc
or
mov
xor
xchg
dec
push
idiv
rol
add
shr
cmp
pusha
inc
jo
stos
jle
or
sar
test
adc
shr
fs
push
adc
cwde
mov
push
mov
jmp
in
cmp
das
out
xor
sahf
xchg
and
add
dec
inc
inc
add
sub
jnp
dec
aaa
(bad)
mov
inc
xchg
push
or
lock
fcom
inc
pop
pusha
pop
or
add
mov
int3
add
dec
adc
or
add
add
mov
pushf
sbb
mov
inc
or
xor
cs
lods
retfw
fcmovnbe
jle
cmp
xor
das
test
pushf
lea
les
jno
or
or
add
pop
sbb
adc
sar
push
xlat
or
add
ret
aaa
cmp
adc
cmps
lods
jl
dec
or
fcmovnb
jmp
or
mov
jne
iret
pop
xor
(bad)
xor
mov
pop
jmp
pop
adc
rcr
jge
inc
sbb
pushf
adc
or
mov
pop
jno
addr16
ret
cs
pop
ss
out
mov
pop
int3
shl
sub
into
rol
test
mov
pop
jbe
push
pop
enter
and
ret
mov
pop
push
lods
dec
retf
call
lea
cmp
sbb
push
or
adc
ror
dec
xor
or
aaa
aad
outs
pop
ins
sbb
sub
ror
mov
add
ins
xor
cmps
add
inc
add
hlt
or
jno
pusha
add
sbb
dec
push
punpcklbw
rol
and
add
push
lods
and
pop
lods
rcl
push
lahf
pop
cmp
add
call
shl
xchg
dec
or
add
outs
jno
pop
fsub
push
inc
dec
pop
push
pop
loope
daa
and
xor
inc
and
push
shl
popa
adc
js
mov
dec
cs
addr16
sbb
lods
mov
call
jbe
push
dec
lock
xchg
jns
and
add
call
jo
sub
mov
push
adc
dec
cmp
iret
sbb
jle
test
fcmove
push
mov
mov
or
and
cs
rcl
je
cmp
push
cwde
jbe
mov
in
aas
scas
js
jle
mov
dec
jne
push
data16
xor
inc
popf
imul
(bad)
stos
int3
mov
sar
popf
cs
sbb
cmp
xchg
mov
int3
inc
scas
sbb
or
sub
add
arpl
mov
pop
push
mov
mov
(bad)
xor
call
ret
jmp
in
or
jo
push
dec
and
mov
in
aaa
add
arpl
(bad)
int3
ret
cmp
pop
into
call
pusha
bsr
jle
sbb
loop
inc
xor
mov
pop
inc
dec
scas
jb
dec
and
jbe
ins
imul
imul
fcmovbe
push
mov
fld
add
(bad)
mov
cmp
fcmovbe
xchg
pusha
sbb
adc
dec
repnz
add
test
push
push
cmp
das
add
or
mov
adc
xor
fild
mov
les
adc
sub
movs
fld
jg
or
mov
scas
js
xor
(bad)
jmp
or
loop
adc
push
lock
or
mov
or
mov
cmp
push
or
neg
(bad)
or
jo
adc
or
outs
pop
rcl
sub
retf
add
mov
push
sub
sbb
jp
lea
mov
aam
jb
or
sbb
int3
add
pop
lea
add
rol
lock
ficomp
not
cmp
mov
mov
inc
mov
dec
jmp
add
stc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
test
dec
mov
inc
mov
pushf
enter
jg
sub
sbb
movs
inc
sbb
inc
mov
xchg
add
mov
sbb
cmps
or
sbb
jne
xor
inc
mov
dec
and
jmp
cmp
in
or
aad
xor
pushf
mov
sub
ret
jne
fsubr
fnstenv
retf
mov
(bad)
dec
mov
fnstsw
retf
mov
ficomp
outs
cwde
in
test
jbe
pop
jl
lahf
jecxz
cmp
mov
or
movs
jae
mov
adc
adc
loopne
add
dec
adc
test
mov
aas
es
dec
or
cmp
pop
dec
cs
or
ss
fwait
gs
aaa
mov
addr16
outs
popf
dec
mov
push
push
cmps
int3
cs
dec
pop
cmp
sti
icebp
jmp
scas
out
std
inc
xor
or
frstor
sahf
js
ret
aas
rol
inc
cmp
mov
loop
fs
cmp
mov
(bad)
loopne
rol
jno
and
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
and
xchg
bound
or
not
xchg
xor
lds
repz
lahf
les
cmp
leave
mov
add
and
xor
mov
inc
mov
shl
out
pop
(bad)
out
mov
jmp
inc
popf
jmp
sbb
push
ins
pop
pop
ss
icebp
cmpps
add
or
nop
enter
ror
xchg
sti
shrd
(bad)
lods
pop
scas
pop
adc
(bad)
xchg
xor
in
rol
out
push
int3
xchg
test
pop
add
mov
mov
fild
xchg
mov
jp
popa
(bad)
mov
std
push
adc
popa
mov
shl
jmp
cvtps2pd
int3
jnp
sbb
fcmovnu
mov
mov
ror
cli
call
mov
and
or
inc
sub
loope
inc
xchg
std
out
xchg
or
loope
mov
mov
inc
das
shl
test
inc
(bad)
cmp
(bad)
daa
jmp
adc
add
push
add
daa
inc
cmp
aam
pop
or
push
(bad)
or
dec
push
loopne
std
test
xchg
dec
jl
(bad)
ret
repnz
adc
sub
test
bound
out
ror
xor
paddb
cmp
add
(bad)
or
inc
loopne
add
and
ds
aas
sub
mov
(bad)
cmp
dec
aas
ficom
rcr
fs
call
mov
(bad)
mov
jecxz
add
lods
movs
rol
cld
adc
cmp
ss
ret
xor
ret
pop
aas
inc
xchg
hlt
or
lea
dec
mov
add
pusha
ror
(bad)
mov
loopne
mov
fs
ss
xor
fist
aas
sar
mov
jmp
gs
or
ror
inc
or
clc
ret
dec
push
xor
pop
stc
(bad)
icebp
movs
aaa
pop
push
mov
push
xchg
dec
jmp
ret
dec
and
xchg
ss
or
or
cmc
je
imul
mov
das
cld
push
ret
or
ss
js
ror
or
daa
pop
ds
das
mov
mov
xor
add
inc
sub
in
pusha
jmp
adc
ja
inc
int
cmps
add
push
fdiv
into
add
adc
sar
xor
dec
push
inc
ror
aas
cmp
and
and
cmp
pop
call
and
into
leave
loopne
aaa
into
or
int
mov
push
inc
push
sbb
loop
cmp
jecxz
and
fsub
dec
add
adc
add
inc
das
push
push
ret
jne
mov
inc
int
pop
xchg
lds
cld
xor
cmp
int3
aaa
jnp
rep
add
mov
sub
mov
addr16
jmp
mov
xor
mov
pmulhuw
jle
aam
pop
mov
ds
fisttp
std
cli
and
iret
cmp
adc
scas
mov
clc
imul
dec
adc
sub
pop
stos
hlt
sub
adc
adc
lods
inc
or
add
pop
add
push
(bad)
mov
pop
add
add
test
adc
fild
pop
xchg
add
or
fs
add
add
cmp
and
adc
push
mov
inc
and
rol
add
enter
and
sbb
sbb
adc
mov
xchg
add
pop
in
xchg
push
lock
movs
je
and
and
ror
out
in
push
cmp
and
mov
cmp
into
xchg
xchg
mov
inc
cld
fld
jecxz
xor
loop
and
rol
jo
inc
nop
push
sub
jb
ret
push
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
(bad)
lahf
inc
jg
and
clc
scas
xchg
mov
in
lds
test
cmp
leave
push
bound
or
mov
int
dec
mov
jno
mov
les
jge
sbb
mov
test
pop
mov
rcl
rol
jg
inc
sub
and
out
xchg
mov
jmp
push
and
jo
add
out
inc
or
sti
cmc
jmp
les
pushf
xchg
dec
(bad)
jmp
or
sub
or
xor
inc
mov
jl
js
inc
xor
mov
and
push
and
or
adc
push
dec
pop
test
jmp
mov
js
in
js
adc
push
aam
xchg
jb
dec
and
add
inc
test
adc
sub
push
or
cld
xor
pop
jg
test
(bad)
or
cmp
xchg
dec
push
idiv
rol
add
in
mov
inc
loop
or
aaa
int
xchg
add
jecxz
jecxz
or
loopne
cmp
(bad)
and
retf
mov
jmp
mov
ror
cmp
gs
or
add
cmp
mov
mov
je
dec
xor
pusha
repz
add
adc
pop
sub
mov
adc
inc
fs
push
or
cmp
cs
test
push
push
sar
sbb
nop
xor
ds
inc
call
mov
add
fcom
push
inc
adc
sub
inc
psubw
cmp
xor
inc
sub
adc
fnstsw
inc
clc
arpl
add
std
ror
or
mov
pop
dec
or
(bad)
jg
fcom
push
push
sub
adc
sbb
(bad)
mov
add
sar
push
in
mov
xor
dec
or
aas
push
mov
movs
xor
lods
inc
cld
aam
int3
cmp
(bad)
sbb
xchg
pop
aas
sar
or
mov
icebp
pop
dec
or
and
mov
cmp
fadd
xor
std
rol
cmp
or
lods
sbb
dec
ss
loopne
or
add
fcom
lahf
cli
sub
dec
retf
cld
xor
xchg
xchg
xor
add
adc
or
std
cmp
bound
sub
(bad)
cli
clc
mov
pop
and
adc
dec
out
jmp
inc
mov
jb
xor
cmp
pop
fisub
clc
and
popf
push
sub
hlt
ret
fld
xor
fstp
(bad)
test
xor
add
or
add
cmc
add
pop
add
xor
adc
xchg
adc
ret
or
loop
bound
dec
or
in
mov
pop
outs
rcl
clc
jp
aaa
into
adc
(bad)
retf
cmp
sub
hlt
in
jp
xchg
pop
(bad)
dec
pusha
dec
jns
pop
sub
test
dec
mov
and
dec
xor
cmp
dec
add
sub
mov
ret
xor
lahf
in
or
sub
int
pop
mov
dec
in
aas
out
(bad)
outs
(bad)
std
inc
frstor
push
mov
dec
adc
add
or
jbe
sbb
dec
pop
sti
pop
mov
and
inc
int
xor
add
test
xor
(bad)
jp
sub
jo
sbb
push
inc
cmp
cld
arpl
adc
push
sbb
(bad)
and
adc
sbb
test
(bad)
clc
sbb
xor
xchg
fld
add
cld
ret
mov
add
push
loopne
shl
test
push
push
cmp
loope
cmps
inc
mov
sbb
and
inc
lar
adc
shl
mul
adc
daa
pop
adc
push
xor
push
cmp
aas
cs
sbb
inc
and
hlt
dec
aas
and
les
in
fwait
inc
repnz
add
cli
sub
pop
adc
or
inc
sub
xchg
lea
ret
adc
cld
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
adc
or
dec
pushf
cmp
aad
push
sti
loop
loopne
(bad)
mov
or
and
and
aam
nop
and
test
cmps
mov
loopne
leave
mov
iret
lahf
inc
or
pop
xor
add
shl
aad
and
sbb
and
and
add
push
dec
(bad)
xchg
jmp
cmps
sahf
and
jp
dec
pop
mov
mov
mov
inc
or
mov
sbb
mov
test
adc
pop
mov
sub
scas
push
ins
adc
js
adc
pushf
mov
jmp
inc
(bad)
mov
xor
inc
xor
aaa
cli
cmp
into
jg
and
(bad)
scas
pop
mov
lods
push
push
nop
mov
ins
mov
jnp
popa
adc
lods
call
push
push
ret
mov
xchg
mov
loope
mov
push
mov
call
pop
sub
push
cmp
push
push
push
push
mov
fadd
add
leave
adc
ret
add
pusha
mov
adc
or
aas
mov
mov
mov
xor
jg
add
rol
or
dec
or
cmp
mov
sbb
add
aaa
fdiv
iret
add
sbb
mov
xor
cmp
or
je
dec
mov
push
ror
or
mov
leave
and
and
and
retf
pusha
push
pop
push
mov
in
jge
call
mov
(bad)
je
jecxz
add
lods
movs
rol
in
jno
cmp
push
mov
cwde
pop
fs
pop
aas
sub
jecxz
aaa
cmp
retf
aaa
mov
mov
pop
into
test
mov
inc
das
sub
ror
ss
loopne
ds
adc
ss
xor
pusha
sahf
(bad)
sub
xor
aas
sar
mov
jmp
and
iret
sub
add
aas
cld
test
mov
or
pop
fdivr
inc
sbb
lea
mov
mov
xchg
aas
jmp
ret
dec
and
jg
loopne
or
or
cmc
je
sub
cmp
das
cld
push
ret
or
ss
pop
cmps
ror
or
daa
inc
ds
das
mov
je
cmp
add
fadd
aam
sub
aas
xor
dec
sahf
pop
sbb
cmp
fcomp
aas
(bad)
push
xor
iret
xor
hlt
repz
cmp
or
add
std
je
repz
fdivrp
jecxz
or
xchg
pusha
dec
cmp
add
fsub
or
std
push
ret
shl
(bad)
es
xor
mov
sar
dec
or
das
jecxz
push
(bad)
das
add
dec
dec
push
or
pop
inc
xchg
and
add
or
(bad)
aaa
fistp
push
imul
rcl
shl
xchg
add
bnd
sub
mov
addr16
loope
nop
xor
mov
sub
aas
push
lock
andnps
aaa
into
aas
mov
inc
push
in
test
retf
(bad)
stc
call
jmp
xor
cs
cmps
push
pop
sti
pop
add
mov
mov
test
add
pop
repz
push
add
cmp
add
movs
xor
clc
fild
out
inc
and
cld
pop
adc
jae
sahf
inc
mov
inc
or
sbb
(bad)
js
sbb
fadd
mov
lock
loope
push
outs
and
inc
sbb
and
add
dec
pusha
lds
mov
icebp
pop
sub
mov
pop
add
inc
rcr
add
enter
loope
mov
imul
data16
mov
jecxz
sbb
mov
ss
adc
pop
sub
pusha
inc
sbb
ja
repz
and
clc
dec
inc
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
(bad)
mov
jg
and
cmp
movs
pop
jmp
mov
(bad)
jg
add
adc
out
cmps
vpmacsswd
xchg
xchg
xchg
xor
xor
mov
sub
iret
lahf
inc
or
test
pop
mov
rol
mov
mov
jg
and
out
xchg
mov
jmp
push
and
jo
add
ins
inc
or
sti
cmc
jmp
mov
pushf
xchg
dec
(bad)
jmp
or
sub
or
xor
inc
mov
je
js
cmp
pop
cmp
jo
inc
xor
and
or
adc
push
dec
pop
test
jmp
mov
js
in
ja
adc
push
aam
xchg
(bad)
dec
cwde
pusha
test
add
test
adc
mov
sub
push
or
cld
xor
pop
jg
push
cmp
(bad)
xor
push
idiv
rol
add
in
mov
inc
loop
or
aaa
int
xchg
add
jecxz
pause
or
loopne
cmp
repnz
and
retf
mov
jmp
mov
ror
cmp
gs
or
add
sbb
loopne
adc
into
inc
add
xor
pusha
repz
add
adc
pop
sub
jns
adc
inc
in
cmp
mov
pop
push
jns
or
icebp
dec
or
aas
and
sti
pusha
cdq
loopne
(bad)
sbb
cmp
inc
add
inc
pop
cdq
out
adc
xor
or
std
ror
sahf
jmp
or
call
loope
or
aas
das
test
add
inc
adc
sbb
aaa
fdivr
ret
aas
idiv
jae
cmp
mov
sar
es
les
fadd
(bad)
das
fadd
stos
cli
or
xor
add
sbb
popa
lods
les
nop
movs
mov
icebp
add
aas
(bad)
mov
or
xor
mov
aas
shl
int
fiadd
rol
inc
nop
mov
mov
xchg
sti
loop
in
test
ret
cmp
aad
or
and
into
fs
push
add
xchg
inc
pop
inc
xor
cmc
loopne
xadd
pushf
int3
rdpmc
and
jno
add
loope
inc
ss
inc
ror
add
neg
pop
inc
fdiv
test
aas
retf
je
or
pop
je
push
int
out
add
je
push
sub
sub
xchg
mov
or
or
int3
push
inc
das
xchg
sahf
xchg
dec
cmp
sbb
or
pop
sub
lods
call
cmp
or
int3
add
in
rol
inc
and
xchg
fisttp
movntps
mov
mov
sub
xchg
adc
dec
cmc
jb
dec
fistp
inc
add
mov
push
mov
push
lods
cmp
jmp
das
jns
in
pop
lods
mov
fnstenv
mov
lods
hlt
adc
sub
loopne
or
adc
mov
cmp
std
xchg
daa
xor
int3
aaa
inc
push
in
or
xchg
das
xchg
or
pushf
scas
(bad)
sti
lock
or
xchg
jmp
in
push
dec
and
push
(bad)
mov
or
jg
(bad)
push
cwde
inc
inc
or
mov
stc
jp
lods
or
add
or
adc
xor
sub
ret
adc
xor
or
inc
and
and
xchg
rcl
test
test
pop
jnp
or
adc
dec
aas
pusha
cmp
adc
nop
add
cmps
js
inc
mov
inc
or
ja
and
lock
sbb
lea
test
and
icebp
or
jg
pusha
push
push
add
lods
fadd
data16
test
sub
push
cli
and
push
sub
dec
retf
ins
mov
and
mov
and
add
dec
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
adc
or
dec
pushf
cmp
aad
push
sti
loop
loopne
(bad)
mov
or
and
and
aam
nop
and
test
cmps
mov
loopne
leave
mov
iret
lahf
inc
or
pop
xor
add
shl
aad
and
sbb
and
and
add
push
dec
(bad)
xchg
jmp
cmps
sahf
and
jp
dec
pop
mov
mov
mov
inc
or
mov
sbb
mov
test
adc
pop
mov
sub
scas
push
ins
adc
js
adc
pushf
mov
jmp
inc
(bad)
mov
xor
inc
xor
aaa
cli
cmp
into
jg
and
(bad)
scas
pop
mov
lods
push
push
nop
mov
ins
mov
jnp
popa
adc
lods
call
push
push
ret
mov
xchg
mov
loope
mov
push
mov
call
pop
sub
push
cmp
push
push
push
push
mov
fadd
add
leave
adc
ret
add
pusha
mov
adc
or
aas
mov
mov
mov
xor
jg
add
rol
or
dec
or
cmp
mov
sbb
add
aaa
fdiv
iret
add
sbb
mov
xor
cmp
or
je
dec
mov
push
ror
or
mov
leave
and
and
and
retf
pusha
push
pop
push
mov
in
jge
call
mov
(bad)
je
jecxz
add
lods
movs
rol
in
jno
cmp
push
mov
cwde
pop
fs
pop
aas
sub
jecxz
aaa
cmp
retf
aaa
mov
mov
pop
into
test
mov
inc
das
sub
ror
ss
loopne
ds
adc
ss
xor
pusha
sahf
(bad)
sub
xor
aas
sar
mov
jmp
and
iret
sub
add
aas
cld
test
mov
or
pop
fdivr
inc
sbb
lea
mov
mov
xchg
aas
jmp
ret
dec
and
jg
loopne
or
or
cmc
je
sub
cmp
das
cld
push
ret
or
ss
pop
cmps
ror
or
daa
inc
ds
das
mov
je
cmp
add
fadd
aam
sub
aas
xor
dec
sahf
pop
sbb
cmp
fcomp
aas
(bad)
push
xor
iret
xor
hlt
repz
cmp
or
add
std
je
repz
fdivrp
jecxz
or
xchg
pusha
dec
cmp
add
fsub
or
std
push
ret
shl
(bad)
es
xor
mov
sar
dec
or
das
jecxz
push
(bad)
das
add
dec
dec
push
or
pop
inc
xchg
and
add
or
(bad)
aaa
fistp
push
imul
rcl
shl
xchg
add
bnd
sub
mov
addr16
loope
nop
xor
mov
sub
aas
push
lock
andnps
aaa
into
aas
mov
inc
push
in
test
retf
(bad)
stc
call
movs
mov
nop
sti
outs
or
in
mov
popa
pop
xlat
es
cmp
mov
xchg
pop
push
push
outs
xchg
push
sbb
inc
or
loope
jnp
and
not
ss
xor
adc
or
js
or
dec
dec
mov
sbb
popa
pop
inc
loope
fs
daa
pop
sbb
push
jae
and
stos
mov
mov
pop
dec
popa
or
inc
add
adc
or
mov
cmp
cwde
inc
movs
test
inc
sub
(bad)
dec
int
cs
xlat
jns
inc
cmp
mov
sub
sub
iret
outs
xlat
or
js
add
ret
stos
cmc
movs
pop
fldcw
adc
retf
daa
sub
xor
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
(bad)
mov
jg
and
cmp
movs
pop
jmp
mov
(bad)
jg
add
adc
out
cmps
vpmacsswd
xchg
xchg
xchg
xor
xor
mov
sub
iret
lahf
inc
or
test
pop
mov
rol
mov
mov
jg
and
out
xchg
mov
jmp
push
and
jo
add
ins
inc
or
sti
cmc
jmp
mov
pushf
xchg
dec
(bad)
jmp
or
sub
or
xor
inc
mov
je
js
cmp
pop
cmp
jo
inc
xor
and
or
adc
push
dec
pop
test
jmp
mov
js
in
ja
adc
push
aam
xchg
(bad)
dec
cwde
pusha
test
add
test
adc
mov
sub
push
or
cld
xor
pop
jg
push
cmp
(bad)
xor
push
idiv
rol
add
in
mov
inc
loop
or
aaa
int
xchg
add
jecxz
pause
or
loopne
cmp
repnz
and
retf
mov
jmp
mov
ror
cmp
gs
or
add
sbb
loopne
adc
into
inc
add
xor
pusha
repz
add
adc
pop
sub
jns
adc
inc
in
cmp
mov
pop
push
jns
or
icebp
dec
or
aas
and
sti
pusha
cdq
loopne
(bad)
sbb
cmp
inc
add
inc
pop
cdq
out
adc
xor
or
std
ror
sahf
jmp
or
call
loope
or
aas
das
test
add
inc
adc
sbb
aaa
fdivr
ret
aas
idiv
jae
cmp
mov
sar
es
les
fadd
(bad)
das
fadd
stos
cli
or
xor
add
sbb
popa
lods
les
nop
movs
mov
icebp
add
aas
(bad)
mov
or
xor
mov
aas
shl
int
fiadd
rol
inc
nop
mov
mov
xchg
sti
loop
in
test
ret
cmp
aad
or
and
into
fs
push
add
xchg
inc
pop
inc
xor
cmc
loopne
xadd
pushf
int3
rdpmc
and
jno
add
loope
inc
ss
inc
ror
add
neg
pop
inc
fdiv
test
aas
retf
je
or
pop
je
push
int
out
add
je
push
sub
sub
xchg
mov
or
or
int3
push
inc
das
xchg
sahf
xchg
dec
cmp
sbb
or
pop
sub
lods
call
cmp
or
int3
add
in
rol
inc
and
xchg
fisttp
movntps
mov
mov
sub
xchg
adc
dec
cmc
jb
dec
fistp
inc
add
mov
push
mov
push
lods
cmp
jmp
das
jns
in
pop
lods
mov
fnstenv
mov
lods
hlt
adc
sub
loopne
or
adc
mov
cmp
std
xchg
daa
xor
int3
aaa
inc
push
in
or
xchg
das
xchg
or
pushf
scas
(bad)
sti
lock
dec
mov
fsub
dec
pusha
adc
jmp
lea
ins
cmovl
add
ja
test
pusha
or
out
pop
es
add
add
add
cmc
test
inc
loopne
cli
rol
loopne
cwde
mov
cmp
loopne
push
or
popa
mov
adc
or
ret
cs
rcl
ror
xor
and
and
mov
pop
or
push
push
aas
popf
inc
add
jne
lea
call
(bad)
xor
icebp
pop
push
dec
ret
daa
xchg
inc
adc
loope
outs
pop
in
sar
inc
push
push
add
fcomp
push
jp
mov
mov
dec
jo
add
arpl
mov
out
and
sti
xchg
push
loop
sahf
add
add
stc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
inc
pop
cmp
ins
add
maxps
jecxz
das
push
or
(bad)
and
cwde
inc
mov
dec
(bad)
lahf
push
or
push
fwait
mov
xchg
mov
cmps
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
test
loope
fsubr
jbe
adc
scas
adc
call
sbb
out
mov
push
ret
sahf
mov
outs
sbb
push
shr
pop
add
sub
repnz
icebp
rcr
cmc
pop
add
dec
add
outs
in
cwde
xor
(bad)
nop
or
add
or
into
mov
jno
lds
mov
out
xchg
jne
sub
or
fsubr
out
(bad)
mov
out
and
adc
mov
add
push
and
push
ss
pusha
shr
(bad)
stos
cld
cs
mov
mov
mov
mov
jne
ret
adc
dec
xor
add
stc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
(bad)
mov
jg
and
push
and
jne
enter
sub
test
add
mov
or
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
dec
mov
aad
aaa
or
call
adc
arpl
scas
push
shr
ret
inc
cmp
xlat
test
push
rcl
neg
fsubr
or
pop
mov
js
in
jmp
mov
mov
xor
add
pusha
and
dec
cwde
test
mov
cmp
(bad)
jp
pushf
rcl
setl
jo
rcr
cli
(bad)
xor
adc
push
in
cli
xchg
movs
ret
add
movs
and
xor
inc
test
and
adc
fstp
cs
loope
(bad)
jbe
std
and
fdivp
dec
inc
pusha
push
(bad)
stos
pop
mov
adc
jecxz
xor
hlt
xor
push
das
fst
pusha
daa
mov
(bad)
cmc
enter
add
stc
add
or
inc
sub
add
add
xor
add
inc
std
or
mov
shl
add
repnz
rol
sub
neg
fmul
shl
test
inc
mov
es
add
sbb
and
fstp
inc
daa
cdq
add
dec
sub
rol
cdq
dec
xchg
sub
pusha
add
lea
sub
add
add
push
adc
inc
test
xor
sub
sbb
test
or
adc
lock
call
sub
fadd
dec
jo
add
push
cli
dec
dec
(bad)
xchg
adc
dec
dec
icebp
jp
mov
or
clc
xor
rcr
xor
fdivr
xchg
mov
or
jecxz
loopne
sub
fistp
das
je
and
pushf
jmp
jp
mov
pushf
pusha
mov
mov
and
adc
repnz
xchg
or
or
(bad)
pop
add
and
pop
mov
add
push
pushf
rol
dec
pushf
push
lds
ror
add
xchg
loope
ficom
movs
push
pop
adc
push
inc
adc
dec
and
mov
dec
vpshufd
pop
rol
sbb
call
inc
adc
add
add
add
rol
add
dec
push
sbb
and
cmps
inc
jnp
shl
add
nop
rcr
adc
rol
push
lds
(bad)
adc
or
je
inc
mov
lock
call
ds
add
lea
jo
or
cwde
inc
loopne
cmp
pop
popa
ret
lds
adc
mov
(bad)
fwait
jno
js
dec
xor
(bad)
fadd
jmp
inc
adc
push
test
xchg
push
inc
cmp
inc
adc
dec
push
sub
shr
push
xchg
stos
jne
ds
stos
add
and
in
or
push
jnp
mov
xchg
and
aad
pop
push
cmp
in
mov
ret
push
fdivr
lods
add
clc
pusha
sub
xor
lods
adc
lods
cmp
xlat
mov
push
les
scas
stos
call
test
adc
or
push
sub
str
add
xor
xchg
data16
stc
imul
dec
dec
push
or
mov
pop
mov
je
pop
enter
ret
aam
inc
jns
retf
std
call
sbb
jge
test
pop
push
jo
add
stc
les
adc
mov
sbb
push
imul
jp
push
xor
mov
adc
frstor
pop
and
cmps
movs
shr
and
adc
cwde
jge
or
adc
mov
jne
sbb
push
loopne
mov
lea
rcl
or
jno
stc
add
pop
dec
test
push
outs
mov
jno
push
out
(bad)
sub
pop
or
es
push
mov
cmps
jge
inc
sub
(bad)
cld
imul
fs
sbb
and
aas
shr
pop
adc
inc
daa
dec
adc
pusha
(bad)
std
or
cmp
sub
jle
xor
pop
or
xor
xor
mov
inc
xchg
pop
or
out
test
or
pop
call
or
nop
(bad)
dec
mov
sub
add
mov
and
and
pop
dec
push
adc
in
push
adc
nop
mov
xchg
pop
sbb
mov
xchg
les
sub
sub
pop
sti
pop
sbb
clc
lds
call
xlat
enter
icebp
lea
mov
cmp
icebp
mov
arpl
add
stc
add
or
inc
sub
add
add
or
add
or
jo
xchg
sub
add
test
mov
pop
js
pusha
test
(bad)
xchg
and
jns
loope
xchg
adc
dec
sbb
add
inc
js
mov
xor
xchg
xchg
dec
add
mov
mov
sub
push
dec
stos
cmp
dec
or
or
jmp
xor
push
push
pop
ins
fsubrp
test
daa
shr
mov
das
push
inc
les
(bad)
mov
adc
pop
outs
retf
rep
(bad)
push
push
hlt
sub
push
or
jb
xor
inc
fwait
mov
xlat
adc
pop
cld
sbb
inc
pop
mov
imul
cmp
dec
popf
inc
inc
cmovno
sub
xor
call
les
xchg
int
mov
jmp
xor
cld
jmp
mov
ja
inc
push
sbb
inc
sub
sub
test
fild
test
inc
js
daa
push
enter
add
adc
movs
xchg
or
je
inc
call
and
mov
push
loope
rcl
pop
push
mov
dec
inc
popf
in
inc
or
sub
pop
adc
mov
bound
push
dec
dec
arpl
sbb
icebp
sbb
adc
pop
sub
nop
adc
lods
xlat
push
sub
inc
loope
test
inc
sbb
pop
aam
out
jae
imul
push
add
add
dec
and
outs
shl
and
je
loope
and
dec
aam
xchg
xchg
(bad)
add
nop
push
pushf
xor
xchg
pusha
test
adc
mov
push
dec
adc
lods
mov
call
adc
gs
jns
scas
(bad)
sub
xchg
into
jp
or
pusha
lods
mov
pushf
add
cmp
adc
push
or
dec
test
mov
(bad)
sub
or
add
ficomp
fisttp
stos
je
pop
les
in
mov
and
in
dec
int3
call
mov
cld
test
and
sub
popa
xchg
ror
test
les
bound
push
or
movs
dec
and
mov
dec
add
iret
inc
add
xor
or
mov
pusha
adc
sbb
cdq
fwait
adc
imul
mov
pusha
xchg
inc
adc
add
sub
push
lock
lods
mov
push
jno
or
hlt
call
sbb
loopne
(bad)
pop
(bad)
(bad)
sti
and
rcl
mov
push
jge
mov
es
movs
ror
push
cmp
and
pop
and
lds
loopne
fs
jp
sbb
and
inc
ficom
shl
cdq
cmp
dec
xchg
and
nop
mov
mov
xor
jg
loopne
aas
popa
mov
and
push
test
sub
inc
loope
les
ds
outs
cli
or
cmps
mov
add
xchg
repnz
mov
mov
dec
pop
mov
enter
test
jo
arpl
pop
cmps
mov
pop
and
stos
mov
neg
sub
push
mov
lock
or
and
inc
add
jne
pop
and
sbb
inc
cmp
gs
or
shr
cli
add
test
and
pusha
bnd
or
pushf
adc
call
or
sub
mov
hlt
loope
data16
cs
push
popa
adc
test
leave
lock
pop
or
pop
push
jl
add
add
add
xor
add
inc
sbb
icebp
jle
mov
test
xchg
adc
sbb
das
mov
arpl
lahf
sar
inc
cmp
adc
imul
mov
fs
or
daa
aas
dec
mov
in
(bad)
mov
sbb
loope
adc
ret
adc
sbb
or
arpl
cmovp
sbb
ins
nop
bound
sub
std
pop
pop
sub
sbb
pop
inc
or
xchg
aam
movs
test
hlt
cs
retf
fwait
sub
div
addr16
and
out
push
ror
outs
or
das
into
push
lods
or
mov
xor
dec
sbb
neg
scas
pop
rol
or
mov
push
(bad)
out
aad
(bad)
in
fs
mov
mov
jmp
into
xchg
mov
ss
addr16
ss
call
shl
push
mov
cmp
xchg
xor
cmp
data16
aad
cs
das
jle
mov
std
xchg
rcr
scas
pop
sub
rol
leavew
sub
mov
sub
xchg
jge
sbb
mov
inc
retf
mov
scas
inc
stos
dec
xchg
mov
sub
aad
add
rol
jb
in
sbb
pop
push
jmp
pushf
nop
(bad)
sub
cmp
push
add
popa
scas
inc
popf
in
inc
loop
bound
mov
push
mov
scas
test
sbb
mov
ins
outs
mov
imul
call
jbe
test
mov
sub
es
lods
jge
adc
prefetchwt1
mov
dec
jnp
popa
iret
fs
xchg
out
adc
mov
lods
pop
add
dec
scas
xor
pop
jo
cdq
push
adc
fld
rol
mov
mov
dec
pushf
mov
out
and
cdq
xlat
or
mov
lea
jae
int3
call
dec
push
xchg
mov
into
push
push
cdq
push
fild
and
stos
mov
lea
sub
mov
inc
lds
mov
xchg
int
inc
mov
push
mov
inc
into
dec
push
loop
and
add
or
pop
sbb
xchg
and
mov
cwde
scas
pushf
out
push
in
xchg
fild
push
dec
mov
aam
ret
and
adc
xchg
inc
in
ret
add
and
int3
(bad)
jecxz
and
stc
add
call
inc
or
in
and
cmp
cmp
mov
or
or
jmp
stc
add
or
inc
sub
add
add
or
add
sbb
sub
add
mov
adc
bound
xchg
dec
and
xchg
mov
popf
mov
dec
lods
pop
and
dec
add
sub
rol
inc
loopne
and
mov
loope
adc
sub
mov
inc
das
sub
aam
(bad)
nop
and
cmps
pop
mov
dec
cmps
lock
xchg
or
add
mov
inc
cmps
dec
cmp
test
mov
stos
xor
push
sbb
popa
sub
inc
mov
aad
push
and
mov
ins
pop
mov
sub
fmul
push
clc
xor
or
xor
repz
dec
xor
and
mov
cld
mov
fbld
sub
jno
cld
push
ins
cwde
jno
dec
dec
test
dec
stc
fisub
(bad)
movs
adc
out
mov
mov
aas
sbb
neg
fs
push
sub
dec
pop
out
les
sti
clc
sbb
out
mov
inc
fisubr
sub
rcr
and
(bad)
or
test
fidiv
push
loopne
and
mov
inc
jl
test
or
inc
sbb
fadd
popa
adc
mov
mov
mov
mov
popa
jae
vdivss
dec
sub
and
or
or
xor
lds
xor
popa
jg
jb
pushf
pop
jne
and
sbb
sbb
push
popa
and
or
pop
cmps
xchg
push
dec
dec
and
sbb
loope
adc
push
(bad)
mov
nop
out
adc
inc
mov
adc
jmp
cmps
adc
cmp
out
pop
dec
fcomp
jl
push
cdq
test
cmps
add
lock
cdq
pop
and
fwait
lea
scas
push
adc
jge
outs
call
add
sbb
test
mov
push
daa
inc
push
mov
rol
jns
add
out
mov
paddusb
in
scas
mov
push
dec
pop
jecxz
mov
or
imul
pop
stos
bound
cmp
loopne
outs
mov
call
cmps
(bad)
in
or
push
pop
mov
or
or
sbb
lds
pop
mov
(bad)
add
cli
ror
add
xchg
xchg
(bad)
mov
or
call
add
pop
sub
lds
sti
pop
sub
outs
sahf
sub
push
enter
pop
sar
or
cmps
adc
jnp
add
xor
stc
cli
sti
icebp
stos
mov
or
sbb
add
sahf
pop
mov
repnz
fcmovne
pop
xor
xor
sbb
mov
mov
jnp
js
loop
(bad)
cli
mov
xchg
jmp
jge
sar
add
outs
pop
dec
cwde
dec
mov
and
mov
sbb
cmp
int3
div
cvtps2pi
mov
lock
sbb
cmp
enter
mov
sub
pushf
adc
push
push
lds
lock
sbb
cmp
inc
cld
or
enter
cmp
mov
sar
mov
inc
sbb
clc
mov
aas
mov
ror
ins
and
xor
sub
in
inc
cmp
rol
pop
xlat
arpl
loopne
fistp
cmp
test
stos
(bad)
(bad)
js
mov
pop
in
cld
hlt
mov
outs
rol
fadd
clc
arpl
icebp
test
mov
out
pusha
repz
push
fnstsw
cmp
cwde
(bad)
ficom
pop
hlt
ficomp
inc
fdiv
je
test
(bad)
jl
test
xor
xor
or
xchg
into
arpl
inc
pushf
mov
shr
inc
arpl
aaa
lock
mov
loope
or
cmp
push
xor
inc
dec
adc
in
lock
push
xor
cmp
lahf
icebp
scas
push
xchg
(bad)
or
(bad)
scas
nop
mov
data16
and
in
dec
adc
xor
in
loopne
data16
mov
fst
jns
push
sbb
sub
es
scas
cwde
push
ins
xchg
fimul
aad
mov
imul
rol
mov
imul
xor
sub
xor
mov
retf
cwde
and
mov
add
call
cs
jno
and
(bad)
mov
sub
stos
push
jge
push
xchg
cwde
xchg
fiadd
dec
pop
popa
in
inc
mov
and
outs
mov
mov
test
xchg
mov
cmps
dec
jl
pushf
or
je
mov
inc
adc
(bad)
jmp
(bad)
push
aam
stos
and
pop
mov
daa
addr16
mov
inc
dec
add
and
push
call
gs
mulps
arpl
popf
push
test
xor
xor
mov
ins
jb
push
das
shr
fld
push
sub
call
push
cdq
add
xchg
dec
nop
push
dec
add
out
aam
lods
push
mov
jo
mov
ret
add
cdq
(bad)
pop
mov
sbb
cld
out
xor
nop
or
ret
jl
xchg
and
xlat
fistp
(bad)
scas
jg
dec
jns
rcr
shl
mov
and
xchg
mov
sub
(bad)
dec
stos
and
xchg
push
adc
test
push
lds
sbb
push
push
xchg
xor
add
sub
mov
dec
ins
xchg
fistp
push
stc
ins
jo
lock
pop
mov
cmp
cwde
mov
jne
pop
inc
and
add
add
adc
cs
(bad)
pop
and
adc
adc
and
stc
mov
push
xchg
in
shr
das
mov
dec
push
add
nop
xchg
repnz
mov
test
adc
xchg
lock
cs
das
ins
enter
push
cwde
add
jo
add
sub
dec
sbb
cli
retf
xor
mov
jmp
adc
add
and
add
or
inc
sub
add
add
or
add
ret
test
push
cmp
pop
enter
cmp
aas
jl
inc
xchg
inc
and
push
xor
enter
or
sbb
imul
cmp
pop
lock
ret
sbb
mov
jno
inc
lea
xchg
call
dec
popf
dec
cmp
pushf
xchg
or
xor
xchg
mov
pop
mov
enter
adc
pop
adc
cmps
or
inc
popf
retf
xlat
cs
ret
mov
pop
mov
call
sub
jmp
sar
(bad)
nop
sbb
mov
and
sbb
sub
ins
popa
mov
pop
ret
test
stos
jle
jns
pop
retf
adc
(bad)
jno
pop
lods
popa
lea
pusha
pop
cld
pop
cmc
xchg
ffreep
and
aas
xchg
mov
mov
mov
push
loopne
sub
cmp
imul
(bad)
jg
adc
mov
imul
and
xchg
dec
leave
scas
mov
jmp
adc
push
pop
ja
and
cmp
stc
pop
popf
jp
pop
push
mov
mov
popf
xor
pop
ins
push
xor
push
adc
add
mov
fs
mov
pusha
xor
pop
adc
or
xor
jg
(bad)
cmps
sahf
xchg
jp
arpl
xor
jge
dec
loopne
cmp
sub
shl
ret
xchg
xchg
test
call
mov
inc
retf
sbb
out
test
imul
inc
jmp
mov
ss
retf
clc
loope
sbb
xchg
xchg
inc
xor
gs
cmp
xlat
pop
test
movs
gs
xchg
xor
sbb
add
or
pusha
ror
sub
out
sbb
jno
xchg
pop
push
add
dec
sub
ror
fadd
add
or
xchg
rcl
mov
pop
mov
dec
arpl
add
and
mov
jae
das
sub
mov
jbe
sub
sahf
pop
xor
arpl
sub
dec
xor
sbb
inc
or
push
push
dec
mov
sbb
cmp
sub
popa
sbb
adc
push
mov
xor
sub
or
cli
xor
add
add
dec
or
data16
enter
imul
dec
xor
push
push
cmp
ds
lock
int3
add
and
add
fs
cmp
add
sbb
dec
sub
cmps
or
inc
repz
mov
rol
sti
mov
add
cmp
(bad)
and
jmp
cmc
jb
mov
frstor
shl
xchg
loopne
bound
in
sub
or
mov
out
wrmsr
ror
lods
mov
ja
xchg
repnz
call
dec
or
call
das
jle
fxch
or
mov
aam
jb
leave
daa
ja
pop
xchg
jns
jl
sbb
and
cmp
je
clc
repz
sub
hlt
cmp
nop
rol
movs
aam
mov
jmp
loop
pavgb
inc
or
mov
aas
push
xor
sti
mov
or
mov
push
jmp
or
inc
sbb
add
add
xor
data16
cli
and
pop
add
outs
or
scas
dec
or
out
gs
mov
jmp
jo
xor
jge
ret
sbb
cwde
rol
add
pop
aad
xchg
push
jmp
nop
js
adc
pop
ins
add
in
xor
sbb
mov
add
or
cs
loopne
aaa
mov
add
pop
pop
jae
inc
sbb
inc
or
add
repz
loop
call
and
and
sbb
or
add
xor
sub
mov
push
and
movs
jmp
lods
cs
and
sub
push
adc
sbb
gs
sbb
mov
sub
outs
enter
pusha
sub
jecxz
retf
cmp
or
dec
add
mov
inc
mov
ror
mov
pop
int
outs
xor
retf
xchg
jmp
call
sub
pusha
push
imul
inc
dec
mov
daa
pop
div
sbb
retf
int3
rol
adc
sbb
dec
mov
jo
pop
fst
loop
dec
dec
sbb
daa
imul
push
rcl
outs
(bad)
lahf
pop
test
sbb
adc
and
test
jbe
inc
popf
ret
pop
add
xchg
jmp
mov
stos
and
jmp
dec
sub
add
mov
add
adc
pop
or
aad
and
push
mov
es
pop
fidiv
call
sub
mov
(bad)
mov
stos
test
ror
sar
lds
inc
mov
and
dec
mov
or
and
add
bound
pop
sbb
xchg
lods
adc
mov
mov
or
int
xchg
je
loop
push
je
retf
push
jle
add
fsubrp
mov
pop
ds
cs
fist
fwait
lea
jmp
outs
jns
pop
daa
rol
push
retf
adc
push
ds
icebp
push
ja
push
xchg
mul
xor
xchg
pop
pop
(bad)
sbb
cmps
cmps
xchg
stos
push
scas
sub
sahf
test
adc
js
jecxz
add
out
cmps
mov
jecxz
int
and
xor
ror
(bad)
rcr
loopne
fs
xor
push
or
or
ret
mov
les
or
lods
jl
ds
sub
jecxz
cld
aaa
and
jecxz
es
sub
cmp
xchg
inc
and
mov
xchg
out
add
inc
or
int3
enter
imul
in
fs
dec
cmp
xchg
mov
sub
push
push
mov
and
add
or
inc
sub
add
add
or
add
(bad)
pop
sub
ror
adc
or
add
imul
adc
jecxz
(bad)
and
in
mov
and
add
adc
or
cmp
retf
test
xor
dec
pop
imul
das
or
mov
imul
pop
jno
adc
jmp
pop
xchg
jp
jmp
add
mov
xchg
jle
sbb
movs
push
xchg
push
imul
inc
xchg
hlt
cld
or
or
xor
pop
mov
xlat
jbe
rol
dec
push
mov
adc
add
sub
push
int
sub
xchg
outs
or
leave
in
call
retf
and
push
push
mov
jno
sub
sbb
ins
dec
mov
sub
cmps
dec
sahf
push
clc
jbe
aad
jo
add
adc
das
inc
test
out
jl
adc
xchg
loope
out
inc
repnz
mov
adc
cmc
mov
int
je
shl
sub
push
or
sbb
jb
sub
push
mov
loopne
pop
out
ja
sub
pop
inc
jge
fisttp
mov
adc
inc
and
add
jae
jno
cmp
jo
and
retf
lea
push
mov
mov
dec
sub
mov
and
dec
mov
xchg
fnstsw
sub
jns
push
bnd
and
xor
xor
dec
mov
cmp
and
loope
in
add
rcr
dec
sub
sbb
aaa
fld
sbb
inc
xor
and
or
or
ss
sbb
xor
jb
add
out
pusha
xor
shl
fsubr
push
ja
or
cmp
(bad)
ror
mov
sub
ficom
imul
adc
and
xor
xor
loop
test
pushf
jno
adc
xchg
xchg
sahf
and
pop
ins
xor
or
das
leave
clc
or
cmc
clc
add
pop
jmp
shr
dec
adc
stos
pop
daa
xchg
inc
jge
push
or
xchg
push
or
pusha
push
or
or
nop
jo
jmp
adc
jecxz
inc
dec
or
xchg
jae
mov
push
push
mov
dec
imul
sbb
add
sub
dec
pusha
repz
mov
into
add
and
mov
rol
dec
leave
sbb
adc
jno
shl
jl
mov
nop
fidiv
dec
ret
xor
cmp
cmp
sub
rcl
ja
ss
and
ret
mov
cmc
clc
call
mov
aaa
stos
push
addr16
mov
test
cmp
mov
rol
les
cmp
arpl
loope
adc
js
loop
pusha
add
xchg
jp
mov
jp
mov
scas
fdivr
test
loope
push
mov
pop
pop
mov
mov
mov
xor
scas
mov
dec
mov
pop
mov
sub
hlt
sub
jae
aas
sti
in
jecxz
repz
cli
xor
jl
add
rcr
xor
or
xchg
add
sub
pop
pop
mov
mov
cmp
jnp
ffreep
jnp
js
rol
or
aad
and
(bad)
sub
in
mov
in
and
stos
or
icebp
mov
jmp
icebp
arpl
adc
push
add
loop
imul
fwait
ret
cmp
int
adc
inc
push
es
add
std
stos
push
sbb
ret
fadd
add
inc
pop
adc
pusha
add
pop
nop
jp
pop
inc
into
(bad)
cli
idiv
and
sbb
fadd
push
imul
loopne
gs
xchg
inc
add
out
jge
into
sbb
xor
sar
inc
daa
and
or
add
sbb
bound
adc
push
add
jo
test
sub
pop
ins
je
fcmovb
add
fnsave
xchg
sahf
push
sub
mov
inc
test
sahf
sub
sub
mov
inc
lea
jae
mov
loope
inc
rcl
aas
clc
push
or
mov
fbstp
dec
dec
call
sub
retf
out
mov
sub
jno
outs
pop
xchg
add
cmp
mov
nop
push
and
jecxz
dec
icebp
sbb
mov
mov
(bad)
aad
call
inc
stos
xor
ds
mov
mov
sbb
xor
or
cmp
xor
push
pop
nop
push
mov
inc
les
repz
or
mov
adc
rcr
inc
sub
jge
rol
add
mov
adc
shr
push
in
cmp
call
push
aas
mov
adc
aaa
into
dec
outs
mov
jge
xor
mov
add
cmc
movs
call
shl
sbb
fwait
mov
add
sbb
pusha
sbb
sbb
cli
push
sbb
adc
push
lds
inc
or
loop
add
adc
movs
bound
outs
nop
out
and
xchg
add
(bad)
fsubr
dec
fwait
cmp
xor
dec
add
xor
mov
sub
sahf
or
xor
jno
add
sbb
fnsave
ins
inc
fistp
mov
popf
loope
mov
pop
pop
pop
add
sub
aad
jp
push
imul
ins
add
stc
and
jb
sbb
bound
push
sbb
mov
loope
lss
bound
popa
pop
stos
sub
int3
ror
add
sub
ss
and
push
adc
dec
movs
mov
into
and
mov
sub
sbb
pop
(bad)
jb
mov
imul
pop
cs
mov
sbb
mov
add
mov
stos
push
int3
loop
sbb
cs
pop
ja
lock
xchg
and
add
xchg
and
iret
nop
push
lea
add
mov
fbstp
cmps
sbb
adc
sbb
cmps
mov
lds
nop
cmp
or
add
dec
ss
dec
fcos
dec
inc
sub
sbb
jecxz
daa
retf
es
repnz
shl
sub
inc
pop
bound
adc
xchg
les
out
clc
add
mov
cmp
div
inc
or
add
nop
add
or
lods
cmps
or
aam
sbb
adc
and
adc
xlat
vunpckhps
ret
mov
popf
mov
jmp
lods
xor
push
mov
rol
clc
les
(bad)
mov
sub
movs
push
test
add
push
mul
xor
into
inc
popa
dec
imul
add
mov
fwait
cmp
pop
jge
aad
jecxz
(bad)
in
in
out
add
push
cmp
xor
sbb
pop
add
sub
push
pop
fsubr
xlat
movs
sbb
es
jle
(bad)
int3
fs
pop
adc
out
xor
adc
clc
jns
cmps
xor
mov
(bad)
mov
in
xchg
mov
sbb
dec
dec
xor
sub
push
mov
shl
mov
jmp
loop
test
sub
test
mul
push
dec
dec
xchg
test
jno
retf
add
imul
hlt
fstp
push
mov
add
and
add
or
inc
sub
add
add
or
add
or
mov
shl
rol
stc
xor
adc
push
xor
pop
xchg
movs
leave
or
shl
mov
adc
bound
add
dec
sbb
mov
inc
mov
mov
mov
pusha
jae
adc
aam
and
scas
or
cdq
xchg
and
sub
in
mov
or
std
inc
test
mov
or
dec
call
shl
call
in
and
xchg
and
int3
inc
mov
inc
mov
cmovp
fdivr
pop
clc
test
lods
pop
push
iret
adc
adc
push
add
fmul
sbb
cmp
pop
xor
jae
mov
adc
sub
dec
mov
mov
xchg
pushf
pop
push
xchg
enter
jle
add
ret
lea
movs
dec
jae
add
lahf
sti
popf
cmp
mov
gs
ja
cmp
or
adc
inc
mov
or
add
dec
imul
adc
lahf
jp
je
mov
lahf
cmp
sub
popa
jo
add
lods
inc
or
test
push
dec
or
call
(bad)
ficom
inc
or
fsubr
and
int
loopne
neg
xchg
fld
adc
add
into
mov
pop
mov
cwde
rol
xor
mov
cmp
sub
inc
jle
loop
xchg
fsub
inc
dec
fsub
sub
xor
mov
mov
cmp
cmp
je
ret
test
add
scas
and
or
inc
cmp
xchg
pop
jg
sbb
cmp
sub
push
or
je
xor
jmp
push
add
cmc
lods
sbb
sub
sub
and
sbb
(bad)
ja
adc
mov
clts
mov
xor
mov
retf
fdiv
cmp
movs
mov
fwait
sub
and
fs
xor
add
dec
xchg
inc
pop
cmp
in
dec
loopne
add
add
jo
adc
test
dec
add
or
or
xchg
nop
and
adc
mov
dec
lods
fsubr
pop
mov
add
pusha
repnz
sub
dec
push
sub
mov
jl
jl
push
je
add
xor
ss
dec
or
out
sub
int3
add
xor
xchg
hlt
rol
sbb
xor
sub
fld
ins
les
cmp
ss
jmp
inc
movs
std
adc
ror
call
xlat
int
fmul
jae
add
mov
add
add
xor
mov
sub
sbb
inc
adc
or
(bad)
dec
neg
in
mov
pop
jne
ror
mov
je
retf
imul
je
sub
in
lock
ds
adc
sti
out
cmpxchg
push
les
lds
adc
xor
inc
jns
xchg
pmullw
ins
call
dec
mov
cmps
mov
mov
mov
push
mov
retf
lock
add
mov
and
out
(bad)
xor
cmp
fdivr
mov
jecxz
adc
mov
xor
cmp
or
(bad)
ja
fwait
sub
enter
ror
push
inc
sbb
imul
add
ins
outs
jae
sti
pop
mov
stos
outs
inc
mov
mov
cmp
sub
mov
dec
int
add
imul
arpl
jle
sbb
or
les
cli
das
mov
mov
push
and
inc
ret
sbb
adc
repz
call
ins
mov
mov
dec
cmc
dec
lea
mov
cmp
adc
push
inc
sub
repnz
push
add
int3
push
loope
jmp
call
sub
lods
out
jl
xchg
scas
fcom
inc
sub
adc
sub
shl
(bad)
ficomp
dec
sbb
or
imul
rol
not
ss
rol
iret
and
rcr
out
mov
cwde
inc
sub
inc
cmp
les
cdq
push
clc
inc
xchg
shr
mov
sub
imul
pop
mov
and
mov
add
inc
mov
mov
inc
fnsave
cdq
push
sbb
ret
stos
and
cmp
xor
popa
mov
push
out
push
inc
xchg
sbb
push
inc
lods
xor
push
mov
test
fcom
push
mov
mov
mov
fistp
test
frstor
aad
or
jo
sbb
xchg
xchg
and
(bad)
mov
jmp
push
add
inc
add
push
xchg
or
add
sub
or
call
sub
retf
mov
cmc
add
sahf
retf
sub
pop
ins
or
js
das
fld
sbb
rcl
push
adc
push
and
xor
cmc
xchg
mov
outs
cmp
dec
and
sahf
xor
inc
adc
sbb
cmc
das
outs
add
popf
les
xchg
cmps
adc
sbb
inc
jmp
imul
pop
adc
popa
in
(bad)
int3
jmp
inc
add
clc
cmp
pop
xor
xchg
inc
xlat
enter
jl
push
movs
and
inc
sub
pop
cmp
or
out
lds
jae
sbb
sbb
or
mov
mov
inc
add
inc
fsub
loop
sbb
add
push
out
xchg
stos
dec
jmp
or
call
pusha
or
cli
nop
js
inc
mov
rol
cmp
and
jmp
hlt
push
sub
add
out
pop
std
inc
inc
add
icebp
movs
nop
retf
or
stc
add
movs
popf
sbb
bnd
lahf
and
enter
dec
sbb
xchg
test
or
jae
xor
or
mov
adc
loop
jns
stc
fxch
and
sbb
push
cmps
inc
pop
mov
push
xchg
cwde
and
mov
inc
imul
call
inc
shl
dec
test
add
sub
xchg
dec
inc
sbb
mov
mov
mov
and
mov
xchg
dec
adc
or
nop
inc
lock
ror
inc
mov
pusha
add
mov
in
add
call
fwait
gs
rcl
add
sub
xchg
mov
enter
cwde
cmp
mov
inc
and
or
mov
jl
lds
xor
adc
loopne
mov
cmp
or
mov
and
imul
xor
enter
rcl
sub
dec
and
push
and
jns
inc
push
shl
je
and
inc
sbb
jno
shl
adc
loope
inc
push
dec
in
mov
and
add
and
add
or
inc
sub
add
add
or
add
sbb
mov
add
inc
call
push
ror
test
shl
fsubr
and
sbb
movs
add
sub
add
adc
call
adc
dec
mov
and
jp
push
test
dec
in
pop
mov
cmp
push
sbb
repz
inc
test
jo
(bad)
xchg
movs
scas
scas
sub
add
inc
xchg
jecxz
sahf
sbb
pop
sub
xor
xchg
xor
test
xchg
cmps
mov
test
js
das
or
(bad)
push
sbb
mov
adc
rol
mov
mov
out
cmp
xchg
bound
jecxz
(bad)
shl
add
fild
inc
and
inc
pop
jo
mov
imul
popa
push
or
xchg
iret
stos
arpl
fdiv
arpl
(bad)
clc
dec
pop
mov
imul
int3
push
inc
sbb
cmp
mov
jbe
bnd
pop
mov
test
int3
add
xor
xor
js
dec
or
jmp
aaa
cmp
xchg
js
jge
or
adc
push
sub
dec
and
pop
xlat
pop
xchg
sub
jecxz
or
jecxz
cmp
push
push
sar
test
dec
movs
push
add
clc
rol
addr16
push
push
imul
xor
and
test
jl
inc
sub
jne
pop
push
mov
jns
popf
push
out
push
jo
pop
out
add
cwde
xor
push
shl
adc
push
fidivr
stos
jmp
addr16
pop
and
rol
and
mov
push
adc
xor
test
dec
daa
cmps
cli
lock
jmp
mov
cld
fcomp
sub
add
sub
adc
loopne
add
mov
push
sub
mov
push
imul
xor
cmp
or
adc
movs
mov
jae
mov
cmps
mov
and
arpl
in
cdq
inc
retf
outs
mov
aam
add
dec
pusha
in
fidiv
and
xchg
mov
mov
mov
aam
mov
mov
es
push
sar
int3
pusha
jmp
mov
mov
lds
test
or
(bad)
sbb
sub
mov
xor
jae
sti
(bad)
pop
sub
inc
push
in
(bad)
shr
push
jmp
sahf
dec
dec
push
mov
mov
pop
mov
ss
std
out
xor
and
in
sub
aad
push
pop
(bad)
fisubr
add
pop
pop
neg
dec
push
add
fiadd
clc
inc
clc
les
sub
rol
xchg
cmp
rcl
ins
mov
enter
or
dec
ins
cmp
fs
sub
clc
stos
cli
mov
sti
loope
xchg
arpl
mov
mov
inc
sub
fs
imul
lods
ret
xor
and
dec
out
(bad)
xchg
mov
popf
cmp
cmps
test
or
push
mov
int3
xor
test
call
ds
add
loop
jne
pop
jmp
adc
repnz
mov
stc
test
or
adc
jno
iret
push
repz
out
adc
or
ret
sti
call
dec
mov
push
adc
add
inc
aaa
mov
into
ins
fst
or
push
pop
jne
jecxz
cmps
jno
pop
jmp
xor
sbb
push
mov
lock
push
sbb
test
je
lock
add
xlat
xor
inc
xor
enter
iret
push
shr
xchg
sbb
clc
scas
dec
sub
cmp
mov
mov
add
test
sub
outs
push
test
adc
loope
mov
xchg
mov
mov
stc
daa
sub
and
jle
add
pop
dec
add
(bad)
push
and
cmp
aam
pop
(bad)
movs
push
cli
dec
xchg
repz
mov
pop
fadd
xor
or
sbb
add
fst
call
xchg
jmp
sub
adc
(bad)
jp
and
in
inc
dec
arpl
std
(bad)
jmp
out
loope
shr
repnz
popf
clc
add
pop
test
push
inc
test
mov
dec
jae
mov
jno
pop
in
and
or
push
fadd
sbb
jns
ins
xchg
and
cmp
adc
push
sub
(bad)
mov
cmps
arpl
imul
inc
sub
push
sub
fs
pop
mov
div
les
aas
or
pop
add
add
in
dec
push
cmc
js
pop
pusha
add
call
stos
pop
add
pop
cld
inc
call
inc
xor
adc
jp
mov
inc
jmp
mov
mov
rcl
nop
call
adc
bound
and
sub
fdivr
lods
lods
inc
and
inc
shl
xlat
popf
xor
movaps
out
mov
and
add
dec
and
movs
xchg
das
inc
inc
inc
xchg
and
imul
inc
mov
xchg
inc
adc
imul
ins
mov
mov
mov
push
not
adc
sub
push
iret
dec
push
sub
inc
dec
or
pusha
fadd
sub
cmps
xor
push
sub
outs
sub
push
push
das
into
or
adc
push
cld
mov
add
(bad)
push
and
mov
fucom
(bad)
sub
int
jle
jnp
fld
pop
push
mov
stos
or
add
and
add
or
inc
sub
add
add
or
add
or
pop
nop
and
ins
sub
xor
clc
call
outs
adc
lods
jnp
outs
add
jae
bound
pop
test
or
scas
sub
xor
jmp
xchg
mov
cmp
int
mov
lock
(bad)
lds
sbb
mov
mov
loop
popf
cmp
call
sbb
sub
mov
and
adc
leave
xchg
or
cs
cmc
es
scas
cmp
neg
(bad)
xchg
lea
adc
jne
rcl
mov
mov
xor
pop
test
push
bound
xchg
outs
pop
(bad)
sbb
cwde
lods
cmp
or
push
pop
int
add
cmp
movs
inc
dec
mov
das
mov
daa
dec
stos
scas
jp
popaw
push
icebp
push
inc
sub
jne
pop
sbb
jbe
mov
mov
ds
sub
sub
lods
dec
bound
data16
mov
sar
dec
adc
ds
icebp
(bad)
(bad)
fmul
xor
mov
aam
push
je
push
pop
fistp
sub
push
cmp
rol
sbb
fsubr
jne
push
cmp
sbb
lods
cmc
dec
pop
scas
dec
test
sar
aam
arpl
test
jae
cmp
cmp
mov
nop
push
shl
pop
pop
test
out
mov
mov
mov
repnz
test
and
push
mov
adc
mov
lea
xor
mov
stc
rdpmc
xor
inc
cmp
xor
fsub
or
push
xlat
int
cmps
xor
pop
in
push
out
mov
pop
pop
add
push
into
pop
and
push
cld
push
mov
xor
bound
sub
jno
add
cmp
inc
or
test
fwait
push
push
cwde
pop
je
nop
jo
cmp
(bad)
out
mov
shl
mov
sub
xchg
les
cmp
stos
shr
xor
sbb
sbb
int3
mov
or
sub
inc
retf
mov
add
jmp
xlat
ficom
mov
out
inc
mov
mov
and
mov
dec
sbb
(bad)
scas
shr
test
(bad)
dec
dec
stc
icebp
mov
xor
jbe
daa
ret
sub
ret
jl
cmp
and
mov
out
lods
xor
cmp
ror
push
mov
pusha
inc
aaa
stos
rol
jp
lds
in
adc
xchg
inc
adc
push
leave
pop
jbe
cmp
dec
cmp
xor
fimul
cmp
mov
fdivr
movs
pop
xlat
mov
fcmovb
fld
int3
xor
js
cmps
xor
fild
pushf
xor
and
(bad)
jmp
iret
sub
lods
jae
pop
lods
cmp
popf
add
push
cmp
rcr
std
(bad)
cmc
add
aam
(bad)
mov
cmp
stos
rcr
lds
lahf
mov
xor
lock
rcl
sub
sbb
cli
fist
in
add
mov
push
clc
data16
aad
dec
sbb
cld
pop
mov
inc
inc
or
clc
adc
add
cmp
mov
mov
sub
cwde
mov
push
sbb
imul
push
jmp
or
jmp
xor
or
inc
popa
popa
mov
ret
push
cmps
jo
cmp
mov
jp
pusha
push
call
mov
dec
ret
jl
sub
out
pop
sbb
xchg
ins
and
out
or
mov
or
call
push
push
setp
movs
sub
and
ins
xor
jne
cmps
cmp
xor
sbb
mov
mov
imul
sbb
movs
and
xchg
or
add
and
xor
clc
je
sub
xor
ret
sub
punpckldq
dec
gs
arpl
sbb
cdq
jo
and
leave
inc
call
imul
cmp
gs
and
sub
int3
rol
jl
dec
push
xchg
(bad)
rol
jp
jmp
mov
cmps
sub
add
push
adc
mov
loop
mov
inc
sub
ror
push
or
and
pop
test
and
dec
dec
cmp
sbb
(bad)
out
movs
ret
xchg
sub
mov
inc
xchg
inc
shl
dec
ror
push
sbb
dec
bswap
adc
pop
movs
jb
adc
inc
adc
stos
les
inc
(bad)
add
retf
push
dec
dec
dec
push
addr16
push
fwait
push
add
rcr
popf
out
je
add
inc
adc
xor
mov
mov
sub
sub
nop
mov
call
inc
push
add
int
mov
retf
jbe
cmps
pop
fldcw
mov
adc
in
push
push
in
add
sbb
or
push
push
mov
pop
stos
dec
in
adc
and
add
or
inc
sub
add
add
or
add
sub
and
cli
pop
call
and
inc
sbb
xchg
bound
fmul
push
inc
lods
pop
(bad)
call
adc
addr16
or
scas
cwde
pop
dec
and
lods
push
add
cmp
ins
loope
inc
adc
cmps
outs
pushf
dec
adc
sbb
ret
ins
push
aam
push
pop
add
fwait
and
pop
mov
cmp
loop
mov
ins
ds
cmc
push
call
daa
cmp
sbb
ret
xchg
(bad)
inc
push
dec
add
mov
jecxz
xchg
in
rcl
sbb
add
xchg
dec
cmp
sub
jecxz
push
xor
xchg
inc
mov
and
ins
add
mov
pop
sar
push
ret
cmp
cmp
adc
mov
int3
xchg
push
mov
fwait
daa
pop
pusha
dec
test
xchg
out
outs
xchg
sub
fsubr
int3
shl
or
add
loopne
inc
add
mov
push
jnp
sbb
loop
and
cmp
add
adc
loope
sbb
mov
sbb
shl
xor
sub
nop
inc
sahf
mov
lock
cmp
mov
add
dec
jecxz
sub
jb
mov
sub
iret
xchg
pusha
xchg
in
inc
sbb
rcr
add
mov
les
aad
or
push
dec
dec
push
and
adc
repnz
lahf
cmp
xchg
jnp
mov
sbb
or
arpl
(bad)
xchg
int3
lock
movs
lahf
sti
fs
jmp
and
cmps
test
nop
pusha
mov
xchg
dec
push
movs
and
iret
lods
mov
push
cmps
sahf
xchg
pop
fs
stos
cmp
pop
cmp
call
mov
jmp
cmps
cld
jl
sub
stos
cmp
mov
lods
cwde
sub
aas
adc
rol
xor
sti
in
movs
jnp
mov
imul
(bad)
mov
cs
add
mov
adc
(bad)
nop
sub
dec
xor
pop
ja
mov
mov
inc
inc
lock
imul
rcl
daa
ret
and
arpl
mov
out
popa
nop
icebp
rcl
(bad)
ins
mov
cwde
lods
(bad)
scas
out
add
je
add
sub
leave
int3
mov
ror
lock
mov
sbb
mov
mov
repz
cmp
or
test
je
in
pop
xchg
xor
ficomp
or
les
(bad)
mov
sbb
std
scas
ret
mov
sub
fnstenv
mov
mov
push
dec
jecxz
pop
mov
mov
(bad)
pop
sub
or
stos
mov
dec
out
sahf
or
mov
mov
scas
es
mov
sahf
jo
(bad)
(bad)
push
jmp
pavgb
shl
out
add
xchg
mov
fdivrp
loope
pop
aas
stos
mov
mov
add
mov
and
cmp
in
and
aaa
shl
jg
sub
mov
xor
xchg
xchg
fimul
in
jg
jp
or
clc
or
xchg
or
aad
or
sub
leave
xor
dec
mov
retf
push
or
sub
popa
nop
push
sub
cmp
sub
push
cwde
inc
addr16
int
adc
mov
push
add
push
or
xor
sub
dec
fs
add
add
dec
leave
dec
add
add
xchg
mov
mov
and
sub
movs
cmp
or
jae
mov
or
in
fstp
inc
sbb
popa
nop
and
cwde
scas
mov
lock
mov
mov
mov
jae
mov
arpl
mov
inc
sbb
in
mov
push
inc
cmp
mov
add
out
push
push
mov
dec
jmp
movs
jb
add
cld
je
aas
adc
push
jmp
stc
cmp
call
dec
push
shl
jne
loop
add
sbb
jle
xor
cmp
cmp
les
cmp
popf
in
inc
lds
das
mov
outs
push
(bad)
xor
or
xor
sbb
ins
add
aam
retf
cmc
xchg
fstp
inc
aam
adc
loope
addr16
or
inc
xor
pop
add
mov
(bad)
enter
xor
or
shr
ror
mov
and
mov
and
and
inc
pop
cmps
inc
inc
sub
cmps
ins
nop
imul
xchg
and
or
movs
repz
jbe
or
mov
sbb
sub
scas
inc
cmps
add
xor
test
jae
xchg
xchg
add
lods
xor
adc
mov
ins
xor
jne
cmps
lods
xchg
(bad)
fwait
int3
cli
(bad)
jo
adc
pop
push
adc
movs
ret
in
test
jno
retf
sub
pop
hlt
out
gs
and
test
adc
adc
mov
add
and
add
or
inc
sub
add
add
or
add
pop
inc
jo
cmp
pop
fsub
xchg
jmp
add
mov
mov
lods
pop
or
shr
xchg
outs
and
or
mov
mov
xchg
xchg
das
xchg
sub
les
jne
sub
dec
cwde
or
pushf
push
adc
fadd
std
cmp
fmul
ret
arpl
jl
aad
dec
lods
loop
mov
mov
(bad)
or
xor
fsubr
fist
dec
adc
loopne
cmp
push
push
fild
inc
mov
sbb
pop
rcl
dec
push
pop
pop
leave
push
sub
ret
add
movs
cmc
lods
mov
mov
ffreep
jg
retf
cmp
add
dec
jno
cmp
adc
sbb
into
popf
sti
outs
arpl
jmp
fsubp
retf
xor
movs
or
in
mov
clc
cdq
shl
lods
sbb
arpl
ja
dec
sbb
mov
test
sbb
xor
push
pop
fidiv
loop
pop
and
in
adc
and
mul
neg
loop
cld
loope
or
lahf
int
pusha
push
cmp
push
bound
nop
inc
or
add
sub
popf
cmp
nop
rol
xor
inc
mov
add
lahf
test
lock
xchg
sti
test
out
cld
nop
leave
(bad)
xchg
adc
fild
xchg
adc
mov
dec
xor
jb
gs
pop
mov
iret
lahf
cmp
cwd
pushw
pop
mov
mov
adc
retf
jno
jb
in
inc
sbb
mov
cdq
test
dec
add
add
xchg
test
mov
cdq
xchg
cwde
loope
(bad)
adc
xchg
mov
dec
sub
cmp
mov
xor
repnz
cmp
dec
loop
call
scas
cwde
jmp
dec
cmp
mov
add
xor
loop
test
jmp
sbb
test
add
pusha
inc
jl
sahf
dec
popa
lahf
jmp
shr
mov
(bad)
pop
push
mov
mov
xor
sub
xor
add
pop
mov
repnz
sub
(bad)
je
mov
mov
rol
mov
cmp
sbb
scas
sub
hlt
cli
movs
int3
add
loop
xor
xchg
xor
pusha
and
jnp
sub
rol
dec
push
pushf
test
push
sbb
daa
aas
cmp
or
out
iret
pop
jecxz
pop
retf
push
sbb
aas
mov
ss
add
neg
jl
inc
lea
cmp
leave
push
pop
scas
sti
jp
mov
daa
lahf
nop
jg
sbb
aas
in
mov
mov
lods
jno
in
dec
arpl
(bad)
test
repnz
jmp
cmps
mov
xor
xor
cmp
enter
xchg
in
push
dec
imul
repnz
mov
jl
test
jmp
push
into
sbb
jmp
cmps
arpl
es
popw
mul
ja
data16
ffreep
pop
clc
lea
or
cmps
push
sub
dec
outs
rcl
xchg
sti
fdiv
and
and
push
inc
out
mov
in
adc
add
jmp
in
jo
adc
mov
daa
(bad)
dec
rcr
mov
pusha
cmp
nop
push
dec
pusha
add
mov
ror
cmp
or
aas
aad
loopne
xor
or
jp
and
ja
rol
aam
xchg
sbb
pop
dec
es
popa
(bad)
pushf
push
push
pop
dec
and
xchg
in
mov
es
and
push
in
xchg
mov
xor
push
xor
jns
arpl
xlat
les
cmp
test
sbb
mov
jno
sar
dec
or
mov
xor
inc
xchg
xchg
data16
mov
and
push
mov
mov
xlat
xor
and
jns
push
sbb
adc
push
lea
xchg
ret
push
out
lea
mov
add
ror
mov
xchg
pop
and
inc
xor
mov
mov
pop
call
mov
sub
inc
rol
mov
and
cmp
xchg
cmps
pop
test
adc
sub
and
mov
jne
ror
gs
not
sbb
and
test
cwde
rol
test
adc
and
lahf
add
(bad)
pop
out
add
sub
push
xchg
dec
xor
adc
add
rol
loop
xchg
lock
cmps
pop
adc
add
and
add
or
inc
sub
add
add
or
add
or
popf
mov
pop
cmp
lds
cmp
xor
push
cs
add
sbb
mov
cs
xor
rol
fsubr
or
pushf
or
push
mov
cli
xchg
out
add
xchg
arpl
int3
cwde
aad
retf
push
sub
and
pop
inc
mov
mov
and
into
jl
mov
push
adc
xlat
sbb
push
mov
sbb
push
mov
xchg
sub
popa
mov
nop
push
imul
adc
sahf
jne
pusha
add
test
inc
mov
scas
xor
call
test
jbe
pop
test
test
sub
dec
test
jns
push
jecxz
xchg
mov
stos
dec
popf
xor
jae
arpl
mov
mov
ss
mov
fdivr
xor
or
jl
lock
jmp
jecxz
xor
shr
mov
lahf
(bad)
inc
push
clc
fistp
or
ret
add
xor
aam
dec
popa
jne
(bad)
lahf
adc
loopne
adc
scas
mov
lods
rcr
fcom
movs
test
mov
push
enter
sbb
mov
and
push
(bad)
push
adc
mov
xchg
fcomp
loop
inc
push
imul
cmp
ja
inc
jecxz
rol
xor
add
loopne
inc
cli
jecxz
xchg
pusha
or
mov
dec
or
les
int
(bad)
jno
sub
sbb
popf
js
mov
mov
push
cmp
dec
out
and
mov
mov
mov
sbb
je
call
add
mov
mov
movs
pusha
push
test
or
mov
into
xor
js
clc
xor
test
push
retf
aam
mov
jecxz
sub
bound
add
scas
mov
out
cmp
int3
sbb
cmp
sub
xchg
mov
inc
or
test
sub
mov
jb
sub
jecxz
rol
popf
jnp
cmp
ins
xchg
jmp
and
inc
mov
mov
mov
mov
and
arpl
cmp
xchg
dec
ins
jo
xchg
dec
xor
add
repnz
enter
ret
ret
cmp
test
xor
mov
mov
cld
fs
xor
xchg
cld
aam
mov
jecxz
lods
xor
push
addr16
or
rol
inc
pop
je
inc
sti
xor
lods
dec
jb
push
xchg
mov
nop
loop
xor
int3
cmp
pop
jp
add
push
stos
in
call
imul
loope
cli
sbb
stos
sahf
lea
dec
dec
cmps
popf
imul
and
sub
inc
adc
nop
outs
xor
mov
pop
xor
cs
popf
inc
mov
mov
push
in
jle
push
pop
sub
jp
loope
adc
dec
dec
mov
mov
out
popa
jle
arpl
or
test
stc
js
mov
pop
ja
call
aad
rol
adc
ret
or
loop
daa
mov
mov
xchg
outs
rcl
mov
inc
lahf
xchg
inc
sar
dec
cmp
adc
inc
and
adc
ror
xor
scas
cmp
shl
aaa
ss
push
and
out
imul
in
pop
inc
mov
loope
sbb
jecxz
dec
or
ret
cmp
aaa
or
jmp
and
mov
push
and
dec
or
inc
sub
popa
mov
das
xor
retf
and
mov
pop
mov
mov
mov
shr
push
and
rcr
or
cmp
or
icebp
inc
cmp
xchg
lods
push
sbb
ret
push
jae
or
rcl
inc
les
xor
pop
xchg
xchg
and
xchg
repnz
dec
cmp
or
xchg
push
jns
cmp
sub
and
add
sub
retf
imul
xor
add
push
dec
dec
cmp
leave
data16
test
in
xchg
mul
call
dec
outs
shr
xor
cmp
dec
into
pop
xchg
xchg
mov
movs
cmps
dec
adc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
adc
pop
test
cwde
ret
add
cwde
sub
mov
(bad)
cs
pop
or
cmp
adc
inc
xchg
push
xor
mov
lds
aaa
scas
mov
(bad)
xchg
sbb
mov
cmp
cmps
sbb
mov
mov
call
push
in
nop
daa
push
xchg
sbb
push
pop
(bad)
scas
pop
xchg
or
aam
cmp
xor
mov
mov
imul
sar
leave
xchg
test
mov
pop
mov
rol
cmps
mov
lods
dec
push
lahf
jecxz
(bad)
jmp
pop
push
scas
pop
les
pop
stc
cmps
mov
imul
mov
rcl
jbe
push
jbe
(bad)
xchg
call
sar
scas
ret
dec
xor
test
scas
jb
jno
sbb
repz
cmc
cmp
pop
data16
push
or
into
mov
inc
out
adc
add
adc
mov
jmp
iret
pop
aas
jns
add
dec
in
test
sbb
inc
pop
js
fadd
jg
clc
and
test
hlt
(bad)
movq
mov
aad
push
cmp
ins
(bad)
cmp
cmps
mov
jg
in
mov
jae
mov
xor
(bad)
lahf
mov
mov
ret
dec
popa
xlat
sub
sahf
je
out
jecxz
dec
fs
mov
loopne
js
and
sbb
ror
test
in
mov
fs
mov
dec
popa
jne
sub
mov
(bad)
xchg
stc
inc
neg
cmp
pop
sahf
push
rol
bound
or
cmp
jnp
mov
cwde
mov
call
push
dec
popf
pop
sbb
daa
cmps
dec
out
xor
jo
cmp
or
jl
(bad)
jp
cdq
sahf
push
into
mov
out
sub
mov
es
dec
cmp
sub
cmps
cmp
movs
scas
out
mov
je
adc
scas
aaa
lods
aas
(bad)
pop
or
sbb
test
or
lods
mov
push
sbb
jmp
sub
aas
adc
mov
ficom
jmp
push
in
mov
inc
or
sub
loop
sar
loop
cli
out
stos
adc
outs
ret
cmp
outs
mov
lds
xchg
push
pop
lock
(bad)
or
pop
jae
xchg
xor
shr
mov
or
mov
retf
je
xchg
xchg
bound
push
cmps
stos
xor
cmps
mov
and
test
or
(bad)
pop
lahf
div
ins
mov
and
push
popf
mov
dec
jne
and
and
cmp
pusha
cmp
popf
or
xor
xchg
nop
lds
inc
push
imul
mov
cmp
mov
xchg
fdiv
lea
xchg
add
xchg
xchg
imul
arpl
mov
in
push
pop
adc
xchg
xchg
adc
aas
leave
dec
mov
jns
in
call
pop
(bad)
and
gs
xchg
test
adc
xchg
lock
mov
stc
mov
or
mov
cmp
popf
sub
mov
(bad)
shl
fs
adc
dec
push
fadd
or
sub
arpl
arpl
or
rcl
xor
sub
les
mov
xor
cmp
loope
dec
inc
test
shl
jae
ret
cwde
enter
adc
adc
rcr
dec
dec
loop
gs
add
and
add
or
inc
sub
add
add
or
add
cdq
rol
mov
mov
loop
dec
pushf
dec
rcr
test
or
popa
ret
(bad)
or
fadd
add
sbb
mov
(bad)
mov
push
ret
adc
xor
xor
(bad)
mov
sbb
sbb
dec
xchg
mov
shl
cdq
xor
es
jge
push
cs
out
sub
ret
xchg
les
lods
fldenv
mov
and
xchg
fistp
inc
mov
fisttp
mov
lods
pop
lods
jp
sub
xchg
push
ja
lock
(bad)
in
shl
mov
pop
xor
popw
sbb
ins
js
in
mov
retf
mov
sbb
jne
mov
jle
scas
pop
lea
cwde
mov
or
jmp
mov
scas
(bad)
in
loopne
xlat
push
out
popa
repz
imul
mov
imul
idiv
jl
fldenv
mov
add
xchg
cwde
arpl
out
loopne
or
daa
push
pop
adc
jmp
mov
pop
sbb
mov
xor
adc
data16
mov
data16
jnp
cmps
and
ds
in
jo
out
sbb
cmp
mov
push
aaa
mov
int
fistp
add
mov
and
js
cmps
xchg
sbb
sbb
ja
mov
cwde
push
cwde
fwait
mov
jno
and
popf
xchg
dec
push
hlt
mov
cdq
mov
fs
mov
mov
or
inc
fst
push
adc
dec
loop
imul
(bad)
mov
mov
pop
ss
sahf
mov
cmps
xchg
mov
sub
xchg
fisubr
stos
push
jge
xchg
pop
dec
icebp
stos
popf
addr16
and
inc
sub
cdq
mov
mov
inc
aaa
sbb
dec
jmp
pop
dec
shl
inc
adc
sbb
dec
xor
hlt
jmp
sub
ss
push
mov
and
not
push
aam
push
push
dec
and
out
loop
shl
aam
mov
test
dec
adc
dec
daa
in
or
mov
or
cli
mov
clc
lods
icebp
enter
sbb
and
les
mov
retf
(bad)
repnz
or
sub
mov
dec
jae
xor
add
mov
ds
call
inc
inc
adc
add
stc
add
fs
add
add
add
or
std
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
mov
iret
lahf
inc
or
dec
mov
shl
retf
shl
cmp
push
sbb
adc
add
add
dec
add
add
add
popa
xor
sbb
dec
add
lock
add
call
dec
inc
cmp
popa
xor
xor
idiv
add
js
(bad)
sub
dec
xlat
(bad)
stos
(bad)
in
add
push
into
shr
lods
xchg
sub
(bad)
(bad)
sub
gs
pop
in
jmp
mov
stos
add
std
add
cmc
add
inc
(bad)
(bad)
pop
std
mov
aam
(bad)
aad
dec
mov
mov
mov
dec
inc
add
push
jbe
aaa
int3
aad
cld
mov
div
mov
add
cli
cmc
jmp
push
jno
jne
(bad)
fsub
in
jbe
mov
sub
ins
test
add
push
and
dec
and
mov
adc
shl
xor
sub
inc
mov
ins
mov
sahf
mov
(bad)
call
nop
repz
imul
fist
push
jb
test
addr16
mov
dec
test
(bad)
dec
add
dec
std
cld
repz
(bad)
mov
mov
cmps
mov
and
mov
cli
call
call
add
(bad)
(bad)
mov
ret
mov
(bad)
inc
enter
cwde
add
xor
jecxz
push
sub
mov
in
and
repz
daa
enter
mov
push
jo
(bad)
test
enter
ds
cmps
add
js
cmps
xor
mov
pop
or
sbb
fst
push
das
stc
fistp
(bad)
fmul
cmps
cmps
and
jmp
call
xor
add
cwde
adc
jnp
mov
xor
xlat
inc
out
in
mov
push
mov
push
lods
ret
ret
jecxz
push
adc
in
mov
movs
add
das
(bad)
loopne
out
lock
adc
loop
stc
sti
sti
test
test
sbb
stos
or
in
fwait
test
xchg
lahf
mov
stos
ud0
or
aad
fmul
(bad)
mov
test
test
mov
cmps
lods
mov
mov
cmp
imul
xor
out
repz
leave
mov
fucom
sbb
fwait
jmp
or
(bad)
or
into
or
xor
mov
dec
repnz
mul
add
jno
div
clc
inc
or
pop
inc
mov
(bad)
mov
add
jmp
icebp
mov
sti
mov
repnz
mov
outs
out
bnd
pop
pusha
repnz
cmc
or
dec
inc
(bad)
mov
fbstp
icebp
fiadd
pop
jle
sbb
scas
jle
(bad)
xchg
div
icebp
aam
repz
or
sti
div
mov
rcr
or
cs
cmps
add
das
cs
mov
mov
mov
idiv
sub
dec
in
icebp
or
pop
jle
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
xor
inc
sub
add
add
add
add
or
add
or
mov
shl
sub
mov
push
push
mov
pushf
dec
mov
inc
inc
cmp
mov
(bad)
into
push
xchg
mov
or
xchg
add
xor
sub
in
xor
xor
mov
push
out
add
mov
fwait
push
cmp
shl
xchg
popa
mov
mov
xor
dec
xor
retf
xchg
push
test
sub
sbb
add
bound
sbb
cmp
inc
lock
push
mov
push
xchg
icebp
fnstsw
stc
sbb
xor
iret
mov
and
ret
fst
sbb
call
sahf
inc
retf
outs
cld
and
pusha
call
mov
pusha
cwde
cdq
(bad)
clc
xor
pop
cmp
sbb
xchg
add
sub
lods
mov
dec
lahf
call
adc
or
repnz
adc
les
test
sbb
sbb
adc
sbb
jl
xor
and
shl
add
push
test
popf
xor
shl
sub
mov
adc
mov
xchg
test
pop
(bad)
test
or
cwde
or
ins
or
add
bound
or
out
pop
cmp
and
xor
add
jl
inc
adc
ror
dec
data16
in
ret
push
sahf
imul
and
add
xchg
push
bound
xchg
add
out
xchg
arpl
ss
or
out
dec
icebp
inc
and
push
and
push
xor
jno
arpl
add
add
clc
(bad)
call
mov
xchg
xchg
inc
mov
pop
inc
jmp
cmp
out
call
cwde
loop
sbb
inc
lock
sbb
add
add
pusha
lock
sub
mov
cmp
sub
repnz
test
ror
mov
bound
xchg
pop
sub
not
pop
pusha
dec
and
or
adc
mov
movs
retf
push
sbb
sub
sub
mov
and
lods
add
adc
repnz
ds
addr16
sub
movs
xor
xor
ds
cmp
mov
movs
xchg
inc
add
and
loop
mov
rol
xchg
call
mov
or
lods
add
loopne
add
push
or
loope
pop
sbb
int3
pop
sub
scas
mov
cmp
jecxz
jl
and
retf
sbb
sbb
aaa
es
and
and
retf
lea
fdiv
push
imul
push
outs
xor
movs
fs
and
pop
pop
xor
(bad)
pop
push
cmp
das
ret
inc
mov
dec
xor
outs
pop
pop
mov
push
popf
jecxz
add
or
in
ret
mov
clc
pop
jge
dec
pop
xchg
imul
sbb
(bad)
(bad)
das
xchg
jge
xchg
jne
retf
repnz
and
rol
push
lods
xchg
in
imul
lds
push
call
mov
pop
lds
mov
jbe
sbb
adc
xchg
or
pop
inc
cmp
mov
or
enter
(bad)
pop
iret
sub
jecxz
add
inc
push
pop
inc
sbb
aam
mov
adc
mov
in
sbb
inc
data16
xor
add
and
icebp
mov
sub
test
and
push
pop
mov
adc
xchg
push
push
sub
jno
pop
call
imul
(bad)
mov
xchg
retf
cwde
(bad)
pushw
lods
rol
push
inc
lock
pop
xchg
cwde
dec
push
pushf
ror
jecxz
fs
xchg
popa
mov
and
call
add
ret
add
mov
mov
mov
or
push
repnz
push
(bad)
push
loop
inc
sbb
pop
and
jb
je
push
lods
push
adc
ret
ror
sbb
adc
enter
mov
push
sbb
sub
rol
push
add
sub
and
sbb
sbb
sbb
adc
fistp
punpcklbw
and
dec
push
mov
mov
or
mov
mov
lea
pop
outs
icebp
inc
or
add
cmp
mov
push
ror
enter
push
add
cmp
cmp
dec
pop
loop
mov
pop
xor
and
inc
xor
bound
pop
adc
and
push
mov
adc
clc
test
inc
rol
es
xchg
adc
add
sbb
xor
pop
shl
sub
dec
add
add
stc
add
or
inc
sub
add
add
or
add
or
movhlps
or
sub
inc
mov
shl
add
sub
mov
jg
(bad)
mov
stos
test
adc
mov
sbb
xor
adc
aad
xor
jo
inc
add
xchg
js
add
or
inc
add
test
sub
rol
sbb
pop
mov
lea
int3
ja
loopne
sbb
(bad)
sub
out
out
or
sub
cld
pusha
dec
loopne
jg
add
sbb
add
(bad)
mov
arpl
xor
(bad)
nop
and
fsub
mov
and
into
sub
xchg
inc
int3
pushf
retf
jbe
std
cwde
push
ror
add
add
stc
add
or
inc
sub
add
add
sub
add
inc
dec
sbb
mov
rol
mov
rol
and
movs
pusha
add
fsubr
ret
mov
adc
(bad)
jecxz
add
ds
dec
imul
pusha
bnd
push
push
sbb
mov
add
jg
sar
shl
cmp
jae
je
shr
push
inc
or
inc
push
movs
sbb
ret
test
test
jp
in
inc
cdq
push
sub
mov
sbb
cmp
add
jmp
popa
(bad)
jo
jno
sub
or
lods
and
jle
clc
in
mov
pop
fild
lods
fstp
daa
or
mov
push
ins
push
sbb
shl
or
dec
mov
mov
jnp
sbb
lods
out
add
jae
stc
je
out
fcomp
(bad)
jmp
fdivr
dec
mov
add
sub
jle
add
imul
fadd
cmp
dec
mov
outs
out
rcr
and
lods
test
push
ss
mov
inc
inc
or
and
pushf
xchg
loopne
out
and
ret
rcl
or
(bad)
inc
xchg
ss
rol
sbb
mov
push
dec
mov
push
add
inc
mov
rol
xor
nop
daa
push
popa
jno
xchg
ror
loopne
add
sahf
sub
add
push
cmps
inc
sbb
aas
pop
cli
jecxz
daa
sub
pusha
in
out
arpl
iret
adc
neg
arpl
xchg
mov
shl
adc
and
mov
or
mov
inc
and
inc
push
sub
les
or
or
ins
add
retf
cmp
(bad)
xchg
sbb
push
sbb
jno
call
loopne
sub
adc
add
inc
add
xor
test
and
js
inc
push
and
push
inc
adc
and
add
and
gs
xor
jl
dec
push
sbb
mov
sub
and
jl
leave
aas
(bad)
mov
adc
clc
(bad)
arpl
es
push
inc
push
shl
pop
add
rcl
add
pushf
xchg
mov
aas
or
dec
or
inc
stos
or
adc
mov
aam
ret
pop
jmp
or
ss
in
dec
pop
xor
jno
in
(bad)
call
sub
out
inc
mov
test
pop
jno
cmp
add
push
or
and
dec
jo
mov
enter
cmc
(bad)
and
mov
xchg
(bad)
sub
xor
jne
sbb
jg
(bad)
fcomp
inc
or
aaa
repnz
dec
into
out
pop
xchg
xchg
enterw
in
nop
xchg
test
sub
dec
js
gs
into
pop
lods
ins
bound
pop
leave
ret
mov
add
inc
ss
pop
jge
ja
stos
cmp
xchg
mul
mov
push
rcr
inc
(bad)
sbb
enter
and
out
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
add
sub
loopne
sbb
mov
jl
mov
sbb
sbb
xchg
add
and
clc
popa
mov
mov
test
test
gs
xchg
aas
push
sub
popa
retf
inc
dec
ds
push
inc
aas
pop
jb
movs
lock
inc
adc
ds
push
push
(bad)
jge
fs
iret
sub
mov
sbb
imul
mov
or
aas
dec
pop
mov
mov
mov
sbb
mov
ss
arpl
and
xchg
inc
jmp
fdivr
lods
jmp
push
ins
(bad)
push
in
and
mov
(bad)
or
out
mov
into
mov
ins
mov
or
in
pop
mov
sbb
rcr
xchg
bndstx
ins
cmp
cs
(bad)
scas
mov
inc
push
sti
(bad)
je
fcos
jl
into
js
dec
inc
mov
add
clc
add
nop
aas
dec
lock
sub
popa
add
je
sub
test
mov
pop
pop
nop
outs
add
add
xor
nop
mov
cmps
bound
inc
mov
jecxz
daa
or
inc
adc
and
and
and
shr
pusha
cmp
loopne
adc
push
sub
movs
xchg
push
pop
imul
je
aaa
sbb
cmp
pushf
push
pop
sub
xchg
add
push
xor
inc
mov
imul
cs
sub
jb
popf
ror
xchg
dec
push
hlt
cmps
test
sub
push
push
aam
cmps
push
icebp
dec
sub
add
and
add
or
inc
sub
add
add
add
add
or
jmp
rol
adc
push
test
push
loope
inc
adc
push
(bad)
inc
mov
call
inc
mov
adc
scas
sbb
mov
mov
cmps
inc
or
call
aas
xchg
and
movs
add
push
rcr
push
movs
popa
cmc
pop
mov
add
add
stc
add
or
inc
sub
add
add
or
add
or
lock
cmp
adc
imul
shl
in
sub
test
add
adc
or
adc
ret
lods
cmps
mov
mov
pusha
xchg
dec
loopne
add
inc
push
movs
nop
push
or
or
add
and
ins
in
cmp
mov
loopne
ret
and
pusha
dec
retf
jecxz
jae
adc
fs
and
push
push
mov
bound
sbb
mov
inc
inc
pop
add
inc
fild
push
sub
sub
dec
xchg
push
add
in
loopne
mov
push
cwde
loopne
add
pop
call
lods
push
inc
inc
rol
push
ret
imul
mov
bound
push
rcr
inc
rcl
pushf
sub
lods
sbb
in
pop
sub
dec
cli
sub
mov
adc
push
fs
jmp
outs
nop
loopne
out
mov
cwde
mov
ficom
pusha
xchg
or
test
sbb
pop
dec
xchg
rol
xor
inc
push
xchg
rol
push
sub
js
pop
and
aas
push
enter
call
hlt
iret
sub
or
add
adc
cs
push
inc
test
xchg
mov
add
xor
add
xor
test
push
push
lods
xor
lock
rcl
add
or
and
test
loope
pop
and
push
popa
sbb
test
adc
push
shl
ins
rol
and
or
xchg
inc
aas
call
inc
add
aas
adc
and
sbb
enter
mov
and
rcr
lock
pop
push
ins
jbe
and
cmc
or
add
out
cmp
push
mov
ins
inc
push
or
pop
push
ror
push
cmc
shl
and
test
dec
cdq
mov
or
aad
popf
or
nop
inc
lahf
cwde
outs
mov
add
arpl
ds
nop
or
or
pop
xchg
mov
adc
or
ins
mov
fst
inc
add
dec
or
or
xor
or
mov
sub
cs
mov
adc
pop
loope
adc
mov
inc
pop
or
xchg
inc
aas
mov
nop
push
xor
inc
retf
sbb
add
jbe
add
xchg
pop
dec
xchg
iret
pop
je
inc
mov
jge
adc
aas
push
push
enter
mov
hlt
dec
mov
add
mov
inc
push
push
cmp
ins
nop
rol
inc
bswap
jo
xor
aas
mov
inc
sub
aam
add
sbb
sub
xchg
or
inc
and
push
xchg
push
jno
ret
fld
cld
mov
add
pop
and
adc
es
jo
inc
xor
test
mov
add
xor
rol
and
adc
rol
or
add
push
sbb
les
inc
adc
fadd
loopne
add
xchg
int
call
inc
retf
sbb
add
pop
mov
xor
add
nop
or
leave
aas
sbb
mov
mov
loope
sbb
push
js
inc
pop
inc
loopne
mov
js
add
or
inc
pop
add
(bad)
aam
add
mov
add
sub
or
add
add
mov
sub
and
push
dec
sti
add
mov
or
sub
rol
adc
pop
aas
mov
add
mov
jp
pop
xor
adc
jmp
inc
cs
ror
pusha
test
xchg
les
lock
jno
loopne
bound
pop
int3
dec
popf
push
sbb
pop
cld
(bad)
daa
sbb
push
xor
or
shl
or
sbb
cmp
sbb
sahf
inc
add
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcr
sub
and
push
and
jl
popa
loopne
inc
ja
dec
fsubr
and
fwait
(bad)
sbb
jbe
add
sbb
mov
push
and
push
fcom
xchg
nop
or
lea
xchg
add
mov
push
dec
cmp
in
ret
pop
xchg
pusha
or
sub
lds
sub
or
dec
xchg
popa
cmps
ret
jb
push
inc
and
shl
or
shl
mov
sub
mov
sar
inc
push
xor
or
xor
sub
jl
hlt
pusha
push
mov
or
ss
add
rol
inc
push
and
add
sub
and
pop
test
fs
cdq
dec
and
imul
movs
fsub
js
seto
mov
call
mov
inc
in
ss
int3
setle
or
add
add
and
jbe
and
add
movs
add
jbe
mov
and
add
add
nop
add
pop
pop
xchg
or
in
xchg
xor
nop
xor
nop
push
add
rol
add
hlt
iret
jae
icebp
inc
add
jle
push
dec
xor
add
les
xchg
sub
mov
lds
enter
and
icebp
inc
cmp
pop
add
std
or
jbe
and
fld
dec
ja
sub
ret
pop
ds
and
xchg
or
leave
pushf
or
add
adc
stos
sub
ret
test
inc
xor
adc
iret
cs
jb
mov
cs
xchg
inc
cmp
sub
inc
inc
inc
and
jns
adc
and
or
push
xor
inc
stos
pop
mov
adc
xor
mov
dec
adc
retf
and
aam
jmp
test
sub
(bad)
or
ins
clc
rol
xchg
inc
loope
jge
cmp
and
add
inc
sbb
and
dec
inc
pop
sbb
les
retf
data16
xor
mov
dec
xor
xor
pop
add
mov
aam
push
sub
inc
adc
repnz
mov
stos
rcr
dec
sub
add
jno
das
sbb
movs
inc
adc
rol
sbb
and
push
mov
adc
jle
call
mov
jo
js
loop
int
dec
mov
adc
and
jno
ss
add
jg
and
icebp
dec
xor
jge
hlt
dec
pop
xor
sbb
xor
js
adc
out
push
inc
(bad)
(bad)
ror
add
out
addr16
popf
sbb
mov
add
mov
aas
fnsave
xor
int
jge
rol
or
sbb
sub
or
shl
fld
and
or
test
retf
pop
and
ret
inc
fld
jo
push
mov
add
add
fcmovnbe
(bad)
pop
pop
or
rol
push
(bad)
fcom
xchg
jmp
popf
rol
add
stc
adc
xor
inc
sub
fild
sbb
pop
sub
sbb
sbb
or
inc
repz
add
add
sbb
loopne
aam
jecxz
add
or
jo
pusha
cld
and
add
inc
aaa
inc
add
clc
sbb
cmp
(bad)
icebp
pop
cmps
cmp
and
push
push
or
popa
adc
inc
mov
mov
add
mov
mov
dec
sub
mov
pusha
mov
jle
rol
xchg
and
add
mov
hlt
or
inc
cmp
mov
sub
jne
sub
(bad)
clc
mov
mov
add
and
sbb
lea
or
adc
inc
adc
or
nop
mov
sub
sbb
or
pusha
or
add
rol
in
mov
jno
add
adc
xchg
and
add
rol
ins
inc
adc
adc
pmulhuw
psubw
inc
pop
push
mov
push
cld
jecxz
cmps
and
das
cs
cmp
add
loope
sub
adc
rcl
or
shl
or
xor
(bad)
clc
and
enter
rol
sbb
inc
mov
inc
pusha
dec
pushf
sbb
add
shl
les
movs
inc
ds
or
adc
or
mov
xchg
test
fldcw
pop
popa
mov
inc
pop
call
mov
dec
add
cmp
xchg
call
idiv
cmp
rcr
rol
adc
inc
xor
and
adc
sbb
syscall
xchg
mov
add
jmp
mov
cmp
dec
mov
jecxz
mov
xor
pop
push
rol
and
or
and
push
jo
adc
dec
lock
ror
leave
mov
adc
add
mov
push
add
inc
aaa
mov
jno
add
xor
inc
mov
adc
inc
push
dec
ficom
sbb
sbb
arpl
xchg
sbb
mov
mov
adc
pop
shl
cmc
add
sbb
adc
and
arpl
pusha
mov
(bad)
or
int3
mov
mov
pop
pop
xor
and
xor
inc
sbb
mov
push
call
fs
jecxz
add
add
icebp
movmskps
jecxz
mov
sbb
jg
fs
clc
les
loop
fimul
inc
adc
lods
fwait
adc
lock
pop
adc
pop
and
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
pop
push
adc
dec
pushf
cmp
call
test
push
pushf
cwde
inc
and
cmp
call
(bad)
jne
dec
mov
mov
dec
mov
(bad)
or
clc
adc
or
(bad)
jge
shr
sub
sbb
or
jno
add
dec
fidiv
inc
cmps
adc
mov
inc
jno
push
dec
add
mov
pop
xchg
and
adc
fidiv
and
xor
test
andps
add
sub
or
pop
adc
stc
push
ss
pop
mov
clc
push
sub
xchg
add
call
push
mov
xchg
inc
pop
ja
and
enter
mov
hlt
add
fs
and
sbb
or
adc
xchg
cmp
xor
mov
jo
cmp
mov
(bad)
mov
ret
and
pop
sar
sahf
xor
ss
sbb
daa
loop
xchg
sbb
mov
add
push
shl
adc
hlt
test
sub
pusha
shl
or
inc
adc
bound
shl
add
push
cld
and
and
mov
(bad)
inc
das
lods
mov
or
iret
and
or
dec
aaa
jns
arpl
adc
push
adc
ror
inc
and
xchg
push
or
push
test
pop
cmp
add
xor
sbb
pop
mov
pop
xor
cmp
ds
xchg
sbb
inc
mov
pusha
call
lwpins
mov
jl
sbb
jbe
xor
adc
xchg
lock
push
pop
call
daa
ret
aas
sbb
mov
popa
xchg
(bad)
adc
push
and
xor
or
nop
loop
sbb
add
add
sbb
or
outs
mov
adc
out
aas
fcomp
jmp
push
add
nop
or
sub
or
xor
lea
jge
push
int3
add
push
push
rcr
push
add
adc
jae
sub
iret
add
hlt
lock
or
or
jg
pusha
inc
inc
and
bound
xlat
add
nop
add
xchg
dec
mov
mov
loopne
push
cmp
or
add
xor
mov
and
cmc
fwait
cs
stos
out
add
dec
cld
adc
aas
add
push
xor
mov
movs
push
les
aas
dec
add
cld
rol
pinsrw
fadd
push
aam
mov
pop
sub
inc
sbb
rol
or
inc
push
xor
cld
add
or
loopne
push
and
not
fld
add
neg
add
or
call
mov
inc
push
or
xor
or
xor
call
add
rol
cli
call
add
pop
dec
dec
inc
mov
and
fs
imul
add
jge
cs
pop
sub
in
push
or
icebp
(bad)
xor
stc
iret
and
adc
adc
add
mov
enter
push
call
sbb
push
cmp
and
in
cmp
add
fwait
or
or
add
popa
sub
dec
add
mov
mov
mov
add
ror
loopne
dec
pusha
add
scas
std
(bad)
or
clc
push
xor
scas
pop
cld
jecxz
bound
inc
pop
mov
inc
pop
sub
xchg
stos
xor
inc
pop
xchg
dec
dec
adc
xor
or
pop
rol
or
stos
add
add
aas
in
or
loope
or
mov
rol
and
add
daa
push
mov
out
mov
jae
shl
push
push
add
ret
cmp
rcr
imul
je
ret
sbb
add
adc
push
add
shl
sti
ffree
outs
xchg
mov
dec
and
xor
bound
pop
add
sbb
fsub
sub
pusha
xchg
in
and
jbe
sar
push
mov
add
push
push
(bad)
icebp
enter
adc
xor
dec
inc
dec
fisub
aas
nop
inc
add
add
pop
xchg
pop
fiadd
xor
add
repz
ins
(bad)
xchg
stos
add
or
sbb
push
mov
cmp
pop
or
dec
adc
jb
push
adc
and
sub
rol
sub
data16
sbb
sbb
cmovbe
and
mov
xchg
lods
push
adc
dec
outs
inc
cmps
or
jno
fdiv
and
fwait
xor
dec
cmp
jb
and
adc
pop
inc
pop
cmp
add
inc
push
pop
mov
or
arpl
xor
jge
ins
add
add
push
sub
shl
add
or
inc
pop
pop
xor
inc
and
sub
inc
cli
jmp
ja
test
jno
pop
mov
test
nop
inc
inc
jle
(bad)
cmp
adc
add
adc
add
and
mov
inc
add
adc
jg
pusha
adc
adc
out
adc
jbe
inc
and
rcl
les
lods
push
push
adc
and
add
adc
xchg
sbb
sbb
adc
mov
adc
nop
push
nop
mov
xor
call
or
xor
outs
mov
(bad)
cwde
out
out
and
jmp
xor
xchg
shr
or
lock
xchg
mov
adc
or
or
mov
and
add
sub
adc
ret
add
and
add
sbb
add
sbb
xchg
addr16
or
sub
(bad)
pusha
inc
jl
push
int3
jb
mov
adc
push
clc
and
movs
adc
inc
pop
xchg
sbb
or
sub
mov
and
push
(bad)
fwait
dec
fs
clc
inc
xor
jg
ficomp
add
or
jmp
or
inc
in
sbb
ret
jb
bound
sbb
and
dec
inc
and
xchg
pop
scas
push
rol
inc
out
repz
xchg
sub
mov
pop
into
adc
cmp
imul
cld
sbb
or
or
add
jne
push
inc
(bad)
int
sbb
stc
loope
jg
inc
xor
add
stc
add
cmp
inc
sub
add
add
add
add
or
add
or
mov
mov
push
lds
inc
jno
push
sub
lds
mov
or
in
adc
fxch
enter
or
test
es
fwait
aaa
sbb
push
cmps
pop
add
mov
call
xor
sub
popf
pop
cmp
mov
mov
imul
add
or
and
jmp
and
fidiv
outs
cmp
iret
inc
push
adc
add
pop
pop
xchg
sub
imul
fstp
shl
dec
add
or
push
ins
pop
repz
mov
jb
xor
add
sub
add
pop
adc
arpl
repz
xor
mov
lods
scas
jnp
push
push
jnp
call
sub
mov
jae
jae
dec
push
add
fdiv
stc
in
sar
xchg
int3
loopne
dec
add
std
cmc
imul
mov
or
mov
push
mov
call
push
sbb
inc
adc
inc
nop
aaa
inc
or
pusha
(bad)
(bad)
in
dec
push
or
and
sub
jo
call
sbb
push
int
push
push
or
mov
mov
in
fsub
and
pop
pushf
je
pop
jge
jo
inc
mov
enter
cmp
push
imul
rol
pop
mov
xchg
cmp
loop
push
add
xchg
inc
(bad)
sbb
ret
lds
ss
inc
cwd
push
stos
popa
inc
sbb
dec
xor
add
mov
mov
mov
iret
cmp
cmps
sub
push
mov
add
sahf
shl
and
and
sbb
es
mov
cld
inc
pop
add
ret
cld
stc
cmps
out
push
adc
mov
shl
mov
int3
adc
push
jo
add
hlt
xchg
loopne
ss
xchg
dec
and
push
mov
push
sbb
push
or
mov
add
out
sub
inc
dec
sbb
pop
loop
jo
add
ins
xchg
dec
cmp
inc
or
push
ficom
sbb
sbb
add
cwde
inc
add
push
sub
inc
sbb
mov
xor
push
shr
(bad)
sub
sub
mov
and
scas
add
adc
xchg
inc
sub
test
dec
es
pop
add
sub
adc
xor
nop
mov
cmp
pop
ins
loop
lahf
adc
push
add
add
push
ror
inc
inc
cmovne
add
sbb
pusha
or
cs
imul
or
add
movs
push
lock
sbb
daa
or
imul
jb
xchg
shl
test
inc
xchg
or
sub
mov
xchg
icebp
int3
lahf
test
push
js
mov
mov
xor
push
retf
xchg
add
xchg
mov
cmp
lods
dec
icebp
rcr
fadd
js
mov
int3
outs
mov
sub
ror
iret
outs
ins
pop
push
inc
add
or
shl
mov
out
sar
xchg
mov
cmps
sub
rol
jle
inc
pop
adc
push
or
pop
add
inc
ret
push
test
push
pop
cmp
adc
add
into
mov
and
and
xor
or
pop
pushf
dec
add
mov
les
ins
sbb
test
and
sbb
or
xor
cs
inc
sbb
cwde
xchg
dec
and
aad
dec
jno
push
(bad)
out
loopne
sub
test
mov
and
fsub
or
or
das
pop
mov
fld
nop
ss
ror
adc
sbb
xchg
push
daa
data16
movs
je
xor
repz
in
(bad)
mov
loopne
adc
hlt
mov
adc
rol
int3
xchg
mov
dec
sbb
inc
push
or
xor
pop
shl
(bad)
aam
mov
mov
jo
gs
inc
adc
mov
in
test
mov
and
fmul
inc
ins
ror
xor
repz
push
mov
inc
das
fwait
in
or
sbb
or
push
add
sahf
aam
pop
mov
shl
inc
(bad)
pop
imul
add
(bad)
mov
popf
pop
push
in
cmp
or
inc
and
or
xchg
jp
cmps
sub
loopne
xor
add
dec
xchg
mov
cwde
mov
in
mov
enter
and
sbb
add
or
data16
call
and
pusha
inc
push
sub
in
rol
pop
gs
ds
add
sub
rol
ror
adc
repnz
data16
fsub
(bad)
js
mov
cmp
jl
daa
popf
add
pop
cmp
enter
or
xor
xchg
add
pop
rcl
lahf
xor
test
sbb
ret
mov
xchg
inc
fsub
ja
pushw
push
rcl
repnz
and
repnz
add
pop
cmp
ss
mov
movs
or
add
add
stc
add
or
inc
sub
add
add
or
sub
mov
xchg
mov
sub
push
and
ret
xchg
inc
clc
outs
fdivr
xor
arpl
cmp
add
mov
dec
pusha
ds
sahf
jnp
push
mov
add
aas
jg
repnz
cld
pop
add
push
dec
pop
jl
sbb
test
push
adc
loope
xchg
inc
pop
ds
xchg
mov
cld
lea
inc
xor
stos
push
cwde
push
fidiv
cmps
inc
lea
mov
inc
das
scas
ficomp
jle
or
mov
and
add
or
inc
sub
add
add
or
inc
mov
rol
dec
loope
adc
hlt
cld
ret
xchg
lock
call
mov
push
push
push
sub
mov
sub
pop
sub
add
in
loope
add
imul
inc
adc
adc
pop
(bad)
stc
imul
adc
int3
cmc
sub
inc
jg
adc
test
mov
xchg
mov
mov
loop
mov
out
mov
fistp
js
pop
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
mov
rol
fidivr
cld
xchg
rcl
pop
mov
inc
cmps
and
fs
sub
out
push
and
cmps
mov
pusha
popa
add
cld
sub
mov
repnz
lahf
mov
dec
mov
adc
sub
xchg
mov
or
jp
adc
cmc
test
(bad)
cli
xchg
mov
push
ss
push
loopne
popf
fwait
(bad)
js
mov
mov
js
mov
add
add
stc
add
xor
inc
sub
add
add
add
add
or
add
(bad)
mov
pop
enter
cmp
inc
ret
rcl
mov
or
pop
cmp
fimul
sar
cld
in
mov
jne
sub
mov
icebp
cmps
loopne
add
cmps
xchg
mov
pop
cmp
jmp
pop
push
daa
pop
inc
inc
xchg
iret
add
xor
or
and
pop
les
stos
jo
fild
dec
pop
popa
mov
cmp
mov
add
sbb
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
mov
xor
hlt
cmps
mov
adc
mov
dec
or
xor
mov
cmps
inc
sbb
sub
in
xor
sbb
shl
ret
(bad)
pop
aam
dec
xchg
pusha
pushf
test
or
mov
mov
xor
int
aaa
jecxz
repnz
or
aas
dec
dec
dec
mov
cmps
stos
das
add
cs
mov
jb
ret
add
jno
clc
dec
stos
mov
clc
movs
popa
aam
mov
xchg
les
or
pop
add
test
pop
mov
jmp
ret
lock
(bad)
or
xor
pushf
sbb
ins
xor
push
fist
mov
jnp
xor
xchg
and
add
jnp
push
nop
cmp
inc
dec
add
add
push
shl
cdq
mov
test
mov
sub
and
jbe
dec
lahf
jno
jo
stos
jno
inc
arpl
xor
mov
pop
jle
dec
pop
sbb
add
xchg
pop
mov
cmp
icebp
loop
ret
push
mov
pop
inc
test
mov
add
add
or
push
loope
add
jno
sbb
mov
pop
push
ret
sbb
xor
dec
sub
loope
inc
sbb
cmp
lock
add
inc
nop
shl
or
test
sahf
nop
test
cmp
rol
test
mov
ret
adc
inc
pop
and
test
jl
clc
or
sub
pop
inc
fisub
sbb
jle
fnstenv
test
and
push
js
leave
mov
jo
xor
xchg
repz
adc
adc
and
xor
inc
and
adc
adc
and
and
dec
adc
test
cmps
shr
call
loopne
add
jb
sub
dec
cmp
xor
mov
pop
inc
push
cmp
or
jmp
push
pop
jae
push
dec
adc
fcom
and
add
cmps
mov
push
or
and
or
sub
mov
(bad)
xchg
outs
mov
mov
inc
cmp
les
mov
sbb
fs
xor
mov
int3
and
adc
pop
jmp
dec
adc
mov
push
mov
and
push
in
pusha
inc
mov
cmp
mov
out
nop
daa
sub
ss
mov
pop
jno
sub
inc
and
iret
adc
or
leave
and
sub
stc
adc
mov
adc
mov
xchg
ret
mov
retf
inc
inc
mov
cmp
lock
xor
dec
lea
inc
ret
in
mov
add
xor
stos
test
sub
leave
or
push
sar
jns
jb
fst
mul
into
or
repz
sbb
loopne
add
lds
ret
into
lahf
inc
adc
pop
jge
inc
mul
xor
sub
cmp
shl
push
in
dec
jno
xchg
sahf
aad
mov
loopne
or
mov
mov
jae
ucomiss
add
add
add
sbb
fwait
adc
fnstcw
inc
or
add
imul
cs
fxch
pop
sti
jl
in
xor
idiv
fdiv
add
les
mov
mov
sbb
out
adc
sbb
or
dec
pop
xchg
fs
ins
mov
dec
inc
pop
xlat
and
fs
add
cwde
push
and
fs
cs
sub
add
cmp
sbb
cwde
pusha
or
inc
inc
add
hlt
sbb
or
and
pop
stos
xor
je
or
mov
enter
mov
pop
pop
inc
or
fimul
mov
adc
push
dec
ror
jb
xchg
pop
mov
jecxz
(bad)
mov
dec
sub
and
dec
add
adc
(bad)
movs
add
repnz
sub
add
jbe
mov
xchg
loope
xchg
outs
xchg
or
sub
das
or
adc
xchg
mov
mov
out
sub
enter
sub
nop
nop
mov
xor
stc
add
or
inc
sub
add
add
add
add
or
add
or
jo
adc
cld
cmp
pushf
and
sub
sub
les
push
or
sub
movs
and
pusha
mov
and
and
inc
pop
mov
repnz
xor
xor
(bad)
mul
inc
pop
mov
xor
pop
inc
push
and
aaa
std
xchg
clc
in
lahf
stos
dec
adc
loope
call
adc
or
inc
and
aaa
push
mov
pusha
mov
stos
aam
or
adc
inc
cdq
jecxz
mov
adc
shr
popf
sbb
xchg
push
in
int3
icebp
push
clc
mov
mov
dec
dec
cld
movs
movs
sbb
sbb
mov
mov
jnp
es
jmp
or
sub
mov
cmps
pushf
xchg
pop
fs
es
ficomp
je
push
mov
push
push
xlat
(bad)
xchg
sub
aam
pop
dec
add
inc
sub
sbb
mov
shl
aam
jp
jb
lea
pop
dec
bound
add
das
mov
push
mov
daa
pop
add
inc
sbb
ret
sahf
mov
add
push
gs
inc
sbb
inc
cmp
dec
movs
out
add
add
pushf
inc
xchg
adc
les
xor
push
jl
or
cwde
push
jl
pop
add
mov
shl
inc
push
add
daa
nop
and
add
test
sahf
or
dec
inc
cmp
xchg
daa
pushf
repnz
daa
stos
xchg
adc
movs
aas
mov
xor
sbb
dec
mov
add
aam
mov
or
adc
xor
inc
add
pusha
jns
push
xor
repnz
and
dec
add
fs
or
fsub
add
(bad)
ror
adc
dec
inc
push
inc
xor
rcr
push
xchg
jp
xor
mov
cs
mov
dec
jmp
jae
inc
inc
adc
rcl
inc
adc
dec
pop
popa
inc
add
inc
(bad)
adc
in
mov
jae
fwait
add
jp
cmp
mov
sub
inc
mov
add
pusha
ins
cmp
or
mov
aad
mov
sub
aam
das
mov
sbb
xor
inc
or
mov
out
sbb
ds
or
pusha
xchg
fidivr
mov
test
ret
sub
(bad)
or
cld
out
pop
les
or
fcmovnb
xor
int3
xor
add
cmps
mov
xor
and
loop
loopne
jo
jge
xor
sbb
inc
loopne
mov
in
add
add
jbe
sub
mov
aaa
pop
jge
and
mov
and
fdiv
fcom
cmp
mov
or
and
adc
ret
stc
mov
sahf
adc
push
inc
inc
jno
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
daa
push
addr16
cmp
inc
jg
adc
jl
jo
add
xchg
cmp
int
sub
or
or
push
and
(bad)
loopne
out
int3
or
clc
and
or
jae
inc
dec
mov
loopne
sub
push
call
push
adc
lods
sbb
test
sub
fst
retf
jnp
jl
and
or
mov
loopne
inc
test
idiv
(bad)
enter
pop
jp
xchg
retf
(bad)
sub
adc
or
and
push
(bad)
add
lock
jmp
fs
mov
and
scas
adc
imul
adc
ret
sbb
and
aam
mov
stos
push
sbb
(bad)
outs
dec
mov
mov
std
sub
inc
lock
xor
mov
xchg
sahf
adc
cdq
daa
(bad)
cld
addr16
js
jns
mov
and
fsub
jno
daa
mov
push
and
sbb
fst
adc
dec
sub
push
mov
sub
aad
nop
pop
sub
or
iret
inc
(bad)
mov
std
pop
xchg
inc
dec
shr
retf
stc
repz
add
je
mov
movs
pop
jl
test
movs
sbb
xchg
sbb
push
in
call
mov
jns
ret
popf
js
hlt
add
jl
mov
xchg
adc
push
nop
test
sbb
mov
in
nop
and
xchg
xor
cli
movs
cmps
cdq
push
fisubr
not
(bad)
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
std
or
mov
rol
mov
ret
xchg
jae
sub
xchg
mov
sub
inc
mov
cmp
cld
clc
push
mov
inc
adc
push
cmp
scas
mov
arpl
stc
jo
dec
lea
call
xor
enter
cmps
push
mov
stos
aad
pop
mov
jge
adc
and
add
or
inc
sub
add
add
add
add
or
mov
rol
push
aad
xor
inc
rcl
bound
arpl
leave
inc
or
inc
cld
cmp
adc
cdq
xor
add
stc
add
sub
inc
sub
add
add
add
add
or
std
or
mov
rol
add
add
add
dec
add
xor
add
add
add
popa
xor
sbb
dec
add
mov
add
ins
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
retf
push
cmp
cmp
xlat
aad
in
enter
mov
jmp
xor
lods
ins
add
cmp
cwde
cwde
cwde
ja
ja
(bad)
inc
scas
inc
sbb
dec
mov
pop
and
in
gs
fs
fcmovnbe
out
stos
enter
test
lods
xchg
and
ror
cld
in
rol
adc
repz
in
das
aaa
dec
xchg
xchg
sbb
mov
mov
movs
hlt
cli
call
adc
dec
pop
test
stos
cdq
push
or
(bad)
lds
in
aad
xchg
bound
inc
mov
xchg
ret
mov
mov
xchg
imul
push
stos
xchg
push
pop
or
test
xchg
repz
icebp
push
push
push
leave
xchg
jne
dec
dec
dec
xchg
xor
inc
inc
sar
(bad)
(bad)
(bad)
cld
hlt
pop
sbb
pop
pop
sahf
mov
rol
(bad)
push
outs
push
sub
inc
test
pop
and
sbb
arpl
mov
jns
sbb
retf
movs
cwde
jne
retf
sub
ror
ss
xchg
sahf
cwde
mov
loopne
into
rol
mov
jne
dec
push
shr
jo
imul
xchg
dec
jbe
daa
fst
mov
popf
pop
lock
out
stos
pop
cmp
in
out
icebp
mov
clc
div
scas
mov
rcr
je
int3
ret
test
jle
inc
push
imul
sub
sub
stos
mov
jp
jp
cmp
out
sbb
push
and
and
sub
sbb
cmp
(bad)
clc
ret
xchg
push
mov
dec
popf
nop
jne
xor
stc
clc
in
idiv
pusha
arpl
sahf
in
add
or
(bad)
sbb
scas
fwait
outs
push
popf
popf
sahf
mov
pop
mov
xor
mov
sbb
jg
add
cld
(bad)
(bad)
fcomip
repz
mov
mov
inc
idiv
in
fild
push
inc
inc
dec
(bad)
outs
pop
push
dec
cmp
mov
sbb
sti
cli
xor
xor
mov
or
or
fisubr
pop
dec
xor
mov
and
cmp
push
cwde
nop
sbb
mov
lds
pop
in
loop
inc
dec
dec
popa
arpl
jecxz
scas
idiv
cmc
fmulp
cmps
pop
pop
push
xchg
xchg
xchg
mov
mov
jl
scas
scas
jg
aaa
mov
mov
aas
or
and
push
push
push
sahf
mov
dec
stc
div
jecxz
jmp
(bad)
xorps
push
push
push
dec
dec
dec
mov
xchg
mov
and
pusha
das
das
xor
(bad)
clc
fiadd
test
cmps
mov
jg
add
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
xor
inc
sub
add
add
add
add
or
add
or
mov
rcl
mov
push
sbb
dec
xchg
pusha
or
push
loop
(bad)
retf
nop
gs
pop
mov
ret
test
dec
sbb
imul
mov
mov
test
stos
test
add
sub
fwait
and
cmc
nop
and
xor
adc
ror
clc
pop
fs
xor
jns
inc
fisttp
cmp
add
popa
and
xchg
movs
pop
add
pop
inc
loop
lea
pop
push
mov
mov
add
icebp
pusha
push
add
dec
mov
out
out
and
or
jo
inc
scas
and
mov
add
leave
adc
rcl
push
mov
inc
bound
add
mov
arpl
dec
sbb
and
sub
stos
shl
loopne
xchg
adc
ins
push
sbb
mov
mov
(bad)
mov
inc
mov
jmp
imul
adc
xchg
cmp
or
or
adc
dec
aas
mov
sbb
add
cmp
and
add
shl
ror
sub
sbb
shl
(bad)
loopne
inc
xor
inc
inc
cmovg
rcl
push
ins
and
push
punpckhbw
inc
add
mov
mov
in
fs
adc
mov
les
and
push
add
push
sbb
pop
mov
fnsave
mov
iret
pop
mov
repz
aad
(bad)
ds
movs
xchg
in
adc
sub
or
lea
std
jo
pop
daa
add
jmp
dec
sub
adc
dec
aas
mov
adc
inc
fwait
sub
repnz
xchg
in
rol
aam
mov
fcmovbe
adc
add
mov
aaa
add
push
mov
repz
mov
test
cmp
mov
(bad)
inc
popa
inc
and
jo
dec
adc
fldl2e
ss
hlt
arpl
cmp
(bad)
lods
ret
push
xor
add
pushf
mov
add
rol
std
pusha
inc
dec
aaa
cvttps2pi
xor
push
xor
in
or
ffree
ret
or
pop
ror
dec
test
xor
sub
or
lea
loop
aaa
add
cwde
and
push
je
dec
and
jo
rcl
ds
aas
sub
sbb
ins
or
xor
mov
dec
adc
inc
icebp
add
out
daa
iret
or
cdq
xlat
(bad)
xor
adc
test
ret
sbb
inc
lock
jns
aam
iret
add
call
sub
pop
pushf
out
loopne
adc
cmp
nop
or
sahf
mov
ja
mov
nop
inc
and
jmp
xor
rcl
leave
inc
test
xor
pushf
ror
add
mov
xchg
xchg
mov
push
ret
sbb
inc
add
mov
xor
or
inc
or
sbb
xchg
xor
mov
pop
loop
(bad)
leave
push
pop
fcom
and
cmp
add
int3
aaa
pop
add
inc
add
mov
mov
pusha
add
jnp
cmps
sub
inc
and
mov
jne
add
xor
jns
dec
sbb
adc
and
jo
dec
lods
inc
adc
les
jb
add
or
or
cmp
cmp
mov
ror
jo
aad
rol
lldt
push
or
add
movs
and
call
popa
adc
inc
sbb
xor
inc
mov
nop
bound
daa
fadd
and
adc
mov
add
sbb
add
add
add
adc
dec
test
ror
aam
sub
rol
loop
xor
add
push
and
jp
add
lock
sub
or
push
ror
xchg
xor
jle
or
push
cmp
jo
add
pop
ror
jge
add
inc
or
mov
and
js
pop
hlt
mov
sbb
test
jle
ret
lea
and
repnz
add
adc
rol
mov
add
pop
loope
inc
sbb
shr
fisttp
sbb
adc
xor
adc
popa
mov
mov
adc
data16
(bad)
mov
mov
inc
jmp
sbb
ret
mov
add
add
jecxz
ret
xchg
rcr
(bad)
ror
sbb
push
(bad)
and
add
or
cmps
xor
xor
sbb
rcl
and
pop
and
xchg
jbe
pop
jne
add
push
add
add
adc
pop
sub
jle
test
or
stos
retf
sbb
push
pop
cmp
adc
sbb
sbb
mov
mov
add
sub
mov
xor
cmp
sbb
sub
pushaw
mov
xor
xchg
mov
fiadd
add
and
push
mov
or
shr
scas
les
adc
arpl
jecxz
mov
mov
and
(bad)
push
mov
nop
mov
(bad)
cmp
pop
addr16
and
adc
mov
pushf
rcr
adc
xchg
and
cld
loopne
adc
xor
sub
jmp
outs
aas
mov
lds
jge
push
xchg
test
push
js
add
mov
or
cmp
lea
inc
add
(bad)
into
mov
mov
or
ret
mov
jo
add
and
ins
cli
mov
cld
cmp
mov
sbb
cmc
mov
inc
rol
add
push
add
inc
loop
call
sti
inc
dec
jg
jnp
pop
cmp
or
aam
mov
sub
adc
jmp
adc
cwde
daa
mov
mov
fdivr
in
inc
add
sbb
lds
into
mov
sahf
or
sub
cdq
pop
jbe
mov
lods
sub
es
clc
int3
(bad)
enter
fmul
or
pop
mov
(bad)
stc
into
idiv
(bad)
(bad)
and
nop
pop
js
fwait
gs
jnp
ret
(bad)
lahf
or
shr
mov
mov
xchg
in
xor
ins
loope
fwait
mov
dec
jmp
or
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
mov
xor
mov
inc
xchg
cs
ret
xor
int3
inc
scas
mov
mov
lods
loope
jne
call
sub
cli
leave
pushf
test
add
pop
imul
sub
ds
ja
les
jbe
xchg
cdq
xor
mov
shl
mov
jns
ret
push
add
std
add
fcom
nop
call
mov
push
add
pop
adc
mov
lahf
pop
lea
push
or
xchg
sub
mov
jo
in
add
dec
and
or
dec
mov
or
and
or
test
xchg
test
cmp
rcr
push
add
mov
adc
enter
xchg
gs
stc
fwait
push
add
mov
and
sub
out
sti
inc
inc
add
xor
jge
inc
nop
pop
inc
test
mov
unpcklps
sbb
push
xlat
fistp
rcl
or
shl
rol
add
pusha
jecxz
add
cld
xor
ds
xor
jl
sub
push
or
(bad)
jae
xor
dec
out
push
aam
loopne
add
push
nop
rcr
sar
into
adc
shl
add
and
jl
ins
inc
int
xor
gs
or
ret
or
adc
sub
push
mov
pop
inc
inc
enter
(bad)
adc
adc
or
test
rcl
inc
add
sbb
dec
push
add
add
adc
sub
test
add
sub
and
add
jge
add
sub
adc
cmp
add
add
add
popf
jne
pop
retf
pop
nop
dec
push
rdpmc
add
dec
rcl
enter
mov
cmp
and
mov
scas
mov
sub
ins
enter
ror
or
xchg
add
cmp
xchg
and
inc
scas
mov
sbb
adc
test
and
jbe
inc
push
pusha
repnz
inc
(bad)
out
add
iret
push
or
and
pusha
or
imul
and
cvtps2pi
mov
push
dec
and
loope
sbb
mov
dec
das
test
movs
mov
adc
rcl
inc
das
xor
xchg
cwde
dec
dec
scas
sbb
loope
les
mov
sbb
inc
and
inc
fs
mov
dec
xor
push
mov
push
gs
and
(bad)
fldenv
int
iret
or
and
jo
or
nop
dec
ret
je
and
ret
inc
inc
add
xchg
mov
pop
mov
jecxz
pop
and
aaa
sar
and
inc
adc
push
mov
scas
cld
xchg
and
fwait
jo
xor
jb
or
test
test
dec
push
aas
addr16
ins
push
aas
mov
addr16
imul
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
dec
test
mov
rol
adc
inc
mov
jo
inc
add
inc
jg
or
add
mov
cld
imul
retf
or
push
(bad)
mov
cwde
adc
xor
add
stc
add
or
inc
sub
add
add
add
add
or
dec
hlt
daa
mov
rol
lock
add
sub
jo
aas
pop
sbb
adc
push
out
or
xchg
aaa
push
cmp
std
test
call
jmp
cli
mov
cwde
jmp
pop
jno
mov
leave
sahf
add
add
stc
add
or
inc
sub
add
add
add
add
or
dec
test
mov
rol
adc
inc
mov
jo
inc
add
inc
jg
or
add
mov
cld
imul
retf
or
push
(bad)
mov
cwde
adc
xor
add
stc
add
or
inc
sub
add
add
add
add
or
dec
hlt
daa
mov
rol
lock
add
sub
jo
aas
pop
sbb
adc
push
out
or
xchg
aaa
push
cmp
std
test
call
jmp
cli
mov
cwde
jmp
pop
jno
mov
leave
sahf
add
add
stc
add
or
inc
sub
add
add
add
add
or
dec
test
mov
rol
adc
inc
mov
jo
inc
add
inc
jg
or
add
mov
cld
imul
retf
or
push
(bad)
mov
cwde
adc
xor
add
stc
add
or
inc
sub
add
add
add
add
or
dec
hlt
daa
mov
rol
lock
add
sub
jo
aas
pop
sbb
adc
push
out
or
xchg
aaa
push
cmp
std
test
call
jmp
cli
mov
cwde
jmp
pop
jno
mov
leave
sahf
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sbb
movs
inc
mov
dec
sub
dec
mov
es
retf
mov
retf
nop
gs
pop
ins
hlt
adc
inc
lds
bound
sbb
cmp
jno
rol
or
ins
iret
add
pop
cmp
inc
dec
scas
pop
adc
inc
or
inc
daa
cmps
inc
shl
cs
test
pushf
pop
ss
inc
cmp
and
sub
mov
fsub
imul
add
sub
inc
and
arpl
mov
mov
xor
pusha
rol
adc
ror
inc
add
loopne
push
test
bound
loop
mov
jp
dec
pop
mov
cmp
pop
icebp
arpl
rol
(bad)
adc
pusha
inc
addr16
inc
sub
movs
jmp
dec
cwde
mov
call
cmps
inc
xor
xor
ss
shl
mov
mov
cmp
inc
adc
cmp
or
add
fstp
iret
adc
dec
and
and
xchg
add
inc
or
xchg
ret
add
add
add
add
sub
mov
inc
cmp
dec
ss
ror
xor
std
aam
or
jo
rcr
dec
test
iret
adc
mov
lea
adc
ficom
cli
cmp
movs
cmp
sub
les
call
push
xor
retf
inc
shl
ret
sub
arpl
mov
mov
xchg
xor
dec
ss
cmp
add
in
call
js
(bad)
cmp
dec
aam
pop
loop
mov
push
mov
std
mov
cmp
ins
repz
nop
mov
sub
call
cmps
ins
jecxz
cmp
gs
dec
inc
call
test
xor
adc
ror
cmp
fcomp
adc
ss
jo
retf
inc
(bad)
ror
xor
add
or
dec
cmp
cmp
ja
or
ret
inc
jo
or
cmp
inc
and
inc
mov
inc
lea
sbb
inc
cmp
cmp
add
fmul
inc
(bad)
pop
pop
je
les
pop
std
cwde
inc
jo
jmp
sete
cmps
lock
into
fwait
push
lock
adc
div
jb
or
or
stos
mov
ret
stos
std
sbb
dec
xchg
cli
mov
jo
add
sub
std
icebp
mov
pop
aaa
(bad)
retf
and
inc
sbb
in
and
jno
bound
cmp
jo
ret
add
add
add
mov
or
push
xor
add
sub
pop
sub
xchg
push
sbb
inc
adc
add
xor
xor
or
push
shl
dec
or
loop
sub
xor
inc
in
sub
or
jl
ja
add
test
and
add
mov
xor
add
les
add
push
xor
adc
inc
or
mov
add
mov
cmp
adc
sub
test
or
into
sti
and
adc
sbb
sbb
sar
ret
inc
or
xor
inc
or
mov
xor
popa
add
repnz
push
pop
add
adc
push
clc
pusha
add
and
add
pusha
and
and
cs
rol
xchg
and
jns
mov
mov
cmp
and
adc
popa
add
and
mov
adc
xchg
add
add
cwde
pop
jb
rcr
xor
dec
add
adc
daa
xchg
adc
rol
adc
adc
cmp
shl
inc
add
nop
inc
sbb
iret
pop
repnz
and
add
adc
add
nop
inc
sbb
dec
or
add
cs
add
jl
sbb
pusha
xchg
pop
lahf
push
mov
and
daa
cmp
add
lock
inc
or
inc
xor
hlt
add
xor
add
daa
add
pop
fadd
and
add
mov
shr
xor
add
loopne
je
inc
push
push
inc
inc
and
mov
pop
in
out
jnp
fadd
add
xchg
int3
mov
sbb
adc
movs
or
fs
sub
in
xchg
mov
xor
mov
xchg
not
add
bound
xor
or
inc
inc
or
inc
sbb
pop
sub
rcl
jno
xor
and
shl
mov
loope
add
inc
adc
add
mov
pop
enter
clc
mov
xchg
or
fistp
or
mov
test
inc
add
pop
rol
enter
je
add
add
inc
sbb
fcmove
push
hlt
ret
and
inc
pop
bound
mov
or
pop
push
mov
mov
das
push
mov
and
pop
dec
cmp
sbb
mov
shr
and
loope
(bad)
mov
pusha
loop
jo
or
hlt
jecxz
sbb
xchg
call
test
(bad)
imul
inc
mov
sbb
sbb
sbb
pop
push
clc
adc
enter
ins
mov
into
jmp
sub
pop
call
pop
(bad)
out
jp
mov
(bad)
cmp
mov
jg
leave
or
push
and
out
outs
jg
rcl
stos
add
jno
out
mov
or
add
sbb
rol
add
(bad)
nop
mov
xlat
push
mov
pop
or
mov
xor
dec
mov
mov
shl
xchg
and
or
adc
push
inc
cs
lock
cmps
xor
nop
ins
pushf
jbe
push
mov
inc
in
sbb
pop
scas
call
bound
(bad)
pop
or
jno
adc
add
mov
mov
cmp
dec
mov
cli
test
(bad)
(bad)
xor
pop
adc
inc
mov
sub
cmp
stc
mov
sub
fwait
or
iret
jno
arpl
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
je
jno
mov
cmp
bound
pop
stos
jo
enter
cs
jo
loopne
push
or
mov
nop
and
cmp
loopne
int
sbb
mov
and
push
sub
jbe
mov
mov
jl
add
mov
push
or
push
or
xor
xchg
pop
sti
pusha
int
mov
aaa
ins
in
cmp
fild
stos
mov
xor
sub
push
fild
push
push
dec
mov
pop
mov
sub
pop
loope
adc
or
xor
or
inc
dec
nop
pop
mov
(bad)
push
imul
loop
cs
mov
xor
inc
mov
adc
int3
mov
push
jne
inc
cmp
mov
out
dec
lea
and
xchg
cs
adc
mov
jo
les
jmp
push
pushf
jmp
cmps
inc
ret
sub
push
adc
cmp
mov
adc
test
mov
xor
xor
ins
arpl
dec
adc
hlt
ret
pop
mov
pusha
adc
fidiv
mov
push
je
adc
mov
test
mov
in
(bad)
clc
test
adc
jo
inc
xor
sbb
mov
xor
jo
dec
or
lock
mov
stos
mov
jp
and
add
sbb
dec
xor
inc
adc
repnz
jmp
addr16
ret
sysret
push
inc
scas
or
xor
shl
js
dec
inc
xor
adc
add
add
cmp
shr
hlt
mov
and
(bad)
test
ror
dec
add
mov
repz
ss
ret
or
retf
jo
into
xor
jo
or
inc
shl
add
je
(bad)
xor
mov
xor
xor
inc
es
enter
rol
cmp
scas
push
push
pop
ror
loop
icebp
and
xor
or
clc
jb
sbb
adc
retf
js
retf
sub
in
jo
dec
aaa
add
and
adc
cdq
inc
(bad)
pushf
inc
or
sub
popf
jno
push
ja
rol
cmp
inc
pop
pop
fmul
jmp
les
mov
aas
stos
sub
add
mov
mov
and
or
or
dec
or
jl
inc
sahf
mov
test
add
stos
test
mov
dec
nop
inc
or
or
xchg
ror
mov
or
(bad)
inc
sbb
or
imul
nop
retf
sbb
or
add
pop
xor
ss
jmp
push
or
mov
or
sbb
rol
xchg
mov
push
sbb
sub
push
ret
inc
add
dec
add
xor
shl
xchg
inc
and
loopne
push
and
or
add
mov
mov
and
sbb
adc
inc
add
in
and
jl
dec
xor
add
dec
add
and
adc
xor
add
sub
inc
adc
or
and
push
xchg
aas
scas
enter
adc
fimul
rol
or
mov
jle
mov
cmp
nop
(bad)
jle
pusha
add
mov
xor
(bad)
push
dec
inc
and
inc
cmp
and
add
add
mov
pop
shl
popa
jo
add
fs
pop
push
mov
cli
add
inc
push
mov
sbb
and
pop
pusha
test
fsub
and
mov
mov
rol
sahf
arpl
pusha
xor
and
add
mov
cmp
loopne
dec
push
push
adc
pushf
lock
jl
mov
nop
push
or
add
pushf
enter
ror
or
sub
nop
(bad)
ror
add
pushf
les
mov
add
adc
aam
or
ja
inc
or
add
adc
out
and
xchg
loopne
and
add
cwde
(bad)
sbb
mov
inc
shl
mov
cmp
and
add
mov
lea
add
add
push
pop
inc
inc
or
and
inc
sub
adc
add
push
mov
and
cwde
push
sub
inc
adc
and
add
mov
popa
cmp
add
mov
inc
cld
loopne
mov
pusha
add
mov
adc
add
dec
push
or
add
inc
add
call
test
test
add
push
mov
or
push
push
or
xor
xor
(bad)
sbb
jl
adc
clc
and
and
cmc
test
mov
add
adc
sbb
mov
jno
sbb
sub
xchg
push
jne
sbb
inc
cmp
pusha
and
dec
dec
pop
push
or
cmps
dec
sub
cmp
int3
or
push
push
or
jecxz
(bad)
js
pop
or
mov
aaa
xchg
rcl
xchg
inc
arpl
stos
pop
std
mov
push
(bad)
and
and
cli
and
or
sbb
push
leave
call
pop
push
mov
adc
fs
mov
add
test
pop
cmp
push
dec
cmp
fisubr
adc
and
xor
xchg
outs
ja
sbb
ret
or
mov
pop
imul
daa
movs
and
mov
rol
pusha
jl
or
push
ret
adc
cmp
ror
les
enter
inc
mov
add
sbb
clc
ror
sub
xor
adc
adc
ss
xor
add
or
js
pop
and
and
int3
xlat
fucomi
xchg
test
pop
inc
add
sbb
mov
int
js
jnp
out
pusha
popa
(bad)
dec
pop
and
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
or
adc
mov
ret
or
sbb
(bad)
dec
sub
mov
mov
inc
inc
(bad)
xchg
pop
leave
or
daa
add
call
retf
mov
iret
sub
ror
mov
adc
int3
jo
test
push
cmc
addr16
pop
push
sub
cmp
mov
xor
sub
mov
fdiv
sti
inc
cmp
mov
push
sbb
dec
mov
mov
jo
push
push
fidivr
js
arpl
(bad)
imul
inc
clc
mov
and
aam
jl
ins
fsub
sbb
scas
in
adc
(bad)
dec
stos
fcmovu
add
dec
xor
mov
repz
jl
in
adc
adc
bound
gs
sahf
hlt
(bad)
jmp
inc
rol
lods
pop
pusha
adc
inc
mov
mov
jp
pusha
lea
push
cld
fsubr
mov
adc
or
inc
icebp
ror
int3
adc
pusha
jo
aas
push
js
shr
data16
add
push
loopne
add
or
fsubr
(bad)
xor
mov
pop
push
jb
int
xor
fisttp
sub
sub
add
loop
pop
ret
js
rol
sbb
or
(bad)
push
les
push
hlt
mov
mov
cmp
adc
add
pop
jle
mov
push
xor
gs
mov
mov
rol
ss
mov
aas
and
xor
imul
add
mov
xor
sbb
push
fwait
dec
cmp
aas
pop
inc
push
or
and
lock
ficom
jo
sub
je
mov
jns
rol
inc
in
mov
and
and
push
retf
fadd
loope
push
cmp
xor
cs
les
or
adc
outs
jp
add
jo
mov
scas
sbb
adc
sub
in
inc
add
ds
mov
nop
xchg
or
push
popf
or
or
push
and
inc
aaa
inc
xchg
fcomp
add
dec
sub
and
nop
pand
mov
push
out
sub
dec
add
inc
rcl
mov
sub
lahf
jnp
xor
sub
push
pop
les
sub
and
add
enter
ret
xor
mov
mov
ror
push
sbb
or
push
or
cwde
pop
repnz
inc
das
mov
xchg
sbb
pop
cs
mov
in
push
pop
ret
fidiv
or
xchg
xor
and
inc
mov
xor
add
pop
jb
cmp
ror
xlat
pop
xchg
ret
movs
sbb
call
xchg
sub
movs
mov
push
xchg
mov
mov
outs
jnp
mov
mov
outs
adc
jl
loop
movs
xor
rol
popa
ret
out
lock
push
jl
and
repnz
cwde
mov
add
push
aas
rcl
ja
jb
or
js
lds
cli
push
and
repnz
je
ror
or
retf
std
add
rcl
jns
je
add
add
ficomp
cmp
add
sub
jge
sbb
pop
aas
mov
dec
inc
(bad)
fadd
cmp
repnz
aas
shl
pop
or
loopne
add
cmp
icebp
xchg
sahf
push
push
sub
sbb
jo
ss
inc
test
cli
adc
add
inc
or
test
sbb
dec
loop
add
add
stc
add
or
inc
sub
add
add
add
add
or
std
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
pushf
dec
mov
int
cmp
fmul
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
pop
add
add
or
add
or
daa
call
push
sub
sub
xchg
rcr
dec
push
loope
dec
xchg
cmp
shl
jo
add
add
sub
mov
push
aad
pop
add
sub
in
or
dec
clc
arpl
into
xor
push
js
enter
daa
pop
loop
push
daa
iret
aaa
or
lea
add
(bad)
push
cmp
rol
pop
daa
xchg
aad
rcl
movs
xor
(bad)
aam
dec
imul
lahf
sbb
cdq
jbe
rol
jg
xchg
bound
or
ss
lock
adc
les
jne
imul
daa
mov
shr
adc
adc
dec
lods
adc
cmp
fisubr
pop
adc
lds
je
fs
pushf
adc
adc
nop
inc
and
cmp
cmp
pop
cmp
in
mov
jmp
mov
and
das
lods
cli
daa
mov
mov
sar
mov
mov
cdq
mov
or
adc
test
sbb
add
adc
out
or
and
inc
sub
or
xchg
jb
fst
loope
sahf
sbb
add
scas
sub
(bad)
cmp
lds
or
test
add
jge
popa
or
xor
frstor
and
and
mov
sbb
add
pop
jp
stc
push
inc
gs
sbb
lahf
inc
into
sbb
ficomp
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
push
cwde
stos
add
xor
push
mov
pop
xchg
mov
rol
jne
jo
inc
cmps
aas
jg
pusha
ret
or
cli
inc
repnz
leave
and
shl
fwait
push
xor
test
call
add
mov
test
nop
nop
adc
daa
adc
in
imul
aam
and
dec
push
mov
sbb
xchg
aas
jno
loop
mov
or
int
pop
scas
mov
hlt
adc
fidivr
inc
cld
sbb
dec
cmp
ret
or
les
js
adc
fcom
fimul
ins
daa
add
add
dec
rol
loopne
add
cs
dec
loop
pop
fimul
cmp
rol
test
repz
iret
push
pop
dec
mov
ds
xor
gs
popa
daa
jmp
call
inc
sub
ror
enter
repz
or
add
rcr
pop
outs
sbb
mov
push
(bad)
xchg
inc
add
shl
shl
and
stos
adc
lahf
sub
jo
and
push
sub
and
cwde
push
mov
mov
or
mov
out
dec
adc
mov
dec
push
pop
imul
pop
jge
push
inc
rcr
test
inc
adc
pop
xor
or
repnz
fst
inc
call
xchg
sbb
inc
pop
or
cdq
and
add
add
in
adc
mov
loopne
sbb
inc
add
dec
push
adc
aad
add
pop
cmc
xchg
inc
mov
cs
loop
xchg
ja
push
xchg
punpcklbw
movs
dec
cmp
bound
inc
and
xor
push
pusha
dec
inc
push
xor
add
push
add
or
add
xor
and
paddw
inc
mov
mov
fmul
sbb
xchg
xchg
cmp
or
lods
inc
xchg
popf
pop
jp
dec
pop
pop
es
or
add
jmp
out
jnp
pop
mov
stos
es
xor
nop
xor
ja
ins
call
jmp
xor
pop
(bad)
push
movs
stos
aas
ret
xchg
lds
or
(bad)
mov
cwde
or
inc
sub
and
add
or
inc
sub
add
add
add
add
or
add
std
adc
adc
pop
sub
inc
test
push
popa
dec
mov
aas
or
shl
and
int3
pusha
das
shl
or
sub
repz
movs
mov
xchg
push
pusha
add
xchg
push
jmp
cdq
xor
mov
add
or
jb
add
pop
add
dec
dec
add
push
pop
lea
xchg
xor
cld
cdq
add
inc
jg
lahf
xor
xchg
xchg
add
rol
mov
pusha
je
lahf
imul
(bad)
mov
inc
sti
out
cwde
cmp
sub
loope
and
jg
jbe
gs
adc
inc
fwait
jns
mov
repnz
into
mov
clc
or
(bad)
loope
adc
les
mov
test
popa
ins
dec
add
xor
imul
xchg
ja
sub
loopne
mov
loopne
pop
add
and
add
or
inc
sub
add
add
add
add
or
add
std
repz
push
mov
sub
mov
mov
je
push
and
adc
out
add
fs
mov
aam
arpl
nop
and
pop
dec
mov
xchg
sub
mov
add
inc
or
imul
or
dec
mov
ret
daa
inc
mov
adc
add
push
cmp
sahf
inc
cmp
loopne
jae
daa
je
jecxz
popa
or
sub
mov
sbb
stos
mov
mov
lock
cmps
aas
xor
rcl
adc
sbb
sub
push
sahf
mov
mov
add
call
mov
cmp
iret
mov
push
push
daa
gs
adc
jmp
call
(bad)
sbb
xor
je
or
cmp
push
(bad)
aam
inc
pop
cmps
adc
sahf
cld
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
adc
adc
pop
sub
inc
test
push
popa
dec
mov
aas
or
shl
and
int3
pusha
das
shl
or
sub
repz
movs
mov
xchg
push
pusha
add
xchg
push
jmp
cdq
xor
mov
add
or
jb
add
pop
add
dec
dec
add
push
pop
lea
xchg
xor
cld
cdq
add
inc
jg
lahf
xor
xchg
xchg
add
rol
mov
pusha
je
lahf
imul
(bad)
mov
inc
sti
out
cwde
cmp
sub
loope
and
jg
jbe
gs
adc
inc
fwait
jns
mov
repnz
into
mov
clc
or
(bad)
loope
adc
les
mov
test
popa
ins
dec
add
xor
imul
xchg
ja
sub
loopne
mov
loopne
pop
add
and
add
or
inc
sub
add
add
add
add
or
add
std
repz
push
mov
sub
mov
mov
je
push
and
adc
out
add
fs
mov
aam
arpl
nop
and
pop
dec
mov
xchg
sub
mov
add
inc
or
imul
or
dec
mov
ret
daa
inc
mov
adc
add
push
cmp
sahf
inc
cmp
loopne
jae
daa
je
jecxz
popa
or
sub
mov
sbb
stos
mov
mov
lock
cmps
aas
xor
rcl
adc
sbb
sub
push
sahf
mov
mov
add
call
mov
cmp
iret
mov
push
push
daa
gs
adc
jmp
call
(bad)
sbb
xor
je
or
cmp
push
(bad)
aam
inc
pop
cmps
adc
sahf
cld
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
adc
adc
pop
sub
inc
test
push
popa
dec
mov
aas
or
shl
and
int3
pusha
das
shl
or
sub
repz
movs
mov
xchg
push
pusha
add
xchg
push
jmp
cdq
xor
mov
add
or
jb
add
pop
add
dec
dec
add
push
pop
lea
xchg
xor
cld
cdq
add
inc
jg
lahf
xor
xchg
xchg
add
rol
mov
pusha
je
lahf
imul
(bad)
mov
inc
sti
out
cwde
cmp
sub
loope
and
jg
jbe
gs
adc
inc
fwait
jns
mov
repnz
into
mov
clc
or
(bad)
loope
adc
les
mov
test
popa
ins
dec
add
xor
imul
xchg
ja
sub
loopne
mov
loopne
pop
add
and
add
or
inc
sub
add
add
add
add
or
add
std
repz
push
mov
sub
mov
mov
je
push
and
adc
out
add
fs
mov
aam
arpl
nop
and
pop
dec
mov
xchg
sub
mov
add
inc
or
imul
or
dec
mov
ret
daa
inc
mov
adc
add
push
cmp
sahf
inc
cmp
loopne
jae
daa
je
jecxz
popa
or
sub
mov
sbb
stos
mov
mov
lock
cmps
aas
xor
rcl
adc
sbb
sub
push
sahf
mov
mov
add
call
mov
cmp
iret
mov
push
push
daa
gs
adc
jmp
call
(bad)
sbb
xor
je
or
cmp
push
(bad)
aam
inc
pop
cmps
adc
sahf
cld
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
adc
adc
pop
sub
inc
test
push
popa
dec
mov
aas
or
shl
and
int3
pusha
das
shl
or
sub
repz
movs
mov
xchg
push
pusha
add
xchg
push
jmp
cdq
xor
mov
add
or
jb
add
pop
add
dec
dec
add
push
pop
lea
xchg
xor
cld
cdq
add
inc
jg
lahf
xor
xchg
xchg
add
rol
mov
pusha
je
lahf
imul
(bad)
mov
inc
sti
out
cwde
cmp
sub
loope
and
jg
jbe
gs
adc
inc
fwait
jns
mov
repnz
into
mov
clc
or
(bad)
loope
adc
les
mov
test
popa
ins
dec
add
xor
imul
xchg
ja
sub
loopne
mov
loopne
pop
add
and
add
or
inc
sub
add
add
add
add
or
dec
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
xor
es
or
and
jae
cmps
xchg
mov
es
and
cwde
cmp
(bad)
shl
aaa
or
adc
rcl
ret
sbb
adc
mov
std
fyl2xp1
gs
mov
test
mov
jmp
and
push
aas
mul
inc
adc
scas
fnstsw
retf
mov
ret
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
inc
ret
mov
adc
add
and
add
or
inc
sub
add
add
add
add
or
std
or
push
pusha
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
adc
(bad)
std
or
rol
mov
cmp
mov
loopne
rol
rol
or
lgdtd
dec
add
add
popa
xor
sbb
dec
add
mov
add
ins
je
add
dec
inc
cmp
popa
cmp
cmp
idiv
add
jmp
call
add
rcl
test
int
cdq
pop
sbb
jmp
add
push
addr16
(bad)
fadd
cmps
add
(bad)
adc
or
cmps
mov
xor
aad
test
xchg
add
cmp
std
mov
scas
mov
xchg
jmp
js
std
clc
outs
dec
fs
sti
nop
(bad)
inc
mov
push
(bad)
(bad)
stos
retf
lods
js
lods
add
movs
add
(bad)
std
mov
jns
(bad)
jns
xlat
xchg
pop
loope
mov
aad
out
call
enter
cs
dec
lds
into
add
and
sbb
das
fmul
std
clc
jmp
scas
scas
sbb
repnz
cmp
fcom
push
imul
push
lods
jae
sahf
bound
sti
cmps
add
scas
cmp
(bad)
jne
adc
or
add
fwait
adc
sub
fidivr
(bad)
cli
add
leave
push
push
or
loope
repnz
mov
ds
push
mov
bound
sbb
retf
or
test
mov
pop
inc
inc
inc
(bad)
repz
mov
std
in
or
mov
xchg
dec
add
in
push
push
push
mov
and
pop
std
out
(bad)
inc
jbe
xchg
test
(bad)
(bad)
(bad)
mov
cmc
mov
loopne
sbb
in
in
(bad)
dec
cmps
ins
adc
cmps
adc
loop
std
fmul
aad
sub
aas
inc
(bad)
inc
retf
icebp
lods
add
jmp
jl
push
ins
inc
push
rol
cmps
adc
cmps
cmps
(bad)
(bad)
hlt
ja
add
and
xor
repz
icebp
repnz
clc
stos
adc
sbb
add
fild
std
jecxz
scas
cdq
xchg
rcl
ret
mov
pop
gs
push
add
in
call
push
in
push
aaa
dec
push
mov
add
int3
or
jmp
icebp
ficom
dec
dec
push
icebp
jmp
and
xor
rol
sbb
cmp
scas
push
call
add
sbb
mov
push
shl
xchg
mov
inc
push
mov
dec
clc
in
retf
jmp
xchg
popf
dec
add
or
hlt
pop
idiv
das
mov
xchg
jg
clc
stc
cld
inc
adc
dec
mul
or
les
push
sbb
out
aam
loop
jge
scas
mov
(bad)
(bad)
mov
clc
cmc
div
adc
jno
out
inc
hlt
into
push
stc
idiv
popf
mov
cmc
repz
loope
hlt
icebp
sub
inc
inc
rol
push
push
inc
jle
pop
lock
std
cmc
add
into
pop
test
fidivr
pusha
pop
pusha
cmps
mov
repz
(bad)
cli
test
push
inc
cmp
les
add
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
cmp
add
inc
std
or
mov
rol
xor
mov
and
shr
add
inc
test
inc
fidivr
or
sub
imul
mov
sbb
les
fidiv
pop
fwait
adc
pop
mov
int3
xor
xchg
jp
inc
repz
and
push
shr
test
add
cmps
dec
push
stos
adc
adc
add
mov
pusha
nop
jp
xchg
dec
pop
fisttp
loop
sbb
add
mov
add
xchg
rcl
mov
xor
das
loopne
push
or
jl
dec
fadd
push
sub
adc
push
mov
cmp
xor
xchg
loop
add
xchg
into
gs
add
pop
mov
sbb
into
not
adc
adc
ja
scas
push
push
stos
push
fstp
pop
jb
push
(bad)
push
inc
push
mov
push
jno
adc
out
test
pop
mov
int3
mov
arpl
or
scas
shr
les
pusha
mov
push
mov
xchg
leave
hlt
adc
je
pop
jle
mov
cmps
xchg
push
outs
push
cli
cmps
xor
loopne
iret
or
es
rol
imul
xchg
pop
sbb
mov
aaa
jae
inc
push
push
adc
in
ret
or
int3
lock
or
fdiv
and
adc
popf
imul
(bad)
mov
mov
push
dec
aas
add
rcr
mov
sub
sbb
in
add
and
into
sbb
xor
or
push
test
jecxz
sbb
adc
into
hlt
jecxz
inc
loopne
adc
stc
push
(bad)
out
and
cmps
push
inc
fdiv
adc
out
test
jecxz
adc
add
push
inc
push
xchg
pop
push
in
cs
adc
push
or
ins
lods
inc
dec
cs
hlt
jmp
sbb
scas
push
cwde
pop
push
push
sub
jmp
add
inc
pusha
dec
and
ja
add
pusha
inc
inc
and
mov
(bad)
inc
mov
jmp
push
imul
dec
adc
enter
hlt
and
mov
pop
(bad)
(bad)
aaa
fadd
cmp
cwde
ins
adc
or
push
in
inc
stos
cmp
popa
push
sub
inc
or
xor
pop
test
or
loopne
(bad)
or
pusha
inc
add
adc
(bad)
and
sub
enter
push
movs
xchg
mov
jbe
inc
or
inc
fwait
jl
inc
sbb
cld
adc
and
inc
aam
pop
pop
and
ins
ror
push
sbb
sbb
sub
push
sar
test
ret
mov
fcom
add
int
retf
rcr
sbb
sub
rol
push
inc
and
les
mov
and
add
mov
cwde
mov
std
mov
adc
clc
xor
xor
inc
test
cmp
inc
dec
jnp
xor
add
adc
lds
cwde
mov
mov
ret
dec
or
rcr
add
sbb
mov
mov
and
push
mov
and
fdiv
out
cmp
add
xor
dec
or
xor
inc
inc
and
inc
shr
add
adc
rol
pop
inc
add
and
push
repnz
mov
test
pop
shl
inc
or
add
add
jb
inc
xor
pop
test
je
mov
push
in
ja
pusha
lds
push
ror
push
in
rcl
add
jmp
inc
or
inc
inc
aas
test
pop
pop
sbb
xor
adc
or
test
adc
std
out
push
add
lds
push
add
retf
add
xor
mov
aas
push
mov
dec
mov
or
rol
call
inc
pop
je
or
shl
add
pusha
add
and
call
inc
or
adc
add
sub
sbb
inc
ss
and
sub
pushaw
rcr
rol
or
and
adc
push
push
mov
mov
clc
adc
xchg
sbb
add
adc
xor
js
adc
cmp
inc
mov
push
movs
arpl
and
sbb
cmp
lods
push
dec
or
dec
xor
xchg
ror
xchg
sbb
add
inc
add
adc
inc
pop
dec
rol
stos
push
call
add
or
pop
outs
push
je
xchg
xor
push
add
in
adc
(bad)
fadd
jp
loopne
sub
add
rol
sub
nop
or
add
xchg
add
pusha
add
add
or
add
jmp
sbb
loopne
cmps
add
pusha
test
dec
inc
or
or
or
add
ror
lea
nop
mov
xor
(bad)
push
add
jbe
adc
sbb
add
stos
mov
push
mov
add
call
mov
add
ins
push
add
dec
inc
add
xchg
inc
mov
sbb
or
call
mov
xor
sbb
adc
xor
lds
adc
add
pusha
cwde
jl
inc
or
jno
xor
int3
and
test
cmp
cmp
mov
add
call
add
and
sub
pop
bound
xor
and
add
cwde
inc
push
mov
jno
mov
lock
adc
add
mov
out
(bad)
enter
jae
add
fadd
lock
je
test
sbb
sub
or
or
test
mov
cmp
adc
lods
mov
pop
ja
push
sbb
push
out
mov
add
in
loop
push
mov
or
ret
push
mov
push
add
cmp
add
inc
and
add
add
outs
add
xor
add
add
add
or
push
inc
scas
in
or
sbb
adc
add
rcr
sbb
sub
add
and
push
sar
dec
sbb
xor
test
mov
or
or
and
adc
inc
pop
dec
ins
in
into
jae
xlat
pop
xor
cmp
add
inc
ss
inc
inc
test
movs
mov
add
pop
add
mov
dec
inc
mov
xor
out
fneni(8087
rcr
mov
pop
and
add
sbb
add
inc
and
pusha
add
test
pop
xor
xor
xchg
or
inc
or
jo
push
call
mov
xchg
jnp
mov
mov
movs
push
mov
repnz
adc
ret
or
sub
ins
add
mov
xor
xor
and
xor
cmp
cwde
add
je
push
push
nop
mov
mov
lea
addr16
adc
adc
mov
add
adc
add
(bad)
retf
into
dec
imul
shl
mov
ret
(bad)
inc
mov
and
rol
xor
push
ja
fimul
adc
sbb
adc
test
xor
sub
les
loopne
cs
add
xor
add
push
test
pushf
iret
adc
add
dec
rcl
pop
mov
or
mov
and
nop
inc
adc
nop
or
sub
cmp
sar
dec
pop
and
sub
add
xor
push
adc
pop
inc
or
shl
jecxz
sbb
add
pop
ret
sbb
push
pop
and
outs
or
lock
outs
mov
or
nop
inc
add
and
push
mov
add
add
call
icebp
or
add
mov
ds
cmp
(bad)
sub
aaa
push
sti
cld
jmp
div
add
stc
add
or
inc
sub
add
pop
add
add
or
lock
mov
or
sub
data16
ret
pop
dec
mov
pop
sub
fs
in
pusha
mov
sub
(bad)
int3
aas
ins
mov
lock
adc
pop
test
and
or
loop
or
aam
xor
pop
hlt
call
mov
dec
add
(bad)
mov
lds
sbb
movs
pop
sub
mov
or
xchg
int
sub
int3
cmp
sti
outs
dec
sbb
add
sbb
push
les
mov
and
or
shl
mov
jae
sub
jmp
push
pop
data16
mov
fsubrp
je
adc
inc
add
cmc
das
leave
pop
rcr
scas
push
add
in
mov
xchg
jg
(bad)
push
jns
mov
dec
pushf
pop
inc
lock
and
(bad)
or
adc
adc
xor
adc
push
cmp
cld
xchg
mov
inc
or
jle
rcl
add
xchg
inc
push
mov
enter
dec
jl
adc
add
pusha
rol
xor
xor
loope
data16
popa
inc
repnz
(bad)
mov
mov
mov
and
sbb
inc
inc
push
add
inc
ficom
and
and
inc
sub
(bad)
int
inc
mov
push
add
dec
outs
fadd
loopne
es
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
lock
pushf
or
fsubr
lods
test
adc
dec
test
and
adc
sar
ins
test
inc
and
jg
cmp
inc
xchg
xchg
dec
stos
push
sub
adc
sub
jae
mov
sub
dec
fcomi
jb
ret
popf
call
cmp
xor
fld
adc
push
call
mov
std
daa
jmp
jmp
inc
adc
and
cmp
inc
(bad)
pop
lds
push
xchg
adc
inc
push
(bad)
loop
pop
pusha
sbb
add
xor
fild
stos
mov
jns
fs
movs
nop
rol
or
cld
xor
lock
adc
push
sbb
icebp
int
push
(bad)
cmp
jnp
or
sub
ins
sbb
push
call
inc
int3
or
inc
popa
xor
cmps
loope
std
int3
sub
add
push
mov
dec
test
inc
and
enter
jns
push
add
and
add
or
inc
sub
add
cmp
add
or
add
or
lock
mov
pop
enter
xchg
and
dec
mov
lds
enter
jg
sbb
sbb
rcr
push
stc
mov
movs
inc
xchg
(bad)
(bad)
(bad)
mov
or
inc
mov
sbb
aaa
das
mov
pop
push
ret
out
dec
ror
pop
stos
lahf
sub
pop
mov
add
in
stc
pusha
or
push
mov
mov
rol
mov
enter
cmp
mov
sbb
push
ret
mov
sbb
sti
xchg
hlt
adc
fsub
and
(bad)
rcr
xor
push
(bad)
mov
into
aas
cs
or
or
sahf
push
jmp
xchg
cmp
cli
test
and
jnp
dec
xor
or
xchg
jo
stc
and
jo
fnsave
add
dec
add
test
mov
push
add
jmp
push
xor
push
loopne
or
jne
call
add
popa
push
xor
xchg
les
mov
push
loopne
add
ret
inc
pusha
mov
inc
or
int3
loopne
sbb
push
cmp
xor
sub
or
push
adc
iret
add
pop
adc
inc
cld
adc
lea
sub
push
dec
loope
pop
js
bound
or
fidivr
je
adc
adc
dec
adc
adc
add
and
inc
pop
int3
loopne
cmp
inc
sahf
or
xchg
pcmpgtw
dec
or
cmp
add
or
hlt
ret
pop
inc
sub
inc
pop
or
es
out
mov
xlat
(bad)
lock
add
popf
or
mov
cmp
ror
dec
xor
icebp
push
add
ss
adc
push
lock
psubsw
mov
add
int3
ror
push
sar
retf
ins
fsub
stos
inc
dec
in
sbb
mov
adc
pop
push
mov
(bad)
and
(bad)
push
cmp
and
xchg
xor
loope
or
ret
mov
mov
sbb
adc
xor
jmp
inc
scas
add
ins
cdq
adc
hlt
add
add
xor
fsub
ror
daa
lock
ror
or
sbb
rcl
push
popf
or
xchg
add
inc
loopne
push
and
adc
inc
add
add
or
inc
sub
add
push
add
add
or
add
or
lock
mov
or
sub
data16
ret
pop
dec
mov
pop
sub
fs
in
pusha
mov
and
(bad)
int3
aas
ins
mov
lock
adc
or
mov
xchg
pop
adc
mov
mov
add
hlt
call
mov
dec
call
jnp
inc
(bad)
mov
(bad)
pop
aaa
sbb
and
pop
or
xchg
int
sub
int3
cmp
cli
outs
dec
sbb
add
sbb
push
les
mov
adc
(bad)
push
daa
aam
push
cmp
xor
test
test
jns
adc
and
adc
leave
xchg
int
add
add
sbb
outs
pushf
mov
rol
inc
dec
dec
ds
(bad)
rol
sbb
fdivr
pop
in
or
in
or
jp
shl
mov
mov
test
call
dec
jmp
add
lods
mov
jl
int3
repnz
cmp
cmp
pop
adc
hlt
add
sub
rcl
cwde
aaa
shr
imul
and
sahf
inc
cmp
(bad)
aas
pop
cld
arpl
or
ins
xlat
add
fsub
nop
push
or
mov
mov
adc
pop
cmp
lock
sub
in
nop
adc
mov
adc
adc
or
add
inc
in
(bad)
cmp
add
sub
loope
sub
movs
dec
call
adc
aas
push
pop
mov
je
aas
or
add
dec
(bad)
adc
add
js
aam
mov
xor
lock
nop
or
add
adc
or
push
jmp
nop
or
shl
sub
or
cmps
(bad)
cli
add
jmp
adc
xor
pop
or
stc
add
or
inc
sub
add
add
or
add
or
lock
pushf
or
fsubr
lods
test
adc
dec
test
and
adc
sar
ins
test
inc
and
jg
cmp
inc
xchg
xchg
dec
stos
push
sub
adc
sub
jae
mov
sub
dec
fcomi
jb
ret
popf
call
cmp
xor
fld
adc
push
call
mov
std
daa
jmp
jmp
inc
adc
and
cmp
inc
(bad)
pop
lds
push
xchg
adc
inc
push
(bad)
loop
pop
pusha
sbb
add
xor
fild
stos
mov
jns
fs
movs
nop
rol
or
cld
xor
lock
adc
push
sbb
icebp
int
push
(bad)
cmp
jnp
or
sub
ins
sbb
push
call
inc
int3
or
inc
popa
xor
cmps
loope
std
int3
sub
add
push
mov
dec
test
inc
and
enter
jns
push
add
and
add
or
inc
sub
add
push
add
add
or
add
or
lock
mov
pop
enter
xchg
and
cmp
mov
inc
test
adc
mov
pop
sbb
stc
aaa
shl
std
(bad)
mov
ins
into
inc
xchg
mov
sbb
out
add
or
inc
cmc
push
and
(bad)
push
mov
xchg
add
sahf
setbe
hlt
(bad)
int
pop
adc
inc
movs
leave
and
hlt
sbb
xor
pop
mov
mov
xor
ret
mov
or
adc
pusha
inc
and
(bad)
mov
or
mov
out
pop
adc
add
mov
test
add
popf
or
aam
adc
mov
sbb
and
push
mov
inc
mov
inc
(bad)
or
mov
mov
cld
arpl
icebp
mov
call
push
xchg
cmp
xchg
int
inc
add
(bad)
int3
cld
cmp
mov
pop
inc
jl
sar
js
add
push
adc
or
inc
nop
adc
cmp
inc
add
je
add
add
or
inc
rol
leave
sub
enter
add
xchg
(bad)
mov
inc
mov
and
mov
das
or
sbb
test
inc
xlat
rol
in
popf
adc
adc
add
jecxz
inc
and
push
push
call
lock
jg
test
nop
cwde
push
xchg
(bad)
in
mov
or
aas
and
and
aas
dec
ss
push
add
mov
lock
or
js
inc
imul
cmps
inc
dec
in
call
or
ret
mov
aam
mov
lahf
xchg
mov
push
ror
or
push
nop
mov
inc
xchg
mov
cld
add
adc
and
add
or
inc
sub
add
cmp
daa
add
or
add
or
lock
mov
or
sub
loope
xor
dec
pushf
dec
jno
or
sub
dec
rol
or
fnstcw
mov
add
sbb
sub
pop
mov
xor
adc
movs
dec
adc
pop
test
and
sbb
mov
aam
jp
sbb
xor
add
ds
sbb
lods
fidiv
cmps
mov
inc
pop
lods
cli
mov
dec
jg
je
shl
or
add
ss
mov
xor
pusha
outs
retf
or
mov
add
aaa
adc
ret
and
mov
cmp
adc
adc
mov
inc
or
sub
xchg
mov
pop
jne
mov
js
xchg
push
mov
xor
cmp
icebp
inc
xor
aaa
into
shl
adc
dec
ds
inc
ret
sbb
test
(bad)
fisttp
(bad)
in
into
jp
shl
cmps
(bad)
mov
test
retfw
lods
and
imul
js
push
sbb
adc
xor
aas
loope
rcr
dec
xor
fisttp
add
pusha
sbb
sub
inc
stos
movs
mov
add
ss
inc
cmp
(bad)
aas
pop
cld
arpl
or
lods
xlat
ret
add
test
adc
popf
rcl
sub
and
lods
jb
sub
dec
shr
or
sub
xchg
call
xchg
and
movs
inc
adc
dec
add
add
jecxz
pop
fdiv
add
pop
fdiv
test
adc
inc
cmp
add
or
add
dec
mov
cmp
lods
jbe
sbb
ja
mov
push
adc
cmp
or
fst
leave
adc
adc
or
daa
(bad)
push
push
sbb
(bad)
repnz
or
mov
rdmsr
jmp
jmp
and
xchg
inc
cld
add
add
in
repnz
or
pop
and
dec
xchg
retf
jo
add
dec
hlt
repz
push
hlt
repz
push
and
(bad)
aas
mov
(bad)
mov
push
pop
rol
jl
sti
wbinvd
adc
sti
dec
add
pop
ror
dec
call
unpcklps
pusha
imul
add
or
dec
rol
add
pop
add
add
ror
or
xchg
adc
mov
(bad)
adc
adc
adc
xchg
xchg
inc
push
stos
cld
clc
iret
das
gs
sub
or
cli
cld
inc
jmp
add
nop
dec
aas
pop
mul
movs
ins
adc
pushf
hlt
mov
aas
pop
push
nop
or
and
(bad)
ds
popa
inc
cmp
sub
push
scas
es
inc
add
push
aam
dec
cmp
inc
xor
es
inc
repz
xor
and
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
jo
mov
add
int
inc
test
or
add
mov
push
xchg
shr
nop
push
ja
push
add
add
pop
push
fs
xchg
and
inc
cld
or
scas
dec
mov
fcom
add
jg
adc
add
inc
(bad)
mov
call
cmp
push
jmp
dec
ficom
mov
jo
or
mov
in
push
mov
sub
pop
or
sub
dec
lock
sbb
adc
aaa
add
jmp
adc
mov
iret
or
dec
ja
pop
sub
punpcklwd
sub
pusha
mov
adc
loope
add
add
outs
ja
jg
xchg
sbb
test
jns
add
stc
add
or
inc
sub
add
pop
add
add
or
lock
mov
and
addr16
ret
mov
loop
jg
push
int3
test
jg
adc
sub
out
loopne
or
jno
inc
jg
sbb
mov
test
fidivr
fwait
das
imul
mov
mov
ins
test
pop
adc
je
je
or
xchg
push
adc
stos
popa
inc
cld
jmp
jle
push
jge
lock
fist
(bad)
mov
les
inc
xor
push
sub
cmp
jecxz
sub
sub
xchg
outs
call
sub
and
mov
out
add
push
dec
int3
sub
shl
pop
mov
jmp
hlt
(bad)
arpl
iret
xchg
inc
cli
call
out
mov
(bad)
push
xchg
ja
and
xchg
jg
shr
fisttp
add
fmul
test
mov
daa
loope
shr
adc
push
jmp
inc
cmp
pop
mov
push
das
rcl
mov
push
add
aam
sub
cld
push
loopne
push
cmp
les
inc
icebp
inc
ret
fs
xor
inc
dec
or
pusha
inc
ss
rol
cmp
loopne
xchg
or
push
and
nop
cs
sub
nop
add
ud2
adc
add
iret
xchg
mov
repnz
and
add
add
stc
add
or
inc
sub
add
add
or
mov
stos
add
and
add
jg
loop
sbb
mov
xor
nop
js
mov
cld
jb
scas
and
ss
inc
cli
xchg
push
inc
push
sub
push
sbb
aas
or
xchg
dec
jo
les
mov
push
or
and
adc
sub
stos
push
push
jnp
add
call
push
adc
inc
mov
fdiv
addr16
fadd
push
in
aas
sbb
ror
push
sub
push
sub
add
xchg
es
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
dec
lock
stos
add
nop
inc
and
inc
loopne
or
inc
lods
inc
jo
lds
push
and
or
add
lock
mov
mov
lahf
xchg
adc
push
cmp
inc
ror
sti
mov
add
mov
retf
cmps
sub
bound
dec
mov
(bad)
fdiv
xchg
daa
push
(bad)
cdq
imul
loopne
dec
(bad)
mov
cmp
(bad)
mov
jl
iret
inc
pop
push
sub
xor
or
stc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
inc
and
sbb
mov
ret
xchg
add
dec
test
ss
add
mov
movs
aas
jno
sub
call
cli
mov
push
mov
inc
dec
add
fcom
call
call
sub
movs
lahf
cmp
sub
inc
ins
ret
retf
xor
repnz
inc
ins
std
add
push
or
les
movs
sub
es
mov
int3
stc
xlat
outs
sub
add
loopne
inc
lods
and
xchg
push
or
jge
xor
sbb
rcl
repz
xchg
mov
imul
pop
(bad)
push
(bad)
out
shl
js
out
or
sbb
mov
rol
mov
out
mov
cmp
fdivr
sbb
push
jmp
(bad)
mov
(bad)
cmp
daa
dec
fdivr
push
test
jmp
pmulhuw
ins
into
and
out
jl
out
data16
add
sahf
sub
test
xlat
add
cld
jae
push
ret
lds
or
inc
cmp
inc
(bad)
cmp
adc
sub
(bad)
cmp
fcomp
aas
inc
cld
jae
sbb
adc
push
sbb
mov
xor
mov
stc
add
xor
adc
push
dec
aas
cmp
mov
aas
leave
(bad)
lahf
inc
out
or
ud0
sbb
fistp
or
jae
inc
test
cmp
add
and
xor
cmp
in
mov
add
add
fstp
fadd
out
xor
cmp
adc
sbb
gs
test
add
adc
push
fdivr
ror
pop
sbb
jo
pop
pop
adc
(bad)
dec
xor
cmp
xor
rol
ins
or
dec
inc
(bad)
fs
pusha
sub
sub
sub
add
test
nop
ret
sbb
xchg
pop
out
mov
add
repz
rol
xchg
mov
pusha
or
cmp
pop
rol
icebp
xor
or
push
cli
jge
add
or
push
je
aas
xchg
xor
comiss
push
enter
xor
popa
in
inc
std
js
add
sbb
fwait
sub
fdiv
ins
add
iret
and
jo
and
adc
retf
inc
add
dec
movs
add
add
mov
outs
ins
sub
nop
cld
jecxz
push
iret
add
mov
retf
or
or
outs
movs
pop
mov
cmp
shr
pop
jb
inc
add
dec
add
jl
hlt
aas
and
call
inc
adc
ins
not
icebp
xchg
call
in
rol
rol
aas
mov
test
xchg
lds
push
mov
hlt
adc
aad
out
xor
mov
inc
and
sbb
mov
adc
adc
sar
pand
sti
ucomiss
sub
inc
sbb
or
das
arpl
adc
mov
or
in
add
sbb
int
xchg
and
mov
push
mov
mov
cmp
(bad)
clc
rol
getsec
call
adc
adc
js
push
mov
hlt
and
iret
or
repz
aas
cmp
add
cld
xchg
mov
dec
or
int3
inc
lods
test
inc
cwde
mov
adc
(bad)
fwait
(bad)
jno
jg
adc
pop
out
push
in
and
add
inc
clc
xor
jg
loopne
xchg
add
aas
mov
push
sbb
or
pop
add
mov
mov
sub
stos
mov
test
mov
sbb
nop
adc
jle
inc
adc
ficom
cmp
add
mov
sub
push
add
add
bound
or
fiadd
nop
mov
pop
push
mov
push
push
mov
dec
and
aaa
js
and
sbb
adc
test
loopne
add
lds
mov
mov
mov
aas
xchg
ror
or
adc
fwait
sbb
ror
add
add
push
pusha
xchg
or
push
and
pop
dec
movs
xchg
arpl
inc
adc
inc
pop
xchg
add
or
jne
or
jg
stc
loop
inc
leave
mov
push
bound
push
lock
or
add
test
test
add
ret
adc
enter
cmc
aas
cmp
xor
rcl
clc
pop
and
xchg
or
repnz
rcpps
inc
ss
and
nop
add
clc
add
inc
mov
mov
pop
inc
in
inc
pop
push
in
add
jns
or
inc
add
lds
jb
or
outs
push
xchg
shl
fndisi(8087
mov
and
add
inc
add
(bad)
push
int3
mov
sub
adc
or
sub
inc
add
pop
sub
xor
or
push
add
or
cmp
and
add
enter
xor
push
adc
push
repnz
xchg
jo
jg
add
jmp
sbb
mov
sub
pop
xchg
push
dec
test
adc
dec
inc
and
adc
or
loopne
retf
clc
inc
dec
out
jo
adc
mov
push
and
je
xchg
pop
rcl
fmul
push
dec
cmc
add
pusha
add
loopne
inc
gs
rol
pop
mov
add
call
loopne
mov
ror
add
lods
add
adc
loope
or
sbb
leave
lahf
mov
jo
fst
iret
add
enter
inc
pop
adc
pop
xchg
pusha
add
(bad)
lock
ret
js
xor
sar
inc
ret
jo
add
repnz
xchg
adc
fdivr
push
xor
test
test
inc
fadd
sub
ja
and
int
inc
add
shl
mov
aam
cld
jno
add
inc
or
xor
fwait
push
add
cmc
loopne
sbb
(bad)
fnstcw
cs
rdpmc
lock
adc
jmp
add
loopne
(bad)
pusha
js
push
and
movs
or
or
inc
(bad)
jp
or
test
inc
sbb
or
mov
cmp
sub
adc
push
inc
xchg
xlat
sub
hlt
shl
aas
mov
cmp
add
stc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
inc
sub
sbb
jbe
mov
or
xchg
inc
test
test
push
mov
sbb
xor
sbb
adc
loope
lods
or
push
mov
rcl
pop
adc
cdq
adc
rcl
sub
or
jecxz
mov
inc
jne
rol
cmp
gs
test
pop
add
ins
fmul
push
xor
mov
mov
pop
adc
aaa
loopne
cwde
xor
jb
or
sbb
ja
or
add
(bad)
or
fimul
add
cld
jmp
mov
movs
push
pop
push
push
cmp
pop
and
les
loopne
pop
pusha
sbb
cmc
(bad)
sub
push
pusha
test
add
jne
push
dec
pop
mov
mov
into
xchg
and
add
jp
(bad)
mov
rol
icebp
and
in
push
sahf
mov
in
cwde
icebp
outs
(bad)
cmp
aaa
scas
sub
pop
lock
rcr
addr16
mov
or
push
or
push
sub
xor
retf
push
call
fadd
and
mov
adc
mov
xchg
add
push
mov
cs
and
push
add
shl
dec
push
add
rcl
or
dec
or
movhps
in
imul
push
sub
aas
sbb
pop
test
ja
rol
inc
out
dec
dec
adc
inc
stos
inc
nop
pop
adc
mov
adc
push
mov
icebp
retf
imul
push
ror
popa
adc
les
add
adc
push
xor
lock
sbb
ins
add
push
ss
adc
mov
pop
sub
mov
jbe
inc
add
push
push
cmp
and
sbb
ud0
inc
mov
les
mov
sbb
sbb
sub
leave
inc
stos
jl
inc
xchg
hlt
fdiv
imul
ret
mov
test
pop
sub
rol
push
inc
adc
or
(bad)
jo
lea
inc
mov
adc
dec
mov
adc
cs
push
jl
adc
sbb
fisub
ret
fdiv
hlt
dec
sub
loop
dec
or
mov
or
sbb
adc
xchg
push
jmp
lea
outs
leave
and
mov
xchg
das
inc
push
cld
arpl
pushf
push
pushf
dec
sbb
push
and
nop
xor
and
pop
jnp
mov
(bad)
arpl
add
inc
push
movs
xor
movs
add
dec
or
test
wbinvd
push
adc
loop
pop
add
ret
data16
mov
sub
rol
add
cld
mov
add
leave
or
push
shl
inc
aam
or
dec
mov
ret
fcmovnu
fsubp
push
or
aas
mov
imul
xor
and
jmp
and
or
cmp
pop
cmp
add
and
psllw
and
sub
aas
or
hlt
add
sbb
inc
loop
lock
aas
or
add
sar
inc
or
dec
or
xor
inc
js
xor
icebp
lods
xor
push
or
mov
or
jbe
nop
int
rol
sti
xchg
(bad)
mov
add
inc
add
popa
or
bound
mov
inc
cmp
add
sbb
ret
cmp
fisttp
call
inc
push
test
cmp
inc
pop
je
mov
and
pop
or
inc
nop
xor
add
(bad)
rcl
js
adc
xor
sbb
or
cmp
sbb
sub
test
push
dec
fcomp
aas
bound
inc
lods
loop
(bad)
cmp
push
inc
cmp
adc
nop
test
sub
inc
push
adc
cld
xchg
out
add
cmp
inc
dec
add
add
nop
aas
and
and
mov
add
clc
pop
add
mov
sub
loopne
sahf
fadd
jns
inc
or
es
add
fild
call
mov
add
pop
clc
xor
xchg
inc
push
rol
sub
sbb
or
jbe
pop
(bad)
jmp
or
sbb
and
(bad)
push
lods
add
add
and
inc
push
pop
push
mov
or
scas
cdq
add
xor
dec
nop
and
add
ror
and
add
call
add
adc
xchg
add
push
add
jo
and
les
jl
call
adc
add
add
loopne
xchg
inc
push
add
nop
test
std
ret
push
mov
or
ja
mov
push
add
or
or
or
jp
add
cmp
or
and
inc
add
mov
into
jg
mov
xor
mov
adc
mov
sbb
jno
je
jecxz
shl
pop
mov
ror
rol
cmp
je
cmp
sub
sub
jecxz
jl
mov
repnz
fstp
(bad)
arpl
adc
sbb
sbb
jo
and
sbb
jbe
inc
outs
out
mov
ds
add
xor
sbb
stos
mov
mov
clc
(bad)
adc
(bad)
loop
popa
cmp
mov
pop
pusha
or
jmp
mov
mov
and
cmp
push
cmp
mov
mov
leave
or
inc
pop
repz
in
xor
adc
add
or
pop
add
adc
sbb
and
nop
inc
adc
nop
or
push
xor
adc
cwde
pop
sub
mov
and
inc
or
icebp
and
fnstcw
add
cmp
pop
dec
mov
push
imul
adc
enter
mov
push
enter
call
in
adc
mov
mov
bound
add
add
sbb
retf
sbb
arpl
add
stc
add
or
inc
sub
add
add
or
dec
lock
adc
sub
push
add
xchg
pop
or
pop
inc
or
xor
aaa
js
xor
jae
push
and
sbb
dec
mov
adc
push
cmp
clc
loopne
mov
(bad)
cdq
mov
je
or
push
xor
dec
(bad)
and
call
sub
add
add
rol
push
cli
pop
mov
jns
xchg
pusha
mov
pop
call
rcl
out
cdq
adc
mov
inc
xchg
movs
int
fnstcw
jmp
and
xor
add
stc
add
or
inc
sub
add
add
or
dec
lock
stos
add
nop
inc
and
inc
loopne
or
inc
lods
inc
jo
lds
push
and
or
add
lock
mov
mov
lahf
xchg
adc
push
cmp
inc
ror
sti
mov
add
mov
retf
cmps
sub
bound
dec
mov
(bad)
fdiv
xchg
daa
push
(bad)
cdq
imul
loopne
dec
(bad)
mov
cmp
(bad)
mov
jl
iret
inc
pop
push
sub
xor
or
stc
add
or
inc
sub
add
add
xor
add
inc
std
or
mov
rol
nop
mov
dec
pushf
dec
rcr
arpl
push
inc
mov
pop
outs
push
lds
sub
add
xor
or
add
movs
iret
adc
adc
adc
xor
rcl
cdq
fwait
les
shl
xor
aaa
std
out
lods
push
enter
dec
cmp
jmp
or
pop
sub
adc
retf
xor
ret
dec
add
pop
scas
pop
aas
ins
fdiv
ins
in
repz
and
mov
enter
ucomiss
sub
sbb
js
jp
mov
leave
jnp
sbb
and
int
adc
mov
mov
(bad)
mov
dec
dec
xor
inc
ins
inc
iret
int
or
movs
std
jns
dec
fnsave
in
mov
clc
lock
outs
lods
gs
inc
stc
repnz
pop
div
sbb
ret
loope
(bad)
pop
adc
mov
call
mov
xor
addr16
add
add
les
ja
mov
pop
adc
or
or
inc
xor
aam
inc
or
and
rcr
push
dec
sbb
mov
add
loope
sbb
mov
pop
cmp
add
inc
add
sbb
and
ins
adc
inc
cmp
cmp
push
mov
xor
dec
adc
in
dec
push
xor
jo
or
test
mov
and
fld
popa
sbb
in
dec
jmp
push
lds
sub
int3
jo
push
ja
push
ret
xor
xchg
xchg
ret
aam
jecxz
in
imul
inc
pop
ss
mov
inc
sub
xchg
arpl
xchg
add
loopne
adc
fsubr
cmp
sbb
popf
and
stos
scas
cli
out
aaa
daa
jne
pop
pop
sub
sub
(bad)
pop
retf
ret
das
jbe
mov
fnstcw
or
mov
mov
pusha
and
xor
loopne
sub
mov
add
mov
(bad)
das
imul
inc
add
(bad)
std
dec
jae
cmp
and
movs
mov
cmp
cmp
xor
cmp
sbb
pop
add
cld
popa
inc
cs
nop
dec
ins
retf
sahf
aam
adc
or
xchg
xor
imul
mov
test
inc
aas
sti
pop
mov
aas
push
mov
loope
movs
mov
movs
pushf
cmp
sub
xor
fdivr
mov
ror
xor
inc
add
lods
add
rcr
cmp
mov
(bad)
jae
add
(bad)
cli
inc
sub
nop
mov
aas
lods
rol
xchg
dec
add
nop
sbb
mov
add
xchg
and
add
cmp
xor
shl
les
xchg
or
ret
idiv
loopne
and
and
push
push
xchg
ja
pop
mov
pop
and
jae
and
inc
or
inc
shl
or
ror
and
sub
xchg
es
ffreep
pcmpgtw
ret
jnp
int
imul
add
pop
inc
add
sbb
add
dec
mov
push
xor
push
clc
sbb
nop
test
enter
rol
lock
pop
add
jns
inc
xor
mov
sub
sar
xor
or
push
inc
rol
adc
ret
sbb
xchg
pop
jne
adc
loopne
nop
mov
add
hlt
add
mov
and
pusha
inc
adc
add
test
ins
or
sbb
add
and
call
pop
inc
lods
bound
fistp
push
das
sbb
add
and
jnp
inc
and
sbb
or
adc
adc
add
cmp
or
or
mov
mov
jmp
nop
xor
or
inc
and
inc
or
or
sub
cmp
pop
add
add
or
or
loopne
or
inc
mov
rol
pusha
and
pusha
and
cwde
inc
pop
inc
rol
add
movs
xlat
test
add
ret
das
rol
add
rcl
rol
das
data16
add
jno
xor
mov
in
popa
pop
sub
seto
enter
popf
and
jns
add
or
pusha
inc
and
inc
adc
ins
or
lds
and
adc
mov
adc
stc
push
ja
hlt
mov
sbb
mov
pushf
inc
or
pcmpgtd
dec
lods
loope
and
inc
adc
and
pop
jo
cmp
adc
pop
and
sub
shl
xor
add
cld
push
or
inc
add
mov
mov
aad
inc
mov
adc
add
inc
mov
pop
mov
inc
dec
sub
xor
pusha
push
pusha
push
add
pop
adc
or
inc
test
rol
sub
push
and
add
inc
pop
and
dec
ds
les
fdivr
mov
pusha
or
mov
je
mov
(bad)
sbb
push
inc
adc
call
inc
cmp
rol
(bad)
test
test
sbb
inc
or
in
movs
jo
xor
ror
nop
push
das
and
add
cmps
cmp
bound
les
adc
call
test
add
or
loopne
cmp
add
add
or
js
push
lods
mov
add
nop
push
cmp
js
ins
dec
inc
fsub
pop
ja
pop
aaa
dec
lock
jg
and
pop
add
push
dec
mov
sub
add
and
add
mov
adc
dec
or
mov
mov
or
fsub
js
xchg
or
bound
mov
add
xor
or
mov
cmp
xor
jle
ret
push
js
cmp
loope
xor
add
push
add
sbb
sub
pop
mov
fbld
sbb
ret
dec
adc
xor
loopne
pshufb
inc
inc
pop
je
shl
or
pop
and
or
inc
mov
mov
or
cmp
jne
push
ja
mov
mov
add
cmp
mov
test
sbb
cmp
jl
movs
inc
pop
inc
pop
xor
ins
aaa
daa
sbb
rcl
jo
xor
inc
add
and
adc
inc
bound
xchg
int
sub
ins
and
add
push
cmp
xchg
ret
jnp
pop
sar
mov
enter
mov
or
inc
cmp
or
xchg
les
inc
adc
add
pop
add
push
rcl
sbb
arpl
stc
and
adc
push
cmp
and
xor
enter
mov
je
in
mov
inc
ds
bnd
add
loope
or
pushaw
inc
arpl
inc
or
add
je
test
push
xor
and
ja
xor
adc
jmp
add
dec
jo
or
or
retf
inc
or
add
jle
or
or
sbb
cmp
aas
adc
adc
enter
cmp
dec
test
out
add
fwait
add
dec
rol
outs
mov
dec
add
in
fnsave
or
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
add
add
xor
jo
sbb
rcl
add
dec
sbb
repz
movs
adc
cmp
fdivr
dec
inc
dec
sbb
jb
inc
mov
or
add
sbb
repnz
push
sbb
and
sbb
nop
(bad)
mov
inc
mov
jecxz
xor
xor
add
inc
add
imul
pop
js
ds
xchg
je
mov
push
add
pop
adc
mov
(bad)
fsubr
mov
xchg
test
mov
adc
sub
jnp
mov
rcr
jb
mov
xor
or
jns
sub
dec
nop
jmp
fistp
cmp
pop
or
cmp
mov
mov
mov
stos
jp
add
lods
cmp
test
sub
mov
or
sbb
jmp
std
cmp
add
ficomp
pop
xchg
mov
inc
or
pop
inc
sub
sub
rcl
lods
pop
jbe
dec
pop
xor
adc
std
push
inc
add
mov
sahf
add
jo
mov
xchg
mov
retf
add
add
shl
or
mov
fsub
mov
rcl
rcl
jg
rcr
or
push
add
xlat
nop
mov
loope
dec
push
sub
dec
xor
lds
test
cwde
gs
ja
rol
test
xor
xor
je
sahf
adc
in
mov
xchg
imul
sub
js
inc
or
sbb
outs
js
or
pushf
or
jmp
fstp
loop
ss
je
and
add
xchg
or
inc
mov
les
mov
ret
and
cwde
inc
xchg
sbb
ja
jo
sbb
cli
test
ins
cmp
adc
mov
adc
dec
inc
fsubr
mov
icebp
inc
adc
cmp
lods
cmp
lock
dec
jmp
ror
and
sub
pusha
lock
mov
sbb
xchg
and
ret
fs
sub
outs
jp
fdiv
shr
sbb
enter
repnz
or
rol
xchg
daa
push
mov
das
cmp
shr
pop
pusha
retf
mov
push
dec
cmp
xchg
add
sbb
push
mov
push
hlt
xchg
shr
mov
xchg
dec
lds
mov
dec
arpl
icebp
cmps
movs
test
sub
ret
dec
push
ret
adc
sub
loopne
aaa
mov
or
(bad)
aam
add
jmp
jge
sbb
mov
mov
scas
shl
or
add
pop
hlt
inc
lods
mov
fild
bound
cmp
inc
add
pop
fdiv
inc
add
call
push
mov
jg
pusha
jno
push
and
push
test
sub
scas
add
fadd
xor
movs
leave
inc
mov
add
xchg
pop
retf
cmp
sub
mov
(bad)
mov
imul
xor
imul
das
in
or
push
mov
cmps
cmp
movs
jmp
(bad)
and
and
adc
pop
pop
or
add
mov
jmp
pop
or
mov
mov
pop
jmp
test
push
inc
cmp
add
rol
and
pop
mov
cli
inc
frstor
adc
push
sub
jne
(bad)
cld
mov
inc
adc
xchg
fwait
loopne
jp
adc
pop
rcr
adc
cmp
and
in
out
(bad)
ror
adc
or
sbb
push
sbb
xchg
lds
test
sbb
mov
movs
xchg
mov
test
add
in
shl
cmp
and
test
xor
lds
dec
sub
push
sbb
push
xor
jb
mov
or
nop
inc
push
xor
push
fbstp
xchg
xlat
jmp
rol
mov
cs
add
inc
mov
(bad)
hlt
dec
pop
frstor
add
imul
adc
cmp
sbb
mov
dec
retf
in
mov
sub
nop
retf
push
nop
(bad)
and
add
xacquire
dec
nop
in
lahf
add
cmps
pop
push
add
daa
stos
loopne
inc
mov
pop
cmp
add
sub
test
imul
add
dec
inc
or
aas
sbb
inc
dec
inc
push
pop
adc
ror
cmp
mov
or
and
xchg
cmp
cmc
movs
lea
pop
add
add
jge
add
fs
push
jb
inc
sbb
rol
pop
push
or
sbb
pop
sbb
inc
cmp
pusha
(bad)
lds
or
outs
add
inc
hlt
adc
or
inc
push
sbb
and
mov
cmps
push
pop
or
shr
add
xor
push
jno
xor
fmul
aaa
in
add
shl
sub
mov
xor
scas
inc
int
cmp
rcl
daa
sbb
add
add
adc
mov
cmp
push
pop
push
dec
push
retf
mov
adc
jmp
sbb
jno
repz
mov
add
push
lds
mov
mov
frstor
xchg
adc
push
rcl
adc
ret
add
lea
inc
sbb
pop
inc
push
ret
outs
xchg
and
push
or
xchg
adc
int3
fadd
jle
rcr
mov
sbb
mov
or
mov
adc
aas
and
push
cwde
inc
pop
cdq
leave
mov
or
retf
or
nop
dec
mov
inc
or
inc
adc
push
mov
jge
xor
outs
lock
pop
add
cmp
dec
cmps
fcom
test
mov
inc
or
push
inc
add
mov
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
shl
es
and
sub
pop
ret
mov
add
inc
test
sub
mov
pop
pop
mov
mov
sub
sbb
xor
jb
add
push
add
mov
lea
int3
cdq
xor
fld
jns
mov
and
add
mov
test
ins
cmps
push
and
fdiv
inc
add
sar
cmp
fwait
arpl
retfw
pop
es
jbe
lock
ins
sar
popa
ret
mov
jmp
call
xor
mov
push
fdiv
aaa
push
jmp
xchg
adc
enter
adc
push
nop
fadd
fadd
xor
lods
mov
cmp
xchg
xor
mov
inc
test
push
cmc
rcl
fsubp
lds
mov
out
outs
(bad)
push
or
dec
xchg
outs
inc
pusha
sbb
mov
jle
dec
ins
daa
mov
pushf
inc
sbb
add
jo
push
pusha
inc
adc
push
js
fs
sbb
adc
dec
mov
sbb
xor
and
jae
mov
push
xchg
adc
les
cmp
push
fwait
add
mov
xor
cld
mov
xor
add
and
inc
loop
or
(bad)
push
jno
and
aas
push
push
mov
add
dec
cs
ja
adc
loop
les
(bad)
sub
push
mov
push
xchg
outs
cmp
or
push
cmp
hlt
test
into
or
in
jo
sbb
sbb
or
push
sahf
dec
push
enter
mul
daa
xchg
fcom
call
add
xchg
fcomp
fdiv
jmp
inc
shl
int3
frstor
mov
inc
add
test
repnz
(bad)
in
or
or
mov
push
jae
add
xor
push
jl
pop
sub
cld
bound
sti
in
popf
dec
mov
pop
out
push
push
lods
mov
sbb
rol
xor
cmp
sub
cmp
mov
sub
daa
ss
iret
xor
inc
fmul
or
add
cli
scas
xor
add
test
inc
hlt
add
pop
inc
in
and
leave
(bad)
in
inc
pop
and
rol
sbb
push
sbb
xchg
scas
push
xchg
xor
cwde
push
hlt
mov
adc
cmp
push
and
retf
inc
int3
fpatan
jno
ror
xor
or
or
ds
lods
add
int3
mov
sbb
inc
cmp
ror
or
xor
mov
mov
inc
push
add
or
lods
sbb
and
jo
leave
add
scas
cmp
or
nop
or
adc
adc
mov
cmp
inc
aam
add
ret
pushf
xchg
sbb
test
inc
mov
pop
sahf
xor
inc
and
hlt
xor
jnp
lock
pop
inc
outs
cmp
sbb
pusha
fbstp
or
dec
or
enter
adc
cmp
dec
or
ret
sbb
cs
cmp
int3
mov
(bad)
mov
clc
nop
shl
adc
sbb
ret
push
jl
add
rol
mov
xchg
and
push
jb
les
ror
cmp
rol
xchg
or
in
popa
push
call
mov
js
add
sbb
rol
add
int3
xor
sbb
dec
add
cmp
outs
or
add
add
or
jo
or
or
add
and
add
inc
sbb
nop
ret
ror
fmul
sub
call
inc
ja
ror
mov
push
and
inc
cmp
adc
push
clc
push
or
push
add
add
bound
add
push
add
outs
int3
rol
mov
or
inc
adc
rol
inc
dec
inc
scas
and
dec
xor
sub
add
sbb
add
dec
push
mov
popa
adc
call
mov
loopne
add
movs
xor
adc
fbld
adc
and
imul
inc
sbb
push
pop
or
cmp
and
pop
add
sub
adc
jle
push
jb
inc
or
xor
sbb
adc
js
adc
pusha
(bad)
inc
inc
add
or
data16
out
adc
xor
stc
into
sub
sbb
lock
sbb
add
inc
shr
nop
int3
inc
jp
sbb
add
add
pusha
mov
or
sub
dec
mov
in
inc
loopne
pop
cmp
add
pusha
ret
sub
xor
bound
push
cli
add
lock
cdq
scas
jo
pusha
sbb
icebp
rcr
add
nop
clts
lock
sbb
and
cmp
out
jb
sbb
shr
add
or
clc
inc
ss
xor
arpl
sahf
or
add
push
inc
nop
cmp
cld
loop
cs
shr
stos
push
push
and
add
inc
pop
and
(bad)
add
or
mov
mov
pusha
or
mov
je
mov
(bad)
sbb
jo
add
add
add
call
inc
cmp
rol
(bad)
test
cli
or
sbb
inc
or
in
movs
jo
xor
ror
nop
push
das
and
add
cmps
cmp
bound
(bad)
loopne
sbb
adc
cmp
sub
xchg
inc
lock
adc
pop
and
xor
vpinsrw
rol
add
or
cmps
lods
cmc
and
je
test
add
inc
(bad)
jle
xor
stos
adc
cmp
loopne
adc
or
test
adc
dec
push
add
int3
inc
sub
dec
inc
add
in
bound
retf
or
sub
xchg
(bad)
rcr
ror
xor
sbb
mov
or
inc
or
popa
xchg
les
push
and
popa
add
mov
jo
sbb
inc
add
add
add
lods
inc
xchg
mov
add
je
mov
mov
add
mov
adc
ret
add
cld
add
mov
and
inc
pop
push
test
enter
add
outs
sub
ror
mov
dec
lods
rol
mov
aad
dec
jne
pushf
stos
loope
clc
add
and
or
add
and
jbe
xor
icebp
test
adc
es
sbb
mov
ss
xor
sub
add
add
dec
nop
(bad)
push
add
je
inc
and
add
pushf
inc
and
push
add
ret
mov
and
jle
lods
and
cmp
dec
js
sub
movs
inc
sbb
js
pop
or
dec
xlat
(bad)
xchg
pop
je
xor
xor
fist
ins
add
mov
sbb
(bad)
pop
add
xchg
nop
movlps
adc
mov
or
lods
inc
or
jl
clc
add
push
xchg
scas
inc
pop
add
pusha
xchg
in
loopne
iret
(bad)
adc
or
cwde
rcr
mov
push
push
cmp
add
xchg
add
inc
out
and
add
enter
scas
add
xchg
inc
pop
and
add
mov
or
push
out
lods
inc
add
ds
inc
add
add
ins
outs
push
inc
pop
test
sub
push
popa
or
cwde
mov
aaa
cmp
nop
add
add
cmp
or
out
mov
mov
fcmovu
ficomp
add
add
stc
add
sub
inc
sub
add
add
add
add
or
add
or
mov
rol
add
add
xor
jo
sbb
rcl
add
dec
sbb
repz
movs
adc
cmp
fdivr
dec
inc
dec
sbb
jb
inc
mov
or
add
sbb
repnz
push
sbb
and
sbb
nop
(bad)
mov
inc
mov
jecxz
xor
xor
add
inc
add
imul
pop
js
ds
xchg
je
mov
push
add
pop
adc
mov
(bad)
fsubr
mov
xchg
test
mov
adc
sub
jnp
mov
rcr
jb
mov
xor
or
jns
sub
dec
nop
jmp
fistp
cmp
pop
or
cmp
mov
mov
mov
stos
jp
add
lods
cmp
test
sub
mov
or
sbb
jmp
std
cmp
add
ficomp
pop
xchg
mov
inc
or
pop
inc
sub
sub
rcl
lods
pop
jbe
dec
pop
xor
adc
std
push
inc
add
mov
sahf
add
jo
mov
xchg
mov
retf
add
add
shl
or
mov
fsub
mov
rcl
rcl
jg
rcr
or
push
add
xlat
nop
mov
loope
dec
push
sub
dec
xor
lds
test
cwde
gs
ja
rol
test
xor
xor
je
sahf
adc
in
mov
xchg
imul
sub
js
inc
or
sbb
outs
js
or
pushf
or
jmp
fstp
loop
ss
je
and
add
xchg
or
inc
mov
les
mov
ret
and
cwde
inc
xchg
sbb
ja
jo
sbb
cli
test
ins
cmp
adc
mov
adc
dec
inc
fsubr
mov
icebp
inc
adc
cmp
lods
cmp
lock
dec
jmp
ror
and
sub
pusha
lock
mov
sbb
xchg
and
ret
fs
sub
outs
jp
fdiv
shr
sbb
enter
repnz
or
rol
xchg
daa
push
mov
das
cmp
shr
pop
pusha
retf
mov
push
dec
cmp
xchg
add
sbb
push
mov
push
hlt
xchg
shr
mov
xchg
dec
lds
mov
dec
arpl
icebp
cmps
movs
test
sub
ret
dec
push
ret
adc
sub
loopne
aaa
mov
or
(bad)
aam
add
jmp
jge
sbb
mov
mov
scas
shl
or
add
pop
hlt
inc
lods
mov
fild
bound
cmp
inc
add
pop
fdiv
inc
add
call
push
mov
jg
pusha
jno
push
and
push
test
sub
scas
add
fadd
xor
movs
leave
inc
mov
add
xchg
pop
retf
cmp
sub
mov
(bad)
mov
imul
xor
imul
das
in
or
push
mov
cmps
cmp
movs
jmp
(bad)
and
and
adc
pop
pop
or
add
mov
jmp
pop
or
mov
mov
pop
jmp
test
push
inc
cmp
add
rol
and
pop
mov
cli
inc
frstor
adc
push
sub
jne
(bad)
cld
mov
inc
adc
xchg
fwait
loopne
jp
adc
pop
rcr
adc
cmp
and
in
out
(bad)
ror
adc
or
sbb
push
sbb
xchg
lds
test
sbb
mov
movs
xchg
mov
test
add
in
shl
cmp
and
test
xor
lds
dec
sub
push
sbb
push
xor
jb
mov
or
nop
inc
push
xor
push
fbstp
xchg
xlat
jmp
rol
mov
cs
add
inc
mov
(bad)
hlt
dec
pop
frstor
add
imul
adc
cmp
sbb
mov
dec
retf
in
mov
sub
nop
retf
push
nop
(bad)
and
add
xacquire
dec
nop
in
lahf
add
cmps
pop
push
add
daa
stos
loopne
inc
mov
pop
cmp
add
sub
test
imul
add
dec
inc
or
aas
sbb
inc
dec
inc
push
pop
adc
ror
cmp
mov
or
and
xchg
cmp
cmc
movs
lea
pop
add
add
jge
add
fs
push
jb
inc
sbb
rol
pop
push
or
sbb
pop
sbb
inc
cmp
pusha
(bad)
lds
or
outs
add
inc
hlt
adc
or
inc
push
sbb
and
mov
cmps
push
pop
or
shr
add
xor
push
jno
xor
fmul
aaa
in
add
shl
sub
mov
xor
scas
inc
int
cmp
rcl
daa
sbb
add
add
adc
mov
cmp
push
pop
push
dec
push
retf
mov
adc
jmp
sbb
jno
repz
mov
add
push
lds
mov
mov
frstor
xchg
adc
push
rcl
adc
ret
add
lea
inc
sbb
pop
inc
push
ret
outs
xchg
and
push
or
xchg
adc
int3
fadd
jle
rcr
mov
sbb
mov
or
mov
adc
aas
and
push
cwde
inc
pop
cdq
leave
mov
or
retf
or
nop
dec
mov
inc
or
inc
adc
push
mov
jge
xor
outs
lock
pop
add
cmp
dec
cmps
fcom
test
mov
inc
or
push
inc
add
mov
add
cmp
loopne
loopne
rol
rol
or
lgdtd
adc
add
add
add
popa
xor
sbb
inc
add
mov
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
call
add
add
or
fcmovne
lods
push
dec
or
arpl
lds
std
std
std
(bad)
jl
stc
cmps
add
push
aam
adc
mov
(bad)
in
sbb
movs
jae
stc
jbe
inc
div
cmc
fisub
(bad)
(bad)
cmp
sti
ret
sbb
cli
add
(bad)
sbb
test
(bad)
(bad)
adc
add
(bad)
add
dec
mov
in
dec
add
or
fadd
(bad)
cli
mov
push
dec
(bad)
rol
(bad)
cli
inc
(bad)
icebp
add
in
add
adc
das
mov
add
mov
(bad)
call
(bad)
jmp
dec
add
(bad)
and
cld
(bad)
(bad)
loope
cld
clc
xchg
fst
dec
sub
(bad)
sub
out
vshufpd
push
std
fnstcw
cdq
add
scas
add
or
mov
(bad)
stc
mov
mov
repnz
xchg
ins
sub
xchg
or
inc
retf
inc
cmp
(bad)
mov
(bad)
(bad)
gs
std
in
not
arpl
les
clc
retf
cmps
and
(bad)
or
repz
mov
(bad)
clc
pop
repz
(bad)
push
sti
mov
cli
scas
add
stc
neg
cdq
adc
out
scas
push
fadd
pushf
(bad)
lods
xchg
or
stos
paddb
cmp
rol
outs
imul
clc
xor
adc
mov
mov
adc
mov
rol
pop
stc
hlt
call
mov
imul
jecxz
std
loope
push
adc
loop
(bad)
in
(bad)
mov
(bad)
in
dec
out
jns
mov
sti
mov
(bad)
mov
dec
push
popa
enter
ror
xchg
and
or
jmp
(bad)
adc
jmp
clc
mov
lds
jmp
(bad)
mov
sti
ret
mov
pop
pop
and
fcmovu
push
push
adc
sbb
in
hlt
retf
jbe
add
mov
hlt
rol
add
cld
sti
repz
mov
mov
test
lock
popf
mov
fmul
out
sar
inc
inc
push
pop
popa
sbb
out
or
mov
jge
adc
jecxz
hlt
out
call
movs
push
(bad)
fbld
jmp
loopne
shl
add
(bad)
(bad)
std
retf
add
iret
add
out
std
lock
enter
(bad)
cli
rol
(bad)
rol
call
add
jmp
lods
dec
sbb
loopne
inc
add
jmp
loope
sahf
ins
(bad)
(bad)
faddp
cwde
or
bound
mov
dec
push
mov
adc
cmc
sub
into
aad
fisttp
aad
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
ss
cmc
pop
mov
adc
dec
and
in
add
test
jmp
lea
data16
and
nop
add
cwde
sub
sub
jmp
inc
ja
adc
and
xor
es
sub
sbb
dec
xchg
adc
loope
test
ds
rcl
or
rcl
and
int3
cdq
dec
arpl
clc
inc
out
pop
das
or
fs
adc
inc
imul
mov
stos
jns
push
adc
xor
push
sub
cmp
or
xor
mov
aas
or
xchg
je
or
mov
mov
pop
xor
cwde
dec
jnp
out
cmp
adc
lahf
pop
push
popf
fs
in
cmp
scas
xor
sar
ins
mov
xchg
adc
js
and
mov
ins
jecxz
test
call
ss
or
add
add
clc
sbb
dec
fsub
xchg
or
fsub
add
push
or
push
sbb
jo
pop
lock
or
(bad)
push
les
or
jp
push
mov
adc
sub
sbb
push
adc
enter
sub
mov
mov
retf
cmp
getsec
adc
shr
popa
xor
and
and
nop
sbb
lds
xchg
mov
mov
mov
adc
xchg
add
adc
dec
add
or
mov
or
imul
ret
pushf
or
add
add
in
push
xchg
and
cdq
mov
ret
mov
mov
test
pop
movs
or
push
ret
and
hlt
arpl
and
add
inc
icebp
push
popa
test
(bad)
pop
push
mov
mov
adc
push
test
mov
ret
xchg
add
enter
add
xchg
rol
jo
loope
and
xor
and
sub
adc
inc
pop
out
mov
rol
adc
jle
pop
add
ret
jo
cmp
xor
scas
shl
add
and
les
inc
pusha
mov
and
(bad)
rol
dec
nop
ins
ret
arpl
add
shl
cmp
mov
pop
push
sub
inc
xor
(bad)
jo
cdq
inc
and
jo
addr16
xchg
and
add
and
adc
test
adc
mov
jg
pusha
dec
pop
or
inc
push
cld
mov
inc
add
push
add
dec
(bad)
sahf
pusha
retf
sub
ret
mov
push
jl
inc
and
or
ss
je
push
ffreep
pop
inc
inc
add
clc
aaa
cmp
and
shl
scas
pusha
add
push
fld
sub
nop
xor
mov
mov
aas
mov
das
mov
aaa
cs
jno
sub
mov
xchg
dec
xor
(bad)
mov
cmp
jecxz
aas
stos
hlt
mov
add
mov
cs
repnz
add
mov
pop
xor
mov
cmp
or
inc
aas
ins
ror
push
sub
adc
sub
adc
mov
inc
sbb
xchg
aas
dec
fmul
paddusw
nop
adc
ror
mov
or
and
mov
and
fcmovbe
andnps
jecxz
xor
ret
gs
or
jbe
sbb
push
pop
jo
iret
outs
push
call
push
push
xor
push
sbb
inc
pop
or
lock
sbb
ror
jb
(bad)
xor
mov
mov
pusha
mov
pusha
adc
test
and
or
je
add
add
cmp
pop
push
adc
push
xor
mov
pusha
or
mov
inc
xchg
nop
inc
or
add
das
cwde
adc
lods
mov
loop
add
popa
fadd
enter
loop
mov
fmul
cs
in
jbe
add
hlt
inc
add
add
mov
pop
or
add
mov
dec
adc
mov
or
mov
or
adc
add
call
loope
add
push
adc
fnsave
or
lock
movs
inc
or
in
inc
and
jl
sbb
adc
sbb
and
sahf
xor
dec
pop
ret
xor
pop
xor
jl
dec
ret
or
rcr
iret
and
outs
out
add
jno
xor
mov
add
inc
cmp
and
lock
xchg
addr16
cmps
cmp
add
push
mov
imul
imul
or
push
test
push
shl
dec
push
mov
xchg
inc
mov
inc
pushf
lock
and
je
or
or
mov
sub
test
sub
push
jne
cmp
jo
cmp
pop
in
xor
xor
add
ret
jb
stos
out
push
add
sbb
adc
inc
adc
jno
mov
pop
add
push
pusha
add
cwde
ror
lods
bound
push
sbb
and
xor
or
and
les
pop
and
pshufw
jae
outs
sub
or
jo
push
pop
cwde
inc
sub
or
xor
aaa
jl
or
xor
aad
pop
xchg
int
add
jo
xor
jl
xchg
and
pusha
mov
push
loopne
daa
adc
inc
clc
ja
(bad)
aad
and
dec
sbb
add
and
icebp
rcl
lock
pop
stos
dec
jne
add
or
add
or
xor
cs
push
test
or
jo
add
add
adc
test
xor
or
add
ror
jmp
add
sbb
nop
mov
add
cmp
mov
add
ror
and
mov
repnz
lock
loope
push
mov
xor
add
add
adc
adc
add
sub
out
test
adc
cli
add
add
in
rcr
stc
add
or
inc
sub
add
add
adc
add
or
mov
rol
or
adc
sbb
(bad)
(bad)
les
jae
inc
and
and
test
add
add
push
je
imul
and
call
add
xchg
inc
in
loope
push
mov
mov
inc
sub
ss
int3
sbb
dec
add
inc
and
sti
or
inc
adc
ror
call
add
movs
dec
and
bound
push
add
mov
(bad)
inc
repz
dec
adc
imul
sbb
adc
xchg
mov
(bad)
loop
mov
pop
sbb
add
in
adc
push
mov
jl
dec
push
jb
popa
and
or
and
ret
(bad)
and
mov
sbb
sbb
pop
adc
pop
jmp
xchg
adc
add
pop
pop
cmp
push
mov
in
inc
sbb
and
xor
in
pop
cmp
fsub
pop
jl
into
ror
inc
and
adc
sbb
adc
add
stc
add
or
inc
sub
add
add
adc
add
or
mov
rol
add
adc
ja
and
mov
dec
dec
push
dec
(bad)
push
xor
bound
test
out
test
mov
mov
jecxz
xchg
pop
into
push
jecxz
loop
ret
adc
add
dec
sub
int3
push
xor
fld1
xlat
das
mov
or
add
or
adc
pop
call
cmp
inc
push
sbb
ret
bound
dec
lea
add
and
dec
clc
jp
dec
cmp
or
dec
loopne
add
add
js
retf
aas
and
add
mov
inc
fadd
and
adc
in
mov
rol
fistp
adc
xor
imul
in
sti
imul
movs
xchg
aad
or
call
movs
fs
xlat
or
or
fsubr
jp
mov
sbb
cmc
or
cld
and
rol
push
ret
dec
adc
and
add
or
inc
sub
add
add
adc
add
or
mov
rol
or
adc
sbb
(bad)
(bad)
les
jae
inc
and
and
test
add
add
push
je
imul
and
call
add
xchg
inc
in
loope
push
mov
mov
inc
sub
ss
int3
sbb
dec
add
inc
and
sti
or
inc
adc
ror
call
add
movs
dec
and
bound
push
add
mov
(bad)
inc
repz
dec
adc
imul
sbb
adc
xchg
mov
(bad)
loop
mov
pop
sbb
add
in
adc
push
mov
jl
dec
push
jb
popa
and
or
and
ret
(bad)
and
mov
sbb
sbb
pop
adc
pop
jmp
xchg
adc
add
pop
pop
cmp
push
mov
in
inc
sbb
and
xor
in
pop
cmp
fsub
pop
jl
into
ror
inc
and
adc
sbb
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
adc
add
or
mov
rol
add
adc
ja
and
mov
dec
dec
push
dec
(bad)
push
xor
bound
test
out
test
mov
mov
jecxz
xchg
pop
into
push
jecxz
loop
ret
adc
add
dec
sub
int3
push
xor
fld1
xlat
das
mov
or
add
or
adc
pop
call
cmp
inc
push
sbb
ret
bound
dec
lea
add
and
dec
clc
jp
dec
cmp
or
dec
loopne
add
add
js
retf
aas
and
add
mov
inc
fadd
and
adc
in
mov
rol
fistp
adc
xor
imul
in
sti
imul
movs
xchg
aad
or
call
movs
fs
xlat
or
or
fsubr
jp
mov
sbb
cmc
or
cld
and
rol
push
ret
dec
adc
and
add
or
inc
sub
add
add
adc
add
or
mov
rol
or
adc
sbb
(bad)
(bad)
les
jae
inc
and
and
test
add
add
push
je
imul
and
call
add
xchg
inc
in
loope
push
mov
mov
inc
sub
ss
int3
sbb
dec
add
inc
and
sti
or
inc
adc
ror
call
add
movs
dec
and
bound
push
add
mov
(bad)
inc
repz
dec
adc
imul
sbb
adc
xchg
mov
(bad)
loop
mov
pop
sbb
add
in
adc
push
mov
jl
dec
push
jb
popa
and
or
and
ret
(bad)
and
mov
sbb
sbb
pop
adc
pop
jmp
xchg
adc
add
pop
pop
cmp
push
mov
in
inc
sbb
and
xor
in
pop
cmp
fsub
pop
jl
into
ror
inc
and
adc
sbb
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
adc
add
or
mov
rol
add
adc
ja
and
mov
dec
dec
push
dec
(bad)
push
xor
bound
test
out
test
mov
mov
jecxz
xchg
pop
into
push
jecxz
loop
ret
adc
add
dec
sub
int3
push
xor
fld1
xlat
das
mov
or
add
or
adc
pop
call
cmp
inc
push
sbb
ret
bound
dec
lea
add
and
dec
clc
jp
dec
cmp
or
dec
loopne
add
add
js
retf
aas
and
add
mov
inc
fadd
and
adc
in
mov
rol
fistp
adc
xor
imul
in
sti
imul
movs
xchg
aad
or
call
movs
fs
xlat
or
or
fsubr
jp
mov
sbb
cmc
or
cld
and
rol
push
ret
dec
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
adc
loopne
rol
rol
or
lgdtd
daa
add
add
popa
xor
sbb
inc
add
or
add
ins
je
add
daa
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
test
sti
mov
mov
psubd
repz
repnz
jmp
std
les
std
mov
dec
add
div
jecxz
(bad)
(bad)
es
popa
add
rol
pop
pop
pop
(bad)
std
add
leave
lods
(bad)
fild
std
rcl
arpl
xor
or
jne
addr16
bnd
cwde
add
je
call
neg
test
add
daa
daa
test
add
xlat
fmul
jge
aad
push
jp
js
xor
leave
sbb
fmulp
std
in
push
push
pop
pop
div
(bad)
dec
jne
in
mov
or
scas
and
and
dec
xor
(bad)
sbb
pop
into
pop
push
(bad)
(bad)
adc
inc
adc
add
add
shr
(bad)
leave
retf
jmp
call
mov
xlat
mov
add
inc
loop
add
or
mov
loope
add
test
aad
cmp
or
outs
push
(bad)
xchg
sub
out
(bad)
fimul
pop
cld
mov
mov
enter
mov
std
test
in
in
mov
inc
pop
(bad)
jmp
xor
dec
pop
mov
jmp
add
adc
call
add
retf
pushf
push
std
lds
in
hlt
int
xchg
mov
pop
lea
add
adc
mov
sub
xor
mov
pushf
add
mov
push
dec
ds
ror
adc
icebp
pop
test
fcmovnu
ficomp
daa
cmps
outs
or
in
(bad)
out
(bad)
call
scas
je
push
adc
out
cmp
cmp
clc
push
mov
xchg
mov
imul
and
inc
inc
inc
fmul
mov
in
mov
push
lock
or
stos
or
pop
add
test
ins
ins
ins
mov
fistp
stc
stos
add
adc
(bad)
xchg
repz
jb
(bad)
aam
push
push
pusha
repz
sti
lods
sbb
stos
or
mov
cmc
adc
jb
outs
outs
xchg
pop
adc
sahf
add
add
xor
shl
in
movs
or
and
jge
js
fisub
retf
int3
int3
out
in
out
dec
dec
dec
pop
pop
pop
call
pop
jge
sub
xor
femms
pminub
jne
jne
rcl
rcr
stos
add
popa
clc
movs
push
dec
dec
dec
clc
mov
mov
sbb
stos
pop
sbb
mov
lock
and
loope
cmp
loope
push
push
push
push
dec
dec
cli
cmps
add
rol
outs
xor
movs
movs
mov
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
lock
test
sbb
push
movs
lahf
mov
sbb
cmc
jmp
mov
fcmovu
dec
add
call
in
mov
mov
pop
movs
mov
dec
and
mov
arpl
push
cmp
data16
pop
adc
sbb
clc
mov
aas
inc
or
(bad)
push
mov
and
or
cmp
and
push
loope
call
sub
pop
test
cmp
push
push
sbb
dec
xchg
stos
mov
inc
clc
scas
mov
int
adc
add
push
xchg
dec
jno
shr
sbb
stos
retf
aas
push
add
inc
mov
add
movs
jne
mov
sub
enter
mov
xchg
lock
sbb
addr16
dec
xchg
or
adc
pop
adc
loope
je
push
xchg
or
and
int
test
jge
sbb
jmp
cmc
inc
push
adc
pop
aas
push
repnz
loope
fnstenv
pop
add
or
dec
add
push
jo
adc
jmp
push
cmp
add
movs
adc
fstp
lea
sub
push
mov
adc
jae
add
mov
ins
arpl
inc
cld
adc
or
stc
adc
mov
push
mov
jl
bound
adc
std
xor
dec
ds
or
loop
jmp
xor
movs
nop
mov
and
cmp
or
movs
xor
and
movs
pop
and
push
inc
ds
push
bound
mov
jp
loopne
shl
std
js
or
cmps
and
dec
cdq
adc
dec
add
adc
(bad)
pushf
lahf
pop
cmp
fist
lahf
ret
invd
add
push
mov
pop
mov
pop
and
adc
sti
push
push
and
rsm
sbb
xchg
mov
xchg
out
or
sbb
aaa
call
mov
pop
jecxz
aad
mov
pop
das
mov
and
mov
inc
adc
push
int3
mov
iret
and
adc
or
les
sbb
shl
add
jae
adc
mov
sub
or
pop
cmp
and
adc
or
and
jno
dec
pop
fimul
add
xor
dec
add
add
sbb
and
pop
lock
aas
dec
mov
test
jne
adc
ror
nop
mov
and
test
cmp
push
bound
loopne
xchg
dec
add
xchg
push
xchg
mov
sub
jo
cs
mov
fs
je
or
(bad)
ror
and
(bad)
sub
or
or
pop
xchg
push
add
jnp
das
fsub
ins
fmul
sbb
popf
sbb
pop
fdiv
xor
outs
pusha
ror
xor
adc
sub
shl
loopne
imul
scas
lods
lods
stos
pusha
inc
add
mov
fmul
popa
or
sar
(bad)
or
retf
popa
add
cmp
mov
xor
lock
or
test
dec
sbb
nop
retf
xchg
jl
sbb
push
test
aam
in
add
mov
xlat
outs
retf
sbb
nop
add
jle
jecxz
pop
ds
fadd
mov
stos
mov
push
call
das
adc
enter
test
pop
cld
loop
mov
or
add
push
add
push
jl
mov
ret
movs
imul
add
sbb
push
xor
push
mov
loope
sbb
inc
or
ss
and
and
xor
ss
and
inc
pop
sub
inc
jo
adc
sub
je
or
and
and
push
and
bound
pusha
js
adc
js
and
sbb
sbb
pop
mov
jecxz
sbb
bound
je
(bad)
cmp
adc
sub
add
int3
and
or
call
les
pop
pop
sbb
pop
xchg
enter
inc
test
aam
adc
jo
das
jl
xor
or
sbb
mov
add
nop
bound
mov
or
add
out
and
mov
and
sbb
xor
add
(bad)
or
adc
ins
test
or
lock
adc
and
and
fidiv
add
sub
cdq
into
cmp
xor
mov
movntps
inc
or
or
or
lock
das
pusha
inc
sub
xor
cmp
cmps
adc
xor
leave
inc
sbb
and
pop
rol
movs
inc
hlt
inc
mov
inc
xchg
sbb
sub
xor
push
into
mov
pop
aam
pop
adc
mov
adc
add
shl
or
push
dec
rcl
test
push
xchg
sub
sub
rol
adc
and
mov
pop
pusha
and
js
es
pushf
mov
xchg
cvtps2pi
push
add
push
sbb
ror
leave
jo
adc
pusha
adc
or
or
add
adc
mov
and
pop
push
adc
mov
icebp
xchg
out
outs
mov
mov
and
mov
or
pusha
pushf
mov
push
jbe
dec
sub
adc
add
cwde
pop
xor
or
dec
rol
sbb
add
mov
add
fsub
sahf
push
add
loopne
push
aam
imul
and
cmp
out
mov
scas
js
sbb
sub
add
mov
aaa
add
push
mov
inc
mov
or
pop
es
xchg
and
pop
cmps
icebp
inc
adc
lock
fstp
out
or
push
adc
push
inc
cmc
mov
movs
pusha
add
add
mov
pop
inc
xor
in
test
inc
xor
xor
mov
mov
add
sbb
inc
stos
retf
pusha
leave
rcl
mov
test
pop
push
push
adc
jp
mov
inc
cmp
add
loopne
push
rcr
cs
popa
leave
mov
push
adc
retf
inc
and
push
sbb
inc
mov
sbb
cmp
mov
call
or
add
lock
inc
rol
add
add
dec
popa
or
push
fimul
or
shl
and
mov
inc
push
adc
adc
push
pusha
mov
xor
or
and
add
or
inc
sub
add
add
or
add
or
mov
rol
push
sbb
xchg
pop
push
jns
stos
inc
(bad)
push
adc
lahf
sub
adc
stc
addr16
sar
outs
mov
in
lahf
aaa
sub
ins
mov
inc
pop
xor
cmp
mov
and
add
push
fist
sbb
pop
inc
dec
cmp
ins
push
add
scas
enter
or
add
push
sbb
xchg
ins
xor
out
xchg
pusha
test
hlt
mov
sar
into
push
bound
push
adc
outs
xchg
jge
lock
xor
mov
mov
cs
add
and
hlt
imul
clc
out
adc
push
not
ds
mov
dec
sub
inc
fild
xor
stos
les
pop
enter
jo
and
sbb
pop
mov
fdivr
cwde
mov
jmp
cmp
adc
cpuid
sbb
rol
leave
adc
push
call
push
xor
lods
push
loopne
add
xor
imul
les
or
or
and
xchg
sbb
call
les
mov
mov
mov
movs
inc
mov
inc
and
mov
xor
inc
inc
jg
add
and
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
les
sbb
hlt
setne
(bad)
out
xor
loop
lahf
lds
hlt
or
or
or
lods
sub
in
cdq
xchg
pop
pop
arpl
lea
into
add
mov
sub
in
(bad)
xchg
out
pusha
mov
call
in
pop
xchg
mov
add
test
in
jge
push
outs
pushf
mov
movs
push
test
ficom
pop
mov
or
pop
ds
mov
popa
cmps
sub
and
test
clc
and
mov
and
repnz
sbb
fiadd
addr16
or
nop
and
mov
mov
mov
pop
pop
test
fbstp
xor
mov
sub
mov
pop
inc
add
fld
mov
xor
lahf
pop
(bad)
sahf
std
push
imul
adc
push
sub
mov
das
sbb
adc
push
adc
mov
mov
inc
xor
push
lea
outs
inc
fist
inc
shl
and
hlt
mov
inc
ret
ss
jae
mov
test
sbb
mov
jecxz
add
icebp
movups
add
fadd
sbb
xor
mov
and
or
xchg
adc
adc
or
data16
nop
adc
and
dec
cwde
fs
cdq
add
push
pop
push
add
add
stc
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
inc
adc
adc
pop
test
adc
jle
and
pushf
imul
cmc
xor
fwait
lods
jg
adc
repnz
mov
call
jg
add
fneni(8087
ins
dec
xchg
add
sbb
aam
sub
call
sbb
push
arpl
sbb
mov
lods
push
ins
sub
dec
push
add
adc
addr16
test
dec
cmps
lods
push
rol
mov
sti
ss
call
leave
fiadd
add
leave
sbb
pushf
mov
cld
daa
iret
mov
ins
mov
outs
inc
add
inc
pusha
adc
dec
and
pop
add
push
xor
fdivr
mov
movs
inc
arpl
fs
sahf
in
sub
stc
pop
les
ds
mov
inc
ds
sub
je
pop
add
and
push
lods
cwde
lods
jge
add
fild
int
and
nop
inc
sub
adc
jb
jl
test
mov
jno
test
dec
fst
fist
adc
xchg
push
or
pop
adc
xchg
(bad)
or
rol
cmp
dec
pop
clc
xchg
in
push
add
and
(bad)
lock
or
inc
loopne
xor
jae
dec
std
hlt
push
lds
add
cs
xchg
fst
and
nop
add
cmp
fs
adc
dec
add
xchg
bound
bound
cld
add
xchg
pop
test
lods
imul
or
bound
out
or
fwait
jo
stc
sar
les
test
mov
xor
push
les
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
pop
push
mov
ret
xchg
or
inc
test
inc
mov
inc
repnz
sti
test
push
scas
xchg
pop
jle
adc
add
stc
repz
int
mov
call
in
ret
jge
or
xor
pop
cs
cmp
mov
sbb
pop
mov
inc
test
(bad)
cmp
cmp
xchg
stos
cmc
sar
shl
lahf
mov
xchg
daa
mov
aad
jo
sbb
clc
(bad)
popa
add
(bad)
mov
sar
inc
push
xor
jg
loop
sub
repnz
fst
add
mov
rol
stos
push
xchg
inc
nop
scas
rol
jb
inc
repnz
and
aad
je
adc
mov
fbld
dec
shl
rcr
mov
xor
sar
adc
imul
int
cmp
ds
hlt
mov
xchg
lods
sbb
sar
stos
mov
add
stc
daa
mov
adc
mov
inc
ds
std
das
or
cmc
(bad)
cmp
add
movs
mov
and
pop
add
enter
pop
sbb
loopne
push
pop
jne
add
pusha
mov
adc
add
call
mov
adc
ss
mov
and
xor
clc
pop
add
test
or
mov
add
add
pusha
add
aam
add
mov
adc
push
imul
movs
add
iret
add
movs
gs
sbb
pushf
test
adc
add
stc
add
or
inc
sub
add
sub
and
add
inc
dec
sbb
mov
rol
lock
dec
pushf
js
dec
mov
sbb
and
cld
in
or
jmp
jno
sub
enter
push
or
cld
push
xchg
xchg
inc
adc
pop
push
sub
scas
lahf
mov
stc
mov
dec
add
jmp
scas
pusha
rcr
sbb
dec
mov
xor
mov
cli
sbb
mov
or
inc
push
lods
sar
in
add
or
mov
xor
jg
fldenv
or
xchg
sub
fnstenv
adc
pop
dec
nop
repnz
sar
sub
(bad)
mov
test
cs
mov
jbe
pop
adc
popa
test
lods
mov
dec
jp
dec
inc
call
and
stos
inc
outs
aam
adc
or
mov
dec
rcl
pop
and
imul
shl
push
mov
add
and
xchg
inc
(bad)
test
aas
sti
pop
sbb
rcr
(bad)
std
and
pop
dec
push
cmp
fcom
add
add
and
xchg
enter
adc
rol
sub
add
jno
and
or
add
jg
lock
inc
std
xor
adc
and
add
or
inc
sub
add
sub
and
add
inc
dec
sbb
mov
rol
lock
test
mov
cmc
call
adc
cdq
xor
or
jl
call
repnz
and
and
jmp
dec
in
adc
shr
cmps
lods
and
pop
xchg
push
jle
dec
pusha
lods
pop
xor
cmp
pop
lods
sub
ror
mov
and
iret
pop
add
shr
out
inc
aas
mov
adc
mov
fwait
stos
sub
add
imul
inc
arpl
or
call
clc
or
cmps
test
and
mov
inc
retf
jmp
jo
test
nop
leave
fcmovbe
jb
xor
leave
mov
test
lods
mov
or
or
fld
js
add
dec
shl
inc
movs
xor
add
imul
icebp
dec
out
push
repz
sub
xchg
push
add
jge
pop
sub
in
dec
movs
ret
dec
cmp
inc
out
test
sbb
call
inc
les
jns
pop
nop
mov
cmps
call
push
dec
mov
inc
hlt
push
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
or
adc
adc
arpl
std
stos
and
adc
or
jmp
mov
retf
sub
add
test
ret
ds
cli
std
or
sub
les
jae
repnz
mov
and
adc
rcr
push
pop
cmp
repnz
adc
mov
movs
push
pop
push
cdq
sbb
ss
cmp
shl
mov
adc
adc
mov
push
mov
cld
clc
in
xchg
mov
xor
add
aaa
pop
mov
and
scas
pop
mov
mov
sbb
loop
aas
jns
test
pop
repz
int3
pop
jmp
call
or
(bad)
fld
dec
sahf
mov
and
icebp
(bad)
ja
lahf
mov
cli
push
lods
pop
add
into
jns
repnz
mov
test
shl
mov
adc
sub
js
in
test
(bad)
adc
fwait
test
add
sar
in
add
loope
add
or
cmp
loope
cmp
mov
pop
adc
fistp
mov
loop
data16
call
inc
les
add
mov
call
es
nop
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
aas
inc
ds
pop
enter
inc
push
push
neg
or
(bad)
mov
les
imul
add
ins
pop
stc
scas
lahf
sar
pop
mov
shl
sbb
push
outs
jmp
shl
jb
test
add
es
push
ins
and
daa
lahf
push
in
cmps
in
or
push
pop
sahf
sbb
shr
push
pop
xchg
mov
push
push
les
jno
call
clc
retf
sub
ret
adc
cmp
mov
mov
ret
sbb
inc
push
sub
cdq
sbb
or
sub
push
ret
or
or
mov
jno
add
repnz
test
xor
pop
adc
ins
adc
data16
mov
push
mov
jecxz
clc
cld
bound
pop
add
push
popa
push
mov
jmp
shl
in
push
add
cmps
sub
mov
into
inc
ds
cdq
inc
inc
or
rol
call
mov
add
nop
or
sbb
add
sbb
nop
push
add
mov
test
mov
dec
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
pusha
aas
pop
mov
mov
daa
inc
mov
pushf
sub
sbb
stos
inc
jno
mov
in
push
popa
mov
sub
mov
ss
dec
and
mov
jle
dec
push
fcmovb
push
and
call
pop
dec
jns
test
jmp
dec
loopne
xor
adc
sbb
cdq
outs
pusha
adc
cwde
rcl
sbb
and
loop
retf
or
ret
jle
adc
aad
mov
ds
and
rcl
sbb
shr
pop
sub
mov
sub
mov
inc
or
add
adc
loope
inc
into
popf
sub
pop
nop
pop
mov
add
jne
dec
sbb
shl
mov
in
sbb
jmp
mov
cmps
loopne
fild
add
mov
pop
retf
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
sbb
out
iret
ret
mov
and
mov
pop
aas
mov
sbb
loope
fstp
inc
pop
inc
stos
sbb
stos
or
pop
mov
fisubr
mov
fimul
fild
(bad)
or
ss
or
pop
push
ds
das
sbb
push
lods
pop
cmp
imul
shl
ret
pop
and
xchg
in
inc
or
(bad)
popf
sbb
loopne
cdq
sbb
adc
cmp
mov
or
xchg
call
cmp
or
js
add
xor
test
in
and
pop
ret
sub
dec
add
cmp
sar
iret
add
je
add
fwait
jo
push
inc
popf
jp
ja
movs
dec
cmp
mov
cwde
(bad)
clc
adc
xchg
xlat
fild
pop
mov
jp
jecxz
xchg
sti
pop
pop
inc
jnp
(bad)
mov
jg
je
fld
pusha
repz
or
pop
repnz
cmp
or
pop
sub
mov
xor
xor
or
daa
pushf
add
xchg
adc
es
test
mov
or
add
jns
nop
pop
adc
clc
push
jb
mov
inc
and
and
xor
fbstp
mov
adc
fadd
and
cmp
xor
and
inc
inc
mov
add
test
daa
daa
lock
adc
push
inc
fs
pop
stos
rol
add
push
movs
mov
xchg
int3
sub
sahf
inc
or
jns
jmp
les
daa
pop
xor
or
inc
mov
add
sbb
cld
arpl
xor
daa
xchg
pop
cmp
rol
(bad)
or
push
jno
push
iret
mov
dec
push
inc
xchg
inc
dec
pusha
add
xchg
pop
xchg
mov
push
lds
(bad)
sub
sbb
test
adc
cmp
gs
and
sar
rcr
cmp
fcmove
and
add
les
fs
nop
adc
cwde
popa
rol
lods
dec
add
add
loopne
out
mov
ror
add
lods
icebp
inc
xor
adc
sahf
mov
inc
ret
stos
or
inc
xchg
es
loop
add
mov
rol
lods
popa
inc
inc
movs
adc
dec
adc
inc
leave
or
pop
inc
loop
pusha
sub
(bad)
xor
dec
and
popa
loopne
inc
pop
lock
imul
adc
or
sbb
fisub
dec
popa
or
pop
mov
addr16
pop
test
mov
or
add
push
loop
nop
pusha
bound
xchg
shl
test
rcr
push
sub
pop
call
test
dec
pop
dec
or
inc
adc
add
pop
or
adc
sub
and
add
mov
int3
shl
dec
ds
dec
sar
push
pop
and
ret
pop
dec
xchg
rol
inc
icebp
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
dec
push
pusha
xchg
jg
or
pop
dec
mov
adc
(bad)
scas
pop
inc
xchg
stos
push
in
mov
ffreep
mov
cmp
dec
mov
mov
mov
jmp
lods
pop
je
jo
test
add
inc
xor
xor
xchg
xchg
adc
clc
mov
ins
and
int
sub
jbe
ror
add
mov
inc
and
mov
xchg
sub
jl
mov
cmp
push
jl
jae
push
xor
jb
sub
pop
push
inc
sahf
dec
mov
lds
stc
add
or
inc
sub
add
add
add
add
pop
add
or
mov
inc
inc
push
adc
cld
xchg
ret
xchg
and
dec
and
add
pop
fmul
xchg
jecxz
add
mov
shl
(bad)
cmp
test
push
push
inc
sub
and
sti
addr16
ja
mov
retf
popa
repnz
adc
add
stc
add
or
inc
sub
add
add
or
dec
sbb
iret
sbb
add
pop
enter
xchg
sub
out
and
inc
sbb
adc
dec
adc
xchg
adc
dec
test
call
dec
push
es
repnz
ror
mov
pop
loop
loopne
sbb
in
fcmovnb
ja
(bad)
sub
rol
aam
imul
pop
mov
add
stc
add
or
inc
sub
add
add
add
add
or
push
rol
adc
aam
push
mov
std
dec
mov
or
das
mov
push
das
push
(bad)
repz
lea
repz
test
cld
push
bound
push
mov
push
popa
ror
aas
jnp
or
sbb
pop
es
push
fisttp
movs
call
and
add
or
inc
sub
add
add
or
dec
sbb
outs
pop
aas
add
je
jo
rol
(bad)
std
mov
test
call
push
add
and
(bad)
jg
(bad)
adc
les
pop
add
std
jae
adc
dec
cli
pushf
pushf
sbb
stos
push
xor
sub
popf
add
xchg
inc
or
dec
and
stos
push
inc
or
add
stc
add
or
inc
sub
add
add
or
dec
sbb
outs
push
xchg
jg
push
call
mov
or
cs
(bad)
push
adc
inc
and
cmp
pop
sbb
inc
std
mov
icebp
pop
push
das
outs
call
lea
hlt
push
loope
into
jg
xor
or
fist
popf
inc
dec
adc
shl
inc
mov
adc
inc
adc
xchg
test
stos
xlat
jg
je
sbb
pop
aas
add
add
stc
add
or
inc
sub
add
add
or
jmp
inc
ins
push
jmp
inc
nop
shl
test
(bad)
imul
sub
test
test
mov
ret
test
add
and
int3
fs
xor
mov
mov
push
aaa
imul
sbb
inc
add
les
add
stc
add
or
inc
sub
add
add
add
add
or
dec
xor
mov
inc
push
push
adc
xor
outs
loope
or
sti
mov
sub
lahf
mov
dec
(bad)
mov
aas
and
repnz
pop
shl
xlat
and
in
mov
mov
sub
add
mov
movs
jg
add
and
add
or
inc
sub
add
add
add
add
or
call
ret
fistp
mov
or
inc
test
and
fisttp
mov
shl
call
sbb
cmp
xor
cmp
sbb
rcl
lea
mov
dec
std
stos
pop
add
jno
pop
icebp
das
and
and
add
or
inc
sub
add
add
add
add
std
inc
and
jb
in
push
in
push
test
xor
push
mov
add
mov
jne
cmp
cmp
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
and
adc
mov
lds
enter
pop
pop
sbb
movs
leave
xchg
mov
mov
xchg
xchg
push
xchg
and
test
jae
add
js
dec
cdq
and
or
dec
nop
ret
or
and
aam
sbb
ror
pop
and
xchg
sub
adc
retf
push
xor
and
jmp
dec
test
add
or
push
cmp
out
or
loopne
xor
(bad)
(bad)
dec
push
xor
leave
push
xor
inc
dec
pop
xor
test
push
dec
xchg
sub
inc
repz
cmps
dec
dec
data16
imul
sub
sub
movs
call
ins
enter
mov
mov
call
and
sbb
inc
mov
inc
mov
xor
add
and
ja
call
rcr
(bad)
inc
xor
popf
jnp
add
stos
pop
enter
movs
pop
mov
test
std
adc
lock
add
add
adc
inc
fcomp
retf
adc
dec
or
lds
rol
pop
je
add
sbb
pop
sbb
fdiv
(bad)
lods
lock
push
cmp
les
or
enter
push
int
and
or
inc
xor
rcpps
inc
sbb
repz
add
or
les
nop
retf
(bad)
push
sub
fwait
add
sub
add
adc
(bad)
shr
(bad)
or
xor
lahf
test
repnz
push
inc
inc
or
mov
enter
jl
add
inc
add
test
rol
adc
sub
ret
jb
sbb
ret
adc
sar
shl
fwait
xchg
(bad)
call
mov
ret
mov
xchg
add
mov
push
nop
xor
cmp
mov
add
inc
mov
push
daa
xchg
xchg
or
add
adc
add
add
xor
stos
inc
push
pop
mov
and
cwde
rol
xchg
push
add
pop
(bad)
cmp
add
adc
xchg
(bad)
add
nop
push
add
adc
les
push
clc
rol
or
test
or
loope
sbb
and
aad
mov
jno
dec
ror
psubusw
movntps
pop
adc
xchg
mov
pop
add
or
pop
or
icebp
adc
or
fcomp
pop
adc
(bad)
push
or
xor
scas
inc
mov
adc
and
add
or
inc
sub
add
add
or
add
cld
imul
loopne
inc
mov
and
mov
test
vpackssdw
or
add
stc
add
or
inc
sub
add
add
or
inc
nop
adc
jo
sti
xchg
cli
(bad)
and
push
sub
mov
aas
ins
add
add
stc
add
or
inc
sub
add
add
add
add
movs
clc
inc
adc
or
push
(bad)
xchg
rol
(bad)
mov
add
and
add
or
inc
sub
add
add
or
dec
sbb
out
dec
adc
or
or
xchg
cmp
mov
fmul
mov
fwait
mov
mov
and
xchg
add
test
test
nop
mov
add
xchg
mov
adc
inc
sbb
mov
inc
lahf
or
icebp
adc
pop
sub
add
and
add
or
inc
sub
add
add
add
add
or
dec
sbb
push
mov
and
clc
sub
or
or
dec
inc
sub
scas
mov
out
inc
add
out
inc
dec
adc
fcom
imul
scas
cld
(bad)
mov
mov
add
jl
mov
mov
retf
ret
aas
pushf
inc
mov
(bad)
mov
hlt
outs
retf
shl
in
push
and
dec
jge
adc
imul
fistp
stc
add
or
inc
sub
add
add
or
dec
sbb
lock
sub
xchg
adc
enter
sub
out
fist
imul
pop
movs
add
enter
add
adc
inc
jmp
or
jecxz
or
retf
out
cmps
inc
mov
sbb
sub
call
test
mov
push
push
in
xchg
jg
push
cld
fwait
sub
(bad)
iret
and
stc
add
or
inc
sub
add
add
add
add
or
lock
cld
movs
mov
ret
xchg
or
push
jno
lds
jp
mov
loope
sbb
cmps
push
repnz
test
dec
push
cmp
inc
fadd
pop
dec
dec
add
add
aas
xchg
add
adc
inc
mov
and
push
push
mov
sbb
inc
fistp
nop
jg
or
adc
pusha
sub
cmp
push
sbb
retf
jbe
dec
mov
add
and
add
or
inc
sub
add
add
or
dec
mov
aas
jnp
or
daa
out
pop
mov
repnz
loop
jg
cmps
movs
leave
test
mov
inc
ds
sub
ja
add
ins
inc
rcl
push
jge
sub
cld
xlat
outs
sar
stc
out
sbb
adc
adc
jne
cmp
nop
push
lahf
add
nop
aad
jns
mov
add
popa
mov
dec
add
retf
xchg
lock
fld
or
adc
add
add
dec
add
sbb
add
add
add
popa
xor
sbb
inc
add
add
add
add
sbb
add
inc
cmp
popa
inc
add
add
inc
(bad)
cli
imul
daa
sti
(bad)
std
xchg
push
add
test
mov
(bad)
jmp
sti
cmps
mov
add
add
repnz
sub
jmp
std
into
ss
fcom
(bad)
adc
test
rol
ror
xchg
dec
add
jecxz
out
mov
cmps
addr16
mov
fild
cwde
jg
(bad)
mov
(bad)
inc
(bad)
dec
call
std
rcl
ja
idiv
shl
fsubr
cld
aam
arpl
out
aad
(bad)
adc
ret
xor
lock
add
(bad)
push
mov
pop
ror
mov
jmp
xchg
mov
add
cli
push
fwait
std
mov
pushf
test
(bad)
cmp
cwde
add
xchg
add
pop
(bad)
stc
add
cmps
pop
mov
or
xchg
add
mov
cmps
jne
stos
inc
add
mul
(bad)
push
(bad)
(bad)
fdivr
std
mov
mov
sti
cmps
add
pop
int
test
stos
add
(bad)
inc
mov
loope
add
loop
(bad)
inc
in
mov
jmp
mov
retf
sub
scas
cld
out
xlat
out
neg
repz
lods
xchg
mov
lds
(bad)
cld
int3
leave
cmps
pop
(bad)
mov
icebp
in
in
retf
mov
ror
lds
pushf
(bad)
and
push
ror
mov
sub
xlat
jno
int
lahf
loopne
sbb
fcmovu
shl
movs
mov
jne
mov
add
ret
cwde
mov
xchg
(bad)
xchg
clc
fnstcw
rol
loope
repnz
push
dec
or
xlat
sbb
ret
mov
mov
jecxz
push
dec
sub
xchg
jo
stos
test
ret
pop
icebp
lock
hlt
repnz
loopne
add
fs
les
int3
mov
scas
push
(bad)
aad
ret
scas
test
scas
outs
mov
add
loope
inc
or
les
xchg
sbb
fiadd
mov
or
retf
rol
cdq
push
mov
(bad)
jmp
and
adc
rcr
repz
mov
pop
hlt
jmp
push
cmc
pop
add
and
test
lock
out
idiv
cmc
loope
mov
retf
jmp
add
idiv
mov
hlt
ret
jl
(bad)
clc
push
icebp
mov
stc
test
cli
hlt
sub
jmp
iret
aad
loopne
mov
clc
hlt
push
ret
mov
mov
xchg
hlt
jbe
hlt
clc
stc
test
test
cwde
scas
popf
data16
in
xchg
icebp
out
loopne
daa
stc
cli
cli
in
aad
cmc
lock
push
stc
mov
fdivr
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
push
add
add
add
add
aaa
add
or
add
or
mov
rol
xchg
mov
test
xor
sbb
sbb
xor
add
push
pop
mov
sub
imul
jbe
sbb
loope
push
nop
and
or
add
dec
stos
sbb
shl
push
or
movs
gs
int
add
push
jns
retf
xchg
and
jb
add
dec
fidiv
cmps
push
shl
jmp
mov
movs
dec
outs
mov
sub
adc
xchg
and
loope
push
mov
push
inc
inc
addr16
std
xchg
(bad)
loopne
test
shl
arpl
mov
sbb
mov
mov
shl
xor
inc
sbb
test
cmp
mov
rol
adc
push
cmp
aas
dec
dec
or
push
xor
cs
inc
cmp
icebp
adc
sub
mov
jnp
dec
xor
les
jne
inc
data16
and
(bad)
push
or
add
in
loopne
cmp
or
pop
loopne
pop
cmp
cmp
mov
push
or
ret
add
adc
loope
pop
mov
sbb
hlt
ss
out
icebp
bound
je
in
imul
mov
or
ret
xchg
scas
in
inc
inc
adc
add
or
jge
shl
dec
xor
adc
sbb
add
jmp
add
movs
out
xchg
mov
clc
xor
sahf
mov
sub
inc
or
sub
test
add
inc
sub
push
adc
jmp
ins
jecxz
icebp
push
pop
bound
sbb
add
or
adc
aaa
fwait
mov
imul
cmps
push
inc
pop
mov
lods
mov
xchg
jge
loop
dec
sub
add
ret
xchg
push
add
and
push
ret
jl
or
hlt
xor
add
or
mov
or
fsub
into
js
or
or
adc
mov
xchg
add
es
sbb
or
jo
inc
inc
or
inc
cmp
outs
add
adc
add
jl
dec
and
ins
wbinvd
cmovae
int
xchg
add
lahf
add
xor
add
or
or
jl
xchg
push
mov
jo
jae
in
dec
(bad)
add
or
mov
inc
inc
aaa
test
add
or
inc
addr16
ficomp
add
jno
inc
fcom
inc
mov
mov
inc
ret
xor
mov
xchg
nop
mov
inc
jo
scas
mov
fldenv
pop
hlt
fidiv
inc
fimul
adc
ror
repnz
sbb
or
pop
jae
(bad)
inc
movs
scas
jne
and
mov
or
jo
push
push
fwait
and
add
out
sub
clc
adc
or
or
cmp
(bad)
outs
add
in
daa
dec
xor
or
mov
or
jbe
pop
fdiv
push
(bad)
repnz
mov
(bad)
jp
cmp
ror
add
push
add
add
push
add
add
pop
pop
int
jne
scas
xor
pop
aaa
es
pop
mov
rcr
call
cmp
inc
or
movs
das
sub
add
pop
jno
fisub
or
ret
lds
or
daa
cmp
add
ficom
inc
rol
adc
sub
inc
das
mov
pop
test
xor
push
cmp
xor
icebp
or
xor
or
mov
sbb
push
(bad)
shl
and
push
xchg
bound
arpl
stc
ror
mov
adc
and
ficom
inc
lds
xor
sub
push
jno
mov
lea
int3
pop
sbb
mov
ret
xor
pusha
or
imul
or
mov
add
xchg
fcmovb
mov
or
sbb
rol
les
cld
push
inc
dec
(bad)
dec
(bad)
xchg
lods
cwde
add
mov
pop
(bad)
mov
adc
pusha
add
cmps
adc
xor
dec
pusha
xor
push
add
sub
pop
nop
add
jp
or
mov
cwde
loopne
jge
cmp
dec
add
or
dec
cmc
sbb
mov
mov
add
jo
and
inc
sbb
test
add
add
aaa
jmp
or
mov
pop
leave
ror
add
mov
test
or
xor
ss
add
nop
test
or
adc
rol
cwde
inc
push
xchg
test
or
ret
adc
push
jne
aam
clc
add
inc
call
inc
(bad)
fadd
mov
ins
movs
push
fst
add
rol
xor
add
rcl
imul
adc
pop
or
ss
mov
mov
xchg
imul
mov
ins
and
adc
push
xchg
add
dec
pusha
(bad)
or
add
cwde
and
mov
call
leave
push
and
mov
mov
and
mov
add
pop
inc
xor
or
pusha
push
mov
add
add
add
add
or
lea
push
dec
shufps
xor
mov
test
or
jl
add
pusha
inc
cmp
adc
push
xor
pop
sbb
and
add
call
or
jo
and
push
pop
xchg
pusha
mov
sub
sbb
jo
push
jmp
(bad)
mov
mov
(bad)
or
or
add
hlt
mov
sbb
add
adc
loopne
scas
or
or
enter
or
inc
ror
inc
lds
cmp
add
lock
cs
popa
clc
fisubr
xor
adc
sub
add
push
add
and
inc
bound
inc
mov
push
sub
and
(bad)
add
adc
cmp
mov
cmp
sysexit
fadd
sub
add
pop
test
sub
or
mov
add
or
rol
inc
ds
sub
jo
xchg
add
mov
mov
add
and
add
scas
jle
or
and
fild
inc
and
ret
cmp
sbb
stos
add
add
or
jle
rol
ins
adc
and
sbb
add
or
add
xor
fadd
lods
pop
pop
mov
mov
inc
adc
dec
loop
push
cmp
fs
push
add
xchg
cmp
add
inc
and
add
fxch
shr
or
pusha
lds
mov
cmp
jg
lds
(bad)
int
sub
or
test
xor
inc
pop
test
clc
loopne
add
add
add
int3
pop
adc
pop
gs
mov
inc
adc
mov
add
sbb
rcl
pop
push
jge
les
jmp
test
sar
adc
sbb
add
sub
add
and
push
jo
rcl
or
adc
shl
cmps
hlt
mov
scas
ret
rcl
add
and
ror
pushf
dec
adc
in
mov
les
push
mov
xor
sbb
jno
call
or
shl
sahf
hlt
or
inc
dec
adc
arpl
mov
hlt
and
loop
mov
lods
inc
les
add
and
push
cmp
or
mov
mov
dec
add
and
(bad)
fadd
and
add
and
pop
cld
xor
sbb
into
push
pop
inc
jl
test
or
inc
adc
adc
test
and
stos
test
test
or
jle
popa
pop
cdq
nop
cmp
add
aam
add
pop
adc
add
jo
aaa
push
jbe
add
rol
push
add
nop
or
cmp
cmp
dec
add
cmp
or
add
or
xchg
push
stc
in
cdq
adc
add
stc
add
adc
inc
sub
add
add
or
add
or
mov
rol
nop
mov
push
adc
pop
push
fdivp
shl
push
add
add
inc
mov
xor
aas
push
lahf
sbb
fs
and
ret
adc
(bad)
and
dec
add
cmp
inc
sbb
xor
sbb
shl
xor
add
dec
movlps
dec
push
pop
cmp
add
sub
dec
and
jae
add
(bad)
clc
shl
sub
pusha
add
test
mov
pushf
inc
imul
and
shl
add
jmp
int3
nop
mov
mov
xor
test
xchg
add
in
neg
xchg
cld
dec
ret
lahf
fcomp
mov
adc
sub
movs
adc
or
or
cmp
test
inc
xor
imul
ret
pop
inc
outs
shl
fptan
pop
cmp
dec
adc
nop
push
pop
mov
sbb
pop
adc
leave
sbb
add
mov
je
or
inc
push
or
retf
int3
and
or
shr
enter
dec
js
jl
pop
mov
mov
(bad)
js
cmp
icebp
push
pop
inc
pop
ret
push
sbb
mov
sbb
adc
adc
aas
ds
js
sbb
or
dec
rol
or
inc
pop
and
sbb
mov
les
xchg
add
sub
cs
jle
iret
sbb
or
cmp
or
(bad)
sbb
adc
xor
mov
or
pop
jl
jb
or
rcl
das
xchg
lods
add
mov
pop
or
mov
add
loopne
add
adc
(bad)
shr
pushf
mov
add
pusha
cmp
test
and
or
iret
add
cmp
sub
inc
pop
sub
adc
int
mov
popf
call
retf
adc
(bad)
retf
sbb
or
dec
xor
sub
in
and
or
nop
lea
mov
add
add
popa
sub
je
rol
or
and
and
mov
stos
call
xor
cmp
add
icebp
(bad)
(bad)
xchg
ret
cmp
xchg
sbb
test
adc
shl
xor
loopne
add
cmp
mov
leave
retf
pop
xchg
push
inc
daa
dec
adc
xor
dec
nop
ret
(bad)
and
(bad)
cmp
adc
ins
inc
add
stc
add
adc
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
pop
push
gs
xchg
and
or
mov
clc
inc
mov
add
scas
inc
push
dec
sub
repz
sub
das
pop
inc
adc
add
repnz
fs
adc
dec
add
push
dec
xchg
dec
adc
test
xor
aam
xchg
cmp
(bad)
hlt
aam
xchg
cdq
inc
sbb
inc
mov
push
sbb
jno
rol
dec
push
loopne
rol
fcom
xchg
mov
or
cmp
mov
icebp
sldt
add
shr
add
pop
cmp
stos
push
std
(bad)
adc
mov
sub
mov
or
xor
push
test
sub
xchg
xchg
shl
out
pminsw
push
xor
pop
addr16
adc
test
call
adc
push
into
mov
js
push
fsub
(bad)
add
test
inc
add
push
or
add
sbb
rol
and
add
repz
test
add
cmp
sbb
push
sbb
ja
loopne
test
or
add
adc
xchg
lock
loope
push
adc
sbb
dec
push
fistp
fld
pop
inc
mov
adc
repz
or
cld
ror
loopne
dec
sub
jo
test
inc
test
sbb
push
push
push
adc
push
cmp
or
mov
rol
adc
cmp
add
or
xor
sbb
sbb
test
cmp
dec
push
int3
push
mov
sub
adc
or
rcl
add
xchg
push
push
inc
or
or
adc
mov
xor
jmp
unpckhps
popa
daa
adc
cmp
adc
ror
jnp
ror
test
push
pop
add
mov
inc
pushf
mov
ficom
inc
inc
je
cmp
test
mov
fimul
adc
add
int3
fs
adc
les
mov
cmp
cmp
or
je
push
sbb
add
(bad)
les
mov
daa
ss
mov
add
add
adc
sub
inc
mov
pop
repnz
into
pop
xor
scas
add
pop
or
fist
rcl
or
add
in
pusha
cmp
cwde
adc
or
rcl
push
aad
mov
or
xchg
inc
add
retf
cdq
(bad)
aas
cmp
add
adc
push
jecxz
cmp
or
cmp
sub
fild
mov
inc
pushf
or
add
dec
push
jo
mov
fadd
sbb
movs
mov
stos
and
add
dec
xor
in
adc
xor
int3
jae
cmp
mov
xchg
ret
add
lock
push
dec
clc
add
or
movs
jo
dec
pop
popa
fwait
or
or
stos
dec
adc
nop
adc
add
ja
scas
sub
rol
and
add
add
fild
lea
push
inc
icebp
push
popa
test
add
jae
sub
mov
sub
fs
inc
or
pop
xchg
pusha
or
movs
sbb
inc
adc
cmp
push
mov
les
stos
rol
and
(bad)
lea
dec
pusha
mov
aam
pop
outs
push
add
shl
je
inc
pop
jbe
sbb
bound
mov
shl
rol
rcl
sbb
or
mov
mov
adc
mov
xor
rol
pusha
les
cmp
test
aam
pop
mov
inc
sub
mov
jl
add
dec
pusha
dec
mov
sub
or
add
mov
or
or
es
push
lods
loop
adc
inc
cmp
xchg
ins
lods
and
sub
lock
inc
adc
popa
sub
ret
mov
inc
pop
pushf
rol
xor
or
add
add
lds
add
and
push
into
mov
adc
add
(bad)
leave
adc
fadd
or
pop
mov
and
jo
sub
mov
aas
cwde
adc
sbb
ror
pusha
add
or
add
add
lock
fcomip
xchg
cmp
loope
xchg
pop
cmps
and
sub
pop
add
adc
clc
inc
sbb
pop
(bad)
cmp
rol
stos
mov
xchg
inc
adc
lock
adc
add
or
mov
or
adc
jb
movs
adc
push
and
push
add
adc
or
push
nop
add
(bad)
pop
mov
add
xor
je
rcr
add
test
nop
sub
inc
daa
mov
add
dec
and
pop
dec
rol
mov
mov
mov
daa
in
pusha
add
mov
add
ror
cmc
adc
icebp
call
cmps
adc
cmp
test
xor
rol
pop
xlat
rcl
push
and
fild
adc
ret
and
xchg
push
add
mov
adc
add
mov
add
and
push
adc
add
or
add
scas
aad
pop
das
nop
add
rcl
loopne
adc
pusha
test
mov
cmp
(bad)
adc
mov
or
and
add
stc
add
adc
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
and
sub
lds
sbb
int3
std
xor
ror
pop
pop
adc
sub
inc
movs
push
dec
adc
in
enter
cdq
inc
or
sbb
sbb
jnp
rcr
sub
pop
dec
add
cdq
pop
inc
mov
push
sub
jne
xchg
mov
(bad)
es
and
(bad)
cld
sub
xor
xor
arpl
dec
dec
dec
es
sbb
dec
and
adc
or
enter
pop
sub
cld
iret
ffreep
adc
inc
repnz
xchg
inc
push
test
fwait
add
and
xchg
push
jg
sub
sub
mov
add
call
and
cmp
in
movs
or
and
or
xor
ins
repnz
add
pop
push
add
enter
or
mov
inc
leave
jns
xchg
jo
retf
or
or
ror
mov
jb
add
push
pop
and
pop
add
sub
pop
mov
rcr
hlt
enter
shl
mov
sbb
add
dec
cld
jo
or
xchg
inc
cmp
inc
xchg
sbb
ror
cmp
inc
or
add
pop
or
fs
or
adc
rol
ins
inc
adc
sub
inc
xchg
fst
sbb
rol
ins
ror
adc
cmp
or
inc
add
mov
pop
push
enter
rol
cs
(bad)
aas
cmp
icebp
nop
or
(bad)
retf
or
mov
xor
mov
xor
jecxz
adc
add
pop
and
sub
sqrtps
ret
cld
mov
pushf
sbb
or
add
rol
sub
or
sub
loope
in
iret
pop
sar
and
add
repnz
fs
dec
xchg
inc
mov
xchg
ror
mov
pop
inc
xor
inc
cmp
pop
cdq
push
rcl
aas
mov
retf
push
addr16
inc
add
mov
adc
leave
and
jno
sub
add
mov
xor
ret
cmp
jo
push
pop
sbb
add
add
and
cmp
nop
bound
or
jmp
jo
mov
cmp
sbb
adc
jne
mov
das
xchg
add
inc
xchg
pushf
adc
das
mov
adc
loop
les
or
inc
out
neg
inc
(bad)
cvtdq2ps
xor
inc
sub
cld
pop
adc
sub
add
add
pop
add
repnz
cs
mov
in
imul
inc
dec
les
inc
xchg
ins
add
or
push
sub
add
add
pop
adc
add
cmp
popa
adc
sub
dec
adc
leave
and
add
rcr
pop
push
mov
scas
jg
or
mov
mov
rol
cmp
add
rol
rcr
rol
or
out
pop
(bad)
pop
cmc
sub
add
cmp
adc
sbb
add
or
push
xor
xor
loopne
inc
enter
mov
inc
cmp
xchg
add
push
adc
sbb
lds
or
or
loope
(bad)
cmp
add
pusha
add
sbb
xor
inc
inc
xor
sbb
mov
inc
add
or
(bad)
pop
xchg
sbb
mov
adc
bound
(bad)
loope
imul
sub
sbb
mov
adc
sahf
retf
or
adc
out
cmp
jl
or
cmp
enter
add
push
test
inc
push
rol
rol
call
add
test
and
mov
mov
std
arpl
daa
cwde
shr
mov
adc
lock
enter
jl
dec
test
xchg
and
inc
add
mov
dec
out
adc
adc
inc
or
add
and
adc
mov
rol
or
sbb
xor
mov
pop
xchg
or
sbb
or
and
add
xchg
add
add
add
add
or
add
or
xor
xchg
adc
ret
xor
std
jnp
nop
pusha
es
mov
cli
imul
and
enter
adc
ss
in
int3
enter
jmp
and
adc
jno
mov
lds
scas
push
icebp
jecxz
outs
add
cmp
dec
dec
sub
loop
fsubr
loope
mov
add
push
mov
inc
inc
jg
push
std
mov
das
sub
push
mov
cld
cmp
or
inc
jmp
add
hlt
ins
ret
mov
and
push
hlt
(bad)
jns
or
into
les
pop
rcl
aaa
rcr
sub
cwde
(bad)
mov
or
or
push
outs
push
(bad)
push
inc
jns
test
mov
out
(bad)
lods
popf
aad
and
popf
fwait
cmp
or
add
add
loopne
rol
rol
or
lgdtd
push
add
add
popa
xor
sbb
inc
add
out
add
ins
je
add
adc
inc
cmp
popa
xor
xor
idiv
add
add
pop
mov
push
jns
push
dec
adc
leave
add
sub
mov
(bad)
dec
mov
in
ret
or
mov
std
ret
add
ja
(bad)
(bad)
sbb
xchg
(bad)
call
aam
add
(bad)
adc
jmp
(bad)
mov
retf
xchg
add
enter
add
add
cli
add
lock
add
xchg
add
repnz
sti
test
out
repz
jmp
fld
fcmove
mov
jae
iret
lods
xor
test
into
scas
(bad)
jmp
(bad)
cld
push
xchg
(bad)
loopne
enter
stc
cdq
(bad)
std
mov
ret
movs
(bad)
(bad)
sub
inc
(bad)
stc
test
inc
mov
std
test
(bad)
jp
jmp
or
(bad)
and
ficomp
dec
push
clts
add
lods
add
(bad)
(bad)
(bad)
cmc
or
push
add
and
push
ins
(bad)
rol
(bad)
in
(bad)
aam
in
add
int3
retf
not
dec
(bad)
stos
add
mov
movs
jnp
(bad)
out
pop
mov
or
push
or
cld
cwde
dec
xor
or
repnz
retf
sbb
aam
cld
ret
or
call
or
(bad)
(bad)
(bad)
mov
retf
cmps
ja
call
sbb
mov
aam
push
(bad)
call
std
mov
ret
jmp
pop
mov
aas
stc
mov
idiv
clc
(bad)
repz
xchg
(bad)
call
mov
outs
cld
out
int
and
fadd
mov
push
ds
mov
scas
movs
xor
hlt
stc
loopne
outs
repz
clc
test
std
rcl
pusha
sub
mov
mov
pop
out
mov
mov
sbb
mov
(bad)
scas
push
(bad)
out
push
stc
mov
xchg
loop
push
fcom
iret
(bad)
jecxz
(bad)
stc
or
scas
xchg
rol
xor
stc
std
push
pop
jecxz
adc
not
jne
add
fnstsw
cmp
out
fidiv
repz
adc
out
or
add
mov
add
sub
out
add
loop
(bad)
icebp
push
std
test
repz
stc
mov
(bad)
mov
or
loopne
(bad)
cmps
test
jmp
(bad)
(bad)
sti
enter
(bad)
out
repnz
cli
fiadd
jmp
pop
sbb
(bad)
adc
in
mov
out
shr
clc
out
stc
lock
or
xchg
das
push
add
arpl
fsubp
jmp
and
push
push
sub
cmp
test
sub
stc
iret
add
out
adc
fisubr
dec
xor
cmc
in
pop
mov
add
pop
mov
add
in
mov
pop
repnz
cld
loop
stc
repz
add
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
nop
mov
add
faddp
jne
push
inc
cmp
test
xchg
cmps
bound
sub
call
(bad)
hlt
jmp
lds
xchg
cmp
and
dec
mov
jmp
or
inc
daa
es
retf
(bad)
sbb
or
cmps
adc
call
sti
in
dec
mov
or
xlat
pusha
add
les
inc
or
mov
mov
popf
mov
and
add
clc
je
xchg
adc
sub
and
inc
push
and
mov
dec
push
pop
jnp
pop
add
add
pop
scas
jbe
push
lea
xchg
rcr
xchg
retf
repnz
jno
test
cdq
mov
mov
add
mov
pop
mov
mov
scas
daa
call
mov
xchg
ins
fmul
std
test
loopne
pop
(bad)
xor
aad
cmp
(bad)
in
daa
pusha
popf
and
ins
call
test
dec
sahf
cmp
or
(bad)
mov
or
inc
sbb
add
les
adc
lahf
push
cmps
fdiv
das
cs
loopne
xchg
or
adc
icebp
mov
(bad)
adc
test
xor
push
or
pushf
repz
in
je
push
pop
int3
and
cmp
xchg
jo
add
fs
inc
add
adc
cmp
xchg
xchg
and
sub
adc
leave
cmp
cmp
mov
pushf
loopne
or
push
add
or
or
mov
mov
mov
je
dec
and
jo
pop
mov
inc
ret
cmp
mov
push
cmp
push
dec
ret
add
popf
or
and
inc
or
push
out
adc
inc
mov
or
inc
sub
jmp
dec
push
adc
sbb
jmp
xchg
inc
and
rcl
out
test
call
ret
mov
in
dec
sbb
sbb
xchg
ret
mov
dec
aam
ins
sub
push
shr
les
sbb
rcl
xchg
and
and
mov
fcmovu
cdq
dec
add
inc
lock
sbb
xchg
sbb
mov
(bad)
icebp
sar
or
jmp
jo
or
rol
add
add
mov
ret
or
out
push
mov
adc
mov
mov
xor
or
jns
es
add
adc
aaa
rol
inc
sbb
outs
or
mov
adc
xor
xor
lds
repnz
jae
pop
xchg
and
cmp
xor
add
mov
jns
sbb
push
mov
sahf
cwde
mov
(bad)
inc
pop
sbb
xor
cmp
mov
push
sbb
inc
cmp
sbb
add
sbb
push
jge
(bad)
js
pop
add
pop
(bad)
mov
rol
add
shr
xchg
jmp
aad
xlat
jl
cwde
xchg
jns
(bad)
xchg
adc
in
mov
pusha
ret
adc
je
adc
ss
jp
sbb
adc
icebp
fst
iret
fwait
repz
sbb
mov
dec
rol
pusha
mov
push
xchg
or
push
les
mov
in
push
mov
cld
ins
nop
pop
dec
pop
or
nop
test
imul
xor
pop
test
add
les
jne
stos
(bad)
jmp
sbb
inc
mov
add
sub
rol
add
add
popf
add
and
js
pop
push
lock
adc
add
sbb
adc
shl
add
pop
inc
and
ds
sub
jo
push
adc
sbb
sub
xor
jo
mov
and
sbb
(bad)
adc
jb
add
pop
mov
adc
lock
fdivp
inc
adc
sbb
mov
add
push
test
loopne
adc
xrelease
add
enter
push
push
sub
jecxz
inc
enter
and
add
pop
adc
mov
pop
mov
rol
jo
and
hlt
add
add
ror
jl
shr
ror
ds
rcr
jo
sbb
mov
lea
ret
inc
adc
push
dec
add
je
add
or
mov
aaa
lock
movd
int3
pop
or
add
inc
or
push
cmp
pusha
add
add
mov
and
(bad)
mov
pusha
sbb
or
cmps
cmp
push
sub
outs
sbb
or
dec
adc
call
sub
rcr
and
cmp
add
mov
add
enter
add
add
jnp
aaa
add
adc
enter
jno
and
nop
inc
xor
and
pop
bound
sbb
push
push
dec
loope
adc
pop
frstor
push
mov
loope
or
popa
sub
cmp
or
or
(bad)
xor
pop
or
add
in
xor
pop
add
cmp
pop
pop
mov
adc
inc
add
adc
or
pop
ficom
or
xor
add
push
push
mov
shr
aaa
jl
add
clc
jecxz
fdiv
aad
popa
repnz
push
or
or
sbb
sbb
add
cwde
sub
rol
call
push
into
data16
rol
hlt
pusha
(bad)
loopne
or
add
sbb
adc
jno
cmp
add
int3
sbb
mov
inc
iret
adc
daa
add
adc
rol
xor
movs
and
mov
pushf
xchg
mov
inc
xor
sub
xchg
add
add
inc
lds
pop
rol
mov
mov
jp
ss
or
pop
loope
arpl
sbb
xchg
inc
add
cmp
inc
es
and
inc
mov
mov
lods
and
enter
add
frstor
ret
jp
mov
cmp
test
je
sbb
add
xor
or
and
push
add
add
fsub
sub
rol
inc
das
jp
mov
xchg
(bad)
sub
xor
inc
aas
pushf
loopne
std
cli
inc
adc
rol
aaa
call
inc
pop
push
mov
inc
and
ins
outs
xor
add
loopne
stc
or
jo
aas
mov
and
adc
or
pop
cmp
and
mov
cwde
or
mov
pop
mov
ins
and
xor
jo
add
movs
dec
fadd
adc
inc
jecxz
inc
add
mov
inc
aaa
aas
push
mov
add
mov
movs
push
or
and
jl
inc
adc
add
xor
mov
call
lds
add
mov
stc
and
add
retf
inc
lock
rol
push
sbb
add
cmp
or
add
stc
add
or
inc
sub
add
add
or
add
or
mov
inc
cmp
outs
fnstenv
popa
inc
push
scas
pop
or
mov
aam
and
push
mov
rol
and
ds
pushf
jne
pop
enter
or
(bad)
test
push
sub
cmp
ja
xchg
cmp
jmp
(bad)
popf
sbb
iret
add
or
xchg
jle
cli
rcr
push
(bad)
xchg
fdiv
push
and
mov
(bad)
xchg
sub
stos
js
std
out
enter
xor
mov
outs
enter
hlt
jle
cmc
xchg
xchg
add
and
sbb
sbb
into
and
and
pop
mov
jno
sub
shr
xor
add
pop
sub
ins
mov
jne
cli
scas
pop
ret
adc
or
mov
adc
add
cmp
(bad)
icebp
sbb
add
aas
call
sub
jne
cmp
(bad)
fdiv
add
gs
push
(bad)
out
aam
and
popf
add
dec
push
pop
jno
in
mov
and
add
or
mov
inc
dec
add
fstp
add
inc
mov
dec
rcr
iret
jl
nop
and
or
jl
add
mov
ror
mov
outs
inc
inc
int
cmp
aam
inc
and
sbb
mov
adc
pop
xor
inc
je
or
test
test
or
jl
or
mov
inc
adc
or
xchg
loopne
or
mov
ins
repnz
push
and
add
adc
rcl
lock
inc
mov
xchg
mov
xchg
nop
mov
into
adc
dec
inc
jg
rol
add
add
iret
mov
xor
aad
mov
push
ins
shl
sbb
sbb
verw
mov
push
inc
sbb
mov
jecxz
es
in
(bad)
push
mov
sbb
pop
sbb
loope
aas
adc
cmp
(bad)
rol
sub
adc
adc
push
(bad)
ret
or
mov
mov
ins
je
mov
inc
rdpmc
add
xchg
sbb
add
xor
or
jmp
xor
mov
call
fiadd
add
ret
mov
call
and
call
add
adc
rcl
jo
ror
push
mov
mov
push
cdq
aam
mov
mov
and
mov
adc
pushf
jo
into
and
xor
cmp
pop
rol
aas
xchg
popa
ror
cmp
adc
outs
in
xchg
cmps
test
or
cwde
lods
adc
xlat
add
sbb
xor
xchg
adc
jns
dec
inc
nop
pusha
sbb
dec
adc
and
mov
or
pop
sub
les
pop
mov
lods
add
or
ins
dec
pop
in
or
pop
add
and
inc
adc
fld
adc
mov
mov
push
dec
or
dec
nop
lds
push
fadd
add
cdq
add
pop
add
cld
adc
ret
dec
jns
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
inc
add
mov
or
xchg
mov
aaa
pushf
adc
ret
(bad)
iret
push
mov
adc
aas
push
cmp
jecxz
das
or
or
adc
lds
aad
add
adc
push
sbb
inc
hlt
lahf
sbb
mov
cmp
lea
push
inc
mov
mov
aas
add
xchg
mov
enter
sar
push
les
mov
xchg
lds
loopne
call
xor
test
rol
inc
push
push
fadd
shl
fadd
call
dec
inc
mov
dec
mov
or
jmp
(bad)
mov
sbb
rol
add
dec
add
mov
mov
push
pop
sbb
cdq
sbb
enter
add
les
ss
push
xor
pushf
fcom
and
lds
push
in
rcl
popf
sbb
(bad)
or
add
ret
das
mov
in
or
adc
dec
adc
mov
inc
iret
pop
and
jo
int3
ds
rol
add
loope
inc
add
jmp
or
arpl
arpl
mov
je
pop
push
add
push
pop
pop
popf
dec
rol
dec
mov
xchg
loopne
or
ins
loopne
push
sub
mov
scas
je
push
and
dec
inc
(bad)
(bad)
add
adc
xchg
inc
cmp
mov
add
sbb
or
rcl
or
and
cmp
add
dec
lea
cld
xchg
dec
sbb
add
adc
xchg
inc
sub
rol
sub
rcl
xor
mov
aas
xchg
xchg
dec
add
sbb
cwde
add
call
test
ret
sbb
out
adc
lds
jmp
add
mov
je
es
mov
push
les
sbb
mov
adc
push
sub
push
sbb
push
xor
lods
xchg
rcr
pusha
ror
add
push
push
or
(bad)
mov
mov
hlt
xor
dec
in
loope
adc
lock
and
push
jmp
ret
and
mov
add
adc
stos
and
xor
xor
sbb
add
enter
mov
mov
adc
cmp
cvtpi2ps
jl
cmp
ret
adc
nop
or
cmp
mov
and
aaa
add
inc
or
call
sbb
packsswb
mov
xor
inc
fs
and
ins
in
add
add
push
and
push
dec
add
arpl
rol
and
cld
inc
verr
pop
std
mov
xor
aas
sbb
adc
imul
adc
ins
pusha
rol
pusha
cld
ret
inc
inc
xor
xchg
les
nop
outs
rol
dec
add
mov
sub
es
test
add
adc
inc
push
jl
nop
leave
aas
fld
loopne
(bad)
aas
or
adc
in
dec
cmps
add
add
and
add
or
inc
sub
add
add
or
add
or
mov
inc
cmp
outs
fnstenv
loope
push
scas
pop
or
mov
imul
pop
add
sub
nop
addr16
or
cmp
pcmpgtb
and
ret
pop
dec
adc
cmp
pop
cli
popf
jecxz
loopne
fwait
xchg
add
add
add
icebp
movs
fistp
adc
jg
ss
arpl
xchg
ror
cld
jecxz
retf
pop
push
xlat
and
sbb
sub
movs
in
add
mov
xor
pop
push
pushf
push
inc
mov
dec
mov
jmp
jno
mov
out
add
mov
inc
int
xor
xor
xchg
adc
clc
add
adc
xchg
jge
mov
(bad)
adc
inc
enter
jne
pop
xor
sbb
mov
clts
dec
inc
ins
add
adc
call
clc
cmp
jno
inc
dec
dec
jl
jl
inc
out
add
outs
sub
test
or
nop
js
(bad)
sbb
push
xor
mov
or
cs
ret
or
xchg
lea
and
cmc
cld
xor
or
retf
dec
or
push
adc
arpl
fst
test
mov
out
add
or
push
sub
inc
dec
sbb
sub
bnd
bound
inc
mov
loopne
sar
sbb
or
fcom
mov
in
loopne
pop
push
loopne
or
std
nop
inc
push
and
icebp
mov
adc
mov
loop
scas
mov
clc
jecxz
inc
cmp
xchg
sbb
aas
dec
and
lock
xor
push
test
or
test
retf
cmp
and
and
mov
loope
adc
add
lea
stc
add
push
dec
loopne
adc
inc
push
shr
mov
scas
adc
sar
aam
push
popa
inc
ret
or
and
unpcklps
mov
rol
sub
add
and
ret
sub
mov
cmps
sub
loopne
out
mov
adc
add
loop
ret
pop
or
or
sbb
scas
xchg
dec
xor
and
inc
shr
ror
xchg
ss
sub
pop
or
push
xor
rol
es
ror
add
mov
jb
adc
outs
add
bound
sbb
sbb
cmp
shl
sbb
aas
ret
xchg
or
dec
pop
je
sub
adc
xchg
xor
or
pushf
xchg
inc
push
test
add
push
xor
popa
or
sub
add
es
push
in
loopne
adc
pop
pop
xor
sbb
in
add
test
push
sub
xor
sub
rol
cmp
push
mov
add
sbb
sbb
inc
push
pop
sbb
add
int
arpl
add
and
adc
add
pop
push
add
shl
mov
add
add
add
add
add
dec
add
add
add
add
popa
xor
sbb
inc
add
mov
add
ins
je
add
dec
inc
cmp
popa
inc
add
idiv
add
lods
mov
add
popa
or
xchg
lods
xchg
mov
(bad)
stc
nop
cmps
add
(bad)
gs
mov
std
(bad)
loop
aad
dec
add
aam
lods
enter
xor
(bad)
sbb
xor
cmps
or
jo
js
daa
cmp
scas
add
repnz
repz
(bad)
and
jmp
xchg
fcmovb
sar
cs
push
push
(bad)
jmp
scas
(bad)
inc
xor
pop
loopne
add
and
xor
or
andps
retf
mov
fcmove
mov
test
rcl
fisttp
push
jno
or
fwait
outs
stos
arpl
in
push
stos
aam
movs
out
sub
pop
ins
mov
(bad)
dec
xor
paddusw
out
arpl
(bad)
loope
cmp
jecxz
sub
jmp
and
ja
push
dec
push
push
dec
xchg
bound
(bad)
(bad)
(bad)
sub
cld
in
(bad)
(bad)
dec
popf
mov
hlt
hlt
fbld
int3
or
js
adc
repz
cmps
add
add
push
clc
add
adc
lds
retf
mov
and
dec
(bad)
sub
or
push
jo
aad
xor
fucomip
fisub
sub
xor
mov
(bad)
mov
fsub
push
jns
adc
mov
(bad)
cli
rcr
(bad)
std
out
std
fidiv
(bad)
sbb
retf
sbb
pop
sub
arpl
push
fs
inc
test
mov
inc
jle
(bad)
jmp
test
cmc
out
or
in
icebp
xchg
fidiv
lock
(bad)
faddp
bound
hlt
sti
std
jne
adc
cmps
add
daa
hlt
in
out
mov
and
call
mov
frstor
(bad)
fxch
movs
lods
cs
mov
jne
jp
daa
dec
mov
(bad)
call
icebp
std
repz
or
shl
(bad)
clc
fisub
or
jmp
(bad)
(bad)
pshufw
(bad)
(bad)
push
add
xchg
pushf
add
out
jno
sbb
jmp
repnz
std
(bad)
int
idiv
stc
lods
add
div
sbb
mov
fcomi
(bad)
ret
sbb
mov
mov
adc
fmulp
iret
cwde
inc
into
int
(bad)
repnz
icebp
or
fwait
adc
test
rcl
jge
sbb
(bad)
ret
cld
cld
cld
mov
sub
clc
cld
or
sbb
or
loopne
ds
push
shl
mov
or
lods
or
test
rol
mov
loopne
inc
cmp
mov
sub
sbb
push
arpl
sub
cld
mov
repnz
add
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
xor
inc
sub
add
add
xor
add
inc
std
or
mov
rol
mov
ret
xchg
add
inc
test
jne
and
inc
popa
inc
cmp
call
xchg
sub
and
xor
mov
mov
mov
add
push
or
adc
(bad)
mov
rcr
popf
mov
addr16
add
and
jno
adc
push
xchg
mov
dec
dec
retf
shl
mov
inc
push
daa
xor
inc
lea
gs
or
shl
pop
mov
add
out
inc
xor
aaa
iret
cmps
aaa
outs
mov
lock
stos
jns
arpl
cmp
sbb
xor
lock
lahf
sbb
(bad)
in
pushf
daa
ucomiss
inc
and
mov
push
cmp
mov
jge
mov
mov
jle
gs
jecxz
jp
das
and
popa
xchg
scas
lods
push
(bad)
cmp
sbb
cmp
imul
add
fldcw
sti
call
adc
shl
inc
add
and
in
inc
sub
cmp
push
ret
mov
dec
pop
xchg
loopne
(bad)
mov
pop
cmp
ins
xchg
rol
outs
jge
pop
js
or
or
rdtsc
hlt
inc
cdq
mov
lods
rol
icebp
fst
dec
push
or
push
clc
xchg
and
shl
push
call
dec
cmp
nop
mov
sbb
jle
mov
push
loope
push
test
jno
adc
mov
and
inc
jo
mov
adc
add
shl
sbb
ins
add
dec
test
test
lahf
gs
and
sub
pusha
push
mov
mov
mov
mov
popa
outs
sbb
js
mov
cdq
jmp
jmp
mov
mov
call
cmps
test
enter
mov
add
movs
jne
push
shl
test
add
enter
inc
(bad)
sbb
mov
sub
mov
adc
sbb
sub
cmp
inc
adc
or
or
mov
gs
dec
bound
and
mov
add
rol
inc
and
mov
sub
add
and
mov
sbb
jno
sub
sub
xchg
cs
fiadd
dec
or
ret
(bad)
xor
add
mov
shl
add
inc
std
xor
mov
ror
add
sbb
jp
and
(bad)
dec
sbb
into
sub
push
jae
adc
inc
pop
aaa
retf
pop
mov
idiv
xchg
mov
pop
sbb
cmp
in
add
inc
add
or
push
add
ror
shl
and
and
xor
out
outs
inc
xor
in
test
mov
test
add
add
std
lods
mov
daa
jecxz
shl
das
pop
inc
ss
sub
je
icebp
jl
test
adc
mov
das
dec
cwde
pusha
repz
mov
inc
xchg
sub
mov
rol
cmp
gs
adc
mov
cld
jmp
adc
fdivr
add
sbb
adc
and
sbb
(bad)
mov
xchg
mov
repnz
mov
jo
inc
push
nop
xor
jl
add
add
int3
sbb
xor
pop
sbb
bound
rol
jo
cmps
or
pushf
xchg
test
or
loope
sbb
mov
add
inc
or
sbb
dec
mov
or
je
mov
mov
or
mov
push
add
test
out
popa
add
xchg
(bad)
xchg
xor
xor
pop
adc
pop
lds
add
inc
rol
inc
into
pusha
(bad)
rol
dec
loopne
maskmovq
test
call
push
lea
xchg
mov
sub
add
jmp
pop
cld
pop
adc
scas
adc
or
out
das
or
push
rcr
(bad)
dec
ins
lock
mov
(bad)
or
shl
xor
or
inc
add
and
data16
or
sbb
test
es
xor
and
call
dec
mov
add
add
out
push
add
mov
add
retf
dec
je
sbb
adc
dec
lock
add
retf
dec
push
test
ins
clc
and
div
dec
mov
and
pop
retf
pusha
add
jl
add
icebp
dec
outs
jo
daa
es
adc
sbb
in
add
jl
inc
adc
imul
add
adc
lea
nop
add
or
add
inc
sbb
and
ret
repnz
sbb
xchg
mov
nop
push
adc
xor
ror
pusha
xor
enter
pusha
loope
out
test
cmp
or
sbb
adc
xchg
sub
fidiv
cmp
fimul
pop
mov
ss
push
jb
mov
(bad)
fadd
sub
aam
add
ret
push
dec
fsub
sbb
je
sub
add
mov
cmp
cmp
arpl
fadd
adc
mov
jg
(bad)
or
mov
test
sti
fld
lods
jge
sahf
(bad)
nop
loope
call
push
add
inc
movs
loopne
and
ret
int
or
or
mov
push
loope
mov
or
lock
ja
imul
call
test
fsubr
inc
cwde
ror
fs
sbb
push
or
cmp
lds
or
and
and
sbb
retf
xor
and
add
inc
sbb
pop
inc
je
ret
test
xor
nop
xor
or
pop
xchg
cmp
cmp
adc
ja
inc
add
inc
mov
add
dec
ror
dec
je
xchg
mov
in
xlat
das
or
xchg
(bad)
xchg
push
ret
cmp
or
or
xchg
dec
add
sub
push
adc
or
push
add
int3
out
xchg
add
inc
add
mov
add
shr
and
jno
jae
pop
ret
add
and
xor
add
(bad)
mov
pop
nop
add
and
add
or
inc
sub
add
add
add
add
or
ins
mov
call
push
dec
sbb
sub
aas
imul
call
cmp
adc
lods
pop
mov
fsubr
push
xor
cmp
push
sub
arpl
jecxz
adc
mov
fsubr
pop
inc
xchg
xor
pusha
mov
retf
mov
xchg
fld
dec
pop
push
mov
push
imul
test
dec
or
and
in
xor
ror
mov
and
aam
xor
popa
sbb
push
in
xchg
sub
ss
add
adc
(bad)
gs
leave
xor
mov
aas
sar
sub
dec
pop
xor
daa
xor
pop
xor
or
xor
bnd
in
and
loopne
add
lds
sub
fmul
aas
and
or
xchg
fidivr
pusha
or
push
movs
or
in
or
loope
cs
call
fisttp
pop
cmp
adc
mov
clc
add
add
or
add
push
clc
jno
cs
loop
xchg
xchg
bound
xor
fadd
sub
call
adc
add
call
cmp
add
add
add
(bad)
xor
movs
cs
leave
adc
cmp
inc
cmp
lods
mov
sbb
adc
inc
add
pop
dec
sub
xchg
add
or
shr
sbb
sub
pop
retf
sbb
pusha
mov
push
fnop
pop
mov
xchg
mov
jno
or
sar
loopne
pop
jne
lods
rol
pop
xchg
cmps
cwde
mov
push
test
sbb
loopne
jo
fdiv
inc
xor
lods
mov
add
sub
sub
rcl
jo
fs
xor
fadd
push
fs
jae
lahf
mov
or
in
add
sar
ins
inc
sbb
xor
mov
and
add
or
inc
sub
add
add
or
add
or
mov
inc
cmp
sbb
enter
and
push
je
adc
cmp
icebp
das
inc
mov
add
into
fisub
adc
cmp
pop
mov
xor
sub
(bad)
popa
(bad)
std
(bad)
xor
inc
inc
pop
cli
icebp
push
xchg
mov
xchg
add
lods
jno
push
xchg
jno
imul
pushf
cmp
sub
dec
mov
stos
fiadd
add
lock
mov
pop
adc
rol
pop
push
mov
sbb
add
cld
rol
test
mov
lods
mov
leave
or
rol
pop
sub
fdivr
dec
adc
sub
mov
sbb
pusha
mov
push
xchg
shl
inc
and
xchg
ret
sub
out
xor
xor
data16
out
loopne
dec
out
cwde
inc
repz
pusha
add
cmp
addr16
or
adc
aas
sub
jl
loopne
or
les
push
push
test
sub
pop
loop
outs
(bad)
mov
or
inc
nop
mov
dec
or
push
inc
add
jmp
dec
les
xchg
adc
add
frstor
ret
pushf
rol
test
dec
sub
jb
mov
ficom
or
inc
add
adc
adc
loopne
and
lea
pusha
adc
add
aas
ja
js
xor
dec
repnz
adc
sub
mov
rol
ret
das
push
and
(bad)
lock
call
fdiv
inc
or
mov
cmps
or
repz
sbb
setge
and
inc
call
nop
cdq
test
mov
cmps
mov
cdq
xor
cmp
out
pop
fcom
sub
loop
(bad)
sub
ins
fidiv
sub
clc
rol
int3
aas
(bad)
es
nop
add
push
imul
inc
and
sub
cmps
fiadd
mov
inc
lds
xor
aas
shl
jp
daa
cmps
or
mov
mov
or
adc
cmp
adc
inc
inc
pop
cmp
add
out
or
add
sub
sbb
ret
cdq
cmps
ror
ss
aas
dec
cld
arpl
int3
mov
cmp
jbe
and
xchg
in
fld
adc
mov
sub
sbb
inc
shl
test
xchg
inc
test
lds
add
pop
ja
sar
and
push
cmp
sub
xchg
xchg
ja
push
adc
push
fwait
jns
les
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
mov
ret
xchg
add
adc
push
mov
adc
cld
cmps
adc
add
test
rcl
std
shl
adc
dec
call
data16
inc
repz
or
fs
sbb
or
xchg
call
adc
or
cmc
add
mov
les
out
shl
sbb
jge
stos
pop
scas
pop
push
int
retf
jmp
inc
call
aas
dec
cmp
adc
call
add
loopne
xchg
or
add
rcr
jns
jne
mov
scas
or
jnp
mov
sbb
xchg
add
add
cmp
(bad)
mov
cmp
mov
sbb
mov
jp
rcl
pop
push
neg
(bad)
fnstenv
add
js
pop
loopne
xchg
lods
and
jno
cmp
pop
add
inc
or
dec
daa
imul
xchg
xchg
sub
lahf
jp
lods
xor
cmp
dec
in
or
mov
fwait
ins
outs
or
lds
add
aas
jae
hlt
fiadd
pop
add
push
and
add
sar
je
add
dec
xor
clc
iret
add
adc
inc
push
test
add
bound
dec
sbb
aaa
jb
data16
pusha
loopne
sbb
leave
or
dec
add
or
or
int3
cmp
std
adc
dec
lods
dec
push
pop
xchg
cmp
cdq
ins
mov
mov
add
and
nop
and
xchg
jmp
les
sbb
and
mov
adc
movs
mov
jmp
xor
hlt
adc
push
xor
cmp
dec
sub
add
lea
mov
js
inc
aas
std
mov
aam
inc
pop
das
sub
addr16
pusha
cmp
or
cld
push
inc
add
adc
or
shr
inc
(bad)
ror
repnz
jae
and
sub
iret
cmp
sbb
inc
rol
inc
jo
dec
and
repnz
cmp
dec
lock
adc
(bad)
mov
loope
add
xor
dec
and
jecxz
push
mov
add
jp
or
or
adc
add
mov
or
lods
lock
cmp
dec
cmp
fsubrp
les
add
in
or
or
mov
add
mov
sbb
sbb
adc
xchg
repnz
pop
aam
pop
add
call
inc
sub
add
or
mov
add
pusha
mov
fstp
pusha
add
call
xor
fist
dec
rol
(bad)
fwait
or
(bad)
aas
add
jae
or
stc
add
push
outs
cmp
and
aas
call
mov
aas
sbb
push
int3
aas
mov
int3
mov
inc
cmp
lds
sbb
repz
add
nop
xlat
pop
sti
rcr
(bad)
call
pushf
mov
mov
stc
inc
lahf
fild
outs
les
inc
out
sahf
mov
test
xor
add
add
sub
dec
pusha
add
scas
push
cmp
jbe
inc
lahf
sub
and
fcomp
adc
and
add
and
mov
pop
or
mov
or
or
sub
sbb
ret
mov
js
jno
cmp
xchg
push
sbb
add
adc
and
out
pop
push
lock
jno
push
mov
mov
push
add
dec
jno
add
push
sar
xor
call
idiv
xchg
or
sub
imul
cmp
and
cmp
and
or
sete
pop
sub
adc
add
mov
dec
push
push
or
sbb
sbb
or
inc
shl
sti
(bad)
xor
scas
ja
popa
sbb
rol
sub
add
jecxz
jae
add
and
inc
mov
xor
or
jns
push
aam
and
les
mov
mov
mov
pop
pop
nop
(bad)
ja
arpl
rol
aam
test
jo
push
int3
adc
cmp
(bad)
daa
pop
ret
mov
leave
imul
sbb
add
or
adc
(bad)
sbb
les
or
pop
call
fdivrp
xchg
pop
nop
retf
and
mov
pop
add
and
sbb
bound
or
add
sbb
call
sub
movs
or
fadd
cmp
loope
adc
xchg
enter
mov
inc
pushw
mov
movhps
dec
pusha
data16
ror
or
or
cmp
adc
adc
clc
test
inc
adc
mov
es
rol
xor
and
rcl
test
and
enter
loop
pop
jo
add
sbb
rsm
push
les
inc
adc
push
dec
aad
push
cmp
xchg
sub
cmp
add
push
inc
or
ret
shr
jo
add
add
mov
mov
adc
pop
adc
adc
mov
add
test
sahf
ret
int
dec
repz
pop
jmp
add
es
ins
aas
xchg
push
add
enter
inc
cs
stos
add
cmp
pop
mov
cmp
add
fimul
fld
sub
pop
jns
inc
or
lea
add
add
or
push
or
sbb
or
inc
mov
aas
add
mov
nop
xchg
jno
push
inc
dec
gs
add
add
pusha
inc
add
rcr
add
push
and
cmp
sub
add
cmp
daa
clc
rol
bound
pusha
xor
add
int3
pop
sbb
sbb
(bad)
mov
jbe
sub
adc
mov
jle
sub
dec
rol
and
test
retf
inc
sbb
test
jns
daa
inc
call
sub
and
ja
add
pop
cmp
pop
push
call
xchg
pop
adc
add
jo
xor
mov
add
cld
add
adc
cmp
mov
je
add
call
xchg
jp
xchg
nop
inc
push
xchg
sbb
dec
repz
sbb
nop
jo
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
push
jo
rol
add
pushf
sbb
push
dec
jmp
or
jbe
sbb
xor
or
jmp
sbb
mov
inc
and
push
in
fiadd
es
add
loopne
retf
ret
mov
and
rcl
sbb
xor
push
xchg
sahf
ds
push
mov
dec
sbb
xchg
daa
sbb
sbb
aad
mov
xchg
pusha
push
inc
jbe
cld
shl
outs
xchg
or
popf
clc
shl
mov
rcr
shr
and
addr16
cmp
jp
push
inc
add
out
adc
xor
cmps
sbb
cmp
mov
and
movs
pop
xchg
ins
sahf
data16
push
inc
xlat
push
loop
xor
xor
jb
cs
js
xchg
add
sbb
inc
ror
in
and
push
or
sbb
cmp
jb
or
lods
push
adc
inc
inc
(bad)
aad
jmp
add
sbb
cld
pop
repnz
enter
jge
add
add
cmp
lock
pop
jae
lods
mov
push
mov
das
cld
and
inc
or
adc
inc
add
and
popa
push
pop
push
add
push
ds
bndldx
ins
and
add
and
sbb
int3
rcr
cmc
or
mov
cld
or
mov
sbb
and
push
iret
aas
dec
push
es
jl
pop
and
pop
mov
dec
add
or
adc
sub
ins
adc
test
aas
xor
je
pop
mov
push
aam
aam
js
add
adc
enter
and
sub
add
cmp
or
jne
push
sbb
jmp
pusha
(bad)
and
and
test
and
or
fdivr
arpl
push
sbb
cmp
repnz
and
mov
ror
mov
das
hlt
rol
sbb
cli
xchg
adc
or
dec
push
inc
pmuludq
mov
and
add
cld
outs
ss
mov
mov
or
push
jp
cli
push
add
add
add
cmp
lods
ror
inc
xchg
mov
or
xchg
push
xchg
sub
aaa
out
adc
and
dec
es
mov
int3
push
stos
sub
or
add
and
add
cld
mov
mov
push
dec
cmp
sbb
rol
mov
sub
sbb
push
push
inc
xor
add
inc
je
mov
sbb
jmp
ror
and
jmp
pusha
add
daa
push
jecxz
dec
clc
jecxz
add
pushf
xor
add
mov
shr
sahf
aaa
inc
sbb
std
rol
sbb
push
push
pop
ds
push
es
add
or
mov
sub
ds
xor
sub
inc
cmp
xchg
cli
(bad)
add
jl
ret
in
pop
push
or
jne
shl
add
popa
adc
add
and
(bad)
test
push
call
sbb
push
cmps
lods
cwde
or
shr
or
adc
ror
xor
and
and
rcr
mov
xchg
jo
pop
jnp
fistp
push
test
mov
fcmovnu
inc
mov
sbb
(bad)
adc
xchg
call
adc
add
aam
cdq
push
or
and
adc
inc
pop
mov
sar
mov
jecxz
sbb
fmul
mov
pop
icebp
mov
rol
mov
mov
loopne
(bad)
xor
or
cwde
xor
or
dec
jl
aas
test
pop
cmp
sbb
adc
sbb
and
loope
dec
mov
enter
adc
mov
sbb
xor
push
test
xor
adc
std
and
(bad)
mov
fwait
pop
shr
(bad)
aaa
and
push
push
pushf
loopne
ja
sbb
fadd
adc
and
jecxz
xchg
mov
jle
mov
jo
add
xchg
sub
add
xor
jge
jecxz
inc
adc
or
and
and
shl
adc
or
xor
push
inc
sbb
out
inc
mov
loop
jmp
sahf
inc
mov
add
cmp
and
ret
call
inc
cmp
or
inc
mov
push
loop
jmp
cmp
sahf
mov
add
sbb
lea
sbb
mov
lock
adc
or
adc
add
mov
cmp
and
data16
xor
inc
jo
cmp
loope
outs
mov
pop
fisub
aas
add
or
js
sbb
adc
sbb
shld
popa
push
call
jecxz
mov
dec
dec
ss
and
pop
shr
adc
cs
pop
push
xchg
push
push
mov
(bad)
arpl
cmc
pop
push
and
rdtsc
rol
cli
jno
jl
add
xor
inc
les
and
push
ins
dec
sbb
sbb
inc
movs
int
inc
or
sbb
repnz
jle
je
out
push
add
xor
cmp
jnp
lods
inc
sbb
push
or
add
in
xor
mov
sbb
and
out
repnz
cmp
jno
rcl
and
jmp
mov
test
cmp
xchg
or
movs
lods
jecxz
lods
and
pusha
loope
pop
loopne
adc
popa
test
out
aaa
mov
icebp
ret
lds
(bad)
mov
sbb
cld
ror
or
cmp
loopne
add
jo
sbb
pop
adc
sub
and
jo
aas
mov
and
js
sbb
test
sbb
aas
div
push
call
ret
fadd
repnz
enter
adc
xor
sbb
xchg
sbb
gs
or
(bad)
mov
adc
js
das
jp
gs
les
add
loop
pop
and
pop
pop
push
add
sbb
add
retf
aas
push
add
loopne
pop
fadd
stos
dec
repz
jge
aam
cmp
sbb
adc
rcl
adc
jbe
or
popf
add
adc
ret
into
push
mov
mov
movs
imul
stos
and
sub
and
jnp
pop
dec
push
jmp
lock
adc
add
mov
ror
dec
sub
and
test
rol
stos
push
xor
imul
add
inc
adc
push
ja
mov
push
in
add
add
nop
xchg
adc
jg
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
lock
xor
adc
push
xor
sub
xchg
pop
add
dec
pop
dec
mov
lock
shl
adc
xor
xor
(bad)
in
inc
repz
or
cmp
cmp
dec
ss
pusha
add
sub
ret
jnp
adc
push
and
xlat
adc
rcr
xor
xchg
test
cli
mov
and
call
dec
inc
call
mov
lahf
and
pop
icebp
out
mov
rol
cwde
popa
xchg
mov
pop
add
pop
rcr
inc
leave
les
dec
jns
fwait
aaa
mov
jns
and
out
sbb
mov
dec
sar
cld
inc
jnp
ret
xchg
jo
sub
inc
cmp
or
jbe
xor
fnsave
jmp
mov
jmp
(bad)
mov
icebp
pop
adc
ret
mov
pusha
pop
ret
cmp
push
cmp
add
or
dec
and
call
cvtpi2ps
push
and
inc
scas
icebp
mov
sub
test
push
and
nop
push
add
sbb
lock
jno
frstor
clc
lds
or
sbb
lock
sbb
fdiv
pop
push
xor
and
jmp
ins
movs
xor
xor
pop
jo
add
mov
xchg
cs
cmp
or
or
(bad)
mov
ud1
popa
inc
dec
les
cdq
xlat
aas
pop
push
imul
or
push
outs
aaa
adc
(bad)
xor
and
inc
push
xchg
cdq
popa
push
cs
sub
adc
test
aam
and
cld
mov
inc
or
call
xor
and
ins
pop
adc
inc
xor
fsub
lock
leave
js
xchg
xchg
push
mov
add
cs
sub
in
add
xor
push
push
test
popa
xor
push
sbb
or
cwde
adc
rcr
rol
popa
xor
sahf
mov
hlt
and
xor
jge
aam
push
dec
or
inc
and
add
ret
and
sub
adc
cdq
mov
les
test
outs
pop
out
add
popa
adc
sub
ror
or
pop
icebp
je
or
retf
loope
add
xor
dec
and
jecxz
fiadd
push
jp
leave
sbb
xor
mov
push
dec
nop
mov
jmp
push
inc
or
aas
and
jmp
sar
aam
enter
adc
ud0
loopne
pop
cmp
inc
and
inc
sbb
push
sub
mov
loopne
mov
dec
mov
call
mov
mov
hlt
test
push
popa
test
inc
pop
cmp
lock
push
add
lock
adc
je
(bad)
repz
pop
lods
add
or
pop
adc
icebp
je
hlt
cmp
int3
inc
outs
mov
shr
inc
adc
mov
stc
add
shl
clc
push
je
pop
repz
movs
add
sub
aas
jl
add
push
loope
and
(bad)
sbb
test
jo
pop
sbb
and
daa
nop
xlat
movs
iret
add
adc
mov
add
sar
sbb
cmp
and
test
in
sbb
dec
cmp
xchg
stc
adc
inc
ror
dec
js
and
jo
pop
ror
dec
adc
sbb
adc
and
inc
nop
xor
or
inc
and
fadd
push
scas
and
ds
psrlq
push
sbb
mov
push
bound
pop
call
sbb
enter
jecxz
es
add
pop
pop
adc
clc
(bad)
cmp
add
mov
add
and
mov
xchg
pop
push
in
push
mov
pop
arpl
xchg
loop
add
enter
push
test
add
jbe
or
adc
add
loop
or
xchg
and
and
adc
and
mov
es
jo
push
mov
loopne
jecxz
add
add
xor
add
sbb
add
cmp
add
das
push
mov
and
pop
inc
into
(bad)
inc
pop
mov
and
cmp
call
add
mov
ror
mov
inc
aad
rcl
ret
mov
test
rol
or
ds
jo
fsub
add
pop
push
shl
sahf
pusha
or
pusha
loope
test
cmp
add
nop
les
lods
and
sub
xor
icebp
push
push
cmp
inc
(bad)
push
mov
rcr
outs
js
xor
hlt
or
dec
mov
and
inc
push
mov
and
sub
out
or
xor
ins
or
dec
add
loop
add
cmc
and
ror
icebp
xorps
dec
jmp
inc
shl
adc
dec
xchg
dec
js
aas
add
fdivr
rol
mov
jno
dec
ins
xchg
inc
push
dec
adc
xor
and
shr
add
enter
jns
dec
adc
adc
and
cmp
sub
pop
pop
cmc
jmp
in
pop
sbb
js
sbb
xchg
and
shr
aas
(bad)
mov
pcmpeqb
sub
icebp
pop
clc
mov
add
js
test
xchg
xchg
mov
(bad)
cli
xchg
popa
test
sbb
pusha
loope
push
cmp
push
cld
inc
sbb
or
add
dec
test
or
pop
fdivr
mov
(bad)
push
cmp
add
adc
and
test
fisubr
bound
rol
nop
xchg
outs
out
push
xchg
add
adc
jno
xor
push
test
mov
or
(bad)
icebp
bound
sbb
or
add
(bad)
mov
js
inc
push
push
and
xor
nop
add
rol
dec
xchg
movd
push
pop
ret
jo
aaa
mov
xchg
dec
lock
add
pusha
add
push
push
sar
cld
and
push
iret
jl
xor
pushf
pop
shl
jae
call
ficom
adc
int
jmp
push
jl
add
push
inc
add
sbb
adc
rol
enter
push
test
fs
test
inc
adc
add
jo
jb
mov
sub
rol
mov
loopne
test
sub
inc
mov
rol
jbe
mov
mov
xchg
add
xor
fimul
add
inc
adc
fs
add
fcmovnu
jl
xchg
mov
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
push
jo
rol
add
pushf
sbb
push
dec
jmp
or
jbe
sbb
xor
or
jmp
sbb
mov
inc
and
push
in
fiadd
es
add
loopne
retf
ret
mov
and
rcl
sbb
xor
push
xchg
sahf
ds
push
mov
dec
sbb
xchg
daa
sbb
sbb
aad
mov
xchg
pusha
push
inc
jbe
cld
shl
outs
xchg
or
popf
clc
shl
mov
rcr
shr
and
addr16
cmp
jp
push
inc
add
out
adc
xor
cmps
sbb
cmp
mov
and
movs
pop
xchg
ins
sahf
data16
push
inc
xlat
push
loop
xor
xor
jb
cs
js
xchg
add
sbb
inc
ror
in
and
push
or
sbb
cmp
jb
or
lods
push
adc
inc
inc
(bad)
aad
jmp
add
sbb
cld
pop
repnz
enter
jge
add
add
cmp
lock
pop
jae
lods
mov
push
mov
das
cld
and
inc
or
adc
inc
add
and
popa
push
pop
push
add
push
ds
bndldx
ins
and
add
and
sbb
int3
rcr
cmc
or
mov
cld
or
mov
sbb
and
push
iret
aas
dec
push
es
jl
pop
and
pop
mov
dec
add
or
adc
sub
ins
adc
test
aas
xor
je
pop
mov
push
aam
aam
js
add
adc
enter
and
sub
add
cmp
or
jne
push
sbb
jmp
pusha
(bad)
and
and
test
and
or
fdivr
arpl
push
sbb
cmp
repnz
and
mov
ror
mov
das
hlt
rol
sbb
cli
xchg
adc
or
dec
push
inc
pmuludq
mov
and
add
cld
outs
ss
mov
mov
or
push
jp
cli
push
add
add
add
cmp
lods
ror
inc
xchg
mov
or
xchg
push
xchg
sub
aaa
out
adc
and
dec
es
mov
int3
push
stos
sub
or
add
and
add
cld
mov
mov
push
dec
cmp
sbb
rol
mov
sub
sbb
push
push
inc
xor
add
inc
je
mov
sbb
jmp
ror
and
jmp
pusha
add
daa
push
jecxz
dec
clc
jecxz
add
pushf
xor
add
mov
shr
sahf
aaa
inc
sbb
std
rol
sbb
push
push
pop
ds
push
es
add
or
mov
sub
ds
xor
sub
inc
cmp
xchg
cli
(bad)
add
jl
ret
in
pop
push
or
jne
shl
add
popa
adc
add
and
(bad)
test
push
call
sbb
push
cmps
lods
cwde
or
shr
or
adc
ror
xor
and
and
rcr
mov
xchg
jo
pop
jnp
fistp
push
test
mov
fcmovnu
inc
mov
sbb
(bad)
adc
xchg
call
adc
add
aam
cdq
push
or
and
adc
inc
pop
mov
sar
mov
jecxz
sbb
fmul
mov
pop
icebp
mov
rol
mov
mov
loopne
(bad)
xor
or
cwde
xor
or
dec
jl
aas
test
pop
cmp
sbb
adc
sbb
and
loope
dec
mov
enter
adc
mov
sbb
xor
push
test
xor
adc
std
and
(bad)
mov
fwait
pop
shr
(bad)
aaa
and
push
push
pushf
loopne
ja
sbb
fadd
adc
and
jecxz
xchg
mov
jle
mov
jo
add
xchg
sub
add
xor
jge
jecxz
inc
adc
or
and
and
shl
adc
or
xor
push
inc
sbb
out
inc
mov
loop
jmp
sahf
inc
mov
add
cmp
and
ret
call
inc
cmp
or
inc
mov
push
loop
jmp
cmp
sahf
mov
add
sbb
lea
sbb
mov
lock
adc
or
adc
add
mov
cmp
and
data16
xor
inc
jo
cmp
loope
outs
mov
pop
fisub
aas
add
or
js
sbb
adc
sbb
shld
popa
push
call
jecxz
mov
dec
dec
ss
and
pop
shr
adc
cs
pop
push
xchg
push
push
mov
(bad)
arpl
cmc
pop
push
and
rdtsc
rol
cli
jno
jl
add
xor
inc
les
and
push
ins
dec
sbb
sbb
inc
movs
int
inc
or
sbb
repnz
jle
je
out
push
add
xor
cmp
jnp
lods
inc
sbb
push
or
add
in
xor
mov
sbb
and
out
repnz
cmp
jno
rcl
and
jmp
mov
test
cmp
xchg
or
movs
lods
jecxz
lods
and
pusha
loope
pop
loopne
adc
popa
test
out
aaa
mov
icebp
ret
lds
(bad)
mov
sbb
cld
ror
or
cmp
loopne
add
jo
sbb
pop
adc
sub
and
jo
aas
mov
and
js
sbb
test
sbb
aas
div
push
call
ret
fadd
repnz
enter
adc
xor
sbb
xchg
sbb
gs
or
(bad)
mov
adc
js
das
jp
gs
les
add
loop
pop
and
pop
pop
push
add
sbb
add
retf
aas
push
add
loopne
pop
fadd
stos
dec
repz
jge
aam
cmp
sbb
adc
rcl
adc
jbe
or
popf
add
adc
ret
into
push
mov
mov
movs
imul
stos
and
sub
and
jnp
pop
dec
push
jmp
lock
adc
add
mov
ror
dec
sub
and
test
rol
stos
push
xor
imul
add
inc
adc
push
ja
mov
push
in
add
add
nop
xchg
adc
jg
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
lock
xor
adc
push
xor
sub
xchg
pop
add
dec
pop
dec
mov
lock
shl
adc
xor
xor
(bad)
in
inc
repz
or
cmp
cmp
dec
ss
pusha
add
sub
ret
jnp
adc
push
and
xlat
adc
rcr
xor
xchg
test
cli
mov
and
call
dec
inc
call
mov
lahf
and
pop
icebp
out
mov
rol
cwde
popa
xchg
mov
pop
add
pop
rcr
inc
leave
les
dec
jns
fwait
aaa
mov
jns
and
out
sbb
mov
dec
sar
cld
inc
jnp
ret
xchg
jo
sub
inc
cmp
or
jbe
xor
fnsave
jmp
mov
jmp
(bad)
mov
icebp
pop
adc
ret
mov
pusha
pop
ret
cmp
push
cmp
add
or
dec
and
call
cvtpi2ps
push
and
inc
scas
icebp
mov
sub
test
push
and
nop
push
add
sbb
lock
jno
frstor
clc
lds
or
sbb
lock
sbb
fdiv
pop
push
xor
and
jmp
ins
movs
xor
xor
pop
jo
add
mov
xchg
cs
cmp
or
or
(bad)
mov
ud1
popa
inc
dec
les
cdq
xlat
aas
pop
push
imul
or
push
outs
aaa
adc
(bad)
xor
and
inc
push
xchg
cdq
popa
push
cs
sub
adc
test
aam
and
cld
mov
inc
or
call
xor
and
ins
pop
adc
inc
xor
fsub
lock
leave
js
xchg
xchg
push
mov
add
cs
sub
in
add
xor
push
push
test
popa
xor
push
sbb
or
cwde
adc
rcr
rol
popa
xor
sahf
mov
hlt
and
xor
jge
aam
push
dec
or
inc
and
add
ret
and
sub
adc
cdq
mov
les
test
outs
pop
out
add
popa
adc
sub
ror
or
pop
icebp
je
or
retf
loope
add
xor
dec
and
jecxz
fiadd
push
jp
leave
sbb
xor
mov
push
dec
nop
mov
jmp
push
inc
or
aas
and
jmp
sar
aam
enter
adc
ud0
loopne
pop
cmp
inc
and
inc
sbb
push
sub
mov
loopne
mov
dec
mov
call
mov
mov
hlt
test
push
popa
test
inc
pop
cmp
lock
push
add
lock
adc
je
(bad)
repz
pop
lods
add
or
pop
adc
icebp
je
hlt
cmp
int3
inc
outs
mov
shr
inc
adc
mov
stc
add
shl
clc
push
je
pop
repz
movs
add
sub
aas
jl
add
push
loope
and
(bad)
sbb
test
jo
pop
sbb
and
daa
nop
xlat
movs
iret
add
adc
mov
add
sar
sbb
cmp
and
test
in
sbb
dec
cmp
xchg
stc
adc
inc
ror
dec
js
and
jo
pop
ror
dec
adc
sbb
adc
and
inc
nop
xor
or
inc
and
fadd
push
scas
and
ds
psrlq
push
sbb
mov
push
bound
pop
call
sbb
enter
jecxz
es
add
pop
pop
adc
clc
(bad)
cmp
add
mov
add
and
mov
xchg
pop
push
in
push
mov
pop
arpl
xchg
loop
add
enter
push
test
add
jbe
or
adc
add
loop
or
xchg
and
and
adc
and
mov
es
jo
push
mov
loopne
jecxz
add
add
xor
add
sbb
add
cmp
add
das
push
mov
and
pop
inc
into
(bad)
inc
pop
mov
and
cmp
call
add
mov
ror
mov
inc
aad
rcl
ret
mov
test
rol
or
ds
jo
fsub
add
pop
push
shl
sahf
pusha
or
pusha
loope
test
cmp
add
nop
les
lods
and
sub
xor
icebp
push
push
cmp
inc
(bad)
push
mov
rcr
outs
js
xor
hlt
or
dec
mov
and
inc
push
mov
and
sub
out
or
xor
ins
or
dec
add
loop
add
cmc
and
ror
icebp
xorps
dec
jmp
inc
shl
adc
dec
xchg
dec
js
aas
add
fdivr
rol
mov
jno
dec
ins
xchg
inc
push
dec
adc
xor
and
shr
add
enter
jns
dec
adc
adc
and
cmp
sub
pop
pop
cmc
jmp
in
pop
sbb
js
sbb
xchg
and
shr
aas
(bad)
mov
pcmpeqb
sub
icebp
pop
clc
mov
add
js
test
xchg
xchg
mov
(bad)
cli
xchg
popa
test
sbb
pusha
loope
push
cmp
push
cld
inc
sbb
or
add
dec
test
or
pop
fdivr
mov
(bad)
push
cmp
add
adc
and
test
fisubr
bound
rol
nop
xchg
outs
out
push
xchg
add
adc
jno
xor
push
test
mov
or
(bad)
icebp
bound
sbb
or
add
(bad)
mov
js
inc
push
push
and
xor
nop
add
rol
dec
xchg
movd
push
pop
ret
jo
aaa
mov
xchg
dec
lock
add
pusha
add
push
push
sar
cld
and
push
iret
jl
xor
pushf
pop
shl
jae
call
ficom
adc
int
jmp
push
jl
add
push
inc
add
sbb
adc
rol
enter
push
test
fs
test
inc
adc
add
jo
jb
mov
sub
rol
mov
loopne
test
sub
inc
mov
rol
jbe
mov
mov
xchg
add
xor
fimul
add
inc
adc
fs
add
fcmovnu
jl
xchg
mov
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
push
jo
rol
add
pushf
sbb
push
dec
jmp
or
jbe
sbb
xor
or
jmp
sbb
mov
inc
and
push
in
fiadd
es
add
loopne
retf
ret
mov
and
rcl
sbb
xor
push
xchg
sahf
ds
push
mov
dec
sbb
xchg
daa
sbb
sbb
aad
mov
xchg
pusha
push
inc
jbe
cld
shl
outs
xchg
or
popf
clc
shl
mov
rcr
shr
and
addr16
cmp
jp
push
inc
add
out
adc
xor
cmps
sbb
cmp
mov
and
movs
pop
xchg
ins
sahf
data16
push
inc
xlat
push
loop
xor
xor
jb
cs
js
xchg
add
sbb
inc
ror
in
and
push
or
sbb
cmp
jb
or
lods
push
adc
inc
inc
(bad)
aad
jmp
add
sbb
cld
pop
repnz
enter
jge
add
add
cmp
lock
pop
jae
lods
mov
push
mov
das
cld
and
inc
or
adc
inc
add
and
popa
push
pop
push
add
push
ds
bndldx
ins
and
add
and
sbb
int3
rcr
cmc
or
mov
cld
or
mov
sbb
and
push
iret
aas
dec
push
es
jl
pop
and
pop
mov
dec
add
or
adc
sub
ins
adc
test
aas
xor
je
pop
mov
push
aam
aam
js
add
adc
enter
and
sub
add
cmp
or
jne
push
sbb
jmp
pusha
(bad)
and
and
test
and
or
fdivr
arpl
push
sbb
cmp
repnz
and
mov
ror
mov
das
hlt
rol
sbb
cli
xchg
adc
or
dec
push
inc
pmuludq
mov
and
add
cld
outs
ss
mov
mov
or
push
jp
cli
push
add
add
add
cmp
lods
ror
inc
xchg
mov
or
xchg
push
xchg
sub
aaa
out
adc
and
dec
es
mov
int3
push
stos
sub
or
add
and
add
cld
mov
mov
push
dec
cmp
sbb
rol
mov
sub
sbb
push
push
inc
xor
add
inc
je
mov
sbb
jmp
ror
and
jmp
pusha
add
daa
push
jecxz
dec
clc
jecxz
add
pushf
xor
add
mov
shr
sahf
aaa
inc
sbb
std
rol
sbb
push
push
pop
ds
push
es
add
or
mov
sub
ds
xor
sub
inc
cmp
xchg
cli
(bad)
add
jl
ret
in
pop
push
or
jne
shl
add
popa
adc
add
and
(bad)
test
push
call
sbb
push
cmps
lods
cwde
or
shr
or
adc
ror
xor
and
and
rcr
mov
xchg
jo
pop
jnp
fistp
push
test
mov
fcmovnu
inc
mov
sbb
(bad)
adc
xchg
call
adc
add
aam
cdq
push
or
and
adc
inc
pop
mov
sar
mov
jecxz
sbb
fmul
mov
pop
icebp
mov
rol
mov
mov
loopne
(bad)
xor
or
cwde
xor
or
dec
jl
aas
test
pop
cmp
sbb
adc
sbb
and
loope
dec
mov
enter
adc
mov
sbb
xor
push
test
xor
adc
std
and
(bad)
mov
fwait
pop
shr
(bad)
aaa
and
push
push
pushf
loopne
ja
sbb
fadd
adc
and
jecxz
xchg
mov
jle
mov
jo
add
xchg
sub
add
xor
jge
jecxz
inc
adc
or
and
and
shl
adc
or
xor
push
inc
sbb
out
inc
mov
loop
jmp
sahf
inc
mov
add
cmp
and
ret
call
inc
cmp
or
inc
mov
push
loop
jmp
cmp
sahf
mov
add
sbb
lea
sbb
mov
lock
adc
or
adc
add
mov
cmp
and
data16
xor
inc
jo
cmp
loope
outs
mov
pop
fisub
aas
add
or
js
sbb
adc
sbb
shld
popa
push
call
jecxz
mov
dec
dec
ss
and
pop
shr
adc
cs
pop
push
xchg
push
push
mov
(bad)
arpl
cmc
pop
push
and
rdtsc
rol
cli
jno
jl
add
xor
inc
les
and
push
ins
dec
sbb
sbb
inc
movs
int
inc
or
sbb
repnz
jle
je
out
push
add
xor
cmp
jnp
lods
inc
sbb
push
or
add
in
xor
mov
sbb
and
out
repnz
cmp
jno
rcl
and
jmp
mov
test
cmp
xchg
or
movs
lods
jecxz
lods
and
pusha
loope
pop
loopne
adc
popa
test
out
aaa
mov
icebp
ret
lds
(bad)
mov
sbb
cld
ror
or
cmp
loopne
add
jo
sbb
pop
adc
sub
and
jo
aas
mov
and
js
sbb
test
sbb
aas
div
push
call
ret
fadd
repnz
enter
adc
xor
sbb
xchg
sbb
gs
or
(bad)
mov
adc
js
das
jp
gs
les
add
loop
pop
and
pop
pop
push
add
sbb
add
retf
aas
push
add
loopne
pop
fadd
stos
dec
repz
jge
aam
cmp
sbb
adc
rcl
adc
jbe
or
popf
add
adc
ret
into
push
mov
mov
movs
imul
stos
and
sub
and
jnp
pop
dec
push
jmp
lock
adc
add
mov
ror
dec
sub
and
test
rol
stos
push
xor
imul
add
inc
adc
push
ja
mov
push
in
add
add
nop
xchg
adc
jg
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
lock
xor
adc
push
xor
sub
xchg
pop
add
dec
pop
dec
mov
lock
shl
adc
xor
xor
(bad)
in
inc
repz
or
cmp
cmp
dec
ss
pusha
add
sub
ret
jnp
adc
push
and
xlat
adc
rcr
xor
xchg
test
cli
mov
and
call
dec
inc
call
mov
lahf
and
pop
icebp
out
mov
rol
cwde
popa
xchg
mov
pop
add
pop
rcr
inc
leave
les
dec
jns
fwait
aaa
mov
jns
and
out
sbb
mov
dec
sar
cld
inc
jnp
ret
xchg
jo
sub
inc
cmp
or
jbe
xor
fnsave
jmp
mov
jmp
(bad)
mov
icebp
pop
adc
ret
mov
pusha
pop
ret
cmp
push
cmp
add
or
dec
and
call
cvtpi2ps
push
and
inc
scas
icebp
mov
sub
test
push
and
nop
push
add
sbb
lock
jno
frstor
clc
lds
or
sbb
lock
sbb
fdiv
pop
push
xor
and
jmp
ins
movs
xor
xor
pop
jo
add
mov
xchg
cs
cmp
or
or
(bad)
mov
ud1
popa
inc
dec
les
cdq
xlat
aas
pop
push
imul
or
push
outs
aaa
adc
(bad)
xor
and
inc
push
xchg
cdq
popa
push
cs
sub
adc
test
aam
and
cld
mov
inc
or
call
xor
and
ins
pop
adc
inc
xor
fsub
lock
leave
js
xchg
xchg
push
mov
add
cs
sub
in
add
xor
push
push
test
popa
xor
push
sbb
or
cwde
adc
rcr
rol
popa
xor
sahf
mov
hlt
and
xor
jge
aam
push
dec
or
inc
and
add
ret
and
sub
adc
cdq
mov
les
test
outs
pop
out
add
popa
adc
sub
ror
or
pop
icebp
je
or
retf
loope
add
xor
dec
and
jecxz
fiadd
push
jp
leave
sbb
xor
mov
push
dec
nop
mov
jmp
push
inc
or
aas
and
jmp
sar
aam
enter
adc
ud0
loopne
pop
cmp
inc
and
inc
sbb
push
sub
mov
loopne
mov
dec
mov
call
mov
mov
hlt
test
push
popa
test
inc
pop
cmp
lock
push
add
lock
adc
je
(bad)
repz
pop
lods
add
or
pop
adc
icebp
je
hlt
cmp
int3
inc
outs
mov
shr
inc
adc
mov
stc
add
shl
clc
push
je
pop
repz
movs
add
sub
aas
jl
add
push
loope
and
(bad)
sbb
test
jo
pop
sbb
and
daa
nop
xlat
movs
iret
add
adc
mov
add
sar
sbb
cmp
and
test
in
sbb
dec
cmp
xchg
stc
adc
inc
ror
dec
js
and
jo
pop
ror
dec
adc
sbb
adc
and
inc
nop
xor
or
inc
and
fadd
push
scas
and
ds
psrlq
push
sbb
mov
push
bound
pop
call
sbb
enter
jecxz
es
add
pop
pop
adc
clc
(bad)
cmp
add
mov
add
and
mov
xchg
pop
push
in
push
mov
pop
arpl
xchg
loop
add
enter
push
test
add
jbe
or
adc
add
loop
or
xchg
and
and
adc
and
mov
es
jo
push
mov
loopne
jecxz
add
add
xor
add
sbb
add
cmp
add
das
push
mov
and
pop
inc
into
(bad)
inc
pop
mov
and
cmp
call
add
mov
ror
mov
inc
aad
rcl
ret
mov
test
rol
or
ds
jo
fsub
add
pop
push
shl
sahf
pusha
or
pusha
loope
test
cmp
add
nop
les
lods
and
sub
xor
icebp
push
push
cmp
inc
(bad)
push
mov
rcr
outs
js
xor
hlt
or
dec
mov
and
inc
push
mov
and
sub
out
or
xor
ins
or
dec
add
loop
add
cmc
and
ror
icebp
xorps
dec
jmp
inc
shl
adc
dec
xchg
dec
js
aas
add
fdivr
rol
mov
jno
dec
ins
xchg
inc
push
dec
adc
xor
and
shr
add
enter
jns
dec
adc
adc
and
cmp
sub
pop
pop
cmc
jmp
in
pop
sbb
js
sbb
xchg
and
shr
aas
(bad)
mov
pcmpeqb
sub
icebp
pop
clc
mov
add
js
test
xchg
xchg
mov
(bad)
cli
xchg
popa
test
sbb
pusha
loope
push
cmp
push
cld
inc
sbb
or
add
dec
test
or
pop
fdivr
mov
(bad)
push
cmp
add
adc
and
test
fisubr
bound
rol
nop
xchg
outs
out
push
xchg
add
adc
jno
xor
push
test
mov
or
(bad)
icebp
bound
sbb
or
add
(bad)
mov
js
inc
push
push
and
xor
nop
add
rol
dec
xchg
movd
push
pop
ret
jo
aaa
mov
xchg
dec
lock
add
pusha
add
push
push
sar
cld
and
push
iret
jl
xor
pushf
pop
shl
jae
call
ficom
adc
int
jmp
push
jl
add
push
inc
add
sbb
adc
rol
enter
push
test
fs
test
inc
adc
add
jo
jb
mov
sub
rol
mov
loopne
test
sub
inc
mov
rol
jbe
mov
mov
xchg
add
xor
fimul
add
inc
adc
fs
add
fcmovnu
jl
xchg
mov
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
push
jo
rol
add
pushf
sbb
push
dec
jmp
or
jbe
sbb
xor
or
jmp
sbb
mov
inc
and
push
in
fiadd
es
add
loopne
retf
ret
mov
and
rcl
sbb
xor
push
xchg
sahf
ds
push
mov
dec
sbb
xchg
daa
sbb
sbb
aad
mov
xchg
pusha
push
inc
jbe
cld
shl
outs
xchg
or
popf
clc
shl
mov
rcr
shr
and
addr16
cmp
jp
push
inc
add
out
adc
xor
cmps
sbb
cmp
mov
and
movs
pop
xchg
ins
sahf
data16
push
inc
xlat
push
loop
xor
xor
jb
cs
js
xchg
add
sbb
inc
ror
in
and
push
or
sbb
cmp
jb
or
lods
push
adc
inc
inc
(bad)
aad
jmp
add
sbb
cld
pop
repnz
enter
jge
add
add
cmp
lock
pop
jae
lods
mov
push
mov
das
cld
and
inc
or
adc
inc
add
and
popa
push
pop
push
add
push
ds
bndldx
ins
and
add
and
sbb
int3
rcr
cmc
or
mov
cld
or
mov
sbb
and
push
iret
aas
dec
push
es
jl
pop
and
pop
mov
dec
add
or
adc
sub
ins
adc
test
aas
xor
je
pop
mov
push
aam
aam
js
add
adc
enter
and
sub
add
cmp
or
jne
push
sbb
jmp
pusha
(bad)
and
and
test
and
or
fdivr
arpl
push
sbb
cmp
repnz
and
mov
ror
mov
das
hlt
rol
sbb
cli
xchg
adc
or
dec
push
inc
pmuludq
mov
and
add
cld
outs
ss
mov
mov
or
push
jp
cli
push
add
add
add
cmp
lods
ror
inc
xchg
mov
or
xchg
push
xchg
sub
aaa
out
adc
and
dec
es
mov
int3
push
stos
sub
or
add
and
add
cld
mov
mov
push
dec
cmp
sbb
rol
mov
sub
sbb
push
push
inc
xor
add
inc
je
mov
sbb
jmp
ror
and
jmp
pusha
add
daa
push
jecxz
dec
clc
jecxz
add
pushf
xor
add
mov
shr
sahf
aaa
inc
sbb
std
rol
sbb
push
push
pop
ds
push
es
add
or
mov
sub
ds
xor
sub
inc
cmp
xchg
cli
(bad)
add
jl
ret
in
pop
push
or
jne
shl
add
popa
adc
add
and
(bad)
test
push
call
sbb
push
cmps
lods
cwde
or
shr
or
adc
ror
xor
and
and
rcr
mov
xchg
jo
pop
jnp
fistp
push
test
mov
fcmovnu
inc
mov
sbb
(bad)
adc
xchg
call
adc
add
aam
cdq
push
or
and
adc
inc
pop
mov
sar
mov
jecxz
sbb
fmul
mov
pop
icebp
mov
rol
mov
mov
loopne
(bad)
xor
or
cwde
xor
or
dec
jl
aas
test
pop
cmp
sbb
adc
sbb
and
loope
dec
mov
enter
adc
mov
sbb
xor
push
test
xor
adc
std
and
(bad)
mov
fwait
pop
shr
(bad)
aaa
and
push
push
pushf
loopne
ja
sbb
fadd
adc
and
jecxz
xchg
mov
jle
mov
jo
add
xchg
sub
add
xor
jge
jecxz
inc
adc
or
and
and
shl
adc
or
xor
push
inc
sbb
out
inc
mov
loop
jmp
sahf
inc
mov
add
cmp
and
ret
call
inc
cmp
or
inc
mov
push
loop
jmp
cmp
sahf
mov
add
sbb
lea
sbb
mov
lock
adc
or
adc
add
mov
cmp
and
data16
xor
inc
jo
cmp
loope
outs
mov
pop
fisub
aas
add
or
js
sbb
adc
sbb
shld
popa
push
call
jecxz
mov
dec
dec
ss
and
pop
shr
adc
cs
pop
push
xchg
push
push
mov
(bad)
arpl
cmc
pop
push
and
rdtsc
rol
cli
jno
jl
add
xor
inc
les
and
push
ins
dec
sbb
sbb
inc
movs
int
inc
or
sbb
repnz
jle
je
out
push
add
xor
cmp
jnp
lods
inc
sbb
push
or
add
in
xor
mov
sbb
and
out
repnz
cmp
jno
rcl
and
jmp
mov
test
cmp
xchg
or
movs
lods
jecxz
lods
and
pusha
loope
pop
loopne
adc
popa
test
out
aaa
mov
icebp
ret
lds
(bad)
mov
sbb
cld
ror
or
cmp
loopne
add
jo
sbb
pop
adc
sub
and
jo
aas
mov
and
js
sbb
test
sbb
aas
div
push
call
ret
fadd
repnz
enter
adc
xor
sbb
xchg
sbb
gs
or
(bad)
mov
adc
js
das
jp
gs
les
add
loop
pop
and
pop
pop
push
add
sbb
add
retf
aas
push
add
loopne
pop
fadd
stos
dec
repz
jge
aam
cmp
sbb
adc
rcl
adc
jbe
or
popf
add
adc
ret
into
push
mov
mov
movs
imul
stos
and
sub
and
jnp
pop
dec
push
jmp
lock
adc
add
mov
ror
dec
sub
and
test
rol
stos
push
xor
imul
add
inc
adc
push
ja
mov
push
in
add
add
nop
xchg
adc
jg
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
lock
xor
adc
push
xor
sub
xchg
pop
add
dec
pop
dec
mov
lock
shl
adc
xor
xor
(bad)
in
inc
repz
or
cmp
cmp
dec
ss
pusha
add
sub
ret
jnp
adc
push
and
xlat
adc
rcr
xor
xchg
test
cli
mov
and
call
dec
inc
call
mov
lahf
and
pop
icebp
out
mov
rol
cwde
popa
xchg
mov
pop
add
pop
rcr
inc
leave
les
dec
jns
fwait
aaa
mov
jns
and
out
sbb
mov
dec
sar
cld
inc
jnp
ret
xchg
jo
sub
inc
cmp
or
jbe
xor
fnsave
jmp
mov
jmp
(bad)
mov
icebp
pop
adc
ret
mov
pusha
pop
ret
cmp
push
cmp
add
or
dec
and
call
cvtpi2ps
push
and
inc
scas
icebp
mov
sub
test
push
and
nop
push
add
sbb
lock
jno
frstor
clc
lds
or
sbb
lock
sbb
fdiv
pop
push
xor
and
jmp
ins
movs
xor
xor
pop
jo
add
mov
xchg
cs
cmp
or
or
(bad)
mov
ud1
popa
inc
dec
les
cdq
xlat
aas
pop
push
imul
or
push
outs
aaa
adc
(bad)
xor
and
inc
push
xchg
cdq
popa
push
cs
sub
adc
test
aam
and
cld
mov
inc
or
call
xor
and
ins
pop
adc
inc
xor
fsub
lock
leave
js
xchg
xchg
push
mov
add
cs
sub
in
add
xor
push
push
test
popa
xor
push
sbb
or
cwde
adc
rcr
rol
popa
xor
sahf
mov
hlt
and
xor
jge
aam
push
dec
or
inc
and
add
ret
and
sub
adc
cdq
mov
les
test
outs
pop
out
add
popa
adc
sub
ror
or
pop
icebp
je
or
retf
loope
add
xor
dec
and
jecxz
fiadd
push
jp
leave
sbb
xor
mov
push
dec
nop
mov
jmp
push
inc
or
aas
and
jmp
sar
aam
enter
adc
ud0
loopne
pop
cmp
inc
and
inc
sbb
push
sub
mov
loopne
mov
dec
mov
call
mov
mov
hlt
test
push
popa
test
inc
pop
cmp
lock
push
add
lock
adc
je
(bad)
repz
pop
lods
add
or
pop
adc
icebp
je
hlt
cmp
int3
inc
outs
mov
shr
inc
adc
mov
stc
add
shl
clc
push
je
pop
repz
movs
add
sub
aas
jl
add
push
loope
and
(bad)
sbb
test
jo
pop
sbb
and
daa
nop
xlat
movs
iret
add
adc
mov
add
sar
sbb
cmp
and
test
in
sbb
dec
cmp
xchg
stc
adc
inc
ror
dec
js
and
jo
pop
ror
dec
adc
sbb
adc
and
inc
nop
xor
or
inc
and
fadd
push
scas
and
ds
psrlq
push
sbb
mov
push
bound
pop
call
sbb
enter
jecxz
es
add
pop
pop
adc
clc
(bad)
cmp
add
mov
add
and
mov
xchg
pop
push
in
push
mov
pop
arpl
xchg
loop
add
enter
push
test
add
jbe
or
adc
add
loop
or
xchg
and
and
adc
and
mov
es
jo
push
mov
loopne
jecxz
add
add
xor
add
sbb
add
cmp
add
das
push
mov
and
pop
inc
into
(bad)
inc
pop
mov
and
cmp
call
add
mov
ror
mov
inc
aad
rcl
ret
mov
test
rol
or
ds
jo
fsub
add
pop
push
shl
sahf
pusha
or
pusha
loope
test
cmp
add
nop
les
lods
and
sub
xor
icebp
push
push
cmp
inc
(bad)
push
mov
rcr
outs
js
xor
hlt
or
dec
mov
and
inc
push
mov
and
sub
out
or
xor
ins
or
dec
add
loop
add
cmc
and
ror
icebp
xorps
dec
jmp
inc
shl
adc
dec
xchg
dec
js
aas
add
fdivr
rol
mov
jno
dec
ins
xchg
inc
push
dec
adc
xor
and
shr
add
enter
jns
dec
adc
adc
and
cmp
sub
pop
pop
cmc
jmp
in
pop
sbb
js
sbb
xchg
and
shr
aas
(bad)
mov
pcmpeqb
sub
icebp
pop
clc
mov
add
js
test
xchg
xchg
mov
(bad)
cli
xchg
popa
test
sbb
pusha
loope
push
cmp
push
cld
inc
sbb
or
add
dec
test
or
pop
fdivr
mov
(bad)
push
cmp
add
adc
and
test
fisubr
bound
rol
nop
xchg
outs
out
push
xchg
add
adc
jno
xor
push
test
mov
or
(bad)
icebp
bound
sbb
or
add
(bad)
mov
js
inc
push
push
and
xor
nop
add
rol
dec
xchg
movd
push
pop
ret
jo
aaa
mov
xchg
dec
lock
add
pusha
add
push
push
sar
cld
and
push
iret
jl
xor
pushf
pop
shl
jae
call
ficom
adc
int
jmp
push
jl
add
push
inc
add
sbb
adc
rol
enter
push
test
fs
test
inc
adc
add
jo
jb
mov
sub
rol
mov
loopne
test
sub
inc
mov
rol
jbe
mov
mov
xchg
add
xor
fimul
add
inc
adc
fs
add
fcmovnu
jl
xchg
mov
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
push
jo
rol
add
pushf
sbb
push
dec
jmp
or
jbe
sbb
xor
or
jmp
sbb
mov
inc
and
push
in
fiadd
es
add
loopne
retf
ret
mov
and
rcl
sbb
xor
push
xchg
sahf
ds
push
mov
dec
sbb
xchg
daa
sbb
sbb
aad
mov
xchg
pusha
push
inc
jbe
cld
shl
outs
xchg
or
popf
clc
shl
mov
rcr
shr
and
addr16
cmp
jp
push
inc
add
out
adc
xor
cmps
sbb
cmp
mov
and
movs
pop
xchg
ins
sahf
data16
push
inc
xlat
push
loop
xor
xor
jb
cs
js
xchg
add
sbb
inc
ror
in
and
push
or
sbb
cmp
jb
or
lods
push
adc
inc
inc
(bad)
aad
jmp
add
sbb
cld
pop
repnz
enter
jge
add
add
cmp
lock
pop
jae
lods
mov
push
mov
das
cld
and
inc
or
adc
inc
add
and
popa
push
pop
push
add
push
ds
bndldx
ins
and
add
and
sbb
int3
rcr
cmc
or
mov
cld
or
mov
sbb
and
push
iret
aas
dec
push
es
jl
pop
and
pop
mov
dec
add
or
adc
sub
ins
adc
test
aas
xor
je
pop
mov
push
aam
aam
js
add
adc
enter
and
sub
add
cmp
or
jne
push
sbb
jmp
pusha
(bad)
and
and
test
and
or
fdivr
arpl
push
sbb
cmp
repnz
and
mov
ror
mov
das
hlt
rol
sbb
cli
xchg
adc
or
dec
push
inc
pmuludq
mov
and
add
cld
outs
ss
mov
mov
or
push
jp
cli
push
add
add
add
cmp
lods
ror
inc
xchg
mov
or
xchg
push
xchg
sub
aaa
out
adc
and
dec
es
mov
int3
push
stos
sub
or
add
and
add
cld
mov
mov
push
dec
cmp
sbb
rol
mov
sub
sbb
push
push
inc
xor
add
inc
je
mov
sbb
jmp
ror
and
jmp
pusha
add
daa
push
jecxz
dec
clc
jecxz
add
pushf
xor
add
mov
shr
sahf
aaa
inc
sbb
std
rol
sbb
push
push
pop
ds
push
es
add
or
mov
sub
ds
xor
sub
inc
cmp
xchg
cli
(bad)
add
jl
ret
in
pop
push
or
jne
shl
add
popa
adc
add
and
(bad)
test
push
call
sbb
push
cmps
lods
cwde
or
shr
or
adc
ror
xor
and
and
rcr
mov
xchg
jo
pop
jnp
fistp
push
test
mov
fcmovnu
inc
mov
sbb
(bad)
adc
xchg
call
adc
add
aam
cdq
push
or
and
adc
inc
pop
mov
sar
mov
jecxz
sbb
fmul
mov
pop
icebp
mov
rol
mov
mov
loopne
(bad)
xor
or
cwde
xor
or
dec
jl
aas
test
pop
cmp
sbb
adc
sbb
and
loope
dec
mov
enter
adc
mov
sbb
xor
push
test
xor
adc
std
and
(bad)
mov
fwait
pop
shr
(bad)
aaa
and
push
push
pushf
loopne
ja
sbb
fadd
adc
and
jecxz
xchg
mov
jle
mov
jo
add
xchg
sub
add
xor
jge
jecxz
inc
adc
or
and
and
shl
adc
or
xor
push
inc
sbb
out
inc
mov
loop
jmp
sahf
inc
mov
add
cmp
and
ret
call
inc
cmp
or
inc
mov
push
loop
jmp
cmp
sahf
mov
add
sbb
lea
sbb
mov
lock
adc
or
adc
add
mov
cmp
and
data16
xor
inc
jo
cmp
loope
outs
mov
pop
fisub
aas
add
or
js
sbb
adc
sbb
shld
popa
push
call
jecxz
mov
dec
dec
ss
and
pop
shr
adc
cs
pop
push
xchg
push
push
mov
(bad)
arpl
cmc
pop
push
and
rdtsc
rol
cli
jno
jl
add
xor
inc
les
and
push
ins
dec
sbb
sbb
inc
movs
int
inc
or
sbb
repnz
jle
je
out
push
add
xor
cmp
jnp
lods
inc
sbb
push
or
add
in
xor
mov
sbb
and
out
repnz
cmp
jno
rcl
and
jmp
mov
test
cmp
xchg
or
movs
lods
jecxz
lods
and
pusha
loope
pop
loopne
adc
popa
test
out
aaa
mov
icebp
ret
lds
(bad)
mov
sbb
cld
ror
or
cmp
loopne
add
jo
sbb
pop
adc
sub
and
jo
aas
mov
and
js
sbb
test
sbb
aas
div
push
call
ret
fadd
repnz
enter
adc
xor
sbb
xchg
sbb
gs
or
(bad)
mov
adc
js
das
jp
gs
les
add
loop
pop
and
pop
pop
push
add
sbb
add
retf
aas
push
add
loopne
pop
fadd
stos
dec
repz
jge
aam
cmp
sbb
adc
rcl
adc
jbe
or
popf
add
adc
ret
into
push
mov
mov
movs
imul
stos
and
sub
and
jnp
pop
dec
push
jmp
lock
adc
add
mov
ror
dec
sub
and
test
rol
stos
push
xor
imul
add
inc
adc
push
ja
mov
push
in
add
add
nop
xchg
adc
jg
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
lock
xor
adc
push
xor
sub
xchg
pop
add
dec
pop
dec
mov
lock
shl
adc
xor
xor
(bad)
in
inc
repz
or
cmp
cmp
dec
ss
pusha
add
sub
ret
jnp
adc
push
and
xlat
adc
rcr
xor
xchg
test
cli
mov
and
call
dec
inc
call
mov
lahf
and
pop
icebp
out
mov
rol
cwde
popa
xchg
mov
pop
add
pop
rcr
inc
leave
les
dec
jns
fwait
aaa
mov
jns
and
out
sbb
mov
dec
sar
cld
inc
jnp
ret
xchg
jo
sub
inc
cmp
or
jbe
xor
fnsave
jmp
mov
jmp
(bad)
mov
icebp
pop
adc
ret
mov
pusha
pop
ret
cmp
push
cmp
add
or
dec
and
call
cvtpi2ps
push
and
inc
scas
icebp
mov
sub
test
push
and
nop
push
add
sbb
lock
jno
frstor
clc
lds
or
sbb
lock
sbb
fdiv
pop
push
xor
and
jmp
ins
movs
xor
xor
pop
jo
add
mov
xchg
cs
cmp
or
or
(bad)
mov
ud1
popa
inc
dec
les
cdq
xlat
aas
pop
push
imul
or
push
outs
aaa
adc
(bad)
xor
and
inc
push
xchg
cdq
popa
push
cs
sub
adc
test
aam
and
cld
mov
inc
or
call
xor
and
ins
pop
adc
inc
xor
fsub
lock
leave
js
xchg
xchg
push
mov
add
cs
sub
in
add
xor
push
push
test
popa
xor
push
sbb
or
cwde
adc
rcr
rol
popa
xor
sahf
mov
hlt
and
xor
jge
aam
push
dec
or
inc
and
add
ret
and
sub
adc
cdq
mov
les
test
outs
pop
out
add
popa
adc
sub
ror
or
pop
icebp
je
or
retf
loope
add
xor
dec
and
jecxz
fiadd
push
jp
leave
sbb
xor
mov
push
dec
nop
mov
jmp
push
inc
or
aas
and
jmp
sar
aam
enter
adc
ud0
loopne
pop
cmp
inc
and
inc
sbb
push
sub
mov
loopne
mov
dec
mov
call
mov
mov
hlt
test
push
popa
test
inc
pop
cmp
lock
push
add
lock
adc
je
(bad)
repz
pop
lods
add
or
pop
adc
icebp
je
hlt
cmp
int3
inc
outs
mov
shr
inc
adc
mov
stc
add
shl
clc
push
je
pop
repz
movs
add
sub
aas
jl
add
push
loope
and
(bad)
sbb
test
jo
pop
sbb
and
daa
nop
xlat
movs
iret
add
adc
mov
add
sar
sbb
cmp
and
test
in
sbb
dec
cmp
xchg
stc
adc
inc
ror
dec
js
and
jo
pop
ror
dec
adc
sbb
adc
and
inc
nop
xor
or
inc
and
fadd
push
scas
and
ds
psrlq
push
sbb
mov
push
bound
pop
call
sbb
enter
jecxz
es
add
pop
pop
adc
clc
(bad)
cmp
add
mov
add
and
mov
xchg
pop
push
in
push
mov
pop
arpl
xchg
loop
add
enter
push
test
add
jbe
or
adc
add
loop
or
xchg
and
and
adc
and
mov
es
jo
push
mov
loopne
jecxz
add
add
xor
add
sbb
add
cmp
add
das
push
mov
and
pop
inc
into
(bad)
inc
pop
mov
and
cmp
call
add
mov
ror
mov
inc
aad
rcl
ret
mov
test
rol
or
ds
jo
fsub
add
pop
push
shl
sahf
pusha
or
pusha
loope
test
cmp
add
nop
les
lods
and
sub
xor
icebp
push
push
cmp
inc
(bad)
push
mov
rcr
outs
js
xor
hlt
or
dec
mov
and
inc
push
mov
and
sub
out
or
xor
ins
or
dec
add
loop
add
cmc
and
ror
icebp
xorps
dec
jmp
inc
shl
adc
dec
xchg
dec
js
aas
add
fdivr
rol
mov
jno
dec
ins
xchg
inc
push
dec
adc
xor
and
shr
add
enter
jns
dec
adc
adc
and
cmp
sub
pop
pop
cmc
jmp
in
pop
sbb
js
sbb
xchg
and
shr
aas
(bad)
mov
pcmpeqb
sub
icebp
pop
clc
mov
add
js
test
xchg
xchg
mov
(bad)
cli
xchg
popa
test
sbb
pusha
loope
push
cmp
push
cld
inc
sbb
or
add
dec
test
or
pop
fdivr
mov
(bad)
push
cmp
add
adc
and
test
fisubr
bound
rol
nop
xchg
outs
out
push
xchg
add
adc
jno
xor
push
test
mov
or
(bad)
icebp
bound
sbb
or
add
(bad)
mov
js
inc
push
push
and
xor
nop
add
rol
dec
xchg
movd
push
pop
ret
jo
aaa
mov
xchg
dec
lock
add
pusha
add
push
push
sar
cld
and
push
iret
jl
xor
pushf
pop
shl
jae
call
ficom
adc
int
jmp
push
jl
add
push
inc
add
sbb
adc
rol
enter
push
test
fs
test
inc
adc
add
jo
jb
mov
sub
rol
mov
loopne
test
sub
inc
mov
rol
jbe
mov
mov
xchg
add
xor
fimul
add
inc
adc
fs
add
fcmovnu
jl
xchg
mov
add
stc
add
or
inc
sub
add
add
add
add
or
inc
rol
loopne
rol
rol
or
lgdtd
push
add
add
popa
xor
sbb
inc
add
dec
push
add
ins
je
add
add
inc
dec
inc
cmp
popa
cmp
xor
idiv
add
hlt
xlat
(bad)
jecxz
bound
imul
mov
(bad)
movs
ins
cmc
lds
retf
retf
(bad)
lods
lods
lock
call
add
xor
(bad)
loop
call
or
add
xchg
mov
enter
xchg
inc
(bad)
imul
lods
idiv
cli
inc
std
mov
mov
shl
add
(bad)
ja
jns
cld
mov
(bad)
sti
push
(bad)
(bad)
data16
ffreep
nop
jmp
icebp
mov
xchg
dec
and
jg
div
(bad)
mov
or
stos
or
fnstsw
test
xchg
retf
nop
imul
mov
(bad)
xchg
pop
add
out
es
cmp
enter
dec
ret
jnp
sbb
lea
scas
and
call
call
arpl
jmp
push
add
int3
xchg
xor
(bad)
(bad)
dec
mov
(bad)
(bad)
jmp
in
out
(bad)
out
fdivr
retf
mov
jmp
(bad)
push
sti
adc
push
xchg
xlat
daa
add
sbb
pop
in
mov
lds
jmp
idiv
stos
add
out
xor
fabs
lds
shl
mov
cmc
aam
sar
mov
cs
sub
jns
stos
mov
leave
xchg
pop
xchg
test
je
enter
ins
push
mov
xor
xor
mov
sbb
retf
neg
mov
lock
dec
(bad)
xor
stc
(bad)
call
lods
jae
in
or
lahf
(bad)
aad
jg
add
retf
mov
lds
icebp
jmp
enter
mov
cwde
stos
aad
add
aad
loopne
jecxz
xlat
fldl2t
fcmovb
jecxz
mov
sbb
ins
mov
add
mov
dec
popf
pop
push
(bad)
aam
fwait
imul
xchg
sbb
cmp
lock
pop
fadd
inc
stos
jo
neg
rcr
clc
mov
ja
or
push
arpl
dec
dec
inc
jmp
into
movs
xchg
test
mov
(bad)
in
ja
out
jecxz
or
dec
sub
pushf
pop
mov
mov
call
xchg
jecxz
fmul
rol
mov
rol
stc
idiv
(bad)
pop
sbb
fisttp
mov
jl
rol
push
jge
cmc
jmp
ret
mov
(bad)
daa
out
jecxz
pop
adc
dec
inc
idiv
jmp
iret
ret
outs
out
jmp
(bad)
jns
jmp
sbb
icebp
scas
test
arpl
cli
cli
call
sbb
jmp
leave
mov
push
loope
inc
pop
loop
daa
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
inc
std
or
mov
rol
nop
mov
cli
push
add
ret
mov
mov
xor
dec
repnz
pop
stc
and
cs
and
sbb
mov
jge
stos
pusha
or
lods
je
push
out
daa
jne
push
je
add
xchg
inc
push
enter
inc
push
rol
inc
mov
ficomp
adc
jne
xchg
(bad)
je
iret
iret
mov
cli
mov
aad
adc
add
mov
nop
call
inc
cmp
cdq
push
aas
je
jl
aad
cs
pop
and
or
mov
nop
imul
push
sub
cwde
adc
test
sbb
jl
push
mov
movd
pop
aam
mov
jns
mov
js
jge
scas
cmovg
loop
jecxz
(bad)
cmp
mov
mov
mov
xor
or
mov
xor
fist
sub
rol
je
pop
sub
adc
ret
in
int
popf
mov
mov
loope
or
add
add
clts
shl
and
nop
xchg
nop
int
inc
mov
or
je
mov
lods
add
ret
add
pushf
loopne
push
cmps
pushf
jo
ss
adc
cmps
inc
adc
enter
mov
adc
xchg
ret
mov
nop
fcom
(bad)
xor
and
retf
sbb
shl
or
mov
or
adc
or
mov
repnz
adc
add
push
fdiv
add
ret
lock
adc
add
or
les
inc
adc
sub
inc
sbb
push
das
mov
and
add
sub
nop
pop
shl
pop
test
dec
or
adc
or
inc
nop
xchg
test
ror
add
shr
mov
and
loopne
adc
fdiv
push
or
jns
shr
push
and
xchg
fsub
mov
out
lds
cmps
sub
inc
clc
inc
int
fstp
mov
test
inc
push
nop
retf
cmp
sub
sub
cmp
xchg
add
mov
inc
add
leave
aaa
or
rol
mov
loopne
sbb
daa
inc
or
fwait
mov
dec
add
sbb
mov
push
add
xor
shl
iret
or
cwde
or
add
or
inc
xor
push
ss
xor
adc
pop
lds
mov
pop
je
jns
add
push
inc
inc
dec
pop
pusha
add
stc
fadd
add
xchg
js
dec
or
adc
leave
cs
push
push
and
jno
loope
add
add
inc
add
push
pushf
dec
test
aam
ret
sbb
pop
and
sub
cmps
hlt
lock
enter
sar
push
pop
dec
adc
push
lock
test
push
jo
jp
loopne
inc
xchg
push
pop
adc
in
mov
xor
or
scas
fs
adc
imul
iret
or
adc
rol
adc
xchg
push
add
xlat
push
pop
jo
xor
inc
xor
inc
rol
ret
xchg
lds
push
fs
popa
mov
ds
or
and
or
add
std
adc
xor
bound
scas
mov
add
inc
xor
add
add
cmp
add
ins
icebp
add
rol
xor
add
ins
and
adc
sub
adc
cmps
jno
sbb
dec
add
adc
inc
and
cmp
adc
or
add
cmp
cmp
mov
sub
add
xchg
call
popa
push
jae
sbb
and
ret
or
sub
cmp
xchg
mov
jl
and
mov
push
pop
repnz
pusha
clc
sar
xchg
pop
xchg
(bad)
cmp
inc
inc
jl
mov
adc
sub
icebp
or
loopne
sbb
lock
leave
sub
ret
repnz
xchg
inc
cmp
test
loopne
and
fs
(bad)
sbb
push
pop
mov
aas
call
aaa
pop
mov
rcr
push
test
or
les
cmp
ss
and
ret
or
jb
or
xor
rep
inc
push
add
add
pop
pop
xor
or
pusha
test
mov
add
adc
xacquire
lock
(bad)
and
clc
jno
nop
and
inc
sbb
add
cld
loopne
aas
pusha
test
(bad)
mov
pop
mov
mov
adc
inc
sbb
mov
lock
or
popa
pop
outs
add
and
inc
and
sub
rcr
rol
add
call
xor
test
inc
jns
pop
mov
inc
inc
jo
sub
jl
mov
xor
cmp
jno
inc
cmp
fstp
cmc
cs
in
or
xor
rcr
test
inc
adc
jmp
enter
or
retf
sbb
inc
ret
mov
cmovo
add
rol
repnz
stos
jo
pop
int3
cmps
or
pop
scas
push
xor
sub
cmp
mov
sbb
push
lea
sub
ror
push
bound
add
inc
mov
pop
dec
push
scas
inc
pop
adc
or
test
or
bound
xor
sub
lock
cmp
sbb
add
dec
mov
add
push
fild
or
shl
push
and
inc
or
adc
fs
arpl
and
and
adc
or
sbb
call
pusha
cmp
sbb
das
inc
or
xor
and
and
mov
shl
loopne
sub
pop
push
js
pusha
add
add
mov
or
inc
inc
jg
adc
adc
add
or
xor
inc
ret
jecxz
xchg
and
push
jno
sub
and
sbb
mov
(bad)
mov
and
outs
jae
shr
lock
enter
enter
in
arpl
and
adc
sub
or
add
aas
cmp
adc
mov
or
add
rol
or
jo
daa
inc
out
mov
sub
rol
xor
push
int3
or
and
mov
ds
dec
push
sub
add
sub
ja
addr16
fdivp
push
or
ret
adc
inc
bndldx
adc
mov
adc
les
repnz
dec
loopne
xchg
push
jno
sbb
rcr
add
ret
jecxz
inc
js
je
mov
jo
loop
das
clc
ss
push
jmp
adc
mov
or
push
sbb
and
xor
mov
jg
and
inc
mov
adc
cwde
or
adc
sub
popa
xlat
and
push
adc
ret
pop
add
ror
nop
test
inc
add
lea
xchg
hlt
js
jecxz
inc
test
sub
pop
add
leave
iret
xchg
push
add
push
mov
cmp
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
xor
pop
and
sub
ds
mov
mov
mov
sar
ds
jns
mov
and
in
test
adc
adc
adc
sbb
mov
mov
push
std
jnp
hlt
(bad)
nop
mov
mov
add
sbb
or
(bad)
mov
mov
sub
add
retf
jbe
sub
mov
or
outs
ret
push
and
mov
std
mov
sub
scas
dec
mov
or
mov
les
xor
mov
push
hlt
lods
pusha
repz
call
push
loope
adc
mov
retf
mov
mov
retf
lds
push
mov
lods
mov
outs
cmp
and
fwait
mov
adc
test
sub
mov
mov
mov
ret
inc
adc
loop
add
push
fadd
or
dec
push
add
inc
adc
test
xchg
loop
and
add
push
adc
mov
push
fld
lock
shr
repz
sub
or
mov
ret
lock
or
cld
xchg
inc
push
inc
ror
inc
xor
sub
push
add
adc
aam
add
add
adc
mov
or
sub
and
cmp
ret
or
inc
xor
pusha
xor
test
and
mov
sbb
add
or
or
mov
jp
and
inc
or
or
loope
mov
(bad)
and
and
mov
ss
mov
add
and
adc
ret
cmp
add
ror
and
call
and
add
cmp
movs
enter
sbb
add
inc
pop
add
in
repnz
ds
xor
int3
and
adc
and
stos
adc
xor
inc
mov
and
or
add
test
lea
loope
and
push
add
inc
or
push
or
xor
jecxz
aas
jge
inc
or
inc
hlt
sysexit
mov
mov
repnz
sbb
or
and
xor
or
dec
push
mov
jmp
(bad)
adc
ret
mov
retf
mov
sbb
xor
mov
mov
fsub
popa
test
cmp
adc
rol
mov
inc
add
add
sbb
inc
ss
mov
int3
sar
cmp
int3
aas
mov
push
mov
or
add
cmp
clc
sub
and
mov
hlt
adc
dec
inc
ret
not
mov
push
push
push
inc
and
lea
retf
inc
inc
cld
add
dec
xor
dec
jmp
or
pop
and
sbb
add
cld
inc
jns
movs
and
cmp
and
leave
loop
or
mov
pop
ja
push
jbe
push
pushf
ror
xchg
in
(bad)
pop
push
retf
pop
bound
or
cld
call
iret
adc
into
and
xor
mov
sub
pusha
sbb
loope
sub
push
add
mov
push
or
nop
xor
in
or
sbb
add
add
out
jae
js
add
and
inc
mov
inc
ds
cmovge
sbb
or
mov
scas
push
jno
mov
or
sub
lea
rol
stc
cwde
inc
aas
retf
adc
or
adc
dec
jbe
cmp
or
inc
pop
mov
xchg
outs
(bad)
or
or
adc
add
jecxz
ja
add
mov
lds
pusha
sbb
xchg
add
nop
dec
add
jno
or
pop
push
stos
adc
add
cwde
or
sbb
inc
ret
ins
hlt
add
int3
nop
add
aam
push
sbb
sbb
test
aam
push
adc
add
inc
ins
add
or
pop
xchg
cmp
and
bound
es
out
icebp
adc
mov
pop
je
pop
imul
or
add
push
and
and
pop
mov
sub
inc
and
and
bound
or
rol
jo
add
mov
(bad)
in
(bad)
es
fadd
pushf
mov
xor
and
xor
pop
xor
(bad)
rol
aas
nop
ror
add
rcr
dec
test
rol
mov
sub
push
pop
fsub
ds
push
add
add
mov
in
leave
dec
bound
cwde
test
sub
and
inc
or
cmovo
ror
inc
sbb
adc
sbb
sbb
call
mov
or
mov
sub
test
cmp
or
push
jo
sbb
loopne
xor
xor
loope
xchg
js
sub
add
into
pop
cmp
mov
cs
mov
pop
cli
add
loopne
sbb
mov
push
call
pusha
pop
jp
int3
mov
add
icebp
add
add
cmp
sub
cmp
add
fadd
push
push
add
clc
pop
add
and
or
adc
loopne
adc
adc
lock
stos
add
nop
add
adc
vmread
sbb
add
sahf
push
add
ret
cwde
mov
and
pusha
inc
sbb
inc
push
out
pop
mov
or
xlat
mov
mov
jg
and
and
repnz
pop
je
(bad)
aaa
adc
nop
cmp
mov
adc
inc
push
fs
or
inc
mov
stc
mov
mov
adc
adc
and
adc
pop
jns
ret
sub
sbb
test
mov
pop
sti
and
sbb
scas
dec
loop
add
ret
mov
mov
test
add
mov
or
sub
(bad)
pop
ret
pushf
pop
scas
sbb
push
pop
lock
adc
pop
popa
sbb
xor
cmps
push
add
repnz
lods
xchg
shl
sbb
sub
mov
pop
out
out
cs
enter
xchg
ret
push
out
jo
mov
inc
inc
add
or
add
test
or
xor
adc
jmp
add
xchg
sub
sbb
pop
mov
cmp
add
pusha
ret
cwde
sbb
ror
inc
xor
push
test
add
pusha
inc
add
loopne
cmp
sbb
push
add
cmp
push
and
add
and
retf
and
loopne
or
mov
test
mov
or
lahf
enter
(bad)
(bad)
jbe
or
jns
cs
inc
jl
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
cmp
pusha
mov
dec
pushf
dec
jno
aas
add
ret
mov
mov
xor
pop
mov
leave
jg
cwde
cmp
and
or
jmp
adc
repz
push
mov
ret
xchg
cmp
bswap
xchg
xor
test
and
fcomp
cmc
pop
add
retf
es
xchg
mov
int3
mov
clc
push
loope
mov
ret
repnz
adc
mov
cld
adc
(bad)
mov
nop
pop
mov
mov
pusha
xchg
loopne
aas
xchg
imul
push
movs
adc
nop
cmp
xchg
fcom
sub
sysret
push
rol
test
sbb
hlt
test
adc
mov
call
pop
icebp
das
cli
lock
call
pop
popa
jnp
cmova
dec
aaa
or
std
shr
inc
adc
(bad)
call
sbb
mov
add
adc
aas
push
(bad)
ins
je
test
or
inc
inc
mov
xor
(bad)
fdiv
or
xchg
je
mov
add
sub
jle
pusha
test
and
add
adc
inc
jl
push
inc
ss
std
mov
add
or
mov
sub
push
add
cmc
dec
add
jecxz
ret
dec
aas
std
add
ret
or
inc
bound
ror
xchg
or
jae
add
mov
push
or
mov
mov
jb
sbb
mov
inc
ds
fdiv
add
xchg
push
inc
jge
xor
dec
adc
inc
repnz
lock
xchg
les
dec
or
xchg
xor
mov
bts
mov
pushf
add
dec
repnz
cmps
push
and
pop
inc
sub
xor
ss
lds
inc
inc
push
fimul
or
push
xor
into
or
sub
in
ror
or
and
pop
and
ins
or
or
and
adc
aas
aam
ror
sets
mov
push
sbb
xchg
leave
add
inc
or
push
inc
sbb
call
(bad)
adc
fbld
rol
cmp
add
jb
or
nop
and
xor
push
lock
mov
sbb
add
mov
cwde
sub
cmps
inc
mov
or
cs
loopne
iret
add
call
or
les
nop
rol
sbb
movs
cld
jo
or
push
push
jo
xor
cmp
imul
push
mov
add
add
cmp
rol
sbb
ret
adc
cld
inc
enter
arpl
push
in
dec
cmps
and
les
lea
sub
dec
mov
pop
adc
in
xchg
push
repnz
test
inc
enter
lock
and
cmp
or
mov
inc
and
sub
xor
mov
inc
out
push
push
mov
pop
push
mov
or
or
sub
mov
pop
xchg
inc
sbb
movs
mov
pusha
adc
loop
dec
or
xor
ja
(bad)
sub
js
sbb
loopne
aas
data16
adc
xchg
adc
sbb
(bad)
and
adc
add
and
mov
mov
inc
lock
mov
sbb
add
popa
and
add
mov
mov
and
add
pusha
sbb
ror
js
mov
inc
jb
inc
adc
pop
mov
cmp
add
sub
aas
call
pop
fld
xor
or
popa
and
clc
(bad)
cmp
imul
xor
jno
ss
les
xchg
sub
or
dec
and
cmp
and
push
repnz
adc
test
and
cmp
sub
mov
mov
cwde
cmp
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
cmp
ret
mov
mov
loope
sbb
dec
mov
les
inc
sahf
jl
and
(bad)
adc
aas
jl
nop
retf
(bad)
lds
push
add
xchg
adc
inc
bound
and
ins
push
loop
and
cmps
sar
sahf
cmp
cli
scas
dec
mov
ins
test
mov
inc
push
push
lock
fwait
outs
seto
pop
sti
into
int3
mov
mov
or
sahf
int3
and
pop
sbb
into
jg
cmc
push
lods
push
shl
sub
inc
popf
imul
mov
sahf
mov
xor
rol
int
bound
pusha
mov
cmc
mov
fstp
ins
call
call
daa
dec
retf
inc
pushf
clc
xchg
das
js
jnp
nop
adc
rol
in
nop
test
sbb
inc
push
div
lock
dec
mov
inc
rcl
cli
mov
mov
imul
dec
stos
cmps
add
nop
stos
and
cwde
mov
cwde
dec
ds
nop
adc
sbb
int3
rol
adc
cmp
adc
fstp
push
inc
cs
mov
movs
call
jo
or
out
sbb
add
mov
jl
xchg
dec
push
pop
test
add
or
pop
ret
adc
mov
loopne
pop
das
rcl
add
sub
je
retf
sub
int3
adc
push
test
aad
ror
dec
fs
mov
loop
(bad)
inc
add
push
push
icebp
(bad)
aaa
push
les
add
mov
loopne
sub
lods
jae
add
add
pusha
mov
das
(bad)
cld
rol
and
jecxz
sub
push
cld
ret
arpl
adc
adc
shld
lock
les
and
(bad)
ret
sbb
dec
add
fisub
inc
or
add
add
or
test
jmp
ret
iret
inc
sub
jecxz
add
xor
pusha
or
adc
iret
daa
add
arpl
nop
sbb
and
and
mov
test
cmp
pop
inc
push
xchg
aas
sub
sti
cli
repz
(bad)
dec
adc
adc
stos
xchg
and
les
(bad)
sbb
add
mov
sbb
xor
mov
ds
and
test
mov
dec
sub
jl
enter
lock
push
jg
iret
xor
and
int
mov
mov
arpl
or
push
shl
mov
rcr
add
inc
sbb
stc
jecxz
pop
mov
fst
call
sub
and
sbb
mov
out
add
add
es
adc
sub
cmp
jb
and
add
arpl
bound
and
adc
or
cld
js
and
and
pop
test
stc
das
test
lock
mov
in
sub
aas
xor
dec
or
es
(bad)
mov
or
inc
add
cmps
outs
xor
push
xor
adc
and
xor
(bad)
retf
ficom
loopne
je
jns
data16
push
cwde
xrelease
jmp
push
add
or
mov
mov
add
add
inc
sub
dec
fadd
add
call
xchg
loope
and
sbb
lock
jle
and
sub
jo
push
or
xor
and
inc
jo
gs
or
add
ss
pop
dec
clc
loope
movs
pusha
shr
or
or
jecxz
test
xor
sbb
push
int3
add
rcl
push
mov
cmp
or
fmul
push
or
mov
inc
add
add
xor
dec
adc
add
or
sbb
stos
popa
mov
sub
xor
sbb
add
sbb
ret
add
dec
add
or
add
add
or
mov
cmp
push
add
inc
cld
adc
add
or
loopne
adc
mov
mov
cmp
pop
xor
adc
push
add
inc
movs
(bad)
jno
pop
add
add
into
and
cwde
xor
add
sar
add
jb
jg
loopne
(bad)
cmp
clc
inc
nop
cs
adc
or
xchg
add
les
add
ret
xchg
xchg
jmp
inc
data16
xchg
jne
loopne
add
inc
adc
mov
enter
adc
add
add
and
dec
rol
lods
test
sbb
ror
cmc
push
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
sub
mov
sub
jne
cmp
sbb
jmp
adc
dec
call
pop
arpl
or
in
cdq
pop
sbb
jnp
das
ret
jmp
cld
sbb
xchg
aas
cdq
dec
adc
and
xchg
adc
xchg
adc
inc
jg
sub
cli
inc
add
or
and
add
or
xor
test
aas
push
cld
inc
(bad)
repz
adc
rcr
mov
push
stos
push
add
arpl
cmp
and
scas
test
(bad)
lods
add
cld
sub
stc
and
mov
push
sub
or
jl
retf
call
rcr
pop
jmp
ins
ret
cmps
jge
xchg
jb
ret
scas
adc
bound
dec
jno
push
adc
div
gs
sti
jl
add
add
mov
dec
sbb
push
adc
aas
ins
dec
rcl
fst
add
adc
rcr
les
das
push
rol
and
pop
sbb
fadd
pop
sbb
sub
verw
add
inc
adc
lock
ror
fnsave
jno
das
sbb
sbb
mov
adc
mov
aam
ror
imul
jl
xor
cmp
inc
add
aas
pusha
div
inc
adc
pushf
bound
inc
nop
inc
inc
aaa
xchg
sub
and
enter
cs
mov
sub
leave
mov
lea
sub
pusha
jb
dec
or
int3
add
push
push
loope
adc
sub
adc
mov
call
add
or
xor
repnz
add
test
xor
ins
repnz
sbb
sbb
aas
mov
ret
rol
pusha
sbb
mov
shld
je
dec
or
and
mov
and
sbb
enter
and
mov
rol
xchg
(bad)
aas
or
adc
add
adc
ret
pusha
inc
add
nop
call
enter
push
or
add
xor
sbb
call
enter
inc
(bad)
adc
sub
movs
inc
or
cmp
adc
xor
sbb
or
xchg
and
xor
or
dec
push
mov
adc
std
sbb
adc
or
repnz
push
add
or
inc
inc
iret
push
loopne
xor
mov
sbb
add
ss
push
fxch
xor
and
xchg
adc
sub
test
xor
xchg
inc
push
sbb
ss
mov
int3
inc
and
dec
das
xchg
loopne
mov
add
mov
xor
sub
push
or
xor
test
push
cmp
test
sbb
push
call
leave
aas
mov
loop
adc
xor
pop
cs
(bad)
in
bound
or
adc
loop
pushf
xchg
push
adc
dec
arpl
loope
push
bound
add
mov
cld
mov
inc
das
dec
ror
dec
sub
push
sar
mov
pop
ret
xor
and
jmp
rol
mov
add
icebp
sbb
rol
or
outs
cld
sub
inc
sbb
inc
ret
sbb
mov
or
add
add
test
add
adc
add
loope
je
inc
ds
imul
sbb
inc
xchg
aaa
into
xor
and
add
add
scas
xor
add
adc
push
les
adc
cmp
jnp
mov
pop
clc
inc
push
call
add
test
and
inc
add
sub
cmps
rol
jnp
loope
push
cdq
les
and
inc
add
xor
cmp
or
adc
and
xchg
lock
add
retf
inc
and
or
and
sub
lock
fld
or
cdq
popa
jp
xchg
mov
nop
cmp
inc
mov
repz
aaa
nop
add
push
inc
jl
sub
nop
xor
mov
and
es
stc
cmovbe
cmp
leave
push
iret
jae
inc
and
in
out
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
cmp
pusha
mov
dec
pushf
dec
jno
aas
add
ret
mov
mov
xor
pop
mov
leave
jg
cwde
cmp
and
or
jmp
adc
repz
push
mov
ret
xchg
cmp
bswap
xchg
xor
test
and
fcomp
cmc
pop
add
retf
es
xchg
mov
int3
mov
clc
push
loope
mov
ret
repnz
adc
mov
cld
adc
(bad)
mov
nop
pop
mov
mov
pusha
xchg
loopne
aas
xchg
imul
push
movs
adc
nop
cmp
xchg
fcom
sub
sysret
push
rol
test
sbb
hlt
test
adc
mov
call
pop
icebp
das
cli
lock
call
pop
popa
jnp
cmova
dec
aaa
or
std
shr
inc
adc
(bad)
call
sbb
mov
add
adc
aas
push
(bad)
ins
je
test
or
inc
inc
mov
xor
(bad)
fdiv
or
xchg
je
mov
add
sub
jle
pusha
test
and
add
adc
inc
jl
push
inc
ss
std
mov
add
or
mov
sub
push
add
cmc
dec
add
jecxz
ret
dec
aas
std
add
ret
or
inc
bound
ror
xchg
or
jae
add
mov
push
or
mov
mov
jb
sbb
mov
inc
ds
fdiv
add
xchg
push
inc
jge
xor
dec
adc
inc
repnz
lock
xchg
les
dec
or
xchg
xor
mov
bts
mov
pushf
add
dec
repnz
cmps
push
and
pop
inc
sub
xor
ss
lds
inc
inc
push
fimul
or
push
xor
into
or
sub
in
ror
or
and
pop
and
ins
or
or
and
adc
aas
aam
ror
sets
mov
push
sbb
xchg
leave
add
inc
or
push
inc
sbb
call
(bad)
adc
fbld
rol
cmp
add
jb
or
nop
and
xor
push
lock
mov
sbb
add
mov
cwde
sub
cmps
inc
mov
or
cs
loopne
iret
add
call
or
les
nop
rol
sbb
movs
cld
jo
or
push
push
jo
xor
cmp
imul
push
mov
add
add
cmp
rol
sbb
ret
adc
cld
inc
enter
arpl
push
in
dec
cmps
and
les
lea
sub
dec
mov
pop
adc
in
xchg
push
repnz
test
inc
enter
lock
and
cmp
or
mov
inc
and
sub
xor
mov
inc
out
push
push
mov
pop
push
mov
or
or
sub
mov
pop
xchg
inc
sbb
movs
mov
pusha
adc
loop
dec
or
xor
ja
(bad)
sub
js
sbb
loopne
aas
data16
adc
xchg
adc
sbb
(bad)
and
adc
add
and
mov
mov
inc
lock
mov
sbb
add
popa
and
add
mov
mov
and
add
pusha
sbb
ror
js
mov
inc
jb
inc
adc
pop
mov
cmp
add
sub
aas
call
pop
fld
xor
or
popa
and
clc
(bad)
cmp
imul
xor
jno
ss
les
xchg
sub
or
dec
and
cmp
and
push
repnz
adc
test
and
cmp
sub
mov
mov
cwde
cmp
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
cmp
ret
mov
mov
loope
sbb
dec
mov
les
inc
sahf
jl
and
(bad)
adc
aas
jl
nop
retf
(bad)
lds
push
add
xchg
adc
inc
bound
and
ins
push
loop
and
cmps
sar
sahf
cmp
cli
scas
dec
mov
ins
test
mov
inc
push
push
lock
fwait
outs
seto
pop
sti
into
int3
mov
mov
or
sahf
int3
and
pop
sbb
into
jg
cmc
push
lods
push
shl
sub
inc
popf
imul
mov
sahf
mov
xor
rol
int
bound
pusha
mov
cmc
mov
fstp
ins
call
call
daa
dec
retf
inc
pushf
clc
xchg
das
js
jnp
nop
adc
rol
in
nop
test
sbb
inc
push
div
lock
dec
mov
inc
rcl
cli
mov
mov
imul
dec
stos
cmps
add
nop
stos
and
cwde
mov
cwde
dec
ds
nop
adc
sbb
int3
rol
adc
cmp
adc
fstp
push
inc
cs
mov
movs
call
jo
or
out
sbb
add
mov
jl
xchg
dec
push
pop
test
add
or
pop
ret
adc
mov
loopne
pop
das
rcl
add
sub
je
retf
sub
int3
adc
push
test
aad
ror
dec
fs
mov
loop
(bad)
inc
add
push
push
icebp
(bad)
aaa
push
les
add
mov
loopne
sub
lods
jae
add
add
pusha
mov
das
(bad)
cld
rol
and
jecxz
sub
push
cld
ret
arpl
adc
adc
shld
lock
les
and
(bad)
ret
sbb
dec
add
fisub
inc
or
add
add
or
test
jmp
ret
iret
inc
sub
jecxz
add
xor
pusha
or
adc
iret
daa
add
arpl
nop
sbb
and
and
mov
test
cmp
pop
inc
push
xchg
aas
sub
sti
cli
repz
(bad)
dec
adc
adc
stos
xchg
and
les
(bad)
sbb
add
mov
sbb
xor
mov
ds
and
test
mov
dec
sub
jl
enter
lock
push
jg
iret
xor
and
int
mov
mov
arpl
or
push
shl
mov
rcr
add
inc
sbb
stc
jecxz
pop
mov
fst
call
sub
and
sbb
mov
out
add
add
es
adc
sub
cmp
jb
and
add
arpl
bound
and
adc
or
cld
js
and
and
pop
test
stc
das
test
lock
mov
in
sub
aas
xor
dec
or
es
(bad)
mov
or
inc
add
cmps
outs
xor
push
xor
adc
and
xor
(bad)
retf
ficom
loopne
je
jns
data16
push
cwde
xrelease
jmp
push
add
or
mov
mov
add
add
inc
sub
dec
fadd
add
call
xchg
loope
and
sbb
lock
jle
and
sub
jo
push
or
xor
and
inc
jo
gs
or
add
ss
pop
dec
clc
loope
movs
pusha
shr
or
or
jecxz
test
xor
sbb
push
int3
add
rcl
push
mov
cmp
or
fmul
push
or
mov
inc
add
add
xor
dec
adc
add
or
sbb
stos
popa
mov
sub
xor
sbb
add
sbb
ret
add
dec
add
or
add
add
or
mov
cmp
push
add
inc
cld
adc
add
or
loopne
adc
mov
mov
cmp
pop
xor
adc
push
add
inc
movs
(bad)
jno
pop
add
add
into
and
cwde
xor
add
sar
add
jb
jg
loopne
(bad)
cmp
clc
inc
nop
cs
adc
or
xchg
add
les
add
ret
xchg
xchg
jmp
inc
data16
xchg
jne
loopne
add
inc
adc
mov
enter
adc
add
add
and
dec
rol
lods
test
sbb
ror
cmc
push
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
sub
mov
sub
jne
cmp
sbb
jmp
adc
dec
call
pop
arpl
or
in
cdq
pop
sbb
jnp
das
ret
jmp
cld
sbb
xchg
aas
cdq
dec
adc
and
xchg
adc
xchg
adc
inc
jg
sub
cli
inc
add
or
and
add
or
xor
test
aas
push
cld
inc
(bad)
repz
adc
rcr
mov
push
stos
push
add
arpl
cmp
and
scas
test
(bad)
lods
add
cld
sub
stc
and
mov
push
sub
or
jl
retf
call
rcr
pop
jmp
ins
ret
cmps
jge
xchg
jb
ret
scas
adc
bound
dec
jno
push
adc
div
gs
sti
jl
add
add
mov
dec
sbb
push
adc
aas
ins
dec
rcl
fst
add
adc
rcr
les
das
push
rol
and
pop
sbb
fadd
pop
sbb
sub
verw
add
inc
adc
lock
ror
fnsave
jno
das
sbb
sbb
mov
adc
mov
aam
ror
imul
jl
xor
cmp
inc
add
aas
pusha
div
inc
adc
pushf
bound
inc
nop
inc
inc
aaa
xchg
sub
and
enter
cs
mov
sub
leave
mov
lea
sub
pusha
jb
dec
or
int3
add
push
push
loope
adc
sub
adc
mov
call
add
or
xor
repnz
add
test
xor
ins
repnz
sbb
sbb
aas
mov
ret
rol
pusha
sbb
mov
shld
je
dec
or
and
mov
and
sbb
enter
and
mov
rol
xchg
(bad)
aas
or
adc
add
adc
ret
pusha
inc
add
nop
call
enter
push
or
add
xor
sbb
call
enter
inc
(bad)
adc
sub
movs
inc
or
cmp
adc
xor
sbb
or
xchg
and
xor
or
dec
push
mov
adc
std
sbb
adc
or
repnz
push
add
or
inc
inc
iret
push
loopne
xor
mov
sbb
add
ss
push
fxch
xor
and
xchg
adc
sub
test
xor
xchg
inc
push
sbb
ss
mov
int3
inc
and
dec
das
xchg
loopne
mov
add
mov
xor
sub
push
or
xor
test
push
cmp
test
sbb
push
call
leave
aas
mov
loop
adc
xor
pop
cs
(bad)
in
bound
or
adc
loop
pushf
xchg
push
adc
dec
arpl
loope
push
bound
add
mov
cld
mov
inc
das
dec
ror
dec
sub
push
sar
mov
pop
ret
xor
and
jmp
rol
mov
add
icebp
sbb
rol
or
outs
cld
sub
inc
sbb
inc
ret
sbb
mov
or
add
add
test
add
adc
add
loope
je
inc
ds
imul
sbb
inc
xchg
aaa
into
xor
and
add
add
scas
xor
add
adc
push
les
adc
cmp
jnp
mov
pop
clc
inc
push
call
add
test
and
inc
add
sub
cmps
rol
jnp
loope
push
cdq
les
and
inc
add
xor
cmp
or
adc
and
xchg
lock
add
retf
inc
and
or
and
sub
lock
fld
or
cdq
popa
jp
xchg
mov
nop
cmp
inc
mov
repz
aaa
nop
add
push
inc
jl
sub
nop
xor
mov
and
es
stc
cmovbe
cmp
leave
push
iret
jae
inc
and
in
out
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
cmp
pusha
mov
dec
pushf
dec
jno
aas
add
ret
mov
mov
xor
pop
mov
leave
jg
cwde
cmp
and
or
jmp
adc
repz
push
mov
ret
xchg
cmp
bswap
xchg
xor
test
and
fcomp
cmc
pop
add
retf
es
xchg
mov
int3
mov
clc
push
loope
mov
ret
repnz
adc
mov
cld
adc
(bad)
mov
nop
pop
mov
mov
pusha
xchg
loopne
aas
xchg
imul
push
movs
adc
nop
cmp
xchg
fcom
sub
sysret
push
rol
test
sbb
hlt
test
adc
mov
call
pop
icebp
das
cli
lock
call
pop
popa
jnp
cmova
dec
aaa
or
std
shr
inc
adc
(bad)
call
sbb
mov
add
adc
aas
push
(bad)
ins
je
test
or
inc
inc
mov
xor
(bad)
fdiv
or
xchg
je
mov
add
sub
jle
pusha
test
and
add
adc
inc
jl
push
inc
ss
std
mov
add
or
mov
sub
push
add
cmc
dec
add
jecxz
ret
dec
aas
std
add
ret
or
inc
bound
ror
xchg
or
jae
add
mov
push
or
mov
mov
jb
sbb
mov
inc
ds
fdiv
add
xchg
push
inc
jge
xor
dec
adc
inc
repnz
lock
xchg
les
dec
or
xchg
xor
mov
bts
mov
pushf
add
dec
repnz
cmps
push
and
pop
inc
sub
xor
ss
lds
inc
inc
push
fimul
or
push
xor
into
or
sub
in
ror
or
and
pop
and
ins
or
or
and
adc
aas
aam
ror
sets
mov
push
sbb
xchg
leave
add
inc
or
push
inc
sbb
call
(bad)
adc
fbld
rol
cmp
add
jb
or
nop
and
xor
push
lock
mov
sbb
add
mov
cwde
sub
cmps
inc
mov
or
cs
loopne
iret
add
call
or
les
nop
rol
sbb
movs
cld
jo
or
push
push
jo
xor
cmp
imul
push
mov
add
add
cmp
rol
sbb
ret
adc
cld
inc
enter
arpl
push
in
dec
cmps
and
les
lea
sub
dec
mov
pop
adc
in
xchg
push
repnz
test
inc
enter
lock
and
cmp
or
mov
inc
and
sub
xor
mov
inc
out
push
push
mov
pop
push
mov
or
or
sub
mov
pop
xchg
inc
sbb
movs
mov
pusha
adc
loop
dec
or
xor
ja
(bad)
sub
js
sbb
loopne
aas
data16
adc
xchg
adc
sbb
(bad)
and
adc
add
and
mov
mov
inc
lock
mov
sbb
add
popa
and
add
mov
mov
and
add
pusha
sbb
ror
js
mov
inc
jb
inc
adc
pop
mov
cmp
add
sub
aas
call
pop
fld
xor
or
popa
and
clc
(bad)
cmp
imul
xor
jno
ss
les
xchg
sub
or
dec
and
cmp
and
push
repnz
adc
test
and
cmp
sub
mov
mov
cwde
cmp
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
cmp
ret
mov
mov
loope
sbb
dec
mov
les
inc
sahf
jl
and
(bad)
adc
aas
jl
nop
retf
(bad)
lds
push
add
xchg
adc
inc
bound
and
ins
push
loop
and
cmps
sar
sahf
cmp
cli
scas
dec
mov
ins
test
mov
inc
push
push
lock
fwait
outs
seto
pop
sti
into
int3
mov
mov
or
sahf
int3
and
pop
sbb
into
jg
cmc
push
lods
push
shl
sub
inc
popf
imul
mov
sahf
mov
xor
rol
int
bound
pusha
mov
cmc
mov
fstp
ins
call
call
daa
dec
retf
inc
pushf
clc
xchg
das
js
jnp
nop
adc
rol
in
nop
test
sbb
inc
push
div
lock
dec
mov
inc
rcl
cli
mov
mov
imul
dec
stos
cmps
add
nop
stos
and
cwde
mov
cwde
dec
ds
nop
adc
sbb
int3
rol
adc
cmp
adc
fstp
push
inc
cs
mov
movs
call
jo
or
out
sbb
add
mov
jl
xchg
dec
push
pop
test
add
or
pop
ret
adc
mov
loopne
pop
das
rcl
add
sub
je
retf
sub
int3
adc
push
test
aad
ror
dec
fs
mov
loop
(bad)
inc
add
push
push
icebp
(bad)
aaa
push
les
add
mov
loopne
sub
lods
jae
add
add
pusha
mov
das
(bad)
cld
rol
and
jecxz
sub
push
cld
ret
arpl
adc
adc
shld
lock
les
and
(bad)
ret
sbb
dec
add
fisub
inc
or
add
add
or
test
jmp
ret
iret
inc
sub
jecxz
add
xor
pusha
or
adc
iret
daa
add
arpl
nop
sbb
and
and
mov
test
cmp
pop
inc
push
xchg
aas
sub
sti
cli
repz
(bad)
dec
adc
adc
stos
xchg
and
les
(bad)
sbb
add
mov
sbb
xor
mov
ds
and
test
mov
dec
sub
jl
enter
lock
push
jg
iret
xor
and
int
mov
mov
arpl
or
push
shl
mov
rcr
add
inc
sbb
stc
jecxz
pop
mov
fst
call
sub
and
sbb
mov
out
add
add
es
adc
sub
cmp
jb
and
add
arpl
bound
and
adc
or
cld
js
and
and
pop
test
stc
das
test
lock
mov
in
sub
aas
xor
dec
or
es
(bad)
mov
or
inc
add
cmps
outs
xor
push
xor
adc
and
xor
(bad)
retf
ficom
loopne
je
jns
data16
push
cwde
xrelease
jmp
push
add
or
mov
mov
add
add
inc
sub
dec
fadd
add
call
xchg
loope
and
sbb
lock
jle
and
sub
jo
push
or
xor
and
inc
jo
gs
or
add
ss
pop
dec
clc
loope
movs
pusha
shr
or
or
jecxz
test
xor
sbb
push
int3
add
rcl
push
mov
cmp
or
fmul
push
or
mov
inc
add
add
xor
dec
adc
add
or
sbb
stos
popa
mov
sub
xor
sbb
add
sbb
ret
add
dec
add
or
add
add
or
mov
cmp
push
add
inc
cld
adc
add
or
loopne
adc
mov
mov
cmp
pop
xor
adc
push
add
inc
movs
(bad)
jno
pop
add
add
into
and
cwde
xor
add
sar
add
jb
jg
loopne
(bad)
cmp
clc
inc
nop
cs
adc
or
xchg
add
les
add
ret
xchg
xchg
jmp
inc
data16
xchg
jne
loopne
add
inc
adc
mov
enter
adc
add
add
and
dec
rol
lods
test
sbb
ror
cmc
push
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
sub
mov
sub
jne
cmp
sbb
jmp
adc
dec
call
pop
arpl
or
in
cdq
pop
sbb
jnp
das
ret
jmp
cld
sbb
xchg
aas
cdq
dec
adc
and
xchg
adc
xchg
adc
inc
jg
sub
cli
inc
add
or
and
add
or
xor
test
aas
push
cld
inc
(bad)
repz
adc
rcr
mov
push
stos
push
add
arpl
cmp
and
scas
test
(bad)
lods
add
cld
sub
stc
and
mov
push
sub
or
jl
retf
call
rcr
pop
jmp
ins
ret
cmps
jge
xchg
jb
ret
scas
adc
bound
dec
jno
push
adc
div
gs
sti
jl
add
add
mov
dec
sbb
push
adc
aas
ins
dec
rcl
fst
add
adc
rcr
les
das
push
rol
and
pop
sbb
fadd
pop
sbb
sub
verw
add
inc
adc
lock
ror
fnsave
jno
das
sbb
sbb
mov
adc
mov
aam
ror
imul
jl
xor
cmp
inc
add
aas
pusha
div
inc
adc
pushf
bound
inc
nop
inc
inc
aaa
xchg
sub
and
enter
cs
mov
sub
leave
mov
lea
sub
pusha
jb
dec
or
int3
add
push
push
loope
adc
sub
adc
mov
call
add
or
xor
repnz
add
test
xor
ins
repnz
sbb
sbb
aas
mov
ret
rol
pusha
sbb
mov
shld
je
dec
or
and
mov
and
sbb
enter
and
mov
rol
xchg
(bad)
aas
or
adc
add
adc
ret
pusha
inc
add
nop
call
enter
push
or
add
xor
sbb
call
enter
inc
(bad)
adc
sub
movs
inc
or
cmp
adc
xor
sbb
or
xchg
and
xor
or
dec
push
mov
adc
std
sbb
adc
or
repnz
push
add
or
inc
inc
iret
push
loopne
xor
mov
sbb
add
ss
push
fxch
xor
and
xchg
adc
sub
test
xor
xchg
inc
push
sbb
ss
mov
int3
inc
and
dec
das
xchg
loopne
mov
add
mov
xor
sub
push
or
xor
test
push
cmp
test
sbb
push
call
leave
aas
mov
loop
adc
xor
pop
cs
(bad)
in
bound
or
adc
loop
pushf
xchg
push
adc
dec
arpl
loope
push
bound
add
mov
cld
mov
inc
das
dec
ror
dec
sub
push
sar
mov
pop
ret
xor
and
jmp
rol
mov
add
icebp
sbb
rol
or
outs
cld
sub
inc
sbb
inc
ret
sbb
mov
or
add
add
test
add
adc
add
loope
je
inc
ds
imul
sbb
inc
xchg
aaa
into
xor
and
add
add
scas
xor
add
adc
push
les
adc
cmp
jnp
mov
pop
clc
inc
push
call
add
test
and
inc
add
sub
cmps
rol
jnp
loope
push
cdq
les
and
inc
add
xor
cmp
or
adc
and
xchg
lock
add
retf
inc
and
or
and
sub
lock
fld
or
cdq
popa
jp
xchg
mov
nop
cmp
inc
mov
repz
aaa
nop
add
push
inc
jl
sub
nop
xor
mov
and
es
stc
cmovbe
cmp
leave
push
iret
jae
inc
and
in
out
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
cmp
pusha
mov
dec
pushf
dec
jno
aas
add
ret
mov
mov
xor
pop
mov
leave
jg
cwde
cmp
and
or
jmp
adc
repz
push
mov
ret
xchg
cmp
bswap
xchg
xor
test
and
fcomp
cmc
pop
add
retf
es
xchg
mov
int3
mov
clc
push
loope
mov
ret
repnz
adc
mov
cld
adc
(bad)
mov
nop
pop
mov
mov
pusha
xchg
loopne
aas
xchg
imul
push
movs
adc
nop
cmp
xchg
fcom
sub
sysret
push
rol
test
sbb
hlt
test
adc
mov
call
pop
icebp
das
cli
lock
call
pop
popa
jnp
cmova
dec
aaa
or
std
shr
inc
adc
(bad)
call
sbb
mov
add
adc
aas
push
(bad)
ins
je
test
or
inc
inc
mov
xor
(bad)
fdiv
or
xchg
je
mov
add
sub
jle
pusha
test
and
add
adc
inc
jl
push
inc
ss
std
mov
add
or
mov
sub
push
add
cmc
dec
add
jecxz
ret
dec
aas
std
add
ret
or
inc
bound
ror
xchg
or
jae
add
mov
push
or
mov
mov
jb
sbb
mov
inc
ds
fdiv
add
xchg
push
inc
jge
xor
dec
adc
inc
repnz
lock
xchg
les
dec
or
xchg
xor
mov
bts
mov
pushf
add
dec
repnz
cmps
push
and
pop
inc
sub
xor
ss
lds
inc
inc
push
fimul
or
push
xor
into
or
sub
in
ror
or
and
pop
and
ins
or
or
and
adc
aas
aam
ror
sets
mov
push
sbb
xchg
leave
add
inc
or
push
inc
sbb
call
(bad)
adc
fbld
rol
cmp
add
jb
or
nop
and
xor
push
lock
mov
sbb
add
mov
cwde
sub
cmps
inc
mov
or
cs
loopne
iret
add
call
or
les
nop
rol
sbb
movs
cld
jo
or
push
push
jo
xor
cmp
imul
push
mov
add
add
cmp
rol
sbb
ret
adc
cld
inc
enter
arpl
push
in
dec
cmps
and
les
lea
sub
dec
mov
pop
adc
in
xchg
push
repnz
test
inc
enter
lock
and
cmp
or
mov
inc
and
sub
xor
mov
inc
out
push
push
mov
pop
push
mov
or
or
sub
mov
pop
xchg
inc
sbb
movs
mov
pusha
adc
loop
dec
or
xor
ja
(bad)
sub
js
sbb
loopne
aas
data16
adc
xchg
adc
sbb
(bad)
and
adc
add
and
mov
mov
inc
lock
mov
sbb
add
popa
and
add
mov
mov
and
add
pusha
sbb
ror
js
mov
inc
jb
inc
adc
pop
mov
cmp
add
sub
aas
call
pop
fld
xor
or
popa
and
clc
(bad)
cmp
imul
xor
jno
ss
les
xchg
sub
or
dec
and
cmp
and
push
repnz
adc
test
and
cmp
sub
mov
mov
cwde
cmp
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
and
add
inc
dec
sbb
out
dec
xchg
add
repnz
mov
xor
push
sbb
dec
xor
push
cdq
clc
cmps
inc
xchg
rcl
or
retf
mov
dec
xchg
or
cmp
pop
and
and
mov
shl
xchg
cmp
sbb
repnz
inc
stos
inc
push
in
aad
addr16
loopne
add
add
imul
aam
or
stos
in
shl
add
inc
ins
push
cdq
or
lock
add
pop
mov
xchg
and
jae
(bad)
xchg
mov
icebp
lea
cmp
in
nop
add
sbb
cmp
mov
pushf
cmps
mov
add
mov
aas
and
inc
and
dec
je
xchg
xchg
and
stos
rcr
lea
inc
or
push
call
sub
xor
test
les
repz
test
adc
aas
jo
dec
rcr
pusha
jmp
mov
xchg
xchg
and
xchg
jp
jle
xor
enter
repnz
cmp
or
adc
adc
pop
sub
fcom
add
imul
lea
jmp
mov
daa
push
pop
ror
push
int3
add
sub
xor
inc
data16
pop
sbb
pusha
sbb
test
loopne
or
in
test
mov
add
adc
nop
ror
aas
je
xor
and
pop
(bad)
xchg
nop
sbb
cld
lock
inc
xor
movs
inc
mov
pop
push
pop
cmps
les
or
sbb
xor
sbb
add
enter
call
pop
cmps
push
push
sbb
pop
jle
leave
xchg
retf
and
mov
les
loope
push
push
push
cld
push
ret
call
cmc
out
push
test
(bad)
mov
add
lods
fiadd
cmps
inc
and
adc
xor
inc
or
outs
shl
add
pop
add
add
mov
mov
xor
jns
push
or
inc
push
mov
imul
or
lock
movs
add
push
adc
sbb
jb
and
mov
mov
add
mov
cmp
stos
inc
pop
mov
dec
xchg
sub
dec
in
push
sub
or
sbb
cmp
(bad)
and
lods
or
ja
rol
xor
cld
rol
sub
or
and
xchg
lods
inc
add
les
xchg
jno
jno
sub
(bad)
int3
xor
aas
or
mov
mov
add
xor
(bad)
unpckhps
iret
and
loopne
add
sbb
inc
movzx
lock
add
and
(bad)
add
(bad)
aaa
fild
retf
(bad)
jno
push
in
jb
and
adc
les
sti
aas
out
cld
and
and
cmp
sbb
leave
ffreep
xchg
shr
and
push
in
call
push
sbb
mov
push
sbb
or
inc
xor
add
mov
mov
int3
push
or
sbb
or
fdiv
inc
setb
test
or
loopne
xor
sbb
pop
nop
add
push
inc
jno
js
jmp
xor
(bad)
js
push
add
add
stc
add
or
inc
sub
add
add
or
add
or
lock
aas
push
add
push
mov
xor
lahf
nop
outs
cmp
inc
daa
push
add
mov
sbb
sbb
mov
(bad)
adc
inc
jns
jo
add
fs
stc
and
inc
pop
xor
jecxz
cmps
int
leave
shl
repz
or
mov
jne
add
xchg
jae
int
inc
jmp
shl
movs
daa
aam
lds
gs
loopne
add
pop
adc
xchg
inc
inc
pushf
cmp
scas
xor
pop
push
xchg
xchg
shl
retfw
dec
cwde
sub
pusha
cmc
add
or
inc
add
add
or
stos
adc
sub
adc
inc
add
push
mov
push
jecxz
cwde
adc
mov
xchg
sub
loope
ret
push
js
icebp
pop
test
in
push
loopne
nop
adc
scas
xor
ret
xchg
jnp
icebp
(bad)
mov
and
lock
lods
loope
test
add
xchg
cmc
and
mov
pop
repnz
jae
mov
and
repnz
sbb
imul
pusha
popa
or
fdiv
add
pop
in
add
push
nop
push
mov
fsub
std
inc
test
inc
sub
jmp
lock
sbb
addr16
xchg
cwde
cwde
sub
pop
enter
rol
xchg
adc
mov
mov
and
(bad)
inc
xchg
lahf
ja
mov
adc
out
pusha
cld
xor
sbb
lock
pop
sub
adc
or
cmp
mov
sub
and
sar
xchg
leave
or
popf
push
pop
xchg
pop
sub
or
sbb
mov
inc
add
mov
pop
leave
add
add
adc
fld
add
xor
les
and
and
push
sub
jmp
rcr
jge
repz
jno
cld
mov
dec
jmp
and
adc
and
adc
ret
ud0
ror
mov
fstp
and
lods
bound
mov
push
enter
(bad)
fadd
or
push
xor
aas
pop
mov
inc
or
add
inc
pop
jns
pop
jns
ins
sub
dec
bound
mov
mov
sub
sub
xchg
popf
pop
clc
xor
inc
sub
cwde
sti
push
push
push
fs
pusha
inc
add
sub
es
pop
ins
pop
or
loopne
mov
bound
cmps
aas
xor
rcr
adc
or
add
cs
test
add
cmp
nop
pop
adc
and
jo
and
push
icebp
dec
rcr
xchg
retf
mov
add
cmp
cmp
enter
jmp
add
fs
test
call
test
out
add
daa
or
popf
inc
add
adc
mov
adc
ret
leave
cs
lock
(bad)
xchg
leave
sbb
(bad)
cs
in
mov
and
and
mov
sbb
or
or
inc
or
cdq
jl
(bad)
sbb
or
add
mov
out
xor
or
jno
and
das
and
xchg
xor
dec
adc
nop
add
mov
xchg
adc
jp
add
xor
add
and
ret
or
xchg
and
sub
ror
add
xor
jmp
cmp
add
popa
inc
adc
adc
xchg
loope
xor
ret
lock
mov
xchg
in
mov
cld
pusha
pop
ja
add
fs
outs
clc
lock
inc
lahf
add
pop
rol
fs
ror
adc
xor
mov
sbb
mov
pop
mov
add
push
nop
add
xor
or
add
add
jnp
add
in
add
and
or
sar
dec
test
mov
mov
adc
add
enter
fsub
push
adc
(bad)
aas
fiadd
js
inc
or
inc
add
add
dec
inc
adc
adc
push
mov
add
push
cmp
or
test
inc
adc
mov
or
or
aam
movntps
push
xchg
jg
add
mov
and
or
or
ret
daa
cdq
and
sub
test
cmp
add
xor
pop
push
xchg
and
clc
inc
add
and
push
or
or
inc
inc
dec
xor
and
add
or
int3
std
inc
add
or
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
loopne
rol
rol
or
lgdtd
and
add
add
add
popa
xor
sbb
inc
add
and
add
add
and
add
inc
cmp
popa
dec
add
idiv
add
hlt
std
int
push
inc
std
jnp
repnz
add
(bad)
sbb
or
shl
rcl
sar
cmps
add
je
std
push
mov
sahf
outs
pop
xchg
xchg
nop
dec
mov
(bad)
paddsw
(bad)
cld
xchg
xor
pop
push
ret
jmp
enter
cmp
xlat
ret
cdq
stos
jb
inc
jb
call
jo
mov
cld
(bad)
(bad)
out
inc
add
arpl
xchg
push
add
out
mov
fwait
push
lock
push
loope
std
hlt
push
add
stos
sub
mov
lea
lds
cld
mov
(bad)
gs
pop
add
aam
std
xchg
shl
(bad)
lods
sbb
(bad)
mov
cdq
push
(bad)
mov
test
mov
stos
adc
stc
in
dec
add
xlat
sahf
inc
sub
fsubr
xchg
mov
mov
add
jmp
jmp
(bad)
adc
test
push
(bad)
jmp
mov
add
mov
in
push
fdiv
loopne
in
add
arpl
fmul
std
lods
xor
cmc
neg
out
add
mov
aad
test
icebp
cld
out
add
xrelease
out
aam
push
add
movs
xchg
mov
sub
lods
xchg
out
mov
add
push
add
xchg
mov
rcr
frstor
add
cdq
sbb
xchg
mov
mov
cwde
out
mov
pusha
cmp
and
shr
adc
shl
repz
(bad)
mov
fcomip
hlt
lds
mov
cld
out
ret
imul
cwde
repnz
test
mov
push
add
repz
lods
inc
mov
or
lahf
inc
out
repnz
pop
adc
movs
pop
(bad)
jp
mov
sbb
mov
in
mov
mov
push
sar
xchg
(bad)
mov
out
jg
jnp
and
add
jl
dec
clc
pusha
add
push
and
add
out
out
(bad)
outs
add
lods
xor
ins
or
sahf
and
mov
hlt
xchg
adc
mov
lock
loopne
and
mov
mov
(bad)
icebp
mov
push
inc
not
std
nop
add
jae
(bad)
loope
mul
sti
mov
loopne
adc
jle
mov
inc
out
xchg
ja
je
fisubr
add
xchg
jno
jmp
jne
stc
stc
pusha
cmp
repz
adc
push
or
aaa
ss
mov
lds
mov
std
test
(bad)
(bad)
clc
in
add
fidiv
rcl
mov
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
and
inc
sub
add
add
xor
add
inc
std
or
mov
rol
shl
je
and
push
in
sub
add
das
add
and
fbld
retf
add
pop
inc
xor
fwait
adc
xchg
in
xchg
push
call
test
jno
aam
dec
inc
cmp
and
imul
add
dec
sti
add
stos
sub
push
(bad)
mov
idiv
adc
xchg
fs
dec
push
or
vmovntps
push
mov
das
outs
mov
mov
mov
push
push
loope
jl
mov
mov
mov
fdiv
xchg
push
jmp
jmp
lahf
loopne
xor
mov
nop
test
fisub
sub
xor
sbb
lahf
clc
or
sbb
push
xor
inc
in
ins
das
pop
inc
adc
or
sub
cwde
dec
and
fstp
hlt
shl
push
add
mov
sub
dec
cmp
mov
push
adc
fcom
add
xchg
pop
inc
xchg
and
add
dec
shl
ret
mov
pop
pusha
fbld
add
or
mov
and
sub
iret
cmp
and
inc
movs
cmp
sbb
sub
sbb
out
mov
nop
fs
or
hlt
cmp
add
sbb
sbb
and
inc
jl
movs
inc
pushf
pusha
push
iret
sbb
cmp
or
test
xchg
sub
out
add
add
adc
or
jb
and
je
jb
push
in
icebp
xchg
mov
push
pop
xor
add
sahf
call
mov
bound
imul
xor
jo
test
dec
mov
add
inc
stos
push
inc
imul
inc
adc
fld
fcomp
and
sbb
inc
xor
xor
add
dec
push
jno
push
xor
shr
push
add
sub
dec
mov
and
ins
pop
pusha
lea
cmps
data16
rcl
mov
inc
retf
or
(bad)
(bad)
imul
pusha
sub
xlat
mov
mov
fisub
or
(bad)
jge
inc
push
mov
dec
dec
(bad)
ror
out
adc
jnp
xchg
fadd
jl
mov
add
jo
fisub
dec
shl
add
int3
ror
jno
cmc
cwde
pusha
add
add
jg
xor
ret
push
pop
add
(bad)
cmp
les
dec
jnp
ret
inc
retf
jmp
enter
xlat
add
in
or
rcr
test
dec
mov
xor
out
icebp
mov
ficomp
fnsave
mov
dec
pusha
js
mov
cmp
fwait
scas
mov
shl
pop
out
jle
push
or
(bad)
out
pop
and
(bad)
jmp
test
shl
or
fadd
adc
sub
mov
in
pop
pop
loop
and
int3
sub
add
push
lock
shl
call
jmp
pop
lahf
mov
mov
rcr
sbb
pop
repz
fdiv
daa
ds
(bad)
or
or
pop
rol
mov
out
rcr
xlat
xchg
mov
sub
add
inc
mov
mov
ret
jmp
pop
mov
and
jo
test
push
sbb
adc
sbb
fsubp
out
test
cmps
push
test
or
mov
(bad)
add
sbb
(bad)
call
and
pop
test
les
ss
sbb
lock
add
imul
pop
cmps
dec
les
push
adc
sub
outs
xor
xlat
push
ds
sbb
inc
sar
(bad)
mov
cmp
lods
or
lods
mov
add
(bad)
pop
xor
mov
test
or
(bad)
js
jo
and
sbb
test
add
mov
in
xchg
das
dec
dec
aaa
mov
mov
shl
cmp
ins
inc
xchg
loopne
or
dec
dec
cmps
out
pop
out
xchg
add
push
out
ror
jp
sub
and
test
retf
leave
adc
mov
mov
fcom
sahf
or
idiv
cmp
push
push
jl
fcom
das
push
and
ret
lds
mov
popf
dec
jmp
add
fadd
push
inc
push
mov
inc
addr16
rol
push
mov
jae
(bad)
call
nop
ds
adc
imul
xor
add
sub
or
ins
mov
inc
push
dec
or
add
pusha
xor
or
mov
lea
xor
out
sub
scas
add
inc
push
shr
push
(bad)
or
inc
rol
loope
out
xor
jb
ret
fadd
or
sbb
fdiv
cmp
pop
or
add
push
cwde
loope
mov
add
dec
push
mov
ins
nop
sbb
fimul
or
xor
in
add
out
addr16
lock
xchg
mov
add
sbb
nop
jmp
mov
test
aam
push
lahf
mov
je
rol
mov
xchg
call
aam
fsubp
adc
lock
jmp
push
or
mov
add
add
stc
add
or
inc
sub
add
add
push
add
or
add
or
mov
rol
lock
fs
dec
inc
push
call
xor
pop
inc
xchg
mov
(bad)
sbb
jle
or
adc
in
mov
bsf
mov
ss
or
loope
fbstp
movs
mov
jle
(bad)
mov
retf
mov
cmc
in
mov
cwde
rcl
adc
mov
xchg
pop
cmp
sbb
test
mov
ins
(bad)
add
pop
sar
and
pop
lahf
lds
retf
or
sbb
mov
mov
xor
fidivr
xchg
cmc
es
rol
mov
add
imul
fwait
xor
cmc
data16
and
add
out
mov
adc
add
inc
inc
push
push
inc
or
inc
test
lock
and
add
arpl
xor
cld
sti
scas
out
arpl
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
push
mov
sub
xchg
inc
fidivr
add
mov
pop
adc
push
mov
sub
push
add
and
cmp
loop
push
mov
jo
mov
shl
or
sub
aas
xor
sbb
add
fist
mov
inc
cmps
rcl
mov
or
movs
pop
(bad)
jnp
mov
(bad)
fprem
xlat
retf
stos
ror
dec
cld
loopne
rol
mov
pop
push
popf
(bad)
mov
lods
or
inc
bound
fwait
xor
dec
call
int3
mov
mov
test
dec
cwde
ds
cmp
cld
retf
xor
pop
outs
xchg
mov
xchg
sbb
pop
repnz
test
pop
pop
inc
std
sub
lahf
stos
(bad)
not
mov
nop
ds
icebp
das
pop
mov
cmc
lods
test
pop
fwait
xchg
push
sub
iret
rcr
pushf
ror
pop
shr
adc
dec
pop
mov
adc
mov
cmps
das
dec
idiv
(bad)
pop
(bad)
int3
ret
mov
cmp
and
add
pusha
into
psadbw
mov
and
or
and
test
rcr
xchg
fist
data16
add
dec
adc
sub
or
aaa
xchg
cmp
sbb
retf
std
neg
xor
nop
and
inc
rcr
rol
dec
in
xchg
aas
dec
popa
dec
cs
mov
jo
(bad)
or
js
and
in
ret
mov
jmp
ror
rcl
push
or
dec
push
add
inc
jmp
or
adc
add
stc
add
or
inc
sub
add
add
push
add
or
add
or
mov
rcr
les
adc
mov
inc
xchg
pop
pop
fadd
sbb
xchg
fs
loop
xchg
sub
push
cdq
ret
or
test
jae
inc
push
sbb
fild
imul
imul
aaa
jle
pop
imul
xchg
into
stos
push
(bad)
gs
push
sub
push
push
inc
xlat
mov
adc
add
or
mov
shl
ins
xor
call
push
popa
cwde
add
push
popa
fdiv
popa
dec
imul
xor
mul
das
and
pop
inc
sub
mov
cmps
cmps
test
inc
das
retf
ds
mov
xor
mov
add
mov
or
push
loop
sbb
add
hlt
cmp
pop
cmc
lods
mov
fs
push
cs
xchg
nop
inc
call
mov
addr16
add
or
xchg
sub
and
add
(bad)
mov
adc
inc
xor
adc
or
mov
out
and
inc
inc
mov
jns
xchg
add
jne
inc
add
rol
inc
xor
(bad)
pop
add
addr16
dec
add
adc
add
dec
inc
adc
cmp
cmp
push
sbb
xchg
mov
ret
xor
xchg
movs
add
or
xor
cmp
lea
add
in
and
jnp
bound
xchg
lock
nop
adc
adc
push
mov
pop
push
jl
mov
ins
call
jno
nop
lea
jns
inc
pop
adc
or
xchg
call
nop
add
and
add
sbb
mov
bound
int3
and
daa
loope
adc
shl
ror
jno
stos
mov
or
inc
hlt
jp
add
sbb
cmps
add
enter
aam
adc
inc
or
push
pushf
or
cld
or
int3
xor
cld
add
mov
sbb
cmp
int
and
test
repnz
add
scas
mov
iret
mov
add
ins
or
adc
and
add
pop
inc
retf
jmp
test
or
mul
add
xor
(bad)
aas
push
pop
or
sbb
and
stos
loopne
pop
pop
xor
loope
test
inc
sub
xchg
or
lods
inc
sbb
lock
inc
cmp
add
nop
(bad)
loope
enter
dec
adc
es
shr
or
daa
imul
sbb
push
shr
iret
mov
add
xchg
pushf
lock
rol
jecxz
in
cmp
out
mul
dec
mov
ins
mov
pop
and
loop
xchg
jae
lods
inc
push
rol
add
add
ss
pop
jnp
and
rol
jne
adc
call
cdq
movs
call
adc
mov
mov
popf
ss
dec
or
xchg
call
pop
rol
sbb
and
daa
in
pop
test
dec
daa
push
pushf
xor
pushf
inc
scas
push
push
sbb
jb
aas
stos
and
add
add
(bad)
(bad)
cmp
push
lods
lsl
dec
and
pusha
and
pop
ret
inc
push
mov
add
test
or
and
or
push
ret
inc
pop
stc
or
shl
push
push
and
and
add
or
inc
sub
add
add
add
or
add
or
mov
rol
pusha
mov
dec
cdq
jb
rol
adc
push
sbb
add
xchg
mov
cdq
pop
sbb
in
mov
test
cmp
mov
repz
loopne
ja
xchg
(bad)
and
dec
add
or
xchg
mov
(bad)
mov
mov
mov
xor
jb
pop
mov
inc
inc
test
add
enter
call
sbb
nop
or
mov
in
push
pop
ret
push
xchg
loop
fwait
adc
sbb
pop
xor
movs
pop
and
mov
pushf
(bad)
sbb
sub
cli
cmps
cmps
pop
and
mov
std
jecxz
push
cmps
rcr
int
xor
ss
jmp
adc
sbb
cmp
adc
dec
or
leave
mov
fdiv
cs
mov
add
in
fmul
push
push
xchg
adc
pusha
and
sahf
cld
and
add
mov
inc
mov
std
mov
inc
push
pop
fld
(bad)
aas
clc
in
dec
add
mov
jo
push
sub
or
mov
xor
cmp
inc
add
inc
mov
js
add
(bad)
shl
daa
test
and
push
inc
mov
lock
in
sar
(bad)
in
loope
add
or
enter
icebp
dec
or
pusha
inc
adc
add
pop
or
enter
inc
mov
jl
add
mov
int3
es
sub
push
add
(bad)
icebp
invd
jb
shr
or
adc
gs
syscall
call
jmp
add
cmp
pop
cwde
or
inc
adc
or
movs
inc
and
pop
ins
retf
xor
mov
adc
fsubr
mov
add
ds
mov
dec
xor
dec
cli
and
aas
je
xchg
push
and
inc
jmp
mov
mov
mov
clc
arpl
inc
adc
ins
mov
and
inc
and
mov
mov
add
mov
(bad)
and
sbb
sbb
mov
mov
iret
or
jno
push
sub
inc
mov
and
aas
dec
popa
inc
xchg
add
arpl
and
xor
inc
and
cld
inc
cmps
and
mov
movs
mov
bound
sub
and
add
sar
iret
and
daa
or
sbb
or
cmc
out
mov
gs
inc
mov
push
and
add
je
cli
psubusb
cs
inc
sbb
xchg
sub
jmp
add
movs
add
test
dec
dec
inc
ds
cs
inc
add
mov
call
adc
xor
add
aam
mov
sbb
jle
pushf
xchg
retf
fld
test
mov
push
mov
retf
cmp
fld
pop
adc
push
inc
mov
add
dec
mov
mov
mov
cmp
or
and
std
rol
push
pop
stos
xchg
inc
add
data16
stc
xlat
arpl
or
inc
and
mov
ret
(bad)
enter
add
add
loopne
or
sbb
nop
lea
lock
leave
(bad)
loope
push
push
or
into
and
push
unpcklps
jmp
jge
inc
adc
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
rol
inc
sbb
xchg
and
push
add
sub
daa
mov
adc
adc
mov
add
mov
mov
and
dec
fdiv
xor
and
push
jo
cmp
sub
push
mov
cmp
inc
push
mov
aaa
mov
test
test
es
push
push
push
scas
cwde
dec
ins
cmp
(bad)
jp
lea
into
aas
lods
add
inc
mov
(bad)
add
sets
jp
mov
mov
cwde
inc
add
mov
fsubp
int3
std
xchg
push
push
movs
sbb
(bad)
frstor
aas
mov
add
popa
xor
ins
test
sub
packssdw
out
xchg
add
push
imul
or
jg
(bad)
sbb
add
std
repz
stos
out
fdiv
xchg
add
or
pop
add
adc
aaa
add
clc
xor
or
cmp
mov
add
js
jo
nop
add
inc
and
sbb
add
or
add
push
in
mov
mov
rol
jmp
xor
adc
add
xor
xchg
mov
inc
and
push
mov
mov
and
fbld
or
es
add
jmp
shl
push
xchg
xor
pop
push
sbb
add
add
sbb
sets
jnp
mov
pushf
or
mov
add
or
sbb
imul
sbb
cmps
mov
shl
xchg
popa
call
sar
les
enter
mov
inc
rol
pusha
inc
nop
and
sbb
(bad)
mov
push
and
aas
xchg
out
add
mov
aaa
dec
sbb
imul
cmp
femms
xchg
dec
mov
cmp
iret
xor
push
and
sub
sub
push
push
jmp
in
stos
cdq
icebp
(bad)
jae
adc
pop
and
outs
mov
mov
jmp
add
add
xor
imul
je
scas
pop
push
nop
lock
and
sub
pushf
add
ds
repnz
sbb
inc
hlt
and
or
ret
adc
addr16
sub
add
mov
nop
mov
test
scas
mov
and
dec
mov
daa
sbb
jo
add
cmp
adc
ror
adc
cmps
out
int3
icebp
or
adc
enter
mov
inc
(bad)
mov
sbb
cmp
sub
xchg
xor
adc
xchg
mov
lods
(bad)
or
sub
inc
add
cmp
(bad)
xor
inc
mov
fiadd
mov
inc
push
es
and
add
movs
mov
and
mov
scas
mov
jmp
jl
stc
sbb
mov
push
xchg
stos
mov
fwait
inc
jg
ss
and
dec
mov
mov
ret
add
call
add
mov
or
ins
into
jl
add
nop
les
or
add
mov
add
add
inc
inc
std
(bad)
cmps
add
add
sbb
and
or
or
or
sub
add
inc
std
mov
add
nop
test
stos
add
adc
(bad)
arpl
mov
mov
add
mov
mov
dec
add
lock
sub
or
nop
xor
sub
add
and
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
shr
or
cld
aaa
pusha
fwait
shl
pushf
dec
mov
lds
add
pop
dec
pop
jo
shr
or
jg
adc
les
adc
shl
jle
xor
cmp
push
inc
hlt
lahf
xchg
ds
in
out
and
push
sub
xor
adc
jb
adc
pop
scas
stos
push
and
dec
add
mov
mov
imul
and
and
in
retf
push
inc
add
or
mov
sbb
out
mov
popa
jno
cli
mov
arpl
dec
sbb
pop
mov
mov
repnz
pusha
push
xor
inc
cli
ja
mov
or
jge
mov
out
(bad)
mov
jmp
popa
clc
jo
pop
push
mov
push
add
test
int3
lock
sti
dec
out
fcomp
test
ds
int
movs
mov
or
or
add
xlat
adc
sbb
or
adc
jo
leave
adc
add
cmp
bndstx
add
or
hlt
iret
daa
xor
and
ins
clc
inc
xchg
jmp
dec
mov
stc
and
or
pushf
nop
inc
jg
pop
xor
pop
sbb
mov
clc
fadd
xchg
aam
inc
sub
xor
les
outs
(bad)
shl
sub
sbb
int3
mov
adc
xchg
jmp
push
idiv
jecxz
pop
jns
imul
or
and
push
and
adc
lock
inc
ss
nop
shl
sub
mov
mov
aas
adc
sbb
adc
or
add
xchg
jle
(bad)
push
jmp
jo
imul
adc
icebp
(bad)
xor
(bad)
stos
mov
xor
and
hlt
fiadd
inc
adc
add
cs
mov
push
repnz
cs
test
cs
jmp
add
add
dec
add
adc
xor
mov
inc
jo
adc
je
add
xor
dec
cmp
ror
xor
sbb
loop
inc
adc
inc
push
add
inc
add
add
iret
or
or
jmp
or
je
enter
add
jno
inc
(bad)
sbb
sbb
sti
add
push
and
and
add
xchg
xchg
xchg
fnstsw
rol
xchg
sub
push
jmp
and
ins
xchg
aas
or
pop
push
sbb
sbb
mov
add
pushf
nop
pop
and
cmp
xchg
dec
clc
ret
pop
or
adc
add
popf
and
clc
shl
fs
mov
aad
inc
adc
dec
push
rol
pop
jbe
cwde
es
sar
lea
(bad)
pop
mov
adc
les
dec
push
je
shl
sub
repz
ds
or
mov
jle
inc
pop
xchg
aas
shl
or
sub
sub
and
hlt
xchg
aas
loop
daa
push
sbb
or
ret
add
mov
sub
add
sub
xor
std
adc
mov
xchg
mov
sub
test
js
add
inc
rol
loopne
dec
movs
ret
imul
rcl
retf
dec
pop
add
sar
add
ret
es
sub
lock
and
or
retf
push
mov
sub
push
mov
add
xchg
cmp
push
clc
xor
jbe
mov
ins
sbb
add
xchg
add
and
outs
dec
inc
adc
nop
movs
sub
dec
out
test
jbe
dec
ds
aas
daa
jmp
sub
adc
and
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
rcr
mov
push
imul
mov
lds
xor
xchg
ins
(bad)
sbb
mov
in
adc
cmps
int3
and
mov
xor
inc
gs
stos
jg
sub
test
push
fldenv
movs
js
les
pop
fwait
ds
or
mov
aad
movs
call
or
fsub
and
push
xchg
mov
mov
pop
sub
dec
sbb
mov
lock
(bad)
mov
mov
pop
loopne
or
daa
inc
fisub
pop
lahf
add
xor
fs
push
sub
in
lds
mov
mov
ret
enter
mov
xchg
jmp
cmp
jmp
and
add
xor
pop
ret
pop
cs
mov
retf
xchg
inc
pop
mov
mov
and
ror
les
aas
dec
and
pop
add
inc
fiadd
cld
xchg
or
adc
add
push
adc
add
jecxz
adc
cmps
je
sbb
call
loopne
push
adc
sub
test
dec
push
or
cmp
ret
xchg
pop
mov
mov
sbb
sbb
clc
push
add
pop
xor
mov
inc
add
dec
(bad)
rol
dec
dec
inc
adc
add
cmp
mov
pusha
retf
ins
jae
lahf
outs
xchg
mov
xchg
xchg
ror
add
push
push
add
sbb
sub
push
add
inc
xor
sub
std
ror
(bad)
and
push
(bad)
xor
rol
inc
pop
call
pop
cmp
movs
pop
pop
xor
bsf
or
jbe
or
xchg
loopne
or
int3
rol
mov
mov
ret
xor
jne
xchg
iret
fs
lods
fwait
mov
mov
test
sbb
push
data16
iret
xor
mov
xor
mov
outs
jmp
sub
adc
clc
fs
adc
jmp
mov
or
dec
outs
sbb
cmp
xor
mov
or
clc
sbb
mov
lds
inc
cmp
xor
outs
push
rcr
cld
and
(bad)
sbb
sub
das
sti
shr
add
mov
mov
mov
add
sbb
sbb
or
shl
jecxz
xlat
adc
daa
inc
ins
ror
push
add
pop
lock
or
xchg
add
sbb
arpl
stos
adc
sub
(bad)
fdiv
push
push
or
mov
mov
loope
mov
fld
push
inc
in
push
(bad)
loope
mov
jnp
mov
inc
vprotq
dec
test
(bad)
push
xchg
mov
popf
aas
popf
sbb
ret
mov
mov
sub
test
js
push
dec
inc
ds
mov
mov
imul
sub
out
iret
xchg
stos
mov
das
mov
fisub
cli
loop
cmp
or
addr16
mov
scas
or
add
pop
xor
loope
jnp
mov
fidiv
fwait
lods
mov
test
nop
(bad)
sti
add
add
push
push
mov
xor
push
stc
mov
cdq
rol
repz
(bad)
mov
inc
ror
push
call
xor
data16
mov
arpl
sbb
mov
mov
inc
cmp
mov
xchg
nop
and
inc
mov
sbb
loope
add
add
and
add
sub
inc
sub
add
add
and
add
inc
dec
sbb
mov
shr
or
(bad)
shl
imul
mov
in
mov
jg
push
mov
or
sar
loopne
sbb
adc
xchg
push
or
hlt
out
add
fmul
adc
loop
lahf
fwait
or
add
sar
popf
adc
push
cmps
mov
adc
mov
mov
xchg
sbb
add
(bad)
fnsave
repz
add
or
fiadd
sbb
or
(bad)
pop
sub
cmp
stc
fild
in
fcom
sub
or
mov
jae
and
inc
stos
adc
jnp
jb
cwde
mov
xchg
sbb
scas
xlat
or
ins
cmp
inc
add
std
xchg
pop
cld
js
and
or
push
mov
pop
mov
std
stc
mov
fadd
mov
icebp
repz
(bad)
and
add
mov
fdiv
or
adc
inc
inc
jmp
popf
rol
push
and
aas
push
mov
inc
cmp
sub
add
mov
and
and
push
inc
adc
dec
and
fistp
jecxz
aam
(bad)
mov
inc
or
inc
inc
stos
xlat
xchg
sbb
and
push
addr16
inc
rcl
dec
push
inc
adc
sbb
or
(bad)
xor
cwde
lock
adc
lods
push
dec
sub
push
dec
jbe
lods
stc
rcr
pop
pop
jno
adc
xor
add
in
es
sbb
daa
inc
push
(bad)
ror
pop
retf
xchg
sbb
pop
fwait
adc
out
pop
mov
daa
adc
push
movs
dec
nop
adc
js
sub
sbb
mov
pop
stos
mov
or
sub
scas
mov
jnp
test
div
stos
ins
test
cli
mov
sti
in
movs
ror
call
outs
mov
mov
scas
hlt
push
mov
mov
cmp
and
push
rol
rol
or
lgdtd
dec
add
add
popa
xor
sbb
inc
add
xlat
dec
add
ins
je
add
dec
add
inc
dec
inc
cmp
popa
xor
xor
sti
icebp
dec
ret
icebp
dec
add
shl
scas
mov
(bad)
inc
stos
scas
pusha
pop
pop
mov
add
lods
add
clc
scas
mov
push
(bad)
inc
out
jmp
nop
xchg
rcl
hlt
std
fcom
ret
nop
(bad)
out
cld
mov
mov
mov
retf
enter
pop
jmp
adc
or
or
gs
cld
(bad)
dec
add
jnp
xchg
or
fidiv
jmp
adc
add
pop
add
add
xor
(bad)
lds
add
(bad)
jmp
xlat
add
(bad)
fldcw
inc
add
cmp
stc
hlt
in
rol
lods
jbe
mov
add
xlat
push
jecxz
add
daa
add
test
add
bnd
add
aad
mov
add
sub
(bad)
scas
test
dec
xor
mov
(bad)
leave
fsub
repnz
(bad)
fistp
jmp
cwde
in
(bad)
fld
mov
xchg
add
leave
push
std
cmp
adc
cld
out
lea
xadd
or
cmps
add
cld
lds
add
imul
repnz
fistp
(bad)
mov
(bad)
sub
int
mov
sahf
stos
ja
xlat
ret
dec
enter
in
dec
cmp
mov
stos
js
fwait
adc
in
mov
sar
(bad)
dec
jl
retf
sbb
aas
adc
es
scas
popa
aaa
cli
out
aad
int3
popa
add
imul
(bad)
out
lahf
add
add
mov
sbb
mov
ror
aad
popf
lahf
in
push
cld
jmp
(bad)
mov
stc
sti
cli
xchg
sub
cli
call
in
add
(bad)
dec
or
paddsw
xor
in
lock
pushf
sbb
retf
loop
xchg
mov
adc
in
(bad)
ror
mov
(bad)
in
or
or
cmc
repnz
cld
repnz
shl
cwde
int
add
stc
(bad)
cld
hlt
std
xchg
push
adc
mov
(bad)
mov
sbb
add
pop
sbb
mov
jecxz
aad
ror
(bad)
lods
pop
fistp
lock
sub
in
test
es
lods
add
test
out
add
mov
cmc
fst
repz
or
ins
sbb
in
adc
loopne
xor
adc
mov
js
js
mov
mov
lock
pop
sbb
mov
add
stos
adc
or
mov
(bad)
scas
add
idiv
cmc
movs
or
(bad)
dec
dec
dec
lock
in
jbe
fst
push
push
and
and
les
lods
bound
imul
add
pop
sbb
rol
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
add
or
mov
rol
mov
inc
dec
loop
inc
js
rcr
jg
sbb
fs
std
adc
hlt
xchg
mov
cmps
lea
ja
cdq
gs
sub
hlt
xchg
cmp
(bad)
cli
mov
mov
and
stc
and
rcr
bound
test
add
add
pop
call
daa
push
jl
xchg
cmc
or
push
sbb
(bad)
jl
cli
jns
mov
(bad)
cmp
(bad)
out
mov
add
push
mov
fs
nop
and
aam
jg
inc
inc
or
in
mov
jge
jb
sub
xchg
or
mov
pop
cmp
daa
dec
sbb
sahf
fs
xchg
xor
loopne
scas
iret
mov
mov
inc
mov
mov
jns
out
(bad)
test
mov
add
xor
mov
dec
xchg
dec
hlt
jecxz
mov
rcl
test
nop
pop
or
jp
xchg
mov
and
mov
dec
and
cmp
int3
or
lea
xor
add
add
inc
pop
inc
lods
ret
add
pushf
jb
or
add
inc
xchg
xchg
inc
mov
sbb
loopne
mov
add
sub
hlt
pusha
inc
adc
aaa
jecxz
xor
or
mov
add
out
mov
dec
inc
xchg
pusha
inc
dec
add
rol
ss
add
add
sbb
and
add
inc
pop
loopne
test
fs
fcom
jge
inc
test
or
jecxz
add
mov
out
(bad)
loopne
mov
clc
and
les
add
test
shl
outs
cmp
rcl
xor
call
test
add
sub
dec
add
dec
cwde
add
and
cmp
dec
xchg
dec
dec
xchg
push
add
stos
pusha
jno
or
cld
shl
inc
pop
add
lock
jg
jo
adc
mov
pusha
jo
sbb
mov
jp
cs
cmp
inc
sub
retf
push
inc
shr
and
add
sub
shr
push
repnz
mov
adc
retf
xor
xor
or
cmp
or
jmp
dec
lods
aas
push
mov
(bad)
adc
or
nop
sub
dec
sub
sbb
nop
daa
push
or
cmp
mov
mov
jp
adc
test
inc
adc
retf
in
add
pushf
xor
lahf
inc
or
add
and
les
sbb
ror
mov
(bad)
push
rol
and
lods
add
or
mov
stos
inc
lds
and
xchg
xchg
mov
pcmpeqb
mov
mov
rol
xchg
aam
aaa
(bad)
or
inc
(bad)
adc
rol
sbb
mov
inc
jp
mov
lock
or
popf
scas
ret
les
mov
pop
popa
test
and
scas
(bad)
sbb
xor
push
std
in
lods
xor
sti
adc
push
mov
add
ror
adc
aaa
icebp
or
jae
cmp
adc
sub
xchg
(bad)
mov
adc
and
inc
sbb
add
pusha
and
dec
sub
inc
pop
push
jb
push
sar
popa
mov
mov
mov
into
stos
ja
or
ret
sub
mov
sbb
sbb
xor
popf
xor
ror
sbb
push
sbb
and
inc
mov
data16
popf
andps
xor
inc
or
mov
xor
xchg
adc
inc
jo
sbb
or
xchg
adc
add
jge
xchg
or
mov
js
sub
xor
clc
pusha
adc
jno
nop
jp
xor
lods
movs
add
stos
loope
xor
js
sbb
mov
popa
adc
add
mov
out
test
push
push
sbb
adc
dec
xchg
dec
and
mov
or
rol
and
jb
or
ss
sbb
into
movs
mov
sbb
push
aas
sub
xor
push
(bad)
pop
rcl
push
pop
and
add
rcl
push
xor
inc
sbb
jl
mov
test
xor
pop
shl
adc
idiv
repnz
ss
sub
xchg
les
adc
xor
adc
shl
movs
nop
pusha
xor
call
gs
sub
jmp
push
inc
jns
or
fwait
add
js
sub
mov
xor
dec
jo
inc
adc
js
dec
or
loop
add
clts
mov
push
ins
bound
aas
and
dec
stos
sbb
fild
push
xor
xchg
ret
dec
add
jb
adc
hlt
or
ret
or
(bad)
jno
inc
push
push
pusha
out
push
push
pusha
les
push
mov
add
add
inc
sbb
cmp
jo
inc
adc
lods
push
push
test
cmp
add
inc
add
sub
loopne
adc
push
aaa
nop
sar
sub
xor
or
cmp
mov
and
rol
and
jo
mov
dec
pusha
add
pusha
or
popa
xor
mov
jno
pusha
xor
test
stos
mov
enter
rol
rcr
rol
adc
mov
imul
fsub
pop
popf
xchg
xchg
movs
push
loope
and
xor
sbb
bound
and
sub
fdivr
mov
add
push
in
dec
sbb
add
fist
and
add
pusha
mov
xor
or
test
sub
push
add
(bad)
xchg
imul
cmp
inc
xchg
push
add
lods
add
xchg
rol
arpl
pusha
add
push
add
push
push
lds
xchg
int
ins
mov
rol
icebp
test
jl
or
popa
add
and
cld
add
rcl
push
pop
rcr
test
add
or
add
inc
pop
push
jo
pop
stos
test
adc
add
(bad)
adc
pusha
add
jo
mov
inc
push
(bad)
icebp
or
clc
or
js
or
mov
adc
mov
cmp
ins
js
adc
push
mov
(bad)
test
cmp
inc
jbe
mov
movs
call
jo
xadd
mov
mov
add
mov
add
inc
(bad)
ror
or
and
add
add
inc
sub
add
add
add
add
or
mov
rol
mov
rol
loop
mov
adc
push
or
cwde
cdq
lds
ret
(bad)
mov
hlt
(bad)
arpl
ds
test
mov
dec
mov
jo
(bad)
lahf
pop
jg
cli
mov
test
loope
jg
xchg
mov
and
lahf
mov
xchg
clc
pusha
add
lea
movs
push
aas
mov
inc
shr
es
mov
xor
xor
push
movs
dec
imul
mov
pop
bound
mov
push
mov
mov
xchg
push
repz
add
js
or
xchg
push
ds
cmc
jecxz
xchg
mov
movs
pop
sub
dec
mov
mov
sub
push
pop
jns
nop
gs
sahf
xchg
test
pop
mov
adc
adc
outs
mov
fwait
in
scas
mov
(bad)
jmp
mov
mov
push
or
in
lock
mov
scas
movs
das
push
pusha
jle
jmp
cmp
add
add
call
and
xor
mov
add
add
or
add
xor
(bad)
sbb
and
add
xchg
in
aas
pop
mov
mov
mov
mov
pop
xor
bound
fmul
ds
and
or
clc
and
dec
mov
shl
inc
and
mov
jl
(bad)
dec
sbb
adc
and
cld
xor
add
inc
inc
mov
add
out
pop
mov
or
std
adc
or
adc
adc
shl
lock
mov
push
icebp
test
add
mov
ror
adc
xchg
add
or
mov
pop
cmps
mov
and
aas
and
inc
add
pop
test
sbb
sub
test
or
pop
scas
jl
dec
movs
mov
xchg
add
test
inc
inc
add
scas
mov
push
sub
stos
bound
pop
movs
icebp
xor
add
push
sbb
ror
adc
push
loopne
mov
scas
daa
xchg
jmp
nop
and
sbb
adc
sbb
inc
popa
nop
push
les
or
or
fwait
retf
pusha
and
push
into
nop
rol
cmp
xor
cli
jp
scas
or
test
mov
add
enter
or
sub
fwait
add
je
xchg
daa
stos
test
inc
and
int3
out
inc
rcr
cmp
sub
(bad)
adc
cmc
xor
mov
xchg
pop
aam
scas
pop
leave
mov
adc
fsubr
inc
and
adc
and
jns
add
inc
dec
sub
xor
xor
retf
hlt
loopne
add
pop
mov
lahf
pushf
xor
nop
sbb
push
xchg
dec
add
sub
and
and
les
cmps
out
sub
fsub
add
test
add
icebp
iret
daa
sub
enter
ret
dec
lods
loop
loopne
push
push
ret
or
pop
add
adc
add
addr16
dec
adc
rcl
inc
and
shl
loope
out
dec
jnp
pop
sub
rol
sbb
daa
lahf
add
cmp
nop
es
sar
or
mov
add
push
ret
mov
fistp
bound
sbb
test
add
add
cmp
inc
add
dec
adc
add
dec
inc
adc
cld
inc
add
add
cmp
loop
xlat
and
daa
stc
sub
shl
add
inc
xor
xchg
adc
xor
arpl
mov
and
rcl
inc
adc
gs
loop
sahf
cmps
add
lock
enter
sbb
fiadd
outs
rol
pop
adc
push
pop
xor
dec
adc
rol
pop
xor
mov
inc
xor
sub
adc
mov
inc
adc
and
or
xchg
inc
enter
rol
adc
nop
inc
sub
add
inc
sbb
and
adc
fistp
xchg
mov
cmps
sub
pop
adc
rol
ins
mov
aas
ss
fs
xchg
pop
xor
push
jbe
test
cmp
shl
or
test
sub
dec
jbe
cdq
arpl
xchg
ds
or
add
dec
loopne
ss
add
push
mov
retf
or
or
or
cmp
cmp
lock
and
lds
sub
popa
xchg
push
mov
jbe
or
outs
pop
ret
sub
inc
xor
and
add
ror
mov
cs
(bad)
mov
and
ss
or
test
cmp
inc
add
dec
fld
add
loopne
cmp
or
mov
add
or
pop
cmp
rol
int3
loopne
push
lods
inc
sbb
inc
jo
pcmpeqb
lods
pop
jno
sbb
jp
sub
mov
push
rcr
add
pop
clc
inc
or
mov
add
loop
pop
push
xor
pusha
or
sbb
sub
or
and
jg
mov
loope
retf
push
push
or
test
add
mov
test
int3
inc
sub
icebp
pop
cs
test
xor
or
add
sub
mov
or
adc
mov
pop
(bad)
push
inc
popa
xor
and
cmp
jb
xor
mov
scas
ja
adc
add
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
jbe
(bad)
adc
ret
xchg
xor
ja
pop
pop
mov
pop
call
push
xor
inc
or
mov
(bad)
mov
or
psubd
dec
xchg
cli
mov
mov
std
(bad)
in
jns
pusha
and
out
std
mov
sub
ds
add
movs
sbb
inc
mov
loop
mov
jmp
rcl
mov
in
pop
xchg
gs
jnp
in
or
mov
(bad)
sub
(bad)
stc
loope
out
sbb
test
xchg
shl
sbb
add
fistp
push
xchg
or
dec
out
add
and
sub
sbb
jp
xchg
call
inc
(bad)
js
movs
loopne
xor
add
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
jg
(bad)
and
mov
ds
cmp
sub
mov
ret
add
js
and
test
pusha
xchg
jg
cs
mov
fs
xchg
push
mov
mov
mov
xchg
mov
fidiv
cmp
mov
nop
push
js
or
mov
jg
cld
mov
mov
pop
mov
sbb
lods
shr
iret
sub
jle
and
ins
xchg
pop
add
sub
or
cwde
sar
add
int
jno
lahf
mov
sub
mov
xadd
outs
lea
bound
jg
scas
cli
stc
out
mov
int3
add
out
xor
ror
scas
add
or
sbb
stc
add
add
inc
sub
add
add
adc
add
mov
dec
mov
shl
mov
mov
jmp
iret
mov
mov
xchg
pop
scas
mov
sbb
cdq
in
mov
ss
adc
sbb
cli
sbb
retf
xchg
mov
(bad)
cmp
js
repz
mov
xchg
clc
shl
sub
mov
adc
aaa
leave
inc
mov
cli
ja
ffreep
mov
retf
aas
adc
inc
adc
adc
jle
inc
xor
pop
mov
pop
mov
(bad)
mov
inc
dec
(bad)
sub
lock
fs
xchg
(bad)
(bad)
adc
test
inc
icebp
scas
xchg
push
mov
xor
and
loopne
xchg
fldenv
add
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
jbe
(bad)
adc
ret
xchg
xor
ja
pop
pop
mov
pop
call
push
xor
inc
or
mov
(bad)
mov
or
psubd
dec
xchg
cli
mov
mov
std
(bad)
in
jns
pusha
and
out
std
mov
sub
ds
add
movs
sbb
inc
mov
loop
mov
jmp
rcl
mov
in
pop
xchg
gs
jnp
in
or
mov
fcmovnu
ins
push
add
or
cmp
sti
loopne
adc
adc
mov
ret
pop
in
or
sub
jbe
adc
push
call
add
popa
and
test
push
mov
mulps
inc
lods
push
call
mov
push
jne
or
je
or
add
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
jg
(bad)
and
mov
ds
cmp
sub
mov
ret
add
js
and
test
pusha
xchg
jg
cs
mov
fs
xchg
push
mov
mov
mov
xchg
mov
fidiv
cmp
mov
nop
push
js
or
mov
jg
cld
mov
mov
pop
mov
sbb
lods
shr
iret
sub
jle
and
ins
(bad)
push
push
pop
mov
add
gs
jns
clc
daa
in
outs
or
loopne
imul
lods
push
inc
mov
aas
(bad)
cld
fisubr
pop
sub
xchg
cs
or
loope
xchg
mov
and
add
add
inc
sub
add
add
adc
add
mov
dec
mov
shl
mov
mov
jmp
iret
mov
mov
xchg
pop
scas
mov
sbb
cdq
in
mov
ss
adc
sbb
cli
sbb
retf
xchg
mov
(bad)
cmp
js
repz
mov
xchg
clc
shl
sub
mov
adc
aaa
leave
inc
mov
cli
ja
ffreep
mov
retf
aas
adc
inc
adc
adc
jle
inc
xor
pop
mov
pop
mov
(bad)
mov
inc
dec
(bad)
sub
lock
fs
xchg
(bad)
(bad)
adc
test
inc
icebp
scas
xchg
push
mov
xor
and
pusha
rcl
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
jbe
(bad)
adc
ret
xchg
xor
ja
pop
pop
mov
pop
call
push
xor
inc
or
mov
(bad)
mov
or
psubd
dec
xchg
cli
mov
mov
std
(bad)
in
jns
pusha
and
out
std
mov
sub
ds
add
movs
sbb
inc
mov
loop
mov
jmp
rcl
mov
in
pop
xchg
gs
jnp
in
or
mov
(bad)
sub
(bad)
stc
loope
out
sbb
test
xchg
shl
sbb
add
fistp
push
xchg
or
dec
out
add
and
sub
sbb
jp
xchg
call
inc
(bad)
js
movs
loopne
xor
add
stc
add
add
inc
sub
add
add
or
add
or
mov
inc
jg
(bad)
and
mov
ds
cmp
sub
mov
ret
add
js
and
test
pusha
xchg
jg
cs
mov
fs
xchg
push
mov
mov
mov
xchg
mov
fidiv
cmp
mov
nop
push
js
or
mov
jg
cld
mov
mov
pop
mov
sbb
lods
shr
iret
sub
jle
and
ins
xchg
pop
add
sub
or
cwde
sar
add
int
jno
lahf
mov
sub
mov
xadd
outs
lea
bound
jg
scas
cli
stc
out
mov
int3
add
out
xor
ror
scas
add
or
sbb
stc
add
add
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
xor
mov
inc
dec
loop
inc
js
rcr
jg
sbb
adc
add
(bad)
std
adc
hlt
xchg
mov
cmps
lea
mov
inc
clc
xlat
pmulhw
dec
(bad)
mov
hlt
xchg
inc
and
out
mov
cmc
jg
push
sbb
(bad)
jl
cli
jns
mov
(bad)
adc
(bad)
out
loop
add
sbb
jns
push
xchg
ds
fs
loopne
mov
fwait
push
(bad)
push
mov
xchg
xor
push
ss
repz
pop
les
in
lahf
cmp
add
push
xor
xchg
jmp
add
xchg
add
mov
adc
out
fisttp
inc
and
sbb
icebp
out
mov
dec
add
retf
jnp
pushf
test
mov
icebp
adc
xchg
mov
pop
cld
out
aam
push
jg
mov
hlt
popa
inc
mov
jnp
out
aaa
das
sub
popa
cld
aas
sub
mov
push
adc
cmp
mov
add
adc
(bad)
adc
loope
and
sbb
loopne
mov
add
and
movs
movs
mov
lss
rol
mov
pop
add
add
test
rol
mov
pushf
xor
add
(bad)
adc
push
cld
call
jmp
and
into
xchg
and
in
ud0
add
dec
mov
(bad)
xchg
js
xor
xchg
adc
aas
xor
or
jno
mov
fldenv
push
nop
neg
test
adc
inc
pushf
daa
pop
and
rcl
ss
lds
fs
or
fcom
ss
sbb
sbb
sahf
daa
add
or
push
or
push
daa
mov
js
adc
shl
dec
add
sub
or
inc
sub
stc
mov
mov
jb
push
dec
mov
adc
pop
rol
cmp
stos
js
sub
movs
add
sbb
dec
and
xor
lock
or
cmp
inc
sub
test
mov
jecxz
jae
jno
adc
rol
or
xor
or
xchg
mov
mov
add
lods
add
sub
and
and
imul
mov
loopne
and
lods
inc
mov
sub
mov
add
adc
add
ins
pusha
ror
add
add
or
shl
ss
or
lods
loop
inc
popa
adc
add
xchg
clc
add
call
jl
jae
xor
(bad)
cmp
lods
inc
or
mov
leave
dec
add
or
or
ss
je
dec
adc
jo
xor
mov
adc
sbb
sbb
and
jns
inc
imul
ds
push
inc
push
(bad)
mov
adc
js
les
sbb
enter
arpl
cmp
sbb
lock
push
xchg
out
pop
and
adc
cld
jmp
ja
mov
iret
in
inc
push
pop
push
movhps
dec
push
jmp
xchg
repz
(bad)
or
mov
or
inc
adc
pop
add
mov
sbb
sbb
adc
jecxz
add
inc
or
(bad)
pop
aam
or
and
inc
mov
scas
adc
enter
xor
sbb
loop
aas
shl
cmp
ret
xchg
mov
aas
adc
bswap
std
inc
add
push
cmp
jg
add
add
aas
shl
adc
or
pop
mov
leave
popf
push
mov
dec
mov
push
lock
xchg
add
enter
mov
push
xor
inc
add
movs
mov
inc
pop
xchg
mov
sbb
shl
or
or
and
jge
add
xchg
mov
sbb
test
pusha
and
and
and
inc
cmp
mov
js
inc
es
xchg
(bad)
mov
adc
dec
dec
dec
jo
sub
push
cmp
jo
sub
and
or
adc
adc
test
and
movs
inc
push
xor
dec
adc
add
mov
xor
and
xlat
mov
xor
adc
sbb
pop
jmp
ret
rol
enter
fld
jns
jae
push
jo
cmp
add
mov
sbb
nop
mov
cld
(bad)
xor
inc
add
adc
mov
test
cmp
test
xchg
movs
sub
arpl
cmp
add
mov
or
sti
(bad)
sbb
and
sub
add
ins
rol
mov
rol
sbb
fadd
add
jl
push
xchg
ret
adc
push
mov
adc
or
mov
or
or
and
add
sbb
adc
pop
nop
test
pop
ror
cmp
and
loopne
clc
clc
(bad)
adc
add
in
inc
aaa
es
xor
adc
dec
add
xchg
mov
sbb
sub
mov
loopne
or
cmp
pop
pop
inc
and
and
or
and
sbb
or
icebp
adc
inc
ret
xor
or
and
or
xor
add
add
and
add
add
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
gs
jmp
sub
les
jecxz
cwde
inc
mov
adc
dec
xchg
push
adc
ret
sbb
dec
mov
ss
in
fild
ins
mov
pop
stos
adc
inc
push
mov
cmp
sbb
ss
push
add
and
(bad)
lea
jg
inc
xor
out
sub
sbb
nop
clc
shl
xor
pop
shl
push
sbb
jno
scas
out
aas
mov
shl
ins
add
(bad)
dec
leave
test
fistp
ret
inc
mov
mov
add
xor
add
lods
inc
sub
adc
dec
push
call
xor
(bad)
xchg
sti
call
adc
mov
jg
mov
popa
lods
push
cmps
pop
(bad)
popa
(bad)
dec
out
leave
sar
dec
xchg
rol
icebp
rol
scas
push
lahf
sub
jle
inc
or
hlt
lock
sbb
adc
loope
add
pop
(bad)
pop
test
push
rol
and
lods
add
or
mov
loope
popa
outs
mov
cdq
jg
sbb
shl
add
mov
add
mov
push
data16
leave
daa
sub
dec
pop
sbb
lea
mov
or
adc
add
mov
mov
jae
inc
mov
xor
xchg
dec
mov
je
aas
fdivr
mov
push
cmp
addr16
rcl
inc
push
jmp
xchg
push
scas
add
cmp
mov
add
fs
or
sub
ror
mov
shr
inc
sbb
sbb
or
rcl
shr
sub
jmp
pop
add
rol
in
mov
rcl
daa
sub
add
dec
and
jne
leave
cmp
(bad)
pop
push
inc
add
inc
xor
ins
xchg
add
mov
shl
cs
or
and
sbb
inc
xor
movs
ret
or
cmp
adc
add
imul
push
add
call
mov
mov
scas
jo
inc
add
int3
mov
cmp
retf
inc
xor
sbb
fs
inc
sub
fadd
dec
sub
sub
xor
add
inc
les
xor
sbb
push
int3
and
pushf
xchg
push
cmp
xor
in
shl
aas
gs
ret
aas
inc
cmp
jmp
mov
je
cmp
sbb
jo
xor
ror
add
push
enter
or
add
dec
push
xor
ror
add
jmp
ror
inc
jecxz
or
aas
pop
or
clc
ret
xchg
jbe
mov
jmp
nop
jno
or
jns
or
test
(bad)
jmp
mov
stos
add
f2xm1
iret
sbb
mov
bound
mov
in
ss
enter
loopne
aas
and
push
push
dec
outs
or
sbb
mov
js
add
test
ret
inc
out
pop
or
add
push
(bad)
xor
xchg
ins
rcl
rol
and
and
mov
sbb
sbb
adc
add
ret
and
pop
mov
ror
mov
mov
push
inc
adc
(bad)
jecxz
pop
push
add
loopne
sub
clc
ret
mov
inc
fdivr
add
mov
add
inc
ss
pop
adc
mov
js
xchg
sbb
pop
ror
push
add
or
mov
inc
or
rol
mov
cmp
adc
pusha
add
jo
mov
test
inc
nop
lds
mov
nop
ins
rol
nop
add
xchg
inc
sbb
adc
and
and
or
add
push
mov
loope
jnp
inc
pop
jb
xchg
sbb
inc
movs
pop
cwde
add
or
cwde
inc
sub
les
add
js
and
cwde
xchg
add
and
add
add
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
stos
std
sti
icebp
inc
sbb
mov
jg
sub
invd
(bad)
(bad)
or
add
nop
sub
sahf
cli
add
iret
pop
lea
push
inc
inc
lds
xchg
push
dec
icebp
clc
mov
add
xor
inc
clc
mov
ror
fcomi
inc
(bad)
mov
or
mov
test
je
repnz
mov
adc
inc
pop
in
add
(bad)
adc
ret
adc
mov
add
push
mov
mov
jmp
inc
ret
push
in
and
repz
shr
aas
dec
pop
sbb
mov
mov
shl
mov
pop
push
iret
and
fldcw
xor
pop
ret
imul
loope
inc
add
dec
sub
inc
call
jo
dec
cmp
xchg
sub
mov
sbb
sub
jg
dec
adc
aad
inc
cwde
mov
imul
mov
icebp
(bad)
nop
adc
add
mov
jnp
(bad)
adc
sbb
or
mov
mov
out
js
in
add
sbb
push
(bad)
xor
dec
ja
adc
or
(bad)
or
inc
inc
retf
or
mov
inc
add
leave
adc
sub
leave
or
rol
aas
sbb
bound
inc
fwait
xor
inc
sbb
push
and
les
js
add
xor
aas
(bad)
lods
loop
pop
push
test
sbb
xchg
clc
add
call
jl
mov
into
mov
stc
dec
or
repnz
pop
ret
iret
push
mov
adc
push
rol
ror
ror
je
test
cmp
or
sbb
sbb
test
inc
(bad)
jmp
sub
add
rol
jae
ror
aas
sbb
xor
inc
or
jle
mov
cli
pop
into
add
out
loope
jo
add
sbb
lea
mov
mov
add
adc
xor
push
mov
jmp
mov
inc
in
je
jb
or
in
jo
arpl
add
sbb
or
or
adc
push
dec
nop
add
das
ins
cmp
sub
movs
shl
adc
xor
cmp
lods
add
dec
inc
xor
jae
inc
xor
cmp
push
xchg
int
aam
sub
retf
add
add
jb
call
hlt
xchg
or
imul
nop
ficomp
call
shl
aam
rol
or
add
dec
nop
adc
push
xor
pop
xchg
shr
sbb
push
or
inc
xchg
push
or
lock
leave
(bad)
nop
mov
movs
sar
shl
jae
inc
pop
sbb
jg
dec
or
cwde
repz
lock
mov
mov
cld
xchg
(bad)
aas
ss
push
lds
jmp
mov
or
push
movs
adc
sbb
fs
push
mov
jns
dec
ret
aas
sub
add
mov
test
or
fs
dec
loopne
inc
xor
add
push
xor
ret
add
rol
and
mov
mov
push
inc
nop
and
add
loopne
inc
adc
or
inc
inc
daa
dec
into
jno
ret
or
mov
test
mov
cmp
pop
cmps
pusha
inc
sbb
dec
cmp
xor
idiv
or
int3
loope
int3
pusha
add
dec
ror
mov
push
push
push
or
or
sbb
sbb
loope
ds
add
in
inc
aaa
es
xor
adc
mov
and
mov
inc
xor
xor
or
cmp
inc
pop
inc
and
xor
aas
inc
add
sbb
or
adc
(bad)
and
or
xchg
or
pusha
add
jbe
retf
sub
ror
add
mov
xor
stc
add
add
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
gs
jmp
sub
les
jecxz
cwde
inc
mov
adc
dec
xchg
push
adc
ret
sbb
dec
mov
ss
in
fild
ins
mov
pop
stos
adc
inc
push
mov
cmp
sbb
ss
push
add
and
(bad)
lea
jg
inc
xor
out
sub
sbb
nop
clc
shl
xor
pop
shl
push
sbb
jno
scas
out
aas
mov
shl
ins
add
(bad)
dec
leave
test
fistp
ret
inc
mov
mov
add
xor
add
lods
inc
sub
adc
dec
push
call
xor
(bad)
xchg
sti
call
adc
mov
jg
mov
popa
lods
push
cmps
pop
(bad)
popa
(bad)
dec
out
leave
sar
dec
xchg
rol
icebp
rol
scas
push
lahf
sub
jle
inc
or
hlt
lock
sbb
adc
loope
add
pop
(bad)
pop
test
push
rol
and
lods
add
or
mov
loope
popa
outs
mov
cdq
jg
sbb
shl
add
mov
add
mov
push
data16
leave
daa
sub
dec
pop
sbb
lea
mov
or
adc
add
mov
mov
jae
inc
mov
xor
xchg
dec
mov
je
aas
fdivr
mov
push
cmp
addr16
rcl
inc
push
jmp
xchg
push
scas
add
cmp
mov
add
fs
or
sub
ror
mov
shr
inc
sbb
sbb
or
rcl
shr
sub
jmp
pop
add
rol
in
mov
rcl
daa
sub
add
dec
and
jne
leave
cmp
(bad)
pop
push
inc
add
inc
xor
ins
xchg
add
mov
shl
cs
or
and
sbb
inc
xor
movs
ret
or
cmp
adc
add
imul
push
add
call
mov
mov
scas
jo
inc
add
int3
mov
cmp
retf
inc
xor
sbb
fs
inc
sub
fadd
dec
sub
sub
xor
add
inc
les
xor
sbb
push
int3
and
pushf
xchg
push
cmp
xor
in
shl
aas
gs
ret
aas
inc
cmp
jmp
mov
je
cmp
sbb
jo
xor
ror
add
push
enter
or
add
dec
push
xor
ror
add
jmp
ror
inc
jecxz
or
aas
pop
or
clc
ret
xchg
jbe
mov
jmp
nop
jno
or
jns
or
test
(bad)
jmp
mov
stos
add
f2xm1
iret
sbb
mov
bound
mov
in
ss
enter
loopne
aas
and
push
push
dec
outs
or
sbb
mov
js
add
test
ret
inc
out
pop
or
add
push
(bad)
xor
xchg
ins
rcl
rol
and
and
mov
sbb
sbb
adc
add
ret
and
pop
mov
ror
mov
mov
push
inc
adc
(bad)
jecxz
pop
push
add
loopne
sub
clc
ret
mov
inc
fdivr
add
mov
add
inc
ss
pop
adc
mov
js
xchg
sbb
pop
ror
push
add
or
mov
inc
or
rol
mov
cmp
adc
pusha
add
jo
mov
test
inc
nop
lds
mov
nop
ins
rol
nop
add
xchg
inc
sbb
adc
and
and
or
add
push
mov
loope
jnp
inc
pop
jb
xchg
sbb
inc
movs
pop
cwde
add
or
cwde
inc
sub
les
add
js
and
cwde
xchg
add
and
add
add
inc
sub
add
add
add
add
or
fld
add
add
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
stos
std
sti
icebp
inc
sbb
mov
jg
sub
invd
(bad)
(bad)
or
add
nop
sub
sahf
cli
add
iret
pop
lea
push
inc
inc
lds
xchg
push
dec
icebp
clc
mov
add
adc
shl
mov
xchg
cwde
add
mov
test
add
rcl
ret
sbb
rol
cmp
dec
pop
push
stos
ret
adc
enter
retf
sub
lds
mov
or
sub
cmp
lock
and
pop
or
rol
inc
pop
cld
mov
nop
retf
or
add
mov
mul
nop
popf
sub
jno
push
arpl
pushf
inc
adc
mov
scas
or
mov
add
aaa
jmp
ret
lods
idiv
mov
shl
repz
push
and
cmps
arpl
push
mov
call
mov
shl
lods
pop
add
jl
sbb
(bad)
nop
adc
add
mov
jl
(bad)
adc
sbb
or
mov
mov
call
inc
add
sbb
push
(bad)
xor
pop
ja
adc
or
(bad)
or
inc
inc
retf
or
mov
inc
add
int
test
cs
repnz
or
rol
aas
sbb
bound
inc
fwait
xor
inc
sbb
push
and
les
js
add
jno
aas
(bad)
lods
loop
pop
push
test
push
xchg
clc
add
call
jl
mov
into
loopne
xchg
mov
stc
dec
or
add
orps
cld
push
(bad)
sbb
rol
ror
ror
je
test
(bad)
cmp
mov
sbb
test
inc
mov
or
sub
inc
stos
inc
jecxz
rol
ja
ror
aas
sbb
xor
inc
or
jle
mov
cli
rsm
rcl
imul
loope
jo
add
sbb
lea
mov
loop
arpl
adc
lods
aaa
adc
xor
push
mov
out
cmp
call
mov
and
je
jb
or
in
jo
arpl
add
sbb
or
sbb
adc
gs
nop
add
aas
ins
cmp
cmp
xor
cmp
lods
add
dec
inc
xor
mov
inc
cmp
inc
int
aad
sub
int3
add
inc
mov
jmp
pop
jb
jmp
hlt
xchg
or
imul
push
nop
fistp
nop
pop
or
sbb
mov
add
dec
nop
adc
xchg
xor
pop
xchg
loopne
inc
sbb
push
or
inc
xchg
push
mov
jae
or
lock
leave
(bad)
nop
mov
cmps
sar
shl
jae
inc
pop
sbb
or
pushf
repz
lock
mov
mov
cld
xchg
(bad)
aas
ss
lea
lds
in
inc
mov
or
push
movs
adc
sbb
fs
push
mov
jns
dec
ret
aas
sub
add
and
and
in
and
inc
sbb
mov
inc
jle
mov
push
fadd
out
sub
cmp
test
pop
les
dec
inc
ret
and
adc
sub
xor
pusha
add
push
add
cmp
or
ret
nop
adc
rcl
inc
push
or
loopne
or
jns
aas
dec
rol
dec
add
mov
iret
and
les
and
and
in
stos
test
sub
adc
and
add
and
mov
cdq
test
js
or
sbb
in
pusha
inc
mov
je
add
add
jno
mov
loop
and
push
or
adc
add
xchg
add
add
test
loop
and
rcl
rol
xor
xchg
jle
inc
sub
loope
xor
nop
or
adc
push
and
ror
loopne
sub
mov
add
and
add
add
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
gs
jmp
sub
les
jecxz
cwde
inc
mov
adc
dec
xchg
push
adc
ret
sbb
dec
mov
ss
in
fild
mov
push
and
test
in
lods
outs
jecxz
int3
cmp
ins
mov
push
lock
inc
add
push
dec
jle
sbb
dec
inc
jbe
sbb
sbb
add
xchg
nop
push
mov
add
movs
and
jnp
rol
daa
push
dec
sti
dec
fadd
or
outs
lea
rcr
movs
sti
add
pop
and
aaa
mov
rcl
fs
cmp
adc
or
sbb
adc
imul
xor
inc
or
mov
pushf
idiv
(bad)
repz
dec
sbb
xor
mov
test
out
rcl
and
test
xchg
(bad)
hlt
lock
sbb
adc
loope
add
imul
rol
and
lods
add
or
mov
loope
bound
ret
cdq
add
add
or
mov
and
add
pushf
push
nop
push
data16
leave
daa
sub
dec
pop
sbb
mov
adc
add
adc
sub
xor
addr16
mov
xor
xchg
call
mov
je
aas
fdivr
mov
push
cmp
addr16
rcl
inc
push
jmp
xchg
push
scas
add
cmp
leave
movs
inc
popa
cld
repz
fs
or
sub
ror
mov
adc
push
inc
sbb
(bad)
cld
ror
or
rcl
shr
sub
jmp
pop
add
rol
in
mov
rcl
daa
sub
add
dec
and
jne
leave
cmp
(bad)
pop
push
inc
add
inc
xor
ins
xchg
add
sti
sub
or
lods
or
and
sbb
inc
xor
movs
ret
or
cmp
adc
add
imul
add
add
hlt
sub
inc
add
or
les
xor
sbb
sub
fadd
dec
sub
sub
or
inc
es
ins
inc
les
xor
sbb
es
pushf
xchg
push
cmp
xor
in
adc
aas
gs
ret
aas
inc
xchg
jl
leave
jmp
mov
je
cmp
sbb
jno
xor
inc
enter
lock
dec
jbe
add
dec
push
xor
jecxz
aaa
or
adc
pushf
ror
inc
jecxz
dec
idiv
pop
or
clc
ret
daa
(bad)
shl
movs
mov
mov
pop
push
or
or
inc
adc
int
jb
ins
inc
mov
jmp
mov
stos
add
f2xm1
iret
sbb
pop
mov
lods
add
icebp
ss
enter
loopne
aas
and
push
push
call
outs
or
sbb
mov
js
add
test
ret
inc
repz
or
add
push
xor
xchg
add
push
mov
adc
repnz
sbb
lahf
add
and
pushf
push
dec
add
mov
cmp
add
jp
or
mov
add
sbb
(bad)
dec
loope
push
xor
or
clc
add
push
fadd
pop
and
add
ins
pusha
cs
movs
int
(bad)
pusha
test
pop
sbb
unpcklps
sbb
add
jg
xor
xchg
daa
inc
int
test
jl
sbb
add
fcom
sub
or
pop
add
jo
inc
add
and
sbb
or
lock
loopne
pop
mov
inc
dec
adc
pop
pop
add
push
jl
add
inc
sub
add
or
add
mov
lds
xor
lds
inc
daa
je
pop
push
fld
fadd
or
and
fdiv
and
push
or
or
bound
cmp
inc
inc
adc
ror
adc
dec
dec
inc
add
and
add
add
inc
sub
add
add
add
add
or
cmp
stc
add
add
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
stos
std
sti
icebp
inc
sbb
mov
jg
sub
invd
(bad)
(bad)
or
add
nop
sub
sahf
cli
add
iret
pop
lea
push
inc
inc
lds
xchg
push
dec
icebp
clc
mov
add
xor
inc
clc
mov
ror
fcomi
inc
(bad)
mov
or
mov
test
je
repnz
mov
adc
inc
pop
in
add
(bad)
adc
ret
adc
mov
add
push
mov
mov
jmp
inc
ret
push
in
and
repz
shr
aas
dec
pop
sbb
mov
mov
shl
mov
pop
push
iret
and
fldcw
xor
pop
ret
imul
loope
inc
add
dec
sub
inc
call
jo
dec
cmp
xchg
sub
mov
sbb
sub
jg
dec
adc
aad
inc
cwde
mov
imul
mov
icebp
(bad)
nop
adc
add
mov
jnp
(bad)
adc
sbb
or
mov
mov
out
js
in
add
sbb
push
(bad)
xor
dec
ja
adc
or
(bad)
or
inc
inc
retf
or
mov
inc
add
leave
adc
sub
leave
or
rol
aas
sbb
bound
inc
fwait
xor
inc
sbb
push
and
les
js
add
xor
aas
(bad)
lods
loop
pop
push
test
sbb
xchg
clc
add
call
jl
mov
into
mov
stc
dec
or
repnz
pop
ret
iret
push
mov
adc
push
rol
ror
ror
je
test
cmp
or
sbb
sbb
test
inc
(bad)
jmp
sub
add
rol
jae
ror
aas
sbb
xor
inc
or
jle
mov
cli
pop
into
add
out
loope
jo
add
sbb
lea
mov
mov
add
adc
xor
push
mov
jmp
mov
inc
in
je
jb
or
in
jo
arpl
add
sbb
or
or
adc
push
dec
nop
add
das
ins
cmp
sub
movs
shl
adc
xor
cmp
lods
add
dec
inc
xor
jae
inc
xor
cmp
push
xchg
int
aam
sub
retf
add
add
jb
call
hlt
xchg
or
imul
nop
ficomp
call
shl
aam
rol
or
add
dec
nop
adc
push
xor
pop
xchg
shr
sbb
push
or
inc
xchg
push
or
lock
leave
(bad)
nop
mov
movs
sar
shl
jae
inc
pop
sbb
jg
dec
or
cwde
repz
lock
mov
mov
cld
xchg
(bad)
aas
ss
push
lds
jmp
mov
or
push
movs
adc
sbb
fs
push
mov
jns
dec
ret
aas
sub
add
mov
test
or
fs
dec
loopne
inc
xor
add
push
xor
ret
add
rol
and
mov
mov
push
inc
nop
and
add
loopne
inc
adc
or
inc
inc
daa
dec
into
jno
ret
or
mov
test
mov
cmp
pop
cmps
pusha
inc
sbb
dec
cmp
xor
idiv
or
int3
loope
int3
pusha
add
dec
ror
mov
push
push
push
or
or
sbb
sbb
loope
ds
add
in
inc
aaa
es
xor
adc
mov
and
mov
inc
xor
xor
or
cmp
inc
pop
inc
and
xor
aas
inc
add
sbb
or
adc
(bad)
and
or
xchg
or
pusha
add
jbe
retf
sub
ror
add
mov
xor
stc
add
add
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
gs
jmp
sub
les
jecxz
cwde
inc
mov
adc
dec
xchg
push
adc
ret
sbb
dec
mov
ss
in
fild
ins
mov
pop
stos
adc
inc
push
mov
cmp
sbb
ss
push
add
and
(bad)
lea
jg
inc
xor
out
sub
sbb
nop
clc
shl
xor
pop
shl
push
sbb
jno
scas
out
aas
mov
shl
ins
add
(bad)
dec
leave
test
fistp
ret
inc
mov
mov
add
xor
add
lods
inc
sub
adc
dec
push
call
xor
(bad)
xchg
sti
call
adc
mov
jg
mov
popa
lods
push
cmps
pop
(bad)
popa
(bad)
dec
out
leave
sar
dec
xchg
rol
icebp
rol
scas
push
lahf
sub
jle
inc
or
hlt
lock
sbb
adc
loope
add
pop
(bad)
pop
test
push
rol
and
lods
add
or
mov
loope
popa
outs
mov
cdq
jg
sbb
shl
add
mov
add
mov
push
data16
leave
daa
sub
dec
pop
sbb
lea
mov
or
adc
add
mov
mov
jae
inc
mov
xor
xchg
dec
mov
je
aas
fdivr
mov
push
cmp
addr16
rcl
inc
push
jmp
xchg
push
scas
add
cmp
mov
add
fs
or
sub
ror
mov
shr
inc
sbb
sbb
or
rcl
shr
sub
jmp
pop
add
rol
in
mov
rcl
daa
sub
add
dec
and
jne
leave
cmp
(bad)
pop
push
inc
add
inc
xor
ins
xchg
add
mov
shl
cs
or
and
sbb
inc
xor
movs
ret
or
cmp
adc
add
imul
push
add
call
mov
mov
scas
jo
inc
add
int3
mov
cmp
retf
inc
xor
sbb
fs
inc
sub
fadd
dec
sub
sub
xor
add
inc
les
xor
sbb
push
int3
and
pushf
xchg
push
cmp
xor
in
shl
aas
gs
ret
aas
inc
cmp
jmp
mov
je
cmp
sbb
jo
xor
ror
add
push
enter
or
add
dec
push
xor
ror
add
jmp
ror
inc
jecxz
or
aas
pop
or
clc
ret
xchg
jbe
mov
jmp
nop
jno
or
jns
or
test
(bad)
jmp
mov
stos
add
f2xm1
iret
sbb
mov
bound
mov
in
ss
enter
loopne
aas
and
push
push
dec
outs
or
sbb
mov
js
add
test
ret
inc
out
pop
or
add
push
(bad)
xor
xchg
ins
rcl
rol
and
and
mov
sbb
sbb
adc
add
ret
and
pop
mov
ror
mov
mov
push
inc
adc
(bad)
jecxz
pop
push
add
loopne
sub
clc
ret
mov
inc
fdivr
add
mov
add
inc
ss
pop
adc
mov
js
xchg
sbb
pop
ror
push
add
or
mov
inc
or
rol
mov
cmp
adc
pusha
add
jo
mov
test
inc
nop
lds
mov
nop
ins
rol
nop
add
xchg
inc
sbb
adc
and
and
or
add
push
mov
loope
jnp
inc
pop
jb
xchg
sbb
inc
movs
pop
cwde
add
or
cwde
inc
sub
les
add
js
and
cwde
xchg
add
and
add
add
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
stos
std
sti
icebp
inc
sbb
mov
jg
sub
invd
(bad)
(bad)
or
add
nop
sub
sahf
cli
add
iret
pop
lea
push
inc
inc
lds
xchg
push
dec
icebp
clc
mov
add
xor
inc
clc
mov
ror
fcomi
inc
(bad)
mov
or
mov
test
je
repnz
mov
adc
inc
pop
in
add
(bad)
adc
ret
adc
mov
add
push
mov
mov
jmp
inc
ret
push
in
and
repz
shr
aas
dec
pop
sbb
mov
mov
shl
mov
pop
push
iret
and
fldcw
xor
pop
ret
imul
loope
inc
add
dec
sub
inc
call
jo
dec
cmp
xchg
sub
mov
sbb
sub
jg
dec
adc
aad
inc
cwde
mov
imul
mov
icebp
(bad)
nop
adc
add
mov
jnp
(bad)
adc
sbb
or
mov
mov
out
js
in
add
sbb
push
(bad)
xor
dec
ja
adc
or
(bad)
or
inc
inc
retf
or
mov
inc
add
leave
adc
sub
leave
or
rol
aas
sbb
bound
inc
fwait
xor
inc
sbb
push
and
les
js
add
xor
aas
(bad)
lods
loop
pop
push
test
sbb
xchg
clc
add
call
jl
mov
into
mov
stc
dec
or
repnz
pop
ret
iret
push
mov
adc
push
rol
ror
ror
je
test
cmp
or
sbb
sbb
test
inc
(bad)
jmp
sub
add
rol
jae
ror
aas
sbb
xor
inc
or
jle
mov
cli
pop
into
add
out
loope
jo
add
sbb
lea
mov
mov
add
adc
xor
push
mov
jmp
mov
inc
in
je
jb
or
in
jo
arpl
add
sbb
or
or
adc
push
dec
nop
add
das
ins
cmp
sub
movs
shl
adc
xor
cmp
lods
add
dec
inc
xor
jae
inc
xor
cmp
push
xchg
int
aam
sub
retf
add
add
jb
call
hlt
xchg
or
imul
nop
ficomp
call
shl
aam
rol
or
add
dec
nop
adc
push
xor
pop
xchg
shr
sbb
push
or
inc
xchg
push
or
lock
leave
(bad)
nop
mov
movs
sar
shl
jae
inc
pop
sbb
jg
dec
or
cwde
repz
lock
mov
mov
cld
xchg
(bad)
aas
ss
push
lds
jmp
mov
or
push
movs
adc
sbb
fs
push
mov
jns
dec
ret
aas
sub
add
mov
test
or
fs
dec
loopne
inc
xor
add
push
xor
ret
add
rol
and
mov
mov
push
inc
nop
and
add
loopne
inc
adc
or
inc
inc
daa
dec
into
jno
ret
or
mov
test
mov
cmp
pop
cmps
pusha
inc
sbb
dec
cmp
xor
idiv
or
int3
loope
int3
pusha
add
dec
ror
mov
push
push
push
or
or
sbb
sbb
loope
ds
add
in
inc
aaa
es
xor
adc
mov
and
mov
inc
xor
xor
or
cmp
inc
pop
inc
and
xor
aas
inc
add
sbb
or
adc
(bad)
and
or
xchg
or
pusha
add
jbe
retf
sub
ror
add
mov
xor
stc
add
add
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
gs
jmp
sub
les
jecxz
cwde
inc
mov
adc
dec
xchg
push
adc
ret
sbb
dec
mov
ss
in
fild
ins
mov
pop
stos
adc
inc
push
mov
cmp
sbb
ss
push
add
and
(bad)
lea
jg
inc
xor
out
sub
sbb
nop
clc
shl
xor
pop
shl
push
sbb
jno
scas
out
aas
mov
shl
ins
add
(bad)
dec
leave
test
fistp
ret
inc
mov
mov
add
xor
add
lods
inc
sub
adc
dec
push
call
xor
(bad)
xchg
sti
call
adc
mov
jg
mov
popa
lods
push
cmps
pop
(bad)
popa
(bad)
dec
out
leave
sar
dec
xchg
rol
icebp
rol
scas
push
lahf
sub
jle
inc
or
hlt
lock
sbb
adc
loope
add
pop
(bad)
pop
test
push
rol
and
lods
add
or
mov
loope
popa
outs
mov
cdq
jg
sbb
shl
add
mov
add
mov
push
data16
leave
daa
sub
dec
pop
sbb
lea
mov
or
adc
add
mov
mov
jae
inc
mov
xor
xchg
dec
mov
je
aas
fdivr
mov
push
cmp
addr16
rcl
inc
push
jmp
xchg
push
scas
add
cmp
mov
add
fs
or
sub
ror
mov
shr
inc
sbb
sbb
or
rcl
shr
sub
jmp
pop
add
rol
in
mov
rcl
daa
sub
add
dec
and
jne
leave
cmp
(bad)
pop
push
inc
add
inc
xor
ins
xchg
add
mov
shl
cs
or
and
sbb
inc
xor
movs
ret
or
cmp
adc
add
imul
push
add
call
mov
mov
scas
jo
inc
add
int3
mov
cmp
retf
inc
xor
sbb
fs
inc
sub
fadd
dec
sub
sub
xor
add
inc
les
xor
sbb
push
int3
and
pushf
xchg
push
cmp
xor
in
shl
aas
gs
ret
aas
inc
cmp
jmp
mov
je
cmp
sbb
jo
xor
ror
add
push
enter
or
add
dec
push
xor
ror
add
jmp
ror
inc
jecxz
or
aas
pop
or
clc
ret
xchg
jbe
mov
jmp
nop
jno
or
jns
or
test
(bad)
jmp
mov
stos
add
f2xm1
iret
sbb
mov
bound
mov
in
ss
enter
loopne
aas
and
push
push
dec
outs
or
sbb
mov
js
add
test
ret
inc
out
pop
or
add
push
(bad)
xor
xchg
ins
rcl
rol
and
and
mov
sbb
sbb
adc
add
ret
and
pop
mov
ror
mov
mov
push
inc
adc
(bad)
jecxz
pop
push
add
loopne
sub
clc
ret
mov
inc
fdivr
add
mov
add
inc
ss
pop
adc
mov
js
xchg
sbb
pop
ror
push
add
or
mov
inc
or
rol
mov
cmp
adc
pusha
add
jo
mov
test
inc
nop
lds
mov
nop
ins
rol
nop
add
xchg
inc
sbb
adc
and
and
or
add
push
mov
loope
jnp
inc
pop
jb
xchg
sbb
inc
movs
pop
cwde
add
or
cwde
inc
sub
les
add
js
and
cwde
xchg
add
and
add
add
inc
sub
add
add
add
add
or
fld
add
add
inc
sub
add
add
add
add
or
cmp
stc
add
add
inc
sub
add
add
add
add
or
fld
add
add
inc
sub
add
add
add
add
or
cmp
stc
add
add
inc
sub
add
add
add
add
or
fld
push
sbb
push
rol
rol
or
lgdtd
add
add
popa
xor
sbb
aas
add
icebp
cmp
add
jmp
dec
inc
cmp
popa
xor
xor
scas
mov
pop
out
add
cld
cld
mov
arpl
ud1
(bad)
std
sbb
fxch
(bad)
cmc
mov
jnp
stos
jp
fldcw
leave
xchg
add
push
add
add
test
aam
add
mov
sub
enter
xchg
(bad)
in
add
clc
pop
(bad)
jmp
jmp
icebp
add
mov
movs
jge
(bad)
fiadd
outs
sbb
(bad)
(bad)
jl
sub
leave
add
inc
inc
add
dec
(bad)
cmc
add
fwait
add
std
dec
(bad)
loop
cld
stc
call
aad
inc
add
in
hlt
cld
div
jmp
add
(bad)
stos
jae
or
or
movs
add
retf
std
(bad)
out
jecxz
stc
add
mul
mov
call
add
int
clc
mov
add
shl
mov
ret
stos
mov
stc
mov
movs
pop
add
xchg
in
in
(bad)
cld
push
repz
aam
in
out
(bad)
lods
add
aam
cli
cmps
add
stos
test
cmps
sbb
mov
sub
sub
out
cld
jmp
(bad)
jecxz
std
stos
add
fisub
std
out
push
(bad)
stos
add
in
cdq
cli
mov
(bad)
hlt
stc
lods
add
cmc
(bad)
cmc
int3
sbb
mov
rcl
cli
test
(bad)
mov
(bad)
(bad)
icebp
(bad)
imul
inc
mov
cli
int3
or
lea
sti
mov
fdiv
(bad)
fisttp
stos
add
sahf
cwde
xchg
(bad)
ror
int3
into
aad
ret
push
inc
xor
xlat
sbb
out
sar
sub
pop
mov
in
push
out
rol
(bad)
jmp
push
jmp
add
mov
lock
add
add
loop
into
shr
add
lds
rol
lock
mov
push
add
mov
dec
push
call
add
fiadd
or
ror
lods
add
mov
retf
std
in
cmps
mov
ud0
add
mov
idiv
imul
add
mov
loope
daa
stos
(bad)
sbb
(bad)
xor
cli
cmc
repz
ror
(bad)
(bad)
or
in
repnz
stc
fld
in
out
neg
push
(bad)
icebp
mov
mov
(bad)
sti
pop
mov
add
fadd
repz
fmul
lock
hlt
icebp
add
test
cld
jecxz
out
loopne
std
mov
call
or
jmp
repz
rol
loope
cld
stos
or
int
cld
mov
aas
inc
jg
jg
jp
mov
pop
in
out
clc
push
adc
xlat
pop
cli
call
stc
loope
cmc
mov
dec
add
sbb
test
lahf
and
in
iret
mov
not
add
mov
hlt
loopne
clc
cmps
or
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
sbb
inc
sub
add
add
xor
add
or
mov
rcr
cmp
in
fs
xchg
and
cmc
test
test
push
add
jns
mov
pusha
ret
cmp
xor
pusha
leave
push
cmovg
add
mov
dec
jo
mov
jmp
cmp
cmp
setns
jno
or
adc
inc
dec
adc
mov
push
inc
xchg
bnd
jo
push
daa
stos
add
in
call
sbb
movs
call
pusha
or
ficom
fstp
cmp
imul
and
lds
xor
push
pusha
movs
stos
push
shl
push
add
push
nop
sub
pushf
or
sahf
mov
mov
cs
es
add
add
pop
mov
test
sar
xchg
xlat
arpl
or
or
or
pop
and
bound
int
enter
lods
or
cmp
or
jmp
adc
sbb
and
jp
aad
pop
jnp
adc
sbb
dec
inc
or
ror
cld
cmc
xor
jns
cmp
inc
or
inc
bound
add
add
or
push
mov
inc
xchg
cmp
popa
add
inc
adc
ret
sbb
mov
int
and
xor
cmp
jo
(bad)
sbb
ror
fmul
int3
push
add
popa
sbb
mov
or
lock
sbb
fdiv
fs
js
fsub
mov
inc
and
loopne
sub
or
dec
adc
hlt
inc
adc
and
test
imul
dec
sub
mov
cmp
les
push
xchg
or
add
push
sbb
bound
adc
xor
push
cmps
add
and
movs
lods
pop
mov
test
or
pusha
adc
and
push
mov
sbb
add
jno
add
es
add
add
add
sub
inc
add
mov
xchg
push
(bad)
cmps
inc
mov
inc
pop
push
push
push
cmp
inc
adc
pop
add
scas
add
test
(bad)
pop
adc
push
lods
cmp
or
je
arpl
inc
jmp
bound
mov
jb
and
xchg
imul
and
push
push
pop
rol
(bad)
and
and
inc
sbb
lock
adc
or
retf
xchg
add
inc
add
add
pop
xor
test
mov
ins
test
or
stos
mov
add
and
push
or
in
hlt
xchg
jne
cmp
cmp
or
(bad)
fcom
enter
adc
imul
(bad)
pusha
push
data16
add
push
bnd
push
or
fmul
cmp
or
les
pop
and
xor
jg
ror
out
ja
mov
mov
adc
push
ror
inc
pop
and
xor
add
add
and
test
lock
gs
sbb
jp
ins
push
dec
pop
push
push
push
retf
in
(bad)
jp
jb
(bad)
int
test
ror
dec
jge
inc
iret
ins
inc
add
xor
mov
pop
xor
push
push
add
xchg
add
mov
call
mov
add
push
sbb
and
mov
rol
adc
or
(bad)
cmp
ins
inc
adc
mov
add
sub
and
pop
cmp
test
dec
add
in
push
test
cwde
bound
iret
ror
adc
mov
mov
pop
pop
rol
in
loop
pop
enter
shr
adc
mov
push
mov
and
push
or
add
jae
push
add
add
sub
xchg
pop
jo
daa
mov
inc
or
and
sbb
mov
or
xchg
or
jl
sbb
inc
ret
lock
add
inc
pop
or
mov
ret
rol
aas
add
add
add
xchg
adc
sbb
inc
add
mov
rcl
and
fistp
sbb
pusha
add
adc
jnp
sbb
and
add
inc
sub
fsub
fstp
bound
ret
dec
lds
push
add
mov
sub
rol
add
aad
loope
retf
sub
dec
mov
test
paddsb
pop
push
add
and
add
and
xchg
loop
inc
or
fs
bound
or
int
mov
pusha
push
jp
lds
dec
mov
xchg
push
add
push
and
clc
nop
sbb
add
mov
jbe
aam
sub
ret
xor
popf
movs
cmp
rol
and
sub
sub
and
mov
push
nop
mov
mov
add
inc
push
push
inc
and
lock
adc
adc
sbb
mov
add
add
iret
sbb
and
xor
sar
and
jl
inc
adc
retf
fadd
ins
and
xchg
inc
sbb
inc
daa
out
xchg
sub
add
loope
pop
pop
mov
movlps
add
hlt
bound
and
pop
rol
add
cmp
sub
adc
or
rol
cmp
mov
or
mov
add
push
and
push
sub
mov
or
xor
xor
ret
add
mov
and
adc
add
iret
jmp
push
push
push
or
or
nop
int
pushf
push
or
mov
je
inc
add
add
xchg
add
cmp
jmp
aaa
cmp
sbb
add
mov
rcl
pop
add
adc
daa
js
add
arpl
push
or
cld
inc
sbb
repz
add
clc
fadd
pop
and
inc
add
jo
or
add
add
ret
shr
rol
nop
push
xor
mov
cmp
pop
adc
adc
adc
xor
fild
es
add
dec
and
sbb
xor
xor
lea
inc
push
in
xchg
add
add
cmp
adc
jo
add
cmp
(bad)
loopne
and
or
xor
adc
add
or
push
pusha
add
xor
add
mov
mov
loop
mov
cwde
or
mov
xor
mov
pop
push
rol
cmp
add
mov
inc
add
fadd
sysret
scas
int3
cmp
shl
in
push
sbb
lock
inc
mov
or
outs
xchg
lea
adc
or
adc
in
cdq
shl
(bad)
aas
adc
pop
jmp
add
or
add
cwde
add
xchg
inc
add
or
pop
nop
and
cwde
ret
nop
or
popa
rcr
mov
pop
ror
mov
add
and
add
or
inc
sub
add
add
push
add
or
add
or
mov
rol
mov
inc
sbb
mov
inc
loopne
cmp
nop
dec
ret
(bad)
inc
sbb
and
and
push
fdivr
or
mov
mov
and
xchg
(bad)
(bad)
inc
or
xor
jecxz
(bad)
or
sar
das
inc
ror
arpl
or
mov
mov
mov
lods
pop
int
mov
into
fwait
add
mov
mov
popf
retf
daa
retf
aas
push
push
mov
dec
mov
jno
inc
sbb
or
fisubr
push
mov
mov
shr
and
pop
sar
and
sub
ret
nop
call
mov
movs
mov
lds
js
or
add
repnz
mov
jmp
inc
sub
push
repnz
pop
and
dec
clc
mov
inc
test
pusha
adc
je
pop
mov
stos
jne
inc
sub
fnstsw
add
inc
adc
pop
or
inc
add
icebp
sbb
pop
and
jl
adc
shr
inc
add
xor
pusha
or
and
adc
push
adc
pusha
jne
add
rol
test
and
xchg
mov
or
enter
adc
nop
retf
sbb
push
test
mov
and
pop
or
inc
pop
es
fadd
inc
cmp
add
sub
repnz
mov
pusha
les
sub
xchg
xchg
sbb
pop
mov
mov
es
add
js
test
sub
lahf
test
mov
scas
xchg
mov
(bad)
aam
outs
pop
mov
add
cmp
inc
mov
hlt
add
stos
mov
cdq
adc
inc
xchg
and
add
push
jl
nop
mov
popf
sub
test
aaa
je
mov
pusha
pop
sub
les
xchg
cmp
pop
test
cwde
dec
jb
or
xchg
mov
and
lock
adc
jae
icebp
dec
xor
shl
adc
mov
mov
push
adc
rol
ins
rol
mov
and
fwait
pop
xor
dec
and
and
pop
cmove
add
daa
retf
add
pop
and
add
test
sub
push
repnz
sub
add
lods
mov
sub
push
adc
xor
add
scas
dec
(bad)
call
push
inc
add
push
inc
inc
and
rol
xor
mov
xchg
(bad)
adc
sbb
inc
daa
nop
mov
es
hlt
dec
adc
xchg
test
outs
cld
push
rol
xchg
dec
ss
add
adc
or
add
pop
inc
loopne
xor
xchg
rol
inc
push
pop
mov
jl
push
mov
rol
adc
inc
adc
or
inc
add
adc
push
cwde
xor
xor
ret
aam
test
jns
inc
push
or
icebp
iret
sbb
rol
pop
aaa
js
rcr
pusha
add
and
and
mov
nop
or
inc
push
dec
jo
push
js
rcr
add
ret
adc
js
or
add
test
xor
pop
mov
adc
add
adc
or
and
push
test
sbb
push
add
add
inc
mov
push
or
add
sbb
add
inc
push
xchg
cwde
xchg
add
clc
(bad)
or
add
dec
pop
add
repnz
or
push
add
xor
inc
jl
pop
and
add
inc
add
mov
test
push
sbb
sbb
adc
ror
cmp
or
popa
or
nop
add
xor
mov
inc
ret
shl
js
push
test
add
cdq
ret
add
push
add
and
add
stc
add
or
inc
sub
add
add
sbb
add
or
mov
rol
daa
mov
cmp
inc
(bad)
pop
cld
pop
imul
ins
sbb
rcr
aas
jns
push
or
inc
repnz
nop
jg
pop
and
dec
movs
ror
and
retf
xchg
loope
or
adc
popa
shl
lahf
push
pusha
jnp
cmps
loope
sbb
mov
bound
mov
aam
or
in
sbb
push
lods
pop
or
test
out
dec
add
push
sub
adc
sbb
shr
xor
or
and
scas
push
mov
push
mov
sar
push
lods
dec
loopne
jmp
hlt
or
and
daa
dec
xchg
jo
xchg
mov
cmps
inc
sbb
dec
jmp
mov
outs
fbstp
add
sub
push
out
cmp
(bad)
fsubr
push
xlat
arpl
aam
add
jnp
mov
jmp
inc
push
call
push
sub
rcl
sub
jp
add
hlt
mov
adc
push
pop
or
dec
or
jnp
ja
add
push
push
les
pop
xchg
add
add
outs
je
inc
pop
xor
repnz
cs
mov
dec
or
jl
inc
and
adc
or
jp
ins
mov
sbb
add
push
jp
mov
sbb
lods
xor
movs
and
stos
adc
into
add
add
xchg
stos
ins
adc
mov
sahf
pop
fcomp
ins
sub
push
mov
pop
enter
cmp
cwde
sub
inc
or
cmp
mov
nop
dec
and
and
adc
jae
adc
or
mov
bound
jns
aaa
add
xchg
cld
mov
sbb
fdivr
inc
adc
add
shl
hlt
test
pop
test
pop
lock
add
sbb
adc
sub
inc
and
add
xchg
mov
add
inc
mov
push
dec
lock
inc
inc
sub
js
add
or
cwde
adc
dec
adc
sbb
or
rol
jb
add
lock
inc
adc
push
dec
add
push
push
mov
dec
push
ror
cmc
jbe
pop
adc
adc
dec
inc
repnz
adc
pop
dec
adc
push
cdq
sbb
or
cmp
bound
and
adc
sub
xlat
pop
mov
les
aas
mov
push
cmovo
push
mov
mov
inc
add
mov
push
inc
sbb
add
adc
mov
push
or
sub
nop
xor
inc
ins
mov
sbb
inc
cld
ret
dec
je
push
inc
not
mov
xchg
xor
push
movs
nop
or
inc
loope
inc
cs
fdiv
dec
push
ins
fsub
add
mov
inc
ret
int3
ffree
add
hlt
add
fadd
stc
ret
add
pop
push
push
loopne
add
or
inc
inc
mov
or
retf
ror
inc
push
or
add
mov
(bad)
in
ret
xchg
pop
cmp
or
cld
mov
sub
sbb
shr
lods
popaw
adc
pushf
inc
add
cmp
rol
xchg
nop
add
and
sbb
fldenv
xor
add
ret
or
lock
sbb
mov
mov
ud1
ret
scas
test
mov
add
jo
aas
stos
xor
inc
add
inc
test
adc
pop
pushf
mov
das
add
add
pushf
pusha
add
dec
add
bound
jg
loop
(bad)
cmp
aaa
xchg
clc
adc
loope
sbb
or
inc
lds
and
mov
pause
sub
lea
add
add
or
or
and
adc
jns
ret
shl
add
add
stc
add
or
inc
sub
add
add
sbb
add
or
mov
rol
mov
inc
xchg
mov
clc
jo
inc
adc
inc
nop
add
mov
sub
outs
or
inc
test
xchg
sub
loopne
push
aaa
pusha
or
movs
retf
adc
adc
inc
retf
pop
push
adc
lock
and
sub
pop
cmp
fimul
pop
sub
mov
je
shl
inc
sub
jo
repnz
sbb
add
aam
and
add
sub
inc
mov
loopne
movs
out
lods
retf
mov
(bad)
adc
fadd
pushf
cmp
xchg
sub
and
mov
shl
or
lods
pop
shl
jb
add
adc
add
xor
aas
ja
push
jo
(bad)
scas
ins
cld
sub
jo
or
pop
sar
jns
addr16
cmp
add
cmp
sub
add
mov
inc
pop
push
and
pop
inc
add
aas
push
cmp
shr
mov
inc
jns
mov
adc
test
adc
arpl
or
xchg
add
inc
and
adc
test
cli
xchg
sbb
push
push
push
push
rol
jecxz
ror
nop
popf
sub
add
sbb
test
stos
dec
rol
enter
mov
push
inc
daa
fidivr
les
test
ss
pop
add
mov
sbb
pushf
mov
xor
test
rol
es
call
mov
cld
mov
adc
repnz
push
inc
rcl
push
loop
pop
je
xchg
cdq
adc
and
xor
je
inc
xor
and
mov
push
adc
or
and
push
lds
stos
movs
ja
sub
push
(bad)
aas
pushf
add
sub
hlt
jno
xor
enter
jl
mov
pop
jae
inc
int
xor
dec
adc
inc
or
loopne
and
jp
adc
xor
push
sbb
int
cmp
add
add
sub
push
add
loopne
inc
sub
inc
stc
test
cdq
inc
mov
push
inc
xor
lods
lods
inc
xchg
adc
add
and
add
cwde
popa
mov
sbb
lock
mov
jmp
sub
push
or
xor
xor
add
add
int3
xchg
(bad)
adc
jae
rol
xor
dec
inc
nop
and
inc
push
sub
xor
test
mov
retf
add
dec
(bad)
lds
xchg
call
test
movs
in
ret
or
inc
add
add
cmp
fs
add
or
inc
cwde
rol
add
std
jecxz
add
rcl
mov
cmp
ret
fs
inc
loop
and
or
adc
add
mov
add
push
ret
pop
and
add
add
cmp
(bad)
sbb
ds
sbb
add
or
dec
add
push
and
(bad)
xor
clc
xor
adc
push
out
mov
or
call
js
pop
xor
sbb
and
lds
push
add
pushf
add
js
lds
fmulp
je
mov
adc
sub
add
clc
inc
sbb
cmp
and
add
rol
cmp
aam
ja
cmp
loop
jne
loopne
adc
adc
arpl
rol
push
xor
adc
loop
call
inc
add
add
test
and
les
aad
add
push
mov
inc
pop
aam
or
add
mov
inc
push
sbb
(bad)
and
add
sbb
dec
ret
or
mov
mov
add
stc
add
or
inc
sub
add
add
sbb
add
inc
dec
sbb
mov
rol
inc
dec
ret
inc
cld
push
and
sub
sbb
stos
mov
inc
xor
icebp
out
int
test
xor
mov
mov
mov
or
out
aam
pop
pop
retf
loope
(bad)
es
pcmpeqb
mov
inc
test
xor
mov
jns
xchg
add
mov
jo
dec
sub
inc
mov
pop
push
cmp
dec
fldcw
xchg
stos
or
and
mov
ret
mov
popa
mov
inc
sub
jecxz
nop
add
retf
xor
push
pop
iret
cmp
pop
inc
pop
adc
movs
add
push
and
fwait
cmp
add
pop
inc
nop
push
xchg
add
xor
push
fidiv
fs
add
pop
test
cmp
add
scas
(bad)
mov
(bad)
out
mov
shl
sti
push
daa
fld
jge
mov
jmp
and
or
and
enter
jae
adc
and
push
pop
in
push
test
sbb
add
sbb
shl
inc
es
scas
ins
rol
fsub
dec
cmp
xor
mov
add
mov
adc
inc
adc
mov
inc
push
push
xchg
lds
dec
cld
ror
loop
push
test
or
js
rol
and
inc
rol
lds
cmp
rol
or
xor
inc
daa
inc
mov
fild
sbb
rcl
push
add
inc
adc
add
xor
mov
cmp
loopne
das
mov
enter
fwait
jl
mov
rcl
sub
inc
cmp
or
mov
loop
cs
ins
rol
sbb
mov
fild
or
xor
or
cmp
push
inc
sub
int3
adc
call
adc
rol
add
inc
xor
adc
rol
and
inc
test
pusha
or
mov
pop
sub
retf
mov
add
adc
inc
xchg
push
retf
add
shl
xchg
mov
imul
xchg
add
push
les
or
xor
popf
lock
xchg
ret
add
mov
popf
aam
mov
aas
(bad)
xor
inc
xor
loope
sbb
add
push
int3
mov
and
mov
fcomp
pop
add
xlat
repz
iret
pop
jp
shl
or
add
xor
mov
adc
push
mov
cmp
push
js
push
lds
daa
mov
pusha
xor
pop
lock
loop
adc
add
add
add
es
push
and
dec
and
je
and
pop
das
(bad)
hlt
dec
sub
xor
add
dec
adc
(bad)
aas
or
add
xor
push
adc
lock
or
mov
sbb
pushf
inc
add
retf
pop
dec
adc
mov
cmp
retf
pop
sahf
(bad)
adc
xor
adc
rol
out
mov
pop
leave
push
push
add
repnz
fadd
int
xlat
dec
push
std
clc
xor
adc
(bad)
clc
inc
pop
mov
nop
add
clc
pop
add
mov
loope
popw
mov
xor
cmp
push
add
in
sbb
inc
adc
mov
fwait
add
inc
lock
or
xchg
mov
and
sbb
ret
arpl
cmp
or
inc
rol
push
ret
push
cli
adc
add
add
jecxz
adc
ret
rol
adc
jl
pop
push
or
xor
jne
stc
add
or
inc
sub
add
add
sbb
add
inc
dec
sbb
mov
rol
xchg
sbb
lock
jl
mov
pextrw
jg
stos
xchg
jp
test
or
sub
fsub
mov
add
push
adc
sbb
jecxz
or
sbb
sub
and
mov
pop
dec
popf
sub
mov
cmp
and
inc
adc
bnd
sbb
je
pushf
xor
mov
xchg
or
mov
cmp
jmp
sbb
push
push
stos
dec
fmul
dec
inc
pop
cmp
aam
mov
sbb
pop
xchg
cmps
push
test
mov
pop
sbb
stos
jne
lods
js
fprem1
jmp
and
add
cmp
xchg
push
movs
(bad)
add
lock
ret
mov
cmps
sub
mov
sub
popa
xor
jmp
jg
movs
fs
stos
xchg
add
push
sub
sbb
inc
ds
mov
jmp
push
or
ret
lahf
and
mov
add
loopne
or
pop
cwde
addr16
sbb
ret
add
fadd
inc
ret
mov
and
ret
in
call
pusha
and
or
jge
aam
outs
test
rol
dec
popa
and
out
jns
int
mov
inc
pop
or
adc
inc
movs
jb
and
adc
rol
mov
test
xchg
lds
push
nop
loopne
push
jmp
ins
test
xchg
xor
add
xor
xor
add
or
cld
push
dec
daa
pusha
inc
imul
inc
add
loopne
(bad)
sub
mov
mov
xchg
xor
rol
je
add
push
jl
xor
adc
dec
cmp
dec
(bad)
push
pop
fs
adc
loopne
pop
jae
daa
dec
adc
and
popa
mov
in
and
and
sbb
adc
imul
sbb
add
add
dec
mov
cwde
rol
enter
and
mov
adc
adc
mov
loopne
sub
or
push
(bad)
sub
or
int3
rol
ins
rol
sbb
or
inc
add
aas
sub
loopne
push
(bad)
pop
push
test
xchg
jl
add
pusha
xchg
inc
sbb
push
add
adc
cld
jae
add
push
test
mov
sub
popf
sbb
inc
inc
mov
and
or
push
add
push
adc
test
sub
shl
lds
mov
imul
pusha
sbb
push
cwde
inc
inc
or
mov
sub
add
mov
mov
cmp
adc
and
inc
push
inc
add
xchg
dec
xor
adc
sbb
mov
add
jae
movs
add
call
ror
xor
pushf
out
add
push
mov
push
clc
adc
xor
xor
push
or
pop
sub
mov
pop
pop
mov
push
or
js
add
push
mov
es
add
or
add
ret
mov
call
push
inc
xor
mov
add
mov
mov
adc
hlt
cmp
int
mov
or
add
adc
sbb
and
xchg
add
cmp
or
adc
add
push
lea
sbb
or
adc
xchg
add
inc
and
adc
pop
lea
cmp
add
adc
and
adc
or
add
cmps
js
aas
xor
add
(bad)
and
dec
(bad)
cmp
add
cmp
push
inc
add
enter
push
add
fidiv
shr
cmp
movs
inc
and
mov
xchg
and
inc
adc
sbb
sub
sub
outs
or
test
and
cmp
lahf
and
mov
add
add
and
add
and
add
or
inc
sub
add
add
push
add
or
add
or
mov
rol
mov
inc
sbb
mov
inc
loopne
cmp
nop
dec
ret
(bad)
inc
sbb
and
and
push
fdivr
or
mov
mov
and
xchg
(bad)
(bad)
inc
or
xor
jecxz
(bad)
or
sar
das
inc
ror
arpl
or
mov
mov
mov
lods
pop
int
mov
into
fwait
add
mov
mov
popf
retf
daa
retf
aas
push
push
mov
dec
mov
jno
inc
sbb
or
fisubr
push
mov
mov
shr
and
pop
sar
and
sub
ret
nop
call
mov
movs
mov
lds
js
or
add
repnz
mov
jmp
inc
sub
push
repnz
pop
and
dec
clc
mov
inc
test
pusha
adc
je
pop
mov
stos
jne
inc
sub
fnstsw
add
inc
adc
pop
or
inc
add
icebp
sbb
pop
and
jl
adc
shr
inc
add
xor
pusha
or
and
adc
push
adc
pusha
jne
add
rol
test
and
xchg
mov
or
enter
adc
nop
retf
sbb
push
test
mov
and
pop
or
inc
pop
es
fadd
inc
cmp
add
sub
repnz
mov
pusha
les
sub
xchg
xchg
sbb
pop
mov
mov
es
add
js
test
sub
lahf
test
mov
scas
xchg
mov
(bad)
aam
outs
pop
mov
add
cmp
inc
mov
hlt
add
stos
mov
cdq
adc
inc
xchg
and
add
push
jl
nop
mov
popf
sub
test
aaa
je
mov
pusha
pop
sub
les
xchg
cmp
pop
test
cwde
dec
jb
or
xchg
mov
and
lock
adc
jae
icebp
dec
xor
shl
adc
mov
mov
push
adc
rol
ins
rol
mov
and
fwait
pop
xor
dec
and
and
pop
cmove
add
daa
retf
add
pop
and
add
test
sub
push
repnz
sub
add
lods
mov
sub
push
adc
xor
add
scas
dec
(bad)
call
push
inc
add
push
inc
inc
and
rol
xor
mov
xchg
(bad)
adc
sbb
inc
daa
nop
mov
es
hlt
dec
adc
xchg
test
outs
cld
push
rol
xchg
dec
ss
add
adc
or
add
pop
inc
loopne
xor
xchg
rol
inc
push
pop
mov
jl
push
mov
rol
adc
inc
adc
or
inc
add
adc
push
cwde
xor
xor
ret
aam
test
jns
inc
push
or
icebp
iret
sbb
rol
pop
aaa
js
rcr
pusha
add
and
and
mov
nop
or
inc
push
dec
jo
push
js
rcr
add
ret
adc
js
or
add
test
xor
pop
mov
adc
add
adc
or
and
push
test
sbb
push
add
add
inc
mov
push
or
add
sbb
add
inc
push
xchg
cwde
xchg
add
clc
(bad)
or
add
dec
pop
add
repnz
or
push
add
xor
inc
jl
pop
and
add
inc
add
mov
test
push
sbb
sbb
adc
ror
cmp
or
popa
or
nop
add
xor
mov
inc
ret
shl
js
push
test
add
cdq
ret
add
push
add
and
add
stc
add
or
inc
sub
add
add
sbb
add
or
mov
rol
daa
mov
cmp
inc
(bad)
pop
cld
pop
imul
ins
sbb
rcr
aas
jns
push
or
inc
repnz
nop
jg
pop
and
dec
movs
ror
and
retf
xchg
loope
or
adc
popa
shl
lahf
push
pusha
jnp
cmps
loope
sbb
mov
bound
mov
aam
or
in
sbb
push
lods
pop
or
test
out
dec
add
push
sub
adc
sbb
shr
xor
or
and
scas
push
mov
push
mov
sar
push
lods
dec
loopne
jmp
hlt
or
and
daa
dec
xchg
jo
xchg
mov
cmps
inc
sbb
dec
jmp
mov
outs
fbstp
add
sub
push
out
cmp
(bad)
fsubr
push
xlat
arpl
aam
add
jnp
mov
jmp
inc
push
call
push
sub
rcl
sub
jp
add
hlt
mov
adc
push
pop
or
dec
or
jnp
ja
add
push
push
les
pop
xchg
add
add
outs
je
inc
pop
xor
repnz
cs
mov
dec
or
jl
inc
and
adc
or
jp
ins
mov
sbb
add
push
jp
mov
sbb
lods
xor
movs
and
stos
adc
into
add
add
xchg
stos
ins
adc
mov
sahf
pop
fcomp
ins
sub
push
mov
pop
enter
cmp
cwde
sub
inc
or
cmp
mov
nop
dec
and
and
adc
jae
adc
or
mov
bound
jns
aaa
add
xchg
cld
mov
sbb
fdivr
inc
adc
add
shl
hlt
test
pop
test
pop
lock
add
sbb
adc
sub
inc
and
add
xchg
mov
add
inc
mov
push
dec
lock
inc
inc
sub
js
add
or
cwde
adc
dec
adc
sbb
or
rol
jb
add
lock
inc
adc
push
dec
add
push
push
mov
dec
push
ror
cmc
jbe
pop
adc
adc
dec
inc
repnz
adc
pop
dec
adc
push
cdq
sbb
or
cmp
bound
and
adc
sub
xlat
pop
mov
les
aas
mov
push
cmovo
push
mov
mov
inc
add
mov
push
inc
sbb
add
adc
mov
push
or
sub
nop
xor
inc
ins
mov
sbb
inc
cld
ret
dec
je
push
inc
not
mov
xchg
xor
push
movs
nop
or
inc
loope
inc
cs
fdiv
dec
push
ins
fsub
add
mov
inc
ret
int3
ffree
add
hlt
add
fadd
stc
ret
add
pop
push
push
loopne
add
or
inc
inc
mov
or
retf
ror
inc
push
or
add
mov
(bad)
in
ret
xchg
pop
cmp
or
cld
mov
sub
sbb
shr
lods
popaw
adc
pushf
inc
add
cmp
rol
xchg
nop
add
and
sbb
fldenv
xor
add
ret
or
lock
sbb
mov
mov
ud1
ret
scas
test
mov
add
jo
aas
stos
xor
inc
add
inc
test
adc
pop
pushf
mov
das
add
add
pushf
pusha
add
dec
add
bound
jg
loop
(bad)
cmp
aaa
xchg
clc
adc
loope
sbb
or
inc
lds
and
mov
pause
sub
lea
add
add
or
or
and
adc
jns
ret
shl
add
add
stc
add
or
inc
sub
add
add
sbb
add
or
mov
rol
mov
inc
xchg
mov
clc
jo
inc
adc
inc
nop
add
mov
sub
outs
or
inc
test
xchg
sub
loopne
push
aaa
pusha
or
movs
retf
adc
adc
inc
retf
pop
push
adc
lock
and
sub
pop
cmp
fimul
pop
sub
mov
je
shl
inc
sub
jo
repnz
sbb
add
aam
and
add
sub
inc
mov
loopne
movs
out
lods
retf
mov
(bad)
adc
fadd
pushf
cmp
xchg
sub
and
mov
shl
or
lods
pop
shl
jb
add
adc
add
xor
aas
ja
push
jo
(bad)
scas
ins
cld
sub
jo
or
pop
sar
jns
addr16
cmp
add
cmp
sub
add
mov
inc
pop
push
and
pop
inc
add
aas
push
cmp
shr
mov
inc
jns
mov
adc
test
adc
arpl
or
xchg
add
inc
and
adc
test
cli
xchg
sbb
push
push
push
push
rol
jecxz
ror
nop
popf
sub
add
sbb
test
stos
dec
rol
enter
mov
push
inc
daa
fidivr
les
test
ss
pop
add
mov
sbb
pushf
mov
xor
test
rol
es
call
mov
cld
mov
adc
repnz
push
inc
rcl
push
loop
pop
je
xchg
cdq
adc
and
xor
je
inc
xor
and
mov
push
adc
or
and
push
lds
stos
movs
ja
sub
push
(bad)
aas
pushf
add
sub
hlt
jno
xor
enter
jl
mov
pop
jae
inc
int
xor
dec
adc
inc
or
loopne
and
jp
adc
xor
push
sbb
int
cmp
add
add
sub
push
add
loopne
inc
sub
inc
stc
test
cdq
inc
mov
push
inc
xor
lods
lods
inc
xchg
adc
add
and
add
cwde
popa
mov
sbb
lock
mov
jmp
sub
push
or
xor
xor
add
add
int3
xchg
(bad)
adc
jae
rol
xor
dec
inc
nop
and
inc
push
sub
xor
test
mov
retf
add
dec
(bad)
lds
xchg
call
test
movs
in
ret
or
inc
add
add
cmp
fs
add
or
inc
cwde
rol
add
std
jecxz
add
rcl
mov
cmp
ret
fs
inc
loop
and
or
adc
add
mov
add
push
ret
pop
and
add
add
cmp
(bad)
sbb
ds
sbb
add
or
dec
add
push
and
(bad)
xor
clc
xor
adc
push
out
mov
or
call
js
pop
xor
sbb
and
lds
push
add
pushf
add
js
lds
fmulp
je
mov
adc
sub
add
clc
inc
sbb
cmp
and
add
rol
cmp
aam
ja
cmp
loop
jne
loopne
adc
adc
arpl
rol
push
xor
adc
loop
call
inc
add
add
test
and
les
aad
add
push
mov
inc
pop
aam
or
add
mov
inc
push
sbb
(bad)
and
add
sbb
dec
ret
or
mov
mov
add
stc
add
or
inc
sub
add
add
sbb
add
inc
dec
sbb
mov
rol
inc
dec
ret
inc
cld
push
and
sub
sbb
stos
mov
inc
xor
icebp
out
int
test
xor
mov
mov
mov
or
out
aam
pop
pop
retf
loope
(bad)
es
pcmpeqb
mov
inc
test
xor
mov
jns
xchg
add
mov
jo
dec
sub
inc
mov
pop
push
cmp
dec
fldcw
xchg
stos
or
and
mov
ret
mov
popa
mov
inc
sub
jecxz
nop
add
retf
xor
push
pop
iret
cmp
pop
inc
pop
adc
movs
add
push
and
fwait
cmp
add
pop
inc
nop
push
xchg
add
xor
push
fidiv
fs
add
pop
test
cmp
add
scas
(bad)
mov
(bad)
out
mov
shl
sti
push
daa
fld
jge
mov
jmp
and
or
and
enter
jae
adc
and
push
pop
in
push
test
sbb
add
sbb
shl
inc
es
scas
ins
rol
fsub
dec
cmp
xor
mov
add
mov
adc
inc
adc
mov
inc
push
push
xchg
lds
dec
cld
ror
loop
push
test
or
js
rol
and
inc
rol
lds
cmp
rol
or
xor
inc
daa
inc
mov
fild
sbb
rcl
push
add
inc
adc
add
xor
mov
cmp
loopne
das
mov
enter
fwait
jl
mov
rcl
sub
inc
cmp
or
mov
loop
cs
ins
rol
sbb
mov
fild
or
xor
or
cmp
push
inc
sub
int3
adc
call
adc
rol
add
inc
xor
adc
rol
and
inc
test
pusha
or
mov
pop
sub
retf
mov
add
adc
inc
xchg
push
retf
add
shl
xchg
mov
imul
xchg
add
push
les
or
xor
popf
lock
xchg
ret
add
mov
popf
aam
mov
aas
(bad)
xor
inc
xor
loope
sbb
add
push
int3
mov
and
mov
fcomp
pop
add
xlat
repz
iret
pop
jp
shl
or
add
xor
mov
adc
push
mov
cmp
push
js
push
lds
daa
mov
pusha
xor
pop
lock
loop
adc
add
add
add
es
push
and
dec
and
je
and
pop
das
(bad)
hlt
dec
sub
xor
add
dec
adc
(bad)
aas
or
add
xor
push
adc
lock
or
mov
sbb
pushf
inc
add
retf
pop
dec
adc
mov
cmp
retf
pop
sahf
(bad)
adc
xor
adc
rol
out
mov
pop
leave
push
push
add
repnz
fadd
int
xlat
dec
push
std
clc
xor
adc
(bad)
clc
inc
pop
mov
nop
add
clc
pop
add
mov
loope
popw
mov
xor
cmp
push
add
in
sbb
inc
adc
mov
fwait
add
inc
lock
or
xchg
mov
and
sbb
ret
arpl
cmp
or
inc
rol
push
ret
push
cli
adc
add
add
jecxz
adc
ret
rol
adc
jl
pop
push
or
xor
jne
stc
add
or
inc
sub
add
add
sbb
add
inc
dec
sbb
mov
rol
xchg
sbb
lock
jl
mov
pextrw
jg
stos
xchg
jp
test
or
sub
fsub
mov
add
push
adc
sbb
jecxz
or
sbb
sub
and
mov
pop
dec
popf
sub
mov
cmp
and
inc
adc
bnd
sbb
je
pushf
xor
mov
xchg
or
mov
cmp
jmp
sbb
push
push
stos
dec
fmul
dec
inc
pop
cmp
aam
mov
sbb
pop
xchg
cmps
push
test
mov
pop
sbb
stos
jne
lods
js
fprem1
jmp
and
add
cmp
xchg
push
movs
(bad)
add
lock
ret
mov
cmps
sub
mov
sub
popa
xor
jmp
jg
movs
fs
stos
xchg
add
push
sub
sbb
inc
ds
mov
jmp
push
or
ret
lahf
and
mov
add
loopne
or
pop
cwde
addr16
sbb
ret
add
fadd
inc
ret
mov
and
ret
in
call
pusha
and
or
jge
aam
outs
test
rol
dec
popa
and
out
jns
int
mov
inc
pop
or
adc
inc
movs
jb
and
adc
rol
mov
test
xchg
lds
push
nop
loopne
push
jmp
ins
test
xchg
xor
add
xor
xor
add
or
cld
push
dec
daa
pusha
inc
imul
inc
add
loopne
(bad)
sub
mov
mov
xchg
xor
rol
je
add
push
jl
xor
adc
dec
cmp
dec
(bad)
push
pop
fs
adc
loopne
pop
jae
daa
dec
adc
and
popa
mov
in
and
and
sbb
adc
imul
sbb
add
add
dec
mov
cwde
rol
enter
and
mov
adc
adc
mov
loopne
sub
or
push
(bad)
sub
or
int3
rol
ins
rol
sbb
or
inc
add
aas
sub
loopne
push
(bad)
pop
push
test
xchg
jl
add
pusha
xchg
inc
sbb
push
add
adc
cld
jae
add
push
test
mov
sub
popf
sbb
inc
inc
mov
and
or
push
add
push
adc
test
sub
shl
lds
mov
imul
pusha
sbb
push
cwde
inc
inc
or
mov
sub
add
mov
mov
cmp
adc
and
inc
push
inc
add
xchg
dec
xor
adc
sbb
mov
add
jae
movs
add
call
ror
xor
pushf
out
add
push
mov
push
clc
adc
xor
xor
push
or
pop
sub
mov
pop
pop
mov
push
or
js
add
push
mov
es
add
or
add
ret
mov
call
push
inc
xor
mov
add
mov
mov
adc
hlt
cmp
int
mov
or
add
adc
sbb
and
xchg
add
cmp
or
adc
add
push
lea
sbb
or
adc
xchg
add
inc
and
adc
pop
lea
cmp
add
adc
and
adc
or
add
cmps
js
aas
xor
add
(bad)
and
dec
(bad)
cmp
add
cmp
push
inc
add
enter
push
add
fidiv
shr
cmp
movs
inc
and
mov
xchg
and
inc
adc
sbb
sub
sub
outs
or
test
and
cmp
lahf
and
mov
add
add
and
add
and
add
or
inc
sub
add
add
push
add
or
add
or
mov
rol
mov
inc
sbb
mov
inc
loopne
cmp
nop
dec
ret
(bad)
inc
sbb
and
and
push
fdivr
or
mov
mov
and
xchg
(bad)
(bad)
inc
or
xor
jecxz
(bad)
or
sar
das
inc
ror
arpl
or
mov
mov
mov
lods
pop
int
mov
into
fwait
add
mov
mov
popf
retf
daa
retf
aas
push
push
mov
dec
mov
jno
inc
sbb
or
fisubr
push
mov
mov
shr
and
pop
sar
and
sub
ret
nop
call
mov
movs
mov
lds
js
or
add
repnz
mov
jmp
inc
sub
push
repnz
pop
and
dec
clc
mov
inc
test
pusha
adc
je
pop
mov
stos
jne
inc
sub
fnstsw
add
inc
adc
pop
or
inc
add
icebp
sbb
pop
and
jl
adc
shr
inc
add
xor
pusha
or
and
adc
push
adc
pusha
jne
add
rol
test
and
xchg
mov
or
enter
adc
nop
retf
sbb
push
test
mov
and
pop
or
inc
pop
es
fadd
inc
cmp
add
sub
repnz
mov
pusha
les
sub
xchg
xchg
sbb
pop
mov
mov
es
add
js
test
sub
lahf
test
mov
scas
xchg
mov
(bad)
aam
outs
pop
mov
add
cmp
inc
mov
hlt
add
stos
mov
cdq
adc
inc
xchg
and
add
push
jl
nop
mov
popf
sub
test
aaa
je
mov
pusha
pop
sub
les
xchg
cmp
pop
test
cwde
dec
jb
or
xchg
mov
and
lock
adc
jae
icebp
dec
xor
shl
adc
mov
mov
push
adc
rol
ins
rol
mov
and
fwait
pop
xor
dec
and
and
pop
cmove
add
daa
retf
add
pop
and
add
test
sub
push
repnz
sub
add
lods
mov
sub
push
adc
xor
add
scas
dec
(bad)
call
push
inc
add
push
inc
inc
and
rol
xor
mov
xchg
(bad)
adc
sbb
inc
daa
nop
mov
es
hlt
dec
adc
xchg
test
outs
cld
push
rol
xchg
dec
ss
add
adc
or
add
pop
inc
loopne
xor
xchg
rol
inc
push
pop
mov
jl
push
mov
rol
adc
inc
adc
or
inc
add
adc
push
cwde
xor
xor
ret
aam
test
jns
inc
push
or
icebp
iret
sbb
rol
pop
aaa
js
rcr
pusha
add
and
and
mov
nop
or
inc
push
dec
jo
push
js
rcr
add
ret
adc
js
or
add
test
xor
pop
mov
adc
add
adc
or
and
push
test
sbb
push
add
add
inc
mov
push
or
add
sbb
add
inc
push
xchg
cwde
xchg
add
clc
(bad)
or
add
dec
pop
add
repnz
or
push
add
xor
inc
jl
pop
and
add
inc
add
mov
test
push
sbb
sbb
adc
ror
cmp
or
popa
or
nop
add
xor
mov
inc
ret
shl
js
push
test
add
cdq
ret
add
push
add
and
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
adc
push
rol
rol
or
lgdtd
dec
add
add
popa
xor
sbb
add
in
add
ins
je
add
inc
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
retf
cmps
pop
cld
mov
call
add
ret
add
clc
xchg
std
hlt
lods
scas
mov
hlt
outs
push
push
std
(bad)
std
stc
repz
adc
(bad)
jmp
mov
or
adc
retf
xchg
data16
lods
out
les
pop
jmp
jae
jns
cdq
push
add
or
mov
cld
aam
cli
cmps
add
out
add
or
inc
(bad)
jmp
add
add
jmp
(bad)
cli
add
dec
ja
(bad)
(bad)
xlat
jecxz
mov
mov
jmp
add
mov
(bad)
(bad)
cmp
fld
repnz
add
test
std
retf
(bad)
adc
call
jmp
add
mov
(bad)
fld
cli
stos
add
(bad)
or
daa
test
(bad)
cdq
add
ret
pop
jmp
add
scas
add
mov
(bad)
in
and
fsub
xlat
mov
in
in
icebp
mov
mov
in
xchg
or
ficom
mov
(bad)
stos
add
in
(bad)
jmp
retf
aam
xchg
(bad)
inc
mov
push
cmps
jae
hlt
mov
fnsave
les
push
or
les
mov
repnz
in
xchg
add
data16
test
fcmovb
sahf
call
add
lods
add
rol
jmp
jmp
in
cmp
fiadd
hlt
in
loop
add
sti
out
shl
out
es
mov
out
popf
add
fst
in
repnz
popf
cmps
jns
push
adc
sar
or
retf
add
mov
fldcw
icebp
hlt
(bad)
xchg
test
repnz
dec
or
repz
mov
into
icebp
ret
retf
mov
out
mov
mov
adc
fild
(bad)
fld
out
lods
or
repnz
jecxz
sub
iret
cmp
xchg
call
(bad)
stos
or
loopne
(bad)
jmp
stc
mov
shr
mov
push
push
std
les
das
ss
or
mov
stc
cmps
or
scas
add
jmp
(bad)
in
add
mov
cli
fiadd
inc
inc
dec
(bad)
stc
add
outs
jne
mov
cmc
out
sti
loop
div
imul
jecxz
out
in
out
add
out
hlt
out
repnz
repz
stc
cld
cld
push
mov
add
cdq
or
repnz
mov
sti
fiadd
stc
mov
repz
stos
add
rcr
imul
stc
cmc
add
fadd
aad
adc
in
icebp
fild
jmp
arpl
mov
icebp
sar
cli
clc
std
cld
sti
add
fild
jns
cmp
mov
clc
in
push
mov
add
inc
adc
icebp
or
fucom
mov
push
fcmovnu
bnd
adc
ror
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
adc
inc
xor
mov
ret
xchg
cmps
inc
cmp
mov
cmp
enter
xchg
pop
mov
stos
pop
adc
cmp
rcl
xchg
arpl
nop
nop
sub
mov
or
or
sub
dec
pusha
shl
ja
mov
adc
inc
sar
fsubr
mov
and
push
add
ror
sbb
adc
sbb
sbb
rol
add
inc
and
inc
das
sar
xor
pop
add
cwde
or
inc
xchg
or
fdiv
in
add
mov
mov
inc
or
enter
and
add
add
rol
and
adc
adc
and
xchg
sbb
mov
xor
xor
mov
rcl
and
arpl
and
mov
jl
mov
cmp
rol
mul
and
or
dec
inc
adc
and
adc
or
mov
and
and
sub
pop
and
mov
push
sahf
inc
jl
and
add
mov
and
or
jge
nop
dec
cmp
sub
adc
(bad)
cmp
dec
ror
inc
push
popa
fdiv
shr
inc
cmp
sub
dec
loopne
or
(bad)
les
or
mov
dec
sub
call
fadd
or
and
add
xor
pop
das
or
or
xor
push
or
lea
pop
adc
xor
mov
dec
sbb
jo
retf
nop
loopne
or
cmp
add
xor
push
push
jo
pop
sti
xchg
repnz
sub
add
dec
push
jae
add
mov
and
sbb
hlt
les
sbb
dec
xchg
push
jg
aam
or
mov
cwde
add
sbb
or
addr16
add
test
je
jl
dec
adc
jmp
add
mov
or
xchg
or
test
or
jo
test
pushf
mov
pop
add
or
xchg
add
add
add
cmp
sub
or
call
cld
loope
push
xchg
stos
mov
adc
(bad)
cmp
int
pushf
pop
pusha
xor
mov
add
mov
adc
or
or
enter
xchg
mov
ret
xor
lock
adc
je
add
dec
pop
mov
adc
clc
mov
add
adc
dec
mov
adc
lock
(bad)
enter
xchg
inc
sub
(bad)
in
lds
mov
pop
arpl
adc
push
xchg
dec
push
xchg
xor
inc
sbb
inc
pop
or
jno
pop
lods
add
add
(bad)
or
pop
mov
fidiv
ret
adc
adc
inc
outs
inc
and
push
(bad)
call
or
daa
mov
ret
leave
mov
adc
pop
enter
mov
push
out
mov
inc
and
mov
and
jnp
test
jne
mov
jo
sbb
and
xor
aam
int3
jle
inc
push
and
mov
adc
fadd
das
add
mov
mov
xlat
jb
sbb
push
xchg
leave
push
(bad)
(bad)
in
and
add
adc
or
mov
pop
adc
add
pop
mov
add
cwde
fcmove
xor
adc
or
adc
or
fadd
sbb
jge
js
sub
mov
xchg
aam
sbb
test
xor
add
loopne
sub
mov
mov
inc
inc
or
sar
inc
or
adc
das
mov
add
in
add
test
lea
test
add
div
aaa
cmp
push
add
add
les
add
retf
push
pop
push
inc
or
iret
imul
in
push
lock
mov
add
xor
sbb
iret
sub
mov
cmps
jl
int
jno
or
add
add
sbb
or
mov
add
call
sub
movs
xor
adc
sbb
add
xor
pop
push
xor
add
add
inc
sub
cmp
inc
xor
fmulp
test
and
test
push
loope
add
add
push
and
sbb
add
add
or
xor
and
test
shl
xchg
stos
repz
sub
and
sahf
sbb
cmp
pop
test
push
pop
add
push
icebp
add
hlt
bound
adc
mov
bound
add
adc
cdq
sahf
cdq
retf
push
jbe
test
add
mov
pop
rcl
or
add
vtestps
add
add
mov
sub
inc
adc
adc
mov
in
ror
(bad)
sbb
mov
or
les
and
ret
fwait
sbb
lea
and
cmp
inc
cs
dec
pop
sub
add
pop
js
pop
pop
and
retf
push
cwde
nop
in
jae
popa
lds
add
push
test
popa
mov
ret
leave
adc
sub
add
(bad)
fcom
cmp
adc
add
lock
loopne
sbb
sbb
rol
les
xor
or
mov
pop
loopne
mov
pop
inc
add
pop
push
mov
mov
out
cdq
scas
jp
mov
mov
add
xchg
rol
adc
mov
mov
aas
clc
inc
adc
mov
clc
add
fcmovnu
or
or
test
aaa
mov
test
or
push
or
pusha
or
or
lds
xchg
mov
repz
pop
jg
add
sbb
(bad)
adc
dec
out
shr
mov
ds
or
movs
mov
and
nop
add
call
jecxz
push
arpl
jp
add
int3
adc
js
or
cmp
add
loopne
push
cwde
cdq
pop
ins
push
add
sbb
adc
adc
pusha
add
test
or
je
loope
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
rcr
push
adc
scas
sub
inc
push
sub
inc
mov
ja
repnz
adc
(bad)
jns
ja
lahf
xchg
xchg
cmp
jmp
xchg
popa
pop
or
sbb
cmp
mov
inc
mov
aam
repnz
test
cmp
xor
mov
mov
(bad)
shl
or
xchg
push
jg
pop
in
pop
ss
mov
xor
enter
test
hlt
das
mov
add
pop
or
lahf
rol
add
das
adc
sti
or
pop
cmp
mov
jmp
add
sbb
cwde
push
imul
push
mov
dec
mov
sbb
cmp
sbb
xor
push
inc
(bad)
push
push
mov
or
test
out
fimul
push
repz
xchg
popa
add
or
mov
repnz
add
test
push
jp
test
sar
and
add
es
int3
pop
jg
ror
sub
nop
nop
ret
add
push
push
mov
xor
adc
popf
popa
add
call
and
or
or
add
inc
or
clc
push
dec
add
and
jo
sbb
fsub
cmp
adc
std
push
aam
push
or
repnz
rol
add
cmp
mov
or
jns
cmp
cmp
inc
add
sbb
adc
add
adc
or
sub
dec
add
adc
fiadd
hlt
lods
jae
or
add
or
shl
nop
add
sub
call
dec
or
cmp
add
in
fdivr
jmp
inc
ret
retf
stos
push
or
adc
xor
nop
inc
add
ret
out
stc
lods
mov
daa
add
ror
test
add
mov
or
pop
lock
ret
jo
enter
add
aas
mov
or
test
aas
ret
xchg
inc
retf
mov
call
adc
add
scas
and
nop
or
call
clc
nop
sub
pop
dec
dec
fs
lods
and
out
and
push
or
bswap
and
mov
xor
call
je
hlt
dec
es
adc
xor
(bad)
or
lock
push
xor
dec
sub
add
xor
out
mov
aam
out
sub
ret
ret
add
and
nop
repnz
add
inc
push
push
add
sbb
ret
mov
or
or
jae
jp
cmc
pop
(bad)
fdiv
iret
sbb
sub
add
mov
or
cs
lea
pop
test
in
push
add
adc
out
sub
or
mov
pop
in
pop
repnz
jmp
mov
lds
add
dec
xchg
pop
jo
inc
in
mov
cli
fstp
xor
icebp
mov
add
repz
mov
out
pop
lahf
call
iret
je
mov
in
and
rol
pop
push
xchg
inc
int
mov
pop
jmp
inc
sar
rcl
inc
add
inc
test
loopne
pop
test
mov
cmp
jae
xlat
and
mov
jge
add
mov
popa
pop
mov
fdivr
jp
popf
arpl
dec
push
fistp
dec
test
mov
popa
push
xor
jbe
inc
or
xor
into
int
out
fisttp
mov
adc
push
mov
outs
sub
add
ret
xor
and
cmp
pushf
sub
adc
inc
push
mov
dec
xor
jle
mov
add
loop
add
pusha
pop
fs
push
jb
shl
xor
add
dec
xor
adc
dec
mov
add
push
scas
mov
xor
loop
rcr
or
and
ror
(bad)
clc
add
sub
mov
aas
jl
add
rcr
outs
ror
inc
and
push
(bad)
jo
dec
sbb
and
add
fisubr
int
sub
inc
add
inc
add
mov
sbb
or
movaps
push
mov
loopne
jbe
in
add
adc
add
mov
dec
adc
push
rol
sub
jae
mov
xchg
jmp
ret
loopne
mov
mov
cmp
mov
ret
inc
adc
pop
test
inc
sbb
sub
test
pusha
and
mov
dec
add
xor
inc
adc
sar
push
xchg
inc
dec
add
test
movs
pop
sub
cmps
push
adc
xchg
sub
jnp
xchg
sub
stos
inc
call
or
and
inc
mov
aad
adc
add
push
mov
sar
push
adc
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
inc
mov
inc
jg
adc
cmp
nop
mov
dec
fwait
jbe
pop
xchg
jge
and
adc
mov
std
inc
mov
fist
or
xor
and
pop
sbb
jecxz
mov
stos
loopne
pop
xchg
loop
mov
dec
push
scas
sbb
imul
adc
inc
enter
fldenv
fs
out
loope
adc
out
pop
inc
pop
sub
ds
not
mov
inc
and
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
shl
cli
xor
rol
mov
aas
inc
adc
push
stos
jo
ficomp
or
push
inc
nop
mov
inc
stos
mov
add
sbb
mov
inc
xchg
(bad)
sub
mov
sub
in
lahf
lods
xchg
(bad)
pushf
cld
xor
(bad)
xlat
mov
xor
fsub
arpl
retf
call
stos
push
arpl
ret
xchg
or
push
jge
nop
test
and
sub
sub
mov
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
(bad)
std
repz
nop
mov
or
adc
or
add
test
std
xor
cwde
adc
mov
dec
inc
cli
out
pop
mov
stc
mov
or
or
pop
adc
inc
cld
(bad)
(bad)
out
push
cmp
lock
je
lea
mov
inc
or
std
jae
xor
shl
stc
add
or
inc
sub
add
add
add
add
or
add
or
push
mov
sub
mov
inc
jl
nop
(bad)
or
adc
dec
fmul
loop
cmp
adc
lds
xchg
sbb
and
inc
inc
or
mov
push
or
inc
retf
xor
leave
mov
xchg
dec
aaa
aaa
sub
mov
adc
and
ret
adc
or
outs
and
or
out
push
cmp
inc
xor
fiadd
scas
mov
ss
clc
xchg
inc
jns
in
or
mov
test
mov
and
rol
dec
addr16
ror
arpl
inc
ror
inc
sub
outs
pushf
mov
mov
sub
cmp
(bad)
xor
mov
cmp
cwde
and
and
(bad)
push
xor
lahf
mov
cli
ja
push
add
or
daa
inc
xchg
imul
call
js
mov
sbb
enter
pop
inc
mov
int
and
cmp
push
xchg
syscall
popa
pop
xchg
push
inc
cld
ror
sbb
xchg
xchg
int
xchg
add
pop
dec
nop
push
add
pop
and
or
or
nop
add
mov
jecxz
xor
enter
dec
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
test
cmp
aad
enter
xchg
cmps
fld
mov
xor
xor
nop
lock
push
inc
mov
mov
cmp
fdiv
pop
xchg
adc
cmp
retf
sub
and
xchg
add
push
mov
adc
inc
in
sub
test
sub
mov
adc
data16
add
(bad)
mov
xor
add
adc
daa
mov
fild
add
sbb
(bad)
in
inc
xchg
add
add
pop
mov
push
sbb
aam
test
inc
mov
cmp
es
add
inc
rol
sbb
inc
fwait
cmp
pop
dec
xchg
fsubr
mov
sbb
(bad)
mov
rol
push
push
or
or
jecxz
inc
sub
pop
xor
adc
cmp
mov
rol
lds
inc
pop
xchg
cwde
mov
mov
fimul
xor
call
pop
inc
test
or
or
shl
ror
mov
mov
lea
and
dec
pop
xchg
clc
xor
rcr
(bad)
cmp
inc
add
(bad)
cld
push
or
sbb
adc
jne
enter
sub
push
inc
jp
pushf
adc
add
inc
xor
adc
mov
lock
or
test
lahf
and
hlt
jae
and
mov
mov
and
cmp
or
inc
adc
mov
add
loopne
add
inc
or
dec
and
push
loopne
cmp
loopne
inc
adc
(bad)
adc
xor
adc
sub
xor
cs
mov
xchg
pop
inc
repnz
out
xor
nop
cwde
loope
sbb
mov
jmp
and
cmp
mov
mov
add
rcr
inc
inc
fadd
inc
sbb
xchg
and
push
pop
or
ret
xor
in
inc
or
loopne
xor
or
out
push
or
sub
mov
stos
in
aas
retf
xor
in
mov
push
imul
fsub
in
mov
jbe
in
mov
outs
add
pcmpeqw
shl
add
push
add
mov
xor
pop
ret
outs
add
inc
mov
mov
mov
cmp
jo
in
and
fsubr
cmp
jo
mov
sahf
imul
shr
nop
imul
xchg
and
jno
in
(bad)
repz
sti
(bad)
xchg
or
add
cmp
jmp
sub
mov
nop
inc
loop
inc
sub
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
xor
push
std
adc
and
mov
ret
xchg
dec
and
mov
hlt
pop
es
shl
stc
mov
inc
add
and
push
mov
loopne
loop
push
or
add
add
dec
arpl
xchg
inc
xchg
adc
mov
js
scas
push
and
inc
hlt
arpl
mov
push
clc
add
mov
xor
mov
jo
ret
jle
in
aam
daa
ret
inc
adc
inc
adc
add
or
(bad)
ins
xor
add
mov
hlt
xor
ror
mov
and
xor
adc
inc
mov
(bad)
call
adc
push
je
dec
xor
or
fs
fsubr
mov
(bad)
fst
popa
or
xchg
stos
xchg
or
mov
clc
rol
xchg
sbb
mov
jbe
xchg
lock
push
outs
stos
jne
xor
and
loop
mov
sti
xchg
call
and
add
mov
ror
or
inc
dec
or
xchg
xor
or
in
dec
push
xor
mov
lock
adc
sar
cmc
inc
(bad)
sub
ja
enter
and
mov
dec
ret
leave
pop
inc
or
add
inc
loop
inc
sbb
adc
int3
adc
and
ror
xor
xor
cs
add
inc
or
nop
add
pushf
adc
jo
adc
pop
inc
sbb
cmp
or
or
add
pop
sbb
inc
nop
xchg
xchg
push
mov
mov
gs
ds
inc
inc
sahf
(bad)
add
and
xchg
loopne
push
add
hlt
repnz
xor
or
dec
gs
cmps
add
mov
inc
mov
xor
adc
add
mov
dec
ret
es
in
mov
ss
mov
inc
sub
mov
push
imul
fmul
and
mov
cmp
sub
sub
add
nop
(bad)
push
pop
mov
nop
dec
or
enter
xchg
adc
test
push
dec
mov
or
ins
mov
inc
dec
pop
pop
add
scas
and
inc
or
repnz
pop
ret
xchg
push
stos
out
sti
in
dec
test
inc
add
adc
add
inc
add
add
adc
mov
lds
xor
ins
repnz
sub
inc
enter
adc
movs
add
and
xor
mov
fadd
cmp
ds
hlt
or
jnp
ror
sub
add
mov
mov
int3
or
bound
adc
ss
mov
or
aas
dec
jl
scas
mov
add
and
add
or
inc
sub
add
add
add
add
or
pop
add
push
outs
or
hlt
jno
loopne
sbb
pushf
dec
icebp
pop
mov
push
mov
inc
or
nop
shr
ret
push
aas
pop
adc
jp
mov
dec
cmp
sub
sbb
sub
aad
xor
or
bound
in
xchg
cmp
cmp
jmp
pop
dec
dec
cld
mov
iret
or
sbb
pusha
sub
add
add
mov
add
stc
add
or
inc
sub
add
add
add
add
or
xchg
mov
or
enter
lahf
ret
jg
and
pop
loope
add
mov
inc
test
and
icebp
call
and
mov
in
inc
in
inc
mov
int
and
lea
pop
add
dec
sbb
lds
add
outs
pop
mov
push
adc
shl
and
clc
daa
out
lahf
test
std
sub
mov
sub
pop
add
or
inc
add
stc
add
or
inc
sub
add
add
add
add
or
pop
add
push
outs
or
hlt
jno
loopne
sbb
pushf
dec
icebp
pop
mov
push
mov
inc
or
nop
shr
ret
push
aas
pop
adc
jp
mov
dec
cmp
sub
sbb
sub
aad
xor
or
bound
in
xchg
cmp
cmp
jmp
pop
dec
dec
cld
mov
iret
or
sbb
pusha
sub
add
add
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
imul
or
enter
lahf
ret
jg
and
or
dec
add
mov
inc
test
daa
and
call
and
sbb
fsubr
pop
inc
sbb
push
add
movs
inc
add
mov
loop
mov
xchg
dec
and
inc
cs
or
je
sub
ret
mov
inc
push
inc
lods
test
cmp
push
push
cld
adc
ds
popf
mov
add
call
mov
fisttp
jbe
or
(bad)
pop
mov
es
or
loopne
and
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
mov
inc
bound
or
jo
fldenv
stc
out
rol
jg
xor
loopne
jmp
dec
dec
enter
push
test
sahf
add
push
sub
retf
or
push
and
shr
push
add
cmps
and
add
xchg
and
icebp
je
or
sbb
add
out
and
repnz
popa
mov
adc
inc
lods
dec
or
mov
cmp
popf
sub
sub
dec
cwde
xor
and
popa
or
inc
mov
cs
add
icebp
inc
(bad)
push
mov
jnp
aam
sub
push
jmp
mov
push
xchg
jno
xchg
sbb
je
sub
das
push
sub
dec
sub
xchg
dec
sar
mov
pop
xchg
jne
adc
(bad)
retf
or
jo
mov
and
adc
mov
call
push
ins
push
jecxz
nop
xor
das
outs
mov
xchg
xor
repnz
mov
adc
mov
inc
int3
and
hlt
pop
test
in
xor
mov
int3
and
daa
sbb
dec
push
and
add
retf
test
or
enter
cmp
nop
rcl
(bad)
sbb
loop
mov
arpl
retf
or
push
or
pop
cmp
aas
xor
xor
adc
xor
dec
inc
pusha
or
or
ret
retf
cmp
loopne
sbb
and
sub
and
inc
mov
sbb
add
jl
nop
pop
and
mov
popf
lahf
mov
es
add
sbb
ins
jmp
mov
jb
and
ds
mov
fs
dec
xchg
sbb
cmp
xor
or
nop
push
fisttp
mov
adc
pop
sub
and
mov
mov
mov
imul
add
inc
or
sbb
add
mov
popa
cmp
dec
xor
and
adc
or
mov
xor
leave
aas
xchg
movs
sar
dec
popa
dec
push
aad
or
ror
call
shl
xchg
mov
or
lds
add
add
nop
cmp
or
sbb
dec
mov
jmp
ror
or
mov
mov
mov
rcr
arpl
inc
sub
push
fcomp
add
or
cmp
mov
inc
cmp
nop
xchg
cmp
test
inc
cmp
inc
or
inc
or
add
rol
mov
add
add
pop
jo
and
(bad)
cmp
lods
popa
dec
and
mov
ror
and
fdiv
sub
adc
ss
call
xchg
add
scas
sub
add
and
add
add
and
not
jno
icebp
add
in
retf
and
add
and
jmp
jmp
in
xor
aas
fild
adc
dec
test
imul
adc
inc
push
sub
inc
sub
dec
push
nop
ud0
xor
or
enter
push
and
xor
inc
inc
scas
rcl
sbb
adc
xchg
xchg
or
pusha
sub
pop
inc
das
xchg
inc
mov
cmp
pop
inc
adc
add
add
loop
mov
dec
and
cld
and
add
mov
aad
sbb
add
ror
add
and
jo
jg
loopne
test
push
adc
fs
adc
pusha
or
inc
xchg
and
cwde
pusha
pop
call
inc
sbb
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
adc
inc
jg
jmp
jmp
(bad)
mov
inc
pushf
push
loope
inc
test
cli
cmc
sbb
add
and
mov
fisubr
xadd
dec
pop
hlt
test
jmp
cld
dec
xchg
call
ss
inc
in
aas
adc
(bad)
imul
ja
mov
adc
inc
sar
fsubr
mov
and
adc
ror
sbb
or
ds
fdivr
add
add
lods
shl
cld
mov
jg
add
clc
mov
pop
mov
retf
pusha
int3
fadd
and
call
ds
cmp
loop
scas
push
stos
gs
inc
xchg
adc
rol
add
add
sub
pop
sub
imul
mov
fs
in
pop
mov
pop
int3
jmp
pop
call
inc
test
mov
jp
out
jle
mov
add
dec
mov
or
adc
inc
(bad)
and
pop
and
add
dec
dec
adc
push
sub
pop
and
mov
push
adc
add
inc
or
test
mov
sbb
cdq
xchg
push
or
jae
mov
rol
(bad)
sbb
adc
fs
sub
aas
popa
and
add
fist
or
jmp
inc
ror
push
cwde
(bad)
les
or
mov
dec
sub
call
fcom
push
ret
adc
xor
test
sbb
jo
add
cwde
jo
or
sub
enter
mov
adc
js
mov
mov
popa
add
dec
cmp
inc
mov
outs
xchg
clc
bnd
or
adc
inc
cs
push
sar
movs
push
lods
xchg
ret
sbb
inc
push
adc
sub
mov
and
pop
(bad)
clc
(bad)
pop
add
rol
in
inc
push
movs
xchg
mov
xchg
jmp
mov
aas
mul
movs
shl
fmul
and
and
pop
rol
and
or
inc
and
and
pop
xchg
in
mov
or
xor
retf
adc
pop
xor
sbb
adc
hlt
icebp
xchg
cld
push
mov
cmp
and
dec
or
xchg
aam
adc
leave
stos
lahf
mov
xor
lock
push
and
sbb
push
and
hlt
adc
or
cld
xor
xchg
sub
add
sbb
iret
or
jbe
adc
adc
dec
xor
or
push
lods
cld
xchg
add
cwde
jo
or
test
aad
xor
arpl
push
xor
xchg
imul
adc
cmp
int3
sar
mov
pop
cwde
retf
mov
jae
add
sub
test
popa
cmp
add
jl
les
push
pusha
and
add
cmp
int3
ror
add
call
sbb
inc
add
pop
jl
lds
aaa
fs
in
mov
(bad)
(bad)
sub
pop
push
add
lods
and
push
sub
sbb
adc
jno
aas
jecxz
jb
add
adc
jg
mov
or
int3
inc
ror
les
xor
imul
ins
adc
add
mov
int
push
or
inc
sbb
test
jmp
push
push
loopne
and
push
int
adc
clc
inc
adc
and
sub
jecxz
fadd
adc
push
or
push
(bad)
or
mov
or
adc
inc
pusha
add
xchg
inc
or
fcmovbe
push
or
inc
add
or
mov
adc
sub
and
and
mov
sbb
dec
es
add
xchg
xchg
mov
add
inc
or
loopne
mov
xor
adc
inc
gs
pop
or
and
xchg
inc
add
fdivr
sar
lock
add
dec
or
add
inc
push
add
cwde
loopne
sbb
add
mov
xor
xchg
movlps
or
xor
sbb
adc
push
adc
cmps
es
mov
les
add
cld
inc
add
sub
cmp
loope
das
adc
xchg
sbb
xchg
push
add
mov
adc
or
push
or
xchg
add
(bad)
inc
iret
and
(bad)
pop
push
and
sahf
clc
pop
lea
adc
nop
or
push
add
push
adc
aas
dec
rol
hlt
or
pop
or
rol
and
add
test
popa
adc
adc
mov
or
xchg
add
clc
cmp
sub
fs
cdq
add
xor
or
movs
add
push
adc
inc
mov
and
ret
pusha
aas
sbb
add
lods
data16
mov
add
adc
js
or
add
push
and
or
cmp
sbb
push
xchg
adc
add
inc
xor
sub
mov
xor
add
jmp
inc
push
jmp
mov
or
add
add
add
add
and
and
call
add
inc
pop
add
add
rcl
or
xchg
ror
jo
mov
adc
lods
fistp
es
push
push
inc
add
nop
sbb
scas
add
jmp
arpl
fadd
push
test
pop
nop
enter
mov
cmp
sbb
jp
ja
loop
pop
sub
mov
shr
mov
add
dec
loopne
into
adc
push
mov
xchg
stos
rep
push
aam
xchg
ret
add
sbb
jecxz
pmulhuw
pop
adc
or
jns
mov
icebp
cmp
pushf
pop
and
enter
in
and
and
push
or
or
mov
call
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcl
add
or
leave
mov
push
sti
addr16
jg
inc
call
inc
or
sub
test
and
outs
or
inc
movs
dec
or
(bad)
frstor
xchg
push
and
mov
or
jecxz
sbb
out
dec
push
and
lock
sub
enter
mov
clc
pop
loopne
inc
jno
mov
mov
lahf
push
fadd
inc
shr
inc
movs
or
mul
or
push
mov
push
(bad)
sub
pop
movs
dec
test
aam
pusha
xlat
jp
inc
fdivr
inc
pop
sub
dec
sar
fisttp
dec
loope
xor
adc
cmp
and
not
pop
call
jne
xchg
outs
inc
or
jno
je
add
and
push
loope
popf
(bad)
push
add
lds
js
sbb
ja
adc
push
push
xor
jl
mov
fbld
push
imul
in
or
sbb
lahf
add
sahf
inc
sbb
les
rol
inc
add
xchg
or
add
or
push
and
adc
(bad)
jge
jp
sbb
popa
pop
jbe
js
xchg
cmp
outs
test
dec
pusha
mov
leave
xor
mov
push
sbb
movs
lock
aaa
mov
mov
mov
xor
add
add
mov
out
inc
bound
jne
ds
lock
aas
sbb
and
fwait
jmp
and
dec
ds
adc
add
ins
test
cmp
les
inc
das
and
xchg
pop
(bad)
sbb
push
in
es
pop
dec
and
or
or
add
push
jns
push
inc
or
cs
imul
sub
push
xchg
pushf
push
inc
das
cmp
retf
lods
and
sbb
test
je
or
jo
push
sub
es
adc
and
mov
inc
sub
pusha
mov
cmp
dec
adc
adc
rcr
xor
and
adc
mov
repnz
daa
or
test
add
xor
xor
adc
or
pop
add
adc
es
fs
pop
xor
xchg
mov
clc
jmp
xchg
scas
mov
push
mov
adc
les
xor
xor
bound
mov
mov
and
repz
inc
and
test
push
add
mov
or
mov
mov
push
or
mov
or
add
or
add
push
pop
xor
(bad)
fdiv
js
pusha
push
cld
jge
inc
push
adc
and
pop
sbb
xchg
dec
pop
add
add
or
cmp
adc
dec
push
out
loopne
inc
pop
nop
or
test
dec
jmp
lock
outs
ins
add
call
or
add
sub
adc
call
aas
aas
jmp
cmp
imul
jmp
je
xor
adc
cmp
popa
(bad)
sub
in
fbstp
stc
ret
lahf
adc
das
pop
test
xor
jns
push
mov
leave
sbb
rol
push
mov
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcr
add
pop
push
mov
jmp
in
push
xchg
adc
enter
push
std
inc
div
add
push
cmp
shufps
pop
dec
or
mov
gs
add
mov
rcl
add
addr16
mov
call
lea
repz
inc
cmp
xor
cmc
mov
pop
pop
inc
sub
retf
pusha
in
fdiv
inc
addr16
inc
neg
mov
jg
jecxz
stos
aad
and
fild
xchg
or
popf
or
cs
xor
mov
inc
push
dec
lock
inc
lea
add
enter
mov
rcl
and
pop
adc
pop
or
and
outs
mov
adc
mov
(bad)
mov
ror
inc
push
inc
sub
lea
cmp
dec
lock
jp
and
or
xor
push
sub
cmp
jne
push
lods
in
call
sub
mov
sbb
sub
adc
(bad)
cmp
dec
ror
inc
push
aaa
fdiv
shr
inc
jl
sub
dec
mov
and
(bad)
and
dec
and
cmp
into
ss
popa
ret
xchg
xor
sub
sub
mov
push
pop
das
or
or
xor
or
dec
and
push
inc
and
or
inc
or
mov
or
pusha
aam
pop
int
mov
das
or
int3
add
fs
sar
pop
movs
push
cmp
dec
cmp
int3
inc
pop
adc
shl
(bad)
aam
popa
xchg
jbe
add
in
rol
in
inc
push
movs
sbb
sub
mov
xor
sub
or
popa
rcl
add
inc
ret
dec
push
dec
jmp
push
out
call
xchg
inc
popf
jmp
fisub
call
adc
test
hlt
icebp
inc
add
js
or
call
cwde
lock
cmp
xor
jp
sub
add
adc
ror
and
rcr
nop
mov
mov
scas
sets
or
in
ret
mov
push
cs
ficom
ret
pop
jnp
jno
aas
sbb
pusha
scas
add
sbb
icebp
scas
add
movs
lock
mov
adc
push
jmp
repz
adc
add
popa
ror
mov
call
or
mov
nop
or
xor
push
ret
adc
adc
cld
ins
inc
and
push
cdq
call
je
cmp
push
add
xchg
sbb
enter
push
call
sub
jo
or
sbb
mov
push
jo
test
and
and
iret
sbb
not
push
push
stos
pop
add
push
cmp
test
jge
xchg
(bad)
mov
(bad)
ins
stos
xor
xor
add
pop
mov
call
jmp
fwait
nop
or
xor
es
add
mov
mov
xchg
jg
vcvtsd2ss
push
xchg
sub
add
mov
mov
retf
or
sub
or
jo
sbb
adc
pop
xor
sub
(bad)
sahf
pushf
je
rol
inc
pop
fs
sbb
inc
out
js
mov
adc
adc
push
lods
push
xchg
add
pop
in
(bad)
mov
js
mov
adc
pusha
add
add
add
ss
das
jg
and
mov
mov
sub
(bad)
aam
add
or
mov
push
jecxz
out
inc
push
sbb
icebp
sub
daa
and
pop
adc
ret
sbb
add
dec
gs
and
adc
pusha
inc
nop
mov
xor
call
mov
pop
enter
push
add
and
pusha
nop
inc
pop
jo
test
mov
push
add
add
scas
inc
xchg
(bad)
jmp
pop
clc
ds
jg
inc
and
dec
or
scas
ret
cmp
mov
push
leave
and
push
mov
mov
pop
inc
test
mov
cdq
sub
adc
push
bound
mov
movs
fistp
test
int
pushf
push
fbld
add
push
add
mov
sub
sbb
dec
retf
inc
daa
icebp
xor
cmp
inc
dec
test
push
xchg
outs
test
repnz
and
add
loop
out
xor
sbb
mov
add
mov
test
cmp
cwde
pop
sbb
add
mov
add
jmp
mov
dec
movs
adc
dec
sbb
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
and
pop
add
or
add
or
nop
loopne
or
cmp
rcl
popa
cld
and
pop
adc
xor
loop
sub
mov
in
inc
adc
sub
sub
add
jae
jo
or
mov
into
mov
inc
cmps
les
test
xor
xchg
or
sub
into
fcom
inc
add
inc
rcl
ds
stos
xor
inc
push
sbb
add
mov
mov
or
sub
xchg
add
adc
lahf
pushf
test
add
xor
test
sbb
dec
cwde
(bad)
sti
icebp
jecxz
xchg
sub
out
mov
js
pusha
or
mov
mov
outs
(bad)
fucomp
push
jmp
pop
add
cmp
mov
(bad)
or
(bad)
dec
call
inc
popf
jno
xor
repnz
add
or
sbb
mov
jnp
dec
sbb
je
jge
add
xchg
and
popf
xor
mov
adc
add
jnp
inc
out
jge
adc
xchg
and
or
aad
fs
add
int
add
adc
xor
cwde
mov
push
mov
cmps
add
data16
xlat
outs
xor
jno
iret
dec
pop
in
mov
jle
adc
add
cdq
out
ss
jl
pop
nop
add
push
add
or
into
xor
push
mov
xchg
pop
rol
or
leave
dec
or
push
or
inc
imul
daa
mov
xor
or
outs
push
jb
aad
cmc
xor
mov
inc
pop
inc
cmp
mov
inc
add
unpckhps
mov
inc
ficom
adc
fwait
jle
adc
add
stc
add
or
inc
sub
add
and
pop
add
or
add
or
nop
and
and
mov
cld
fcomi
sldt
aas
push
push
daa
ins
loopne
sbb
or
fisttp
pusha
mov
mov
lods
and
mov
lahf
in
and
add
xor
xlat
cs
inc
fst
or
(bad)
ins
adc
rcr
jle
ret
(bad)
fist
push
cli
dec
lds
pusha
sar
mov
aaa
test
sbb
cmp
es
mov
xor
loopne
xchg
(bad)
mov
fdiv
lock
add
mov
icebp
dec
pusha
cmp
fsubr
cli
(bad)
push
into
sub
mov
(bad)
add
out
and
and
inc
jecxz
ja
dec
xor
fisub
retf
xchg
movs
xor
scas
adc
push
add
adc
(bad)
clc
popa
mov
cmps
int
fmul
push
shld
add
xchg
ds
fwait
push
pop
mov
cmp
add
(bad)
xchg
cli
lods
ja
xor
xchg
sti
pusha
dec
inc
gs
dec
outs
mov
or
mov
xchg
or
jl
lahf
inc
sub
repz
xor
cmp
dec
dec
push
adc
inc
push
call
icebp
dec
imul
rcl
loopne
adc
pop
outs
cwde
dec
aad
pmaxub
xor
loope
call
ins
xchg
adc
mov
and
push
loopne
sbb
shl
xor
add
jbe
pushf
jbe
xchg
xor
loope
aaa
mov
and
mov
add
adc
xor
sbb
test
add
push
pusha
jl
std
xor
out
inc
adc
popf
test
dec
mov
and
adc
into
cmc
movlps
stos
sub
outs
dec
shr
push
mov
inc
add
stc
add
or
inc
sub
add
and
pop
add
or
add
or
mov
rol
nop
add
add
pop
ret
sub
push
xor
(bad)
cs
add
aam
jo
aas
mov
leave
fldenv
(bad)
push
dec
xchg
and
xchg
adc
sti
div
cmp
jmp
fdivr
les
xchg
mov
das
aam
dec
cmp
lock
xchg
and
inc
gs
xchg
fidiv
hlt
popa
and
in
or
dec
pushf
mov
adc
jmp
pop
pushf
adc
dec
repz
dec
retf
lods
mov
pop
adc
cli
inc
sub
ss
inc
mov
je
mov
mov
sbb
jbe
add
adc
xchg
push
sbb
xchg
shr
mov
test
in
fcom
fnsave
lods
ins
mov
dec
aaa
outs
pushf
mov
jg
or
repz
dec
call
and
rol
sub
call
jo
aas
imul
cmp
fstp
mov
fist
mov
jge
leave
aas
pop
data16
and
inc
jg
add
add
push
xchg
xor
dec
inc
jge
call
pop
sub
pop
mov
or
retf
aas
pop
jno
dec
xor
cld
and
inc
mov
aad
xchg
add
repnz
push
sbb
sar
call
loope
sbb
inc
sbb
dec
(bad)
push
mov
smsw
mov
fs
inc
add
or
inc
inc
inc
xchg
cmp
adc
ror
popa
inc
rcl
inc
nop
dec
retf
or
sub
cmps
mov
add
sbb
aas
dec
adc
inc
dec
add
add
stc
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
inc
add
sbb
push
adc
xchg
mov
pop
add
push
test
push
add
adc
push
mov
add
add
xchg
cwde
jg
add
or
push
sbb
push
xchg
inc
adc
cli
push
call
or
inc
(bad)
adc
sbb
leave
cdq
out
cmps
jg
rcl
test
arpl
adc
(bad)
cmp
ss
btr
sub
xor
mov
or
call
add
cmp
repz
inc
or
ins
out
sbb
mov
jge
lock
push
test
out
popf
lds
ss
(bad)
jno
cwde
jp
mov
dec
xchg
out
call
pop
and
dec
or
retf
adc
dec
fdivr
call
shl
dec
add
js
mov
idiv
imul
aad
dec
add
mov
xchg
test
(bad)
fdiv
dec
add
inc
add
js
dec
ror
call
inc
pop
jl
or
movs
push
dec
ror
vmwrite
or
iret
test
and
mov
xchg
inc
or
or
or
xor
pop
fsub
test
inc
inc
push
je
aas
and
push
cmps
and
js
cld
xor
(bad)
enter
cld
push
add
inc
inc
jbe
push
fcom
mov
fadd
jg
leave
es
push
pop
sub
ret
in
jo
and
push
xchg
call
xor
and
pop
pushf
or
adc
cmp
add
jbe
xchg
fwait
ss
or
fstp
pop
sbb
cmps
sbb
adc
stos
or
test
ins
or
stos
inc
nop
inc
and
inc
add
add
stc
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
inc
add
adc
xchg
sbb
pop
or
fwait
inc
add
jg
dec
and
inc
mov
and
xchg
pusha
retf
(bad)
movs
stc
daa
jmp
(bad)
call
lea
xor
pop
jle
jp
dec
call
imul
or
sub
clc
lock
or
pop
enter
popf
mov
sbb
mov
jb
dec
mov
add
xor
je
leave
test
daa
jne
repnz
cmps
or
cld
adc
stos
push
mov
cdq
hlt
or
aaa
mov
rcl
pop
fwait
test
popa
inc
cmp
fisub
jge
mov
push
cmp
fist
ss
test
mov
push
push
xor
aas
loope
ds
mov
add
sub
push
and
loopne
pop
inc
mov
icebp
xchg
jge
sub
clc
pop
loop
push
xchg
push
jp
mov
adc
mov
inc
popf
push
(bad)
in
sbb
xor
movs
pop
inc
mov
xchg
jl
shl
les
std
arpl
aas
sti
inc
xor
ret
lds
xchg
dec
cmp
xchg
unpckhps
and
jmp
or
sbb
mov
inc
fiadd
test
inc
pop
add
repnz
sub
inc
aad
push
bound
dec
xchg
test
and
pop
fs
inc
lods
adc
or
mov
inc
loop
adc
rol
pop
lock
(bad)
sti
inc
mov
ss
inc
(bad)
jae
aas
ins
bound
add
xchg
jb
loopne
fwait
mov
call
iret
inc
mov
inc
mov
inc
push
cmp
or
adc
adc
arpl
aas
fld
fiadd
fcom
add
sbb
xchg
add
add
not
daa
aad
shl
stos
mov
push
jmp
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcl
sub
xchg
rcr
sub
adc
mov
push
pop
loop
mov
data16
call
or
adc
imul
dec
outs
stc
cmps
loop
mov
fld
cmp
xchg
push
push
ror
inc
xchg
cwde
dec
mov
add
push
mov
je
movs
cdq
dec
mov
dec
(bad)
jl
fwait
icebp
scas
push
or
aad
push
pushf
sbb
mov
cmovle
lock
repz
sbb
pop
pushf
(bad)
jns
adc
test
retf
or
and
push
jbe
shl
sbb
push
cwde
test
mov
mov
cmc
dec
aam
dec
xor
sub
pop
call
xor
(bad)
neg
shr
jmp
outs
or
gs
pushf
inc
xor
test
add
arpl
rcpps
call
loopne
add
dec
ret
xor
bound
jae
int3
xor
imul
push
pop
pop
sbb
sbb
or
inc
pop
mov
popf
xor
cld
ret
mov
pop
outs
imul
inc
in
cdq
je
sbb
fsubr
lods
fadd
mov
xchg
sub
and
cmp
test
xchg
rcl
pop
xchg
inc
arpl
sbb
xchg
add
add
mov
call
push
cmp
mov
lea
xchg
jl
call
mov
imul
ins
cld
shl
or
push
add
sub
cmc
int
aam
ret
out
add
push
(bad)
imul
fiadd
sbb
pop
cld
nop
jmp
dec
icebp
jmp
scas
pop
std
inc
lods
jbe
sbb
add
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
sar
adc
pop
pop
xor
std
sub
and
cld
test
inc
hlt
cli
ins
and
push
mov
mov
push
jo
xor
cld
add
call
or
outs
xchg
shl
dec
(bad)
in
and
dec
pop
scas
or
jo
lods
dec
mov
dec
push
xchg
sub
add
imul
call
and
daa
das
xor
jl
enter
cmp
mov
mov
lea
xchg
adc
sahf
mov
and
xor
pop
sbb
(bad)
mov
lods
fldenv
push
mov
xchg
shr
and
mov
mov
and
adc
sub
jmp
int3
xor
sub
pop
cmp
and
adc
xchg
in
sub
fs
inc
or
mul
push
mov
dec
xchg
mov
imul
fild
jno
ds
jp
push
mov
mov
dec
pusha
pop
popa
or
cmp
dec
or
push
loope
repnz
sbb
adc
and
imul
push
jb
dec
pop
ins
push
cld
rcr
fisttp
pop
sub
(bad)
jg
sbb
fstp
xor
sbb
ret
and
call
das
dec
sbb
adc
je
in
pop
fs
inc
cwde
mov
es
jno
push
mov
ret
sbb
adc
fmul
adc
or
dec
jo
addr16
cmp
call
leave
imul
aam
lea
xor
test
xchg
retf
aas
push
or
jne
ror
and
dec
nop
or
pop
stos
mov
dec
adc
and
add
or
inc
sub
add
and
and
add
inc
dec
sbb
nop
and
pop
enter
or
loopne
ret
mov
test
(bad)
(bad)
inc
dec
inc
nop
add
xchg
xor
adc
mov
adc
test
add
icebp
iret
arpl
push
cmp
leave
cld
mov
mov
popa
and
fnstsw
(bad)
dec
add
arpl
rol
add
ins
inc
or
mov
js
leave
cmps
inc
push
mov
push
ins
adc
adc
push
sbb
daa
lds
fdiv
cmp
mov
je
enter
retf
dec
les
xchg
inc
push
sbb
and
mov
gs
and
les
(bad)
pop
xor
add
dec
sbb
xchg
xchg
dec
les
adc
and
daa
mov
(bad)
or
fld
ins
ret
fimul
pop
imul
xor
stos
mov
ret
mov
or
ja
xchg
(bad)
imul
xchg
xchg
mov
push
cmps
pop
clc
mov
mov
test
cdq
pop
push
aam
lahf
inc
fs
or
rcl
push
pop
fs
xlat
nop
sub
xchg
aaa
fdivr
(bad)
sbb
imul
inc
fidivr
clc
minps
xor
add
inc
mov
push
or
and
and
adc
inc
sbb
out
mov
call
and
inc
sti
xor
sub
enter
or
std
jmp
xor
and
add
pop
mov
jl
fnstsw
inc
pop
hlt
dec
nop
or
inc
push
inc
add
pop
push
add
push
sub
jmp
fisub
dec
call
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcr
add
popa
shl
outs
cmp
mov
rcl
adc
leave
lock
dec
mov
or
dec
add
pop
or
cmps
add
jbe
in
dec
loopne
nop
and
test
xchg
dec
ds
loop
in
lahf
add
adc
test
sahf
sub
dec
push
ins
push
or
test
ds
cmc
fidiv
dec
fwait
mov
(bad)
xor
add
pop
(bad)
xchg
lods
pop
push
mov
cmp
xchg
and
dec
or
jmp
call
loopne
xor
mov
mov
enter
inc
cwde
add
int
add
aam
nop
popf
mov
retf
int3
mov
pop
or
dec
or
cwde
xchg
pop
rcl
out
jo
mov
aam
je
fisubr
sub
repnz
ret
sti
xchg
in
popf
les
scas
ss
cmp
mov
popa
ret
cwde
push
push
fst
add
adc
sbb
hlt
fnsave
aaa
nop
cmp
popf
or
push
cli
adc
stos
out
sbb
mov
mov
or
cmp
fwait
xor
pop
ss
in
xchg
inc
pop
adc
cdq
cld
(bad)
rol
ss
cmc
and
mov
mov
cdq
addr16
xchg
movs
jle
push
and
sbb
inc
clc
mov
mov
push
mov
mov
inc
ss
mov
enter
push
xchg
or
jg
inc
dec
dec
and
inc
mov
adc
adc
xchg
push
add
sub
xor
cwde
sbb
inc
bound
aaa
mov
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
push
add
sub
shl
mov
mov
shr
icebp
outs
les
sbb
push
ror
cmovne
hlt
mov
inc
cld
fcomi
das
or
or
aas
pop
data16
pop
add
inc
xchg
add
jns
retf
mov
mov
je
push
mov
pop
or
rcr
ins
add
mov
jb
je
inc
dec
ins
fdivr
xchg
inc
push
xor
mov
pop
mov
loopne
scas
pop
mov
pop
pop
mov
call
cmp
loope
push
xor
add
and
rol
or
adc
pop
adc
push
mov
and
test
jge
retf
jl
and
into
test
lods
xchg
jecxz
or
adc
add
ret
clc
aas
mov
(bad)
lahf
sahf
and
call
mov
or
dec
cmp
mov
int
dec
mov
jmp
nop
and
clc
hlt
adc
leave
and
addr16
pop
call
pop
cwde
neg
or
out
sub
mov
data16
aas
fldenv
push
push
lds
cmps
and
mov
cmp
fs
add
aam
jecxz
inc
push
dec
xchg
fdiv
std
and
mov
and
js
pop
lock
add
mov
jecxz
pop
cld
shl
pop
push
push
repz
mov
das
adc
push
jle
xor
jnp
dec
adc
pushf
push
lds
xchg
in
add
and
jmp
sub
cmp
push
adc
push
add
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
mov
adc
rol
rol
or
lgdtd
inc
add
add
popa
xor
sbb
cmp
add
ins
je
add
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
int3
xor
div
xchg
outs
jmp
add
paddd
outs
(bad)
(bad)
sbb
add
repz
repnz
fild
xor
pop
adc
enter
das
or
xchg
add
jmp
add
add
ret
add
pop
pushf
jbe
mov
inc
cdq
pop
add
in
cld
scas
mov
(bad)
out
in
(bad)
(bad)
not
inc
(bad)
std
ror
push
int3
xlat
out
(bad)
sub
push
push
jmp
jmp
xchg
mov
(bad)
(bad)
out
add
mov
inc
sbb
sti
inc
mov
xor
lods
add
div
out
add
(bad)
cld
fldenv
push
out
add
stos
xchg
(bad)
(bad)
dec
cld
jmp
jmp
(bad)
cli
out
retf
rol
(bad)
xchg
add
mov
icebp
cmc
(bad)
(bad)
stc
add
jnp
fidivr
mov
add
cmc
xchg
stc
stc
hlt
sti
call
stc
add
mov
nop
stc
scas
add
mov
xchg
pop
sub
test
mov
ret
ret
pop
cli
mov
cli
mov
(bad)
clc
pop
(bad)
jmp
out
add
out
int3
add
mov
mov
lods
std
test
stos
push
or
dec
pmaddwd
loop
rcr
dec
retf
mov
mov
pop
(bad)
cmc
adc
mov
inc
adc
push
repnz
dec
or
fisttp
in
iret
or
fcom
sti
sbb
mov
icebp
call
mov
pop
jge
jmp
sub
movs
cdq
pop
mov
adc
inc
add
mov
test
or
mov
lea
int3
mov
stc
sti
(bad)
(bad)
(bad)
clc
cli
mov
in
jmp
fdivr
ret
repz
add
out
icebp
out
mov
fld
cmp
ret
(bad)
in
adc
out
hlt
rol
loopne
in
sti
dec
jns
jmp
(bad)
xlat
add
cmp
fld
sahf
inc
or
ror
popa
push
int
add
lods
add
call
push
ret
mov
retf
fbld
(bad)
out
add
dec
adc
cmp
lock
add
loope
push
jl
mov
loope
ret
les
push
adc
lds
int
push
test
sti
cli
stc
scas
bound
inc
inc
dec
mov
xchg
(bad)
sti
add
add
das
adc
mov
sti
sti
cld
clc
div
repz
or
add
cli
mov
cli
test
std
loopne
(bad)
jmp
(bad)
mov
jmp
scas
add
xor
stc
in
add
pop
inc
cmc
call
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
(bad)
fild
or
daa
inc
xchg
ret
push
(bad)
xchg
sub
mov
movs
pop
push
sbb
or
cwde
rcr
add
pop
shl
mov
xor
sub
adc
pop
or
or
mov
leave
mov
mov
or
xor
mov
inc
xchg
xchg
sbb
and
popf
push
and
sub
adc
pop
mov
mov
xchg
and
retf
mov
fsub
cmc
mov
adc
mov
add
dec
xchg
xchg
test
add
inc
test
call
push
cmp
cs
sbb
inc
mov
sbb
retf
cmp
sti
jle
adc
adc
cld
cmp
adc
add
test
dec
adc
(bad)
stc
mov
test
dec
add
or
dec
dec
inc
xchg
or
push
push
and
rol
xor
push
xor
pop
movs
lock
or
mov
mov
pop
and
add
pop
or
ret
or
pusha
dec
daa
push
push
bound
sub
inc
enter
ret
sbb
sub
pop
or
rol
arpl
and
xor
adc
dec
xchg
push
xor
jno
cmp
add
rol
push
ret
add
jns
lock
add
shl
inc
mov
and
addr16
add
(bad)
cmp
pop
and
jb
ins
push
sahf
xor
sub
or
mov
getsec
add
pop
mov
sbb
rol
adc
jno
sbb
push
loop
clc
inc
push
popa
mov
mov
pushf
ror
sbb
pop
sbb
clc
add
ret
push
adc
leave
inc
and
xor
sbb
je
cmp
jo
or
add
or
pop
in
inc
nop
or
mov
pop
nop
sbb
js
dec
add
sbb
icebp
add
pop
xchg
add
adc
test
cmp
sub
xor
pop
rcl
push
sub
and
inc
mov
and
rol
jae
mov
pop
js
mov
push
sbb
add
pusha
push
jae
add
ja
les
add
dec
sbb
sbb
adc
cmp
xor
adc
sahf
mov
inc
mov
add
jle
stos
ins
add
dec
and
(bad)
sub
xchg
loopne
data16
pop
cmp
sub
mov
sub
sbb
in
adc
xchg
or
add
(bad)
pop
rol
lds
jp
call
neg
inc
fwait
or
(bad)
shr
mov
mov
xchg
mov
mov
add
xchg
xchg
dec
and
mov
add
mov
test
push
test
push
push
jo
adc
hlt
movs
inc
mov
ss
sbb
cmpxchg
or
jno
sub
test
inc
mov
adc
mov
mov
jns
bound
scas
mov
adc
dec
ins
xor
or
das
cmp
cmp
js
lock
xchg
add
(bad)
cli
iret
or
or
loopne
and
and
push
or
ror
icebp
repnz
push
mov
test
add
adc
xchg
add
dec
sbb
mov
add
push
adc
sbb
ror
mov
push
pop
rol
or
mov
cmp
mov
xor
pop
pop
add
call
addr16
cmp
jns
push
or
popa
inc
pop
sbb
daa
xlat
cmp
cmp
inc
lds
and
mov
or
push
xor
outs
js
mov
add
clc
mov
in
fadd
jp
xor
cmc
test
dec
hlt
add
or
cmp
cdq
loopne
jmp
add
fmul
mov
dec
xor
push
(bad)
or
in
add
mul
(bad)
lods
inc
cmp
std
iret
add
arpl
inc
xchg
rcr
add
js
inc
adc
data16
and
jns
rol
and
pop
mov
sub
ins
imul
call
retf
push
outs
inc
adc
push
sbb
sub
bound
mov
mov
cmp
rol
idiv
inc
or
add
bound
push
leave
mov
add
xchg
dec
adc
push
js
cmp
xchg
push
sub
push
mov
ret
js
das
add
mov
(bad)
inc
inc
mov
lfs
add
lock
adc
imul
je
add
repnz
add
movs
add
xor
in
pusha
xchg
dec
add
xlat
nop
shr
lock
pop
inc
ror
movs
mov
les
add
jmp
into
adc
and
rcl
cli
push
cmp
or
cmp
add
icebp
or
and
ret
xchg
or
or
rol
dec
lods
aas
add
cmp
or
imul
jnp
inc
call
test
dec
lock
add
inc
nop
inc
add
jns
push
xchg
mov
cmp
sar
inc
adc
call
sbb
retf
push
mov
mov
movs
rol
adc
push
mov
add
fcom
or
sbb
add
inc
push
ret
xor
cwde
int3
and
dec
mov
lea
xchg
and
cmp
cmp
xchg
mov
and
xchg
and
pusha
add
je
ret
or
push
setns
mov
pusha
sbb
ror
inc
call
loope
xlat
xor
adc
or
push
xchg
or
jbe
and
(bad)
inc
push
(bad)
sbb
ss
mov
rol
cwde
adc
jecxz
mov
pushf
adc
and
rol
adc
or
add
stc
add
or
inc
sub
add
add
add
add
or
nop
pusha
xchg
mov
ret
xchg
(bad)
jge
enter
xor
adc
add
rcl
nop
xor
xchg
or
enter
mov
arpl
cmp
(bad)
gs
mov
mov
in
jmp
xor
and
mov
mov
imul
dec
or
pusha
int
mov
enter
push
gs
xchg
loope
cwde
or
gs
(bad)
pop
pop
mov
movs
push
test
mov
jae
rcr
or
ret
jno
inc
mov
iret
popa
mov
enter
add
pusha
gs
xor
xchg
cmp
add
xchg
lods
lods
and
aad
or
dec
mov
and
push
imul
outs
dec
ss
fcomp
es
xor
idiv
jmp
or
iret
jbe
ins
jo
cli
jne
fadd
push
xchg
rol
cli
hlt
aam
lock
rol
xor
sub
lahf
sbb
je
adc
jp
or
fild
mov
ins
adc
cmp
push
xchg
mov
loop
cmp
(bad)
cld
rol
loop
or
mov
and
imul
ds
inc
push
enter
add
test
or
add
or
sub
xor
pop
add
arpl
pop
dec
sub
sbb
xchg
or
inc
ror
pop
adc
sbb
mov
mov
cwde
cmps
or
ret
jo
dec
je
dec
xor
sub
pusha
bound
adc
test
or
xchg
test
mov
call
jge
inc
add
pushf
xor
(bad)
adc
cmps
inc
movs
stos
test
test
cli
pop
rol
gs
les
sbb
jmp
ins
inc
hlt
xchg
dec
add
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
and
dec
mov
popf
sbb
loop
sub
cmp
mov
inc
mov
cmp
loopne
nop
ficomp
adc
xchg
dec
fwait
stos
xchg
fcom
push
sub
sub
xchg
push
iret
and
or
jno
scas
test
mov
and
push
xchg
xor
call
scas
pusha
std
and
inc
add
pop
xchg
or
jo
mov
popf
cmps
adc
inc
mov
push
ror
jae
sahf
popa
ret
test
das
or
pop
jmp
mov
dec
inc
fwait
ds
cmps
int
(bad)
xor
not
aaa
cmps
ret
shl
jmp
pop
cmp
dec
mov
push
test
dec
ret
(bad)
cli
lock
xchg
xor
push
xchg
dec
repnz
ss
repnz
cld
adc
xchg
loopne
test
cmps
adc
cld
push
dec
xchg
ret
popf
pop
ret
push
jns
xor
and
shl
loopne
lahf
add
add
pop
(bad)
jl
pusha
sbb
push
ins
test
cmp
rcr
data16
adc
rol
sbb
mov
mov
xchg
scas
add
jne
or
les
or
and
cmp
jp
fs
ins
movs
rol
sub
shl
inc
push
call
fs
mov
pop
jl
or
or
add
and
jb
aas
es
(bad)
retf
aas
push
inc
adc
ss
cmp
rdpmc
idiv
mov
test
pop
push
xlat
and
dec
add
cwde
xor
mov
inc
outs
pop
push
cmps
add
jp
cmps
mov
dec
test
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
and
enter
sbb
xor
push
and
add
sub
leave
mov
adc
add
(bad)
cld
cmps
mov
inc
retf
xchg
add
cdq
and
sbb
push
addr16
push
das
jg
sbb
jb
push
nop
cmp
dec
stos
aam
dec
push
sub
adc
ret
push
adc
cmps
addr16
mov
pop
xchg
sbb
and
jae
mov
pusha
popa
lods
xchg
gs
pushf
cmp
movs
fldenv
jl
push
xlat
outs
add
and
cmp
and
outs
or
jmp
ret
fild
push
push
or
jns
jmp
ret
ins
and
fcomp
lods
dec
sti
lds
retf
je
or
jecxz
jl
shl
imul
sub
push
jmp
push
fstp
push
dec
popf
pusha
inc
in
scas
mov
adc
(bad)
mov
pop
add
add
in
jle
or
dec
nop
add
push
addr16
mov
jo
fadd
jle
ins
rol
push
ja
jp
mov
stos
arpl
pushf
mov
pusha
lock
pop
xchg
push
xchg
imul
sub
nop/reserved
mov
clc
(bad)
adc
cld
add
dec
pop
xchg
popa
movs
jo
pop
arpl
jb
clc
mov
test
scas
inc
adc
xchg
pop
les
adc
and
add
or
inc
sub
add
add
add
add
or
nop
pusha
nop
or
sub
add
xchg
inc
sub
mov
std
arpl
loope
and
shl
mov
xchg
inc
dec
mov
mov
arpl
movs
and
int3
inc
sahf
add
push
pop
adc
rcr
call
scas
or
fwait
dec
xchg
jmp
inc
loopne
mov
test
aas
js
rcl
repz
stos
and
and
add
dec
sahf
sub
out
add
cmp
les
sub
cld
rcl
nop
and
dec
xchg
sub
mov
add
or
aad
shld
imul
sbb
xchg
push
retf
push
je
shr
(bad)
movs
pop
mov
push
dec
popa
mov
cmc
fcomp
ins
mov
sahf
test
sbb
adc
add
nop
inc
inc
(bad)
cmp
mov
out
inc
rcl
lea
pop
sub
fild
and
cwde
cmp
hlt
jno
sbb
and
outs
mov
or
push
adc
push
icebp
add
test
enter
push
dec
sub
aad
sub
sbb
cmp
inc
jb
lods
mov
cwde
into
sbb
inc
and
les
mov
xchg
add
xor
dec
sub
mov
add
loop
sbb
xchg
into
mov
and
sub
xchg
outs
and
shl
nop
(bad)
enter
sbb
adc
adc
or
add
loopne
aas
pop
or
rcl
je
add
and
sub
not
xchg
enter
rol
inc
sbb
dec
fdiv
push
fprem
adc
clc
or
bound
mov
shl
shl
or
and
fsub
dec
psrld
pop
or
push
int3
adc
dec
fsub
repz
sbb
jbe
lds
inc
lods
mov
loopne
or
les
mov
or
sub
inc
add
ds
(bad)
aas
pop
cld
xchg
outs
inc
inc
push
push
out
aas
mov
add
cmp
int
cmp
add
add
or
inc
sub
add
add
add
add
or
nop
pusha
xchg
mov
ret
xchg
(bad)
jge
enter
xor
adc
add
rcl
nop
xor
xchg
or
enter
mov
arpl
cmp
(bad)
gs
mov
mov
in
jmp
xor
and
mov
mov
imul
dec
or
pusha
int
mov
enter
push
gs
xchg
loope
cwde
or
gs
(bad)
pop
pop
mov
movs
push
test
mov
jae
rcr
or
ret
jno
inc
mov
iret
popa
mov
enter
add
pusha
gs
xor
xchg
cmp
add
xchg
lods
lods
and
aad
or
dec
mov
and
push
imul
outs
dec
ss
fcomp
es
xor
idiv
jmp
or
iret
jbe
ins
jo
cli
jne
fadd
push
xchg
rol
cli
hlt
aam
lock
rol
xor
sub
lahf
sbb
je
adc
jp
or
fild
mov
ins
adc
cmp
push
xchg
mov
loop
cmp
(bad)
cld
rol
loop
or
mov
and
imul
ds
inc
push
enter
add
test
or
add
or
sub
xor
pop
add
arpl
pop
dec
sub
sbb
xchg
or
inc
ror
pop
adc
sbb
mov
mov
cwde
cmps
or
ret
jo
dec
je
dec
xor
sub
pusha
bound
adc
test
or
xchg
test
mov
call
jge
inc
add
pushf
xor
(bad)
adc
cmps
inc
movs
stos
test
test
cli
pop
rol
gs
les
sbb
jmp
ins
inc
hlt
xchg
dec
add
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
and
dec
mov
popf
sbb
loop
sub
cmp
mov
inc
mov
cmp
loopne
nop
ficomp
adc
xchg
dec
fwait
stos
xchg
fcom
push
sub
sub
xchg
push
iret
and
or
jno
scas
test
mov
and
push
xchg
xor
call
scas
pusha
std
and
inc
add
pop
xchg
or
jo
mov
popf
cmps
adc
inc
mov
push
ror
jae
sahf
popa
ret
test
das
or
pop
jmp
mov
dec
inc
fwait
ds
cmps
int
(bad)
xor
not
aaa
cmps
ret
shl
jmp
pop
cmp
dec
mov
push
test
dec
ret
(bad)
cli
lock
xchg
xor
push
xchg
dec
repnz
ss
repnz
cld
adc
xchg
loopne
test
cmps
adc
cld
push
dec
xchg
ret
popf
pop
ret
push
jns
xor
and
shl
loopne
lahf
add
add
pop
(bad)
jl
pusha
sbb
push
ins
test
cmp
rcr
data16
adc
rol
sbb
mov
mov
xchg
scas
add
jne
or
les
or
and
cmp
jp
fs
ins
movs
rol
sub
shl
inc
push
call
fs
mov
pop
jl
or
or
add
and
jb
aas
es
(bad)
retf
aas
push
inc
adc
ss
cmp
rdpmc
idiv
mov
test
pop
push
xlat
and
dec
add
cwde
xor
mov
inc
outs
pop
push
cmps
add
jp
cmps
mov
dec
test
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
and
enter
sbb
xor
push
and
add
sub
leave
mov
adc
add
(bad)
cld
cmps
mov
inc
retf
xchg
add
cdq
and
sbb
push
addr16
push
das
jg
sbb
jb
push
nop
cmp
dec
stos
aam
dec
push
sub
adc
ret
push
adc
cmps
addr16
mov
pop
xchg
sbb
and
jae
mov
pusha
popa
lods
xchg
gs
pushf
cmp
movs
fldenv
jl
push
xlat
outs
add
and
cmp
and
outs
or
jmp
ret
fild
push
push
or
jns
jmp
ret
ins
and
fcomp
lods
dec
sti
lds
retf
je
or
jecxz
jl
shl
imul
sub
push
jmp
push
fstp
push
dec
popf
pusha
inc
in
scas
mov
adc
(bad)
mov
pop
add
add
in
jle
or
dec
nop
add
push
addr16
mov
jo
fadd
jle
ins
rol
push
ja
jp
mov
stos
arpl
pushf
mov
pusha
lock
pop
xchg
push
xchg
imul
sub
nop/reserved
mov
clc
(bad)
adc
cld
add
dec
pop
xchg
popa
movs
jo
pop
arpl
jb
clc
mov
test
scas
inc
adc
xchg
pop
les
adc
and
add
or
inc
sub
add
add
add
add
or
nop
pusha
nop
or
sub
add
xchg
inc
sub
mov
std
arpl
loope
and
shl
mov
xchg
inc
dec
mov
mov
arpl
movs
and
int3
inc
sahf
add
push
pop
adc
rcr
call
scas
or
fwait
dec
xchg
jmp
inc
loopne
mov
test
aas
js
rcl
repz
stos
and
and
add
dec
sahf
sub
out
add
cmp
les
sub
cld
rcl
nop
and
dec
xchg
sub
mov
add
or
aad
shld
imul
sbb
xchg
push
retf
push
je
shr
(bad)
movs
pop
mov
push
dec
popa
mov
cmc
fcomp
ins
mov
sahf
test
sbb
adc
add
nop
inc
inc
(bad)
cmp
mov
out
inc
rcl
lea
pop
sub
fild
and
cwde
cmp
hlt
jno
sbb
and
outs
mov
or
push
adc
push
icebp
add
test
enter
push
dec
sub
aad
sub
sbb
cmp
inc
jb
lods
mov
cwde
into
sbb
inc
and
les
mov
xchg
add
xor
dec
sub
mov
add
loop
sbb
xchg
into
mov
and
sub
xchg
outs
and
shl
nop
(bad)
enter
sbb
adc
adc
or
add
loopne
aas
pop
or
rcl
je
add
and
sub
not
xchg
enter
rol
inc
sbb
dec
fdiv
push
fprem
adc
clc
or
bound
mov
shl
shl
or
and
fsub
dec
psrld
pop
or
push
int3
adc
dec
fsub
repz
sbb
jbe
lds
inc
lods
mov
loopne
or
les
mov
or
sub
inc
add
ds
(bad)
aas
pop
cld
xchg
outs
inc
inc
push
push
out
aas
mov
add
cmp
int
cmp
add
add
or
inc
sub
add
add
add
add
or
nop
pusha
xchg
mov
ret
xchg
(bad)
jge
enter
xor
adc
add
rcl
nop
xor
xchg
or
enter
mov
arpl
cmp
(bad)
gs
mov
mov
in
jmp
xor
and
mov
mov
imul
dec
or
pusha
int
mov
enter
push
gs
xchg
loope
cwde
or
gs
(bad)
pop
pop
mov
movs
push
test
mov
jae
rcr
or
ret
jno
inc
mov
iret
popa
mov
enter
add
pusha
gs
xor
xchg
cmp
add
xchg
lods
lods
and
aad
or
dec
mov
and
push
imul
outs
dec
ss
fcomp
es
xor
idiv
jmp
or
iret
jbe
ins
jo
cli
jne
fadd
push
xchg
rol
cli
hlt
aam
lock
rol
xor
sub
lahf
sbb
je
adc
jp
or
fild
mov
ins
adc
cmp
push
xchg
mov
loop
cmp
(bad)
cld
rol
loop
or
mov
and
imul
ds
inc
push
enter
add
test
or
add
or
sub
xor
pop
add
arpl
pop
dec
sub
sbb
xchg
or
inc
ror
pop
adc
sbb
mov
mov
cwde
cmps
or
ret
jo
dec
je
dec
xor
sub
pusha
bound
adc
test
or
xchg
test
mov
call
jge
inc
add
pushf
xor
(bad)
adc
cmps
inc
movs
stos
test
test
cli
pop
rol
gs
les
sbb
jmp
ins
inc
hlt
xchg
dec
add
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
and
dec
mov
popf
sbb
loop
sub
cmp
mov
inc
mov
cmp
loopne
nop
ficomp
adc
xchg
dec
fwait
stos
xchg
fcom
push
sub
sub
xchg
push
iret
and
or
jno
scas
test
mov
and
push
xchg
xor
call
scas
pusha
std
and
inc
add
pop
xchg
or
jo
mov
popf
cmps
adc
inc
mov
push
ror
jae
sahf
popa
ret
test
das
or
pop
jmp
mov
dec
inc
fwait
ds
cmps
int
(bad)
xor
not
aaa
cmps
ret
shl
jmp
pop
cmp
dec
mov
push
test
dec
ret
(bad)
cli
lock
xchg
xor
push
xchg
dec
repnz
ss
repnz
cld
adc
xchg
loopne
test
cmps
adc
cld
push
dec
xchg
ret
popf
pop
ret
push
jns
xor
and
shl
loopne
lahf
add
add
pop
(bad)
jl
pusha
sbb
push
ins
test
cmp
rcr
data16
adc
rol
sbb
mov
mov
xchg
scas
add
jne
or
les
or
and
cmp
jp
fs
ins
movs
rol
sub
shl
inc
push
call
fs
mov
pop
jl
or
or
add
and
jb
aas
es
(bad)
retf
aas
push
inc
adc
ss
cmp
rdpmc
idiv
mov
test
pop
push
xlat
and
dec
add
cwde
xor
mov
inc
outs
pop
push
cmps
add
jp
cmps
mov
dec
test
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
and
enter
sbb
xor
push
and
add
sub
leave
mov
adc
add
(bad)
cld
cmps
mov
inc
retf
xchg
add
cdq
and
sbb
push
addr16
push
das
jg
sbb
jb
push
nop
cmp
dec
stos
aam
dec
push
sub
adc
ret
push
adc
cmps
addr16
mov
pop
xchg
sbb
and
jae
mov
pusha
popa
lods
xchg
gs
pushf
cmp
movs
fldenv
jl
push
xlat
outs
add
and
cmp
and
outs
or
jmp
ret
fild
push
push
or
jns
jmp
ret
ins
and
fcomp
lods
dec
sti
lds
retf
je
or
jecxz
jl
shl
imul
sub
push
jmp
push
fstp
push
dec
popf
pusha
inc
in
scas
mov
adc
(bad)
mov
pop
add
add
in
jle
or
dec
nop
add
push
addr16
mov
jo
fadd
jle
ins
rol
push
ja
jp
mov
stos
arpl
pushf
mov
pusha
lock
pop
xchg
push
xchg
imul
sub
nop/reserved
mov
clc
(bad)
adc
cld
add
dec
pop
xchg
popa
movs
jo
pop
arpl
jb
clc
mov
test
scas
inc
adc
xchg
pop
les
adc
and
add
or
inc
sub
add
add
add
add
or
nop
pusha
nop
or
sub
add
xchg
inc
sub
mov
std
arpl
loope
and
shl
mov
xchg
inc
dec
mov
mov
arpl
movs
and
int3
inc
sahf
add
push
pop
adc
rcr
call
scas
or
fwait
dec
xchg
jmp
inc
loopne
mov
test
aas
js
rcl
repz
stos
and
and
add
dec
sahf
sub
out
add
cmp
les
sub
cld
rcl
nop
and
dec
xchg
sub
mov
add
or
aad
shld
imul
sbb
xchg
push
retf
push
je
shr
(bad)
movs
pop
mov
push
dec
popa
mov
cmc
fcomp
ins
mov
sahf
test
sbb
adc
add
nop
inc
inc
(bad)
cmp
mov
out
inc
rcl
lea
pop
sub
fild
and
cwde
cmp
hlt
jno
sbb
and
outs
mov
or
push
adc
push
icebp
add
test
enter
push
dec
sub
aad
sub
sbb
cmp
inc
jb
lods
mov
cwde
into
sbb
inc
and
les
mov
xchg
add
xor
dec
sub
mov
add
loop
sbb
xchg
into
mov
and
sub
xchg
outs
and
shl
nop
(bad)
enter
sbb
adc
adc
or
add
loopne
aas
pop
or
rcl
je
add
and
sub
not
xchg
enter
rol
inc
sbb
dec
fdiv
push
fprem
adc
clc
or
bound
mov
shl
shl
or
and
fsub
dec
psrld
pop
or
push
int3
adc
dec
fsub
repz
sbb
jbe
lds
inc
lods
mov
loopne
or
les
mov
or
sub
inc
add
ds
(bad)
aas
pop
cld
xchg
outs
inc
inc
push
push
out
aas
mov
add
cmp
int
cmp
add
add
or
inc
sub
add
add
add
add
or
nop
pusha
xchg
mov
ret
xchg
(bad)
jge
enter
xor
adc
add
rcl
nop
xor
xchg
or
enter
mov
arpl
cmp
(bad)
gs
mov
mov
in
jmp
xor
and
mov
mov
imul
dec
or
pusha
int
mov
enter
push
gs
xchg
loope
cwde
or
gs
(bad)
pop
pop
mov
movs
push
test
mov
jae
rcr
or
ret
jno
inc
mov
iret
popa
mov
enter
add
pusha
gs
xor
xchg
cmp
add
xchg
lods
lods
and
aad
or
dec
mov
and
push
imul
outs
dec
ss
fcomp
es
xor
idiv
jmp
or
iret
jbe
ins
jo
cli
jne
fadd
push
xchg
rol
cli
hlt
aam
lock
rol
xor
sub
lahf
sbb
je
adc
jp
or
fild
mov
ins
adc
cmp
push
xchg
mov
loop
cmp
(bad)
cld
rol
loop
or
mov
and
imul
ds
inc
push
enter
add
test
or
add
or
sub
xor
pop
add
arpl
pop
dec
sub
sbb
xchg
or
inc
ror
pop
adc
sbb
mov
mov
cwde
cmps
or
ret
jo
dec
je
dec
xor
sub
pusha
bound
adc
test
or
xchg
test
mov
call
jge
inc
add
pushf
xor
(bad)
adc
cmps
inc
movs
stos
test
test
cli
pop
rol
gs
les
sbb
jmp
ins
inc
hlt
xchg
dec
add
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
and
dec
mov
popf
sbb
loop
sub
cmp
mov
inc
mov
cmp
loopne
nop
ficomp
adc
xchg
dec
fwait
stos
xchg
fcom
push
sub
sub
xchg
push
iret
and
or
jno
scas
test
mov
and
push
xchg
xor
call
scas
pusha
std
and
inc
add
pop
xchg
or
jo
mov
popf
cmps
adc
inc
mov
push
ror
jae
sahf
popa
ret
test
das
or
pop
jmp
mov
dec
inc
fwait
ds
cmps
int
(bad)
xor
not
aaa
cmps
ret
shl
jmp
pop
cmp
dec
mov
push
test
dec
ret
(bad)
cli
lock
xchg
xor
push
xchg
dec
repnz
ss
repnz
cld
adc
xchg
loopne
test
cmps
adc
cld
push
dec
xchg
ret
popf
pop
ret
push
jns
xor
and
shl
loopne
lahf
add
add
pop
(bad)
jl
pusha
sbb
push
ins
test
cmp
rcr
data16
adc
rol
sbb
mov
mov
xchg
scas
add
jne
or
les
or
and
cmp
jp
fs
ins
movs
rol
sub
shl
inc
push
call
fs
mov
pop
jl
or
or
add
and
jb
aas
es
(bad)
retf
aas
push
inc
adc
ss
cmp
rdpmc
idiv
mov
test
pop
push
xlat
and
dec
add
cwde
xor
mov
inc
outs
pop
push
cmps
add
jp
cmps
mov
dec
test
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
and
enter
sbb
xor
push
and
add
sub
leave
mov
adc
add
(bad)
cld
cmps
mov
inc
retf
xchg
add
cdq
and
sbb
push
addr16
push
das
jg
sbb
jb
push
nop
cmp
dec
stos
aam
dec
push
sub
adc
ret
push
adc
cmps
addr16
mov
pop
xchg
sbb
and
jae
mov
pusha
popa
lods
xchg
gs
pushf
cmp
movs
fldenv
jl
push
xlat
outs
add
and
cmp
and
outs
or
jmp
ret
fild
push
push
or
jns
jmp
ret
ins
and
fcomp
lods
dec
sti
lds
retf
je
or
jecxz
jl
shl
imul
sub
push
jmp
push
fstp
push
dec
popf
pusha
inc
in
scas
mov
adc
(bad)
mov
pop
add
add
in
jle
or
dec
nop
add
push
addr16
mov
jo
fadd
jle
ins
rol
push
ja
jp
mov
stos
arpl
pushf
mov
pusha
lock
pop
xchg
push
xchg
imul
sub
nop/reserved
mov
clc
(bad)
adc
cld
add
dec
pop
xchg
popa
movs
jo
pop
arpl
jb
clc
mov
test
scas
inc
adc
xchg
pop
les
adc
and
add
or
inc
sub
add
add
add
add
or
nop
pusha
nop
or
sub
add
xchg
inc
sub
mov
std
arpl
loope
and
shl
mov
xchg
inc
dec
mov
mov
arpl
movs
and
int3
inc
sahf
add
push
pop
adc
rcr
call
scas
or
fwait
dec
xchg
jmp
inc
loopne
mov
test
aas
js
rcl
repz
stos
and
and
add
dec
sahf
sub
out
add
cmp
les
sub
cld
rcl
nop
and
dec
xchg
sub
mov
add
or
aad
shld
imul
sbb
xchg
push
retf
push
je
shr
(bad)
movs
pop
mov
push
dec
popa
mov
cmc
fcomp
ins
mov
sahf
test
sbb
adc
add
nop
inc
inc
(bad)
cmp
mov
out
inc
rcl
lea
pop
sub
fild
and
cwde
cmp
hlt
jno
sbb
and
outs
mov
or
push
adc
push
icebp
add
test
enter
push
dec
sub
aad
sub
sbb
cmp
inc
jb
lods
mov
cwde
into
sbb
inc
and
les
mov
xchg
add
xor
dec
sub
mov
add
loop
sbb
xchg
into
mov
and
sub
xchg
outs
and
shl
nop
(bad)
enter
sbb
adc
adc
or
add
loopne
aas
pop
or
rcl
je
add
and
sub
not
xchg
enter
rol
inc
sbb
dec
fdiv
push
fprem
adc
clc
or
bound
mov
shl
shl
or
and
fsub
dec
psrld
pop
or
push
int3
adc
dec
fsub
repz
sbb
jbe
lds
inc
lods
mov
loopne
or
les
mov
or
sub
inc
add
ds
(bad)
aas
pop
cld
xchg
outs
inc
inc
push
push
out
aas
mov
add
cmp
int
cmp
add
add
or
inc
sub
add
add
add
add
or
nop
pusha
xchg
mov
ret
xchg
(bad)
jge
enter
xor
adc
add
rcl
nop
xor
xchg
or
enter
mov
arpl
cmp
(bad)
gs
mov
mov
in
jmp
xor
and
mov
mov
imul
dec
or
pusha
int
mov
enter
push
gs
xchg
loope
cwde
or
gs
(bad)
pop
pop
mov
movs
push
test
mov
jae
rcr
or
ret
jno
inc
mov
iret
popa
mov
enter
add
pusha
gs
xor
xchg
cmp
add
xchg
lods
lods
and
aad
or
dec
mov
and
push
imul
outs
dec
ss
fcomp
es
xor
idiv
jmp
or
iret
jbe
ins
jo
cli
jne
fadd
push
xchg
rol
cli
hlt
aam
lock
rol
xor
sub
lahf
sbb
je
adc
jp
or
fild
mov
ins
adc
cmp
push
xchg
mov
loop
cmp
(bad)
cld
rol
loop
or
mov
and
imul
ds
inc
push
enter
add
test
or
add
or
sub
xor
pop
add
arpl
pop
dec
sub
sbb
xchg
or
inc
ror
pop
adc
sbb
mov
mov
cwde
cmps
or
ret
jo
dec
je
dec
xor
sub
pusha
bound
adc
test
or
xchg
test
mov
call
jge
inc
add
pushf
xor
(bad)
adc
cmps
inc
movs
stos
test
test
cli
pop
rol
gs
les
sbb
jmp
ins
inc
hlt
xchg
dec
add
push
inc
add
stc
add
or
inc
sub
add
xor
sub
add
inc
dec
sbb
push
loopne
or
sub
test
xchg
inc
nop
adc
cli
clc
push
iret
push
mov
sub
jns
add
dec
sub
(bad)
or
dec
sub
lock
fdivr
jg
mov
shl
and
mov
or
icebp
shl
aad
std
jl
inc
fdivr
clc
addr16
pop
push
sub
dec
push
sub
scas
ss
int
aad
dec
ds
xor
add
or
popa
into
retf
ins
(bad)
mov
add
jge
mov
jae
aaa
mov
fcom
add
adc
pop
nop
adc
xchg
jmp
inc
sahf
lods
dec
fwait
add
sub
pop
clc
jae
out
push
(bad)
movs
into
icebp
push
sbb
pop
fwait
pop
into
rol
aaa
jno
or
jp
inc
(bad)
addr16
jmp
add
call
into
cmp
js
push
mov
and
rol
and
bnd
jmp
dec
sub
xor
inc
imul
test
test
cmp
aad
pop
jns
stc
and
jl
adc
sahf
add
imul
adc
loop
add
in
adc
bound
sbb
mov
pushf
jg
push
sub
aad
test
outs
out
sub
dec
or
int3
aaa
movs
cmp
xor
mov
xchg
cmp
rcl
dec
test
dec
popa
sbb
in
dec
xchg
pop
loop
add
inc
xchg
scas
mov
in
inc
out
dec
mov
and
pop
mov
and
pop
test
and
inc
add
loopne
ret
clc
ret
and
jecxz
cmp
cmps
mov
ror
sub
sub
cmp
add
inc
inc
or
(bad)
mov
cld
add
inc
jnp
shr
scas
scas
mov
or
inc
in
in
mov
xor
inc
shr
or
(bad)
ror
and
icebp
(bad)
adc
test
adc
push
or
push
push
pop
mov
shl
rcl
or
pop
cld
inc
arpl
push
sbb
xchg
adc
es
loope
sti
dec
sbb
push
or
out
mov
sub
fdiv
(bad)
sbb
or
mov
repnz
xchg
pusha
test
shr
es
repz
ret
call
addr16
imul
add
mov
inc
xor
jns
jnp
cmps
xor
xchg
adc
add
sub
iret
sub
mov
test
jo
mov
test
adc
push
mov
push
or
and
(bad)
popf
push
adc
mov
push
aam
inc
push
into
movs
mov
sbb
fnstsw
jl
xor
jle
arpl
scas
test
test
mov
cmp
into
cmp
push
push
xor
add
fisubr
scas
call
push
test
sbb
cmp
hlt
mov
jl
xchg
retf
je
cmp
pop
outs
je
jbe
sub
aas
sbb
jmp
bound
push
inc
jo
xor
fsub
ret
or
xor
adc
pushf
xchg
test
add
inc
or
mov
pop
or
aas
adc
mov
xor
rcl
cwde
(bad)
ja
pop
add
test
call
lock
(bad)
repnz
cwde
loopne
add
and
adc
jmp
inc
lahf
add
inc
mov
mov
jne
sub
push
cli
out
xchg
out
sub
add
popa
inc
inc
mov
or
pop
or
pusha
mov
adc
(bad)
loop
loope
cmp
loop
or
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
cmp
sbb
aas
push
xchg
sub
mov
xor
pop
xchg
fidivr
fmul
adc
(bad)
std
pusha
cld
sbb
jo
or
mov
test
pop
lds
inc
pop
ret
adc
xchg
jecxz
call
add
mov
jno
inc
call
jg
inc
cmc
mov
les
adc
sub
ror
add
pop
aad
dec
(bad)
popa
shl
cmps
xor
add
sbb
lock
add
jns
inc
push
adc
jp
nop
sti
mov
jnp
xor
imul
or
ds
(bad)
fldenv
scas
and
in
or
cs
adc
push
mov
inc
mov
ret
inc
cmp
test
cmps
push
push
inc
loopne
and
cmp
mov
jg
mov
jns
inc
pusha
add
lock
jae
fnstsw
popa
aad
sbb
sar
cmp
std
mov
adc
aas
and
test
loopne
cli
push
in
es
aas
je
pusha
or
xchg
push
je
(bad)
aas
push
and
add
ret
push
dec
popa
pop
add
dec
mov
jo
or
sub
adc
jecxz
add
cmp
shl
pushf
jo
sbb
call
shl
and
sub
add
inc
or
or
push
add
addr16
sbb
inc
add
xor
or
in
xchg
or
aam
push
sbb
pusha
rol
adc
(bad)
clc
or
or
ret
adc
or
mov
pop
rol
mov
popa
in
es
cmove
and
or
out
loopne
push
cmp
(bad)
fld
sbb
dec
inc
push
retf
sbb
les
movs
je
add
inc
das
(bad)
icebp
ret
sbb
push
or
add
fiadd
sbb
pop
mov
add
and
call
add
adc
inc
jecxz
in
rol
mov
imul
sub
add
push
push
inc
scas
push
popa
cmp
inc
inc
jne
ret
inc
mov
or
aam
ins
mov
test
add
scas
fisubr
add
add
dec
sbb
push
and
xor
mov
xchg
lea
or
adc
add
add
pop
inc
cwde
add
in
dec
adc
cmp
or
add
dec
push
ins
pusha
jno
sbb
xor
(bad)
aaa
add
fbld
jno
adc
push
inc
rcr
add
sbb
loopne
push
ds
in
fidiv
sbb
dec
(bad)
leave
aaa
add
push
not
pop
push
mov
inc
push
in
test
pushf
add
inc
ret
sbb
lds
xchg
dec
add
(bad)
int3
lock
mov
sub
test
adc
adc
inc
cmp
mov
mov
stc
aaa
push
shl
nop
inc
or
ret
xchg
rol
test
or
add
sar
scas
popa
or
das
or
hlt
test
add
add
and
loop
push
mov
es
cld
inc
add
ret
(bad)
adc
xor
inc
xchg
mov
mov
xor
add
add
add
repz
lock
pop
sbb
xor
mov
ret
or
jb
xor
jo
adc
add
dec
xor
aas
pop
push
lea
loopne
jmp
ror
daa
nop
xor
or
add
fiadd
adc
sar
mov
sub
inc
adc
mov
sbb
xor
dec
and
sbb
sub
xchg
inc
xor
inc
sbb
jno
pop
push
shr
ja
loopne
fidiv
lea
pop
and
lock
xacquire
sub
sub
enter
sbb
add
sbb
test
and
fadd
ss
mov
ret
cld
or
jo
cmc
test
or
pusha
mov
dec
mov
ret
test
lock
sbb
clc
mov
bswap
or
or
dec
cli
push
push
or
ins
inc
add
test
push
cld
and
sub
pusha
unpckhps
sbb
xchg
bound
jp
xchg
cld
and
and
mov
add
mov
in
ror
mov
push
add
add
mov
inc
adc
inc
(bad)
push
or
and
pop
scas
xor
fbstp
add
lock
cmp
loope
or
adc
nop
nop
xchg
les
pop
adc
sub
ret
mov
in
cmp
push
pusha
pop
cmp
and
jg
adc
rol
add
int3
ins
call
ret
dec
pusha
adc
scas
loopne
add
test
or
add
sbb
jo
xchg
inc
mov
ins
mov
dec
pop
mov
add
push
adc
and
add
lock
sub
mov
lea
inc
sbb
inc
add
sbb
adc
add
pop
add
xor
dec
inc
sbb
mov
lahf
or
adc
(bad)
jmp
push
adc
mov
cvttps2pi
mov
iret
cld
and
cmp
retf
test
push
shl
add
push
pusha
mov
test
inc
push
test
sub
or
loopne
adc
test
popa
add
add
add
pushf
and
cmps
loopne
dec
int
fdivp
xchg
mov
and
mov
or
xchg
add
fwait
or
or
push
push
jge
jecxz
or
add
loop
jecxz
sub
mov
add
pop
mov
js
inc
mov
(bad)
and
and
inc
cld
mov
and
cmps
popf
adc
adc
js
or
lock
adc
js
sbb
add
adc
add
jmp
add
das
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
nop
retf
cmp
ror
mov
or
or
push
aam
(bad)
pusha
aas
sbb
push
inc
lock
outs
xchg
xor
fdiv
dec
fdivr
ret
and
adc
add
mov
and
cmc
push
cs
scas
rcl
lods
pop
adc
xchg
add
clc
sub
movs
popa
fwait
push
cmp
cld
add
push
sbb
push
adc
push
add
push
rcr
mov
test
or
std
and
(bad)
fiadd
mov
outs
(bad)
stc
sub
mov
xor
sbb
rdtsc
cmp
ds
shl
mov
add
shr
es
push
dec
sub
clc
test
and
ret
and
test
repnz
adc
or
add
test
xor
sub
push
out
push
or
add
sbb
in
sbb
sbb
data16
xchg
(bad)
out
xchg
add
cmp
xchg
push
or
xor
fimul
xchg
sbb
out
inc
fidivr
dec
mov
inc
fbld
xchg
inc
(bad)
cld
sbb
les
loope
and
shl
ret
cld
xchg
retf
aas
push
jl
syscall
pop
mov
mov
cmp
push
cmp
addr16
rol
(bad)
rcl
and
add
aas
pop
mov
ficom
mov
in
test
inc
mov
add
aaa
call
loopne
int3
aas
pop
inc
in
xchg
cs
xor
sbb
sbb
lock
daa
cs
fisub
pop
loope
movhps
ror
jns
ss
loopne
pop
mov
push
pop
dec
xor
mov
add
adc
mov
inc
add
sub
cmp
inc
push
call
lods
jecxz
mov
inc
push
adc
add
adc
mov
add
sar
jae
sub
and
adc
xor
inc
sub
add
and
and
adc
fistp
inc
daa
push
shr
movs
cmp
enter
and
adc
in
push
or
and
adc
push
add
adc
or
sbb
inc
or
ret
push
rol
punpckhwd
pusha
out
inc
jle
mov
xor
rol
inc
arpl
or
dec
sub
ret
aas
sahf
adc
push
sbb
sub
lds
fild
test
cmp
aaa
int3
js
dec
or
std
inc
iret
sbb
jb
or
cs
ror
in
add
cmc
aad
popf
xor
or
jns
push
xor
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
sub
push
jo
sub
inc
aas
push
mov
push
pop
and
out
pop
aas
jno
pop
lock
dec
xchg
and
sub
sbb
ret
pop
leave
xchg
jle
sahf
mov
pop
xchg
or
and
pop
add
sub
pop
inc
pusha
and
add
inc
mov
jge
fwait
xor
inc
mov
aas
or
sub
popf
clc
ins
int3
mov
imul
jb
das
out
inc
mov
hlt
outs
aad
push
xor
dec
cld
(bad)
outs
inc
push
pop
fistp
mov
jp
lods
sbb
test
daa
mov
push
add
cld
outs
adc
mov
loope
inc
inc
iret
sbb
repnz
add
in
movs
cmp
and
and
mov
pusha
mov
add
sub
adc
xor
or
dec
dec
jl
mov
jge
popf
int3
(bad)
jecxz
mov
dec
and
test
cmp
cs
jg
and
adc
or
rol
add
mov
add
pop
pop
fisttp
je
sbb
or
mov
ret
add
and
enter
mov
or
(bad)
ja
xchg
pusha
clc
adc
out
xor
(bad)
es
nop
push
cdq
sbb
mov
je
add
xor
push
and
add
xor
aas
and
mov
xor
jae
(bad)
jle
push
pop
cmp
inc
dec
adc
or
retf
mov
push
add
pushf
xchg
add
xchg
rol
push
push
(bad)
test
(bad)
icebp
ret
aas
mov
pop
(bad)
xor
stos
jns
shr
push
inc
lock
out
jns
loopne
jne
add
pop
js
jo
movs
scas
clc
push
pop
add
push
mov
add
xor
xor
adc
cmp
push
jl
ret
les
mov
cmp
xchg
rol
add
adc
retf
xor
or
and
and
mov
rol
cld
mov
rol
xchg
or
enter
movs
ins
add
rol
pop
sbb
xor
add
fld
add
sub
lock
sub
push
mov
push
cmp
clc
sbb
scas
inc
fistp
mov
sbb
add
dec
les
(bad)
or
jnp
(bad)
push
pop
enter
int3
or
loope
push
stos
hlt
inc
add
inc
xor
adc
or
or
pop
and
pop
or
adc
or
addr16
imul
or
sbb
add
or
inc
sub
add
add
add
add
or
out
pusha
rol
mov
mov
jecxz
inc
and
pop
mov
inc
add
out
dec
inc
rcl
sar
sar
inc
loopne
or
add
loopne
test
scas
or
and
mov
xchg
pop
int
push
inc
pushf
mov
call
or
ror
xor
xor
or
or
ror
mov
(bad)
nop
sahf
sub
fsubr
mov
xor
or
jno
nop
icebp
fidivr
dec
fadd
call
push
push
sub
mov
xchg
into
test
push
ret
add
jne
nop
pop
mov
fs
fs
jp
cmp
cmp
mov
mov
add
and
add
or
inc
sub
add
add
add
add
or
(bad)
mov
rol
lock
sub
sbb
and
add
push
movs
sbb
push
add
call
and
aad
dec
add
xor
data16
xor
push
or
xchg
inc
cdq
loopne
cs
push
or
add
stc
add
or
inc
sub
add
add
add
add
outs
add
std
mov
ret
add
test
stos
jg
adc
cld
(bad)
dec
pop
inc
and
sub
pop
jmp
dec
sahf
pop
int
pop
cdq
adc
xor
outs
bound
aaa
cwde
add
dec
retf
and
inc
clc
xchg
and
push
xor
push
loop
test
add
stos
retf
mov
and
add
or
inc
sub
add
add
add
add
or
dec
cld
out
ffreep
add
dec
xor
or
cmp
push
ret
jg
sub
mov
dec
or
or
xchg
sbb
mov
pop
sbb
cmc
outs
shl
fs
vunpcklps
int3
ins
mov
or
add
and
add
or
inc
sub
add
add
add
add
or
dec
je
dec
mov
adc
add
push
daa
mov
inc
cld
(bad)
test
or
lock
sbb
call
stos
movs
push
loopne
jg
bound
lahf
dec
(bad)
fcomp
jb
cmps
dec
xchg
(bad)
loope
xchg
mov
mov
ret
ja
ins
aam
loopne
inc
xchg
ss
adc
adc
and
add
or
inc
sub
add
add
add
add
or
or
out
mov
push
adc
add
daa
sub
scas
sar
or
cld
imul
push
xor
fs
jp
push
push
dec
lahf
sbb
push
adc
ror
movs
jg
inc
sbb
test
sbb
out
adc
jle
fmul
pusha
rcr
sbb
dec
pop
or
loope
add
stc
add
or
inc
sub
add
add
add
add
or
dec
cld
addr16
xchg
mov
cmp
inc
mov
dec
xor
jb
ss
test
mov
sbb
test
mov
fdiv
scas
xchg
add
scas
cld
ret
repnz
sbb
xchg
sub
inc
fpatan
sub
dec
cmp
ins
ret
(bad)
out
shl
jle
mov
fadd
or
mov
rcl
(bad)
imul
add
stc
add
xor
inc
sub
add
add
or
dec
adc
iret
ffreep
add
sbb
fild
ins
fadd
movs
mov
xor
loop
jg
sbb
inc
lea
push
int
sbb
hlt
lods
push
movs
push
fwait
or
and
retf
cmp
loopne
movs
dec
xor
dec
mov
push
mov
test
enter
mov
dec
rol
ror
pop
push
icebp
pop
sub
(bad)
and
xor
loopne
adc
rol
rol
or
lgdtd
dec
add
add
popa
xor
sbb
cmp
add
dec
add
ins
je
add
dec
add
inc
dec
inc
cmp
popa
xor
inc
add
inc
(bad)
clc
xchg
lahf
je
(bad)
icebp
add
rep
scas
mov
push
(bad)
jmp
shl
xchg
pop
add
push
stos
add
repz
add
std
shr
mov
call
jecxz
mov
add
repnz
cld
(bad)
fiadd
sti
mov
jno
or
in
cld
mov
movs
jne
(bad)
std
push
(bad)
rol
in
retf
mov
or
dec
add
xchg
add
std
(bad)
cmps
gs
cmps
add
out
repz
add
retf
mov
ret
pushf
mov
cld
cld
mov
icebp
(bad)
ret
test
std
(bad)
fcom
aad
aad
cli
rcr
in
push
pop
(bad)
std
add
std
fsubp
fstp
mov
add
push
imul
loop
xchg
add
loop
icebp
add
(bad)
cli
and
dec
add
out
retf
add
std
fstp
(bad)
test
dec
cs
or
(bad)
call
call
add
add
mov
cmps
jne
lock
cld
(bad)
fild
test
xchg
add
out
add
leave
sbb
add
retf
lds
retf
movs
add
clc
clc
ret
mov
mov
add
(bad)
mov
std
jmp
or
clc
cmp
xor
jmp
or
daa
push
or
test
jmp
(bad)
jmp
jmp
add
aam
sar
mov
adc
ret
mov
add
movs
adc
cld
repz
xchg
pop
sbb
in
stc
cmc
div
(bad)
int3
fsub
(bad)
fld
out
int3
add
or
xchg
add
cld
std
(bad)
dec
or
push
lods
das
sar
jecxz
adc
mov
lock
add
add
push
push
(bad)
ret
popf
nop
cs
pushf
adc
aam
fiadd
sbb
shl
sbb
fmulp
(bad)
cld
cld
sti
repnz
hlt
lods
or
and
mov
arpl
mov
lds
clc
rcl
xlat
popf
jge
fcom
shl
(bad)
mov
scas
cmp
cmps
jae
icebp
ret
iret
test
mov
sti
(bad)
cld
mov
popa
cli
(bad)
cmc
in
in
neg
or
jp
mov
add
idiv
jg
or
pop
xor
loope
pushf
popf
sahf
retf
mov
jmp
add
mov
xchg
movs
xchg
std
mov
out
loopne
not
or
xchg
jo
and
mov
mul
or
jl
std
scas
add
into
mov
sub
mov
pop
out
ffree
scas
dec
adc
pop
mov
lock
test
(bad)
das
cmp
out
imul
cli
cli
cli
xchg
aas
cmp
sub
in
call
cli
into
into
retf
ret
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
sub
inc
sub
add
add
add
add
inc
std
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
pop
popf
nop
or
xchg
xchg
sub
adc
jecxz
enter
adc
add
test
cmp
mov
inc
js
add
adc
sahf
gs
sub
push
stos
aad
mov
mov
icebp
mov
dec
adc
nop
loope
daa
add
pop
mov
aad
pop
or
ror
or
popa
aam
jle
sbb
lods
adc
stc
js
add
or
push
mov
and
pushf
push
inc
pusha
rol
je
jb
cmp
rol
push
rol
ds
xchg
pusha
ror
mov
pusha
into
xchg
pop
adc
cmc
push
dec
xchg
xchg
xlat
jl
mov
neg
bswap
loopne
push
nop
mov
ins
inc
rol
popa
mov
push
shl
pop
sbb
xchg
fs
repnz
mov
dec
add
pop
adc
add
xchg
add
gs
fist
rcr
jg
or
pop
pop
push
outs
(bad)
ror
pop
jp
fld
dec
add
sbb
mov
and
mov
jbe
pop
popa
and
aaa
cmp
inc
inc
push
test
adc
or
mov
and
mov
ins
call
xchg
pop
cmp
mov
adc
sub
cmp
pop
inc
xchg
push
stos
ja
push
loope
loope
dec
add
inc
or
adc
cmps
adc
mov
jmp
dec
bound
add
jge
add
loop
outs
rol
fmul
loope
shr
push
ficom
sbb
mov
lea
mov
ret
pop
jo
cmp
jl
push
adc
push
or
sbb
or
rol
mov
loopne
adc
outs
cmp
mov
ins
scas
dec
mov
inc
inc
test
mov
add
inc
ins
xchg
test
call
push
sbb
out
call
popa
adc
fmul
adc
(bad)
sbb
cwde
push
ret
adc
dec
nop
mov
sbb
mov
jmp
add
sbb
pusha
fwait
stos
xchg
mov
xor
or
mov
loop
inc
pop
aad
sub
xchg
mov
or
leave
or
push
xor
sbb
scas
icebp
xor
xchg
into
stos
sbb
or
or
add
add
stc
loop
sub
cmp
add
xor
add
clc
add
or
call
mov
in
jmp
push
inc
adc
ret
sbb
jo
rol
cmc
jmp
mov
shr
stos
mov
adc
aam
ret
sbb
out
fnsave
in
loopne
fistp
sbb
mov
es
adc
arpl
push
cmps
fsubr
add
xchg
jae
div
pop
imul
or
mov
in
call
cli
test
mov
dec
mov
test
xor
xchg
mov
xchg
out
ss
push
push
pop
nop
adc
and
jg
out
xchg
retf
xor
inc
inc
inc
cmps
les
xchg
mov
sti
inc
add
fwait
stos
lahf
fstp
pop
mov
dec
mov
adc
nop
add
js
add
and
ss
popa
mov
inc
add
adc
vpunpckhbw
add
push
xchg
inc
adc
popa
ss
mov
in
pop
adc
jo
cmp
pop
inc
hlt
inc
rcr
test
push
or
push
aaa
sub
xchg
sbb
sbb
and
or
(bad)
jae
imul
loop
mov
inc
lods
and
push
sysret
push
imul
mov
add
sub
cmp
add
jno
and
mov
sub
xor
or
mov
rol
test
retf
xchg
pusha
(bad)
sbb
xor
or
and
add
mov
sub
pusha
or
loope
sub
mov
add
pusha
xor
imul
xor
add
test
or
fidiv
or
sub
and
xor
mov
or
jo
scas
pusha
or
loope
aaa
push
xor
jmp
mov
pop
inc
dec
inc
xor
fadd
add
popa
add
cdq
add
cwde
lds
xchg
mov
mov
adc
adc
ja
aam
test
and
jno
push
cmp
test
add
push
inc
or
jae
in
rcl
ins
popa
adc
mov
arpl
sbb
inc
inc
add
adc
retf
mov
push
mov
iret
cmp
imul
sbb
and
sahf
dec
test
fcomp
mov
adc
fld
cmps
pop
lds
or
mov
add
push
xor
loope
stos
loope
test
lock
cdq
ror
push
mov
add
mov
and
add
add
(bad)
loopne
add
cmc
and
or
adc
inc
pop
shl
adc
push
retf
fcmovbe
mov
lods
ins
aas
adc
add
stc
add
adc
inc
sub
add
add
xor
add
inc
dec
sbb
mov
sar
add
pop
enter
or
hlt
sub
adc
lahf
cmp
add
push
sbb
mov
jns
ret
call
xlat
sbb
push
scas
jno
and
mov
ss
test
es
jg
and
adc
add
push
loopne
(bad)
aam
mov
ss
and
jl
ret
popa
inc
sbb
pop
dec
shl
arpl
and
inc
test
rcl
sub
mov
pusha
mov
mov
mov
(bad)
adc
ret
mov
cmps
(bad)
inc
bound
cmp
inc
sbb
mov
cmps
xchg
or
inc
mov
pop
mov
repz
jo
pushf
ds
add
xor
pop
add
adc
or
dec
cli
rol
jg
cld
or
xchg
inc
(bad)
push
mov
xchg
rol
push
or
adc
push
inc
mov
shufps
push
shl
out
mov
ins
add
das
or
and
add
lahf
aas
cmc
mov
or
lods
icebp
(bad)
push
inc
sbb
ja
cld
adc
xchg
dec
dec
mov
inc
jae
in
pop
dec
inc
inc
adc
mov
bound
ret
xor
loopne
and
dec
and
push
pop
pop
lock
sbb
mov
adc
add
inc
sbb
or
ficom
push
sbb
popa
or
aas
cmp
ss
adc
pop
loope
mov
test
(bad)
ds
aad
test
daa
sub
sbb
dec
cmp
add
cmp
sub
cwde
sub
data16
and
bound
aam
xchg
dec
retf
jb
shl
push
cli
inc
push
add
pop
push
lods
xchg
add
jno
jmp
inc
or
call
loopne
adc
push
xor
xchg
neg
rol
movs
inc
adc
arpl
and
dec
push
xor
and
cmp
icebp
rol
jo
nop
pop
loope
push
arpl
mov
int
shl
(bad)
or
cmp
scas
jge
adc
mov
inc
cmp
and
cdq
les
inc
adc
les
mov
mov
jo
or
nop
popa
or
adc
inc
push
(bad)
test
retf
test
add
add
add
push
push
mov
ins
out
ret
push
cmp
iret
ret
inc
adc
jp
mov
shr
lfs
pop
jo
add
imul
nop
repnz
xor
xor
adc
sbb
jne
dec
xchg
std
adc
add
nop
(bad)
(bad)
aas
xchg
mov
pop
(bad)
push
cwde
push
jmp
idiv
cdq
and
mov
mov
ret
in
mov
or
sub
xor
push
data16
dec
lock
adc
add
mov
mov
jbe
adc
retf
cwde
mov
cs
jge
clc
mov
jecxz
ins
mov
adc
fadd
xor
mov
hlt
rcr
jb
xor
adc
xor
lock
or
pop
fadd
ror
out
ja
add
add
pop
and
dec
movs
pop
(bad)
lock
aaa
push
enter
add
inc
dec
pusha
add
adc
sbb
cwde
mov
adc
or
xor
sbb
xor
mov
adc
xor
and
mov
pusha
or
jns
pop
inc
sbb
sbb
mov
adc
lock
ret
and
xchg
call
inc
and
ror
test
inc
and
rcl
sbb
push
(bad)
(bad)
inc
or
and
mov
jge
mov
ins
adc
ins
inc
mov
and
enter
and
add
xor
inc
sub
add
add
add
add
or
add
or
pusha
mov
and
popa
inc
add
or
nop
mov
add
and
pop
push
and
mov
loope
mov
les
cld
enter
rcl
xor
adc
add
mov
(bad)
cld
sub
jno
push
adc
sbb
movs
xchg
push
retf
xchg
or
pop
adc
(bad)
pop
mov
test
les
ins
and
add
or
cmps
xor
mov
in
pop
test
ja
jle
aam
adc
jmp
fnstsw
mov
dec
jp
pop
jo
or
cmovle
arpl
leave
test
sbb
out
sbb
jno
test
jmp
out
xchg
pop
sbb
add
push
sub
xchg
test
xchg
int3
int
rol
inc
repz
mov
sbb
lock
xchg
es
mov
mov
or
outs
in
cmp
jns
rcl
add
lods
cmp
mov
dec
pop
dec
pusha
rol
cmp
rcl
push
xor
or
and
and
lods
mov
add
and
and
or
pop
xor
jo
int
pop
cmp
mov
sub
sbb
test
(bad)
call
fs
or
nop
nop
enter
xchg
inc
xchg
push
push
and
fs
bound
and
aam
add
das
in
mov
mov
bound
retf
popf
je
imul
popa
mov
push
stc
(bad)
pop
and
adc
cwde
mov
or
pusha
mov
pusha
mov
loopne
ret
dec
sbb
xchg
push
pop
or
xor
retf
push
jp
or
popf
and
add
sbb
cmp
dec
add
cmp
fldenv
dec
cmp
add
sub
xor
inc
sbb
push
in
les
js
in
or
fs
add
inc
dec
rol
aas
fs
add
js
inc
adc
(bad)
rol
jmp
es
ror
pop
jp
add
call
xor
xor
inc
dec
sub
nop
add
ja
lock
pop
add
and
add
or
inc
sub
add
add
add
add
addr16
or
mov
rcl
adc
loope
test
jg
pop
ss
lock
inc
mov
and
dec
jne
les
movaps
inc
pusha
push
rol
and
popa
loopne
mov
test
enter
adc
xor
or
inc
sahf
mov
sbb
(bad)
shl
call
dec
mov
stc
add
or
inc
sub
add
add
add
add
gs
or
mov
sar
std
std
repz
rcr
adc
pop
ss
mov
adc
pop
or
clc
iret
popf
inc
jg
adc
pop
call
add
inc
add
sbb
mov
jge
and
cwde
xor
lds
push
mov
shl
push
ret
lahf
cmps
add
add
stc
add
or
inc
sub
add
add
add
add
addr16
or
mov
rcl
adc
loope
test
jg
pop
ss
lock
inc
mov
and
dec
jne
les
movaps
inc
pusha
push
rol
and
popa
loopne
mov
test
enter
adc
xor
or
inc
sahf
mov
sbb
(bad)
shl
call
dec
mov
stc
add
or
inc
sub
add
add
add
add
gs
or
mov
sar
std
std
repz
rcr
adc
pop
ss
mov
adc
pop
or
clc
iret
popf
inc
jg
adc
pop
call
add
inc
add
sbb
mov
jge
and
cwde
xor
lds
push
mov
shl
push
ret
lahf
cmps
add
add
stc
add
or
inc
sub
add
add
add
add
addr16
or
mov
rcl
adc
loope
test
jg
pop
ss
lock
inc
mov
and
dec
jne
les
movaps
inc
pusha
push
rol
and
popa
loopne
mov
test
enter
adc
xor
or
inc
sahf
mov
sbb
(bad)
shl
call
dec
mov
stc
add
sbb
inc
sub
add
add
add
add
gs
or
mov
sar
std
std
repz
rcr
adc
pop
ss
mov
adc
pop
or
clc
iret
popf
inc
jg
adc
pop
call
add
inc
add
sbb
mov
jge
and
cwde
xor
lds
push
mov
shl
push
ret
lahf
cmps
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
aad
fnstenv
push
or
push
adc
scas
add
ror
dec
sbb
shld
repz
push
inc
add
adc
add
push
and
xchg
call
es
sub
vcvtph2ps
or
lock
pusha
dec
mov
and
nop
push
movs
retf
mov
sub
fs
rol
mov
inc
pushf
js
add
mov
xchg
push
dec
ror
push
and
sbb
add
sti
inc
mov
js
mov
ja
mov
es
sub
xchg
inc
add
jmp
clc
mov
das
pop
or
cld
xchg
jg
inc
adc
dec
pop
mov
mov
pop
or
test
jns
fisttp
pop
loope
int
add
enter
loopne
dec
adc
nop
or
push
sub
sub
aas
mov
mov
xor
call
loope
in
add
pop
shl
lock
xchg
adc
inc
or
rol
mov
pop
jl
mov
or
and
add
xor
and
xchg
dec
repnz
push
dec
rcl
or
xchg
loopne
sub
pop
adc
ret
sbb
js
xchg
loopne
and
or
or
je
sub
pop
cmp
adc
and
sbb
inc
push
sbb
or
xchg
adc
inc
cld
jecxz
lea
add
add
jge
mov
pop
pop
xor
pand
adc
or
add
push
jbe
pusha
add
inc
cmp
push
inc
inc
or
rol
add
adc
add
inc
push
inc
pop
or
cwde
mov
sahf
push
xchg
enter
push
mov
shl
push
movs
push
or
or
push
mov
mov
and
imul
pop
les
les
or
mov
nop
add
push
or
push
lock
or
inc
pop
pop
test
and
inc
sbb
outs
fs
lods
ret
dec
xchg
xchg
dec
dec
dec
push
mov
gs
sub
cmps
test
push
pop
or
lock
popa
int
push
pop
push
dec
mov
xor
test
sbb
aaa
and
add
xchg
syscall
push
mov
test
rol
add
inc
popa
or
mov
or
adc
cld
iret
pop
pop
stos
push
push
nop
push
dec
and
lock
sbb
push
xor
pop
ret
mov
je
mov
pop
sub
loope
pop
jmp
add
xor
xchg
scas
test
xchg
push
nop
push
xchg
es
mov
adc
shl
pop
adc
test
pop
sbb
jl
pop
ins
iret
dec
ss
call
data16
inc
shl
add
cmc
aas
cmp
out
icebp
std
arpl
data16
or
jnp
cmp
pop
xchg
daa
(bad)
sub
adc
mov
(bad)
pop
lahf
xchg
add
jnp
cwde
loopne
xchg
out
stc
gs
jmp
in
push
push
mov
test
aam
lds
dec
test
dec
data16
push
dec
inc
mov
nop
mov
add
inc
and
push
adc
aas
je
or
inc
jmp
ret
push
inc
jp
xchg
push
add
and
sub
mov
test
inc
rcl
mov
call
push
ret
popa
add
(bad)
adc
or
xchg
ret
sbb
out
mov
push
push
sbb
cmc
adc
adc
arpl
sbb
xchg
mov
mov
adc
sbb
push
mov
dec
or
pop
aaa
add
nop
or
pushf
ret
or
mov
sbb
loopne
push
out
stos
add
jo
sbb
pop
pusha
or
pusha
and
and
sbb
dec
inc
xor
xor
jns
add
cld
cwde
xchg
sub
mov
in
adc
dec
inc
fsubp
push
outs
sbb
pop
cwde
push
adc
cld
inc
pop
push
pop
add
pop
add
xchg
pop
sbb
inc
cdq
enter
xchg
aaa
cmp
sbb
or
or
or
fadd
hlt
cwde
inc
inc
push
loope
(bad)
mov
test
adc
and
add
xor
inc
repnz
cmp
loope
push
adc
pop
mov
inc
icebp
(bad)
pop
js
sbb
pop
les
dec
and
or
add
mov
rol
inc
push
or
outs
call
add
push
push
cld
jecxz
movs
js
and
lock
adc
dec
inc
mov
add
ds
inc
add
adc
push
imul
and
inc
stos
inc
and
add
mov
sub
loope
lods
or
cli
ror
loopne
lds
int3
in
xor
adc
jl
xchg
aam
sbb
pop
push
popa
mov
test
fcomip
xchg
call
mov
add
dec
push
ss
xor
ret
mov
push
mov
mov
rol
or
mov
and
adc
add
add
into
sbb
sub
mov
adc
icebp
test
or
inc
cmp
add
aad
inc
adc
cmp
sbb
xchg
xchg
cmp
or
jb
cmp
popa
add
js
or
mov
jmp
rol
inc
ret
add
mov
add
cmp
jns
adc
jp
inc
xor
mov
add
(bad)
fld
adc
xor
xor
jb
xor
dec
sub
add
adc
adc
or
ret
adc
and
(bad)
js
nop
sub
mov
sub
adc
(bad)
arpl
jmp
add
dec
dec
inc
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
jo
cwde
inc
add
mov
mov
ins
mov
mov
call
sbb
enter
and
call
or
mov
dec
imul
(bad)
mov
xor
inc
adc
fiadd
not
retf
xchg
mov
push
mov
fimul
and
add
clc
ret
dec
mov
inc
lds
pop
movs
dec
icebp
sub
or
mov
movs
adc
sbb
inc
xor
and
popf
mov
nop
mov
cld
(bad)
inc
rcl
xchg
daa
outs
pop
mov
or
shufps
mov
adc
pop
imul
ret
adc
in
and
push
adc
inc
call
shl
stos
add
or
push
retf
arpl
test
cmps
movlps
test
push
mov
mov
xor
test
xchg
pop
push
mov
adc
push
ret
clc
ret
inc
pusha
mov
test
lock
jnp
or
mov
inc
es
in
rol
inc
dec
push
mov
or
ss
dec
push
les
push
test
test
inc
inc
jnp
xchg
loopne
mov
jo
sub
cld
repz
mov
inc
adc
les
and
mov
(bad)
js
add
inc
cmp
or
sub
shl
pushf
cmc
ror
mov
pop
sbb
inc
or
mov
icebp
(bad)
sub
mov
inc
or
push
xor
add
push
add
adc
xor
xchg
loope
outs
or
push
fldenv
push
mov
test
xchg
inc
mov
mov
(bad)
mov
es
cmp
call
mov
mov
stc
push
or
xor
cmp
push
mov
sbb
mov
jg
inc
mov
mov
inc
test
push
bound
or
xor
or
test
popa
les
stos
(bad)
pusha
fiadd
mov
addr16
push
add
push
(bad)
ror
xchg
adc
cmps
cmp
push
inc
es
movs
sbb
ins
cmp
sub
or
test
sbb
ret
sbb
add
add
add
inc
cld
inc
shl
dec
inc
inc
cmp
and
ret
inc
adc
sub
and
pusha
leave
or
cdq
sbb
lods
movs
mov
out
dec
adc
sbb
or
call
into
mov
dec
jge
add
inc
sbb
or
pop
(bad)
iret
sbb
lds
dec
dec
nop
add
xchg
movs
xor
and
fs
xchg
cld
add
fsub
jmp
add
pop
sub
xchg
and
mov
adc
fs
call
sub
scas
cs
daa
fnstsw
add
add
loopne
add
or
cvtps2pi
mov
fs
test
cmp
xchg
aas
das
fs
add
int
aad
(bad)
les
test
sbb
and
or
or
lea
lds
rdtsc
add
or
or
push
lods
lds
scas
adc
stos
mov
or
add
dec
push
mov
push
mov
and
mov
mov
mov
push
fadd
push
adc
lock
add
jo
pop
stc
adc
pop
into
and
push
pop
loope
inc
pop
add
imul
add
push
out
pop
or
enter
push
or
stc
add
and
loope
gs
rol
sub
mov
pop
pop
inc
add
add
loope
ja
xor
inc
sub
adc
or
inc
or
cmp
sbb
or
pop
rcl
cmps
add
mov
sbb
push
ret
aaa
or
add
add
retf
jo
add
sub
inc
and
sub
and
xchg
add
and
dec
mov
adc
add
and
xor
sub
sar
nop
adc
xchg
xchg
dec
mov
add
loopne
mov
test
xor
aas
inc
xor
das
test
repz
add
xchg
adc
or
loopne
add
or
or
or
inc
clc
loope
das
pusha
(bad)
mov
mov
(bad)
and
xor
add
mov
and
sbb
mov
adc
cmp
pop
dec
xchg
mov
add
clc
rcr
leave
iret
xchg
inc
adc
jle
nop
mov
xchg
add
nop
adc
inc
push
adc
movs
add
dec
imul
pusha
mov
fiadd
add
inc
push
inc
mov
mov
std
jmp
xor
push
jbe
sbb
mov
add
or
add
test
or
cdq
rol
add
pop
fst
or
lds
and
or
pop
cmc
jp
sub
sbb
add
cs
and
sbb
nop
or
and
mov
sub
rol
cmc
scas
push
clc
test
sti
(bad)
dec
mov
add
clc
lock
push
and
sbb
adc
push
xchg
mov
retf
(bad)
(bad)
sbb
call
(bad)
jno
sbb
jo
pop
jmp
pop
es
xchg
pop
(bad)
mov
add
jae
inc
or
pop
imul
ds
sbb
mov
sbb
adc
dec
adc
sbb
and
mov
shr
push
fdivrp
inc
sbb
into
add
mov
sbb
push
mov
and
test
aas
inc
rol
push
pop
add
mov
ja
ret
std
out
ins
das
xor
(bad)
pop
inc
push
es
les
add
outs
sbb
sahf
lock
sub
add
adc
jmp
ins
rol
test
mov
mov
or
add
pop
or
jno
sbb
loopne
mov
add
mov
jl
stc
mov
or
repnz
pop
mov
sbb
loopne
daa
adc
popa
add
jne
add
jo
or
sbb
inc
mov
mov
iret
arpl
sub
cld
addr16
sbb
or
les
mov
inc
lock
jo
inc
out
mov
mov
mov
push
frstor
or
int3
data16
lahf
nop
test
add
mov
add
or
and
inc
and
push
pop
xor
shr
arpl
shr
jne
adc
js
aas
add
mov
inc
and
jge
and
jne
mov
hlt
jmp
fld
xor
aad
dec
add
(bad)
pop
inc
sbb
test
mov
ror
or
add
loope
ror
jp
rcr
push
fisub
xor
mov
imul
sbb
lea
ret
inc
rcr
jl
push
and
fdivr
(bad)
inc
xchg
inc
adc
sbb
xor
jge
inc
xor
fs
mov
add
mov
pop
out
add
sbb
inc
add
mov
add
sbb
bsr
or
mov
and
sbb
or
pushf
cmp
cs
add
sbb
add
aas
adc
popa
adc
and
or
test
and
add
test
xor
mov
or
add
aas
sub
rcr
inc
cmp
push
add
adc
pusha
cmp
rol
push
inc
add
push
jo
adc
mov
(bad)
loopne
pusha
enter
and
stos
mov
sbb
loopne
jno
dec
sbb
adc
addps
and
arpl
cmp
inc
adc
mov
or
lahf
or
xlat
cmp
dec
dec
add
outs
jl
or
inc
xor
rol
adc
lock
adc
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
jo
aas
jg
adc
pop
enter
adc
cmp
adc
push
mov
inc
cld
mov
and
int3
mov
sbb
gs
xchg
and
pop
pushf
push
scas
es
jp
cmp
in
xor
sbb
test
ret
push
mov
adc
or
cmp
loopne
mov
adc
jp
and
leave
cmovp
mov
les
add
call
or
cmps
dec
xchg
sub
enter
sahf
adc
xlat
ret
in
int
repnz
fist
push
add
sbb
xchg
add
mov
ret
or
add
ret
add
and
pusha
inc
xor
fs
pop
call
mov
push
(bad)
retf
xor
ret
cmp
scas
fisubr
aaa
sar
cmp
aam
mov
daa
push
sbb
icebp
dec
adc
cwde
nop
sbb
push
or
dec
test
add
adc
shl
and
dec
or
and
adc
cmps
lods
les
inc
jp
ror
add
cmp
dec
ja
in
inc
push
das
test
sahf
add
dec
pusha
inc
es
inc
and
and
lock
fld
ror
or
aam
inc
adc
shl
and
sub
sbb
(bad)
pop
rol
push
sub
and
or
mov
ins
cli
and
add
dec
sub
xchg
or
movs
inc
mov
add
dec
(bad)
adc
test
cmp
jno
or
adc
out
xchg
mov
and
xor
mov
xchg
pusha
dec
adc
sbb
cli
inc
push
add
call
add
inc
jl
push
dec
adc
ror
clc
mov
sbb
add
rcr
push
mov
dec
shl
mov
iret
inc
and
fcmovnb
adc
cmp
ud1
cmp
ins
mov
cmp
push
pop
stos
call
inc
or
adc
inc
or
dec
repnz
or
mov
test
test
pop
adc
xor
scas
and
add
sbb
add
popa
or
mov
repnz
(bad)
mov
stos
sbb
jo
xor
dec
jb
mov
sbb
or
inc
add
popa
leave
inc
mov
push
dec
leave
cmc
pop
adc
and
adc
jns
aam
sahf
xor
inc
cmps
into
loope
add
add
mov
or
sti
iret
test
cld
and
add
rcl
mov
push
cmp
or
test
aas
fs
mov
dec
xchg
and
add
jg
mov
or
pop
or
cmp
arpl
push
cmp
adc
sbb
jae
adc
xor
xor
add
das
test
fdivr
int
inc
cmp
push
pusha
add
lea
out
xchg
push
into
add
(bad)
push
mov
mov
xor
mov
inc
sbb
adc
add
popa
shl
repnz
cwde
out
nop
add
dec
bnd
lock
adc
js
adc
jmp
sbb
xor
inc
add
mov
mov
out
adc
loopne
pop
adc
push
mov
nop
and
and
int
and
and
or
pop
cmp
add
cmp
or
inc
adc
mov
data16
fdivrp
pop
adc
cmp
les
or
and
mov
add
loopne
test
adc
add
pop
jb
sub
and
loopne
xchg
inc
inc
add
xchg
or
lea
mov
push
cmp
push
mov
sbb
loopne
lea
mov
int
cmp
mov
gs
sbb
adc
loope
enter
inc
add
and
lock
test
adc
nop
int
pop
cmp
in
rol
and
push
dec
mov
test
adc
add
mov
hlt
and
add
popf
push
or
or
lock
sbb
inc
fs
ror
je
retf
mov
and
xchg
(bad)
movs
inc
inc
dec
fdiv
adc
sbb
ins
aam
add
call
dec
xor
out
push
test
xchg
into
mov
mov
dec
sbb
xchg
loopne
adc
sbb
outs
aad
js
arpl
pop
add
inc
add
ins
call
push
aaa
cwde
hlt
pop
out
inc
xor
or
or
cwde
add
push
loopne
pop
inc
shl
add
scas
jo
daa
mov
adc
rol
xchg
push
shl
shl
or
push
je
mov
add
adc
cvtps2pd
add
mov
aam
repnz
rol
in
push
jne
test
loope
pop
and
inc
xor
mov
jecxz
push
add
or
push
dec
adc
add
ins
and
push
mov
and
cmc
es
xchg
mov
pop
lock
dec
test
test
and
push
arpl
psraw
mov
inc
jecxz
mov
dec
aam
xor
sbb
enter
lock
in
pop
cdq
nop
mov
ins
or
pop
jne
pop
js
and
mov
jl
inc
sub
adc
add
(bad)
cmc
push
and
test
xor
or
call
add
or
or
mov
mov
inc
mov
add
ds
inc
add
adc
test
test
dec
or
aas
and
mov
add
sbb
xchg
pop
xor
or
or
pop
js
adc
loop
hlt
mov
cmp
icebp
mov
retf
add
daa
cmp
adc
mov
jmp
stos
xor
xor
or
inc
and
ror
out
(bad)
(bad)
xor
add
sbb
mov
and
dec
popa
leave
or
nop
out
ret
sub
and
dec
add
call
mov
pusha
lock
add
nop
add
adc
add
loopne
add
inc
add
sub
adc
sbb
ror
dec
add
jns
mov
jecxz
cdq
add
xor
xchg
add
add
je
adc
inc
add
pop
repz
jb
add
pop
out
jns
inc
(bad)
pop
pusha
sbb
add
adc
or
add
lock
push
popf
adc
jo
cmp
pop
dec
popa
inc
cdq
and
adc
add
rol
add
rol
pop
mov
arpl
sahf
nop
sub
xor
push
sbb
and
sub
loopne
dec
nop
and
or
push
xchg
std
and
pop
repz
pop
clc
xor
and
inc
mov
or
xor
sbb
pusha
add
ins
jno
je
(bad)
test
addr16
xchg
sbb
pop
push
or
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
jo
cwde
inc
add
mov
mov
ins
mov
mov
call
sbb
enter
and
call
or
mov
dec
imul
(bad)
mov
xor
inc
adc
fiadd
not
retf
xchg
mov
push
mov
fimul
and
add
clc
ret
dec
mov
inc
lds
pop
movs
dec
icebp
sub
or
mov
movs
adc
sbb
inc
xor
and
popf
mov
nop
mov
cld
(bad)
inc
rcl
xchg
daa
outs
pop
mov
or
shufps
mov
adc
pop
imul
ret
adc
in
and
push
adc
inc
call
shl
stos
add
or
push
retf
arpl
test
cmps
movlps
test
push
mov
mov
xor
test
xchg
pop
push
mov
adc
push
ret
clc
ret
inc
pusha
mov
test
lock
jnp
or
mov
inc
es
in
rol
inc
dec
push
mov
or
ss
dec
push
les
push
test
test
inc
inc
jnp
xchg
loopne
mov
jo
sub
cld
repz
mov
inc
adc
les
and
mov
(bad)
js
add
inc
cmp
or
sub
shl
pushf
cmc
ror
mov
pop
sbb
inc
or
mov
icebp
(bad)
sub
mov
inc
or
push
xor
add
push
add
adc
xor
xchg
loope
outs
or
push
fldenv
push
mov
test
xchg
inc
mov
mov
(bad)
mov
es
cmp
call
mov
mov
stc
push
or
xor
cmp
push
mov
sbb
mov
jg
inc
mov
mov
inc
test
push
bound
or
xor
or
test
popa
les
stos
(bad)
pusha
fiadd
mov
addr16
push
add
push
(bad)
ror
xchg
adc
cmps
cmp
push
inc
es
movs
sbb
ins
cmp
sub
or
test
sbb
ret
sbb
add
add
add
inc
cld
inc
shl
dec
inc
inc
cmp
and
ret
inc
adc
sub
and
pusha
leave
or
cdq
sbb
lods
movs
mov
out
dec
adc
sbb
or
call
into
mov
dec
jge
add
inc
sbb
or
pop
(bad)
iret
sbb
lds
dec
dec
nop
add
xchg
movs
xor
and
fs
xchg
cld
add
fsub
jmp
add
pop
sub
xchg
and
mov
adc
fs
call
sub
scas
cs
daa
fnstsw
add
add
loopne
add
or
cvtps2pi
mov
fs
test
cmp
xchg
aas
das
fs
add
int
aad
(bad)
les
test
sbb
and
or
or
lea
lds
rdtsc
add
or
or
push
lods
lds
scas
adc
stos
mov
or
add
dec
push
mov
push
mov
and
mov
mov
mov
push
fadd
push
adc
lock
add
jo
pop
stc
adc
pop
into
and
push
pop
loope
inc
pop
add
imul
add
push
out
pop
or
enter
push
or
stc
add
and
loope
gs
rol
sub
mov
pop
pop
inc
add
add
loope
ja
xor
inc
sub
adc
or
inc
or
cmp
sbb
or
pop
rcl
cmps
add
mov
sbb
push
ret
aaa
or
add
add
retf
jo
add
sub
inc
and
sub
and
xchg
add
and
dec
mov
adc
add
and
xor
sub
sar
nop
adc
xchg
xchg
dec
mov
add
loopne
mov
test
xor
aas
inc
xor
das
test
repz
add
xchg
adc
or
loopne
add
or
or
or
inc
clc
loope
das
pusha
(bad)
mov
mov
(bad)
and
xor
add
mov
and
sbb
mov
adc
cmp
pop
dec
xchg
mov
add
clc
rcr
leave
iret
xchg
inc
adc
jle
nop
mov
xchg
add
nop
adc
inc
push
adc
movs
add
dec
imul
pusha
mov
fiadd
add
inc
push
inc
mov
mov
std
jmp
xor
push
jbe
sbb
mov
add
or
add
test
or
cdq
rol
add
pop
fst
or
lds
and
or
pop
cmc
jp
sub
sbb
add
cs
and
sbb
nop
or
and
mov
sub
rol
cmc
scas
push
clc
test
sti
(bad)
dec
mov
add
clc
lock
push
and
sbb
adc
push
xchg
mov
retf
(bad)
(bad)
sbb
call
(bad)
jno
sbb
jo
pop
jmp
pop
es
xchg
pop
(bad)
mov
add
jae
inc
or
pop
imul
ds
sbb
mov
sbb
adc
dec
adc
sbb
and
mov
shr
push
fdivrp
inc
sbb
into
add
mov
sbb
push
mov
and
test
aas
inc
rol
push
pop
add
mov
ja
ret
std
out
ins
das
xor
(bad)
pop
inc
push
es
les
add
outs
sbb
sahf
lock
sub
add
adc
jmp
ins
rol
test
mov
mov
or
add
pop
or
jno
sbb
loopne
mov
add
mov
jl
stc
mov
or
repnz
pop
mov
sbb
loopne
daa
adc
popa
add
jne
add
jo
or
sbb
inc
mov
mov
iret
arpl
sub
cld
addr16
sbb
or
les
mov
inc
lock
jo
inc
out
mov
mov
mov
push
frstor
or
int3
data16
lahf
nop
test
add
mov
add
or
and
inc
and
push
pop
xor
shr
arpl
shr
jne
adc
js
aas
add
mov
inc
and
jge
and
jne
mov
hlt
jmp
fld
xor
aad
dec
add
(bad)
pop
inc
sbb
test
mov
ror
or
add
loope
ror
jp
rcr
push
fisub
xor
mov
imul
sbb
lea
ret
inc
rcr
jl
push
and
fdivr
(bad)
inc
xchg
inc
adc
sbb
xor
jge
inc
xor
fs
mov
add
mov
pop
out
add
sbb
inc
add
mov
add
sbb
bsr
or
mov
and
sbb
or
pushf
cmp
cs
add
sbb
add
aas
adc
popa
adc
and
or
test
and
add
test
xor
mov
or
add
aas
sub
rcr
inc
cmp
push
add
adc
pusha
cmp
rol
push
inc
add
push
jo
adc
mov
(bad)
loopne
pusha
enter
and
stos
mov
sbb
loopne
jno
dec
sbb
adc
addps
and
arpl
cmp
inc
adc
mov
or
lahf
or
xlat
cmp
dec
dec
add
outs
jl
or
inc
xor
rol
adc
lock
adc
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
jo
aas
jg
adc
pop
enter
adc
cmp
adc
push
mov
inc
cld
mov
and
int3
mov
sbb
gs
xchg
and
pop
pushf
push
scas
es
jp
cmp
in
xor
sbb
test
ret
push
mov
adc
or
cmp
loopne
mov
adc
jp
and
leave
cmovp
mov
les
add
call
or
cmps
dec
xchg
sub
enter
sahf
adc
xlat
ret
in
int
repnz
fist
push
add
sbb
xchg
add
mov
ret
or
add
ret
add
and
pusha
inc
xor
fs
pop
call
mov
push
(bad)
retf
xor
ret
cmp
scas
fisubr
aaa
sar
cmp
aam
mov
daa
push
sbb
icebp
dec
adc
cwde
nop
sbb
push
or
dec
test
add
adc
shl
and
dec
or
and
adc
cmps
lods
les
inc
jp
ror
add
cmp
dec
ja
in
inc
push
das
test
sahf
add
dec
pusha
inc
es
inc
and
and
lock
fld
ror
or
aam
inc
adc
shl
and
sub
sbb
(bad)
pop
rol
push
sub
and
or
mov
ins
cli
and
add
dec
sub
xchg
or
movs
inc
mov
add
dec
(bad)
adc
test
cmp
jno
or
adc
out
xchg
mov
and
xor
mov
xchg
pusha
dec
adc
sbb
cli
inc
push
add
call
add
inc
jl
push
dec
adc
ror
clc
mov
sbb
add
rcr
push
mov
dec
shl
mov
iret
inc
and
fcmovnb
adc
cmp
ud1
cmp
ins
mov
cmp
push
pop
stos
call
inc
or
adc
inc
or
dec
repnz
or
mov
test
test
pop
adc
xor
scas
and
add
sbb
add
popa
or
mov
repnz
(bad)
mov
stos
sbb
jo
xor
dec
jb
mov
sbb
or
inc
add
popa
leave
inc
mov
push
dec
leave
cmc
pop
adc
and
adc
jns
aam
sahf
xor
inc
cmps
into
loope
add
add
mov
or
sti
iret
test
cld
and
add
rcl
mov
push
cmp
or
test
aas
fs
mov
dec
xchg
and
add
jg
mov
or
pop
or
cmp
arpl
push
cmp
adc
sbb
jae
adc
xor
xor
add
das
test
fdivr
int
inc
cmp
push
pusha
add
lea
out
xchg
push
into
add
(bad)
push
mov
mov
xor
mov
inc
sbb
adc
add
popa
shl
repnz
cwde
out
nop
add
dec
bnd
lock
adc
js
adc
jmp
sbb
xor
inc
add
mov
mov
out
adc
loopne
pop
adc
push
mov
nop
and
and
int
and
and
or
pop
cmp
add
cmp
or
inc
adc
mov
data16
fdivrp
pop
adc
cmp
les
or
and
mov
add
loopne
test
adc
add
pop
jb
sub
and
loopne
xchg
inc
inc
add
xchg
or
lea
mov
push
cmp
push
mov
sbb
loopne
lea
mov
int
cmp
mov
gs
sbb
adc
loope
enter
inc
add
and
lock
test
adc
nop
int
pop
cmp
in
rol
and
push
dec
mov
test
adc
add
mov
hlt
and
add
popf
push
or
or
lock
sbb
inc
fs
ror
je
retf
mov
and
xchg
(bad)
movs
inc
inc
dec
fdiv
adc
sbb
ins
aam
add
call
dec
xor
out
push
test
xchg
into
mov
mov
dec
sbb
xchg
loopne
adc
sbb
outs
aad
js
arpl
pop
add
inc
add
ins
call
push
aaa
cwde
hlt
pop
out
inc
xor
or
or
cwde
add
push
loopne
pop
inc
shl
add
scas
jo
daa
mov
adc
rol
xchg
push
shl
shl
or
push
je
mov
add
adc
cvtps2pd
add
mov
aam
repnz
rol
in
push
jne
test
loope
pop
and
inc
xor
mov
jecxz
push
add
or
push
dec
adc
add
ins
and
push
mov
and
cmc
es
xchg
mov
pop
lock
dec
test
test
and
push
arpl
psraw
mov
inc
jecxz
mov
dec
aam
xor
sbb
enter
lock
in
pop
cdq
nop
mov
ins
or
pop
jne
pop
js
and
mov
jl
inc
sub
adc
add
(bad)
cmc
push
and
test
xor
or
call
add
or
or
mov
mov
inc
mov
add
ds
inc
add
adc
test
test
dec
or
aas
and
mov
add
sbb
xchg
pop
xor
or
or
pop
js
adc
loop
hlt
mov
cmp
icebp
mov
retf
add
daa
cmp
adc
mov
jmp
stos
xor
xor
or
inc
and
ror
out
(bad)
(bad)
xor
add
sbb
mov
and
dec
popa
leave
or
nop
out
ret
sub
and
dec
add
call
mov
pusha
lock
add
nop
add
adc
add
loopne
add
inc
add
sub
adc
sbb
ror
dec
add
jns
mov
jecxz
cdq
add
xor
xchg
add
add
je
adc
inc
add
pop
repz
jb
add
pop
out
jns
inc
(bad)
pop
pusha
sbb
add
adc
or
add
lock
push
popf
adc
jo
cmp
pop
dec
popa
inc
cdq
and
adc
add
rol
add
rol
pop
mov
arpl
sahf
nop
sub
xor
push
sbb
and
sub
loopne
dec
nop
and
or
push
xchg
std
and
pop
repz
pop
clc
xor
and
inc
mov
or
xor
sbb
pusha
add
ins
jno
je
(bad)
test
addr16
xchg
sbb
pop
push
or
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
jo
cwde
inc
add
mov
mov
ins
mov
mov
call
sbb
enter
and
call
or
mov
dec
imul
(bad)
mov
xor
inc
adc
fiadd
not
retf
xchg
mov
push
mov
fimul
and
add
clc
ret
dec
mov
inc
lds
pop
movs
dec
icebp
sub
or
mov
movs
adc
sbb
inc
xor
and
popf
mov
nop
mov
cld
(bad)
inc
rcl
xchg
daa
outs
pop
mov
or
shufps
mov
adc
pop
imul
ret
adc
in
and
push
adc
inc
call
shl
stos
add
or
push
retf
arpl
test
cmps
movlps
test
push
mov
mov
xor
test
xchg
pop
push
mov
adc
push
ret
clc
ret
inc
pusha
mov
test
lock
jnp
or
mov
inc
es
in
rol
inc
dec
push
mov
or
ss
dec
push
les
push
test
test
inc
inc
jnp
xchg
loopne
mov
jo
sub
cld
repz
mov
inc
adc
les
and
mov
(bad)
js
add
inc
cmp
or
sub
shl
pushf
cmc
ror
mov
pop
sbb
inc
or
mov
icebp
(bad)
sub
mov
inc
or
push
xor
add
push
add
adc
xor
xchg
loope
outs
or
push
fldenv
push
mov
test
xchg
inc
mov
mov
(bad)
mov
es
cmp
call
mov
mov
stc
push
or
xor
cmp
push
mov
sbb
mov
jg
inc
mov
mov
inc
test
push
bound
or
xor
or
test
popa
les
stos
(bad)
pusha
fiadd
mov
addr16
push
add
push
(bad)
ror
xchg
adc
cmps
cmp
push
inc
es
movs
sbb
ins
cmp
sub
or
test
sbb
ret
sbb
add
add
add
inc
cld
inc
shl
dec
inc
inc
cmp
and
ret
inc
adc
sub
and
pusha
leave
or
cdq
sbb
lods
movs
mov
out
dec
adc
sbb
or
call
into
mov
dec
jge
add
inc
sbb
or
pop
(bad)
iret
sbb
lds
dec
dec
nop
add
xchg
movs
xor
and
fs
xchg
cld
add
fsub
jmp
add
pop
sub
xchg
and
mov
adc
fs
call
sub
scas
cs
daa
fnstsw
add
add
loopne
add
or
cvtps2pi
mov
fs
test
cmp
xchg
aas
das
fs
add
int
aad
(bad)
les
test
sbb
and
or
or
lea
lds
rdtsc
add
or
or
push
lods
lds
scas
adc
stos
mov
or
add
dec
push
mov
push
mov
and
mov
mov
mov
push
fadd
push
adc
lock
add
jo
pop
stc
adc
pop
into
and
push
pop
loope
inc
pop
add
imul
add
push
out
pop
or
enter
push
or
stc
add
and
loope
gs
rol
sub
mov
pop
pop
inc
add
add
loope
ja
xor
inc
sub
adc
or
inc
or
cmp
sbb
or
pop
rcl
cmps
add
mov
sbb
push
ret
aaa
or
add
add
retf
jo
add
sub
inc
and
sub
and
xchg
add
and
dec
mov
adc
add
and
xor
sub
sar
nop
adc
xchg
xchg
dec
mov
add
loopne
mov
test
xor
aas
inc
xor
das
test
repz
add
xchg
adc
or
loopne
add
or
or
or
inc
clc
loope
das
pusha
(bad)
mov
mov
(bad)
and
xor
add
mov
and
sbb
mov
adc
cmp
pop
dec
xchg
mov
add
clc
rcr
leave
iret
xchg
inc
adc
jle
nop
mov
xchg
add
nop
adc
inc
push
adc
movs
add
dec
imul
pusha
mov
fiadd
add
inc
push
inc
mov
mov
std
jmp
xor
push
jbe
sbb
mov
add
or
add
test
or
cdq
rol
add
pop
fst
or
lds
and
or
pop
cmc
jp
sub
sbb
add
cs
and
sbb
nop
or
and
mov
sub
rol
cmc
scas
push
clc
test
sti
(bad)
dec
mov
add
clc
lock
push
and
sbb
adc
push
xchg
mov
retf
(bad)
(bad)
sbb
call
(bad)
jno
sbb
jo
pop
jmp
pop
es
xchg
pop
(bad)
mov
add
jae
inc
or
pop
imul
ds
sbb
mov
sbb
adc
dec
adc
sbb
and
mov
shr
push
fdivrp
inc
sbb
into
add
mov
sbb
push
mov
and
test
aas
inc
rol
push
pop
add
mov
ja
ret
std
out
ins
das
xor
(bad)
pop
inc
push
es
les
add
outs
sbb
sahf
lock
sub
add
adc
jmp
ins
rol
test
mov
mov
or
add
pop
or
jno
sbb
loopne
mov
add
mov
jl
stc
mov
or
repnz
pop
mov
sbb
loopne
daa
adc
popa
add
jne
add
jo
or
sbb
inc
mov
mov
iret
arpl
sub
cld
addr16
sbb
or
les
mov
inc
lock
jo
inc
out
mov
mov
mov
push
frstor
or
int3
data16
lahf
nop
test
add
mov
add
or
and
inc
and
push
pop
xor
shr
arpl
shr
jne
adc
js
aas
add
mov
inc
and
jge
and
jne
mov
hlt
jmp
fld
xor
aad
dec
add
(bad)
pop
inc
sbb
test
mov
ror
or
add
loope
ror
jp
rcr
push
fisub
xor
mov
imul
sbb
lea
ret
inc
rcr
jl
push
and
fdivr
(bad)
inc
xchg
inc
adc
sbb
xor
jge
inc
xor
fs
mov
add
mov
pop
out
add
sbb
inc
add
mov
add
sbb
bsr
or
mov
and
sbb
or
pushf
cmp
cs
add
sbb
add
aas
adc
popa
adc
and
or
test
and
add
test
xor
mov
or
add
aas
sub
rcr
inc
cmp
push
add
adc
pusha
cmp
rol
push
inc
add
push
jo
adc
mov
(bad)
loopne
pusha
enter
and
stos
mov
sbb
loopne
jno
dec
sbb
adc
addps
and
arpl
cmp
inc
adc
mov
or
lahf
or
xlat
cmp
dec
dec
add
outs
jl
or
inc
xor
rol
adc
lock
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
jo
aas
jg
adc
pop
enter
adc
cmp
adc
push
mov
inc
cld
mov
and
int3
mov
sbb
gs
xchg
and
(bad)
pushf
pop
adc
aad
sub
ret
popf
adc
call
and
mov
pop
or
inc
cvtps2pd
mov
adc
sbb
bswap
or
(bad)
in
mov
push
fsub
cdq
jb
(bad)
push
add
xlat
push
mov
dec
int3
jp
add
xor
into
sub
push
in
jo
jmp
push
pop
mov
and
cmp
clc
mov
adc
lahf
pop
and
fwait
(bad)
mov
xchg
mov
sub
jmp
sub
aam
dec
fwait
pop
ffree
add
xor
(bad)
cli
mov
loop
aam
dec
pop
cmc
jmp
(bad)
mov
fmul
push
dec
push
dec
push
mov
xchg
add
xchg
(bad)
or
mov
add
xor
add
push
inc
dec
add
test
xchg
and
dec
icebp
adc
test
sbb
inc
add
push
gs
loope
(bad)
push
push
enter
lock
add
hlt
repnz
add
sbb
add
cmp
rcr
inc
mov
sbb
loopne
outs
mov
jo
add
ret
cs
inc
adc
cmp
adc
sbb
sahf
mov
nop
add
es
jbe
sbb
sbb
lock
push
and
cdq
les
popa
add
or
arpl
push
inc
mov
add
dec
test
sbb
dec
sbb
add
nop
mov
push
push
or
(bad)
and
dec
mov
jno
sahf
call
inc
or
adc
rcr
inc
adc
dec
loop
sbb
inc
jp
adc
xor
xchg
pusha
call
mov
dec
ror
sbb
and
mov
loope
or
xor
sub
add
pop
pop
adc
add
inc
(bad)
aas
inc
or
in
adc
(bad)
in
retf
scas
aas
icebp
push
inc
scas
mov
push
cmp
loope
adc
and
les
add
fmul
aam
push
mov
paddq
fwait
ret
sbb
sysenter
and
push
lods
mov
adc
lods
add
and
dec
sbb
mov
or
push
retf
cmps
add
add
inc
xchg
and
adc
or
test
add
pop
mov
inc
push
mov
sbb
mov
inc
push
pop
int3
jns
(bad)
sbb
adc
xor
test
(bad)
dec
jo
push
(bad)
mov
inc
movs
add
sbb
add
gs
loopne
arpl
or
inc
push
cdq
les
inc
adc
les
mov
icebp
inc
push
sbb
fs
add
sub
test
sar
pop
adc
add
add
push
int
popa
inc
push
(bad)
inc
outs
dec
adc
pop
add
add
pop
xor
xchg
and
add
mov
(bad)
aaa
(bad)
jmp
rcr
xor
jo
cmp
pop
pusha
mov
inc
call
ret
add
push
adc
inc
and
dec
enter
adc
or
ret
call
and
js
inc
xor
shl
test
or
test
xchg
or
sahf
push
es
test
vsqrtps
jg
adc
call
loop
and
cmp
or
or
adc
adc
jg
inc
inc
add
iret
jns
call
sub
leave
add
sbb
call
mov
or
add
add
adc
push
or
mov
add
and
shl
mov
cwde
ror
pusha
mov
and
mov
in
ins
ror
sbb
hlt
in
or
cmps
xchg
or
repnz
dec
movs
xor
bound
jg
mov
add
inc
add
sbb
pop
push
xor
ja
les
xor
xchg
rcr
or
push
and
push
enter
test
pop
add
scas
loopne
icebp
sub
add
outs
add
xor
pop
lea
pop
aam
add
aaa
adc
pop
adc
mov
popf
out
add
loopne
aas
push
pop
inc
and
gs
stos
nop
add
inc
add
mov
rcl
and
cmp
adc
adc
push
and
es
add
cmp
pop
xor
lock
bound
popa
mov
add
mov
movs
in
inc
xor
cmp
jl
or
adc
loopne
cdq
pushf
loope
cmp
sbb
push
add
dec
ror
lea
sbb
mov
inc
loope
adc
inc
inc
mov
mov
pusha
mov
loopne
adc
sub
mov
bound
fsubrp
test
mov
aad
frstor
mov
xor
pop
jo
and
loope
stos
daa
jo
mov
xlat
imul
sahf
and
popa
inc
mov
dec
movs
aad
loope
add
xor
adc
es
mov
sbb
mov
push
(bad)
adc
mov
mov
inc
stos
enter
sub
add
outs
fist
push
rol
dec
xor
and
inc
adc
nop
sub
mov
sbb
leave
punpckldq
mov
inc
sub
pop
and
icebp
add
and
leave
jl
xchg
and
mov
stos
in
clc
push
es
or
imul
mov
sub
aaa
sub
repnz
pop
mov
pop
repz
pop
(bad)
out
adc
adc
cmp
adc
adc
rol
rol
or
lgdtd
sbb
add
add
add
popa
xor
sbb
cmp
add
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
call
or
dec
cmps
push
push
fsubr
mov
ins
fcmove
mov
cmps
add
aad
(bad)
in
add
jmp
hlt
stc
dec
xchg
nop
lea
cmc
(bad)
cld
sub
js
cmps
js
(bad)
fld
(bad)
inc
(bad)
in
stc
out
xchg
cld
jmp
les
out
add
mov
jmp
add
mov
movs
bound
(bad)
rol
repz
cld
fldcw
loopne
cld
call
loope
(bad)
pop
cli
les
add
aad
(bad)
cli
add
dec
mov
mov
imul
lea
out
jmp
dec
add
(bad)
(bad)
lods
jae
jmp
mov
or
ja
cld
fidivr
(bad)
xchg
jnp
add
out
inc
stc
lods
add
cdq
add
rol
clc
cmp
stc
jp
mov
(bad)
stc
(bad)
(bad)
jmp
(bad)
out
jns
mov
stc
test
(bad)
repnz
hlt
jmp
jmp
add
test
mov
sbb
lea
leave
xor
cmc
sti
mov
add
mov
mov
(bad)
(bad)
sbb
call
xor
cli
dec
enter
ror
aam
xchg
test
sbb
mov
std
test
in
hlt
(bad)
icebp
lock
mov
mov
test
(bad)
mov
xchg
pop
adc
inc
mov
enter
test
loop
(bad)
in
cld
cld
cld
enter
(bad)
out
inc
inc
aas
clc
aad
mov
mov
cld
xlat
(bad)
fisttp
in
or
mov
push
adc
repz
rcl
add
cmps
add
(bad)
stc
idiv
push
mov
jmp
int3
cli
loopne
(bad)
fld
clc
stos
add
(bad)
(bad)
in
int
idiv
std
clc
clc
clc
(bad)
loop
sti
ret
add
les
call
add
jmp
bnd
(bad)
std
(bad)
repz
(bad)
cli
add
sub
add
int
clc
les
lahf
lahf
lahf
jmp
add
stos
push
ror
iret
cmc
rol
std
arpl
mov
popa
std
out
mov
add
aam
sti
int3
add
rcr
out
and
sti
bnd
mov
mov
dec
icebp
fiadd
retf
mov
icebp
mov
in
jmp
(bad)
fiadd
cld
std
std
(bad)
cld
std
cmc
div
clc
aam
fst
mov
nop
mov
int3
push
call
or
test
or
mov
clc
stc
add
push
in
ud0
mov
pop
stc
fiadd
sti
mov
clc
(bad)
add
ret
lds
pop
sbb
pop
mov
add
into
fptan
(bad)
cld
out
cld
mov
push
mov
mov
std
std
in
loopne
lds
jb
add
gs
cld
sti
stc
clc
fiadd
ret
mov
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
inc
std
or
mov
rol
mov
ret
xchg
and
dec
icebp
dec
sbb
xor
and
lds
popa
ret
sbb
push
jb
popa
(bad)
rol
or
sub
pop
retf
test
push
dec
dec
ret
mov
ds
nop
(bad)
mov
adc
xchg
xor
(bad)
adc
xor
popa
dec
test
inc
enter
sub
dec
cmp
ror
fstp
rcr
push
loope
les
mov
es
cwde
mov
adc
dec
popf
popa
outs
out
or
pusha
les
dec
ja
mov
scas
sub
adc
add
add
mov
jmp
push
xor
pop
xlat
test
adc
into
pop
mov
retf
addr16
pop
mov
fisub
push
ds
frstor
ds
mov
inc
je
arpl
lahf
or
out
mov
(bad)
jecxz
sar
pop
int
test
push
sbb
mov
dec
dec
or
je
and
xor
(bad)
cwde
icebp
sbb
pop
and
mov
add
popf
sbb
or
and
push
mov
ret
movs
cmps
fdivr
mov
inc
and
sub
ror
xchg
xchg
adc
lds
or
lds
sub
and
xor
mov
xor
cmp
jo
sub
test
jne
int3
or
sbb
dec
sbb
mov
dec
sub
xchg
pop
pop
jecxz
ds
xchg
mov
or
sahf
lock
push
into
push
dec
pop
pop
clc
inc
rol
cs
push
lds
push
test
or
imul
xor
mov
sbb
xor
inc
cmp
adc
add
or
sbb
pop
outs
jge
xor
popf
test
push
lea
push
dec
mov
add
mov
cwde
out
sub
mov
(bad)
or
mov
inc
adc
xor
add
xchg
inc
jno
jb
(bad)
jno
sbb
push
rcr
or
sub
arpl
push
push
sub
adc
add
aas
pop
loopne
aas
imul
inc
rol
mov
add
mov
imul
(bad)
sbb
stc
and
test
or
add
(bad)
sbb
icebp
(bad)
popa
push
mov
pop
mov
sti
add
ja
add
push
inc
inc
adc
retf
cld
outs
int3
xor
jecxz
outs
and
or
ret
mov
inc
or
lds
or
mov
je
sbb
xor
or
jl
jmp
adc
or
fsub
mov
outs
mov
adc
pop
add
aaa
arpl
shr
sub
pop
bound
xor
push
add
add
and
and
into
sti
aaa
int
test
loope
adc
cmp
add
adc
stos
inc
mov
retf
sbb
push
mov
ins
adc
mov
inc
hlt
push
ror
add
pop
ret
test
mov
sar
into
push
dec
mov
sbb
add
lds
cmp
mov
sar
stc
mov
cs
test
mov
sub
mov
pop
lock
iret
add
mov
loope
shl
mov
movs
sahf
cmc
dec
and
jmp
xor
or
mov
or
mov
add
cmpxchg
sahf
out
or
push
mov
push
or
mov
add
dec
inc
pop
out
lock
clc
popa
adc
or
ret
push
ss
jg
jmp
mov
add
lds
add
test
add
nop
add
rcr
pop
pop
nop
mov
jo
int3
xchg
sbb
or
xor
inc
cmps
xor
jp
xchg
push
aad
sbb
add
xchg
cwde
and
bound
adc
add
mov
inc
pop
dec
cwde
rcl
and
into
or
xor
inc
adc
adc
(bad)
call
mov
(bad)
lds
inc
and
mov
fdiv
add
or
or
or
and
sbb
cwde
popf
or
mov
lds
cmp
clc
lds
dec
and
icebp
lds
movs
and
jo
inc
outs
jle
xchg
pop
jmp
sub
fdivr
xchg
adc
sahf
pop
jo
push
mov
xchg
lahf
mov
and
jmp
xchg
jns
push
pop
and
sbb
adc
mov
add
adc
xchg
adc
movs
pusha
cmp
into
shr
dec
enter
or
sbb
adc
and
cmp
add
or
add
add
pop
mov
add
add
inc
inc
cmp
call
or
and
dec
dec
outs
add
pusha
enter
xchg
mov
pusha
add
imul
stos
cmp
lock
inc
rol
mov
mov
int
add
shl
adc
sub
mov
(bad)
push
xchg
mov
fcomp
mov
inc
adc
mov
xchg
adc
popf
xor
leave
pop
in
lods
or
ret
ds
mov
loopne
jno
push
leave
fadd
sbb
rcl
xchg
fs
add
adc
add
xor
test
mov
push
and
inc
ss
add
loopne
add
outs
jle
lock
pusha
inc
adc
adc
add
stc
add
or
inc
sub
add
push
add
add
inc
dec
sbb
push
loopne
or
es
fadd
int3
popa
rol
arpl
mov
xor
ret
and
xchg
mov
pusha
xchg
jno
mov
jl
inc
and
fs
into
pop
xchg
inc
and
adc
xor
jne
and
adc
sbb
and
mov
daa
rcl
or
adc
jecxz
inc
push
sbb
sbb
scas
sbb
aam
test
mov
xor
sti
(bad)
outs
pop
sub
push
inc
mov
(bad)
xor
or
add
jle
fsub
pop
adc
adc
cwde
popa
and
inc
inc
mov
scas
sbb
das
(bad)
jecxz
inc
add
lods
mov
std
stc
xlat
sub
aas
sbb
jp
test
mov
into
aas
pop
retf
xor
add
xor
stc
daa
movs
and
inc
jbe
lahf
mov
inc
adc
iret
mov
push
sub
add
loopne
or
dec
fist
outs
cmc
(bad)
sub
sub
push
and
stos
xor
xchg
aam
inc
cmp
or
push
lea
sub
xor
xchg
or
add
call
xchg
std
(bad)
dec
cmp
sbb
arpl
pusha
hlt
pop
inc
or
pop
pusha
inc
sbb
ror
(bad)
rol
sbb
jecxz
ds
mov
push
or
mov
inc
int
mov
adc
sbb
add
pusha
and
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rcl
lock
mov
cld
daa
inc
add
out
fcom
mov
dec
js
dec
ret
addr16
shr
pop
sub
jecxz
in
iret
nop
fs
or
and
jmp
enter
ret
sbb
sbb
retf
add
loopne
sub
sub
cld
inc
adc
push
loop
cwde
cwde
rcl
(bad)
shl
push
fnstcw
cmp
cwde
popa
ins
push
mov
ror
adc
push
mov
lods
mov
pop
mov
gs
pusha
sahf
dec
sahf
ins
(bad)
clc
xlat
mov
xchg
leave
call
js
ins
sbb
xlat
add
pop
in
imul
dec
inc
jmp
dec
call
jo
sbb
fsub
push
ds
outs
jo
jecxz
pop
ror
push
in
xor
cmp
xchg
xchg
out
rol
push
add
in
xor
std
aas
jmp
leave
arpl
icebp
jl
sti
cmp
fisttp
pushf
into
fistp
(bad)
popf
adc
inc
inc
or
inc
add
or
daa
out
addr16
push
add
mov
movs
(bad)
dec
push
adc
adc
(bad)
sub
mov
push
xor
jne
movs
loopne
not
inc
nop
test
in
jecxz
cmp
call
sub
nop
inc
push
imul
(bad)
push
daa
pop
je
sbb
nop
or
mov
shl
loopne
adc
sbb
push
ror
ins
popa
add
xchg
cld
ret
pop
mov
xor
adc
xchg
and
pop
or
mov
mov
or
loop
mov
pusha
xor
cmp
aas
call
sbb
inc
loopne
add
cld
adc
test
clc
and
int
mov
inc
or
mov
or
xor
inc
mov
pop
jl
inc
sbb
xor
or
push
movsldup
sub
xchg
sub
js
push
(bad)
xchg
inc
sub
xchg
cld
jae
dec
in
lods
repnz
retf
sub
dec
jnp
jnp
dec
add
sub
push
ins
dec
and
aas
aad
rol
add
push
xor
int
jno
repnz
and
or
xor
ret
lock
rol
nop
cmp
jge
adc
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
xor
push
lds
(bad)
or
xor
jo
or
sbb
xor
bound
cmp
pop
mov
mov
pop
rcr
push
mov
xor
inc
dec
nop
les
adc
fmul
sbb
mov
sbb
ss
sbb
jl
dec
loop
sbb
push
pop
in
fdiv
mov
pushf
or
or
loopne
xchg
(bad)
dec
shl
rol
cmp
xor
xor
mov
ror
test
pusha
add
mov
dec
jb
pop
mov
jecxz
or
lea
or
jmp
mov
fs
or
cmp
outs
jp
jmp
je
leave
inc
mov
cmp
dec
neg
cmp
lods
xor
sbb
pusha
(bad)
jp
fstp
clc
clc
xor
shl
adc
inc
rcl
mov
ja
mov
xchg
test
call
mov
dec
push
mov
push
daa
pushf
pop
out
test
inc
xor
sbb
or
aas
outs
rcl
add
xchg
enter
lock
and
(bad)
push
aaa
(bad)
aas
pinsrw
xor
adc
and
inc
mov
xchg
add
sub
mov
mov
add
(bad)
adc
loope
ret
adc
jmp
add
push
ds
push
add
es
push
test
hlt
add
pop
inc
xchg
pop
lock
dec
jp
nop
xor
push
inc
daa
dec
jns
cmp
pop
push
in
js
sub
jmp
retf
mov
cdq
daa
mov
adc
cwde
aam
push
pop
push
xchg
xchg
dec
(bad)
jb
repnz
sbb
adc
or
sbb
and
pushf
and
sub
push
jae
or
and
and
or
pop
cmp
jns
test
or
add
lock
inc
xchg
mov
or
add
fadd
add
mov
fs
int
adc
jo
or
xor
mov
je
push
call
push
(bad)
and
clc
mov
jo
sbb
shl
sbb
or
or
sbb
hlt
cmp
sbb
add
fs
aad
cmp
xchg
add
mov
push
daa
push
das
hlt
je
push
mov
stc
add
or
inc
sub
add
add
or
add
or
mov
sar
jbe
enter
cmp
pop
into
sbb
adc
test
adc
stc
dec
or
xchg
mov
mov
sbb
les
mov
loop
inc
add
loopne
mov
movs
imul
mov
pop
and
add
mov
ret
stos
xor
sbb
mov
nop
mov
mov
xchg
dec
arpl
sub
loopne
add
cmp
clc
push
mov
stc
jge
or
xor
xor
or
or
push
js
push
pop
retf
add
jge
dec
adc
sub
mov
xlat
dec
mov
sub
xor
push
or
call
les
mov
and
sbb
adc
fstp
inc
or
xchg
cmc
jmp
clc
sub
or
fadd
inc
rcr
sbb
cmps
add
call
lock
add
cmp
sbb
push
sbb
push
cmp
aaa
dec
bswap
mov
les
sbb
sbb
lds
xchg
inc
inc
and
aaa
(bad)
push
mov
lock
sar
mov
call
clc
or
or
xchg
push
nop
test
mov
test
lock
mov
xor
call
adc
and
add
dec
adc
inc
push
add
or
jecxz
mov
adc
dec
sub
lods
out
subps
jb
daa
popa
mov
push
cdq
add
xor
cwde
enter
call
repnz
sbb
loopne
aas
xchg
pop
mov
inc
cmp
mov
test
cmp
or
sbb
cld
xchg
or
repz
stos
add
es
pop
xor
inc
and
les
push
add
sbb
cmp
mov
pop
pop
sar
jecxz
add
add
add
sbb
dec
ins
inc
mov
ret
cld
repz
cmp
(bad)
or
pop
jb
repnz
es
add
mov
cld
jae
inc
leave
sbb
sbb
and
rol
add
popa
add
(bad)
cld
inc
add
mov
jo
add
jl
inc
push
push
push
jo
add
sbb
mov
pop
xor
dec
add
dec
ds
rol
nop
inc
push
call
cld
pop
cwde
or
fadd
nop
enter
sar
xor
inc
fld
inc
lods
xor
cmc
xlat
add
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
(bad)
std
jecxz
push
and
(bad)
in
fild
test
push
adc
outs
pop
(bad)
push
cwde
xor
sub
repz
sbb
ret
pop
pop
add
jl
jp
leave
pop
sqrtps
rcr
jmp
cmp
std
je
sub
loopne
stos
pop
(bad)
adc
mul
inc
cmps
cdq
sub
std
addr16
mov
add
stc
add
or
inc
sub
add
add
add
add
or
(bad)
std
ret
and
loopne
or
or
imul
pop
add
iret
fild
or
test
inc
push
sbb
in
inc
sub
xor
add
enter
pop
or
jb
rcr
lock
push
mov
aam
pusha
enter
and
je
mov
and
and
add
or
inc
sub
add
add
add
add
or
(bad)
std
jecxz
push
and
(bad)
in
fild
test
push
adc
outs
pop
(bad)
push
cwde
xor
sub
repz
sbb
ret
pop
pop
add
jl
jp
leave
pop
sqrtps
rcr
jmp
cmp
std
je
sub
loopne
stos
pop
(bad)
adc
mul
inc
cmps
cdq
sub
std
addr16
mov
add
stc
add
or
inc
sub
add
add
add
add
or
(bad)
std
ret
and
loopne
or
or
imul
pop
add
iret
fild
or
test
inc
push
sbb
in
inc
sub
xor
add
enter
pop
or
jb
rcr
lock
push
mov
aam
pusha
enter
and
je
mov
and
and
add
or
inc
sub
add
add
add
add
or
(bad)
std
jecxz
push
and
(bad)
in
fild
test
push
adc
outs
pop
(bad)
push
cwde
xor
sub
repz
sbb
ret
pop
pop
add
jl
jp
leave
pop
sqrtps
rcr
jmp
cmp
std
je
sub
loopne
stos
pop
(bad)
adc
mul
inc
cmps
cdq
sub
std
addr16
mov
add
stc
add
or
inc
sub
add
add
add
add
or
(bad)
std
ret
and
loopne
or
or
imul
pop
add
iret
fild
or
test
inc
push
sbb
in
inc
sub
xor
add
enter
pop
or
jb
rcr
lock
push
mov
aam
pusha
enter
and
je
mov
and
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
inc
or
push
rol
rol
or
lgdtd
and
add
add
add
popa
xor
sbb
cmp
add
add
add
add
inc
cmp
popa
xor
xor
idiv
add
inc
shr
cs
push
mov
and
(bad)
sub
in
or
repz
cmps
mov
int3
jmp
push
xchg
shl
shr
out
mov
sbb
std
pop
mov
dec
movs
mov
mov
push
std
std
std
mov
adc
paddusb
or
(bad)
std
push
retf
lods
daa
cmp
mov
popa
jns
sbb
out
shl
jb
nop
arpl
jmp
(bad)
and
rcr
cmc
std
mov
add
int
idiv
fistp
les
pop
clc
sti
add
push
int3
aam
pushf
mov
fdivr
pop
push
cmps
test
adc
hlt
cld
xchg
xchg
jmp
mov
cdq
mov
jmp
push
scas
fst
(bad)
add
out
aad
sbb
out
or
sub
idiv
inc
mov
adc
hlt
xor
icebp
or
dec
mov
or
icebp
or
loope
inc
arpl
ins
xchg
sbb
push
rcr
(bad)
cmps
cmps
stos
push
push
dec
(bad)
aam
ret
sbb
stc
add
ins
sub
add
in
add
stc
add
or
hlt
hlt
scas
frstor
movs
ret
or
jmp
adc
cmc
cmps
pop
je
mov
cmps
rcl
int
aad
retf
hlt
test
repnz
pop
jp
mov
stos
mov
mov
push
pop
scas
mov
in
push
cmps
leave
xor
sub
cli
mov
scas
daa
jl
daa
xchg
les
imul
shr
hlt
pop
mov
imul
in
add
or
(bad)
adc
or
jmp
adc
add
idiv
fcom
in
in
shl
adc
in
mov
mov
int
mov
or
ret
adc
push
mov
arpl
add
cli
add
xor
inc
(bad)
adc
in
out
shl
(bad)
add
in
mov
and
not
shr
mov
add
and
fidivr
mov
xchg
mov
pop
addr16
inc
cs
pop
fcos
adc
jmp
fstp
add
sbb
fdivr
add
out
mov
sahf
mov
in
imul
in
not
pop
mov
fcomp
cmp
test
aam
ret
inc
inc
pop
shr
bound
mov
mov
out
iret
iret
shl
stc
out
scas
scas
scas
loope
loope
fcom
div
mul
out
nop
fdivp
jnp
cli
outs
out
repz
dec
dec
ds
or
loop
out
out
in
ror
mov
pop
sahf
sahf
sahf
push
je
and
repz
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
imul
push
test
pop
sub
mov
adc
fnstcw
and
jge
dec
xor
jl
inc
pop
adc
cld
xchg
xor
adc
sbb
sub
and
shl
adc
inc
inc
jmp
xor
adc
pop
sub
fwait
sar
xchg
push
add
movs
mov
retf
xchg
or
out
mov
dec
pop
rcpps
mov
mov
cmp
loope
mov
sub
nop
add
outs
inc
pusha
dec
sbb
jns
movs
dec
push
rcr
mov
lock
mov
mov
jg
ins
sbb
pop
sti
mov
shl
mov
add
add
sbb
outs
aam
push
cmp
sbb
dec
dec
out
call
cs
xor
xchg
mov
push
arpl
sbb
cmps
movs
leave
jns
add
int3
and
dec
adc
inc
jp
pushf
xor
sub
add
enter
or
sub
mov
test
rcl
mov
bound
lds
xor
mov
push
add
xor
mov
ds
xchg
into
add
push
fsub
and
mov
add
push
and
lds
pop
cs
or
xchg
ret
add
adc
rcr
xor
data16
mov
pop
or
lea
add
adc
aaa
mov
add
inc
hlt
push
mov
ja
jecxz
mov
rol
adc
daa
push
repz
mov
or
sbb
add
loope
adc
xor
fimul
add
stos
daa
mov
sbb
and
aaa
mov
adc
mov
stos
add
cmp
pop
enter
ror
push
adc
adc
aas
out
mov
add
and
add
sub
stc
dec
movs
je
push
retf
xor
test
outs
mov
nop
and
cwde
(bad)
in
fsub
and
push
mov
retf
inc
sbb
daa
fadd
inc
sub
adc
leave
xor
clc
arpl
push
jae
or
call
enter
iret
inc
adc
and
or
xor
and
pusha
inc
and
minps
das
dec
call
cwde
loopne
sbb
adc
in
jae
fnsave
xchg
adc
push
retf
push
pop
enter
mov
jb
rcl
cmp
(bad)
call
shl
test
out
lock
xadd
stos
xor
clc
xor
dec
sbb
adc
enter
popf
test
inc
and
shl
in
cmp
shl
std
inc
adc
lods
push
mov
ss
xor
out
lock
fidivr
(bad)
adc
mov
or
xchg
test
retf
mov
add
push
inc
sahf
or
cmp
test
mov
or
jmp
inc
ja
pop
pop
add
add
inc
movs
add
or
rol
rol
add
mov
mov
retf
or
movs
add
add
or
add
cld
stos
aam
(bad)
std
jle
div
jge
dec
mov
fisub
xor
add
wbinvd
xchg
jo
and
(bad)
mov
sbb
inc
es
mov
ss
sbb
jo
mov
xchg
pusha
out
pop
add
mov
mov
sbb
cmp
rol
fstp
cmp
cmp
add
or
test
dec
push
je
lock
or
rol
cwde
and
push
inc
aaa
sbb
add
test
adc
sbb
or
add
sbb
fsub
push
inc
enter
ror
(bad)
mov
imul
and
add
ret
sbb
push
mov
jmp
inc
and
inc
cli
mov
or
sbb
sub
nop
nop
test
addr16
dec
mov
ror
rcl
sbb
push
mov
(bad)
xchg
cmp
test
mov
mov
dec
or
push
and
or
jb
mov
dec
add
cwde
pop
cli
mov
jbe
or
cwde
(bad)
and
and
sub
daa
sub
cdq
aas
test
add
imul
push
movs
xor
add
les
std
inc
inc
or
dec
cmp
or
sbb
push
js
add
arpl
and
and
loope
and
inc
aaa
mov
or
loope
adc
xchg
pop
jnp
dec
push
repnz
mov
xor
movs
push
nop
inc
pop
or
rcr
push
sub
push
pop
push
arpl
mov
or
loopne
or
in
mov
or
cmp
cmp
add
(bad)
mov
loopne
dec
jne
push
inc
call
xor
dec
mov
or
call
xchg
sub
ret
xor
dec
xor
(bad)
add
retf
not
daa
sub
inc
(bad)
fcom
mov
cmp
cmp
cwde
adc
or
pop
adc
aam
push
push
jmp
inc
adc
jnp
les
(bad)
jb
sub
adc
movs
or
retf
retf
loope
ins
lods
mov
shl
add
sub
sub
jns
inc
pusha
repz
(bad)
adc
or
pop
inc
add
adc
or
xchg
(bad)
call
mov
inc
rol
adc
inc
fild
dec
jne
aaa
adc
or
pop
mov
add
mov
or
xchg
push
ret
and
rcl
mov
or
add
fadd
xor
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
cmp
pop
sbb
cmps
mov
jns
mov
retf
mov
pop
mov
dec
xchg
and
dec
jbe
add
stc
jae
adc
int3
xchg
xor
pop
test
inc
mov
adc
lds
das
inc
mov
loope
test
xchg
jae
pop
mov
cwde
add
xchg
cmps
je
inc
in
test
mov
pop
jo
inc
mov
cmp
mov
rcl
jmp
nop
sub
and
or
fdivr
jns
mov
cmp
mov
bound
fldenv
cli
pop
ins
hlt
inc
jmp
mov
fwait
inc
sub
adc
mov
ret
add
xor
fwait
ja
and
movs
cli
sub
push
push
bound
nop
push
call
xchg
jno
mov
adc
cmp
dec
push
pop
mov
fmul
mov
adc
mov
push
add
test
and
sbb
sub
ud0
mov
pop
sbb
adc
push
sbb
ss
add
adc
test
lods
push
fadd
push
xchg
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
sub
or
add
or
mov
rol
mov
ret
xchg
mov
adc
mov
or
xchg
mov
inc
or
mov
mov
mov
ror
(bad)
xor
xchg
xor
sub
ret
mov
add
lock
fwait
sbb
or
mov
push
arpl
test
and
cmp
ror
and
sub
push
inc
inc
pop
jbe
push
popa
add
add
add
gs
(bad)
xchg
or
add
sysenter
add
bound
dec
jmp
pop
shl
and
jmp
mov
fidiv
pop
je
xor
in
push
lods
mov
adc
xlat
sub
and
xor
(bad)
popf
sub
jle
hlt
lock
lea
mov
add
or
test
retf
push
fist
push
jnp
test
adc
addr16
sub
in
sbb
sub
call
xor
rol
adc
sbb
and
xchg
mov
push
test
inc
(bad)
retf
adc
and
inc
inc
aas
fs
cmp
pop
inc
mov
test
push
pop
adc
mov
loopne
and
or
mov
and
and
jo
inc
add
stc
add
or
inc
sub
add
adc
pop
add
or
add
or
mov
loopne
or
addr16
pop
sbb
ret
es
mov
and
and
mul
les
or
sub
push
call
xchg
and
into
pop
(bad)
cmp
movs
adc
mov
mov
leave
xchg
or
sub
or
or
push
fdiv
jae
jo
ret
add
xchg
ret
scas
fdivr
mov
shr
and
(bad)
push
xchg
add
arpl
js
or
jo
or
dec
lock
pop
mov
pop
add
icebp
mov
sti
add
rcl
in
inc
js
mov
pop
pop
add
sub
sar
and
add
or
inc
sub
add
add
sbb
add
inc
dec
sbb
mov
rol
mov
ret
add
dec
shl
daa
jno
push
test
push
mov
inc
das
mov
test
jo
sahf
(bad)
xchg
add
push
rol
repnz
fst
adc
cmp
dec
(bad)
mov
sbb
dec
mov
jns
daa
xchg
aas
jg
pop
ds
test
lock
ret
xor
pop
mov
push
mov
pop
push
adc
mov
pop
mov
add
jp
test
add
sbb
shr
mov
or
jmp
int3
fwait
test
or
adc
push
mov
hlt
jne
pusha
mov
and
pop
mov
jmp
cwde
ret
rcl
aas
xor
ret
mov
cld
mov
retf
ss
fwait
mov
in
out
sar
dec
cmp
mov
retf
jmp
inc
and
push
mov
mov
sar
sub
or
push
pop
les
add
dec
ret
and
shr
xor
fadd
inc
xor
and
mov
inc
add
dec
es
adc
or
add
cld
and
inc
(bad)
dec
push
mov
or
add
test
and
iret
sub
jns
iret
add
and
add
or
inc
sub
add
add
add
add
stc
add
or
mov
rol
or
adc
and
rcr
and
sar
cmps
mov
ret
dec
sbb
test
stos
(bad)
loopne
test
xchg
es
es
jbe
aaa
jmp
idiv
sti
and
mov
leave
pop
and
inc
pop
xchg
or
addr16
cmps
(bad)
or
jp
mov
dec
test
shl
loopne
aam
xchg
and
adc
jmp
sar
mov
jecxz
xchg
sbb
pop
xchg
shr
adc
push
push
inc
xor
je
sub
enter
test
mov
mov
mov
out
pop
je
scas
fnstcw
je
inc
loopne
fst
ja
add
fisttp
cmp
popa
or
sub
or
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
fst
mov
cmc
leave
repz
rcr
sbb
inc
and
and
xchg
dec
ficomp
pop
jo
inc
xor
or
sbb
sbb
addr16
mov
fld
mov
push
scas
imul
fistp
and
cmp
xor
xor
loope
cmps
inc
pop
cmp
cmc
(bad)
loope
in
stos
cmp
sbb
sbb
retf
jo
leave
cmp
jmp
cmp
cmps
dec
mov
mov
je
outs
jb
jl
pop
or
shl
rcr
dec
je
pop
or
outs
push
inc
in
xchg
push
xor
or
in
je
test
js
add
jle
in
loop
and
push
and
fnstsw
or
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
and
xchg
or
dec
xchg
cmp
pop
cmp
cdq
enter
jg
cld
pop
repz
into
inc
mov
xchg
lock
mov
or
jo
cmp
cmps
push
loop
arpl
iret
xchg
leave
pusha
and
dec
cmp
mov
inc
shl
sbb
jnp
stc
mov
cmc
mov
cmp
mov
mov
or
mov
cmp
mov
in
mov
push
push
movs
dec
xor
fild
inc
out
adc
sbb
fs
test
dec
xchg
cmp
add
loope
les
adc
stc
daa
mov
clc
mov
mov
or
xchg
dec
dec
cld
sbb
sub
mov
nop
pop
hlt
xchg
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
loope
mov
adc
inc
dec
jcxz
sub
and
fdivr
das
inc
mov
and
and
(bad)
xchg
add
int
mov
and
or
sub
inc
mov
mov
jg
jne
repz
dec
pop
xchg
nop
adc
sbb
push
lahf
mov
xor
popf
cmp
dec
or
pop
and
jnp
push
mov
cs
mov
clc
or
cmp
jle
(bad)
call
int3
movs
repnz
shr
retf
sub
xor
ret
test
jb
sbb
pushf
and
rol
div
sub
and
loopne
mov
pop
bound
stos
and
mov
xor
rcr
push
fisttp
push
mov
inc
or
add
stc
aaa
iret
cmp
pop
adc
push
xor
xor
test
pop
cmp
ret
sbb
adc
loope
leave
inc
call
call
rcl
mov
shl
mov
adc
inc
sbb
ss
stos
cld
mov
repz
pop
gs
nop
and
jae
and
adc
aas
retf
adc
push
jge
mov
and
int
add
inc
or
test
inc
xor
jae
or
mov
pop
cmp
hlt
ret
andnps
add
and
dec
sbb
add
mov
xchg
add
call
pop
mov
add
inc
stos
in
and
push
pushf
push
loope
inc
ins
and
shr
(bad)
test
(bad)
outs
test
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
iret
sbb
or
and
sub
xchg
jg
cld
aad
xchg
mov
lds
jne
dec
cmp
ror
sbb
mov
aas
add
mov
xchg
add
add
cmp
(bad)
xchg
xchg
test
in
or
movs
rol
add
mov
jo
aam
rol
stc
xor
(bad)
(bad)
xor
out
(bad)
cmp
xor
xor
popa
fnsave
xchg
ret
cmc
in
cmp
and
inc
jecxz
test
scas
aad
clc
iret
xchg
rol
mov
xchg
mov
sub
cli
dec
ficom
(bad)
je
or
std
inc
inc
lock
ins
and
inc
and
pop
sbb
mov
imul
cdq
shl
into
add
or
mov
cmp
jl
fwait
in
pop
or
ror
mov
pop
and
pop
sbb
push
mov
inc
or
mov
mov
call
add
pop
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
cmovle
xor
scas
and
(bad)
scas
inc
mov
jae
inc
xchg
sbb
in
and
cmps
sahf
sbb
nop
dec
lds
mov
mov
or
imul
cdq
and
int3
adc
inc
xor
(bad)
cld
out
or
adc
mov
jns
rol
popa
mov
mov
sbb
in
jae
std
imul
add
nop
sbb
not
adc
ret
dec
xlat
std
retf
inc
cmc
jo
cmp
loopne
and
je
out
ror
sub
jge
ja
xor
mov
sub
inc
scas
push
xchg
(bad)
aas
push
mov
fsub
add
int3
nop
into
inc
mov
jl
loope
or
sbb
and
pop
sub
rcr
in
aad
in
pop
adc
call
les
loopne
das
adc
in
fcmovu
sbb
(bad)
lea
pop
push
fs
adc
sub
add
and
push
adc
xor
mov
mov
cwde
and
push
cmp
movs
repnz
ss
adc
aas
fld1
bound
jecxz
adc
lea
mov
pusha
adc
and
push
dec
ds
call
push
repz
das
pop
test
push
fld
add
mov
rol
xchg
cmp
cmp
and
and
call
test
xor
adc
add
add
cmp
data16
xor
mov
or
cld
push
or
test
inc
add
lahf
adc
cdq
add
imul
pop
mov
dec
mov
lds
xchg
xchg
lds
pop
push
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
in
lahf
aas
je
in
retf
xor
fmul
jns
jmp
nop
pop
mov
lea
cld
std
xor
lahf
mov
and
inc
push
mov
sub
sbb
sbb
push
fimul
repnz
and
add
out
push
cmp
std
xor
dec
pop
mov
mov
jb
inc
popf
retf
push
into
mov
clc
outs
iret
inc
fwait
call
mov
call
push
add
retf
and
mov
jno
sbb
jno
das
jmp
cwde
retf
and
dec
pop
(bad)
add
jns
and
pop
cmp
cdq
je
fs
fcom
fild
adc
shl
pop
pop
test
and
cs
dec
out
jmp
(bad)
cmp
cmps
bound
xor
pop
or
xor
push
std
inc
shr
cmp
sbb
aam
and
pop
dec
loop
add
cmp
push
imul
test
movs
pop
enter
loopne
aas
pop
cld
push
lea
sbb
and
and
(bad)
and
pop
ret
test
and
bound
pushf
and
aam
icebp
mov
add
push
mov
stc
mov
xchg
retf
pushf
add
mov
and
adc
out
cmp
cwde
adc
inc
sub
pop
shl
aas
cmp
add
and
(bad)
mov
inc
bound
movs
sar
in
lock
push
xchg
(bad)
ja
add
hlt
and
loopne
cmp
ret
jmp
scas
or
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
loope
mov
pop
pop
and
push
adc
inc
inc
enter
jae
cld
or
xchg
ins
fs
xchg
pop
or
scas
jne
stc
outs
xor
mov
stc
jmp
jnp
xchg
sar
adc
arpl
repnz
xor
int3
in
adc
in
in
mov
and
call
inc
enter
jmp
mov
repnz
cwde
xor
sahf
ret
popf
adc
nop
xchg
jnp
jo
pop
xor
or
sbb
mov
cld
add
cmp
(bad)
or
nop
xchg
jne
and
mov
adc
mov
nop
mov
enter
mov
mov
xor
mov
push
add
and
cmp
fdiv
stos
pop
pop
mov
out
add
stc
add
or
inc
sub
add
add
add
add
out
dec
sbb
mov
rol
das
add
or
aam
push
dec
and
jns
shr
inc
enter
adc
or
pop
cmp
dec
fiadd
jns
cmp
ins
xor
stc
int3
lods
adc
in
mov
adc
ds
pop
mov
iret
jmp
popf
sub
xor
movs
pop
mov
adc
rcl
or
push
mov
mov
and
leave
mov
pop
pop
repz
dec
xchg
test
hlt
das
(bad)
shl
xchg
dec
punpckldq
aam
mov
push
ds
xor
call
movs
pop
dec
sub
mov
push
sub
in
jg
call
or
or
add
or
inc
sub
add
add
or
add
gs
add
cmp
call
sub
popa
inc
jg
int3
gs
mov
push
cmp
jmp
out
movs
ret
adc
cwde
dec
and
out
aam
xchg
fbstp
xor
mov
leave
xchg
add
pop
pop
sbb
fild
je
std
aad
push
aas
pop
cs
inc
mov
mov
xchg
aaa
and
scas
xchg
or
xchg
push
sbb
jmp
fisub
hlt
xchg
fcomp
mov
xlat
xchg
and
movs
push
jmp
pusha
popa
xchg
mov
into
mov
enter
inc
and
sub
push
call
pop
cs
push
adc
adc
fmul
push
test
jg
jmp
or
int3
mov
in
nop
in
pop
daa
das
pop
dec
dec
call
fdiv
xchg
jmp
add
stc
add
or
inc
sub
add
add
or
add
stc
shl
call
sub
mov
imul
jl
xor
(bad)
pop
cmp
cmc
int3
movs
fist
or
jge
cwde
add
push
mov
rcr
dec
xchg
dec
retf
push
dec
push
mov
ins
lock
mov
iret
sahf
push
(bad)
sbb
sahf
mov
inc
cmp
cmp
lea
dec
cli
mov
leave
inc
push
jns
jmp
and
add
cmc
xchg
outs
mov
or
sub
pop
mov
(bad)
sahf
push
or
nop
retf
loopne
pop
call
in
cmp
jnp
call
and
add
daa
sbb
push
add
jo
mov
loope
int
mov
fisttp
imul
add
or
inc
sub
add
add
add
add
leave
and
call
std
pop
enter
xchg
cld
dec
xor
out
or
loopne
int3
and
ins
cwde
sbb
cpuid
dec
xchg
(bad)
ins
jl
cwde
and
ret
imul
dec
xchg
and
and
mov
aas
jns
cld
inc
lods
xchg
dec
pop
xchg
outs
fidivr
inc
push
dec
xchg
jmp
mov
repz
inc
add
adc
cdq
dec
xchg
mov
popf
lods
daa
in
cld
shl
mov
sub
jno
iret
inc
js
outs
inc
cmp
scas
pop
xchg
pop
(bad)
out
clc
adc
sub
ret
jecxz
jb
fmul
add
stc
add
or
inc
sub
add
add
add
add
jl
or
aas
sbb
ins
jl
(bad)
mov
ret
xchg
sbb
pop
inc
jb
xor
addr16
pop
or
cmp
shr
mov
mov
ret
xchg
mov
imul
stc
pop
dec
jns
jo
stos
out
ret
dec
xchg
pop
sbb
cmp
xor
xchg
or
xchg
jb
hlt
popa
xchg
imul
dec
push
adc
xchg
inc
dec
cld
adc
in
push
lea
das
pop
sbb
mov
ins
lds
mov
inc
in
arpl
aam
and
and
add
or
inc
sub
add
add
add
add
or
ins
mov
cmp
call
retf
xchg
jg
(bad)
cmp
cmp
adc
inc
and
mov
pop
mov
inc
jmp
jb
(bad)
loope
leave
push
pop
cmp
pop
xchg
and
or
mov
mov
add
stc
add
or
inc
sub
add
add
add
add
or
scas
jmp
adc
pop
in
repz
pushf
mov
mov
jb
and
sbb
jmp
dec
lods
cmps
mov
cmp
repnz
ret
jmp
mov
rol
dec
int3
jg
repnz
cmp
test
(bad)
sub
dec
or
add
stc
add
or
inc
sub
add
add
add
add
or
int
repz
ffreep
cmp
push
rcr
pushf
bt
pop
cmps
jmp
je
and
scas
sahf
cmp
mov
lock
sbb
repnz
xchg
in
cwde
dec
in
xchg
sub
hlt
addr16
leavew
cmp
jns
lahf
or
inc
add
and
add
or
inc
sub
add
add
add
add
or
jmp
sti
inc
rcr
jns
shl
lea
and
retf
out
rol
jg
(bad)
stc
sti
and
pop
cmp
xor
add
mov
push
in
imul
retf
inc
mov
add
and
add
or
inc
sub
add
add
or
add
xchg
std
std
retf
and
pop
mov
pop
enter
xchg
cmps
xchg
addr16
mov
xchg
xor
cld
lock
ficomp
sbb
xor
lea
out
adc
ficom
test
sub
mov
cs
xchg
daa
inc
xchg
inc
sbb
and
int
and
xchg
jg
pusha
std
repz
in
xchg
xor
jp
popa
pop
xchg
push
jmp
xlat
fidivr
add
push
inc
ret
and
add
or
inc
sub
add
add
sldt
or
daa
rcr
sub
loope
add
cmp
adc
mov
lds
inc
or
mov
inc
sub
push
inc
xchg
inc
or
xchg
adc
jbe
fcom
inc
fistp
movs
pop
adc
cmc
ficom
dec
adc
inc
sbb
clc
aaa
vunpcklps
sub
adc
(bad)
loope
mov
(bad)
fmul
das
or
mov
hlt
lock
adc
(bad)
mov
fistp
add
add
stc
add
or
inc
sub
add
add
add
add
or
popa
mov
inc
inc
mov
or
xchg
inc
and
cmp
xor
ret
dec
xor
(bad)
test
xor
fld
sub
fdiv
loope
add
add
push
sbb
cmp
mov
dec
push
lea
xchg
add
inc
add
or
inc
sub
add
add
add
add
or
dec
sbb
adc
es
mov
mov
(bad)
mov
jo
shr
enter
loopne
and
adc
xlat
jmp
aaa
test
add
pop
sti
lods
cld
sub
daa
add
movs
adc
repz
retf
aas
daa
dec
cmp
clc
jmp
add
sub
add
add
add
add
or
dec
sbb
mov
mov
xchg
ss
sar
and
xor
add
or
rcl
mov
test
sub
test
mov
ret
add
adc
dec
pusha
xor
adc
xor
jecxz
xchg
sbb
and
add
or
inc
sub
add
add
add
add
or
dec
sbb
lock
or
sub
mov
(bad)
jnp
xor
or
xor
imul
add
in
cli
daa
outs
les
or
(bad)
adc
push
add
or
pop
inc
inc
add
sbb
xchg
inc
and
pop
or
nop
ror
pop
retf
call
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
jo
adc
rol
rol
or
lgdtd
cmp
add
add
add
popa
xor
sbb
cmp
add
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
mov
cwde
imul
add
xchg
sub
call
(bad)
in
add
lods
add
sub
std
cmc
stc
cmc
in
(bad)
stc
(bad)
int3
enter
mov
shl
jmp
sub
leave
mov
aam
out
jecxz
jmp
add
mov
lods
mov
ret
ret
(bad)
push
add
in
(bad)
push
(bad)
xchg
add
(bad)
daa
(bad)
cld
mov
je
cdq
jbe
mov
cmp
add
retf
retf
add
inc
inc
add
ret
jo
lods
dec
mov
push
rcl
ss
out
add
fadd
mov
aaa
aam
mov
(bad)
jp
out
inc
cli
fld
cmps
ss
sbb
fmul
scas
scas
dec
call
add
out
mov
pop
(bad)
repnz
inc
add
add
jmp
(bad)
dec
fild
aad
mov
add
push
add
out
call
rcl
in
(bad)
(bad)
(bad)
mov
rol
cli
cmps
add
retf
or
lods
add
cwde
movs
stos
inc
(bad)
xchg
add
in
xor
(bad)
sub
mov
mov
push
ins
xchg
(bad)
out
pop
enter
inc
into
pop
aam
pop
(bad)
fwait
lods
mov
imul
xchg
push
lods
add
cmp
mov
dec
into
lods
adc
les
sahf
pop
mov
or
test
iret
ror
dec
add
jmp
(bad)
in
mov
pop
ret
retf
aam
xchg
(bad)
clc
push
jmp
or
retf
mov
(bad)
xchg
les
jno
xchg
pop
adc
lds
int3
sbb
fsub
jno
jmp
pop
les
retf
loop
mov
loop
iret
mov
in
xchg
aad
fwait
out
and
retf
mov
dec
in
inc
xlat
iret
mov
mov
mov
push
rol
mov
pop
retf
mov
scas
mov
repz
jecxz
xchg
dec
(bad)
fild
mov
mov
mov
loope
mov
mov
ret
(bad)
stc
add
int
fcmovb
movs
call
cmp
or
mov
cmc
xlat
lods
lock
adc
scas
pop
ror
test
cmps
imul
push
sbb
int
xchg
pop
add
mov
out
iret
add
fcom
mov
iret
sahf
or
sar
xlat
and
fcomp
lahf
lahf
mov
fcmovne
mov
rcr
cmps
inc
call
adc
mov
jecxz
bsf
shl
in
mov
fsub
out
clc
ret
add
iret
add
out
dec
lock
neg
ds
aad
neg
adc
in
js
rol
jecxz
int
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
movs
loope
cmp
shl
and
(bad)
or
add
and
inc
add
xor
add
add
add
pop
sub
test
add
dec
inc
ds
retf
add
inc
cmp
popa
leave
int
sbb
xchg
xchg
mov
mov
ret
mov
rol
dec
ss
adc
push
xchg
or
push
adc
mov
jp
cmp
xchg
clc
enter
push
cs
push
pop
xchg
jne
clc
sub
push
pusha
(bad)
mov
dec
cwde
lods
add
push
rol
push
and
cs
push
enter
push
or
pop
ret
sbb
test
daa
out
(bad)
mov
call
inc
int3
cwde
popa
jge
and
and
adc
xchg
mov
lods
push
mov
jge
movs
int3
and
data16
loopne
scas
jge
mov
push
xchg
push
sub
add
lock
cmp
jae
sbb
add
dec
add
in
inc
das
dec
hlt
bound
adc
or
push
ror
inc
shl
cmp
pop
and
xchg
cmps
ret
mov
sub
adc
mov
mov
pop
mov
pop
lock
(bad)
dec
pusha
test
mov
mov
and
ins
pop
cwde
sbb
xor
pop
mov
or
sbb
adc
mov
push
clc
xchg
push
push
cmps
or
gs
xor
sbb
xor
mov
nop
pop
mov
mov
sub
xor
mov
or
inc
or
push
call
sbb
lods
mov
ror
adc
add
jge
test
popa
mov
mov
jo
scas
push
lods
leave
push
scas
movs
jmp
push
mov
add
adc
sub
test
gs
test
test
inc
add
and
mov
add
arpl
inc
adc
mov
sbb
icebp
mov
aam
and
inc
push
sbb
inc
and
inc
dec
dec
scas
test
cmp
ret
add
push
and
add
test
dec
pop
jle
inc
inc
add
sub
add
test
(bad)
push
fist
add
cmp
or
mov
pusha
xchg
cmp
push
mov
add
adc
(bad)
adc
and
push
cmp
jnp
jl
xor
sub
xor
or
push
adc
js
call
xchg
push
pushf
or
add
sub
jle
adc
inc
test
pop
pop
jns
add
push
ficom
loope
or
rol
push
add
ja
icebp
add
push
sbb
loopne
pop
repz
cmps
jb
jns
inc
fsubr
xchg
test
jmp
push
inc
pusha
or
cmps
lahf
scas
add
sub
sahf
in
mov
xor
pop
pop
cmc
inc
mov
and
les
xchg
retf
or
icebp
cmp
jne
jo
out
pop
jb
inc
pop
scas
sub
rol
aam
xor
loopne
adc
and
es
shl
loop
mov
test
inc
jno
add
loop
inc
and
add
js
jo
mov
adc
add
jae
test
loope
inc
xor
jmp
pop
imul
xchg
sbb
out
test
into
mov
sbb
sbb
adc
add
js
add
mov
daa
clc
ret
mov
xor
mov
fs
add
adc
add
add
push
les
test
ds
pop
and
push
pop
rol
mov
add
int3
xchg
inc
adc
loop
pop
inc
ret
xlat
or
sub
adc
adc
add
mov
bound
mov
imul
cmp
movs
and
ror
sbb
add
rol
push
call
rcr
xor
adc
add
scas
and
sub
sar
and
cmp
sub
add
fdivr
add
dec
or
jp
adc
popa
xor
add
push
addr16
pop
nop
cmp
or
fadd
add
addr16
add
lock
inc
pop
xchg
or
cmp
pop
push
mov
js
mov
xor
push
mov
add
add
push
or
or
enter
cdq
add
pusha
hlt
add
sub
sub
sbb
inc
or
push
iret
cmp
add
in
cmp
inc
or
xchg
loope
adc
or
nop
mov
add
jmp
adc
sar
push
jne
aas
retf
add
rol
inc
add
add
hlt
jp
or
test
rol
fs
push
mov
push
adc
add
push
iret
aaa
adc
adc
rol
and
and
outs
loopne
adc
mov
sub
xor
mov
and
sub
ror
vsubpd
mov
and
push
push
add
sbb
dec
lock
add
and
pop
int3
push
add
jb
fiadd
or
fld
out
aaa
rcl
pop
push
bound
sbb
les
pop
add
mov
in
and
test
add
or
ret
add
push
add
xor
aaa
mov
xor
sub
and
mov
les
fimul
mov
outs
pusha
sbb
pushf
lock
dec
bound
jns
add
nop
or
fmul
inc
mov
shl
sub
xchg
dec
jno
jb
mov
(bad)
xor
adc
xor
sub
add
xchg
sbb
sbb
pop
mov
cs
data16
nop
ret
xor
xor
push
jbe
call
push
adc
mov
pop
add
loope
psubb
iret
and
add
add
xchg
into
push
stc
add
mov
mov
xor
cmp
xchg
add
mov
push
xor
add
add
cwde
add
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
and
sub
inc
cwde
shl
or
xchg
sub
push
push
and
pop
push
sti
cmps
ret
cwde
sub
dec
lds
mov
and
mov
outs
and
jg
inc
dec
cmps
add
addr16
sub
ds
mov
dec
or
mov
fidivr
add
imul
inc
in
rcl
push
adc
inc
add
retf
push
stos
cmp
and
ret
add
fcom
push
adc
lahf
pop
and
ret
popf
call
cmp
inc
dec
inc
pusha
loopne
or
rcr
or
jae
inc
xchg
std
bound
cmp
jns
inc
ret
popf
jg
cmp
or
push
fisub
std
(bad)
enter
rcl
mov
test
mov
ja
fdivr
stc
push
out
sbb
mov
mov
ficomp
xchg
daa
push
outs
or
mov
xchg
aaa
test
xchg
rol
or
cmp
xchg
out
or
cwde
lock
or
adc
mov
jno
lods
and
jnp
gs
or
mov
test
xchg
xor
add
mov
lock
sub
aas
mov
xor
push
dec
mov
movhps
xor
push
cmp
das
(bad)
xchg
popa
ret
inc
test
xor
xchg
test
mov
adc
nop
loope
sbb
rol
sbb
nop
fwait
inc
mov
xchg
mov
out
std
add
aas
fdiv
or
adc
and
repz
les
xchg
ret
cmps
nop
ret
aas
sub
and
adc
xor
push
fld
les
jmp
push
or
call
ret
inc
ror
add
add
jne
or
xchg
sub
pushf
inc
nop
mov
in
jmp
push
sub
dec
mov
pop
daa
mov
nop
xor
jl
cld
push
or
test
adc
aas
rol
cld
and
sbb
xchg
sti
add
add
sub
xor
aas
cmp
sbb
test
lods
mov
mov
add
xchg
mov
cld
inc
inc
sub
and
inc
dec
inc
cmp
add
in
sbb
cmp
add
enter
push
adc
push
sub
aad
arpl
push
aam
rcr
ins
rol
add
ds
rol
aas
inc
aaa
hlt
inc
xor
fdivr
in
hlt
inc
push
jl
mov
push
sar
inc
sub
dec
ins
nop
dec
add
pop
ret
push
leave
push
add
leave
aas
dec
push
loopne
add
loopne
(bad)
fild
add
cmp
xor
jno
mov
daa
dec
cld
adc
xor
xchg
retf
ins
lock
push
or
push
retf
push
rol
lds
jmp
xchg
push
xor
aas
sbb
mov
and
sub
adc
in
dec
adc
cmps
ret
test
mov
mov
add
mov
push
or
adc
(bad)
cmp
push
test
push
adc
adc
fadd
mov
add
aas
push
aam
nop
add
arpl
aam
rcl
ins
mov
inc
div
btc
arpl
dec
sub
or
loop
lea
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
popa
push
and
dec
mov
inc
add
rol
or
enter
dec
hlt
rol
dec
xor
iret
and
ret
adc
dec
mov
nop
cld
stc
iret
and
adc
push
inc
xor
jno
inc
movs
push
add
ins
fsub
inc
cdq
push
push
cmp
add
push
push
enter
or
jnp
or
mov
jmp
inc
inc
push
add
cmp
adc
push
sbb
mov
mov
fldenv
push
mov
mov
mov
lahf
sbb
mov
dec
jo
add
lods
in
jmp
mov
mov
mov
and
push
sub
mov
inc
loopne
inc
ja
aad
bound
inc
xor
nop
les
inc
mov
fld
inc
ins
mov
test
loopne
add
fldenv
es
adc
or
shl
dec
fdiv
icebp
movs
(bad)
adc
fisubr
or
jne
loopne
inc
jmp
add
repz
cmps
cwde
xor
ins
rcl
mov
adc
lock
dec
pop
sbb
pop
daa
ror
mov
add
cmps
fdiv
ret
fsub
mov
and
pop
xor
pop
nop
cmp
mov
xchg
mov
add
sub
sbb
dec
dec
retf
fdiv
mov
sub
add
push
mov
or
sub
pushf
jo
inc
or
and
or
cmp
jb
aas
retf
adc
mov
adc
sbb
xchg
add
and
pop
mov
rol
xchg
(bad)
and
fdiv
popf
push
shl
xor
call
in
add
cdq
ret
mov
mov
shl
pop
cmp
cmps
inc
push
or
mov
ret
sbb
hlt
sub
pop
daa
pushf
and
test
inc
lock
or
adc
shr
shl
add
cmp
sub
add
rcr
jl
push
sub
pop
jo
adc
call
mov
ds
cmp
add
loop
push
add
loopne
add
or
(bad)
cmp
push
or
adc
push
and
enter
cmp
add
adc
rol
sub
inc
add
cs
push
sub
aad
rol
cmp
lock
adc
in
push
ror
sbb
loopne
add
and
push
cld
iret
and
movs
fmul
adc
adc
movs
mov
xor
movs
or
test
adc
aas
sbb
mov
movs
pop
nop
adc
xor
push
push
push
icebp
push
aaa
dec
ins
mov
and
add
push
and
cmp
and
cmp
add
dec
push
ret
test
inc
ss
cmp
ror
push
cmp
cmp
inc
nop
outs
and
hlt
xchg
int3
adc
or
arpl
into
inc
mov
xchg
nop
xchg
add
(bad)
rol
mov
and
sub
inc
xchg
dec
sub
jns
jle
(bad)
jo
add
fnstsw
push
or
push
xor
lock
and
add
or
inc
sub
add
add
add
add
or
mov
rol
sub
mov
inc
pushf
dec
mov
lds
cmps
mov
(bad)
mov
clc
call
push
dec
stos
lods
jno
rcl
sub
ret
and
fcomp
cdq
jo
add
inc
(bad)
adc
popa
iret
mov
pop
dec
cmps
rol
sub
cmp
adc
jb
pop
cmp
sbb
ja
loopne
xor
in
jns
dec
mov
and
sar
add
xchg
xchg
sti
or
in
or
into
push
cdq
or
xchg
fdivr
pop
das
push
mov
and
inc
dec
dec
adc
mov
adc
cmp
out
aas
inc
xchg
dec
xor
and
or
xchg
fsubr
pushf
out
or
inc
mov
(bad)
aad
adc
sahf
cld
sbb
jne
jns
stc
xchg
sbb
out
sub
jmp
mov
data16
loopne
mov
into
mov
(bad)
and
jbe
cwde
pusha
sub
mov
inc
inc
adc
sbb
out
retf
jg
pop
lock
sub
adc
loope
mov
inc
lods
cmp
retf
cmp
inc
sub
aas
mov
xor
xlat
and
add
dec
sbb
in
repnz
inc
or
fld
(bad)
lock
aas
and
lock
add
pop
hlt
sub
nop
push
add
pusha
ret
adc
fst
mov
push
xchg
aam
and
mov
cmp
push
cmp
cdq
gs
add
into
pushf
and
jns
cdq
ret
sbb
adc
sub
pop
push
pop
push
or
sbb
or
ret
add
movs
and
enter
test
and
retf
ins
mov
or
jo
push
or
(bad)
dec
repnz
or
push
retf
or
xor
out
xchg
mov
adc
int
add
inc
mov
xor
inc
mov
mov
test
and
push
push
or
push
int
inc
cmp
push
cmp
sub
cld
mov
jecxz
inc
or
pop
cld
push
das
inc
mov
jecxz
cmps
add
inc
sti
(bad)
adc
or
inc
add
sub
add
shl
(bad)
mov
sbb
adc
xchg
xchg
xchg
cs
jo
add
sbb
fcomp
sub
xor
les
sbb
mov
in
test
dec
movs
shl
aas
jns
mov
inc
adc
rcr
xor
xor
les
mov
sbb
aad
pop
je
mov
lahf
mov
ret
add
into
push
rol
ret
push
es
or
mov
adc
push
pop
mul
ror
sub
push
push
inc
sub
mov
jle
rol
in
ins
shl
push
inc
inc
mov
cmp
js
push
and
adc
je
aaa
fcom
out
push
hlt
(bad)
ja
sbb
stc
xchg
pop
les
out
nop
add
lea
jmp
sub
add
add
or
inc
sub
add
add
or
add
or
mov
rol
adc
pop
enter
xchg
and
adc
add
or
inc
jl
mov
ret
push
js
fmul
rol
aam
test
dec
xchg
sub
jns
jb
and
mov
sbb
adc
ret
test
xchg
adc
shl
push
cmp
xor
or
loopne
scas
dec
lods
inc
mov
popf
mov
js
repz
or
aas
and
jecxz
movs
rol
mov
fwait
mov
fild
stc
ja
mov
mov
scas
repnz
cmp
mov
dec
out
cld
pop
jae
mov
and
or
jl
cmps
mov
mov
cdq
xor
or
jne
popa
sti
fs
out
and
sbb
cmp
shl
mov
or
push
int3
sbb
lahf
cmp
ret
xchg
push
cld
pop
sub
pop
adc
dec
or
xor
rol
add
cmp
(bad)
ss
cld
ret
push
inc
xor
xchg
add
cmp
movaps
and
cwde
xor
clc
xor
std
mov
and
cmp
fsub
mov
lahf
inc
adc
or
fbstp
push
push
mov
bound
inc
add
ret
jl
dec
sub
cli
or
or
aas
dec
sbb
dec
adc
push
rdtsc
add
in
or
xor
mov
jmp
and
arpl
and
rcl
pushf
rcr
add
icebp
(bad)
ds
push
(bad)
or
cld
xchg
inc
add
jl
dec
or
fs
add
push
ds
push
sbb
add
cmp
ror
pushf
sub
in
dec
push
imul
jmp
cmp
adc
retf
add
loopne
sub
cmp
adc
add
cmp
or
mov
loop
add
lods
call
sub
dec
push
sub
outs
cmp
xchg
mov
hlt
inc
cs
nop
or
jmp
and
jl
mov
push
mov
lock
add
and
cmp
and
pop
adc
inc
inc
sub
push
inc
mov
mov
test
push
push
pusha
js
out
inc
sbb
xor
outs
cmp
rol
cmp
adc
inc
or
(bad)
push
hlt
inc
add
loopne
shrd
push
loopne
inc
push
pinsrw
push
push
add
mov
or
adc
push
adc
dec
and
daa
adc
pop
pop
aam
xor
jne
repnz
mov
cld
mov
adc
adc
sbb
mov
aam
adc
add
repnz
xor
jno
retf
xor
(bad)
out
xor
daa
movs
cmp
sar
in
jo
or
call
add
stc
dec
ror
inc
jge
lds
out
mov
jl
mov
add
mov
add
int
shl
pop
push
push
add
inc
adc
add
xor
sar
outs
jg
or
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
inc
pop
sub
cmp
add
cld
xchg
dec
mov
rol
inc
and
sbb
stos
inc
sbb
pop
push
pop
and
and
adc
push
xor
test
pop
add
pop
cmps
mov
or
cmp
adc
rcr
test
pop
cwde
mov
and
dec
lahf
add
ror
leave
mov
dec
jmp
cwde
mov
rep
setge
adc
movs
and
dec
push
inc
je
dec
inc
sti
dec
or
and
or
pop
mov
inc
clc
xchg
into
pusha
rcr
lds
jno
shl
(bad)
jle
mov
out
adc
scas
pop
mov
das
loope
out
cwde
jecxz
mov
je
mov
sbb
stos
mov
jae
rcr
lahf
mul
inc
mov
ret
add
cld
mov
inc
mov
cli
addr16
ins
repz
jg
stc
inc
ficom
(bad)
mov
test
pcmpeqw
jne
add
mov
retf
jg
cwde
mov
adc
mov
inc
or
xor
sbb
lahf
aam
add
fs
jl
ret
call
enter
inc
dec
sbb
sbb
sub
cmp
retf
cld
xchg
or
cld
xor
retf
xchg
jmp
xor
mov
inc
push
dec
or
mov
mov
jecxz
sbb
lock
imul
test
lahf
mov
sbb
push
mov
ror
jno
icebp
or
push
push
pushf
out
(bad)
and
or
(bad)
adc
call
jl
loop
and
retf
add
jmp
or
inc
push
repnz
push
sub
xor
aas
cmp
dec
and
jns
ret
pop
xor
cmp
iret
sub
(bad)
ror
scas
jns
inc
push
or
adc
sub
enter
add
adc
mov
fsubr
out
cld
sbb
adc
xchg
inc
add
adc
dec
and
mov
loope
and
in
inc
adc
aas
xchg
ret
test
cld
push
retf
and
mov
sbb
sbb
jecxz
retf
and
jg
inc
(bad)
int3
push
xor
inc
xor
test
adc
retf
aas
sbb
cld
inc
or
push
cmp
bound
adc
add
cmps
repnz
call
int3
push
mov
mov
cld
ret
add
gs
dec
mov
and
and
adc
xchg
mov
sub
inc
hlt
push
sbb
sub
aaa
xchg
je
mov
adc
xchg
dec
mov
cld
ret
clc
inc
mov
nop
mov
into
push
in
sbb
and
adc
sbb
idiv
popf
in
movlps
jns
fdiv
dec
call
and
cmp
cld
ror
sub
add
mov
dec
add
stc
xor
sbb
xor
xor
add
cld
ret
mov
cld
dec
(bad)
mov
add
and
push
inc
inc
xchg
mov
inc
sbb
add
mov
and
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rcl
and
dec
xor
and
les
sbb
mov
inc
(bad)
(bad)
(bad)
or
pop
test
add
or
nop
ror
adc
cmps
out
adc
dec
cld
add
sub
add
inc
add
jne
push
or
cmp
(bad)
cmp
je
sub
pop
cs
jg
nop
cmp
xchg
and
loopne
push
xor
nop
cmp
fdivr
mov
push
mov
bound
in
inc
sub
lods
mov
(bad)
out
mov
adc
cmp
retf
stc
lahf
push
ret
push
cmovo
movs
push
ficom
jb
sbb
les
push
fld
and
mov
sbb
push
push
push
pop
jbe
std
mov
movs
mov
mov
jl
fist
adc
(bad)
cmp
das
sbb
cmp
(bad)
fisttp
xor
lock
das
mov
pop
add
test
mov
retf
rcl
cmc
call
neg
ret
xchg
add
es
and
sbb
add
bound
fisttp
add
in
inc
or
push
iret
sub
inc
mov
or
in
(bad)
mov
push
movs
inc
ror
das
mov
mov
fdiv
or
fadd
and
leave
sbb
ror
pushf
nop
inc
push
call
sbb
sar
inc
add
lock
xchg
icebp
dec
add
clc
cwde
inc
cwde
popa
(bad)
jae
inc
jnp
je
and
stos
and
jbe
rcl
pushf
push
ror
cmps
lock
aas
std
cld
icebp
cmps
inc
daa
push
sub
jns
inc
(bad)
lar
jl
ret
fmulp
or
and
(bad)
aas
paddb
cdq
push
and
push
jns
(bad)
and
and
add
jg
and
fbld
or
fs
addr16
or
add
pop
outs
cmp
push
lods
out
add
mov
sahf
inc
adc
aaa
lods
in
enter
xchg
dec
mov
add
sbb
push
pusha
js
inc
add
lock
adc
sub
add
sbb
fwait
clc
pop
or
dec
sub
cmp
(bad)
sbb
sbb
cld
getsec
fadd
mov
push
or
movs
and
sti
inc
and
push
push
xor
jmp
mov
xor
adc
mov
push
mov
repz
jmp
xor
add
add
inc
push
pop
adc
ucomiss
test
dec
jo
mov
jo
xchg
inc
add
dec
daa
popf
cld
jecxz
inc
mov
mov
icebp
or
fst
add
mov
mov
adc
or
jecxz
xor
dec
add
aas
cmps
jae
or
aaa
and
push
sbb
aas
pop
pop
push
xchg
rol
add
in
mov
ror
repnz
push
movs
push
push
pop
xor
dec
adc
aad
in
repnz
jns
rol
mov
cmp
stc
add
or
inc
sub
add
add
add
add
or
add
or
pusha
mov
and
pusha
rol
and
mov
(bad)
cmp
inc
sub
push
fs
add
rol
mov
stc
scas
inc
dec
aas
or
fs
leave
nop
into
sar
mov
add
or
outs
nop
(bad)
popf
add
cmps
mov
out
or
inc
pusha
sbb
add
pop
test
ret
xchg
dec
sbb
cld
fwait
bound
mov
mov
enter
cvtdq2ps
jb
pop
sbb
sbb
dec
bound
(bad)
(bad)
sbb
test
nop
pop
inc
jbe
adc
fcmovnb
test
xchg
rol
shr
or
inc
fisubr
cli
xchg
leave
inc
xlat
add
sahf
or
mov
imul
adc
push
push
js
or
icebp
(bad)
mov
movzx
stos
outs
or
fcomp
inc
jg
xchg
and
pop
sbb
das
lock
(bad)
or
aas
xchg
jb
or
push
or
aas
addr16
popa
nop
sbb
inc
or
and
cmp
sub
aas
mov
and
sbb
movs
mov
jo
mov
icebp
mov
add
add
nop
(bad)
cs
pushf
in
dec
sub
loopne
or
xchg
xor
call
lods
xchg
add
jae
and
sbb
inc
add
mov
push
repnz
xchg
inc
adc
inc
iret
aas
sub
pusha
sahf
loopne
and
jo
add
and
xor
and
add
cmp
jmp
add
jg
lock
sub
pusha
push
mov
subps
inc
or
inc
enter
icebp
dec
jle
in
mov
push
cmp
add
xor
in
add
fwait
xor
nop
dec
or
adc
mov
and
imul
add
push
jge
inc
add
and
xor
enter
repnz
sbb
adc
add
fwait
jmp
mov
and
and
add
xchg
(bad)
jecxz
sub
nop
xchg
dec
cs
mov
ret
sbb
xchg
rcl
push
and
mov
dec
adc
jl
inc
add
ins
and
pop
dec
cmp
mov
or
add
or
sahf
nop
fmul
retf
sub
adc
sbb
cmps
and
add
xor
mov
add
add
sbb
mov
add
mov
add
aam
push
(bad)
pop
xor
or
add
mov
je
dec
xor
js
xchg
dec
add
fidiv
sub
ins
push
push
or
inc
dec
push
ret
gs
retf
cmp
push
sbb
leave
sub
adc
push
or
cld
arpl
(bad)
push
cmp
aam
nop
sub
xchg
rcl
loop
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
and
test
fnstcw
pushf
sub
push
lds
mov
push
dec
and
inc
xchg
and
mov
and
retf
adc
stc
cmps
in
sbb
(bad)
jmp
xor
pop
stc
ja
pop
xchg
pop
mov
sbb
cmp
(bad)
nop
test
cmp
mov
cmp
mov
adc
pop
(bad)
mov
pop
mov
lds
movs
imul
add
cmp
aam
inc
imul
mov
leave
mov
stos
adc
mov
and
or
or
mov
sbb
pop
lods
push
dec
das
(bad)
cmp
ins
inc
pop
mov
daa
dec
dec
aam
xchg
mov
dec
and
jbe
or
icebp
lahf
and
call
dec
data16
lahf
push
cmp
jbe
aam
out
ret
or
(bad)
pop
adc
xlat
cs
scas
cmp
mov
rol
xchg
cmps
pushf
inc
mov
inc
xor
and
int3
jg
xchg
xchg
enter
rol
aas
imul
inc
sub
push
and
push
push
or
shl
jb
inc
sub
and
sub
or
and
and
je
xor
nop
inc
or
cmp
jns
ftst
aas
addr16
jno
in
cmps
lock
add
adc
or
fwait
xor
or
in
dec
push
push
mov
iret
pop
jmp
or
push
sub
mov
(bad)
jecxz
or
aaa
dec
add
sahf
add
in
adc
jae
sbb
xchg
retf
pushf
and
shl
test
dec
add
push
add
cmp
add
xchg
call
dec
adc
or
xor
icebp
(bad)
mov
int
(bad)
aaa
push
jmp
(bad)
inc
add
lods
jmp
adc
inc
(bad)
and
inc
(bad)
cmp
push
ret
ss
retf
aas
enter
pop
mov
aas
mov
test
jns
shr
push
sub
sbb
pop
outs
ins
nop
mov
adc
push
sbb
sahf
and
add
xor
add
ret
rol
xchg
fsubr
push
daa
dec
cld
jecxz
adc
and
pop
je
mov
js
add
jmp
arpl
inc
xchg
je
leave
aas
sbb
inc
dec
add
or
adc
and
jl
dec
sar
xor
dec
and
sbb
iret
jl
inc
leave
adc
sahf
push
mov
lods
mov
dec
push
ret
or
or
popa
push
ror
lds
push
adc
fsubr
cld
jae
adc
sbb
fs
and
inc
add
fdiv
sub
add
cmp
mov
or
mov
and
adc
and
add
or
inc
sub
add
add
add
add
or
mov
shl
sub
mov
or
push
xor
les
and
scas
adc
and
aas
mov
and
sub
jmp
xor
mov
ret
xchg
call
test
in
mov
sbb
jecxz
adc
adc
mov
and
xor
popa
dec
xchg
adc
or
inc
add
leave
stos
nop
retf
add
dec
fpatan
iret
mov
mov
in
movs
mov
xchg
or
mov
(bad)
mov
dec
fsubr
fdiv
and
push
sub
mov
addr16
mov
pop
fdivr
or
push
mov
or
inc
dec
cmp
daa
mov
or
sub
lahf
or
mov
pop
xor
mov
jp
mov
iret
xchg
xor
mov
jmp
or
jmp
jmp
mov
push
(bad)
addr16
or
jl
add
or
iret
pop
fdiv
pusha
dec
sbb
icebp
push
test
fnstcw
jl
ret
aas
stos
test
aam
inc
sbb
sbb
iret
cmp
or
push
mov
pop
sub
(bad)
(bad)
and
adc
aas
or
and
cmp
sub
jne
leave
fadd
sbb
movs
ror
shld
and
xor
int
(bad)
lock
inc
push
clc
nop
(bad)
cs
clc
iret
sbb
in
aaa
shrd
inc
or
(bad)
fdiv
xorps
or
in
inc
or
cld
mov
nop
ret
aas
outs
loopne
cmps
inc
js
repnz
push
adc
shl
push
or
xor
movs
inc
jg
jo
call
in
jmp
test
rol
inc
jns
push
retf
sbb
cld
repz
cld
shr
or
mov
inc
and
pop
pop
lock
cld
inc
enter
dec
nop
ficom
mov
cmp
enter
lods
or
adc
add
addr16
sar
les
scas
inc
mov
push
push
int3
xchg
scas
push
add
aas
call
inc
and
and
mov
or
add
add
push
dec
and
mov
nop
adc
dec
xor
mov
test
add
mov
xor
pusha
inc
pop
push
push
mov
push
push
lds
cld
ret
les
inc
outs
push
or
sbb
inc
or
add
or
adc
rol
push
xchg
dec
mov
xchg
dec
adc
fdiv
icebp
iret
push
xchg
push
adc
push
adc
push
cmp
cmp
cmp
lea
sbb
ret
mov
(bad)
idiv
dec
inc
(bad)
out
mov
and
adc
add
hlt
adc
xchg
or
or
push
leave
aas
push
or
dec
xor
or
add
jne
pop
or
cmp
mov
inc
jae
or
lds
cld
loop
cmp
mov
mov
inc
adc
les
pop
enter
dec
fnstsw
push
dec
fiadd
gs
push
and
xchg
sub
xchg
mov
add
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
sub
mov
inc
pushf
dec
mov
lds
cmps
mov
(bad)
mov
clc
call
push
dec
stos
lods
jno
rcl
sub
ret
and
fcomp
cdq
jo
add
inc
(bad)
adc
popa
iret
mov
pop
dec
cmps
rol
sub
cmp
adc
jb
pop
cmp
sbb
ja
loopne
xor
in
jns
dec
mov
and
sar
add
xchg
xchg
sti
or
in
or
into
push
cdq
or
xchg
fdivr
pop
das
push
mov
and
inc
dec
dec
adc
mov
adc
cmp
out
aas
inc
xchg
dec
xor
and
or
xchg
fsubr
pushf
out
or
inc
mov
(bad)
aad
adc
sahf
cld
sbb
jne
jns
stc
xchg
sbb
out
sub
jmp
mov
data16
loopne
mov
into
mov
(bad)
and
jbe
cwde
pusha
sub
mov
inc
inc
adc
sbb
out
retf
jg
pop
lock
sub
adc
loope
mov
inc
lods
cmp
retf
cmp
inc
sub
aas
mov
xor
xlat
and
add
dec
sbb
in
repnz
inc
or
fld
(bad)
lock
aas
and
lock
add
pop
hlt
sub
nop
push
add
pusha
ret
adc
fst
mov
push
xchg
aam
and
mov
cmp
push
cmp
cdq
gs
add
into
pushf
and
jns
cdq
ret
sbb
adc
sub
pop
push
pop
push
or
sbb
or
ret
add
movs
and
enter
test
and
retf
ins
mov
or
jo
push
or
(bad)
dec
repnz
or
push
retf
or
xor
out
xchg
mov
adc
int
add
inc
mov
xor
inc
mov
mov
test
and
push
push
or
push
int
inc
cmp
push
cmp
sub
cld
mov
jecxz
inc
or
pop
cld
push
das
inc
mov
jecxz
cmps
add
inc
sti
(bad)
adc
or
inc
add
sub
add
shl
(bad)
mov
sbb
adc
xchg
xchg
xchg
cs
jo
add
sbb
fcomp
sub
xor
les
sbb
mov
in
test
dec
movs
shl
aas
jns
mov
inc
adc
rcr
xor
xor
les
mov
sbb
aad
pop
je
mov
lahf
mov
ret
add
into
push
rol
ret
push
es
or
mov
adc
push
pop
mul
ror
sub
push
push
inc
sub
mov
jle
rol
in
ins
shl
push
inc
inc
mov
cmp
js
push
and
adc
je
aaa
fcom
out
push
hlt
(bad)
ja
sbb
stc
xchg
pop
les
out
nop
add
lea
jmp
sub
add
add
or
inc
sub
add
add
or
add
or
mov
rol
adc
pop
enter
xchg
and
adc
add
or
inc
jl
mov
ret
push
js
fmul
rol
aam
test
dec
xchg
sub
jns
jb
and
mov
sbb
adc
ret
test
xchg
adc
shl
push
cmp
xor
or
loopne
scas
dec
lods
inc
mov
popf
mov
js
repz
or
aas
and
jecxz
movs
rol
mov
fwait
mov
fild
stc
ja
mov
mov
scas
repnz
cmp
mov
dec
out
cld
pop
jae
mov
and
or
jl
cmps
mov
mov
cdq
xor
or
jne
popa
sti
fs
out
and
sbb
cmp
shl
mov
or
push
int3
sbb
lahf
cmp
ret
xchg
push
cld
pop
sub
pop
adc
dec
or
xor
rol
add
cmp
(bad)
ss
cld
ret
push
inc
xor
xchg
add
cmp
movaps
and
cwde
xor
clc
xor
std
mov
and
cmp
fsub
mov
lahf
inc
adc
or
fbstp
push
push
mov
bound
inc
add
ret
jl
dec
sub
cli
or
or
aas
dec
sbb
dec
adc
push
rdtsc
add
in
or
xor
mov
jmp
and
arpl
and
rcl
pushf
rcr
add
icebp
(bad)
ds
push
(bad)
or
cld
xchg
inc
add
jl
dec
or
fs
add
push
ds
push
sbb
add
cmp
ror
pushf
sub
in
dec
push
imul
jmp
cmp
adc
retf
add
loopne
sub
cmp
adc
add
cmp
or
mov
loop
add
lods
call
sub
dec
push
sub
outs
cmp
xchg
mov
hlt
inc
cs
nop
or
jmp
and
jl
mov
push
mov
lock
add
and
cmp
and
pop
adc
inc
inc
sub
push
inc
mov
mov
test
push
push
pusha
js
out
inc
sbb
xor
outs
cmp
rol
cmp
adc
inc
or
(bad)
push
hlt
inc
add
loopne
shrd
push
loopne
inc
push
pinsrw
push
push
add
mov
or
adc
push
adc
dec
and
daa
adc
pop
pop
aam
xor
jne
repnz
mov
cld
mov
adc
adc
sbb
mov
aam
adc
add
repnz
xor
jno
retf
xor
(bad)
out
xor
daa
movs
cmp
sar
in
jo
or
call
add
stc
dec
ror
inc
jge
lds
out
mov
jl
mov
add
mov
add
int
shl
pop
push
push
add
inc
adc
add
xor
sar
outs
jg
or
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
inc
pop
sub
cmp
add
cld
xchg
dec
mov
rol
inc
and
sbb
stos
inc
sbb
pop
push
pop
and
and
adc
push
xor
test
pop
add
pop
cmps
mov
or
cmp
adc
rcr
test
pop
cwde
mov
and
dec
lahf
add
ror
leave
mov
dec
jmp
cwde
mov
rep
setge
adc
movs
and
dec
push
inc
je
dec
inc
sti
dec
or
and
or
pop
mov
inc
clc
xchg
into
pusha
rcr
lds
jno
shl
(bad)
jle
mov
out
adc
scas
pop
mov
das
loope
out
cwde
jecxz
mov
je
mov
sbb
stos
mov
jae
rcr
lahf
mul
inc
mov
ret
add
cld
mov
inc
mov
cli
addr16
ins
repz
jg
stc
inc
ficom
(bad)
mov
test
pcmpeqw
jne
add
mov
retf
jg
cwde
mov
adc
mov
inc
or
xor
sbb
lahf
aam
add
fs
jl
ret
call
enter
inc
dec
sbb
sbb
sub
cmp
retf
cld
xchg
or
cld
xor
retf
xchg
jmp
xor
mov
inc
push
dec
or
mov
mov
jecxz
sbb
lock
imul
test
lahf
mov
sbb
push
mov
ror
jno
icebp
or
push
push
pushf
out
(bad)
and
or
(bad)
adc
call
jl
loop
and
retf
add
jmp
or
inc
push
repnz
push
sub
xor
aas
cmp
dec
and
jns
ret
pop
xor
cmp
iret
sub
(bad)
ror
scas
jns
inc
push
or
adc
sub
enter
add
adc
mov
fsubr
out
cld
sbb
adc
xchg
inc
add
adc
dec
and
mov
loope
and
in
inc
adc
aas
xchg
ret
test
cld
push
retf
and
mov
sbb
sbb
jecxz
retf
and
jg
inc
(bad)
int3
push
xor
inc
xor
test
adc
retf
aas
sbb
cld
inc
or
push
cmp
bound
adc
add
cmps
repnz
call
int3
push
mov
mov
cld
ret
add
gs
dec
mov
and
and
adc
xchg
mov
sub
inc
hlt
push
sbb
sub
aaa
xchg
je
mov
adc
xchg
dec
mov
cld
ret
clc
inc
mov
nop
mov
into
push
in
sbb
and
adc
sbb
idiv
popf
in
movlps
jns
fdiv
dec
call
and
cmp
cld
ror
sub
add
mov
dec
add
stc
xor
sbb
xor
xor
add
cld
ret
mov
cld
dec
(bad)
mov
add
and
push
inc
inc
xchg
mov
inc
sbb
add
mov
and
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rcl
and
dec
xor
and
les
sbb
mov
inc
(bad)
(bad)
(bad)
or
pop
test
add
or
nop
ror
adc
cmps
out
adc
dec
cld
add
sub
add
inc
add
jne
push
or
cmp
(bad)
cmp
je
sub
pop
cs
jg
nop
cmp
xchg
and
loopne
push
xor
nop
cmp
fdivr
mov
push
mov
bound
in
inc
sub
lods
mov
(bad)
out
mov
adc
cmp
retf
stc
lahf
push
ret
push
cmovo
movs
push
ficom
jb
sbb
les
push
fld
and
mov
sbb
push
push
push
pop
jbe
std
mov
movs
mov
mov
jl
fist
adc
(bad)
cmp
das
sbb
cmp
(bad)
fisttp
xor
lock
das
mov
pop
add
test
mov
retf
rcl
cmc
call
neg
ret
xchg
add
es
and
sbb
add
bound
fisttp
add
in
inc
or
push
iret
sub
inc
mov
or
in
(bad)
mov
push
movs
inc
ror
das
mov
mov
fdiv
or
fadd
and
leave
sbb
ror
pushf
nop
inc
push
call
sbb
sar
inc
add
lock
xchg
icebp
dec
add
clc
cwde
inc
cwde
popa
(bad)
jae
inc
jnp
je
and
stos
and
jbe
rcl
pushf
push
ror
cmps
lock
aas
std
cld
icebp
cmps
inc
daa
push
sub
jns
inc
(bad)
lar
jl
ret
fmulp
or
and
(bad)
aas
paddb
cdq
push
and
push
jns
(bad)
and
and
add
jg
and
fbld
or
fs
addr16
or
add
pop
outs
cmp
push
lods
out
add
mov
sahf
inc
adc
aaa
lods
in
enter
xchg
dec
mov
add
sbb
push
pusha
js
inc
add
lock
adc
sub
add
sbb
fwait
clc
pop
or
dec
sub
cmp
(bad)
sbb
sbb
cld
getsec
fadd
mov
push
or
movs
and
sti
inc
and
push
push
xor
jmp
mov
xor
adc
mov
push
mov
repz
jmp
xor
add
add
inc
push
pop
adc
ucomiss
test
dec
jo
mov
jo
xchg
inc
add
dec
daa
popf
cld
jecxz
inc
mov
mov
icebp
or
fst
add
mov
mov
adc
or
jecxz
xor
dec
add
aas
cmps
jae
or
aaa
and
push
sbb
aas
pop
pop
push
xchg
rol
add
in
mov
ror
repnz
push
movs
push
push
pop
xor
dec
adc
aad
in
repnz
jns
rol
mov
cmp
add
add
add
dec
add
push
add
add
popa
xor
sbb
cmp
add
je
add
dec
inc
cmp
popa
xor
inc
mov
pop
(bad)
cld
iret
dec
pop
pop
(bad)
fld
xchg
dec
add
popa
imul
pop
(bad)
jbe
int
nop
dec
leave
repz
std
push
mov
pop
ins
(bad)
jmp
add
test
sti
std
(bad)
std
xchg
fcomip
mov
sar
lods
add
xchg
fwait
in
std
mov
pop
lea
(bad)
hlt
mov
(bad)
cdq
add
retf
shr
mov
shr
stos
jne
add
(bad)
mov
mov
xor
clc
mov
not
mov
(bad)
inc
add
in
das
retf
xchg
gs
aad
das
mov
int
mov
out
xchg
lods
sub
pop
add
pushf
add
out
mov
xchg
sub
cmps
cld
stc
out
push
mov
xchg
movs
add
xor
xchg
mov
test
in
inc
mov
mov
aam
dec
xor
fcom
mov
sub
in
push
(bad)
(bad)
sbb
std
xlat
adc
fsub
jno
mov
mov
in
leave
rol
xchg
mov
scas
std
mov
(bad)
xchg
or
jb
mov
or
std
(bad)
dec
sbb
add
repnz
in
cmc
mov
add
movs
or
cmps
sbb
lods
or
xchg
jno
in
mov
int3
retf
push
leave
cdq
push
sub
cmp
or
dec
mov
fsub
out
mov
std
(bad)
hlt
popa
iret
repz
div
xchg
(bad)
mov
sbb
stos
movs
sub
in
lods
in
dec
lods
in
mov
rep
add
dec
call
adc
pop
and
cmp
pushf
outs
test
in
(bad)
enter
sti
dec
or
add
ds
imul
(bad)
push
add
mov
xor
lods
in
div
cmps
jne
jns
jmp
leave
adc
xchg
xor
cli
push
repnz
add
cdq
adc
popf
push
movs
out
std
loop
(bad)
popf
inc
in
fld
je
aad
out
repnz
imul
je
jmp
ret
lods
(bad)
sub
mov
jmp
imul
mov
push
or
out
jmp
sbb
mov
mov
icebp
in
(bad)
lahf
test
repz
add
mov
hlt
mov
mov
cmc
les
lock
cmc
int
stc
sti
stc
rep
sqrtps
aad
push
add
loope
out
loopne
shl
repz
push
cmp
xchg
or
and
pushf
or
in
repz
mov
mov
xchg
mov
mov
div
int
out
and
lea
jmp
or
into
loop
cmp
(bad)
out
repnz
sti
repz
cmc
out
lock
jae
repz
sahf
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
or
add
or
mov
test
jle
xor
movs
mov
inc
adc
and
sbb
adc
rol
mov
jmp
cmp
add
std
pushf
mov
xlat
dec
sbb
add
dec
sbb
push
clc
adc
xor
mov
gs
push
retf
sub
lea
nop
and
push
push
shl
jns
add
mov
jo
stos
inc
or
stos
inc
test
sbb
inc
lds
adc
ss
sbb
inc
or
call
sub
mov
mov
sub
add
add
sub
test
xor
test
xor
scas
inc
mov
mul
test
xor
add
mov
mov
xchg
js
or
push
mov
movs
adc
inc
fwait
sbb
or
mov
mov
pop
loop
xchg
and
or
mov
sbb
les
mov
push
addr16
leave
and
add
inc
or
adc
fild
adc
and
jno
add
add
sbb
pusha
mov
adc
add
fsub
(bad)
and
mov
popf
or
rol
adc
lock
dec
sbb
in
mov
adc
ins
and
inc
inc
add
add
mov
push
mov
or
pop
xchg
and
add
cwde
dec
pop
sub
pop
aas
inc
jo
ret
or
xor
xor
pop
cwde
inc
cli
mov
sbb
pop
mov
fs
add
mov
bound
add
xor
jge
pop
sbb
jae
enter
xor
or
rdtsc
call
dec
push
inc
and
or
mov
lock
adc
mov
or
or
cmps
sub
(bad)
and
dec
ins
test
movups
xor
inc
add
clc
push
mov
push
pop
enter
mov
jb
cmp
aam
inc
cmp
dec
aam
or
push
test
adc
sbb
push
jae
xor
lahf
mov
call
push
test
adc
mov
aas
cmps
int3
xor
mov
outs
jmp
xor
adc
pop
mov
xchg
xor
cmp
sbb
nop
mov
(bad)
sub
jnp
shl
cmp
mov
or
test
mov
sub
sbb
pop
out
jl
test
icebp
ror
cmp
push
or
xor
mov
jge
mov
mov
and
sub
mov
xor
retf
sbb
ss
es
inc
inc
sub
push
ror
push
jnp
push
mov
(bad)
jg
jb
add
cs
(bad)
ret
nop
cmp
or
sbb
adc
inc
test
clc
fiadd
out
mov
enter
adc
add
xchg
push
adc
adc
dec
and
and
or
dec
or
add
push
adc
cwde
pop
hlt
shl
fcomp
or
mov
jbe
xor
adc
std
clc
jecxz
lds
lods
push
loopne
add
or
and
retf
mov
mov
mov
add
push
lds
jmp
lods
lock
adc
mov
std
dec
mov
add
nop
add
mov
add
add
adc
or
rol
jmp
jmp
add
mov
inc
or
int
adc
and
add
test
into
jo
pop
fwait
ret
and
adc
shr
or
pop
scas
popa
or
push
jo
ins
fadd
and
mov
xor
nop
add
mov
add
add
cld
sbb
adc
sbb
jno
push
sbb
aas
movs
loopne
sub
add
add
in
test
outs
jo
adc
add
or
call
adc
or
mov
add
ror
lods
loopne
or
test
ja
ror
mov
cmc
mov
or
lock
test
xor
push
and
pusha
sbb
add
bound
sbb
dec
or
je
mov
movs
es
push
pop
or
add
mov
rcl
jo
mov
movs
mov
popf
rcr
xchg
add
pushf
xor
mov
add
push
and
or
cmp
dec
sbb
pop
cmp
test
jecxz
add
cmp
loope
pop
adc
xor
mov
xor
xchg
pusha
dec
add
xor
ret
and
jo
add
push
and
(bad)
pop
ss
jl
lds
mov
add
push
or
sub
loopne
adc
push
mov
add
ror
or
nop
aas
nop
and
mov
and
mov
nop
pop
ret
sbb
lock
or
add
push
push
dec
add
dec
arpl
jmp
cmp
dec
mov
sbb
xor
sbb
inc
add
sbb
sbb
sbb
sub
test
lock
ss
mov
dec
and
add
xor
stc
sub
mov
lods
and
jl
(bad)
sbb
dec
and
ror
and
pop
or
adc
lds
xor
inc
ficomp
test
inc
outs
sub
adc
mov
shl
or
js
or
(bad)
jp
add
add
inc
add
and
inc
add
add
push
rcl
call
dec
les
inc
adc
lock
jge
cmp
sub
jbe
ret
and
cmp
rcr
aaa
ss
push
(bad)
and
enter
stos
xchg
fisub
add
mov
add
push
push
test
sbb
and
sbb
adc
add
inc
lock
pop
scas
jp
enter
addr16
push
dec
cmp
lock
mov
dec
rcl
mov
dec
leave
cmp
in
outs
stc
push
mov
out
aam
mov
test
or
ja
pop
test
arpl
outs
popf
adc
push
push
xchg
push
mov
pop
mov
adc
dec
inc
or
clc
adc
mov
jmp
pushf
mov
add
cs
repz
repnz
mov
add
lock
dec
arpl
xlat
fst
(bad)
addr16
cmps
test
adc
not
push
js
sub
mov
retf
add
(bad)
push
sbb
fmul
ins
rol
xor
sub
push
nop
xchg
dec
xor
adc
scas
inc
add
loope
push
aas
ret
add
add
and
add
adc
add
or
adc
add
xor
mov
popa
mov
idiv
pushf
cmp
xor
and
jno
loopne
jbe
das
mov
push
imul
add
xor
das
dec
add
and
lea
nop
ror
bnd
pop
rcr
and
ror
and
sub
adc
xor
ror
xchg
out
test
scas
ins
adc
or
push
fdivr
repz
movs
in
sbb
clc
sar
mov
mov
inc
das
outs
nop
test
clc
push
sub
add
push
mov
mov
sbb
adc
aaa
adc
add
add
mov
xchg
xor
sub
retf
sbb
push
pop
jl
ins
adc
sbb
pop
mov
popf
xor
dec
rol
out
cmps
mov
sub
aaa
sbb
or
rol
fadd
sub
inc
or
loop
aas
add
nop
push
add
cli
add
sbb
add
pop
loop
add
and
adc
push
movs
nop
test
je
or
retf
(bad)
mov
add
js
add
or
or
aas
jg
add
add
xor
fld
aam
jle
jno
inc
sar
adc
mov
dec
add
sar
call
adc
add
stc
add
or
inc
sub
add
add
aaa
add
or
add
or
jo
cmps
jg
movs
cld
jecxz
mov
and
xchg
mov
adc
push
push
and
xchg
adc
adc
movs
retf
mov
retf
mov
pop
lock
leave
repz
or
push
pop
cwde
loop
(bad)
sar
or
xor
mov
jge
lods
mov
jbe
mov
add
pop
xchg
push
fdivrp
jae
mov
imul
pop
add
pushf
std
cmps
inc
add
cs
lock
mov
jb
adc
cld
push
xor
or
sbb
(bad)
sub
enter
jg
and
mov
bound
dec
push
or
push
and
cld
repnz
or
jne
in
xchg
dec
add
inc
push
ins
inc
nop
int
cmp
mov
jb
add
outs
add
mov
ret
add
mov
daa
shr
jge
shl
int
(bad)
je
int3
loope
sub
in
mov
inc
mov
mov
sbb
loopne
jae
bnd
inc
lds
aad
into
or
sbb
popf
sar
inc
inc
dec
adc
dec
inc
inc
adc
ret
popa
add
mov
and
push
daa
cs
mov
nop
add
dec
sub
inc
inc
fsub
push
add
xchg
sbb
add
or
adc
and
push
sub
pop
cmp
es
add
mov
push
mov
xchg
dec
adc
aas
into
mov
loopne
in
and
inc
call
inc
out
xor
inc
dec
out
push
sbb
mov
getsec
and
xchg
mov
sbb
add
test
and
rcr
cmp
ret
or
xchg
or
jge
test
inc
loop
cmp
scas
(bad)
cmp
dec
dec
add
adc
add
adc
and
jmp
inc
inc
mov
mov
pop
rcl
popf
or
rol
lock
xchg
lgs
add
and
mov
jns
rcr
push
mov
push
pusha
lea
or
cli
push
push
inc
dec
aas
push
(bad)
jo
pop
lods
(bad)
xchg
test
adc
icebp
test
bound
lea
cdq
loopne
inc
dec
mov
mov
mov
fdiv
inc
mov
hlt
dec
pop
adc
or
call
(bad)
hlt
aas
xchg
(bad)
in
and
sub
jmp
mov
xor
es
ins
sbb
inc
ja
push
loopne
out
or
or
jae
(bad)
mov
or
dec
sbb
and
lods
mov
add
int
or
bound
xor
mov
xor
add
jg
mov
sbb
in
movs
stc
ror
popa
inc
xchg
clc
inc
mov
mov
and
or
pop
retf
sti
mov
jae
inc
imul
push
cmp
jne
cmp
imul
iret
push
pop
inc
jbe
mov
repnz
inc
std
(bad)
cmps
xchg
or
or
imul
mov
enter
icebp
test
push
mov
inc
fdiv
and
push
ins
jno
xor
sub
loopne
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
lock
xchg
jg
push
(bad)
aas
pop
add
loopne
lea
inc
push
pushf
adc
add
xchg
sub
pop
shl
pop
movs
xchg
add
dec
inc
jb
xor
xor
int3
jg
adc
aaa
test
cld
mov
jg
or
and
pop
push
inc
call
sbb
ret
(bad)
or
sub
les
sbb
ror
ror
sbb
mov
mov
dec
mov
mov
mov
loopne
xor
mov
add
fprem
push
nop
dec
stc
das
push
xchg
(bad)
xchg
leave
mov
jno
iret
push
mov
out
sub
cwde
out
mov
sbb
or
jmp
mov
movs
dec
out
lods
jnp
call
adc
cmp
pop
adc
retf
push
cmps
adc
jb
inc
sbb
dec
xor
fcom
and
daa
push
loope
(bad)
sbb
js
inc
or
int3
inc
add
mov
nop
sub
bound
or
aas
adc
aam
and
jmp
or
inc
xor
dec
rol
push
sbb
push
add
cwde
xchg
test
gs
repnz
ret
dec
adc
cmp
call
add
cld
push
test
add
and
aas
and
je
aas
mov
ret
inc
aaa
sbb
push
lds
clc
clc
(bad)
gs
sbb
push
sbb
mov
xor
inc
cmp
arpl
push
sub
leave
and
or
mov
aam
and
jb
mov
fwait
push
inc
push
lahf
and
(bad)
jg
imul
sbb
push
and
rcl
mov
inc
jne
adc
jae
inc
jg
enter
mov
cwde
add
push
mov
lahf
pop
ret
mov
fs
xor
jmp
rcl
stos
cmc
out
out
mov
push
call
xor
dec
push
imul
mov
fs
popa
mov
aas
mov
sbb
and
add
add
pusha
push
mov
cdq
xor
inc
xor
push
shr
dec
cmp
add
add
aad
imul
popa
das
(bad)
cli
or
jp
mov
mov
mov
or
dec
lock
dec
jmp
mov
xchg
sbb
inc
iret
in
dec
repz
sbb
je
inc
cmp
inc
lods
adc
sbb
push
fnsave
jmp
sub
fld
add
and
add
or
inc
sub
add
add
or
add
or
mov
rol
jmp
push
push
les
mov
(bad)
cmp
inc
sbb
add
mov
pop
lgs
popf
dec
push
push
cdq
(bad)
mov
or
out
out
adc
inc
adc
adc
dec
pusha
(bad)
dec
cli
cmps
jmp
pop
es
inc
cmp
sbb
lds
xchg
add
sub
test
xchg
cdq
inc
arpl
add
out
push
data16
rol
xor
cmp
inc
xchg
sub
mov
sbb
mov
arpl
nop
inc
(bad)
popa
stc
out
xchg
pop
(bad)
fimul
xlat
mov
repz
pop
pusha
test
add
mov
pop
jne
xchg
std
addr16
fimul
pop
mov
(bad)
cmp
or
aam
jbe
in
out
outs
bswap
inc
jbe
push
rcl
sar
mov
icebp
pop
push
jmp
mov
mov
call
add
sub
cwde
xlat
lahf
inc
(bad)
xchg
icebp
adc
add
add
ja
or
lahf
inc
sbb
inc
adc
jle
inc
push
push
sbb
dec
clc
iret
inc
add
loope
mov
or
and
aas
and
js
mov
int
adc
sar
adc
cs
inc
into
adc
mov
and
cdq
push
mov
leave
xchg
inc
fcomp
sub
mov
xor
push
rcl
push
or
movs
sub
inc
popa
jp
cmps
pushf
js
sbb
adc
and
cdq
cmps
aas
test
sub
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
jo
mov
cmp
in
mov
es
hlt
outs
rol
sti
adc
push
and
test
movs
dec
adc
movs
lds
enter
mov
ins
dec
inc
clc
inc
and
adc
call
push
and
call
das
inc
mov
(bad)
ror
call
or
call
inc
jno
lea
mov
adc
dec
scas
loope
iret
mov
add
pop
movs
cmp
and
cmp
or
push
mov
loope
ret
mov
inc
loop
pop
das
fld
mov
and
cwde
or
(bad)
mov
sbb
mov
dec
arpl
xchg
icebp
gs
mov
clc
and
mov
stos
enter
(bad)
push
dec
mov
mov
popa
sbb
ins
cld
jmp
xchg
pusha
xchg
add
sub
loopne
call
ja
xor
cmp
push
jmp
xor
in
loope
retf
mov
sar
or
mov
int
std
loope
popa
mov
rol
add
xchg
std
mov
inc
push
dec
repnz
add
inc
add
(bad)
loopne
xchg
jecxz
push
inc
or
gs
adc
arpl
retf
sub
or
xchg
mov
(bad)
and
(bad)
jns
add
sbb
mov
pop
aam
call
adc
jmp
adc
out
mov
or
inc
sbb
adc
mov
or
and
dec
fs
dec
sbb
inc
out
bound
add
mov
adc
cmps
cmp
aam
inc
pop
cld
cmc
dec
and
jns
nop
pop
push
(bad)
jns
sbb
jmp
fwait
(bad)
cli
dec
add
xor
retf
xor
push
add
lods
mov
cmp
mov
lods
std
xor
aas
test
bound
adc
stos
hlt
shr
in
cmps
addr16
jp
push
scas
outs
sbb
sub
scas
inc
sub
add
add
test
cwde
push
and
fiadd
inc
scas
inc
cs
sbb
(bad)
call
ins
sbb
sub
mov
add
call
push
and
mov
push
lock
int
sbb
enter
fiadd
shr
das
push
inc
or
sub
lods
push
push
and
add
mov
mov
inc
enter
sbb
mov
xor
retfw
int
fild
imul
or
outs
and
inc
and
pop
and
mov
adc
push
push
repz
or
stos
inc
aam
xor
loopne
cmp
or
sbb
pusha
dec
cmp
add
fst
adc
and
adc
adc
out
mov
test
inc
sbb
xor
inc
mov
movs
sbb
mov
retf
sbb
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
inc
sbb
dec
nop
pop
inc
jbe
sbb
mov
xor
inc
sbb
sbb
cmps
inc
pop
xor
dec
sti
xlat
and
cmp
pusha
scas
jg
cmp
aas
jg
lock
push
cdq
cs
and
sbb
lods
or
xchg
and
mov
bound
adc
or
inc
mov
lods
imul
adc
ins
sbb
hlt
scas
dec
popf
inc
jne
imul
test
xor
mov
or
cmp
pushf
aaa
scas
jecxz
scas
adc
test
xchg
pop
and
jl
scas
ins
shl
push
shl
jo
es
mov
jns
cmps
mov
std
jmp
sti
loopne
pop
call
mov
pop
lock
jno
aaa
jmp
fdivr
pushf
jg
cmps
and
pop
push
hlt
aas
inc
add
imul
rcl
xor
stos
push
ja
sub
bound
sbb
cmp
sbb
mov
test
pop
inc
daa
or
fbld
and
push
adc
aas
jno
repz
jae
movs
addr16
sub
ds
xchg
xchg
push
sub
and
jno
enter
cmc
loopne
inc
mov
lahf
std
push
mov
xlat
inc
and
and
dec
jg
or
push
rol
sub
mov
adc
sub
gs
inc
ins
push
pusha
out
jno
inc
popfw
ins
xchg
and
or
into
or
popf
and
retf
ins
inc
inc
pop
call
pop
arpl
movs
xchg
and
inc
rcl
aad
cmps
add
adc
jmp
adc
push
adc
shl
mov
adc
xchg
sub
xchg
inc
jmp
adc
push
movs
adc
ins
mov
lock
add
jb
lods
inc
xchg
dec
dec
adc
sbb
adc
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
nop
loope
cmp
adc
popa
and
call
rol
sbb
mov
pop
and
dec
loopne
xchg
xchg
add
jecxz
push
cwde
cmp
pop
shl
pop
and
inc
fld
sub
dec
push
inc
sbb
jbe
cmps
sar
dec
or
fwait
mov
xlat
and
sti
push
xchg
pusha
popf
add
rol
ins
mov
xchg
sbb
(bad)
test
sbb
sbb
inc
inc
ja
pop
mov
es
add
loopne
xor
xor
inc
sbb
fst
pop
push
dec
cli
mov
sbb
enter
cdq
mov
pop
jo
(bad)
jno
dec
mov
mov
inc
(bad)
inc
adc
xor
scas
jae
fnsave
inc
scas
add
xchg
iret
jl
ror
popa
add
(bad)
fadd
fisttp
jmp
(bad)
leave
das
ins
inc
stos
mov
dec
and
mov
push
inc
adc
cld
mov
daa
add
dec
push
cmp
inc
dec
or
xor
mov
icebp
xor
sbb
push
push
adc
call
push
sub
sbb
arpl
add
add
and
inc
sbb
xchg
push
push
inc
aaa
sub
je
and
aad
mov
loopne
add
sbb
rcl
xchg
loope
jmp
repnz
fnsave
inc
adc
sbb
pop
dec
sbb
test
sbb
into
inc
ja
and
inc
or
inc
sbb
add
cld
xchg
add
dec
mov
jge
push
inc
jge
ror
mov
repz
outs
add
pop
sbb
jo
push
sbb
mov
aad
mov
shl
cmps
xchg
jmp
enter
test
scas
(bad)
in
push
pop
add
push
adc
mov
pushf
movs
sub
retf
mov
or
pop
ror
mov
scas
mov
aad
mov
add
mov
rcl
mov
retf
jmp
arpl
jo
mov
inc
xor
push
push
inc
dec
dec
sub
mov
cmp
pop
push
(bad)
push
inc
mov
test
fadd
repnz
stc
sbb
sbb
lock
add
and
icebp
xor
sbb
int3
scas
mov
aas
pop
cld
shl
mov
je
xchg
or
(bad)
sbb
xchg
mov
pop
out
inc
or
jg
psrlq
cmp
jae
xchg
cmp
jge
je
sbb
in
jecxz
pop
jp
cs
cmp
mov
pop
mov
call
gs
rol
std
mov
mov
clc
hlt
in
cld
add
pusha
sub
adc
es
push
adc
mov
sub
dec
nop
add
dec
shr
mov
in
and
(bad)
push
adc
xor
or
push
xchg
aas
(bad)
lock
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
and
aas
sub
xor
enter
adc
inc
mov
ror
xchg
test
or
movs
mov
and
or
pop
and
test
(bad)
xor
data16
or
push
jmp
sbb
xchg
js
retf
sub
lahf
adc
cmp
xchg
mov
sbb
stos
test
(bad)
push
push
cmp
iret
sub
xor
pop
test
xor
shl
imul
and
xor
push
pop
inc
mov
jmp
jne
push
test
add
scas
loope
xchg
sub
cmp
inc
jg
sub
into
mov
or
imul
lds
push
out
mov
mov
dec
mov
and
loopne
cmp
loope
sar
cmps
into
and
sub
add
call
repnz
(bad)
mov
xlat
(bad)
push
stc
xchg
sbb
xor
rcl
mov
gs
lsl
shl
call
popa
xchg
pop
add
enter
add
sbb
leave
xor
sbb
clc
xlat
pop
inc
stos
adc
dec
inc
pop
shl
popf
sbb
and
xchg
std
ret
and
aas
stos
sub
bound
(bad)
call
clc
(bad)
sbb
stos
rol
sub
xor
ds
test
xchg
call
jns
sbb
test
into
aas
dec
ss
xchg
ins
adc
lods
fcomp
loop
xor
xchg
inc
adc
stos
push
popa
dec
getsec
into
cmp
inc
in
fldenv
and
dec
jns
jb
or
pop
andnps
test
or
test
push
add
movs
xchg
and
xor
or
or
fsub
push
or
pushf
xchg
adc
mov
enter
cmps
jmp
and
jmp
je
stc
push
xor
push
imul
sbb
pusha
retf
aas
iret
stos
push
dec
or
sbb
hlt
in
mov
mov
shl
call
test
push
xor
adc
inc
mov
cld
iret
rcr
cmp
and
adc
and
xor
nop
inc
or
movs
xor
rcr
mov
mov
retf
or
and
add
or
inc
sub
add
add
or
add
or
jo
nop
jg
pop
cld
cmp
mov
inc
hlt
push
retf
and
xor
js
fbld
hlt
daa
inc
mov
cld
dec
inc
dec
movs
dec
lea
lds
rcr
push
loopne
cmp
call
dec
pop
loope
ret
push
add
mov
data16
xchg
test
cmp
fistp
(bad)
loop
lea
cs
adc
js
push
pop
add
push
das
mov
shl
pand
inc
add
leave
movs
or
mov
rcr
std
loope
dec
add
sbb
mov
xchg
and
retf
adc
or
dec
lods
loopne
push
icebp
(bad)
pop
add
es
loopne
adc
mov
cmp
jae
and
ss
dec
jmp
aam
and
shl
push
neg
adc
adc
pop
bound
adc
test
rcr
add
test
shr
add
sub
imul
cmp
cmp
cmp
(bad)
das
push
imul
add
pop
das
les
pop
pusha
xor
and
test
(bad)
and
aam
inc
inc
jge
mov
and
cmp
popf
loop
test
and
inc
dec
(bad)
jecxz
and
loop
xchg
sbb
mov
inc
push
inc
inc
test
imul
add
rol
fsubr
fcom
ffree
in
sbb
fs
inc
or
adc
xchg
cmp
pop
mov
in
inc
rcl
inc
jg
hlt
sbb
pushf
(bad)
xor
xor
rcr
add
loopne
push
imul
dec
sub
gs
dec
sub
add
call
mov
inc
adc
(bad)
mov
jo
iret
mov
jo
rcl
aas
nop
mov
shl
jne
gs
mov
add
xor
inc
jno
pop
nop
aas
xchg
or
cmp
(bad)
push
inc
cmp
es
inc
mov
cdq
push
jl
and
cwde
rcr
adc
loope
je
inc
or
jae
inc
hlt
mov
or
dec
and
push
ss
pop
gs
call
mov
retf
adc
mov
aaa
add
lds
je
movs
cmp
inc
adc
or
into
aas
cmovne
add
and
test
aas
jecxz
icebp
rol
shl
ud0
push
add
lock
fdivr
push
rol
data16
and
repz
sub
hlt
iret
add
call
movs
or
sbb
jmp
push
jecxz
data16
xchg
les
ret
jno
mov
rcl
push
mov
aas
jno
sub
jmp
les
jnp
add
mov
(bad)
push
jne
stos
mov
inc
cs
in
(bad)
sub
or
inc
and
enter
or
scas
std
lock
xchg
jb
sub
sbb
ja
xchg
mov
and
fidivr
jb
mov
push
sti
icebp
push
xor
shl
push
jno
inc
into
icebp
(bad)
pop
outs
sbb
dec
scas
jle
mov
mov
mov
and
les
jne
jl
jecxz
nop
or
xor
(bad)
pop
popf
cmp
daa
pop
addr16
sbb
inc
repz
push
xchg
nop
je
pop
adc
pop
jmp
test
add
stc
ffreep
push
inc
add
(bad)
add
ret
aas
outs
or
int3
mov
and
rol
or
aaa
pop
int
rcl
(bad)
inc
cmp
aaa
push
loopne
dec
arpl
int3
inc
push
sub
inc
or
outs
aaa
xchg
xor
or
xor
ror
stos
and
in
jno
inc
or
pop
(bad)
adc
icebp
pop
inc
xchg
fdivr
xor
and
push
pop
add
inc
cmp
pusha
jmp
and
sbb
push
bound
add
loop
outs
js
or
cmova
pop
les
add
xor
popf
fs
mov
in
push
jb
sub
enter
adc
and
iret
(bad)
leave
or
sbb
add
clc
andnps
push
and
jo
aaa
pop
adc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
mov
pop
enter
xchg
test
fcom
or
push
push
stos
xchg
or
loopne
lods
or
enter
inc
ds
jmp
test
mov
mov
loop
inc
push
sbb
push
mov
sub
pop
fs
lar
adc
stos
lahf
test
adc
cwde
mov
add
jae
cmp
adc
adc
test
pop
jl
pop
ret
loope
and
inc
dec
mov
push
sub
push
jno
mov
shl
rol
stos
xchg
and
inc
stc
xchg
jne
aam
pop
sbb
add
aas
mov
jae
jmp
cs
xor
inc
dec
hlt
mov
shl
mov
push
inc
sbb
arpl
rol
(bad)
and
outs
inc
std
mov
inc
or
add
dec
mov
push
daa
rol
adc
rcl
mov
enter
nop
inc
mov
mov
push
adc
dec
clc
xchg
mov
jl
lock
xor
mov
aas
repnz
add
out
aas
dec
pop
lds
iret
add
or
hlt
add
inc
sar
or
inc
shr
add
inc
nop
jno
inc
adc
or
and
and
adc
adc
inc
sar
add
mov
lock
sub
ins
or
inc
push
ret
dec
ss
pop
mov
loop
dec
fmul
inc
or
add
rcl
jle
ja
sub
jno
xor
add
retf
rol
dec
loope
xchg
sub
and
or
add
and
push
in
xor
adc
jmp
nop
xor
in
iret
adc
loopne
adc
mov
icebp
lods
xor
cmp
jo
std
ret
(bad)
aas
adc
xchg
sub
and
nop
repnz
ins
xchg
adc
sbb
inc
dec
sub
jmp
add
add
adc
adc
jae
sub
cwde
in
enter
dec
inc
stos
or
and
push
or
fdivr
jl
dec
aaa
shr
sub
inc
dec
add
jle
jo
adc
adc
aam
aam
imul
das
inc
adc
add
out
les
les
jo
inc
inc
lock
addr16
ret
jecxz
or
bound
cmc
dec
adc
movs
arpl
ror
adc
pop
pusha
das
dec
les
cdq
sub
or
in
clc
iret
pop
xor
mov
and
in
adc
mov
pop
(bad)
cli
dec
jo
sbb
lods
cmp
xor
ds
cwde
add
push
mov
lods
les
and
jge
shl
mov
mov
sub
div
inc
les
loopne
sbb
rcl
(bad)
jmp
mov
mov
std
ret
xor
mov
sub
retf
add
or
rol
sbb
fs
dec
sub
inc
push
fs
lds
add
jecxz
push
call
inc
add
js
mov
dec
cld
add
add
cmp
fs
add
loopne
(bad)
(bad)
sti
inc
adc
adc
mov
add
adc
std
lods
jo
dec
cld
ret
add
pop
and
rol
loopne
mov
jo
inc
mov
mov
adc
xor
cmp
inc
rcr
jo
sub
jmp
mov
mov
sbb
mov
inc
add
push
mov
sub
xchg
cmp
nop
loope
and
cmp
and
jbe
and
xchg
loopne
and
mov
add
inc
xchg
loope
addr16
add
retf
jp
add
hlt
enter
lock
pusha
and
out
mov
sysret
lods
and
mov
push
xchg
or
inc
adc
or
xor
jle
sbb
push
add
sbb
or
cld
inc
sbb
adc
js
or
sbb
sbb
pop
sbb
push
ret
push
add
sub
lea
sub
inc
adc
rol
and
fadd
rcr
or
push
and
add
pop
inc
test
int3
inc
add
mov
adc
loope
xchg
shl
fs
xchg
inc
dec
in
sbb
stc
retf
xor
xlat
pop
dec
sub
adc
aam
push
sub
fcmovnb
adc
(bad)
xor
popf
cmps
and
or
mov
int
push
mov
inc
pushf
inc
xchg
clc
add
fsub
(bad)
pop
add
jbe
loopne
sub
dec
add
sbb
inc
cld
pop
hlt
pop
xchg
xchg
inc
or
pop
call
inc
or
clc
nop
rol
(bad)
adc
adc
cld
add
popa
test
add
lock
and
rcl
xor
dec
jl
add
jo
or
xor
xchg
sub
adc
or
push
nop
push
inc
in
rcr
cmp
or
or
pop
or
rcr
cmp
xchg
cmp
adc
test
cld
addr16
pop
adc
sbb
loope
add
adc
xchg
inc
jmp
push
aam
packuswb
xchg
fadd
adc
ret
cwde
lds
mov
add
ror
add
or
ins
add
dec
inc
adc
inc
sbb
cdq
stos
sbb
test
or
pop
aaa
mov
or
add
fadd
jbe
jno
dec
les
clc
std
xchg
icebp
push
sub
add
cmp
or
jge
inc
outs
lock
and
xchg
pusha
lds
sub
add
add
test
je
push
outs
or
jae
inc
adc
add
dec
xchg
jg
xchg
pop
js
ss
lock
mov
or
neg
sbb
inc
cmp
std
stos
and
push
enter
loopne
jmp
xchg
pop
adc
les
inc
sbb
js
pop
or
lock
cmp
jg
and
mov
retf
(bad)
or
jb
loop
pop
add
inc
adc
jns
and
enter
retf
cmp
xchg
pop
ret
nop
push
das
mov
xor
xor
and
push
cmp
retf
arpl
repz
mov
add
loop
xor
lock
repnz
cmp
lea
fcomp
js
nop
push
inc
sar
aas
retf
jg
mov
xchg
pop
icebp
or
pushf
pop
enter
cmp
xor
fimul
jle
pop
rcl
outs
sub
xor
sahf
jbe
mov
inc
mov
push
lock
cmp
adc
mov
mov
push
fistp
lods
push
pop
fs
cmp
aam
pop
xor
push
and
loopne
pop
(bad)
loopne
inc
inc
je
adc
movs
xor
pusha
xchg
rcr
mov
inc
or
add
inc
popa
or
fstp
hlt
rcr
nop
and
push
ficom
add
jo
inc
push
div
int3
fiadd
fdivr
push
mov
sbb
push
and
add
dec
dec
mov
adc
cld
pop
cmp
xor
cmps
sar
add
hlt
ror
push
je
imul
xlat
mov
ffree
sub
xor
arpl
dec
push
movs
mov
sub
les
(bad)
mov
push
(bad)
pop
jne
dec
xlat
test
cwde
(bad)
sbb
nop
mov
sbb
in
ret
adc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
aas
jg
mov
mov
inc
hlt
daa
inc
ret
dec
mov
clc
inc
loop
inc
mov
inc
push
cmp
push
xchg
mov
aas
cmp
rcl
dec
add
int3
mov
test
aas
or
add
fcomp
lahf
nop
pusha
lods
push
std
stos
pusha
jmp
xchg
jg
test
adc
xor
sub
pop
push
lea
jns
pop
retf
add
mov
bound
xor
push
adc
adc
xchg
xchg
jg
xor
rol
dec
add
jecxz
aas
sbb
cwde
jo
inc
call
xor
push
and
adc
mov
clc
out
dec
aas
sbb
loopne
and
adc
lahf
jnp
sub
inc
mov
int3
cdq
jg
xchg
cld
fwait
mov
icebp
push
pushf
call
lahf
call
inc
cld
dec
mov
std
bound
inc
in
mov
xor
cld
mov
adc
pop
repnz
cmp
adc
rol
inc
add
xor
mov
add
sub
xchg
ret
add
xor
test
aas
jmp
or
addr16
add
retf
sub
or
ins
mov
mov
inc
pushf
add
inc
sbb
lock
add
int
(bad)
test
(bad)
xor
aaa
in
ret
add
dec
aas
dec
enter
dec
fs
ss
fidiv
stc
nop
add
sub
inc
add
fcom
fs
xor
outs
pop
mov
xor
mov
(bad)
cmp
cld
pusha
repnz
add
sub
(bad)
xor
mov
nop
add
dec
add
or
test
mov
cmp
and
dec
(bad)
push
arpl
or
das
pop
cmp
(bad)
ds
and
push
and
sub
or
dec
add
pushf
mov
xchg
scas
dec
repnz
sbb
(bad)
mov
inc
cmps
not
inc
retf
inc
fild
sbb
inc
in
sub
je
dec
stos
pop
sub
inc
lea
add
pusha
lss
stos
enter
mov
add
jl
mov
in
add
dec
bound
arpl
aam
ret
(bad)
aas
retf
jmp
call
mov
mov
adc
sbb
mov
addr16
mov
sbb
ret
xchg
or
(bad)
xchg
adc
mov
ss
mov
inc
adc
sub
rol
(bad)
push
or
in
xor
add
int
sbb
add
dec
dec
add
or
xor
xor
inc
je
pop
cwde
cmp
repz
mov
loop
sub
push
sahf
push
leave
lock
dec
jno
mov
ins
ret
xor
cwde
adc
inc
aam
xchg
or
outs
(bad)
push
dec
test
pop
cld
mov
inc
hlt
push
add
sbb
in
xchg
xor
test
fdiv
or
cmp
inc
aas
ret
mov
repz
sub
jge
jb
mov
jb
sub
aas
jns
push
add
ror
sbb
xor
or
jg
repnz
rol
push
fiadd
(bad)
push
add
test
adc
jl
cld
(bad)
cmp
mov
dec
rol
and
jmp
leave
jp
repnz
dec
mov
and
clc
xchg
scas
jo
dec
shl
jg
mov
inc
cmp
and
xor
pop
adc
jo
add
mov
xchg
add
pop
add
mov
outs
xchg
fadd
or
inc
and
pop
add
sub
sbb
jae
xor
inc
test
push
mov
lock
add
sbb
loope
aas
jo
adc
loope
pop
cld
ret
or
icebp
ret
mov
add
push
push
jle
mov
and
adc
cwde
dec
or
nop
mov
dec
or
mov
add
jecxz
xchg
(bad)
ins
pop
and
mov
or
or
test
inc
and
inc
cmp
fsub
pop
cdq
mov
mov
aaa
jo
loope
mov
sub
jb
and
push
or
add
mov
add
sub
pop
ret
sbb
fcom
daa
nop
aaa
sbb
sbb
pop
mov
popf
jmp
push
xchg
test
and
add
sub
push
cmp
nop
cmp
icebp
xchg
xchg
stc
jecxz
scas
xchg
(bad)
ror
das
call
and
ret
lock
mov
xchg
and
std
and
ficom
ret
mov
inc
hlt
pop
sub
ror
jne
add
sbb
jecxz
(bad)
call
lea
and
pop
test
xor
inc
pop
cmp
add
mov
adc
pop
out
inc
nop
pop
dec
les
push
xor
push
cmp
add
loope
jne
jmp
xor
inc
test
arpl
adc
and
push
lock
or
enter
popf
xchg
and
or
mov
pop
and
or
lock
or
jl
inc
add
enter
lock
jbe
pusha
add
and
pop
add
jp
pop
mov
or
jo
or
or
pop
loop
inc
cmp
sub
cmp
cmp
add
movs
loope
or
add
jo
add
dec
xor
mov
daa
add
or
rcl
mov
test
test
ss
xchg
inc
add
jo
jno
xlat
sub
add
add
adc
inc
sub
shl
or
push
rcl
nop
inc
adc
imul
inc
or
sbb
cmp
xor
in
adc
js
aas
pop
and
add
les
out
xor
jmp
ror
cs
add
add
xor
fild
inc
inc
and
or
dec
sbb
or
mov
push
dec
test
pop
arpl
aas
push
jecxz
or
and
inc
ja
test
cmp
or
or
mov
push
push
mov
xor
mov
pop
idiv
xchg
ror
mov
lods
or
sub
mov
push
sub
mov
pop
xor
mov
ret
popa
int
mov
in
pop
mov
add
add
and
jo
or
sbb
pop
inc
sti
push
inc
or
jmp
imul
pop
ficom
arpl
fs
call
loop
test
int
bound
xor
cwde
xchg
add
xchg
inc
je
mov
pop
loop
inc
mov
cs
and
push
mov
je
add
loope
clc
xchg
cmc
mov
or
repnz
cmp
jo
push
cwde
add
sub
add
pop
inc
or
in
or
and
sub
add
movs
lock
jle
imul
or
aad
pop
jno
lds
shl
test
mov
mov
stos
rcl
pop
in
(bad)
scas
xor
pusha
xchg
cld
and
add
sub
or
loopne
xor
inc
jp
jnp
repnz
mov
or
daa
pop
sar
adc
adc
inc
test
mov
cmps
sbb
or
fcomi
(bad)
cmp
sub
loopne
out
push
enter
out
mov
cdq
inc
(bad)
mov
pop
loopne
out
and
mov
outs
ins
add
mov
nop
xor
or
and
loop
mov
add
stc
add
or
inc
sub
add
add
or
add
or
mov
inc
jg
adc
pop
enter
or
int
and
(bad)
cmps
xchg
xor
hlt
aaa
call
outs
adc
and
out
repz
mov
inc
jg
jl
pop
mov
pop
mov
(bad)
js
adc
outs
fwait
mov
xchg
ins
mov
xchg
xchg
xor
enter
imul
daa
pop
sbb
mov
pushf
inc
mov
cs
xor
sub
jno
mov
push
pop
sub
les
adc
mov
lds
adc
add
lods
retf
mov
or
iret
sbb
mov
xchg
add
mov
(bad)
jne
or
fidivr
pop
in
(bad)
fcmovnu
xchg
or
jmp
bound
inc
test
popa
sub
and
xor
push
or
loop
in
nop
jo
sbb
and
arpl
enter
adc
stc
test
push
or
sbb
mov
adc
cmps
add
or
sub
iret
sbb
cmp
fadd
lock
vmread
mov
shr
mov
mov
sbb
inc
add
fs
imul
lock
int
test
sbb
push
into
aas
or
mov
lock
aaa
sub
mov
mov
and
push
jle
xor
adc
add
and
adc
dec
dec
adc
loop
adc
add
inc
rsqrtps
mov
and
add
and
jae
inc
push
sbb
ret
xor
and
mov
mov
pop
push
test
(bad)
xor
adc
rcr
add
aam
add
mov
nop
add
cmps
add
int3
or
movs
xchg
or
inc
add
cdq
or
xchg
sub
out
pop
adc
sbb
test
ds
retf
lods
jo
push
(bad)
loop
call
clc
dec
add
fdiv
(bad)
adc
or
nop
add
ret
scas
cmp
nop
aas
cmp
in
sbb
clc
xor
inc
or
sub
das
inc
mov
jns
xchg
and
push
sbb
stc
mov
sub
mov
or
sub
push
jecxz
add
fsub
xchg
cmp
das
xor
das
test
rcr
add
mov
(bad)
mov
add
jl
inc
jae
push
adc
and
loopne
or
stc
ret
inc
adc
test
inc
ins
mov
inc
lea
sahf
sbb
adc
inc
(bad)
cli
dec
adc
and
es
inc
add
pop
sub
inc
aam
in
loopne
lds
or
sub
add
nop
aad
ret
sub
mov
pop
xor
std
add
xor
cmp
(bad)
lods
or
inc
xor
pop
pusha
cmp
punpckhbw
out
rol
sar
cmc
or
int3
add
sub
jge
aam
in
lods
inc
stc
add
xor
add
js
inc
pop
add
(bad)
cmp
inc
mov
add
jl
int
sbb
prefetchwt1
inc
mov
mov
mov
mov
add
aam
iret
sub
adc
and
or
outs
and
loope
inc
sbb
idiv
arpl
jge
mov
adc
lock
add
mov
add
test
lea
mov
pop
push
jg
mov
xchg
call
les
int3
mov
dec
fsub
sbb
cmp
add
xor
xchg
rol
hlt
ret
add
adc
std
jge
add
ret
sbb
xor
mov
sbb
push
sbb
sbb
cmp
adc
or
rcl
inc
pushf
test
(bad)
sub
xchg
test
or
mov
psrad
nop
mov
adc
pusha
and
mov
aas
and
or
pop
mov
add
out
or
dec
popa
push
nop
hlt
push
aas
adc
xor
pusha
loopne
adc
shr
mov
adc
ret
adc
ret
dec
ret
mov
push
dec
aas
cwde
loopne
add
inc
cmp
icebp
add
adc
loopne
aas
ins
inc
cmp
sbb
and
and
adc
ja
aaa
fadd
xor
(bad)
push
add
fs
or
ror
push
inc
(bad)
into
lock
out
loopne
and
mov
loopne
ss
data16
bnd
xor
xor
aas
and
mov
inc
lea
scas
cwde
rol
inc
mov
lock
push
clc
xchg
aam
mov
xor
and
dec
je
call
imul
and
stos
dec
icebp
dec
or
sbb
sbb
push
bound
add
mov
add
xor
dec
pushf
push
push
mov
xchg
xchg
add
push
add
loope
mov
pusha
mov
mov
push
imul
mov
push
out
call
inc
sbb
test
repnz
and
pusha
lock
adc
adc
mov
test
jecxz
out
cmp
mov
repz
adc
test
cmp
mov
ret
dec
or
daa
add
or
ret
adc
dec
inc
adc
ror
push
mov
add
or
adc
inc
(bad)
fadd
adc
jge
adc
pusha
add
cmp
add
cmp
pop
shl
adc
dec
and
(bad)
test
add
stos
push
mov
cmps
popa
adc
add
cmp
or
or
cmp
adc
and
sahf
cmp
ret
out
loopne
inc
fadd
mov
and
mov
xor
in
aaa
sbb
push
ins
loop
add
test
fcom
xchg
rol
into
inc
sub
add
(bad)
ja
aas
xor
and
nop
xchg
push
adc
and
rcr
or
adc
adc
sbb
inc
sbb
and
adc
mov
add
pop
and
mov
adc
adc
test
sbb
adc
sbb
call
push
cmp
cmp
dec
loopne
cmp
inc
sbb
cmp
call
jns
sbb
(bad)
(bad)
js
dec
cwde
xchg
and
cmp
inc
or
mov
sub
push
jne
ret
sbb
cmp
ret
hlt
inc
call
arpl
xor
movs
push
xchg
aaa
js
mov
outs
cmp
jmp
push
clc
mov
loop
push
xor
xor
pop
cmps
cli
pop
push
sbb
stos
mov
retf
cmps
xchg
aaa
cs
nop
cmp
or
mov
cmp
icebp
lea
and
or
retf
push
les
in
pop
mov
jle
pop
sbb
dec
ins
aas
(bad)
loope
inc
test
lods
inc
jge
and
(bad)
mov
jge
xor
dec
inc
lds
out
push
cmps
pop
sbb
push
add
loopne
jg
rcr
mov
sbb
and
or
add
ja
sbb
jb
add
add
or
mov
inc
(bad)
push
mov
and
inc
sbb
push
xchg
add
lea
and
(bad)
clc
inc
mov
xor
sub
js
cmps
mov
sbb
add
jecxz
adc
repz
cmp
mov
push
add
fadd
cmovl
pop
and
int3
jo
xchg
mov
pop
cmp
inc
idiv
add
dec
fadd
mov
aas
les
add
ret
or
or
mov
test
sub
lds
les
and
inc
push
vrcpss
aaa
push
sar
dec
std
or
pop
dec
inc
add
and
add
or
inc
sub
add
add
or
add
or
mov
aas
jg
adc
pop
enter
or
and
and
div
and
loop
pop
add
(bad)
cli
cmc
xor
test
or
(bad)
fldenv
enter
lods
sbb
cmp
test
stos
(bad)
fnstcw
and
push
out
enter
mov
lock
ret
dec
dec
inc
and
sbb
pop
jge
add
test
loop
jmp
jno
xor
clc
mov
nop
ror
mov
ins
push
rcl
or
jp
add
(bad)
push
mov
pop
bound
sub
adc
push
mov
and
cdq
and
inc
cmp
hlt
mov
sbb
inc
test
inc
sbb
mov
sbb
xor
inc
adc
or
cmp
or
push
and
cmps
pushf
mov
loopne
mov
xor
xchg
sbb
sar
aaa
gs
cmp
cld
inc
mov
cld
rol
sbb
pop
movs
(bad)
adc
mov
aas
addr16
popa
inc
add
dec
ja
add
adc
or
ret
dec
icebp
dec
cmp
or
or
clc
xor
enter
rol
xor
rol
push
mov
fs
inc
sbb
int3
rol
or
sbb
mov
cmc
rol
or
pushf
popa
jb
adc
rol
xor
xchg
pusha
mov
clc
dec
and
sbb
mov
cmovns
add
mov
add
adc
or
mov
and
popa
and
nop
dec
adc
add
mov
and
bound
add
fs
xor
sbb
adc
nop
mov
and
cwde
xor
rol
test
(bad)
xor
inc
add
sub
(bad)
mov
aas
pop
lock
add
in
adc
mov
mov
clc
iret
add
(bad)
xchg
add
xor
imul
add
pusha
inc
add
adc
sub
dec
aaa
inc
cmp
test
sub
push
lods
shr
add
push
jae
xor
adc
in
int3
aas
movups
sbb
retf
inc
add
cmp
and
inc
hlt
cli
jae
xor
aas
shr
(bad)
xchg
or
das
cmp
add
in
push
mov
dec
(bad)
(bad)
lods
icebp
sbb
push
xlat
push
or
in
test
pushf
dec
xchg
inc
jl
repnz
fadd
push
hlt
stc
xchg
mov
or
inc
leave
ins
adc
or
adc
or
ror
adc
dec
or
mov
mov
movaps
ret
in
pop
or
test
repz
das
adc
int
adc
or
dec
test
clc
out
mov
and
adc
adc
dec
cmp
mov
xor
out
adc
jge
std
out
mov
sub
pop
inc
push
mov
add
int
xor
ret
push
inc
mov
inc
sbb
mov
push
jae
push
jge
jmp
sub
fmul
inc
push
cmp
(bad)
jecxz
iret
add
pop
ds
test
rol
or
mov
rol
adc
xor
add
or
adc
pop
ret
or
or
enter
mov
adc
(bad)
ins
adc
add
add
or
dec
hlt
stc
and
jmp
inc
add
inc
cs
add
adc
out
pop
push
mov
in
add
dec
lock
pop
mov
inc
lds
xor
sbb
xor
inc
pop
fadd
or
call
pop
fs
or
push
adc
xor
mov
push
(bad)
xchg
mov
adc
(bad)
cmp
pop
test
pop
(bad)
adc
push
fs
or
adc
and
or
rol
popa
or
inc
or
xor
pusha
add
nop
add
loop
and
xchg
sbb
inc
adc
mov
mov
adc
inc
or
sbb
push
inc
int
(bad)
add
adc
add
cmp
push
xor
test
mov
(bad)
js
bound
sbb
or
add
cmp
xchg
ret
aaa
cwde
and
rol
mov
dec
and
or
mov
movs
push
xchg
loope
inc
in
mov
xchg
(bad)
popa
dec
add
add
inc
and
je
or
cmps
int
jle
add
and
in
inc
push
add
and
push
test
dec
aas
push
mov
sub
push
enter
cmp
push
cmp
leave
pop
sahf
and
loope
push
xor
add
add
dec
rol
and
adc
ret
adc
rcl
push
push
pop
nop
enter
jno
adc
test
out
ret
aas
mov
ud1
inc
adc
loopne
lods
mov
adc
push
push
in
sbb
add
mov
sub
jmp
add
rol
sub
aas
mov
fsub
add
fdivp
adc
cmp
test
adc
cmp
mov
pusha
add
fadd
cmp
loopne
or
xor
or
add
rol
push
sbb
inc
add
mov
add
stos
push
test
add
lock
fadd
pop
call
cmp
rol
sub
imul
add
inc
mov
inc
fild
xchg
test
js
mov
cld
sub
sbb
add
push
mov
ja
and
test
test
loopne
jb
ret
mov
sbb
add
pusha
lock
sbb
js
mov
sbb
popa
jne
pop
and
inc
and
inc
in
fadd
jb
sbb
xor
mov
and
pop
inc
inc
or
or
inc
inc
inc
sub
adc
call
mov
adc
add
cmp
ror
mov
mov
stc
add
and
cs
jecxz
es
cmp
mov
add
lahf
sti
in
xchg
mov
gs
or
inc
arpl
scas
clc
ror
or
imul
mov
mov
pop
movs
shl
ret
mov
nop
imul
cs
mov
(bad)
test
xchg
push
enter
(bad)
je
mov
test
push
push
mov
(bad)
popa
mov
inc
dec
and
adc
xor
jg
sbb
and
mov
push
inc
xlat
add
mov
imul
imul
pop
xchg
fwait
aam
sub
add
jmp
lahf
fadd
push
pop
mov
mov
and
jb
xchg
pop
outs
add
popa
inc
iret
or
add
push
or
leave
inc
mov
cwde
inc
or
aas
pusha
lea
js
(bad)
adc
inc
xor
icebp
pop
lods
popa
or
pop
dec
xor
add
push
add
push
sub
je
pop
push
adc
adc
push
cmp
arpl
js
sub
test
mov
add
sbb
leave
add
shl
mov
gs
jo
outs
xchg
add
mov
out
in
jo
and
jo
dec
fsubr
add
js
pop
push
mov
sbb
push
in
pop
(bad)
push
enter
adc
jmp
loopne
and
or
in
jl
dec
repnz
pop
popa
enter
femms
loopne
hlt
jl
add
cwde
add
sar
adc
dec
inc
add
and
add
or
inc
sub
add
add
or
add
or
nop
mov
add
inc
loop
rol
outs
shr
rcr
ins
ficom
push
push
cld
dec
sbb
jb
rcl
mov
repnz
(bad)
jg
jb
ins
mov
inc
leave
fwait
(bad)
psubd
mov
test
xchg
add
adc
inc
mov
push
xrelease
or
jecxz
retf
add
in
xor
dec
jg
les
push
loopne
jg
pop
mov
push
aam
xchg
hlt
daa
push
ret
sbb
inc
or
add
mov
push
xor
movs
sbb
sbb
mov
in
pushf
and
not
popf
cli
out
push
test
push
inc
pop
in
stos
loop
inc
pop
or
sub
lock
or
xor
push
dec
icebp
loop
shl
aad
mov
adc
enter
xchg
add
inc
or
jmp
pop
jae
int
lock
loop
repnz
test
push
enter
xor
push
inc
adc
adc
(bad)
jp
lock
or
les
or
div
icebp
(bad)
mov
ret
dec
or
sbb
jno
pusha
jl
jno
add
xor
test
adc
fdivr
rol
adc
mov
jno
add
add
mov
pop
and
mov
sub
pusha
cmp
dec
clc
dec
push
fst
rol
and
sub
push
cmp
add
add
push
and
mov
add
adc
add
dec
add
sbb
fdiv
loopne
add
push
arpl
xor
adc
mov
loope
xor
inc
inc
mov
lea
loope
in
xchg
js
nop
dec
and
and
pop
sti
cld
rol
inc
xor
cmp
xchg
add
xor
and
add
inc
adc
sar
inc
mov
and
lock
push
jmp
aas
dec
test
add
push
lods
lock
loope
sti
pop
pop
add
int3
inc
in
imul
(bad)
and
sub
lock
pop
jne
rol
pop
adc
call
inc
push
push
inc
int3
inc
cs
loope
jnp
jg
sbb
adc
jge
cmp
add
xchg
jb
pop
inc
fs
add
int
rol
push
hlt
call
xchg
inc
pusha
btr
dec
popa
popa
mov
mov
adc
imul
cld
(bad)
retf
and
stos
int3
cmp
shr
fdiv
hlt
or
mov
test
xor
or
dec
in
pop
std
mov
xchg
or
or
inc
(bad)
inc
and
inc
or
or
mov
push
mov
or
inc
sbb
mov
lods
or
adc
inc
dec
aas
js
aaa
push
test
xchg
push
outs
or
loopne
scas
inc
addr16
or
call
(bad)
scas
pop
adc
mov
add
sbb
fcom
inc
leave
punpckhbw
add
cld
(bad)
xor
mov
pop
mov
cmp
sub
or
mov
add
inc
adc
hlt
out
jg
add
mov
xchg
lds
enter
and
cld
(bad)
mov
or
clc
(bad)
in
xor
or
mov
jno
adc
jecxz
xchg
sub
or
add
lock
add
xor
add
inc
loopne
xchg
sbb
or
mov
push
inc
adc
popa
sub
and
jo
aaa
les
or
js
inc
push
xchg
mov
pop
mov
jg
xor
inc
mov
or
enter
jo
inc
test
cmp
ror
jp
add
push
and
or
retf
icebp
add
enter
js
outs
pushf
jecxz
jno
add
push
mov
ror
mov
jle
mov
mov
les
jmp
inc
cmp
sbb
add
push
push
inc
invd
loop
and
dec
ret
ret
ror
push
test
and
adc
jo
sub
and
ret
retf
lahf
sub
and
sbb
ret
xor
push
mov
loopne
mov
movs
inc
or
loopne
inc
test
dec
mov
mov
std
ret
add
movs
inc
pop
ror
sbb
inc
adc
dec
out
and
pop
cmp
mov
xchg
xchg
adc
ret
ins
inc
or
add
repnz
movs
xor
inc
add
inc
or
cld
push
add
xchg
sub
je
push
mov
dec
adc
sub
xchg
sub
push
gs
adc
xchg
loopne
pop
dec
mov
pop
and
xor
dec
jmp
inc
add
or
sbb
mov
and
sub
xbegin
mov
out
add
(bad)
nop
test
loop
jmp
pusha
add
clc
add
lock
or
lock
push
mov
sub
or
mov
and
loope
push
fs
and
nop
ret
and
sbb
sub
mov
add
mov
or
push
push
fadd
xor
jne
sbb
bound
cmp
mov
ror
inc
test
aaa
shl
mov
fadd
call
jp
icebp
pop
dec
or
imul
arpl
mov
cmp
adc
arpl
xor
add
pop
add
outs
and
inc
mov
and
add
or
sbb
add
nop
ds
or
loopne
mov
mov
mov
scas
adc
push
loopne
sub
aad
adc
adc
ror
mov
sbb
enter
loopne
pop
mov
add
and
jno
inc
pop
adc
lds
movs
lock
sbb
and
ret
xor
inc
jmp
sub
cmp
mov
nop
sbb
mov
adc
mov
and
lds
movs
pushf
and
add
shl
and
xchg
mov
xchg
fs
jo
sbb
xor
jg
mov
aas
push
int
inc
pop
mov
inc
dec
std
sbb
mov
cmps
adc
shl
jne
dec
popf
aad
inc
add
inc
popf
and
and
dec
mov
push
xor
fadd
outs
xchg
das
cli
cmps
xchg
mov
aam
pop
clc
pop
adc
jmp
out
inc
adc
add
inc
xor
and
retf
jle
int
xor
jecxz
int
ret
xor
sub
add
pop
pusha
or
jbe
sbb
jmp
sbb
add
leave
xchg
mov
xor
dec
sbb
pop
push
pop
pop
ret
jg
adc
inc
and
scas
and
in
pop
adc
mov
(bad)
or
sbb
sbb
or
frstor
adc
inc
xor
mov
mov
(bad)
inc
or
cmp
add
cdq
aaa
sbb
call
test
or
and
add
or
inc
sub
add
add
add
add
or
inc
add
xchg
add
add
add
add
add
add
or
inc
rol
adc
rol
rol
or
lgdtd
sldt
add
popa
xor
sbb
aaa
add
test
add
add
push
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
cmps
add
or
jmp
(bad)
in
add
std
add
stc
add
dec
in
mov
sbb
leave
lods
push
js
loope
(bad)
aam
stc
imul
cli
mov
(bad)
std
push
mov
add
std
lds
jmp
xlat
xchg
(bad)
fld
lods
mov
mov
dec
add
fadd
cdq
bound
(bad)
adc
rol
je
(bad)
jbe
(bad)
std
sbb
aad
(bad)
rol
(bad)
clc
xchg
(bad)
cli
movs
cld
je
cli
les
push
test
add
xchg
or
(bad)
jmp
adc
in
(bad)
(bad)
add
push
sbb
int
std
sar
lods
add
cmc
add
clc
retf
(bad)
fidiv
jmp
cli
lods
add
add
in
data16
adc
mov
(bad)
test
(bad)
and
xchg
icebp
add
test
sti
fiadd
cmps
add
jmp
aam
add
mov
(bad)
out
add
(bad)
sub
mov
in
in
inc
cmp
fisub
mov
jb
sub
addr16
(bad)
mov
inc
adc
inc
ror
shr
nop
xchg
cwde
sti
pushf
add
pop
add
in
shl
cld
mov
(bad)
mov
test
adc
pop
pop
test
mov
ret
ret
mov
cld
jnp
(bad)
(bad)
and
xor
push
or
fwait
push
retf
cdq
bound
mov
shl
retf
std
fimul
(bad)
in
push
imul
out
(bad)
jmp
inc
(bad)
loope
add
aad
cld
mov
(bad)
in
mov
lds
loop
movs
jns
mov
push
icebp
popf
add
into
push
mov
(bad)
fiadd
(bad)
cmc
add
lods
or
repnz
add
repnz
(bad)
fld
cmp
retf
or
mov
and
test
dec
push
in
sbb
rol
hlt
hlt
(bad)
(bad)
mov
cld
lods
push
std
hlt
add
retf
lock
push
pop
mul
cld
mov
std
lock
rol
(bad)
repz
std
rol
pop
std
test
lds
lods
lods
lods
int3
popf
sbb
mov
sti
scas
add
stos
add
pushf
jno
lods
adc
mov
out
in
(bad)
out
enter
in
retf
or
scas
add
clc
idiv
mov
std
mov
stc
repz
scas
add
out
jmp
xor
shl
sub
sar
mov
retf
sti
lock
lods
push
(bad)
lods
cmp
outs
std
ret
lds
(bad)
out
push
(bad)
clc
xor
or
out
ret
imul
cld
retf
iret
push
jmp
adc
xchg
in
cdq
or
repz
repnz
iret
add
xlat
and
repnz
fiadd
stc
clc
add
retf
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
nop
pusha
mov
or
jno
mov
add
pop
not
xor
or
enter
test
pusha
cmp
dec
rol
or
mov
inc
xor
in
pop
mov
aam
loope
mov
adc
leave
gs
dec
and
hlt
dec
adc
cmp
es
inc
push
pop
sbb
sbb
call
std
cmp
mov
adc
mov
pop
or
xor
cdq
pop
arpl
add
retf
mov
dec
sbb
(bad)
fist
retf
and
push
lea
ret
inc
xchg
jg
inc
xor
adc
aam
add
push
stos
data16
ss
cdq
add
jae
mov
dec
fs
enter
push
mov
inc
jo
pop
adc
popf
mov
mov
inc
mov
stos
push
mov
and
cmp
add
call
test
enter
sbb
jbe
stos
push
dec
pushf
mov
mov
add
mov
dec
cmp
push
das
inc
rcl
inc
push
mov
loop
cs
xor
xor
cmp
xor
pop
mov
and
pop
inc
inc
sbb
or
push
or
pushf
xchg
inc
push
jmp
jo
xchg
sub
fs
jb
sbb
add
loop
dec
sbb
loop
xor
rcl
adc
(bad)
inc
cmp
dec
adc
push
ds
not
outs
inc
lock
dec
inc
jno
and
xor
movs
pop
dec
push
mov
cs
inc
rcr
sbb
mov
adc
loope
aaa
add
and
cmp
xchg
push
bt
fisubr
fwait
dec
sahf
add
push
push
xor
add
jno
jo
xor
leave
adc
add
inc
out
mov
pop
xor
inc
or
movs
pop
rcr
imul
bound
add
pop
xor
les
cmp
cdq
sbb
mov
sbb
movs
jb
inc
out
mov
pop
cld
xor
xchg
adc
rol
add
scas
adc
lds
es
push
imul
jge
cmp
and
sbb
mov
inc
mov
adc
dec
inc
adc
test
jns
xchg
outs
and
cmp
(bad)
clc
mov
xor
add
lock
dec
leave
popa
inc
push
lock
jo
adc
or
add
mov
push
pop
cmp
retf
test
and
and
adc
cdq
mov
mov
sbb
cmp
retf
mov
push
test
in
or
cmp
inc
add
add
or
pop
and
ja
inc
add
sub
sbb
idiv
and
inc
addr16
adc
adc
nop
add
inc
shl
mov
and
mov
bound
and
rol
gs
sbb
inc
jne
sub
stc
xchg
sbb
mov
out
dec
daa
mov
push
jo
push
or
sub
xchg
ret
jl
(bad)
ds
test
out
xchg
imul
push
and
or
mov
xor
sar
mov
add
cld
or
sub
es
fldenv
test
das
out
mov
test
xor
add
nop
mov
sub
sbb
xor
dec
dec
adc
push
xor
int3
jne
cmp
loope
cmp
inc
or
adc
and
add
mov
adc
sbb
add
test
popf
bound
mov
jnp
adc
mov
or
scas
mov
inc
adc
jo
or
jo
nop
push
sub
es
or
or
shld
xchg
or
mov
enter
adc
pusha
and
sbb
xchg
enter
popa
sahf
ds
addr16
out
mov
fsub
pop
pop
dec
or
and
cmp
pusha
add
or
push
push
add
xor
nop
push
sub
jo
arpl
jae
add
add
xor
add
mov
loope
jg
add
or
mov
jae
dec
test
push
pop
adc
sbb
mov
jnp
inc
or
pushf
add
fiadd
les
ret
dec
mov
ret
xchg
jo
(bad)
ror
rol
clc
loopne
popa
push
adc
push
push
or
mov
jecxz
loop
call
lock
lea
sbb
mov
or
add
or
js
add
nop
les
or
adc
or
push
loop
fwait
retf
je
ds
inc
push
push
and
pop
xor
or
adc
xor
and
push
ret
sub
xchg
mov
sub
mov
adc
pop
fistp
mov
inc
push
test
bound
jmp
inc
sbb
inc
mov
mov
add
sbb
inc
add
js
jmp
xor
or
add
add
adc
sbb
loope
fistp
shl
push
add
add
jge
and
pop
or
xor
(bad)
xor
lock
test
push
jmp
fcom
sub
jo
aam
add
mov
add
enter
add
sar
or
sbb
jle
shr
add
loopne
add
rol
sar
pop
adc
ret
fistp
(bad)
push
pop
xchg
jo
cmp
jecxz
inc
or
movs
ror
or
xor
(bad)
xchg
sbb
sbb
fdiv
and
pop
adc
outs
std
mov
dec
xor
sbb
or
push
pop
packuswb
mov
pop
or
xchg
xor
js
pop
inc
add
xor
jmp
add
mov
mov
mov
push
mov
push
push
mov
out
jb
or
ret
push
hlt
mov
lea
loope
and
add
lock
and
cmp
xor
sbb
test
inc
mov
xor
add
mov
dec
inc
add
test
inc
add
adc
dec
mov
(bad)
loope
and
or
add
stc
add
outs
add
add
add
add
or
add
or
or
test
aaa
and
test
jae
sbb
jmp
cmps
sbb
je
movs
xchg
inc
loopne
jg
adc
dec
js
enter
cmp
add
pop
dec
mov
inc
sub
jo
scas
add
dec
cmps
rcl
sbb
imul
or
push
push
mov
or
add
push
cmc
xor
cli
adc
and
adc
xor
loopne
and
out
fcomp
das
or
(bad)
hlt
jmp
into
(bad)
mov
stos
xchg
sub
and
adc
pop
pop
js
prefetcht1
and
fbld
jne
xchg
mov
dec
cdq
mov
jg
mov
xchg
imul
fstp
jg
adc
push
enter
cmp
les
push
(bad)
push
inc
jb
stc
addr16
repz
popf
mov
retf
pop
pop
popf
and
xchg
out
add
fs
or
sahf
adc
(bad)
adc
rol
hlt
dec
pop
clc
sbb
aas
adc
add
adc
aam
dec
add
add
stc
add
or
inc
sub
add
add
or
add
or
aad
mov
gs
out
les
sti
xor
mov
dec
pusha
scas
jg
adc
dec
js
aam
mov
addr16
test
repnz
cmps
sub
adc
mov
arpl
stc
iret
or
cmp
jo
inc
dec
mov
lds
adc
and
dec
xor
dec
cmps
push
shr
or
push
and
add
adc
add
jne
dec
xlat
xchg
and
enter
jno
add
jbe
sar
rcl
add
(bad)
fs
loop
mov
mov
sbb
(bad)
movs
push
sbb
add
pop
and
cmp
mov
sbb
jmp
and
in
push
xchg
adc
in
lahf
push
jmp
(bad)
addr16
xchg
jns
and
fisub
dec
adc
xor
sahf
add
dec
(bad)
mov
test
std
pop
scas
cdq
mov
inc
adc
dec
std
add
pop
or
std
cmps
pop
lea
add
add
or
inc
sub
add
add
or
add
mov
sub
popa
inc
add
adc
cmp
or
test
js
pop
adc
mov
and
hlt
xor
push
inc
das
and
popa
dec
pop
daa
pop
fs
jecxz
aas
xchg
dec
sub
gs
and
sbb
(bad)
test
cmps
push
or
sub
or
add
cld
jae
adc
cmps
push
sahf
push
int3
pop
mov
lods
adc
adc
cmp
push
(bad)
push
div
sub
and
call
mov
or
jne
xchg
stos
or
jne
repz
test
add
aad
cmp
popa
xor
and
ret
mov
xor
mov
lods
adc
or
ret
sbb
sbb
(bad)
out
cmp
inc
add
stc
add
or
inc
sub
add
add
or
add
sbb
mov
sub
popa
ret
adc
adc
cmp
add
xor
push
dec
and
jo
loopne
and
or
nop
test
pop
or
fmul
add
adc
xchg
mov
loopne
mov
dec
push
pop
sbb
mov
and
cli
lds
dec
push
pusha
xchg
inc
fimul
push
add
and
dec
(bad)
cmp
add
sub
imul
xor
les
aas
sbb
stos
mov
and
cmp
and
lahf
test
lock
rcl
aas
add
and
cmp
mov
inc
xor
(bad)
sub
add
jmp
cmps
pop
jmp
adc
xor
cmps
test
nop
mov
retf
add
retf
and
or
clc
fiadd
add
add
add
push
rol
rol
or
lgdtd
sbb
add
add
add
popa
xor
sbb
add
aam
add
ins
je
add
sbb
add
inc
cmp
popa
xor
xor
idiv
add
movs
add
rol
fiadd
fld
stos
(bad)
rol
jnp
or
imul
enter
add
stc
add
mov
movs
jae
std
mov
lds
(bad)
fadd
(bad)
dec
mul
mov
(bad)
sti
ss
cmp
fisttp
(bad)
loope
stc
cmps
add
out
(bad)
(bad)
(bad)
sbb
sti
retf
pop
(bad)
stc
mov
lds
stc
lods
add
repnz
mov
add
(bad)
adc
repz
call
(bad)
stc
pop
(bad)
hlt
xchg
movs
jbe
cli
mov
(bad)
inc
test
fcmovne
mov
mov
in
adc
scas
add
cwde
add
inc
jp
(bad)
out
dec
xchg
dec
add
cmc
mov
cld
sti
out
add
add
mov
jmp
aad
out
add
cli
retf
(bad)
pop
(bad)
lock
aad
(bad)
jmp
xlat
ret
or
repz
(bad)
and
inc
push
dec
setae
(bad)
jmp
add
mov
xor
retf
(bad)
mov
call
std
fld
add
or
leave
adc
jmp
add
pop
xchg
bound
(bad)
stos
add
add
aad
loopne
das
(bad)
in
std
rcr
(bad)
out
retf
(bad)
jecxz
rol
(bad)
call
(bad)
out
xchg
(bad)
fimul
in
out
std
fdivr
mov
icebp
jmp
add
stos
add
(bad)
mov
xor
sbb
or
lds
into
mov
(bad)
in
push
mov
sbb
int
cld
cli
icebp
(bad)
in
add
or
(bad)
or
in
sub
jmp
push
cmc
in
add
shr
movs
pop
jmp
pop
mov
add
aad
stc
mov
xchg
pop
push
mov
dec
(bad)
fild
int3
xchg
or
rol
std
retf
inc
pop
pusha
jp
into
add
sar
fld
hlt
mov
inc
add
rol
or
mov
std
mov
mov
std
fdivr
mov
int
add
out
(bad)
cmc
add
pop
repnz
push
cmps
jge
push
add
retf
add
in
cld
cmps
add
pop
xchg
push
or
fisttp
(bad)
repz
repz
pop
jmp
add
fstp
jmp
add
cmp
std
out
(bad)
jmp
std
retf
add
leave
add
stc
push
into
mov
mov
sbb
bnd
add
rcl
rcl
stc
repnz
repz
out
out
or
jecxz
(bad)
xchg
cli
mov
enter
fst
lock
sbb
movs
adc
fiadd
pop
add
test
xchg
or
cdq
add
jae
retf
sahf
or
aam
aad
mov
icebp
and
neg
cli
out
add
lods
inc
ret
mov
mov
cmps
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
cmp
pop
sub
enter
and
js
xchg
inc
dec
ret
sbb
xchg
xor
cwde
dec
push
bound
enter
and
and
dec
or
sub
jae
mov
add
bound
add
test
adc
inc
jmp
jns
sbb
nop
sbb
pusha
stc
mov
outs
mov
rol
test
jns
into
sbb
gs
nop
sub
out
fdiv
and
xchg
sbb
fmul
xor
test
sub
xchg
movs
xor
jns
jbe
je
in
das
add
jle
test
in
dec
sbb
je
mov
push
nop
xlat
scas
adc
outs
xlat
into
adc
or
inc
aad
dec
cmps
daa
call
xchg
mov
arpl
pop
mov
push
add
mov
inc
jb
cwde
push
mov
push
or
stos
ja
cmp
cmp
sub
hlt
xchg
push
std
cmp
pop
xor
sub
adc
sub
pop
push
push
dec
pop
ret
push
hlt
repz
add
cwde
adc
add
ror
mov
js
test
or
or
push
cmp
inc
adc
mov
xor
and
inc
adc
sbb
adc
push
shl
push
fdiv
dec
or
cmp
rol
xor
add
loope
jo
pusha
nop
cmp
cld
add
dec
xchg
mov
or
adc
push
js
es
sbb
dec
sub
cmp
rcl
fadd
rol
pop
jno
mov
inc
add
dec
mov
dec
test
fwait
and
adc
in
repnz
sbb
adc
mov
xor
bound
xor
xchg
dec
sub
rol
loop
or
push
add
and
int
sbb
loopne
sbb
pusha
inc
movlps
push
sub
call
or
das
add
mov
pusha
shl
push
or
sbb
dec
adc
jns
and
pop
repnz
jo
or
nop
and
mov
xchg
push
ret
sub
int
pusha
fsub
retf
pop
mov
sub
adc
js
mov
xchg
jo
sar
in
adc
add
sub
push
mov
pop
retf
pop
loopne
cmp
add
leave
dec
sbb
or
push
lock
jo
or
cmp
imul
sub
inc
adc
jae
pop
cs
jl
rol
ins
and
push
iret
xor
ftst
inc
mov
fwait
adc
or
loop
jb
sar
dec
mov
aad
ins
or
cld
lock
test
test
movs
mov
jns
fadd
mov
jmp
adc
or
out
js
dec
sub
lds
inc
mov
std
xchg
in
out
int3
add
das
push
add
adc
or
push
mov
pop
mov
dec
je
mov
pop
pop
xlat
fxch
stc
or
loopne
inc
or
daa
scas
or
and
aam
inc
sti
cmp
ficomp
push
push
imul
add
nop
nop
add
sbb
pop
jmp
pop
sub
adc
xor
sbb
adc
add
push
enter
inc
ins
xor
lahf
fdivr
out
pop
push
hlt
pushf
xor
fsub
add
loop
add
mov
adc
cmp
(bad)
out
pop
test
xchg
xor
cmp
rcr
inc
cdq
push
sahf
inc
cmp
add
das
pushf
call
add
call
add
push
jo
jb
rol
icebp
cmp
movs
mov
push
xor
pop
imul
pop
sahf
adc
mov
(bad)
mov
xchg
aaa
mov
das
pop
xchg
lea
pop
in
or
test
nop
add
dec
inc
inc
es
inc
add
inc
add
mov
mov
add
xlat
call
adc
inc
xchg
xor
or
dec
clc
add
xor
inc
sub
inc
and
addr16
or
adc
or
nop
push
cmp
ins
and
and
xor
test
cmps
call
xchg
movs
pop
sbb
xchg
dec
sar
adc
pusha
or
or
push
xor
ss
push
ins
push
xor
and
cmp
cmp
xor
add
(bad)
and
pop
mov
nop
add
test
inc
ins
loop
ret
sbb
and
xor
push
jb
cmp
or
loopne
push
and
movs
rol
mov
mov
ret
pop
inc
cmp
lock
mov
cmp
cmp
mov
das
into
ret
xchg
movs
ja
mov
out
adc
movs
fimul
not
adc
inc
adc
add
add
adc
sub
pop
jno
and
nop
fdivr
xor
shl
or
inc
push
adc
ror
add
push
fadd
ror
lods
es
rcl
test
inc
or
push
or
mov
mov
ins
add
bound
inc
xchg
sti
xchg
lods
gs
adc
popa
clc
inc
add
or
not
aaa
stos
enter
mov
mov
add
and
mov
xchg
fstp
rcl
sbb
loope
jmp
sbb
lods
(bad)
hlt
ror
mov
pusha
inc
div
shr
daa
les
rcl
add
jp
pop
and
inc
push
inc
add
jp
enter
push
cmp
inc
add
nop
loop
outs
icebp
push
push
cmps
add
(bad)
jo
add
jmp
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
jo
mov
add
sub
mov
mov
jmp
pop
sub
in
lea
dec
add
and
fsub
sub
retf
inc
add
pop
push
(bad)
retf
add
(bad)
pop
lea
inc
lds
and
(bad)
xchg
sbb
outs
sub
adc
ss
sbb
aaa
jmp
mov
add
in
xchg
mov
adc
dec
(bad)
enter
xchg
enter
dec
add
add
ror
xchg
fistp
adc
lock
adc
adc
push
call
dec
call
jl
(bad)
das
adc
inc
cmp
or
(bad)
call
int3
xchg
imul
inc
movs
and
xlat
scas
or
sbb
ins
jecxz
inc
mov
jb
sub
call
adc
and
add
or
inc
sub
add
add
add
add
or
pop
in
xchg
or
lock
mov
stos
adc
xor
pop
std
xor
mov
inc
add
xor
loopne
mov
mov
xchg
into
retf
dec
movs
and
mov
add
push
mov
data16
test
xchg
adc
popa
xlat
inc
and
jns
fmul
(bad)
xor
xchg
pop
fstp
sar
xchg
sbb
cs
jmp
push
jmp
test
repnz
imul
mov
inc
lahf
xchg
push
cmp
enter
std
retf
inc
mov
jl
pop
sub
daa
cs
push
push
adc
or
add
adc
repz
adc
cld
jnp
rcr
adc
xchg
xchg
sub
lock
adc
push
imul
xor
inc
out
xor
cmp
xor
sar
call
cmp
mov
lods
aaa
mov
sbb
out
mov
test
iret
jmp
add
sti
div
jecxz
xchg
jne
test
or
inc
sub
add
add
add
add
or
xchg
jecxz
mov
dec
enter
adc
xchg
and
call
cli
out
mov
and
xchg
or
xor
out
lgs
js
dec
enter
and
repz
push
xchg
js
lock
rol
aaa
rol
cld
push
xor
movs
cmp
add
xchg
mov
popa
adc
lods
mov
cmp
push
nop
xchg
xchg
push
ja
jle
and
call
and
push
mov
cmp
aaa
push
and
mov
or
call
jle
mov
add
call
or
mov
adc
test
add
test
add
mov
fdivr
outs
mov
sbb
ja
adc
pop
fcom
sbb
nop
les
xor
jecxz
lahf
dec
mov
aas
push
add
and
add
or
inc
sub
add
add
add
add
or
pop
in
xchg
or
lock
mov
stos
adc
xor
pop
std
xor
mov
inc
add
xor
loopne
mov
mov
xchg
into
retf
dec
movs
and
mov
add
push
mov
data16
test
xchg
adc
popa
xlat
inc
and
jns
fmul
(bad)
xor
xchg
pop
fstp
sar
xchg
sbb
cs
jmp
push
jmp
test
repnz
imul
mov
inc
lahf
xchg
push
cmp
enter
std
retf
inc
mov
jl
pop
sub
daa
cs
push
push
adc
or
add
adc
repz
adc
cld
jnp
rcr
adc
xchg
xchg
sub
lock
adc
push
imul
xor
inc
out
xor
cmp
xor
sar
call
cmp
mov
lods
aaa
mov
sbb
out
mov
test
iret
jmp
add
sti
div
jecxz
xchg
jne
test
or
inc
sub
add
add
add
add
or
xchg
jecxz
mov
dec
enter
adc
xchg
and
call
cli
out
mov
and
xchg
or
xor
out
lgs
js
dec
enter
and
repz
push
xchg
js
lock
rol
aaa
rol
cld
push
xor
movs
cmp
add
xchg
mov
popa
adc
lods
mov
cmp
push
nop
xchg
xchg
push
ja
jle
and
call
and
push
mov
cmp
aaa
push
and
mov
or
call
jle
mov
add
call
or
mov
adc
test
add
test
add
mov
fdivr
outs
mov
sbb
ja
adc
pop
fcom
sbb
nop
les
xor
jecxz
lahf
dec
mov
aas
push
add
and
add
or
inc
sub
add
add
add
add
or
pop
in
xchg
or
lock
mov
stos
adc
xor
pop
std
xor
mov
inc
add
xor
loopne
mov
mov
xchg
into
retf
dec
movs
and
mov
add
push
mov
data16
test
xchg
adc
popa
xlat
inc
and
jns
fmul
(bad)
xor
xchg
pop
fstp
sar
xchg
sbb
cs
jmp
push
jmp
test
repnz
imul
mov
inc
lahf
xchg
push
cmp
enter
std
retf
inc
mov
jl
pop
sub
daa
cs
push
push
adc
or
add
adc
repz
adc
cld
jnp
rcr
adc
xchg
xchg
sub
lock
adc
push
imul
xor
inc
out
xor
cmp
xor
sar
call
cmp
mov
lods
aaa
mov
sbb
out
mov
test
iret
jmp
add
sti
div
jecxz
xchg
jne
test
or
inc
sub
add
add
add
add
or
xchg
jecxz
mov
dec
enter
adc
xchg
and
call
cli
out
mov
and
xchg
or
xor
out
lgs
js
dec
enter
and
repz
push
xchg
js
lock
rol
aaa
rol
cld
push
xor
movs
cmp
add
xchg
mov
popa
adc
lods
mov
cmp
push
nop
xchg
xchg
push
ja
jle
and
call
and
push
mov
cmp
aaa
push
and
mov
or
call
jle
mov
add
call
or
mov
adc
test
add
test
add
mov
fdivr
outs
mov
sbb
ja
adc
pop
fcom
sbb
nop
les
xor
jecxz
lahf
dec
mov
aas
push
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
pop
in
xchg
or
lock
mov
stos
adc
xor
pop
std
xor
mov
inc
add
xor
loopne
mov
mov
xchg
into
retf
dec
movs
and
mov
add
push
mov
data16
test
xchg
adc
popa
xlat
inc
and
jns
fmul
(bad)
xor
xchg
pop
fstp
sar
xchg
sbb
cs
jmp
push
jmp
test
repnz
imul
mov
inc
lahf
xchg
push
cmp
enter
std
retf
inc
mov
jl
pop
sub
daa
cs
push
push
adc
or
add
adc
repz
adc
cld
jnp
rcr
adc
xchg
xchg
sub
lock
adc
push
imul
xor
inc
out
xor
cmp
xor
sar
call
cmp
mov
lods
aaa
mov
sbb
out
mov
test
iret
jmp
add
sti
div
jecxz
xchg
jne
test
or
inc
sub
add
add
add
add
or
xchg
jecxz
mov
dec
enter
adc
xchg
and
call
cli
out
mov
and
xchg
or
xor
out
lgs
js
dec
enter
and
repz
push
xchg
js
lock
rol
aaa
rol
cld
push
xor
movs
cmp
add
xchg
mov
popa
adc
lods
mov
cmp
push
nop
xchg
xchg
push
ja
jle
and
call
and
push
mov
cmp
aaa
push
and
mov
or
call
jle
mov
add
call
or
mov
adc
test
add
test
add
mov
fdivr
outs
mov
sbb
ja
adc
pop
fcom
sbb
nop
les
xor
jecxz
lahf
dec
mov
aas
push
add
and
add
or
inc
sub
add
add
add
add
or
pop
in
xchg
or
lock
mov
stos
adc
xor
pop
std
xor
mov
inc
add
xor
loopne
mov
mov
xchg
into
retf
dec
movs
and
mov
add
push
mov
data16
test
xchg
adc
popa
xlat
inc
and
jns
fmul
(bad)
xor
xchg
pop
fstp
sar
xchg
sbb
cs
jmp
push
jmp
test
repnz
imul
mov
inc
lahf
xchg
push
cmp
enter
std
retf
inc
mov
jl
pop
sub
daa
cs
push
push
adc
or
add
adc
repz
adc
cld
jnp
rcr
adc
xchg
xchg
sub
lock
adc
push
imul
xor
inc
out
xor
cmp
xor
sar
call
cmp
mov
lods
aaa
mov
sbb
out
mov
test
iret
jmp
add
sti
div
jecxz
xchg
jne
test
or
inc
sub
add
add
add
add
or
xchg
jecxz
mov
dec
enter
adc
xchg
and
call
cli
out
mov
and
xchg
or
xor
out
lgs
js
dec
enter
and
repz
push
xchg
js
lock
rol
aaa
rol
cld
push
xor
movs
cmp
add
xchg
mov
popa
adc
lods
mov
cmp
push
nop
xchg
xchg
push
ja
jle
and
call
and
push
mov
cmp
aaa
push
and
mov
or
call
jle
mov
add
call
or
mov
adc
test
add
test
add
mov
fdivr
outs
mov
sbb
ja
adc
pop
fcom
sbb
nop
les
xor
jecxz
lahf
dec
mov
aas
push
add
and
add
or
inc
sub
add
add
add
add
or
pop
in
xchg
or
lock
mov
stos
adc
xor
pop
std
xor
mov
inc
add
xor
loopne
mov
mov
xchg
into
retf
dec
movs
and
mov
add
push
mov
data16
test
xchg
adc
popa
xlat
inc
and
jns
fmul
(bad)
xor
xchg
pop
fstp
sar
xchg
sbb
cs
jmp
push
jmp
test
repnz
imul
mov
inc
lahf
xchg
push
cmp
enter
std
retf
inc
mov
jl
pop
sub
daa
cs
push
push
adc
or
add
adc
repz
adc
cld
jnp
rcr
adc
xchg
xchg
sub
lock
adc
push
imul
xor
inc
out
xor
cmp
xor
sar
call
cmp
mov
lods
aaa
mov
sbb
out
mov
test
iret
jmp
add
sti
div
jecxz
xchg
jne
test
or
inc
sub
add
add
add
add
or
xchg
jecxz
mov
dec
enter
adc
xchg
and
call
cli
out
mov
and
xchg
or
xor
out
lgs
js
dec
enter
and
repz
push
xchg
js
lock
rol
aaa
rol
cld
push
xor
movs
cmp
add
xchg
mov
popa
adc
lods
mov
cmp
push
nop
xchg
xchg
push
ja
jle
and
call
and
push
mov
cmp
aaa
push
and
mov
or
call
jle
mov
add
call
or
mov
adc
test
add
test
add
mov
fdivr
outs
mov
sbb
ja
adc
pop
fcom
sbb
nop
les
xor
jecxz
lahf
dec
mov
aas
push
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
and
or
add
add
dec
add
inc
add
add
popa
xor
sbb
xor
add
ins
je
add
inc
add
inc
dec
inc
cmp
popa
cmp
xor
idiv
add
hlt
add
fadd
dec
add
mov
repz
fmul
push
push
(bad)
rol
scas
lea
and
or
loope
cld
mov
cld
mov
call
stos
add
enter
add
sbb
out
cld
aam
ins
inc
or
rol
aam
mov
add
mov
cdq
pop
add
aad
call
pop
fcmove
xchg
(bad)
(bad)
cld
enter
push
mov
add
fdivr
std
bnd
pop
lds
(bad)
in
add
jmp
push
cmp
xchg
add
outs
push
retf
scas
jp
xchg
test
call
cs
cli
arpl
stc
js
std
add
mov
(bad)
dec
out
mov
(bad)
jecxz
mov
ror
std
jmp
add
movs
popf
mov
movs
push
and
clc
add
ret
or
xlat
cmp
test
cmc
bnd
ficomp
fxch
mov
cli
sar
retf
das
out
repnz
retf
cli
std
sar
(bad)
mov
scas
xor
add
lea
mov
enter
loope
mov
fdivr
mov
jl
cld
xchg
or
rcr
stos
jo
repnz
sub
in
cmp
scas
dec
(bad)
cli
mov
or
adc
inc
adc
xchg
xchg
repnz
jbe
aaa
mov
push
in
lods
mul
int3
mov
or
sahf
mov
retf
or
push
clc
sahf
imul
mov
adc
push
clc
add
fsubr
fidiv
mov
icebp
in
jmp
mov
xchg
fscale
in
mov
pop
das
jmp
mov
cdq
pop
adc
cmc
in
hlt
not
(bad)
movs
or
or
xchg
cs
cmp
cmp
ja
or
cmps
out
sbb
mov
clc
cli
loop
cmc
(bad)
(bad)
clc
or
aad
and
sub
lds
(bad)
fadd
sti
div
loopne
and
or
loopne
inc
inc
adc
jno
not
or
mul
shr
retf
loope
(bad)
lods
or
cli
div
and
fbstp
aad
(bad)
lock
sti
jmp
mov
clc
div
mov
clc
fadd
xchg
jae
fadd
(bad)
mul
(bad)
out
jp
or
fnstsw
or
cmp
mov
stc
cld
out
mov
add
std
(bad)
out
fidivr
pop
pop
push
sti
(bad)
stc
sti
cli
std
dec
inc
idiv
fistp
rcl
mov
stos
or
jge
jmp
fild
jmp
hlt
in
out
mov
out
ror
mov
in
out
mov
in
or
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
push
or
dec
pushf
dec
mov
mov
inc
arpl
dec
mov
push
push
sub
push
jmp
inc
push
std
mov
adc
ss
std
inc
xlat
test
cmp
dec
ret
and
mov
lods
cmps
retf
cwde
stos
dec
add
and
dec
sbb
mov
pop
mov
cwde
mov
or
push
pop
stos
dec
add
jecxz
inc
or
mov
cwde
mov
(bad)
lea
jno
ins
pop
pop
push
stos
push
adc
cs
icebp
inc
sbb
adc
in
sbb
pop
stos
push
sub
inc
pop
aas
iret
imul
or
sub
std
(bad)
jmp
mov
mov
or
pop
xor
inc
inc
or
(bad)
sahf
shl
inc
jmp
mov
fild
adc
call
or
mov
and
mov
add
or
inc
push
and
sub
xor
dec
jo
daa
test
inc
test
push
inc
inc
sub
inc
jg
add
sub
adc
push
push
ror
xor
or
gs
adc
pop
jo
xor
sbb
test
loopne
dec
clc
add
or
lods
lock
js
mov
or
add
sbb
pushf
jo
push
adc
push
add
mov
(bad)
lods
jo
movs
push
jo
lock
and
int3
mov
jae
adc
or
mov
mov
xor
adc
sbb
cmp
sub
ret
mov
lock
add
inc
inc
add
xor
inc
pop
push
inc
sub
mov
add
inc
das
mov
(bad)
retf
push
rcl
sub
sbb
pushf
repnz
or
test
jns
sub
ror
inc
cmp
adc
add
or
inc
or
loop
leave
cmp
lock
and
sub
in
mov
sub
popa
dec
pusha
std
nop
mov
and
sbb
xor
leave
push
(bad)
clc
add
push
push
in
shl
(bad)
loop
xor
mov
or
adc
sbb
xor
mov
or
(bad)
sub
inc
push
fsubr
rol
pop
or
rol
sbb
pop
sub
push
push
xchg
xchg
rcr
cmp
inc
inc
sbb
mov
lea
xor
or
add
adc
arpl
cmp
mov
shl
mov
or
add
lds
aam
and
jno
pop
jecxz
xchg
mov
mov
jno
add
push
retf
cmp
and
and
xor
dec
aaa
std
xor
mov
sub
in
mov
es
push
xor
stc
push
inc
mov
add
cwde
pusha
int3
or
cli
mov
sub
add
or
and
pop
dec
lods
jo
cs
mov
or
and
jl
or
or
mov
or
and
clc
adc
pop
push
test
rol
push
add
mov
ret
inc
adc
cmc
jle
add
pop
xor
adc
mov
cmp
loope
xchg
arpl
add
rol
and
mov
mov
push
loope
dec
rol
lock
jl
and
add
adc
mov
adc
jno
je
nop
add
test
sub
sbb
add
jo
and
pop
add
sub
xchg
inc
sbb
test
adc
mov
inc
xchg
mov
mov
mov
adc
mov
daa
je
add
loopne
push
nop
(bad)
jl
and
and
adc
pop
or
mov
mov
or
inc
dec
add
mov
test
add
pusha
add
sub
aas
push
pusha
les
mov
or
or
icebp
xchg
sub
pop
jno
xchg
nop
ret
imul
pop
shl
add
and
and
(bad)
or
mov
popa
retf
sbb
shl
and
adc
pop
adc
inc
dec
add
inc
sbb
push
and
and
adc
adc
pop
rcl
gs
push
iret
mov
jp
daa
fwait
stos
or
push
ja
inc
add
sbb
inc
sub
retf
loopne
fwait
push
inc
add
push
add
nop
ror
inc
pop
(bad)
mov
sbb
or
repz
inc
add
mov
add
xchg
hlt
inc
or
rol
mov
mov
add
xor
leave
sub
xor
mov
bound
push
add
push
fs
daa
test
sbb
nop
mov
add
push
nop
rcr
stos
add
in
hlt
stos
loop
int3
dec
push
add
sbb
or
sub
adc
adc
mov
mov
dec
pop
pop
add
enter
pusha
inc
mov
cwde
inc
pop
sbb
xchg
test
and
pop
imul
(bad)
fdiv
sub
je
add
xchg
push
dec
and
or
and
dec
cmp
dec
(bad)
adc
dec
xchg
or
jmp
cmp
mov
add
(bad)
cld
loopne
inc
mov
adc
das
add
sub
or
dec
cmc
add
lods
jb
dec
mov
cmp
fs
add
outs
popa
push
les
add
cmp
push
mov
xacquire
cmp
or
dec
pop
lahf
ret
ss
mov
sub
push
pop
or
rcl
or
push
ror
xor
and
sbb
mov
pop
loopne
sub
lods
pop
pop
sub
(bad)
xchg
pcmpeqd
or
cmp
(bad)
in
xchg
add
add
fcom
add
pop
mov
pop
push
lods
(bad)
(bad)
fidiv
jge
xor
xchg
or
adc
rol
je
nop
pop
mov
jb
sbb
sbb
adc
imul
add
(bad)
xor
adc
or
inc
and
xchg
in
mov
scas
mov
shl
inc
pop
fcom
mov
mov
xor
cmps
jmp
test
aas
stos
adc
add
add
inc
cwde
mov
add
inc
mov
adc
adc
int3
mov
sbb
out
sti
add
sbb
adc
or
sub
add
mov
or
shl
inc
and
rol
adc
push
mov
xor
mov
or
sub
adc
inc
mov
xchg
pusha
dec
nop
push
mov
cmp
sbb
inc
movs
inc
aad
cmp
fwait
add
sbb
pushf
mov
xor
xlat
in
push
scas
and
sub
adc
inc
or
test
shl
les
enter
mov
or
mov
jo
outs
or
cwde
inc
(bad)
ins
jmp
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
push
pusha
add
sub
addr16
adc
and
inc
add
enter
push
cdq
je
les
mov
mov
sub
loop
or
or
xchg
add
mov
mov
sub
dec
and
in
pop
dec
xchg
sub
add
je
nop
sub
ror
movs
or
xchg
or
lods
loop
jns
or
cmp
(bad)
xchg
es
pop
test
js
aam
outs
sub
mov
and
jae
pop
mov
lds
cmp
sti
cmpxchg
push
call
or
ds
rol
xlat
popa
cdq
or
push
je
push
mov
push
xchg
dec
or
js
shl
inc
or
and
mov
or
push
outs
and
sar
mov
pop
push
sbb
(bad)
and
pop
or
std
in
sar
mov
xchg
dec
xor
test
mov
cmp
lock
movs
pop
cmp
jo
into
sbb
xlat
mov
test
xchg
std
or
sar
in
sbb
add
aas
cmp
lock
xor
and
std
jecxz
add
push
sar
dec
adc
add
aaa
sbb
push
jecxz
jecxz
jo
pop
shl
sub
and
shl
pusha
or
rol
dec
stc
loope
inc
jecxz
xchg
rol
xor
or
dec
and
or
xor
pop
sub
or
out
in
adc
adc
and
jle
mov
xchg
int
add
push
add
aas
arpl
sar
sbb
shr
and
adc
inc
xor
cs
push
dec
adc
and
pop
cmp
add
out
les
xor
dec
mov
cli
pcmpgtb
repnz
dec
js
push
inc
and
or
xor
add
out
clc
or
add
shl
sbb
sub
sbb
xchg
mov
in
aas
enter
xor
ja
loope
sub
sub
pop
inc
add
repnz
adc
mov
add
sub
xor
inc
jmp
sub
rcl
repz
(bad)
icebp
(bad)
mov
and
adc
jno
add
xchg
xor
sub
inc
test
jg
adc
and
mov
mov
inc
and
dec
shl
lods
je
ret
mov
or
xor
sbb
jg
xchg
inc
into
or
mov
add
add
jae
(bad)
adc
mov
mov
push
jo
aaa
fimul
mov
imul
push
pushf
pusha
fiadd
add
add
pop
cmp
js
add
(bad)
or
out
fnstenv
and
pop
arpl
mov
add
mov
inc
adc
in
sbb
add
loopne
fild
sub
icebp
add
xchg
mov
nop
or
xor
add
inc
ja
xor
or
jl
mov
nop
jg
push
cmp
sub
add
stc
add
or
inc
sub
add
add
sub
add
or
scas
sbb
push
dec
push
add
xchg
and
pop
cmps
and
or
inc
dec
mov
mov
add
sub
mov
inc
push
dec
repnz
enter
push
add
fbstp
call
xchg
or
jmp
test
jae
das
push
aas
imul
dec
pop
push
pop
jp
sahf
mov
je
mov
inc
add
jae
bound
test
mov
retf
or
loope
inc
or
mov
xchg
push
mov
cld
sti
das
lock
scas
cld
sti
adc
push
jecxz
jmp
sub
outs
pop
das
push
mov
test
xchg
inc
int3
rcl
and
inc
push
les
lods
sbb
arpl
outs
xor
cmp
rcr
lea
js
test
cmp
jmp
xor
test
pushf
gs
popa
je
and
outs
loopne
push
add
cmp
inc
loop
and
pop
mov
add
jl
inc
sar
dec
xchg
loopne
(bad)
int3
xor
or
or
add
or
push
inc
push
outs
aam
dec
aas
jecxz
clc
pcmpgtb
push
fs
and
xor
in
dec
pop
call
repnz
xor
sbb
dec
js
jo
xor
cld
xor
push
and
outs
pop
rol
or
adc
xor
and
adc
xor
mov
mov
mov
inc
fld
rcl
aas
std
inc
and
pusha
inc
add
cmp
mov
lock
xor
adc
and
lds
clc
sbb
mov
or
dec
pusha
popa
daa
add
cmp
add
and
inc
inc
mov
cdq
and
mov
add
or
dec
inc
jecxz
cmp
or
pushf
mov
stos
inc
daa
push
and
rol
loope
add
stos
inc
adc
adc
dec
or
add
or
adc
dec
push
mov
test
mov
mov
pop
push
lods
inc
push
and
(bad)
adc
shr
jl
add
inc
aad
hlt
fiadd
pusha
add
xor
adc
aas
jecxz
aaa
add
mov
ds
pmulhuw
or
adc
adc
cmp
and
ret
jbe
add
(bad)
lods
push
add
or
xor
pop
push
std
inc
aam
out
test
xor
push
jo
and
movaps
iret
cmp
dec
call
lea
iret
movs
inc
test
in
inc
in
push
pop
adc
and
xor
ret
aaa
mov
mov
cs
test
inc
(bad)
stc
push
adc
or
js
add
xor
arpl
cmp
and
add
movups
sub
into
fdiv
cvtpi2ps
mov
mov
ds
sbb
or
cmp
out
cli
aas
sbb
push
ret
add
imul
add
push
ss
bound
cmp
stc
dec
jno
inc
pop
sub
loop
pushf
or
push
add
std
fld
cld
or
out
cli
mov
cmc
pop
add
jl
bnd
cld
sub
jbe
add
repnz
adc
xor
adc
rol
add
or
nop
push
(bad)
loopne
mov
sbb
sbb
or
and
shl
sbb
xchg
ror
pop
push
inc
ss
add
mov
adc
inc
dec
add
mov
add
and
add
or
inc
sub
add
add
daa
add
or
add
or
scas
push
rol
pop
adc
movnti
adc
push
scas
cmp
mov
lock
add
add
les
aas
pop
add
mov
sub
and
rcl
jb
inc
jl
sbb
fldcw
xchg
cs
ds
mov
pushf
pop
or
and
mov
mov
xor
retf
add
inc
pop
push
sub
mov
dec
mov
mov
adc
inc
test
sub
arpl
(bad)
loop
cwde
and
mov
cli
jge
(bad)
mov
and
sbb
and
enter
mov
loope
inc
test
pop
and
dec
in
xchg
int
mov
sbb
sbb
pop
lea
push
add
dec
inc
cmp
mov
push
adc
outs
pmaddwd
cwde
mov
movs
pop
addr16
retf
xor
js
push
xor
aaa
loope
adc
jnp
xchg
jb
sbb
inc
or
cwde
ror
jl
cmp
lar
enter
dec
cld
jecxz
xchg
sub
lock
xor
and
std
jecxz
add
push
push
sub
cwde
add
add
cld
arpl
aas
mov
or
mov
adc
and
add
mov
add
les
jecxz
xor
and
add
inc
or
dec
mov
or
sub
or
out
in
adc
adc
adc
jle
mov
inc
add
popf
movs
nop
out
and
add
add
std
add
inc
sbb
dec
inc
and
and
xor
push
xchg
mov
pop
push
icebp
test
pshufw
dec
movs
cli
fwait
inc
xor
repnz
dec
js
push
inc
and
enter
and
lods
or
push
jl
rdpmc
call
or
lods
movs
retf
cwde
xor
adc
mov
in
ret
mov
mov
clc
mov
add
aas
retf
retf
lods
add
sbb
shl
movs
add
or
(bad)
lods
xchg
(bad)
and
lahf
jl
rcl
lods
or
or
push
or
test
mov
mov
gs
add
iret
add
inc
or
mov
data16
dec
add
or
movs
inc
add
rol
sbb
or
rcr
mov
mov
sub
xor
(bad)
int3
jbe
or
test
inc
test
pop
repz
adc
adc
dec
nop
or
xchg
rcl
mov
and
adc
enter
adc
pop
or
jns
mov
add
cwde
dec
adc
mov
lock
push
outs
jge
in
stos
inc
ror
inc
pop
dec
lds
push
test
mov
xor
pop
sbb
jg
inc
pop
loopne
push
out
daa
mov
mul
xchg
jle
call
add
or
inc
sub
add
add
sub
add
or
scas
sbb
push
dec
push
add
xchg
and
pop
cmps
and
or
inc
dec
mov
mov
add
sub
mov
inc
push
dec
repnz
enter
push
add
fbstp
call
xchg
or
jmp
test
jae
das
push
aas
imul
dec
pop
push
pop
jp
sahf
mov
je
mov
inc
add
jae
bound
test
mov
retf
or
loope
inc
or
mov
xchg
push
mov
cld
sti
das
lock
or
inc
and
or
adc
sub
add
mov
ja
inc
movs
adc
hlt
xchg
xchg
test
sar
clc
jp
mov
outs
jbe
mov
xor
xchg
cmp
in
fild
and
mov
sub
(bad)
push
xor
repz
sbb
push
sbb
push
sbb
jmp
aaa
and
xor
fistp
das
mov
xor
push
push
movs
push
enter
in
add
mov
or
clc
sbb
push
retf
aas
iret
push
cmp
jb
adc
cwde
movhps
test
mov
loope
dec
or
mov
lds
icebp
unpckhps
ror
wbinvd
cmp
rol
(bad)
dec
pop
cmp
adc
xor
ror
jmp
and
add
cmp
push
add
push
movs
mov
pop
pop
cld
jae
adc
push
mov
sub
add
iret
sub
jo
or
in
jle
add
adc
adc
sysret
pop
pusha
repnz
(bad)
in
push
push
cmp
in
jmp
movhps
sub
xchg
sbb
test
or
inc
ror
sbb
xor
add
or
enter
adc
stos
or
add
dec
adc
adc
add
push
mov
nop
js
test
iret
sbb
xchg
arpl
add
jnp
add
xor
je
popa
test
ja
fwait
enter
hlt
or
sub
fdiv
movs
rcl
or
inc
inc
adc
push
add
(bad)
lock
and
cmp
sti
mov
and
dec
aaa
xchg
adc
test
jae
into
xor
and
sbb
ds
inc
add
rcr
int3
sbb
add
mov
rol
xor
adc
push
or
lock
push
movs
and
pop
cmp
mov
fcom
dec
test
mov
jecxz
fisttp
cld
mov
or
add
aas
pop
pop
xchg
pop
popf
pop
icebp
(bad)
adc
inc
xlat
or
and
cmp
arpl
xchg
dec
cmp
mov
push
cmp
add
adc
push
(bad)
nop
out
lahf
mov
stc
aas
jge
call
mov
enter
jle
inc
scas
dec
test
lahf
cwde
add
ret
inc
scas
cmp
adc
or
rol
je
jno
and
mov
and
jbe
and
cmp
add
add
sub
sub
stc
add
or
inc
sub
add
add
and
add
inc
dec
sbb
scas
push
rol
pop
adc
movnti
adc
push
scas
cmp
mov
lock
add
add
les
aas
pop
add
mov
sub
and
rcl
jb
inc
jl
sbb
fldcw
xchg
cs
ds
mov
pushf
pop
or
and
mov
mov
xor
retf
add
inc
pop
push
sub
mov
dec
mov
mov
adc
inc
test
sub
arpl
(bad)
loop
cwde
and
mov
cli
mov
jg
stos
fcomp
sbb
and
enter
in
mov
rcl
jecxz
pop
and
dec
in
xchg
in
lahf
xchg
retf
mov
shl
or
rol
xchg
xchg
lock
fnstsw
ds
rcr
adc
mov
dec
mov
das
aam
xor
mov
dec
xor
(bad)
out
cmp
enter
jo
jo
into
sbb
movs
pop
jecxz
add
sbb
or
or
rdpmc
xor
fnstsw
push
pop
and
push
cmp
jae
inc
in
adc
(bad)
cmp
add
mov
adc
push
xor
cwde
add
jo
aas
dec
cld
adc
aas
push
xor
ret
adc
adc
add
mov
aaa
ja
dec
movs
inc
inc
adc
loop
pop
jle
xor
pop
sub
je
inc
jns
popf
push
inc
push
pop
mov
mov
popa
push
inc
jle
icebp
dec
and
lods
add
ret
push
icebp
dec
aaa
or
stc
add
and
cli
(bad)
xlat
adc
mov
xchg
or
retf
inc
cmp
test
pop
sbb
arpl
inc
pushf
adc
aas
stos
push
push
sbb
adc
inc
adc
adc
or
fistp
daa
or
and
inc
mov
les
inc
cwde
clc
leave
ror
cmps
jmp
repnz
or
push
in
bnd
pushf
inc
out
and
inc
stos
push
rol
cmp
shl
add
std
mov
xor
inc
sub
sbb
mov
pushf
(bad)
cmp
inc
aaa
ins
adc
adc
cmp
xor
xor
sbb
push
sub
adc
inc
adc
cli
inc
mov
sbb
add
ror
and
and
or
inc
add
inc
add
adc
mov
mov
xor
inc
in
xchg
sbb
sub
arpl
adc
test
movs
mov
jnp
out
fnsetpm(287
sti
in
retf
adc
adc
or
mov
xchg
sub
fadd
enter
(bad)
mov
inc
sahf
aam
adc
add
or
inc
sub
add
add
daa
add
or
add
or
scas
sbb
push
dec
push
add
xchg
and
pop
cmps
and
or
inc
dec
mov
mov
add
sub
mov
inc
push
dec
repnz
enter
push
add
fbstp
call
xchg
or
jmp
test
jae
das
push
aas
imul
dec
pop
push
pop
jp
sahf
mov
je
mov
inc
add
jae
bound
test
mov
retf
or
loope
inc
or
mov
xchg
push
mov
cld
sti
das
lock
or
cmp
mov
pop
and
adc
pop
jl
shl
mov
pop
xchg
pop
mov
inc
sbb
dec
pop
test
xor
outs
shr
arpl
into
push
icebp
in
rcr
dec
jo
mov
cmp
push
repnz
pop
and
sub
xor
jg
xor
loope
cwde
push
std
outs
fsubr
jecxz
inc
dec
xchg
and
and
inc
sar
dec
xchg
loopne
(bad)
int3
xor
or
or
add
or
push
inc
push
outs
cwde
ror
xchg
inc
mov
xor
cmp
and
add
inc
dec
popa
inc
push
call
cmc
dec
sub
sbb
add
(bad)
and
push
ret
add
(bad)
adc
les
sbb
inc
pop
pop
mov
xor
push
call
and
(bad)
adc
inc
dec
lods
fsub
mov
mov
in
jne
xchg
and
(bad)
leave
or
or
loopne
aas
pcmpeqb
test
(bad)
jo
inc
pop
clc
sub
or
call
rol
or
pop
cmp
add
(bad)
aas
fdivr
iret
aas
seto
or
inc
es
xchg
dec
lods
nop
inc
aas
add
push
sbb
std
inc
leave
aas
sbb
adc
andps
mov
or
dec
bound
add
enter
add
popa
jmp
inc
js
shl
icebp
sbb
add
bound
push
popf
adc
or
sahf
mov
popa
add
add
or
sti
nop
mov
adc
aas
out
aad
add
and
push
jo
xchg
or
inc
in
sub
stos
fcmove
inc
fsub
jae
or
ja
ins
mov
sahf
or
or
sub
inc
fldenv
mov
in
stos
inc
fdiv
test
add
ror
test
pop
cs
ins
loopne
sbb
sub
xor
enter
adc
dec
add
repz
fisubr
or
xlat
adc
mov
xchg
ds
mov
inc
nop
xor
psubw
push
ins
loopne
or
xchg
clc
mov
xor
in
jl
adc
(bad)
movs
mov
retf
popf
inc
mov
xor
xor
adc
call
and
and
mov
addr16
cmp
jecxz
or
arpl
call
cmp
cmp
iret
push
fcomp
xor
aas
adc
test
and
adc
mov
add
lock
popa
test
loope
iret
adc
in
add
add
mov
stos
push
adc
mov
mov
add
sbb
add
pop
enter
inc
adc
or
add
stc
add
or
inc
sub
add
add
or
add
or
scas
push
rol
pop
adc
movnti
adc
push
scas
cmp
mov
lock
add
add
les
aas
pop
add
mov
sub
and
rcl
jb
inc
jl
pop
call
push
ds
mov
pushf
pop
or
and
mov
mov
xor
retf
add
inc
pop
push
sub
mov
dec
mov
mov
xchg
and
push
pusha
iret
adc
sub
push
adc
(bad)
sti
cmp
(bad)
sub
push
mov
in
test
add
pop
std
adc
mov
xchg
sbb
fisttp
cmp
xor
cmp
and
xor
dec
xchg
mov
cmp
(bad)
dec
mov
inc
retf
rol
push
mov
or
ins
jo
call
pop
jmp
mov
test
mov
out
jae
out
pop
call
test
adc
cld
ret
dec
cmp
jb
cmp
or
mov
and
das
cmp
add
lock
aas
cdq
std
add
inc
cmp
lock
xor
and
std
jecxz
add
out
cmp
mov
sbb
cmp
loopne
and
add
add
or
xor
icebp
xchg
or
das
fnsetpm(287
xor
push
call
rol
inc
jecxz
xchg
add
and
xor
xor
cmp
dec
jb
push
add
test
sbb
call
xor
loopne
sub
clc
jecxz
pop
push
popa
adc
or
cmp
add
pop
add
add
jmp
xchg
or
pop
xchg
pop
mov
add
cmp
les
in
jno
rcl
push
in
iret
and
or
inc
test
pusha
adc
inc
xchg
or
or
and
add
adc
inc
ins
adc
push
or
popf
or
test
cmp
sub
and
movs
add
add
add
out
xor
(bad)
lods
and
inc
ret
or
adc
inc
or
cmp
loopne
mov
adc
leave
popf
or
mov
push
xchg
add
and
jmp
xchg
lds
adc
sbb
fnstsw
inc
aaa
add
pusha
nop
aam
leave
jo
ds
int
or
xor
neg
or
enter
hlt
call
inc
sahf
mov
inc
in
sub
or
mov
ss
aas
je
loop
das
push
inc
sub
outs
in
jmp
jns
adc
and
xor
mov
inc
add
adc
sbb
xor
mov
pop
icebp
iret
cmp
(bad)
or
push
mov
mov
retf
adc
cmp
out
or
mov
sub
push
or
mov
repz
loope
mov
cmps
out
push
daa
loopne
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
scas
sbb
push
dec
push
add
xchg
and
pop
cmps
and
or
inc
dec
mov
mov
add
sub
mov
inc
push
dec
repnz
enter
push
add
fbstp
call
xchg
adc
cli
xchg
inc
xchg
test
jae
das
push
aas
imul
dec
pop
push
pop
jp
sahf
mov
je
mov
inc
add
jae
bound
test
mov
retf
or
loope
inc
or
mov
push
and
jl
neg
add
dec
cmp
mov
pop
and
adc
pop
adc
sar
(bad)
pop
pop
lods
dec
sub
das
and
ret
test
pop
movs
in
adc
push
mov
ret
add
push
cli
mov
test
fadd
icebp
dec
int
mov
and
je
into
or
mov
std
pop
(bad)
les
xchg
out
fild
(bad)
cmp
iret
dec
das
mov
xor
fidivr
std
mov
pop
into
and
aas
inc
or
mov
or
call
cmc
dec
sub
sbb
add
or
add
sar
mov
xchg
add
adc
xchg
xchg
xor
push
call
clc
mov
xor
xor
sbb
in
or
ror
dec
jns
fld
js
inc
aas
pop
xor
aam
test
xchg
mov
mov
lock
pusha
sub
loope
aas
cmps
sub
dec
sub
movs
xor
iret
cmp
call
and
inc
inc
or
mov
fincstp
(bad)
pop
jle
mov
add
or
mov
lock
or
rol
ss
mov
pop
lods
repnz
aas
call
icebp
iret
add
repz
cmp
xchg
push
push
test
or
inc
adc
cmp
stc
cmp
jmp
stc
in
int3
(bad)
pushf
pusha
sar
inc
adc
out
(bad)
push
mov
inc
add
ins
add
cmp
fld
add
test
nop
mov
sbb
sub
push
adc
in
stos
push
in
add
loope
inc
lds
pushf
cld
push
add
add
and
daa
pusha
mov
fnstenv
cdq
mov
dec
xchg
or
adc
jae
daa
enter
ds
inc
fs
addr16
adc
adc
inc
fsub
ret
out
imul
ror
adc
ror
ss
in
adc
adc
mov
push
adc
push
dec
sub
mov
stc
jae
ds
movs
inc
add
nop
inc
add
arpl
mov
fst
mov
xor
adc
xor
sub
mov
ror
les
mov
xor
retf
xchg
dec
les
add
ins
ret
or
jg
mov
mov
adc
bnd
sub
add
add
add
fadd
or
adc
pop
jmp
movs
inc
cmp
test
dec
ds
in
in
mov
aas
mov
or
nop
pop
mov
iret
and
loopne
fdivp
adc
mov
xchg
sub
add
and
add
or
inc
sub
add
add
add
add
or
add
or
scas
push
rol
pop
adc
movnti
adc
push
scas
cmp
mov
lock
add
add
les
aas
pop
add
mov
sub
and
rcl
jb
inc
jl
and
fldcw
xchg
cs
ds
mov
pushf
pop
or
and
mov
mov
xor
retf
add
inc
pop
push
sub
mov
dec
mov
mov
xchg
and
or
mov
xchg
cmp
scas
fcom
cmp
std
div
stos
jg
jle
pop
push
gs
test
jns
fmul
mov
add
jno
mov
(bad)
lods
shl
add
pop
pop
inc
int3
test
mov
add
sub
dec
nop
xor
pop
pop
push
ds
cld
lahf
inc
sbb
xchg
push
pop
std
jmp
loope
mov
cmp
test
pusha
xchg
or
mov
call
iret
leave
aas
dec
or
push
into
aas
fadd
push
retf
push
rcl
sub
popa
dec
aas
add
or
add
or
mov
jmp
adc
sub
inc
cmp
lock
xor
and
std
jecxz
add
out
cmp
call
sbb
rol
adc
mov
adc
mov
add
xor
aas
cmp
mov
push
jle
add
cmp
and
std
add
scas
shl
and
add
shl
inc
or
out
in
adc
adc
ror
and
add
add
(bad)
in
or
sub
iret
ud0
sar
push
inc
adc
in
adc
inc
xor
movs
adc
push
sub
dec
or
call
add
or
sub
or
add
inc
xchg
test
pusha
adc
inc
xchg
sub
mov
scas
xchg
repz
cmp
cld
repz
pop
push
loope
adc
sbb
add
pop
adc
push
je
add
add
mov
push
ror
xor
dec
and
mov
add
or
dec
add
aas
popf
in
das
add
lock
iret
xor
movs
repz
daa
dec
dec
adc
dec
je
shr
add
and
ds
and
popa
cld
xchg
inc
add
inc
or
add
cmp
aas
daa
and
(bad)
aas
stos
dec
in
unpckhps
test
cdq
dec
test
popf
adc
inc
inc
and
jns
clc
jl
inc
fisubr
and
or
stc
int3
jnp
inc
sahf
cld
jecxz
inc
and
bound
inc
sub
neg
adc
movs
adc
les
jo
aaa
inc
pop
std
mov
push
jbe
ror
fidiv
sti
std
test
jo
lods
clc
loop
inc
and
js
xchg
jg
rcr
stos
or
xor
popf
pcmpeqb
inc
or
inc
or
scas
pop
inc
add
in
std
repz
sub
and
aas
jo
push
ins
jmp
push
stos
into
and
fist
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
scas
sbb
push
dec
push
add
xchg
and
pop
cmps
and
or
inc
dec
mov
mov
add
sub
mov
inc
push
dec
repnz
enter
push
add
fbstp
call
xchg
adc
cli
xchg
inc
xchg
test
jae
das
push
aas
imul
dec
pop
push
pop
jp
sahf
mov
je
mov
inc
add
jae
bound
test
mov
retf
or
loope
inc
or
mov
push
and
jl
neg
add
dec
cmp
mov
pop
and
adc
pop
xor
test
daa
jg
pop
lods
dec
sub
das
and
ret
test
dec
test
adc
js
call
sbb
cmp
rcr
lea
ror
xchg
and
push
add
sbb
and
out
aam
add
out
(bad)
mov
sar
dec
push
loopne
(bad)
int3
xor
or
or
add
or
push
inc
push
outs
int3
test
inc
dec
mov
movhps
inc
add
cmp
push
xlat
aas
mov
repz
jne
push
mov
pop
inc
out
push
mov
mov
packsswb
stc
not
push
xchg
xchg
xor
push
call
clc
mov
xor
mov
lea
xor
lock
mov
std
and
jns
fld
rcl
aas
xor
inc
pusha
es
xor
sbb
and
(bad)
or
jns
lds
cmps
or
pop
and
mov
sub
in
repnz
xchg
push
repnz
ss
push
inc
into
aas
add
fs
or
cwde
pusha
int3
or
push
add
add
adc
adc
retf
xchg
adc
ror
test
fdiv
inc
add
inc
jo
jp
adc
jo
inc
xor
scas
(bad)
arpl
add
cmp
dec
or
rcl
rcl
jl
imul
and
daa
inc
leave
sub
mov
adc
aaa
mov
call
xor
mov
pushf
dec
add
add
adc
sbb
mov
inc
sub
xchg
iret
pop
loope
inc
add
cmp
ret
(bad)
jecxz
inc
lahf
add
dec
dec
dec
push
cwde
cmp
adc
aas
popf
fsubr
sub
add
sub
mov
pop
cs
and
icebp
add
sub
push
dec
and
(bad)
lods
jb
int
sub
test
test
inc
rcr
inc
pusha
xchg
cmc
push
call
int
jp
xor
adc
push
ins
pop
repnz
in
shr
(bad)
mov
adc
inc
test
mov
test
outs
loope
inc
mov
and
aam
push
pop
xchg
xor
cld
arpl
sub
mov
stos
cmp
fs
add
(bad)
cld
jae
sbb
aaa
cmps
jg
lds
pushf
mov
or
cwde
sti
inc
adc
dec
nop
sub
test
test
test
push
adc
hlt
push
push
mov
xor
in
inc
ds
adc
mov
loopne
ret
and
icebp
hlt
xlat
dec
pop
sbb
setbe
adc
pop
inc
add
(bad)
jg
jmp
add
add
ror
mov
add
int3
or
mov
mov
cs
clc
cmp
or
sub
mov
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
scas
push
rol
pop
adc
movnti
adc
push
scas
cmp
mov
lock
add
add
les
aas
pop
add
mov
sub
and
rcl
jb
inc
jl
and
fldcw
xchg
cs
ds
mov
pushf
pop
or
and
mov
mov
xor
retf
add
inc
pop
push
sub
mov
dec
mov
mov
xchg
and
or
mov
xchg
cmp
scas
fcom
cmp
std
div
stos
jg
jle
pop
push
gs
test
jns
fmul
mov
add
sub
mov
nop
sub
xchg
sbb
fisttp
cmp
xor
cmp
and
dec
lods
clc
xchg
add
mov
jnp
test
pop
push
repz
pop
(bad)
mov
sbb
test
scas
test
cmp
pop
mov
and
clc
inc
ficomp
push
xchg
gs
cld
and
jns
movs
push
into
aas
fadd
push
retf
push
rcl
sub
popa
dec
aas
add
or
push
cmp
sub
iret
adc
sbb
sub
push
cmp
jae
jnp
adc
(bad)
cmp
add
nop
jns
into
aas
and
lock
adc
dec
inc
and
ror
mov
clc
iret
cmp
icebp
xchg
or
ss
or
add
clc
add
cmp
pusha
loope
sbb
inc
add
sub
clc
push
mov
add
lea
retf
or
cmp
add
sbb
call
repz
push
inc
lds
fld
lock
daa
inc
or
add
add
jnp
inc
jb
sbb
inc
ss
call
add
sub
aam
or
pop
cld
and
or
nop
cld
add
pop
add
adc
push
inc
shl
ret
pop
inc
cmp
cwde
sbb
pop
dec
fwait
enter
and
rdmsr
add
inc
dec
sub
sbb
mov
in
repnz
popf
cld
inc
dec
or
push
jmp
add
(bad)
push
or
push
cmp
or
int3
xor
jl
add
cld
push
scas
aas
stos
push
nop
mov
test
inc
push
(bad)
inc
add
ror
inc
test
or
adc
and
mov
xor
and
or
hlt
inc
ret
mov
or
xor
sbb
jnp
rol
or
mov
add
push
or
add
arpl
(bad)
push
aad
into
emms
das
mov
push
jo
aaa
fimul
mov
imul
push
pushf
push
fiadd
add
add
pop
cmp
js
or
cmp
or
out
fnstenv
and
pop
arpl
mov
add
mov
inc
adc
in
sbb
add
loopne
(bad)
push
pop
test
sub
icebp
add
xchg
mov
nop
or
xor
add
inc
ja
xor
or
jl
mov
nop
jg
push
cmp
xor
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
shl
mov
mov
push
and
cmp
mov
stc
test
and
fcom
or
(bad)
imul
add
add
push
inc
jmp
xor
jl
(bad)
jo
addr16
mov
cld
ret
lds
xchg
add
pop
lahf
or
mov
mov
sub
mov
aad
es
loop
adc
jo
mov
dec
rol
(bad)
aad
sbb
aaa
push
xor
enter
imul
cmp
ret
test
xor
sbb
pop
add
fs
mov
rol
popf
mov
add
lods
mov
mov
aad
add
inc
push
mov
js
mov
adc
inc
repz
les
or
mov
call
cs
mov
mov
push
sub
mov
fadd
aad
lahf
in
lds
shr
aas
and
dec
test
xchg
xchg
add
je
mov
mov
lock
sbb
sub
xchg
push
inc
mov
or
rcl
add
loope
add
test
or
test
aas
cmps
mov
call
icebp
iret
or
movs
lods
sub
leave
es
inc
inc
or
js
dec
inc
add
and
or
adc
inc
mov
sbb
nop
aas
xor
push
rol
dec
icebp
icebp
bndstx
or
rol
(bad)
rol
cmp
jo
aas
movs
and
iret
xor
clc
xor
test
cmp
sete
add
and
cmp
lock
(bad)
sbb
cmp
loope
inc
fst
and
push
retf
cmp
xor
fmul
push
outs
loopne
nop
movs
cmp
and
or
loopne
lds
pop
loopne
inc
sub
call
in
and
clc
push
dec
sbb
jae
or
js
jo
xor
or
adc
mov
femms
lods
add
inc
pop
add
mov
mov
push
inc
or
js
mov
scas
push
and
and
dec
add
xor
add
xchg
sub
xor
and
rol
loopne
or
hlt
adc
stc
pusha
icebp
add
add
xchg
inc
dec
punpckhbw
les
cs
add
push
cld
jae
mov
and
mov
add
lock
rcr
add
pop
sti
jecxz
and
pusha
adc
or
or
aam
inc
gs
in
xchg
dec
lods
shr
aas
or
or
sbb
inc
add
mov
jo
or
or
lds
mov
dec
add
icebp
iret
cmp
inc
dec
adc
xchg
dec
inc
mov
mov
inc
cmp
rdpmc
pusha
jae
int3
adc
ud0
dec
add
adc
jmp
adc
aaa
jmp
loopne
sub
cmp
mov
add
dec
lds
daa
clc
arpl
inc
mov
mov
aas
ss
mov
xor
dec
push
int
add
ficom
add
in
les
push
jo
fcom
dec
inc
adc
sbb
shl
(bad)
sbb
dec
adc
mov
add
fwait
xor
inc
sub
add
test
pusha
pop
adc
jmp
push
pop
dec
fscale
push
sar
sbb
movs
and
inc
test
cld
mov
or
adc
into
cmp
lea
dec
and
and
push
inc
add
call
sar
add
xchg
icebp
sar
sbb
pop
add
push
icebp
dec
push
div
paddw
and
hlt
inc
daa
lods
lock
add
std
xchg
adc
and
push
(bad)
js
pop
aas
fadd
and
mov
inc
jle
mov
ret
ss
mov
mov
sbb
nop
or
test
add
inc
les
and
sbb
mov
loop
xchg
dec
mov
sub
ret
xchg
mov
push
push
mov
xchg
cmp
add
push
loope
aaa
hlt
pop
xor
adc
cld
(bad)
xor
and
pop
add
stc
xlat
and
adc
or
xor
xor
pusha
and
jmp
jg
and
adc
push
push
cmp
add
and
cmps
mov
and
adc
cs
repnz
push
fadd
and
cmp
mov
aam
sbb
inc
pop
ror
arpl
fisub
adc
lea
add
call
or
repz
add
or
push
cld
mov
aas
arpl
inc
outs
cmp
das
jmp
adc
add
test
and
lock
movs
add
sub
inc
pop
repnz
add
and
mov
rol
dec
lock
and
xor
psubq
sbb
loopne
add
aas
bnd
push
push
fs
push
push
add
mov
push
pop
mov
jne
int3
stos
sbb
ins
and
adc
pop
add
jle
xor
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
push
mov
pushf
cmp
mov
clc
pop
and
adc
and
jmp
xor
pop
das
xchg
rcl
pop
adc
hlt
cmp
mov
lods
jg
mov
or
lds
pop
adc
sub
and
jnp
loope
test
sbb
mov
pusha
pusha
add
and
stos
leave
push
mov
xchg
shr
jmp
add
lods
sub
fwait
jg
add
(bad)
addr16
pop
rcl
and
or
cli
adc
mov
pop
es
jmp
bound
loope
stc
test
adc
mov
push
mov
xor
retf
add
push
test
add
mov
call
inc
loope
add
jmp
int3
push
jbe
mov
(bad)
loop
test
inc
or
mov
and
mov
mov
and
inc
xlat
cld
jecxz
(bad)
adc
ret
cld
jecxz
and
rol
dec
call
sbb
xchg
inc
push
adc
cmp
or
inc
mov
adc
add
aas
js
nop
add
inc
mov
xor
arpl
mov
adc
and
mov
bound
inc
or
je
or
hlt
enter
xor
inc
jbe
adc
shl
jbe
aas
push
in
int
and
jnp
lock
cwde
inc
or
or
inc
or
adc
mov
es
dec
or
icebp
iret
adc
add
loope
adc
jecxz
repnz
sbb
adc
cwde
sbb
enter
aas
or
add
cmp
and
push
push
sbb
clc
mov
aas
cmp
bound
inc
adc
xchg
gs
cwde
add
add
mov
or
inc
and
inc
pop
mov
into
or
xor
push
add
pop
push
push
add
pop
pop
popa
add
xchg
pop
mov
mov
cld
mov
inc
or
fsub
sub
add
dec
mov
jo
(bad)
fwait
in
and
cmp
add
aas
dec
or
dec
inc
dec
add
cmp
adc
add
xchg
ret
popf
nop
dec
inc
sbb
rol
push
sub
add
mov
inc
sbb
aam
pop
fmul
(bad)
fsub
inc
adc
or
lock
and
pusha
inc
lds
ret
lds
adc
push
jns
rol
leave
fmul
add
dec
add
shl
jl
call
xor
js
iret
sbb
aas
int3
cld
inc
add
cmp
mov
inc
inc
cwde
and
iret
and
mov
or
ror
cmp
test
mov
stos
push
jo
adc
repz
jbe
fs
out
xor
icebp
dec
sub
push
movs
inc
xor
dec
sub
mov
movs
add
or
(bad)
lods
xchg
(bad)
popa
push
cmp
and
add
int3
xor
test
outs
push
or
test
mov
mov
out
sbb
aam
push
out
mov
add
cld
mov
sub
test
pop
add
push
aas
int
add
fisubr
nop
and
sub
shl
pop
jb
push
mov
add
int3
and
mov
adc
xor
mov
pusha
test
or
movups
jne
adc
sub
push
xor
dec
fs
fsub
push
inc
add
dec
sbb
mov
dec
daa
lods
loopne
adc
scas
add
lock
add
outs
and
and
test
aas
jb
and
imul
jg
pusha
or
jmp
mov
inc
pop
repnz
adc
add
and
cmp
xor
pop
loope
inc
dec
inc
and
sub
add
mov
sub
movs
pop
inc
sub
or
bound
add
ret
lock
je
loope
mov
retf
xchg
and
xor
xor
nop
(bad)
wrmsr
dec
xchg
push
fs
das
pop
leave
blcs
jmp
mov
cwde
add
out
push
int
mov
xor
clc
out
cwde
rcl
or
or
rol
(bad)
cld
(bad)
cmp
gs
or
cmp
add
adc
mov
lds
sbb
inc
pop
lock
and
sub
sbb
loope
jle
and
cmps
adc
out
cmp
or
xor
push
fisub
outs
shl
sbb
dec
sub
adc
in
inc
mov
adc
rcl
add
inc
jnp
test
aam
nop
mov
dec
or
push
mov
or
test
inc
data16
aaa
mov
and
and
add
or
inc
sub
add
add
sub
add
or
scas
sbb
push
dec
push
add
xchg
and
pop
cmps
and
or
inc
dec
mov
mov
add
sub
mov
inc
push
dec
repnz
enter
push
add
fbstp
call
xchg
or
jmp
test
jae
das
push
aas
imul
dec
pop
push
pop
jp
sahf
mov
je
mov
inc
add
jae
bound
test
mov
retf
or
loope
inc
or
mov
xchg
push
mov
cld
sti
das
lock
or
inc
and
or
adc
sub
add
mov
ja
inc
movs
adc
hlt
xchg
xchg
test
sar
clc
jp
mov
outs
jbe
mov
xor
xchg
cmp
in
fild
and
mov
sub
(bad)
push
xor
repz
sbb
push
sbb
push
sbb
jmp
aaa
and
xor
fistp
das
mov
xor
push
push
movs
push
enter
in
add
mov
or
clc
sbb
push
retf
aas
iret
push
cmp
jb
adc
cwde
movhps
test
mov
loope
dec
or
mov
lds
icebp
unpckhps
ror
wbinvd
cmp
rol
(bad)
dec
pop
cmp
adc
xor
ror
jmp
and
add
cmp
push
add
push
movs
mov
pop
pop
cld
jae
adc
push
mov
sub
add
iret
sub
jo
or
in
jle
add
adc
adc
sysret
pop
pusha
repnz
(bad)
in
push
push
cmp
in
jmp
movhps
sub
xchg
sbb
test
or
inc
ror
sbb
xor
add
or
enter
adc
stos
or
add
dec
adc
adc
add
push
mov
nop
js
test
iret
sbb
xchg
arpl
add
jnp
add
xor
je
popa
test
ja
fwait
enter
hlt
or
sub
fdiv
movs
rcl
or
inc
inc
adc
push
add
(bad)
lock
and
cmp
sti
mov
and
dec
aaa
xchg
adc
test
jae
into
xor
and
sbb
ds
inc
add
rcr
int3
sbb
add
mov
rol
xor
adc
push
or
lock
push
movs
and
pop
cmp
mov
fcom
dec
test
mov
jecxz
fisttp
cld
mov
or
add
aas
pop
pop
xchg
pop
popf
pop
icebp
(bad)
adc
inc
xlat
or
and
cmp
arpl
xchg
dec
cmp
mov
push
cmp
add
adc
push
(bad)
nop
out
lahf
mov
stc
aas
jge
call
mov
enter
jle
inc
scas
dec
test
lahf
cwde
add
ret
inc
scas
cmp
adc
or
rol
je
jno
and
mov
and
jbe
and
cmp
add
add
sub
sub
add
inc
or
add
add
dec
add
xor
add
add
add
popa
xor
sbb
xor
add
xor
add
add
xor
add
inc
cmp
popa
xor
xor
idiv
add
mov
in
iret
dec
add
(bad)
(bad)
(bad)
sbb
ret
lods
and
jbe
jmp
push
je
xchg
imul
(bad)
loope
mov
mov
rol
data16
std
daa
icebp
in
(bad)
mov
jae
fs
cmps
jns
into
int
std
(bad)
jns
mov
push
(bad)
jmp
(bad)
(bad)
jmp
stc
xor
cli
fdivrp
jmp
push
add
ror
iret
mov
ficom
mov
add
dec
cmp
(bad)
in
add
(bad)
in
mov
sub
cld
add
stc
add
out
(bad)
call
(bad)
jmp
(bad)
cmc
add
fcmovnbe
fxch
fdivr
test
icebp
pushf
push
(bad)
fnstcw
clc
repz
loop
fisttp
stc
stc
fdivrp
cld
mov
sar
mov
dec
(bad)
std
retf
add
retf
lods
aad
mov
pop
push
(bad)
fld
push
dec
push
hlt
mov
mov
pop
add
add
xchg
push
xchg
dec
add
scas
add
cld
(bad)
retf
and
cli
xchg
jne
cs
push
fiadd
(bad)
inc
xchg
lahf
push
dec
push
mov
add
call
jmp
mov
retf
sar
jmp
frstor
lea
(bad)
std
(bad)
(bad)
call
fldenv
in
or
clc
test
(bad)
adc
div
icebp
in
repz
stos
jg
fstp
mov
inc
dec
sbb
(bad)
cli
xlat
(bad)
loop
mov
icebp
add
(bad)
xlat
cld
test
add
mov
retf
cmp
stc
movs
add
out
fsubr
icebp
(bad)
stc
std
push
(bad)
inc
aas
xor
and
jmp
or
loopne
add
inc
jmp
mov
mov
test
xor
or
stc
(bad)
xlat
add
fild
sub
inc
out
out
sbb
out
iret
in
aam
aad
cli
cli
cli
std
ret
lock
out
sti
fadd
cli
cli
loopne
jl
outs
imul
jmp
jae
in
ffree
lods
cmc
jmp
std
sti
std
(bad)
(bad)
fdivr
sti
loopne
clc
cmc
in
xlat
repnz
div
(bad)
neg
div
stc
cld
cld
loopne
clc
fincstp
clc
fcomip
hlt
(bad)
fadd
push
pop
clc
mov
lods
outs
sbb
lods
sub
out
out
or
mov
jecxz
and
enter
cs
icebp
mov
in
jmp
leave
mov
shl
(bad)
in
jne
pop
inc
jmp
or
mov
jmp
cli
repz
out
add
aad
cli
aam
repnz
ror
stc
mov
push
sar
lods
es
sti
cld
(bad)
sti
std
in
into
cmps
aas
inc
ins
repnz
sbb
adc
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
lock
xor
add
jno
test
xchg
pop
ds
rol
xchg
sub
add
push
in
retf
mov
push
retf
xlat
and
push
mov
dec
arpl
push
sbb
pop
enter
inc
dec
mov
cdq
mov
adc
cmp
inc
or
jecxz
or
sub
int
or
push
adc
icebp
sub
es
scas
sub
addr16
add
add
cmps
adc
fcom
xor
aam
dec
pop
jmp
and
test
push
mov
mov
leave
xor
ins
adc
bound
jl
and
ret
add
inc
add
dec
lock
bound
repz
mov
dec
push
and
xor
stos
sbb
or
dec
sti
inc
outs
adc
(bad)
cmp
inc
xor
mov
retf
add
cmp
inc
rcr
dec
jnp
or
nop
inc
xchg
cwde
and
push
dec
push
ror
push
adc
shl
test
aaa
retf
cmp
add
fadd
(bad)
daa
jnp
rcl
inc
push
pusha
ror
jne
rol
das
jnp
lock
cwde
mov
inc
adc
ins
add
sub
inc
add
test
(bad)
xor
add
push
in
rol
cmp
mov
push
leave
jge
shl
inc
rol
je
ret
jnp
or
or
cmp
add
pop
add
and
mov
push
mov
xor
xchg
pop
mov
add
adc
and
sahf
pop
push
mov
jle
ror
add
nop
sbb
(bad)
aas
icebp
adc
mov
dec
or
mov
and
inc
cmp
jmp
fistp
push
dec
loope
or
hlt
mov
sbb
lahf
mov
adc
and
add
inc
or
aam
fs
aad
add
mov
add
and
xor
pop
push
xchg
mov
test
cmps
mov
imul
and
daa
or
frstor
xchg
iret
call
loop
dec
aas
cmps
test
inc
or
xchg
lock
data16
xor
sub
or
mov
icebp
ret
sbb
cmp
ror
or
jmp
dec
push
add
and
xor
ins
mov
adc
and
aaa
and
lds
out
add
and
shl
mov
or
adc
adc
and
sbb
lock
jl
add
and
in
rol
sub
sub
movs
jmp
jo
push
mov
push
jns
enter
add
das
std
cwde
sbb
add
inc
into
push
cmps
fdiv
add
or
aaa
pusha
test
or
and
sbb
add
enter
nop
int
adc
add
ret
and
push
jmp
jmp
xor
sbb
rol
lock
or
pop
inc
adc
(bad)
cmp
cwde
add
cmp
jg
repz
test
push
in
cmp
les
fs
out
test
sbb
aad
rol
lock
lock
add
xor
and
rol
fld
push
and
add
ins
add
or
xor
or
rcr
mov
xchg
mov
add
(bad)
or
loopne
xor
fadd
inc
add
ss
fadd
sbb
ror
cmps
or
aaa
add
add
pusha
inc
cmp
xor
ret
add
xchg
jb
jecxz
push
cmp
adc
add
sbb
cmp
pusha
add
nop
sar
loope
aaa
sub
add
add
sbb
outs
mov
add
sbb
mov
and
and
add
rol
push
or
add
cmp
rol
sbb
add
hlt
(bad)
or
xor
push
ds
pusha
sub
cmps
add
jno
inc
sub
push
push
xor
loop
add
add
call
cmps
push
add
cmp
add
ret
aam
adc
loope
out
sub
inc
rol
sbb
xchg
ins
dec
inc
sbb
cmp
or
jle
inc
mul
add
ret
push
shl
inc
jl
add
fadd
xor
xor
cmp
xchg
or
and
adc
add
push
push
pop
mov
mov
js
(bad)
xor
push
add
sbb
sub
push
add
pop
call
test
dec
stos
pop
add
dec
test
add
adc
mov
push
je
or
rcl
rcl
inc
or
inc
mov
add
pop
add
pop
adc
inc
cmp
push
imul
nop
push
push
adc
enter
lock
sbb
sbb
cmp
jno
pusha
sbb
add
push
and
mov
push
aaa
retf
fnstcw
jno
das
js
dec
popa
retf
fadd
pop
ret
jecxz
dec
add
mov
fcomp
dec
test
popa
mov
add
or
or
add
pop
inc
enter
add
inc
push
pushf
mov
dec
push
mov
(bad)
lock
cmp
and
ss
adc
mov
aaa
cs
(bad)
inc
jo
je
out
pop
add
cmp
and
push
rcl
mov
xchg
jp
add
pop
xchg
cmps
test
pusha
or
js
pop
xchg
lock
jl
or
sub
cli
ror
jbe
sbb
or
or
add
sub
rol
push
sub
and
adc
pop
inc
add
fs
cdq
push
sbb
paddusw
add
or
xchg
pushf
sbb
or
pusha
inc
imul
add
test
push
ins
enter
bound
add
leave
lods
adc
mov
sahf
cmc
in
push
sub
rol
and
adc
xchg
inc
(bad)
and
inc
cmp
rol
add
and
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
or
mov
inc
add
adc
pop
enter
jg
adc
push
xchg
lahf
cmp
ror
inc
pop
or
stc
pusha
enter
or
bound
xor
ss
cwde
mov
outs
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
dec
sbb
mov
aas
push
push
sbb
mov
mov
js
fistp
mov
sbb
sbb
fwait
nop
or
lock
sub
xchg
and
and
adc
popf
add
add
and
add
add
inc
sub
add
add
or
add
pop
add
or
nop
pusha
mov
and
sub
pop
ret
xchg
or
out
fnstsw
mov
shl
fistp
sub
pop
cli
lock
cmp
pushf
xchg
push
pop
mov
add
sub
test
imul
sbb
adc
movs
cmp
and
and
add
add
inc
sub
add
add
or
dec
sbb
mov
mov
push
or
inc
add
fistp
cli
pop
and
shl
jo
sbb
mov
mov
adc
(bad)
lea
or
pushf
sbb
jno
cmp
repnz
je
jb
sbb
xchg
dec
xchg
scas
sbb
and
add
add
inc
sub
add
add
add
add
or
or
mov
inc
add
adc
pop
enter
jg
adc
push
xchg
lahf
cmp
ror
inc
pop
or
stc
pusha
enter
or
bound
xor
ss
cwde
mov
outs
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
dec
sbb
mov
aas
push
push
sbb
mov
mov
js
fistp
mov
sbb
sbb
fwait
nop
or
lock
sub
xchg
and
and
adc
popf
add
add
and
add
add
inc
sub
add
add
or
add
pop
add
or
nop
pusha
mov
and
sub
pop
ret
xchg
or
out
fnstsw
mov
shl
fistp
sub
pop
cli
lock
cmp
pushf
xchg
push
pop
mov
add
sub
test
imul
sbb
adc
movs
cmp
and
and
add
add
inc
sub
add
add
or
dec
sbb
mov
mov
push
or
inc
add
fistp
cli
pop
and
shl
jo
sbb
mov
mov
adc
(bad)
lea
or
pushf
sbb
jno
cmp
repnz
je
jb
sbb
xchg
dec
xchg
scas
sbb
and
add
add
inc
sub
add
add
add
add
or
or
mov
inc
add
adc
pop
enter
jg
adc
push
xchg
lahf
cmp
ror
inc
pop
or
stc
pusha
enter
or
bound
xor
ss
cwde
mov
outs
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
dec
sbb
mov
aas
push
push
sbb
mov
mov
js
fistp
mov
sbb
sbb
fwait
nop
or
lock
sub
xchg
and
and
adc
popf
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
inc
add
xchg
pop
mov
dec
dec
xchg
jg
es
add
sbb
jo
movs
adc
push
cwde
je
adc
adc
and
inc
loopne
adc
int
pusha
cmp
inc
fstp
or
mov
lea
cwde
test
rol
loopne
es
mov
test
jo
mov
js
pop
and
adc
mov
adc
jg
xor
in
loopne
aas
adc
cmp
mov
add
sub
sbb
push
adc
cmp
adc
push
or
adc
xor
cmps
retf
adc
(bad)
adc
sub
jb
and
or
mov
mov
adc
loopne
push
(bad)
cmc
in
fwait
(bad)
adc
add
cmp
fadd
dec
mov
ins
es
repnz
leave
sahf
daa
xchg
jo
ret
inc
les
xchg
sbb
sub
and
dec
repnz
or
call
movs
xor
adc
dec
add
mov
add
add
sub
pop
push
cmp
sub
dec
add
sbb
pop
or
cmp
inc
sbb
in
dec
es
pop
int
and
adc
push
retf
xchg
dec
cli
mov
add
push
pusha
cld
ror
xchg
pop
int3
ror
and
dec
loop
adc
inc
xor
mov
inc
das
call
inc
push
and
into
mov
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
xor
adc
out
xchg
es
lea
and
xor
push
test
lds
sub
inc
pop
add
dec
ss
adc
inc
and
or
pusha
mov
xchg
(bad)
ror
pop
and
ins
xchg
mov
add
dec
adc
mov
push
jmp
call
fwait
ins
adc
rcl
push
add
ja
ret
xor
sub
or
push
lea
xor
push
mov
call
mov
inc
add
sub
ret
dec
or
cdq
movs
push
sahf
test
and
leave
or
inc
push
hlt
and
adc
fadd
test
sbb
or
fs
dec
sbb
cwde
or
xor
push
mov
sti
pusha
xor
sub
aaa
pop
ds
push
mov
xor
pusha
movs
xor
aam
push
push
push
or
dec
or
shl
ins
xchg
shr
shl
icebp
iret
push
xor
push
mov
dec
or
add
sbb
lock
dec
or
adc
fs
loop
sub
mov
loop
xor
mov
add
enter
xor
pusha
aam
bound
dec
mov
shl
jmp
enter
call
loope
ret
adc
inc
inc
push
movs
push
or
test
loop
dec
test
cmp
cwde
shl
sub
cmp
mov
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
and
xchg
or
dec
mov
or
and
and
sub
loopne
xor
or
dec
add
in
xchg
adc
cmp
add
xor
sub
add
mov
test
mov
sub
mov
dec
and
mov
lea
adc
jmp
jp
inc
add
es
push
inc
xor
inc
mov
mov
lds
dec
cmps
js
xor
xor
or
lock
push
dec
dec
and
movs
inc
popa
push
movs
cwde
int3
mov
add
xor
inc
push
or
inc
popa
xchg
cmps
retf
mov
shr
es
sbb
(bad)
sub
test
xchg
adc
nop
add
mov
imul
pop
xchg
scas
and
nop
adc
test
and
jp
and
cmp
xchg
aam
add
inc
jmp
outs
xlat
rcr
xchg
out
xor
push
cmp
push
add
add
dec
dec
or
loope
push
or
loop
and
push
test
mov
mov
add
(bad)
test
push
(bad)
lods
add
jmp
mov
arpl
inc
das
ds
(bad)
retf
or
shr
cmp
ret
test
inc
xchg
xor
xchg
rcl
pop
add
add
add
inc
sub
add
add
pop
add
or
add
or
mov
rol
and
sub
push
mov
sbb
je
mov
(bad)
mov
xor
cld
dec
mov
mov
and
(bad)
leave
xchg
cs
(bad)
mov
bound
imul
or
iret
xchg
movs
inc
(bad)
fcomp
repnz
adc
pop
fidiv
xor
retf
inc
je
dec
xchg
stos
int
and
movs
push
and
inc
push
push
mov
adc
push
mov
shr
(bad)
dec
neg
mov
or
jmp
aaa
cli
std
fwait
icebp
xor
fistp
ins
mov
inc
inc
xor
and
push
sub
xor
daa
movs
cmc
in
rol
call
add
sub
add
sub
push
add
or
add
or
mov
rol
rol
test
or
push
(bad)
push
and
test
xor
dec
data16
push
out
mov
sub
mov
add
out
(bad)
(bad)
xchg
push
nop
add
jno
xchg
adc
xor
sbb
test
and
(bad)
and
cmps
dec
(bad)
xor
xor
push
mov
inc
push
xor
jb
inc
nop
adc
pusha
push
add
retw
pop
add
add
or
mov
es
inc
push
(bad)
stos
ret
cmp
or
enter
xchg
call
mov
call
push
movs
nop
push
xor
or
adc
mul
inc
dec
scas
cld
outs
jb
aam
int3
adc
adc
mov
shl
fisttp
pop
cmp
popf
pop
and
and
or
retf
jne
and
cmps
inc
or
cmp
push
xchg
ret
or
and
movs
add
inc
xchg
inc
leave
inc
mov
ror
iret
mov
push
sub
add
loopne
or
clc
dec
xor
inc
cld
cmp
adc
push
or
cmp
pusha
or
sbb
xor
aas
add
dec
das
ds
movs
pop
inc
or
iret
sub
int
push
push
cmp
inc
and
xor
or
mov
cld
add
cmp
adc
add
stc
add
add
inc
sub
add
sub
push
add
or
add
or
mov
rol
sub
or
iret
inc
mov
shr
les
mov
mov
dec
add
xor
inc
adc
xchg
mov
hlt
and
ds
sub
es
call
lds
mov
sub
inc
add
daa
nop
xor
mov
mov
mov
mov
add
sbb
xchg
mov
and
loop
add
mov
cmps
push
mov
inc
ss
inc
add
and
inc
and
test
xchg
cdq
dec
or
sbb
adc
fmul
mov
xor
punpcklbw
mov
lock
hlt
(bad)
dec
mov
sub
push
adc
in
dec
rol
outs
lahf
jns
and
dec
xor
rcl
jmp
inc
and
inc
jno
enter
ds
lods
xor
mov
ret
cmp
enter
and
in
cmc
not
(bad)
mov
push
sub
add
mov
loopne
pusha
sub
rcl
sti
and
ret
xor
add
mov
(bad)
clc
mov
test
or
mov
pop
cmp
jecxz
inc
mov
adc
call
mov
loop
inc
in
xor
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
inc
pop
fs
xchg
pop
call
ret
add
js
leave
and
adc
dec
sub
sub
mov
sahf
dec
mov
pop
push
cmp
mov
and
inc
push
dec
inc
add
add
sub
sub
cmps
dec
xor
or
mov
js
inc
adc
inc
or
adc
shl
and
push
fcom
or
dec
mov
sub
sbb
cwde
rcl
or
shl
es
and
push
shr
xor
mov
adc
daa
sbb
call
fild
jns
dec
lock
ret
int3
adc
inc
adc
jp
add
add
or
(bad)
mov
hlt
adc
add
(bad)
dec
and
push
ficomp
mov
xor
push
cmps
push
pusha
inc
mov
sbb
outs
rcl
or
or
dec
rcl
mov
push
sub
or
or
add
mov
dec
add
add
jmp
repz
jl
xor
dec
or
add
xor
and
pop
gs
and
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
mov
xchg
dec
ret
mov
cs
mov
rol
pop
dec
sbb
inc
and
lahf
movs
rol
cmp
push
push
push
mov
inc
xor
test
push
inc
dec
and
es
add
adc
mov
jl
shl
add
jmp
xor
push
inc
test
mov
inc
sub
scas
add
movs
call
cmp
imul
dec
sub
sti
cmps
movs
call
add
xor
xchg
loop
jnp
inc
dec
shr
push
or
xor
sbb
dec
xchg
sbb
xchg
add
pop
not
mov
ds
sar
lock
dec
and
rcl
fwait
dec
fimul
dec
mov
and
hlt
push
inc
xchg
pop
adc
mov
out
mov
mov
ins
push
mov
call
inc
shl
sbb
or
test
or
loopne
adc
loope
pop
push
repz
add
mov
repnz
std
cld
xor
leave
js
add
xor
nop
adc
adc
inc
sbb
es
add
add
cld
js
sub
nop
add
or
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
inc
sbb
and
and
loop
aas
sbb
std
stos
enter
or
std
adc
adc
push
add
add
dec
mov
adc
push
or
or
cmps
sbb
xchg
les
shl
xchg
add
imul
jg
inc
popa
call
mov
sbb
jno
leave
push
adc
repnz
xor
mov
mov
adc
xchg
pop
and
inc
adc
adc
fs
lds
adc
add
dec
sbb
enter
jg
pusha
cld
cmp
sbb
scas
mov
fcom
scas
mov
popa
add
aam
mov
and
sbb
mov
sub
and
sbb
adc
hlt
sub
mov
inc
pop
sbb
outs
add
outs
inc
sbb
cmp
test
dec
mov
pop
icebp
mov
dec
dec
ins
mov
push
sub
add
loopne
or
push
int
and
adc
push
xor
add
mov
add
push
pusha
cld
ror
pop
int3
ror
and
je
push
and
cmp
inc
xor
mov
inc
das
call
inc
adc
adc
xchg
into
xchg
add
stc
add
add
inc
sub
add
add
or
dec
sbb
mov
mov
push
or
inc
add
fistp
cli
pop
and
shl
jo
sbb
mov
mov
adc
(bad)
lea
or
pushf
sbb
jno
cmp
repnz
je
jb
sbb
xchg
dec
xchg
scas
sbb
and
add
add
inc
sub
add
add
add
add
or
or
mov
inc
add
adc
pop
enter
jg
adc
push
xchg
lahf
cmp
ror
inc
pop
or
stc
pusha
enter
or
bound
xor
ss
cwde
mov
outs
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
dec
sbb
mov
aas
push
push
sbb
mov
mov
js
fistp
mov
sbb
sbb
fwait
nop
or
lock
sub
xchg
and
and
adc
popf
add
add
and
add
add
inc
sub
add
add
or
add
pop
add
or
nop
pusha
mov
and
sub
pop
ret
xchg
or
out
fnstsw
mov
shl
fistp
sub
pop
cli
lock
cmp
pushf
xchg
push
pop
mov
add
sub
test
imul
sbb
adc
movs
cmp
and
and
add
add
inc
sub
add
add
or
dec
sbb
mov
mov
push
or
inc
add
fistp
cli
pop
and
shl
jo
sbb
mov
mov
adc
(bad)
lea
or
pushf
sbb
jno
cmp
repnz
je
jb
sbb
xchg
dec
xchg
scas
sbb
and
add
add
inc
sub
add
add
add
add
or
or
mov
inc
add
adc
pop
enter
jg
adc
push
xchg
lahf
cmp
ror
inc
pop
or
stc
pusha
enter
or
bound
xor
ss
cwde
mov
outs
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
dec
sbb
mov
aas
push
push
sbb
mov
mov
js
fistp
mov
sbb
sbb
fwait
nop
or
lock
sub
xchg
and
and
adc
popf
add
add
and
add
add
inc
sub
add
add
or
add
pop
add
or
nop
pusha
mov
and
sub
pop
ret
xchg
or
out
fnstsw
mov
shl
fistp
sub
pop
cli
lock
cmp
pushf
xchg
push
pop
mov
add
sub
test
imul
sbb
adc
movs
cmp
and
and
add
add
inc
sub
add
add
or
dec
sbb
mov
mov
push
or
inc
add
fistp
cli
pop
and
shl
jo
sbb
mov
mov
adc
(bad)
lea
or
pushf
sbb
jno
cmp
repnz
je
jb
sbb
xchg
dec
xchg
scas
sbb
and
add
add
inc
sub
add
add
add
add
or
or
mov
inc
add
adc
pop
enter
jg
adc
push
xchg
lahf
cmp
ror
inc
pop
or
stc
pusha
enter
or
bound
xor
ss
cwde
mov
outs
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
dec
sbb
mov
aas
push
push
sbb
mov
mov
js
fistp
mov
sbb
sbb
fwait
nop
or
lock
sub
xchg
and
and
adc
popf
add
add
and
add
add
inc
sub
add
add
or
add
pop
add
or
nop
pusha
mov
and
sub
pop
ret
xchg
or
out
fnstsw
mov
shl
fistp
sub
pop
cli
lock
cmp
pushf
xchg
push
pop
mov
add
sub
test
imul
sbb
adc
movs
cmp
and
and
add
add
inc
sub
add
add
or
dec
sbb
mov
mov
push
or
inc
add
fistp
cli
pop
and
shl
jo
sbb
mov
mov
adc
(bad)
lea
or
pushf
sbb
jno
cmp
repnz
je
jb
sbb
xchg
dec
xchg
scas
sbb
and
add
add
inc
sub
add
add
add
add
or
or
mov
inc
add
adc
pop
enter
jg
adc
push
xchg
lahf
cmp
ror
inc
pop
or
stc
pusha
enter
or
bound
xor
ss
cwde
mov
outs
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
dec
sbb
mov
aas
push
push
sbb
mov
mov
js
fistp
mov
sbb
sbb
fwait
nop
or
lock
sub
xchg
and
and
adc
popf
add
add
and
add
add
inc
sub
add
add
or
add
pop
add
or
nop
pusha
mov
and
sub
pop
ret
xchg
or
out
fnstsw
mov
shl
fistp
sub
pop
cli
lock
cmp
pushf
xchg
push
pop
mov
add
sub
test
imul
sbb
adc
movs
cmp
and
and
add
add
inc
sub
add
add
or
dec
sbb
mov
mov
push
or
inc
add
fistp
cli
pop
and
shl
jo
sbb
mov
mov
adc
(bad)
lea
or
pushf
sbb
jno
cmp
repnz
je
jb
sbb
xchg
dec
xchg
scas
sbb
and
add
add
inc
sub
add
add
add
add
or
or
mov
inc
add
adc
pop
enter
jg
adc
push
xchg
lahf
cmp
ror
inc
pop
or
stc
pusha
enter
or
bound
xor
ss
cwde
mov
outs
sbb
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
inc
xor
inc
mov
jno
or
push
dec
inc
and
adc
sub
or
add
inc
inc
ss
mov
mov
and
mov
bound
ss
push
inc
cmp
je
test
and
and
add
add
push
hlt
or
cmp
aam
push
xchg
push
or
dec
pop
jmp
aas
scas
sbb
imul
jns
inc
push
and
push
sbb
mov
(bad)
loope
lock
sub
dec
or
sub
test
pop
lock
push
inc
ror
mov
es
mov
or
jae
add
rcr
dec
(bad)
std
push
push
and
xor
adc
push
sub
cmps
stc
ins
mov
mov
jle
cwde
adc
bound
pop
mov
test
xchg
xchg
push
xor
or
nop
dec
or
jle
push
add
add
push
test
or
loopne
adc
iret
add
push
test
aas
push
cld
xor
leave
push
icebp
rol
or
and
mov
or
nop
sub
push
and
inc
jmp
inc
retf
pop
call
fsub
inc
add
repnz
nop
add
add
add
inc
sub
add
sub
push
add
or
add
or
mov
rol
inc
mov
xchg
pop
call
ins
dec
repnz
inc
pop
ret
xchg
std
adc
dec
adc
push
hlt
inc
les
add
scas
test
fwait
clc
test
fwait
or
pusha
ret
adc
xor
or
push
dec
cwde
call
mov
xor
rol
push
je
and
xor
xchg
or
test
and
je
mov
adc
push
xor
xchg
xchg
push
fs
je
jbe
not
test
sbb
fild
jge
sub
add
push
mov
adc
adc
nop
bound
int3
mov
arpl
add
xchg
and
and
xchg
movs
test
jg
push
rol
pop
lds
test
xchg
int3
rcl
and
retf
and
int3
mov
pop
push
ins
repnz
clc
cmc
sti
pop
imul
ror
mov
clc
femms
cmp
push
test
adc
add
sbb
cmp
mov
mov
(bad)
aas
std
add
lds
or
stc
adc
cs
and
aas
stos
cmp
cmp
pusha
and
xor
or
mov
cld
add
test
dec
loopne
cmp
adc
add
stc
add
add
inc
sub
add
sub
push
add
or
add
or
mov
rol
ret
xchg
add
add
popa
out
and
mov
scas
cwde
es
xchg
and
inc
(bad)
adc
pop
lds
push
cmp
hlt
inc
addr16
adc
sbb
jnp
int3
jecxz
dec
scas
mov
hlt
movs
jmp
xor
repnz
cmp
sbb
mul
cmp
adc
rol
stc
rol
or
call
inc
add
in
aad
and
and
out
jmp
pop
xor
ror
sub
cmp
xchg
push
xchg
adc
or
std
fs
xchg
xchg
push
add
sub
xchg
mov
or
push
pop
mov
(bad)
mov
mov
arpl
sub
adc
mov
push
cmp
stos
lea
movhlps
popa
ret
sbb
mov
ret
cmc
loop
mov
sti
clc
(bad)
fdivp
xchg
mov
push
sub
mov
rcl
sti
and
std
cld
xor
or
mov
push
push
jge
cld
jecxz
push
adc
aaa
pop
and
and
xor
inc
jmp
icebp
popa
inc
call
(bad)
shl
adc
jae
nop
push
add
add
add
inc
sub
add
sub
sbb
add
or
mov
rol
adc
xor
and
sbb
mov
or
(bad)
jg
push
sub
movs
retf
xchg
add
and
les
gs
xchg
aas
sub
push
push
je
dec
pop
cmp
adc
inc
mov
or
(bad)
xchg
daa
push
push
int3
push
jmp
dec
mov
pop
sbb
int3
stos
pop
retf
mov
(bad)
fwait
rcr
mov
not
cli
xchg
test
mulps
test
lods
mov
push
jecxz
or
sub
mov
adc
add
add
stc
add
add
inc
sub
add
add
add
add
or
dec
sbb
mov
aas
push
push
sbb
mov
mov
js
fistp
mov
sbb
sbb
fwait
nop
or
lock
sub
xchg
and
and
adc
popf
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
shl
and
push
imul
fsubr
or
inc
add
je
inc
nop
adc
sbb
fs
and
pop
sub
adc
nop
jg
dec
dec
sbb
add
adc
cmp
sbb
and
inc
ss
sub
or
mov
push
imul
mov
mov
(bad)
es
mov
es
cmp
arpl
jmp
and
nop
dec
xchg
xor
push
jmp
call
fisttp
ss
mov
sbb
dec
xor
adc
inc
and
adc
icebp
dec
loope
sbb
sub
stos
int
cs
fiadd
ins
and
xor
push
aam
or
dec
push
ss
and
sub
dec
and
dec
xchg
push
jno
shl
pushf
ds
mov
xor
xchg
push
(bad)
(bad)
ds
push
sbb
pop
adc
or
inc
sub
test
push
add
test
icebp
ret
loope
add
sbb
loop
pusha
fs
aas
std
inc
fadd
cmp
clc
rcl
mov
stc
shl
cs
and
aas
stos
sub
inc
cmp
loopne
ret
test
es
or
xor
push
and
pop
jmp
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
inc
or
cmps
inc
scas
push
push
sbb
ss
add
or
inc
fmul
inc
movs
mov
xor
or
jmp
sahf
mov
cmps
daa
sub
jne
call
and
sbb
es
xchg
inc
test
and
inc
inc
and
dec
imul
lea
test
xchg
adc
push
js
repz
mov
adc
xchg
ret
sub
xor
jb
movs
adc
movs
mov
xchg
sub
mov
in
sub
dec
or
popa
repnz
add
and
adc
(bad)
push
cmps
push
clc
mov
adc
xor
jg
sub
jl
or
dec
mov
ror
sub
std
and
dec
scas
xchg
sbb
push
xchg
adc
ins
cmps
xlat
sbb
cmps
jo
xor
dec
movs
ror
imul
dec
jle
test
add
cmp
inc
jecxz
push
les
pop
sbb
test
or
outs
add
adc
loope
sbb
call
sub
mov
push
jo
inc
pusha
lods
call
mov
xor
mov
and
lea
retf
cld
jecxz
inc
imul
bound
inc
push
je
inc
jmp
xor
inc
call
and
jb
mov
xchg
jae
cdq
push
add
add
add
inc
sub
add
add
push
add
or
add
or
mov
rol
and
xchg
adc
cld
push
lods
leave
mov
push
icebp
popa
or
sbb
mov
adc
pop
nop
dec
pop
adc
int
add
cmp
aam
add
push
inc
push
push
push
in
or
jl
cmps
push
dec
add
mov
dec
xor
cdq
into
add
call
add
dec
or
int3
and
xchg
and
(bad)
movs
add
xchg
dec
and
add
scas
fstp
xor
sub
scas
adc
dec
xor
or
cmp
and
lea
mov
in
ret
cmp
gs
arpl
xchg
adc
mov
and
push
xor
inc
retf
or
xchg
pushf
xor
or
dec
mov
cld
imul
add
xchg
or
push
nop
and
jne
dec
add
add
sub
push
mov
outs
pop
push
adc
push
fdiv
add
enter
xchg
adc
adc
sub
xor
ins
pop
aaa
and
add
and
inc
jnp
inc
add
mov
fs
test
adc
xchg
test
mov
call
sub
mov
or
cmp
cwde
cmp
cmp
cld
mov
xchg
inc
aas
sub
or
loop
inc
lods
enter
setl
push
inc
mov
dec
cdq
and
inc
stc
and
push
inc
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ror
push
ret
test
or
mov
(bad)
in
and
pusha
adc
add
enter
nop
sub
and
add
push
push
inc
or
sbb
add
or
pushf
dec
dec
loope
mov
fist
sahf
and
repz
fwait
xchg
xchg
rcl
leave
push
mov
int
or
sub
push
xor
adc
xor
daa
add
or
mov
pushf
and
and
mov
sub
mov
shl
test
idiv
and
and
xor
push
movs
pop
add
js
retf
sbb
shl
adc
popf
sub
loope
or
and
test
push
add
mov
test
into
dec
xchg
cld
jnp
xchg
sub
mov
inc
adc
fdiv
cmp
cld
mov
or
jae
movs
adc
xchg
inc
or
xchg
idiv
(bad)
adc
add
add
in
aam
jnp
repnz
and
add
nop
add
push
in
sbb
pop
xchg
push
or
jbe
loope
and
xchg
push
test
inc
aam
mov
mov
stos
enter
movs
js
aas
dec
rcl
xor
push
rol
or
and
push
mov
mov
fs
sbb
movs
or
cmp
sbb
xchg
or
repnz
dec
bound
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
xchg
ret
inc
sbb
pop
and
adc
inc
jl
movs
enter
pop
sub
mov
mov
pusha
mov
inc
sub
jb
mov
inc
mov
add
xor
retf
or
add
and
xor
adc
pop
add
dec
sbb
dec
add
sub
les
add
push
pop
(bad)
in
shl
sub
in
add
inc
lds
mov
(bad)
cmp
jecxz
adc
in
jns
push
adc
pop
xchg
fnstcw
inc
sub
enter
push
add
mov
jnp
inc
push
les
ror
push
pop
push
inc
add
push
stc
sti
in
add
mov
retf
rcl
in
mov
clc
adc
sbb
gs
jmp
add
call
std
cmp
sub
mov
and
xchg
xchg
adc
in
nop
sub
adc
push
and
sbb
mov
jne
pop
lds
add
adc
retf
and
push
sbb
sbb
mov
mov
loop
sub
add
xor
push
mov
ja
mov
fcom
add
shr
cmp
and
adc
sbb
jbe
dec
das
ds
movs
jle
movmskps
and
cmp
inc
xor
and
es
ror
cmp
ror
nop
add
movs
arpl
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
shl
or
adc
stos
push
and
sbb
inc
jecxz
xchg
and
or
and
ds
dec
and
dec
inc
push
add
lahf
inc
jge
je
and
inc
sub
leave
movs
(bad)
(bad)
push
jnp
ret
movs
adc
dec
ss
xor
mov
add
cmp
loope
and
fldcw
test
sbb
add
add
lahf
xor
popa
hlt
push
fmul
outs
stos
cld
xlat
adc
or
xor
dec
loopne
or
(bad)
loope
movs
push
arpl
or
es
and
loope
add
cmc
(bad)
fist
fs
or
repz
push
mov
mov
push
inc
dec
arpl
xchg
push
movs
movs
lock
adc
xor
xor
inc
xor
dec
dec
(bad)
les
out
or
jb
dec
shr
and
mov
sub
lods
add
outs
and
add
add
lahf
or
mov
rol
add
xchg
push
jle
repnz
loope
add
xor
sbb
in
push
add
add
cwde
test
cmp
adc
sbb
loope
loop
xor
sub
mov
push
mov
mov
add
add
mov
repz
or
sbb
rcr
xchg
cmp
retf
repnz
aas
cli
cld
adc
add
adc
aas
push
or
ror
sub
xor
add
add
add
add
dec
add
pop
add
add
popa
xor
sbb
xor
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
xor
inc
(bad)
std
sub
add
(bad)
fld
mov
pop
(bad)
rol
pop
and
int3
mov
(bad)
lods
adc
mov
std
add
jmp
add
lock
lods
add
test
cli
test
cli
in
data16
stc
add
out
(bad)
dec
in
add
xor
xlat
sbb
add
jmp
fcom
ins
inc
push
out
push
(bad)
(bad)
adc
lods
add
push
xchg
mov
in
(bad)
xlat
(bad)
fucom
(bad)
mov
lahf
fs
in
fist
sbb
mov
(bad)
cld
aad
lds
loop
(bad)
(bad)
sbb
fnstenv
jl
cld
cld
cld
(bad)
sti
(bad)
dec
dec
pop
std
jecxz
push
mov
in
xchg
cld
aad
mov
add
inc
xchg
add
ror
(bad)
xchg
pusha
(bad)
div
out
std
out
je
fcmovb
fwait
pop
add
out
mov
add
ror
mov
add
sti
push
mov
(bad)
xchg
push
add
xor
out
arpl
fidiv
sti
xlat
push
jecxz
es
sub
jmp
in
in
jmp
aad
cli
into
dec
movs
mov
push
or
(bad)
in
test
and
out
fld
mov
mov
dec
or
mov
rol
inc
or
mov
push
dec
adc
cdq
adc
fcom
stc
mov
retf
fsubr
out
jmp
lods
add
push
call
ror
idiv
jns
xor
hlt
mov
clc
stc
clc
popf
cwde
xchg
stc
std
(bad)
repz
sti
retf
mov
mov
push
jle
add
add
mov
xchg
push
add
out
sti
icebp
loop
(bad)
stc
add
sahf
adc
jecxz
cs
mov
dec
mov
or
mov
int3
cmps
sbb
sahf
add
retf
iret
dec
fnstcw
(bad)
cdq
es
cld
(bad)
push
mulps
jp
add
scas
or
or
(bad)
jno
mov
xchg
cmp
or
sti
(bad)
jmp
or
pop
lods
pushf
pop
push
add
pop
adc
adc
mov
in
or
push
(bad)
out
add
pusha
or
std
std
jmp
dec
stc
sti
cli
cmc
lock
fiadd
in
clc
clc
push
jecxz
test
lods
icebp
mov
cmc
retf
pop
cmc
aam
(bad)
loop
in
movs
push
clc
cmps
or
out
(bad)
arpl
(bad)
out
hlt
out
neg
add
(bad)
cld
lock
or
cld
std
icebp
out
out
icebp
in
jnp
test
jmp
mov
in
add
fsub
in
lods
push
cmps
scas
enter
xchg
ins
add
cli
sti
lods
outs
or
dec
out
scas
adc
lds
pop
adc
sti
sti
cli
call
rcl
rcl
retf
mov
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
or
add
or
mov
inc
jg
mov
mov
or
pop
sbb
xchg
enter
and
adc
call
pusha
or
mov
add
adc
dec
and
and
mov
sub
and
imul
ret
sbb
nop
xor
cmp
aaa
adc
and
imul
pushf
inc
xchg
cli
outs
xchg
aad
mov
je
pop
push
sub
push
jno
or
xchg
xor
stc
push
and
sahf
cmovns
lea
xor
rcr
sbb
loop
shl
inc
cmp
outs
xlat
scas
paddusw
mov
lods
add
and
inc
mov
and
xor
pop
sub
or
adc
div
imul
push
push
sub
pusha
rcr
adc
rcl
scas
xchg
mov
cmp
bound
cmps
lea
and
pop
test
rol
mov
pusha
les
les
and
mov
int3
add
imul
mov
cmps
add
and
jle
ret
loop
jecxz
cmps
les
nop
xchg
add
sub
sub
mov
adc
ror
sar
clc
and
inc
test
rol
adc
arpl
add
inc
add
add
add
ins
ret
loop
sub
and
add
xor
test
imul
mov
xchg
jbe
jmp
test
inc
sbb
adc
inc
sub
push
enter
mov
jecxz
add
inc
movs
jne
and
cmp
sub
push
lahf
jl
add
and
push
shl
add
cli
enter
ds
or
jp
iret
add
lds
add
inc
add
and
ret
mov
test
or
enter
or
repz
lds
out
mov
add
(bad)
repnz
pop
add
lods
sti
retf
sbb
xor
out
and
shl
inc
xor
or
fadd
jns
mov
lds
das
nop
mov
in
and
and
js
inc
or
or
test
int3
xor
repz
xchg
inc
or
jle
pop
xchg
scas
loopne
movs
adc
xchg
(bad)
scas
add
push
add
inc
or
les
(bad)
xchg
enter
(bad)
cmp
mov
shl
inc
sub
or
inc
jb
adc
in
iret
cmp
fsub
test
dec
cwde
inc
mov
xor
repnz
jo
or
ret
pop
jo
sbb
pusha
xor
add
lods
jge
sbb
hlt
xor
adc
or
xor
ins
sbb
mov
mov
mov
loopne
pop
outs
cwde
loop
push
into
nop
inc
add
or
mov
nop
add
enter
add
clc
(bad)
xchg
or
pop
ret
sbb
data16
mov
add
call
ins
xchg
xchg
adc
in
daa
push
call
movs
mov
push
xchg
add
pop
push
inc
(bad)
sub
or
loope
shrd
sbb
in
leave
push
add
add
or
aam
cmps
adc
inc
add
push
sub
inc
adc
xor
(bad)
add
mov
ud0
xchg
pop
pop
and
nop
test
adc
or
es
xor
in
dec
dec
add
adc
je
icebp
push
add
call
adc
stos
loop
sahf
mov
add
bound
pop
xor
push
pusha
rol
adc
ror
shl
dec
and
dec
hlt
mov
inc
adc
and
adc
je
add
mov
sub
icebp
jbe
mov
adc
dec
popa
pop
xchg
mov
cmp
push
mov
add
fmul
mov
clc
inc
sbb
add
clc
ret
mov
daa
or
sub
or
pop
sbb
cmp
fmul
push
test
pop
lock
add
add
les
and
or
pusha
bound
xlat
add
es
cdq
retf
das
push
mov
add
mov
or
shl
shl
add
mov
xchg
outs
mov
inc
daa
push
pusha
mov
and
push
sub
add
pusha
or
pop
inc
add
rol
adc
xor
push
rol
inc
add
call
adc
adc
out
loopne
add
lock
and
or
sub
shl
stos
test
inc
adc
mov
dec
and
ss
hlt
push
or
jmp
jno
push
push
je
mov
xor
mov
or
fimul
test
inc
xchg
pop
inc
xor
xchg
xor
sub
movs
add
shr
cmp
sbb
add
fild
add
push
sbb
loopne
adc
ret
pop
jg
test
cwde
add
adc
aad
outs
jbe
pop
pop
add
rol
je
movs
push
and
add
xor
nop
and
cmp
sbb
inc
inc
sbb
add
and
sbb
mov
and
nop
or
add
adc
loopne
dec
adc
adc
add
dec
bound
jl
dec
in
mov
and
jae
adc
mov
sub
rol
icebp
sbb
push
xchg
and
add
jo
or
(bad)
jmp
call
int3
sub
cmp
mov
fild
in
inc
add
cmp
loope
sbb
jmp
and
push
call
cmps
sbb
push
shl
or
nop
cmp
mov
sub
test
adc
dec
xor
xor
add
and
mov
jbe
nop
mov
and
rol
punpcklbw
xchg
lea
ins
call
add
pop
pop
dec
adc
push
pop
inc
mov
or
or
pop
adc
inc
add
add
mov
and
and
rol
daa
mov
sub
add
hlt
nop
mov
inc
or
ds
lods
xor
sub
aas
adc
sub
enter
rol
or
inc
adc
xor
add
fcmovbe
xchg
loope
loopne
inc
std
mov
mov
sub
loop
pushf
mov
adc
and
add
or
inc
sub
add
add
add
or
add
or
mov
ror
sub
mov
(bad)
fwait
inc
push
sar
jns
sbb
and
mov
test
fist
dec
(bad)
mov
aas
rol
pop
dec
adc
and
add
jb
ret
push
shl
nop
call
dec
dec
in
mov
pusha
jne
inc
push
loopne
pusha
mov
jo
xchg
xor
xchg
stc
push
cmps
inc
dec
lods
mov
push
xchg
ja
push
sbb
dec
mov
jno
mov
gs
lods
and
enter
retf
hlt
das
in
aas
jno
adc
test
fidiv
or
xor
xchg
or
xor
cmp
call
pusha
mov
addr16
jge
adc
jp
add
(bad)
sbb
lock
(bad)
dec
cmp
xor
mov
cs
loope
and
fcomip
mov
add
or
push
xor
mov
stos
mov
fwait
sub
push
cmp
cdq
jg
xchg
cmc
mul
into
sti
mov
inc
mov
add
cmp
leave
daa
xchg
pushf
inc
nop
data16
mov
xor
adc
sub
inc
and
xor
pop
add
sbb
popf
adc
mov
repnz
add
inc
or
add
add
test
shl
aam
retf
test
inc
and
and
or
in
and
inc
or
bound
leave
inc
cmp
movs
xchg
mov
add
dec
cmp
inc
mov
clc
mov
popf
push
xor
and
sbb
pop
icebp
and
adc
adc
add
cmp
add
sbb
inc
adc
or
or
inc
add
and
dec
adc
add
in
push
adc
or
call
aas
cmp
loope
or
xlat
nop
add
jo
adc
add
pusha
repz
int3
mov
ret
aas
adc
out
xor
inc
sar
sbb
retf
les
lock
pusha
bound
rol
arpl
push
bound
jnp
xchg
les
add
dec
rol
xor
add
or
push
or
repz
nop
shr
jmp
leave
daa
cmp
pop
or
add
add
setg
lods
inc
fdivr
lock
adc
inc
mov
repnz
cs
mov
xchg
push
push
(bad)
repnz
pop
inc
rcl
add
or
xchg
add
push
jl
rol
sub
push
call
adc
dec
add
mov
mov
lods
add
sub
sbb
in
imul
adc
ror
cdq
adc
cld
ror
or
dec
or
jns
inc
cmp
ror
add
cmp
sub
adc
inc
add
or
sbb
mov
ror
dec
ss
add
repz
dec
daa
inc
js
(bad)
and
xchg
mul
cmp
sbb
sbb
pop
xchg
int3
and
push
add
fistp
push
xrelease
int3
cmp
mov
mov
add
dec
daa
mov
add
add
mov
inc
cld
addr16
shl
push
adc
mov
pop
inc
jp
and
dec
lock
add
inc
test
js
mov
cmp
dec
rol
push
cld
add
adc
add
test
push
push
mov
das
and
inc
cmp
adc
add
pop
cmp
dec
adc
add
pop
mov
adc
dec
inc
add
and
add
or
inc
sub
add
and
sub
add
or
mov
inc
sbb
fistp
jg
leave
dec
jno
mov
rcl
stc
push
add
xor
mov
push
add
add
dec
xchg
dec
movs
and
retf
loope
loopne
xor
or
push
out
sbb
mov
sbb
inc
pop
ret
sub
test
mov
iret
xchg
retf
fst
int
ds
nop
ror
inc
lahf
xor
scas
(bad)
std
pop
dec
dec
ret
or
cwde
sbb
sub
jnp
push
lods
push
pop
sub
out
add
pop
das
add
shl
inc
mov
mov
dec
add
xchg
arpl
xchg
daa
scas
loop
or
adc
jp
xchg
sbb
(bad)
adc
mov
pop
sbb
adc
mov
scas
sbb
test
sub
loopne
add
nop
jno
pop
js
mov
mov
test
ss
addr16
mov
mov
jmp
dec
loopne
or
jge
popa
jg
gs
test
repz
and
fmul
or
popa
inc
and
mov
xchg
jnp
jl
dec
adc
add
aam
or
adc
inc
adc
pop
pusha
xor
cwde
nop
add
and
add
daa
mov
rcl
das
add
nop
inc
or
hlt
add
and
or
or
or
popa
xchg
or
push
and
mov
jmp
add
adc
sbb
push
mov
pop
push
popa
fxch
adc
aas
add
pop
push
adc
or
and
aas
popf
hlt
xchg
les
fnstenv
lock
in
pusha
call
inc
ss
xchg
rcl
cmp
push
and
xchg
add
and
and
cmps
jg
je
or
or
hlt
mov
jae
in
inc
inc
pop
xor
cmp
cmp
pop
imul
dec
and
xor
sbb
lock
xchg
and
xchg
icebp
push
mov
das
(bad)
push
sbb
push
mov
pop
mov
mov
xor
pop
sbb
dec
sbb
pop
fsub
rol
hlt
bound
mov
cld
arpl
xchg
add
push
aaa
and
sbb
inc
shl
adc
mov
push
add
adc
ss
pop
mov
or
rcl
inc
es
adc
sbb
inc
adc
adc
int3
push
iret
pusha
xor
push
enter
push
sub
cli
add
add
loop
dec
sub
iret
xor
or
and
rol
cs
and
retf
lea
das
add
lahf
push
or
sub
lahf
cld
jno
sub
in
fild
fdiv
jno
mov
cmp
cmps
add
repnz
xor
pop
mov
aaa
scas
nop
int3
jbe
or
inc
ret
lods
and
repz
jnp
loope
and
pusha
push
cmps
mov
add
push
jo
mov
pop
or
xor
inc
sahf
pop
fs
mov
add
cmp
add
mov
mov
aam
and
sub
or
rol
adc
inc
jmp
inc
add
push
hlt
lock
rol
aaa
mov
push
mov
add
mov
inc
or
pusha
add
xor
or
xchg
inc
js
cmovl
loopne
push
mov
sub
inc
push
rol
inc
add
bswap
sub
add
stc
add
sbb
inc
sub
add
push
add
add
or
mov
cmp
add
and
and
adc
lahf
ret
add
or
arpl
scas
int
test
cwde
shl
or
aas
xor
mov
shl
fsub
shl
mov
add
test
inc
mov
std
mov
jo
adc
pusha
mov
mov
shl
(bad)
cld
and
add
rol
push
cmp
push
sbb
js
pusha
inc
sbb
dec
out
fdivr
in
adc
pop
ret
mov
icebp
mov
xchg
mov
mov
mov
lock
or
pop
jecxz
pop
into
cld
outs
mov
adc
mov
enter
fadd
aas
or
mov
hlt
adc
js
(bad)
test
mov
pop
call
out
daa
cdq
cmps
or
pusha
call
pop
sub
cmp
mov
adc
and
sub
arpl
jg
mov
ror
enter
adc
jecxz
inc
fst
aaa
ror
mov
sbb
leave
and
xchg
push
cmp
iret
jo
hlt
mov
es
and
add
or
and
push
or
add
movs
movs
inc
mov
cmp
adc
jecxz
mov
mov
inc
inc
or
ins
push
in
cmp
cmove
pop
cdq
and
jbe
ror
and
shl
aas
sbb
add
add
movs
test
jmp
xchg
or
push
lock
aas
sbb
push
inc
add
ror
sub
push
pushf
xchg
inc
sbb
or
sar
bound
jecxz
mov
inc
or
(bad)
nop
rol
(bad)
aas
add
loop
out
adc
adc
dec
sbb
cmp
xor
adc
push
sbb
add
adc
loop
pop
iret
cmp
inc
or
add
sub
call
les
lds
push
les
int3
xor
push
mov
or
dec
mov
xchg
popa
mov
add
dec
add
ficom
repz
je
ret
push
add
mov
lock
push
fcom
ss
push
mov
push
add
jl
lds
mov
pop
jl
or
push
in
mov
and
sub
sbb
add
icebp
aas
fnsave
add
xchg
or
test
and
sub
sub
push
mov
mov
test
hlt
movs
mov
pushf
inc
cld
jae
scas
mov
rol
loopne
repz
aas
fcom
sbb
rol
push
ror
mov
mov
cmp
pusha
(bad)
and
in
call
adc
movs
cmp
(bad)
fimul
inc
pop
cmp
add
add
inc
es
xrelease
movs
and
popa
or
in
xor
(bad)
call
lock
and
inc
nop
and
arpl
fs
inc
adc
call
pusha
and
or
and
and
movups
pop
mov
inc
and
sti
out
xor
add
xchg
cdq
lods
add
test
les
sub
dec
cmp
iret
cmp
cmps
sub
ret
rcl
adc
inc
mov
adc
inc
or
or
enter
nop
add
enter
adc
sbb
pop
dec
stc
push
inc
mov
lds
mov
push
or
and
add
or
inc
sub
add
add
or
add
or
mov
rcl
or
pop
call
add
das
dec
mov
data16
mov
mov
inc
xchg
and
adc
add
dec
cmps
clc
jae
scas
mov
push
adc
mov
jno
sub
ret
add
adc
dec
movs
or
test
fistp
pusha
push
(bad)
std
and
mov
call
jmp
clc
add
inc
icebp
dec
add
lahf
push
sub
sub
fbld
xor
iret
adc
ret
jge
call
or
or
sbb
pop
cmps
pop
faddp
add
pop
jns
ret
add
daa
out
add
cwde
xchg
shr
lds
jno
and
out
dec
mov
lock
pop
sub
pop
xlat
lds
or
add
ds
retf
or
pop
sub
pop
popf
sbb
push
mov
sbb
or
mov
and
icebp
shl
inc
jns
adc
adc
fs
or
clc
popa
lds
xchg
or
sar
aam
inc
push
std
movs
and
add
or
and
or
and
cmp
xchg
js
or
mov
and
inc
inc
add
push
cmp
push
add
imul
lea
add
or
mov
dec
sbb
rol
push
adc
add
add
scas
mov
xchg
sbb
push
int
cmp
and
xor
pop
inc
cwde
adc
ret
shl
adc
add
add
sub
dec
add
stos
je
add
or
jl
ret
inc
add
adc
daa
mov
sub
inc
aam
add
js
adc
or
nop
mov
and
push
sub
mov
adc
mov
adc
dec
rol
sbb
sbb
push
lods
add
xchg
push
adc
push
add
sub
int3
adc
push
lahf
inc
sbb
dec
pop
lahf
sbb
push
add
push
jp
push
int3
sub
push
jl
inc
add
inc
loope
pop
xchg
movs
rol
and
mov
mov
or
push
push
out
ret
or
mov
add
rol
mov
pop
xchg
add
ss
mov
daa
daa
mov
or
push
lock
push
mov
in
jbe
ror
mov
loop
inc
add
iret
sbb
int
and
mov
inc
push
aam
adc
push
and
push
xor
pop
(bad)
xor
push
mov
push
je
jns
adc
pop
mov
adc
pop
inc
lods
adc
push
icebp
add
or
movs
or
dec
fistp
pusha
and
adc
jo
jb
jl
inc
sub
push
les
adc
and
adc
jnp
inc
test
leave
mov
in
jno
and
fs
sbb
mov
es
sub
es
xchg
mov
iret
and
js
and
pusha
xchg
push
shl
lods
jo
das
and
cvtpi2ps
pushf
mov
add
and
xor
lods
repz
nop
dec
or
les
adc
sbb
enter
push
leave
xchg
jp
add
pop
adc
js
add
and
sub
add
jg
rol
xchg
or
push
and
mov
xchg
add
and
add
or
inc
sub
add
add
add
or
add
or
mov
shl
sub
loope
xchg
and
pop
call
dec
or
cwde
jecxz
or
sub
sub
fcom
movs
jbe
add
mov
(bad)
loop
xchg
add
or
and
shl
or
loopne
push
test
push
lock
retf
mov
pop
sbb
daa
sub
xor
adc
and
adc
xor
xchg
out
push
test
and
movntps
les
repz
xchg
add
bound
or
test
mov
push
cdq
nop
ins
and
push
inc
cmps
push
sbb
mov
or
and
sbb
push
sbb
int3
ficom
test
test
les
sub
or
inc
push
inc
rcl
pop
pop
rol
pop
pushf
cmc
ret
(bad)
dec
aad
enter
push
in
dec
jmp
push
pop
add
movs
jmp
lds
mov
and
jle
les
ret
cmc
and
aaa
push
and
rol
dec
inc
push
loopne
ret
or
pop
addr16
dec
mov
enter
rcl
xor
pop
mov
cmp
les
xor
cld
jae
sub
test
adc
das
aam
(bad)
sbb
adc
xchg
jmp
mov
lds
das
ins
add
or
add
inc
pop
jmp
aas
cmp
xor
loope
sbb
and
or
mov
(bad)
and
mov
mov
add
call
ins
xchg
xchg
adc
or
dec
push
add
adc
adc
jl
add
or
xor
add
xchg
push
loope
sbb
sbb
fdiv
add
int
inc
enter
test
cld
xor
adc
adc
test
inc
cmp
and
int3
aas
add
es
add
add
hlt
dec
daa
fisubr
xor
ret
xor
add
jle
cmp
mov
mov
cmp
sbb
jecxz
cwde
sub
jg
loope
add
adc
hlt
rol
enter
das
mov
push
mov
test
inc
push
push
les
das
xchg
add
or
adc
inc
loopne
sub
mov
daa
cmp
inc
mov
and
push
leave
mov
mov
cmp
pop
add
xchg
dec
and
inc
(bad)
cmp
inc
or
mov
adc
adc
or
add
rol
and
jle
adc
add
push
and
inc
daa
dec
mov
prefetch
or
fwait
cmp
adc
je
inc
adc
push
jmp
add
pop
hlt
jo
adc
push
inc
add
pusha
lock
push
mov
dec
mov
pop
xchg
(bad)
or
and
inc
mov
outs
(bad)
add
adc
add
sbb
lods
loopne
add
add
dec
add
ins
inc
rcl
ss
or
pop
adc
sub
add
sbb
sbb
jecxz
loope
and
or
mov
xor
adc
ins
mov
add
out
jl
ret
xor
gs
inc
leave
aas
movs
call
mov
ins
add
pusha
inc
sub
add
enter
adc
je
add
ds
push
and
and
push
xor
push
nop
inc
adc
rol
and
ja
inc
movs
mov
push
and
test
push
nop
rol
xor
loop
inc
jp
test
movs
and
mov
pop
pushf
and
adc
or
dec
push
and
sbb
pop
adc
push
or
inc
xor
or
cmp
mov
inc
or
add
add
dec
add
jno
add
add
add
popa
xor
sbb
xor
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
inc
add
add
inc
cli
(bad)
(bad)
shr
jmp
lods
test
(bad)
mov
inc
add
cdq
push
outs
adc
adc
vpsubw
repnz
test
jo
sahf
sahf
stc
dec
add
pusha
add
pop
or
add
mov
add
test
std
add
icebp
sub
fstp
jecxz
jns
cli
xchg
fdivp
(bad)
lods
add
hlt
outs
push
add
add
hlt
std
cdq
push
add
sub
jmp
iret
mov
(bad)
mov
lods
sub
xchg
cmp
test
or
(bad)
int
scas
aad
add
hlt
std
(bad)
mov
xor
add
(bad)
adc
push
and
(bad)
fadd
xchg
bound
call
std
(bad)
fmul
fist
cmps
into
data16
jns
in
mov
dec
adc
(bad)
sbb
in
fcmovb
jns
retf
cs
out
repz
mov
mov
push
aaa
cdq
(bad)
jmp
mov
mov
add
out
div
xor
nop
pop
pop
sti
retf
adc
fwait
add
(bad)
(bad)
in
cld
shl
(bad)
jmp
add
(bad)
in
shr
lods
(bad)
in
test
ret
jb
cmps
jg
add
push
sahf
inc
adc
xchg
dec
add
in
test
loop
not
dec
stc
shr
mov
loopne
cld
mov
stc
mov
loope
add
ret
xchg
loope
sbb
pop
mov
(bad)
fadd
and
sbb
sti
cmps
add
add
ror
(bad)
jecxz
adc
push
jmp
icebp
nop
push
add
push
int3
fcomp
mov
dec
jmp
cld
pusha
into
not
jg
call
fsubrp
cmp
fimul
std
mov
push
ud0
por
xchg
repz
add
jmp
loope
mov
lock
outs
add
idiv
mov
mov
ret
loop
or
enter
pop
sbb
jle
cmp
inc
xor
fcmovnb
or
mov
mov
jmp
hlt
les
mov
cmps
in
(bad)
rcr
loop
xor
adc
hlt
mov
cmps
or
mov
lods
pop
add
jecxz
fld
in
shr
fild
mov
mov
stc
cli
je
cmc
dec
mov
repnz
stc
mov
idiv
mov
fs
or
ret
cmc
ror
sti
jmp
lea
mov
das
and
in
outs
mov
pop
sar
neg
add
lods
adc
faddp
xchg
pop
push
nop
shl
cmp
dec
fs
in
or
std
out
jmp
clc
cli
stc
icebp
idiv
clc
idiv
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
xor
add
inc
std
or
mov
rol
ror
test
and
mov
mov
mov
(bad)
push
rcr
rol
add
jmp
pop
sti
add
mov
pusha
leave
adc
push
xor
js
movs
sub
xchg
mov
addr16
pop
aaa
arpl
retf
test
lds
or
iret
xor
dec
push
xchg
push
and
mov
push
mov
aad
pop
(bad)
pop
inc
hlt
test
shl
inc
pop
jg
cdq
mov
mov
mul
add
and
test
add
popa
push
(bad)
clc
fsub
aaa
mov
and
inc
retf
or
cld
call
jnp
xchg
xor
add
or
and
movs
cwde
and
or
mov
mov
sbb
mov
mov
mov
adc
xchg
push
pop
clc
mov
dec
shl
push
dec
pop
mov
mov
cdq
call
loop
rcl
sbb
pop
add
inc
sub
add
and
and
adc
or
dec
add
mov
fs
nop
inc
dec
or
add
jbe
jl
and
ins
jno
add
and
lea
imul
sbb
mov
jbe
and
pusha
bound
cwde
dec
test
sbb
repnz
in
jo
js
sub
mov
add
(bad)
push
or
or
dec
sub
add
cmp
and
pop
mov
inc
sbb
cmp
jo
sub
mov
jmp
and
inc
fwait
mov
sar
xlat
cmp
fcmovb
xor
add
jmp
inc
push
mov
sbb
call
rol
pop
rol
inc
gs
(bad)
jg
fcom
jae
add
fiadd
ret
sub
sub
xchg
je
(bad)
mov
cmp
add
inc
or
dec
or
fdivr
add
add
mov
add
lods
(bad)
xlat
xor
sub
in
xor
sub
push
mov
ds
call
retf
fs
sub
rcl
and
jle
rol
add
sub
pop
sbb
fsub
cmc
ins
cmp
loopne
cmp
lds
mov
inc
add
mov
add
mov
jno
popa
push
repz
fst
loopne
add
add
xor
iret
adc
rcl
sbb
pop
xor
dec
or
int3
mov
adc
push
and
mov
or
pusha
mov
xor
loope
xor
xor
or
pop
jmp
rcl
sbb
ins
inc
add
ja
add
add
clc
xor
sbb
inc
adc
pop
xor
sbb
cmp
lea
fs
push
add
jne
mov
jnp
jb
adc
adc
lods
fiadd
aad
out
and
test
das
xchg
jecxz
add
xor
inc
or
xchg
ret
arpl
inc
xor
sbb
cld
int3
cs
sbb
fistp
jge
xor
loope
cmp
jecxz
aam
xchg
nop
mov
or
hlt
mov
neg
out
icebp
inc
add
add
pop
adc
push
add
ins
or
pusha
or
add
pop
test
add
pop
cmp
setne
dec
sub
and
jno
inc
or
and
add
and
and
lods
cmp
pop
jbe
or
inc
add
ret
pop
mov
lds
call
xchg
sbb
push
rol
ins
dec
pop
rcl
and
popa
jnp
and
xor
xchg
and
in
lods
pusha
test
mov
loope
add
xor
jae
mov
bound
jle
add
mov
sbb
test
xor
add
sub
or
(bad)
fcom
int
add
nop
dec
or
pop
rol
adc
push
pop
sbb
or
inc
adc
test
or
pop
ds
mov
cs
dec
sub
repnz
call
xchg
test
fild
sbb
loope
jnp
xchg
xchg
add
inc
or
clc
inc
xchg
lods
and
dec
pop
rcl
gs
adc
inc
mov
ret
lods
lds
shl
int3
loopne
inc
add
adc
add
jecxz
add
cdq
icebp
push
adc
xchg
fs
sub
sbb
nop
mov
test
push
mov
sahf
sub
cmp
sbb
ret
mov
adc
loopne
xor
sub
daa
cld
add
scas
shl
cmp
adc
sbb
shl
cmp
cmp
adc
adc
and
addr16
cmps
fild
xchg
or
das
mov
xchg
pop
in
dec
and
test
sahf
mov
push
cwde
mov
dec
sub
or
adc
mov
sbb
add
test
les
adc
and
mov
pusha
cmps
je
sub
mov
cmps
push
sbb
add
(bad)
das
sub
add
js
add
in
or
(bad)
outs
adc
pop
adc
mov
mov
adc
sbb
rcr
loope
jo
add
clc
or
add
bound
push
push
push
pusha
sub
mov
sbb
inc
and
cli
rcl
push
mov
rcr
xor
jge
mov
loopne
add
inc
pop
rcl
xlat
not
neg
iret
enter
jo
out
jp
movs
dec
imul
sbb
pop
inc
sbb
push
ret
xor
cli
xchg
mov
lock
add
loopne
mov
loop
inc
inc
inc
aaa
mov
int
hlt
and
adc
add
(bad)
js
sub
dec
jae
xchg
mov
or
cdq
inc
sub
ret
mov
gs
or
clc
clc
les
in
arpl
loop
jge
stos
adc
mov
add
add
inc
xor
pop
sbb
push
mov
add
pop
add
ds
dec
jo
jno
cwde
adc
cmp
jb
scas
pushf
or
inc
outs
in
pusha
add
sub
jge
mov
mov
xchg
or
fadd
add
sbb
jge
mov
mov
fdivr
jecxz
movs
add
cli
nop
jmp
int3
nop
retf
pop
sbb
sub
mov
popf
and
lock
xchg
pusha
or
inc
push
mov
rcl
pusha
or
inc
divps
or
inc
rcr
out
add
jp
pop
shl
add
js
add
cmp
out
aas
sti
or
xor
add
or
add
or
adc
and
add
ret
dec
inc
mov
push
add
jp
inc
leave
pusha
and
xchg
pusha
sbb
add
add
pusha
sbb
push
jne
nop
push
enter
sbb
or
sbb
push
into
jb
sti
pop
push
into
sub
shl
cmp
jecxz
xor
sub
adc
mov
test
and
call
mov
or
pusha
pop
push
imul
sub
adc
ror
cwde
test
(bad)
sahf
jne
pop
loopne
add
xlat
jecxz
stos
jg
or
jnp
cmp
adc
and
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
adc
or
push
mov
inc
push
add
pop
and
out
pop
cmp
aas
push
xor
xor
aas
jne
ror
(bad)
shl
cmp
call
cld
mov
call
xchg
repnz
inc
lods
retf
inc
or
iret
(bad)
rcr
jmp
pop
add
pusha
sub
mov
add
push
ins
add
mov
dec
std
xchg
sub
mov
add
movs
push
add
jo
mov
mov
fimul
and
fcomp
pop
es
cmp
imul
or
xor
pop
mov
cmp
leave
divps
inc
fdivrp
jp
shr
in
pop
xchg
cmp
popa
jp
mov
jno
cmps
xchg
inc
add
test
fcom
pushf
ja
ins
mov
(bad)
mov
in
out
fadd
fld
and
dec
or
xchg
ins
repnz
inc
stc
shl
inc
fmul
aam
push
cdq
sbb
dec
outs
out
pop
inc
push
cmp
pusha
loope
cmp
cwde
icebp
movups
cld
add
ins
fs
aas
aaa
or
popf
xor
imul
aam
push
pop
call
xor
add
push
sbb
add
or
or
cld
jecxz
aas
push
sar
rol
adc
pop
cwde
inc
pop
(bad)
xchg
or
and
icebp
inc
sub
mov
adc
adc
out
inc
dec
and
adc
and
aaa
pushf
push
or
rcl
or
add
cmp
inc
or
jne
adc
adc
adc
push
int
pushf
pop
loopne
or
or
das
scas
sub
add
pop
jl
repnz
ins
cmps
push
cmp
dec
or
cli
add
add
or
cmp
les
int3
shr
pop
sub
lahf
inc
xor
leave
add
cmp
or
adc
shr
mov
jns
push
xlat
cmp
inc
or
xchg
pop
pusha
lds
mov
mov
es
clc
mov
inc
ret
mov
add
or
iret
or
sbb
test
or
gs
sub
or
dec
mov
mov
outs
adc
xor
add
or
retf
add
pop
mov
cmp
mov
movs
in
cmp
es
add
push
inc
xor
out
stos
xchg
mov
sar
pop
add
rol
retf
xchg
mov
sbb
xchg
pop
and
jbe
loopne
or
iret
add
aaa
add
or
or
mov
sub
push
pop
xor
or
daa
xor
add
arpl
pusha
mov
imul
mov
sub
pop
(bad)
cdq
xchg
loop
adc
mov
cmc
add
jl
add
adc
adc
in
cmp
daa
loopne
cmp
dec
int3
sub
or
mov
adc
add
sub
inc
es
mov
jno
jo
sub
or
jg
ins
push
retf
pop
aaa
into
sar
mov
retf
loopne
cmp
mov
scas
add
cmovo
icebp
or
mov
adc
add
add
call
pop
out
into
push
mov
pop
push
jge
call
xchg
test
adc
xor
push
loope
imul
push
or
dec
sub
cmp
add
arpl
push
cli
mov
adc
pop
test
rcr
nop
add
jp
cli
pop
xor
xor
bound
add
jo
sbb
scas
gs
popa
sub
bound
sub
leave
mov
icebp
jmp
jle
shl
mov
xor
push
sbb
mov
(bad)
lock
mov
jno
lods
inc
and
pusha
loope
push
clc
(bad)
xor
enter
add
fcomp
addr16
and
and
and
stc
mov
mov
add
mov
add
clc
pop
sub
sub
pop
mov
lock
or
lock
adc
fs
add
add
outs
and
jnp
enter
push
pop
aam
xchg
(bad)
cmp
sbb
nop
pop
adc
pop
je
push
inc
sbb
lea
pusha
mov
cmps
or
mov
and
xchg
and
call
dec
(bad)
cld
and
mov
add
in
fwait
sub
jno
cmp
sahf
icebp
lea
and
aas
mov
dec
or
or
rol
sub
sub
add
loop
add
or
push
or
xor
and
inc
out
sub
sbb
test
mov
or
jl
and
lds
sbb
add
popa
xor
rol
ss
sub
repnz
inc
popf
mov
cli
xchg
rcl
push
loopne
add
mov
mov
test
mov
push
mov
aam
lea
adc
mov
inc
add
mov
shr
pop
add
inc
jo
add
call
shr
ret
mov
sahf
inc
in
and
or
pop
sbb
sbb
rol
nop
add
push
adc
jge
or
xor
add
(bad)
push
mov
shl
or
js
jo
or
out
scas
xor
scas
jbe
rol
mov
stc
(bad)
adc
sub
adc
loope
add
ror
gs
jbe
add
clc
inc
add
adc
hlt
aaa
or
add
int3
(bad)
cmp
lea
outs
sbb
fadd
and
add
rol
outs
or
or
cs
mov
mov
push
bound
push
pusha
and
mov
aaa
mov
cmp
jg
add
adc
enter
cmp
mov
inc
ss
and
mov
or
mov
inc
dec
sub
sub
ret
int3
data16
xchg
cld
(bad)
and
dec
dec
inc
or
jmp
xor
aam
add
leave
add
test
xchg
sbb
adc
cmp
sbb
add
dec
push
pop
mov
adc
inc
mov
ins
loope
add
add
lea
hlt
aas
test
push
xor
add
mov
repz
push
add
inc
and
or
inc
add
les
aam
jbe
cs
pop
pop
jo
add
(bad)
adc
mov
inc
test
adc
sub
or
sbb
add
inc
add
xor
or
jl
adc
xor
fsub
or
push
add
loop
jecxz
mov
push
loope
pop
test
push
ficomp
or
mov
loope
test
and
or
push
xor
icebp
push
mov
and
fiadd
add
xor
pop
test
mov
and
inc
push
and
sbb
shr
and
xor
test
lods
and
(bad)
loopne
rol
xor
test
add
pop
dec
and
adc
fmul
lods
pop
sub
iret
jae
xor
les
dec
pop
mov
fadd
push
outs
mov
adc
inc
jmp
sub
sub
inc
jecxz
jmp
add
add
add
adc
cs
add
and
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
cmp
or
or
jecxz
cmp
jns
inc
xchg
repnz
xchg
aas
xchg
pop
das
cld
or
ret
pop
out
jmp
dec
pop
ret
iret
lahf
dec
inc
es
cmp
xchg
lds
pop
enter
xor
xchg
or
inc
mov
and
inc
mov
mov
push
test
inc
std
jmp
dec
dec
das
and
or
(bad)
lods
push
out
ret
rol
or
inc
xchg
inc
adc
lock
and
clc
es
mov
jb
jo
and
daa
lock
xchg
(bad)
mul
add
hlt
popa
dec
mov
add
add
mov
and
pop
add
add
rcl
lods
mov
inc
ficomp
add
add
sbb
mov
add
push
push
add
cmp
mov
lods
add
mov
fnsave
add
arpl
mov
or
aas
or
in
gs
cmp
fnstenv
lea
add
and
inc
fnstsw
cld
arpl
add
adc
xor
lock
or
pop
aaa
or
test
data16
cmp
cmps
dec
add
pushf
loop
add
mov
adc
jo
(bad)
popa
push
cmp
std
add
adc
xor
sbb
frstor
dec
ret
add
lds
mov
or
or
add
pop
dec
or
adc
rol
mov
xchg
fwait
shl
pop
call
loopne
add
xor
xor
dec
inc
pop
sbb
fcom
out
pop
call
inc
xchg
add
pop
pusha
jecxz
test
mov
dec
push
fwait
mov
fadd
push
iret
mov
add
je
imul
lea
dec
jo
add
jmp
sub
mov
xor
add
aad
aaa
or
push
movs
ins
xor
test
sbb
mov
add
loope
or
cmp
adc
cmp
out
xor
int3
pusha
mov
cmps
cmp
and
ror
test
pop
mov
jns
ins
mov
adc
mov
es
rol
in
or
mov
inc
push
mov
xor
and
add
nop
mov
push
pop
in
sub
sahf
push
jo
lods
mov
sbb
add
xor
inc
adc
stos
sub
adc
mov
cmp
and
mov
(bad)
sub
mov
adc
mov
xchg
push
dec
iret
and
add
mov
jnp
xor
sbb
mov
jae
adc
xchg
jnp
and
and
or
les
sbb
mov
mov
loope
fimul
sub
sub
and
and
loop
pushf
pusha
sti
in
lods
sub
mov
push
mov
cmp
sub
dec
jo
aas
cmp
jge
sub
add
mov
in
mov
rol
and
popa
test
fs
iret
add
mov
lock
pop
push
leave
and
or
int
and
mov
or
pop
inc
push
xchg
rcr
inc
enter
nop
popf
stc
ins
cmps
mov
jmp
inc
or
inc
shl
inc
add
mov
sbb
add
rol
inc
dec
rol
loopne
inc
imul
pop
add
das
repnz
or
push
push
xchg
mov
cmp
cmp
inc
push
and
dec
inc
jg
xor
pop
push
or
out
mov
js
inc
jle
add
mov
cli
sbb
add
adc
pop
outs
inc
(bad)
cli
push
add
add
or
cmovle
xor
and
arpl
push
outs
jo
adc
fadd
divps
xchg
stc
femms
or
sub
add
sub
pop
out
jae
pop
shl
and
inc
push
stos
mov
push
aam
or
xchg
push
mov
lock
aaa
cld
add
pusha
test
add
jno
iret
and
sub
push
jne
les
adc
dec
adc
adc
repnz
(bad)
sbb
sub
inc
or
sbb
and
xchg
jb
retf
inc
adc
dec
fist
inc
or
or
add
push
jo
jp
xor
xor
loopne
add
sub
or
les
popa
xchg
add
or
std
ret
mov
push
add
mov
mov
adc
jo
inc
das
mov
inc
inc
ret
call
or
sub
xchg
sbb
push
add
and
add
push
or
and
daa
pushf
add
ror
sets
push
xor
adc
add
fbstp
movs
pop
push
xchg
push
aam
sahf
sub
and
jo
pop
mov
inc
cmova
pop
adc
xchg
add
jmp
adc
je
adc
add
loopne
add
push
test
movs
inc
xchg
mov
(bad)
call
jmp
push
mov
jge
push
jp
pop
inc
cmp
cmp
sbb
mov
add
mov
fimul
scas
js
and
dec
mov
jmp
sub
mov
xor
mov
les
cmps
clc
ret
adc
sbb
retf
jge
inc
adc
add
pop
ss
push
xor
ds
sbb
rcl
in
mov
rol
(bad)
nop
(bad)
sti
cli
mov
or
sbb
add
jo
push
ins
nop
ds
mov
std
add
jl
loopne
stos
(bad)
cmps
lock
xchg
add
adc
rol
daa
fsub
pop
pop
jo
lea
push
loopne
fadd
(bad)
rol
or
adc
adc
xchg
adc
push
into
sar
or
dec
ror
shl
rol
test
mov
ret
xor
jae
test
adc
cmove
fisubr
mov
adc
xchg
and
js
and
push
cmps
inc
pop
mov
push
pop
xor
and
and
push
dec
mov
ins
loope
and
inc
rcr
sub
and
mov
outs
sub
pop
cmp
and
loop
push
pusha
add
rol
sub
sbb
loopne
mov
ret
loopne
das
inc
inc
or
mov
lea
dec
push
cmp
add
into
jo
push
arpl
pop
xchg
cwde
inc
add
mov
sbb
dec
add
or
push
and
aaa
or
ret
or
shr
mov
xor
push
inc
xor
mov
ret
pusha
or
or
loop
push
les
in
mov
aam
js
nop
ret
adc
ret
or
cmp
inc
adc
inc
and
enter
push
cmp
cmps
inc
nop
ret
cmps
adc
and
inc
cmp
adc
out
cs
add
xchg
xchg
pushf
xor
or
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
je
rcr
retf
enter
inc
add
js
sub
inc
dec
and
std
and
ret
aas
movntq
sub
xchg
mov
push
mov
fsubr
ret
mov
xor
push
push
pop
inc
inc
repz
add
and
cmp
rcl
sbb
ret
cwde
adc
pop
or
mov
jno
push
mov
xchg
sti
arpl
stos
shl
xor
loopne
mov
jmp
adc
dec
fdiv
lahf
inc
outs
(bad)
(bad)
aad
outs
lods
and
dec
mov
shr
arpl
xchg
mov
push
lea
cmc
jmp
jns
mov
xor
push
loop
xor
jg
in
cmp
sbb
ret
pop
in
aaa
ror
adc
(bad)
fimul
xor
sub
dec
daa
xlat
(bad)
cmp
pop
out
jg
fyl2x
pmulhuw
pop
inc
rol
jg
cmp
and
add
(bad)
push
iret
push
test
xor
bound
and
mov
xor
popa
or
int
add
add
fs
ja
fsub
pop
cmp
pop
jmp
or
sub
leave
add
or
pushf
jb
sbb
call
push
(bad)
sub
loopne
add
enter
push
xor
cdq
lea
pop
mov
fst
in
ror
je
adc
rol
sbb
or
xor
mov
mov
ret
sbb
adc
cs
test
shl
ins
jmp
das
xchg
clc
and
cmp
mov
mov
and
shr
and
add
jo
add
and
popa
test
fstp
dec
fwait
aam
mov
ss
xor
jl
and
es
inc
in
cwde
push
inc
add
add
adc
lock
loopne
sti
int3
or
pop
push
lea
clc
add
adc
and
xor
xor
add
add
fld
ins
jb
push
or
in
xlat
inc
add
ins
cmp
add
xchg
adc
mov
adc
scas
add
adc
sub
outs
test
and
mov
rol
aaa
clc
mov
es
ror
sbb
in
(bad)
rol
add
adc
add
xor
adc
cmp
aas
jnp
add
ins
and
fs
add
xchg
mov
aas
jo
add
rcl
movs
jo
mov
fmul
pop
mov
push
inc
je
lods
mov
sbb
lods
inc
xor
outs
or
push
loop
inc
out
adc
stc
xchg
mov
scas
fcom
aad
mov
jo
add
add
and
rcl
add
and
sbb
repz
or
lods
lods
and
lds
pusha
in
inc
fadd
cmp
dec
sbb
mov
add
adc
sbb
cmp
rol
je
add
sbb
inc
mov
mov
jne
dec
sar
jo
jge
stos
jnp
rcr
adc
les
cmp
js
movs
push
push
(bad)
and
inc
or
mov
xchg
push
xchg
in
add
rol
mov
inc
or
add
add
sub
mov
adc
aad
jl
adc
nop
mov
add
push
mov
popf
fiadd
mov
or
dec
push
adc
loopne
movs
arpl
aas
(bad)
cmp
mov
adc
test
cmp
or
clc
inc
and
test
add
mov
add
add
arpl
ret
aas
out
pop
mov
psubb
jg
rcl
mov
or
call
sbb
inc
xor
inc
mov
jecxz
add
pop
daa
in
pop
xor
mov
cs
cmp
push
or
mov
and
push
aaa
and
shl
sbb
icebp
ret
in
popf
loopne
add
inc
or
or
xchg
pusha
add
outs
mov
add
dec
movs
inc
push
inc
ins
in
arpl
dec
(bad)
or
movs
adc
mov
or
clc
sar
loopne
push
adc
inc
test
(bad)
xchg
and
nop
add
push
loop
mov
add
fsub
pop
push
scas
and
arpl
adc
jns
add
mov
inc
pop
nop
clc
inc
xor
call
and
sub
test
sub
and
lds
rcl
sbb
add
inc
mov
add
loopne
(bad)
icebp
inc
jo
pusha
or
les
pop
cmp
xor
adc
adc
pop
sub
lea
les
cmp
and
jecxz
loopne
adc
mov
adc
adc
mov
add
mov
inc
into
rol
shr
push
sub
ss
or
add
add
dec
sbb
or
add
test
lock
and
(bad)
pop
adc
cmps
pop
aad
and
add
mov
pop
add
shl
jb
mov
fwait
add
or
jmp
sub
push
adc
enter
mov
pop
sub
dec
add
inc
and
jge
ficomp
push
cmp
inc
fsub
or
jno
sti
add
xlat
inc
push
add
lock
or
mov
add
add
dec
sub
jo
cld
push
les
jg
inc
popa
push
fiadd
add
add
or
mov
add
add
inc
loope
jb
dec
sub
push
or
and
pop
sub
jo
jg
inc
ret
ret
mov
add
inc
icebp
test
push
or
arpl
loop
or
shl
xchg
pop
dec
dec
add
lock
or
pusha
and
mov
dec
loope
xor
lock
cmp
and
test
in
sbb
mov
dec
add
push
cmp
ret
or
jp
test
adc
push
data16
enter
or
call
push
or
popa
add
hlt
loope
inc
pusha
xchg
adc
add
push
mov
adc
pop
sar
pop
cli
and
inc
and
push
stos
repnz
jp
or
das
ret
or
loopne
sub
mov
pop
icebp
mov
inc
or
inc
add
movs
inc
adc
adc
mov
pop
mov
push
lea
and
popf
jmp
shl
inc
add
push
aam
mov
cmp
add
add
loop
pop
lds
add
inc
aaa
or
mov
or
loopne
lahf
fst
sbb
sub
pop
pop
push
add
loopne
and
ret
pop
xchg
cwde
aaa
mov
xor
loopne
or
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
cmp
mov
les
(bad)
js
sub
test
sbb
loop
lea
call
dec
push
(bad)
stc
add
mov
or
and
aaa
dec
adc
pop
sub
push
es
or
and
push
dec
dec
stos
and
and
sbb
test
imul
loope
xchg
pop
or
mov
push
sbb
push
pop
inc
fcom
inc
add
popa
dec
adc
mov
push
sub
inc
inc
fild
pop
sbb
add
shl
add
ret
adc
adc
and
in
pop
mov
add
test
movs
adc
or
(bad)
loopne
movs
adc
add
adc
lahf
adc
inc
mov
jne
rcl
fimul
xchg
dec
test
jmp
inc
test
fdivr
lock
xor
int
jbe
cmp
push
adc
sub
inc
push
mov
ror
adc
xor
or
jne
nop
ss
jo
or
adc
adc
loopne
sub
call
hlt
inc
rcl
lahf
jl
rol
or
or
adc
sub
pusha
mov
pop
(bad)
shl
iret
mov
mov
adc
cmovo
aaa
adc
enter
xchg
mov
inc
sbb
popa
clc
pusha
xchg
push
push
or
adc
xchg
leave
sbb
mov
inc
outs
pop
push
shl
xor
jo
xor
add
(bad)
adc
test
repz
sbb
mov
cmp
cmp
adc
mov
add
cwde
jecxz
or
cmp
int3
test
int3
xor
daa
add
sub
ss
call
lahf
add
mov
add
mov
inc
mov
jnp
jb
adc
adc
sbb
inc
sbb
pusha
adc
add
and
jb
add
inc
mov
or
sbb
cld
cmp
ret
sbb
fld
adc
fld
xor
loope
cmp
and
or
mov
loop
aas
mov
les
cmp
test
out
aas
mov
inc
add
and
ret
sbb
mov
push
adc
scas
jae
adc
push
fadd
add
or
hlt
outs
adc
add
cmp
(bad)
dec
fdiv
add
sbb
mov
jno
inc
pop
and
out
mov
mov
and
and
daa
ins
xor
push
adc
dec
leave
aas
jmp
add
push
add
and
xchg
sub
dec
retf
ds
and
nop
or
cmp
out
cmp
cld
xchg
jbe
call
xchg
test
mov
in
cmps
dec
or
or
(bad)
mov
stos
aas
gs
adc
retf
mov
sub
in
pop
int3
scas
idiv
in
mov
in
add
mov
mov
enter
push
repz
add
sub
aas
adc
scas
xchg
lea
(bad)
dec
jo
enter
adc
mov
add
lds
and
xchg
inc
cmp
hlt
mov
lea
repnz
clc
les
xor
lock
pop
xlat
aas
loop
mov
fnstsw
rcl
add
cmp
xchg
nop
add
pop
sar
sbb
loope
pusha
and
inc
and
sub
and
pop
inc
inc
sub
dec
and
ja
or
loopne
cmp
pop
jmp
sub
shr
or
clc
xchg
add
ror
ins
xor
mov
add
add
add
(bad)
icebp
test
adc
cmp
lea
mov
nop
pop
adc
xor
loopne
sbb
push
inc
test
pop
cmp
or
ret
arpl
sub
xor
push
mov
lea
push
adc
imul
mov
mov
adc
leave
add
cmp
sbb
jecxz
jmp
in
mov
xchg
mov
(bad)
and
lock
fsubp
fmul
mov
dec
push
add
jle
and
cld
mov
adc
retf
mov
add
aam
rol
movs
adc
pop
inc
or
adc
pop
or
or
dec
inc
mov
or
add
into
and
add
mov
sub
adc
in
push
xchg
and
sub
loopne
(bad)
pop
cmps
dec
mov
add
add
xor
mov
or
add
test
loop
add
adc
or
fadd
cmp
nop
jne
add
fs
rcr
pop
pop
lds
add
sub
mov
outs
nop
test
fsub
add
mov
(bad)
aas
or
add
lods
ret
sub
(bad)
xchg
cld
add
mov
add
and
jge
lahf
cmp
add
add
(bad)
mov
sub
inc
arpl
dec
and
iret
push
(bad)
loopne
pop
lds
inc
and
adc
shr
loopne
add
add
clc
jp
sub
test
ss
test
enter
sti
pop
add
inc
clc
inc
pop
and
push
iret
(bad)
out
cmc
pop
push
pusha
inc
adc
mov
scas
(bad)
xchg
and
pop
add
dec
add
jo
aad
loop
adc
fadd
push
retf
push
inc
fiadd
cwde
(bad)
sbb
pusha
mov
aaa
add
jne
and
bound
test
aas
(bad)
or
or
add
cli
xor
iret
(bad)
and
int3
clc
xchg
mov
mov
mov
pcmpeqd
stos
or
or
mov
jecxz
adc
sub
rcl
pop
rol
cmp
or
aas
mov
add
add
pop
xor
pop
data16
pop
nop
dec
or
add
xor
or
jne
data16
mov
cs
adc
add
pop
mov
adc
adc
pop
jb
and
call
adc
and
mov
test
add
xor
mov
aaa
or
js
pop
or
ret
mov
xor
push
dec
enter
and
ss
inc
imul
jae
xchg
xor
lock
xor
inc
push
dec
shl
inc
mov
or
adc
push
add
(bad)
push
nop
and
shl
and
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
test
cmp
cmp
mov
pop
cdq
or
jmp
test
sar
adc
test
aas
imul
sbb
jecxz
add
test
sar
popa
and
(bad)
int
cmp
cdq
xor
add
fldcw
sub
pop
sbb
out
mov
repnz
xlat
lds
call
les
cld
(bad)
or
add
pusha
adc
call
adc
mov
push
and
out
push
or
jp
inc
arpl
sub
scas
add
add
sbb
or
ffree
test
(bad)
js
inc
and
or
push
push
rol
cwde
sbb
adc
stc
repnz
inc
pop
adc
stos
shr
out
mov
(bad)
test
mov
das
pop
nop
stos
stc
(bad)
stos
adc
(bad)
daa
push
add
ror
sbb
repz
mov
nop
inc
sub
cmp
pusha
rol
add
bound
adc
repnz
sbb
push
repnz
add
jl
add
add
xor
pop
arpl
push
js
dec
outs
popa
clc
rol
xchg
loopne
iret
mov
sbb
add
and
push
dec
test
rol
pop
rcl
inc
gs
xchg
fdiv
or
pop
xor
inc
xor
(bad)
push
dec
inc
add
dec
or
aam
loope
pop
adc
mov
add
jmp
xor
add
shl
push
push
xor
inc
xor
or
push
cmps
or
test
sub
push
pop
sub
rcl
bound
jle
rol
add
jne
xchg
fucomp
or
or
into
or
cmp
les
int3
inc
stos
cmp
pusha
test
cs
es
shl
ror
fs
add
sbb
rcl
cdq
lods
xor
push
add
dec
add
inc
jb
adc
and
mov
or
add
xchg
enter
mov
pop
or
jnp
hlt
dec
or
int3
mov
adc
mov
mov
inc
mov
adc
and
sbb
int3
add
pop
pop
pop
mov
outs
or
xchg
adc
and
sub
xchg
or
ja
add
add
add
dec
or
mov
inc
push
cmovo
sbb
inc
add
rol
les
and
rol
inc
sbb
retf
ds
xor
es
rcl
inc
add
mov
or
or
jecxz
push
aas
cmp
rol
ror
daa
aam
add
dec
adc
mov
push
(bad)
call
add
nop
push
mov
jae
xor
cmp
pop
and
xor
jbe
jo
out
mov
test
xor
push
lea
aad
and
add
jns
push
js
push
jno
adc
or
fwait
xor
cld
lock
xlat
lea
cmp
sbb
lock
addr16
adc
loop
and
and
mov
ret
(bad)
stc
lds
xlat
xor
inc
or
mov
pop
push
test
test
or
push
mov
mov
add
ret
add
test
repz
sbb
pushf
lock
inc
les
jo
sub
aas
dec
mov
add
loope
or
or
cmp
or
inc
xor
test
and
sub
push
sbb
pop
shl
daa
xor
jne
sub
cmp
adc
movs
or
pop
rol
bound
xor
ror
movs
cwde
fdiv
mov
inc
add
lock
addr16
mov
iret
pop
pop
pop
and
adc
add
add
add
xchg
push
adc
leave
dec
push
sbb
xor
add
shl
test
jg
inc
and
clc
xchg
jmp
add
pusha
lahf
or
adc
jmp
or
mov
and
adc
pop
daa
or
adc
cld
or
and
adc
inc
push
adc
add
sbb
cli
lds
and
ins
clc
xchg
xlat
ror
and
sbb
jl
and
js
sub
inc
or
sbb
xchg
or
and
les
push
nop
test
xchg
rol
push
adc
inc
(bad)
stc
retf
loop
add
in
mov
dec
pop
push
jecxz
iret
adc
cmp
xor
mov
sbb
sub
sub
dec
lock
adc
or
add
mov
in
inc
add
sub
sahf
stc
les
aas
daa
cmp
data16
or
enter
pop
nop
and
add
sub
jecxz
(bad)
rcl
adc
pop
adc
sub
sub
or
add
imul
jb
call
push
xor
stos
xlat
pop
fs
je
cmp
ret
xor
sbb
add
es
push
lods
nop
test
test
sbb
loope
pop
inc
jmp
iret
jns
cmp
retf
je
pop
js
add
enter
mov
or
clc
pop
add
je
mov
mov
add
cmp
adc
adc
test
dec
and
push
inc
inc
xor
into
push
les
(bad)
xchg
pop
pop
add
daa
fs
pop
sub
or
in
xor
lock
test
push
mov
inc
xor
pop
or
aam
jbe
out
jb
push
adc
add
cmp
inc
or
inc
add
mov
pop
cmp
and
xor
aam
add
leave
add
test
xchg
cmp
adc
push
or
mov
add
add
fsubr
pop
jae
les
mov
inc
add
jo
and
cmp
loopne
jg
loopne
adc
stos
daa
aam
pshufw
and
pop
add
mov
and
mov
or
pusha
sbb
pop
and
jo
cs
add
adc
cmp
gs
xchg
sahf
add
mov
inc
jle
adc
test
retf
adc
cmp
fld
inc
sub
add
cmp
and
inc
fwait
repz
sub
adc
add
mov
inc
js
sbb
rol
adc
or
sbb
mov
add
(bad)
rol
lods
add
or
or
dec
inc
pop
mov
sbb
push
sbb
or
enter
xor
or
lock
loope
stos
dec
inc
and
ins
xor
add
mov
or
pop
inc
and
or
stc
call
popa
fistp
or
nop
les
rcl
rol
mov
rcl
outs
sbb
and
mov
fld
and
pop
test
loopne
mov
add
pop
and
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
adc
or
push
mov
inc
push
add
pop
and
out
pop
cmp
aas
push
xor
xor
aas
jne
ror
(bad)
shl
cmp
call
cld
mov
call
xchg
repnz
inc
lods
retf
inc
or
iret
(bad)
rcr
jmp
pop
add
pusha
sub
mov
add
push
ins
add
mov
dec
std
xchg
sub
mov
add
movs
push
add
jo
mov
mov
fimul
and
fdiv
pop
es
cmp
imul
or
xor
pop
mov
cmp
ja
inc
push
repz
(bad)
mul
(bad)
and
cmove
adc
sbb
imul
into
push
push
and
cmp
sub
das
enter
inc
and
add
push
clc
icebp
sti
jle
inc
fdivp
mov
or
leave
add
loope
dec
sahf
rcl
add
ins
fs
aas
aaa
or
popf
xor
imul
pop
aam
fnstcw
or
call
xor
or
cld
inc
lahf
add
push
xor
es
cld
push
push
es
shl
add
xor
nop
or
adc
xor
xor
and
inc
jno
ss
cmp
pop
or
test
sub
pop
rol
push
add
sub
add
ds
pop
sub
call
pop
cld
jecxz
add
mov
call
push
mov
repnz
jb
push
jo
rcr
mov
(bad)
bound
xor
imul
sbb
sub
add
sbb
and
lods
mov
cmp
jnp
shl
and
or
movs
inc
test
popf
outs
repnz
add
pop
and
add
or
loope
xor
add
mov
or
stos
and
push
jmp
rol
in
inc
in
adc
dec
add
dec
mov
inc
ret
das
mov
add
inc
mov
ror
leave
xchg
mov
jbe
sbb
loopne
add
add
mov
xchg
or
add
mov
jne
and
xor
out
cmp
sbb
aaa
cmp
scas
inc
test
nop
das
and
xor
aas
punpcklbw
and
jo
mov
xchg
fdiv
adc
test
xchg
push
inc
rcr
cmps
sub
popa
push
or
(bad)
repz
das
mov
es
popa
outs
sbb
inc
test
xor
inc
aas
add
sbb
into
inc
test
add
pushf
ja
(bad)
fiadd
repnz
sbb
inc
call
sub
ror
aam
xor
jno
mov
sub
mov
push
and
push
aad
and
ficomp
mov
push
out
or
and
movs
test
and
int
fsub
xor
and
add
jecxz
cmp
ret
adc
add
into
pop
add
push
mov
sar
dec
sbb
fs
or
inc
sbb
or
add
sbb
enter
add
ror
(bad)
adc
pop
mov
ins
jo
cmp
mov
jne
pop
sub
add
cmp
mov
fdivp
out
inc
cld
ret
and
data16
mov
jae
xchg
call
push
add
adc
jb
add
jmp
sub
pop
lods
lock
pop
fistp
test
add
xor
or
inc
ret
femms
fadd
push
add
inc
ret
dec
inc
jl
cs
pusha
cmp
outs
mov
or
(bad)
cmp
cmp
aas
or
xchg
in
sbb
mov
sub
and
aam
mov
and
and
cmp
repnz
mov
repnz
push
sub
dec
pushf
mov
or
mov
push
xor
ret
push
ror
inc
lea
sbb
xor
adc
sar
inc
cmp
sbb
adc
adc
and
aam
movs
or
icebp
pop
dec
or
sbb
rol
lods
stc
inc
or
loope
dec
rol
adc
push
scas
in
add
shl
or
gs
add
ror
sbb
push
xor
push
inc
add
ret
(bad)
stos
sub
xchg
jp
addr16
icebp
add
aam
adc
inc
cwde
xor
push
and
and
mov
outs
aam
add
xor
push
outs
mov
pop
aam
add
daa
inc
pop
inc
test
test
sbb
or
enter
sub
or
popf
add
sbb
push
xor
add
test
addr16
aaa
sbb
add
aam
add
or
dec
mov
out
or
push
js
add
shr
pusha
nop
sub
adc
hlt
ror
pusha
push
enter
(bad)
sbb
push
stos
or
add
pop
push
pop
ror
mov
or
and
xchg
ins
adc
xlat
icebp
mov
(bad)
mov
les
sub
add
fwait
xor
dec
ret
js
sbb
jbe
mov
mov
(bad)
nop
jne
pop
and
pop
adc
and
pop
sub
adc
loope
add
loopne
xor
lods
mov
icebp
test
mov
add
mov
xor
scas
or
cmp
sbb
add
or
adc
sbb
sbb
mov
clc
cli
mov
jle
and
push
enter
pop
push
cmp
or
add
pusha
mov
or
pusha
xor
sbb
xor
pusha
inc
and
inc
jg
adc
jmp
repnz
xor
xchg
call
ret
sub
or
outs
xchg
test
and
push
iret
enter
jo
jg
cmp
leave
add
fild
mov
add
pusha
push
add
and
sahf
cmp
or
popf
aad
nop
sbb
(bad)
cmp
and
in
and
sbb
je
ss
sbb
xor
mov
and
xor
add
and
xor
bndldx
push
outs
lock
sbb
jnp
adc
xor
jge
icebp
add
xor
push
and
das
or
or
add
mov
loopne
addr16
push
mov
(bad)
fcos
call
out
jae
sub
mov
and
sbb
add
inc
or
ins
sti
or
xchg
adc
or
mov
mov
mov
add
dec
ins
je
pop
add
xchg
add
push
inc
or
pusha
add
jbe
pushf
add
pop
xchg
(bad)
loope
jg
add
imul
or
mov
jae
cmp
inc
icebp
xor
lods
loop
jg
ret
lock
test
ja
adc
and
fcom
sub
inc
ret
pop
push
adc
sbb
into
mov
adc
mul
popa
pop
add
or
dec
add
mov
and
inc
fld
in
mov
test
test
arpl
inc
shl
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
cmp
or
or
jecxz
cmp
jns
inc
xchg
repnz
xchg
aas
xchg
pop
das
cld
or
ret
pop
out
jmp
dec
pop
ret
iret
lahf
dec
inc
es
cmp
xchg
lds
pop
enter
xor
xchg
or
inc
mov
and
inc
mov
mov
push
test
inc
std
jmp
dec
dec
das
and
or
(bad)
lods
push
out
ret
rol
jns
test
repnz
xchg
inc
adc
jecxz
test
adc
sbb
dec
ds
loop
test
fcomp
pop
sbb
les
inc
dec
sar
mov
and
out
xchg
add
call
add
add
or
add
mov
adc
pop
add
and
pop
jns
inc
and
and
sbb
aaa
test
loopne
sub
inc
test
clc
xlat
or
inc
fdivp
(bad)
xor
test
adc
fdivr
in
lock
sbb
or
add
aas
aaa
movs
sbb
push
adc
je
inc
jns
mov
mov
sbb
ret
sub
inc
xor
or
movs
rol
xchg
repz
ins
add
xchg
inc
es
inc
xchg
sub
js
pmulhuw
mov
and
and
mov
in
and
loope
es
jb
aas
inc
pop
mov
imul
sbb
dec
mov
shl
inc
nop
and
dec
pop
xor
loopne
xchg
and
push
aam
push
aaa
pusha
loop
cmp
cld
jecxz
xchg
xchg
xor
xchg
popf
js
xor
test
xchg
adc
add
sbb
push
and
inc
inc
ds
pop
jno
inc
inc
icebp
mov
mov
mov
pop
ins
and
xchg
mov
rol
cmps
add
enter
xchg
inc
add
or
enter
push
push
adc
mov
add
and
cmp
jno
and
mov
push
add
add
stos
(bad)
ror
dec
mov
push
stc
loopne
sbb
aaa
dec
cmps
adc
scas
or
xchg
mov
clc
shr
add
pusha
bnd
pop
or
lods
call
xor
sbb
pop
xor
or
add
inc
loopne
add
and
rcl
loope
or
adc
and
mov
pop
mov
xlat
sub
adc
(bad)
push
in
ins
test
jo
add
add
(bad)
fld
es
loopne
xor
or
or
loope
fild
rol
(bad)
cvtps2pi
add
(bad)
xor
loope
add
cld
add
fwait
clc
push
push
into
xlat
int3
xchg
hlt
sbb
cmp
hlt
add
sbb
push
mov
add
xchg
adc
(bad)
in
dec
adc
cmp
and
add
pusha
xchg
pop
aam
fdivr
pop
and
cld
cmp
pushf
mov
pop
cmc
dec
adc
aas
xor
inc
sub
xor
or
dec
lods
mov
idiv
cmp
add
xor
cmp
add
sbb
push
sbb
mov
enter
push
aas
enter
in
pop
add
pop
jmp
lds
dec
rol
adc
adc
inc
sub
fisttp
rcl
add
sub
in
mov
or
icebp
mov
push
xchg
push
nop
add
sub
repz
or
fisub
cmp
jo
push
cmc
stos
sar
lock
fs
mov
lods
loope
sbb
ror
and
cmp
mov
or
icebp
lea
and
fisub
sbb
mov
inc
pusha
push
test
scas
adc
add
loope
cs
clc
xchg
cmp
(bad)
push
mov
xchg
sbb
pop
cld
adc
sbb
pop
sub
sbb
ror
push
mov
retf
inc
push
pop
mov
sub
int3
mov
xchg
inc
or
add
ss
loopne
xor
loopne
inc
xor
mov
int3
inc
shl
pop
retf
add
pop
and
mov
in
prefetchnta
sub
or
inc
and
add
sbb
add
add
adc
mov
int3
mov
xor
inc
and
mov
push
add
fwait
sub
jl
xchg
sub
add
jg
mov
cs
push
or
nop
add
xchg
push
in
outs
pop
pop
sbb
sbb
sbb
inc
and
push
sub
rol
popa
lea
inc
push
cmp
enter
sbb
add
pop
xor
or
sub
lahf
mov
adc
test
mov
cmp
adc
push
loopne
call
adc
sub
movs
add
add
jmp
mov
loopne
push
jb
pop
and
or
xor
fstp
shl
sbb
inc
push
rol
and
cmps
xlat
ins
mov
test
sbb
push
or
ret
xor
push
daa
int3
push
and
push
inc
and
jmp
sub
adc
add
inc
es
jno
cmp
pop
das
(bad)
popa
inc
sbb
add
mov
jg
and
xor
push
pop
sbb
cmps
xor
outs
jne
cmp
and
pop
or
adc
lock
adc
unpcklps
movs
mov
call
loopne
cmp
add
nop
cmp
arpl
nop
add
sbb
test
push
xor
sti
fidiv
jge
pushf
or
sub
mov
add
ret
push
mov
or
adc
inc
adc
add
mov
lds
call
loopne
cmp
adc
pop
in
or
(bad)
adc
mov
ud0
jno
xor
jo
ret
add
sbb
jecxz
add
add
loopne
and
loope
sbb
jbe
ror
addr16
mov
jecxz
mov
or
inc
sbb
xchg
add
test
mov
call
or
or
loopne
or
xchg
js
or
add
push
or
cwde
add
sbb
or
add
push
xchg
jbe
and
adc
shl
lods
pop
mov
sbb
pop
pop
adc
or
sub
xor
push
stos
cwde
and
or
daa
pusha
adc
xchg
in
jmp
inc
cmp
cmp
xchg
fadd
jg
or
pusha
bound
mov
inc
cmp
test
or
sbb
add
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
je
rcr
retf
enter
inc
add
js
sub
inc
dec
and
std
and
ret
aas
movntq
sub
xchg
mov
push
mov
fsubr
ret
mov
xor
push
push
pop
inc
inc
repz
add
and
cmp
rcl
sbb
ret
cwde
adc
pop
or
mov
jno
push
mov
xchg
sti
arpl
stos
shl
xor
loopne
mov
jmp
adc
dec
fdiv
lahf
inc
outs
(bad)
(bad)
aad
outs
lods
and
dec
mov
xlat
nop
or
adc
jb
dec
pop
nop
jecxz
inc
mov
inc
dec
push
cmp
sar
sbb
fcom
das
xor
jg
in
xor
lds
retf
jbe
mov
cdq
xchg
ret
(bad)
pop
and
fcomp
xchg
es
movs
pop
jne
xchg
sbb
cmps
jge
inc
aas
mov
data16
xor
je
jg
cmp
and
add
(bad)
push
dec
jns
mov
pop
loopne
or
js
sub
call
pop
fstp
test
xor
or
add
push
pusha
and
or
je
dec
add
xor
xlat
or
iret
push
imul
enter
ror
push
add
push
xchg
xchg
jae
or
lods
add
mov
cmp
cmp
mov
jns
pusha
lea
mov
mov
ret
sbb
add
mov
adc
push
mov
adc
pop
jmp
fwait
das
xchg
clc
and
cmp
mov
mov
and
sar
lock
cwde
cld
imul
stos
scas
into
call
adc
push
adc
or
dec
nop
or
or
es
adc
mov
adc
inc
stos
xchg
push
inc
shl
dec
mov
push
or
mov
daa
adc
ret
xchg
add
shl
or
loopne
add
mov
sbb
adc
xor
lock
dec
jl
add
cmp
out
mov
rol
aaa
clc
mov
es
cli
ror
sbb
in
iret
mov
inc
lock
jno
push
and
push
aad
and
mov
scas
ret
retf
mov
mov
loopne
popa
test
xchg
nop
or
push
xchg
mov
aas
jo
add
mov
push
add
cld
inc
pop
in
push
inc
add
cmp
sub
add
jae
sbb
push
lea
dec
sub
ret
mov
mov
inc
jne
and
or
push
cld
xor
aas
or
sbb
pmulhuw
sbb
mov
ret
jmp
int
jmp
les
test
sbb
movs
mov
loopne
sub
inc
and
jno
sbb
xor
inc
or
or
add
pop
jl
mov
popf
or
icebp
(bad)
mov
lahf
pop
retf
cmc
pop
pop
pop
mov
daa
lods
repz
sbb
loopne
xor
movs
push
push
pop
movs
add
ins
xor
and
sbb
mov
hlt
sbb
mov
add
test
add
dec
mov
ror
jnp
js
stos
cld
ds
or
push
lock
scas
adc
sar
vcvtss2si
ret
aas
xchg
add
inc
ret
nop
shl
push
mov
loop
outs
dec
loopne
cmp
add
pusha
(bad)
xor
adc
adc
or
add
pusha
add
lock
add
nop
xchg
cmovo
or
fadd
sbb
or
pusha
sbb
mov
arpl
push
pop
jecxz
mov
xchg
add
(bad)
pop
and
(bad)
gs
aaa
dec
pop
inc
or
fsub
sbb
adc
inc
cmps
add
add
adc
or
mov
xchg
cmp
add
test
dec
push
or
mov
outs
jne
and
nop
add
or
push
add
(bad)
cmp
jo
add
xchg
add
add
xlat
rol
test
sbb
adc
and
mov
dec
mov
add
xchg
mov
adc
outs
or
scas
mov
jg
cmp
add
sbb
in
add
xor
xchg
xor
test
mov
and
pop
mov
test
inc
add
nop
lds
rcl
sbb
ret
xchg
pop
sbb
test
daa
pop
repnz
dec
mov
xor
push
push
jo
ret
xor
sbb
loopne
(bad)
clc
inc
or
loopne
pop
inc
jecxz
add
cli
(bad)
lahf
add
push
dec
jmp
adc
add
enter
sbb
ss
xor
push
test
addr16
movs
mov
add
mov
adc
dec
or
sub
cmps
sub
hlt
adc
and
loope
xor
and
call
xor
movs
movs
jecxz
and
push
adc
out
lock
jmp
sub
push
nop
dec
inc
add
fsub
sub
push
mov
inc
shl
test
aas
sub
and
xor
add
and
push
push
mov
stc
jp
ins
sbb
inc
add
sub
add
inc
pop
adc
inc
gs
pop
sub
popa
sub
add
xor
pop
cmp
adc
adc
inc
inc
inc
sub
pop
jmp
std
pop
push
xor
pop
sahf
rol
inc
pop
xor
adc
adc
or
inc
and
imul
fdecstp
mov
nop
out
jle
fwait
sbb
add
sbb
nop
pop
add
xor
add
add
int3
xor
cmps
fadd
aas
cmp
pop
xor
xor
and
add
and
xchg
add
jo
pop
mov
ret
cmp
and
out
mov
das
nop
cwde
push
xchg
ret
adc
pop
pop
cld
add
or
xor
or
adc
or
mov
add
add
xor
add
xor
adc
dec
cdq
pop
push
enter
mov
cmova
add
xor
and
push
mov
je
or
mov
gs
push
mov
test
nop
loopne
mov
mov
push
lock
add
clc
rcr
add
adc
(bad)
(bad)
lds
push
loopne
and
add
push
sar
sub
push
into
fmul
adc
xor
dec
pop
add
or
dec
add
fcomp
mov
mov
xchg
adc
adc
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
cmp
mov
les
(bad)
js
sub
test
sbb
loop
lea
call
dec
push
(bad)
stc
add
mov
or
and
aaa
dec
adc
pop
sub
push
es
or
and
push
dec
dec
stos
and
and
sbb
test
imul
loope
xchg
pop
or
mov
push
sbb
push
pop
inc
fcom
inc
add
popa
dec
adc
cld
xor
call
pusha
lods
mov
add
aam
rcr
push
adc
mov
dec
mov
cmp
xor
mov
in
fcomp
adc
push
fwait
sub
lahf
ss
rcr
sub
(bad)
push
sbb
cld
mov
mov
inc
add
xor
pop
sub
movs
jmp
xor
adc
nop
sbb
inc
push
push
mov
or
push
or
paddusb
aas
es
xchg
cmp
inc
inc
and
clc
arpl
test
push
and
add
shl
xor
and
mov
ror
adc
xor
imul
out
jecxz
push
dec
inc
add
leave
pop
or
shl
mov
add
mov
js
pop
add
and
push
xor
dec
xor
or
xchg
mov
lar
shl
cmp
inc
and
int3
sbb
movs
push
sub
cdq
mov
pusha
inc
xor
adc
cmp
ret
xor
int3
push
xchg
push
dec
adc
ret
push
inc
xor
adc
xchg
leave
sbb
mov
ret
inc
or
pop
popa
test
inc
push
loop
add
stos
mov
popa
push
and
add
in
and
repz
sbb
jo
push
add
cmp
rol
jnp
rol
or
mov
adc
mov
ret
adc
adc
push
loop
adc
ss
push
mov
loope
jno
sub
ins
inc
dec
or
mov
sbb
pusha
mov
add
inc
and
mov
add
inc
sbb
xor
mov
adc
mov
das
add
cmp
nop
das
mov
add
dec
imul
lock
mov
adc
adc
jmp
xor
dec
pusha
sub
lea
and
push
dec
lahf
add
loope
pop
cs
ret
mov
mov
inc
dec
lods
mov
jg
out
mov
sub
inc
sbb
dec
out
aad
test
mov
mov
jg
enter
or
stos
call
retf
jecxz
scas
in
jbe
dec
push
(bad)
or
xor
xor
jns
mov
sbb
les
cmp
or
rol
xor
xor
mov
add
mov
(bad)
mov
(bad)
ror
and
mov
pusha
mov
sub
sahf
ror
addr16
mov
mov
ret
push
test
div
mov
push
xchg
add
lock
and
xor
int
sub
je
ret
les
(bad)
pop
dec
mov
sub
mov
or
(bad)
addr16
iret
jg
clc
pop
pop
jb
mov
int
adc
enter
(bad)
lods
pop
or
lods
loope
jns
call
xor
stos
jne
pop
pop
pop
or
test
ret
push
mov
fucomp
data16
or
push
and
sbb
mov
cld
arpl
adc
sub
xchg
in
cmp
mov
bound
inc
mov
test
or
cmp
pusha
outs
sbb
sub
adc
sbb
out
rol
rol
inc
nop
add
dec
imul
repnz
iret
clc
mov
push
push
or
add
icebp
inc
aaa
rol
sbb
or
lock
(bad)
and
and
pusha
test
pop
adc
jb
adc
das
dec
inc
dec
sbb
mov
sbb
add
mov
sbb
clc
mov
xor
popa
nop
add
repnz
adc
or
nop
stos
inc
es
adc
or
mov
jp
fs
add
dec
sbb
xchg
add
add
cmp
add
mov
inc
rol
add
sbb
push
shl
out
fstp
(bad)
mov
(bad)
cmp
push
lock
pop
(bad)
cld
inc
inc
mov
or
and
and
xor
add
jb
es
adc
jg
shl
mov
in
jb
add
xor
je
and
nop
or
add
jne
jmp
and
pop
mov
ds
or
shl
cwde
int
aam
push
cmps
cmp
xor
loopne
sar
or
and
jmp
rol
inc
add
push
add
mov
pop
mov
or
inc
and
push
pop
fadd
rol
nop
or
inc
sub
add
test
fidivr
ror
dec
rol
jmp
cdq
sbb
pop
sub
or
jmp
in
dec
in
inc
push
sbb
ret
push
pop
add
xor
xchg
stc
rol
jbe
enter
mov
popa
mov
mov
or
cmp
mov
cs
movs
fwait
or
inc
aaa
sbb
pop
je
mov
add
push
mov
or
xor
rol
test
and
sar
outs
push
add
push
adc
and
mov
adc
fadd
adc
add
popa
sbb
lock
jle
add
or
push
add
cli
mul
in
adc
inc
mov
cmp
add
add
ins
adc
or
fadd
dec
and
or
cmp
daa
xchg
xchg
or
jp
adc
mov
in
mov
and
sbb
add
or
adc
mov
loopne
inc
jo
aaa
ins
jo
and
lahf
test
add
jmp
or
inc
add
mov
adc
add
mov
inc
js
sbb
rol
adc
or
sbb
mov
hlt
pop
(bad)
rol
lods
add
or
test
adc
dec
das
inc
movnti
add
and
cmp
sbb
or
lock
loope
stos
dec
inc
and
ins
xor
add
or
adc
sub
adc
rcr
scas
mov
sti
pop
jbe
les
ins
popa
or
stc
cmps
inc
push
and
je
mov
ins
fild
or
jo
mov
sub
or
mov
add
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
test
cmp
cmp
mov
pop
cdq
or
jmp
test
sar
adc
test
aas
imul
sbb
jecxz
add
test
sar
popa
and
(bad)
int
cmp
cdq
xor
add
fldcw
sub
pop
sbb
out
mov
repnz
xlat
lds
call
les
cld
(bad)
or
add
pusha
adc
call
adc
mov
push
test
dec
mov
mov
add
dec
retf
sbb
fsubr
mov
inc
pop
rcl
cmp
mov
add
add
add
add
ror
pop
cmp
adc
scas
mov
xor
cmp
add
pop
pop
daa
inc
je
add
xchg
xchg
fstp
out
jmp
jl
add
add
lea
xlat
fmul
sbb
sbb
shl
pxor
rcr
rcl
je
push
sbb
in
push
add
clc
ss
je
or
ret
in
adc
inc
mov
neg
mov
adc
add
cmp
add
rol
test
call
push
fld
icebp
inc
add
adc
int
xor
in
xchg
add
lar
shl
cmp
sub
lock
mov
xchg
mov
pusha
nop
cwde
push
push
ret
add
sub
inc
add
loope
pop
std
xchg
add
push
test
hlt
inc
inc
mov
sub
xlat
add
adc
int
jo
icebp
add
dec
popf
loop
mov
cmp
or
xchg
push
(bad)
sbb
lods
nop
or
mov
xchg
or
call
sbb
cld
adc
jno
stos
and
push
mov
add
aam
adc
sbb
add
ret
lods
add
xchg
pop
and
(bad)
mov
sub
push
mov
cmps
add
or
mov
pop
push
test
xchg
sub
push
into
aas
movs
lods
mov
sbb
sbb
inc
or
xchg
(bad)
adc
inc
js
lds
addr16
sbb
and
sub
add
les
aas
add
cld
(bad)
int3
xor
jecxz
adc
pusha
xor
int3
mov
cmp
ins
repnz
ins
hlt
inc
dec
std
mov
aam
dec
cmp
lea
test
jno
xchg
in
nop
(bad)
or
add
xchg
int3
mov
in
fsubr
lea
cmp
sar
and
dec
js
sub
das
sahf
mov
sub
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
adc
or
push
mov
inc
push
add
pop
and
out
pop
cmp
aas
push
xor
xor
aas
jne
ror
(bad)
shl
cmp
call
cld
mov
call
xchg
repnz
inc
lods
retf
inc
or
iret
(bad)
rcr
jmp
pop
add
pusha
sub
mov
add
push
ins
add
mov
dec
std
xchg
sub
mov
add
movs
push
add
jo
mov
mov
fimul
and
fsub
pop
es
cmp
imul
or
xor
pop
mov
cmp
leave
divps
inc
(bad)
jle
clc
icebp
jecxz
fwait
pop
and
mov
shr
push
loopne
jb
xor
stos
(bad)
fstp
loope
pop
adc
call
lock
adc
fwait
pop
pop
int3
pop
mov
push
outs
xor
mov
inc
es
jae
inc
fwait
xor
pusha
xlat
pop
inc
adc
nop
popf
out
add
inc
cmp
push
add
clc
cmc
pop
push
push
xor
es
rcl
es
mov
daa
nop
or
adc
nop
and
aaa
pushf
push
or
rcl
or
add
stos
cmp
aaa
(bad)
inc
or
push
xor
inc
mov
sbb
xor
arpl
mov
xchg
or
cld
or
ds
jo
inc
xor
leave
add
cmp
or
adc
add
jg
mov
cmp
inc
or
movs
(bad)
xchg
fist
push
cmp
sbb
or
iret
or
sbb
test
or
cmp
imul
add
xchg
nop
mov
mov
jo
mov
ins
aaa
rol
es
inc
lock
mov
mov
clc
inc
add
scas
leave
lea
inc
add
loopne
dec
or
cmp
xchg
das
add
xchg
leave
add
call
imul
jo
mov
aas
out
xchg
add
gs
ror
aam
inc
mov
or
sub
inc
or
sub
dec
push
jae
add
ret
sub
dec
add
jne
mov
(bad)
or
dec
sbb
xor
mov
xor
sub
jb
pop
inc
jae
cmp
repz
mov
pop
shr
pop
inc
jecxz
add
jmp
arpl
inc
iret
cmp
shl
pop
lods
nop
add
out
and
mov
jp
adc
les
sbb
rol
or
fnsave
add
lds
mov
test
fdiv
push
lds
jp
jnp
lds
push
pop
sbb
xor
fst
cmp
mov
icebp
mov
js
push
xor
into
jmp
push
sar
xor
in
dec
pusha
cmp
pop
popa
inc
int3
es
or
inc
fmulp
sub
fstp
or
adc
dec
repnz
adc
ss
outs
inc
int3
add
pop
push
add
nop
js
or
not
ins
mov
sbb
leave
cmp
add
je
and
aam
xchg
jae
dec
adc
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
cmp
or
or
jecxz
cmp
jns
inc
xchg
repnz
xchg
aas
xchg
pop
das
cld
or
ret
pop
out
jmp
dec
pop
ret
iret
lahf
dec
inc
es
cmp
xchg
lds
pop
enter
xor
xchg
or
inc
mov
and
inc
mov
mov
push
test
inc
std
jmp
dec
dec
das
and
or
(bad)
lods
push
out
ret
rol
or
inc
xchg
inc
adc
lock
and
clc
es
mov
jb
jo
and
daa
lds
pop
sub
or
inc
pop
mov
adc
jo
jmp
add
ins
mov
xchg
xchg
cld
adc
ror
sub
mov
or
push
scas
xchg
add
lods
xchg
outs
lock
aad
cmp
cdq
push
mov
addr16
dec
cmp
or
cmp
rcl
cld
jae
or
stc
mov
add
add
loop
add
add
cmp
sbb
mov
mov
mov
dec
sub
xor
gs
adc
or
inc
add
in
or
clc
mov
sbb
fdiv
dec
push
(bad)
icebp
push
retf
or
rcl
pop
dec
fs
xor
adc
je
inc
xchg
push
fdivr
cmp
ins
jno
es
and
aas
dec
out
shl
mov
mov
or
shr
mov
adc
sbb
in
aad
aaa
or
push
movs
ins
xor
push
pusha
repz
xor
lock
cmps
cmps
mov
xchg
sbb
dec
les
and
shl
adc
out
test
push
inc
or
js
cwde
jb
or
sub
(bad)
mov
je
rcl
test
les
add
adc
cmp
inc
sbb
pop
mov
xor
adc
sub
and
sub
mov
add
aam
iret
and
mov
push
lea
test
iret
mov
mov
sbb
enter
adc
push
add
sub
(bad)
or
sar
mov
jnp
sub
add
mov
movs
mov
and
into
mov
retf
or
loopne
add
test
mov
retf
jo
and
add
xor
push
inc
movs
jo
push
(bad)
xor
xor
div
cs
lea
int3
add
pop
in
iret
or
and
in
inc
push
push
add
xor
in
daa
pop
cmp
ret
aas
and
inc
push
jo
xor
cdq
inc
fst
test
aaa
or
add
inc
or
mov
push
(bad)
aam
(bad)
outs
add
pop
lds
adc
fiadd
adc
cld
xchg
iret
sbb
mov
loopne
xchg
inc
xchg
mov
push
sub
cmp
cmp
xchg
push
push
add
inc
icebp
push
ins
bound
pop
and
push
or
or
inc
xor
sbb
push
add
sub
movs
aas
(bad)
ins
inc
mov
or
add
sbb
in
sbb
cmp
and
or
mov
xchg
and
add
or
lea
les
inc
adc
mov
test
adc
or
loopne
and
gs
inc
add
enter
loop
adc
sub
rol
(bad)
nop
movhps
gs
mov
dec
js
inc
sbb
fsub
outs
or
adc
add
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
je
rcr
retf
enter
inc
add
js
sub
inc
dec
and
std
and
ret
aas
movntq
sub
xchg
mov
push
mov
fsubr
ret
mov
xor
push
push
pop
inc
inc
repz
add
and
cmp
rcl
sbb
ret
cwde
adc
pop
or
repnz
stc
addr16
push
xor
mov
add
add
jmp
mov
xor
(bad)
mov
stos
test
pop
dec
bound
in
xor
and
or
cmp
aam
enter
jo
push
add
jae
inc
inc
mov
cvtps2pi
js
aaa
adc
xchg
or
pop
and
sbb
xchg
es
ret
test
lea
inc
or
lahf
into
mov
test
jg
mov
push
cmp
fcomp
(bad)
mov
(bad)
sbb
imul
jne
adc
inc
cmp
push
ins
and
sbb
movs
ror
push
jecxz
inc
adc
add
xchg
rcr
rcr
or
sub
xchg
xchg
(bad)
pop
and
pop
sub
cld
xor
inc
add
push
adc
(bad)
lods
xchg
jo
pop
add
inc
sub
out
(bad)
mov
inc
or
and
jmp
mov
inc
popa
in
mov
ss
repnz
gs
and
xor
cmps
loope
cwde
inc
dec
add
imul
cs
jmp
nop
adc
lock
adc
pop
pop
add
and
(bad)
es
nop
add
mov
add
pop
adc
sbb
push
push
inc
add
fsub
iret
push
fwait
int3
(bad)
call
nop
dec
ds
or
xchg
cwde
or
xchg
je
dec
add
cmp
push
inc
rol
ret
or
mov
and
test
xchg
test
or
stos
cwde
enter
cwde
add
aas
add
mov
or
and
inc
cmps
mov
xor
les
sbb
cmp
rol
je
add
sbb
mov
loopne
test
or
push
pop
xor
and
sbb
nop
or
and
lods
mov
add
and
mov
sub
and
(bad)
sub
xor
and
shl
or
mov
add
push
add
adc
mov
shr
rol
add
loop
and
cmp
(bad)
es
mov
ins
nop
sub
or
or
(bad)
sbb
les
sub
add
inc
dec
ret
dec
nop
sub
aad
xor
dec
ds
cmp
cmp
cmp
jecxz
loop
cmp
icebp
dec
or
aas
fsub
pusha
outs
aaa
xor
sub
or
push
xchg
ror
or
mov
mov
and
inc
push
mov
inc
pop
sbb
cld
xchg
ret
cmp
int
add
cmp
pop
and
add
or
jo
test
pop
mov
(bad)
fsub
sbb
lea
sbb
adc
loop
inc
cmp
push
add
adc
mov
adc
push
xchg
loope
sbb
and
xor
sub
add
(bad)
nop
unpcklps
loope
add
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
cmp
mov
les
(bad)
js
sub
test
sbb
loop
lea
call
dec
push
(bad)
stc
add
mov
or
and
aaa
dec
adc
pop
sub
push
es
or
and
push
dec
dec
stos
and
and
sbb
test
imul
loope
xchg
pop
or
mov
push
sbb
push
pop
inc
fcom
inc
add
popa
dec
adc
xchg
push
(bad)
sbb
jge
push
dec
add
fsubr
inc
or
sub
jo
cmp
xor
mov
in
fcomp
adc
push
fwait
test
jecxz
adc
(bad)
loopne
movs
xchg
in
fwait
repnz
adc
lahf
adc
inc
xchg
(bad)
mov
jmp
mov
xor
mov
repz
or
add
or
inc
and
mov
enter
and
mov
jno
inc
test
pop
inc
inc
jl
rol
adc
enter
mov
or
push
dec
aaa
mov
ret
daa
repnz
and
jae
nop
inc
or
jbe
test
mov
arpl
mov
aas
xor
adc
xor
repz
in
cmp
(bad)
push
cmp
inc
push
cmovo
inc
outs
and
ret
adc
sbb
mov
jecxz
inc
pop
push
adc
sub
dec
lods
ret
test
or
sub
dec
loopne
xchg
vmwrite
ret
inc
and
dec
mov
xchg
das
mov
add
pushf
pop
ss
mov
cmp
push
pop
inc
and
add
mov
call
imul
js
add
jmp
mov
sub
xchg
iret
aas
test
jns
stos
(bad)
mov
sub
pop
push
(bad)
ja
loop
xchg
adc
or
dec
or
int3
leave
jmp
inc
cmp
into
mov
lea
repnz
add
leave
or
or
xchg
rol
jl
shl
pushf
xchg
add
pop
mov
mov
add
loopne
movhps
stos
add
add
add
inc
test
or
pop
mov
(bad)
mov
jns
adc
mov
sbb
mov
adc
mov
xor
and
push
inc
sbb
pushf
add
nop
mov
add
fisub
jne
mov
add
xor
out
xor
adc
pusha
and
int
pop
cmp
push
jno
shl
xlat
jns
push
arpl
lock
or
fsub
aas
jae
cmp
sbb
repnz
ds
loope
dec
mov
cmp
jecxz
inc
add
xchg
and
jns
push
add
out
jae
adc
push
mov
push
or
into
shl
pop
test
push
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
test
cmp
cmp
mov
pop
cdq
or
jmp
test
sar
adc
test
aas
imul
sbb
jecxz
add
test
sar
popa
and
(bad)
int
cmp
cdq
xor
add
fldcw
sub
pop
sbb
out
mov
repnz
xlat
lds
call
les
cld
(bad)
or
add
pusha
adc
call
adc
mov
push
test
dec
mov
mov
add
dec
retf
sbb
fsubr
mov
inc
pop
rcl
cmp
mov
add
add
add
add
ror
pop
cmp
adc
scas
mov
xor
cmp
add
pop
pop
daa
inc
je
add
xchg
xchg
fstp
out
jmp
jl
add
add
lea
xlat
fmul
sbb
sbb
shl
pxor
rcr
rcl
je
push
sbb
in
push
add
clc
ss
je
or
ret
in
adc
inc
mov
neg
mov
adc
add
cmp
add
rol
test
call
push
fld
icebp
inc
add
adc
int
xor
in
xchg
add
lar
shl
cmp
sub
lock
mov
xchg
mov
pusha
nop
cwde
push
push
ret
add
sub
inc
add
loope
pop
std
xchg
add
push
test
hlt
inc
inc
mov
sub
xlat
add
adc
int
jo
icebp
add
dec
popf
loop
mov
cmp
or
xchg
push
(bad)
sbb
lods
nop
or
mov
xchg
or
call
sbb
cld
adc
jno
stos
and
push
mov
add
aam
adc
sbb
add
ret
lods
add
xchg
pop
and
(bad)
mov
sub
push
mov
cmps
add
or
mov
pop
push
test
xchg
sub
push
into
aas
movs
lods
mov
sbb
sbb
inc
or
xchg
(bad)
adc
inc
js
lds
addr16
sbb
and
sub
add
les
aas
add
cld
(bad)
int3
xor
jecxz
adc
pusha
xor
int3
mov
cmp
ins
repnz
ins
hlt
inc
dec
std
mov
aam
dec
cmp
lea
test
jno
xchg
in
nop
(bad)
or
add
xchg
int3
mov
in
fsubr
lea
cmp
sar
and
dec
js
sub
das
sahf
mov
sub
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
dec
adc
or
push
mov
inc
push
add
pop
and
out
pop
cmp
aas
push
xor
xor
aas
jne
ror
(bad)
shl
cmp
call
cld
mov
call
xchg
repnz
inc
lods
retf
inc
or
iret
(bad)
rcr
jmp
pop
add
pusha
sub
mov
add
push
ins
add
mov
dec
std
xchg
sub
mov
add
movs
push
add
jo
mov
mov
fimul
and
fsub
pop
es
cmp
imul
or
xor
pop
mov
cmp
leave
divps
inc
(bad)
jle
clc
icebp
jecxz
fwait
pop
and
mov
shr
push
loopne
jb
xor
stos
(bad)
fstp
loope
pop
adc
call
lock
adc
fwait
pop
pop
int3
pop
mov
push
outs
xor
mov
inc
es
jae
inc
fwait
xor
pusha
xlat
pop
inc
adc
nop
popf
out
add
inc
cmp
push
add
clc
cmc
pop
push
push
xor
es
rcl
es
mov
daa
nop
or
adc
nop
and
aaa
pushf
push
or
rcl
or
add
stos
cmp
aaa
(bad)
inc
or
push
xor
inc
mov
sbb
xor
arpl
mov
xchg
or
cld
or
ds
jo
inc
xor
leave
add
cmp
or
adc
add
jg
mov
cmp
inc
or
movs
(bad)
xchg
fist
push
cmp
sbb
or
iret
or
sbb
test
or
cmp
imul
add
xchg
nop
mov
mov
jo
mov
ins
aaa
rol
es
inc
lock
mov
mov
clc
inc
add
scas
leave
lea
inc
add
loopne
dec
or
cmp
xchg
das
add
xchg
leave
add
call
imul
jo
mov
aas
out
xchg
add
gs
ror
aam
inc
mov
or
sub
inc
or
sub
dec
push
jae
add
ret
sub
dec
add
jne
mov
(bad)
or
dec
sbb
xor
mov
xor
sub
jb
pop
inc
jae
cmp
repz
mov
pop
shr
pop
inc
jecxz
add
jmp
arpl
inc
iret
cmp
shl
pop
lods
nop
add
out
and
mov
jp
adc
les
sbb
rol
or
fnsave
add
lds
mov
test
fdiv
push
lds
jp
jnp
lds
push
pop
sbb
xor
fst
cmp
mov
icebp
mov
js
push
xor
into
jmp
push
sar
xor
in
dec
pusha
cmp
pop
popa
inc
int3
es
or
inc
fmulp
sub
fstp
or
adc
dec
repnz
adc
ss
outs
inc
int3
add
pop
push
add
nop
js
or
not
ins
mov
sbb
leave
cmp
add
je
and
aam
xchg
jae
dec
adc
add
stc
add
or
inc
sub
add
inc
add
add
or
add
or
mov
rol
mov
ret
xchg
and
cmp
or
or
jecxz
cmp
jns
inc
xchg
repnz
xchg
aas
xchg
pop
das
cld
or
ret
pop
out
jmp
dec
pop
ret
iret
lahf
dec
inc
es
cmp
xchg
lds
pop
enter
xor
xchg
or
inc
mov
and
inc
mov
mov
push
test
inc
std
jmp
dec
dec
das
and
or
(bad)
lods
push
out
ret
rol
or
inc
xchg
inc
adc
lock
and
clc
es
mov
jb
jo
and
daa
lds
pop
sub
or
inc
pop
mov
adc
jo
jmp
add
ins
mov
xchg
xchg
cld
adc
ror
sub
mov
or
push
scas
xchg
add
lods
xchg
outs
lock
aad
cmp
cdq
push
mov
addr16
dec
cmp
or
cmp
rcl
cld
jae
or
stc
mov
add
add
loop
add
add
cmp
sbb
mov
mov
mov
dec
sub
xor
gs
adc
or
inc
add
in
or
clc
mov
sbb
fdiv
dec
push
(bad)
icebp
push
retf
or
rcl
pop
dec
fs
xor
adc
je
inc
xchg
push
fdivr
cmp
ins
jno
es
and
aas
dec
out
shl
mov
mov
or
shr
mov
adc
sbb
in
aad
aaa
or
push
movs
ins
xor
push
pusha
repz
xor
lock
cmps
cmps
mov
xchg
sbb
dec
les
and
shl
adc
out
test
push
inc
or
js
cwde
jb
or
sub
(bad)
mov
je
rcl
test
les
add
adc
cmp
inc
sbb
pop
mov
xor
adc
sub
and
sub
mov
add
aam
iret
and
mov
push
lea
test
iret
mov
mov
sbb
enter
adc
push
add
sub
(bad)
or
sar
mov
jnp
sub
add
mov
movs
mov
and
into
mov
retf
or
loopne
add
test
mov
retf
jo
and
add
xor
push
inc
movs
jo
push
(bad)
xor
xor
div
cs
lea
int3
add
pop
in
iret
or
and
in
inc
push
push
add
xor
in
daa
pop
cmp
ret
aas
and
inc
push
jo
xor
cdq
inc
fst
test
aaa
or
add
inc
or
mov
push
(bad)
aam
(bad)
outs
add
pop
lds
adc
fiadd
adc
cld
xchg
iret
sbb
mov
loopne
xchg
inc
xchg
mov
push
sub
cmp
cmp
xchg
push
push
add
inc
icebp
push
ins
bound
pop
and
push
or
or
inc
xor
sbb
push
add
sub
movs
aas
(bad)
ins
inc
mov
or
add
sbb
in
sbb
cmp
and
or
mov
xchg
and
add
or
lea
les
inc
adc
mov
test
adc
or
loopne
and
gs
inc
add
enter
loop
adc
sub
rol
(bad)
nop
movhps
gs
mov
dec
js
inc
sbb
fsub
outs
or
adc
add
add
add
adc
rol
rol
or
lgdtd
push
add
add
popa
xor
sbb
xor
add
push
add
ins
je
add
push
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
cmps
add
fmul
push
push
dec
(bad)
repz
(bad)
(bad)
jecxz
mov
mov
(bad)
sbb
jmp
stc
into
into
into
cli
out
push
(bad)
(bad)
and
int
cld
mov
mov
push
jecxz
(bad)
fild
std
retf
add
rol
jmp
add
mov
mov
add
out
call
mov
call
xor
(bad)
inc
(bad)
icebp
add
mov
(bad)
in
add
fst
push
adc
cmc
add
cmc
jmp
(bad)
lds
mov
fcmovnb
jmp
(bad)
dec
hlt
out
fsub
mov
(bad)
in
(bad)
jmp
std
xlat
data16
fcom
(bad)
cmc
call
cli
loop
aad
push
mov
fst
mov
(bad)
out
push
mov
(bad)
mov
cmc
out
int3
(bad)
pop
add
fnstcw
(bad)
(bad)
mov
cli
fucomp
sti
cmc
movs
in
repz
xchg
jecxz
(bad)
lahf
(bad)
shr
jge
loop
loope
and
in
int3
lds
shr
aad
repz
xchg
sub
out
fmulp
mov
add
mov
xchg
fdivp
hlt
in
(bad)
enter
mov
(bad)
out
shl
jmp
outs
cli
ror
loope
add
xchg
int3
scas
mov
add
lock
stc
mov
(bad)
mov
fbstp
sar
repz
(bad)
aad
jl
cwde
mov
cmc
(bad)
ficom
cmp
movs
sti
repz
jnp
call
xchg
add
lds
(bad)
das
mov
clc
icebp
enter
imul
cmp
mov
aad
xor
out
neg
out
inc
mov
loope
ins
sbb
xchg
inc
ret
(bad)
fisttp
and
loope
sbb
out
(bad)
neg
sbb
loopne
jmp
or
and
xchg
or
cmc
inc
enter
leave
iret
sti
mov
mov
lock
movs
enter
fstp
loopne
addr16
inc
sahf
(bad)
ret
int3
xchg
jmp
jecxz
cmp
in
add
sub
adc
bnd
repnz
retf
mov
repnz
ret
lock
out
loope
cld
ror
cld
push
add
call
(bad)
fidivr
push
fwait
aam
popf
or
jl
sbb
or
in
or
ror
loop
sbb
add
mov
(bad)
ror
rcl
xchg
dec
mov
lds
les
pop
or
movs
es
lods
lahf
fidivr
nop
adc
repz
fisttp
cmp
mov
sti
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
nop
pusha
add
popa
enter
mov
dec
pushf
dec
push
loop
add
add
mov
stc
cmc
imul
add
push
pop
cmp
into
lds
loope
xchg
nop
rol
retf
jno
xor
xchg
lods
(bad)
or
add
and
add
pop
mov
and
dec
inc
bnd
xor
inc
pushf
iret
mov
cli
adc
xor
pop
es
cdq
jmp
push
jmp
daa
out
and
ss
pushf
jmp
add
mov
push
xchg
inc
sub
inc
add
and
cmp
dec
xchg
xchg
ins
pop
cmp
sub
nop
and
sbb
mov
sub
xchg
and
or
xchg
add
popf
jecxz
xchg
js
data16
mov
scas
pop
lahf
adc
mov
loop
out
loopne
jb
adc
call
dec
add
ja
cmp
rcr
fs
xchg
inc
jle
sub
sub
jge
xchg
int3
push
inc
jae
adc
pop
imul
inc
dec
xor
adc
dec
or
dec
hlt
add
mov
scas
add
pusha
add
sbb
in
cmp
lods
mov
loope
adc
xor
repz
cmp
aam
or
add
and
sub
mov
mov
push
nop
pop
push
sub
add
or
xchg
and
pop
sbb
adc
test
les
mov
dec
mov
dec
add
ret
(bad)
sbb
rol
mov
rol
hlt
adc
mov
fs
add
js
add
std
test
sbb
and
ret
adc
rol
push
rol
pusha
inc
and
in
ret
data16
test
add
sub
stos
cwde
mov
add
pushf
(bad)
lock
add
adc
nop
ins
or
test
mov
in
mov
sbb
jmp
or
ja
cmp
dec
sub
add
inc
sub
pop
test
outs
test
adc
add
pusha
lock
add
enter
mov
jb
push
or
lds
movs
cmp
scas
mov
xchg
mov
sub
or
push
test
repz
dec
and
(bad)
into
cmp
les
nop
xchg
mov
lods
mov
inc
loopne
adc
push
mov
aas
movs
icebp
add
pop
addr16
sub
enter
fimul
fldcw
or
and
mov
call
xlat
lods
xor
es
rcr
xchg
dec
je
pop
inc
dec
xor
inc
rcr
fs
or
clc
rol
sbb
mov
jnp
and
add
pop
test
jp
icebp
add
xchg
mov
mov
dec
pop
sbb
ror
cmc
and
add
sbb
mov
add
sbb
cmp
sbb
mov
mov
punpckhwd
gs
rol
adc
fdiv
mov
xor
mov
lods
sar
jmp
imul
idiv
pop
and
adc
mov
sub
or
rol
and
movs
mov
xor
fist
cmp
inc
pshufw
in
pop
in
add
and
adc
in
mov
div
and
pop
add
popa
pop
xor
inc
inc
call
push
sub
dec
popa
or
sbb
cwde
test
add
in
rcl
xor
mov
add
stos
adc
xor
mov
sbb
inc
pop
push
daa
mov
adc
or
cmp
(bad)
sub
popa
lea
adc
jnp
and
lds
bound
add
loopne
dec
mov
inc
sub
ror
cwde
rcr
sbb
or
out
xchg
jp
gs
dec
inc
dec
jbe
adc
movs
and
test
out
nop
adc
rcr
jb
mov
or
adc
cmp
xchg
(bad)
ror
and
ss
bound
jae
ret
popa
int3
pusha
jp
cwde
lods
in
inc
pop
jbe
or
into
or
sub
add
and
xchg
sbb
sahf
lods
pushf
jecxz
pop
stc
dec
jno
and
mov
add
push
mov
or
push
or
les
adc
mov
call
and
sbb
test
or
push
rcl
or
inc
add
ror
pop
lds
shl
or
mov
pop
loopne
adc
dec
xchg
mul
test
sub
rol
pusha
adc
adc
pop
sub
and
sub
sub
sub
fcmovbe
or
add
aaa
sub
fs
xchg
and
cli
rol
call
dec
idiv
sub
sub
fcom
push
cwde
jmp
es
(bad)
into
hlt
lahf
xor
jmp
bound
pusha
ror
sbb
dec
push
ret
jnp
jns
inc
adc
xchg
test
mov
inc
sbb
jo
adc
add
gs
xor
and
xchg
in
inc
ss
xor
add
jo
or
mov
enter
mov
data16
mov
jns
add
push
add
add
push
test
mov
xor
test
inc
adc
ds
adc
add
gs
es
mov
adc
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
or
ret
xchg
pop
cmp
adc
push
sub
cmovno
and
aam
test
test
dec
add
and
mov
xchg
dec
adc
jbe
and
pop
mov
jns
in
xchg
les
sub
adc
push
retf
mov
mov
add
pop
aas
xchg
call
xchg
pop
retf
push
and
mov
addr16
arpl
inc
or
and
and
mov
xor
inc
or
dec
sub
dec
in
mov
push
jb
scas
inc
add
mov
test
cli
lahf
adc
jmp
ss
cmp
xor
xor
and
sub
or
push
popa
outs
pop
add
sub
nop
fisub
jmp
shr
adc
in
pop
imul
cwde
push
cmp
push
or
je
push
int
fst
dec
movs
push
pusha
sbb
xor
lock
xchg
leave
punpckhdq
xchg
fist
ss
sbb
nop
popa
and
push
add
nop
sub
ins
ror
mov
call
sbb
retf
jge
cmps
(bad)
push
rcl
mov
sbb
mov
jecxz
pop
pop
push
sysexit
mov
nop
mov
pop
sbb
inc
adc
mov
pusha
shl
or
out
jo
(bad)
outs
xor
arpl
pop
and
es
test
(bad)
pushf
jae
ret
shr
xchg
or
aas
mov
jmp
pusha
shl
cdq
cmp
inc
sbb
add
mov
mov
movs
xchg
out
adc
adc
iret
cmovg
mov
inc
cdq
add
(bad)
push
push
inc
fwait
or
jmp
jmp
imul
cmp
push
pop
test
mov
or
into
fsubr
shl
ins
call
cld
jmp
push
add
xchg
call
or
imul
push
or
lock
sbb
les
aas
(bad)
imul
or
push
shl
pop
shl
or
retf
test
push
adc
les
inc
les
adc
mov
add
sbb
rol
aas
inc
xor
jo
bound
and
mov
sbb
retf
or
sbb
ins
(bad)
into
push
pop
ror
inc
imul
xchg
add
dec
xor
into
aad
popa
nop
mov
adc
icebp
dec
enter
hlt
xlat
pop
or
shr
jge
cmp
cmp
cmp
loopne
(bad)
fcom
push
or
push
xor
add
fbstp
mov
mov
(bad)
adc
loop
fsub
popa
inc
xor
xor
sti
jge
(bad)
int
test
and
in
and
ins
loopne
cmp
push
sub
adc
jle
popa
jmp
and
arpl
pop
inc
mov
scas
in
mov
fisttp
adc
add
cdq
inc
aas
xlat
cld
(bad)
jmp
pop
adc
aas
out
(bad)
(bad)
fcom
mov
sbb
std
aas
dec
cmp
jno
dec
jo
or
(bad)
jno
and
test
cmp
cli
call
and
aas
and
std
or
adc
add
or
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
and
or
ret
xchg
pop
push
jns
loop
test
xor
adc
packsswb
adc
inc
cwde
dec
or
mov
enter
dec
lods
cmp
xor
and
cmp
or
mov
push
les
add
push
sub
sub
and
add
push
adc
stc
(bad)
fdivr
and
dec
and
mov
cdq
mov
adc
stos
ret
adc
xchg
pop
test
adc
add
(bad)
sub
mov
dec
enter
adc
scas
sub
xchg
and
mov
mov
mov
cmp
dec
and
inc
push
pop
cmp
adc
push
inc
inc
xchg
ret
test
out
cmp
inc
ins
add
sub
hlt
adc
adc
call
pop
ret
inc
cmps
shl
sub
mov
pop
mov
lods
bound
lock
or
add
pop
add
inc
lods
add
mov
adc
or
mov
loope
add
sbb
inc
test
add
adc
inc
lock
pop
adc
adc
add
adc
enter
adc
retf
cmp
enter
push
or
das
push
fcom
rcl
cmps
cld
repz
sbb
pop
mov
sub
add
xchg
outs
sbb
dec
or
cdq
xchg
dec
es
push
inc
inc
retf
aas
add
ja
imul
inc
and
pop
dec
pop
fmul
add
add
nop
leave
push
aas
pushf
popa
test
daa
inc
je
xchg
enter
loopne
adc
and
or
mov
pushf
mov
movs
into
ins
jmp
nop
and
add
or
dec
and
stos
add
pushf
and
aas
xor
cli
test
int3
jp
or
add
xchg
jecxz
aas
or
or
nop
mov
push
inc
jo
xchg
imul
and
jl
ret
or
mov
lds
call
loop
mov
sbb
test
in
in
test
rcl
test
xor
jecxz
or
cs
or
scas
pop
add
int3
xor
mov
jno
lock
das
jmp
les
outs
xchg
in
(bad)
or
xor
mov
retf
cli
and
iret
enter
inc
add
test
adc
sub
rol
adc
sbb
adc
nop
aas
add
icebp
iret
sub
fs
mov
xor
mov
add
add
nop
aad
or
pusha
inc
or
push
adc
call
nop
(bad)
jae
mov
mov
mov
shr
or
inc
add
jmp
mov
or
xchg
push
push
mov
add
push
or
dec
and
lods
aaa
adc
les
xchg
or
mov
xchg
jmp
mov
sub
jge
mov
jmp
movs
adc
inc
sbb
cld
mov
in
add
mov
loopne
add
sbb
pop
sbb
inc
movntsd
pushf
xchg
push
fistp
sub
sti
and
sbb
fidivr
test
movlps
sbb
sbb
inc
shr
adc
add
xor
add
and
and
add
or
inc
sub
add
add
or
add
or
push
and
adc
mov
ret
push
sbb
icebp
das
add
cmp
popa
mov
sub
push
inc
add
push
out
sub
inc
xchg
cmp
pusha
and
inc
pop
(bad)
push
xor
int3
push
sub
lods
mov
and
mov
xchg
test
add
xor
jl
sub
scas
inc
mov
jmp
add
test
ret
adc
es
enter
mov
cmp
out
mov
clc
outs
loope
pop
jmp
mov
and
lahf
or
mov
xchg
pushf
retf
xchg
sub
or
pop
popa
xchg
mov
enter
repz
xor
test
xchg
cmp
or
or
mov
sbb
mul
jl
jo
and
loope
test
(bad)
aad
loope
(bad)
fild
dec
movs
mov
inc
int
jbe
adc
adc
add
mov
cmp
adc
mov
iret
push
mov
push
add
fs
and
adc
dec
add
push
push
loopne
add
aad
inc
inc
lds
lahf
dec
adc
jo
xchg
mov
jno
adc
movs
dec
push
dec
add
in
pop
mov
sub
adc
clc
cld
or
dec
push
push
mov
arpl
push
jmp
rcl
or
and
sbb
mov
arpl
mov
sub
aas
aas
cld
xor
adc
mov
aas
push
loopne
rcr
outs
or
retf
ins
mov
xchg
add
aam
sbb
repz
iret
jmp
lsl
pushf
mov
jo
mov
sbb
cmp
iret
das
jmp
out
xchg
lods
mov
repnz
push
imul
add
(bad)
adc
movs
add
scas
dec
mov
or
adc
movs
inc
cmp
push
mov
or
jmp
sbb
push
je
inc
fst
hlt
icebp
iret
adc
mov
stos
mov
sti
prefetchwt1
cwde
sar
enter
pop
(bad)
lock
or
cld
push
inc
inc
bound
or
add
sbb
(bad)
or
dec
mov
add
ja
les
aad
les
test
jmp
aad
popa
mov
or
repnz
adc
sub
cld
(bad)
adc
cmp
repnz
daa
aad
loope
rcr
(bad)
icebp
(bad)
adc
enter
je
and
inc
test
pop
add
aas
pop
fild
ret
int
test
and
mov
pop
and
shr
or
dec
inc
fist
xor
frstor
mov
sub
inc
adc
jb
jecxz
and
les
adc
cmp
dec
inc
sbb
ror
(bad)
cmps
push
dec
(bad)
push
(bad)
jl
jp
pushf
(bad)
(bad)
adc
jecxz
das
sbb
inc
xor
or
xor
sbb
lock
add
mov
add
or
pusha
fistp
and
add
or
inc
sub
add
add
or
add
or
lock
or
adc
pop
enter
jg
or
shl
aad
mov
adc
adc
mov
mov
and
mov
(bad)
stc
lock
in
enter
dec
and
dec
adc
dec
add
mov
jno
lds
es
jg
cmp
add
xor
daa
ss
inc
sub
pop
rcl
jl
scas
adc
sbb
dec
adc
in
xchg
mov
push
xchg
jae
shl
or
add
pop
call
xchg
out
ror
adc
sub
mov
sub
inc
in
mov
push
jb
mov
(bad)
lea
inc
mov
or
and
push
push
mov
mov
cmp
sub
mov
dec
clc
loope
push
jbe
movs
imul
or
xor
xchg
(bad)
pop
psraw
lods
xor
add
das
or
sbb
icebp
xor
push
xchg
adc
imul
add
mov
popa
ret
add
mov
adc
add
ss
and
leave
push
pushf
test
dec
ds
mov
std
arpl
pusha
sub
mov
mov
adc
rol
cmp
jo
ds
push
push
push
mov
add
push
inc
inc
mov
je
ret
sbb
popa
popa
mov
sbb
and
sbb
adc
pusha
mov
es
dec
mov
inc
cmps
inc
jbe
pusha
data16
or
dec
adc
fwait
je
icebp
iret
dec
dec
fnop
mov
and
(bad)
push
nop
inc
mov
xor
aas
aas
xor
xchg
pusha
sub
push
sbb
or
push
or
push
mov
loopne
and
inc
xor
mov
lods
in
js
stos
and
inc
adc
stos
or
jae
lods
call
(bad)
lods
int3
adc
scas
outs
jl
iret
xor
ins
mov
jo
dec
mov
dec
sub
sbb
sbb
and
or
pop
add
mov
movs
cld
jo
imul
clc
push
das
mov
sub
int3
add
rol
sub
xor
les
inc
les
adc
mov
add
adc
mov
inc
mov
sbb
xchg
xor
add
inc
(bad)
xchg
xor
(bad)
(bad)
jl
push
or
sbb
mov
mov
and
xlat
push
mov
pop
dec
sbb
dec
xor
inc
inc
cld
xor
dec
sbb
inc
xor
adc
das
jge
push
mov
not
mov
inc
jmp
jo
inc
sub
hlt
test
mov
test
mov
ror
push
mov
add
jecxz
fsub
push
and
dec
clc
aas
sbb
ja
xlat
js
mov
aaa
ins
mov
inc
xor
ret
dec
mov
push
and
mov
fisttp
cmp
mov
loopne
add
xor
out
adc
inc
dec
or
add
iret
cld
inc
call
out
add
je
mov
adc
cmp
cmp
cli
add
add
xor
add
add
mov
pop
dec
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
and
or
ret
xchg
pop
push
jns
loop
test
xor
adc
packsswb
adc
inc
cwde
dec
or
mov
enter
dec
lods
cmp
xor
and
cmp
or
mov
push
les
add
push
sub
sub
and
add
push
adc
stc
(bad)
fdivr
and
dec
and
mov
cdq
mov
adc
stos
ret
adc
xchg
pop
test
adc
add
(bad)
sub
mov
dec
enter
adc
scas
sub
xchg
and
mov
mov
mov
cmp
dec
and
inc
push
pop
cmp
adc
push
inc
inc
xchg
ret
test
out
cmp
inc
ins
add
sub
hlt
adc
adc
call
pop
ret
inc
cmps
shl
sub
mov
pop
mov
lods
bound
lock
or
add
pop
add
inc
lods
add
mov
adc
or
mov
loope
add
sbb
inc
test
add
adc
inc
lock
pop
adc
adc
add
adc
enter
adc
retf
cmp
enter
push
or
das
push
fcom
rcl
cmps
cld
repz
sbb
pop
mov
sub
add
xchg
outs
sbb
dec
or
cdq
xchg
dec
es
push
inc
inc
retf
aas
add
ja
imul
inc
and
pop
dec
pop
fmul
add
add
nop
leave
push
aas
pushf
popa
test
daa
inc
je
xchg
enter
loopne
adc
and
or
mov
pushf
mov
movs
into
ins
jmp
nop
and
add
or
dec
and
stos
add
pushf
and
aas
xor
cli
test
int3
jp
or
add
xchg
jecxz
aas
or
or
nop
mov
push
inc
jo
xchg
imul
and
jl
ret
or
mov
lds
call
loop
mov
sbb
test
in
in
test
rcl
test
xor
jecxz
or
cs
or
scas
pop
add
int3
xor
mov
jno
lock
das
jmp
les
outs
xchg
in
(bad)
or
xor
mov
retf
cli
and
iret
enter
inc
add
test
adc
sub
rol
adc
sbb
adc
nop
aas
add
icebp
iret
sub
fs
mov
xor
mov
add
add
nop
aad
or
pusha
inc
or
push
adc
call
nop
(bad)
jae
mov
mov
mov
enter
xor
ins
mov
or
xchg
push
push
mov
add
push
or
dec
and
shl
push
les
inc
push
xor
repnz
push
pop
or
aam
sub
rol
lods
hlt
icebp
iret
stos
pop
and
sub
ins
push
cli
sub
push
repnz
add
cs
adc
add
pushf
inc
cmp
cld
iret
adc
call
jae
and
inc
movs
mov
(bad)
cmp
les
add
fs
dec
push
sbb
dec
add
inc
cmp
lock
dec
sbb
loopne
(bad)
aaa
nop
call
and
add
xor
add
stc
add
or
inc
sub
add
add
or
add
or
push
and
adc
mov
ret
push
sbb
icebp
das
add
cmp
popa
mov
sub
push
inc
add
push
out
sub
inc
xchg
cmp
pusha
and
inc
pop
(bad)
push
xor
int3
push
sub
lods
mov
and
mov
xchg
test
add
xor
jl
sub
scas
inc
mov
jmp
add
test
ret
adc
es
enter
mov
cmp
out
mov
clc
outs
loope
pop
jmp
mov
and
lahf
or
mov
xchg
pushf
retf
xchg
sub
or
pop
popa
xchg
mov
enter
repz
xor
test
xchg
cmp
or
or
mov
sbb
mul
jl
jo
and
loope
test
(bad)
aad
loope
(bad)
fild
dec
movs
mov
inc
int
jbe
adc
adc
add
mov
cmp
adc
mov
iret
push
mov
push
add
fs
and
adc
dec
add
push
push
loopne
add
aad
inc
inc
lds
lahf
dec
adc
jo
xchg
mov
jno
adc
movs
dec
push
dec
add
in
pop
mov
sub
adc
clc
cld
or
dec
push
push
mov
arpl
push
jmp
rcl
or
and
sbb
mov
arpl
mov
sub
aas
aas
cld
xor
adc
mov
aas
push
loopne
rcr
outs
or
retf
ins
mov
xchg
add
aam
sbb
repz
iret
jmp
lsl
pushf
mov
jo
mov
sbb
cmp
iret
das
jmp
out
xchg
lods
mov
repnz
push
imul
add
(bad)
adc
movs
add
scas
dec
mov
or
adc
movs
inc
cmp
push
mov
or
jmp
sbb
push
je
inc
fst
hlt
icebp
iret
adc
mov
stos
mov
sti
prefetchwt1
cwde
sar
enter
pop
(bad)
lock
or
cld
push
inc
inc
bound
or
add
sbb
(bad)
or
dec
mov
add
ja
les
aad
les
test
jmp
aad
popa
mov
or
repnz
adc
sub
cld
(bad)
adc
cmp
repnz
daa
aad
loope
rcr
(bad)
icebp
(bad)
adc
enter
je
and
inc
test
pop
add
aas
pop
fild
ret
int
test
and
pop
and
xchg
xchg
pop
mov
cmp
movs
xchg
shl
ja
ror
movs
or
sbb
adc
aaa
mov
mov
add
push
add
inc
sbb
ror
fcos
dec
xor
push
xchg
scas
retf
or
cdq
dec
jp
pop
dec
mov
or
jmp
pushf
int
adc
cmp
add
xchg
lock
add
inc
pop
or
int3
pop
test
arpl
add
stc
add
or
inc
sub
add
add
or
add
or
lock
or
adc
pop
enter
jg
or
shl
aad
mov
adc
adc
mov
mov
and
mov
(bad)
stc
lock
in
enter
dec
and
dec
adc
dec
add
mov
jno
lds
es
jg
cmp
add
xor
daa
ss
inc
sub
pop
rcl
jl
scas
adc
sbb
dec
adc
in
xchg
mov
push
xchg
jae
shl
or
add
pop
call
xchg
out
ror
adc
sub
mov
sub
inc
in
mov
push
jb
mov
(bad)
lea
inc
mov
or
and
push
push
mov
mov
cmp
sub
mov
dec
clc
loope
push
jbe
movs
imul
or
xor
xchg
(bad)
pop
psraw
lods
xor
add
das
or
sbb
icebp
xor
push
xchg
adc
imul
add
mov
popa
ret
add
mov
adc
add
ss
and
leave
push
pushf
test
dec
ds
mov
std
arpl
pusha
sub
mov
mov
adc
rol
cmp
jo
ds
push
push
push
mov
add
push
inc
inc
mov
je
ret
sbb
popa
popa
mov
sbb
and
sbb
adc
pusha
mov
es
dec
mov
inc
cmps
inc
jbe
pusha
data16
or
dec
adc
fwait
je
icebp
iret
dec
dec
fnop
mov
and
(bad)
push
nop
inc
mov
xor
aas
aas
xor
xchg
pusha
sub
push
sbb
or
push
or
push
mov
loopne
and
inc
xor
mov
lods
in
js
stos
and
inc
adc
stos
or
jae
lods
call
(bad)
lods
int3
adc
scas
outs
jl
iret
xor
ins
mov
jo
dec
mov
dec
sub
sbb
sbb
and
or
pop
add
mov
movs
cld
jo
imul
clc
push
das
mov
sub
int3
add
rol
sub
xor
les
inc
les
adc
mov
add
adc
mov
inc
mov
sbb
xchg
xor
add
inc
(bad)
xchg
xor
(bad)
(bad)
jl
push
or
sbb
mov
mov
and
xlat
push
mov
pop
dec
sbb
dec
xor
inc
inc
cld
xor
dec
sbb
inc
xor
adc
das
jge
push
mov
not
mov
inc
jmp
jo
inc
sub
hlt
test
mov
test
mov
ror
push
mov
add
jecxz
fsub
push
and
dec
clc
aas
sbb
ja
xlat
sar
fwait
arpl
aas
lods
mov
pop
inc
ja
add
sbb
add
adc
and
retf
aas
mov
adc
inc
dec
les
pop
add
loop
xor
int
mov
mov
call
ret
or
(bad)
in
cmp
jno
je
shl
or
or
aas
adc
out
ret
call
and
inc
xor
xor
loope
jg
ret
sbb
or
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
and
or
ret
xchg
pop
push
jns
loop
test
xor
adc
packsswb
adc
inc
cwde
dec
or
mov
enter
dec
lods
cmp
xor
and
cmp
or
mov
push
les
add
push
sub
sub
and
add
push
adc
stc
(bad)
fdivr
and
dec
and
mov
cdq
mov
adc
stos
ret
adc
xchg
pop
test
adc
add
(bad)
sub
mov
dec
enter
adc
scas
sub
xchg
and
mov
mov
mov
cmp
dec
and
inc
push
pop
cmp
adc
push
inc
inc
xchg
ret
test
out
cmp
inc
ins
add
sub
hlt
adc
adc
call
pop
ret
inc
cmps
shl
sub
mov
pop
mov
lods
bound
lock
or
add
pop
add
inc
lods
add
mov
adc
or
mov
loope
add
sbb
inc
test
add
adc
inc
lock
pop
adc
adc
add
adc
enter
adc
retf
cmp
enter
push
or
das
push
fcom
rcl
cmps
cld
repz
sbb
pop
mov
sub
add
xchg
outs
sbb
dec
or
cdq
xchg
dec
es
push
inc
inc
retf
aas
add
ja
imul
inc
and
pop
dec
pop
fmul
add
add
nop
leave
push
aas
pushf
popa
test
daa
inc
je
xchg
enter
loopne
adc
and
or
mov
pushf
mov
movs
into
ins
jmp
nop
and
add
or
dec
and
stos
add
pushf
and
aas
xor
cli
test
int3
jp
or
add
xchg
jecxz
aas
or
or
nop
mov
push
inc
jo
xchg
imul
and
jl
ret
or
mov
lds
call
loop
mov
sbb
test
in
in
test
rcl
test
xor
jecxz
or
cs
or
scas
pop
add
int3
xor
mov
jno
lock
das
jmp
les
outs
xchg
in
(bad)
or
xor
mov
retf
cli
and
iret
enter
inc
add
test
adc
sub
rol
adc
sbb
adc
nop
aas
add
icebp
iret
sub
fs
mov
xor
mov
add
add
nop
aad
or
pusha
inc
or
push
adc
call
nop
(bad)
jae
mov
mov
mov
shr
or
inc
add
jmp
mov
or
xchg
push
push
mov
add
push
or
dec
and
lods
aaa
adc
les
xchg
or
mov
xchg
jmp
mov
sub
jge
mov
jmp
movs
adc
inc
sbb
cld
mov
in
add
mov
loopne
add
sbb
pop
sbb
inc
movntsd
pushf
xchg
push
fistp
sub
sti
and
sbb
fidivr
test
movlps
sbb
sbb
inc
shr
adc
add
xor
add
and
and
add
or
inc
sub
add
add
or
add
or
push
and
adc
mov
ret
push
sbb
icebp
das
add
cmp
popa
mov
sub
push
inc
add
push
out
sub
inc
xchg
cmp
pusha
and
inc
pop
(bad)
push
xor
int3
push
sub
lods
mov
and
mov
xchg
test
add
xor
jl
sub
scas
inc
mov
jmp
add
test
ret
adc
es
enter
mov
cmp
out
mov
clc
outs
loope
pop
jmp
mov
and
lahf
or
mov
xchg
pushf
retf
xchg
sub
or
pop
popa
xchg
mov
enter
repz
xor
test
xchg
cmp
or
or
mov
sbb
mul
jl
jo
and
loope
test
(bad)
aad
loope
(bad)
fild
dec
movs
mov
inc
int
jbe
adc
adc
add
mov
cmp
adc
mov
iret
push
mov
push
add
fs
and
adc
dec
add
push
push
loopne
add
aad
inc
inc
lds
lahf
dec
adc
jo
xchg
mov
jno
adc
movs
dec
push
dec
add
in
pop
mov
sub
adc
clc
cld
or
dec
push
push
mov
arpl
push
jmp
rcl
or
and
sbb
mov
arpl
mov
sub
aas
aas
cld
xor
adc
mov
aas
push
loopne
rcr
outs
or
retf
ins
mov
xchg
add
aam
sbb
repz
iret
jmp
lsl
pushf
mov
jo
mov
sbb
cmp
iret
das
jmp
out
xchg
lods
mov
repnz
push
imul
add
(bad)
adc
movs
add
scas
dec
mov
or
adc
movs
inc
cmp
push
mov
or
jmp
sbb
push
je
inc
fst
hlt
icebp
iret
adc
mov
stos
mov
sti
prefetchwt1
cwde
sar
enter
pop
(bad)
lock
or
cld
push
inc
inc
bound
or
add
sbb
(bad)
or
dec
mov
add
ja
les
aad
les
test
jmp
aad
popa
mov
or
repnz
adc
sub
cld
(bad)
adc
cmp
repnz
daa
aad
loope
rcr
(bad)
icebp
(bad)
adc
enter
je
and
inc
test
pop
add
aas
pop
fild
ret
int
test
and
mov
pop
and
shr
or
dec
inc
fist
xor
frstor
mov
sub
inc
adc
jb
jecxz
and
les
adc
cmp
dec
inc
sbb
ror
(bad)
cmps
push
dec
(bad)
push
(bad)
jl
jp
pushf
(bad)
(bad)
adc
jecxz
das
sbb
inc
xor
or
xor
sbb
lock
add
mov
add
or
pusha
fistp
and
add
or
inc
sub
add
add
or
add
or
lock
or
adc
pop
enter
jg
or
shl
aad
mov
adc
adc
mov
mov
and
mov
(bad)
stc
lock
in
enter
dec
and
dec
adc
dec
add
mov
jno
lds
es
jg
cmp
add
xor
daa
ss
inc
sub
pop
rcl
jl
scas
adc
sbb
dec
adc
in
xchg
mov
push
xchg
jae
shl
or
add
pop
call
xchg
out
ror
adc
sub
mov
sub
inc
in
mov
push
jb
mov
(bad)
lea
inc
mov
or
and
push
push
mov
mov
cmp
sub
mov
dec
clc
loope
push
jbe
movs
imul
or
xor
xchg
(bad)
pop
psraw
lods
xor
add
das
or
sbb
icebp
xor
push
xchg
adc
imul
add
mov
popa
ret
add
mov
adc
add
ss
and
leave
push
pushf
test
dec
ds
mov
std
arpl
pusha
sub
mov
mov
adc
rol
cmp
jo
ds
push
push
push
mov
add
push
inc
inc
mov
je
ret
sbb
popa
popa
mov
sbb
and
sbb
adc
pusha
mov
es
dec
mov
inc
cmps
inc
jbe
pusha
data16
or
dec
adc
fwait
je
icebp
iret
dec
dec
fnop
mov
and
(bad)
push
nop
inc
mov
xor
aas
aas
xor
xchg
pusha
sub
push
sbb
or
push
or
push
mov
loopne
and
inc
xor
mov
lods
in
js
stos
and
inc
adc
stos
or
jae
lods
call
(bad)
lods
int3
adc
scas
outs
jl
iret
xor
ins
mov
jo
dec
mov
dec
sub
sbb
sbb
and
or
pop
add
mov
movs
cld
jo
imul
clc
push
das
mov
sub
int3
add
rol
sub
xor
les
inc
les
adc
mov
add
adc
mov
inc
mov
sbb
xchg
xor
add
inc
(bad)
xchg
xor
(bad)
(bad)
jl
push
or
sbb
mov
mov
and
xlat
push
mov
pop
dec
sbb
dec
xor
inc
inc
cld
xor
dec
sbb
inc
xor
adc
das
jge
push
mov
not
mov
inc
jmp
jo
inc
sub
hlt
test
mov
test
mov
ror
push
mov
add
jecxz
fsub
push
and
dec
clc
aas
sbb
ja
xlat
js
mov
aaa
ins
mov
inc
xor
ret
dec
mov
push
and
mov
fisttp
cmp
mov
loopne
add
xor
out
adc
inc
dec
or
add
iret
cld
inc
call
out
add
je
mov
adc
cmp
cmp
cli
add
add
xor
add
add
mov
pop
dec
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
and
or
ret
xchg
pop
push
jns
loop
test
xor
adc
packsswb
adc
inc
cwde
dec
or
mov
enter
dec
lods
cmp
xor
and
cmp
or
mov
push
les
add
push
sub
sub
and
add
push
adc
stc
(bad)
fdivr
and
dec
and
mov
cdq
mov
adc
stos
ret
adc
xchg
pop
test
adc
add
(bad)
sub
mov
dec
enter
adc
scas
sub
xchg
and
mov
mov
mov
cmp
dec
and
inc
push
pop
cmp
adc
push
inc
inc
xchg
ret
test
out
cmp
inc
ins
add
sub
hlt
adc
adc
call
pop
ret
inc
cmps
shl
sub
mov
pop
mov
lods
bound
lock
or
add
pop
add
inc
lods
add
mov
adc
or
mov
loope
add
sbb
inc
test
add
adc
inc
lock
pop
adc
adc
add
adc
enter
adc
retf
cmp
enter
push
or
das
push
fcom
rcl
cmps
cld
repz
sbb
pop
mov
sub
add
xchg
outs
sbb
dec
or
cdq
xchg
dec
es
push
inc
inc
retf
aas
add
ja
imul
inc
and
pop
dec
pop
fmul
add
add
nop
leave
push
aas
pushf
popa
test
daa
inc
je
xchg
enter
loopne
adc
and
or
mov
pushf
mov
movs
into
ins
jmp
nop
and
add
or
dec
and
stos
add
pushf
and
aas
xor
cli
test
int3
jp
or
add
xchg
jecxz
aas
or
or
nop
mov
push
inc
jo
xchg
imul
and
jl
ret
or
mov
lds
call
loop
mov
sbb
test
in
in
test
rcl
test
xor
jecxz
or
cs
or
scas
pop
add
int3
xor
mov
jno
lock
das
jmp
les
outs
xchg
in
(bad)
or
xor
mov
retf
cli
and
iret
enter
inc
add
test
adc
sub
rol
adc
sbb
adc
nop
aas
add
icebp
iret
sub
fs
mov
xor
mov
add
add
nop
aad
or
pusha
inc
or
push
adc
call
nop
(bad)
jae
mov
mov
mov
enter
xor
ins
mov
or
xchg
push
push
mov
add
push
or
dec
and
shl
push
les
inc
push
xor
repnz
push
pop
or
aam
sub
rol
lods
hlt
icebp
iret
stos
pop
and
sub
ins
push
cli
sub
push
repnz
add
cs
adc
add
pushf
inc
cmp
cld
iret
adc
call
jae
and
inc
movs
mov
(bad)
cmp
les
add
fs
dec
push
sbb
dec
add
inc
cmp
lock
dec
sbb
loopne
(bad)
aaa
nop
call
and
add
xor
add
stc
add
or
inc
sub
add
add
or
add
or
push
and
adc
mov
ret
push
sbb
icebp
das
add
cmp
popa
mov
sub
push
inc
add
push
out
sub
inc
xchg
cmp
pusha
and
inc
pop
(bad)
push
xor
int3
push
sub
lods
mov
and
mov
xchg
test
add
xor
jl
sub
scas
inc
mov
jmp
add
test
ret
adc
es
enter
mov
cmp
out
mov
clc
outs
loope
pop
jmp
mov
and
lahf
or
mov
xchg
pushf
retf
xchg
sub
or
pop
popa
xchg
mov
enter
repz
xor
test
xchg
cmp
or
or
mov
sbb
mul
jl
jo
and
loope
test
(bad)
aad
loope
(bad)
fild
dec
movs
mov
inc
int
jbe
adc
adc
add
mov
cmp
adc
mov
iret
push
mov
push
add
fs
and
adc
dec
add
push
push
loopne
add
aad
inc
inc
lds
lahf
dec
adc
jo
xchg
mov
jno
adc
movs
dec
push
dec
add
in
pop
mov
sub
adc
clc
cld
or
dec
push
push
mov
arpl
push
jmp
rcl
or
and
sbb
mov
arpl
mov
sub
aas
aas
cld
xor
adc
mov
aas
push
loopne
rcr
outs
or
retf
ins
mov
xchg
add
aam
sbb
repz
iret
jmp
lsl
pushf
mov
jo
mov
sbb
cmp
iret
das
jmp
out
xchg
lods
mov
repnz
push
imul
add
(bad)
adc
movs
add
scas
dec
mov
or
adc
movs
inc
cmp
push
mov
or
jmp
sbb
push
je
inc
fst
hlt
icebp
iret
adc
mov
stos
mov
sti
prefetchwt1
cwde
sar
enter
pop
(bad)
lock
or
cld
push
inc
inc
bound
or
add
sbb
(bad)
or
dec
mov
add
ja
les
aad
les
test
jmp
aad
popa
mov
or
repnz
adc
sub
cld
(bad)
adc
cmp
repnz
daa
aad
loope
rcr
(bad)
icebp
(bad)
adc
enter
je
and
inc
test
pop
add
aas
pop
fild
ret
int
test
and
pop
and
xchg
xchg
pop
mov
cmp
movs
xchg
shl
ja
ror
movs
or
sbb
adc
aaa
mov
mov
add
push
add
inc
sbb
ror
fcos
dec
xor
push
xchg
scas
retf
or
cdq
dec
jp
pop
dec
mov
or
jmp
pushf
int
adc
cmp
add
xchg
lock
add
inc
pop
or
int3
pop
test
arpl
add
stc
add
or
inc
sub
add
add
or
add
or
lock
or
adc
pop
enter
jg
or
shl
aad
mov
adc
adc
mov
mov
and
mov
(bad)
stc
lock
in
enter
dec
and
dec
adc
dec
add
mov
jno
lds
es
jg
cmp
add
xor
daa
ss
inc
sub
pop
rcl
jl
scas
adc
sbb
dec
adc
in
xchg
mov
push
xchg
jae
shl
or
add
pop
call
xchg
out
ror
adc
sub
mov
sub
inc
in
mov
push
jb
mov
(bad)
lea
inc
mov
or
and
push
push
mov
mov
cmp
sub
mov
dec
clc
loope
push
jbe
movs
imul
or
xor
xchg
(bad)
pop
psraw
lods
xor
add
das
or
sbb
icebp
xor
push
xchg
adc
imul
add
mov
popa
ret
add
mov
adc
add
ss
and
leave
push
pushf
test
dec
ds
mov
std
arpl
pusha
sub
mov
mov
adc
rol
cmp
jo
ds
push
push
push
mov
add
push
inc
inc
mov
je
ret
sbb
popa
popa
mov
sbb
and
sbb
adc
pusha
mov
es
dec
mov
inc
cmps
inc
jbe
pusha
data16
or
dec
adc
fwait
je
icebp
iret
dec
dec
fnop
mov
and
(bad)
push
nop
inc
mov
xor
aas
aas
xor
xchg
pusha
sub
push
sbb
or
push
or
push
mov
loopne
and
inc
xor
mov
lods
in
js
stos
and
inc
adc
stos
or
jae
lods
call
(bad)
lods
int3
adc
scas
outs
jl
iret
xor
ins
mov
jo
dec
mov
dec
sub
sbb
sbb
and
or
pop
add
mov
movs
cld
jo
imul
clc
push
das
mov
sub
int3
add
rol
sub
xor
les
inc
les
adc
mov
add
adc
mov
inc
mov
sbb
xchg
xor
add
inc
(bad)
xchg
xor
(bad)
(bad)
jl
push
or
sbb
mov
mov
and
xlat
push
mov
pop
dec
sbb
dec
xor
inc
inc
cld
xor
dec
sbb
inc
xor
adc
das
jge
push
mov
not
mov
inc
jmp
jo
inc
sub
hlt
test
mov
test
mov
ror
push
mov
add
jecxz
fsub
push
and
dec
clc
aas
sbb
ja
xlat
sar
fwait
arpl
aas
lods
mov
pop
inc
ja
add
sbb
add
adc
and
retf
aas
mov
adc
inc
dec
les
pop
add
loop
xor
int
mov
mov
call
ret
or
(bad)
in
cmp
jno
je
shl
or
or
aas
adc
out
ret
call
and
inc
xor
xor
loope
jg
ret
sbb
or
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
and
or
ret
xchg
pop
push
jns
loop
test
xor
adc
packsswb
adc
inc
cwde
dec
or
mov
enter
dec
lods
cmp
xor
and
cmp
or
mov
push
les
add
push
sub
sub
and
add
push
adc
stc
(bad)
fdivr
and
dec
and
mov
cdq
mov
adc
stos
ret
adc
xchg
pop
test
adc
add
(bad)
sub
mov
dec
enter
adc
scas
sub
xchg
and
mov
mov
mov
cmp
dec
and
inc
push
pop
cmp
adc
push
inc
inc
xchg
ret
test
out
cmp
inc
ins
add
sub
hlt
adc
adc
call
pop
ret
inc
cmps
shl
sub
mov
pop
mov
lods
bound
lock
or
add
pop
add
inc
lods
add
mov
adc
or
mov
loope
add
sbb
inc
test
add
adc
inc
lock
pop
adc
adc
add
adc
enter
adc
retf
cmp
enter
push
or
das
push
fcom
rcl
cmps
cld
repz
sbb
pop
mov
sub
add
xchg
outs
sbb
dec
or
cdq
xchg
dec
es
push
inc
inc
retf
aas
add
ja
imul
inc
and
pop
dec
pop
fmul
add
add
nop
leave
push
aas
pushf
popa
test
daa
inc
je
xchg
enter
loopne
adc
and
or
mov
pushf
mov
movs
into
ins
jmp
nop
and
add
or
dec
and
stos
add
pushf
and
aas
xor
cli
test
int3
jp
or
add
xchg
jecxz
aas
or
or
nop
mov
push
inc
jo
xchg
imul
and
jl
ret
or
mov
lds
call
loop
mov
sbb
test
in
in
test
rcl
test
xor
jecxz
or
cs
or
scas
pop
add
int3
xor
mov
jno
lock
das
jmp
les
outs
xchg
in
(bad)
or
xor
mov
retf
cli
and
iret
enter
inc
add
test
adc
sub
rol
adc
sbb
adc
nop
aas
add
icebp
iret
sub
fs
mov
xor
mov
add
add
nop
aad
or
pusha
inc
or
push
adc
call
nop
(bad)
jae
mov
mov
mov
shr
or
inc
add
jmp
mov
or
xchg
push
push
mov
add
push
or
dec
and
lods
aaa
adc
les
xchg
or
mov
xchg
jmp
mov
sub
jge
mov
jmp
movs
adc
inc
sbb
cld
mov
in
add
mov
loopne
add
sbb
pop
sbb
inc
movntsd
pushf
xchg
push
fistp
sub
sti
and
sbb
fidivr
test
movlps
sbb
sbb
inc
shr
adc
add
xor
add
and
and
add
or
inc
sub
add
add
or
add
or
push
and
adc
mov
ret
push
sbb
icebp
das
add
cmp
popa
mov
sub
push
inc
add
push
out
sub
inc
xchg
cmp
pusha
and
inc
pop
(bad)
push
xor
int3
push
sub
lods
mov
and
mov
xchg
test
add
xor
jl
sub
scas
inc
mov
jmp
add
test
ret
adc
es
enter
mov
cmp
out
mov
clc
outs
loope
pop
jmp
mov
and
lahf
or
mov
xchg
pushf
retf
xchg
sub
or
pop
popa
xchg
mov
enter
repz
xor
test
xchg
cmp
or
or
mov
sbb
mul
jl
jo
and
loope
test
(bad)
aad
loope
(bad)
fild
dec
movs
mov
inc
int
jbe
adc
adc
add
mov
cmp
adc
mov
iret
push
mov
push
add
fs
and
adc
dec
add
push
push
loopne
add
aad
inc
inc
lds
lahf
dec
adc
jo
xchg
mov
jno
adc
movs
dec
push
dec
add
in
pop
mov
sub
adc
clc
cld
or
dec
push
push
mov
arpl
push
jmp
rcl
or
and
sbb
mov
arpl
mov
sub
aas
aas
cld
xor
adc
mov
aas
push
loopne
rcr
outs
or
retf
ins
mov
xchg
add
aam
sbb
repz
iret
jmp
lsl
pushf
mov
jo
mov
sbb
cmp
iret
das
jmp
out
xchg
lods
mov
repnz
push
imul
add
(bad)
adc
movs
add
scas
dec
mov
or
adc
movs
inc
cmp
push
mov
or
jmp
sbb
push
je
inc
fst
hlt
icebp
iret
adc
mov
stos
mov
sti
prefetchwt1
cwde
sar
enter
pop
(bad)
lock
or
cld
push
inc
inc
bound
or
add
sbb
(bad)
or
dec
mov
add
ja
les
aad
les
test
jmp
aad
popa
mov
or
repnz
adc
sub
cld
(bad)
adc
cmp
repnz
daa
aad
loope
rcr
(bad)
icebp
(bad)
adc
enter
je
and
inc
test
pop
add
aas
pop
fild
ret
int
test
and
mov
pop
and
shr
or
dec
inc
fist
xor
frstor
mov
sub
inc
adc
jb
jecxz
and
les
adc
cmp
dec
inc
sbb
ror
(bad)
cmps
push
dec
(bad)
push
(bad)
jl
jp
pushf
(bad)
(bad)
adc
jecxz
das
sbb
inc
xor
or
xor
sbb
lock
add
mov
add
or
pusha
fistp
and
add
or
inc
sub
add
add
or
add
or
lock
or
adc
pop
enter
jg
or
shl
aad
mov
adc
adc
mov
mov
and
mov
(bad)
stc
lock
in
enter
dec
and
dec
adc
dec
add
mov
jno
lds
es
jg
cmp
add
xor
daa
ss
inc
sub
pop
rcl
jl
scas
adc
sbb
dec
adc
in
xchg
mov
push
xchg
jae
shl
or
add
pop
call
xchg
out
ror
adc
sub
mov
sub
inc
in
mov
push
jb
mov
(bad)
lea
inc
mov
or
and
push
push
mov
mov
cmp
sub
mov
dec
clc
loope
push
jbe
movs
imul
or
xor
xchg
(bad)
pop
psraw
lods
xor
add
das
or
sbb
icebp
xor
push
xchg
adc
imul
add
mov
popa
ret
add
mov
adc
add
ss
and
leave
push
pushf
test
dec
ds
mov
std
arpl
pusha
sub
mov
mov
adc
rol
cmp
jo
ds
push
push
push
mov
add
push
inc
inc
mov
je
ret
sbb
popa
popa
mov
sbb
and
sbb
adc
pusha
mov
es
dec
mov
inc
cmps
inc
jbe
pusha
data16
or
dec
adc
fwait
je
icebp
iret
dec
dec
fnop
mov
and
(bad)
push
nop
inc
mov
xor
aas
aas
xor
xchg
pusha
sub
push
sbb
or
push
or
push
mov
loopne
and
inc
xor
mov
lods
in
js
stos
and
inc
adc
stos
or
jae
lods
call
(bad)
lods
int3
adc
scas
outs
jl
iret
xor
ins
mov
jo
dec
mov
dec
sub
sbb
sbb
and
or
pop
add
mov
movs
cld
jo
imul
clc
push
das
mov
sub
int3
add
rol
sub
xor
les
inc
les
adc
mov
add
adc
mov
inc
mov
sbb
xchg
xor
add
inc
(bad)
xchg
xor
(bad)
(bad)
jl
push
or
sbb
mov
mov
and
xlat
push
mov
pop
dec
sbb
dec
xor
inc
inc
cld
xor
dec
sbb
inc
xor
adc
das
jge
push
mov
not
mov
inc
jmp
jo
inc
sub
hlt
test
mov
test
mov
ror
push
mov
add
jecxz
fsub
push
and
dec
clc
aas
sbb
ja
xlat
js
mov
aaa
ins
mov
inc
xor
ret
dec
mov
push
and
mov
fisttp
cmp
mov
loopne
add
xor
out
adc
inc
dec
or
add
iret
cld
inc
call
out
add
je
mov
adc
cmp
cmp
cli
add
add
xor
add
add
mov
pop
dec
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
and
or
ret
xchg
pop
push
jns
loop
test
xor
adc
packsswb
adc
inc
cwde
dec
or
mov
enter
dec
lods
cmp
xor
and
cmp
or
mov
push
les
add
push
sub
sub
and
add
push
adc
stc
(bad)
fdivr
and
dec
and
mov
cdq
mov
adc
stos
ret
adc
xchg
pop
test
adc
add
(bad)
sub
mov
dec
enter
adc
scas
sub
xchg
and
mov
mov
mov
cmp
dec
and
inc
push
pop
cmp
adc
push
inc
inc
xchg
ret
test
out
cmp
inc
ins
add
sub
hlt
adc
adc
call
pop
ret
inc
cmps
shl
sub
mov
pop
mov
lods
bound
lock
or
add
pop
add
inc
lods
add
mov
adc
or
mov
loope
add
sbb
inc
test
add
adc
inc
lock
pop
adc
adc
add
adc
enter
adc
retf
cmp
enter
push
or
das
push
fcom
rcl
cmps
cld
repz
sbb
pop
mov
sub
add
xchg
outs
sbb
dec
or
cdq
xchg
dec
es
push
inc
inc
retf
aas
add
ja
imul
inc
and
pop
dec
pop
fmul
add
add
nop
leave
push
aas
pushf
popa
test
daa
inc
je
xchg
enter
loopne
adc
and
or
mov
pushf
mov
movs
into
ins
jmp
nop
and
add
or
dec
and
stos
add
pushf
and
aas
xor
cli
test
int3
jp
or
add
xchg
jecxz
aas
or
or
nop
mov
push
inc
jo
xchg
imul
and
jl
ret
or
mov
lds
call
loop
mov
sbb
test
in
in
test
rcl
test
xor
jecxz
or
cs
or
scas
pop
add
int3
xor
mov
jno
lock
das
jmp
les
outs
xchg
in
(bad)
or
xor
mov
retf
cli
and
iret
enter
inc
add
test
adc
sub
rol
adc
sbb
adc
nop
aas
add
icebp
iret
sub
fs
mov
xor
mov
add
add
nop
aad
or
pusha
inc
or
push
adc
call
nop
(bad)
jae
mov
mov
mov
enter
xor
ins
mov
or
xchg
push
push
mov
add
push
or
dec
and
shl
push
les
inc
push
xor
repnz
push
pop
or
aam
sub
rol
lods
hlt
icebp
iret
stos
pop
and
sub
ins
push
cli
sub
push
repnz
add
cs
adc
add
pushf
inc
cmp
cld
iret
adc
call
jae
and
inc
movs
mov
(bad)
cmp
les
add
fs
dec
push
sbb
dec
add
inc
cmp
lock
dec
sbb
loopne
(bad)
aaa
nop
call
and
add
xor
add
stc
add
or
inc
sub
add
add
or
add
or
push
and
adc
mov
ret
push
sbb
icebp
das
add
cmp
popa
mov
sub
push
inc
add
push
out
sub
inc
xchg
cmp
pusha
and
inc
pop
(bad)
push
xor
int3
push
sub
lods
mov
and
mov
xchg
test
add
xor
jl
sub
scas
inc
mov
jmp
add
test
ret
adc
es
enter
mov
cmp
out
mov
clc
outs
loope
pop
jmp
mov
and
lahf
or
mov
xchg
pushf
retf
xchg
sub
or
pop
popa
xchg
mov
enter
repz
xor
test
xchg
cmp
or
or
mov
sbb
mul
jl
jo
and
loope
test
(bad)
aad
loope
(bad)
fild
dec
movs
mov
inc
int
jbe
adc
adc
add
mov
cmp
adc
mov
iret
push
mov
push
add
fs
and
adc
dec
add
push
push
loopne
add
aad
inc
inc
lds
lahf
dec
adc
jo
xchg
mov
jno
adc
movs
dec
push
dec
add
in
pop
mov
sub
adc
clc
cld
or
dec
push
push
mov
arpl
push
jmp
rcl
or
and
sbb
mov
arpl
mov
sub
aas
aas
cld
xor
adc
mov
aas
push
loopne
rcr
outs
or
retf
ins
mov
xchg
add
aam
sbb
repz
iret
jmp
lsl
pushf
mov
jo
mov
sbb
cmp
iret
das
jmp
out
xchg
lods
mov
repnz
push
imul
add
(bad)
adc
movs
add
scas
dec
mov
or
adc
movs
inc
cmp
push
mov
or
jmp
sbb
push
je
inc
fst
hlt
icebp
iret
adc
mov
stos
mov
sti
prefetchwt1
cwde
sar
enter
pop
(bad)
lock
or
cld
push
inc
inc
bound
or
add
sbb
(bad)
or
dec
mov
add
ja
les
aad
les
test
jmp
aad
popa
mov
or
repnz
adc
sub
cld
(bad)
adc
cmp
repnz
daa
aad
loope
rcr
(bad)
icebp
(bad)
adc
enter
je
and
inc
test
pop
add
aas
pop
fild
ret
int
test
and
pop
and
xchg
xchg
pop
mov
cmp
movs
xchg
shl
ja
ror
movs
or
sbb
adc
aaa
mov
mov
add
push
add
inc
sbb
ror
fcos
dec
xor
push
xchg
scas
retf
or
cdq
dec
jp
pop
dec
mov
or
jmp
pushf
int
adc
cmp
add
xchg
lock
add
inc
pop
or
int3
pop
test
arpl
add
stc
add
or
inc
sub
add
add
or
add
or
lock
or
adc
pop
enter
jg
or
shl
aad
mov
adc
adc
mov
mov
and
mov
(bad)
stc
lock
in
enter
dec
and
dec
adc
dec
add
mov
jno
lds
es
jg
cmp
add
xor
daa
ss
inc
sub
pop
rcl
jl
scas
adc
sbb
dec
adc
in
xchg
mov
push
xchg
jae
shl
or
add
pop
call
xchg
out
ror
adc
sub
mov
sub
inc
in
mov
push
jb
mov
(bad)
lea
inc
mov
or
and
push
push
mov
mov
cmp
sub
mov
dec
clc
loope
push
jbe
movs
imul
or
xor
xchg
(bad)
pop
psraw
lods
xor
add
das
or
sbb
icebp
xor
push
xchg
adc
imul
add
mov
popa
ret
add
mov
adc
add
ss
and
leave
push
pushf
test
dec
ds
mov
std
arpl
pusha
sub
mov
mov
adc
rol
cmp
jo
ds
push
push
push
mov
add
push
inc
inc
mov
je
ret
sbb
popa
popa
mov
sbb
and
sbb
adc
pusha
mov
es
dec
mov
inc
cmps
inc
jbe
pusha
data16
or
dec
adc
fwait
je
icebp
iret
dec
dec
fnop
mov
and
(bad)
push
nop
inc
mov
xor
aas
aas
xor
xchg
pusha
sub
push
sbb
or
push
or
push
mov
loopne
and
inc
xor
mov
lods
in
js
stos
and
inc
adc
stos
or
jae
lods
call
(bad)
lods
int3
adc
scas
outs
jl
iret
xor
ins
mov
jo
dec
mov
dec
sub
sbb
sbb
and
or
pop
add
mov
movs
cld
jo
imul
clc
push
das
mov
sub
int3
add
rol
sub
xor
les
inc
les
adc
mov
add
adc
mov
inc
mov
sbb
xchg
xor
add
inc
(bad)
xchg
xor
(bad)
(bad)
jl
push
or
sbb
mov
mov
and
xlat
push
mov
pop
dec
sbb
dec
xor
inc
inc
cld
xor
dec
sbb
inc
xor
adc
das
jge
push
mov
not
mov
inc
jmp
jo
inc
sub
hlt
test
mov
test
mov
ror
push
mov
add
jecxz
fsub
push
and
dec
clc
aas
sbb
ja
xlat
sar
fwait
arpl
aas
lods
mov
pop
inc
ja
add
sbb
add
adc
and
retf
aas
mov
adc
inc
dec
les
pop
add
loop
xor
int
mov
mov
call
ret
or
(bad)
in
cmp
jno
je
shl
or
or
aas
adc
out
ret
call
and
inc
xor
xor
loope
jg
ret
sbb
or
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
and
or
ret
xchg
pop
push
jns
loop
test
xor
adc
packsswb
adc
inc
cwde
dec
or
mov
enter
dec
lods
cmp
xor
and
cmp
or
mov
push
les
add
push
sub
sub
and
add
push
adc
stc
(bad)
fdivr
and
dec
and
mov
cdq
mov
adc
stos
ret
adc
xchg
pop
test
adc
add
(bad)
sub
mov
dec
enter
adc
scas
sub
xchg
and
mov
mov
mov
cmp
dec
and
inc
push
pop
cmp
adc
push
inc
inc
xchg
ret
test
out
cmp
inc
ins
add
sub
hlt
adc
adc
call
pop
ret
inc
cmps
shl
sub
mov
pop
mov
lods
bound
lock
or
add
pop
add
inc
lods
add
mov
adc
or
mov
loope
add
sbb
inc
test
add
adc
inc
lock
pop
adc
adc
add
adc
enter
adc
retf
cmp
enter
push
or
das
push
fcom
rcl
cmps
cld
repz
sbb
pop
mov
sub
add
xchg
outs
sbb
dec
or
cdq
xchg
dec
es
push
inc
inc
retf
aas
add
ja
imul
inc
and
pop
dec
pop
fmul
add
add
nop
leave
push
aas
pushf
popa
test
daa
inc
je
xchg
enter
loopne
adc
and
or
mov
pushf
mov
movs
into
ins
jmp
nop
and
add
or
dec
and
stos
add
pushf
and
aas
xor
cli
test
int3
jp
or
add
xchg
jecxz
aas
or
or
nop
mov
push
inc
jo
xchg
imul
and
jl
ret
or
mov
lds
call
loop
mov
sbb
test
in
in
test
rcl
test
xor
jecxz
or
cs
or
scas
pop
add
int3
xor
mov
jno
lock
das
jmp
les
outs
xchg
in
(bad)
or
xor
mov
retf
cli
and
iret
enter
inc
add
test
adc
sub
rol
adc
sbb
adc
nop
aas
add
icebp
iret
sub
fs
mov
xor
mov
add
add
nop
aad
or
pusha
inc
or
push
adc
call
nop
(bad)
jae
mov
mov
mov
shr
or
inc
add
jmp
mov
or
xchg
push
push
mov
add
push
or
dec
and
lods
aaa
adc
les
xchg
or
mov
xchg
jmp
mov
sub
jge
mov
jmp
movs
adc
inc
sbb
cld
mov
in
add
mov
loopne
add
sbb
pop
sbb
inc
movntsd
pushf
xchg
push
fistp
sub
sti
and
sbb
fidivr
test
movlps
sbb
sbb
inc
shr
adc
add
xor
add
and
cmp
adc
inc
or
add
add
dec
add
and
add
add
add
popa
xor
sbb
xor
add
add
mov
add
inc
dec
inc
cmp
popa
add
(bad)
(bad)
sti
cld
lods
add
add
mov
push
dec
psubq
xchg
mov
mov
imul
mov
(bad)
fiadd
std
retf
retf
sub
mov
push
push
xchg
out
(bad)
rol
mov
pop
fwait
gs
cld
ror
xchg
int
ret
add
shr
lods
mov
shl
shr
hlt
in
test
rol
mov
lds
add
(bad)
xchg
leave
mov
hlt
std
sub
test
ss
repz
dec
out
std
aam
add
jmp
add
jmp
movs
fsub
or
mov
cld
(bad)
call
mov
imul
(bad)
jmp
push
(bad)
(bad)
(bad)
adc
stc
std
add
sub
sbb
leave
ins
aad
xchg
iret
mov
mov
inc
add
(bad)
mov
aam
jl
jmp
ja
repnz
fcmovbe
xor
ftst
in
in
not
mov
fld
(bad)
(bad)
xor
xor
xchg
or
(bad)
sbb
jmp
add
pushf
pop
(bad)
std
fcos
cli
outs
jmp
xor
sahf
xlat
retf
or
lds
jmp
mov
lea
push
retf
hlt
ret
jp
fsubr
mov
fadd
jmp
or
jmp
mov
jae
in
icebp
std
std
loopne
add
sbb
mov
test
push
(bad)
in
in
push
push
fdivr
sbb
rcl
fdivr
cld
mov
test
jmp
(bad)
shl
pop
imul
add
test
scas
rcl
mov
out
ret
and
in
int
lahf
ret
push
es
inc
fs
aam
test
sbb
cmp
lods
out
into
jmp
fisub
leave
icebp
out
push
mov
stc
stc
clc
idiv
loopne
nop
iret
xchg
lea
(bad)
dec
out
cmps
pop
add
in
add
ror
int
mov
fdivr
int3
or
iret
lock
mov
mov
cld
call
hlt
mov
xchg
push
add
lods
add
shl
ins
(bad)
mov
jmp
or
cli
mov
aad
loop
out
sti
mov
mov
(bad)
jnp
mov
call
or
add
clc
out
rep
sbb
cli
sar
clc
or
loopne
xchg
movs
mov
and
rcl
repnz
jl
test
lods
ud0
add
fsub
jle
add
retf
out
out
fs
cmc
ror
div
and
repnz
repz
div
mov
cmp
test
sbb
int3
jge
ror
mov
lock
push
neg
outs
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
mov
inc
jg
mov
shl
dec
pushf
dec
shl
sbb
mov
add
mov
arpl
daa
ret
and
mov
sub
loop
sub
(bad)
retf
jmp
fmul
xchg
sbb
pusha
adc
cmp
data16
pop
xor
mov
retf
test
and
leave
clc
inc
mov
mov
jo
ret
aam
add
js
push
adc
stos
jle
clc
inc
ins
shr
xchg
mov
sbb
add
push
shr
jg
sahf
sub
xchg
movs
repz
mov
push
sub
test
mov
xchg
jmp
imul
bound
or
outs
add
ins
(bad)
shl
aas
shl
inc
add
shl
(bad)
push
in
mov
xor
mov
add
stc
leave
dec
push
or
adc
stos
je
call
std
ja
mov
lock
leave
push
adc
fs
jbe
clc
and
cmp
mov
jnp
sub
cmp
int
sbb
inc
rol
inc
and
cld
pop
mov
add
je
pop
sbb
inc
adc
les
add
in
nop
mov
xchg
add
or
dec
dec
je
bound
push
sub
xor
dec
and
sbb
adc
add
and
xor
popa
and
or
inc
xor
or
sub
xchg
mov
cmps
pushf
inc
fs
imul
pusha
inc
sbb
xchg
popa
lea
push
sub
mov
and
and
(bad)
add
sbb
ret
add
add
loopne
and
test
mov
add
jecxz
mov
jl
add
loopne
add
imul
scas
jmp
sahf
xchg
sbb
push
pop
sbb
push
and
xor
pop
(bad)
mov
scas
sub
stos
xor
enter
mov
jno
add
cwde
add
mov
inc
jp
mov
xor
pushf
dec
xchg
push
adc
xor
(bad)
fcmovnu
jmp
mov
mov
xor
adc
cmps
lea
ret
das
add
shr
stc
push
lds
push
inc
add
cmps
inc
add
call
mov
mov
js
movs
sub
xchg
pop
xchg
add
lock
or
lock
push
popa
or
add
xor
loopne
add
cmps
sbb
retf
paddq
xor
add
dec
js
enter
pop
push
adc
js
jecxz
js
or
inc
ins
retf
jcxz
inc
adc
shl
cmp
cs
sbb
mov
ret
jnp
inc
sbb
push
outs
mov
mov
inc
and
jge
jo
or
lods
and
js
add
and
lea
adc
inc
or
dec
push
xor
aas
fcom
add
mov
movs
mov
ss
inc
inc
sbb
inc
sbb
mov
(bad)
neg
push
add
aad
sbb
mov
bswap
ror
add
jl
add
adc
add
xlat
cmp
add
adc
sbb
jle
test
sub
and
jle
shr
or
or
pop
ds
add
adc
push
pop
mov
fs
arpl
push
cmp
ins
loopne
pop
cmp
adc
or
mov
inc
add
ror
jo
cmp
adc
jae
xor
and
add
popf
shr
nop
mov
add
mov
test
mov
sub
pop
add
adc
nop
xchg
call
test
mov
sbb
ror
stc
popf
inc
and
nop
ret
xor
add
jo
sub
and
nop
cvtps2pi
adc
in
mov
cwde
mov
scas
imul
adc
add
nop
mov
ds
add
inc
and
mov
adc
adc
jne
adc
gs
sbb
or
lock
adc
rol
adc
or
ror
jo
push
and
xchg
cmp
sbb
and
push
cmp
cmp
xor
inc
les
adc
out
mov
mov
repnz
lahf
mov
loopne
inc
call
add
das
ja
shr
jo
jp
loop
sysexit
adc
pusha
adc
or
mov
cmp
loopne
or
rcl
jb
or
enter
test
dec
daa
jns
push
in
getsec
clc
je
ret
test
mov
and
push
inc
pop
inc
mov
xor
inc
rol
outs
adc
(bad)
ret
call
add
push
loopne
and
cli
pop
out
adc
aam
push
int
or
pop
mov
loopne
jg
ret
daa
aad
repnz
sbb
xor
xor
lods
pop
cmp
pop
dec
pop
push
or
movs
cmp
pusha
pop
stos
mov
or
and
sub
sub
adc
popf
dec
add
das
jecxz
sbb
lods
mov
push
lock
ins
rol
loopne
adc
nop
inc
push
push
push
add
pusha
mov
push
dec
or
pusha
add
scas
mov
and
mov
pop
cmp
cmovl
or
nop
ret
pusha
inc
or
pop
pop
sbb
cs
lock
pop
ret
inc
test
jmp
test
mov
mov
or
cwde
cwde
jno
add
adc
mov
jno
das
mov
sbb
je
mov
and
out
add
les
push
push
pop
shl
lock
in
ret
adc
rol
lods
pusha
pop
mov
popa
or
sbb
icebp
add
fld
sbb
aad
adc
int3
and
mov
loopne
addr16
mov
iret
sub
dec
pop
inc
ror
into
mov
sbb
icebp
add
movs
add
pop
pusha
rcl
mov
add
mov
jl
ror
and
jo
push
mov
add
cmp
adc
pusha
add
adc
js
pop
xor
rcl
cli
add
inc
test
add
mov
mov
popa
popf
(bad)
adc
cli
add
or
sub
mov
or
dec
xchg
sub
arpl
sub
xor
and
sbb
mov
dec
ins
pop
in
pop
sbb
inc
add
inc
loopne
jg
and
dec
mov
retf
mov
popf
test
mov
xor
add
push
push
add
add
jne
test
mov
dec
pop
cmp
and
and
add
or
inc
sub
add
add
add
add
or
add
std
sbb
mov
sub
pusha
mov
push
bound
mov
inc
inc
nop
adc
sub
inc
jne
(bad)
fisttp
sub
inc
fs
mov
bound
push
mov
adc
cmp
dec
in
cmp
call
pop
ins
fdivr
das
push
test
mov
xchg
sbb
adc
push
dec
lods
cwde
sub
inc
pop
test
inc
dec
mov
xor
scas
iret
and
(bad)
sub
loopne
cmp
das
adc
xor
mov
ret
push
stc
or
(bad)
xor
imul
sbb
push
mov
add
test
mov
jo
ins
adc
test
and
jmp
cmc
das
das
inc
push
adc
push
jb
sbb
add
adc
push
adc
xchg
aad
call
xor
dec
leave
lea
movs
retf
loop
inc
or
add
or
iret
cwde
(bad)
pop
add
popa
lock
add
push
inc
movaps
(bad)
leave
inc
js
mov
dec
stos
cmp
jl
dec
dec
nop
or
rcl
or
add
les
sub
ret
push
or
clc
nop
sbb
cmp
(bad)
sbb
sbb
mov
jmp
fdiv
(bad)
mov
pop
mov
cs
push
(bad)
les
mov
push
inc
inc
inc
sub
mov
sbb
mov
(bad)
das
je
mov
push
add
xor
adc
leave
push
stc
dec
jg
(bad)
fldenv
or
xor
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
retf
or
sub
loope
popa
cmps
(bad)
sbb
or
call
and
les
inc
loopne
xchg
sub
fcmovu
push
cld
test
out
ret
sbb
lock
loope
add
lock
ret
addr16
dec
dec
or
or
mov
hlt
pop
and
xor
push
mov
nop
push
add
mov
adc
jo
lahf
mov
jne
scas
and
jo
(bad)
call
clc
fcomi
das
pop
dec
dec
push
loope
aad
push
lods
mov
jecxz
(bad)
arpl
inc
(bad)
aad
cmp
pop
nop
lds
in
sahf
xchg
or
mov
cdq
inc
xchg
push
out
stos
repnz
(bad)
bound
adc
(bad)
and
test
xchg
pop
push
xor
movs
sar
mov
mov
retf
add
sub
sahf
enter
jo
loope
mov
adc
fdivr
and
xor
jecxz
xchg
into
leave
push
adc
adc
es
push
push
fiadd
mov
cld
xor
jp
call
add
xchg
mov
test
add
ret
add
jbe
ret
add
and
jb
rcr
enter
retf
sub
pop
pop
je
jl
daa
push
sbb
mov
push
mov
or
das
inc
jb
movs
or
enter
pop
(bad)
dec
lock
and
mov
or
lea
icebp
jne
inc
or
dec
and
imul
xchg
fwait
sbb
jecxz
add
cdq
daa
push
sbb
jmp
aas
pusha
jl
shr
iret
xor
inc
mov
cmps
sbb
arpl
cmp
ret
aas
loope
add
inc
loope
mov
aas
mov
adc
cmps
fwait
repnz
mov
and
cld
add
inc
movs
in
mov
xor
and
xor
and
sub
or
les
test
(bad)
clc
rcl
sbb
dec
sub
lods
xchg
shr
cld
push
out
inc
into
dec
mov
or
ins
repnz
or
adc
push
sub
adc
(bad)
xor
and
nop
sub
xor
imul
or
push
icebp
xchg
ror
xor
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
cmps
in
mov
or
sub
loope
inc
or
pop
xchg
xor
call
and
(bad)
call
sub
cs
fs
retf
es
and
aas
pop
mov
ficom
fwait
push
dec
cdq
dec
adc
adc
add
sub
add
fcomp
pusha
adc
sub
cmp
pop
cmps
or
ficomp
mov
sbb
xchg
scas
push
adc
xor
mov
cld
sar
or
push
test
mov
dec
mov
aad
cmp
sbb
xchg
mov
dec
rol
adc
dec
xchg
inc
or
pop
or
mov
dec
adc
and
adc
bound
adc
jbe
pop
jae
fild
lock
(bad)
out
adc
daa
sbb
loopne
lds
scas
mov
sbb
sub
iret
push
sbb
pusha
xlat
and
cli
aam
hlt
cmp
cmp
sbb
adc
add
mov
aas
jbe
and
and
fadd
inc
inc
or
mov
sub
and
and
adc
xchg
ret
aas
imul
je
into
aas
or
les
add
and
es
pop
es
sbb
rcl
adc
or
nop
and
popa
add
add
inc
call
nop
add
adc
les
and
adc
dec
inc
inc
and
push
sub
pop
rol
push
or
call
push
es
add
sub
aas
push
mov
daa
daa
push
jo
addr16
fsub
adc
loope
or
mov
out
dec
jo
add
push
sub
sbb
adc
sahf
and
xchg
pop
stos
or
dec
add
mov
lods
lods
rol
adc
dec
add
(bad)
sub
adc
or
test
or
mov
jmp
popa
push
cmp
sbb
adc
int3
pushf
jno
xor
fs
sbb
les
hlt
inc
adc
pop
adc
mov
inc
mov
sar
jae
mov
or
jo
inc
inc
adc
pop
int
push
adc
es
fsub
dec
das
ins
inc
(bad)
es
leave
and
les
lea
jb
retf
imul
loopne
or
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
retf
or
sub
loope
popa
cmps
(bad)
sbb
or
call
and
les
inc
loopne
xchg
sub
fcmovu
push
cld
test
out
mov
mov
xor
sub
xchg
movups
mov
push
sbb
add
popf
mov
and
rcr
push
jl
dec
fwait
add
mov
iret
dec
or
mov
pop
add
loop
mov
or
mov
sbb
test
jg
(bad)
xchg
adc
jmp
sbb
cmp
int
cld
out
add
pusha
inc
mov
retf
aam
inc
out
movs
dec
jmp
mov
out
add
and
push
in
repnz
aam
sub
out
sti
mov
dec
mov
push
mov
stos
(bad)
rcl
sahf
xchg
ja
cmp
jo
mov
dec
lock
push
jmp
or
mov
jae
cmp
add
mov
rcr
inc
or
or
adc
cwde
xchg
repz
add
pop
popa
enter
and
inc
aad
xchg
aam
mov
sbb
popa
mov
xchg
jb
jns
adc
inc
adc
adc
rol
xor
movs
xchg
aas
pushf
xor
adc
or
fst
ss
gs
dec
or
adc
adc
jmp
(bad)
add
inc
cmp
add
ror
movs
ins
rcl
data16
shl
sbb
push
rol
in
xor
loop
sub
push
pusha
je
or
xor
(bad)
mov
and
movs
mov
or
pusha
inc
push
sbb
add
(bad)
and
inc
or
ins
and
cs
rcl
jbe
lds
mov
cs
jecxz
xor
f2xm1
ret
test
aam
inc
leave
nop
inc
retf
ins
je
mov
add
xor
add
add
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
cmps
in
mov
or
sub
loope
inc
or
pop
xchg
xor
call
and
(bad)
call
sub
cs
fs
retf
es
add
mov
push
in
inc
push
data16
lds
inc
aas
adc
cmp
and
add
sbb
xchg
or
sub
sbb
cwde
cmps
dec
inc
xor
push
sbb
add
inc
adc
mov
inc
add
inc
mov
adc
mov
sub
(bad)
lahf
pop
aas
adc
mov
lea
inc
std
sti
xchg
jmp
js
inc
nop
pusha
test
in
shl
mov
ins
push
je
ret
jb
inc
stos
push
mov
mov
(bad)
and
aas
inc
cmps
and
xchg
sub
inc
push
mov
pushf
jg
clc
xor
test
pop
or
pop
mov
(bad)
fld
xlat
sar
and
aas
dec
or
imul
pop
sub
push
aam
xor
je
rol
(bad)
in
add
aas
push
sub
or
test
xor
lock
push
add
ror
dec
fdiv
movlps
and
sub
or
push
(bad)
arpl
adc
retf
add
and
add
aas
or
ja
popa
inc
inc
pop
cld
arpl
push
daa
inc
sbb
mov
add
test
xchg
and
or
mov
loopne
aas
push
inc
ror
add
repnz
daa
and
sbb
ins
movs
or
add
lock
lahf
and
cmp
cli
xchg
sbb
pop
xchg
das
xchg
push
push
test
mov
add
push
xchg
lea
jmp
je
jae
adc
pusha
repz
cld
add
xchg
push
xchg
je
retf
inc
movs
or
inc
or
(bad)
ss
int
ret
xor
daa
adc
into
(bad)
rol
int3
mov
sub
lock
inc
das
push
jno
sbb
clc
rcr
inc
mov
mov
inc
adc
ret
movs
les
dec
mov
fs
cmp
aas
xor
inc
cmp
xor
es
fsub
dec
das
ins
inc
(bad)
es
and
inc
fwait
dec
xor
in
or
test
shl
jae
stos
sub
xchg
mov
(bad)
and
and
add
or
inc
sub
add
add
add
add
or
add
or
retf
or
sub
loope
popa
cmps
(bad)
sbb
or
call
and
les
inc
loopne
xchg
sub
fcmovu
push
cld
test
push
arpl
lock
movs
add
lock
ret
adc
push
test
ret
sbb
adc
call
rol
sub
add
inc
pusha
mov
cmp
iret
pop
ret
cmp
loope
and
dec
xor
push
jg
scas
outs
call
jg
ins
in
sbb
stos
push
movs
sti
cmps
(bad)
pop
das
mov
push
outs
mov
out
inc
test
lahf
pop
cmp
or
adc
and
pushf
push
sub
mov
push
mov
call
mov
test
mov
icebp
scas
inc
ret
add
adc
add
leave
das
dec
push
pop
jb
push
in
shr
cmps
in
or
lock
or
sbb
or
mov
or
and
bound
ror
and
adc
adc
nop
adc
pusha
shl
aas
repz
pop
loope
add
jge
rol
rol
dec
pop
xchg
mov
add
mov
mov
push
mov
shl
cmp
add
int
or
xchg
ficom
pop
(bad)
js
add
adc
outs
imul
loop
daa
(bad)
jl
mov
je
push
es
shl
push
add
outs
inc
leave
adc
mov
xchg
aas
iret
xor
xchg
aas
ins
cld
add
aas
das
jb
fst
inc
mov
popa
dec
movs
(bad)
cmp
jo
and
test
mov
push
mov
xchg
add
add
xor
push
ret
inc
and
movs
mov
or
pusha
inc
push
sbb
jecxz
push
imul
add
dec
push
inc
or
ins
and
cs
ret
push
or
inc
mov
and
in
loopne
cmp
cli
ret
xor
adc
or
xchg
bound
sub
pop
add
mov
sub
jecxz
stos
xor
stc
add
or
inc
sub
add
add
add
add
or
add
or
cmps
in
mov
or
sub
loope
inc
or
pop
xchg
xor
call
and
(bad)
call
sub
cs
fs
retf
es
and
inc
jnp
sbb
sub
mov
mov
movs
add
es
sbb
push
sbb
and
aas
add
jo
inc
pop
sbb
fucom
adc
or
scas
and
shl
sub
and
stc
icebp
add
pop
mov
clc
mov
fild
jne
pop
xor
fs
mov
test
daa
jmp
sbb
nop
xor
sar
out
push
xor
in
lods
pop
les
stos
adc
into
xor
cdq
jae
pop
cmp
mov
movs
dec
movs
jg
push
(bad)
outs
or
cmps
sbb
jo
pop
and
add
(bad)
popf
pop
test
aas
pop
or
pushf
stos
and
into
sbb
rol
imul
(bad)
or
test
inc
pop
jge
and
push
push
loope
aam
sbb
add
cld
xor
add
add
xchg
push
and
or
add
jbe
ret
add
and
jb
rcl
enter
adc
xor
pop
pop
je
jge
daa
inc
sbb
adc
add
ror
or
dec
jb
mov
push
mov
and
sub
ror
pop
push
les
mov
cdq
out
aaa
sub
inc
jae
add
loop
or
jl
ret
jo
and
inc
mov
pop
push
add
mov
lahf
mov
inc
push
push
mov
xor
ds
push
dec
push
popf
add
dec
push
sub
or
test
inc
mov
test
imul
push
add
movs
adc
ret
xor
xor
lods
mov
sub
xchg
or
dec
xor
inc
adc
pop
mov
xor
xor
cmp
sub
mov
sub
les
es
popa
in
cmp
push
cmp
retf
sbb
mov
jo
ret
aas
in
outs
xchg
pop
dec
icebp
cld
and
xor
dec
imul
(bad)
pusha
adc
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
retf
or
sub
loope
popa
cmps
(bad)
sbb
or
call
and
les
inc
loopne
xchg
sub
fcmovu
push
cld
test
out
ret
sbb
lock
loope
add
lock
ret
std
mov
mov
push
sbb
add
dec
dec
add
jns
push
or
cwde
push
push
cli
push
sub
sbb
xchg
hlt
xchg
ss
sbb
xor
lahf
lahf
sbb
add
inc
fdiv
punpckldq
push
sub
inc
push
inc
cmp
repnz
mov
pop
push
test
loopne
and
psrld
dec
daa
inc
add
push
dec
mov
mov
out
fwait
adc
pushf
jl
adc
into
inc
sub
push
xor
rol
push
cdq
push
jnp
test
push
int
lods
mov
pushf
adc
xchg
repz
mov
shr
xchg
test
mov
scas
rcl
xlat
(bad)
in
popf
push
inc
or
cmp
adc
and
and
cmp
jae
sbb
push
nop
dec
pop
in
arpl
or
je
sbb
es
(bad)
mov
bound
add
jo
add
fimul
jne
adc
pop
pop
cwde
nop
add
pop
add
xor
adc
add
add
adc
pop
push
jo
rcl
push
jl
lds
and
stc
emms
or
lock
inc
cbw
jo
loop
pushf
fisub
adc
ins
gs
push
inc
adc
or
add
test
dec
jo
add
push
or
and
sub
ret
retfw
xchg
es
(bad)
cmp
shl
mov
pop
stos
sub
xor
(bad)
sub
(bad)
jecxz
cdq
sbb
shl
shr
jl
test
mov
in
mov
push
add
sbb
inc
push
fst
fwait
movs
mov
or
cmp
cmp
adc
push
imul
lds
push
adc
or
(bad)
bound
fwait
lock
dec
imul
cs
jecxz
xor
f2xm1
ret
test
adc
pop
and
mov
sbb
push
dec
pop
int3
rcl
add
and
add
or
inc
sub
add
add
add
add
or
add
or
cmps
in
mov
or
sub
loope
inc
or
pop
xchg
xor
call
and
(bad)
call
sub
cs
fs
retf
es
and
inc
jnp
sbb
sub
mov
mov
movs
add
or
pop
aas
ins
les
inc
dec
test
aas
jg
pop
mov
cmp
add
push
xchg
loope
push
test
clc
repz
sub
inc
mov
out
push
sbb
dec
daa
sub
jae
(bad)
mov
xchg
lock
mov
ret
jo
adc
gs
rol
push
and
xchg
jbe
pop
adc
add
nop
dec
into
test
push
in
repnz
aam
sub
stos
and
in
lock
and
pop
or
ret
stc
fisttp
xchg
jl
sub
inc
jnp
xor
inc
add
fdivrp
jmp
inc
or
outs
cli
mov
bound
add
and
dec
mov
icebp
adc
push
or
xor
es
ret
and
or
test
aas
push
sbb
inc
pop
std
inc
xchg
add
cmp
mov
jbe
mov
mov
inc
add
push
mov
sub
les
mov
jns
pop
aas
adc
pop
jne
sub
retf
aas
aaa
pusha
lock
pusha
add
or
leave
aas
pushf
dec
sub
xchg
sbb
loope
add
enter
(bad)
stc
(bad)
ror
lea
xchg
jb
adc
sub
add
ror
xor
in
inc
adc
pusha
repz
push
push
fst
out
ins
xor
adc
call
sub
mov
inc
or
test
adc
test
xchg
imul
xor
inc
adc
sbb
sbb
pushf
inc
ret
leave
aas
adc
adc
xchg
or
adc
xchg
dec
add
(bad)
es
fcom
mov
and
sub
xor
adc
push
mov
mov
inc
ins
cmps
xor
push
or
xchg
mov
add
add
inc
or
add
add
dec
add
adc
add
add
popa
xor
sbb
das
add
jp
add
ins
je
add
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
icebp
add
jmp
jo
in
sbb
add
std
(bad)
fld
dec
add
add
cmps
add
lds
dec
add
cli
add
jmp
add
mov
shl
rol
mov
repz
loop
sti
aam
std
cli
xor
hlt
mov
not
jp
(bad)
rol
cld
jmp
xchg
(bad)
in
aaa
jmp
add
mov
mov
sbb
dec
std
retf
add
fld
test
add
(bad)
adc
std
fmul
test
add
add
call
add
shr
(bad)
sti
cmps
jmp
std
inc
(bad)
jmp
sub
cli
lods
add
inc
(bad)
in
dec
fst
lds
add
lds
or
mov
stos
pop
add
int3
scas
push
push
call
add
call
inc
pop
hlt
jmp
fld
mov
jmp
imul
add
mov
out
aad
stos
add
in
or
in
add
fldcw
cld
(bad)
sub
dec
dec
dec
sar
int
mov
jmp
mov
add
adc
rol
lods
mov
mov
sbb
mov
mov
xchg
mov
xchg
aam
xchg
dec
add
jl
cwde
add
int
push
std
in
dec
push
addr16
or
sub
mov
cmp
sub
sti
mov
aaa
jne
mov
add
daa
(bad)
in
mov
movs
or
icebp
add
retf
mov
call
adc
mov
(bad)
out
adc
stos
or
xor
fcmovnbe
mov
xchg
outs
test
add
adc
add
lds
(bad)
rol
(bad)
out
pop
sahf
pop
add
shl
cli
mov
out
iret
or
dec
jmp
add
jmp
push
and
push
or
cdq
push
(bad)
(bad)
add
repz
or
test
cmp
cmp
mov
push
sbb
or
mov
mov
pop
cmp
hlt
add
in
add
xor
dec
pop
cld
mov
mul
repnz
and
sub
test
iret
mov
mov
stc
test
std
out
add
aad
hlt
hlt
add
test
in
(bad)
stc
pop
ins
mov
stc
int
out
(bad)
or
leave
push
lock
loop
sbb
ret
add
ror
cli
mov
std
loop
push
pop
retf
(bad)
call
in
(bad)
push
sub
jecxz
std
test
gs
cld
add
lahf
sbb
stos
add
iret
add
mov
mov
inc
add
mov
out
mov
mov
hlt
hlt
or
jecxz
mov
adc
(bad)
sar
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
mov
mov
or
mov
lds
xor
inc
jp
repz
popf
adc
mov
or
xchg
ins
cdq
mov
inc
xor
or
inc
rcl
repnz
sbb
shl
xchg
inc
jne
and
and
push
sub
mov
xchg
cmp
add
pop
mov
adc
add
sbb
bound
mov
push
adc
aam
push
stos
add
push
dec
mul
and
pop
or
xor
fdivr
arpl
mov
ret
mov
add
cmp
add
push
xchg
push
push
xchg
iret
mov
sub
movs
dec
mov
mov
push
adc
dec
loopne
inc
add
pop
and
inc
test
add
scas
psubw
inc
mov
aas
and
call
cmc
sub
mov
push
xchg
rcl
cmc
pop
shl
or
or
mov
mov
add
xor
cmp
inc
push
and
addr16
sub
dec
xor
add
mov
ror
and
pop
mov
and
and
rol
push
inc
add
adc
fs
or
inc
add
aam
loopne
xor
lds
and
retf
shl
inc
cmp
dec
adc
and
add
push
cld
sbb
adc
mov
syscall
adc
inc
or
dec
cmps
pop
mov
rol
push
adc
or
add
sbb
adc
shl
xadd
or
cmps
lock
add
push
(bad)
sbb
je
add
adc
jl
jecxz
mov
xor
nop
pop
sub
hlt
pop
leave
xor
mov
xor
lahf
add
rol
stos
xchg
pusha
popf
mov
and
push
xchg
mov
jmp
cmp
and
mov
push
adc
jbe
or
stos
cmp
and
add
fidiv
cld
pusha
movs
xchg
mov
ror
mov
scas
adc
enter
pusha
inc
push
pop
mov
(bad)
push
inc
or
push
mov
cmp
shl
or
hlt
jecxz
sbb
mov
push
pushf
jecxz
sbb
int3
add
inc
nop
jb
adc
daa
test
xor
or
add
mov
inc
clc
loopne
cmp
les
loopne
or
pop
xor
xor
add
enter
xchg
int3
sbb
adc
dec
push
add
inc
jmp
adc
sbb
nop
xchg
mov
mov
add
aam
mov
outs
retf
add
(bad)
xchg
adc
inc
add
push
shl
icebp
add
or
push
cmp
dec
mov
sbb
cmp
das
pushf
inc
bnd
cmp
push
ret
nop
bndldx
pushf
outs
add
cdq
inc
xchg
mov
mov
ror
and
out
and
fwait
mov
sbb
and
popa
ret
inc
pusha
inc
bswap
pop
add
xor
xor
fwait
ins
jb
inc
add
aad
jns
cwde
inc
test
adc
cmp
(bad)
mov
addr16
lods
inc
add
xor
dec
inc
(bad)
inc
or
xchg
lock
push
jo
sar
cwde
xor
push
add
clc
jo
and
pop
in
xchg
sub
repnz
sbb
fadd
sbb
add
lock
xor
mov
and
or
add
ins
dec
ret
mov
sub
outs
pop
jo
or
inc
sbb
mov
daa
mov
mov
(bad)
sub
adc
lock
and
mov
adc
and
add
in
xor
lahf
fmul
mov
xchg
ins
and
add
sub
push
add
retf
or
add
jns
or
xchg
js
ret
lods
add
mov
into
push
sbb
push
inc
popa
or
adc
loop
rol
pop
or
data16
test
xchg
cmp
add
test
mov
add
sbb
inc
call
mov
dec
or
push
and
inc
pop
sbb
dec
leave
sub
sub
mov
adc
jl
and
dec
ins
push
icebp
push
xor
enter
add
push
or
les
push
jb
loopne
pop
lea
arpl
inc
test
scas
add
inc
xor
jo
mov
loopne
icebp
add
sub
imul
aam
add
int3
and
mov
push
cmp
arpl
push
jo
cmp
xor
mov
je
push
jns
dec
sbb
rcl
xor
cmp
sub
add
add
cs
movs
ficom
stos
mov
inc
rol
mov
add
dec
inc
adc
add
jecxz
push
mov
xor
push
push
add
sub
add
cmp
pop
xor
test
mov
outs
and
dec
adc
push
es
cmp
add
call
adc
mov
lock
xchg
push
inc
pusha
and
add
shl
sub
icebp
cmp
ror
push
pop
jl
inc
out
add
sub
push
jmp
mov
mov
jp
xor
and
rol
repnz
or
sbb
vmread
inc
or
xor
or
jne
dec
mov
or
pop
ret
sbb
or
rcl
push
test
push
clc
sbb
mov
xchg
lock
cmp
or
adc
xor
push
inc
fs
clc
adc
nop
and
and
dec
sub
pop
cmp
sbb
pop
test
and
or
sub
xor
adc
div
inc
ins
add
inc
(bad)
or
jp
and
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
adc
adc
pop
pop
jo
ret
xchg
pop
ret
jno
ror
xor
test
xchg
enter
jmp
sbb
imul
cdq
nop
xchg
pop
mov
add
pop
or
cld
mov
iret
test
jmp
pop
inc
jecxz
lods
jbe
arpl
dec
(bad)
test
xchg
cmps
and
fst
xor
pop
add
arpl
jne
fwait
icebp
sar
add
cmp
pop
push
pusha
lods
add
(bad)
cmp
outs
inc
pushf
or
shr
mov
push
push
mov
in
dec
retf
nop
(bad)
adc
rol
ret
sbb
ja
push
in
stos
mov
(bad)
out
dec
adc
add
and
je
push
loope
pop
aam
imul
mov
ret
mov
pop
dec
mov
push
sbb
add
aaa
mov
dec
inc
rol
fisub
(bad)
in
rol
xor
sar
cmp
rol
push
pop
or
dec
int3
adc
test
add
inc
xchg
and
xchg
sub
mov
push
mov
and
cmp
sub
cmp
repz
test
mov
jmp
dec
mov
jg
add
xrelease
inc
cmp
and
fs
inc
and
add
mov
rol
push
movs
push
add
adc
sar
xor
sbb
pop
mov
xchg
(bad)
jecxz
pop
pop
test
je
aas
pop
ret
inc
ja
xchg
adc
fadd
add
or
inc
sub
add
add
add
add
or
add
or
jo
or
jo
ret
xchg
pop
cmp
adc
push
add
and
or
add
adc
stc
jno
pusha
fwait
pop
adc
movs
push
addr16
shl
pop
add
or
dec
push
aaa
dec
mov
test
mov
sti
out
fld
pop
ror
xchg
shl
cmp
sub
leave
scas
sbb
es
ja
sub
pusha
movd
inc
ret
push
scas
into
in
jp
inc
jecxz
sbb
add
mov
retf
hlt
mov
jno
inc
push
add
nop
shl
sbb
adc
inc
hlt
repz
je
cs
adc
inc
aas
and
sub
arpl
movq
mov
fcom
and
sub
pop
add
cdq
add
mov
mov
(bad)
mov
jecxz
fdiv
push
test
push
xchg
mul
in
fbld
ins
dec
(bad)
sahf
jns
inc
mov
fst
in
xchg
jg
cmp
dec
add
mov
jb
or
pop
adc
test
push
sbb
add
add
sub
cld
xor
add
mov
jne
mov
mov
and
inc
xchg
cld
arpl
movhps
or
jg
mov
bound
cmp
push
adc
les
div
mov
and
mov
adc
or
inc
sub
(bad)
cld
and
add
in
xchg
push
shl
test
mov
movs
mov
jp
add
sub
sub
push
popf
loopne
les
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
jo
adc
adc
pop
pop
jo
ret
xchg
pop
ret
jno
ror
xor
test
xchg
enter
jmp
sbb
imul
cdq
nop
xchg
pop
mov
add
pop
or
cld
mov
iret
test
jmp
pop
inc
jecxz
lods
jbe
arpl
dec
(bad)
test
xchg
cmps
and
fst
xor
pop
add
arpl
jne
fwait
icebp
sar
ret
mov
pop
pop
adc
sbb
sbb
and
fild
inc
lods
xchg
mov
sub
xor
sub
adc
adc
and
push
lds
jle
es
sbb
scas
sbb
xor
cmp
icebp
adc
test
adc
mov
rol
repnz
rol
mov
(bad)
mov
ret
mov
pop
dec
sahf
cmps
add
(bad)
mov
cld
adc
mov
aaa
test
mov
fimul
add
rol
inc
push
and
inc
xor
aad
and
test
sub
and
test
adc
js
dec
cs
or
rcr
call
and
mov
ins
js
and
fistp
xchg
and
int
(bad)
push
imul
icebp
(bad)
pop
pop
sbb
xchg
add
xor
lsl
and
aas
es
dec
push
inc
push
ret
push
xor
inc
or
sub
out
push
mov
mov
add
jnp
cwde
loope
mov
sub
add
and
addr16
and
stc
add
or
inc
sub
add
add
or
add
or
mov
sar
sub
push
or
call
pop
sbb
mov
mov
add
push
cli
lds
les
xor
mov
(bad)
pushf
fs
ror
xor
cmp
ret
sbb
nop
aam
test
(bad)
and
jmp
movs
push
and
inc
ja
mov
(bad)
mov
xlat
scas
pusha
ret
mov
mov
loop
xor
push
test
call
or
jmp
fstp
adc
mov
mov
fnstenv
jmp
hlt
(bad)
mov
(bad)
ffree
je
test
adc
loopne
sbb
xor
xor
mov
cli
xor
mov
cwde
jo
adc
push
test
aam
cmps
leave
adc
xor
sub
jo
cmovnp
inc
clc
idiv
mov
mul
fisttp
sar
xchg
or
push
xchg
sub
imul
inc
lock
mov
lock
mov
xor
jg
adc
iret
cmp
or
xor
bound
xchg
inc
pop
adc
add
sub
add
add
add
add
or
add
or
mov
shl
bound
inc
or
movs
push
mov
pop
cli
leave
cmp
xor
xchg
shr
xor
pop
push
cmp
adc
and
(bad)
xchg
jle
aad
dec
inc
mov
retf
xor
mov
add
pop
cwde
jg
and
xlat
xor
xchg
pop
push
stos
push
retf
xlat
scas
pusha
ret
mov
mov
mov
loopne
scas
ins
xlat
or
ret
pop
sbb
and
jmp
fadd
test
xor
and
pop
mov
or
pop
adc
iret
loopne
sbb
inc
ror
cmc
inc
dec
or
cmc
cmp
retf
mov
xor
repz
sahf
or
or
xor
(bad)
xchg
outs
jl
mov
dec
scas
inc
push
out
shl
mov
jle
hlt
cld
stc
add
pop
and
test
aas
push
sub
or
cli
addr16
sub
sub
popa
jo
add
test
or
popa
pusha
jmp
or
jnp
(bad)
fnstcw
mov
sub
and
mov
mov
xchg
pop
pop
adc
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
push
add
xor
adc
xor
int3
inc
xor
(bad)
mov
push
enter
in
sbb
xor
cmp
clc
sbb
jb
(bad)
call
add
sbb
add
ds
xchg
pop
add
dec
mov
aad
pop
mov
(bad)
mov
xlat
scas
push
jecxz
xor
push
les
adc
jmp
fstp
adc
mov
mov
fnstenv
jmp
hlt
(bad)
mov
(bad)
ffree
je
test
adc
loopne
sbb
xor
xor
mov
cli
xor
sub
jo
adc
push
test
aam
cmps
leave
adc
xor
sub
jo
cmovnp
inc
clc
idiv
mov
mul
fst
push
cmp
adc
imul
push
xchg
sub
imul
inc
call
and
dec
adc
call
cmp
or
mov
adc
fld
(bad)
inc
pop
pusha
adc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sub
sbb
cld
mul
push
movs
clc
jb
jo
cdq
mov
test
and
push
lds
bnd
sbb
ret
pop
fs
fs
fcom
mov
int
add
loopne
add
jae
mov
js
mov
aam
pop
mov
(bad)
mov
xlat
scas
pusha
ret
mov
test
push
push
ret
lods
shl
xor
mov
shl
xchg
test
adc
sub
cwde
xor
cdq
pop
movs
repnz
call
aam
xor
inc
scas
pop
mov
rcl
cmp
mov
ins
cmp
(bad)
imul
pop
sub
hlt
jp
jo
aas
sub
(bad)
dec
iret
lahf
aas
pop
or
push
inc
cwde
leave
cmp
jg
std
arpl
and
cmp
inc
movs
adc
push
push
sbb
push
sub
fist
push
mov
xor
mov
sub
inc
loopne
test
arpl
pop
pop
or
rcl
add
add
inc
or
add
add
dec
add
sbb
add
add
add
popa
xor
sbb
add
sbb
add
add
sbb
add
inc
cmp
popa
xor
xor
idiv
add
leave
xchg
xchg
push
loopne
cmps
cld
lods
xchg
cdq
push
add
rcr
(bad)
stos
mov
or
pop
push
es
cld
rcr
bound
mov
adc
stc
cmps
add
fxch
cld
test
cld
push
sbb
fwait
add
loop
les
(bad)
inc
std
lock
mov
(bad)
jmp
mov
mov
mov
cli
cmp
adc
leave
add
cmc
add
xchg
mov
std
rol
in
fsubr
(bad)
fiadd
retf
push
adc
int3
add
paddd
add
xchg
imul
ins
(bad)
stc
add
cld
sbb
fsin
fld
shl
pop
add
loopne
lea
jecxz
in
add
cmp
or
dec
add
aad
imul
dec
push
std
fldcw
pop
add
jmp
push
(bad)
std
fnstcw
imul
cmps
and
pop
div
in
jmp
cmp
mov
add
imul
ret
and
sti
jbe
gs
mov
jnp
or
add
mov
mov
call
std
loope
(bad)
clc
dec
cli
mov
(bad)
(bad)
sti
mov
hlt
in
mov
test
(bad)
mov
push
std
mov
stos
gs
out
or
test
xor
or
in
aaa
cwde
mov
out
out
(bad)
fldenv
out
mov
mov
jmp
mul
stc
scas
add
sub
mov
lods
pop
xor
pop
or
jge
xchg
inc
and
mov
stc
div
mov
ud0
push
or
mov
mov
cdq
cld
enter
daa
mov
or
fisttp
std
(bad)
(bad)
mov
std
mov
xlat
jge
xchg
aas
psrld
dec
add
adc
or
push
(bad)
sti
add
fiadd
(bad)
fild
pop
push
mov
adc
pusha
adc
fs
in
scas
dec
or
clc
cli
rcr
sub
jae
push
push
(bad)
mov
loop
jns
push
push
or
mov
stc
fimul
jmp
pushf
jge
mov
lds
inc
cmp
(bad)
fdiv
mov
out
push
sti
in
push
std
mov
mov
mul
or
or
loope
clc
rol
mov
test
mov
out
mov
std
jno
(bad)
cli
(bad)
(bad)
out
adc
stos
add
test
loope
cwde
std
mov
dec
or
xlat
add
xchg
add
mov
jmp
outs
std
fiadd
jg
clc
inc
(bad)
jmp
mul
pop
jnp
push
lods
xchg
or
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
rcr
sbb
popf
push
std
repnz
jb
mov
movs
and
lahf
mov
in
sub
or
inc
stc
clc
push
push
adc
retf
shr
mov
js
pop
lock
(bad)
out
pop
sub
pop
ss
add
jo
mov
push
aas
pop
sbb
loopne
rol
mov
mov
inc
or
push
jb
fsubr
shl
sbb
push
sub
and
aaa
arpl
pop
inc
cld
call
or
gs
xchg
shr
or
inc
adc
in
aam
je
cs
and
loop
jecxz
cmp
loopne
icebp
cwde
sbb
xchg
sub
and
mov
sub
cs
and
call
sbb
push
lds
and
lods
push
cmps
out
lds
jmp
inc
pop
cmp
enter
and
push
js
rcl
hlt
call
cmps
dec
cdq
shl
xchg
push
loop
inc
retf
sub
cmp
xor
dec
movs
ret
add
mov
push
popf
shl
mov
pop
shl
dec
add
and
loopne
push
push
xchg
push
outs
sub
rol
mov
pop
cbw
icebp
mov
push
hlt
mov
es
push
and
inc
call
add
or
adc
cwde
loope
nop
adc
mov
enter
mov
xor
sbb
enter
das
sub
or
mov
cwde
js
and
jecxz
test
jle
loopne
sbb
ror
outs
jle
xchg
xchg
mov
add
add
xchg
mov
loopne
add
es
cmp
ds
xchg
fiadd
retf
lds
loop
pushf
test
lds
adc
int
xor
or
pop
cmp
add
fidiv
sub
and
ret
and
repnz
add
jge
adc
dec
push
xor
mov
xchg
pop
aas
inc
inc
and
sbb
stos
and
mov
ror
sub
les
nop
(bad)
or
add
inc
je
fcom
stos
adc
lea
dec
or
daa
clc
(bad)
inc
and
movs
push
add
xor
or
sbb
test
inc
ret
dec
sub
and
push
(bad)
jmp
xchg
add
adc
push
pushf
sub
sbb
add
enter
mov
ror
sub
inc
add
xchg
pop
dec
loope
and
push
dec
rcl
sar
push
ror
dec
mov
fsub
inc
aad
adc
and
add
ret
mov
popa
les
sar
and
sub
sahf
les
add
xor
push
popa
sbb
shl
test
and
sbb
inc
jo
adc
and
dec
pop
cdq
imul
and
push
xor
sbb
or
and
xchg
shr
xor
mov
mov
pusha
add
adc
rol
aaa
add
mov
push
or
movs
mov
pop
arpl
pop
mov
dec
xchg
rol
cmp
and
or
test
ret
fsub
inc
add
ins
mov
add
add
test
adc
xchg
movs
adc
pop
or
adc
or
and
enter
(bad)
mov
aam
fistp
call
and
iret
cdq
dec
movs
mov
cs
inc
or
or
jae
iret
adc
ret
sub
fiadd
or
in
scas
sub
ret
js
push
jae
and
push
ret
sti
dec
rol
push
inc
adc
mov
fldcw
mov
adc
call
imul
add
ins
arpl
adc
daa
add
add
and
adc
mov
push
sahf
inc
ds
cmp
mov
sbb
add
xchg
daa
cmp
adc
or
xor
or
add
(bad)
js
push
pusha
ror
int3
push
sbb
sbb
jmp
inc
(bad)
rol
data16
pusha
and
les
and
xchg
mov
cmp
mov
add
jl
inc
sbb
add
add
pop
cmp
add
cmp
cmps
xor
es
test
add
shl
push
and
test
adc
pop
add
bound
call
mov
xor
xchg
int3
pop
mov
dec
pop
push
pop
add
ficomp
iret
js
and
and
adc
inc
sqrtps
pop
fdivrp
cmp
into
mov
sbb
xor
or
test
sahf
adc
sbb
pop
add
pop
and
sbb
inc
adc
jle
loopne
sbb
sub
push
xchg
aam
or
in
inc
adc
adc
mov
push
cld
fsubr
and
arpl
xchg
(bad)
aam
sub
adc
pop
mov
add
jmp
xor
int3
xchg
bound
(bad)
or
adc
mov
es
iret
adc
jmp
and
add
nop
and
es
add
cmc
mov
and
mov
and
adc
add
test
inc
push
push
rcr
mov
cdq
leave
js
addr16
lods
out
push
adc
inc
or
add
inc
adc
xchg
add
cs
scas
out
push
dec
xchg
xchg
add
push
fnstenv
pop
pop
adc
push
sub
xlat
or
inc
mov
mov
rcr
mov
add
mov
in
mov
shr
xor
repz
add
inc
and
push
mov
adc
sbb
sbb
sbb
add
popf
ja
movs
push
inc
cmp
icebp
xchg
rcl
mov
push
lock
add
icebp
rol
or
or
pop
and
sbb
adc
mov
dec
and
(bad)
cmp
aad
adc
adc
sub
data16
sbb
adc
sub
dec
(bad)
adc
inc
adc
inc
cmps
mov
jo
dec
pop
sbb
pop
or
iret
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
fild
xor
inc
and
fnstenv
rcr
sub
and
pop
lds
inc
rol
leave
add
or
sub
or
in
push
repz
dec
aaa
jmp
std
jnp
dec
lea
push
mov
pop
pop
dec
mov
sub
add
sbb
cmps
and
and
push
sbb
jne
add
push
xor
inc
sbb
push
dec
add
imul
mov
ins
repz
sbb
or
mov
adc
loopne
mov
adc
call
scas
cmp
cmps
adc
xchg
jg
jo
xor
pop
add
and
icebp
inc
pushf
jmp
and
sbb
dec
mov
jg
dec
xor
mov
pop
pop
sbb
add
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
pop
lods
pop
call
xor
inc
mov
push
xchg
dec
cmps
loop
ins
or
in
and
ds
cli
fist
aad
test
ror
call
in
and
(bad)
mov
cmp
aam
jge
out
jo
rol
imul
push
ret
sbb
sbb
in
pop
and
cld
inc
or
mov
shl
rcl
dec
lods
jle
pusha
push
pop
retf
es
(bad)
sbb
sub
xchg
add
and
stos
pop
jge
imul
jg
mov
push
and
pusha
mov
and
call
pop
imul
push
jl
cli
jae
repz
mov
xor
lds
sub
adc
int3
dec
stc
mov
pop
sub
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
fild
xor
inc
and
fnstenv
rcr
sub
and
pop
lds
inc
rol
leave
add
or
sub
or
in
push
repz
dec
aaa
jmp
std
jnp
dec
lea
push
mov
pop
pop
dec
mov
sub
add
sbb
cmps
and
and
push
sbb
jne
add
push
xor
inc
sbb
push
dec
add
imul
mov
ins
repz
sbb
or
mov
adc
loopne
mov
adc
call
scas
cmp
cmps
adc
xchg
jg
jo
xor
pop
add
and
icebp
inc
pushf
jmp
and
sbb
dec
mov
jg
dec
xor
mov
pop
pop
sbb
add
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
pop
lods
pop
call
xor
inc
mov
push
xchg
dec
cmps
loop
ins
or
in
and
ds
cli
fist
aad
test
ror
call
in
and
(bad)
mov
cmp
aam
jge
out
jo
rol
imul
push
ret
sbb
sbb
in
pop
and
cld
inc
or
mov
shl
rcl
dec
lods
jle
pusha
push
pop
retf
es
(bad)
sbb
sub
xchg
add
and
stos
pop
jge
imul
jg
mov
push
and
pusha
mov
and
call
pop
imul
push
jl
cli
jae
repz
mov
xor
lds
sub
adc
int3
dec
stc
mov
pop
sub
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
fild
xor
inc
and
fnstenv
rcr
sub
and
pop
lds
inc
rol
leave
add
or
sub
or
in
push
repz
dec
aaa
jmp
std
jnp
dec
lea
push
mov
pop
pop
dec
mov
sub
add
sbb
cmps
and
and
push
sbb
jne
add
push
xor
inc
sbb
push
dec
add
imul
mov
ins
repz
sbb
or
mov
adc
loopne
mov
adc
call
scas
cmp
cmps
adc
xchg
jg
jo
xor
pop
add
and
icebp
inc
pushf
jmp
and
sbb
dec
mov
jg
dec
xor
mov
pop
pop
sbb
add
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
pop
lods
pop
call
xor
inc
mov
push
xchg
dec
cmps
loop
ins
or
in
and
ds
cli
fist
aad
test
ror
call
in
and
(bad)
mov
cmp
aam
jge
out
jo
rol
imul
push
ret
sbb
sbb
in
pop
and
cld
inc
or
mov
shl
rcl
dec
lods
jle
pusha
push
pop
retf
es
(bad)
sbb
sub
xchg
add
and
stos
pop
jge
imul
jg
mov
push
and
pusha
mov
and
call
pop
imul
push
jl
cli
jae
repz
mov
xor
lds
sub
adc
int3
dec
stc
mov
pop
sub
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
fild
xor
inc
and
fnstenv
rcr
sub
and
pop
lds
inc
rol
leave
add
or
sub
or
in
push
repz
dec
aaa
jmp
std
jnp
dec
lea
push
mov
pop
pop
dec
mov
sub
add
sbb
cmps
and
and
push
sbb
jne
add
push
xor
inc
sbb
push
dec
add
imul
mov
ins
repz
sbb
or
mov
adc
loopne
mov
adc
call
scas
cmp
cmps
adc
xchg
jg
jo
xor
pop
add
and
icebp
inc
pushf
jmp
and
sbb
dec
mov
jg
dec
xor
mov
pop
pop
sbb
add
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
pop
lods
pop
call
xor
inc
mov
push
xchg
dec
cmps
loop
ins
or
in
and
ds
cli
fist
aad
test
ror
call
in
and
(bad)
mov
cmp
aam
jge
out
jo
rol
imul
push
ret
sbb
sbb
in
pop
and
cld
inc
or
mov
shl
rcl
dec
lods
jle
pusha
push
pop
retf
es
(bad)
sbb
sub
xchg
add
and
stos
pop
jge
imul
jg
mov
push
and
pusha
mov
and
call
pop
imul
push
jl
cli
jae
repz
mov
xor
lds
sub
adc
int3
dec
stc
mov
pop
sub
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
fild
xor
inc
and
fnstenv
rcr
sub
and
pop
lds
inc
rol
leave
add
or
sub
or
in
push
repz
dec
aaa
jmp
std
jnp
dec
lea
push
mov
pop
pop
dec
mov
sub
add
sbb
cmps
and
and
push
sbb
jne
add
push
xor
inc
sbb
push
dec
add
imul
mov
ins
repz
sbb
or
mov
adc
loopne
mov
adc
call
scas
cmp
cmps
adc
xchg
jg
jo
xor
pop
add
and
icebp
inc
pushf
jmp
and
sbb
dec
mov
jg
dec
xor
mov
pop
pop
sbb
add
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
pop
lods
pop
call
xor
inc
mov
push
xchg
dec
cmps
loop
ins
or
in
and
ds
cli
fist
aad
test
ror
call
in
and
(bad)
mov
cmp
aam
jge
out
jo
rol
imul
push
ret
sbb
sbb
in
pop
and
cld
inc
or
mov
shl
rcl
dec
lods
jle
pusha
push
pop
retf
es
(bad)
sbb
sub
xchg
add
and
stos
pop
jge
imul
jg
mov
push
and
pusha
mov
and
call
pop
imul
push
jl
cli
jae
repz
mov
xor
lds
sub
adc
int3
dec
stc
mov
pop
sub
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
fild
xor
inc
and
fnstenv
rcr
sub
and
pop
lds
inc
rol
leave
add
or
sub
or
in
push
repz
dec
aaa
jmp
std
jnp
dec
lea
push
mov
pop
pop
dec
mov
sub
add
sbb
cmps
and
and
push
sbb
jne
add
push
xor
inc
sbb
push
dec
add
imul
mov
ins
repz
sbb
or
mov
adc
loopne
mov
adc
call
scas
cmp
cmps
adc
xchg
jg
jo
xor
pop
add
and
icebp
inc
pushf
jmp
and
sbb
dec
mov
jg
dec
xor
mov
pop
pop
sbb
add
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
pop
lods
pop
call
xor
inc
mov
push
xchg
dec
cmps
loop
ins
or
in
and
ds
cli
fist
aad
test
ror
call
in
and
(bad)
mov
cmp
aam
jge
out
jo
rol
imul
push
ret
sbb
sbb
in
pop
and
cld
inc
or
mov
shl
rcl
dec
lods
jle
pusha
push
pop
retf
es
(bad)
sbb
sub
xchg
add
and
stos
pop
jge
imul
jg
mov
push
and
pusha
mov
and
call
pop
imul
push
jl
cli
jae
repz
mov
xor
lds
sub
adc
int3
dec
stc
mov
pop
sub
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
fild
xor
inc
and
fnstenv
rcr
sub
and
pop
lds
inc
rol
leave
add
or
sub
or
in
push
repz
dec
aaa
jmp
std
jnp
dec
lea
push
mov
pop
pop
dec
mov
sub
add
sbb
cmps
and
and
push
sbb
jne
add
push
xor
inc
sbb
push
dec
add
imul
mov
ins
repz
sbb
or
mov
adc
loopne
mov
adc
call
scas
cmp
cmps
adc
xchg
jg
jo
xor
pop
add
and
icebp
inc
pushf
jmp
and
sbb
dec
mov
jg
dec
xor
mov
pop
pop
sbb
add
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
pop
lods
pop
call
xor
inc
mov
push
xchg
dec
cmps
loop
ins
or
in
and
ds
cli
fist
aad
test
ror
call
in
and
(bad)
mov
cmp
aam
jge
out
jo
rol
imul
push
ret
sbb
sbb
in
pop
and
cld
inc
or
mov
shl
rcl
dec
lods
jle
pusha
push
pop
retf
es
(bad)
sbb
sub
xchg
add
and
stos
pop
jge
imul
jg
mov
push
and
pusha
mov
and
call
pop
imul
push
jl
cli
jae
repz
mov
xor
lds
sub
adc
int3
dec
stc
mov
pop
sub
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
fild
xor
inc
and
fnstenv
rcr
sub
and
pop
lds
inc
rol
leave
add
or
sub
or
in
push
repz
dec
aaa
jmp
std
jnp
dec
lea
push
mov
pop
pop
dec
mov
sub
add
sbb
cmps
and
and
push
sbb
jne
add
push
xor
inc
sbb
push
dec
add
imul
mov
ins
repz
sbb
or
mov
adc
loopne
mov
adc
call
scas
cmp
cmps
adc
xchg
jg
jo
xor
pop
add
and
icebp
inc
pushf
jmp
and
sbb
dec
mov
jg
dec
xor
mov
pop
pop
sbb
add
stc
add
or
inc
sub
add
add
sldt
or
add
or
mov
sar
sub
pop
lods
pop
call
xor
inc
mov
push
xchg
dec
cmps
loop
ins
or
in
and
ds
cli
fist
aad
test
ror
call
in
and
(bad)
mov
cmp
aam
jge
out
jo
rol
imul
push
ret
sbb
sbb
in
pop
and
cld
inc
or
mov
shl
rcl
dec
lods
jle
pusha
push
pop
retf
es
(bad)
sbb
sub
xchg
add
and
stos
pop
jge
imul
jg
mov
push
and
pusha
mov
and
call
pop
imul
push
jl
cli
jae
repz
mov
xor
lds
sub
adc
int3
dec
stc
mov
pop
sub
add
add
add
dec
add
add
add
popa
xor
sbb
sub
add
ins
je
add
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
add
add
div
gs
leave
add
call
(bad)
inc
les
(bad)
dec
jecxz
pop
fxch
scas
lods
je
(bad)
icebp
add
cld
out
aam
(bad)
test
ja
mov
(bad)
cli
stos
(bad)
in
add
mov
mov
pop
(bad)
jmp
mov
add
cwde
add
call
sbb
aam
in
pop
in
or
mov
(bad)
(bad)
cmp
call
dec
pop
pop
(bad)
(bad)
sbb
cmps
add
mov
lds
jmp
call
add
or
call
(bad)
fiadd
(bad)
neg
leave
adc
aam
iret
scas
sub
test
add
jmp
mov
or
or
cli
pop
(bad)
mov
(bad)
dec
add
loope
push
dec
mov
(bad)
(bad)
repnz
sti
fdivr
cli
(bad)
xlat
mov
jmp
pinsrw
ins
sub
mov
mov
inc
mov
push
jb
or
hlt
or
out
mov
add
test
stc
lods
add
int
(bad)
mov
(bad)
(bad)
sub
mov
std
div
mov
(bad)
mov
push
adc
lods
add
les
xchg
pop
add
mov
mov
pop
repnz
xchg
aam
std
test
mov
and
fdiv
jge
pop
(bad)
jmp
les
movs
ins
or
imul
les
test
stos
popa
add
and
jp
push
add
(bad)
pmaxsw
adc
mov
mov
push
pop
in
daa
icebp
in
push
and
loope
mov
add
repnz
scas
jle
lods
inc
out
and
repnz
mov
or
aad
scas
mov
retf
cmp
xlat
add
fadd
in
shl
stc
lock
leave
jb
rol
ret
push
(bad)
jmp
or
out
add
out
cmc
jecxz
cli
test
xchg
pop
pop
shl
repnz
in
rol
add
popf
outs
icebp
lods
or
movs
or
stos
or
mov
out
mov
in
loopne
push
lock
sub
push
or
mov
mov
pop
in
or
cmc
jmp
bound
cli
jmp
jmp
push
ror
imul
adc
or
call
not
or
mov
bnd
stc
out
or
mov
cli
jmp
cli
in
mov
sbb
adc
lock
sbb
lods
adc
loope
sti
fiadd
stc
test
in
and
call
clc
cmps
push
clc
lods
add
call
add
loop
dec
add
iret
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
sub
scas
dec
push
scas
sbb
push
xor
icebp
or
xchg
and
pusha
enter
cmp
xor
xor
das
dec
lods
or
add
lea
jb
xor
jmp
mov
adc
ja
pusha
adc
xchg
push
push
mov
push
xor
outs
sub
sahf
ss
sub
sub
ret
dec
imul
retf
aad
inc
cwde
pushf
icebp
jmp
int3
js
(bad)
dec
stos
arpl
mov
or
xchg
dec
xor
or
sbb
push
sub
add
mov
cmc
inc
jmp
(bad)
(bad)
push
jmp
and
lods
dec
fidivr
dec
mov
cmp
mov
sub
lds
xchg
push
(bad)
lock
adc
jo
or
cdq
add
inc
icebp
ror
mov
xchg
and
rcr
xchg
movs
adc
clc
add
add
mov
les
push
xchg
addr16
jp
and
xchg
nop
test
mov
adc
jno
bound
inc
xor
add
adc
nop
push
sahf
jno
int
les
fs
ror
add
adc
adc
sbb
and
add
nop
xor
inc
xchg
adc
add
aam
dec
add
or
outs
pusha
mov
and
adc
sbb
adc
ffreep
loope
fwait
mov
push
xchg
xchg
dec
and
cmp
adc
adc
cld
ror
imul
add
rol
xor
rol
sub
outs
cli
mov
loopne
add
push
clc
rcr
pop
xor
repnz
xor
lods
mov
xor
in
push
cmp
and
or
add
mov
jmp
nop
xor
push
cmp
mov
test
int3
sbb
or
int
aad
and
ret
push
inc
dec
adc
add
add
add
push
adc
popf
movs
xor
ds
xchg
pop
rol
cwde
or
dec
push
shl
add
into
sub
leave
or
sbb
add
setl
cs
add
movs
loopne
mov
jns
sbb
sbb
aas
sbb
(bad)
sbb
sbb
inc
mov
inc
in
add
dec
fs
dec
add
repnz
inc
push
pushfw
adc
xchg
add
lods
jnp
cmp
ret
xchg
add
(bad)
mov
cmp
inc
(bad)
jo
retf
or
push
push
inc
xor
fs
inc
adc
add
cmp
xlat
pop
inc
mov
jo
enter
stos
sbb
push
addr16
and
mov
sbb
adc
iret
add
scas
add
pushf
mov
into
adc
aas
movs
or
jb
jp
pusha
test
cmp
mov
mov
leave
add
sbb
icebp
or
sub
cmp
pop
je
repnz
and
pushf
cld
inc
adc
clc
xor
add
sahf
call
cmps
rdtsc
adc
fiadd
sbb
(bad)
add
pusha
sar
push
ror
xor
inc
(bad)
pusha
cmp
add
iret
xor
dec
dec
rol
or
outs
int3
lock
or
add
sbb
mov
cli
shl
jns
jp
sti
out
sub
mov
pop
pusha
add
sbb
sbb
sbb
clc
push
adc
add
sbb
inc
daa
repnz
mov
movs
and
cmp
and
fiadd
pushf
das
aam
test
and
pusha
loopne
loop
jmp
cmps
ds
(bad)
and
int
sbb
nop
add
and
pop
pop
adc
or
int
mov
lds
adc
cmps
in
dec
pop
add
sbb
lds
cmps
rol
loopne
sub
and
inc
fadd
push
cmp
adc
jge
int3
rcr
xchg
call
add
test
add
add
movups
add
fadd
or
jge
cmp
push
rol
push
inc
xor
sbb
shl
xor
and
pop
in
mov
aaa
pop
and
pop
loopne
xchg
cmps
inc
leave
hlt
sub
es
movs
cs
xchg
adc
and
inc
mov
add
add
pop
mov
inc
or
popa
call
cmps
cs
mov
sbb
mov
add
add
jo
adc
push
rol
loopne
imul
adc
mov
stc
iret
aas
push
add
repnz
test
mov
push
call
mov
mov
adc
lock
add
je
dec
movs
adc
loopne
xor
ror
arpl
es
pushw
int3
clc
and
out
add
jl
mov
dec
stos
pop
mov
xchg
loop
push
mov
push
pop
xor
push
and
mov
call
push
xchg
pusha
xchg
ret
or
add
out
mov
out
xor
int
lds
aam
add
adc
push
or
sar
add
data16
cmp
adc
add
mov
lea
and
adc
test
cmp
push
(bad)
pusha
ret
push
sahf
cmc
mov
and
pop
stos
push
mov
inc
movsx
lds
fdiv
sbb
push
xchg
or
mov
adc
or
rol
jb
push
add
add
dec
xchg
add
shl
mov
add
jg
xchg
nop
push
cwde
dec
aad
lds
xchg
add
je
mov
stos
jnp
xchg
out
add
aam
sbb
in
int
les
data16
mov
gs
and
aad
add
mov
add
sub
sbb
inc
sub
adc
adc
xchg
call
pop
xor
add
mov
inc
xchg
add
test
inc
(bad)
mov
add
imul
cmp
lods
xchg
jle
pop
sahf
and
push
sub
or
mov
loopne
test
add
scas
xchg
aad
cmps
add
pusha
add
cmp
add
rol
cs
mov
dec
or
and
and
add
cld
retf
push
push
hlt
and
adc
xchg
mov
sbb
or
int3
icebp
add
ret
cmps
adc
adc
and
fs
add
xor
inc
or
add
pop
lock
inc
sub
nop
push
sub
push
pusha
push
and
adc
test
add
add
mov
xor
or
add
stc
add
or
inc
sub
add
add
add
add
or
jo
mov
pop
enter
jg
pushf
mov
popf
and
cmp
mov
dec
xor
sbb
pop
add
or
popa
stos
add
ficom
adc
fimul
adc
xor
clc
ret
rol
dec
jecxz
in
popa
and
add
std
and
adc
jno
push
adc
adc
movs
adc
imul
xor
and
nop
retf
add
adc
pushf
pusha
and
inc
and
nop
mov
sbb
inc
data16
mov
sbb
pusha
push
or
mov
dec
jb
add
mov
jecxz
mov
mov
sbb
jns
popa
inc
xchg
or
add
scas
inc
or
sbb
jle
pop
pusha
out
sbb
cmp
(bad)
lock
ja
mov
mov
xor
loopne
xchg
push
aas
stos
psubusb
inc
iret
scas
add
cs
add
or
and
test
fs
jb
xor
ins
loopne
sub
add
cld
add
pop
dec
enter
daa
int3
xor
aas
pop
xor
inc
or
js
add
add
jo
add
dec
mov
es
inc
or
add
pusha
and
add
aas
adc
xor
and
shl
add
pushf
inc
inc
sbb
xor
add
pop
sbb
icebp
mov
fs
call
inc
xor
inc
or
or
push
push
inc
or
popf
push
mov
or
mov
dec
add
inc
and
and
test
fst
or
dec
or
xchg
(bad)
hlt
rol
scas
int3
lock
and
shl
sbb
je
inc
or
push
call
stos
mov
or
and
mov
sub
aas
lock
mov
sysexit
jge
adc
sub
jnp
cld
arpl
push
or
loopne
inc
sbb
inc
jb
xchg
cld
xor
sub
jg
shr
xchg
icebp
xchg
mov
call
add
or
adc
add
pop
pushf
nop
test
cmp
or
inc
xchg
or
adc
xor
jecxz
or
xor
movsx
jle
add
dec
ret
or
hlt
inc
les
movs
cwde
push
and
sub
inc
add
pop
out
int
sbb
mov
xor
test
das
mov
cmc
xor
push
cmp
int
daa
sub
add
pop
sub
adc
add
dec
xor
dec
popa
adc
adc
test
or
inc
mov
xchg
sar
mov
fdivr
popa
adc
add
sub
sub
add
or
jo
and
adc
or
loopne
sub
push
jecxz
jmp
add
rol
add
and
or
rcl
push
push
adc
pop
shl
shrd
xor
xor
sbb
add
or
icebp
test
or
ret
dec
nop
jb
add
arpl
int
fisub
rol
jmp
push
sub
xor
xchg
or
adc
shl
mov
cmps
or
xor
pusha
sbb
dec
inc
add
add
or
add
and
add
or
inc
sub
add
add
add
add
or
add
or
push
loopne
jg
cwde
or
enter
xchg
mov
add
clc
push
or
or
test
xchg
aaa
inc
add
jae
push
mov
pop
pop
pop
bound
jb
push
popa
call
sbb
nop
test
inc
pop
icebp
pusha
push
cmp
pop
sbb
inc
fs
jnp
dec
repnz
fwait
add
shr
(bad)
xchg
movups
or
sar
jl
loope
mov
(bad)
jns
adc
mov
stc
adc
fmulp
clc
aaa
mov
jnp
stos
adc
mov
or
icebp
sbb
inc
xor
xchg
xchg
mov
sub
call
fidivr
pop
adc
out
or
jae
mov
mov
call
(bad)
lmsw
hlt
addr16
cs
add
and
shl
dec
jp
popa
push
icebp
data16
sti
ja
pop
inc
add
ds
jecxz
fild
(bad)
je
inc
add
add
pop
or
and
ds
out
inc
adc
inc
xor
int3
mov
xor
ror
sbb
fild
jo
loopne
dec
inc
or
pop
xchg
pop
lahf
sbb
jo
int3
adc
dec
aas
xchg
add
sbb
popa
fstp
adc
jnp
add
cmp
cmp
push
das
test
dec
or
adc
or
xor
inc
xor
push
retf
or
icebp
test
push
hlt
xor
(bad)
mov
jl
or
lock
add
dec
and
adc
rol
mov
and
pop
mov
push
add
rol
ss
inc
cmp
dec
cmp
inc
icebp
(bad)
punpckldq
mov
inc
or
cld
and
xor
cwde
and
or
call
sbb
cmc
shl
aas
cmp
sbb
fwait
adc
add
kortestw
and
ins
and
pop
add
add
or
sub
inc
mov
and
add
adc
ds
inc
aaa
mov
fs
nop
or
mov
adc
dec
pop
pop
push
ins
lock
push
pop
xor
dec
sbb
cld
inc
les
or
test
test
xchg
add
inc
and
cmp
int3
je
std
jae
push
imul
adc
adc
pop
jg
mov
inc
xor
add
bound
loope
push
mov
(bad)
inc
rol
pop
inc
sub
sbb
int
test
iret
adc
sub
jl
inc
sbb
xchg
popa
dec
xor
inc
dec
nop
add
sbb
push
and
adc
dec
or
enter
popa
inc
sub
dec
enter
and
inc
jl
test
out
add
daa
adc
mov
dec
test
lock
jecxz
icebp
add
pop
push
retf
add
mov
xchg
inc
mov
jge
pop
xchg
or
test
or
clc
xchg
enter
jecxz
call
pop
outs
pusha
inc
(bad)
lock
ins
pusha
cmp
(bad)
and
xor
(bad)
cmp
std
in
or
pusha
bound
and
or
les
jl
jb
inc
hlt
adc
aaa
inc
sub
pusha
xchg
sbb
sbb
repnz
in
or
call
sbb
and
sub
add
cmp
add
add
add
rcl
push
mov
push
xor
pop
mov
pop
xchg
jg
and
push
add
sbb
nop
aaa
or
add
mov
pop
dec
cwde
inc
sub
lock
push
pop
mov
dec
rol
sbb
test
mov
mov
inc
adc
dec
cwde
add
mov
sbb
push
mov
fadd
or
jl
or
xchg
cld
mov
add
mov
gs
add
add
or
and
fst
add
ins
loope
jmp
pop
call
loop
ja
or
push
sub
push
sub
loop
jno
(bad)
adc
mov
xchg
mov
and
sub
dec
inc
sub
add
sbb
cld
icebp
mov
mov
adc
or
add
xor
adc
cmp
jg
and
sahf
push
pop
das
gs
aaa
add
ret
hlt
xchg
adc
sbb
ror
xor
sub
mov
inc
sbb
mov
dec
jo
les
add
adc
inc
and
mov
je
sbb
mov
push
and
mov
dec
add
cwde
lock
cmp
and
adc
test
adc
test
xchg
and
mov
or
mov
mov
add
test
xchg
sub
inc
or
pop
or
xchg
adc
add
or
mov
pop
inc
or
ins
cmp
pusha
jne
jmp
in
(bad)
dec
outs
and
xor
fnstsw
aam
xchg
mov
or
hlt
lock
pop
jmp
mov
dec
add
pop
pusha
lea
or
lock
clc
sub
push
xchg
pusha
add
inc
sbb
outs
xor
mov
mov
fidiv
aam
add
adc
adc
ror
mov
adc
bound
add
dec
pusha
loopne
pushf
ret
mov
rcr
ins
dec
inc
add
and
add
or
inc
sub
add
add
add
add
or
mov
add
pop
enter
sub
inc
push
adc
enter
and
(bad)
jl
nop
in
(bad)
or
popa
test
lock
dec
inc
nop
sbb
ficomp
mov
ret
aas
pop
ds
je
or
outs
pop
add
and
pushf
and
and
or
adc
mov
clc
xchg
xor
push
nop
retf
add
daa
cmp
mov
push
mov
xchg
add
icebp
inc
mov
pop
dec
mov
push
xor
mov
inc
ret
mov
inc
and
sbb
xor
xchg
mov
out
inc
xchg
das
repz
popa
sbb
scas
inc
add
es
mov
dec
cwde
or
add
fild
jg
pop
in
stc
adc
cwde
call
mov
ds
dec
nop
jo
aas
push
xor
cwde
js
or
mov
inc
mov
popa
mov
push
push
js
inc
xor
ror
push
mov
or
cmp
dec
xchg
scas
sbb
fdiv
sbb
int3
xor
adc
dec
das
inc
fs
les
data16
retf
and
and
inc
add
xor
and
and
xor
add
mov
jl
xchg
push
adc
movs
leave
aas
sbb
inc
retf
pop
xchg
inc
adc
ret
adc
inc
mov
loopne
aas
sbb
loopne
sub
fmul
and
or
repz
add
and
(bad)
icebp
lds
push
adc
or
add
xor
mov
movs
cld
repz
sbb
or
inc
inc
sahf
and
inc
adc
test
or
mov
or
jne
inc
sbb
or
or
aas
pop
and
sar
cmp
test
pop
and
dec
sub
dec
aam
adc
push
mov
icebp
inc
push
xchg
xor
dec
daa
jle
icebp
mov
add
xchg
inc
add
push
mov
cmp
push
push
add
ror
loopne
adc
sub
hlt
clc
setns
push
inc
pop
or
add
or
adc
sbb
and
push
push
adc
sbb
or
dec
jae
cmp
rcl
pop
dec
adc
pop
(bad)
repz
cwde
jo
inc
and
pusha
adc
movs
push
les
dec
sbb
mov
jns
or
pop
outs
cld
add
fisttp
cdq
and
adc
fs
dec
sbb
xchg
push
ret
and
push
add
push
or
test
data16
add
pop
dec
xor
les
sbb
mov
pop
inc
xor
aam
lock
sbb
pop
add
sub
cmp
outs
and
es
inc
add
(bad)
ror
arpl
fadd
add
mov
neg
clc
xor
ins
and
xchg
add
mov
mov
add
add
xchg
nop
out
adc
mov
xor
add
add
mov
repz
hlt
add
add
xchg
mov
adc
and
sbb
adc
ret
jne
add
xor
and
inc
icebp
inc
and
dec
xor
add
add
test
movs
xor
sub
nop
xchg
dec
and
push
dec
sbb
aaa
xor
aas
cdq
xchg
shl
inc
fcom
retf
nop
repnz
aas
pop
js
cmp
add
lds
inc
sub
ror
or
adc
sbb
inc
adc
and
test
pusha
mov
shr
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
pusha
lods
or
sub
lahf
inc
pop
push
mov
push
mov
dec
nop
adc
les
jo
inc
pusha
dec
mov
add
int
and
inc
inc
add
inc
es
xor
mov
int
dec
ret
xlat
mov
pop
xor
rep
and
test
xchg
(bad)
dec
xor
mov
hlt
jmp
jmp
or
pop
fcmovnb
loop
or
in
cld
xor
jmp
sar
xchg
rol
sbb
push
sub
push
or
clc
sub
or
retf
dec
inc
sub
pusha
lock
sar
cs
fisub
aas
(bad)
std
xchg
xchg
rcr
popf
or
and
pop
jl
xchg
and
adc
int
sti
inc
aam
xchg
mov
sti
adc
jmp
cmp
push
and
xchg
and
adc
xor
call
jge
test
jl
xor
jmp
les
pop
lods
and
(bad)
retf
xchg
jg
xor
fwait
inc
sbb
inc
into
aas
sub
enter
xor
add
mov
sub
sub
adc
or
mov
les
enter
pop
inc
mov
repz
mov
enter
(bad)
dec
pusha
call
push
or
add
push
inc
adc
cmp
xor
or
jl
loope
fs
adc
inc
cmp
jo
inc
or
ds
push
inc
cmp
in
inc
sbb
jl
dec
xor
xchg
int
(bad)
mov
or
or
push
rol
psubd
rol
repnz
lock
nop
inc
addr16
js
and
adc
sbb
push
and
int3
adc
inc
pop
nop
push
sub
jbe
push
(bad)
(bad)
pop
and
push
or
dec
call
and
sub
cmp
push
xchg
inc
and
nop
iret
add
and
or
ret
test
add
ss
adc
(bad)
js
dec
adc
xor
push
add
sub
xchg
or
or
loopne
inc
cld
lock
add
push
(bad)
aas
fcom
rol
(bad)
out
inc
or
mov
inc
inc
das
xor
mov
test
and
adc
xor
aas
call
cbw
inc
lds
int3
push
adc
popa
cmp
adc
xor
add
or
or
les
xor
(bad)
popf
or
push
inc
into
sbb
nop
dec
sbb
hlt
add
jb
add
and
pop
adc
ret
xor
inc
adc
inc
add
sub
or
test
dec
sbb
or
nop
add
bound
enter
sbb
add
xchg
mov
mov
inc
mov
cdq
mov
mov
ret
dec
xor
mov
pop
movs
ja
daa
mov
or
add
pop
and
or
movs
adc
xor
inc
sbb
xchg
movs
and
arpl
jne
cmp
std
and
sub
push
rol
or
sbb
jle
add
jnp
cmc
inc
dec
mov
sub
int3
sbb
xchg
push
stc
std
inc
push
add
inc
mov
loope
or
test
loopne
inc
pusha
inc
add
rol
popa
sbb
dec
or
inc
or
stos
or
sub
ret
push
arpl
jmp
ret
pop
test
add
push
or
xor
push
add
adc
test
add
ror
cwde
push
mov
push
lods
nop
or
enter
and
test
jno
push
pushf
test
mov
add
fadd
ss
ror
mov
inc
xor
mov
inc
mov
xchg
or
adc
outs
loope
nop
aam
push
push
test
cli
mov
push
push
dec
lock
mov
pop
mov
push
hlt
nop
add
adc
sub
pusha
xchg
ret
or
pop
or
cwde
mov
shl
addr16
bound
add
icebp
dec
inc
or
push
test
add
cld
(bad)
xor
add
lds
sub
pusha
in
add
sub
loopne
or
ficom
inc
movs
and
add
pop
xor
add
pop
call
sbb
lock
or
rol
push
dec
cmp
inc
and
sub
adc
jmp
pop
or
nop
mov
sbb
mov
inc
inc
(bad)
xor
jle
mov
add
ror
pop
jno
fsub
nop
xor
adc
xor
adc
mov
mov
inc
inc
mov
push
inc
push
mov
jne
loop
and
add
ror
pop
les
push
add
or
sub
xor
add
fst
xor
inc
add
test
adc
or
into
mov
xor
add
push
add
jp
lds
in
or
xchg
and
dec
cld
or
cmp
arpl
stc
mov
adc
shl
mov
pop
cwde
inc
jmp
jge
adc
sbb
cld
add
(bad)
icebp
xchg
add
adc
xor
push
adc
or
add
and
add
or
inc
sub
add
add
add
add
or
nop
loopne
add
sub
popa
ret
and
inc
jo
loopne
mov
inc
cmp
jecxz
mov
fwait
mov
mov
cmp
pop
popa
xor
xchg
or
pop
cwde
jno
es
and
pop
movs
inc
inc
inc
retf
lahf
add
add
mov
pop
jno
je
cmps
inc
inc
and
or
popa
or
popf
or
xor
pop
outs
sbb
pop
in
leave
vcvtsd2si
adc
jecxz
inc
test
add
ret
loope
aas
dec
xor
pop
pop
popa
cmp
adc
push
imul
add
mov
je
enter
sbb
xchg
cmps
popa
dec
lock
enter
es
inc
pop
mov
and
add
mov
fsub
or
and
sbb
jmp
xor
push
jo
pop
rcr
adc
enter
add
mov
outs
sub
mov
and
sbb
inc
or
dec
add
sahf
inc
adc
enter
adc
retf
gs
xor
adc
ret
dec
sub
push
sub
jl
inc
aaa
or
ret
rcl
loopne
fstp
loop
loopne
and
inc
es
and
dec
pop
sbb
ror
aas
pusha
or
mov
outs
adc
push
inc
xor
add
iret
or
nop
adc
adc
mov
(bad)
pop
inc
fs
dec
inc
test
lock
add
mov
sub
dec
add
movups
jo
mov
or
jge
inc
add
test
test
xor
int
(bad)
call
sbb
adc
rcr
clc
push
add
jl
ret
cld
loopne
add
adc
xchg
xchg
mov
or
test
aaa
outs
and
dec
add
lds
pop
js
adc
inc
or
add
pop
adc
rol
jecxz
xor
and
add
mov
adc
aas
test
inc
loopne
adc
push
xor
cmp
or
rcr
inc
xchg
mov
add
daa
les
loopne
sbb
push
or
push
sti
cvtps2pi
add
pop
mov
imul
cld
(bad)
adc
jns
jo
pop
and
shr
or
xchg
push
pop
push
or
int
add
pop
xor
xchg
jno
sbb
pushf
stos
nop
pop
adc
stos
inc
sub
xor
pop
mov
sbb
ja
adc
and
adc
or
ret
cdq
or
inc
xor
mov
ret
adc
lods
and
sbb
fs
inc
cmp
xor
adc
test
shl
aad
cs
inc
lea
dec
or
int
popa
push
push
or
cld
push
xor
test
xor
xchg
xchg
aam
ret
(bad)
nop
ror
(bad)
or
xchg
popa
mov
dec
adc
mov
or
mov
push
lock
das
aas
cmc
aas
and
jg
xor
ret
mov
push
push
shl
or
or
int
jecxz
push
fadd
inc
cld
rcr
shl
xchg
cld
add
or
push
add
sbb
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
or
adc
pop
enter
daa
jae
or
shl
and
mov
jbe
ss
jne
and
push
push
js
loopne
adc
nop
cs
dec
xchg
adc
xchg
inc
sbb
fild
call
push
adc
and
dec
xchg
pop
mov
je
add
or
out
nop
pop
adc
mov
rol
(bad)
js
mov
popa
test
scas
mov
imul
inc
xchg
test
adc
mov
xchg
aaa
xor
push
xchg
and
dec
fild
outs
ficomp
jle
popa
add
les
iret
aas
inc
movs
xchg
test
loopne
pop
xchg
bound
es
and
mov
enter
cld
sbb
pop
into
pop
cs
push
js
loop
fmul
or
repz
or
xchg
add
or
jl
clc
xchg
pop
inc
jg
jl
inc
icebp
outs
dec
movs
pop
call
xor
xchg
and
js
pop
jo
movs
xor
rol
xor
aas
add
retf
das
ret
ret
popa
retf
dec
or
cld
adc
sbb
jno
nop
rol
sub
xchg
push
dec
sub
sar
add
(bad)
cmp
pop
cmp
icebp
dec
sub
les
inc
add
add
and
add
lock
hlt
jb
adc
and
adc
fidivr
and
adc
loop
or
jno
(bad)
movs
ror
mov
ror
inc
bound
inc
jl
iret
sbb
nop
mov
nop
add
inc
sbb
les
mov
inc
test
lods
adc
inc
inc
inc
mov
push
or
rol
cld
inc
pop
xor
sbb
pusha
mov
sub
push
lock
xor
arpl
xchg
xchg
or
xchg
ror
int3
ror
sar
pusha
push
add
mov
test
mov
fs
test
xor
lock
test
mov
xor
icebp
and
or
sbb
sub
push
nop
rol
and
xchg
out
sti
dec
aaa
mov
sti
(bad)
aas
inc
fadd
add
nop
or
repnz
xor
test
inc
adc
or
dec
aaa
jg
mov
xor
in
popa
add
adc
or
retf
movs
call
popa
repnz
xor
mov
les
add
or
(bad)
push
dec
pusha
arpl
push
cld
sbb
and
xchg
leave
nop
(bad)
pinsrw
add
cmp
(bad)
mov
lock
add
pusha
inc
dec
sbb
inc
sti
std
ret
push
lahf
inc
scas
cld
or
test
or
sbb
dec
sbb
mov
xchg
inc
sbb
mov
fld
int3
push
add
mov
xchg
gs
lods
jno
das
aad
mov
jne
movs
ret
aas
jno
in
sub
add
ss
and
sub
movddup
in
and
add
icebp
(bad)
cmp
dec
inc
dec
add
fisttp
mov
pop
or
loopne
adc
jmp
mov
sbb
retf
dec
cmp
nop
jb
add
or
push
xchg
inc
or
(bad)
xchg
adc
je
and
pop
pusha
add
xor
push
ret
ret
or
add
adc
(bad)
sub
imul
mov
rcr
xor
ss
push
je
add
adc
inc
das
adc
sub
mov
add
mov
pop
dec
cwde
inc
sub
mov
mov
mov
or
ror
push
inc
pop
cmp
pop
xor
add
and
inc
push
loop
and
sub
and
adc
or
outs
add
aam
pop
or
xor
gs
add
lods
sbb
sbb
and
fst
add
ins
loope
jmp
and
inc
punpckhdq
push
or
xor
pop
mov
xor
aas
jno
(bad)
adc
mov
xchg
cmps
dec
sbb
cmp
sub
add
sbb
pop
push
icebp
xor
bound
inc
pusha
or
add
sbb
add
dec
cmp
pusha
loop
xor
add
or
loopne
or
shl
cdq
mov
mov
push
data16
mov
xor
inc
push
jg
and
rcr
adc
inc
ret
mov
cmp
cld
or
adc
into
jae
inc
adc
sbb
add
or
mov
mov
sbb
pop
add
mov
rol
shl
push
mov
and
and
add
xchg
movups
and
ret
sbb
xchg
xchg
cmp
xor
stos
push
xor
inc
add
cwde
hlt
push
mov
mov
or
movs
adc
cmp
adc
xchg
xor
addr16
lods
popa
dec
sbb
imul
clc
sahf
xor
push
test
pop
push
xchg
pusha
add
inc
sbb
outs
cld
in
add
stos
inc
add
aam
add
adc
adc
or
(bad)
xchg
add
add
outs
or
push
pop
and
push
inc
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
shr
adc
pop
enter
add
hlt
lods
mov
mov
vunpcklpd
and
add
jae
lock
(bad)
xchg
add
dec
repnz
and
ins
jo
inc
and
sbb
ins
es
sbb
xor
daa
into
data16
xor
(bad)
in
and
mov
push
push
test
dec
jmp
push
adc
sti
mov
rol
lock
cwde
cli
push
in
pop
xor
xor
(bad)
enter
push
ins
or
adc
ret
inc
sub
popa
mov
xor
jbe
(bad)
xor
xchg
dec
pop
mov
or
test
dec
lock
mov
or
test
adc
xor
clc
mov
dec
or
in
sub
or
test
(bad)
mov
stos
data16
gs
jg
clc
mov
add
or
jmp
and
pop
adc
popa
loopne
(bad)
xchg
aaa
sub
pushf
or
ss
shr
lahf
add
or
outs
hlt
xchg
int3
sbb
jb
push
xor
mov
inc
test
xchg
inc
cmp
fs
adc
fdiv
test
fs
push
inc
adc
and
push
sub
adc
add
dec
push
xchg
nop
jge
js
push
sub
adc
sbb
dec
add
adc
test
jle
xor
add
xchg
mov
jns
inc
xor
jo
aaa
int
icebp
ror
lock
jle
add
pop
dec
adc
(bad)
or
xor
pop
mov
(bad)
push
lock
and
adc
inc
and
fs
add
add
add
or
les
inc
sbb
inc
sbb
or
in
add
dec
or
dec
test
xor
sbb
or
rol
or
add
jo
add
pop
or
mov
and
and
test
add
(bad)
ins
or
mov
and
xor
sahf
repnz
adc
and
out
stos
inc
push
inc
mov
mov
in
or
inc
into
xor
arpl
add
shl
inc
or
cld
adc
add
pinsrw
or
pop
mov
mov
sub
or
movs
lods
push
inc
ss
data16
dec
mov
sbb
mov
loopne
add
xchg
fs
les
mov
lock
sub
sbb
inc
add
or
dec
cs
mov
add
cmp
adc
shr
adc
mov
ret
lds
add
push
inc
and
dec
shr
cmps
inc
adc
rol
push
sbb
add
adc
dec
jns
cmp
stos
js
nop
mov
xor
or
xchg
mov
and
(bad)
cmp
fwait
call
cwde
(bad)
dec
adc
and
inc
sub
pusha
or
or
inc
or
push
retf
adc
adc
mov
push
aas
add
ror
xchg
sbb
test
mov
add
and
das
int3
add
inc
inc
scas
rcl
ins
xor
mov
movs
test
sbb
push
xchg
or
hlt
movlps
add
lock
shr
std
sub
xchg
sbb
and
add
movs
jae
or
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
pop
enter
jg
shl
rcr
push
mov
das
or
xor
dec
pop
ins
in
mov
test
dec
pusha
repnz
cmps
sbb
xor
xchg
sbb
lods
add
int
sbb
fsubr
test
rcl
sub
iret
add
push
inc
jge
enter
or
lods
dec
bound
nop
dec
nop
or
cmp
mov
cwde
fild
mov
loopne
fwait
dec
pop
cmp
js
scas
mov
xchg
pop
xor
pop
jl
pop
mov
rcr
mov
and
clc
mov
sub
or
das
inc
push
(bad)
shl
call
add
xor
mov
sub
loop
sub
pushf
sub
or
(bad)
nop
lods
inc
jmp
ror
icebp
mov
dec
or
call
lds
xor
lock
and
mov
je
xacquire
add
jo
adc
loopne
and
xor
adc
pop
pop
add
lds
or
(bad)
icebp
iret
sub
lds
and
xor
dec
mov
jae
add
sub
xor
inc
add
or
sbb
nop
sets
add
mov
in
pusha
inc
adc
xor
sbb
test
xor
loop
movs
pop
xor
cmp
or
shl
or
xchg
add
push
pop
aam
add
cmp
aad
popa
cld
or
ret
push
add
ror
push
push
and
or
sub
rol
ret
xor
ret
jns
inc
sub
dec
add
add
sbb
xchg
push
cwde
inc
inc
xor
and
rcl
cwde
loopne
push
std
xchg
add
nop
mulps
xchg
sub
icebp
rol
add
xor
test
cmp
nop
mov
icebp
lea
push
mov
inc
nop
mov
dec
cwde
jo
adc
outs
xor
(bad)
sbb
pushf
sub
add
xor
xor
adc
ror
popf
push
lock
inc
mov
mov
scas
test
in
push
cmp
inc
xor
mov
in
push
adc
repnz
call
adc
leave
aas
(bad)
xor
sub
adc
(bad)
inc
lods
pusha
ror
arpl
add
(bad)
adc
data16
cmp
les
adc
add
cld
punpckhbw
and
les
aas
inc
sbb
and
pusha
xor
sbb
xchg
test
inc
nop
inc
and
jo
int
jmp
xchg
shl
nop
xchg
mov
fimul
pusha
lock
xor
lods
and
push
or
sub
data16
mov
inc
les
(bad)
mov
mov
xor
jb
pop
sub
xchg
mov
mov
pop
repz
add
xor
add
jo
jo
call
add
cmp
test
(bad)
xor
sbb
pusha
or
adc
int3
and
repz
les
xor
adc
pusha
dec
xor
jl
(bad)
test
add
add
js
mov
add
push
retf
mov
(bad)
xor
gs
test
mov
adc
add
aas
(bad)
mov
xor
test
mov
and
mov
and
ins
(bad)
out
xchg
add
pop
movs
adc
push
mov
mov
add
fsub
adc
out
and
add
xchg
and
sub
aas
call
jg
inc
push
inc
lods
and
and
fild
push
add
adc
adc
mov
ins
shl
mov
lock
daa
inc
icebp
pop
lods
nop
retf
inc
mov
xchg
or
adc
lds
aam
push
push
add
mov
ror
and
mov
mov
or
cmp
test
dec
push
or
add
ror
inc
and
adc
add
icebp
dec
inc
or
push
test
add
add
(bad)
add
in
add
(bad)
adc
or
movs
and
add
pop
sub
add
movs
clc
sbb
mov
add
add
rol
fwait
mov
sbb
xor
rcl
mov
mov
bound
pusha
add
cmp
adc
or
xchg
add
ret
adc
mov
mov
stc
(bad)
loope
in
int
les
data16
test
ficomp
iret
cmp
pusha
sbb
les
jmp
jmp
(bad)
das
fiadd
add
mov
ror
ret
push
les
push
push
push
pusha
fsub
aas
aam
or
sub
or
jecxz
mov
and
adc
imul
add
mov
gs
push
and
push
fdiv
sub
inc
ss
movntps
pop
enter
in
nop
cld
in
mov
jne
add
cli
rol
cmp
push
pushf
adc
das
or
xchg
aas
xor
pop
jg
add
inc
add
jae
xchg
js
js
push
mov
mov
and
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
ror
xchg
daa
push
out
adc
inc
push
pusha
test
ins
call
mov
and
xchg
pop
call
std
pop
push
push
loopne
mov
dec
jne
rol
(bad)
rol
xchg
and
add
mov
and
or
jb
mov
push
pushf
(bad)
push
or
sub
movs
adc
repnz
aad
mov
stos
bound
add
in
xchg
push
bound
sbb
stc
iret
(bad)
mov
sbb
jle
icebp
sbb
adc
(bad)
in
and
pusha
loopne
fild
sub
jno
mov
push
jno
les
(bad)
stc
cli
push
xchg
pusha
lds
jb
rcr
xchg
repz
and
sbb
sar
inc
enter
pusha
add
push
cmp
mov
jmp
push
inc
add
ds
int3
mov
or
jmp
fsub
pop
jecxz
ret
xor
std
jae
adc
pusha
les
dec
sub
inc
add
adc
or
xor
inc
and
jl
rol
adc
pop
xor
lods
add
dec
pop
ret
cld
arpl
shl
shl
xor
push
add
mov
inc
pop
ds
jae
mov
lods
adc
add
mov
inc
adc
int3
ror
jo
mov
lds
or
mov
test
add
mov
push
retf
cmp
xchg
add
inc
pop
pop
or
xchg
xor
popa
test
cmp
rol
dec
je
xlat
aas
leave
sbb
ins
jo
pop
scas
pusha
and
into
sbb
repz
les
xchg
int3
rol
or
std
mov
aas
data16
add
push
or
or
mov
push
aas
jbe
xor
sbb
icebp
push
and
push
mov
or
rsm
dec
test
xor
and
test
repnz
aas
mov
xchg
add
aas
(bad)
mov
cmc
ror
adc
jbe
loope
mov
pop
inc
mov
jae
dec
fistp
movs
sbb
aam
dec
inc
inc
jo
into
mov
jo
inc
cmp
pusha
adc
add
in
pop
nop
or
inc
int
xchg
inc
cld
nop
xor
add
xchg
push
xchg
inc
adc
xor
add
int3
mov
adc
(bad)
movzx
and
jp
in
inc
(bad)
and
mov
inc
das
in
add
jp
or
sahf
sub
sub
cmp
inc
or
mov
xor
rcr
inc
lods
mov
sub
inc
and
or
inc
or
add
xor
adc
enter
mov
push
pusha
inc
add
mov
call
cld
mov
fisubr
nop
mov
jle
in
sbb
in
mov
or
cmps
or
and
dec
cmp
nop
push
xchg
push
sahf
xchg
pop
inc
(bad)
ror
cmp
add
sbb
inc
sub
inc
xor
dec
addr16
cs
repnz
enter
xor
push
pop
adc
call
outs
leave
cmc
pushf
cmovno
push
or
adc
hlt
adc
jo
inc
ss
mov
inc
sbb
dec
mov
jle
push
adc
inc
add
add
add
add
rol
rol
or
lgdtd
mov
add
add
add
popa
xor
sbb
sub
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
mov
(bad)
jmp
in
int3
mov
dec
add
lds
int
data16
scas
call
add
fld
sti
std
(bad)
mov
push
mov
push
fstp
(bad)
jmp
dec
(bad)
dec
sti
imul
call
add
mov
pop
pop
cmps
je
fwait
imul
fmul
test
add
call
(bad)
stc
ja
add
(bad)
jbe
xlat
retf
adc
neg
sti
mov
jmp
add
test
add
call
(bad)
cli
dec
jae
or
in
retf
mov
out
add
in
push
push
dec
or
enter
leave
cmc
jmp
mov
imul
leave
and
shl
stos
mov
out
xor
fst
(bad)
hlt
imul
in
fnstcw
fstp
movs
pop
add
sub
div
cli
fadd
nop
nop
(bad)
enter
call
cmps
jl
(bad)
in
or
sub
xchg
add
xchg
in
sub
or
fldcw
(bad)
(bad)
std
retf
ss
jmp
inc
cmp
push
or
cld
(bad)
jmp
cwde
std
call
int
int
idiv
in
adc
and
mov
fmul
cli
mov
(bad)
out
in
pop
jmp
int
mov
push
adc
out
mov
in
test
fimul
mov
dec
in
adc
call
hlt
stos
add
les
les
out
sub
hlt
sbb
pop
adc
(bad)
jae
mov
dec
or
leave
and
xlat
xor
mov
push
adc
mov
(bad)
aad
lock
jmp
aaa
xlat
pushf
adc
ds
div
cmc
int3
add
movs
sbb
loop
retf
icebp
out
clc
fucom
jmp
pushf
adc
aad
fcom
rol
out
repnz
leave
lea
aad
test
repz
mov
adc
out
ror
sar
stos
or
rcl
cld
mov
clc
out
repz
cmc
mov
jmp
les
repz
in
xchg
and
xchg
mov
in
or
cmps
add
ds
mov
in
lock
adc
push
add
inc
push
add
jmp
(bad)
out
add
sti
add
mov
(bad)
inc
stos
add
scas
add
mov
jmp
(bad)
out
add
sti
push
push
push
jmp
(bad)
mov
jmp
cli
scas
add
stos
add
loop
cld
cmps
push
sti
jmp
sti
mov
iret
ror
(bad)
and
and
add
jb
jmp
lock
call
mov
(bad)
retf
div
push
sti
sti
add
sti
push
and
sbb
test
lahf
jge
fst
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sub
call
mov
xchg
and
hlt
aam
add
mov
and
push
push
mov
ret
adc
xchg
xor
sub
xor
add
mov
lahf
jae
push
or
and
mov
inc
mov
push
cwde
imul
or
stos
pusha
inc
lahf
add
pop
dec
add
push
or
xor
jo
ins
pop
mov
inc
frstor
fldenv
xchg
enter
adc
cs
or
adc
aaa
jae
mov
and
popa
(bad)
fcomp
je
mov
pusha
xor
jne
push
xor
daa
ret
adc
and
cmps
lods
mov
fmulp
inc
inc
fwait
jo
ficom
lods
or
push
enter
(bad)
aaa
xchg
div
inc
jno
lea
mov
mov
add
cwde
pop
xchg
mov
and
fmul
jge
xchg
loope
into
push
lods
lods
out
adc
inc
mov
and
in
jno
or
xor
ins
xlat
mov
popa
test
and
fadd
ret
mov
lea
or
adc
add
call
fadd
movs
xchg
int3
mov
fldenv
xor
fcom
not
or
push
sbb
dec
mov
rol
xor
cmp
loopne
xchg
adc
ja
xor
add
add
dec
inc
or
shr
sbb
pop
pusha
adc
jle
xor
in
cs
jmp
cmps
or
mov
les
add
test
dec
inc
push
mov
or
scas
repnz
xchg
inc
dec
shl
pushf
mov
or
cwde
pop
add
dec
add
push
fs
sub
or
icebp
rcr
jnp
sbb
popf
jp
or
xlat
arpl
push
adc
add
mov
mov
mov
nop
pop
jmp
dec
ja
or
movs
cli
mov
xchg
xor
push
jl
in
pop
retf
push
mov
adc
scas
fstp
dec
xor
test
mov
and
push
mov
stos
add
sub
inc
xchg
mov
out
imul
and
adc
test
add
xor
pushf
fild
push
jns
xor
xor
int
lea
fwait
test
xchg
xchg
sbb
arpl
inc
call
lahf
mov
mov
cmps
jg
sbb
jmp
pop
ret
repz
adc
adc
lds
les
fsub
cwde
(bad)
jnp
stos
jmp
cmp
loopne
push
jns
xor
dec
das
nop
cmp
lods
movs
pushf
xor
xchg
pop
fistp
int
xchg
pmaddwd
push
mov
int3
in
(bad)
pop
hlt
pusha
mov
ins
outs
std
mov
fsub
dec
jbe
aaa
and
xchg
sbb
or
rol
sbb
sbb
xchg
and
jmp
rol
sub
and
or
xor
mov
or
pop
popf
dec
push
jnp
rcr
dec
mov
or
or
aaa
jo
fisttp
xor
mov
add
out
rcl
push
js
xor
jno
add
pop
test
adc
pusha
adc
inc
add
push
and
dec
je
add
adc
pop
mov
push
sub
sbb
xor
jns
and
mov
or
fmul
in
inc
inc
mul
and
outs
pop
add
add
xor
add
inc
adc
js
sub
rol
mov
jns
pusha
push
repz
and
mov
add
sbb
test
xchg
xor
mov
sub
mov
jbe
xchg
push
adc
add
nop
add
dec
add
xor
pop
xor
sbb
mov
sbb
mov
adc
inc
add
add
dec
ror
mov
mov
jmp
fist
adc
sub
add
mov
sub
jmp
add
xchg
test
jnp
lea
mov
pop
jbe
add
rcr
mov
leave
call
sub
or
test
adc
mov
dec
cmp
dec
dec
inc
inc
add
and
or
or
loopne
aad
test
sbb
mov
ss
add
sbb
aaa
cwde
or
pop
jp
sbb
or
call
or
add
add
je
addr16
adc
push
push
add
adc
fimul
push
add
push
jo
pop
sbb
and
add
or
sub
or
js
add
inc
dec
je
add
push
add
push
loopne
rcl
dec
cmp
sbb
retf
or
sub
ret
pusha
xchg
mov
add
add
loopne
mov
or
test
sbb
lock
pushf
aam
add
or
loope
xor
inc
cvtps2pd
or
je
or
pop
rcl
add
push
add
mov
add
or
iret
aas
push
add
add
mov
cmp
or
mov
or
cmp
dec
cmp
jo
inc
pop
and
rcl
test
mov
aam
mov
inc
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
popa
jno
(bad)
popa
and
mov
ss
adc
enter
adc
shl
sbb
mov
inc
xor
xchg
push
mov
mov
mov
mov
inc
adc
ret
aas
mov
mov
pop
or
add
xchg
aaa
pusha
fld
movs
push
aad
int
addr16
fidivr
xor
pusha
pop
data16
(bad)
sub
add
inc
push
mov
mov
gs
sbb
inc
inc
xchg
pop
inc
pop
inc
xor
add
retf
mov
sub
pop
or
fild
enter
enterw
adc
or
mov
fsub
xor
mov
leave
push
sbb
adc
push
jp
sti
xchg
adc
dec
mov
jge
fstp
test
fs
in
sub
outs
fidivr
push
or
xchg
leave
aas
push
cwde
pusha
ret
hlt
push
nop
pop
(bad)
fdiv
shl
lock
arpl
jo
and
inc
test
les
aas
adc
je
inc
mov
enter
and
nop
push
push
mov
sar
mov
mov
and
lock
xor
or
test
ret
mov
push
and
imul
mov
cmc
(bad)
xor
dec
repz
aas
sub
jno
jo
xor
popf
push
daa
arpl
and
pop
test
add
shl
add
inc
add
pop
add
dec
mov
(bad)
sub
imul
sbb
nop
add
js
shl
adc
nop
push
jg
push
aad
test
movs
sub
sti
or
and
loop
pop
cs
arpl
push
repz
outs
push
sub
mov
ins
push
push
push
popf
jae
mov
or
fild
mov
aaa
call
test
(bad)
or
cs
cmc
dec
jo
inc
jae
aas
adc
sub
sbb
stos
inc
add
add
mov
jns
mov
push
cmps
inc
xor
popa
pop
mov
ins
js
inc
ins
outs
inc
retf
nop
add
dec
dec
nop
or
and
div
add
pop
test
retf
out
inc
or
lea
and
or
call
xor
nop
add
inc
xchg
xor
icebp
iret
dec
push
pop
sub
cmps
in
nop
enter
test
iret
or
jne
adc
xchg
(bad)
and
add
adc
cld
jae
or
sbb
out
leave
out
cmp
push
cld
ret
sbb
jns
pop
fmul
ror
ins
add
popa
repz
inc
js
loop
sbb
push
adc
add
jnp
ret
add
into
cmp
add
push
in
and
sbb
retf
xor
movs
pusha
lods
adc
stc
and
ret
iret
aad
ret
mov
mov
push
add
push
test
aaa
in
repz
retf
es
(bad)
or
add
push
mov
inc
cmp
xchg
iret
and
or
or
jle
adc
cmp
push
adc
les
xor
mov
sub
sub
jecxz
dec
inc
and
push
add
jb
mov
and
push
or
and
xor
jp
sbb
shl
add
cs
inc
mov
mov
or
scas
sbb
sub
adc
or
mov
or
and
call
push
lods
and
add
add
stos
gs
or
movs
or
mov
iret
and
sub
xor
mov
and
dec
or
shl
test
dec
je
mov
clc
adc
and
jg
pusha
add
add
clzero
loope
(bad)
clc
xchg
adc
add
inc
outs
(bad)
xchg
inc
mov
addr16
lods
push
ss
dec
sub
(bad)
retf
mov
add
mov
rol
mov
jg
push
and
inc
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
ror
pop
enter
jmp
lea
xchg
sbb
test
xchg
inc
inc
add
inc
leave
mov
and
movs
dec
cmp
(bad)
sub
das
add
and
(bad)
fisttp
sbb
data16
das
rol
fs
push
shr
jbe
xlat
loope
mov
push
pop
pusha
sub
inc
int
pop
dec
xor
aas
cmp
and
jne
inc
mov
inc
push
push
pop
or
icebp
iret
rol
retf
jae
jae
mov
jmp
add
inc
lahf
cmp
jno
cdq
in
in
add
(bad)
ja
pop
mov
adc
pop
jmp
and
out
test
(bad)
mov
out
retf
(bad)
daa
out
cmps
jg
dec
jo
iret
fwait
sub
out
or
(bad)
mov
pop
inc
fisttp
test
add
adc
(bad)
sti
pop
or
mov
push
sar
xor
mov
or
movlps
mov
sub
in
arpl
add
xor
test
xchg
pop
xor
scas
test
int
aam
mov
rol
or
cwde
and
or
and
xor
pusha
mov
mov
sbb
lea
add
iret
syscall
inc
mov
adc
mov
and
adc
popa
retf
and
add
iret
xor
fsub
aaa
adc
js
inc
and
sub
aas
pop
or
or
sbb
xor
test
and
inc
jg
xor
dec
add
lock
aaa
adc
push
adc
xchg
mov
mov
inc
xor
xor
add
add
adc
fs
pop
adc
je
shl
dec
inc
pop
mov
leave
or
mov
aas
inc
leave
mov
cmp
stos
xor
iret
cld
push
lea
mov
sub
fdivr
repz
push
ss
dec
mov
add
syscall
ss
ins
push
jmp
fdivr
ret
fs
mov
adc
rol
je
inc
or
xchg
add
int3
ins
es
and
fimul
aam
imul
ss
pop
inc
push
pop
adc
push
lea
fld
xchg
ins
inc
adc
cli
dec
or
(bad)
imul
stos
or
push
sub
mov
(bad)
and
add
xchg
nop
out
push
inc
dec
shl
aas
pop
xchg
dec
pushf
xor
in
add
cmovne
adc
sbb
pop
inc
sbb
aam
inc
jp
repnz
push
push
sub
dec
ins
add
xor
cmp
or
pushf
out
push
dec
jo
lds
sub
aaa
int3
jno
scas
enter
and
ins
xor
push
push
xor
pop
and
hlt
xor
add
or
cmp
js
inc
ss
xor
lock
pop
mov
xchg
push
and
add
movs
inc
ins
pop
loopne
sbb
cwde
ror
and
ret
pop
mov
push
pop
popa
shl
xor
mov
or
shl
in
(bad)
pop
retf
test
ret
sbb
cmps
and
xchg
jo
enter
add
pop
inc
movs
inc
inc
fs
add
xchg
push
xchg
pop
push
pop
adc
add
dec
rol
shr
rol
ret
inc
adc
push
xchg
mov
in
sbb
mov
in
add
push
add
inc
or
dec
or
or
inc
nop
pop
or
sbb
das
dec
inc
add
add
dec
mov
ret
ds
imul
add
lock
sub
add
push
int3
sbb
cmp
rol
loopne
and
ret
add
or
mov
sahf
arpl
fucomp
(bad)
adc
cmp
rol
mov
mov
cmps
push
push
das
pop
nop
out
add
add
add
adc
and
push
xor
dec
jecxz
pop
sub
cmc
mov
outs
dec
sub
add
inc
add
fist
test
in
lock
dec
push
shl
inc
sub
cmps
adc
xor
ret
sbb
adc
jo
push
(bad)
mov
pop
ret
adc
inc
sbb
adc
cmp
push
or
clc
movs
add
xor
cmp
add
repnz
test
add
add
dec
pusha
inc
sbb
test
mov
cmp
add
imul
pop
cmp
cmp
imul
inc
add
xchg
adc
sbb
rol
inc
loopne
sbb
inc
add
jne
out
shl
imul
sub
loopne
xchg
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
iret
add
adc
mov
inc
jg
test
pop
hlt
dec
shl
push
adc
push
mov
cld
lock
repz
xchg
mov
cdq
rol
adc
adc
nop
push
mov
movs
sbb
jmp
push
cli
mov
jae
lahf
mov
nop
loopne
push
or
push
fs
int3
sub
push
push
shl
jmp
nop
mov
add
dec
inc
lahf
outs
or
ficom
xchg
(bad)
jmp
lock
dec
mov
sub
int
movs
xchg
add
sbb
mov
add
hlt
mov
ret
ret
inc
push
mov
pushf
lock
call
adc
add
ja
xor
sub
and
outs
fsub
add
mov
or
nop
pop
inc
fcom
(bad)
jne
shl
and
push
add
pop
add
inc
rcl
les
xor
lds
int3
xchg
aas
(bad)
int3
loope
ds
or
xor
xor
sbb
xlat
and
jo
xor
pop
add
add
adc
and
int3
aas
int
xlat
(bad)
xor
rol
(bad)
adc
push
pop
inc
inc
inc
jne
xor
pop
add
jae
or
loop
or
fistp
sbb
jbe
sbb
and
push
add
push
cmps
ret
mov
dec
sub
xchg
push
pop
push
fidivr
add
adc
adc
jl
or
inc
push
mov
(bad)
or
push
pop
adc
(bad)
(bad)
aaa
add
and
sar
add
inc
mov
(bad)
xor
inc
adc
dec
push
adc
pop
nop
mov
je
and
sbb
je
mov
fs
gs
and
rcl
xchg
inc
jae
scas
add
and
rol
or
mov
jno
mov
popf
stos
call
pop
inc
fimul
xor
fadd
aas
movs
cld
and
daa
dec
ss
xchg
outs
neg
fstp
mov
ret
push
(bad)
clc
mov
lock
or
mov
sbb
add
call
add
jmp
inc
cmps
mov
mov
or
and
sub
(bad)
sub
movups
ret
xchg
dec
sbb
test
mov
adc
cmps
and
dec
ud0
mov
cli
pop
stc
fwait
xor
dec
mov
scas
inc
pop
jmp
test
fisttp
push
pusha
pop
repz
push
pop
adc
jmp
add
iret
mov
inc
cmps
mov
xchg
inc
xchg
push
xchg
sbb
je
inc
mov
cld
rol
adc
jl
loop
dec
sahf
mov
popa
enter
(bad)
in
sbb
push
popa
jae
add
add
mov
(bad)
adc
or
loopne
mov
pop
jo
inc
fild
and
out
pop
add
sub
inc
fisubr
mov
sbb
loope
inc
cmpxchg
adc
inc
push
or
push
sbb
dec
inc
outs
mov
dec
das
adc
sbb
(bad)
fisub
les
xor
jmp
xlat
outs
add
mov
adc
fadd
sar
mov
and
push
ret
loop
add
jb
retf
sub
loope
mov
loopne
jge
sbb
or
adc
add
pop
adc
inc
test
aas
mov
in
pop
xchg
pop
add
dec
aaa
pusha
jne
pop
inc
movs
sub
rol
pop
and
xor
push
adc
mov
test
rol
push
jl
inc
das
sbb
push
mov
or
(bad)
add
ret
adc
and
dec
push
inc
in
adc
inc
call
dec
sti
fsub
nop
sub
push
push
add
push
xor
jae
inc
xor
push
aaa
dec
popf
nop
add
add
nop
test
icebp
rsqrtps
rcr
inc
jp
xor
add
adc
inc
or
adc
sahf
push
or
pop
cmp
push
sub
addr16
test
jp
add
xor
push
mov
(bad)
aas
int3
rcr
cmps
clc
add
mov
sub
cld
add
push
inc
add
fsub
sub
add
add
sbb
stc
mov
and
adc
adc
add
jb
inc
addr16
test
sbb
add
add
pop
test
adc
jno
fist
pop
pop
fisub
add
shl
pop
inc
dec
and
adc
or
addr16
push
ins
inc
or
mov
or
add
cli
xchg
je
adc
add
push
movs
sbb
popa
dec
int
cmp
push
and
dec
inc
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sub
(bad)
ror
gs
xchg
adc
xor
fmul
aam
outs
ret
mov
movs
rol
push
sub
imul
jg
(bad)
fnop
and
sub
jmp
add
sub
fisttp
or
stos
and
and
ds
dec
pop
loopne
and
adc
xor
sub
cmp
fstp
sbb
xor
add
push
mov
cmp
mov
arpl
fnstenv
adc
out
inc
push
xor
lock
gs
sub
clc
js
xor
(bad)
push
pusha
and
adc
mov
leave
xchg
and
mov
fldcw
enter
xor
fcomp
retf
arpl
inc
repnz
enter
push
pop
xor
adc
call
leave
add
adc
pusha
mov
mov
and
or
fisub
or
sub
inc
and
int
and
xor
retf
fs
jae
inc
adc
rcr
pop
xor
mov
adc
fild
sub
rcl
int
push
sub
or
mov
inc
clc
dec
mov
or
pop
imul
jno
pop
pop
std
push
jecxz
aam
adc
ret
cwde
nop
or
and
inc
loop
neg
aam
add
arpl
push
pop
data16
test
pusha
inc
mov
push
mov
push
add
fsub
inc
push
lock
scas
lds
inc
cs
adc
mov
sbb
push
sbb
inc
sub
clc
sbb
xor
lds
hlt
int3
inc
cwde
jne
add
cwde
push
add
movs
shl
mov
or
sbb
lock
nop
test
mov
xchg
inc
test
xchg
popa
xor
je
mov
rcr
push
pop
stos
nop
adc
jae
arpl
push
cmp
popa
imul
sbb
jo
aas
sub
sub
xor
movs
mov
or
mov
sub
sub
inc
adc
dec
xor
inc
mov
inc
mov
gs
sar
pop
cmp
push
ret
aas
test
fild
outs
inc
test
sbb
ror
aas
cmp
xor
inc
movs
jge
mov
mov
adc
lods
inc
jp
mov
sub
test
push
int3
inc
sar
xor
lods
xor
inc
mov
fild
add
adc
inc
xor
aam
fild
mov
enter
cld
prefetch
pop
sub
dec
fldln2
(bad)
adc
or
aaa
enter
pop
lods
jo
inc
adc
unpcklps
inc
mov
add
jno
cld
and
dec
add
sbb
adc
xor
adc
push
mov
xor
push
inc
test
add
add
mov
adc
jp
enter
xor
and
shl
push
jb
popa
add
sub
inc
mov
or
or
or
iret
cmp
and
add
sub
enter
adc
cwde
fadd
lock
adc
or
sbb
pop
pop
cmp
sub
repz
push
inc
mov
mov
add
xor
or
in
cdq
and
mov
add
add
dec
pop
add
inc
add
repz
sar
inc
nop
scas
dec
mov
or
xor
adc
sbb
(bad)
nop
add
add
aas
jo
xchg
add
int3
and
leave
dec
push
and
es
enter
add
sub
and
push
add
popa
jno
inc
test
add
inc
adc
call
sbb
adc
fsubr
mov
imul
dec
and
jg
and
pop
push
inc
add
test
das
push
add
sbb
or
aas
push
gs
add
inc
push
and
inc
test
pusha
or
lock
add
and
push
inc
inc
sbb
repz
ss
mov
adc
ret
or
sbb
and
cmp
adc
sub
xchg
mov
(bad)
pop
sub
add
inc
gs
pop
or
or
inc
int3
shr
lock
or
into
add
add
cmc
and
xor
sbb
push
(bad)
fadd
ss
adc
push
test
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
xor
push
adc
fsub
int
shr
adc
aam
add
push
fsub
fs
xor
adc
cmc
out
sar
ins
retf
add
mov
loop
dec
and
and
sbb
or
and
movs
inc
push
dec
push
sub
add
push
push
sub
imul
std
inc
gs
inc
push
add
ins
add
add
pop
in
dec
or
hlt
pop
mov
jne
ret
pop
cmps
call
dec
mov
std
jnp
in
call
cmps
push
int3
and
mov
hlt
call
xchg
xchg
pop
mov
int3
xchg
or
das
inc
and
inc
enter
fwait
std
xor
or
sbb
adc
push
inc
push
cmc
add
xchg
cld
dec
les
sub
nop
xchg
sub
enter
cmps
cmp
inc
mov
inc
xor
push
xor
dec
rol
add
xor
dec
add
js
fwait
or
aam
inc
xlat
cwde
test
add
sub
inc
inc
popf
inc
adc
cs
pop
test
dec
nop
dec
xor
cmp
and
ins
inc
xor
aas
mov
clc
loopne
popf
inc
add
call
aas
inc
hlt
adc
call
jmp
add
in
and
xor
cld
adc
inc
add
and
sbb
inc
mov
dec
retf
pop
sub
add
add
dec
repz
sub
xor
add
rcl
(bad)
cmp
retf
inc
and
jmp
inc
mov
dec
cmps
sub
cmp
add
add
ins
add
inc
nop
or
(bad)
call
inc
adc
pop
adc
test
add
jo
inc
mov
sbb
push
or
rcl
adc
adc
jmp
loopne
adc
aas
dec
mov
xchg
or
pop
(bad)
(bad)
push
loopne
xor
fadd
adc
pop
inc
sub
add
ret
popf
lods
int
test
add
inc
xchg
sahf
stc
dec
adc
pop
and
out
jne
inc
sbb
sbb
push
cmp
nop
fidivr
loope
test
xchg
xchg
and
xchg
adc
and
leave
es
push
sub
fdiv
nop
imul
adc
aad
lods
shl
pusha
movs
sub
jmp
push
xor
mov
mov
aas
fldcw
adc
add
adc
int3
xor
add
invd
movs
inc
pop
pop
jo
retf
lods
mov
clc
xchg
jnp
(bad)
and
xor
mov
shr
lods
inc
pop
pop
xor
pop
(bad)
jae
es
sbb
nop
sbb
adc
mov
push
(bad)
sbb
and
fadd
jp
sbb
mov
les
repz
cmp
lods
or
add
mov
mov
mov
test
xor
inc
add
jae
push
dec
mov
daa
loopne
retf
sbb
sbb
mov
cmp
or
mov
push
adc
hlt
jae
pop
xor
adc
jl
add
add
adc
inc
retf
inc
test
sub
mov
mov
or
cmp
adc
test
xchg
push
inc
adc
xchg
test
adc
in
and
loope
add
or
ins
jo
pop
pop
mov
xchg
add
(bad)
(bad)
cmc
mov
mov
dec
pop
sar
jno
jg
int3
sbb
call
les
std
mov
sar
ror
(bad)
rcr
aas
mov
xor
xor
add
pop
les
rcl
cmp
and
mov
xor
je
test
jns
cs
adc
push
add
add
cld
lock
clc
sahf
pop
mov
les
sub
sub
sub
and
jl
pop
and
add
adc
es
ror
xor
push
inc
fs
mov
pop
cmps
and
sbb
mov
loope
pop
(bad)
movs
or
test
jnp
inc
add
les
sahf
xor
dec
dec
and
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
and
dec
pushf
push
push
sub
retf
push
or
mov
xchg
add
adc
aas
and
adc
fwait
xchg
jmp
add
clc
arpl
mov
ds
or
mov
or
mov
loop
call
mov
mov
add
bound
sbb
or
sar
xor
sahf
cmp
pop
call
jne
push
or
(bad)
xor
cmp
mov
(bad)
fisub
mov
add
imul
add
or
pop
mov
and
add
fimul
adc
xor
mov
add
inc
inc
fwait
and
sub
fstp
fs
out
dec
ins
add
sub
mov
and
frstor
or
test
jg
lods
std
inc
jbe
adc
add
test
adc
pushw
mov
int
inc
pop
sub
jnp
(bad)
mov
imul
pop
popa
lds
xchg
push
push
xor
adc
nop
add
clc
inc
int
push
sbb
das
cwde
rol
outs
js
(bad)
or
int3
and
add
xor
sub
jb
and
rcr
add
inc
push
je
xor
adc
inc
add
mov
sub
adc
jb
je
daa
inc
ss
lea
mov
movs
pop
adc
xor
pop
add
xor
add
dec
add
imul
loope
sbb
loop
xor
test
(bad)
or
dec
add
xrelease
aas
mov
mov
mov
jno
and
cmp
push
add
add
sub
arpl
add
xchg
cwde
sahf
pushf
fdiv
xor
and
dec
add
and
push
test
or
cmps
test
jp
test
dec
stos
or
mov
and
loop
dec
xor
sub
add
jp
and
or
dec
je
inc
fst
je
pop
push
add
gs
adc
xor
jo
syscall
ss
dec
sbb
add
push
and
mov
inc
and
jmp
daa
or
pop
or
push
je
inc
sub
and
aam
lds
add
gs
push
pop
(bad)
xchg
nop
pop
inc
pop
leave
pop
scas
inc
es
stos
or
(bad)
push
xchg
and
or
adc
mov
hlt
icebp
cmp
adc
jne
shrd
add
add
inc
into
ficomp
mov
hlt
push
push
sar
lods
(bad)
in
ins
cmps
or
adc
mov
loopne
int
inc
push
or
cmp
sbb
rol
stc
or
rcr
inc
gs
mov
leave
adc
add
sub
add
adc
mov
cmps
pop
fxch
repz
sbb
adc
adc
add
cld
jae
sbb
test
aas
adc
ins
pushf
test
sub
add
sub
xchg
add
sar
mov
xor
xor
leave
aas
ficom
xor
jb
or
lods
add
adc
mov
or
push
push
pop
inc
ds
lds
add
sbb
cmp
in
repnz
mov
and
movs
xchg
add
add
iret
clc
pop
sub
push
fs
mov
or
bts
aas
lods
loope
jmp
nop
pusha
inc
data16
mov
jbe
loop
mov
sar
inc
cmp
pop
lahf
and
cmp
cld
add
sub
add
cmp
or
and
mov
sub
adc
add
add
mov
jg
push
sub
jl
inc
jae
(bad)
sbb
inc
mov
and
mov
inc
add
inc
adc
mov
movd
ret
(bad)
neg
mov
xor
(bad)
fmul
dec
test
dec
add
push
add
nop
dec
loopne
and
clc
aam
xchg
sbb
in
sar
sahf
inc
lea
mov
add
ror
adc
and
loop
sub
dec
inc
test
pusha
xchg
mov
pusha
or
mov
(bad)
xor
scas
or
aas
sbb
(bad)
xor
(bad)
jo
and
lock
jle
dec
and
mov
sub
inc
or
test
aas
inc
shr
push
call
lds
call
inc
or
aas
push
loopne
pop
add
adc
push
and
sub
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
arpl
adc
aad
adc
dec
xor
mov
call
adc
movs
and
xchg
sub
xchg
adc
push
lock
inc
or
arpl
inc
adc
or
jg
xchg
or
daa
rcl
test
ret
aas
add
or
(bad)
or
or
cmc
fbld
add
pusha
lahf
ins
xlat
mov
sbb
call
or
(bad)
jg
ss
aam
push
lods
add
rcl
add
mov
out
xor
aam
push
fimul
mov
out
adc
ins
retf
xchg
xor
ja
fbld
retf
pop
arpl
mov
push
lock
pop
cmps
mov
dec
adc
add
js
nop
in
lahf
in
adc
or
push
jne
ins
lock
test
pop
imul
mov
(bad)
shl
push
sub
fucomip
jg
mov
cs
stos
push
les
cmp
and
add
or
repnz
hlt
aas
gs
ins
rcr
adc
int
into
les
add
sar
mov
jmp
or
leave
sub
xor
add
(bad)
nop
loope
sub
add
shl
imul
dec
test
aas
pop
cld
jecxz
aas
xchg
int3
aas
(bad)
in
inc
mov
pop
pop
(bad)
retf
add
xchg
les
or
or
nop
mov
add
sbb
popa
and
inc
or
add
cmc
pop
(bad)
xor
mov
add
xor
xor
or
inc
aam
adc
adc
mov
or
loopne
push
xor
sub
adc
mov
iret
pop
mov
xchg
dec
ss
test
inc
xchg
push
lock
xor
les
inc
in
sahf
add
stc
pop
xchg
stos
(bad)
mov
hlt
dec
xor
out
repz
adc
inc
jmp
xchg
push
add
inc
je
lds
mov
pop
and
stc
dec
mov
cld
add
mov
js
adc
push
add
inc
or
mov
nop
xchg
or
jle
retf
aaa
mov
out
icebp
(bad)
and
push
push
xor
pop
mov
in
and
add
add
jg
dec
repnz
push
xchg
adc
mov
lea
push
push
pusha
ret
adc
lods
jb
pop
leave
call
cld
jno
sub
pop
dec
pop
les
add
retf
fcmovu
lock
cmp
sbb
xchg
adc
add
(bad)
cld
icebp
mov
sub
mov
push
push
or
setb
rol
push
out
or
sbb
sbb
pop
add
jbe
popa
nop
stos
mov
or
imul
mov
call
jmp
pop
xor
xor
xor
jo
add
test
xchg
pop
test
js
and
aas
add
mov
add
(bad)
cmp
aaa
cmps
or
es
test
mov
xor
and
fs
adc
rol
inc
or
aam
inc
pop
loope
or
sub
push
dec
aad
add
es
adc
je
xchg
or
xor
shr
push
cmp
mov
push
repz
test
adc
popf
mov
inc
and
stc
pop
sbb
test
imul
adc
cmp
dec
int3
test
test
rcr
rol
loope
mov
in
add
xchg
xor
mov
stc
sub
pusha
inc
or
mov
add
pusha
pop
sub
or
(bad)
xchg
mov
ins
inc
popa
(bad)
call
sbb
jo
ret
mov
adc
and
mov
and
mov
inc
sub
adc
mov
test
dec
test
cmp
jb
loope
add
ret
and
rol
push
xchg
movs
inc
mov
adc
in
and
and
sub
adc
xor
add
sti
gs
push
mov
das
pop
ret
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
ror
loopne
das
mov
xchg
and
pop
rol
sub
xor
and
push
mov
call
or
or
aas
dec
adc
jl
nop
inc
es
sar
(bad)
call
dec
add
mov
adc
push
pop
loopne
retf
sbb
arpl
mov
sbb
loopne
push
add
dec
xchg
and
push
bound
in
pop
add
jns
and
push
add
mov
daa
inc
data16
(bad)
xor
pop
jb
ins
mov
inc
sbb
(bad)
add
stc
push
add
sbb
(bad)
adc
push
add
lods
push
mov
push
inc
adc
adc
adc
push
inc
jecxz
jno
pusha
rcr
add
aam
movs
add
icebp
jg
push
sar
mov
pop
repnz
ret
and
jb
add
sub
and
outs
push
js
ror
ins
(bad)
cld
jb
jp
std
add
xchg
or
add
xchg
outs
bound
mov
nop
or
dec
lock
or
add
ficomp
xor
pop
mov
sbb
inc
or
dec
mov
push
adc
in
push
xor
cld
add
xchg
imul
(bad)
dec
sub
jp
lock
pop
push
or
xor
adc
loop
fdiv
add
add
mov
lds
(bad)
arpl
aas
pop
cmp
sar
(bad)
adc
aam
xlat
hlt
cmc
xchg
add
adc
and
cmc
dec
jbe
add
fstp
add
xchg
scas
xor
xchg
je
push
shl
xchg
xor
add
jg
push
xchg
jns
sbb
inc
in
push
int3
inc
xor
or
jnp
stc
out
xchg
cmc
cmc
cdq
inc
push
push
push
int
cmp
mov
cli
sahf
sahf
inc
push
enter
mov
add
aas
sub
aam
mov
push
je
xor
add
movs
ret
and
mov
or
mov
xor
pop
or
inc
(bad)
sub
xchg
xor
mov
jmp
outs
mov
ss
mov
dec
inc
in
xchg
dec
test
jbe
movs
lock
or
or
aas
jl
repz
(bad)
sbb
jmp
cmp
xor
fchs
mov
or
and
inc
xor
add
aas
gs
rol
into
mov
push
xchg
stos
inc
and
add
adc
or
pop
add
sbb
xor
outs
loopne
adc
ins
add
repz
add
inc
add
or
inc
call
scas
mov
or
add
daa
adc
(bad)
lock
xor
cld
arpl
inc
pop
in
pop
ds
jecxz
aaa
sti
jbe
retf
sub
xor
repz
nop
inc
xor
aas
xchg
(bad)
into
call
inc
data16
add
mov
add
clc
iret
jae
mov
iret
aas
outs
clc
(bad)
(bad)
int3
xchg
push
enter
inc
add
pushf
ror
or
int3
es
dec
or
dec
and
adc
aad
adc
sub
mov
or
add
xor
or
mov
pop
xor
adc
inc
xchg
and
xor
hlt
adc
mov
or
inc
call
sub
mov
and
pop
sbb
push
imul
fimul
les
adc
add
sbb
movs
and
or
loop
jg
or
lock
and
xchg
sbb
or
mov
or
fadd
xor
cmps
loopne
ins
nop
or
mov
sbb
shl
test
in
inc
js
(bad)
add
call
mov
fwait
cmp
loop
or
or
add
test
add
cmp
pusha
add
nop
ror
adc
mov
fstp
push
push
and
cdq
adc
or
les
add
out
push
xchg
cwde
add
sub
and
or
rol
loope
sahf
add
mov
lock
sbb
inc
sub
dec
stos
imul
call
sar
pusha
sub
inc
cwde
push
and
sbb
adc
repz
sub
xor
add
aas
xor
nop
jmp
cdq
je
ret
aas
mov
mov
ret
sahf
call
cmps
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
les
sbb
aaa
stos
rol
add
pop
xor
ret
ds
adc
or
inc
leave
mov
pop
mov
add
mov
cmps
cli
or
lock
or
repnz
inc
adc
fsub
fimul
cmp
call
add
fs
xchg
or
inc
sahf
cmp
push
test
add
or
dec
mov
dec
add
cmps
cld
stos
adc
js
or
jbe
pop
xor
cmp
ret
mov
pop
mov
pop
push
cmp
xchg
das
sub
scas
add
rcl
sar
inc
cmps
or
inc
bts
push
sbb
xchg
shl
clc
ja
and
add
sti
loope
or
arpl
and
retf
inc
inc
push
scas
pop
into
call
outs
lds
imul
popf
inc
cli
xlat
push
adc
les
call
or
pop
push
nop
adc
jb
and
or
in
cld
add
popa
pusha
jecxz
es
mov
dec
addr16
adc
cmp
adc
push
repnz
stos
int3
repz
add
xor
and
inc
sub
jo
dec
aaa
sbb
mov
nop
and
inc
arpl
add
or
jno
mov
and
pop
sub
inc
or
int
sbb
inc
cdq
adc
mov
dec
aaa
sar
arpl
inc
hlt
pusha
hlt
or
mov
sub
or
inc
xchg
mov
xchg
inc
add
mov
add
jo
jge
adc
or
pushf
inc
pop
push
inc
out
xchg
sub
std
arpl
adc
cmp
cdq
mov
cdq
xchg
jp
dec
adc
movs
cmp
nop
test
movs
sub
or
movs
pop
pop
sub
adc
lahf
gs
adc
xchg
test
dec
(bad)
call
popf
and
or
leave
add
cdq
inc
mov
xor
sub
add
lock
pusha
retf
bound
xchg
jmp
add
xor
xchg
sbb
aas
rol
nop
mov
inc
jl
fstp
lods
mov
inc
fs
inc
or
nop
mov
dec
and
pop
movs
or
mov
adc
sub
cmps
push
xchg
adc
cs
push
adc
inc
add
cmps
and
repnz
pop
sbb
jae
pop
(bad)
or
hlt
aas
xor
movs
and
movlhps
hlt
push
test
or
xor
xor
shl
xchg
(bad)
std
iret
ss
cmp
outs
adc
fstp
call
test
int3
sub
aas
jbe
and
adc
cmp
xchg
or
(bad)
pop
ins
data16
add
imul
pop
push
push
add
lods
mov
xchg
add
mov
push
repnz
push
cli
add
les
dec
sbb
push
lds
xchg
icebp
inc
add
add
or
inc
adc
mov
dec
adc
out
les
stc
(bad)
adc
mov
inc
push
jns
jp
cmp
int3
mov
loope
arpl
mov
sbb
inc
xchg
in
sub
enter
imul
cmpxchg
jb
and
loope
dec
rcr
sbb
push
cmp
or
mov
and
and
adc
mov
call
or
int3
add
or
xor
and
mov
or
clc
inc
adc
sub
cmps
mov
xor
mov
call
sbb
loope
imul
enter
push
push
lea
mov
or
mov
cmp
jno
js
loope
or
mov
inc
add
push
mov
inc
push
rol
clc
mov
sbb
sbb
push
rol
jbe
test
ins
pop
inc
or
imul
rol
xor
sbb
jmp
les
cli
add
xor
or
int
push
xchg
shl
or
mov
or
push
inc
es
or
or
arpl
movs
leave
add
lock
and
inc
and
mov
or
inc
retf
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sub
sbb
loope
add
push
rol
aas
sub
cmp
fcom
push
inc
push
dec
cwde
fs
xchg
nop
sbb
aam
enter
dec
data16
xor
push
push
rol
sub
ret
or
fadd
and
mov
dec
xchg
jbe
jmp
mov
mov
inc
pop
push
adc
jg
sahf
sbb
lds
or
dec
mov
mov
sbb
clc
fdiv
(bad)
and
adc
loopne
ins
bound
or
shl
shl
and
retf
jg
xchg
adc
dec
das
adc
push
imul
dec
nop
outs
hlt
fsubr
inc
adc
sti
sub
fs
adc
mov
push
pop
inc
xor
adc
mov
pop
ss
js
xchg
mov
mov
cmp
inc
mov
cwde
shl
pushf
inc
pop
enter
xchg
(bad)
call
mov
lods
icebp
and
fwait
mov
sub
jno
rcl
sar
clc
fiadd
cld
or
jnp
xchg
int
dec
push
mov
or
popa
xor
adc
or
int3
mov
aas
and
jns
or
shr
inc
or
inc
sub
lds
sub
test
cld
ret
xchg
and
(bad)
(bad)
(bad)
call
push
test
aas
fcom
outs
(bad)
je
lea
into
cld
ret
dec
inc
jp
lds
pushf
dec
loopne
(bad)
and
in
inc
rcl
(bad)
fs
fst
(bad)
enter
jbe
and
adc
int
jae
xor
imul
add
dec
and
aaa
inc
push
inc
and
adc
inc
jge
fld
add
xchg
adc
push
sub
rcl
aas
xor
(bad)
push
xchg
or
rol
push
adc
add
push
dec
or
mov
and
enter
sub
movs
ror
add
loopne
inc
jno
(bad)
dec
cmps
or
cmps
inc
mov
es
inc
push
adc
push
add
add
stos
or
(bad)
aad
nop
add
call
lds
add
add
inc
shl
cwde
out
xchg
aas
ins
adc
int3
aas
push
retf
aas
hlt
mov
cdq
add
aam
and
or
(bad)
movs
(bad)
fcom
shl
xor
push
push
push
or
imul
or
push
pop
(bad)
cmp
push
mov
push
add
push
mov
prefetch
inc
jnp
mov
xchg
add
jp
stos
arpl
xchg
xchg
inc
mov
adc
inc
cdq
pusha
fidiv
xor
push
xor
mov
or
ret
or
rcl
push
mov
test
add
adc
add
pop
or
mov
mov
mov
lock
adc
lods
mov
add
add
push
adc
(bad)
pushf
mov
or
inc
lock
rcl
inc
ins
pop
xor
sbb
cwde
cld
add
into
cmp
jb
dec
dec
lea
add
pop
inc
and
ds
sbb
cmp
ja
movs
rcl
ins
rol
outs
adc
cld
rcr
loopne
inc
mov
punpcklwd
rol
inc
and
das
dec
jge
mov
cmp
push
call
inc
je
adc
mov
cmp
sbb
and
mov
sub
adc
mov
jg
adc
xor
es
stc
dec
sysenter
sbb
sub
cmp
dec
add
fadd
add
jl
xchg
xchg
cmp
pop
das
cld
pop
and
mov
nop
mov
imul
dec
push
les
xor
fcom
adc
pop
aaa
sbb
stos
or
in
aaa
lods
popa
add
push
add
push
jb
pop
adc
outs
jb
adc
add
sub
inc
push
add
lea
or
sbb
inc
or
mov
dec
pop
mov
bound
pop
loop
add
mov
pop
cmp
and
push
add
ret
sub
mov
sbb
ror
sub
or
add
test
push
sbb
fcom
mov
or
push
dec
punpckhbw
mov
clc
dec
mov
push
mov
xchg
add
xchg
push
adc
add
lock
adc
and
loopne
icebp
fmul
add
xchg
xor
jl
inc
cmp
in
adc
xor
cmps
and
cmp
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sub
call
mov
(bad)
or
dec
mov
and
mov
aam
pusha
inc
xchg
push
sbb
mov
mov
inc
retf
or
xor
cmp
inc
and
push
add
es
sbb
fimul
sub
pop
enter
call
(bad)
fcmovnbe
pusha
stos
inc
push
call
mov
and
adc
(bad)
rcl
mov
adc
test
rol
loop
aam
dec
xchg
sub
mov
cwde
pop
bound
mov
xor
adc
dec
mov
or
mov
rol
sbb
or
or
dec
bound
test
xchg
sub
js
cmp
cld
inc
retf
rcl
inc
cld
ret
lock
inc
and
fwait
std
sbb
jo
xor
cmps
out
inc
add
or
repz
dec
(bad)
sbb
imul
call
adc
or
sahf
imul
les
or
xor
cwde
cmp
or
inc
add
push
or
sbb
enter
outs
inc
and
push
ss
mov
and
nop
aas
push
popf
rol
(bad)
or
cs
dec
jle
and
inc
test
sar
inc
inc
es
int3
aas
rcr
adc
mov
rcl
add
adc
(bad)
repnz
add
add
rol
push
or
lock
adc
nop
mov
push
add
cmp
sub
adc
and
cmp
rol
dec
mov
xchg
push
pop
jmp
sub
lods
inc
adc
inc
adc
xor
xor
mov
into
inc
and
inc
daa
adc
out
adc
sub
add
xor
adc
push
dec
adc
jp
retf
mov
jno
nop
pop
add
add
(bad)
(bad)
dec
nop
xor
push
xchg
(bad)
xchg
cmps
inc
add
arpl
xor
push
and
mov
or
je
xor
hlt
(bad)
retf
sar
(bad)
int3
push
inc
pusha
sbb
outs
sub
mov
adc
ret
test
and
jb
lods
adc
xor
pop
add
fcomp
enter
or
arpl
xor
in
loop
push
ins
imul
sbb
retf
sbb
fistp
nop
int3
xchg
test
lock
dec
inc
push
or
inc
adc
pop
and
mov
pop
add
inc
leave
or
or
adc
add
cwde
rol
mov
fs
lahf
stos
or
add
pop
ss
call
hlt
sub
sbb
cmp
dec
add
shl
xor
or
and
call
add
or
add
int3
adc
add
pushf
pop
gs
popa
or
sbb
sub
mov
pop
retf
xchg
adc
int3
scas
add
nop
call
dec
adc
or
pop
das
cli
add
pop
shl
inc
cmp
add
sub
rol
inc
inc
or
std
and
and
inc
sub
adc
add
call
xchg
adc
jmp
mov
sahf
inc
and
adc
adc
or
sar
sbb
pushf
inc
mov
sbb
cmp
add
or
jbe
add
or
mov
popa
add
popf
sub
xor
adc
and
inc
or
cmps
mov
sub
fs
stos
fbstp
repnz
add
lock
adc
and
adc
and
sbb
and
sbb
sbb
ror
fadd
adc
sub
cmp
mov
cmp
push
and
sub
add
enter
and
sub
adc
cmp
add
mov
cld
and
shl
dec
fcmovbe
push
pop
lds
and
sub
and
and
push
rol
pop
stc
cmovg
and
mov
inc
add
in
xor
add
popa
dec
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
cwde
dec
dec
call
adc
ret
inc
or
xor
shl
les
sub
cmp
cmp
(bad)
imul
sbb
xchg
call
adc
dec
and
aas
inc
xchg
mov
popa
shl
les
push
xchg
and
mov
xor
adc
or
mov
push
mov
add
pusha
or
(bad)
pusha
sbb
(bad)
fcomp
(bad)
adc
cld
adc
fstp
ins
add
fnstcw
lods
(bad)
(bad)
popf
pop
rol
ret
mov
pop
pop
bound
cmp
and
mov
mov
(bad)
mov
inc
scas
or
sahf
mov
nop
shl
mov
fdiv
pusha
adc
out
mov
dec
jp
push
xor
pop
rcl
loopne
or
or
fnstcw
xor
les
add
adc
pop
ja
add
int3
imul
or
sub
jae
or
lods
adc
nop
xor
cmp
mov
cmp
add
xor
js
mov
add
add
sbb
inc
and
sbb
pop
add
xor
test
inc
adc
adc
inc
nop
push
or
pushf
xor
or
ret
aad
or
push
adc
adc
push
cld
add
sub
int3
add
sar
and
mov
cmp
xor
pop
clc
nop
xor
movs
pusha
ror
jge
fdivr
jl
mov
cmp
aas
pop
jle
dec
pop
test
jg
adc
mov
push
inc
sbb
add
add
push
cli
pop
add
(bad)
imul
mov
and
push
xor
les
sbb
mov
cmps
adc
cmp
(bad)
and
pop
or
add
and
inc
es
add
daa
adc
inc
push
lds
xchg
mov
cmp
inc
sar
sub
or
cmp
inc
add
(bad)
and
jbe
jae
js
popf
adc
inc
mov
(bad)
pop
inc
adc
add
inc
xor
jg
jmp
sub
push
xor
sub
push
movs
jmp
xor
stc
fsubr
sbb
sar
add
sbb
and
add
pop
jmp
int
xchg
adc
cld
adc
rcl
aam
adc
mov
and
test
cmp
dec
aaa
add
or
add
and
shl
adc
aaa
jecxz
aad
cmp
les
call
cwde
inc
push
inc
cmps
add
jo
dec
push
dec
cmp
bound
inc
inc
adc
inc
dec
add
repz
sti
or
cwde
inc
and
adc
xor
sub
sub
int3
sub
pop
outs
cld
inc
add
jo
retf
(bad)
jl
lods
inc
int3
sub
lock
enter
or
cmp
loope
cmp
add
rol
int
mov
test
and
push
or
test
inc
hlt
jbe
ss
(bad)
mov
fsub
stc
movs
mov
dec
std
iret
xor
pop
or
les
jmp
jae
or
jecxz
leave
or
mov
nop
xchg
mov
or
pop
xchg
add
mov
sub
or
call
cmps
sahf
and
ins
adc
dec
in
lods
adc
ins
mov
adc
clc
inc
sbb
mov
cmp
add
mov
retf
xchg
sbb
cmp
fadd
push
add
test
xor
mov
and
popa
add
mov
rcl
inc
sbb
mov
or
add
les
aaa
js
bndldx
in
nop
mov
mov
les
add
pop
lds
inc
push
inc
add
cmp
les
fs
pop
add
jo
dec
inc
les
dec
into
pusha
movs
xor
or
out
sbb
adc
inc
daa
fwait
call
pop
push
shl
shr
loop
mov
xor
clc
push
adc
sub
fsub
add
rol
push
cld
cmp
sbb
mov
retf
push
sbb
outs
dec
add
xchg
(bad)
and
or
add
or
jne
cmp
adc
push
and
jle
inc
adc
in
loopne
push
stc
(bad)
push
inc
xor
sbb
xor
adc
add
xchg
adc
or
nop
xor
sbb
retf
inc
or
inc
adc
and
push
jo
and
inc
adc
inc
add
ins
add
mov
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
popa
push
loop
pop
enter
jg
add
mov
push
mov
push
sbb
lahf
sahf
sub
int3
cwde
inc
mov
movs
dec
xor
pop
cdq
rol
xchg
sbb
sbb
cdq
shl
add
or
xor
cmp
jbe
adc
or
mov
xchg
mov
inc
xchg
jge
or
rol
pop
or
les
retf
mov
hlt
mov
or
pop
daa
(bad)
jmp
sbb
mov
lods
stos
jne
aas
mov
test
cmp
or
sub
test
loope
sub
mov
aaa
sbb
lods
add
adc
arpl
nop
cdq
mov
retf
inc
ss
retf
xor
loopne
call
ss
fadd
xchg
adc
ja
les
call
neg
pop
push
arpl
sub
or
pop
inc
xor
inc
mov
nop
add
adc
cwde
mov
ins
wbinvd
loope
xor
dec
add
or
and
stc
or
jg
and
sbb
loopne
adc
mov
or
adc
ds
pusha
xor
add
loope
sar
jae
push
movs
std
and
or
xchg
sbb
or
add
cld
jecxz
inc
jmp
cwde
arpl
add
xor
adc
mov
sbb
loopne
add
ror
sub
mov
add
fcom
sar
sub
dec
pop
int3
or
add
sub
add
sub
aaa
iret
cmp
movs
jmp
rcr
aas
jge
mov
mov
repz
sbb
pop
push
js
nop
stos
add
outs
jne
sbb
cmp
enter
arpl
inc
push
adc
inc
mov
in
lahf
inc
adc
rol
fdivr
(bad)
xchg
movs
dec
xchg
add
add
add
into
inc
inc
sub
dec
sbb
fsubr
stc
aad
and
push
and
add
or
add
cs
in
movs
shl
ret
sbb
adc
scas
aaa
add
and
retf
xor
jge
enter
mov
inc
nop
pop
(bad)
repz
icebp
jbe
push
or
lea
sar
gs
mov
sahf
lods
adc
or
add
cmp
test
push
fwait
arpl
cmc
(bad)
xor
mov
push
aam
adc
movs
scas
inc
xor
jge
std
shl
mov
cmp
mov
ss
ins
mov
cmp
push
sbb
outs
cmp
movs
das
retf
jmp
ror
xor
aaa
sbb
ret
aas
jns
les
ss
mov
inc
xchg
test
mov
dec
inc
xchg
adc
(bad)
enter
jle
enter
adc
xor
sub
aam
inc
push
or
xor
pop
repnz
mov
inc
ret
and
and
jmp
and
push
inc
adc
add
mov
jecxz
add
lahf
out
mov
or
pusha
rcl
popa
or
sbb
mov
mov
xor
and
adc
sbb
and
and
inc
sbb
xor
add
xor
call
push
adc
add
loopne
ret
adc
hlt
invd
test
adc
add
in
and
cwde
xlat
add
cmp
mov
inc
or
mov
inc
adc
dec
mov
jne
test
call
ss
scas
and
push
inc
mov
inc
xchg
loopne
sbb
mov
sub
inc
das
(bad)
adc
pop
sub
or
lock
adc
pop
shl
pop
mov
adc
inc
jbe
ret
ror
inc
adc
loope
in
mov
(bad)
pop
enter
scas
xchg
cmp
shr
add
sbb
(bad)
nop
or
call
mov
in
sbb
push
sbb
or
dec
jne
cmp
jo
jo
int
loope
pop
into
in
imul
inc
add
fsub
pop
movs
push
inc
add
aas
mov
add
adc
mov
test
rcr
mov
inc
ret
popa
dec
add
push
push
inc
jle
and
mov
(bad)
fadd
call
or
inc
adc
ror
or
pushf
add
push
pop
sbb
inc
sbb
xchg
or
push
mov
cli
pop
xor
add
xor
push
mov
movs
(bad)
rol
push
and
pop
inc
sbb
inc
pop
rcl
fwait
adc
push
sbb
sbb
and
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
es
sub
dec
xchg
add
enter
data16
mov
lahf
sub
add
or
leave
and
add
sbb
push
xor
and
les
xchg
mov
push
mov
add
adc
les
add
push
popf
fiadd
cmp
or
adc
(bad)
ficomp
sub
push
push
mov
sbb
loopne
popa
lods
add
(bad)
xor
rcl
retf
dec
sbb
add
add
fs
in
lahf
popf
push
or
or
in
mov
lock
test
xor
cdq
xor
inc
test
cld
cmp
scas
retf
jmp
mov
xchg
(bad)
jae
jmp
(bad)
jmp
cld
fbstp
add
dec
xor
retf
xor
les
fwait
ins
xor
mov
dec
adc
or
ror
push
fdiv
(bad)
push
inc
mov
adc
xor
add
adc
sbb
lds
js
add
inc
or
inc
ret
aas
stos
sub
rcl
fs
adc
enter
aas
adc
push
push
lods
add
inc
leave
xor
rcl
je
lods
add
adc
push
sbb
dec
sbb
cmp
xor
push
and
lods
inc
rcl
xor
popa
mov
ins
cmps
and
or
lods
cmp
sub
jl
or
or
xchg
add
xor
or
or
out
mov
jbe
add
aaa
sub
add
and
dec
add
cwde
mov
lock
push
inc
retf
push
or
movs
mov
adc
add
js
add
inc
rol
add
cwde
rol
xor
sub
cs
nop
lods
push
cmp
or
mov
or
rcl
lock
and
loopne
imul
hlt
push
inc
mov
pusha
dec
aaa
add
rol
(bad)
or
xor
inc
mov
sbb
(bad)
and
std
ret
jmp
rcl
adc
jae
dec
outs
mov
imul
cs
loope
adc
aas
cdq
cld
mov
and
add
in
ret
add
movq
js
lea
adc
test
int3
bound
mov
push
sub
mov
push
mov
dec
sbb
in
cld
(bad)
sbb
mov
in
aas
push
daa
add
add
lods
cwde
int3
add
rol
push
call
adc
cmps
inc
sub
les
inc
jmp
push
inc
sbb
inc
mov
stc
iret
xchg
rol
mov
or
inc
nop
adc
cld
add
push
aad
aam
xchg
push
mov
sar
or
sar
aad
iret
adc
xchg
add
inc
retf
lods
stos
leave
rcr
mov
xlat
cld
add
shl
push
push
add
add
aaa
xor
loopne
iret
xchg
leave
push
xor
inc
ror
into
aas
xor
ret
inc
je
into
imul
add
adc
jno
int3
mov
je
(bad)
push
add
add
out
fwait
iret
iret
sbb
and
sbb
pop
popa
cwde
(bad)
sti
inc
adc
add
mov
pcmpeqb
push
sbb
sar
fwait
add
imul
mov
push
cwde
add
sub
add
add
sbb
test
daa
jg
add
pop
mov
inc
dec
adc
ror
mov
test
test
inc
add
ror
inc
and
xor
inc
sub
adc
push
inc
outs
lea
inc
and
daa
nop
pop
pop
pusha
sbb
pop
or
arpl
sub
add
repz
les
add
mov
adc
ret
lock
mov
jl
dec
inc
push
loop
xor
fs
mov
test
nop
ret
aas
enter
sub
pop
add
inc
call
jo
and
add
rol
test
push
js
mov
inc
sbb
xor
adc
xor
or
mov
sbb
add
mov
hlt
add
mov
inc
jl
inc
(bad)
pop
ret
sbb
mov
nop
dec
and
push
into
mov
cmp
call
sbb
out
sbb
adc
or
sub
icebp
mov
push
cmp
or
sbb
nop
jnp
and
cld
pop
sbb
iret
push
sbb
push
lods
sub
pop
inc
imul
test
aam
inc
lock
cmp
sub
inc
push
pusha
or
js
stos
outs
sbb
push
xor
data16
inc
push
xchg
rol
sbb
aaa
mov
test
and
les
hlt
rol
nop
sbb
sbb
(bad)
movs
and
ins
add
inc
sbb
push
or
pusha
add
pop
ficomp
push
and
test
je
push
inc
push
xlat
movs
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sub
add
xor
lahf
ret
xchg
(bad)
add
mov
push
(bad)
jg
int3
or
xor
add
pusha
sbb
inc
xor
sbb
jg
add
cmp
dec
xor
pop
ficom
call
xor
sub
pop
inc
pusha
sub
sbb
shl
xchg
ret
xchg
ins
dec
xor
mov
call
add
lahf
ret
add
push
loop
mov
arpl
pusha
jecxz
xchg
(bad)
adc
pop
cmps
add
jnp
shl
outs
stc
xchg
or
pop
xchg
nop/reserved
mov
int3
rcl
mov
adc
push
push
mov
add
scas
sbb
add
sub
or
and
scas
cmps
call
mov
mov
adc
xor
xchg
std
mov
jns
or
sbb
ror
jbe
sbb
push
retf
and
and
nop
jp
inc
ret
or
inc
adc
adc
sub
cld
loope
add
and
xchg
movs
and
adc
xor
pusha
ret
enter
aas
mov
aaa
loopne
mov
push
push
adc
jecxz
add
enter
push
int3
add
addr16
add
popa
adc
adc
ret
clc
adc
aas
(bad)
sub
add
and
popa
xor
pop
or
add
sbb
sub
cld
add
inc
pop
dec
loope
sbb
or
adc
add
dec
xor
push
stos
(bad)
fiadd
stos
imul
or
nop
adc
test
or
inc
jbe
inc
cdq
aaa
(bad)
xor
mov
sbb
sahf
repz
inc
adc
outs
mov
std
jecxz
inc
shr
pop
add
hlt
iret
pop
jle
ret
jmp
add
pop
in
data16
xor
xor
or
add
lods
mov
and
lock
sub
pop
mov
nop
pop
sub
jmp
sub
add
outs
or
pop
mov
mov
nop
repz
add
jo
inc
enter
(bad)
stc
push
les
inc
adc
add
lds
pop
mov
shl
lods
in
mov
es
mov
(bad)
and
inc
or
rol
or
sub
adc
inc
arpl
jb
xchg
pop
push
nop
xor
add
lar
cwde
xor
inc
add
sti
dec
mov
adc
imul
mov
inc
cmp
call
ins
retf
dec
push
sar
xchg
stos
inc
xor
sbb
mov
std
iret
stos
adc
fild
or
repnz
inc
jae
adc
sub
aad
gs
fisub
xor
inc
adc
inc
fild
add
nop
adc
inc
jnp
fld
cli
pop
jne
imul
push
lds
add
lock
or
fdiv
add
daa
pop
xor
mov
icebp
rol
shl
hlt
adc
or
arpl
and
cmp
adc
adc
sbb
add
cmp
jne
jmp
lods
lds
fidivr
imul
fidivr
add
cmp
pusha
arpl
add
out
or
and
xlat
or
or
add
test
out
mov
stos
pop
inc
das
in
or
add
or
add
add
aad
add
pop
ins
pop
les
sbb
dec
push
and
add
bound
jmp
(bad)
pop
loopne
push
dec
add
push
lods
push
xor
mov
jg
pusha
add
xchg
mov
and
cld
inc
cmp
xchg
add
mov
dec
(bad)
mov
cmp
enter
les
mov
pushf
test
fsub
aas
fidiv
pusha
pop
inc
dec
pop
rol
or
leave
adc
xor
and
or
lea
inc
or
adc
(bad)
mov
push
ret
push
sbb
js
and
pop
clc
inc
push
in
imul
sub
add
mov
sub
xor
jg
add
add
or
push
cmp
add
and
imul
or
xchg
xchg
sbb
inc
es
test
int
adc
aaa
dec
dec
nop
outs
add
push
add
adc
inc
mov
ins
pop
inc
adc
test
sbb
or
stos
mov
and
jle
add
(bad)
xor
cmp
inc
inc
or
jbe
in
pop
push
ror
sub
add
pop
pusha
pop
sbb
or
inc
mov
jmp
add
mov
pop
ins
rcl
inc
or
shr
pop
push
lock
or
add
cld
add
repnz
adc
or
and
adc
loopne
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
les
cmp
xor
ret
push
push
mov
add
lahf
adc
inc
cwde
sbb
add
fwait
mov
sbb
sub
shl
mov
push
gs
push
or
clc
inc
cmp
loopne
dec
cmp
add
shl
leave
popa
inc
xchg
jge
or
or
arpl
shl
addr16
mov
je
not
test
jmp
jg
or
xor
rcr
inc
or
aad
ror
cmp
fsubr
add
or
xor
mov
outs
jmp
pusha
out
sub
sub
fidivr
inc
pop
fsubr
repz
lock
aas
(bad)
xlat
mov
sti
mov
les
add
sbb
cwde
push
add
mov
mov
mov
data16
dec
mov
adc
icebp
clts
dec
mov
sar
push
or
int3
pop
inc
shl
and
(bad)
aas
dec
or
and
lock
add
cmp
cwde
and
push
push
add
ror
outs
js
or
xor
mov
aaa
fsubp
push
or
sbb
sub
add
mov
inc
xor
xor
inc
cdq
pop
jbe
fdiv
inc
add
aam
mov
adc
test
shl
push
or
jge
test
xor
xor
movs
pusha
inc
adc
stc
add
sbb
fnsave
into
or
lock
adc
movs
mov
pop
arpl
jge
and
or
adc
mov
cli
(bad)
ds
js
fld
(bad)
jmp
add
pop
add
in
sub
repz
aam
add
aas
cs
test
fidivr
pop
mov
call
je
les
je
sar
sbb
add
xor
xchg
int3
add
sub
nop
mov
xor
or
inc
add
ins
cmp
int
inc
push
pusha
popa
test
cmp
jnp
aas
add
in
jne
cmc
xor
mov
sar
mov
and
pop
jle
pusha
punpckhdq
push
addr16
fdiv
cwde
arpl
aas
cmp
lea
sub
mov
push
inc
jmp
xor
pop
xlat
pop
push
pop
push
test
add
cld
mov
push
test
ror
jge
xor
pop
mov
mov
fnop
sar
fdiv
test
fs
fwait
test
and
(bad)
aaa
rcr
jmp
or
aas
pop
mov
sbb
adc
jecxz
cmps
mov
cmp
les
inc
and
test
inc
xor
int3
hlt
shl
jmp
aas
inc
cld
push
mov
pop
sub
fild
inc
or
or
add
adc
dec
mov
jbe
(bad)
call
inc
mov
lea
retf
inc
test
and
cmp
cld
jae
inc
shl
aas
movs
int3
push
add
test
jbe
push
retf
loop
repz
adc
mov
xor
rcl
dec
xor
xor
iret
aas
jo
nop
mov
sbb
pop
(bad)
jno
adc
adc
sub
loopne
sub
or
lahf
xor
push
ret
daa
sub
inc
stos
push
add
sub
jp
test
shr
dec
push
std
call
or
stc
mov
mov
in
ror
pop
fisub
add
inc
push
mov
(bad)
jg
add
xchg
add
adc
movs
inc
inc
les
test
adc
mov
add
mov
aas
and
xchg
cld
pop
inc
jae
push
jbe
lds
add
inc
add
punpckhwd
pop
call
mov
and
outs
rol
lods
xor
jns
inc
inc
test
and
loop
jg
loop
iret
pusha
fs
pop
xchg
xor
push
inc
xor
sbb
xchg
retf
mov
push
jmp
xchg
xor
add
add
rol
sbb
push
enter
ja
or
jmp
dec
jecxz
and
sti
inc
add
sbb
sub
mov
xchg
ins
movs
cmps
xor
or
test
pop
adc
fs
mov
adc
addr16
cwde
and
dec
rol
xchg
mov
and
je
add
inc
test
add
push
les
add
push
mov
cmp
mov
sbb
test
inc
js
add
adc
loopne
xchg
cdq
call
add
(bad)
mov
pop
aad
push
sub
movs
xchg
mov
fidiv
cli
punpckhdq
and
ret
or
sub
adc
xchg
sahf
ret
in
lods
rcr
add
and
lock
adc
rol
popa
adc
shl
jecxz
ror
pusha
xor
jo
adc
mov
and
inc
nop
cmps
dec
and
add
add
and
mov
and
test
mov
or
add
cwde
add
lods
inc
dec
xor
pop
mov
add
add
and
(bad)
sbb
inc
add
cld
xor
add
and
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
nop
dec
es
xchg
add
out
leave
sbb
call
or
push
inc
push
and
lea
cmp
(bad)
loop
xor
push
push
hlt
pop
push
int
or
inc
or
mov
mov
dec
or
jno
ret
ss
jbe
pop
(bad)
pop
sbb
cmp
dec
jae
add
mov
xchg
or
sub
rcr
dec
pop
ss
sbb
adc
cmps
mov
lock
fild
add
sub
mov
add
sbb
in
lahf
and
loopne
loopne
add
data16
or
je
leave
adc
xor
push
add
xor
sbb
add
cmp
push
imul
ds
push
fsubr
sub
fadd
or
in
(bad)
ins
pusha
mov
inc
call
dec
jp
aaa
xor
(bad)
test
mov
push
mov
mov
shr
popf
jg
fidiv
sub
gs
or
dec
or
add
out
js
add
and
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
rcr
gs
mov
aas
test
add
dec
push
bound
popa
fnsave
mov
fimul
clc
scas
or
xor
shl
test
imul
add
and
sbb
sub
mov
inc
inc
imul
enter
dec
cmp
inc
mov
mov
ins
call
xor
fadd
xchg
pop
fwait
inc
in
cdq
test
pop
dec
push
sub
pop
xor
add
xchg
adc
loop
and
fidiv
fstp
push
clc
lock
inc
ins
jle
loope
add
cwde
arpl
pusha
add
push
or
hlt
shl
lea
sbb
pop
imul
push
dec
jp
mov
inc
fadd
out
cdq
inc
mov
push
push
add
sar
pop
push
and
or
adc
xchg
mov
loopne
cmps
fstp
push
sbb
cmp
mov
iret
mov
jecxz
lahf
dec
mov
repz
iret
call
inc
cmp
nop
adc
imul
rcr
add
adc
sbb
inc
add
stc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
nop
leave
xor
ret
(bad)
adc
rcr
pusha
js
add
je
rcr
bound
sar
adc
cmp
leave
jg
push
mov
add
inc
lods
fwait
mov
out
and
nop
fadd
push
sbb
mov
mov
xchg
push
sbb
clc
add
in
movs
inc
inc
data16
hlt
xchg
dec
add
std
fcmovnbe
nop
jecxz
inc
xchg
ins
xor
mov
or
inc
add
addr16
push
loope
and
dec
sbb
loopne
xchg
(bad)
fadd
push
adc
imul
int
js
(bad)
and
mov
or
pusha
cs
test
and
xor
xor
int
add
jno
dec
adc
fidiv
iret
loop
and
dec
imul
sub
fstp
in
call
out
(bad)
shl
dec
lock
inc
out
or
mov
cmc
out
loopne
mov
pop
dec
mov
shr
popf
jg
ficomp
mov
nop
sub
or
xor
loopne
mov
add
and
add
or
inc
sub
add
add
add
add
or
add
or
rcr
cmc
add
mov
rol
add
inc
or
and
adc
inc
pop
sbb
mov
adc
lock
retf
fs
jae
xor
mov
and
sub
icebp
aad
xchg
sub
repz
xchg
or
push
test
adc
add
and
push
sub
or
push
dec
ret
mov
leave
cli
scas
rcr
push
sbb
bound
or
or
sub
retf
add
test
push
out
fdivr
add
enter
mov
sub
das
test
add
jmp
sbb
add
cmp
std
cmps
mov
dec
inc
xchg
cmp
(bad)
rcl
fstp
mov
or
dec
pushf
ja
jg
je
mov
or
mov
inc
pop
jge
inc
shl
push
add
aad
xchg
mov
pop
pop
add
and
add
or
inc
sub
add
add
add
add
or
add
or
adc
mov
in
xor
data16
xchg
(bad)
add
sbb
jg
pop
or
enter
jbe
inc
cmp
and
xchg
les
xchg
sbb
iret
and
or
ja
sub
into
or
imul
cvtdq2ps
mov
dec
push
push
ss
fdivr
and
movs
add
push
cmps
add
es
mov
push
pusha
mov
push
xchg
xchg
mov
xchg
cmp
and
sbb
inc
sub
sbb
(bad)
fwait
xor
add
mov
add
(bad)
add
std
fwait
imul
cdq
loope
(bad)
aas
sub
cmp
aas
inc
fisubr
xchg
lods
loopne
movs
into
dec
pop
mov
or
nop
les
mov
ror
adc
out
ffreep
or
dec
mov
xchg
sub
inc
js
loopne
push
dec
inc
cmp
cmp
les
and
or
add
fcmovnbe
mov
push
or
and
add
or
inc
sub
add
add
sbb
add
ret
or
nop
dec
es
xchg
add
out
leave
sbb
call
or
push
inc
push
and
lea
cmp
(bad)
loop
xor
push
push
hlt
pop
push
int
or
inc
or
mov
mov
dec
or
jno
ret
ss
jbe
pop
(bad)
pop
sbb
cmp
dec
jae
add
mov
xchg
or
sbb
pop
pop
xchg
(bad)
jle
jnp
push
mov
je
mov
add
mov
xor
push
pop
xchg
ins
adc
imul
pop
pop
lea
cmps
cmp
lds
scas
std
sbb
mov
sub
je
mov
or
in
pop
pusha
add
movs
stc
xchg
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
ror
adc
lds
jg
and
xchg
shl
xor
rol
(bad)
jg
ss
jo
mov
xor
lock
retf
xchg
add
clc
inc
call
(bad)
jmp
push
adc
shl
in
ss
sub
sbb
pusha
sar
inc
stos
inc
xchg
jg
xor
xchg
mov
fnstcw
add
mov
rol
cmps
and
and
pop
or
jne
mov
popf
cmps
or
test
sbb
xor
test
dec
(bad)
(bad)
mov
inc
mov
(bad)
cld
fcomi
pand
mov
or
cmp
sub
or
sub
inc
int
cmp
imul
movs
push
mov
jmp
ror
mov
(bad)
sub
hlt
out
les
add
adc
adc
call
push
retf
and
inc
xor
and
sub
jg
lods
repnz
loope
rol
xor
or
inc
inc
push
xor
nop
adc
sbb
cmps
mov
add
stos
pushf
adc
adc
xor
aas
add
pop
je
pop
test
xor
adc
and
mov
inc
mov
jo
inc
aam
popa
mov
mov
mov
add
adc
push
enter
dec
adc
and
dec
push
adc
int3
je
mov
test
rol
rol
and
jae
or
cmp
xchg
add
neg
add
cld
and
call
and
aad
inc
inc
inc
aas
pop
pusha
sbb
(bad)
or
fsub
and
(bad)
leave
in
(bad)
lahf
mov
sub
adc
and
mov
add
fs
xor
fdivr
jecxz
lods
cs
sar
and
cmps
inc
xchg
and
aaa
add
rol
sub
adc
call
in
mov
(bad)
arpl
and
popf
movs
sbb
ror
mov
cld
arpl
les
retf
push
add
push
add
dec
pop
sub
inc
into
dec
repz
mov
inc
stos
(bad)
xor
sub
add
sti
(bad)
lods
push
cdq
in
add
int3
in
inc
loope
arpl
add
ret
aas
sub
sbb
iret
lods
mov
sub
(bad)
xor
(bad)
adc
dec
mov
fwait
inc
sbb
add
jnp
mov
push
inc
test
pop
add
or
test
xchg
ins
push
into
add
push
inc
ficomp
adc
adc
mov
xchg
dec
sahf
push
xchg
mov
xchg
loop
sub
or
ss
pop
mov
jmp
test
ror
mov
xchg
in
scas
jl
sub
rcr
sbb
lock
out
cli
or
int
sbb
cmp
paddq
push
mov
je
cmp
clc
pcmpeqd
retf
dec
xor
sub
xchg
add
sub
cmp
outs
dec
mov
sar
in
nop
mov
repz
ret
mov
add
sub
pop
mov
test
shl
int3
pusha
xlat
outs
jbe
inc
mov
aam
ret
sub
nop
add
add
lock
adc
inc
push
push
test
in
or
pop
push
retf
or
mov
xchg
pusha
add
stos
loopne
and
in
pusha
sub
add
add
and
xor
je
dec
les
mov
xchg
mov
add
adc
and
movs
add
push
mov
push
and
lods
pop
add
push
jmp
ret
push
ret
js
jne
test
xchg
jb
ror
add
push
sbb
pushf
add
mov
adc
ret
and
add
aas
mov
ss
or
push
add
cli
and
shl
aad
inc
test
pop
push
imul
mov
and
sub
mov
sbb
and
movs
inc
sbb
imul
mov
add
mov
adc
add
call
pushf
and
in
mov
pop
data16
push
nop
mov
xchg
adc
dec
dec
push
outs
and
pop
cmp
popa
ror
and
inc
xor
mov
adc
js
or
mov
(bad)
outs
mov
pop
aam
xchg
retf
mov
shr
inc
test
adc
in
add
mov
xchg
call
sbb
popf
inc
or
adc
sub
jne
fcomp
pusha
and
(bad)
xor
xchg
scas
adc
fadd
fadd
push
and
movq
mov
or
or
adc
mov
jge
inc
sbb
rcl
and
or
xor
push
sub
add
mov
jmp
inc
sbb
nop
inc
mov
inc
daa
pop
mov
or
pop
or
ret
sub
add
xor
loope
inc
and
pop
sbb
orps
inc
sbb
sbb
clc
inc
pop
sub
push
add
jo
sub
xchg
jb
arpl
sbb
mov
rcl
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
push
xor
dec
push
and
mov
(bad)
sub
inc
add
stc
outs
pop
or
leave
add
or
leave
aas
inc
call
or
sbb
das
push
xor
and
les
pusha
(bad)
mov
push
mov
add
xor
test
inc
les
fld
jge
es
xor
add
add
mov
mov
jne
aam
mov
lds
cwde
xchg
or
fnstenv
pusha
fnstcw
cld
test
pop
and
jno
mov
dec
js
adc
cmp
imul
hlt
jmp
lahf
cdq
mov
push
sbb
aas
gs
push
pop
sahf
lods
mov
shr
fidivr
add
and
sbb
mov
cmp
out
int
call
ficomp
(bad)
sbb
add
adc
das
cdq
(bad)
jg
pushf
pop
mov
int3
cmp
inc
mov
inc
push
and
add
sub
mov
iret
or
enter
adc
inc
leave
lods
mov
or
and
add
push
(bad)
inc
clc
iret
push
xor
les
dec
das
aam
xchg
nop
pop
cwde
sub
fnstcw
int
repz
sbb
adc
xor
sbb
iret
or
jl
ret
lods
add
mov
cdq
or
add
or
rol
and
aas
push
adc
inc
pop
push
repnz
daa
idiv
add
add
xor
mul
inc
repnz
adc
add
or
call
inc
arpl
lea
jnp
pop
aaa
nop
sbb
test
adc
enter
add
push
and
add
jo
mov
inc
pop
sbb
sbb
xchg
xor
mov
adc
js
jmp
lds
xor
adc
lods
pop
dec
adc
out
movs
in
lods
add
ins
nop
out
inc
xchg
cmp
stos
or
adc
shr
call
(bad)
adc
lea
jb
gs
aas
call
add
iret
movs
lock
inc
cld
adc
jno
stos
cs
nop
imul
jecxz
test
mov
pop
adc
das
(bad)
push
lds
adc
add
repnz
xor
add
push
jmp
push
je
inc
adc
push
and
mov
pop
or
push
(bad)
aas
div
adc
es
sbb
mov
ss
mov
xchg
add
jb
pusha
push
fs
nop
rol
rol
addr16
sbb
dec
mov
stos
rcl
pop
bound
xchg
rol
xor
inc
cmp
xchg
pop
ret
out
inc
out
sahf
int
dec
int3
loope
xor
pusha
cmps
dec
cs
jae
inc
or
mov
or
retf
iret
(bad)
jmp
dec
push
xor
ins
inc
int
iret
jo
iret
ss
dec
loope
mov
xor
sub
xor
int3
ret
add
or
sbb
inc
and
rol
dec
push
inc
sub
or
and
xchg
xchg
dec
xchg
push
test
int
fdivr
xchg
les
ins
and
sbb
sar
mov
adc
outs
shl
int
rcl
sbb
into
adc
cmp
enter
mov
ds
cmp
push
jne
arpl
xor
inc
nop
or
nop
mov
test
fwait
push
xchg
mov
cld
mov
sbb
nop
xor
enter
cmp
and
pop
xchg
mov
inc
ds
retf
dec
ret
sbb
cmp
adc
cmp
dec
nop
outs
add
jmp
push
xchg
cld
inc
add
jns
fdivr
cwde
inc
add
or
inc
adc
add
mov
gs
cmp
pusha
inc
push
mov
mov
clc
mov
sahf
sbb
sbb
mov
lods
and
clts
sub
push
pop
clc
xchg
loopne
popf
cmp
mov
arpl
pop
xchg
adc
nop
(bad)
mov
push
jecxz
mov
and
jg
and
mov
push
cmp
push
mov
pop
or
inc
and
rol
mov
sbb
and
mov
sub
mov
mov
test
xchg
sbb
mov
pop
rol
aas
ins
inc
xchg
stos
push
call
mov
add
add
xor
xchg
mov
cmps
add
dec
and
or
mov
loopne
pop
pop
xor
or
je
push
and
push
ret
jecxz
add
enter
pusha
xchg
and
data16
adc
imul
fsub
dec
popf
(bad)
adc
loopne
ss
dec
cli
xor
push
add
add
sahf
xchg
push
je
ret
mov
and
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
popa
jno
je
aad
or
sub
or
hlt
inc
mov
xchg
inc
or
enter
jg
inc
sub
iret
add
lods
pop
jecxz
xchg
and
jbe
xor
add
ins
(bad)
xchg
sub
adc
mov
and
cmp
inc
lods
test
or
mov
mov
adc
cdq
or
mov
mov
add
adc
(bad)
mov
inc
push
inc
lahf
mov
cdq
pusha
add
sub
sub
outs
add
pop
dec
xchg
aam
add
pop
aad
nop
in
bound
push
adc
jmp
or
loop
add
outs
inc
ins
retf
xor
and
dec
aas
nop
fsub
pop
lahf
jg
inc
mov
cdq
jno
xchg
add
mov
lods
add
add
xchg
(bad)
and
mov
daa
add
call
fnstcw
fld
or
or
js
pusha
xchg
inc
or
icebp
push
lock
shl
lea
pop
ins
ss
xchg
sbb
inc
add
cld
adc
xor
and
and
sbb
fsub
or
mov
and
shl
nop
xor
sub
inc
sub
repz
inc
call
in
push
xor
lods
loope
aas
idiv
ror
jmp
jecxz
add
inc
outs
adc
and
fidivr
dec
mov
and
and
or
add
xor
and
cmp
add
dec
add
mov
inc
add
pop
jge
pusha
lea
sar
add
test
cld
repz
cs
call
jecxz
xor
imul
lea
popa
mov
adc
stc
mov
icebp
(bad)
das
adc
clc
jne
movs
jbe
sub
js
inc
mov
inc
(bad)
js
or
sbb
jmp
push
xor
add
je
or
dec
or
jmp
or
cmps
cmps
sbb
out
add
adc
pop
mov
or
push
and
adc
add
adc
repz
mov
lock
and
dec
ss
xor
scas
call
mov
aaa
(bad)
fdivr
(bad)
xor
add
dec
jbe
cld
xor
aas
inc
fs
out
sbb
dec
add
push
arpl
notrack
add
sub
add
jmp
cli
jecxz
adc
movs
dec
scas
pop
and
movs
cmps
ret
aas
inc
cld
mov
or
int
inc
and
jne
fmul
bound
xor
aas
fild
call
jno
and
test
inc
pop
jne
lods
inc
ja
les
inc
or
out
dec
mov
sahf
sub
inc
push
mov
shl
jo
ret
aas
cmp
pop
js
ret
dec
adc
mov
inc
stos
out
mov
int3
js
pop
inc
mov
push
pop
xchg
xor
js
sub
inc
mov
sub
(bad)
(bad)
cmc
pop
push
pop
pop
leave
daa
cmps
fcomp
push
daa
adc
xor
push
retf
dec
mov
cld
dec
or
hlt
movsx
adc
iret
add
sbb
fwait
xor
sbb
mov
pop
(bad)
cmp
adc
cmp
add
jo
sub
mov
inc
sub
inc
push
jl
inc
adc
loopne
fldenv
inc
sbb
lea
or
sbb
xor
les
mov
add
add
dec
add
enter
jmp
sub
imul
(bad)
adc
clc
pop
push
xchg
sbb
sub
pop
ret
xor
ins
sbb
dec
rol
test
and
or
sub
loopne
inc
mov
push
sbb
int3
out
mov
jno
inc
ret
and
out
lock
dec
mov
pop
jmp
sbb
mov
adc
(bad)
pusha
sbb
jo
es
add
cmp
int3
(bad)
inc
xchg
leave
pop
sbb
pop
inc
mov
add
pop
sbb
add
dec
inc
cmp
and
adc
inc
cs
push
dec
xchg
enter
and
inc
add
lock
je
rcr
adc
pop
sub
aas
jbe
adc
adc
je
sbb
and
dec
arpl
sub
aaa
ins
mov
add
or
pop
inc
xor
gs
data16
push
test
aad
pop
sar
in
in
dec
nop
aam
adc
nop
add
mov
xor
adc
ror
xchg
test
into
mov
(bad)
jnp
add
icebp
enter
adc
sub
nop
and
jbe
sbb
mov
push
arpl
sbb
pusha
inc
cmp
dec
dec
xor
push
add
mov
and
push
mov
mov
jbe
scas
push
lock
mov
mov
or
adc
inc
add
mov
xchg
sbb
pop
xchg
lock
loope
dec
xor
mov
adc
push
adc
sbb
mov
and
pusha
or
lea
add
add
mov
add
pop
inc
imul
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
(bad)
(bad)
loopne
das
xchg
les
dec
mov
sbb
mov
inc
push
add
mov
imul
mov
pop
push
adc
xchg
repz
shl
inc
or
adc
xor
and
or
call
sbb
adc
test
add
add
int3
pusha
xchg
test
cmp
sbb
sbb
mov
aas
bound
ins
jbe
cmps
inc
rcl
fs
stc
cmps
and
xchg
inc
cld
or
jno
pop
or
xchg
jbe
ret
lea
sbb
xchg
rcl
test
cmp
push
bound
fdiv
js
mov
movs
stc
sub
dec
mov
mov
sbb
sbb
dec
jo
test
or
in
sub
je
(bad)
retf
mov
adc
mov
lods
or
inc
adc
xor
pop
std
lahf
xor
int3
nop
dec
clc
mov
call
std
push
lock
add
ss
lods
and
xchg
and
mov
(bad)
outs
pop
pop
xor
or
mov
into
test
push
cmp
adc
inc
loopne
add
js
or
inc
or
or
xor
push
add
repz
adc
or
aas
enter
xor
sbb
inc
add
add
(bad)
adc
rol
add
cwde
xor
aas
dec
cld
ret
nop
inc
ins
cwde
icebp
ud2
inc
push
xor
adc
cld
xchg
or
repnz
sbb
adc
lock
adc
adc
mov
bnd
aas
imul
dec
xor
xor
fnsave
add
or
xchg
(bad)
cld
mov
lock
mov
test
and
mov
cld
ret
dec
or
fsub
aas
cs
sub
sub
call
rcr
cmp
add
int
xor
mov
add
add
add
or
xchg
or
inc
adc
or
fild
or
mov
loop
inc
inc
scas
add
arpl
stos
dec
xchg
or
jecxz
mov
xor
ror
cs
out
int
sti
dec
add
push
cmps
ficomp
std
jecxz
inc
iret
or
lock
push
xchg
stos
inc
movs
mov
cmp
bound
inc
pop
mov
pop
push
cli
push
or
add
add
jge
push
sub
leave
or
cmp
inc
stos
or
adc
(bad)
and
mov
adc
cmps
inc
xlat
sub
jb
add
inc
and
aas
pusha
push
mov
and
mov
xor
imul
arpl
loope
repz
xchg
jmp
pusha
add
dec
adc
outs
or
mov
sub
inc
(bad)
je
icebp
aas
sbb
in
ret
movs
push
push
xor
jbe
add
cmp
aam
inc
cmp
(bad)
bound
pop
add
popa
or
adc
or
loopne
push
xor
cmp
sub
mov
fwait
jo
jns
sub
cmp
clc
rol
xor
(bad)
sti
fmulp
or
xor
loope
into
and
shl
(bad)
cs
(bad)
or
fdiv
enter
xor
and
add
push
add
inc
add
sub
fstp
in
mov
or
(bad)
and
push
add
add
mov
sti
cld
bound
in
test
push
and
dec
(bad)
inc
sub
add
pop
loopne
and
clc
nop
mov
inc
(bad)
in
xor
cvtdq2ps
rcl
and
lea
inc
dec
outs
aad
(bad)
aas
fisub
or
popa
(bad)
add
add
mov
cmp
adc
add
clc
or
cld
and
add
lock
test
jbe
adc
daa
and
mov
mov
sub
push
mov
xchg
mov
cmps
and
sbb
jg
lea
mov
adc
inc
and
das
repnz
sbb
xchg
inc
inc
add
sbb
into
or
and
xchg
cmps
and
xor
jp
dec
and
xchg
cmp
mov
or
sbb
bound
test
adc
xor
jae
adc
mov
xor
push
(bad)
(bad)
fadd
sete
and
call
cmp
xor
xchg
out
mov
movs
loopne
aad
push
push
(bad)
mov
jbe
inc
add
and
push
mov
es
and
mov
xor
sbb
xor
inc
cmps
adc
add
add
dec
mov
add
and
adc
or
push
mov
push
and
(bad)
pop
mov
adc
rcr
xor
psubsb
inc
jno
and
inc
and
inc
fwait
call
adc
test
and
(bad)
xor
dec
hlt
add
xor
mov
fadd
adc
call
pop
adc
(bad)
aad
adc
inc
adc
adc
adc
push
mov
pop
mov
or
and
sbb
inc
test
or
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
push
pop
adc
inc
xor
pop
xor
test
fbstp
jl
(bad)
cmp
mov
mov
rol
jmp
fcom
inc
dec
inc
jg
arpl
xchg
xchg
add
add
inc
xor
dec
xchg
add
adc
dec
dec
cmps
je
mov
xor
loop
xlat
adc
dec
push
cwde
or
inc
mov
sub
(bad)
cwde
cmp
inc
call
loope
jmp
dec
outs
rol
sub
out
(bad)
stos
push
scas
mov
gs
(bad)
popa
dec
cmp
add
add
adc
sbb
int
movs
add
xchg
test
les
loope
xchg
cmp
add
or
pcmpgtb
daa
inc
(bad)
dec
pusha
in
(bad)
inc
call
enter
mov
ss
xor
dec
fnstenv
pop
or
xchg
das
sub
pop
sub
pop
pusha
test
fsub
dec
mov
test
jnp
push
push
mov
push
jo
and
das
enter
repz
dec
xor
inc
add
or
pop
inc
push
pop
mov
aas
fsub
dec
dec
mov
es
mov
stos
mov
dec
sub
dec
jno
in
xor
or
inc
or
daa
ror
or
push
xlat
push
xor
fiadd
jae
pop
into
pop
repz
aaa
inc
ins
pusha
push
es
or
or
pop
icebp
prefetch
movs
xchg
int3
add
mov
add
mov
jecxz
or
add
cld
xor
aas
aam
push
adc
inc
data16
mov
jecxz
aas
push
movs
cdq
dec
inc
fmul
int
dec
sbb
cmp
nop
push
add
icebp
sar
fdiv
push
push
shl
inc
nop
add
and
sub
or
pop
test
rcr
pop
sub
in
movs
(bad)
adc
dec
mov
fidivr
add
and
pop
inc
mov
adc
push
inc
and
sub
cdq
adc
dec
push
nop
sub
jl
int
jl
sub
mov
scas
call
inc
fstp
aam
add
jmp
xchg
aas
retf
sbb
lods
inc
hlt
pushw
push
add
ins
arpl
add
adc
pop
pop
dec
mov
xor
or
jae
hlt
mov
clc
inc
inc
pop
inc
xchg
lock
or
rol
shr
push
out
add
and
dec
ins
mov
push
jge
nop
push
sbb
dec
push
mov
and
pusha
inc
mov
cmp
shl
and
movs
add
cmp
xchg
dec
adc
inc
inc
or
inc
adc
push
or
add
xlat
(bad)
iret
inc
fistp
nop
stos
dec
call
push
cs
lock
xchg
popa
ret
int3
jae
push
adc
pop
add
adc
ret
xor
jae
mov
lods
inc
xor
xchg
or
in
rcr
inc
cdq
inc
pop
test
pop
or
js
mov
retf
dec
xor
lock
xor
xor
and
pop
xor
adc
cmp
push
adc
push
rol
adc
sbb
and
into
or
jae
aaa
mov
lds
add
dec
dec
mov
loopne
and
or
push
push
xor
mov
inc
mov
jo
mov
test
ret
and
jae
inc
adc
mov
dec
sub
mul
sub
cwde
(bad)
sbb
ins
pop
add
jb
mov
mov
mov
aas
ret
idiv
and
inc
inc
cld
add
add
nop
add
adc
xor
sub
loope
jmp
sar
add
adc
loope
xchg
sbb
es
mov
mov
sub
rol
and
mov
mov
inc
mov
movs
dec
dec
ror
and
add
xor
sbb
pusha
fcom
pop
clc
(bad)
and
pusha
lds
nop
lock
pop
push
cmp
pop
mov
ret
push
pusha
dec
cmp
xchg
int3
and
inc
or
cmp
ret
adc
pop
aaa
test
and
clc
xchg
adc
add
loope
dec
dec
leave
sbb
hlt
xchg
pusha
fs
and
iret
and
push
jecxz
inc
adc
dec
mov
imul
sbb
mov
into
jg
icebp
pop
cs
or
std
and
fs
cmp
fnstenv
sbb
or
mov
dec
imul
xchg
sub
sub
and
mov
jmp
or
add
push
shl
icebp
or
or
or
sub
xor
jo
add
pop
test
pop
add
(bad)
push
and
pop
sbb
push
sbb
inc
or
push
add
cld
popa
push
xor
add
or
push
adc
adc
ret
push
or
add
test
nop
dec
add
inc
sbb
lea
mov
add
add
xor
xchg
mov
mov
xchg
adc
stos
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
(bad)
ror
add
inc
mov
lds
and
cld
pop
daa
mov
or
xor
push
loopne
push
mov
adc
jno
inc
or
pusha
xchg
cmps
add
(bad)
adc
or
jb
ror
shl
fidiv
pusha
hlt
test
sub
inc
pop
mov
sub
scas
adc
and
pop
sub
sub
sbb
inc
and
nop
xor
or
mov
aas
inc
add
fdivr
mov
fbstp
and
clc
aaa
ins
or
add
add
loopne
jg
xchg
adc
sub
pushf
add
(bad)
(bad)
mov
push
or
or
sub
mov
bound
sbb
aaa
sbb
aas
push
adc
adc
retf
mov
adc
shl
mov
(bad)
jns
sti
mov
cmps
sbb
ret
(bad)
sbb
(bad)
dec
dec
(bad)
mov
mov
mov
inc
and
mov
push
xor
push
push
or
mov
enter
or
lods
and
cmp
or
or
adc
jmp
or
add
adc
fnsave
sbb
cld
xor
lea
leave
dec
rol
stos
add
push
add
test
inc
inc
or
stc
icebp
iret
or
cmp
js
pop
jge
nop
mov
xor
add
into
aas
add
inc
inc
aas
cld
xor
inc
xchg
std
push
jecxz
sbb
mov
jo
dec
adc
or
dec
or
add
mov
inc
xor
call
push
popf
inc
(bad)
pop
and
adc
lds
repz
(bad)
repnz
fwait
adc
mov
arpl
lea
retf
xor
cld
call
add
or
ret
inc
mov
inc
lea
fs
push
or
cmp
dec
rol
pop
pusha
inc
call
jbe
xor
pop
loope
cmps
jmp
test
push
les
stos
jo
fs
push
outs
lea
les
mov
mov
inc
sbb
xor
or
mov
pop
data16
hlt
pop
fs
sub
shr
add
and
mov
xor
mov
cwde
add
mov
adc
rol
jno
dec
or
jl
rdpmc
push
unpcklps
xchg
push
aam
inc
ret
adc
js
dec
push
jge
fistp
test
jbe
push
shl
adc
adc
in
inc
pop
mov
std
xchg
xor
dec
ss
inc
loope
and
add
cmc
jo
add
aad
cmp
cmp
cmp
popa
int
xlat
call
in
in
push
repnz
push
dec
mov
bound
mov
arpl
adc
jns
in
add
push
ins
or
arpl
cmp
or
(bad)
aad
popa
rol
xor
and
hlt
aas
js
and
inc
pop
mov
pop
adc
and
adc
push
xor
mov
xchg
add
and
fsubr
nop
inc
sbb
shl
jae
inc
bound
lock
or
cmp
arpl
mov
sbb
xchg
xchg
inc
add
mov
in
aam
pop
xor
lods
ret
(bad)
lods
push
test
add
and
xchg
push
push
les
cs
add
jge
sbb
sub
inc
push
xor
mov
or
push
dec
push
ucomiss
leave
add
lods
and
in
inc
mov
nop
jmp
jno
xor
dec
and
xor
(bad)
inc
(bad)
cmp
aas
and
and
dec
dec
pop
sbb
xor
or
jl
adc
loopne
and
mov
mov
inc
stos
xchg
add
cld
into
and
or
js
sbb
xor
add
inc
mov
and
or
push
loopne
(bad)
outs
js
sbb
sub
stos
jmp
add
pop
mov
sbb
jecxz
add
dec
xor
push
fadd
cmps
pop
inc
add
inc
adc
xor
pop
cmp
xchg
add
push
or
rol
rol
sbb
push
and
adc
jg
mov
inc
(bad)
xor
xor
add
xor
or
mov
mov
call
sbb
jl
xchg
or
cdq
int
push
adc
adc
xor
loopne
mov
inc
sub
push
je
xchg
dec
pusha
add
jb
ins
or
mov
pop
inc
cmp
sub
or
inc
and
or
ins
adc
jns
sbb
rol
mov
sbb
rol
adc
sub
(bad)
lock
push
adc
inc
push
xchg
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sub
mov
mov
push
ror
adc
push
push
inc
(bad)
rol
leave
aas
sbb
adc
rol
push
clc
cmps
and
call
gs
cs
cld
ret
push
movs
mov
cs
ror
mov
xchg
mov
retf
push
(bad)
in
xchg
loopne
xlat
add
push
aas
inc
dec
and
add
cli
pop
push
mov
or
sbb
test
and
aad
sbb
dec
lahf
or
inc
cwde
nop
lods
fnstcw
gs
cdq
stc
test
dec
jo
pushf
add
rcr
(bad)
int3
test
jp
(bad)
push
mov
enter
sub
outs
pushf
hlt
shr
adc
inc
and
and
gs
pop
push
bound
jns
addr16
sbb
cmp
and
add
pop
mov
clc
pop
out
fwait
sbb
inc
rcr
xor
cmp
mov
adc
mov
arpl
adc
nop
cmp
icebp
invd
pop
sbb
xor
cmp
add
inc
mov
add
pop
jl
rol
add
js
adc
ss
dec
nop
add
xlat
xor
cld
mov
rol
add
inc
push
in
xor
add
inc
bound
das
test
loop
mov
add
inc
fdivr
mov
inc
mov
test
addr16
push
jecxz
or
add
rcl
xor
repz
xchg
jno
and
repz
sub
es
int
out
fcom
xchg
mov
aas
(bad)
cld
push
int
unpcklps
sbb
jmp
scas
jbe
fmul
inc
enter
aam
adc
retf
das
or
mov
shr
add
sbb
clc
femms
and
add
sbb
push
outs
in
push
nop
xor
adc
sbb
add
mov
pushf
add
mov
hlt
xchg
inc
xchg
push
cmp
out
(bad)
stos
and
pop
and
xor
add
or
pop
dec
test
nop
push
test
fadd
xor
inc
packuswb
movs
int3
adc
add
call
rol
ins
and
push
nop
and
std
xor
inc
xor
mov
aas
gs
jo
or
or
and
add
or
or
cs
jmp
rcr
ja
pop
iret
mov
adc
sbb
sbb
(bad)
into
xor
push
mov
dec
div
test
adc
pop
inc
sbb
test
jmp
xor
add
or
add
add
or
mov
add
jp
xor
push
ds
nop
(bad)
push
xchg
mov
mov
mov
mov
xor
xchg
push
adc
cmp
and
fcmovu
inc
xchg
xchg
inc
push
sbb
add
leave
push
and
lods
xor
or
outs
iret
cwde
sbb
test
(bad)
cmp
rol
sub
cli
add
xor
aam
out
mov
adc
add
ret
or
aas
jl
sub
or
ficomp
and
aas
or
fiadd
rol
dec
inc
add
or
jl
lods
pop
or
jo
push
test
and
inc
rcl
mov
clc
xchg
sbb
clc
inc
add
cwde
arpl
mov
sbb
mov
ins
and
ror
mov
pop
(bad)
enter
aad
imul
and
or
xchg
xchg
adc
je
add
lock
lods
inc
scas
in
or
mov
cdq
sbb
xchg
lods
imul
and
add
std
sub
or
fidiv
adc
push
call
inc
inc
js
adc
pop
movs
mov
xchg
push
adc
xor
arpl
add
nop
add
sahf
dec
xchg
inc
pop
jl
jg
inc
mov
sub
add
or
retf
fs
and
mov
retf
push
mov
add
aaa
ficom
inc
pop
xor
add
inc
paddsb
or
je
or
push
cs
cdq
sub
ret
xor
dec
call
mov
movs
or
inc
sar
mov
sub
add
adc
or
test
test
mov
stc
add
or
inc
sub
add
add
add
add
or
add
or
ins
loopne
or
inc
mov
xor
icebp
dec
sbb
cmp
call
pusha
and
mov
or
add
stc
add
or
inc
sub
add
add
add
add
or
sbb
cwde
or
out
sbb
loopne
es
and
cmps
jg
add
xor
leave
rol
add
add
add
rol
rol
or
lgdtd
inc
add
add
popa
xor
sbb
sub
add
inc
add
ins
je
add
inc
add
inc
dec
inc
cmp
popa
cmp
xor
idiv
add
cmc
mov
mov
mov
(bad)
jmp
mov
std
sti
out
fsubr
add
add
repnz
add
aad
scas
pop
mov
push
(bad)
out
add
(bad)
(bad)
jmp
inc
(bad)
(bad)
sti
(bad)
(bad)
xor
cli
add
inc
shl
(bad)
push
dec
add
dec
jmp
add
cmps
add
stc
movs
xchg
mov
std
leave
add
sbb
push
ja
arpl
xchg
imul
fld
jmp
add
lds
call
add
or
fld
call
add
fldcw
call
(bad)
out
clc
std
rol
enter
sub
jmp
stos
jne
lds
or
iret
mov
dec
add
mov
push
push
(bad)
std
mov
stos
add
fcomp
(bad)
call
mov
arpl
add
xlat
cmp
mov
ret
out
add
mov
(bad)
out
ss
out
pop
(bad)
test
xchg
mov
clc
cld
out
add
leave
adc
mov
dec
push
fst
sub
adc
add
cld
repz
out
(bad)
inc
(bad)
push
pop
push
push
scas
add
push
or
mov
xchg
dec
add
in
push
fnsave
in
adc
rcr
ds
mov
mov
das
in
ret
mov
mov
mov
push
inc
movs
jp
jmp
or
(bad)
push
dec
or
in
out
cmp
(bad)
loopne
pop
push
sub
sti
add
add
jo
icebp
std
(bad)
(bad)
rcl
retf
test
sub
daa
(bad)
in
lods
scas
dec
ror
js
and
(bad)
in
std
ret
test
test
xchg
xchg
dec
(bad)
mov
(bad)
fld
out
adc
ret
or
jmp
adc
mov
call
push
jle
mov
retf
add
xlat
add
jecxz
std
mov
ret
add
mov
xchg
pop
or
fsub
retf
(bad)
jmp
jmp
add
div
xchg
movs
mov
loop
sti
mov
out
cmp
mov
sti
mov
test
daa
push
and
ret
int3
push
lock
cmc
lock
adc
icebp
in
cmc
jecxz
lock
or
mov
sti
fild
(bad)
mov
jecxz
sub
mov
div
push
mov
cli
into
pop
repnz
adc
ret
mov
jmp
cmc
sbb
fst
cli
retf
ret
out
and
mov
rep
pop
cli
cmc
out
aas
cmp
imul
or
xlat
xor
jmp
(bad)
jmp
add
jmp
imul
pop
cld
in
add
scas
add
sar
dec
loopne
ja
loopne
jecxz
cwde
repz
mov
sbb
jmp
stc
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
nop
loope
adc
js
inc
xor
xchg
arpl
push
cmp
inc
mov
leave
add
stos
push
sub
pusha
les
daa
mov
hlt
inc
inc
shl
test
adc
inc
sub
xor
dec
mov
in
cli
dec
jecxz
or
sub
add
xchg
add
adc
push
test
xchg
xor
inc
adc
jae
ror
adc
pusha
xor
jo
dec
pop
or
pop
loope
push
mov
daa
test
push
sub
inc
loope
mov
sbb
add
xchg
or
xchg
sub
test
imul
sbb
int3
mov
adc
mov
or
test
clc
mov
sub
adc
add
rol
dec
das
in
bound
rol
and
rol
xor
fdivr
es
mov
dec
cmp
xchg
nop
add
js
adc
and
test
pop
cld
mov
push
push
je
cmp
rol
mov
lock
imul
dec
sbb
call
push
pusha
pusha
inc
adc
mov
xor
loopne
add
xlat
fwait
aaa
sub
(bad)
pushf
adc
sbb
dec
lock
pop
jo
js
sbb
jo
cdq
dec
push
sbb
movs
jb
aam
pop
adc
add
ds
ror
add
sbb
push
sbb
jecxz
shl
or
pop
adc
adc
rcl
inc
adc
dec
adc
mov
int3
xor
pop
mov
and
adc
(bad)
cmps
xor
sbb
and
and
sub
mov
pop
cld
or
mov
mov
fs
mov
xor
inc
sbb
in
add
rol
pop
push
or
into
mov
add
push
xor
mov
mov
pushf
rol
mov
(bad)
clc
mov
and
mov
mov
xor
inc
jmp
sub
add
xchg
push
jp
or
out
pop
lock
adc
daa
adc
mov
xchg
inc
push
daa
add
inc
pop
mov
mov
fdiv
jle
jle
push
sahf
leave
icebp
stos
cmp
add
xor
in
mov
jmp
sar
sbb
xchg
inc
and
pop
inc
mov
(bad)
test
or
dec
inc
add
rcr
call
sub
and
inc
adc
xor
mov
add
fwait
test
(bad)
push
xchg
push
mov
dec
xchg
inc
movups
pop
add
out
mov
mov
ss
mov
pushf
and
cli
ror
xchg
cmp
ret
das
lods
mov
cdq
outs
fidivr
cmp
jmp
mov
repnz
arpl
dec
mov
pusha
in
pop
in
arpl
inc
call
fistp
cmp
rcl
mov
add
xchg
icebp
fcom
ds
inc
es
xchg
or
add
push
xor
add
push
adc
add
inc
mov
and
add
mov
sub
int
ret
sub
movs
jmp
inc
push
and
adc
test
cmp
add
adc
jmp
imul
mov
loop
add
mov
les
mov
push
push
rcl
mov
cs
dec
dec
adc
mov
and
push
pop
lea
pop
nop
or
js
lea
xchg
leave
push
mov
and
icebp
dec
mov
or
lock
push
mov
repnz
cmps
je
sub
mov
mov
jmp
and
adc
xor
lods
xor
and
repnz
lock
icebp
inc
(bad)
xor
and
adc
shl
sbb
push
jp
sub
sbb
pop
clc
inc
jl
retf
adc
das
enter
shl
and
test
leave
pop
sbb
jns
dec
je
xor
xchg
and
add
inc
test
ret
xor
adc
push
push
(bad)
and
xchg
test
rol
inc
or
or
or
pop
add
call
lods
pusha
sub
xchg
or
cs
add
nop
adc
inc
ficomp
rcr
add
inc
sub
xchg
mov
add
xchg
ret
mov
adc
xchg
or
xchg
fld
enter
xor
add
mov
lods
addr16
push
add
jae
xchg
stos
dec
clc
ret
mov
and
sub
add
sahf
adc
popa
xor
add
cli
mov
mov
enter
xchg
cmp
prefetchwt1
lods
cmp
push
je
jno
addr16
inc
jge
pop
nop
or
and
enter
push
pop
retf
shl
adc
nop
and
and
sbb
inc
adc
sub
mov
rcl
cmps
xor
mov
fwait
imul
or
ret
rcr
add
pop
cmp
inc
add
add
and
pop
or
add
jae
inc
pop
stos
dec
pop
mov
stc
add
or
inc
sub
add
add
sub
add
or
mov
rol
jo
test
mov
jbe
mov
icebp
mov
jo
stc
in
fwait
mov
mov
punpckldq
stos
jno
inc
xchg
mov
and
aad
enter
xor
add
call
pop
push
std
xor
ja
loopne
xor
pusha
add
cmp
hlt
das
xchg
cmp
push
sbb
inc
inc
loopne
xor
xchg
stos
mov
inc
nop
ret
cs
lock
inc
ror
pop
and
mov
sbb
sbb
xor
scas
dec
mov
pop
stos
push
dec
addr16
leave
jae
cmps
push
mov
or
shl
stc
mov
xor
loopne
cmp
mov
lock
aas
push
inc
or
int3
or
or
hlt
movzx
sbb
jge
sub
inc
or
xchg
(bad)
mov
jle
push
add
push
cmp
jo
shl
add
adc
push
dec
mov
xor
cs
add
or
mov
add
xchg
or
xchg
jb
inc
xchg
inc
cmp
adc
shl
cmp
add
push
inc
adc
mov
or
call
mov
mov
bound
cmps
es
and
jns
sbb
cld
ret
inc
adc
adc
pop
xchg
paddw
cmp
pop
jmp
xor
inc
cmps
dec
sbb
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
sbb
xchg
test
cmp
loope
test
push
or
and
sub
mov
ret
inc
jg
add
lea
(bad)
pop
aad
adc
sbb
mov
jne
sbb
imul
xchg
stc
push
adc
das
add
lock
test
test
test
cmp
sub
xchg
repz
fdivr
shr
repz
add
pop
call
sbb
add
icebp
ret
outs
lar
or
add
aas
les
push
(bad)
xor
pop
push
mov
or
add
or
mov
lea
sub
mov
(bad)
cmp
add
cmps
add
or
xor
inc
mov
adc
shl
xchg
push
mov
pop
scas
rol
fmul
pop
dec
inc
test
cdq
add
xor
sub
in
adc
mov
add
xor
sbb
sub
inc
add
(bad)
repnz
pop
ja
add
and
jl
sub
pop
inc
movs
adc
dec
sbb
adc
sub
add
dec
inc
sub
pop
push
or
lea
and
add
or
inc
sub
add
sbb
and
add
inc
dec
sbb
jo
stos
jg
or
pop
enter
xchg
and
push
daa
mov
inc
push
dec
or
mov
dec
xchg
adc
inc
push
mov
mov
repnz
inc
add
cmp
xor
jg
push
pop
mov
inc
xlat
sbb
dec
shl
dec
call
ja
pop
js
pop
and
pop
or
daa
sbb
mov
lahf
sub
es
les
push
xor
xchg
imul
mov
test
pusha
add
mov
and
rol
mov
pop
inc
xor
call
inc
test
add
jecxz
fistp
mov
add
inc
adc
xchg
add
aam
enter
xor
data16
mov
push
imul
add
cld
jmp
inc
push
add
(bad)
xchg
or
sbb
mov
and
push
scas
and
jo
data16
jo
sbb
add
xor
mov
jmp
iret
sar
sub
es
mov
pusha
inc
pop
not
test
inc
or
jne
and
fistp
or
(bad)
sbb
mov
mov
mov
mov
mov
data16
lock
(bad)
out
es
xchg
les
sub
push
push
add
addr16
js
cwde
mov
inc
rol
cmc
in
xor
pop
inc
mov
add
mov
add
inc
adc
add
pop
jg
or
xchg
popa
and
inc
pop
das
xor
add
jo
jo
or
add
movs
into
sub
jo
(bad)
lahf
or
sar
cmp
loope
jns
adc
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
aas
sbb
lock
sub
test
add
xchg
pop
cld
mov
in
adc
cmp
adc
sub
(bad)
dec
adc
add
adc
nop
add
sahf
push
jp
ror
mov
dec
jne
rcl
loope
sahf
lds
sbb
das
pusha
(bad)
fmul
mov
adc
arpl
and
push
adc
arpl
dec
inc
mov
push
ja
ret
test
mov
dec
fs
mov
test
(bad)
and
xchg
add
mov
mov
push
mov
fdiv
test
test
in
xor
gs
mov
pusha
mov
xor
shl
in
icebp
adc
sbb
push
fdivrp
mov
retf
push
dec
pushf
sahf
test
xor
(bad)
(bad)
sti
jo
pop
out
outs
inc
cmp
data16
lods
ret
sahf
mov
cdq
cmp
and
xchg
repnz
pop
sbb
(bad)
sbb
add
mov
std
addr16
pop
sbb
popa
inc
pop
pushw
adc
xor
loop
pop
sar
ja
or
mov
cmp
push
(bad)
shl
rol
cs
add
dec
sbb
push
in
push
add
cwde
inc
inc
sub
aaa
das
inc
push
inc
out
or
dec
add
data16
add
xchg
push
jno
rcl
inc
adc
xor
cdq
cmc
push
loop
sub
fs
inc
es
or
or
shl
ss
jg
sbb
mov
daa
inc
adc
mov
and
test
sub
inc
dec
popf
es
push
sub
pop
jo
and
xchg
mov
sub
loope
or
in
inc
push
js
or
sub
adc
xor
lods
add
xor
adc
inc
sahf
or
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
nop
and
imul
popa
pop
mov
cmp
add
je
clc
xchg
aam
or
add
scas
mov
clc
(bad)
or
or
add
stos
mov
mov
mov
dec
push
stos
loop
xchg
push
out
iret
xchg
mov
or
push
add
jne
mov
add
push
cmp
xor
add
mov
mov
mov
xchg
mov
jl
test
lock
rol
xor
enter
lods
sbb
pop
mov
adc
nop
inc
cmp
push
or
jo
add
jp
sbb
add
rcr
push
popa
call
ficom
and
sub
pop
mov
add
sub
push
and
test
jecxz
xchg
outs
(bad)
cmp
mov
push
adc
cmp
or
sahf
sub
sbb
sub
or
pop
movs
(bad)
ins
cmps
add
in
pusha
cwde
push
add
hlt
aad
push
add
data16
pop
(bad)
adc
or
sbb
dec
clc
sbb
cmp
setp
add
and
dec
add
loope
inc
jae
in
ror
add
push
push
mov
cld
add
adc
add
or
rol
fwait
or
or
cwde
adc
or
xor
mov
mov
add
popf
clc
add
call
hlt
cmp
push
xchg
call
push
and
adc
mov
adc
push
cli
jae
or
mov
in
mov
dec
sbb
inc
ret
cwde
add
out
mov
mov
mov
mov
mov
std
inc
push
pusha
xor
adc
adc
dec
call
mov
retf
cs
and
(bad)
adc
retf
mov
add
dec
adc
xor
mov
(bad)
cmp
imul
jmp
aas
add
add
stc
add
or
inc
sub
add
and
or
add
or
mov
rol
nop
popa
xchg
pop
or
inc
mov
sub
inc
xchg
mov
fdiv
inc
cli
push
inc
repnz
retf
pop
pop
inc
or
dec
(bad)
rcl
xor
lods
push
les
js
pop
into
add
pop
or
ss
cld
ins
mov
cmp
and
dec
aad
add
stc
pop
and
push
or
add
(bad)
mov
loop
or
cmps
loopne
xchg
popa
inc
pop
leave
or
xor
sbb
and
pop
push
lock
add
sbb
jp
and
adc
mov
cmc
and
clc
out
add
jbe
dec
jl
mov
mov
aam
inc
sbb
and
dec
retf
push
and
(bad)
dec
adc
add
mov
pop
mov
inc
retf
popf
adc
xchg
pop
or
xchg
adc
jo
inc
cld
mov
paddd
jp
ins
mov
push
add
add
cwde
icebp
ror
mov
add
test
dec
mov
add
test
push
dec
sub
jno
call
lock
add
xor
and
xor
pop
call
mov
rol
or
les
mov
pusha
ret
push
push
dec
sbb
inc
pop
or
adc
daa
call
push
lds
es
pusha
adc
nop
inc
push
inc
add
add
cmp
fdiv
cmp
sbb
mov
and
sub
(bad)
mov
data16
inc
and
or
mov
add
push
add
inc
xchg
mov
iret
or
lds
mov
xchg
lods
cwde
pusha
ret
movs
fst
mov
lahf
fisubr
and
mov
test
dec
test
adc
(bad)
call
inc
xchg
pusha
pushf
and
xchg
inc
sub
test
ins
adc
aaa
arpl
inc
int3
xor
or
pop
and
and
mov
lds
sub
mov
adc
add
cmp
fs
push
or
lock
add
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
dec
sbb
add
lds
or
push
sbb
xchg
mov
lea
or
jp
and
dec
test
jg
add
and
adc
adc
push
pushf
lea
push
int3
mov
xor
mov
inc
ja
(bad)
add
(bad)
lods
dec
add
test
lea
or
and
or
call
mov
out
sub
aas
and
inc
pop
inc
or
xchg
rcl
ret
push
lods
dec
xor
shr
enter
call
push
js
or
xor
ins
add
adc
shl
rol
adc
or
sub
rcl
mov
dec
enter
loopne
in
aas
adc
add
push
sub
xchg
ret
pop
imul
pop
inc
xchg
add
aad
rol
aaa
or
adc
in
inc
fidiv
(bad)
pop
sbb
cdq
adc
xchg
add
pop
bound
fild
data16
push
mov
arpl
adc
and
shl
mov
bound
pop
inc
or
dec
test
adc
mov
or
add
jle
add
ror
jo
rcl
mov
ds
loopne
sub
icebp
rol
mov
push
adc
xor
mov
fs
aas
or
add
pop
sbb
push
gs
popa
or
xchg
xor
adc
in
adc
hlt
mov
aaa
or
xchg
in
push
retf
enter
xchg
cli
shl
inc
aas
pushf
mov
call
mov
push
pop
stos
stos
cmp
adc
push
in
add
js
movs
push
bound
out
or
jno
jb
stc
test
pop
movs
mov
sub
nop
cmp
mov
ror
test
dec
adc
xchg
loop
cmp
sub
mov
mov
ror
ds
arpl
dec
and
add
or
icebp
iret
sbb
shl
std
dec
jl
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
xor
sbb
pop
or
adc
mov
cmp
xchg
or
clc
out
add
or
and
pop
push
cwde
jo
add
retf
add
push
jecxz
scas
xchg
push
push
retf
adc
cmp
mov
in
adc
cld
mov
pop
pushf
lahf
es
jmp
outs
cmp
add
out
push
ror
(bad)
jmp
repnz
sbb
mov
mov
mov
test
fidivr
(bad)
int3
or
dec
xor
mov
push
fidivr
ret
cwde
or
jb
ins
jno
inc
dec
sub
cmp
add
(bad)
in
mov
ins
scas
push
mov
call
fsub
mov
out
add
cwde
sbb
loop
xchg
(bad)
cmp
mov
mov
push
dec
push
dec
lock
in
cmps
add
mov
mov
cmp
mov
and
inc
imul
add
jns
xchg
adc
or
das
mov
sbb
and
daa
nop
ins
setge
iret
cmp
sub
fcomp
or
xchg
jne
fld
adc
scas
jo
adc
pop
cmp
aas
push
fdiv
(bad)
or
push
or
das
sub
push
test
push
pusha
lock
adc
or
lods
and
pop
xchg
call
cmp
sbb
mov
nop
(bad)
inc
sbb
loope
adc
mov
xchg
push
inc
add
cmp
adc
or
adc
cmps
inc
test
pop
ins
mov
enter
ins
lock
jmp
inc
add
xor
adc
cs
mov
aas
(bad)
pop
xor
add
inc
xor
ins
mov
int3
push
mov
inc
(bad)
clc
xor
sub
lock
mov
adc
mov
cmp
les
cdq
lock
xor
scas
inc
aas
and
add
and
mov
adc
shr
ror
xchg
xchg
push
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
jo
xchg
sbb
dec
inc
xchg
div
xor
or
and
or
or
mov
pop
jbe
push
outs
mov
ret
and
pusha
dec
xchg
add
xor
pushf
add
push
cs
mov
xchg
xchg
xchg
or
mov
pop
mov
imul
xchg
popa
push
xchg
mov
arpl
stos
or
mov
test
ficomp
sti
pusha
fld
fistp
cwde
add
add
test
mov
cmp
(bad)
or
ror
arpl
fwait
xor
ret
push
sbb
mov
mov
add
shl
or
xchg
pop
mov
sbb
adc
sub
add
mov
push
adc
cmp
sub
jmp
arpl
vmovdqa
xor
loop
dec
mov
jns
xchg
adc
mov
jl
cld
outs
xor
adc
pop
call
aam
aas
xor
push
inc
pop
je
lock
call
aam
or
test
call
adc
add
aam
push
add
cmp
mov
int3
int3
cmps
aam
(bad)
(bad)
lock
cmp
xor
dec
movs
js
dec
or
adc
dec
and
rol
xor
add
xor
add
nop
aas
jmp
test
fiadd
pop
jo
and
adc
sub
and
mov
and
dec
lahf
lea
add
test
mov
sub
or
inc
enter
mov
ret
xor
(bad)
and
bound
adc
dec
mov
iret
adc
movs
or
sbb
call
pop
adc
das
mov
call
add
add
adc
adc
iret
push
and
out
mov
dec
xor
adc
clc
lock
cmp
add
cmp
ds
add
push
dec
in
retf
jmp
clc
sub
add
or
inc
sub
add
add
add
add
or
add
or
mov
ror
adc
pop
enter
xchg
adc
mov
xor
lahf
aaa
or
xor
cwde
add
mov
popa
pusha
xor
xor
rcl
retf
xor
clc
inc
es
test
and
push
call
mov
xor
xor
out
sub
ret
push
jo
jmp
inc
add
or
jecxz
mov
or
jo
je
mov
add
jae
cmp
(bad)
push
inc
dec
or
inc
and
jo
aas
clc
pop
ror
sbb
enter
sbb
cmp
push
ins
out
cmps
add
add
push
aas
sbb
lea
cmp
push
stos
aam
push
and
add
cwde
xor
enter
mov
out
xchg
sbb
je
push
sub
xchg
add
jmp
mov
dec
sbb
and
rcr
add
xchg
xchg
lock
jno
xchg
sbb
movs
loop
inc
push
or
push
pop
sbb
and
icebp
pusha
test
add
into
and
push
xchg
add
mov
sub
mov
loop
popf
sbb
sbb
mov
inc
add
pop
push
mov
movs
ja
or
aam
test
add
mov
add
xor
into
push
xchg
clc
call
addr16
and
push
loopne
dec
movs
jns
dec
push
xchg
cdq
pop
pusha
cwde
lock
dec
jmp
cld
adc
das
lods
add
out
shl
mov
or
push
fnsetpm(287
rcl
sub
mov
and
pusha
repnz
data16
inc
xor
js
ret
mov
rcl
add
pusha
push
adc
inc
ret
les
add
or
xor
loopne
sub
mov
lods
call
inc
test
popf
js
in
mov
movs
rcr
xchg
(bad)
pop
rol
mov
xchg
or
js
pop
adc
mov
or
lods
fcmovnb
rol
and
fcomp
dec
or
mov
or
das
mov
sbb
icebp
adc
inc
xchg
inc
jmp
adc
jo
push
push
comiss
sub
xor
cmp
sbb
les
cmp
inc
add
push
adc
std
repnz
mov
adc
and
add
or
inc
sub
add
add
add
add
or
mov
rcr
adc
pop
enter
xchg
and
ins
out
aad
sbb
pop
cs
and
popf
mov
dec
xor
ins
(bad)
push
and
or
out
fld
clc
out
add
dec
nop
mov
cmp
sbb
or
add
cwde
ficomp
push
pop
cmp
add
pop
enter
or
push
xor
arpl
dec
sbb
cmp
lock
jg
data16
inc
ror
push
push
mov
sysexit
clc
int3
sbb
or
ret
and
xor
add
pop
adc
cmp
inc
inc
xchg
mov
fistp
add
pusha
cmps
inc
or
jbe
pusha
sbb
dec
jle
iret
mov
pop
movs
cmp
add
add
cmp
mov
pusha
mov
and
aad
mov
jl
inc
ret
cmp
popf
fs
mov
ins
in
xor
add
fmul
cdq
cs
push
cwde
and
or
push
inc
fs
push
push
pop
add
lahf
push
add
or
mov
add
call
push
gs
push
nop
imul
(bad)
lock
and
test
push
inc
add
arpl
add
je
loopne
mov
mov
sbb
adc
dec
or
jb
pop
xchg
cmp
cwde
pusha
or
lods
in
nop
cmp
outs
movs
dec
cmp
mov
sub
lods
or
ret
push
ror
add
inc
xor
add
pushf
lock
aaa
fwait
jl
or
and
aam
lds
inc
and
out
cs
loopne
add
add
test
lock
shl
rol
add
loopne
and
cwde
and
inc
int3
cld
mov
inc
cs
ror
and
shl
adc
ret
and
jo
add
or
sub
pop
cld
adc
push
push
pop
nop
retf
mov
xchg
push
and
jo
mov
movs
loop
or
cmp
inc
mov
movs
inc
or
imul
fld
add
xor
or
adc
sub
or
add
jmp
ret
popf
js
xor
adc
nop
or
push
sub
dec
ret
js
inc
and
xor
(bad)
cli
jmp
dec
retf
xor
adc
inc
mov
push
test
cmp
mov
cmp
dec
inc
xor
cmc
inc
cld
data16
rol
add
or
inc
sub
add
add
add
add
or
add
or
jo
add
add
sub
scas
lds
adc
xor
adc
call
or
jno
(bad)
xchg
adc
loop
lods
sbb
push
lods
stos
adc
or
cwde
push
inc
mov
sbb
(bad)
out
(bad)
or
rcl
mov
dec
nop
mov
add
adc
add
push
xor
mov
inc
ins
or
mov
xor
(bad)
jecxz
or
out
inc
mov
sbb
les
and
cmp
jmp
out
fadd
cli
mov
out
push
or
xor
inc
outs
add
(bad)
in
sbb
add
push
dec
test
adc
ud0
enter
ror
pusha
dec
xchg
add
es
xor
or
cmp
enter
xchg
outs
pop
pop
adc
pop
jmp
add
dec
cs
or
mov
inc
mov
enter
inc
add
mov
or
jg
xor
xchg
(bad)
clc
add
push
jle
cwde
icebp
dec
test
lock
mov
push
cmp
ins
jno
or
test
sbb
ret
sbb
aas
dec
pushf
inc
xchg
inc
imul
jle
or
jle
jo
or
push
rol
pop
adc
daa
mov
shl
add
xchg
and
push
movs
sbb
int3
aas
popa
cld
ret
ror
mov
pushf
loopne
cmp
push
sbb
loop
and
xor
push
pop
es
shl
push
adc
into
aas
and
xchg
dec
outs
jno
adc
or
inc
push
hlt
add
cmp
retf
or
push
outs
mov
jb
or
push
es
jmp
enter
add
inc
add
jecxz
adc
and
pop
cmps
xor
dec
sbb
add
rcl
or
add
outs
cmc
inc
fadd
nop
lock
inc
test
adc
inc
sub
shl
sub
and
repnz
add
hlt
and
add
movs
lods
adc
les
es
stos
mov
dec
cmp
mov
jp
pop
sub
icebp
sub
mov
jmp
dec
jmp
inc
ret
mov
inc
or
xor
test
adc
or
pop
jno
lds
push
xor
out
int3
push
adc
pop
les
mov
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
inc
jmp
or
xchg
xchg
and
je
lock
or
sbb
sbb
pop
cld
mov
pop
pushf
mov
pop
jbe
sbb
xchg
dec
mov
inc
lods
js
ret
and
xor
dec
or
jae
dec
(bad)
jl
imul
or
and
mov
sub
mov
lea
and
mov
sub
daa
inc
or
add
pop
adc
jo
mov
(bad)
fld
dec
or
adc
dec
clc
mov
bound
push
and
sub
dec
pop
or
xor
push
lods
add
and
sahf
xor
push
in
xor
outs
xchg
fdiv
mov
dec
push
mov
shl
rcr
sbb
push
add
dec
movs
mov
mov
rcr
adc
or
scas
or
call
mov
mov
add
lods
test
or
inc
mov
inc
dec
inc
and
inc
rol
jmp
and
call
rcr
rcr
adc
add
sbb
popa
fcom
inc
sahf
cld
ret
sar
mov
cs
add
ja
fadd
pop
add
fistp
jle
je
sub
adc
mov
shl
xchg
cmp
rol
pop
cmp
or
aam
repnz
xor
inc
pop
cs
in
imul
icebp
add
jl
aam
xor
test
jmp
nop
or
inc
stc
int
clc
mov
pusha
xchg
cmps
daa
(bad)
xor
daa
xchg
push
mov
mov
pop
inc
push
mov
inc
inc
or
xchg
or
out
push
pop
and
jecxz
mov
adc
ss
wbinvd
jo
pusha
fild
add
jo
or
je
aad
xor
rol
xchg
xor
xor
adc
inc
or
ins
call
adc
add
iret
push
cmp
mov
push
push
lds
adc
nop
psllw
fwait
dec
cmp
jl
rol
xor
fnstsw
adc
and
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
rol
lock
test
mov
push
loop
sub
push
stos
sbb
sbb
adc
or
inc
jo
cmp
push
bound
test
and
sub
pop
aas
push
retf
icebp
pmullw
int3
and
push
inc
or
mov
dec
adc
cmps
cmp
arpl
mov
mov
iret
iret
sbb
fiadd
lock
ror
call
enter
sub
jmp
(bad)
xchg
xor
add
add
cmp
popa
lock
js
xchg
dec
rcl
dec
cmp
sbb
test
lock
sbb
jecxz
rcr
lock
or
mov
test
mov
test
out
sahf
pop
in
mov
add
xlat
fs
or
and
add
push
fsubr
ins
test
add
call
into
les
pop
inc
mov
xchg
arpl
das
mov
imul
mov
xor
cmp
lahf
clts
jns
sar
cli
std
adc
cs
rol
add
and
clc
push
test
or
aas
xor
and
sar
mov
pop
pop
jmp
test
pusha
or
loope
(bad)
pusha
xchg
call
ror
and
pop
lods
loop
or
rol
es
sar
rcl
sbb
lods
nop
pop
les
inc
fnsave
js
dec
or
inc
add
or
sbb
cli
add
inc
dec
popf
add
inc
retf
mov
and
xor
and
and
cmps
pop
inc
sbb
movs
or
xor
pushaw
mov
pop
pop
mov
jb
inc
inc
scas
xor
add
sbb
leave
push
and
and
lods
mov
pushf
sbb
adc
inc
repz
or
imul
stos
or
or
cs
dec
jecxz
push
adc
ins
es
mov
add
adc
inc
lds
sub
cwde
lock
lods
mov
add
push
cld
(bad)
sbb
mov
nop
push
les
xchg
or
mov
hlt
add
aad
popa
ret
dec
int3
rol
enter
add
stc
add
or
inc
sub
add
add
sbb
add
inc
dec
sbb
mov
xchg
add
dec
or
mov
cmps
push
adc
inc
test
pusha
add
add
mov
cmp
push
push
enter
jns
adc
and
push
nop
addr16
sti
pop
repz
lods
push
sub
xchg
and
adc
lds
sbb
push
pusha
mov
sbb
add
xor
inc
mov
leave
mov
inc
xchg
loop
or
int
sbb
add
push
dec
mov
jmp
add
fisttp
sub
inc
dec
dec
add
pop
in
jo
sbb
inc
jp
mov
sub
loopne
shl
jl
jns
dec
mov
or
sbb
mov
push
mov
xor
push
xor
xchg
mov
push
mov
mov
dec
inc
or
je
das
arpl
sbb
retf
inc
mov
adc
push
dec
inc
out
icebp
outs
test
or
add
push
call
mov
push
pop
enter
cmp
xchg
adc
xor
rol
cs
push
sbb
bound
mov
cld
cmp
(bad)
shl
lea
inc
mov
sub
adc
iret
sbb
mov
mov
jns
add
rol
xor
loopne
jns
mov
adc
sbb
xchg
sbb
fild
(bad)
sub
mov
inc
adc
pusha
leave
or
sbb
rol
xchg
rol
call
xor
jp
(bad)
sbb
pop
add
aas
cdq
dec
icebp
out
pop
push
push
ret
push
xor
sbb
in
pusha
add
push
cwde
popa
add
xchg
(bad)
test
dec
daa
sbb
and
adc
inc
xor
pop
enter
xchg
outs
into
push
pop
sub
push
cmp
lds
jo
xor
and
stos
mov
(bad)
aas
push
bound
sbb
repz
jnp
push
xchg
adc
mov
add
add
and
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sbb
cli
adc
mov
inc
or
xchg
and
js
shl
xchg
icebp
scas
pop
and
mov
sbb
scas
push
pop
inc
add
int3
add
nop
mov
and
sbb
cs
int3
or
xlat
retf
loope
clc
bound
rol
xchg
ins
xchg
stc
adc
sti
mov
add
and
add
add
push
pop
and
dec
lods
push
jns
add
push
sbb
inc
push
aam
movs
fnstcw
and
sub
test
sbb
cmps
sub
sub
out
inc
cmp
arpl
pop
mov
mov
ret
push
std
ins
(bad)
icebp
xor
ffreep
or
dec
mov
xchg
sub
mov
or
dec
inc
fild
push
lds
jmp
xchg
add
ud0
or
iret
fnstsw
sahf
ret
inc
or
mov
cs
push
movs
test
jecxz
or
test
pop
adc
loopne
inc
xor
or
add
add
sub
sub
sub
add
out
ins
mov
mov
or
xor
push
lahf
inc
push
jb
and
add
jns
xchg
mov
adc
ror
and
and
add
push
movs
inc
dec
xor
sahf
xor
ret
dec
dec
sub
or
or
or
jns
or
stos
in
cmp
sbb
sub
nop
inc
daa
sub
aam
mov
or
arpl
adc
mov
or
inc
and
sub
adc
lock
push
inc
sub
xor
ds
or
push
lock
les
call
mov
push
push
inc
mov
or
aam
inc
aaa
ss
add
inc
pop
lock
xchg
rol
and
call
pop
xchg
inc
in
cmps
(bad)
push
pusha
push
cmp
ret
fcom
pop
inc
mov
inc
out
nop
xor
add
ret
push
adc
dec
sbb
inc
inc
cmp
mov
ficom
sbb
sbb
and
mov
adc
mov
into
adc
add
rol
(bad)
cbw
push
dec
sub
(bad)
adc
or
sbb
pop
and
add
call
mov
loop
mov
or
mov
xor
mov
addr16
cmps
retf
fwait
rol
sbb
add
les
popw
loopne
add
data16
or
xor
sbb
xchg
(bad)
clc
add
and
add
or
inc
sub
add
add
or
add
or
mov
shl
std
mov
or
sub
mov
pushf
dec
icebp
pop
xchg
add
dec
arpl
out
add
or
mov
jno
and
inc
cmp
inc
pop
inc
retf
xchg
xchg
icebp
scas
adc
xchg
adc
and
or
nop
add
push
jb
or
data16
xor
push
and
(bad)
dec
and
inc
repz
inc
or
cmp
into
or
push
leave
nop
add
mov
pusha
loope
sbb
add
(bad)
fs
adc
dec
mov
ret
inc
dec
dec
pop
inc
mov
add
cmp
inc
jmp
in
push
or
mov
or
stc
jp
icebp
jecxz
xchg
sub
mov
mov
mov
imul
adc
jmp
cld
out
test
mov
add
jg
sub
sti
sbb
xchg
fidiv
nop
daa
nop
cmp
call
adc
pusha
inc
dec
std
adc
push
inc
cmp
add
jns
or
stos
or
les
js
or
dec
add
repnz
push
mov
mov
ret
mov
lds
adc
js
sub
ss
and
aas
(bad)
fsub
pop
xchg
add
les
movs
fadd
dec
or
xchg
or
les
adc
sbb
arpl
adc
adc
rol
call
test
inc
and
in
push
nop
inc
inc
pop
sbb
lods
pop
mov
loope
sub
icebp
(bad)
xchg
adc
pusha
adc
dec
mov
xor
test
add
jge
imul
lds
fistp
or
les
inc
clc
loopne
adc
and
sub
push
adc
push
pusha
enter
sar
add
push
cmp
add
cdq
sub
push
sub
lods
dec
test
mov
adc
cbw
mov
push
jnp
add
cmovns
add
mov
inc
dec
in
mov
cmps
imul
cld
repz
push
nop
and
add
inc
nop
add
addr16
cmps
(bad)
push
cld
cli
sbb
or
aam
aaa
mov
mov
add
iret
mov
cwde
pusha
add
sbb
adc
and
(bad)
mov
add
stc
add
or
inc
sub
add
add
das
add
or
add
or
mov
rol
jo
rol
jmp
test
and
adc
and
(bad)
sub
inc
nop
xor
jge
sbb
aas
dec
push
(bad)
push
stos
(bad)
loopne
sbb
les
lahf
or
push
xchg
and
dec
add
int3
ror
push
test
cdq
mov
sahf
test
pop
xor
jns
int3
loopne
daa
or
mov
leave
shr
push
pop
lods
cmps
in
lock
sbb
jno
cli
not
movs
mov
sub
inc
and
cmp
cmp
pop
std
scas
pop
or
retf
sahf
dec
mov
jae
fmulp
mov
or
dec
mov
xchg
add
nop
add
add
jmp
and
inc
jne
adc
daa
adc
test
call
adc
movs
out
pop
mov
mov
fist
sub
push
cdq
and
enter
repnz
add
mov
sbb
mov
sub
add
mov
or
mov
bound
fst
add
push
aam
add
add
adc
call
bound
pushf
dec
arpl
cmp
mov
add
mov
in
cmp
outs
mov
(bad)
adc
dec
push
adc
ds
rol
test
rol
adc
inc
add
adc
shr
pushf
pop
push
adc
inc
in
inc
mov
or
mov
nop
inc
shl
add
aas
popa
sub
jo
dec
(bad)
in
pop
ret
jo
ret
inc
mov
xrelease
mov
and
cmp
lock
jb
fisub
push
addr16
rol
stos
add
cmp
imul
jg
add
inc
stos
(bad)
imul
lods
(bad)
into
push
adc
and
add
or
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
xchg
push
lods
push
adc
cmp
adc
push
xor
adc
int3
clc
push
movs
and
push
sbb
out
fild
fadd
xor
pop
mov
and
dec
lock
push
cdq
nop
cwde
cmp
sub
inc
sahf
sbb
jge
fs
out
rcl
lods
fs
push
sub
add
or
sbb
cmps
(bad)
push
cli
out
lods
sar
scas
imul
pop
inc
into
push
scas
shl
xor
icebp
lsl
jbe
adc
retf
sti
scas
pop
cmp
mov
pop
mov
or
xor
inc
push
scas
jae
xchg
or
dec
mov
xchg
sub
mov
mov
pusha
test
push
xor
call
mov
fmulp
xor
add
mov
in
pop
mov
cmps
adc
mov
inc
enter
adc
retf
ret
jle
mov
xchg
jb
cld
arpl
sub
xor
repnz
adc
cmp
add
test
movs
test
inc
sub
hlt
retf
(bad)
jecxz
cmp
sbb
cmp
sbb
adc
jmp
xchg
sub
in
ret
adc
mov
xchg
lods
push
movs
jo
jo
int
jo
adc
movs
outs
add
add
stc
add
or
inc
sub
add
add
add
add
or
dec
mov
rcl
outs
mov
and
sbb
sar
loop
add
das
data16
das
push
inc
sbb
jb
xchg
xchg
pop
std
and
in
cmp
cmps
pusha
stos
fwait
adc
sti
aaa
ins
int
xchg
inc
and
xchg
dec
xor
in
ror
stos
push
inc
int
jecxz
lea
pop
mov
sbb
dec
pop
adc
jmp
ins
fisttp
enter
add
lahf
pop
cmp
or
dec
cmp
popa
rol
mov
add
stc
add
or
inc
sub
add
add
add
add
or
pop
(bad)
loopne
ja
or
sbb
dec
pusha
sub
sub
push
or
sub
mov
int3
adc
push
mov
icebp
cmp
jmp
sbb
cli
aaa
or
cmp
lds
mov
dec
inc
add
pop
(bad)
into
rol
and
adc
(bad)
js
fcmovbe
pusha
or
pop
test
pop
pushf
stos
add
or
sbb
add
add
stc
add
or
inc
sub
add
adc
adc
add
jnp
dec
sbb
jo
mov
dec
sbb
daa
xor
imul
cmp
push
scas
inc
sbb
push
daa
adc
inc
xchg
test
in
loop
retf
jg
fdivrp
imul
cmp
arpl
dec
rcl
shl
mov
sub
add
xchg
and
sbb
es
ret
adc
cmc
stos
mov
cli
jecxz
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
and
(bad)
cmp
mov
xor
les
adc
call
inc
fmul
mov
inc
ja
jae
sbb
mov
inc
nop
jmp
lods
inc
repnz
cmp
(bad)
add
jb
leave
jbe
sub
sbb
and
sub
aad
push
add
aam
jns
loope
xchg
call
stos
dec
or
or
mov
or
and
std
mov
(bad)
mov
hlt
test
jg
mov
in
or
pop
mov
cmp
aam
imul
enter
pop
inc
mov
dec
push
mov
cli
inc
aad
shl
lods
shl
jg
cmp
dec
push
xchg
loopne
push
lods
hlt
cs
popa
test
xchg
push
mov
and
(bad)
rol
add
add
lods
mov
sub
mov
outs
mov
outs
sbb
ss
(bad)
jb
jg
movs
xlat
push
hlt
mov
popa
into
outs
mov
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
mov
pop
enter
dec
add
jns
shl
(bad)
popa
dec
hlt
outs
(bad)
aas
sub
enter
test
(bad)
jne
es
test
push
(bad)
addr16
pushf
ins
mov
inc
and
mov
add
(bad)
mov
inc
sub
rcl
inc
xor
retf
cli
pop
xor
cwde
test
xor
push
push
or
xchg
cmps
add
sub
add
fldenv
xchg
add
adc
pop
jecxz
add
pop
shr
mov
cli
xchg
mov
xchg
xor
pusha
xchg
test
pop
push
movs
mov
arpl
sahf
dec
mov
jae
fmulp
mov
pop
mov
loopne
jbe
js
popa
mov
or
and
loopne
call
push
or
mov
js
out
sub
das
cmp
pushf
frstor
aam
lea
lds
xor
pop
mov
inc
test
jb
and
rol
add
mov
daa
mov
aas
and
adc
dec
or
outs
inc
cld
adc
and
loope
mov
stc
add
or
inc
sub
add
add
add
add
or
add
or
push
loopne
xor
nop
inc
rol
bound
inc
fsubr
ror
push
pop
repz
movs
lock
mov
aam
push
add
cld
mov
inc
and
sbb
cs
rcl
int
ret
cmp
and
add
adc
retf
xor
adc
jmp
(bad)
sub
out
ret
or
xchg
and
adc
loopne
sub
imul
sbb
and
xchg
sti
xchg
inc
mov
sbb
inc
add
xlat
outs
lods
pop
dec
es
stc
repnz
sub
sub
scas
add
sbb
shl
adc
arpl
ret
push
or
iret
(bad)
out
jecxz
xlat
and
mov
mov
mov
imul
mov
fisttp
mov
lock
xchg
daa
sub
xor
sbb
jge
out
cmps
mov
mov
inc
(bad)
push
int3
xor
(bad)
rol
sub
(bad)
sbb
push
inc
leave
cmp
pushf
inc
mov
sbb
pop
ud0
test
int3
sub
stc
mov
and
cs
loopne
mov
or
dec
sub
or
cld
ror
add
inc
nop
xchg
retf
movs
mov
and
dec
dec
out
add
les
inc
inc
dec
daa
rol
adc
add
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcl
and
mov
shl
xor
inc
dec
mov
cmp
cmp
cmp
dec
add
mov
sub
xchg
inc
loopne
dec
adc
call
gs
loopne
inc
(bad)
into
jg
int3
std
xor
loopne
push
push
push
ror
outs
push
inc
rep
dec
mov
int3
mov
push
sub
int3
stc
iret
xchg
shr
mov
inc
xchg
daa
push
sub
adc
in
jbe
pop
in
std
pop
loope
adc
lea
mov
nop
repnz
cmp
xchg
adc
ret
and
or
mov
inc
ja
adc
xor
rol
(bad)
fstp
mov
or
dec
mov
xchg
sub
mov
mov
jp
mov
xor
aam
dec
sbb
sahf
mov
cmp
add
addr16
retf
push
add
sbb
pusha
(bad)
(bad)
mov
rcr
and
xor
add
loopne
add
pop
push
fadd
adc
dec
lock
sbb
adc
and
add
or
inc
sub
add
push
add
add
or
dec
add
inc
mov
sub
fisubr
dec
sti
mov
(bad)
inc
test
rcl
inc
lea
shr
cs
add
loop
jno
pop
sub
jo
fistp
pop
repz
stc
mov
scas
fsub
lahf
or
out
cmps
add
loope
stos
inc
add
and
add
or
inc
sub
add
str
add
or
(bad)
std
mov
cmp
lock
mov
inc
or
cmp
(bad)
into
push
xor
clc
das
popf
add
adc
jae
outs
xchg
lea
(bad)
mov
add
and
push
pop
inc
sbb
pop
dec
mov
bound
mov
adc
in
push
xor
push
pop
std
pop
adc
and
add
or
inc
sub
add
adc
or
add
ja
dec
adc
(bad)
retf
inc
and
mov
adc
sub
leave
nop
mov
(bad)
ret
sbb
adc
jecxz
cs
jmp
xchg
push
sub
adc
or
xor
stc
iret
or
aas
xchg
push
push
mov
stc
arpl
inc
push
pop
push
mov
jg
cs
inc
nop
push
add
mov
test
add
and
add
or
inc
sub
add
adc
or
add
js
dec
cld
out
iret
rol
rcr
cmp
push
das
test
push
inc
int
test
shl
inc
mov
and
rcl
inc
and
shl
test
outs
push
jo
push
cmp
pop
sbb
stc
xchg
mov
xchg
fmul
loope
inc
jmp
adc
add
add
stc
add
or
inc
sub
add
add
or
dec
cld
out
loopne
add
cmp
inc
ret
lahf
rcr
jmp
jg
push
xchg
or
inc
shr
add
xchg
in
sub
pop
pop
fcom
cmps
add
jns
loopne
aaa
or
adc
sub
jg
jo
pusha
inc
add
cmp
cmps
rol
mov
inc
test
mov
std
sub
and
and
add
or
inc
sub
add
add
or
dec
sbb
push
mov
and
xchg
lahf
mov
xchg
in
and
pop
push
(bad)
gs
and
mov
xchg
xor
popf
and
das
nop
inc
xchg
push
bound
pop
mov
outs
(bad)
jno
cmp
push
in
or
cmp
lock
test
pop
cdq
leave
xchg
loopne
cwde
xor
dec
inc
jo
loope
test
inc
and
xchg
stos
and
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcr
sbb
and
pushf
dec
xor
push
xor
test
nop
test
loop
rol
sub
pop
(bad)
mov
push
test
and
out
cmp
add
or
mov
outs
cmp
mov
fist
dec
xor
or
jo
add
mov
push
push
xlat
mov
mov
test
lock
xor
add
out
sub
or
cld
jae
lock
shl
and
add
adc
repnz
(bad)
or
add
(bad)
push
aad
nop
xor
ss
loop
ror
or
sbb
fimul
mov
xor
and
add
or
inc
sub
add
add
or
dec
mov
inc
add
xchg
into
lahf
mov
xor
nop
xchg
inc
inc
arpl
jb
enter
jg
push
cmp
retf
adc
jae
jae
enter
(bad)
mov
loopne
lea
js
mov
mov
mov
retf
movs
ss
pop
dec
aad
test
inc
push
arpl
(bad)
mov
aad
jbe
dec
add
lea
in
push
int3
push
mov
mov
pop
adc
and
add
or
inc
sub
add
add
or
dec
mov
sar
or
pop
push
dec
or
jo
lock
adc
mov
push
or
mov
sub
lea
inc
mov
add
or
jbe
and
and
and
cmp
jae
adc
adc
mov
repnz
rcl
or
test
rcl
inc
outs
pop
mov
mov
inc
dec
mov
add
add
or
inc
sub
add
add
or
std
or
nop
mov
sub
test
ret
cmp
jae
push
mov
mov
lds
repz
loop
pop
adc
popa
mov
adc
das
dec
nop
adc
loop
call
and
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
and
or
add
add
dec
add
sub
add
add
add
popa
xor
sbb
sub
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
add
call
add
(bad)
out
mov
push
retf
das
ror
add
sahf
fsubr
repz
push
fwait
mov
xchg
add
cs
ror
hlt
je
inc
fs
push
rcr
dec
add
out
push
add
jmp
add
add
or
xchg
fiadd
or
les
test
add
test
lds
ret
hlt
cmps
ja
xlat
idiv
out
(bad)
(bad)
(bad)
xor
fld
ret
in
cli
(bad)
cli
add
repz
retf
xchg
popa
js
hlt
(bad)
dec
std
mov
sbb
mov
(bad)
(bad)
aad
stos
add
add
mov
das
mov
xchg
jmp
stos
or
jne
xlat
(bad)
ret
in
push
enter
jmp
lea
iret
mov
retf
mulps
icebp
cli
in
fsub
aad
shr
cmp
scas
pushf
(bad)
jmp
xchg
push
in
jecxz
ins
shl
jmp
in
jmp
add
cmc
cld
mov
daa
mov
out
or
mov
popa
int3
out
retf
jmp
shl
(bad)
xchg
in
ret
or
movs
cld
(bad)
inc
aam
push
(bad)
call
adc
in
mov
int
sti
mov
ret
in
mov
mov
mov
lea
cld
mov
in
int3
loope
ss
jb
out
jmp
outs
std
rcl
(bad)
and
cmp
mov
sub
loopne
repnz
(bad)
xchg
mov
(bad)
mov
cmp
(bad)
jmp
cmp
mov
call
lock
sub
call
movs
push
(bad)
fisubr
sar
(bad)
fiadd
shr
(bad)
call
xchg
pop
push
sti
stos
or
ror
(bad)
fild
(bad)
(bad)
dec
add
sub
jmp
scas
ins
lock
loop
mov
hlt
div
add
(bad)
out
pop
repz
mov
add
aad
in
adc
loope
rcr
sti
ror
outs
(bad)
dec
in
push
sti
int
imul
jecxz
cmc
mov
add
in
or
out
in
repnz
jg
add
out
push
les
cli
add
repnz
clc
idiv
dec
aaa
ss
jmp
jmp
stc
lods
add
stos
add
loope
cli
mov
std
rol
mov
sti
xlat
jne
idiv
inc
or
rol
icebp
test
cmc
jecxz
clc
ficom
out
leave
or
aad
push
add
not
in
fst
lock
retf
cli
call
in
les
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
inc
and
sbb
mov
test
mov
inc
xor
enter
dec
or
sub
mov
sbb
add
scas
dec
mov
les
and
nop
(bad)
aad
adc
popa
(bad)
retf
xchg
add
and
sub
and
js
mov
add
stos
or
xor
in
pop
aam
xchg
cmp
lds
rol
add
inc
loopne
mov
dec
or
outs
dec
aad
dec
mov
fld
mov
or
jmp
dec
and
pop
iret
cli
and
xor
pop
test
sbb
lods
fwait
movlps
nop
xlat
sub
mov
inc
mov
lods
push
dec
adc
ja
mov
lds
jmp
rcr
jmp
retf
jne
push
mov
dec
sub
lods
das
fnstenv
nop
xlat
mov
je
inc
or
cmp
les
rcr
jne
push
dec
and
xlat
(bad)
pop
sti
imul
or
or
sub
movs
test
or
movs
lock
icebp
xor
out
aam
(bad)
or
cmps
mov
or
and
les
add
add
pop
ja
(bad)
lds
lock
or
mov
or
mov
mov
push
mov
or
adc
icebp
les
and
dec
sub
push
ret
add
sbb
and
jg
sbb
data16
mov
into
and
test
and
je
cmp
bound
cli
pop
and
test
in
xchg
fmul
ins
dec
cmp
sbb
push
mov
jge
inc
leave
cmps
cmp
rol
add
push
ins
jge
dec
add
rcr
aaa
dec
xor
test
rol
in
shl
imul
xor
sub
inc
js
inc
add
cdq
rol
or
dec
inc
leave
das
sbb
loopne
add
push
adc
ret
(bad)
retf
inc
cmp
rol
adc
mov
jb
mov
ss
dec
nop
ret
mov
movs
int3
ss
mov
add
and
sub
pop
cwde
sbb
and
dec
in
js
(bad)
jb
sub
jmp
jb
fimul
ins
icebp
add
shl
add
popf
retf
sub
in
sbb
xor
pop
loopne
jecxz
or
fisubr
icebp
aad
idiv
mov
cmovae
ret
icebp
lea
add
or
cli
in
jmp
aas
ja
jo
or
dec
push
mov
adc
frstor
push
dec
loope
push
cli
mov
loop
xor
or
cmp
ret
inc
push
dec
out
fsub
inc
or
mov
repnz
test
mov
mov
jge
push
jmp
bswap
dec
mov
ror
ins
inc
mov
add
jg
test
jnp
bound
add
push
iret
stos
mov
mov
cmps
imul
xor
loop
fimul
ins
add
inc
add
xor
(bad)
idiv
stos
dec
sahf
in
rol
mov
inc
pop
cli
xchg
mov
cli
imul
enter
sub
cmp
and
imul
add
inc
ret
clc
lea
or
mov
pop
sub
test
inc
adc
push
ret
jmp
push
shld
xchg
mov
setae
or
lock
add
sbb
adc
(bad)
add
inc
(bad)
sub
ret
nop
dec
sub
push
inc
(bad)
cmp
shl
adc
mov
test
or
inc
sbb
dec
inc
push
cmps
sbb
dec
pop
or
or
mov
push
adc
mov
push
push
and
pop
les
enter
add
retf
push
jge
ret
xor
xchg
rcl
mov
sub
(bad)
(bad)
dec
retf
data16
sub
movs
adc
movs
leave
sbb
inc
pop
nop
add
pop
loop
jbe
rcr
int3
mov
rcr
ja
mov
xchg
add
jb
pop
inc
js
sbb
fisub
dec
jle
jae
lods
shl
cmp
mov
mov
inc
mov
add
xor
cmp
add
call
aas
cld
popa
cmp
push
add
nop
add
jo
out
out
adc
int
retf
xor
pop
jge
gs
jb
add
ret
cmp
mov
call
lds
jo
inc
and
adc
and
and
xchg
aam
jb
or
pop
cmp
rcr
dec
or
sbb
dec
add
test
sub
aad
fadd
ss
sub
add
xchg
lods
gs
inc
cmp
ror
loopne
sbb
popa
mov
scas
xchg
add
test
push
mov
loope
ja
xchg
xor
fstp
mov
jl
mov
cmps
inc
adc
add
rcr
not
je
inc
add
push
pop
and
add
sub
and
dec
call
fadd
adc
and
add
inc
inc
add
add
and
add
or
inc
sub
add
add
add
add
or
add
std
inc
add
or
daa
sub
and
xchg
add
add
xchg
pop
add
xchg
xor
mov
xchg
push
or
cwde
sub
iret
xor
push
scas
repnz
gs
pushf
nop
dec
inc
repnz
xchg
add
dec
xor
mov
or
sub
xchg
sbb
cmps
loopne
and
(bad)
in
jno
push
retf
mov
inc
mov
add
adc
mov
push
dec
je
inc
enter
cs
adc
inc
fst
xor
lods
retf
test
js
loop
(bad)
and
clc
push
ret
shl
jo
and
and
xchg
xor
mov
test
add
push
cmp
dec
(bad)
fs
adc
xchg
and
lea
push
pushf
js
rcl
shl
sbb
xchg
and
inc
jne
sbb
aas
cmp
les
mov
in
stc
jp
push
xchg
sub
cmp
jno
iret
ins
xchg
or
leave
out
ret
call
add
push
and
cwde
rol
sbb
popa
push
jge
or
xchg
inc
dec
nop
jo
and
fs
add
push
and
xor
mov
retf
cld
xchg
add
sub
add
dec
sbb
rcl
pop
push
and
inc
add
loope
jmp
adc
mov
fs
out
shl
push
cmp
and
shr
inc
inc
push
dec
ret
xchg
push
bound
adc
add
stc
add
or
inc
sub
add
add
add
add
inc
(bad)
std
repz
mov
mov
les
inc
xchg
push
imul
daa
push
sub
pusha
int3
xchg
xor
fidiv
cmps
dec
mov
adc
adc
retf
jo
lock
and
xor
and
fwait
xchg
ss
cli
aaa
les
push
(bad)
dec
push
add
test
and
dec
iret
inc
pop
add
cld
mov
sbb
test
imul
lahf
sbb
mov
ds
cld
sub
ror
test
out
push
or
scas
inc
(bad)
call
dec
pop
jecxz
xchg
enter
je
aaa
jecxz
sbb
push
push
les
cwde
das
je
repnz
lock
cld
iret
add
gs
mov
mov
inc
inc
bound
and
ret
add
push
iret
sbb
xchg
or
fldenv
dec
cmps
xchg
inc
and
sbb
cmp
ror
repz
inc
mov
adc
mov
stc
xlat
xchg
mov
push
inc
loopne
cdq
ss
sub
in
sbb
dec
jae
aas
jne
jo
sbb
(bad)
icebp
ror
cld
xor
add
daa
mov
add
loop
add
loopne
add
sbb
arpl
add
xor
je
inc
cmp
or
and
sub
add
cld
mov
movs
pop
add
mov
inc
sti
sbb
and
repnz
mov
pusha
movs
xchg
xor
(bad)
bound
inc
cdq
adc
add
or
inc
sub
add
add
add
add
inc
dec
mov
jg
adc
xor
lahf
rol
retf
daa
sbb
mov
adc
inc
sbb
div
push
imul
mov
nop
shl
sub
and
rcl
mov
add
mov
in
sub
mov
sbb
sub
sbb
jg
push
push
add
test
cs
and
jg
push
jp
jno
(bad)
or
push
popa
ss
std
or
cmc
out
ret
jmp
push
sub
inc
and
movs
xchg
push
pop
cmp
pop
inc
sub
inc
mov
lods
pop
and
xchg
sbb
pop
call
mov
pop
push
dec
and
mov
cli
neg
(bad)
add
les
mov
(bad)
out
add
out
mov
repnz
test
cwde
xchg
inc
and
mov
push
inc
jns
loope
jns
clc
xchg
xor
ins
push
push
mov
shl
jno
aam
int3
xor
aaa
(bad)
and
js
or
xchg
adc
std
ret
inc
sbb
push
push
or
inc
jns
(bad)
jle
inc
or
push
(bad)
mov
xor
popf
mov
(bad)
sbb
add
(bad)
cmp
lds
nop
and
inc
add
adc
hlt
mov
inc
add
stos
std
ret
xchg
inc
adc
adc
or
push
inc
add
pop
pusha
xchg
jmp
mov
fwait
push
lds
xchg
stos
fsubr
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
cmps
ins
inc
add
or
mov
stc
and
gs
sahf
dec
mov
cpuid
inc
jg
push
inc
leave
sbb
mov
jmp
dec
call
and
xor
and
cwde
xor
cwde
xor
test
add
adc
mov
sbb
dec
xchg
jne
mov
dec
mov
mov
imul
mov
dec
push
sbb
adc
or
call
sbb
pop
sbb
inc
loope
or
es
or
cs
adc
lods
fadd
xor
(bad)
cmp
cwde
shl
inc
sub
sbb
or
add
int
shl
dec
lds
nop
cmp
pushf
icebp
and
movs
jg
(bad)
lods
imul
outs
mov
mov
inc
loope
mov
dec
xor
jp
xor
nop
or
sub
das
loope
dec
call
or
mov
cwde
jle
mov
hlt
fstp
sbb
xchg
cmps
mov
aad
mov
movs
popa
inc
jno
jne
enter
mov
push
inc
inc
call
in
dec
push
cld
rol
push
push
push
loopne
int
dec
test
int3
sub
out
or
push
aam
pop
xor
aaa
lds
inc
loopne
dec
push
jmp
and
inc
sahf
inc
ror
aam
jae
add
les
jae
loope
sbb
ret
and
xor
add
or
pop
xor
add
lds
add
and
adc
mov
adc
test
add
daa
add
aas
sbb
lods
jo
(bad)
ins
push
repz
mov
movs
cwde
bound
inc
cmps
adc
add
or
inc
sub
add
add
add
add
or
add
or
out
enter
push
test
xchg
adc
or
xor
sbb
gs
sahf
push
jnp
or
ret
cmp
daa
adc
dec
call
cmp
loopne
xchg
and
push
push
imul
mov
lock
and
call
fnstenv
adc
(bad)
in
shl
dec
ss
cmp
pop
ret
les
pop
xor
sbb
sub
add
xchg
push
inc
je
arpl
jo
adc
jmp
add
call
cwde
or
icebp
mov
sub
sub
pop
sbb
inc
pop
sbb
or
and
xor
xchg
xor
or
sbb
js
fstp
fwait
cmp
sbb
dec
loopne
inc
jno
scas
popa
mov
xchg
xor
adc
inc
mov
xor
xchg
inc
je
and
mov
movs
or
pop
aad
int3
xchg
not
or
or
fcom
adc
lock
sbb
shl
sbb
test
popf
add
or
mov
movs
push
fcomp
jmp
add
cmp
daa
inc
js
test
adc
xor
adc
add
pushf
loope
lds
inc
or
cmp
push
or
nop
sbb
sbb
lock
or
call
and
sbb
les
xchg
fdiv
adc
aas
addr16
add
lds
sbb
nop
sbb
or
mov
js
pop
popf
inc
dec
push
movs
retf
xor
iret
cmp
inc
bound
in
inc
sbb
pushf
es
push
push
aaa
xchg
data16
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
iret
wbinvd
and
loope
dec
add
es
ins
mov
xchg
add
or
hlt
pop
mov
sahf
cmp
dec
rcr
add
inc
leave
xchg
jmp
add
jb
ror
pop
sbb
add
shl
cmp
test
rol
daa
push
shl
imul
mov
add
cmp
fnstenv
call
push
pop
xor
movs
xor
push
cmp
sbb
add
xchg
push
or
in
jecxz
xor
jmp
adc
cmp
sbb
cmps
add
jecxz
rol
mov
xor
(bad)
shl
out
xor
jp
ficomp
mov
loopne
ud0
call
es
std
imul
cs
dec
out
add
xchg
jmp
(bad)
adc
loopne
ret
mov
retf
test
add
sbb
xchg
xor
call
jg
sbb
stc
mov
(bad)
nop
sub
pushf
jbe
outs
inc
fs
aas
xchg
xor
inc
dec
xor
mov
pop
and
imul
comiss
rol
das
loopne
fwait
adc
nop
call
or
les
xor
xor
gs
xchg
les
adc
adc
sub
xor
mov
inc
(bad)
pop
xor
adc
loope
pop
imul
ret
inc
or
xor
adc
sub
lods
lods
xlat
push
or
mov
test
and
jb
add
inc
ret
xor
(bad)
daa
push
adc
cmps
cs
push
inc
add
sbb
push
inc
lock
cmp
les
inc
shr
or
mov
aas
xchg
jmp
and
add
or
inc
sub
add
add
add
add
or
add
or
outs
aam
add
mov
pop
enter
pop
and
push
xor
scas
mov
or
xchg
out
mov
or
push
pop
xchg
nop
and
and
repnz
cmp
adc
xor
pop
popf
add
xchg
xor
add
cli
xor
pop
shl
rcr
aas
jns
ins
or
xor
sub
dec
xchg
add
inc
push
es
cmp
pop
xor
aam
push
mov
bound
mov
dec
mov
ret
fist
or
test
out
fs
adc
(bad)
js
add
cdq
adc
mov
push
sub
jmp
sbb
add
adc
pop
lea
mov
das
add
jns
outs
rcr
or
scas
mov
sbb
cli
pop
adc
gs
add
push
jmp
pop
loopne
jg
cdq
(bad)
cmp
adc
pop
call
adc
adc
xchg
(bad)
jmp
inc
in
int
lea
call
mov
mov
inc
ss
popf
xchg
leave
sub
or
inc
movs
xor
loopne
ss
cwde
jno
and
xor
nop
and
and
enter
xrelease
cmp
adc
in
dec
push
add
and
add
add
or
xor
dec
pop
das
xor
add
add
add
pop
adc
vmovsd
and
sbb
dec
xor
add
adc
cmp
cmp
push
add
inc
cwde
icebp
xchg
xchg
pusha
push
inc
ret
xor
pop
sub
or
int3
ror
and
inc
xor
mov
adc
adc
sbb
adc
sar
stos
sub
or
shr
dec
sub
push
sahf
movs
push
test
stos
push
popf
shr
cld
or
ret
int
imul
or
inc
sub
add
add
add
add
or
add
or
iret
enter
cld
adc
mov
adc
shl
add
mov
shl
inc
jg
dec
or
mov
or
inc
add
add
cld
cdq
sub
xchg
cmp
or
in
cwde
or
test
xchg
mov
test
ret
movs
mov
out
movs
push
sbb
xchg
xor
dec
shl
pop
fwait
(bad)
or
jge
cmp
pusha
sbb
xor
cmp
add
xchg
aaa
jl
fs
inc
xchg
sub
sub
mov
cmp
add
cwde
ret
pop
and
mov
and
icebp
dec
scas
nop
adc
mov
(bad)
scas
xor
push
cmps
dec
pusha
xchg
cs
fcmovnb
fwait
push
add
xor
int
sbb
mov
add
mov
pusha
call
adc
ja
stc
ja
add
sbb
iret
and
sbb
adc
inc
scas
jp
arpl
xor
sbb
iret
cmp
jne
or
pop
pop
icebp
mov
xor
or
xor
sbb
and
cmc
or
nop
add
aam
shl
dec
or
call
push
sahf
mov
hlt
icebp
inc
or
xor
loope
add
sub
hlt
xor
sub
mov
sbb
cmp
sub
add
adc
push
into
mov
xchg
int3
and
pop
add
inc
lea
xchg
add
arpl
add
sbb
or
daa
add
pusha
inc
or
xor
mov
pop
les
sbb
inc
xchg
add
dec
add
push
call
mov
repz
aad
mov
add
or
or
aas
cmp
(bad)
add
inc
lods
neg
mov
loopne
inc
ret
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
iret
fild
pop
dec
sub
lds
adc
adc
pushf
sub
lahf
add
or
pusha
cmp
test
mov
add
and
rcr
pop
pop
test
aaa
xchg
movs
lds
push
inc
xchg
add
sub
movs
sbb
nop
add
fidiv
and
xchg
ja
pop
cmp
scas
cmp
dec
push
push
inc
and
jno
es
mov
inc
ror
cmp
data16
es
inc
and
leave
xchg
cmps
leave
sbb
mov
imul
jns
or
push
test
adc
je
adc
out
inc
xchg
jg
cmp
test
sbb
cwde
dec
retf
movs
inc
xor
mov
lock
and
stc
aaa
jecxz
push
adc
cli
mov
mov
(bad)
sbb
push
in
data16
ror
cmc
xchg
add
pop
ficomp
out
add
jge
and
cmps
jg
std
and
int3
or
sub
add
jmp
ret
add
dec
or
jb
cld
adc
add
lock
jns
rcl
fxch
jbe
ja
xor
dec
mov
xchg
(bad)
push
mov
sub
ins
inc
js
mov
mov
adc
test
add
wbinvd
adc
nop
sub
nop
xor
sbb
rol
outs
xor
adc
or
inc
or
nop
inc
sbb
pop
add
dec
xor
inc
sbb
jo
cs
xor
int3
add
add
and
movs
dec
add
sbb
lock
adc
add
and
clc
inc
add
sub
pop
or
(bad)
das
adc
push
xchg
sbb
test
inc
add
inc
daa
or
(bad)
lods
add
(bad)
jmp
and
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
adc
es
aaa
or
pop
sbb
popa
les
popa
icebp
and
and
xchg
inc
test
cmps
jecxz
jg
sbb
adc
mov
lea
add
sub
add
mov
nop
nop
sar
in
lahf
dec
sub
test
(bad)
adc
(bad)
jne
cwde
outs
push
sub
mov
std
rol
imul
adc
sub
xchg
xor
xchg
push
aas
add
shl
fs
ss
(bad)
mov
inc
mov
mov
(bad)
fs
pop
cmovb
pop
rol
mov
or
mov
push
xchg
lock
dec
je
bound
call
push
xchg
or
popa
xchg
push
int3
mov
push
fstp
dec
das
data16
fwait
jl
dec
pop
out
fidiv
lods
jg
(bad)
imul
dec
or
add
inc
add
(bad)
jmp
sub
shr
mov
or
xor
pop
pop
sub
mov
sbb
mov
jge
cld
mov
or
add
xlat
mov
mov
add
xchg
rcr
mov
push
mov
imul
movs
cdq
xor
sub
adc
nop
jge
jne
lds
cwde
es
push
mov
or
mov
gs
loope
and
je
lock
jo
dec
adc
adc
int3
jo
jp
push
es
(bad)
dec
xor
jge
pop
xor
adc
mov
xor
lds
mov
xor
add
inc
movs
or
bswap
inc
loop
pop
fdivr
inc
jg
add
and
and
adc
les
add
leave
sub
sbb
rol
cs
ret
pop
dec
add
adc
sbb
retf
cmp
cld
xchg
add
inc
lds
mov
(bad)
or
mov
add
add
or
inc
sub
add
add
add
add
inc
dec
sbb
das
test
pop
mov
mov
or
mov
clc
repz
mov
loope
xor
cld
and
pusha
mov
dec
mov
movs
call
scas
pop
inc
jg
mov
and
cmp
add
mov
stc
mov
ret
inc
jg
cwde
ss
xor
jl
hlt
out
les
adc
or
fst
push
(bad)
ret
lahf
push
sbb
das
ror
sbb
dec
pop
movs
xor
or
test
xor
pop
mov
push
(bad)
dec
dec
int3
ins
push
stos
jg
or
xchg
sub
jo
shl
push
push
and
mov
cmp
cmc
cwde
cmp
in
xchg
xor
mov
cmc
test
jo
push
test
test
mov
mov
push
ins
pop
or
adc
jmp
cmps
jg
jno
fwait
icebp
loop
or
call
inc
inc
pop
add
inc
popa
cmp
je
pshufw
test
add
or
call
add
in
shl
adc
mov
ret
add
dec
shl
push
xor
mov
shl
add
ret
sub
inc
mov
xchg
inc
addr16
loop
inc
sbb
pop
outs
cmp
push
inc
or
mov
adc
xor
aas
not
test
sub
jo
xchg
push
js
inc
adc
nop
inc
add
inc
out
or
rol
or
xor
(bad)
xor
jmp
loope
add
pusha
leave
bound
pmuludq
inc
add
inc
adc
and
adc
dec
add
mov
ret
add
enter
xor
loopne
xor
add
push
push
inc
inc
ret
push
sub
cwde
push
movs
es
inc
jne
and
add
outs
mov
sar
sbb
xor
or
and
or
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
iret
lahf
inc
or
sub
inc
fcmovnb
xchg
inc
and
mov
inc
pop
jle
push
hlt
pop
cmps
mov
lea
inc
mov
ror
inc
jg
push
and
push
or
or
retf
sbb
pop
stos
pop
es
cmp
sbb
and
push
dec
(bad)
popa
adc
dec
add
out
(bad)
or
fstp
add
cmps
push
mov
mov
cli
retf
or
repnz
test
sbb
dec
call
add
mov
shl
es
pop
sbb
xchg
mov
pop
or
pop
mov
nop
mov
rcr
sub
inc
mov
sbb
xor
mov
jg
les
inc
jne
mov
adc
push
xchg
adc
or
sbb
(bad)
(bad)
fwait
gs
push
pop
cwde
mov
add
sub
mov
imul
shl
(bad)
sbb
ret
stos
ret
dec
xlat
inc
stc
mov
fwait
or
ja
pop
xchg
clc
rol
add
daa
mov
xor
sar
mov
adc
and
loopne
ss
rol
or
je
xor
mov
add
or
xor
adc
mov
jne
inc
sbb
and
lds
jnp
popa
and
gs
test
adc
mov
add
in
loope
or
retf
dec
push
fdivr
xchg
nop
sub
cmp
xchg
or
test
cmp
mov
test
sub
int
(bad)
add
or
rol
mov
in
aas
add
and
mov
daa
xchg
and
dec
or
xchg
movs
pop
cmp
inc
jb
sbb
into
add
sub
adc
xchg
sbb
and
sbb
loopne
test
fnsave
and
sbb
aas
pop
pusha
lock
push
stos
shr
add
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
jo
or
out
(bad)
lods
test
adc
mov
pop
lods
call
sbb
fimul
test
xor
jno
jmp
ret
adc
and
sahf
push
push
and
iret
aas
sub
mov
or
imul
sub
sbb
aam
aam
xor
movs
adc
push
loope
push
mov
es
add
rcr
jmp
(bad)
mov
push
xchg
mov
mov
sbb
(bad)
test
test
adc
xchg
jecxz
nop
repz
(bad)
or
add
ret
(bad)
sbb
adc
or
int3
pop
jb
dec
or
cwde
fistp
out
add
jno
ss
repnz
ins
sub
cs
add
fcom
call
push
mov
imul
es
sub
jo
jl
jmp
or
sub
ja
daa
adc
push
jp
dec
sahf
shl
xor
fnstenv
les
inc
js
or
mov
adc
sbb
or
pop
adc
xor
sbb
cmc
repnz
cs
add
pop
pop
ins
sbb
or
shl
ret
add
push
or
or
lods
mov
xor
inc
and
(bad)
cld
and
outs
or
push
sub
ins
or
push
(bad)
shl
sbb
adc
mov
loopne
mov
leave
enter
icebp
les
mov
repz
push
cmp
or
sub
adc
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
xor
xchg
sub
cmp
adc
adc
cli
icebp
xchg
icebp
mov
jbe
call
jne
adc
xchg
adc
xchg
test
push
enter
xor
xchg
pop
movzx
xchg
mov
pop
not
rcr
lods
jecxz
or
cmc
dec
add
push
(bad)
and
shr
mov
adc
test
xor
daa
bswap
jo
xor
addr16
jmp
xor
or
(bad)
mov
inc
cmp
shl
mov
addr16
inc
pop
in
in
pop
dec
ss
inc
mov
int3
gs
dec
push
or
test
repz
lods
and
out
or
retf
dec
mov
mov
(bad)
xor
lock
xchg
push
lods
and
inc
mov
sbb
ds
mov
gs
js
add
xchg
bt
pop
or
jl
xor
cdq
adc
popf
xor
popa
jbe
jp
rol
adc
cmp
ins
jg
jae
sbb
xor
adc
(bad)
aas
adc
jb
adc
and
add
and
inc
xchg
cld
push
add
inc
inc
adc
ds
xchg
adc
mov
gs
inc
xor
jns
push
and
dec
leave
mov
add
dec
aaa
sbb
movs
xor
add
add
movs
int3
xor
int3
and
sbb
adc
add
stc
add
or
inc
sub
add
add
add
add
or
push
sbb
or
cli
fist
call
mov
popa
xor
fs
sub
ror
and
inc
pop
xor
pop
out
or
adc
gs
sub
out
xchg
xchg
(bad)
pop
shr
cmp
(bad)
jne
fmul
or
push
add
jge
push
mov
adc
int3
nop
push
add
in
adc
mov
cmp
test
div
or
jg
popf
inc
out
mov
or
mov
cmp
adc
popa
mov
(bad)
xor
adc
push
mov
push
and
jne
out
sbb
(bad)
jg
mov
mov
mov
sti
jno
sub
add
fwait
mov
cmp
clc
out
cmp
pop
jmp
aad
sbb
loopne
sub
aaa
add
out
jge
adc
in
icebp
(bad)
imul
stc
popa
js
dec
sbb
ins
xchg
(bad)
ds
icebp
int3
pop
popa
mov
mov
sbb
push
cmp
int3
xor
push
(bad)
ja
fs
mov
sbb
daa
cmc
aam
inc
xchg
jbe
in
sub
dec
pop
icebp
inc
pusha
add
push
or
popf
inc
(bad)
stc
fdivr
or
inc
retf
nop
(bad)
and
pop
push
cld
jecxz
aas
repnz
iret
aas
pop
cld
xchg
cmovs
push
add
adc
int3
cmp
push
add
aas
mov
add
(bad)
movs
and
push
jmp
dec
in
or
cvtpi2ps
add
mov
inc
add
stc
add
or
inc
sub
add
add
add
add
or
rcr
sub
mov
ret
and
test
shl
pop
les
adc
jp
dec
in
pop
xchg
adc
push
mov
mov
jmp
stos
cmc
in
xchg
or
test
cmp
push
ins
dec
pusha
rol
pop
inc
sbb
jno
les
push
popa
shl
sahf
add
xor
cmp
sbb
shl
jnp
sbb
xchg
lock
mov
test
jae
stos
cmp
sbb
js
sbb
and
cmp
or
jno
jno
push
pop
cmp
loope
add
adc
pop
mov
aad
scas
arpl
mov
retf
pop
add
fld
jp
bound
mov
push
in
shr
adc
mov
sbb
dec
cmps
clc
or
je
add
jmp
clc
lock
daa
push
(bad)
lods
fadd
das
sti
mov
aaa
adc
pop
arpl
icebp
ja
jg
in
xor
jp
cmc
iret
sbb
push
push
sub
push
and
add
jge
test
inc
es
pop
sbb
ins
and
popa
(bad)
in
add
js
cmp
pushf
fmul
test
xor
inc
sub
retf
inc
or
xor
nop
fs
sbb
retf
ret
mov
movs
mov
dec
bound
adc
pop
push
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
push
sbb
rol
rol
or
lgdtd
das
add
add
popa
xor
sbb
sub
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
sub
sti
mov
(bad)
call
std
std
idiv
int3
add
mov
(bad)
(bad)
and
mov
(bad)
std
out
stos
int3
(bad)
stc
mov
in
cld
int
mov
idiv
hlt
fldenv
(bad)
jmp
(bad)
cli
add
(bad)
xor
jb
or
or
xchg
add
sbb
arpl
(bad)
inc
push
add
(bad)
lods
(bad)
out
add
jmp
ins
push
push
push
leave
cmps
jne
idiv
cli
cmps
add
out
mov
push
mov
lock
dec
clc
sbb
leave
cmc
(bad)
cmps
ja
stos
popa
add
(bad)
or
push
add
fadd
(bad)
in
es
fld
pop
xor
jnp
loop
aad
add
mov
jmp
out
(bad)
in
add
jmp
leave
out
(bad)
push
clc
(bad)
fstp
out
jp
ret
in
xlat
fwait
add
rcl
int3
and
push
retf
je
or
add
pop
sub
or
idiv
scas
add
lahf
movs
cdq
add
mov
(bad)
out
inc
fcmovnu
ret
mov
stos
add
mov
or
out
push
pop
retf
not
cdq
fldenv
stos
(bad)
jmp
aaa
test
mov
scas
scas
sub
mov
rol
fs
movs
call
shl
jnp
mov
fidiv
call
add
sbb
not
add
les
mov
add
mov
(bad)
push
mov
jmp
or
(bad)
sti
fsub
push
pcmpeqd
icebp
or
cwde
test
and
nop
mov
or
jmp
sbb
xchg
(bad)
in
mov
(bad)
fisttp
in
jmp
ja
mov
(bad)
call
ret
add
dec
scas
cmc
loop
or
ror
(bad)
(bad)
xor
in
icebp
(bad)
fild
mul
int
(bad)
rcr
jno
jmp
iret
add
popf
(bad)
adc
repnz
cmp
ret
cs
in
mov
pop
int3
in
fidiv
mov
mov
repz
in
adc
mov
stc
fild
push
test
retf
or
in
not
or
or
ins
shl
test
mov
in
repz
idiv
lahf
add
lods
adc
test
test
cli
fiadd
(bad)
mov
lock
in
loopne
xchg
jl
(bad)
lea
jecxz
jmp
inc
sti
icebp
add
out
or
loope
cld
mov
in
lods
or
add
int3
cmp
(bad)
jae
jmp
in
clc
xchg
repz
test
repnz
sti
in
in
out
sub
fadd
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
push
add
add
add
add
add
add
or
add
or
mov
rol
adc
pop
enter
add
movs
rol
lea
inc
jb
mov
push
stos
shl
pop
add
lds
or
test
and
or
mov
or
jmp
or
and
adc
dec
cmp
or
push
shl
jle
xor
sub
stos
in
adc
sbb
and
cli
push
add
dec
push
cwde
xor
lds
test
mov
xor
add
jae
ret
sub
mov
pop
shl
pop
fs
js
enter
outs
adc
fdivr
inc
xchg
dec
pusha
fimul
cmp
mov
mov
enter
out
sbb
mov
out
dec
nop
pusha
retf
mov
xchg
hlt
sub
and
jle
repnz
fucomip
cmps
push
js
dec
call
icebp
fnstsw
mov
out
imul
in
and
add
in
push
(bad)
jno
call
(bad)
mov
or
mov
cmp
pop
enter
inc
adc
sbb
inc
mov
mov
sahf
addr16
pop
mov
mov
pop
and
push
lods
xchg
inc
sbb
dec
push
loope
xor
je
fistp
jo
push
arpl
in
dec
push
or
push
push
enter
jo
cmp
xlat
adc
lahf
xchg
mov
lock
push
add
add
xchg
jns
call
and
movs
xchg
ss
loopne
pop
cmp
loopne
pop
shl
jbe
add
xchg
(bad)
mov
add
pop
sub
jo
dec
movs
xchg
mov
pop
pusha
call
mov
mov
sbb
movs
and
xchg
adc
scas
push
mov
or
xchg
hlt
push
mov
add
enter
lods
gs
loope
jbe
and
push
repnz
fist
stos
les
or
mov
shr
add
add
sbb
xor
test
sub
mov
dec
cs
push
nop
mov
or
rol
cmp
or
mov
mov
xchg
mov
add
add
mov
rol
add
es
fs
daa
push
jmp
pop
(bad)
or
imul
sbb
inc
leave
push
cwde
stos
or
hlt
retf
xchg
cmp
xor
inc
sbb
ret
add
pop
add
aam
sbb
mov
add
imul
add
aaa
adc
outs
aaa
mov
sbb
xchg
inc
outs
add
add
ror
adc
add
mov
(bad)
sbb
pop
xchg
sbb
ins
daa
(bad)
pop
push
in
jb
mov
or
rol
cmp
ins
sub
add
ins
aaa
shl
fsub
(bad)
push
inc
cmp
shl
fadd
xchg
in
loope
rol
or
pop
push
jp
or
inc
dec
sub
enter
add
sbb
cmp
sbb
and
add
test
dec
mov
cli
and
or
inc
loop
add
and
xor
stc
adc
pop
punpckhwd
rol
inc
or
cwde
mov
mov
push
sbb
xor
inc
clc
push
xchg
test
or
xor
or
mov
aas
mov
jmp
or
test
adc
mov
ja
dec
lods
inc
and
jo
add
inc
or
cmp
xchg
or
mov
xchg
adc
in
pop
bound
xchg
sub
mov
bound
clc
xchg
add
add
push
xor
and
sub
add
fisub
xor
mov
add
jp
sbb
adc
or
lock
jmp
xor
sbb
pop
ud2
pop
add
or
cs
adc
js
pop
dec
ret
retf
xchg
xchg
aam
adc
mov
adc
test
pop
out
in
jns
scas
adc
xor
jp
daa
(bad)
ds
icebp
xchg
cmps
xlat
cmp
cmp
jns
enter
mov
pop
and
loop
cmp
cmp
fadd
jp
test
adc
push
rol
xchg
fstp
call
inc
(bad)
sub
inc
mov
add
or
js
xchg
push
ds
pop
push
int3
pusha
or
add
les
push
mov
add
sbb
pusha
stos
fild
xor
or
inc
push
movs
cmp
sub
test
cmps
or
or
mov
daa
int3
or
inc
jmp
mov
add
push
xchg
pop
aad
pop
sbb
adc
adc
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
or
mov
and
adc
inc
aas
ins
mov
shl
adc
mov
push
arpl
sub
popa
dec
push
cmp
je
leave
jecxz
sahf
push
xor
pusha
xchg
push
jle
sub
xlat
ret
nop
mov
enter
nop
dec
push
imul
movs
sbb
or
push
sub
and
shl
push
add
xchg
out
ds
jno
push
dec
inc
cld
push
push
aam
dec
push
ins
dec
out
retf
scas
(bad)
adc
bswap
mov
jp
xchg
adc
or
inc
sbb
push
cmps
inc
(bad)
shl
nop
sub
outs
push
stos
push
mov
rcr
aad
pop
mov
mov
xchg
or
xchg
jo
hlt
inc
jecxz
sbb
mov
add
arpl
cmp
sub
sbb
mul
jmp
pusha
sti
push
lsl
lock
sub
sbb
and
inc
inc
xor
cld
adc
ins
and
sbb
call
adc
and
or
je
xor
dec
clc
dec
jne
pop
add
aas
dec
cwde
cmps
loopne
sub
mov
add
or
cld
and
nop
add
aam
ror
retf
iret
sbb
mov
jmp
(bad)
pop
lahf
push
das
xor
and
fcmovne
adc
push
push
xor
mov
mov
and
call
test
and
not
jg
push
(bad)
les
loop
loopne
ror
and
or
ins
push
push
sar
mov
(bad)
aas
sbb
sub
add
mov
cld
mov
inc
xor
pop
movs
clc
dec
sbb
mov
add
pusha
imul
xchg
(bad)
rol
call
and
add
stos
push
add
cli
test
inc
mov
pusha
adc
popa
mov
or
jb
dec
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
das
mov
xor
or
or
add
push
retf
shld
jbe
sbb
xchg
pop
adc
pop
xchg
jg
jb
rcl
call
mov
mov
fcmovb
aad
or
xor
or
cmp
test
add
add
inc
push
sahf
push
inc
pop
test
add
dec
sbb
scas
mov
fsub
ins
pop
push
adc
xchg
xor
pop
stos
ins
sbb
pushf
aad
xchg
cmp
repnz
or
lods
mov
sub
and
add
clc
adc
dec
xchg
and
pop
loopne
xchg
scas
add
adc
dec
rcl
push
pusha
jl
cmc
loop
sub
push
pop
popa
cld
aaa
inc
mov
int
pusha
dec
pop
or
jb
xor
pop
test
jl
mov
and
push
adc
imul
shl
add
adc
pop
mov
inc
pusha
add
rol
add
add
mov
add
push
popf
inc
cld
jne
or
push
nop
les
add
push
add
pop
xchg
push
lahf
xchg
jne
dec
cmp
les
inc
xor
push
js
inc
or
(bad)
sub
or
add
stc
add
or
inc
sub
add
add
sbb
add
inc
dec
sbb
rcr
aas
jg
push
std
sbb
lea
jg
and
push
dec
nop
and
sbb
add
inc
retf
adc
movs
mov
sbb
and
dec
adc
inc
pop
in
xchg
adc
dec
and
pop
jbe
sbb
inc
test
les
push
sar
iret
jo
and
inc
sbb
es
cmp
loope
xchg
cdq
adc
inc
rol
mov
int
mov
and
test
mov
dec
dec
xor
xchg
adc
fiadd
retf
data16
fldenv
nop
jb
adc
inc
retf
lea
inc
or
pusha
in
or
mov
jnp
and
xor
test
sub
add
js
nop
cdq
gs
movs
dec
inc
int
int
add
test
mov
jnp
adc
inc
push
xchg
das
xchg
sub
loop
movs
xchg
es
ret
mov
clc
xor
adc
cmp
dec
dec
adc
push
inc
in
add
inc
bound
sar
clc
and
dec
(bad)
js
sar
pop
loopne
aas
es
inc
push
adc
std
mov
je
add
jne
add
jnp
lock
adc
add
popa
inc
adc
xor
mov
inc
add
xor
shl
adc
inc
xchg
cmp
stc
ror
sub
xchg
sbb
dec
jns
icebp
mov
xchg
in
cs
mov
icebp
gs
test
dec
aaa
push
js
add
(bad)
movs
mov
pop
or
pushf
cmp
sbb
add
stc
add
or
inc
sub
add
add
sbb
add
inc
dec
sbb
push
loopne
sub
(bad)
fmul
and
mov
pusha
xchg
xchg
mov
cld
mov
cs
xor
cdq
clc
out
xlat
mov
inc
inc
in
fisttp
jnp
ret
jg
and
inc
movs
push
mov
cwde
mov
inc
test
fsub
mov
and
adc
movs
and
add
add
es
mov
sub
cwde
jmp
dec
shl
ret
pop
adc
lods
js
hlt
loop
sbb
inc
or
mov
xor
adc
push
repnz
test
inc
lea
ins
fisubr
push
and
pop
repnz
pop
test
xor
test
xlat
inc
lods
jb
ret
inc
push
jno
jp
ret
add
push
retf
loopne
jg
mov
xchg
fld
cwde
push
xchg
pop
sbb
sbb
cmp
loopne
sahf
das
clc
popa
push
sbb
mov
mov
cmp
fdiv
pop
les
into
or
push
and
js
push
enter
pusha
add
lock
or
sbb
mov
inc
adc
int3
add
adc
sub
push
inc
sub
lods
nop
test
dec
popa
push
add
xor
test
push
and
popa
pusha
xchg
inc
cmp
fs
or
inc
cmp
dec
push
mov
loopne
adc
pop
push
pop
pop
out
rcl
xchg
les
mov
cs
xchg
inc
sub
test
rcr
in
enter
aas
or
cmp
push
ror
push
inc
and
mov
add
or
inc
sub
add
add
push
add
or
add
or
push
mov
dec
adc
inc
mov
sub
nop
mov
ds
push
add
xchg
sbb
add
adc
aas
xor
xchg
inc
dec
shr
sbb
fs
lea
test
cwde
jmp
mov
fidivr
pop
add
sbb
jg
push
push
mov
inc
(bad)
cmp
popf
add
pop
pusha
repnz
enter
or
loop
xchg
xchg
add
or
jo
push
push
or
bound
(bad)
in
icebp
out
test
imul
pop
daa
lods
or
arpl
and
cmps
push
push
xor
and
cdq
add
push
mov
xor
ret
cbw
add
in
loopne
and
mov
es
out
pop
ins
je
add
das
inc
cmc
push
mov
mov
in
je
inc
jae
xchg
shr
lods
inc
loope
sbb
xor
or
cmp
lock
add
add
mov
sub
push
push
in
dec
add
aaa
inc
aaa
into
pusha
ret
mov
mov
add
xchg
add
dec
push
je
ret
clc
add
jb
ror
sbb
push
inc
add
add
inc
add
sub
loopne
aam
push
sbb
mov
pop
(bad)
js
add
ds
add
xchg
mov
xor
rcl
lea
push
and
sub
adc
in
adc
push
in
loop
add
lock
inc
push
test
cwde
and
popa
jnp
push
inc
add
add
add
dec
mov
adc
or
nop
adc
cwde
test
and
aas
push
xor
add
popf
out
leave
xor
mov
jae
das
xchg
sub
push
and
pop
add
push
int
cmp
push
add
cld
and
ret
adc
pop
leave
push
aam
or
add
stc
add
or
inc
sub
add
add
and
add
inc
dec
sbb
jo
cmps
or
cmps
lods
pusha
bound
xor
push
push
in
loope
mov
sub
mov
mov
adc
in
xor
movs
adc
mov
pop
mov
rol
adc
out
pop
xchg
adc
call
mov
leave
ret
shl
lods
xor
rol
adc
es
fsub
jmp
rcr
inc
pusha
adc
mov
aam
adc
pop
nop
jg
and
xchg
sub
adc
rol
fdivr
pop
loopne
adc
lods
xchg
mov
push
test
mov
aam
push
pop
adc
loopne
sbb
in
call
add
adc
xor
mov
mov
xor
mov
imul
clc
aaa
loope
xor
push
arpl
nop
pop
inc
int3
cwde
jmp
fwait
int
mov
inc
test
add
or
fs
add
or
cmp
mov
adc
pop
pop
inc
xchg
inc
add
xor
xchg
push
jne
mov
dec
xor
sub
(bad)
pop
das
sub
(bad)
and
or
mov
cmp
ucomiss
push
dec
push
sub
add
sub
in
aas
enter
(bad)
std
and
add
pop
dec
push
add
movs
dec
add
or
mov
sbb
adc
jmp
sbb
xchg
repz
and
inc
pop
push
sub
sbb
hlt
mov
dec
mov
sub
mov
adc
popf
ins
or
inc
aaa
mov
add
or
push
adc
rcr
sbb
call
sbb
bound
loop
push
sbb
pop
ret
xlat
jns
test
inc
push
push
bound
add
push
add
inc
adc
lock
movs
test
sbb
xchg
or
and
scas
test
push
add
adc
xchg
and
or
lods
movs
fsubr
add
retf
nop
xchg
leave
mov
into
jb
sub
sbb
or
mov
mov
push
call
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
push
mov
add
add
jle
sub
pusha
xor
fldcw
fs
and
ret
es
cld
xchg
sbb
arpl
shr
push
in
in
jg
xor
add
inc
cmps
or
add
cmps
add
(bad)
clc
xor
xor
or
pop
push
inc
mov
adc
mov
pop
inc
mov
pop
mov
xor
dec
push
repnz
jmp
cmp
push
iret
les
pop
mov
rol
or
repz
les
and
dec
(bad)
call
jae
lahf
or
inc
sbb
xchg
xchg
cmc
pop
pop
cwde
or
loope
outs
frstor
js
add
mov
mov
dec
(bad)
rcr
push
inc
adc
cwde
(bad)
add
add
sub
mov
cmp
cmps
dec
add
xchg
sbb
or
add
pop
xor
stos
call
sub
icebp
lock
sbb
mov
or
pop
sub
sbb
cmc
xor
aam
lahf
inc
sub
adc
pop
rcl
adc
fcom
inc
add
rol
inc
or
add
dec
punpcklbw
mov
or
mov
lds
mov
sbb
push
mov
add
cwde
inc
inc
or
sbb
or
add
mov
cld
xchg
dec
ss
rol
add
add
dec
fstp
call
xchg
cmp
dec
addr16
mov
rol
cs
adc
pop
jno
repz
add
(bad)
stc
dec
aaa
(bad)
xor
cdq
in
xchg
and
fcom
cmps
lahf
je
adc
sbb
mov
fisub
add
add
add
push
sti
in
lds
lea
add
mov
push
addr16
mov
sub
aas
pop
(bad)
sbb
inc
pop
nop
rcl
popf
in
pop
add
add
adc
cmp
cmp
and
ret
sub
inc
popa
dec
scas
mov
mov
xchg
add
cmps
sub
setno
xor
mov
int
call
fistp
movs
add
push
cmp
(bad)
imul
int3
mov
xchg
cmc
push
sbb
ds
pop
xchg
lds
fwait
cdq
jno
lock
and
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
mov
imul
outs
cld
adc
xor
pusha
jne
xchg
inc
mov
push
cli
ja
pop
daa
add
xor
mov
leave
mov
ins
pop
jl
pop
sub
adc
inc
mov
add
cli
int3
movs
sub
test
push
mov
push
call
add
retf
lock
fadd
adc
add
adc
or
mov
or
and
add
jno
sub
xchg
mov
call
mov
mov
std
enter
ins
xlat
mov
ins
add
mov
sub
or
add
mov
inc
(bad)
cmp
daa
in
pop
nop
cmp
inc
mov
push
dec
xor
add
pop
mov
pop
mov
les
test
pop
test
leave
mov
sbb
sub
mov
lock
data16
dec
sti
pop
push
retf
test
mov
dec
push
in
or
fdiv
dec
add
dec
mov
neg
or
add
cmp
das
pop
mov
jo
nop
add
mov
mov
push
int
xchg
add
lds
or
cmp
sub
mov
adc
and
push
add
xor
inc
inc
std
or
sbb
nop
add
and
cld
xor
xchg
add
sub
icebp
cwde
xchg
rol
or
and
or
ret
hlt
add
adc
and
ror
or
adc
dec
nop
pop
jl
adc
sub
push
adc
call
retf
loopne
add
or
mov
pop
sub
fs
sub
movs
scas
xor
or
xor
adc
adc
rol
or
or
add
xchg
(bad)
into
add
push
lods
adc
or
and
call
or
pop
mov
mov
adc
mov
sbb
cdq
lock
or
cwde
mov
sbb
pop
jno
inc
pusha
or
dec
fcmovne
mov
(bad)
shl
ss
shr
pusha
in
ret
mov
or
retf
and
sub
xor
aas
in
and
sbb
add
inc
rol
add
or
inc
sub
add
add
add
add
or
add
or
jo
add
mov
int3
xchg
jecxz
mov
mov
mov
jl
sbb
lahf
xchg
jg
add
jae
and
mov
stos
(bad)
mov
mov
retf
add
sbb
aad
jecxz
es
pusha
lods
mov
add
hlt
test
inc
mov
pusha
mov
push
add
adc
lea
adc
and
xor
and
mov
or
inc
fwait
nop
pop
cs
cmp
adc
int3
mov
mov
ficomp
jg
outs
imul
sub
lea
dec
add
push
xor
inc
test
mov
lods
(bad)
xlat
adc
adc
enter
pop
mov
test
lahf
nop
jg
test
addr16
pop
adc
lea
inc
cmp
jbe
and
and
jbe
inc
aad
test
cwde
mov
shl
cs
aam
cmp
mov
pop
(bad)
icebp
mov
in
xor
dec
add
xchg
cmps
loope
retf
push
dec
adc
adc
dec
adc
push
jns
adc
and
in
mov
rol
loope
or
dec
mov
movs
ror
test
rcr
sub
add
and
dec
arpl
or
loopne
sub
dec
add
mov
push
add
inc
cmp
xor
sbb
add
dec
lock
add
xor
scas
jo
xchg
cmps
jo
iret
xchg
add
inc
nop
add
and
push
push
add
icebp
dec
aaa
add
bound
aam
aas
lock
setge
jmp
jns
rdpmc
jmp
(bad)
mov
inc
jp
xor
sbb
cdq
inc
sahf
rol
add
loop
xor
nop
test
add
add
sub
jnp
adc
mov
add
push
inc
and
and
add
sub
inc
or
sub
into
add
inc
lock
push
or
rol
sahf
add
sbb
sbb
add
or
inc
retf
aad
sub
xchg
test
mov
ret
inc
add
inc
add
and
nop
jg
and
or
js
inc
push
out
cld
and
push
add
inc
test
fcom
push
int
pop
ins
xor
pop
add
push
lods
in
retf
mov
mov
or
scas
add
add
sbb
xchg
dec
or
in
add
and
add
or
inc
sub
add
add
or
add
or
rcr
out
loope
mov
mov
xchg
inc
adc
sbb
inc
push
mov
xor
loopne
cmp
xchg
and
cli
fs
popa
(bad)
mov
jp
cmps
pop
add
add
icebp
xchg
stc
sysret
add
sub
test
add
(bad)
icebp
pop
xchg
fs
cdq
popa
mov
(bad)
(bad)
scas
ss
and
adc
fsub
dec
sahf
mov
jno
push
(bad)
shl
pop
cmp
gs
call
push
mov
jno
inc
test
sub
xor
inc
xor
mov
retf
rcl
inc
inc
mov
add
jecxz
xchg
retf
inc
add
jns
in
or
pop
(bad)
cdq
sub
mov
sbb
mov
data16
mov
jae
add
dec
fst
je
mov
adc
pop
mov
xchg
jg
inc
sbb
mov
sub
adc
or
nop
mov
adc
aaa
push
sub
in
add
inc
cmp
aad
and
push
jns
bound
push
add
push
ror
and
and
add
sub
add
cmp
adc
adc
or
cld
adc
aas
sub
xor
cmp
xchg
and
add
add
fsub
ss
mov
cdq
movs
or
iret
aas
mov
xchg
inc
add
mov
add
push
jmp
cwde
add
lock
or
add
sbb
xchg
xchg
adc
push
lods
dec
push
(bad)
inc
sub
add
add
or
inc
sub
add
add
or
add
or
rcr
inc
push
cmp
and
mov
and
(bad)
fcom
mov
popa
or
leave
and
xchg
sub
pop
fwait
jg
adc
sbb
xor
cdq
cdq
inc
shl
loopne
and
cmp
pop
mov
shr
sub
shr
mov
sahf
inc
add
lods
fdivr
and
adc
das
adc
push
and
add
cmp
xor
push
sub
mov
aas
sbb
jb
xor
pop
mov
cwde
movs
push
fadd
and
xor
pop
cmp
add
or
(bad)
push
call
dec
jb
(bad)
enter
and
arpl
inc
aad
inc
sbb
cmpps
and
sar
repnz
test
inc
lock
and
cs
retf
cmp
inc
dec
sub
daa
sar
daa
(bad)
les
test
ffreep
scas
sub
aam
rol
pop
add
mov
mov
cmps
inc
arpl
or
sar
cmp
push
adc
xor
xor
call
jmp
inc
lahf
add
movs
push
push
add
jo
xor
aas
push
fs
inc
add
jecxz
adc
and
icebp
sbb
retf
shl
(bad)
xchg
imul
repz
cmc
test
and
mov
mov
adc
shl
add
call
adc
jae
add
pop
je
mov
cmp
rcr
inc
or
dec
inc
or
inc
cmp
rol
push
or
call
movs
inc
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
pop
ret
xchg
pop
cli
jnp
jecxz
mov
adc
push
out
push
adc
and
dec
mov
or
dec
push
shl
cmps
mov
sub
pop
mov
xchg
dec
push
mov
int
repnz
xchg
or
mov
cmp
fcom
js
mov
lock
repz
xchg
xlat
pop
push
pop
call
inc
lods
push
cs
jmp
xchg
adc
sbb
pusha
add
mov
add
xor
xor
pusha
mov
mov
dec
dec
pop
xor
adc
addr16
and
data16
adc
or
sbb
dec
push
sub
loop
test
push
pop
adc
inc
cwde
cdq
cmps
lds
dec
mov
adc
and
push
call
and
mov
inc
mov
pushf
sbb
and
sbb
movs
fidivr
pop
add
test
and
ret
jg
dec
icebp
sbb
or
test
cwde
adc
cmp
bound
xor
cmp
adc
or
or
test
inc
cmp
adc
aam
rcr
adc
xor
push
bound
mov
add
cmps
dec
and
nop
lock
cmp
popa
or
cmp
call
test
add
mov
pop
fadd
xor
jbe
dec
add
je
inc
xor
xor
inc
mov
inc
sbb
jle
rol
or
add
or
cld
mov
pusha
or
inc
cmps
lea
mov
js
cld
jae
xor
int3
adc
rol
pop
outs
mov
shr
pop
test
add
arpl
das
xor
and
test
aas
mov
or
xchg
mov
push
xchg
mov
cmp
movaps
add
add
cwde
and
dec
or
and
cmc
and
es
adc
sub
mov
enter
jno
sub
ins
xor
push
dec
or
push
cmp
cld
shr
aas
sbb
sub
pusha
pusha
mov
mov
xchg
out
pop
mov
pop
sub
cld
add
sbb
add
sbb
xor
and
adc
test
sub
(bad)
and
add
pusha
nop
enter
adc
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
and
cli
mov
mov
call
mov
(bad)
stos
xchg
jecxz
inc
nop
sub
xchg
fwait
xchg
sub
(bad)
loop
movs
inc
push
adc
xchg
add
pop
push
inc
push
mov
fcomp
push
mov
int
add
cmps
add
adc
rol
or
in
inc
in
push
lods
mov
mov
cmp
loop
jp
test
mov
retf
(bad)
fadd
add
pop
xor
xchg
dec
rcr
add
mov
mov
sub
pop
or
mov
xor
xor
jo
pop
ficom
and
inc
fcom
aad
push
push
mov
add
lea
adc
or
pop
and
inc
cmp
inc
xor
xor
and
add
adc
push
sub
rol
cs
pop
mov
or
paddusb
cmovle
jg
adc
dec
jle
dec
mov
xlat
std
and
cmp
or
popf
adc
clc
popa
adc
dec
mov
loopne
push
addr16
adc
add
or
adc
cwde
xor
or
mov
inc
and
push
and
add
inc
mov
xor
pop
push
xor
iret
adc
js
ret
add
mov
sub
xchg
add
cmp
add
inc
adc
mov
rol
cmp
push
or
push
mov
jo
sbb
dec
mov
stc
(bad)
push
fnsave
or
hlt
nop
sbb
add
jb
add
jl
push
or
mov
in
icebp
inc
adc
or
cmps
aam
inc
mov
xchg
mov
ret
sub
int
mov
cmp
cmc
dec
and
mov
mov
cld
mov
and
(bad)
add
sbb
and
les
rol
sbb
inc
and
or
fwait
enter
ins
jmp
(bad)
rcl
test
es
inc
ror
push
fneni(8087
sub
add
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
in
or
cmp
inc
add
shl
clc
jnp
mov
adc
popa
push
and
or
add
sbb
cld
push
in
pop
into
pushf
unpckhps
and
inc
xchg
ss
sub
test
xchg
mov
inc
dec
add
ss
push
push
push
mov
rol
bound
pop
ins
fmul
inc
sbb
push
in
sub
loope
and
add
cwde
sar
inc
test
leave
dec
test
popa
mov
dec
ror
daa
push
ins
add
daa
retf
dec
int3
push
mov
adc
stos
sub
ret
adc
jp
rol
sbb
sub
and
dec
add
add
ds
inc
test
add
test
pop
cs
(bad)
mov
adc
loop
and
inc
inc
cmp
xor
mov
dec
out
sbb
and
rcl
cwde
and
jmp
rol
push
mov
inc
inc
lea
push
xor
dec
add
test
out
cwde
loopne
adc
add
iret
and
jo
push
aaa
push
shl
jmp
(bad)
loopne
or
aam
inc
js
add
dec
add
and
cmp
pop
mov
mov
or
out
and
mov
add
aad
call
jno
push
in
jge
fimul
sub
les
push
sbb
mov
xor
mov
inc
add
in
jb
or
shl
inc
add
adc
adc
jmp
mov
adc
add
cs
(bad)
loopne
loope
sub
push
sub
dec
push
jns
adc
sub
push
inc
sbb
mov
xor
(bad)
dec
ja
dec
dec
call
dec
fchs
or
jnp
and
shr
push
popa
(bad)
mov
or
sbb
inc
leave
or
out
inc
dec
or
or
ret
sub
aaa
movs
sub
retf
mov
inc
mov
sahf
pushf
adc
cmps
add
pop
ins
mov
mov
inc
sub
or
pop
add
call
icebp
pinsrw
lock
cmp
adc
rcr
ror
or
add
jno
mov
add
js
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
or
mov
lods
test
adc
sbb
or
lods
sahf
dec
xchg
inc
ds
ret
dec
lea
loopne
add
retf
mov
push
loope
xchg
iret
out
xchg
adc
leave
icebp
(bad)
or
inc
xor
test
shl
test
push
leave
ret
lds
cmc
dec
or
pop
movs
sub
mov
ins
fcom
(bad)
daa
dec
sahf
cmp
pop
mov
imul
add
popa
shr
stos
mov
(bad)
adc
neg
push
mov
inc
adc
cli
hlt
aad
loop
mov
cdq
test
mov
mov
dec
push
in
mov
sub
xor
fcmove
dec
pop
xchg
jecxz
out
and
retf
sbb
shl
xor
xor
adc
pop
push
test
add
mov
jae
les
add
inc
test
pop
es
popa
ret
or
popa
mov
rcl
mov
fidivr
jns
add
add
cld
and
aas
inc
or
add
push
inc
icebp
dec
pop
and
inc
pusha
ret
push
add
test
adc
(bad)
sbb
lock
sbb
in
sbb
push
push
in
or
adc
mov
dec
add
add
or
or
mov
shl
or
es
shl
dec
dec
loop
or
test
rol
sbb
cwde
mov
pop
adc
dec
adc
inc
add
xor
mov
adc
and
and
dec
and
sbb
push
addr16
add
fist
mov
test
(bad)
xchg
inc
div
ret
adc
xchg
pop
xchg
pop
pushf
ror
xchg
aam
cmps
add
mov
lods
pusha
mov
mov
inc
or
(bad)
or
pusha
rol
add
xor
or
jnp
inc
or
xchg
jl
or
xor
add
call
ficom
leave
xor
xchg
adc
adc
mov
pusha
and
sbb
add
or
adc
rol
sbb
popa
push
xor
xor
inc
sbb
inc
lds
or
sub
lock
inc
pushf
and
inc
push
mov
add
add
push
add
add
add
add
or
add
or
mov
rol
mov
ret
or
mov
mov
adc
xor
mov
push
inc
add
adc
inc
add
xchg
jecxz
dec
xchg
push
jno
push
pusha
sbb
ss
jle
les
inc
int3
aas
add
cld
arpl
retf
push
mov
pusha
mov
push
cmp
push
sbb
add
mov
and
add
bound
fsub
and
(bad)
call
jl
cld
arpl
test
and
sub
or
aaa
or
cmp
xchg
jb
xor
or
adc
push
pop
inc
jp
add
pop
(bad)
fist
inc
pushf
or
test
and
and
xchg
lds
rcl
neg
shl
adc
out
lods
jns
push
dec
pop
mov
shl
movs
adc
push
and
and
adc
rol
or
and
inc
jo
(bad)
enter
inc
adc
pushf
cld
jae
xor
push
add
dec
cld
and
push
les
or
mov
xor
(bad)
rcl
nop
loopne
(bad)
mov
adc
les
push
inc
and
or
mov
xchg
leave
aas
xchg
cwde
loopne
adc
mov
cmp
icebp
iret
add
pop
add
aas
rcl
xor
or
push
js
add
aaa
adc
add
or
cwde
mov
jg
add
jecxz
add
fs
or
pop
mov
out
mov
and
xor
xchg
(bad)
cs
xor
push
adc
jl
loope
out
rcl
int3
push
jo
loopne
jp
dec
xor
ret
inc
fwait
cld
rcl
mov
or
loopne
lds
xor
mov
inc
and
and
inc
addr16
adc
pop
cdq
pusha
add
adc
add
push
cmps
das
push
xchg
inc
adc
sbb
nop
add
sbb
dec
push
xor
inc
adc
lods
push
sub
dec
sub
in
xchg
add
mov
inc
or
mov
and
ret
pop
pop
in
or
xor
pusha
add
mov
pusha
sbb
mov
mov
mov
pusha
(bad)
cmp
inc
bound
or
inc
inc
add
add
cmp
cmp
test
push
inc
or
stos
inc
rcl
add
sbb
xchg
into
(bad)
lock
arpl
inc
inc
xor
dec
aas
fst
pop
imul
add
cmp
adc
or
add
add
dec
add
and
add
add
add
popa
xor
sbb
sub
add
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
xchg
add
popa
std
std
(bad)
scas
xchg
les
mov
mov
retf
add
not
in
test
sub
aad
(bad)
outs
dec
call
inc
(bad)
repnz
leave
lods
test
mov
std
mov
outs
sub
leave
xchg
push
cmps
jbe
(bad)
jmp
(bad)
fiadd
(bad)
(bad)
out
dec
(bad)
cmc
add
shr
(bad)
out
(bad)
clc
cwde
mov
or
data16
or
les
lds
xchg
push
add
(bad)
add
loopne
les
mov
add
ffree
fwait
arpl
(bad)
(bad)
cmp
push
(bad)
mov
shl
std
fdiv
jmp
out
(bad)
out
icebp
rcr
in
clc
mov
test
(bad)
jmp
repz
std
fsubr
add
add
sbb
cld
ins
int3
mov
cld
mov
mov
std
bnd
cli
stc
mov
xor
add
lods
add
add
mov
cld
ficom
int3
push
(bad)
(bad)
adc
stc
test
test
call
inc
std
cli
enter
(bad)
test
fstp
xlat
push
daa
add
add
imul
stc
(bad)
(bad)
(bad)
and
mov
cli
iret
adc
in
or
mov
lock
cli
in
push
jp
repnz
fndisi(8087
in
mov
xchg
pop
adc
mov
test
repz
stc
test
(bad)
stos
cmp
or
les
lods
outs
add
mov
les
(bad)
out
mov
jne
(bad)
cs
sub
(bad)
fimul
mov
bound
or
xchg
inc
push
sub
fisttp
cli
scas
add
or
adc
call
add
pop
ret
jp
jge
xchg
jnp
lea
rcr
test
(bad)
test
mov
or
add
enter
xor
mov
hlt
lods
add
lock
scas
add
adc
idiv
clc
les
fwait
jnp
call
add
cli
push
fcmove
and
lea
std
jmp
add
scas
or
(bad)
(bad)
mov
stc
idiv
push
sbb
mov
repz
jmp
rol
mov
jmp
loopne
and
add
ret
sbb
ror
or
out
add
jmp
shl
stc
in
div
in
fadd
jmp
pop
jmp
xchg
bound
loopne
xchg
lods
fwait
or
in
(bad)
loop
push
lea
cdq
xchg
movs
test
(bad)
jmp
lea
test
shl
fisttp
fdiv
call
aaa
in
fild
cmc
fisttp
cli
fadd
out
rcl
cld
rol
cmps
or
xchg
pop
mov
inc
add
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
push
or
xchg
and
cmp
outs
rol
pop
and
fsubr
das
dec
mov
cmp
test
test
inc
adc
push
rol
dec
add
inc
mov
add
shl
xor
sub
push
mov
pop
sti
stc
shl
inc
mov
sbb
(bad)
dec
push
or
pusha
rcl
mov
stos
ret
pop
mov
test
pushf
cmps
mov
mov
bound
mov
fucomp
fcmovbe
sti
loop
mov
dec
gs
sbb
jg
retf
add
mov
or
mov
add
or
dec
cmps
or
inc
xlat
xor
iret
jo
hlt
stos
dec
inc
bound
adc
or
push
mov
xchg
pop
add
aas
imul
loop
rol
loopne
pusha
call
(bad)
loopne
add
dec
xchg
jmp
jg
xchg
fistp
(bad)
jmp
and
adc
adc
inc
add
call
js
add
loope
pusha
dec
and
loopne
add
mov
pop
push
and
cmp
retf
adc
repz
add
push
cmp
inc
or
call
loopne
(bad)
cmp
rol
sub
or
add
add
xor
or
mov
loopne
inc
and
je
gs
test
ror
cmp
nop
daa
or
jne
adc
nop
adc
add
enter
push
xchg
popa
add
xchg
push
dec
xchg
inc
add
add
rcr
jbe
inc
and
jo
add
or
lock
inc
jb
in
push
sub
add
and
mov
rcl
into
push
push
movs
mov
rol
sub
add
inc
or
mov
sub
mov
mov
ror
sbb
imul
sub
ret
adc
in
inc
sysret
(bad)
loopne
add
test
and
or
dec
xor
bound
jmp
mov
popa
sub
sub
mov
push
test
add
add
mov
bound
int3
loop
mov
add
daa
test
push
or
push
int
cmp
bound
add
pop
aam
dec
sbb
popa
xchg
sub
adc
sbb
loopne
add
add
add
adc
sub
cmps
jo
mov
inc
lods
rol
imul
xchg
adc
cmp
inc
inc
sbb
sub
sub
test
cmp
push
inc
and
sbb
sbb
sbb
in
hlt
rol
or
or
(bad)
cmp
and
push
test
ret
and
dec
push
jg
scas
enter
mov
sub
adc
adc
sub
pusha
add
jl
add
add
xchg
sbb
jle
out
or
mov
push
add
les
ret
pusha
popa
stc
in
inc
xor
and
or
adc
test
retf
cmp
sbb
add
pop
lahf
std
idiv
add
sub
xchg
inc
cmp
stos
or
inc
jl
or
pusha
push
in
pop
cs
jmp
paddd
add
push
outs
js
or
mov
add
rol
in
lds
xchg
xchg
sbb
enter
add
add
and
jbe
dec
int3
repz
inc
sbb
inc
add
inc
ror
rcr
sub
test
push
add
test
cmps
mov
and
js
add
movs
add
cs
xchg
shl
test
add
and
add
hlt
and
(bad)
call
arpl
push
pop
add
mov
cdq
inc
xchg
add
popa
loopne
jno
adc
rol
cmp
ror
je
sbb
xor
rol
pusha
add
or
add
shl
add
push
js
and
mov
repnz
add
add
and
das
and
mov
sahf
push
cmps
xchg
pop
push
sub
add
hlt
aaa
xor
mov
xchg
pop
mov
add
in
pushf
xor
mov
rcl
inc
jl
mov
mov
add
sbb
or
mov
adc
arpl
mov
push
mov
add
(bad)
rol
leave
adc
scas
jp
or
bound
sbb
(bad)
(bad)
lock
mov
add
bound
sbb
sub
ins
adc
outs
or
add
js
or
add
dec
pop
push
mov
rcr
loopne
push
push
pushf
or
or
mov
xchg
test
lods
pop
test
(bad)
mov
add
xor
adc
and
add
jo
sbb
inc
clts
push
add
rcl
xchg
push
and
adc
jge
sub
adc
sub
inc
add
pop
scas
jo
push
test
adc
mov
jl
sbb
xchg
mov
push
int3
test
ds
xor
sbb
add
call
xchg
fcmovb
push
push
pusha
push
xor
ror
xor
adc
cwde
add
add
clc
inc
pop
nop
add
xlat
sti
mov
inc
mov
out
mov
push
add
cmp
fsub
or
add
loope
add
sbb
ror
add
cmp
xchg
pop
dec
add
push
rcr
aaa
add
inc
pusha
test
sbb
push
jae
inc
cmp
lock
repnz
enter
rol
push
popa
add
xor
pop
cmp
loope
addr16
movs
push
dec
bound
mov
add
and
rol
adc
lods
jae
mov
xchg
mov
push
xchg
xor
sbb
ror
vandps
retf
mov
mov
xchg
aaa
inc
sub
mov
add
into
mov
mov
out
cmp
adc
add
add
jge
and
push
int
xor
xchg
add
inc
pop
sbb
cmps
xor
loopne
or
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
stc
sbb
scas
mov
or
pop
pusha
push
rol
push
es
sub
lahf
das
mov
cmps
dec
dec
call
adc
sar
std
(bad)
icebp
and
dec
cwde
ror
movs
fs
ja
fdivrp
adc
scas
pop
add
cmps
bound
es
adc
pop
pop
xchg
mov
adc
aad
push
cld
push
dec
jno
sub
scas
or
sbb
push
mov
(bad)
dec
mov
pop
pop
adc
movs
and
dec
xchg
sar
lahf
adc
shl
les
add
daa
adc
jb
shr
aas
pusha
std
or
add
inc
mov
pop
push
pop
mov
sbb
sub
lea
push
or
add
mov
mov
(bad)
lgs
cmp
xchg
lock
test
fwait
inc
sbb
add
add
stc
add
or
inc
sub
add
add
add
add
adc
inc
and
ja
fbld
cmp
ins
push
test
enter
(bad)
cmp
aas
outs
inc
hlt
xchg
add
fild
sbb
(bad)
cld
stc
sti
xchg
xor
sbb
cs
in
mov
and
and
add
je
psubsb
loope
daa
push
iret
jg
sbb
add
int3
stos
or
push
and
add
adc
dec
lock
popf
dec
mov
fnstsw
retf
mov
pop
add
mov
shr
adc
or
add
mov
add
sbb
int3
sbb
ins
les
push
les
or
cmp
(bad)
push
sub
pusha
lock
adc
ins
cmp
mov
out
std
sbb
test
pop
ficom
add
and
add
or
inc
sub
add
add
add
add
stc
sbb
scas
mov
or
pop
pusha
push
rol
push
es
sub
lahf
das
mov
cmps
dec
dec
call
adc
sar
std
(bad)
icebp
and
dec
cwde
ror
movs
fs
ja
fdivrp
adc
scas
pop
add
cmps
bound
es
adc
pop
pop
xchg
mov
adc
aad
push
cld
push
dec
jno
sub
scas
or
sbb
push
mov
(bad)
dec
mov
pop
pop
adc
movs
and
dec
xchg
sar
lahf
adc
shl
les
add
daa
adc
jb
shr
aas
pusha
std
or
add
inc
mov
pop
push
pop
mov
sbb
sub
lea
push
or
add
mov
mov
(bad)
lgs
cmp
xchg
lock
test
fwait
inc
sbb
add
add
stc
add
or
inc
sub
add
add
add
add
adc
inc
and
ja
fbld
cmp
ins
push
test
enter
(bad)
cmp
aas
outs
inc
hlt
xchg
add
fild
sbb
(bad)
cld
stc
sti
xchg
xor
sbb
cs
in
mov
and
and
add
je
psubsb
loope
daa
push
iret
jg
sbb
add
int3
stos
or
push
and
add
adc
dec
lock
popf
dec
mov
fnstsw
retf
mov
pop
add
mov
shr
adc
or
add
mov
add
sbb
int3
sbb
ins
les
push
les
or
cmp
(bad)
push
sub
pusha
lock
adc
ins
cmp
mov
out
std
sbb
test
pop
ficom
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
add
cld
or
rcr
push
sbb
jle
cmp
add
or
cmp
in
inc
xor
push
and
cli
push
imul
int3
pop
xor
or
or
loopne
adc
dec
inc
dec
test
mov
fadd
inc
push
ins
and
add
and
sahf
cmp
mov
or
add
pop
in
(bad)
mov
(bad)
out
mov
nop
repz
xor
or
ins
test
test
dec
int3
push
stos
and
mov
leave
(bad)
stos
adc
or
or
cwde
inc
loopne
mov
xchg
mov
add
jmp
adc
sub
pushf
es
pop
test
xchg
inc
push
call
ret
rcr
(bad)
outs
or
hlt
pop
mov
outs
loope
push
jne
sar
ins
push
sbb
push
adc
and
mov
pushf
jle
xor
inc
test
inc
add
push
add
lock
mov
push
and
inc
loopne
sbb
inc
sbb
daa
mov
sub
push
cmp
pop
cld
jecxz
inc
pop
push
aam
or
add
gs
das
fbstp
inc
fldenv
push
stc
ret
or
add
jae
or
sbb
rcl
loop
ss
(bad)
push
push
scas
jno
nop
and
rcl
dec
add
add
push
adc
or
push
cmp
xor
add
loope
or
loopne
inc
ja
icebp
dec
sbb
in
les
fyl2xp1
jecxz
cmp
and
in
inc
nop
popf
add
adc
inc
sbb
push
je
add
call
hlt
int3
aas
inc
and
cwde
daa
push
out
mov
push
inc
or
xor
adc
or
inc
mov
and
push
add
and
and
push
std
push
in
sbb
xor
sbb
cld
jae
sbb
aas
loope
xor
or
sub
push
fsub
cmps
xor
cmp
dec
or
xchg
adc
sti
in
ret
add
inc
pushf
xchg
dec
cmp
add
enter
repz
mov
pop
mov
push
fidiv
push
cld
ror
ds
inc
pop
or
bound
inc
add
adc
test
ret
repz
pop
add
or
mov
(bad)
loope
retf
arpl
aas
pop
cld
sub
push
cld
push
ret
push
and
mov
inc
sub
inc
test
adc
fnstcw
out
lock
or
add
aas
dec
fsub
adc
and
sbb
inc
add
mov
xchg
add
jne
sbb
push
and
add
adc
clc
aas
pop
cld
arpl
jmp
xchg
syscall
pop
push
cmp
add
into
aas
data16
inc
out
sub
ss
xor
in
push
dec
or
popf
add
sbb
and
out
pop
xchg
leave
add
lock
sbb
or
pop
fs
es
add
mov
aaa
(bad)
jl
movaps
in
push
ins
hlt
add
rol
das
pushf
pushf
xor
test
ret
jo
(bad)
in
in
fimul
add
inc
rol
data16
cli
dec
pushw
fs
xchg
inc
lock
push
adc
mov
stos
adc
cmp
add
imul
daa
clc
adc
push
xor
cwde
add
pop
adc
loope
sbb
add
xchg
or
add
sub
sub
in
sub
daa
adc
sbb
mov
sbb
aaa
adc
push
(bad)
nop
inc
sbb
xor
fstp
ror
clc
adc
jecxz
sar
add
add
pushf
add
sbb
adc
cwde
add
test
xchg
rol
and
or
mov
adc
inc
es
add
and
or
push
fwait
and
mov
inc
and
pop
xor
adc
js
and
sbb
xchg
cld
ret
push
pop
push
adc
inc
adc
les
(bad)
ror
out
inc
mov
popf
inc
inc
loop
add
add
ret
aas
jl
adc
and
adc
ret
aas
add
add
xor
or
adc
imul
or
and
inc
jo
add
jns
inc
mov
inc
add
ja
mov
sbb
jo
unpcklps
xor
mov
mov
xor
adc
repz
cdq
or
pop
mov
push
loopne
les
clc
inc
mov
ret
movs
(bad)
dec
xlat
xor
ss
mov
shr
jp
xchg
cmps
outs
outs
inc
dec
xchg
in
mov
mov
push
and
add
xchg
adc
int3
mov
ss
add
add
jmp
or
mov
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
add
or
clc
out
leave
xor
sbb
push
adc
or
jb
sub
inc
adc
bound
fstp
add
adc
and
and
add
mov
dec
loopne
lea
sbb
pusha
stos
pusha
mov
add
mov
retf
popf
mov
(bad)
mov
pop
rcl
push
inc
xor
or
fnstsw
cmp
les
sbb
imul
movs
adc
push
mov
inc
cdq
pusha
rcl
add
test
retf
mov
ficom
adc
loope
les
push
in
xchg
mov
and
cli
mov
test
call
pop
jl
loopne
xchg
fwait
call
cmp
scas
xchg
adc
scas
fistp
jbe
inc
mov
outs
clc
loopne
xchg
fwait
cmp
call
sbb
inc
jmp
or
test
sahf
(bad)
jmp
xchg
fst
adc
xor
ret
sub
mov
sbb
sub
or
pop
cmp
add
adc
inc
mov
inc
cmp
arpl
inc
pop
push
adc
add
adc
cmp
inc
sbb
add
pop
adc
mov
and
sbb
push
xchg
add
or
inc
sub
test
xor
lock
add
or
sbb
dec
add
mov
nop
inc
or
pop
inc
adc
mov
or
sub
add
inc
ret
aas
push
int3
mov
sub
test
rol
dec
pop
sbb
daa
ss
daa
sbb
cmp
add
mov
retf
aas
dec
or
add
cmp
or
inc
fimul
call
and
clc
and
sbb
inc
mov
icebp
int3
inc
add
mov
int3
pusha
or
pop
cmp
add
in
lock
inc
lock
pop
jo
add
adc
cmps
mov
ficom
adc
add
push
leave
les
inc
test
dec
sub
cmps
jo
mov
inc
lods
rol
add
pop
add
movs
test
jmp
or
inc
inc
fwait
xchg
push
xchg
push
push
pop
sbb
add
aas
xor
inc
dec
rol
inc
cmp
dec
adc
add
mov
js
cmp
or
mov
(bad)
call
in
inc
mov
cmp
rol
in
inc
mov
shl
adc
mov
xchg
or
or
push
cmp
sub
test
add
pop
dec
les
ret
pusha
inc
push
aam
mov
adc
and
sub
(bad)
sub
adc
pushf
push
jmp
(bad)
rcl
push
or
or
pop
cwde
arpl
inc
js
std
movlps
fnsave
sbb
rol
addr16
adc
jmp
(bad)
fild
adc
dec
and
add
adc
test
mov
mov
sub
inc
cmp
les
pop
lock
inc
enter
pop
ret
or
sbb
cld
jae
in
retf
adc
pop
pop
inc
and
cmp
or
call
cld
add
aas
(bad)
dec
add
xchg
movups
fsubr
pop
or
inc
sbb
mov
loopne
add
and
sub
lock
xor
out
jge
adc
or
xor
ja
dec
sbb
mov
mov
and
xor
dec
and
aam
pop
call
mov
dec
push
or
sbb
push
and
adc
lahf
sub
pop
and
inc
sbb
jae
rol
imul
cmp
scas
and
data16
add
add
sub
sub
and
pop
lahf
or
sub
mov
add
rcl
and
icebp
mov
inc
loopne
push
rol
sbb
nop
scas
or
adc
and
mov
mov
or
push
add
xor
add
and
adc
inc
sub
and
push
lock
cs
or
loopne
inc
xor
cmp
int3
mov
xor
or
sbb
or
icebp
or
and
int3
jo
add
loope
sub
add
leave
int3
inc
cld
ret
cdq
(bad)
jo
aas
sub
nop
push
adc
mov
mov
adc
or
test
inc
sbb
retf
add
add
and
xor
ds
and
iret
sub
or
lock
and
or
push
clc
add
lock
call
sbb
cs
pusha
ret
adc
xchg
daa
pusha
loopne
mov
mov
rcl
clc
mov
sub
mov
pop
aaa
std
(bad)
movs
push
pusha
pop
xchg
or
aad
cld
add
loope
loopne
inc
and
repnz
adc
xor
sub
loop
pop
lods
sub
push
or
mov
cmp
xchg
add
cwde
loope
add
jo
add
paddb
or
mov
add
pusha
cmp
mov
and
and
add
or
inc
sub
add
add
add
add
stc
sbb
scas
mov
or
pop
pusha
push
rol
push
es
sub
lahf
das
mov
cmps
dec
dec
call
adc
sar
std
(bad)
icebp
and
dec
cwde
ror
movs
fs
ja
fdivrp
adc
scas
pop
add
cmps
bound
es
adc
pop
pop
xchg
mov
adc
aad
push
cld
push
dec
jno
sub
scas
or
sbb
push
mov
(bad)
dec
mov
pop
pop
adc
movs
and
dec
xchg
sar
lahf
adc
shl
les
add
daa
adc
jb
shr
aas
pusha
std
or
add
inc
mov
pop
push
pop
mov
sbb
sub
lea
push
or
add
mov
mov
(bad)
lgs
cmp
xchg
lock
test
fwait
inc
sbb
add
add
stc
add
or
inc
sub
add
add
add
add
adc
inc
and
ja
fbld
cmp
ins
push
test
enter
(bad)
cmp
aas
outs
inc
hlt
xchg
add
fild
sbb
(bad)
cld
stc
sti
xchg
xor
sbb
cs
in
mov
and
and
add
je
psubsb
loope
daa
push
iret
jg
sbb
add
int3
stos
or
push
and
add
adc
dec
lock
popf
dec
mov
fnstsw
retf
mov
pop
add
mov
shr
adc
or
add
mov
add
sbb
int3
sbb
ins
les
push
les
or
cmp
(bad)
push
sub
pusha
lock
adc
ins
cmp
mov
out
std
sbb
test
pop
ficom
add
and
add
or
inc
sub
add
add
add
add
stc
sbb
scas
mov
or
pop
pusha
push
rol
push
es
sub
lahf
das
mov
cmps
dec
dec
call
adc
sar
std
(bad)
icebp
and
dec
cwde
ror
movs
fs
ja
fdivrp
adc
scas
pop
add
cmps
bound
es
adc
pop
pop
xchg
mov
adc
aad
push
cld
push
dec
jno
sub
scas
or
sbb
push
mov
(bad)
dec
mov
pop
pop
adc
movs
and
dec
xchg
sar
lahf
adc
shl
les
add
daa
adc
jb
shr
aas
pusha
std
or
add
inc
mov
pop
push
pop
mov
sbb
sub
lea
push
or
add
mov
mov
(bad)
lgs
cmp
xchg
lock
test
fwait
inc
sbb
add
add
stc
add
or
inc
sub
add
add
add
add
adc
inc
and
ja
fbld
cmp
ins
push
test
enter
(bad)
cmp
aas
outs
inc
hlt
xchg
add
fild
sbb
(bad)
cld
stc
sti
xchg
xor
sbb
cs
in
mov
and
and
add
je
psubsb
loope
daa
push
iret
jg
sbb
add
int3
stos
or
push
and
add
adc
dec
lock
popf
dec
mov
fnstsw
retf
mov
pop
add
mov
shr
adc
or
add
mov
add
sbb
int3
sbb
ins
les
push
les
or
cmp
(bad)
push
sub
pusha
lock
adc
ins
cmp
mov
out
std
sbb
test
pop
ficom
add
and
add
or
inc
sub
add
add
add
add
stc
sbb
scas
mov
or
pop
pusha
push
rol
push
es
sub
lahf
das
mov
cmps
dec
dec
call
adc
sar
std
(bad)
icebp
and
dec
cwde
ror
movs
fs
ja
fdivrp
adc
scas
pop
add
cmps
bound
es
adc
pop
pop
xchg
mov
adc
aad
push
cld
push
dec
jno
sub
scas
or
sbb
push
mov
(bad)
dec
mov
pop
pop
adc
movs
and
dec
xchg
sar
lahf
adc
shl
les
add
daa
adc
jb
shr
aas
pusha
std
or
add
inc
mov
pop
push
pop
mov
sbb
sub
lea
push
or
add
mov
mov
(bad)
lgs
cmp
xchg
lock
test
fwait
inc
sbb
add
add
stc
add
or
inc
sub
add
add
add
add
adc
inc
and
ja
fbld
cmp
ins
push
test
enter
(bad)
cmp
aas
outs
inc
hlt
xchg
add
fild
sbb
(bad)
cld
stc
sti
xchg
xor
sbb
cs
in
mov
and
and
add
je
psubsb
loope
daa
push
iret
jg
sbb
add
int3
stos
or
push
and
add
adc
dec
lock
popf
dec
mov
fnstsw
retf
mov
pop
add
mov
shr
adc
or
add
mov
add
sbb
int3
sbb
ins
les
push
les
or
cmp
(bad)
push
sub
pusha
lock
adc
ins
cmp
mov
out
std
sbb
test
pop
ficom
add
and
add
or
inc
sub
add
add
add
add
or
inc
mov
jo
rol
rol
or
lgdtd
and
add
add
add
popa
xor
sbb
daa
add
int3
and
add
add
and
add
inc
cmp
popa
xor
xor
idiv
add
(bad)
cld
aam
(bad)
imul
cmc
call
les
(bad)
cld
add
into
lods
enter
dec
mov
pop
je
pop
rcl
add
mov
test
add
add
stc
add
hlt
add
lock
stos
std
mov
(bad)
jmp
call
or
fisubr
ret
stos
jb
repz
call
addr16
(bad)
(bad)
(bad)
(bad)
ss
xchg
ror
add
repz
sti
mov
(bad)
in
inc
popf
outs
sub
jmp
fsub
(bad)
loop
(bad)
(bad)
sbb
leave
pop
ret
retf
mov
jmp
add
out
pop
aad
(bad)
(bad)
mov
stos
je
(bad)
out
add
add
add
(bad)
jecxz
cld
cld
jmp
fld
jnp
lock
imul
in
retf
push
jne
jmp
stos
jbe
call
cmps
rcl
sti
enter
mov
jmp
add
jno
out
xchg
push
cmp
jmp
jmp
ud0
xchg
inc
(bad)
(bad)
(bad)
aad
add
in
or
mov
aam
es
stos
jns
cli
(bad)
int3
mov
ret
fcmovnb
movs
sbb
(bad)
(bad)
sub
loop
sti
aad
pop
sub
call
jmp
(bad)
and
cmc
push
jne
add
clc
cld
mov
cmp
shr
retf
or
jmp
(bad)
(bad)
clc
(bad)
mov
(bad)
mov
jnp
cmp
ficom
lods
add
loope
jmp
int3
mov
out
jmp
imul
loopne
mov
(bad)
mov
idiv
mov
cmp
test
cdq
pop
push
(bad)
out
push
cld
std
(bad)
push
push
call
add
movs
pushf
cwde
cwde
call
add
mov
stc
cmps
add
mov
inc
inc
inc
repnz
cld
cld
(bad)
arpl
add
jecxz
push
and
fsub
int3
sar
fimul
push
das
div
hlt
idiv
clc
stc
(bad)
call
movs
or
cmps
call
enter
mov
aas
cmp
jo
and
lea
mov
(bad)
pop
push
ret
cmps
cdq
repnz
mov
add
leave
add
out
pop
inc
push
(bad)
fild
out
fild
(bad)
(bad)
cld
pop
xor
std
test
mov
or
lods
add
rcr
push
shl
test
xchg
push
rcl
rcl
cmp
ficom
std
std
std
out
loopne
sti
stos
add
stos
add
adc
jmp
sti
jecxz
jmp
pushf
in
iret
iret
in
cmp
mov
lahf
popa
inc
push
add
ret
add
lods
xchg
cdq
popa
es
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
inc
std
or
mov
inc
or
mov
loopne
mov
mov
xchg
loop
add
and
cmp
in
in
rcr
sub
lods
and
aam
inc
mov
or
or
or
xchg
stc
nop
lsl
mov
sub
add
dec
int
mov
inc
xchg
pop
test
pusha
adc
dec
sub
inc
ja
mov
sbb
dec
adc
mov
pop
retf
or
push
ret
sub
dec
add
inc
call
push
repz
or
dec
or
push
cmp
nop
pusha
jmp
dec
ret
in
xchg
leave
dec
cwde
pusha
xor
xchg
push
loop
or
xchg
pop
test
mov
and
enter
xchg
imul
add
xchg
xchg
jo
pushf
inc
dec
xor
mov
inc
add
jo
push
sbb
aaa
sahf
cmp
jecxz
mov
add
add
inc
mov
sbb
leave
cli
inc
ret
xor
ret
js
cmp
pusha
xor
jns
mov
retf
add
sbb
nop
int
das
mov
nop
jb
pop
pop
hlt
add
adc
xchg
xchg
add
js
or
or
adc
or
fstp
aam
inc
push
mov
adc
and
pop
sub
ret
js
rol
call
add
add
call
pop
ror
xor
loop
or
sbb
js
rol
sbb
rcr
add
xchg
sbb
inc
ret
add
movs
xor
sbb
inc
sub
inc
or
fdiv
sbb
or
or
sub
cdq
xchg
mov
jo
add
cmp
rol
ins
rcr
mov
sub
mov
sbb
inc
inc
aas
and
retf
pop
inc
aam
rol
dec
call
xchg
stos
jge
cdq
pop
gs
jmp
inc
add
ror
les
xor
fadd
adc
push
dec
stos
shl
es
sbb
test
xchg
rcl
test
lods
xor
push
in
add
jp
inc
nop
in
add
shr
int3
add
mov
jo
or
or
push
icebp
(bad)
or
and
movs
div
mov
dec
and
inc
and
ins
out
pop
adc
in
cwde
xchg
cmp
adc
mov
sub
shl
jb
pop
enter
fld
adc
or
enter
adc
adc
cmp
ja
jl
xchg
add
pop
hlt
gs
xor
ror
(bad)
xor
jbe
add
add
xor
pop
imul
sbb
xor
adc
fcom
mov
and
add
test
div
mov
ja
lods
out
(bad)
ds
push
mov
popa
(bad)
mov
jecxz
das
push
jl
mov
jae
sbb
jo
mov
or
ins
cdq
dec
adc
loope
enter
aam
ins
out
mov
mov
sbb
mov
pusha
cmp
add
sahf
inc
aam
xor
fisubr
stc
ror
pop
lock
hlt
and
xchg
fidivr
dec
mov
retf
sbb
imul
stos
sub
jo
jno
sub
inc
inc
xor
stos
addr16
repz
jb
adc
mov
(bad)
mov
cld
add
adc
inc
add
adc
xor
and
mov
dec
or
add
inc
sub
inc
sbb
cmp
mov
ror
pusha
add
rol
(bad)
adc
pop
clc
inc
adc
dec
bound
(bad)
xchg
add
cmp
adc
and
sysenter
pushf
pop
es
add
sbb
push
mov
xchg
rol
(bad)
sub
mov
pop
mov
rol
rol
or
push
sub
add
je
or
lock
xor
xor
adc
and
push
xchg
or
adc
push
es
adc
shl
daa
call
mov
and
pop
mov
adc
jmp
add
cld
pusha
(bad)
mov
inc
pop
add
mov
ret
adc
inc
mov
ror
enter
lock
dec
and
das
sbb
xor
shl
inc
sha1nexte
adc
inc
or
push
ror
and
popf
jmp
add
and
or
pusha
dec
push
jmp
add
test
add
or
cmc
inc
and
loope
mov
inc
and
add
pop
xor
adc
xor
adc
mov
jl
pop
or
pop
jnp
adc
fwait
dec
inc
add
pusha
test
jae
scas
lock
push
mov
lea
push
or
retf
fs
adc
dec
nop
inc
fidiv
pop
(bad)
mov
push
stos
add
add
pusha
or
cdq
add
dec
inc
or
push
adc
mov
and
(bad)
call
push
inc
pushf
push
and
icebp
add
loopne
adc
xor
sbb
inc
or
jo
push
push
or
sub
jmp
mov
add
pop
add
adc
and
dec
ret
add
inc
aam
push
xor
sub
repnz
enter
mov
add
adc
dec
inc
mov
and
aam
inc
ins
pop
push
mov
inc
pop
mov
inc
das
and
push
popa
clc
jae
add
test
mov
movs
push
mov
push
in
cmp
pop
adc
xchg
sbb
inc
cmp
dec
sub
add
sub
adc
jne
shl
and
rol
sqrtps
xor
dec
cmp
or
push
popaw
xor
dec
and
add
and
cmps
pop
sbb
popa
or
and
add
and
or
ins
and
inc
push
sbb
push
mov
mov
sbb
push
inc
sub
imul
mov
sbb
xchg
cld
sbb
neg
add
mov
inc
xor
xor
lock
shl
xchg
adc
add
dec
inc
pop
inc
sub
sbb
xor
adc
in
xchg
xor
mov
push
add
add
stos
loopne
fbld
lea
stos
lock
fcmovb
and
adc
(bad)
xor
sbb
retf
mov
or
or
adc
sbb
add
push
neg
mov
inc
or
push
push
or
add
ror
or
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
or
inc
ret
js
dec
jne
xchg
mov
add
sbb
add
and
call
inc
add
dec
jbe
pop
push
fadd
sbb
mov
(bad)
sub
mov
mov
je
inc
or
cmps
ficom
out
rol
dec
or
fisub
push
add
cmp
mov
inc
jo
cmp
dec
ret
(bad)
xor
shr
xor
stc
pop
or
clc
mov
mul
pop
fwait
pop
hlt
popa
rol
pop
fwait
or
xor
xor
arpl
fdiv
lods
or
and
test
test
push
and
repnz
inc
dec
bnd
mov
hlt
scas
pushf
call
push
enter
jne
add
pop
cmp
test
lods
jg
and
cmps
push
rcr
and
nop
mov
js
sub
daa
jp
loop
fld
jmp
add
add
jp
in
inc
sbb
add
(bad)
adc
sbb
iret
or
add
sbb
aam
or
mov
mov
ror
inc
adc
adc
adc
add
push
add
inc
mov
inc
cld
shl
sub
test
xchg
jmp
mov
retf
outs
or
les
pop
and
adc
mov
dec
xor
dec
and
jmp
mov
inc
add
and
inc
add
sbb
clc
iret
cmp
adc
fwait
test
add
dec
ss
and
push
fwait
movs
call
inc
or
test
mov
mov
jmp
and
std
add
inc
adc
and
xor
cld
push
(bad)
aas
mov
js
call
xor
pop
gs
popa
pop
shl
stc
ret
lea
or
xchg
add
mov
ins
jl
nop
aas
mov
repz
test
dec
aam
and
mov
les
and
inc
dec
in
mov
sub
add
mov
dec
fldenv
dec
add
adc
int3
xchg
dec
and
add
ds
push
lock
(bad)
and
add
test
or
hlt
jecxz
punpcklwd
sbb
push
adc
adc
or
or
je
arpl
adc
bound
ret
inc
in
inc
add
ins
mov
xor
or
fisubr
daa
dec
pusha
ret
sub
sub
int3
and
lods
loop
or
(bad)
adc
int3
xor
in
add
push
scas
and
test
pop
xor
dec
pusha
mov
xor
ins
lock
cld
(bad)
loopne
je
ror
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
xchg
jg
push
jmp
dec
mov
adc
sbb
jo
dec
sbb
icebp
movs
ror
dec
bound
and
rol
add
mov
mov
pop
push
lds
dec
call
popw
xchg
dec
mov
xor
sbb
xchg
loop
cmp
pop
xchg
and
ins
or
mov
int3
cmp
cmp
push
add
cmp
repz
adc
sub
in
dec
repnz
sub
rcl
sbb
in
enter
mov
pop
int
cmc
add
and
cmc
je
shr
cmp
cmp
jp
dec
pop
mov
inc
inc
idiv
arpl
mov
clc
cmps
lods
pop
outs
push
add
or
push
jae
dec
lea
imul
mov
adc
fcom
popf
in
inc
push
pop
in
inc
nop
or
movs
xchg
inc
and
xor
sub
ror
loopne
mov
lds
add
and
outs
or
mov
inc
(bad)
adc
add
or
add
jb
mov
inc
jmp
adc
mov
sbb
(bad)
das
dec
xor
push
cmp
les
inc
nop
ins
repnz
add
sbb
nop
and
jge
inc
cwde
sub
repz
adc
add
mov
and
mov
add
or
xor
jecxz
and
shl
xor
xor
outs
jb
and
(bad)
loopne
xchg
push
test
and
and
add
inc
push
add
out
inc
loopne
int
push
enter
sbb
fsub
leave
cwde
add
xchg
adc
shl
ret
(bad)
clc
jmp
add
adc
enter
push
push
inc
mov
inc
adc
sbb
adc
adc
jb
add
ror
cmp
mov
or
inc
hlt
or
inc
add
adc
loopne
popf
inc
sub
or
rcr
adc
push
popf
in
inc
test
push
cmp
stos
and
add
js
test
cwde
jb
xor
jo
mov
mov
lock
sbb
inc
pop
out
rcl
mov
cmps
sub
inc
sub
int3
lock
push
add
ret
int3
xor
push
mov
and
and
or
cmp
inc
pusha
cmp
shl
aam
and
add
adc
add
int
lock
retf
mov
mov
fs
xor
inc
mov
push
adc
or
in
mov
fsub
dec
(bad)
imul
js
mov
cmovae
frstor
adc
or
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
or
inc
ret
js
dec
jne
xchg
mov
add
sbb
add
and
call
inc
add
dec
jbe
pop
push
fadd
sbb
mov
(bad)
sub
mov
mov
je
inc
or
cmps
ficom
out
rol
dec
or
fisub
push
add
cmp
mov
inc
jo
cmp
dec
ret
(bad)
xor
shr
xor
stc
pop
or
clc
mov
mul
pop
fwait
pop
hlt
popa
rol
pop
fwait
or
xor
xor
arpl
fdiv
lods
or
and
test
test
push
and
repnz
inc
dec
bnd
mov
hlt
scas
pushf
call
push
enter
jne
add
pop
cmp
test
lods
jg
and
cmps
push
rcr
and
nop
mov
js
sub
daa
jp
loop
fld
jmp
add
add
jp
in
inc
sbb
add
(bad)
adc
sbb
iret
or
add
sbb
aam
or
mov
mov
ror
inc
adc
adc
adc
add
push
add
inc
mov
inc
cld
shl
sub
test
xchg
jmp
mov
retf
outs
or
les
pop
and
adc
mov
dec
xor
dec
and
jmp
mov
inc
add
and
inc
add
sbb
clc
iret
cmp
adc
fwait
test
add
dec
ss
and
push
fwait
movs
call
inc
or
test
mov
mov
jmp
and
std
add
inc
adc
and
xor
cld
push
(bad)
aas
mov
js
call
xor
pop
gs
popa
pop
shl
stc
ret
lea
or
xchg
add
mov
ins
jl
nop
aas
mov
repz
test
dec
aam
and
mov
les
and
inc
dec
in
mov
sub
add
mov
dec
fldenv
dec
add
adc
int3
xchg
dec
and
add
ds
push
lock
(bad)
and
add
test
or
hlt
jecxz
punpcklwd
sbb
push
adc
adc
or
or
je
arpl
adc
bound
ret
inc
in
inc
add
ins
mov
xor
or
fisubr
daa
dec
pusha
ret
sub
sub
int3
and
lods
loop
or
(bad)
adc
int3
xor
in
add
push
scas
and
test
pop
xor
dec
pusha
mov
xor
ins
lock
cld
(bad)
loopne
je
ror
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
xchg
jg
push
jmp
dec
mov
adc
sbb
jo
dec
sbb
icebp
movs
ror
dec
bound
and
rol
add
mov
mov
pop
push
lds
dec
call
popw
xchg
dec
mov
xor
sbb
xchg
loop
cmp
pop
xchg
and
ins
or
mov
int3
cmp
cmp
push
add
cmp
repz
adc
sub
in
dec
repnz
sub
rcl
sbb
in
enter
mov
pop
int
cmc
add
and
cmc
je
shr
cmp
cmp
jp
dec
pop
mov
inc
inc
idiv
arpl
mov
clc
cmps
lods
pop
outs
push
add
or
push
jae
dec
lea
imul
mov
adc
fcom
popf
in
inc
push
pop
in
inc
nop
or
movs
xchg
inc
and
xor
sub
ror
loopne
mov
lds
add
and
outs
or
mov
inc
(bad)
adc
add
or
add
jb
mov
inc
jmp
adc
mov
sbb
(bad)
das
dec
xor
push
cmp
les
inc
nop
ins
repnz
add
sbb
nop
and
jge
inc
cwde
sub
repz
adc
add
mov
and
mov
add
or
xor
jecxz
and
shl
xor
xor
outs
jb
and
(bad)
loopne
xchg
push
test
and
and
add
inc
push
add
out
inc
loopne
int
push
enter
sbb
fsub
leave
cwde
add
xchg
adc
shl
ret
(bad)
clc
jmp
add
adc
enter
push
push
inc
mov
inc
adc
sbb
adc
adc
jb
add
ror
cmp
mov
or
inc
hlt
or
inc
add
adc
loopne
popf
inc
sub
or
rcr
adc
push
popf
in
inc
test
push
cmp
stos
and
add
js
test
cwde
jb
xor
jo
mov
mov
lock
sbb
inc
pop
out
rcl
mov
cmps
sub
inc
sub
int3
lock
push
add
ret
int3
xor
push
mov
and
and
or
cmp
inc
pusha
cmp
shl
aam
and
add
adc
add
int
lock
retf
mov
mov
fs
xor
inc
mov
push
adc
or
in
mov
fsub
dec
(bad)
imul
js
mov
cmovae
frstor
adc
or
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
or
inc
ret
js
dec
jne
xchg
mov
add
sbb
add
and
call
inc
add
dec
jbe
pop
push
fadd
sbb
mov
(bad)
sub
mov
mov
je
inc
or
cmps
ficom
out
rol
dec
or
fisub
push
add
cmp
mov
inc
jo
cmp
dec
ret
(bad)
xor
shr
xor
stc
pop
or
clc
mov
mul
pop
fwait
pop
hlt
popa
rol
pop
fwait
or
xor
xor
arpl
fdiv
lods
or
and
test
test
push
and
repnz
inc
dec
bnd
mov
hlt
scas
pushf
call
push
enter
jne
add
pop
cmp
test
lods
jg
and
cmps
push
rcr
and
nop
mov
js
sub
daa
jp
loop
fld
jmp
add
add
jp
in
inc
sbb
add
(bad)
adc
sbb
iret
or
add
sbb
aam
or
mov
mov
ror
inc
adc
adc
adc
add
push
add
inc
mov
inc
cld
shl
sub
test
xchg
jmp
mov
retf
outs
or
les
pop
and
adc
mov
dec
xor
dec
and
jmp
mov
inc
add
and
inc
add
sbb
clc
iret
cmp
adc
fwait
test
add
dec
ss
and
push
fwait
movs
call
inc
or
test
mov
mov
jmp
and
std
add
inc
adc
and
xor
cld
push
(bad)
aas
mov
js
call
xor
pop
gs
popa
pop
shl
stc
ret
lea
or
xchg
add
mov
ins
jl
nop
aas
mov
repz
test
dec
aam
and
mov
les
and
inc
dec
in
mov
sub
add
mov
dec
fldenv
dec
add
adc
int3
xchg
dec
and
add
ds
push
lock
(bad)
and
add
test
or
hlt
jecxz
punpcklwd
sbb
push
adc
adc
or
or
je
arpl
adc
bound
ret
inc
in
inc
add
ins
mov
xor
or
fisubr
daa
dec
pusha
ret
sub
sub
int3
and
lods
loop
or
(bad)
adc
int3
xor
in
add
push
scas
and
test
pop
xor
dec
pusha
mov
xor
ins
lock
cld
(bad)
loopne
je
ror
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
xchg
jg
push
jmp
dec
mov
adc
sbb
jo
dec
sbb
icebp
movs
ror
dec
bound
and
rol
add
mov
mov
pop
push
lds
dec
call
popw
xchg
dec
mov
xor
sbb
xchg
loop
cmp
pop
xchg
and
ins
or
mov
int3
cmp
cmp
push
add
cmp
repz
adc
sub
in
dec
repnz
sub
rcl
sbb
in
enter
mov
pop
int
cmc
add
and
cmc
je
shr
cmp
cmp
jp
dec
pop
mov
inc
inc
idiv
arpl
mov
clc
cmps
lods
pop
outs
push
add
or
push
jae
dec
lea
imul
mov
adc
fcom
popf
in
inc
push
pop
in
inc
nop
or
movs
xchg
inc
and
xor
sub
ror
loopne
mov
lds
add
and
outs
or
mov
inc
(bad)
adc
add
or
add
jb
mov
inc
jmp
adc
mov
sbb
(bad)
das
dec
xor
push
cmp
les
inc
nop
ins
repnz
add
sbb
nop
and
jge
inc
cwde
sub
repz
adc
add
mov
and
mov
add
or
xor
jecxz
and
shl
xor
xor
outs
jb
and
(bad)
loopne
xchg
push
test
and
and
add
inc
push
add
out
inc
loopne
int
push
enter
sbb
fsub
leave
cwde
add
xchg
adc
shl
ret
(bad)
clc
jmp
add
adc
enter
push
push
inc
mov
inc
adc
sbb
adc
adc
jb
add
ror
cmp
mov
or
inc
hlt
or
inc
add
adc
loopne
popf
inc
sub
or
rcr
adc
push
popf
in
inc
test
push
cmp
stos
and
add
js
test
cwde
jb
xor
jo
mov
mov
lock
sbb
inc
pop
out
rcl
mov
cmps
sub
inc
sub
int3
lock
push
add
ret
int3
xor
push
mov
and
and
or
cmp
inc
pusha
cmp
shl
aam
and
add
adc
add
int
lock
retf
mov
mov
fs
xor
inc
mov
push
adc
or
in
mov
fsub
dec
(bad)
imul
js
mov
cmovae
frstor
adc
or
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
or
inc
ret
js
dec
jne
xchg
mov
add
sbb
add
and
call
inc
add
dec
jbe
pop
push
fadd
sbb
mov
(bad)
sub
mov
mov
je
inc
or
cmps
ficom
out
rol
dec
or
fisub
push
add
cmp
mov
inc
jo
cmp
dec
ret
(bad)
xor
shr
xor
stc
pop
or
clc
mov
mul
pop
fwait
pop
hlt
popa
rol
pop
fwait
or
xor
xor
arpl
fdiv
lods
or
and
test
test
push
and
repnz
inc
dec
bnd
mov
hlt
scas
pushf
call
push
enter
jne
add
pop
cmp
test
lods
jg
and
cmps
push
rcr
and
nop
mov
js
sub
daa
jp
loop
fld
jmp
add
add
jp
in
inc
sbb
add
(bad)
adc
sbb
iret
or
add
sbb
aam
or
mov
mov
ror
inc
adc
adc
adc
add
push
add
inc
mov
inc
cld
shl
sub
test
xchg
jmp
mov
retf
outs
or
les
pop
and
adc
mov
dec
xor
dec
and
jmp
mov
inc
add
and
inc
add
sbb
clc
iret
cmp
adc
fwait
test
add
dec
ss
and
push
fwait
movs
call
inc
or
test
mov
mov
jmp
and
std
add
inc
adc
and
xor
cld
push
(bad)
aas
mov
js
call
xor
pop
gs
popa
pop
shl
stc
ret
lea
or
xchg
add
mov
ins
jl
nop
aas
mov
repz
test
dec
aam
and
mov
les
and
inc
dec
in
mov
sub
add
mov
dec
fldenv
dec
add
adc
int3
xchg
dec
and
add
ds
push
lock
(bad)
and
add
test
or
hlt
jecxz
punpcklwd
sbb
push
adc
adc
or
or
je
arpl
adc
bound
ret
inc
in
inc
add
ins
mov
xor
or
fisubr
daa
dec
pusha
ret
sub
sub
int3
and
lods
loop
or
(bad)
adc
int3
xor
in
add
push
scas
and
test
pop
xor
dec
pusha
mov
xor
ins
lock
cld
(bad)
loopne
je
ror
mov
add
add
add
adc
rol
rol
or
lgdtd
push
add
add
popa
xor
sbb
add
sti
adc
add
repz
inc
cmp
popa
xor
xor
idiv
add
mov
enter
cdq
add
repnz
(bad)
cli
(bad)
jmp
(bad)
out
add
(bad)
dec
outs
outs
jo
fadd
std
mov
(bad)
cmp
fs
fmul
add
add
repz
add
rol
rol
(bad)
fld
cdq
addr16
mov
push
add
fadd
(bad)
aad
dec
add
mov
(bad)
(bad)
adc
push
(bad)
jmp
push
pop
(bad)
(bad)
and
add
std
in
fistp
fisttp
mov
popa
in
in
xlat
(bad)
xlat
mov
add
jmp
das
cli
cmps
add
add
in
inc
(bad)
cmc
cwde
(bad)
(bad)
sbb
pop
(bad)
(bad)
cs
sub
add
test
dec
inc
push
aam
daa
(bad)
stc
mov
sar
movs
jl
mov
les
stc
test
(bad)
clc
test
cmps
(bad)
sti
mov
std
loope
mov
mov
cs
gs
push
retf
call
das
cli
ficomp
(bad)
cld
dec
cli
mov
sti
jmp
mov
push
call
adc
inc
xlat
les
int
cli
lods
add
cld
add
stos
add
mov
push
clc
aam
jmp
add
fnstsw
in
(bad)
cld
repz
repz
push
or
mov
sub
and
inc
cmps
add
inc
add
cld
mov
(bad)
mov
hlt
hlt
cmc
and
cld
retf
bnd
inc
std
ret
jae
(bad)
in
mov
jbe
cs
rol
cld
les
loop
adc
lahf
add
int3
push
dec
push
xchg
cmp
inc
or
and
lock
out
mov
lock
dec
mov
inc
add
mov
xchg
inc
inc
addr16
enter
stos
(bad)
clc
or
pop
and
cmps
inc
(bad)
std
add
push
mov
pop
int
iret
lock
mov
retf
(bad)
mov
(bad)
pusha
sbb
add
add
mov
lock
add
not
(bad)
dec
add
std
add
in
push
push
push
add
jg
repnz
ffree
test
(bad)
and
mov
(bad)
jecxz
(bad)
in
or
fst
add
clc
div
push
and
out
adc
mov
out
in
icebp
fild
(bad)
cli
add
add
mov
pusha
bound
fadd
test
popf
mov
sti
ret
sti
std
stc
xlat
add
movs
jmp
std
inc
stc
test
fcmovne
dec
stc
leave
push
in
aad
mov
or
xchg
or
dec
mov
push
stc
mov
jmp
or
fild
icebp
lods
or
push
and
fisttp
ror
jnp
rol
popa
aas
scas
scas
scas
out
and
loop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
adc
or
int3
daa
and
cs
inc
mov
add
stc
ins
push
movs
js
mov
fcmovbe
mov
mov
sub
xor
adc
ds
syscall
daa
adc
cmp
inc
loopne
sbb
aas
mov
push
xchg
test
xchg
test
stos
jns
and
cmp
jns
and
pop
js
adc
sub
sub
push
nop
mov
nop
and
daa
inc
sub
and
or
xchg
lea
cmp
push
jbe
add
popa
sbb
sub
inc
sbb
retf
iret
test
add
sbb
sti
adc
add
xchg
fld
jns
repnz
pause
loope
xor
mov
test
or
xchg
nop
or
jbe
jnp
ins
rol
lock
sbb
jmp
or
inc
xchg
push
mov
popf
sti
cmp
mov
sub
pop
loopne
add
push
sub
les
and
lds
and
xor
xchg
pop
dec
cmp
mov
adc
adc
pusha
add
int3
add
and
mov
push
add
jecxz
mov
repz
jns
test
push
(bad)
loopne
add
sbb
cmp
xor
adc
mov
xor
add
mov
or
inc
add
test
inc
or
in
add
inc
mov
push
rol
add
mov
shl
mov
mov
add
or
xchg
push
add
xor
sub
lea
adc
and
retf
cli
xor
add
popa
jmp
add
push
cwde
adc
cdq
cwde
push
or
mov
das
xchg
xor
mov
fmul
movs
fnsave
ret
test
sub
xor
psubsb
xor
jecxz
loopne
xor
aaa
add
sbb
ins
inc
add
xor
push
or
sub
bnd
mov
mov
sub
mov
nop
jbe
add
dec
push
xor
inc
and
clc
mov
cwde
stos
sbb
or
movs
cld
ret
or
mov
mov
push
sbb
cmps
(bad)
add
jecxz
rol
enter
(bad)
leave
aas
cmp
ror
mov
or
mov
aaa
sub
and
add
add
rcr
lea
retf
ds
int
sub
sbb
sub
dec
or
and
sub
lods
xor
in
mov
sbb
adc
les
(bad)
nop
repz
in
jo
faddp
or
ret
mov
daa
outs
loope
fimul
jecxz
adc
cwde
loopne
in
push
dec
xor
out
mov
cmp
mov
jnp
loop
in
mov
shl
popa
jns
mov
mov
imul
pop
in
pop
dec
out
cmps
aas
pusha
test
inc
push
xor
mov
in
fld
jg
sbb
pop
inc
adc
mov
xchg
jbe
mov
inc
stos
clc
repnz
fld
mov
or
add
mov
in
loopne
mov
inc
test
mov
int3
mov
loope
in
lahf
aas
retf
sub
or
(bad)
idiv
xor
inc
fimul
or
and
pop
add
cld
push
lea
mov
add
out
ins
call
out
mov
push
mov
add
jo
or
push
or
inc
test
(bad)
dec
jo
shl
inc
shr
xchg
cmp
inc
sbb
add
out
and
les
iret
call
or
add
cmp
adc
pop
push
inc
(bad)
fistp
retf
jno
inc
xor
add
or
adc
in
adc
jo
add
movs
xchg
pop
adc
sub
adc
cmps
es
out
lods
inc
stc
rol
add
mov
sub
jae
pop
test
pop
sbb
retf
data16
movs
call
loopne
xchg
add
push
cmps
loope
dec
nop
ret
adc
xchg
cdq
call
dec
sub
add
mov
inc
or
nop
sbb
dec
leave
mov
cmp
push
enter
dec
or
cmp
add
push
adc
das
add
push
sub
inc
sbb
lock
inc
xor
or
add
mov
cld
add
dec
inc
cmp
sbb
add
pop
rol
(bad)
mov
adc
imul
loopne
pop
cmp
and
mov
and
loopne
in
aam
scas
add
mov
and
add
rcl
add
and
push
mov
adc
inc
cvtps2pd
and
add
aad
mov
icebp
sbb
push
cmp
or
sbb
or
inc
js
mov
in
push
scas
lock
adc
pusha
mov
xchg
jo
sbb
rol
mov
aaa
push
adc
mov
enter
mov
je
or
retf
lods
sti
cmps
and
and
mov
into
sub
pop
clc
rcr
(bad)
rol
add
and
lahf
mov
mov
mov
inc
cmp
xor
dec
test
sbb
jecxz
popa
shl
add
xchg
rcr
mov
or
sbb
ror
js
cmps
stc
jmp
add
add
push
mov
in
out
add
sbb
sbb
mov
jg
mov
cmovge
loopne
jo
ret
xor
and
add
pop
inc
add
add
and
cmp
loopne
popa
cwde
inc
add
jb
sub
adc
and
add
or
inc
sub
add
add
add
add
or
sub
pop
xor
sti
xchg
rol
jmp
inc
or
lods
lahf
or
test
push
aas
pop
sbb
ins
clc
daa
loope
add
(bad)
jmp
and
pushf
stc
cmovp
loope
outs
sbb
movs
in
lods
push
mov
and
mov
inc
mov
aad
jbe
xchg
mov
jmp
mov
jg
lods
fnsave
jle
adc
and
ret
ins
adc
inc
mov
(bad)
jl
sbb
xchg
and
arpl
(bad)
fidivr
das
mov
ret
and
jecxz
push
and
pop
fld
and
add
or
inc
sub
add
add
add
add
or
add
or
rcr
in
mov
add
xchg
push
mov
lods
jg
push
inc
adc
das
fadd
jl
leave
inc
and
(bad)
popa
mov
cli
lds
mov
xchg
xchg
adc
pushf
jmp
sbb
dec
into
or
and
mov
lea
mov
cdq
add
(bad)
repz
pusha
jecxz
or
dec
cwde
push
test
(bad)
add
rcr
adc
mov
leave
cli
add
retf
add
call
pop
(bad)
clc
clc
xchg
or
add
pushf
dec
shl
jo
test
push
jbe
inc
sbb
mov
loope
js
mov
cmp
mov
mov
gs
push
adc
ror
jmp
or
inc
sub
add
add
add
add
or
add
or
lock
aas
adc
test
mov
mov
lds
jle
and
call
fisub
sbb
add
popa
fbstp
pop
adc
push
ds
daa
lahf
cmp
aas
sub
(bad)
mov
adc
mov
pop
add
shl
adc
sub
loop
dec
cmc
in
rol
or
pop
adc
loope
movs
adc
test
xchg
sub
inc
dec
push
retf
or
nop
stos
mov
fdiv
mov
(bad)
pusha
ins
clc
xchg
or
imul
and
pop
jp
aas
pusha
call
or
xor
or
ror
shl
ins
cmp
int
push
push
movs
jbe
retf
add
xor
and
mov
loopne
push
sub
fsubr
or
int3
bound
(bad)
movlps
mov
adc
rol
xor
mov
cld
inc
add
inc
pushf
xor
adc
cmp
mov
test
sbb
sti
xchg
and
add
add
jns
or
sar
ins
test
sbb
xor
add
adc
stc
rcl
rol
dec
add
inc
mov
cmps
test
mov
call
sub
mov
push
test
mov
add
mov
enter
push
int3
push
pop
or
lods
call
jno
ss
loope
nop
sub
push
or
rol
inc
and
movs
fmul
and
test
or
repz
inc
pop
push
mov
xchg
addr16
popf
dec
add
ss
mov
das
push
mov
shl
loope
add
fcmovb
and
add
mov
lea
or
xor
rcl
xchg
mov
xor
stos
jl
ds
sub
jmp
push
cmp
scas
test
mov
js
mov
cmp
inc
sub
xor
in
or
fs
or
mov
in
aas
inc
inc
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
push
mov
add
enter
inc
stc
sahf
dec
jl
outs
inc
inc
xchg
(bad)
cld
pop
and
ret
mov
lahf
mov
out
mov
push
imul
mov
mov
aas
js
adc
dec
nop
fdivr
and
mov
cmp
loope
inc
out
fild
or
mov
and
xor
add
out
fild
movs
add
and
shl
add
add
inc
add
jge
cdq
push
sti
add
cmp
lock
pop
shl
mov
hlt
push
call
arpl
mov
dec
scas
fst
(bad)
out
jg
jns
xor
mov
das
push
inc
push
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
aas
jg
push
cli
sub
mov
inc
xchg
cli
in
es
jg
adc
jl
shl
sub
mov
loop
cmps
arpl
mov
xchg
enter
inc
test
repnz
jmp
jo
rcr
daa
scas
add
mov
jns
jge
and
xchg
or
push
stos
dec
test
add
outs
pop
or
or
xor
inc
xchg
or
adc
jmp
js
inc
and
cmps
add
hlt
push
aam
jo
call
inc
(bad)
mov
xchg
sub
sub
xchg
adc
out
sahf
cmp
clc
test
push
stc
test
loop
pop
add
jle
dec
std
jo
pop
adc
ins
or
push
dec
sar
cmp
loopne
jmp
in
jae
push
sar
mov
mov
std
jae
loope
jnp
repnz
jne
das
call
lock
lahf
dec
mov
repz
iret
mov
je
test
pop
jo
or
inc
pop
and
and
or
xor
lea
jge
add
sbb
add
aas
add
int3
xor
xor
xor
add
fdiv
dec
daa
or
xchg
(bad)
jge
xor
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
mov
mov
jg
or
or
or
push
inc
scas
cmp
xchg
xchg
(bad)
mov
retf
adc
and
pop
mov
mov
test
in
dec
or
(bad)
ror
jg
adc
cmp
add
jae
mov
and
ret
sbb
jl
pop
mov
lahf
fistp
push
test
sti
ja
adc
and
add
dec
sub
std
mov
out
(bad)
or
push
dec
int3
mov
fild
pushf
cld
iret
fdivr
push
dec
pop
mov
ja
push
es
jns
sbb
add
or
inc
sub
add
add
add
add
or
add
or
rcr
jl
and
repnz
mov
inc
xor
call
test
xchg
enter
jg
not
add
add
fdiv
ja
add
push
arpl
xchg
inc
test
sub
xchg
and
fs
push
xor
dec
xchg
xchg
sub
in
mov
std
fld
mov
add
xchg
sbb
(bad)
dec
push
sub
adc
dec
pop
inc
add
xchg
leave
fadd
adc
mov
(bad)
dec
sub
xchg
rcr
add
xchg
nop
xor
pusha
mov
add
(bad)
das
adc
adc
loop
jg
mov
adc
mov
mov
mov
mov
sahf
mov
rol
repnz
dec
cmc
inc
mov
pushf
add
or
sahf
cmp
cs
or
adc
sbb
imul
sbb
jae
sti
div
jecxz
lahf
dec
mov
repz
iret
mov
dec
rol
ins
clc
xlat
or
out
mov
xchg
mov
mov
rcr
int3
xor
movs
inc
adc
test
add
and
(bad)
xchg
and
test
or
jne
and
or
pop
jg
inc
rol
nop
call
js
mov
in
inc
inc
jb
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
sbb
ret
or
inc
lock
aas
sbb
sub
mov
cld
out
and
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
dec
adc
sub
inc
xor
nop
xchg
mov
test
push
add
mov
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
loopne
push
add
adc
pop
arpl
mov
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
dec
(bad)
sar
jno
xor
fistp
sbb
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
lahf
rol
jo
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
and
fs
jo
(bad)
retf
bound
les
addr16
enter
pop
test
and
mov
xchg
loope
pop
cmp
lock
push
daa
add
pop
mov
add
popa
inc
repnz
add
xchg
fs
mov
and
push
add
iret
test
sbb
aas
rcr
scas
leave
push
popf
and
add
and
add
or
inc
sub
add
lldt
add
or
dec
cld
aaa
in
inc
mov
add
push
mov
ins
pop
adc
adc
in
test
popf
cmp
cmps
rol
cmp
dec
fs
icebp
(bad)
or
and
cmps
and
pop
add
sbb
aaa
pop
xchg
mov
(bad)
in
or
or
xchg
cmc
mov
paddw
hlt
pop
pushf
stos
adc
pusha
(bad)
adc
mov
and
add
mov
inc
sub
add
lldt
add
or
dec
cld
addr16
adc
adc
in
add
pop
adc
add
scas
fst
pushf
mov
push
jmp
or
gs
inc
sbb
sbb
jmp
or
push
push
call
inc
and
cmp
dec
cld
xlat
repz
fld
push
mov
inc
adc
add
(bad)
mov
dec
cld
movs
mov
push
lods
push
scas
mov
aam
and
cmp
adc
jo
rol
rol
or
lgdtd
sbb
add
add
add
popa
xor
sbb
and
add
ins
je
add
sbb
add
inc
cmp
popa
xor
xor
idiv
add
(bad)
call
loopne
repz
cld
add
mov
push
lahf
fcom
sub
in
scas
mov
fs
enter
test
ficomp
sub
jo
xchg
xchg
xchg
(bad)
(bad)
aam
fadd
rcl
rcl
add
fiadd
neg
dec
lds
sub
lds
shr
out
jae
iret
stc
push
out
out
out
hlt
cmc
std
fcmovnu
out
(bad)
(bad)
fcmovu
(bad)
retf
stos
test
hlt
hlt
push
jl
mov
add
lock
mul
sar
lods
add
in
test
sti
hlt
mov
leave
stos
jae
in
(bad)
cld
mov
jmp
popf
std
movs
add
leave
movs
jne
std
in
sub
scas
push
sub
in
in
in
in
(bad)
test
std
mov
std
cli
sbb
mov
std
stc
push
std
cld
xchg
cli
loope
(bad)
push
call
pop
call
add
xor
arpl
stc
jmp
out
mov
dec
mov
add
jmp
add
test
ror
loope
test
clc
inc
std
in
(bad)
cld
jmp
fxch
adc
icebp
jmp
dec
xchg
mov
out
push
jmp
enter
xchg
out
mov
or
in
in
into
les
sub
xlat
xchg
into
rcr
sbb
div
(bad)
cld
movs
out
adc
(bad)
xchg
push
add
out
cld
(bad)
call
dec
adc
imul
push
aad
xlat
cmp
cli
cmc
in
cld
clc
jecxz
add
rol
(bad)
test
sbb
mov
(bad)
dec
mov
popa
hlt
mov
repnz
(bad)
loop
loop
std
(bad)
ficom
xchg
(bad)
xchg
sbb
sahf
addr16
pop
jmp
adc
mov
in
jmp
jmp
mov
jecxz
jmp
cmc
cmc
fcmovnu
fcmovnbe
fcomp
mov
pop
jmp
add
ret
add
out
idiv
repz
in
in
in
in
lock
out
clc
retf
add
fmul
lahf
and
mov
(bad)
fild
jmp
call
cmc
lock
repz
(bad)
sub
scas
add
std
mul
call
repnz
in
in
std
lods
or
cmp
cwde
arpl
jmp
in
popa
sub
out
retf
scas
mov
in
hlt
repz
icebp
repnz
icebp
repnz
icebp
icebp
out
out
in
out
lock
in
jecxz
repz
repz
in
out
out
iret
iret
iret
cmc
hlt
repnz
jecxz
mov
sti
sti
(bad)
in
out
in
jmp
jmp
faddp
in
fnsave
out
out
in
ret
(bad)
push
ja
xchg
inc
std
out
add
lock
mov
pop
cmc
mov
mov
adc
std
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
xchg
add
add
add
add
add
add
or
add
or
jo
mov
repz
nop
in
mov
call
sbb
adc
shl
or
push
or
mov
mov
call
mov
dec
push
sub
inc
pop
fcom
adc
and
gs
mov
pop
sub
shl
add
and
adc
(bad)
jae
test
dec
cdq
inc
jbe
or
mov
push
mov
sub
scas
mov
fstp
outs
fisubr
inc
sbb
push
add
add
test
inc
fucom
rcl
icebp
mov
ds
dec
daa
inc
mov
mov
shr
xchg
pop
push
adc
and
add
and
cwde
rcr
(bad)
inc
test
and
mov
xor
jno
push
loopne
pop
adc
cmp
push
fcom
fdiv
sbb
je
test
jmp
push
enter
add
ret
ficomp
int3
mov
in
add
jge
pop
push
push
ret
sbb
push
inc
test
pop
jmp
add
inc
add
int
add
or
sub
popf
rcr
ins
mov
add
inc
xlat
xor
and
add
sbb
cwde
mov
mov
push
pop
push
cwde
lds
inc
adc
popa
adc
push
dec
mov
xor
mov
pop
in
cmp
lock
outs
push
and
or
push
push
add
fadd
adc
ins
dec
xchg
jno
adc
or
cld
movs
arpl
sahf
jmp
fs
xor
cmc
popa
xor
push
adc
adc
fcom
(bad)
sbb
adc
jae
sub
fs
inc
fld
or
rol
cmp
inc
or
call
shl
fsub
or
ret
dec
push
popa
push
fwait
outs
aam
iret
or
imul
retf
dec
adc
adc
jmp
mov
mov
push
cmp
sub
pop
mov
lds
lea
ret
adc
sub
mov
mov
push
push
call
inc
pusha
sub
add
push
pop
aam
dec
and
ror
push
cmp
mov
in
add
ss
sti
outs
rol
add
pavgb
add
or
out
pusha
les
or
mov
test
inc
or
xchg
adc
add
add
inc
and
clc
mov
ror
or
scas
lock
and
neg
inc
adc
cmp
mov
pusha
adc
cmp
inc
or
popa
test
dec
xor
push
ret
jae
repz
pusha
clc
loope
(bad)
mov
jb
enter
mov
jmp
or
gs
jno
or
jl
sub
daa
push
inc
mov
aas
sbb
rcr
xor
outs
push
inc
mov
pop
cs
pop
mov
push
bound
fwait
pop
ret
or
movs
fdivrp
jmp
sbb
adc
push
aas
enter
aaa
mov
jl
mov
xor
loope
and
adc
mov
lds
jle
pop
retf
mov
sbb
les
ficom
aas
xor
sar
out
dec
imul
adc
aaa
js
add
les
mov
lock
cdq
add
mov
dec
shl
mov
fs
test
push
mov
fwait
and
nop
add
clc
arpl
dec
sar
pusha
cld
lods
rol
jg
and
ds
sub
stc
out
test
jl
add
cmp
sbb
add
or
test
(bad)
add
rcr
and
or
push
rcr
xor
icebp
or
add
dec
js
and
sub
lea
out
push
xor
fs
mov
mov
int3
mov
mov
(bad)
sbb
inc
in
pop
inc
dec
xlat
adc
popf
or
hlt
loope
sbb
ret
inc
into
sub
(bad)
sbb
mov
jge
and
es
xchg
or
test
xor
inc
enter
enter
dec
mov
inc
sti
pop
pop
inc
cmps
retf
sbb
sbb
mov
add
dec
lock
mov
ins
call
xor
adc
push
fnstsw
push
loopne
sub
mov
jno
inc
and
xor
mov
pop
mov
pop
mov
xchg
or
paddsw
or
nop
adc
fadd
jp
sbb
push
mov
push
mov
add
xchg
int3
add
cmp
lea
adc
sbb
bound
xchg
gs
push
cld
stos
(bad)
or
int3
and
adc
xor
pushf
clc
xchg
inc
stos
and
stos
out
xchg
leave
pop
mov
push
imul
sahf
shl
mov
aad
xchg
xchg
pop
repnz
adc
mov
pop
and
inc
push
sbb
adc
test
jno
sbb
adc
xor
pusha
adc
inc
sbb
add
inc
adc
cs
push
xchg
push
or
pop
add
mov
add
mov
and
pop
and
inc
push
inc
test
add
mov
dec
fcom
js
add
and
add
inc
adc
add
mov
mov
outs
test
cld
loopne
pop
add
xor
add
shr
outs
cmc
add
js
adc
pop
ret
add
dec
pop
add
pusha
mov
jno
sub
and
fcom
ret
jl
ret
add
pop
inc
lock
in
mov
stc
add
xor
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
dec
sbb
lock
lods
add
and
gs
popa
add
adc
xchg
mov
push
inc
mov
adc
fmul
inc
and
pop
push
std
and
dec
test
sbb
rcr
cwde
xchg
cwde
loope
jecxz
xchg
cmp
adc
nop
icebp
ror
sub
jne
(bad)
mov
push
add
and
add
or
inc
sub
add
add
add
add
or
dec
sbb
dec
mov
sub
and
pushf
dec
mov
xor
pop
jb
jno
lahf
sbb
cwde
mov
or
sbb
out
pop
mov
rcl
stos
icebp
lea
or
adc
jle
xchg
and
adc
push
mov
push
add
xor
pop
fiadd
jmp
push
fsub
adc
and
stc
add
or
inc
sub
add
add
add
add
or
dec
mov
rol
lds
adc
and
mov
or
add
push
pop
fstp
rcr
aas
sub
(bad)
sbb
and
dec
push
dec
and
pop
xchg
pusha
cmp
and
cli
daa
inc
data16
add
inc
sahf
cmp
dec
cli
xchg
loopne
jge
mov
loopne
add
inc
jmp
push
imul
push
push
cdq
pusha
sub
mov
adc
add
and
add
or
inc
sub
add
add
add
add
or
dec
mov
inc
cmp
add
and
clc
mul
xor
or
and
dec
and
mov
sub
add
in
xor
popa
mov
xchg
sub
mov
(bad)
stc
inc
and
jg
or
sbb
adc
retf
ror
iret
sub
arpl
scas
dec
movs
add
and
push
aam
cmp
cld
inc
bound
(bad)
adc
rol
aas
cwde
inc
pop
xchg
in
fdivr
aaa
add
stc
add
or
inc
sub
add
add
add
add
or
dec
mov
rol
out
add
push
or
adc
jmp
and
(bad)
(bad)
icebp
stc
xchg
add
cmp
xor
xchg
loop
addr16
and
sub
and
add
adc
fdivr
movs
shl
repz
loope
pop
adc
adc
movs
mov
std
adc
cmp
add
repnz
repz
mov
rol
adc
or
add
repz
or
lods
xor
add
stc
add
or
inc
sub
add
add
add
add
mov
dec
sbb
mov
rol
retf
test
and
hlt
aaa
movs
adc
and
pop
ror
cmp
adc
mov
rcr
mov
aaa
adc
pushf
adc
and
cmp
sbb
push
loope
cdq
xchg
adc
or
and
adc
imul
push
sub
popa
and
jl
xor
call
lock
les
adc
add
dec
mov
xchg
inc
jb
nop
add
mov
(bad)
retf
fs
dec
dec
dec
int3
xor
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
dec
sub
pop
daa
jg
jmp
inc
and
cmp
loopne
inc
sub
clc
jl
add
or
xor
mov
fist
loope
inc
and
add
mov
pop
stos
xchg
movs
and
das
xchg
mov
cmp
and
and
add
or
inc
sub
add
add
add
add
or
(bad)
std
repz
in
sbb
add
(bad)
xor
pop
mov
dec
clc
add
inc
in
adc
test
and
fwait
jnp
in
adc
gs
pop
sar
adc
xchg
dec
xchg
sbb
or
jp
lods
imul
add
add
or
inc
sub
add
add
add
add
or
dec
cld
addr16
or
jo
sub
inc
push
push
and
iret
pop
adc
adc
jl
mov
test
iret
adc
cmp
and
mov
adc
dec
mov
loopne
lds
mov
test
out
inc
pop
call
ret
hlt
iret
iret
rcr
push
mov
adc
and
mov
sub
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
mov
aas
cdq
xacquire
movs
jg
sbb
xchg
les
or
dec
icebp
lock
clc
ja
pop
push
add
push
into
ror
test
sub
sar
mov
test
jle
cmc
jae
and
popa
pusha
mov
adc
add
stc
and
rol
das
mov
cdq
and
mov
or
or
and
add
or
inc
sub
add
add
add
add
or
or
out
ffreep
add
sbb
sbb
test
cld
xor
rol
mov
cmp
loopne
mov
push
std
mov
or
and
push
test
dec
test
movs
push
add
and
dec
and
es
cmp
cmps
clc
pop
loop
dec
nop
add
sub
test
or
dec
xchg
mov
sbb
stos
push
inc
les
pusha
mov
fild
add
xor
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
xchg
add
add
add
add
add
add
or
add
or
jo
sbb
add
inc
cmp
add
rcr
mov
(bad)
les
sub
iret
inc
pop
mov
mov
test
stc
jle
les
test
xchg
adc
cmps
cmp
adc
mov
shl
and
mov
jne
loope
sub
mov
cbw
loop
adc
sbb
mov
jb
push
mov
or
xlat
popa
add
arpl
xor
movs
and
scas
ud0
mov
nop
inc
xor
jg
push
mov
dec
push
dec
pop
adc
sub
add
and
cdq
out
push
mov
dec
test
aas
add
clc
inc
(bad)
in
inc
add
cmc
push
shl
pop
sub
add
jns
lods
xor
leave
mov
mov
fcomp
sub
sbb
gs
xchg
les
call
enter
mov
and
test
dec
pushf
jb
add
cmp
pop
ror
jg
nop
hlt
push
pop
neg
push
push
add
rcl
loopne
add
pusha
pop
adc
js
adc
inc
cmp
jb
add
inc
ret
std
ret
test
push
shl
inc
add
test
sub
jmp
fs
inc
enter
add
inc
mov
xor
adc
add
xor
mov
sub
adc
int
add
add
inc
xor
imul
sbb
adc
or
xor
inc
add
sub
add
mov
cld
push
test
pop
inc
add
mov
into
and
jl
inc
add
mov
iret
aas
push
sub
iret
add
dec
jno
sbb
cmp
adc
and
or
call
jge
nop
inc
stos
ins
call
lahf
repnz
and
inc
sbb
pop
fs
xor
loopne
sub
aam
shr
add
pusha
add
arpl
inc
push
cld
mov
add
(bad)
sbb
add
in
dec
movs
vcvtsd2si
iret
pop
dec
retf
mov
pop
and
es
mov
aas
clc
(bad)
arpl
ss
loopne
test
push
add
pop
adc
dec
ret
and
xor
inc
sbb
sbb
lock
in
push
and
aas
in
inc
jb
add
and
cmp
cld
xor
add
mov
out
nop
push
int3
mov
mov
dec
lock
add
mov
fnsave
push
sub
and
dec
aad
jmp
lock
jge
lock
lods
pop
mov
push
sbb
push
ret
shl
aam
in
bound
and
or
and
add
add
push
rol
mov
sub
jo
aas
imul
or
sbb
xor
add
inc
in
lods
in
mov
add
mov
xor
test
sti
aam
add
pop
xor
add
shl
pop
push
sar
mov
and
push
sub
cvtpi2ps
shl
mov
inc
dec
inc
test
jecxz
sub
jmp
clc
cmp
push
push
stc
(bad)
and
push
adc
in
ror
mov
mov
adc
mov
push
lock
or
and
push
or
das
add
inc
adc
nop
(bad)
push
sbb
add
xchg
dec
or
rol
add
add
xchg
sbb
pop
rcr
iret
sets
jg
adc
cwde
adc
cmp
inc
push
and
add
cli
rol
cld
rol
mov
mov
(bad)
fmul
pop
add
adc
push
add
ret
out
push
pop
inc
and
ficomp
add
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
or
aaa
cmps
and
sub
loop
mov
adc
ret
les
dec
mov
sub
or
ror
icebp
pop
mov
loope
ins
pusha
xchg
test
and
test
pushf
dec
push
mov
sbb
pop
sahf
adc
xchg
xchg
push
cli
clts
mov
adc
scas
in
add
and
sub
or
int3
xor
movs
pushaw
scas
inc
mov
jecxz
mov
cwde
ror
sub
xor
pusha
adc
pusha
cmp
inc
repz
pusha
mov
and
xor
clc
pop
inc
nop
mov
pop
lods
push
mov
or
pop
fsubr
add
test
pusha
add
call
push
(bad)
fldenv
loopne
add
inc
push
jp
jmp
retf
adc
sbb
xor
push
add
out
out
cmp
xor
add
test
push
or
inc
outs
adc
pop
push
in
loope
add
sbb
adc
xchg
fyl2x
iret
pop
ds
mov
in
inc
dec
xor
rcr
cmp
mov
xor
pop
adc
adc
dec
inc
nop
adc
(bad)
xor
dec
cmp
xchg
adc
enter
xchg
aas
and
retf
inc
in
cmp
add
ins
jb
shr
mov
xchg
inc
push
fldenv
cmp
add
add
inc
dec
cmp
enter
xor
jno
adc
or
add
outs
retf
adc
in
inc
int3
push
add
repnz
ss
loopne
iret
add
call
or
(bad)
push
sub
dec
inc
or
inc
xor
imul
push
cld
rol
call
dec
inc
out
jno
xchg
add
retf
add
pop
loopne
lods
pop
les
ror
cld
pop
ins
dec
pop
or
push
xor
popa
push
lds
pushf
cwde
jnp
inc
loopne
mov
aas
es
pop
cwde
sub
(bad)
cmp
and
jecxz
and
sbb
adc
sti
or
fs
lds
rcl
mov
push
push
cld
jae
leave
xor
adc
cmp
adc
(bad)
add
xor
sti
vmptrst
clc
jo
sbb
xor
mov
push
push
add
pop
jmp
xchg
cmp
mov
aam
leave
sub
or
xor
dec
xor
je
xor
adc
pusha
sub
ror
adc
xor
jge
and
add
mov
shr
add
inc
inc
xor
adc
int
xchg
cld
mov
sbb
sar
sbb
xchg
loop
or
or
mov
sub
nop
and
adc
or
or
or
loop
les
sbb
add
ret
out
inc
loop
in
idiv
mov
(bad)
cmp
or
int3
xor
dec
sbb
and
nop
mov
int3
adc
add
shl
cmp
shl
std
neg
mov
add
and
or
sbb
clc
xchg
(bad)
xchg
mov
js
push
fmul
inc
or
xchg
dec
or
data16
sbb
add
push
sbb
and
add
and
and
pop
loopne
add
mov
add
mov
add
je
jo
jg
add
lock
inc
test
lock
cmp
sub
sar
add
sbb
aad
or
xchg
mov
fadd
imul
sub
xchg
push
add
cld
add
sub
sbb
mov
inc
adc
test
push
mov
add
stc
add
or
inc
sub
add
add
add
add
or
dec
mov
inc
add
adc
mov
mov
mov
push
(bad)
les
inc
shl
mov
add
push
addr16
inc
xchg
xor
dec
clc
ja
jecxz
jle
adc
xchg
cmps
pop
add
add
arpl
push
test
push
xor
outs
or
jb
sub
push
and
push
sahf
ds
xor
les
add
adc
fcom
xor
and
stos
retf
mov
retf
mov
fnstsw
pop
inc
pusha
inc
add
add
jo
rol
rol
or
lgdtd
and
add
add
add
popa
xor
sbb
and
add
add
mov
add
inc
dec
inc
cmp
popa
inc
add
add
inc
(bad)
clc
mov
jmp
mov
add
hlt
in
xchg
add
retf
dec
stos
add
icebp
add
rol
cld
(bad)
cld
(bad)
clc
add
retf
aad
(bad)
fiadd
retf
(bad)
fld
(bad)
in
enter
aad
(bad)
cwde
add
les
call
add
mov
(bad)
sbb
mov
(bad)
leave
or
int3
add
(bad)
adc
add
mov
(bad)
std
xlat
stc
cmps
add
(bad)
ss
jns
test
and
jl
mov
pop
in
add
jp
jecxz
pop
(bad)
jmp
test
add
neg
in
push
cli
mov
retf
xchg
add
scas
or
mov
(bad)
mov
stc
lods
add
rcl
jae
(bad)
cmc
inc
stc
test
(bad)
in
or
mov
(bad)
in
cmp
mov
jmp
(bad)
out
popa
in
cmp
mov
add
add
loop
push
inc
ud0
mov
add
sbb
(bad)
in
(bad)
inc
lds
out
sbb
pop
add
out
dec
or
test
(bad)
jmp
mov
mov
pop
mov
and
adc
mov
mov
cmp
adc
sti
add
loopne
(bad)
cli
sar
or
lock
cmc
mov
inc
or
fist
les
xchg
pop
or
loop
fwait
(bad)
ret
inc
sti
in
repnz
xor
push
mov
adc
mov
cwde
push
add
pop
cld
mov
cli
rol
hlt
push
(bad)
rol
jmp
adc
ror
(bad)
call
stos
mov
mov
push
sub
jmp
mov
add
mov
xchg
pop
add
mov
call
add
sub
or
rcr
add
pusha
push
cli
lock
adc
retf
out
add
retf
and
add
call
add
test
out
in
(bad)
xlat
add
scas
add
out
fdivp
repnz
or
sbb
lds
jg
push
(bad)
clc
or
mov
push
adc
sti
mov
cld
ret
add
into
add
std
add
out
pop
cmc
fmul
(bad)
mov
jmp
sub
enter
or
cmps
or
jmp
add
mov
cld
mov
sbb
(bad)
inc
sti
clc
hlt
sti
lock
add
repz
idiv
clc
in
and
into
or
retf
push
in
fiadd
aad
pop
lahf
outs
sbb
jmp
repz
sbb
stos
pop
cli
fadd
cli
test
(bad)
fadd
in
dec
clc
rol
std
loope
hlt
hlt
sbb
test
scas
mov
pop
pop
adc
jmp
lock
and
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
xor
add
inc
std
or
mov
inc
jg
fdiv
inc
les
sub
add
sbb
push
sbb
push
push
mov
xchg
and
add
je
mov
mov
adc
cmp
mov
ds
sbb
mov
outs
xchg
rol
inc
mov
xor
add
inc
iret
stos
adc
scas
add
mov
push
dec
(bad)
pusha
mov
add
xchg
call
repnz
push
sbb
inc
inc
rcl
add
movs
ret
add
sub
xchg
sub
xchg
in
push
sbb
add
pop
cdq
and
movs
je
lds
es
ss
dec
mov
or
push
cmps
shl
push
cmp
loop
(bad)
pop
test
or
push
ins
arpl
jecxz
dec
mov
rcl
call
jmp
adc
add
loope
movs
cli
ror
ret
out
mov
add
and
loope
jb
push
rol
push
add
mov
add
es
sbb
shl
or
rol
cmps
test
mov
sbb
enter
adc
push
sbb
jo
adc
jb
or
in
jae
mov
inc
(bad)
pop
adc
adc
les
and
or
add
gs
and
xchg
retf
fs
mov
lods
push
xor
les
add
int3
push
add
add
sub
mov
xchg
or
dec
or
and
addr16
add
inc
leave
or
sahf
and
add
push
es
add
or
fcom
add
inc
push
inc
add
sbb
sbb
call
nop
popa
push
nop
mov
add
ins
pop
or
mov
xor
inc
or
pusha
fwait
jmp
mov
into
and
ins
or
loopne
xor
test
or
or
pop
cmps
sbb
(bad)
inc
or
int3
nop
sub
movs
add
pop
mov
mov
(bad)
loopne
jge
xor
dec
dec
es
shr
nop
ret
lock
scas
in
pop
cs
and
andps
pusha
inc
dec
gs
int
sub
mov
inc
sub
jno
or
mov
repnz
sbb
pop
add
arpl
add
les
sub
rol
int3
jb
sbb
inc
mov
or
repnz
(bad)
or
sbb
adc
adc
adc
adc
pusha
mov
pop
mov
inc
add
xchg
adc
ja
dec
fstp
mov
push
retf
mov
out
inc
test
imul
dec
add
aam
mov
add
fadd
or
lods
dec
or
mov
add
add
sub
cmp
fidivr
test
and
and
test
test
adc
gs
ret
out
mov
add
(bad)
xchg
js
stc
addr16
jecxz
add
sbb
dec
or
sbb
add
inc
ret
adc
pop
mov
add
add
add
cmp
and
and
inc
dec
dec
xor
add
sub
mov
sub
sbb
mov
or
sub
lds
push
sub
and
push
shl
push
pusha
mov
or
push
adc
bound
adc
mov
shl
add
or
adc
pop
mov
test
mov
mov
mov
les
mov
sub
push
arpl
sbb
cmp
sub
and
pop
inc
adc
mov
add
(bad)
mov
sbb
sbb
mov
test
fs
sbb
mov
sub
cmp
add
fcmovbe
(bad)
mov
and
sbb
jno
adc
push
jmp
inc
sub
inc
or
ins
popa
add
sub
sub
loopne
add
stos
lahf
std
xchg
pusha
or
xor
inc
cs
push
das
add
jp
add
adc
mov
sbb
adc
jge
or
loopne
and
pmulhw
mov
add
mov
push
rol
adc
call
add
push
fld
xor
psadbw
push
jno
push
xor
aam
xor
xor
and
imul
rol
push
lds
pop
inc
add
pusha
or
pusha
ret
cs
shr
movs
es
mov
xor
ret
sbb
rol
sar
rol
mov
jb
add
inc
sub
repnz
dec
adc
adc
push
lock
push
out
pop
(bad)
fs
xchg
cmp
or
cmc
add
nop
add
cmp
pop
add
sbb
leave
pop
push
push
or
xor
and
mov
mov
add
call
pop
sbb
shl
inc
add
add
mov
cld
loope
(bad)
rol
loopne
pop
or
fwait
pop
and
add
and
jmp
dec
fs
lahf
std
ins
push
mov
push
push
test
sbb
and
(bad)
adc
push
rol
jo
adc
add
or
inc
mov
add
call
pop
or
jnp
mov
jmp
push
push
daa
lds
cwde
jmp
push
in
call
push
push
inc
add
pop
inc
les
sub
adc
push
or
add
or
inc
sbb
pop
inc
in
sbb
or
jo
sub
add
add
push
inc
or
mov
push
aaa
jl
pop
imul
push
pushf
nop
cmp
inc
adc
push
push
sbb
loopne
enter
pusha
cmp
xor
mov
xchg
test
inc
and
add
pop
test
das
shl
jmp
cmp
or
or
add
add
inc
mov
jecxz
and
test
adc
add
cmp
inc
add
xchg
and
aad
inc
(bad)
icebp
add
sub
(bad)
add
mov
inc
pop
outs
rol
add
sbb
pushf
push
stos
or
xor
inc
popa
push
jl
and
add
les
or
rol
les
xchg
inc
sbb
cmp
loopne
add
add
or
test
cmp
out
mov
sub
loopne
add
push
imul
pop
mov
sbb
push
inc
cmp
xchg
daa
and
lds
add
or
wbinvd
div
inc
pop
xor
js
jp
lds
int3
les
jo
enter
adc
into
jo
sub
and
lods
adc
mov
shl
and
jae
and
inc
adc
test
das
js
mov
or
xor
mov
and
pop
mov
push
mov
or
outs
ins
iret
das
bound
xchg
push
fadd
fcom
pop
or
rcl
add
sub
push
add
pop
push
rol
xor
adc
loopne
cmp
mov
lods
in
xchg
lock
fistp
and
cs
inc
je
mov
push
mov
daa
sub
repz
add
stc
add
or
inc
sub
add
add
or
add
or
dec
push
rcl
or
cld
ja
pusha
xchg
cwde
and
gs
add
loop
mov
pop
mov
and
or
jg
enter
and
or
xchg
or
rol
cmp
xchg
and
adc
or
adc
pop
loop
jp
in
mov
xor
fisubr
or
adc
sub
adc
sbb
nop
inc
or
mov
stc
jmp
sbb
inc
in
cdq
mov
fcmovnu
push
sbb
leave
adc
dec
inc
add
mov
movs
fldenv
mov
jecxz
scas
cmp
shr
push
add
movs
adc
and
lahf
or
add
mov
push
push
sub
add
lock
inc
stos
and
inc
add
cld
pop
dec
add
loope
test
mov
fbld
fistp
push
sbb
mov
mov
and
mov
addr16
adc
outs
inc
or
push
add
xor
sub
and
xchg
mov
in
jnp
jl
lds
push
and
add
sti
xor
fwait
ins
add
and
and
out
add
cld
adc
adc
mov
dec
adc
ins
ror
xchg
adc
pop
mov
icebp
xchg
nop
push
repz
jne
cmp
outs
or
mov
sub
or
clc
cmp
mov
and
sbb
fdiv
shl
es
fnstenv
adc
std
mov
aaa
sbb
add
mov
xor
std
push
jecxz
push
mov
in
inc
mov
mov
cdq
test
test
adc
jp
or
aas
jecxz
fisub
xor
pusha
mov
cli
iret
add
add
dec
mov
and
retf
adc
or
scas
add
popa
add
(bad)
and
dec
(bad)
rol
loopne
push
aam
and
adc
inc
sbb
shr
cmp
mov
mov
cld
xor
ret
push
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
rol
mov
or
pop
or
xor
out
sub
add
adc
xchg
cmp
dec
fisubr
pushf
rol
or
jmp
cld
push
ror
pop
mov
call
popa
push
mov
mov
push
xchg
sub
and
inc
or
fld
retf
cmp
push
or
sbb
js
adc
pop
push
sub
adc
sub
nop
rcr
or
inc
xchg
push
in
and
or
inc
stc
xchg
sub
call
inc
fcomp
fs
es
sub
add
in
das
add
push
dec
test
cmpps
pushf
and
xor
xchg
mov
push
adc
dec
adc
sbb
(bad)
pop
nop
add
add
scas
adc
jg
sar
clc
out
dec
add
mov
pop
or
aad
cmp
or
mov
jl
js
retf
cld
xor
adc
sbb
minss
pop
ror
or
mov
add
push
adc
iret
adc
and
cwde
cwde
mov
ror
adc
gs
popf
inc
adc
add
push
pusha
and
inc
adc
adc
mov
adc
ins
mov
dec
sbb
sub
add
push
movs
or
or
pop
sbb
inc
fwait
cld
jecxz
xchg
push
inc
stc
pop
jne
adc
mov
mov
cdq
push
inc
loopne
pushf
or
es
popf
jbe
test
test
mov
test
or
inc
mov
xor
inc
push
mov
xor
add
lock
inc
inc
xor
ret
stos
inc
push
xchg
add
xchg
and
loope
mov
adc
in
dec
xor
mov
sub
in
scas
ror
rol
or
push
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
or
adc
dec
sbb
lahf
mov
adc
xor
lds
fsubr
pop
inc
xchg
and
cmp
pop
xchg
adc
and
or
sti
xchg
mov
aas
fwait
add
retf
pop
push
push
push
sbb
and
dec
add
mov
dec
popf
call
or
je
retf
mov
stos
push
leave
xchg
das
push
shr
push
and
pop
mov
js
gs
cmp
push
fs
test
aad
and
enter
push
sbb
add
es
lods
mov
fs
push
xchg
nop
and
push
inc
cdq
ret
(bad)
leave
add
les
pushf
or
mov
or
je
sub
pop
add
(bad)
ror
int3
ret
inc
aas
add
or
rcl
out
inc
xchg
sub
mov
lahf
pushf
jg
push
or
aam
inc
sbb
jg
sbb
adc
aam
test
out
inc
add
push
add
aas
arpl
dec
add
inc
sbb
ror
adc
add
sub
mov
inc
add
or
sbb
mov
and
xchg
or
add
loope
cwde
js
inc
cmp
dec
lds
inc
and
add
adc
aas
test
push
and
sub
add
mov
xchg
xor
mov
rol
adc
inc
add
sbb
shl
mov
push
xchg
add
xor
out
adc
and
aas
jb
fs
cmp
push
mov
aas
inc
xor
pop
mov
pmuludq
add
add
lds
cmp
cld
push
or
out
inc
mov
or
sub
add
call
or
or
test
lds
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
test
cmp
lahf
test
(bad)
and
xchg
jg
push
push
mov
and
ins
jp
adc
nop
add
shl
or
sbb
sub
loopne
pop
pop
sbb
hlt
or
or
sub
nop
rcl
adc
push
add
push
inc
and
popf
or
lods
pop
push
or
pusha
or
adc
leave
imul
mov
cmp
add
mov
and
jno
dec
das
add
or
test
jae
nop
push
adc
outs
or
adc
sbb
pop
fsubr
dec
loop
mov
test
adc
adc
push
adc
pop
in
retf
and
jb
(bad)
ja
add
inc
mov
jl
ja
pop
in
mov
add
stc
rol
call
enter
xchg
(bad)
sub
mov
lods
lods
jae
and
and
adc
push
sar
std
xchg
leave
aas
adc
sub
sbb
mov
add
inc
sub
add
test
inc
int3
popa
or
into
and
int
and
popa
test
adc
mov
add
neg
push
dec
cmp
(bad)
clc
loopne
inc
or
inc
sub
add
aas
push
lods
mov
sub
or
pop
mov
sbb
sub
dec
xor
xor
gs
push
cmp
sbb
xor
nop
inc
sbb
jo
or
adc
pushf
adc
inc
nop
pop
cmp
fwait
dec
add
push
push
sbb
sbb
in
dec
sub
adc
cs
push
or
push
push
cli
dec
pushf
and
and
and
dec
mov
push
test
hlt
adc
add
jmp
xlat
adc
cmp
add
jmp
loopne
sbb
nop
inc
sub
or
inc
cmp
adc
inc
or
add
ret
test
popa
push
(bad)
btr
adc
mov
or
sbb
(bad)
pop
out
push
jmp
dec
adc
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
rcr
mov
mov
arpl
dec
and
in
pop
mov
sbb
loop
adc
int
adc
hlt
outs
inc
push
or
pop
push
sub
cmp
and
cmp
xabort
pushf
and
inc
nop
lock
cmp
les
add
inc
test
dec
es
dec
(bad)
add
add
les
mov
(bad)
sar
adc
stc
pusha
dec
aad
jg
sbb
int3
xchg
sub
add
push
mov
jo
and
push
loop
mov
adc
inc
mov
pop
add
pop
lock
push
jle
stc
xchg
inc
mov
loopne
lods
es
rol
xchg
adc
fld
sub
dec
sbb
inc
mov
pop
adc
jmp
dec
cdq
pushf
mov
and
outs
rol
leave
push
xor
in
jb
xor
mov
cld
inc
addr16
es
or
or
dec
fild
sub
cmp
add
sub
jae
sub
sub
or
push
inc
or
xchg
adc
or
add
dec
nop
add
into
or
sbb
pop
add
shl
loopne
or
sub
dec
inc
rol
adc
sbb
sbb
xchg
fwait
fs
add
mov
sbb
dec
xchg
mov
les
adc
cmps
dec
push
or
adc
packssdw
loopne
xadd
xchg
dec
mov
add
jnp
add
dec
pushf
gs
or
add
sub
mov
repz
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
push
ret
call
retf
add
dec
and
loopne
test
add
xor
cld
repnz
xchg
xor
adc
ror
or
popf
add
or
pop
add
aam
xchg
movs
pop
cmp
into
inc
add
enter
retf
mov
test
xchg
or
mov
adc
stos
sbb
xchg
and
adc
scas
inc
movs
push
or
cld
clc
and
pusha
add
mov
or
inc
or
out
std
dec
xor
or
adc
sbb
or
sbb
mov
push
das
mov
push
mov
or
jp
mov
ins
mov
test
dec
and
imul
and
inc
lock
dec
cdq
add
sub
nop
adc
bound
xchg
push
lods
or
or
add
mov
dec
add
sub
sbb
xor
mov
add
int3
popa
or
into
lods
and
adc
sub
ror
and
nop
movlps
inc
icebp
iret
sub
lods
mov
rcl
aas
pop
mov
(bad)
mov
push
inc
jae
aas
retf
js
inc
sbb
mov
cmp
sub
cmp
lea
xor
inc
adc
js
inc
and
in
inc
ds
pop
call
and
cmp
inc
push
and
dec
rdtsc
push
loopne
sbb
lds
sub
rcr
arpl
rol
cld
xor
inc
dec
mov
mov
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
test
sbb
lahf
mov
adc
loope
xchg
jg
push
push
cwde
in
pop
mov
and
dec
js
adc
mov
cmp
pop
test
mov
adc
xchg
xor
gs
jo
or
in
xchg
adc
mov
mov
mov
fs
add
inc
and
add
in
add
mov
test
cwde
and
adc
push
mov
rcl
stos
push
leave
xchg
das
push
shr
push
shl
mov
pop
xchg
retf
mov
mov
(bad)
or
ins
mov
in
mov
out
dec
inc
push
and
xor
add
pop
mov
test
sbb
and
fcom
and
stos
jg
call
ss
and
fadd
mov
fs
mov
(bad)
push
aam
(bad)
ds
jg
adc
mov
mov
xor
adc
add
and
iret
jae
and
mov
arpl
push
adc
pop
icebp
sub
retf
inc
xor
movs
inc
and
int
in
sbb
xor
add
push
push
ret
adc
loop
or
add
inc
cmp
mov
pusha
ret
sub
int3
dec
and
and
in
test
adc
adc
push
sub
pop
mov
add
nop
loopne
push
inc
or
(bad)
sub
je
test
pop
repnz
or
test
lock
mov
adc
inc
add
and
in
ror
call
and
mov
sub
xchg
(bad)
jae
inc
inc
sbb
jmp
sub
jl
mov
or
or
sub
push
fcmove
xor
stos
sub
adc
dec
and
add
jo
inc
scas
dec
or
imul
shr
add
inc
xor
inc
scas
in
ret
sbb
mov
and
nop
daa
fisttp
push
sub
mov
pop
push
sub
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
or
adc
dec
cmp
lahf
test
push
dec
pushf
sub
lds
test
fist
sbb
xor
sub
loopne
inc
test
xchg
jo
aas
fwait
add
add
stos
add
cs
xlat
and
add
cmps
les
dec
add
xchg
mov
cmp
clc
pusha
sub
stos
push
cld
mov
inc
push
add
fadd
pop
add
or
xchg
pop
xchg
sbb
clc
xchg
or
adc
mov
or
dec
push
or
das
push
mov
and
jecxz
or
sub
je
dec
pop
adc
mov
xchg
sub
dec
pop
sub
xor
mov
out
popa
cmp
inc
and
cmps
lods
test
inc
cwde
jecxz
lahf
adc
mov
cli
(bad)
pop
fild
into
add
outs
xchg
mov
push
adc
dec
repnz
sbb
sub
xchg
cld
mov
add
cmp
pushf
adc
aas
cmp
aam
push
inc
inc
push
or
xor
inc
or
aam
sbb
ins
mov
mov
sub
add
add
nop
add
enter
inc
or
or
mov
add
push
adc
iret
adc
adc
dec
xor
cmp
adc
adc
je
sub
sbb
les
test
inc
add
xchg
xchg
xor
cld
mov
add
movs
adc
xor
inc
test
sbb
(bad)
dec
xchg
push
cmp
iret
add
inc
dec
je
out
push
rol
pop
loope
(bad)
and
or
ret
push
sub
or
jo
rol
xchg
push
addr16
adc
adc
xchg
xor
ret
sub
or
les
cwde
inc
add
jle
pop
rcr
sbb
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
rol
xchg
or
pop
stc
pop
and
cmp
push
add
xchg
test
and
and
and
test
xchg
mov
jno
(bad)
mov
add
mov
adc
data16
adc
scas
sub
mov
retf
punpckhbw
mov
and
push
xchg
shl
or
mov
pop
ficom
mov
sub
imul
sbb
xchg
xlat
jmp
cmp
sar
push
inc
mov
or
or
movs
adc
mov
adc
adc
mov
adc
jae
xchg
xor
pop
in
rcl
and
jbe
dec
sub
lahf
sub
xchg
rcr
xchg
push
lock
retf
aas
push
les
pusha
push
pop
dec
pop
mov
or
xchg
inc
add
adc
stos
js
xor
add
and
ds
shl
and
aas
jo
xchg
push
cld
add
ret
and
fdivr
xchg
lock
pop
jg
add
or
inc
mov
cdq
add
loope
adc
das
nop
mov
inc
fwait
or
in
popa
(bad)
cmp
add
dec
inc
push
add
inc
or
int
add
sbb
es
dec
data16
inc
out
or
int3
inc
arpl
adc
aas
or
in
out
enter
outs
(bad)
jecxz
cwde
outs
(bad)
stc
iret
cmp
test
add
adc
fistp
mov
add
and
nop
adc
and
xor
mov
(bad)
rol
and
shl
cld
xor
add
dec
mov
dec
adc
sub
(bad)
xor
ret
adc
scas
call
inc
sub
jge
hlt
test
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
mov
push
cmps
mov
xchg
jg
sbb
cmp
icebp
pop
add
push
pop
pop
adc
push
retf
mov
pushf
inc
shl
inc
push
ins
icebp
out
popf
mov
pop
adc
push
push
push
into
xchg
add
push
mov
sub
cmp
xor
stos
sub
push
jl
xchg
adc
adc
add
test
shr
stos
sub
inc
test
jg
aam
lds
imul
sub
lods
push
cld
pop
lods
push
ret
and
aas
xchg
mov
jmp
das
and
xor
add
push
adc
add
cmc
das
sbb
es
cdq
and
fs
adc
inc
add
mov
xchg
dec
nop
add
add
mov
leave
pop
pop
adc
pop
test
add
mov
or
mov
push
fwait
ret
pop
or
sub
call
ja
loopne
leave
clc
adc
sbb
jne
inc
outs
jmp
adc
adc
xor
clc
xor
add
cmps
push
and
repz
inc
or
inc
and
stos
xor
jo
adc
pop
stos
arpl
xchg
and
test
and
lea
in
les
add
adc
pop
add
ror
xchg
push
js
or
iret
add
or
mov
adc
sar
push
je
inc
pop
cmp
outs
(bad)
jl
rol
add
and
push
sbb
call
clc
out
jl
pop
adc
bnd
inc
push
push
xchg
inc
sbb
jae
add
in
mov
ds
jmp
or
sub
iret
lea
rol
sub
aas
ret
iret
sbb
retf
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
gs
adc
sbb
mov
add
daa
addr16
rcr
adc
sub
push
popa
inc
ins
inc
adc
sub
sbb
adc
cmps
push
push
adc
xchg
xchg
add
mov
hlt
pmulhw
mov
clc
mov
loope
xor
(bad)
add
add
pushf
adc
cmps
push
push
ret
xlat
xchg
ret
aas
add
mov
xchg
add
xor
and
add
pop
cwde
sbb
mov
cmps
mov
mov
push
mov
or
and
push
outs
push
push
test
enter
xchg
inc
add
or
ins
and
arpl
and
cmp
inc
(bad)
mov
xor
adc
stos
mov
inc
adc
ins
mov
repz
dec
inc
mov
imul
nop
xchg
sbb
xchg
inc
jno
stos
dec
mov
mov
sub
adc
jno
test
sar
xchg
xchg
mov
push
inc
xchg
lea
add
test
lea
aam
bndstx
rol
(bad)
mov
ins
xor
pop
push
adc
or
out
test
test
movs
leave
ror
pop
jl
loop
push
cmp
dec
sbb
js
test
loopne
ss
adc
dec
push
fwait
dec
adc
nop
sbb
lods
mov
add
adc
aam
es
push
xor
xchg
or
inc
pop
push
jmp
dec
(bad)
adc
cwde
pop
adc
add
shl
inc
and
xchg
mov
cdq
jae
in
inc
or
push
inc
lahf
add
or
movlps
xor
mov
cmp
adc
jle
adc
cmps
ret
ret
pop
aas
sbb
ret
stos
popf
(bad)
pop
adc
push
jecxz
add
jmp
push
push
mov
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
jo
jo
rol
rol
or
lgdtd
push
add
add
popa
xor
sbb
and
add
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
retf
sub
mov
std
call
mov
push
test
cmps
data16
(bad)
xor
div
hlt
add
xchg
mov
push
std
call
(bad)
stos
(bad)
icebp
add
clc
add
stc
cmps
(bad)
(bad)
stc
(bad)
stc
xchg
(bad)
clc
mov
jmp
(bad)
in
add
shl
xor
(bad)
sbb
fwait
add
(bad)
adc
stc
push
cmps
or
ss
stc
mov
fcomp
test
add
out
call
lds
(bad)
cld
aad
retf
or
in
inc
std
retf
test
std
mov
dec
add
fld
call
add
cmps
add
jnp
(bad)
rol
jecxz
or
neg
push
add
add
add
out
push
(bad)
(bad)
and
retf
in
(bad)
inc
(bad)
(bad)
sub
add
test
xlat
stos
adc
in
or
cld
les
jno
cmc
and
lods
add
mov
(bad)
inc
cli
mov
stc
fadd
lods
add
repnz
or
out
loop
mov
xchg
pop
add
sub
in
in
fdivr
mov
retf
cli
cmc
jmp
mov
(bad)
out
addr16
sub
push
adc
mov
sti
mov
retf
fwait
adc
or
inc
add
add
ror
mov
mov
adc
aad
out
adc
sahf
add
sti
add
lods
pmuludq
fnstcw
jecxz
(bad)
not
repnz
push
(bad)
fdivr
jmp
icebp
fadd
(bad)
jmp
(bad)
lock
out
loop
mov
sti
hlt
loopne
icebp
add
stos
or
cld
add
push
(bad)
stc
pop
div
neg
or
mov
(bad)
fld
jno
repnz
test
or
stos
add
shl
in
add
in
inc
add
ror
ret
dec
push
(bad)
fld
hlt
retf
add
repnz
mov
inc
add
dec
add
repz
ret
int
scas
jle
(bad)
mov
call
add
in
ret
mov
or
mov
lea
stc
mov
mov
jmp
scas
pop
xchg
pop
or
cld
add
enter
dec
sar
(bad)
test
out
ret
paddb
(bad)
mov
popf
addr16
fild
hlt
aam
stc
xlat
add
cmc
pop
push
call
or
mov
dec
add
cmps
or
icebp
xor
adc
fild
cmp
div
or
mov
sti
stc
or
inc
loopne
add
loope
idiv
(bad)
std
add
mov
cmp
add
cmc
push
repnz
pop
clc
repz
jmp
clc
cmc
out
cli
clc
repnz
hlt
hlt
imul
test
test
cli
mov
aam
or
out
(bad)
inc
xor
aaa
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
aas
sbb
jl
leave
lds
push
inc
inc
fs
lds
xchg
sub
add
inc
xchg
dec
sbb
sub
ret
enter
cs
mov
imul
call
mov
leave
repnz
add
mov
dec
sbb
ins
(bad)
daa
pusha
sub
mov
inc
mov
mov
mov
cmps
adc
cmp
popa
jb
sub
xor
add
add
lods
or
mov
push
pop
sbb
fistp
add
scas
cmp
loope
ror
int3
pop
daa
add
test
in
or
retf
and
pop
lds
movs
dec
ror
or
sub
mov
aas
popa
into
popf
stos
and
xchg
mov
and
or
cmp
push
and
mov
ret
outs
mov
jmp
or
push
lods
push
arpl
mov
(bad)
packssdw
dec
ja
out
jbe
ins
push
mov
test
sbb
test
jp
bound
pop
(bad)
mov
enter
ds
add
repnz
rol
adc
xor
and
inc
push
jnp
icebp
xchg
jns
sbb
adc
retf
add
add
cmp
push
push
xchg
dec
and
adc
sbb
and
bound
add
sbb
jg
xor
and
cmp
fcom
cmp
xchg
je
push
sub
in
pusha
sbb
(bad)
push
add
cs
clc
push
rcr
seto
les
xor
mov
add
fadd
into
or
call
mov
adc
ror
mov
enter
and
jg
mov
movs
inc
push
add
sub
mov
(bad)
jmp
loopne
daa
in
xlat
loop
addr16
les
test
nop
xor
cmps
fdivp
mov
mov
and
xchg
(bad)
xor
cmp
push
scas
jo
ror
add
inc
push
sbb
inc
stos
inc
and
scas
mov
sbb
mov
jb
pop
lds
push
adc
dec
pop
(bad)
fcom
xchg
xlat
and
xchg
adc
xor
inc
mov
sbb
add
pushf
mov
xor
mov
sub
pop
inc
inc
jne
scas
fisubr
pop
cmp
xor
adc
or
pushf
pusha
inc
add
mov
ret
sub
push
sbb
mov
int
sub
add
push
push
add
inc
je
in
repz
call
dec
fsub
adc
cld
xchg
inc
add
mov
ret
retf
jmp
nop
ins
pop
push
sbb
addr16
pusha
or
push
dec
adc
fdiv
call
rol
call
cmp
inc
add
push
leave
sbb
loop
xchg
inc
inc
daa
pop
out
cwde
mov
outs
test
hlt
in
push
test
test
fst
fs
cmps
push
pushf
sahf
cli
jmp
pop
ror
xchg
nop
push
mov
jecxz
add
leave
cmp
fs
inc
add
arpl
retf
aas
add
xor
dec
push
add
push
adc
in
pop
lods
push
shl
rol
add
mov
adc
mov
ret
jo
ja
and
pop
clc
fsub
pop
adc
sti
and
and
xchg
cwde
adc
pushf
imul
fbld
pop
ret
xor
and
(bad)
adc
adc
sub
dec
inc
inc
add
xchg
add
inc
jno
ret
or
les
sbb
or
xor
xor
cmp
pop
push
jb
xor
or
or
inc
and
add
ror
rol
push
ret
jno
add
fs
fmul
push
les
movs
jo
adc
mov
pop
js
inc
sub
mov
arpl
push
adc
push
inc
pop
mov
add
sbb
add
mov
add
jno
sub
or
push
dec
and
(bad)
adc
pop
mov
or
and
outs
dec
shl
rcl
ret
mov
push
sub
sbb
adc
and
jo
xor
jle
sub
loope
add
adc
inc
xor
sti
dec
daa
pusha
add
enter
rol
adc
xor
xor
push
rol
cwde
and
or
inc
xor
add
lods
and
push
inc
adc
push
mov
jmp
adc
add
dec
rol
test
adc
test
inc
pop
mov
add
int3
nop
inc
push
movs
push
int
js
and
inc
sbb
pusha
cmp
inc
inc
loopne
ret
loopne
push
cmp
and
rol
push
xchg
xor
dec
fadd
push
cld
pusha
add
mov
add
mov
(bad)
ss
sub
xor
loopne
pmulhuw
ins
cld
inc
or
lock
pop
les
add
adc
sub
in
rcl
fadd
adc
or
hlt
add
xor
and
rol
sub
add
cmp
call
mov
js
adc
clc
add
cld
lock
mov
or
cmps
mov
mov
adc
jo
or
mov
and
cwde
jecxz
cmps
push
push
inc
cmp
xor
push
sbb
pusha
adc
jo
adc
inc
adc
inc
pop
push
inc
ror
lock
mov
loopne
mov
nop
popa
add
cmp
add
or
pushf
and
or
mov
and
mov
add
or
ret
shl
sub
mov
sbb
ret
pop
jle
add
cmp
adc
xor
add
mov
sbb
pop
mov
dec
sbb
pop
sub
mov
xchg
repz
xchg
or
and
cld
rol
(bad)
jp
push
or
adc
or
adc
xor
cmp
xchg
mov
sbb
popa
add
xchg
bound
mov
nop
or
call
fadd
jo
add
or
adc
push
adc
or
mov
mov
or
out
cwde
bound
test
add
sbb
inc
pushf
or
leave
dec
inc
add
jbe
les
stos
and
and
add
les
pop
add
xor
cmp
inc
mov
add
sub
loop
test
inc
or
pop
inc
xor
mov
sbb
add
pop
loopne
push
mov
inc
cdq
add
inc
inc
adc
and
add
loope
jbe
and
add
outs
adc
pusha
add
jo
dec
sub
or
mov
pop
test
sbb
adc
pop
jp
sub
jl
add
xchg
adc
pop
mov
pop
ror
or
jo
sbb
sbb
mov
lock
loopne
sbb
and
add
add
inc
sub
add
add
adc
add
or
xor
rol
mov
mov
adc
pop
jbe
sbb
je
add
pop
inc
or
fs
in
popf
push
pop
jns
jmp
and
sbb
and
or
popf
add
dec
mov
loopne
inc
push
repnz
add
jmp
mov
shl
dec
cmps
inc
push
(bad)
and
shr
loope
xor
pop
adc
les
call
and
mov
mov
in
dec
mov
pop
mov
ss
mov
push
test
push
mov
mov
in
xor
sbb
xchg
pop
adc
push
aam
add
int3
mov
stos
popf
ror
mov
inc
mov
jg
mov
or
fadd
sub
call
out
pop
test
call
inc
pusha
pushf
pop
daa
dec
gs
je
mov
pop
dec
cmp
clc
cmps
arpl
loopne
and
loopne
adc
mov
dec
adc
sub
cmp
int3
inc
test
popa
inc
adc
push
add
inc
mov
dec
cwde
bound
les
push
gs
xor
loop
aaa
ins
adc
dec
and
enter
adc
jl
add
or
push
repnz
adc
les
adc
sar
int3
sub
sbb
push
add
mov
sar
cld
jb
add
xor
int3
aas
add
nop
rcl
cld
rol
add
inc
add
xor
or
cmp
adc
loopne
add
adc
adc
cmp
sub
add
adc
addr16
adc
jp
mov
sub
or
test
aas
cwde
jb
add
cmp
dec
pop
loopne
adc
add
adc
dec
sub
dec
lock
adc
adc
cld
mov
jb
movs
call
xchg
mov
sbb
sub
in
rol
adc
nop
les
jmp
jecxz
das
loopne
pop
inc
scas
aas
sub
dec
aaa
adc
repz
adc
xor
les
cmp
and
sbb
rol
xor
xor
enter
adc
sbb
or
or
mov
inc
and
hlt
inc
add
push
sbb
inc
and
loopne
add
psubw
and
push
or
(bad)
icebp
dec
adc
and
mov
or
imul
xor
xor
cmp
aas
xchg
fimul
mov
xchg
adc
add
aaa
or
dec
sub
inc
and
or
rol
or
js
dec
shl
jbe
adc
call
mov
sbb
shl
adc
aas
and
rol
jnp
mov
xor
lea
and
add
pop
sbb
inc
lock
mov
loopne
data16
jno
sbb
add
cmps
mov
and
pminsw
and
add
add
inc
sub
add
add
add
add
or
xor
aas
or
loope
inc
sub
test
mov
xchg
or
pushf
sbb
inc
in
or
nop
enter
add
std
jecxz
lods
pop
lds
rol
jg
inc
sahf
inc
sbb
inc
xor
add
cli
adc
addr16
add
shr
inc
loopne
adc
nop
and
inc
sub
xor
mov
loopne
pop
or
std
fsub
or
test
ins
mov
lods
push
mov
pusha
add
xchg
jg
jecxz
jns
sub
xor
dec
xchg
sbb
and
mov
sbb
lock
cmp
cmp
xchg
xchg
inc
and
xor
push
cmp
bound
mov
push
leave
sbb
mov
dec
dec
dec
xor
(bad)
mov
(bad)
push
sub
loop
pop
and
cdq
daa
pop
pusha
mov
(bad)
jnp
or
int3
stc
out
pop
stos
inc
int3
popf
sub
pusha
add
adc
pop
cld
shl
das
jl
mov
add
test
or
add
or
sbb
or
int3
or
shl
push
mov
aam
repz
or
sub
adc
loopne
icebp
invd
sbb
lock
rol
(bad)
call
sbb
sub
aam
adc
call
iret
vmread
enter
rol
adc
add
add
pop
cmp
repz
adc
adc
push
inc
pop
mov
jno
add
or
mov
cwde
lock
push
push
add
sbb
xor
push
lds
cmp
xlat
aas
jne
xor
add
cmp
sub
pusha
repz
push
inc
ret
enter
jno
xor
mov
arpl
sahf
je
mov
mov
push
inc
pop
push
pop
loopne
and
les
aas
test
call
add
push
push
mov
cmp
push
je
inc
repnz
xchg
push
cld
push
sar
xor
xchg
inc
mov
and
loopne
add
and
adc
js
pop
inc
das
sub
adc
rol
nop
das
fild
rol
inc
mov
cwde
shl
sbb
or
mov
in
ret
pop
js
repz
daa
cli
pushf
xor
aas
adc
les
adc
hlt
mov
or
xor
call
or
loopne
add
pushf
sbb
aas
dec
mov
in
add
or
xchg
pusha
add
inc
pop
mov
lock
test
test
and
jl
add
cmp
push
mov
test
adc
add
or
inc
sbb
lock
inc
stos
lods
adc
(bad)
hlt
icebp
adc
or
xchg
in
xor
call
lods
and
popf
push
aam
sbb
cmp
add
stc
add
add
inc
sub
add
add
add
add
or
mov
aas
add
xchg
push
and
addr16
out
mov
loope
or
add
stc
jns
dec
inc
xchg
jecxz
aam
or
jno
sti
xor
inc
push
push
xchg
clc
clc
xor
or
adc
mov
int
bnd
mov
test
mov
pop
gs
call
sbb
or
add
aas
mov
cmps
sbb
lods
fs
and
xchg
push
dec
mov
and
sbb
adc
pop
movs
pop
lods
or
xor
adc
sahf
push
popa
repnz
frstor
push
inc
inc
pusha
pushf
pop
dec
or
rcl
mov
int3
nop
xchg
inc
mov
mov
lock
sub
pop
fmul
xor
movs
sbb
sbb
sub
adc
out
sbb
cmp
xchg
repnz
adc
and
mov
movs
call
(bad)
out
lea
add
ds
adc
and
xor
sub
ret
aas
sbb
dec
xor
xchg
adc
retf
adc
inc
add
hlt
loopne
das
movs
std
mov
inc
dec
cmp
ret
aas
jnp
xor
sub
aam
cmp
xor
inc
or
sub
mov
jb
adc
add
and
cmp
pusha
add
in
lock
pop
inc
dec
stc
inc
adc
and
retf
ins
pusha
add
pop
pop
xor
lds
sub
add
daa
add
sbb
jp
lock
sub
or
(bad)
add
mov
lock
sub
inc
or
cld
rol
sub
inc
push
enter
or
xchg
sub
dec
or
pusha
inc
sbb
add
sub
inc
sbb
mov
or
and
sbb
dec
aaa
or
push
test
mov
pop
cld
rol
sti
and
or
aas
add
cmp
and
push
test
xor
and
int3
shr
adc
cmovge
and
and
add
sub
inc
adc
(bad)
pushf
stos
pop
push
or
xor
sbb
xor
pop
xor
and
dec
mov
pusha
inc
and
xchg
or
adc
inc
and
pushf
std
popa
rcl
xchg
cld
mov
xor
jl
ret
xor
sub
mov
jg
push
ret
and
ror
or
dec
xor
std
and
or
add
adc
inc
add
rol
nop
xchg
sar
mov
xor
sub
mov
push
sub
cmp
dec
lar
hsubps
lods
xor
push
push
cld
sar
inc
push
push
pop
icebp
(bad)
adc
xchg
les
add
xchg
push
inc
jmp
adc
hlt
xor
movs
or
add
add
popa
(bad)
ss
into
movs
adc
add
add
inc
sub
add
add
add
add
or
xor
or
push
stc
mov
pusha
mov
dec
sub
retf
aas
jns
xchg
xor
sub
add
(bad)
bnd
das
cld
xor
stos
pop
inc
dec
call
shl
push
jo
mov
mov
in
retf
xor
(bad)
and
xchg
pop
lea
test
xchg
(bad)
(bad)
mov
loopne
adc
leave
call
pop
jno
test
inc
xchg
inc
cmp
xor
mov
clc
pop
inc
xchg
adc
jbe
mov
xchg
cmp
(bad)
cmp
and
or
push
es
or
cs
cmc
ror
add
mov
dec
sub
jo
or
jno
inc
or
enter
aas
push
add
mov
adc
dec
(bad)
jg
ror
jecxz
push
pop
rcr
ins
dec
in
inc
mov
icebp
inc
int
pop
sub
gs
inc
stos
popf
sbb
loop
das
sub
rol
add
and
sub
rol
sub
and
rol
or
rol
cmp
add
inc
xor
add
mov
int
inc
test
int3
ss
shl
mov
adc
push
and
mov
xor
mov
dec
adc
mov
pop
sub
push
and
cmp
or
in
repz
pop
or
xor
adc
adc
cmp
xchg
daa
push
sub
or
and
add
test
fs
inc
cmp
and
mov
mov
or
lds
or
adc
xor
jno
xchg
fcomp
pop
fild
hlt
icebp
(bad)
xor
pop
rol
sar
cld
add
or
push
adc
daa
mov
pusha
add
jl
inc
or
jmp
rol
pop
or
rcl
mov
(bad)
and
retf
push
xor
sbb
and
(bad)
sub
jo
add
pop
in
rol
aas
imul
ror
sbb
inc
adc
aam
sbb
adc
adc
icebp
(bad)
and
xor
or
dec
nop
sbb
cld
and
and
mov
repnz
iret
ins
adc
adc
nop
inc
add
dec
sbb
ret
adc
call
jo
js
dec
push
aas
jmp
les
rol
movs
push
lock
adc
add
ret
xchg
lock
add
cmp
adc
in
or
adc
add
push
push
adc
or
rcl
hlt
inc
add
ins
jecxz
and
aas
das
inc
mov
test
xor
adc
add
add
xor
movs
inc
das
jno
lock
and
jbe
lds
jmp
jo
iret
sbb
mov
mov
in
pop
mov
mov
dec
xor
repnz
cmp
movs
push
mov
(bad)
shl
cmp
add
add
stc
add
add
inc
sub
add
add
add
add
or
lock
add
lods
rol
xchg
call
stc
daa
mov
sub
les
xor
inc
add
adc
mov
stc
daa
test
pop
add
xor
sahf
and
sbb
loopne
pusha
mov
(bad)
ins
cwde
pop
dec
loopne
jg
jle
dec
push
pop
or
test
xchg
cld
xchg
add
retf
test
fwait
xor
scas
jg
ret
je
dec
mov
aas
call
or
gs
shl
dec
movs
sub
mov
clc
ja
xchg
and
xchg
loop
xchg
push
or
cmp
nop
push
and
lods
rol
aas
cmp
test
pop
cmc
add
mov
and
rcr
call
and
popa
or
mov
add
push
inc
stos
xchg
nop
jg
inc
jns
mov
and
jmp
inc
or
adc
jne
in
xchg
cmc
jecxz
sub
dec
dec
mov
sbb
cld
jecxz
sub
mov
xchg
dec
adc
shl
inc
sub
or
(bad)
adc
dec
add
sbb
iret
ds
xor
adc
(bad)
js
retf
sub
dec
xchg
into
add
nop
loopne
push
(bad)
clc
xchg
inc
add
pop
pop
je
lds
adc
aam
adc
ja
hlt
inc
sub
pop
inc
mov
leave
add
lidtd
xchg
xor
sbb
adc
lds
dec
loop
push
xor
test
arpl
push
sbb
ret
aas
sub
repnz
dec
inc
inc
inc
pop
xchg
loopne
xchg
sbb
mov
out
repnz
adc
aas
push
xor
add
add
push
movs
aas
add
xor
aas
adc
jo
adc
adc
sub
push
aaa
pop
adc
xor
aas
shl
and
adc
loope
ror
inc
repnz
in
mov
adc
lds
pusha
icebp
pop
pusha
add
adc
push
add
pxor
movs
add
nop
rol
xchg
add
xor
lds
shl
sbb
pusha
or
sub
add
inc
mov
inc
add
mov
or
inc
nop
pop
in
aas
mov
call
or
xlat
loopne
add
sub
xor
inc
adc
lock
add
shl
or
push
mov
add
and
mov
nop
push
inc
or
jecxz
add
mov
rol
jno
inc
and
fadd
fimul
test
(bad)
(bad)
sbb
clc
repz
aas
sub
nop
push
add
xor
xchg
sbb
and
pop
in
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
lock
xor
je
dec
loope
dec
jmp
pushf
ret
jg
xor
adc
mov
pop
ins
imul
xchg
sub
repnz
retf
push
push
sub
icebp
jecxz
pop
xor
inc
add
or
jno
push
jnp
push
mov
mov
lock
or
add
xchg
mov
jne
ror
add
rol
and
adc
inc
cmps
inc
in
push
mov
xchg
xor
pop
dec
(bad)
in
xchg
dec
leave
sub
mov
jno
dec
xor
push
add
les
or
push
jecxz
adc
pop
sub
jns
movs
fmul
inc
ret
bound
or
fucomi
xor
sub
xchg
mov
add
mov
sub
imul
mov
call
std
shl
or
xor
(bad)
mov
inc
and
push
jl
sahf
ror
not
add
sar
ret
sub
or
rol
cwde
mov
sub
or
clc
loopne
aas
mov
test
hlt
or
mov
leave
or
or
add
sub
sub
mov
leave
aas
push
fsub
xchg
aas
imul
or
repz
mov
out
push
push
dec
sub
and
pop
push
add
xchg
adc
repz
push
ins
in
rcl
pop
imul
adc
jo
add
and
movhlps
or
add
adc
jae
cdq
add
add
jno
rcr
std
add
(bad)
shl
call
call
rol
add
pop
xor
mov
add
daa
frstor
push
sbb
jecxz
add
repz
add
and
push
add
cmp
int
retf
xor
push
push
push
add
ret
punpckhdq
and
adc
jb
popa
sbb
pop
loopne
or
sub
push
and
scas
mov
in
test
sbb
cld
arpl
or
lods
repnz
and
rol
inc
add
inc
bound
dec
sub
cmp
or
xchg
or
ret
aas
or
nop
das
jno
push
add
ss
ror
adc
xchg
push
aas
fcom
adc
cmps
cld
and
inc
out
cld
ror
cmp
nop
add
cld
and
pop
jo
cld
dec
adc
or
add
mov
lods
ror
push
sar
sbb
inc
loopne
and
or
push
retf
adc
inc
inc
retf
aas
test
xor
aas
sub
pop
icebp
xchg
subps
jle
and
data16
call
shr
stc
and
jecxz
add
add
add
inc
sub
add
add
add
add
or
xor
rol
nop
loopne
push
or
ror
mov
ins
xchg
ror
add
or
mov
dec
les
sbb
fs
test
add
sbb
fs
or
dec
rol
int3
and
fdivr
call
je
mov
scas
fisub
add
fist
fild
sub
dec
pop
xor
push
mov
dec
(bad)
jne
mul
(bad)
cdq
cld
ja
push
mov
lds
inc
or
sbb
xor
mov
and
sbb
push
imul
inc
fisttp
adc
and
and
cmp
and
je
mov
loope
dec
loopne
inc
movs
pusha
or
stos
jns
les
in
dec
jp
popa
mov
or
icebp
or
dec
jp
push
sbb
inc
jo
std
pop
sub
add
test
repz
or
dec
add
cld
ret
lea
sbb
icebp
iret
push
clc
sub
retf
inc
xor
push
rcl
add
and
mov
and
jmp
lods
push
loopne
adc
cld
mov
add
or
shl
xor
push
cmp
add
ds
ins
add
rcl
in
pusha
rol
push
cld
repz
cmp
clc
pop
sbb
add
rcl
push
mov
movs
pusha
push
sbb
add
adc
and
inc
sbb
add
add
in
call
xor
cmp
and
inc
or
and
ret
aas
sbb
or
icebp
add
xor
retf
adc
js
adc
mov
push
shr
clc
rol
add
mov
clc
xchg
add
jo
add
jnp
xor
test
test
push
dec
sbb
mov
push
xchg
push
or
movs
xor
rcl
and
test
(bad)
arpl
mov
in
dec
adc
mov
jo
add
adc
pusha
or
sbb
call
(bad)
shr
sub
add
bound
das
ss
les
movs
dec
lock
adc
xor
add
movs
mov
lods
xor
das
shl
pop
or
sub
mov
aam
ror
xor
adc
inc
aaa
ins
mov
add
inc
adc
inc
inc
adc
fwait
xchg
and
push
sub
push
mov
mov
sbb
aas
stos
mov
push
adc
mov
or
std
push
ret
inc
add
cmp
imul
and
and
dec
adc
mov
cs
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
mov
inc
sub
pop
call
jmp
enter
lea
in
mov
sub
retf
mov
cmp
loopne
jg
push
push
icebp
das
fidivr
sbb
(bad)
addr16
xchg
mov
or
rcl
and
stc
andnps
and
or
and
js
inc
pusha
test
dec
out
inc
dec
or
mov
int3
xchg
lds
jno
lds
cwde
and
aas
adc
push
sub
dec
jo
dec
jns
and
cld
xor
pop
cmp
add
fbld
std
cmps
popa
test
cmp
xor
sub
rcr
das
ins
xor
add
dec
adc
sub
sub
mov
icebp
das
adc
xchg
and
mov
push
mov
inc
loopne
jbe
xchg
aam
mov
add
sub
jecxz
(bad)
jg
cmp
iret
add
or
retf
inc
aam
rol
dec
mov
call
add
fdivr
add
xchg
xor
adc
retf
jg
xor
cvtps2pi
add
lock
xor
push
inc
xor
ss
icebp
(bad)
and
mov
iret
aas
cmp
sbb
inc
ret
movs
jae
inc
sti
and
sbb
js
in
inc
sar
sahf
or
mov
cmp
jmp
lock
pop
loopne
push
add
lods
ret
dec
adc
add
or
int3
xchg
add
cld
push
iret
aas
sbb
inc
lds
call
add
xor
adc
add
ror
adc
cld
ret
mov
test
clc
ud2
adc
add
mov
aam
mov
add
pop
push
inc
add
xor
jo
inc
adc
jo
or
nop
adc
jo
sub
or
add
mov
sub
sbb
lds
cmp
and
aas
pushf
cld
repz
(bad)
clc
jae
add
cmp
mov
icebp
nop
xchg
mov
cmps
cmp
retf
add
or
or
pusha
xchg
ret
pop
adc
rol
and
and
xor
sbb
add
push
jo
(bad)
xor
add
ror
or
mov
adc
inc
cmp
inc
adc
mov
sub
sub
nop
or
mov
or
movs
adc
pop
fisttp
inc
nop
das
dec
mov
push
and
sub
aas
out
cld
adc
bndstx
mov
add
jge
rcl
rcl
cdq
inc
rcl
test
(bad)
shl
syscall
xchg
and
add
add
and
add
add
inc
sub
add
add
add
add
or
xor
jg
or
sub
dec
loope
addr16
push
jne
movs
mov
mov
or
push
mov
sbb
jge
push
xchg
push
mov
je
pop
ret
xor
(bad)
in
mov
xor
ucomiss
mov
mov
or
adc
popa
lock
and
sbb
inc
adc
dec
(bad)
sub
jae
push
lods
xor
mov
sahf
push
rcr
add
adc
mov
dec
xchg
add
mov
aad
dec
cmp
outs
mov
push
leave
loop
cwde
movs
or
ror
test
mov
pusha
icebp
in
xchg
jg
je
inc
and
test
sbb
cmp
je
mov
retf
pop
adc
ficom
pop
mov
and
pop
xor
push
dec
pusha
cwde
jl
mov
cmp
sub
pop
ror
in
test
lock
rcr
inc
inc
add
mov
adc
or
xor
repnz
shr
aas
enter
sbb
icebp
(bad)
cmp
clc
and
(bad)
or
inc
inc
add
ret
sub
mov
ins
nop
test
or
adc
nop
mov
bnd
or
adc
cmp
adc
add
and
adc
sbb
mov
aas
push
add
or
push
cmp
add
and
xor
sub
loope
daa
sti
push
xchg
dec
and
adc
add
inc
push
push
add
jl
lar
inc
mov
or
sub
sub
pop
adc
daa
xor
rol
cld
inc
les
sbb
push
mov
or
mov
mov
dec
ror
push
dec
inc
and
adc
les
dec
cmp
add
add
mov
rol
das
sbb
jle
jno
push
rcr
inc
push
aas
adc
or
fild
in
and
sbb
mov
push
inc
xchg
sub
push
add
add
ror
(bad)
xor
rol
sbb
sbb
sub
test
cmp
mov
add
mov
dec
shr
sete
jecxz
and
aas
adc
ret
test
push
adc
cmp
fdiv
mov
or
xor
sbb
adc
dec
and
sbb
mov
or
adc
or
or
pushf
loopne
add
sbb
cmc
cmp
adc
retf
or
inc
cmovg
lock
shl
mov
xchg
xor
sbb
or
retf
(bad)
iret
dec
mov
mov
arpl
add
sbb
and
and
xor
xchg
inc
or
and
add
fdiv
leave
push
(bad)
lock
mov
jno
mov
adc
sub
or
pop
ror
in
in
add
pop
(bad)
loopne
pop
dec
test
movhps
sub
jecxz
dec
mov
mov
retf
or
mov
shl
mov
mov
je
sbb
xchg
mov
unpcklps
add
stc
add
add
inc
sub
add
add
add
add
or
lock
or
(bad)
mov
cmp
std
imul
daa
xor
dec
adc
add
call
jge
push
mov
out
retf
mov
shl
or
push
(bad)
or
in
retf
cdq
sub
adc
into
add
fmul
mov
imul
sub
jb
or
(bad)
mov
repnz
(bad)
fist
sbb
fst
push
push
xor
xchg
cmps
out
mov
xor
fs
sub
dec
(bad)
push
lods
shl
push
inc
fisub
sbb
xor
push
push
or
inc
or
das
push
loopne
sub
jp
sti
pop
add
xchg
sub
and
inc
xchg
sbb
cmp
test
adc
sbb
cld
imul
loop
adc
dec
or
lahf
or
je
sub
in
mov
push
ins
xchg
scas
jg
dec
mov
push
in
int
data16
add
adc
adc
adc
adc
or
clc
rol
sub
or
and
retf
push
or
xchg
les
sbb
ret
add
dec
mov
push
mov
or
jo
xor
cmp
and
mov
js
push
mov
add
rcl
enter
loope
and
xor
hlt
add
and
pusha
inc
add
and
rol
in
mov
ror
add
sbb
(bad)
and
sbb
inc
pop
ins
jl
add
rol
inc
les
sbb
pop
int3
ret
or
sub
adc
ins
and
add
xor
sub
add
fwait
cmp
icebp
inc
adc
dec
dec
dec
adc
dec
loopne
sub
test
add
add
xor
xor
js
test
add
xor
add
or
or
inc
mov
mov
push
popf
(bad)
jecxz
add
popa
inc
xor
out
icebp
shr
push
lock
lods
push
stos
dec
sbb
ins
test
ficomp
xchg
inc
(bad)
or
in
inc
dec
adc
and
inc
mov
sub
and
dec
add
sbb
sbb
rcl
mov
mov
nop
into
aas
daa
pop
mov
aas
or
mov
xor
mov
adc
pop
xor
or
aas
in
nop
xor
xchg
call
cmps
mov
enter
push
push
inc
or
inc
adc
inc
mov
pop
jne
xor
and
popf
xor
adc
sub
adc
les
inc
adc
sbb
jbe
arpl
or
retf
sbb
add
push
loopne
inc
das
(bad)
int3
inc
push
lea
ror
add
cmp
jbe
inc
inc
lods
inc
inc
sbb
mov
mov
in
add
push
clc
pusha
xchg
mov
out
ret
or
inc
pusha
ja
mov
arpl
cs
in
add
add
add
inc
sub
add
push
add
add
pushf
add
or
scas
ret
sar
and
mov
xchg
adc
push
mov
add
mov
shl
mul
inc
ror
shl
ins
or
aas
or
rol
add
sti
add
xchg
jg
or
inc
mov
mov
add
pop
push
xchg
cld
pop
sub
mov
inc
or
and
push
(bad)
sti
cmc
or
dec
jo
and
sbb
mov
shl
inc
push
pop
cs
add
pop
sub
add
add
stc
add
add
inc
sub
add
sub
sbb
add
inc
dec
sbb
mov
ror
adc
pop
mov
pop
div
pushf
dec
push
and
inc
sub
into
sbb
mov
mov
jg
imul
fwait
jge
jle
sti
cmps
inc
inc
enter
push
xchg
inc
movs
daa
xchg
and
adc
sti
cs
ror
lock
and
ins
gs
inc
gs
cmp
add
adc
adc
pop
aas
aaa
add
cs
mov
or
ret
sti
cmp
fcmovbe
(bad)
pusha
push
jno
adc
push
mov
es
jno
add
cli
aaa
enter
or
fs
pushf
call
jns
jmp
and
dec
popa
shl
cmp
inc
or
pop
xchg
or
and
stc
push
lea
lock
test
xor
call
loopne
jg
lock
cwde
xchg
sub
adc
or
pusha
jno
dec
movs
inc
sbb
adc
arpl
sbb
inc
dec
mul
cld
mov
cs
add
or
and
and
mov
adc
adc
inc
cmp
cld
mov
or
and
jmp
sbb
pushf
inc
addr16
adc
sub
or
push
outs
add
les
xchg
xchg
dec
sub
adc
mov
popf
rol
sbb
sub
jo
inc
xor
adc
and
inc
xor
push
pushf
inc
dec
push
mov
(bad)
sub
add
(bad)
call
dec
popa
add
xchg
fs
rol
sub
or
leave
jo
inc
add
pushf
lock
mov
sub
add
cld
mov
add
mov
or
or
adc
loopne
fcomp
and
mov
dec
cmp
pop
loopne
sub
xor
cmp
je
lock
and
dec
and
mov
adc
les
adc
sar
int3
sub
sbb
push
add
shr
daa
dec
inc
inc
and
cld
inc
rol
cmp
ret
sbb
inc
sbb
mov
mov
scas
xchg
xor
cs
pusha
adc
in
loope
adc
hlt
lock
pop
or
rol
ja
dec
inc
adc
call
lock
mov
pop
call
jecxz
inc
loopne
adc
add
adc
dec
sub
dec
lock
adc
ds
mov
jb
ret
xor
pop
sub
sbb
fisubr
adc
nop
les
jmp
jecxz
dec
mov
xchg
repnz
js
dec
inc
repnz
jae
sbb
cld
xchg
dec
adc
imul
cld
mov
loopne
(bad)
sbb
push
and
icebp
mov
xor
inc
xor
and
add
or
pop
or
add
into
psubw
adc
mov
(bad)
icebp
or
and
mov
or
imul
xor
xor
cmp
aas
add
pop
mov
adc
add
aaa
or
dec
sub
inc
and
or
rol
or
js
dec
in
jmp
(bad)
call
mov
sbb
shl
adc
aas
and
rol
jnp
inc
xor
add
xchg
dec
adc
sbb
adc
add
or
fdivr
(bad)
sbb
inc
sbb
les
cwde
ret
inc
push
mov
add
and
adc
add
stc
add
add
inc
sub
add
add
or
add
or
mov
shl
adc
pop
enter
add
jg
nop
nop
mov
ret
mov
test
add
pop
xor
mov
dec
daa
xor
jg
push
xor
push
in
xchg
ja
dec
pusha
fnstenv
inc
mov
adc
mov
pop
cmp
shl
mov
dec
mov
dec
xor
mov
bound
adc
jo
dec
rol
sbb
cmp
enter
fnsave
ret
or
jno
pop
fs
and
xor
inc
scas
or
fidiv
pop
or
xor
popa
pusha
push
or
lock
es
xchg
mov
and
std
retf
and
rol
push
xchg
jle
mov
xchg
and
mov
sub
test
push
and
retf
jno
and
jg
in
inc
mov
inc
mov
xor
sbb
movs
loopne
ins
lea
sbb
out
arpl
cmp
xchg
xchg
inc
and
adc
xchg
add
(bad)
rol
pusha
add
leave
xor
adc
sub
inc
adc
fs
mov
in
les
xor
aad
add
jecxz
sub
adc
iret
sbb
mov
(bad)
aas
(bad)
cld
or
cmp
mov
lock
push
sbb
and
mov
add
lea
or
add
or
sbb
or
int3
or
shl
xor
push
mov
inc
dec
and
int3
push
test
xchg
cld
rol
cmp
add
push
sub
inc
ror
push
jo
cmp
std
rcl
lea
shl
sysexit
stc
cld
add
(bad)
mov
push
pop
add
xor
jle
add
pop
push
rcl
inc
sub
ror
add
add
adc
or
sbb
into
aas
jge
popa
ret
inc
inc
add
movhps
adc
push
adc
jae
aam
add
lock
or
es
add
mov
pop
(bad)
(bad)
enter
add
ror
inc
jbe
inc
cmp
sbb
add
movs
or
add
test
jnp
xor
rcl
sbb
data16
xor
push
icebp
dec
add
gs
mov
add
pop
adc
hlt
prefetcht0
loopne
sbb
sub
inc
jge
sub
add
adc
in
sar
xor
push
nop
loop
jns
shl
sbb
or
mov
in
xor
mov
pushf
xor
aas
adc
les
bound
hlt
mov
or
xor
call
or
loopne
add
ror
rcl
scas
sbb
inc
or
shl
add
cmp
push
and
or
jl
mov
sbb
std
xchg
mov
mov
das
fiadd
inc
mov
inc
mov
test
arpl
or
add
mov
aam
retf
sub
adc
sbb
inc
inc
pop
or
mov
xchg
add
and
aas
ret
xchg
out
into
adc
xchg
and
ins
push
inc
add
stc
add
add
inc
sub
add
das
add
add
inc
dec
sbb
mov
ror
adc
pop
enter
jg
adc
dec
jno
mov
sub
loopne
ds
sbb
popf
ss
ins
or
sbb
or
and
cmp
add
adc
mov
mov
adc
outs
fcom
xchg
jae
xchg
arpl
lock
add
in
std
je
sub
mov
fsub
or
imul
or
xchg
retf
jb
inc
pusha
xchg
and
xchg
inc
xchg
or
repz
mov
loope
inc
shl
and
and
ret
ror
adc
mov
jg
jo
sti
xor
test
dec
jl
sbb
test
mov
push
jo
pop
mov
jno
cmp
push
push
push
sbb
jno
int
icebp
pusha
pusha
test
xor
pop
test
fisub
add
fcomip
jg
push
gs
jecxz
push
mov
inc
jb
sub
and
pushf
adc
or
push
ret
or
mov
push
call
xor
xor
adc
sub
inc
jno
mov
sbb
dec
or
enter
add
mov
add
add
movs
lock
adc
xor
inc
xor
add
sbb
push
sahf
shl
aas
mov
mov
bound
adc
or
in
outs
mov
mov
jo
sub
push
and
or
or
lock
push
dec
pop
push
dec
and
and
or
bnd
or
adc
sub
jmp
add
nop
xchg
push
adc
push
mov
or
and
or
push
inc
(bad)
and
aas
aas
test
and
sbb
inc
inc
cmp
and
jge
adc
push
cmp
adc
test
mov
adc
cmps
xor
int3
push
push
shl
lock
push
dec
jo
adc
or
retf
add
inc
sbb
add
add
pushf
push
ret
inc
sub
arpl
or
cld
nop
int
adc
lds
xor
adc
js
ret
aas
adc
add
xor
pop
movs
cld
adc
jmp
test
dec
xor
jne
inc
les
or
lock
cmp
sar
test
mov
push
mov
xor
(bad)
and
test
mov
pop
cld
rol
sti
and
or
aas
add
cmp
and
push
test
xor
and
int3
rcl
iret
test
and
and
aas
push
ins
mov
inc
adc
inc
add
adc
add
add
add
adc
pusha
xchg
dec
dec
jp
mov
loop
test
mov
inc
and
add
ret
pop
inc
rcr
push
pop
push
call
dec
inc
arpl
daa
ss
mov
and
inc
add
ror
inc
add
lock
xor
add
mov
add
push
clc
(bad)
adc
push
rol
push
int3
or
adc
jno
inc
dec
add
nop
lock
sub
scas
rcl
cmp
jecxz
aas
cmp
arpl
mov
or
js
(bad)
std
push
ins
mov
adc
aas
adc
add
enter
mov
loop
and
add
adc
(bad)
cmp
in
inc
repz
inc
fiadd
push
or
mov
inc
push
mov
push
outs
adc
or
add
add
stc
add
add
inc
sub
add
xor
sbb
add
inc
dec
sbb
mov
ror
and
mov
jle
lock
or
fdivr
(bad)
adc
and
push
and
mov
and
dec
add
ja
add
sub
in
sti
xchg
out
pop
xchg
xor
mov
inc
push
inc
push
push
pop
mov
and
mov
sbb
sbb
mov
adc
jne
and
jne
inc
xor
add
pop
pop
push
jp
(bad)
popa
xchg
push
(bad)
frstor
jge
adc
and
add
sahf
shl
(bad)
mov
xchg
jecxz
push
cmc
or
test
adc
pop
inc
shl
(bad)
mov
iret
test
jbe
call
inc
pop
jle
ficom
outs
rcr
and
mov
add
cmp
adc
or
inc
mov
popf
fs
adc
call
add
aas
add
sbb
inc
xor
test
mov
xor
pop
push
or
cs
add
sbb
out
lds
sub
arpl
(bad)
in
xor
or
push
cld
jecxz
inc
or
mov
fisttp
cmp
add
add
fsub
or
shl
inc
or
push
sbb
lds
sbb
mov
or
inc
loope
inc
xchg
gs
and
mov
sti
sub
sub
rcr
sahf
push
arpl
pop
add
and
or
or
inc
adc
nop
ror
mov
mov
sbb
and
sub
mov
and
rol
or
rol
cmp
add
inc
xor
add
mov
int
inc
test
int3
ss
shl
mov
bound
adc
push
and
adc
and
call
test
mov
pushf
add
push
retf
or
push
push
jo
cmp
dec
test
add
xchg
cld
add
push
dec
sbb
leave
aas
sub
ror
dec
sbb
je
add
daa
dec
pusha
add
test
fs
inc
cmp
and
mov
mov
or
lds
or
push
mov
mov
rol
aaa
and
ret
(bad)
cld
and
cmp
lock
adc
pusha
mov
push
add
sub
sbb
mov
add
jl
inc
or
stos
inc
sbb
and
mov
add
and
retf
mov
mov
add
push
or
inc
xor
loopne
dec
sbb
mov
retf
hlt
lock
sbb
rol
add
xchg
adc
dec
adc
test
sub
adc
xor
or
cmp
pop
push
dec
repz
add
or
jno
aas
adc
cvtpi2ps
js
xor
cmp
inc
adc
push
and
or
push
xor
ret
and
add
dec
dec
in
inc
cmp
cld
push
mov
xor
in
dec
adc
cli
nop
push
sar
hlt
rol
in
or
or
ret
pop
loopne
or
cmp
push
les
cs
ins
inc
dec
or
add
add
pop
xchg
hlt
pusha
jmp
leave
add
(bad)
or
fdiv
lock
fld
add
sbb
loopne
jg
add
xor
call
add
pop
add
andps
pop
pop
add
add
mov
jg
lock
mov
repnz
sub
lock
or
add
stc
add
add
inc
sub
add
add
add
add
or
lock
add
lods
rol
xchg
call
stc
daa
mov
sub
les
xor
inc
add
adc
mov
stc
daa
test
pop
add
xor
sahf
and
sbb
loopne
pusha
mov
(bad)
ins
cwde
pop
dec
loopne
jg
jle
dec
push
pop
or
test
xchg
cld
xchg
add
retf
test
fwait
xor
scas
jg
ret
je
dec
mov
aas
call
or
gs
shl
dec
movs
sub
mov
clc
ja
xchg
and
xchg
loop
xchg
push
or
cmp
nop
push
and
lods
rol
aas
cmp
test
pop
cmc
add
mov
and
rcr
call
and
popa
or
mov
add
push
inc
stos
xchg
nop
jg
inc
jns
mov
and
jmp
inc
or
adc
jne
in
xchg
cmc
jecxz
sub
dec
dec
mov
sbb
cld
jecxz
sub
mov
xchg
dec
adc
shl
inc
sub
or
(bad)
adc
dec
add
sbb
iret
ds
xor
adc
(bad)
js
retf
sub
dec
xchg
into
add
nop
loopne
push
(bad)
clc
xchg
inc
add
pop
pop
je
lds
adc
aam
adc
ja
hlt
inc
sub
pop
inc
mov
leave
add
lidtd
xchg
xor
sbb
adc
lds
dec
loop
push
xor
test
arpl
push
sbb
ret
aas
sub
repnz
dec
inc
inc
inc
pop
xchg
loopne
xchg
sbb
mov
out
repnz
adc
aas
push
xor
add
add
push
movs
aas
add
xor
aas
adc
jo
adc
adc
sub
push
aaa
pop
adc
xor
aas
shl
and
adc
loope
ror
inc
repnz
in
mov
adc
lds
pusha
icebp
pop
pusha
add
adc
push
add
pxor
movs
add
nop
rol
xchg
add
xor
lds
shl
sbb
pusha
or
sub
add
inc
mov
inc
add
mov
or
inc
nop
pop
in
aas
mov
call
or
xlat
loopne
add
sub
xor
inc
adc
lock
add
shl
or
push
mov
add
and
mov
nop
push
inc
or
jecxz
add
mov
rol
jno
inc
and
fadd
fimul
test
(bad)
(bad)
sbb
clc
repz
aas
sub
nop
push
add
xor
xchg
sbb
and
pop
in
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
lock
xor
je
dec
loope
dec
jmp
pushf
ret
jg
xor
adc
mov
pop
ins
imul
xchg
sub
repnz
retf
push
push
sub
icebp
jecxz
pop
xor
inc
add
or
jno
push
jnp
push
mov
mov
lock
or
add
xchg
mov
jne
ror
add
rol
and
adc
inc
cmps
inc
in
push
mov
xchg
xor
pop
dec
(bad)
in
xchg
dec
leave
sub
mov
jno
dec
xor
push
add
les
or
push
jecxz
adc
pop
sub
jns
movs
fmul
inc
ret
bound
or
fucomi
xor
sub
xchg
mov
add
mov
sub
imul
mov
call
std
shl
or
xor
(bad)
mov
inc
and
push
jl
sahf
ror
not
add
sar
ret
sub
or
rol
cwde
mov
sub
or
clc
loopne
aas
mov
test
hlt
or
mov
leave
or
or
add
sub
sub
mov
leave
aas
push
fsub
xchg
aas
imul
or
repz
mov
out
push
push
dec
sub
and
pop
push
add
xchg
adc
repz
push
ins
in
rcl
pop
imul
adc
jo
add
and
movhlps
or
add
adc
jae
cdq
add
add
jno
rcr
std
add
(bad)
shl
call
call
rol
add
pop
xor
mov
add
daa
frstor
push
sbb
jecxz
add
repz
add
and
push
add
cmp
int
retf
xor
push
push
push
add
ret
punpckhdq
and
adc
jb
popa
sbb
pop
loopne
or
sub
push
and
scas
mov
in
test
sbb
cld
arpl
or
lods
repnz
and
rol
inc
add
inc
bound
dec
sub
cmp
or
xchg
or
ret
aas
or
nop
das
jno
push
add
ss
ror
adc
xchg
push
aas
fcom
adc
cmps
cld
and
inc
out
cld
ror
cmp
nop
add
cld
and
pop
jo
cld
dec
adc
or
add
mov
lods
ror
push
sar
sbb
inc
loopne
and
or
push
retf
adc
inc
inc
retf
aas
test
xor
aas
sub
pop
icebp
xchg
subps
jle
and
data16
call
shr
stc
and
jecxz
add
add
add
inc
sub
add
add
add
add
or
xor
rol
nop
loopne
push
or
ror
mov
ins
xchg
ror
add
or
mov
dec
les
sbb
fs
test
add
sbb
fs
or
dec
rol
int3
and
fdivr
call
je
mov
scas
fisub
add
fist
fild
sub
dec
pop
xor
push
mov
dec
(bad)
jne
mul
(bad)
cdq
cld
ja
push
mov
lds
inc
or
sbb
xor
mov
and
sbb
push
imul
inc
fisttp
adc
and
and
cmp
and
je
mov
loope
dec
loopne
inc
movs
pusha
or
stos
jns
les
in
dec
jp
popa
mov
or
icebp
or
dec
jp
push
sbb
inc
jo
std
pop
sub
add
test
repz
or
dec
add
cld
ret
lea
sbb
icebp
iret
push
clc
sub
retf
inc
xor
push
rcl
add
and
mov
and
jmp
lods
push
loopne
adc
cld
mov
add
or
shl
xor
push
cmp
add
ds
ins
add
rcl
in
pusha
rol
push
cld
repz
cmp
clc
pop
sbb
add
rcl
push
mov
movs
pusha
push
sbb
add
adc
and
inc
sbb
add
add
in
call
xor
cmp
and
inc
or
and
ret
aas
sbb
or
icebp
add
xor
retf
adc
js
adc
mov
push
shr
clc
rol
add
mov
clc
xchg
add
jo
add
jnp
xor
test
test
push
dec
sbb
mov
push
xchg
push
or
movs
xor
rcl
and
test
(bad)
arpl
mov
in
dec
adc
mov
jo
add
adc
pusha
or
sbb
call
(bad)
shr
sub
add
bound
das
ss
les
movs
dec
lock
adc
xor
add
movs
mov
lods
xor
das
shl
pop
or
sub
mov
aam
ror
xor
adc
inc
aaa
ins
mov
add
inc
adc
inc
inc
adc
fwait
xchg
and
push
sub
push
mov
mov
sbb
aas
stos
mov
push
adc
mov
or
std
push
ret
inc
add
cmp
imul
and
and
dec
adc
mov
cs
inc
add
add
stc
add
add
inc
sub
add
add
add
add
or
mov
inc
sub
pop
call
jmp
enter
lea
in
mov
sub
retf
mov
cmp
loopne
jg
push
push
icebp
das
fidivr
sbb
(bad)
addr16
xchg
mov
or
rcl
and
stc
andnps
and
or
and
js
inc
pusha
test
dec
out
inc
dec
or
mov
int3
xchg
lds
jno
lds
cwde
and
aas
adc
push
sub
dec
jo
dec
jns
and
cld
xor
pop
cmp
add
fbld
std
cmps
popa
test
cmp
xor
sub
rcr
das
ins
xor
add
dec
adc
sub
sub
mov
icebp
das
adc
xchg
and
mov
push
mov
inc
loopne
jbe
xchg
aam
mov
add
sub
jecxz
(bad)
jg
cmp
iret
add
or
retf
inc
aam
rol
dec
mov
call
add
fdivr
add
xchg
xor
adc
retf
jg
xor
cvtps2pi
add
lock
xor
push
inc
xor
ss
icebp
(bad)
and
mov
iret
aas
cmp
sbb
inc
ret
movs
jae
inc
sti
and
sbb
js
in
inc
sar
sahf
or
mov
cmp
jmp
lock
pop
loopne
push
add
lods
ret
dec
adc
add
or
int3
xchg
add
cld
push
iret
aas
sbb
inc
lds
call
add
xor
adc
add
ror
adc
cld
ret
mov
test
clc
ud2
adc
add
mov
aam
mov
add
pop
push
inc
add
xor
jo
inc
adc
jo
or
nop
adc
jo
sub
or
add
mov
sub
sbb
lds
cmp
and
aas
pushf
cld
repz
(bad)
clc
jae
add
cmp
mov
icebp
nop
xchg
mov
cmps
cmp
retf
add
or
or
pusha
xchg
ret
pop
adc
rol
and
and
xor
sbb
add
push
jo
(bad)
xor
add
ror
or
mov
adc
inc
cmp
inc
adc
mov
sub
sub
nop
or
mov
or
movs
adc
pop
fisttp
inc
nop
das
dec
mov
push
and
sub
aas
out
cld
adc
bndstx
mov
add
jge
rcl
rcl
cdq
inc
rcl
test
(bad)
shl
syscall
xchg
and
add
add
and
add
add
inc
sub
add
add
add
add
or
xor
jg
or
sub
dec
loope
addr16
push
jne
movs
mov
mov
or
push
mov
sbb
jge
push
xchg
push
mov
je
pop
ret
xor
(bad)
in
mov
xor
ucomiss
mov
mov
or
adc
popa
lock
and
sbb
inc
adc
dec
(bad)
sub
jae
push
lods
xor
mov
sahf
push
rcr
add
adc
mov
dec
xchg
add
mov
aad
dec
cmp
outs
mov
push
leave
loop
cwde
movs
or
ror
test
mov
pusha
icebp
in
xchg
jg
je
inc
and
test
sbb
cmp
je
mov
retf
pop
adc
ficom
pop
mov
and
pop
xor
push
dec
pusha
cwde
jl
mov
cmp
sub
pop
ror
in
test
lock
rcr
inc
inc
add
mov
adc
or
xor
repnz
shr
aas
enter
sbb
icebp
(bad)
cmp
clc
and
(bad)
or
inc
inc
add
ret
sub
mov
ins
nop
test
or
adc
nop
mov
bnd
or
adc
cmp
adc
add
and
adc
sbb
mov
aas
push
add
or
push
cmp
add
and
xor
sub
loope
daa
sti
push
xchg
dec
and
adc
add
inc
push
push
add
jl
lar
inc
mov
or
sub
sub
pop
adc
daa
xor
rol
cld
inc
les
sbb
push
mov
or
mov
mov
dec
ror
push
dec
inc
and
adc
les
dec
cmp
add
add
mov
rol
das
sbb
jle
jno
push
rcr
inc
push
aas
adc
or
fild
in
and
sbb
mov
push
inc
xchg
sub
push
add
add
ror
(bad)
xor
rol
sbb
sbb
sub
test
cmp
mov
add
mov
dec
shr
sete
jecxz
and
aas
adc
ret
test
push
adc
cmp
fdiv
mov
or
xor
sbb
adc
dec
and
sbb
mov
or
adc
or
or
pushf
loopne
add
sbb
cmc
cmp
adc
retf
or
inc
cmovg
lock
shl
mov
xchg
xor
sbb
or
retf
(bad)
iret
dec
mov
mov
arpl
add
sbb
and
and
xor
xchg
inc
or
and
add
fdiv
leave
push
(bad)
lock
mov
jno
mov
adc
sub
or
pop
ror
in
in
add
pop
(bad)
loopne
pop
dec
test
movhps
sub
jecxz
dec
mov
mov
retf
or
mov
shl
mov
mov
je
sbb
xchg
mov
unpcklps
add
stc
add
add
inc
sub
add
add
add
add
or
lock
or
(bad)
mov
cmp
std
imul
daa
xor
dec
adc
add
call
jge
push
mov
out
retf
mov
shl
or
push
(bad)
or
in
retf
cdq
sub
adc
into
add
fmul
mov
imul
sub
jb
or
(bad)
mov
repnz
(bad)
fist
sbb
fst
push
push
xor
xchg
cmps
out
mov
xor
fs
sub
dec
(bad)
push
lods
shl
push
inc
fisub
sbb
xor
push
push
or
inc
or
das
push
loopne
sub
jp
sti
pop
add
xchg
sub
and
inc
xchg
sbb
cmp
test
adc
sbb
cld
imul
loop
adc
dec
or
lahf
or
je
sub
in
mov
push
ins
xchg
scas
jg
dec
mov
push
in
int
data16
add
adc
adc
adc
adc
or
clc
rol
sub
or
and
retf
push
or
xchg
les
sbb
ret
add
dec
mov
push
mov
or
jo
xor
cmp
and
mov
js
push
mov
add
rcl
enter
loope
and
xor
hlt
add
and
pusha
inc
add
and
rol
in
mov
ror
add
sbb
(bad)
and
sbb
inc
pop
ins
jl
add
rol
inc
les
sbb
pop
int3
ret
or
sub
adc
ins
and
add
xor
sub
add
fwait
cmp
icebp
inc
adc
dec
dec
dec
adc
dec
loopne
sub
test
add
add
xor
xor
js
test
add
xor
add
or
or
inc
mov
mov
push
popf
(bad)
jecxz
add
popa
inc
xor
out
icebp
shr
push
lock
lods
push
stos
dec
sbb
ins
test
ficomp
xchg
inc
(bad)
or
in
inc
dec
adc
and
inc
mov
sub
and
dec
add
sbb
sbb
rcl
mov
mov
nop
into
aas
daa
pop
mov
aas
or
mov
xor
mov
adc
pop
xor
or
aas
in
nop
xor
xchg
call
cmps
mov
enter
push
push
inc
or
inc
adc
inc
mov
pop
jne
xor
and
popf
xor
adc
sub
adc
les
inc
adc
sbb
jbe
arpl
or
retf
sbb
add
push
loopne
inc
das
(bad)
int3
inc
push
lea
ror
add
cmp
jbe
inc
inc
lods
inc
inc
sbb
mov
mov
in
add
push
clc
pusha
xchg
mov
out
ret
or
inc
pusha
ja
mov
arpl
cs
in
add
add
add
inc
sub
add
add
add
add
or
inc
mov
add
add
dec
add
and
add
add
add
popa
xor
sbb
and
add
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
(bad)
in
add
imul
data16
add
jmp
(bad)
cmc
add
add
push
mov
xchg
push
add
fiadd
(bad)
cmc
js
in
std
cli
in
(bad)
add
std
(bad)
sti
(bad)
loope
cld
aam
in
pop
(bad)
jmp
aaa
fwait
ins
sub
jmp
add
test
stos
jb
enter
fadd
(bad)
dec
mov
add
int
(bad)
mul
call
(bad)
hlt
xchg
leave
add
call
add
test
xlat
mov
std
shl
(bad)
cld
pop
std
lds
(bad)
cli
mov
cli
cmps
add
into
ret
dec
in
int
std
fld
movs
jns
(bad)
and
mov
std
fstp
xchg
test
jmp
test
(bad)
out
gs
lds
leave
mov
mov
add
inc
cmps
sub
add
repz
int
retf
movs
pop
add
lods
add
aad
scas
add
(bad)
out
in
jmp
cmp
mov
stc
test
icebp
jmp
(bad)
mov
enter
rcr
call
or
rcr
sar
push
add
hlt
(bad)
aad
xchg
pop
push
(bad)
mov
xor
mov
cld
mov
out
and
mov
fnstcw
cmc
ror
push
and
movs
or
and
adc
fiadd
into
mov
fldcw
neg
or
fisttp
mov
push
adc
or
les
push
sbb
rol
enter
xchg
icebp
call
ret
imul
(bad)
mov
shl
ret
lds
call
test
mov
clc
cli
icebp
out
retf
sbb
jmp
jmp
add
(bad)
pop
jmp
add
int3
ds
pop
inc
add
cli
push
jmp
xchg
and
bound
loope
(bad)
sti
int3
add
mov
stc
enter
xor
fadd
dec
pop
mov
add
retf
add
mov
fild
out
dec
add
mov
cld
lods
add
in
or
repnz
scas
or
mov
lds
mov
cmp
repnz
or
hlt
add
mov
dec
add
fwait
push
out
mov
cld
lds
repnz
fld
cmc
repnz
retf
add
pop
paddd
add
neg
add
add
mov
repz
clc
clc
(bad)
repz
loope
mov
mov
pop
in
dec
cld
clc
add
leave
or
in
lock
in
icebp
push
(bad)
call
sub
into
push
cmc
out
or
lods
(bad)
std
rol
cli
aam
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
shr
rol
sub
xchg
or
pushf
dec
jno
mov
sbb
test
push
or
ret
lds
repz
sbb
enter
test
adc
cwde
cmp
mov
movs
dec
pop
mov
xchg
and
dec
cdq
mov
add
ss
ins
les
mov
cmp
or
in
and
(bad)
dec
inc
xor
sub
dec
or
lea
stc
mov
xor
jne
or
mov
pushf
stos
pushf
push
aaa
xlat
pop
das
inc
inc
pop
jl
int3
call
dec
cmc
inc
add
test
mov
aam
jge
dec
pop
mov
ret
add
jle
les
xor
out
int
and
loopne
cmps
out
imul
mov
shl
jno
adc
mov
inc
call
mov
adc
test
ins
pop
jae
jle
pushf
ret
mov
pusha
add
les
sbb
pop
ins
call
sbb
nop
mov
retf
call
movs
jo
or
add
add
cmp
sbb
rol
pop
sbb
dec
add
xor
inc
add
or
nop
mov
mov
jo
inc
popa
lods
icebp
mov
cmp
rol
inc
add
push
inc
add
loope
sub
push
(bad)
adc
or
pop
xchg
loope
arpl
inc
lock
popa
test
cmp
and
rcl
cs
push
int
inc
shl
xchg
adc
xor
adc
mov
or
add
cs
lock
scas
xchg
rcr
push
jo
lahf
mov
push
mov
sbb
dec
sbb
in
sub
dec
dec
mov
lods
inc
and
adc
push
pop
add
xor
or
adc
xor
mov
cwde
inc
adc
int3
push
les
xchg
sbb
ret
test
js
rol
imul
repnz
dec
(bad)
pop
mov
cmp
movs
dec
(bad)
call
add
pop
sbb
or
loopne
cmps
push
fs
add
(bad)
adc
mov
ret
jb
add
repnz
in
mov
outs
std
cmps
lock
pop
add
xor
inc
ret
ret
adc
mov
dec
sar
cmps
xor
pop
or
inc
jno
push
ret
add
add
jmp
sub
adc
lods
cdq
outs
mov
or
and
adc
inc
xor
add
xchg
push
sahf
or
icebp
ret
jle
sub
addr16
(bad)
add
jb
cmc
sbb
(bad)
pusha
add
push
stos
mov
div
mov
push
shl
push
bound
lea
pop
jl
cmc
add
add
add
test
ror
mov
mov
movs
(bad)
pusha
pop
sbb
sbb
(bad)
mov
jecxz
add
adc
jae
pop
jle
mov
sbb
push
fidiv
mov
cli
or
iret
imul
xchg
add
les
mov
push
xor
and
or
pusha
xor
icebp
mov
call
je
ins
jecxz
jge
sar
(bad)
mov
jg
ins
leave
or
push
inc
sub
call
jecxz
(bad)
sar
mov
or
loopne
enter
add
inc
or
sbb
addr16
mov
jp
sbb
inc
sub
and
ror
mov
sbb
push
mov
ret
ins
mov
lds
cs
and
ins
ror
inc
pusha
xchg
or
dec
loope
adc
add
sbb
or
mov
sub
jnp
and
push
adc
xor
push
sub
mov
daa
mov
jo
mov
adc
mov
in
add
and
sub
mov
pusha
sbb
arpl
jb
pop
sub
sbb
or
inc
sbb
add
add
or
push
inc
jo
adc
add
test
test
push
push
pop
mov
int3
and
inc
adc
inc
add
and
call
jle
(bad)
popa
out
and
pop
jb
fsub
sbb
xor
(bad)
pop
add
nop
or
dec
or
ror
push
add
push
pop
mov
adc
test
add
dec
ss
(bad)
xor
rol
ret
sbb
xor
ror
or
add
and
push
dec
enter
nop
push
sbb
xor
push
test
pushf
leave
sar
jmp
or
cs
sbb
out
mov
fcmovbe
xchg
(bad)
in
add
jo
adc
cmp
ror
jmp
lock
xor
and
mov
test
jnp
pop
adc
xor
hlt
aam
mov
inc
push
mov
and
and
gs
rcr
dec
inc
or
loopne
mov
xchg
xchg
ja
test
pop
mov
mov
cmp
sbb
loope
and
adc
xchg
mov
cmp
push
stos
xor
in
gs
test
sub
sub
test
cld
mov
pop
ins
add
add
out
xlat
mov
cmp
or
jo
sub
mov
jge
add
aam
push
(bad)
lock
pop
add
pushf
add
fld
xor
sub
call
mov
or
and
test
ffreep
clc
and
push
adc
add
push
sub
and
add
or
inc
sub
add
add
or
add
or
mov
bound
lock
sbb
lock
aaa
femms
fstp
lock
push
inc
or
or
inc
mov
loopne
(bad)
sub
and
or
or
or
xor
fcom
dec
enter
cmp
mov
push
adc
jo
hlt
fild
inc
adc
and
dec
inc
mov
ror
cs
(bad)
arpl
add
inc
shl
jecxz
mov
jns
xchg
jnp
sub
xchg
test
arpl
mov
dec
cld
(bad)
outs
add
test
add
pusha
sbb
in
sub
add
add
jp
shl
test
adc
mov
add
add
and
mov
enter
cmp
or
jmp
sbb
cli
inc
xchg
push
inc
pop
and
loopne
adc
and
movs
ds
jbe
sbb
pushf
inc
shr
add
stc
add
or
inc
sub
add
sbb
adc
add
inc
dec
sbb
adc
sub
loopne
jg
jle
cmp
or
jo
and
mov
adc
mov
add
push
call
sbb
test
mov
aas
js
in
fwait
or
aam
call
lods
outs
fs
loop
mov
mov
dec
adc
sub
arpl
scas
jg
xchg
and
add
or
inc
aad
rol
(bad)
cmp
dec
je
sti
outs
fld
push
add
adc
add
add
jl
add
inc
adc
and
and
and
and
loope
es
cmp
adc
xor
dec
or
and
(bad)
fwait
or
add
dec
rol
and
sbb
xchg
mov
movs
movs
shr
dec
mov
loopne
add
jo
adc
jo
xchg
test
pop
ret
mov
lock
push
mov
gs
adc
pop
mov
jb
jo
lods
rol
das
cld
xchg
inc
add
add
mov
jl
rol
(bad)
hlt
push
dec
pop
ret
add
pop
scas
and
cmp
sub
add
xchg
lea
lea
push
dec
add
jo
add
test
ss
and
and
add
pop
rol
or
ror
add
sub
or
nop
jae
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
pusha
popf
add
mov
pop
pop
or
call
sub
lea
xchg
or
mov
cld
out
fwait
sub
jb
(bad)
or
add
sub
adc
mov
into
sbb
and
and
push
cmps
pop
xor
clc
and
add
mov
test
ds
add
mov
dec
adc
mov
push
addr16
jmp
rcr
sub
sbb
mov
mov
jo
mov
and
cli
repz
dec
add
inc
sbb
or
add
loopne
adc
loopne
adc
int3
call
inc
loope
fstp
outs
iret
js
push
jg
mov
add
adc
movs
clc
(bad)
dec
xchg
adc
push
jo
shl
mov
jmp
add
push
dec
xchg
(bad)
retf
aaa
adc
stos
adc
add
jb
sbb
add
add
or
ins
cmp
or
push
nop
xor
pushf
cmp
adc
xchg
cld
add
aaa
inc
add
xor
sbb
sar
shl
enter
sbb
pusha
add
inc
add
jns
pushf
inc
retf
add
bound
pop
sbb
and
pop
add
adc
inc
adc
sub
add
cmp
inc
adc
ins
int
pusha
add
xor
jo
add
xor
adc
ins
jno
mov
mov
mov
and
sub
adc
mov
mov
sub
loopne
sub
daa
or
mov
cmps
sbb
sahf
mov
add
add
push
test
fisttp
arpl
sub
shr
add
and
push
push
retf
add
and
add
or
inc
sub
add
add
add
add
or
add
sbb
mov
adc
and
unpckhps
js
pusha
add
dec
shl
das
loop
mov
sub
les
push
xor
shr
or
adc
adc
cmp
into
and
dec
mov
dec
cmp
xor
iret
push
pop
imul
and
scas
inc
push
add
stos
and
imul
adc
mov
rol
adc
cld
rcr
add
ins
(bad)
inc
mov
stos
inc
inc
iret
push
test
adc
mov
retf
pop
add
and
adc
xadd
add
pop
adc
xchg
adc
lods
pop
xor
add
add
aad
add
mov
add
push
dec
dec
inc
and
add
nop
and
sub
mov
mov
add
pusha
shl
inc
sub
inc
loope
or
adc
shr
xor
scas
dec
sub
ror
push
pop
xchg
sbb
add
mov
and
inc
add
jno
or
add
inc
mov
movs
test
sub
xchg
aad
push
add
aam
je
adc
adc
int3
xor
lods
add
sbb
xor
lds
xor
add
stos
sbb
popa
add
add
inc
adc
cld
ret
add
mov
pop
sbb
fcom
inc
lds
push
push
jbe
inc
adc
and
sub
arpl
push
and
leave
nop
dec
lods
jo
xchg
or
bound
cmp
test
in
fldcw
repnz
gs
add
or
mov
rol
imul
mov
pusha
mov
mov
push
adc
imul
or
dec
and
xchg
or
xchg
inc
adc
sub
pop
pop
jle
imul
xchg
sbb
mov
add
test
sar
add
or
inc
add
adc
dec
inc
lods
not
ret
mov
and
dec
sahf
push
loopne
add
add
and
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
rcl
adc
aas
adc
xor
or
push
fsubr
enter
xor
loopne
adc
mov
stc
aam
jecxz
xchg
or
nop
test
sub
add
call
inc
aaa
push
mov
daa
sahf
add
leave
add
or
dec
pop
sub
nop
adc
cwde
jb
fcom
add
inc
add
xchg
adc
sub
add
inc
sub
add
xchg
add
xchg
sbb
or
add
xchg
add
sahf
inc
adc
push
adc
mov
add
ret
gs
add
loop
or
cs
mov
pop
icebp
push
mov
int
nop
mov
leave
or
adc
es
shl
shr
xlat
inc
femms
xor
xor
xor
les
add
test
inc
inc
xor
ins
add
hlt
js
add
or
inc
or
iret
mov
add
mov
add
lods
jae
sub
dec
xor
mov
and
mov
rcr
movs
add
sub
mov
sbb
and
and
add
add
je
or
dec
xor
adc
inc
sub
sbb
add
cwde
lock
inc
test
add
xchg
cmp
inc
push
or
sbb
aaa
cmps
mov
adc
inc
adc
mov
add
shr
stos
and
dec
or
inc
add
cdq
add
arpl
mov
stos
js
inc
xor
mov
ror
dec
jnp
mov
(bad)
xchg
add
add
sbb
inc
dec
je
sbb
ss
rcr
rcl
add
mov
sti
mov
pusha
sahf
and
adc
push
xor
mov
lea
sbb
test
pop
add
mov
cmp
and
mov
jns
xor
or
jb
add
gs
push
adc
and
or
nop
ret
sbb
(bad)
(bad)
push
sub
fcomp
or
push
sbb
int3
adc
retf
int3
push
inc
cs
cmp
cmp
lods
repz
add
mov
xor
cmp
push
sar
jno
xor
pushf
add
gs
lods
mov
xor
ss
inc
sbb
les
int
push
ret
js
lea
push
or
lds
sbb
pop
lock
in
push
push
and
dec
pusha
or
xor
push
lds
sub
mov
lahf
mov
and
push
sbb
pop
xor
or
xor
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
pusha
add
scas
int3
adc
dec
cmp
pushf
mov
iret
add
(bad)
nop
push
jl
mov
add
mov
adc
adc
cmp
mov
adc
add
or
xor
adc
fs
movs
inc
loope
push
sub
adc
push
xor
in
ret
xchg
add
or
fdiv
xchg
daa
and
sbb
and
jo
popa
loopne
aas
or
mov
adc
outs
pop
aad
sub
dec
cmp
jle
mov
push
add
sub
push
test
xlat
cdq
pop
add
push
stc
cmp
rol
and
ror
scas
or
leave
sbb
add
dec
ins
inc
mov
adc
xchg
mov
add
add
and
sbb
out
fiadd
cmp
shr
test
test
xor
add
pop
sbb
push
leave
aaa
das
mov
sbb
enter
push
lds
pop
cld
add
inc
mov
xor
inc
adc
inc
add
jecxz
daa
or
inc
or
std
arpl
aas
jb
mov
mov
je
je
add
dec
and
lea
adc
or
xor
jae
loopne
and
add
pushf
xor
push
or
xchg
rol
adc
in
or
and
(bad)
mov
(bad)
push
add
rol
or
mov
and
cmp
add
ss
xor
inc
sahf
bound
and
rcl
mov
mov
mov
or
mov
ret
or
push
fadd
mov
or
sub
sub
push
cmp
sub
xchg
add
add
add
and
sbb
dec
cmp
add
add
aas
shl
icebp
dec
add
add
(bad)
push
or
add
rol
arpl
and
inc
or
push
xchg
mov
cmp
inc
inc
sti
ficomp
adc
mov
mov
ret
add
pop
clc
xchg
push
(bad)
sbb
add
xchg
mov
inc
or
cld
ret
test
stos
loope
or
ins
xor
adc
aas
pop
sbb
test
sub
arpl
xchg
(bad)
push
inc
sti
jecxz
cmp
ret
rol
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
ror
pushf
and
nop
loope
pop
imul
mov
sub
popa
and
sub
mov
sbb
jno
pop
adc
and
add
add
mov
ins
inc
adc
dec
test
out
cld
xchg
push
adc
mov
sti
inc
int3
xchg
xor
jg
push
dec
push
and
mov
ins
and
xor
push
or
adc
and
cmp
adc
movs
sbb
jae
ds
cmc
das
adc
add
cli
aaa
stc
pop
add
(bad)
jmp
mov
and
pop
push
sub
stc
repnz
and
in
pop
mov
shr
test
aas
cmp
outs
cmc
ror
test
mov
inc
mov
pop
mov
pop
rol
push
push
stos
es
add
mov
add
stos
js
mov
cmp
adc
push
dec
add
sbb
fidiv
push
or
mov
pushf
inc
mov
push
or
adc
mov
or
inc
sbb
daa
nop
add
mov
or
aad
int
or
or
inc
xchg
sbb
sbb
adc
mov
add
(bad)
or
in
or
inc
add
and
add
mov
mov
dec
push
clc
iret
cmp
(bad)
and
xchg
rcl
or
add
pop
adc
push
js
push
pusha
mov
xchg
adc
adc
mov
dec
hlt
inc
push
daa
add
fstp
adc
and
lea
pusha
jp
(bad)
rol
pop
loopne
or
or
ror
inc
add
add
sar
add
icebp
(bad)
sub
xchg
ror
or
sbb
clc
iret
push
imul
ret
enter
inc
adc
fistp
lock
push
cld
jecxz
sbb
adc
cwde
adc
jmp
jno
je
cmps
adc
add
int
in
add
(bad)
rep
inc
loop
movs
adc
push
and
lahf
add
and
xchg
add
jecxz
ins
or
jno
int
add
lock
clc
stc
out
aas
adc
test
je
aas
sbb
add
pop
int3
std
adc
adc
jge
xor
cld
pop
into
test
adc
cmp
pop
add
lock
leave
adc
sbb
pushf
pop
shl
leave
xor
push
les
in
inc
gs
es
push
dec
add
gs
mov
or
or
sub
mov
sub
nop
jns
adc
mov
add
jae
mov
push
int
stos
shl
popa
ins
inc
pop
cld
xchg
inc
pop
adc
(bad)
fnsave
int3
mov
test
sbb
je
pop
jmp
xor
push
in
test
inc
test
and
aas
int
adc
inc
cmps
adc
xor
cwde
jmp
aas
bound
inc
cmp
or
push
jbe
push
(bad)
icebp
dec
jmp
add
out
leave
xor
push
sbb
sar
adc
add
mov
push
add
cmp
ret
dec
inc
into
inc
mov
cmp
test
sbb
lods
dec
jl
lldt
inc
outs
pop
add
xchg
cmp
js
inc
test
add
les
rol
or
add
jb
or
movs
or
inc
adc
cmps
jo
xor
adc
mov
sbb
mov
ds
loopne
and
cld
icebp
ud2
cld
inc
or
adc
adc
imul
jo
inc
cwde
and
lock
(bad)
adc
rol
jo
cs
dec
xchg
daa
nop
mov
cs
adc
or
popf
sbb
push
into
test
add
and
add
or
inc
sub
add
add
add
add
or
dec
sbb
dec
add
or
scas
sbb
loope
pop
push
or
or
xor
or
es
rol
add
and
popa
push
mov
and
adc
add
inc
add
mov
loop
add
sbb
xor
jae
stos
adc
mov
sub
leave
sub
shl
ret
lock
push
cmp
add
stc
add
or
inc
sub
add
sbb
push
add
or
add
or
push
adc
(bad)
push
lds
inc
pop
push
pop
cmp
js
sar
adc
inc
(bad)
jg
ins
sbb
leave
jne
ja
push
js
inc
add
and
js
(bad)
lods
xchg
loopne
xor
adc
push
sbb
mov
stos
inc
test
jnp
es
enter
cli
push
or
loopne
and
cmp
cld
cmp
cmp
das
sub
hlt
test
add
sub
jnp
inc
ret
dec
lods
xchg
add
shl
sub
sbb
adc
hlt
pop
add
das
jb
add
vpacksswb
test
or
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
sbb
push
add
or
sub
rol
nop
pusha
mov
jo
pop
inc
mov
adc
aas
(bad)
fmul
jbe
and
fld
mov
push
and
je
pop
mov
or
and
xchg
add
xor
ins
test
or
add
ins
add
hlt
dec
shl
push
test
adc
movs
es
lods
xor
lock
push
dec
add
or
lds
call
sub
hlt
scas
add
pop
xchg
scas
or
xchg
es
dec
lds
push
or
mov
adc
and
xchg
inc
jle
das
daa
fnstsw
mov
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
dec
add
or
scas
sbb
loope
pop
push
or
or
xor
or
es
rol
add
and
popa
push
mov
and
adc
add
inc
add
mov
loop
add
sbb
xor
jae
stos
adc
mov
sub
leave
sub
shl
ret
lock
push
cmp
add
stc
add
or
inc
sub
add
sbb
push
add
or
add
or
push
adc
(bad)
push
lds
inc
pop
push
pop
cmp
js
sar
adc
inc
(bad)
jg
ins
sbb
leave
jne
ja
push
js
inc
add
and
js
(bad)
lods
xchg
loopne
xor
adc
push
sbb
mov
stos
inc
test
jnp
es
enter
cli
push
or
loopne
and
cmp
cld
cmp
cmp
das
sub
hlt
test
add
sub
jnp
inc
ret
dec
lods
xchg
add
shl
sub
sbb
adc
hlt
pop
add
das
jb
add
vpacksswb
test
or
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
push
add
add
add
add
add
add
or
inc
rol
jo
rol
rol
or
lgdtd
push
add
add
popa
xor
sbb
and
add
or
add
fisttp
inc
cmp
popa
xor
xor
idiv
add
in
add
adc
in
(bad)
test
stc
call
fld
cmps
fs
mov
je
(bad)
idiv
jmp
cli
cmps
add
leave
add
loope
(bad)
stc
add
inc
(bad)
aam
(bad)
rol
(bad)
xrelease
add
std
std
(bad)
fld
fld
test
xchg
push
mov
jecxz
mov
jmp
lods
lods
mov
xchg
add
rol
cld
xlat
(bad)
lods
add
outs
stc
lods
add
xchg
add
dec
push
cmp
stc
test
lea
leave
jl
(bad)
cli
xchg
std
mov
in
retf
cld
mov
cli
mov
(bad)
call
cld
ret
sbb
mul
mov
repnz
xchg
push
fwait
pop
add
repnz
sti
mov
stc
dec
jmp
ficomp
mov
(bad)
jmp
fnstenv
(bad)
fsub
mov
(bad)
out
(bad)
retf
ss
jmp
(bad)
test
jno
(bad)
inc
cmp
xchg
pop
push
ins
(bad)
(bad)
sbb
aam
enter
(bad)
cmp
jmp
mov
daa
dec
dec
push
(bad)
jmp
movs
les
push
or
mov
les
sti
mov
push
(bad)
in
jmp
(bad)
(bad)
stos
cwde
xchg
sub
int
add
add
loop
xchg
dec
add
or
or
call
mov
add
(bad)
sub
retf
mov
ret
or
mov
imul
or
mov
fdivr
sti
retf
dec
mov
dec
mov
mul
(bad)
in
push
xchg
pop
or
mov
xchg
xchg
fwait
xchg
pop
add
mov
cmc
ror
(bad)
out
(bad)
jmp
sub
push
adc
mov
(bad)
lock
mov
rcl
(bad)
repnz
push
(bad)
(bad)
out
std
loope
push
sbb
into
add
jae
mov
inc
out
fsub
cld
mov
(bad)
jmp
aaa
cmp
push
inc
push
pop
and
rol
push
and
add
in
jmp
jl
push
retf
int3
int
jle
push
add
lea
jmp
sbb
repnz
(bad)
mov
(bad)
jmp
xchg
pop
adc
mov
(bad)
mov
dec
add
lods
or
into
paddw
add
imul
imul
fsubr
xlat
xor
in
stos
loopne
push
out
pusha
aam
fwait
rol
test
int
std
out
add
cli
add
out
(bad)
imul
push
or
lods
add
aad
and
sub
xchg
inc
mov
push
push
jmp
or
test
not
add
into
(bad)
(bad)
fmul
scas
movs
sub
rol
idiv
(bad)
out
int3
popf
pop
add
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
adc
inc
sub
add
add
add
add
or
add
or
mov
inc
sub
nop
lds
sub
or
pushf
dec
jno
mov
sub
mov
sub
lea
add
adc
dec
cld
sbb
mov
cwd
mov
xchg
sub
enter
fcomp
sub
or
pop
mov
sbb
shl
ror
sahf
cmp
sub
popf
mov
or
fisubr
fmul
inc
stc
repnz
dec
int3
fisubr
inc
mov
scas
mov
adc
scas
mov
cmp
cmps
dec
mov
ds
retf
scas
sub
xor
adc
push
mov
or
bound
mov
add
add
fadd
pushf
retf
inc
mov
cmps
fisubr
scas
jbe
shl
inc
mov
jp
jmp
daa
popa
cmp
mov
test
ja
test
push
lods
add
rol
cmp
js
inc
sbb
or
cmp
jnp
aam
add
push
and
and
mov
push
enter
add
or
mov
adc
jne
aam
pop
add
adc
sbb
les
mov
sub
rol
stos
clc
mov
xchg
push
sbb
adc
inc
loope
rol
loopne
adc
xchg
psubd
test
fisub
add
xor
in
inc
adc
push
in
bound
or
jo
or
xchg
mov
movs
test
daa
or
adc
pop
rol
sub
icebp
xchg
loop
stc
addr16
and
mov
push
add
xchg
pop
mov
pop
call
loope
scas
mov
adc
nop
stos
sub
scas
ret
pop
(bad)
clc
xchg
add
inc
sub
lea
daa
mov
cdq
xor
loopne
push
enter
loope
sbb
cwde
jb
add
and
mov
stos
and
rol
(bad)
je
test
cld
jbe
inc
cmp
daa
out
mov
mov
aas
std
cmp
popa
push
add
mov
and
add
or
sbb
cs
lock
int3
xor
mov
or
in
adc
or
rol
add
push
call
loopne
sub
add
push
(bad)
hlt
xchg
push
daa
xchg
push
xor
push
xchg
add
sub
test
std
loopne
mov
cs
xor
das
loope
inc
test
inc
mov
(bad)
mov
xor
cmp
or
sub
rol
stos
test
mov
inc
inc
cs
test
retf
hlt
nop
sbb
fdiv
add
add
rcl
hlt
xchg
or
jae
mov
cmovp
push
rcl
adc
lds
xor
add
jmp
sub
and
clc
ret
jecxz
add
cmps
sbb
or
sar
mov
push
add
enter
ret
xchg
add
test
aas
cld
xor
sbb
xor
icebp
and
shl
cmp
les
xchg
inc
or
aad
scas
xchg
(bad)
retf
inc
ret
daa
mov
adc
push
add
add
jb
push
(bad)
pusha
jo
dec
pop
popa
add
ret
push
mov
rcl
adc
push
dec
pop
push
jp
or
add
push
hlt
mov
or
mov
ss
pop
nop
adc
xor
iret
test
in
add
shl
add
jp
lea
adc
pop
or
cmp
adc
popf
arpl
stos
inc
test
les
mov
adc
and
push
cld
add
adc
add
inc
cmp
call
test
sub
sub
jle
add
clc
mov
sub
add
inc
mov
xor
mov
ror
or
enter
mov
and
pop
ins
mov
mov
clc
loop
cmp
xor
add
adc
adc
add
movs
cmp
movs
push
xchg
cmp
cmps
pusha
js
or
movs
inc
cmc
je
or
add
cwde
inc
add
inc
rcl
sub
pop
(bad)
jns
call
pushf
cmp
leave
jae
add
cmps
nop
shr
sub
ins
(bad)
call
jge
cmp
je
adc
and
push
add
and
cmp
sbb
cld
leave
xchg
jg
cmps
xor
push
out
imul
xchg
xchg
add
or
or
adc
adc
push
jns
push
pusha
mov
dec
int3
xor
xor
or
or
rcl
cwde
rol
test
fistp
xor
xchg
inc
or
shl
adc
cwde
dec
pop
test
add
ss
imul
sub
fimul
and
pusha
or
or
mov
loopne
xchg
dec
cmp
xor
add
clc
adc
sbb
adc
loopne
xor
into
pop
movs
push
stos
sbb
cs
push
aad
dec
push
sub
add
or
mov
or
xor
cmp
dec
sbb
dec
or
loopne
push
dec
add
xor
xor
xor
ret
stos
fs
fxch
ret
jge
inc
mov
xchg
test
xor
adc
pop
add
inc
add
std
loop
(bad)
pop
int
mov
or
call
adc
mov
popa
add
mov
arpl
and
sub
rcr
ins
js
dec
inc
rcr
mov
scas
jg
rol
xor
scas
add
enter
mov
push
test
mov
or
popa
mov
fadd
dec
je
sbb
enter
cmp
stc
add
or
inc
sub
add
add
add
add
or
dec
mov
rol
push
loope
sbb
rol
pop
and
fsubr
in
pusha
in
lock
fild
leave
mov
ret
rep
test
inc
add
aad
daa
inc
pop
mov
in
cmps
fcomp
mov
sbb
lods
enter
xchg
adc
mov
sbb
and
mov
jg
into
adc
ret
jecxz
push
add
cs
xchg
es
xor
cli
das
and
and
add
or
inc
sub
add
add
add
add
or
xchg
inc
add
sub
mov
dec
pushf
dec
push
leave
xchg
push
lods
pop
aas
pop
or
scas
movs
aas
jl
cmp
add
dec
push
and
pop
and
pop
mov
clc
jb
sbb
jo
sbb
mov
sub
push
test
mov
mov
adc
cmp
add
sbb
popa
pusha
xchg
mov
loopne
stc
mov
push
sbb
sub
jl
mov
test
in
xchg
popa
xor
add
stc
add
enter
sub
add
add
or
add
pop
dec
cld
ja
mov
sub
gs
lea
dec
mov
lds
les
popf
adc
mov
(bad)
push
scas
mov
jl
sbb
xchg
and
push
mov
sbb
and
inc
icebp
outs
adc
jge
jae
pop
or
xor
les
mov
daa
sub
call
xor
xor
bound
stc
aaa
and
movs
add
pop
retf
loopne
pop
outs
(bad)
int3
mov
dec
popa
inc
add
stc
add
or
inc
sub
add
add
or
add
cdq
add
or
xchg
inc
add
sub
bound
test
and
dec
mov
lds
xchg
dec
dec
mov
std
(bad)
xchg
add
and
sbb
sets
and
cli
movs
add
rcl
out
and
(bad)
mov
hlt
test
fmul
je
and
inc
pop
aas
add
xor
add
nop
jg
dec
sbb
and
lds
xchg
je
sub
pop
mov
mov
mov
and
add
or
inc
sub
add
add
add
add
xchg
add
or
ja
mov
sub
mov
dec
pushf
dec
xchg
sbb
cmc
mov
xchg
sbb
push
jne
push
cmps
jle
cld
test
fwait
jns
sar
rcl
scas
pop
mov
mov
cld
retf
and
jmp
iret
out
add
dec
in
leave
dec
movs
mov
jecxz
mov
lods
or
icebp
(bad)
or
mov
mov
divps
fdiv
enter
je
xchg
clc
jmp
test
xor
add
stc
add
enter
sub
add
add
add
add
or
mov
rol
push
and
jl
bswap
ret
and
fsubr
cmp
hlt
dec
(bad)
test
sti
loope
mov
ret
std
outs
stc
fwait
leave
xor
or
movs
dec
mov
add
retf
lds
mov
sbb
dec
add
hlt
aaa
nop
cdq
inc
jns
clc
popf
xor
or
cmp
inc
jbe
mov
(bad)
icebp
fild
sbb
push
arpl
aad
popa
scas
(bad)
push
rol
add
cmp
add
jo
rol
rol
or
lgdtd
and
add
add
add
popa
xor
sbb
and
add
and
add
add
dec
inc
cmp
popa
aaa
add
add
inc
jmp
sbb
jmp
add
test
fcmovne
lods
(bad)
lock
in
(bad)
in
add
icebp
test
addr16
int
scas
xchg
jns
(bad)
jmp
fadd
std
jmp
push
(bad)
test
std
ret
pushf
ins
cs
add
aad
cld
(bad)
cld
(bad)
cld
add
dec
(bad)
loope
(bad)
stc
ss
fistp
(bad)
fadd
fsub
(bad)
cli
mov
std
into
(bad)
rol
ror
(bad)
sti
inc
std
mov
jp
movs
jne
cmc
jmp
std
leave
add
mov
cld
rol
call
dec
add
jmp
mov
add
push
(bad)
jmp
fs
pop
add
jp
xchg
push
add
mov
add
add
push
leave
xchg
add
cmps
add
lods
add
(bad)
loopne
mov
hlt
adc
fmul
outs
add
retf
call
in
idiv
mov
xlat
mov
push
cli
mov
(bad)
(bad)
arpl
jecxz
pushf
bound
imul
add
mov
sti
mov
sti
mov
(bad)
call
lods
add
sahf
(bad)
call
pop
add
(bad)
loope
jmp
nop
dec
add
mov
movs
imul
movs
or
out
out
push
aam
fiadd
paddd
hlt
in
push
cld
fsub
mov
(bad)
fiadd
(bad)
jmp
(bad)
hlt
nop
retf
stos
adc
adc
and
adc
mov
mov
or
mov
jbe
pop
pop
(bad)
in
add
jne
scas
mov
pop
adc
aad
xchg
pop
adc
loop
xchg
pop
or
sub
(bad)
fmul
xchg
pop
sub
int3
add
push
adc
push
xchg
mov
and
repz
out
(bad)
call
idiv
mov
mov
adc
cli
(bad)
(bad)
rol
sti
icebp
fdivrp
mov
lods
sbb
jb
loope
call
ins
or
mov
push
add
or
sahf
pop
icebp
fild
cld
mov
sti
mov
out
icebp
dec
lea
in
hlt
in
(bad)
fiadd
rcr
cwde
js
(bad)
mov
cld
hlt
add
lea
not
or
scas
add
mov
lock
push
lock
test
clc
clc
cmc
test
inc
add
or
mov
cmp
mov
fmul
clc
out
clc
clc
push
mov
mov
daa
clc
jmp
stos
(bad)
out
mov
iret
or
rcr
(bad)
cli
or
fld
cli
imul
pushf
sahf
mov
loopne
hlt
iret
adc
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
retf
or
xor
dec
pushf
dec
icebp
and
ds
inc
or
inc
mov
push
les
xor
or
enter
xchg
cmps
push
and
mov
and
dec
sbb
jo
loop
stos
fs
sub
push
dec
push
pop
dec
repnz
cmp
xor
jo
jmp
add
lods
dec
test
ret
test
push
and
test
add
push
jge
aad
retf
push
add
leave
call
mov
popf
pop
aaa
daa
outs
inc
and
sbb
pop
repnz
mov
adc
or
cmp
mov
sbb
arpl
mov
and
cmp
add
xchg
fild
mov
cmp
ins
ficom
cdq
add
icebp
xor
xchg
and
or
test
push
stos
add
push
jmp
jnp
les
inc
mov
test
pop
cmp
fcom
shr
mov
fcomp
and
pop
and
aas
or
inc
xor
rol
add
push
mov
cmp
add
push
loopne
and
sbb
jl
add
addr16
adc
add
loope
xchg
in
mov
aaa
inc
and
sbb
mov
xchg
test
ret
dec
pop
or
inc
add
sbb
addr16
add
lock
and
mov
or
loopne
mov
add
and
clc
cld
add
adc
clc
add
lea
jge
and
stc
mov
ins
add
sub
or
mov
dec
dec
movs
rol
mov
pop
cdq
daa
nop
jle
adc
pop
or
sbb
ins
adc
hlt
icebp
xchg
pop
inc
inc
dec
adc
xor
inc
mov
ins
xor
push
add
int3
mov
mov
xchg
add
cmp
clc
sub
(bad)
aas
mov
sbb
fsub
add
es
push
adc
add
lock
cli
jmp
sbb
dec
mov
inc
xor
mov
mov
jecxz
xchg
dec
add
movs
pop
mov
stos
hlt
inc
retf
pusha
inc
sar
sbb
xchg
or
pop
icebp
popa
or
(bad)
fisttp
pusha
pop
or
add
add
sub
inc
mov
cmp
add
lahf
jns
mov
xor
pop
je
shl
push
arpl
jno
movs
jo
pop
push
pop
popa
les
mov
fs
and
lock
add
fs
add
inc
mov
(bad)
sbb
push
shl
add
inc
inc
adc
adc
pop
add
lahf
dec
xor
add
push
xchg
std
pushf
and
mov
push
lods
popa
ret
lea
int
xchg
sub
and
pop
pop
sahf
jo
mov
mov
jno
sbb
add
or
push
mov
inc
pop
xchg
or
or
pop
scas
cmp
sbb
ds
mov
push
movs
mov
push
inc
nop
pop
nop
jmp
pop
mov
push
xchg
mov
repz
out
and
dec
xor
push
mov
nop
jmp
mov
ret
dec
outs
rol
repz
or
xor
loop
inc
jle
arpl
bnd
add
cmp
fstp
popa
pcmpeqb
nop
lea
mov
push
pcmpeqd
pop
inc
jecxz
push
sbb
pop
xor
dec
sahf
adc
es
mov
add
ds
xchg
sbb
sub
nop
adc
or
or
dec
cmp
add
fcmovb
xor
daa
mov
xor
pop
icebp
ins
push
pop
jbe
mov
xchg
clc
add
adc
test
pop
js
jecxz
rcr
xor
add
adc
adc
sbb
pop
or
push
and
inc
pop
push
sub
or
js
push
push
shl
jl
xchg
jecxz
dec
pusha
add
cwde
loopne
add
add
dec
(bad)
and
push
inc
mov
in
mov
add
mov
ret
jo
cmp
push
adc
inc
nop
cdq
and
nop
dec
dec
retf
mov
lea
lock
dec
imul
xor
loope
fld1
in
inc
sbb
addr16
mov
xchg
lea
jle
ins
adc
jo
dec
adc
call
(bad)
das
inc
nop
dec
data16
jmp
push
(bad)
imul
int3
pop
ret
sbb
or
shr
add
dec
and
cmp
rol
add
inc
inc
rcl
movs
pusha
or
enter
ret
sbb
les
jl
add
inc
sbb
add
cmp
jbe
and
mov
mov
loopne
dec
mov
or
or
add
add
dec
jecxz
add
sub
jno
add
inc
push
stos
push
pusha
add
enter
rcl
xchg
and
mov
ret
rol
fs
enter
jle
lgdtd
add
ficom
ds
add
je
add
pushf
(bad)
cmp
or
sub
mov
add
add
push
rol
leave
sub
outs
rol
push
mov
push
adc
push
add
popa
push
mov
or
cs
fs
add
and
push
and
push
test
and
js
inc
test
loope
shl
mov
or
pop
rol
jo
add
neg
add
pop
loopne
dec
xchg
(bad)
or
ror
xchg
adc
and
fadd
sbb
adc
cmp
test
xchg
jae
pusha
or
fiadd
daa
fadd
push
fisub
adc
add
add
add
xchg
cld
call
pop
push
push
or
mov
inc
sub
inc
sub
sub
sub
push
mov
sbb
pop
icebp
add
nop
mov
mov
push
dec
js
xchg
add
rol
sbb
or
xchg
xor
mov
ret
or
inc
popf
push
lods
popa
add
hlt
mov
add
test
pusha
lods
adc
aam
call
mov
sbb
fld
pop
call
verw
hlt
je
jmp
(bad)
jno
cmp
push
jecxz
and
jle
nop
aaa
and
dec
pop
sbb
(bad)
mov
and
rcr
inc
add
push
popa
test
(bad)
icebp
fldcw
test
or
adc
adc
or
lods
test
push
mov
cmovns
leave
add
xchg
and
adc
xor
iret
out
mov
adc
and
cmp
sbb
add
inc
xchg
dec
loop
jbe
inc
sbb
cdq
sub
add
inc
out
test
and
mov
pop
mov
lds
retf
add
push
lods
xor
adc
adc
and
and
mov
or
or
loope
call
inc
adc
jne
push
add
add
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
jo
mov
xor
loope
or
push
add
xchg
shr
push
mov
dec
sub
push
mov
test
lock
mov
fdiv
jmp
rcl
cwde
daa
(bad)
outs
or
into
and
and
(bad)
mov
shr
xor
mov
and
js
ret
mov
lods
jg
in
cld
fist
scas
fistp
rcl
ret
mov
sub
mov
and
lods
mov
clc
jmp
or
xor
gs
(bad)
add
mov
xor
loopne
dec
and
leave
lock
mov
xlat
out
adc
ins
pop
sub
repz
inc
aas
add
pop
dec
pop
xor
add
out
xor
daa
sub
inc
repz
jecxz
xor
cli
dec
mov
add
add
and
add
adc
pop
stc
inc
xchg
inc
adc
aas
inc
adc
mov
xchg
inc
call
add
and
add
or
inc
sub
add
add
or
add
or
push
leave
mov
pop
enter
pop
push
pop
(bad)
push
adc
mov
inc
retf
mov
or
pusha
mov
sub
inc
mov
aas
cmp
pop
dec
test
inc
pop
fwait
ror
adc
or
adc
out
fist
dec
add
mov
or
(bad)
push
repnz
(bad)
push
add
hlt
jne
adc
inc
sub
and
int3
xchg
jg
hlt
xchg
mov
das
leave
cs
mov
sti
or
out
test
push
dec
or
sub
loop
dec
sub
test
dec
or
retf
cwde
rol
xchg
jle
jmp
cmp
in
xor
nop
add
mov
stc
rcl
adc
aas
cld
stc
push
popa
mov
adc
rcl
shr
ins
adc
and
data16
adc
lahf
jb
js
xor
stc
add
or
inc
sub
add
add
add
add
or
add
or
push
pusha
cmps
add
sub
sub
dec
leave
push
dec
sbb
dec
and
aad
loope
push
adc
stc
inc
inc
inc
sar
push
jmp
enter
sub
(bad)
in
or
inc
in
add
inc
inc
pop
sahf
pop
and
ins
shl
inc
test
mov
add
push
ds
sub
sbb
or
in
lock
test
mov
ret
call
xor
je
lock
add
rcr
or
xchg
fisub
mov
(bad)
jge
daa
dec
mov
add
shr
push
cwde
adc
mov
fs
cmp
dec
inc
add
mov
int3
xor
test
add
mov
dec
xor
jl
fwait
xor
adc
sub
loop
or
inc
hlt
outs
mov
add
ins
mov
or
test
mov
or
add
sub
add
fsub
xchg
aas
add
sub
pusha
inc
and
mov
(bad)
xchg
call
add
and
mov
test
inc
dec
loopne
xchg
inc
add
add
stc
add
or
inc
sub
add
add
adc
add
inc
dec
sbb
nop
and
hlt
adc
inc
add
add
sub
inc
xchg
mov
xchg
gs
mov
stc
fwait
repz
inc
or
add
test
mov
dec
xchg
idiv
or
sbb
retf
js
out
dec
fwait
adc
cmp
xlat
imul
pop
add
adc
add
cmp
mov
and
inc
jg
pop
sub
les
adc
es
push
cmp
retf
mov
popa
xlat
sub
xor
mov
add
test
adc
call
sar
popa
repz
leave
test
jl
stos
adc
sub
fcomi
bndldx
retf
and
cmps
jg
loopne
jns
cmps
pop
add
repnz
xchg
jle
add
not
jmp
jns
cmp
jno
mov
scas
std
enter
xchg
mov
test
(bad)
loope
daa
add
jbe
das
cs
test
pop
or
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
push
pusha
xchg
or
push
cmp
xchg
or
aad
sub
imul
je
shl
adc
adc
ja
adc
adc
inc
xor
inc
add
retf
pop
add
xor
adc
xchg
mov
sbb
aas
jg
sbb
cmps
fs
movs
ins
mov
lock
cmp
dec
test
cmp
mov
pop
adc
xchg
mov
cmps
push
jbe
push
dec
xchg
and
mov
dec
adc
or
add
push
pop
xchg
nop
adc
dec
daa
and
jb
add
add
mov
loope
sub
jg
js
les
retf
lock
int3
pushf
jbe
(bad)
fistp
mov
cmps
fild
icebp
xor
adc
sbb
ret
jecxz
add
ins
sub
jmp
and
push
sbb
into
sbb
ret
xchg
sbb
enter
jg
mul
xor
and
rol
push
ins
xor
inc
push
das
or
xor
and
cmps
push
inc
add
stc
add
xor
inc
sub
add
add
or
add
or
lock
adc
sub
mov
mov
mov
and
mov
or
inc
or
and
add
mov
cmps
add
icebp
fbld
mov
mov
cli
inc
fmul
mov
js
fiadd
push
cmp
mov
lds
in
mov
push
lods
(bad)
mov
call
and
push
mov
sbb
nop
and
daa
retf
sbb
or
loop
push
mov
adc
rcr
mov
arpl
in
xchg
test
pop
inc
add
or
jmp
xor
adc
xor
sub
mov
stc
cmps
in
xchg
test
dec
test
push
dec
outs
les
or
rol
jl
js
mov
adc
test
mov
inc
xor
add
xor
test
add
and
mov
stos
dec
sub
mov
(bad)
sub
or
xor
cmovae
popa
(bad)
or
mov
stc
add
or
inc
sub
add
add
add
add
or
xlat
push
rol
adc
or
rcl
mov
f2xm1
rol
sbb
jmp
jmp
retf
or
add
push
jle
mov
cmp
pcmpgtb
add
adc
out
add
push
mov
and
movs
ins
lock
pop
aas
dec
je
sub
pop
add
sbb
jbe
add
pusha
mov
mov
or
stos
jbe
cli
fistp
push
push
jl
cmp
das
movs
rol
or
inc
sub
add
add
or
add
or
push
leave
mov
pop
enter
pop
push
pop
(bad)
push
adc
mov
inc
retf
mov
or
pusha
mov
sub
inc
mov
aas
cmp
pop
dec
test
inc
pop
fwait
ror
adc
or
adc
out
fist
dec
add
mov
or
(bad)
push
repnz
(bad)
push
add
hlt
jne
adc
inc
sub
and
int3
xchg
jg
hlt
xchg
mov
das
leave
cs
mov
sti
or
out
test
push
dec
or
sub
loop
dec
sub
test
dec
or
retf
cwde
rol
xchg
jle
jmp
cmp
in
xor
nop
add
mov
stc
rcl
adc
aas
cld
stc
push
popa
mov
adc
rcl
shr
ins
adc
and
data16
adc
lahf
jb
js
xor
stc
add
adc
inc
sub
add
add
add
add
or
add
or
push
pusha
cmps
add
sub
sub
dec
leave
push
dec
sbb
dec
and
aad
loope
push
adc
stc
inc
inc
inc
sar
push
jmp
enter
sub
(bad)
in
or
inc
in
add
inc
inc
pop
sahf
pop
and
ins
shl
inc
test
mov
add
push
ds
sub
sbb
or
in
lock
test
mov
ret
call
xor
je
lock
add
rcr
or
xchg
fisub
mov
(bad)
jge
daa
dec
mov
add
shr
push
cwde
adc
mov
fs
cmp
dec
inc
add
mov
int3
xor
test
add
mov
dec
xor
jl
fwait
xor
adc
sub
loop
or
inc
hlt
outs
mov
add
ins
mov
or
test
mov
or
add
sub
add
fsub
xchg
aas
add
sub
pusha
inc
and
mov
(bad)
xchg
call
add
and
mov
test
inc
dec
loopne
xchg
inc
add
add
stc
add
adc
inc
sub
add
add
adc
add
inc
dec
sbb
nop
and
hlt
adc
inc
add
add
sub
inc
xchg
mov
xchg
gs
mov
stc
fwait
repz
inc
or
add
test
mov
dec
xchg
idiv
or
sbb
retf
js
out
dec
fwait
adc
cmp
xlat
imul
pop
add
adc
add
cmp
mov
and
inc
jg
pop
sub
les
adc
es
push
cmp
retf
mov
popa
xlat
sub
xor
mov
add
test
adc
call
sar
popa
repz
leave
test
jl
stos
adc
sub
fcomi
bndldx
retf
and
cmps
jg
loopne
jns
cmps
pop
add
repnz
xchg
jle
add
not
jmp
jns
cmp
jno
mov
scas
std
enter
xchg
mov
test
(bad)
loope
daa
add
jbe
das
cs
test
pop
or
add
stc
add
adc
inc
sub
add
add
add
add
or
add
or
push
pusha
xchg
or
push
cmp
xchg
or
aad
sub
imul
je
shl
adc
adc
ja
adc
adc
inc
xor
inc
add
retf
pop
add
xor
adc
xchg
mov
sbb
aas
jg
sbb
cmps
fs
movs
ins
mov
lock
cmp
dec
test
cmp
mov
pop
adc
xchg
mov
cmps
push
jbe
push
dec
xchg
and
mov
dec
adc
or
add
push
pop
xchg
nop
adc
dec
daa
and
jb
add
add
mov
loope
sub
jg
js
les
retf
lock
int3
pushf
jbe
(bad)
fistp
mov
cmps
fild
icebp
xor
adc
sbb
ret
jecxz
add
ins
sub
jmp
and
push
sbb
into
sbb
ret
xchg
sbb
enter
jg
mul
xor
and
rol
push
ins
xor
inc
push
das
or
xor
and
cmps
push
inc
add
stc
add
or
inc
sub
add
add
or
add
or
lock
adc
sub
mov
mov
mov
and
mov
or
inc
or
and
add
mov
cmps
add
icebp
fbld
mov
mov
cli
inc
fmul
mov
js
fiadd
push
cmp
mov
lds
in
mov
push
lods
(bad)
mov
call
and
push
mov
sbb
nop
and
daa
retf
sbb
or
loop
push
mov
adc
rcr
mov
arpl
in
xchg
test
pop
inc
add
or
jmp
xor
adc
xor
sub
mov
stc
cmps
in
xchg
test
dec
test
push
dec
outs
les
or
rol
jl
js
mov
adc
test
mov
inc
xor
add
xor
test
add
and
mov
stos
dec
sub
mov
(bad)
sub
or
xor
cmovae
popa
(bad)
or
mov
stc
add
xor
inc
sub
add
add
add
add
nop
add
or
or
or
dec
test
mov
push
sbb
inc
mov
in
and
push
inc
push
adc
sub
and
sbb
in
int3
mov
inc
mov
mov
(bad)
out
adc
push
pushf
fwait
inc
inc
jns
inc
in
or
push
push
aas
ds
add
cmp
(bad)
mov
clc
mov
lods
fnstsw
rol
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
sub
ins
inc
daa
jno
les
mov
push
adc
add
mov
and
ss
adc
or
(bad)
fdivr
adc
adc
dec
pop
wbinvd
or
and
add
popf
mov
mov
or
inc
ret
aas
inc
inc
mov
pop
or
xor
dec
daa
cmp
ret
test
jo
push
dec
mov
fnstsw
retf
mov
fistp
and
cmp
mov
shr
cmps
xor
mov
mov
scas
jo
stos
fist
(bad)
xchg
jecxz
out
cld
jl
in
pop
push
or
std
cli
pop
inc
sub
pusha
js
push
enter
xchg
mov
dec
jmp
add
add
(bad)
jge
push
pop
aas
dec
je
sub
pop
pusha
xor
sbb
add
xor
inc
scas
mov
sub
push
add
mov
jg
xchg
adc
jg
or
adc
and
add
or
inc
sub
add
add
or
add
or
push
leave
mov
pop
enter
pop
push
pop
(bad)
push
adc
mov
inc
retf
mov
or
pusha
mov
sub
inc
mov
aas
cmp
pop
dec
test
inc
pop
fwait
ror
adc
or
adc
out
fist
dec
add
mov
or
(bad)
push
repnz
(bad)
push
add
hlt
jne
adc
inc
sub
and
int3
xchg
jg
hlt
xchg
mov
das
leave
cs
mov
sti
or
out
test
push
dec
or
sub
loop
dec
sub
test
dec
or
retf
cwde
rol
xchg
jle
jmp
cmp
in
xor
nop
add
mov
stc
rcl
adc
aas
cld
stc
push
popa
mov
adc
rcl
shr
ins
adc
and
data16
adc
lahf
jb
js
xor
stc
add
or
inc
sub
add
add
add
add
or
add
or
push
pusha
cmps
add
sub
sub
dec
leave
push
dec
sbb
dec
and
aad
loope
push
adc
stc
inc
inc
inc
sar
push
jmp
enter
sub
(bad)
in
or
inc
in
add
inc
inc
pop
sahf
pop
and
ins
shl
inc
test
mov
add
push
ds
sub
sbb
or
in
lock
test
mov
ret
call
xor
je
lock
add
rcr
or
xchg
fisub
mov
(bad)
jge
daa
dec
mov
add
shr
push
cwde
adc
mov
fs
cmp
dec
inc
add
mov
int3
xor
test
add
mov
dec
xor
jl
fwait
xor
adc
sub
loop
or
inc
hlt
outs
mov
add
ins
mov
or
test
mov
or
add
sub
add
fsub
xchg
aas
add
sub
pusha
inc
and
mov
(bad)
xchg
call
add
and
mov
test
inc
dec
loopne
xchg
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
adc
inc
sub
add
add
adc
add
inc
dec
sbb
nop
and
hlt
adc
inc
add
add
sub
inc
xchg
mov
xchg
gs
mov
stc
fwait
repz
inc
or
add
test
mov
dec
xchg
idiv
or
sbb
retf
js
out
dec
fwait
adc
cmp
xlat
imul
pop
add
adc
add
cmp
mov
and
inc
jg
pop
sub
les
adc
es
push
cmp
retf
mov
popa
xlat
sub
xor
mov
add
test
adc
call
sar
popa
repz
leave
test
jl
stos
adc
sub
fcomi
bndldx
retf
and
cmps
jg
loopne
jns
cmps
pop
add
repnz
xchg
jle
add
not
jmp
jns
cmp
jno
mov
scas
std
enter
xchg
mov
test
(bad)
loope
daa
add
jbe
das
cs
test
pop
or
add
stc
add
adc
inc
sub
add
add
add
add
or
add
or
push
pusha
xchg
or
push
cmp
xchg
or
aad
sub
imul
je
shl
adc
adc
ja
adc
adc
inc
xor
inc
add
retf
pop
add
xor
adc
xchg
mov
sbb
aas
jg
sbb
cmps
fs
movs
ins
mov
lock
cmp
dec
test
cmp
mov
pop
adc
xchg
mov
cmps
push
jbe
push
dec
xchg
and
mov
dec
adc
or
add
push
pop
xchg
nop
adc
dec
daa
and
jb
add
add
mov
loope
sub
jg
js
les
retf
lock
int3
pushf
jbe
(bad)
fistp
mov
cmps
fild
icebp
xor
adc
sbb
ret
jecxz
add
ins
sub
jmp
and
push
sbb
into
sbb
ret
xchg
sbb
enter
jg
mul
xor
and
rol
push
ins
xor
inc
push
das
or
xor
and
cmps
push
inc
add
stc
add
adc
inc
sub
add
add
or
add
or
lock
adc
sub
mov
mov
mov
and
mov
or
inc
or
and
add
mov
cmps
add
icebp
fbld
mov
mov
cli
inc
fmul
mov
js
fiadd
push
cmp
mov
lds
in
mov
push
lods
(bad)
mov
call
and
push
mov
sbb
nop
and
daa
retf
sbb
or
loop
push
mov
adc
rcr
mov
arpl
in
xchg
test
pop
inc
add
or
jmp
xor
adc
xor
sub
mov
stc
cmps
in
xchg
test
dec
test
push
dec
outs
les
or
rol
jl
js
mov
adc
test
mov
inc
xor
add
xor
test
add
and
mov
stos
dec
sub
mov
(bad)
sub
or
xor
cmovae
popa
(bad)
or
mov
stc
add
adc
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
jge
dec
sbb
mov
rol
mov
inc
push
ret
or
les
cli
repz
inc
push
adc
inc
and
jne
pop
pop
adc
xchg
ret
aaa
add
inc
inc
je
lock
(bad)
out
mov
cwde
clc
out
pusha
xchg
(bad)
(bad)
or
stc
pop
test
xchg
push
pop
push
cld
jmp
shl
stos
mov
shr
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
and
add
or
lgdtd
dec
add
add
popa
xor
sbb
pop
add
bound
add
add
add
inc
dec
inc
cmp
popa
inc
add
add
inc
sti
mov
(bad)
std
sub
leave
add
lods
pop
std
ret
add
mov
mov
std
cld
int3
xor
mov
(bad)
inc
in
leave
mov
add
scas
add
(bad)
dec
test
add
(bad)
jmp
(bad)
stc
cdq
mov
add
add
icebp
add
(bad)
cli
add
enter
add
out
(bad)
mov
cmps
add
in
(bad)
fld
(bad)
fiadd
(bad)
(bad)
adc
aad
mov
add
bnd
aam
(bad)
cld
jl
pop
add
add
add
xchg
add
ja
(bad)
push
(bad)
push
rol
mov
pop
sti
cmp
push
sbb
scas
xchg
std
test
imul
mov
in
and
loope
(bad)
sti
pop
(bad)
(bad)
sbb
and
loope
sti
jecxz
or
int3
sti
(bad)
and
(bad)
in
push
loopne
mov
add
(bad)
outs
(bad)
fisttp
(bad)
in
inc
enter
js
(bad)
in
push
mov
lock
ret
stc
stos
add
in
(bad)
scas
add
mov
jmp
(bad)
test
add
test
enter
inc
fdivr
mov
std
std
lock
icebp
(bad)
cmc
or
ret
mov
in
mov
out
(bad)
pop
jp
nop
stos
je
leave
jae
in
push
in
retf
push
add
mov
(bad)
ror
dec
or
cmps
pop
div
out
push
pop
cmp
add
loopne
loopne
popa
retf
xchg
push
lods
xor
xchg
pusha
sbb
icebp
push
jmp
jecxz
lock
sar
scas
mov
repnz
xchg
es
test
(bad)
mov
jnp
and
dec
add
out
add
out
push
(bad)
clc
add
mov
(bad)
jmp
icebp
mov
xchg
pop
or
(bad)
or
pusha
adc
out
mov
add
jecxz
push
sbb
out
out
repnz
ret
(bad)
(bad)
add
int
fcmovnu
sbb
out
cmp
mov
test
or
stos
add
scas
or
nop
add
mov
idiv
imul
or
inc
add
fisttp
jns
add
ret
adc
bnd
loop
adc
ja
pushf
sbb
in
adc
or
lods
or
ret
cmp
clc
stc
cmc
adc
adc
test
lock
paddq
jmp
fcmovnu
jecxz
or
nop
pop
sti
outs
sbb
in
cli
mov
dec
cmp
cmc
jmp
repnz
adc
mov
stc
cmc
mul
ss
push
mov
jmp
test
xor
cmc
add
test
in
sbb
out
cdq
sbb
push
loop
aad
call
adc
sbb
test
stc
rol
jecxz
cdq
div
jmp
in
icebp
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
xor
add
inc
std
or
mov
rol
es
rol
out
adc
jo
push
inc
arpl
mov
into
push
cmp
fadd
sbb
jo
nop
repnz
daa
or
aam
aad
and
int3
mov
sub
mov
and
cmp
(bad)
or
test
scas
xchg
push
ror
xor
nop
mov
mov
adc
pop
int3
cwde
fnstenv
(bad)
xchg
add
sub
adc
les
pop
cmp
and
mov
sbb
or
ror
cmp
xor
push
stos
push
dec
js
mov
daa
push
push
ret
adc
das
add
fld
push
mov
and
xchg
add
out
or
push
inc
pop
adc
jp
adc
pop
scas
loop
sub
dec
add
call
pusha
mov
mov
mov
sub
test
ins
add
in
cmc
or
pop
pop
xor
or
bound
pop
or
xor
mov
add
adc
je
add
mov
xor
lock
dec
pop
and
sbb
loopne
adc
push
xor
dec
add
mov
daa
mov
and
sub
jecxz
and
add
ret
inc
sbb
pushf
js
rcl
ror
and
aad
cmp
xor
or
add
ret
and
add
clc
push
les
jge
push
rol
les
mov
sub
cmp
retf
lds
and
ret
add
popf
jo
inc
or
in
cld
lock
adc
cmp
inc
xchg
add
add
sub
sahf
mov
and
cmp
mov
add
adc
adc
and
add
push
adc
or
repnz
mov
repnz
cmps
bound
dec
sbb
out
adc
int3
mov
cli
add
mov
adc
add
cmp
or
mov
scas
jecxz
push
mov
mov
or
and
push
cmp
(bad)
mov
movs
or
sbb
mov
mov
sbb
movs
mov
or
mov
pop
pop
adc
fs
ins
fdiv
inc
in
icebp
mov
aas
mov
jno
sbb
adc
mov
fsubr
call
outs
call
jle
xor
fsub
jo
pop
pop
cld
jno
aad
je
add
xor
adc
add
inc
loope
das
fdiv
push
call
outs
mov
inc
or
lock
adc
push
push
popa
ret
adc
xchg
ds
xchg
sbb
mov
jmp
cmp
dec
push
icebp
adc
sbb
nop
inc
or
stc
gs
leave
pop
push
jl
and
xor
scas
pop
or
in
mov
add
enter
jnp
adc
int3
add
add
xor
or
gs
add
js
mov
into
shr
mov
jmp
mov
cmp
or
loopne
fsub
pop
xor
inc
or
inc
int3
pop
jecxz
nop
sbb
push
lods
add
add
add
push
xchg
or
xor
mov
sub
or
add
adc
inc
adc
lock
adc
jl
add
fbld
inc
sbb
jecxz
or
dec
add
adc
inc
pop
and
add
inc
add
jns
inc
or
aaa
cmp
cmp
pop
or
and
sbb
or
cmp
cmp
xor
xlat
cmp
xor
jno
adc
push
inc
add
pusha
add
inc
pop
int
lds
jbe
xor
inc
ror
jbe
imul
xor
repnz
or
outs
sub
sbb
sub
inc
cmps
out
pop
mov
ret
or
pop
xor
popa
push
adc
cmp
hlt
add
mov
dec
adc
sbb
adc
lock
and
xor
and
ret
mov
and
inc
push
and
ret
cmp
xchg
test
jns
mov
rol
push
mov
push
cmps
adc
popa
push
repz
rol
rol
and
or
cmp
inc
sub
sub
push
push
xchg
jo
push
shl
push
and
(bad)
mov
mov
call
das
push
jecxz
out
je
cmp
cmp
xor
dec
and
daa
or
mov
adc
add
xor
mov
popa
add
mov
add
pusha
mov
inc
loopne
or
cmps
inc
rcl
pop
jbe
rcl
jl
xchg
inc
call
jo
pop
push
rol
dec
mov
adc
jp
or
mov
arpl
or
rol
push
scas
mov
out
xchg
or
inc
lahf
lock
clc
and
pop
push
nop
nop
pop
loope
cli
retf
cdq
sub
add
inc
pop
pop
add
sahf
add
enter
nop
inc
add
sub
add
add
push
or
and
jp
loop
sbb
pop
adc
inc
adc
and
mov
test
xchg
mov
push
xor
rcl
xor
sub
sub
add
adc
loopne
xor
add
jne
bound
mov
and
mov
sbb
ficom
gs
push
xor
cs
inc
sbb
push
or
js
push
push
xchg
rol
xor
and
pop
dec
add
loop
fdiv
add
cmp
nop
(bad)
lods
je
xor
add
loope
inc
sub
mov
fs
cmp
add
adc
sbb
mov
or
cs
lock
xor
add
fsub
dec
cwde
(bad)
daa
rcl
add
inc
sbb
inc
add
push
or
adc
outs
jae
pop
out
mov
add
jg
loope
je
mov
inc
sbb
add
call
rol
push
pop
or
movs
sub
push
retf
pop
push
int3
fnsave
sub
mov
pusha
ror
shl
pushw
(bad)
push
ficom
add
add
and
inc
arpl
ret
mov
(bad)
jecxz
lahf
and
fld
pop
dec
out
and
push
sbb
xor
add
scas
pop
sub
mov
div
xor
dec
inc
xchg
push
lock
pop
aas
fs
fadd
pop
push
inc
sbb
jo
pusha
jnp
fistp
or
xor
dec
aaa
inc
sar
xor
and
add
test
sub
and
xor
fdivr
push
aaa
test
retf
inc
sbb
adc
sbb
add
mov
mov
pandn
gs
fsubr
imul
or
and
inc
pushf
inc
or
add
adc
jb
xor
push
loopne
xor
or
movs
cwde
add
add
icebp
call
or
xchg
inc
or
and
lods
and
add
nop
loopne
(bad)
call
or
test
push
xor
(bad)
mov
in
cmp
sbb
test
enter
iret
add
xchg
xchg
cmp
add
cwde
cli
iret
mov
push
xchg
rcl
push
sub
mov
xchg
mov
and
fadd
daa
cmp
add
lds
add
dec
and
pop
jo
sub
cli
fbld
loop
(bad)
mov
out
pusha
or
shl
or
shl
add
stc
add
or
inc
sub
add
inc
add
add
inc
dec
sbb
mov
rol
rcr
dec
pushf
js
inc
(bad)
jg
cs
mov
mov
inc
movs
dec
push
mov
sahf
mov
cmp
daa
ror
jg
jae
in
in
pop
or
jmp
ret
mov
adc
pushf
cmp
add
adc
es
or
adc
lds
push
mov
and
pop
xchg
or
nop
cmp
sbb
sbb
or
adc
xchg
xchg
cs
push
pop
clc
inc
int
adc
add
mov
movs
push
rol
or
add
push
add
mov
imul
or
lock
inc
loope
mov
and
push
shr
inc
dec
push
mov
test
les
jnp
jle
jmp
jg
cmp
sbb
repnz
inc
lock
out
adc
add
dec
lock
sub
cmp
adc
clc
mov
xor
and
add
adc
and
mov
ror
or
adc
dec
dec
pop
cmp
imul
sbb
inc
inc
pop
lods
repz
or
inc
sub
clc
shl
and
xchg
popa
push
inc
or
push
jg
push
mov
adc
add
cld
and
or
lock
psllq
xor
rcl
cmp
add
pop
sbb
add
loop
or
mov
pusha
mov
ud0
or
add
sub
cmp
leave
aas
and
mov
ss
enter
add
inc
xchg
mov
mov
out
lea
xor
or
adc
sub
add
test
cs
inc
int3
sbb
xchg
inc
or
aas
and
and
add
or
dec
push
xchg
(bad)
(bad)
mov
push
cmp
sub
jl
out
call
and
call
add
inc
mov
pop
fadd
push
daa
hlt
add
test
jmp
adc
add
pusha
mov
loopne
xor
loopne
iret
inc
mov
lock
sub
cmp
dec
xor
pop
not
movs
outs
(bad)
lock
sub
xor
xor
loopne
aad
add
mov
bound
xor
inc
sbb
cmp
or
rol
in
or
popa
or
sbb
push
fidiv
and
xor
sbb
jp
rol
(bad)
lock
cs
scas
and
ror
in
xchg
adc
sub
sbb
xchg
inc
cmp
xchg
and
test
and
or
xor
adc
add
add
adc
adc
lock
aas
cdq
movs
xor
aas
jg
and
or
loop
add
add
dec
pop
in
aas
shl
push
add
movs
and
xchg
xchg
or
dec
sub
inc
or
add
test
sub
mov
aas
or
sub
repz
(bad)
and
rol
and
adc
rol
xor
and
add
retf
pushf
add
and
loopne
mov
add
punpckhbw
pop
ds
(bad)
xor
(bad)
mov
add
or
loopne
stc
and
push
cwde
dec
add
and
add
xchg
dec
or
adc
and
and
rol
adc
mov
push
dec
scas
pop
add
add
int3
popa
jnp
cmp
jns
ret
jmp
mov
loopne
add
add
bound
adc
and
push
add
cmp
xchg
mov
and
or
push
and
cmp
mov
and
inc
adc
je
add
enter
adc
rcr
test
inc
test
popa
or
enter
xor
and
les
shl
adc
test
sbb
inc
or
fwait
call
xchg
or
adc
add
adc
add
stos
adc
xchg
test
nop
fadd
outs
inc
lds
fadd
sbb
cmp
xchg
and
or
push
or
loopne
pop
push
nop
movs
data16
clc
inc
and
retf
in
inc
mov
inc
mov
test
pop
add
adc
str
daa
mov
cld
add
or
retf
add
bound
jb
mov
inc
rol
sub
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
push
and
lods
and
add
xor
add
sbb
cmps
or
xchg
add
jne
sub
jo
(bad)
or
outs
adc
inc
and
or
mov
inc
or
test
enter
lock
(bad)
push
sub
je
xchg
adc
adc
sub
ror
leave
add
sub
mov
cmps
ins
inc
lock
mov
mov
cmp
iret
fld
pop
and
mov
shl
push
scas
pop
and
inc
lea
mov
xchg
js
jmp
push
pop
in
add
nop
call
lahf
std
and
lock
hlt
mov
jb
mov
cmp
mov
inc
std
iret
aaa
ins
jmp
pop
ds
adc
jnp
inc
test
mov
lahf
push
pop
inc
cmp
jnp
adc
fcomip
and
mov
sbb
cld
adc
call
loopne
aas
add
jl
iret
add
or
sbb
sub
fist
xor
xor
pop
cmp
inc
and
push
test
mov
dec
mov
xchg
pop
mov
inc
add
mov
inc
cmp
xor
dec
pop
(bad)
cld
pop
push
xor
fdiv
sbb
in
xor
lea
mov
dec
(bad)
fdiv
addps
xchg
push
sbb
mov
and
inc
sbb
xor
dec
(bad)
adc
loope
dec
iret
dec
inc
cmps
popf
push
fmul
(bad)
lds
cld
cmp
xchg
(bad)
xor
inc
cmp
enter
movs
push
and
jecxz
add
or
movs
xchg
inc
iret
cmps
test
and
sbb
push
or
cmp
bound
or
sbb
loop
iret
aas
inc
dec
cli
sub
mov
(bad)
repnz
add
add
mov
(bad)
and
inc
push
hlt
sub
add
pushf
jl
cmps
xor
push
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
adc
and
add
rol
gs
sbb
je
jmp
xchg
gs
or
sbb
lds
lods
sbb
push
(bad)
mov
add
and
inc
pusha
add
ja
dec
cmp
adc
ins
push
sbb
mov
lods
mov
popa
add
or
data16
sub
push
movs
outs
adc
adc
push
add
pop
cmps
cld
cmp
add
lahf
mov
sti
icebp
mov
add
mov
dec
add
adc
xor
pop
inc
mov
adc
jecxz
and
callw
arpl
pop
mov
(bad)
mov
stc
ror
imul
add
inc
(bad)
mov
and
nop
jmp
or
call
push
xor
shl
mov
xlat
loop
ror
cmp
push
cmp
mov
sub
add
aaa
les
inc
loopne
jle
push
jb
adc
or
mov
inc
jge
loopne
cmove
hlt
or
hlt
inc
mov
xchg
shl
or
adc
xor
daa
fsub
add
rcr
loopne
pop
add
add
dec
lar
ret
inc
add
xor
xor
push
sar
hlt
push
adc
js
dec
pop
adc
ror
and
adc
adc
inc
inc
sbb
loopne
add
scas
mov
adc
inc
outs
cmps
xchg
xchg
in
cmp
loope
ret
xchg
pop
adc
jbe
aam
xchg
dec
inc
retf
(bad)
and
movs
inc
adc
and
xchg
push
dec
test
inc
sub
movs
jle
(bad)
aas
and
daa
imul
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
rcr
sub
popa
ret
sbb
loopne
mov
mov
shr
cmp
inc
and
das
and
or
pop
dec
call
lds
mov
cmp
dec
fdiv
shl
xor
ret
les
loopne
add
sbb
sbb
adc
jnp
and
xor
loope
rol
and
or
push
(bad)
add
add
sub
loope
xor
shr
mov
cmc
mov
fsub
xor
sub
xor
mov
and
dec
and
xchg
push
sub
jmp
enter
mov
or
dec
lods
mov
sub
jle
mov
add
aas
add
or
shl
iret
or
jns
stc
shr
xchg
and
sahf
push
js
ja
xchg
daa
cdq
mov
rcl
js
loope
ret
inc
clc
enter
stos
and
loop
pop
punpckhbw
or
mov
int
icebp
retf
or
in
ret
and
arpl
adc
lds
cmp
add
or
add
(bad)
test
adc
mov
clc
js
rcr
fs
mov
dec
mov
jmp
mov
inc
jmp
retf
mov
and
xor
inc
or
aas
int3
or
adc
inc
dec
inc
add
ret
mov
inc
sbb
fst
push
in
xchg
adc
sub
push
test
loope
shl
shl
mov
adc
ror
jge
aam
xchg
sbb
clc
movs
inc
(bad)
cmps
pop
push
shr
mov
add
sbb
dec
repz
sbb
inc
aas
push
inc
pusha
xchg
adc
(bad)
cmps
sahf
jp
jmp
ret
test
mov
xchg
sbb
hlt
ror
inc
ss
arpl
mov
cmp
jge
dec
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
add
out
sbb
adc
add
dec
sbb
add
cmp
fs
rol
fs
add
in
inc
leave
mov
stos
mov
and
dec
add
shl
(bad)
sub
adc
inc
test
cmps
mov
ror
and
(bad)
and
mov
test
xchg
lods
fldenv
aas
rcl
shl
in
rcr
or
or
jecxz
mov
sub
inc
nop
(bad)
mov
mov
xor
sub
add
inc
test
es
(bad)
call
xor
ins
ror
scas
rcl
or
ins
cmp
(bad)
xor
mov
pop
push
test
sbb
mov
cmps
pop
inc
aaa
rcr
cmps
cmp
scas
lods
and
ins
inc
mov
je
cmp
sbb
lock
and
fimul
fst
inc
jp
int3
lock
cld
adc
dec
clc
dec
or
jbe
into
adc
sbb
xor
shl
(bad)
mov
divps
mov
add
sub
mov
call
jb
add
or
mov
loopne
pop
aas
cs
in
adc
cmp
xlat
pop
push
inc
cmp
loopne
pop
nop
or
or
shr
(bad)
arpl
adc
dec
aam
loopne
add
loope
or
ins
or
inc
daa
nop
repz
add
leave
leave
es
imul
jo
sbb
stc
daa
mov
inc
add
sub
mov
fmul
mov
loopne
add
and
xor
clc
loopne
xor
pop
jmp
sbb
xchg
and
stos
cmps
push
cmp
sbb
cmp
jmp
or
push
push
xor
retf
add
and
gs
xchg
pop
adc
inc
xor
stos
dec
or
repnz
cmps
or
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
push
and
lods
and
add
xor
add
sbb
cmps
or
xchg
add
jne
sub
jo
(bad)
or
outs
adc
inc
and
or
mov
inc
or
test
enter
lock
(bad)
push
sub
je
xchg
adc
adc
sub
ror
leave
add
sub
mov
cmps
ins
inc
lock
mov
mov
cmp
iret
fld
pop
and
mov
shl
push
scas
pop
and
inc
lea
mov
xchg
js
jmp
push
pop
in
add
nop
call
lahf
std
and
lock
hlt
mov
jb
mov
cmp
mov
inc
std
iret
aaa
ins
jmp
pop
ds
adc
jnp
inc
test
mov
lahf
push
pop
inc
cmp
jnp
adc
fcomip
and
mov
sbb
cld
adc
call
loopne
aas
add
jl
iret
add
or
sbb
sub
fist
xor
xor
pop
cmp
inc
and
push
test
mov
dec
mov
xchg
pop
mov
inc
add
mov
inc
cmp
xor
dec
pop
(bad)
cld
pop
push
xor
fdiv
sbb
in
xor
lea
mov
dec
(bad)
fdiv
addps
xchg
push
sbb
mov
and
inc
sbb
xor
dec
(bad)
adc
loope
dec
iret
dec
inc
cmps
popf
push
fmul
(bad)
lds
cld
cmp
xchg
(bad)
xor
inc
cmp
enter
movs
push
and
jecxz
add
or
movs
xchg
inc
iret
cmps
test
and
sbb
push
or
cmp
bound
or
sbb
loop
iret
aas
inc
dec
cli
sub
mov
(bad)
repnz
add
add
mov
(bad)
and
inc
push
hlt
sub
add
pushf
jl
cmps
xor
push
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
adc
and
add
rol
gs
sbb
je
jmp
xchg
gs
or
sbb
lds
lods
sbb
push
(bad)
mov
add
and
inc
pusha
add
ja
dec
cmp
adc
ins
push
sbb
mov
lods
mov
popa
add
or
data16
sub
push
movs
outs
adc
adc
push
add
pop
cmps
cld
cmp
add
lahf
mov
sti
icebp
mov
add
mov
dec
add
adc
xor
pop
inc
mov
adc
jecxz
and
callw
arpl
pop
mov
(bad)
mov
stc
ror
imul
add
inc
(bad)
mov
and
nop
jmp
or
call
push
xor
shl
mov
xlat
loop
ror
cmp
push
cmp
mov
sub
add
aaa
les
inc
loopne
jle
push
jb
adc
or
mov
inc
jge
loopne
cmove
hlt
or
hlt
inc
mov
xchg
shl
or
adc
xor
daa
fsub
add
rcr
loopne
pop
add
add
dec
lar
ret
inc
add
xor
xor
push
sar
hlt
push
adc
js
dec
pop
adc
ror
and
adc
adc
inc
inc
sbb
loopne
add
scas
mov
adc
inc
outs
cmps
xchg
xchg
in
cmp
loope
ret
xchg
pop
adc
jbe
aam
xchg
dec
inc
retf
(bad)
and
movs
inc
adc
and
xchg
push
dec
test
inc
sub
movs
jle
(bad)
aas
and
daa
imul
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
rcr
sub
popa
ret
sbb
loopne
mov
mov
shr
cmp
inc
and
das
and
or
pop
dec
call
lds
mov
cmp
dec
fdiv
shl
xor
ret
les
loopne
add
sbb
sbb
adc
jnp
and
xor
loope
rol
and
or
push
(bad)
add
add
sub
loope
xor
shr
mov
cmc
mov
fsub
xor
sub
xor
mov
and
dec
and
xchg
push
sub
jmp
enter
mov
or
dec
lods
mov
sub
jle
mov
add
aas
add
or
shl
iret
or
jns
stc
shr
xchg
and
sahf
push
js
ja
xchg
daa
cdq
mov
rcl
js
loope
ret
inc
clc
enter
stos
and
loop
pop
punpckhbw
or
mov
int
icebp
retf
or
in
ret
and
arpl
adc
lds
cmp
add
or
add
(bad)
test
adc
mov
clc
js
rcr
fs
mov
dec
mov
jmp
mov
inc
jmp
retf
mov
and
xor
inc
or
aas
int3
or
adc
inc
dec
inc
add
ret
mov
inc
sbb
fst
push
in
xchg
adc
sub
push
test
loope
shl
shl
mov
adc
ror
jge
aam
xchg
sbb
clc
movs
inc
(bad)
cmps
pop
push
shr
mov
add
sbb
dec
repz
sbb
inc
aas
push
inc
pusha
xchg
adc
(bad)
cmps
sahf
jp
jmp
ret
test
mov
xchg
sbb
hlt
ror
inc
ss
arpl
mov
cmp
jge
dec
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
add
out
sbb
adc
add
dec
sbb
add
cmp
fs
rol
fs
add
in
inc
leave
mov
stos
mov
and
dec
add
shl
(bad)
sub
adc
inc
test
cmps
mov
ror
and
(bad)
and
mov
test
xchg
lods
fldenv
aas
rcl
shl
in
rcr
or
or
jecxz
mov
sub
inc
nop
(bad)
mov
mov
xor
sub
add
inc
test
es
(bad)
call
xor
ins
ror
scas
rcl
or
ins
cmp
(bad)
xor
mov
pop
push
test
sbb
mov
cmps
pop
inc
aaa
rcr
cmps
cmp
scas
lods
and
ins
inc
mov
je
cmp
sbb
lock
and
fimul
fst
inc
jp
int3
lock
cld
adc
dec
clc
dec
or
jbe
into
adc
sbb
xor
shl
(bad)
mov
divps
mov
add
sub
mov
call
jb
add
or
mov
loopne
pop
aas
cs
in
adc
cmp
xlat
pop
push
inc
cmp
loopne
pop
nop
or
or
shr
(bad)
arpl
adc
dec
aam
loopne
add
loope
or
ins
or
inc
daa
nop
repz
add
leave
leave
es
imul
jo
sbb
stc
daa
mov
inc
add
sub
mov
fmul
mov
loopne
add
and
xor
clc
loopne
xor
pop
jmp
sbb
xchg
and
stos
cmps
push
cmp
sbb
cmp
jmp
or
push
push
xor
retf
add
and
gs
xchg
pop
adc
inc
xor
stos
dec
or
repnz
cmps
or
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
push
and
lods
and
add
xor
add
sbb
cmps
or
xchg
add
jne
sub
jo
(bad)
or
outs
adc
inc
and
or
mov
inc
or
test
enter
lock
(bad)
push
sub
je
xchg
adc
adc
sub
ror
leave
add
sub
mov
cmps
ins
inc
lock
mov
mov
cmp
iret
fld
pop
and
mov
shl
push
scas
pop
and
inc
lea
mov
xchg
js
jmp
push
pop
in
add
nop
call
lahf
std
and
lock
hlt
mov
jb
mov
cmp
mov
inc
std
iret
aaa
ins
jmp
pop
ds
adc
jnp
inc
test
mov
lahf
push
pop
inc
cmp
jnp
adc
fcomip
and
mov
sbb
cld
adc
call
loopne
aas
add
jl
iret
add
or
sbb
sub
fist
xor
xor
pop
cmp
inc
and
push
test
mov
dec
mov
xchg
pop
mov
inc
add
mov
inc
cmp
xor
dec
pop
(bad)
cld
pop
push
xor
fdiv
sbb
in
xor
lea
mov
dec
(bad)
fdiv
addps
xchg
push
sbb
mov
and
inc
sbb
xor
dec
(bad)
adc
loope
dec
iret
dec
inc
cmps
popf
push
fmul
(bad)
lds
cld
cmp
xchg
(bad)
xor
inc
cmp
enter
movs
push
and
jecxz
add
or
movs
xchg
inc
iret
cmps
test
and
sbb
push
or
cmp
bound
or
sbb
loop
iret
aas
inc
dec
cli
sub
mov
(bad)
repnz
add
add
mov
(bad)
and
inc
push
hlt
sub
add
pushf
jl
cmps
xor
push
add
and
add
or
inc
sub
add
add
add
add
or
add
or
adc
and
add
rol
gs
sbb
je
jmp
xchg
gs
or
sbb
lds
lods
sbb
push
(bad)
mov
add
and
inc
pusha
add
ja
dec
cmp
adc
ins
push
sbb
mov
lods
mov
popa
add
or
data16
sub
push
movs
outs
adc
adc
push
add
pop
cmps
cld
cmp
add
lahf
mov
sti
icebp
mov
add
mov
dec
add
adc
xor
pop
inc
mov
adc
jecxz
and
callw
arpl
pop
mov
(bad)
mov
stc
ror
imul
add
inc
(bad)
mov
and
nop
jmp
or
call
push
xor
shl
mov
xlat
loop
ror
cmp
push
cmp
mov
sub
add
aaa
les
inc
loopne
jle
push
jb
adc
or
mov
inc
jge
loopne
cmove
hlt
or
hlt
inc
mov
xchg
shl
or
adc
xor
daa
fsub
add
rcr
loopne
pop
add
add
dec
lar
ret
inc
add
xor
xor
push
sar
hlt
push
adc
js
dec
pop
adc
ror
and
adc
adc
inc
inc
sbb
loopne
add
scas
mov
adc
inc
outs
cmps
xchg
xchg
in
cmp
loope
ret
xchg
pop
adc
jbe
aam
xchg
dec
inc
retf
(bad)
and
movs
inc
adc
and
xchg
push
dec
test
inc
sub
movs
jle
inc
or
daa
imul
lods
mov
pop
fcomp
rol
inc
je
scas
mov
mov
mov
movs
and
mov
adc
shr
retf
out
shr
adc
sbb
jecxz
add
mov
adc
rcr
mov
(bad)
adc
add
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
adc
sbb
repnz
add
inc
push
push
inc
rol
mov
and
xor
lahf
inc
xchg
and
pop
leave
adc
cmps
hlt
mov
and
and
mov
jno
in
or
add
jno
ret
jp
xor
repnz
dec
pop
inc
in
test
inc
test
add
sub
nop
dec
movs
push
add
and
add
or
inc
sub
add
add
add
add
or
add
or
rcr
sub
popa
ret
sbb
loopne
mov
mov
shr
cmp
inc
and
das
and
or
pop
dec
call
lds
mov
cmp
dec
fdiv
shl
xor
ret
les
loopne
add
sbb
sbb
adc
jnp
and
xor
loope
rol
and
or
push
(bad)
add
add
sub
loope
xor
shr
mov
cmc
mov
fsub
xor
sub
xor
mov
and
dec
and
xchg
push
sub
jmp
enter
mov
or
dec
lods
mov
sub
jle
mov
add
aas
add
or
shl
iret
or
jns
stc
shr
xchg
and
sahf
push
js
ja
xchg
daa
cdq
mov
rcl
js
loope
ret
inc
clc
enter
stos
and
loop
pop
punpckhbw
or
mov
int
icebp
retf
or
in
ret
and
arpl
adc
lds
cmp
add
or
add
(bad)
test
adc
mov
clc
js
rcr
fs
mov
dec
mov
jmp
mov
inc
jmp
retf
mov
and
xor
inc
or
aas
int3
or
adc
inc
dec
inc
add
ret
mov
inc
sbb
fst
push
in
xchg
adc
sub
sub
psubb
add
dec
dec
xchg
inc
sbb
js
add
dec
aam
xchg
sbb
dec
out
loope
and
sbb
and
sbb
xor
adc
add
inc
lock
sbb
sub
nop
loope
scas
mov
add
push
fs
inc
adc
cmp
dec
or
pop
(bad)
in
pop
inc
add
loope
and
inc
cmp
mov
in
stc
(bad)
or
adc
sbb
out
inc
or
add
dec
inc
cmp
out
adc
rol
or
test
pop
and
mov
mov
mov
adc
and
fld
adc
das
sub
mov
xor
arpl
out
pop
cmp
(bad)
stos
mov
sbb
pushf
mov
add
add
stc
add
or
inc
sub
add
add
or
add
or
mov
add
out
sbb
adc
add
dec
sbb
add
cmp
fs
rol
fs
add
in
inc
leave
mov
stos
mov
and
dec
add
shl
(bad)
sub
adc
inc
test
cmps
mov
ror
and
(bad)
and
mov
test
xchg
lods
fldenv
aas
rcl
shl
in
rcr
or
or
jecxz
mov
sub
inc
nop
(bad)
mov
mov
xor
sub
add
inc
test
es
(bad)
call
xor
ins
ror
scas
rcl
or
ins
cmp
(bad)
xor
mov
pop
push
test
sbb
mov
cmps
pop
inc
aaa
rcr
cmps
cmp
scas
lods
and
ins
inc
mov
je
cmp
sbb
lock
and
fimul
fst
inc
jp
int3
lock
cld
adc
dec
clc
dec
or
jbe
into
adc
sbb
xor
shl
(bad)
mov
divps
mov
add
sub
mov
call
jb
add
or
mov
loopne
pop
aas
cs
in
adc
cmp
xlat
pop
push
inc
cmp
loopne
pop
nop
or
or
shr
(bad)
arpl
adc
dec
aam
loopne
add
loope
or
ins
or
inc
daa
nop
repz
add
leave
leave
es
imul
jo
sbb
stc
daa
mov
inc
add
sub
mov
fmul
mov
loopne
add
and
xor
clc
loopne
xor
pop
jmp
sbb
xchg
clc
jae
stos
inc
inc
les
test
or
or
retf
push
xchg
add
adc
add
ins
add
icebp
xsave
rol
adc
aas
pusha
or
cmp
xor
add
and
icebp
(bad)
mov
inc
push
adc
inc
call
or
bound
mov
ror
shr
jmp
pop
das
ror
rol
sbb
inc
cmp
(bad)
or
lock
or
pop
aam
add
fucomi
mov
push
rcr
rol
push
inc
in
retf
shr
das
aam
stos
pop
fcomp
ror
ret
add
stc
add
or
inc
sub
add
add
add
add
or
push
and
lods
and
add
xor
add
sbb
cmps
or
xchg
add
jne
sub
jo
(bad)
or
outs
adc
inc
and
or
mov
inc
or
test
enter
lock
(bad)
push
sub
je
xchg
adc
adc
sub
ror
leave
add
sub
mov
cmps
ins
inc
lock
mov
mov
cmp
iret
fld
pop
and
mov
shl
push
scas
pop
and
inc
lea
mov
xchg
js
jmp
push
pop
in
add
nop
call
lahf
std
and
lock
hlt
mov
jb
mov
cmp
mov
inc
std
iret
aaa
ins
jmp
pop
ds
adc
jnp
inc
test
mov
lahf
push
pop
inc
cmp
jnp
adc
fcomip
and
mov
sbb
cld
adc
call
loopne
aas
add
jl
iret
add
or
sbb
sub
fist
xor
xor
pop
cmp
inc
and
push
test
mov
dec
mov
xchg
pop
mov
inc
add
mov
inc
cmp
xor
dec
pop
(bad)
cld
pop
push
xor
fdiv
sbb
in
xor
lea
mov
dec
(bad)
fdiv
addps
xchg
push
sbb
mov
and
inc
sbb
xor
dec
(bad)
adc
loope
dec
iret
dec
inc
cmps
popf
push
fmul
(bad)
lds
cld
cmp
xchg
(bad)
xor
inc
cmp
enter
movs
push
and
jecxz
add
or
movs
xchg
inc
iret
cmps
test
and
sbb
push
or
cmp
mov
or
and
aas
dec
or
lods
mov
or
sar
hlt
add
inc
cs
dec
adc
or
add
push
add
aas
pop
cmp
add
jl
(bad)
mov
(bad)
cli
(bad)
sbb
stc
mov
mov
xor
inc
aas
sub
rcr
dec
sbb
les
cwde
adc
aam
mov
sbb
inc
mov
clc
cmp
add
scas
mov
jno
fwait
bsr
cmp
das
add
push
cld
(bad)
hlt
push
loopne
inc
jl
lods
lock
or
push
das
ret
fadd
jbe
sub
sar
mov
push
mov
add
repz
xor
(bad)
jecxz
leave
push
mov
sbb
inc
nop
or
les
add
and
add
or
inc
sub
add
add
add
add
or
add
or
lock
add
adc
push
mov
inc
and
fs
movs
mov
xor
cmp
(bad)
mov
dec
push
pushf
sbb
pushf
push
pop
(bad)
inc
or
adc
inc
test
inc
loope
dec
xchg
and
in
sbb
sub
dec
and
inc
dec
push
adc
cmp
jno
add
adc
nop
adc
movs
or
add
and
xchg
push
add
or
dec
push
ror
daa
and
test
aas
add
aas
add
or
cmp
jb
rcl
stc
cmp
mov
stos
inc
mov
sbb
xor
sti
and
popa
xor
int
int
rcr
cmp
loopne
inc
lods
push
sub
sbb
js
mov
loope
or
push
scas
mov
cli
nop
out
cmp
jmp
(bad)
sbb
gs
mov
sti
nop
push
sub
adc
pusha
xlat
lock
imul
sbb
xor
xlat
push
ja
mov
imul
push
or
fldcw
rcl
ror
or
loopne
clc
cvttps2pi
sub
das
or
ret
cwde
clc
dec
ins
retf
dec
ss
inc
clc
adc
adc
cmc
pop
inc
stos
or
mov
rol
xor
and
adc
push
adc
lea
mov
add
enter
mov
or
add
cmp
inc
call
xchg
adc
cmps
call
cmps
jno
xchg
add
dec
hlt
add
(bad)
sbb
sahf
inc
adc
mov
(bad)
cwde
aas
or
mov
movs
mov
and
add
jo
lds
aas
xor
push
sbb
ror
sbb
in
adc
call
in
mov
int
ins
inc
dec
hlt
add
cmps
cmp
inc
dec
push
pop
lods
mov
(bad)
rol
sbb
stos
in
mov
jb
(bad)
imul
mov
scas
add
fcom
inc
cmp
cmp
adc
cld
in
out
mov
push
push
sub
in
push
or
test
outs
mov
aas
in
or
inc
inc
retf
jo
push
lods
imul
mov
or
adc
call
pop
iret
dec
stos
inc
adc
std
sub
jae
cmp
ins
cmps
cs
sub
add
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
jo
aas
jg
adc
cmp
lock
ds
sbb
inc
adc
jecxz
mov
sub
fs
test
dec
sahf
and
inc
in
jg
dec
mov
dec
xchg
push
daa
inc
lea
xchg
loop
mov
xchg
push
std
cmp
mov
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
das
add
or
add
or
mov
rol
mov
ret
and
ins
dec
xchg
mov
push
fmul
xor
lods
mov
int3
pop
xor
sub
test
(bad)
std
jmp
jb
mov
or
mov
push
xor
repnz
(bad)
adc
sub
add
inc
das
or
fld
push
mov
and
xchg
jg
aas
out
rep
add
mov
inc
sub
dec
stc
and
or
or
add
sbb
jne
clc
cmp
rcr
mov
xchg
mov
cmp
and
test
cmp
xor
xchg
adc
pusha
(bad)
jg
or
rol
aad
or
movs
js
aam
repnz
ret
mov
es
mov
mov
in
jle
jmp
mov
das
inc
shr
pop
xchg
test
dec
pop
call
mov
mov
adc
test
sbb
and
adc
js
or
call
std
mov
mov
inc
in
repnz
dec
mov
bound
and
or
cmp
add
sbb
push
loope
sbb
mov
jae
inc
dec
or
add
out
std
adc
and
cwde
ret
adc
cld
xchg
and
outs
fsub
and
mov
inc
cmp
test
push
adc
daa
xor
add
pop
and
add
jno
jns
xor
adc
rcl
xchg
push
fdiv
lds
xor
and
call
inc
sbb
inc
jmp
mov
nop
aas
dec
lods
inc
add
es
jl
iret
daa
into
stc
cmc
iret
sbb
sbb
push
inc
cmp
cmp
daa
xor
mov
dec
add
inc
inc
sbb
xchg
add
popf
sub
pop
ins
and
mov
ret
or
mov
ret
pop
repz
add
mov
add
add
jmp
and
or
adc
and
adc
loopne
add
fist
mov
cld
loop
int
or
cmc
dec
add
sub
nop
rol
mov
push
sub
ror
out
xor
xor
xor
les
and
push
add
dec
add
push
dec
icebp
(bad)
push
fidiv
stos
inc
adc
pop
jae
xor
add
cld
or
lds
ret
inc
add
xchg
or
mov
push
fdiv
mov
pop
add
nop
inc
inc
add
(bad)
adc
loopne
mov
push
sub
inc
mov
popf
pop
push
pop
pop
or
xchg
shl
or
cmp
sub
xchg
adc
fldenv
std
add
clc
movs
xchg
(bad)
and
sub
add
inc
pop
jae
add
enter
or
cmp
mov
adc
int
shl
(bad)
cmp
js
mov
or
in
shl
add
dec
adc
or
shr
or
cmp
pop
cmp
ret
adc
and
je
inc
sets
add
enter
inc
and
and
inc
add
sar
adc
loopne
inc
or
jno
add
dec
lock
or
push
xor
cmp
or
or
xor
adc
pop
adc
movs
inc
or
nop
add
xor
adc
inc
adc
nop
mov
arpl
les
adc
ret
adc
ins
jo
daa
fadd
push
and
sbb
lahf
and
or
inc
sbb
nop
xor
jo
xor
ror
and
pop
(bad)
loope
inc
sbb
mov
adc
cmp
xchg
lock
cmp
jo
mov
and
sbb
and
inc
and
mov
sub
pop
ss
test
xchg
ficomp
mov
xchg
mov
pop
dec
cwde
(bad)
daa
jo
mov
loopne
sbb
inc
inc
inc
sub
push
pop
nop
add
jp
xchg
inc
xchg
and
sub
adc
cmc
sub
mov
(bad)
into
jmp
enter
dec
(bad)
shl
or
adc
adc
xchg
fwait
inc
sbb
inc
adc
sbb
add
fs
loop
add
inc
add
xor
pop
xchg
adc
or
add
bound
or
inc
test
xchg
sbb
add
adc
pusha
out
retf
and
aam
cmc
pushf
or
dec
push
test
nop
loop
adc
adc
push
adc
dec
outs
or
nop
add
shl
sub
inc
adc
add
mov
movs
mulps
dec
addr16
xor
cmp
imul
mov
clc
jmp
pavgb
or
add
stc
add
or
inc
sub
add
add
sbb
add
inc
dec
sbb
bswap
aas
sbb
sub
mov
cwde
test
cmp
and
fmul
mov
ror
inc
xchg
mov
adc
pop
and
mov
loopne
movs
dec
or
inc
add
dec
xor
aas
pop
or
inc
add
mov
inc
mov
bound
lods
adc
bound
pop
outs
add
mov
dec
mov
rol
push
fs
inc
(bad)
loopne
stos
ins
pop
sbb
push
pop
cmp
xor
inc
xor
adc
rcr
lahf
cld
add
aad
sahf
xchg
jl
inc
sub
ins
ret
jmp
pop
outs
pop
inc
inc
xor
sub
add
or
mov
fistp
push
stos
pop
cs
test
push
or
xchg
shl
lock
and
xor
ret
jbe
and
cmps
and
ror
sub
js
enter
test
shl
clc
and
sub
std
push
inc
dec
(bad)
cld
xchg
inc
sbb
dec
mov
xor
pop
mov
and
add
dec
cmp
enter
stc
and
or
in
add
or
comiss
rol
ret
sub
inc
xor
add
sub
inc
pop
or
or
xor
rol
aas
push
and
int3
aaa
dec
add
xor
stc
iret
pop
call
icebp
mov
adc
jl
sbb
lea
test
add
ins
xor
add
jae
add
mov
bound
push
nop
hlt
sub
rcl
jo
add
adc
cmp
test
cmps
ss
xchg
xchg
or
lods
inc
add
imul
stc
add
or
inc
sub
add
add
sbb
add
inc
(bad)
std
jnp
lds
pop
enter
xchg
adc
add
pop
adc
je
push
pop
mov
and
mov
mov
dec
mov
add
xchg
shl
retf
xor
dec
stos
outs
xor
fs
inc
jmp
rol
pop
inc
or
adc
add
add
mov
xchg
aad
pop
sub
test
or
bound
add
call
fs
imul
jecxz
loop
popf
add
or
sub
push
cmp
add
test
add
or
mov
xor
add
daa
aad
pop
add
cld
push
repz
pop
push
inc
jb
add
adc
sbb
adc
pop
add
push
sbb
xchg
or
dec
push
push
inc
movs
jle
ins
sahf
test
js
call
and
adc
jmp
sub
inc
inc
sti
add
mov
iret
fwait
push
pop
adc
inc
out
jno
sbb
dec
lock
adc
dec
sub
xor
lock
repnz
sub
mov
ret
xor
push
and
cld
add
nop
ins
mov
sub
rcl
sub
xor
aas
jo
icebp
(bad)
aas
dec
lods
rol
add
add
jle
pop
pop
enter
addr16
inc
pop
iret
icebp
push
or
inc
ss
inc
inc
and
nop
aas
mov
add
inc
sub
xor
int3
(bad)
and
(bad)
fcom
xchg
add
mov
mov
push
push
or
cmp
add
je
adc
inc
jae
jmp
(bad)
pop
je
sbb
and
inc
adc
jp
adc
cmp
das
or
add
pop
stc
iret
xor
jbe
pop
mov
jecxz
add
sub
mov
call
mov
lock
jl
inc
mov
and
mov
push
and
rol
mov
lock
push
mov
adc
das
dec
mov
add
stc
add
or
inc
sub
add
add
sbb
add
std
repz
push
mov
sub
mov
push
cld
mov
mov
push
enter
das
pop
(bad)
pop
xchg
and
dec
pop
mov
push
sub
mov
inc
ror
test
mov
add
fmul
xchg
jmp
cmp
leave
aam
or
or
inc
mov
lock
add
adc
rol
add
xchg
dec
xchg
mov
inc
sbb
ins
into
or
pop
bound
inc
xchg
test
push
xlat
outs
retf
mov
jmp
ins
cmp
ins
mov
sub
xor
pop
sbb
lahf
push
shl
into
add
xchg
add
test
inc
sar
push
xchg
xor
scas
outs
xchg
dec
mov
or
or
pop
mov
and
mov
xor
movs
adc
sub
lods
add
movs
inc
cmps
jg
or
adc
shl
sbb
daa
popa
xchg
clc
lea
daa
daa
cmc
or
add
popf
ja
sbb
dec
and
sbb
mov
xor
dec
sub
nop
adc
dec
add
add
and
sub
arpl
aas
ins
pop
icebp
dec
add
mov
ret
fadd
mov
adc
adc
sbb
mov
or
mov
inc
(bad)
push
dec
and
inc
(bad)
jmp
add
arpl
dec
fs
aas
mov
and
(bad)
sbb
mov
dec
adc
jl
arpl
sub
pop
or
xchg
push
stc
stc
inc
pop
push
mov
dec
xchg
mov
sbb
add
add
rol
sbb
or
fbstp
dec
push
test
and
push
dec
inc
mov
add
sbb
test
add
ins
lock
xor
and
test
iret
add
(bad)
in
mov
imul
mov
and
add
or
inc
sub
add
add
sbb
add
inc
dec
sbb
bswap
aas
sbb
sub
mov
cwde
test
cmp
and
fmul
mov
ror
inc
xchg
mov
adc
pop
and
mov
loopne
movs
dec
or
inc
add
dec
xor
aas
pop
or
inc
add
mov
inc
mov
bound
lods
adc
bound
pop
outs
add
mov
dec
mov
rol
push
fs
inc
(bad)
loopne
stos
ins
pop
sbb
push
pop
cmp
xor
inc
xor
adc
rcr
lahf
cld
add
aad
sahf
xchg
jl
inc
sub
ins
ret
jmp
pop
outs
pop
inc
inc
xor
sub
add
or
mov
fistp
push
stos
pop
cs
test
push
or
xchg
shl
lock
and
xor
ret
jbe
and
cmps
and
ror
sub
js
enter
test
shl
clc
and
sub
std
add
(bad)
cld
xchg
inc
sbb
dec
mov
xor
pop
mov
and
add
dec
cmp
enter
adc
loope
or
in
add
or
comiss
rol
and
xor
ret
and
fimul
iret
mov
pusha
rol
sub
rcr
call
test
sub
clc
(bad)
sbb
shl
sbb
and
test
shl
inc
add
jl
(bad)
adc
shl
pop
mov
test
loop
bound
hlt
sar
jl
and
je
adc
lahf
or
popa
push
adc
and
add
xchg
sub
fild
or
loop
(bad)
mov
iret
adc
jl
popa
push
daa
and
mov
lock
mov
loop
ret
bound
or
(bad)
cmp
push
inc
add
stc
add
or
inc
sub
add
add
sbb
add
inc
(bad)
std
jnp
lds
pop
enter
xchg
adc
add
pop
adc
je
push
pop
mov
and
mov
mov
dec
mov
add
xchg
shl
retf
xor
dec
stos
outs
xor
fs
inc
jmp
rol
pop
inc
or
adc
add
add
mov
xchg
aad
pop
sub
test
or
bound
add
call
fs
imul
jecxz
loop
popf
add
or
sub
push
cmp
add
test
add
or
mov
xor
add
daa
aad
pop
add
cld
push
repz
pop
push
inc
jb
add
adc
sbb
adc
pop
add
push
sbb
xchg
or
dec
push
push
inc
movs
jle
ins
sahf
test
js
call
and
adc
jmp
sub
inc
inc
sti
add
mov
iret
fwait
push
pop
adc
inc
out
jno
sbb
dec
lock
adc
dec
sub
xor
lock
repnz
sub
mov
ret
xor
push
and
cld
add
nop
ins
mov
sub
rcl
sub
xchg
icebp
adc
jo
icebp
(bad)
aas
dec
lods
rol
add
add
jle
pop
pop
enter
addr16
inc
pop
iret
icebp
push
or
inc
ss
inc
dec
sub
sbb
add
dec
push
and
aas
mov
and
push
into
fsub
xchg
aad
ret
sbb
pop
sbb
sub
sub
mov
pop
call
test
inc
test
inc
adc
mov
rol
call
sbb
sar
push
rcr
push
mov
call
leave
lar
je
xchg
add
adc
add
sbb
or
retf
aas
into
mov
dec
cmp
push
push
imul
mov
add
stc
add
or
inc
sub
add
add
sbb
add
std
repz
push
mov
sub
mov
push
cld
mov
mov
push
enter
das
pop
(bad)
pop
xchg
and
dec
pop
mov
push
sub
mov
inc
ror
test
mov
add
fmul
xchg
jmp
cmp
leave
aam
or
or
inc
mov
lock
add
adc
rol
add
xchg
dec
xchg
mov
inc
sbb
ins
into
or
pop
bound
inc
xchg
test
push
xlat
outs
retf
mov
jmp
ins
cmp
ins
mov
sub
xor
pop
sbb
lahf
push
shl
into
add
xchg
add
test
inc
sar
push
xchg
xor
scas
outs
xchg
dec
mov
or
or
pop
mov
and
mov
xor
movs
adc
sub
lods
add
movs
inc
cmps
jg
or
adc
shl
sbb
daa
popa
xchg
clc
lea
daa
daa
cmc
or
add
popf
ja
sbb
dec
and
sbb
mov
xor
dec
sub
nop
adc
dec
add
add
and
sub
arpl
aas
ins
pop
icebp
dec
add
mov
ret
fadd
mov
adc
adc
sbb
mov
or
test
sbb
adc
xchg
add
jno
mov
inc
cmp
add
arpl
add
adc
int
push
cdq
jno
sbb
and
iret
daa
aaa
(bad)
push
add
ror
inc
xchg
dec
icebp
pop
sbb
add
inc
pop
push
mov
dec
xchg
mov
sbb
xchg
lds
add
xchg
or
(bad)
xor
add
pusha
inc
add
add
push
fs
rcr
nop
add
clc
mov
xchg
cdq
push
and
mov
test
mov
sub
and
push
jmp
or
inc
iret
push
pop
shl
mov
xchg
sar
movs
sbb
mov
and
adc
and
cmp
stos
out
mov
inc
add
add
add
mov
add
dec
add
xor
add
add
popa
xor
sbb
push
add
cld
xor
add
add
xor
add
inc
cmp
popa
xor
inc
fsubp
in
iret
mov
(bad)
in
pusha
pushf
xchg
dec
add
stc
scas
mov
les
(bad)
cli
dec
(bad)
not
ss
xchg
arpl
mov
xchg
gs
leave
mov
les
(bad)
stc
xor
cmc
jmp
in
in
pop
bound
retf
shl
repz
mov
imul
hlt
sti
movs
bound
call
inc
out
add
mov
add
xchg
add
call
shl
jb
lock
in
add
(bad)
in
hlt
gs
push
add
xchg
add
add
(bad)
pop
dec
add
dec
fiadd
(bad)
(bad)
add
stc
cmps
add
add
or
mov
out
(bad)
stc
add
stc
(bad)
lods
xchg
xor
stos
add
mov
leave
test
xlat
fsub
gs
sbb
cld
cld
mov
(bad)
sub
out
call
jo
enter
add
(bad)
popa
(bad)
mov
bound
or
stos
xor
add
mov
add
mov
out
fistp
add
lods
add
mov
icebp
cmc
cli
push
jp
in
push
(bad)
cld
ret
mov
sti
(bad)
nop
mov
cli
test
stos
cwde
mov
stos
adc
les
fimul
nop
dec
add
ret
in
pop
repnz
test
imul
fld
jecxz
sub
in
stc
(bad)
dec
add
(bad)
(bad)
std
sti
mov
sub
in
sbb
(bad)
test
fcmovbe
cmp
in
out
mov
cli
stos
or
mov
inc
mov
(bad)
imul
pop
(bad)
aad
jg
mov
scas
pop
cld
mov
fstp
std
(bad)
in
jmp
mov
(bad)
fld
ins
pop
faddp
adc
fcom
mov
(bad)
fisttp
(bad)
(bad)
cli
push
loopne
adc
sahf
adc
sti
push
fld
mov
push
xchg
xchg
cwde
mov
jp
cmps
retf
(bad)
jmp
jecxz
paddb
(bad)
sti
mov
(bad)
stc
pop
std
std
std
cmc
cmc
cmc
sahf
stos
ins
(bad)
rol
xchg
push
sbb
std
loopne
in
stos
add
in
mov
in
int3
adc
std
inc
call
call
jmp
sbb
out
add
cld
(bad)
aas
popf
mov
lock
jmp
push
or
mov
cld
std
cld
test
adc
int3
or
stos
or
movntq
out
daa
mov
cld
dec
dec
inc
call
or
mov
cld
test
icebp
mov
stc
mov
sti
hlt
add
sti
sti
stc
in
sti
xlat
or
das
das
clc
xlat
add
push
movs
or
into
or
stos
or
jmp
(bad)
div
clc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
or
add
or
mov
sar
or
adc
popa
inc
pop
push
add
dec
mov
inc
adc
sub
and
xchg
adc
inc
or
add
inc
mov
xor
lock
sub
mov
jp
(bad)
ret
xchg
mov
lock
shl
retf
push
loop
(bad)
cmp
add
bound
je
jecxz
es
or
adc
dec
mov
cmc
sbb
mov
add
push
fldenv
add
pop
sub
inc
push
sub
movs
nop
aad
add
mov
xor
inc
xor
xor
mov
loopne
loop
out
inc
push
and
fcomp
add
mov
test
add
ins
sub
out
loop
mov
ins
adc
add
imul
addr16
xchg
push
mov
adc
add
or
cwde
mov
adc
and
sahf
sub
retf
or
into
sahf
mov
(bad)
sbb
push
loope
cmps
leave
jmp
les
and
mov
(bad)
adc
push
push
dec
sub
and
inc
dec
mov
mov
push
adc
sub
fstp
jecxz
sbb
add
inc
sbb
arpl
lea
(bad)
add
mov
dec
loopne
or
leave
add
push
movs
ror
(bad)
inc
dec
mov
or
test
ror
xor
aam
and
loopne
inc
adc
add
ds
test
adc
xor
push
mov
pop
add
(bad)
dec
rol
push
lea
add
adc
and
or
or
mov
or
fs
or
sub
arpl
test
mov
test
dec
pop
cs
adc
or
data16
xor
or
mov
clc
add
or
test
add
shrd
mov
add
fs
add
lods
xor
mov
push
les
add
adc
and
jo
adc
pop
adc
pop
seto
pushf
mov
sbb
push
jl
ret
push
cmp
or
and
add
popf
adc
mov
outs
cmp
in
and
pop
add
xor
or
jae
mov
mov
and
xor
cmp
cmp
mov
add
xchg
mov
and
inc
xchg
das
rol
adc
mov
dec
inc
push
dec
adc
cld
dec
add
xlat
xor
or
test
inc
dec
and
xchg
mov
inc
(bad)
and
test
inc
pop
add
cmps
jno
or
push
adc
pusha
mov
pop
fdiv
inc
rol
mov
inc
add
xor
clc
popa
xchg
pusha
add
mov
push
fdiv
add
mov
add
or
cwde
fcom
pop
sbb
mov
dec
inc
adc
inc
add
push
cmp
leave
in
sar
dec
xor
jno
jno
add
xchg
daa
jo
and
adc
lahf
arpl
nop
jp
inc
adc
jp
fld
int3
fimul
test
ret
es
and
test
add
add
adc
jle
cs
nop
inc
retf
sub
xchg
sar
adc
push
xor
add
add
loopne
out
loopne
sbb
add
sub
or
sbb
and
aad
inc
retf
mov
pop
test
je
ror
call
ds
add
pop
add
inc
add
test
ss
ror
pop
or
test
inc
add
jo
sbb
add
mov
xchg
cdq
popa
or
in
xchg
mov
or
das
add
inc
jp
arpl
mov
mov
push
push
and
sbb
inc
sbb
test
mov
jbe
mov
mov
pusha
or
xchg
movs
mov
sub
mov
jo
(bad)
and
adc
sbb
shld
mov
add
inc
sbb
xchg
xchg
ins
sbb
xor
mov
inc
mov
push
sahf
scas
and
sbb
loopne
add
je
and
jbe
shl
mov
dec
push
sub
mov
pop
pop
cmp
adc
inc
adc
jo
sbb
and
test
dec
pushf
je
call
mov
js
and
rcr
xchg
inc
enter
pop
stos
dec
xor
and
outs
and
xor
pop
pop
cmps
sbb
gs
leave
shl
adc
lods
data16
scas
jmp
and
inc
cmp
rol
(bad)
pushf
mov
inc
push
call
das
retf
ja
ds
inc
add
xor
xor
rol
and
dec
jnp
dec
cdq
cmp
and
inc
sahf
xchg
xor
dec
or
bound
enter
mov
add
mov
gs
adc
and
aas
mov
mov
mov
pop
cmp
mov
in
dec
add
mov
sub
inc
fld
leave
ins
push
or
pop
(bad)
xor
lock
xchg
mov
cvtps2pi
shr
js
(bad)
mov
in
ja
rcr
xor
add
gs
jo
jno
jne
and
jl
inc
out
xlat
push
mov
dec
and
loop
xchg
fsub
setnp
adc
imul
inc
adc
pop
sbb
cmp
loop
out
cmp
jbe
pop
pop
adc
or
adc
and
inc
mov
mov
je
mov
je
adc
mov
pop
cmp
push
jl
push
dec
dec
and
sbb
pminsw
dec
and
mov
pop
out
dec
push
out
or
aam
xchg
xlat
and
fsub
add
and
rol
sub
loopne
adc
add
inc
fiadd
jmp
leave
add
jo
pop
clc
or
repnz
and
loopne
pop
cmp
sub
jo
fisub
push
or
add
add
sub
add
sbb
call
fldenv
adc
add
xchg
fsub
fadd
add
adc
adc
sbb
add
sub
add
hlt
add
add
add
stc
add
or
inc
sub
add
sub
adc
add
inc
dec
adc
inc
adc
enter
jg
xchg
xor
fsub
pop
stos
bound
xor
push
inc
or
xor
push
jp
mov
push
xor
add
push
mov
leave
sbb
inc
or
leave
adc
lea
das
adc
inc
cld
jmp
inc
mov
sbb
loopne
mov
nop
dec
fsub
repz
cli
sub
xlat
fwait
and
xor
bound
addr16
pop
cmp
and
jg
pushf
and
aas
addr16
add
js
inc
test
stos
loopne
shl
ret
sub
add
xor
push
enter
cmp
lods
sub
xchg
lods
shl
call
scas
sub
std
jnp
repnz
jmp
pop
and
repnz
int3
mov
cmp
add
fistp
les
popf
aas
bound
clc
into
fcom
sbb
push
mov
pop
inc
out
xor
adc
cmps
movs
inc
push
xchg
add
aad
jae
mov
sbb
push
mov
inc
add
cmc
out
and
bound
enter
bound
push
test
xchg
mov
push
inc
inc
add
xor
(bad)
mov
adc
push
inc
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
push
adc
or
sub
scas
shl
mov
loop
and
jp
lds
push
xchg
jg
adc
clc
mov
das
ds
jp
ins
leave
xor
add
add
and
mov
jmp
or
test
dec
inc
xchg
pop
ret
sahf
clc
mov
es
adc
mov
xchg
pusha
push
sub
ss
add
add
(bad)
pusha
dec
and
fwait
mov
(bad)
jl
call
xor
mov
dec
xchg
repnz
rol
stos
ins
dec
fwait
shl
mov
sub
mov
add
cld
stc
and
adc
add
dec
sub
mov
sub
xchg
inc
test
out
int
lahf
or
clc
inc
add
adc
ret
inc
stos
outs
(bad)
jl
mov
test
mov
loopne
xchg
push
scas
imul
or
mov
inc
loope
add
cs
mov
xchg
jmp
clc
pop
xor
sbb
js
xchg
cmp
cdq
ror
and
push
movs
ret
aas
push
adc
pop
es
arpl
or
ror
adc
sbb
arpl
add
add
or
inc
sub
add
add
add
add
inc
dec
cld
ja
mov
es
test
add
test
pop
into
js
mov
adc
inc
inc
mov
(bad)
ins
fsub
adc
pop
add
(bad)
and
mov
cmp
ror
ret
jecxz
inc
das
dec
mov
fst
dec
cmp
loopne
inc
xchg
sub
shl
(bad)
(bad)
sub
test
pushf
icebp
jl
outs
enter
(bad)
mov
inc
sbb
outs
fst
loop
push
inc
sbb
cmc
add
test
and
inc
enter
adc
retf
stos
xor
add
dec
shl
mov
cmp
enter
sbb
xchg
icebp
iret
sbb
sub
fs
cmp
push
push
dec
adc
loopne
jg
push
sahf
lea
add
mov
mov
or
retf
pop
push
rcr
jg
or
and
out
fdivr
jo
shl
out
pop
jp
xchg
dec
cld
jmp
mov
rol
aas
inc
mul
xchg
inc
inc
add
ror
xchg
add
and
add
or
inc
sub
add
push
add
add
or
add
or
scas
mov
mov
pop
add
or
adc
in
mov
mov
or
push
std
adc
dec
dec
enter
xchg
xchg
sbb
data16
call
inc
and
lock
ss
xchg
shl
dec
ret
pop
cld
adc
and
push
shl
pop
lahf
jg
scas
stc
dec
sub
xor
push
daa
xchg
pusha
js
int
mov
inc
adc
sub
cmp
test
cmp
xchg
add
dec
pop
add
adc
out
test
lahf
add
es
ror
lods
push
test
sahf
jno
enter
jmp
je
ret
daa
popa
inc
add
stc
add
or
inc
sub
add
push
add
add
or
add
or
(bad)
cmp
or
clc
call
xchg
sub
repz
mov
dec
xchg
les
inc
das
add
push
adc
dec
dec
js
imul
push
sub
(bad)
or
dec
or
cli
mov
pop
es
loopne
inc
or
mov
sbb
pop
or
adc
retf
jg
enter
mov
lods
inc
imul
dec
nop
mov
jg
call
popf
cmp
jmp
xor
call
aam
inc
and
ja
rcr
jo
xchg
rol
jno
xchg
sbb
mov
cwde
push
pop
fadd
xchg
dec
xchg
push
and
ja
nop
pop
data16
inc
sbb
imul
xchg
adc
and
add
or
inc
sub
add
push
add
add
or
add
or
scas
mov
mov
pop
add
or
xor
or
inc
lea
cmp
jb
add
mov
movs
or
icebp
outs
dec
adc
pushf
cwde
add
clc
mov
aas
pop
call
out
xor
add
lahf
test
and
or
jge
popa
js
int
inc
sbb
out
inc
xchg
xor
loope
(bad)
inc
(bad)
ds
nop
sbb
jg
and
dec
inc
sub
(bad)
pushf
mov
not
add
push
dec
sub
ror
es
and
mov
cmps
sbb
inc
adc
xor
or
xor
sbb
jecxz
pop
loopne
test
js
push
ret
add
cmp
jg
add
and
add
or
inc
sub
add
xor
sbb
add
inc
dec
cld
daa
inc
mov
or
sub
mov
dec
pop
nop
mov
pop
xchg
ret
xchg
and
dec
push
push
sub
movs
dec
pop
mov
scas
dec
retf
enter
lea
in
jg
mov
or
repnz
jl
les
xchg
adc
lock
lds
jl
stc
out
dec
and
cmps
cs
inc
inc
fldenv
dec
loope
jecxz
inc
or
mov
aaa
ds
adc
outs
jne
jb
icebp
das
test
and
cmp
xchg
adc
test
or
loop
push
enter
mov
cmp
mov
pop
push
jmp
push
repz
pop
or
call
outs
mov
call
popf
cmp
vpmacsswd
adc
pop
out
xor
call
xor
sar
xor
adc
jmp
dec
ret
xchg
inc
shl
jp
xchg
mov
add
js
and
dec
or
les
or
cld
adc
loopne
pop
ds
inc
fdiv
ret
adc
test
adc
out
(bad)
push
xchg
pop
jb
inc
add
sbb
jbe
and
popa
(bad)
aas
and
add
adc
pop
sbb
sbb
jmp
sub
ror
adc
cmp
push
jp
pop
xchg
xor
and
and
add
or
inc
sub
add
add
add
add
or
add
or
nop
loopne
add
push
test
sub
adc
xor
icebp
cdq
and
repnz
and
leave
addr16
or
xor
(bad)
or
mov
add
add
sub
or
jg
xor
adc
clc
jns
cmc
paddusw
xor
lods
in
adc
jl
mov
sbb
cmp
sub
sbb
mov
adc
jle
adc
iret
lds
sti
out
into
pop
and
loop
or
sbb
or
inc
sbb
dec
shl
and
in
sub
mov
sbb
jg
and
cwde
retf
xchg
jl
or
inc
adc
fild
jmp
and
or
sub
mov
sbb
cld
sub
enter
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
enter
ds
adc
xchg
and
clc
setle
jl
in
mov
sbb
ror
and
sbb
fldcw
add
dec
mov
sub
mov
cmp
dec
dec
adc
scas
cld
stc
and
xchg
mov
pusha
add
adc
hlt
add
and
movs
loope
sbb
or
xchg
cmp
xor
or
out
pop
sub
dec
cmp
mov
cmp
jno
mov
push
dec
or
xchg
sahf
(bad)
sti
inc
rol
out
adc
daa
sub
push
mov
mov
or
aam
mov
jns
test
into
add
fnstsw
pop
(bad)
(bad)
sub
gs
mov
dec
xor
rcl
aas
fistp
ret
lahf
das
adc
push
je
test
and
neg
pop
xchg
jg
mov
jne
mov
arpl
mov
mov
call
(bad)
xchg
das
rol
add
gs
cmp
jg
mov
dec
sbb
and
add
or
mov
lea
pop
adc
adc
sar
test
and
inc
xchg
int
xor
cmps
pusha
mov
or
adc
inc
cmp
sbb
add
stc
add
or
inc
sub
add
add
or
add
or
stos
loopne
or
sub
loope
pop
lea
hlt
add
xor
hlt
test
inc
pop
test
inc
fst
lea
pop
xchg
mov
inc
mov
add
inc
mov
add
ins
bnd
hlt
adc
sub
pop
pusha
mov
sbb
std
imul
dec
lahf
or
dec
adc
js
loopne
cmp
iret
pop
call
jo
or
pop
out
cli
inc
mov
and
(bad)
jl
add
inc
inc
jg
lods
stc
jp
add
cwde
push
std
mov
pop
push
das
or
mov
xor
int3
mov
jg
xchg
mov
adc
outs
(bad)
adc
xor
push
inc
popa
dec
rcr
and
inc
addr16
mov
pop
test
sbb
or
mov
retf
or
je
jmp
cli
int
clc
xor
scas
lahf
push
dec
js
int
sar
leave
jecxz
stc
pop
pop
sbb
in
jb
jecxz
ret
(bad)
xor
mov
sub
call
mov
cwde
and
in
and
push
stos
or
inc
out
test
pop
sub
mov
fsub
shr
push
mov
sub
test
xor
ficomp
xchg
mov
aas
out
inc
xchg
aas
push
mov
fs
push
inc
cdq
adc
dec
imul
and
and
add
or
inc
sub
add
add
or
add
or
scas
loopne
or
sub
popa
rol
mov
ret
sbb
jns
add
loopne
or
sub
mov
sar
xchg
jmp
in
xchg
fwait
dec
scas
xor
xchg
and
adc
inc
ret
mov
and
add
js
arpl
ins
nop
repnz
dec
add
and
and
pop
push
add
mov
fidivr
and
out
mov
xor
jmp
aas
xor
mov
push
and
popa
xchg
pop
je
add
add
add
popf
sbb
mov
push
aam
into
or
pop
xchg
sar
int3
fst
mov
imul
int3
inc
cmc
iret
call
add
push
jp
mov
(bad)
fs
call
stos
or
inc
mov
inc
cld
or
rcr
(bad)
(bad)
or
add
into
or
popa
test
mov
add
xor
add
xchg
xor
and
jo
pop
xlat
mov
or
mov
or
les
add
add
adc
add
lea
js
aas
xor
mov
and
inc
into
and
les
cld
push
dec
or
xor
inc
inc
mov
and
mov
adc
shl
test
movs
or
jo
dec
sar
dec
or
adc
or
add
or
xchg
cmp
nop
or
arpl
and
aam
aas
mov
call
add
cmp
retf
and
ror
je
rol
fcmovbe
push
retf
or
les
adc
enter
call
repz
sbb
sub
cmp
rol
mov
loope
and
adc
inc
xchg
js
in
cwde
call
or
and
test
xchg
ret
je
enter
and
retf
leave
inc
add
jb
pop
jmp
mov
mov
shr
mov
inc
outs
inc
push
rcl
inc
aaa
pop
movs
xchg
clc
push
adc
inc
push
cwde
pop
push
adc
daa
lods
lock
xchg
(bad)
cli
dec
movs
or
inc
(bad)
retf
and
or
inc
(bad)
ffree
sbb
add
stc
add
or
inc
sub
add
add
or
add
or
test
mov
pop
enter
xor
mov
int3
ror
xor
sub
inc
xchg
fistp
cmp
jmp
pop
mov
mov
mov
cwde
or
imul
inc
and
loope
je
and
fiadd
lds
mov
inc
sbb
int3
js
(bad)
shl
or
mov
mov
pusha
pop
jecxz
loope
mov
cld
jns
inc
jecxz
pop
xor
call
push
inc
inc
push
pop
ret
inc
pop
data16
inc
xchg
and
enter
or
jnp
dec
cwde
jmp
jge
inc
loopne
sbb
or
aaa
arpl
(bad)
enter
xchg
dec
mov
push
hlt
iret
push
mov
adc
push
and
mov
add
ds
inc
sbb
cwde
xchg
les
sub
jmp
cmp
dec
mov
rcl
fnsetpm(287
in
or
adc
les
mov
rcr
iret
inc
sub
mov
les
cld
repz
popa
add
ret
dec
adc
enter
inc
aam
sahf
inc
call
adc
mov
xchg
add
xor
aam
aas
inc
or
xor
rcr
push
test
popf
mov
inc
mov
mov
xor
mov
dec
adc
xchg
and
or
pop
inc
movs
inc
les
add
pop
jmp
xchg
leave
push
sub
std
and
cs
sub
inc
or
xchg
call
inc
cli
(bad)
jge
ror
cmp
test
dec
or
pusha
and
scas
sbb
dec
ds
pop
xor
add
push
jge
sar
mov
loop
sbb
pop
ret
aad
retf
aas
push
stos
shr
add
add
add
outs
jb
iret
or
adc
mov
rcl
add
out
pop
fwait
push
aaa
mov
jecxz
mov
adc
and
scas
inc
sbb
cmp
and
mov
push
cmp
add
adc
cli
mov
cmp
mov
add
add
stc
add
or
inc
sub
add
add
or
add
or
scas
mov
sub
popa
inc
adc
or
mov
shl
add
mov
add
xchg
daa
ror
xlat
iret
retf
mov
xor
cmovns
mov
fisttp
cli
ins
adc
mov
sbb
mov
icebp
inc
mov
sbb
cmovns
aad
shl
dec
int
pop
ret
xchg
test
imul
add
(bad)
sub
pop
mov
sub
pop
add
xor
sbb
fcmovnbe
inc
les
mov
aad
sbb
xchg
mov
loopne
push
les
cdq
loope
add
imul
push
push
lods
xlat
ficom
repnz
push
das
sub
lock
aas
or
mov
sub
(bad)
addr16
jae
out
sar
sbb
hlt
or
cmp
out
sub
lock
shl
or
test
ret
sbb
push
les
or
movs
pop
sahf
jnp
mov
dec
inc
rcl
push
inc
cld
xchg
shl
add
xchg
jno
jno
and
test
ds
mov
loopne
inc
daa
daa
or
fld
aas
je
jb
inc
sbb
and
xor
aam
sbb
add
and
xor
aas
cwde
cmp
inc
pop
inc
inc
loop
or
and
sub
pop
sbb
inc
inc
or
inc
xor
inc
loop
jns
call
or
lea
or
rol
cld
mov
hlt
add
pop
aam
mov
or
and
mov
inc
outs
push
mov
stos
test
aam
add
add
stc
add
or
inc
sub
add
add
or
add
or
test
mov
pop
enter
xor
mov
int3
ror
xor
sub
inc
xchg
fistp
cmp
push
push
hlt
(bad)
mov
mov
fldenv
dec
mov
test
jmp
outs
mov
ret
daa
(bad)
rcr
sub
into
mov
inc
xor
jmp
xlat
inc
pushf
arpl
add
sar
push
pop
xchg
sub
out
pusha
cwde
mov
sbb
and
ret
pop
or
lock
call
les
adc
scas
inc
xor
out
mov
jg
mov
fild
jb
adc
mov
repnz
cmp
mov
movs
sbb
test
mov
popf
std
mov
jg
mov
ja
sar
or
push
cmps
movs
inc
pop
pop
inc
and
in
enter
fwait
jne
scas
(bad)
cmp
fsubr
sar
push
loop
add
js
cmps
sub
mov
or
adc
add
jp
push
mov
icebp
movups
sub
jb
push
fld
pusha
jae
or
adc
aam
cmp
xchg
rcl
pop
movs
or
xchg
clc
rcl
mov
push
cvtps2pi
nop
add
cs
and
sbb
cwde
clc
(bad)
das
or
lds
adc
mov
nop
jno
leave
push
add
dec
add
cmp
mov
jmp
inc
dec
xor
pop
jno
loope
add
pop
add
icebp
aad
addr16
mov
jl
mov
add
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
iret
adc
sbb
cmps
rol
sbb
and
hlt
inc
jo
mov
xchg
repz
inc
cmp
mov
aas
dec
sbb
or
and
mov
add
and
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
mov
fldcw
xchg
in
inc
jo
sbb
clc
cmps
cmps
sar
call
(bad)
dec
repz
loop
mov
add
or
inc
sub
add
sbb
sldt
or
inc
adc
enter
and
pop
idiv
xlat
stos
fadd
pop
dec
test
nop
icebp
out
inc
les
mov
push
ds
dec
mov
and
loop
movs
inc
arpl
js
push
push
pusha
test
into
pushf
leave
call
and
out
adc
stos
cmps
mov
adc
lahf
lods
jg
pushf
and
mov
adc
push
and
pushf
aad
cli
das
add
stos
les
xchg
test
clc
inc
scas
dec
adc
push
sahf
jg
stos
inc
mov
pop
xchg
pop
jge
nop
jle
and
lds
aas
stos
in
cmp
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
push
adc
or
sub
scas
shl
mov
bound
(bad)
ds
xchg
jg
adc
clc
mov
sbb
int3
inc
jecxz
or
and
sub
inc
mov
imul
pop
test
mov
adc
or
push
adc
or
fs
xor
imul
dec
push
xchg
and
aas
sbb
sub
mov
fsub
out
add
mov
sub
aas
add
cwde
fisub
adc
leave
leave
pop
and
repz
mov
xor
or
in
add
cld
jnp
stc
and
add
loop
test
or
call
fs
pop
fidivr
(bad)
mov
inc
(bad)
nop
sub
add
test
daa
pop
push
mov
mov
pusha
dec
lock
int3
aas
adc
pop
outs
sbb
popf
in
sbb
sub
sar
mov
sbb
adc
inc
add
xchg
pop
jp
nop
test
idiv
adc
or
out
fiadd
add
and
add
or
inc
sub
add
add
or
add
std
fwait
cmc
dec
pop
mov
adc
mov
ret
jg
push
dec
pushf
dec
shl
pusha
adc
adc
loope
shl
sar
test
and
pop
inc
in
adc
and
jmp
mov
xchg
adc
lock
out
loop
pop
retf
jmp
daa
jo
pop
cwde
mov
pusha
jb
sti
test
mov
sub
and
sbb
xor
test
outs
push
in
add
sub
mov
pushf
rol
pop
mov
push
push
pusha
cs
(bad)
cmp
xchg
loope
(bad)
sub
xchg
push
pop
mov
and
mov
shl
(bad)
sub
clc
in
and
or
int3
mov
cmp
xor
adc
or
repz
cmp
xor
test
lods
mov
pop
dec
push
hlt
mul
or
jg
jb
sub
xchg
popf
jg
cwde
inc
pushf
xor
es
xchg
les
cwde
repz
pop
or
vpmacssdqh
hlt
les
adc
xchg
xor
ins
mov
and
sbb
ror
repz
test
or
add
cli
popf
xor
sbb
ins
popa
xchg
or
mov
cli
inc
adc
daa
sub
mov
mov
test
enter
add
test
mov
mov
adc
imul
adc
push
lods
ror
lds
jae
adc
cwde
and
xor
shl
je
or
fadd
sahf
ror
call
inc
pop
out
add
dec
ss
imul
sub
push
dec
inc
sbb
inc
sahf
inc
or
adc
(bad)
fisubr
ret
or
push
sar
enter
add
inc
pop
mov
sbb
mov
mov
pop
pop
add
adc
dec
test
xchg
or
es
add
mov
icebp
(bad)
mov
adc
enter
adc
jmp
cmp
fstp
mov
adc
rol
and
and
add
or
inc
sub
add
add
or
add
or
inc
enterw
(bad)
stc
adc
mov
ret
xchg
and
imul
adc
and
mov
(bad)
(bad)
pop
xchg
sbb
movs
adc
mov
pop
enter
stc
jae
inc
dec
and
jbe
adc
sbb
add
sub
shl
add
cwde
adc
js
xchg
imul
stos
jmp
mov
gs
ror
fadd
in
sar
sub
and
xchg
xor
mov
lea
shr
inc
add
test
add
mov
sbb
mov
das
movs
push
or
aad
push
sub
fwait
mov
push
fst
js
mov
or
jp
bound
std
iret
xchg
jmp
mov
inc
int3
xchg
jl
mov
adc
and
test
mov
shl
xchg
adc
pop
(bad)
fwait
arpl
jb
rol
adc
and
mov
(bad)
jecxz
pop
mov
sub
xor
inc
mov
inc
sbb
int
fsubr
xor
jo
sub
push
pusha
or
or
mov
mov
push
cmp
(bad)
pop
inc
or
ret
push
push
cmp
test
mov
or
test
inc
adc
inc
xor
fnsave
jmp
ror
aas
cmp
adc
int3
adc
dec
sbb
pop
adc
or
dec
pushf
and
and
inc
push
ins
push
in
add
ret
sbb
mov
cmps
add
mov
ror
dec
add
retf
xor
aas
jl
add
jae
adc
mov
sub
aam
dec
sub
stos
push
cmps
dec
pusha
jo
movs
or
and
call
(bad)
les
lds
xchg
retf
push
push
dec
jo
adc
mov
push
sub
and
je
dec
in
inc
addr16
mov
mov
jmp
out
sbb
add
add
or
inc
sub
add
add
or
add
or
scas
mov
sub
and
adc
push
je
mov
inc
test
and
cli
(bad)
in
(bad)
mov
or
mov
sbb
mov
and
mov
popf
push
call
loopne
add
dec
or
addr16
cdq
add
fdivr
or
adc
sub
or
pusha
arpl
sahf
push
add
add
sti
retf
push
xchg
nop
fwait
mov
or
popf
cli
mov
les
aad
pop
cs
arpl
sub
pusha
pop
dec
jl
(bad)
jp
fild
test
cmc
push
cmp
xchg
jb
getsec
dec
add
mov
add
test
push
les
mov
inc
xchg
jae
push
ss
movs
int
jg
mov
cld
pusha
je
bound
mov
test
retf
cmp
shl
mov
icebp
mov
fnstenv
mov
out
or
data16
or
dec
add
nop
inc
sbb
xor
js
cmp
xchg
xchg
xchg
jae
cmp
inc
sub
arpl
adc
xor
icebp
iret
push
add
lock
or
adc
inc
adc
ins
or
adc
sub
pop
repnz
adc
mov
add
cmp
inc
inc
pop
mov
jge
repz
and
jmp
pop
push
enter
and
(bad)
or
sbb
adc
add
pushf
mov
ret
pop
inc
or
loopne
adc
dec
and
mov
or
inc
and
je
cmps
inc
bound
add
xor
inc
adc
test
mov
adc
cld
and
mov
add
je
dec
pop
call
addr16
xchg
pop
les
repz
add
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
cmp
mov
lea
rol
adc
xor
xchg
pop
imul
cmp
push
sbb
mov
mov
fimul
sub
mov
inc
movs
test
push
inc
push
movs
int3
pop
add
xlat
inc
pop
cmp
retf
iret
lahf
rdmsr
scas
(bad)
popf
nop
(bad)
movs
or
pop
xchg
and
mov
mov
inc
adc
test
inc
mov
sub
lock
xchg
jmp
iret
fadd
sbb
ds
loopne
cmp
xor
sbb
inc
les
xchg
bound
xchg
or
or
xchg
sbb
push
(bad)
push
clc
push
or
(bad)
popa
cmp
xchg
lds
jbe
inc
cld
cs
stc
push
adc
mov
cld
xor
bswap
mov
rcl
cmp
cld
cld
inc
imul
sbb
mov
mov
enter
adc
sub
sub
sti
sti
add
jecxz
pop
inc
cld
pop
loopne
xchg
test
inc
xchg
xor
adc
push
daa
and
push
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
or
and
or
popf
xor
ins
in
jp
add
fsub
ins
inc
mov
arpl
into
pop
retf
popa
inc
adc
push
ss
xor
mov
fsub
cmp
sbb
repnz
scas
jg
sbb
sub
push
ss
not
popa
test
push
sbb
data16
or
dec
add
cmp
(bad)
sbb
popa
outs
dec
adc
jne
imul
pusha
lahf
sub
and
xchg
pushf
and
repnz
jmp
jmp
push
sub
(bad)
sbb
(bad)
jg
cmp
push
push
retf
ds
mov
pop
sub
dec
call
adc
inc
or
sbb
sbb
mov
popa
scas
lds
pop
adc
add
or
test
repz
jg
lahf
ja
and
out
stc
mov
pop
sbb
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
arpl
cmp
push
sub
inc
adc
and
rcr
sub
lock
cli
fnstsw
push
and
add
out
adc
push
push
pop
sbb
into
push
cli
xchg
loope
pop
push
or
les
ins
xchg
daa
ret
icebp
pop
add
sbb
adc
and
pop
xor
mov
lock
mov
add
std
sti
jecxz
pop
mov
mov
mov
dec
inc
push
(bad)
pop
mov
rcr
(bad)
and
sub
add
clc
pop
push
lahf
inc
jge
xchg
sbb
sbb
dec
(bad)
icebp
adc
ret
aas
or
prefetch
or
pop
cmp
adc
adc
xchg
adc
repnz
stc
addr16
sahf
pop
pop
pop
adc
loop
shr
imul
mov
clc
or
aam
or
and
iret
std
dec
inc
lahf
and
iret
mov
call
lahf
jle
jb
inc
or
pusha
daa
push
jae
push
fs
add
add
stc
add
or
inc
sub
add
add
add
add
rol
dec
cld
cmps
imul
fst
test
and
or
inc
enter
jmp
mov
imul
or
mov
mov
xor
mov
jp
add
cwde
push
std
mov
mov
xor
cld
cmp
outs
add
shl
mov
push
ins
add
jmp
dec
sub
adc
shr
adc
xchg
mov
cmp
ins
stos
sti
scas
fisttp
adc
lahf
add
(bad)
jae
xor
inc
sbb
and
add
push
or
test
stos
push
sub
scas
and
add
add
or
inc
sub
add
add
add
add
mov
dec
sbb
lock
rol
or
mov
push
dec
icebp
mov
lods
mov
push
add
xchg
or
add
test
call
add
and
and
test
repnz
or
(bad)
clc
pop
adc
pusha
push
into
add
or
xor
and
mov
mov
addr16
lods
mov
xor
mov
icebp
xchg
sar
call
(bad)
cld
or
and
daa
dec
inc
push
push
call
add
in
or
push
or
and
add
or
inc
sub
add
sbb
adc
add
mov
dec
adc
scas
shl
clc
inc
ret
ret
add
push
mov
das
pop
cmp
cmp
pop
or
repz
inc
dec
call
ret
sbb
cmps
or
pop
xor
clc
out
fist
popa
xor
sub
out
fbstp
addr16
loopne
aam
das
mov
sbb
xor
pop
je
push
iret
cwde
xor
and
jg
jmp
dec
mov
or
mov
inc
ins
addr16
jae
inc
xchg
mov
push
and
or
fsub
pop
mov
fdiv
out
add
test
rcr
loope
into
or
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
push
mov
and
lock
xor
add
mov
hlt
mov
add
loop
xchg
dec
clc
add
push
cwde
shr
pushf
and
xlat
mov
daa
scas
and
mov
sti
xchg
jmp
cmps
xlat
scas
mov
jno
sar
stos
jbe
test
push
add
aam
je
into
aas
cmp
or
xlat
or
inc
jge
push
cld
xor
pop
pop
lea
pop
mov
jnp
adc
aad
xchg
frstor
repz
in
lock
push
sbb
test
sbb
rcr
inc
or
or
nop
sbb
dec
add
fimul
mov
inc
dec
xchg
push
hlt
jmp
mov
ret
jns
add
add
pop
idiv
mov
scas
dec
sbb
out
cwde
mov
test
cmp
add
and
add
or
inc
sub
add
add
add
add
or
add
or
lock
rol
jo
stos
jg
cld
xor
or
mov
pop
pop
test
rcr
push
fmul
xchg
stos
adc
stc
out
jecxz
inc
outs
outs
fadd
add
xchg
xchg
(bad)
data16
out
lahf
cs
jbe
lds
test
push
call
lahf
jg
cmp
sbb
jo
inc
push
call
mov
mov
adc
mov
mov
test
or
and
les
push
ins
sub
mov
stos
in
cwde
pushf
icebp
movs
loope
sbb
dec
add
push
jbe
loopne
inc
addr16
sti
outs
call
mov
jmp
sub
loop
or
es
inc
mov
repz
xor
sub
je
fcomp
xlat
add
stc
inc
inc
data16
jo
pushf
loopne
xlat
jno
cmp
test
pusha
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
push
adc
inc
loop
loope
jp
push
(bad)
jno
rcr
aas
jo
mov
push
popa
xchg
inc
sbb
xor
mov
je
jl
cld
es
fist
mov
inc
jge
mov
xor
or
mov
sub
gs
movs
rcl
xchg
xor
iret
dec
sub
pop
pusha
adc
(bad)
loop
mov
in
in
dec
mov
call
pushf
jnp
mov
and
dec
mov
inc
add
pop
inc
addr16
ds
dec
sbb
lahf
and
inc
push
and
inc
xchg
and
fnstenv
or
fisub
or
ret
in
mov
les
arpl
ins
or
repz
xchg
inc
or
ins
dec
push
cmps
sub
sahf
dec
push
mov
ja
arpl
js
setg
shr
push
retf
cmp
fimul
push
add
and
add
or
inc
sub
add
add
add
add
or
add
or
xor
retf
and
loopne
enter
or
test
(bad)
aad
aad
adc
pop
mov
movs
or
sbb
and
lds
pushf
or
mov
add
xchg
repz
push
push
outs
cli
jmp
in
leave
mov
or
push
pushf
jg
inc
mov
fs
into
cld
mov
pop
dec
add
fsub
jl
jge
inc
dec
sbb
push
idiv
in
pop
xlat
int3
or
add
call
and
(bad)
xchg
rcr
xchg
pop
nop
and
xor
leave
push
jnp
repz
or
pop
lea
jne
and
pop
cmp
std
scas
fwait
in
stos
mov
clc
inc
aas
push
add
add
add
add
add
dec
add
sbb
add
add
add
popa
xor
sbb
sbb
add
ins
je
add
sbb
add
inc
cmp
popa
add
add
inc
cld
std
std
(bad)
rol
(bad)
aad
(bad)
in
rol
or
add
dec
fld
in
add
cmps
add
sbb
mul
(bad)
cmp
fadd
jmp
das
(bad)
loope
mov
mov
inc
(bad)
mov
into
push
(bad)
(bad)
adc
xchg
push
xchg
sub
mov
mov
add
xchg
mov
add
lods
add
psubsw
call
cld
ret
(bad)
inc
cli
mov
jmp
in
ss
inc
stc
test
push
add
jmp
mov
ins
std
aam
(bad)
clc
add
in
add
mov
(bad)
hlt
add
lock
xchg
add
jmp
add
sbb
js
(bad)
cld
pop
(bad)
out
add
(bad)
and
mov
mov
pop
jmp
loope
(bad)
sti
(bad)
(bad)
(bad)
sub
mov
pushf
or
test
dec
add
cld
inc
pushf
push
add
cmps
or
loop
(bad)
push
(bad)
out
ins
mov
pop
hlt
repnz
std
aad
cld
mov
(bad)
inc
(bad)
repz
cld
add
aam
out
int3
std
stos
add
icebp
lods
add
mov
fwait
bound
pop
add
stos
xchg
add
jmp
add
rol
les
xlat
(bad)
lods
aaa
xor
icebp
mov
int3
cmps
push
int
mov
push
push
mov
inc
loope
add
movs
jbe
mov
cli
mov
icebp
ret
add
iret
(bad)
add
lds
int
xchg
cdq
pop
or
retf
mov
(bad)
stc
push
(bad)
in
jmp
enter
or
stc
stc
loopne
or
out
add
hlt
add
(bad)
std
fld
jge
inc
add
mov
std
leave
add
enter
add
mov
add
add
retf
add
add
(bad)
add
scas
xchg
stc
loope
movs
ins
pop
jmp
add
leave
add
in
(bad)
fadd
(bad)
jecxz
(bad)
jmp
stc
mov
stc
mov
loop
or
lds
jmp
(bad)
add
ret
add
enter
out
push
add
in
push
add
les
std
retf
add
mov
cld
leave
push
std
mov
out
or
into
add
in
add
sub
mov
inc
paddb
sti
call
push
add
or
shr
div
(bad)
jmp
push
or
retf
inc
mov
mov
sub
cdq
xor
add
fcom
jmp
(bad)
(bad)
jmp
mov
hlt
(bad)
or
int3
or
aad
sar
cli
in
add
loope
stc
loop
inc
add
mov
loope
and
fadd
(bad)
stc
add
sti
add
xor
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
add
add
add
add
or
add
or
mov
inc
jg
mov
mov
push
nop
push
into
adc
mov
and
pop
mov
inc
mov
jb
test
inc
test
sbb
inc
inc
hlt
mov
imul
(bad)
add
adc
xor
and
adc
sub
sub
mov
add
outs
shl
(bad)
(bad)
mov
inc
and
repnz
mov
jecxz
in
or
add
stos
ret
xchg
rcr
push
repnz
dec
ror
mov
and
inc
xchg
add
add
jp
jno
adc
jno
or
xor
push
fstp
mov
dec
sahf
or
lods
pop
rol
stos
xchg
add
add
pushf
adc
pusha
loopne
(bad)
or
mov
mov
and
call
rcl
and
bswap
leave
cli
jno
cmp
sbb
push
pop
je
loopne
adc
sub
pop
shrd
retf
or
retf
fsub
xchg
inc
or
rol
adc
push
cld
loopne
jg
add
or
push
int3
mov
or
inc
add
jl
add
xor
mov
adc
loope
sub
rol
xor
push
push
and
jns
pushf
loop
add
add
sub
adc
or
loope
xchg
push
xor
or
sub
cmp
pusha
jle
mov
add
mov
add
and
or
hlt
add
add
dec
xchg
gs
mov
jmp
cmps
enter
jae
or
mov
fimul
in
or
sub
mov
nop
es
enter
and
xor
jmp
xor
cmp
arpl
or
and
xor
lahf
adc
adc
dec
setbe
and
rol
xchg
icebp
stos
and
sbb
mov
push
cs
adc
push
add
cmp
jo
mov
and
add
inc
push
push
ret
adc
add
inc
sbb
hlt
mov
and
clc
repz
or
or
movs
adc
mov
mov
xor
sub
cwde
and
xor
pop
das
clc
xor
cli
xchg
xor
add
dec
fs
add
not
add
or
push
xor
lods
adc
lods
mov
push
out
or
mov
sub
sbb
and
pop
scas
add
ret
inc
fcom
out
xor
push
add
sub
aam
and
cmp
dec
mov
and
add
ins
add
inc
sbb
loopne
mov
int3
arpl
ds
fucomi
add
imul
pop
loop
and
pop
xchg
or
shr
sbb
mov
push
dec
mov
pop
out
inc
adc
pop
and
pop
aam
add
push
loop
loopne
cmp
push
or
xor
sbb
add
ins
clc
xor
jne
clc
enter
adc
arpl
aam
jbe
sbb
mov
fdivrp
test
or
sub
sbb
mov
es
daa
jg
adc
cmp
aas
jge
arpl
inc
or
inc
ss
push
pop
cli
or
cmp
dec
dec
nop
syscall
test
sub
adc
cmp
mov
adc
sbb
inc
push
add
pop
es
sahf
(bad)
push
and
and
shl
loopne
ds
or
lods
adc
xor
push
jo
add
mov
push
sub
xor
sub
dec
jno
popa
add
js
mov
and
jl
inc
sub
or
and
jo
sbb
fadd
xor
sub
xor
mov
dec
test
or
nop
push
adc
and
add
xchg
add
inc
stos
push
push
mov
sbb
(bad)
pop
shl
aam
add
inc
add
nop
add
cmp
and
or
fld
inc
test
leave
es
push
pop
stos
and
push
mov
push
xor
adc
pusha
pop
adc
and
xor
pop
adc
nop
pcmpeqd
mov
adc
lahf
pop
retf
mov
push
pop
dec
adc
add
lock
sub
loopne
push
add
pusha
sbb
call
out
cmps
shl
and
mov
add
add
sbb
xchg
mov
sbb
sbb
or
jo
movs
sub
sub
cmp
jcxz
sub
sbb
shr
adc
add
sub
adc
lods
jmp
mov
repnz
sub
sbb
add
mov
push
loope
sbb
pusha
or
add
movs
loopne
sub
sub
bound
test
mov
xchg
rep
xor
push
out
daa
xor
or
fadd
loopne
stos
jg
dec
popa
adc
add
sbb
jl
retf
mov
loop
lds
pusha
test
inc
or
add
pop
adc
popf
sbb
push
add
gs
pop
sub
sub
movs
and
add
jmp
add
pop
sub
or
xchg
mulps
add
mov
call
mov
jge
jmp
fbstp
adc
mov
loop
mov
or
rcr
sbb
jno
ret
pusha
repz
mov
ins
fcomp
mov
sbb
push
ins
dec
cmp
add
nop
xor
mov
cmp
in
daa
mov
loope
push
push
lods
cmps
ins
stos
and
add
add
mov
loope
(bad)
mov
and
ret
jp
pop
xchg
shl
mov
retf
popa
or
pop
ret
sbb
clc
add
dec
nop
add
cmp
std
pop
dec
(bad)
jle
mov
mov
arpl
arpl
push
sub
inc
add
inc
sbb
mov
pop
or
or
mov
das
into
sub
inc
cs
adc
jns
mov
fisttp
push
sbb
adc
loop
and
add
loope
adc
mov
or
ror
add
jmp
and
rol
lods
cli
and
mov
push
(bad)
rol
add
mov
scas
mov
push
mov
adc
xchg
mov
add
fs
add
inc
push
sbb
and
add
adc
and
ja
xor
add
sbb
xchg
cmp
add
int3
mov
aas
add
add
stc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
and
add
add
or
add
or
(bad)
cld
sbb
sbb
add
sub
lods
add
pop
jg
cli
lods
jb
pusha
and
sub
inc
sub
mov
pusha
xchg
bound
mov
jns
add
dec
cdq
mov
adc
sub
push
(bad)
movs
mov
inc
mov
and
mov
dec
ror
sub
ins
jns
xchg
and
inc
arpl
ins
sar
outs
lds
ficom
iret
mov
mov
mov
bndstx
ins
lods
sub
push
push
sub
stos
sub
push
enter
sub
outs
dec
and
inc
or
into
cmps
pop
cmps
mov
add
hlt
sbb
cwde
jg
sbb
das
jp
fs
adc
(bad)
aam
lds
jp
xchg
add
ins
out
les
dec
pusha
cmps
test
test
add
int3
das
xor
dec
xchg
cmp
add
sti
(bad)
loop
and
xor
inc
loopne
dec
jl
(bad)
sahf
jle
(bad)
repnz
and
js
inc
pop
jmp
and
jle
sbb
inc
or
cwde
int
pop
and
nop
pop
xchg
movs
mov
xor
ret
xchg
rol
sbb
dec
add
adc
push
inc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
mov
dec
mov
sti
out
(bad)
sbb
fwait
cwde
mov
mov
mov
mov
lds
inc
sub
retf
sub
ins
fdivr
push
out
or
xchg
jbe
sbb
mov
sbb
add
push
xchg
cmp
aad
and
xchg
mov
adc
pop
std
dec
loope
xchg
pop
jbe
inc
test
xor
xor
or
xor
lahf
jg
dec
lods
sub
dec
loopne
push
rcpps
xor
sub
fwait
jg
(bad)
or
sbb
mov
scas
std
or
and
add
(bad)
fimul
add
xchg
jne
das
inc
ss
xchg
repz
fistp
or
ret
sbb
sub
cdq
add
sbb
push
out
sbb
adc
and
push
or
cmc
and
and
loopne
(bad)
mov
mov
adc
dec
test
push
loopne
add
popf
cld
add
adc
lea
sbb
aas
and
icebp
(bad)
fadd
loopne
inc
js
mov
push
sbb
ja
xor
clc
xor
pusha
sbb
mov
push
and
inc
sbb
add
adc
aas
cmp
xor
xchg
retf
std
adc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
ja
mov
clc
out
lea
test
sub
js
aaa
cmps
movnti
pusha
cmps
add
lock
mov
adc
push
in
xchg
or
ins
sub
lock
and
jnp
sub
ss
add
cmp
push
mov
push
mov
mov
clc
cld
cmp
lock
dec
xor
retf
pop
mov
sbb
test
and
(bad)
fadd
adc
mov
add
jg
sub
inc
inc
pusha
and
ins
push
mov
adc
adc
lods
add
and
(bad)
jnp
fxch
aas
dec
gs
mov
dec
mov
mov
sub
xor
rcr
inc
xchg
push
mov
inc
movs
(bad)
stc
inc
js
pop
mov
or
and
stos
in
outs
cmp
or
ins
out
les
aaa
dec
pusha
test
and
arpl
les
mov
nop
inc
or
and
dec
push
and
add
(bad)
fdiv
mov
aas
inc
mov
loopne
jge
add
test
pop
xchg
(bad)
les
movd
xor
dec
or
in
pusha
and
iret
mov
add
cld
push
or
sar
add
add
stc
add
add
and
add
add
or
add
or
push
loope
sar
sbb
clc
iret
mov
cli
daa
outs
dec
fwait
aas
mov
add
inc
or
repz
aad
test
cld
adc
cmp
mov
inc
cmp
fsub
or
cmps
or
push
or
pop
aas
std
jae
loopne
sub
mov
pop
and
les
or
and
imul
cli
xchg
push
mov
retf
adc
lahf
mov
sub
aas
fmul
sbb
adc
pop
mov
and
mov
arpl
aas
daa
adc
push
daa
pop
movs
mov
jns
jo
mov
bound
inc
or
push
arpl
xchg
fist
and
mov
cld
pop
out
pop
jno
fs
xor
shr
adc
popa
les
repnz
lahf
nop
addr16
add
sbb
pop
out
or
xchg
inc
cmp
sbb
sahf
jle
sub
sar
ins
push
add
or
ret
xchg
sbb
aaa
popf
adc
and
push
loop
(bad)
pop
sbb
mov
push
and
inc
es
std
repz
adc
(bad)
in
nop
loop
iret
jo
inc
sub
clc
jae
inc
add
stc
add
add
and
add
add
or
add
or
(bad)
cld
sbb
sbb
add
sub
lods
add
pop
jg
cli
lods
jb
pusha
and
sub
inc
sub
mov
pusha
xchg
bound
mov
jns
add
dec
cdq
mov
adc
sub
push
(bad)
movs
mov
inc
mov
and
mov
dec
ror
sub
ins
jns
xchg
and
inc
arpl
ins
sar
outs
lds
ficom
iret
mov
mov
mov
bndstx
ins
lods
sub
push
push
sub
stos
sub
push
enter
sub
outs
dec
and
inc
or
into
cmps
pop
cmps
mov
add
hlt
sbb
cwde
jg
sbb
das
jp
fs
adc
(bad)
aam
lds
jp
xchg
add
ins
out
les
dec
pusha
cmps
test
test
add
int3
das
xor
dec
xchg
cmp
add
sti
(bad)
loop
and
xor
inc
loopne
dec
jl
(bad)
sahf
jle
(bad)
repnz
and
js
inc
pop
jmp
and
jle
sbb
inc
or
cwde
int
pop
and
nop
pop
xchg
movs
mov
xor
ret
xchg
rol
sbb
dec
add
adc
push
inc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
mov
dec
mov
sti
out
(bad)
sbb
fwait
cwde
mov
mov
mov
mov
lds
inc
sub
retf
sub
ins
fdivr
push
out
or
xchg
jbe
sbb
mov
sbb
add
push
xchg
cmp
aad
and
xchg
mov
adc
pop
std
dec
loope
xchg
pop
jbe
inc
test
xor
xor
or
xor
lahf
jg
dec
lods
sub
dec
loopne
push
rcpps
xor
sub
fwait
jg
(bad)
or
sbb
mov
scas
std
or
and
add
(bad)
fimul
add
xchg
jne
das
inc
ss
xchg
repz
fistp
or
ret
sbb
sub
cdq
add
sbb
push
out
sbb
adc
and
push
or
cmc
and
and
loopne
(bad)
mov
mov
adc
dec
test
push
loopne
add
popf
cld
add
adc
lea
sbb
aas
and
icebp
(bad)
fadd
loopne
inc
js
mov
push
sbb
ja
xor
clc
xor
pusha
sbb
mov
push
and
inc
sbb
add
adc
aas
cmp
xor
xchg
retf
std
adc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
ja
mov
clc
out
lea
test
sub
js
aaa
cmps
movnti
pusha
cmps
add
lock
mov
adc
push
in
xchg
or
ins
sub
lock
and
jnp
sub
ss
add
cmp
push
mov
push
mov
mov
clc
cld
cmp
lock
dec
xor
retf
pop
mov
sbb
test
and
(bad)
fadd
adc
mov
add
jg
sub
inc
inc
pusha
and
ins
push
mov
adc
adc
lods
add
and
(bad)
jnp
fxch
aas
dec
gs
mov
dec
mov
mov
sub
xor
rcr
inc
xchg
push
mov
inc
movs
(bad)
stc
inc
js
pop
mov
or
and
stos
in
outs
cmp
or
ins
out
les
aaa
dec
pusha
test
and
arpl
les
mov
nop
inc
or
and
dec
push
and
add
(bad)
fdiv
mov
aas
inc
mov
loopne
jge
add
test
pop
xchg
(bad)
les
movd
xor
dec
or
in
pusha
and
iret
mov
add
cld
push
or
sar
add
add
stc
add
add
and
add
add
or
add
or
push
loope
sar
sbb
clc
iret
mov
cli
daa
outs
dec
fwait
aas
mov
add
inc
or
repz
aad
test
cld
adc
cmp
mov
inc
cmp
fsub
or
cmps
or
push
or
pop
aas
std
jae
loopne
sub
mov
pop
and
les
or
and
imul
cli
xchg
push
mov
retf
adc
lahf
mov
sub
aas
fmul
sbb
adc
pop
mov
and
mov
arpl
aas
daa
adc
push
daa
pop
movs
mov
jns
jo
mov
bound
inc
or
push
arpl
xchg
fist
and
mov
cld
pop
out
pop
jno
fs
xor
shr
adc
popa
les
repnz
lahf
nop
addr16
add
sbb
pop
out
or
xchg
inc
cmp
sbb
sahf
jle
sub
sar
ins
push
add
or
ret
xchg
sbb
aaa
popf
adc
and
push
loop
(bad)
pop
sbb
mov
push
and
inc
es
std
repz
adc
(bad)
in
nop
loop
iret
jo
inc
sub
clc
jae
inc
add
stc
add
add
and
add
add
or
add
or
(bad)
cld
sbb
sbb
add
sub
lods
add
pop
jg
cli
lods
jb
pusha
and
sub
inc
sub
mov
pusha
xchg
bound
mov
jns
add
dec
cdq
mov
adc
sub
push
(bad)
movs
mov
inc
mov
and
mov
dec
ror
sub
ins
jns
xchg
and
inc
arpl
ins
sar
outs
lds
ficom
iret
mov
mov
mov
bndstx
ins
lods
sub
push
push
sub
stos
sub
push
enter
sub
outs
dec
and
inc
or
into
cmps
pop
cmps
mov
add
hlt
sbb
cwde
jg
sbb
das
jp
fs
adc
(bad)
aam
lds
jp
xchg
add
ins
out
les
dec
pusha
cmps
test
test
add
int3
das
xor
dec
xchg
cmp
add
sti
(bad)
loop
and
xor
inc
loopne
dec
jl
(bad)
sahf
jle
(bad)
repnz
and
js
inc
pop
jmp
and
jle
sbb
inc
or
cwde
int
pop
and
nop
pop
xchg
movs
mov
xor
ret
xchg
rol
sbb
dec
add
adc
push
inc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
mov
dec
mov
sti
out
(bad)
sbb
fwait
cwde
mov
mov
mov
mov
lds
inc
sub
retf
sub
ins
fdivr
push
out
or
xchg
jbe
sbb
mov
sbb
add
push
xchg
cmp
aad
and
xchg
mov
adc
pop
std
dec
loope
xchg
pop
jbe
inc
test
xor
xor
or
xor
lahf
jg
dec
lods
sub
dec
loopne
push
rcpps
xor
sub
fwait
jg
(bad)
or
sbb
mov
scas
std
or
and
add
(bad)
fimul
add
xchg
jne
das
inc
ss
xchg
repz
fistp
or
ret
sbb
sub
cdq
add
sbb
push
out
sbb
adc
and
push
or
cmc
and
and
loopne
(bad)
mov
mov
adc
dec
test
push
loopne
add
popf
cld
add
adc
lea
sbb
aas
and
icebp
(bad)
fadd
loopne
inc
js
mov
push
sbb
ja
xor
clc
xor
pusha
sbb
mov
push
and
inc
sbb
add
adc
aas
cmp
xor
xchg
retf
std
adc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
ja
mov
clc
out
lea
test
sub
js
aaa
cmps
movnti
pusha
cmps
add
lock
mov
adc
push
in
xchg
or
ins
sub
lock
and
jnp
sub
ss
add
cmp
push
mov
push
mov
mov
clc
cld
cmp
lock
dec
xor
retf
pop
mov
sbb
test
and
(bad)
fadd
adc
mov
add
jg
sub
inc
inc
pusha
and
ins
push
mov
adc
adc
lods
add
and
(bad)
jnp
fxch
aas
dec
gs
mov
dec
mov
mov
sub
xor
rcr
inc
xchg
push
mov
inc
movs
(bad)
stc
inc
js
pop
mov
or
and
stos
in
outs
cmp
or
ins
out
les
aaa
dec
pusha
test
and
arpl
les
mov
nop
inc
or
and
dec
push
and
add
(bad)
fdiv
mov
aas
inc
mov
loopne
jge
add
test
pop
xchg
(bad)
les
movd
xor
dec
or
in
pusha
and
iret
mov
add
cld
push
or
sar
add
add
stc
add
add
add
add
add
add
add
add
inc
mov
mov
add
dec
add
and
add
add
popa
xor
sbb
sbb
add
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
gs
push
add
(bad)
mov
div
jb
enter
gs
fcmovnb
(bad)
out
add
(bad)
(bad)
fwait
pusha
push
(bad)
repnz
fiadd
(bad)
loop
(bad)
jmp
or
int
(bad)
cmc
add
jmp
mov
mov
out
(bad)
(bad)
adc
xchg
add
add
add
mov
stc
cmps
add
add
call
in
mov
stc
add
mov
leave
add
fld
push
pop
(bad)
jmp
leave
mov
ret
js
xlat
mov
fdiv
out
in
test
std
mov
(bad)
rol
std
fcom
(bad)
cld
leave
fldenv
out
add
in
jbe
call
dec
add
movs
add
stc
cmps
retf
mov
stc
lods
add
(bad)
sub
dec
jmp
mov
(bad)
(bad)
and
rol
(bad)
push
cld
out
mov
dec
cli
mov
(bad)
jmp
add
add
adc
push
cli
mov
cld
rol
mov
int3
test
jmp
lock
inc
sti
mov
(bad)
fbld
(bad)
inc
mov
pop
sar
stos
add
add
mov
scas
imul
cli
jmp
jmp
(bad)
out
ss
lds
adc
in
and
cmc
cld
(bad)
cld
add
hlt
sbb
ror
sbb
jmp
or
ret
fninit
push
adc
(bad)
(bad)
fdiv
lds
(bad)
sar
icebp
cmp
sub
leave
adc
inc
xlat
stos
adc
sbb
repz
fmul
sar
cmp
add
adc
(bad)
xor
out
in
in
(bad)
fadd
sahf
pop
add
adc
jmp
nop
mov
add
inc
mov
jnp
sahf
add
scas
mov
shr
nop
dec
add
std
stc
int3
mov
lds
mov
add
loope
out
fild
mov
pop
call
add
mov
icebp
mov
sub
push
xchg
cdq
cmps
mov
add
lds
out
pop
mov
add
rol
out
hlt
(bad)
(bad)
stc
or
(bad)
xor
mov
stc
lock
mov
int
(bad)
cld
add
div
(bad)
mov
(bad)
out
dec
dec
dec
std
les
adc
adc
repnz
ds
sti
xlat
add
inc
out
ror
clc
cmps
or
pop
cld
cmps
add
loop
test
cli
fild
mov
add
cmps
or
mov
cmps
cdq
pop
mov
and
inc
aam
add
mov
stc
iret
add
int3
pop
mov
or
rol
add
rcl
int
sti
hlt
push
clc
aam
clc
mov
stos
outs
add
iret
add
int
aad
push
out
retf
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
push
add
add
add
add
add
add
inc
std
or
mov
inc
jns
push
mov
ret
push
das
pushf
xor
dec
mov
inc
and
fs
or
adc
cmps
push
xchg
call
shl
rcr
imul
cmps
add
sbb
jmp
cmps
sub
pop
cmp
or
aam
loop
mov
and
add
add
mov
adc
loopne
sbb
aad
mov
xchg
je
repnz
mov
inc
pop
test
sub
fmul
mov
mov
push
dec
adc
movntps
inc
push
or
xor
loop
or
dec
pop
push
add
(bad)
in
aam
(bad)
mov
fwait
add
mov
sub
dec
dec
sbb
idiv
sub
or
lahf
inc
sub
mov
dec
mov
arpl
or
xchg
inc
repnz
add
add
jle
cmp
std
inc
and
test
xchg
adc
rol
add
hlt
xor
loope
fsubr
movs
cdq
add
xchg
test
or
xor
add
shr
les
xchg
dec
mov
popa
or
xor
push
sub
inc
rol
mov
or
stos
and
pop
add
les
pusha
fs
dec
cmp
xor
out
data16
popa
push
adc
hlt
xchg
ret
and
mov
inc
sub
and
sbb
mov
add
push
fst
add
and
inc
je
add
enter
jecxz
das
push
mov
stos
dec
inc
sub
adc
sbb
test
adc
movs
xor
add
xor
loope
pop
or
leave
xor
push
dec
cld
lock
mov
add
add
xor
xor
or
(bad)
or
rol
sar
push
ror
cmp
push
ins
push
adc
repnz
test
push
mov
sbb
ins
cmp
cwde
loopne
add
mov
add
xchg
int3
pop
scas
inc
test
dec
sbb
(bad)
cmp
pop
(bad)
dec
lds
dec
es
mov
inc
cmps
adc
test
test
cwde
mov
cmps
inc
outs
mov
cli
or
sub
push
cwde
rol
or
adc
int3
xor
xchg
les
sbb
or
or
dec
nop
sbb
pusha
test
and
jo
sbb
adc
xor
cmp
push
sbb
xor
add
nop
call
xor
(bad)
ds
(bad)
jnp
sbb
dec
mov
pop
nop
sbb
push
aaa
cmps
push
adc
adc
rol
and
rol
inc
or
shl
mov
jg
loope
mov
mov
sbb
shr
xchg
inc
inc
adc
loope
or
test
or
add
mov
inc
mov
add
hlt
(bad)
cmc
shl
mov
sub
mov
and
pop
loope
adc
dec
adc
clc
add
adc
cmc
push
pop
fs
add
dec
or
pop
outs
xor
mov
inc
ds
push
ds
xor
inc
add
cmp
test
in
add
sbb
int3
xor
adc
inc
sbb
mov
out
and
cs
les
inc
cmp
add
sahf
mov
sbb
adc
push
rol
add
psrld
pop
out
jp
test
lods
and
ror
sub
lahf
rol
or
rol
js
add
xor
dec
pop
inc
add
jno
enter
pop
call
adc
fwait
sub
popaw
adc
mov
pusha
or
add
mov
or
inc
push
mov
lea
sub
data16
push
clc
adc
or
inc
xor
je
adc
and
adc
lds
je
test
add
sub
mov
aas
mov
mov
dec
js
dec
xor
xor
je
inc
pop
ss
add
nop
pusha
or
jo
cs
push
dec
imul
or
rcr
lock
dec
jns
inc
adc
lea
ror
inc
daa
inc
mov
or
loopne
xor
or
rcr
dec
jmp
stos
or
or
out
or
js
add
add
dec
aaa
arpl
mov
push
shl
cmc
or
inc
or
add
jo
push
int
hlt
movs
sbb
retf
outs
mov
jle
adc
loop
in
xchg
mov
push
or
or
inc
ror
add
ss
daa
push
and
jge
and
push
push
inc
or
push
xor
pop
push
add
mov
add
add
adc
pusha
or
cmp
push
jo
sbb
clc
mov
jl
cmps
push
inc
adc
mov
adc
and
xor
push
dec
inc
add
ret
push
add
loopne
adc
rol
pop
add
push
mov
ret
stos
retf
or
push
xor
push
test
cmp
pop
inc
shl
stos
cwde
les
bound
push
sbb
sub
adc
sub
or
add
and
fstp
and
xor
loopne
js
arpl
sub
cmp
pusha
sbb
int
adc
and
sub
jne
loopne
lea
push
arpl
xor
or
mov
jmp
adc
and
loopne
sbb
add
dec
pop
pushf
adc
mov
add
mov
or
add
xchg
sbb
dec
adc
and
clc
test
data16
adc
js
sar
or
or
push
and
rol
sbb
and
sub
lock
nop
adc
std
inc
push
shl
pusha
pop
lods
add
enter
xor
in
les
dec
ins
xchg
push
push
mov
jns
aam
adc
add
push
pop
imul
popa
push
jae
loope
inc
enter
add
cwde
rol
dec
daa
mov
add
out
adc
pop
xor
push
add
pop
pop
shl
rol
pop
and
xor
adc
inc
adc
xor
clc
call
push
pop
pop
add
jg
add
jo
mov
dec
adc
mov
add
and
xchg
rol
test
lods
adc
mov
lods
inc
add
jb
xchg
loopne
adc
nop
add
cwde
fild
clc
inc
lods
sub
push
push
mov
add
pop
jo
or
xor
scas
cmp
ss
add
in
bound
cmp
loopne
jg
sbb
or
add
sub
add
(bad)
or
and
add
push
add
add
add
add
or
dec
hlt
arpl
rol
scas
loope
add
and
dec
adc
call
(bad)
cld
pop
enter
inc
mov
test
dec
cmp
adc
inc
aas
add
cld
sbb
and
or
call
mov
call
or
cmp
dec
call
mov
jo
mov
shl
xor
sbb
add
stc
add
push
add
add
add
add
push
add
or
add
std
jecxz
mov
rol
add
adc
jo
adc
bound
xor
add
pop
pop
lods
call
inc
stos
cld
out
lds
sbb
xchg
outs
ror
lods
sbb
bound
fdivrp
ja
pop
cmp
loopne
js
out
pusha
sbb
dec
lahf
push
sbb
adc
mov
pop
xor
xchg
jo
and
cwde
les
ds
idiv
lods
dec
fs
(bad)
mov
stc
pop
sub
push
in
push
ror
xchg
xchg
or
cld
add
mov
aas
ins
pop
xchg
int
inc
lods
sar
sub
les
xor
and
hlt
scas
into
aas
xor
jle
and
or
push
popa
add
or
dec
movs
pusha
sbb
data16
popa
pop
loopne
leave
f2xm1
or
int3
ds
ret
loopne
sahf
push
call
in
(bad)
add
and
push
adc
popf
loope
cmp
cmp
nop
xchg
nop
inc
inc
mov
cmc
xchg
xor
or
test
push
jo
jne
add
mov
in
xchg
xor
aas
nop
and
aas
sahf
test
(bad)
aaa
or
mov
xor
ror
sub
dec
add
aas
or
add
xor
jge
sub
mov
mov
add
inc
and
xor
add
dec
or
(bad)
sub
js
test
movs
and
cmp
xor
iret
adc
mov
into
ins
xor
add
push
sbb
push
mov
call
loopne
out
or
cmc
xor
sub
mov
or
adc
add
stc
add
or
inc
sub
add
add
push
add
or
add
std
(bad)
mov
rol
add
pushf
sub
cdq
dec
mov
adc
pop
std
sub
mov
cld
out
fild
inc
cmp
dec
mov
arpl
or
aaa
add
inc
mov
nop
jno
xchg
mov
pop
test
or
ret
cmps
sbb
popf
dec
enter
test
les
adc
jmp
sbb
xchg
xor
loope
lods
ja
aaa
and
pusha
xchg
mov
icebp
inc
adc
inc
call
(bad)
test
sbb
add
inc
pop
sub
call
std
sti
shl
add
pusha
add
cmp
popa
inc
push
pusha
pop
movs
or
xchg
in
sbb
add
out
and
jmp
add
fdivr
dec
ins
add
add
dec
jns
xor
js
das
sbb
fldenv
inc
and
fsubr
dec
dec
stos
(bad)
mov
and
aas
jle
dec
xchg
push
lock
ds
cld
mov
inc
sub
jns
je
push
iret
xor
icebp
(bad)
sub
call
dec
or
mov
add
in
and
syscall
sub
rol
push
or
sub
inc
ret
enter
(bad)
ret
aas
or
push
nop
aaa
and
and
or
cmp
mov
add
pusha
and
adc
or
xchg
inc
inc
push
pop
lods
mov
xchg
ret
sbb
push
ret
or
adc
dec
inc
lea
arpl
and
ins
loope
pushf
pop
stc
jecxz
inc
cmp
retf
cs
add
enter
and
add
or
inc
sub
add
add
or
dec
hlt
xchg
add
sub
mov
cdq
stos
pop
push
fsubr
aas
dec
xlat
stos
push
pop
or
cld
sub
sub
mov
popa
inc
jg
(bad)
cld
jnp
xor
mov
stos
mov
gs
push
leave
je
mov
push
retf
adc
pop
cmp
or
dec
jne
xchg
aam
or
inc
mov
mov
or
add
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
(bad)
inc
imul
shl
cmp
clc
scas
int3
aas
pop
and
push
and
mov
xor
ror
movs
imul
xor
es
adc
xchg
mov
mov
pop
and
das
dec
movs
mov
and
cmp
push
(bad)
int3
loop
and
and
sub
fnstsw
push
sub
mov
ret
pop
mov
out
cs
rcl
add
(bad)
nop
and
dec
mov
sbb
inc
xchg
xor
adc
inc
dec
mov
cmp
aad
sbb
je
or
add
lods
sbb
bound
fstp
pop
jo
cmp
push
xor
std
shl
push
push
mov
adc
push
or
mov
xor
jg
adc
mov
dec
push
jmp
add
pusha
nop
add
or
sahf
inc
das
mov
pop
pusha
les
aas
add
dec
ficom
int3
cmp
push
push
leave
aas
dec
or
push
add
cwde
rol
sbb
pcmpgtb
sbb
sub
or
sub
add
add
push
inc
push
sbb
hlt
xor
push
or
sbb
fdivr
adc
ret
rcl
imul
inc
push
and
xchg
dec
push
dec
cmp
and
and
cmp
lsl
dec
data16
inc
xchg
dec
nop
int
cmc
xchg
xor
or
icebp
and
adc
lea
sbb
popa
adc
xor
aas
nop
and
call
jno
sbb
rol
push
add
add
int3
mov
inc
mov
repz
lods
lock
adc
pop
add
cld
push
sub
add
sub
push
pushf
and
pop
jmp
push
adc
cmp
push
aam
loopne
push
push
inc
inc
fdivr
pop
jo
sbb
imul
addr16
cwde
xor
add
xor
sub
add
and
or
adc
and
add
or
inc
sub
add
add
add
add
sahf
add
or
mov
rol
nop
and
add
fnstsw
xor
inc
and
xor
lods
or
rep
pop
(bad)
jg
push
ds
(bad)
test
stos
hlt
pop
pusha
push
dec
cmp
dec
cld
arpl
xchg
fadd
add
loope
dec
adc
jmp
addr16
mov
hlt
test
xor
sub
jl
movs
call
sub
add
rcr
movs
push
out
inc
pop
jp
xchg
lods
sub
std
or
or
and
add
or
inc
sub
add
add
sub
add
inc
dec
sbb
mov
rol
mov
inc
imul
inc
sbb
sub
mov
mov
add
pop
stos
sbb
inc
or
adc
sub
fdiv
lods
retf
(bad)
(bad)
(bad)
and
adc
inc
sbb
hlt
inc
arpl
add
push
in
ret
add
cld
jnp
adc
mov
inc
aaa
int
mov
inc
std
xchg
pop
shl
pop
push
(bad)
clc
push
add
adc
pop
and
xor
mov
ret
mov
sub
mov
sti
out
mov
ret
push
adc
mov
ror
ss
ror
sbb
mov
dec
arpl
jb
or
call
or
add
inc
mov
nop
push
nop
xchg
cmp
loop
pop
test
shl
mov
fadd
cmps
sbb
popf
(bad)
cmp
mov
clc
sub
les
adc
test
sar
dec
adc
cmp
sub
adc
mov
add
pop
dec
pusha
les
dec
adc
inc
cmp
lods
mov
and
add
mov
jmp
and
add
in
mov
push
or
dec
adc
(bad)
xor
add
inc
and
add
mov
(bad)
xor
ins
add
cmp
push
xor
ret
adc
enter
inc
xor
dec
daa
or
(bad)
mov
xor
ror
fs
push
push
adc
ret
add
adc
(bad)
call
std
xchg
xchg
loopne
or
dec
sahf
rol
sbb
adc
inc
add
test
imul
dec
add
sub
inc
add
add
sbb
or
stos
inc
pop
xor
add
aas
xchg
mov
loopne
mov
sub
or
mov
dec
or
sbb
xchg
test
lahf
je
mov
sub
mov
and
fcom
xor
lea
arpl
and
ins
loope
(bad)
(bad)
cmp
push
cmp
mov
imul
push
sbb
mov
inc
pop
add
add
stc
add
or
inc
sub
add
add
add
add
or
or
nop
or
mov
mov
mov
std
fcmovnb
retf
mov
rcl
ret
jg
ds
dec
pusha
sub
fsub
pop
adc
adc
(bad)
data16
cdq
pop
inc
loopne
mov
sbb
jmp
test
push
adc
xor
(bad)
iret
push
add
gs
retf
scas
sub
call
std
mov
jbe
stos
or
cmp
inc
cmp
dec
fistp
add
ins
or
fistp
mov
and
and
add
or
inc
sub
add
add
push
add
or
add
std
jecxz
mov
rol
add
adc
jo
adc
bound
xor
add
pop
pop
lods
call
inc
stos
cld
out
lds
sbb
xchg
outs
ror
lods
sbb
bound
fdivrp
ja
pop
cmp
loopne
js
out
pusha
sbb
dec
lahf
push
sbb
adc
mov
pop
xor
xchg
jo
and
cwde
les
ds
idiv
lods
dec
fs
(bad)
mov
stc
pop
sub
push
in
push
ror
xchg
xchg
or
cld
add
mov
aas
ins
pop
xchg
int
inc
lods
sar
sub
les
xor
and
hlt
scas
into
aas
xor
jle
and
or
push
popa
add
or
dec
movs
pusha
sbb
data16
popa
pop
loopne
leave
f2xm1
or
int3
ds
ret
loopne
sahf
push
call
in
(bad)
add
and
push
adc
popf
loope
cmp
cmp
nop
xchg
nop
inc
inc
mov
cmc
xchg
xor
or
test
push
jo
jne
add
mov
in
xchg
xor
aas
nop
and
aas
sahf
test
(bad)
aaa
or
mov
xor
ror
sub
dec
add
aas
or
add
xor
jge
sub
mov
mov
add
inc
and
xor
add
dec
or
(bad)
sub
js
test
movs
and
cmp
xor
iret
adc
mov
into
ins
xor
add
push
sbb
push
mov
call
loopne
out
or
cmc
xor
sub
mov
or
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
push
add
add
add
add
push
add
or
add
std
(bad)
mov
rol
add
pushf
sub
cdq
dec
mov
adc
pop
std
sub
mov
cld
out
fild
inc
cmp
dec
mov
arpl
or
aaa
add
inc
mov
nop
jno
xchg
mov
pop
test
or
ret
cmps
sbb
popf
dec
enter
test
les
adc
jmp
sbb
xchg
xor
loope
lods
ja
aaa
and
pusha
xchg
mov
icebp
inc
adc
inc
call
(bad)
test
sbb
add
inc
pop
sub
call
std
sti
shl
add
pusha
add
cmp
popa
inc
push
pusha
pop
movs
or
xchg
in
sbb
add
out
and
jmp
add
fdivr
dec
ins
add
add
dec
jns
xor
js
das
sbb
fldenv
inc
and
fsubr
dec
dec
stos
(bad)
mov
and
aas
jle
dec
xchg
push
lock
ds
cld
mov
inc
sub
jns
je
push
iret
xor
icebp
(bad)
sub
call
dec
or
mov
add
in
and
syscall
sub
rol
push
or
sub
inc
ret
enter
(bad)
ret
aas
or
push
nop
aaa
and
and
or
cmp
mov
add
pusha
and
adc
or
xchg
inc
inc
push
pop
lods
mov
xchg
ret
sbb
push
ret
or
adc
dec
inc
lea
arpl
and
ins
loope
pushf
pop
stc
jecxz
inc
cmp
retf
cs
add
enter
and
add
push
add
add
add
add
push
add
or
add
std
jecxz
mov
rol
add
adc
jo
adc
bound
xor
add
pop
pop
lods
call
inc
stos
cld
out
lds
sbb
xchg
outs
ror
lods
sbb
bound
fdivrp
ja
pop
cmp
loopne
js
out
pusha
sbb
dec
lahf
push
sbb
adc
mov
pop
xor
xchg
jo
and
cwde
les
ds
idiv
lods
dec
fs
(bad)
mov
stc
pop
sub
push
in
push
ror
xchg
xchg
or
cld
add
mov
aas
ins
pop
xchg
int
inc
lods
sar
sub
les
xor
and
hlt
scas
into
aas
xor
jle
and
or
push
popa
add
or
dec
movs
pusha
sbb
data16
popa
pop
loopne
leave
f2xm1
or
int3
ds
ret
loopne
sahf
push
call
in
(bad)
add
and
push
adc
popf
loope
cmp
cmp
nop
xchg
nop
inc
inc
mov
cmc
xchg
xor
or
test
push
jo
jne
add
mov
in
xchg
xor
aas
nop
and
aas
sahf
test
(bad)
aaa
or
mov
xor
ror
sub
dec
add
aas
or
add
xor
jge
sub
mov
mov
add
inc
and
xor
add
dec
or
(bad)
sub
js
test
movs
and
cmp
xor
iret
adc
mov
into
ins
xor
add
push
sbb
push
mov
call
loopne
out
or
cmc
xor
sub
mov
or
adc
add
stc
add
push
add
add
add
add
or
add
or
mov
sub
mov
inc
sub
xchg
rcr
mov
rcr
hlt
xchg
add
sbb
in
fistp
cli
out
fs
cmp
(bad)
shl
adc
popa
add
(bad)
and
cmp
pop
lods
jg
cld
imul
jb
int3
lock
(bad)
aas
xchg
push
(bad)
fist
sbb
cdq
ins
jbe
int
imul
(bad)
mov
cmp
mov
rcr
sbb
and
out
movs
ror
data16
push
sub
icebp
adc
jb
cmc
fistp
xor
bound
clc
jmp
jno
ss
xlat
mov
retf
sahf
dec
fnclex
mov
or
ins
and
test
sbb
daa
int
sbb
pushf
push
lds
jae
xchg
jl
dec
xchg
mov
add
data16
mov
add
mov
sahf
push
cmp
les
rol
inc
inc
add
or
popa
fistp
jl
xor
add
add
aas
mov
push
ja
cld
inc
push
sub
jo
sub
sbb
aad
or
xor
sbb
jl
adc
call
jb
pop
xchg
lods
mov
and
test
xor
dec
sub
cld
mov
xchg
add
daa
inc
mov
push
shr
xor
and
mov
sbb
jo
add
test
sbb
ins
add
cmp
push
fs
enter
shl
or
adc
loopne
pop
push
push
xchg
and
cld
repz
fs
xor
ror
fs
push
push
adc
ret
add
adc
pop
push
xor
test
in
ror
js
ret
dec
call
add
nop
pop
cld
xor
sub
and
syscall
enter
or
adc
adc
sub
ret
enter
mov
hlt
push
adc
or
dec
dec
ret
call
lods
lock
sbb
inc
and
pop
jmp
lock
pop
jmp
mov
xor
push
dec
xor
jb
sub
test
(bad)
adc
and
ret
push
push
(bad)
out
adc
lea
xchg
and
test
add
and
add
or
inc
sub
add
add
or
add
or
inc
loopne
dec
xor
sub
popa
inc
push
add
cld
repz
popa
or
loopne
pop
push
sbb
xor
adc
stc
pop
jns
lahf
mov
or
dec
dec
test
push
movs
mov
mov
lods
fiadd
jnp
mov
aas
jg
std
in
dec
adc
jno
jbe
mov
ds
xlat
icebp
imul
lods
dec
lods
sahf
(bad)
out
mov
mov
or
dec
lahf
add
or
cmp
mov
or
sbb
imul
mov
inc
xor
daa
mov
cmp
stos
push
cli
fbld
add
aam
pop
shl
add
add
rol
gs
mov
cmp
stc
repnz
add
cmp
cmp
fsub
icebp
add
xor
repz
mov
jg
hlt
sub
adc
rcl
in
xchg
(bad)
mov
adc
dec
loopne
retf
cmp
inc
xor
ror
cmp
xor
sysenter
sbb
movs
nop
push
xor
add
xor
push
add
or
adc
add
and
int
retf
sysexit
xchg
cld
xchg
test
shl
adc
nop
gs
cmovb
mov
inc
inc
push
aas
cld
inc
inc
add
loopne
or
in
xor
adc
aas
xor
jno
xchg
push
xchg
cwde
dec
inc
ret
test
mov
lods
rol
jns
hlt
dec
cmp
xor
push
adc
add
adc
or
aam
sbb
add
sbb
and
daa
aam
retf
dec
rcr
add
or
xor
push
mov
add
or
inc
or
inc
cwde
mov
mov
xor
ror
sub
dec
add
aas
or
add
xor
mov
cs
mov
mov
add
inc
and
add
lock
add
pop
or
(bad)
sub
js
inc
jp
movs
and
ror
xor
les
pusha
in
lea
jecxz
xor
add
xor
jmp
or
aas
push
pushf
mov
pusha
ret
or
ret
sub
add
jl
pop
inc
add
stc
add
or
inc
sub
add
add
add
add
or
dec
mov
rol
adc
add
test
(bad)
or
leave
dec
repnz
lea
stos
hlt
pop
and
dec
pushf
clc
inc
loope
add
cvtps2pi
jmp
xor
stos
jecxz
into
and
push
std
sub
(bad)
xchg
and
mov
push
lods
xchg
scas
xor
out
jmp
jmp
mov
hlt
repz
imul
mov
jg
mov
sub
sub
add
or
inc
sub
add
add
or
add
or
mov
rol
out
add
adc
push
mov
mov
push
add
test
sbb
sti
push
clc
mov
sbb
sub
add
std
stc
repz
jmp
or
sbb
pop
xchg
movs
cli
inc
xchg
loope
jg
bound
or
sbb
cmc
movhps
push
sbb
cmc
pop
call
cmp
cmp
sub
jne
mov
mov
xor
mov
popf
imul
(bad)
nop
and
dec
mov
xor
mov
sbb
and
inc
repz
popf
inc
ins
fadd
outs
inc
push
retf
(bad)
push
loopne
jb
fld
push
movs
inc
enter
hlt
pop
push
push
pop
sbb
or
pop
icebp
fcomp
add
adc
adc
inc
push
add
pop
adc
shl
setg
or
adc
shl
sbb
mov
adc
push
xchg
loopne
dec
movs
movs
and
jmp
sub
push
adc
adc
les
mov
inc
or
adc
add
push
test
inc
cmp
lods
mov
and
lds
inc
xor
dec
sub
cld
mov
xchg
add
daa
inc
mov
push
shr
xor
and
mov
adc
movlps
jno
and
movs
and
adc
add
rcl
sbb
bnd
leave
or
cld
xchg
or
push
lea
nop
lock
inc
popf
cmp
xchg
and
cld
repz
sub
(bad)
fs
push
push
adc
ret
add
adc
call
test
test
xor
cld
inc
inc
or
or
sub
dec
xor
push
adc
adc
inc
jp
mov
adc
cvtps2pi
or
inc
ret
enter
mov
hlt
xor
aas
or
xor
ret
call
lods
lock
sbb
and
push
(bad)
jmp
lock
pop
jmp
mov
xor
push
xor
sub
test
(bad)
adc
and
ret
push
das
dec
out
adc
sub
hlt
nop
sbb
add
cmp
adc
and
add
or
inc
sub
add
add
add
add
or
dec
mov
inc
cmp
push
cmp
ret
call
or
xchg
sar
pop
add
call
(bad)
adc
sub
xchg
and
cld
sub
adc
sub
push
mov
push
mov
dec
add
jo
mov
leave
and
gs
adc
or
cld
ja
int
add
xchg
leave
retf
add
mov
jmp
fiadd
mov
stos
pop
cmps
pop
xor
int
call
push
sbb
ja
daa
mov
add
add
adc
add
dec
add
add
add
popa
xor
sbb
sbb
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
cmp
xor
idiv
add
stc
jmp
jmp
sti
mov
in
std
mov
std
aad
(bad)
fld
call
add
cmc
add
das
cdq
addr16
int
inc
add
xchg
add
call
test
(bad)
rol
pop
add
pop
ss
mov
enter
pop
add
(bad)
std
enter
(bad)
(bad)
pop
mov
add
in
addr16
push
(bad)
(bad)
xor
not
stos
stos
(bad)
(bad)
fucomi
out
hlt
mov
add
(bad)
test
shl
test
out
hlt
(bad)
push
xchg
xlat
fdivr
dec
mov
cs
jbe
xchg
add
cmps
add
mov
idiv
dec
dec
mov
call
int3
mov
test
mov
add
add
pop
xchg
xchg
xchg
out
mov
aad
into
stos
push
xlat
mov
(bad)
jmp
xchg
out
js
idiv
xchg
dec
add
les
popf
push
mov
adc
mov
int
cmps
enter
in
(bad)
in
xchg
std
fstp
mov
mov
fwait
dec
std
loop
enter
leave
retf
inc
mov
mov
int3
cs
lods
mov
xchg
pop
push
sti
cwde
fwait
mov
(bad)
jbe
xchg
sub
mov
shl
xlat
retf
(bad)
imul
icebp
hlt
lds
sti
mov
cld
test
std
div
jmp
or
fisttp
fstp
cmc
stos
add
add
fucomip
mov
adc
out
(bad)
mov
syscall
cmc
fld
cmp
or
sbb
ret
cmps
(bad)
call
add
div
out
mov
lds
(bad)
idiv
inc
push
or
iret
pop
call
or
loop
hlt
scas
or
mov
cmc
int3
or
(bad)
add
int3
add
mov
icebp
jmp
(bad)
mov
lds
popf
nop
jb
pop
pop
not
or
iret
shl
mov
cld
mov
icebp
mov
sar
mov
out
loop
fbstp
out
push
(bad)
mov
mov
cmps
icebp
stc
in
stc
ret
lods
or
mov
mov
push
retf
pop
adc
rep
cld
loopne
jmp
add
mov
imul
add
adc
jmp
(bad)
out
add
scas
add
scas
add
stos
add
(bad)
(bad)
jmp
(bad)
(bad)
sti
sti
sti
cli
jmp
(bad)
sti
cli
(bad)
jmp
sti
jmp
(bad)
sti
(bad)
jge
jle
stos
add
(bad)
cli
sti
stos
add
popa
sub
ds
mov
loope
ss
adc
imul
pop
stc
jecxz
loop
jo
scas
jp
add
sub
icebp
iret
ret
mov
daa
sbb
div
or
popa
sti
out
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
xor
adc
xor
mov
pushf
dec
xchg
bound
and
jl
jns
movs
ror
cwde
xor
xchg
sub
mov
clc
rol
adc
cmp
rcl
popa
push
adc
dec
retf
pop
sbb
aad
sub
mov
jbe
mov
add
shl
add
sub
mov
pop
push
xor
dec
sub
and
xor
mov
add
ret
sub
xlat
push
mov
add
aam
rcr
jge
fwait
je
pop
mov
cmp
repnz
mov
inc
and
xor
add
sahf
es
fwait
mov
or
rol
inc
lock
nop
ss
inc
(bad)
rcl
jmp
scas
pop
shl
sub
dec
fwait
inc
ror
in
push
mov
mov
pop
cmp
dec
cmp
xor
stc
mov
sub
or
add
or
fmul
and
arpl
dec
cmp
and
or
mov
rol
adc
and
pop
js
add
push
xor
hlt
and
add
and
add
jnp
out
mov
gs
test
pop
hlt
cwde
add
cmps
hlt
or
mov
stos
test
jle
push
popa
or
or
mov
inc
dec
cmps
js
or
xor
xchg
sbb
adc
jae
nop
(bad)
push
and
mov
push
add
cmp
test
cmps
ss
cmp
sbb
sbb
push
sbb
add
or
mov
sbb
inc
daa
fwait
adc
inc
adc
inc
xor
mov
pop
jl
and
dec
movs
adc
movhps
xor
loop
dec
inc
jmp
sub
dec
fimul
inc
test
clc
pop
ss
pop
push
and
xchg
adc
test
test
cdq
sub
mov
mov
push
aaa
xor
shl
test
sbb
adc
xor
xor
adc
jl
add
sub
cmp
and
jb
daa
push
addr16
fxtract
jo
or
push
mov
cmp
inc
ret
adc
pop
stos
pop
add
or
or
xor
pop
cmp
xchg
jl
rol
mov
push
push
ins
add
(bad)
push
jo
inc
les
aaa
and
rol
inc
push
inc
jb
cmp
mov
mov
fcom
push
pusha
or
aaa
and
pop
dec
or
shl
inc
add
jl
enter
jo
jns
je
ret
cmp
and
jno
lods
xor
add
add
xor
clc
and
pop
push
loope
add
push
icebp
add
popf
sar
rol
push
scas
push
or
mov
outs
dec
xor
adc
adc
and
mov
mov
loopne
sub
push
inc
mov
mov
or
retf
test
add
adc
shl
pusha
ja
and
pop
mov
mov
ror
push
pop
iret
pop
sbb
xchg
cmc
sbb
div
inc
pop
cmp
mov
xchg
mov
mov
push
mov
popf
cld
xor
call
or
into
sbb
sub
mov
push
sbb
call
inc
or
xor
pusha
pop
jmp
lea
cwde
cdq
inc
scas
rol
pusha
test
imul
pop
mov
rol
pop
ds
push
test
shr
loopne
sub
inc
and
into
in
inc
lods
pusha
je
ret
push
inc
add
xor
push
jbe
or
bound
add
pop
mov
ss
cdq
inc
or
ret
xor
xor
popf
or
xor
and
add
enter
jle
lea
lock
ss
adc
rol
or
add
and
inc
out
xchg
xchg
inc
int3
adc
adc
fs
jg
add
xchg
inc
sbb
data16
in
and
pushf
or
inc
xchg
lea
(bad)
cmp
or
sub
mov
in
xchg
inc
jle
add
test
jo
add
mov
add
add
add
ret
sub
js
mov
and
pop
or
and
mov
and
or
jl
adc
inc
add
add
add
mov
sub
dec
cmp
repnz
dec
movs
xor
add
and
fmul
add
(bad)
mov
jne
cmp
in
imul
movs
lahf
fs
inc
jbe
inc
dec
mov
fwait
fwait
repnz
or
out
push
or
dec
adc
aad
rol
cdq
adc
and
test
les
bound
xchg
test
xchg
mov
aam
sbb
ret
or
fadd
push
cli
mov
cmp
mov
pusha
sbb
or
xor
pusha
inc
add
adc
bound
pop
mov
pop
mov
(bad)
xchg
inc
add
add
mov
jbe
adc
add
cld
mov
pop
sub
imul
mov
cmp
retf
lea
inc
mov
cmc
(bad)
push
mov
add
enter
inc
stos
add
sub
add
nop
xchg
ja
lock
lods
add
cmp
add
ins
push
inc
or
scas
imul
movs
inc
or
into
mov
adc
in
or
js
or
sub
sbb
inc
mov
stos
loope
xor
loopne
push
and
add
rol
mov
test
and
xor
or
lock
mov
adc
stos
popa
mov
inc
push
inc
xchg
add
shl
add
stc
add
or
inc
sub
add
or
or
add
or
xor
pop
mov
add
add
add
lds
loop
inc
int
pop
sbb
lods
int3
cdq
lea
fldenv
sti
or
lea
jmp
mov
pop
inc
dec
push
inc
sbb
push
xor
dec
xchg
or
int
cmps
addr16
(bad)
sbb
scas
popa
test
pop
adc
and
pusha
xchg
add
int
jo
neg
pop
test
inc
int
sub
pop
push
and
xchg
add
cmovp
lock
lds
add
mov
xor
js
cld
inc
xchg
jl
pop
cmovnp
jmp
mov
push
adc
xor
adc
mov
leave
push
mov
push
icebp
ltr
rol
stos
in
clc
aaa
sbb
jo
(bad)
(bad)
cmc
and
xor
(bad)
ds
and
lock
push
mov
bound
(bad)
xor
lods
pop
sbb
push
mov
mov
sbb
or
jae
add
dec
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
aas
inc
push
adc
les
fidiv
xor
xor
int3
adc
mov
js
cwde
lods
leave
enter
rcr
loop
adc
fwait
pop
and
sqrtps
or
push
sbb
icebp
daa
stos
and
pop
xor
inc
sub
adc
add
iret
or
or
inc
setge
mov
test
sbb
sar
mov
pop
loop
or
retf
mov
mov
add
jmp
enter
mov
inc
ja
(bad)
cwde
pop
xchg
std
popa
adc
and
jmp
mov
or
adc
cmp
jmp
and
mov
dec
mov
repz
int
mov
or
adc
js
jmp
and
aas
(bad)
lahf
cmc
cmp
or
sub
call
and
xchg
test
jge
inc
sbb
adc
and
fistp
mov
sub
xchg
adc
(bad)
jl
or
xchg
and
adc
and
mov
(bad)
mov
je
dec
imul
adc
push
jecxz
pusha
inc
xor
or
loopne
adc
pop
call
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
jg
adc
inc
test
pusha
and
mov
push
sbb
scas
and
push
call
adc
pop
or
int
inc
or
cmp
dec
xchg
ret
sub
sub
aam
mov
sahf
leave
push
out
inc
jae
test
cmp
xor
mov
es
mov
iret
or
sub
rcl
retf
inc
jo
movs
int
lock
in
xor
mov
push
adc
inc
adc
adc
ins
mov
loope
shl
and
or
xchg
mov
pop
mov
inc
sbb
or
and
cwde
clc
rcl
fchs
xchg
data16
lods
xchg
dec
je
jo
sbb
nop
sbb
jb
gs
cmp
clc
inc
mov
mov
ficomp
adc
inc
or
test
or
js
test
pop
mov
push
(bad)
xor
out
adc
jp
clc
xor
stc
adc
jge
xor
cwde
loopne
adc
div
add
test
test
jle
cwde
pusha
inc
sahf
enter
imul
loope
pop
ins
mov
jo
xor
ss
je
add
nop
and
pop
push
andnps
cdq
mov
sub
push
pop
sbb
add
inc
arpl
aad
rol
push
jno
lahf
sub
pop
ins
sub
inc
inc
dec
mov
mov
(bad)
cdq
add
and
add
sbb
or
ret
and
add
outs
jo
inc
xor
(bad)
or
rol
nop
inc
and
cmp
jmp
push
inc
inc
aad
movs
lea
inc
push
jmp
repz
add
cld
add
lods
add
daa
adc
das
add
stos
inc
add
add
stc
add
or
inc
sub
add
add
sub
add
or
mov
inc
dec
ret
pop
dec
xor
adc
and
mov
add
pusha
cdq
mov
addr16
mov
leave
inc
adc
call
and
or
push
jno
clc
pop
xor
add
jmp
and
xor
pop
add
xor
icebp
bound
mov
pop
cmp
rcl
xor
push
and
and
jo
inc
fwait
mov
mov
adc
aaa
push
add
inc
pop
and
jo
inc
fistp
inc
(bad)
ins
hlt
fdiv
loopne
inc
sbb
add
or
or
mov
(bad)
xor
push
jg
in
pop
loope
or
add
push
imul
jp
jns
add
xor
push
call
sbb
jo
dec
add
adc
mov
dec
sbb
jne
rol
or
ss
mov
and
push
and
popa
cmp
jnp
imul
inc
adc
sbb
aas
adc
dec
and
ins
pop
inc
add
adc
jmp
and
xor
(bad)
push
adc
lds
pop
call
loopne
sbb
dec
leave
shl
(bad)
clc
jae
nop
cmp
js
(bad)
nop
cmp
cmp
and
int
repnz
mov
xchg
fs
leave
aas
or
mov
sbb
(bad)
sahf
sub
fstp
adc
push
loopne
adc
sub
test
pusha
inc
icebp
out
xor
push
or
dec
test
rol
ins
inc
push
push
add
cmp
dec
sbb
and
add
inc
call
loop
or
inc
adc
movs
rol
sbb
cs
retf
push
adc
shr
cld
shr
dec
cmp
dec
rol
sub
xchg
lea
dec
nop
enter
or
inc
inc
xchg
adc
adc
xchg
dec
cs
and
bound
dec
push
mov
and
add
aas
cmp
lods
pop
mov
xchg
or
ins
inc
out
mov
adc
jl
mov
or
add
stc
add
or
inc
sub
add
add
or
add
or
mov
sar
sbb
ret
and
jl
push
bound
and
xchg
bound
adc
jns
loopne
dec
adc
shl
les
inc
jae
sbb
pop
xor
push
(bad)
sbb
out
cwde
mov
ins
dec
bound
adc
mov
push
add
mov
nop
mov
inc
popa
or
adc
shl
inc
add
cdq
mov
pop
fwait
sti
dec
pop
(bad)
and
adc
jbe
(bad)
lods
or
mov
sbb
retf
ss
inc
add
cmp
sub
stc
add
cmovno
jmp
dec
pop
leave
ret
into
mov
pop
mov
test
sbb
or
shl
pop
pop
push
mov
mov
fdivr
dec
out
jmp
inc
mov
cmp
adc
aas
dec
mov
leave
or
ret
cwde
mov
gs
or
inc
push
rol
leave
and
es
jo
cmp
add
mov
push
inc
or
icebp
dec
add
popa
dec
jge
mov
popa
add
sbb
nop
and
aam
aas
cmp
xchg
push
xchg
out
adc
xor
(bad)
fcom
push
or
xchg
and
in
push
sub
push
aaa
add
adc
mov
push
or
iret
adc
push
movs
lock
xor
inc
sbb
cld
nop
lea
cmp
dec
repz
sbb
xchg
inc
jbe
cli
fst
or
or
inc
inc
mov
cmp
lea
xchg
and
and
or
cmp
add
xchg
loope
cmps
(bad)
push
in
xchg
mov
sub
test
sub
inc
and
sar
scas
jmp
adc
sbb
dec
dec
mov
pop
xchg
(bad)
call
and
add
add
data16
cmp
xor
push
pop
inc
adc
das
fmul
scas
mov
aam
add
xchg
add
or
inc
and
out
add
lds
and
xor
mov
sbb
lock
cld
rol
pop
sbb
dec
loopne
sbb
or
jge
and
ss
mov
add
mov
sub
nop
add
pop
push
shr
sub
sbb
movs
xchg
inc
push
fst
or
adc
nop
add
cs
pop
xor
sbb
rol
(bad)
arpl
ficom
in
push
rcl
xchg
mov
aad
add
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
sbb
pop
enter
ins
lock
mov
imul
cmp
add
mov
jmp
rol
(bad)
shl
add
adc
push
loop
sub
inc
push
cmp
imul
nop
add
jecxz
push
rol
repz
mov
mov
adc
inc
jns
sahf
mov
inc
mov
sub
fiadd
mov
and
retfw
push
je
and
add
dec
(bad)
movs
mov
ins
inc
cmps
int
cmc
mov
ss
inc
xchg
sbb
xchg
stos
add
adc
pop
sbb
lahf
add
push
adc
aaa
and
xchg
and
mov
push
inc
mov
lods
popa
push
jne
test
out
lahf
aaa
inc
jmp
or
imul
arpl
cs
mov
call
add
cld
clc
out
test
adc
xlat
jecxz
cmp
pop
inc
dec
sbb
add
je
inc
pop
ret
shl
iret
or
and
pop
fist
mov
fdivr
push
or
adc
(bad)
andps
pop
and
test
test
sub
add
lock
sub
mov
mov
dec
xor
call
adc
xchg
call
push
(bad)
adc
and
mov
mov
nop
adc
pop
xchg
or
mov
rcl
push
dec
cdq
loop
or
lock
lock
adc
arpl
jae
inc
or
pop
add
push
add
add
nop
or
push
adc
les
imul
mov
popf
push
sub
mov
jno
sbb
stos
js
mov
test
xchg
mov
and
inc
rol
test
outs
inc
popa
lods
pushf
or
or
sar
test
pop
and
inc
or
in
inc
leave
dec
and
lods
int
cmp
test
repz
inc
pop
push
in
ret
pushf
lock
add
mov
ss
adc
mov
call
sti
movs
cmps
push
sub
mov
sbb
sub
and
xchg
push
and
das
inc
cmp
lahf
sub
sar
adc
ret
cld
loope
enter
inc
or
add
inc
das
pcmpgtb
cmps
hlt
ror
push
pushf
jmp
aam
inc
lock
aad
inc
mov
sub
pushf
xor
sub
jmp
mov
mov
repz
or
push
inc
or
mov
lea
adc
inc
xchg
test
shr
mov
xor
jbe
leave
inc
add
das
mov
adc
xor
nop
or
cld
and
shr
push
or
sbb
inc
sbb
rol
jnp
push
int3
aas
out
mov
inc
jecxz
repz
out
mov
push
inc
adc
int3
popa
push
in
aam
jae
in
aad
jecxz
aas
cwde
leave
clc
iret
xor
inc
add
add
xor
jno
pcmpeqb
push
std
js
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
repz
mov
ret
or
pushf
sbb
(bad)
mov
ret
sub
pop
pop
push
xor
dec
or
cld
xor
inc
inc
add
push
std
xchg
inc
inc
test
dec
push
lods
xor
test
sub
mov
sbb
and
xchg
add
popa
or
hlt
fstp
mov
cmp
sub
retf
xchg
xchg
adc
xchg
ss
or
shr
dec
fist
xchg
push
stos
fimul
cdq
(bad)
jg
mov
imul
pop
mov
adc
ret
dec
adc
mov
test
mov
push
rol
push
aam
retf
xor
mov
push
fistp
or
pop
sub
sbb
xchg
jecxz
push
outs
inc
sbb
xor
cld
(bad)
cmp
mov
fs
dec
sbb
mov
jl
dec
pop
sub
or
aas
ret
shl
and
add
sbb
pop
mov
add
xchg
adc
dec
movs
dec
sbb
dec
lods
xor
xor
loope
xor
ret
and
adc
mov
enter
fimul
movs
or
sahf
dec
mov
add
and
add
adc
inc
add
or
xor
push
or
clc
ret
ret
inc
pop
sar
and
cdq
leave
pusha
rcr
std
fdiv
cmp
gs
cld
sbb
cmp
mov
xchg
dec
push
call
inc
cmp
fst
xor
add
popa
shl
sbb
and
cwde
push
push
and
push
mov
(bad)
ss
clc
iret
or
pushf
pushf
jbe
or
push
daa
stos
or
sub
push
cmps
retf
or
nop
mov
rol
sahf
(bad)
add
adc
inc
sbb
mov
mov
popa
fwait
push
dec
nop
and
mov
xchg
xor
dec
es
stc
mov
test
adc
shl
mov
xchg
cld
imul
adc
cld
mov
xor
test
rcr
and
add
add
inc
lods
dec
pop
or
stc
xchg
xor
or
adc
push
sub
mov
leave
inc
adc
aas
repnz
sub
retf
xor
or
dec
xor
sbb
lock
inc
mov
sub
sub
inc
cld
and
and
cmp
pop
add
xchg
(bad)
and
xchg
xor
adc
inc
adc
add
push
test
push
cld
inc
leave
adc
or
cmp
lds
call
repnz
pop
adc
inc
adc
jno
aas
adc
ret
je
push
daa
je
mov
ret
dec
stos
rol
test
mov
ja
jmp
mov
pop
(bad)
cld
jae
add
test
rol
mov
xchg
lock
cld
mov
push
sar
add
mov
add
push
repz
das
cmps
xchg
inc
mov
xchg
rcl
dec
(bad)
add
mov
nop
xor
cmp
or
and
add
xor
sbb
aas
retf
jg
inc
add
adc
(bad)
lock
in
sbb
stos
loope
adc
push
or
add
lods
enter
ret
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
nop
and
cmp
pusha
push
xchg
mov
popf
imul
or
or
and
jl
imul
mov
xchg
loope
and
cmps
pusha
rol
gs
xchg
or
ret
ja
and
cmp
or
mov
les
dec
(bad)
cld
push
push
clc
lods
pop
add
add
mov
or
jbe
mov
add
ds
add
sahf
xchg
scas
or
sub
(bad)
(bad)
fwait
jbe
xchg
sbb
call
out
mov
push
pushf
movs
inc
pop
or
scas
inc
xor
(bad)
pop
sti
jcxz
(bad)
push
test
sbb
mov
shl
add
xor
or
or
aaa
add
mov
fisub
nop
pushf
aas
inc
test
or
cmp
add
xchg
adc
add
adc
push
cmp
pop
jmp
xor
test
ret
clc
xchg
or
cmp
mov
aas
test
jae
adc
inc
sub
neg
add
adc
and
adc
sbb
push
add
dec
ins
es
test
add
bound
adc
fs
ret
jns
mov
adc
jecxz
push
cmp
mov
call
add
pop
or
clc
(bad)
sbb
sbb
sbb
sub
add
xchg
ss
dec
xor
sbb
(bad)
push
inc
add
icebp
dec
add
cdq
je
add
push
imul
or
inc
pop
add
mov
add
bt
inc
adc
cmp
sbb
push
mov
or
mov
mov
sbb
or
mov
pop
mov
mov
jmp
ror
ins
inc
jbe
mov
loope
or
clc
mov
mov
mov
cmp
adc
xchg
add
ret
inc
xchg
sub
or
dec
les
mov
inc
inc
jbe
es
xchg
mov
inc
or
ret
add
cmp
xchg
or
sub
mov
adc
mov
sbb
sbb
ret
jnp
pusha
inc
scas
adc
adc
shl
add
xor
inc
mov
ss
adc
add
clc
mov
sbb
ss
push
mov
push
and
push
mov
push
add
icebp
jmp
rcl
movs
xchg
add
in
pop
add
aam
dec
or
lods
push
mov
mov
sub
xlat
add
sub
pushf
repnz
and
shl
adc
and
rol
push
sub
dec
and
cld
and
cmp
add
loopne
xchg
rcr
add
das
cmp
dec
test
(bad)
jo
mov
enter
add
xor
sub
test
pop
inc
or
arpl
test
inc
les
aas
arpl
int3
pusha
or
mov
jmp
bound
dec
shl
inc
adc
pop
push
repz
or
adc
bswap
mov
or
or
loopne
pop
adc
adc
sbb
pop
loopne
mov
push
and
add
pop
xor
in
pusha
pop
fcom
or
popa
or
mov
push
and
push
mov
sahf
adc
aad
xchg
inc
jp
cmp
sbb
add
dec
ins
fdivr
adc
adc
jl
or
sbb
xchg
hlt
ja
bound
movs
sbb
push
and
icebp
mov
dec
sbb
pop
pop
pop
dec
inc
add
and
add
or
inc
sub
add
add
or
add
or
mov
inc
sub
(bad)
sbb
push
add
and
ds
fwait
es
nop
mov
or
leave
sti
mov
inc
sub
enter
fs
sar
call
or
push
imul
pop
dec
test
retf
les
sti
mov
rcr
rcl
or
inc
adc
and
or
in
and
sub
xchg
inc
mov
and
add
ret
pop
cld
mov
add
nop
mov
cld
loope
(bad)
sub
shl
or
mov
lahf
arpl
sbb
mov
mov
xor
mov
xor
dec
cmp
cmp
bound
test
pop
sbb
pop
jge
push
or
mov
icebp
int3
mov
dec
adc
adc
bound
out
adc
jle
push
(bad)
imul
mov
inc
rcr
(bad)
and
add
clc
inc
and
adc
lods
push
adc
jnp
xchg
xchg
adc
ret
mov
(bad)
push
or
or
leave
pop
push
add
add
or
xor
dec
mov
or
cmp
xor
xor
dec
or
movs
mov
jmp
mov
adc
or
fisub
mov
xor
mov
in
loope
nop
(bad)
fdiv
shl
dec
adc
and
rcl
arpl
call
mov
add
ror
jno
xor
or
adc
inc
add
leave
test
aas
loope
xor
nop
or
pop
mov
jmp
and
push
dec
icebp
(bad)
es
adc
xor
add
jns
mov
stos
cwde
(bad)
push
in
inc
sub
sub
pop
push
in
jge
(bad)
xchg
mov
(bad)
adc
add
add
sub
je
push
clc
test
dec
stos
es
mov
add
pop
js
mov
or
(bad)
push
sub
or
mov
ret
pop
nop
mov
add
inc
inc
push
xlat
pusha
mov
inc
fmul
inc
lahf
das
mov
adc
jns
dec
aaa
add
lock
pop
adc
(bad)
(bad)
inc
mov
mov
sbb
add
mov
aas
sub
sub
adc
pop
int3
inc
ss
push
add
daa
xor
mov
or
sbb
retf
adc
or
inc
daa
clc
call
jmp
fld
inc
shl
mov
add
hlt
jmp
les
inc
cmovs
ss
push
xor
sbb
nop
inc
or
add
push
dec
nop
xor
inc
movs
cs
inc
loope
adc
arpl
mov
adc
sub
cwde
inc
mov
icebp
inc
sub
jnp
dec
jno
and
rcl
inc
inc
mov
(bad)
or
mov
repz
mov
data16
js
and
xchg
add
mov
sbb
inc
aam
add
adc
xor
idiv
and
jnp
das
inc
pop
xor
push
add
aas
sahf
dec
les
jo
cmp
adc
cmp
pop
push
loopne
mov
inc
or
mov
xchg
add
mov
cmp
or
clc
inc
pop
cmp
or
add
adc
adc
add
dec
cmp
xor
das
and
add
inc
adc
scas
inc
adc
push
clc
xchg
xor
inc
mov
les
inc
and
and
and
pop
clc
mov
push
loope
xor
sbb
rcr
pusha
add
in
and
fadd
dec
push
jo
dec
push
inc
add
call
mov
pusha
ret
sbb
mov
and
adc
xor
push
mov
das
cmp
imul
xchg
cld
(bad)
push
cmp
xor
xchg
rol
add
retf
lds
dec
test
push
mov
enter
jno
or
add
stc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
mov
xor
mov
inc
xchg
dec
mov
shr
pushf
xchg
xor
xchg
addr16
xor
pop
and
mov
xchg
xchg
xor
rol
jle
mov
cdq
and
sub
(bad)
xchg
mov
int
aad
int3
or
or
xchg
test
add
add
sbb
xchg
or
ror
add
rcr
fdiv
jmp
xchg
and
lar
daa
add
fsubr
pop
mov
scas
sbb
ret
rol
aam
mov
in
mov
and
loopne
into
loopne
addr16
(bad)
mov
mov
cmp
and
dec
call
and
sbb
or
mov
push
push
pushf
in
jo
add
ror
pop
pusha
rol
data16
inc
rol
and
es
(bad)
(bad)
fcmovu
mov
jmp
loop
and
add
mov
inc
cld
cmc
or
jmp
and
in
sbb
sub
mov
js
dec
sbb
aas
inc
and
adc
loopne
enter
add
sub
and
adc
and
push
add
add
push
sub
punpckhwd
loope
test
jae
and
adc
test
adc
add
imul
jb
imul
rol
stc
mov
and
rcr
inc
arpl
add
paddd
add
and
and
and
push
inc
leave
pop
pop
adc
dec
cmovne
add
add
lock
sub
lock
cmps
and
dec
or
pop
cmp
push
rcpps
jno
ss
or
dec
sbb
call
nop
inc
adc
and
inc
or
(bad)
rol
mov
sbb
fiadd
push
push
add
mov
add
mov
inc
or
adc
outs
adc
add
push
fs
mov
or
push
adc
push
push
iret
adc
add
adc
xor
sub
test
ret
adc
scas
ror
cld
sbb
imul
add
(bad)
mov
mov
addr16
add
lods
add
cmp
mov
or
inc
add
retf
add
(bad)
and
or
inc
inc
lods
(bad)
mov
xor
mov
and
add
nop
adc
fs
mov
ret
sar
int3
xchg
jae
push
pusha
movs
mov
push
inc
lds
loope
inc
ror
shl
pop
mov
addr16
jno
xchg
inc
dec
jmp
push
xor
inc
loopne
or
mov
pop
adc
loopne
into
fisttp
ror
add
cmp
xor
sbb
sbb
daa
and
mov
in
xchg
lds
cs
lock
jecxz
fisttp
dec
or
and
or
add
cld
repz
adc
push
movs
lock
fwait
movs
mov
sub
and
int3
sub
in
mov
or
add
dec
fnop
and
sub
and
js
dec
pop
adc
ret
cli
or
mov
cmp
test
adc
aas
add
or
shl
nop
rol
adc
inc
adc
clc
add
cmp
inc
xchg
scas
loopne
add
add
add
hlt
loope
adc
sub
cli
lds
or
cwde
inc
or
in
add
add
adc
add
and
js
and
or
dec
loope
add
bound
sub
aas
adc
add
xchg
mov
pop
mov
add
inc
and
adc
adc
lds
or
test
cmp
mov
movs
push
sbb
leave
sbb
clc
(bad)
cmp
and
repz
es
xchg
adc
sub
movd
and
xchg
ins
or
or
mov
sbb
or
dec
cmp
add
inc
inc
push
jle
adc
xchg
or
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
fst
aam
mov
jp
fmul
jno
rsqrtps
push
rol
add
jno
das
dec
(bad)
xchg
add
(bad)
aas
and
fdivr
cmp
mov
xor
es
or
nop
inc
xchg
daa
add
adc
xchg
sti
jns
inc
cwde
mov
pop
and
add
xchg
xchg
pop
xor
sub
xchg
xor
dec
xchg
xor
push
pop
dec
mov
lock
shr
fld
rcl
mov
int3
and
shl
inc
jg
fdivr
mov
fldenv
dec
pop
sbb
cld
jmp
push
xchg
loope
test
ss
add
pop
sbb
das
fist
and
iret
push
xchg
(bad)
stc
adc
das
pushf
and
scas
or
mov
sbb
fiadd
push
push
jo
cmp
jmp
jg
add
mov
jno
sub
(bad)
mov
jne
enter
bnd
xor
fnstsw
or
inc
cwde
cmps
sbb
(bad)
mov
movs
lea
mov
dec
or
fcom
inc
or
outs
fisttp
and
jb
popf
mov
sbb
push
inc
inc
cs
loop
aaa
and
mov
adc
adc
ss
mov
add
sbb
push
jbe
or
pop
es
and
mov
cmp
pop
ror
shrd
xchg
or
or
add
mov
pop
xor
or
inc
nop
ss
mov
add
fiadd
dec
and
mov
jb
inc
(bad)
jl
int3
or
ret
inc
or
adc
leave
test
fiadd
mov
dec
push
adc
sar
je
xchg
xchg
xlat
add
aas
mov
xchg
adc
jae
push
push
int
mov
sub
fucompp
mov
movs
loopne
adc
or
adc
aaa
add
stos
push
es
add
nop
test
mov
fiadd
(bad)
shl
xor
inc
or
mov
or
mov
inc
and
mov
and
inc
pop
pop
shr
aas
add
fld
sbb
pusha
icebp
ins
mov
scas
aad
pop
or
and
add
dec
rcl
leave
and
test
in
scas
pusha
push
push
mov
rcl
xor
aam
pop
adc
mov
xor
ins
mov
xchg
sub
aam
jo
sbb
movs
and
add
jb
rcl
addr16
push
or
add
and
pop
and
inc
unpcklps
xchg
inc
pop
loopne
sar
call
cmp
inc
push
call
adc
cmc
lds
push
jns
dec
mov
pop
add
dec
add
mov
int
clc
fsubr
int3
pop
sbb
das
mov
xchg
push
pop
inc
push
or
icebp
dec
sub
dec
adc
(bad)
cs
cmp
call
mov
add
push
inc
or
fwait
add
and
out
dec
or
or
fcom
test
cli
push
xor
and
push
xor
inc
xchg
push
pop
pop
sbb
pusha
mov
xor
sub
out
cmps
push
push
inc
das
xchg
adc
pop
test
add
and
adc
loopne
sti
lods
dec
add
pop
add
pop
jo
mov
pusha
inc
push
xchg
jo
aaa
sbb
add
std
add
stc
retf
xor
add
in
jbe
movs
rcr
xchg
rcl
ds
adc
sbb
xor
adc
inc
add
clc
ret
sub
or
adc
(bad)
bnd
inc
jo
or
add
test
add
jg
ret
add
inc
loopne
push
stos
push
lea
pop
push
add
cmp
push
ror
shl
loope
data16
rol
popa
test
pusha
and
clc
retf
add
lock
loopne
pop
sub
inc
cld
inc
adc
inc
add
add
add
maxps
loopne
inc
enter
push
add
sbb
adc
call
pop
shl
xchg
cli
mov
fadd
adc
rol
add
add
mov
jecxz
and
mov
cld
mov
sub
xor
loopne
scas
mov
push
sbb
add
and
cld
inc
inc
stc
xchg
push
(bad)
popf
push
xor
inc
aam
iret
mov
lods
out
xor
je
aas
clc
add
xor
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
shl
sbb
mov
and
push
inc
(bad)
mov
ror
sbb
dec
adc
sub
cmp
cmp
and
add
sbb
into
test
jae
pop
inc
dec
adc
(bad)
fsubr
(bad)
test
mov
add
cld
sbb
jo
test
push
imul
movs
sub
ret
jecxz
mov
push
sbb
clc
addr16
call
cmps
or
adc
in
fiadd
push
inc
fcom
cwde
xor
stc
fsub
pop
adc
repz
fdivr
stc
daa
dec
fcmovnb
dec
jnp
js
add
mov
(bad)
dec
or
scas
add
ins
fiadd
pusha
xor
inc
fwait
shl
leave
push
enter
ins
(bad)
mov
test
mov
sbb
cmp
shl
nop
push
mov
outs
pop
lock
test
add
inc
dec
call
adc
xchg
xchg
add
add
sub
inc
dec
jl
hlt
xor
adc
push
jl
add
adc
hlt
add
xchg
inc
mov
adc
aas
pop
pusha
xchg
xchg
and
cmp
xor
shl
add
cmp
into
ss
cmp
xor
add
fmul
add
int
xlat
cwde
xor
fwait
in
icebp
movups
shl
adc
push
pop
jae
or
push
ss
push
pop
xchg
add
adc
outs
add
ss
inc
sbb
sbb
mov
aad
cmc
(bad)
dec
and
add
add
imul
push
jg
pop
inc
sbb
and
add
ror
aaa
and
add
call
mov
(bad)
add
jb
push
inc
add
adc
adc
lahf
jmp
test
fsub
add
push
arpl
add
jmp
push
add
adc
and
push
scas
inc
mov
xor
aas
lea
inc
scas
adc
imul
imul
ss
xor
or
dec
sbb
movs
mov
sbb
mov
test
mov
adc
idiv
push
daa
inc
frstor
inc
add
(bad)
mov
jo
jno
outs
xchg
lea
xor
mov
sbb
inc
imul
mov
push
push
xor
inc
and
or
loopne
cmp
cli
jno
andnps
add
inc
sub
xor
mov
arpl
adc
xlat
pusha
jno
inc
push
and
add
push
sbb
adc
(bad)
pop
cmp
cdq
(bad)
arpl
adc
sbb
xchg
or
(bad)
in
mov
inc
aas
add
aas
inc
sti
mov
adc
pmaxsw
and
les
cmp
sti
sub
pop
add
jo
push
es
add
adc
xor
adc
cmp
lea
adc
mov
or
inc
(bad)
and
rol
mov
(bad)
ins
xor
sbb
add
xchg
jo
or
jl
mov
mov
jl
popa
ret
and
aam
into
aad
inc
mov
pop
push
or
jmp
not
and
push
adc
shl
addr16
or
rol
cmp
sub
add
leave
pop
rol
dec
mov
mov
dec
jo
(bad)
cld
inc
add
rcl
pushf
clc
rol
add
(bad)
clc
inc
pop
xor
mov
xor
mov
inc
sbb
add
ds
sbb
neg
add
test
pop
lock
in
add
mov
test
cmp
test
lock
or
or
jo
pop
mov
loope
mov
add
xchg
or
in
push
test
add
es
add
push
add
xchg
push
jge
inc
dec
xor
nop
inc
int3
add
add
and
fs
dec
push
inc
push
stos
cld
loop
push
loopne
adc
xor
and
pop
in
rol
retf
dec
adc
movs
test
or
add
bound
les
pop
shl
add
aam
xor
rol
les
adc
adc
scas
stos
xchg
add
inc
adc
arpl
std
jae
inc
lods
push
push
ins
push
movs
sbb
adc
pop
mov
fs
in
or
(bad)
lock
pop
or
pop
jo
aas
xor
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcl
sbb
pop
enter
or
cmp
loope
or
addr16
add
or
sbb
enter
mov
inc
mov
or
xor
es
jae
and
stos
xor
movs
jmp
in
pop
or
xchg
into
sbb
clc
hlt
fldlg2
and
shl
fimul
dec
ds
lods
int3
sbb
rcl
or
mov
lods
inc
pop
mov
(bad)
pop
sbb
mov
sbb
push
mov
dec
adc
test
pop
stos
mov
jg
ret
ss
retf
xchg
or
push
push
mov
cli
lahf
mov
inc
add
add
pop
cmp
fld
loopne
or
xchg
icebp
mov
(bad)
dec
lock
ins
aam
clc
mov
test
push
jmp
jno
shr
inc
push
pop
or
push
jge
mov
xor
sub
or
pop
enter
xor
ins
(bad)
inc
pusha
in
mov
inc
arpl
sar
inc
retf
or
adc
imul
dec
bound
inc
inc
add
xor
cmps
dec
xor
call
fs
repz
jnp
test
inc
sub
adc
ss
adc
retf
xchg
fisub
ret
pusha
shl
(bad)
(bad)
xor
or
and
dec
and
add
adc
leave
inc
and
leave
test
movs
inc
mov
and
aas
jle
and
add
movs
ror
sbb
mov
push
dec
cmps
call
sub
xchg
sub
nop
aas
jnp
mov
push
inc
sbb
add
adc
aam
push
leave
pop
test
mov
adc
cli
sub
sbb
add
mov
adc
inc
sbb
mov
retf
sub
mov
adc
fadd
rol
sbb
test
int
jmp
add
xor
rol
in
add
leave
pusha
mov
xchg
test
push
movs
sub
or
add
or
jmp
xchg
push
push
adc
movups
or
ret
push
dec
add
inc
cmp
add
cmp
mov
adc
jmp
push
imul
mov
xchg
ficomp
sub
bound
dec
cmp
sub
inc
sub
sbb
adc
shl
add
cmc
dec
or
push
mov
mov
inc
jno
adc
adc
adc
mov
jg
or
adc
or
dec
test
add
mov
aas
push
fcom
add
clc
ss
adc
(bad)
lods
cmp
adc
add
xor
push
and
adc
sub
add
pop
inc
loope
cmp
das
push
sub
and
ja
add
sub
push
nop
and
mov
inc
inc
xor
add
call
mov
and
cmp
mov
loope
xor
pop
push
xchg
add
jge
mov
sbb
pusha
or
add
loop
add
rol
aaa
inc
push
push
aad
inc
or
mov
adc
lock
add
inc
add
or
add
mov
adc
loopne
int
mov
jmp
aam
add
mov
cmp
sar
or
and
test
ret
and
lock
add
mov
sub
mov
add
cmp
inc
xchg
loopne
and
mov
pop
cld
sbb
pop
pusha
mov
(bad)
xchg
mov
sbb
lock
and
invd
mov
add
into
and
jl
sbb
cmp
pop
aam
(bad)
sbb
adc
inc
push
inc
loope
psubusb
bound
ror
bound
fldenv
enter
add
mov
inc
push
xor
adc
popa
pop
cmp
dec
xor
adc
lock
pop
push
mov
fimul
add
push
and
push
inc
and
sub
cdq
add
push
adc
pop
enter
nop
loope
add
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
loopne
pop
cmp
mov
inc
jp
into
sbb
jecxz
mov
add
ds
inc
adc
stos
xchg
addr16
(bad)
mov
inc
xchg
ins
xor
cmp
aad
jns
or
xor
inc
cmps
retf
mov
push
std
xchg
test
iret
xchg
ins
aam
and
xchg
cmp
cwde
es
shl
inc
add
cmp
inc
rol
pop
clc
movs
xor
adc
fdiv
inc
jb
or
push
push
cmps
or
inc
arpl
add
adc
adc
sbb
pusha
mov
rol
sbb
inc
mov
dec
les
aas
add
fiadd
and
mov
mov
popa
pop
lock
rcl
imul
or
cmp
push
adc
dec
popa
add
add
and
(bad)
mov
dec
adc
push
in
aas
inc
mov
add
js
inc
call
push
xchg
or
lea
cmp
dec
and
mov
aaa
adc
push
or
nop
xor
or
push
loope
cmp
lods
mov
and
pop
xor
cmp
or
(bad)
int3
mov
inc
or
adc
mov
or
inc
(bad)
and
or
xchg
pop
daa
pop
dec
inc
dec
fs
add
add
lock
push
(bad)
ret
test
add
cld
jno
add
adc
cmp
ja
imul
or
push
inc
or
arpl
fs
mov
or
sub
add
jnp
push
add
inc
add
leave
ins
(bad)
stc
dec
xor
push
jo
daa
add
adc
fcom
pop
in
or
scas
pop
add
mov
(bad)
adc
push
inc
fs
mov
mov
rol
add
ins
clc
add
movs
pop
inc
or
rol
js
adc
mov
pop
xchg
ret
scas
fadd
cmp
push
ss
and
or
and
add
jmp
add
mov
add
sbb
dec
and
ror
mov
sbb
inc
and
int3
imul
sahf
mov
xor
mov
cli
dec
xchg
inc
xchg
pop
fidiv
enter
push
adc
dec
sti
ret
sub
adc
mov
sti
lods
sbb
das
aam
mov
adc
or
push
je
pop
rcl
ror
sar
cs
clc
ret
inc
and
and
add
sub
sbb
pusha
ins
cmc
inc
fisub
rcl
and
xor
push
fdiv
add
inc
mov
mov
cmp
jl
adc
adc
push
pop
ss
xor
add
mov
xor
js
nop
es
retf
cmp
adc
dec
jg
rol
push
add
(bad)
pop
add
and
sub
fdivr
push
call
sar
sub
fbstp
in
xchg
or
inc
and
lea
xor
jno
and
pusha
add
cmp
jecxz
jecxz
dec
mov
mov
leave
push
add
inc
jecxz
adc
or
and
(bad)
loopne
push
call
or
xor
sbb
add
fcomp
add
jge
inc
pop
dec
mov
pop
mov
add
xchg
nop
pop
aam
push
mov
inc
add
pusha
xchg
rcl
clc
and
loope
or
or
loopne
add
sbb
or
imul
rcr
rol
test
add
mov
sub
xor
dec
mov
xchg
push
lea
dec
sbb
lock
pop
lock
cwde
mov
cmp
push
dec
cmp
rol
or
test
aas
adc
es
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
mov
sub
loope
sub
sbb
jb
pop
push
in
bound
xor
shr
jg
push
fs
leave
add
xlat
nop
add
sbb
dec
adc
inc
ret
imul
hlt
gs
ins
pop
data16
xchg
loope
push
popa
mov
sbb
test
movs
jge
inc
aam
rol
cmp
mov
adc
mov
pop
cmp
nop
inc
ja
mov
mov
ins
sub
imul
adc
nop
nop
xchg
cmps
loope
mov
rcl
push
retfw
ss
mov
mov
leave
xchg
pop
loop
imul
add
retf
ss
mov
les
xchg
rol
fwait
mov
inc
jno
or
mov
sbb
adc
sbb
pop
push
or
xchg
xchg
sbb
xchg
push
inc
jg
add
and
mov
and
ret
ja
push
loop
add
dec
ficom
xor
mov
add
or
jns
dec
sub
(bad)
clc
adc
inc
rol
enter
inc
or
jnp
or
clc
xchg
push
pop
jmp
pusha
mov
dec
sbb
inc
mov
or
fistp
jns
inc
sbb
rcl
xor
test
mov
add
and
pop
mov
add
cdq
push
aaa
mov
out
xlat
or
add
jo
add
or
les
cmp
mov
je
inc
es
(bad)
xor
add
adc
inc
add
adc
and
add
imul
rcl
(bad)
js
(bad)
aas
mov
fs
(bad)
jno
push
mov
cli
iret
mov
add
adc
jmp
push
sub
sub
push
push
push
inc
adc
push
stos
inc
inc
movs
xchg
dec
or
push
lods
inc
aaa
or
sar
pop
repz
jmp
push
movs
loopne
adc
push
xchg
adc
cld
jecxz
inc
inc
loopne
inc
stos
in
xchg
ret
add
mov
mov
inc
and
ret
inc
daa
fisttp
adc
mov
cmp
fwait
xor
repz
or
aam
or
push
dec
mov
adc
push
fs
aaa
inc
or
clc
xchg
in
mov
movs
fimul
ret
rcr
das
shl
sub
cs
add
jae
sub
daa
push
adc
dec
in
jae
std
push
je
adc
add
add
inc
xor
xchg
add
and
ins
loop
pop
in
inc
xor
stc
and
push
or
and
les
hlt
call
iret
add
iret
mov
loop
mov
(bad)
adc
hlt
ret
push
into
je
push
inc
push
inc
or
lods
nop
add
add
or
mov
adc
mov
je
xor
or
xor
add
push
into
rcr
jns
sbb
add
or
dec
sbb
push
shl
sbb
or
inc
or
lods
arpl
clc
dec
cmp
dec
or
xorps
add
aas
pop
pop
fidivr
dec
or
loopne
inc
scas
xor
cmp
add
lods
int
add
push
or
in
adc
ins
movs
or
test
dec
jo
vmread
add
int3
and
fld
leave
pop
les
or
test
(bad)
lock
pop
ins
inc
sbb
loopne
sub
add
pop
sti
(bad)
mov
mov
or
test
adc
sub
nop
inc
pop
mov
add
mov
adc
cmc
cld
ret
add
rol
mov
or
add
sub
mov
inc
int3
add
adc
cmp
pop
nop
and
xor
mov
adc
rol
cli
loopne
sbb
pop
mov
push
or
aam
inc
add
pop
inc
push
(bad)
adc
pop
dec
les
cli
and
adc
hlt
and
add
loopne
push
call
pop
aaa
xchg
add
pop
clc
xchg
and
jg
pusha
and
mov
verr
loope
mov
pusha
pop
and
sbb
sbb
sub
addr16
cs
dec
and
loopne
(bad)
push
and
daa
push
lahf
ins
jp
fwait
pop
jmp
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
das
sbb
jne
adc
pop
enter
or
dec
mov
mov
or
or
pop
ins
add
mov
cmovnp
push
sub
pushf
jno
lock
test
(bad)
mov
cmps
pop
xchg
sub
add
outs
and
cwde
stc
scas
cmps
mov
leave
jns
inc
or
(bad)
cmp
enter
std
arpl
imul
sub
add
push
hlt
ja
push
mov
add
mov
shl
in
mov
fisubr
mov
and
cmps
dec
sbb
and
sub
hlt
int3
and
mov
imul
sbb
add
push
les
test
call
es
xor
add
push
clc
sbb
add
rol
(bad)
stc
outs
pop
call
pushf
inc
fadd
jnp
jo
and
adc
mov
jbe
imul
mov
loope
push
jmp
inc
mov
or
sub
cld
std
addr16
pusha
cmp
push
rcl
push
push
in
xchg
jp
lods
mov
aas
(bad)
rol
cvtps2pi
inc
daa
fwait
cld
xor
pop
jg
pop
rol
lock
or
rol
adc
jns
(bad)
sbb
and
dec
and
test
adc
ret
or
stc
inc
mov
js
fcom
push
rcl
or
or
aad
int
xor
dec
mov
retf
or
addr16
in
inc
pop
sbb
jno
or
subps
movs
or
dec
pushf
call
cmp
sbb
jo
add
add
cmp
add
inc
add
adc
inc
adc
inc
adc
ret
jae
push
xchg
aas
sub
pop
shr
leave
call
loopne
or
aaa
lock
cmp
or
icebp
shld
mov
pusha
popa
sub
adc
test
shl
jl
add
fnsave
push
jmp
and
inc
sahf
mov
or
xor
nop
mov
push
adc
mov
aas
xor
fistp
fwait
jmp
int
jecxz
and
shl
push
pop
mov
push
inc
mov
test
and
cld
int
push
mov
push
sbb
repnz
jecxz
inc
adc
jb
nop
pop
ins
aam
xor
inc
add
push
dec
arpl
outs
add
add
dec
mov
ins
push
and
ror
add
pop
and
mov
pop
mov
push
in
adc
js
rcl
sub
dec
or
add
mov
mov
inc
sub
xor
mov
push
or
add
push
les
xlat
or
cli
xor
imul
enter
lods
hlt
inc
add
dec
dec
rol
and
or
mov
jno
sbb
fadd
inc
inc
xor
rcr
pop
and
int
or
and
jb
(bad)
(bad)
nop
ret
nop
xchg
enter
repz
or
ficom
sbb
pushf
sub
nop
inc
pop
adc
or
sbb
hlt
enter
jo
sbb
in
(bad)
cmp
lock
retf
and
mov
lock
push
fs
push
test
push
cwde
add
pusha
add
pushf
add
sub
dec
adc
add
dec
mov
test
sbb
nop
or
push
paddb
mov
inc
mov
or
mov
loopne
and
cwde
cld
mov
adc
add
les
add
clc
ret
xchg
test
mov
fld
test
loop
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
iret
lahf
inc
or
sub
loopne
xchg
sbb
pushf
clc
lock
xchg
mov
pop
adc
lahf
xor
inc
mov
xchg
and
dec
movs
inc
push
push
add
jmp
inc
shl
xchg
adc
push
imul
xchg
sbb
pop
std
fs
xor
mov
ins
sahf
sub
xchg
rcl
or
call
hlt
sbb
scas
cmc
push
xor
inc
lock
xlat
xor
pop
repz
outs
loop
push
sub
ret
jo
(bad)
xchg
or
les
inc
mov
jmp
ror
adc
sub
int
mov
mov
add
inc
enter
push
xchg
pop
daa
in
ret
jg
add
ins
retf
fcomi
mov
xor
xchg
sub
leave
loopne
pop
mov
or
idiv
mov
inc
pusha
pop
fwait
jecxz
and
rcr
sub
sbb
or
add
or
add
ficomp
test
mov
add
push
push
sub
add
push
inc
fcmovbe
cmps
or
add
pop
xor
icebp
cld
xor
add
adc
dec
add
adc
aam
ud2
pop
cs
sbb
cld
and
aas
adc
rol
cmp
cwde
arpl
push
cld
add
aas
pop
adc
ret
sub
rcl
xor
pop
(bad)
mov
push
and
out
gs
adc
jbe
int
inc
test
sbb
movs
or
push
add
sbb
mov
or
add
or
js
rol
es
push
pop
jmp
lds
inc
inc
dec
mov
and
and
or
enter
pop
mov
add
scas
fs
inc
rcl
push
jmp
(bad)
push
add
lods
xchg
push
sub
rcl
xchg
sbb
xor
ins
jmp
cdq
test
push
movs
adc
add
jmp
stos
xor
les
push
inc
lds
inc
cwde
rcl
or
or
imul
mov
inc
xor
inc
pop
daa
push
lods
inc
mov
jl
xlat
aas
pop
ror
aas
leave
mov
test
rol
aam
adc
and
cmp
push
shl
adc
pop
shr
add
or
mov
(bad)
fwait
dec
and
or
pop
cwde
dec
or
lock
mov
mov
inc
rcl
pop
das
add
fsub
adc
xor
ret
pushf
ss
mov
sub
rol
and
outs
or
xchg
and
adc
xor
mov
(bad)
loopne
inc
adc
inc
pop
and
or
call
pop
cmps
aam
adc
add
push
adc
push
sbb
shl
inc
and
repz
(bad)
js
inc
add
mov
js
inc
or
cmps
sub
iret
or
jae
lds
pop
inc
aam
xor
push
mov
jno
mov
leave
push
mov
aas
add
iret
shl
hlt
in
and
push
imul
jo
neg
leave
push
jge
xor
xchg
sbb
pop
cmp
add
or
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
shl
add
sub
inc
sub
dec
xchg
bound
sbb
sub
cmc
out
push
xchg
jg
scas
xchg
mov
push
ja
int3
lods
and
jmp
hlt
dec
fistp
outs
pop
nop
shl
jecxz
dec
jl
loopne
jo
(bad)
dec
(bad)
cwde
add
inc
popf
lea
xor
inc
loop
lods
dec
adc
aad
outs
and
jo
lldt
or
jecxz
jnp
(bad)
cdq
sbb
add
cmc
iret
test
push
cmp
push
add
dec
push
stos
lahf
cmp
loope
pop
sbb
into
cmps
gs
xlat
sar
pusha
movs
jno
leave
vphaddubd
pop
or
and
movs
mov
and
mov
or
jmp
cld
dec
arpl
shl
dec
test
pusha
(bad)
push
and
cmp
mov
loop
sub
out
cmps
inc
mov
xor
sbb
cmc
push
jo
cmp
into
mov
les
add
mov
inc
add
mov
ss
loopne
and
int
push
add
dec
xchg
int
inc
or
inc
or
add
inc
shl
shl
cmp
(bad)
frndint
rol
add
adc
add
dec
mov
aas
lock
fs
fnstcw
and
pop
push
je
jbe
add
xor
cdq
data16
fs
cwde
jo
cdq
add
or
(bad)
clc
daa
and
add
and
cld
jecxz
push
cmp
or
ins
clc
and
(bad)
xchg
and
test
outs
or
movs
push
push
hlt
add
fidiv
test
xor
or
enter
jmp
jmp
xor
mov
add
xor
or
es
pop
or
adc
add
mov
loopne
xor
push
mov
rol
or
loop
fild
inc
xor
mov
jmp
xchg
pop
sbb
getsec
cs
icebp
cmps
inc
je
loop
or
cld
xor
xor
lods
nop
fnstcw
fstp
inc
cvttss2si
and
inc
pop
xor
add
(bad)
cmp
(bad)
push
rol
adc
push
js
rol
add
pop
loope
inc
inc
movs
or
adc
mov
sbb
fcom
int
dec
cmp
or
add
adc
inc
test
stc
xor
pop
xor
mov
dec
xchg
mov
xor
pop
lock
xor
and
sub
call
inc
fwait
inc
addr16
jmp
imul
add
add
xchg
sbb
cmp
add
or
nop
xor
inc
and
ret
inc
or
pop
push
and
inc
ss
or
popa
and
je
ret
xchg
add
adc
cs
arpl
cs
adc
push
push
sar
inc
adc
(bad)
adc
adc
daa
add
mov
rol
movs
icebp
add
dec
sub
icebp
inc
in
inc
xchg
dec
adc
ins
inc
lock
sti
jl
adc
inc
int3
loopne
and
push
inc
sub
clc
mov
ins
mov
jecxz
nop
push
cmp
jmp
sub
cmp
clc
inc
add
les
sbb
das
push
and
xchg
mov
dec
inc
add
movs
sbb
stc
inc
aaa
push
mov
add
pop
inc
mov
pcmpgtw
rol
outs
adc
pop
dec
jmp
add
fcomi
xchg
mov
add
es
pop
xchg
into
xchg
rcl
and
and
cld
and
dec
add
mov
xchg
mov
lock
(bad)
sbb
add
and
pop
test
add
bound
and
(bad)
jp
jecxz
jbe
sub
inc
or
sub
ja
arpl
sbb
lea
jnp
js
inc
jb
add
es
and
mov
jle
mov
cmp
or
add
jb
jnp
add
cli
icebp
or
sub
and
xchg
mov
ficom
inc
add
mov
aam
mov
in
xchg
push
inc
cmp
(bad)
jo
and
ret
int
cmp
xor
or
sub
out
push
add
or
stc
sbb
or
sub
cld
xchg
inc
sub
and
movs
mul
jp
inc
add
inc
sub
adc
add
shl
sbb
sbb
inc
mov
nop
jb
mov
(bad)
cmp
push
scas
je
sub
adc
xor
add
or
or
jbe
adc
jo
nop
inc
push
add
push
mov
mov
adc
xor
adc
add
push
adc
adc
or
and
xchg
mov
add
and
add
pop
adc
sbb
pop
cmp
sbb
pusha
test
add
add
add
dec
xor
inc
pop
loop
call
lds
hlt
xor
xor
pop
rcl
ds
pop
(bad)
cmp
loopne
and
shl
inc
push
sbb
adc
push
inc
aas
std
std
arpl
imul
jne
ret
cli
pop
xor
cmc
punpcklwd
add
in
and
push
inc
inc
imul
aam
inc
push
in
inc
bnd
push
push
add
adc
loope
jmp
mov
sbb
or
add
rol
in
mov
cmp
or
xor
sbb
sahf
popa
add
inc
mov
ret
pop
lock
push
mov
popa
or
test
adc
and
xor
cmp
sbb
add
stc
add
dec
lock
inc
inc
push
xor
inc
push
and
je
sbb
mov
int
fs
pop
fist
movs
inc
hlt
pop
xor
sub
add
sub
jae
and
xor
push
loope
repnz
call
inc
sub
add
int3
sbb
clc
stos
inc
mov
xor
pop
fmul
add
iret
movs
outs
pop
aas
loopne
adc
push
arpl
(bad)
pop
(bad)
push
push
and
jo
dec
cmp
add
loopne
push
repnz
mov
add
or
mov
dec
adc
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
xor
add
sub
scas
int
sbb
cld
mov
dec
xchg
bound
xor
addr16
mov
stc
aaa
addr16
sbb
mov
jg
push
cmp
ret
sbb
nop
stos
xchg
and
call
mov
pop
and
jmp
push
mov
mov
and
shr
mov
jl
mov
shl
add
pop
dec
pop
and
pop
xchg
pop
mov
pop
adc
and
xor
or
inc
cmp
daa
ja
shl
xchg
or
test
movs
jge
test
fild
mov
push
jns
dec
xchg
dec
sahf
es
jbe
rol
xchg
lea
pop
and
and
pop
inc
mov
sbb
mov
iret
aas
sbb
and
in
inc
add
ins
sub
dec
sahf
sub
mov
sbb
jecxz
pop
add
iret
dec
jecxz
out
je
(bad)
pop
sbb
adc
fild
jmp
arpl
test
int
add
sbb
aam
shl
xchg
test
push
inc
xlat
mov
or
or
iret
adc
icebp
inc
daa
nop
shl
loope
mov
sbb
adc
or
aas
push
add
xor
in
inc
rcl
jo
(bad)
sbb
repz
movs
stc
xor
sbb
add
xchg
aas
fst
icebp
iret
add
add
imul
fimul
inc
or
inc
inc
inc
inc
cli
or
dec
xlat
cld
inc
test
inc
ficomp
push
add
lds
and
lods
test
xor
inc
xchg
add
or
dec
jecxz
and
mov
cmp
or
sbb
sbb
mov
adc
push
or
or
push
xchg
popf
ins
inc
les
clc
inc
int
fimul
inc
and
aas
add
add
inc
or
nop
jp
(bad)
xchg
pop
or
int
popf
cld
inc
inc
cmp
cld
jecxz
push
fnstenv
and
adc
sub
leave
(bad)
mov
mov
das
sbb
sub
mov
rol
cmp
jo
xor
sbb
nop
or
inc
adc
cdq
lods
or
mov
leave
cmova
loopne
xchg
add
pusha
mov
sbb
add
lock
mov
loopne
adc
xchg
xor
or
jp
sub
ret
adc
inc
or
dec
adc
and
repz
(bad)
or
inc
or
fsub
das
pop
push
adc
into
cmp
inc
inc
rcl
ret
push
xchg
mov
inc
jo
inc
fs
ret
add
and
je
jge
je
ret
cmp
inc
jae
pushf
cmp
pusha
adc
sub
sub
jo
aas
rcl
je
pop
sbb
push
lock
or
and
pop
push
int
adc
add
xchg
ss
adc
jge
test
dec
adc
ins
jb
aaa
mov
adc
pop
nop
push
ret
prefetch
or
or
inc
lock
into
inc
aaa
(bad)
jne
pop
dec
aad
mov
mov
xor
add
pop
dec
xchg
pop
sbb
sub
adc
sbb
jbe
adc
fs
adc
dec
loopne
hlt
xlat
pop
and
movs
mov
or
add
dec
add
sbb
inc
shr
dec
pushf
clc
push
add
mov
add
add
add
fcmovu
add
jmp
sub
xchg
inc
adc
and
adc
das
cmp
sub
(bad)
xor
pop
in
or
nop
(bad)
jbe
sub
adc
and
add
sbb
mov
add
sbb
xchg
sub
pop
leave
dec
push
adc
mov
cmp
pmuludq
add
aaa
pusha
inc
pop
and
sub
(bad)
mov
push
(bad)
loopne
xor
inc
dec
sub
push
ss
cmp
xchg
and
pop
add
test
enter
or
xor
inc
or
add
inc
xchg
and
in
inc
or
adc
xor
add
sar
sub
or
rcl
pusha
sbb
add
pop
shr
and
dec
and
xchg
pop
sbb
add
js
add
pop
inc
push
js
add
add
push
xor
or
mov
test
sbb
push
rol
add
les
add
icebp
pop
or
add
xor
sbb
ret
sbb
add
(bad)
(bad)
arpl
lods
push
or
movs
sbb
shl
and
arpl
cli
and
das
mov
sbb
loope
pop
pushf
jecxz
outs
adc
inc
add
or
pop
jg
mov
push
add
or
cmp
xchg
adc
adc
enter
rcl
or
stc
sbb
add
add
sbb
fdivr
nop
pop
shr
stos
mov
lea
popa
or
adc
cmp
jno
fmul
xchg
stos
or
xchg
clc
adc
push
sbb
movs
add
mov
scas
call
ss
jno
pop
shl
jo
or
popa
adc
adc
xchg
push
add
fadd
and
add
inc
in
and
or
ss
or
dec
ins
or
cmp
cmp
clc
les
adc
adc
add
mov
iret
push
bound
push
push
add
pop
mov
sub
test
or
mov
mov
mov
jbe
xlat
jg
and
adc
leave
or
or
add
push
(bad)
push
adc
mov
adc
mul
shr
mov
adc
add
or
pop
or
lock
and
cmp
or
and
xchg
mov
test
pop
add
add
dec
adc
inc
fs
adc
jg
add
pop
mov
and
add
or
inc
sub
add
add
add
add
or
add
mov
push
aam
movs
mov
jg
adc
sar
fwait
enter
and
and
mov
mov
add
and
mov
fcmovnb
sub
mov
repz
ret
pop
push
push
shr
sbb
loope
and
test
and
pop
mov
enter
dec
mov
xor
mov
stos
fs
xor
cmps
mov
call
hlt
js
dec
test
inc
add
adc
loope
add
cmp
mov
enter
or
or
xor
push
mov
cwde
mov
arpl
and
push
adc
push
rcl
fwait
in
jmp
push
add
jp
mov
and
test
ins
sbb
sub
adc
fucomi
sub
loope
add
test
jecxz
push
jns
add
mov
movs
or
call
xchg
cwde
inc
dec
movs
ficomp
and
je
pop
jge
mov
lods
add
add
mov
push
std
arpl
add
aas
cmp
enter
add
push
adc
lock
ss
sub
ret
and
or
pusha
inc
add
lods
icebp
lahf
xor
or
mov
ficom
push
adc
add
shl
fmul
sub
xchg
in
sub
clc
mov
fs
adc
retf
ss
je
ret
aaa
push
test
int
arpl
push
add
adc
(bad)
adc
add
sbb
cwde
addr16
lahf
inc
fld1
inc
ret
int3
dec
cmps
cmp
adc
lock
inc
push
mov
je
xchg
out
and
push
or
adc
or
or
nop
sahf
pusha
mov
les
or
rol
aam
mov
xchg
ins
cmp
or
xor
das
nop
je
rol
sahf
sub
push
lods
push
in
add
iret
pop
jbe
add
inc
jne
add
push
cmp
and
shr
or
js
or
iret
pop
fst
test
(bad)
sbb
inc
mov
and
and
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
sbb
mov
sub
mov
shl
sbb
pushf
dec
push
xchg
pushf
aam
retf
xchg
test
sbb
inc
and
inc
test
mov
add
pop
mov
mov
push
mov
inc
dec
fwait
(bad)
mov
mov
xor
and
mov
outs
mov
push
pop
pushf
mov
xlat
add
inc
mov
and
jl
leave
leave
push
dec
punpckhdq
mul
push
popf
jbe
or
retf
mov
inc
in
les
inc
jo
xor
mov
addr16
adc
and
outs
mov
iret
add
sub
push
dec
sub
sbb
xor
test
sub
mov
xchg
outs
rol
mov
sub
mov
retf
xor
add
dec
sti
sbb
mov
das
add
ret
sub
frstor
inc
or
or
inc
dec
sbb
adc
(bad)
or
fstp
push
fimul
fisub
pop
pop
mov
das
lea
jg
imul
mov
adc
in
rol
cld
arpl
rcl
cmp
adc
cmp
fs
mov
mov
xor
xor
push
add
loop
or
dec
inc
fnstenv
sbb
pusha
xchg
sub
loopne
rcl
pop
repnz
dec
dec
sub
test
or
in
mov
hlt
jo
test
shr
shl
rcl
xchg
shl
rol
mov
test
outs
sbb
xor
push
popa
inc
dec
fcmovu
loopne
adc
in
pop
add
xchg
add
sar
cmp
inc
xor
add
mov
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
sbb
pusha
inc
jg
add
loope
or
(bad)
push
xchg
loope
inc
ins
pop
jecxz
push
push
push
mov
sub
pop
ss
push
xor
cmp
ins
nop
sbb
inc
cs
popa
rol
sbb
cmp
sahf
aam
cli
in
mov
xchg
jmp
pop
mov
pop
add
xchg
mov
sbb
mov
mov
xchg
dec
xor
lea
int3
fcom
adc
sbb
dec
xchg
outs
dec
ret
out
(bad)
sbb
rol
or
add
or
lds
sbb
xlat
or
test
popa
rol
fcos
mov
add
push
add
stc
ja
lahf
pop
nop
add
int3
and
add
and
cmps
dec
adc
add
test
inc
mov
or
xchg
stos
clc
pop
std
push
enter
inc
test
pusha
test
loopne
inc
movs
movdqu
outs
and
dec
inc
add
stc
add
or
inc
sub
add
add
add
add
or
std
std
sbb
mov
push
aam
ret
and
or
dec
hlt
cmps
mov
adc
jo
inc
cs
bound
inc
inc
ret
and
pop
jmp
pop
dec
or
shl
retf
jno
in
mov
inc
cwde
or
or
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
xor
or
sub
add
cmp
(bad)
lods
dec
je
sub
cld
mov
add
and
inc
repnz
xor
dec
loopne
jg
push
adc
lock
xor
rol
xor
cs
cmp
in
add
add
fild
xlat
(bad)
and
call
pop
xchg
cmc
jmp
push
mov
jg
std
leave
cmp
(bad)
mov
adc
out
and
(bad)
out
add
imul
sbb
jmp
dec
sub
cwde
or
retf
mov
pusha
or
cmp
(bad)
and
inc
mov
adc
enter
imul
add
sub
or
into
dec
gs
(bad)
adc
fdivr
gs
and
pop
out
or
imul
mov
imul
mov
popa
(bad)
fstp
adc
sub
fidiv
test
adc
lds
js
add
(bad)
inc
es
push
ret
push
mov
add
push
dec
inc
nop
push
xchg
(bad)
lea
adc
mov
ins
jae
adc
inc
and
xchg
loope
jmp
cli
and
inc
jmp
mov
inc
inc
daa
rol
movs
push
(bad)
call
push
pop
add
and
push
or
dec
or
jbe
adc
cwde
or
dec
out
push
popa
xchg
call
push
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
dec
adc
imul
sbb
mov
push
ret
or
mov
xchg
push
inc
sub
loop
add
and
adc
sbb
dec
pop
dec
and
cmp
add
aas
jle
or
add
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
mov
adc
mov
push
enter
imul
pushf
ret
add
adc
pushf
aas
test
std
mov
and
fild
push
test
xchg
sbb
cld
pusha
in
xor
mov
push
stc
psrlq
sbb
xor
jl
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
push
ins
(bad)
cld
shl
dec
push
test
xor
add
mov
jno
ret
div
mov
add
jg
mov
pusha
mov
sub
int
adc
push
ss
aaa
test
adc
xor
adc
dec
stos
mov
pushf
jg
xchg
push
retf
xlat
scas
pusha
ret
mov
mov
shr
push
dec
or
sbb
neg
sub
scas
mov
std
xchg
and
aad
inc
pop
and
inc
adc
dec
and
xchg
add
int
adc
and
test
shr
test
aas
test
scas
cmp
xor
add
and
add
or
inc
sub
add
add
add
add
or
dec
sbb
mov
adc
mov
push
enter
imul
pushf
ret
add
adc
pushf
aas
test
std
mov
and
fild
push
test
xchg
sbb
cld
pusha
in
xor
mov
push
stc
psrlq
sbb
xor
jl
mov
add
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
mov
push
ins
(bad)
cld
shl
dec
push
test
xor
add
mov
jno
ret
div
mov
add
jg
mov
pusha
mov
sub
int
adc
push
ss
aaa
test
adc
xor
adc
dec
stos
mov
pushf
jg
or
add
and
add
or
inc
sub
add
add
or
dec
pop
add
sar
mov
dec
jmp
push
cmp
push
aas
mov
jecxz
xchg
jg
(bad)
imul
mov
add
mov
mov
mov
cmp
bound
ins
jmp
lahf
mov
repz
xchg
pop
loopne
pushf
repnz
and
cmp
adc
mov
add
dec
add
cmp
add
add
add
popa
xor
sbb
sbb
add
add
add
add
inc
cmp
popa
xor
xor
idiv
add
sbb
xor
dec
add
in
(bad)
stos
add
(bad)
(bad)
scas
jp
pop
test
stos
xchg
out
neg
sbb
shl
rcr
aad
in
fmul
(bad)
in
add
repnz
(bad)
std
add
jmp
enter
ret
add
dec
add
fiadd
mov
add
icebp
push
mov
jecxz
add
not
lods
xchg
fwait
add
repz
jecxz
lods
mov
imul
(bad)
test
mov
(bad)
rol
jnp
adc
fsub
mov
(bad)
loope
arpl
in
repnz
retf
cli
(bad)
push
in
aam
cld
ret
mov
(bad)
aad
sbb
cmp
mov
in
shl
(bad)
fld
mov
pop
xchg
mov
rol
fmul
fdiv
sti
sahf
add
push
stc
leave
dec
jecxz
add
out
std
mov
fstp
(bad)
lock
repnz
outs
retf
scas
dec
(bad)
jmp
fxch
(bad)
jmp
mov
sti
icebp
retf
scas
xchg
enter
cmp
add
std
aad
(bad)
pop
(bad)
jmp
(bad)
(bad)
ror
loope
sti
fimul
ret
(bad)
fdivr
inc
mov
mov
cmps
pop
aaa
retf
jns
mov
mov
loopne
mov
cli
push
push
xchg
dec
add
mov
rep
add
ficomp
in
(bad)
repz
bound
mul
pop
cmc
repz
xchg
pop
adc
mov
xchg
jp
int3
mov
push
push
or
fmul
test
mov
in
stc
(bad)
sti
in
les
ret
mov
(bad)
in
leave
push
add
push
and
out
in
dec
stos
add
stc
(bad)
mov
xchg
(bad)
jmp
movs
pushf
lahf
mov
cmc
jae
test
mov
(bad)
(bad)
mov
add
test
(bad)
(bad)
cli
icebp
retf
cwde
mov
ret
ror
sti
(bad)
call
add
mov
cli
sti
(bad)
(bad)
rol
div
test
or
mov
out
lock
xlat
or
out
or
cmps
adc
loop
loop
push
fbstp
out
sbb
xchg
sbb
sti
cld
lods
xchg
outs
stc
aam
push
add
ror
jmp
adc
mov
sar
stc
into
add
out
adc
movs
or
test
cli
stos
or
rcl
sahf
sbb
mov
ret
movs
sbb
clc
add
loopne
shr
(bad)
mov
rcr
loopne
mov
jns
int3
int3
shl
loope
mov
add
mov
out
out
lock
sar
int
loope
call
cmps
nop
js
fld
neg
add
mov
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
dec
das
pop
sub
xchg
rol
dec
mov
movs
popa
ror
cmp
inc
inc
pop
pop
and
test
and
fdivr
push
and
sub
adc
or
push
push
arpl
xor
cmp
sbb
test
and
add
dec
mov
dec
add
pusha
dec
add
mov
das
pop
xor
push
cmps
inc
adc
mov
loop
cwde
cmp
call
push
sbb
arpl
mov
or
adc
and
out
add
sbb
lods
inc
mov
xchg
inc
js
mov
jmp
mov
push
add
lea
sbb
jns
sbb
dec
push
repnz
jmp
call
test
mov
popa
rol
push
push
pop
fdiv
pusha
retf
jmp
adc
xchg
add
outs
aam
mov
dec
test
ja
sti
not
sbb
xchg
jg
push
pusha
xor
push
adc
hlt
nop
add
cwde
in
test
movs
mov
sar
out
or
inc
shl
add
sub
sbb
push
inc
adc
adc
pop
mov
add
or
or
adc
rol
pop
mov
jbe
ins
adc
cmp
psllq
ret
add
test
push
rcl
xor
rep
mov
push
xchg
cmp
add
xchg
xor
ret
clc
mov
adc
xor
daa
imul
inc
and
inc
or
or
int3
add
call
inc
and
pushf
jae
jns
add
xor
add
pop
push
inc
jb
je
dec
inc
add
or
add
daa
add
test
or
and
push
dec
add
or
les
add
loope
inc
sub
add
add
lods
mov
and
aas
lock
enter
mov
pop
add
test
lods
inc
ret
cmp
mov
mov
and
inc
test
pop
repz
mov
xor
or
cli
mov
add
xchg
add
or
add
xchg
ja
adc
add
or
sbb
fiadd
jae
sub
pusha
xor
and
adc
adc
es
cmp
mov
add
add
inc
or
sbb
or
cwde
jae
and
fiadd
pop
mov
aas
push
loope
xchg
push
cmp
push
inc
pop
and
jb
add
and
iret
cmp
pusha
xor
aaa
jl
hlt
stos
mov
push
jo
add
cmp
jno
inc
add
cmp
ret
add
inc
mov
or
lock
xchg
enter
je
fld
shl
push
nop
add
in
rcl
xor
fcom
jb
or
enter
scas
mov
into
cmp
mov
jecxz
(bad)
xor
(bad)
sbb
pop
sbb
jnp
sbb
pushf
xor
add
lock
and
faddp
xchg
pop
mov
fisub
pusha
xchg
inc
push
xchg
mov
sahf
jge
cmps
jns
fnsave
sub
int
mov
xchg
pop
cmp
adc
in
aas
in
add
add
jle
popf
out
vpunpckhbw
cmp
push
and
adc
loope
jno
loop
rcl
inc
or
jno
and
pop
and
mov
or
mov
aas
pusha
add
jg
inc
cli
call
xchg
sbb
rol
cwde
add
add
push
mov
cmps
xor
add
xor
sub
or
test
xor
xchg
add
dec
push
xor
xor
rol
xor
jbe
sbb
and
popa
push
add
add
and
and
and
sbb
rol
add
dec
add
fcmovbe
push
pop
adc
or
inc
or
pusha
adc
cmp
rol
enter
arpl
add
pusha
adc
sbb
adc
push
add
lock
or
sbb
ds
xor
enter
ror
ds
sub
xor
mov
jne
inc
mov
sbb
adc
xchg
pusha
inc
xor
mov
test
cmp
dec
pusha
jae
add
adc
pop
push
lods
and
xchg
xor
enter
or
test
mov
sbb
push
add
dec
cwde
inc
pop
or
add
xor
rol
sbb
and
retf
add
mov
mov
test
sub
add
lods
and
nop
add
jle
sub
inc
xchg
push
outs
call
test
xchg
xor
or
ret
adc
retf
adc
xchg
push
fadd
add
add
cwde
push
add
add
jle
xor
xchg
push
xchg
mov
pop
test
add
xchg
push
sbb
adc
sub
or
sub
test
mov
xor
nop
and
or
xor
inc
xor
xchg
mov
scas
outs
xor
sgdtd
and
mov
xor
mov
test
(bad)
fidiv
xchg
or
inc
cmp
or
data16
xchg
femms
lock
inc
mov
sub
je
pop
add
lock
pop
(bad)
or
xchg
test
or
add
xor
or
and
sbb
rol
js
mov
adc
pop
loope
inc
push
adc
xchg
nop
add
xchg
or
add
cli
shl
and
rol
add
add
pop
push
and
push
inc
bound
jo
add
mov
push
add
cdq
sbb
or
adc
push
xor
sbb
inc
pop
cmp
or
nop
test
shl
fwait
loop
fbld
stos
das
dec
popa
or
or
mov
inc
add
lahf
add
add
mov
call
(bad)
lds
inc
add
inc
mov
lods
cmp
movs
ret
or
jbe
clc
test
imul
je
leave
pop
lock
scas
mov
and
jecxz
dec
rcr
add
dec
jmp
pop
loopne
and
xchg
not
sbb
dec
cmc
push
je
adc
add
into
and
push
add
add
enter
pusha
add
enter
or
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
sub
or
sbb
repnz
and
push
inc
mov
dec
push
inc
add
cld
inc
repnz
and
adc
inc
jmp
push
hlt
ror
adc
int
mov
je
mov
push
(bad)
in
sbb
aad
ja
shl
icebp
mov
iret
daa
leave
push
mov
mov
sub
imul
sub
lods
inc
fidivr
in
neg
adc
cmp
or
pop
hlt
ror
pop
xor
test
cmps
fs
mov
mov
jmp
clc
loopne
mov
sub
iret
sbb
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
iret
pushf
je
aam
adc
popa
add
jl
and
push
pop
push
mov
mov
mov
mov
adc
icebp
inc
ds
or
pop
inc
ror
rcl
xchg
and
add
daa
add
inc
ins
js
dec
mov
sub
popf
cmc
outs
jns
in
jne
cmp
push
ret
sub
push
and
outs
pop
sub
loopne
fld
xor
fild
add
loopne
pop
outs
clc
loope
pop
cmp
arpl
js
inc
push
lods
loope
(bad)
call
into
or
push
dec
push
add
cmps
stc
out
or
inc
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
hlt
pop
adc
popf
sub
and
repnz
and
nop
inc
adc
sbb
sbb
bswap
add
push
movs
add
loop
movs
push
dec
adc
inc
adc
add
dec
hlt
aas
adc
aaa
pop
aam
rol
xor
das
or
push
push
int
sub
leave
mov
hlt
xor
mov
ins
not
and
lods
cld
shl
jb
xlat
(bad)
sbb
mov
and
ss
std
sahf
loopne
dec
xchg
inc
loop
mov
dec
je
aas
mov
je
in
mov
inc
adc
ss
cld
jae
sbb
dec
add
adc
and
inc
mov
pusha
mov
and
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
outs
inc
out
xchg
les
pusha
xchg
inc
push
xchg
adc
aas
or
push
cs
and
test
sub
cld
xor
adc
mov
and
and
jge
hlt
aas
cmp
popf
mov
inc
inc
ja
xor
aas
inc
sub
loope
das
call
xchg
mov
pusha
inc
fst
dec
xor
push
ficomp
add
jo
popf
ror
aad
push
add
and
add
inc
add
adc
inc
cmps
cld
ror
jno
push
ss
lock
das
mov
xor
pop
pushf
repnz
or
mov
fs
inc
ret
sub
xchg
cs
add
call
and
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
sub
or
sbb
repnz
and
push
inc
mov
dec
push
inc
add
cld
inc
repnz
and
mov
nop
cmp
dec
je
dec
fmul
je
adc
ss
aam
inc
sbb
test
dec
sar
sar
jecxz
(bad)
dec
xchg
sub
rcl
sbb
xchg
add
sub
push
aaa
dec
icebp
rol
retf
add
call
xor
sbb
mov
xchg
or
mov
dec
je
aas
mov
int3
loopne
push
xchg
je
aas
jno
pop
cmp
mov
daa
(bad)
cwde
dec
rcl
shl
xor
and
mov
sub
adc
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
iret
pushf
je
aam
adc
popa
add
jl
and
push
pop
dec
je
outs
loope
add
inc
call
rcr
dec
nop
inc
and
(bad)
icebp
inc
ds
dec
into
inc
dec
je
inc
pop
add
xor
test
adc
add
push
adc
std
(bad)
int
mov
cmc
aad
fbld
bndstx
mov
pop
shl
adc
call
inc
jbe
iret
push
ret
arpl
xchg
nop
lea
xor
fs
inc
mov
adc
push
inc
inc
cmp
dec
cmp
cmp
xchg
fs
inc
into
push
retf
lock
das
xchg
ja
dec
out
jge
push
pop
mov
or
int
jo
jmp
nop
add
scas
jnp
adc
and
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
hlt
pop
adc
popf
sub
and
repnz
and
nop
inc
adc
sbb
sbb
bswap
add
sub
cmp
test
jno
nop
rol
inc
add
inc
ins
and
cmc
aas
mov
pop
arpl
sub
sub
mov
mov
and
les
loopne
js
lods
neg
jl
das
int
cmp
or
je
loope
push
icebp
dec
cmp
pop
xor
push
sbb
sub
or
adc
xor
mov
nop
aas
sub
add
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
lsl
or
sub
push
ret
xchg
or
and
sar
ins
mov
scas
pop
inc
adc
inc
adc
mov
and
mov
dec
fwait
pop
cmp
cmp
dec
ret
sbb
xor
(bad)
and
cld
std
mov
call
jmp
cmp
pop
(bad)
cmp
sbb
mov
add
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
adc
aas
or
adc
sbb
cmps
pop
ret
test
and
dec
mov
inc
mov
xchg
into
sbb
adc
das
movs
shl
push
adc
xor
mov
xchg
lea
(bad)
or
sub
mov
dec
and
jl
mov
or
add
shr
cmp
rol
inc
sbb
xor
jl
outs
inc
iret
jns
cmp
sbb
adc
and
add
or
inc
sub
add
add
add
add
or
xlat
outs
loopne
bound
sub
adc
xchg
std
repz
inc
sub
adc
dec
movs
dec
sbb
dec
sub
and
xchg
dec
push
dec
cdq
push
fwait
aam
xchg
sbb
pop
push
mov
xchg
leave
bound
(bad)
mov
clc
gs
test
inc
stos
push
push
inc
xor
ffree
add
stc
add
or
inc
sub
add
add
add
add
or
dec
cld
xlat
loope
popf
or
xor
inc
pushf
dec
jno
ror
adc
mov
adc
sub
jno
mov
ret
push
and
ror
mov
inc
add
mov
enter
std
xchg
icebp
pop
and
cmps
or
rcl
fbstp
jg
out
cmp
in
inc
add
stc
add
or
inc
sub
add
add
add
add
or
dec
test
jae
sub
pusha
ret
xchg
adc
sahf
mov
out
push
in
add
and
rcr
icebp
sbb
leave
dec
in
push
xor
pusha
jl
inc
les
leave
leave
mov
inc
push
push
dec
push
shl
dec
inc
mov
cwde
push
and
pop
add
dec
inc
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
iret
pushf
je
aam
adc
popa
add
jl
and
push
pop
push
mov
mov
mov
mov
adc
icebp
inc
ds
or
jge
ror
outs
inc
pop
inc
add
adc
rcl
push
xor
add
inc
dec
sub
popf
jno
inc
pop
and
jbe
sub
or
cmp
dec
xchg
or
mov
mov
ret
rcr
xchg
add
or
(bad)
fiadd
rcl
cmp
add
rol
pop
repz
rol
ret
js
xchg
push
adc
inc
gs
jecxz
out
push
and
cli
inc
push
add
jl
adc
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
hlt
pop
adc
popf
sub
and
repnz
and
push
inc
mov
dec
push
inc
add
cld
inc
repnz
and
xor
adc
inc
jmp
xor
je
adc
pop
push
sbb
xor
sar
fadd
hlt
shl
inc
aaa
and
xchg
cld
xchg
dec
lds
mov
sub
fs
xor
pop
push
outs
fisub
jl
xor
and
inc
hlt
adc
push
pop
or
rcr
or
mov
adc
mov
sahf
jbe
mov
jo
adc
inc
jns
pop
les
inc
push
cld
add
out
jge
adc
or
add
inc
imul
add
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
outs
inc
out
xchg
les
pusha
xchg
inc
push
xchg
adc
aas
or
mov
inc
adc
mov
adc
nop
lar
nop
je
inc
pop
cld
ins
je
and
aam
inc
inc
sbb
nop
xlat
dec
push
sbb
icebp
loop
aad
jne
(bad)
aas
fist
in
xor
ret
dec
les
and
or
push
inc
jo
and
mov
(bad)
push
add
jle
and
loopne
and
push
adc
and
adc
and
push
jle
adc
inc
das
mov
inc
retf
out
and
or
add
add
add
or
inc
sub
add
add
add
add
or
clc
js
adc
lahf
ret
adc
push
in
push
and
xchg
add
outs
push
daa
xchg
push
or
xor
gs
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
sub
or
sbb
repnz
and
nop
inc
adc
sbb
sbb
bswap
add
sub
cmp
test
jno
nop
rol
push
inc
aaa
pop
aam
ror
rcl
push
push
ins
cmc
aad
lods
cmc
(bad)
pop
ja
cmc
xlat
pusha
xchg
xor
fldcw
jge
aas
jno
xchg
dec
fiadd
add
ja
pop
xor
idiv
das
fmul
or
mov
(bad)
test
inc
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
iret
pushf
je
aam
adc
popa
add
jl
and
push
pop
dec
je
outs
loope
add
inc
call
rcr
dec
nop
inc
and
cmp
mov
and
dec
ror
ror
add
ss
(bad)
rcl
cmc
aad
lods
cmc
(bad)
pop
ja
cmc
xlat
pusha
xchg
in
adc
cmp
sbb
mov
mov
add
fnstenv
xor
lock
outs
mov
popf
inc
add
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
sub
or
sbb
repnz
and
nop
inc
adc
sbb
sbb
bswap
add
sub
cmp
test
jno
nop
rol
push
inc
aaa
pop
aam
ror
rcl
push
push
ins
cmc
aad
lods
cmc
(bad)
pop
ja
cmc
xlat
pusha
xchg
ins
ss
inc
cld
ror
fldcw
mov
mov
leave
aas
jno
(bad)
sar
in
popa
inc
frstor
or
inc
fisubr
inc
retf
dec
add
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
iret
pushf
je
aam
adc
popa
add
jl
and
push
pop
dec
je
outs
loope
add
inc
call
rcr
dec
nop
inc
and
cmp
mov
and
dec
ror
ror
add
ss
(bad)
rcl
cmc
aad
lods
cmc
(bad)
pop
ja
cmc
xlat
pusha
xchg
in
adc
test
adc
add
(bad)
daa
pop
mov
(bad)
ret
xor
adc
fstp
cld
jae
or
dec
add
or
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
inc
imul
and
sbb
iret
loopne
sbb
pop
xchg
sbb
inc
mov
mov
mov
sbb
mov
stc
add
or
inc
sub
add
add
add
add
or
add
or
jne
mov
sbb
out
xchg
test
(bad)
push
xlat
add
sub
test
and
add
sbb
stc
add
or
inc
sub
add
add
add
add
or
add
or
daa
mov
rcr
and
cmps
das
popa
inc
fs
mov
or
inc
mov
sbb
dec
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
mov
pop
mov
dec
test
mov
jg
stos
jl
xchg
inc
pusha
xchg
sub
or
sbb
add
add
mov
add
dec
add
fwait
add
add
popa
xor
sbb
sbb
add
fwait
add
ins
je
add
fwait
add
inc
dec
inc
cmp
popa
xor
xor
rcl
sar
int
(bad)
jmp
(bad)
stc
scas
push
xchg
call
pop
pop
inc
add
add
mov
mov
imul
sub
cwde
add
add
jmp
mov
cmps
js
(bad)
test
inc
add
(bad)
(bad)
xor
scas
scas
(bad)
in
es
in
ss
push
enter
retf
or
nop
xchg
call
add
int
(bad)
in
inc
jmp
(bad)
call
fcomp
leave
lods
test
std
fcos
hlt
jp
call
mov
adc
xchg
(bad)
out
push
fisub
test
inc
data16
std
(bad)
aam
cdq
mov
add
in
fcmovu
mov
retf
xchg
mov
retf
mov
cmc
cmc
hlt
(bad)
std
lock
sar
iret
es
out
data16
inc
mov
push
std
retf
add
or
lds
lock
clc
inc
lea
not
jno
pop
add
outs
dec
or
mov
leave
movs
add
push
int3
mov
test
add
mov
sti
fmul
mov
fisttp
mov
cmc
(bad)
mov
into
or
mov
aam
mov
add
out
mov
and
sar
stos
dec
ja
and
xchg
in
loop
xchg
pop
adc
call
in
push
idiv
(bad)
push
or
mov
inc
or
les
div
std
mov
push
ret
fld
lahf
mov
push
adc
hlt
stc
jmp
mov
int
push
(bad)
test
cmc
mov
hlt
lods
add
and
mov
cld
div
fcmovu
fisttp
pop
jmp
adc
mov
repz
push
and
ret
test
lds
ret
loopne
jmp
int3
add
leave
cmc
mov
cmps
je
fstp
rol
mov
sti
imul
loope
int3
retf
mov
hlt
int
xchg
pusha
and
fadd
mov
add
jbe
mov
cmc
aad
(bad)
scas
psadbw
adc
in
jecxz
jns
jg
mov
adc
stos
add
lods
sbb
shl
popf
xor
sub
jecxz
div
or
fisttp
icebp
lods
pop
imul
add
idiv
cmc
hlt
push
or
mov
(bad)
out
add
jmp
push
add
sti
add
inc
jmp
add
fild
jmp
add
xlat
add
fild
call
add
inc
(bad)
(bad)
(bad)
(bad)
cli
(bad)
jmp
(bad)
fild
sti
cli
(bad)
out
add
xlat
add
fild
jecxz
push
push
push
add
sti
push
(bad)
sti
clc
sti
(bad)
stc
sti
rol
(bad)
sti
(bad)
sti
jecxz
sti
fild
jmp
sti
out
add
out
sti
xlat
add
xlat
add
jmp
sti
out
add
out
adc
repz
xor
dec
mov
loopne
lea
cmps
or
aam
(bad)
sub
repz
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
xchg
and
cmp
iret
add
xor
cmp
scas
mov
xchg
stos
add
inc
add
jo
sti
mov
neg
mov
aas
mov
test
mov
data16
shr
jp
in
xchg
adc
cmp
jl
icebp
xor
mov
fild
dec
lods
add
outs
mov
stos
add
arpl
or
in
fdiv
mov
sti
dec
outs
lea
sbb
and
add
xor
jno
imul
popa
imul
(bad)
outs
into
mov
sbb
arpl
rol
xor
frstor
dec
(bad)
imul
pop
out
fwait
popf
jno
mov
mov
mov
imul
push
push
and
ins
jns
mov
xchg
retf
pusha
(bad)
pop
jmp
call
ins
enter
push
cs
jb
shl
add
test
dec
mov
xchg
inc
or
movs
mov
or
iret
push
sbb
shl
fbld
addr16
and
push
xor
cmp
sahf
xor
dec
ret
dec
jecxz
je
inc
jecxz
jne
and
xchg
add
rol
xchg
mov
mov
and
jae
(bad)
cdq
jge
and
add
sbb
cmp
test
xor
nop
fidiv
sbb
mov
mov
nop
mov
or
cmps
pop
mov
jne
add
xor
add
pop
jmp
cmps
or
ss
xchg
and
mov
arpl
rcr
add
cs
inc
imul
xor
inc
xor
mov
das
hlt
fadd
wbinvd
int3
dec
inc
mov
xchg
add
adc
mov
adc
rol
retf
sbb
dec
adc
inc
or
add
call
inc
xor
inc
push
mov
xchg
inc
adc
jae
xchg
int
(bad)
push
sub
mov
add
call
sar
int3
imul
add
mov
pop
mov
or
fwait
inc
xor
sub
and
in
pop
in
mov
xor
hlt
arpl
shr
mov
xchg
int3
add
std
(bad)
stos
scas
retf
xor
rol
dec
ret
scas
xor
sub
mov
mov
and
or
add
add
mov
popf
jo
add
pusha
inc
aas
outs
lods
sub
adc
clc
push
adc
(bad)
outs
xor
sbb
ins
xor
and
jae
aas
pop
mov
xor
sbb
cmp
jo
xlat
pop
das
stos
int3
or
inc
test
iret
aam
and
dec
not
nop
inc
push
add
mov
mov
in
sub
push
test
adc
lea
dec
mov
loope
or
mov
repz
scas
xchg
cmps
fwait
cs
cmp
add
or
push
or
sub
jp
sub
xor
adc
sahf
jmp
test
add
cld
mov
out
mov
or
push
shr
push
and
leave
jecxz
inc
push
loop
inc
sub
ror
pop
add
loope
pop
jg
or
push
pop
rol
int
shr
mov
xlat
out
sbb
les
inc
and
inc
call
sbb
xor
sahf
call
push
push
out
pop
jno
shl
mov
xor
mov
or
mov
xor
adc
dec
ins
call
inc
inc
and
imul
mov
int3
mov
adc
or
lds
xor
out
mov
mov
fadd
ficom
mov
pand
inc
add
nop
mov
out
mov
push
jl
adc
fsubr
fimul
sahf
or
mov
add
mov
and
sbb
xchg
xor
js
int
cmps
push
sbb
ror
push
push
lock
lock
or
popa
or
push
or
ja
push
gs
or
mul
inc
add
add
loopne
push
inc
mov
loopne
push
adc
jl
xor
mov
dec
pop
mov
push
test
add
out
xor
add
rol
shr
ss
jmp
jo
addr16
inc
add
mov
or
mov
nop
push
mov
xor
and
mov
or
mov
inc
pop
dec
cli
xor
adc
gs
add
rol
dec
pusha
shl
fstp
push
jmp
inc
js
inc
rdmsr
adc
adc
call
or
add
and
or
mov
mov
and
sub
add
and
lahf
enter
adc
push
inc
add
rol
push
add
jbe
xchg
loopne
push
push
jno
jg
push
and
sub
nop
xor
jge
popa
xor
and
pop
inc
adc
add
pop
or
cmp
add
inc
add
stos
add
or
add
dec
sub
and
push
aam
ret
adc
pop
dec
rcr
and
pop
test
inc
(bad)
stos
adc
mov
and
inc
mov
dec
rol
push
sbb
or
and
cmp
call
shl
xor
inc
adc
or
push
sahf
adc
sub
xchg
in
sar
jmp
xchg
inc
or
call
pop
das
xor
push
fld
inc
add
jo
or
popa
(bad)
push
adc
pusha
mov
clc
inc
push
adc
es
and
rol
or
fsub
mov
rcl
enter
or
and
pop
dec
enter
int3
add
push
jns
inc
sub
loope
inc
ss
sub
jo
rol
mov
xchg
add
fadd
inc
hlt
pusha
pop
push
cmp
sub
in
and
inc
inc
cmp
jno
add
pushf
adc
add
push
popf
add
adc
or
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
mov
ret
xchg
push
cmc
fmul
inc
adc
shr
fild
push
xchg
add
(bad)
rcr
add
dec
sbb
jg
int3
pop
push
jb
leave
xchg
add
xchg
adc
mov
shl
inc
jg
adc
add
aas
pop
pop
addr16
inc
inc
pop
adc
and
push
adc
and
(bad)
shr
mov
call
fidivr
jmp
dec
out
or
rcr
mov
jns
nop
popa
inc
adc
in
ins
mov
call
fwait
mov
sar
or
dec
jle
out
mov
adc
lea
cmp
xchg
ret
ja
sub
or
pop
test
mov
rol
fdivrp
cmp
sbb
xchg
loope
popa
pusha
outs
in
loope
push
xor
add
or
or
jo
dec
jnp
lds
nop
xor
pop
sbb
or
sub
push
push
mov
int3
cmps
or
retf
xor
arpl
aas
or
movs
or
push
mov
or
loop
int
int3
xor
(bad)
int3
or
inc
ret
(bad)
test
loope
and
add
loope
inc
(bad)
and
inc
jnp
sbb
inc
cmp
inc
sub
or
mov
and
js
inc
fnsave
add
and
dec
inc
sub
adc
sbb
adc
push
xor
and
sbb
xor
pop
and
jns
inc
enter
inc
adc
or
dec
sbb
rcl
adc
hlt
mov
aas
shr
arpl
adc
aaa
mov
aam
aas
xor
cmp
ret
aas
xor
adc
xchg
dec
jmp
mov
push
push
les
sahf
pop
or
aas
scas
inc
add
jb
add
lahf
xor
inc
adc
xchg
adc
jecxz
inc
lahf
cs
or
daa
cmps
cmps
leave
mov
nop
mov
adc
inc
and
adc
or
push
adc
rol
out
cli
dec
xchg
adc
repz
aas
xchg
nop
pusha
fsubr
or
add
cld
rol
add
mov
ss
retf
jp
aaa
and
ror
fwait
out
fcomp
push
jecxz
int3
je
cdq
xor
cld
add
retf
xchg
xor
out
push
mov
inc
inc
dec
sub
push
add
add
adc
inc
ror
sbb
and
cmp
xor
push
adc
movs
xor
or
xor
popf
inc
shl
sbb
or
in
push
mov
sub
mov
adc
inc
rol
pop
test
mov
pushf
jecxz
fidivr
or
ret
and
in
rol
das
mov
or
and
push
push
mov
enter
add
push
cmp
rol
das
cmp
(bad)
adc
call
adc
add
call
shr
push
mov
xchg
jp
cmc
aas
stos
xchg
aaa
sar
in
addr16
or
pop
add
add
mov
sbb
shl
stc
loopne
daa
rcl
and
add
sbb
cmp
aas
jl
xor
jmp
dec
inc
cmp
pop
adc
call
pop
popa
push
xor
popf
or
or
ror
xor
sbb
add
icebp
or
mov
and
sbb
loopne
popf
or
cmp
(bad)
sbb
cwde
pop
inc
push
push
add
loopne
je
push
les
adc
cli
cli
(bad)
imul
push
sbb
ss
sbb
das
lea
or
mov
pop
add
adc
add
loop
bound
or
dec
add
lock
pop
cdq
xor
cmp
adc
arpl
call
adc
push
enter
add
sub
mov
pop
mov
or
inc
jo
jnp
mov
loope
add
or
add
das
cmp
data16
enter
nop
push
in
loopne
imul
push
test
push
outs
xchg
das
jg
ret
add
inc
push
call
in
push
rol
sub
jo
push
inc
adc
or
jo
xor
add
jl
inc
arpl
add
jb
add
inc
push
js
(bad)
xor
or
jg
mov
add
pop
inc
adc
(bad)
mov
movs
and
sbb
mov
and
cs
add
push
and
mov
inc
add
nop
add
add
or
add
pusha
or
mov
iret
ins
aam
add
inc
sbb
js
xchg
or
inc
or
cld
sbb
mov
inc
mov
mov
fsub
add
add
dec
and
test
inc
rcl
clc
xchg
push
adc
ins
inc
or
adc
sbb
add
ror
rol
clc
sbb
mov
or
or
add
fisubr
and
adc
mov
inc
(bad)
xchg
push
ret
loopne
xor
dec
dec
or
cmp
pusha
ret
and
and
xchg
repz
shl
shl
inc
jl
cmp
or
(bad)
adc
adc
adc
dec
adc
and
sbb
lods
push
jno
vpunpckhwd
adc
inc
cs
mov
neg
movs
or
add
(bad)
push
sbb
add
mov
mov
ins
dec
adc
jo
sub
loopne
sbb
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
mov
ret
xchg
or
mov
sti
imul
jmp
ror
pop
mov
or
adc
xchg
fs
push
cmp
hlt
mov
add
xor
pop
wrmsr
jg
adc
mov
push
dec
aam
nop
inc
add
stos
rcl
adc
push
adc
xor
call
das
gs
mov
inc
xchg
cli
nop
add
ja
fnstcw
sti
out
sbb
outs
into
(bad)
cmp
xor
int3
dec
cmp
in
add
jmp
pushf
sub
imul
jno
fmul
pop
adc
cld
jmp
outs
mov
pop
sbb
xor
cwde
inc
and
imul
sbb
mov
sar
xchg
popa
xor
pop
sahf
aad
nop
jp
data16
jbe
xchg
add
call
mov
iret
mov
sbb
dec
cmp
(bad)
lock
imul
mov
add
in
mov
sub
cmp
sar
push
les
rdmsr
push
cmp
or
inc
add
jne
ret
movs
xor
add
fimul
test
inc
scas
sub
inc
cmp
xchg
retf
push
mov
adc
sbb
mov
push
jl
and
ins
daa
rol
mov
loopne
inc
in
shl
rol
xor
rcl
aas
(bad)
pusha
adc
arpl
(bad)
mov
and
je
pushf
or
add
or
pusha
ret
aas
and
dec
cmp
dec
jbe
and
in
addr16
cwde
add
inc
shl
nop
dec
das
add
nop
dec
or
xor
adc
outs
lods
xor
inc
rol
sub
mov
sub
add
mov
and
and
jmp
push
cmp
fcom
jae
xchg
adc
mov
sub
cmp
dec
rcr
jnp
sub
add
xor
loopne
inc
xchg
loop
mov
call
adc
lock
push
mov
cmps
arpl
or
(bad)
leave
sub
lea
and
lods
icebp
movups
dec
(bad)
pusha
inc
sub
mov
mov
aas
arpl
xchg
mov
inc
push
aam
rcr
mov
nop
mov
xor
div
or
js
sub
inc
lahf
call
lock
sbb
jne
adc
(bad)
(bad)
xor
add
push
dec
add
jnp
(bad)
into
xchg
dec
and
pushf
std
enter
fild
mov
sbb
xchg
sub
dec
push
add
cmp
scas
inc
xor
jns
or
xor
add
loopne
adc
aas
loope
xor
rcl
or
jmp
xor
mov
or
clc
adc
or
lock
adc
ins
adc
ss
and
dec
cmp
lods
xor
and
inc
mov
sti
(bad)
sbb
fs
cmp
addr16
js
int3
xor
leave
jmp
cmp
sub
mov
inc
mov
les
adc
or
cmp
add
xor
fistp
dec
nop
adc
or
hlt
pop
fs
inc
cmp
push
out
es
shr
push
std
dec
or
iret
add
sbb
add
rol
add
rcl
mov
sbb
xor
inc
inc
jo
jg
add
cwde
add
sub
mov
sbb
ret
aad
adc
sbb
loop
mov
and
sub
clc
call
loope
xor
(bad)
mov
aad
es
add
or
push
add
or
and
adc
or
loopne
(bad)
clc
cdq
or
add
std
mov
xchg
pop
cdq
and
jg
es
adc
push
test
rol
adc
cmp
add
jle
adc
xor
cdq
outs
dec
mov
and
lock
les
or
test
repnz
(bad)
js
or
or
ror
mov
and
js
rcr
inc
mov
or
fld
or
adc
sbb
sbb
arpl
jo
mov
jno
test
inc
add
xor
pop
push
adc
mov
and
and
inc
sub
inc
adc
xchg
test
cmovo
or
mov
mov
loopne
sbb
jo
pop
mov
add
sub
les
sahf
shl
inc
add
mov
data16
pop
add
adc
(bad)
dec
xor
clc
aam
jo
add
inc
lea
add
pop
rol
inc
pop
add
retf
daa
test
add
jmp
(bad)
cmp
ret
add
and
or
inc
add
add
and
add
push
and
push
add
(bad)
loopne
add
add
adc
inc
and
out
movs
ret
cmp
push
nop
inc
add
pusha
pusha
sbb
mov
aas
test
add
mov
or
fadd
aas
mov
and
adc
inc
inc
sbb
pusha
or
loopne
xchg
sub
or
std
xchg
and
and
loope
push
mov
push
and
xor
test
ret
mov
icebp
and
mov
add
mov
push
enter
enter
dec
push
inc
inc
loope
mov
mov
adc
xor
jae
inc
movups
lahf
sbb
jmp
out
jb
inc
adc
dec
adc
xor
cmp
add
adc
test
push
ins
add
mov
mov
add
pop
pop
pop
jle
ins
jp
adc
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
sar
hlt
xor
mov
mov
inc
xchg
mov
inc
fsubr
push
aas
jp
cmp
inc
or
sub
in
repnz
jg
popa
mov
or
sbb
xor
push
mov
fisttp
cld
pop
rcl
adc
jbe
or
xor
arpl
inc
stos
shl
repz
int
call
pop
mov
pop
cmp
xchg
adc
int3
test
add
jmp
jbe
xchg
and
je
pushf
mov
push
lea
or
test
rcr
mov
fadd
dec
sbb
(bad)
mov
sbb
ret
add
pusha
mov
add
sbb
outs
add
add
xchg
jg
cmp
push
and
(bad)
sub
xor
mov
scas
(bad)
add
jbe
dec
mov
cmp
pop
mov
fadd
inc
pop
jns
mov
pop
fs
pop
pop
test
xor
ins
aaa
shl
add
adc
mov
pop
push
sub
xor
rol
mov
or
movlps
push
lock
inc
shl
retf
mov
mov
fst
adc
jns
test
adc
xchg
add
pop
pusha
inc
nop
xor
rol
mov
and
retf
pusha
jo
std
daa
rol
add
inc
inc
sub
xchg
add
xor
xchg
mov
(bad)
or
and
ds
adc
int
in
cmp
sbb
adc
dec
sub
or
sub
jae
xchg
cmp
mov
or
int
loope
xor
and
movs
ins
cmp
dec
sub
jl
(bad)
or
out
inc
or
(bad)
pop
xor
add
cld
cmp
mov
xor
xor
add
popa
or
(bad)
mov
test
cmc
cmp
movs
pop
or
mov
aas
movs
test
cwde
jg
std
add
or
adc
inc
xor
jno
dec
or
sbb
dec
cmp
pusha
jecxz
jb
inc
sti
pop
xor
pop
aas
xor
pop
out
(bad)
les
mov
mov
cmp
cmp
jae
inc
cmp
add
xor
xchg
push
in
sub
iret
xor
addr16
aas
je
arpl
lods
sar
ret
sar
and
xor
scas
inc
int3
movs
jae
add
les
xor
or
and
mov
(bad)
adc
and
add
dec
xor
adc
pop
icebp
inc
sbb
cmp
mov
mov
in
pop
ja
aad
push
(bad)
and
jmp
adc
arpl
mov
add
xor
movs
xchg
jns
xor
mov
aas
enter
and
add
push
mov
adc
movs
pop
mov
fsub
pusha
retf
pop
jbe
pop
imul
add
cs
ret
pushf
push
int3
pop
push
shr
in
add
adc
popa
fld
cs
mov
sub
add
sbb
sub
enter
retf
(bad)
and
xor
push
push
add
inc
scas
add
xchg
std
clc
test
out
or
jo
and
push
or
mov
sar
xor
stc
mov
lahf
aam
add
add
add
mov
cs
xor
outs
xor
push
sbb
sub
or
add
js
aas
retf
add
mov
(bad)
mov
push
bound
sub
mov
add
fadd
pop
mov
add
clc
ret
and
add
adc
mov
fidivr
inc
aaa
mov
inc
add
and
pusha
jno
fild
cmp
in
arpl
(bad)
(bad)
hlt
aaa
xchg
push
mov
ds
pop
inc
bound
rcr
popf
push
push
jb
push
jno
or
or
add
(bad)
enter
std
inc
and
shl
les
loopne
sbb
inc
add
or
ins
shr
adc
pop
add
and
ror
or
adc
mov
test
sub
adc
add
aas
xor
xchg
and
mov
clc
lahf
je
popa
and
inc
sbb
ror
sahf
inc
aaa
push
mov
add
push
(bad)
cld
add
sub
push
sub
adc
add
dec
rol
fadd
push
inc
jecxz
or
mov
pushf
jmp
pop
push
popf
loope
(bad)
js
inc
iret
lock
test
mov
push
and
call
sub
sbb
dec
inc
fwait
add
cmp
fs
and
or
rol
mov
add
or
inc
and
adc
rol
ins
and
inc
ret
and
adc
jnp
inc
adc
cli
xchg
mov
push
cmp
inc
adc
adc
or
or
in
and
cmovle
adc
mov
adc
add
lods
inc
add
mov
es
cmove
test
and
test
mov
popa
jmp
outs
add
add
test
sbb
push
add
sbb
add
cmps
and
or
rol
cmp
adc
push
rol
cmp
adc
loopne
pop
test
and
adc
push
fs
add
fidivr
jo
mov
push
rol
adc
mov
jnp
xlat
and
push
rol
adc
push
inc
or
adc
lods
pop
mul
pop
std
xchg
pop
mov
and
adc
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
sar
es
mov
inc
xchg
and
pop
clc
mov
inc
jg
(bad)
sbb
push
dec
adc
adc
stos
lahf
dec
xchg
push
inc
cli
mov
cmp
and
cmps
pop
aas
sbb
xor
cmp
inc
or
rol
fisttp
push
sub
test
fwait
jmp
push
inc
(bad)
(bad)
jecxz
and
cwde
js
jecxz
test
das
and
cmp
arpl
and
pop
jbe
mov
inc
jbe
fdivr
jae
ins
mov
outs
mov
enter
stos
jle
sub
adc
fwait
mov
test
jne
out
mov
sbb
out
(bad)
or
inc
adc
stos
dec
sbb
sbb
test
aas
(bad)
mov
sti
aaa
jge
aas
imul
cmp
aaa
and
(bad)
jmp
push
or
or
aas
fs
add
mov
and
das
inc
inc
or
jmp
ja
cmp
and
iret
xor
shl
aas
jns
repz
cmp
pushf
or
add
fdiv
adc
(bad)
and
rcl
sbb
lock
or
test
or
add
inc
nop
add
or
popa
movs
mov
in
test
rcl
sbb
mov
iret
or
dec
cmp
mov
les
dec
jle
or
or
add
or
retf
dec
aas
outs
cld
lock
xchg
outs
adc
nop
mov
add
pop
inc
nop
aas
or
(bad)
adc
hlt
sbb
movs
xor
and
arpl
mov
adc
iret
add
add
xchg
xor
call
mov
add
call
cld
repz
xor
cmp
and
nop
push
and
xor
inc
cmp
add
dec
or
ret
or
xor
repz
or
cmp
xchg
mov
test
inc
xor
movs
popa
lahf
(bad)
adc
aas
add
js
lods
add
sub
aas
dec
mov
int3
jge
(bad)
arpl
aas
mov
add
jle
pop
or
nop
ret
or
repz
jecxz
aaa
in
cld
iret
mov
cmp
adc
or
popf
adc
shr
jmp
ret
dec
push
call
out
push
pushf
shr
add
mov
movs
dec
adc
inc
std
cld
inc
inc
xor
call
hlt
xor
or
or
adc
mov
cmps
push
scas
xor
xlat
sbb
or
aam
inc
aas
xor
inc
or
xor
enter
es
jmp
inc
(bad)
sub
jne
add
sar
and
in
add
sub
xor
dec
rol
mov
loop
test
xor
inc
or
mov
push
test
push
xor
iret
mov
test
add
sbb
fnsave
mov
jmp
pop
inc
push
bnd
cmp
jmp
cmp
jno
inc
test
push
stos
pop
shl
pop
ja
mov
int
inc
mov
rol
cs
mov
add
lock
and
ds
adc
cld
aam
cli
cmp
jnp
call
add
or
or
push
inc
sbb
xor
call
or
and
icebp
mov
call
add
cld
movs
or
pusha
and
jmp
jae
fs
mov
mov
add
add
push
mov
pop
add
rol
lock
cmp
sbb
enter
mov
jmp
and
(bad)
mov
push
xor
pop
test
xchg
add
sbb
pusha
arpl
mov
add
dec
loopne
inc
call
adc
push
add
fadd
sbb
gs
xor
sbb
adc
cld
scas
icebp
lea
add
pop
mov
inc
mov
sub
sbb
inc
or
mov
add
hlt
(bad)
ins
inc
add
inc
es
fstp
add
sar
mov
add
xor
adc
xchg
(bad)
sbb
sar
add
lea
(bad)
scas
sub
xor
add
or
loopne
xchg
add
mov
and
movs
sbb
ror
inc
xor
sbb
inc
pop
clc
pop
sbb
push
and
cmp
sub
xchg
lahf
mov
or
add
jmp
jmp
xor
sub
add
or
push
in
mov
pushf
push
sbb
sub
fidiv
ins
call
pop
int3
inc
lea
arpl
dec
mov
push
dec
pop
loopne
inc
or
mov
jg
adc
je
pop
mov
leave
cmp
int
clc
adc
js
xor
adc
xchg
add
lds
push
icebp
add
dec
adc
mov
add
mov
push
shl
add
adc
xor
inc
hlt
mov
mov
fs
inc
lock
add
push
lds
call
xchg
inc
mov
adc
rol
push
add
mov
mov
lock
dec
sub
test
and
push
or
ss
loope
xchg
sbb
icebp
add
inc
inc
(bad)
fadd
xor
push
aam
rol
sbb
sub
icebp
mov
test
aas
adc
fsubr
sbb
or
add
in
add
mov
sub
popa
sbb
mov
fistp
and
cmp
jbe
sbb
clc
ret
rcr
jo
inc
clc
jecxz
jmp
mov
xor
add
add
rcl
xor
sbb
add
ins
cmp
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
sar
sbb
je
mov
sbb
inc
mov
stos
sbb
cmc
mov
sbb
loop
sub
in
add
adc
loopne
mov
retf
xchg
sbb
xchg
inc
add
add
gs
arpl
mov
xor
sub
ret
scas
xor
cmp
mov
(bad)
pop
cmc
stos
cmp
push
sub
ror
imul
jno
adc
or
cmp
mov
jle
fdiv
clc
pop
(bad)
jg
call
outs
jmp
xor
clc
out
push
sub
outs
or
sti
imul
add
inc
inc
add
sbb
shl
or
ja
add
jmp
(bad)
nop
and
inc
retf
add
cld
inc
out
sub
pop
ret
cld
arpl
iret
add
add
daa
push
test
add
rol
mov
clc
dec
cmp
and
adc
ror
push
push
sbb
cld
arpl
pop
(bad)
jl
iret
jne
cmp
sbb
inc
nop
js
movs
mov
push
or
add
inc
mov
push
mov
aas
sub
xor
inc
pop
inc
or
icebp
iret
add
sub
shl
sub
xor
or
inc
or
push
movs
pusha
fs
jmp
cld
add
dec
cmp
mov
xor
les
out
xchg
or
xchg
add
xchg
pop
jae
not
and
and
push
nop
adc
jo
add
shr
push
or
xor
mov
ss
repz
cwde
add
inc
xor
mov
cld
adc
ror
scas
push
rdpmc
add
mov
adc
js
dec
lahf
or
xor
adc
push
xor
cmps
or
inc
xor
int
retf
ins
or
or
cmps
inc
adc
and
add
mov
leave
aas
xor
or
push
lods
mov
les
retf
repz
loopne
loop
les
add
xor
add
xchg
add
push
fild
aas
aas
xor
cmp
ret
push
out
std
inc
add
or
sub
mul
nop
scas
inc
or
push
sar
int3
add
mov
mov
or
retf
pusha
inc
mov
or
je
inc
shl
stc
sete
aas
xor
inc
int3
cmp
loop
sbb
cmp
sbb
xchg
out
add
adc
inc
cmp
nop
cmp
xor
das
mov
std
jmp
sub
pushf
or
inc
mov
push
cs
inc
loope
xchg
or
push
sbb
dec
add
les
icebp
dec
ror
nop
test
gs
xor
aas
sub
dec
mov
loopne
push
mov
lock
dec
xlat
add
lock
pop
push
cmp
(bad)
int
jnp
(bad)
xchg
mov
add
or
sub
inc
sbb
pushf
dec
push
out
pop
push
xchg
jnp
fnstenv
dec
add
out
adc
sbb
mov
cmp
(bad)
xor
inc
mov
pop
lahf
rol
and
rol
add
clc
rol
add
mov
inc
sbb
les
sbb
push
jbe
adc
xor
add
jmp
sbb
ror
inc
add
cli
inc
sbb
lock
mov
add
rol
lock
and
push
aaa
test
inc
nop
mov
test
inc
add
call
add
add
aas
cld
mov
imul
inc
fwait
sbb
fldcw
adc
push
xchg
inc
rol
ds
add
cld
rol
js
ins
fs
and
push
mov
or
fwait
add
push
pushf
or
sub
(bad)
dec
pop
adc
sbb
jae
mov
and
dec
cmp
std
arpl
inc
lea
loope
cdq
nop
int
div
mov
xchg
mov
test
rol
xor
and
test
rcr
loope
and
or
loopne
cmps
mov
arpl
sbb
sbb
add
test
mov
cmp
add
lock
jl
adc
les
jecxz
fstp
pop
xor
push
push
or
or
aas
ss
lods
sbb
adc
ror
xor
loopne
sbb
mov
add
jmp
sub
xchg
xor
pop
add
cmp
or
sub
inc
or
adc
lea
and
ins
mov
add
movs
xchg
and
and
or
or
or
mov
or
or
test
inc
rol
outs
pushf
loopne
and
and
and
or
push
add
sub
push
mov
(bad)
popa
or
fwait
movs
movs
xchg
cmps
and
push
add
mov
sbb
mov
mov
adc
add
test
and
jbe
mov
adc
or
sub
rcr
dec
cdq
inc
mov
aas
or
cmp
pop
js
sub
rol
or
test
push
mov
sahf
lock
jl
mov
cmc
add
mov
push
inc
ret
add
bound
aas
and
popa
in
mov
or
fsubp
mov
or
add
movs
push
mov
loop
ror
mov
and
cmps
rol
mov
popa
or
aaa
mov
or
scas
xor
test
adc
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
dec
scas
(bad)
icebp
bnd
test
or
mov
or
xor
scas
pop
(bad)
mov
or
rol
sbb
jno
adc
adc
xchg
add
inc
repnz
test
aas
push
sub
hlt
mov
test
and
sti
mov
aas
xchg
std
or
je
aas
or
push
cmp
push
sub
xchg
and
sbb
inc
xchg
mov
and
push
test
mov
jae
xchg
enter
fist
ror
or
cdq
fstp
jae
rcl
inc
test
jg
sahf
jge
std
in
fnstenv
clc
(bad)
or
sub
xor
lds
adc
dec
or
pop
mov
int
xor
mov
mov
lea
bound
cld
fwait
icebp
seto
xor
push
daa
dec
xor
dec
or
dec
sub
das
dec
in
xchg
adc
psubusw
repnz
test
je
cld
mov
daa
shr
test
rol
and
pop
xor
lods
push
fld
xchg
pusha
xor
es
sbb
fdiv
sar
push
sbb
and
(bad)
repz
or
push
fld
fs
inc
jg
rol
mov
(bad)
mov
mov
xor
clc
inc
fidivr
iret
cmp
aas
in
and
or
rcl
inc
push
les
dec
xchg
retf
xor
xor
sbb
or
sbb
adc
and
xchg
add
int3
xor
xor
call
or
or
mov
mov
pop
push
ror
or
sbb
enter
ds
xor
xor
sub
arpl
xor
pop
mov
xor
pop
xchg
ret
push
sub
add
cli
wbinvd
outs
mov
nop
add
sbb
lea
push
cwde
mov
mov
add
mov
add
sbb
sub
push
aas
mov
sub
test
ret
int3
aaa
into
fsubr
push
add
nop
add
fs
inc
jecxz
(bad)
int3
xor
lods
and
aas
sbb
lock
or
dec
xor
xchg
hlt
div
add
popf
dec
lsl
imul
sar
test
test
int3
dec
dec
icebp
aas
adc
shl
lods
mov
ins
sar
xor
dec
add
cmp
add
mov
or
ins
add
push
dec
dec
ror
xor
mov
jae
xor
loope
nop
add
push
or
inc
add
jmp
inc
and
and
jecxz
(bad)
or
shl
add
call
push
add
xor
jp
or
dec
cmp
inc
retf
inc
cmp
dec
cwde
pop
adc
stos
and
jno
xor
fistp
nop
pop
in
add
dec
mov
addr16
cmp
shr
enter
(bad)
push
movs
add
(bad)
mov
cld
out
int3
sub
rcr
cmp
in
dec
xor
sub
add
xchg
or
push
or
pop
add
xchg
jg
push
sub
pop
(bad)
aam
jecxz
mov
or
inc
lds
xor
mov
mov
or
adc
jo
or
and
setp
fild
pop
rcl
loope
dec
call
or
popf
outs
and
push
ss
nop
pop
into
pusha
pop
and
cs
pop
or
cwde
pop
add
sbb
or
cmp
sahf
xchg
add
(bad)
sub
adc
(bad)
retf
sub
add
hlt
lahf
sub
push
or
adc
inc
cdq
fdiv
call
fld
add
clc
xchg
xor
and
xor
fs
pusha
retf
and
repnz
mov
ror
add
cwde
xchg
mov
or
ror
add
inc
test
inc
out
sbb
xchg
or
add
jne
inc
push
cwde
or
gs
jecxz
jg
sub
mov
jg
out
add
add
pusha
push
xor
or
jl
cmp
cmp
pop
lock
add
mov
sub
push
enter
and
pop
aam
ror
or
scas
sub
cmp
(bad)
push
inc
sbb
adc
or
inc
xor
add
pop
mov
cmp
addr16
mov
ficom
mov
clc
inc
sbb
sub
inc
adc
xchg
cmp
fadd
mov
or
fdivr
mov
mov
xor
push
rol
adc
jnp
dec
movs
ror
clc
aam
ror
or
adc
jle
test
cmc
add
or
psubusb
adc
inc
or
addr16
rcl
inc
add
jns
sub
adc
adc
sub
or
add
pop
mov
add
call
enter
(bad)
or
and
add
fwait
push
mov
xor
repnz
mov
sub
xor
pop
xor
or
sbb
ss
push
or
mov
(bad)
cmp
dec
pop
add
add
or
adc
imul
push
mov
xor
fs
mov
outs
rol
mov
mov
pop
jmp
mov
test
pop
mov
jo
stos
shl
push
inc
les
push
nop
pop
dec
and
or
jle
retf
xchg
cmp
jbe
imul
push
mov
or
xor
add
or
rol
xor
mov
and
add
add
sub
mov
aas
push
ins
mov
mov
or
ins
(bad)
les
push
xor
pop
adc
jb
inc
mov
sub
sbb
or
or
xchg
sbb
retf
or
add
stos
adc
add
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rcl
pop
stc
xor
xor
push
aam
dec
pushf
push
hlt
push
push
fs
mov
xor
nop
in
jle
xor
sub
adc
mov
add
jbe
mov
ffreep
jnp
addr16
loopne
jg
scas
cwde
and
mov
and
mov
add
jg
clc
sub
inc
inc
jne
cmps
in
mov
cld
xchg
sbb
sbb
and
push
xchg
and
xor
out
fiadd
fisub
and
fldenv
fnstsw
imul
lahf
mov
fdivr
add
xor
sbb
sub
push
bound
mov
mov
and
xor
xor
gs
call
lods
fwait
jmp
jbe
mov
daa
(bad)
xor
mov
pop
dec
das
std
pop
inc
add
loopne
fidiv
idiv
shl
loopne
or
shr
lea
std
mov
and
inc
adc
dec
aam
fidivr
pop
xchg
test
iret
xor
push
sbb
test
push
or
pop
jl
add
loope
dec
nop
jnp
dec
inc
shr
or
adc
inc
pop
dec
in
cmp
popa
sbb
enter
test
inc
inc
(bad)
cmp
add
jmp
cmp
or
mov
jo
mov
lea
mov
(bad)
aaa
nop
add
inc
jno
inc
popa
and
or
xor
inc
mov
add
inc
retf
lea
inc
and
add
add
pusha
and
addr16
adc
pop
sub
js
int3
outs
cmp
inc
enter
xor
sbb
push
add
add
and
pop
or
imul
xor
inc
sub
add
push
dec
int
push
push
adc
sti
xor
push
cdq
dec
aas
ss
shr
jmp
imul
or
adc
scas
add
or
inc
repz
cld
add
mov
stc
test
adc
add
ret
into
movs
jmp
push
(bad)
mov
add
sub
adc
or
mov
and
xor
adc
int3
test
push
aas
xchg
cld
mov
mov
add
mov
sbb
and
aas
add
xor
test
dec
xor
xor
dec
push
les
add
loopne
push
inc
xchg
add
rcr
repz
(bad)
fmul
or
sub
je
js
adc
cmp
jecxz
add
jmp
adc
jle
and
push
sub
push
les
(bad)
pop
ror
in
scas
inc
mov
or
ret
mov
xchg
xchg
sbb
sub
lock
in
add
xor
dec
je
inc
push
inc
aaa
push
xor
clc
pop
stc
aas
and
add
xchg
sbb
sti
jg
push
adc
inc
stos
sub
mov
dec
add
push
das
sbb
dec
add
sub
lahf
lea
or
inc
adc
and
or
cmp
loopne
or
mov
movs
and
in
add
adc
aaa
(bad)
jmp
ins
pusha
adc
pusha
shr
rol
and
adc
cmp
or
xchg
enter
sahf
jg
add
iret
rcl
add
add
push
xor
cld
add
inc
adc
push
inc
and
and
pusha
in
push
push
call
add
and
dec
test
or
add
push
rcr
jo
(bad)
jl
and
or
sbb
pusha
add
adc
cmp
mov
mov
loope
xlat
add
xor
or
test
adc
add
fistp
sbb
rol
into
clc
xchg
inc
mov
mov
dec
mov
or
rol
jecxz
inc
add
shl
dec
dec
inc
add
or
pop
or
mov
mov
add
rol
mov
push
sub
push
jo
fwait
sub
ret
loopne
sbb
sbb
enter
push
add
cmp
or
loope
sbb
daa
xor
jbe
(bad)
cmp
sbb
nop
adc
xchg
inc
nop
fisub
cmp
adc
bound
cmp
dec
inc
sahf
jo
lods
ins
test
xlat
mov
add
test
or
lahf
sub
and
inc
setb
and
and
jno
aas
mov
hlt
pop
imul
cmp
inc
or
bswap
sub
xor
and
pop
xor
aas
push
movs
sbb
inc
add
in
loopne
shl
cld
inc
or
sbb
jae
xor
add
pop
push
and
das
add
ins
and
cdq
cld
(bad)
or
lock
pusha
mov
aas
mov
lds
neg
pop
adc
or
inc
sub
adc
mov
or
dec
sbb
inc
stos
xchg
cmp
sbb
or
xor
xchg
mov
test
and
or
ret
sub
add
push
cmp
add
cld
sbb
pushf
jno
fiadd
adc
pusha
inc
loop
mov
mov
add
add
sub
xchg
inc
hlt
pusha
pop
or
es
adc
or
xor
sbb
mov
pop
call
ret
repnz
or
sub
jl
sub
test
loopne
test
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
push
call
sub
mov
add
shl
inc
jmp
sbb
and
add
loopne
stos
add
arpl
cmp
iret
adc
cmps
or
pop
sub
sar
add
gs
in
push
ror
sbb
outs
sbb
mov
push
pop
inc
adc
add
or
loope
stos
movups
adc
push
jne
pop
rcr
push
ins
add
aas
adc
in
call
arpl
xor
or
inc
and
adc
push
addr16
or
lods
xor
pop
pop
ret
mov
mov
jo
mov
cdq
push
cwde
jmp
call
sub
and
or
add
add
mov
add
pushw
int
and
int
ins
or
popa
daa
jle
repnz
add
or
push
cmc
cmp
adc
pusha
adc
and
out
test
mov
push
sahf
loop
jg
push
aaa
adc
sub
jo
pusha
repz
fisttp
dec
push
add
adc
iret
adc
sub
pop
xor
and
add
outs
or
dec
jecxz
ds
sbb
inc
mov
mov
aas
scas
inc
xchg
lds
mov
aas
push
(bad)
jae
push
xchg
nop
dec
das
lea
sar
or
inc
add
xchg
or
aam
nop
(bad)
test
dec
xor
adc
inc
mov
jge
push
or
sbb
nop
call
or
(bad)
repz
fisttp
push
xor
call
xchg
dec
add
add
sub
inc
push
call
test
xchg
in
and
push
sub
lods
jmp
cmp
adc
dec
xchg
sbb
stc
repz
dec
and
vpshlb
add
(bad)
(bad)
aas
dec
adc
lahf
xor
adc
inc
dec
test
aas
rcl
dec
shl
aaa
dec
sahf
stc
loopne
ja
mov
test
mov
in
movs
int3
xor
cmc
push
test
iret
inc
push
push
test
cld
or
add
inc
or
hlt
sub
cmps
add
cmc
repz
and
js
es
xor
adc
(bad)
jl
sub
push
xor
mov
push
mov
pop
pop
pushf
add
aas
inc
or
call
retf
nop
push
test
outs
fsub
lds
shl
mov
mov
or
xchg
mov
retf
mov
sbb
mov
adc
xor
sbb
test
mov
fisubr
add
add
xchg
hlt
and
in
add
out
mov
es
ror
inc
cs
nop
xor
xchg
push
test
scas
loopne
(bad)
push
add
popa
or
stos
test
inc
xor
rol
gs
or
pop
nop
inc
mov
fstp
or
fild
push
add
mov
add
or
dec
icebp
inc
sbb
sbb
movs
rcr
mov
cmp
ror
or
rol
jbe
(bad)
jb
enter
out
mov
out
jmp
mov
popa
inc
rcr
inc
add
add
pop
enter
cmps
cmp
adc
dec
cli
aam
mov
inc
cmc
cmp
outs
ins
mov
or
xchg
jno
add
add
or
(bad)
(bad)
jno
cld
inc
mov
push
repnz
pop
clc
xchg
lods
adc
fisub
dec
xor
enter
loope
call
or
jmp
rol
or
arpl
lea
dec
add
and
(bad)
mov
xor
or
add
js
sbb
add
pusha
xchg
inc
in
arpl
sbb
cmp
into
dec
add
icebp
inc
sbb
xor
js
inc
push
inc
test
or
fsubr
push
jl
cmp
aas
push
add
jo
adc
and
push
call
dec
aaa
adc
xchg
sbb
or
ret
adc
and
shr
addr16
pop
sbb
adc
addr16
mov
push
aam
or
bound
(bad)
clc
cmps
or
and
nop
ror
(bad)
add
dec
test
adc
nop
or
js
or
(bad)
mov
les
push
mov
or
sub
movs
mov
(bad)
ins
mov
and
push
add
push
imul
call
sub
add
inc
add
mov
add
push
adc
add
xchg
push
mov
inc
add
cmp
outs
or
inc
inc
add
loope
out
xchg
mov
sub
push
pop
adc
dec
pusha
adc
or
fld
pop
inc
and
sbb
or
and
out
shl
test
xchg
sub
xchg
es
std
xchg
cs
lods
hlt
add
jnp
add
ins
and
push
pop
cmp
fwait
pop
cmp
push
dec
js
sbb
mov
mov
fadd
push
mov
and
push
rcr
loopne
loop
pop
or
pop
inc
adc
sbb
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
shr
jne
ja
xchg
cmp
mov
mov
push
ins
sbb
add
inc
push
sbb
mov
mov
cmp
mov
or
push
mov
inc
push
or
ins
and
jg
js
add
inc
mov
dec
lock
iret
cmp
push
sti
mov
pop
push
sbb
ins
add
sub
or
rol
mov
inc
sahf
xor
mov
inc
cdq
dec
xor
gs
(bad)
repz
pusha
xor
popf
adc
(bad)
sub
aas
dec
mov
fbstp
jle
in
fnstenv
sbb
add
xor
add
loope
mov
int3
jo
in
xor
and
sub
dec
dec
add
mov
pusha
push
adc
loop
or
ss
inc
outs
cwde
or
sbb
xor
xor
mov
loopne
iret
pop
and
pop
and
test
pop
pop
js
push
cmp
repz
cmp
cmc
daa
nop
push
int
rcr
or
add
sbb
mov
xlat
fbstp
sub
pop
jo
pop
sbb
loop
pop
add
repnz
lds
clc
clc
(bad)
ss
xor
(bad)
aaa
fidiv
add
add
(bad)
xor
mov
xor
shl
xor
enter
xchg
jno
jecxz
and
adc
pop
cld
add
xor
nop
xor
add
outs
cld
ror
fs
push
mov
jns
stc
mov
and
lahf
xchg
sbb
adc
or
(bad)
aas
sub
inc
inc
das
push
sub
fs
fdiv
push
sbb
adc
jg
sub
adc
aam
add
call
cld
and
xor
xor
dec
lock
push
mov
and
push
popf
sti
cwde
xchg
dec
daa
add
retf
nop
and
aas
lods
adc
aas
ret
push
adc
shr
retf
lods
adc
lods
push
mov
ror
fwait
(bad)
jecxz
aas
int
fistp
mov
or
aas
imul
rcr
and
or
xor
call
(bad)
or
nop
lods
or
push
fdiv
add
aas
mov
and
sbb
adc
add
mov
or
add
xor
push
icebp
xchg
add
add
enter
adc
add
iret
(bad)
(bad)
loopne
sub
add
movs
lea
(bad)
add
or
inc
fisttp
fs
push
stc
adc
push
sar
push
mov
repz
sub
jns
shl
add
inc
jmp
pop
xor
inc
arpl
aas
(bad)
adc
rcl
adc
test
xor
sbb
xchg
unpcklps
sub
sub
js
mov
cli
xchg
add
aaa
ret
adc
int3
and
inc
bound
test
xchg
cmp
je
ins
lea
mov
inc
ror
sbb
ja
dec
sbb
push
cmp
adc
call
iret
or
jo
push
and
and
bound
inc
fistp
inc
fild
inc
scas
idiv
inc
or
shl
hlt
pcmpgtb
or
icebp
call
dec
adc
add
add
sbb
push
or
adc
loop
adc
cmp
into
mov
pop
mov
jmp
xor
mov
pop
mov
pop
inc
adc
or
jp
add
or
dec
add
xlat
aas
cld
push
lahf
pop
ins
sbb
data16
mov
aas
lock
cmp
or
dec
and
jp
cmps
sub
and
add
jmp
push
xor
and
and
add
inc
or
add
inc
push
xor
and
sub
adc
mov
fsub
inc
xchg
mov
loopne
pop
fmul
push
icebp
cmp
movs
leave
and
(bad)
daa
out
test
adc
or
dec
aaa
scas
shl
inc
add
es
pop
mov
popa
xor
add
add
lea
shl
mov
xor
or
ret
mov
add
sbb
cmp
loop
inc
mov
lds
out
nop
dec
sub
and
add
cwde
sbb
adc
and
mov
inc
pop
rol
lock
push
jecxz
(bad)
outs
push
inc
lea
mov
or
and
aad
es
adc
mov
push
sbb
add
mov
sbb
add
nop
xchg
cli
xor
inc
inc
dec
adc
add
add
sbb
mov
adc
mov
ret
xchg
mov
or
sbb
pop
pop
xchg
add
mov
add
rol
dec
icebp
ret
pop
jbe
or
mov
shrd
or
or
add
into
data16
mov
pop
mov
and
loopne
inc
add
push
mov
out
adc
jo
(bad)
push
pushf
inc
add
xchg
imul
sub
adc
add
or
pushf
in
pop
xor
cwde
add
and
rcr
int
and
add
push
ret
jb
or
and
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
adc
pop
mov
fdivr
fiadd
adc
add
cmp
inc
(bad)
xor
mov
pop
daa
(bad)
mov
mov
jmp
mov
sub
pop
mov
sbb
xor
cld
dec
mov
call
add
inc
inc
stc
xchg
inc
inc
sbb
call
and
and
(bad)
fild
daa
push
and
xchg
xchg
push
xchg
pop
or
mov
outs
add
dec
xor
shl
xlat
push
stc
mov
loopne
ret
pop
mov
push
adc
xchg
mov
xlat
(bad)
stc
xchg
pushf
xor
ins
xchg
pop
ins
ret
(bad)
inc
imul
add
push
gs
int
inc
fisttp
add
push
push
or
xchg
or
mul
cmp
(bad)
jmp
(bad)
and
or
xor
ret
test
inc
inc
jbe
mov
or
nop
sub
cld
arpl
dec
cmp
sbb
xor
fiadd
adc
enter
add
cmp
jecxz
xor
into
inc
nop
xor
add
rcl
sbb
repz
(bad)
mov
arpl
or
(bad)
mov
cmps
sbb
adc
pop
adc
push
sub
wbinvd
xor
and
xchg
inc
inc
xchg
push
out
and
push
mov
dec
adc
or
add
cwde
mov
(bad)
mov
or
popa
je
sub
lds
push
movs
dec
cmp
mov
cmps
test
out
outs
xchg
sub
pop
or
pushf
pop
call
mov
inc
cwde
cld
repz
dec
iret
xor
hlt
adc
jmp
mov
inc
and
xor
mov
aas
or
jo
mov
inc
inc
xchg
pop
les
cmp
adc
inc
scas
sub
jne
xlat
lea
and
cdq
lock
adc
xor
add
and
fnstsw
jecxz
inc
scas
mov
inc
mov
push
mov
leave
mov
loop
xor
xor
pop
je
or
mov
xor
shr
push
cmps
inc
std
pop
loop
and
sbb
aas
jb
xor
mov
xor
ror
lock
das
push
les
enter
dec
nop
test
add
xor
retf
xor
repz
add
sbb
jae
repnz
mov
cs
fs
jl
scas
pop
mov
stos
mov
leave
xchg
movs
cwde
sub
jmp
xchg
mov
add
mov
pop
ror
hlt
enter
or
fadd
mov
cmp
icebp
ja
ffree
(bad)
icebp
(bad)
or
jmp
sar
sbb
sbb
mov
in
sub
mov
xor
mov
sidtd
dec
xor
inc
test
icebp
add
dec
aaa
jae
neg
jge
test
cmp
pusha
xor
sbb
adc
fprem1
fadd
add
jo
and
test
push
inc
push
call
les
aad
jno
or
add
inc
or
std
in
inc
and
inc
icebp
mov
(bad)
and
pop
test
outs
aaa
mov
adc
ret
sbb
jecxz
fdiv
pop
ja
xchg
lahf
(bad)
ret
xor
mov
rcr
mov
adc
cmp
inc
sbb
cmp
cmp
and
adc
pushf
mov
xchg
sar
inc
loopne
dec
and
push
add
sub
cmpps
mov
xor
xor
inc
cs
and
mov
xor
je
xor
add
push
xchg
sbb
mov
or
and
add
push
xchg
pusha
imul
leave
outs
and
xchg
inc
cs
or
or
push
mov
cwde
xor
xor
sub
cld
ret
add
and
pushw
jecxz
add
add
js
enter
ror
cmp
jb
sbb
mov
aas
loopne
or
add
pusha
add
jl
sbb
add
rol
sub
sbb
hlt
cmp
pop
(bad)
mov
add
mov
add
scas
pusha
inc
push
sbb
dec
push
mov
pop
xchg
adc
adc
cmp
aas
(bad)
mov
or
inc
sbb
es
sbb
jae
arpl
and
inc
adc
rol
cmp
add
adc
add
or
xchg
inc
lods
loope
or
ret
aas
inc
add
cmp
rcr
lock
inc
retf
and
sub
inc
ror
cmp
stos
add
inc
cs
add
dec
mov
sbb
mov
loope
adc
aam
pop
mov
mov
retf
int3
adc
(bad)
popa
push
or
bound
into
rol
pop
dec
loopne
or
and
or
in
push
rcl
add
jno
cwde
sahf
adc
imul
cmp
push
xchg
jg
inc
ja
pop
imul
daa
adc
inc
mov
nop
lock
sbb
cmps
cmp
fsubr
add
push
loop
push
stos
daa
sub
add
and
add
or
inc
sub
add
add
add
add
or
mov
rol
iret
xchg
aas
test
and
int3
out
popa
inc
add
cli
or
shr
sbb
fs
mov
jne
imul
inc
dec
(bad)
adc
push
stos
xchg
neg
jl
mov
adc
call
push
scas
sub
xchg
xor
inc
push
push
test
adc
dec
xchg
cld
cmp
pop
cmp
repnz
inc
ret
mov
add
ret
push
add
add
aam
call
data16
scas
imul
imul
call
imul
inc
add
add
popa
adc
in
lahf
aaa
xlat
sbb
(bad)
sbb
retf
or
push
xor
sub
das
pop
mov
add
sbb
(bad)
mov
pop
adc
stos
add
test
mov
imul
pop
ja
add
pop
pusha
push
sub
push
(bad)
movs
shl
cdq
std
fmulp
cmp
mov
mov
lock
mov
clc
add
adc
int
enter
jle
popa
repz
xor
sub
adc
inc
pop
push
pop
test
sbb
out
lea
imul
push
xor
inc
sbb
enter
aas
sub
and
test
jo
shl
xchg
cld
adc
pop
push
lock
sbb
in
xchg
mov
(bad)
test
int3
xor
mov
ror
in
(bad)
clc
popa
ror
mov
sub
lods
mov
arpl
cmp
aaa
cdq
and
loope
adc
push
sub
daa
xor
int3
sub
sets
dec
xchg
dec
aas
imul
adc
add
loopne
add
add
call
pop
sub
and
sbb
test
jp
or
aas
hlt
jecxz
xor
stos
dec
sbb
out
and
rcr
inc
loop
inc
lea
jecxz
daa
cmps
je
xchg
add
mov
or
stc
out
xchg
arpl
or
movs
push
dec
pop
int
movs
enter
add
aas
data16
arpl
and
gs
pop
xor
lock
scas
jp
cmp
or
cmps
inc
sbb
je
adc
aas
retf
xor
sbb
ror
outs
cmps
out
and
(bad)
sub
clc
lsl
call
fcom
inc
sbb
or
lock
pushf
jmp
inc
push
fcom
xchg
sbb
aas
cwde
xchg
clc
iret
sbb
xchg
imul
rcr
add
add
add
rol
or
ret
xchg
loope
dec
cs
jo
jo
fsin
retf
enter
inc
cmp
and
pusha
add
pop
rol
adc
sbb
and
jnp
pop
xor
int3
sbb
hlt
xor
js
pop
jp
xor
ret
aam
test
add
hlt
xor
lods
mov
rol
(bad)
adc
mov
inc
xor
cld
inc
inc
icebp
inc
push
inc
ss
nop
and
mov
imul
or
xchg
dec
mov
cmp
dec
xchg
dec
outs
inc
retf
sti
aas
out
push
movs
sub
dec
lock
dec
test
add
cwde
inc
dec
fstp
and
in
jns
add
add
or
js
enter
adc
add
sar
or
add
popa
mov
pop
sbb
fs
push
inc
ret
cmp
adc
add
and
pop
adc
push
mov
dec
std
and
pop
dec
lds
add
sbb
int
(bad)
mov
add
rol
push
in
mov
push
push
nop
adc
popa
adc
pusha
xchg
inc
mov
and
leave
(bad)
js
inc
nop
repz
or
add
cmp
pop
arpl
les
addr16
add
add
loopne
xor
test
and
xchg
pushf
add
sub
sbb
(bad)
js
adc
pusha
cvtps2pi
xchg
adc
xor
xchg
and
pusha
rcl
movs
or
call
mov
outs
add
dec
js
outs
mov
movs
fs
addr16
mov
lea
(bad)
and
imul
xor
lock
add
adc
idiv
pop
cmp
adc
(bad)
cwde
shr
sub
add
inc
lea
pusha
add
call
inc
push
adc
mov
out
xlat
xor
nop
repz
out
sbb
inc
push
push
push
xchg
test
or
mov
data16
sub
add
inc
sbb
cmp
add
push
or
ror
cmp
and
push
mov
stos
or
push
dec
sub
out
jge
dec
pop
sbb
push
inc
sub
(bad)
sbb
ja
add
pushf
mov
daa
enter
rcl
pushf
loope
sbb
sbb
mov
or
and
cs
add
dec
adc
cmp
lock
fadd
adc
dec
add
pusha
and
adc
sub
rcr
mov
adc
loope
test
xor
push
test
loopne
push
inc
and
jmp
sub
stos
(bad)
dec
imul
test
push
pop
std
(bad)
das
push
add
pop
push
add
mov
or
add
pushf
popa
ucomiss
test
pop
or
loope
dec
fadd
es
rcl
rol
mov
add
mov
adc
xor
mov
enter
and
push
out
adc
cmp
pop
xchg
xchg
int
and
add
xor
or
mov
adc
pop
scas
inc
inc
aaa
mov
ret
or
sub
test
subps
(bad)
clc
adc
jecxz
je
mov
js
and
in
pop
sbb
sbb
sub
sub
xor
jo
xor
push
cld
add
sbb
and
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
inc
cmp
cs
pop
mov
ret
mov
mov
mov
sbb
push
push
mov
adc
rol
(bad)
(bad)
and
hlt
ja
in
add
dec
out
pop
xor
push
cld
js
sbb
sbb
push
and
add
jnp
or
rcr
jle
inc
aad
jno
push
mov
fdiv
movs
sbb
cmp
jmp
pop
sbb
mov
outs
ficomp
cdq
pop
xor
add
sub
bound
mov
mov
add
and
mov
mov
test
mov
jp
cmp
xor
ja
adc
xor
dec
xor
out
fbstp
imul
fwait
rcl
movsx
mov
mov
mov
out
mov
leave
(bad)
gs
adc
fadd
(bad)
adc
and
inc
push
xor
mov
rcr
fs
ret
(bad)
jo
xor
add
or
mov
cwde
and
add
lods
or
call
dec
jl
and
js
fnstcw
mov
xor
push
jno
rcl
nop
pop
call
mov
sub
jno
jno
nop
push
ins
adc
sub
sbb
mov
leave
xor
push
push
jbe
loop
inc
inc
sbb
or
test
and
clc
rdpmc
sub
ror
into
xor
push
hlt
in
jle
sub
pop
cmp
add
or
ret
or
xor
lock
int3
sub
iret
or
lock
(bad)
dec
cmp
xchg
add
test
inc
and
cld
repz
xor
dec
aas
call
xchg
movs
inc
or
adc
and
inc
ja
rol
aas
test
and
xor
jmp
adc
or
std
cmp
mov
push
dec
adc
or
arpl
adc
(bad)
mov
dec
add
adc
dec
or
hlt
mov
or
pop
fild
inc
lock
call
test
outs
out
or
mov
add
adc
inc
shr
imul
hlt
jae
or
push
es
push
mov
retf
inc
mov
mov
scas
and
mov
xor
dec
aad
or
mov
mov
pop
mov
jne
cld
xor
inc
mov
jmp
or
xchg
add
test
or
scas
js
add
call
mov
int3
xor
mov
scas
and
sbb
pusha
es
mov
sbb
xor
enter
or
cmp
int3
mov
fsub
and
or
inc
sub
fdiv
call
cmp
cdq
cmp
xchg
or
or
add
rcl
shl
and
cs
or
in
and
and
sti
clc
xor
mov
mov
popa
fadd
xor
jno
cmp
ret
add
cmp
jo
loope
rcr
adc
adc
pop
daa
and
sub
or
test
repz
fsubr
ins
xor
mov
ret
daa
ds
adc
out
hlt
dec
outs
rcl
push
test
and
or
imul
enter
and
add
push
mov
pusha
bound
dec
mov
mov
and
pop
mov
sbb
cdq
add
add
mov
shr
(bad)
icebp
add
loopne
pop
adc
xor
or
dec
add
hlt
or
or
add
and
add
sbb
or
nop
mov
inc
push
inc
push
or
adc
push
add
(bad)
push
add
adc
pop
adc
hlt
(bad)
push
or
inc
imul
mov
in
or
pop
call
cwde
clc
inc
adc
push
add
xor
mov
out
xor
push
lea
mov
nop
adc
pop
inc
and
add
and
adc
(bad)
push
in
icebp
mov
adc
mov
or
cld
jecxz
cs
inc
lock
or
stc
ret
lock
mov
out
inc
add
into
xor
in
in
test
and
loopne
pop
(bad)
cmp
and
(bad)
sbb
lock
and
push
addr16
movs
jno
ret
or
xchg
or
aam
add
push
add
clc
and
ja
inc
sub
and
aaa
mov
adc
push
lock
xchg
and
es
push
cld
inc
push
pop
mov
push
ror
test
mov
add
inc
mov
sub
or
jo
test
add
fld
jg
or
mov
add
pusha
bound
xor
xor
loopne
mov
xchg
and
enter
xor
int3
arpl
adc
push
sbb
test
jno
sbb
adc
dec
push
sbb
sub
or
add
and
loopne
popa
add
and
or
xor
test
adc
mov
and
rol
test
push
loopne
add
rol
aas
test
scas
add
(bad)
or
rol
jo
das
ins
and
push
xchg
or
loop
add
dec
test
add
mov
add
lock
adc
xor
pop
hlt
and
stos
pop
xchg
sub
xor
xchg
add
loopne
xor
pop
sbb
sbb
loopne
push
fadd
(bad)
sahf
jmp
add
adc
push
push
or
mov
aaa
adc
inc
push
lock
add
mov
sbb
push
inc
ret
push
or
add
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
sbb
pop
mov
fdivr
pop
(bad)
jle
or
test
push
(bad)
repz
push
stos
adc
cli
ins
and
mov
popf
push
mov
aaa
outs
repnz
xor
mov
je
das
adc
aas
dec
outs
push
or
int
outs
fist
pop
outs
fs
mov
push
mov
add
sbb
dec
je
jp
or
out
pop
pop
mov
adc
push
pop
fwait
xor
std
pop
out
xchg
(bad)
popa
adc
int3
cdq
aaa
mov
sub
pop
adc
into
mov
aas
adc
nop
cmp
shr
jne
mov
rol
outs
xor
jmp
jge
inc
adc
jg
scas
shl
mov
inc
jae
repnz
(bad)
mov
call
movs
and
nop
js
leave
(bad)
scas
pop
jmp
push
int
aas
add
push
loopne
xchg
inc
push
dec
inc
adc
dec
dec
repz
fs
nop
aad
fisubr
mov
xlat
or
xchg
cld
mov
inc
pop
xor
mov
push
cld
sbb
(bad)
sbb
mov
nop
jle
std
adc
aaa
fwait
or
xchg
adc
adc
lea
mov
test
aas
and
and
adc
mov
lock
xor
dec
test
call
dec
aaa
out
and
add
pop
pushf
add
xor
enter
inc
adc
mov
dec
push
mov
sbb
xchg
ret
sub
pusha
shl
popf
sub
xor
in
push
nop
or
dec
adc
xchg
push
cmp
sbb
hlt
jecxz
or
loopne
int3
or
cld
shr
add
addr16
ret
add
outs
mov
or
wbinvd
or
or
mov
add
add
aaa
push
fs
add
and
dec
add
ret
mov
and
retf
pop
daa
push
(bad)
push
movs
inc
mov
pusha
icebp
(bad)
adc
mov
les
jmp
or
xchg
fiadd
ja
xor
adc
xor
sar
push
test
sbb
sub
test
jle
push
dec
outs
lods
or
sar
daa
mov
add
sbb
push
cmp
in
inc
retf
fadd
adc
call
sub
cmp
(bad)
leave
and
sub
retf
scas
dec
inc
add
and
adc
and
and
add
and
fsubr
sbb
inc
retf
dec
lock
aad
sub
inc
add
add
mov
inc
or
mov
das
mov
xor
push
mov
inc
mov
mov
and
idiv
cwde
mov
xchg
and
cmp
or
add
jmp
xor
xchg
(bad)
(bad)
in
gs
cmp
mov
cs
mov
and
xchg
sub
in
xchg
pop
fistp
sub
out
int3
imul
xchg
inc
ins
add
add
mov
or
test
call
adc
add
xor
jbe
inc
shl
add
mov
mov
iret
aas
pop
jo
and
add
jo
push
inc
shl
xor
push
mov
enter
push
push
and
sub
add
xor
jno
or
das
rol
sbb
push
test
or
bound
jecxz
jecxz
shl
ror
popa
or
rol
(bad)
fdiv
(bad)
dec
mov
ret
inc
lahf
jg
xchg
sbb
jbe
and
and
cmp
push
and
add
wrmsr
sub
xchg
cwde
add
xor
add
jae
inc
nop
jb
rcr
xchg
pushf
leave
inc
mov
clc
inc
adc
xchg
test
popa
mov
dec
cld
xchg
and
movs
sub
pop
inc
add
nop
add
js
or
fisub
js
repnz
test
dec
push
or
add
xor
mov
movd
or
adc
xor
(bad)
jle
cmp
mov
adc
cs
add
nop
or
xor
adc
add
pop
out
cdq
xchg
push
sbb
adc
loopne
or
shl
jo
or
push
rol
add
enter
sub
stos
nop
in
hlt
lock
and
fadd
push
or
xchg
pusha
cld
add
loopne
xor
into
or
(bad)
cld
jecxz
jmp
push
xor
inc
add
enter
bound
push
inc
stos
popa
(bad)
xor
push
mov
mov
xor
inc
add
mov
add
js
adc
add
jae
adc
or
lock
sub
outs
add
pop
mov
or
cmp
or
ret
bound
mov
mov
inc
xor
add
adc
clc
cmp
aam
aam
(bad)
push
or
mov
je
inc
cmps
mov
add
rol
push
repz
or
or
mov
add
xor
imul
mov
test
ret
or
lock
in
loope
inc
cmp
push
mov
cmp
test
stos
test
paddd
push
jb
mov
and
and
xchg
adc
and
(bad)
mov
add
nop
rol
adc
push
adc
xchg
adc
pop
xchg
loopne
and
sub
nop
and
add
jno
sub
(bad)
mov
mov
scas
call
add
adc
add
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
inc
test
or
loop
mov
pop
inc
int3
(bad)
stos
cmp
and
sub
idiv
push
ja
lahf
retf
pop
sub
hlt
pop
les
shl
shl
sti
push
lods
fmul
sbb
mov
add
shr
add
mov
add
xchg
lds
and
mov
add
arpl
repz
aaa
das
gs
pushf
lock
add
sbb
adc
xchg
xor
aaa
push
(bad)
or
pop
aad
fnsetpm(287
(bad)
mov
jnp
or
(bad)
jns
fmul
call
js
ret
cmps
cwde
loopne
aam
push
(bad)
or
sub
sbb
inc
xchg
and
xor
jmp
or
adc
lock
jns
xor
or
int3
sbb
or
int3
sbb
clc
daa
inc
xor
(bad)
aad
xor
lahf
xchg
popf
daa
mov
dec
xor
jp
and
inc
pop
or
shl
int3
lock
xor
or
mov
ror
sbb
(bad)
push
jg
push
je
and
adc
int3
xor
lods
test
inc
cs
dec
test
cmps
clc
rdpmc
sub
and
jecxz
(bad)
enter
or
lock
add
ss
xor
or
movs
ror
aas
jmp
enter
adc
pop
test
sar
mov
rcl
and
ret
aas
sub
mov
(bad)
cld
lock
std
xrelease
sbb
dec
aaa
pushf
sbb
inc
push
dec
dec
jns
xor
fdiv
sbb
cld
xor
iret
adc
cmp
mov
nop
or
add
pop
into
xor
push
add
movs
and
inc
and
sbb
iret
add
mov
popf
stc
lsl
inc
lock
add
adc
add
adc
int3
xor
sub
dec
dec
nop
ror
jnp
inc
rol
mov
sbb
jbe
iret
xor
push
sti
iret
lods
add
xchg
clc
sub
cmp
adc
mov
or
push
cmps
pop
bound
add
mov
sbb
inc
adc
xchg
inc
int3
shl
dec
pop
sub
or
sub
or
rcl
es
daa
rcr
pusha
aam
lds
add
call
les
sub
sub
(bad)
and
and
or
add
repnz
hlt
cmp
mov
cwde
out
sbb
pcmpgtb
rol
add
clc
jno
add
push
xor
lock
and
jns
test
ss
jne
or
pop
lods
popf
mov
in
jl
adc
jp
cmp
sub
rol
pop
lods
inc
out
ja
xor
fsub
hlt
dec
and
inc
sub
cmp
mov
add
sbb
or
sar
add
xchg
iret
aaa
mov
or
add
je
sbb
inc
retf
push
push
cmp
mov
add
mov
and
or
cmp
fcom
push
ja
dec
and
shl
inc
in
lock
stc
lods
dec
or
inc
or
and
inc
rol
or
loopne
adc
push
push
xor
push
or
dec
sub
nop
rcr
xchg
push
mov
lds
inc
add
outs
shl
mov
or
shr
mov
xor
xor
mov
xchg
sbb
adc
xchg
test
and
add
js
xor
test
sbb
pop
dec
je
mov
dec
repnz
aas
sbb
adc
cmp
mov
adc
enter
mov
xor
sbb
call
ret
or
add
mov
adc
or
jo
aas
stos
mov
xchg
jo
jo
repz
je
ins
add
les
popa
pop
xor
add
nop
cmp
stos
sbb
aas
sbb
pop
add
mov
aas
mov
enter
in
mov
add
repnz
inc
int3
jo
inc
int3
and
dec
and
ret
sbb
cmp
xor
push
or
and
jle
inc
adc
or
mov
inc
pcmpeqb
in
loopne
test
adc
mov
and
push
inc
and
mov
cdq
add
or
mov
xchg
inc
lock
add
mov
mov
fs
pop
imul
adc
or
inc
addr16
out
xchg
sbb
mov
adc
jne
or
into
cld
and
add
cmp
inc
adc
ficom
ss
arpl
(bad)
mov
aaa
add
clc
inc
mov
ss
xchg
mov
rol
or
dec
pusha
add
fadd
sub
nop
es
or
and
add
and
mov
sbb
jo
cmp
nop
and
mov
add
lock
ss
pop
xchg
or
pop
aam
repnz
inc
loopne
scas
mov
or
and
pop
xor
enter
(bad)
popa
adc
sub
nop
mov
xchg
pop
push
shl
pop
sub
or
cs
or
add
push
and
xor
rol
pop
mov
and
push
add
dec
sbb
lock
and
jns
add
fs
test
and
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
dec
cmc
jmp
jp
and
cwde
mov
mov
pop
sbb
xor
pop
lods
xchg
or
test
push
xchg
push
test
(bad)
jb
(bad)
sbb
pop
add
adc
add
push
xor
sbb
sbb
inc
and
leave
xchg
sub
adc
and
or
pop
(bad)
push
(bad)
add
stc
cmps
lds
cld
repz
cmps
jg
ss
imul
jecxz
sbb
jae
nop
cwde
popf
jns
xchg
mov
push
adc
retf
leave
mov
imul
fbstp
repz
add
fucomp
sbb
inc
aam
adc
scas
add
leavew
nop
aaa
ret
(bad)
or
xor
or
xchg
sbb
imul
pop
(bad)
jnp
ds
mov
fcomp
jp
cmp
pop
sub
ins
cmps
jg
(bad)
jns
pop
pop
and
jg
popf
pop
fnstenv
add
adc
iret
sub
add
sub
push
adc
jle
sbb
sbb
int3
arpl
or
lea
and
les
add
mov
int3
xor
push
or
mov
(bad)
inc
nop
add
dec
movs
ror
cwde
popa
mov
dec
jecxz
and
pusha
pop
push
imul
mov
aas
mov
adc
and
aas
hlt
add
dec
jp
stc
cmp
add
dec
cwde
loopne
inc
retf
adc
add
cld
repz
aas
jns
test
sub
or
pop
adc
adc
adc
pop
shl
iret
adc
mov
add
sbb
cmp
mov
mov
ins
mov
xor
sub
cld
jmp
fwait
inc
jo
and
aas
inc
sbb
iret
cmp
rcl
cmovae
lods
inc
ret
dec
arpl
sub
int
and
clc
iret
sbb
pop
add
mov
and
je
add
inc
mov
aas
int3
ror
(bad)
jl
int3
aaa
in
cmc
sub
jl
cmp
xor
mov
xor
enter
cld
jo
push
xchg
sub
aas
and
ror
fadd
sub
test
jmp
nop
and
add
and
dec
xchg
add
sub
or
in
and
push
mov
adc
or
add
loope
push
add
mov
mov
xor
add
rol
xor
(bad)
cli
iret
pop
jmp
add
xchg
pop
adc
add
xor
call
mov
or
cmp
inc
add
les
add
and
iret
adc
xor
or
cmp
and
xor
push
loop
mov
cld
xor
cs
(bad)
adc
or
xor
(bad)
call
or
outs
jecxz
push
mov
jmp
xor
int3
xor
and
int
ror
(bad)
ror
jo
sub
xor
mov
pop
pop
inc
in
xor
and
loope
ret
mov
push
sub
cs
sar
dec
xor
out
in
mov
inc
or
or
add
or
xor
jmp
nop
add
enter
repnz
dec
aaa
rol
adc
ret
dec
add
fdiv
ucomiss
mov
push
jmp
cmp
(bad)
mov
jg
mov
add
lock
or
sbb
dec
or
shl
push
mov
in
rcr
test
fcmovnu
test
int3
pusha
push
add
inc
add
adc
pop
cli
pop
addr16
cli
pcmpgtb
mov
lods
jg
or
and
push
inc
xchg
add
dec
or
add
lock
mov
cmpps
imul
pusha
add
inc
mov
and
dec
and
inc
push
arpl
or
cwde
ret
sbb
inc
add
imul
and
add
xchg
mov
and
rol
enter
rcr
hlt
and
gs
in
ror
mov
add
inc
adc
into
jo
ins
add
xchg
scas
test
mov
add
addr16
push
add
add
and
jg
inc
or
adc
mov
in
cs
inc
rdmsr
jo
cmp
clc
(bad)
loope
and
or
icebp
btr
cmps
and
add
sar
mov
sub
and
adc
and
mov
scas
sbb
call
scas
and
and
sbb
mov
xor
fs
add
sub
add
lock
in
and
repz
fadd
jns
and
stos
mov
pop
cs
cmp
icebp
test
cwde
and
sar
nop
add
and
and
or
inc
inc
call
dec
enter
xor
cs
pop
or
rol
push
add
inc
add
add
lock
cwde
adc
fcmovnbe
loopne
cmp
and
sbb
stos
inc
rcr
sub
sub
push
adc
aas
int3
push
pop
mov
add
test
cwde
leave
jbe
mov
or
test
or
mov
and
sbb
rcl
mov
cwde
mov
adc
pop
scas
rol
add
xchg
adc
push
in
inc
and
add
inc
nop
or
inc
adc
rol
xor
mov
nop
sub
enter
adc
iret
call
dec
add
or
sub
inc
inc
push
sahf
fwait
ror
in
and
or
add
inc
rol
adc
add
sbb
jp
xchg
or
pop
imul
or
push
sbb
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
jg
jp
jo
push
mov
xor
add
add
icebp
cmp
test
mov
inc
xchg
push
cmc
mov
lahf
cmps
jle
dec
aam
mov
movs
int
(bad)
bound
hlt
ja
mov
xor
jns
mov
push
add
js
push
ror
adc
mov
xor
add
lds
shl
ret
imul
jmp
cdq
pop
sub
adc
inc
inc
or
jp
fmul
inc
mov
inc
mov
jae
iret
fstp
addr16
mov
jb
push
addr16
test
xchg
push
adc
mov
mov
or
mov
repnz
imul
inc
add
dec
sub
mov
adc
int3
fisubr
sub
push
mov
shr
repz
(bad)
mov
call
ds
imul
inc
mov
or
push
and
aas
lsl
pop
aaa
add
test
mov
icebp
dec
es
jl
rol
or
cld
or
or
mov
rol
cmp
adc
je
test
jns
jns
into
sbb
or
fdiv
xchg
add
aam
bound
dec
aas
(bad)
adc
add
add
mov
inc
adc
add
ins
loopne
(bad)
adc
inc
ret
sbb
or
cmp
push
push
push
add
adc
mov
mov
inc
add
xor
dec
adc
sbb
inc
enter
sbb
in
cdq
and
add
inc
sbb
or
outs
fcom
hlt
(bad)
and
cld
mov
xor
sbb
hlt
jmp
and
and
sub
sbb
cmp
inc
mov
sbb
sbb
pop
call
cmps
loope
jae
add
repz
enter
add
adc
sub
fdivr
retf
or
or
inc
inc
xchg
pop
inc
adc
and
les
inc
pusha
les
or
(bad)
rol
add
sub
or
retf
xor
adc
and
nop
ret
push
loope
xor
xchg
push
xor
adc
cmp
icebp
movups
jl
sar
pusha
mov
aas
sub
add
inc
int
add
or
or
xchg
call
sub
leave
add
add
repnz
xor
lea
jno
rol
nop
cmp
popa
call
push
push
mov
enter
add
ret
into
int
(bad)
jae
mov
push
test
xor
cld
adc
push
mov
es
aas
cmp
or
push
or
rol
loop
arpl
xor
ins
mov
ret
pop
push
adc
loope
jmp
dec
nop
cli
inc
clc
mov
push
into
test
pop
xor
add
int
(bad)
int
xor
mov
jl
repnz
sub
adc
lahf
xor
and
or
scas
clc
fucomi
push
pop
sbb
test
sub
test
(bad)
scas
inc
cmp
xor
or
mov
add
sbb
xor
nop
inc
adc
inc
jo
xchg
and
or
out
cmps
and
xchg
or
cmp
mov
or
push
xchg
cmp
pop
or
mov
cmp
in
xchg
sbb
adc
mov
rol
xchg
add
adc
pshufw
retf
fwait
mov
inc
es
cld
popa
adc
enter
sbb
add
ret
aad
push
jo
call
sbb
sti
inc
aaa
repnz
pop
pushf
dec
loope
mov
sbb
(bad)
xchg
inc
xor
ss
dec
jns
shl
(bad)
mov
add
add
sbb
add
ucomiss
mov
adc
jecxz
iret
rol
rol
add
mov
adc
pop
jno
xchg
lock
rol
test
aas
sbb
xor
mov
pop
retf
and
mov
adc
add
push
rol
mov
pop
ins
and
imul
cmp
mov
test
add
xor
or
inc
sbb
cwde
xor
ror
clc
(bad)
and
lea
sub
addr16
inc
add
hlt
nop
add
push
add
xchg
loope
cs
push
mov
call
ror
add
dec
push
mov
or
enter
or
push
icebp
xchg
(bad)
arpl
cmp
mov
loopne
sbb
rcl
mov
sbb
xor
imul
xor
sub
add
add
or
mov
or
inc
and
mov
lea
call
inc
sub
pop
aaa
add
ins
(bad)
add
xor
xor
xchg
adc
xchg
ror
mov
jg
inc
and
push
add
in
inc
ror
sbb
xor
bound
and
fisubr
add
fadd
and
push
push
adc
add
jo
rcr
add
ror
cmp
(bad)
loope
mov
pop
add
cmp
adc
ss
mov
and
cmp
sete
inc
sub
faddp
pextrw
cmp
jo
and
and
jns
out
daa
sbb
nop
adc
pusha
pop
mov
dec
out
mov
out
les
jle
add
and
sub
push
and
xchg
cmp
add
int3
jmp
or
or
ror
dec
loopne
cmp
popf
inc
mov
adc
stos
cwde
mov
add
imul
adc
loopne
outs
or
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
ror
mov
inc
xchg
and
hlt
(bad)
mov
xchg
call
(bad)
or
sbb
xchg
(bad)
stos
pop
aas
sub
and
xor
ja
enter
addr16
in
out
xchg
or
xchg
jecxz
pop
xor
adc
nop
call
icebp
scas
inc
or
sub
mov
out
inc
pop
inc
cld
imul
mov
xchg
or
add
mov
outs
into
mov
xor
cli
out
ficomp
sbb
xor
cwde
inc
and
stos
jmp
xor
jmp
xor
or
adc
sub
mov
je
mov
mov
xchg
jmp
sar
dec
test
inc
imul
sbb
mov
fdivr
adc
jnp
inc
inc
xor
imul
icebp
scas
cmp
fdivrp
aas
jecxz
pop
jecxz
imul
mov
icebp
movlps
or
inc
sbb
std
adc
xor
dec
dec
mov
dec
aaa
(bad)
cmp
loope
inc
adc
icebp
(bad)
adc
xor
iret
outs
loope
neg
ss
xor
or
adc
xchg
inc
sub
mov
push
(bad)
int3
or
mov
mov
xor
jbe
mov
sub
add
push
add
mov
mov
xor
cmp
mov
ja
aam
iret
jb
sub
lock
push
adc
xor
push
sbb
dec
or
add
iret
and
add
js
das
jl
test
jne
inc
adc
popa
add
xor
inc
ret
fsub
jmp
shl
mov
pushf
jmp
clc
and
or
add
and
and
and
push
or
sub
add
and
hlt
ror
paddb
iret
or
adc
mov
push
sub
inc
xor
inc
cdq
sahf
lods
dec
xchg
dec
dec
je
nop
mov
add
or
adc
(bad)
push
pop
lods
jmp
push
test
(bad)
sbb
clc
xchg
ror
dec
add
mov
mov
pop
call
jo
test
movs
pop
shl
pusha
dec
cmp
sbb
mov
int
outs
scas
test
inc
or
mov
leave
inc
adc
dec
add
fdiv
mov
rol
push
inc
retf
add
push
add
das
std
repz
jmp
dec
popf
sbb
add
inc
imul
add
retf
std
ror
cdq
out
ret
ret
call
cmp
jge
mov
nop
add
fdiv
sbb
cld
mov
push
jb
xchg
mov
inc
pop
adc
pop
cmp
pop
or
fmul
cmp
xchg
ret
push
or
rol
mov
mov
or
fwait
xchg
or
sub
add
adc
test
shr
(bad)
sbb
lahf
mov
aas
js
pop
adc
sbb
nop
ret
or
add
in
mov
rcl
pop
mov
pusha
dec
pusha
outs
or
add
push
mov
mov
add
mov
(bad)
and
adc
ja
xor
cmp
push
or
vprotb
fadd
or
retf
pop
xchg
jg
in
cmp
adc
mov
push
and
pop
and
aas
(bad)
jmp
mov
mov
add
mov
pop
je
pop
add
or
sbb
inc
lds
xor
or
inc
mov
pop
or
sbb
cs
or
sahf
icebp
(bad)
shl
push
xor
mov
popa
push
sar
pop
rol
or
sbb
and
add
jne
mov
xor
xor
push
cli
xchg
push
push
add
inc
sub
mov
inc
jns
mov
inc
add
mov
daa
push
rcr
sbb
sbb
mov
cmp
sbb
mov
int3
adc
add
add
lock
pavgw
mov
add
inc
push
xor
xor
int3
mov
aaa
(bad)
dec
and
jne
inc
fstp
ret
or
lock
aas
cwde
xor
in
adc
dec
sbb
nop
pusha
cmp
cwde
and
arpl
inc
inc
(bad)
nop
pop
xor
mov
adc
jo
or
push
in
nop
aas
xor
sub
nop
jnp
and
sbb
adc
shl
mov
lds
mov
or
sbb
sbb
add
add
mov
call
mov
xor
and
push
xchg
call
fidivr
adc
sar
sbb
pop
cmp
rol
adc
and
mov
xchg
and
inc
inc
push
mov
adc
sub
fsub
pop
les
add
rol
nop
xchg
inc
pop
aaa
xor
or
push
cs
push
or
add
bound
aam
inc
cs
add
push
add
xor
aam
jmp
(bad)
xchg
int3
sbb
xchg
or
sub
rol
clc
inc
or
lock
pop
cli
clc
xchg
hlt
xor
pop
inc
and
and
or
sbb
and
or
inc
adc
movs
or
int3
mov
adc
sbb
cld
and
pusha
add
and
or
or
sub
push
or
dec
add
xchg
sub
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
jg
jmp
xchg
add
pop
scas
xchg
add
mov
jg
pop
data16
icebp
jecxz
jg
push
push
fadd
pop
aad
inc
shl
and
lock
push
imul
outs
ret
aas
pop
pop
jge
fcom
in
push
or
xchg
in
jmp
or
xor
retf
mov
std
xchg
test
scas
lods
sbb
movs
pop
and
(bad)
mov
fdiv
inc
out
fnstcw
push
push
or
cld
or
jmp
std
fwait
repnz
lea
sti
not
aaa
push
pop
dec
mov
stc
ins
lock
add
inc
jmp
or
add
std
jae
ins
mov
xor
pop
or
enter
push
add
repz
adc
call
dec
mov
fsubr
aas
add
lea
mov
cld
clc
data16
or
push
sbb
rcr
dec
add
fbld
or
or
enter
aaa
add
and
nop
add
or
or
pusha
cmp
retf
lea
pushf
out
aas
fadd
test
and
push
shl
cld
adc
push
inc
and
xchg
into
xor
(bad)
js
fadd
mov
cmp
push
add
jmp
mov
or
int3
je
pushf
inc
into
je
sbb
and
inc
inc
cwde
sub
add
call
icebp
xor
or
scas
loopne
inc
xor
sbb
jbe
ret
movs
inc
rcl
clc
mov
or
inc
or
sbb
hlt
arpl
dec
or
or
sub
int3
aas
and
mov
xor
inc
xchg
cs
dec
(bad)
or
inc
push
pmulhuw
add
xchg
xor
cmp
mov
adc
sbb
scas
cld
add
inc
or
or
cmp
(bad)
cli
dec
or
call
mov
jno
fld
xor
hlt
and
test
movs
dec
push
cwde
cld
or
imul
adc
int
nop
sbb
add
add
mov
add
xchg
ins
xor
jo
pushf
test
inc
frstor
adc
mov
fdivr
bound
sbb
inc
xor
je
sbb
aas
adc
mov
adc
mov
nop
(bad)
cld
xor
or
mov
and
sub
fsub
or
jmp
dec
scas
inc
cmp
xor
push
int
cmp
fiadd
ror
repnz
add
std
ucomiss
sub
lock
push
push
mov
rol
movs
sub
mov
enter
movs
jbe
xor
aas
adc
(bad)
mov
fldenv
jnp
clc
inc
enter
imul
jp
or
sar
das
cld
add
adc
inc
mov
ss
dec
dec
push
inc
sbb
mov
aaa
nop
repnz
lods
jl
fsubr
(bad)
dec
mov
sub
add
aam
jno
sub
sbb
fisubr
sub
clc
xchg
test
in
mov
add
mov
loopne
adc
xor
push
pop
inc
adc
dec
add
sub
ins
add
add
loopne
jno
lds
adc
add
and
sub
mov
add
or
rol
mov
jo
das
jp
inc
dec
adc
adc
mov
lock
and
gs
adc
dec
and
clc
push
inc
retf
test
push
push
arpl
inc
add
xchg
(bad)
jno
sbb
pop
pop
enter
arpl
loop
outs
push
fsub
pop
xor
repz
cld
add
inc
inc
pop
push
test
dec
test
and
pop
push
cmp
xor
or
sbb
shl
hlt
jecxz
inc
and
mov
mov
pop
clc
pop
sbb
add
loopne
test
data16
mov
repz
test
add
rol
and
push
jmp
(bad)
jno
and
dec
pusha
adc
pushf
icebp
mov
lea
loope
or
add
sub
push
mov
inc
or
nop
xor
enter
loope
and
loopne
ds
jns
les
lea
daa
data16
xchg
inc
and
pop
les
or
(bad)
xor
and
stc
inc
sub
mov
not
inc
or
sbb
sbb
add
and
sbb
push
inc
add
or
inc
mov
or
loopne
add
xor
push
add
enter
mov
adc
inc
or
add
xchg
arpl
push
inc
lock
sbb
enter
jo
and
stos
cwde
inc
add
ins
and
aam
inc
add
sbb
inc
adc
mov
test
inc
inc
adc
aas
sbb
add
push
and
or
(bad)
adc
pusha
jle
sub
mov
ror
push
inc
adc
adc
xor
cmp
pop
mov
bound
add
test
or
clc
rcr
add
call
pop
xchg
or
inc
cmp
cmp
hlt
pop
xchg
mov
jnp
xchg
stos
clc
inc
jbe
dec
adc
add
and
and
add
push
jecxz
test
enter
mov
jo
or
enter
aaa
dec
retf
push
not
inc
ja
add
pop
fdiv
xor
daa
nop
mov
adc
dec
push
or
or
and
sbb
shl
add
and
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
sar
mov
ret
xchg
psubd
aam
pusha
aas
push
adc
imul
aad
loope
lea
rcr
scas
push
add
sbb
push
xchg
std
add
mov
adc
ja
mov
mov
sub
mov
xchg
cmp
dec
int
or
sbb
add
jecxz
jecxz
xchg
push
add
sar
sbb
xor
adc
js
inc
lock
xor
push
popf
inc
inc
imul
fmul
fwait
mov
(bad)
in
or
test
jns
(bad)
lods
fwait
mov
ror
shl
cs
aad
inc
rcr
aas
imul
out
clc
dec
and
arpl
popf
(bad)
mov
cmp
dec
cmp
pop
out
jae
jnp
in
lahf
aaa
loope
(bad)
sub
xchg
inc
jg
inc
call
lock
mov
cdq
jmp
mov
inc
(bad)
sub
or
inc
lock
mov
jbe
adc
retf
inc
fs
adc
cmp
nop
ss
jecxz
xor
std
ror
inc
ror
int3
aas
or
adc
inc
mov
add
add
punpckhbw
or
lds
inc
aaa
cld
repz
xor
lock
xor
les
or
inc
aas
and
mov
test
or
cmp
add
inc
enter
and
enter
add
mov
ins
enter
xor
add
sub
dec
push
xor
dec
mov
fdiv
ror
add
and
nop
dec
mov
std
push
mov
adc
inc
ret
cmp
xor
test
hlt
lock
or
sub
int3
xchg
int3
test
rol
push
add
imul
aas
inc
dec
sub
xor
sub
add
in
inc
pop
inc
sub
push
popa
add
cmp
fiadd
imul
lock
sub
push
inc
or
or
(bad)
jle
mov
and
lea
into
mov
and
mov
je
cld
xor
test
test
les
cld
repz
and
add
fdiv
dec
ins
fstp
ror
mov
mov
pop
mov
ss
sub
sbb
adc
or
aas
add
inc
ret
mov
aas
sub
jne
lock
scas
hlt
and
mov
and
shr
or
lods
sbb
aas
ss
mov
sub
dec
add
pop
push
xor
jae
fsubr
rcl
ror
add
inc
ss
ret
repnz
sbb
mov
sar
jb
xchg
outs
sub
fbstp
push
cld
inc
inc
das
push
hlt
xchg
sar
mov
cld
add
push
arpl
xor
adc
adc
push
mov
inc
push
mov
outs
and
js
jmp
rcr
or
jo
mov
mov
je
enter
mov
add
add
mov
outs
push
jno
rcl
mov
repnz
test
fimul
and
out
inc
fs
xchg
and
xor
push
fidivr
xor
jnp
inc
inc
add
dec
sbb
inc
loope
push
push
jge
pop
add
outs
movs
mov
cld
mov
xor
nop
test
call
dec
retf
cwde
cmps
push
sbb
mov
enter
sub
or
loopne
sub
add
inc
and
gs
lea
sbb
or
pusha
sub
loopne
mov
xchg
xor
mov
adc
rol
cmp
pop
push
sbb
clc
xchg
or
inc
xchg
loope
lahf
sbb
sub
or
add
sar
mov
and
inc
or
or
sbb
or
mov
pop
enterw
je
outs
hlt
out
iret
add
adc
sbb
enter
and
add
or
sub
cmps
(bad)
mov
and
sbb
lods
xchg
and
xor
pop
sub
adc
loopne
es
xor
or
add
test
sysret
cmp
cs
add
dec
and
aas
mov
xor
cdq
clc
inc
jne
jno
jg
jb
cmps
sbb
and
inc
pop
inc
and
add
add
pop
xchg
clc
push
add
mov
sbb
and
es
inc
push
rcl
adc
mov
lds
sbb
ret
and
xchg
mov
push
adc
loopne
nop
test
jecxz
add
push
inc
add
and
mov
mov
pop
fld
add
pusha
or
sbb
lea
mov
or
out
imul
inc
ds
les
sbb
lea
xor
aad
xchg
cli
sub
or
inc
scas
push
movs
or
inc
inc
adc
icebp
add
sub
cs
mov
daa
and
add
or
nop
add
push
sbb
adc
inc
mov
pusha
inc
or
sbb
mov
or
clc
inc
adc
adc
cld
inc
add
rol
adc
push
loopne
je
loope
sub
add
cmp
add
add
repz
add
push
adc
and
shl
sub
adc
pop
xor
pop
sub
pop
adc
(bad)
push
test
cmp
jecxz
inc
push
mov
aad
push
xchg
imul
shl
pusha
dec
dec
inc
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
cmp
in
ret
xchg
(bad)
and
cmovo
mov
pop
cli
inc
aad
xlat
add
push
xor
add
sbb
call
or
inc
fwait
sub
call
or
xor
scas
cmp
inc
and
mov
sbb
ret
pop
mov
dec
push
cmp
push
xchg
(bad)
jge
call
jo
cli
jmp
repz
jnp
ja
xor
aam
pusha
enter
ins
cwde
xor
pusha
call
ins
in
mov
sar
dec
push
cmp
rcr
dec
(bad)
pop
loopne
fidivr
xlat
lea
lahf
fwait
push
pusha
add
iret
inc
and
or
(bad)
inc
push
mov
jp
pop
sub
dec
loopne
jg
mov
cmp
sar
dec
(bad)
in
fldcw
add
ins
(bad)
call
adc
daa
push
getsec
sar
(bad)
add
sti
xchg
pop
call
call
movs
sub
loope
adc
ja
cmp
or
pop
pop
add
sbb
lock
sbb
int3
xor
xor
and
ja
inc
inc
push
add
or
adc
sbb
ror
or
loope
loope
adc
or
adc
aas
jl
lock
sbb
and
mov
and
or
add
add
test
sub
ror
jle
xchg
nop
ror
lock
test
add
add
xor
xor
sub
dec
das
and
fs
(bad)
int3
dec
inc
shl
and
jo
jl
push
inc
adc
cmp
mov
out
iret
or
add
rol
sub
int3
or
mov
push
push
test
pusha
xor
pop
pusha
inc
popf
test
les
lock
(bad)
adc
test
dec
adc
adc
int3
aaa
paddd
and
iret
lods
inc
pop
xor
inc
sbb
push
sub
test
push
nop
mov
gs
add
cmp
xchg
push
shl
mov
pop
repnz
or
inc
adc
sbb
or
sub
jnp
mov
(bad)
mov
ret
dec
adc
sub
adc
rcr
ja
cmp
add
outs
jp
inc
dec
test
add
adc
inc
out
aaa
and
leave
pop
push
les
fistp
ja
mov
pushf
inc
jno
mov
test
mov
inc
sbb
ss
cmp
out
std
inc
xchg
inc
sub
call
int
cmp
test
push
adc
movs
jno
loope
add
jnp
mov
cmp
fmul
in
push
xor
adc
sbb
push
or
pop
hlt
push
or
inc
fdivr
repnz
cmp
and
aas
mov
jb
dec
lock
stc
aas
imul
add
inc
add
adc
add
out
inc
mov
clc
xor
daa
dec
and
(bad)
aas
or
inc
mov
into
xor
icebp
xchg
add
and
and
adc
adc
or
xchg
add
xchg
in
call
push
arpl
addr16
stos
fadd
lahf
cld
and
prefetchnta
xor
cld
push
xchg
mov
xor
inc
or
pushf
loope
call
sbb
add
mov
and
outs
ds
cdq
inc
pop
mov
add
add
mov
push
cdq
sbb
test
aas
stos
aaa
or
cmp
ret
(bad)
loope
jo
pop
adc
sbb
or
js
aas
sahf
push
mov
cli
sub
pop
sub
nop
inc
mov
test
push
adc
movs
add
xchg
and
mov
loopne
std
in
scas
mov
sub
imul
add
enter
push
test
mov
and
push
adc
into
or
ficom
add
js
les
lock
sbb
or
test
or
add
push
enter
add
rol
xor
dec
aam
push
and
rcr
loopne
es
mov
adc
adc
cmp
lock
in
fsub
add
enter
mov
mov
add
jb
push
adc
add
fisttp
jg
popa
or
and
add
call
or
push
add
add
addr16
xchg
sub
out
test
push
jno
pop
dec
add
sub
or
add
pop
and
sub
add
fiadd
or
mov
jge
adc
add
rol
inc
mov
sub
xchg
pop
add
pusha
test
(bad)
nop
or
or
sub
outs
push
add
loope
stos
clc
and
shr
mov
push
sub
mov
lds
add
mov
cmp
mov
or
sub
adc
add
xchg
xchg
js
add
dec
lds
sbb
add
ins
in
aas
test
adc
xor
pop
mov
lods
push
sub
mov
inc
test
cmp
xor
and
ins
inc
dec
sbb
test
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
mov
inc
xchg
push
adc
mov
hlt
stos
imul
add
xchg
or
xchg
and
iret
xchg
inc
xchg
adc
pop
jl
in
lea
aaa
outs
cld
cmp
test
xchg
pop
cli
cmc
cli
clc
(bad)
xchg
dec
xchg
sub
push
mov
xor
push
nop
and
sbb
add
or
jecxz
jg
xor
fwait
icebp
das
push
call
rol
sbb
push
mov
xor
fcomp
pop
mov
fcomp
adc
mov
and
adc
fild
fsub
xchg
imul
push
adc
repz
mov
ins
rol
add
aas
jg
sub
std
daa
loopne
sbb
and
sbb
lahf
aaa
addr16
cmp
sbb
jno
clc
popa
and
fs
sub
out
lock
xor
ror
push
cmp
jp
pop
dec
add
sbb
pusha
mov
sub
inc
sahf
add
cmp
les
add
jae
xor
sub
cmp
popf
nop
or
push
xor
xor
jb
xor
iret
xor
lods
lock
pop
and
xchg
int3
xor
and
push
push
add
lock
xor
adc
and
loopne
add
mov
pop
mov
add
cwde
outs
adc
mov
adc
adc
or
fnsave
rcr
lock
das
xchg
fsub
or
les
xor
and
rol
or
mov
pop
push
pop
jno
sbb
xchg
clc
add
xor
mov
loope
and
inc
dec
mov
adc
inc
or
and
cdq
cmc
xchg
and
pushf
inc
shr
xchg
and
outs
sub
mov
add
loopne
lds
jns
xor
lea
dec
ins
push
nop
cwde
lods
sub
add
xor
xor
cld
add
call
add
adc
popf
ror
movs
push
cmps
add
rol
cwde
mov
sub
mov
(bad)
mov
cld
or
mov
je
add
sub
ret
stos
inc
or
rcr
cld
rol
or
leave
push
xor
xor
and
push
movs
mov
dec
lock
push
inc
cld
jae
push
add
les
jecxz
hlt
loopne
ror
mov
enter
xchg
jo
popa
fst
add
add
cmp
rol
int
inc
rol
inc
or
je
cmp
or
inc
shr
nop
add
mov
aam
call
into
xor
dec
inc
test
add
or
(bad)
(bad)
cmp
lds
enter
xor
scas
inc
ret
xor
fdiv
shl
ret
mov
and
inc
lss
pop
fild
das
xchg
das
mov
loopne
enter
cli
ret
add
push
add
daa
arpl
xor
scas
mov
cld
fnstsw
add
(bad)
pop
repz
jmp
aad
inc
add
inc
adc
pop
add
sbb
rol
stc
xchg
mov
jecxz
dec
jb
jnp
fisubr
inc
xlat
mov
dec
adc
jno
ss
test
test
pop
sbb
cs
sub
rcr
rol
add
inc
adc
aam
xor
ret
ja
dec
inc
xor
inc
add
sbb
push
sbb
and
nop
mov
mov
fiadd
and
(bad)
jmp
add
shl
icebp
mov
std
arpl
push
clc
xchg
jbe
add
add
add
adc
cmp
sbb
adc
cmp
xchg
push
cld
and
add
rol
adc
add
mov
lock
es
xchg
sahf
icebp
lea
xchg
fwait
int
pop
hlt
sbb
adc
data16
dec
add
xor
pop
or
inc
adc
xchg
sub
pop
pop
fs
xor
dec
inc
movs
inc
push
mov
add
inc
ins
inc
adc
push
adc
add
je
and
cmp
add
xchg
cld
sbb
fadd
cmp
sbb
dec
movs
popa
add
aaa
add
inc
sub
add
stos
mov
and
sti
sahf
inc
inc
aad
mov
inc
add
mov
push
xchg
or
jo
inc
scas
inc
sbb
ret
lahf
inc
mov
sub
or
inc
add
shl
add
mov
push
and
sub
mov
or
push
xor
idiv
adc
add
mov
sbb
leave
sbb
push
add
(bad)
sub
les
xchg
repnz
loope
inc
test
ja
adc
and
mov
jo
idiv
sub
inc
add
int3
add
lock
sub
sbb
dec
or
and
test
mov
inc
pop
and
nop
sub
sbb
add
adc
sub
and
and
inc
adc
fadd
inc
test
push
push
jecxz
(bad)
mov
inc
imul
mov
add
inc
or
inc
add
or
movs
and
fadd
or
adc
push
push
or
inc
add
mov
and
sub
add
ds
and
add
xchg
js
adc
or
pmulhw
inc
adc
adc
ss
dec
mov
or
mov
sar
test
or
xor
out
pop
mov
cmp
adc
popa
add
shr
loop
ret
nop
sub
and
jnp
and
shl
cmp
and
test
rol
inc
adc
or
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
loope
ret
xchg
sbb
fild
hlt
hlt
scas
pop
das
jp
sti
inc
cmp
iret
lahf
(bad)
xchg
(bad)
cmp
stos
cmp
lock
sub
leave
and
cmp
or
fadd
mov
add
call
fwait
add
clc
repz
rol
add
retf
pop
sub
loopne
sar
inc
shl
into
push
pop
dec
mov
fwait
pop
and
loope
pop
pop
add
jno
lea
fadd
mov
iret
and
aas
outs
add
pop
hlt
test
sub
add
push
and
fsubr
fnstcw
sti
out
loopne
or
std
mov
xchg
dec
push
lock
xor
jbe
repz
add
js
push
shl
test
mov
inc
out
cmp
jecxz
xchg
jmp
jns
mov
clc
pop
sub
inc
or
dec
jo
mov
or
stos
or
fsub
or
rol
ins
inc
fdivr
std
std
xor
inc
add
movs
dec
and
mov
xor
sub
lar
popf
loope
inc
inc
and
add
adc
dec
inc
retf
(bad)
cmp
test
inc
fild
aaa
add
add
aas
pop
cmp
push
mov
shl
dec
enter
or
sbb
dec
repz
mov
and
lea
or
cwde
push
adc
aam
shl
jl
loop
das
inc
lock
sub
add
ins
add
add
inc
add
aas
xor
test
sub
xchg
add
retf
adc
push
push
add
repnz
pop
add
or
dec
add
inc
sbb
rcl
or
dec
cmp
xor
clc
jb
xchg
or
dec
adc
rol
sub
mov
xor
pop
mov
nop
and
sbb
xor
sbb
and
push
dec
xor
in
sbb
scas
in
mov
adc
inc
push
adc
call
adc
fdiv
fisubr
shr
sub
inc
xchg
jns
add
add
push
xchg
lock
inc
stos
xor
mov
dec
push
sub
xchg
add
xor
push
xor
inc
int3
fdiv
dec
das
rcl
rol
add
sar
js
push
or
fsubr
mov
pushf
inc
retf
fmul
adc
inc
lock
loope
add
test
xor
repnz
xor
in
or
pusha
es
scas
cld
and
or
mov
lahf
cmp
ror
add
test
sub
xor
leave
je
mov
aas
xchg
or
add
clc
inc
fld
push
mov
cli
dec
pushf
dec
fistp
ror
aas
xor
(bad)
or
mov
mov
and
xor
or
sub
push
cmp
xchg
pop
ja
add
sub
xchg
loope
inc
xchg
pop
out
push
call
add
add
loope
or
retf
ss
or
or
daa
iret
xchg
cmp
xor
test
fdiv
dec
iret
rcl
loopne
xor
psraw
in
xor
dec
sbb
std
inc
sahf
ss
mov
add
inc
and
mov
rol
cmps
or
pop
dec
ror
(bad)
pop
sbb
xchg
jmp
jno
push
inc
add
mov
xor
ja
rol
aam
add
or
sub
xchg
pop
sbb
mov
adc
loop
or
adc
test
adc
mov
dec
xor
xchg
clc
or
dec
inc
add
pop
mov
add
sub
(bad)
push
stos
xor
enter
fist
or
or
dec
cmp
loopne
sub
mov
clc
popa
adc
mov
xor
cmp
push
dec
xor
sbb
push
mov
cld
mov
sub
rol
sub
or
sbb
sbb
out
mov
shl
or
xchg
jp
add
movhps
inc
mov
and
push
inc
push
mov
cmp
xor
test
inc
sbb
nop
ss
cmp
or
sbb
clc
xchg
test
and
sbb
lock
push
sahf
xor
lods
les
mov
aaa
adc
add
(bad)
nop
mov
loopne
add
or
mov
sub
or
mov
pop
loopne
or
mov
shl
loopne
add
inc
add
add
mov
mov
push
inc
xchg
pop
push
inc
adc
add
pop
push
ret
push
nop
add
pop
data16
push
js
and
jge
push
xor
jo
or
rcl
icebp
(bad)
xor
loopne
push
cmp
stos
mov
and
inc
adc
add
fnsave
jl
add
loopne
jne
out
cld
add
sub
test
jno
xor
fld
add
xor
js
dec
lods
and
push
adc
adc
mov
dec
push
add
or
js
add
outs
xor
or
mov
call
sub
call
or
icebp
mov
pushf
rol
mov
and
test
or
mov
lea
enter
add
pop
mov
or
ror
pusha
adc
add
mov
and
loope
push
dec
inc
sbb
push
push
in
push
add
js
outs
mov
dec
add
add
sbb
mov
cmps
lock
inc
rcr
js
adc
aam
pop
adc
(bad)
out
push
ror
bound
adc
aad
mov
(bad)
sbb
(bad)
iret
push
and
pop
mov
mov
sub
xor
inc
add
sub
and
jno
ja
adc
(bad)
mov
adc
add
fs
add
sbb
loopne
add
add
stc
add
or
inc
sub
add
or
or
or
sub
pop
inc
clc
mov
loope
sub
and
sbb
adc
in
imul
fwait
push
and
mov
lahf
mov
adc
sub
jg
test
mov
sub
sbb
add
add
mov
add
dec
add
adc
add
add
add
popa
xor
sbb
sbb
add
add
add
add
inc
cmp
popa
xor
xor
idiv
add
lods
add
inc
inc
and
std
mov
(bad)
aam
std
int3
sub
jecxz
sti
movs
add
or
mov
test
add
ret
add
les
hlt
add
icebp
add
addr16
bnd
mov
std
(bad)
(bad)
(bad)
in
add
jmp
test
imul
hlt
(bad)
(bad)
adc
(bad)
cmp
repnz
mov
in
(bad)
cli
sahf
add
inc
(bad)
hlt
jnp
and
(bad)
stc
stos
(bad)
jmp
add
int3
retf
cwde
in
retf
out
mov
(bad)
jmp
std
enter
out
sub
and
in
in
(bad)
jne
(bad)
(bad)
stc
cdq
movs
pop
add
in
mov
pop
fwait
fs
mov
(bad)
fsub
mov
fadd
add
icebp
dec
out
add
push
(bad)
(bad)
and
dec
(bad)
frstor
mov
add
cwde
add
cwde
(bad)
(bad)
sti
gs
add
imul
add
fs
(bad)
inc
mov
dec
adc
cld
lds
ficom
or
(bad)
sbb
mov
in
push
(bad)
in
push
lods
test
call
out
out
add
or
mov
(bad)
sub
pop
repz
retf
fstp
(bad)
out
cmc
push
add
in
clc
mov
jecxz
add
inc
add
clc
div
div
(bad)
mov
repnz
fwait
aaa
or
clc
stc
fwait
push
add
(bad)
out
idiv
repnz
jg
add
adc
stos
jg
mov
adc
fadd
jle
add
mov
xchg
mov
mov
or
push
and
jmp
cli
mov
enter
push
and
int
sar
cli
out
add
fs
pop
or
add
in
fucom
inc
adc
out
rol
cld
aam
pushf
pop
add
retf
rcl
cmp
dec
call
dec
das
fucomip
neg
sbb
jmp
test
dec
push
xchg
pop
add
fiadd
(bad)
in
jmp
adc
stos
stos
daa
call
add
rol
fild
xchg
(bad)
out
add
out
(bad)
out
(bad)
sti
add
mov
(bad)
icebp
mov
stos
or
enter
add
cld
std
out
lock
out
add
rol
popf
popf
loope
scas
mov
push
mov
imul
sti
icebp
add
in
mov
cmp
inc
xor
(bad)
icebp
test
jmp
popa
jmp
jo
cld
clc
loop
add
mov
stc
mov
push
xor
out
mov
add
push
push
cmp
std
sti
ins
ins
lods
repnz
idiv
add
lock
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
add
add
xor
xor
add
inc
std
or
mov
rol
mov
add
and
inc
inc
mov
adc
stos
arpl
or
ins
and
and
sub
nop
mov
inc
das
shl
inc
repz
xchg
inc
or
adc
lds
jecxz
mov
xchg
pop
dec
(bad)
test
and
add
js
sub
sub
int
push
sbb
lds
and
and
jnp
sub
scas
aaa
outs
call
cwde
mov
in
cdq
shl
push
cmp
dec
pop
mov
hlt
adc
pushf
mov
or
pop
push
xor
sbb
pop
dec
pop
jb
sub
cmp
leave
xor
add
gs
sahf
cmp
arpl
cmps
push
aas
add
push
in
jp
sbb
outs
or
mov
clc
(bad)
add
inc
add
xchg
pop
fst
and
mov
mov
dec
addr16
push
imul
lock
test
sahf
jp
xor
int3
jp
dec
loopne
or
popf
lds
aam
dec
or
pop
dec
sbb
pop
outs
mov
pop
dec
arpl
adc
pop
pop
jo
jbe
inc
xchg
leave
add
adc
popa
xchg
out
pop
rol
inc
push
pusha
pusha
cmp
add
adc
mov
mov
dec
add
mov
sti
test
add
pop
mov
fiadd
jbe
retf
inc
stos
adc
or
adc
test
mov
(bad)
cmp
sbb
leave
fiadd
inc
ja
nop
xchg
jbe
cmp
pop
adc
xchg
test
addr16
pop
pop
adc
sbb
dec
jae
add
cli
jecxz
add
ror
xor
call
enter
les
or
mov
xchg
retf
xor
movs
push
(bad)
jp
add
dec
xchg
shl
add
sbb
rol
shr
jmp
cmp
pop
ss
std
mov
add
dec
sbb
xchg
(bad)
or
inc
call
and
std
and
inc
sbb
and
ret
mov
adc
pop
(bad)
in
add
or
dec
ret
inc
or
adc
test
aad
jo
les
inc
jle
mov
aam
add
test
popa
test
out
mov
xor
sub
inc
or
mov
iret
ins
popf
xor
pop
xchg
mov
aaa
das
or
fcomp
inc
fistp
aas
popf
jl
inc
or
and
clc
and
xor
push
fadd
xor
add
call
icebp
enter
push
fst
and
add
xchg
and
rol
ds
xor
adc
add
rcl
xor
aaa
lahf
jl
or
ins
add
adc
mov
hlt
rol
add
xor
sbb
cmp
add
fwait
jg
inc
inc
jp
mov
and
into
(bad)
hlt
shl
xchg
inc
and
mov
add
inc
ret
test
or
sbb
lds
pushf
shl
xor
add
add
and
das
cmp
sbb
clc
ret
mov
and
push
mov
or
js
add
sbb
clc
add
rol
mov
loopne
sub
rcr
adc
lods
pop
or
or
adc
inc
push
or
pop
xchg
cli
inc
adc
mov
and
adc
and
nop
inc
or
popa
sbb
rol
mov
adc
add
adc
and
xor
adc
adc
adc
cwde
inc
sbb
(bad)
xor
sub
add
adc
add
inc
mov
mov
adc
push
mov
adc
loopne
nop
pop
inc
push
jb
or
mov
adc
rcr
lock
popa
dec
xor
lea
aam
nop
arpl
rcl
test
loop
mov
inc
sub
add
push
test
pop
mov
rcl
push
xor
cmp
nop
sbb
or
shr
stc
retf
loopne
jle
ret
xor
rol
pop
out
mov
and
js
inc
or
add
add
pop
imul
mov
adc
and
fsubr
mov
inc
inc
jg
or
xor
sub
add
lea
ret
add
aas
hlt
add
adc
add
jns
add
or
les
cmp
mov
dec
cld
xchg
push
add
sbb
icebp
add
pop
test
in
push
cwde
inc
sbb
dec
sub
retf
or
das
push
or
ror
lock
cwde
dec
add
aaa
ja
add
pop
inc
sbb
nop
sbb
lock
or
icebp
add
inc
and
inc
add
add
add
rol
nop
inc
push
jb
adc
mov
lahf
ret
mov
add
push
add
movs
fild
pop
push
or
ret
xchg
dec
test
cmp
add
mov
add
sahf
aam
dec
adc
outs
pop
retf
ds
or
or
cmp
pop
rcl
adc
test
or
dec
cs
sbb
repnz
add
push
inc
xchg
rcr
imul
add
and
add
inc
add
xor
or
loopne
inc
scas
fwait
nop
or
loope
dec
fadd
pop
or
sbb
and
inc
clc
ja
pop
or
add
stc
add
add
or
or
sbb
and
add
jmp
jo
mov
and
pop
mov
rol
sub
call
add
ins
pop
xchg
sub
or
or
add
add
dec
mov
jmp
cmp
int3
inc
inc
pop
sbb
movs
cwde
and
ss
adc
imul
in
and
xor
and
pop
add
test
call
or
out
movs
shr
ret
loopne
jge
imul
sbb
into
in
daa
jo
repnz
pop
xor
mov
daa
jl
je
fbld
les
das
mov
retf
cwde
xor
int3
mov
inc
mov
dec
mov
push
jnp
cmps
fidiv
cmps
jg
data16
loope
shl
iret
shr
and
das
and
xchg
lahf
xchg
rol
(bad)
inc
add
stc
add
add
or
or
sbb
and
add
fild
dec
mov
add
and
loope
add
push
sbb
adc
retf
test
push
or
or
lea
or
dec
fwait
sbb
add
pop
mov
stc
xchg
test
popf
push
mov
inc
inc
xor
cld
fldpi
aaa
addr16
or
repnz
xchg
movntq
out
xchg
not
enter
jne
(bad)
aam
mov
jl
das
in
sub
(bad)
idiv
inc
shl
das
fld
or
adc
pushf
cmp
mov
les
adc
xor
test
dec
push
pop
retf
scas
cld
sub
pop
dec
arpl
xchg
sbb
int3
mov
inc
mov
dec
mov
push
stos
pop
int
mov
xlat
and
sahf
jmp
je
dec
mov
xchg
jbe
dec
push
jmp
stc
add
add
or
or
sbb
and
add
in
add
or
pop
xchg
and
pop
mov
rol
sub
call
add
ins
pop
xchg
sub
or
or
add
add
dec
mov
jmp
cmp
int3
inc
inc
pop
sbb
movs
cwde
and
ss
adc
imul
in
and
xor
and
pop
add
test
call
or
out
movs
shr
ret
loopne
jge
imul
sbb
into
in
daa
jo
repnz
pop
xor
mov
daa
jl
je
fbld
les
das
mov
retf
cwde
xor
int3
mov
inc
mov
dec
mov
push
stos
pop
in
push
dec
push
repnz
fldenv
jnp
push
pop
out
inc
push
push
xchg
push
add
cmovbe
xchg
repnz
inc
loopne
jne
add
add
stc
add
add
or
or
sbb
and
add
jmp
and
rol
mov
push
sbb
adc
retf
test
push
or
or
lea
or
dec
fwait
sbb
add
pop
mov
stc
xchg
test
popf
push
mov
inc
inc
xor
cld
fldpi
aaa
addr16
or
repnz
xchg
movntq
out
xchg
not
enter
jne
(bad)
aam
mov
jl
das
in
sub
(bad)
idiv
inc
shl
das
fld
or
adc
pushf
cmp
mov
les
adc
xor
test
dec
push
pop
retf
scas
cld
sub
pop
dec
arpl
xchg
sbb
int3
mov
inc
mov
dec
mov
push
stos
pop
int
mov
xlat
and
xchg
scas
(bad)
or
pop
pop
mov
add
sti
pop
jp
xor
pop
or
cmp
and
add
add
sbb
sub
or
pop
add
or
dec
adc
arpl
stc
sti
inc
in
pop
xor
sub
pop
loope
mov
and
add
add
sbb
sub
or
add
add
or
xlat
add
cld
popa
cmp
(bad)
lahf
rcr
adc
xchg
push
mov
inc
and
imul
add
stc
add
add
sbb
sub
pop
add
add
or
add
or
mov
loopne
sub
or
mov
es
or
adc
ret
push
push
xchg
mov
or
or
add
stc
add
add
sbb
add
add
or
add
std
mov
adc
iret
adc
jmp
mov
add
mov
add
stc
add
add
sbb
add
add
or
add
std
push
adc
aas
push
sbb
push
cmp
cmp
push
mov
aas
adc
jnp
clc
pop
adc
and
add
add
sbb
sub
push
add
add
or
add
or
and
pop
xchg
jnp
add
pop
add
add
stc
pop
inc
and
dec
and
cmp
and
add
add
sbb
sub
push
add
add
or
add
or
fbstp
add
out
fisttp
sti
daa
dec
pusha
jno
test
and
and
add
add
sbb
sub
pop
add
add
or
add
or
daa
mov
sbb
dec
mov
or
test
add
and
and
add
add
sbb
sub
push
add
add
or
add
or
and
xor
mov
or
push
push
add
or
push
lock
sbb
mov
jg
add
add
and
add
add
sbb
sub
or
push
add
or
add
or
and
rol
jo
mov
mov
dec
into
shl
push
sbb
ret
push
sbb
add
add
and
add
add
sbb
sub
or
push
add
or
add
or
pusha
loopne
data16
cmp
sub
test
add
or
arpl
mov
js
ret
add
add
and
add
add
sbb
sub
or
push
add
or
cwde
gs
imul
movs
repnz
xchg
jg
ficomp
inc
leave
or
cli
rol
pop
sbb
test
jecxz
dec
popf
rol
add
sbb
add
add
or
add
std
xchg
and
adc
xchg
mov
xchg
jg
clc
rcl
pop
pop
test
push
nop
xchg
mov
add
stc
add
add
sbb
sub
or
add
add
or
and
inc
adc
outs
loopne
pop
add
bound
lahf
cmp
or
loopne
xor
add
and
add
add
sbb
sub
or
push
add
or
add
or
and
rol
mov
cmps
jg
sub
(bad)
clc
bswap
inc
bound
sub
inc
xor
push
or
add
stc
add
add
sbb
sub
or
push
add
or
add
or
and
inc
sbb
add
sti
xor
ror
out
loopne
and
inc
add
add
sbb
add
add
or
add
sbb
fwait
jg
cwde
mov
inc
retf
pop
cmps
and
inc
sub
(bad)
rol
mov
add
dec
add
and
add
add
add
popa
xor
sbb
pop
add
scas
and
add
add
dec
inc
cmp
popa
xor
xor
idiv
add
(bad)
in
add
imul
data16
add
jmp
(bad)
cmc
add
add
push
mov
xchg
push
add
fiadd
(bad)
cmc
js
in
std
cli
in
(bad)
add
std
(bad)
sti
(bad)
loope
cld
aam
in
pop
(bad)
jmp
aaa
fwait
ins
sub
jmp
add
test
stos
jb
enter
fadd
(bad)
dec
mov
add
int
(bad)
mul
call
(bad)
hlt
xchg
leave
add
call
add
test
xlat
mov
std
shl
(bad)
cld
pop
std
lds
(bad)
cli
mov
cli
cmps
add
into
ret
dec
in
int
std
fld
movs
jns
(bad)
and
mov
std
fstp
xchg
test
jmp
test
(bad)
out
gs
lds
leave
mov
mov
add
inc
cmps
sub
add
repz
int
retf
movs
pop
add
lods
add
aad
scas
add
(bad)
out
in
jmp
cmp
mov
stc
test
icebp
jmp
(bad)
mov
enter
rcr
call
or
rcr
sar
push
add
hlt
(bad)
aad
xchg
pop
push
(bad)
mov
xor
mov
cld
mov
out
and
mov
fnstcw
cmc
ror
push
and
movs
or
and
adc
fiadd
into
mov
fldcw
neg
or
fisttp
mov
push
adc
or
les
push
sbb
rol
enter
xchg
icebp
call
ret
imul
(bad)
mov
shl
ret
lds
call
test
mov
clc
cli
icebp
out
retf
sbb
jmp
jmp
add
(bad)
pop
jmp
add
int3
ds
pop
inc
add
cli
push
jmp
xchg
and
bound
loope
(bad)
sti
int3
add
mov
stc
enter
xor
fadd
dec
pop
mov
add
retf
add
mov
fild
out
dec
add
mov
cld
lods
add
in
or
repnz
scas
or
mov
lds
mov
cmp
repnz
or
hlt
add
mov
dec
add
fwait
push
out
mov
cld
lds
repnz
fld
cmc
repnz
retf
add
pop
paddd
add
neg
add
add
mov
repz
clc
clc
(bad)
repz
loope
mov
mov
pop
in
dec
cld
clc
add
leave
or
in
lock
in
icebp
push
(bad)
call
sub
into
push
cmc
out
or
lods
(bad)
std
rol
cli
aam
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
shr
rol
sub
xchg
or
pushf
dec
jno
mov
sbb
test
push
or
ret
lds
repz
sbb
enter
test
adc
cwde
cmp
mov
movs
dec
pop
mov
xchg
and
dec
cdq
mov
add
ss
ins
les
mov
cmp
or
in
and
(bad)
dec
inc
xor
sub
dec
or
lea
stc
mov
xor
jne
or
mov
pushf
stos
pushf
push
aaa
xlat
pop
das
inc
inc
pop
jl
int3
call
dec
cmc
inc
add
test
mov
aam
jge
dec
pop
mov
ret
add
jle
les
xor
out
int
and
loopne
cmps
out
imul
mov
shl
jno
adc
mov
inc
call
mov
adc
test
ins
pop
jae
jle
pushf
ret
mov
pusha
add
les
sbb
pop
ins
call
sbb
nop
mov
retf
call
movs
jo
or
add
add
cmp
sbb
rol
pop
sbb
dec
add
xor
inc
add
or
nop
mov
mov
jo
inc
popa
lods
icebp
mov
cmp
rol
inc
add
push
inc
add
loope
sub
push
(bad)
adc
or
pop
xchg
loope
arpl
inc
lock
popa
test
cmp
and
rcl
cs
push
int
inc
shl
xchg
adc
xor
adc
mov
or
add
cs
lock
scas
xchg
rcr
push
jo
lahf
mov
push
mov
sbb
dec
sbb
in
sub
dec
dec
mov
lods
inc
and
adc
push
pop
add
xor
or
adc
xor
mov
cwde
inc
adc
int3
push
les
xchg
sbb
ret
test
js
rol
imul
repnz
dec
(bad)
pop
mov
cmp
movs
dec
(bad)
call
add
pop
sbb
or
loopne
cmps
push
fs
add
(bad)
adc
mov
ret
jb
add
repnz
in
mov
outs
std
cmps
lock
pop
add
xor
inc
ret
ret
adc
mov
dec
sar
cmps
xor
pop
or
inc
jno
push
ret
add
add
jmp
sub
adc
lods
cdq
outs
mov
or
and
adc
inc
xor
add
xchg
push
sahf
or
icebp
ret
jle
sub
addr16
(bad)
add
jb
cmc
sbb
(bad)
pusha
add
push
stos
mov
div
mov
push
shl
push
bound
lea
pop
jl
cmc
add
add
add
test
ror
mov
mov
movs
(bad)
pusha
pop
sbb
sbb
(bad)
mov
jecxz
add
adc
jae
pop
jle
mov
sbb
push
fidiv
mov
cli
or
iret
imul
xchg
add
les
mov
push
xor
and
or
pusha
xor
icebp
mov
call
je
ins
jecxz
jge
sar
(bad)
mov
jg
ins
leave
or
push
inc
sub
call
jecxz
(bad)
sar
mov
or
loopne
enter
add
inc
or
sbb
addr16
mov
jp
sbb
inc
sub
and
ror
mov
sbb
push
mov
ret
ins
mov
lds
cs
and
ins
ror
inc
pusha
xchg
or
dec
loope
adc
add
sbb
or
mov
sub
jnp
and
push
adc
xor
push
sub
mov
daa
mov
jo
mov
adc
mov
in
add
and
sub
mov
pusha
sbb
arpl
jb
pop
sub
sbb
or
inc
sbb
add
add
or
push
inc
jo
adc
add
test
test
push
push
pop
mov
int3
and
inc
adc
inc
add
and
call
jle
(bad)
popa
out
and
pop
jb
fsub
sbb
xor
(bad)
pop
add
nop
or
dec
or
ror
push
add
push
pop
mov
adc
test
add
dec
ss
(bad)
xor
rol
ret
sbb
xor
ror
or
add
and
push
dec
enter
nop
push
sbb
xor
push
test
pushf
leave
sar
jmp
or
cs
sbb
out
mov
fcmovbe
xchg
(bad)
in
add
jo
adc
cmp
ror
jmp
lock
xor
and
mov
test
jnp
pop
adc
xor
hlt
aam
mov
inc
push
mov
and
and
gs
rcr
dec
inc
or
loopne
mov
xchg
xchg
ja
test
pop
mov
mov
cmp
sbb
loope
and
adc
xchg
mov
cmp
push
stos
xor
in
gs
test
sub
sub
test
cld
mov
pop
ins
add
add
out
xlat
mov
cmp
or
jo
sub
mov
jge
add
aam
push
(bad)
lock
pop
add
pushf
add
fld
xor
sub
call
mov
or
and
test
ffreep
clc
and
push
adc
add
push
sub
and
add
or
inc
sub
add
add
or
add
or
mov
bound
lock
sbb
lock
aaa
femms
fstp
lock
push
inc
or
or
inc
mov
loopne
(bad)
sub
and
or
or
or
xor
fcom
dec
enter
cmp
mov
push
adc
jo
hlt
fild
inc
adc
and
dec
inc
mov
ror
cs
(bad)
arpl
add
inc
shl
jecxz
mov
jns
xchg
jnp
sub
xchg
test
arpl
mov
dec
cld
(bad)
outs
add
test
add
pusha
sbb
in
sub
add
add
jp
shl
test
adc
mov
add
add
and
mov
enter
cmp
or
jmp
sbb
cli
inc
xchg
push
inc
pop
and
loopne
adc
and
movs
ds
jbe
sbb
pushf
inc
shr
add
stc
add
or
inc
sub
add
sbb
adc
add
inc
dec
sbb
adc
sub
loopne
jg
jle
cmp
or
jo
and
mov
adc
mov
add
push
call
sbb
test
mov
aas
js
in
fwait
or
aam
call
lods
outs
fs
loop
mov
mov
dec
adc
sub
arpl
scas
jg
xchg
and
add
or
inc
aad
rol
(bad)
cmp
dec
je
sti
outs
fld
push
add
adc
add
add
jl
add
inc
adc
and
and
and
and
loope
es
cmp
adc
xor
dec
or
and
(bad)
fwait
or
add
dec
rol
and
sbb
xchg
mov
movs
movs
shr
dec
mov
loopne
add
jo
adc
jo
xchg
test
pop
ret
mov
lock
push
mov
gs
adc
pop
mov
jb
jo
lods
rol
das
cld
xchg
inc
add
add
mov
jl
rol
(bad)
hlt
push
dec
pop
ret
add
pop
scas
and
cmp
sub
add
xchg
lea
lea
push
dec
add
jo
add
test
ss
and
and
add
pop
rol
or
ror
add
sub
or
nop
jae
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
pusha
popf
add
mov
pop
pop
or
call
sub
lea
xchg
or
mov
cld
out
fwait
sub
jb
(bad)
or
add
sub
adc
mov
into
sbb
and
and
push
cmps
pop
xor
clc
and
add
mov
test
ds
add
mov
dec
adc
mov
push
addr16
jmp
rcr
sub
sbb
mov
mov
jo
mov
and
cli
repz
dec
add
inc
sbb
or
add
loopne
adc
loopne
adc
int3
call
inc
loope
fstp
outs
iret
js
push
jg
mov
add
adc
movs
clc
(bad)
dec
xchg
adc
push
jo
shl
mov
jmp
add
push
dec
xchg
(bad)
retf
aaa
adc
stos
adc
add
jb
sbb
add
add
or
ins
cmp
or
push
nop
xor
pushf
cmp
adc
xchg
cld
add
aaa
inc
add
xor
sbb
sar
shl
enter
sbb
pusha
add
inc
add
jns
pushf
inc
retf
add
bound
pop
sbb
and
pop
add
adc
inc
adc
sub
add
cmp
inc
adc
ins
int
pusha
add
xor
jo
add
xor
adc
ins
jno
mov
mov
mov
and
sub
adc
mov
mov
sub
loopne
sub
daa
or
mov
cmps
sbb
sahf
mov
add
add
push
test
fisttp
arpl
sub
shr
add
and
push
push
retf
add
and
add
or
inc
sub
add
add
add
add
or
add
sbb
mov
adc
and
unpckhps
js
pusha
add
dec
shl
das
loop
mov
sub
les
push
xor
shr
or
adc
adc
cmp
into
and
dec
mov
dec
cmp
xor
iret
push
pop
imul
and
scas
inc
push
add
stos
and
imul
adc
mov
rol
adc
cld
rcr
add
ins
(bad)
inc
mov
stos
inc
inc
iret
push
test
adc
mov
retf
pop
add
and
adc
xadd
add
pop
adc
xchg
adc
lods
pop
xor
add
add
aad
add
mov
add
push
dec
dec
inc
and
add
nop
and
sub
mov
mov
add
pusha
shl
inc
sub
inc
loope
or
adc
shr
xor
scas
dec
sub
ror
push
pop
xchg
sbb
add
mov
and
inc
add
jno
or
add
inc
mov
movs
test
sub
xchg
aad
push
add
aam
je
adc
adc
int3
xor
lods
add
sbb
xor
lds
xor
add
stos
sbb
popa
add
add
inc
adc
cld
ret
add
mov
pop
sbb
fcom
inc
lds
push
push
jbe
inc
adc
and
sub
arpl
push
and
leave
nop
dec
lods
jo
xchg
or
bound
cmp
test
in
fldcw
repnz
gs
add
or
mov
rol
imul
mov
pusha
mov
mov
push
adc
imul
or
dec
and
xchg
or
xchg
inc
adc
sub
pop
pop
jle
imul
xchg
sbb
mov
add
test
sar
add
or
inc
add
adc
dec
inc
lods
not
ret
mov
and
dec
sahf
push
loopne
add
add
and
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
rcl
adc
aas
adc
xor
or
push
fsubr
enter
xor
loopne
adc
mov
stc
aam
jecxz
xchg
or
nop
test
sub
add
call
inc
aaa
push
mov
daa
sahf
add
leave
add
or
dec
pop
sub
nop
adc
cwde
jb
fcom
add
inc
add
xchg
adc
sub
add
inc
sub
add
xchg
add
xchg
sbb
or
add
xchg
add
sahf
inc
adc
push
adc
mov
add
ret
gs
add
loop
or
cs
mov
pop
icebp
push
mov
int
nop
mov
leave
or
adc
es
shl
shr
xlat
inc
femms
xor
xor
xor
les
add
test
inc
inc
xor
ins
add
hlt
js
add
or
inc
or
iret
mov
add
mov
add
lods
jae
sub
dec
xor
mov
and
mov
rcr
movs
add
sub
mov
sbb
and
and
add
add
je
or
dec
xor
adc
inc
sub
sbb
add
cwde
lock
inc
test
add
xchg
cmp
inc
push
or
sbb
aaa
cmps
mov
adc
inc
adc
mov
add
shr
stos
and
dec
or
inc
add
cdq
add
arpl
mov
stos
js
inc
xor
mov
ror
dec
jnp
mov
(bad)
xchg
add
add
sbb
inc
dec
je
sbb
ss
rcr
rcl
add
mov
sti
mov
pusha
sahf
and
adc
push
xor
mov
lea
sbb
test
pop
add
mov
cmp
and
mov
jns
xor
or
jb
add
gs
push
adc
and
or
nop
ret
sbb
(bad)
(bad)
push
sub
fcomp
or
push
sbb
int3
adc
retf
int3
push
inc
cs
cmp
cmp
lods
repz
add
mov
xor
cmp
push
sar
jno
xor
pushf
add
gs
lods
mov
xor
ss
inc
sbb
les
int
push
ret
js
lea
push
or
lds
sbb
pop
lock
in
push
push
and
dec
pusha
or
xor
push
lds
sub
mov
lahf
mov
and
push
sbb
pop
xor
or
xor
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
pusha
add
scas
int3
adc
dec
cmp
pushf
mov
iret
add
(bad)
nop
push
jl
mov
add
mov
adc
adc
cmp
mov
adc
add
or
xor
adc
fs
movs
inc
loope
push
sub
adc
push
xor
in
ret
xchg
add
or
fdiv
xchg
daa
and
sbb
and
jo
popa
loopne
aas
or
mov
adc
outs
pop
aad
sub
dec
cmp
jle
mov
push
add
sub
push
test
xlat
cdq
pop
add
push
stc
cmp
rol
and
ror
scas
or
leave
sbb
add
dec
ins
inc
mov
adc
xchg
mov
add
add
and
sbb
out
fiadd
cmp
shr
test
test
xor
add
pop
sbb
push
leave
aaa
das
mov
sbb
enter
push
lds
pop
cld
add
inc
mov
xor
inc
adc
inc
add
jecxz
daa
or
inc
or
std
arpl
aas
jb
mov
mov
je
je
add
dec
and
lea
adc
or
xor
jae
loopne
and
add
pushf
xor
push
or
xchg
rol
adc
in
or
and
(bad)
mov
(bad)
push
add
rol
or
mov
and
cmp
add
ss
xor
inc
sahf
bound
and
rcl
mov
mov
mov
or
mov
ret
or
push
fadd
mov
or
sub
sub
push
cmp
sub
xchg
add
add
add
and
sbb
dec
cmp
add
add
aas
shl
icebp
dec
add
add
(bad)
push
or
add
rol
arpl
and
inc
or
push
xchg
mov
cmp
inc
inc
sti
ficomp
adc
mov
mov
ret
add
pop
clc
xchg
push
(bad)
sbb
add
xchg
mov
inc
or
cld
ret
test
stos
loope
or
ins
xor
adc
aas
pop
sbb
test
sub
arpl
xchg
(bad)
push
inc
sti
jecxz
cmp
ret
rol
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
ror
pushf
and
nop
loope
pop
imul
mov
sub
popa
and
sub
mov
sbb
jno
pop
adc
and
add
add
mov
ins
inc
adc
dec
test
out
cld
xchg
push
adc
mov
sti
inc
int3
xchg
xor
jg
push
dec
push
and
mov
ins
and
xor
push
or
adc
and
cmp
adc
movs
sbb
jae
ds
cmc
das
adc
add
cli
aaa
stc
pop
add
(bad)
jmp
mov
and
pop
push
sub
stc
repnz
and
in
pop
mov
shr
test
aas
cmp
outs
cmc
ror
test
mov
inc
mov
pop
mov
pop
rol
push
push
stos
es
add
mov
add
stos
js
mov
cmp
adc
push
dec
add
sbb
fidiv
push
or
mov
pushf
inc
mov
push
or
adc
mov
or
inc
sbb
daa
nop
add
mov
or
aad
int
or
or
inc
xchg
sbb
sbb
adc
mov
add
(bad)
or
in
or
inc
add
and
add
mov
mov
dec
push
clc
iret
cmp
(bad)
and
xchg
rcl
or
add
pop
adc
push
js
push
pusha
mov
xchg
adc
adc
mov
dec
hlt
inc
push
daa
add
fstp
adc
and
lea
pusha
jp
(bad)
rol
pop
loopne
or
or
ror
inc
add
add
sar
add
icebp
(bad)
sub
xchg
ror
or
sbb
clc
iret
push
imul
ret
enter
inc
adc
fistp
lock
push
cld
jecxz
sbb
adc
cwde
adc
jmp
jno
je
cmps
adc
add
int
in
add
(bad)
rep
inc
loop
movs
adc
push
and
lahf
add
and
xchg
add
jecxz
ins
or
jno
int
add
lock
clc
stc
out
aas
adc
test
je
aas
sbb
add
pop
int3
std
adc
adc
jge
xor
cld
pop
into
test
adc
cmp
pop
add
lock
leave
adc
sbb
pushf
pop
shl
leave
xor
push
les
in
inc
gs
es
push
dec
add
gs
mov
or
or
sub
mov
sub
nop
jns
adc
mov
add
jae
mov
push
int
stos
shl
popa
ins
inc
pop
cld
xchg
inc
pop
adc
(bad)
fnsave
int3
mov
test
sbb
je
pop
jmp
xor
push
in
test
inc
test
and
aas
int
adc
inc
cmps
adc
xor
cwde
jmp
aas
bound
inc
cmp
or
push
jbe
push
(bad)
icebp
dec
jmp
add
out
leave
xor
push
sbb
sar
adc
add
mov
push
add
cmp
ret
dec
inc
into
inc
mov
cmp
test
sbb
lods
dec
jl
lldt
inc
outs
pop
add
xchg
cmp
js
inc
test
add
les
rol
or
add
jb
or
movs
or
inc
adc
cmps
jo
xor
adc
mov
sbb
mov
ds
loopne
and
cld
icebp
ud2
cld
inc
or
adc
adc
imul
jo
inc
cwde
and
lock
(bad)
adc
rol
jo
cs
dec
xchg
daa
nop
mov
cs
adc
or
popf
sbb
push
into
test
add
and
add
or
inc
sub
add
add
add
add
or
dec
sbb
dec
add
or
scas
sbb
loope
pop
push
or
or
xor
or
es
rol
add
and
popa
push
mov
and
adc
add
inc
add
mov
loop
add
sbb
xor
jae
stos
adc
mov
sub
leave
sub
shl
ret
lock
push
cmp
add
stc
add
or
inc
sub
add
sbb
push
add
or
add
or
push
adc
(bad)
push
lds
inc
pop
push
pop
cmp
js
sar
adc
inc
(bad)
jg
ins
sbb
leave
jne
ja
push
js
inc
add
and
js
(bad)
lods
xchg
loopne
xor
adc
push
sbb
mov
stos
inc
test
jnp
es
enter
cli
push
or
loopne
and
cmp
cld
cmp
cmp
das
sub
hlt
test
add
sub
jnp
inc
ret
dec
lods
xchg
add
shl
sub
sbb
adc
hlt
pop
add
das
jb
add
vpacksswb
test
or
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
sbb
push
add
or
sub
rol
nop
pusha
mov
jo
pop
inc
mov
adc
aas
(bad)
fmul
jbe
and
fld
mov
push
and
je
pop
mov
or
and
xchg
add
xor
ins
test
or
add
ins
add
hlt
dec
shl
push
test
adc
movs
es
lods
xor
lock
push
dec
add
or
lds
call
sub
hlt
scas
add
pop
xchg
scas
or
xchg
es
dec
lds
push
or
mov
adc
and
xchg
inc
jle
das
daa
fnstsw
mov
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
dec
add
or
scas
sbb
loope
pop
push
or
or
xor
or
es
rol
add
and
popa
push
mov
and
adc
add
inc
add
mov
loop
add
sbb
xor
jae
stos
adc
mov
sub
leave
sub
shl
ret
lock
push
cmp
add
stc
add
or
inc
sub
add
sbb
push
add
or
add
or
push
adc
(bad)
push
lds
inc
pop
push
pop
cmp
js
sar
adc
inc
(bad)
jg
ins
sbb
leave
jne
ja
push
js
inc
add
and
js
(bad)
lods
xchg
loopne
xor
adc
push
sbb
mov
stos
inc
test
jnp
es
enter
cli
push
or
loopne
and
cmp
cld
cmp
cmp
das
sub
hlt
test
add
sub
jnp
inc
ret
dec
lods
xchg
add
shl
sub
sbb
adc
hlt
pop
add
das
jb
add
vpacksswb
test
or
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
push
add
add
add
add
add
add
or
inc
rol
mov
add
dec
add
push
add
add
popa
xor
sbb
push
add
test
add
ins
je
add
add
inc
dec
inc
cmp
popa
inc
add
add
inc
outs
shl
add
lea
or
fcomi
push
add
(bad)
jmp
sbb
jecxz
(bad)
aad
mov
or
adc
repnz
repnz
sub
ins
inc
or
iret
mov
mov
push
std
rol
int
(bad)
cld
daa
cdq
pop
add
mov
cld
mov
imul
xchg
loope
stos
jnp
push
retf
add
dec
jns
sti
rcr
jmp
mov
ret
add
cmps
add
cdq
add
xchg
mov
in
(bad)
xlat
push
cli
in
std
mov
xchg
pop
in
add
jmp
(bad)
inc
out
push
mov
add
cld
xlat
(bad)
hlt
(bad)
loope
add
test
push
cmps
enter
std
shl
jmp
aaa
std
or
mov
sahf
int
movs
add
mov
dec
(bad)
dec
std
hlt
xchg
aad
outs
stos
nop
mov
add
out
(bad)
cli
push
jmp
(bad)
stc
add
adc
call
cld
in
std
les
outs
add
xchg
(bad)
cli
mov
xchg
push
(bad)
mov
int3
dec
(bad)
(bad)
(bad)
jmp
je
push
ds
xchg
pop
push
pop
xchg
retf
jmp
retf
out
mov
in
test
fstp
imul
or
mov
fwait
sbb
call
std
mov
cmps
shl
hlt
call
mov
add
test
sub
(bad)
(bad)
in
shl
in
(bad)
inc
mov
push
xor
ficom
movs
adc
stos
xchg
(bad)
aaa
jge
aad
jns
idiv
lea
fwait
arpl
ret
push
(bad)
jmp
loopne
jecxz
jmp
or
test
stc
clc
jmp
lock
in
test
icebp
(bad)
repz
call
icebp
or
int
std
xchg
paddd
or
rol
clc
enter
xor
fisub
ret
movs
stc
jecxz
mov
pop
ret
fistp
mov
cmc
hlt
idiv
fnstenv
mov
(bad)
mov
cmc
fisttp
xchg
int
in
or
lahf
mov
mov
aad
(bad)
(bad)
clc
clc
stc
sti
arpl
add
(bad)
(bad)
call
add
lds
(bad)
and
jg
cld
sahf
or
mov
mov
loopne
cmps
fwait
(bad)
fimul
out
into
mov
loop
xchg
pop
adc
mov
mov
std
int3
cmp
ins
and
push
icebp
lock
leave
lods
add
cli
jmp
fidiv
div
std
stc
clc
imul
out
push
sti
sti
clc
fnsave
repnz
mov
or
fild
jmp
adc
mov
in
mov
cli
cld
sti
hlt
stc
sti
cld
loopne
repz
sti
jnp
dec
(bad)
test
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
cmp
add
inc
std
or
mov
rol
inc
mov
cmp
push
movs
xor
adc
adc
add
jbe
adc
das
adc
sub
and
and
xchg
and
icebp
jmp
push
jne
cli
retf
(bad)
sub
dec
sahf
add
movs
or
cdq
xor
test
mov
push
or
sbb
adc
mov
in
leave
sbb
test
outs
fld
lock
mov
stos
jae
and
mov
jae
xor
call
in
mov
sub
xor
and
pop
adc
pop
mov
adc
push
dec
pop
jo
pop
sub
loop
in
inc
jmp
xor
pusha
xor
sbb
test
clc
xchg
or
and
and
sub
and
and
lods
fs
enter
mov
push
mov
mov
add
sbb
cmp
add
ss
clc
repz
(bad)
mov
sbb
adc
test
inc
dec
xor
mov
cdq
arpl
dec
test
test
pop
clc
adc
sbb
std
add
or
sbb
retf
sub
es
js
ss
mov
sbb
pushf
aas
movs
nop
mov
loope
pop
stos
sub
dec
add
inc
and
cmp
test
inc
pop
jae
ja
test
rcl
add
or
and
(bad)
adc
fsubr
sbb
jo
daa
pop
cwde
mov
add
sahf
in
js
inc
sbb
inc
sub
sbb
leave
add
sub
jns
popf
sbb
and
mov
and
and
imul
push
test
inc
inc
cmp
pop
dec
adc
sbb
jmp
imul
push
wbinvd
push
sbb
mov
or
dec
and
inc
push
push
or
mov
in
inc
or
(bad)
js
inc
inc
enter
mov
xchg
iretw
adc
je
ins
add
and
xchg
inc
pop
sbb
mov
mov
cmp
sub
mov
sub
inc
jmp
ins
mov
jl
mov
inc
add
sbb
and
popf
jo
cmp
xor
or
push
sub
(bad)
or
lock
call
adc
(bad)
bound
inc
ds
jl
test
dec
sub
leave
int
jo
sbb
xor
mov
add
nop
ret
sbb
loop
jae
mov
push
lea
xor
cmp
mov
cmp
and
adc
add
or
or
adc
adc
mov
or
adc
sbb
or
mov
lods
ins
add
repnz
cmp
inc
aas
and
sbb
jmp
pop
es
jo
fisubr
adc
or
xor
mov
adc
add
add
call
or
(bad)
lds
movd
test
cmp
jne
sub
mov
push
adc
les
test
bound
or
and
sub
mov
and
jmp
xor
and
aad
outs
shr
pop
push
add
daa
repnz
std
push
pop
rol
or
sbb
xor
shl
cmps
add
mov
mov
pop
add
fld
pop
and
add
jbe
fldcw
mov
out
add
js
or
or
push
xchg
lock
cmp
jo
gs
sbb
add
(bad)
arpl
sub
xor
add
jb
add
inc
xchg
or
add
mov
ja
push
add
add
or
je
or
and
cmp
rol
push
lds
add
ss
and
nop
rcr
mov
and
sbb
ror
or
(bad)
cwde
or
push
bound
mov
and
adc
rol
stos
xor
push
dec
adc
push
xchg
cwde
mov
or
push
or
nop
inc
xor
das
adc
fwait
ss
mov
imul
add
mov
inc
adc
test
daa
adc
mov
sbb
add
jbe
rcl
ror
dec
and
add
out
clc
mov
enter
rol
or
sbb
jno
sub
sbb
nop
test
and
call
inc
xchg
rol
in
sbb
or
inc
adc
nop
pshufw
inc
jb
nop
or
add
js
or
sbb
pusha
and
jae
pop
cmp
mov
sbb
rol
and
sub
add
mov
push
(bad)
hlt
lea
rcl
or
or
aaa
call
inc
cmp
jecxz
out
jmp
arpl
add
sub
hlt
adc
and
adc
mov
(bad)
ret
push
cmp
add
lock
or
sbb
outs
pop
mov
pop
idiv
jno
bound
pop
js
scas
or
xchg
in
mov
and
sbb
lods
add
rol
sub
push
sbb
int3
add
mov
xchg
sub
xor
retf
lock
xor
mov
mov
dec
loopne
test
add
add
mov
sub
xchg
test
mov
and
lds
add
iret
pop
add
call
add
stos
add
and
mov
pop
cmp
outs
jge
popf
repnz
mov
test
mov
arpl
movs
scas
jge
or
dec
shl
add
dec
pop
(bad)
leave
leave
rol
sbb
sbb
lock
add
scas
and
cli
aad
add
cmp
xor
lea
or
mov
inc
xor
and
sbb
and
or
add
fs
add
loope
aas
pusha
adc
rol
adc
daa
and
dec
das
rol
xor
or
xor
pop
inc
popa
sbb
jo
or
or
ins
pop
cmp
inc
or
lock
inc
or
adc
daa
push
cmp
adc
and
cwde
mov
sbb
add
mov
adc
shr
sub
nop
xchg
jo
push
loopne
push
dec
ror
add
adc
add
sub
sbb
adc
sar
ret
pop
shr
cmp
push
call
(bad)
mov
dec
lock
test
sbb
mov
aam
push
add
vfmaddpd
sub
or
lock
ja
out
test
adc
jns
or
push
test
and
add
(bad)
fadd
push
loopne
add
sbb
adc
test
loop
lahf
push
int
sub
or
mov
or
adc
sbb
dec
test
xchg
push
or
add
and
sbb
je
or
pusha
push
sar
rol
(bad)
cld
dec
idiv
add
js
or
rol
das
mov
xor
mov
xor
xchg
fsub
mov
mov
push
push
or
or
mov
movs
add
add
call
les
ds
ja
mov
mov
xchg
add
adc
mov
lock
ret
pop
and
add
add
call
adc
and
cld
mov
sbb
dec
(bad)
mov
or
push
and
add
mov
ins
and
in
inc
outs
rcr
pop
push
or
repnz
es
hlt
ret
push
xor
push
jecxz
je
sar
movs
lock
sbb
out
cmps
push
jmp
mov
fwait
jae
cs
clc
movnti
pusha
inc
lea
dec
xchg
adc
or
js
rol
ins
nop
or
ror
push
ror
scas
addr16
loopne
int3
pusha
sub
sub
adc
push
mov
repnz
movs
pop
push
mov
or
push
jp
add
sbb
xchg
and
nop
add
pop
xor
xchg
push
pop
xor
push
sub
or
push
dec
test
sub
inc
imul
push
popa
xchg
inc
sub
rol
pop
jo
ss
push
push
rol
add
adc
(bad)
and
push
pusha
or
cmps
es
lock
js
adc
and
pop
adc
push
push
xor
inc
add
push
ror
nop
push
cmp
xor
add
inc
or
mov
push
mov
test
adc
and
nop
or
add
push
outs
loopne
in
(bad)
das
ret
nop
or
loopne
das
bound
gs
mov
ror
xchg
push
pusha
pop
jne
add
pusha
add
mul
and
ror
add
xor
fwait
or
add
adc
(bad)
add
or
imul
jbe
in
aam
or
push
xor
add
inc
add
jo
cmps
adc
and
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
rol
rcr
sub
sbb
dec
mov
rcr
push
push
xor
jmp
xor
xchg
and
retf
adc
pop
lea
lock
mov
jnp
les
sub
rcr
enter
mov
sbb
cmp
sub
dec
mov
pop
xor
and
push
int
test
adc
movs
dec
push
jmp
push
call
call
cs
mov
cmp
imul
push
xor
int3
cdq
pop
call
sbb
cdq
xor
cmp
test
sbb
cwde
adc
push
cmp
shr
fidiv
and
push
xchg
outs
and
xor
pusha
shl
test
pop
(bad)
stc
mov
xchg
loope
cmps
pusha
xchg
jmp
cmp
es
dec
mov
jp
push
stos
push
(bad)
in
sub
or
inc
sub
ret
sbb
xor
xchg
mov
in
loope
mov
sub
iret
adc
and
or
aas
sahf
cmp
dec
push
sub
js
sbb
or
rol
sbb
cmp
adc
mov
ret
inc
or
xchg
cmp
dec
(bad)
js
aas
or
push
xor
cmc
sbb
leave
pop
adc
enter
outs
mov
or
pop
mov
out
adc
xor
mov
add
add
pop
pop
enter
pop
mov
xchg
add
sbb
lods
sub
rcr
dec
fs
cmps
(bad)
cld
shr
inc
xor
add
push
sbb
adc
hlt
js
sbb
inc
jb
or
jmp
push
add
sub
ror
inc
xchg
cld
xchg
ret
aas
mov
push
(bad)
lock
mov
inc
ret
xor
and
pop
add
or
test
adc
les
inc
enter
stos
call
repnz
mov
adc
adc
mov
call
push
pop
push
cld
adc
mov
sub
jg
add
inc
gs
mov
inc
push
mov
adc
(bad)
idiv
cmp
xchg
and
cmp
clc
xchg
xor
call
ret
inc
and
xchg
enter
jae
dec
cmp
and
hlt
add
dec
inc
pop
hlt
rol
inc
iret
dec
popa
push
inc
or
les
stos
mov
mov
(bad)
in
adc
fistp
test
inc
jmp
sbb
xor
push
test
mov
xor
aas
and
pop
add
dec
push
or
sub
ror
inc
and
xor
adc
sbb
mov
mov
xor
adc
add
shl
das
dec
xor
add
mov
les
dec
cld
and
xchg
cli
or
push
inc
add
stc
add
or
inc
sub
add
add
and
add
or
mov
rol
lock
xor
and
cmp
inc
jns
xchg
xchg
sub
inc
jp
ret
sub
inc
inc
mov
loope
cmp
dec
test
aam
sub
ds
repz
cld
repz
(bad)
aas
jl
jle
pop
dec
jo
popf
cmp
sbb
ds
cmp
mov
add
or
mov
inc
mov
dec
cdq
cli
jnp
out
adc
xchg
cld
and
mov
mov
stos
push
(bad)
push
mov
int
les
pop
(bad)
mov
or
mov
in
add
mov
inc
lods
iret
push
push
mov
hlt
ja
inc
fs
pop
mov
push
ret
fbld
push
cmp
cmp
cmp
out
sbb
sbb
push
xor
into
pop
test
and
mov
lock
xchg
jmp
inc
rol
fsubr
jp
aad
inc
jb
aas
jl
cmps
shl
jno
xor
sub
pusha
loopne
sbb
mov
sbb
mov
in
sbb
inc
pop
cmp
and
push
test
pop
ja
ins
or
mov
adc
xor
jp
push
call
mov
add
fsub
mov
push
xchg
inc
push
in
mov
mov
ds
stc
xchg
xchg
push
cli
mov
cmp
wbinvd
add
adc
fadd
push
dec
sub
ret
pushf
je
or
adc
inc
mov
jb
and
or
mov
push
dec
add
adc
add
test
mov
mov
inc
call
iret
xor
loopne
sbb
pop
call
ret
xor
xor
pop
jl
inc
nop
adc
mov
jno
movhps
xchg
adc
push
jg
xrelease
fadd
adc
mov
retf
adc
push
mov
mov
mov
push
xor
rcr
add
sub
in
aas
outs
dec
adc
adc
popf
dec
and
sbb
aas
test
add
aam
sub
nop
dec
into
cmp
pusha
mov
loopne
xor
or
add
sti
sbb
sub
ror
sbb
add
xchg
retf
xor
adc
push
pop
sub
je
pop
pop
and
xor
stc
fsub
adc
xor
ror
cmp
inc
dec
inc
push
mov
dec
aas
add
inc
inc
push
jecxz
hlt
inc
sbb
adc
cmc
fsub
int3
push
inc
add
add
test
inc
hlt
(bad)
mov
int
aas
push
inc
sub
test
dec
nop
and
lfs
(bad)
sub
les
xor
pop
xor
aas
xor
cmp
and
inc
lods
pusha
push
add
test
je
jae
inc
lods
inc
nop
dec
ins
(bad)
aas
fcom
ret
inc
sbb
add
jmp
in
jl
jg
dec
nop
sbb
in
adc
lea
(bad)
jae
and
inc
ror
mov
or
sbb
sub
add
add
iret
add
inc
xor
inc
pop
pushf
call
adc
and
adc
inc
cmps
shl
lock
sbb
adc
inc
jmp
cmp
pop
jecxz
add
adc
adc
fild
push
add
loopne
or
dec
add
sub
aad
aaa
test
lock
jmp
inc
inc
jle
and
push
cli
pop
or
mov
or
test
dec
loopne
inc
nop
dec
stc
add
mov
loope
sub
inc
adc
jmp
mov
or
add
inc
or
add
test
inc
gs
sub
movaps
sbb
xor
stc
xchg
dec
ss
and
push
call
and
and
imul
add
add
add
add
daa
add
or
add
or
mov
rol
and
cld
sub
lahf
mov
fcmove
icebp
dec
mov
cmp
cmps
aad
adc
push
push
inc
popa
pop
push
mov
and
enter
jl
shr
mov
mov
test
pop
mov
std
pop
cmps
aad
xchg
or
mov
daa
inc
add
xor
sub
push
adc
xchg
add
mov
dec
inc
push
jno
dec
test
mov
and
adc
dec
xchg
adc
loope
mov
push
adc
(bad)
sub
shl
test
dec
aam
xor
ds
push
sub
mov
sub
mov
jmp
dec
pop
jo
pop
sub
loop
adc
xor
pusha
xor
sbb
test
clc
xchg
or
and
and
jo
nop
nop
adc
pusha
or
arpl
test
loopne
not
(bad)
cmc
or
add
mov
mov
adc
add
mov
add
adc
aad
adc
int
mov
xor
aad
adc
mov
loopne
aas
shl
imul
adc
mov
test
sub
sub
jecxz
cmp
call
dec
push
inc
inc
repnz
arpl
dec
adc
ss
mov
in
dec
repnz
movs
xchg
aam
add
aas
inc
test
bndstx
push
test
sbb
pop
jmp
xchg
dec
cmp
xor
inc
nop
adc
xor
cmp
cmps
inc
das
or
dec
dec
leave
push
add
or
adc
sub
xchg
test
add
sub
xor
(bad)
or
ss
and
jb
mov
push
inc
and
mov
inc
and
dec
xor
aaa
add
sbb
aas
push
je
lds
xchg
or
ins
or
and
add
jg
and
in
mov
adc
imul
jo
cdq
cmp
jo
inc
adc
shr
ds
sub
add
rol
movs
pop
add
inc
add
add
lds
in
ret
xchg
add
sub
pop
xchg
add
push
nop
xor
les
xor
jmp
mov
mov
add
call
lock
mov
mov
daa
add
int3
cmp
xor
and
jae
and
int
cld
adc
add
test
push
adc
jmp
jecxz
inc
loop
inc
dec
aaa
imul
je
(bad)
mov
fdivr
(bad)
dec
or
je
inc
bound
mov
cwde
add
or
ror
pop
cmp
xchg
mov
inc
mov
and
or
add
(bad)
retf
mov
dec
xor
dec
lock
cmp
add
jbe
icebp
inc
pop
push
push
inc
pop
dec
adc
push
js
xor
or
ds
adc
mov
or
inc
push
rcr
add
(bad)
pop
inc
cld
jecxz
inc
fs
(bad)
sbb
pusha
xor
cmp
pop
and
add
adc
push
inc
not
pop
mul
nop
call
or
loope
pushf
nop
sub
(bad)
es
(bad)
aas
(bad)
rol
or
inc
sbb
xchg
add
les
sbb
add
and
jge
add
adc
stos
jg
and
adc
sub
xor
and
adc
loopne
stos
adc
adc
loope
cmp
push
sub
add
and
mov
xor
add
mov
mov
ret
dec
(bad)
cmp
inc
and
mov
push
add
add
stc
add
or
inc
sub
add
add
sub
add
inc
dec
sbb
mov
rol
dec
mov
cmp
or
bound
mov
and
xor
mov
fwait
dec
repz
pop
or
cwde
push
pushf
adc
test
inc
rcr
cmp
xor
sbb
adc
inc
mov
fwait
stos
outs
fbstp
and
inc
sub
nop
shl
sahf
(bad)
or
mov
into
outs
push
lock
adc
or
(bad)
cld
popa
dec
dec
add
mov
(bad)
out
mov
js
xchg
cmp
ds
es
add
push
lods
and
outs
inc
sub
movs
mov
shl
or
iret
pushf
cmp
enter
xor
retf
inc
add
mov
xchg
ss
inc
pusha
popf
cmp
add
or
jmp
fwait
sbb
add
mov
push
es
mov
cld
mul
ret
adc
sub
repz
fisubr
(bad)
mov
jae
jno
pop
add
ret
xchg
jnp
lea
(bad)
cmp
inc
sub
or
daa
test
inc
push
cld
inc
and
aas
stos
cmp
cld
arpl
inc
pop
or
dec
mov
adc
inc
or
or
in
inc
push
imul
in
add
movs
nop
or
or
push
sar
hlt
or
scas
or
dec
(bad)
enter
pop
or
pop
inc
push
lods
sub
es
lea
dec
and
inc
and
lea
add
mov
mov
adc
add
and
sub
inc
pushf
add
repnz
xor
dec
lock
inc
sbb
rcl
add
daa
inc
dec
and
inc
adc
dec
enter
aas
out
add
xchg
dec
pushf
ror
ror
adc
and
add
pop
push
adc
(bad)
pop
and
scas
add
xor
loop
dec
nop
adc
and
dec
or
into
xor
test
xor
ror
cmp
mov
(bad)
call
mov
mov
add
loopne
aas
push
out
clc
iret
mov
add
inc
cwde
add
lds
lods
add
das
inc
add
pop
mov
bound
push
cmp
mov
fldenv
ror
lock
pusha
mov
sub
icebp
stos
and
and
add
xchg
daa
pop
test
mov
cld
or
scas
mov
int
fst
fs
inc
mov
sub
test
div
pop
adc
retf
ret
retf
inc
dec
aaa
(bad)
jl
adc
jmp
push
repnz
rol
push
add
add
xchg
and
or
xor
(bad)
xrelease
jo
push
inc
add
pop
push
int3
or
adc
add
push
or
in
xchg
push
push
push
aaa
loope
nop
add
ret
add
add
inc
adc
jmp
sub
and
or
test
inc
adc
fdiv
nop
sbb
sub
test
in
call
inc
popa
mov
and
movhlps
xor
dec
lock
nop
push
es
mov
mov
mov
dec
add
add
or
mov
push
mov
add
ja
or
add
or
or
nop
push
cld
ret
(bad)
inc
test
mov
and
and
mov
sub
rol
sbb
sbb
dec
xchg
or
and
pop
enter
bound
cmp
add
(bad)
xor
or
push
inc
jb
and
or
mov
pop
push
rol
and
add
sbb
(bad)
lds
inc
add
pop
or
sbb
dec
(bad)
xor
and
add
cmp
add
mov
add
dec
add
add
add
popa
xor
sbb
adc
add
ins
je
add
dec
inc
cmp
popa
cmp
xor
idiv
add
repz
(bad)
fiadd
ins
sub
cwde
push
add
rol
scas
mov
mov
(bad)
std
stos
(bad)
sti
outs
std
jmp
xchg
test
push
shr
fisub
(bad)
mov
test
push
xchg
jb
cli
outs
jb
jbe
xchg
imul
retf
add
out
(bad)
jmp
xchg
dec
add
ret
add
pusha
jmp
add
cld
mov
or
dec
rcl
cmp
xchg
add
cli
xor
stos
add
clc
call
js
in
add
cmp
xchg
icebp
repnz
icebp
add
mov
lock
(bad)
hlt
cmp
cmp
out
(bad)
(bad)
loope
mov
(bad)
(bad)
sub
sub
retf
xor
(bad)
(bad)
sbb
pop
pop
aam
out
(bad)
inc
mov
(bad)
std
add
mov
cmc
(bad)
es
ja
mov
add
sti
cwde
(bad)
neg
mov
cli
inc
inc
aam
push
fdivr
dec
adc
std
icebp
or
cld
(bad)
call
mov
(bad)
fisttp
(bad)
cli
bnd
pop
(bad)
stc
add
(bad)
sbb
dec
das
out
add
fcmovbe
enter
(bad)
adc
push
in
jmp
mov
add
in
cmp
inc
push
add
scas
daa
cli
(bad)
push
fcmovnu
(bad)
clc
stc
stc
in
xlat
adc
or
clc
std
call
or
xor
adc
add
idiv
add
add
shl
pop
(bad)
lock
mov
lea
stc
movs
add
push
pop
push
adc
pop
call
add
adc
sti
(bad)
(bad)
in
jecxz
push
add
test
cld
retf
or
stos
add
(bad)
cld
xchg
pop
or
std
sti
mov
paddusb
sti
mov
mov
add
retf
data16
mov
sub
and
rol
(bad)
jmp
retf
cld
(bad)
std
out
retf
add
ficom
std
mov
ficomp
std
std
std
(bad)
in
add
mov
test
and
cli
or
mov
jecxz
(bad)
mov
(bad)
loope
fadd
jge
cld
std
std
cld
(bad)
out
mov
icebp
jecxz
lahf
imul
or
push
mov
or
jmp
mov
sbb
mov
mov
cmp
or
dec
fsub
ror
mov
jg
not
adc
int
out
mov
in
loope
les
div
or
in
hlt
enter
sub
sti
sti
icebp
lods
or
fild
cld
test
icebp
add
stc
(bad)
sahf
sbb
rol
xchg
pop
(bad)
mov
mov
and
out
hlt
jecxz
pop
shl
bnd
retf
ficomp
sti
cli
pop
(bad)
fiadd
test
sbb
neg
hlt
inc
stc
rcl
sti
stc
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
sub
inc
sub
add
add
xor
add
inc
std
or
mov
inc
and
popa
ret
jne
sbb
sub
shl
add
mov
sahf
popw
jbe
pop
leave
rcr
or
push
adc
jb
mov
inc
inc
lahf
lahf
aas
stos
inc
adc
sub
sbb
cmp
cmps
imul
push
jae
jmp
je
add
push
hlt
imul
arpl
add
mov
clc
ins
push
or
dec
sbb
scas
fmul
adc
push
sbb
lea
fcmovnb
js
fld
add
cwde
dec
dec
jb
or
dec
inc
xor
xlat
stos
aas
add
inc
adc
jae
clc
jno
int3
jp
pop
jnp
daa
pop
mul
and
and
mov
adc
ffreep
add
ss
in
cdq
mov
mov
or
enter
jl
jecxz
movs
jo
into
loopne
xchg
not
movs
test
sbb
and
cmp
ret
xchg
lods
mov
cmp
nop
enter
loope
jae
int
inc
pop
fs
test
push
or
adc
sbb
js
xor
add
adc
les
inc
xor
add
pop
pop
test
push
je
add
(bad)
das
add
addr16
or
hlt
ret
les
cmp
add
into
pusha
sbb
inc
mov
sub
mov
test
add
adc
add
jbe
add
sbb
test
fild
mov
mov
mov
daa
es
clc
ret
or
aam
add
pop
hlt
ror
cmp
rcl
inc
cmp
jno
add
mov
rol
adc
xor
jno
pop
inc
or
jmp
jo
movs
sub
pop
pusha
and
adc
sahf
jle
inc
add
test
fistp
sbb
sub
and
add
pop
xor
out
inc
adc
add
inc
cmp
mov
fstp
fild
add
and
ss
inc
pop
(bad)
or
out
pop
fdiv
mov
add
and
stos
cmp
inc
je
push
pop
push
mov
add
mov
push
dec
sub
push
add
mov
push
or
inc
or
rol
adc
jbe
push
add
mov
dec
add
jl
inc
lds
test
add
add
adc
mov
add
sbb
dec
add
push
ret
cmp
retf
mov
xchg
sub
xor
add
xchg
or
or
inc
mov
leave
mov
add
sbb
xchg
or
nop
push
out
mov
jl
sbb
pop
pop
adc
sub
cmp
test
shl
xchg
xchg
and
jl
sbb
cwde
push
inc
sbb
popa
dec
and
cmp
push
sbb
enter
sbb
nop
ret
push
xor
ror
or
push
push
and
pop
mov
add
retf
xchg
xchg
push
adc
pop
dec
or
call
pushf
pop
add
inc
mov
jo
xor
and
adc
adc
js
adc
inc
lea
loop
cld
mov
xor
adc
jns
jnp
xor
mov
and
add
cwde
push
test
mov
lds
scas
pusha
push
leave
in
sbb
and
push
bound
sub
pop
call
arpl
cwde
mov
push
mov
xchg
push
jno
add
mov
aas
mov
out
loop
cmp
bound
add
push
sti
or
push
or
mov
or
test
add
mov
pop
or
mov
rcr
test
or
rol
xor
int3
add
inc
add
inc
add
xchg
add
cmps
jnp
pusha
add
add
dec
adc
ins
fs
sahf
or
bound
mov
adc
pop
rol
js
outs
cmps
loope
push
xor
or
push
adc
inc
loopne
add
clc
and
xor
out
mov
jecxz
ds
nop
ror
inc
xor
sbb
lock
sub
rol
adc
sbb
fbld
pusha
or
test
(bad)
jb
sbb
xchg
inc
mov
and
loope
fwait
add
or
xchg
push
sbb
fadd
add
push
dec
and
(bad)
sar
adc
popf
and
pop
cwde
inc
ret
mov
pop
sub
sar
xchg
mov
inc
adc
fadd
xor
mov
add
dec
ins
lea
xchg
rcr
cdq
ror
gs
cmp
popa
add
aas
(bad)
jo
das
pop
xor
sar
inc
or
add
movs
bound
dec
nop
add
adc
repz
cmps
sub
loopne
push
push
push
ret
adc
inc
rcr
jo
inc
outs
mov
sbb
sub
sbb
dec
ss
bound
mov
lds
push
add
mov
mov
sub
iret
or
test
hlt
and
dec
xor
pop
add
(bad)
das
push
sub
add
add
mov
adc
loopne
xchg
leave
sbb
add
inc
cmp
mov
inc
adc
adc
add
adc
add
rol
cmp
or
pop
ret
add
push
sub
enter
daa
or
in
add
pusha
fbstp
inc
push
push
add
mov
add
rol
adc
xchg
mov
sub
xchg
repnz
adc
add
mov
push
pop
jecxz
mov
xor
add
xchg
or
popa
or
pusha
push
test
adc
adc
push
push
adc
add
jb
ror
test
enter
ficomp
cld
xchg
mov
and
add
add
ins
bound
fwait
bound
jmp
dec
test
mov
ret
sbb
pop
es
out
adc
mov
add
push
rol
ins
in
call
lahf
mov
dec
ins
loop
xor
or
inc
xor
add
push
inc
adc
pusha
popa
pop
call
xor
push
push
loop
add
inc
xor
mov
push
inc
inc
lsl
push
sbb
test
mov
pop
mov
repnz
push
fwait
cmp
push
sbb
outs
and
add
jno
add
rcl
xchg
ret
mov
pop
mov
cs
imul
jo
xchg
int3
lds
imul
ins
ins
mov
mov
add
mov
rol
dec
mov
cmc
int
adc
cdq
into
jne
add
mov
test
cwde
fld
scas
repz
push
or
adc
add
push
add
xor
das
jle
inc
or
fs
jns
cs
pop
xchg
sub
rcl
cmp
je
jmp
test
mov
lods
jl
sar
xor
add
ins
imul
adc
lock
and
ds
inc
add
and
add
or
inc
sub
add
cmp
sub
add
inc
dec
sbb
mov
mov
dec
enter
xchg
xor
test
add
rol
dec
jge
fst
sub
cwde
mov
aaa
es
mov
or
arpl
xchg
or
sub
test
jmp
jns
imul
hlt
and
dec
mov
jmp
jne
(bad)
inc
enter
xchg
cmps
and
test
rol
adc
add
xchg
adc
push
or
stc
push
mov
xchg
inc
dec
aam
sub
inc
cs
add
mov
stc
out
xor
dec
mov
mov
es
shr
xor
adc
inc
lock
push
lahf
push
xchg
sbb
jge
inc
inc
test
mov
call
ror
sbb
sbb
(bad)
imul
cmp
or
adc
fdivr
test
add
sbb
std
mov
adc
mov
mov
mov
les
neg
test
jl
add
push
adc
popa
das
scas
hlt
adc
mov
int3
adc
ret
push
add
aaa
add
add
les
add
jecxz
aas
leave
jl
(bad)
aas
call
loopne
and
js
or
and
inc
or
adc
inc
jg
mov
pop
or
add
inc
sub
nop
xchg
inc
test
cmp
sbb
inc
push
xchg
or
fdiv
adc
aas
pop
rol
imul
cmps
add
push
mov
enter
jnp
arpl
fsubr
popa
or
sbb
xor
or
inc
or
xor
sbb
jp
test
jl
inc
sub
hlt
xchg
rol
aam
sbb
icebp
int3
repz
clc
jb
and
pusha
inc
imul
cmp
outs
cmp
add
je
dec
sbb
clc
jecxz
scas
jge
icebp
mov
test
xor
adc
pop
icebp
dec
add
test
sub
sub
into
and
add
xor
sub
xchg
mov
or
(bad)
iret
or
js
inc
sbb
cmp
js
dec
sbb
xchg
push
add
enter
or
sbb
mov
(bad)
fdiv
ret
adc
adc
loopne
and
nop
loopne
adc
mov
ror
xchg
add
retf
js
add
imul
add
test
inc
mov
sar
jge
or
loopne
fstp
add
outs
test
pop
adc
retf
je
dec
sbb
loope
or
(bad)
imul
(bad)
mov
xchg
or
ror
cmp
int3
aas
mov
pushf
inc
add
js
inc
add
aas
or
test
or
fstp
nop
adc
lock
mov
add
cmp
test
mov
pop
jo
xchg
lods
pop
inc
or
out
je
xchg
and
mov
sbb
or
dec
and
push
push
xchg
pop
lock
outs
mov
dec
nop
leave
aas
pop
jo
push
iret
lods
pop
inc
or
mov
pusha
add
shl
push
adc
and
sub
movs
inc
dec
adc
dec
adc
sbb
push
push
cwde
inc
push
jne
inc
imul
sub
or
xor
pop
loopne
push
into
adc
repnz
rol
and
dec
cmp
push
add
add
adc
mov
add
and
jnp
and
movs
and
xor
xor
adc
mov
adc
ins
and
sbb
sub
ror
push
jmp
cmp
add
scas
add
sub
pop
adc
sub
js
xor
and
aaa
stc
dec
or
pop
or
mov
inc
cmp
nop
mov
adc
call
mov
mov
adc
mov
sub
pusha
add
jo
mov
pop
push
leave
and
mov
lsl
test
cmp
sbb
jo
pop
test
aaa
dec
adc
sub
pop
movs
loopne
sub
sub
push
mov
inc
das
pop
ror
xor
and
dec
add
sbb
push
add
inc
sbb
push
xor
cmove
pop
sub
add
loop
push
inc
xchg
cli
inc
or
and
dec
xor
pop
fcmovbe
and
adc
sbb
rcr
ror
lock
pop
mov
add
add
jbe
arpl
mov
pop
pop
dec
add
add
sub
dec
adc
or
nop
adc
out
mov
in
loope
je
rcr
call
or
bswap
inc
or
cwde
rcl
mov
pop
add
ret
pusha
retf
mov
and
add
mov
pop
cmp
or
add
dec
loopne
sub
pop
push
ret
mov
cwde
(bad)
lods
xor
mov
loopne
aam
and
push
cmps
ins
add
fimul
in
push
add
(bad)
mov
loopne
or
sbb
loopne
pop
fsub
and
add
inc
add
mov
and
int
pop
add
inc
adc
int
es
jo
push
clc
rol
mov
mov
adc
nop
mov
call
add
push
xchg
or
push
(bad)
push
adc
xchg
loop
lods
sbb
add
inc
add
enter
fild
iret
js
or
enter
mov
pcmpeqb
add
mov
or
pop
or
inc
add
loope
clc
aad
es
dec
loop
sti
popa
or
test
adc
ror
cwde
ret
or
jno
icebp
cmp
lock
or
loopne
hlt
leave
adc
and
adc
mov
mov
push
adc
cld
or
rol
ret
and
repnz
fs
imul
inc
mov
push
test
pop
inc
int3
mov
rcr
aaa
push
mov
clc
pop
add
clc
jns
bound
push
mov
or
cmp
or
(bad)
and
and
cmp
sbb
shl
retf
add
xchg
mov
and
cs
push
and
adc
or
add
jo
and
mov
jecxz
add
mov
lea
mov
sbb
mov
xor
add
or
pusha
sbb
inc
and
push
cdq
int
retf
fldenv
daa
mov
out
les
sbb
and
sub
inc
les
push
sbb
popa
outs
xchg
js
aam
mov
inc
cmps
mov
xchg
fistp
aam
adc
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
xchg
gs
add
or
clc
mov
and
and
mov
cwde
inc
push
add
inc
pushf
xor
add
cld
push
dec
aam
sub
dec
fwait
add
xchg
push
sbb
jmp
jnp
push
dec
mov
inc
inc
jg
jl
and
push
or
cmp
int
adc
jge
jecxz
int
xchg
(bad)
fsub
and
(bad)
aam
adc
mov
and
push
xchg
cs
cdq
cmp
xor
call
sbb
pushf
pop
or
push
mov
jp
push
xor
cmps
inc
pop
jmp
mov
out
(bad)
sub
xor
sub
cmps
pop
sar
inc
mov
fsubr
mov
cmp
jmp
pusha
inc
jmp
and
adc
inc
xor
stc
call
pop
iret
jmp
adc
and
test
pushf
gs
popa
int3
aas
ds
loope
adc
pushf
jb
cmp
sbb
cmp
rcr
dec
and
cwde
inc
fwait
or
ret
aas
(bad)
mov
shl
faddp
jo
xor
clc
int3
jge
adc
aam
or
pop
sub
lds
xor
cmp
mov
sub
js
mov
mov
nop
inc
adc
mov
or
aaa
(bad)
call
test
inc
add
and
clc
and
and
retf
aas
xor
ds
sub
pusha
jb
aas
dec
cld
rol
xchg
push
lahf
cwde
jns
popf
xor
inc
mov
push
(bad)
sub
mov
in
test
retf
setl
or
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
xchg
scas
or
pop
xchg
and
clc
mov
inc
ret
lods
or
inc
sbb
int3
add
or
xor
and
xchg
test
fcom
(bad)
iret
leave
pop
popa
add
sub
lock
adc
jmp
out
and
repnz
mov
jge
cmp
and
test
inc
adc
and
(bad)
or
mov
sbb
cli
aaa
test
dec
cmp
inc
or
push
cmps
in
inc
sub
adc
add
cld
dec
shl
lea
jnp
inc
inc
imul
out
lahf
aaa
outs
pop
scas
or
inc
mov
inc
popa
xor
adc
xor
xchg
sub
mov
or
push
or
inc
loopne
outs
iret
sahf
or
fsubr
nop
mov
loopne
sub
mov
push
clc
pop
test
icebp
ds
sbb
mov
test
adc
add
ss
xor
mov
sub
push
lock
adc
inc
or
adc
xchg
xor
aas
in
fsub
nop
xor
arpl
or
push
pop
pop
jne
push
cmp
or
xor
xor
jne
dec
pop
add
mov
adc
push
les
fucom
and
cmp
mov
ss
test
pcmpeqb
jno
add
sbb
nop
inc
or
iret
add
sbb
rol
mov
clc
sbb
xchg
sbb
or
int3
mov
inc
push
ds
mov
add
or
or
or
popa
and
jmp
inc
cmps
push
push
push
or
push
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
mov
add
pop
ret
xchg
and
in
lock
les
jmp
(bad)
(bad)
adc
mov
push
add
loope
xchg
hlt
dec
fidivr
inc
enter
test
jmp
js
and
cwde
add
out
xor
add
mov
(bad)
into
push
test
mov
mov
xor
fisub
dec
jb
fadd
mov
into
fcmovbe
ret
xchg
pop
loopne
bound
adc
jg
add
adc
inc
(bad)
push
push
(bad)
f2xm1
icebp
sub
sbb
cmp
repz
aas
(bad)
(bad)
stc
mov
and
out
std
fwait
mov
dec
xchg
scas
or
js
lahf
mov
add
pop
nop
out
inc
mov
test
adc
xchg
idiv
push
retf
shr
fmul
call
inc
lock
jg
les
adc
in
lahf
ds
sub
rsqrtps
mov
jecxz
jnp
dec
adc
aas
xor
cmp
pusha
inc
and
fadd
adc
push
lahf
or
and
or
ret
jb
rcl
popa
jl
push
push
call
mov
retf
setl
or
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
and
inc
cwde
loope
ret
sbb
and
xchg
push
lock
or
lds
push
adc
pusha
call
mov
inc
test
cli
daa
loopne
enter
jle
aaa
add
adc
and
push
popa
retf
dec
pusha
ror
fcom
adc
fdiv
mov
xchg
mov
into
cmp
ret
fwait
mov
xor
xor
adc
xor
xchg
sub
pop
int3
inc
ss
pop
fidivr
imul
in
fnstenv
adc
iret
sub
or
sub
gs
sbb
or
cld
pop
push
or
addr16
jb
mov
jg
pop
adc
fdivr
fnclex
int
or
pop
sub
lock
jne
(bad)
mov
sbb
or
gs
shl
sbb
pop
mov
or
add
int3
mov
cmp
or
push
or
(bad)
fadd
fistp
adc
sar
test
enter
jo
or
cmp
or
sbb
and
dec
xor
or
clc
pusha
cwde
loope
adc
mov
ja
inc
sbb
mov
push
or
push
add
add
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
xchg
gs
add
or
clc
mov
and
and
mov
cwde
inc
push
add
inc
pushf
xor
add
cld
push
dec
aam
sub
dec
fwait
add
xchg
push
sbb
jmp
jnp
push
dec
mov
inc
inc
jg
jl
and
push
or
cmp
int
adc
jge
jecxz
int
xchg
(bad)
fsub
and
(bad)
aam
adc
mov
and
push
xchg
cs
cdq
cmp
xor
call
sbb
pushf
pop
or
push
mov
jp
push
xor
cmps
inc
pop
jmp
mov
out
(bad)
sub
xor
sub
cmps
pop
sar
inc
mov
fsubr
mov
cmp
jmp
pusha
inc
jmp
and
adc
inc
xor
stc
call
pop
iret
jmp
adc
and
test
pushf
gs
popa
int3
aas
ds
loope
adc
pushf
jb
cmp
sbb
cmp
rcr
dec
and
cwde
inc
fwait
or
ret
aas
(bad)
mov
shl
faddp
jo
xor
clc
int3
jge
adc
aam
or
pop
sub
lds
xor
cmp
mov
sub
js
mov
mov
nop
inc
adc
mov
or
aaa
(bad)
call
test
inc
add
and
clc
and
and
retf
aas
xor
ds
sub
pusha
jb
aas
dec
cld
rol
xchg
push
lahf
cwde
jns
popf
xor
inc
mov
push
(bad)
sub
mov
in
test
retf
setl
or
add
add
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
xchg
scas
or
pop
xchg
and
clc
mov
inc
ret
lods
or
inc
sbb
int3
add
or
xor
and
xchg
test
fcom
(bad)
iret
leave
pop
popa
add
sub
lock
adc
jmp
out
and
repnz
mov
jge
cmp
and
test
inc
adc
and
(bad)
or
mov
sbb
cli
aaa
test
dec
cmp
inc
or
push
cmps
in
inc
sub
adc
add
cld
dec
shl
lea
jnp
inc
inc
imul
out
lahf
aaa
outs
pop
scas
or
inc
mov
inc
popa
xor
adc
xor
xchg
sub
mov
or
push
or
inc
loopne
outs
iret
sahf
or
fsubr
nop
mov
loopne
sub
mov
push
clc
pop
test
icebp
ds
sbb
mov
test
adc
add
ss
xor
mov
sub
push
lock
adc
inc
or
adc
xchg
xor
aas
in
fsub
nop
xor
arpl
or
push
pop
pop
jne
push
cmp
or
xor
xor
jne
dec
pop
add
mov
adc
push
les
fucom
and
cmp
mov
ss
test
pcmpeqb
jno
add
sbb
nop
inc
or
iret
add
sbb
rol
mov
clc
sbb
xchg
sbb
or
int3
mov
inc
push
ds
mov
add
or
or
or
popa
and
jmp
inc
cmps
push
push
push
or
push
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
mov
add
pop
ret
xchg
and
in
lock
les
jmp
(bad)
(bad)
adc
mov
push
add
loope
xchg
hlt
dec
fidivr
inc
enter
test
jmp
js
and
cwde
add
out
xor
add
mov
(bad)
into
push
test
mov
mov
xor
fisub
dec
jb
fadd
mov
into
fcmovbe
ret
xchg
pop
loopne
bound
adc
jg
add
adc
inc
(bad)
push
push
(bad)
f2xm1
icebp
sub
sbb
cmp
repz
aas
(bad)
(bad)
stc
mov
and
out
std
fwait
mov
dec
xchg
scas
or
js
lahf
mov
add
pop
nop
out
inc
mov
test
adc
xchg
idiv
push
retf
shr
fmul
call
inc
lock
jg
les
adc
in
lahf
ds
sub
rsqrtps
mov
jecxz
jnp
dec
adc
aas
xor
cmp
pusha
inc
and
fadd
adc
push
lahf
or
and
or
ret
jb
rcl
popa
jl
push
push
call
mov
retf
setl
or
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
and
inc
cwde
loope
ret
sbb
and
xchg
push
lock
or
lds
push
adc
pusha
call
mov
inc
test
cli
daa
loopne
enter
jle
aaa
add
adc
and
push
popa
retf
dec
pusha
ror
fcom
adc
fdiv
mov
xchg
mov
into
cmp
ret
fwait
mov
xor
xor
adc
xor
xchg
sub
pop
int3
inc
ss
pop
fidivr
imul
in
fnstenv
adc
iret
sub
or
sub
gs
sbb
or
cld
pop
push
or
addr16
jb
mov
jg
pop
adc
fdivr
fnclex
int
or
pop
sub
lock
jne
(bad)
mov
sbb
or
gs
shl
sbb
pop
mov
or
add
int3
mov
cmp
or
push
or
(bad)
fadd
fistp
adc
sar
test
enter
jo
or
cmp
or
sbb
and
dec
xor
or
clc
pusha
cwde
loope
adc
mov
ja
inc
sbb
mov
push
or
push
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
push
mov
add
pop
ret
xchg
and
in
lock
les
jmp
(bad)
(bad)
adc
mov
push
add
loope
xchg
hlt
dec
fidivr
inc
enter
test
jmp
js
and
cwde
add
out
xor
add
mov
(bad)
into
push
test
mov
mov
xor
fisub
dec
jb
fadd
mov
into
fcmovbe
ret
xchg
pop
loopne
bound
adc
jg
add
adc
inc
(bad)
push
push
(bad)
f2xm1
icebp
sub
sbb
cmp
repz
aas
(bad)
(bad)
stc
mov
and
out
std
fwait
mov
dec
xchg
scas
or
js
lahf
mov
add
pop
nop
out
inc
mov
test
adc
xchg
idiv
push
retf
shr
fmul
call
inc
lock
jg
les
adc
in
lahf
ds
sub
rsqrtps
mov
jecxz
jnp
dec
adc
aas
xor
cmp
pusha
inc
and
fadd
adc
push
lahf
or
and
or
ret
jb
rcl
popa
jl
push
push
call
mov
retf
setl
or
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
and
inc
cwde
loope
ret
sbb
and
xchg
push
lock
or
lds
push
adc
pusha
call
mov
inc
test
cli
daa
loopne
enter
jle
aaa
add
adc
and
push
popa
retf
dec
pusha
ror
fcom
adc
fdiv
mov
xchg
mov
into
cmp
ret
fwait
mov
xor
xor
adc
xor
xchg
sub
pop
int3
inc
ss
pop
fidivr
imul
in
fnstenv
adc
iret
sub
or
sub
gs
sbb
or
cld
pop
push
or
addr16
jb
mov
jg
pop
adc
fdivr
fnclex
int
or
pop
sub
lock
jne
(bad)
mov
sbb
or
gs
shl
sbb
pop
mov
or
add
int3
mov
cmp
or
push
or
(bad)
fadd
fistp
adc
sar
test
enter
jo
or
cmp
or
sbb
and
dec
xor
or
clc
pusha
cwde
loope
adc
mov
ja
inc
sbb
mov
push
or
push
add
add
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
xchg
gs
add
or
clc
mov
and
and
mov
cwde
inc
push
add
inc
pushf
xor
add
cld
push
dec
aam
sub
dec
fwait
add
xchg
push
sbb
jmp
jnp
push
dec
mov
inc
inc
jg
jl
and
push
or
cmp
int
adc
jge
jecxz
int
xchg
(bad)
fsub
and
(bad)
aam
adc
mov
and
push
xchg
cs
cdq
cmp
xor
call
sbb
pushf
pop
or
push
mov
jp
push
xor
cmps
inc
pop
jmp
mov
out
(bad)
sub
xor
sub
cmps
pop
sar
inc
mov
fsubr
mov
cmp
jmp
pusha
inc
jmp
and
adc
inc
xor
stc
call
pop
iret
jmp
adc
and
test
pushf
gs
popa
int3
aas
ds
loope
adc
pushf
jb
cmp
sbb
cmp
rcr
dec
and
cwde
inc
fwait
or
ret
aas
(bad)
mov
shl
faddp
jo
xor
clc
int3
jge
adc
aam
or
pop
sub
lds
xor
cmp
mov
sub
js
mov
mov
nop
inc
adc
mov
or
aaa
(bad)
call
test
inc
add
and
clc
and
and
retf
aas
xor
ds
sub
pusha
jb
aas
dec
cld
rol
xchg
push
lahf
cwde
jns
popf
xor
inc
mov
push
(bad)
sub
mov
in
test
retf
setl
or
add
add
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
xchg
scas
or
pop
xchg
and
clc
mov
inc
ret
lods
or
inc
sbb
int3
add
or
xor
and
xchg
test
fcom
(bad)
iret
leave
pop
popa
add
sub
lock
adc
jmp
out
and
repnz
mov
jge
cmp
and
test
inc
adc
and
(bad)
or
mov
sbb
cli
aaa
test
dec
cmp
inc
or
push
cmps
in
inc
sub
adc
add
cld
dec
shl
lea
jnp
inc
inc
imul
out
lahf
aaa
outs
pop
scas
or
inc
mov
inc
popa
xor
adc
xor
xchg
sub
mov
or
push
or
inc
loopne
outs
iret
sahf
or
fsubr
nop
mov
loopne
sub
mov
push
clc
pop
test
icebp
ds
sbb
mov
test
adc
add
ss
xor
mov
sub
push
lock
adc
inc
or
adc
xchg
xor
aas
in
fsub
nop
xor
arpl
or
push
pop
pop
jne
push
cmp
or
xor
xor
jne
dec
pop
add
mov
adc
push
les
fucom
and
cmp
mov
ss
test
pcmpeqb
jno
add
sbb
nop
inc
or
iret
add
sbb
rol
mov
clc
sbb
xchg
sbb
or
int3
mov
inc
push
ds
mov
add
or
or
or
popa
and
jmp
inc
cmps
push
push
push
or
push
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
mov
add
pop
ret
xchg
and
in
lock
les
jmp
(bad)
(bad)
adc
mov
push
add
loope
xchg
hlt
dec
fidivr
inc
enter
test
jmp
js
and
cwde
add
out
xor
add
mov
(bad)
into
push
test
mov
mov
xor
fisub
dec
jb
fadd
mov
into
fcmovbe
ret
xchg
pop
loopne
bound
adc
jg
add
adc
inc
(bad)
push
push
(bad)
f2xm1
icebp
sub
sbb
cmp
repz
aas
(bad)
(bad)
stc
mov
and
out
std
fwait
mov
dec
xchg
scas
or
js
lahf
mov
add
pop
nop
out
inc
mov
test
adc
xchg
idiv
push
retf
shr
fmul
call
inc
lock
jg
les
adc
in
lahf
ds
sub
rsqrtps
mov
jecxz
jnp
dec
adc
aas
xor
cmp
pusha
inc
and
fadd
adc
push
lahf
or
and
or
ret
jb
rcl
popa
jl
push
push
call
mov
retf
setl
or
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
and
inc
cwde
loope
ret
sbb
and
xchg
push
lock
or
lds
push
adc
pusha
call
mov
inc
test
cli
daa
loopne
enter
jle
aaa
add
adc
and
push
popa
retf
dec
pusha
ror
fcom
adc
fdiv
mov
xchg
mov
into
cmp
ret
fwait
mov
xor
xor
adc
xor
xchg
sub
pop
int3
inc
ss
pop
fidivr
imul
in
fnstenv
adc
iret
sub
or
sub
gs
sbb
or
cld
pop
push
or
addr16
jb
mov
jg
pop
adc
fdivr
fnclex
int
or
pop
sub
lock
jne
(bad)
mov
sbb
or
gs
shl
sbb
pop
mov
or
add
int3
mov
cmp
or
push
or
(bad)
fadd
fistp
adc
sar
test
enter
jo
or
cmp
or
sbb
and
dec
xor
or
clc
pusha
cwde
loope
adc
mov
ja
inc
sbb
mov
push
or
push
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
push
mov
add
pop
ret
xchg
and
in
lock
les
jmp
(bad)
(bad)
adc
mov
push
add
loope
xchg
hlt
dec
fidivr
inc
enter
test
jmp
js
and
cwde
add
out
xor
add
mov
(bad)
into
push
test
mov
mov
xor
fisub
dec
jb
fadd
mov
into
fcmovbe
ret
xchg
pop
loopne
bound
adc
jg
add
adc
inc
(bad)
push
push
(bad)
f2xm1
icebp
sub
sbb
cmp
repz
aas
(bad)
(bad)
stc
mov
and
out
std
fwait
mov
dec
xchg
scas
or
js
lahf
mov
add
pop
nop
out
inc
mov
test
adc
xchg
idiv
push
retf
shr
fmul
call
inc
lock
jg
les
adc
in
lahf
ds
sub
rsqrtps
mov
jecxz
jnp
dec
adc
aas
xor
cmp
pusha
inc
and
fadd
adc
push
lahf
or
and
or
ret
jb
rcl
popa
jl
push
push
call
mov
retf
setl
or
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
and
inc
cwde
loope
ret
sbb
and
xchg
push
lock
or
lds
push
adc
pusha
call
mov
inc
test
cli
daa
loopne
enter
jle
aaa
add
adc
and
push
popa
retf
dec
pusha
ror
fcom
adc
fdiv
mov
xchg
mov
into
cmp
ret
fwait
mov
xor
xor
adc
xor
xchg
sub
pop
int3
inc
ss
pop
fidivr
imul
in
fnstenv
adc
iret
sub
or
sub
gs
sbb
or
cld
pop
push
or
addr16
jb
mov
jg
pop
adc
fdivr
fnclex
int
or
pop
sub
lock
jne
(bad)
mov
sbb
or
gs
shl
sbb
pop
mov
or
add
int3
mov
cmp
or
push
or
(bad)
fadd
fistp
adc
sar
test
enter
jo
or
cmp
or
sbb
and
dec
xor
or
clc
pusha
cwde
loope
adc
mov
ja
inc
sbb
mov
push
or
push
add
add
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
xchg
gs
add
or
clc
mov
and
and
mov
cwde
inc
push
add
inc
pushf
xor
add
cld
push
dec
aam
sub
dec
fwait
add
xchg
push
sbb
jmp
jnp
push
dec
mov
inc
inc
jg
jl
and
push
or
cmp
int
adc
jge
jecxz
int
xchg
(bad)
fsub
and
(bad)
aam
adc
mov
and
push
xchg
cs
cdq
cmp
xor
call
sbb
pushf
pop
or
push
mov
jp
push
xor
cmps
inc
pop
jmp
mov
out
(bad)
sub
xor
sub
cmps
pop
sar
inc
mov
fsubr
mov
cmp
jmp
pusha
inc
jmp
and
adc
inc
xor
stc
call
pop
iret
jmp
adc
and
test
pushf
gs
popa
int3
aas
ds
loope
adc
pushf
jb
cmp
sbb
cmp
rcr
dec
and
cwde
inc
fwait
or
ret
aas
(bad)
mov
shl
faddp
jo
xor
clc
int3
jge
adc
aam
or
pop
sub
lds
xor
cmp
mov
sub
js
mov
mov
nop
inc
adc
mov
or
aaa
(bad)
call
test
inc
add
and
clc
and
and
retf
aas
xor
ds
sub
pusha
jb
aas
dec
cld
rol
xchg
push
lahf
cwde
jns
popf
xor
inc
mov
push
(bad)
sub
mov
in
test
retf
setl
or
add
add
stc
add
or
inc
sub
add
add
add
add
or
mov
rol
mov
ret
xchg
scas
or
pop
xchg
and
clc
mov
inc
ret
lods
or
inc
sbb
int3
add
or
xor
and
xchg
test
fcom
(bad)
iret
leave
pop
popa
add
sub
lock
adc
jmp
out
and
repnz
mov
jge
cmp
and
test
inc
adc
and
(bad)
or
mov
sbb
cli
aaa
test
dec
cmp
inc
or
push
cmps
in
inc
sub
adc
add
cld
dec
shl
lea
jnp
inc
inc
imul
out
lahf
aaa
outs
pop
scas
or
inc
mov
inc
popa
xor
adc
xor
xchg
sub
mov
or
push
or
inc
loopne
outs
iret
sahf
or
fsubr
nop
mov
loopne
sub
mov
push
clc
pop
test
icebp
ds
sbb
mov
test
adc
add
ss
xor
mov
sub
push
lock
adc
inc
or
adc
xchg
xor
aas
in
fsub
nop
xor
arpl
or
push
pop
pop
jne
push
cmp
or
xor
xor
jne
dec
pop
add
mov
adc
push
les
fucom
and
cmp
mov
ss
test
pcmpeqb
jno
add
sbb
nop
inc
or
iret
add
sbb
rol
mov
clc
sbb
xchg
sbb
or
int3
mov
inc
push
ds
mov
add
or
or
or
popa
and
jmp
inc
cmps
push
push
push
or
push
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
mov
add
pop
ret
xchg
and
in
lock
les
jmp
(bad)
(bad)
adc
mov
push
add
loope
xchg
hlt
dec
fidivr
inc
enter
test
jmp
js
and
cwde
add
out
xor
add
mov
(bad)
into
push
test
mov
mov
xor
fisub
dec
jb
fadd
mov
into
fcmovbe
ret
xchg
pop
loopne
bound
adc
jg
add
adc
inc
(bad)
push
push
(bad)
f2xm1
icebp
sub
sbb
cmp
repz
aas
(bad)
(bad)
stc
mov
and
out
std
fwait
mov
dec
xchg
scas
or
js
lahf
mov
add
pop
nop
out
inc
mov
test
adc
xchg
idiv
push
retf
shr
fmul
call
inc
lock
jg
les
adc
in
lahf
ds
sub
rsqrtps
mov
jecxz
jnp
dec
adc
aas
xor
cmp
pusha
inc
and
fadd
adc
push
lahf
or
and
or
ret
jb
rcl
popa
jl
push
push
call
mov
retf
setl
or
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
and
inc
cwde
loope
ret
sbb
and
xchg
push
lock
or
lds
push
adc
pusha
call
mov
inc
test
cli
daa
loopne
enter
jle
aaa
add
adc
and
push
popa
retf
dec
pusha
ror
fcom
adc
fdiv
mov
xchg
mov
into
cmp
ret
fwait
mov
xor
xor
adc
xor
xchg
sub
pop
int3
inc
ss
pop
fidivr
imul
in
fnstenv
adc
iret
sub
or
sub
gs
sbb
or
cld
pop
push
or
addr16
jb
mov
jg
pop
adc
fdivr
fnclex
int
or
pop
sub
lock
jne
(bad)
mov
sbb
or
gs
shl
sbb
pop
mov
or
add
int3
mov
cmp
or
push
or
(bad)
fadd
fistp
adc
sar
test
enter
jo
or
cmp
or
sbb
and
dec
xor
or
clc
pusha
cwde
loope
adc
mov
ja
inc
sbb
mov
push
or
push
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
and
add
add
add
dec
add
sub
add
add
popa
xor
sbb
adc
add
sub
add
sti
sub
add
inc
cmp
popa
cmp
xor
idiv
add
cmc
dec
sti
mov
cld
ror
(bad)
(bad)
mov
out
mov
xchg
bound
mov
add
mov
(bad)
(bad)
xlat
std
ret
add
leave
lods
(bad)
jmp
out
add
sbb
mov
jbe
(bad)
cld
xchg
in
add
fld
mov
sbb
inc
(bad)
out
fsub
(bad)
in
add
jmp
movs
gs
cmps
add
jl
popa
popa
imul
add
cmc
mov
cld
test
xor
(bad)
dec
int
enter
mov
(bad)
repnz
push
jmp
daa
loope
add
aad
(bad)
fiadd
(bad)
(bad)
lock
jb
mov
(bad)
cmc
add
cli
(bad)
dec
sbb
iret
add
add
jmp
add
call
stc
test
leave
xchg
add
sti
cmp
fxch
int
xchg
call
les
lods
add
in
repnz
(bad)
lea
add
jecxz
or
fdiv
fldcw
pushf
stc
mov
aad
jmp
int3
ret
or
in
or
mov
mul
(bad)
in
lock
hlt
hlt
repnz
xor
ret
adc
cmps
jge
call
adc
retf
or
shl
mov
lds
sub
cs
stos
mov
adc
mov
pop
xlat
xlat
(bad)
(bad)
call
mov
std
call
mov
cld
call
xchg
(bad)
cmps
push
ret
mov
inc
lock
add
fsubr
retf
and
pop
adc
(bad)
clc
stos
cwde
pop
out
sbb
mov
(bad)
fisttp
cwde
push
(bad)
fadd
call
add
xchg
mov
(bad)
in
retf
xor
xor
loop
(bad)
fld
(bad)
rol
cld
mov
push
or
jmp
lods
test
les
retf
rcl
clc
repnz
movs
add
stos
xchg
(bad)
stc
or
push
cmc
mov
les
out
mov
aas
xor
jecxz
jmp
sub
out
shl
(bad)
fcomp
jecxz
adc
mov
lods
popf
cmp
out
add
or
mov
not
or
sti
std
cmc
test
clc
idiv
icebp
out
icebp
push
push
sti
std
cli
cmc
aam
ffree
cdq
loopne
in
lahf
or
fiadd
clc
in
hlt
fild
icebp
in
aam
adc
fmul
pushf
xchg
push
stc
jmp
lods
inc
inc
dec
clc
in
ds
cli
in
add
cli
idiv
stos
push
sbb
or
xchg
or
test
mov
sbb
rol
rol
loop
dec
js
jle
mov
(bad)
xlat
add
and
loope
in
jmp
fbld
jmp
mov
jmp
and
or
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
push
add
add
add
add
add
add
inc
std
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
pushf
cmp
xor
inc
scas
cdq
push
(bad)
retf
push
rcr
pop
rcr
xchg
das
and
dec
adc
pusha
ret
adc
add
pop
mov
(bad)
loope
test
sbb
pop
dec
push
xlat
xchg
sbb
mov
adc
das
push
fcomp
pop
push
dec
xchg
jno
inc
sub
push
pop
and
pop
inc
inc
js
loopne
fiadd
movaps
arpl
and
test
sub
add
mov
fs
test
dec
mov
inc
sbb
or
xchg
push
push
xor
out
add
cmp
cmp
push
adc
aaa
arpl
mov
jae
into
popf
imul
mov
jp
xchg
lds
inc
or
fdivr
adc
ret
sbb
rcr
pop
aas
mov
jge
push
xor
mov
or
mov
push
add
inc
jp
inc
xchg
cdq
pop
pinsrw
cdq
and
add
and
push
pop
jns
pusha
inc
or
ss
and
ret
mov
lods
pop
or
jl
add
les
xor
mov
unpcklps
ins
js
or
and
dec
cwde
push
loop
mov
sub
xchg
push
je
or
xchg
inc
add
in
pop
inc
(bad)
mov
pop
add
sbb
push
adc
xor
test
inc
pushf
fadd
push
and
ror
add
adc
xor
pop
add
inc
mov
ja
dec
mov
xor
add
or
pop
add
mov
or
clc
fist
or
lahf
xchg
push
adc
push
rol
dec
xor
or
loopne
nop
mov
mov
popf
adc
inc
cmps
sbb
add
cmp
test
pop
es
sbb
hlt
mov
add
ret
or
and
inc
mov
or
sbb
sbb
iret
enter
xchg
add
inc
sbb
mov
shl
lods
ds
push
xor
out
xor
bound
ja
mov
and
adc
sub
ds
jo
mov
jl
adc
mov
push
push
leave
push
inc
add
les
rol
or
inc
sub
das
stc
adc
pop
nop
mov
inc
lahf
jge
test
inc
and
rol
mov
dec
push
or
sbb
pop
xor
pop
mov
mov
mov
add
inc
pop
stc
and
or
xor
ss
dec
adc
lahf
aas
ins
xor
or
pop
cld
mov
lods
(bad)
and
cld
inc
sbb
dec
and
add
mov
add
sub
mov
mov
or
adc
ror
add
adc
nop
adc
jecxz
cmp
rol
je
test
rol
mov
icebp
dec
rol
jp
cmp
push
or
call
add
push
pusha
xor
inc
push
or
xor
iret
jl
dec
add
pop
sub
or
xor
cmps
ins
dec
js
mov
dec
mov
or
or
bound
jnp
add
ss
or
out
ret
adc
mov
test
dec
loopne
adc
push
imul
cmp
inc
loopne
xor
add
or
sbb
adc
push
xchg
imul
sete
sub
jl
cmp
xchg
add
cmp
hlt
xor
add
adc
sub
popa
jb
xor
add
or
sbb
xor
mov
call
ret
add
call
jg
mov
movs
sub
dec
add
rcr
xor
loope
mov
arpl
add
or
mov
and
mov
xchg
push
andps
popa
in
adc
mov
inc
or
test
pop
add
clts
adc
push
sbb
dec
ins
(bad)
inc
and
inc
(bad)
ss
jno
outs
mov
movs
and
fadd
add
adc
sub
sbb
lock
xor
xchg
lea
xchg
sbb
cmp
or
fs
add
bound
mov
stos
xor
and
sbb
or
shl
retf
dec
xchg
sahf
xor
sub
rcr
dec
adc
or
mov
add
fdivr
fst
jne
and
and
add
es
rcl
pop
adc
icebp
adc
mov
push
mov
cwde
mov
and
jb
mov
or
push
or
xchg
jo
or
cmp
add
dec
inc
or
mov
dec
or
xor
mov
xor
in
and
inc
inc
cld
jecxz
or
add
adc
adc
pusha
inc
adc
add
xor
add
sub
xor
and
mov
xor
or
or
cmp
inc
(bad)
add
pusha
mov
or
lock
ret
cmp
popf
pop
mov
call
enter
nop
psrlq
addr16
pop
mov
rol
cmp
and
adc
add
add
nop
add
call
sbb
and
clc
sub
or
add
cmp
sbb
rcl
or
mov
js
inc
add
add
test
mov
or
and
adc
nop
pop
or
ret
jo
jo
imul
xor
push
movs
or
jb
add
inc
add
lods
or
cld
(bad)
sbb
add
push
inc
or
adc
xchg
repnz
inc
add
sub
stos
or
and
sbb
add
pop
jmp
inc
js
xor
inc
sub
adc
imul
push
dec
adc
dec
sbb
loope
cmp
jno
push
mov
or
aad
jbe
ret
js
and
push
enter
pop
ret
and
dec
dec
push
or
sbb
pop
or
adc
and
jb
sub
add
mov
test
repnz
in
ror
and
xchg
outs
sahf
adc
adc
adc
add
or
adc
mov
nop
add
inc
inc
push
mov
ret
xchg
lods
mov
and
leave
mov
sub
mov
adc
xor
mov
jo
sbb
adc
enter
retf
mov
add
lock
cmp
ins
sbb
and
loopne
ins
pop
pop
les
and
sub
out
jbe
bound
lock
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
pop
add
add
or
lock
add
mov
dec
pushf
cmp
inc
add
lock
ffreep
mov
inc
and
and
(bad)
pop
(bad)
icebp
pop
retf
mov
and
stc
mov
mov
or
cmp
mov
dec
inc
adc
scas
mov
std
sub
jmp
mov
jp
adc
push
aam
mov
sbb
xchg
xor
or
cs
pop
mov
inc
mov
or
jb
mov
es
adc
sahf
push
hlt
cld
ja
mov
sub
enter
inc
push
adc
or
std
call
sub
or
repz
and
cwde
xor
cmp
mov
pop
jb
(bad)
bound
sbb
mov
xor
cmps
or
nop
inc
aam
push
sub
add
loop
push
pop
jmp
dec
inc
dec
push
call
jne
lock
mov
jmp
adc
loope
retfw
or
xchg
shl
push
sbb
push
inc
sub
or
add
outs
mov
inc
fcom
cmp
pop
xchg
add
dec
or
mov
arpl
inc
mov
xor
arpl
rol
or
aas
movs
mov
in
or
aas
dec
cmp
iret
cmp
add
cdq
aas
push
cli
xor
add
or
gs
push
push
push
and
xchg
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
xor
and
add
inc
dec
sbb
mov
rol
outs
push
nop
test
and
call
cmp
cmp
pusha
loop
add
jno
mov
call
cmp
xchg
and
and
inc
xchg
fmul
(bad)
and
adc
mov
popa
int3
cwde
retf
inc
mov
ret
fisttp
loope
imul
int3
add
push
jmp
aaa
pop
xchg
enter
add
xor
ret
or
shl
cmp
(bad)
dec
test
add
sub
add
inc
(bad)
loopne
lods
sub
clc
addr16
cdq
gs
xor
movs
add
mov
cmp
mov
sar
(bad)
out
rcr
call
mov
fistp
fisttp
mov
xor
retf
adc
ror
je
pop
add
cmp
movs
sahf
jg
mov
add
dec
lock
imul
icebp
push
sar
xor
aaa
test
push
push
sbb
retf
and
adc
aas
or
mov
mov
inc
rcr
sbb
ret
aas
dec
cmp
smsw
pop
in
xchg
inc
cmp
adc
mov
or
adc
popf
adc
pop
int
jecxz
add
ins
loope
add
dec
icebp
xchg
sbb
cmp
es
sbb
loope
sub
add
fs
add
leave
inc
or
dec
lock
xor
cmp
imul
inc
pop
and
lock
outs
retf
pop
add
adc
enter
add
es
or
sbb
aas
sahf
push
in
xchg
mov
shl
or
add
pop
sub
ret
stos
push
movs
mov
bound
retf
loopne
sub
or
sub
adc
add
adc
sbb
xchg
add
xor
call
sbb
add
adc
ror
push
xchg
push
dec
sub
adc
inc
inc
xor
sub
xchg
inc
add
loopne
ret
push
retf
mov
add
sbb
sbb
call
mov
inc
retf
add
adc
daa
in
cmp
pop
push
add
xor
jl
xor
jo
or
pop
adc
add
dec
add
inc
and
enter
nop
pop
or
loope
adc
push
inc
(bad)
fwait
aas
arpl
push
test
inc
fldcw
adc
add
stc
add
or
inc
sub
add
add
das
add
or
add
or
mov
inc
add
mov
ret
adc
add
pop
fadd
sub
pop
popa
sbb
ror
and
add
bound
les
xchg
xor
cli
fwait
or
mov
pop
xor
or
jmp
mov
inc
std
cld
jns
call
mov
push
or
mov
pop
jge
jo
adc
adc
sbb
mov
push
pop
adc
adc
cmps
mov
jo
rol
fnop
adc
mov
jl
stos
and
mov
jbe
fmul
nop
stc
xor
xor
jne
add
push
popa
out
xchg
jo
mov
inc
sbb
(bad)
ins
push
mov
mov
or
or
outs
or
add
xchg
imul
add
loop
nop
and
loope
js
sbb
and
ror
out
les
jbe
lds
les
int3
mov
add
or
mov
iret
jb
dec
les
xchg
add
cs
inc
or
adc
sbb
mov
sub
fild
mov
dec
sub
or
inc
loopne
aaa
loop
push
jbe
pop
cmp
xor
and
push
call
and
ror
or
mov
inc
ins
pop
in
aas
jp
add
inc
test
adc
fiadd
or
xchg
pusha
xor
push
pop
xor
sbb
adc
add
dec
call
ins
stc
(bad)
pop
and
xlat
in
bound
sub
pop
aaa
rol
adc
add
movs
sbb
xor
pop
sub
pop
int3
rol
jmp
xchg
mov
pop
dec
inc
add
shl
inc
rcr
pop
dec
sub
rcr
push
xchg
push
jmp
xor
or
push
cmp
sub
xchg
dec
push
es
add
jne
mov
jecxz
adc
add
bound
xor
xor
iret
sub
into
add
and
xchg
inc
adc
add
mov
xor
bound
ins
retf
sbb
and
jno
adc
ror
push
jne
sbb
or
xor
rol
jns
mov
push
push
call
lea
sbb
icebp
fmul
jmp
add
add
xor
xor
mov
add
push
inc
inc
enter
arpl
hlt
aas
lods
mov
nop
adc
xor
xor
xchg
inc
ret
sub
sub
and
and
push
inc
std
shl
sbb
push
or
aad
jae
push
enter
retf
lea
es
lods
das
es
into
adc
mov
hlt
inc
push
sub
popa
adc
sbb
add
fld
jmp
mov
mov
mov
or
dec
add
and
inc
outs
pop
pop
inc
xor
mov
xchg
cwde
pop
cmp
(bad)
fadd
add
inc
dec
mov
add
cmp
inc
add
js
and
add
add
adc
xor
dec
nop
xchg
movs
push
adc
sbb
xor
ss
sbb
or
inc
and
or
dec
adc
add
loope
and
adc
jecxz
push
cmp
inc
push
loope
push
dec
add
je
mov
pop
inc
and
ret
jae
dec
mov
inc
push
jne
dec
mov
ret
sbb
mov
xchg
test
add
mov
mov
aam
vmwrite
and
xor
xchg
xor
and
adc
and
dec
or
inc
mov
daa
pop
xor
adc
jecxz
out
inc
adc
or
movs
mov
push
add
and
pop
in
ror
and
xor
and
dec
pop
and
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
call
femms
add
mov
mov
sbb
mov
or
popa
fcom
sub
popa
clc
push
jns
cmps
loop
mov
push
shl
ss
and
mov
add
stos
jg
xchg
jmp
jnp
inc
mov
cmp
or
mov
call
(bad)
js
adc
je
les
sbb
clc
xor
lahf
inc
push
push
pusha
xor
fild
add
pusha
test
sub
cld
jbe
add
inc
loop
std
inc
mov
add
or
dec
fistp
pop
rol
clc
push
pusha
dec
xchg
mov
cmp
movs
xor
out
(bad)
or
out
xor
push
pushf
adc
and
add
in
movs
inc
rcl
ret
add
jno
or
xor
pop
mov
and
pusha
inc
push
mov
les
mov
les
cwde
inc
fadd
fisttp
jo
and
adc
add
sbb
sbb
lock
test
xor
fimul
push
xor
pop
mov
add
jg
inc
repnz
inc
(bad)
in
repz
daa
ins
mov
inc
and
inc
mov
ds
jo
leave
aas
inc
sub
and
les
rcl
push
push
jns
inc
popf
push
sub
adc
cmps
push
inc
inc
les
ds
adc
mov
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
scas
mov
push
pop
enter
adc
ss
addr16
shl
inc
xchg
cmp
lds
or
aas
(bad)
stos
and
sbb
adc
and
cli
les
fs
mov
das
sbb
les
and
xor
jecxz
inc
cmp
clc
ja
movs
rol
jb
sub
rol
pop
clc
or
aas
lahf
call
in
xchg
mov
dec
aam
dec
sbb
push
adc
into
mov
ja
or
leave
call
or
sub
sub
sti
out
dec
fiadd
jo
ficomp
xlat
out
lahf
mov
push
test
add
shl
sbb
cmp
cli
out
pop
cmp
lock
sbb
sub
out
lds
sahf
cdq
push
or
fs
cmp
into
mov
cmps
pop
xlat
mov
enter
scas
popa
xor
mov
xchg
in
xchg
pusha
div
xor
(bad)
adc
add
adc
sbb
add
or
adc
add
outs
cmp
push
movs
inc
dec
xchg
test
rcl
adc
add
or
inc
sub
add
add
or
add
or
lock
in
cmps
in
mov
pop
push
icebp
pop
or
adc
aaa
add
xor
retf
loopne
cmp
add
fcmovnbe
adc
push
(bad)
adc
in
loopne
pop
mov
jecxz
scas
pop
cmp
lods
jmp
and
test
cmp
enter
call
pop
push
rcr
aas
or
sub
imul
push
mov
pusha
std
xor
dec
xor
or
push
loopne
mov
adc
loopne
sbb
xchg
(bad)
push
fwait
add
cld
cmp
add
cld
or
sti
push
cs
cli
aaa
mov
pop
(bad)
push
add
sbb
xchg
push
inc
fucomi
adc
lods
aas
mov
or
mul
adc
push
lods
or
cdq
and
lods
clc
inc
imul
aas
cmp
dec
add
mov
push
jo
mov
adc
jnp
(bad)
movs
loopne
rol
mov
fsub
jg
js
test
imul
or
pop
dec
mov
in
xor
sbb
(bad)
gs
js
dec
or
add
or
pop
jno
and
push
je
cmp
(bad)
xor
rcl
je
or
cmp
sub
loop
inc
pop
or
arpl
in
dec
push
pop
or
nop
mov
dec
inc
add
stc
add
or
inc
sub
add
add
or
add
or
lock
aas
jg
adc
cmp
shl
inc
xchg
add
sbb
xchg
sbb
pop
jne
mov
adc
scas
push
add
sub
lea
sub
adc
dec
test
sub
call
pop
or
ds
mov
jo
nop
xor
adc
sbb
movs
out
jg
cwde
push
adc
adc
test
mov
loopne
add
nop
and
into
shr
stos
or
xchg
add
fistp
or
(bad)
fidivr
or
loope
jb
jmp
sub
dec
push
and
ja
int
cmc
out
and
in
or
push
push
jo
inc
hlt
pop
sub
mov
dec
inc
push
or
iret
push
in
jmp
mov
and
dec
enter
test
mov
pop
xlat
mov
pop
mov
fild
inc
adc
jns
pop
nop
test
ret
xor
add
icebp
sti
lds
or
pop
inc
stos
dec
test
lock
add
push
adc
test
ss
sbb
push
movs
xchg
dec
adc
inc
inc
or
add
stc
add
or
inc
sub
add
add
or
add
or
outs
rol
cmp
sub
leave
sbb
jg
int
imul
iret
lahf
test
or
out
xchg
test
push
xor
xchg
stos
pop
rol
outs
jmp
sub
mov
repz
lods
pop
jg
lods
xchg
jno
xlat
sub
arpl
nop
push
aam
clc
iret
ret
add
int
stc
addr16
add
call
xchg
and
daa
inc
adc
ret
clc
dec
lds
sbb
add
pop
pop
clc
xor
das
loope
and
or
mov
out
sbb
lock
out
mov
mov
bound
std
xchg
(bad)
popa
add
jo
push
adc
cmc
rcl
cli
adc
fnstsw
jg
fidivr
push
(bad)
mov
jmp
push
pushf
rcl
inc
clc
rol
inc
adc
dec
movs
hlt
mov
add
dec
adc
dec
sub
out
mov
fisttp
popa
imul
loopne
dec
(bad)
clc
jae
and
in
retf
jge
pop
xor
pop
pop
js
dec
or
pop
movlps
sub
xor
out
mov
add
add
sbb
add
loop
arpl
xor
aas
add
mov
sub
or
add
mov
or
pusha
in
nop
dec
xor
push
inc
add
stc
add
or
inc
sub
add
add
or
add
or
iret
fild
push
or
and
xor
or
push
inc
clc
lods
mov
push
pop
jne
mov
adc
mov
add
sub
lea
sub
adc
inc
add
shr
ret
or
sbb
jl
nop
add
add
or
addr16
inc
hlt
aaa
mov
push
xor
sub
inc
dec
push
in
push
cmp
inc
mov
jno
sahf
frstor
fs
stc
daa
aam
pushf
jg
out
lock
pusha
inc
push
and
test
retf
jg
add
jae
inc
cmps
or
mov
rcr
inc
fimul
cwde
div
aaa
ja
push
jo
shl
sub
inc
dec
jmp
push
or
iret
xchg
cwde
shr
stc
icebp
adc
xchg
rcl
and
mov
dec
enter
test
pop
stc
outs
add
push
mov
inc
push
adc
jp
jg
and
and
mov
aas
and
jmp
lods
cs
mov
xor
aas
dec
sub
or
inc
mov
inc
add
sub
push
inc
inc
jp
mov
sub
inc
add
add
stc
add
or
inc
sub
add
add
or
add
or
outs
rol
cmp
sub
leave
sbb
jg
int
imul
iret
lahf
test
or
out
xchg
test
push
xor
xchg
stos
pop
rol
outs
jmp
sub
mov
repz
lods
pop
jg
lods
xchg
jno
xlat
sub
arpl
nop
push
aam
clc
iret
ret
add
int
stc
addr16
add
call
xchg
and
daa
inc
adc
ret
clc
dec
lds
sbb
add
pop
pop
clc
xor
das
loope
and
or
mov
out
sbb
lock
out
mov
mov
bound
std
xchg
(bad)
popa
add
jo
push
adc
cmc
rcl
cli
adc
fnstsw
jg
fidivr
push
(bad)
mov
jmp
push
pushf
rcl
inc
clc
rol
inc
adc
dec
movs
hlt
adc
inc
and
dec
adc
dec
sub
out
mov
fisttp
popa
imul
loopne
dec
(bad)
clc
jae
and
in
retf
jge
pop
xor
pop
pop
js
dec
or
pop
movlps
sub
xor
out
mov
add
add
sbb
add
loop
pop
test
retf
mov
pop
and
jecxz
sbb
add
pop
push
in
add
add
stc
add
or
inc
sub
add
add
or
add
or
iret
fild
push
or
and
xor
or
push
inc
clc
lods
mov
push
pop
jne
mov
adc
mov
add
sub
lea
sub
adc
inc
add
shr
ret
or
sbb
jl
nop
add
add
or
addr16
inc
hlt
aaa
mov
push
xor
sub
inc
dec
push
in
push
cmp
inc
mov
jno
sahf
frstor
fs
stc
daa
aam
pushf
jg
out
lock
pusha
inc
push
and
test
retf
jg
add
jae
inc
cmps
or
mov
rcr
inc
fimul
cwde
div
aaa
ja
push
jo
shl
sub
inc
dec
jmp
push
or
iret
xchg
cwde
shr
stc
icebp
adc
xchg
rcl
and
mov
dec
enter
test
pop
stc
outs
add
push
mov
inc
inc
adc
jp
jg
and
and
mov
aas
and
jmp
lods
cs
xor
or
fld
add
mov
adc
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
mov
jmp
loopne
test
xchg
mov
pop
push
cmp
test
jl
cld
sbb
push
shl
ss
and
mov
jg
ds
in
imul
movs
pop
(bad)
cld
or
adc
inc
out
add
jno
and
add
adc
mov
cli
jecxz
push
les
rcr
xchg
mov
jbe
cmp
add
mov
out
test
pop
push
mov
or
lock
ins
icebp
or
outs
xchg
cmp
shl
mov
inc
pusha
add
and
test
add
ja
mov
sub
cmp
xchg
or
out
or
jmp
dec
adc
push
movs
inc
rcl
ret
add
adc
rcr
mov
out
fcomp
fnstcw
jl
cmps
aas
xor
test
cmp
cld
lahf
adc
(bad)
fnop
ret
jnp
and
dec
icebp
ret
nop
rcr
aas
(bad)
sbb
enter
xchg
add
lea
push
xor
pop
sbb
and
arpl
enter
ret
cmp
or
ret
add
les
or
add
push
push
fcom
retf
rol
nop
sub
adc
or
or
in
sbb
inc
test
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
call
add
mov
ret
adc
test
jo
rol
lock
mov
and
add
cs
rcl
aas
and
inc
les
daa
mov
inc
cmp
inc
inc
xchg
nop
dec
les
retf
shl
pop
xor
rol
push
call
jg
pop
js
imul
cwde
cmp
sbb
cmp
sub
pop
inc
xor
cli
shr
fidivr
stos
loopne
inc
add
stc
add
or
inc
sub
add
add
or
add
or
(bad)
ror
cmp
hlt
adc
pusha
mov
rcl
cmp
shl
dec
call
fild
inc
out
jp
jmp
sar
jb
jb
sub
and
jno
and
cs
and
cmp
push
sbb
mov
sub
pusha
ror
push
shl
mov
sub
aas
cmp
out
stos
lock
jg
sbb
lock
or
jg
adc
test
pop
cmp
pop
xchg
loop
pop
aam
adc
xor
mov
pop
out
xchg
mov
into
mov
(bad)
or
or
mov
push
inc
dec
js
pop
and
add
rcr
rcr
ja
sbb
jge
or
cmp
out
cli
add
pop
mov
leave
inc
test
aaa
ja
push
jo
lock
sub
pop
dec
push
pop
lea
popa
add
mov
ss
aad
lock
dec
jle
lds
fisttp
shl
add
push
push
and
ror
ror
je
test
push
xor
cmp
xor
sub
les
loope
call
icebp
mov
mov
mov
lock
inc
dec
sbb
pop
xchg
jecxz
jns
and
inc
cmp
mov
sub
dec
ss
jmp
add
and
add
or
inc
sub
add
add
or
add
or
scas
mov
push
pop
dec
shl
aas
test
and
mov
pusha
lds
shr
push
sbb
in
cwde
mov
jbe
xchg
mov
push
les
std
push
xor
hlt
sbb
adc
sub
sbb
pop
mov
pop
mov
pusha
sub
xchg
mov
sbb
sbb
add
adc
mov
push
push
ss
xor
sbb
sbb
aam
mov
xchg
(bad)
lahf
cmp
mov
inc
dec
or
std
mov
mov
lods
aas
mov
rcl
mov
adc
and
(bad)
sub
or
rcr
mov
cmp
and
pop
mov
jmp
dec
out
cwde
xor
xor
sbb
scas
fnsave
or
shr
data16
sub
jb
outs
cmp
push
dec
xchg
mov
and
pop
rol
cld
ret
fdiv
and
xchg
les
fs
iret
sub
or
sar
dec
icebp
fistp
or
xor
inc
sbb
xor
xor
xor
add
add
or
inc
sub
add
add
or
add
or
or
push
add
or
sar
outs
into
add
shl
add
lods
cmp
int3
lods
mov
or
push
add
push
retf
(bad)
lods
loop
inc
mov
xor
and
adc
fistp
mov
mov
and
rcr
rcr
sub
aas
cmp
add
mov
xchg
xlat
sub
xchg
sub
sbb
(bad)
repz
iret
sub
push
hlt
xchg
icebp
mov
cmp
push
in
inc
nop
pcmpgtw
rep
adc
adc
cmp
push
adc
jmp
sub
add
std
mov
xchg
adc
sub
mov
int3
fstp
mov
pop
jg
adc
shr
inc
xor
int
xchg
adc
dec
mov
xchg
sbb
sub
(bad)
shl
pop
and
pop
cmp
sbb
(bad)
cmps
cmp
jmp
adc
mov
icebp
cmp
jno
retf
xor
inc
jge
hlt
retf
xor
or
call
add
mov
das
mov
mov
arpl
inc
add
js
call
movs
repnz
adc
popa
cmps
and
ds
inc
xchg
call
nop
push
icebp
cdq
and
xchg
prefetch
push
inc
add
stc
add
or
inc
sub
add
add
or
add
or
scas
mov
push
pop
dec
adc
aas
test
adc
sbb
mov
ds
push
jns
mov
shr
pop
pop
fisub
mov
inc
sbb
imul
sbb
call
mov
shl
or
mov
xor
mov
popf
inc
or
in
fadd
cwde
inc
test
(bad)
xor
xchg
add
xchg
out
test
out
pusha
shl
push
push
push
mov
dec
loopne
sub
sbb
mov
rcl
add
je
rol
add
dec
mov
pop
lods
pop
sbb
adc
dec
push
pushf
adc
rcr
pop
test
push
and
jmp
(bad)
aad
in
outs
inc
sbb
dec
movs
les
xchg
pop
and
or
push
add
mov
loopne
in
or
adc
sar
ja
inc
and
push
scas
movs
xchg
pop
mov
xchg
scas
ret
jl
xor
or
repz
in
jnp
mov
mov
pop
mov
or
pop
inc
les
adc
xchg
fbld
lock
or
jb
mov
add
in
add
cmp
out
add
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
call
femms
add
mov
mov
sbb
mov
or
popa
fcom
stos
jg
clc
cld
jnp
cmps
loop
mov
push
shl
ss
and
mov
sahf
sub
ds
and
call
out
or
sub
push
add
rol
cmp
clc
addr16
test
mov
loopne
cmp
cld
mov
cmp
int
cmp
add
inc
out
cwde
add
dec
mov
popf
repz
bound
pop
mov
sub
inc
pushf
xor
inc
and
rol
stc
aaa
ret
(bad)
pop
lds
(bad)
stc
jnp
mov
gs
or
and
add
or
inc
sub
add
add
add
add
or
scas
mov
push
pop
enter
adc
ss
addr16
shl
inc
xchg
cmp
lds
or
aas
(bad)
stos
and
sbb
adc
and
cli
les
fs
mov
das
sbb
les
and
xor
jecxz
inc
cmp
clc
ja
movs
rol
jb
sub
rol
pop
clc
or
aas
lahf
call
in
xchg
mov
dec
aam
dec
sbb
push
adc
into
mov
ja
or
leave
call
or
sub
sub
sti
out
dec
fiadd
jo
ficomp
xlat
out
lahf
mov
push
test
add
shl
sbb
cmp
cli
out
pop
cmp
lock
sbb
sub
out
lds
sahf
cdq
push
or
fs
cmp
into
mov
cmps
pop
xlat
mov
enter
scas
popa
xor
mov
xchg
in
xchg
pusha
div
xor
(bad)
adc
add
adc
or
adc
add
jmp
mov
and
mov
and
add
or
inc
sub
add
add
or
add
or
outs
rol
cmp
sub
leave
sbb
jg
int
imul
iret
lahf
test
or
out
xchg
test
push
xor
xchg
stos
pop
rol
outs
jmp
sub
mov
repz
lods
pop
jg
lods
xchg
jno
xlat
sub
arpl
nop
push
aam
clc
iret
ret
add
int
stc
addr16
add
call
xchg
and
daa
inc
adc
ret
clc
dec
lds
sbb
add
pop
pop
clc
xor
das
loope
and
or
mov
out
sbb
lock
out
mov
mov
bound
std
xchg
(bad)
popa
add
jo
push
adc
cmc
rcl
cli
adc
fnstsw
jg
fidivr
push
(bad)
mov
jmp
push
pushf
rcl
inc
clc
rol
inc
adc
dec
movs
hlt
test
add
dec
adc
dec
sub
out
mov
fisttp
popa
imul
loopne
dec
(bad)
clc
jae
and
in
retf
jge
pop
xor
pop
pop
js
dec
or
pop
movlps
sub
xor
out
mov
add
add
sbb
add
mov
retf
mov
adc
adc
or
ror
stc
adc
add
and
add
add
rol
rol
rol
or
lgdtd
jb
add
add
add
popa
xor
sbb
adc
add
jb
add
add
jb
add
inc
cmp
popa
xor
xor
idiv
add
test
leave
test
mov
imul
in
fcmovbe
mov
push
fild
sbb
stc
xchg
addr16
out
xchg
fucomi
icebp
jmp
in
cwde
push
add
add
push
movs
gs
add
into
iret
mov
cld
clc
in
mov
nop
std
out
dec
aad
out
mov
add
ror
cdq
add
mov
(bad)
call
in
idiv
mov
mov
jmp
mov
scas
(bad)
cmc
jns
(bad)
call
(bad)
std
retf
add
fucomi
aam
xchg
mov
movs
js
mov
add
xchg
add
out
jmp
xchg
sub
daa
dec
fstp
retf
in
mov
sti
and
xchg
add
int
std
fld
and
(bad)
in
sbb
add
mov
cld
ficomp
and
fcmovu
ficom
retf
enter
jbe
iret
mov
sahf
xchg
xchg
lea
(bad)
int3
fimul
iret
mov
sub
mov
(bad)
test
fnstcw
xchg
add
jecxz
fiadd
int
retf
retf
clc
out
sti
ror
in
test
enter
xchg
push
hlt
xchg
pop
adc
fldenv
mov
mov
dec
es
mov
cdq
mov
clc
jmp
mov
out
sub
(bad)
adc
stc
(bad)
adc
outs
push
(bad)
jmp
enter
jnp
leave
fxch
(bad)
(bad)
cmp
test
(bad)
mov
imul
out
call
cli
mov
fwait
mov
lods
mov
fcmovne
fadd
test
pop
mov
push
jns
retf
jmp
adc
mov
repz
out
call
mov
mov
in
(bad)
adc
adc
fidiv
add
lods
adc
pop
lods
test
int3
xchg
adc
mov
mov
pop
into
pushf
sub
out
call
add
mov
mov
mov
loopne
lahf
dec
test
cmp
clc
push
sbb
lods
add
out
add
out
push
call
add
mov
dec
add
movs
add
mov
inc
(bad)
dec
(bad)
push
div
div
mov
(bad)
out
or
(bad)
(bad)
inc
or
test
idiv
imul
call
or
mov
cmc
fiadd
dec
or
mov
jmp
or
mov
not
add
out
push
test
jmp
icebp
into
add
lods
adc
fimul
not
or
test
mov
xlat
popf
or
in
imul
adc
lods
or
mov
jae
cmp
es
imul
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
xor
add
inc
std
or
mov
rol
mov
ret
xchg
dec
mov
sbb
and
mov
or
lods
mov
push
add
xor
enter
or
test
cmp
dec
stos
sbb
pusha
int3
dec
xchg
loopne
add
add
xor
mov
in
xchg
mov
push
pop
int3
sbb
push
scas
add
push
int
xor
call
xor
bound
mov
inc
mov
stos
pop
scas
fmul
fbld
shr
jbe
mov
stos
ss
out
pop
mov
jmp
cdq
mov
push
les
and
in
pop
mov
(bad)
push
aas
ss
and
add
mov
adc
aam
imul
aam
xchg
(bad)
repz
ret
not
cwde
push
pushf
and
ret
push
xor
test
or
mov
cmp
rcr
fisubr
mov
sub
push
or
xor
push
rol
and
inc
imul
mov
add
loopne
adc
sbb
rcl
adc
xor
lea
adc
push
jno
cmp
(bad)
push
push
pop
loopne
mov
sub
lea
adc
inc
sbb
push
inc
and
nop
in
ret
dec
add
push
inc
bswap
cmp
dec
add
mov
add
js
xor
xchg
cmp
mov
mov
push
add
dec
aam
add
add
mov
push
xchg
add
add
adc
ds
jmp
test
add
push
push
sbb
inc
mov
adc
pop
adc
mov
nop
dec
add
push
test
or
adc
test
mov
push
inc
imul
and
les
hlt
enter
test
or
push
aam
(bad)
mov
(bad)
xchg
xchg
sbb
adc
xchg
xchg
and
test
imul
loopne
inc
add
adc
or
adc
sbb
ret
push
pusha
pop
xor
or
lock
or
js
sub
and
rcl
aaa
ss
inc
cwde
aas
cmp
mov
dec
rol
and
ret
push
add
xchg
add
rcl
imul
addr16
dec
jno
add
in
test
jmp
and
rcl
xor
dec
cmp
dec
and
push
rol
js
pushf
repz
aaa
stos
dec
outs
adc
adc
add
add
inc
int3
add
and
or
add
rcl
pusha
jae
push
arpl
mov
mov
loopne
sbb
xor
mov
sub
test
inc
push
add
pop
nop
ret
push
or
inc
lea
push
xor
or
inc
ret
push
pop
push
dec
cmp
inc
add
nop
inc
or
push
cwde
xor
add
ins
mov
mov
add
xor
inc
sub
adc
in
(bad)
daa
setl
adc
dec
add
les
and
test
adc
sbb
rol
enter
cmp
loope
xor
or
sbb
cmp
out
addr16
rol
pop
fadd
int3
xor
xor
inc
sbb
dec
push
rcl
xor
adc
rcr
cmp
push
(bad)
out
and
or
cmp
or
popa
femms
pushf
loope
mov
ss
mov
mov
add
pop
mov
push
add
push
xor
inc
add
inc
add
hlt
mov
mov
out
jmp
add
xor
aaa
inc
dec
or
mov
test
stos
xchg
test
and
das
pusha
add
xor
add
xchg
inc
inc
xor
les
sbb
fidivr
push
or
inc
xchg
clc
outs
or
xor
ins
pushf
ret
pop
inc
sub
adc
ins
mov
imul
xor
xchg
sub
or
xchg
test
fadd
cmp
cmp
push
mov
sbb
xchg
jae
push
add
icebp
sbb
enter
push
xor
pusha
(bad)
push
push
xor
push
push
loopne
add
sbb
scas
pushf
inc
xchg
lds
sub
mov
mov
lods
in
cdq
pop
mov
pop
or
add
cmp
xchg
mov
movs
gs
enter
and
push
add
mov
push
dec
call
jo
rcr
mov
arpl
cdq
inc
add
sbb
xor
jno
(bad)
xor
or
imul
xchg
dec
les
add
add
mov
dec
jae
out
in
or
test
test
fwait
inc
add
pusha
adc
popa
add
add
loopne
push
mov
push
dec
fs
repnz
mov
sbb
ins
push
cmp
popa
or
lock
hlt
push
test
inc
inc
xor
and
pushf
test
jmp
jne
fdiv
dec
gs
xchg
push
push
adc
xor
add
adc
adc
imul
xor
pop
in
iret
mov
sbb
cmp
add
loopne
pop
ss
xchg
jl
inc
xchg
cmp
jbe
and
push
push
enter
add
(bad)
adc
jo
xor
jmp
fcos
jp
mov
mov
or
pusha
inc
adc
ror
jne
in
xor
movs
mov
inc
mov
lea
inc
pop
sbb
inc
push
add
js
sbb
mov
mov
int3
imul
popf
jp
inc
add
push
loopne
out
and
das
ficom
(bad)
jno
jb
lahf
pop
dec
jnp
sub
or
call
scas
(bad)
xlat
xchg
add
mov
(bad)
movs
or
ret
inc
mov
fld
imul
or
call
or
dec
mov
jmp
mov
ss
add
mov
jno
and
sbb
retf
sbb
enter
push
loopne
adc
mov
es
ret
retf
jb
sub
xchg
lock
leave
outs
xchg
add
pusha
add
xor
or
or
add
(bad)
rol
je
add
adc
rcl
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
or
sub
fadd
sbb
enter
sbb
mov
add
mov
outs
retf
add
cmp
xchg
push
mov
int3
mov
adc
xchg
(bad)
xor
icebp
mov
and
inc
xchg
cld
aaa
ror
mov
stc
jp
ror
cmps
jg
lock
adc
das
lea
sub
dec
cli
inc
inc
pusha
sbb
dec
gs
adc
movs
dec
sbb
daa
xchg
push
popf
add
jmp
xor
test
inc
stos
push
xchg
cmps
sub
cld
fcmovnb
call
or
add
daa
mov
and
xor
(bad)
sub
xchg
out
pop
adc
fisub
mov
fst
pusha
add
arpl
inc
or
pop
ja
mov
and
xor
and
jmp
rol
inc
push
push
push
and
mov
ret
and
mov
mov
cmp
push
div
bound
add
icebp
mov
push
or
mov
dec
loope
adc
in
xor
add
test
les
mov
repz
popf
inc
int
push
add
clc
jae
jle
push
sub
or
mov
ss
xor
and
add
xchg
bound
or
popa
push
add
rol
(bad)
pop
(bad)
clc
repz
xor
xor
mov
push
add
dec
mov
jl
xchg
dec
or
popa
aaa
add
jl
or
inc
sub
std
adc
add
popa
dec
cmp
push
adc
inc
or
sbb
(bad)
cmp
mov
aaa
shl
pop
cld
mov
cmps
or
lea
inc
call
sbb
push
rol
repz
and
push
stos
lahf
fucompp
add
jmp
xor
movs
mov
stos
in
inc
cmp
mov
sub
lods
scas
rcr
in
xor
push
in
mov
(bad)
out
mov
xor
xchg
fwait
sar
inc
add
add
stc
add
or
inc
sub
add
add
or
add
or
push
loopne
sub
xor
sub
xor
and
or
rol
bound
or
mov
xchg
cwde
or
icebp
pop
mov
js
in
rol
(bad)
dec
sub
mov
mov
and
xor
sub
pop
add
clc
repz
jae
xor
adc
mov
ror
popa
mov
or
enter
sbb
imul
inc
sub
lock
(bad)
mov
add
dec
lock
call
xor
push
out
mov
xor
xor
or
aas
add
clc
push
shr
push
or
jb
es
popf
jg
jmp
adc
(bad)
push
sbb
fld
rol
xchg
inc
or
sub
(bad)
jp
clc
aaa
rol
fcom
jmp
mov
xor
retf
or
inc
xor
add
shl
push
adc
cs
add
add
(bad)
clc
inc
ret
in
xor
push
es
push
adc
cmp
xchg
inc
push
cmp
xchg
or
aaa
sar
es
mov
adc
sbb
mov
shl
adc
add
or
pop
cwde
and
call
loopne
inc
das
cld
ret
inc
ja
sub
test
mov
pushf
pusha
lea
dec
inc
add
nop
or
push
adc
or
cmp
sub
arpl
add
int
adc
rcl
sbb
jo
cdq
(bad)
fmul
push
xchg
ins
jo
inc
sbb
aam
jecxz
aas
sub
xchg
or
arpl
pop
lahf
fadd
rcr
shl
aaa
add
xor
add
fs
add
cmp
nop
adc
adc
les
lds
push
xorps
sub
or
adc
dec
scas
mov
inc
jo
push
dec
add
lods
inc
(bad)
js
adc
add
xchg
stos
pop
aam
in
cmp
(bad)
jmp
scas
fist
add
aas
out
push
shl
vmovntps
inc
jmp
sbb
repz
ror
inc
lock
xchg
stos
inc
add
add
stc
add
or
inc
sub
add
add
or
add
or
jo
adc
pop
enter
and
dec
and
lods
pop
xor
add
inc
xor
(bad)
push
pusha
xor
mov
imul
xor
mov
dec
xchg
in
test
add
adc
rcl
add
push
pop
pusha
gs
pop
mov
arpl
and
or
cs
lea
test
mov
imul
pop
ret
cli
inc
adc
inc
ficomp
rdtsc
add
daa
gs
pushf
or
add
mov
or
or
adc
or
call
xchg
loope
aas
and
add
or
and
test
sbb
psrld
sub
push
mov
sbb
and
cwde
add
pop
hlt
sbb
lea
or
call
cdq
pusha
rol
sar
jmp
mov
ins
jns
and
xor
mov
xchg
adc
inc
cmp
and
adc
adc
mov
push
inc
xor
cwde
sub
and
fadd
and
xor
test
mov
xchg
inc
sbb
mov
add
xor
add
mov
sbb
mov
pop
dec
mov
mov
dec
or
xor
(bad)
sbb
adc
mov
add
test
add
mov
xor
add
or
lock
aas
push
pop
and
xchg
mov
enter
rcr
push
push
push
cld
mov
inc
jae
pusha
shr
loopne
lea
dec
cmp
adc
pushf
shl
adc
aas
stos
cmp
inc
ss
loopne
add
loopne
test
jnp
xor
cvtdq2ps
dec
loope
adc
sbb
sbb
add
cmp
and
push
cmp
jmp
mov
fsub
cdq
int
mov
nop
loop
xchg
sahf
dec
fdivr
(bad)
les
and
dec
inc
add
mov
psubusb
inc
xor
cmp
mov
and
add
or
sar
push
add
dec
mov
cmp
sub
add
inc
test
fstp
movs
inc
jg
inc
and
ss
shl
iret
adc
adc
push
inc
push
xor
test
and
inc
lock
sub
nop
ret
xor
or
aaa
dec
mov
or
cmp
fs
inc
fcomp
in
push
cmp
inc
xchg
push
push
add
jae
xor
sub
adc
int
into
cmp
jae
inc
push
mov
dec
std
(bad)
ficom
popa
cmp
in
scas
or
xor
jo
inc
nop
xor
cld
jecxz
inc
xor
xchg
les
pop
fs
fisub
xor
inc
jmp
aam
loopne
or
xchg
imul
sbb
cmp
or
inc
inc
inc
and
dec
push
loope
ins
adc
(bad)
pop
aam
call
in
mov
dec
lods
dec
in
(bad)
rcl
xor
xlat
mov
mov
inc
(bad)
(bad)
dec
dec
in
int3
mov
add
and
add
or
inc
sub
add
add
or
add
or
jo
sbb
add
push
popa
adc
dec
xchg
test
mov
aaa
test
jno
leave
lock
fdivrp
cmp
retf
xchg
or
retf
xchg
jg
adc
sub
inc
or
movs
ret
shr
mov
adc
ins
cmps
xor
mov
adc
pop
mov
mov
push
pop
sub
xor
les
adc
xor
leave
cwde
add
repz
or
test
dec
jns
mov
ror
dec
push
mov
dec
(bad)
loop
xchg
dec
call
aaa
xor
aas
or
pushf
pop
nop
out
mov
sbb
(bad)
cld
or
nop
rcl
arpl
outs
ins
push
push
call
fs
fiadd
xor
xor
add
(bad)
xor
loopne
nop
shr
not
nop
inc
inc
mov
mov
mov
loopne
mov
jnp
jecxz
add
push
sub
add
sahf
cld
dec
xchg
and
(bad)
xor
inc
lsl
or
cdq
sub
loope
arpl
in
rol
lock
inc
retf
add
dec
mov
adc
shl
dec
adc
and
dec
xor
dec
es
cld
inc
xchg
inc
loopne
les
and
loopne
mov
in
xor
and
xor
femms
addr16
repnz
sbb
loopne
mov
or
cs
mov
xchg
add
cld
call
lds
adc
or
mov
xor
jmp
dec
loopne
xchg
loopne
rol
es
pop
or
js
or
pop
(bad)
push
adc
and
mov
test
movs
mov
loopne
(bad)
adc
or
leave
push
or
pusha
(bad)
pop
sub
push
cld
icebp
pop
and
test
sbb
int
dec
pop
mov
ret
or
dec
dec
cmp
or
mov
ins
and
cld
or
(bad)
or
call
cmp
mov
(bad)
mov
mov
or
int3
adc
dec
sub
mov
mov
mov
pop
inc
mov
test
add
or
and
mov
sub
ret
cmps
inc
lock
aas
repz
inc
aaa
hlt
movntss
clc
mov
inc
add
mov
dec
adc
or
inc
xchg
dec
repnz
or
cld
push
jno
adc
aam
mov
dec
add
and
or
pusha
mov
mov
jecxz
int3
or
cmp
inc
push
dec
call
push
adc
cmovge
jbe
pop
xor
inc
(bad)
push
mov
push
hlt
fcomp
into
nop
mov
adc
aas
dec
adc
xor
nop
pop
shl
or
jp
ret
or
nop
xor
dec
nop
aas
add
fwait
dec
rol
or
add
into
jo
clc
fcomp
adc
or
test
cmp
cmp
pushf
stos
mov
(bad)
xor
fmulp
or
int
inc
mov
mov
or
add
movs
ret
cmp
or
loopne
(bad)
mov
into
aas
jns
inc
dec
loopne
inc
out
or
cmp
cmps
mov
das
adc
push
(bad)
dec
neg
sti
fwait
popf
out
popw
mov
shl
inc
sahf
mov
add
sahf
add
daa
nop
fidivr
fild
push
mov
sbb
adc
ror
add
stc
add
or
inc
sub
add
add
or
add
or
nop
pusha
test
test
retf
aas
or
sbb
or
and
nop
mov
jbe
mov
sbb
push
les
(bad)
or
and
loop
call
std
jmp
aas
cmp
jns
stc
out
inc
or
and
rep
xor
adc
pop
mov
inc
(bad)
cmp
or
xchg
inc
dec
push
push
cs
sti
xchg
or
imul
aad
sub
dec
adc
push
std
inc
gs
mov
lock
push
push
dec
stos
mov
sub
adc
stc
sti
cmps
dec
dec
pop
sub
and
enter
sbb
jb
in
stc
sysret
call
test
imul
sub
mov
shl
mov
imul
ret
int3
add
adc
bnd
push
or
xor
shl
shl
or
push
push
jne
mov
arpl
push
lahf
ret
pop
mov
bound
cmp
fadd
and
nop
cmp
iret
or
and
jo
jle
adc
les
jo
or
adc
add
or
bound
pop
cs
xor
rol
mov
inc
or
or
pop
push
sbb
mov
add
sub
sub
inc
jle
nop
and
mov
mov
mov
rol
inc
or
cmp
call
cmp
inc
mov
stos
mov
cmp
retf
push
inc
pop
loopne
and
inc
dec
inc
pop
dec
loope
add
daa
jp
adc
gs
pop
ds
lea
pop
hlt
sbb
or
add
adc
dec
xor
xchg
pusha
mov
aas
fnstcw
lock
invd
sub
pop
adc
out
(bad)
push
inc
sub
cmp
cmp
(bad)
outs
mov
inc
add
add
mov
xchg
idiv
int
neg
lds
push
inc
mov
loopne
cmp
icebp
dec
add
mov
sbb
mov
jb
add
or
ror
sbb
adc
and
lock
pop
push
pop
mov
mov
xor
adc
adc
xor
add
or
mov
inc
(bad)
std
mov
(bad)
jmp
mov
push
fisubr
inc
mov
int
and
adc
adc
add
aas
(bad)
fs
inc
and
ret
adc
(bad)
fiadd
xchg
popf
inc
inc
sub
pop
add
push
(bad)
and
inc
dec
rol
add
push
sbb
inc
les
iret
dec
pop
xchg
cli
(bad)
aaa
and
test
in
cmp
inc
sub
test
xor
movs
push
fbstp
repz
jmp
add
adc
ror
dec
ror
into
fmul
retf
sbb
and
xor
inc
lea
pop
je
inc
jne
pop
adc
jne
je
inc
(bad)
loopne
rcr
int3
xchg
pop
rol
cwde
int
aam
or
outs
inc
adc
retf
mov
sub
mov
movs
dec
cmp
popf
sar
xchg
jecxz
mov
adc
into
nop
xchg
std
inc
int
out
dec
fidivr
sti
fistp
enter
cmp
sbb
aas
add
inc
push
or
sbb
mov
pop
movs
and
and
and
dec
or
add
add
stc
add
or
inc
sub
add
add
or
add
or
jo
adc
pop
enter
sub
(bad)
sub
shl
xor
shl
shr
and
mov
or
sti
pop
(bad)
movs
inc
mov
push
pop
push
loop
jo
pop
push
adc
xor
lock
add
mov
stc
aaa
out
sub
std
stos
bound
lahf
dec
ins
cmp
mov
inc
nop
sub
push
add
sbb
pop
ins
sbb
and
xchg
and
dec
xor
mov
clc
aaa
xchg
mov
mov
aam
fcom
pop
arpl
inc
clc
fs
add
push
inc
adc
inc
sbb
repz
pusha
ror
xrelease
sbb
xor
inc
ss
mov
jle
ins
rol
add
adc
ret
ins
(bad)
mov
mov
call
and
movs
loope
ins
loope
xor
add
cwde
nop
(bad)
mov
or
nop
daa
(bad)
jno
or
sub
mov
add
jb
adc
push
movs
jo
aas
push
rcl
inc
arpl
sbb
(bad)
and
int
pop
mov
add
cld
xchg
adc
cmp
add
pop
icebp
inc
xor
inc
jecxz
adc
nop
pop
inc
and
inc
dec
ss
xor
ret
xor
and
dec
xor
pop
mov
push
loope
rcl
movlps
sbb
cmp
pop
mov
xor
jae
add
adc
arpl
and
add
nop
or
add
cmp
nop
sbb
in
or
xor
lea
add
pop
mov
shl
sbb
push
xchg
dec
xor
sbb
or
test
or
adc
mov
xchg
inc
jb
sbb
cmp
nop
xor
and
mov
and
pusha
add
mov
stos
jmp
fwait
pop
or
mov
int3
xor
gs
pop
push
mul
mov
jnp
inc
and
add
aas
pop
js
mov
add
add
sub
inc
jle
jbe
or
sub
cmp
mov
les
inc
sub
jp
mov
mov
inc
pop
hlt
cmp
add
dec
sub
(bad)
aas
jg
popa
aad
aas
and
fnstsw
pop
shl
(bad)
pop
aam
nop
aaa
sbb
aam
(bad)
or
cmp
nop
dec
add
in
adc
add
push
xor
xor
iret
add
sub
rol
dec
push
xor
movs
repz
rcr
mov
fdiv
inc
sbb
mov
rol
inc
lods
push
cmp
mov
std
pmaxub
int
xor
call
jl
adc
sbb
push
xor
test
push
xchg
xor
jecxz
dec
into
push
xor
or
aas
inc
xchg
inc
mov
stos
adc
push
add
xchg
adc
xor
jmp
sahf
or
jge
fs
inc
cmp
xor
dec
dec
out
push
fwait
adc
inc
leave
or
cmc
and
and
pop
shl
cmp
or
adc
add
(bad)
in
mov
or
push
stos
call
fadd
xchg
mov
add
aaa
mov
cmp
jno
and
jnp
int3
fidiv
es
and
add
or
inc
sub
add
add
or
add
or
push
and
add
mov
adc
dec
adc
es
mov
or
push
rcr
mov
xor
adc
push
add
mov
or
lods
mov
and
or
adc
test
das
dec
sbb
jg
sahf
adc
xchg
jg
fsub
cmp
iret
lds
or
sub
adc
and
test
add
in
sub
adc
jns
mov
cmovs
in
xor
aas
push
push
out
sub
mov
mov
xchg
stos
sbb
sub
adc
adc
addr16
js
lods
xchg
outs
and
jbe
js
and
sub
movs
push
mov
push
loopne
adc
and
mov
scas
out
mov
cmp
and
mov
sub
out
ja
jb
inc
and
bound
jp
pop
add
adc
shl
mov
nop
enter
out
inc
and
mov
adc
adc
add
dec
add
mov
adc
dec
dec
push
add
jns
(bad)
adc
cld
repz
inc
sub
and
call
xor
push
push
stos
cld
inc
inc
pop
cmps
and
fdiv
mov
icebp
retf
clc
xor
aas
dec
and
mov
and
mov
cmp
sbb
xor
adc
adc
add
add
sub
mov
pop
sub
sbb
add
xor
fdiv
inc
dec
inc
adc
pop
pushf
xor
sub
es
or
push
adc
and
cmp
or
pop
push
mov
ret
or
or
inc
fcom
sbb
or
or
or
shl
call
and
add
mov
leave
test
popa
xor
adc
mov
arpl
aas
test
in
cld
ror
inc
push
inc
or
pop
adc
test
mov
test
pushf
mov
adc
add
mov
inc
iret
push
jae
or
cmp
aas
adc
adc
popa
jae
dec
inc
or
dec
dec
push
adc
lock
xor
sbb
push
cmp
(bad)
lock
inc
(bad)
mov
movs
or
(bad)
ins
rcl
inc
sub
adc
dec
into
movs
xor
inc
retf
pusha
adc
mov
shl
into
(bad)
cld
pushf
xchg
inc
enter
cmp
sub
aaa
xor
cmp
fs
cmc
inc
sub
mov
cdq
add
ins
mov
or
or
jo
(bad)
xor
lea
push
cmp
xor
shr
cmp
dec
adc
xor
in
mov
or
xchg
xor
pop
sub
pushf
jns
inc
pinsrw
jmp
xchg
xchg
xor
lods
dec
mov
mov
fwait
sti
dec
nop
call
inc
movs
pop
dec
jl
les
stc
add
or
inc
sub
add
add
or
add
or
mov
inc
or
sub
fdivr
xchg
mov
sbb
mov
xchg
sbb
pop
sbb
add
(bad)
stc
aaa
push
fstp
les
push
inc
cwde
pop
mov
xor
loope
lea
mov
inc
fwait
dec
sbb
(bad)
out
cmp
sbb
arpl
(bad)
test
sbb
into
add
mov
push
or
cs
and
or
loopne
outs
dec
shl
int
je
nop
fnsave
xchg
pusha
or
adc
arpl
xchg
sub
(bad)
movs
sub
xchg
sbb
ret
mov
or
jl
fld
cmp
mov
repz
sub
mov
out
shl
pusha
loop
loopne
or
and
int3
add
jg
lods
mov
sbb
add
mov
pusha
pop
loope
cmp
in
xchg
cmp
push
retf
ror
add
xor
and
lds
jg
or
xor
rcr
fisttp
vpsrlq
push
sub
xchg
in
nop
lea
cmp
add
xor
aaa
or
xor
sbb
dec
mov
jae
or
xchg
pop
cmp
pop
shl
xor
pop
mov
push
lds
sti
jne
add
add
ja
and
dec
mov
sub
push
cld
jecxz
and
pop
arpl
add
invd
test
and
mov
rcr
cmp
or
push
mov
ret
push
push
and
xor
cmp
dec
add
adc
shl
inc
add
cli
icebp
and
dec
sbb
adc
adc
mov
js
nop
shr
push
ins
adc
sub
sbb
aas
(bad)
mov
mov
sbb
inc
xchg
add
lock
add
mov
and
retf
mov
inc
inc
inc
add
mov
in
xor
int
push
pop
sar
push
stos
cmps
test
hlt
inc
in
scas
sti
enter
stos
adc
or
add
mov
repnz
xor
adc
xor
xor
shl
and
push
adc
and
dec
mov
inc
or
push
int3
aas
aad
shl
lods
and
lock
aaa
(bad)
js
xchg
dec
(bad)
data16
psubusb
cmp
mov
int3
inc
or
add
or
or
sub
and
inc
inc
mov
xor
xor
add
retf
xchg
inc
add
pop
pop
hlt
inc
inc
sub
repnz
fisttp
repz
in
cld
retf
rcl
add
sar
(bad)
loopne
pop
rcr
inc
or
aaa
inc
adc
aaa
inc
frstor
pusha
inc
test
sub
mov
fnsave
test
or
jecxz
addr16
push
cmp
dec
test
or
or
rol
cs
lods
inc
in
inc
jne
push
xor
jmp
inc
mov
les
mov
fisub
les
bnd
jecxz
inc
sar
lahf
es
mov
dec
push
cmc
xchg
pop
add
and
add
or
inc
sub
add
add
sub
add
inc
dec
sbb
mov
rol
jmp
inc
js
and
dec
mov
jmp
pusha
mov
(bad)
push
mov
ret
call
mov
icebp
cmpps
sub
rsqrtps
cwde
push
pusha
ret
push
adc
dec
lods
xor
test
dec
sbb
mov
or
dec
dec
cmp
or
sub
popa
add
icebp
mov
or
ins
pop
mov
jg
or
fnstenv
mov
call
xchg
inc
and
lods
dec
cmp
and
pop
mov
loope
mov
aas
aas
inc
adc
add
retf
push
sub
adc
dec
movs
popa
push
cmp
xchg
jbe
inc
xchg
daa
jno
push
push
sbb
pop
test
push
inc
push
mov
mov
sub
mov
dec
sub
retf
add
adc
adc
xor
call
ss
aas
sti
(bad)
call
xchg
inc
shr
sysret
dec
xor
or
pop
dec
mov
xchg
sbb
sbb
adc
cmp
lds
lds
fadd
outs
dec
push
rol
sbb
adc
sub
test
and
les
sub
and
sub
nop
popf
pop
mov
inc
lea
push
jb
add
cmps
ret
or
pushf
add
mov
lea
(bad)
mov
je
mov
or
inc
xor
js
ret
sbb
inc
xor
or
and
add
test
pop
push
fsub
(bad)
xor
inc
dec
add
mov
or
repz
inc
adc
push
(bad)
pop
loopne
adc
or
dec
int3
jo
pop
and
ret
cdq
sub
(bad)
cmp
adc
sub
inc
js
add
add
mov
rol
pop
sbb
inc
pusha
inc
push
add
bswap
mov
rcr
ret
inc
rol
push
adc
add
outs
cmp
sbb
or
sub
xor
ret
cmp
lock
mov
aas
js
xor
inc
cmp
inc
aad
ror
or
add
xchg
retf
mov
inc
adc
retf
sub
push
int
push
inc
hlt
enter
jno
lds
adc
and
push
cmp
adc
ror
add
xchg
mov
sub
nop
mov
mov
inc
add
fs
mov
inc
pop
inc
fmul
inc
pop
or
cmp
je
xor
repz
jnp
adc
aas
dec
adc
(bad)
fdivr
mov
mov
push
jge
dec
push
or
ror
(bad)
or
ss
bound
mov
xor
or
or
inc
mov
sub
inc
in
add
mov
dec
inc
adc
add
xor
xchg
or
int3
out
mov
sahf
push
cmp
mov
int
jnp
int
xor
jns
outs
clc
(bad)
repz
lods
adc
jmp
iret
and
mov
out
push
xchg
sub
iret
aaa
out
mov
or
pop
fld
test
rol
push
add
repnz
mov
stc
add
or
inc
sub
add
add
or
add
or
nop
pusha
test
test
retf
aas
fs
xor
mov
adc
enter
or
std
adc
movs
dec
mov
and
rcr
mov
std
test
das
jg
pushf
les
bound
mov
sbb
inc
bound
rcl
sub
cmp
shr
andnps
adc
adc
jmp
outs
sbb
xor
mov
nop
cmp
jns
stos
(bad)
cli
rol
repnz
and
ds
xor
add
adc
mov
add
mov
(bad)
pop
mov
cmp
les
dec
mov
cmp
inc
aam
sbb
push
bound
inc
lock
dec
dec
or
retf
sahf
aas
sbb
pop
dec
mov
addr16
es
mov
nop
and
add
dec
push
pushf
lock
loop
aad
imul
sbb
xor
add
lods
push
mov
and
into
adc
fild
out
adc
pop
pop
stos
xor
lahf
pop
(bad)
jl
nop
add
adc
sub
test
std
std
daa
rol
inc
sbb
cmp
cmps
pop
adc
sub
and
shl
fadd
test
inc
cmp
xor
push
adc
mov
test
mov
mov
enter
fmul
mov
loopne
xor
in
push
jecxz
int
repz
arpl
mov
jo
jp
mov
lods
add
xchg
push
clc
mov
addr16
adc
cmp
inc
or
(bad)
sub
dec
imul
add
rcr
int
push
les
syscall
rcl
and
in
in
add
pusha
iret
add
cmp
push
inc
or
sub
push
ror
xor
add
mov
jo
je
push
test
dec
cmp
add
push
mov
bndldx
lock
sub
cmp
ret
rcr
nop
hlt
(bad)
or
adc
nop
in
adc
pop
mov
add
inc
ror
push
cwde
lock
push
push
push
inc
dec
push
int3
loope
adc
and
sub
das
dec
xor
sbb
cld
cmp
xor
xchg
in
mov
mov
push
adc
enter
jae
aaa
adc
adc
lahf
and
or
nop
xor
sbb
or
adc
call
or
adc
dec
inc
or
xchg
add
xor
xor
xchg
mov
and
enter
push
inc
(bad)
sar
dec
xor
xor
sub
xchg
aad
inc
les
nop
int3
adc
sub
dec
adc
and
aaa
jae
ss
pop
(bad)
jae
fcomp
or
or
aaa
inc
jmp
les
sbb
sbb
adc
jecxz
cdq
lods
mov
hlt
out
movs
arpl
iret
fidivr
and
call
aas
jmp
jl
jle
xor
js
nop
xor
into
mov
xchg
mov
(bad)
lock
inc
and
cmp
mov
das
pop
pop
push
in
test
fcomi
lods
jge
xor
xor
mul
adc
jl
add
add
stc
add
or
inc
sub
add
add
or
add
or
mov
inc
outs
pop
or
mov
or
cdq
ret
mov
pop
data16
sbb
mov
fist
sub
int3
and
sub
mov
xor
test
dec
fwait
inc
sub
xor
jo
and
pop
and
pop
jo
ror
fs
rol
xchg
sub
lods
imul
test
pusha
movs
cmp
dec
fcmovb
cmp
adc
mov
clc
addr16
and
or
pop
cld
jnp
int
mov
jnp
mov
inc
adc
pop
movs
nop
out
call
sub
ret
xabort
loopne
ror
sbb
or
push
aam
cmps
mov
sbb
or
pusha
jno
cmp
and
cmp
rep
int3
add
pop
(bad)
out
jecxz
shl
cmp
add
xchg
or
(bad)
mov
pushw
inc
or
test
cmp
or
or
xchg
loope
sub
mov
or
dec
or
jne
sbb
or
loop
push
add
add
jecxz
jg
sbb
dec
pushf
loope
add
cwde
add
nop
fsub
adc
pop
inc
nop
add
adc
push
inc
add
out
sub
push
(bad)
mov
and
popa
and
adc
xchg
add
and
and
aam
inc
stos
mov
ret
push
mov
add
adc
lds
push
js
dec
xor
ins
icebp
(bad)
cmp
(bad)
pop
sar
mov
test
push
cmp
xor
test
daa
cmp
imul
add
fs
add
xor
mov
xchg
imul
push
addr16
push
adc
and
cmp
enter
or
cdq
inc
das
rcl
pop
dec
(bad)
mov
add
xor
popa
rol
pop
mov
and
loopne
es
lods
push
jmp
mov
adc
or
push
xchg
mov
mov
xor
sub
mov
mov
ret
mov
push
add
iret
and
inc
aas
icebp
cmp
or
jecxz
inc
outs
xchg
jnp
shr
or
cdq
cmp
xor
test
out
in
inc
hlt
cld
push
mov
or
into
sub
iret
xor
mov
sar
adc
xor
(bad)
(bad)
mov
mov
nop
xor
arpl
or
or
add
pop
push
cmp
in
aas
sbb
(bad)
int
add
jl
sar
or
and
enter
rcl
cs
rol
inc
push
xor
outs
dec
hlt
inc
adc
test
inc
inc
or
pop
or
or
test
adc
les
sbb
adc
or
pop
sub
jno
fdiv
je
xor
sbb
dec
fstp
fldcw
int
sbb
cmp
retf
repz
arpl
aam
movs
sub
shl
push
(bad)
xchg
push
xor
pop
mov
mov
sti
dec
xor
sti
in
add
je
out
add
inc
inc
mov
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
ins
mov
dec
mov
inc
nop
or
or
push
in
loopne
pop
push
dec
push
cld
pop
inc
mov
sub
dec
int3
xor
scas
aam
fsubr
retf
push
sub
(bad)
icebp
mov
adc
cld
mul
ins
sar
push
xchg
ss
inc
das
push
sub
mov
int
aas
jg
jo
push
adc
loop
dec
arpl
test
icebp
add
adc
xchg
jbe
jbe
xchg
xor
femms
paddb
xor
add
cwde
nop
hlt
les
dec
ret
jno
add
sub
adc
imul
repnz
cwde
shl
xchg
fstp
ret
or
jg
(bad)
and
mov
adc
add
push
pusha
add
(bad)
and
cwde
retf
adc
adc
lds
(bad)
clc
xchg
pusha
call
outs
dec
adc
ins
retf
cwde
sub
sbb
push
sub
and
xor
inc
clc
add
aam
dec
pop
add
dec
icebp
fnstsw
pop
sbb
mov
and
ror
mov
adc
(bad)
sbb
xor
(bad)
push
add
xchg
mov
in
loopne
jnp
adc
dec
add
add
add
fistp
rcl
jo
loopne
mov
and
sbb
dec
sbb
jne
pop
mov
adc
adc
xchg
mov
inc
add
pop
inc
sbb
int
push
push
aas
adc
mov
ret
rcr
shr
and
or
(bad)
xor
inc
sahf
cld
repz
cmp
push
adc
xchg
mov
and
push
push
dec
mov
inc
adc
push
aas
gs
mov
lea
rol
mov
push
pop
xchg
inc
movs
inc
adc
aas
mov
aas
ficomp
sbb
and
xchg
inc
jnp
or
ss
push
nop
pop
mov
inc
xchg
xor
in
or
jmp
ret
aas
mov
fcmovnbe
clc
iret
push
test
lds
in
mov
push
xchg
into
aas
retf
imul
aam
popf
in
cmp
cdq
in
(bad)
push
int3
mov
or
int3
mov
lea
add
add
or
inc
sub
add
add
or
add
or
jo
adc
inc
push
lock
pushf
dec
icebp
pop
sub
adc
inc
xchg
mov
mov
sbb
rcr
pop
cdq
or
dec
xchg
and
fs
pop
xchg
xchg
add
int3
movs
dec
adc
push
ins
push
add
add
or
sbb
inc
lock
xor
mov
push
pushf
shl
out
xor
sub
aad
inc
xchg
xchg
push
scas
adc
or
pushf
sub
and
es
std
ret
test
test
push
das
dec
cld
jecxz
and
xchg
xor
add
cmp
shl
cmp
les
push
dec
repz
sbb
loope
pop
jecxz
sbb
or
pushw
(bad)
xchg
stos
std
mov
loopne
inc
xor
jle
jo
mov
cdq
rcl
xchg
sti
jmp
(bad)
iret
aas
jg
arpl
test
jp
sbb
xor
test
cmps
loopne
pop
aam
pop
push
sahf
mov
sbb
add
(bad)
clc
xor
or
or
lea
enter
jbe
xor
sbb
push
add
pop
mov
sub
adc
adc
jbe
aas
sub
mov
push
pop
adc
lods
adc
xor
pop
loopne
xor
inc
and
mov
sub
or
sbb
inc
inc
inc
shr
rol
movs
mov
out
xor
jae
std
xor
movs
aas
shr
shr
stc
and
add
fs
addr16
loop
jbe
inc
or
pop
popf
dec
push
adc
dec
in
sbb
pop
repz
rcl
fild
cmp
dec
mov
inc
retf
rcl
es
int
call
jae
cdq
fnstenv
xchg
sub
add
dec
mov
test
ror
jmp
jp
gs
mov
mov
push
ret
add
mov
movs
jmp
loop
adc
sbb
xchg
mov
pop
push
push
mov
ror
sub
dec
dec
or
add
sub
add
aas
ror
mov
aas
movs
push
xchg
jmp
sbb
and
adc
cmp
in
or
ins
ins
dec
adc
ret
scas
dec
add
std
add
xor
xor
xor
loopne
jae
cmp
xor
push
inc
add
mov
mov
jno
sar
loopne
in
cmp
ins
inc
xchg
xor
cld
jecxz
dec
add
xor
scas
aam
sub
(bad)
retf
int
inc
cmc
pop
dec
test
xlat
cmp
xchg
inc
xchg
dec
sbb
pop
cmps
mov
fcom
inc
or
dec
mov
or
inc
enter
(bad)
retf
mov
push
inc
mov
adc
xlat
and
sbb
je
clc
aas
push
fwait
jge
aad
or
jmp
jmp
dec
jecxz
cmp
cmp
add
jbe
outs
cmp
in
bound
shr
mov
xchg
push
push
push
jecxz
add
mov
shl
lods
inc
lahf
cld
inc
fistp
jnp
add
adc
pop
cmc
inc
shr
jle
dec
test
adc
int
arpl
cli
add
dec
xchg
lds
(bad)
dec
or
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
rol
pop
mov
mov
fs
xor
cmps
adc
mov
or
shr
out
push
sub
rol
sub
jg
pop
mov
in
or
mov
push
push
gs
xchg
sbb
dec
xor
adc
jno
add
loopne
inc
leave
cmps
add
cmp
push
xor
push
cmp
lock
add
test
push
loopne
xchg
or
out
inc
pop
dec
movs
rol
std
or
adc
in
adc
pop
fiadd
or
je
dec
pop
pusha
rcr
das
pusha
ret
cmp
arpl
sub
xor
clc
mov
imul
dec
pop
jo
mov
xlat
mov
das
lahf
inc
push
mov
(bad)
add
movs
push
lods
loope
sbb
jl
push
aam
lds
pop
je
in
xor
push
inc
inc
test
push
mov
inc
movs
xor
adc
dec
add
nop
shl
icebp
rol
rcr
or
loopne
jns
js
add
sbb
sbb
sub
add
inc
pop
dec
sbb
add
stos
xor
ret
pop
pop
call
inc
mov
inc
and
add
and
xchg
(bad)
cmc
dec
xor
xor
xchg
or
sbb
pushf
or
add
pusha
les
mov
les
xor
dec
test
pop
and
push
push
push
mov
adc
add
push
fimul
arpl
and
icebp
pop
jg
clc
adc
pop
and
pop
adc
aam
arpl
cmp
mov
jo
inc
or
cmc
test
dec
test
les
xor
sub
(bad)
mov
add
inc
repz
adc
call
test
xlat
aas
retf
cmp
iret
xor
or
add
sbb
sub
inc
inc
xor
xchg
retf
clc
jmp
add
dec
xchg
adc
out
xor
inc
int3
(bad)
push
ret
std
repz
aas
(bad)
js
int3
inc
out
test
dec
push
nop
push
and
dec
nop
aaa
inc
jl
sbb
cwde
arpl
nop
aam
aas
into
movs
mov
imul
sbb
or
add
sbb
sub
push
sbb
inc
pop
jae
rol
outs
in
or
lock
or
ret
sbb
mov
(bad)
repz
jae
inc
pusha
ss
dec
xor
cmp
xor
into
adc
push
xor
aam
xchg
pushf
mov
push
sub
mov
inc
sbb
je
inc
out
push
pushf
ss
or
pusha
(bad)
mov
push
rol
in
pop
jl
fstp
addr16
lock
cmp
xchg
in
nop
and
aas
push
pop
fs
out
xchg
cmp
aam
fsubr
cmp
outs
int
push
mov
hlt
xor
ja
jb
fwait
xchg
dec
out
or
dec
pop
aam
lds
xchg
cmc
ror
xbegin
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
jo
sbb
add
xor
sbb
dec
and
fdivr
mov
(bad)
(bad)
and
aam
and
enter
mov
daa
dec
and
sbb
sub
lods
pusha
mov
jmp
jno
mov
cdq
adc
or
push
test
or
dec
mov
adc
xor
mov
mov
ror
adc
test
or
mov
test
pop
lds
cmp
xor
inc
cwde
xor
cs
loope
xchg
and
lahf
ss
sbb
je
xchg
mov
xchg
xchg
aaa
pop
test
jg
cdq
cmp
or
mov
mov
push
sbb
add
icebp
mov
dec
and
fmul
std
xchg
aam
rol
test
xchg
das
mov
lds
jp
sbb
jge
movs
inc
ins
fistp
ins
xor
or
or
int3
mov
push
clc
and
adc
inc
jecxz
test
cmp
clc
jecxz
ja
jp
(bad)
xor
std
rcl
lea
cmp
mov
push
inc
sub
mov
dec
xchg
int
push
mov
int
aad
and
add
and
movs
int
cmp
pop
js
mov
dec
jb
adc
ins
add
sub
lea
inc
pop
push
add
call
sub
pop
ins
or
mov
or
adc
adc
call
add
mov
push
adc
xor
or
add
or
adc
xchg
add
leave
es
dec
push
inc
pop
push
inc
cli
iret
xor
or
(bad)
sbb
mov
ret
add
xchg
or
adc
or
push
xchg
mov
fadd
xchg
mov
or
in
aas
and
jecxz
xor
jl
sub
xor
xor
cmp
sbb
nop
or
and
adc
pop
jne
mov
or
ror
js
xor
retf
jmp
dec
dec
or
add
sub
or
sub
adc
fdivr
adc
add
or
test
sub
aas
into
push
lods
outs
mov
retf
sbb
in
xor
int3
sbb
jl
inc
ss
je
ror
jnp
or
sbb
rol
mov
sub
fld
adc
test
jno
sbb
lods
or
call
imul
inc
ja
or
dec
hlt
ss
sub
nop
fdivr
fs
inc
jns
xchg
scas
(bad)
fcmovne
fnstsw
inc
(bad)
ins
sub
cli
dec
jmp
sbb
sbb
inc
xchg
mov
adc
pop
mov
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
sub
add
or
mov
inc
fs
nop
or
mov
inc
je
mov
lds
adc
mov
(bad)
or
sti
sub
mov
or
and
rcl
(bad)
sub
cwde
push
imul
loopne
aam
xchg
push
adc
pop
push
les
in
or
push
mov
add
dec
add
push
and
inc
cmp
test
dec
test
add
mov
mov
add
adc
inc
add
setne
xor
rol
sub
push
mov
push
jns
rol
adc
les
xor
jg
call
pop
and
mov
enter
(bad)
stc
sbb
add
cmp
push
cmp
(bad)
fild
mov
ds
mov
loop
shl
add
imul
mov
dec
shl
pop
sub
mov
es
sub
mov
mov
(bad)
les
ins
pop
xor
pop
pop
mov
inc
add
into
aas
mov
add
repnz
in
xor
jo
std
add
inc
cmp
lods
loop
or
xchg
push
mov
and
sbb
mov
nop
xor
xor
sbb
dec
inc
adc
add
or
pushf
adc
or
add
pop
sbb
adc
mov
test
sbb
push
dec
movs
retf
add
adc
shl
pop
fsub
pop
push
add
fdiv
mov
xor
or
add
popa
xchg
jns
inc
and
add
icebp
inc
or
push
and
xor
xor
push
xor
adc
inc
rcr
inc
push
ror
sbb
inc
or
mov
ins
repz
xor
inc
rol
add
pushf
icebp
(bad)
cmps
add
(bad)
movs
inc
dec
or
sub
nop
scas
call
add
or
xor
or
or
add
lock
adc
inc
enter
inc
and
or
sbb
cmp
pusha
cld
arpl
add
clc
dec
xor
(bad)
cmp
ret
add
cld
xchg
mov
ficomp
push
push
push
push
mov
inc
sbb
and
mov
call
ins
inc
jmp
cmp
adc
xor
mov
pop
and
xchg
int3
xor
dec
push
mov
dec
iret
inc
mov
sahf
ins
push
add
adc
jecxz
cdq
(bad)
xchg
sbb
adc
test
nop
inc
push
aaa
test
addr16
es
or
xor
adc
push
mov
jmp
jne
jnp
fld
std
pop
push
xor
xchg
add
push
push
add
adc
aas
xlat
mov
cld
xchg
dec
cmp
adc
aam
cmp
iret
or
adc
out
aam
cli
call
loopne
pop
push
adc
aas
into
xchg
repz
les
push
add
test
dec
xor
in
xchg
(bad)
inc
lods
int3
aam
repz
dec
add
inc
(bad)
jp
inc
icebp
ret
repz
cmp
pop
lea
inc
push
not
das
call
add
and
xchg
add
inc
(bad)
rcl
xchg
and
call
enter
sbb
add
loope
push
les
fdiv
and
lock
push
(bad)
pop
inc
or
sub
popf
inc
xor
sbb
fadd
ja
sbb
clc
pop
or
add
inc
sbb
inc
sbb
loope
test
sub
loope
clc
or
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
xor
add
or
add
or
mov
shr
mov
inc
sbb
and
inc
nop
pop
mov
sbb
(bad)
sub
int3
or
xchg
mov
or
inc
call
xchg
adc
and
sti
pop
out
aas
xor
repnz
pop
xor
mov
dec
data16
mov
and
jno
mov
lods
push
lods
stos
xlat
add
sub
test
scas
sub
inc
mov
jmp
and
push
stos
xor
xchg
popa
hlt
pop
mov
add
imul
or
mov
call
cmp
pop
sbb
inc
xor
pop
mov
fsubrp
mov
xor
int
xchg
push
sbb
xchg
fnsave
mov
add
movs
int
dec
or
or
sub
add
xor
mov
shl
push
xor
add
sbb
bound
jae
in
jo
jne
std
mov
or
rcr
rcr
sbb
pushf
or
dec
push
adc
inc
movs
pusha
inc
adc
inc
repz
jo
sbb
inc
sbb
sbb
les
aaa
and
(bad)
(bad)
in
push
nop
adc
push
test
enter
ror
mov
loope
adc
loop
or
pushf
adc
jg
js
inc
add
loop
out
ret
call
adc
clc
jecxz
add
xor
or
push
lods
add
push
cli
jecxz
or
mov
adc
mov
push
push
xor
add
dec
cmp
and
and
adc
add
add
out
ret
out
(bad)
mov
cld
jae
add
and
fs
and
syscall
stos
clc
inc
add
aas
mov
call
ror
call
and
push
xor
xchg
bound
cmp
or
fiadd
sub
cmp
and
lods
xor
inc
adc
retf
mov
stos
test
test
stos
sbb
mov
mov
xor
inc
mov
cmp
sub
rol
push
(bad)
rcl
or
mov
or
adc
cmp
arpl
or
lock
or
int3
nop
inc
into
xor
cld
mov
scas
push
add
jno
sbb
sub
jnp
xchg
cmp
retf
inc
or
sub
push
retf
out
mov
shrd
mov
push
dec
andps
cmp
xchg
into
pop
imul
icebp
inc
pop
push
out
arpl
mov
and
xor
les
icebp
aas
int
in
pop
nop
cmp
inc
pop
loope
fstp
ins
(bad)
cld
(bad)
iret
or
xchg
dec
data16
pop
hlt
xchg
xor
or
gs
adc
mov
mov
fnstenv
(bad)
icebp
(bad)
int
repz
inc
adc
rcr
clc
push
rol
fwait
xor
aas
pop
and
add
mov
(bad)
clc
aas
sahf
out
adc
pop
ret
adc
add
add
fucom
mov
cmp
inc
push
cmp
and
repnz
ret
std
(bad)
pop
imul
inc
fs
mov
rol
out
xchg
jae
lock
jl
enter
mov
(bad)
call
sub
mov
pusha
adc
push
or
jp
dec
sbb
and
sti
sbb
xor
nop
cs
jecxz
das
jno
or
jb
data16
pop
hlt
or
mov
cmp
sbb
and
cmp
cli
jno
xchg
shl
dec
push
mov
or
ret
ins
sbb
xor
dec
push
adc
adc
sub
pop
daa
inc
add
sbb
add
(bad)
ror
aad
xchg
and
pop
inc
or
mov
or
inc
test
adc
jle
add
and
add
or
inc
sub
add
xor
add
or
add
or
mov
inc
or
test
pop
enter
adc
and
ins
pushf
shl
fsubr
adc
add
push
sbb
sbb
and
loopne
jno
mov
ret
push
ins
pusha
enter
movs
pop
push
out
push
xchg
mov
and
add
sub
push
cmp
sti
cdq
(bad)
xor
dec
push
pusha
cmps
lea
test
(bad)
test
inc
add
mov
sub
dec
popa
and
jg
js
xchg
and
dec
mov
rcr
pop
pusha
test
push
iret
add
sub
or
dec
xchg
(bad)
and
xor
sbb
cld
sub
ret
sbb
adc
pop
into
adc
mov
and
push
jge
xor
test
jnp
add
add
adc
ins
mov
or
mov
ror
das
dec
inc
xor
bound
enter
or
sub
jmp
inc
inc
sbb
les
sub
dec
push
inc
jmp
and
sub
shl
or
clc
rol
pop
rol
mov
push
dec
and
add
cmp
ret
in
push
mov
jne
int3
mov
inc
dec
adc
adc
add
arpl
mov
xchg
(bad)
push
jecxz
add
inc
add
adc
xchg
push
add
inc
or
shl
jmp
or
lock
add
pop
add
inc
add
pusha
jae
adc
mov
mov
cli
and
add
test
add
icebp
inc
xor
les
jne
mov
int
and
and
adc
push
test
mov
inc
stc
add
test
add
stc
xor
mov
and
add
xorps
cmp
cmp
int3
push
mov
ss
ds
ret
or
clc
inc
push
xor
shl
mov
adc
repnz
jnp
dec
leave
add
jl
dec
mov
jo
fs
movs
xor
jl
clc
add
ss
mov
mov
arpl
repz
jmp
les
lds
rol
cld
mov
push
popa
mov
iret
jp
push
jecxz
or
adc
daa
ins
lods
dec
push
sub
test
add
mov
adc
sbb
mov
dec
rcl
add
add
add
dec
or
adc
out
iret
add
cmp
add
or
test
sub
add
lods
icebp
(bad)
cmp
ins
icebp
dec
or
jl
hlt
jmp
out
or
jo
rcr
int
xchg
or
add
inc
sbb
loopne
adc
sar
adc
dec
sub
rcl
push
or
push
pop
push
jl
fsub
push
and
inc
test
lds
xor
shr
sbb
inc
and
cmp
sbb
int3
mov
add
jne
mov
mov
pop
xor
ror
jne
or
int
sub
cmp
mov
sbb
or
sub
lea
sub
add
sbb
xor
pusha
or
dec
pop
rcr
push
push
sbb
or
pop
lock
add
rol
mov
add
test
sub
icebp
or
and
(bad)
js
cmp
add
bound
dec
inc
or
xor
test
inc
add
mov
jg
rol
aam
add
xor
adc
adc
add
pushf
pop
inc
xor
shl
add
sbb
cmp
sar
mov
sbb
mov
or
jecxz
xlat
cmp
inc
sbb
add
inc
adc
mov
inc
(bad)
push
adc
sbb
cmp
jg
in
out
or
stc
xchg
in
test
int3
dec
(bad)
aas
enter
xor
sub
adc
push
in
mov
cmovg
icebp
xchg
add
leave
adc
adc
movs
movs
cs
repnz
add
xor
sbb
dec
int3
wrmsr
jae
imul
aas
pushf
stc
dec
pop
fisub
outs
or
sbb
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
xor
add
or
add
or
mov
shr
mov
ret
adc
jb
xchg
popa
jl
shl
sub
sub
dec
ss
pop
xor
rcl
mov
dec
sbb
jmp
aas
add
pop
push
hlt
inc
jecxz
cmp
mov
repz
fs
out
pop
mov
hlt
out
mov
jo
push
movs
dec
xchg
jno
mov
aam
leave
je
fwait
mov
mov
das
push
sbb
(bad)
std
rol
pop
mov
mov
sub
mov
repnz
add
retf
pop
mov
or
inc
or
pop
xchg
pop
icebp
loope
fsub
pushf
xor
push
xor
movs
movs
fdiv
pop
sahf
cwde
arpl
out
or
lea
out
mov
mov
inc
arpl
cmp
jmp
dec
(bad)
into
add
xchg
or
xor
xchg
push
or
or
sub
rcl
push
scas
sub
icebp
jne
add
adc
fild
aas
clc
xor
or
loop
and
bnd
mov
fdiv
mov
mov
loopne
inc
and
(bad)
jb
adc
rol
xor
add
pop
or
adc
aas
inc
cmp
ror
out
or
adc
push
stos
mov
and
ror
mov
fs
pushf
imul
aam
adc
lods
ins
jns
push
or
nop
aas
xor
push
enter
ret
or
and
jno
adc
loopne
iret
add
xor
or
push
lods
add
xchg
cmp
mov
test
adc
add
mov
test
rol
adc
mov
(bad)
push
or
add
clc
arpl
mov
inc
add
or
xchg
add
lods
repnz
cld
xor
mov
jb
dec
add
enter
iret
add
add
fdiv
mov
adc
test
loop
inc
ret
cmp
cld
shl
and
lods
xor
inc
adc
push
sti
out
xor
inc
call
dec
adc
or
xor
inc
and
xor
jb
adc
iret
adc
add
xor
inc
mov
test
adc
push
jae
iret
pusha
adc
aam
jg
or
fdiv
inc
push
cmp
js
sub
dec
add
add
jno
sbb
sub
int3
aas
sub
push
neg
js
push
push
sub
push
rcl
mov
or
and
fdiv
(bad)
add
push
aaa
jmp
les
adc
cld
arpl
loop
pop
xor
movs
int
or
retf
pusha
adc
into
pop
jecxz
add
mov
(bad)
sar
mov
cmp
pop
cmp
nop
sbb
aad
cld
jo
cmp
push
push
xchg
mov
imul
test
mov
aad
(bad)
cmp
arpl
xor
mov
or
into
clc
inc
cmp
bound
and
sbb
xor
mov
mov
push
push
lock
add
jo
inc
jo
pop
inc
dec
nop
and
add
push
clc
shr
add
pop
add
shl
pop
xchg
nop
inc
sub
or
or
and
add
or
inc
sub
add
xor
add
or
add
or
mov
inc
or
test
pop
enter
adc
and
ins
pushf
shl
fsubr
adc
add
push
sbb
sbb
and
loopne
jno
mov
ret
push
ins
pusha
enter
movs
pop
push
out
push
xchg
mov
and
add
sub
push
cmp
sti
cdq
(bad)
xor
dec
push
pusha
cmps
lea
test
(bad)
test
inc
add
mov
sub
dec
popa
and
jg
js
xchg
and
dec
mov
rcr
pop
pusha
test
push
iret
add
sub
or
dec
xchg
(bad)
and
xor
sbb
cld
sub
ret
sbb
adc
pop
into
adc
mov
and
push
jge
xor
test
jnp
add
add
adc
ins
mov
or
mov
ror
das
dec
inc
xor
bound
enter
or
sub
jmp
inc
inc
sbb
les
sub
dec
push
inc
jmp
and
sub
shl
or
clc
rol
pop
rol
mov
push
dec
and
add
cmp
ret
in
push
mov
jne
int3
mov
inc
dec
adc
adc
add
arpl
mov
xchg
(bad)
push
jecxz
add
inc
add
adc
xchg
push
add
inc
or
shl
jmp
or
lock
add
pop
add
inc
add
pusha
jae
adc
mov
mov
cli
and
add
test
add
icebp
inc
xor
les
jne
mov
int
and
and
adc
push
test
mov
inc
stc
add
test
add
stc
xor
mov
and
add
xorps
cmp
cmp
int3
push
mov
ss
ds
ret
or
clc
inc
push
xor
shl
mov
adc
repnz
jnp
dec
leave
add
jl
dec
mov
jo
fs
movs
xor
jl
clc
add
ss
mov
mov
arpl
repz
jmp
les
lds
rol
cld
mov
push
popa
mov
iret
jp
push
jecxz
or
adc
daa
ins
lods
dec
push
sub
test
add
mov
adc
sbb
mov
dec
rcl
add
add
add
dec
or
adc
out
iret
add
cmp
add
or
test
sub
add
lods
icebp
(bad)
cmp
ins
icebp
dec
or
jl
hlt
jmp
out
or
jo
rcr
int
xchg
or
add
inc
sbb
loopne
adc
sar
adc
dec
sub
rcl
push
or
push
pop
push
jl
fsub
push
and
inc
test
lds
xor
shr
sbb
inc
and
cmp
sbb
int3
mov
add
jne
mov
mov
pop
xor
ror
jne
or
int
sub
cmp
mov
sbb
or
sub
lea
sub
add
sbb
xor
pusha
or
dec
pop
rcr
push
push
sbb
or
pop
lock
add
rol
mov
add
test
sub
icebp
or
and
(bad)
js
cmp
add
bound
dec
inc
or
xor
test
inc
add
mov
jg
rol
aam
add
xor
adc
adc
add
pushf
pop
inc
xor
shl
add
sbb
cmp
sar
mov
sbb
mov
or
jecxz
xlat
cmp
inc
sbb
add
inc
adc
mov
inc
(bad)
push
adc
sbb
cmp
jg
in
out
or
stc
xchg
in
test
int3
dec
(bad)
aas
enter
xor
sub
adc
push
in
mov
cmovg
icebp
xchg
add
leave
adc
adc
movs
movs
cs
repnz
add
xor
sbb
dec
int3
wrmsr
jae
imul
aas
pushf
stc
dec
pop
fisub
outs
or
sbb
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
xor
add
or
add
or
mov
shr
mov
ret
adc
jb
xchg
popa
jl
shl
sub
sub
dec
ss
pop
xor
rcl
mov
dec
sbb
jmp
aas
add
pop
push
hlt
inc
jecxz
cmp
mov
repz
fs
out
pop
mov
hlt
out
mov
jo
push
movs
dec
xchg
jno
mov
aam
leave
je
fwait
mov
mov
das
push
sbb
(bad)
std
rol
pop
mov
mov
sub
mov
repnz
add
retf
pop
mov
or
inc
or
pop
xchg
pop
icebp
loope
fsub
pushf
xor
push
xor
movs
movs
fdiv
pop
sahf
cwde
arpl
out
or
lea
out
mov
mov
inc
arpl
cmp
jmp
dec
(bad)
into
add
xchg
or
xor
xchg
push
or
or
sub
rcl
push
scas
sub
icebp
jne
add
adc
fild
aas
clc
xor
or
loop
and
bnd
mov
fdiv
mov
mov
loopne
inc
and
(bad)
jb
adc
rol
xor
add
pop
or
adc
aas
inc
cmp
ror
out
or
adc
push
stos
mov
and
ror
mov
fs
pushf
imul
aam
adc
lods
ins
jns
push
or
nop
aas
xor
push
enter
ret
or
and
jno
adc
loopne
iret
add
xor
or
push
lods
add
xchg
cmp
mov
test
adc
add
mov
test
rol
adc
mov
(bad)
push
or
add
clc
arpl
mov
inc
add
or
xchg
add
lods
repnz
cld
xor
mov
jb
dec
add
enter
iret
add
add
fdiv
mov
adc
test
loop
inc
ret
cmp
cld
shl
and
lods
xor
inc
adc
push
sti
out
xor
inc
call
dec
adc
or
xor
inc
and
xor
jb
adc
iret
adc
add
xor
inc
mov
test
adc
push
jae
iret
pusha
adc
aam
jg
or
fdiv
inc
push
cmp
js
sub
dec
add
add
jno
sbb
sub
int3
aas
sub
push
neg
js
push
push
sub
push
rcl
mov
or
and
fdiv
(bad)
add
push
aaa
jmp
les
adc
cld
arpl
loop
pop
xor
movs
int
or
retf
pusha
adc
into
pop
jecxz
add
mov
(bad)
sar
mov
cmp
pop
cmp
nop
sbb
aad
cld
jo
cmp
push
push
xchg
mov
imul
test
mov
aad
(bad)
cmp
arpl
xor
mov
or
into
clc
inc
cmp
bound
and
sbb
xor
mov
mov
push
push
lock
add
jo
inc
jo
pop
inc
dec
nop
and
add
push
clc
shr
add
pop
add
shl
pop
xchg
nop
inc
sub
or
or
and
add
or
inc
sub
add
xor
add
or
add
or
mov
inc
or
test
pop
enter
adc
and
ins
pushf
shl
fsubr
adc
add
push
sbb
sbb
and
loopne
jno
mov
ret
push
ins
pusha
enter
movs
pop
push
out
push
xchg
mov
and
add
sub
push
cmp
sti
cdq
(bad)
xor
dec
push
pusha
cmps
lea
test
(bad)
test
inc
add
mov
sub
dec
popa
and
jg
js
xchg
and
dec
mov
rcr
pop
pusha
test
push
iret
add
sub
or
dec
xchg
(bad)
and
xor
sbb
cld
sub
ret
sbb
adc
pop
into
adc
mov
and
push
jge
xor
test
jnp
add
add
adc
ins
mov
or
mov
ror
das
dec
inc
xor
bound
enter
or
sub
jmp
inc
inc
sbb
les
sub
dec
push
inc
jmp
and
sub
shl
or
clc
rol
pop
rol
mov
push
dec
and
add
cmp
ret
in
push
mov
jne
int3
mov
inc
dec
adc
adc
add
arpl
mov
xchg
(bad)
push
jecxz
add
inc
add
adc
xchg
push
add
inc
or
shl
jmp
or
lock
add
pop
add
inc
add
pusha
jae
adc
mov
mov
cli
and
add
test
add
icebp
inc
xor
les
jne
mov
int
and
and
adc
push
test
mov
inc
stc
add
test
add
stc
xor
mov
and
add
xorps
cmp
cmp
int3
push
mov
ss
ds
ret
or
clc
inc
push
xor
shl
mov
adc
repnz
jnp
dec
leave
add
jl
dec
mov
jo
fs
movs
xor
jl
clc
add
ss
mov
mov
arpl
repz
jmp
les
lds
rol
cld
mov
push
popa
mov
iret
jp
push
jecxz
or
adc
daa
ins
lods
dec
push
sub
test
add
mov
adc
sbb
mov
dec
rcl
add
add
add
dec
or
adc
out
iret
add
cmp
add
or
test
sub
add
lods
icebp
(bad)
cmp
ins
icebp
dec
or
jl
hlt
jmp
out
or
jo
rcr
int
xchg
or
add
inc
sbb
loopne
adc
sar
adc
dec
sub
rcl
push
or
push
pop
push
jl
fsub
push
and
inc
test
lds
xor
shr
sbb
inc
and
cmp
sbb
int3
mov
add
jne
mov
mov
pop
xor
ror
jne
or
int
sub
cmp
mov
sbb
or
sub
lea
sub
add
sbb
xor
pusha
or
dec
pop
rcr
push
push
sbb
or
pop
lock
add
rol
mov
add
test
sub
icebp
or
and
(bad)
js
cmp
add
bound
dec
inc
or
xor
test
inc
add
mov
jg
rol
aam
add
xor
adc
adc
add
pushf
pop
inc
xor
shl
add
sbb
cmp
sar
mov
sbb
mov
or
jecxz
xlat
cmp
inc
sbb
add
inc
adc
mov
inc
(bad)
push
adc
sbb
cmp
jg
in
out
or
stc
xchg
in
test
int3
dec
(bad)
aas
enter
xor
sub
adc
push
in
mov
cmovg
icebp
xchg
add
leave
adc
adc
movs
movs
cs
repnz
add
xor
sbb
dec
int3
wrmsr
jae
imul
aas
pushf
stc
dec
pop
fisub
outs
or
sbb
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
or
sbb
adc
dec
icebp
into
mov
xor
das
scas
mov
rol
mov
test
outs
xor
xor
add
sbb
push
mov
ror
push
jno
mov
inc
xchg
pop
adc
les
xor
mov
jne
add
sub
sbb
loopne
mov
pop
shr
add
mov
pop
mov
jmp
in
pop
aas
test
cwde
cwde
add
fwait
xor
fcom
lds
ret
ror
mov
outs
pushf
mov
xchg
stos
add
sbb
push
or
pop
dec
mov
push
or
inc
add
(bad)
cld
repz
jmp
rcl
outs
add
add
sub
push
cmp
imul
push
sbb
push
mov
pusha
and
sub
fst
inc
mov
lds
add
stc
repnz
xor
ret
(bad)
into
or
xchg
shl
aas
movs
push
inc
or
sub
mov
push
push
push
ret
jns
popa
repz
lea
adc
mov
loopne
xor
add
inc
nop
add
inc
rcl
lsl
push
xchg
inc
adc
xor
sub
mov
xor
add
test
pop
jle
rol
sub
inc
jmp
add
repz
adc
sub
ret
add
pop
mov
add
jo
adc
push
loopne
xor
sub
shl
and
or
shl
inc
je
and
test
xor
pusha
jecxz
mov
push
rcl
and
(bad)
clc
loope
xor
xor
test
pusha
pop
rol
popa
js
pop
xchg
cvttps2pi
sbb
inc
rol
pop
xchg
sbb
call
rcl
pop
pusha
inc
and
dec
shr
dec
add
push
push
pushf
or
xor
sub
and
fwait
xor
shl
add
sbb
or
dec
jno
aas
add
inc
push
adc
ret
lds
xor
mov
mov
ret
lods
and
cmp
mov
in
sbb
aas
xor
sbb
mov
sub
addr16
sub
jmp
pop
dec
xchg
stos
push
loopne
lahf
or
add
add
lds
push
loope
ins
pop
push
inc
inc
jb
jo
xor
inc
xor
add
in
add
(bad)
dec
(bad)
push
add
or
xchg
or
inc
sbb
dec
mov
jo
add
cmp
and
aas
push
and
mov
inc
add
movups
dec
sub
jno
pop
xchg
retf
pop
xor
push
repz
or
fdiv
(bad)
adc
push
mov
add
push
or
push
adc
inc
inc
add
push
enter
lock
or
repnz
push
inc
cld
inc
and
push
enter
add
add
(bad)
rol
adc
push
test
inc
cmp
lods
and
or
push
shl
xchg
dec
sbb
xor
and
cli
xor
repnz
push
add
fistp
ret
aas
outs
push
lock
(bad)
mov
(bad)
and
pushf
inc
mov
ret
add
or
ss
(bad)
sub
inc
adc
xor
(bad)
and
push
rol
add
add
nop
xor
ret
mov
add
mov
add
loope
or
in
nop
dec
add
mov
and
mov
push
xor
cdq
shr
rcl
adc
loop
inc
mov
nop
adc
inc
add
mov
inc
push
mov
or
push
push
sbb
adc
lsl
sbb
and
ds
and
inc
dec
jp
inc
adc
int3
jo
sbb
adc
ins
dec
add
jne
ret
aas
jl
sahf
bound
loop
sub
sbb
mov
inc
xchg
mov
fs
clc
push
sbb
inc
dec
outs
dec
lds
lods
movs
and
ins
repnz
clc
in
inc
dec
push
xchg
push
loopne
pop
add
inc
rol
dec
dec
push
add
push
dec
(bad)
aas
cwde
icebp
(bad)
je
and
pop
loope
cld
push
mov
and
xchg
popa
retf
jg
xchg
adc
inc
jmp
out
inc
enter
nop
bound
test
dec
ret
pusha
call
int
popa
xor
add
call
or
or
enter
scas
adc
test
adc
retf
les
push
cmp
mov
inc
mov
push
sbb
push
and
xlat
lock
sub
les
push
loope
xor
add
pop
mov
mov
push
test
add
or
enter
add
and
jo
xor
xor
cmp
pop
and
push
xchg
push
and
or
push
sbb
cmp
cli
lea
or
jb
je
(bad)
mov
push
jp
inc
xchg
int3
add
mov
mov
xor
pop
hlt
int3
sub
pop
inc
inc
and
xor
sbb
pop
hlt
(bad)
lods
popf
(bad)
mov
inc
pop
add
mov
and
loope
movs
hlt
lods
inc
sbb
(bad)
and
push
pop
sbb
sbb
fidivr
and
adc
mov
push
adc
adc
mov
and
outs
inc
mov
sbb
stos
out
inc
stos
cmp
dec
inc
and
rol
and
adc
popa
pop
xor
dec
mov
js
shl
add
xchg
mov
and
adc
pop
fadd
inc
rol
adc
pusha
or
or
fst
add
and
add
or
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
adc
cld
ret
adc
xor
int3
jo
ret
or
or
adc
test
shr
push
xor
jne
inc
add
jo
mov
f2xm1
movs
ror
inc
sbb
mov
test
mov
das
sbb
fs
xchg
(bad)
and
push
push
out
test
outs
mov
or
or
retf
mov
adc
pop
mov
add
adc
lock
mov
imul
shl
or
rol
int3
(bad)
add
arpl
push
pop
pop
jno
adc
retf
add
ret
sbb
cmp
xchg
pop
sub
fisubr
(bad)
adc
inc
xchg
or
sbb
(bad)
push
nop
adc
push
inc
mov
push
dec
test
in
jl
inc
xor
movs
sub
fs
inc
adc
dec
nop
nop
adc
movs
xor
xor
push
and
inc
ret
or
sub
int3
imul
and
and
sub
pop
movs
ror
or
shl
add
int3
loopne
and
mov
push
adc
xor
adc
adc
adc
inc
lock
xor
cmc
(bad)
cmp
lods
add
mov
jle
and
xor
nop
xor
cmp
ret
aas
fistp
(bad)
rol
adc
mov
or
ins
or
lds
arpl
sub
pushf
out
pop
or
add
add
int
iret
clc
xor
pop
pop
sbb
inc
int
aam
inc
lds
adc
xchg
loop
or
int3
das
sub
and
or
out
push
push
adc
mov
sbb
adc
jno
inc
aam
inc
or
sbb
pusha
xchg
inc
mov
sub
and
or
xor
lods
iret
inc
push
adc
cld
rol
sub
loope
pop
cmp
fdiv
(bad)
adc
xor
cmp
cs
dec
clc
shr
adc
inc
repz
xor
call
mov
mov
pusha
lock
xor
mov
scas
xchg
lea
add
dec
ret
mov
stc
inc
add
cmp
inc
sbb
add
or
and
adc
add
sbb
hlt
add
pop
out
test
rol
cwde
push
rcr
aas
repz
imul
or
int3
dec
nop
aas
movs
adc
or
push
adc
add
inc
fist
lock
aam
(bad)
xor
xchg
xor
xchg
scas
pop
dec
push
repnz
jo
inc
into
aas
(bad)
sbb
adc
in
shl
imul
inc
xor
add
(bad)
cmp
or
fadd
mov
inc
xor
inc
sub
mov
inc
and
adc
inc
inc
fnsave
dec
or
sbb
pushf
jo
pop
dec
int3
lock
and
push
add
cmp
xor
xor
nop
aaa
push
adc
jno
or
sub
stc
or
push
mov
inc
add
or
jl
retf
sbb
inc
aas
push
xor
sub
aam
xchg
les
or
mov
or
test
sub
ds
out
inc
pop
sbb
push
jecxz
in
xchg
adc
add
jl
add
cmps
rol
and
data16
sbb
jno
inc
fadd
or
pop
mov
rol
cmp
and
clc
pop
push
call
retf
jmp
bound
sub
sbb
cmp
popf
add
jmp
inc
push
ja
xor
push
and
call
sbb
mov
lea
and
mov
cmp
jge
lods
jecxz
pop
mov
ins
rcr
adc
test
mov
jno
xor
fsub
sbb
mov
stos
add
cmp
jo
outs
and
cmp
jno
inc
adc
inc
enter
(bad)
jg
arpl
jmp
push
adc
in
retf
fs
adc
mov
inc
push
nop
fs
sbb
dec
test
rol
add
xchg
jno
push
xchg
xchg
add
mov
pop
and
lock
add
xor
inc
push
pop
push
mov
dec
arpl
push
sahf
xchg
mov
mov
aas
pop
lock
lods
add
lods
add
adc
cld
add
test
push
sbb
es
icebp
mov
pusha
pusha
sub
inc
add
add
sbb
pusha
nop
sub
push
inc
pusha
jbe
add
sub
(bad)
inc
push
lock
mov
xor
leave
dec
push
out
jecxz
(bad)
cmp
cmp
add
shl
sbb
inc
push
or
or
xchg
mov
push
(bad)
or
sub
mov
xchg
mov
jno
mov
les
and
leave
enter
gs
push
lock
nop
dec
sub
push
push
enter
cdq
push
jmp
and
xchg
les
sbb
and
jg
(bad)
jne
aad
ss
fs
push
or
arpl
mov
(bad)
ins
imul
lods
mov
or
stc
add
push
add
add
add
add
xor
add
inc
dec
sbb
mov
rol
jecxz
or
or
dec
pushf
pop
rcl
mov
xor
and
or
add
in
push
iret
(bad)
mov
mov
popa
inc
sub
mov
(bad)
lea
push
popa
ror
(bad)
xchg
cli
jecxz
add
xchg
pop
inc
or
mov
xor
ret
and
test
movs
add
cld
add
add
std
xchg
imul
and
add
add
push
mov
sub
jno
mov
cmp
push
adc
adc
sbb
stos
mov
(bad)
mov
mov
mov
test
pop
mov
adc
shr
(bad)
dec
push
popa
rcl
adc
call
es
dec
sub
jne
fmul
or
and
and
sbb
fidiv
call
es
(bad)
lds
movs
test
(bad)
push
cwde
mov
jg
or
sbb
movs
shl
add
ror
cmp
pop
xor
mov
test
push
mov
clc
ret
test
and
adc
sbb
cmp
add
push
pop
ret
aas
lods
fcom
inc
jle
push
mov
push
movs
push
nop
xchg
add
cmp
adc
rcl
or
add
pusha
lds
aam
sbb
pop
sbb
mov
pop
adc
push
or
(bad)
inc
add
adc
or
dec
push
ret
rcl
inc
ror
retf
cmp
adc
cmp
fst
push
inc
adc
inc
mov
rol
movs
mov
sbb
jge
sub
dec
add
add
aas
and
mov
add
xor
adc
jbe
adc
cmps
xchg
ror
or
sub
ret
push
adc
inc
int
dec
imul
les
das
les
lock
pop
rcl
lea
xor
cmp
rol
stos
push
es
loop
sbb
mov
adc
loop
jmp
and
dec
clc
add
push
ins
and
sbb
mov
pusha
ret
push
add
dec
int3
loope
xor
mov
mov
inc
jecxz
sub
adc
add
push
clc
lock
push
xor
cmp
adc
and
repnz
adc
and
aam
pop
mov
test
cld
and
(bad)
jo
leave
add
and
test
aam
and
adc
and
add
xor
inc
rol
add
sbb
and
aas
or
or
add
aam
jmp
sbb
jno
shl
jp
(bad)
mov
push
das
or
push
jb
add
jae
xchg
push
and
inc
cmp
mov
mov
jno
jnp
sub
sub
cld
cmp
adc
test
dec
inc
add
push
sbb
dec
xor
adc
fimul
test
inc
push
or
xchg
inc
and
or
je
add
rcl
adc
adc
sub
or
sbb
adc
or
sbb
or
mov
adc
pop
xchg
push
cmp
inc
add
inc
xor
(bad)
sbb
push
test
movs
add
pusha
pop
add
pop
int3
popa
or
inc
or
ret
mov
(bad)
adc
push
test
xchg
mov
xor
sub
fadd
sbb
sub
aaa
adc
js
sub
add
sbb
dec
add
mov
inc
or
push
mov
jmp
adc
sar
js
inc
xchg
mov
ins
rol
sbb
xor
aaa
loopne
add
js
cmp
add
push
mov
mov
cdq
icebp
nop
adc
dec
xor
ror
and
push
adc
xor
test
(bad)
mov
imul
push
jl
or
cwde
(bad)
xor
mov
add
je
mov
inc
and
push
clc
pusha
xchg
push
cmp
lock
nop
fsubr
call
inc
cwde
and
jb
and
or
gs
push
nop
je
inc
sbb
clc
lds
into
arpl
int3
adc
pushf
mov
add
inc
xor
add
inc
rol
jmp
push
inc
mov
repz
into
or
out
ror
xchg
inc
int3
retf
and
dec
test
sbb
push
push
or
ins
mov
pop
add
push
xor
fadd
aas
daa
loop
mov
nop
ret
inc
rol
fwait
or
add
cmp
repz
sbb
adc
sbb
fsub
stos
add
scas
aam
sbb
xor
mov
aaa
outs
loope
push
ffreep
lea
and
and
sbb
inc
mov
add
(bad)
adc
cmp
adc
xor
in
pop
aam
adc
add
ins
add
stos
or
ins
and
or
add
je
mov
je
inc
mov
or
div
loope
mov
cmp
cmp
xor
add
and
push
int3
and
pop
xor
(bad)
push
jnp
dec
sub
xchg
inc
adc
sbb
les
sbb
sti
add
sbb
xor
fcomp
add
adc
sbb
pop
into
adc
jne
sbb
(bad)
jecxz
ficomp
or
test
in
gs
inc
cwde
jmp
mov
or
add
and
test
xor
(bad)
inc
sub
mov
push
nop
mov
cmp
mov
xor
jecxz
loopne
push
sub
or
adc
sbb
mov
pop
(bad)
push
ret
sbb
(bad)
es
mov
inc
xchg
je
cmp
inc
hlt
clc
and
pop
and
outs
adc
pop
jle
aas
fcom
mov
and
or
sbb
sti
ins
push
cmp
mov
and
rcr
stc
pop
xor
sub
into
pop
xchg
sub
push
add
add
and
cmp
or
clc
repz
add
add
add
add
add
dec
add
sbb
add
add
add
popa
xor
sbb
adc
add
sbb
add
add
sbb
add
inc
cmp
popa
add
add
inc
cld
std
std
(bad)
rol
(bad)
aad
(bad)
in
rol
or
add
dec
fld
in
add
cmps
add
sbb
mul
(bad)
cmp
fadd
jmp
das
(bad)
loope
mov
mov
inc
(bad)
mov
into
push
(bad)
(bad)
adc
xchg
push
xchg
sub
mov
mov
add
xchg
mov
add
lods
add
psubsw
call
cld
ret
(bad)
inc
cli
mov
jmp
in
ss
inc
stc
test
push
add
jmp
mov
ins
std
aam
(bad)
clc
add
in
add
mov
(bad)
hlt
add
lock
xchg
add
jmp
add
sbb
js
(bad)
cld
pop
(bad)
out
add
(bad)
and
mov
mov
pop
jmp
loope
(bad)
sti
(bad)
(bad)
(bad)
sub
mov
pushf
or
test
dec
add
cld
inc
pushf
push
add
cmps
or
loop
(bad)
push
(bad)
out
ins
mov
pop
hlt
repnz
std
aad
cld
mov
(bad)
inc
(bad)
repz
cld
add
aam
out
int3
std
stos
add
icebp
lods
add
mov
fwait
bound
pop
add
stos
xchg
add
jmp
add
rol
les
xlat
(bad)
lods
aaa
xor
icebp
mov
int3
cmps
push
int
mov
push
push
mov
inc
loope
add
movs
jbe
mov
cli
mov
icebp
ret
add
iret
(bad)
add
lds
int
xchg
cdq
pop
or
retf
mov
(bad)
stc
push
(bad)
in
jmp
enter
or
stc
stc
loopne
or
out
add
hlt
add
(bad)
std
fld
jge
inc
add
mov
std
leave
add
enter
add
mov
add
add
retf
add
add
(bad)
add
scas
xchg
stc
loope
movs
ins
pop
jmp
add
leave
add
in
(bad)
fadd
(bad)
jecxz
(bad)
jmp
stc
mov
stc
mov
loop
or
lds
jmp
(bad)
add
ret
add
enter
out
push
add
in
push
add
les
std
retf
add
mov
cld
leave
push
std
mov
out
or
into
add
in
add
sub
mov
inc
paddb
sti
call
push
add
or
shr
div
(bad)
jmp
push
or
retf
inc
mov
mov
sub
cdq
xor
add
fcom
jmp
(bad)
(bad)
jmp
mov
hlt
(bad)
or
int3
or
aad
sar
cli
in
add
loope
stc
loop
inc
add
mov
loope
and
fadd
(bad)
stc
add
sti
add
xor
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
add
add
add
add
or
add
or
mov
inc
jg
mov
mov
push
nop
push
into
adc
mov
and
pop
mov
inc
mov
jb
test
inc
test
sbb
inc
inc
hlt
mov
imul
(bad)
add
adc
xor
and
adc
sub
sub
mov
add
outs
shl
(bad)
(bad)
mov
inc
and
repnz
mov
jecxz
in
or
add
stos
ret
xchg
rcr
push
repnz
dec
ror
mov
and
inc
xchg
add
add
jp
jno
adc
jno
or
xor
push
fstp
mov
dec
sahf
or
lods
pop
rol
stos
xchg
add
add
pushf
adc
pusha
loopne
(bad)
or
mov
mov
and
call
rcl
and
bswap
leave
cli
jno
cmp
sbb
push
pop
je
loopne
adc
sub
pop
shrd
retf
or
retf
fsub
xchg
inc
or
rol
adc
push
cld
loopne
jg
add
or
push
int3
mov
or
inc
add
jl
add
xor
mov
adc
loope
sub
rol
xor
push
push
and
jns
pushf
loop
add
add
sub
adc
or
loope
xchg
push
xor
or
sub
cmp
pusha
jle
mov
add
mov
add
and
or
hlt
add
add
dec
xchg
gs
mov
jmp
cmps
enter
jae
or
mov
fimul
in
or
sub
mov
nop
es
enter
and
xor
jmp
xor
cmp
arpl
or
and
xor
lahf
adc
adc
dec
setbe
and
rol
xchg
icebp
stos
and
sbb
mov
push
cs
adc
push
add
cmp
jo
mov
and
add
inc
push
push
ret
adc
add
inc
sbb
hlt
mov
and
clc
repz
or
or
movs
adc
mov
mov
xor
sub
cwde
and
xor
pop
das
clc
xor
cli
xchg
xor
add
dec
fs
add
not
add
or
push
xor
lods
adc
lods
mov
push
out
or
mov
sub
sbb
and
pop
scas
add
ret
inc
fcom
out
xor
push
add
sub
aam
and
cmp
dec
mov
and
add
ins
add
inc
sbb
loopne
mov
int3
arpl
ds
fucomi
add
imul
pop
loop
and
pop
xchg
or
shr
sbb
mov
push
dec
mov
pop
out
inc
adc
pop
and
pop
aam
add
push
loop
loopne
cmp
push
or
xor
sbb
add
ins
clc
xor
jne
clc
enter
adc
arpl
aam
jbe
sbb
mov
fdivrp
test
or
sub
sbb
mov
es
daa
jg
adc
cmp
aas
jge
arpl
inc
or
inc
ss
push
pop
cli
or
cmp
dec
dec
nop
syscall
test
sub
adc
cmp
mov
adc
sbb
inc
push
add
pop
es
sahf
(bad)
push
and
and
shl
loopne
ds
or
lods
adc
xor
push
jo
add
mov
push
sub
xor
sub
dec
jno
popa
add
js
mov
and
jl
inc
sub
or
and
jo
sbb
fadd
xor
sub
xor
mov
dec
test
or
nop
push
adc
and
add
xchg
add
inc
stos
push
push
mov
sbb
(bad)
pop
shl
aam
add
inc
add
nop
add
cmp
and
or
fld
inc
test
leave
es
push
pop
stos
and
push
mov
push
xor
adc
pusha
pop
adc
and
xor
pop
adc
nop
pcmpeqd
mov
adc
lahf
pop
retf
mov
push
pop
dec
adc
add
lock
sub
loopne
push
add
pusha
sbb
call
out
cmps
shl
and
mov
add
add
sbb
xchg
mov
sbb
sbb
or
jo
movs
sub
sub
cmp
jcxz
sub
sbb
shr
adc
add
sub
adc
lods
jmp
mov
repnz
sub
sbb
add
mov
push
loope
sbb
pusha
or
add
movs
loopne
sub
sub
bound
test
mov
xchg
rep
xor
push
out
daa
xor
or
fadd
loopne
stos
jg
dec
popa
adc
add
sbb
jl
retf
mov
loop
lds
pusha
test
inc
or
add
pop
adc
popf
sbb
push
add
gs
pop
sub
sub
movs
and
add
jmp
add
pop
sub
or
xchg
mulps
add
mov
call
mov
jge
jmp
fbstp
adc
mov
loop
mov
or
rcr
sbb
jno
ret
pusha
repz
mov
ins
fcomp
mov
sbb
push
ins
dec
cmp
add
nop
xor
mov
cmp
in
daa
mov
loope
push
push
lods
cmps
ins
stos
and
add
add
mov
loope
(bad)
mov
and
ret
jp
pop
xchg
shl
mov
retf
popa
or
pop
ret
sbb
clc
add
dec
nop
add
cmp
std
pop
dec
(bad)
jle
mov
mov
arpl
arpl
push
sub
inc
add
inc
sbb
mov
pop
or
or
mov
das
into
sub
inc
cs
adc
jns
mov
fisttp
push
sbb
adc
loop
and
add
loope
adc
mov
or
ror
add
jmp
and
rol
lods
cli
and
mov
push
(bad)
rol
add
mov
scas
mov
push
mov
adc
xchg
mov
add
fs
add
inc
push
sbb
and
add
adc
and
ja
xor
add
sbb
xchg
cmp
add
int3
mov
aas
add
add
stc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
and
add
add
or
add
or
(bad)
cld
sbb
sbb
add
sub
lods
add
pop
jg
cli
lods
jb
pusha
and
sub
inc
sub
mov
pusha
xchg
bound
mov
jns
add
dec
cdq
mov
adc
sub
push
(bad)
movs
mov
inc
mov
and
mov
dec
ror
sub
ins
jns
xchg
and
inc
arpl
ins
sar
outs
lds
ficom
iret
mov
mov
mov
bndstx
ins
lods
sub
push
push
sub
stos
sub
push
enter
sub
outs
dec
and
inc
or
into
cmps
pop
cmps
mov
add
hlt
sbb
cwde
jg
sbb
das
jp
fs
adc
(bad)
aam
lds
jp
xchg
add
ins
out
les
dec
pusha
cmps
test
test
add
int3
das
xor
dec
xchg
cmp
add
sti
(bad)
loop
and
xor
inc
loopne
dec
jl
(bad)
sahf
jle
(bad)
repnz
and
js
inc
pop
jmp
and
jle
sbb
inc
or
cwde
int
pop
and
nop
pop
xchg
movs
mov
xor
ret
xchg
rol
sbb
dec
add
adc
push
inc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
mov
dec
mov
sti
out
(bad)
sbb
fwait
cwde
mov
mov
mov
mov
lds
inc
sub
retf
sub
ins
fdivr
push
out
or
xchg
jbe
sbb
mov
sbb
add
push
xchg
cmp
aad
and
xchg
mov
adc
pop
std
dec
loope
xchg
pop
jbe
inc
test
xor
xor
or
xor
lahf
jg
dec
lods
sub
dec
loopne
push
rcpps
xor
sub
fwait
jg
(bad)
or
sbb
mov
scas
std
or
and
add
(bad)
fimul
add
xchg
jne
das
inc
ss
xchg
repz
fistp
or
ret
sbb
sub
cdq
add
sbb
push
out
sbb
adc
and
push
or
cmc
and
and
loopne
(bad)
mov
mov
adc
dec
test
push
loopne
add
popf
cld
add
adc
lea
sbb
aas
and
icebp
(bad)
fadd
loopne
inc
js
mov
push
sbb
ja
xor
clc
xor
pusha
sbb
mov
push
and
inc
sbb
add
adc
aas
cmp
xor
xchg
retf
std
adc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
ja
mov
clc
out
lea
test
sub
js
aaa
cmps
movnti
pusha
cmps
add
lock
mov
adc
push
in
xchg
or
ins
sub
lock
and
jnp
sub
ss
add
cmp
push
mov
push
mov
mov
clc
cld
cmp
lock
dec
xor
retf
pop
mov
sbb
test
and
(bad)
fadd
adc
mov
add
jg
sub
inc
inc
pusha
and
ins
push
mov
adc
adc
lods
add
and
(bad)
jnp
fxch
aas
dec
gs
mov
dec
mov
mov
sub
xor
rcr
inc
xchg
push
mov
inc
movs
(bad)
stc
inc
js
pop
mov
or
and
stos
in
outs
cmp
or
ins
out
les
aaa
dec
pusha
test
and
arpl
les
mov
nop
inc
or
and
dec
push
and
add
(bad)
fdiv
mov
aas
inc
mov
loopne
jge
add
test
pop
xchg
(bad)
les
movd
xor
dec
or
in
pusha
and
iret
mov
add
cld
push
or
sar
add
add
stc
add
add
and
add
add
or
add
or
push
loope
sar
sbb
clc
iret
mov
cli
daa
outs
dec
fwait
aas
mov
add
inc
or
repz
aad
test
cld
adc
cmp
mov
inc
cmp
fsub
or
cmps
or
push
or
pop
aas
std
jae
loopne
sub
mov
pop
and
les
or
and
imul
cli
xchg
push
mov
retf
adc
lahf
mov
sub
aas
fmul
sbb
adc
pop
mov
and
mov
arpl
aas
daa
adc
push
daa
pop
movs
mov
jns
jo
mov
bound
inc
or
push
arpl
xchg
fist
and
mov
cld
pop
out
pop
jno
fs
xor
shr
adc
popa
les
repnz
lahf
nop
addr16
add
sbb
pop
out
or
xchg
inc
cmp
sbb
sahf
jle
sub
sar
ins
push
add
or
ret
xchg
sbb
aaa
popf
adc
and
push
loop
(bad)
pop
sbb
mov
push
and
inc
es
std
repz
adc
(bad)
in
nop
loop
iret
jo
inc
sub
clc
jae
inc
add
stc
add
add
and
add
add
or
add
or
(bad)
cld
sbb
sbb
add
sub
lods
add
pop
jg
cli
lods
jb
pusha
and
sub
inc
sub
mov
pusha
xchg
bound
mov
jns
add
dec
cdq
mov
adc
sub
push
(bad)
movs
mov
inc
mov
and
mov
dec
ror
sub
ins
jns
xchg
and
inc
arpl
ins
sar
outs
lds
ficom
iret
mov
mov
mov
bndstx
ins
lods
sub
push
push
sub
stos
sub
push
enter
sub
outs
dec
and
inc
or
into
cmps
pop
cmps
mov
add
hlt
sbb
cwde
jg
sbb
das
jp
fs
adc
(bad)
aam
lds
jp
xchg
add
ins
out
les
dec
pusha
cmps
test
test
add
int3
das
xor
dec
xchg
cmp
add
sti
(bad)
loop
and
xor
inc
loopne
dec
jl
(bad)
sahf
jle
(bad)
repnz
and
js
inc
pop
jmp
and
jle
sbb
inc
or
cwde
int
pop
and
nop
pop
xchg
movs
mov
xor
ret
xchg
rol
sbb
dec
add
adc
push
inc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
mov
dec
mov
sti
out
(bad)
sbb
fwait
cwde
mov
mov
mov
mov
lds
inc
sub
retf
sub
ins
fdivr
push
out
or
xchg
jbe
sbb
mov
sbb
add
push
xchg
cmp
aad
and
xchg
mov
adc
pop
std
dec
loope
xchg
pop
jbe
inc
test
xor
xor
or
xor
lahf
jg
dec
lods
sub
dec
loopne
push
rcpps
xor
sub
fwait
jg
(bad)
or
sbb
mov
scas
std
or
and
add
(bad)
fimul
add
xchg
jne
das
inc
ss
xchg
repz
fistp
or
ret
sbb
sub
cdq
add
sbb
push
out
sbb
adc
and
push
or
cmc
and
and
loopne
(bad)
mov
mov
adc
dec
test
push
loopne
add
popf
cld
add
adc
lea
sbb
aas
and
icebp
(bad)
fadd
loopne
inc
js
mov
push
sbb
ja
xor
clc
xor
pusha
sbb
mov
push
and
inc
sbb
add
adc
aas
cmp
xor
xchg
retf
std
adc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
ja
mov
clc
out
lea
test
sub
js
aaa
cmps
movnti
pusha
cmps
add
lock
mov
adc
push
in
xchg
or
ins
sub
lock
and
jnp
sub
ss
add
cmp
push
mov
push
mov
mov
clc
cld
cmp
lock
dec
xor
retf
pop
mov
sbb
test
and
(bad)
fadd
adc
mov
add
jg
sub
inc
inc
pusha
and
ins
push
mov
adc
adc
lods
add
and
(bad)
jnp
fxch
aas
dec
gs
mov
dec
mov
mov
sub
xor
rcr
inc
xchg
push
mov
inc
movs
(bad)
stc
inc
js
pop
mov
or
and
stos
in
outs
cmp
or
ins
out
les
aaa
dec
pusha
test
and
arpl
les
mov
nop
inc
or
and
dec
push
and
add
(bad)
fdiv
mov
aas
inc
mov
loopne
jge
add
test
pop
xchg
(bad)
les
movd
xor
dec
or
in
pusha
and
iret
mov
add
cld
push
or
sar
add
add
stc
add
add
and
add
add
or
add
or
push
loope
sar
sbb
clc
iret
mov
cli
daa
outs
dec
fwait
aas
mov
add
inc
or
repz
aad
test
cld
adc
cmp
mov
inc
cmp
fsub
or
cmps
or
push
or
pop
aas
std
jae
loopne
sub
mov
pop
and
les
or
and
imul
cli
xchg
push
mov
retf
adc
lahf
mov
sub
aas
fmul
sbb
adc
pop
mov
and
mov
arpl
aas
daa
adc
push
daa
pop
movs
mov
jns
jo
mov
bound
inc
or
push
arpl
xchg
fist
and
mov
cld
pop
out
pop
jno
fs
xor
shr
adc
popa
les
repnz
lahf
nop
addr16
add
sbb
pop
out
or
xchg
inc
cmp
sbb
sahf
jle
sub
sar
ins
push
add
or
ret
xchg
sbb
aaa
popf
adc
and
push
loop
(bad)
pop
sbb
mov
push
and
inc
es
std
repz
adc
(bad)
in
nop
loop
iret
jo
inc
sub
clc
jae
inc
add
stc
add
add
and
add
add
or
add
or
(bad)
cld
sbb
sbb
add
sub
lods
add
pop
jg
cli
lods
jb
pusha
and
sub
inc
sub
mov
pusha
xchg
bound
mov
jns
add
dec
cdq
mov
adc
sub
push
(bad)
movs
mov
inc
mov
and
mov
dec
ror
sub
ins
jns
xchg
and
inc
arpl
ins
sar
outs
lds
ficom
iret
mov
mov
mov
bndstx
ins
lods
sub
push
push
sub
stos
sub
push
enter
sub
outs
dec
and
inc
or
into
cmps
pop
cmps
mov
add
hlt
sbb
cwde
jg
sbb
das
jp
fs
adc
(bad)
aam
lds
jp
xchg
add
ins
out
les
dec
pusha
cmps
test
test
add
int3
das
xor
dec
xchg
cmp
add
sti
(bad)
loop
and
xor
inc
loopne
dec
jl
(bad)
sahf
jle
(bad)
repnz
and
js
inc
pop
jmp
and
jle
sbb
inc
or
cwde
int
pop
and
nop
pop
xchg
movs
mov
xor
ret
xchg
rol
sbb
dec
add
adc
push
inc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
mov
dec
mov
sti
out
(bad)
sbb
fwait
cwde
mov
mov
mov
mov
lds
inc
sub
retf
sub
ins
fdivr
push
out
or
xchg
jbe
sbb
mov
sbb
add
push
xchg
cmp
aad
and
xchg
mov
adc
pop
std
dec
loope
xchg
pop
jbe
inc
test
xor
xor
or
xor
lahf
jg
dec
lods
sub
dec
loopne
push
rcpps
xor
sub
fwait
jg
(bad)
or
sbb
mov
scas
std
or
and
add
(bad)
fimul
add
xchg
jne
das
inc
ss
xchg
repz
fistp
or
ret
sbb
sub
cdq
add
sbb
push
out
sbb
adc
and
push
or
cmc
and
and
loopne
(bad)
mov
mov
adc
dec
test
push
loopne
add
popf
cld
add
adc
lea
sbb
aas
and
icebp
(bad)
fadd
loopne
inc
js
mov
push
sbb
ja
xor
clc
xor
pusha
sbb
mov
push
and
inc
sbb
add
adc
aas
cmp
xor
xchg
retf
std
adc
add
stc
add
add
and
add
adc
sbb
add
inc
dec
cld
ja
mov
clc
out
lea
test
sub
js
aaa
cmps
movnti
pusha
cmps
add
lock
mov
adc
push
in
xchg
or
ins
sub
lock
and
jnp
sub
ss
add
cmp
push
mov
push
mov
mov
clc
cld
cmp
lock
dec
xor
retf
pop
mov
sbb
test
and
(bad)
fadd
adc
mov
add
jg
sub
inc
inc
pusha
and
ins
push
mov
adc
adc
lods
add
and
(bad)
jnp
fxch
aas
dec
gs
mov
dec
mov
mov
sub
xor
rcr
inc
xchg
push
mov
inc
movs
(bad)
stc
inc
js
pop
mov
or
and
stos
in
outs
cmp
or
ins
out
les
aaa
dec
pusha
test
and
arpl
les
mov
nop
inc
or
and
dec
push
and
add
(bad)
fdiv
mov
aas
inc
mov
loopne
jge
add
test
pop
xchg
(bad)
les
movd
xor
dec
or
in
pusha
and
iret
mov
add
cld
push
or
sar
add
add
stc
add
add
add
add
add
add
add
add
inc
mov
rol
rol
rol
or
lgdtd
cmp
add
add
add
popa
xor
sbb
adc
add
cmp
add
add
cmp
add
inc
cmp
popa
inc
add
add
inc
out
jo
inc
push
int
add
lahf
jo
jmp
(bad)
repnz
test
scas
mov
(bad)
sub
cmps
pop
(bad)
out
sti
std
(bad)
cld
adc
cld
mov
call
lds
add
(bad)
std
sbb
add
jecxz
test
or
mov
div
hlt
(bad)
rol
std
retf
add
add
mov
or
adc
jmp
cmps
fadd
(bad)
(bad)
and
iret
aam
xor
cli
cmps
add
push
movs
popa
add
add
push
jo
lock
mov
adc
int
and
sub
inc
cwde
loope
std
enter
mov
imul
sti
push
lea
mov
popf
xchg
adc
jl
pop
pop
fs
add
aad
xor
inc
(bad)
dec
sar
sbb
retf
das
jne
clc
int3
dec
xlat
lds
in
sub
mov
ror
inc
mov
loope
add
mov
arpl
(bad)
test
(bad)
inc
xchg
mov
mov
inc
in
popa
stc
test
(bad)
jmp
or
sub
jmp
nop
dec
add
cld
repz
xchg
add
xlat
(bad)
repnz
mov
add
jmp
jmp
(bad)
inc
loope
mov
sahf
in
enter
loope
mov
and
ror
loop
cmp
in
push
iret
mov
(bad)
adc
(bad)
mov
test
sti
std
cmp
mov
pop
(bad)
retf
mov
lahf
add
add
out
mov
mov
fimul
add
pop
adc
nop
sbb
cwde
(bad)
adc
leave
adc
pop
sbb
call
in
mov
mov
loop
mov
movs
ror
retf
std
retf
aam
fwait
xchg
rcr
scas
xchg
pop
pmaddwd
add
xlat
fdivr
or
stos
add
fmul
mov
call
or
in
cmc
mov
mov
push
hlt
hlt
icebp
fxam
mov
out
leave
mov
pop
pop
pop
(bad)
fild
lahf
cmp
in
loop
push
pusha
jle
sti
ret
or
out
and
(bad)
mov
std
or
jmp
repz
(bad)
in
repnz
or
mov
idiv
(bad)
fisub
sub
std
pop
mov
sub
adc
(bad)
adc
mov
or
test
repnz
or
or
adc
fld
mov
dec
aad
sub
lds
in
add
popf
or
clc
repnz
clc
call
mov
push
(bad)
out
and
fistp
sti
clc
les
retf
pop
pop
mov
or
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
xor
add
inc
std
or
mov
rol
nop
popa
ret
and
aaa
pop
add
push
fistp
mov
(bad)
and
fidivr
retf
cmp
mov
leave
fwait
or
or
pop
cmp
adc
dec
add
pop
je
sbb
sbb
sbb
pushf
retf
or
fcmovnu
dec
inc
push
mov
inc
ret
pop
jge
in
xor
adc
xchg
and
test
xor
pusha
dec
push
fnstsw
push
addr16
test
sub
cmc
jmp
xchg
add
cmp
or
and
jno
test
cmp
mov
adc
ins
jns
in
mov
sar
mov
dec
sbb
enter
int
ss
mov
fisttp
test
in
cmc
xchg
inc
int3
inc
xor
ja
outs
push
and
cmp
xor
inc
push
pop
ror
ret
cmp
push
fisubr
sub
dec
test
dec
sbb
and
and
sub
pushf
jo
sbb
add
ret
or
push
add
dec
sub
inc
or
test
inc
shl
adc
push
aam
retf
push
pop
ins
mov
ror
dec
(bad)
mov
enter
sub
enter
ds
inc
clc
rol
sbb
inc
lea
and
rol
leave
pop
push
cmp
push
sub
outs
nop
cmps
add
clc
jecxz
mov
js
xor
add
test
and
inc
lock
adc
add
cwde
push
mov
call
push
ds
nop
dec
sbb
adc
pop
test
(bad)
fmul
stos
je
ret
xor
xor
inc
cli
in
nop
or
inc
xor
mov
rol
add
(bad)
stos
cmp
loopne
adc
nop
xchg
jg
mov
call
jecxz
adc
ror
add
rol
add
push
dec
arpl
push
dec
jecxz
cmp
pop
inc
cmp
mov
push
rol
jmp
(bad)
ins
cwde
xor
sar
xor
aas
and
add
pop
cmp
add
dec
(bad)
cld
test
push
adc
dec
mov
mov
jo
cmp
pop
inc
mov
jae
jae
xor
sets
and
cli
push
and
push
sbb
rol
aaa
dec
and
xor
int3
loopne
xor
loope
add
ret
fiadd
push
jecxz
push
popa
or
xchg
jb
es
jmp
push
(bad)
push
cwde
loopne
and
push
dec
and
add
inc
mov
fist
mov
mov
push
add
fild
add
(bad)
xor
ret
ud2
cld
loopne
adc
and
out
outs
push
add
cwde
inc
or
in
rol
iret
cmps
mov
dec
hlt
mov
dec
cpuid
adc
int3
pop
xchg
mov
mov
xor
or
data16
and
xor
cmp
cld
mov
sbb
inc
ret
inc
fs
jmp
push
inc
xor
inc
sbb
fisub
cmp
push
add
cdq
das
outs
(bad)
into
jo
pop
and
add
das
stos
in
mov
sub
call
scas
jbe
or
adc
sub
mov
or
adc
or
push
cdq
aam
push
or
inc
daa
inc
add
push
pop
hlt
aad
sub
ret
in
adc
sbb
(bad)
xor
add
fs
or
mov
lock
jecxz
pop
mov
sub
inc
sbb
dec
inc
adc
loop
mov
mov
adc
push
xor
push
xor
aas
cwde
pusha
push
sub
aaa
dec
in
lock
cld
and
loopne
sbb
cmp
adc
inc
(bad)
push
mov
enter
add
loope
sbb
(bad)
jae
hlt
loope
or
or
test
fs
add
les
aas
pop
loopne
js
and
dec
jns
adc
rcr
push
movs
shr
rcr
mov
push
or
and
adc
xor
adc
sub
(bad)
cmps
xor
or
sar
inc
leave
mov
push
add
nop
adc
mov
mov
add
add
repz
mov
cs
aam
add
push
or
fld
pop
add
pop
jecxz
xor
pop
mov
aam
fist
test
xor
arpl
and
jmp
or
mov
jbe
add
push
inc
lods
xchg
fdivr
ror
and
or
jae
add
(bad)
xchg
add
call
loop
pop
push
inc
sub
sbb
adc
mov
xor
cwde
(bad)
cmp
adc
inc
xchg
or
fisub
cmps
sbb
movs
out
cwde
(bad)
mov
add
ret
and
jl
ss
or
das
jne
pop
ins
add
cdq
fisub
outs
pusha
mov
mov
rol
js
cmp
or
mov
cmp
add
cs
mov
hlt
and
nop
loopne
xchg
aam
mov
push
xchg
lds
jmp
or
rcr
mov
cmp
mulps
adc
pop
mov
or
ins
sbb
fucomi
sub
mov
mov
aaa
adc
add
leave
lock
data16
pop
push
sqrtps
push
jge
cmp
aad
lods
mov
xchg
in
rol
ds
xchg
js
call
mov
lods
or
mov
loopne
push
and
pop
push
hlt
inc
ss
inc
add
ins
add
rcl
pop
lds
cmp
or
push
push
in
leave
mov
mov
cmps
or
mov
or
dec
cmp
sub
aaa
mov
in
push
mov
xchg
adc
shl
jb
test
mov
push
cmps
rol
push
cmps
cmp
test
and
sub
push
dec
pop
loopne
xchg
and
sbb
loop
add
sbb
mov
loop
jge
xor
xor
or
cmp
xchg
and
in
sbb
aaa
and
sub
add
rol
adc
cmp
push
push
ins
push
cmc
scas
sub
scas
shr
js
(bad)
mov
mov
add
adc
mov
sbb
pop
xchg
push
lds
pop
inc
or
mov
mov
rol
retf
jbe
iret
adc
cdq
call
(bad)
int
sub
sbb
and
fdiv
adc
add
jns
or
add
sbb
sbb
ins
mov
mov
push
out
dec
mov
push
xor
dec
inc
add
dec
and
test
mov
sbb
rcr
mov
xchg
out
mov
loope
xor
push
xor
movs
adc
aas
sbb
or
dec
cld
sahf
adc
xchg
add
mov
and
mov
pop
cdq
pop
mov
xchg
and
movs
and
and
movs
daa
cmp
inc
jae
nop
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
xor
and
add
inc
dec
hlt
out
mov
sub
pop
inc
or
loop
mov
sub
enter
jl
inc
lods
sub
push
cwde
sub
mov
nop
xchg
and
out
jg
push
xchg
test
cmp
int
mov
ror
retf
xchg
movs
add
sub
test
push
fidivr
sub
es
xor
xlat
loop
pop
pop
cs
inc
and
add
in
cli
aaa
in
jmp
xlat
loopne
or
sbb
popa
(bad)
loopne
clc
test
adc
sbb
mov
inc
cmp
repz
add
mov
hlt
push
mov
and
mov
push
jo
add
xchg
js
mov
jb
pushf
fcomp
jecxz
test
cmc
retf
nop
test
cwde
sub
lock
call
xchg
mov
xchg
adc
loop
xor
scas
mov
add
stc
add
or
inc
sub
add
add
or
mov
cdq
jg
or
pop
cmp
add
arpl
fnstcw
cmp
and
jno
mov
fwait
imul
or
xor
xchg
mov
int
icebp
divps
adc
dec
add
add
cli
adc
or
and
add
push
adc
mov
add
adc
stc
xor
pop
sbb
aad
xchg
addr16
scas
pop
es
adc
movs
popf
mov
jno
retf
mov
in
fmul
lock
adc
push
test
jo
mov
dec
pop
mov
imul
and
int
inc
adc
inc
jae
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
aaa
add
add
or
add
or
or
sub
popa
mov
pushf
dec
mov
inc
and
mov
mov
inc
jge
adc
or
shl
sub
in
inc
sbb
mov
dec
adc
(bad)
mov
rcl
out
push
adc
test
dec
shl
push
aas
jle
clc
and
mov
and
sub
dec
adc
stos
fisubr
mov
clc
je
add
(bad)
cwde
mov
inc
pop
sbb
imul
sub
push
sub
sbb
iret
dec
pop
xchg
mov
mov
cs
std
xchg
sub
cmp
int3
lea
sbb
das
mov
ret
ret
mov
sti
lods
inc
pusha
call
adc
int
mov
mov
xlat
push
inc
pop
loope
test
stos
ficomp
jecxz
dec
mov
add
enter
arpl
jmp
(bad)
or
dec
hlt
mov
jmp
adc
add
pop
add
cmpxchg
movs
and
lock
pop
xchg
push
fwait
ss
fbld
pop
jnp
push
hlt
jecxz
xor
lahf
sub
leave
or
add
or
ret
jl
lea
sbb
mov
mov
mov
dec
add
std
shl
pop
sbb
lock
or
xchg
test
mov
push
or
in
out
lea
rol
lahf
loopne
and
lahf
or
dec
or
sub
out
xor
pusha
ret
dec
or
jo
add
cld
popa
dec
adc
ja
jge
shr
add
pop
sbb
adc
sub
in
out
jge
xor
xchg
sub
test
mov
add
push
fnstsw
cmps
inc
pusha
(bad)
call
(bad)
dec
add
add
stc
add
or
inc
sub
add
add
pop
add
or
add
or
lock
pop
enter
daa
cmp
pop
pusha
and
dec
and
das
sub
(bad)
mov
dec
add
push
sbb
dec
xor
or
cwde
jns
mov
jl
add
in
jg
test
cld
xor
inc
fs
loopne
xchg
add
in
shr
cmp
mov
or
in
jmp
dec
mov
bound
scas
gs
ret
inc
lods
add
jecxz
mov
ror
push
add
and
mov
xchg
hlt
mov
mov
add
xor
inc
setae
add
cs
xchg
sbb
mov
fidiv
mov
or
in
out
jge
dec
mov
clc
in
call
xor
dec
in
push
jo
(bad)
mov
inc
stos
sbb
cmp
add
das
mov
or
pop
sahf
xor
addr16
aaa
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
aaa
add
add
or
add
or
out
mov
sub
and
or
lock
xor
mov
push
mov
jge
leave
shl
leave
xchg
or
xor
mov
aas
mov
push
mov
(bad)
jmp
jae
int
and
add
cmp
test
sbb
bnd
inc
mov
rol
adc
in
sbb
cmp
pop
cmp
loop
sar
retf
icebp
and
enter
inc
scas
inc
imul
or
lods
xchg
aam
mov
clc
lds
or
cmp
imul
enter
sbb
imul
dec
add
xor
mov
mov
add
sbb
or
mov
sub
or
push
jecxz
mov
call
test
ret
jge
icebp
dec
call
scas
mov
scas
xchg
mov
ror
or
loopne
cs
pop
mov
xchg
add
mov
pop
js
jl
inc
aas
mov
in
push
or
sub
cmc
jge
dec
cmp
cmc
and
cs
les
adc
sbb
cmp
push
xor
fdiv
push
or
xchg
add
or
push
inc
adc
inc
pop
jl
mov
sbb
add
dec
push
pusha
xchg
add
push
aam
push
mov
add
push
mov
test
xchg
pop
(bad)
jae
xchg
or
add
dec
adc
ja
imul
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
jo
or
sub
mov
ret
push
dec
je
and
inc
inc
or
sbb
bound
sbb
arpl
or
rcr
mov
inc
adc
xor
push
and
dec
call
gs
enter
dec
xchg
shr
ss
dec
enter
mov
xor
pusha
mov
push
sbb
cld
bound
or
mov
call
scas
lds
cs
xchg
add
sbb
lock
cmps
scas
pop
add
mov
sbb
outs
popa
adc
pop
popa
xchg
fdiv
int
addr16
and
ret
push
xor
sbb
leave
repz
scas
cmp
je
jbe
mov
fimul
repnz
xor
int
add
sub
ja
das
sbb
cmp
cmp
dec
mov
jle
in
fsub
aad
popa
popa
ret
xor
adc
loope
shr
idiv
les
fistp
not
int
adc
sbb
inc
addr16
dec
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
aaa
add
add
or
add
or
or
sub
popa
mov
pushf
dec
mov
inc
and
mov
mov
inc
jge
adc
or
shl
sub
in
inc
sbb
mov
dec
adc
(bad)
mov
rcl
out
push
adc
test
dec
shl
push
aas
jle
clc
and
mov
and
sub
dec
adc
stos
fisubr
mov
clc
je
add
(bad)
cwde
mov
inc
pop
sbb
imul
sub
push
sub
sbb
iret
dec
pop
xchg
mov
mov
cs
std
xchg
sub
cmp
int3
lea
sbb
das
mov
ret
ret
mov
sti
lods
inc
pusha
call
adc
int
mov
mov
xlat
push
inc
pop
loope
test
stos
ficomp
jecxz
dec
mov
add
enter
xor
jne
mov
mov
jecxz
or
rol
xchg
and
ins
mov
push
(bad)
(bad)
cmp
add
ret
retf
sub
jl
leave
adc
jmp
xor
les
fstp
and
add
xchg
or
loopne
lahf
je
cvttps2pi
imul
fimul
repz
ja
push
sub
dec
lea
clc
leave
pusha
xchg
xchg
or
leave
sub
nop
or
push
push
popa
inc
ja
std
jae
push
lods
popa
inc
rcr
mov
add
cdq
push
lock
fnstsw
shl
hlt
test
test
std
stc
dec
xchg
sbb
pop
dec
push
xchg
mov
sbb
adc
ja
adc
add
stc
add
or
inc
sub
add
add
pop
add
or
add
or
lock
pop
enter
daa
cmp
pop
pusha
and
dec
and
das
sub
(bad)
mov
dec
add
push
sbb
dec
xor
or
cwde
jns
mov
jl
add
in
jg
test
cld
xor
inc
fs
loopne
xchg
add
in
shr
cmp
mov
or
in
jmp
dec
mov
bound
scas
gs
ret
inc
lods
add
jecxz
mov
ror
push
add
and
mov
xchg
hlt
mov
mov
add
xor
inc
setae
add
cs
xchg
sbb
mov
fidiv
mov
or
in
out
jge
dec
mov
clc
in
call
xor
dec
in
push
jo
(bad)
mov
inc
stos
sbb
cmp
add
das
mov
or
pop
sahf
xor
addr16
aaa
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
or
adc
add
cmp
std
or
mov
rol
movs
and
adc
(bad)
lock
adc
aam
push
rol
adc
push
or
lods
mov
pop
or
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
or
adc
add
data16
or
popf
cmp
lahf
xchg
jmp
or
mov
push
adc
js
inc
or
jge
cmp
mov
aas
jle
clc
and
xor
loop
and
cmps
add
adc
lahf
dec
inc
mov
in
cmps
or
dec
popf
sbb
add
add
stc
add
or
inc
sub
add
add
or
add
or
adc
sub
add
xchg
ds
push
or
clc
cmc
nop
mov
call
aas
xchg
add
mov
mov
fimul
cmp
(bad)
leave
test
(bad)
jns
imul
xchg
cmp
inc
add
cs
imul
xor
mov
xor
cmp
loope
or
pusha
ret
mov
and
sub
dec
pop
push
inc
in
mov
xchg
out
push
or
iret
nop
ret
pop
jge
jp
sbb
mov
xor
fdiv
xlat
cs
(bad)
in
mov
adc
xor
mov
repnz
int3
cdq
mov
cmc
inc
arpl
loopne
fmul
add
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
scas
loope
adc
dec
mov
inc
or
sbb
xchg
mov
xchg
shl
hlt
push
mov
cdq
lds
inc
or
sub
in
nop
or
push
inc
and
fwait
pop
push
jmp
jmp
cmp
daa
dec
mov
fmul
inc
mov
(bad)
xor
test
dec
cmp
dec
inc
mov
pusha
and
add
pop
out
jmp
popa
fs
clc
dec
pop
add
loope
mov
scas
push
sbb
xchg
adc
les
mov
adc
mov
adc
add
cmps
test
cmp
ins
and
ror
clc
xchg
cmps
lahf
mov
je
and
sbb
ds
mov
pop
add
movs
xor
or
pop
sahf
daa
stc
push
pop
shr
fcom
adc
pop
mov
(bad)
adc
enter
add
test
nop
clc
cmc
push
add
cmp
ror
into
and
jl
xor
and
je
adc
sub
adc
sub
add
adc
shl
and
add
add
pop
mov
lock
inc
push
push
rol
aas
xor
or
xor
mov
pop
mov
mov
xor
fnstsw
mov
sub
int3
add
xor
icebp
dec
rdtsc
push
imul
or
cld
(bad)
fld
mov
push
pop
mov
and
and
repz
sub
push
add
xchg
inc
push
and
outs
push
cmp
push
movs
(bad)
adc
icebp
or
shl
mov
jmp
pop
mov
xor
sbb
mov
or
pusha
inc
xchg
aas
or
rol
xor
adc
add
xor
ret
cld
xor
add
or
or
mov
rcl
xor
loope
sub
and
cmp
into
push
pop
jbe
dec
add
cmp
add
hlt
add
leave
ss
jl
sar
inc
sbb
push
nop
adc
mov
retf
aas
sbb
and
pop
sbb
and
mov
dec
or
or
daa
ret
pop
xor
mov
loope
and
jg
mov
add
add
push
rol
aas
adc
xor
js
rcl
ror
mov
lods
icebp
mov
and
rcr
aas
push
or
sbb
and
cmps
test
(bad)
bound
sub
add
xor
(bad)
xchg
std
dec
add
jno
sbb
cld
adc
sub
mov
mov
aas
xor
dec
daa
adc
out
(bad)
adc
dec
fld
aas
inc
xchg
ret
rol
sub
clc
arpl
xchg
sub
popa
add
pop
adc
sar
shr
push
xchg
arpl
adc
push
enter
mov
inc
sbb
inc
call
push
xchg
pop
adc
iret
inc
aas
mov
mov
ds
lods
dec
ret
push
xacquire
mov
popf
push
jle
add
adc
cld
and
fidivr
inc
xor
jg
mov
shl
dec
aad
cs
fstp
xchg
push
inc
inc
and
jmp
aas
adc
or
cwde
sar
cmp
xor
pop
(bad)
cwde
ror
lea
ins
ret
(bad)
int3
jnp
std
cwde
addr16
or
rol
jb
jl
(bad)
adc
xor
or
popa
add
and
push
xchg
or
daa
dec
inc
mov
and
dec
add
jle
or
add
movs
add
dec
adc
ins
clc
(bad)
jbe
loopne
jle
dec
adc
mov
jno
push
inc
push
or
das
ds
inc
or
nop
add
stc
loop
or
xchg
xor
in
sbb
mov
mov
ins
(bad)
adc
(bad)
and
or
fadd
dec
ret
mov
ret
pop
xchg
mov
sbb
or
pop
mov
or
xchg
jb
sub
mov
out
test
push
add
aam
add
loopne
push
aam
add
and
push
repz
cwde
sub
in
jl
retf
xor
dec
movs
es
and
(bad)
sbb
bound
mov
add
(bad)
push
mov
or
or
inc
adc
repz
xor
xor
clc
cmp
sub
inc
mov
add
mov
mov
and
(bad)
cmp
imul
dec
cdq
retf
mov
add
inc
jle
or
jo
push
clc
mov
add
mov
xor
pushf
mov
cmp
outs
adc
sbb
rol
adc
push
fs
(bad)
or
pop
pop
adc
add
call
xor
bound
cli
push
mov
dec
mov
or
ret
sbb
pop
jl
push
test
out
jl
add
add
stc
fxch
mov
mov
add
xchg
mov
add
adc
pop
int3
pusha
sbb
mov
push
adc
or
mov
sbb
jno
inc
test
or
mov
push
or
mov
sub
fimul
pop
add
repnz
dec
mov
and
test
sub
mov
or
pop
mov
mov
jge
data16
pop
push
jb
call
mov
loopne
adc
sub
pusha
pop
in
loopne
push
sbb
cmp
out
xor
mov
test
sbb
sub
add
sub
inc
add
add
add
es
xor
cmc
das
xchg
mov
adc
out
inc
jp
push
jbe
or
and
gs
rol
inc
lock
jb
ret
loope
push
add
add
dec
loop
adc
inc
or
and
push
pushf
inc
push
dec
mov
xchg
aas
cmp
sub
jp
add
je
movhps
cdq
and
xchg
xor
nop
pop
mov
test
or
cli
add
push
enter
into
lahf
pop
ret
ror
mov
xor
sub
loope
ret
sbb
fadd
sub
xor
mov
cmp
mov
pusha
in
add
mov
jo
jb
mov
or
add
les
push
mov
add
mov
ja
mov
add
inc
nop
pop
je
add
inc
pop
daa
call
inc
add
in
xchg
adc
or
psubusb
push
neg
fsub
fld
mov
aam
mov
bound
imul
or
ret
and
lock
inc
popa
lods
mov
sbb
push
lods
inc
jl
jmp
or
sbb
loopne
cmp
mov
inc
or
enter
ds
mov
movs
add
test
(bad)
or
adc
and
add
or
inc
sub
add
cmp
or
add
or
mov
rol
nop
mov
dec
pushf
dec
mov
inc
jg
and
mov
inc
mov
and
in
sbb
lock
xchg
mov
xchg
add
push
and
shl
retf
mov
xor
bound
xchg
sub
leave
shr
add
ror
mov
fcom
cmps
add
pusha
clc
shl
mov
cs
mov
xchg
add
in
loope
test
call
add
(bad)
in
pusha
ret
(bad)
mov
mov
(bad)
movs
stc
out
sub
mov
cdq
pop
mov
mov
xchg
mov
cdq
adc
mov
pop
dec
outs
pop
or
add
dec
fidivr
mov
dec
or
and
sbb
iret
pop
and
popf
sub
xchg
arpl
mov
push
sub
adc
cmps
mov
mov
into
scas
in
or
ds
jmp
add
cli
hlt
iret
push
rcr
les
add
push
adc
fidivr
aam
gs
dec
sub
mov
fimul
push
call
nop
iret
mov
and
adc
not
inc
or
pop
pop
sbb
test
add
push
xor
leave
push
lahf
adc
rcl
inc
enter
sbb
arpl
pop
aas
or
push
dec
rol
and
aas
inc
(bad)
xor
cdq
add
dec
call
and
mov
nop
push
or
and
inc
jnp
and
xor
mov
cmps
add
and
fisub
inc
dec
and
inc
test
add
xchg
push
sub
cmc
clc
test
nop
dec
nop
mov
mov
sub
jbe
dec
adc
inc
mov
ret
adc
inc
add
pop
xchg
or
jge
rol
imul
test
cmps
inc
aam
inc
mov
sti
adc
push
push
mov
cmps
cmp
aam
inc
dec
inc
hlt
dec
xor
add
add
jbe
sub
retf
push
test
sub
shl
sub
mov
inc
cmp
je
fcmovne
mov
and
inc
(bad)
add
lock
lods
out
scas
pushf
mov
and
dec
or
dec
lds
adc
push
mov
pusha
mov
push
bound
dec
ret
sbb
push
mov
push
xor
rcl
add
sub
imul
or
or
out
nop
rcl
or
adc
sar
push
mov
inc
push
ret
outs
xchg
jo
fsubr
jno
inc
in
jmp
add
daa
fs
pusha
add
cld
jecxz
inc
jb
shl
xor
jns
dec
xchg
cmp
jo
retf
or
pop
push
add
sar
pop
cmp
jae
iret
or
pusha
enter
cmp
push
mov
jge
or
sub
and
add
mov
dec
aaa
sub
dec
sbb
mov
pop
call
cmp
nop
dec
inc
add
repz
scas
sti
aas
inc
pop
dec
je
inc
sbb
jge
test
and
mov
cli
jmp
or
inc
sbb
lock
dec
js
retf
popf
add
mov
aaa
cwde
and
wrmsr
and
shl
jg
sbb
and
icebp
int3
ja
adc
add
jo
pop
xor
or
jmp
test
push
icebp
or
push
movs
imul
and
ror
cmp
leave
add
fwait
fwait
xchg
dec
cld
jecxz
mov
shl
xor
pop
fisttp
ds
adc
mov
inc
lock
add
adc
add
dec
mov
pusha
mov
pop
lea
das
inc
movs
sbb
mov
xor
push
sub
push
pushf
push
add
outs
adc
sbb
arpl
add
cmp
int3
cmp
and
mov
adc
dec
sbb
inc
xchg
movs
mov
repnz
scas
in
dec
inc
add
and
add
or
inc
sub
add
add
add
add
or
lock
add
sub
popa
and
popf
jle
push
push
cli
push
sbb
mov
lock
jl
push
test
lea
clc
jae
mov
inc
push
mov
mov
pusha
adc
fcomp
lahf
dec
ds
loopne
mov
dec
enter
push
imul
mov
bound
cmp
or
call
inc
hlt
pop
mov
imul
inc
mov
call
inc
and
ins
imul
jl
mov
add
add
xlat
mov
push
clc
aaa
ins
jno
push
inc
inc
clc
adc
popa
pusha
mov
add
mov
xor
xor
or
sbb
mov
out
push
add
add
gs
mov
adc
or
mov
adc
pop
ret
es
sub
(bad)
pop
loopne
push
popf
cmp
in
ror
or
aaa
shr
lahf
retf
or
mov
sar
add
std
xchg
inc
push
cmp
and
imul
sbb
jg
int3
xor
dec
pop
mov
push
outs
inc
xor
inc
and
rcl
lahf
dec
and
cmc
ror
popf
lock
push
adc
inc
cmp
adc
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
aas
jg
adc
pop
enter
adc
dec
pushf
sub
and
xor
js
loopne
lea
daa
pop
test
adc
push
and
inc
xchg
xor
es
and
mov
dec
lahf
into
xchg
cmp
and
lahf
inc
inc
fimul
and
jb
and
or
dec
cmp
shr
mov
sub
fwait
lock
pop
xchg
repnz
shr
rol
mov
and
popf
lahf
(bad)
push
fist
mov
adc
cld
mov
xchg
rol
jno
sti
iret
adc
or
xor
xchg
into
rol
and
rcl
in
mov
sub
dec
xor
ret
aaa
dec
and
jne
push
(bad)
mov
push
pop
sub
enter
cld
cmp
popa
icebp
loop
mov
pusha
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
add
sub
and
inc
inc
cmp
pusha
loopne
mov
sub
(bad)
mov
inc
push
adc
cmps
adc
inc
mov
mov
into
and
jl
xor
retf
fwait
push
cmp
xor
inc
movs
iret
mov
xchg
or
shl
cli
hlt
sub
push
mov
push
in
mov
xor
scas
test
les
add
mov
pop
ss
and
scas
(bad)
mov
sti
hlt
xchg
add
pop
inc
jo
loope
sbb
outs
in
jg
push
xchg
mov
test
sbb
inc
in
xchg
in
(bad)
jg
and
call
pop
data16
xlat
leave
popa
mov
sbb
mov
ret
or
xor
mov
and
aas
cmp
nop
iret
int
add
test
xor
add
inc
push
jmp
pop
ins
ins
std
rcl
repz
jg
sub
and
int3
dec
shl
aas
aam
xor
iret
daa
add
clc
iret
and
adc
inc
and
push
aad
inc
inc
add
inc
inc
(bad)
rcl
setge
rol
and
mov
adc
ss
inc
lea
or
push
cmp
mov
mov
jecxz
inc
mov
or
stc
add
or
inc
sub
add
add
add
add
or
lock
aas
jg
adc
pop
enter
xchg
icebp
and
mov
sbb
js
mov
xor
mov
lds
cdq
repnz
xchg
es
ret
jno
(bad)
mov
hlt
fnstcw
and
mov
and
jg
jle
or
jecxz
adc
and
mov
dec
push
add
adc
adc
adc
push
sbb
xor
or
or
mov
mov
je
leave
mov
push
and
in
or
popa
mov
xor
gs
popa
xchg
mov
xchg
push
dec
sub
jmp
adc
mov
pop
mov
xchg
das
inc
loope
mov
lods
in
adc
adc
retf
shl
adc
push
xor
push
sar
push
je
ret
das
and
adc
inc
cmp
jl
ret
and
add
or
inc
sub
add
add
add
add
or
add
or
lock
add
sub
and
inc
inc
cmp
pusha
loopne
mov
sub
(bad)
mov
inc
push
adc
cmps
adc
inc
mov
mov
into
and
jl
xor
retf
fwait
push
cmp
xor
inc
movs
iret
mov
xchg
or
shl
cli
hlt
sub
push
mov
push
in
mov
xor
scas
test
les
add
mov
pop
ss
and
scas
(bad)
mov
mov
add
adc
pop
and
pop
xchg
jmp
jmp
mov
push
adc
add
sbb
cdq
xor
and
jae
and
cwde
jmp
xchg
or
loop
sub
and
(bad)
outs
jmp
lock
xchg
or
fsqrt
jmp
movs
repnz
or
aaa
ins
mov
inc
test
inc
rcl
fimul
js
(bad)
ficomp
mov
inc
sbb
add
inc
sub
jno
xchg
jae
inc
aas
je
pop
pop
xchg
cmc
mov
dec
cmp
rcl
pop
adc
mov
icebp
iret
sbb
xor
sbb
sbb
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
aas
jg
adc
pop
enter
adc
dec
pushf
sub
and
xor
js
loopne
lea
daa
pop
test
adc
push
and
inc
xchg
xor
es
and
mov
dec
lahf
into
xchg
cmp
and
lahf
inc
inc
fimul
in
dec
push
push
push
adc
and
dec
add
mov
and
inc
mov
int
and
neg
mov
dec
cmp
dec
lds
mov
xchg
fistp
in
int3
or
popa
and
fcmovnbe
jmp
cwde
xor
mov
inc
or
imul
and
cmp
mov
(bad)
ss
jge
adc
push
mov
fldenv
pushf
cli
iret
ror
add
lds
dec
leave
rcr
cld
sti
inc
nop
stc
mov
mov
mov
rcl
mov
pop
loope
repnz
add
popf
jg
pop
std
or
add
stc
add
or
inc
sub
add
add
add
add
or
lock
add
sub
popa
and
popf
jle
push
push
cli
push
sbb
mov
lock
jl
push
test
lea
clc
jae
mov
inc
push
mov
mov
pusha
adc
fcomp
lahf
dec
ds
loopne
mov
dec
enter
push
imul
mov
bound
cmp
or
call
inc
hlt
pop
mov
imul
inc
mov
call
inc
and
ins
imul
jl
mov
add
add
xlat
mov
push
clc
aaa
ins
jno
push
inc
inc
clc
adc
popa
pusha
mov
add
mov
xor
xor
or
sbb
mov
out
push
add
add
gs
mov
adc
or
mov
adc
pop
ret
es
sub
(bad)
pop
loopne
push
popf
cmp
in
ror
or
aaa
shr
lahf
retf
or
mov
sar
add
std
xchg
inc
push
cmp
and
imul
sbb
jg
int3
xor
dec
pop
mov
push
outs
inc
xor
inc
and
rcl
lahf
dec
and
cmc
ror
popf
lock
push
adc
inc
cmp
adc
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
aas
jg
adc
pop
enter
adc
dec
pushf
sub
and
xor
js
loopne
lea
daa
pop
test
adc
push
and
inc
xchg
xor
es
and
mov
dec
lahf
into
xchg
cmp
and
lahf
inc
inc
fimul
and
jb
and
or
dec
cmp
shr
mov
sub
fwait
lock
pop
xchg
repnz
shr
rol
mov
and
popf
lahf
(bad)
push
fist
mov
adc
cld
mov
xchg
rol
jno
sti
iret
adc
or
xor
xchg
into
rol
and
rcl
in
mov
sub
dec
xor
ret
aaa
dec
and
jne
push
(bad)
mov
push
pop
sub
enter
cld
cmp
popa
icebp
loop
mov
pusha
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
add
sub
and
inc
inc
cmp
pusha
loopne
mov
sub
(bad)
mov
inc
push
adc
cmps
adc
inc
mov
mov
into
and
jl
xor
retf
fwait
push
cmp
xor
inc
movs
iret
mov
xchg
or
shl
cli
hlt
sub
push
mov
push
in
mov
xor
scas
test
les
add
mov
pop
ss
and
scas
(bad)
mov
sti
hlt
xchg
add
pop
inc
jo
loope
sbb
outs
in
jg
push
xchg
mov
test
sbb
inc
in
xchg
in
(bad)
jg
and
call
pop
data16
xlat
leave
popa
mov
sbb
mov
ret
or
xor
mov
and
aas
cmp
nop
iret
int
add
test
xor
add
inc
push
jmp
pop
ins
ins
std
rcl
repz
jg
sub
and
int3
dec
shl
aas
aam
xor
iret
daa
add
clc
iret
and
adc
inc
and
push
aad
inc
inc
add
inc
inc
(bad)
rcl
setge
rol
and
mov
adc
ss
inc
lea
or
push
cmp
mov
mov
jecxz
inc
mov
or
stc
add
or
inc
sub
add
add
add
add
or
lock
aas
jg
adc
pop
enter
xchg
icebp
and
mov
sbb
js
mov
xor
mov
lds
cdq
repnz
xchg
es
ret
jno
(bad)
mov
hlt
fnstcw
and
mov
and
jg
jle
or
jecxz
adc
and
mov
dec
push
add
adc
adc
adc
push
sbb
xor
or
or
mov
mov
je
leave
mov
push
and
in
or
popa
mov
xor
gs
popa
xchg
mov
xchg
push
dec
sub
jmp
adc
mov
pop
mov
xchg
das
inc
loope
mov
lods
in
adc
adc
retf
shl
adc
push
xor
push
sar
push
je
ret
das
and
adc
inc
cmp
jl
ret
and
add
or
inc
sub
add
add
add
add
or
add
or
lock
add
sub
and
inc
inc
cmp
pusha
loopne
mov
sub
(bad)
mov
inc
push
adc
cmps
adc
inc
mov
mov
into
and
jl
xor
retf
fwait
push
cmp
xor
inc
movs
iret
mov
xchg
or
shl
cli
hlt
sub
push
mov
push
in
mov
xor
scas
test
les
add
mov
pop
ss
and
scas
(bad)
mov
mov
add
adc
pop
and
pop
xchg
jmp
jmp
mov
push
adc
add
sbb
cdq
xor
and
jae
and
cwde
jmp
xchg
or
loop
sub
and
(bad)
outs
jmp
lock
xchg
or
fsqrt
jmp
movs
repnz
or
aaa
ins
mov
inc
test
inc
rcl
fimul
js
(bad)
ficomp
mov
inc
sbb
add
inc
sub
jno
xchg
jae
inc
aas
je
pop
pop
xchg
cmc
mov
dec
cmp
rcl
pop
adc
mov
icebp
iret
sbb
xor
sbb
sbb
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
aas
jg
adc
pop
enter
adc
dec
pushf
sub
and
xor
js
loopne
lea
daa
pop
test
adc
push
and
inc
xchg
xor
es
and
mov
dec
lahf
into
xchg
cmp
and
lahf
inc
inc
fimul
and
jb
and
or
dec
cmp
shr
mov
sub
fwait
lock
or
add
cwde
xor
jb
aas
or
add
imul
pusha
daa
popf
push
add
or
jle
jle
push
in
shl
add
(bad)
xchg
or
movs
shl
ror
adc
mov
adc
adc
shl
sbb
or
iret
mov
push
add
call
addr16
fcomip
in
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
add
sub
and
inc
inc
cmp
pusha
loopne
mov
sub
(bad)
mov
inc
push
adc
cmps
adc
inc
mov
mov
into
and
jl
xor
retf
fwait
push
cmp
xor
inc
movs
iret
mov
xchg
or
shl
cli
hlt
sub
push
mov
push
in
mov
xor
scas
test
les
add
mov
pop
ss
and
scas
(bad)
mov
mov
add
adc
pop
and
pop
xchg
jmp
jmp
mov
push
adc
add
sbb
cdq
xor
and
jae
and
cwde
jmp
xchg
or
loop
sub
and
(bad)
outs
jmp
lock
xchg
or
fsqrt
jmp
movs
repnz
or
aaa
ins
mov
inc
test
inc
rcl
fimul
js
(bad)
ficomp
mov
inc
sbb
add
inc
sub
jno
xchg
jae
inc
aas
je
pop
pop
xchg
cmc
mov
dec
cmp
rcl
pop
adc
mov
icebp
iret
sbb
xor
sbb
sbb
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
aas
jg
adc
pop
enter
adc
dec
pushf
sub
and
xor
js
loopne
lea
daa
pop
test
adc
push
and
inc
xchg
xor
es
and
mov
dec
lahf
into
xchg
cmp
and
lahf
inc
inc
fimul
in
dec
push
push
push
adc
and
dec
add
mov
and
inc
mov
int
and
neg
mov
dec
cmp
dec
lds
mov
xchg
fistp
in
int3
or
popa
and
fcmovnbe
jmp
cwde
xor
mov
inc
or
imul
and
cmp
mov
(bad)
ss
jge
adc
push
mov
fldenv
pushf
cli
iret
ror
add
lds
dec
leave
rcr
cld
sti
inc
nop
stc
mov
mov
mov
rcl
mov
pop
loope
repnz
add
popf
jg
pop
std
or
add
stc
add
or
inc
sub
add
add
add
add
or
lock
add
sub
popa
and
popf
jle
push
push
cli
push
sbb
mov
lock
jl
push
test
lea
clc
jae
mov
inc
push
mov
mov
pusha
adc
fcomp
lahf
dec
ds
loopne
mov
dec
enter
push
imul
mov
bound
cmp
or
call
inc
hlt
pop
mov
imul
inc
mov
call
inc
and
ins
imul
jl
mov
add
add
xlat
mov
push
clc
aaa
ins
jno
push
inc
inc
clc
adc
popa
pusha
mov
add
mov
xor
xor
or
sbb
mov
out
push
add
add
gs
mov
adc
or
mov
adc
pop
ret
es
sub
(bad)
pop
loopne
push
popf
cmp
in
ror
or
aaa
shr
lahf
retf
or
mov
sar
add
std
xchg
inc
push
cmp
and
imul
sbb
jg
int3
xor
dec
pop
mov
push
outs
inc
xor
inc
and
rcl
lahf
dec
and
cmc
ror
popf
lock
push
adc
inc
cmp
adc
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
aas
jg
adc
pop
enter
adc
dec
pushf
sub
and
xor
js
loopne
lea
daa
pop
test
adc
push
and
inc
xchg
xor
es
and
mov
dec
lahf
into
xchg
cmp
and
lahf
inc
inc
fimul
and
jb
and
or
dec
cmp
shr
mov
sub
fwait
lock
pop
xchg
repnz
shr
rol
mov
and
popf
lahf
(bad)
push
fist
mov
adc
cld
mov
xchg
rol
jno
sti
iret
adc
or
xor
xchg
into
rol
and
rcl
in
mov
sub
dec
xor
ret
aaa
dec
and
jne
push
(bad)
mov
push
pop
sub
enter
cld
cmp
popa
icebp
loop
mov
pusha
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
add
sub
and
inc
inc
cmp
pusha
loopne
mov
sub
(bad)
mov
inc
push
adc
cmps
adc
inc
mov
mov
into
and
jl
xor
retf
fwait
push
cmp
xor
inc
movs
iret
mov
xchg
or
shl
cli
hlt
sub
push
mov
push
in
mov
xor
scas
test
les
add
mov
pop
ss
and
scas
(bad)
mov
sti
hlt
xchg
add
pop
inc
jo
loope
sbb
outs
in
jg
push
xchg
mov
test
sbb
inc
in
xchg
in
(bad)
jg
and
call
pop
data16
xlat
leave
popa
mov
sbb
mov
ret
or
xor
mov
and
aas
cmp
nop
iret
int
add
test
xor
add
inc
push
jmp
pop
ins
ins
std
rcl
repz
jg
sub
and
int3
dec
shl
aas
aam
xor
iret
daa
add
clc
iret
and
adc
inc
and
push
aad
inc
inc
add
inc
inc
(bad)
rcl
setge
rol
and
mov
adc
ss
inc
lea
or
push
cmp
mov
mov
jecxz
inc
mov
or
add
adc
add
add
add
dec
add
pop
add
add
popa
xor
sbb
adc
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
aaa
add
add
inc
scas
mov
iret
scas
scas
mov
in
call
mov
and
stc
mov
push
(bad)
in
add
lods
or
(bad)
mov
mov
xchg
push
sub
lods
add
std
mov
in
in
in
jmp
add
add
mov
sti
ror
sbb
pop
xor
(bad)
stc
xchg
setae
mov
aam
leave
fdivrp
cli
jmp
xchg
gs
call
add
inc
(bad)
cli
push
(bad)
sti
test
lods
aad
stc
jne
pop
ins
outs
retf
addr16
add
mov
enter
mov
test
mov
dec
mov
jmp
add
mov
xchg
push
add
jne
push
pop
inc
xchg
test
cdq
cwde
fnsave
cmps
arpl
(bad)
sti
mov
popa
or
in
repz
add
daa
int
daa
ins
mov
imul
fdivrp
jmp
leave
jns
test
add
out
fmul
(bad)
addr16
lods
fcom
jo
mov
sti
mov
jmp
(bad)
clc
ss
jecxz
(bad)
cld
imul
add
std
retf
add
cld
xlat
out
out
idiv
loope
add
out
mov
xlat
push
mov
(bad)
xor
mov
dec
mov
in
jmp
sti
cmps
add
out
add
aad
dec
mov
mov
jecxz
mov
cdq
das
(bad)
stc
dec
sbb
sbb
(bad)
(bad)
in
ss
cs
xchg
dec
add
(bad)
jmp
outs
(bad)
fwait
mov
out
push
add
retf
fucom
(bad)
call
mov
jmp
(bad)
dec
mov
pop
std
div
and
mov
(bad)
in
or
xchg
or
(bad)
fmulp
pop
div
(bad)
std
mov
out
and
out
repz
sbb
jle
push
add
mov
cwde
mov
ins
mov
(bad)
out
lea
jmp
sti
mov
cmc
stos
add
out
call
in
aam
out
neg
std
int3
or
xchg
adc
into
shr
xchg
mov
test
push
cld
in
rol
lock
in
jmp
(bad)
jmp
neg
or
scas
idiv
ret
pop
repz
mov
or
(bad)
pop
cmp
add
jmp
add
jecxz
jmp
(bad)
repnz
out
jmp
outs
adc
inc
imul
stos
or
cmps
or
cmp
mov
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
(bad)
sti
sti
div
sti
(bad)
sti
out
jge
dec
or
repz
imul
out
add
add
lock
pop
shl
cwde
in
fisttp
mov
jmp
inc
jmp
inc
add
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
sub
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
int
mov
adc
icebp
loopne
add
mov
or
leave
xchg
inc
add
lods
pop
jne
xchg
jmp
rcr
mov
or
xor
cdq
(bad)
adc
movs
retf
inc
sbb
or
inc
dec
ins
or
jae
in
pop
rol
sub
add
xchg
jnp
add
outs
pop
and
xor
rol
repz
adc
sub
adc
pop
call
jb
dec
les
pop
dec
nop
rol
adc
pop
add
sbb
retf
lds
es
push
and
cmp
stos
fbld
jp
dec
dec
mov
test
inc
xor
retf
repnz
xor
cmp
rcl
sbb
cwde
jmp
jne
iret
sub
or
push
(bad)
pushf
jnp
aam
push
jo
dec
les
dec
nop
movs
sbb
push
pop
add
js
test
int
test
jae
aas
out
pop
and
popa
in
dec
and
pop
rol
or
xor
pshufw
inc
and
sbb
push
xor
add
test
movs
sbb
mov
js
inc
add
and
xchg
(bad)
mov
nop
mov
aam
or
nop
sub
add
xor
inc
xchg
cs
and
push
add
xor
popf
xor
fsub
sbb
and
or
rol
add
push
loopne
add
or
lds
add
rol
les
(bad)
cmp
pushf
dec
(bad)
test
add
or
mov
xchg
inc
and
ror
out
or
sbb
push
mov
xchg
stos
and
push
xor
pop
sub
in
addr16
add
(bad)
or
in
nop
mov
(bad)
xchg
mov
test
ins
push
cmp
shr
mov
sbb
pop
cmp
add
jl
fidivr
dec
dec
sub
and
pop
mov
inc
adc
and
test
int3
push
xchg
or
xchg
jae
sar
add
xchg
add
sub
ror
add
dec
ins
add
push
sbb
popf
jmp
in
add
add
mov
push
jl
inc
push
sbb
pop
retf
sub
or
leave
push
push
int
jmp
push
add
aad
push
or
lds
push
adc
push
pop
push
mov
jae
aas
mov
call
sub
lock
int
add
jo
paddd
sub
stos
inc
or
sti
rol
dec
repz
or
and
adc
adc
pop
add
push
pop
and
popf
push
inc
ret
lahf
push
sbb
dec
or
or
push
jp
jmp
aas
jp
push
test
mov
pusha
imul
cmp
mov
jge
rcr
pop
and
sbb
xchg
xchg
mov
and
add
and
add
sar
add
add
add
mov
adc
pop
test
inc
adc
(bad)
add
inc
add
mov
pop
pusha
enter
add
out
pop
pushf
or
xor
push
rol
xor
lock
xor
xchg
dec
xor
mov
sbb
add
rol
push
add
inc
int3
prefetch
fsub
push
adc
inc
loopne
cs
and
mov
fild
mov
xor
push
adc
sbb
rol
pop
cmps
sub
popa
or
loope
xchg
cwde
push
dec
mov
sbb
and
js
ror
add
adc
or
cs
mov
call
mov
xchg
sub
cmps
dec
inc
adc
jo
rol
inc
add
lds
or
xchg
loope
xchg
sbb
push
xor
rol
cmp
test
adc
rol
and
sbb
inc
push
mov
pushw
into
add
rcl
pop
add
push
add
mov
or
mov
popf
call
jp
inc
or
push
inc
add
and
add
inc
and
xor
or
mov
sub
inc
push
and
adc
shl
ss
adc
mov
test
adc
les
push
cmc
test
add
pop
xchg
sub
sbb
push
xchg
jp
add
mov
adc
adc
pusha
sbb
adc
pop
and
pop
push
cmp
push
xchg
fsub
aaa
dec
call
or
and
adc
test
stos
or
nop
test
add
or
sbb
mov
mov
xchg
push
or
fadd
adc
push
add
inc
adc
xor
inc
rol
test
push
sub
push
cmps
or
shr
inc
add
add
or
inc
add
fcom
and
sub
mov
mov
xchg
imul
ror
call
add
adc
adc
and
xchg
and
pop
xor
out
add
and
push
fsub
or
or
retf
jbe
mov
lods
shl
push
add
je
add
inc
xor
xor
jns
ffree
adc
rol
inc
and
jp
jmp
add
add
ins
fcom
pop
adc
imul
sbb
jle
pop
xor
jle
and
ret
and
rcl
aam
or
test
push
mov
sbb
pop
daa
aam
sbb
test
(bad)
push
add
and
xchg
das
cmp
dec
or
dec
mov
and
pop
add
push
data16
inc
or
add
push
fadd
pusha
push
data16
or
fsub
test
push
fstp
inc
sbb
cwde
sti
gs
rol
mov
inc
sbb
jbe
xchg
or
xor
push
test
cmp
sub
pop
ins
push
addr16
and
add
jns
pop
sub
test
sub
push
and
add
pop
fdiv
cld
loope
xor
jbe
add
add
or
xor
xchg
add
add
xor
xor
and
add
or
inc
sub
add
add
add
add
or
add
or
push
loopne
inc
(bad)
adc
repnz
cmps
nop
ret
inc
fs
mov
lds
mov
xchg
sbb
(bad)
xor
or
mov
ret
push
mov
(bad)
cmp
in
add
mov
std
jl
pop
nop
xchg
fcomp
push
or
or
xor
test
mov
hlt
or
inc
add
int3
cmp
xchg
ins
in
mov
ss
xor
sbb
and
in
aaa
sbb
cwde
mov
push
add
adc
inc
and
out
loopne
sbb
sbb
and
rol
adc
mov
adc
or
out
popf
pop
out
sbb
or
popa
mov
mov
xchg
popa
cs
mov
in
cdq
sti
xchg
std
pushf
outs
loope
xchg
sti
jmp
add
call
or
mov
imul
lea
xchg
rcl
add
mov
adc
push
add
and
mov
aam
ror
cmp
inc
inc
les
or
bswap
lock
(bad)
jecxz
mov
cwde
jecxz
push
jb
pushf
(bad)
fisttp
lahf
nop
pop
push
sbb
jl
pop
inc
sub
inc
adc
cmp
mov
mov
test
mov
mov
adc
cmp
into
inc
push
xchg
lds
inc
icebp
(bad)
xchg
paddusb
push
cmp
retf
xor
cmp
inc
xchg
fld
sbb
cmp
shl
xchg
mov
cwde
dec
mov
lahf
pop
ror
dec
lahf
cwde
aam
add
jg
lock
mov
loopne
and
icebp
mov
test
fldenv
adc
mov
call
jp
add
dec
(bad)
je
sub
add
mov
mov
pop
scas
push
fbstp
rol
je
push
je
xor
dec
push
pusha
pop
shl
cmp
test
mov
(bad)
sbb
add
add
je
stos
mov
mov
add
sub
mov
and
xor
imul
popf
out
mov
imul
sbb
inc
rcr
pop
cmp
test
mov
cdq
jbe
movs
pusha
or
shl
mov
and
mov
sub
fdivr
add
inc
cmp
fs
or
mov
cmp
mov
rcl
shl
sbb
or
or
rol
or
movs
mov
add
call
sbb
add
cmp
push
and
adc
int3
adc
dec
sub
mov
push
pop
sub
mov
push
or
lds
add
sub
ins
arpl
loop
jge
aad
sahf
cwde
lock
sbb
lock
and
adc
inc
or
outs
xor
mov
or
nop
inc
add
cld
mov
loope
adc
cmps
add
and
pop
jp
aad
inc
xor
push
lea
sbb
push
inc
add
sbb
push
add
inc
aam
xor
add
lock
neg
jl
retf
and
mov
mov
xor
xor
inc
add
pcmpgtb
cmp
add
sbb
or
pusha
or
inc
add
or
add
adc
icebp
les
cmp
stos
inc
cmp
lock
adc
nop
add
dec
adc
jb
add
and
sbb
addr16
inc
rol
and
or
jno
xor
dec
add
lods
cwde
add
adc
and
xchg
and
or
or
inc
shl
les
mov
test
movs
ret
or
fcom
pop
mov
test
xor
or
jl
or
and
cmp
les
xlat
push
add
mov
inc
add
or
adc
pop
sbb
pop
aam
pop
nop
add
adc
mov
mov
mov
mov
jg
adc
test
ds
loop
xchg
sub
or
and
add
or
inc
sub
add
add
add
add
or
add
or
add
or
scas
popa
ret
test
and
add
and
pop
and
shl
jle
inc
fcom
jecxz
push
xchg
jg
hlt
leave
int3
ret
inc
int
xchg
add
xor
int3
ss
or
xchg
or
inc
xlat
adc
inc
leave
jo
icebp
pop
add
loope
call
sub
loopne
sbb
pop
or
sbb
xor
loope
add
and
and
rol
inc
(bad)
in
pop
mov
pop
mov
outs
imul
fistp
add
scas
add
and
sbb
sbb
push
cmps
movs
xor
aam
(bad)
pop
pop
in
jmp
sub
add
push
inc
repnz
mov
push
cmps
mov
mov
jns
dec
in
add
push
xor
mov
into
cmp
add
push
jo
xor
ret
jae
loopne
pop
call
jae
add
push
aas
and
jnp
cmp
cmps
popf
outs
or
test
adc
je
sbb
xchg
and
add
pop
lock
fs
and
xchg
popa
pop
int
jle
mov
(bad)
int3
aas
sub
ret
jae
add
arpl
jne
adc
pop
adc
jae
add
ss
adc
inc
jmp
mov
pop
dec
sub
movs
xor
ins
mov
dec
cmp
and
add
xlat
or
jb
push
push
xchg
repz
and
mov
mov
add
(bad)
repz
xchg
(bad)
ret
push
or
cld
xor
std
popf
repz
mov
cld
inc
iret
mov
pop
pop
and
or
sar
shl
ds
mov
push
jbe
push
dec
add
adc
cmc
push
pop
je
mov
call
cmovs
pop
daa
or
xor
xor
cli
dec
outs
adc
pop
sysenter
out
inc
inc
femms
retf
inc
xchg
or
cmc
iret
add
push
inc
cdq
gs
inc
and
adc
call
jne
aam
mov
pusha
mov
lds
inc
push
mov
jo
sub
cld
and
sbb
inc
xchg
unpcklps
cmp
adc
or
add
jo
inc
test
dec
xchg
add
es
movs
test
rcl
test
cmp
dec
repnz
xor
retf
or
push
push
add
push
add
push
sub
and
add
imul
pop
cld
add
outs
and
pop
xchg
retf
fdiv
mov
repz
or
or
lock
cmp
mov
mov
ja
adc
pop
inc
add
les
xor
mov
lock
inc
xor
xor
pop
ins
lock
xchg
inc
xor
rcl
and
mov
add
adc
xchg
inc
or
and
es
or
retf
and
pusha
adc
pop
pop
loopne
sar
jecxz
add
loopne
mov
fdiv
test
sub
or
mov
jnp
ds
add
add
rol
hlt
loop
sub
sbb
cli
push
lods
adc
add
cld
outs
inc
adc
push
jo
(bad)
inc
and
xor
sub
dec
xor
pop
rol
mov
retf
pop
or
cli
pop
les
adc
push
ret
or
xchg
pop
adc
clc
(bad)
sbb
or
sbb
xor
pop
cld
and
js
cmp
inc
or
leave
add
pusha
mov
xor
cwde
mov
sbb
or
sub
add
stc
add
or
inc
sub
add
add
or
add
or
pusha
loopne
add
or
xchg
cld
inc
cli
out
mov
test
sub
xchg
daa
iret
mov
les
pop
retf
gs
sub
fs
sbb
mul
test
xchg
sub
popf
adc
or
inc
mov
xor
inc
test
or
lock
sbb
push
sbb
xchg
xor
push
cmps
aam
push
inc
mov
dec
pusha
leave
push
add
mov
lods
sar
js
scas
adc
out
push
push
mov
adc
int3
adc
in
stc
cmp
fdivr
js
call
sbb
sbb
or
ja
jbe
jg
into
push
jmp
and
push
paddsb
jno
mov
(bad)
out
repz
jae
leave
inc
mov
inc
test
pop
aas
pop
mov
(bad)
fdiv
aam
push
(bad)
cdq
xor
jne
std
shl
and
ja
add
sbb
mov
inc
int
push
into
cmp
add
jo
xlat
lea
in
test
inc
sahf
test
or
cwde
jo
xor
push
xor
je
loopne
sahf
gs
sbb
call
test
mov
sbb
and
jecxz
sbb
aas
shl
push
bound
test
mov
inc
pop
ins
sub
pusha
shr
mov
(bad)
nop
inc
stos
adc
and
xor
and
xor
xchg
add
call
mov
mov
fs
sub
sub
xchg
or
pop
lock
xchg
inc
dec
dec
inc
cmp
jo
inc
push
and
mov
mov
stos
push
cdq
push
rcl
sub
fsub
repnz
jecxz
test
stc
inc
int
mov
jb
repz
adc
ss
push
shl
mov
push
iret
jl
xlat
or
jmp
test
lahf
mov
adc
or
shl
scas
xchg
or
cmp
mov
dec
mov
sti
(bad)
sub
push
mov
test
add
mov
icebp
cld
add
sbb
xchg
retf
adc
rol
sbb
sbb
add
inc
icebp
unpcklps
cmp
cmp
or
cmps
adc
ror
cmp
add
sbb
popf
sub
adc
sub
add
and
mov
mov
add
test
add
inc
or
sbb
int3
shl
or
les
mov
or
fst
aas
or
clc
loopne
pshufw
(bad)
and
mov
add
test
into
pusha
inc
inc
add
adc
push
lock
or
add
mov
icebp
pop
adc
jo
or
mov
test
xor
mov
and
cld
ret
adc
lods
pusha
or
es
add
adc
and
inc
xor
test
ds
cmp
add
pop
test
add
dec
push
xchg
inc
enter
xor
or
icebp
std
inc
sbb
add
xchg
loopne
sub
push
dec
xchg
add
xor
adc
push
adc
js
add
mov
sbb
nop
mov
hlt
outs
outs
adc
jg
mov
or
in
loopne
adc
and
push
add
mov
cmp
adc
or
push
pushf
xchg
shl
lock
outs
js
inc
xchg
adc
add
or
inc
sub
add
add
or
add
or
mov
inc
jae
adc
pop
enter
xor
into
mov
gs
pop
ret
(bad)
call
cld
and
mov
cs
mov
sub
jmp
dec
in
adc
cs
mov
mov
ss
cmp
adc
retf
aaa
xor
sbb
xchg
nop
xor
inc
push
pushf
inc
add
inc
pop
or
pop
and
test
add
cmp
push
mov
cmp
add
adc
icebp
pop
mov
mov
mov
jae
add
or
mov
inc
or
or
sbb
jl
xor
sub
(bad)
fild
dec
cmp
dec
nop
neg
or
pusha
adc
inc
rol
mov
enter
clc
pop
out
ror
shl
add
enter
call
call
pushf
(bad)
pushf
cmp
sbb
rcl
adc
fisttp
add
push
lds
add
cmp
inc
inc
jg
std
and
(bad)
lea
add
adc
or
lock
pop
add
adc
dec
and
add
jmp
jecxz
add
sub
xchg
push
js
and
jge
and
fs
mov
(bad)
shl
cmp
inc
rcr
push
dec
(bad)
or
dec
cmp
adc
jne
ret
test
jecxz
add
cmp
inc
loope
or
loopne
(bad)
adc
pusha
les
aas
sbb
in
push
pop
push
clc
stc
dec
add
xor
pusha
inc
inc
int
pop
cdq
inc
inc
cmp
test
jbe
or
test
adc
mov
sar
add
mov
fadd
add
xor
sbb
jg
leave
or
add
cmp
and
mov
pushf
ret
push
inc
into
cmp
adc
ret
or
xchg
pop
cdq
or
or
xor
add
add
or
jbe
leave
and
aad
push
aaa
scas
std
shr
sbb
inc
xor
stc
inc
xor
ja
enter
mov
xor
je
xchg
iret
(bad)
je
xor
jae
and
adc
pop
adc
ret
test
xchg
xor
fist
push
pop
lock
push
loopne
inc
mov
test
adc
call
test
push
imul
push
add
inc
mov
or
push
pop
add
ret
add
and
nop
(bad)
adc
adc
test
bound
das
dec
lock
add
cmp
add
inc
aas
pop
adc
int3
push
daa
clc
ret
inc
mov
sar
aam
mov
and
cmp
add
js
add
sub
ins
pop
nop
sub
fucom
or
mov
ret
or
or
mov
iret
inc
ret
les
sub
loopne
add
and
push
xor
and
add
cwde
les
and
je
inc
adc
fsub
or
sub
adc
mov
pop
test
ret
clc
int3
mov
push
or
arpl
(bad)
adc
mov
pop
das
jo
add
inc
add
nop
xor
mov
jl
(bad)
adc
inc
cmp
pop
data16
or
test
icebp
add
cmp
and
sbb
sbb
sub
or
inc
stos
dec
adc
push
adc
mov
pop
sub
sbb
loope
add
or
and
add
or
inc
sub
add
add
add
add
or
mov
aas
jg
adc
pop
pop
adc
rcl
scas
lea
fs
lahf
lds
mov
int
dec
jbe
sub
inc
xchg
sbb
in
imul
mov
shl
sub
or
das
hlt
inc
lds
push
push
jns
frstor
ds
sub
xor
add
enter
(bad)
ficomp
cmps
jmp
push
mov
rol
sub
jecxz
xor
adc
mov
add
call
add
adc
pop
fidivr
(bad)
ror
xor
inc
cmps
adc
sub
test
add
(bad)
pop
pusha
bound
sbb
add
push
and
xchg
inc
pop
je
into
cld
out
xchg
mov
adc
in
pop
cmp
jl
pop
adc
dec
mov
and
mov
aad
mov
fidivr
and
xor
lock
xchg
icebp
fbstp
sbb
pop
lds
add
lahf
iret
sbb
bound
call
add
pusha
pop
adc
fadd
(bad)
sbb
inc
cmp
je
or
adc
inc
push
inc
sub
mov
aas
aam
(bad)
int
and
inc
test
rol
xchg
add
dec
dec
mov
jo
pshufw
and
sbb
push
add
call
clc
arpl
jl
sbb
xor
in
imul
push
adc
push
int
push
fs
xor
mov
sub
bound
les
xchg
pop
cs
into
jno
xchg
mov
or
sub
add
jnp
xchg
leave
sar
aam
dec
test
sbb
or
mov
pop
stc
push
adc
cmp
and
push
xchg
cmp
dec
adc
mov
gs
fild
(bad)
xchg
or
inc
add
xchg
or
stc
sbb
sub
pop
and
cmp
xor
add
jmp
ret
add
call
add
lock
or
imul
out
in
and
bound
pop
sbb
jne
in
cmp
add
cld
sbb
add
push
nop
dec
ds
test
add
add
shl
lahf
rcl
push
cmp
xor
ret
or
int3
mov
and
dec
loopne
aas
outs
sbb
add
add
and
push
sub
add
mov
cmc
iret
sub
mov
mov
repz
cld
rol
mov
mov
jo
push
push
xchg
cwde
add
push
or
xchg
sub
add
cmp
movntps
jo
add
or
dec
pop
dec
lock
ror
and
add
xchg
or
xor
add
aas
sbb
mov
jle
xor
test
push
or
add
and
sahf
cmp
cmp
pushf
or
inc
mov
inc
or
nop
push
add
fidivr
adc
scas
pusha
repnz
cmp
lock
adc
ins
nop
mov
xor
xchg
sti
inc
aad
or
mov
or
loopne
jl
lods
in
add
pop
inc
ret
and
sub
js
add
pop
test
(bad)
js
ds
jecxz
and
or
add
push
test
mov
pusha
xchg
push
ficom
xor
pop
sbb
pop
cld
and
mov
(bad)
pop
add
xor
rol
adc
or
inc
add
add
xor
add
adc
or
add
and
push
add
xchg
dec
das
inc
or
inc
or
mov
inc
adc
jno
add
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
or
scas
popa
rol
ret
or
inc
fisub
and
aam
lahf
les
loopne
sbb
pop
mov
ret
pop
inc
nop
xor
pop
jo
stos
int3
sbb
pop
push
sbb
lock
xlat
mov
loopne
test
ror
pop
nop
lock
mov
dec
xchg
(bad)
shl
adc
mov
xor
imul
call
fldcw
fsub
mov
and
mov
xor
jmp
push
and
and
push
aaa
sbb
jb
mov
nop
adc
pop
lea
sub
arpl
(bad)
mov
aas
add
sub
test
loopne
es
cmps
mov
lods
adc
and
data16
jae
pop
mov
addr16
fistp
sbb
out
cli
enter
rol
inc
and
(bad)
dec
dec
adc
test
shl
nop
les
rcl
les
(bad)
push
call
jl
dec
cmp
or
aas
pop
mov
call
fcomp
add
pop
test
and
call
mov
and
or
leave
add
lea
lds
add
imul
mov
add
nop
test
inc
adc
jno
sbb
xor
dec
nop
pusha
adc
add
cmp
mov
add
dec
inc
(bad)
aas
inc
or
jo
push
mov
pop
adc
push
in
pusha
mov
xor
or
push
(bad)
nop
dec
xchg
push
pop
aam
add
adc
adc
movs
mov
adc
jns
imul
cdq
in
fs
inc
adc
or
pop
pop
mov
ret
xor
add
cmp
test
mov
aas
ret
and
mov
dec
pusha
add
sahf
sub
stc
dec
mov
xchg
lea
lock
je
mov
rol
xor
fst
push
ins
xchg
adc
out
cmp
inc
arpl
sbb
pop
xor
iret
dec
lahf
or
mov
ret
xor
or
arpl
frstor
in
or
(bad)
add
cmp
or
fsub
xchg
inc
push
adc
ret
movups
inc
adc
and
sbb
or
inc
xchg
jnp
pop
sbb
xchg
jmp
rol
repz
jmp
mov
adc
ret
aad
loopne
inc
or
(bad)
loopne
aas
lods
rcl
sbb
push
mov
push
pop
jl
xchg
push
add
sub
dec
mov
(bad)
cld
dec
add
loope
and
dec
mov
and
stc
rol
fs
adc
jle
cmp
mov
repz
sbb
sbb
or
mov
call
mov
sbb
pop
pusha
jno
das
dec
xor
adc
call
xor
or
nop
ror
mov
or
mov
lds
fsubr
mov
push
adc
ror
ret
or
mov
pop
test
add
xchg
sbb
push
inc
cmp
(bad)
clc
sbb
sub
std
xchg
add
jmp
pop
lock
or
xchg
scas
or
add
and
mov
inc
adc
dec
daa
jo
add
adc
add
pusha
and
pop
or
sub
mov
loop
pop
mov
aas
inc
(bad)
mov
mov
loope
cmp
sbb
or
add
lock
adc
inc
and
push
inc
sbb
push
fs
or
fadd
adc
sbb
xchg
icebp
pop
pop
jl
fs
add
add
stc
add
or
inc
sub
add
add
add
add
or
mov
shl
(bad)
cmp
rol
ror
aam
popa
les
mov
inc
mov
add
or
ret
add
mov
jg
mov
int
pop
adc
mov
retf
or
mov
retf
xchg
inc
add
adc
(bad)
retf
pop
int3
cmp
mov
and
mov
jmp
sbb
push
cdq
mov
bnd
test
adc
xor
inc
rol
sbb
adc
mov
out
adc
popa
imul
add
add
push
mov
hlt
mov
inc
rcr
(bad)
cmp
test
js
sub
pusha
or
cmp
add
js
aad
or
out
test
jmp
out
sbb
or
or
jbe
fild
aas
xchg
cld
mov
add
sahf
sbb
jae
jecxz
inc
into
js
nop
inc
push
cmp
xor
les
or
dec
inc
pushf
adc
iret
add
sub
mov
cmp
pushf
arpl
js
pushf
push
adc
shl
push
xchg
pop
test
fwait
inc
das
mov
or
dec
rol
add
inc
shl
mov
pop
adc
inc
in
push
movs
mov
pop
add
xchg
mov
sar
dec
cmp
bound
adc
pusha
les
adc
and
nop
repz
push
and
sub
mov
cld
adc
xchg
ficomp
adc
or
cmp
push
xchg
lds
cmp
inc
xchg
inc
or
inc
push
adc
inc
test
push
mov
(bad)
and
cld
add
sub
(bad)
jecxz
cmp
nop
and
lea
sub
sub
xchg
add
adc
or
adc
les
add
mov
repnz
jo
mov
cli
or
dec
cmp
int3
popa
loope
add
adc
inc
xchg
pop
push
add
dec
xchg
jmp
jmp
cmp
gs
or
data16
add
bound
hlt
add
inc
outs
push
repnz
xchg
sar
inc
daa
sbb
mov
or
dec
mov
rcl
mov
dec
or
ret
or
jmp
ret
in
cmps
fimul
xor
mov
or
stos
ret
ret
push
xchg
or
retf
inc
test
daa
sub
mov
fsubr
adc
xchg
pushf
add
adc
call
push
adc
sub
push
inc
(bad)
cmp
mov
and
push
adc
and
or
out
push
xor
xchg
cmps
js
pop
push
sbb
sub
(bad)
lsl
ret
in
das
icebp
fild
pop
fisub
inc
fstp
mov
sbb
xchg
xchg
inc
add
clc
loopne
cmp
loopne
fild
pop
test
add
sar
ror
daa
cld
jecxz
add
aas
xchg
cmp
fistp
fs
lds
add
rol
ret
dec
add
add
dec
sbb
mov
idiv
retf
addr16
mov
les
push
add
pop
das
adc
shl
std
or
push
lea
mov
jo
sbb
and
push
add
sbb
inc
out
(bad)
jno
adc
inc
xor
push
inc
or
or
adc
add
sbb
ror
jecxz
sbb
sub
or
dec
aas
pusha
and
pop
and
nop
mov
adc
fild
add
(bad)
call
ret
add
add
mov
sub
or
shl
adc
push
mov
test
or
rol
add
or
aas
shl
mov
mov
pop
cwde
fadd
rol
aad
and
and
inc
add
mov
or
(bad)
jb
sbb
add
lods
mov
or
and
mov
inc
or
(bad)
arpl
xor
push
and
sbb
repnz
cld
inc
add
lock
mov
dec
push
adc
pop
add
or
and
add
or
inc
sub
add
sub
sub
add
or
push
loopne
or
sub
ret
rcl
sbb
sub
add
add
enter
lods
sbb
jo
mov
jmp
inc
cs
add
or
lods
cdq
js
or
dec
cmp
pop
jg
push
and
jnp
sbb
lock
cwde
and
xor
in
adc
test
cmp
push
cld
rol
inc
int
fwait
jo
xor
mov
push
inc
in
mov
add
sbb
jns
lds
int
and
dec
shr
adc
mov
push
clc
mov
adc
adc
enter
add
sub
sbb
push
sbb
es
sbb
inc
test
sbb
push
enter
or
xor
fistp
jg
enter
ror
rol
and
mov
push
sbb
popa
xor
inc
adc
xor
push
popa
push
jecxz
dec
jp
test
ja
mov
cmp
push
int3
jno
or
xchg
in
mov
cmp
xor
xor
mov
pop
in
adc
add
dec
cmp
or
sbb
jne
push
xchg
lock
jnp
nop
arpl
ins
bound
test
pop
add
pop
inc
cmp
fild
xchg
or
inc
inc
xor
mov
inc
prefetcht1
cld
mov
arpl
xor
cmp
je
adc
mov
gs
(bad)
jae
jno
repnz
jg
test
cmps
fwait
in
ret
xor
cwde
mov
inc
enter
pop
cmp
push
dec
cmp
push
mov
add
xchg
mov
(bad)
dec
test
xchg
or
popa
add
jg
push
fiadd
add
add
cmp
cmp
cmp
and
and
dec
or
mov
adc
cwde
adc
cmp
cmps
js
xor
aaa
add
cwde
nop
dec
sub
rol
xchg
mov
les
ins
retf
or
mov
dec
add
xor
cmp
cmp
test
pop
sbb
test
test
add
pop
(bad)
and
inc
fild
push
fsub
rol
out
push
add
cmp
mov
ins
call
push
lods
jo
add
adc
aas
adc
(bad)
icebp
adc
or
mov
xor
cld
and
xor
jecxz
or
adc
cmp
sar
xor
jnp
inc
sbb
aas
or
iret
add
push
lds
mov
js
sbb
loopne
aas
sbb
ss
pop
jns
leave
fisttp
xchg
inc
push
sub
sbb
rcl
and
sbb
nop
loope
or
aam
push
cmp
adc
or
or
enter
movs
(bad)
xor
or
pusha
or
in
and
lds
and
or
add
push
loopne
imul
retf
inc
adc
jno
push
ret
sbb
jae
aas
xor
xor
push
push
add
pop
push
cmp
rcr
(bad)
mov
jle
mov
and
pusha
add
adc
bound
mov
mov
and
add
dec
add
loopne
jl
jnp
sub
add
call
adc
or
inc
call
pop
sbb
add
mov
nop
adc
jnp
xchg
push
pop
dec
loopne
outs
jo
add
mov
add
adc
xor
inc
xchg
fmul
pop
aam
adc
test
mov
adc
loope
add
inc
daa
cmp
adc
rol
lods
mov
push
sub
or
adc
test
mov
push
out
mov
pop
cmp
push
sbb
add
xchg
mov
inc
add
add
stc
add
or
inc
sub
add
and
sub
add
or
push
and
pop
sub
adc
xchg
and
adc
inc
mov
mov
or
xchg
xchg
loopne
add
add
clc
mov
in
dec
cmps
js
cli
push
mov
pop
cmps
mov
jnp
add
bound
dec
cld
inc
sbb
mov
add
xchg
fs
mov
adc
ss
movs
aam
add
sub
push
lds
xor
mov
in
ret
or
xor
fwait
jae
add
push
push
shl
adc
pop
popa
or
clc
cdq
ret
inc
pop
nop
mov
xor
or
aaa
bound
fwait
mov
rsm
sub
and
mov
(bad)
(bad)
frstor
inc
pop
je
cmp
or
lods
xchg
sbb
or
push
sub
sub
popf
cmp
sub
out
inc
shl
jmp
test
dec
and
inc
mov
cdq
adc
adc
jo
push
xchg
mov
mov
adc
and
rol
cmp
rol
and
xor
add
mov
cmp
xor
iret
cmp
cwde
jae
cmp
ret
add
or
rcr
push
mov
inc
rcl
call
mov
shl
push
xor
jp
iret
(bad)
jmp
xor
add
ds
mov
mov
lea
mov
jmp
fldenv
out
and
test
adc
sbb
xchg
and
int
or
xor
in
inc
sbb
xor
adc
fidiv
mov
fsub
xchg
(bad)
js
ret
test
or
pop
inc
int
and
call
push
fcomp
inc
or
arpl
sub
and
popf
sub
inc
nop
mov
adc
mov
push
jbe
fisttp
push
or
sub
xchg
mov
sbb
popf
mov
dec
mov
dec
xchg
jo
and
lea
frstor
cmp
or
add
mov
sbb
xor
fidivr
lock
syscall
out
pop
adc
add
stos
rol
sbb
jp
out
test
call
mov
cmp
loopne
inc
push
cdq
sub
dec
ins
(bad)
lock
(bad)
xor
out
add
mov
dec
cmp
in
add
test
xor
inc
add
int3
pusha
ret
or
sbb
inc
sub
cmp
adc
push
cmp
inc
jmp
and
and
pushf
test
jnp
sahf
js
pop
push
push
rol
cmp
push
dec
or
and
jo
xor
jns
mov
sahf
or
cwde
xor
push
adc
inc
adc
and
aas
adc
(bad)
out
adc
fisubr
loope
or
aam
dec
inc
daa
nop
loopne
in
mov
push
inc
xor
out
mov
pop
push
push
imul
push
sub
mov
mov
or
add
inc
mov
adc
jl
inc
push
daa
enter
inc
add
in
into
or
outs
mov
dec
je
or
add
or
ret
add
inc
jl
add
sub
mov
sub
push
pop
push
adc
js
out
adc
aaa
cmp
adc
test
xor
mov
add
rcl
xchg
and
rol
add
inc
or
loopne
add
adc
or
seta
(bad)
pop
in
add
loopne
xor
add
mov
fs
inc
push
xor
inc
cmp
or
or
adc
add
inc
add
add
sub
add
add
add
or
push
and
dec
add
jo
inc
pop
add
lahf
add
xchg
test
and
pushf
fsub
inc
add
call
push
pop
mov
or
mov
mov
stos
cmc
ins
push
retf
add
repz
xchg
cmp
mov
popa
mov
sub
push
stos
dec
mov
loope
mov
pop
push
add
adc
push
call
push
es
loop
and
dec
mov
sbb
ror
and
add
rcl
mov
xchg
cmp
dec
inc
xor
inc
inc
add
aas
jb
inc
ret
adc
add
xor
cwde
jne
lock
lahf
test
jae
xor
inc
and
jle
repz
movs
mov
jmp
lahf
mov
not
cmp
adc
ret
push
jns
push
jmp
adc
pushf
out
out
daa
pop
out
add
cli
out
repnz
out
sbb
jb
shl
test
pop
cs
jecxz
or
out
and
in
inc
mov
jmp
jbe
js
gs
xor
test
push
and
in
jae
add
adc
xchg
dec
adc
add
adc
nop
cmp
jmp
jae
jno
cmp
lock
mov
mov
push
jae
aas
outs
cmp
xchg
ss
pop
cwde
push
adc
xor
popf
lea
or
test
out
xchg
dec
mov
clc
mov
mov
or
dec
inc
and
xor
test
sbb
push
lds
cmp
nop
push
adc
mov
inc
pop
sbb
sbb
mov
or
call
xchg
add
pop
add
std
cmc
pop
sbb
add
ss
xchg
call
and
rol
cmp
shl
into
mov
pop
mov
in
push
addr16
add
mov
out
inc
and
jns
add
iret
mov
popa
mov
add
rcl
iret
mov
cmp
inc
add
adc
mov
les
mov
enter
or
(bad)
lahf
add
or
push
mov
sbb
out
xchg
lods
mov
inc
repnz
cmps
cmp
rol
xor
ret
add
(bad)
test
adc
je
aam
ins
jo
or
jns
jecxz
cmp
mov
fnstcw
dec
cmc
xor
mov
push
daa
ins
inc
ret
xor
aad
je
int
es
and
and
and
push
rcr
retf
xor
and
mov
dec
mov
ror
outs
fs
push
xor
add
cmp
xor
mov
mov
push
rcr
cmp
mov
mov
popa
push
les
or
jl
inc
add
sbb
xor
push
les
or
dec
push
in
sbb
xchg
push
out
adc
or
xchg
mov
ins
mov
and
inc
mov
dec
add
adc
sub
(bad)
and
add
outs
sbb
inc
enter
add
clc
jb
sub
adc
push
adc
xor
inc
add
adc
or
pop
pop
and
aaa
mov
or
lods
enter
mov
inc
add
shld
loopne
adc
cmp
aaa
adc
lods
add
add
out
fcom
dec
xor
adc
test
adc
popa
or
adc
xor
pop
and
xor
mov
or
inc
mov
dec
jo
adc
in
pusha
adc
or
loope
mov
or
rol
mov
sbb
add
and
add
or
inc
sub
add
add
add
add
inc
dec
sbb
push
and
loop
nop
fist
pushf
sub
aam
sbb
les
repnz
adc
fsubr
jae
test
xchg
xchg
dec
xor
add
add
sahf
add
adc
stos
int3
add
and
mov
push
movs
pop
sub
sbb
xchg
mov
inc
and
add
adc
jge
adc
adc
or
or
fiadd
inc
add
sbb
dec
ins
push
add
lock
push
cmp
into
cdq
and
add
jl
bound
and
ficom
leave
inc
mov
push
stos
sahf
dec
ins
outs
push
mov
push
inc
sub
lods
int3
sbb
add
out
shl
test
and
pop
lock
push
mov
mov
repz
pop
pusha
outs
retf
dec
enter
imul
pop
sub
add
js
add
stos
mov
out
xor
stc
push
inc
and
xor
mov
in
inc
add
jo
(bad)
cmove
mov
push
sbb
dec
pop
iret
gs
add
and
or
add
dec
dec
rcl
add
inc
(bad)
std
jae
aas
out
adc
aas
push
xor
cmp
jbe
test
or
sar
cld
xchg
dec
lea
dec
and
pop
and
ror
adc
fdiv
or
push
movups
jle
dec
sbb
cmp
push
loopne
sbb
sbb
add
and
cmp
nop
and
push
or
js
cmp
cld
adc
cmovne
inc
cmp
pusha
push
push
aaa
lds
adc
add
inc
add
dec
pop
pop
adc
ss
cs
in
xor
xor
mov
add
fs
fisub
iret
test
rcl
movs
pop
mov
xchg
mov
inc
(bad)
adc
ins
aaa
dec
or
or
sbb
les
imul
or
mov
sbb
cmc
clc
dec
push
sub
into
adc
sbb
les
outs
cmp
out
or
push
sub
mov
sbb
enter
pop
fcom
and
add
cs
and
sbb
sbb
push
or
ror
add
and
(bad)
pop
daa
add
xor
sbb
xor
mov
repz
mov
shr
rcl
mov
inc
mov
and
mov
adc
dec
adc
sub
lods
pusha
mov
ds
add
int3
mov
ins
jo
or
pop
lea
hlt
jmp
ror
ja
loope
adc
aam
adc
xor
or
(bad)
add
or
xchg
jecxz
inc
pop
lea
sbb
add
and
rol
rol
sub
xchg
pusha
adc
sar
ret
aas
aad
movs
jp
mov
cwde
mov
adc
adc
mov
inc
jmp
pop
in
or
inc
jl
lds
adc
xlat
sete
inc
adc
or
dec
or
push
add
aas
dec
sbb
mov
(bad)
and
sub
aas
pop
mov
fs
inc
and
adc
or
adc
test
and
and
inc
js
xlat
nop
push
inc
daa
popf
out
add
xor
imul
adc
inc
mov
adc
pop
add
or
aam
adc
mov
add
fs
pop
xor
clc
add
mov
inc
cwde
mov
pusha
adc
ret
movs
pop
or
rol
or
ds
mov
or
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
adc
adc
hlt
push
mov
ret
add
cld
(bad)
nop
aas
or
xor
cdq
adc
inc
or
pop
sbb
js
lahf
sbb
repnz
rol
cli
mov
leave
adc
(bad)
aas
mov
pop
push
fdiv
movs
je
sub
pop
adc
sub
and
pop
pop
outs
and
dec
retf
ss
cmps
jecxz
mov
inc
dec
pop
stc
out
or
jg
inc
sub
xor
mov
loope
and
and
imul
test
inc
adc
cli
pop
mov
xor
adc
cmp
retf
movs
push
fwait
add
fdiv
mov
sti
pop
iret
add
add
push
mov
mov
adc
pop
or
lock
cmp
adc
mov
xchg
or
add
out
sbb
addr16
out
(bad)
sbb
(bad)
fs
dec
jo
loop
mov
mov
arpl
adc
cmove
test
xor
add
cmp
pop
rol
xor
ret
push
call
in
xchg
or
sub
jnp
push
add
lahf
add
mov
and
dec
rol
push
inc
inc
ds
inc
sahf
push
pop
adc
push
callw
push
cmp
adc
inc
add
pusha
int3
adc
cli
std
push
or
push
add
lock
(bad)
aas
out
cdq
test
push
pop
fstp
mov
call
dec
data16
inc
bound
pop
add
push
(bad)
test
pushf
in
cdq
iret
gs
(bad)
adc
adc
add
xchg
xor
cdq
(bad)
xchg
inc
pop
or
inc
pushf
or
test
in
push
loopne
in
cmp
dec
and
xchg
inc
or
dec
push
repnz
ins
add
jecxz
xchg
xchg
add
pop
xchg
icebp
cld
inc
xchg
into
mov
or
inc
mov
ins
dec
lea
mov
in
imul
popa
cmp
xor
inc
lahf
rcl
(bad)
scas
pop
dec
adc
adc
loopne
fdivr
mov
adc
add
cmp
pop
or
push
or
add
mov
adc
mov
(bad)
cmp
adc
adc
cld
adc
cwde
pop
(bad)
and
adc
or
in
lds
sbb
ins
mov
sub
push
and
int3
adc
iret
push
int3
xor
adc
fadd
xor
movs
and
sub
sub
inc
je
cmp
rdpmc
in
sub
push
push
jmp
xchg
ins
cmp
inc
sub
repnz
push
cmp
nop
mov
pop
sub
nop
push
or
fdiv
bound
dec
xor
loopne
add
xor
enter
popf
ror
daa
nop
and
cs
inc
jle
adc
mov
sub
inc
inc
xchg
add
loop
or
rol
sar
add
mov
das
rcl
or
add
ror
add
lock
xor
and
add
push
adc
pusha
or
or
andps
(bad)
sub
sar
test
add
xchg
and
cmc
movs
cmove
jmp
sbb
adc
nop
add
out
xchg
dec
hlt
add
and
inc
call
sub
adc
push
cwde
inc
stos
add
mov
lds
out
cmps
adc
add
cmp
data16
adc
cwde
clc
pop
adc
and
and
adc
test
mov
les
xor
iret
mov
loopne
imul
nop
sbb
jp
mov
scas
test
inc
or
in
mov
adc
xor
or
add
and
adc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
inc
sbb
cli
cmc
sub
mov
cld
jo
jo
mov
sbb
nop
inc
pop
test
cmp
adc
cs
adc
mov
xchg
and
int
mov
xor
adc
mov
add
add
add
and
ret
lods
dec
push
add
ret
loopne
xchg
adc
shr
adc
outs
cmp
sub
dec
test
xor
(bad)
adc
or
jp
xchg
sub
or
jo
pop
lods
int3
or
cdq
mov
ret
xchg
into
fsubr
jne
xchg
inc
xor
das
add
stc
addr16
mov
xor
adc
fwait
inc
inc
push
jns
stc
xlat
mov
xchg
loopne
inc
adc
sub
mov
mov
xor
into
fistp
mov
xor
jecxz
cmp
mov
jecxz
lahf
dec
mov
(bad)
jb
sbb
pop
jg
or
inc
js
pushf
push
ret
pop
sbb
push
adc
xor
nop
inc
dec
or
push
inc
add
sub
sub
jmp
and
jecxz
test
outs
pop
xchg
and
cmp
inc
sub
mov
push
xor
enter
adc
and
add
dec
xor
dec
lock
sbb
cmps
adc
mov
inc
sbb
add
inc
xchg
loop
mov
jnp
in
push
adc
and
add
xor
inc
sub
add
add
and
add
inc
dec
sbb
mov
rol
rcr
es
and
sbb
pop
pop
lock
mov
xor
shl
sar
enter
add
dec
retf
sub
xchg
call
mov
dec
(bad)
lock
loopne
inc
add
bound
xchg
addr16
xor
(bad)
jmp
and
test
or
clc
mov
sbb
js
hlt
and
nop
add
loopne
push
sub
cwde
cld
adc
cmp
fsub
cmovl
add
mov
repz
fiadd
xchg
add
fadd
mov
std
mov
imul
jg
(bad)
cmc
and
leave
pusha
mov
hlt
aaa
mov
aad
inc
and
jle
mov
sahf
jp
shl
push
test
mov
(bad)
das
or
repnz
aam
jg
inc
call
mov
(bad)
and
adc
iret
push
adc
shl
cli
sub
clc
push
inc
inc
or
and
push
cmp
xor
dec
push
(bad)
pop
adc
add
cld
or
xor
jne
jo
sbb
add
xchg
aas
or
adc
inc
and
xchg
sbb
fld
sbb
add
hlt
es
inc
icebp
cld
push
shl
leave
jo
mov
call
adc
iret
xor
add
mov
adc
icebp
push
add
mov
inc
sub
rol
lea
(bad)
add
and
call
push
test
mov
sub
adc
daa
call
fdiv
xchg
ss
sbb
or
mov
popf
inc
jmp
adc
call
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
adc
xor
rol
add
xor
adc
cs
mov
add
xchg
aam
pop
push
or
adc
adc
xchg
add
dec
and
sbb
jae
mov
pop
mov
adc
lds
add
mov
jg
inc
push
rol
repnz
dec
xchg
jae
add
mov
xor
or
mov
repnz
aas
cmp
mul
out
add
push
inc
lods
adc
mov
jnp
push
adc
(bad)
jb
fwait
dec
mov
out
xchg
jbe
outs
jmp
ja
(bad)
adc
rcl
sub
and
in
inc
jnp
pop
or
jo
sub
xor
ret
call
xlat
and
jg
cld
xor
test
(bad)
cmp
daa
push
int
sub
fistp
js
adc
pusha
push
fistp
ds
xor
jl
fdiv
dec
je
sbb
sahf
inc
hlt
fs
movs
int3
aas
mov
loopne
mov
pop
clc
(bad)
push
or
add
rol
xor
push
xor
and
mov
add
loop
mov
lds
cmp
xor
mov
xchg
call
push
xor
out
sbb
in
adc
mov
adc
sbb
sub
pusha
pop
(bad)
jg
xchg
inc
inc
mov
(bad)
xor
sbb
add
inc
ins
clc
inc
push
adc
bound
fs
mov
sbb
rol
push
lock
push
push
cmp
pop
lock
js
cmps
(bad)
js
add
(bad)
mov
push
jae
inc
mov
aas
cmp
movs
add
or
stos
test
stos
pop
fst
shl
sbb
stos
pop
inc
add
mov
ss
es
(bad)
and
das
mov
adc
add
stc
add
or
inc
sub
add
add
adc
add
or
mov
sar
call
adc
push
je
(bad)
sbb
adc
mov
inc
mov
sub
int3
call
or
mov
cmp
arpl
inc
cwde
es
test
cmp
dec
cmp
push
pop
retf
push
mov
adc
and
adc
push
pop
and
xor
shr
xchg
xchg
stc
xchg
sub
sbb
ds
dec
leave
add
sbb
mov
adc
push
adc
gs
mov
daa
add
cld
adc
mov
or
dec
and
sub
daa
pusha
sbb
jg
push
in
sbb
mov
or
adc
rcl
inc
inc
xor
aam
push
push
stos
push
cwde
aam
mov
sbb
pop
js
aaa
dec
xchg
add
mov
mov
and
pop
or
icebp
arpl
lods
imul
test
jbe
sub
sbb
test
lock
lea
clc
push
ds
out
out
sub
dec
add
adc
add
jo
pop
jle
sub
sbb
std
push
or
inc
(bad)
int3
add
jo
aas
xchg
sbb
adc
and
xchg
cld
arpl
add
inc
sbb
push
adc
add
stc
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
rol
rcr
es
and
sbb
pop
pop
lock
mov
xor
shl
sar
enter
add
dec
retf
sub
xchg
call
mov
dec
(bad)
lock
loopne
inc
add
bound
xchg
addr16
xor
(bad)
jmp
and
test
or
or
jmp
jmp
cli
adc
cmp
push
scas
rcl
js
mov
(bad)
jp
in
dec
aad
mov
or
push
test
ret
ss
je
push
add
pop
out
(bad)
dec
sub
int
add
repz
jne
inc
pop
test
fldenv
stos
pop
fwait
mov
ror
add
fisubr
out
ror
xor
sub
into
mov
push
popf
in
div
adc
adc
pop
test
out
out
or
mov
adc
cmp
je
inc
jmp
add
ror
sub
pop
pusha
push
jo
inc
rol
movs
(bad)
aas
call
aam
mov
push
add
cdq
sbb
iret
pusha
xor
aam
mov
leave
push
aad
xor
inc
dec
dec
xor
push
and
nop
jno
push
sbb
push
push
cmp
stc
cmc
(bad)
or
adc
push
movs
inc
les
enter
mov
inc
inc
or
push
dec
push
add
mov
gs
shl
lea
cdq
or
dec
pop
and
iret
add
add
in
icebp
out
adc
rol
adc
add
aas
sbb
push
xor
lods
mov
inc
mov
jmp
retf
aas
in
dec
retf
daa
nop
jo
inc
fisub
jmp
ret
push
jae
movs
aaa
popf
sbb
lods
mov
jp
and
popf
(bad)
sub
aas
jmp
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
adc
xor
rol
add
xor
adc
cs
mov
add
xchg
aam
pop
push
or
adc
adc
xchg
add
dec
and
sbb
jae
mov
pop
mov
adc
lds
add
mov
jg
inc
push
rol
repnz
dec
xchg
jae
add
mov
xor
cdq
ja
loop
jl
push
cmp
iret
inc
es
sar
xor
lock
mov
jg
mov
or
sahf
dec
mov
dec
cmp
mov
fistp
es
add
pop
invd
add
int3
push
jo
add
and
jmp
pusha
fwait
rol
inc
or
pop
bnd
std
xor
sub
and
and
sub
jae
aad
lods
ret
mov
rol
add
add
xor
out
add
repz
cmp
sbb
sub
iret
ins
sbb
adc
pop
push
rcl
inc
and
push
mov
pusha
mov
sahf
or
mov
xchg
adc
lds
cmp
xor
inc
mov
jmp
inc
add
sbb
in
adc
mov
adc
sbb
sub
xor
sbb
adc
ret
aas
xor
or
rol
inc
ins
hlt
inc
push
adc
bound
fs
mov
sbb
rol
push
lock
push
push
cmp
pop
lock
js
cmps
(bad)
js
add
(bad)
mov
push
jae
inc
mov
aas
cmp
movs
add
or
stos
test
stos
pop
fst
shl
sbb
stos
pop
inc
add
mov
ss
es
(bad)
and
das
mov
adc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
inc
sbb
or
out
mov
(bad)
sub
xchg
mov
cmc
and
scas
and
inc
jo
sbb
xchg
(bad)
cli
cmc
retf
adc
dec
add
shl
mov
retf
add
sti
mul
test
adc
push
imul
shl
adc
aas
push
cmp
inc
xchg
loopne
xchg
aaa
sub
adc
test
or
into
ret
aas
adc
xor
imul
sahf
cmp
xor
push
mov
fist
inc
push
dec
add
jmp
cld
shl
js
sbb
adc
std
xor
out
ret
(bad)
retf
adc
adc
mov
cmp
adc
popa
dec
stos
push
push
add
cmp
(bad)
in
pavgb
out
cwde
clc
adc
jb
mov
cdq
inc
bound
add
xor
inc
movs
sub
sbb
or
ins
daa
(bad)
(bad)
aas
adc
sar
add
xor
adc
jne
mov
sbb
in
nop
add
push
retf
sbb
iret
aas
pop
inc
ror
iret
cmp
shl
and
je
inc
add
neg
fiadd
or
rol
repnz
and
inc
sbb
nop
aas
xor
inc
mov
cld
add
sbb
ins
xor
iret
and
adc
aas
push
sbb
(bad)
pop
jle
push
addr16
xor
push
loope
push
push
or
or
add
or
add
subps
sub
push
sub
(bad)
loopne
inc
pop
cld
and
ds
jo
icebp
mov
loop
out
je
cmp
shl
test
fwait
dec
repnz
sbb
jb
sub
xchg
adc
dec
and
popf
gs
mov
or
ret
pop
in
test
cli
adc
pop
add
jmp
movs
fmul
cld
ret
ret
dec
push
lds
xor
push
xchg
add
add
add
sub
inc
pop
call
pop
jno
sbb
jmp
inc
out
aas
xlat
data16
mov
mov
and
pop
lock
and
shr
call
test
push
push
mov
inc
jmp
loope
add
test
mov
xor
or
add
test
nop
or
push
xor
pop
or
mov
add
adc
and
inc
xchg
das
cmp
sub
xor
cmps
cmps
(bad)
cli
pop
pop
sub
test
adc
rcl
not
das
mov
clc
dec
or
pusha
add
retf
pop
mov
fcom
mov
adc
fs
push
and
rol
mov
(bad)
mov
add
xor
call
lock
loopne
or
ror
jns
enter
jb
scas
aas
xor
rol
(bad)
popa
daa
mov
mov
dec
and
dec
jae
inc
jp
rol
or
mov
mov
rcl
mov
lds
inc
mov
enter
nop
out
sbb
dec
ss
inc
sbb
je
mov
mov
or
xchg
jno
adc
and
push
mov
fadd
movs
push
xchg
movd
and
xchg
and
pop
xor
popf
or
add
push
test
inc
or
jno
adc
bound
sahf
pusha
or
mov
mov
sbb
and
or
pop
mov
movs
mov
push
adc
pusha
inc
fs
mov
out
pop
inc
into
xchg
jno
sbb
pop
test
inc
nop
cmps
or
sbb
sbb
jno
pop
inc
inc
adc
mov
or
add
nop
or
adc
mov
loopne
jg
test
loope
data16
pop
xlat
lock
push
or
mov
punpcklwd
sub
fwait
pop
nop
or
rol
and
rol
jb
dec
xor
push
add
out
xor
or
dec
adc
pfcmpgt
dec
push
nop
sar
mov
jg
inc
fwait
push
jno
aas
jp
call
or
adc
pop
xchg
dec
add
inc
or
pushf
repnz
and
xor
dec
cmp
and
and
adc
in
daa
enter
adc
add
leave
dec
or
sbb
jo
nop
mov
inc
xlat
pusha
aad
out
sub
sbb
(bad)
aas
sbb
rcl
xchg
pop
push
mov
adc
mov
xchg
int
inc
mov
dec
call
sbb
les
jmp
dec
nop
pop
cld
sbb
sub
aaa
push
or
je
aad
je
add
add
add
ret
inc
and
pop
imul
jo
pop
jmp
add
adc
bound
add
movs
adc
jnp
push
aaa
and
pop
cmp
cmp
inc
adc
add
push
mov
adc
sbb
(bad)
or
and
fadd
and
push
sbb
and
cmp
sbb
xlat
movs
fisub
push
and
mov
add
dec
repnz
ret
fst
pop
test
ins
cs
inc
test
stc
xchg
jp
dec
jbe
inc
sbb
dec
add
fsubr
test
test
hlt
adc
push
cmps
pop
push
sub
xchg
mov
adc
and
add
and
add
push
add
add
add
add
or
add
or
mov
inc
xor
or
loope
ret
xchg
and
sbb
add
add
je
fsub
fnstsw
clc
aaa
shl
je
xchg
push
mov
clc
pop
arpl
dec
inc
inc
push
std
imul
and
cld
add
adc
dec
pop
sub
hlt
push
cmps
sub
adc
gs
sbb
or
pusha
test
jl
jecxz
xchg
dec
hlt
stc
aaa
rol
out
loopne
sbb
test
xchg
and
adc
loopne
lahf
mov
pop
(bad)
xchg
retf
aam
sub
xchg
(bad)
sbb
rcl
sbb
push
xchg
add
inc
cdq
xchg
jg
std
(bad)
shl
inc
cmp
mov
lds
cmp
push
pop
and
scas
mov
jo
cld
outs
nop
pop
mov
cmp
mov
or
cmp
lock
dec
sbb
jp
call
loope
sub
fwait
(bad)
aas
sbb
std
rol
add
pop
add
iret
stc
mov
rcr
pop
push
jno
inc
or
loopne
cmp
and
jle
jno
js
xor
icebp
add
push
push
inc
and
adc
rol
add
xchg
mov
inc
sbb
xor
movhps
add
or
adc
rol
invd
add
xchg
push
js
out
add
loopne
cmp
inc
cmp
add
cwde
and
pushf
adc
sbb
xor
fldcw
clc
xor
sbb
inc
add
call
or
mov
push
sbb
add
xor
add
aas
add
popa
sub
inc
and
cmps
mov
fist
iret
aas
in
lock
adc
or
push
jns
inc
mov
add
jecxz
sbb
or
inc
sbb
iret
sbb
adc
add
jecxz
xchg
std
xchg
inc
adc
jne
int
add
jo
test
ss
div
icebp
dec
add
xchg
fwait
ret
cld
ret
mov
inc
imul
cld
adc
scas
aas
lock
add
call
enter
rol
inc
inc
lock
pusha
rcl
aas
stc
hlt
repz
add
(bad)
call
mov
rol
and
aas
cmc
or
test
mov
xor
mov
mov
into
push
pusha
into
adc
call
loopne
sti
push
hlt
pop
or
call
cmp
adc
mov
lock
lods
cmp
add
push
dec
or
or
(bad)
push
jp
(bad)
jmp
adc
sbb
push
sbb
jo
loope
ror
ss
mov
mov
adc
xchg
leave
and
push
sbb
je
push
cmp
lahf
fmul
aas
lea
xor
sbb
sub
cwde
inc
or
jl
add
es
xor
and
dec
cwde
inc
call
jns
xchg
nop
leave
sbb
xor
adc
or
dec
mov
test
xchg
mov
jno
xlat
std
inc
scas
inc
(bad)
ret
call
(bad)
lds
mov
(bad)
rol
sbb
sub
and
ins
in
add
add
push
inc
lods
xor
mov
unpcklps
ret
push
(bad)
sti
mov
clc
and
aas
clc
inc
scas
(bad)
and
dec
mov
ins
int3
inc
adc
loope
xchg
pop
jle
loope
arpl
push
sbb
push
cmp
rol
sbb
or
add
push
inc
clc
pusha
movs
cwde
or
(bad)
and
mov
add
push
mov
jg
loopne
or
xor
adc
push
add
sbb
sbb
test
jmp
mov
sahf
adc
add
inc
cs
cwde
or
mov
int3
xor
dec
push
fsub
adc
pop
adc
pop
or
or
cmp
inc
sub
xor
xchg
or
mov
ret
mov
ret
add
mov
inc
cs
or
call
(bad)
push
dec
inc
add
jns
sub
test
pusha
mov
sbb
jb
and
sub
or
inc
cmp
pop
xor
and
dec
arpl
lds
adc
sbb
xor
icebp
dec
sbb
and
add
call
and
push
repz
lock
enter
mov
dec
or
test
rcl
and
or
repnz
fsub
pop
mov
sub
aaa
dec
add
cdq
and
or
popf
xor
adc
push
inc
adc
push
or
inc
xchg
aad
nop
xor
adc
xchg
test
xchg
(bad)
aas
dec
inc
mov
mov
add
mov
pop
sub
cmps
push
shr
or
adc
ret
mov
test
aas
and
mov
clc
xchg
pop
jo
je
and
xor
push
aad
or
sub
push
sub
xor
inc
hlt
retf
add
add
sbb
cmp
ret
mov
pop
enter
add
add
mov
out
or
test
pop
inc
inc
nop
sbb
jp
mov
push
in
imul
add
push
movs
add
inc
or
or
adc
inc
or
xor
add
inc
add
dec
add
leave
cld
(bad)
pop
imul
xchg
inc
js
rol
xor
xchg
out
inc
movs
mov
xchg
mov
or
sub
test
and
sub
jp
ror
and
jno
inc
xor
mov
loopne
inc
call
xchg
adc
adc
add
repnz
add
jbe
enter
loop
push
sbb
xor
add
cmp
adc
rol
rol
rol
or
lgdtd
cmp
add
add
add
popa
xor
sbb
sldt
je
add
ins
je
add
add
inc
cmp
popa
xor
xor
idiv
add
sbb
xor
dec
add
in
(bad)
stos
add
(bad)
(bad)
scas
jp
pop
test
stos
xchg
out
neg
sbb
shl
rcr
aad
in
fmul
(bad)
in
add
repnz
(bad)
std
add
jmp
enter
ret
add
dec
add
fiadd
mov
add
icebp
push
mov
jecxz
add
not
lods
xchg
fwait
add
repz
jecxz
lods
mov
imul
(bad)
test
mov
(bad)
rol
jnp
adc
fsub
mov
(bad)
loope
arpl
in
repnz
retf
cli
(bad)
push
in
aam
cld
ret
mov
(bad)
aad
sbb
cmp
mov
in
shl
(bad)
fld
mov
pop
xchg
mov
rol
fmul
fdiv
sti
sahf
add
push
stc
leave
dec
jecxz
add
out
std
mov
fstp
(bad)
lock
repnz
outs
retf
scas
dec
(bad)
jmp
fxch
(bad)
jmp
mov
sti
icebp
retf
scas
xchg
enter
cmp
add
std
aad
(bad)
pop
(bad)
jmp
(bad)
(bad)
ror
loope
sti
fimul
ret
(bad)
fdivr
inc
mov
mov
cmps
pop
aaa
retf
jns
mov
mov
loopne
mov
cli
push
push
xchg
dec
add
mov
rep
add
ficomp
in
(bad)
repz
bound
mul
pop
cmc
repz
xchg
pop
adc
mov
xchg
jp
int3
mov
push
push
or
fmul
test
mov
in
stc
(bad)
sti
in
les
ret
mov
(bad)
in
leave
push
add
push
and
out
in
dec
stos
add
stc
(bad)
mov
xchg
(bad)
jmp
movs
pushf
lahf
mov
cmc
jae
test
mov
(bad)
(bad)
mov
add
test
(bad)
(bad)
cli
icebp
retf
cwde
mov
ret
ror
sti
(bad)
call
add
mov
cli
sti
(bad)
(bad)
rol
div
test
or
mov
out
lock
xlat
or
out
or
cmps
adc
loop
loop
push
fbstp
out
sbb
xchg
sbb
sti
cld
lods
xchg
outs
stc
aam
push
add
ror
jmp
adc
mov
sar
stc
into
add
out
adc
movs
or
test
cli
stos
or
rcl
sahf
sbb
mov
ret
movs
sbb
clc
add
loopne
shr
(bad)
mov
rcr
loopne
mov
jns
int3
int3
shl
loope
mov
add
mov
out
out
lock
sar
int
loope
call
cmps
nop
js
fld
neg
add
mov
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
dec
das
pop
sub
xchg
rol
dec
mov
movs
popa
ror
cmp
inc
inc
pop
pop
and
test
and
fdivr
push
and
sub
adc
or
push
push
arpl
xor
cmp
sbb
test
and
add
dec
mov
dec
add
pusha
dec
add
mov
das
pop
xor
push
cmps
inc
adc
mov
loop
cwde
cmp
call
push
sbb
arpl
mov
or
adc
and
out
add
sbb
lods
inc
mov
xchg
inc
js
mov
jmp
mov
push
add
lea
sbb
jns
sbb
dec
push
repnz
jmp
call
test
mov
popa
rol
push
push
pop
fdiv
pusha
retf
jmp
adc
xchg
add
outs
aam
mov
dec
test
ja
sti
not
sbb
xchg
jg
push
pusha
xor
push
adc
hlt
nop
add
cwde
in
test
movs
mov
sar
out
or
inc
shl
add
sub
sbb
push
inc
adc
adc
pop
mov
add
or
or
adc
rol
pop
mov
jbe
ins
adc
cmp
psllq
ret
add
test
push
rcl
xor
rep
mov
push
xchg
cmp
add
xchg
xor
ret
clc
mov
adc
xor
daa
imul
inc
and
inc
or
or
int3
add
call
inc
and
pushf
jae
jns
add
xor
add
pop
push
inc
jb
je
dec
inc
add
or
add
daa
add
test
or
and
push
dec
add
or
les
add
loope
inc
sub
add
add
lods
mov
and
aas
lock
enter
mov
pop
add
test
lods
inc
ret
cmp
mov
mov
and
inc
test
pop
repz
mov
xor
or
cli
mov
add
xchg
add
or
add
xchg
ja
adc
add
or
sbb
fiadd
jae
sub
pusha
xor
and
adc
adc
es
cmp
mov
add
add
inc
or
sbb
or
cwde
jae
and
fiadd
pop
mov
aas
push
loope
xchg
push
cmp
push
inc
pop
and
jb
add
and
iret
cmp
pusha
xor
aaa
jl
hlt
stos
mov
push
jo
add
cmp
jno
inc
add
cmp
ret
add
inc
mov
or
lock
xchg
enter
je
fld
shl
push
nop
add
in
rcl
xor
fcom
jb
or
enter
scas
mov
into
cmp
mov
jecxz
(bad)
xor
(bad)
sbb
pop
sbb
jnp
sbb
pushf
xor
add
lock
and
faddp
xchg
pop
mov
fisub
pusha
xchg
inc
push
xchg
mov
sahf
jge
cmps
jns
fnsave
sub
int
mov
xchg
pop
cmp
adc
in
aas
in
add
add
jle
popf
out
vpunpckhbw
cmp
push
and
adc
loope
jno
loop
rcl
inc
or
jno
and
pop
and
mov
or
mov
aas
pusha
add
jg
inc
cli
call
xchg
sbb
rol
cwde
add
add
push
mov
cmps
xor
add
xor
sub
or
test
xor
xchg
add
dec
push
xor
xor
rol
xor
jbe
sbb
and
popa
push
add
add
and
and
and
sbb
rol
add
dec
add
fcmovbe
push
pop
adc
or
inc
or
pusha
adc
cmp
rol
enter
arpl
add
pusha
adc
sbb
adc
push
add
lock
or
sbb
ds
xor
enter
ror
ds
sub
xor
mov
jne
inc
mov
sbb
adc
xchg
pusha
inc
xor
mov
test
cmp
dec
pusha
jae
add
adc
pop
push
lods
and
xchg
xor
enter
or
test
mov
sbb
push
add
dec
cwde
inc
pop
or
add
xor
rol
sbb
and
retf
add
mov
mov
test
sub
add
lods
and
nop
add
jle
sub
inc
xchg
push
outs
call
test
xchg
xor
or
ret
adc
retf
adc
xchg
push
fadd
add
add
cwde
push
add
add
jle
xor
xchg
push
xchg
mov
pop
test
add
xchg
push
sbb
adc
sub
or
sub
test
mov
xor
nop
and
or
xor
inc
xor
xchg
mov
scas
outs
xor
sgdtd
and
mov
xor
mov
test
(bad)
fidiv
xchg
or
inc
cmp
or
data16
xchg
femms
lock
inc
mov
sub
je
pop
add
lock
pop
(bad)
or
xchg
test
or
add
xor
or
and
sbb
rol
js
mov
adc
pop
loope
inc
push
adc
xchg
nop
add
xchg
or
add
cli
shl
and
rol
add
add
pop
push
and
push
inc
bound
jo
add
mov
push
add
cdq
sbb
or
adc
push
xor
sbb
inc
pop
cmp
or
nop
test
shl
fwait
loop
fbld
stos
das
dec
popa
or
or
mov
inc
add
lahf
add
add
mov
call
(bad)
lds
inc
add
inc
mov
lods
cmp
movs
ret
or
jbe
clc
test
imul
je
leave
pop
lock
scas
mov
and
jecxz
dec
rcr
add
dec
jmp
pop
loopne
and
xchg
not
sbb
dec
cmc
push
je
adc
add
into
and
push
add
add
enter
pusha
add
enter
or
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
sub
or
sbb
repnz
and
push
inc
mov
dec
push
inc
add
cld
inc
repnz
and
adc
inc
jmp
push
hlt
ror
adc
int
mov
je
mov
push
(bad)
in
sbb
aad
ja
shl
icebp
mov
iret
daa
leave
push
mov
mov
sub
imul
sub
lods
inc
fidivr
in
neg
adc
cmp
or
pop
hlt
ror
pop
xor
test
cmps
fs
mov
mov
jmp
clc
loopne
mov
sub
iret
sbb
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
iret
pushf
je
aam
adc
popa
add
jl
and
push
pop
push
mov
mov
mov
mov
adc
icebp
inc
ds
or
pop
inc
ror
rcl
xchg
and
add
daa
add
inc
ins
js
dec
mov
sub
popf
cmc
outs
jns
in
jne
cmp
push
ret
sub
push
and
outs
pop
sub
loopne
fld
xor
fild
add
loopne
pop
outs
clc
loope
pop
cmp
arpl
js
inc
push
lods
loope
(bad)
call
into
or
push
dec
push
add
cmps
stc
out
or
inc
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
hlt
pop
adc
popf
sub
and
repnz
and
nop
inc
adc
sbb
sbb
bswap
add
push
movs
add
loop
movs
push
dec
adc
inc
adc
add
dec
hlt
aas
adc
aaa
pop
aam
rol
xor
das
or
push
push
int
sub
leave
mov
hlt
xor
mov
ins
not
and
lods
cld
shl
jb
xlat
(bad)
sbb
mov
and
ss
std
sahf
loopne
dec
xchg
inc
loop
mov
dec
je
aas
mov
je
in
mov
inc
adc
ss
cld
jae
sbb
dec
add
adc
and
inc
mov
pusha
mov
and
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
outs
inc
out
xchg
les
pusha
xchg
inc
push
xchg
adc
aas
or
push
cs
and
test
sub
cld
xor
adc
mov
and
and
jge
hlt
aas
cmp
popf
mov
inc
inc
ja
xor
aas
inc
sub
loope
das
call
xchg
mov
pusha
inc
fst
dec
xor
push
ficomp
add
jo
popf
ror
aad
push
add
and
add
inc
add
adc
inc
cmps
cld
ror
jno
push
ss
lock
das
mov
xor
pop
pushf
repnz
or
mov
fs
inc
ret
sub
xchg
cs
add
call
and
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
sub
or
sbb
repnz
and
push
inc
mov
dec
push
inc
add
cld
inc
repnz
and
mov
nop
cmp
dec
je
dec
fmul
je
adc
ss
aam
inc
sbb
test
dec
sar
sar
jecxz
(bad)
dec
xchg
sub
rcl
sbb
xchg
add
sub
push
aaa
dec
icebp
rol
retf
add
call
xor
sbb
mov
xchg
or
mov
dec
je
aas
mov
int3
loopne
push
xchg
je
aas
jno
pop
cmp
mov
daa
(bad)
cwde
dec
rcl
shl
xor
and
mov
sub
adc
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
iret
pushf
je
aam
adc
popa
add
jl
and
push
pop
dec
je
outs
loope
add
inc
call
rcr
dec
nop
inc
and
(bad)
icebp
inc
ds
dec
into
inc
dec
je
inc
pop
add
xor
test
adc
add
push
adc
std
(bad)
int
mov
cmc
aad
fbld
bndstx
mov
pop
shl
adc
call
inc
jbe
iret
push
ret
arpl
xchg
nop
lea
xor
fs
inc
mov
adc
push
inc
inc
cmp
dec
cmp
cmp
xchg
fs
inc
into
push
retf
lock
das
xchg
ja
dec
out
jge
push
pop
mov
or
int
jo
jmp
nop
add
scas
jnp
adc
and
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
hlt
pop
adc
popf
sub
and
repnz
and
nop
inc
adc
sbb
sbb
bswap
add
sub
cmp
test
jno
nop
rol
inc
add
inc
ins
and
cmc
aas
mov
pop
arpl
sub
sub
mov
mov
and
les
loopne
js
lods
neg
jl
das
int
cmp
or
je
loope
push
icebp
dec
cmp
pop
xor
push
sbb
sub
or
adc
xor
mov
nop
aas
sub
add
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
lsl
or
sub
push
ret
xchg
or
and
sar
ins
mov
scas
pop
inc
adc
inc
adc
mov
and
mov
dec
fwait
pop
cmp
cmp
dec
ret
sbb
xor
(bad)
and
cld
std
mov
call
jmp
cmp
pop
(bad)
cmp
sbb
mov
add
stc
add
or
inc
sub
add
add
add
add
or
dec
sbb
adc
aas
or
adc
sbb
cmps
pop
ret
test
and
dec
mov
inc
mov
xchg
into
sbb
adc
das
movs
shl
push
adc
xor
mov
xchg
lea
(bad)
or
sub
mov
dec
and
jl
mov
or
add
shr
cmp
rol
inc
sbb
xor
jl
outs
inc
iret
jns
cmp
sbb
adc
and
add
or
inc
sub
add
add
add
add
or
xlat
outs
loopne
bound
sub
adc
xchg
std
repz
inc
sub
adc
dec
movs
dec
sbb
dec
sub
and
xchg
dec
push
dec
cdq
push
fwait
aam
xchg
sbb
pop
push
mov
xchg
leave
bound
(bad)
mov
clc
gs
test
inc
stos
push
push
inc
xor
ffree
add
stc
add
or
inc
sub
add
add
add
add
or
dec
cld
xlat
loope
popf
or
xor
inc
pushf
dec
jno
ror
adc
mov
adc
sub
jno
mov
ret
push
and
ror
mov
inc
add
mov
enter
std
xchg
icebp
pop
and
cmps
or
rcl
fbstp
jg
out
cmp
in
inc
add
stc
add
or
inc
sub
add
add
add
add
or
dec
test
jae
sub
pusha
ret
xchg
adc
sahf
mov
out
push
in
add
and
rcr
icebp
sbb
leave
dec
in
push
xor
pusha
jl
inc
les
leave
leave
mov
inc
push
push
dec
push
shl
dec
inc
mov
cwde
push
and
pop
add
dec
inc
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
iret
pushf
je
aam
adc
popa
add
jl
and
push
pop
push
mov
mov
mov
mov
adc
icebp
inc
ds
or
jge
ror
outs
inc
pop
inc
add
adc
rcl
push
xor
add
inc
dec
sub
popf
jno
inc
pop
and
jbe
sub
or
cmp
dec
xchg
or
mov
mov
ret
rcr
xchg
add
or
(bad)
fiadd
rcl
cmp
add
rol
pop
repz
rol
ret
js
xchg
push
adc
inc
gs
jecxz
out
push
and
cli
inc
push
add
jl
adc
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
hlt
pop
adc
popf
sub
and
repnz
and
push
inc
mov
dec
push
inc
add
cld
inc
repnz
and
xor
adc
inc
jmp
xor
je
adc
pop
push
sbb
xor
sar
fadd
hlt
shl
inc
aaa
and
xchg
cld
xchg
dec
lds
mov
sub
fs
xor
pop
push
outs
fisub
jl
xor
and
inc
hlt
adc
push
pop
or
rcr
or
mov
adc
mov
sahf
jbe
mov
jo
adc
inc
jns
pop
les
inc
push
cld
add
out
jge
adc
or
add
inc
imul
add
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
outs
inc
out
xchg
les
pusha
xchg
inc
push
xchg
adc
aas
or
mov
inc
adc
mov
adc
nop
lar
nop
je
inc
pop
cld
ins
je
and
aam
inc
inc
sbb
nop
xlat
dec
push
sbb
icebp
loop
aad
jne
(bad)
aas
fist
in
xor
ret
dec
les
and
or
push
inc
jo
and
mov
(bad)
push
add
jle
and
loopne
and
push
adc
and
adc
and
push
jle
adc
inc
das
mov
inc
retf
out
and
or
add
add
add
or
inc
sub
add
add
add
add
or
clc
js
adc
lahf
ret
adc
push
in
push
and
xchg
add
outs
push
daa
xchg
push
or
xor
gs
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
sub
or
sbb
repnz
and
nop
inc
adc
sbb
sbb
bswap
add
sub
cmp
test
jno
nop
rol
push
inc
aaa
pop
aam
ror
rcl
push
push
ins
cmc
aad
lods
cmc
(bad)
pop
ja
cmc
xlat
pusha
xchg
xor
fldcw
jge
aas
jno
xchg
dec
fiadd
add
ja
pop
xor
idiv
das
fmul
or
mov
(bad)
test
inc
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
iret
pushf
je
aam
adc
popa
add
jl
and
push
pop
dec
je
outs
loope
add
inc
call
rcr
dec
nop
inc
and
cmp
mov
and
dec
ror
ror
add
ss
(bad)
rcl
cmc
aad
lods
cmc
(bad)
pop
ja
cmc
xlat
pusha
xchg
in
adc
cmp
sbb
mov
mov
add
fnstenv
xor
lock
outs
mov
popf
inc
add
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
and
push
push
loopne
sbb
dec
pushf
dec
adc
push
dec
adc
test
xchg
jo
stc
iret
and
or
xor
loopne
push
and
enter
lds
aam
jo
or
xchg
clc
jp
loope
mov
jmp
jle
pusha
dec
movs
loopne
inc
push
or
mov
loopne
popa
rol
adc
and
mov
push
adc
mov
shl
cwde
pusha
aad
popa
mov
or
and
adc
cwde
inc
jb
jmp
mov
shl
in
fxch
in
add
lock
dec
sub
dec
hlt
or
test
cwde
sbb
xor
scas
shl
sbb
rcl
adc
or
and
xchg
adc
mov
xchg
test
fdivr
pop
add
cld
call
push
mov
mov
or
mov
std
jp
aaa
add
lock
cmp
adc
pop
xor
push
add
icebp
(bad)
sbb
sub
dec
daa
cmp
mov
and
mov
test
push
or
xchg
or
ret
jo
add
or
(bad)
das
and
adc
jno
mov
rol
push
call
jbe
cmp
stos
les
add
(bad)
(bad)
enter
add
adc
xor
and
inc
adc
ins
rol
aas
mov
mov
push
retf
inc
icebp
push
and
mov
pop
or
aas
and
nop
push
mov
je
iret
adc
loope
cmp
rol
arpl
sar
jno
add
add
add
adc
or
or
or
or
dec
aas
and
loopne
inc
and
mov
ror
sbb
ins
or
cs
stos
push
sbb
push
in
aas
lds
cwde
jo
inc
xor
push
test
push
push
dec
push
push
pop
cld
mov
rol
add
or
js
xor
add
inc
add
mov
sti
pop
mov
sub
or
sbb
repnz
and
nop
inc
adc
sbb
sbb
bswap
add
sub
cmp
test
jno
nop
rol
push
inc
aaa
pop
aam
ror
rcl
push
push
ins
cmc
aad
lods
cmc
(bad)
pop
ja
cmc
xlat
pusha
xchg
ins
ss
inc
cld
ror
fldcw
mov
mov
leave
aas
jno
(bad)
sar
in
popa
inc
frstor
or
inc
fisubr
inc
retf
dec
add
add
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
loop
fcom
loopne
xor
pop
xchg
add
test
or
xor
and
adc
cmp
in
and
dec
aam
add
sbb
pusha
cld
jnp
adc
adc
int3
sbb
loope
mov
adc
or
mov
xlat
dec
and
mov
push
mov
xchg
pop
ret
or
jns
and
pop
cmc
ret
rcl
add
mov
mov
fdiv
das
dec
ror
sbb
shl
add
mov
mov
popa
add
fld
cmp
ins
or
adc
push
cmp
and
popa
mov
push
retf
and
push
enter
mov
inc
es
push
adc
push
repz
xor
cs
(bad)
pop
sub
inc
mov
dec
rcl
loopne
fild
xchg
push
arpl
pop
(bad)
pusha
mov
repz
das
lods
cmp
and
add
push
or
stos
jmp
cmps
imul
sar
rol
dec
add
test
add
add
inc
(bad)
aas
push
test
add
clc
repz
adc
mov
adc
cli
mov
(bad)
inc
xor
(bad)
sbb
and
cs
add
add
xchg
ror
in
cld
ret
ret
aas
stos
aam
test
sub
div
inc
sub
test
mov
push
and
mov
and
or
push
ret
xor
inc
cmp
add
aas
imul
rcr
mov
add
cmp
pop
retf
and
inc
push
xchg
loop
adc
push
inc
rol
add
add
adc
std
mov
adc
loopne
add
mov
cmp
push
dec
aas
jecxz
xor
aas
outs
mov
fdiv
or
mov
sub
fs
push
sar
add
adc
add
pop
adc
add
outs
push
fadd
shr
dec
or
pop
mov
and
dec
or
mov
xor
stos
sbb
fnsave
and
xchg
jnp
inc
add
lds
pop
pop
sbb
jmp
pop
or
iret
pushf
je
aam
adc
popa
add
jl
and
push
pop
dec
je
outs
loope
add
inc
call
rcr
dec
nop
inc
and
cmp
mov
and
dec
ror
ror
add
ss
(bad)
rcl
cmc
aad
lods
cmc
(bad)
pop
ja
cmc
xlat
pusha
xchg
in
adc
test
adc
add
(bad)
daa
pop
mov
(bad)
ret
xor
adc
fstp
cld
jae
or
dec
add
or
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
inc
imul
and
sbb
iret
loopne
sbb
pop
xchg
sbb
inc
mov
mov
mov
sbb
mov
stc
add
or
inc
sub
add
add
add
add
or
add
or
jne
mov
sbb
out
xchg
test
(bad)
push
xlat
add
sub
test
and
add
sbb
stc
add
or
inc
sub
add
add
add
add
or
add
or
daa
mov
rcr
and
cmps
das
popa
inc
fs
mov
or
inc
mov
sbb
dec
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
mov
pop
mov
dec
test
mov
jg
stos
jl
xchg
inc
pusha
xchg
sub
or
sbb
add
add
rol
rol
rol
or
lgdtd
pop
add
add
popa
xor
sbb
push
add
jne
add
ins
je
add
add
inc
dec
inc
cmp
popa
cmp
xor
idiv
add
in
add
cmc
add
add
retf
mov
push
dec
(bad)
(bad)
sbb
scas
mov
add
aam
add
iret
enter
(bad)
fld
mov
imul
xor
int
lock
or
int
call
add
enter
add
(bad)
(bad)
clc
data16
lods
add
xor
(bad)
std
ss
ins
or
imul
jmp
(bad)
mov
std
mov
call
inc
inc
jmp
aam
enter
push
push
into
mov
(bad)
jns
cld
fmul
add
jmp
pushf
add
call
aad
add
mov
inc
aam
sub
add
add
dec
(bad)
fcomp
movs
pop
add
add
mov
pop
cli
and
push
push
mov
add
fcomp
dec
dec
(bad)
cwde
add
(bad)
retf
fsubp
lock
out
add
cld
test
add
std
fcmovnu
imul
clc
lock
arpl
and
(bad)
add
mov
iret
sub
push
push
out
or
test
add
xchg
add
call
stos
test
cmc
(bad)
jmp
sub
(bad)
jecxz
add
in
stc
(bad)
in
xor
std
repz
not
sti
loopne
cli
test
mov
in
out
xchg
dec
add
mov
(bad)
in
lea
mov
pop
repz
(bad)
std
repz
push
fisubr
cmc
mov
repnz
xor
mov
fld
jmp
(bad)
or
pop
push
in
jne
sti
mov
mov
pop
sbb
mov
stc
cwde
adc
mov
xlat
push
es
fimul
mov
movs
or
adc
cmc
dec
push
(bad)
std
(bad)
in
add
(bad)
fcomi
mov
jecxz
push
in
sbb
add
push
push
(bad)
ret
xchg
(bad)
mov
clc
or
dec
or
sub
out
or
loope
hlt
mov
(bad)
in
cpuid
ins
sbb
mov
call
or
add
pushf
cmc
idiv
(bad)
lods
or
push
addr16
mov
div
repnz
ja
fsubr
in
push
xchg
std
ins
outs
frstor
mov
inc
jmp
sub
mov
cld
iret
xlat
jmp
add
cld
repnz
stos
xchg
inc
cld
dec
dec
in
test
cmc
les
cmc
out
jecxz
sbb
sbb
mov
dec
out
pop
jmp
push
repz
ror
sbb
iret
mov
rol
hlt
mov
repnz
call
hlt
stc
mul
add
jno
lock
(bad)
nop
(bad)
cmc
aad
repnz
or
dec
aaa
out
push
fadd
sbb
mov
sbb
add
sti
add
inc
sti
add
nop
pop
mov
fidivr
clc
icebp
adc
mul
(bad)
rcl
out
loop
hlt
loop
(bad)
movs
add
pop
and
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
js
test
pop
jge
push
xchg
add
push
mov
jle
pop
mov
sub
cmp
inc
xor
stos
(bad)
mov
sbb
jo
enter
mov
push
movs
xor
rol
inc
add
pop
test
retf
pop
gs
call
push
pop
repnz
leave
xor
mov
fadd
sub
ja
std
loopne
inc
rcr
clc
jl
sub
mov
or
add
or
sbb
xor
ret
adc
or
xchg
cmps
int
movs
inc
xchg
(bad)
outs
mov
pop
inc
dec
sub
jmp
or
push
push
xor
dec
popf
movntps
lods
not
test
dec
jno
xor
push
cmp
xor
dec
mov
adc
mov
mov
xchg
clc
ins
lahf
pop
push
dec
add
outs
jo
add
mov
adc
add
mov
adc
add
int
fnstcw
pushf
push
les
adc
cmp
push
mov
mov
imul
push
out
jle
add
pop
sub
cmp
sub
and
inc
pop
loope
add
xor
ror
cmp
push
pop
cmp
inc
add
add
iret
cmp
mov
in
or
outs
inc
inc
loope
cmp
and
mov
push
ds
push
shr
mov
adc
rcl
inc
mov
dec
inc
xchg
jo
add
pop
and
sub
xor
and
into
cmp
retf
mov
xor
sar
shr
in
test
pop
push
pop
in
adc
mov
pop
inc
jo
sbb
lods
mov
and
aaa
push
cmp
add
ss
sub
ret
inc
sub
lods
inc
pop
add
pop
adc
sbb
xor
pop
shl
cmp
mov
out
jmp
scas
ins
mov
xor
jp
and
xor
enter
pop
sub
sti
mov
or
adc
mov
pop
sbb
mov
xor
test
jb
xor
sub
add
iret
inc
cs
loopne
or
ror
into
adc
or
out
mov
fdiv
xchg
inc
adc
xchg
int3
and
inc
add
add
push
dec
and
ins
mov
rcl
push
icebp
push
mov
mov
inc
add
les
inc
adc
xchg
inc
or
pusha
jmp
(bad)
push
push
mov
shl
dec
imul
and
jmp
and
adc
mov
test
rcl
inc
es
add
push
mov
inc
das
cmp
xchg
xor
pop
add
adc
mov
adc
test
push
and
add
pop
in
jecxz
(bad)
aas
push
sub
add
inc
clc
fsubr
cmp
jae
inc
push
loopne
rcr
shl
sub
xchg
or
stos
loopne
jge
mov
xor
mov
add
je
add
inc
jl
push
inc
aas
push
adc
imul
pop
sub
xor
sbb
inc
sbb
js
pop
sbb
add
in
nop
jmp
cmp
adc
lds
shl
or
jle
cmps
test
push
leave
mov
dec
fmul
jmp
and
dec
mov
add
js
add
or
and
fwait
es
cdq
bswap
test
inc
and
or
scas
test
pop
add
inc
push
cld
icebp
push
es
pusha
psubusw
pop
add
enter
inc
or
ret
mov
add
lock
mov
cmp
add
push
and
mov
sub
je
js
push
mov
push
mov
sbb
inc
adc
add
in
inc
mov
mov
adc
inc
mov
add
and
xchg
fwait
pop
ret
add
mov
xor
loopne
mov
or
aam
mov
add
pop
adc
adc
rcr
sbb
or
push
inc
add
jb
push
cld
mov
sub
ret
push
dec
push
adc
ins
popa
xchg
and
(bad)
push
dec
mov
xchg
mov
inc
and
mov
or
xchg
sbb
add
jp
add
dec
add
shl
cmc
ror
inc
loopne
daa
add
adc
dec
inc
add
pusha
adc
ret
xor
fldenv
pop
and
jne
jo
or
pusha
sbb
sbb
xchg
add
push
rol
and
add
pop
in
pusha
pop
stos
mov
iret
pop
add
add
push
mov
inc
push
or
fs
add
add
nop
popa
adc
adc
sub
adc
pop
add
loopne
es
lods
outs
mov
and
add
push
cwde
lahf
inc
adc
pop
adc
mov
sbb
jo
jge
add
mov
mov
pop
adc
mov
pop
sbb
jo
sbb
or
sub
nop
adc
loope
adc
add
add
cwde
or
adc
cli
adc
mov
mov
sub
add
enter
mov
pop
test
rol
adc
js
out
out
jo
or
loop
jne
test
add
popa
pop
cmc
lock
cmp
jno
les
or
adc
add
lock
das
and
adc
push
and
in
enter
pop
add
push
pop
cld
retf
inc
push
pusha
add
inc
add
sub
inc
cwde
add
pop
xor
rcr
or
nop
mov
(bad)
bound
adc
loopne
sbb
add
adc
mov
add
vmread
ret
pusha
add
dec
fld
xor
xchg
adc
loopne
hlt
push
adc
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
out
dec
xor
out
leave
or
adc
dec
adc
lds
pop
push
push
mov
loope
(bad)
and
and
sub
(bad)
jo
inc
loopne
inc
add
rol
xor
sbb
jecxz
push
sub
sbb
xor
cmp
mov
(bad)
jg
and
or
cmp
scas
xchg
and
dec
dec
fdiv
ins
add
in
mov
push
mov
dec
adc
lea
(bad)
push
ins
dec
add
xchg
rcl
pusha
push
aaa
fcomp
ss
push
mov
out
or
mov
test
aam
and
adc
data16
add
enter
nop
adc
mov
mov
loope
test
or
lds
inc
sub
icebp
inc
push
mov
and
dec
sbb
sub
std
out
add
(bad)
les
inc
lock
xor
xchg
jo
xchg
lea
add
lea
rcr
adc
sbb
mov
jmp
lar
adc
dec
sub
test
pusha
and
mov
loope
fisttp
rol
lods
mov
dec
sub
(bad)
adc
mov
mov
or
adc
ins
or
sbb
bound
xchg
loopne
lock
mov
sbb
mov
mov
mov
ret
adc
ret
aas
sbb
(bad)
and
or
popa
inc
sbb
inc
and
leave
test
shl
mov
test
sbb
and
pop
sbb
inc
pusha
jecxz
sbb
push
inc
or
into
test
pop
retf
ins
nop
push
or
mov
ins
jo
pop
mov
adc
sub
sbb
mov
call
or
fcmovnu
mov
sub
int
xchg
sub
ins
pop
add
or
out
mov
cwde
cmps
sbb
jno
test
push
enter
add
loop
or
cwde
nop
sbb
movs
js
add
sub
dec
cmp
out
lods
js
movs
mov
es
push
xor
xchg
jns
movs
iret
xor
pushf
and
jl
adc
mov
in
or
into
add
push
sub
jb
adc
mov
mov
xchg
cmp
cmp
call
push
cmp
mov
and
lock
add
adc
cmp
dec
shl
pop
cwde
mov
xor
lahf
adc
sbb
add
add
cmp
hlt
into
daa
cmp
call
and
mov
inc
cld
xchg
cmp
pop
push
imul
push
mov
pusha
inc
hlt
push
inc
add
retf
sub
ror
mov
mov
sbb
(bad)
hlt
loopne
adc
cmps
mov
push
xchg
out
add
rol
rol
daa
xor
test
mov
xor
sbb
sub
call
ins
push
into
or
cld
mov
in
cmp
and
mov
sub
mov
cmc
xor
adc
xchg
in
mov
movs
inc
jo
iret
aam
cmp
or
icebp
jae
aas
cmc
cli
or
fcomp
push
inc
and
adc
rol
or
test
xchg
add
loopne
adc
inc
mov
mov
push
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
scas
xchg
scas
pop
dec
push
cmp
mov
ret
xchg
and
(bad)
lods
add
add
les
lock
clc
ret
ret
enter
mov
adc
int
pop
mov
int3
aas
jns
cwde
add
xor
or
adc
mov
adc
stos
pusha
xor
mov
inc
(bad)
in
sti
mov
rcl
xor
das
push
xor
push
and
jecxz
les
arpl
jo
shr
retf
push
retf
xor
dec
xor
pop
cmp
or
inc
mov
push
mov
fdivr
inc
mov
pop
pop
movs
dec
xchg
pusha
xor
lods
loop
ins
pop
mov
loop
sbb
data16
mov
push
adc
aas
inc
jo
mov
and
mov
aam
or
and
and
adc
push
mov
or
iret
int3
or
stos
mov
les
dec
xchg
sbb
xchg
movs
xchg
out
push
xchg
adc
icebp
push
fwait
dec
cmp
inc
jp
imul
rol
je
adc
jle
inc
jb
add
dec
mov
push
xchg
add
popa
fnstsw
bound
xchg
dec
nop
add
test
into
xor
mov
xor
dec
adc
add
inc
div
pop
or
test
(bad)
cwde
add
and
push
movs
dec
movs
mov
test
mov
xor
sbb
lds
or
inc
dec
adc
adc
jbe
mov
and
add
sub
push
lds
and
sub
test
cmp
pop
jno
daa
sub
test
(bad)
mov
std
mov
inc
jecxz
inc
dec
pop
or
sub
adc
add
adc
inc
xchg
movs
rcr
add
xor
inc
lods
imul
push
add
add
cmp
je
sbb
shl
sub
bound
(bad)
sbb
les
test
outs
sbb
mov
loop
sar
inc
sub
and
inc
bsf
stos
les
mov
pop
sbb
cdq
rol
sub
ss
push
mov
mov
and
xor
aas
in
mov
push
and
cs
adc
call
jle
inc
inc
jb
out
and
lahf
lods
mov
add
out
mov
or
retf
movs
shl
out
out
out
or
mov
sti
adc
inc
xor
and
clc
repz
xchg
add
jae
daa
push
sbb
adc
inc
in
or
shr
inc
xor
cmp
xor
les
enter
sub
fimul
mov
sar
jno
cmp
xchg
xchg
out
test
adc
sbb
ss
pop
cmp
mov
int3
ficomp
jmp
inc
xor
retf
aam
in
jns
add
das
pop
ficom
inc
test
out
push
ja
dec
loope
push
add
or
sub
mov
outs
daa
popf
clc
sub
sbb
ret
mov
and
adc
inc
pop
je
mov
add
mov
xor
ret
jl
dec
or
(bad)
mov
or
scas
mov
or
les
push
add
test
add
repz
adc
add
add
lock
invd
in
mov
enter
dec
and
adc
inc
sub
add
add
mov
mov
bound
sahf
icebp
inc
add
into
nop
xchg
mov
push
and
in
inc
push
fist
xchg
clc
cdq
or
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
iret
lahf
aas
sub
mov
ret
xchg
and
hlt
mul
mov
xor
add
les
(bad)
and
inc
mov
dec
mov
push
add
ja
pushw
sub
cld
test
jg
cwde
add
and
add
add
sbb
sbb
es
xchg
ror
xchg
dec
cli
rcr
movs
push
int3
pop
cld
or
je
(bad)
pop
pop
sbb
xchg
and
sbb
inc
mov
test
mov
add
scas
movs
call
add
sub
inc
pop
add
arpl
mov
adc
cmc
rsqrtps
daa
popa
push
popa
shl
std
add
xchg
bound
push
mov
mov
stc
cmps
xchg
cmps
dec
mov
pop
sbb
xchg
xchg
cli
ret
les
sub
adc
pop
test
mov
jno
movs
mov
inc
mov
pop
or
cmc
dec
adc
dec
and
add
leave
inc
inc
mov
inc
pop
add
pop
aas
test
fist
pop
mov
addr16
pop
out
jl
enter
out
xor
and
sub
and
ret
sbb
push
cmp
and
mov
sbb
adc
(bad)
jl
jecxz
push
jne
rol
add
jecxz
push
call
sub
add
inc
inc
mov
pop
sbb
add
aam
ret
pop
pop
inc
icebp
pop
push
push
inc
adc
adc
push
sub
jno
xor
push
xor
ror
jl
inc
add
xor
inc
sub
or
(bad)
xchg
add
ror
xor
jecxz
inc
or
js
inc
push
push
cmp
push
cmp
shl
cmp
sub
movs
retf
pop
je
xchg
xor
and
dec
or
dec
pusha
loope
mov
je
bound
ret
aad
ret
sub
and
xor
adc
hlt
inc
push
pop
mov
mov
sbb
in
or
scas
jle
adc
iret
es
push
mov
(bad)
xor
pop
or
dec
xor
lds
push
pop
cmp
sbb
pop
mov
ins
inc
dec
xchg
std
mov
daa
lods
inc
inc
dec
jb
adc
and
xchg
jb
push
cmp
add
push
sbb
cmps
inc
push
or
push
inc
cmp
mov
jecxz
add
mov
ins
rcr
mov
mov
sbb
loop
pop
push
inc
and
adc
hlt
inc
inc
ins
jg
sar
pop
xor
mov
jmp
inc
out
mov
aas
in
inc
lahf
cld
inc
jo
mov
add
rcl
add
mov
rcr
pop
jae
fild
and
inc
or
aaa
aam
add
or
dec
inc
xchg
or
adc
and
sub
aam
loopne
iret
pop
push
test
add
pop
sbb
cmp
adc
mov
jmp
js
lods
ins
jo
adc
jnp
adc
lock
adc
int
dec
ss
je
xor
pop
cld
add
push
stc
adc
add
xor
inc
cmp
and
sub
(bad)
(bad)
mov
loopne
xchg
shl
(bad)
lea
mov
inc
sbb
or
add
sub
or
add
add
push
pop
ret
loopne
and
and
popa
fwait
xchg
test
cmp
inc
push
pop
sbb
mov
sbb
movs
xchg
or
movs
add
add
or
inc
sub
add
add
add
add
or
add
or
lock
sub
pop
enter
xchg
jno
sub
mov
or
jecxz
add
test
aas
add
enter
xor
lahf
xchg
aaa
out
add
daa
(bad)
loopne
xchg
push
adc
bound
mov
add
add
and
or
sbb
adc
fnstsw
or
push
sub
popf
jg
(bad)
pop
sbb
cmc
lahf
add
push
mov
int3
cli
shufps
jno
ror
hlt
xadd
xor
or
mov
cmp
loope
push
imul
ss
mov
call
jb
lods
lds
adc
xchg
(bad)
xchg
sbb
inc
mov
and
sub
dec
mov
pop
inc
mov
inc
mov
retf
mov
xor
es
push
or
push
or
leave
sbb
push
sub
add
adc
jo
xchg
pop
sbb
popa
ss
inc
add
and
mov
xchg
rcl
movs
leave
inc
add
lahf
adc
adc
rcl
xor
xor
adc
ss
adc
inc
ins
pop
loope
push
add
jae
or
mov
ins
add
fnstsw
movs
adc
aas
jecxz
and
or
dec
pusha
pop
inc
jo
loop
mov
gs
adc
sbb
nop
outs
inc
or
inc
popf
mov
fs
shl
xchg
xchg
cmps
fstp
loope
xor
pusha
ret
aas
and
bndcn
or
nop
sbb
je
rcl
and
jmp
test
pop
mov
mov
or
xor
xor
leave
inc
xor
iret
and
in
or
pop
inc
or
mov
sbb
dec
mov
xor
mov
aam
and
inc
adc
or
sub
ja
or
rol
or
add
cmp
nop
push
add
loope
jae
adc
sbb
push
je
aas
pop
cld
push
xchg
je
cmovae
adc
dec
cmp
loopne
pop
jb
mov
pop
xchg
call
ds
adc
inc
fiadd
sar
out
mov
lock
sahf
test
ss
adc
sub
nop
ret
in
adc
mov
stos
mov
or
ret
(bad)
mov
sbb
sar
inc
jb
and
inc
push
adc
dec
int
stc
rol
inc
add
xor
and
add
test
inc
xor
cmp
mov
(bad)
std
add
aas
sbb
mov
push
pop
dec
lds
popf
shr
loope
sbb
aas
or
in
sbb
jg
aad
sub
inc
mov
pusha
mov
enter
mov
mov
mov
loop
popf
xor
jno
in
xor
dec
add
mov
test
or
fidivr
dec
fsubr
jnp
mov
in
xchg
aaa
add
or
ret
mov
jl
inc
sub
dec
adc
add
or
inc
sub
add
add
add
add
or
add
or
dec
xlat
sub
stos
pushf
cmp
enter
xchg
pop
(bad)
add
xor
add
mov
or
inc
or
sub
cld
popa
popa
xchg
push
movs
retf
(bad)
(bad)
fdivr
add
(bad)
cli
data16
xchg
xchg
adc
sub
or
cmp
sub
sti
(bad)
in
cmp
and
dec
and
jmp
or
push
aad
not
fcomp
bound
sub
mov
mov
inc
(bad)
(bad)
repz
push
xchg
(bad)
call
push
sbb
dec
leave
cmps
jae
sbb
xor
xchg
and
add
loopne
pop
mov
lds
icebp
adc
xchg
(bad)
xchg
sbb
test
jmp
cmp
aam
cmc
hlt
icebp
(bad)
mov
push
hlt
outs
mov
movs
mov
cmp
loope
mov
mov
and
add
mov
repz
push
sbb
pop
cli
sub
fcom
movs
es
stc
jo
sbb
jl
imul
sbb
pop
and
leave
adc
add
dec
mov
jno
adc
sub
inc
cmp
test
jmp
and
shl
jl
sar
push
add
aas
push
pusha
mov
pusha
ret
aas
js
test
adc
adc
lock
push
in
test
ins
xor
adc
dec
add
or
xchg
pop
test
test
push
and
push
or
pop
fxch
aas
pop
push
call
mov
ins
add
inc
and
or
rcl
jp
cli
iret
mov
sbb
ins
pop
fidivr
int3
xor
mov
sbb
jno
push
add
push
(bad)
and
add
and
or
das
sub
retf
es
cld
adc
mov
cld
add
sbb
pop
and
test
push
add
adc
add
in
pusha
or
hlt
les
les
adc
adc
adc
or
push
cmp
or
int
neg
sub
cmc
repz
cmp
mov
adc
aas
add
je
aam
sub
add
pop
retf
aas
dec
je
or
inc
lock
dec
adc
fisub
ror
scas
(bad)
mov
aaa
adc
into
jo
test
add
push
cmp
mov
les
mov
or
cld
xor
xor
popa
mov
cmps
pop
cmp
aas
dec
aas
in
sar
cmp
sub
sub
ss
jnp
rcl
sub
xor
add
test
adc
adc
cmp
xchg
cmps
(bad)
or
push
inc
jecxz
sbb
mov
cmps
push
sbb
dec
daa
mov
add
and
enter
rol
sbb
ficomp
movs
and
in
and
xor
ret
jl
rcr
mov
je
inc
sar
pop
push
ret
pop
xchg
leave
aas
xor
pop
adc
(bad)
fcom
aas
or
and
out
adc
inc
and
cli
hlt
sysenter
jg
clc
out
xchg
aaa
pop
pushf
scas
dec
cli
xchg
(bad)
daa
sbb
adc
xor
push
rol
inc
pusha
(bad)
adc
add
stc
add
or
inc
sub
add
add
or
add
or
rcr
adc
mov
inc
add
mov
shl
rcr
in
adc
nop
push
adc
inc
mov
add
nop
or
cmp
pop
pop
pop
inc
push
mov
rcr
(bad)
jmp
jmp
adc
mov
push
cdq
jge
ja
cwde
icebp
(bad)
xchg
adc
mov
hlt
cmps
adc
xor
adc
push
xchg
adc
jmp
test
add
inc
add
(bad)
sbb
pop
fisub
and
sbb
dec
ret
test
cmps
sub
les
test
call
int3
and
mov
xchg
ret
mov
ret
and
adc
test
mov
fistp
mov
jnp
adc
das
dec
mov
sub
aad
push
sub
push
adc
jecxz
adc
mov
in
adc
xor
add
pop
test
data16
jno
fs
sbb
stos
and
test
adc
xor
or
and
inc
sbb
inc
add
aas
jmp
adc
jbe
jl
ret
inc
lock
dec
(bad)
sbb
or
ret
mov
xchg
dec
sbb
aaa
nop
cmp
aam
add
pop
xor
and
xchg
inc
ror
ja
jb
mov
sbb
sbb
inc
add
pusha
and
or
sbb
mov
mov
retf
je
retf
aas
push
aam
enter
mov
sub
int3
xor
add
mov
sbb
cmp
adc
inc
outs
sbb
ret
xor
xchg
ins
inc
push
arpl
sbb
in
test
aam
xchg
inc
dec
shl
sbb
mov
test
call
xor
xor
xor
lea
xchg
lock
add
push
push
add
mov
mov
dec
or
psrlq
ret
push
lock
or
adc
(bad)
test
movs
adc
mov
ss
sub
mov
mov
pcmpeqb
and
and
add
xor
cmp
xchg
add
cmp
sub
inc
inc
cmp
xchg
or
adc
mov
hlt
lock
inc
cld
xchg
lock
xchg
inc
mov
ins
mov
xor
mov
leave
test
popa
sub
popa
enter
out
mov
ror
add
mov
push
adc
push
jp
mov
pusha
sar
rcl
add
dec
and
sbb
shl
jne
call
xor
sbb
pusha
add
push
mov
and
sbb
and
(bad)
lods
or
sub
dec
enter
jmp
and
sub
mov
push
out
jl
dec
pop
scas
sbb
(bad)
jecxz
jno
cmp
or
test
adc
mov
add
int3
ror
aas
xor
inc
add
into
adc
in
jecxz
int3
cs
inc
mov
push
enter
cld
add
sbb
add
sbb
out
mov
push
in
pop
out
into
inc
imul
icebp
inc
stos
mov
push
ins
lock
or
xor
and
sbb
loopne
adc
adc
pop
add
push
and
jle
lahf
test
pusha
lea
add
push
or
push
ret
int3
das
jb
dec
loope
sub
adc
pop
loope
add
inc
sbb
adc
inc
(bad)
mov
push
add
les
js
inc
dec
nop
adc
xor
pop
sub
xor
stc
pop
das
inc
cmc
(bad)
jp
adc
fcom
and
mov
ja
pusha
sbb
ror
inc
ins
pusha
add
adc
fild
popa
push
sub
add
xor
pop
push
clc
ret
mov
imul
shl
push
add
retf
mov
ror
and
sub
push
sbb
loopne
mov
fwait
or
adc
add
pop
mov
xor
rol
sbb
cli
push
rol
mov
add
adc
add
add
(bad)
nop
mov
pop
add
int3
lea
rcl
and
(bad)
daa
test
mov
dec
inc
xor
rol
push
fiadd
or
and
add
jno
cmp
sar
mov
ret
sbb
nop
ins
adc
add
inc
or
adc
or
das
mov
mov
pop
push
sub
fadd
inc
sbb
or
(bad)
mov
and
fdivr
sub
(bad)
jb
fs
sbb
(bad)
adc
jg
pusha
or
enter
wrmsr
in
jecxz
loop
mov
mov
add
gs
add
push
push
sub
sbb
jne
clc
adc
jge
push
and
loopne
adc
add
sbb
lahf
imul
(bad)
cs
mov
mov
rcl
mov
aas
mov
xor
cmp
lock
or
pushf
add
push
dec
lahf
add
inc
clc
(bad)
push
dec
and
loope
dec
test
inc
fsub
nop
jle
loopne
popa
inc
mov
inc
add
clc
push
inc
sub
test
pop
push
push
pop
clc
ins
add
mov
int
(bad)
std
test
pop
mov
and
xor
shr
dec
ror
add
mov
and
or
pop
xchg
add
add
dec
sbb
nop
mov
arpl
or
jl
pop
add
rol
loope
xor
add
rol
xor
bswap
inc
int
push
add
test
sub
mov
xchg
add
and
dec
into
mov
pop
mov
and
(bad)
mov
adc
xor
rcr
adc
mov
adc
cmp
outs
inc
and
adc
movs
fstp
das
aad
dec
dec
sub
xlat
pusha
(bad)
xor
push
jno
push
add
or
inc
adc
push
nop
and
jb
add
add
popa
inc
dec
mov
or
or
cmp
popa
rcl
xor
add
sub
pop
addr16
and
loopne
and
and
xor
ds
ret
nop
add
mov
add
or
inc
sub
add
add
or
add
or
jo
aas
jg
adc
pop
enter
adc
cmp
push
inc
jl
pop
mov
inc
mov
pushf
enter
push
cwde
xor
xchg
or
dec
add
hlt
call
xor
(bad)
in
sbb
hlt
(bad)
or
js
cmp
mov
add
clc
aam
add
add
cmp
movs
loopne
push
or
lock
cdq
push
sub
mov
div
push
jnp
push
clc
inc
popa
nop
pop
gs
call
adc
push
test
pop
mov
cmps
mov
or
rcl
notrack
cmp
jg
push
xor
inc
mov
push
imul
dec
popf
and
mov
mov
cs
in
iret
or
xor
dec
add
loop
xchg
add
retf
fcom
add
call
or
and
test
xor
pop
push
sbb
loop
lea
ret
mov
rcr
add
and
mov
mov
clc
pop
add
add
and
or
sbb
xchg
aas
gs
add
or
or
add
icebp
(bad)
adc
push
add
add
cld
push
ret
pushf
js
or
jo
les
movs
push
nop
adc
inc
inc
mov
pop
pop
add
or
xor
nop
aas
dec
lock
into
aas
sbb
jo
sub
aam
inc
add
nop
add
mov
cmp
xor
mov
sbb
sbb
xchg
sti
or
mov
movs
sar
push
cmp
nop
aas
pop
in
lock
cld
add
adc
test
add
xor
aas
jns
jno
add
and
xor
fs
add
mov
clc
jge
and
pop
push
xor
sub
les
loopne
push
dec
pop
add
jge
rol
(bad)
lock
mov
test
add
cmps
dec
inc
retf
cmp
push
imul
sub
and
xchg
dec
and
push
pop
lods
push
or
nop
sub
sar
mov
mov
aas
jl
xchg
inc
cmp
sbb
lods
movs
cmps
dec
rol
push
or
into
aas
xchg
inc
and
sub
push
push
sbb
mov
xor
adc
mov
and
jecxz
pusha
jo
xor
push
cld
xor
int3
push
and
or
repz
push
mov
jb
lsl
pop
add
ror
adc
fdiv
test
rcl
dec
test
popa
sbb
push
add
outs
mov
dec
int
cmp
cld
jae
cmp
mov
mov
jmp
jns
add
inc
icebp
js
repz
dec
adc
out
dec
add
and
in
inc
dec
add
add
add
call
jl
mov
shr
xchg
mov
arpl
ss
(bad)
loopne
nop
pop
jmp
add
shl
or
push
and
mov
sahf
rcr
shl
sub
adc
cmp
lock
adc
mov
ret
sbb
inc
add
and
or
fcom
dec
scas
mov
push
cmp
or
and
es
sti
xchg
adc
add
mov
and
sbb
mov
mov
pop
daa
cld
xchg
push
inc
xor
add
enter
ret
nop
loop
xchg
cmp
paddsb
adc
pop
add
les
adc
push
retf
pop
push
rcr
movs
add
test
add
pushf
adc
or
nop
nop
sbb
lock
sbb
nop
mov
mov
adc
nop
rcl
xchg
mov
or
dec
lea
out
xchg
adc
dec
push
sub
cwde
loopne
(bad)
ret
sbb
mov
(bad)
mov
adc
repnz
or
add
cmp
sbb
xor
push
or
(bad)
xor
mov
iret
mov
or
add
sbb
add
loopne
adc
xchg
jp
mov
fs
inc
dec
icebp
cmp
adc
push
ror
rol
push
rol
jo
inc
adc
lea
and
and
repnz
push
adc
sub
and
lock
and
add
or
push
add
or
outs
push
sbb
nop
aam
loopne
js
add
sbb
add
mov
add
sub
stos
(bad)
rol
inc
adc
sbb
test
pusha
pop
stos
push
movs
sldt
add
pop
popf
dec
pop
rol
sub
and
sub
add
test
cwde
add
inc
lock
lds
mov
dec
adc
sbb
aas
add
mov
push
pusha
sar
add
cld
ret
scas
dec
enter
mov
or
ret
add
inc
pusha
mov
sub
mov
adc
add
inc
push
sub
sub
inc
xor
lods
ror
mov
and
shr
or
push
xor
inc
fstp
xor
dec
inc
test
or
mov
movs
dec
sbb
mov
dec
test
movs
mov
shl
mov
and
(bad)
mov
imul
sub
rcr
fucom
add
adc
sub
add
fadd
ds
retf
mov
cmp
sbb
mov
add
sar
out
mov
sbb
inc
or
enter
xchg
add
sub
sub
enter
mov
pop
xor
jo
or
inc
add
add
push
loopne
and
pop
adc
push
push
lock
test
lock
lock
(bad)
std
dec
add
mov
(bad)
cwde
xor
add
inc
adc
add
stc
add
or
inc
sub
add
add
or
add
or
iret
lahf
inc
jg
adc
pop
enter
xchg
pop
and
shl
outs
leave
xor
in
add
les
pop
in
mov
call
add
mov
int
adc
sahf
push
add
push
push
loopne
xor
add
inc
add
lds
out
std
stos
icebp
outs
pop
lods
add
nop
mov
sbb
je
inc
add
add
mov
mov
or
fwait
mov
or
bound
stos
sbb
lds
ss
add
sbb
das
push
stos
jg
add
pop
cmp
lahf
add
dec
sub
xlat
mov
xchg
and
aas
add
pop
and
aas
je
add
push
aam
mov
or
shl
and
in
dec
fnstsw
or
fwait
inc
dec
adc
and
fild
cmp
popf
jbe
sbb
ret
stc
pop
imul
aaa
add
push
pop
and
jp
or
bound
add
xchg
dec
inc
mov
sbb
aam
inc
sub
sbb
adc
or
adc
loope
adc
ins
jo
aas
loopne
test
adc
shl
or
into
push
jmp
mov
inc
push
pop
adc
inc
or
dec
mov
inc
sub
lock
bndstx
movs
mov
add
and
out
je
inc
cmp
nop
inc
push
jno
inc
rol
cld
adc
into
adc
or
xchg
sbb
nop/reserved
fs
cwde
test
or
cmp
sbb
sub
std
xor
inc
lock
cmps
adc
dec
rol
movs
xor
add
test
adc
xor
lods
push
add
add
leave
test
mov
ror
sbb
adc
mov
cld
ret
test
dec
sub
push
gs
mov
rol
and
sub
sti
dec
mov
xchg
mov
inc
jae
loopne
fldcw
and
into
adc
cmp
jno
iret
add
(bad)
loope
fs
adc
retf
test
inc
xchg
add
pop
ror
inc
cmps
stc
push
mov
mov
int3
sar
in
xchg
add
lock
jle
fcom
add
xchg
and
sub
dec
xor
push
dec
fmul
ror
add
cwde
xchg
dec
sbb
jle
sbb
ror
rol
xchg
xchg
mov
or
pop
pop
push
imul
xchg
add
or
pusha
test
inc
sbb
pusha
or
pusha
fadd
inc
leave
mov
scas
or
xchg
cmp
jle
jmp
sub
xor
inc
in
imul
stc
add
or
inc
sub
add
add
or
add
or
jo
mov
cmp
lahf
inc
add
icebp
out
pop
ret
mov
(bad)
cmp
xchg
dec
aad
or
xchg
mov
inc
xchg
call
or
pusha
inc
mov
add
popa
adc
mov
xchg
shr
inc
add
div
mov
das
dec
push
add
mov
sbb
mov
lahf
add
call
test
mov
mov
repnz
pop
stos
shl
popf
inc
and
mov
add
stc
mov
inc
ror
dec
gs
add
push
mov
test
aas
inc
dec
push
fwait
js
loop
call
mov
das
repz
add
add
add
lea
adc
test
rol
xor
and
pop
lea
mov
retf
add
or
inc
jmp
arpl
pop
add
dec
pusha
xor
push
sub
mov
adc
add
inc
add
adc
and
shr
sar
pusha
sub
adc
and
inc
mov
jo
add
pop
cmc
std
ret
mov
imul
shl
adc
mov
dec
add
adc
xchg
inc
push
loop
push
add
mov
add
push
cmp
sar
or
dec
inc
mov
shl
retf
xor
rol
sub
lea
cmp
mov
data16
sub
test
cvtpi2ps
mov
mov
je
xor
add
cwde
shl
xchg
retf
mov
(bad)
adc
int3
xor
adc
pop
add
fdiv
xchg
les
mov
mov
mov
adc
sub
test
sub
iret
adc
int
call
jmp
outs
jmp
je
aas
enter
nop
xor
inc
fidivr
out
and
adc
sub
les
jns
les
sub
or
cmp
(bad)
aad
cmp
jae
mov
sub
and
dec
rol
or
int
enter
xor
mov
sbb
pushf
lock
adc
mov
adc
(bad)
pusha
fnstsw
xchg
or
nop
and
or
push
push
xchg
inc
or
out
jae
stos
adc
les
xor
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
shr
sub
mov
xor
dec
push
popa
mov
and
pusha
add
inc
push
and
int3
or
mov
add
test
push
and
dec
outs
add
rcl
(bad)
push
xor
add
test
push
cdq
xchg
shl
gs
sahf
jmp
adc
call
sub
outs
mov
retf
dec
fcomp
shr
sub
fnstenv
xchg
add
mov
sub
adc
xchg
pop
int3
sbb
daa
inc
adc
jl
add
mov
add
shl
shl
add
mov
in
(bad)
out
(bad)
jno
into
mov
adc
shr
nop
std
mov
fidivr
and
loope
add
adc
(bad)
cmp
dec
add
dec
cld
and
(bad)
xchg
imul
push
pop
adc
xchg
mov
sub
add
test
inc
outs
jo
xchg
pop
push
or
cmp
mov
adc
repnz
add
xchg
or
fs
inc
push
dec
test
leave
aas
call
and
lock
(bad)
adc
sbb
popa
test
or
in
je
pop
sub
and
imul
cmp
push
adc
mov
ficom
pop
loopne
inc
outs
and
lea
and
xor
sbb
pop
add
repz
add
inc
dec
xchg
dec
cs
ret
dec
inc
shl
mov
add
xor
lock
or
xchg
call
sbb
inc
inc
bound
test
inc
fwait
xchg
push
nop
dec
adc
int3
stc
dec
xor
mov
or
data16
mov
or
jge
dec
adc
in
or
in
mov
xor
or
xor
rcr
pop
sbb
hlt
rol
adc
cmp
sbb
xor
mov
adc
add
or
sub
pop
mov
or
push
fs
and
add
xchg
nop
dec
adc
mov
pop
dec
lods
xchg
test
sbb
jmp
je
inc
pop
es
push
or
rol
dec
in
ror
daa
sbb
ret
shl
inc
jbe
movs
adc
mov
push
jmp
or
and
fwait
add
dec
or
jmp
mov
aas
pop
add
adc
push
xchg
lea
adc
jb
and
sub
pusha
rol
cwde
push
das
inc
pop
xchg
or
sbb
nop
dec
stos
ins
jl
inc
cmp
in
xchg
xor
sbb
push
xor
add
loope
mov
imul
jo
sbb
xor
adc
mov
sti
mov
mov
add
js
ficom
repnz
or
add
xor
lds
dec
int3
mov
pop
loopne
sbb
xchg
pop
ror
sbb
rcl
inc
(bad)
(bad)
add
cmc
cmps
sub
xchg
cs
and
sbb
inc
xor
add
(bad)
loopne
sub
sub
or
push
test
cwde
pusha
add
inc
add
mov
adc
pusha
inc
sbb
inc
add
pop
dec
pusha
ret
in
add
or
push
xchg
or
add
xor
mov
push
pop
mov
sub
cmp
clc
add
push
or
add
inc
sub
jg
popa
or
jo
aas
ins
call
sbb
cdq
inc
or
add
inc
or
adc
or
dec
cmp
pusha
jecxz
jg
dec
adc
lods
add
cmp
dec
push
test
xchg
xchg
xor
and
and
push
and
(bad)
adc
call
add
xor
push
and
sar
mov
(bad)
cs
dec
xchg
test
add
rol
xor
and
or
add
mov
push
add
push
inc
add
and
sbb
push
push
and
xor
mov
sahf
nop
or
add
ret
lock
dec
cmp
or
nop
lea
add
sbb
and
add
lea
in
and
and
jns
cmp
adc
scas
mov
add
pusha
inc
or
or
and
lock
pop
jo
dec
ss
test
cli
xchg
sub
and
and
add
or
pop
div
pop
mov
rol
mov
or
pop
xchg
and
sbb
xor
cmp
jmp
push
in
add
push
les
in
add
push
imul
mov
in
outs
inc
test
js
add
lock
call
inc
push
dec
mov
push
jl
sbb
push
js
pop
mov
push
jg
push
and
stos
and
xchg
stos
add
jmp
scas
push
stos
cwde
cdq
js
inc
(bad)
test
and
mov
pusha
leave
rol
lds
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
jmp
and
mov
push
add
or
add
xor
rol
add
xor
jns
dec
repz
add
jb
push
xor
sbb
loope
sbb
daa
cmps
mov
bound
leave
cmps
xor
xor
xor
dec
popf
add
add
push
into
jg
add
cmp
and
xor
xchg
sbb
pop
mov
arpl
or
les
jmp
jbe
cmp
stc
out
test
and
push
mov
fnstcw
movs
or
ss
mov
add
and
dec
sahf
add
inc
mov
push
mov
sbb
movs
adc
(bad)
push
ins
mov
sub
(bad)
pop
jecxz
ror
mov
xor
cmp
into
ins
test
cmp
rcl
or
dec
mov
and
xchg
(bad)
sbb
push
imul
imul
inc
paddb
mov
and
mov
sbb
or
or
and
aad
je
jo
pop
pop
pusha
rol
div
(bad)
dec
ja
movs
cdq
push
or
and
pop
push
xchg
test
test
push
call
jl
(bad)
jecxz
add
inc
push
jo
adc
pop
sbb
pop
daa
mov
add
xor
aas
cmps
adc
add
jecxz
pop
into
adc
ins
or
add
mov
ret
or
cdq
and
cmp
clc
wbinvd
jmp
pusha
xchg
(bad)
repz
push
push
sbb
ret
sub
ins
repnz
pushf
cld
jns
cdq
add
mov
cmp
pop
and
add
sbb
rol
adc
mov
or
fnsave
mov
rol
and
js
add
scas
or
xor
adc
inc
jbe
cli
inc
fisubr
cli
sbb
dec
adc
pop
add
mov
test
and
push
or
loope
bound
xchg
bound
(bad)
pop
mov
or
xchg
mov
jmp
call
sub
fnstcw
daa
rcl
in
mov
pusha
xchg
sub
push
pop
pop
lea
mov
iret
mov
pop
mov
inc
sbb
mov
push
test
(bad)
and
lea
fcomp
repnz
lods
push
int3
and
mov
aad
in
pop
cwde
jl
sbb
arpl
(bad)
xchg
retf
idiv
adc
stos
dec
and
sub
cmc
jo
mov
out
cmp
lods
pop
add
pop
mov
and
push
(bad)
cmps
mov
ds
add
loopne
push
sbb
sub
adc
call
or
sub
test
in
pop
icebp
dec
cmp
adc
jno
push
movs
pop
push
scas
mov
inc
push
daa
mov
push
mov
cmp
and
(bad)
aaa
and
adc
mov
cmp
gs
nop
add
cwde
and
mov
add
les
push
in
mov
and
inc
xchg
mov
jno
inc
movs
rol
repz
test
lea
rol
lock
sar
mov
add
pop
or
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
and
adc
ret
inc
adc
jb
dec
fmul
push
test
and
enter
mov
outs
mov
add
add
out
fist
xor
(bad)
mov
mov
stos
and
ret
or
dec
xchg
stos
into
dec
or
out
test
add
loopne
or
inc
and
or
inc
add
xchg
inc
ror
repnz
ret
mov
jnp
dec
fist
mov
mov
add
aam
add
mov
sbb
add
pop
dec
dec
sbb
ret
cmp
jb
mov
push
sub
stos
adc
sub
sbb
adc
push
nop
and
pusha
and
pop
(bad)
cmc
loopne
mov
icebp
outs
push
xchg
rcl
nop
pushf
inc
ret
or
cld
call
das
sbb
data16
std
mov
jns
cmp
and
stos
push
das
call
test
add
dec
cld
ret
retf
pop
test
rol
mov
adc
sahf
push
xchg
lods
xor
sar
rdpmc
call
dec
sbb
out
pop
popa
or
or
lock
enterw
jp
xor
and
xor
pop
(bad)
ror
inc
add
and
in
mov
add
add
sbb
and
es
std
mov
and
or
dec
sub
pop
and
ins
lock
das
pop
cmp
push
sub
xchg
mov
data16
cmps
cmp
jmp
add
adc
and
inc
mov
jg
add
pop
mov
(bad)
or
out
pop
out
sub
lock
mov
xchg
sub
jb
inc
data16
or
add
mov
mov
mov
adc
inc
jno
repz
add
jecxz
push
inc
or
fild
mov
pop
jno
mov
sub
sub
mov
inc
rol
push
hlt
or
loope
xor
or
add
bound
sub
jo
inc
sbb
sbb
mov
push
pop
add
pop
clc
adc
or
test
cvtpi2ps
dec
(bad)
lock
dec
dec
sbb
das
pushf
mov
or
jecxz
pop
loopne
dec
adc
mov
add
xor
shr
or
xor
rcl
inc
sbb
xchg
cmp
movs
ret
mov
xor
cmp
sbb
and
pop
les
inc
inc
(bad)
pop
popa
jecxz
add
popf
retf
pop
ror
or
mov
inc
sbb
cmp
test
dec
sbb
rcr
(bad)
cmps
jnp
pop
ins
in
sub
leave
push
mov
xor
cwde
pop
and
out
cmps
mov
jb
adc
or
cmp
inc
adc
dec
jb
inc
sub
mov
sub
adc
js
(bad)
rol
adc
add
cmps
stc
out
or
sub
nop
cmp
mov
sete
inc
mov
inc
or
mov
les
xchg
pusha
test
xor
add
push
pop
jns
jnp
mov
add
mov
dec
inc
or
and
push
pop
imul
add
call
add
add
pop
xor
(bad)
xor
push
mov
mov
add
sbb
inc
sub
xchg
xchg
mov
pusha
pusha
push
int
sbb
pop
enter
mov
add
add
psubsw
nop
xchg
xor
adc
bound
scas
imul
rcl
push
xchg
nop
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
jns
jp
dec
into
and
loope
add
sbb
test
cli
or
adc
and
mov
inc
add
test
in
dec
cmp
cld
popf
xor
int3
or
or
inc
adc
and
inc
mov
or
add
add
add
inc
pop
(bad)
imul
xor
std
pop
mov
sub
xor
push
inc
fiadd
sub
dec
xadd
stos
and
or
and
sub
shl
mov
xchg
jg
add
loope
sub
pushf
inc
xor
push
shl
mov
arpl
aas
sbb
call
int3
test
lahf
mov
or
jp
call
jg
fdivr
jmp
push
out
enter
stos
clc
mul
mov
dec
add
add
test
dec
xor
outs
mov
dec
jae
sbb
add
inc
sub
rol
pusha
xor
aas
adc
and
or
jmp
dec
movs
test
lods
mov
push
ins
push
adc
jno
push
mov
jo
mov
daa
nop
cmp
mov
mov
or
pusha
mov
in
rol
dec
and
outs
add
push
std
and
lds
in
dec
adc
and
int
push
ret
stc
adc
cmp
popa
and
adc
xchg
fsub
or
movs
dec
nop
mov
pop
rol
rol
and
adc
mov
int3
xchg
inc
sbb
add
mov
dec
pop
push
call
and
and
inc
(bad)
cwde
push
pop
push
in
inc
sub
lock
pushf
es
add
pop
rcr
sbb
ds
add
pop
fcomp
or
aam
or
outs
fnsave
rol
adc
sub
adc
stos
add
jns
mov
jmp
add
sbb
sub
and
sub
adc
or
aam
sub
retf
cmp
fld
add
out
shl
inc
xchg
ins
or
retf
xor
nop
add
push
repz
test
(bad)
sub
adc
dec
lock
cmps
jmp
xor
xchg
je
in
leave
or
sub
and
in
into
inc
push
mov
sbb
or
leave
fdiv
dec
sete
icebp
inc
add
mov
rcl
and
inc
dec
adc
hlt
into
aas
out
jl
sar
mov
add
sub
xchg
cli
(bad)
mov
inc
or
loopne
inc
pop
clc
aaa
lods
mov
and
sbb
adc
xor
mov
lahf
mov
add
mov
adc
jnp
hlt
add
sub
inc
shl
test
ror
nop
cmp
sbb
iret
xor
test
test
adc
out
sti
inc
(bad)
sbb
inc
push
sub
ror
into
(bad)
addr16
icebp
sub
mov
cmps
mov
aad
push
pop
cli
(bad)
sbb
nop
(bad)
cs
add
repz
mov
push
and
sbb
add
sub
es
inc
add
xchg
or
cmp
or
inc
sbb
ins
loopne
pop
adc
or
or
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
push
adc
pushf
dec
jno
sub
arpl
sub
fist
jae
jo
lahf
xchg
or
fs
adc
add
test
inc
xchg
xor
xchg
sbb
mov
mov
aam
xor
cld
add
mov
imul
xchg
xor
xchg
test
and
or
add
int
cmp
inc
ins
lea
stc
xchg
push
add
clc
xlat
imul
add
adc
mov
jae
push
(bad)
jno
push
inc
xor
dec
sub
jmp
mov
cli
out
in
push
xor
cmp
out
scas
inc
or
vmulss
dec
or
imul
enter
and
add
mov
bound
or
inc
icebp
inc
jne
pop
ror
mov
sar
arpl
pop
pusha
sub
add
cld
jae
pop
pop
cmp
sub
dec
adc
adc
cdq
dec
add
je
fldenv
aas
cmps
dec
inc
lea
cmc
push
popa
adc
adc
and
inc
ja
xor
push
sub
add
repnz
sub
sbb
inc
rol
aaa
push
sub
mov
push
or
out
dec
and
mov
xor
and
adc
lods
and
inc
mov
iret
aas
jg
or
ret
aas
mov
push
and
adc
sub
push
lds
mov
or
loop
add
push
or
adc
push
and
xor
and
call
cld
mov
inc
imul
add
push
or
cmp
rol
xor
adc
pop
sbb
sub
or
enter
xor
add
mov
mov
push
hlt
into
cmp
mov
ins
xor
pop
adc
adc
inc
jne
jp
mov
push
sbb
push
cmp
shr
mov
sbb
dec
aas
add
popa
lods
inc
dec
and
call
adc
or
into
aas
push
ins
jo
xor
or
add
xchg
popa
push
ret
fwait
dec
and
pop
cmp
icebp
fwait
rcl
aaa
retf
push
add
sub
test
iret
les
loope
ror
lods
mov
(bad)
iret
add
int3
aam
aas
inc
jle
adc
push
xor
nop
sbb
pop
adc
and
dec
push
aam
xor
cmp
push
out
sub
adc
xlat
push
adc
rcl
test
in
add
pop
xor
inc
and
lea
mov
cmc
xchg
inc
outs
mov
or
mov
dec
add
ds
xchg
jl
iret
nop
add
and
push
loopne
push
xchg
add
inc
fidivr
sub
out
cli
jmp
or
inc
(bad)
cmp
xchg
enter
jl
fs
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
sbb
inc
mov
push
mov
iret
mov
adc
iret
ror
out
adc
loopne
movs
jg
add
je
(bad)
mov
xor
ss
mov
inc
jo
push
test
push
lock
aas
xor
add
(bad)
mov
adc
stc
push
inc
push
rcl
and
jnp
add
xchg
sub
(bad)
std
mov
push
sub
sar
es
push
cmp
repnz
pop
dec
mov
clc
dec
add
jg
push
sub
dec
mov
jns
popf
imul
daa
inc
(bad)
dec
sbb
cmp
ins
push
xor
push
enter
xchg
add
mov
mov
push
std
shl
movs
pmullw
(bad)
adc
xchg
sbb
cmp
sub
cs
mov
call
mov
inc
mov
cld
fwait
dec
xor
sbb
sbb
pusha
push
nop
addr16
and
cmps
shr
pop
or
or
xor
add
adc
adc
inc
in
or
popa
adc
inc
push
call
nop
add
mov
in
bound
sbb
dec
sub
ins
dec
jecxz
ins
and
retf
cdq
adc
(bad)
pop
jecxz
repnz
(bad)
fdivr
mov
or
add
lods
sbb
mov
add
jno
sbb
pusha
and
xor
dec
ss
adc
jnp
sbb
pop
or
loopne
push
mov
rol
mov
xchg
add
pop
sbb
xlat
loope
test
and
inc
mov
mov
lds
or
dec
xchg
mov
and
sub
xchg
mov
xchg
bound
(bad)
mov
cmp
push
sbb
ret
sar
cld
repz
xor
cmp
shr
add
data16
aaa
or
stos
xchg
adc
sub
cmp
jo
add
push
mov
inc
and
xor
test
fs
xor
adc
mov
xor
call
add
pusha
xchg
inc
mov
add
shl
ins
lock
inc
popa
pop
inc
push
xchg
jmp
xchg
in
aas
cld
(bad)
arpl
inc
lock
jae
xor
ds
ret
adc
popf
add
rcr
nop
xor
add
and
stc
call
inc
cmp
and
add
add
popf
adc
adc
push
and
inc
or
and
(bad)
mov
inc
pusha
mov
sbb
and
inc
div
sub
fadd
icebp
jp
adc
cmp
jno
xor
inc
jmp
jge
xor
shl
aam
mov
ja
cmp
or
ror
cmp
(bad)
inc
(bad)
mov
jmp
xor
nop
lds
jo
mov
inc
xor
retf
inc
inc
rol
int3
add
fild
add
test
rol
mov
mov
jge
fisubr
adc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
and
adc
ret
inc
adc
jb
dec
fcomp
int3
inc
dec
ins
add
or
ret
enter
(bad)
fadd
jmp
repz
dec
daa
cmp
int3
cld
xchg
jecxz
sbb
adc
in
add
jb
jno
repz
(bad)
es
adc
add
jnp
out
pop
add
fs
add
or
ja
sbb
es
outs
ins
enter
or
add
pop
cmp
je
stc
xchg
add
push
retf
adc
mov
add
bound
adc
dec
mov
xor
(bad)
xchg
push
pop
pop
mov
mov
xchg
add
pop
(bad)
sbb
aas
aam
scas
enter
lahf
test
call
or
pop
jl
mov
cwde
adc
pop
dec
(bad)
jmp
shl
xchg
xor
push
and
test
inc
xchg
push
jecxz
std
stos
popa
xor
sub
std
arpl
(bad)
call
inc
jg
add
sub
hlt
dec
add
adc
add
jmp
push
jp
je
rcl
push
in
jne
adc
sbb
and
push
mov
lods
push
nop
sbb
push
les
add
pop
mov
add
mov
test
jno
sub
dec
shr
mov
sub
or
inc
cmp
mov
push
push
in
dec
(bad)
hlt
inc
int
imul
and
push
or
and
pop
push
add
loope
aaa
push
in
test
add
push
or
imul
les
pushf
add
mov
and
adc
jmp
mov
aas
call
push
arpl
and
add
pavgw
push
dec
xor
jb
loope
xchg
(bad)
xor
push
mov
dec
sbb
add
les
jmp
shl
dec
mov
pop
add
cmps
push
push
rol
cld
jae
pop
jecxz
push
push
adc
push
in
aas
or
cli
iret
add
or
into
adc
rcr
nop
and
ror
push
jg
push
repz
xchg
or
sub
or
inc
sbb
sub
(bad)
pop
mov
inc
xor
sbb
mov
cld
jae
pop
mov
mov
jb
ins
test
sub
mov
mov
add
stc
or
sbb
nop
mov
add
cmp
aam
aam
rcl
pop
mov
movs
ins
sub
xor
adc
push
or
add
js
mov
mov
sbb
hlt
mov
pop
ins
sub
inc
adc
mov
out
push
push
add
hlt
and
jg
nop
add
movs
add
out
cld
adc
inc
loope
push
mov
or
(bad)
jo
in
push
inc
push
lods
cmc
aas
cmp
iret
jnp
gs
xor
xchg
push
aam
mov
dec
cmc
aas
cmp
je
sub
mov
adc
mov
inc
xor
mov
mov
add
ret
push
daa
dec
adc
mov
(bad)
iret
xlat
cmc
cld
hlt
or
push
scas
jge
push
fisub
adc
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
mov
ret
xchg
mov
cmp
jmp
fwait
sub
int3
dec
rcl
cld
mov
sub
inc
repnz
test
mov
ret
pusha
add
add
add
(bad)
cmp
ss
xchg
les
or
out
popa
add
xchg
shr
cmp
clc
mov
sgdtd
jmp
push
mov
ins
push
and
std
jecxz
ror
int3
test
lahf
add
cdq
es
xor
je
sbb
sahf
ror
popf
adc
push
dec
retf
inc
inc
popa
xlat
sbb
mov
add
push
sbb
aad
fmul
inc
or
icebp
inc
gs
or
(bad)
xor
push
enter
bound
stos
xor
mov
dec
sbb
inc
les
mov
das
and
or
popf
fnstcw
fsubr
sbb
push
sub
iret
or
jo
or
xor
jae
and
mov
mov
aas
test
lock
or
mov
retf
adc
inc
cs
inc
xor
test
aaa
dec
int3
pusha
iret
aas
cmp
sbb
sbb
dec
mov
or
mov
std
inc
mov
inc
inc
(bad)
loopne
xchg
and
xchg
mov
mov
push
repnz
adc
dec
movs
inc
ins
dec
mov
xor
inc
or
ret
xor
or
push
dec
mov
or
and
jns
or
and
inc
and
retf
inc
nop
and
mov
jno
inc
jg
repz
mov
imul
mov
test
inc
xor
adc
jg
xchg
(bad)
outs
jecxz
adc
inc
(bad)
ror
cmps
test
test
add
sub
stos
xchg
jl
lea
sbb
or
mov
shl
inc
mov
push
je
or
push
mov
stos
push
jl
iret
stos
imul
dec
or
sub
mov
cld
pop
adc
jp
imul
mov
sub
rcl
mov
xor
dec
mov
imul
xor
pop
(bad)
cmp
push
cmp
mov
test
sbb
push
test
sbb
dec
test
hlt
jb
add
xor
in
shl
pop
push
adc
arpl
rol
(bad)
push
sub
test
retf
mov
nop
pop
nop
cmp
mov
xchg
sbb
push
aas
sub
inc
add
adc
movs
sbb
adc
xor
push
push
add
nop
rol
sbb
sbb
inc
sbb
adc
pop
mov
rol
or
mov
rol
and
adc
jns
loope
daa
inc
enter
sahf
inc
rol
mov
jae
mov
inc
scas
add
jmp
lahf
ror
jmp
das
out
(bad)
sub
sub
adc
sub
inc
pop
dec
pop
mov
xchg
aas
cld
or
mov
adc
xchg
pop
jnp
mov
shr
adc
ds
fcom
adc
loope
ja
add
jnp
mov
or
cmp
sbb
and
pusha
lea
and
add
rcl
xchg
adc
jmp
mov
inc
push
rol
or
inc
jmp
adc
std
arpl
es
add
inc
xchg
mov
adc
loopne
mov
and
nop
ret
loopne
clc
push
mov
or
pushf
fdivr
ds
(bad)
lods
dec
adc
sub
ret
and
inc
xchg
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ret
cmp
out
lea
mov
push
data16
push
leave
inc
jl
rcl
dec
or
mov
stos
and
in
add
add
mov
mov
and
cdq
dec
ins
bound
sar
inc
imul
and
add
jge
rcl
add
sti
ja
add
xchg
fs
xchg
jp
arpl
cmp
sub
and
inc
adc
fisubr
data16
(bad)
in
fiadd
sub
pop
inc
cmp
add
sbb
mov
cwde
ror
dec
lock
or
cmp
(bad)
cmc
loopne
add
xchg
jg
inc
call
pusha
add
xchg
or
or
popf
adc
call
fstp
lock
push
arpl
mov
cmp
ror
push
in
std
jecxz
ins
(bad)
cmp
jge
cdq
fsubrp
popf
sub
jbe
add
test
int
push
or
stc
mov
rol
adc
xchg
inc
sbb
dec
and
xor
xor
or
call
les
or
test
add
test
js
ret
sar
mov
xchg
push
push
adc
bound
retf
mov
and
mov
bound
dec
sub
or
sbb
sub
push
aam
mov
dec
mov
sbb
jmp
ror
or
add
jmp
pop
xor
sub
stos
and
inc
mov
sub
aas
add
jl
iret
and
adc
add
les
iret
adc
xor
add
mov
or
push
and
jo
pavgw
adc
jo
dec
sub
xchg
rcl
in
sbb
add
inc
xchg
ret
and
call
cld
repz
or
int
add
lock
fs
pushf
mov
mov
mov
inc
or
ror
cld
mov
sbb
fcom
inc
xchg
ins
sub
push
icebp
push
xor
cmp
dec
or
inc
ins
call
rcl
(bad)
out
rcl
adc
inc
cmc
mov
and
shl
test
or
or
push
jo
das
(bad)
xor
sub
xchg
cmp
or
jae
fistp
inc
inc
mov
mov
dec
call
push
sbb
cmps
inc
mov
mov
or
sbb
cmps
push
and
adc
jmp
push
and
cmp
nop
add
sub
pushf
push
add
add
ins
mov
dec
adc
cmps
xor
aam
stc
jae
sbb
js
dec
adc
aas
ins
xor
inc
add
adc
or
inc
sub
add
cld
mov
adc
cli
fcomp
adc
and
or
inc
or
(bad)
and
inc
xchg
add
idiv
pop
std
std
iret
in
sbb
stc
(bad)
daa
jmp
xchg
xlat
stc
sub
or
sbb
jne
aas
inc
adc
aad
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
shr
sub
mov
ss
popa
loopne
or
das
mov
or
mov
or
nop
inc
dec
sbb
cmp
add
add
add
add
sti
pop
sub
pop
and
and
add
mov
dec
xor
lea
adc
xchg
or
(bad)
push
mov
mov
jmp
in
aas
jne
adc
cmc
push
loop
jg
sar
into
sbb
mov
mov
jno
ins
jp
iret
mov
lods
inc
int3
js
inc
mov
sbb
add
scas
fistp
mov
push
je
sub
lods
sahf
or
mov
repz
int
mov
scas
fucomp
add
dec
sbb
mov
inc
mov
cmp
aam
mov
loope
push
fdiv
rol
sub
jno
and
mov
mov
pushf
jmp
xor
and
nop
jns
mov
adc
(bad)
repz
adc
push
adc
or
les
xchg
mov
ins
adc
xchg
pushf
inc
sahf
aas
ret
enter
add
jb
xor
int3
adc
(bad)
xlat
mov
aas
test
xor
aas
and
call
mov
ret
dec
xor
xchg
in
adc
or
mov
movs
inc
sahf
test
inc
xor
inc
and
add
clc
cld
add
xor
mov
push
(bad)
in
mov
sub
arpl
push
sar
inc
(bad)
mov
inc
sbb
adc
dec
cmp
cwde
xchg
mov
icebp
shl
push
dec
or
std
and
add
jecxz
inc
mov
in
or
(bad)
fiadd
int3
movs
popf
adc
pop
cmp
in
xor
xchg
inc
test
(bad)
mov
rcl
outs
lds
xor
mov
test
in
cmp
mov
rol
shl
pop
test
nop
les
cmc
daa
add
and
jmp
xchg
scas
aas
(bad)
ins
xchg
repz
fnstcw
mov
add
jo
push
sar
call
lods
pop
retf
add
add
in
nop
(bad)
ins
retf
rol
add
cdq
inc
mov
and
es
mov
mov
(bad)
(bad)
fiadd
add
mov
add
adc
sbb
das
movs
add
jae
or
ins
sbb
inc
lea
or
dec
push
out
nop
inc
mov
ins
cld
adc
cmp
outs
push
aam
adc
jp
les
inc
or
adc
jo
out
push
or
xchg
xchg
jno
mov
add
in
in
loope
out
stc
jno
call
and
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
sub
adc
inc
loope
add
adc
or
mov
push
pusha
lock
push
adc
test
adc
mov
pop
or
inc
mov
xor
dec
movs
dec
push
mov
pop
and
push
mov
pop
adc
imul
cvttps2pi
mov
add
xchg
inc
dec
pushf
push
sub
add
push
sbb
mov
mov
sti
fs
(bad)
jno
into
mov
xchg
jg
sub
add
fdivr
sar
sbb
xor
mov
cmp
dec
in
(bad)
das
rol
ins
jbe
dec
pusha
out
stos
cmps
mov
mov
jmp
cmp
mov
inc
lea
push
aam
imul
in
add
and
adc
sub
leave
adc
xchg
cld
outs
les
dec
add
nop
loope
and
push
xchg
test
push
pop
dec
and
out
or
ja
rcl
push
mov
loope
add
or
ja
rol
add
enter
stos
or
add
jecxz
ja
dec
xchg
pusha
sub
add
aas
xchg
adc
push
adc
fdiv
enter
xchg
inc
sbb
jl
rcl
xor
or
jae
sub
xor
cmp
add
cli
test
inc
adc
or
push
jmp
inc
xor
mov
adc
sub
cld
ret
bound
dec
repnz
add
mov
ror
wrmsr
aam
fidivr
(bad)
cld
sbb
pop
jo
daa
inc
out
or
xchg
dec
add
inc
add
je
nop
aas
or
int
test
add
mov
pop
mov
mov
stc
mov
pop
dec
lods
bound
mov
sbb
mov
mov
mov
push
movs
add
retf
and
inc
push
mov
or
retf
call
sbb
pop
inc
mov
push
fs
add
test
mov
jo
push
lods
sub
xchg
or
sbb
nop
dec
cdq
ins
jl
outs
outs
sub
nop
out
fdiv
mov
adc
jo
sbb
inc
push
add
lock
lds
pop
std
and
cld
ror
push
mov
cdq
and
les
lods
inc
addr16
pushf
adc
add
add
jo
rol
rol
rol
or
lgdtd
xor
add
add
popa
xor
sbb
or
add
ins
je
add
dec
inc
cmp
popa
xor
xor
idiv
add
jmp
mov
or
fs
add
cmc
dec
retf
add
aad
cli
xor
int3
add
xchg
add
leave
cmp
push
outs
std
aad
sti
(bad)
(bad)
(bad)
fild
std
mov
movs
push
push
xlat
cmps
push
lods
pop
pop
cdq
bound
int
nop
test
das
mov
or
cmc
out
push
add
jp
mov
dec
xlat
leave
scas
(bad)
jmp
inc
add
add
cmps
bound
in
fcmovnb
mov
or
je
ja
add
mov
cld
push
xor
div
xchg
(bad)
jmp
in
and
inc
(bad)
clc
xchg
push
xchg
dec
(bad)
cmp
in
out
repz
push
push
add
xchg
sub
(bad)
sti
lds
or
xor
add
add
mov
cli
mov
test
mov
(bad)
xchg
mov
add
add
aad
(bad)
mov
std
jecxz
sti
(bad)
movs
in
cld
cli
cli
add
std
inc
dec
cli
scas
add
sbb
aam
(bad)
mov
aad
sub
mov
je
push
test
bound
mov
das
das
mov
mov
call
push
xchg
dec
add
mov
jmp
aad
mov
int3
xchg
add
repz
(bad)
stos
add
add
push
push
fldcw
dec
mov
or
in
cmps
(bad)
push
add
(bad)
fdiv
(bad)
in
div
cmc
in
stos
add
fild
mov
xchg
das
das
cwde
lea
in
or
(bad)
jle
and
retf
or
dec
(bad)
mov
(bad)
cld
in
mov
push
in
ret
mov
dec
or
mov
repnz
add
xchg
jmp
xlat
lahf
sbb
inc
push
imul
jmp
mov
jmp
or
fimul
mov
arpl
repz
jmp
cs
out
test
mov
lods
and
in
or
icebp
push
cmps
jg
int
call
(bad)
stos
add
and
sti
out
fnsave
adc
or
shl
push
pop
xchg
pop
or
ret
add
in
stc
mov
icebp
stos
pop
hlt
mov
mov
or
add
adc
ja
ss
xchg
inc
inc
fwait
jl
hlt
fild
push
or
icebp
int
loop
pop
adc
inc
aaa
push
bnd
or
mov
cmps
inc
psubw
repnz
mov
push
nop
add
adc
std
in
jmp
(bad)
aad
mov
in
jmp
shl
or
sbb
lds
rep
paddw
and
test
pop
pop
fcomp
xlat
loop
cmp
add
jmp
(bad)
or
loop
clc
in
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
inc
std
or
mov
rol
mov
ret
xchg
and
dec
push
and
inc
mov
push
inc
xchg
push
mov
icebp
imul
add
mov
fwait
movd
dec
nop
add
sub
jmp
sbb
rol
(bad)
int3
xchg
inc
sub
mov
xchg
xor
fist
aam
cmovp
inc
bndstx
xchg
(bad)
or
xor
sub
stos
mov
add
sbb
cmp
pop
movs
mov
(bad)
add
int3
pop
and
xchg
add
add
add
int3
jmp
fs
jno
les
sub
sub
push
lock
movs
mov
mov
cmp
pop
mov
push
and
adc
pop
adc
call
and
inc
pop
lods
pop
ret
ss
xchg
out
pop
cli
in
fdiv
rol
adc
xor
jne
aaa
or
cli
and
push
cwde
sahf
jp
dec
lds
or
and
ror
clc
adc
dec
daa
std
xchg
pop
mov
and
pop
or
pop
push
xchg
test
and
lds
stos
push
(bad)
dec
in
add
jno
inc
and
xor
add
push
inc
sub
dec
xchg
loope
sbb
cwde
fisubr
or
call
je
adc
sbb
xchg
sti
rol
pshufw
xor
fwait
push
outs
mov
sbb
les
test
iret
sbb
cwde
xor
add
movs
mov
xor
aaa
fdiv
add
pop
mov
bound
outs
adc
fwait
dec
xchg
add
shl
repnz
add
sbb
fsub
rcl
popa
scas
push
mov
adc
pop
icebp
cmp
movs
push
les
cmp
cmp
and
cmp
icebp
mov
je
sub
cmp
pop
push
pop
cmp
sbb
xchg
jno
sbb
xchg
and
pop
jecxz
add
movs
mov
and
sbb
or
pop
push
push
cmp
rcl
mov
xor
inc
leave
inc
adc
xor
push
jle
and
adc
sbb
loop
inc
add
and
ja
sar
push
adc
loopne
mov
lds
pop
adc
xor
cmp
outs
cmp
dec
cmp
adc
add
mov
daa
inc
les
add
lock
adc
nop
shl
cmps
imul
mov
inc
sbb
or
(bad)
adc
mov
cmps
xor
mov
add
jb
jge
adc
or
xor
pushf
xchg
outs
ret
xchg
xchg
test
mov
push
lea
shl
movs
mov
aas
std
ss
and
inc
punpcklwd
and
fs
push
xlat
stc
or
fnsave
hlt
rol
mov
sbb
cwde
std
adc
mov
jl
pop
jae
xchg
aad
sbb
mov
mov
std
in
mov
cs
pop
xor
add
(bad)
les
dec
test
or
push
cmps
add
sbb
cmp
add
sbb
add
xchg
add
xchg
sub
mov
(bad)
ror
jbe
adc
rol
test
or
aas
jmp
push
push
lock
add
jecxz
dec
push
cmp
sub
test
jmp
aas
xor
xchg
add
sahf
ror
cld
ror
or
xor
or
add
add
add
clc
add
aas
inc
icebp
xor
inc
or
and
or
test
adc
mov
mov
sbb
and
push
pop
push
mov
lea
ret
or
or
push
add
add
xor
loope
or
call
mov
adc
or
mov
inc
sub
add
and
mov
and
add
xor
out
loopne
sub
sbb
sar
jo
dec
int3
rol
mov
outs
mov
xchg
jo
add
add
dec
add
rol
imul
jno
add
rcr
js
inc
sbb
or
cld
xor
daa
test
add
pop
dec
inc
and
sub
push
and
pop
aam
movs
push
or
adc
add
jb
retf
add
sbb
jns
mov
or
add
dec
sbb
or
inc
add
dec
pop
les
cmps
adc
mov
mov
xor
rol
xchg
mov
dec
nop
ret
pop
dec
mov
sub
and
inc
inc
test
adc
sbb
fadd
or
add
xor
sbb
inc
inc
add
add
dec
in
xor
loopne
xor
xchg
ret
and
pop
fadd
inc
cmp
add
nop
test
add
adc
push
in
and
inc
fadd
rol
sbb
or
int3
inc
mov
push
xchg
clc
mov
shl
add
sub
addr16
cmp
sbb
or
fidivr
mov
xor
mov
cmp
loope
and
ror
or
dec
inc
add
fist
mov
mov
retf
adc
lds
dec
rol
add
and
loopne
add
ret
xor
jge
rol
mov
or
mov
das
jbe
and
dec
inc
add
and
add
or
inc
sub
add
add
or
add
or
nop
and
pop
dec
rol
xor
daa
xchg
mov
es
(bad)
ficom
and
add
imul
rol
es
cdq
fwait
aaa
cmp
imul
ds
movs
lock
adc
add
or
and
mov
sar
add
sub
rol
stos
or
loopne
ror
test
push
add
sub
jo
cdq
test
rcl
and
vpsrlw
xor
mov
add
jl
test
jno
inc
popa
test
fdiv
in
mov
in
test
fs
mov
pop
test
ja
pop
ins
ficomp
inc
adc
nop
inc
adc
(bad)
adc
leave
add
out
push
movs
ins
and
sub
or
pop
mov
cmp
push
cmp
pop
jecxz
mov
push
fs
pusha
or
cmp
jae
outs
call
adc
xchg
js
in
and
inc
cmp
dec
pop
rol
add
push
outs
or
add
in
push
adc
sbb
aam
sti
and
pop
fiadd
add
loope
or
jmp
loopne
es
jl
lds
in
(bad)
cs
js
adc
mov
pushf
loopne
(bad)
xchg
jae
lock
inc
sub
fs
inc
in
push
iret
xor
xor
pop
sub
inc
adc
shl
adc
daa
push
inc
inc
adc
sbb
xor
xchg
xor
dec
add
adc
sbb
cmp
lock
and
in
dec
call
retf
add
and
xchg
adc
pop
cli
iret
push
add
(bad)
test
lea
or
mov
rcr
or
stos
cdq
imul
ror
aas
jne
push
imul
aaa
adc
mov
int3
add
mov
mov
sub
sahf
popf
jmp
dec
xchg
inc
inc
sub
xor
dec
xchg
ror
loopne
mov
aad
dec
ss
mov
inc
arpl
imul
sub
xchg
sbb
cwde
ror
and
xor
shl
int3
and
pop
cwde
rol
or
mov
add
arpl
adc
in
mov
add
and
sub
sbb
adc
push
std
inc
push
sbb
push
fs
inc
or
mov
and
sbb
in
or
adc
lock
lea
test
loop
add
or
inc
hlt
cmp
int3
aaa
fistp
xchg
inc
xor
cmp
aas
jne
jb
mov
div
adc
popa
mov
dec
xor
ucomiss
in
add
lock
add
inc
adc
sub
shl
xchg
xor
mov
push
add
(bad)
or
lods
jns
mov
push
xor
sbb
cli
mov
mov
enter
les
jl
pop
mov
xor
sub
out
cld
add
shr
sbb
add
or
add
xlat
adc
add
test
je
das
fsubr
xor
in
dec
lods
and
je
inc
add
add
(bad)
int3
call
sti
(bad)
cli
inc
push
mov
adc
pop
rol
mov
add
add
fdivr
adc
fild
nop
xor
and
sbb
adc
test
adc
and
inc
and
xor
pop
hlt
and
and
add
or
inc
sub
add
sub
sub
add
inc
dec
sbb
iret
or
ret
xchg
or
mov
mov
inc
add
adc
ins
dec
les
push
adc
and
sbb
in
sub
leave
pusha
add
out
inc
adc
and
sar
pop
dec
int3
xor
sbb
mov
repnz
jge
xor
xchg
add
push
pushf
cmp
mov
retf
imul
enter
scas
enter
rcr
pop
ds
shl
rol
mov
add
shl
(bad)
jb
mov
or
add
scas
sbb
or
and
xor
les
pop
sbb
mov
add
mov
add
cld
and
jo
fnstenv
addr16
and
xor
sub
push
fs
inc
sub
sbb
lods
sar
push
ret
fidivr
pop
dec
or
popa
xor
inc
cmp
pushf
lods
add
ret
xor
and
xor
sub
and
xchg
inc
ds
push
adc
add
pop
pop
add
push
call
adc
adc
repz
fdivp
(bad)
mov
add
es
daa
push
adc
adc
daa
loop
inc
dec
cmp
sbb
xor
ror
mov
push
aam
movs
xchg
push
aam
mov
push
rol
dec
loopne
push
adc
cmp
inc
nop
cmp
pop
test
xor
es
fs
xor
sbb
aad
inc
push
cmp
cmp
mov
shl
mov
inc
inc
imul
mov
outs
pop
mov
inc
and
cmp
add
or
ret
or
jmp
or
fwait
add
push
popa
and
or
fwait
jge
rcl
daa
push
inc
add
ficomp
add
add
nop
mov
inc
and
popf
pushf
add
mov
cmps
test
push
sar
shl
lods
inc
xor
xor
nop
inc
aam
daa
mov
and
fs
adc
ds
jl
int
and
(bad)
cld
retf
les
cmp
inc
and
fwait
ins
push
test
es
rol
inc
pop
or
jb
daa
push
add
pushf
ror
or
mov
int3
and
inc
inc
push
add
fwait
lock
cdq
dec
or
xor
into
rcl
add
add
xor
xchg
mov
mov
cwde
xchg
xor
dec
out
enter
jecxz
cvtps2pi
mov
mov
adc
js
push
leave
xor
adc
or
jl
push
add
test
dec
sub
dec
mov
popf
sbb
inc
pop
or
add
ret
imul
mov
ror
dec
push
add
dec
inc
push
mov
lods
nop
cld
pop
ss
hlt
pop
int
dec
pushf
mov
push
dec
and
inc
mov
xchg
xchg
das
add
fs
adc
lahf
inc
xor
xor
mov
jl
daa
xor
test
aad
inc
(bad)
sbb
sbb
add
adc
or
test
push
inc
clc
(bad)
and
sub
inc
xchg
scas
inc
or
test
fild
and
mov
or
pop
adc
loop
adc
add
and
mov
fbstp
adc
or
or
or
add
icebp
packsswb
ret
inc
inc
push
sub
inc
mov
mov
(bad)
fmul
xor
in
xor
pop
pushf
pusha
sub
add
cmp
or
push
imul
adc
lock
adc
ror
and
xor
mov
jmp
xor
daa
mov
stc
jb
inc
adc
fwait
xor
add
dec
ins
es
inc
push
stos
add
retf
add
mov
das
add
pop
fdivr
ins
movs
mov
loopne
nop
add
jo
cmp
mov
cwde
add
aam
jecxz
scas
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
mov
inc
add
or
ja
mov
xor
add
cmp
sub
sub
fucomi
inc
fidiv
sub
(bad)
push
nop
das
add
in
jns
xchg
fst
out
dec
add
jnp
clc
adc
repnz
cli
rcl
int
push
jg
push
mov
mov
dec
popf
(bad)
shl
(bad)
cld
fsqrt
addr16
enter
and
ret
inc
sbb
mov
pop
mov
add
dec
sbb
inc
bound
sub
cmp
loopne
push
dec
int
jg
pop
cmp
inc
xor
rol
lds
dec
sbb
mov
or
xchg
loopne
and
sub
add
add
loope
sbb
inc
std
add
dec
rol
pop
mov
pushf
mov
inc
adc
mov
ret
xchg
and
dec
call
cmp
fld
xor
loop
inc
jle
or
mov
not
or
adc
fcomp
xchg
and
or
mov
sbb
rol
adc
pop
test
jl
mov
sub
adc
inc
adc
sbb
inc
adc
sbb
xor
inc
xor
sub
or
xor
push
iret
or
sub
movs
inc
mov
xchg
inc
push
mov
ins
call
jge
xchg
sub
add
ds
rcl
jno
or
in
cmp
add
add
cmp
rol
xchg
add
adc
mov
and
ds
add
mov
fwait
outs
or
loope
and
push
pop
add
add
lock
cmps
add
xchg
out
jnp
nop
shr
add
fimul
mov
inc
(bad)
and
and
out
sbb
fxsave
int
adc
adc
pusha
add
add
push
or
ret
aas
pop
ins
inc
shl
dec
loopne
add
sbb
dec
and
mov
mov
push
ret
and
jl
int
js
xor
xor
jl
les
push
add
pop
add
dec
dec
add
xchg
mov
jg
and
aaa
and
mov
arpl
or
jae
pop
rcr
push
and
call
jo
xor
in
test
sbb
inc
pop
stos
lods
rol
dec
xchg
(bad)
jo
xor
inc
pop
mov
call
or
rol
mov
and
bound
pop
or
mov
(bad)
sbb
add
pusha
(bad)
ror
je
inc
or
mov
add
pop
sub
dec
push
add
adc
es
pop
jnp
rol
jns
and
and
and
out
fisttp
sub
sub
dec
adc
and
lods
add
adc
inc
push
das
add
ror
test
inc
retf
ret
xor
mov
or
and
loop
xor
push
or
enter
ror
add
ret
push
or
sbb
int
sbb
dec
lahf
dec
xor
xlat
jnp
xor
fidivr
loop
dec
and
and
dec
jb
cli
dec
mov
scas
add
sbb
inc
repz
adc
js
inc
xor
ins
mov
and
cs
dec
ret
inc
adc
pusha
ret
aas
cli
push
or
push
or
or
add
add
mov
mov
outs
daa
adc
adc
out
jo
pop
mov
add
xor
push
xchg
jecxz
pusha
adc
pusha
xchg
leave
push
icebp
ret
in
outs
jno
popa
sub
pop
add
and
movs
sbb
or
icebp
pop
push
shr
rol
or
ss
sbb
dec
arpl
add
push
(bad)
les
mov
add
dec
movs
fdiv
sbb
pop
adc
add
jno
(bad)
mov
loopne
xchg
adc
js
enter
mov
mov
rol
call
lods
ins
jo
or
and
mov
add
faddp
sqrtps
sbb
movs
or
mov
mov
clc
rcl
sbb
jae
adc
and
or
mov
sbb
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
jo
or
push
or
sub
lock
xchg
or
mov
xor
test
icebp
loope
jg
or
inc
daa
jno
mov
inc
aad
add
(bad)
xchg
inc
jbe
sbb
inc
(bad)
arpl
mov
mov
mov
(bad)
adc
outs
and
jbe
out
mov
out
test
inc
mov
mov
sbb
rol
inc
leave
rcl
sub
mov
adc
xor
loop
mov
dec
inc
add
mov
mov
ja
add
out
push
lods
inc
add
(bad)
xor
test
inc
(bad)
and
adc
mov
stos
add
inc
and
in
inc
ficomp
stc
cmps
loop
cmps
pop
dec
inc
rcr
retf
adc
test
dec
test
mov
repz
lds
push
clc
inc
add
pop
sbb
inc
mov
outs
das
inc
movs
sbb
mul
inc
adc
cmp
cmps
clc
repnz
adc
cmp
ror
aaa
add
test
ror
int3
aaa
sbb
push
add
adc
adc
add
inc
pop
xor
cld
repz
mov
adc
repz
and
mov
enter
(bad)
or
adc
mov
sub
add
repnz
jmp
loope
adc
inc
loopne
inc
(bad)
cmp
xor
xchg
daa
xor
push
cmovs
(bad)
cdq
cmp
cmovne
(bad)
xor
cwde
cdq
inc
adc
xchg
add
xor
and
xchg
stc
dec
add
sbb
enter
icebp
les
jnp
add
pop
cwde
add
cmp
add
arpl
add
pushf
nop
les
inc
adc
ret
adc
cmp
mov
std
fiadd
test
in
pop
inc
jl
adc
add
outs
or
add
into
push
call
pusha
int3
and
and
xchg
push
add
xor
push
and
pop
push
pop
sbb
and
bound
jp
pop
(bad)
push
adc
adc
hlt
xchg
dec
jl
lock
xor
in
sub
call
jae
add
lock
mov
dec
clc
dec
mov
cmp
add
lock
loope
pop
push
and
add
sub
add
rol
sub
ror
sub
sub
cmp
add
in
jl
mov
cmps
mov
add
or
sub
inc
xchg
cld
arpl
fisttp
pop
pop
xchg
lds
popa
sub
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
mov
mov
cs
dec
sub
jecxz
call
mov
and
and
adc
sbb
xor
test
adc
adc
xchg
adc
inc
stc
sbb
push
xor
sti
cmps
imul
into
lods
add
dec
fcomp
xor
ins
mov
in
adc
es
lds
nop
mov
push
dec
push
je
mov
mov
out
push
adc
xchg
xor
mov
cdq
es
nop
ds
cmove
test
arpl
sub
add
ret
pop
mov
stos
cmp
pop
mov
or
sub
std
jecxz
inc
adc
jno
adc
add
rol
add
adc
sahf
dec
test
add
(bad)
repz
mov
iret
aas
adc
(bad)
dec
aam
add
cmp
jmp
cmp
daa
sbb
or
cmp
pop
mov
pop
(bad)
cli
rcl
xchg
int3
shl
add
aaa
or
(bad)
sbb
mov
clc
test
push
ror
in
inc
or
cs
push
or
pushf
and
inc
cdq
pushf
and
aas
dec
and
pusha
mov
adc
or
sub
adc
aaa
jmp
popa
cdq
xor
(bad)
inc
inc
les
mov
popa
int3
mov
sbb
loope
aas
test
enter
inc
ror
or
int3
aaa
(bad)
mov
lods
jo
sbb
jecxz
ss
and
or
clc
and
(bad)
aas
test
or
iret
pop
jmp
and
inc
xchg
add
inc
add
and
dec
xor
cld
xchg
movs
sahf
aaa
push
adc
inc
adc
mov
push
and
(bad)
fsub
or
or
xor
jg
jge
dec
adc
das
adc
push
xor
xchg
push
clc
jmp
cmc
cwde
add
cmc
inc
sub
call
xor
mov
adc
inc
push
add
cmc
fst
loopne
or
movs
push
adc
sub
cwde
fwait
inc
push
icebp
push
aaa
shl
push
js
nop
sub
add
into
push
jg
rol
mov
sbb
push
mov
enter
ins
jo
pop
add
sub
xchg
push
es
mov
cmp
or
xor
inc
psubb
adc
cdq
pop
xchg
inc
jno
or
sbb
ss
in
xor
sub
push
outs
rcr
fistp
jae
xor
add
mov
push
or
retf
dec
and
fs
sbb
mov
and
xchg
sub
and
mov
jle
lock
add
push
inc
adc
mov
mov
add
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
jo
mov
sub
add
push
add
push
sub
xor
cwde
inc
mov
inc
sbb
jno
or
rol
sbb
xchg
dec
xchg
mov
push
mov
cdq
xchg
das
imul
or
call
or
mov
xchg
inc
lea
nop
jl
inc
push
xchg
dec
rol
push
rol
or
inc
lea
mov
les
mov
xor
sub
cdq
xor
sub
jg
test
or
jmp
or
dec
mov
xchg
jp
or
inc
ret
mov
sbb
(bad)
rol
mov
retf
push
add
adc
int3
shl
outs
mov
lods
inc
mov
pop
xchg
ja
mov
inc
sub
mov
adc
rol
xchg
mov
outs
lock
sbb
add
inc
repnz
rol
pusha
sbb
push
jge
in
mov
ret
or
inc
dec
or
rcr
imul
cmp
push
shl
cld
xor
push
adc
xor
test
dec
adc
xchg
or
add
or
sub
rol
and
and
and
or
and
or
add
jno
or
lock
jg
mov
inc
(bad)
les
rol
add
dec
sar
or
add
aam
dec
xor
stc
iret
or
cmp
add
add
mov
xchg
and
inc
mov
adc
inc
seto
mov
add
jmp
adc
or
inc
and
or
ret
ss
sbb
nop
bound
xor
sbb
push
cwde
sub
xchg
cwde
jno
cwde
cmp
inc
and
rol
ret
pusha
sbb
or
and
loope
inc
add
sub
inc
adc
inc
jp
push
pop
pusha
add
sbb
push
pop
or
lock
lds
mov
xor
aas
cld
nop
inc
push
(bad)
mov
cmp
add
push
adc
(bad)
add
sub
test
imul
pop
mov
xlat
sub
mov
sub
inc
lahf
cmp
nop
(bad)
or
into
clc
add
sahf
push
leave
add
pop
cmp
enter
xchg
inc
add
test
fistp
adc
mov
xor
push
mov
xchg
inc
sbb
xchg
sbb
add
sub
pop
push
ror
gs
cmc
add
call
mov
outs
mov
int
inc
mov
(bad)
and
call
add
test
add
push
pushf
test
push
and
aas
adc
cmp
imul
add
stc
add
or
inc
sub
add
add
sub
add
or
mov
inc
cmp
cli
cmp
mov
ret
adc
loope
test
xor
ret
jnp
ins
adc
mov
add
aam
add
nop
das
add
cwde
xchg
loop
or
call
fbld
inc
inc
sbb
jae
loopne
retf
ins
fdiv
adc
popf
add
adc
cmp
shr
cmp
rcr
push
jmp
sbb
add
jmp
lock
out
inc
adc
enter
or
push
sbb
add
mov
pop
fadd
ret
out
push
cmp
nop
loopne
mov
mov
sub
jae
data16
loopne
add
add
pop
or
out
leave
xchg
jb
pop
scas
pop
hlt
mov
es
adc
ret
fnstsw
dec
xor
push
or
ja
and
adc
xchg
rcr
adc
push
addr16
pop
ret
inc
sub
add
adc
or
(bad)
sbb
add
inc
out
push
add
fcomp
and
push
xchg
inc
add
gs
push
ret
or
cmp
ret
or
cs
mov
or
adc
mov
or
sbb
xor
add
push
dec
mov
loopne
movs
dec
mov
loope
mov
adc
cmp
push
cmp
(bad)
les
je
mov
inc
test
test
dec
mov
ds
add
lods
les
mov
daa
and
cs
aam
setle
sbb
iret
pop
add
push
mov
jb
push
pushf
mov
dec
inc
sub
dec
cmp
mov
sar
pusha
test
fsub
cmp
loopne
mov
call
add
add
cmps
lods
add
push
jmp
add
push
mov
push
(bad)
dec
cld
shr
pop
or
lods
mov
test
movs
in
in
adc
add
(bad)
inc
scas
mov
je
xchg
inc
nop
ss
inc
jmp
hlt
mov
or
push
(bad)
in
fnsave
and
ror
and
jg
mov
lock
push
lock
adc
sub
mov
aas
adc
and
mov
fadd
and
cwde
pusha
inc
xor
add
cdq
nop
mov
pushf
mov
and
aas
and
ins
nop
int3
pop
push
cld
loope
cmp
mov
(bad)
add
add
cmp
ss
add
add
mov
add
or
add
and
add
add
or
dec
or
leave
cmp
add
or
and
add
adc
inc
cmp
mov
or
popf
xchg
xor
adc
aam
inc
and
jns
rol
ret
movs
or
call
inc
mov
inc
nop
add
pop
sahf
rol
mov
test
add
add
add
test
jns
xor
or
adc
cmp
xor
or
sub
int
repnz
or
lahf
add
aas
shl
sub
adc
daa
cld
add
daa
cmp
test
add
nop
xor
xor
lea
mov
add
sbb
sbb
sub
inc
bnd
or
or
and
arpl
inc
adc
sar
pop
pop
sub
pusha
mov
xor
add
inc
sub
lock
leave
or
pop
movs
dec
add
mov
mov
test
sar
imul
mov
add
add
push
sahf
jmp
add
add
aas
sub
adc
or
lock
sub
sub
ror
adc
ror
xor
fisub
adc
(bad)
retf
nop
sets
or
or
or
adc
or
push
cwde
and
sub
das
push
adc
fsub
inc
push
call
ret
xor
lock
data16
and
ss
imul
xchg
cwde
add
add
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
cmp
push
pop
enter
pop
or
cli
jae
rcr
ds
jbe
lods
mov
add
sbb
sub
mov
dec
sbb
cmps
sbb
inc
adc
cmp
and
enter
in
fsub
add
shl
xor
outs
int3
mov
fiadd
inc
cmp
sbb
sbb
add
cmps
dec
pop
inc
adc
dec
sub
add
add
or
retf
cmp
pop
fdivr
adc
movs
cli
and
jo
xchg
jecxz
pop
add
cwde
sti
pop
gs
jo
hlt
mov
push
fsubr
cdq
xor
cmp
loopne
gs
imul
mov
inc
adc
sub
cmc
das
inc
jecxz
inc
nop
ret
push
xor
mov
fsubr
ss
popa
fnsave
cmp
sub
and
add
inc
xchg
and
cmp
adc
cmp
sub
jecxz
inc
pop
dec
mov
fld
pop
jl
sub
inc
repz
fiadd
loop
pop
leave
jle
adc
inc
daa
mov
inc
and
mov
sbb
es
push
loop
add
add
movs
inc
ror
sbb
sbb
add
mov
call
mov
mov
cli
sbb
add
adc
mov
xchg
cmp
lock
sbb
fsubr
xor
ds
mov
clc
loopne
xor
mov
aam
add
sbb
mov
inc
lock
inc
pop
loopne
and
mov
xchg
add
xor
push
rcr
clc
xor
cs
(bad)
xchg
inc
clc
push
inc
inc
fs
into
xchg
dec
cmp
push
sub
clc
nop
sbb
inc
jb
inc
sub
add
ret
xchg
pop
add
mov
pop
pop
out
xor
push
jmp
add
loopne
jecxz
push
xor
push
mov
fwait
jno
rol
and
cmp
dec
adc
adc
in
inc
(bad)
push
xor
mov
fs
aas
mov
je
add
imul
inc
inc
sub
(bad)
out
fisttp
inc
inc
std
jae
or
jne
ret
push
or
or
leave
cmp
mov
inc
and
lds
aaa
test
nop
push
add
mov
adc
add
cmp
jge
clc
retf
adc
mov
and
mov
add
cmp
(bad)
shl
pop
mov
dec
ret
lods
ror
fld
adc
pusha
sub
mov
xor
push
dec
xor
shl
into
aaa
fistp
les
inc
sub
fs
xor
rol
xor
and
xor
inc
ja
in
add
pop
leave
add
jnp
int
sub
add
and
push
inc
and
js
mov
es
add
pmaxub
inc
sbb
test
dec
sub
mov
rol
mov
adc
cmp
test
enter
icebp
test
xor
enter
jno
xor
and
add
in
mov
pop
or
ins
dec
add
inc
add
dec
and
nop
std
or
adc
sar
adc
and
aas
mov
xor
(bad)
dec
add
jl
add
inc
ret
add
or
or
add
ror
test
mov
adc
add
inc
mov
cld
xchg
mov
les
pop
adc
inc
and
int3
jo
add
mov
jbe
or
jle
ret
test
add
mov
add
adc
pop
adc
push
add
add
adc
or
hlt
push
mov
call
pushf
ror
pop
add
mov
push
or
lock
or
clc
push
mov
lods
in
(bad)
or
push
repz
add
jle
movs
dec
sub
add
and
add
or
inc
sub
add
add
or
add
or
mov
inc
sbb
mov
lea
jmp
pop
jl
ret
cmp
mov
cmp
or
sbb
loop
add
push
movs
js
and
pop
and
pop
stos
loopne
and
jo
aaa
mov
js
movs
sahf
inc
jp
inc
sbb
in
into
and
scas
push
xchg
stos
ins
add
test
mov
sub
sub
mov
xchg
mov
loop
in
shr
push
adc
and
cli
xchg
jae
sub
push
fdivr
pop
inc
push
mov
adc
out
fdivr
je
xchg
xor
push
(bad)
mov
adc
pop
inc
adc
adc
add
inc
js
jmp
pusha
or
add
mov
dec
lock
fist
call
pusha
cld
sar
jbe
sbb
xor
adc
dec
or
jo
jge
mov
xor
pushf
lds
dec
imul
dec
jp
adc
add
les
mov
mov
inc
cmp
arpl
sbb
or
dec
dec
pop
jo
test
ins
mov
adc
add
cmp
dec
inc
or
cmp
sbb
jbe
into
jle
lods
and
add
iret
or
cmp
pop
scas
pop
inc
add
inc
lock
icebp
mov
cwde
jecxz
cmp
mov
sub
or
push
popf
add
push
ret
xchg
add
outs
sbb
loopne
xchg
xchg
add
fs
and
shr
lds
push
add
leave
adc
push
dec
int3
add
xor
lock
xchg
cmps
adc
push
shl
call
xchg
or
add
add
inc
fmul
fld
ss
sbb
and
sbb
push
stos
add
lock
xchg
call
add
sub
push
or
call
push
sub
bound
push
or
shl
popa
test
imul
addr16
lock
int
mov
inc
mov
test
gs
mov
mov
ret
inc
pop
fwait
not
sbb
pop
fs
add
or
pop
push
dec
int3
mov
add
xchg
mov
adc
xchg
leave
and
push
add
jl
lea
js
pop
push
inc
cmp
xlat
or
mov
add
cmp
pop
jae
sbb
and
loopne
sub
std
xor
test
ja
fnstenv
pop
jo
mov
mov
add
dec
sub
mov
xor
dec
or
add
jae
ins
dec
je
mov
or
add
int3
push
adc
adc
jmp
xor
xor
outs
(bad)
aas
mov
dec
and
loopne
aas
jmp
sahf
les
fnstenv
daa
jnp
add
and
call
repz
push
inc
add
push
retf
sysenter
rol
test
mov
nop
aas
push
(bad)
adc
add
xor
push
fcomp
add
out
out
(bad)
push
or
pop
mov
mov
add
add
xchg
inc
nop
add
(bad)
js
es
mov
xor
jbe
xor
cdq
ret
mov
aam
add
cmp
sbb
inc
xchg
and
add
xlat
ret
jo
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
add
or
ja
mov
xor
add
cmp
sub
sub
fucomi
inc
fidiv
sub
(bad)
push
nop
das
add
in
jns
xchg
fst
out
dec
test
sbb
aam
jae
aaa
jns
jne
cmp
mov
ins
mov
mov
fmul
mov
fmul
xor
ret
add
aam
sub
mov
fdiv
jp
sbb
js
out
adc
xchg
les
add
mov
cld
and
pop
dec
int
push
adc
add
add
(bad)
cmp
test
push
ret
ss
push
ror
and
jae
cld
push
les
jp
loopne
int3
pop
mov
pusha
in
cmp
pop
sub
inc
test
or
or
xchg
js
push
movs
lock
mov
call
cs
sbb
mov
lock
add
sbb
lods
push
inc
das
cmp
test
shl
mov
push
nop
das
ds
xchg
popf
and
cmp
and
add
and
and
outs
les
(bad)
das
dec
adc
icebp
mov
ins
ret
outs
mov
xchg
cmp
mov
int3
push
dec
cmp
mov
shl
push
mov
ins
call
jge
xchg
sub
add
ds
rcl
xor
sbb
cmp
sbb
add
xor
and
clc
mov
mov
sbb
fs
xchg
out
dec
fcomp
pop
push
add
mov
adc
aaa
fcom
or
adc
mov
cmp
inc
es
sbb
add
sbb
sbb
adc
inc
inc
lea
inc
adc
add
daa
xor
rcr
mov
add
retf
add
(bad)
data16
iret
push
jmp
fisub
lea
mov
push
ror
sbb
sub
adc
dec
xor
sbb
(bad)
lds
loop
(bad)
or
popa
test
adc
pop
add
inc
add
or
(bad)
scas
fucomi
inc
xor
add
mov
pop
cmp
adc
int3
je
or
call
nop
xor
xor
xor
mov
sub
add
jo
or
mov
sub
add
lock
jb
adc
out
add
mov
adc
mov
jo
push
pusha
add
daa
cwde
rcr
push
loopne
adc
js
inc
or
pop
jmp
int
fidiv
call
ret
mov
cmps
dec
loopne
rol
fs
inc
(bad)
mov
jns
ffree
in
repz
jne
and
sub
cld
xchg
mov
aaa
test
nop
sbb
mov
popf
xchg
stc
xlat
push
adc
inc
push
jns
adc
mov
mov
es
dec
rol
mov
sar
add
adc
adc
repz
repnz
lods
pop
or
cmps
mov
add
adc
push
or
and
xchg
jl
(bad)
and
xor
jecxz
and
and
not
cmp
jg
jmp
(bad)
mov
xchg
sub
adc
inc
lahf
scas
push
clc
sub
ret
add
nop
lahf
cld
and
xchg
inc
mov
test
sub
pop
loop
mov
cmp
mov
and
test
inc
add
jo
or
test
ins
(bad)
dec
adc
xor
dec
cmp
or
add
push
scas
arpl
xor
xchg
scas
nop
xchg
sbb
and
adc
sub
add
push
adc
mov
and
loope
pop
in
add
lea
inc
bound
add
or
clc
loop
mov
jbe
in
xor
test
xor
mov
add
cmp
jb
mov
aas
rol
and
inc
mov
leave
pop
or
xchg
je
bound
cmp
sti
inc
sub
push
enter
and
loopne
xor
std
rol
xchg
mov
adc
(bad)
sbb
loopne
pop
pop
les
scas
mov
or
jecxz
jle
inc
adc
mov
repz
add
pop
rol
xlat
xor
push
mov
inc
fldenv
pop
pop
jns
mov
adc
nop
lock
add
or
or
lock
mov
xor
lea
inc
and
loop
adc
cmp
je
mov
ds
dec
pop
adc
inc
lods
aam
xor
xchg
in
cmps
push
sbb
add
add
add
add
dec
add
add
add
popa
xor
sbb
or
add
je
add
dec
inc
cmp
popa
cmp
xor
idiv
add
push
xlat
lds
mov
movs
pop
add
mov
sar
std
out
mov
sti
hlt
loop
add
add
repnz
add
mov
in
add
xchg
add
(bad)
cmp
(bad)
adc
rol
(bad)
cmc
add
pop
sti
(bad)
sti
les
(bad)
out
cdq
ins
sub
fld
(bad)
aad
(bad)
loop
mov
sub
ret
add
jmp
push
out
fsubr
mov
(bad)
rol
dec
es
add
stc
add
add
lds
or
xlat
mov
clc
in
fsin
rcr
mov
(bad)
call
(bad)
fld
stc
cmps
add
(bad)
and
jecxz
(bad)
stc
(bad)
enter
(bad)
sub
test
(bad)
inc
jmp
or
call
std
mov
cld
fldenv
fwait
addr16
mov
mov
add
add
or
fdivr
push
or
mov
std
int
push
stc
stos
add
jmp
(bad)
jmp
out
or
clc
jae
push
repnz
add
fist
add
paddq
(bad)
(bad)
hlt
rcl
mov
push
popf
jp
cli
lods
add
retf
adc
lds
mov
out
in
(bad)
mov
(bad)
call
xchg
jl
sub
sub
sbb
repz
out
jmp
adc
pop
stos
xchg
pop
xchg
lock
in
lock
xlat
mov
mov
dec
add
lea
(bad)
fild
rol
into
add
call
mov
mov
push
add
fisttp
mov
jmp
cmc
adc
repnz
movs
sbb
mov
mov
call
add
repz
jmp
or
mov
(bad)
in
or
sti
ret
(bad)
adc
xlat
add
mov
movs
cwde
sub
mov
movs
push
push
jecxz
or
daa
(bad)
mov
cmc
cli
cld
rcl
out
es
lods
adc
lods
pop
stc
leave
add
test
cld
les
(bad)
clc
push
hlt
jecxz
mov
or
pop
adc
test
out
idiv
repz
lock
mov
or
je
cli
icebp
add
cmc
psllq
or
int
jb
xor
mov
imul
rcl
fsub
repz
retf
add
mov
test
cli
fiadd
xor
cmp
add
retf
or
mov
icebp
sar
lock
clc
repnz
jecxz
clc
out
std
iret
add
rol
out
mov
push
stc
mov
mov
sbb
jmp
clc
stos
push
push
adc
lock
sbb
dec
jle
jp
movs
or
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
nop
popa
test
or
dec
pushf
mov
xor
movs
cmp
mov
pop
or
inc
mov
dec
jg
movs
xor
and
pop
aam
popa
leave
add
fcomp
sbb
adc
(bad)
call
popa
xchg
enter
add
push
lock
movs
adc
add
les
scas
aas
jle
retf
xchg
int3
sbb
ja
jo
sub
and
sub
jb
iret
push
adc
jb
aam
ins
adc
mov
and
movs
dec
pop
(bad)
adc
mov
and
ja
push
sbb
push
and
cmc
mov
cmp
pop
add
adc
enter
xor
mov
xchg
dec
mov
sar
or
dec
xchg
mov
fnstenv
add
xor
std
or
call
sub
and
push
jle
mov
push
out
and
and
(bad)
fs
ror
pop
pop
jno
fmul
nop
add
xchg
sbb
sub
pop
pusha
jp
or
not
ror
test
xchg
add
ja
lock
or
sub
xchg
sbb
jo
pop
aam
mov
or
nop
inc
sbb
push
xor
sbb
adc
add
inc
shl
add
push
rol
xor
fidiv
mov
dec
jl
add
aaa
mov
inc
add
and
and
iret
dec
adc
or
fsub
or
and
ror
jo
xchg
or
cmp
xchg
adc
add
call
dec
inc
enter
ror
and
test
xor
mov
pusha
in
ds
test
stc
addr16
mov
(bad)
aad
pop
hlt
arpl
aaa
adc
loope
dec
and
call
sub
pop
repnz
scas
inc
clc
shl
fwait
je
adc
sub
pop
inc
add
in
add
mov
push
inc
shrd
cdq
outs
sbb
imul
sub
push
pop
fadd
or
cmp
mov
popf
and
retf
push
adc
jno
add
jle
inc
push
loopne
cli
sub
and
cld
ror
(bad)
cmp
push
nop
sbb
loope
pop
cmp
add
sub
(bad)
repz
mov
add
(bad)
mov
and
sbb
xor
jl
push
inc
mov
or
push
inc
leave
bound
lds
fild
out
xor
inc
xor
dec
push
and
inc
xor
das
pop
mov
repnz
dec
push
jmp
outs
retf
add
add
fidivr
add
cs
in
mov
add
icebp
inc
movs
in
loop
sub
mov
jge
cmp
adc
and
std
fadd
iret
pop
or
scas
inc
jns
icebp
dec
add
ins
add
add
jns
xor
scas
rol
into
jnp
(bad)
sar
inc
adc
ins
or
inc
push
fs
icebp
cmc
xor
push
rcr
cmp
xchg
add
lods
inc
sar
dec
jb
add
pop
add
retf
call
lea
adc
sub
xchg
mov
xor
add
xor
add
or
ror
jo
push
jb
or
mov
xor
jecxz
mov
rol
add
push
push
nop
add
mov
add
push
cwde
and
sbb
add
(bad)
cwde
test
adc
and
das
jno
call
(bad)
aas
je
or
shl
and
inc
add
sar
adc
jo
add
rol
mov
jle
add
mov
rol
rcl
xor
cmp
push
sbb
pop
mov
sub
or
or
call
lea
ret
adc
inc
xor
inc
xchg
test
bound
(bad)
sbb
xor
mov
(bad)
pop
sbb
inc
and
and
lock
mov
add
ror
fsub
mov
pop
addr16
cmp
jge
pusha
adc
cwde
les
inc
cvtps2pd
sbb
pop
cmp
add
add
sbb
add
xor
call
add
inc
mov
ins
pushf
rol
xor
sbb
jno
add
or
mov
or
rol
test
mov
sbb
add
aam
and
dec
xor
ret
add
add
dec
jo
adc
sbb
or
rol
sbb
push
lock
ror
or
adc
mov
jmp
bnd
add
and
test
and
jo
ds
or
adc
add
add
xchg
add
js
cmps
mov
and
pusha
loopne
ins
dec
rol
pop
cmp
sbb
loopne
xchg
test
rol
ins
push
add
fs
push
inc
je
lods
bound
or
and
or
pusha
mov
adc
lea
push
popa
sub
enter
add
jno
push
shr
call
bound
push
fimul
xchg
retf
fadd
or
push
lods
ins
lods
push
fdivp
push
fcom
adc
inc
adc
inc
adc
xchg
xor
or
jl
xor
sbb
add
adc
xor
lods
js
or
imul
inc
jne
retf
fsubr
sbb
ins
adc
sub
inc
dec
or
mov
push
jbe
rcl
push
popa
sbb
xlat
sbb
nop
ror
ret
popf
or
inc
and
enter
push
adc
pusha
adc
mov
add
xchg
loopne
push
sti
mov
add
loopne
mov
lock
dec
inc
and
rcl
add
inc
add
add
sbb
fcomp
jmp
vmread
sbb
add
cmp
xor
and
sub
xor
fwait
xchg
mov
das
jbe
data16
mov
mov
shl
ror
mov
xchg
xchg
xor
sbb
push
push
mov
pusha
add
push
inc
fst
sbb
lock
retf
inc
mov
or
mov
xor
loopne
sub
imul
test
add
ret
pop
cmps
shr
push
inc
ins
ja
push
xor
rol
adc
ja
movs
adc
(bad)
push
jbe
xchg
nop
ror
mov
xor
loop
add
add
and
jbe
sbb
push
inc
sub
add
popf
add
inc
add
adc
in
push
popa
mov
add
or
and
mov
and
mov
pop
xchg
cmp
and
dec
inc
adc
cmp
enter
adc
add
cmp
jo
mov
add
out
pop
rol
loopne
sub
or
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
sub
rol
mov
stos
xchg
sbb
lock
mov
adc
push
test
push
add
add
mov
inc
cld
xor
mov
imul
add
xchg
sar
add
(bad)
mov
mov
xchg
aaa
add
nop
inc
repz
mov
addr16
xor
add
mov
js
or
inc
dec
inc
mov
or
xchg
and
cmovb
mov
sub
test
push
sahf
xor
mov
ror
mov
(bad)
fadd
add
mov
inc
mov
and
dec
dec
xor
sbb
test
mov
add
cli
inc
cmp
or
dec
sbb
dec
test
and
loope
mov
aad
fcom
xor
test
lods
jmp
es
or
and
mov
mov
pushw
call
out
xchg
gs
bound
shr
addr16
xchg
aaa
sub
aas
iret
add
fwait
and
mov
add
cmp
test
xor
sub
mov
fs
jo
lods
loopne
pop
push
aas
xor
loope
ror
mul
or
mov
jle
test
or
(bad)
(bad)
std
push
fcom
shr
lock
dec
inc
inc
xor
and
push
or
daa
or
or
test
call
sahf
dec
dec
pushf
je
pop
sub
add
and
add
or
inc
sub
add
add
add
add
std
sti
xchg
add
pushf
and
add
pop
enter
xchg
sbb
add
je
fmul
mov
ret
ins
jns
push
inc
iret
pop
sub
cmp
xchg
and
loop
pop
sub
mov
add
loop
push
daa
push
pushf
lock
jmp
pop
fcom
add
push
sbb
mov
sbb
push
sbb
sub
inc
add
shl
arpl
inc
arpl
cmp
out
mov
and
jl
push
call
jo
shl
lahf
fisub
mov
(bad)
xchg
push
mov
outs
mov
xchg
push
sub
(bad)
mul
mov
dec
aad
cmc
loop
add
inc
xchg
pop
ret
add
add
mov
fiadd
and
inc
mov
push
mov
xchg
push
add
arpl
aaa
add
(bad)
cld
cdq
cmc
mov
cld
add
and
imul
adc
jne
rcl
inc
mov
add
add
cs
cmp
popf
outs
(bad)
fcom
add
push
sub
inc
cmp
aad
(bad)
dec
mov
xchg
dec
inc
(bad)
fadd
ror
es
mov
popf
ja
les
sbb
xor
ss
add
add
ds
mov
add
sbb
aam
jmp
ror
(bad)
sub
aas
adc
jns
adc
inc
aam
aas
mov
rcl
pop
mov
cmp
test
add
in
add
ja
add
or
and
jne
adc
aas
aaa
pusha
xor
test
xor
iret
cmp
pusha
repnz
pushf
je
or
xchg
ss
(bad)
sub
popf
or
lea
bound
ret
push
cmp
inc
sub
and
fadd
sub
inc
sbb
push
mov
pusha
add
add
xor
popf
push
mov
and
loopne
mov
ds
addr16
mov
or
push
aas
add
lds
adc
nop
push
or
ror
jl
dec
cmp
aam
mov
in
sub
out
mov
cmp
sub
xchg
push
call
nop
push
xor
cwde
es
or
aas
mov
pusha
cmovae
hlt
add
add
pushf
icebp
inc
sar
fst
xor
or
add
or
jo
adc
add
add
adc
mov
mov
and
cmp
sub
or
or
rol
pop
into
sbb
add
pop
xor
mov
jo
shl
dec
or
inc
xor
mov
mov
imul
loop
adc
nop
repz
jle
add
push
xchg
pop
les
movs
pop
mov
pop
jae
sbb
rcr
or
push
loope
or
mov
or
dec
mov
and
cli
inc
dec
push
loopne
add
icebp
add
pop
call
add
pushf
ror
add
mov
ret
rol
dec
sub
cmp
mov
or
shl
fadd
int
lods
pushf
jo
add
loopne
es
add
jnp
or
adc
add
xor
add
ror
add
or
and
add
call
and
push
outs
pop
popa
add
dec
add
pop
ret
rol
mov
push
fadd
or
mov
gs
sub
add
mov
add
adc
ud0
ror
push
add
jl
or
mov
cs
test
pushf
xor
outs
mov
cmp
push
fucomp
inc
sub
pop
add
add
sbb
sbb
ret
mov
inc
inc
and
pop
pop
push
fadd
add
and
pop
out
add
sbb
add
or
mov
ret
or
sbb
loope
add
bound
cmp
dec
xchg
add
stc
add
or
inc
sub
add
cmp
sub
add
inc
dec
ins
push
mov
adc
pop
enter
xchg
retf
loop
mov
add
xor
cwde
push
xchg
or
add
inc
sbb
stos
inc
or
int
cmp
pop
fdiv
or
jae
lods
cmc
loope
adc
or
mov
push
xchg
add
loope
xor
dec
mov
inc
dec
add
and
dec
xchg
inc
push
inc
dec
loopne
call
and
sub
les
popa
sub
or
and
xchg
out
inc
sbb
mov
or
and
dec
add
adc
or
add
mov
dec
fs
and
mov
cmp
xchg
jno
enter
inc
push
inc
cwde
out
dec
and
movs
dec
leave
mov
aam
std
icebp
popa
lock
int3
add
pop
loopne
cwde
add
lds
xchg
mov
mov
adc
clc
call
inc
lds
xor
or
lds
add
jo
inc
add
sub
sbb
adc
or
lock
daa
pop
add
add
push
lods
ror
sbb
rcl
iret
jbe
mov
xchg
ss
fs
adc
xor
sub
add
pop
add
adc
adc
aas
outs
xor
push
add
add
test
jne
and
or
pusha
cmp
(bad)
fld
mov
add
dec
lock
adc
mov
cdq
leave
(bad)
mov
enter
ror
inc
inc
xlat
cmp
or
loope
cmp
cmp
cdq
loopne
adc
je
retf
mov
xchg
xchg
add
jne
inc
add
pop
out
in
dec
aas
(bad)
fcom
push
popa
sub
add
sbb
and
add
pop
push
bound
xchg
and
dec
jbe
in
adc
adc
ror
adc
es
add
sahf
adc
pop
xor
adc
push
adc
repnz
aas
imul
inc
inc
push
lock
or
inc
inc
inc
xchg
sbb
and
jmp
add
add
add
add
sub
and
jmp
xlat
jns
or
mov
push
pop
mov
push
or
enter
add
rol
pusha
je
ret
loopne
add
push
or
add
jmp
lods
in
into
pop
add
iret
pusha
jp
mov
or
movs
push
or
outs
or
es
xor
cld
xchg
push
adc
int3
bound
inc
div
mov
push
aad
adc
nop
add
pop
fs
inc
inc
xor
bound
xor
or
or
ins
pop
lods
loopne
aas
es
pop
inc
dec
shl
adc
mov
xchg
pop
push
lea
xor
iret
(bad)
add
and
dec
inc
dec
jns
inc
adc
sub
xchg
inc
ins
je
lock
and
cmp
das
add
jl
xchg
sbb
rcl
adc
test
sbb
lods
mov
fimul
sbb
push
jg
mov
xor
push
aaa
push
xchg
popa
inc
sbb
cmp
lds
rol
sti
inc
adc
leave
sbb
in
mov
push
push
ins
loopne
inc
mov
sub
add
scas
nop
adc
push
loopne
dec
imul
pop
leave
in
inc
mov
loopne
sub
leave
or
dec
or
inc
adc
and
add
rcl
test
cwde
push
and
push
push
mov
ret
add
and
xchg
push
loop
add
sbb
dec
rol
xor
and
daa
inc
xchg
mov
fadd
sbb
enter
add
shl
xor
or
and
add
push
adc
and
mov
xor
test
sbb
sbb
adc
pop
fwait
or
movs
and
sbb
add
cs
jb
add
xor
sbb
enter
inc
sub
or
les
outs
push
test
and
sub
in
dec
push
add
push
mov
jl
and
aaa
push
shl
sbb
enter
mov
ret
cbw
jb
or
add
cld
arpl
das
push
push
inc
sbb
je
jo
sub
lock
inc
repz
jns
or
in
mov
aas
(bad)
xor
sbb
sbb
sbb
cmp
xchg
outs
or
mov
adc
add
and
loopne
xor
out
sub
pop
add
sti
inc
mov
sub
and
add
push
stos
test
inc
push
(bad)
clc
inc
inc
pop
and
imul
inc
sbb
icebp
test
inc
adc
pop
cmovbe
(bad)
xchg
les
add
ins
int3
mov
add
mov
inc
add
and
stos
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
std
sub
jb
or
mov
add
nop
mov
into
cmp
fwait
sub
or
arpl
mov
pop
sbb
add
jae
(bad)
mov
arpl
add
lods
cmc
loope
fwait
ss
dec
mov
inc
dec
add
push
xor
movs
dec
mov
enter
mov
and
mov
shl
(bad)
xchg
or
push
stos
inc
add
sbb
jl
les
mov
shl
fs
imul
inc
jg
and
cmp
loopne
(bad)
adc
xor
sahf
mov
dec
ret
sbb
sbb
clc
loopne
xchg
ret
xor
mov
stos
cmp
icebp
mov
or
add
xor
out
rcr
adc
ret
add
push
push
add
(bad)
(bad)
in
xchg
xor
jae
ja
add
inc
and
stos
cmp
pop
je
mov
or
aaa
fisubr
jmp
popf
imul
pop
or
das
lods
ror
scas
sub
dec
push
xor
icebp
ror
ror
adc
or
movs
or
ror
xor
push
test
dec
inc
ror
and
(bad)
xchg
push
ret
add
mov
or
adc
adc
add
pop
sub
shl
dec
adc
(bad)
retf
test
push
ds
ret
gs
add
add
mov
jbe
dec
loope
inc
pop
in
xor
pop
inc
and
pusha
arpl
jb
cs
and
add
sbb
mov
push
ja
add
add
or
add
shl
wbinvd
add
cmp
or
add
sbb
ret
test
inc
or
ret
adc
loopne
or
add
xor
inc
xchg
inc
add
adc
pop
repz
enter
mov
bswap
rcl
sub
mov
add
sbb
cdq
or
jo
ret
or
or
or
inc
or
or
add
(bad)
psubb
add
or
dec
icebp
inc
mov
cmps
adc
mov
shr
pop
out
xor
fnstsw
inc
std
or
dec
cmp
cmp
rol
adc
add
mov
sbb
and
push
dec
lock
add
push
xchg
xor
in
icebp
enter
pusha
enter
and
add
ins
enter
and
push
push
or
add
push
inc
or
retf
and
mov
adc
adc
fdiv
nop
pop
cmp
push
mov
cwde
xchg
add
pop
outs
and
and
push
pushf
mov
xchg
push
add
bound
loopne
mov
rol
leave
jo
shld
or
adc
cmp
push
push
adc
dec
inc
or
dec
or
mov
aas
pop
in
rcl
or
mov
xor
rol
sbb
add
sbb
mov
sbb
add
push
gs
pop
inc
add
fadd
dec
push
iret
mov
and
adc
lds
(bad)
aaa
test
sub
es
addr16
or
sbb
mov
loop
or
inc
adc
push
add
or
push
add
add
test
je
sbb
repz
add
js
test
push
rcl
add
lds
push
rdtsc
jl
add
clc
ror
xor
mov
(bad)
loopne
or
ror
pop
xchg
pop
rol
jnp
pusha
add
mov
pop
push
add
js
add
add
pop
add
push
sbb
sbb
add
add
adc
sbb
xchg
xor
add
clc
sbb
in
adc
inc
add
hlt
lock
(bad)
mov
rol
js
sbb
cdq
enter
add
adc
or
push
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
repz
mov
aas
or
shl
dec
jl
push
mov
pop
mov
mov
test
cmp
mov
minps
sub
inc
push
and
loopne
mov
movs
sbb
add
xchg
sbb
adc
sub
xchg
and
push
loop
push
sub
inc
in
test
dec
mov
mov
or
xor
loop
adc
inc
adc
xor
lahf
xchg
xchg
out
fadd
imul
pushf
push
mov
add
bound
fsubr
add
add
popa
sub
or
and
xchg
out
cwde
ror
mov
lock
adc
jo
xor
sbb
inc
dec
and
dec
pop
adc
inc
adc
ret
pop
retf
mov
xchg
mov
jae
es
lock
cmps
fs
sahf
sti
and
push
das
(bad)
cmp
rcl
pop
xor
pop
xor
ss
pop
and
xchg
loopne
adc
ret
test
add
or
test
push
jge
or
adc
push
or
test
or
loopne
add
adc
jl
add
dec
movs
fs
(bad)
cmp
add
xor
xchg
inc
nop
push
and
aas
fs
push
sub
mov
xor
sub
add
pop
add
ret
inc
out
add
push
inc
es
mov
or
adc
adc
dec
dec
push
adc
or
aas
xchg
pusha
out
aas
mov
inc
aaa
test
sbb
inc
es
mov
enter
jno
mov
sbb
push
cmp
in
or
pusha
ror
out
adc
rol
mov
fwait
xor
sub
mov
add
push
and
nop
sbb
in
inc
add
sbb
dec
aas
std
lods
jno
inc
inc
inc
xchg
sbb
and
ins
inc
test
or
sbb
add
cld
shr
and
add
rol
add
add
rol
pusha
je
ret
loopne
add
addr16
mov
or
cmps
push
or
adc
push
pop
movs
ja
pusha
lds
adc
or
add
sbb
and
sbb
push
mov
pusha
(bad)
xor
inc
aam
or
or
ret
retf
jae
jmp
sub
scas
ror
in
aas
dec
or
cwde
add
test
dec
inc
push
xchg
sbb
rcl
adc
sub
or
mov
jbe
and
gs
adc
add
jns
int3
xchg
cmp
inc
adc
pop
pusha
mov
inc
cmp
cmovo
test
add
add
add
and
mov
mov
mov
loop
adc
add
daa
inc
sub
(bad)
mov
or
add
and
sbb
inc
xor
add
add
sbb
add
xor
push
pop
add
sti
cmp
and
(bad)
pop
outs
mov
pop
mov
add
and
mov
ss
inc
sub
mov
shl
cs
jb
add
pop
adc
sbb
or
push
add
fcomp
(bad)
mov
push
push
and
enter
aam
sbb
test
sub
test
and
nop
inc
loopne
adc
lods
loopne
popf
xlat
mov
dec
les
inc
inc
or
int3
mov
or
pop
test
and
xchg
xchg
fadd
jmp
push
sbb
sbb
mov
inc
adc
add
mov
and
adc
xor
add
test
xor
inc
dec
cmp
lahf
mov
sbb
add
shl
mov
push
loop
rol
or
and
or
pop
pop
xor
add
test
push
adc
cmp
loopne
or
add
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
std
adc
(bad)
or
or
or
mov
push
clc
inc
xchg
add
rdpmc
dec
rol
mov
retf
test
sub
test
xor
xchg
and
mov
jecxz
mov
mov
and
or
inc
inc
add
mov
or
push
adc
dec
or
(bad)
xor
add
out
inc
outs
push
or
movs
add
test
and
dec
pusha
rol
push
jg
pop
xchg
sub
add
xor
xchg
mov
mov
rol
or
xchg
and
shl
pop
xchg
adc
and
imul
cmp
add
mov
add
and
adc
dec
jle
es
shr
and
jno
inc
call
add
add
or
jno
add
daa
dec
push
inc
adc
ret
ret
inc
mov
add
sbb
rol
popf
adc
test
dec
sbb
pop
jmp
cmp
jp
arpl
xlat
stos
dec
and
mov
cs
xor
bndldx
add
or
push
dec
ret
mov
sbb
unpcklps
ret
push
add
xchg
add
aas
cld
lock
inc
retf
fdiv
or
nop
or
and
xor
and
cld
adc
cmp
xor
cmp
add
fcom
or
add
jbe
dec
or
xchg
loop
aas
pop
push
cld
add
xor
push
adc
pop
sbb
jno
push
(bad)
mov
aas
push
mov
sub
ret
push
dec
add
add
in
cmp
pop
adc
or
wbinvd
aas
dec
rcr
inc
add
push
pop
inc
test
call
loope
adc
repnz
cmp
icebp
jmp
push
add
jb
adc
xlat
add
sbb
add
adc
mov
and
(bad)
jmp
xchg
pop
add
rol
adc
add
or
or
jmp
adc
retf
add
and
push
loopne
adc
js
inc
adc
lock
add
xchg
xchg
inc
adc
sub
in
aas
add
adc
xor
aam
les
inc
and
adc
adc
jo
inc
cwde
xor
aaa
xor
enter
mov
aam
ja
or
xlat
pop
lahf
in
and
sub
or
mov
add
fnstcw
jle
inc
or
pusha
pop
add
or
dec
mov
inc
sbb
js
push
add
loop
inc
add
sub
add
jmp
add
and
mov
dec
or
jl
or
aam
inc
or
cwde
xchg
inc
sbb
pushf
and
xor
cmp
xor
cmp
pop
push
add
xor
loopne
xor
loope
adc
adc
xor
aas
fild
rol
sub
pushf
cld
xchg
mov
rol
mov
push
xchg
mov
mov
add
js
lea
xor
jns
test
adc
fistp
leave
leave
rdpmc
xchg
xor
or
pop
adc
inc
mov
sti
and
jmp
add
nop
aas
dec
test
or
mov
mov
add
and
or
icebp
pop
sbb
push
cmovge
ror
rol
mov
sub
cmp
jg
mov
test
jp
push
xor
inc
sub
lea
les
adc
mov
add
add
xrelease
ja
and
dec
mov
or
sub
pop
dec
add
aaa
mov
add
push
ret
inc
push
add
pusha
cmp
call
ret
adc
mov
shl
add
xor
leave
lods
pusha
adc
push
and
add
(bad)
dec
(bad)
add
jmp
sbb
ret
sub
add
and
add
or
inc
sub
add
add
add
add
or
add
std
inc
mov
add
add
add
pop
enter
jg
add
jo
ror
pop
rdpmc
mov
sar
push
inc
mov
mov
and
mov
mov
shl
push
inc
outs
pop
stos
cmp
sbb
daa
or
sbb
(bad)
or
push
dec
mov
add
mov
dec
and
jmp
pop
and
mov
cli
jecxz
rol
add
enter
sar
mov
out
lds
cs
push
inc
cmp
push
xchg
sbb
xchg
jno
leave
rol
or
loope
sbb
mov
or
lods
cmp
or
clc
sti
daa
or
mov
xor
or
lock
sbb
ja
sbb
pop
mov
mov
psrld
enter
stc
pop
pusha
call
and
iret
sbb
mov
pop
and
xor
dec
movs
push
adc
mov
add
sbb
add
or
setns
cld
ror
aas
dec
fadd
mov
add
dec
clc
jb
and
mov
add
push
adc
cs
xchg
xor
(bad)
xchg
add
daa
and
xor
loope
or
sbb
repz
cdq
cmp
leave
add
out
xor
daa
(bad)
movs
fmul
inc
or
sub
adc
push
push
sub
ret
movs
cdq
push
add
jo
add
mov
ds
loopne
lds
dec
push
leave
adc
add
cmp
inc
add
and
call
outs
popa
out
sbb
dec
add
rol
inc
add
aam
push
add
jl
lds
call
inc
rol
pop
push
sbb
sub
mov
inc
mov
push
xchg
stos
and
inc
add
mov
mov
add
pusha
mov
xor
xchg
mov
jl
inc
or
xor
rol
mov
sbb
mov
nop
pop
and
xor
push
or
shl
adc
or
lods
adc
dec
lock
lods
je
adc
adc
xor
add
and
inc
adc
adc
cwde
ret
repnz
(bad)
aam
aas
jb
add
dec
popa
push
ret
inc
rcl
outs
xor
or
popa
enter
xchg
push
sbb
xor
mov
adc
inc
add
daa
test
mov
das
dec
mov
adc
sbb
xchg
cmp
fs
loope
xchg
mov
push
or
jns
or
sub
(bad)
retf
mov
das
sub
push
dec
repz
es
cmps
push
iret
add
pop
and
mov
movs
or
xor
or
icebp
(bad)
aas
xor
lock
add
lock
add
add
mov
xor
cmp
xor
sbb
ins
loopne
pop
or
lock
push
scas
inc
adc
paddb
push
or
daa
jmp
lock
or
inc
push
daa
dec
cmp
add
mov
pop
popa
and
or
jno
fisub
mov
xchg
and
sbb
dec
xor
mov
add
ret
call
inc
fisttp
add
mov
bound
pop
sbb
loopne
sbb
imul
add
sbb
mov
adc
xor
jb
stos
add
or
test
cmp
lahf
sbb
inc
add
(bad)
loopne
jg
adc
nop
push
add
lock
js
or
enter
pop
call
sub
fadd
mov
ret
add
leave
inc
cmp
cmp
push
jmp
sub
add
add
mov
add
pop
pop
push
sbb
cmp
sbb
lock
push
rcr
xor
push
ret
cmps
imul
add
add
cmp
add
and
daa
pop
enter
add
adc
sbb
and
add
or
inc
sub
add
add
add
add
std
sub
jb
or
mov
add
nop
mov
into
cmp
fwait
sub
or
arpl
mov
pop
sbb
add
jae
(bad)
mov
arpl
add
lods
cmc
loope
fwait
ss
dec
mov
inc
dec
add
push
xor
in
mov
enter
mov
and
mov
shl
(bad)
xchg
or
push
stos
inc
add
sbb
jl
les
mov
shl
fs
hlt
iret
in
fld
cmc
loopne
(bad)
adc
xor
sahf
out
es
inc
(bad)
int3
aas
or
ret
(bad)
lahf
rol
xor
and
ret
xor
lods
loop
les
and
ret
adc
add
push
stc
fwait
xchg
iret
aas
arpl
in
retf
or
cmp
lods
sbb
mov
(bad)
and
pop
inc
in
push
add
jge
and
mov
adc
ror
(bad)
xchg
and
aam
and
dec
mov
dec
aas
nop
inc
ret
je
sub
test
mov
inc
out
add
iret
dec
adc
or
movs
or
ror
xor
mov
ror
and
(bad)
xchg
push
ret
or
int
jbe
aad
cvtpi2ps
test
enter
adc
aad
cdq
mov
mov
xor
adc
sub
push
and
and
xchg
adc
and
sbb
fsub
lds
and
add
add
push
sub
loopne
out
shl
adc
add
pop
fdiv
add
pop
sub
add
add
push
outs
and
add
shl
aas
movs
xchg
xor
ins
test
add
dec
cmova
adc
inc
pop
push
jmp
add
sbb
and
xchg
or
and
and
xchg
sbb
mov
ret
jo
sub
mov
nop
leave
loopne
or
mov
cmp
and
cld
jae
pop
aam
mov
lock
cmp
inc
lahf
add
popa
and
cmp
inc
sub
jl
lds
and
mov
push
xor
ins
cmp
sub
mov
inc
test
rcl
pop
adc
mov
and
mov
movs
icebp
nop
enter
inc
cld
mov
(bad)
pop
daa
cmp
mov
rol
add
adc
call
and
push
pusha
dec
mov
pop
adc
iret
inc
jp
and
aad
pusha
push
ret
and
and
push
pushf
mov
call
add
xor
xor
lds
loope
add
push
nop
ror
cmp
rol
or
add
add
inc
xor
mov
inc
inc
add
repz
or
xor
sub
imul
pop
and
push
in
mov
or
iret
or
mov
inc
adc
xchg
mov
push
shl
out
mov
daa
or
sub
inc
pop
lahf
and
xchg
or
inc
stos
mov
or
inc
es
addr16
in
mov
or
and
or
out
rcr
xor
mov
test
or
inc
mov
and
inc
ss
ror
adc
loopne
adc
mov
add
push
and
fcom
or
add
in
add
lods
inc
pusha
or
mov
and
sbb
or
inc
push
xor
sub
sub
mov
add
icebp
inc
pop
push
or
inc
daa
push
nop
add
loopne
ud0
add
loope
adc
cli
add
clc
mov
adc
inc
add
hlt
jo
in
icebp
nop
jbe
inc
sbb
push
dec
sbb
repnz
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
repz
mov
aas
or
shl
dec
jl
push
mov
pop
mov
mov
test
cmp
mov
minps
sub
inc
push
and
loopne
mov
movs
sbb
add
xchg
sbb
adc
sub
xchg
and
push
loop
push
sub
inc
in
test
dec
mov
mov
or
xor
loop
adc
inc
adc
xor
lahf
xchg
xchg
out
fadd
imul
pushf
push
mov
add
bound
fsubr
add
add
popa
sub
or
and
xchg
out
cwde
ror
mov
lock
adc
jo
xor
sbb
inc
dec
and
dec
pop
adc
inc
adc
ret
pop
retf
mov
xchg
mov
jae
es
lock
cmps
fs
sahf
sti
and
push
das
(bad)
cmp
rcl
pop
xor
pop
xor
ss
pop
and
xchg
loopne
adc
ret
test
add
or
test
push
jge
or
adc
push
or
test
or
loopne
add
adc
jl
add
dec
movs
fs
(bad)
cmp
add
xor
xchg
inc
nop
push
and
aas
fs
push
sub
mov
xor
sub
add
pop
add
ret
inc
out
add
push
inc
es
mov
or
adc
adc
dec
dec
push
adc
or
aas
xchg
pusha
out
aas
mov
inc
aaa
test
sbb
inc
es
mov
enter
jno
mov
sbb
push
cmp
in
or
pusha
ror
out
adc
rol
mov
fwait
xor
sub
mov
add
push
and
nop
sbb
in
inc
add
sbb
dec
aas
std
lods
jno
inc
inc
inc
xchg
sbb
and
ins
inc
test
or
sbb
add
cld
shr
and
add
rol
add
add
rol
pusha
je
ret
loopne
add
addr16
mov
or
cmps
push
or
adc
push
pop
movs
ja
pusha
lds
adc
or
add
sbb
and
sbb
push
mov
pusha
(bad)
xor
inc
aam
or
or
ret
retf
jae
jmp
sub
scas
ror
in
aas
dec
or
cwde
add
test
dec
inc
push
xchg
sbb
rcl
adc
sub
or
mov
jbe
and
gs
adc
add
jns
int3
xchg
cmp
inc
adc
pop
pusha
mov
inc
cmp
cmovo
test
add
add
add
and
mov
mov
mov
loop
adc
add
daa
inc
sub
(bad)
mov
or
add
and
sbb
inc
xor
add
add
sbb
add
xor
push
pop
add
sti
cmp
and
(bad)
pop
outs
mov
pop
mov
add
and
mov
ss
inc
sub
mov
shl
cs
jb
add
pop
adc
sbb
or
push
add
fcomp
(bad)
mov
push
push
and
enter
aam
sbb
test
sub
test
and
nop
inc
loopne
adc
lods
loopne
popf
xlat
mov
dec
les
inc
inc
or
int3
mov
or
pop
test
and
xchg
xchg
fadd
jmp
push
sbb
sbb
mov
inc
adc
add
mov
and
adc
xor
add
test
xor
inc
dec
cmp
lahf
mov
sbb
add
shl
mov
push
loop
rol
or
and
or
pop
pop
xor
add
test
push
adc
cmp
loopne
or
add
adc
add
stc
add
or
inc
sub
add
add
add
add
std
adc
(bad)
or
or
or
mov
push
clc
inc
xchg
add
rdpmc
dec
rol
mov
retf
test
sub
test
xor
xchg
and
mov
jecxz
mov
mov
and
or
inc
inc
add
mov
or
push
adc
dec
or
(bad)
xor
add
out
inc
outs
push
or
movs
add
test
and
dec
pusha
rol
push
jg
pop
xchg
sub
add
xor
xchg
mov
mov
rol
or
xchg
and
shl
pop
xchg
adc
and
imul
cmp
add
mov
add
and
adc
dec
jle
es
shr
and
jno
inc
call
add
add
or
jno
add
daa
dec
push
inc
adc
ret
ret
inc
mov
add
sbb
rol
popf
adc
test
dec
sbb
pop
jmp
cmp
jp
arpl
xlat
stos
dec
and
mov
cs
xor
bndldx
add
or
push
dec
ret
mov
sbb
unpcklps
ret
push
add
xchg
add
aas
cld
lock
inc
retf
fdiv
or
nop
or
and
xor
and
cld
adc
cmp
xor
cmp
add
fcom
or
add
jbe
dec
or
xchg
loop
aas
pop
push
cld
add
xor
push
adc
pop
sbb
jno
push
(bad)
mov
aas
push
mov
sub
ret
push
dec
add
add
in
cmp
pop
adc
or
wbinvd
aas
dec
rcr
inc
add
push
pop
inc
test
call
loope
adc
repnz
cmp
icebp
jmp
push
add
jb
adc
xlat
add
sbb
add
adc
mov
and
(bad)
jmp
xchg
pop
add
rol
adc
add
or
or
jmp
adc
retf
add
and
push
loopne
adc
js
inc
adc
lock
add
xchg
xchg
inc
adc
sub
in
aas
add
adc
xor
aam
les
inc
and
adc
adc
jo
inc
cwde
xor
aaa
xor
enter
mov
aam
ja
or
xlat
pop
lahf
in
and
sub
or
mov
add
fnstcw
jle
inc
or
pusha
pop
add
or
dec
mov
inc
sbb
js
push
add
loop
inc
add
sub
add
jmp
add
and
mov
dec
or
jl
or
aam
inc
or
cwde
xchg
inc
sbb
pushf
and
xor
cmp
xor
cmp
pop
push
add
xor
loopne
xor
loope
adc
adc
xor
aas
fild
rol
sub
pushf
cld
xchg
mov
rol
mov
push
xchg
mov
mov
add
js
lea
xor
jns
test
adc
fistp
leave
leave
rdpmc
xchg
xor
or
pop
adc
inc
mov
sti
and
jmp
add
nop
aas
dec
test
or
mov
mov
add
and
or
icebp
pop
sbb
push
cmovge
ror
rol
mov
sub
cmp
jg
mov
test
jp
push
xor
inc
sub
lea
les
adc
mov
add
add
xrelease
ja
and
dec
mov
or
sub
pop
dec
add
aaa
mov
add
push
ret
inc
push
add
pusha
cmp
call
ret
adc
mov
shl
add
xor
leave
lods
pusha
adc
push
and
add
(bad)
dec
(bad)
add
jmp
sbb
ret
sub
add
and
add
or
inc
sub
add
add
add
add
or
add
std
inc
mov
add
add
add
pop
enter
jg
add
jo
ror
pop
rdpmc
mov
sar
push
inc
mov
mov
and
mov
mov
shl
push
inc
outs
pop
stos
cmp
sbb
daa
or
sbb
(bad)
or
push
dec
mov
add
mov
dec
and
jmp
pop
and
mov
cli
jecxz
rol
add
enter
sar
mov
out
lds
cs
push
inc
cmp
push
xchg
sbb
xchg
jno
leave
rol
or
loope
sbb
mov
or
lods
cmp
or
clc
sti
daa
or
mov
xor
or
lock
sbb
ja
sbb
pop
mov
mov
psrld
enter
stc
pop
pusha
call
and
iret
sbb
mov
pop
and
xor
dec
movs
push
adc
mov
add
sbb
add
or
setns
cld
ror
aas
dec
fadd
mov
add
dec
clc
jb
and
mov
add
push
adc
cs
xchg
xor
(bad)
xchg
add
daa
and
xor
loope
or
sbb
repz
cdq
cmp
leave
add
out
xor
daa
(bad)
movs
fmul
inc
or
sub
adc
push
push
sub
ret
movs
cdq
push
add
jo
add
mov
ds
loopne
lds
dec
push
leave
adc
add
cmp
inc
add
and
call
outs
popa
out
sbb
dec
add
rol
inc
add
aam
push
add
jl
lds
call
inc
rol
pop
push
sbb
sub
mov
inc
mov
push
xchg
stos
and
inc
add
mov
mov
add
pusha
mov
xor
xchg
mov
jl
inc
or
xor
rol
mov
sbb
mov
nop
pop
and
xor
push
or
shl
adc
or
lods
adc
dec
lock
lods
je
adc
adc
xor
add
and
inc
adc
adc
cwde
ret
repnz
(bad)
aam
aas
jb
add
dec
popa
push
ret
inc
rcl
outs
xor
or
popa
enter
xchg
push
sbb
xor
mov
adc
inc
add
daa
test
mov
das
dec
mov
adc
sbb
xchg
cmp
fs
loope
xchg
mov
push
or
jns
or
sub
(bad)
retf
mov
das
sub
push
dec
repz
es
cmps
push
iret
add
pop
and
mov
movs
or
xor
or
icebp
(bad)
aas
xor
lock
add
lock
add
add
mov
xor
cmp
xor
sbb
ins
loopne
pop
or
lock
push
scas
inc
adc
paddb
push
or
daa
jmp
lock
or
inc
push
daa
dec
cmp
add
mov
pop
popa
and
or
jno
fisub
mov
xchg
and
sbb
dec
xor
mov
add
ret
call
inc
fisttp
add
mov
bound
pop
sbb
loopne
sbb
imul
add
sbb
mov
adc
xor
jb
stos
add
or
test
cmp
lahf
sbb
inc
add
(bad)
loopne
jg
adc
nop
push
add
lock
js
or
enter
pop
call
sub
fadd
mov
ret
add
leave
inc
cmp
cmp
push
jmp
sub
add
add
mov
add
pop
pop
push
sbb
cmp
sbb
lock
push
rcr
xor
push
ret
cmps
imul
add
add
cmp
add
and
daa
pop
enter
add
adc
sbb
and
add
or
inc
sub
add
add
add
add
std
sub
jb
or
mov
add
nop
mov
into
cmp
fwait
sub
or
arpl
mov
pop
sbb
add
jae
(bad)
mov
arpl
add
lods
cmc
loope
fwait
ss
dec
mov
inc
dec
add
push
xor
in
mov
enter
mov
and
mov
shl
(bad)
xchg
or
push
stos
inc
add
sbb
jl
les
mov
shl
fs
hlt
iret
in
fld
cmc
loopne
(bad)
adc
xor
sahf
out
es
inc
(bad)
int3
aas
or
ret
(bad)
lahf
rol
xor
and
ret
xor
lods
loop
les
and
ret
adc
add
push
stc
fwait
xchg
iret
aas
arpl
in
retf
or
cmp
lods
sbb
mov
(bad)
and
pop
inc
in
push
add
jge
and
mov
adc
ror
(bad)
xchg
and
aam
and
dec
mov
dec
aas
nop
inc
ret
je
sub
test
mov
inc
out
add
iret
dec
adc
or
movs
or
ror
xor
mov
ror
and
(bad)
xchg
push
ret
or
int
jbe
aad
cvtpi2ps
test
enter
adc
aad
cdq
mov
mov
xor
adc
sub
push
and
and
xchg
adc
and
sbb
fsub
lds
and
add
add
push
sub
loopne
out
shl
adc
add
pop
fdiv
add
pop
sub
add
add
push
outs
and
add
shl
aas
movs
xchg
xor
ins
test
add
dec
cmova
adc
inc
pop
push
jmp
add
sbb
and
xchg
or
and
and
xchg
sbb
mov
ret
jo
sub
mov
nop
leave
loopne
or
mov
cmp
and
cld
jae
pop
aam
mov
lock
cmp
inc
lahf
add
popa
and
cmp
inc
sub
jl
lds
and
mov
push
xor
ins
cmp
sub
mov
inc
test
rcl
pop
adc
mov
and
mov
movs
icebp
nop
enter
inc
cld
mov
(bad)
pop
daa
cmp
mov
rol
add
adc
call
and
push
pusha
dec
mov
pop
adc
iret
inc
jp
and
aad
pusha
push
ret
and
and
push
pushf
mov
call
add
xor
xor
lds
loope
add
push
nop
ror
cmp
rol
or
add
add
inc
xor
mov
inc
inc
add
repz
or
xor
sub
imul
pop
and
push
in
mov
or
iret
or
mov
inc
adc
xchg
mov
push
shl
out
mov
daa
or
sub
inc
pop
lahf
and
xchg
or
inc
stos
mov
or
inc
es
addr16
in
mov
or
and
or
out
rcr
xor
mov
test
or
inc
mov
and
inc
ss
ror
adc
loopne
adc
mov
add
push
and
fcom
or
add
in
add
lods
inc
pusha
or
mov
and
sbb
or
inc
push
xor
sub
sub
mov
add
icebp
inc
pop
push
or
inc
daa
push
nop
add
loopne
ud0
add
loope
adc
cli
add
clc
mov
adc
inc
add
hlt
jo
in
icebp
nop
jbe
inc
sbb
push
dec
sbb
repnz
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
repz
mov
aas
or
shl
dec
jl
push
mov
pop
mov
mov
test
cmp
mov
minps
sub
inc
push
and
loopne
mov
movs
sbb
add
xchg
sbb
adc
sub
xchg
and
push
loop
push
sub
inc
in
test
dec
mov
mov
or
xor
loop
adc
inc
adc
xor
lahf
xchg
xchg
out
fadd
imul
pushf
push
mov
add
bound
fsubr
add
add
popa
sub
or
and
xchg
out
cwde
ror
mov
lock
adc
jo
xor
sbb
inc
dec
and
dec
pop
adc
inc
adc
ret
pop
retf
mov
xchg
mov
jae
es
lock
cmps
fs
sahf
sti
and
push
das
(bad)
cmp
rcl
pop
xor
pop
xor
ss
pop
and
xchg
loopne
adc
ret
test
add
or
test
push
jge
or
adc
push
or
test
or
loopne
add
adc
jl
add
dec
movs
fs
(bad)
cmp
add
xor
xchg
inc
nop
push
and
aas
fs
push
sub
mov
xor
sub
add
pop
add
ret
inc
out
add
push
inc
es
mov
or
adc
adc
dec
dec
push
adc
or
aas
xchg
pusha
out
aas
mov
inc
aaa
test
sbb
inc
es
mov
enter
jno
mov
sbb
push
cmp
in
or
pusha
ror
out
adc
rol
mov
fwait
xor
sub
mov
add
push
and
nop
sbb
in
inc
add
sbb
dec
aas
std
lods
jno
inc
inc
inc
xchg
sbb
and
ins
inc
test
or
sbb
add
cld
shr
and
add
rol
add
add
rol
pusha
je
ret
loopne
add
addr16
mov
or
cmps
push
or
adc
push
pop
movs
ja
pusha
lds
adc
or
add
sbb
and
sbb
push
mov
pusha
(bad)
xor
inc
aam
or
or
ret
retf
jae
jmp
sub
scas
ror
in
aas
dec
or
cwde
add
test
dec
inc
push
xchg
sbb
rcl
adc
sub
or
mov
jbe
and
gs
adc
add
jns
int3
xchg
cmp
inc
adc
pop
pusha
mov
inc
cmp
cmovo
test
add
add
add
and
mov
mov
mov
loop
adc
add
daa
inc
sub
(bad)
mov
or
add
and
sbb
inc
xor
add
add
sbb
add
xor
push
pop
add
sti
cmp
and
(bad)
pop
outs
mov
pop
mov
add
and
mov
ss
inc
sub
mov
shl
cs
jb
add
pop
adc
sbb
or
push
add
fcomp
(bad)
mov
push
push
and
enter
aam
sbb
test
sub
test
and
nop
inc
loopne
adc
lods
loopne
popf
xlat
mov
dec
les
inc
inc
or
int3
mov
or
pop
test
and
xchg
xchg
fadd
jmp
push
sbb
sbb
mov
inc
adc
add
mov
and
adc
xor
add
test
xor
inc
dec
cmp
lahf
mov
sbb
add
shl
mov
push
loop
rol
or
and
or
pop
pop
xor
add
test
push
adc
cmp
loopne
or
add
adc
add
stc
add
or
inc
sub
add
add
add
add
std
adc
(bad)
or
or
or
mov
push
clc
inc
xchg
add
rdpmc
dec
rol
mov
retf
test
sub
test
xor
xchg
and
mov
jecxz
mov
mov
and
or
inc
inc
add
mov
or
push
adc
dec
or
(bad)
xor
add
out
inc
outs
push
or
movs
add
test
and
dec
pusha
rol
push
jg
pop
xchg
sub
add
xor
xchg
mov
mov
rol
or
xchg
and
shl
pop
xchg
adc
and
imul
cmp
add
mov
add
and
adc
dec
jle
es
shr
and
jno
inc
call
add
add
or
jno
add
daa
dec
push
inc
adc
ret
ret
inc
mov
add
sbb
rol
popf
adc
test
dec
sbb
pop
jmp
cmp
jp
arpl
xlat
stos
dec
and
mov
cs
xor
bndldx
add
or
push
dec
ret
mov
sbb
unpcklps
ret
push
add
xchg
add
aas
cld
lock
inc
retf
fdiv
or
nop
or
and
xor
and
cld
adc
cmp
xor
cmp
add
fcom
or
add
jbe
dec
or
xchg
loop
aas
pop
push
cld
add
xor
push
adc
pop
sbb
jno
push
(bad)
mov
aas
push
mov
sub
ret
push
dec
add
add
in
cmp
pop
adc
or
wbinvd
aas
dec
rcr
inc
add
push
pop
inc
test
call
loope
adc
repnz
cmp
icebp
jmp
push
add
jb
adc
xlat
add
sbb
add
adc
mov
and
(bad)
jmp
xchg
pop
add
rol
adc
add
or
or
jmp
adc
retf
add
and
push
loopne
adc
js
inc
adc
lock
add
xchg
xchg
inc
adc
sub
in
aas
add
adc
xor
aam
les
inc
and
adc
adc
jo
inc
cwde
xor
aaa
xor
enter
mov
aam
ja
or
xlat
pop
lahf
in
and
sub
or
mov
add
fnstcw
jle
inc
or
pusha
pop
add
or
dec
mov
inc
sbb
js
push
add
loop
inc
add
sub
add
jmp
add
and
mov
dec
or
jl
or
aam
inc
or
cwde
xchg
inc
sbb
pushf
and
xor
cmp
xor
cmp
pop
push
add
xor
loopne
xor
loope
adc
adc
xor
aas
fild
rol
sub
pushf
cld
xchg
mov
rol
mov
push
xchg
mov
mov
add
js
lea
xor
jns
test
adc
fistp
leave
leave
rdpmc
xchg
xor
or
pop
adc
inc
mov
sti
and
jmp
add
nop
aas
dec
test
or
mov
mov
add
and
or
icebp
pop
sbb
push
cmovge
ror
rol
mov
sub
cmp
jg
mov
test
jp
push
xor
inc
sub
lea
les
adc
mov
add
add
xrelease
ja
and
dec
mov
or
sub
pop
dec
add
aaa
mov
add
push
ret
inc
push
add
pusha
cmp
call
ret
adc
mov
shl
add
xor
leave
lods
pusha
adc
push
and
add
(bad)
dec
(bad)
add
jmp
sbb
ret
sub
add
and
add
or
inc
sub
add
add
add
add
or
add
std
inc
mov
add
add
add
pop
enter
jg
add
jo
ror
pop
rdpmc
mov
sar
push
inc
mov
mov
and
mov
mov
shl
push
inc
outs
pop
stos
cmp
sbb
daa
or
sbb
(bad)
or
push
dec
mov
add
mov
dec
and
jmp
pop
and
mov
cli
jecxz
rol
add
enter
sar
mov
out
lds
cs
push
inc
cmp
push
xchg
sbb
xchg
jno
leave
rol
or
loope
sbb
mov
or
lods
cmp
or
clc
sti
daa
or
mov
xor
or
lock
sbb
ja
sbb
pop
mov
mov
psrld
enter
stc
pop
pusha
call
and
iret
sbb
mov
pop
and
xor
dec
movs
push
adc
mov
add
sbb
add
or
setns
cld
ror
aas
dec
fadd
mov
add
dec
clc
jb
and
mov
add
push
adc
cs
xchg
xor
(bad)
xchg
add
daa
and
xor
loope
or
sbb
repz
cdq
cmp
leave
add
out
xor
daa
(bad)
movs
fmul
inc
or
sub
adc
push
push
sub
ret
movs
cdq
push
add
jo
add
mov
ds
loopne
lds
dec
push
leave
adc
add
cmp
inc
add
and
call
outs
popa
out
sbb
dec
add
rol
inc
add
aam
push
add
jl
lds
call
inc
rol
pop
push
sbb
sub
mov
inc
mov
push
xchg
stos
and
inc
add
mov
mov
add
pusha
mov
xor
xchg
mov
jl
inc
or
xor
rol
mov
sbb
mov
nop
pop
and
xor
push
or
shl
adc
or
lods
adc
dec
lock
lods
je
adc
adc
xor
add
and
inc
adc
adc
cwde
ret
repnz
(bad)
aam
aas
jb
add
dec
popa
push
ret
inc
rcl
outs
xor
or
popa
enter
xchg
push
sbb
xor
mov
adc
inc
add
daa
test
mov
das
dec
mov
adc
sbb
xchg
cmp
fs
loope
xchg
mov
push
or
jns
or
sub
(bad)
retf
mov
das
sub
push
dec
repz
es
cmps
push
iret
add
pop
and
mov
movs
or
xor
or
icebp
(bad)
aas
xor
lock
add
lock
add
add
mov
xor
cmp
xor
sbb
ins
loopne
pop
or
lock
push
scas
inc
adc
paddb
push
or
daa
jmp
lock
or
inc
push
daa
dec
cmp
add
mov
pop
popa
and
or
jno
fisub
mov
xchg
and
sbb
dec
xor
mov
add
ret
call
inc
fisttp
add
mov
bound
pop
sbb
loopne
sbb
imul
add
sbb
mov
adc
xor
jb
stos
add
or
test
cmp
lahf
sbb
inc
add
(bad)
loopne
jg
adc
nop
push
add
lock
js
or
enter
pop
call
sub
fadd
mov
ret
add
leave
inc
cmp
cmp
push
jmp
sub
add
add
mov
add
pop
pop
push
sbb
cmp
sbb
lock
push
rcr
xor
push
ret
cmps
imul
add
add
cmp
add
and
daa
pop
enter
add
adc
sbb
and
add
or
inc
sub
add
add
add
add
std
sub
jb
or
mov
add
nop
mov
into
cmp
fwait
sub
or
arpl
mov
pop
sbb
add
jae
(bad)
mov
arpl
add
lods
cmc
loope
fwait
ss
dec
mov
inc
dec
add
push
xor
in
mov
enter
mov
and
mov
shl
(bad)
xchg
or
push
stos
inc
add
sbb
jl
les
mov
shl
fs
hlt
iret
in
fld
cmc
loopne
(bad)
adc
xor
sahf
out
es
inc
(bad)
int3
aas
or
ret
(bad)
lahf
rol
xor
and
ret
xor
lods
loop
les
and
ret
adc
add
push
stc
fwait
xchg
iret
aas
arpl
in
retf
or
cmp
lods
sbb
mov
(bad)
and
pop
inc
in
push
add
jge
and
mov
adc
ror
(bad)
xchg
and
aam
and
dec
mov
dec
aas
nop
inc
ret
je
sub
test
mov
inc
out
add
iret
dec
adc
or
movs
or
ror
xor
mov
ror
and
(bad)
xchg
push
ret
or
int
jbe
aad
cvtpi2ps
test
enter
adc
aad
cdq
mov
mov
xor
adc
sub
push
and
and
xchg
adc
and
sbb
fsub
lds
and
add
add
push
sub
loopne
out
shl
adc
add
pop
fdiv
add
pop
sub
add
add
push
outs
and
add
shl
aas
movs
xchg
xor
ins
test
add
dec
cmova
adc
inc
pop
push
jmp
add
sbb
and
xchg
or
and
and
xchg
sbb
mov
ret
jo
sub
mov
nop
leave
loopne
or
mov
cmp
and
cld
jae
pop
aam
mov
lock
cmp
inc
lahf
add
popa
and
cmp
inc
sub
jl
lds
and
mov
push
xor
ins
cmp
sub
mov
inc
test
rcl
pop
adc
mov
and
mov
movs
icebp
nop
enter
inc
cld
mov
(bad)
pop
daa
cmp
mov
rol
add
adc
call
and
push
pusha
dec
mov
pop
adc
iret
inc
jp
and
aad
pusha
push
ret
and
and
push
pushf
mov
call
add
xor
xor
lds
loope
add
push
nop
ror
cmp
rol
or
add
add
inc
xor
mov
inc
inc
add
repz
or
xor
sub
imul
pop
and
push
in
mov
or
iret
or
mov
inc
adc
xchg
mov
push
shl
out
mov
daa
or
sub
inc
pop
lahf
and
xchg
or
inc
stos
mov
or
inc
es
addr16
in
mov
or
and
or
out
rcr
xor
mov
test
or
inc
mov
and
inc
ss
ror
adc
loopne
adc
mov
add
push
and
fcom
or
add
in
add
lods
inc
pusha
or
mov
and
sbb
or
inc
push
xor
sub
sub
mov
add
icebp
inc
pop
push
or
inc
daa
push
nop
add
loopne
ud0
add
loope
adc
cli
add
clc
mov
adc
inc
add
hlt
jo
in
icebp
nop
jbe
inc
sbb
push
dec
sbb
repnz
add
stc
add
or
inc
sub
add
add
add
add
or
add
std
repz
mov
aas
or
shl
dec
jl
push
mov
pop
mov
mov
test
cmp
mov
minps
sub
inc
push
and
loopne
mov
movs
sbb
add
xchg
sbb
adc
sub
xchg
and
push
loop
push
sub
inc
in
test
dec
mov
mov
or
xor
loop
adc
inc
adc
xor
lahf
xchg
xchg
out
fadd
imul
pushf
push
mov
add
bound
fsubr
add
add
popa
sub
or
and
xchg
out
cwde
ror
mov
lock
adc
jo
xor
sbb
inc
dec
and
dec
pop
adc
inc
adc
ret
pop
retf
mov
xchg
mov
jae
es
lock
cmps
fs
sahf
sti
and
push
das
(bad)
cmp
rcl
pop
xor
pop
xor
ss
pop
and
xchg
loopne
adc
ret
test
add
or
test
push
jge
or
adc
push
or
test
or
loopne
add
adc
jl
add
dec
movs
fs
(bad)
cmp
add
xor
xchg
inc
nop
push
and
aas
fs
push
sub
mov
xor
sub
add
pop
add
ret
inc
out
add
push
inc
es
mov
or
adc
adc
dec
dec
push
adc
or
aas
xchg
pusha
out
aas
mov
inc
aaa
test
sbb
inc
es
mov
enter
jno
mov
sbb
push
cmp
in
or
pusha
ror
out
adc
rol
mov
fwait
xor
sub
mov
add
push
and
nop
sbb
in
inc
add
sbb
dec
aas
std
lods
jno
inc
inc
inc
xchg
sbb
and
ins
inc
test
or
sbb
add
cld
shr
and
add
rol
add
add
rol
pusha
je
ret
loopne
add
addr16
mov
or
cmps
push
or
adc
push
pop
movs
ja
pusha
lds
adc
or
add
sbb
and
sbb
push
mov
pusha
(bad)
xor
inc
aam
or
or
ret
retf
jae
jmp
sub
scas
ror
in
aas
dec
or
cwde
add
test
dec
inc
push
xchg
sbb
rcl
adc
sub
or
mov
jbe
and
gs
adc
add
jns
int3
xchg
cmp
inc
adc
pop
pusha
mov
inc
cmp
cmovo
test
add
add
add
and
mov
mov
mov
loop
adc
add
daa
inc
sub
(bad)
mov
or
add
and
sbb
inc
xor
add
add
sbb
add
xor
push
pop
add
sti
cmp
and
(bad)
pop
outs
mov
pop
mov
add
and
mov
ss
inc
sub
mov
shl
cs
jb
add
pop
adc
sbb
or
push
add
fcomp
(bad)
mov
push
push
and
enter
aam
sbb
test
sub
test
and
nop
inc
loopne
adc
lods
loopne
popf
xlat
mov
dec
les
inc
inc
or
int3
mov
or
pop
test
and
xchg
xchg
fadd
jmp
push
sbb
sbb
mov
inc
adc
add
mov
and
adc
xor
add
test
xor
inc
dec
cmp
lahf
mov
sbb
add
shl
mov
push
loop
rol
or
and
or
pop
pop
xor
add
test
push
adc
cmp
loopne
or
add
adc
add
stc
add
or
inc
sub
add
add
add
add
std
adc
(bad)
or
or
or
mov
push
clc
inc
xchg
add
rdpmc
dec
rol
mov
retf
test
sub
test
xor
xchg
and
mov
jecxz
mov
mov
and
or
inc
inc
add
mov
or
push
adc
dec
or
(bad)
xor
add
out
inc
outs
push
or
movs
add
test
and
dec
pusha
rol
push
jg
pop
xchg
sub
add
xor
xchg
mov
mov
rol
or
xchg
and
shl
pop
xchg
adc
and
imul
cmp
add
mov
add
and
adc
dec
jle
es
shr
and
jno
inc
call
add
add
or
jno
add
daa
dec
push
inc
adc
ret
ret
inc
mov
add
sbb
rol
popf
adc
test
dec
sbb
pop
jmp
cmp
jp
arpl
xlat
stos
dec
and
mov
cs
xor
bndldx
add
or
push
dec
ret
mov
sbb
unpcklps
ret
push
add
xchg
add
aas
cld
lock
inc
retf
fdiv
or
nop
or
and
xor
and
cld
adc
cmp
xor
cmp
add
fcom
or
add
jbe
dec
or
xchg
loop
aas
pop
push
cld
add
xor
push
adc
pop
sbb
jno
push
(bad)
mov
aas
push
mov
sub
ret
push
dec
add
add
in
cmp
pop
adc
or
wbinvd
aas
dec
rcr
inc
add
push
pop
inc
test
call
loope
adc
repnz
cmp
icebp
jmp
push
add
jb
adc
xlat
add
sbb
add
adc
mov
and
(bad)
jmp
xchg
pop
add
rol
adc
add
or
or
jmp
adc
retf
add
and
push
loopne
adc
js
inc
adc
lock
add
xchg
xchg
inc
adc
sub
in
aas
add
adc
xor
aam
les
inc
and
adc
adc
jo
inc
cwde
xor
aaa
xor
enter
mov
aam
ja
or
xlat
pop
lahf
in
and
sub
or
mov
add
fnstcw
jle
inc
or
pusha
pop
add
or
dec
mov
inc
sbb
js
push
add
loop
inc
add
sub
add
jmp
add
and
mov
dec
or
jl
or
aam
inc
or
cwde
xchg
inc
sbb
pushf
and
xor
cmp
xor
cmp
pop
push
add
xor
loopne
xor
loope
adc
adc
xor
aas
fild
rol
sub
pushf
cld
xchg
mov
rol
mov
push
xchg
mov
mov
add
js
lea
xor
jns
test
adc
fistp
leave
leave
rdpmc
xchg
xor
or
pop
adc
inc
mov
sti
and
jmp
add
nop
aas
dec
test
or
mov
mov
add
and
or
icebp
pop
sbb
push
cmovge
ror
rol
mov
sub
cmp
jg
mov
test
jp
push
xor
inc
sub
lea
les
adc
mov
add
add
xrelease
ja
and
dec
mov
or
sub
pop
dec
add
aaa
mov
add
push
ret
inc
push
add
pusha
cmp
call
ret
adc
mov
shl
add
xor
leave
lods
pusha
adc
push
and
add
(bad)
dec
(bad)
add
jmp
sbb
ret
sub
add
and
add
or
inc
sub
add
add
add
add
or
add
std
inc
mov
add
add
add
pop
enter
jg
add
jo
ror
pop
rdpmc
mov
sar
push
inc
mov
mov
and
mov
mov
shl
push
inc
outs
pop
stos
cmp
sbb
daa
or
sbb
(bad)
or
push
dec
mov
add
mov
dec
and
jmp
pop
and
mov
cli
jecxz
rol
add
enter
sar
mov
out
lds
cs
push
inc
cmp
push
xchg
sbb
xchg
jno
leave
rol
or
loope
sbb
mov
or
lods
cmp
or
clc
sti
daa
or
mov
xor
or
lock
sbb
ja
sbb
pop
mov
mov
psrld
enter
stc
pop
pusha
call
and
iret
sbb
mov
pop
and
xor
dec
movs
push
adc
mov
add
sbb
add
or
setns
cld
ror
aas
dec
fadd
mov
add
dec
clc
jb
and
mov
add
push
adc
cs
xchg
xor
(bad)
xchg
add
daa
and
xor
loope
or
sbb
repz
cdq
cmp
leave
add
out
xor
daa
(bad)
movs
fmul
inc
or
sub
adc
push
push
sub
ret
movs
cdq
push
add
jo
add
mov
ds
loopne
lds
dec
push
leave
adc
add
cmp
inc
add
and
call
outs
popa
out
sbb
dec
add
rol
inc
add
aam
push
add
jl
lds
call
inc
rol
pop
push
sbb
sub
mov
inc
mov
push
xchg
stos
and
inc
add
mov
mov
add
pusha
mov
xor
xchg
mov
jl
inc
or
xor
rol
mov
sbb
mov
nop
pop
and
xor
push
or
shl
adc
or
lods
adc
dec
lock
lods
je
adc
adc
xor
add
and
inc
adc
adc
cwde
ret
repnz
(bad)
aam
aas
jb
add
dec
popa
push
ret
inc
rcl
outs
xor
or
popa
enter
xchg
push
sbb
xor
mov
adc
inc
add
daa
test
mov
das
dec
mov
adc
sbb
xchg
cmp
fs
loope
xchg
mov
push
or
jns
or
sub
(bad)
retf
mov
das
sub
push
dec
repz
es
cmps
push
iret
add
pop
and
mov
movs
or
xor
or
icebp
(bad)
aas
xor
lock
add
lock
add
add
mov
xor
cmp
xor
sbb
ins
loopne
pop
or
lock
push
scas
inc
adc
paddb
push
or
daa
jmp
lock
or
inc
push
daa
dec
cmp
add
mov
pop
popa
and
or
jno
fisub
mov
xchg
and
sbb
dec
xor
mov
add
ret
call
inc
fisttp
add
mov
bound
pop
sbb
loopne
sbb
imul
add
sbb
mov
adc
xor
jb
stos
add
or
test
cmp
lahf
sbb
inc
add
(bad)
loopne
jg
adc
nop
push
add
lock
js
or
enter
pop
call
sub
fadd
mov
ret
add
leave
inc
cmp
cmp
push
jmp
sub
add
add
mov
add
pop
pop
push
sbb
cmp
sbb
lock
push
rcr
xor
push
ret
cmps
imul
add
add
cmp
add
and
daa
pop
enter
add
adc
sbb
and
add
or
inc
sub
add
add
add
add
std
sub
jb
or
mov
add
nop
mov
into
cmp
fwait
sub
or
arpl
mov
pop
sbb
add
jae
(bad)
mov
arpl
add
lods
cmc
loope
fwait
ss
dec
mov
inc
dec
add
push
xor
in
mov
enter
mov
and
mov
shl
(bad)
xchg
or
push
stos
inc
add
sbb
jl
les
mov
shl
fs
hlt
iret
in
fld
cmc
loopne
(bad)
adc
xor
sahf
out
es
inc
(bad)
int3
aas
or
ret
(bad)
lahf
rol
xor
and
ret
xor
lods
loop
les
and
ret
adc
add
push
stc
fwait
xchg
iret
aas
arpl
in
retf
or
cmp
lods
sbb
mov
(bad)
and
pop
inc
in
push
add
jge
and
mov
adc
ror
(bad)
xchg
and
aam
and
dec
mov
dec
aas
nop
inc
ret
je
sub
test
mov
inc
out
add
iret
dec
adc
or
movs
or
ror
xor
mov
ror
and
(bad)
xchg
push
ret
or
int
jbe
aad
cvtpi2ps
test
enter
adc
aad
cdq
mov
mov
xor
adc
sub
push
and
and
xchg
adc
and
sbb
fsub
lds
and
add
add
push
sub
loopne
out
shl
adc
add
pop
fdiv
add
pop
sub
add
add
push
outs
and
add
shl
aas
movs
xchg
xor
ins
test
add
dec
cmova
adc
inc
pop
push
jmp
add
sbb
and
xchg
or
and
and
xchg
sbb
mov
ret
jo
sub
mov
nop
leave
loopne
or
mov
cmp
and
cld
jae
pop
aam
mov
lock
cmp
inc
lahf
add
popa
and
cmp
inc
sub
jl
lds
and
mov
push
xor
ins
cmp
sub
mov
inc
test
rcl
pop
adc
mov
and
mov
movs
icebp
nop
enter
inc
cld
mov
(bad)
pop
daa
cmp
mov
rol
add
adc
call
and
push
pusha
dec
mov
pop
adc
iret
inc
jp
and
aad
pusha
push
ret
and
and
push
pushf
mov
call
add
xor
xor
lds
loope
add
push
nop
ror
cmp
rol
or
add
add
inc
xor
mov
inc
inc
add
repz
or
xor
sub
imul
pop
and
push
in
mov
or
iret
or
mov
inc
adc
xchg
mov
push
shl
out
mov
daa
or
sub
inc
pop
lahf
and
xchg
or
inc
stos
mov
or
inc
es
addr16
in
mov
or
and
or
out
rcr
xor
mov
test
or
inc
mov
and
inc
ss
ror
adc
loopne
adc
mov
add
push
and
fcom
or
add
in
add
lods
inc
pusha
or
mov
and
sbb
or
inc
push
xor
sub
sub
mov
add
icebp
inc
pop
push
or
inc
daa
push
nop
add
loopne
ud0
add
loope
adc
cli
add
clc
mov
adc
inc
add
hlt
jo
in
icebp
nop
jbe
inc
sbb
push
dec
sbb
repnz
add
add
add
add
add
add
dec
add
add
add
popa
xor
sbb
or
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
cmp
xor
idiv
add
dec
add
xor
cwde
add
add
mov
add
add
sti
cmps
jae
jecxz
mov
movs
add
repz
inc
dec
inc
adc
sti
xchg
(bad)
dec
push
push
push
push
js
in
pop
in
xor
(bad)
frstor
dec
add
jmp
aad
add
cmps
jns
cmc
mov
inc
add
cld
mov
rcr
in
add
cmc
add
cli
ftst
les
(bad)
out
(bad)
stc
add
xchg
add
les
cld
in
(bad)
(bad)
adc
(bad)
cmp
cli
enter
fiadd
leave
cwde
add
loopne
(bad)
in
cmp
fld
out
jmp
das
(bad)
test
mov
imul
sub
lods
add
fld
ret
jp
(bad)
jmp
std
mov
(bad)
rol
retf
mov
add
mov
mov
stc
stos
add
std
push
std
fstp
iret
retf
pop
add
sub
int
call
or
(bad)
and
std
jno
loope
rol
add
bswap
mov
in
in
shl
xchg
push
add
inc
stc
lods
add
mov
mov
add
out
(bad)
push
(bad)
lock
test
fisubr
xchg
dec
add
xchg
(bad)
fimul
xlat
ret
(bad)
jmp
loop
pop
enter
std
out
cli
mov
(bad)
jmp
cli
mov
(bad)
(bad)
sbb
mov
ret
stos
sbb
retf
mov
hlt
mov
neg
loop
imul
pop
movs
push
(bad)
loopne
sub
sti
add
add
lds
mov
call
push
aad
adc
mov
xlat
ret
repz
not
jmp
inc
mov
dec
push
and
rol
out
xchg
retf
mov
dec
add
repz
cli
or
sbb
lds
add
adc
hlt
lock
xor
or
mov
jmp
or
in
push
jmp
pop
xchg
pop
or
test
retf
push
jmp
(bad)
fadd
in
lock
adc
hlt
loopne
mov
or
mov
cmps
xchg
sbb
test
inc
or
fiadd
push
sub
mov
repz
or
add
ret
add
lock
test
mov
add
scas
add
ror
hlt
or
ret
mov
push
icebp
add
loope
cli
imul
hlt
(bad)
div
add
cld
adc
push
idiv
idiv
add
(bad)
test
xchg
xchg
mov
daa
cmc
loop
leave
lahf
pop
cli
out
add
push
push
lock
add
les
jmp
push
mov
clc
add
lock
jmp
in
cmp
idiv
stc
cld
cld
cli
hlt
(bad)
(bad)
jmp
cli
loop
repz
int
or
rol
out
out
out
ss
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
cmp
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
and
call
or
sub
es
mov
add
adc
sub
les
or
push
and
adc
pop
lods
jb
dec
rol
cmp
ss
pop
leave
mov
dec
adc
cmp
mov
arpl
sbb
inc
mov
das
mov
or
inc
xchg
in
and
or
int
pop
sbb
mov
lods
aaa
add
clc
repnz
xchg
fistp
and
sub
mov
rol
inc
pusha
pop
xchg
jns
xchg
retf
dec
and
popa
loop
or
ror
cmp
ins
shr
add
or
ficomp
dec
test
(bad)
cdq
imul
(bad)
push
or
mov
push
sub
fstp
inc
js
sub
mov
sbb
add
jbe
nop
outs
fistp
repz
in
cmp
inc
adc
cmp
ja
pop
push
push
test
popf
jnp
adc
pusha
sub
dec
lea
jo
sbb
mov
sbb
add
cdq
pop
and
call
mov
and
jge
(bad)
call
je
adc
sub
xchg
loopne
(bad)
and
int
dec
jo
(bad)
call
xchg
sbb
fsub
ret
unpckhps
add
in
ds
leave
adc
inc
call
daa
adc
pop
shl
mov
ds
push
push
adc
xchg
inc
mov
sbb
ret
mov
inc
push
inc
jecxz
js
ror
adc
fdiv
mov
inc
out
ror
scas
nop
cmps
xchg
inc
jp
add
adc
and
xor
adc
dec
pop
or
add
sbb
nop
inc
or
sahf
sub
popa
xchg
outs
sbb
cmps
adc
aad
sbb
nop
sbb
pusha
cmp
adc
adc
and
sbb
mov
sub
push
test
cmps
pushf
mov
inc
es
jecxz
jb
mov
into
inc
push
or
adc
add
sub
inc
or
sbb
and
and
aad
or
outs
sub
adc
into
add
mov
sbb
prefetch
js
xchg
ja
adc
in
and
in
(bad)
call
mov
or
jae
inc
push
add
es
enter
jo
push
and
int3
push
loope
les
sub
push
or
sub
loopne
mov
mov
addr16
fs
xor
inc
(bad)
pop
xor
and
sub
int3
push
xor
or
or
adc
imul
fiadd
(bad)
cmp
scas
or
mov
pop
or
inc
sbb
int3
and
xor
adc
xchg
fdivr
popf
lock
jbe
jmp
lods
rol
loopne
(bad)
jbe
add
mov
retf
add
fdivr
shl
pop
cs
outs
xchg
or
fild
inc
add
jno
and
or
enter
rol
pop
or
mov
mov
(bad)
sahf
and
loop
dec
cmps
sub
les
das
adc
push
daa
add
ret
sub
mov
inc
or
mov
pop
cmps
popf
jp
push
mov
cmp
fwait
lock
push
xchg
mov
and
inc
add
rol
pop
pop
mov
push
push
inc
inc
push
push
pop
leave
push
push
aas
repnz
mov
add
inc
adc
inc
or
movs
push
lods
mov
add
jne
add
inc
mov
adc
mov
les
test
mov
add
adc
inc
inc
pop
jbe
or
jp
sbb
mov
and
dec
inc
inc
adc
xor
call
sub
mov
inc
aaa
mov
pop
clc
xor
aam
sbb
inc
inc
sub
add
adc
lods
je
adc
scas
sbb
sub
mov
mov
test
inc
mov
push
bound
sub
mov
pop
mov
add
repnz
or
inc
loope
inc
and
pop
adc
inc
mov
add
js
or
pusha
cmp
inc
adc
call
or
mov
add
mov
sbb
ror
add
daa
enter
xor
cmp
sub
adc
mov
adc
inc
add
les
cs
mov
add
repz
pop
ret
hlt
xchg
or
iret
punpckldq
inc
or
lods
mov
sub
repnz
pop
mov
sub
rol
js
or
cwde
mov
add
push
lds
mov
test
sbb
ret
dec
push
add
or
mov
push
test
popf
xor
ss
loopne
or
cwde
and
push
pop
push
les
or
add
dec
mov
inc
adc
add
and
push
adc
jo
adc
into
pusha
push
push
mov
add
add
xchg
sbb
leave
mov
inc
or
aad
ins
and
cmp
ret
adc
or
lock
sbb
cmp
adc
add
pop
fld
pusha
mov
rol
xor
mov
inc
ins
mov
adc
adc
or
or
cmp
xchg
cli
push
or
xchg
mov
in
sub
inc
pusha
inc
add
ins
add
nop
add
inc
loop
ss
movs
daa
lock
adc
rcr
jo
cdq
mov
pusha
mov
ret
sti
xchg
bound
xchg
push
xchg
cmps
mov
xor
adc
sub
xchg
sub
inc
arpl
retf
fadd
mov
adc
adc
lods
adc
mov
sti
mov
push
in
add
pop
xor
or
and
xor
add
mov
add
inc
xor
cmp
rcl
pusha
or
cmp
add
cmp
call
inc
or
sub
int3
fadd
pop
js
adc
add
adc
fsub
outs
jo
adc
nop
inc
add
mov
mov
fdiv
add
and
jb
loope
ins
scas
inc
sbb
sbb
adc
mov
cmp
or
out
adc
jo
push
sbb
pop
pop
add
inc
adc
add
mov
xor
mov
test
push
rol
rol
cmp
ins
add
loope
ror
xor
gs
stos
jb
ret
adc
fs
hlt
cmps
jns
jmp
ret
add
in
adc
or
push
out
jne
sti
fsubrp
js
xor
out
xor
jle
add
mov
mov
sub
inc
pop
push
mov
pop
(bad)
fadd
add
lea
mov
cld
div
adc
pop
ret
and
fist
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
sbb
cld
retf
lock
mov
outs
push
mov
ss
bound
xchg
(bad)
jne
fs
out
jge
push
ret
xchg
retf
add
sub
inc
(bad)
adc
mov
or
or
jae
xchg
sbb
push
ficomp
test
ficomp
rol
sbb
fwait
aas
fs
stos
xor
je
jo
mov
aas
ret
push
jecxz
or
imul
loopne
jb
clc
push
cwde
mov
movs
movs
add
and
cmp
jo
lahf
rcr
(bad)
enter
or
xor
inc
or
sub
jl
adc
add
sub
fnstenvw
shl
or
add
rcl
int3
rol
aas
cmp
push
and
and
add
ror
push
push
pusha
lds
adc
call
and
scas
(bad)
mov
xor
sub
loop
test
inc
in
xchg
inc
add
nop
inc
inc
add
cmp
dec
pop
and
and
cdq
rol
push
mov
ret
adc
clc
inc
push
inc
sbb
rol
or
pop
aam
dec
ins
adc
push
xor
push
inc
(bad)
cmp
push
adc
xor
or
inc
or
mov
adc
add
inc
or
mov
loopne
sbb
shl
push
rol
or
cmp
dec
add
dec
xchg
scas
or
mov
pusha
dec
bound
out
adc
cmp
or
call
push
push
fstp
add
les
and
lds
add
scas
mov
sbb
xor
div
sbb
pop
lock
loopne
or
movs
pop
lods
jmp
call
or
mov
inc
or
sbb
js
xor
mov
cdq
xchg
loop
sbb
sub
call
add
add
test
or
mov
mov
sub
sub
xchg
ss
repnz
add
retf
mov
add
std
jecxz
adc
lods
fidivr
inc
xor
rol
xor
jnp
lods
iret
or
ret
and
dec
jp
and
stos
mov
or
jle
rol
call
les
loop
sub
hlt
mov
adc
pusha
inc
pop
pop
cmp
pop
daa
mov
sub
les
or
push
inc
inc
sbb
and
adc
sbb
por
add
inc
(bad)
mov
pop
mov
inc
add
stos
call
int3
xchg
les
ds
popa
push
and
jl
inc
pop
jae
loopne
sub
int3
mov
call
and
jne
rol
sub
cwde
dec
shl
pop
adc
test
clc
loopne
add
pop
mov
jl
add
xchg
mov
add
or
sbb
push
iret
and
movs
ror
cmp
inc
mov
sub
js
inc
and
fdiv
inc
inc
sbb
sub
ror
ficomp
mov
inc
test
dec
pusha
pop
mov
and
xor
and
in
fs
adc
xchg
jl
movs
inc
dec
movs
adc
add
loope
js
in
or
(bad)
xor
pop
test
pop
call
adc
push
push
xchg
jne
or
mov
add
mov
add
mov
push
push
nop
test
dec
adc
ror
sub
ins
pop
test
adc
pusha
mov
(bad)
sbb
lock
and
add
jge
xchg
xor
rcl
add
adc
push
pusha
inc
push
push
lock
push
and
loope
and
aad
xchg
jl
push
xor
sbb
rol
rol
or
dec
push
adc
dec
push
ret
pop
push
push
mov
pusha
sub
popa
ret
sbb
push
or
or
bound
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
add
inc
add
and
mov
jnp
pminsw
arpl
js
mov
xor
in
fst
fisttp
arpl
jno
sub
add
push
xor
out
test
in
repnz
xchg
xor
dec
ret
pop
inc
sub
aaa
push
pop
mov
mov
dec
mov
fsubr
movs
adc
add
push
cmp
inc
pop
xchg
pop
push
push
push
fmul
shl
fsub
xchg
and
std
sub
push
dec
cmps
sub
clc
movs
sub
add
mov
dec
push
mov
pop
or
push
xlat
jbe
sub
inc
xor
out
or
add
add
pop
push
and
sub
nop
dec
loopne
adc
inc
xor
bound
mov
fadd
jg
aam
mov
pop
add
ins
mov
daa
aaa
movs
inc
push
push
ds
pop
or
add
push
xor
test
adc
add
xadd
dec
or
in
jb
and
cmp
addr16
and
lds
jl
mov
jae
add
rol
dec
xor
test
inc
jns
inc
ret
cmp
ret
and
(bad)
jbe
loopne
and
cmp
and
sub
push
fadd
bound
push
arpl
add
sbb
jnp
xchg
(bad)
sbb
call
movs
add
push
cwde
neg
jo
adc
xchg
jecxz
or
enter
jnp
repz
addr16
or
test
sbb
sbb
add
adc
adc
into
or
and
and
jp
repnz
mov
jmp
or
sbb
pop
sub
and
call
pop
jp
push
iret
sub
mov
leave
pushf
inc
pop
or
movs
mul
inc
enter
xor
or
mov
xor
xor
test
cmp
xor
jae
xor
adc
ret
sbb
pop
test
inc
mov
sbb
adc
or
xor
dec
sbb
in
rol
dec
pop
in
and
mov
adc
rol
imul
lock
or
sbb
and
inc
push
push
sbb
or
mov
mov
repz
add
push
call
popf
and
xor
fild
xchg
mov
pop
rol
jecxz
jae
xor
pop
and
test
cmp
(bad)
shl
add
test
jae
adc
mov
call
dec
punpckhwd
lock
mov
je
retf
sbb
or
les
add
mov
lods
dec
sub
call
fadd
adc
sbb
and
add
and
add
mov
cmp
inc
jo
sub
cmp
inc
add
and
add
add
mov
icebp
and
sub
adc
cmp
cs
add
pop
jl
inc
or
sbb
cmp
in
loope
xor
add
mov
sbb
push
rcl
pop
mov
sbb
nop
loop
pop
lock
mov
arpl
sar
inc
out
enter
adc
and
xor
cmp
cs
sub
loopne
sbb
inc
adc
push
cmp
lock
push
mov
jg
ret
mov
xor
add
pushf
xchg
lock
adc
dec
adc
mov
das
pushf
adc
pop
popa
adc
add
sub
sub
pop
mov
movhps
bound
mov
add
lock
add
add
adc
mov
loope
or
push
add
pop
cmp
call
or
stc
add
jno
xor
add
add
and
pop
adc
push
or
add
ficom
ret
or
add
(bad)
push
jo
push
aaa
mov
and
xor
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
add
shl
or
fadd
mov
or
inc
cmps
jg
sub
inc
lock
dec
cmp
xchg
cmp
xchg
dec
sbb
dec
fld
test
push
adc
xchg
out
ror
inc
and
adc
and
mov
aas
mov
inc
sbb
mov
cmps
aas
sub
clc
and
push
lods
popa
add
mov
inc
pop
loopne
cld
inc
test
shl
sbb
sete
mov
adc
and
inc
add
call
xchg
inc
mov
and
ret
add
inc
cmps
mov
je
add
xor
add
xor
(bad)
aas
or
inc
inc
pop
xor
daa
pusha
xchg
cmps
mov
pusha
push
daa
daa
ret
pop
mov
test
ret
outs
sbb
sub
add
sti
retf
loope
test
adc
dec
lods
test
add
sbb
les
into
movs
loopne
and
or
add
adc
cmp
adc
dec
pop
test
cmovg
mov
add
or
add
sbb
dec
and
mov
fcmovbe
popf
test
cmp
mov
xor
or
inc
or
mov
adc
add
inc
or
sub
iret
or
cmp
lahf
add
add
sbb
or
psubsb
adc
cwde
rol
pop
mov
pop
loope
es
and
idiv
add
sub
lahf
sbb
adc
inc
add
les
and
inc
call
add
test
fsubrp
inc
xor
not
enter
loopne
or
cmps
scas
or
(bad)
jle
xor
cwde
xor
or
aam
dec
adc
xchg
popa
mov
xchg
push
repz
mov
inc
cli
xchg
loop
sbb
sub
push
seto
add
add
test
or
mov
xor
mov
mov
add
jno
mov
xchg
out
cli
pop
jno
cwde
xor
fistp
inc
or
push
inc
add
cli
inc
push
stos
add
cmp
sete
add
dec
test
(bad)
and
adc
mov
inc
pop
adc
inc
cmpxchg
mov
loop
sub
hlt
mov
adc
pusha
inc
pop
pop
cmp
pop
adc
push
cs
adc
aas
jb
inc
inc
sbb
and
adc
sbb
por
add
inc
fistp
pop
icebp
(bad)
xlat
mov
stos
call
push
int3
xchg
les
ds
mov
and
jl
inc
pop
mov
loopne
sub
int3
mov
and
int3
rol
sub
cld
jl
ss
adc
test
clc
loopne
add
pop
mov
jl
add
xchg
mov
add
or
sbb
iret
and
movs
ror
cmp
or
sub
js
inc
and
xchg
xchg
inc
add
xor
xor
sti
(bad)
or
add
pushf
aaa
cmp
ret
mov
ret
mov
mov
xor
inc
mov
inc
add
sbb
les
(bad)
clc
adc
inc
out
or
add
jns
sbb
loopne
push
and
(bad)
rol
enter
pop
rol
adc
dec
sbb
adc
pop
add
and
inc
add
and
cmp
clc
rol
inc
add
adc
and
xor
add
mov
sbb
pusha
ret
sub
nop
add
and
and
adc
cld
mov
add
sbb
inc
adc
push
pusha
inc
push
push
lock
push
fs
push
mul
xchg
loop
enter
aam
xor
sbb
rol
rol
clc
and
inc
or
cld
icebp
mov
mov
sbb
mov
dec
cmp
push
ins
pop
inc
and
xor
pop
jle
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
add
inc
add
and
mov
jnp
pminsw
arpl
js
mov
xor
in
fst
fisttp
arpl
jno
sub
add
push
xor
out
test
in
repnz
xchg
xor
dec
ret
pop
inc
sub
aaa
push
pop
mov
mov
dec
mov
fsubr
movs
adc
add
push
cmp
inc
pop
xchg
pop
push
push
push
fmul
shl
fsub
xchg
and
std
sub
push
dec
cmps
sub
clc
movs
sub
add
mov
dec
push
mov
pop
or
push
xlat
jbe
sub
inc
xor
out
or
add
add
pop
push
and
sub
nop
dec
loopne
adc
inc
xor
bound
mov
fadd
jg
aam
mov
pop
add
ins
mov
daa
aaa
movs
inc
push
push
ds
pop
or
add
push
xor
test
adc
add
xadd
dec
or
in
jb
and
cmp
addr16
and
lds
jl
mov
jae
add
rol
dec
xor
test
inc
jns
inc
ret
cmp
ret
and
(bad)
jbe
loopne
and
cmp
and
sub
push
fadd
bound
push
arpl
add
sbb
jnp
xchg
(bad)
sbb
call
movs
add
push
cwde
neg
jo
adc
xchg
jecxz
or
enter
jnp
repz
addr16
or
test
sbb
sbb
add
adc
adc
into
or
and
and
jp
repnz
mov
jmp
or
sbb
pop
sub
and
call
pop
jp
push
iret
sub
mov
leave
pushf
inc
pop
or
movs
mul
inc
enter
xor
or
mov
xor
xor
test
cmp
xor
jae
xor
adc
ret
sbb
pop
test
inc
mov
sbb
adc
or
xor
dec
sbb
in
rol
dec
pop
in
and
mov
adc
rol
imul
lock
or
sbb
and
inc
push
push
sbb
or
mov
mov
repz
add
push
call
popf
and
xor
fild
xchg
mov
pop
rol
jecxz
jae
xor
pop
and
test
cmp
(bad)
shl
add
test
jae
adc
mov
call
dec
punpckhwd
lock
mov
je
retf
sbb
or
les
add
mov
lods
dec
sub
call
fadd
adc
sbb
and
add
and
add
mov
cmp
inc
jo
sub
cmp
inc
add
and
add
add
mov
icebp
and
sub
adc
cmp
cs
add
pop
jl
inc
or
sbb
cmp
in
loope
xor
add
mov
sbb
push
rcl
pop
mov
sbb
nop
loop
pop
lock
mov
arpl
sar
inc
out
enter
adc
and
xor
cmp
cs
sub
loopne
sbb
inc
adc
push
cmp
lock
push
mov
jg
ret
mov
xor
add
pushf
xchg
lock
adc
dec
adc
mov
das
pushf
adc
pop
popa
adc
add
sub
sub
pop
mov
movhps
bound
mov
add
lock
add
add
adc
mov
loope
or
push
add
pop
cmp
call
or
stc
add
jno
xor
add
add
and
pop
adc
push
or
add
ficom
ret
or
add
(bad)
push
jo
push
aaa
mov
and
xor
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
add
shl
or
fadd
mov
or
inc
cmps
jg
sub
inc
lock
dec
cmp
xchg
cmp
xchg
dec
sbb
dec
fld
test
push
adc
xchg
out
ror
inc
and
adc
and
mov
aas
mov
inc
sbb
mov
cmps
aas
sub
clc
and
push
lods
popa
add
mov
inc
pop
loopne
cld
inc
test
shl
sbb
sete
mov
adc
and
inc
add
call
xchg
inc
mov
and
ret
add
inc
cmps
mov
je
add
xor
add
xor
(bad)
aas
or
inc
inc
pop
xor
daa
pusha
xchg
cmps
mov
pusha
push
daa
daa
ret
pop
mov
test
ret
outs
sbb
sub
add
sti
retf
loope
test
adc
dec
lods
test
add
sbb
les
into
movs
loopne
and
or
add
adc
cmp
adc
dec
pop
test
cmovg
mov
add
or
add
sbb
dec
and
mov
fcmovbe
popf
test
cmp
mov
xor
or
inc
or
mov
adc
add
inc
or
sub
iret
or
cmp
lahf
add
add
sbb
or
psubsb
adc
cwde
rol
pop
mov
pop
loope
es
and
idiv
add
sub
lahf
sbb
adc
inc
add
les
and
inc
call
add
test
fsubrp
inc
xor
not
enter
loopne
or
cmps
scas
or
(bad)
jle
xor
cwde
xor
or
aam
dec
adc
xchg
popa
mov
xchg
push
repz
mov
inc
cli
xchg
loop
sbb
sub
push
seto
add
add
test
or
mov
xor
mov
mov
add
jno
mov
xchg
out
cli
pop
jno
cwde
xor
fistp
inc
or
push
inc
add
cli
inc
push
stos
add
cmp
sete
add
dec
test
(bad)
and
adc
mov
inc
pop
adc
inc
cmpxchg
mov
loop
sub
hlt
mov
adc
pusha
inc
pop
pop
cmp
pop
adc
push
cs
adc
aas
jb
inc
inc
sbb
and
adc
sbb
por
add
inc
fistp
pop
icebp
(bad)
xlat
mov
stos
call
push
int3
xchg
les
ds
mov
and
jl
inc
pop
mov
loopne
sub
int3
mov
and
int3
rol
sub
cld
jl
ss
adc
test
clc
loopne
add
pop
mov
jl
add
xchg
mov
add
or
sbb
iret
and
movs
ror
cmp
or
sub
js
inc
and
xchg
xchg
inc
add
xor
xor
sti
(bad)
or
add
pushf
aaa
cmp
ret
mov
ret
mov
mov
xor
inc
mov
inc
add
sbb
les
(bad)
clc
adc
inc
out
or
add
jns
sbb
loopne
push
and
(bad)
rol
enter
pop
rol
adc
dec
sbb
adc
pop
add
and
inc
add
and
cmp
clc
rol
inc
add
adc
and
xor
add
mov
sbb
pusha
ret
sub
nop
add
and
and
adc
cld
mov
add
sbb
inc
adc
push
pusha
inc
push
push
lock
push
fs
push
mul
xchg
loop
enter
aam
xor
sbb
rol
rol
clc
and
inc
or
cld
icebp
mov
mov
sbb
mov
dec
cmp
push
ins
pop
inc
and
xor
pop
jle
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
add
inc
add
and
mov
jnp
pminsw
arpl
js
mov
xor
in
fst
fisttp
arpl
jno
sub
add
push
xor
out
test
in
repnz
xchg
xor
dec
ret
pop
inc
sub
aaa
push
pop
mov
mov
dec
mov
fsubr
movs
adc
add
push
cmp
inc
pop
xchg
pop
push
push
push
fmul
shl
fsub
xchg
and
std
sub
push
dec
cmps
sub
clc
movs
sub
add
mov
dec
push
mov
pop
or
push
xlat
jbe
sub
inc
xor
out
or
add
add
pop
push
and
sub
nop
dec
loopne
adc
inc
xor
bound
mov
fadd
jg
aam
mov
pop
add
ins
mov
daa
aaa
movs
inc
push
push
ds
pop
or
add
push
xor
test
adc
add
xadd
dec
or
in
jb
and
cmp
addr16
and
lds
jl
mov
jae
add
rol
dec
xor
test
inc
jns
inc
ret
cmp
ret
and
(bad)
jbe
loopne
and
cmp
and
sub
push
fadd
bound
push
arpl
add
sbb
jnp
xchg
(bad)
sbb
call
movs
add
push
cwde
neg
jo
adc
xchg
jecxz
or
enter
jnp
repz
addr16
or
test
sbb
sbb
add
adc
adc
into
or
and
and
jp
repnz
mov
jmp
or
sbb
pop
sub
and
call
pop
jp
push
iret
sub
mov
leave
pushf
inc
pop
or
movs
mul
inc
enter
xor
or
mov
xor
xor
test
cmp
xor
jae
xor
adc
ret
sbb
pop
test
inc
mov
sbb
adc
or
xor
dec
sbb
in
rol
dec
pop
in
and
mov
adc
rol
imul
lock
or
sbb
and
inc
push
push
sbb
or
mov
mov
repz
add
push
call
popf
and
xor
fild
xchg
mov
pop
rol
jecxz
jae
xor
pop
and
test
cmp
(bad)
shl
add
test
jae
adc
mov
call
dec
punpckhwd
lock
mov
je
retf
sbb
or
les
add
mov
lods
dec
sub
call
fadd
adc
sbb
and
add
and
add
mov
cmp
inc
jo
sub
cmp
inc
add
and
add
add
mov
icebp
and
sub
adc
cmp
cs
add
pop
jl
inc
or
sbb
cmp
in
loope
xor
add
mov
sbb
push
rcl
pop
mov
sbb
nop
loop
pop
lock
mov
arpl
sar
inc
out
enter
adc
and
xor
cmp
cs
sub
loopne
sbb
inc
adc
push
cmp
lock
push
mov
jg
ret
mov
xor
add
pushf
xchg
lock
adc
dec
adc
mov
das
pushf
adc
pop
popa
adc
add
sub
sub
pop
mov
movhps
bound
mov
add
lock
add
add
adc
mov
loope
or
push
add
pop
cmp
call
or
stc
add
jno
xor
add
add
and
pop
adc
push
or
add
ficom
ret
or
add
(bad)
push
jo
push
aaa
mov
and
xor
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
add
shl
or
fadd
mov
or
inc
cmps
jg
sub
inc
lock
dec
cmp
xchg
cmp
xchg
dec
sbb
dec
fld
test
push
adc
xchg
out
ror
inc
and
adc
and
mov
aas
mov
inc
sbb
mov
cmps
aas
sub
clc
and
push
lods
popa
add
mov
inc
pop
loopne
cld
inc
test
shl
sbb
sete
mov
adc
and
inc
add
call
xchg
inc
mov
and
ret
add
inc
cmps
mov
je
add
xor
add
xor
(bad)
aas
or
inc
inc
pop
xor
daa
pusha
xchg
cmps
mov
pusha
push
daa
daa
ret
pop
mov
test
ret
outs
sbb
sub
add
sti
retf
loope
test
adc
dec
lods
test
add
sbb
les
into
movs
loopne
and
or
add
adc
cmp
adc
dec
pop
test
cmovg
mov
add
or
add
sbb
dec
and
mov
fcmovbe
popf
test
cmp
mov
xor
or
inc
or
mov
adc
add
inc
or
sub
iret
or
cmp
lahf
add
add
sbb
or
psubsb
adc
cwde
rol
pop
mov
pop
loope
es
and
idiv
add
sub
lahf
sbb
adc
inc
add
les
and
inc
call
add
test
fsubrp
inc
xor
not
enter
loopne
or
cmps
scas
or
(bad)
jle
xor
cwde
xor
or
aam
dec
adc
xchg
popa
mov
xchg
push
repz
mov
inc
cli
xchg
loop
sbb
sub
push
seto
add
add
test
or
mov
xor
mov
mov
add
jno
mov
xchg
out
cli
pop
jno
cwde
xor
fistp
inc
or
push
inc
add
cli
inc
push
stos
add
cmp
sete
add
dec
test
(bad)
and
adc
mov
inc
pop
adc
inc
cmpxchg
mov
loop
sub
hlt
mov
adc
pusha
inc
pop
pop
cmp
pop
adc
push
cs
adc
aas
jb
inc
inc
sbb
and
adc
sbb
por
add
inc
fistp
pop
icebp
(bad)
xlat
mov
stos
call
push
int3
xchg
les
ds
mov
and
jl
inc
pop
mov
loopne
sub
int3
mov
and
int3
rol
sub
cld
jl
ss
adc
test
clc
loopne
add
pop
mov
jl
add
xchg
mov
add
or
sbb
iret
and
movs
ror
cmp
or
sub
js
inc
and
xchg
xchg
inc
add
xor
xor
sti
(bad)
or
add
pushf
aaa
cmp
ret
mov
ret
mov
mov
xor
inc
mov
inc
add
sbb
les
(bad)
clc
adc
inc
out
or
add
jns
sbb
loopne
push
and
(bad)
rol
enter
pop
rol
adc
dec
sbb
adc
pop
add
and
inc
add
and
cmp
clc
rol
inc
add
adc
and
xor
add
mov
sbb
pusha
ret
sub
nop
add
and
and
adc
cld
mov
add
sbb
inc
adc
push
pusha
inc
push
push
lock
push
fs
push
mul
xchg
loop
enter
aam
xor
sbb
rol
rol
clc
and
inc
or
cld
icebp
mov
mov
sbb
mov
dec
cmp
push
ins
pop
inc
and
xor
pop
jle
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
add
inc
add
and
mov
jnp
pminsw
arpl
js
mov
xor
in
fst
fisttp
arpl
jno
sub
add
push
xor
out
test
in
repnz
xchg
xor
dec
ret
pop
inc
sub
aaa
push
pop
mov
mov
dec
mov
fsubr
movs
adc
add
push
cmp
inc
pop
xchg
pop
push
push
push
fmul
shl
fsub
xchg
and
std
sub
push
dec
cmps
sub
clc
movs
sub
add
mov
dec
push
mov
pop
or
push
xlat
jbe
sub
inc
xor
out
or
add
add
pop
push
and
sub
nop
dec
loopne
adc
inc
xor
bound
mov
fadd
jg
aam
mov
pop
add
ins
mov
daa
aaa
movs
inc
push
push
ds
pop
or
add
push
xor
test
adc
add
xadd
dec
or
in
jb
and
cmp
addr16
and
lds
jl
mov
jae
add
rol
dec
xor
test
inc
jns
inc
ret
cmp
ret
and
(bad)
jbe
loopne
and
cmp
and
sub
push
fadd
bound
push
arpl
add
sbb
jnp
xchg
(bad)
sbb
call
movs
add
push
cwde
neg
jo
adc
xchg
jecxz
or
enter
jnp
repz
addr16
or
test
sbb
sbb
add
adc
adc
into
or
and
and
jp
repnz
mov
jmp
or
sbb
pop
sub
and
call
pop
jp
push
iret
sub
mov
leave
pushf
inc
pop
or
movs
mul
inc
enter
xor
or
mov
xor
xor
test
cmp
xor
jae
xor
adc
ret
sbb
pop
test
inc
mov
sbb
adc
or
xor
dec
sbb
in
rol
dec
pop
in
and
mov
adc
rol
imul
lock
or
sbb
and
inc
push
push
sbb
or
mov
mov
repz
add
push
call
popf
and
xor
fild
xchg
mov
pop
rol
jecxz
jae
xor
pop
and
test
cmp
(bad)
shl
add
test
jae
adc
mov
call
dec
punpckhwd
lock
mov
je
retf
sbb
or
les
add
mov
lods
dec
sub
call
fadd
adc
sbb
and
add
and
add
mov
cmp
inc
jo
sub
cmp
inc
add
and
add
add
mov
icebp
and
sub
adc
cmp
cs
add
pop
jl
inc
or
sbb
cmp
in
loope
xor
add
mov
sbb
push
rcl
pop
mov
sbb
nop
loop
pop
lock
mov
arpl
sar
inc
out
enter
adc
and
xor
cmp
cs
sub
loopne
sbb
inc
adc
push
cmp
lock
push
mov
jg
ret
mov
xor
add
pushf
xchg
lock
adc
dec
adc
mov
das
pushf
adc
pop
popa
adc
add
sub
sub
pop
mov
movhps
bound
mov
add
lock
add
add
adc
mov
loope
or
push
add
pop
cmp
call
or
stc
add
jno
xor
add
add
and
pop
adc
push
or
add
ficom
ret
or
add
(bad)
push
jo
push
aaa
mov
and
xor
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
xchg
add
shl
or
fadd
mov
or
inc
cmps
jg
sub
inc
lock
dec
cmp
xchg
cmp
xchg
dec
sbb
dec
fld
test
push
adc
xchg
out
ror
inc
and
adc
and
mov
aas
mov
inc
sbb
mov
cmps
aas
sub
clc
and
push
lods
popa
add
mov
inc
pop
loopne
cld
inc
test
shl
sbb
sete
mov
adc
and
inc
add
call
xchg
inc
mov
and
ret
add
inc
cmps
mov
je
add
xor
add
xor
(bad)
aas
or
inc
inc
pop
xor
daa
pusha
xchg
cmps
mov
pusha
push
daa
daa
ret
pop
mov
test
ret
outs
sbb
sub
add
sti
retf
loope
test
adc
dec
lods
test
add
sbb
les
into
movs
loopne
and
or
add
adc
cmp
adc
dec
pop
test
cmovg
mov
add
or
add
sbb
dec
and
mov
fcmovbe
popf
test
cmp
mov
xor
or
inc
or
mov
adc
add
inc
or
sub
iret
or
cmp
lahf
add
add
sbb
or
psubsb
adc
cwde
rol
pop
mov
pop
loope
es
and
idiv
add
sub
lahf
sbb
adc
inc
add
les
and
inc
call
add
test
fsubrp
inc
xor
not
enter
loopne
or
cmps
scas
or
(bad)
jle
xor
cwde
xor
or
aam
dec
adc
xchg
popa
mov
xchg
push
repz
mov
inc
cli
xchg
loop
sbb
sub
push
seto
add
add
test
or
mov
xor
mov
mov
add
jno
mov
xchg
out
cli
pop
jno
cwde
xor
fistp
inc
or
push
inc
add
cli
inc
push
stos
add
cmp
sete
add
dec
test
(bad)
and
adc
mov
inc
pop
adc
inc
cmpxchg
mov
loop
sub
hlt
mov
adc
pusha
inc
pop
pop
cmp
pop
adc
push
cs
adc
aas
jb
inc
inc
sbb
and
adc
sbb
por
add
inc
fistp
pop
icebp
(bad)
xlat
mov
stos
call
push
int3
xchg
les
ds
mov
and
jl
inc
pop
mov
loopne
sub
int3
mov
and
int3
rol
sub
cld
jl
ss
adc
test
clc
loopne
add
pop
mov
jl
add
xchg
mov
add
or
sbb
iret
and
movs
ror
cmp
or
sub
js
inc
and
xchg
xchg
inc
add
xor
xor
sti
(bad)
or
add
pushf
aaa
cmp
ret
mov
ret
mov
mov
xor
inc
mov
inc
add
sbb
les
(bad)
clc
adc
inc
out
or
add
jns
sbb
loopne
push
and
(bad)
rol
enter
pop
rol
adc
dec
sbb
adc
pop
add
and
inc
add
and
cmp
clc
rol
inc
add
adc
and
xor
add
mov
sbb
pusha
ret
sub
nop
add
and
and
adc
cld
mov
add
sbb
inc
adc
push
pusha
inc
push
push
lock
push
fs
push
mul
xchg
loop
enter
aam
xor
sbb
rol
rol
clc
and
inc
or
cld
icebp
mov
mov
sbb
mov
dec
cmp
push
ins
pop
inc
and
xor
pop
jle
adc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
rol
rol
rol
or
lgdtd
dec
add
add
popa
xor
sbb
or
add
dec
add
ins
je
add
dec
add
inc
dec
inc
cmp
popa
add
add
inc
(bad)
fld
(bad)
loope
sti
int3
mov
ins
adc
mov
mov
(bad)
(bad)
sub
add
rol
mov
add
cs
add
cdq
pop
call
add
les
push
dec
and
std
add
add
cmps
add
rcl
dec
lea
js
mov
(bad)
fstp
out
retf
inc
add
xlat
sbb
sti
jmp
cmps
js
push
add
xchg
add
add
cmc
add
shr
sbb
jmp
(bad)
hlt
test
mov
(bad)
jmp
mov
mov
sahf
add
mov
fmul
adc
neg
int3
adc
aaa
add
out
add
icebp
jne
test
lea
fld
cdq
ret
cmps
jp
mov
mov
add
lods
add
lea
mov
jp
test
(bad)
out
mov
div
std
dec
or
(bad)
jmp
(bad)
std
clc
scas
cli
std
(bad)
cld
cld
(bad)
(bad)
hlt
push
dec
add
call
lock
repz
(bad)
inc
xchg
add
mov
mov
add
movs
add
fidivr
test
mov
rcl
test
cli
scas
add
jg
cld
in
fistp
(bad)
cmps
push
(bad)
scas
and
mov
rcl
loope
out
clc
clc
stc
(bad)
fisttp
retf
or
(bad)
mov
std
icebp
adc
mov
out
hlt
(bad)
inc
or
out
(bad)
xchg
adc
mov
fnstsw
add
or
cwde
push
rep
add
lahf
add
ror
sar
cli
in
movs
hlt
mov
(bad)
mov
push
add
imul
test
stos
scas
mov
in
stos
xchg
jge
(bad)
repnz
ds
(bad)
in
enter
jmp
jmp
(bad)
stc
or
out
cmc
loop
(bad)
not
clc
cli
dec
cmps
pop
iret
push
daa
shr
rcl
sub
lahf
adc
sti
sti
in
retf
ret
or
pop
jmp
or
pop
(bad)
out
(bad)
mov
mov
xchg
sar
lock
mov
repnz
(bad)
adc
int3
add
into
or
lock
in
add
cdq
adc
mov
repz
pushf
inc
pop
(bad)
(bad)
stc
movs
imul
in
loopne
or
lods
adc
(bad)
cld
out
mov
rol
cld
icebp
add
cmp
add
fsub
lods
add
mov
sti
test
repnz
or
jns
lock
cld
(bad)
add
mov
ret
sahf
jle
mov
repz
xchg
adc
mov
(bad)
mov
fbld
mov
loope
sbb
popf
mov
in
in
lock
movs
nop
sti
fld
(bad)
adc
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
cmp
dec
mov
shl
out
sub
xor
mov
lahf
inc
ins
mov
mov
mov
imul
pop
fadd
popa
or
scas
mov
xor
rol
or
sbb
dec
bound
add
mov
fsub
lea
pop
jmp
in
pop
jle
sbb
mov
popa
outs
add
cmc
daa
sbb
mov
xchg
mov
jl
inc
sbb
pop
mov
scas
add
call
in
add
cmp
popa
push
movs
rcr
mov
mov
push
sub
jb
cmps
movs
pusha
dec
inc
ins
and
pop
or
in
and
cli
adc
shl
rol
or
mov
mov
dec
jmp
add
add
mov
xchg
bswap
adc
mov
mov
test
loopne
adc
sbb
add
ins
mov
pop
pusha
jg
or
jg
jl
and
data16
aas
pop
pusha
mov
bound
adc
ret
aaa
dec
call
add
mov
mov
icebp
lahf
aas
fbld
enter
bound
inc
xor
sbb
sub
icebp
inc
or
sbb
inc
xor
inc
or
xor
rcr
in
enter
jno
and
les
jae
aaa
fst
dec
xor
add
inc
cmp
jo
and
iret
inc
adc
call
dec
xor
xor
addr16
add
or
popa
sbb
movs
inc
xchg
and
popa
dec
sub
les
and
xchg
mov
cdq
bound
or
inc
daa
dec
ffree
inc
add
add
xor
jae
jo
das
imul
or
je
imul
sub
sbb
push
sub
or
add
pushf
pop
and
outs
mov
or
cmp
cmps
sub
xchg
add
leave
les
adc
push
add
push
sbb
stos
pop
and
add
or
cmps
pop
mov
loopne
and
fs
add
add
sbb
inc
add
nop
ret
stos
xor
jo
mov
scas
test
mov
fisttp
mov
xchg
mov
popa
inc
ds
sbb
cmps
sub
xor
adc
adc
mov
sbb
adc
or
or
sbb
ret
loop
mov
ret
mov
rcr
or
outs
cmps
mov
(bad)
(bad)
add
dec
add
add
add
adc
xor
mov
(bad)
stc
cmps
sar
iret
mov
lock
and
lahf
test
sub
xor
mov
adc
inc
and
clc
push
mov
inc
lock
inc
popf
sar
xor
(bad)
out
add
jns
jg
add
push
hlt
inc
cmovbe
sub
and
mov
jp
jmp
mov
jl
add
bound
out
rol
mov
wrmsr
mov
pop
and
jmp
rol
or
pop
cwde
imul
mov
push
sahf
(bad)
jl
inc
or
test
pop
and
adc
dec
jno
push
add
or
mov
and
loopne
mov
(bad)
xor
lds
jb
jmp
adc
js
push
cs
mov
xchg
cwde
pop
and
mov
jae
mov
mov
(bad)
div
add
sub
adc
ret
adc
xor
add
add
lock
outs
mov
xgetbv
sub
mov
gs
call
test
mov
mov
ret
sub
inc
mov
add
sub
mov
les
jp
pop
inc
fsub
sub
test
hlt
mov
cmp
or
or
add
add
push
cmp
push
and
popf
dec
and
enter
cmc
jmp
cmp
add
dec
and
add
and
rol
je
ror
mov
push
call
nop
add
in
mov
add
jb
add
loopne
add
and
adc
test
adc
add
dec
fs
icebp
xor
inc
(bad)
jnp
add
cmc
push
push
cmp
loopne
cmp
loopne
inc
aam
add
dec
or
out
movs
push
add
or
retf
cmp
or
mov
or
lods
addr16
pop
or
adc
cmp
aam
pop
add
inc
xor
(bad)
mov
sbb
push
sub
add
nop
test
rcr
cmp
inc
push
in
pop
mov
adc
popa
add
add
(bad)
or
inc
xchg
add
pop
mov
mov
(bad)
dec
add
clc
shr
stos
and
push
or
jno
and
pop
pop
call
push
je
dec
adc
mov
jl
gs
and
popa
push
or
add
cmps
mov
inc
(bad)
mov
add
clc
add
lock
sbb
adc
mov
shl
xor
inc
push
ret
loopne
call
mov
lds
mov
mov
aaa
push
rol
push
rcr
dec
pop
cmp
add
mov
mov
lea
aam
dec
cld
sbb
inc
xlat
fcmovnu
sub
sahf
(bad)
sbb
pusha
push
lock
shl
xchg
(bad)
or
shl
fsub
inc
enter
inc
arpl
aas
popa
or
pusha
jecxz
dec
or
enter
fwait
loope
and
mov
fdiv
push
inc
mov
enter
pusha
xchg
(bad)
jp
inc
or
jl
add
jo
mov
shr
mov
pusha
(bad)
xor
mov
loope
fwait
jge
sbb
sbb
popf
imul
jbe
add
(bad)
loopne
inc
inc
rol
jb
ret
ss
or
jecxz
popa
rol
inc
out
(bad)
outs
or
xor
adc
pop
pop
xor
push
fsub
push
in
test
adc
mov
sub
in
inc
mov
adc
xchg
push
inc
pop
sbb
push
push
adc
mov
inc
adc
inc
sub
nop
push
sub
sub
mov
adc
adc
xchg
mov
mov
sub
dec
loope
mov
mov
sbb
loopne
jbe
mov
inc
sbb
adc
push
inc
rol
inc
add
push
(bad)
and
mov
call
xor
mov
or
cmp
jle
sbb
add
pop
rol
icebp
dec
(bad)
out
pop
ja
sti
sbb
enter
sbb
cmp
shl
rol
shl
add
add
stc
add
or
inc
sub
add
add
add
inc
dec
sbb
mov
rol
and
ret
xchg
mov
and
push
sbb
cli
and
mov
or
xchg
dec
mov
mov
cmp
pusha
(bad)
mov
sbb
inc
loopne
cs
or
and
and
push
add
dec
enter
movs
push
pop
mov
ret
pusha
or
xor
cli
adc
loopne
stos
dec
(bad)
xor
(bad)
pop
push
stc
or
push
add
(bad)
cld
xchg
repnz
add
xchg
std
pop
and
or
sbb
sbb
call
into
or
pop
xchg
push
jno
cs
sub
adc
and
dec
pop
sbb
add
and
mov
loop
sbb
cmps
add
(bad)
mov
fisttp
pusha
add
or
jge
test
add
push
(bad)
in
push
loopne
or
ficom
and
dec
bound
push
add
les
data16
movs
dec
jno
idiv
rcl
add
pushf
push
inc
add
adc
or
adc
call
push
dec
xor
add
pop
movs
std
and
sub
in
add
pop
sbb
inc
lds
xor
shl
sahf
add
and
jmp
test
sbb
inc
outs
mov
cmp
movs
cmp
lea
cmp
(bad)
out
add
or
dec
cs
pop
bound
and
sbb
sub
in
test
xchg
push
xor
and
es
std
sub
sbb
inc
and
push
bound
aad
sbb
js
shl
or
pop
inc
push
pop
add
push
sub
and
retf
in
ret
xor
xor
inc
bound
or
fwait
inc
sbb
adc
rcr
es
add
add
dec
mov
adc
inc
push
and
adc
test
push
les
mov
es
inc
adc
push
add
lock
cmp
xlat
add
add
mov
or
sbb
popf
rol
dec
cs
sub
(bad)
or
pop
push
add
mov
inc
pop
cld
rcl
inc
xchg
and
pop
ror
es
cmp
mov
je
xor
test
dec
inc
(bad)
lods
call
push
test
inc
xor
lahf
and
sbb
movs
bound
pop
je
mov
mov
popa
inc
sbb
xor
xor
mov
mov
(bad)
shl
or
call
or
jmp
xor
xor
hlt
out
or
ret
xor
inc
loope
and
dec
ror
iret
je
inc
add
mov
jo
or
sahf
daa
je
addr16
or
cs
out
dec
shr
imul
data16
or
fild
adc
in
arpl
test
out
jb
mov
out
sbb
inc
adc
add
mov
adc
jmp
jmp
xlat
stc
inc
pop
mov
push
cdq
inc
jo
cmps
dec
pushf
and
sbb
sar
lock
loopne
add
inc
sbb
pop
lock
add
jg
iret
and
rol
pusha
test
push
stos
adc
sbb
and
test
inc
push
popf
jo
adc
(bad)
jnp
mov
inc
jmp
(bad)
mov
adc
sub
or
loopne
popf
cmp
or
dec
test
pop
gs
add
iret
cmp
adc
jmp
das
hlt
mov
cmp
fsub
push
push
sbb
dec
adc
repz
or
xor
test
sbb
sbb
and
add
cmp
std
jl
aas
div
ss
xchg
push
adc
out
shr
push
cld
and
mov
frstor
fs
dec
pop
xchg
mov
or
pop
loopne
and
inc
inc
and
outs
out
xchg
mov
or
mov
adc
or
and
inc
std
xor
js
movs
sbb
nop
dec
stos
in
pop
pop
or
or
cmp
dec
jo
cdq
inc
or
test
or
sbb
mov
pop
cmps
xor
xor
jg
add
in
retf
add
dec
push
(bad)
adc
sbb
and
ror
mov
push
or
call
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
test
jecxz
add
addr16
add
xchg
inc
(bad)
adc
fdiv
and
cld
mov
add
ins
es
in
bound
inc
lock
pushf
popf
test
add
les
sbb
movs
js
and
test
push
cli
loop
punpckhbw
or
sbb
cwde
(bad)
lock
sbb
popf
test
cmp
jo
inc
push
or
push
rcl
(bad)
jne
and
scas
mov
sbb
and
lea
xor
shl
add
xor
pusha
loope
pop
jp
mov
gs
or
pusha
push
xchg
push
xchg
pop
mov
add
inc
fs
pop
nop
nop
cdq
adc
mov
pop
iret
jl
nop
inc
dec
sub
jmp
or
sti
mov
or
sbb
jo
rcl
popa
addr16
gs
nop
daa
push
sub
rol
pusha
clc
hlt
leave
or
or
cmp
dec
sub
je
pop
gs
loope
(bad)
or
adc
and
inc
loope
fstp
daa
and
in
minsd
call
push
add
push
inc
sar
cmp
inc
sbb
or
adc
pop
push
loope
push
inc
or
inc
add
sbb
call
loopne
xchg
out
hlt
test
aas
sbb
inc
or
xor
add
add
ltr
xor
add
pop
gs
fdivr
and
inc
add
mov
mov
jle
loopne
or
jbe
aam
or
add
add
ror
int3
push
call
sub
je
mov
fidivr
xchg
fcom
mov
mov
inc
or
scas
pop
ror
cmps
test
sub
sub
adc
xchg
rol
mov
in
add
and
add
(bad)
add
sbb
push
inc
add
mov
mov
stos
les
test
pop
test
inc
add
movs
ror
test
sahf
test
(bad)
or
add
or
jl
outs
pop
or
fdivr
aas
add
lea
aaa
sbb
lock
pop
inc
add
sub
inc
inc
shr
cmp
pop
xchg
mov
or
mov
pop
pusha
imul
pop
repz
arpl
test
or
nop
pushf
pop
in
rol
inc
and
mov
iret
or
sbb
adc
es
jmp
(bad)
ror
pop
push
adc
xor
mov
dec
and
mov
imul
and
push
mov
dec
call
add
daa
loopne
sbb
clc
loope
aas
and
jecxz
push
rol
cmp
mov
xor
push
add
mov
mov
mov
xor
add
jo
icebp
ja
inc
lds
cmp
push
ret
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
ret
test
pop
cmp
icebp
cmovo
sbb
loopne
nop
adc
and
push
or
pop
mov
int3
inc
call
or
push
adc
inc
or
pop
mov
mov
xchg
inc
or
gs
add
call
push
sub
inc
shl
(bad)
mov
(bad)
xchg
outs
idiv
sub
test
push
mov
out
mov
out
popa
xor
das
(bad)
and
inc
dec
sahf
dec
enter
scas
pop
sub
out
lahf
sub
out
xor
scas
jo
test
fdivr
ret
das
push
or
xchg
(bad)
jecxz
inc
push
test
and
pusha
adc
add
dec
sar
add
push
adc
cwde
add
cld
or
jne
add
pop
sub
loope
adc
adc
cmps
adc
fist
std
add
push
or
add
xor
mov
cld
dec
pop
ror
(bad)
loopne
xor
push
rol
jl
add
daa
add
sbb
pop
je
add
add
sbb
pushf
xor
sbb
(bad)
add
xchg
or
or
push
xchg
xor
adc
xor
je
xor
leave
or
in
pop
mov
xchg
movs
ins
test
push
dec
or
je
inc
xor
jo
and
jb
nop
mov
lea
xor
int3
bound
or
rol
popf
das
jmp
xor
xor
cld
mov
lock
pop
cmp
xchg
or
and
sbb
and
xchg
call
cdq
inc
add
and
inc
aaa
jp
jp
or
call
shl
jle
xor
ss
push
inc
data16
ret
rcr
dec
retf
add
fs
jl
push
mov
or
xchg
and
add
rol
out
pushf
icebp
xor
add
xor
push
jmp
call
je
(bad)
xor
or
sbb
(bad)
cmp
mov
jmp
cmp
push
add
movs
rcl
add
test
inc
ficom
mov
or
cmp
sub
mov
push
sub
push
xor
or
inc
and
je
movs
shl
add
sbb
push
nop
lds
cld
(bad)
(bad)
movs
popa
inc
or
rol
sbb
sbb
inc
or
(bad)
aas
dec
sub
mov
ins
push
mov
pusha
loopne
add
add
fcomp
jecxz
ss
mov
xchg
sti
cmc
push
mov
loope
fdivr
in
xlat
pop
sti
ret
inc
and
xor
add
pop
loopne
(bad)
dec
cmp
push
test
pop
je
aaa
or
dec
or
outs
into
mov
les
add
mov
cmp
jg
rcl
sbb
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
and
rcr
sbb
pushf
dec
add
or
add
jp
clc
loop
test
push
or
mov
mov
lea
push
adc
xor
fnstsw
shl
pushf
ror
cld
add
add
adc
add
xor
pop
in
stos
jg
js
xor
sar
call
inc
loopne
dec
mov
jnp
add
xor
stos
xchg
dec
push
and
add
fisub
mov
fmul
xchg
test
mov
push
mov
lods
adc
and
mov
nop
bound
ds
push
and
push
in
daa
dec
cmp
in
imul
and
and
aad
shl
add
loope
cmps
enter
lock
pop
(bad)
popa
das
enter
cmp
cli
lahf
aaa
add
jmp
not
out
xchg
adc
je
ret
xor
mov
inc
push
lods
inc
push
sub
lock
daa
and
add
xchg
fisttp
dec
repz
adc
and
rol
adc
push
enter
ret
(bad)
daa
and
inc
ret
aad
(bad)
and
sbb
push
and
pop
pop
push
loopne
js
mov
les
shl
js
adc
and
lea
pop
push
loope
push
inc
or
inc
add
xor
pop
test
mov
mov
inc
pop
test
jo
add
add
inc
lds
add
xor
mov
js
xor
clc
add
and
inc
add
push
push
pop
inc
cmp
loopne
or
adc
les
jmp
loopne
sub
adc
add
test
and
sbb
mov
or
popf
sub
mov
push
mov
mov
int3
mov
mov
add
sbb
ins
fsub
push
lods
pop
sub
sub
retf
stos
test
push
xor
or
push
or
enter
ret
sbb
cli
adc
sub
dec
test
jo
aas
out
sti
dec
sub
je
fld
or
je
add
adc
daa
sub
sbb
inc
add
sbb
inc
add
je
lock
popf
std
inc
icebp
add
(bad)
sbb
movs
es
fsub
js
or
jecxz
adc
dec
outs
(bad)
mov
pop
int3
add
mov
pop
mov
adc
sub
out
sbb
pop
in
rol
inc
and
mov
iret
or
sbb
adc
gs
mov
test
xor
arpl
in
add
fadd
(bad)
xor
fidivr
aas
cmp
sub
mov
xchg
push
xor
mov
sub
mov
dec
adc
add
pushf
nop
movs
xchg
jge
in
aas
and
call
or
(bad)
push
inc
cmp
rol
ret
or
add
add
or
or
pop
or
add
or
je
xchg
push
or
test
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
shl
sbb
cmps
loope
mov
ror
les
or
loope
mov
add
lahf
cwde
test
add
pop
xchg
adc
call
push
and
add
pop
loope
add
retf
movs
mov
push
stos
inc
and
push
cmp
cmps
push
xchg
loopne
push
movs
dec
fwait
sub
mov
pusha
cmp
sub
sub
ins
iret
jb
rol
cdq
les
dec
lahf
jno
je
loopne
loope
add
add
test
jne
js
dec
nop
mov
cld
push
mov
add
cs
test
in
mov
mov
adc
hlt
call
lds
(bad)
sub
pop
add
push
nop
or
adc
inc
ss
pop
bound
arpl
ret
fisttp
push
(bad)
cmp
daa
jle
or
jne
add
pop
add
push
adc
xchg
mov
lods
cld
(bad)
push
add
sbb
ret
and
inc
or
or
jne
mov
adc
(bad)
aas
and
loopne
inc
add
ror
sbb
mov
and
xchg
mov
adc
aas
push
or
inc
or
je
prefetch
jo
xor
leave
or
int
scas
pop
ror
es
nop
or
adc
mov
add
or
pop
pushf
and
add
mov
add
or
rol
inc
or
push
add
popa
enter
shl
rcl
xor
call
cmp
lds
add
test
daa
or
or
pushf
xor
iret
pop
mov
je
sub
test
ins
ret
stos
stos
and
stos
inc
shl
pusha
cmp
adc
ret
test
test
add
mov
adc
fbstp
or
fistp
leave
or
pusha
pusha
ret
mov
aam
scas
inc
cmp
inc
or
dec
jp
adc
dec
sub
call
push
ja
inc
xor
arpl
aas
sub
xor
shl
or
lea
test
add
inc
pop
xchg
lods
call
and
bndstx
push
pop
add
pop
add
aam
pop
cmp
mov
add
adc
xchg
pop
jle
or
inc
add
jne
xchg
jne
or
xor
add
aas
(bad)
sub
shl
mov
mov
xchg
mov
add
cs
loopne
add
(bad)
shl
push
jecxz
ss
mov
xchg
bound
clc
push
movs
and
je
jecxz
push
inc
xor
cwde
jo
mov
sub
test
les
sub
and
pusha
jae
stos
ret
scas
mov
adc
mov
shl
cmp
or
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
inc
loope
sbb
ins
loopne
dec
push
popa
test
sub
sbb
ins
loopne
mov
and
or
sbb
xchg
scas
jg
mov
lea
add
inc
clc
push
or
push
fiadd
and
ret
add
add
sub
jmp
dec
test
dec
nop
lock
lods
inc
jg
push
hlt
xor
pop
loopne
popa
push
pop
sbb
es
fistp
dec
jb
adc
and
cmps
cmp
mov
lahf
mov
and
mov
sbb
test
adc
shr
push
add
std
mov
pop
arpl
mov
cmps
push
push
inc
nop
(bad)
jg
into
and
jnp
(bad)
rcr
xchg
pop
sub
push
mov
imul
inc
lds
adc
icebp
push
call
mov
shl
xchg
dec
dec
cmps
pop
loope
inc
xchg
das
jle
mov
cmp
or
mov
shl
cmp
add
bound
mov
int
push
sbb
and
rol
adc
push
dec
and
ins
xor
xchg
mov
add
popf
or
nop
jb
cli
ret
xchg
or
xchg
and
add
sbb
rol
xor
inc
dec
dec
jecxz
pop
push
cmp
adc
add
jmp
inc
(bad)
sub
call
push
in
pop
es
add
add
add
cmovle
nop
adc
add
or
shl
cmp
test
add
sub
add
mov
inc
xor
clc
adc
add
clc
xor
(bad)
aas
push
enter
sub
add
dec
dec
mov
cmp
xor
leave
xor
js
stos
inc
lds
add
(bad)
shl
bound
jb
daa
dec
mov
or
push
movs
test
test
sbb
sar
sub
mov
push
add
pop
add
or
pop
je
or
push
inc
add
mov
mov
dec
nop
adc
add
add
inc
add
movs
ror
and
pushf
jno
sbb
xor
adc
or
inc
pushf
outs
add
je
xor
or
icebp
(bad)
pop
fs
or
sahf
push
add
push
inc
mov
loope
sub
sub
jmp
in
in
movs
mov
movs
sar
add
rol
loopne
shl
(bad)
or
cld
xchg
loope
movs
loopne
sbb
pop
in
rol
outs
and
mov
iret
or
sbb
and
es
sbb
or
rcr
adc
pop
mov
mov
dec
jnp
stc
std
(bad)
push
sbb
ret
and
or
movs
dec
or
xchg
call
add
daa
mov
clc
shl
aas
and
jmp
(bad)
push
inc
cmp
rol
ret
or
add
add
retf
mov
mov
sbb
rol
push
ja
jg
and
add
sbb
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
inc
test
push
popa
or
fsubr
les
adc
lock
sub
adc
ss
or
mov
mov
dec
nop
mov
das
jle
adc
ret
aas
xchg
or
std
stos
push
ins
add
stos
add
add
inc
fmul
inc
jle
ins
xchg
and
or
push
mov
push
push
cdq
mov
popa
and
inc
adc
ss
aas
mov
jmp
clc
push
xchg
sbb
ins
scas
cmp
or
inc
mov
repz
inc
loope
push
add
push
pusha
adc
add
bound
clc
test
inc
test
call
adc
loopne
test
cmp
sub
js
pop
adc
add
push
shl
lods
cs
pop
loope
pop
push
stos
cld
pushf
dec
sub
dec
mov
sbb
add
ins
lds
jge
aas
push
jp
icebp
dec
or
mov
cmp
iret
and
add
aad
add
aas
rcr
add
popa
push
pushf
push
nop
push
lahf
or
ror
sbb
mov
and
xchg
mov
xchg
adc
add
gs
in
or
add
ror
sub
jo
xor
leave
or
int
scas
pop
ror
inc
loope
js
pusha
pop
inc
test
or
xor
jo
xor
pusha
sub
lea
repnz
inc
or
rol
push
or
push
add
popa
enter
shl
repnz
xor
adc
or
test
inc
add
pop
lock
or
pushf
popa
xchg
xor
rcr
fstp
cmp
sub
cli
fdiv
test
jmp
xor
fsub
dec
adc
pop
sub
fldcw
add
add
inc
ss
pop
mov
xor
rol
or
pusha
pusha
ret
je
lea
daa
int3
imul
inc
or
test
xor
add
mov
ret
je
(bad)
xor
or
fdivr
cmp
mov
call
cmp
push
add
movs
xchg
push
jae
or
mov
(bad)
and
bound
movs
cld
movhps
cwde
push
mov
xor
cmc
lods
inc
add
xchg
add
xor
rcr
sub
dec
sbb
mov
adc
add
adc
sbb
ds
(bad)
aas
dec
sub
mov
ins
push
mov
cmp
popa
mov
or
sub
outs
loope
sbb
(bad)
aaa
push
or
sti
ret
inc
and
fs
pop
or
(bad)
dec
cmp
xor
in
push
push
cmp
shr
jp
sub
test
cli
inc
scas
out
mov
fsubrp
xchg
jmp
cmp
sub
iret
xchg
inc
dec
inc
sbb
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
jo
ret
and
pop
push
xchg
mov
xchg
loop
inc
jle
(bad)
xchg
rol
out
and
add
mov
test
std
xchg
and
inc
test
pop
jmp
outs
jmp
cld
xchg
in
mov
stc
mov
cmps
inc
cs
sbb
mov
add
inc
xlat
pop
cwde
push
push
push
stos
inc
test
mov
repnz
sar
add
es
and
mov
push
sar
push
push
daa
shl
xchg
push
(bad)
inc
or
cld
sti
retf
fst
sbb
rcl
dec
jle
pop
jo
loope
inc
leave
stos
jle
retf
inc
cli
lahf
ins
sbb
adc
scas
lea
cs
mov
mov
je
cmp
dec
dec
cmp
xor
xor
jmp
and
mov
(bad)
pusha
and
mov
loope
daa
daa
dec
xor
sub
sbb
or
and
aad
or
and
jb
xor
daa
and
inc
repz
imul
push
inc
pushf
mov
add
inc
push
mov
adc
or
push
pop
sbb
inc
or
mov
inc
test
js
and
xor
add
add
mov
jp
jae
inc
(bad)
jo
add
add
mov
lldt
mov
lea
or
or
int3
test
add
sub
add
rol
clc
adc
ret
lock
inc
adc
test
sbb
aam
add
xor
movs
and
sbb
mov
or
popf
sub
xor
and
mov
in
inc
xchg
and
and
or
add
sub
je
loop
sbb
dec
cwde
nop
retf
adc
dec
pop
stos
test
push
xor
or
push
je
inc
xchg
cwde
inc
enter
ja
pop
xor
jo
sbb
adc
add
test
loopne
add
add
or
add
ret
test
inc
aaa
xor
adc
ins
mov
inc
mov
or
jl
out
mov
and
sar
pop
fs
or
adc
fsub
js
or
jecxz
adc
mov
adc
sar
ret
daa
inc
loopne
or
lods
popf
int3
jno
xor
mov
mov
or
add
cdq
lds
pop
mov
xor
ret
adc
and
and
gs
mov
mov
xor
arpl
in
adc
loop
mov
xor
jnp
ret
lods
add
jb
mov
popf
sub
add
rol
aaa
sar
cwde
add
adc
imul
leave
loope
inc
sbb
mov
sbb
inc
sbb
xchg
ins
and
or
data16
or
jl
xchg
bound
pop
daa
mov
rol
cmp
and
sbb
push
adc
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
mov
ror
pop
adc
inc
add
xor
aaa
mov
mov
int3
pop
or
add
jo
cmp
aas
jg
stc
icebp
sti
cmps
out
dec
and
inc
sub
add
cmp
jg
xchg
dec
lock
xchg
inc
sbb
outs
(bad)
repz
pop
adc
and
xchg
dec
or
clc
xor
jp
cmp
inc
or
xchg
fwait
cmps
jmp
pop
add
adc
(bad)
lods
sub
mov
aaa
sub
outs
ror
jmp
jg
(bad)
mov
mov
pusha
push
ds
push
iret
je
mov
push
mov
mov
aam
sar
sub
and
or
enter
dec
cmps
fbstp
mov
out
pop
popf
popa
ins
aaa
(bad)
(bad)
iret
in
aas
adc
inc
or
inc
adc
test
mov
fwait
shr
jmp
rcr
sub
xor
rcl
cmp
shl
shl
popf
loope
invd
add
stc
add
or
inc
sub
add
xor
sub
add
inc
dec
sbb
mov
rol
mov
rcl
push
mov
cld
pop
push
inc
sub
mov
in
mov
mov
add
jle
aad
push
dec
cmp
sbb
xchg
mov
adc
out
mov
cli
retf
cwde
leave
retf
inc
sahf
push
jg
std
xchg
adc
inc
movq
and
or
mov
adc
push
(bad)
dec
push
push
or
hlt
mov
add
adc
inc
stos
call
call
inc
lock
and
mov
add
cmp
xor
aas
sbb
add
xor
shl
or
push
sub
loope
cwde
inc
and
hlt
sub
xchg
mov
pop
and
cmp
ss
aam
mov
add
ds
sti
fist
xor
and
inc
cmp
inc
jnp
mov
adc
fidivr
stos
mov
inc
mov
aad
xor
mov
push
shl
mov
inc
push
jmp
clc
dec
jl
jne
dec
cmp
pop
pop
jle
push
pop
dec
fst
pop
pop
mov
adc
add
push
adc
or
cwde
pop
and
add
and
xor
loopne
inc
loope
sub
push
ret
mov
loop
inc
mov
shl
push
add
add
cbw
add
mov
clc
pop
test
nop
pop
je
ret
mov
xor
or
pop
push
mov
jo
cmp
and
mov
test
adc
cmp
adc
pop
jbe
frstor
xor
jb
rol
adc
cmp
leave
or
xchg
dec
push
adc
add
mov
ins
mov
or
test
test
aaa
dec
test
(bad)
or
mov
and
sub
mov
push
dec
rcl
(bad)
pusha
xor
inc
ja
push
jo
aas
and
xor
mov
jmp
sub
push
movs
push
ins
sbb
sub
sub
cmp
adc
mov
in
in
mov
(bad)
repnz
inc
das
sar
pop
inc
adc
je
sbb
in
dec
mov
push
push
imul
mov
or
les
mov
cld
and
cmp
(bad)
hlt
and
cmp
and
aaa
mov
sti
call
(bad)
aam
xor
xor
sub
retf
ret
push
cs
stc
rol
cld
mov
icebp
enter
loopne
ror
adc
cmc
int3
xor
sbb
or
pusha
sbb
inc
or
rol
or
and
nop
add
dec
inc
adc
or
xchg
adc
inc
and
ss
and
or
cmp
dec
aas
ret
or
sub
push
or
add
adc
jecxz
xor
je
mov
dec
sbb
sbb
add
add
cmp
or
out
pop
push
rol
test
cs
ins
repz
in
les
neg
(bad)
repnz
mov
adc
ja
and
mov
je
push
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
adc
and
dec
mov
rol
jbe
pop
push
push
mov
stc
(bad)
out
mov
cld
xlat
mov
adc
rol
inc
dec
adc
push
test
pop
aas
test
mov
or
push
and
dec
repnz
fwait
xor
sub
sub
sub
adc
and
and
pop
or
not
ins
push
inc
xchg
(bad)
aad
cmp
test
std
out
and
movs
push
xchg
lock
mov
xor
or
or
pop
inc
jl
clc
adc
shr
jg
shl
sub
repz
mov
loopne
cmp
cs
jmp
adc
xchg
retf
test
pop
mov
sbb
and
bound
mov
lock
lods
add
test
test
and
and
add
or
inc
sub
add
add
add
add
or
add
or
lock
mov
add
sub
mov
dec
in
and
ins
pop
fsubr
jecxz
jbe
mul
pop
ret
adc
lock
adc
std
or
dec
mov
inc
in
mov
xchg
and
aaa
push
ret
or
inc
mov
cmps
sar
movs
icebp
outs
and
adc
popa
pusha
sar
clc
clc
jmp
pop
add
std
retf
mov
loopne
mov
adc
push
push
pop
sub
xchg
cmc
in
fstp
loop
fs
cld
add
inc
mov
test
(bad)
ins
or
ss
lds
dec
retf
ss
push
sbb
mov
dec
imul
push
or
pop
mov
pop
in
bound
bound
outs
mov
jp
xlat
sbb
jmp
mov
mov
xchg
ret
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcl
or
pop
pop
xor
or
mov
ret
push
repz
and
mov
dec
repnz
xor
inc
ret
push
or
(bad)
icebp
fst
add
leave
repnz
cdq
enter
or
add
push
rol
ins
cmps
adc
sub
clc
jmp
push
je
in
mov
add
sub
push
movs
xor
aam
clc
addr16
loopne
jg
fdivr
jp
jmp
mov
push
dec
retfw
popf
pop
mov
test
cmps
pop
pop
mov
jecxz
dec
int3
inc
xor
jns
mov
push
mov
add
hlt
xchg
mov
out
add
call
fcom
fsubr
or
in
mov
mov
ficomp
jl
add
inc
mov
ins
imul
ret
mov
mov
mov
add
out
test
jmp
cli
(bad)
loop
mov
xchg
repnz
iret
lahf
(bad)
aas
dec
add
adc
dec
inc
ins
les
sbb
sbb
ror
mov
cld
jecxz
inc
inc
cld
add
aas
add
dec
adc
pop
adc
rol
aas
add
push
cmp
or
(bad)
mov
adc
rdmsr
or
loope
sbb
movs
adc
add
mov
inc
mov
cld
pop
je
inc
pop
sbb
adc
addr16
mov
aas
pusha
mul
aas
inc
or
dec
add
xchg
or
pop
inc
add
or
cmps
and
push
or
aam
cmps
xchg
or
mov
xor
inc
add
js
repz
cmp
mov
js
int
popa
pusha
adc
sub
retf
add
inc
inc
pop
mov
fimul
mov
push
cmp
mov
xchg
sub
movs
or
mov
pop
or
cs
scas
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
push
sub
sub
lahf
shl
cs
mov
sar
fs
iret
rol
and
test
pop
das
adc
imul
xchg
mov
cmp
add
addr16
jne
out
pop
cmp
outs
hlt
and
mov
mov
adc
rcl
adc
pushf
test
xor
fwait
mov
nop
nop
fldenv
pop
mov
fistp
sbb
add
movs
pop
inc
js
cmp
sbb
pusha
and
pop
sbb
mov
dec
rol
es
mov
pop
scas
in
fcomp
jg
idiv
dec
das
pusha
dec
je
fs
lock
xchg
sbb
push
es
xchg
or
add
jne
retf
mov
adc
mov
inc
rcr
or
inc
and
sbb
sti
mov
call
das
dec
loopne
pusha
ins
jo
test
loope
aas
(bad)
sar
(bad)
jno
adc
(bad)
push
in
sar
aam
sub
rcr
dec
push
push
or
add
adc
sbb
aam
or
add
repz
cmp
adc
dec
xor
sbb
ret
sub
sbb
adc
inc
addr16
pop
push
aam
add
ror
cld
and
or
cmp
push
xor
fadd
xchg
jge
push
retf
sbb
sbb
push
ret
mov
ret
test
rcl
jne
xor
push
pop
adc
adc
jbe
jae
call
cmp
sub
call
rcr
xchg
js
les
je
fisubr
out
and
and
push
enter
and
inc
inc
push
call
dec
xor
test
inc
loopne
or
lea
cmps
jb
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcl
or
pop
pop
xor
or
mov
ret
push
repz
and
mov
dec
repnz
xor
inc
ret
push
or
(bad)
icebp
fst
add
leave
repnz
cdq
enter
or
add
push
rol
ins
cmps
adc
sub
clc
jmp
push
je
in
mov
add
sub
push
movs
xor
aam
clc
addr16
loopne
jg
fdivr
jp
jmp
mov
push
dec
retfw
popf
pop
mov
test
cmps
pop
pop
mov
jecxz
dec
int3
inc
xor
jns
mov
push
mov
add
hlt
xchg
mov
out
add
call
fcom
fsubr
or
in
mov
mov
ficomp
jl
add
inc
mov
ins
imul
ret
mov
mov
mov
add
out
test
jmp
cli
(bad)
loop
mov
xchg
repnz
iret
lahf
(bad)
aas
dec
add
adc
dec
inc
ins
les
sbb
sbb
ror
mov
cld
jecxz
inc
inc
cld
add
aas
add
dec
adc
pop
adc
rol
aas
add
push
cmp
or
(bad)
mov
adc
rdmsr
or
loope
sbb
movs
adc
add
mov
inc
mov
cld
pop
je
inc
pop
sbb
adc
addr16
mov
aas
pusha
mul
aas
inc
or
dec
add
xchg
or
pop
inc
add
or
cmps
and
push
or
aam
cmps
xchg
or
mov
xor
inc
add
js
repz
cmp
mov
js
int
popa
pusha
adc
sub
retf
add
inc
inc
pop
mov
fimul
mov
push
cmp
mov
xchg
sub
movs
or
mov
pop
or
cs
scas
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
push
sub
sub
lahf
shl
cs
mov
sar
fs
iret
rol
and
test
pop
das
adc
imul
xchg
mov
cmp
add
addr16
jne
out
pop
cmp
outs
hlt
and
mov
mov
adc
rcl
adc
pushf
test
xor
fwait
mov
nop
nop
fldenv
pop
mov
fistp
sbb
add
movs
pop
inc
js
cmp
sbb
pusha
and
pop
sbb
mov
dec
rol
es
mov
pop
scas
in
fcomp
jg
idiv
dec
das
pusha
dec
je
fs
lock
xchg
sbb
push
es
xchg
or
add
jne
retf
mov
adc
mov
inc
rcr
or
inc
and
sbb
sti
mov
call
das
dec
loopne
pusha
ins
jo
test
loope
aas
(bad)
sar
(bad)
jno
adc
(bad)
push
in
sar
aam
sub
rcr
dec
push
push
or
add
adc
sbb
aam
or
add
repz
cmp
adc
dec
xor
sbb
ret
sub
sbb
adc
inc
addr16
pop
push
aam
add
ror
cld
and
or
cmp
push
xor
fadd
xchg
jge
push
retf
sbb
sbb
push
ret
mov
ret
test
rcl
jne
xor
push
pop
adc
adc
jbe
jae
call
cmp
sub
call
rcr
xchg
js
les
je
fisubr
out
and
and
push
enter
and
inc
inc
push
call
dec
xor
test
inc
loopne
or
lea
cmps
jb
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcl
or
pop
pop
xor
or
mov
ret
push
repz
and
mov
dec
repnz
xor
inc
ret
push
or
(bad)
icebp
fst
add
leave
repnz
cdq
enter
or
add
push
rol
ins
cmps
adc
sub
clc
jmp
push
je
in
mov
add
sub
push
movs
xor
aam
clc
addr16
loopne
jg
fdivr
jp
jmp
mov
push
dec
retfw
popf
pop
mov
test
cmps
pop
pop
mov
jecxz
dec
int3
inc
xor
jns
mov
push
mov
add
hlt
xchg
mov
out
add
call
fcom
fsubr
or
in
mov
mov
ficomp
jl
add
inc
mov
ins
imul
ret
mov
mov
mov
add
out
test
jmp
cli
(bad)
loop
mov
xchg
repnz
iret
lahf
(bad)
aas
dec
add
adc
dec
inc
ins
les
sbb
sbb
ror
mov
cld
jecxz
inc
inc
cld
add
aas
add
dec
adc
pop
adc
rol
aas
add
push
cmp
or
(bad)
mov
adc
rdmsr
or
loope
sbb
movs
adc
add
mov
inc
mov
cld
pop
je
inc
pop
sbb
adc
addr16
mov
aas
pusha
mul
aas
inc
or
dec
add
xchg
or
pop
inc
add
or
cmps
and
push
or
aam
cmps
xchg
or
mov
xor
inc
add
js
repz
cmp
mov
js
int
popa
pusha
adc
sub
retf
add
inc
inc
pop
mov
fimul
mov
push
cmp
mov
xchg
sub
movs
or
mov
pop
or
cs
scas
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
push
sub
sub
lahf
shl
cs
mov
sar
fs
iret
rol
and
test
pop
das
adc
imul
xchg
mov
cmp
add
addr16
jne
out
pop
cmp
outs
hlt
and
mov
mov
adc
rcl
adc
pushf
test
xor
fwait
mov
nop
nop
fldenv
pop
mov
fistp
sbb
add
movs
pop
inc
js
cmp
sbb
pusha
and
pop
sbb
mov
dec
rol
es
mov
pop
scas
in
fcomp
jg
idiv
dec
das
pusha
dec
je
fs
lock
xchg
sbb
push
es
xchg
or
add
jne
retf
mov
adc
mov
inc
rcr
or
inc
and
sbb
sti
mov
call
das
dec
loopne
pusha
ins
jo
test
loope
aas
(bad)
sar
(bad)
jno
adc
(bad)
push
in
sar
aam
sub
rcr
dec
push
push
or
add
adc
sbb
aam
or
add
repz
cmp
adc
dec
xor
sbb
ret
sub
sbb
adc
inc
addr16
pop
push
aam
add
ror
cld
and
or
cmp
push
xor
fadd
xchg
jge
push
retf
sbb
sbb
push
ret
mov
ret
test
rcl
jne
xor
push
pop
adc
adc
jbe
jae
call
cmp
sub
call
rcr
xchg
js
les
je
fisubr
out
and
and
push
enter
and
inc
inc
push
call
dec
xor
test
inc
loopne
or
lea
cmps
jb
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcl
or
pop
pop
xor
or
mov
ret
push
repz
and
mov
dec
repnz
xor
inc
ret
push
or
(bad)
icebp
fst
add
leave
repnz
cdq
enter
or
add
push
rol
ins
cmps
adc
sub
clc
jmp
push
je
in
mov
add
sub
push
movs
xor
aam
clc
addr16
loopne
jg
fdivr
jp
jmp
mov
push
dec
retfw
popf
pop
mov
test
cmps
pop
pop
mov
jecxz
dec
int3
inc
xor
jns
mov
push
mov
add
hlt
xchg
mov
out
add
call
fcom
fsubr
or
in
mov
mov
ficomp
jl
add
inc
mov
ins
imul
ret
mov
mov
mov
add
out
test
jmp
cli
(bad)
loop
mov
xchg
repnz
iret
lahf
(bad)
aas
dec
add
adc
dec
inc
ins
les
sbb
sbb
ror
mov
cld
jecxz
inc
inc
cld
add
aas
add
dec
adc
pop
adc
rol
aas
add
push
cmp
or
(bad)
mov
adc
rdmsr
or
loope
sbb
movs
adc
add
mov
inc
mov
cld
pop
je
inc
pop
sbb
adc
addr16
mov
aas
pusha
mul
aas
inc
or
dec
add
xchg
or
pop
inc
add
or
cmps
and
push
or
aam
cmps
xchg
or
mov
xor
inc
add
js
repz
cmp
mov
js
int
popa
pusha
adc
sub
retf
add
inc
inc
pop
mov
fimul
mov
push
cmp
mov
xchg
sub
movs
or
mov
pop
or
cs
scas
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
push
sub
sub
lahf
shl
cs
mov
sar
fs
iret
rol
and
test
pop
das
adc
imul
xchg
mov
cmp
add
addr16
jne
out
pop
cmp
outs
hlt
and
mov
mov
adc
rcl
adc
pushf
test
xor
fwait
mov
nop
nop
fldenv
pop
mov
fistp
sbb
add
movs
pop
inc
js
cmp
sbb
pusha
and
pop
sbb
mov
dec
rol
es
mov
pop
scas
in
fcomp
jg
idiv
dec
das
pusha
dec
je
fs
lock
xchg
sbb
push
es
xchg
or
add
jne
retf
mov
adc
mov
inc
rcr
or
inc
and
sbb
sti
mov
call
das
dec
loopne
pusha
ins
jo
test
loope
aas
(bad)
sar
(bad)
jno
adc
(bad)
push
in
sar
aam
sub
rcr
dec
push
push
or
add
adc
sbb
aam
or
add
repz
cmp
adc
dec
xor
sbb
ret
sub
sbb
adc
inc
addr16
pop
push
aam
add
ror
cld
and
or
cmp
push
xor
fadd
xchg
jge
push
retf
sbb
sbb
push
ret
mov
ret
test
rcl
jne
xor
push
pop
adc
adc
jbe
jae
call
cmp
sub
call
rcr
xchg
js
les
je
fisubr
out
and
and
push
enter
and
inc
inc
push
call
dec
xor
test
inc
loopne
or
lea
cmps
jb
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcl
or
pop
pop
xor
or
mov
ret
push
repz
and
mov
dec
repnz
xor
inc
ret
push
or
(bad)
icebp
fst
add
leave
repnz
cdq
enter
or
add
push
rol
ins
cmps
adc
sub
clc
jmp
push
je
in
mov
add
sub
push
movs
xor
aam
clc
addr16
loopne
jg
fdivr
jp
jmp
mov
push
dec
retfw
popf
pop
mov
test
cmps
pop
pop
mov
jecxz
dec
int3
inc
xor
jns
mov
push
mov
add
hlt
xchg
mov
out
add
call
fcom
fsubr
or
in
mov
mov
ficomp
jl
add
inc
mov
ins
imul
ret
mov
mov
mov
add
out
test
jmp
cli
(bad)
loop
mov
xchg
repnz
iret
lahf
(bad)
aas
dec
add
adc
dec
inc
ins
les
sbb
sbb
ror
mov
cld
jecxz
inc
inc
cld
add
aas
add
dec
adc
pop
adc
rol
aas
add
push
cmp
or
(bad)
mov
adc
rdmsr
or
loope
sbb
movs
adc
add
mov
inc
mov
cld
pop
je
inc
pop
sbb
adc
addr16
mov
aas
pusha
mul
aas
inc
or
dec
add
xchg
or
pop
inc
add
or
cmps
and
push
or
aam
cmps
xchg
or
mov
xor
inc
add
js
repz
cmp
mov
js
int
popa
pusha
adc
sub
retf
add
inc
inc
pop
mov
fimul
mov
push
cmp
mov
xchg
sub
movs
or
mov
pop
or
cs
scas
mov
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
push
sub
sub
lahf
shl
cs
mov
sar
fs
iret
rol
and
test
pop
das
adc
imul
xchg
mov
cmp
add
addr16
jne
out
pop
cmp
outs
hlt
and
mov
mov
adc
rcl
adc
pushf
test
xor
fwait
mov
nop
nop
fldenv
pop
mov
fistp
sbb
add
movs
pop
inc
js
cmp
sbb
pusha
and
pop
sbb
mov
dec
rol
es
mov
pop
scas
in
fcomp
jg
idiv
dec
das
pusha
dec
je
fs
lock
xchg
sbb
push
es
xchg
or
add
jne
retf
mov
adc
mov
inc
rcr
or
inc
and
sbb
sti
mov
call
das
dec
loopne
pusha
ins
jo
test
loope
aas
(bad)
sar
(bad)
jno
adc
(bad)
push
in
sar
aam
sub
rcr
dec
push
push
or
add
adc
sbb
aam
or
add
repz
cmp
adc
dec
xor
sbb
ret
sub
sbb
adc
inc
addr16
pop
push
aam
add
ror
cld
and
or
cmp
push
xor
fadd
xchg
jge
push
retf
sbb
sbb
push
ret
mov
ret
test
rcl
jne
xor
push
pop
adc
adc
jbe
jae
call
cmp
sub
call
rcr
xchg
js
les
je
fisubr
out
and
and
push
enter
and
inc
inc
push
call
dec
xor
test
inc
loopne
or
lea
cmps
jb
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rcl
or
pop
pop
xor
or
mov
ret
push
repz
and
mov
dec
repnz
xor
inc
ret
push
or
(bad)
icebp
fst
add
leave
repnz
cdq
enter
or
add
push
rol
ins
cmps
adc
sub
clc
jmp
push
je
in
mov
add
sub
push
movs
xor
aam
clc
addr16
loopne
jg
fdivr
jp
jmp
mov
push
dec
retfw
popf
pop
mov
test
cmps
pop
pop
mov
jecxz
dec
int3
inc
xor
jns
mov
push
mov
add
hlt
xchg
mov
out
add
call
fcom
fsubr
or
in
mov
mov
ficomp
jl
add
inc
mov
ins
imul
ret
mov
mov
mov
add
out
test
jmp
cli
(bad)
loop
mov
xchg
repnz
iret
lahf
(bad)
aas
dec
add
adc
dec
inc
ins
les
sbb
sbb
ror
mov
cld
jecxz
inc
inc
cld
add
aas
add
dec
adc
pop
adc
rol
aas
add
push
cmp
or
(bad)
mov
adc
rdmsr
or
loope
sbb
movs
adc
add
mov
inc
mov
cld
pop
je
inc
pop
sbb
adc
addr16
mov
aas
pusha
mul
aas
inc
or
dec
add
xchg
or
pop
inc
add
or
cmps
and
push
or
aam
cmps
xchg
or
mov
xor
inc
add
js
repz
cmp
mov
js
int
popa
pusha
adc
sub
retf
add
inc
inc
pop
mov
fimul
mov
push
cmp
mov
xchg
sub
movs
or
mov
pop
or
cs
scas
mov
add
add
add
sbb
add
add
add
dec
add
pop
add
add
popa
xor
sbb
or
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
push
add
idiv
add
iret
dec
(bad)
(bad)
and
leave
mov
imul
add
push
add
cld
out
mov
mov
call
repnz
sar
cmps
data16
jb
ss
xchg
imul
xor
int
mov
imul
fisubr
pushf
gs
enter
add
jbe
mov
mov
add
out
int3
(bad)
jmp
mov
add
inc
add
cld
enter
stc
jmp
mov
cdq
push
(bad)
clc
inc
(bad)
call
fsubr
mov
call
test
(bad)
cli
data16
cli
mov
in
(bad)
call
(bad)
sti
test
mov
(bad)
sti
ja
in
ss
fsub
(bad)
cli
cdq
nop
nop
xchg
jmp
xchg
add
add
mov
(bad)
out
std
leave
and
std
push
std
leave
cmp
jmp
ffree
cdq
xchg
dec
add
jmp
cdq
mov
addr16
arpl
push
or
jmp
std
fidivr
(bad)
jmp
(bad)
jmp
js
inc
adc
out
or
push
fmul
mov
adc
or
add
(bad)
mov
arpl
in
jecxz
mov
add
xchg
adc
push
adc
retf
mov
push
or
adc
fadd
push
adc
sahf
addr16
or
mov
mov
adc
into
or
ret
cmps
adc
les
mov
add
hlt
repnz
pop
adc
jbe
mov
lock
std
pusha
add
stos
adc
hlt
sbb
add
movs
adc
repz
cmc
mov
fdivr
test
les
into
mov
div
fcmovb
jo
ret
xlat
cmp
aad
cmc
les
repnz
out
sar
cmc
fadd
icebp
mov
sahf
cmp
ror
cmc
loop
mov
add
mov
lock
mov
add
std
repz
jmp
movs
cmc
(bad)
call
hlt
mov
icebp
(bad)
add
in
fcmovb
push
out
icebp
in
add
sbb
add
mov
out
add
test
repz
inc
(bad)
sti
add
out
jmp
add
inc
(bad)
sti
jmp
add
jecxz
(bad)
jmp
(bad)
out
add
(bad)
(bad)
sti
sti
sti
push
add
sti
push
sti
(bad)
cli
jbe
mov
sbb
sbb
push
push
dec
mov
and
loope
lds
sti
jecxz
sti
inc
sti
jmp
sti
repz
out
repz
div
add
test
mov
sti
out
add
(bad)
imul
or
mov
out
jmp
jecxz
(bad)
out
(bad)
jmp
fcomp
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
sbb
inc
sub
add
add
dec
add
or
add
or
mov
rol
sub
jg
sahf
dec
jl
jecxz
lds
lock
arpl
pop
ret
jns
pop
push
mov
lea
fyl2x
dec
rol
cmp
dec
xor
xchg
(bad)
in
add
xchg
aaa
xchg
call
xor
adc
aad
sbb
shl
fs
ret
push
in
(bad)
aam
xchg
aaa
push
lds
shl
xlat
mov
pop
daa
repnz
jb
or
mov
mov
and
inc
ret
add
jo
ror
sub
call
enter
mov
test
scas
push
push
inc
fwait
mov
add
lock
cs
sub
dec
mov
lea
aaa
(bad)
pop
mov
adc
fstp
js
mov
adc
loope
out
dec
xchg
call
inc
cmp
xchg
jnp
retf
inc
mov
scas
adc
dec
pop
mov
and
aam
xchg
int3
xor
xor
dec
hlt
fst
adc
pop
jno
or
adc
push
or
pusha
fstp
in
add
iret
mov
loopne
jnp
loop
add
test
and
xor
sbb
push
add
je
or
clc
rol
dec
ss
or
and
sub
arpl
es
adc
adc
clc
lds
sbb
js
adc
xor
jo
or
cmp
mov
dec
rcl
or
shl
inc
or
xchg
cdq
lea
and
test
adc
adc
cmps
aaa
ror
lea
fisubr
xor
shl
int3
xor
pop
arpl
jl
sbb
push
push
or
xchg
push
test
push
xor
into
mov
mov
ss
fisubr
pusha
ins
jp
shr
and
adc
lea
stos
push
pushf
mov
pop
dec
mov
movs
dec
pop
mov
dec
xchg
sub
ret
pop
sahf
push
add
pop
test
push
adc
dec
xor
movs
fild
int
mov
movs
dec
sar
lods
sahf
jnp
sti
enter
(bad)
mov
ret
push
xor
stc
sub
xor
mov
into
cdq
int
fwait
(bad)
js
or
ret
add
pop
nop
mov
jl
lock
pop
mov
call
lds
mov
ja
xor
ud0
push
xor
sgdtd
jb
or
pop
imul
sub
mov
ficomp
(bad)
adc
mov
ror
pop
adc
mov
dec
mov
cmp
outs
cmps
mov
frstor
pusha
xchg
adc
mov
int
pusha
xchg
sub
imul
mov
lods
inc
fld
in
inc
ja
pop
add
cmps
stos
pop
iret
add
mov
cmp
retf
push
retf
add
(bad)
rol
test
and
sbb
out
jp
dec
jb
inc
xchg
lea
mov
jmp
push
mov
sbb
sub
(bad)
repnz
mov
cdq
cvtps2pi
imul
cmp
add
movs
dec
adc
add
aad
shl
add
or
repz
ds
aaa
rol
jns
out
pop
mov
or
rcl
les
fnstsw
or
or
add
mov
push
out
sbb
adc
jae
enter
mov
adc
cwde
inc
inc
xchg
sub
pusha
mov
mov
and
mov
inc
adc
add
push
loopne
sub
mov
add
jmp
mov
adc
push
bound
mov
sbb
xor
loopne
push
pop
rol
inc
inc
adc
adc
push
adc
sbb
add
push
mov
popa
pop
jo
(bad)
or
pop
(bad)
ror
and
xchg
pop
ror
fadd
and
push
test
xor
jo
loopne
sbb
dec
mov
sbb
mov
nop
cmp
or
cwde
and
lahf
hlt
and
xor
or
and
cmp
cmp
sub
cmp
mov
adc
jno
xor
add
jbe
or
xchg
xchg
mov
inc
and
and
aam
cmp
movs
mov
sbb
(bad)
push
lock
leave
push
shl
adc
inc
xor
add
test
sldt
es
add
loopne
push
ins
cmp
or
add
and
cdq
cwde
xor
sub
add
je
xor
test
mov
inc
clc
add
and
sub
jecxz
inc
mov
not
das
push
rol
fcmovbe
mov
test
and
jo
or
or
add
jp
add
add
dec
or
mov
cmp
adc
push
(bad)
and
or
sub
or
xchg
jae
push
loopne
ins
mov
inc
adc
adc
sbb
dec
cs
inc
sbb
rol
push
lods
loope
or
xor
pusha
pop
and
mov
adc
pop
rcr
add
fadd
aam
xchg
sub
or
inc
add
adc
or
add
add
fst
cmp
or
scas
jle
ins
pop
neg
cmp
sar
les
add
dec
inc
xor
inc
or
in
or
push
xchg
xor
imul
xchg
mov
cmp
or
add
sub
jno
sub
or
imul
adc
jne
inc
add
ror
fadd
jb
or
cli
inc
push
adc
repz
mov
push
pop
ret
aaa
sahf
rol
sub
dec
or
cmp
or
data16
addr16
push
inc
rol
cwde
add
mov
imul
call
mov
adc
xor
inc
add
jecxz
or
cmp
sub
shl
xchg
pop
push
or
or
inc
and
inc
push
xor
inc
add
mov
pop
mov
add
inc
movs
pop
mov
ret
push
and
rol
sub
outs
inc
adc
inc
add
(bad)
sub
aaa
push
arpl
or
add
clc
fnstenv
xor
inc
add
or
dec
and
adc
xchg
sbb
and
and
sbb
inc
push
sub
repnz
mov
add
sbb
push
jns
jecxz
adc
inc
mov
add
add
(bad)
mov
cmp
inc
and
inc
xchg
add
adc
pop
ret
(bad)
xor
test
fs
rol
add
sbb
pop
and
nop
xor
nop
add
nop
add
pop
(bad)
or
add
ss
jo
jbe
and
lods
add
loopne
cmp
mov
fs
cmps
xchg
xor
inc
or
and
xor
adc
nop
sbb
xor
shl
sahf
or
add
adc
nop
add
enter
cmps
push
int3
sub
mov
and
or
(bad)
and
add
cdq
jno
dec
bound
xor
adc
js
adc
mov
cmp
retf
adc
test
push
jo
rol
xor
jns
out
mov
add
into
loope
mov
inc
or
clc
mov
or
add
jnp
lods
mov
push
or
out
xor
cmc
dec
clc
or
pop
iret
clc
(bad)
cmp
icebp
nop
(bad)
mov
retf
repnz
iret
mov
into
jnp
and
add
and
add
or
inc
sub
add
add
and
add
inc
dec
sbb
mov
inc
push
in
mov
mov
(bad)
out
mov
ss
sbb
or
aam
adc
call
iret
scas
mov
push
or
(bad)
repz
dec
mov
push
mov
push
popa
xor
leave
push
inc
rol
inc
je
push
mov
xor
pop
ins
xor
push
xor
add
pusha
loope
cmp
pop
cdq
fld
adc
cld
mov
inc
and
repz
pop
or
fsub
sub
mov
pusha
adc
pop
xchg
add
pop
xor
ret
push
out
cld
repz
cld
push
ss
sbb
daa
pop
xchg
sub
inc
or
dec
rcl
rol
inc
sbb
push
sbb
test
sub
sub
retf
stc
mov
or
inc
mov
or
(bad)
clc
pop
or
inc
mov
fsub
add
or
mov
movs
outs
cmps
add
add
stos
xor
pop
daa
adc
sub
in
mov
xchg
dec
adc
outs
xor
mov
add
inc
add
test
bound
inc
push
sub
add
test
aaa
ins
test
(bad)
dec
mov
adc
dec
add
jae
xor
cld
xor
push
popf
pusha
add
mov
or
jno
adc
add
mov
xor
sub
aad
inc
or
adc
jnp
ror
int3
bound
or
aam
and
je
xchg
sbb
jo
add
mov
inc
mov
push
cmp
add
push
dec
push
rol
add
loopne
xlat
push
push
dec
pusha
stos
or
fwait
pushf
jno
xor
js
ror
sbb
push
add
pop
fs
mov
sbb
cdq
popa
and
add
fcomip
popa
leave
and
adc
js
dec
add
in
pop
and
test
push
adc
loopne
xor
pushf
loope
add
inc
ror
or
fiadd
mov
repz
movs
mov
pushf
xor
pushf
aas
mov
cmp
add
mov
popa
add
push
or
or
inc
xor
mov
and
and
enter
sub
bound
outs
push
xchg
dec
xor
dec
rol
lea
(bad)
aaa
xor
or
xor
push
ret
fild
adc
jno
and
xor
rol
push
or
sbb
jb
adc
push
push
pusha
add
retf
or
inc
push
dec
pop
dec
imul
mov
and
add
sub
rol
js
dec
add
dec
jmp
jmp
or
sbb
mov
inc
mov
mov
push
sub
push
xor
or
add
push
lea
inc
adc
add
push
pop
or
jmp
int3
adc
inc
push
test
popa
or
adc
clc
aas
fld
adc
xlat
xlat
js
mov
pop
or
or
add
add
rol
adc
jmp
scas
jno
and
mov
and
nop
cmp
adc
daa
pushf
les
sub
and
xor
dec
mov
ret
sbb
push
mov
and
pusha
inc
push
ss
cmp
inc
movsx
or
jp
or
inc
adc
and
call
cmp
jmp
or
pop
xor
sbb
popa
add
adc
adc
mov
pop
add
out
or
nop
mov
fimul
adc
dec
sub
and
adc
xchg
data16
sbb
add
xor
ret
aas
mov
jns
lds
push
add
push
cdq
push
ss
lock
cmp
add
pop
dec
inc
dec
and
adc
cdq
test
mov
sbb
enter
or
sbb
or
adc
ja
add
xchg
inc
or
(bad)
sbb
rol
ins
or
jmp
and
add
dec
loopne
ds
push
retf
test
push
inc
sbb
or
enter
loopne
test
mov
pop
xchg
add
mov
test
call
sbb
clc
jecxz
pop
and
jmp
xchg
push
push
jo
les
push
ror
and
enter
or
or
ror
rol
and
add
mov
or
loope
(bad)
push
push
xor
test
ins
pusha
and
nop
ror
adc
fwait
sub
mov
or
inc
and
pop
dec
sub
loope
jl
arpl
test
ror
jl
adc
dec
and
sbb
add
and
pop
js
adc
cmp
and
(bad)
sub
shl
or
add
stc
add
or
inc
sub
add
add
pop
add
or
add
or
mov
rol
xor
aas
or
xor
mov
cmps
push
push
adc
in
mov
mov
mov
pop
leave
repnz
push
mov
bound
hlt
cmp
jmp
mov
cld
mov
jns
fist
pusha
mov
dec
int
fisttp
bound
inc
adc
and
mov
add
inc
push
cmps
jns
ss
inc
cmp
or
sbb
mov
cmps
std
ret
out
or
stc
imul
loopne
data16
or
or
xor
and
and
and
retf
inc
scas
std
mov
sbb
call
test
fdiv
mov
sub
mov
and
mov
or
movs
mov
sub
mov
or
push
es
xor
cmc
push
iret
mov
or
mov
adc
dec
sbb
add
call
inc
iret
adc
cmp
add
cmp
pop
sbb
dec
dec
push
push
adc
push
and
sub
push
adc
nop
jo
adc
xor
adc
adc
sub
rol
pusha
mov
cld
mov
inc
pop
or
call
adc
add
jp
jl
adc
rol
adc
sub
push
popa
sub
add
lahf
mov
mov
adc
or
inc
and
and
data16
adc
mov
add
cmp
ret
or
xchg
int
in
dec
xor
push
inc
mov
push
ror
xor
int3
xor
cmp
dec
add
and
sbb
pop
mov
mov
inc
cmp
jae
and
cwde
nop
dec
and
mov
adc
push
mov
inc
sub
pusha
push
xor
mov
ror
pop
sbb
inc
inc
inc
stos
dec
sub
add
fwait
or
jmp
xchg
nop
add
pop
sub
int3
adc
fild
mov
add
inc
xor
add
push
mov
and
ds
shl
or
mov
cmp
sbb
adc
(bad)
or
js
into
push
inc
or
mov
inc
jecxz
aaa
ficomp
mov
jg
push
mov
and
data16
xor
and
add
xor
pop
add
cmp
cmp
movs
mov
jo
or
inc
ror
xor
je
enter
jmp
dec
push
fwait
pop
mov
xor
add
nop
mov
les
add
push
dec
fcom
push
rol
cmp
ret
push
jmp
lea
sar
nop
add
enter
xlat
push
push
sbb
inc
jecxz
xor
sbb
inc
add
mov
mov
pusha
inc
adc
pop
add
sbb
cld
loope
sbb
add
loopne
push
mov
repnz
adc
push
or
inc
dec
inc
aad
and
(bad)
rdpmc
je
rcr
adc
add
pop
xchg
mov
and
jecxz
in
inc
add
sub
mov
repz
xor
adc
jo
bound
sbb
push
mov
or
jo
pop
cld
mov
xor
pop
xchg
or
push
push
clc
add
mov
and
inc
add
add
push
mov
aas
nop
(bad)
xchg
lea
add
add
(bad)
aam
loop
or
inc
adc
imul
and
and
or
xlat
push
sbb
adc
sbb
and
add
adc
sbb
nop
mov
dec
add
popa
or
es
lock
pop
add
adc
ret
jg
jecxz
mov
jo
adc
jp
mov
or
nop
sub
inc
add
xor
mov
adc
ins
dec
add
nop
sub
add
inc
cmp
or
mov
pushf
bound
aam
push
sbb
lea
enter
pusha
inc
sub
loopne
gs
inc
push
or
inc
shl
sbb
and
sub
pop
jo
push
inc
add
fisubr
ss
or
shl
or
add
je
xchg
push
or
std
arpl
pop
test
add
rol
js
adc
pop
mov
xor
add
push
iret
pusha
inc
push
xchg
adc
mov
push
and
and
out
inc
xor
and
int
aam
add
call
add
adc
cmp
test
lea
adc
or
loopne
and
and
sbb
xor
sub
jecxz
jle
retf
sbb
add
adc
aaa
sub
xor
xchg
mov
jmp
ja
jbe
add
cmp
ror
int3
repz
add
add
loopne
ins
mov
sbb
xor
pusha
or
inc
add
push
inc
adc
fiadd
add
or
inc
or
mov
sbb
loopne
push
loope
or
inc
pop
xor
fadd
xchg
sub
or
ins
mov
sbb
loop
add
adc
mov
and
push
add
sub
adc
and
or
inc
pop
retf
and
pusha
pop
test
enter
rol
and
les
inc
add
lock
test
cmp
add
cmp
add
inc
mov
mov
add
inc
push
ins
and
(bad)
jo
ins
pop
sub
inc
jmp
in
mov
fsub
jne
retf
fld
stc
add
or
inc
sub
add
add
sub
add
inc
dec
sbb
mov
inc
pop
inc
mov
dec
test
dec
(bad)
and
push
dec
sub
sub
push
test
fsubr
leave
xor
je
jno
int3
aas
push
inc
nop
fidivr
or
xchg
popa
loop
and
cmp
xor
ja
mov
aaa
add
outs
sbb
or
dec
inc
and
add
popa
inc
mov
cwde
dec
js
movs
pop
push
cmp
into
adc
pusha
mov
fdivr
popa
sub
and
adc
arpl
mov
cmp
daa
sahf
test
xor
add
mov
inc
and
xchg
stc
outs
out
mov
jge
dec
add
pushf
and
js
inc
daa
mov
cmp
xlat
mov
add
dec
push
pop
dec
loopne
cmps
adc
add
lods
imul
fidiv
xchg
inc
inc
push
cmp
push
rol
(bad)
fimul
xchg
jns
pop
fs
inc
adc
mov
dec
nop
or
in
add
movs
and
pop
and
pop
jno
pop
dec
nop
loope
adc
pop
icebp
adc
cmp
(bad)
aas
jle
loopne
sbb
add
add
or
jl
call
repnz
add
cmp
add
add
mov
sbb
(bad)
cmp
add
dec
test
test
push
dec
rol
and
ror
push
dec
inc
test
add
mov
iret
xchg
dec
enter
push
test
inc
adc
mov
call
add
in
fs
and
or
push
xchg
mov
xor
sbb
pushf
fbld
add
dec
adc
lods
test
add
pop
nop
sbb
ror
push
xor
mov
sbb
jmp
sbb
dec
or
and
les
sbb
sub
rol
push
nop
lock
push
jmp
and
dec
inc
enter
and
test
or
lds
xchg
enter
cmp
inc
push
and
mov
adc
add
aad
push
aas
hlt
(bad)
xchg
(bad)
xor
or
mov
jbe
push
inc
add
jo
inc
ss
xchg
nop
sbb
es
push
push
or
jae
add
ror
loopne
lds
ret
in
fld
or
dec
xor
jne
push
dec
inc
fidivr
icebp
xor
sub
push
mov
ret
adc
add
cwde
inc
dec
cmp
fs
ss
xchg
ror
pop
rol
or
or
rcr
scas
adc
add
sub
cmp
dec
into
or
inc
dec
sbb
dec
push
sub
xlat
cmp
xchg
int
fmulp
(bad)
les
xchg
repnz
retf
adc
add
sbb
sbb
into
xor
xor
shl
pop
inc
mov
repnz
dec
imul
rol
daa
rcr
int
imul
and
sbb
dec
pusha
add
push
and
adc
adc
or
dec
xor
xor
and
rcl
mov
aam
rol
mov
fimul
dec
jge
shl
call
mov
inc
sbb
mov
add
sub
add
das
cmps
cmc
int
and
mov
je
sbb
inc
inc
movs
add
sub
dec
sbb
loopne
cmp
cmp
pop
inc
add
jo
sub
xor
add
adc
adc
cdq
fild
cs
test
hlt
inc
or
xchg
mov
or
ins
ret
sbb
cwde
and
sub
pop
je
sbb
js
push
sub
xchg
or
mov
push
sub
popa
or
push
or
aad
ret
sub
push
cmp
push
retf
xor
sbb
ret
mov
out
mov
test
stos
sbb
push
add
lods
or
push
pop
push
xchg
inc
sbb
inc
adc
imul
popa
test
inc
push
dec
je
adc
xor
dec
dec
add
jp
adc
dec
adc
inc
push
out
inc
stos
inc
push
inc
add
mov
sbb
or
add
jp
xchg
loopne
add
and
(bad)
loopne
add
mov
or
adc
mov
mov
inc
dec
or
push
cld
adc
lock
mov
sbb
sub
mov
in
adc
and
cmp
mov
aam
sbb
mov
aam
push
or
pop
push
add
xor
push
inc
ds
les
mov
adc
add
dec
jecxz
repnz
xchg
sar
call
ret
mov
add
ror
sbb
sbb
adc
lock
add
bound
add
scas
mov
sub
cmp
add
cmp
add
xchg
xchg
inc
les
pop
xchg
push
push
sub
or
add
mov
nop
cmp
and
add
mov
jecxz
popf
test
xor
inc
pop
rcr
outs
into
inc
mov
jo
test
push
rcl
pop
add
add
adc
mov
mov
mov
push
sub
arpl
sbb
mov
aad
adc
dec
arpl
aas
or
or
push
mov
lock
mov
mov
or
ror
jl
jns
inc
add
adc
fsub
sub
and
and
jnp
jecxz
add
sbb
inc
push
pop
mov
test
xor
mov
inc
or
push
inc
push
pushf
enter
ret
sbb
pusha
ror
xchg
mov
inc
add
scas
mov
add
into
xor
or
sbb
add
push
add
sbb
iret
fadd
add
loope
xchg
and
push
shl
add
add
mov
add
xchg
mov
add
inc
push
and
add
loope
push
inc
test
rol
add
retf
nop
add
aas
mov
mov
add
or
add
adc
cmp
add
and
and
add
mov
adc
inc
sbb
dec
inc
sbb
pusha
test
js
adc
pusha
add
in
popa
sbb
les
out
add
enter
sub
(bad)
in
out
add
pop
adc
push
or
rol
mov
ins
ins
add
pusha
and
pop
repnz
sbb
bound
and
or
pop
mov
mov
sub
pop
(bad)
cli
xchg
and
add
sub
pop
and
or
in
push
cmp
popf
sub
mov
sbb
adc
add
xchg
and
popa
or
fiadd
rol
add
add
or
add
lds
out
cmp
outs
push
loope
ret
jecxz
and
dec
add
loopne
and
rcl
mov
inc
add
rol
rol
loope
int3
adc
test
adc
adc
mov
adc
mov
sbb
sub
inc
dec
pusha
add
mov
inc
rol
add
loop
and
add
rcl
mov
pusha
or
add
sti
aas
scas
push
add
loopne
jb
mov
mov
cmc
mov
xor
stc
add
or
inc
sub
add
add
cmp
add
inc
dec
sbb
mov
inc
xor
sub
mov
xor
add
mov
or
pusha
mov
inc
pop
je
jb
mov
pop
imul
add
jns
nop
add
pusha
xor
mov
xor
sbb
ins
or
nop
push
into
xchg
or
push
imul
(bad)
push
pop
lock
push
jmp
sar
adc
inc
dec
jne
jmp
js
bound
lock
in
pop
scas
and
vmovdqa
loopne
fs
add
xor
inc
ret
dec
xchg
sub
pop
test
pusha
add
push
and
lock
arpl
imul
dec
lods
adc
int3
test
fdiv
and
sar
jns
push
push
imul
aas
add
inc
ret
inc
mov
pop
test
es
fs
adc
mov
aaa
mov
or
xchg
xchg
push
dec
cmps
xor
push
rol
xor
inc
inc
inc
sbb
mov
sbb
xor
jo
mov
and
lds
pop
jl
mov
and
pop
xchg
adc
fs
test
push
mov
push
loopne
movs
ins
aam
pop
push
enter
sbb
in
add
sub
in
cmp
stc
dec
pop
mov
fsub
or
adc
add
(bad)
xchg
add
pop
push
cmp
lds
shl
bound
jo
mov
adc
inc
retf
mov
lock
push
je
adc
add
push
inc
add
repnz
jle
push
nop
or
push
pushf
add
leave
sub
add
jge
fadd
retf
test
jge
call
stos
stos
(bad)
jae
aas
push
fdivr
rol
adc
inc
push
inc
cmp
mov
es
inc
and
inc
ins
mov
add
mov
call
sbb
rol
(bad)
and
call
inc
add
or
es
rol
rcl
add
gs
add
and
and
xchg
mov
sbb
stos
(bad)
mov
or
sbb
inc
sbb
jo
adc
push
mov
mov
nop
(bad)
call
inc
adc
xchg
jno
or
and
xor
sub
pop
and
and
push
les
add
inc
test
adc
and
inc
imul
mov
ins
lock
loopne
(bad)
or
xchg
or
and
inc
sub
push
cmp
movs
ins
and
fld
aas
xor
retf
mov
adc
sbb
nop
aas
jb
and
add
loopne
pusha
(bad)
gs
pop
add
push
shl
int3
xor
movs
and
fsub
inc
ins
adc
inc
sub
adc
xor
ins
mov
push
les
or
and
inc
std
cmp
add
ss
lea
fild
loop
xor
xor
js
iret
cmp
or
inc
and
and
aas
pop
fcom
xlat
inc
or
das
mov
jp
ss
and
push
ins
add
push
nop
jo
daa
pusha
mov
add
(bad)
pop
fisttp
(bad)
lock
or
add
loopne
cmp
retf
call
mov
inc
les
xor
sbb
add
dec
mov
nop
and
or
add
ins
cmp
push
mov
or
inc
ret
sbb
add
ss
and
inc
sbb
imul
inc
repnz
dec
add
dec
pop
bound
ret
xor
add
jge
add
es
nop
pop
pop
popa
or
sar
icebp
(bad)
cmps
xchg
dec
sbb
sub
add
xor
jo
(bad)
cld
cmps
add
pop
mov
inc
loop
add
mov
loop
xchg
mov
or
loopne
jbe
(bad)
sbb
and
mov
mov
or
and
add
add
add
xchg
and
dec
sbb
mov
inc
push
push
clc
inc
xor
inc
inc
cmp
arpl
in
pop
pusha
mov
and
inc
adc
inc
loope
and
or
aam
js
stos
cdq
sub
mov
adc
mov
cs
test
adc
mov
push
loopne
adc
rol
lds
add
cwde
ret
and
inc
and
test
inc
xor
and
push
xchg
add
rol
add
fadd
push
test
push
cld
sbb
push
(bad)
gs
inc
adc
cmp
lea
repz
and
or
ret
in
cmp
sbb
js
mov
lods
inc
aaa
xchg
push
add
jp
out
sub
add
sahf
loope
ins
add
add
push
mov
aas
in
imul
or
dec
arpl
ret
xor
jno
push
sbb
ss
add
out
and
sub
push
xchg
adc
sub
mov
or
add
loopne
inc
nop
ret
arpl
xchg
test
dec
adc
pop
ins
adc
or
or
add
adc
sbb
or
adc
sub
mov
or
xchg
add
inc
aaa
or
mov
xchg
dec
outs
add
add
sahf
mov
add
je
pushf
and
sbb
(bad)
adc
or
push
mov
stc
jno
push
in
jecxz
(bad)
adc
add
mov
add
mov
add
les
daa
lock
cmp
cmps
repz
inc
cs
and
cmp
fadd
dec
es
sub
cdq
test
and
test
push
rcr
mov
mov
adc
add
push
add
shl
loop
and
add
xor
out
and
adc
add
add
or
inc
add
add
inc
and
aam
inc
dec
call
ret
xor
xchg
loopne
or
sub
adc
inc
mov
dec
jecxz
ret
call
jo
or
adc
add
lds
jmp
mov
add
push
pop
xchg
clc
add
mov
inc
xor
mov
add
inc
inc
pushf
and
and
push
inc
cwde
jo
cmp
jmp
pusha
sbb
jmp
or
mov
loopne
xor
inc
cmp
stc
inc
pop
push
adc
cmp
xchg
mov
pop
sbb
and
pop
add
shl
pshufw
sub
aas
add
mov
sbb
and
test
sahf
and
push
add
jmp
add
fcom
add
adc
push
dec
popa
or
jno
int
sub
ret
sub
add
mov
loopne
movs
sub
mov
xchg
xchg
cmp
pusha
sub
fld
int
jno
ret
inc
add
xor
ss
sbb
push
lea
xchg
xor
or
mov
push
hlt
cmps
or
nop
ret
ins
add
dec
pusha
(bad)
rcr
xor
gs
adc
mov
add
aas
ror
inc
inc
sbb
jnp
adc
xchg
add
jo
dec
xor
adc
dec
daa
out
add
push
jb
aam
add
add
out
test
fldenv
push
sbb
add
pop
repnz
sub
pop
loop
add
dec
arpl
loopne
inc
mov
or
dec
inc
push
mov
and
inc
mov
ins
add
push
inc
cmp
inc
and
inc
inc
push
test
test
xor
in
or
push
push
push
inc
ror
add
pop
arpl
adc
xor
and
rcl
and
or
push
sub
or
or
(bad)
cmp
mov
call
xchg
inc
add
jo
ficomp
dec
push
push
mov
push
rol
nop
add
add
and
rcl
add
and
xchg
nop
pop
fwait
inc
add
jo
sbb
adc
add
rol
and
sub
nop
or
jbe
add
mov
je
add
punpcklbw
jbe
or
inc
add
or
sbb
adc
and
les
or
aaa
or
dec
xor
jno
mov
dec
mov
cmp
jns
add
xchg
push
push
pop
lock
gs
add
rol
and
and
test
add
adc
xchg
push
mov
push
das
loope
adc
add
push
cmp
or
mov
or
add
and
xchg
sub
nop
mov
and
add
sbb
add
scas
jae
das
xchg
jge
and
adc
test
xchg
mov
jmp
adc
xor
push
repz
outs
ret
sbb
add
add
stc
add
sub
inc
sub
add
add
cmp
add
inc
dec
sbb
mov
inc
sub
sbb
enter
xchg
and
sbb
cdq
mov
xor
cmp
sbb
xor
mov
les
push
or
xor
or
lock
int3
mov
test
dec
add
jno
adc
push
test
adc
jg
dec
test
jp
add
push
mov
add
mov
pop
dec
push
stos
(bad)
mov
push
pop
sub
mov
inc
rcl
add
add
add
add
or
sub
dec
rol
xor
add
cs
movs
sbb
outs
in
cmp
xor
and
xchg
xchg
enter
mov
aaa
fs
mov
xor
call
ror
mov
leave
rol
sub
push
adc
ret
adc
mov
or
les
sbb
fild
mov
shr
aad
push
inc
lea
dec
add
xchg
push
xchg
mov
mov
fimul
sub
add
add
ret
rol
add
test
mov
push
inc
add
xor
cmp
aas
add
inc
(bad)
jnp
pusha
cmp
aaa
call
(bad)
popa
ss
ret
inc
push
push
xor
inc
adc
inc
xchg
inc
mov
movs
add
lds
and
adc
mov
and
sub
pop
jge
hlt
and
and
jo
rcl
jo
icebp
iret
pop
sub
jecxz
xor
ret
xor
pop
sbb
aaa
xor
adc
and
push
pop
push
add
aas
and
ret
inc
or
and
mov
jecxz
or
jmp
(bad)
aas
mov
xor
add
pop
mov
sbb
cmp
sbb
or
inc
pusha
test
sbb
xor
add
(bad)
jp
(bad)
adc
sbb
push
inc
add
dec
ret
(bad)
mov
iret
push
inc
push
push
sub
xor
inc
and
push
imul
cdq
sub
in
aas
fwait
test
sub
out
sbb
push
or
mov
sbb
retf
aas
jno
xchg
inc
mov
cmp
and
dec
sbb
cs
cld
lock
ror
inc
loopne
sbb
cld
xor
test
loop
adc
inc
test
retf
(bad)
call
add
mov
and
add
lods
and
jb
cmp
sub
int
mov
mov
jno
fs
add
or
sub
push
fsub
sub
inc
and
pcmpgtw
xchg
xchg
add
mov
add
pop
sbb
repnz
xor
push
ret
mov
push
dec
or
pop
data16
les
add
pusha
xchg
into
xor
pushf
inc
mov
call
cs
pop
or
sbb
(bad)
int
sbb
arpl
or
dec
pop
or
adc
mov
cmp
or
jne
adc
mov
mov
repnz
fs
test
or
pusha
inc
adc
enter
adc
scas
xchg
stos
cdq
or
icebp
or
inc
cs
xor
pop
les
repnz
js
ins
(bad)
mov
mov
or
icebp
and
(bad)
je
js
inc
call
popa
push
fisubr
push
mov
xchg
sub
add
adc
movs
mov
or
call
or
xor
xor
or
inc
sbb
loopne
jmp
js
add
ss
mov
push
adc
arpl
or
neg
mov
adc
push
bound
add
mov
xchg
or
add
jno
or
pop
ret
jns
lock
ret
mov
and
jmp
xor
loope
and
movs
jns
xor
sub
pop
sar
rol
popa
or
sub
cld
cmp
sbb
fsubr
test
dec
fidiv
and
inc
pop
popa
add
mov
mov
mov
(bad)
pusha
cmp
shl
out
pop
sbb
sbb
add
add
sbb
or
sbb
cld
pop
xor
rol
dec
sar
adc
xor
call
lods
jg
int
mov
cmp
into
jmp
adc
xor
leave
fcmovnu
repz
and
or
lock
or
or
js
pop
xlat
clc
in
pushf
xor
jnp
push
or
rcr
enter
adc
add
adc
imul
bound
(bad)
stc
punpckhwd
add
add
cs
sbb
in
add
shl
inc
pop
rol
hlt
addr16
cmp
adc
call
enter
sbb
push
add
adc
sbb
test
xor
inc
das
xor
ret
xor
ficom
and
ins
adc
adc
ror
xor
or
(bad)
inc
or
mov
sub
sbb
jne
xchg
inc
inc
popf
out
or
loopne
sub
or
or
lds
jp
cmp
add
add
push
retf
daa
and
xchg
and
add
add
nop
mov
xchg
mov
call
cmp
(bad)
punpckhbw
mov
xchg
jg
bound
or
cmp
or
lock
fsub
or
pusha
mov
inc
and
xchg
ror
or
adc
adc
sbb
and
dec
fidiv
lahf
in
das
xor
push
or
mov
mov
movs
sbb
dec
pop
jmp
pop
rol
sub
sbb
inc
add
sbb
aas
cld
xchg
xchg
push
loop
adc
lds
js
pop
scas
mov
jmp
cmp
add
shl
ins
mov
pop
xchg
cmp
std
and
(bad)
sub
dec
lock
sbb
mov
inc
xor
nop
adc
pop
jmp
push
rcl
mov
sbb
mov
in
push
int3
and
sub
lds
rcl
add
inc
adc
xor
inc
mov
inc
rcr
icebp
inc
sub
mov
mov
jg
add
pop
rol
or
sahf
pop
add
and
sbb
or
dec
in
xor
inc
shr
add
loope
or
icebp
pop
aaa
sbb
xchg
xor
push
(bad)
or
add
xor
popf
jp
outs
push
popa
mov
jnp
dec
add
jno
or
mov
mov
icebp
xchg
fadd
adc
mov
test
add
ror
jl
pusha
xlat
fdiv
pop
scas
adc
adc
out
mov
push
daa
mov
add
and
add
pop
jnp
(bad)
or
adc
inc
xor
(bad)
call
push
and
lar
add
inc
ret
xor
sbb
adc
add
(bad)
cmovle
or
popa
and
mov
sbb
or
(bad)
push
sub
sbb
or
add
add
mov
jbe
add
or
lea
pop
loopne
aas
mov
sub
add
xchg
std
jne
pop
outs
inc
or
jo
cs
je
cmp
sub
add
mov
fistp
(bad)
int3
adc
dec
out
add
xchg
and
add
xchg
inc
out
pop
cmp
les
dec
or
and
jmp
add
mov
loopne
pop
dec
sbb
mov
adc
xchg
xor
add
mov
jp
loopne
or
add
pop
sub
add
and
ss
pop
dec
dec
add
pop
jbe
adc
cwde
add
dec
nop
inc
xor
mov
pop
test
mov
xchg
mov
lods
and
inc
adc
pusha
pop
push
or
add
add
imul
dec
xor
int3
xor
jb
and
add
push
add
adc
push
push
or
add
shl
add
es
inc
in
rol
mov
inc
mov
sbb
adc
add
inc
push
push
rol
pop
add
lods
mov
hlt
nop
add
add
add
inc
add
adc
inc
and
jb
pushw
push
add
pusha
jp
push
or
pusha
add
push
add
xor
(bad)
mov
jg
sbb
repz
add
add
pop
adc
add
rol
add
iret
and
xor
(bad)
mov
jbe
add
sub
jo
cld
loope
or
sub
or
mov
add
xor
dec
xchg
add
or
adc
pop
jo
and
pinsrw
rol
adc
cmp
add
loopne
jecxz
sub
arpl
pusha
lock
adc
add
and
bound
push
cmps
add
fmul
push
push
rol
inc
rol
test
or
jge
mov
cmp
and
push
push
ror
lods
js
adc
and
dec
add
das
mov
jp
adc
add
push
add
add
outs
rcl
pop
mov
xlat
adc
and
add
and
inc
inc
lock
add
adc
adc
pop
loopne
add
mov
pop
lods
sub
mov
add
sbb
pop
sbb
(bad)
lock
add
add
inc
pop
stos
add
adc
retf
or
add
adc
xor
mov
xor
(bad)
cmps
push
jp
add
and
(bad)
rol
mov
retf
test
add
add
pop
nop
cs
add
mov
cmp
sbb
push
sbb
xchg
or
push
sbb
xchg
add
pop
mov
pop
or
ins
and
push
movs
push
add
sahf
bound
jb
int3
lock
es
push
or
sub
rol
cmp
add
pop
push
sar
add
(bad)
or
adc
and
add
or
inc
sub
add
add
cmp
add
inc
dec
sbb
mov
inc
sbb
cmp
and
cmp
mov
lds
enter
jg
inc
mov
inc
ret
xor
xor
mov
push
or
(bad)
lods
arpl
and
and
jmp
int3
lock
jbe
sub
hlt
and
push
sbb
dec
repz
rol
aas
adc
(bad)
push
jmp
ins
fld
pop
xor
mov
test
xor
test
cmp
ins
inc
popa
(bad)
fnstenv
xchg
addr16
dec
and
cmc
jmp
add
push
adc
test
pop
sub
jmp
cmp
inc
push
or
mov
push
cmp
adc
(bad)
cmp
adc
adc
lock
push
xchg
sbb
mov
inc
and
mov
mov
mov
or
inc
pop
and
popf
mov
test
mov
add
shl
push
fadd
mov
add
add
cld
mov
lock
hlt
jne
ret
lgdtd
push
(bad)
add
jae
xor
sbb
pusha
add
inc
or
push
push
test
enter
movs
inc
icebp
test
push
mov
ret
int3
push
lea
push
iret
lock
dec
sbb
icebp
inc
push
sub
or
or
adc
dec
loopne
sub
ins
cdq
mov
push
mov
rcr
dec
xor
daa
adc
dec
and
es
lds
mov
test
inc
and
inc
xchg
cmp
dec
ss
leave
add
push
cmp
add
loop
add
sar
mov
cmp
inc
xchg
push
add
xchg
sub
(bad)
jle
and
add
inc
adc
movs
cld
adc
pop
sahf
push
push
xor
dec
ror
or
jo
mov
cld
jae
mov
or
pop
aad
and
xor
sbb
inc
or
dec
adc
jge
add
push
dec
inc
add
inc
ins
cld
add
inc
add
cmp
ret
mov
cld
mov
lea
cld
jae
or
xchg
ret
jo
pop
and
data16
pop
adc
data16
inc
mov
and
jo
sbb
or
and
loope
(bad)
pushf
xchg
xchg
adc
cdq
mov
sub
fwait
popa
adc
and
sbb
pop
xchg
add
movs
inc
fimul
stc
ret
xchg
push
jl
add
push
pop
loope
and
mov
ror
adc
add
popf
jno
pop
sbb
pavgb
aas
adc
(bad)
cmp
push
add
mov
ins
push
inc
push
push
cwde
mov
ins
mov
jo
cdq
add
es
xor
or
mov
add
ins
pusha
(bad)
(bad)
sbb
ja
test
adc
push
nop
push
pop
push
sub
and
fwait
or
test
aas
inc
mov
aam
enter
or
add
xchg
xor
pop
add
fisubr
jb
and
adc
and
xchg
lds
or
or
dec
sbb
dec
and
inc
sub
shl
xchg
icebp
sti
xchg
call
push
push
add
loopne
xor
xchg
sub
inc
add
and
mov
loopne
sbb
add
add
mov
and
lods
loopne
push
das
in
jg
mov
aaa
cmp
iret
test
dec
(bad)
jle
xchg
js
sbb
cmp
sbb
add
cmp
and
adc
push
mov
dec
mov
sbb
arpl
inc
je
add
arpl
sub
test
(bad)
call
xchg
cs
pusha
adc
or
add
fadd
xchg
inc
or
push
call
movs
stos
std
mov
adc
rol
push
or
xor
pop
(bad)
sbb
jecxz
sbb
xchg
les
pop
clc
pop
sub
xchg
and
pusha
xchg
pop
mov
mov
aaa
call
cmps
or
or
popa
pop
jle
inc
add
mov
adc
rcl
mov
retf
clc
(bad)
or
and
shl
sub
xchg
cwde
mov
and
rol
jmp
rol
mov
add
addr16
mov
mov
mov
add
push
popa
pop
adc
rol
fwait
push
cdq
push
hlt
rol
mov
push
outs
js
jle
cli
inc
and
jp
cmp
adc
inc
call
adc
pop
rcl
fs
cli
and
and
inc
or
les
sub
stc
or
dec
movs
sbb
call
test
cld
mov
sbb
xchg
lea
jecxz
and
inc
and
rcr
sub
hlt
mov
adc
arpl
movs
rol
push
xchg
shld
push
outs
and
pop
mov
sub
xor
jno
shl
add
dec
xor
adc
inc
xchg
or
jne
inc
retf
sbb
jne
xor
jb
imul
ret
aas
sub
pushf
or
or
pusha
add
je
add
and
or
xchg
and
(bad)
mov
sbb
cwde
or
loopne
push
push
imul
shl
mov
nop
pop
call
or
cmp
adc
xor
add
js
or
or
jl
jne
test
pop
out
inc
pop
cmp
popa
je
xor
subps
test
cmp
or
xor
add
or
das
mov
adc
push
xor
sub
add
nop
sbb
sbb
adc
adc
rcl
cwde
aam
test
xchg
call
or
fldenv
push
cmp
push
outs
push
and
(bad)
or
sbb
mov
pop
sbb
(bad)
sbb
loop
add
mov
loope
add
mov
daa
mov
xchg
mov
mov
add
inc
add
pop
add
aas
add
jmp
and
sbb
daa
adc
push
add
and
xchg
call
or
inc
add
inc
xchg
mov
add
cmp
loope
mov
add
xchg
out
xor
mov
add
push
inc
push
or
inc
add
adc
add
pop
rcl
cmp
call
add
pop
sbb
and
add
nop
add
pop
and
add
mov
sbb
xor
inc
xor
dec
rol
retf
adc
ror
and
fidiv
or
and
add
adc
adc
imul
sub
and
mov
(bad)
push
lea
mov
add
and
jnp
test
sbb
inc
push
mov
fstp
and
xchg
dec
ret
add
inc
push
xor
add
add
mov
or
loopne
add
shl
cmp
add
nop
mov
mov
add
pop
cmps
add
pop
sbb
add
push
add
lods
and
add
mov
mov
rcl
jecxz
jp
xchg
or
add
add
sar
push
test
adc
add
rol
sbb
adc
and
or
xor
add
in
loopne
push
je
fxch
mov
test
sub
cmp
loope
sbb
inc
ror
fadd
sbb
mov
adc
mov
cmp
add
inc
inc
hlt
inc
add
xor
loopne
push
cmp
push
sub
or
pop
and
inc
inc
rol
pop
js
sbb
mov
adc
cli
mov
div
pop
and
add
movs
or
mov
(bad)
lock
add
add
or
push
cmp
jp
ja
jae
add
inc
pop
mov
cmp
xor
pop
icebp
add
lock
and
jb
adc
add
add
add
out
cs
sbb
push
xor
xchg
cmp
sub
ja
add
pop
mov
jb
add
rol
rol
add
cmps
adc
sets
push
mov
je
ja
jno
jl
or
add
adc
test
mov
jns
aaa
push
adc
nop
add
pusha
pop
sbb
add
add
and
add
arpl
pusha
push
fs
xchg
imul
push
rol
dec
shr
inc
xchg
xor
cs
pop
and
mul
cmp
sub
adc
dec
or
add
push
jnp
jecxz
add
jl
enter
cmp
inc
adc
inc
or
add
data16
mov
or
add
jle
push
add
mov
scas
push
sbb
mov
clc
mov
mov
(bad)
mov
pop
icebp
mov
clc
lea
mov
sbb
adc
and
add
sub
inc
sub
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
in
es
lds
enter
adc
adc
mov
mov
inc
nop
add
sbb
iret
movs
retf
mov
outs
cmps
int
fwait
outs
jmp
inc
or
mov
add
push
outs
retf
movs
mov
in
jbe
xor
scas
xchg
ss
call
outs
add
sbb
push
in
inc
call
xchg
out
lahf
add
cwde
push
(bad)
sbb
test
fist
push
mov
fidivr
jmp
or
jb
test
rol
jmp
data16
in
aas
rol
mov
pusha
push
(bad)
nop
dec
sbb
adc
fsub
das
mov
shl
call
push
shl
push
mov
push
pop
push
push
cmp
inc
or
and
loope
test
push
or
fidiv
xor
push
loope
add
rol
sbb
aaa
sub
add
nop
lock
dec
inc
ror
jne
pop
inc
imul
add
pop
mov
adc
cmp
or
int
inc
add
jno
add
pop
adc
sub
sbb
xor
mov
rcl
mov
push
jl
push
sub
test
xor
dec
add
mov
nop
add
test
cmp
nop
pop
ja
repnz
push
rol
retf
push
and
pop
(bad)
fsub
mov
pushf
cmp
inc
mov
clc
frstor
add
push
call
push
inc
nop
sbb
mov
(bad)
sbb
stos
call
or
pushf
jo
shl
bound
dec
add
adc
cmp
mov
add
dec
sub
int3
pop
inc
add
jo
or
enter
mov
mov
aaa
dec
and
cmp
or
mov
add
inc
mov
imul
(bad)
cld
mov
push
add
in
or
call
lock
push
mov
or
add
ret
sbb
push
sbb
shl
cmp
adc
jg
add
inc
inc
and
cmp
iret
sub
inc
call
push
rcl
test
cld
ret
dec
sbb
jl
ret
sub
add
cld
push
ror
jo
push
mov
and
adc
push
add
jae
pop
enter
xor
ret
push
mov
nop
retf
xor
pop
or
and
lods
test
jnp
loop
dec
sbb
xchg
or
and
push
cmps
xor
xor
cmp
call
add
enter
ror
rol
add
pusha
or
inc
xchg
int
xlat
push
inc
mov
inc
sbb
scas
jge
fisttp
sbb
cmp
repz
and
add
mov
push
retf
inc
aad
adc
test
and
inc
add
rcr
mov
mov
or
sub
adc
or
xor
fs
add
dec
rol
sub
retf
ret
cmp
mov
push
(bad)
or
inc
(bad)
ins
mov
(bad)
xor
and
data16
jecxz
xor
pop
or
add
lods
xor
push
inc
inc
or
adc
or
sbb
test
sbb
js
sbb
les
pusha
push
mov
push
movs
add
sub
jmp
or
inc
add
and
or
xor
inc
or
pop
enter
xlat
mov
mov
or
lock
ins
je
pop
push
mov
xor
rol
xchg
ret
(bad)
xor
fdiv
and
mov
add
jo
push
ret
das
pusha
test
add
push
aas
cwde
xor
mov
or
les
dec
dec
mov
inc
add
sbb
jl
adc
lea
shl
mov
ret
shr
shr
add
loope
mov
and
loopne
or
inc
add
call
or
loopne
es
add
pushf
add
push
sbb
or
adc
cmp
sbb
enter
fimul
add
mov
mov
add
inc
data16
fst
add
nop
ret
and
jbe
sbb
add
mov
add
mov
fadd
push
(bad)
loopne
xor
mov
xor
mov
push
mov
mov
or
pop
mov
adc
add
jo
or
cmps
xor
push
jae
add
fadd
mov
and
sbb
movs
jno
push
data16
xchg
or
adc
mov
add
mov
xor
xchg
mov
adc
ror
test
lar
sbb
arpl
xchg
test
or
scas
xchg
dec
sbb
xchg
xchg
lock
cwde
add
or
and
int3
and
xbegin
or
rol
cmp
ins
push
bound
dec
dec
bound
stc
popa
movs
add
inc
mov
movs
mov
sub
nop
adc
jl
push
jns
add
inc
add
sbb
shl
and
test
sbb
push
jnp
lods
adc
push
or
add
fadd
fadd
adc
retf
push
cmp
sbb
dec
in
push
adc
arpl
adc
rcl
icebp
lea
cld
ret
pop
pop
inc
adc
xor
loopne
rcr
mov
dec
and
and
xchg
sbb
retfw
add
sbb
add
inc
and
nop
gs
xchg
test
ror
js
sub
movs
add
aad
rcr
jno
cmp
rol
push
sbb
add
jnp
add
and
ja
sbb
add
xor
clc
sar
xchg
ret
sbb
add
(bad)
inc
adc
inc
cmp
adc
mov
adc
or
push
add
js
psrlw
push
adc
xchg
mov
push
call
and
inc
mov
add
nop
rol
xor
adc
ror
cdq
into
dec
add
adc
or
adc
aaa
clc
pusha
xchg
loopne
or
lea
stc
mov
and
adc
jo
inc
or
and
int
or
adc
cs
loope
mov
cwde
add
xor
adc
test
or
add
xchg
inc
nop
sub
loope
cs
pop
inc
pop
cmps
add
pop
adc
ds
ss
std
push
add
pop
and
add
out
xchg
jp
sar
sbb
push
(bad)
dec
mov
movs
cli
loope
dec
pop
sbb
xor
int
js
repz
sbb
rol
movs
and
add
inc
aam
mov
(bad)
ds
dec
sub
adc
test
call
sub
adc
jae
jmp
sbb
adc
and
add
or
inc
sub
add
add
cmp
add
inc
dec
sbb
mov
inc
xor
sub
mov
xor
add
mov
or
pusha
mov
inc
pop
je
jb
mov
pop
imul
add
jns
nop
add
pusha
xor
mov
xor
sbb
ins
or
nop
push
into
xchg
or
push
imul
(bad)
push
pop
lock
push
jmp
sar
adc
inc
dec
jne
jmp
js
bound
lock
in
pop
scas
and
vmovdqa
loopne
fs
add
xor
inc
ret
dec
xchg
sub
pop
test
pop
mov
push
lods
dec
nop
loopne
(bad)
mov
adc
xor
jbe
ror
xor
sub
mov
add
fidivr
cdq
push
dec
ins
rol
inc
jmp
inc
pusha
rol
dec
pop
popa
inc
enter
adc
or
pusha
and
add
call
or
mov
inc
nop
inc
xchg
xchg
push
dec
cmps
xor
(bad)
movs
mov
imul
je
int
loope
les
add
loopne
pop
stos
mov
icebp
add
(bad)
pop
and
xchg
test
push
lods
xchg
add
adc
pop
mov
fsubr
pop
push
enter
sbb
jo
repnz
and
or
movs
call
in
ret
add
repz
aas
jmp
mov
movs
cld
mov
and
sub
jo
add
dec
mov
or
pop
xchg
pop
mov
adc
lods
xchg
cmp
add
push
inc
popa
shr
and
fs
push
adc
add
inc
jo
mov
push
add
inc
add
sub
mov
rcl
rcr
cdq
(bad)
call
mov
ror
movups
ins
mov
add
adc
cmps
es
add
sbb
mov
les
sbb
and
mov
sub
or
and
fcom
or
js
test
sbb
adc
or
lods
adc
and
xchg
inc
lods
sbb
cld
jecxz
push
scas
shl
inc
push
or
sbb
icebp
lods
sbb
add
ret
sbb
inc
mov
les
inc
or
test
or
sub
add
or
fwait
jo
add
and
lods
adc
sub
mov
sub
aam
sbb
pop
dec
push
call
pushf
and
mov
int3
push
in
cld
iret
sbb
xchg
(bad)
xor
pusha
add
add
hlt
push
rcl
les
int3
loopne
pop
add
inc
adc
rol
sar
cmp
mov
ss
and
mov
jns
retf
test
xchg
int
fisub
mov
loopne
(bad)
or
cs
add
mov
sbb
sub
cmp
mov
repz
xor
push
jecxz
add
xor
mov
fmul
out
mov
cwde
mov
inc
sbb
sbb
push
cmp
add
push
or
jo
icebp
dec
xor
fsubr
pop
dec
add
jno
pop
jno
add
or
sti
fisubr
and
nop
and
sbb
enter
mov
add
pusha
les
cmp
sbb
mov
sbb
push
xchg
add
ror
loopne
scas
mov
aaa
shl
loop
xchg
std
jecxz
mov
loope
add
rcl
cwde
add
push
inc
mov
inc
pop
cwde
add
pop
add
pop
rol
pop
inc
scas
adc
xchg
mov
and
add
or
jns
add
inc
sbb
ror
loope
fnstcw
and
push
sub
addr16
jo
jo
adc
mov
inc
clc
add
dec
add
dec
add
xchg
call
mov
and
or
lea
mov
hlt
js
xor
leave
add
jmp
xlat
and
add
cmp
(bad)
aaa
jle
add
pop
adc
jl
add
sub
mov
popa
or
add
retf
cmp
mov
inc
cmp
and
cmps
add
inc
or
dec
xor
int3
popa
test
bound
int3
inc
xor
enter
popa
or
add
jo
adc
and
pop
or
add
sbb
adc
mov
nop
jl
ret
adc
lock
xor
ror
fwait
push
or
or
or
nop
inc
adc
mov
jmp
dec
fsub
mov
aaa
or
sub
inc
pop
out
cmp
inc
or
call
or
push
les
jp
sbb
nop
outs
cs
add
dec
les
ficom
movs
xchg
in
xor
add
mov
and
or
and
test
in
and
pop
adc
sub
mov
or
add
cmps
adc
ret
aam
xor
jecxz
xor
cli
pop
mov
sub
cmp
cmp
sbb
add
sar
inc
enter
inc
xor
add
call
add
jmp
inc
or
pop
rcl
mov
das
mov
or
jae
mov
inc
push
adc
mov
or
out
movs
jmp
jge
inc
add
mov
add
sub
or
clc
sar
loop
adc
pushf
rol
mov
sar
and
sub
cmp
popa
push
fmul
inc
adc
add
outs
cmp
out
imul
jle
or
dec
cmp
jmp
popa
test
mov
xor
fimul
adc
add
inc
inc
add
add
push
xor
mov
je
adc
xor
sbb
and
dec
icebp
popf
push
cmp
add
repnz
xchg
xchg
xor
add
test
repnz
dec
(bad)
or
push
xor
add
and
stos
inc
addr16
loopne
xchg
rol
sbb
adc
sbb
or
cmp
push
mov
pusha
sbb
jmp
jo
pop
and
sbb
mov
pop
push
adc
sub
inc
xchg
sub
adc
xchg
mov
pop
sbb
mov
mov
push
arpl
or
add
sub
add
xchg
add
popf
sub
arpl
out
cmp
add
sub
jo
mov
mov
inc
sub
push
mov
fdiv
mov
or
sbb
rol
or
scas
mov
add
or
inc
push
test
popf
sbb
inc
xchg
test
mov
les
dec
mov
scas
addr16
mov
test
sbb
rol
inc
xor
mov
mov
pop
or
xor
add
or
in
or
and
test
add
in
and
inc
or
push
push
xor
sbb
ror
xor
(bad)
lock
xor
add
loop
ss
add
push
xchg
mov
add
mov
iret
xor
loope
push
adc
mov
je
ret
jo
and
add
sbb
add
sub
or
sub
push
push
loopne
xlat
ss
push
push
add
adc
pop
mov
mov
xor
pop
add
inc
js
push
jbe
lea
mov
mov
mov
loopne
push
add
(bad)
or
or
sub
pop
inc
test
dec
lea
inc
or
daa
shl
ds
and
pop
pusha
rcl
mov
add
sbb
test
add
leave
and
repnz
xchg
sub
pusha
or
nop
mov
and
adc
mov
push
ss
test
mov
or
add
icebp
or
or
push
jge
add
je
add
mov
je
add
punpcklbw
mov
pop
es
push
mov
add
or
sbb
pop
adc
and
les
or
push
xchg
rol
or
adc
push
ror
nop
add
jo
push
nop
add
adc
push
add
add
or
test
imul
enter
push
push
pop
add
push
adc
xor
ja
or
add
das
les
imul
and
mov
add
mov
dec
mov
nop
add
and
imul
ins
test
adc
xchg
xor
jno
adc
jnp
sub
or
adc
mov
xor
jmp
and
test
shr
adc
add
and
add
pop
add
add
add
add
cmp
add
inc
dec
sbb
mov
inc
sub
sbb
enter
xchg
and
sbb
cdq
mov
xor
cmp
sbb
xor
mov
les
push
or
xor
or
lock
int3
mov
test
dec
add
jno
adc
push
test
adc
jg
dec
test
jp
add
push
mov
add
mov
pop
dec
push
stos
(bad)
mov
push
pop
sub
mov
inc
rcl
add
add
add
add
or
sub
dec
rol
xor
add
cs
movs
sbb
outs
in
cmp
xor
and
xchg
xchg
enter
mov
aaa
fs
mov
xor
call
ror
mov
leave
rol
sub
push
adc
ret
adc
mov
or
les
sbb
fild
mov
shr
aad
push
inc
lea
dec
add
xchg
push
xchg
mov
mov
fimul
sub
add
add
ret
rol
add
test
mov
push
inc
add
xor
cmp
aas
add
inc
(bad)
jnp
pusha
cmp
aaa
call
(bad)
popa
ss
ret
inc
push
push
xor
inc
adc
inc
xchg
inc
mov
movs
add
lds
and
adc
mov
and
sub
pop
jge
hlt
and
and
jo
rcl
jo
icebp
iret
pop
sub
jecxz
xor
ret
xor
pop
sbb
aaa
xor
adc
and
push
pop
push
add
aas
and
ret
inc
or
and
mov
jecxz
or
jmp
(bad)
aas
mov
xor
add
pop
mov
sbb
cmp
sbb
or
inc
pusha
test
sbb
xor
add
(bad)
jp
(bad)
adc
sbb
push
inc
add
dec
ret
(bad)
mov
iret
push
inc
push
push
sub
xor
inc
and
push
imul
cdq
sub
in
aas
fwait
test
sub
out
sbb
push
or
mov
sbb
retf
aas
jno
xchg
inc
mov
cmp
and
dec
sbb
cs
cld
lock
ror
inc
loopne
sbb
cld
xor
test
loop
adc
inc
test
retf
(bad)
call
add
mov
and
add
lods
and
jb
cmp
sub
int
mov
mov
jno
fs
add
or
sub
push
fsub
sub
inc
and
pcmpgtw
xchg
xchg
add
mov
add
pop
sbb
repnz
xor
push
ret
mov
push
dec
or
pop
data16
les
add
pusha
xchg
into
xor
pushf
inc
mov
call
cs
pop
or
sbb
(bad)
int
sbb
arpl
or
dec
pop
or
adc
mov
cmp
or
jne
adc
mov
mov
repnz
fs
test
or
pusha
inc
adc
enter
adc
scas
xchg
stos
cdq
or
icebp
or
inc
cs
xor
pop
les
repnz
js
ins
(bad)
mov
mov
or
icebp
and
(bad)
je
js
inc
call
popa
push
fisubr
push
mov
xchg
sub
add
adc
movs
mov
or
call
or
xor
xor
or
inc
sbb
loopne
jmp
js
add
ss
mov
push
adc
arpl
or
neg
mov
adc
push
bound
add
mov
xchg
or
add
jno
or
pop
ret
jns
lock
ret
mov
and
jmp
xor
loope
and
movs
jns
xor
sub
pop
sar
rol
popa
or
sub
cld
cmp
sbb
fsubr
test
dec
fidiv
and
inc
pop
popa
add
mov
mov
mov
(bad)
pusha
cmp
shl
out
pop
sbb
sbb
add
add
sbb
or
sbb
cld
pop
xor
rol
dec
sar
adc
xor
call
lods
jg
int
mov
cmp
into
jmp
adc
xor
leave
fcmovnu
repz
and
or
lock
or
or
js
pop
xlat
clc
in
pushf
xor
jnp
push
or
rcr
enter
adc
add
adc
imul
bound
(bad)
stc
punpckhwd
add
add
cs
sbb
in
add
shl
inc
pop
rol
hlt
addr16
cmp
adc
call
enter
sbb
push
add
adc
sbb
test
xor
inc
das
xor
ret
xor
ficom
and
ins
adc
adc
ror
xor
or
(bad)
inc
or
mov
sub
sbb
jne
xchg
inc
inc
popf
out
or
loopne
sub
or
or
lds
jp
cmp
add
add
push
retf
daa
and
xchg
and
add
add
nop
mov
xchg
mov
call
cmp
(bad)
punpckhbw
mov
xchg
jg
bound
or
cmp
or
lock
fsub
or
pusha
mov
inc
and
xchg
ror
or
adc
adc
sbb
and
dec
fidiv
lahf
in
das
xor
push
or
mov
mov
movs
sbb
dec
pop
jmp
pop
rol
sub
sbb
inc
add
sbb
aas
cld
xchg
xchg
push
loop
adc
lds
js
pop
scas
mov
jmp
cmp
add
shl
ins
mov
pop
xchg
cmp
std
and
(bad)
sub
dec
lock
sbb
mov
inc
xor
nop
adc
pop
jmp
push
rcl
mov
sbb
mov
in
push
int3
and
sub
lds
rcl
add
inc
adc
xor
inc
mov
inc
rcr
icebp
inc
sub
mov
mov
jg
add
pop
rol
or
sahf
pop
add
and
sbb
or
dec
in
xor
inc
shr
add
loope
or
icebp
pop
aaa
sbb
xchg
xor
push
(bad)
or
add
xor
popf
jp
outs
push
popa
mov
jnp
dec
add
jno
or
mov
mov
icebp
xchg
fadd
adc
mov
test
add
ror
jl
pusha
xlat
fdiv
pop
scas
adc
adc
out
mov
push
daa
mov
add
and
add
pop
jnp
(bad)
or
adc
inc
xor
(bad)
call
push
and
lar
add
inc
ret
xor
sbb
adc
add
(bad)
cmovle
or
popa
and
mov
sbb
or
(bad)
push
sub
sbb
or
add
add
mov
jbe
add
or
lea
pop
loopne
aas
mov
sub
add
xchg
std
jne
pop
outs
inc
or
jo
cs
je
cmp
sub
add
mov
fistp
(bad)
int3
adc
dec
out
add
xchg
and
add
xchg
inc
out
pop
cmp
les
dec
or
and
jmp
add
mov
loopne
pop
dec
sbb
mov
adc
xchg
xor
add
mov
jp
loopne
or
add
pop
sub
add
and
ss
pop
dec
dec
add
pop
jbe
adc
cwde
add
dec
nop
inc
xor
mov
pop
test
mov
xchg
mov
lods
and
inc
adc
pusha
pop
push
or
add
add
imul
dec
xor
int3
xor
jb
and
add
push
add
adc
push
push
or
add
shl
add
es
inc
in
rol
mov
inc
mov
sbb
adc
add
inc
push
push
rol
pop
add
lods
mov
hlt
nop
add
add
add
inc
add
adc
inc
and
jb
pushw
push
add
pusha
jp
push
or
pusha
add
push
add
xor
(bad)
mov
jg
sbb
repz
add
add
pop
adc
add
rol
add
iret
and
xor
(bad)
mov
jbe
add
sub
jo
cld
loope
or
sub
or
mov
add
xor
dec
xchg
add
or
adc
pop
jo
and
pinsrw
rol
adc
cmp
add
loopne
jecxz
sub
arpl
pusha
lock
adc
add
and
bound
push
cmps
add
fmul
push
push
rol
inc
rol
test
or
jge
mov
cmp
and
push
push
ror
lods
js
adc
and
dec
add
das
mov
jp
adc
add
push
add
add
outs
rcl
pop
mov
xlat
adc
and
add
and
inc
inc
lock
add
adc
adc
pop
loopne
add
mov
pop
lods
sub
mov
add
sbb
pop
sbb
(bad)
lock
add
add
inc
pop
stos
add
adc
retf
or
add
adc
xor
mov
xor
(bad)
cmps
push
jp
add
and
(bad)
rol
mov
retf
test
add
add
pop
nop
cs
add
mov
cmp
sbb
push
sbb
xchg
or
push
sbb
xchg
add
pop
mov
pop
or
ins
and
push
movs
push
add
sahf
bound
jb
int3
lock
es
push
or
sub
rol
cmp
add
pop
push
sar
add
(bad)
or
adc
cmp
push
sbb
add
add
add
dec
add
jno
add
add
add
popa
xor
sbb
or
add
jo
add
add
jo
add
inc
cmp
popa
xor
xor
idiv
add
retf
jmp
push
dec
sbb
ret
add
mov
mov
cli
jae
retf
popf
arpl
(bad)
fild
(bad)
rol
cdq
push
add
(bad)
sub
in
mov
dec
std
call
add
xchg
(bad)
cld
mov
std
test
cmps
add
std
sti
mov
push
(bad)
std
call
out
enter
(bad)
cld
jmp
dec
in
add
xchg
std
xlat
outs
mov
inc
(bad)
inc
(bad)
(bad)
fsub
xor
std
enter
mov
push
push
add
std
pop
stos
jno
jmp
pop
enter
cmps
add
lock
mov
(bad)
call
(bad)
cli
dec
loope
mov
cmps
jp
test
mov
(bad)
cli
add
fdivr
std
mov
jmp
adc
push
(bad)
call
dec
test
cs
push
sti
mov
xlat
popf
add
jmp
inc
sbb
out
(bad)
mov
jns
xchg
mov
call
std
adc
loope
jmp
mov
shl
jmp
imul
sti
mov
cli
scas
add
out
test
fcmovbe
sar
daa
loop
add
mov
fcmovb
popf
push
or
(bad)
inc
stos
add
dec
or
mov
(bad)
call
adc
mov
sti
mov
(bad)
out
dec
mov
(bad)
mov
(bad)
mov
int3
xchg
sub
xchg
adc
mov
std
enter
jae
leave
adc
jecxz
mov
loop
in
or
(bad)
inc
daa
std
pusha
sbb
jmp
sti
mov
xchg
dec
add
hlt
out
(bad)
in
ja
imul
test
std
repz
jecxz
lds
(bad)
mov
cmc
out
loope
jb
push
jmp
test
sbb
sahf
sbb
push
shr
ret
mov
lods
push
pop
repnz
out
lods
add
out
in
mov
lods
xchg
add
fisttp
inc
push
dec
or
fmul
stos
add
icebp
mov
mov
cmc
loop
repz
xlat
outs
xor
mov
jmp
and
test
rol
out
push
in
in
faddp
sub
div
jae
das
mov
or
clc
hlt
or
push
add
mov
out
fild
out
lds
xchg
pop
lss
imul
pop
icebp
retf
add
mov
cld
clc
cld
test
sbb
lods
add
mov
clc
lods
adc
sahf
dec
icebp
repz
jge
cli
stos
add
test
or
out
add
mov
(bad)
out
int
ret
adc
icebp
add
icebp
lock
std
ror
cli
mov
fisub
in
in
sti
stc
or
out
and
int
in
fistp
xchg
inc
sub
cmc
stc
icebp
icebp
div
mov
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
push
push
sbb
or
adc
dec
cmp
bound
popa
inc
sub
push
popa
xchg
les
inc
sub
lock
dec
add
jae
sbb
sbb
adc
jae
popa
pop
and
rol
push
xor
rol
push
test
sbb
inc
and
push
push
cmp
pusha
icebp
inc
stos
test
jp
sub
sub
xor
lods
ror
sub
loope
retf
cmp
cs
add
fs
sbb
jmp
pusha
loop
pop
daa
dec
xchg
pop
js
and
and
or
cdq
add
sub
daa
or
inc
push
out
test
mov
bound
add
adc
dec
xchg
and
(bad)
movs
sub
je
xor
js
inc
les
mov
pop
retf
adc
inc
inc
dec
xor
adc
jmp
lods
rol
mov
or
rcl
shl
and
or
inc
or
or
adc
fdiv
sbb
pop
add
sub
inc
xor
mov
or
or
dec
or
and
sub
or
sub
icebp
add
rol
adc
adc
mov
or
dec
or
xchg
add
mov
or
jl
loop
scas
pop
mov
add
adc
dec
add
inc
movs
inc
or
sub
or
or
sub
add
dec
push
xlat
adc
test
add
cmp
dec
or
cdq
xchg
inc
add
inc
ret
mov
push
shl
loopne
daa
movs
sahf
mov
sub
inc
(bad)
pushf
push
xchg
mov
dec
or
adc
adc
add
mov
rol
and
xor
enter
push
pop
sub
xor
xchg
jp
push
mov
rol
mov
jg
loopne
add
test
dec
and
or
icebp
or
dec
push
add
jne
adc
add
mov
push
nop
sub
mov
pop
mov
dec
or
ins
inc
sbb
or
pusha
inc
imul
cli
dec
sbb
inc
in
pop
inc
add
or
or
add
dec
or
les
add
and
mov
sbb
sub
or
or
inc
pop
adc
in
sar
and
jge
xor
inc
pop
dec
mov
js
and
(bad)
adc
pop
retf
adc
retf
sbb
(bad)
push
sbb
aaa
fidivr
inc
dec
jo
adc
ret
mov
arpl
or
(bad)
enter
(bad)
test
sar
sub
add
xor
ret
push
jge
addr16
pop
sbb
add
mov
add
bound
add
add
test
int
aaa
pusha
bound
call
int
jo
or
lods
repz
inc
add
(bad)
xor
and
add
cmp
mov
(bad)
in
cmps
fidivr
add
pop
repz
mov
inc
sbb
vunpckhps
sub
inc
imul
dec
fdivrp
adc
or
sbb
in
ret
add
loopne
add
loopne
pop
mov
jecxz
xor
xor
rol
dec
sub
int3
cli
aam
call
push
add
clc
xchg
push
js
add
sar
adc
loope
test
test
push
jo
jmp
mov
enter
add
cmp
or
pop
inc
xchg
lods
popa
push
jns
ds
out
pop
fild
adc
lock
loope
xor
lods
mov
lea
fild
adc
mov
loop
pop
ins
fwait
aas
push
or
call
and
dec
mov
mov
lea
scas
jne
mov
(bad)
add
inc
or
jno
or
add
cwde
mov
jb
cwde
adc
sub
and
ret
mov
add
sub
jbe
sub
xor
inc
and
test
inc
push
inc
and
and
mov
int
repz
sub
and
inc
and
fwait
loopne
movs
mov
cwde
mov
push
xchg
jo
and
inc
pop
lods
jo
add
rol
test
add
lds
mov
cmp
or
adc
inc
push
and
add
and
add
ret
add
inc
and
rcr
adc
push
in
loope
add
jbe
inc
inc
adc
mov
xchg
add
sub
or
inc
push
add
rcl
rol
and
lods
and
add
or
inc
xchg
adc
push
pop
ret
pusha
lea
xor
add
add
xor
and
cmc
lods
cld
mov
add
aaa
fadd
sub
sar
add
lock
push
cmp
or
gs
lods
imul
imul
push
mov
push
sbb
outs
data16
adc
hlt
ins
or
scas
jno
xor
loope
into
jmp
add
jno
dec
mov
shr
rol
mov
das
add
inc
add
mov
or
ret
push
lods
add
lods
dec
push
push
lea
bound
sub
jne
xor
ret
rol
sub
adc
lds
arpl
sub
mov
add
dec
outs
jp
push
sub
push
xor
add
dec
add
push
mov
call
aam
push
add
je
loopne
aam
or
fsubr
or
xor
and
xor
aam
add
test
or
mov
sbb
adc
or
xchg
adc
add
(bad)
lock
or
xor
lock
inc
sbb
inc
sbb
in
or
inc
add
mov
mov
add
pusha
inc
or
adc
in
clc
and
and
or
or
or
add
loopne
xor
loop
sbb
test
mov
daa
cmp
or
or
push
daa
bound
push
mov
cmp
mov
das
in
mov
adc
and
and
fsub
inc
or
test
call
xchg
and
adc
adc
mov
inc
add
mov
xor
cld
inc
add
pop
ret
clc
loopne
(bad)
push
rol
inc
or
mov
or
fwait
xor
adc
or
and
add
or
inc
sub
add
add
or
add
or
mov
shl
push
ret
leave
lahf
rol
inc
adc
and
add
adc
jno
bound
js
nop
push
and
xchg
js
arpl
inc
movs
out
mov
cmp
mov
jnp
jmp
pop
stos
popa
mov
push
add
inc
iret
xchg
xor
adc
lods
and
nop
es
dec
xchg
cs
mov
inc
pop
dec
pop
and
sbb
mov
ret
arpl
sub
repz
dec
xchg
push
loopne
add
addr16
mov
add
sub
dec
or
adc
xchg
and
les
and
fnstsw
dec
repz
inc
adc
mov
jnp
push
lock
out
mov
and
add
mov
dec
jecxz
inc
fcomp
xlat
mov
sbb
dec
bound
mov
loopne
xchg
ror
add
maskmovq
test
int3
adc
iret
mov
jae
jns
or
cld
jecxz
push
ins
aam
inc
sub
pop
repz
and
jb
or
dec
add
adc
jo
mov
xor
push
and
(bad)
(bad)
adc
in
add
inc
or
cwde
mov
test
mov
aam
aas
xchg
hlt
repz
sub
sbb
lea
add
std
repz
scas
adc
sahf
add
push
leave
mov
xor
or
ins
mov
notrack
iret
xchg
mov
mov
aas
(bad)
push
inc
or
inc
push
js
adc
pop
loopne
add
add
inc
shl
or
rol
loopne
adc
pop
repz
in
push
ret
sbb
repnz
mov
sbb
and
add
pop
push
add
rol
or
(bad)
or
in
inc
add
call
add
inc
sbb
jecxz
scas
dec
loopne
dec
or
inc
sub
cld
add
ins
repnz
jnp
xor
iret
jo
push
jo
jnp
and
push
add
push
push
retf
push
lock
pop
or
pop
cld
add
outs
lods
mov
adc
js
inc
push
or
test
add
pop
sub
(bad)
add
push
add
ret
cmp
inc
inc
add
xor
lods
test
call
mov
popa
push
and
mov
add
movs
mov
xor
(bad)
xor
pop
add
mov
int3
fld
sub
jno
les
mov
and
or
sar
sti
dec
xor
or
inc
inc
adc
jecxz
xor
cmp
push
adc
or
push
adc
sahf
xor
inc
mov
inc
pop
hlt
lock
push
rcl
repz
sub
idiv
out
push
ss
push
shl
out
popa
jl
adc
mov
leave
stos
mov
jns
xor
inc
push
push
push
add
nop
xor
les
lods
push
scas
sbb
les
retf
aas
mov
adc
ror
test
es
dec
or
adc
or
or
mov
and
or
sbb
xchg
ret
cmc
add
rol
sub
lahf
mov
mov
or
inc
repz
inc
or
or
out
cmp
sti
sub
mov
push
or
jb
sub
mov
xor
cmp
xor
jge
ret
adc
push
mov
pop
pop
xor
mov
rol
dec
rcr
mov
sbb
mov
cli
xor
add
inc
adc
icebp
xchg
ret
push
jb
inc
sbb
pop
lods
mov
sbb
fdiv
push
or
push
(bad)
and
dec
and
sub
rcl
add
inc
ret
and
nop
add
mov
push
addps
xor
pushw
ja
and
sbb
or
sbb
mov
jg
jecxz
jno
inc
push
shl
mov
pop
inc
xor
add
add
loop
sub
inc
add
mov
add
add
xor
xor
cwde
add
mov
add
push
mov
pushf
add
clc
inc
sbb
or
adc
call
add
add
and
and
loopne
mov
and
ror
sbb
and
or
pusha
adc
pop
add
xor
push
push
mov
fwait
or
mov
sbb
dec
test
push
sbb
loope
aam
mov
push
jo
and
loopne
cmp
push
inc
mov
push
or
popa
add
call
dec
push
xor
or
ds
or
add
pop
cmps
cmp
add
dec
nop
popa
add
rol
xor
dec
jmp
inc
inc
push
add
sub
sbb
or
js
push
fisttp
add
je
add
xor
jo
and
cmp
add
loopne
punpckhwd
mov
add
pop
lock
loopne
aaa
adc
daa
xor
xor
scas
popa
and
(bad)
lock
mov
cmp
add
rcl
sbb
fadd
dec
jo
add
in
xor
loopne
or
inc
push
add
sbb
or
sbb
or
or
arpl
xor
add
add
pusha
or
dec
rol
ret
push
fs
cmp
nop
xchg
loope
data16
popf
rcl
or
hlt
test
shl
adc
rol
ins
adc
or
inc
or
and
mov
or
inc
aam
sbb
pusha
add
add
dec
add
mov
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
xchg
jno
xchg
mov
and
adc
loopne
mov
add
add
mov
push
mov
icebp
and
cmp
push
push
test
hlt
push
lea
or
jns
dec
fwait
sbb
in
sbb
add
test
cmps
stos
sub
xor
mov
push
add
je
sbb
jecxz
adc
aas
es
add
mov
and
mov
lahf
scas
adc
inc
inc
inc
or
cmp
mov
jae
(bad)
cmp
xchg
xor
adc
stc
pop
sub
(bad)
xchg
(bad)
jle
shl
xchg
test
inc
(bad)
lds
and
or
in
dec
adc
in
pusha
inc
mov
inc
cmp
and
add
xchg
add
aas
or
adc
and
add
mov
adc
mov
pushf
cmp
push
xchg
cld
arpl
push
sub
push
add
ret
aas
sub
dec
mov
add
loope
xchg
es
add
ret
mov
add
jl
dec
or
adc
rcl
and
add
mov
xchg
add
lock
push
pop
xchg
add
xor
jo
sbb
xor
inc
aas
(bad)
in
add
pop
sbb
or
aas
push
mov
mov
dec
xor
dec
or
in
ret
ins
xchg
sub
in
cmp
or
add
or
jae
xor
add
dec
jmp
dec
sbb
xchg
movs
add
repnz
shr
js
loop
pop
or
mov
int3
jno
pop
add
mov
call
icebp
add
popa
and
shl
rol
pop
adc
jecxz
push
sub
add
sbb
sbb
and
fwait
add
enter
ror
xor
mov
js
dec
add
shr
add
inc
test
add
adc
pop
ja
jo
inc
fcomp
fisttp
sahf
js
dec
or
add
or
inc
and
pop
sub
loope
add
js
pop
dec
and
or
adc
(bad)
cld
mov
lods
dec
js
jno
mov
inc
fnstenv
adc
xor
xor
xchg
add
sbb
cmp
xchg
popf
add
sub
sub
icebp
or
inc
sbb
fst
inc
add
jo
push
sbb
xor
ss
js
cmp
cld
xor
or
ins
sbb
mov
xor
push
inc
jae
inc
fisub
pop
inc
jecxz
sbb
mov
inc
fs
outs
add
xchg
inc
(bad)
stc
out
pop
in
inc
je
test
xchg
rol
add
and
shr
test
add
loope
xor
add
int3
outs
add
mov
cmp
jo
or
add
enter
push
mov
sbb
mov
sub
add
loop
adc
add
add
lods
push
jnp
sub
aas
sti
adc
lods
cwde
add
pop
cld
jecxz
(bad)
mov
mov
dec
pusha
add
pushf
add
popf
add
xor
or
adc
add
and
add
mov
add
xchg
test
mov
and
call
xchg
dec
pusha
and
adc
inc
push
mov
or
(bad)
xchg
add
mov
test
xchg
or
lea
call
and
add
add
pusha
nop
dec
adc
adc
and
call
sbb
dec
jmp
lock
iret
aas
or
xchg
pop
mov
lds
or
add
or
jbe
xchg
add
(bad)
mov
xor
mov
dec
hlt
and
xchg
shl
enter
adc
mov
ret
inc
mov
inc
add
mov
adc
mov
add
or
jns
jg
and
or
mov
add
out
inc
push
pop
(bad)
popa
mov
scas
sbb
push
ret
add
popa
or
add
and
and
adc
fcmovu
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
cmp
mov
inc
jg
int3
xchg
cdq
push
sbb
mov
jae
xor
push
mov
sub
pusha
test
push
sub
pop
xor
push
data16
xchg
push
adc
adc
jae
adc
push
xor
inc
adc
les
adc
jne
inc
lea
outs
inc
push
test
xchg
jmp
add
lahf
mov
sub
add
pop
sbb
and
push
jecxz
aas
adc
cmp
push
or
pop
in
adc
movs
xor
enter
popa
mov
jae
js
add
add
cmp
push
loopne
dec
add
sub
and
lods
loopne
add
jae
pop
add
icebp
test
pushf
aaa
add
shr
test
inc
test
inc
inc
inc
dec
mov
push
xor
or
(bad)
sub
fs
inc
in
inc
(bad)
or
popa
into
or
sub
shl
sbb
aam
shr
push
sub
inc
(bad)
sub
ud0
xor
push
loopne
shl
gs
(bad)
or
nop
jo
rol
nop
add
add
add
add
jp
inc
daa
or
cmps
xor
dec
push
and
add
inc
movs
xchg
add
aam
add
pop
or
nop
push
add
retf
inc
jo
adc
in
mov
ret
and
sahf
imul
push
add
jnp
mov
add
and
ret
sub
inc
adc
and
jge
rol
and
adc
add
push
sub
mov
inc
add
nop
add
ins
inc
int3
or
arpl
in
or
inc
sub
sbb
mov
and
loope
push
sbb
shl
or
ins
call
test
inc
xor
syscall
mov
xchg
mov
ss
outs
cld
and
or
imul
adc
in
test
or
add
outs
lods
mov
sbb
pop
jecxz
mov
add
push
or
cld
push
inc
test
fwait
or
inc
add
mov
fmul
lds
jl
inc
inc
test
adc
les
movs
sub
loopne
aas
pop
push
pushf
mov
inc
push
mov
add
sbb
inc
pop
rcl
push
shl
retf
mov
out
mov
in
rol
sbb
pop
or
ret
ss
add
jno
fsub
or
inc
and
add
or
pop
xlat
rol
jb
xor
js
push
push
scas
adc
jmp
movs
das
mov
in
or
dec
inc
movs
mov
jnp
mov
outs
lfs
mov
rol
dec
mov
(bad)
cs
mov
pop
cmp
rcl
es
mov
iret
sbb
add
pop
sub
adc
pop
pushf
inc
inc
sub
lock
lock
sub
lods
jecxz
sub
clc
(bad)
jp
xor
dec
adc
add
mov
pop
or
call
ret
nop
sbb
sub
jno
jg
inc
jge
ficomp
je
imul
(bad)
xchg
test
rol
js
add
outs
nop
or
mov
cmc
push
or
mov
test
xor
or
enter
inc
sub
lock
mov
bound
jbe
rol
(bad)
jg
add
mov
clc
(bad)
push
mov
sbb
cmp
jp
dec
push
sbb
inc
inc
and
inc
mov
adc
in
call
cdq
xor
and
call
popf
test
xchg
and
ins
sbb
xor
xchg
adc
push
adc
cmp
call
add
in
xchg
jecxz
jl
rcl
xchg
lea
pusha
and
push
inc
add
inc
pop
add
adc
in
and
sub
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
sub
ja
mov
lds
mov
sbb
fsubr
rcr
pop
and
test
dec
test
push
and
mov
sbb
movd
les
or
ror
xchg
add
aas
dec
aas
jp
dec
test
inc
add
mov
adc
adc
mov
jecxz
add
dec
dec
sbb
inc
lea
(bad)
jge
inc
ret
inc
or
movs
mov
shl
and
nop
cmp
inc
or
imul
add
jns
push
add
pop
adc
jno
(bad)
in
inc
lea
mov
fisttp
or
shr
mov
ins
cmp
adc
mov
lock
ret
mov
sub
jo
les
pop
add
mov
imul
les
sub
jns
mov
inc
cmp
mov
inc
mov
xchg
jne
adc
and
aaa
push
adc
(bad)
add
cmp
js
and
dec
pop
add
(bad)
pop
ja
sub
push
ret
pushf
push
adc
and
loopne
ss
inc
push
shl
add
sub
xchg
and
push
setns
or
add
xchg
pop
xor
aam
dec
sbb
inc
sub
push
ret
test
test
fdiv
or
daa
or
and
add
sub
add
gs
xor
sub
mov
and
add
retf
adc
add
mov
or
xchg
(bad)
sub
ret
pushf
rol
jne
and
dec
add
ret
popf
nop
jmp
fcmovbe
adc
and
add
adc
dec
pop
(bad)
call
sub
test
(bad)
cmp
movs
rol
xchg
lods
xor
push
dec
mov
push
inc
cld
adc
pop
or
pop
movs
jno
add
push
mov
xor
popa
dec
or
sub
aaa
hlt
lock
xor
sub
add
sbb
dec
scas
dec
xor
or
mov
xor
inc
jp
mov
cli
(bad)
in
leave
inc
add
add
add
ficom
icebp
or
xchg
sbb
inc
add
jns
pop
push
or
inc
push
or
pusha
inc
add
inc
add
xor
repnz
daa
mov
and
pop
jne
mov
inc
dec
add
or
sbb
inc
pop
out
lods
arpl
push
add
pop
and
add
or
inc
aaa
or
fst
add
add
add
sub
inc
pop
psadbw
arpl
or
adc
jo
xor
jo
int3
aas
push
enter
out
adc
inc
sbb
nop
into
mov
xor
add
iret
add
ror
adc
pop
ds
pop
pop
leave
push
cli
inc
popf
aas
xor
dec
cmps
jb
cmp
ret
push
out
cmp
(bad)
neg
jb
or
jae
data16
inc
or
(bad)
add
mov
add
mov
push
adc
xor
loope
xor
ret
sbb
mov
lock
or
dec
nop
pop
sbb
mov
add
bound
adc
(bad)
mov
inc
cmp
cmp
ror
and
in
xchg
out
nop
stos
cwde
add
add
clc
(bad)
sub
pop
(bad)
aas
and
sub
or
test
add
adc
sbb
hlt
cmove
add
test
adc
fadd
adc
add
inc
sbb
sbb
loopne
sbb
adc
xor
or
inc
add
adc
enter
rol
pop
and
adc
and
data16
sub
add
ret
aam
and
fmul
sub
and
xor
add
mov
das
xchg
adc
dec
mov
data16
jg
add
adc
aas
push
rol
mov
adc
inc
shl
add
enter
mov
inc
add
pop
loopne
fstp
or
outs
out
push
push
and
add
mov
push
ret
sbb
add
xor
cvtdq2ps
jb
pop
inc
ret
inc
and
add
add
loopne
xor
stos
sbb
cmp
jo
xchg
dec
inc
and
or
add
mov
inc
xchg
loopne
and
mov
and
sbb
jg
loope
aas
enter
and
xchg
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
sub
(bad)
or
adc
inc
add
mov
add
push
loop
les
je
xlat
movs
dec
int3
dec
cld
and
and
inc
push
xor
enter
test
(bad)
adc
pop
movs
dec
int3
add
jne
test
sbb
jb
fst
mov
jg
add
mov
mov
cmp
adc
sbb
push
jae
push
or
jb
mov
rol
js
add
pusha
push
push
sub
jle
mov
and
hlt
lock
int
sbb
(bad)
cmp
push
and
out
mov
call
add
jno
les
xor
mov
pop
cmp
call
jmp
xor
add
cmp
sbb
add
imul
outs
adc
adc
xchg
inc
adc
jb
dec
push
and
jo
xor
xor
add
js
xchg
sar
fcom
push
mov
and
dec
pop
rol
inc
dec
jno
lods
pusha
mov
xchg
and
sbb
add
inc
push
or
add
add
sub
push
or
pop
add
inc
push
sub
and
std
in
pusha
pop
mov
js
bound
push
hlt
push
shl
cmp
add
or
mov
add
pop
and
dec
imul
xor
sbb
xchg
repnz
rol
sbb
cmp
add
mov
cmps
add
pop
inc
adc
sub
rol
or
sub
sub
xchg
mov
jl
loopne
adc
add
aad
add
sub
add
adc
and
cmp
push
or
sbb
outs
movs
mov
cmps
adc
inc
push
push
sub
or
mov
adc
or
nop
and
inc
bound
jp
inc
xor
or
mov
sub
mov
cmps
or
push
es
loop
cs
mov
inc
xor
js
or
adc
loop
push
mov
outs
xor
inc
add
or
jne
push
or
aam
syscall
xchg
jo
dec
add
adc
adc
int3
or
loopne
pop
push
and
and
pusha
enter
adc
add
and
adc
push
add
add
sbb
iret
add
mov
sbb
inc
add
or
inc
sbb
add
mov
add
ins
mov
jo
into
imul
pop
cmp
or
sub
add
and
and
add
adc
inc
sbb
xor
rol
aas
mov
dec
cld
cmp
inc
aam
inc
dec
sbb
lds
add
and
aas
sbb
mov
dec
frstor
pop
adc
out
lods
cmps
jno
jmp
lock
ret
jmp
inc
fst
and
lahf
adc
or
and
mov
add
ror
sbb
pop
inc
push
mov
dec
test
add
xor
xchg
or
push
xor
mov
aas
test
stc
fadd
sbb
mov
add
xchg
hlt
pop
inc
or
mov
push
mov
add
leave
sbb
clc
loop
jbe
mov
cmp
add
or
cmp
mov
sbb
inc
push
out
cmps
mov
pop
out
inc
and
mov
fadd
adc
inc
push
xchg
add
cmp
push
xchg
pop
js
and
outs
and
ds
test
loopne
and
lock
lar
and
xchg
test
enter
xor
or
(bad)
hlt
ror
(bad)
inc
sbb
xchg
fcomp
ja
or
dec
push
adc
adc
push
add
nop
adc
mov
add
xor
mov
dec
and
push
mov
add
(bad)
jnp
dec
and
and
add
loop
pop
rol
dec
fs
ja
mov
ds
sub
jg
inc
jbe
test
aas
push
fs
popa
rol
clc
add
sub
je
mov
popf
adc
sbb
sub
pusha
sub
rcl
xchg
pop
ss
rol
mov
add
add
push
test
mov
or
mov
cmp
jl
add
mov
and
cdq
enter
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
xchg
sub
adc
xchg
and
xor
xchg
dec
or
inc
mov
(bad)
mov
xor
gs
cmp
pop
or
sub
in
rol
push
xor
mov
lock
push
adc
adc
push
cmps
popa
test
inc
push
mov
adc
cmp
jno
or
call
or
and
sbb
adc
sub
sub
inc
add
or
test
adc
rol
inc
and
sbb
sub
inc
add
sbb
add
xor
sub
aas
jne
jmp
inc
adc
xor
cmc
add
jo
test
add
sbb
das
(bad)
fbld
rol
ss
xor
popf
jne
or
hlt
push
and
je
jmp
mov
push
or
or
(bad)
fsub
mov
jae
add
and
jae
data16
and
sbb
add
push
push
xor
cmp
xchg
xor
ss
or
and
fs
pop
ja
jb
add
(bad)
mov
mov
or
adc
push
sbb
pop
je
push
mov
or
adc
or
(bad)
or
add
add
sbb
enter
mov
jle
ficom
ds
inc
or
add
pop
and
(bad)
inc
add
lods
js
inc
add
inc
or
or
xor
jg
xor
shl
pop
sahf
sub
jne
loop
pop
(bad)
loope
and
inc
add
pop
mov
push
add
and
sub
loop
daa
adc
inc
and
push
add
pop
sbb
inc
push
fild
xchg
ret
inc
ror
pop
scas
push
ret
sbb
xchg
fisttp
jmp
sahf
and
jecxz
or
movs
sub
add
mov
push
push
add
adc
mov
xor
sbb
inc
ins
aam
sar
ins
add
mov
push
shl
and
scas
inc
(bad)
xor
inc
sbb
mov
push
pop
dec
and
inc
add
es
inc
test
xlat
sub
outs
add
icebp
wbinvd
xor
inc
nop
and
push
mov
sub
add
dec
add
lods
xor
add
mov
push
adc
ss
xor
add
add
add
movs
pusha
(bad)
int
cld
jae
aas
retf
sar
lock
or
cmp
repz
dec
or
es
ins
shl
mov
dec
not
xor
sar
loopne
xor
lods
loopne
adc
xchg
and
outs
ficomp
and
push
push
sbb
xchg
or
in
aas
out
mov
inc
push
sbb
fcom
int3
xor
mov
test
add
jp
jmp
fist
iret
or
or
cli
mov
aas
fisubr
cmp
xor
jmp
hlt
fwait
mov
or
in
add
xor
cpuid
lods
mov
xor
or
xor
inc
sar
cmp
add
add
adc
or
cwde
sar
inc
inc
ss
push
xchg
cmp
push
jo
popa
and
and
push
and
std
or
push
pusha
mov
or
push
inc
sbb
(bad)
lods
mov
adc
add
rol
add
mov
pop
pop
loope
xchg
or
aas
jb
add
neg
lds
clc
ret
sub
add
add
and
(bad)
jg
icebp
pop
pusha
cwde
inc
push
xchg
jo
pop
xor
adc
popa
cwde
out
pusha
popa
pop
cmp
and
inc
(bad)
cmps
xor
add
inc
adc
push
sub
js
adc
jno
add
or
retf
cmp
ret
pop
xor
pop
stos
sbb
push
push
or
mov
ret
nop
mov
xchg
call
fimul
cmp
pop
add
sbb
(bad)
adc
mov
push
push
xchg
dec
add
je
dec
and
into
adc
mov
inc
jmp
inc
xchg
or
out
mov
ror
pop
lock
or
add
mov
adc
add
xor
sub
jne
mov
xor
ret
add
or
mov
pop
add
or
mov
dec
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
inc
xchg
push
mov
or
cmps
inc
mov
xor
or
adc
movs
dec
mov
or
mov
fsubr
mov
sbb
inc
imul
call
mov
adc
or
lock
or
xchg
and
jmp
or
loop
lods
inc
dec
cmp
cmp
mov
in
adc
fsubr
sbb
dec
retf
xor
(bad)
ror
sub
(bad)
mov
(bad)
dec
nop
es
add
adc
xor
inc
lods
push
inc
ror
or
les
add
mov
add
sub
sub
pop
sbb
mov
adc
and
inc
movs
in
lock
sbb
movs
loopne
lahf
or
adc
sub
shl
(bad)
addr16
enterw
iret
mov
inc
xchg
push
rol
loopne
inc
and
data16
dec
ror
jne
lods
and
clc
in
mov
add
adc
adc
sbb
and
test
jae
cmp
shl
add
push
clc
dec
jle
dec
push
(bad)
inc
push
nop
add
or
cmps
test
push
xchg
push
ret
xor
add
ror
jmp
or
inc
fs
add
or
dec
and
xchg
addr16
sbb
mov
sbb
mov
mov
push
or
inc
mov
add
add
add
inc
add
lods
js
inc
and
jle
adc
aad
lock
or
sub
inc
add
pushf
inc
shl
int3
mov
push
pop
xchg
push
shl
pop
test
dec
sbb
add
push
imul
add
mov
sbb
add
dec
and
nop
inc
ret
cmp
arpl
cwde
enter
inc
in
dec
pop
cmps
outs
xor
add
inc
inc
add
fwait
or
push
inc
repnz
sub
scas
mov
mov
xor
mov
loope
add
nop
sbb
or
enter
sub
xor
sub
mov
push
add
or
mov
inc
test
sbb
rol
ds
sub
inc
add
add
(bad)
or
(bad)
movs
add
ins
push
sar
adc
call
inc
fdiv
or
int3
shl
inc
idiv
xor
adc
inc
add
or
rol
cmp
lea
ins
cld
adc
or
pop
cmp
xchg
int
xor
mov
sub
fisttp
popa
dec
(bad)
mov
adc
add
aas
(bad)
mov
or
push
push
push
or
dec
xor
jp
add
xor
cwde
lahf
xor
call
jmp
add
arpl
nop
in
mov
pop
stc
in
push
sub
or
sub
stos
lods
adc
add
les
ins
pop
xchg
retf
or
or
pop
xchg
mov
sub
adc
sub
movs
scas
or
outs
xor
stc
cmp
cld
inc
mov
push
sub
inc
repz
add
js
retf
sbb
ror
jb
inc
cld
inc
adc
add
(bad)
loopne
cmp
add
jmp
adc
adc
cmp
sbb
sub
adc
push
loop
or
add
adc
int3
and
popa
pop
dec
cld
jecxz
mov
inc
add
cwde
adc
xor
ret
and
pop
cld
and
inc
inc
add
cmp
add
add
inc
cmp
inc
adc
cmp
add
ror
fsub
add
adc
cmp
lea
xor
jno
inc
inc
rol
pop
add
jbe
(bad)
pop
dec
add
mov
ror
pop
dec
inc
and
and
mov
enter
xchg
mov
inc
and
nop
mov
aaa
stc
inc
jecxz
add
xchg
add
lds
pop
and
xor
mov
shr
inc
pop
pop
inc
es
xchg
jns
imul
add
adc
push
sbb
clc
bound
or
xchg
sub
push
and
add
inc
retf
jbe
mov
test
into
mov
push
jmp
or
or
add
add
and
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
shl
mov
adc
dec
cld
out
fisttp
mov
sub
pop
mov
aaa
sub
out
(bad)
or
xor
aaa
adc
inc
push
mov
adc
inc
cwde
sub
push
sub
xchg
dec
or
rol
cmp
push
inc
loopne
pop
inc
sub
dec
xchg
cs
shl
test
xchg
ds
push
repnz
lods
dec
or
das
inc
enter
test
adc
sbb
lods
loopne
or
cld
inc
push
jo
pop
xchg
push
(bad)
jmp
inc
mov
les
push
dec
jecxz
call
add
mov
iret
xchg
jg
(bad)
movs
dec
push
inc
mov
je
icebp
loope
mov
inc
loop
enter
push
xor
mov
xchg
and
jg
push
mov
pop
and
mov
push
add
xchg
adc
repz
pop
push
add
add
sub
and
mov
int3
repz
jnp
mov
inc
sbb
sbb
xor
outs
mov
in
push
add
pop
pusha
pusha
lea
xor
add
inc
jno
sbb
nop
ret
or
push
mov
xlat
and
add
xor
jo
mov
ror
sub
aam
retf
cmp
add
add
scas
mov
enter
sti
movs
adc
adc
cwde
pusha
rcl
loopne
or
push
cmp
add
inc
adc
mov
adc
loopne
inc
out
push
pusha
movs
ins
push
je
or
sub
add
aam
test
jmp
xchg
or
cmp
and
or
xor
push
xor
(bad)
clc
loope
cmp
inc
or
push
pop
sub
fs
sbb
add
or
(bad)
or
mov
lock
dec
push
pop
js
inc
add
cmp
iret
or
jo
mov
mov
push
xchg
fisub
aas
call
adc
fwait
add
pop
sbb
sbb
scas
and
aam
push
inc
and
dec
push
inc
add
mov
or
cmp
add
outs
inc
or
rol
sbb
aaa
mov
jo
dec
add
adc
dec
cmp
ud1
add
xchg
ret
dec
and
add
xor
inc
mov
repnz
ins
and
add
fs
loope
and
(bad)
repnz
pop
add
inc
enter
inc
add
mov
push
and
or
sar
or
sbb
inc
inc
adc
out
or
repz
movs
xchg
and
call
xor
or
add
adc
adc
adc
push
sbb
iret
or
and
rol
jns
scas
stc
dec
outs
mov
mov
ror
dec
and
nop
outs
adc
inc
jo
mov
ror
arpl
popa
test
aas
adc
xchg
rol
sbb
scas
mov
push
or
inc
ror
rol
sub
stos
test
mov
xor
or
test
mov
outs
mov
dec
cli
add
mov
add
mov
mov
mov
mov
adc
adc
movs
dec
inc
add
inc
add
xor
imul
push
jbe
add
xchg
push
and
inc
push
xchg
lock
aaa
test
call
cmp
in
sbb
cmp
push
cmp
push
mov
adc
cld
add
dec
add
cmp
out
nop
inc
and
nop
sbb
xchg
sar
inc
xchg
mov
jge
lds
pop
adc
or
push
nop
imul
mov
rol
call
or
add
push
or
add
adc
pusha
or
and
nop
cmp
push
pop
cmp
out
inc
add
int3
add
cmp
jg
inc
and
pop
adc
loopne
jmp
add
bswap
adc
add
ror
adc
jo
and
jmp
adc
inc
push
(bad)
icebp
cmp
jo
adc
sub
test
push
jmp
and
xchg
repz
call
adc
pop
ss
rol
adc
jl
inc
inc
mov
xor
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
xchg
jno
xchg
mov
and
adc
loopne
mov
add
add
mov
push
mov
icebp
jecxz
test
cmp
push
push
test
hlt
push
lea
or
jns
dec
fwait
sbb
in
sbb
add
test
cmps
stos
sub
stc
ror
push
test
sub
push
mov
repnz
mov
rol
mov
fwait
add
xor
icebp
iret
push
mov
and
and
imul
fdivr
xchg
repnz
or
cld
or
(bad)
dec
jg
and
and
nop
cld
and
or
adc
shl
ret
popf
push
daa
lock
and
mov
push
loop
mov
sbb
adc
jecxz
inc
add
sar
add
pop
test
fidiv
adc
jge
add
add
pmaxub
add
ds
mov
push
and
or
sbb
lock
or
or
shr
mov
js
mov
adc
jo
mov
push
inc
or
or
mov
dec
and
std
or
cmp
mov
verw
adc
inc
or
in
or
or
mov
jle
add
iret
aas
cmp
icebp
lds
inc
add
in
adc
pushf
mov
adc
add
fsub
fwait
and
push
pop
xchg
inc
inc
add
shl
push
rcr
mov
or
jae
add
xor
adc
push
mov
rcr
sub
adc
add
or
(bad)
clc
rol
nop
push
and
xor
jecxz
jg
outs
and
adc
cmp
add
adc
leave
and
loope
and
push
mov
stos
jo
push
add
mov
popf
mov
imul
add
cmp
nop
sbb
scas
xor
iret
stos
push
xor
push
retf
mov
sar
inc
mov
shl
shl
nop
pop
and
js
inc
or
inc
dec
cld
rol
enter
rol
ja
add
idiv
push
adc
outs
nop
or
pusha
and
mov
rol
cld
push
xchg
or
nop
pcmpeqd
sbb
mov
outs
adc
iret
xor
pop
cld
arpl
and
add
sub
iret
add
sbb
(bad)
repz
aas
aas
inc
aam
xor
jae
or
xchg
nop
adc
aaa
sbb
jecxz
or
dec
xor
or
int3
mov
push
jns
aam
sar
and
dec
outs
outs
cmp
outs
xor
jle
add
xor
fs
outs
cmp
pop
adc
stc
call
adc
leave
dec
rol
push
cmp
js
adc
jae
mov
push
xor
push
xchg
enter
je
inc
xchg
scas
inc
dec
cmp
les
(bad)
mov
ds
xor
pusha
and
cmp
inc
add
cmp
lea
mov
mov
dec
cmp
add
mov
xchg
dec
leave
mov
jo
cmps
add
repnz
and
jns
adc
jo
or
rol
sub
or
cmp
add
lea
fadd
push
(bad)
clc
(bad)
cmp
xor
sub
sbb
test
aaa
lock
cmp
pusha
add
xor
cmp
and
dec
add
and
xchg
jo
in
add
(bad)
loopne
mov
inc
adc
xor
xor
mov
and
cld
dec
adc
mov
xor
repnz
inc
loop
add
lock
aas
mov
and
sahf
loopne
pop
or
add
aas
sahf
push
xchg
and
and
inc
mov
pusha
adc
mov
call
arpl
adc
ror
jecxz
cld
mov
adc
into
loope
and
cld
inc
daa
sub
bndldx
or
xchg
rcl
and
or
adc
call
rcr
jmp
push
jl
add
cmp
pop
xchg
bound
clc
inc
xor
and
or
rol
add
and
dec
sub
and
lock
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
push
pop
enter
jg
int3
xchg
cdq
push
sbb
mov
jae
xor
push
es
test
int
pop
jecxz
test
push
sub
pop
xor
push
data16
xchg
push
adc
adc
jae
adc
push
xor
inc
adc
les
adc
jne
inc
lea
outs
inc
push
test
xchg
jmp
add
lahf
mov
sub
add
pop
sbb
and
push
jecxz
aas
adc
cmp
push
or
pop
in
adc
movs
xor
xor
xor
popa
mov
jae
js
add
add
cmp
push
loopne
dec
add
sub
and
lods
loopne
add
jae
pop
add
icebp
test
pushf
aaa
add
shr
test
inc
test
inc
inc
inc
dec
mov
push
xor
or
(bad)
sub
fs
inc
in
inc
(bad)
or
popa
into
or
sub
shl
sbb
aam
shr
push
sub
inc
(bad)
sub
ud0
xor
push
loopne
shl
gs
(bad)
or
nop
jo
rol
nop
add
add
add
add
jp
inc
daa
or
cmps
xor
dec
push
and
add
inc
movs
xchg
add
aam
add
pop
or
nop
push
add
retf
inc
jo
adc
in
mov
ret
and
sahf
imul
push
add
jnp
mov
add
and
ret
sub
inc
adc
and
jge
rol
and
adc
add
adc
test
jl
ror
push
(bad)
clc
inc
mov
or
arpl
in
or
inc
sub
sbb
mov
and
loope
push
sbb
shl
or
pop
js
sbb
jp
mov
aas
adc
ret
adc
cmp
fild
es
mov
push
inc
rcr
movs
or
ret
pop
or
dec
add
call
mov
sbb
mov
sbb
pop
jecxz
mov
add
push
or
cld
push
inc
test
fwait
or
inc
add
sbb
or
dec
jl
sbb
cmp
nop
pop
xchg
push
inc
cmp
hlt
push
inc
add
lock
or
add
sbb
(bad)
or
push
aaa
rcr
dec
jo
adc
xor
dec
lar
rol
(bad)
aas
rcr
jo
add
je
inc
add
pop
or
shl
das
xor
aam
xchg
xor
aaa
add
daa
ror
xor
pop
sub
sub
sahf
mov
loopne
int
(bad)
call
inc
push
xor
cli
jmp
int3
lock
or
mov
loopne
push
pushf
rol
push
xor
xchg
addr16
push
sbb
shl
int
test
mov
push
stc
pop
push
adc
pop
popa
mov
int
inc
retf
inc
add
cld
xchg
mov
retf
rcr
adc
call
rol
pop
pop
add
mov
mov
mov
add
jae
daa
cwde
pusha
add
sub
mov
cmp
sbb
xor
add
or
jno
pop
mov
add
pusha
add
push
mov
add
cmps
push
mov
mov
(bad)
cld
sbb
enter
mov
add
mov
pop
fadd
adc
add
xchg
ret
push
dec
adc
jne
add
loopne
and
ror
sub
clc
inc
and
cld
leave
pop
push
rol
sbb
add
jno
jmp
add
les
sbb
or
or
movs
inc
or
xchg
sahf
sbb
add
or
and
push
rcl
clc
xchg
(bad)
adc
call
enter
mov
mov
mov
pusha
arpl
ror
retfw
mov
and
and
cmp
add
fwait
ror
mov
aas
sbb
xchg
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
jg
adc
xor
mov
ret
cmp
mov
push
ds
rcr
pop
and
test
dec
test
push
and
mov
sbb
movd
les
or
ror
xchg
add
aas
dec
aas
jp
hlt
cmps
and
add
rcl
push
mov
jecxz
add
hlt
inc
sbb
inc
lea
(bad)
jge
inc
ret
inc
or
movs
mov
shl
and
add
in
or
imul
add
jns
push
add
pop
adc
ins
hlt
(bad)
in
inc
lea
mov
fisttp
or
shr
mov
ins
cmp
push
adc
mov
sub
jo
les
pop
add
mov
imul
lock
sub
jns
mov
inc
cmp
mov
inc
mov
xchg
jne
adc
and
pop
push
adc
(bad)
add
cmp
js
and
dec
pop
add
(bad)
pop
ja
sub
push
ret
pushf
push
adc
and
loopne
ss
inc
push
shl
add
sub
xchg
and
push
push
cdq
add
and
add
xchg
pop
xor
aam
dec
sbb
inc
sub
push
ret
test
push
fdiv
or
daa
or
and
add
sub
add
gs
stos
sub
mov
and
add
retf
adc
add
mov
or
xchg
(bad)
sub
ret
pushf
rol
jne
and
dec
add
ret
popf
and
dec
sbb
adc
and
add
adc
dec
pop
(bad)
call
sub
test
(bad)
cmp
movs
rol
xchg
lods
xor
push
mov
inc
cld
adc
pop
or
pop
movs
jno
add
push
mov
xor
popa
dec
or
sub
aaa
hlt
lock
xor
sub
add
sbb
dec
scas
dec
xor
or
mov
xor
ins
inc
jp
mov
cli
(bad)
in
leave
inc
add
add
add
ficom
inc
inc
and
inc
dec
adc
push
or
inc
push
or
pusha
inc
add
inc
add
xor
repnz
daa
mov
and
push
jne
mov
inc
dec
add
or
rcl
lds
jmp
inc
ret
in
push
add
pop
and
aas
inc
or
inc
aaa
or
fst
add
add
dec
inc
nop
add
iret
or
rcl
xchg
push
pop
ret
cld
jecxz
aas
push
or
fadd
pop
lock
push
jmp
xor
push
fmul
add
mov
ds
fwait
aas
les
adc
pop
cmp
push
ins
fldenv
xchg
pushf
jmp
aaa
inc
or
jmp
or
mov
push
sbb
ret
add
dec
icebp
sbb
sar
aas
je
inc
loop
add
bnd
adc
mov
mov
adc
mov
push
sub
push
mov
repz
aam
add
ret
dec
and
fadd
cmovo
mov
sbb
mov
loopne
push
mov
mov
bound
add
add
xor
or
jno
sub
test
dec
ret
xchg
mov
and
jnp
inc
pop
jo
or
in
add
mov
test
mov
push
xchg
and
push
ror
pop
jo
adc
std
add
cdq
nop
push
jmp
fnstenv
push
(bad)
cmp
jle
nop
push
and
sub
rol
add
pusha
and
fcomp
cmp
pop
mov
dec
aaa
or
mov
ror
aas
cld
and
xchg
cmp
xchg
mov
add
push
or
shl
lods
jb
loop
add
and
mov
dec
inc
and
or
add
pop
pop
and
or
sub
dec
and
inc
or
call
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
sub
(bad)
or
adc
inc
add
mov
add
push
loop
les
je
xlat
movs
dec
int3
dec
cld
and
and
inc
push
xor
enter
test
(bad)
adc
pop
movs
dec
int3
add
jne
test
sbb
jb
fst
mov
jg
add
mov
mov
cmp
adc
sbb
push
jae
push
or
jb
mov
rol
js
add
pusha
push
push
sub
jle
mov
and
hlt
lock
int
sbb
(bad)
cmp
push
and
out
mov
call
add
jno
les
xor
mov
pop
cmp
call
jmp
xor
add
cmp
sbb
add
imul
outs
adc
adc
xchg
inc
adc
jb
dec
push
and
jo
xor
xor
add
js
xchg
sar
fcom
push
mov
and
dec
pop
rol
inc
dec
jno
lods
pusha
mov
xchg
and
sbb
add
inc
push
or
add
add
sub
push
or
pop
add
inc
push
sub
and
std
in
pusha
pop
mov
js
bound
push
hlt
push
shl
cmp
add
or
mov
add
pop
and
dec
imul
xor
sbb
xchg
repnz
rol
sbb
cmp
add
mov
cmps
add
pop
inc
adc
sub
rol
or
sub
sub
xchg
mov
jl
loopne
adc
add
aad
add
sub
add
adc
and
cmp
push
or
sbb
outs
movs
mov
cmps
adc
inc
push
push
sub
or
mov
adc
or
nop
and
inc
bound
jp
inc
xor
or
mov
sub
mov
cmps
or
push
es
loop
cs
mov
inc
xor
js
or
adc
loop
push
mov
outs
xor
inc
add
or
jne
push
or
aam
syscall
xchg
jo
dec
add
adc
adc
int3
or
loopne
pop
push
and
and
pusha
enter
adc
add
and
adc
push
add
add
sbb
iret
add
mov
sbb
inc
add
or
inc
sbb
add
mov
add
ins
mov
jo
into
imul
pop
cmp
or
sub
add
and
and
add
adc
inc
sbb
xor
rol
aas
mov
dec
cld
cmp
inc
aam
inc
dec
sbb
lds
add
and
aas
sbb
mov
dec
frstor
pop
adc
out
lods
cmps
jno
jmp
lock
ret
jmp
inc
fst
and
lahf
adc
or
and
mov
add
ror
sbb
pop
inc
push
mov
dec
test
add
xor
xchg
or
push
xor
mov
aas
test
stc
fadd
sbb
mov
add
xchg
hlt
pop
inc
or
mov
push
mov
add
leave
sbb
clc
loop
jbe
mov
cmp
add
or
cmp
mov
sbb
inc
push
out
cmps
mov
pop
out
inc
and
mov
fadd
adc
inc
push
xchg
add
cmp
push
xchg
pop
js
and
outs
and
ds
test
loopne
and
lock
lar
and
xchg
test
enter
xor
or
(bad)
hlt
ror
(bad)
inc
sbb
xchg
fcomp
ja
or
dec
push
adc
adc
push
add
nop
adc
mov
add
xor
mov
dec
and
push
mov
add
(bad)
jnp
dec
and
and
add
loop
pop
rol
dec
fs
ja
mov
ds
sub
jg
inc
jbe
test
aas
push
fs
popa
rol
clc
add
sub
je
mov
popf
adc
sbb
sub
pusha
sub
rcl
xchg
pop
ss
rol
mov
add
add
push
test
mov
or
mov
cmp
jl
add
mov
and
cdq
enter
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
sar
xchg
sub
adc
xchg
and
xor
xchg
dec
or
inc
mov
(bad)
mov
xor
gs
cmp
pop
or
sub
in
rol
push
xor
mov
lock
push
adc
adc
push
cmps
popa
test
inc
push
mov
adc
cmp
jno
or
call
or
and
sbb
adc
sub
sub
inc
add
or
test
adc
rol
inc
and
sbb
sub
inc
add
sbb
add
xor
sub
aas
jne
jmp
inc
adc
xor
cmc
add
jo
test
add
sbb
das
(bad)
fbld
rol
ss
xor
popf
jne
or
hlt
push
and
je
jmp
mov
push
or
or
(bad)
fsub
mov
jae
add
and
jae
data16
and
sbb
add
push
push
xor
cmp
xchg
xor
ss
or
and
fs
pop
ja
jb
add
(bad)
mov
mov
or
adc
push
sbb
pop
je
push
mov
or
adc
or
(bad)
or
add
add
sbb
enter
mov
jle
ficom
ds
inc
or
add
pop
and
(bad)
inc
add
lods
js
inc
add
inc
or
or
xor
jg
xor
shl
pop
sahf
sub
jne
loop
pop
(bad)
loope
and
inc
add
pop
mov
push
add
and
sub
loop
daa
adc
inc
and
push
add
pop
sbb
inc
push
fild
xchg
ret
inc
ror
pop
scas
push
ret
sbb
xchg
fisttp
jmp
sahf
and
jecxz
or
movs
sub
add
mov
push
push
add
adc
mov
xor
sbb
inc
ins
aam
sar
ins
add
mov
push
shl
and
scas
inc
(bad)
xor
inc
sbb
mov
push
pop
dec
and
inc
add
es
inc
test
xlat
sub
outs
add
icebp
wbinvd
xor
inc
nop
and
push
mov
sub
add
dec
add
lods
xor
add
mov
push
adc
ss
xor
add
add
add
movs
pusha
(bad)
int
cld
jae
aas
retf
sar
lock
or
cmp
repz
dec
or
es
ins
shl
mov
dec
not
xor
sar
loopne
xor
lods
loopne
adc
xchg
and
outs
ficomp
and
push
push
sbb
xchg
or
in
aas
out
mov
inc
push
sbb
fcom
int3
xor
mov
test
add
jp
jmp
fist
iret
or
or
cli
mov
aas
fisubr
cmp
xor
jmp
hlt
fwait
mov
or
in
add
xor
cpuid
lods
mov
xor
or
xor
inc
sar
cmp
add
add
adc
or
cwde
sar
inc
inc
ss
push
xchg
cmp
push
jo
popa
and
and
push
and
std
or
push
pusha
mov
or
push
inc
sbb
(bad)
lods
mov
adc
add
rol
add
mov
pop
pop
loope
xchg
or
aas
jb
add
neg
lds
clc
ret
sub
add
add
and
(bad)
jg
icebp
pop
pusha
cwde
inc
push
xchg
jo
pop
xor
adc
popa
cwde
out
pusha
popa
pop
cmp
and
inc
(bad)
cmps
xor
add
inc
adc
push
sub
js
adc
jno
add
or
retf
cmp
ret
pop
xor
pop
stos
sbb
push
push
or
mov
ret
nop
mov
xchg
call
fimul
cmp
pop
add
sbb
(bad)
adc
mov
push
push
xchg
dec
add
je
dec
and
into
adc
mov
inc
jmp
inc
xchg
or
out
mov
ror
pop
lock
or
add
mov
adc
add
xor
sub
jne
mov
xor
ret
add
or
mov
pop
add
or
mov
dec
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
inc
xchg
push
mov
or
cmps
inc
mov
xor
or
adc
movs
dec
mov
or
mov
fsubr
mov
sbb
inc
imul
call
mov
adc
or
lock
or
xchg
and
jmp
or
loop
lods
inc
dec
cmp
cmp
mov
in
adc
fsubr
sbb
dec
retf
xor
(bad)
ror
sub
(bad)
mov
(bad)
dec
nop
es
add
adc
xor
inc
lods
push
inc
ror
or
les
add
mov
add
sub
sub
pop
sbb
mov
adc
and
inc
movs
in
lock
sbb
movs
loopne
lahf
or
adc
sub
shl
(bad)
addr16
enterw
iret
mov
inc
xchg
push
rol
loopne
inc
and
data16
dec
ror
jne
lods
and
clc
in
mov
add
adc
adc
sbb
and
test
jae
cmp
shl
add
push
clc
dec
jle
dec
push
(bad)
inc
push
nop
add
or
cmps
test
push
xchg
push
ret
xor
add
ror
jmp
or
inc
fs
add
or
dec
and
xchg
addr16
sbb
mov
sbb
mov
mov
push
or
inc
mov
add
add
add
inc
add
lods
js
inc
and
jle
adc
aad
lock
or
sub
inc
add
pushf
inc
shl
int3
mov
push
pop
xchg
push
shl
pop
test
dec
sbb
add
push
imul
add
mov
sbb
add
dec
and
nop
inc
ret
cmp
arpl
cwde
enter
inc
in
dec
pop
cmps
outs
xor
add
inc
inc
add
fwait
or
push
inc
repnz
sub
scas
mov
mov
xor
mov
loope
add
nop
sbb
or
enter
sub
xor
sub
mov
push
add
or
mov
inc
test
sbb
rol
ds
sub
inc
add
add
(bad)
or
(bad)
movs
add
ins
push
sar
adc
call
inc
fdiv
or
int3
shl
inc
idiv
xor
adc
inc
add
or
rol
cmp
lea
ins
cld
adc
or
pop
cmp
xchg
int
xor
mov
sub
fisttp
popa
dec
(bad)
mov
adc
add
aas
(bad)
mov
or
push
push
push
or
dec
xor
jp
add
xor
cwde
lahf
xor
call
jmp
add
arpl
nop
in
mov
pop
stc
in
push
sub
or
sub
stos
lods
adc
add
les
ins
pop
xchg
retf
or
or
pop
xchg
mov
sub
adc
sub
movs
scas
or
outs
xor
stc
cmp
cld
inc
mov
push
sub
inc
repz
add
js
retf
sbb
ror
jb
inc
cld
inc
adc
add
(bad)
loopne
cmp
add
jmp
adc
adc
cmp
sbb
sub
adc
push
loop
or
add
adc
int3
and
popa
pop
dec
cld
jecxz
mov
inc
add
cwde
adc
xor
ret
and
pop
cld
and
inc
inc
add
cmp
add
add
inc
cmp
inc
adc
cmp
add
ror
fsub
add
adc
cmp
lea
xor
jno
inc
inc
rol
pop
add
jbe
(bad)
pop
dec
add
mov
ror
pop
dec
inc
and
and
mov
enter
xchg
mov
inc
and
nop
mov
aaa
stc
inc
jecxz
add
xchg
add
lds
pop
and
xor
mov
shr
inc
pop
pop
inc
es
xchg
jns
imul
add
adc
push
sbb
clc
bound
or
xchg
sub
push
and
add
inc
retf
jbe
mov
test
into
mov
push
jmp
or
or
add
add
and
add
or
inc
sub
add
add
or
add
or
mov
inc
jg
push
push
sbb
or
adc
dec
cmp
iret
lahf
mov
and
int3
les
(bad)
(bad)
or
and
ret
int
add
sub
int3
add
push
fidiv
fldenv
dec
adc
int
test
mov
xor
repnz
fwait
sbb
(bad)
jmp
push
inc
xchg
and
les
and
aam
add
ror
loope
or
das
stos
pop
clc
mov
mov
mov
add
ins
add
or
pop
test
shl
jae
add
and
ret
ja
loopne
loopne
add
mov
cmovs
arpl
test
pop
mov
int
add
pusha
or
jae
pop
call
adc
inc
cmp
add
add
add
cmp
xor
cmp
imul
arpl
fmul
xchg
push
jns
ins
sbb
pop
popa
push
test
ds
hlt
cmps
(bad)
mov
mov
aas
sub
push
pop
mov
cmp
inc
push
pop
xchg
push
add
sub
sub
inc
bound
inc
or
or
mov
sbb
aaa
inc
pop
add
sub
and
pushf
rol
adc
das
xor
mov
add
shl
add
les
add
xor
rcl
jp
adc
daa
xor
inc
add
fisttp
daa
xchg
repz
add
in
push
sub
add
pop
xor
mov
bound
adc
inc
inc
or
fs
add
cdq
adc
call
cmp
or
mov
xchg
or
or
jne
push
mov
sbb
shl
ret
jae
stc
push
push
movs
jne
inc
add
mov
rol
and
xor
enter
push
pop
sub
fs
or
sbb
and
jg
loopne
add
test
dec
and
or
icebp
or
sub
leave
lds
xchg
xor
fwait
sub
mov
pop
fs
inc
or
add
in
pusha
ret
add
push
inc
add
jo
inc
and
push
ret
and
or
sub
push
and
ret
adc
dec
add
and
shl
hlt
add
les
mov
sbb
pop
sub
xor
test
shl
clc
jb
add
mov
cmp
cmp
dec
jo
adc
ret
mov
add
repz
dec
add
retf
mov
mov
scas
push
std
pop
adc
pusha
bound
inc
gs
loopne
int3
and
inc
dec
push
outs
ret
fst
nop
sbb
push
loopne
adc
lods
xor
add
adc
adc
icebp
push
xor
push
push
test
in
in
loope
(bad)
add
push
sbb
cs
mov
push
int3
nop
and
lock
sar
test
push
(bad)
add
in
aaa
adc
nop
clc
or
je
cmp
iret
clc
add
inc
adc
scas
call
cwde
ror
outs
sub
or
mov
jmp
mov
xor
add
sub
ins
adc
xchg
inc
or
inc
and
sub
adc
retf
add
loop
adc
inc
adc
ret
movs
add
les
xchg
adc
call
rol
test
add
loope
mov
xor
pop
inc
adc
sbb
aas
mov
or
pusha
movq
or
mov
push
or
jbe
mov
adc
js
sbb
nop
sbb
xor
inc
xor
or
popa
mov
dec
inc
ins
or
or
add
mov
mov
or
sbb
add
or
out
xchg
lea
fiadd
or
add
adc
(bad)
adc
les
sbb
sub
xor
inc
adc
(bad)
inc
(bad)
les
(bad)
bound
test
cs
mov
sbb
dec
inc
sub
inc
mov
test
sbb
mov
test
test
push
or
adc
inc
jmp
inc
sub
adc
les
add
test
dec
test
ror
jbe
mov
dec
or
dec
and
cmp
(bad)
outs
aam
sahf
pop
cdq
test
sbb
add
inc
pop
inc
jmp
mov
add
and
test
cmp
xchg
bound
adc
(bad)
cmp
pusha
xchg
ror
add
pusha
inc
and
call
jo
inc
add
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
add
rol
lock
xor
fadd
popa
pushf
mov
pop
push
xor
dec
mov
adc
es
pop
(bad)
xchg
test
or
push
and
arpl
movs
add
dec
xor
test
mov
out
fsub
xlat
pusha
into
daa
pop
mov
mov
push
cmp
add
inc
push
test
scas
mov
inc
pusha
xchg
test
or
pusha
add
and
iret
lahf
aas
adc
xor
rol
sahf
push
cmp
inc
add
(bad)
sub
je
adc
push
mov
pop
fs
jo
inc
(bad)
jae
add
add
add
and
aaa
dec
ror
and
add
cmp
icebp
rcl
pop
mov
pop
je
loopne
add
push
push
add
inc
adc
push
int3
out
scas
mov
push
enter
inc
(bad)
aam
mov
pop
stos
jg
inc
test
or
jo
or
mov
jns
pusha
in
or
cld
repz
imul
xor
das
or
rol
pop
rol
or
adc
adc
pop
mov
loop
push
add
or
pop
sbb
cld
inc
add
or
sub
xlat
movups
test
push
or
inc
sbb
add
nop
pop
pop
cli
or
jno
shl
adc
nop
add
cmps
movs
rol
test
inc
or
dec
push
inc
add
xor
or
sub
adc
add
mul
hlt
inc
sbb
and
nop
ror
sub
add
add
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
inc
pop
mov
dec
pushf
dec
mov
ret
dec
add
pop
fdivr
arpl
jmp
or
xor
mov
inc
or
inc
mov
add
or
or
dec
jo
adc
xor
call
xor
invlpg
inc
ja
add
jo
lods
or
cmp
popa
ins
mov
sub
pop
mov
stos
jno
into
sbb
push
sub
cmc
inc
add
mov
cmp
mov
or
sbb
movs
inc
adc
ja
sub
int3
enter
add
scas
gs
xchg
inc
inc
test
outs
mov
pusha
add
movs
nop
shr
or
cmp
adc
push
mov
mov
rcl
push
cmp
pusha
add
xor
in
add
cmp
call
movlhps
or
or
inc
xor
das
(bad)
adc
sub
pop
call
das
xlat
aam
add
cmp
jo
add
mov
or
adc
sub
rcr
js
xor
daa
loopne
rol
fadd
or
aam
(bad)
push
cmp
or
(bad)
jl
add
clc
inc
mov
jg
push
push
xor
or
je
inc
jno
cmp
popa
int3
add
pop
(bad)
mov
clc
out
add
(bad)
add
jl
lds
inc
hlt
icebp
add
inc
sbb
repnz
adc
push
pop
jo
adc
jmp
mov
adc
or
xor
inc
add
movs
pusha
push
or
xchg
push
dec
add
add
cmps
push
gs
into
sub
add
sbb
inc
adc
fdiv
jg
push
adc
rol
or
xchg
cmps
xchg
sub
adc
add
aad
dec
adc
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
inc
add
and
dec
mov
sbb
or
ss
hlt
ss
inc
inc
pop
xchg
nop
retf
xchg
out
cmp
dec
xor
add
dec
ja
shr
inc
jg
xchg
pop
imul
add
or
xchg
rol
and
pop
mov
mov
or
loopne
sub
xor
xchg
inc
enter
pop
push
loopne
add
sbb
dec
and
push
cmp
mov
add
jo
out
xchg
test
add
pop
add
sub
and
adc
or
fs
sti
xchg
jbe
cwde
push
inc
ficomp
sbb
jb
test
cld
imul
enter
push
add
inc
sbb
push
or
shl
or
std
out
inc
pop
push
pop
cmp
dec
ror
or
movs
cmp
cmp
jle
popa
test
cdq
pmulhuw
push
xchg
and
cmp
cmp
inc
add
js
repnz
adc
sub
cld
add
add
rcr
pop
add
or
jecxz
add
adc
js
dec
sbb
add
enter
and
inc
or
sbb
in
or
adc
pop
adc
push
or
jl
add
push
sbb
push
dec
cdq
inc
or
repz
lds
xchg
adc
add
imul
adc
call
cwde
adc
inc
add
add
dec
push
or
pop
and
dec
and
jne
iret
cvtpi2ps
xor
ds
aam
pusha
or
fcom
adc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
inc
pop
push
and
dec
mov
daa
xor
and
sbb
lock
add
and
and
add
sub
aaa
jo
scas
jo
scas
mov
leave
or
rcr
adc
push
mov
in
fstp
pop
adc
ret
ficom
test
and
scas
mov
pop
stos
jno
into
sbb
adc
cmp
add
push
test
aam
sub
jp
les
mov
add
es
push
push
(bad)
mov
loop
lock
pop
push
mov
xor
add
mov
add
jmp
movs
inc
xchg
data16
add
sub
lock
inc
nop
add
js
lock
nop
push
add
and
xor
push
push
pop
sub
adc
call
call
sbb
mov
push
pop
sub
dec
mov
dec
mov
cmp
or
mov
arpl
aas
test
jo
add
movs
push
inc
sbb
call
cmp
sar
add
add
std
arpl
pop
adc
imul
test
dec
sbb
cmp
or
aas
pop
clc
repz
sub
add
jl
lds
inc
hlt
icebp
add
inc
sbb
and
pop
push
and
jmp
inc
cmp
daa
or
xor
inc
add
movs
mov
inc
leave
adc
push
nop
test
sbb
dec
and
xor
inc
fwait
ins
xor
sub
push
cmp
or
ret
add
popa
sub
or
movs
inc
or
aad
dec
adc
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
inc
add
dec
pushf
dec
mov
inc
ss
pop
fdivr
add
xchg
or
mov
xor
test
pusha
or
rol
call
add
loop
sub
sub
in
(bad)
mov
xor
pop
ja
xchg
mov
inc
or
sbb
scas
ins
lods
cmps
xchg
xor
or
xor
push
push
imul
into
daa
pop
mov
mov
pop
jg
and
pop
rol
mov
sub
fld
and
xor
pop
pusha
adc
(bad)
sbb
or
inc
add
or
or
and
and
adc
add
adc
popa
or
pusha
mov
pop
movs
nop
or
outs
add
inc
sbb
nop
mov
pop
add
loop
cmc
loope
test
mov
add
lods
mov
add
nop
push
or
lds
or
adc
or
cld
cmps
inc
add
or
cmp
or
lods
cld
add
pop
cmp
mov
lock
inc
stos
lds
pop
das
pop
adc
push
dec
xchg
xchg
xlat
pushf
adc
or
or
rol
clc
jae
pxor
add
sbb
invd
ins
dec
rol
les
pop
fs
sbb
xchg
add
sahf
rol
sub
push
inc
leave
pop
and
inc
and
stc
xchg
or
cli
repz
sub
xchg
push
add
inc
pusha
shl
das
call
arpl
rol
push
cmp
dec
or
and
sbb
mov
movs
cmp
add
loopne
inc
movzx
loopne
add
dec
shl
sbb
add
add
lock
add
shr
and
nop
ror
sub
add
add
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
inc
pop
mov
dec
pushf
dec
mov
ret
dec
add
pop
fdivr
arpl
jmp
or
xor
mov
inc
or
inc
mov
add
or
or
dec
jo
adc
xor
call
xor
invlpg
inc
ja
add
jo
lods
or
cmp
popa
ins
mov
sub
pop
mov
stos
jno
into
sbb
push
sub
cmc
inc
add
mov
cmp
mov
or
sbb
movs
inc
adc
ja
sub
int3
enter
add
scas
gs
xchg
inc
inc
test
outs
mov
pusha
add
movs
nop
shr
or
cmp
adc
push
mov
mov
rcl
push
cmp
pusha
add
xor
in
add
cmp
call
movlhps
or
or
inc
xor
das
(bad)
adc
sub
pop
call
das
xlat
aam
add
cmp
jo
add
mov
or
adc
sub
rcr
js
xor
daa
loopne
rol
fadd
or
aam
(bad)
push
cmp
or
(bad)
jl
add
clc
inc
mov
jg
push
push
xor
or
je
inc
jno
cmp
popa
int3
add
pop
(bad)
mov
clc
out
add
(bad)
add
jl
lds
inc
hlt
icebp
add
inc
sbb
repnz
adc
push
pop
jo
adc
jmp
mov
adc
or
xor
inc
add
movs
pusha
push
or
xchg
push
dec
add
add
cmps
push
gs
into
sub
add
sbb
inc
adc
fdiv
jg
push
adc
rol
or
xchg
cmps
xchg
sub
adc
add
aad
dec
adc
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
inc
add
and
dec
mov
sbb
or
ss
hlt
ss
inc
inc
pop
xchg
nop
retf
xchg
out
cmp
dec
xor
add
dec
ja
shr
inc
jg
xchg
pop
imul
add
or
xchg
rol
and
pop
mov
mov
or
loopne
sub
xor
xchg
inc
enter
pop
push
loopne
add
sbb
dec
and
push
cmp
mov
add
jo
out
xchg
test
add
pop
add
sub
and
adc
or
fs
sti
xchg
jbe
cwde
push
inc
ficomp
sbb
jb
test
cld
imul
enter
push
add
inc
sbb
push
or
shl
or
std
out
inc
pop
push
pop
cmp
dec
ror
or
movs
cmp
cmp
jle
popa
test
cdq
pmulhuw
push
xchg
and
cmp
cmp
inc
add
js
repnz
adc
sub
cld
add
add
rcr
pop
add
or
jecxz
add
adc
js
dec
sbb
add
enter
and
inc
or
sbb
in
or
adc
pop
adc
push
or
jl
add
push
sbb
push
dec
cdq
inc
or
repz
lds
xchg
adc
add
imul
adc
call
cwde
adc
inc
add
add
dec
push
or
pop
and
dec
and
jne
iret
cvtpi2ps
xor
ds
aam
pusha
or
fcom
adc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
inc
pop
push
and
dec
mov
daa
xor
and
sbb
lock
add
and
and
add
sub
aaa
jo
scas
jo
scas
mov
leave
or
rcr
adc
push
mov
in
fstp
pop
adc
ret
ficom
test
and
scas
mov
pop
stos
jno
into
sbb
adc
cmp
add
push
test
aam
sub
jp
les
mov
add
es
push
push
(bad)
mov
loop
lock
pop
push
mov
xor
add
mov
add
jmp
movs
inc
xchg
data16
add
sub
lock
inc
nop
add
js
lock
nop
push
add
and
xor
push
push
pop
sub
adc
call
call
sbb
mov
push
pop
sub
dec
mov
dec
mov
cmp
or
mov
arpl
aas
test
jo
add
movs
push
inc
sbb
call
cmp
sar
add
add
std
arpl
pop
adc
imul
test
dec
sbb
cmp
or
aas
pop
clc
repz
sub
add
jl
lds
inc
hlt
icebp
add
inc
sbb
and
pop
push
and
jmp
inc
cmp
daa
or
xor
inc
add
movs
mov
inc
leave
adc
push
nop
test
sbb
dec
and
xor
inc
fwait
ins
xor
sub
push
cmp
or
ret
add
popa
sub
or
movs
inc
or
aad
dec
adc
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
inc
add
dec
pushf
dec
mov
inc
ss
pop
fdivr
add
xchg
or
mov
xor
test
pusha
or
rol
call
add
loop
sub
sub
in
(bad)
mov
xor
pop
ja
xchg
mov
inc
or
sbb
scas
ins
lods
cmps
xchg
xor
or
xor
push
push
imul
into
daa
pop
mov
mov
pop
jg
and
pop
rol
mov
sub
fld
and
xor
pop
pusha
adc
(bad)
sbb
or
inc
add
or
or
and
and
adc
add
adc
popa
or
pusha
mov
pop
movs
nop
or
outs
add
inc
sbb
nop
mov
pop
add
loop
cmc
loope
test
mov
add
lods
mov
add
nop
push
or
lds
or
adc
or
cld
cmps
inc
add
or
cmp
or
lods
cld
add
pop
cmp
mov
lock
inc
stos
lds
pop
das
pop
adc
push
dec
xchg
xchg
xlat
pushf
adc
or
or
rol
clc
jae
pxor
add
sbb
invd
ins
dec
rol
les
pop
fs
sbb
xchg
add
sahf
rol
sub
push
inc
leave
pop
and
inc
and
stc
xchg
or
cli
repz
sub
xchg
push
add
inc
pusha
shl
das
call
arpl
rol
push
cmp
dec
or
and
sbb
mov
movs
cmp
add
loopne
inc
movzx
loopne
add
dec
shl
sbb
add
add
lock
add
shr
and
nop
ror
sub
add
add
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
inc
pop
mov
dec
pushf
dec
mov
ret
dec
add
pop
fdivr
arpl
jmp
or
xor
mov
inc
or
inc
mov
add
or
or
dec
jo
adc
xor
call
xor
invlpg
inc
ja
add
jo
lods
or
cmp
popa
ins
mov
sub
pop
mov
stos
jno
into
sbb
push
sub
cmc
inc
add
mov
cmp
mov
or
sbb
movs
inc
adc
ja
sub
int3
enter
add
scas
gs
xchg
inc
inc
test
outs
mov
pusha
add
movs
nop
shr
or
cmp
adc
push
mov
mov
rcl
push
cmp
pusha
add
xor
in
add
cmp
call
movlhps
or
or
inc
xor
das
(bad)
adc
sub
pop
call
das
xlat
aam
add
cmp
jo
add
mov
or
adc
sub
rcr
js
xor
daa
loopne
rol
fadd
or
aam
(bad)
push
cmp
or
(bad)
jl
add
clc
inc
mov
jg
push
push
xor
or
je
inc
jno
cmp
popa
int3
add
pop
(bad)
mov
clc
out
add
(bad)
add
jl
lds
inc
hlt
icebp
add
inc
sbb
repnz
adc
push
pop
jo
adc
jmp
mov
adc
or
xor
inc
add
movs
pusha
push
or
xchg
push
dec
add
add
cmps
push
gs
into
sub
add
sbb
inc
adc
fdiv
jg
push
adc
rol
or
xchg
cmps
xchg
sub
adc
add
aad
dec
adc
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
mov
inc
add
and
dec
mov
sbb
or
ss
hlt
ss
inc
inc
pop
xchg
nop
retf
xchg
out
cmp
dec
xor
add
dec
ja
shr
inc
jg
xchg
pop
imul
add
or
xchg
rol
and
pop
mov
mov
or
loopne
sub
xor
xchg
inc
enter
pop
push
loopne
add
sbb
dec
and
push
cmp
mov
add
jo
out
xchg
test
add
pop
add
sub
and
adc
or
fs
sti
xchg
jbe
cwde
push
inc
ficomp
sbb
jb
test
cld
imul
enter
push
add
inc
sbb
push
or
shl
or
std
out
inc
pop
push
pop
cmp
dec
ror
or
movs
cmp
cmp
jle
popa
test
cdq
pmulhuw
push
xchg
and
cmp
cmp
inc
add
js
repnz
adc
sub
cld
add
add
rcr
pop
add
or
jecxz
add
adc
js
dec
sbb
add
enter
and
inc
or
sbb
in
or
adc
pop
adc
push
or
jl
add
push
sbb
push
dec
cdq
inc
or
repz
lds
xchg
adc
add
imul
adc
call
cwde
adc
inc
add
add
dec
push
or
pop
and
dec
and
jne
iret
cvtpi2ps
xor
ds
aam
pusha
or
fcom
adc
add
add
add
add
dec
add
push
add
add
popa
xor
sbb
pop
add
push
push
add
ins
je
add
add
inc
dec
inc
cmp
popa
inc
add
add
inc
(bad)
call
outs
jo
mov
mov
push
dec
add
add
aad
(bad)
fld
hlt
scas
scas
cmps
gs
jmp
(bad)
(bad)
and
int
lock
dec
cdq
push
add
cwde
push
lods
xchg
xrelease
add
jns
(bad)
in
sbb
cmps
ja
mov
mov
adc
mov
shr
sti
clc
loopne
pop
pop
(bad)
jne
mov
add
lods
add
xchg
(bad)
dec
std
mov
std
mov
pop
pusha
fs
(bad)
std
stos
jne
mov
mov
mov
jmp
retf
das
(bad)
fcomp
mov
movs
pop
add
add
enter
sbb
push
fidiv
std
int
call
call
call
jno
(bad)
movs
add
dec
dec
stc
jmp
cs
or
xchg
add
jmp
cmps
movs
pop
aad
mov
out
or
movs
add
mov
in
add
fadd
mov
or
test
fnstsw
cli
movs
xor
xor
jmp
sub
fcmovu
shr
sti
mov
in
adc
stos
add
retf
mov
sub
(bad)
mov
(bad)
hlt
or
cmp
daa
add
enter
adc
dec
pop
test
add
cdq
adc
div
push
int3
pop
(bad)
aad
xor
push
(bad)
fisttp
mov
rcr
leave
adc
fistp
xchg
jbe
call
xchg
push
fisttp
mov
sbb
sbb
cld
std
cmc
popf
sahf
mov
push
fadd
fwait
scas
xchg
or
idiv
(bad)
std
repnz
adc
repz
or
or
mov
mul
icebp
in
pop
test
and
add
stos
lods
das
fnsave
lods
add
mov
std
cmps
adc
inc
sub
adc
repnz
repz
cmc
sbb
fcmove
in
add
out
add
pusha
jmp
xlat
add
ja
aad
pop
repnz
pushf
daa
daa
jecxz
add
fild
cmc
cmc
jmp
ds
mov
repz
call
adc
mov
fild
xor
sti
out
lock
rcl
fld
neg
jecxz
stos
or
xor
cli
imul
mov
mul
push
cld
idiv
clc
mov
mov
cmp
jmp
push
add
inc
(bad)
out
add
test
out
jmp
add
inc
jecxz
jmp
add
test
add
repz
retf
add
movs
sti
jmp
clc
not
scas
ins
or
jecxz
repz
iret
ret
repz
div
add
fisttp
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
or
add
or
adc
push
pop
and
clc
pop
enter
xchg
and
dec
mov
nop
inc
ficom
fmul
mov
les
dec
mov
inc
nop
add
aam
mov
dec
jg
sbb
loop
and
nop
inc
inc
pop
lds
jmp
xchg
push
xor
add
pop
add
jbe
push
dec
imul
clc
adc
nop
push
call
push
cmp
and
std
adc
add
pop
mov
inc
pop
dec
sub
sbb
(bad)
adc
nop
mov
mov
rcl
inc
jo
and
loope
and
cld
inc
loop
jo
mov
and
dec
jb
add
jae
fsub
mov
pop
cmp
test
rcr
inc
or
inc
mov
sbb
repz
lds
fbld
mov
mov
call
outs
fnstsw
jne
lahf
aas
fsub
jge
sbb
arpl
cmp
mov
out
pushf
(bad)
jmp
add
sahf
jp
pop
pusha
add
or
jns
(bad)
pop
cmc
cmp
add
jmp
adc
cmp
pop
clc
lahf
js
pop
push
fld
push
je
and
mov
inc
adc
sbb
dec
call
and
sbb
pop
jb
aad
bound
sbb
fadd
rcr
adc
jno
mov
(bad)
cmp
cdq
xchg
push
add
test
mov
add
pop
mov
mov
movs
cmp
xchg
pop
es
in
sbb
xchg
push
ds
xchg
sub
xor
or
les
pop
sbb
inc
cmp
into
lahf
in
jae
mov
mov
or
xor
jp
add
cld
cmp
cmp
pusha
push
mov
xchg
push
push
add
push
clc
xor
cmp
lods
jmp
in
fsubr
xchg
mov
clc
rol
adc
add
add
cdq
into
jp
add
rcr
jmp
add
push
mov
mov
mov
cmps
mov
fild
mov
mov
mov
js
mov
fcom
pop
dec
pop
cmp
sub
sbb
dec
fcmovnb
ret
jnp
mov
fs
movs
out
or
or
pop
rcr
das
pushf
stos
sub
adc
ror
adc
inc
xchg
retf
adc
cmp
cmps
fs
or
or
xchg
xor
or
add
mov
add
adc
ds
cmp
aam
xchg
push
mov
lock
inc
daa
cs
repnz
or
sbb
loopne
push
inc
mov
in
or
pop
hlt
loope
fiadd
sub
xchg
sub
adc
call
(bad)
fnstcw
push
and
inc
in
adc
and
or
lahf
add
or
dec
cdq
and
sbb
xor
pop
js
push
add
sbb
or
push
hlt
adc
sbb
mov
inc
add
hlt
xor
mov
or
ret
cmp
and
push
(bad)
and
inc
adc
movs
and
ror
ds
jns
add
add
ror
jmp
mov
in
loope
or
movs
mov
xchg
cmp
adc
inc
shl
and
outs
loopne
pop
je
sub
dec
repnz
cmp
and
sub
and
ss
aas
or
jnp
and
or
inc
add
sub
idiv
jo
ja
or
inc
shl
data16
cmp
add
xor
mov
and
or
xor
mov
call
test
or
push
cld
repnz
mov
lds
cmp
and
stc
not
dec
add
or
bound
arpl
sub
outs
sbb
cwde
hlt
pop
jne
mov
push
push
xchg
inc
ins
ins
xor
and
sbb
and
es
adc
adc
addr16
fsubr
add
xchg
loope
test
inc
sbb
mov
fmul
test
mov
xchg
mov
add
and
cmp
mov
mov
nop
inc
or
ret
adc
mov
sahf
mov
xchg
test
or
or
dec
loopne
(bad)
stc
sbb
or
add
mov
add
xchg
add
cmc
out
imul
or
jg
jmp
or
mov
jl
push
push
loopne
into
jp
test
and
into
push
call
sub
hlt
cmps
test
dec
add
sub
inc
pavgb
and
inc
xchg
clc
shl
loope
add
sbb
jns
mov
dec
jo
rol
pop
xor
inc
add
pusha
add
sbb
xchg
add
daa
cmp
sub
test
pop
inc
adc
cwde
mov
mov
or
adc
jl
push
and
loopne
hlt
pusha
mov
test
rol
adc
loopne
pop
pop
popa
or
dec
add
push
dec
add
or
cmp
inc
mov
popa
add
and
add
sbb
inc
jnp
inc
add
je
add
inc
pop
sub
lahf
or
add
push
and
inc
or
add
inc
inc
and
pop
std
stos
sbb
jo
sub
test
cmp
(bad)
sbb
int
cld
loopne
ja
mov
sbb
xchg
or
jb
inc
mov
sub
push
mov
loopne
add
push
pop
add
push
mov
inc
movs
inc
sbb
scas
jo
inc
push
scas
pop
jl
push
push
pusha
bound
mov
add
cwde
loop
cmp
add
pop
mov
sub
pop
in
pop
mov
mov
sbb
rcl
cmp
and
and
mov
sbb
add
es
push
add
and
cmp
dec
sbb
add
add
dec
pop
out
loope
push
xor
adc
adc
sbb
ret
push
das
jo
xor
add
adc
cld
xor
add
inc
imul
arpl
push
add
mov
lea
mov
add
in
and
inc
rol
clc
adc
lock
mov
cwde
sbb
push
pusha
add
add
or
mov
push
add
call
pop
add
mov
iret
adc
rol
dec
rcl
cmp
cs
mov
sub
or
sub
push
js
push
(bad)
sbb
dec
adc
and
ret
and
push
sub
xchg
inc
sub
xor
jmp
adc
push
pop
adc
inc
iret
cs
mov
xchg
dec
jmp
test
sub
sbb
test
mov
test
data16
int
add
(bad)
mov
pop
inc
and
and
outs
ja
add
ja
jne
push
push
jp
pop
mov
cmp
shr
mov
inc
dec
and
jp
inc
(bad)
or
popf
pop
rol
push
out
nop
fwait
dec
bound
pop
js
daa
shl
mov
or
mov
repnz
mov
sub
jo
mov
or
mov
or
dec
add
mov
or
pusha
test
add
add
inc
sub
add
add
add
add
or
add
or
jo
mov
pop
enter
test
mov
lds
xchg
popa
inc
lea
dec
and
and
jb
stc
xor
xchg
adc
mov
sbb
dec
leave
inc
mov
dec
pop
cli
ret
ret
test
dec
sbb
xchg
sbb
adc
lods
sbb
cld
mov
(bad)
sahf
or
or
or
ret
jl
loope
out
test
cmp
add
mov
in
loopne
dec
sub
aam
shl
and
jo
add
ins
cld
ret
and
inc
and
mov
sbb
push
sub
mov
jo
sbb
mov
(bad)
test
cmp
mov
adc
xchg
push
xor
pop
es
inc
lahf
push
cmp
mov
neg
sbb
jle
iret
push
and
push
cli
add
cs
addr16
or
out
shl
call
cmp
rol
in
cmp
dec
cmp
adc
mov
xchg
nop
cmp
mov
shl
in
mov
inc
hlt
loope
push
adc
push
or
cmp
adc
std
rol
xor
into
cmp
add
inc
push
inc
loope
and
(bad)
and
ds
add
shr
test
and
adc
mov
cmp
inc
test
mov
push
mov
or
mov
and
jo
inc
add
je
jne
out
xor
icebp
inc
aaa
inc
sub
inc
and
outs
jbe
daa
popf
or
ror
xchg
jge
ss
inc
sub
xchg
(bad)
aas
add
dec
inc
mov
mov
cmps
or
adc
xchg
out
inc
inc
and
add
inc
fiadd
xchg
arpl
inc
push
mov
xor
loope
jae
cmp
stc
add
cmp
pushf
add
or
pop
fidivr
sbb
or
add
aas
(bad)
xchg
shr
loop
or
ret
push
mov
or
in
ror
int3
ds
rol
fwait
sbb
cmp
adc
push
sti
verw
mov
pushf
ror
cmp
(bad)
movs
hlt
add
jmp
xlat
add
cmp
ins
mov
nop
add
and
adc
or
(bad)
pushf
mov
sub
cs
add
push
mov
inc
sbb
sbb
add
inc
add
add
inc
int3
shr
push
jo
mov
jl
or
adc
cdq
xchg
or
mov
add
xchg
pop
frndint
pop
and
mov
push
sbb
sub
push
pop
xchg
adc
or
test
fcmovbe
pop
pop
adc
rol
dec
add
cmp
add
cmp
sbb
push
dec
cmp
mov
enter
xor
aaa
adc
rcr
jmp
inc
sub
rol
push
or
xor
inc
fild
in
inc
adc
add
add
fst
adc
es
inc
push
dec
lock
in
mov
pop
into
cmc
in
ss
addr16
pusha
add
and
mov
adc
adc
cmp
jno
cmp
fcom
int3
mov
xchg
xchg
dec
xor
mov
push
jne
ror
lock
arpl
or
and
add
or
movlps
cmp
mov
push
jle
xchg
and
jnp
add
jo
pop
call
add
add
mov
shl
into
pop
ret
clc
dec
and
push
popa
push
sbb
or
push
imul
lds
push
icebp
(bad)
in
inc
pop
fadd
(bad)
or
xchg
or
and
pop
mov
aas
test
ret
jg
mov
sbb
add
in
popa
movhps
add
mov
sbb
icebp
mov
jle
ret
push
sub
adc
mov
sbb
add
wrmsr
(bad)
or
loope
push
call
rcl
adc
in
lahf
add
lds
mov
push
cmp
jo
or
mov
xor
push
rol
pop
add
inc
out
sbb
or
pusha
loope
movs
and
daa
and
mov
adc
sbb
xor
cmp
loopne
enter
imul
or
nop
ret
js
or
cmp
jo
cmp
add
mov
or
ret
add
mov
and
or
xchg
mov
rcr
xchg
push
push
in
sbb
push
and
jno
ret
add
in
rol
clc
cdq
out
add
pop
sar
mov
inc
push
and
rol
loope
inc
aam
add
rol
sbb
inc
rcr
mov
cmp
rol
rol
mov
inc
and
adc
push
dec
inc
nop
xor
add
ds
jno
js
fldenv
jno
inc
sbb
sub
adc
pop
mov
add
lock
nop
adc
inc
add
test
push
jae
adc
cmp
pusha
add
xchg
mov
inc
push
leave
pop
lock
scas
and
xor
push
test
stos
jne
cdq
xchg
arpl
test
add
hlt
(bad)
sbb
jo
or
rcl
sub
or
loop
imul
pop
rol
mov
xchg
and
jecxz
das
jo
add
sub
mov
popa
xor
adc
pop
cmp
stos
adc
pusha
scas
cmp
mov
push
add
rol
jl
and
cwde
rcl
add
push
add
and
jbe
(bad)
sub
lock
dec
or
mov
pop
shl
pop
jecxz
push
pop
pop
mov
and
inc
popa
add
sub
add
cmp
aas
add
lods
and
aad
outs
push
adc
wrmsr
xlat
shl
sbb
pusha
loopne
dec
rol
add
sbb
adc
sbb
rol
stos
push
enter
push
js
adc
mov
or
pop
push
mov
add
add
retf
jae
repz
pop
add
cmp
add
mov
inc
call
sbb
mov
add
cdq
cs
ins
push
add
stc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
add
or
inc
add
add
inc
sub
add
add
add
inc
dec
sbb
mov
rol
inc
or
xchg
or
push
les
push
push
mov
push
xor
call
cld
jge
js
movs
mov
fs
scas
or
adc
je
mov
pusha
mov
sti
(bad)
(bad)
pushf
stc
rcl
mov
call
mov
fcmovnb
gs
aas
inc
inc
cld
and
dec
add
pop
adc
sub
stos
pop
pusha
lods
xchg
(bad)
imul
inc
clc
pop
cmp
jmp
pop
aaa
pop
pop
adc
pop
xchg
test
mov
rol
in
pusha
mov
imul
or
popfw
mov
sti
mov
popf
push
pop
ror
cmp
mov
hlt
cld
dec
sbb
pop
call
and
mov
push
mov
loop
mov
mov
jae
ins
xlat
inc
mov
sti
inc
hlt
repnz
daa
adc
lods
push
pop
push
jge
pop
rol
inc
in
push
mov
pop
pop
and
les
inc
js
test
inc
cdq
mov
out
icebp
rol
xor
aas
aam
xchg
and
add
call
inc
movs
inc
jmp
inc
push
and
in
cwde
fidivr
jecxz
add
popa
jnp
sub
cmp
mov
inc
aas
push
adc
inc
cs
cmp
dec
cmp
pushf
mov
and
repnz
sbb
add
push
movs
and
aas
jmp
mov
fdivr
push
mov
sbb
jmp
add
pop
hlt
push
sub
push
sub
lods
adc
jl
jmp
push
and
in
add
inc
enter
pop
popf
add
or
mov
push
or
xor
aaa
aaa
and
xor
mov
rol
jo
ret
into
mov
hlt
xor
in
inc
hlt
xchg
ret
cmp
adc
push
(bad)
and
inc
adc
movs
and
ror
add
add
add
xor
rcl
push
jnp
add
or
push
pop
das
inc
clc
push
xor
sbb
xchg
dec
push
outs
lock
mov
sahf
and
push
outs
jmp
shl
push
inc
movs
pusha
ret
aam
mov
pop
rcl
adc
inc
adc
mov
inc
lahf
shr
out
arpl
mov
outs
mov
fsubr
mov
ss
or
and
add
(bad)
int3
mov
ins
inc
adc
setb
jg
mov
loope
dec
add
xchg
mov
mov
mov
(bad)
cmc
aas
mov
sbb
mov
repz
inc
popf
bound
cmp
push
stos
fmul
xchg
mov
scas
adc
sbb
or
nop
retf
xchg
push
mov
sub
mov
pop
lods
ret
aas
cmp
pop
imul
mov
pop
adc
xor
cmp
mov
pusha
cmp
jns
and
or
pop
aad
test
mov
mov
loope
jo
call
dec
add
fcmovne
pop
inc
daa
pop
hlt
dec
or
cld
nop
xchg
add
rcl
pushf
jo
push
jbe
dec
adc
nop
mov
xor
fimul
pop
or
test
sbb
lods
mov
sbb
xor
(bad)
xor
or
les
pop
lock
adc
jae
xor
stc
or
sub
inc
adc
and
jmp
add
pop
rol
loopne
aas
and
add
hlt
dec
push
rol
pop
sbb
or
add
stos
repnz
adc
add
adc
pop
in
cs
inc
add
loope
xor
mov
and
pusha
inc
aas
mov
push
and
inc
pop
push
dec
add
or
cmp
inc
mov
dec
and
and
add
pop
xchg
pop
sbb
add
fdivp
xchg
outs
sub
or
call
adc
and
sub
test
cmp
mov
sbb
pop
push
lock
jo
inc
xor
add
mov
adc
dec
add
cmp
or
add
mov
aas
or
adc
or
test
push
(bad)
and
mov
pop
dec
cmp
or
cwde
push
adc
push
sub
push
adc
sub
fadd
pop
sub
or
add
xor
inc
nop
shr
or
cwde
(bad)
adc
sub
add
fs
shl
nop
dec
pop
mov
sbb
ret
adc
and
mul
add
fs
sbb
or
loopne
inc
fadd
push
sub
dec
push
ins
and
push
push
and
ret
push
mov
push
add
xor
adc
mov
sbb
ret
push
das
jo
xor
add
adc
jp
je
bound
pop
pop
adc
and
push
adc
add
pop
and
xor
and
adc
inc
rol
clc
adc
lock
sbb
ds
pop
sbb
adc
rol
and
(bad)
pusha
les
xchg
loopne
aaa
xchg
add
mov
pminsw
add
fsubr
mov
shl
jo
or
sub
test
mov
pop
mov
cmp
cwde
and
dec
clc
test
jo
mov
dec
inc
adc
add
pusha
gs
xchg
mov
test
adc
loopne
add
cli
sbb
loope
(bad)
inc
sub
pop
and
das
sbb
sbb
rol
mov
mov
ror
add
add
pop
sub
lea
jo
(bad)
addr16
push
adc
add
cmp
mov
mov
rol
dec
jo
and
mov
cmp
adc
dec
pushf
mov
xchg
test
and
test
je
or
and
xchg
sbb
loope
dec
dec
inc
sbb
mov
aas
mov
push
and
push
adc
sub
add
or
adc
mov
lock
or
ret
or
and
add
add
inc
sub
add
add
or
add
or
outs
mov
or
pusha
xor
mov
dec
adc
aaa
scas
sbb
jg
(bad)
xchg
and
jmp
mov
loope
gs
push
sub
add
cmps
call
(bad)
mov
inc
jl
in
sub
jmp
cmp
neg
dec
nop
add
sub
inc
rol
mov
rcr
inc
mov
loopne
add
cmp
bswap
inc
pop
nop
jbe
or
lods
jb
cmps
sar
inc
add
sbb
aad
test
sbb
call
sbb
in
test
add
lods
xchg
icebp
aad
mov
jae
icebp
pusha
sub
jne
cmp
inc
out
or
jnp
movs
repz
stos
mov
or
neg
pop
add
cmp
push
dec
sub
cmps
(bad)
mov
adc
add
sbb
retf
les
pop
rcl
daa
mov
stc
add
add
inc
sub
add
and
sbb
add
inc
dec
sbb
mov
shl
xchg
xor
mov
ret
adc
(bad)
dec
pushf
sub
pop
cmp
cwde
dec
and
cmp
test
xchg
mov
iret
cdq
adc
bound
shl
inc
cmp
out
scas
pop
aad
clc
dec
daa
lds
xor
fcomp
mov
sub
xor
jle
pusha
mov
pop
shl
push
and
ror
shr
bound
adc
and
stos
or
adc
jmp
retf
push
pop
mov
adc
adc
adc
sahf
sub
loop
pop
and
cmp
enter
xchg
add
leave
and
jge
dec
xchg
xlat
inc
push
inc
xchg
cmp
nop
sbb
cmp
pusha
outs
test
sub
add
mov
cmp
sub
int3
cmc
xchg
fsub
rcl
test
sbb
imul
scas
or
jp
das
add
inc
out
mov
jno
js
sbb
xchg
push
and
mov
loope
xor
test
add
rcr
imul
enter
or
rol
mov
inc
fldenv
lock
jb
loope
add
jae
inc
push
sbb
push
add
in
icebp
rol
mov
or
ss
add
sub
add
push
cld
rol
mov
add
sbb
cmp
push
dec
je
pop
cmp
iret
sub
je
cmp
outs
pushf
pop
cmps
inc
sar
sbb
shl
enter
add
add
mov
add
and
mov
retf
xor
sar
jmp
movs
into
cs
rcr
dec
or
xchg
sub
int3
cli
iret
or
add
add
stc
add
add
inc
sub
add
add
add
add
or
mov
mov
pop
enter
jb
and
mov
adc
sbb
popf
inc
lea
fist
sahf
sub
lock
and
dec
sbb
lea
add
mov
test
jno
xchg
sbb
xor
ror
sar
xchg
ret
(bad)
(bad)
call
out
add
jl
pop
inc
dec
adc
or
lods
notrack
jge
push
pop
pop
sbb
sub
mov
add
adc
mov
and
xchg
xor
ror
retf
and
inc
mov
pop
mov
inc
push
nop
add
adc
cmp
je
push
or
test
popa
pop
xchg
inc
wrmsr
fs
cmps
ss
add
ins
and
add
aaa
sub
nop
and
into
cmp
push
cmp
xchg
sbb
rcl
mov
daa
jb
into
je
dec
ins
add
jno
mov
repnz
pop
dec
dec
mov
push
jge
ins
and
mov
sub
dec
jp
lds
cmp
in
movs
add
mov
xlat
cwde
jo
inc
and
xchg
repz
cmp
mov
addr16
sub
(bad)
mov
loopne
inc
inc
dec
push
nop
cmp
call
pushf
add
sbb
stos
call
dec
sbb
dec
dec
cmp
xrelease
push
dec
sub
add
xor
test
inc
out
mov
pushf
jo
or
mov
xchg
or
ror
loopne
out
sbb
cmp
push
test
mov
inc
add
xchg
jo
add
dec
add
mov
aas
nop
stos
arpl
test
mov
add
test
adc
inc
stos
out
add
jmp
fcmovnb
adc
fcom
push
add
stc
xchg
adc
stos
out
loope
sub
cmp
inc
aaa
push
xor
enter
and
ins
inc
(bad)
(bad)
pop
adc
pop
mov
pop
add
inc
mov
imul
push
cld
inc
or
in
es
push
or
push
mov
fsubr
rcl
push
xor
xchg
inc
sbb
repnz
cdq
and
stc
sub
icebp
lds
rol
(bad)
or
mov
lods
rol
sbb
sub
leave
stc
or
inc
add
stc
add
add
inc
sub
add
add
or
add
or
push
loopne
adc
sub
rol
jns
dec
pop
mov
rol
add
cdq
mov
add
clc
shr
mov
xchg
adc
cs
jae
cs
rol
adc
int3
sub
dec
fmul
sub
loopne
sbb
clc
out
bound
sbb
sub
push
xor
sbb
sti
aaa
mov
or
add
mov
leave
shl
mov
push
cmps
dec
daa
lock
nop
sbb
imul
pushf
sub
jb
mov
jo
jns
add
mov
cmp
inc
jecxz
mov
and
into
fmul
add
mov
(bad)
jae
inc
mov
in
sub
cmp
ss
fiadd
xchg
sbb
fmul
mov
aad
pop
push
xchg
lea
sbb
test
les
jo
call
xor
inc
cmp
(bad)
sbb
sti
or
nop
test
es
or
jno
xor
push
adc
rol
and
pusha
ret
add
sbb
mov
mov
or
mov
lods
sub
pop
jbe
mov
or
and
xchg
loop
add
and
xor
push
ret
jecxz
in
jae
sbb
gs
arpl
or
movs
rcl
loope
jns
xor
les
and
xchg
push
sbb
pop
mov
dec
sub
mov
sub
adc
aas
push
xor
out
add
adc
movs
push
sub
or
out
jmp
pusha
ret
or
ret
pushf
xchg
daa
cmp
inc
adc
add
ret
adc
sar
loope
xchg
push
inc
adc
jmp
in
mov
call
inc
adc
sbb
in
inc
cdq
cld
add
jnp
and
mov
xchg
push
add
and
enter
(bad)
rcl
push
cmp
inc
xor
in
rol
sub
adc
pop
mov
retf
sbb
or
mov
jb
push
sub
mov
inc
push
xchg
mov
loope
aas
xchg
cld
xor
mov
cld
repz
adc
mov
mov
inc
ret
mov
call
mov
xor
pop
and
mov
sub
ins
int
mov
and
add
add
inc
sub
add
add
add
add
or
add
or
ror
rol
adc
ret
xchg
movs
and
arpl
inc
fmul
pop
rol
and
cwde
lea
pop
and
test
dec
lods
jmp
test
pop
xchg
adc
inc
shr
popa
fs
call
rcl
shl
mov
jno
xchg
sbb
adc
loope
loop
inc
aam
xchg
shl
das
stos
or
mov
jecxz
adc
sbb
sub
and
add
jbe
aam
jno
sbb
push
cmp
test
inc
in
jne
xchg
push
pop
xchg
imul
pop
cmp
adc
imul
lds
sub
pop
outs
pop
mov
mov
pop
and
inc
mov
inc
jno
enter
sbb
push
out
push
in
fimul
inc
test
dec
sub
mov
(bad)
fild
cmp
push
adc
cmps
dec
ret
sbb
cmp
std
sti
or
sahf
xchg
das
dec
add
out
and
adc
cmp
mov
pop
js
test
and
sub
repnz
jge
movs
repz
sbb
push
aaa
or
ins
add
push
adc
dec
lods
and
inc
in
push
dec
pop
pop
add
enter
dec
adc
jb
inc
leave
mov
popf
jo
cmp
rcl
add
rol
das
inc
cld
inc
and
jne
or
cmp
rol
ror
pop
js
and
add
add
movs
and
jge
xor
and
bound
je
and
sub
rcl
fs
cmp
lea
cmp
and
rcr
movs
push
test
and
aam
popf
lods
mov
push
or
mov
cmp
mov
pusha
repz
push
fdiv
and
inc
push
test
add
xor
adc
stos
add
sbb
dec
adc
inc
add
jmp
aad
in
mov
xchg
sub
cdq
scas
sub
movs
call
call
adc
repnz
dec
aaa
or
aas
pop
sbb
inc
or
fisub
int3
adc
jle
out
aas
in
dec
or
or
push
loope
add
add
push
and
sbb
and
dec
add
cmp
adc
and
cs
inc
sahf
sub
lds
adc
push
add
or
fs
loopne
dec
sub
mov
jnp
cmp
xor
and
ret
dec
lods
inc
adc
pop
nop
xchg
mov
inc
mov
adc
push
inc
sub
cld
mov
lock
fisttp
lock
lea
inc
xchg
mov
mov
rcr
add
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rcr
les
in
aad
mov
sbb
or
fsubr
adc
push
jp
jo
dec
mov
xchg
sub
cmp
rcr
cld
xor
jp
xor
(bad)
or
inc
cmp
xchg
cmp
adc
dec
adc
adc
call
sbb
inc
xchg
in
das
and
test
fild
loop
jmp
cwde
loopne
and
and
inc
mov
fild
jo
add
push
mov
movs
pusha
int
retf
shl
xchg
sub
clc
fild
ds
add
fs
mov
cmp
and
and
ror
movs
dec
inc
adc
xlat
nop
mov
mov
ret
add
adc
jmp
fcmove
xchg
jmp
mov
cmp
mov
scas
or
cmc
push
mov
jmp
nop
icebp
shr
sub
inc
adc
mov
out
aaa
cwde
cmp
xchg
jle
aam
cmp
pop
adc
aad
or
call
mov
and
add
add
and
sub
ret
ins
inc
bound
arpl
fidiv
call
and
mov
cmp
fimul
adc
mov
repz
add
mov
sti
clc
jecxz
or
loope
or
out
xor
shr
add
xor
movs
xchg
je
xor
or
sbb
pop
add
sbb
inc
cmps
xchg
cmp
push
or
aaa
sbb
call
push
xor
mov
add
push
je
ret
jp
push
pop
mov
movs
xchg
cmps
push
add
adc
xor
or
aaa
ret
dec
mov
ret
push
ud0
inc
adc
sbb
sar
push
(bad)
mov
sbb
icebp
dec
or
cwde
shr
mov
lea
dec
mov
push
in
mov
cmp
push
adc
xor
cmp
sub
jecxz
add
xor
push
fadd
shr
mov
adc
jmp
xor
enter
add
stos
out
test
gs
fs
cld
add
and
jp
ins
jl
mov
add
sub
add
and
or
or
push
ret
cmp
pop
dec
sbb
xor
das
or
sub
add
ins
sbb
test
cwde
pusha
bound
add
or
or
mov
push
jb
lods
xor
push
or
xor
enter
js
dec
push
or
mov
movs
pop
mov
xchg
je
xor
cmp
add
cmp
test
cmps
pop
icebp
dec
add
in
mov
and
fiadd
sbb
push
add
fst
rol
call
scas
inc
outs
cld
sar
dec
mov
mov
jo
dec
out
push
jo
sub
fnstenv
aas
loop
jle
inc
or
fs
in
add
add
stc
add
add
inc
sub
add
add
add
add
inc
dec
sbb
mov
inc
outs
xchg
fcom
mov
(bad)
or
cmp
inc
loop
inc
dec
nop
or
and
int3
inc
pushf
and
add
jb
lock
xor
xchg
push
and
rol
xchg
int3
sbb
(bad)
les
enter
or
and
adc
es
pop
outs
adc
loopne
adc
inc
(bad)
fnstcw
add
cmp
and
push
les
sub
or
or
sbb
inc
add
cmps
push
or
repnz
stos
add
adc
sub
std
push
jno
test
fadd
nop
loope
and
fimul
iret
lahf
mov
jecxz
pop
xor
or
mov
xor
adc
or
add
adc
out
cmc
xor
mov
loop
pop
push
aad
icebp
mov
jecxz
dec
rcl
jecxz
mov
dec
sub
mov
xor
push
add
(bad)
and
test
gs
sub
pop
jne
add
cld
push
retf
call
mov
sbb
xchg
jge
leave
inc
ret
imul
and
push
push
pop
int
and
xchg
imul
pop
nop
pop
push
push
mul
int
pusha
in
xchg
push
push
movs
mov
or
cmp
or
fimul
(bad)
cwde
inc
or
arpl
shl
ret
movs
cmc
fsub
inc
in
adc
cmp
mov
je
and
repnz
arpl
pop
loopne
push
sub
mov
mov
or
pop
ror
xchg
fnstsw
push
rcr
or
popf
xchg
add
pop
inc
mov
aas
lods
and
arpl
daa
push
data16
(bad)
test
add
movs
add
and
mov
jmp
inc
inc
jmp
leave
mov
jmp
dec
test
mov
add
dec
repnz
push
(bad)
into
fimul
cwde
test
mov
stos
cdq
scas
inc
into
and
call
loopne
ret
or
add
mov
stos
sub
dec
sbb
adc
iret
adc
sahf
adc
push
pop
dec
jmp
sbb
add
add
in
xchg
rol
add
and
and
push
mov
dec
dec
ror
lds
cwde
add
inc
jecxz
jns
popa
push
(bad)
call
cmp
shl
test
inc
sbb
hlt
jl
or
mov
adc
xor
ret
pushf
add
or
add
adc
inc
mov
movs
test
(bad)
cmp
xchg
les
xor
repnz
pop
push
push
or
ror
add
test
push
repnz
stc
ror
cmp
push
cmp
inc
mov
imul
dec
adc
add
jmp
aam
rol
add
ror
mov
add
push
call
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
rol
sub
add
adc
add
inc
mov
mov
inc
adc
or
mov
push
xor
pushf
jns
in
xchg
inc
jb
sub
xor
pop
adc
inc
outs
out
daa
dec
adc
mov
pop
push
adc
cmc
test
push
cmc
daa
mov
add
dec
(bad)
sub
jmp
sub
sbb
addr16
repz
jecxz
fidivr
aaa
rcl
das
test
add
pop
mov
nop
cmp
cmps
jno
and
addr16
stos
jnp
lods
dec
jl
es
or
mov
aad
pop
dec
outs
rcr
mov
cmp
jecxz
inc
push
sbb
add
and
imul
inc
enter
out
ss
test
dec
add
cmp
in
inc
adc
mov
adc
pop
mov
aas
or
add
add
jge
pop
xor
enter
mov
sbb
sub
push
or
pop
cmp
add
repz
adc
into
test
inc
mov
dec
popa
add
push
mov
out
jecxz
cmp
(bad)
(bad)
push
pop
dec
nop
inc
adc
lock
cmp
and
int
xor
rol
and
les
mov
xchg
ret
or
mov
add
pop
add
or
es
mov
mov
mov
ins
test
inc
sbb
push
cmp
in
rol
mov
pop
mov
xchg
and
enter
or
pop
cdq
inc
adc
jmp
mov
movs
add
sbb
add
mov
mov
and
lock
adc
inc
or
fs
repz
cmp
and
fdivr
scas
adc
inc
add
sbb
inc
ror
call
and
in
mov
cmp
adc
mov
add
mov
pusha
sbb
sbb
das
call
push
sbb
pusha
imul
lock
inc
jnp
mov
mov
pop
sbb
inc
mov
push
push
add
cmp
cs
ret
mov
jmp
aaa
loope
add
dec
sub
xchg
add
stc
loope
cmp
push
jecxz
xor
or
les
jnp
push
inc
cmp
ror
mov
into
inc
and
push
adc
loop
in
or
mov
test
sbb
add
pusha
xor
adc
mov
dec
adc
dec
pop
cwde
xor
push
push
fisttp
lods
(bad)
pop
add
cmp
add
je
push
jmp
mov
xor
jo
push
mov
in
in
lds
div
ds
add
or
dec
out
adc
jns
setg
scas
jecxz
cmp
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
movs
mov
sbb
inc
adc
mov
imul
fcomp
inc
sbb
add
sub
inc
cli
mov
mov
or
inc
jo
nop
or
ja
push
retf
psubd
daa
xchg
push
xor
push
cmps
dec
inc
inc
mov
test
stos
sbb
sub
xchg
push
test
lock
add
xor
imul
inc
and
add
ins
mov
lods
dec
and
je
movs
sub
adc
jne
push
loope
(bad)
out
(bad)
rol
(bad)
das
push
test
mov
adc
xor
cmp
cwde
iret
sbb
cld
arpl
push
dec
push
sub
mov
pop
xor
inc
or
cmc
test
mov
outs
pop
mov
inc
fistp
fistp
out
aad
push
mov
int3
sub
sti
div
sub
mov
scas
call
inc
or
std
ror
or
sbb
icebp
dec
aaa
add
repz
add
or
outs
test
add
push
sbb
dec
push
cmp
cmc
push
pop
bound
or
cwde
mov
pop
sbb
inc
sbb
sbb
mov
pop
call
ror
aas
or
or
or
sbb
mov
stos
pushf
icebp
iret
or
and
add
sub
loop
in
pushf
mov
loopne
cs
add
(bad)
xchg
or
xchg
and
es
xor
aas
ja
mov
add
push
add
mov
ins
push
inc
ret
lea
adc
xor
ror
and
xchg
into
cmp
cwde
arpl
out
cld
mov
push
test
adc
xchg
xchg
add
hlt
adc
inc
and
add
cmp
movs
in
xchg
jmp
cmps
lods
and
lods
mov
push
mov
in
mov
loop
sub
mov
sbb
cld
adc
cs
ret
sbb
mov
jne
cs
out
rcl
adc
sub
mov
push
mov
les
or
inc
out
nop
mov
outs
cwde
inc
mov
or
pusha
add
sub
shr
cmp
imul
mov
mov
bound
add
in
ror
sub
nop
leave
(bad)
out
je
jle
imul
movs
add
and
add
jb
retf
test
mov
and
sbb
popf
xchg
lock
add
sub
and
push
int
pop
rol
sub
lds
push
pusha
push
pusha
push
add
in
xor
xor
sbb
clc
icebp
dec
add
sbb
push
nop
mov
hlt
add
shl
inc
mov
jo
push
or
xchg
push
pop
stc
aas
jp
add
aas
pop
cmp
(bad)
daa
sahf
jl
sub
nop
mov
push
rcr
in
add
ins
iret
test
gs
mov
jns
add
add
cmp
add
add
fld
add
jecxz
sub
idiv
push
pop
sbb
cmp
rol
mov
pop
add
xor
inc
mov
add
loope
or
xchg
dec
inc
add
pop
add
add
stc
add
add
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
mov
jo
adc
rcl
jg
adc
cwde
rcr
outs
sbb
add
and
sub
mov
mov
dec
(bad)
(bad)
push
and
push
or
mov
inc
jg
sbb
movs
stc
outs
movs
sub
xchg
mov
mov
movs
add
sub
adc
loopne
or
call
jp
add
stos
dec
gs
cli
adc
push
jmp
mov
dec
pop
test
jmp
cmp
push
in
loopne
(bad)
out
add
add
imul
xor
cmps
xchg
vprotb
push
in
cdq
and
cmp
add
jbe
call
nop
cld
or
outs
lahf
call
icebp
jg
test
das
xchg
inc
xchg
out
pop
fcmove
into
cmp
mov
jle
clc
icebp
mov
shl
sbb
pop
gs
cld
mov
rol
adc
mov
xchg
or
pop
or
(bad)
sub
aam
dec
test
jecxz
ror
ficomp
ror
mov
cwde
inc
adc
sub
pusha
bound
or
or
inc
das
dec
and
xchg
pop
cwde
pusha
ror
dec
push
sbb
repz
mov
inc
bound
adc
test
sbb
loop
dec
and
sbb
ret
inc
xchg
or
dec
xor
add
in
(bad)
bound
lds
(bad)
fadd
test
inc
shl
rol
sbb
lea
cmp
(bad)
fadd
xor
or
dec
and
xchg
or
stos
push
test
in
jno
into
aas
jnp
mov
mov
push
adc
inc
pop
cld
ret
add
xchg
jo
pop
mov
add
daa
pushf
lock
mov
into
cmp
mov
les
sub
xor
mov
jl
hlt
inc
test
or
cmps
cdq
xor
loop
adc
out
movs
dec
add
pusha
icebp
(bad)
jmp
sub
inc
mov
test
je
ror
cmp
cwde
repz
jne
jno
mov
mov
mov
cwde
jl
push
sbb
cmc
jmp
cs
clc
mov
cmp
fmul
dec
inc
xlat
or
push
stos
test
in
dec
stos
rcl
adc
or
and
in
jb
cmp
shl
add
arpl
nop
adc
mov
inc
gs
push
push
add
mov
push
inc
(bad)
push
add
or
jmp
int
fdiv
ret
jb
arpl
imul
lds
mov
jo
loop
add
mov
dec
inc
jo
ret
cwde
nop
add
nop
xchg
xchg
adc
xchg
jb
pusha
jmp
dec
sub
adc
or
enter
cmp
cmp
jnp
cld
xchg
inc
or
sub
mov
icebp
(bad)
jne
xor
enter
rol
lods
cmp
loope
popf
rcr
lea
and
jmp
dec
add
xchg
add
sbb
cmp
lahf
mov
movs
sub
sbb
or
xchg
jle
jae
lock
adc
enter
(bad)
mov
and
xlat
xchg
mov
mov
and
movs
std
pusha
push
mov
movaps
clc
mov
inc
mov
mov
test
adc
pop
call
adc
test
pop
movs
pusha
inc
jbe
adc
or
and
gs
adc
mov
(bad)
push
add
shr
or
sbb
push
inc
ret
cmp
ret
sub
outs
xor
adc
mov
add
sub
jecxz
stos
cmp
add
and
add
add
inc
sub
add
add
add
or
add
or
mov
rol
retf
rol
pop
inc
nop
and
and
enter
jg
dec
inc
sbb
xchg
push
test
stc
outs
add
test
cmp
cli
push
jo
mov
out
stos
xor
and
ds
add
mov
push
shl
or
stc
sti
jne
loopne
stos
pop
lahf
cli
sub
jne
fnstenv
shl
push
add
push
jae
jmp
jae
inc
sar
(bad)
cli
loop
retf
arpl
fcom
mov
rcr
mov
retf
xor
sar
inc
add
mov
daa
(bad)
xchg
adc
cwde
adc
mov
inc
xor
stos
in
mov
add
mov
and
or
cmps
mov
nop
or
fnsave
dec
cmp
adc
and
jo
and
mov
pop
sub
sbb
sub
dec
ret
add
or
bound
inc
sbb
jno
push
iret
or
add
cwde
mov
sahf
inc
into
sbb
dec
xor
jae
add
adc
xchg
xor
push
push
ss
xchg
mov
xchg
mov
nop
popf
and
pop
sbb
push
add
nop
adc
or
int3
jo
inc
adc
pusha
in
add
ds
pusha
inc
pop
sbb
ins
lds
rol
inc
mov
pusha
mov
push
aad
add
adc
mov
loope
or
push
les
inc
and
mov
push
das
cwde
or
mov
sub
daa
xor
adc
jne
mov
xor
adc
mov
adc
sbb
add
add
call
shl
add
xchg
or
inc
sub
inc
das
dec
sbb
add
push
jmp
jmp
mov
scas
xchg
or
call
or
xchg
ficomp
push
sbb
mov
or
in
inc
scas
and
sub
xor
xor
lock
add
sub
inc
sbb
jns
xor
xchg
inc
in
mov
inc
mov
sar
mov
pop
fldenv
or
add
xchg
pushf
les
xchg
(bad)
aas
jl
xor
ins
lods
stos
push
cmp
pusha
les
cld
add
imul
or
inc
pusha
loope
pop
call
xchg
dec
mov
and
pop
nop
aas
and
repz
add
and
es
icebp
aam
dec
push
ret
fadd
push
sbb
mov
and
xchg
mov
dec
movs
cmp
and
adc
loopne
inc
sub
pusha
and
push
jns
adc
ret
cmp
(bad)
and
jp
push
lock
push
loop
rdmsr
nop
pop
or
fucomp
mov
in
in
sub
cmp
ds
mov
mov
shr
adc
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
mov
rol
test
mov
movs
add
xor
hlt
xlat
adc
mov
push
movs
leave
cmp
in
enter
retf
scas
pop
dec
test
sub
leave
push
mov
neg
jno
dec
xchg
push
mov
std
mov
sub
pop
dec
sbb
jmp
push
adc
dec
mov
aad
data16
je
(bad)
bound
ret
jge
test
inc
mov
fnstsw
and
xchg
mov
stos
add
cmc
or
fwait
xor
hlt
or
cmp
int
xchg
and
mov
shr
sub
sbb
in
xchg
and
mov
xchg
push
test
in
dec
cmp
daa
out
repz
sub
add
dec
ret
sbb
out
imul
add
aad
sub
pop
mov
int3
rol
pushf
mov
or
add
and
xchg
dec
ins
pop
mov
out
ss
test
adc
sbb
xchg
add
or
jge
cmc
movs
add
xor
or
add
jmp
loope
addps
fistp
sub
xchg
inc
dec
lods
lods
adc
add
sbb
pop
sub
xor
mov
push
push
jnp
movs
add
or
xor
or
adc
test
cmp
sub
inc
sub
mov
push
or
cwde
or
retf
jl
xor
xor
push
out
(bad)
xchg
pushf
xor
and
lods
push
or
es
add
unpcklps
lock
add
inc
sbb
inc
xor
mov
loopne
sub
popf
dec
adc
add
rol
aas
push
xor
sub
inc
or
or
shl
jp
or
jmp
and
sar
and
push
xchg
jle
es
data16
test
dec
xor
xor
xor
rol
sti
and
iret
pop
sub
adc
add
xor
or
add
loopne
add
das
lds
or
arpl
add
mov
adc
fistp
popf
imul
push
inc
add
pop
gs
add
add
add
retf
mov
add
(bad)
mov
mov
push
inc
arpl
mov
es
add
test
cmp
xor
xlat
call
hlt
mov
xor
xor
test
jno
sub
mov
inc
movs
bound
dec
enter
inc
adc
pusha
inc
ret
and
cld
adc
push
cmp
xor
imul
es
or
or
jmp
mov
bound
dec
pusha
or
cmp
xor
xchg
idiv
inc
cld
stos
push
sub
pusha
xor
xchg
jmp
out
hlt
cmp
ror
aaa
pop
std
ficomp
mov
push
pop
inc
cmp
rcl
ss
or
push
sti
dec
sbb
loope
inc
xor
pop
and
ret
push
inc
pop
mov
and
xor
push
push
out
test
pop
rcr
inc
cmp
(bad)
push
and
dec
jo
(bad)
(bad)
es
pop
data16
add
stc
add
add
inc
sub
add
add
xor
add
inc
dec
sbb
mov
rol
mov
ss
mov
or
or
mov
inc
sbb
loopne
(bad)
and
hlt
out
ffreep
sbb
inc
and
sub
je
mov
dec
xchg
push
inc
nop
call
inc
inc
push
in
call
aad
std
mov
jmp
in
push
and
cwde
push
int
stos
rcr
and
cmp
or
out
lock
sub
cs
retf
inc
xor
jge
mov
push
pushf
mov
outs
xchg
call
loope
ret
sub
and
sbb
mov
xchg
jae
push
adc
movs
(bad)
scas
dec
pop
add
xor
rol
stos
push
sbb
mov
inc
mov
push
push
fdivr
push
pop
ret
xchg
mov
jne
and
adc
daa
add
sbb
adc
fisubr
xchg
sbb
scas
imul
cld
inc
dec
cwde
xchg
lods
sbb
jns
sub
or
cmp
inc
add
ror
cmp
popa
mov
or
fldenv
mov
dec
inc
inc
ins
loopne
xor
ror
rol
or
mov
and
les
add
inc
fdiv
test
in
cwde
rol
pcmpeqb
inc
imul
repnz
jecxz
sbb
rol
mov
xchg
xor
push
or
test
cmp
mov
into
push
jnp
stc
pop
sbb
adc
movs
mov
add
lock
imul
sub
mov
rcr
les
bound
and
dec
inc
aam
mov
cmp
in
popa
movs
inc
jne
xchg
test
push
sbb
xor
pop
jb
lock
add
or
clc
add
and
popa
test
pop
movs
push
push
add
push
push
mov
push
es
out
rol
dec
or
add
pusha
mov
loopne
(bad)
push
inc
add
and
jl
loop
adc
jp
adc
adc
and
push
mov
jae
and
adc
add
and
lock
ror
add
mov
and
in
push
cmp
in
mov
aam
mov
and
or
inc
ror
mov
cwde
shl
and
retf
mov
adc
add
ror
dec
xchg
add
call
and
pop
dec
mov
movs
pusha
inc
dec
jmp
outs
add
inc
xor
adc
popf
xchg
or
sub
mov
mov
adc
sub
add
test
mov
addr16
xchg
or
sbb
mov
adc
sbb
test
mov
aas
cmp
mov
jbe
jns
dec
sbb
cmp
adc
sub
inc
(bad)
jmp
ret
or
jne
ret
les
xor
dec
inc
add
shr
dec
sahf
cli
aas
sub
ret
or
rcr
sub
inc
add
sbb
cwde
dec
adc
int
and
cdq
and
(bad)
mov
add
hlt
dec
inc
mov
and
jle
das
adc
inc
imul
cmps
push
inc
inc
pop
pop
lock
add
aas
movs
inc
sub
cmp
enter
xchg
nop
sub
shl
push
clc
pop
add
xor
or
mov
sub
sbb
mov
mov
imul
ror
add
add
stc
add
add
inc
sub
add
add
add
or
add
or
adc
int3
push
adc
and
dec
xchg
mov
add
adc
js
gs
xchg
push
xchg
mov
and
or
add
sub
push
hlt
xchg
xor
xchg
push
fcomp
sub
movs
xchg
test
fsub
nop
xlat
scas
pop
dec
cmp
sub
xchg
bound
mov
mov
pop
adc
cmp
add
adc
adc
mov
lahf
mov
and
push
dec
dec
bound
inc
dec
sub
jg
out
inc
xor
mov
xchg
dec
into
(bad)
mov
pusha
adc
cmp
sar
das
or
push
mov
and
xchg
ins
add
data16
mov
popa
sub
push
cmp
dec
nop
stos
in
dec
pop
inc
ins
or
mov
lea
sub
loopne
repz
outs
inc
mov
aad
scas
in
aam
push
inc
push
mov
sbb
cmp
fld
sub
jb
push
push
jecxz
add
fs
nop
mov
loope
push
pop
push
or
js
inc
and
in
mov
loop
add
sbb
test
cmp
enter
cwde
and
adc
cmp
xchg
jbe
push
dec
mov
in
sbb
or
loope
dec
movs
pop
ficom
sbb
xor
dec
mov
or
ror
loope
or
inc
sbb
test
in
xor
add
jb
push
lea
bound
mov
aaa
sbb
push
rcl
push
or
mov
popa
sbb
push
xor
sub
sub
add
or
inc
add
push
dec
and
add
arpl
or
inc
lock
dec
mov
loope
push
push
shr
cmp
test
(bad)
aas
push
xor
(bad)
sub
xor
add
int3
dec
add
in
xor
ins
mov
loope
enter
icebp
ret
xchg
and
and
fimul
sbb
cmps
adc
and
int
inc
les
dec
loopne
xchg
jge
ficom
lock
inc
mov
add
adc
jl
cmp
inc
mov
adc
hlt
xchg
sbb
sub
call
or
mov
sbb
or
xchg
test
arpl
stos
call
outs
mov
arpl
inc
into
mov
(bad)
mov
or
xlat
and
dec
mov
and
mov
push
xchg
cmp
mov
lods
adc
mov
inc
lds
adc
and
enter
jp
loopne
loope
lea
nop
push
mov
and
or
dec
ror
sbb
xor
adc
push
popf
in
dec
rol
add
in
call
mov
cmp
icebp
jo
mov
out
sti
out
add
add
lock
mov
xchg
mov
add
add
stc
add
add
inc
sub
add
add
add
or
add
or
mov
xor
ins
fstp
stos
xchg
sbb
dec
pushf
dec
xor
push
lods
dec
ret
dec
mov
xor
(bad)
xchg
sub
stc
adc
inc
retf
xchg
and
enter
inc
xchg
fwait
dec
rcl
add
dec
dec
retf
das
inc
cdq
ret
je
dec
pop
mov
or
pushw
adc
adc
or
cdq
aad
stc
inc
dec
push
mov
scas
pop
loope
rol
cmp
int
xor
pop
jno
add
cmps
sbb
addr16
(bad)
lods
pop
jae
stos
sub
mov
mov
(bad)
adc
rcr
xor
loopne
stos
and
xor
add
push
in
ins
out
adc
pop
and
loop
test
ror
mov
stos
push
inc
bswap
rol
pushf
fdiv
mov
mov
imul
(bad)
jp
fmul
inc
das
adc
xor
and
add
lock
aas
cmp
nop
pop
ins
lds
adc
(bad)
js
and
cld
inc
add
add
adc
mov
sar
test
retf
mov
xchg
cmp
jo
and
pop
sbb
pop
rol
and
adc
test
inc
push
lea
cld
jecxz
add
test
dec
je
je
add
inc
add
adc
xor
xor
popa
les
in
push
sub
js
cmp
nop
xor
jl
pop
jl
adc
lea
scas
xor
add
add
aam
adc
adc
jo
inc
ss
enter
arpl
xchg
xor
mov
adc
pop
cmp
mov
or
mov
push
jmp
dec
inc
retf
shl
dec
xchg
loop
dec
mov
mov
add
push
cld
push
mov
jmp
inc
adc
add
add
popf
and
adc
mov
fistp
sbb
mov
lods
sahf
mov
aas
cwde
pushf
inc
dec
inc
dec
push
pusha
repnz
push
mov
dec
pop
dec
imul
mov
mov
movs
xor
add
xor
dec
paddb
movs
add
stos
call
les
push
or
dec
sub
cwde
add
xor
outs
xchg
and
sbb
add
add
mov
aad
xor
popa
mov
xchg
sub
in
or
and
inc
inc
jae
in
xor
or
sbb
push
stc
je
fld
sbb
adc
xor
ret
sbb
dec
push
ret
add
and
add
add
inc
sub
add
add
add
or
add
icebp
out
(bad)
mov
mov
lahf
sbb
cld
arpl
scas
mov
push
call
push
inc
xor
inc
and
int
add
push
inc
dec
or
jmp
sub
movs
inc
inc
rol
xchg
xchg
xor
adc
lahf
sub
popa
loop
test
pushf
cmp
call
mov
in
adc
pop
xchg
dec
adc
add
adc
das
outs
dec
and
sbb
sub
dec
mov
fcomp
or
cmps
and
icebp
mov
loope
pop
and
sbb
sbb
loopne
and
xchg
gs
test
ds
loopne
add
mov
ins
and
test
add
and
inc
or
jecxz
sbb
cmps
sub
(bad)
(bad)
out
in
hlt
(bad)
mov
jo
dec
mov
sbb
sbb
mov
mov
repnz
ror
and
loope
add
mov
push
or
std
jecxz
je
js
adc
std
popa
not
or
ror
loopne
pop
adc
les
loope
call
inc
adc
mov
push
mul
and
mov
popf
xchg
call
pop
popa
push
or
or
inc
dec
mov
sbb
aaa
jmp
mov
xchg
jbe
sbb
mov
movs
or
cmp
in
icebp
setb
add
adc
mov
in
test
add
(bad)
xchg
xor
movs
popa
dec
mov
or
mov
xchg
sub
adc
jb
pusha
jecxz
push
jl
inc
or
stc
and
pop
imul
nop
add
jno
pop
xchg
xchg
pop
call
ret
xchg
pop
jmp
and
bound
imul
mov
ss
mov
movs
mov
push
(bad)
lock
or
or
cli
ins
inc
cmp
add
jmp
popa
cmp
ret
movs
inc
cs
pushf
stos
(bad)
and
add
add
inc
sub
add
add
add
or
add
sti
aaa
inc
add
adc
adc
mov
add
test
sbb
push
lock
mov
push
call
push
xchg
mov
retf
fstp
jl
mov
retf
adc
cwde
sbb
adc
add
and
pop
in
pop
mov
xor
xor
or
and
hlt
pop
mov
stos
push
adc
adc
lods
inc
sbb
jecxz
mov
int
or
inc
push
add
nop
cmp
pushf
dec
stos
push
loope
mov
sbb
inc
retf
inc
pop
cs
cs
mov
mov
xchg
xor
add
inc
imul
hlt
inc
pop
and
outs
pushf
in
mov
mov
xchg
pop
add
es
(bad)
lods
pop
loope
rcr
mov
cmp
xchg
mul
cs
ror
xlat
cmp
fdivrp
arpl
and
outs
cmp
(bad)
pop
(bad)
gs
jle
inc
and
dec
fiadd
add
add
loopne
or
test
add
cmp
inc
add
stc
add
add
inc
sub
add
add
add
add
call
cmp
rol
pop
add
adc
xchg
cmp
inc
call
sbb
dec
inc
enter
sub
and
and
clc
sti
stos
movs
lods
mov
adc
aas
adc
daa
into
dec
sbb
ins
fsub
cmps
retf
sbb
sbb
je
mov
cld
push
repz
cmps
dec
aaa
nop
cwde
xor
ret
cmp
cmps
xor
push
mov
outs
imul
sbb
imul
sti
mov
movs
push
(bad)
pop
sahf
cmp
iret
or
xor
lds
jae
xchg
cmp
in
mov
stc
jae
pushf
pop
and
xchg
aad
arpl
sahf
std
push
adc
mov
sahf
(bad)
int
aaa
in
xchg
ds
pop
adc
sub
fiadd
das
and
and
add
add
inc
sub
add
add
add
add
or
gs
nop
add
inc
mov
fdivrp
adc
inc
and
or
fld1
mov
inc
inc
push
inc
add
mov
inc
or
xchg
sbb
mov
adc
js
call
xchg
in
cdq
repz
pop
and
add
mov
pusha
inc
test
cmp
inc
push
hlt
clc
inc
ret
adc
dec
jmp
xor
cli
mov
pop
jb
into
jmp
mov
and
aad
adc
add
add
stc
add
add
inc
sub
add
add
add
add
or
and
mov
add
test
stos
push
or
push
xchg
dec
shl
out
loope
(bad)
and
jno
mov
mov
aas
add
vprotd
popa
repnz
cwde
push
mov
in
js
and
push
mov
xchg
les
inc
ret
and
call
or
inc
or
lahf
pop
movs
scas
cwde
jae
inc
fsubr
mov
mov
add
add
stc
add
add
inc
sub
add
add
add
add
or
sub
or
lock
pusha
rol
and
popa
fcom
jecxz
and
mov
or
sbb
inc
adc
xor
and
xchg
cmp
ret
gs
dec
inc
pusha
push
fs
cmps
aas
dec
mov
jp
retf
mov
mov
stos
push
xchg
add
and
add
add
inc
sub
add
add
add
add
push
add
or
adc
push
pop
and
clc
and
adc
and
push
xor
rcr
inc
mov
xchg
mov
xchg
lock
int3
mov
cmp
cwde
lock
dec
outs
xchg
stc
enter
dec
bound
call
jp
add
mov
retf
add
add
add
add
dec
add
dec
add
add
popa
xor
sbb
push
add
dec
add
add
dec
add
inc
dec
inc
cmp
popa
aas
add
add
inc
mov
push
retf
mov
(bad)
std
scas
sahf
lahf
mov
in
add
das
push
add
cld
mul
scas
dec
pop
cmps
fs
add
(bad)
(bad)
es
leave
(bad)
into
int3
cdq
push
add
enter
add
mov
std
(bad)
std
mov
add
fld
call
add
add
enter
lods
(bad)
call
shr
push
pop
cmps
jne
(bad)
sti
mov
add
stc
jne
call
rol
daa
sub
lds
(bad)
(bad)
xor
out
(bad)
cmps
jne
xchg
jns
mov
xor
mov
sub
(bad)
call
vpmadcswd
lock
test
add
stc
push
scas
aaa
add
cdq
add
cmps
add
mov
push
dec
push
out
add
fst
(bad)
sti
inc
fcomp
repnz
add
out
mov
or
(bad)
(bad)
call
(bad)
mov
(bad)
std
fcomp
mov
dec
mov
fidiv
call
add
adc
inc
sti
cmps
add
cmps
add
jmp
add
add
cwde
imul
xor
call
dec
or
out
jmp
dec
add
test
in
push
enter
mov
out
repz
xor
(bad)
cwde
adc
in
fld
das
sub
(bad)
jmp
retf
or
repnz
cli
enter
add
cdq
sub
(bad)
mov
adc
jno
leave
adc
les
push
(bad)
mov
jae
xor
mov
idiv
std
js
aad
ficom
and
std
repz
mov
adc
movs
(bad)
fimul
cwde
xor
mov
push
inc
xchg
jmp
jge
jmp
push
les
push
adc
in
mov
push
idiv
in
out
mul
ffree
data16
repz
cli
hlt
lods
add
sbb
repnz
mov
into
pop
hlt
mov
not
add
fld
sahf
inc
or
in
add
in
mov
repz
sti
idiv
hlt
repz
aad
push
push
lock
hlt
mov
repz
test
push
inc
pop
push
sub
int
stc
pop
add
mov
fwait
cmp
std
mov
cmc
mov
lock
repz
repz
push
mov
les
mul
add
movs
or
loop
repnz
adc
mov
xchg
popa
sbb
scas
pop
cmc
aad
(bad)
push
cli
out
pushf
lahf
jae
inc
(bad)
sti
add
inc
sti
add
imul
or
imul
sbb
in
repnz
sub
sti
cli
imul
sub
loop
and
out
add
pop
xor
repz
inc
ret
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
sbb
inc
sub
add
add
add
add
or
add
or
mov
rol
nop
mov
inc
xor
loope
ret
mov
or
add
mov
mov
dec
test
push
and
test
es
ins
fmul
jae
xchg
(bad)
mov
int
mov
jmp
jb
adc
add
call
push
jo
xchg
test
cwde
into
repnz
pop
lds
shl
add
pusha
imul
dec
js
ss
pushf
shl
ror
or
in
es
adc
inc
shr
add
iret
pop
push
adc
mov
inc
sub
mov
and
sub
mov
in
jmp
dec
mov
add
js
jl
cmp
add
lds
iret
push
cmp
mov
imul
ret
add
mul
inc
mov
ret
mov
pop
fcomip
shr
mov
ror
in
sbb
in
mov
in
(bad)
pop
mov
mov
push
adc
add
imul
fnstcw
and
xchg
or
loopne
sbb
addr16
xor
sbb
ficom
fdiv
int3
sbb
call
das
jb
popa
pop
(bad)
test
icebp
or
pop
adc
mov
sbb
inc
or
lods
loope
xor
and
arpl
mov
iret
or
fadd
mov
inc
inc
add
sub
mov
imul
push
cmp
in
add
cmp
xor
jo
push
les
add
loopne
push
xor
sbb
icebp
add
fdiv
cmp
dec
icebp
daa
cmp
and
xor
xchg
add
test
inc
mov
dec
and
or
mov
fcom
(bad)
and
mov
push
jmp
or
psubb
mov
shl
or
pop
pusha
inc
sar
inc
hlt
rcr
mov
fld
sbb
rcl
dec
xor
or
adc
(bad)
mov
dec
ret
test
and
add
bound
fadd
push
push
sbb
or
inc
push
mov
inc
or
hlt
mov
or
scas
push
inc
sbb
or
or
cmp
xor
inc
sbb
pop
pop
add
sub
pop
ucomiss
retf
and
in
dec
and
sbb
cmc
(bad)
dec
ret
xor
and
xor
pop
dec
(bad)
shl
sub
mov
div
adc
inc
cld
nop
or
rcr
lock
or
jle
stos
xchg
cmc
aam
dec
lea
repnz
dec
fisttp
mov
sub
call
imul
xchg
cmp
test
call
(bad)
sbb
sub
ror
fnstenv
ins
cwde
push
mov
jmp
push
neg
cld
test
xor
fwait
or
sbb
ret
out
jge
sbb
out
cmp
and
push
sub
inc
add
or
in
adc
pop
add
xchg
mov
jnp
adc
clc
add
add
call
push
sbb
add
sub
ret
sbb
mov
sbb
xor
pusha
add
pusha
arpl
fdivr
lds
loop
push
inc
push
popa
sbb
xor
ret
adc
popa
adc
or
add
add
sbb
add
lock
mov
and
xchg
mov
aaa
(bad)
xor
ss
or
inc
or
xor
sbb
xor
and
push
and
push
push
mov
sbb
mov
xor
inc
mov
push
inc
sub
add
lock
dec
aam
sbb
aaa
adc
or
adc
add
jl
mov
inc
adc
cld
add
mov
sub
add
or
add
add
pop
add
mov
or
add
enter
add
enter
pop
add
rol
rol
fadd
xor
ror
mov
xchg
mov
mov
add
test
mov
dec
and
cmc
mov
mov
cwde
and
inc
push
xor
add
or
cmp
sbb
pop
ds
sbb
add
push
inc
add
xchg
mov
sub
adc
inc
lods
rol
inc
and
iret
xor
add
call
add
mov
mov
add
rol
mov
mov
or
inc
add
popa
add
mov
mov
adc
sbb
pop
sahf
cli
loope
cmp
jmp
sub
add
enter
mov
inc
mov
or
push
push
dec
js
or
jecxz
xchg
cmp
call
pop
and
rcl
cmc
lods
jb
imul
mov
adc
movs
in
pop
or
sub
nop
aad
and
dec
push
add
jo
xor
jmp
mov
aad
cmp
push
jg
or
pusha
inc
add
inc
(bad)
cmp
rol
sub
loop
mov
mov
xchg
pusha
pop
aas
movs
and
adc
mov
out
stos
pop
or
add
mov
rcl
adc
or
jp
or
push
adc
cwde
add
retf
mov
jmp
rol
and
pop
jle
or
mov
add
adc
rol
add
in
aam
scas
gs
xlat
or
xor
add
call
push
and
or
xchg
adc
or
mov
inc
sub
in
loopne
xchg
inc
ins
ins
mov
pop
shr
rcl
xor
mov
adc
xor
data16
xchg
mov
inc
pop
sbb
(bad)
sbb
mov
cmp
pop
mov
pusha
xor
xchg
out
aam
adc
pusha
dec
sub
rol
lods
add
sbb
inc
or
ins
ret
push
adc
cmp
adc
xor
and
pop
icebp
mov
int3
add
pushf
enter
ror
dec
inc
push
jnp
test
call
or
sbb
xor
adc
mov
dec
xchg
repnz
in
int3
and
pop
push
add
and
retf
push
inc
lea
mov
sahf
push
icebp
cmp
cwde
inc
xor
adc
xor
add
pop
or
xchg
aas
cld
rol
xor
aaa
rcl
jns
sbb
jo
and
nop
cdq
xchg
ins
rol
add
das
xchg
push
mov
add
adc
add
mov
idiv
fsubr
and
mov
dec
inc
xchg
xchg
test
je
push
push
rol
mov
or
nop
jo
ret
dec
and
or
or
xor
add
mov
js
sub
and
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
test
or
and
js
ret
aas
or
les
add
sbb
inc
in
xor
mov
gs
or
sub
cmp
popa
xor
es
mov
loope
fwait
add
and
inc
adc
rcr
ins
fcom
add
push
xchg
pop
push
pop
adc
mov
cwde
pop
mov
and
xor
push
sbb
mov
pop
and
cmp
add
inc
dec
pop
cmp
and
sub
add
pop
movs
pusha
push
or
repnz
or
ja
aas
sbb
sahf
adc
adc
les
mov
ret
aas
adc
pop
push
add
addr16
arpl
add
(bad)
std
cmps
push
sbb
dec
das
(bad)
mov
movs
cmp
inc
test
test
push
nop
and
sbb
adc
movs
sub
and
aas
fimul
mov
int
repz
dec
in
and
loopne
in
xchg
or
push
in
inc
and
jno
popa
loope
or
inc
add
and
and
call
out
test
add
ja
in
cmp
pop
pusha
add
lock
mov
fdiv
mov
gs
inc
inc
mov
inc
mov
xchg
cmp
add
iret
adc
push
adc
dec
push
shl
xchg
dec
adc
inc
and
sub
dec
or
sbb
aas
arpl
loope
push
addr16
mov
cwde
and
sbb
mov
bound
jae
adc
test
int3
and
jp
jae
stos
fwait
mov
loopne
icebp
ret
cwde
push
push
lock
mov
dec
aad
cmps
add
or
les
xor
or
xchg
mov
cwde
push
les
or
sub
loop
xchg
call
sub
dec
and
adc
nop
sbb
jecxz
add
pop
pusha
fimul
das
enter
xor
pop
push
push
jns
dec
xor
shl
and
rol
sub
fs
inc
add
add
sahf
and
dec
adc
cmc
je
or
jmp
mov
int3
scas
mov
push
mov
dec
add
test
bound
sub
enter
inc
or
cmp
hlt
rol
pushf
cwde
retf
pop
nop
adc
and
adc
les
mov
and
scas
adc
retf
xchg
ss
ror
and
or
mov
and
mov
adc
aaa
mov
enter
xor
daa
push
inc
pop
dec
ret
aas
out
mov
cs
imul
xchg
sub
mov
movs
xchg
out
dec
or
and
sub
mov
sbb
or
add
or
add
les
push
movs
xchg
mov
bound
pop
inc
ror
jp
stc
ret
inc
inc
mov
adc
push
ret
rol
jl
xchg
or
or
pop
mov
inc
loopne
mov
jmp
jmp
or
xchg
inc
adc
mov
mov
xchg
adc
push
and
sbb
(bad)
or
add
call
or
and
mov
adc
and
sub
or
mov
add
inc
add
int3
and
inc
sbb
rol
movs
int3
ret
adc
inc
add
lock
pusha
add
add
xor
popa
add
add
xchg
mov
sub
adc
and
add
add
add
sbb
cmp
rol
enter
mov
outs
inc
adc
push
sub
cmp
inc
adc
mov
pop
das
add
adc
ss
mov
or
ret
pop
and
sub
pop
je
pusha
push
inc
rol
fs
add
cdq
enter
cwde
xchg
rol
pop
inc
sete
ins
mov
or
loopne
sub
popa
sbb
add
inc
loopne
sbb
xchg
call
inc
orps
(bad)
scas
or
xor
or
(bad)
add
add
fiadd
or
add
jmp
mov
call
or
aaa
call
pop
pushf
xchg
adc
inc
(bad)
loop
add
xchg
jbe
test
rcl
mov
pop
cmps
xor
rcl
cs
sbb
adc
adc
push
add
nop
inc
test
sbb
ret
icebp
add
pushf
ret
popa
lods
cwde
rcr
mov
cmps
adc
push
(bad)
loope
and
add
xor
inc
adc
les
hlt
data16
push
pusha
add
pop
add
pop
push
mov
sub
cmp
add
dec
mov
xor
inc
mov
add
inc
cmp
push
data16
cmp
pusha
or
test
add
dec
add
shl
and
push
add
xor
add
inc
and
es
mov
push
ss
push
les
aas
out
jmp
jl
daa
add
xchg
fsubr
inc
rol
add
stos
rol
leave
fs
adc
push
or
push
mov
adc
test
adc
test
test
pushf
inc
add
ds
mov
loopne
add
ror
sub
sbb
adc
and
push
loopne
cmp
mov
mov
inc
mov
cmc
sub
inc
mov
push
inc
sbb
mov
xchg
add
(bad)
and
rol
sub
pop
add
add
fcomp
add
loopne
jp
or
in
inc
push
cmp
jno
add
aas
pop
add
pop
mov
adc
add
enter
rol
lock
mov
add
inc
add
sbb
push
xchg
aam
xor
inc
push
lods
call
or
pop
and
data16
push
enter
inc
ss
ins
test
or
add
adc
or
loope
ret
or
dec
adc
ins
inc
inc
mov
add
fadd
mov
ins
popa
add
fimul
aas
aam
or
or
adc
mov
xchg
mov
adc
xor
loope
test
popa
test
fsub
add
jmp
adc
pop
and
or
add
add
and
(bad)
(bad)
mov
(bad)
cmp
adc
rcl
pop
(bad)
adc
(bad)
push
shl
or
(bad)
idiv
adc
out
push
or
aam
sub
inc
inc
jge
mov
cmps
mov
lock
add
mov
or
cld
push
or
and
add
or
inc
sub
add
cmp
sub
add
or
rcr
rol
adc
dec
pushf
cmp
popa
pushf
test
rcr
mov
xor
ret
mov
les
cmp
std
and
aas
dec
add
rcr
adc
adc
inc
add
xlat
test
fs
daa
and
jns
jns
ret
loopne
adc
sub
out
mov
jp
fsub
cli
shr
inc
xchg
test
and
ins
movs
sub
add
lods
or
cs
push
inc
add
inc
adc
jmp
data16
dec
(bad)
shl
sbb
mov
mov
mov
mov
and
loop
mov
inc
scas
pop
jno
and
xor
xchg
dec
and
mov
ret
push
cdq
inc
mov
fbld
fsubr
cmp
push
dec
arpl
shr
sbb
aam
adc
adc
mov
enter
and
and
inc
pop
repz
pop
popf
sub
mov
pop
and
hlt
push
add
or
inc
adc
jo
add
and
and
add
add
push
mov
es
inc
adc
or
repnz
ins
mov
clc
fistp
sub
add
cmp
adc
or
repnz
xchg
add
push
add
in
cmp
and
add
push
cmp
cmp
sbb
inc
das
loope
rol
iret
test
es
inc
xor
inc
adc
add
sbb
icebp
pop
mov
and
inc
add
push
inc
inc
adc
add
add
sbb
and
push
call
popa
test
sub
push
cmps
adc
dec
adc
pop
ret
add
pop
sub
lds
xor
add
nop
mov
cmp
js
push
jmp
xor
adc
syscall
in
loope
ret
test
push
add
add
or
movs
rol
daa
cld
arpl
inc
adc
dec
xor
pop
xchg
add
pop
add
add
sub
add
or
add
sub
ret
xor
add
ret
js
dec
movq
dec
sub
or
xchg
rol
jae
(bad)
dec
xor
inc
push
cmp
daa
in
inc
or
xchg
dec
sub
add
nop
push
add
pop
inc
xor
and
mov
xchg
rcl
pusha
dec
ds
aam
adc
shr
nop
xchg
repz
popa
dec
pop
das
mov
gs
into
or
jp
int3
add
inc
xor
leave
nop
rcl
(bad)
sbb
dec
add
mov
cmp
inc
pop
es
adc
inc
fdiv
or
or
es
div
inc
inc
inc
in
lock
loop
cmp
dec
sub
push
sbb
push
sbb
xor
inc
sub
clc
add
rcl
inc
sub
xor
int3
aas
stos
adc
(bad)
push
nop
add
inc
(bad)
or
cmp
or
push
(bad)
and
sub
or
or
aam
mov
lods
hlt
push
sar
push
or
push
arpl
adc
jle
add
sbb
pop
sbb
add
adc
cmp
mov
jmp
rol
loop
push
cwde
dec
add
sbb
imul
or
adc
nop
adc
xor
mov
jecxz
pop
test
mov
or
mov
pop
pop
add
mov
inc
sub
sub
sbb
add
ret
add
rol
mov
add
and
lods
adc
add
jo
es
pop
sbb
inc
sti
sbb
or
add
cmp
test
ror
pop
enter
add
call
or
and
pusha
add
or
xchg
push
xor
add
js
add
mov
and
inc
xchg
test
loopne
pop
mov
ja
push
or
cld
rol
add
ds
sbb
push
inc
add
inc
and
jne
mov
add
and
add
or
inc
sub
add
cmp
sub
add
or
xor
sub
mov
add
mov
lds
and
(bad)
and
xchg
push
sbb
int3
or
shl
dec
push
test
popf
popa
sub
(bad)
push
adc
or
add
bound
mov
sbb
cwde
sbb
pop
adc
add
retf
std
pop
sub
sbb
retf
(bad)
sahf
and
aad
rcr
pop
dec
fxch
jb
mov
imul
clc
add
mov
pop
sub
or
sbb
jo
jge
das
push
mov
inc
clc
cwde
sub
mov
std
popa
dec
add
mov
sub
adc
adc
cmps
bound
and
adc
ret
sahf
inc
xor
fisttp
jno
fwait
addr16
dec
imul
sti
sti
aaa
mov
xor
enter
ss
xor
not
add
lock
inc
add
sbb
lods
xor
mov
mov
xchg
push
je
cmc
mov
xchg
adc
dec
lods
mov
push
add
sbb
test
add
xor
sub
loop
add
dec
push
fs
or
test
mov
xor
sub
das
xchg
mov
rol
adc
adc
mov
push
rol
scas
sub
inc
sub
popa
add
add
cld
loopne
xchg
sbb
mov
jae
and
adc
inc
adc
cmp
push
test
iret
push
data16
aas
and
cmp
jge
repz
repnz
add
in
mov
cmovp
xchg
dec
or
ror
adc
aas
add
add
arpl
sbb
in
inc
dec
movntps
adc
nop
inc
cmovs
push
dec
ss
mov
pop
das
xor
xor
or
es
mov
addr16
cmp
jo
(bad)
xor
mov
xor
xor
mov
cmp
ss
xchg
dec
loopne
adc
push
leave
add
jecxz
sub
in
xchg
mov
dec
js
nop
jns
xor
inc
push
ins
xor
and
mov
movs
hlt
lock
lock
inc
push
sbb
mov
xor
inc
inc
pushf
cmp
dec
adc
inc
push
add
push
add
inc
mov
or
shl
movaps
call
xchg
add
dec
or
bound
into
add
pop
pop
mov
adc
inc
xor
push
mov
dec
movs
and
daa
xor
ret
add
pop
cld
push
or
cld
inc
add
dec
add
adc
xor
xor
ins
lock
int3
and
sub
push
jmp
xchg
stos
int3
inc
enter
rol
inc
bound
(bad)
pop
xor
retf
adc
test
add
pop
dec
ret
enter
cmp
inc
inc
add
mov
(bad)
lock
enter
jo
sub
sbb
and
rcr
mov
or
inc
xchg
rol
aas
inc
adc
dec
pop
adc
mov
add
push
cwde
mov
inc
cmp
nop
shl
inc
neg
loopne
push
hlt
mov
aas
sub
adc
add
push
mov
push
fwait
add
ins
rcl
pusha
ret
inc
sbb
and
scas
cwde
add
xchg
add
or
sub
inc
cmp
loope
mov
add
inc
xor
push
inc
push
xchg
outs
rol
add
test
std
ret
mov
test
(bad)
icebp
or
mov
or
adc
rol
jl
aas
sahf
inc
pusha
or
add
loop
(bad)
sub
and
mov
adc
arpl
add
lock
and
icebp
add
sbb
pushf
fisttp
nop
and
or
pop
dec
inc
xor
sub
cmp
inc
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
mov
or
pop
enter
test
inc
pop
dec
lock
lds
loope
mov
push
dec
ror
add
push
hlt
out
(bad)
push
test
xchg
cmp
hlt
xchg
and
and
(bad)
jne
retf
dec
pop
and
call
fmul
mov
inc
xor
dec
push
scas
sub
dec
push
cmp
or
inc
and
sbb
pop
fisttp
xchg
(bad)
dec
fs
stc
imul
and
scas
adc
push
in
cdq
jge
xchg
jbe
xor
sbb
clc
adc
add
inc
cmp
pushf
cmc
dec
cmovne
es
dec
or
mov
dec
mov
mov
bound
imul
call
dec
jmp
push
std
cmovae
inc
aaa
mov
push
pop
xor
pop
fs
inc
push
push
std
sbb
aas
aaa
add
aaa
jne
mov
lods
mov
or
in
ret
jl
add
je
adc
int3
push
pop
and
les
and
pop
jo
push
add
add
and
sub
sub
xchg
aas
es
adc
add
aas
adc
dec
lds
sbb
sub
mov
add
and
inc
dec
or
lock
cs
jae
and
add
mov
and
and
hlt
jo
or
add
cmp
sbb
add
lods
lods
lock
cmovp
push
cwde
call
jo
adc
adc
sub
push
adc
xor
adc
pushf
mov
push
mov
call
push
mov
adc
(bad)
sbb
add
or
ins
pusha
rol
test
sub
add
mov
ror
adc
add
mov
dec
adc
xchg
pusha
les
add
call
(bad)
into
aas
ins
or
adc
cmp
and
daa
pushf
push
sub
enter
dec
cmp
adc
add
movs
adc
dec
lods
rol
cmp
mov
pop
les
inc
hlt
mov
dec
inc
adc
repz
scas
push
add
leave
or
cmp
nop
prefetch
shl
xor
inc
rol
inc
test
or
hlt
inc
pop
mov
rol
mov
xchg
or
xchg
xor
inc
lods
xor
add
or
or
xor
add
jo
ds
(bad)
jmp
xchg
push
repz
xor
jge
jae
mov
movs
add
and
test
push
pusha
jo
cmp
(bad)
movs
and
pop
aaa
mov
ret
loopne
adc
retf
aaa
nop
dec
xchg
cld
mov
pop
add
xchg
or
repnz
das
jcxz
nop
or
cmp
xor
adc
mov
and
xor
sar
test
inc
push
mov
add
cmp
pusha
mov
cmp
push
dec
push
pop
inc
pop
xor
push
fnstsw
jnp
nop
dec
push
jae
push
inc
xor
test
adc
or
push
in
push
dec
mov
sub
les
adc
enter
push
adc
push
ret
adc
add
mov
add
push
mov
pusha
sbb
cmp
pop
mov
ins
imul
sub
pop
popa
or
add
das
push
add
rcl
hlt
add
loope
inc
sbb
mov
or
pop
call
sub
push
aaa
call
mov
mov
inc
jl
test
loopne
sbb
push
add
cmp
mov
arpl
sbb
push
or
call
or
rol
cdq
add
pop
pop
and
sbb
ror
loope
inc
pop
inc
hlt
sub
add
push
adc
xor
outs
push
push
xchg
and
add
add
mov
inc
add
leave
adc
xchg
mov
inc
mov
and
add
or
inc
sub
add
add
add
add
or
add
or
rcr
sbb
mov
rol
push
mov
push
hlt
daa
jmp
and
jno
ffreep
pop
jmp
or
xchg
aas
pop
(bad)
dec
cli
push
adc
jo
mov
(bad)
adc
add
xor
push
or
inc
(bad)
sbb
jle
enter
sub
push
or
cli
or
sbb
pop
ret
xor
(bad)
push
and
sub
cmc
fist
xchg
jne
xchg
scas
jle
pusha
mov
loopne
add
test
mov
loope
xchg
out
(bad)
into
mov
or
mov
gs
jb
test
pop
push
fwait
pop
add
in
adc
inc
push
lods
jmp
mov
mov
inc
enter
mov
dec
leave
inc
hlt
movs
or
dec
bound
and
add
or
inc
sub
add
add
or
add
or
sub
cmp
or
or
movs
dec
jno
sub
adc
fs
jmp
aaa
push
pushf
shr
adc
adc
sub
and
repz
movs
shr
pusha
dec
or
cmps
inc
push
xchg
inc
and
sbb
ds
pusha
pusha
cwde
xor
xchg
push
jg
add
outs
lea
add
in
adc
inc
add
cmp
or
cmc
mov
nop
adc
inc
sbb
enter
mov
addr16
inc
add
(bad)
and
or
ins
mov
imul
std
cli
xor
inc
inc
push
clc
mov
cmc
out
or
cmp
push
test
int3
nop
mov
imul
sub
or
test
in
mov
sahf
jecxz
(bad)
loopne
xor
add
(bad)
push
jl
add
and
add
sbb
inc
sub
add
add
add
add
or
add
or
mov
rol
rcr
xchg
and
xor
nop
loop
xchg
adc
test
and
and
adc
add
dec
test
and
xchg
clc
xlat
mov
pop
mov
xor
int3
inc
ja
inc
inc
adc
aaa
in
inc
shl
mov
sub
ret
nop
popf
sbb
mov
push
add
es
and
xor
xor
dec
xchg
ret
test
cmp
adc
xor
gs
test
jmp
dec
stc
inc
cmp
cmp
or
(bad)
(bad)
or
sbb
lock
add
adc
and
sbb
dec
jge
jo
jl
xor
add
or
adc
outs
leave
push
jmp
fiadd
jo
inc
loop
mov
add
test
jg
add
xacquire
lock
in
fstp
jle
repz
mov
neg
lea
inc
inc
sbb
inc
push
inc
mov
fsubr
mov
inc
push
or
mov
add
nop
ret
mov
mov
and
dec
jne
inc
pause
mov
pusha
and
sbb
cld
lock
mov
dec
xor
jnp
xchg
add
mov
add
push
inc
sahf
or
jmp
mov
inc
ret
add
rcl
cmp
push
and
mov
xchg
icebp
inc
and
adc
aam
sbb
in
add
js
cmp
(bad)
fdiv
xchg
shl
add
adc
add
adc
add
mov
pusha
(bad)
aas
ins
adc
(bad)
jecxz
and
inc
shr
shl
push
and
and
adc
bound
inc
daa
shl
push
mov
adc
(bad)
push
mov
push
dec
pop
inc
sub
and
enter
pop
pop
add
mov
and
repnz
xor
into
aas
sti
cdq
inc
dec
or
loope
sbb
mov
cs
push
pop
mov
cmp
and
aas
mov
add
fdiv
pop
pop
leave
push
and
push
enter
sub
gs
stc
ins
sbb
pop
dec
pop
fs
inc
(bad)
sbb
nop
xchg
add
(bad)
pop
and
cld
mov
ins
rcl
adc
add
aas
or
inc
mov
test
out
xchg
(bad)
push
push
hlt
xor
lods
and
lock
adc
add
add
push
test
jbe
fadd
loop
or
xchg
add
and
hlt
lods
adc
sub
adc
add
xor
ror
sbb
inc
sub
fdiv
inc
sub
add
inc
add
cmp
sbb
inc
inc
test
dec
add
mov
pusha
lock
sar
sar
push
cld
inc
sbb
adc
jno
adc
jne
sub
jecxz
add
rcl
push
pusha
add
inc
ret
fwait
dec
mov
inc
daa
sbb
pop
xor
sbb
adc
dec
add
push
add
fsub
adc
enter
inc
adc
fadd
adc
xor
inc
aam
adc
rcl
or
or
rcl
sbb
or
mov
sub
loopne
adc
add
je
sbb
call
add
cld
ror
or
dec
or
inc
rcl
adc
and
stos
add
sub
push
inc
es
and
es
add
enter
add
add
sub
cwde
mov
sub
adc
xor
push
dec
pusha
push
cmp
adc
or
sar
mov
xor
xchg
add
add
stos
test
add
push
xor
sbb
popa
mov
mov
adc
adc
and
mov
test
and
pop
hlt
sbb
(bad)
in
push
push
cmp
cmps
sub
inc
dec
push
mov
or
adc
or
push
dec
mov
or
sbb
adc
inc
(bad)
ror
test
push
jp
dec
push
in
pusha
pop
push
and
jbe
jae
mov
inc
or
xchg
mov
jb
fwait
pushf
add
or
sub
mov
or
add
stc
test
adc
add
out
push
nop
add
ins
out
sahf
xor
add
add
call
fild
std
xchg
test
push
loop
push
js
push
xor
adc
pop
sub
add
xor
cmps
push
std
inc
inc
ja
or
inc
pop
adc
add
pushf
mov
sub
or
adc
add
and
cmps
push
loopne
pop
loopne
push
mov
lock
xchg
(bad)
cld
and
es
add
sti
sqrtps
loopne
adc
cmp
jp
mov
add
push
ret
and
adc
push
add
pusha
ret
xor
lods
pusha
inc
add
add
mov
mov
mov
pop
(bad)
jmp
loop
mov
rol
es
ss
sub
mov
sbb
mov
fsub
fistp
xor
xor
cmp
outs
inc
sbb
and
(bad)
mov
daa
sub
pop
pop
mov
pop
mov
clc
psubw
pop
push
push
xor
xor
mov
or
jge
push
xor
or
shl
or
mov
add
xchg
add
stc
loop
daa
adc
or
popa
push
aaa
js
cdq
push
mov
inc
mov
pusha
add
mov
and
ins
dec
inc
sub
data16
add
mov
or
ret
sbb
rol
call
or
add
add
aam
inc
sub
jne
or
shr
bound
rol
inc
sub
add
outs
rol
push
and
test
push
pop
loopne
aad
push
ret
mov
adc
or
enter
or
pop
push
push
or
or
mov
pop
ja
cwde
mov
add
cmp
xor
or
mov
or
mov
add
rol
inc
ror
pop
enter
add
add
jae
fstp
mov
lods
adc
stc
add
or
inc
sub
add
add
add
add
or
add
or
nop
mov
xchg
sbb
scas
mov
dec
jl
dec
or
jbe
sub
pushf
inc
lock
les
clc
iret
lahf
and
test
cmc
and
mov
loope
enter
mov
nop
pop
adc
repnz
and
and
lahf
and
push
ret
push
mov
cwde
rcr
aas
dec
add
cmp
mov
or
xor
add
pop
mov
push
mov
in
xchg
sub
add
test
or
jmp
ret
jnp
idiv
adc
lea
and
hlt
ins
add
xchg
ret
cwde
(bad)
or
pop
fadd
shl
gs
loop
push
or
or
pop
mov
call
sub
dec
repnz
sbb
dec
(bad)
rol
or
jl
cmp
jmp
jb
jo
xor
or
mov
loop
mov
lds
xchg
repnz
pop
mov
xchg
test
inc
add
sahf
or
dec
sub
or
fsub
daa
adc
or
popa
mov
addr16
add
movs
movs
xchg
or
rol
in
sbb
xchg
out
xchg
into
jge
or
fistp
push
add
inc
pushf
mov
xor
cmp
jb
or
or
xchg
shl
cmp
and
cs
xor
inc
and
js
int
scas
aam
add
pop
js
inc
adc
(bad)
loop
push
pop
mov
inc
and
inc
out
and
mov
mov
fsub
je
in
repz
imul
inc
cmp
in
add
ja
and
addr16
jl
xor
add
ins
dec
add
les
sub
inc
and
in
cmp
push
cmp
test
inc
and
add
rol
inc
sbb
test
jmp
loope
cmp
cmp
adc
xor
add
push
jecxz
mov
adc
inc
dec
sub
movs
dec
cmp
mov
inc
cmp
and
pop
push
xor
cmp
shr
mov
or
xor
into
cmp
out
test
inc
xor
mov
xor
cmp
(bad)
sub
sub
sbb
imul
push
dec
pop
icebp
mov
push
adc
enter
int3
lds
or
cwde
pop
test
hlt
loopne
add
cmp
add
and
inc
mul
in
sbb
aam
jae
add
xchg
or
test
fadd
sub
test
(bad)
mov
lock
shl
lds
sbb
test
loope
aas
sbb
xor
add
add
js
mov
xor
(bad)
add
sbb
add
mov
mov
jg
(bad)
ja
add
lock
pop
adc
mov
jns
jecxz
or
leave
pushf
call
out
arpl
dec
loopne
inc
inc
push
add
jo
add
les
fild
inc
add
repnz
popa
cmp
mov
adc
out
stc
outs
or
inc
add
dec
adc
add
jl
add
(bad)
nop
pusha
inc
xor
mov
ins
loope
push
xlat
enter
fbld
std
(bad)
mov
lock
(bad)
mov
add
clc
arpl
jae
(bad)
sub
popa
or
and
(bad)
sbb
sbb
and
or
inc
fst
(bad)
xchg
xor
les
or
inc
add
push
mov
es
mov
sbb
jmp
nop
pop
xor
clc
pop
jo
adc
or
push
add
aam
pop
call
cmp
add
cwde
inc
adc
nop
inc
sub
arpl
or
nop
mov
or
out
mov
and
xlat
enter
or
call
add
loop
inc
or
es
add
inc
inc
and
rol
js
add
rol
nop
sbb
inc
push
cmp
xchg
dec
gs
mov
mov
ror
mov
and
push
sbb
add
xor
popa
push
and
sub
cmp
repnz
mov
mov
pop
cmp
add
clc
inc
cs
add
inc
and
sbb
test
adc
mov
inc
out
pop
call
or
add
mov
add
shl
stc
nop
or
push
xor
add
clc
repz
cmp
xor
push
add
inc
push
pop
xor
add
loopne
ret
push
add
lods
rep
xchg
pop
lock
xchg
int3
cdq
mov
cmp
add
popa
xchg
or
dec
push
cld
ret
jl
hlt
push
push
cwde
or
add
pop
inc
adc
rcl
lods
mov
and
test
call
pop
cld
and
xor
push
or
xor
push
pushf
add
lock
push
rol
mov
loopne
xchg
loopne
sbb
lock
or
sbb
and
cmp
add
add
push
or
adc
nop
lock
je
adc
hlt
sbb
mov
inc
add
inc
push
pusha
and
call
jg
inc
jae
cmp
daa
enter
sub
imul
daa
inc
xchg
add
data16
dec
or
dec
in
cdq
or
aad
sbb
call
mov
shl
mov
or
enter
rol
test
iret
iret
lods
nop
add
loop
mov
fisub
test
jecxz
add
xchg
add
sub
adc
lods
add
pushf
add
xor
add
add
cmp
add
cld
outs
mov
push
or
and
enter
lock
add
mov
in
or
push
inc
or
mov
add
inc
mov
adc
inc
adc
pop
add
xor
push
mov
inc
sbb
adc
sbb
cwde
inc
sbb
ror
outs
aad
mov
jge
add
out
fs
push
shl
add
mov
bnd
dec
mov
pusha
aas
add
shr
and
sub
or
aas
cwde
int3
mov
ror
sub
das
loop
add
stos
xor
add
lds
std
xchg
and
inc
dec
rol
inc
cmove
not
add
xchg
rol
dec
push
inc
mov
ror
dec
mov
outs
ror
push
scas
mov
test
rol
push
stos
push
push
jmp
add
mov
add
retf
inc
mov
sub
rcl
xrelease
adc
cld
inc
fdiv
test
inc
mov
add
sub
adc
add
test
xor
aam
mov
in
fdivr
dec
dec
and
adc
sbb
mov
push
scas
clc
pop
adc
push
push
push
fwait
cld
xchg
push
adc
shl
adc
daa
mov
sbb
leave
pop
mov
stc
add
or
inc
sub
add
add
add
add
or
add
or
rcr
es
push
mov
xor
mov
sub
bnd
mov
int3
mov
jno
and
pop
scas
cs
push
js
push
les
inc
rcl
ror
bnd
cs
or
das
sub
loope
mov
nop
and
cmps
sbb
les
lds
out
cwde
jg
add
loopne
aam
pushf
adc
shl
sbb
adc
jge
mov
adc
jg
(bad)
ins
mov
inc
sbb
or
pop
imul
icebp
gs
mov
je
mov
mov
sti
aaa
mov
add
das
call
mov
mov
and
ret
mov
daa
enter
sbb
inc
lahf
sub
add
cmc
push
dec
push
or
add
cwde
dec
cwde
dec
pusha
mov
add
xor
clc
repz
cld
jg
call
cmp
sub
jge
sub
push
and
loopne
xor
adc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
aas
jg
adc
in
xor
lahf
ret
xchg
sbb
pop
ret
xchg
and
adc
jg
xor
fmul
inc
xchg
jge
cmp
mov
add
loop
test
or
inc
push
(bad)
ficomp
pop
std
cs
and
loope
or
adc
jle
or
and
ret
leave
test
jge
mov
push
xor
sub
add
jbe
mov
ret
sar
retw
xchg
lea
sti
ret
loopne
sar
sbb
aaa
ins
and
pop
aam
add
jb
sub
mov
cmp
xor
sbb
(bad)
push
cmps
scas
mov
movs
add
cs
xor
in
pop
cmp
stos
xchg
test
jl
cmp
xchg
shl
je
sub
ret
xor
jg
(bad)
jbe
leave
lock
test
mov
adc
dec
mov
test
(bad)
mov
and
cmp
shrd
rcr
add
sar
mov
shr
sub
or
pop
inc
cwde
nop
add
push
push
push
xchg
inc
cwde
push
inc
add
stc
add
or
inc
sub
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
push
adc
outs
adc
ss
dec
mov
js
adc
dec
sbb
inc
loop
aam
repnz
add
cld
test
es
rcl
or
add
shl
adc
add
xor
add
outs
mov
and
push
cmps
sub
jl
loopne
rcr
or
sub
pusha
(bad)
aas
(bad)
mov
xor
xor
ds
in
les
das
out
loop
inc
pop
mov
mov
adc
add
and
adc
outs
movs
arpl
jecxz
xchg
sub
gs
adc
cmp
ss
gs
mov
add
mov
add
jnp
adc
pop
cld
icebp
in
pop
cmp
cmp
sbb
push
and
adc
rcr
add
(bad)
mov
mov
adc
mov
dec
mov
jg
add
pop
jmp
xor
cmp
inc
int
sar
repz
add
dec
or
mov
and
mov
push
or
or
test
push
add
adc
or
adc
dec
add
inc
lock
inc
xor
mov
adc
test
adc
mov
jno
and
jl
nop
add
ins
xor
sbb
jg
adc
inc
pop
add
or
mov
adc
add
js
pusha
les
je
xchg
add
or
add
ror
dec
sbb
or
rcl
pop
push
pop
add
xor
xor
add
fs
inc
inc
(bad)
cld
xchg
int3
or
mov
add
sbb
les
and
jmp
add
adc
call
push
stos
mov
mov
push
push
mov
push
sub
dec
fwait
adc
push
inc
ss
cwde
arpl
leave
aas
jb
add
add
in
ror
add
xor
nop
pop
fcom
adc
test
leave
sub
ins
pop
nop
dec
ud1
or
pop
jmp
cmp
push
inc
adc
mov
arpl
retf
pushf
inc
leave
adc
inc
add
add
ret
test
xor
jae
inc
mov
push
or
pop
xchg
and
shl
ds
ret
add
mov
nop
into
daa
cli
cmp
pop
xor
inc
sbb
xchg
dec
ins
sbb
inc
movs
hlt
jo
lods
and
lea
aaa
mov
add
pop
adc
adc
add
movs
jae
xor
lock
inc
adc
stc
pop
push
sub
inc
add
inc
add
icebp
adc
test
retf
ss
(bad)
fsubr
addr16
aas
pop
jo
or
xchg
mov
pop
test
inc
int3
add
inc
inc
pop
sbb
xor
add
xor
jb
or
test
mov
jns
inc
add
sbb
out
rol
adc
pushf
fcomp
inc
loope
and
sbb
aam
ret
sub
add
inc
sbb
inc
retf
and
sub
add
adc
and
add
mov
aam
fisttp
aaa
les
rol
cmp
adc
inc
sbb
adc
mov
nop
addr16
add
sbb
pop
ret
and
inc
ins
lds
mov
icebp
or
nop
or
clc
inc
adc
xchg
mov
pop
out
mov
lods
jo
or
add
cwde
add
sub
mov
(bad)
les
dec
or
lock
push
dec
pusha
add
add
or
push
mov
or
add
ins
xor
or
push
nop
push
add
fst
add
sub
fiadd
and
fdiv
sbb
das
add
test
xor
or
bound
cmp
bound
sar
lock
popa
enter
xchg
inc
inc
pusha
shl
push
cmp
cdq
je
and
and
mov
add
add
stc
add
or
inc
sub
add
add
add
or
add
or
mov
rol
mov
ret
xchg
imul
data16
out
inc
add
lods
jmp
(bad)
xchg
push
cmp
mov
rcr
cwde
inc
dec
shl
inc
or
adc
cmp
inc
add
or
or
adc
cwde
and
int
add
xchg
retf
cwde
ss
dec
mov
cmp
adc
stos
aas
adc
ds
not
add
test
mov
push
arpl
loope
mov
sti
into
adc
bound
mov
das
ret
push
cwde
ins
popa
test
pop
or
fmul
sbb
test
dec
xchg
sub
shl
push
inc
ss
mov
cmps
sub
jmp
hlt
mov
ins
sbb
inc
test
sub
jle
mov
pop
outs
std
dec
test
xor
into
lods
cmp
je
cmp
xchg
or
popf
ja
push
sar
call
add
cmc
pop
lock
push
xor
lods
daa
and
sbb
or
ret
inc
xor
add
or
add
cwde
(bad)
dec
leave
aaa
inc
push
sbb
pop
push
les
inc
mov
and
or
jl
aam
inc
jns
loopne
pop
push
push
or
pop
xor
add
push
pop
shl
xor
enter
sti
and
or
sbb
pop
mov
push
add
add
dec
es
test
or
out
mov
sub
mov
nop
lock
dec
loopne
add
in
add
imul
test
and
xchg
shl
add
je
mov
call
xchg
mov
xchg
lock
adc
xchg
mov
fnstenv
adc
dec
add
add
push
sub
sub
and
inc
sbb
cmp
inc
add
add
add
pop
jle
shl
pusha
push
rcr
xor
xchg
(bad)
sbb
lock
xor
ins
nop
dec
cmovle
inc
cmp
inc
and
lar
test
add
loopne
shl
push
ins
push
mov
imul
pop
mov
xor
sbb
cld
push
dec
scas
sbb
mov
xchg
dec
sub
pushf
inc
mov
push
je
xor
xchg
add
xor
dec
push
mov
adc
sub
xchg
mov
adc
add
arpl
or
mov
sbb
in
dec
adc
aas
aam
or
(bad)
and
arpl
inc
pop
mov
rol
dec
loope
sbb
cmp
dec
leave
je
rcl
ret
sbb
sbb
cmp
add
daa
rol
ror
cmp
mov
sub
test
adc
pusha
xchg
mov
or
adc
in
or
rol
and
xchg
inc
sbb
inc
xchg
pop
in
cmp
or
push
add
dec
shr
add
hlt
xor
or
or
inc
ds
jb
sbb
push
dec
inc
xor
rol
push
mov
add
add
sub
adc
adc
mov
cmp
push
pusha
add
int3
add
sbb
aas
pop
icebp
mov
mov
jne
rol
mov
add
add
mov
add
call
sbb
dec
and
inc
dec
outs
mov
or
(bad)
and
or
inc
adc
adc
or
es
add
jmp
sbb
loop
push
add
or
inc
sbb
inc
sub
dec
add
mov
pusha
add
sbb
inc
add
ror
sbb
(bad)
and
adc
mov
or
add
in
push
pusha
or
lock
lods
leave
sub
jo
loope
ret
mov
sbb
nop
add
mov
mov
add
mov
add
and
dec
ret
daa
nop
sub
dec
sub
dec
mov
pusha
jle
cmp
add
and
add
or
inc
sub
add
add
add
or
add
or
mov
rol
mov
ret
xchg
adc
push
js
mov
outs
pop
call
mov
or
xor
push
pusha
dec
dec
inc
scas
pushf
shl
loop
and
dec
dec
movs
sub
mov
dec
mov
addr16
ret
add
and
adc
cmp
inc
lock
stos
pop
cs
les
push
mov
pop
dec
popf
repz
adc
inc
sbb
jnp
out
dec
pop
mov
inc
jbe
xchg
cmp
or
scas
inc
ss
or
mov
leave
movs
test
repnz
inc
enter
sub
iret
lock
and
nop
les
push
mov
dec
addr16
lods
add
pusha
lods
sar
int
mov
lahf
sub
dec
pop
jno
test
shl
or
sti
aaa
aad
test
xchg
loope
fidiv
xchg
jne
push
push
jle
add
jns
push
inc
lock
add
out
shl
cmps
or
(bad)
jle
movs
sbb
pmulhw
(bad)
push
add
xor
mov
sub
inc
fadd
add
inc
lock
add
cld
and
jle
cwde
add
add
jne
dec
add
and
jo
or
and
inc
pop
mov
ret
or
or
aaa
sbb
add
mov
sub
les
stos
or
inc
pop
das
loopne
adc
rol
push
add
in
sub
and
inc
push
dec
xor
sub
add
jae
push
sbb
rol
add
retf
adc
dec
js
int3
aas
leave
fdiv
add
or
and
push
mov
xchg
sar
adc
push
and
pusha
add
out
lock
or
mov
mov
push
push
mov
push
sub
and
aas
cmp
and
push
adc
push
inc
ss
cwde
arpl
leave
aas
jb
inc
add
aaa
xor
or
mov
popa
add
inc
xchg
or
add
xor
mov
push
xchg
xchg
sub
inc
adc
add
add
adc
or
jo
inc
sub
mov
sbb
hlt
xor
push
xchg
test
test
sub
stc
adc
movlps
jecxz
cmp
add
push
out
sub
pop
xor
inc
sbb
in
cmps
push
xor
xor
sub
xor
add
mov
add
pop
push
mov
adc
add
movs
repz
pop
dec
enter
aam
enter
xchg
iret
add
add
(bad)
pop
rol
ins
cld
pusha
add
mov
or
sbb
adc
push
sub
add
sbb
add
mov
or
jnp
rol
xor
jb
or
test
xchg
inc
jns
jecxz
sub
sbb
and
adc
pop
inc
movs
rcl
jmp
lock
mov
inc
add
outs
xchg
pusha
inc
pop
pop
cld
xchg
add
mov
inc
(bad)
fwait
nop
ss
xor
add
shl
add
or
or
jb
adc
sbb
loopne
add
mov
ror
mov
cmp
int3
inc
mov
daa
adc
or
lds
fisttp
sub
add
lds
loopne
inc
xor
and
or
push
mov
loope
sub
bound
sbb
ret
push
xchg
or
or
and
push
add
or
push
pop
rol
aas
push
lock
and
adc
or
clc
add
add
aaa
je
pop
jno
ret
lock
jl
mov
pop
xchg
inc
(bad)
ror
cmp
or
rol
push
lahf
add
rcr
xchg
and
dec
loop
(bad)
mov
and
add
adc
enter
dec
adc
icebp
and
cdq
inc
add
push
mov
adc
adc
add
jge
adc
add
stc
add
or
inc
sub
add
add
add
or
add
or
mov
rol
mov
ret
xchg
and
jb
mov
or
(bad)
push
mov
jb
dec
mov
inc
mov
or
sub
repnz
ret
pop
and
not
call
pop
movs
data16
or
sar
in
push
adc
fbstp
fs
mov
inc
xor
jae
fbld
ins
cli
iret
and
mov
dec
mov
jl
(bad)
(bad)
ds
xchg
loopne
dec
mov
cmp
popa
popa
xchg
xor
and
(bad)
imul
or
adc
and
(bad)
or
xchg
add
test
add
xor
sub
jg
fst
xor
outs
adc
shl
dec
sub
cmp
jmp
pop
xchg
sub
push
popf
pop
ss
mov
jb
sbb
sub
imul
mov
sar
add
or
out
or
cld
push
and
(bad)
mov
ret
jne
ror
pop
or
add
loopne
(bad)
addr16
inc
ins
cld
inc
inc
dec
adc
push
adc
loopne
sub
add
xor
aaa
test
not
lds
adc
and
icebp
nop
inc
mov
push
mov
or
mov
adc
or
dec
sbb
adc
adc
add
mov
add
dec
es
test
or
out
pusha
inc
test
mov
xor
pop
dec
sub
test
sbb
imul
push
dec
cmps
add
pop
jno
add
mov
add
test
dec
loopne
add
retf
sbb
and
xchg
dec
sub
ret
inc
pop
pusha
xor
les
dec
mov
or
adc
mov
sub
cmp
and
mov
push
inc
ja
and
inc
add
push
nop
add
data16
add
add
add
pop
jle
test
mov
ins
xor
push
add
imul
dec
add
je
add
rol
dec
add
ins
xor
or
xor
add
add
add
or
ins
sub
pop
push
ret
add
sub
or
pop
mov
mov
sub
gs
and
inc
adc
push
jecxz
pop
xchg
mov
nop
sub
or
pusha
inc
inc
xor
mov
test
adc
jo
add
in
dec
push
inc
js
or
mov
inc
sub
inc
pop
push
rcl
xor
xor
add
bound
inc
push
call
xchg
xor
inc
cmp
xor
and
aaa
je
mov
dec
in
nop
adc
rol
ret
leave
fmul
cmc
hlt
iret
test
adc
adc
ror
adc
push
pop
cmp
jno
or
adc
xor
movs
xchg
std
adc
pusha
xchg
and
xor
adc
in
or
rol
and
xchg
inc
sbb
inc
mov
and
sub
sub
add
xor
test
aaa
sbb
add
rol
inc
inc
adc
xor
or
or
inc
ds
jb
sbb
push
cmove
ins
mov
ret
xor
movs
cmp
or
ds
sbb
ds
mov
adc
push
fild
or
add
add
jo
cmp
inc
or
fadd
pop
xchg
rol
xor
(bad)
nop
jnp
arpl
mov
jo
jb
and
and
add
xor
adc
or
sbb
lds
inc
ret
or
rol
test
test
aam
add
add
nop
add
enter
pusha
ret
nop
sub
test
xor
mov
xchg
add
inc
adc
mov
lods
lock
push
repnz
mov
test
ret
push
nop
shl
mov
or
sub
or
inc
add
mov
push
rol
ret
fsub
xchg
mov
loopne
xchg
and
jg
in
in
cmps
xchg
push
data16
movs
pop
sub
add
and
add
or
inc
sub
add
add
add
add
or
add
or
nop
and
push
or
dec
mov
test
adc
sbb
inc
sbb
xchg
inc
inc
scas
ins
jb
loop
adc
adc
lea
and
hlt
ins
add
mov
or
dec
popa
shl
and
or
test
in
rcl
jb
jo
inc
sub
push
test
aam
lds
adc
es
out
pop
mov
mov
call
mov
jp
mov
cmp
data16
push
in
mov
retf
add
pusha
or
loope
repnz
sbb
pop
pop
call
jo
push
push
mov
std
dec
jbe
(bad)
and
add
jg
jmp
js
aam
dec
mov
push
sub
shl
dec
xor
inc
xor
scas
adc
mov
(bad)
push
inc
inc
add
pop
cmp
ffree
cmp
dec
add
sar
push
ja
sub
sbb
adc
xor
pop
lock
jg
sub
add
aam
sar
push
mov
fsubr
jns
iret
pop
(bad)
lea
xchg
push
leave
dec
cmp
bound
mov
sub
inc
sbb
ds
and
test
rcl
aam
shl
xor
push
rol
aad
dec
nop
adc
in
aam
inc
out
or
inc
sbb
stc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
rcr
es
push
mov
xor
mov
sub
bnd
mov
int3
mov
jno
and
pop
scas
cs
push
js
push
les
inc
rcl
ror
bnd
cs
or
das
sub
loope
mov
nop
and
cmps
sbb
les
lds
out
cwde
jg
add
loopne
aam
pushf
adc
shl
sbb
adc
jge
mov
adc
jg
(bad)
ins
mov
inc
sbb
or
pop
imul
icebp
gs
mov
je
mov
mov
sti
aaa
mov
add
das
call
mov
mov
and
ret
mov
daa
enter
sbb
inc
lahf
sub
add
push
dec
push
or
add
cwde
dec
cwde
dec
pusha
mov
add
xor
clc
repz
cld
jg
call
cmp
sub
jge
sub
add
add
test
cmp
test
fsubp
push
inc
add
add
adc
add
add
add
dec
add
xor
add
add
add
popa
xor
sbb
add
add
ins
je
add
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
retf
mov
cmps
jne
sti
aad
in
add
xchg
add
std
sbb
lock
jbe
or
inc
adc
mov
xlat
(bad)
stos
cwde
push
add
adc
jmp
out
lds
add
movs
add
out
jmp
add
icebp
add
int3
add
fld
std
(bad)
std
(bad)
mov
call
add
mov
(bad)
dec
xlat
add
stos
jbe
cmc
std
(bad)
inc
add
fsqrt
fild
arpl
(bad)
(bad)
in
imul
into
pop
push
mov
scas
rol
or
in
lea
adc
mov
(bad)
xchg
add
mov
push
es
in
xlat
jno
or
cld
bound
add
lds
(bad)
inc
call
sbb
cmp
jmp
jp
movs
jp
in
aaa
(bad)
cld
fcomp
jmp
movs
adc
sti
cwde
add
add
xor
loop
mov
(bad)
and
or
jg
push
call
add
jmp
(bad)
js
retf
loopne
add
or
fist
add
in
lock
add
add
aam
mov
lahf
enter
ss
xchg
add
loop
rol
or
stc
xor
add
addr16
std
retf
pop
rcr
jecxz
xor
cld
fcomp
mov
pushf
test
lock
call
lods
test
jmp
shr
or
mov
cmp
sub
fcmovnb
pushf
repz
push
push
dec
inc
adc
(bad)
inc
mov
aad
(bad)
enter
int3
cmps
dec
fcmovb
xor
popa
push
(bad)
xchg
push
(bad)
clc
add
or
jg
or
add
mov
mov
cli
call
out
mov
std
out
scas
cmp
retf
adc
fwait
push
mov
arpl
sub
idiv
stc
out
loope
mov
jle
dec
mov
sbb
mov
movs
and
mov
sbb
jg
pop
push
sub
aad
dec
adc
push
jbe
or
loope
bnd
add
fild
(bad)
stc
or
xchg
and
jecxz
neg
add
stos
jb
icebp
les
mov
fptan
mov
rcr
call
xor
test
lods
pop
add
or
push
rcl
xor
mov
jno
sbb
imul
push
adc
or
sbb
pop
or
adc
mov
pop
push
es
loopne
icebp
jecxz
repnz
div
add
jecxz
loopne
fmulp
mov
lds
out
rol
not
adc
fimul
jne
jns
lea
test
and
daa
out
retf
add
fisubr
lock
out
inc
inc
dec
clc
hlt
push
cmp
ins
adc
mov
jmp
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
in
rol
push
pop
mov
fmul
inc
cmp
xchg
sub
sbb
inc
mov
or
pop
mov
cmp
fsub
push
loop
ins
dec
push
je
inc
imul
das
pop
xchg
cmp
repnz
push
cmc
xchg
cwde
and
mov
mov
add
ret
cmps
dec
retf
pop
push
xor
cmp
loopne
push
nop
mov
rcl
repnz
mov
xor
jle
push
jmp
into
in
and
outs
scas
(bad)
nop
idiv
sti
xor
repnz
push
sub
jge
mov
(bad)
jp
push
push
fwait
dec
retf
cmps
dec
push
sbb
xchg
inc
pop
mov
outs
jl
xlat
add
lods
popa
add
(bad)
pushf
shl
add
cwde
scas
fwait
xor
push
mov
inc
pop
sbb
xchg
xor
mov
or
sbb
cdq
inc
fisttp
std
cmp
inc
add
jp
cmc
pop
fsub
push
xchg
push
and
push
inc
rol
pop
loop
add
fsub
and
repnz
and
mov
add
xchg
mov
jo
adc
adc
nop
add
mov
add
or
dec
or
movs
jecxz
or
jo
push
ficom
or
jb
ret
pop
add
push
mov
or
mov
fld
xchg
dec
cmp
pop
ror
inc
aam
fs
aaa
rcr
mov
bound
xchg
mov
fstp
outs
aad
cmps
cmp
or
adc
mov
pop
ss
sub
pop
test
and
and
push
sbb
xor
or
inc
sub
or
sahf
shl
movs
stos
hlt
call
cmp
jo
cmp
pushf
xchg
xchg
cmp
and
inc
or
add
push
xchg
div
xor
add
or
mov
mov
shl
xor
nop
adc
inc
push
enter
popf
loop
rol
dec
and
dec
add
sahf
xchg
or
and
cwde
inc
inc
sbb
and
lock
es
jo
(bad)
pop
ja
mov
cmps
mov
inc
push
jle
pop
inc
or
clc
mov
and
leave
push
adc
add
retf
stos
ror
je
and
pop
push
pushf
shl
sbb
inc
(bad)
sbb
push
ror
sbb
inc
inc
push
dec
cmp
rol
es
and
sbb
add
add
sar
push
(bad)
xor
mov
dec
and
jno
add
mov
test
cmps
test
inc
or
mov
sar
mov
add
cwde
pusha
or
mov
push
add
jge
mov
dec
movs
mov
mov
cmp
mov
cmp
xor
or
xor
pusha
inc
ss
xchg
inc
inc
adc
xor
adc
nop
mov
vsqrtss
loope
repz
mov
test
push
sbb
pushf
loope
add
lock
sub
push
cwde
dec
mov
mov
das
jge
sub
dec
cmps
sar
mov
mov
clc
stc
retf
dec
lahf
or
inc
inc
pop
adc
or
or
sti
xchg
aaa
mov
xor
vpslld
add
or
or
aam
inc
pop
js
or
inc
dec
inc
add
sbb
and
outs
jo
das
sub
or
and
push
mov
add
loopne
pop
call
das
jle
loopne
cs
add
or
adc
stos
push
mov
xor
shl
dec
mov
jno
xlat
or
jl
inc
adc
or
add
mov
push
xchg
and
sub
add
sbb
add
iret
js
push
xor
push
nop
and
push
rol
adc
xor
pop
mov
inc
adc
ror
add
pop
jno
sbb
xchg
dec
adc
cwde
xor
add
or
cmp
jecxz
jae
pop
sbb
dec
loop
cmps
in
movs
sub
enter
sbb
cmp
adc
adc
rol
dec
cwde
ror
sub
add
push
popa
mov
and
fnstenv
cmp
pop
bound
clc
and
push
mov
dec
sbb
sbb
and
es
or
push
call
sbb
imul
cmp
arpl
iret
jns
sbb
sbb
cmp
add
push
mov
adc
mov
gs
lea
mov
int
movs
sub
cdq
mov
nop
or
(bad)
dec
inc
ja
and
jo
xchg
inc
lock
rol
shl
push
stos
xlat
enter
clc
mov
xchg
inc
and
ret
sub
sbb
inc
add
in
inc
sbb
fimul
mov
add
add
sbb
push
inc
add
sbb
add
hlt
dec
adc
add
cli
adc
dec
sbb
add
sub
idiv
scas
jle
sub
inc
xor
pop
add
xor
adc
and
dec
sbb
xlat
sbb
(bad)
dec
imul
inc
add
mov
lss
add
add
cs
mov
aad
jbe
lock
rcl
inc
cs
and
sub
push
inc
inc
sub
ror
mov
cmp
inc
sbb
or
adc
dec
popa
push
push
call
xchg
pop
pop
mov
dec
sti
adc
or
dec
add
xor
into
jo
or
mov
in
add
sbb
mov
xchg
or
test
push
add
sub
es
dec
imul
add
test
add
xor
add
xadd
or
push
loope
inc
das
push
daa
push
add
out
or
mov
add
sub
sub
nop
sbb
mov
xor
mov
aas
pop
popa
or
hlt
adc
mov
das
int3
popa
add
enter
in
pop
push
ins
arpl
pop
lock
movs
aas
mov
aaa
xor
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
addr16
xchg
and
hlt
mov
mov
jecxz
dec
fdivr
mov
adc
cmp
push
or
adc
add
push
sbb
je
rcr
jg
add
sbb
mov
pushf
push
adc
push
movs
add
sub
clc
lea
add
xchg
cmp
aas
pop
add
dec
push
sub
rcl
sbb
inc
int3
inc
lock
ret
push
sbb
add
lahf
pop
mov
rol
mov
pop
fptan
loope
adc
sbb
mov
mov
popa
shl
sub
mov
imul
jne
or
inc
xchg
sbb
mov
adc
inc
adc
and
and
xor
xchg
inc
mov
mov
mov
mov
(bad)
(bad)
pop
lds
add
call
inc
dec
sbb
loope
or
inc
(bad)
lock
mov
data16
mov
and
pop
cmp
lock
mov
jmp
inc
xor
add
push
call
loopne
cmp
std
sbb
rol
add
xchg
push
add
ror
pop
pushf
nop
ror
call
push
or
sub
rol
cmp
cdq
and
or
xor
sbb
paddw
push
add
adc
cmp
clc
and
inc
add
xchg
mov
push
add
adc
mov
rol
loope
into
cmp
out
xchg
movs
pusha
add
or
dec
add
inc
pop
pushf
jecxz
xor
bound
aaa
cwde
push
loopne
cmps
adc
and
popf
mov
add
sbb
xchg
shl
pop
outs
ins
call
add
sub
add
mov
or
sub
mov
adc
mov
repnz
add
xchg
test
jne
and
sub
cwde
inc
add
fidiv
mov
sub
(bad)
or
add
add
je
dec
pop
bound
mov
and
add
dec
mov
xchg
cmp
nop
add
add
inc
jnp
xor
icebp
mov
add
sbb
adc
aas
mov
add
or
(bad)
sbb
ss
xrstors
push
mov
sub
xor
inc
adc
inc
mov
add
lock
cmovle
sub
or
mov
pop
add
mov
or
cmp
rol
addr16
mov
push
xor
mov
mov
int3
xor
push
shl
jmp
call
mov
sti
mov
fnstcw
loopne
icebp
iret
(bad)
mov
sbb
add
call
cld
jae
and
sub
rol
rcl
out
inc
inc
add
rcr
xor
xlat
pop
add
int3
in
jmp
pusha
iret
xor
inc
pusha
sbb
mov
fdiv
unpcklps
add
add
add
mov
inc
mov
mov
popf
std
mov
add
leave
jecxz
nop
and
in
popa
dec
add
push
inc
lock
adc
or
pop
add
push
adc
push
xor
or
add
sahf
push
add
add
js
inc
dec
mov
add
int
adc
xchg
xor
jbe
int3
fstp
shl
cmp
loop
cmp
pop
pop
push
cmp
cmp
or
fs
adc
and
lods
and
in
add
iret
push
sub
mov
or
adc
test
pop
push
add
dec
push
ret
rol
popa
add
or
cmp
loope
cdq
call
fwait
pop
sbb
inc
adc
xchg
inc
add
add
adc
arpl
and
lock
or
ror
inc
or
add
ret
aas
jbe
inc
dec
pop
mov
lods
rol
and
popa
or
push
cli
icebp
cmovnp
add
fs
pop
mov
add
mov
sbb
rol
ret
ret
jmp
ret
xchg
lea
add
push
repnz
jne
add
mov
int
mov
mov
lds
inc
cdq
mov
sub
or
add
popa
xor
xchg
xchg
jl
xor
loopne
adc
sub
jae
push
add
sbb
sub
jg
rol
or
loop
lar
ror
loopne
push
or
sbb
and
sbb
mov
adc
xor
push
test
add
cs
sbb
mov
sbb
mov
adc
icebp
mov
pop
stc
sar
cli
(bad)
ins
loopne
and
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
adc
ffreep
xchg
and
aam
xor
pop
sub
bound
add
imul
add
data16
addr16
pushf
adc
or
shl
pusha
mov
shl
retf
mov
pop
mov
pop
add
retf
sbb
ret
or
mov
add
int
push
in
cs
ds
mov
jp
push
cli
dec
xor
pop
pop
outs
retf
inc
jecxz
add
jmp
in
enter
(bad)
dec
inc
int3
movs
mul
mov
pop
cmp
fs
aas
adc
inc
add
pop
and
mov
xlat
pop
(bad)
std
fidiv
xlat
jg
sbb
movs
add
cmc
and
or
gs
fcom
inc
leave
outs
xor
data16
inc
mov
push
mov
enter
sti
jb
push
sbb
sbb
pop
cld
scas
xchg
ins
jge
test
retf
xchg
adc
repnz
xor
xchg
mov
mov
jno
xor
or
test
sub
cmp
mov
inc
js
push
or
cmp
pop
das
out
add
cmp
(bad)
and
inc
jae
mov
push
xor
rol
sbb
cs
or
sub
jo
sbb
pop
fldenv
jae
rcl
pop
add
ror
dec
les
add
lahf
movs
test
rol
inc
sub
(bad)
pop
test
push
rol
pop
mov
dec
dec
sbb
mov
or
pop
fs
fs
inc
ja
mov
nop
pop
pop
aad
fs
cmp
rcl
mov
mov
popf
mov
xchg
in
jo
inc
pop
je
or
adc
inc
pop
int
push
ss
or
pop
cmc
jmp
sbb
xchg
enter
ret
or
dec
cmp
int3
sbb
cmp
lds
push
shr
adc
loopne
aas
sub
loopne
fild
mov
or
mov
popa
add
cld
jae
sbb
pop
scas
inc
in
adc
mov
adc
into
jo
inc
dec
cmp
mov
jmp
jbe
scas
inc
push
cld
push
icebp
aas
jnp
dec
jno
adc
popf
mov
sbb
icebp
inc
jnp
sub
retf
xor
hlt
mov
push
pop
inc
add
inc
inc
push
add
les
inc
or
inc
(bad)
pushf
jno
push
or
pop
test
dec
pop
popf
adc
inc
sti
inc
adc
push
sbb
icebp
inc
out
and
lea
inc
nop
sbb
push
xlat
jmp
mul
add
scas
jmp
add
test
fadd
int
add
nop
aaa
mov
inc
inc
les
aas
jmp
call
sub
(bad)
or
lock
cmp
movaps
fpatan
unpcklps
aam
jp
xor
adc
enter
dec
xor
arpl
adc
lods
mov
xor
bnd
aam
aas
mov
loopne
sbb
bound
xchg
cmp
xlat
sub
inc
shl
rdmsr
js
ins
mov
adc
add
outs
inc
retf
iret
and
push
sar
sub
inc
lods
nop
mov
add
out
sbb
daa
mov
push
cwde
test
retf
and
inc
popf
cmp
push
ret
sbb
ins
mov
sub
inc
add
cmp
adc
jo
jne
cmp
push
xor
jnp
jo
cdq
mov
ffree
xchg
xor
adc
xor
xor
js
sub
xor
sub
pop
xor
or
inc
test
jmp
loopne
pop
clc
(bad)
jp
mov
and
rcl
or
inc
adc
mov
add
mov
and
push
cmp
adc
add
rcl
add
or
inc
ret
inc
mov
repnz
adc
and
add
sahf
rol
mov
inc
(bad)
(bad)
fsub
add
fs
xor
adc
nop
mov
xchg
mov
add
adc
push
nop
pusha
sub
and
add
xchg
inc
add
mov
inc
ss
adc
adc
sbb
or
icebp
nop
leave
jg
rcl
push
xor
lds
rol
and
add
mov
jno
test
sub
call
xor
cmp
pushf
add
cmps
cmp
(bad)
enter
adc
shl
add
clc
test
push
call
cmp
mov
pop
push
(bad)
add
mov
add
push
add
jo
add
inc
or
mov
add
adc
test
gs
mov
loope
xor
loopne
push
test
cmps
popa
dec
xchg
and
or
cld
or
push
nop
or
and
imul
cli
loope
jae
imul
inc
stos
(bad)
cmp
or
add
and
add
or
inc
sub
add
add
or
add
or
mov
inc
cmp
out
(bad)
adc
push
sbb
adc
imul
out
push
xchg
mov
imul
repz
dec
fcom
jb
mov
sub
(bad)
mov
push
mov
sub
push
pop
adc
ud0
enter
test
xchg
lock
unpckhps
jns
retf
int3
fdivr
or
and
xchg
mov
jbe
cmps
shl
jns
icebp
and
dec
js
pop
shl
ret
push
and
add
and
movs
inc
(bad)
cli
mov
cli
pop
push
sbb
pop
leave
add
xor
pop
sahf
push
mov
sub
jmp
daa
(bad)
rol
scas
(bad)
cmps
in
daa
cdq
adc
xchg
nop
or
jecxz
sub
cmp
add
call
adc
mov
ds
std
jnp
adc
inc
mov
ret
dec
adc
pcmpeqw
adc
xchg
and
cmp
inc
add
and
adc
pushf
xor
xchg
cmp
shl
nop
cs
push
ret
sub
retf
push
pop
mov
outs
icebp
shl
je
xchg
pushf
loopne
inc
cmp
push
(bad)
aas
xchg
sbb
push
add
sub
push
pop
xor
xchg
dec
ss
xor
movs
loop
ss
sbb
inc
or
xor
aas
add
xchg
cmp
adc
rol
dec
icebp
clc
bndldx
and
xchg
add
sbb
pusha
(bad)
jae
cmp
test
test
retf
test
cmps
cwde
push
lds
add
xor
xchg
and
add
ins
xor
leave
aas
adc
popa
jmp
adc
or
fcomp
mov
xor
xor
jl
adc
mov
cmps
int3
rol
mov
add
retf
or
lods
jb
add
sbb
cwde
inc
(bad)
shl
aas
es
pusha
or
movs
add
ins
mov
xchg
imul
and
mov
loope
inc
xchg
or
inc
or
imul
jmp
or
sar
out
aas
push
je
or
sub
test
push
sub
or
add
mov
sbb
xor
sbb
push
mov
inc
lods
repnz
(bad)
add
shr
jmp
push
add
push
pop
adc
int3
sbb
push
xor
dec
mov
iret
add
and
inc
cmp
jmp
push
call
push
sar
rcl
repz
hlt
and
add
int3
rol
add
in
add
cwde
xor
mov
bswap
aam
add
add
add
xor
leave
aas
dec
pop
and
das
pop
cmp
nop
adc
fidiv
je
add
repz
push
test
and
rcl
(bad)
leave
and
sbb
enter
push
xlat
fdiv
(bad)
cmp
inc
mov
inc
enter
xchg
lea
es
add
xor
mov
pop
repz
add
aas
mov
repz
ret
das
imul
nop
rol
and
push
jmp
int3
sti
dec
lahf
dec
push
test
cmp
ret
jmp
int
inc
adc
sbb
sub
or
lock
push
add
lods
jae
in
scas
add
je
cmp
mov
addr16
aad
add
(bad)
sti
loopne
or
pusha
mov
push
push
loope
pop
mov
ret
je
pusha
loopne
sahf
popa
xchg
push
lods
pop
add
jmp
mov
or
mov
inc
jge
sbb
add
and
mov
push
rol
inc
or
add
sbb
xor
(bad)
adc
cmp
mov
mov
sbb
push
or
and
mov
inc
add
pop
icebp
(bad)
aaa
cmps
xchg
and
and
push
repnz
jg
loope
jbe
inc
sbb
mov
or
and
pop
add
cmp
pop
push
movs
movs
inc
in
mov
pop
icebp
mov
lock
nop
and
adc
lea
and
leave
rcl
inc
or
pusha
dec
and
push
test
inc
aam
add
pushf
rcr
xor
add
pusha
enter
call
add
inc
cdq
pop
jno
xor
sub
adc
xor
pop
ins
movs
pop
push
and
push
enter
js
test
add
add
ret
call
xchg
jge
movs
push
xor
xchg
xchg
loop
pop
loopne
or
cmp
add
push
mov
dec
lahf
inc
pop
nop
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
in
rol
in
mov
in
(bad)
sub
mov
inc
adc
out
inc
push
scas
loopne
add
pop
ins
pop
cmp
add
sub
or
lock
lahf
mov
fsub
mov
bound
call
pop
push
push
adc
popa
aaa
jle
fsub
or
int3
loopne
xchg
ror
movs
add
rol
add
mov
repz
cmp
push
outs
scas
pop
js
mov
inc
mov
adc
and
mov
or
in
pusha
fdivr
rol
mov
movs
sti
xlat
mov
xor
shl
push
lahf
ds
xor
in
sub
sbb
test
cli
jae
xchg
sbb
pop
jmp
dec
mov
inc
push
std
sub
scas
dec
xchg
jnp
test
aas
mov
jb
mov
sub
xlat
xchg
dec
mov
dec
out
test
push
mov
sub
pop
jae
sub
xor
call
mov
psubusb
xchg
pop
and
test
pop
and
mov
(bad)
adc
stc
inc
and
and
inc
jbe
data16
mov
jo
dec
or
popa
(bad)
jne
or
add
and
test
loop
data16
add
das
out
rol
out
mov
test
cdq
xor
push
add
std
mov
mov
movs
and
push
inc
pop
sbb
mov
dec
ror
xor
sbb
mov
push
mov
lds
mov
dec
cmp
add
mov
and
sbb
sbb
ret
sbb
aad
retf
es
mov
cli
test
cmps
mov
xor
jle
add
inc
and
arpl
(bad)
pop
mov
add
call
retf
stos
ror
je
and
pop
push
pushf
sub
inc
or
(bad)
sbb
push
ror
cmp
ret
cmp
rol
push
and
sbb
add
add
mov
push
(bad)
xor
add
sbb
dec
and
test
in
fiadd
inc
or
mov
shl
or
add
cwde
pusha
or
jmp
js
and
cdq
nop
or
lods
jnp
ret
sbb
retf
cld
cmpps
mov
or
and
push
or
xor
and
adc
lods
jb
inc
inc
mov
ror
mov
mov
jno
into
dec
cld
inc
mov
push
call
(bad)
mov
pusha
xchg
cmp
or
pop
imul
pop
pusha
mov
cld
xchg
add
pop
retf
adc
fnstsw
loopne
inc
fiadd
dec
shl
push
add
adc
mov
ror
into
xchg
ins
push
ds
fnstsw
sbb
sbb
hlt
dec
and
adc
out
std
dec
in
das
loopne
add
aam
shl
cmp
add
inc
push
inc
mov
jecxz
das
jo
jmp
sbb
cld
add
xor
mov
xchg
pop
xor
in
or
mov
sbb
or
mov
jecxz
hlt
ds
int3
xor
cld
xchg
leave
and
cld
ret
xor
retf
fadd
icebp
aas
sbb
or
ret
aas
xchg
cmp
mov
loope
out
inc
repz
mov
xor
add
inc
and
mov
adc
or
cmp
test
inc
push
or
adc
pop
(bad)
jo
ss
jecxz
push
adc
xor
cwde
jecxz
mul
sti
inc
cmp
out
rcl
adc
out
jmp
es
mov
loop
mov
push
or
push
unpckhps
adc
cwde
(bad)
std
or
or
cmp
and
clc
(bad)
adc
push
sbb
mov
mov
std
sbb
push
ror
jbe
arpl
fadd
inc
jnp
and
cdq
xor
imul
inc
cmp
and
rol
mov
pop
lea
sub
xchg
xlat
and
enter
sbb
mov
and
ret
jno
movs
adc
(bad)
in
lods
jb
ins
xchg
add
cmp
ret
aas
add
xor
add
xchg
push
sub
add
mov
add
adc
aas
push
mov
adc
sub
inc
inc
lock
fadd
xor
inc
inc
push
loopne
das
inc
and
xchg
add
out
pusha
pop
sub
data16
jo
and
adc
and
sub
sbb
ret
xor
dec
ds
add
loopne
pop
or
inc
clc
repnz
sbb
rol
enter
or
test
pop
lock
dec
mov
lahf
(bad)
in
call
cmp
popf
test
pusha
xchg
mov
adc
push
and
mov
push
inc
or
adc
cmp
sbb
inc
sub
lahf
push
aad
jo
add
add
or
or
push
stos
dec
aad
dec
and
mov
push
enter
pop
inc
or
or
push
inc
mov
data16
adc
clc
and
sbb
or
xor
cwde
xor
and
add
sbb
call
adc
ror
lea
test
xor
aas
out
adc
(bad)
aad
xor
mov
(bad)
xor
jg
mov
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
addr16
xchg
and
hlt
mov
mov
jecxz
dec
fdivr
mov
adc
cmp
push
or
adc
add
push
sbb
je
rcr
jg
add
sbb
mov
pushf
push
adc
push
movs
add
sub
clc
lea
add
xchg
cmp
aas
pop
add
dec
push
sub
rcl
sbb
inc
int3
inc
lock
ret
push
sbb
add
lahf
pop
mov
rol
mov
pop
fptan
loope
adc
sbb
mov
mov
popa
shl
sub
mov
imul
jne
or
inc
xchg
sbb
mov
adc
inc
adc
and
and
xor
xchg
inc
mov
mov
mov
mov
(bad)
(bad)
pop
lds
add
call
inc
dec
sbb
loope
or
inc
(bad)
lock
mov
data16
mov
and
pop
cmp
lock
mov
jmp
inc
xor
add
push
call
loopne
cmp
std
sbb
rol
add
xchg
push
add
ror
pop
pushf
nop
ror
call
push
or
sub
rol
cmp
cdq
and
or
xor
sbb
paddw
push
add
adc
cmp
clc
and
inc
add
xchg
mov
push
add
adc
mov
rol
loope
into
cmp
out
xchg
movs
pusha
add
or
dec
add
inc
pop
pushf
jecxz
xor
bound
aaa
cwde
push
loopne
cmps
adc
and
popf
mov
add
sbb
xchg
shl
pop
outs
ins
call
add
sub
add
mov
or
sub
mov
adc
mov
repnz
add
xchg
test
jne
and
sub
cwde
inc
add
fidiv
mov
sub
(bad)
or
add
add
je
dec
pop
bound
mov
and
add
dec
mov
xchg
cmp
nop
add
add
inc
jnp
xor
icebp
mov
add
sbb
adc
aas
mov
add
or
(bad)
sbb
ss
xrstors
push
mov
sub
xor
inc
adc
inc
mov
add
lock
cmovle
sub
or
mov
pop
add
mov
or
cmp
rol
addr16
mov
push
xor
mov
mov
int3
xor
push
shl
jmp
call
mov
sti
mov
fnstcw
loopne
icebp
iret
(bad)
mov
sbb
add
call
cld
jae
and
sub
rol
rcl
out
inc
inc
add
rcr
xor
xlat
pop
add
int3
in
jmp
pusha
iret
xor
inc
pusha
sbb
mov
fdiv
unpcklps
add
add
add
mov
inc
mov
mov
popf
std
mov
add
leave
jecxz
nop
and
in
popa
dec
add
push
inc
lock
adc
or
pop
add
push
adc
push
xor
or
add
sahf
push
add
add
js
inc
dec
mov
add
int
adc
xchg
xor
jbe
int3
fstp
shl
cmp
loop
cmp
pop
pop
push
cmp
cmp
or
fs
adc
and
lods
and
in
add
iret
push
sub
mov
or
adc
test
pop
push
add
dec
push
ret
rol
popa
add
or
cmp
loope
cdq
call
fwait
pop
sbb
inc
adc
xchg
inc
add
add
adc
arpl
and
lock
or
ror
inc
or
add
ret
aas
jbe
inc
dec
pop
mov
lods
rol
and
popa
or
push
cli
icebp
cmovnp
add
fs
pop
mov
add
mov
sbb
rol
ret
ret
jmp
ret
xchg
lea
add
push
repnz
jne
add
mov
int
mov
mov
lds
inc
cdq
mov
sub
or
add
popa
xor
xchg
xchg
jl
xor
loopne
adc
sub
jae
push
add
sbb
sub
jg
rol
or
loop
lar
ror
loopne
push
or
sbb
and
sbb
mov
adc
xor
push
test
add
cs
sbb
mov
sbb
mov
adc
icebp
mov
pop
stc
sar
cli
(bad)
ins
loopne
and
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
inc
adc
ffreep
xchg
and
aam
xor
pop
sub
bound
add
imul
add
data16
addr16
pushf
adc
or
shl
pusha
mov
shl
retf
mov
pop
mov
pop
add
retf
sbb
ret
or
mov
add
int
push
in
cs
ds
mov
jp
push
cli
dec
xor
pop
pop
outs
retf
inc
jecxz
add
jmp
in
enter
(bad)
dec
inc
int3
movs
mul
mov
pop
cmp
fs
aas
adc
inc
add
pop
and
mov
xlat
pop
(bad)
std
fidiv
xlat
jg
sbb
movs
add
cmc
and
or
gs
fcom
inc
leave
outs
xor
data16
inc
mov
push
mov
enter
sti
jb
push
sbb
sbb
pop
cld
scas
xchg
ins
jge
test
retf
xchg
adc
repnz
xor
xchg
mov
mov
jno
xor
or
test
sub
cmp
mov
inc
js
push
or
cmp
pop
das
out
add
cmp
(bad)
and
inc
jae
mov
push
xor
rol
sbb
cs
or
sub
jo
sbb
pop
fldenv
jae
rcl
pop
add
ror
dec
les
add
lahf
movs
test
rol
inc
sub
(bad)
pop
test
push
rol
pop
mov
dec
dec
sbb
mov
or
pop
fs
fs
inc
ja
mov
nop
pop
pop
aad
fs
cmp
rcl
mov
mov
popf
mov
xchg
in
jo
inc
pop
je
or
adc
inc
pop
int
push
ss
or
pop
cmc
jmp
sbb
xchg
enter
ret
or
dec
cmp
int3
sbb
cmp
lds
push
shr
adc
loopne
aas
sub
loopne
fild
mov
or
mov
popa
add
cld
jae
sbb
pop
scas
inc
in
adc
mov
adc
into
jo
inc
dec
cmp
mov
jmp
jbe
scas
inc
push
cld
push
icebp
aas
jnp
dec
jno
adc
popf
mov
sbb
icebp
inc
jnp
sub
retf
xor
hlt
mov
push
pop
inc
add
inc
inc
push
add
les
inc
or
inc
(bad)
pushf
jno
push
or
pop
test
dec
pop
popf
adc
inc
sti
inc
adc
push
sbb
icebp
inc
out
and
lea
inc
nop
sbb
push
xlat
jmp
mul
add
scas
jmp
add
test
fadd
int
add
nop
aaa
mov
inc
inc
les
aas
jmp
call
sub
(bad)
or
lock
cmp
movaps
fpatan
unpcklps
aam
jp
xor
adc
enter
dec
xor
arpl
adc
lods
mov
xor
bnd
aam
aas
mov
loopne
sbb
bound
xchg
cmp
xlat
sub
inc
shl
rdmsr
js
ins
mov
adc
add
outs
inc
retf
iret
and
push
sar
sub
inc
lods
nop
mov
add
out
sbb
daa
mov
push
cwde
test
retf
and
inc
popf
cmp
push
ret
sbb
ins
mov
sub
inc
add
cmp
adc
jo
jne
cmp
push
xor
jnp
jo
cdq
mov
ffree
xchg
xor
adc
xor
xor
js
sub
xor
sub
pop
xor
or
inc
test
jmp
loopne
pop
clc
(bad)
jp
mov
and
rcl
or
inc
adc
mov
add
mov
and
push
cmp
adc
add
rcl
add
or
inc
ret
inc
mov
repnz
adc
and
add
sahf
rol
mov
inc
(bad)
(bad)
fsub
add
fs
xor
adc
nop
mov
xchg
mov
add
adc
push
nop
pusha
sub
and
add
xchg
inc
add
mov
inc
ss
adc
adc
sbb
or
icebp
nop
leave
jg
rcl
push
xor
lds
rol
and
add
mov
jno
test
sub
call
xor
cmp
pushf
add
cmps
cmp
(bad)
enter
adc
shl
add
clc
test
push
call
cmp
mov
pop
push
(bad)
add
mov
add
push
add
jo
add
inc
or
mov
add
adc
test
gs
mov
loope
xor
loopne
push
test
cmps
popa
dec
xchg
and
or
cld
or
push
nop
or
and
imul
cli
loope
jae
imul
inc
stos
(bad)
cmp
or
add
and
add
or
inc
sub
add
add
or
add
or
mov
inc
cmp
out
(bad)
adc
push
sbb
adc
imul
out
push
xchg
mov
imul
repz
dec
fcom
jb
mov
sub
(bad)
mov
push
mov
sub
push
pop
adc
ud0
enter
test
xchg
lock
unpckhps
jns
retf
int3
fdivr
or
and
xchg
mov
jbe
cmps
shl
jns
icebp
and
dec
js
pop
shl
ret
push
and
add
and
movs
inc
(bad)
cli
mov
cli
pop
push
sbb
pop
leave
add
xor
pop
sahf
push
mov
sub
jmp
daa
(bad)
rol
scas
(bad)
cmps
in
daa
cdq
adc
xchg
nop
or
jecxz
sub
cmp
add
call
adc
mov
ds
std
jnp
adc
inc
mov
ret
dec
adc
pcmpeqw
adc
xchg
and
cmp
inc
add
and
adc
pushf
xor
xchg
cmp
shl
nop
cs
push
ret
sub
retf
push
pop
mov
outs
icebp
shl
je
xchg
pushf
loopne
inc
cmp
push
(bad)
aas
xchg
sbb
push
add
sub
push
pop
xor
xchg
dec
ss
xor
movs
loop
ss
sbb
inc
or
xor
aas
add
xchg
cmp
adc
rol
dec
icebp
clc
bndldx
and
xchg
add
sbb
pusha
(bad)
jae
cmp
test
test
retf
test
cmps
cwde
push
lds
add
xor
xchg
and
add
ins
xor
leave
aas
adc
popa
jmp
adc
or
fcomp
mov
xor
xor
jl
adc
mov
cmps
int3
rol
mov
add
retf
or
lods
jb
add
sbb
cwde
inc
(bad)
shl
aas
es
pusha
or
movs
add
ins
mov
xchg
imul
and
mov
loope
inc
xchg
or
inc
or
imul
jmp
or
sar
out
aas
push
je
or
sub
test
push
sub
or
add
mov
sbb
xor
sbb
push
mov
inc
lods
repnz
(bad)
add
shr
jmp
push
add
push
pop
adc
int3
sbb
push
xor
dec
mov
iret
add
and
inc
cmp
jmp
push
call
push
sar
rcl
repz
hlt
and
add
int3
rol
add
in
add
cwde
xor
mov
bswap
aam
add
add
add
xor
leave
aas
dec
pop
and
das
pop
cmp
nop
adc
fidiv
je
add
repz
push
test
and
rcl
(bad)
leave
and
sbb
enter
push
xlat
fdiv
(bad)
cmp
inc
mov
inc
enter
xchg
lea
es
add
xor
mov
pop
repz
add
aas
mov
repz
ret
das
imul
nop
rol
and
push
jmp
int3
sti
dec
lahf
dec
push
test
cmp
ret
jmp
int
inc
adc
sbb
sub
or
lock
push
add
lods
jae
in
scas
add
je
cmp
mov
addr16
aad
add
(bad)
sti
loopne
or
pusha
mov
push
push
loope
pop
mov
ret
je
pusha
loopne
sahf
popa
xchg
push
lods
pop
add
jmp
mov
or
mov
inc
jge
sbb
add
and
mov
push
rol
inc
or
add
sbb
xor
(bad)
adc
cmp
mov
mov
sbb
push
or
and
mov
inc
add
pop
icebp
(bad)
aaa
cmps
xchg
and
and
push
repnz
jg
loope
jbe
inc
sbb
mov
or
and
pop
add
cmp
pop
push
movs
movs
inc
in
mov
pop
icebp
mov
lock
nop
and
adc
lea
and
leave
rcl
inc
or
pusha
dec
and
push
test
inc
aam
add
pushf
rcr
xor
add
pusha
enter
call
add
inc
cdq
pop
jno
xor
sub
adc
xor
pop
ins
movs
pop
push
and
push
enter
js
test
add
add
ret
call
xchg
jge
movs
push
xor
xchg
xchg
loop
pop
loopne
or
cmp
add
push
mov
dec
lahf
inc
pop
nop
add
cmp
adc
add
rol
rol
or
lgdtd
or
add
add
add
popa
xor
sbb
add
add
or
add
add
or
add
inc
cmp
popa
cmp
cmp
out
add
add
add
add
add
add
rol
rcr
cmps
retf
lock
loop
call
mov
(bad)
imul
dec
jmp
fcom
xchg
bound
jae
add
add
jecxz
inc
mov
stos
mov
(bad)
imul
dec
call
call
fmul
mov
add
add
add
aam
push
jmp
dec
jmp
fadd
add
add
add
add
aam
push
jmp
dec
jmp
fadd
dec
mov
xor
and
aam
push
jmp
dec
jmp
fadd
xchg
mov
bound
dec
push
add
call
(bad)
push
jmp
dec
jmp
fadd
fdivr
xchg
jae
jae
add
aam
loop
call
mov
(bad)
imul
dec
jmp
call
mov
add
add
aam
(bad)
mov
stos
mov
(bad)
imul
dec
call
call
dec
fdivr
xchg
and
push
aam
push
jmp
dec
jmp
inc
add
add
mov
add
add
jecxz
mov
dec
dec
jmp
inc
dec
fadd
cmp
add
aam
push
jmp
dec
jmp
inc
xchg
fadd
jp
add
add
add
push
aam
push
jmp
dec
jmp
inc
(bad)
add
add
add
aam
lock
loop
call
imul
dec
(bad)
mov
jmp
mov
add
add
aam
jecxz
inc
mov
stos
imul
dec
push
call
call
fmul
mov
add
add
aam
aam
push
jmp
dec
jmp
fadd
add
add
add
jecxz
aam
push
jmp
dec
jmp
fadd
cmp
add
add
call
loop
mov
dec
dec
jmp
fadd
jp
add
add
add
push
add
call
(bad)
push
jmp
dec
jmp
fadd
mov
add
add
add
repnz
out
fcmovu
into
into
into
ret
mov
mov
stos
stos
sahf
sahf
sahf
xchg
xchg
xchg
xchg
outs
outs
outs
bound
push
push
push
dec
dec
dec
ds
xor
es
sbb
push
push
(bad)
sti
lock
cmp
add
inc
(bad)
inc
add
(bad)
inc
inc
(bad)
(bad)
(bad)
(bad)
jmp
stc
add
add
inc
sub
add
add
cmp
add
inc
dec
sbb
mov
inc
and
mov
ret
xchg
dec
push
pop
mov
xor
fcom
popf
inc
mov
cmp
cmp
dec
scas
movs
inc
xchg
sub
cmp
xchg
fld
xor
sbb
cmp
jp
clc
xchg
mov
push
adc
pop
mov
dec
mov
mov
in
mov
lds
dec
mov
inc
(bad)
arpl
push
cmp
mov
dec
push
sub
add
inc
inc
test
mov
pop
xchg
mov
repnz
push
xor
mov
fwait
out
adc
dec
cwde
xor
sbb
test
and
and
pop
retf
out
or
add
mov
popf
jl
sub
scas
inc
pop
jle
shl
movs
jae
cmp
loopne
and
ja
xor
(bad)
push
jp
shl
(bad)
ins
sar
rol
pop
mov
neg
adc
pushf
ret
cdq
xor
add
ficomp
xor
inc
lods
ret
frstor
push
inc
add
add
mov
cmp
dec
dec
jecxz
mov
add
in
mov
jae
add
je
cwde
popa
mov
mov
adc
je
push
ror
and
inc
fadd
es
inc
inc
cmp
push
xor
jp
mov
popa
xor
or
and
es
cmps
pop
inc
and
out
add
pushf
jecxz
mov
je
(bad)
cmp
add
dec
add
sahf
add
aad
in
or
in
(bad)
xchg
inc
jmp
loopne
sahf
ins
sub
pop
xchg
cmp
jbe
inc
push
mov
std
arpl
add
push
dec
mov
xchg
pop
call
fnstenv
je
push
add
test
stc
out
adc
test
data16
xchg
jmp
aaa
adc
ficomp
rol
mov
mov
scas
stos
sbb
ds
add
and
jae
(bad)
cmp
mov
mov
sub
sbb
dec
add
and
rol
popa
or
leave
inc
sub
cmp
fmul
fs
mov
aaa
adc
sub
pusha
cmp
lods
arpl
cmps
or
rol
xor
push
or
nop
inc
add
mov
jae
rol
retf
lods
mov
cmp
mov
sub
or
xchg
adc
xor
pusha
inc
or
lock
fst
xchg
lea
jl
dec
pop
in
or
das
mov
das
add
jo
add
cmp
push
mov
and
xor
fwait
sub
mov
cmp
sub
repnz
les
loop
jo
into
es
mov
or
test
mov
fdiv
rol
fs
mov
cmp
sub
adc
popf
add
in
movs
push
ret
(bad)
pop
arpl
xchg
call
inc
ins
inc
jne
sahf
shl
(bad)
dec
add
sub
in
pop
into
mov
sbb
cmp
mov
mov
mov
jge
js
int
xor
pop
sti
or
aas
loopne
xor
cmp
pushf
push
fld
fdiv
out
inc
ins
pop
aam
shr
or
int
(bad)
sbb
ror
imul
pop
add
in
bound
dec
repnz
xor
push
adc
cmp
xchg
mov
jecxz
aam
xchg
je
aas
cld
pop
outs
jg
mov
or
fsub
(bad)
cmp
and
add
add
inc
dec
cwde
jmp
aas
cld
pop
outs
push
jnp
inc
or
mov
and
pop
aam
jb
xor
adc
fs
sub
cmp
nop
jb
push
add
nop
pop
(bad)
push
ret
pushf
(bad)
mov
lea
mov
stc
or
and
xor
add
scas
push
xchg
stos
pop
fidiv
jecxz
loopne
faddp
arpl
mov
arpl
aam
and
iret
push
jge
cmp
aaa
mov
jo
xor
add
xor
sbb
push
jecxz
ins
dec
sahf
or
dec
inc
pop
movs
pusha
cmp
icebp
rol
arpl
es
inc
adc
pop
inc
retf
jmp
arpl
inc
sar
in
repz
sbb
ror
repnz
out
shl
pop
fwait
or
dec
test
and
sub
fldenv
shl
and
or
ss
imul
into
push
mov
xchg
push
jae
jmp
js
jbe
and
ret
inc
xor
inc
adc
push
sbb
fwait
and
shl
push
addr16
stos
mov
pusha
retf
mov
call
push
(bad)
rol
fmul
mov
sbb
jne
xchg
mov
and
jp
jne
dec
and
push
pop
imul
ror
inc
in
jno
ror
and
fstp
and
dec
stos
pop
dec
mov
aam
cmps
sub
enter
pop
push
cli
lock
adc
or
cmp
inc
or
add
add
add
dec
add
push
add
add
popa
xor
sbb
add
add
adc
add
fcom
inc
cmp
popa
xor
xor
idiv
add
leave
lods
retf
(bad)
out
add
retf
or
repnz
stc
(bad)
cld
add
cmc
add
cmc
imul
or
jmp
xchg
mov
pop
xor
xchg
(bad)
(bad)
stc
add
imul
(bad)
call
ficomp
mov
add
loop
xlat
cdq
pop
out
or
clc
mov
sti
test
fld
fld
(bad)
out
call
dec
mov
inc
add
fld
(bad)
cld
mov
rol
jne
out
push
int
and
(bad)
cmp
jmp
loope
(bad)
add
(bad)
pop
std
enter
add
lds
std
out
gs
call
cwde
pushf
mov
sar
pop
adc
cli
dec
(bad)
inc
ins
addr16
sar
std
lock
add
mov
push
sub
fwait
imul
cmps
push
(bad)
rol
(bad)
jmp
cli
into
sbb
or
loop
(bad)
std
pop
(bad)
mov
hlt
repnz
stos
sub
pop
add
or
out
ret
cmps
cmp
add
push
push
add
std
xlat
std
mov
je
sbb
lods
add
mov
(bad)
in
aaa
cli
mov
push
dec
or
cmc
or
jmp
sahf
pop
add
stos
jae
stos
xchg
push
sti
mov
sti
mov
stc
test
lods
test
in
aad
sahf
ins
cli
mov
lock
jmp
cwde
xor
push
out
mov
ret
xchg
adc
(bad)
adc
retf
sub
ret
add
in
pop
int3
test
mov
sub
enter
cld
ror
mov
sar
rcr
jmp
add
jle
(bad)
cli
push
mov
sbb
lock
mov
ss
stos
add
cmc
hlt
repz
(bad)
mov
push
add
fisttp
aam
mov
std
(bad)
or
pop
add
add
sti
rol
rol
push
nop
add
les
xrstor
std
out
adc
pop
push
(bad)
fmul
(bad)
out
mov
mov
call
pushf
push
add
popf
add
sar
stc
lds
ret
(bad)
fild
icebp
mov
cmps
(bad)
push
(bad)
lods
or
adc
stc
fld
stc
div
(bad)
scas
add
mov
mov
add
pop
pop
sti
cmc
add
ret
add
mov
shl
cli
repz
fild
clc
mov
sti
retf
fnsave
clc
stc
cli
rol
nop
pop
and
and
mov
lock
repz
or
mov
mul
mov
add
retf
in
or
fcomp
mov
lock
dec
push
cld
ret
add
mov
loopne
loope
scas
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
inc
sub
add
add
add
add
or
add
or
mov
cmps
cmp
mov
mov
fwait
call
cmp
xor
dec
push
xchg
adc
fstp
push
ret
leave
add
mov
mov
imul
adc
lods
mov
ret
call
mov
xor
and
adc
push
dec
and
inc
cdq
sub
xor
adc
mov
xor
shr
push
sub
loope
pop
or
dec
test
cmp
sbb
sbb
fdiv
pop
xor
adc
jmp
push
sub
cwde
or
test
loop
pop
in
retf
loop
lock
mov
mov
in
adc
dec
sub
add
sbb
enter
push
mov
ins
xor
adc
sbb
mov
mov
cli
sbb
cld
xor
rcr
shr
inc
mov
mov
dec
jge
mov
sbb
arpl
shl
add
cdq
sub
daa
int
pop
bound
mov
test
cmp
dec
rol
dec
push
mov
xchg
sub
and
xor
cmc
xchg
xchg
sbb
push
ret
or
dec
xchg
or
mov
or
fs
dec
inc
and
adc
sub
mov
(bad)
rol
and
int
xor
das
cmp
and
rcl
mov
lea
adc
and
add
mov
inc
daa
push
sbb
loop
sbb
sub
lea
sbb
xchg
pop
push
ficomp
add
pop
push
pop
jo
or
add
add
or
push
sbb
dec
(bad)
add
hlt
rol
add
neg
test
loopne
dec
nop
outs
mov
inc
add
adc
outs
adc
pusha
mov
inc
movs
adc
ror
cmps
sbb
inc
aaa
cmp
inc
jmp
add
and
and
pusha
xchg
adc
jge
or
adc
mov
xor
push
pop
test
(bad)
push
sub
fs
stos
aas
das
int3
add
dec
mov
push
jno
rol
xchg
bound
aas
xchg
ins
arpl
xor
sbb
mov
add
nop
adc
or
rol
and
lods
xchg
bound
add
add
fisub
mov
pop
loopne
push
sbb
xchg
adc
add
add
add
pop
mov
cmp
and
jmp
les
cmp
lahf
adc
mov
shr
loope
pop
adc
mov
lock
or
ror
ss
jecxz
xchg
dec
and
(bad)
fidiv
jmp
or
sbb
in
or
pop
ins
or
or
out
adc
loopne
push
cs
into
jns
add
psllq
xchg
xor
adc
push
push
adc
pop
or
test
dec
fcomp
inc
(bad)
das
shl
xchg
popa
or
cmp
add
sbb
loope
xor
aam
xor
mov
add
loopne
pop
or
or
cwde
aaa
jmp
sbb
cmp
sub
adc
cmp
mov
inc
add
and
add
fsub
mov
imul
push
loope
pop
adc
push
cmp
shl
movs
add
add
pop
inc
arpl
cmps
add
xor
lea
dec
inc
jg
pop
sti
nop
test
jmp
add
xor
pop
nop
add
adc
adc
ret
and
push
lock
inc
sti
pop
push
cmp
add
mov
test
add
xchg
mov
dec
icebp
ja
nop
inc
or
or
lock
or
and
or
push
rol
gs
or
shl
mov
push
pop
inc
sbb
enter
rol
lock
and
mov
add
adc
push
push
or
jb
adc
mov
adc
sub
inc
daa
sbb
or
cmp
jg
pusha
push
mov
adc
push
lods
sub
mov
loope
and
mov
sub
inc
cmp
add
lock
(bad)
xor
test
adc
cmp
pop
and
add
push
pushf
push
cmc
ss
add
or
popa
push
add
inc
inc
dec
rcr
nop
xor
rol
mov
rol
push
mov
cmc
add
adc
sub
xchg
or
call
inc
test
dec
and
test
fmul
pop
das
movs
loope
add
xchg
test
lea
inc
push
fbstp
sub
mov
or
dec
dec
xor
rcl
or
shl
not
mov
and
add
add
xchg
and
or
pop
xor
rol
arpl
jl
inc
sub
pop
and
xchg
jo
mov
jne
xchg
ret
loopne
add
inc
or
inc
xchg
punpcklwd
mov
dec
je
and
and
retf
mov
push
sbb
mov
add
shl
inc
sub
dec
and
call
and
mov
ror
popf
add
mov
mov
sbb
push
add
test
or
in
and
loopne
test
adc
sub
mov
xchg
add
jno
push
cwde
and
nop
and
or
enter
xor
lea
pusha
adc
ret
sbb
bound
cmp
stc
add
loopne
mov
rcl
and
or
xchg
push
mov
inc
or
mov
or
add
jo
aad
cmp
cmp
add
jg
add
mov
xor
and
loopne
pop
cmp
pop
adc
test
add
and
hlt
add
test
adc
(bad)
(bad)
(bad)
or
inc
das
cld
inc
add
add
mov
pop
cdq
adc
and
mov
push
js
mov
test
dec
add
mov
push
data16
test
cmps
mov
(bad)
xor
or
xchg
mov
jb
push
add
rol
adc
sub
inc
xchg
bound
rcr
add
push
xor
cmp
aad
add
push
std
call
xchg
add
imul
loope
sbb
cmps
push
cdq
pusha
sub
or
inc
sbb
inc
add
loopne
or
(bad)
(bad)
sbb
dec
mov
add
cwde
inc
add
mov
add
in
shl
enter
or
inc
loopne
out
test
xor
jl
adc
mov
rcr
add
and
add
add
inc
sub
add
add
add
add
or
add
or
nop
mov
std
call
ja
mov
lea
test
jnp
mov
(bad)
mov
xor
adc
sbb
sbb
dec
inc
sbb
jl
fst
lahf
shl
retf
and
sbb
push
imul
sbb
add
mov
ins
dec
icebp
mov
bound
xchg
or
pusha
clc
xor
adc
mov
sub
mov
pop
add
cmp
or
push
and
test
sub
mov
dec
ins
shl
pusha
clc
repnz
cdq
inc
inc
and
adc
pop
addr16
js
pop
dec
xchg
daa
and
push
sub
data16
fdiv
inc
mov
add
pop
add
rcr
add
xchg
dec
xchg
sbb
call
test
push
adc
sar
add
add
pop
pusha
mov
gs
inc
xor
xchg
cmps
inc
push
inc
gs
sahf
adc
push
cwde
repz
call
adc
cld
ins
mov
aad
or
xchg
and
add
mov
and
mov
adc
pop
jne
inc
or
lock
sar
xchg
clc
pop
and
out
outs
jno
icebp
les
scas
ins
loop
add
sub
add
dec
loop
pop
or
mov
push
fnstsw
(bad)
adc
mov
inc
pop
shl
inc
add
push
or
aas
std
hlt
xor
add
call
adc
adc
jns
xor
or
or
add
mov
rol
gs
and
add
sub
inc
jbe
cmp
adc
rol
and
retf
add
movs
add
shl
cmp
lahf
test
mov
int3
pop
test
add
outs
add
jmp
mov
jbe
aam
sbb
nop
add
cmp
inc
in
loope
push
call
mov
inc
inc
push
lods
and
sbb
xor
aas
jns
xor
xchg
inc
rol
push
sbb
imul
add
adc
ror
adc
add
push
mov
inc
nop
and
dec
ror
or
push
and
add
xchg
or
dec
sbb
inc
jmp
push
(bad)
js
int3
aas
add
jae
sub
push
or
mov
in
rcl
mov
adc
cwde
lahf
hlt
adc
pop
sub
xor
int3
adc
ins
push
(bad)
or
mov
xchg
lea
and
cld
xchg
scas
inc
pop
in
mov
pop
and
jecxz
add
jae
adc
jns
inc
ret
int3
inc
shl
or
fsub
push
aas
daa
adc
xchg
add
mov
xor
adc
pushf
push
rcl
add
inc
or
and
xlat
imul
add
push
daa
sub
rol
je
out
mov
add
cmps
or
add
adc
ror
rol
sub
(bad)
ret
xor
int3
and
pop
cmps
dec
mov
inc
mov
cmc
repnz
adc
aas
push
or
sar
int3
and
retf
aas
jb
xchg
rol
in
cmp
test
sbb
fld
and
sbb
add
les
icebp
mov
repnz
aaa
sbb
and
test
aas
or
or
jmp
mov
xchg
iret
adc
test
inc
add
pop
and
fs
cs
jbe
imul
icebp
(bad)
pop
dec
and
cwde
add
inc
inc
and
xchg
inc
sar
sbb
jo
dec
xchg
pop
(bad)
sbb
jg
mov
popa
cmp
pop
je
inc
enter
pop
hlt
mov
adc
inc
mov
cmp
jg
add
sub
xor
(bad)
sub
sbb
cmp
jno
push
xor
sbb
jle
and
xor
adc
push
mov
mov
dec
push
arpl
lahf
sbb
lock
push
dec
jp
or
adc
mov
dec
and
pop
push
inc
push
push
hlt
loop
ss
xchg
push
sub
pop
pop
sub
sub
popa
adc
call
dec
rol
push
add
push
push
das
pop
mov
and
and
inc
pop
or
repnz
movs
in
pop
and
adc
inc
sub
push
inc
ds
cmp
add
setae
add
inc
into
rol
enter
inc
or
inc
call
or
je
xchg
(bad)
enter
popa
sbb
bound
add
stc
add
add
inc
sub
add
add
add
add
or
add
or
nop
mov
inc
icebp
addr16
push
xchg
xchg
aaa
xor
ds
repnz
sub
mov
inc
jg
xor
fdiv
jecxz
adc
sub
push
repnz
pushf
pop
nop
pushf
inc
and
jmp
pushf
push
xchg
inc
clc
sub
packuswb
jg
push
fs
sbb
push
inc
or
cmps
dec
xchg
cmp
daa
push
jmp
xor
shr
push
sub
loope
pop
or
dec
test
cmp
sbb
sbb
fnsave
pop
rcr
sub
mov
add
movs
cwde
or
test
out
pop
adc
xchg
popf
fist
test
xchg
test
mov
push
and
dec
jo
mov
xor
adc
xchg
daa
adc
push
adc
arpl
into
add
(bad)
test
mov
jmp
mov
push
adc
add
add
jmp
xchg
xchg
mov
jo
cdq
adc
movs
mov
or
rol
ins
add
cwde
mov
ret
js
adc
loope
repnz
sbb
cmp
inc
sbb
imul
or
add
jmp
dec
xor
out
outs
mov
xor
jne
xchg
add
push
sub
xchg
add
sub
adc
fdivr
cdq
and
dec
pop
cmp
leave
or
add
jo
add
xchg
cmp
jnp
inc
cmp
adc
in
(bad)
sbb
bound
lds
mov
bound
cld
jae
add
adc
sbb
jmp
nop
mov
add
or
sub
cwde
adc
mov
mov
sub
stos
xlat
add
jmp
pop
cmp
adc
inc
push
(bad)
adc
or
cdq
outs
lods
mov
mov
fld
cmp
and
add
or
int3
sub
lock
inc
add
adc
push
mov
adc
add
lsl
enter
jb
inc
push
pop
mov
jle
push
or
adc
mov
test
and
sbb
loopne
mov
mov
nop
add
and
add
push
cmp
adc
push
and
add
in
ror
cmove
sub
in
xchg
adc
push
add
sbb
add
pop
mov
cmp
and
syscall
add
adc
adc
test
push
adc
pusha
cmp
inc
add
ins
stc
dec
add
lds
adc
or
repnz
cld
call
cs
dec
and
adc
inc
fsubr
and
mov
inc
jge
inc
rcl
mov
or
and
arpl
add
unpckhps
push
hlt
repz
inc
movs
fisub
mov
adc
or
iret
sbb
popf
inc
nop
xor
sub
cmp
inc
clc
setl
xor
pusha
push
das
push
add
rcl
mov
inc
mov
test
add
shl
xor
fnsave
shr
add
dec
adc
dec
dec
push
enter
pop
push
mov
jo
sbb
push
clc
and
das
mov
fadd
or
xchg
push
cmps
and
push
mov
or
or
lock
and
adc
nop
adc
push
xor
xor
pusha
add
shl
inc
adc
test
ja
inc
pop
jmp
or
push
mov
adc
adc
add
lock
xor
add
inc
mov
cmp
inc
or
and
bound
and
xor
xor
test
inc
outs
xor
loope
xor
mov
or
movs
and
clc
add
and
sub
and
add
or
or
jno
mov
loopne
push
sub
add
inc
mov
cwde
or
sub
xor
adc
mov
adc
imul
sbb
inc
pop
jbe
add
leave
pop
add
out
cmp
add
les
jo
dec
ret
add
inc
dec
push
ror
push
sub
cmps
or
sub
and
xchg
hlt
loop
popf
fs
or
or
ins
mov
inc
ret
add
or
addr16
sbb
sbb
adc
cmp
mov
lock
loopne
pop
push
test
ret
cmp
rdpmc
cmp
push
pop
xor
mov
xchg
add
cmp
jo
add
rol
rol
or
lgdtd
sbb
add
add
add
popa
xor
sbb
add
add
sbb
add
add
sbb
add
inc
cmp
popa
xor
xor
idiv
add
in
jo
(bad)
icebp
add
mov
dec
scas
(bad)
inc
mov
add
(bad)
ss
test
cmc
add
movs
jbe
ja
call
add
call
add
stc
add
ins
pop
(bad)
jmp
mov
add
retf
out
xlat
mov
push
ja
(bad)
adc
mov
jmp
pop
add
jmp
add
jns
std
rol
jg
(bad)
call
push
xchg
lods
add
add
(bad)
fadd
(bad)
fld
stc
add
(bad)
dec
(bad)
in
frstorw
loopne
cld
mov
(bad)
(bad)
sbb
lds
mov
add
push
stc
test
cli
mov
sahf
popa
add
mov
lods
jne
std
(bad)
cld
fcom
retf
repnz
(bad)
and
inc
call
pushf
push
(bad)
rol
jmp
cs
not
mov
(bad)
in
inc
(bad)
mov
xlat
int
(bad)
mov
(bad)
std
cmps
sub
paddd
stc
test
ins
sub
or
inc
std
xchg
or
dec
cmps
movs
push
push
or
lds
mov
(bad)
out
push
hlt
lods
add
mov
std
movs
or
lahf
data16
mov
std
xlat
jo
fiadd
out
(bad)
stos
ud0
or
sti
out
out
in
in
mov
std
int3
inc
mov
push
jmp
paddd
pop
(bad)
(bad)
mov
int
(bad)
lods
mov
pop
pop
cli
mov
out
add
scas
dec
nop
es
xlat
pop
(bad)
lods
add
repnz
jecxz
retf
xchg
adc
cmp
(bad)
rcl
fisttp
add
fld
mov
div
sahf
add
int
daa
in
inc
(bad)
fimul
cld
test
(bad)
in
xchg
pop
and
aaa
and
mov
std
ret
fnsave
mov
add
cmps
pop
into
stos
push
dec
add
rcl
js
lods
test
jnp
shr
(bad)
mov
inc
push
(bad)
jmp
jmp
ja
mov
xchg
pop
adc
lea
bnd
add
retf
add
mov
repnz
sti
add
add
rcr
mov
mov
sbb
push
sub
not
jecxz
push
stc
test
fild
push
fnstcw
and
ret
ja
std
mov
repz
cli
mov
(bad)
loopne
mov
add
call
das
jmp
cld
into
add
mov
sti
icebp
cs
and
adc
or
loope
cli
rol
mov
(bad)
movs
push
in
out
or
hlt
or
inc
out
retf
add
call
push
inc
mov
cmps
or
scas
or
rol
sbb
repz
call
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
(bad)
rcr
mov
push
mov
or
and
inc
or
pusha
test
mov
push
add
add
dec
or
or
es
aaa
pusha
call
push
sbb
cmp
push
and
or
and
mov
daa
sbb
mov
inc
adc
dec
push
push
ret
cmps
push
nop
inc
adc
pop
dec
xchg
into
fmulp
sub
jb
ret
xchg
add
nop
add
and
push
lods
test
jo
mov
add
push
or
xchg
out
sub
or
outs
sub
add
inc
xor
and
adc
and
and
jae
into
cmp
lds
dec
les
or
dec
pop
xchg
adc
add
popf
rol
fwait
sub
movs
test
loopne
ret
xor
(bad)
js
in
repz
sahf
lahf
hlt
int3
adc
loopne
shl
out
adc
push
mov
xchg
pop
inc
mov
jns
push
pusha
mov
fld
jmp
popa
popa
or
adc
rcr
adc
xor
adc
jp
push
xor
push
rcr
dec
cmc
jge
inc
cmp
mov
add
rol
pop
cmp
loop
push
sbb
fadd
lahf
pop
xor
cmc
fwait
and
loope
add
rcl
dec
rol
adc
adc
test
fs
es
adc
pop
cmp
inc
pusha
add
add
add
mov
loopne
push
push
adc
inc
nop
es
cmp
je
test
in
nop
mov
or
les
add
rcl
mov
daa
jae
sub
call
inc
jg
aaa
mov
loopne
jle
add
add
fimul
(bad)
or
inc
sbb
and
ret
mov
adc
rol
lds
aam
ror
and
jmp
adc
fiadd
mov
loop
dec
jmp
arpl
xor
adc
xor
ret
xor
and
dec
xor
or
inc
mov
push
adc
add
sbb
je
mov
out
ret
or
sar
retf
mov
test
or
dec
add
push
inc
inc
mov
add
or
push
push
cld
inc
mov
or
add
push
sbb
inc
sbb
or
and
or
movzx
loopne
ss
push
pop
loope
mov
test
push
xor
sbb
and
dec
loopne
adc
loopne
pop
mov
adc
push
das
jae
mov
faddp
pop
inc
jmp
adc
jbe
push
mov
and
adc
ins
jnp
ret
mov
ror
test
repz
ror
fadd
adc
loop
xor
sbb
sub
adc
xchg
aaa
icebp
shr
je
dec
sbb
sub
xchg
mov
mov
push
or
scas
loopne
dec
ss
pop
int3
jno
adc
scas
lock
pusha
mov
mov
ret
mov
sbb
test
jmp
pop
fisubr
add
fisubr
test
xchg
dec
xchg
sub
inc
ds
push
add
mov
adc
mov
leave
loop
push
dec
or
cmp
cwde
xor
jmp
add
fdiv
ins
jno
cmp
inc
test
add
add
and
shl
jl
jbe
test
sub
jo
pop
clc
ret
pusha
inc
fadd
mov
add
jp
sbb
je
sbb
inc
cmp
add
fadd
jns
mov
or
push
add
add
mov
pop
js
bound
inc
xchg
push
or
inc
enter
mov
dec
mov
std
test
nop
pop
pushf
mov
sub
mov
dec
and
dec
shl
xor
and
lods
push
rcl
add
jl
adc
dec
sub
jne
and
mov
dec
dec
pusha
loopne
int3
mov
dec
adc
jmp
adc
add
in
inc
sqrtps
cmps
movs
sub
rol
mov
shl
sub
test
loopne
inc
cwde
(bad)
xor
nop
add
sbb
dec
in
shl
aam
xchg
cmps
push
jb
jae
add
xor
inc
rol
movs
mov
push
call
ret
loope
adc
inc
inc
add
xchg
enter
adc
xor
jl
mov
push
jb
popf
or
push
jne
shr
test
clc
(bad)
aaa
adc
sbb
cmp
xor
arpl
sbb
push
(bad)
pop
fbld
push
or
inc
push
out
int3
mov
push
sbb
ror
sbb
rol
pop
mov
sbb
add
or
xor
or
inc
cmp
nop
inc
ss
cmp
movs
loopne
mov
xor
pop
mov
nop
xchg
sbb
add
ss
pop
lods
sub
(bad)
test
sbb
cli
inc
pop
dec
and
pusha
push
enter
or
push
or
or
dec
fs
or
jo
mov
add
add
mov
sub
pop
arpl
popa
jb
les
mul
rol
int
jae
inc
pop
cli
cmp
push
add
cs
adc
or
pusha
shl
test
fsubr
lds
adc
add
sbb
adc
pop
int3
sar
xor
or
add
das
jno
jae
pop
push
mov
adc
adc
jb
jno
sbb
popa
mov
and
add
or
inc
sub
add
add
or
add
or
mov
rol
add
or
scas
add
push
mov
push
dec
aaa
bound
pop
adc
jl
add
lahf
or
xor
sbb
pop
in
xchg
or
sbb
sub
adc
xor
mov
test
data16
test
sub
dec
inc
adc
push
pop
(bad)
es
pushf
pusha
jo
add
lock
aas
sbb
ja
lahf
xchg
pop
inc
dec
lds
inc
or
lods
pop
and
or
sti
xchg
xor
(bad)
cmp
inc
ret
sub
(bad)
gs
xor
ror
movs
popa
cmps
dec
add
xchg
cs
arpl
cmp
mov
add
fisttp
pushf
popa
mov
xchg
sbb
in
push
xchg
mov
mov
sbb
ret
push
arpl
in
xchg
push
call
jmp
dec
xbegin
jno
dec
shl
iret
adc
test
(bad)
into
retf
mov
daa
inc
cmps
or
dec
xor
xor
sar
sub
iret
and
repnz
pop
fadd
loopne
adc
mov
js
adc
ffree
and
lea
add
scas
mov
ins
loopne
aas
and
and
mov
cld
push
and
mov
in
or
xchg
add
sbb
test
xor
cmp
fldenv
push
mov
mov
and
add
push
push
bound
sub
movs
rcl
inc
add
adc
or
mov
add
ins
popa
nop
push
inc
lods
test
add
inc
xor
fcomp
ror
or
jl
dec
sbb
sbb
mov
sbb
sub
inc
mov
stos
imul
and
lea
sub
inc
stos
inc
movs
mov
dec
add
or
ficom
add
cmp
cmp
ret
inc
aaa
sub
shl
test
and
fsub
jns
pop
push
(bad)
aas
stc
and
push
mov
or
xchg
inc
adc
pushf
xor
xor
sbb
push
push
adc
push
mov
xchg
xchg
and
adc
or
inc
sub
add
inc
sbb
xchg
lea
add
inc
xchg
cmp
adc
add
retf
and
in
push
mov
xor
xchg
or
adc
aas
clc
clc
mov
repz
sub
sbb
repz
adc
fdiv
dec
sar
fst
xchg
and
pop
lods
mov
(bad)
jo
push
sbb
and
sbb
add
or
inc
sub
add
add
or
add
or
mov
rol
push
mov
bound
sbb
push
cmp
test
dec
xchg
loopne
and
mov
add
sbb
or
adc
in
movs
add
adc
or
cmp
mov
sbb
push
ins
xor
adc
dec
sbb
xor
xor
inc
jne
ret
mov
inc
or
xor
aam
outs
loop
js
icebp
rol
mov
popa
shl
pop
mov
xchg
xor
lds
int3
mov
int3
ja
jne
sbb
push
jns
test
mov
or
int3
lock
popf
push
sub
and
call
push
and
adc
enter
fwait
jae
out
xor
ret
shl
int3
test
ror
push
xchg
call
loopne
lods
inc
cs
idiv
arpl
iret
or
ret
cld
jb
push
fsub
adc
and
inc
xchg
les
cli
push
nop
mov
call
or
test
sub
aas
in
adc
les
scas
cmp
or
push
push
mul
les
inc
sub
and
push
push
data16
lock
pusha
push
jbe
push
mov
adc
cwde
(bad)
rol
sbb
lock
pop
dec
add
pop
aas
or
add
jno
or
and
ror
jbe
mov
popa
adc
add
inc
or
sbb
and
xor
cdq
retf
pusha
loopne
push
or
add
xchg
dec
sbb
push
lds
adc
ins
adc
or
mov
push
test
push
or
sbb
push
inc
mov
or
ds
inc
mov
and
jmp
pusha
push
xor
movs
jb
daa
inc
dec
adc
mov
add
pushf
mov
icebp
mov
rcl
add
xchg
add
cmp
and
push
adc
and
cmps
xchg
adc
add
mov
sub
adc
push
mov
ins
sbb
sbb
retf
(bad)
mov
cmp
xor
sub
mov
bound
cmp
xchg
push
dec
or
sbb
or
rol
and
or
adc
arpl
sub
and
rol
aaa
shl
loop
fchs
push
push
and
jl
hlt
rol
repz
xor
xchg
and
or
dec
mov
add
fs
xlat
outs
in
cmc
xlat
pusha
xchg
sub
mov
pop
push
inc
add
stc
add
or
inc
sub
add
add
or
add
or
mov
rol
add
or
scas
add
push
mov
push
dec
aaa
bound
pop
adc
jl
add
lahf
or
xor
sbb
pop
in
xchg
or
sbb
sub
adc
xor
mov
test
data16
test
sub
dec
inc
adc
push
pop
(bad)
es
pushf
pusha
jo
add
lock
aas
sbb
ja
lahf
xchg
pop
inc
dec
lds
inc
or
lods
pop
and
or
sti
xchg
xor
(bad)
cmp
inc
ret
sub
(bad)
gs
xor
ror
movs
popa
cmps
dec
add
xchg
cs
arpl
cmp
mov
add
fisttp
pushf
popa
mov
xchg
sbb
in
push
xchg
mov
mov
sbb
ret
push
arpl
in
xchg
push
call
jmp
dec
xbegin
jno
dec
shl
iret
adc
test
(bad)
into
retf
mov
daa
inc
cmps
or
dec
xor
xor
sar
sub
iret
and
repnz
pop
fadd
loopne
adc
mov
js
adc
ffree
and
lea
add
scas
mov
ins
loopne
aas
and
and
mov
cld
push
and
mov
in
or
xchg
add
sbb
test
xor
cmp
fldenv
push
mov
mov
and
add
push
push
bound
sub
movs
rcl
inc
add
adc
or
mov
add
ins
popa
nop
push
inc
lods
test
add
inc
xor
fcomp
ror
or
jl
dec
sbb
sbb
mov
sbb
sub
inc
mov
stos
imul
and
lea
sub
inc
stos
inc
movs
mov
dec
add
or
ficom
add
cmp
cmp
ret
inc
aaa
sub
shl
test
and
fsub
jns
pop
push
(bad)
aas
stc
and
push
mov
or
xchg
inc
adc
pushf
xor
xor
sbb
push
push
adc
push
mov
xchg
xchg
and
adc
or
inc
sub
add
inc
sbb
xchg
lea
add
inc
xchg
cmp
adc
add
retf
and
in
push
mov
xor
xchg
or
adc
aas
clc
clc
mov
repz
sub
sbb
repz
adc
fdiv
dec
sar
fst
xchg
and
pop
lods
mov
(bad)
jo
push
sbb
and
sbb
add
or
inc
sub
add
add
or
add
or
mov
rol
push
mov
bound
sbb
push
cmp
test
dec
xchg
loopne
and
mov
add
sbb
or
adc
in
movs
add
adc
or
cmp
mov
sbb
push
ins
xor
adc
dec
sbb
xor
xor
inc
jne
ret
mov
inc
or
xor
aam
outs
loop
js
icebp
rol
mov
popa
shl
pop
mov
xchg
xor
lds
int3
mov
int3
ja
jne
sbb
push
jns
test
mov
or
int3
lock
popf
push
sub
and
call
push
and
adc
enter
fwait
jae
out
xor
ret
shl
int3
test
ror
push
xchg
call
loopne
lods
inc
cs
idiv
arpl
iret
or
ret
cld
jb
push
fsub
adc
and
inc
xchg
les
cli
push
nop
mov
call
or
test
sub
aas
in
adc
les
scas
cmp
or
push
push
mul
les
inc
sub
and
push
push
data16
lock
pusha
push
jbe
push
mov
adc
cwde
(bad)
rol
sbb
lock
pop
dec
add
pop
aas
or
add
jno
or
and
ror
jbe
mov
popa
adc
add
inc
or
sbb
and
xor
cdq
retf
pusha
loopne
push
or
add
xchg
dec
sbb
push
lds
adc
ins
adc
or
mov
push
test
push
or
sbb
push
inc
mov
or
ds
inc
mov
and
jmp
pusha
push
xor
movs
jb
daa
inc
dec
adc
mov
add
pushf
mov
icebp
mov
rcl
add
xchg
add
cmp
and
push
adc
and
cmps
xchg
adc
add
mov
sub
adc
push
mov
ins
sbb
sbb
retf
(bad)
mov
cmp
xor
sub
mov
bound
cmp
xchg
push
dec
or
sbb
or
rol
and
or
adc
arpl
sub
and
rol
aaa
shl
loop
fchs
push
push
and
jl
hlt
rol
repz
xor
xchg
and
or
dec
mov
add
fs
xlat
outs
in
cmc
xlat
pusha
xchg
sub
mov
pop
push
inc
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
dec
jo
xchg
or
sub
pop
adc
cwde
nop
pop
inc
add
inc
add
inc
nop
imul
sub
lahf
lds
add
scas
in
cwde
xor
cwde
xchg
push
and
xor
ret
or
and
outs
add
call
or
adc
or
loope
dec
xchg
sub
sahf
sub
inc
add
dec
jno
adc
or
xchg
pushf
jno
mov
(bad)
out
sbb
into
cmp
jbe
leave
mov
popa
push
push
sub
les
sar
sub
bound
retf
or
add
pop
jmp
and
add
or
inc
sub
add
add
add
add
or
add
or
jo
mov
enter
sbb
dec
mov
inc
or
mov
cmp
jno
add
inc
jle
sub
and
pop
mov
pop
or
pop
push
shl
push
dec
sub
push
dec
mov
dec
sti
aaa
popa
dec
mov
clc
daa
sub
or
pop
mov
mov
fmul
sar
scas
and
retf
stos
test
gs
sub
ja
stos
jge
movs
adc
mov
pop
pop
repz
stos
cmps
stos
inc
pusha
test
add
sub
into
jno
(bad)
loop
rol
jp
jo
sub
and
jl
movs
adc
jo
or
inc
pop
mov
add
sub
mov
mov
inc
xor
stos
bound
movs
cmp
add
lods
mov
mov
test
int3
out
add
add
stc
add
or
inc
sub
add
add
add
add
or
add
or
lock
add
test
pop
dec
pushf
cmp
mov
imul
pop
inc
mov
sub
outs
inc
sub
add
pusha
mov
js
sbb
push
add
adc
sti
push
popf
cmp
xor
dec
sbb
das
test
pop
and
add
sbb
or
div
add
aam
push
adc
retf
inc
xchg
cmp
cmp
fstp
xchg
mov
push
inc
or
rol
ret
jge
jbe
pop
xor
sbb
es
popf
retf
mov
cmp
or
mov
sbb
or
(bad)
xor
ret
aad
adc
js
xor
add
add
mov
or
mov
js
(bad)
mov
xor
(bad)
leave
ja
inc
aam
and
in
je
pop
pushf
rcr
pop
xlat
pop
cmp
jno
retf
(bad)
sbb
stos
xchg
add
add
stc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
or
inc
add
push
add
add
add
add
add
add
or
inc
mov
add
add
dec
add
push
add
add
popa
xor
sbb
add
add
je
add
dec
inc
cmp
popa
xor
das
add
inc
shl
(bad)
(bad)
adc
add
push
(bad)
in
add
int
mov
(bad)
hlt
ja
stc
add
dec
leave
add
jmp
ret
cld
call
sbb
pop
inc
aam
add
ret
sti
test
pop
add
mov
(bad)
jmp
aad
adc
clc
cdq
(bad)
aad
push
push
and
jp
(bad)
loope
push
add
xchg
add
stc
mov
(bad)
fld
fcmovb
stos
(bad)
push
std
xchg
adc
push
aam
add
mov
(bad)
sti
pop
(bad)
fst
mov
out
add
call
std
mov
movs
jne
jne
(bad)
hlt
add
mov
(bad)
stc
(bad)
jecxz
add
mov
mov
dec
repz
sub
test
ret
inc
xchg
dec
add
adc
mov
(bad)
in
dec
mov
cmp
add
leave
sbb
xchg
or
xchg
mov
jmp
sti
leave
jno
popa
push
(bad)
(bad)
(bad)
(bad)
div
(bad)
sub
push
(bad)
cld
(bad)
in
add
or
jbe
std
jbe
sti
mov
(bad)
test
sti
mov
(bad)
(bad)
out
cli
lods
add
call
(bad)
std
cmp
mov
(bad)
sti
add
aam
lock
add
mov
lds
cld
fisubr
pushf
jne
fmul
mov
mov
sar
std
leave
and
mov
jmp
cmps
pop
add
out
push
cmc
lods
add
or
repnz
rcr
mov
out
ret
add
ss
rol
sub
adc
inc
es
stos
or
or
out
in
test
(bad)
mov
(bad)
fisttp
fiadd
cmps
or
leave
cmp
lds
sti
mov
mov
sub
and
push
sbb
stos
adc
jmp
(bad)
lock
mov
dec
add
jl
jae
test
repz
fiadd
push
adc
out
popa
push
cmp
je
std
int3
adc
test
mov
std
mov
mov
jmp
pop
(bad)
add
rol
stos
sub
push
cld
into
add
fnstcw
jmp
jmp
lahf
jmp
jae
pusha
and
gs
(bad)
fucomip
(bad)
inc
aad
cld
out
(bad)
jecxz
lods
jo
(bad)
call
xchg
pop
adc
icebp
out
idiv
icebp
stc
fiadd
in
jns
shr
stos
or
hlt
add
test
(bad)
ret
ins
add
jl
push
pop
cld
inc
(bad)
std
add
fs
push
push
cmp
test
push
sbb
pusha
in
mov
popf
call
sub
ror
idiv
(bad)
out
jmp
out
lock
cli
or
mov
add
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
mov
rol
lods
or
mov
mov
or
dec
push
and
mov
add
(bad)
adc
adc
loopne
sbb
fdiv
(bad)
pop
cwde
fchs
or
sub
rol
push
sub
and
add
add
add
lods
add
nop
and
call
mov
xor
adc
cmps
dec
cdq
push
add
bndldx
sbb
mov
(bad)
mov
add
retf
xor
sar
mov
push
lock
xchg
stos
push
push
cmps
je
shr
jp
mov
add
jb
outs
les
mov
dec
sub
ja
inc
pop
jbe
cmp
cmp
xchg
push
xor
(bad)
mov
ins
out
aaa
xor
add
fimul
xor
jno
sub
add
pop
xor
(bad)
mov
adc
ins
mov
mov
and
call
or
dec
(bad)
adc
add
mov
mov
inc
int
inc
ror
mov
lds
int3
xor
(bad)
call
sbb
rol
adc
push
adc
mov
add
jl
push
test
mov
and
fistp
inc
add
and
add
mov
add
cmp
test
mov
mov
mov
arpl
and
inc
(bad)
or
adc
int3
or
and
les
push
dec
mov
adc
add
sbb
xchg
fild
pop
and
arpl
inc
inc
and
loopne
or
cmovs
adc
sub
xchg
mov
push
push
lock
add
jo
add
dec
les
shl
xor
sbb
mov
inc
jmp
mov
inc
loope
or
stos
nop
repnz
loopne
lea
dec
add
enter
jb
ret
sub
je
in
les
sbb
mov
mov
call
or
and
leave
cwde
mov
das
or
(bad)
pop
clc
push
add
and
add
mov
or
add
pop
pop
pop
mov
pop
xchg
or
push
shr
jle
in
add
sub
add
es
rol
(bad)
ror
mov
(bad)
stos
clc
or
test
adc
retf
inc
mov
mov
adc
cmp
lea
dec
xchg
fwait
into
loop
add
inc
add
js
inc
xor
mov
jge
jb
aam
jnp
sub
sbb
loope
adc
lock
pusha
rcr
inc
dec
ins
rol
push
dec
out
movs
(bad)
popa
jp
cmps
sbb
jo
mov
inc
jo
sub
icebp
inc
lsl
mov
cmp
retf
cmc
pop
daa
mov
or
mov
or
add
std
push
jle
adc
call
enter
hlt
inc
call
lock
mov
scas
rcr
fcom
add
xchg
fisub
cwde
sub
aas
and
xchg
push
mul
(bad)
sub
and
or
test
or
inc
dec
and
mov
dec
cmp
call
adc
inc
adc
inc
add
add
or
aaa
ss
add
lods
xchg
test
dec
ror
pop
dec
and
loope
gs
(bad)
xor
adc
loope
pop
cwde
loopne
push
mov
sbb
xor
sub
inc
jo
loope
and
push
pop
adc
add
xor
add
add
daa
pop
jo
or
inc
lds
sub
sub
(bad)
adc
inc
inc
aam
or
jg
mov
sbb
mov
sbb
inc
adc
sbb
add
loopne
xor
ror
sbb
mov
arpl
xor
add
fs
inc
sbb
add
sbb
xacquire
pusha
shl
rol
mov
add
popa
cdq
push
in
enter
rcl
mov
xor
add
xor
imul
inc
js
ret
inc
rcl
sub
or
xor
and
xor
stos
mov
shl
push
leave
add
jae
outs
and
cmp
call
adc
or
mov
add
push
mov
add
mov
add
lds
outs
push
xchg
lock
sub
and
inc
xor
or
cs
xchg
movs
mov
sbb
adc
fdiv
adc
int3
add
push
nop
add
or
jno
pop
sbb
add
pusha
add
pop
sub
ss
or
loopne
sub
push
clc
and
or
inc
clc
and
movs
call
xor
add
pusha
nop
cs
mov
push
mov
add
cmp
mov
cmp
mov
sub
or
and
push
ror
adc
or
or
std
inc
outs
push
rol
rcr
push
sub
and
(bad)
dec
ins
enter
loopne
inc
lock
or
pop
push
inc
inc
mov
and
mov
mov
dec
mov
add
add
mov
or
and
(bad)
lock
loopne
add
mov
push
push
pop
xchg
pop
test
imul
push
pop
pop
add
jl
leave
add
mov
add
mov
mov
test
in
xchg
mov
pop
add
xor
call
inc
xchg
pop
add
pop
pop
mov
push
ins
pusha
add
push
popa
js
push
aam
mov
int3
loopne
pop
sbb
push
push
add
rol
js
sbb
and
movaps
scas
add
add
cwde
bound
cmp
cwde
sbb
cmps
sbb
dec
lock
or
add
mov
add
fadd
(bad)
call
inc
inc
and
pusha
or
inc
adc
js
pop
sbb
or
inc
push
or
rol
inc
sub
jmp
cmp
inc
or
cli
rcl
ror
rcl
stc
add
fs
add
add
add
add
add
or
inc
add
or
inc
sub
add
add
add
add
inc
dec
sbb
mov
rol
lock
mov
push
lds
cmp
sub
add
sbb
dec
jle
xor
pusha
loope
xor
out
cmp
popf
dec
mov
stos
and
or
ror
popa
loop
xchg
xor
fild
or
push
add
or
lock
shr
push
je
cmps
sub
mov
add
loopne
push
test
xor
imul
dec
or
cmc
cvtps2pi
or
xchg
jno
sbb
cmc
out
enter
xor
mov
out
mov
and
lds
or
sbb
sbb
test
iret
adc
cmps
pop
mov
push
test
cmps
repnz
ret
sub
sub
call
dec
std
adc
pop
fistp
jo
test
and
retf
dec
or
and
add
or
inc
sub
add
add
add
add
or
inc
add
push
add
add
add
add
or
add
or
mov
rol
xor
aas
pop
aas
adc
mov
xchg
cmp
sbb
stc
mov
pop
dec
cmp
rol
pop
or
sbb
std
push
adc
nop
jmp
xchg
add
pop
adc
adc
test
push
or
loop
adc
mov
sub
sub
sbb
sbb
xor
test
jbe
dec
mov
in
add
je
and
pop
push
(bad)
jle
adc
and
jmp
or
sub
aad
scas
cli
cmps
add
mov
mov
in
dec
inc
dec
sahf
push
add
pop
sbb
dec
jmp
add
xchg
inc
adc
mov
jecxz
jno
fiadd
popa
call
add
test
or
mov
inc
xchg
sub
mov
das
xchg
adc
sub
outs
push
stos
jg
push
xor
adc
ret
hlt
daa
mov
lahf
inc
adc
push
(bad)
addr16
test
cdq
repz
push
sbb
push
add
fiadd
dec
add
xchg
adc
and
add
adc
inc
sub
add
add
or
add
or
mov
rol
jo
aas
add
(bad)
mov
sbb
fidivr
clc
cmps
in
xchg
xchg
nop
push
cmps
dec
pop
pusha
pusha
or
xor
push
cmps
add
call
je
cmps
sub
mov
add
inc
inc
push
js
hlt
fwait
push
push
movs
push
(bad)
jle
shl
or
mov
cmp
(bad)
in
or
std
pop
push
mov
vpsrad
movs
and
(bad)
aas
mov
loopne
inc
ret
ds
cwde
adc
or
mov
cld
pop
mov
stc
push
mov
adc
lahf
mov
sub
rcl
loopne
lds
(bad)
sbb
adc
add
sbb
jecxz
sub
push
jmp
test
and
retf
retf
or
jae
hlt
retf
push
sbb
pop
inc
mov
imul
inc
cmc
dec
fldcw
repz
(bad)
mov
daa
fld
lods
loop
jle
adc
cld
add
nop
ud0
into
inc
add
fild
loop
cmp
fsub
xor
hlt
loopne
sub
movs
push
add
add
add
add
add
dec
add
sldt
add
popa
xor
sbb
add
add
push
add
ins
je
add
push
add
inc
dec
inc
cmp
popa
xor
xor
idiv
add
cmps
add
or
jmp
(bad)
in
add
std
add
stc
add
dec
in
mov
sbb
leave
lods
push
js
loope
(bad)
aam
stc
imul
cli
mov
(bad)
std
push
mov
add
std
lds
jmp
xlat
xchg
(bad)
fld
lods
mov
mov
dec
add
fadd
cdq
bound
(bad)
adc
rol
je
(bad)
jbe
(bad)
std
sbb
aad
(bad)
rol
(bad)
clc
xchg
(bad)
cli
movs
cld
je
cli
les
push
test
add
xchg
or
(bad)
jmp
adc
in
(bad)
(bad)
add
push
sbb
int
std
sar
lods
add
cmc
add
clc
retf
(bad)
fidiv
jmp
cli
lods
add
add
in
data16
adc
mov
(bad)
test
(bad)
and
xchg
icebp
add
test
sti
fiadd
cmps
add
jmp
aam
add
mov
(bad)
out
add
(bad)
sub
mov
in
in
inc
cmp
fisub
mov
jb
sub
addr16
(bad)
mov
inc
adc
inc
ror
shr
nop
xchg
cwde
sti
pushf
add
pop
add
in
shl
cld
mov
(bad)
mov
test
adc
pop
pop
test
mov
ret
ret
mov
cld
jnp
(bad)
(bad)
and
xor
push
or
fwait
push
retf
cdq
bound
mov
shl
retf
std
fimul
(bad)
in
push
imul
out
(bad)
jmp
inc
(bad)
loope
add
aad
cld
mov
(bad)
in
mov
lds
loop
movs
jns
mov
push
icebp
popf
add
into
push
mov
(bad)
fiadd
(bad)
cmc
add
lods
or
repnz
add
repnz
(bad)
fld
cmp
retf
or
mov
and
test
dec
push
in
sbb
rol
hlt
hlt
(bad)
(bad)
mov
cld
lods
push
std
hlt
add
retf
lock
push
pop
mul
cld
mov
std
lock
rol
(bad)
repz
std
rol
pop
std
test
lds
lods
lods
lods
int3
popf
sbb
mov
sti
scas
add
stos
add
pushf
jno
lods
adc
mov
out
in
(bad)
out
enter
in
retf
or
scas
add
clc
idiv
mov
std
mov
stc
repz
scas
add
out
jmp
xor
shl
sub
sar
mov
retf
sti
lock
lods
push
(bad)
lods
cmp
outs
std
ret
lds
(bad)
out
push
(bad)
clc
xor
or
out
ret
imul
cld
retf
iret
push
jmp
adc
xchg
in
cdq
or
repz
repnz
iret
add
xlat
and
repnz
fiadd
stc
clc
add
retf
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
or
inc
sub
add
add
add
add
or
add
or
nop
pusha
mov
or
jno
mov
add
pop
not
xor
or
enter
test
pusha
cmp
dec
rol
or
mov
inc
xor
in
pop
mov
aam
loope
mov
adc
leave
gs
dec
and
hlt
dec
adc
cmp
es
inc
push
pop
sbb
sbb
call
std
cmp
mov
adc
mov
pop
or
xor
cdq
pop
arpl
add
retf
mov
dec
sbb
(bad)
fist
retf
and
push
lea
ret
inc
xchg
jg
inc
xor
adc
aam
add
push
stos
data16
ss
cdq
add
jae
mov
dec
fs
enter
push
mov
inc
jo
pop
adc
popf
mov
mov
inc
mov
stos
push
mov
and
cmp
add
call
test
enter
sbb
jbe
stos
push
dec
pushf
mov
mov
add
mov
dec
cmp
push
das
inc
rcl
inc
push
mov
loop
cs
xor
xor
cmp
xor
pop
mov
and
pop
inc
inc
sbb
or
push
or
pushf
xchg
inc
push
jmp
jo
xchg
sub
fs
jb
sbb
add
loop
dec
sbb
loop
xor
rcl
adc
(bad)
inc
cmp
dec
adc
push
ds
not
outs
inc
lock
dec
inc
jno
and
xor
movs
pop
dec
push
mov
cs
inc
rcr
sbb
mov
adc
loope
aaa
add
and
cmp
xchg
push
bt
fisubr
fwait
dec
sahf
add
push
push
xor
add
jno
jo
xor
leave
adc
add
inc
out
mov
pop
xor
inc
or
movs
pop
rcr
imul
bound
add
pop
xor
les
cmp
cdq
sbb
mov
sbb
movs
jb
inc
out
mov
pop
cld
xor
xchg
adc
rol
add
scas
adc
lds
es
push
imul
jge
cmp
and
sbb
mov
inc
mov
adc
dec
inc
adc
test
jns
xchg
outs
and
cmp
(bad)
clc
mov
xor
add
lock
dec
leave
popa
inc
push
lock
jo
adc
or
add
mov
push
pop
cmp
retf
test
and
and
adc
cdq
mov
mov
sbb
cmp
retf
mov
push
test
in
or
cmp
inc
add
add
or
pop
and
ja
inc
add
sub
sbb
idiv
and
inc
addr16
adc
adc
nop
add
inc
shl
mov
and
mov
bound
and
rol
gs
sbb
inc
jne
sub
stc
xchg
sbb
mov
out
dec
daa
mov
push
jo
push
or
sub
xchg
ret
jl
(bad)
ds
test
out
xchg
imul
push
and
or
mov
xor
sar
mov
add
cld
or
sub
es
fldenv
test
das
out
mov
test
xor
add
nop
mov
sub
sbb
xor
dec
dec
adc
push
xor
int3
jne
cmp
loope
cmp
inc
or
adc
and
add
mov
adc
sbb
add
test
popf
bound
mov
jnp
adc
mov
or
scas
mov
inc
adc
jo
or
jo
nop
push
sub
es
or
or
shld
xchg
or
mov
enter
adc
pusha
and
sbb
xchg
enter
popa
sahf
ds
addr16
out
mov
fsub
pop
pop
dec
or
and
cmp
pusha
add
or
push
push
add
xor
nop
push
sub
jo
arpl
jae
add
add
xor
add
mov
loope
jg
add
or
mov
jae
dec
test
push
pop
adc
sbb
mov
jnp
inc
or
pushf
add
fiadd
les
ret
dec
mov
ret
xchg
jo
(bad)
ror
rol
clc
loopne
popa
push
adc
push
push
or
mov
jecxz
loop
call
lock
lea
sbb
mov
or
add
or
js
add
nop
les
or
adc
or
push
loop
fwait
retf
je
ds
inc
push
push
and
pop
xor
or
adc
xor
and
push
ret
sub
xchg
mov
sub
mov
adc
pop
fistp
mov
inc
push
test
bound
jmp
inc
sbb
inc
mov
mov
add
sbb
inc
add
js
jmp
xor
or
add
add
adc
sbb
loope
fistp
shl
push
add
add
jge
and
pop
or
xor
(bad)
xor
lock
test
push
jmp
fcom
sub
jo
aam
add
mov
add
enter
add
sar
or
sbb
jle
shr
add
loopne
add
rol
sar
pop
adc
ret
fistp
(bad)
push
pop
xchg
jo
cmp
jecxz
inc
or
movs
ror
or
xor
(bad)
xchg
sbb
sbb
fdiv
and
pop
adc
outs
std
mov
dec
xor
sbb
or
push
pop
packuswb
mov
pop
or
xchg
xor
js
pop
inc
add
xor
jmp
add
mov
mov
mov
push
mov
push
push
mov
out
jb
or
ret
push
hlt
mov
lea
loope
and
add
lock
and
cmp
xor
sbb
test
inc
mov
xor
add
mov
dec
inc
add
test
inc
add
adc
dec
mov
(bad)
loope
and
or
add
stc
add
outs
add
add
add
add
or
add
or
or
test
aaa
and
test
jae
sbb
jmp
cmps
sbb
je
movs
xchg
inc
loopne
jg
adc
dec
js
enter
cmp
add
pop
dec
mov
inc
sub
jo
scas
add
dec
cmps
rcl
sbb
imul
or
push
push
mov
or
add
push
cmc
xor
cli
adc
and
adc
xor
loopne
and
out
fcomp
das
or
(bad)
hlt
jmp
into
(bad)
mov
stos
xchg
sub
and
adc
pop
pop
js
prefetcht1
and
fbld
jne
xchg
mov
dec
cdq
mov
jg
mov
xchg
imul
fstp
jg
adc
push
enter
cmp
les
push
(bad)
push
inc
jb
stc
addr16
repz
popf
mov
retf
pop
pop
popf
and
xchg
out
add
fs
or
sahf
adc
(bad)
adc
rol
hlt
dec
pop
clc
sbb
aas
adc
add
adc
aam
dec
add
add
stc
add
or
inc
sub
add
add
or
add
or
aad
mov
gs
out
les
sti
xor
mov
dec
pusha
scas
jg
adc
dec
js
aam
mov
addr16
test
repnz
cmps
sub
adc
mov
arpl
stc
iret
or
cmp
jo
inc
dec
mov
lds
adc
and
dec
xor
dec
cmps
push
shr
or
push
and
add
adc
add
jne
dec
xlat
xchg
and
enter
jno
add
jbe
sar
rcl
add
(bad)
fs
loop
mov
mov
sbb
(bad)
movs
push
sbb
add
pop
and
cmp
mov
sbb
jmp
and
in
push
xchg
adc
in
lahf
push
jmp
(bad)
addr16
xchg
jns
and
fisub
dec
adc
xor
sahf
add
dec
(bad)
mov
test
std
pop
scas
cdq
mov
inc
adc
dec
std
add
pop
or
std
cmps
pop
lea
add
add
or
inc
sub
add
add
or
add
mov
sub
popa
inc
add
adc
cmp
or
test
js
pop
adc
mov
and
hlt
xor
push
inc
das
and
popa
dec
pop
daa
pop
fs
jecxz
aas
xchg
dec
sub
gs
and
sbb
(bad)
test
cmps
push
or
sub
or
add
cld
jae
adc
cmps
push
sahf
push
int3
pop
mov
lods
adc
adc
cmp
push
(bad)
push
div
sub
and
call
mov
or
jne
xchg
stos
or
jne
repz
test
add
aad
cmp
popa
xor
and
ret
mov
xor
mov
lods
adc
or
ret
sbb
sbb
(bad)
out
cmp
inc
add
stc
add
or
inc
sub
add
add
or
add
sbb
mov
sub
popa
ret
adc
adc
cmp
add
xor
push
dec
and
jo
loopne
and
or
nop
test
pop
or
fmul
add
adc
xchg
mov
loopne
mov
dec
push
pop
sbb
mov
and
cli
lds
dec
push
pusha
xchg
inc
fimul
push
add
and
dec
(bad)
cmp
add
sub
imul
xor
les
aas
sbb
stos
mov
and
cmp
and
lahf
test
lock
rcl
aas
add
and
cmp
mov
inc
xor
(bad)
sub
add
jmp
cmps
pop
jmp
adc
xor
cmps
test
nop
mov
retf
add
retf
and
or
clc
fiadd
add
add
add
add
add
add
dec
add
add
inc
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
pop
add
pop
add
add
add
pop
pop
add
add
add
pop
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
pop
add
add
add
add
push
pop
pop
add
add
add
pop
pop
add
add
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
add
add
add
add
pop
pop
add
pop
pop
add
add
add
pop
pop
add
pop
add
pop
add
add
add
add
add
add
add
pop
cmp
add
or
add
xor
pop
add
add
inc
add
clc
push
xor
add
adc
add
mov
pop
add
add
inc
add
or
cmp
add
or
add
inc
pop
pop
add
add
inc
add
add
cmp
add
push
add
add
add
add
add
add
add
add
push
xor
add
or
add
add
and
add
add
add
add
pusha
ror
push
and
add
and
(bad)
inc
add
add
add
add
pusha
les
add
or
and
add
add
add
add
add
pusha
ins
dec
pop
add
adc
add
add
pop
(bad)
inc
add
add
add
add
pusha
sbb
pop
add
or
add
adc
add
add
add
add
pusha
clc
dec
pop
add
das
add
add
inc
add
add
add
add
push
push
xor
add
sbb
(bad)
inc
add
add
add
add
pusha
mov
add
adc
es
inc
add
add
add
add
push
push
xor
add
adc
add
add
add
add
pusha
les
push
das
add
push
add
add
add
add
add
push
push
adc
add
add
pop
(bad)
inc
add
add
add
add
pusha
je
pop
add
sub
add
mov
(bad)
inc
add
add
add
add
pusha
int3
dec
pop
add
das
add
or
stc
push
(bad)
inc
add
add
add
add
pusha
cmp
pop
add
xor
add
mov
(bad)
inc
add
add
add
add
dec
pop
add
das
add
add
rol
(bad)
inc
add
add
add
add
pusha
hlt
dec
pop
add
xor
add
mov
add
add
add
dec
pop
add
das
add
add
sub
add
add
add
add
pusha
add
add
xor
add
mov
add
add
add
add
pusha
ror
add
add
das
add
or
sub
(bad)
inc
add
add
add
add
pusha
fs
pop
add
or
add
rol
inc
add
add
add
add
pusha
adc
add
das
add
or
and
add
add
add
add
pusha
adc
pop
add
adc
add
lds
(bad)
inc
add
add
add
add
pusha
cld
dec
pop
add
das
add
or
and
(bad)
inc
add
add
add
dec
pop
add
adc
add
add
pop
(bad)
inc
add
add
add
add
pusha
pop
dec
pop
add
push
das
add
add
add
add
add
add
dec
pop
add
adc
add
add
pop
(bad)
inc
add
add
add
add
pusha
sub
pop
add
or
add
sbb
(bad)
inc
add
add
add
add
pusha
mov
add
add
das
add
or
add
add
add
add
dec
pop
add
xor
add
sub
add
add
add
add
pusha
enter
push
das
add
add
aad
(bad)
inc
add
add
add
add
pusha
in
dec
pop
add
xor
add
adc
(bad)
inc
add
add
add
add
pusha
lock
pop
add
das
add
add
or
add
add
add
add
pusha
call
add
add
and
add
or
(bad)
inc
add
add
add
add
pusha
loopne
pop
add
add
add
stc
push
(bad)
inc
add
add
add
dec
pop
add
add
add
add
push
(bad)
inc
add
add
add
add
pusha
mov
add
add
add
add
add
pop
(bad)
inc
add
add
add
add
dec
pop
add
adc
add
std
push
(bad)
inc
add
add
add
add
pusha
xchg
dec
pop
add
adc
das
add
std
push
(bad)
inc
add
add
add
add
pusha
mov
add
add
add
add
add
push
(bad)
inc
add
add
add
add
pusha
ror
add
xor
xor
add
add
pop
add
push
pop
add
mov
clc
push
pop
add
push
pop
add
adc
pop
(bad)
(bad)
(bad)
call
pop
add
pop
add
push
pop
add
(bad)
(bad)
inc
add
add
pop
add
add
push
pop
add
push
pop
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
mov
dec
pop
add
add
add
add
add
add
clc
bound
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
cmp
inc
add
add
add
add
add
add
pop
pop
add
add
add
dec
pop
add
dec
pop
add
add
add
add
dec
push
pop
add
add
add
(bad)
(bad)
inc
add
add
add
add
pop
add
add
add
push
pop
add
dec
pop
add
add
add
add
add
add
pop
pop
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
jl
pop
add
dec
pop
add
add
add
add
add
add
pop
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
dec
pop
add
add
add
add
add
add
add
add
inc
addr16
add
(bad)
(bad)
inc
add
add
add
add
add
add
push
pop
add
add
add
add
dec
pop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
pop
add
add
add
dec
pop
add
dec
pop
add
add
add
add
push
dec
pop
add
dec
pop
add
pop
add
dec
pop
add
push
pop
add
pop
add
push
pop
add
push
pop
add
pop
add
push
pop
add
push
pop
add
pop
add
pop
add
push
pop
add
push
pop
add
pop
add
add
pop
add
pop
add
pop
add
push
pop
add
add
pop
add
pop
add
pop
add
dec
pop
add
add
dec
pop
add
dec
pop
add
add
adc
add
add
inc
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
or
test
inc
add
or
inc
or
xchg
sbb
sbb
inc
add
inc
add
or
test
inc
add
add
les
inc
add
or
clc
or
movs
sbb
mov
inc
add
or
test
bound
sbb
inc
add
add
inc
add
bound
sbb
inc
add
or
mov
bound
test
inc
add
inc
add
or
xor
inc
add
add
mov
inc
add
sbb
sbb
inc
add
inc
add
sbb
sbb
inc
add
inc
add
sbb
push
jb
add
gs
inc
add
push
popa
addr16
outs
fs
add
sbb
inc
add
bound
sbb
inc
add
adc
rcr
bound
sbb
inc
add
inc
add
sbb
mov
inc
add
adc
fcomp
bound
add
add
fcom
inc
add
sbb
arpl
je
arpl
fs
add
add
outs
je
arpl
jne
je
add
add
outs
fs
outs
jne
je
add
bound
imul
add
outs
fs
imul
ins
push
gs
add
add
push
je
je
jae
add
jns
add
add
jb
dec
ja
add
add
sbb
inc
add
daa
inc
add
sbb
dec
je
ins
dec
popa
ins
add
add
push
jne
dec
popa
ins
add
ins
gs
popa
je
int3
sub
in
bound
push
jae
dec
fs
jns
add
add
outs
fs
add
gs
add
add
outs
fs
add
jb
push
popa
je
add
add
sbb
add
sbb
sbb
inc
add
sbb
jo
je
add
add
inc
inc
add
ja
ja
add
add
arpl
add
add
add
add
bound
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
push
push
lea
push
call
lea
push
call
push
lea
push
call
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
mov
mov
mov
push
push
mov
push
lea
push
call
add
push
lea
push
call
mov
lea
call
movsx
test
je
mov
call
jmp
mov
push
push
mov
push
lea
push
call
add
mov
lea
call
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
call
mov
call
mov
mov
mov
call
mov
call
mov
sub
jo
cmp
jg
mov
call
jmp
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
push
mov
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
lea
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
lea
mov
mov
lea
sub
push
jo
mov
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
push
call
lea
push
push
call
mov
lea
lea
push
mov
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
mov
push
push
call
add
lea
lea
lea
push
push
push
call
xor
jmp
mov
push
mov
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
sub
mov
mov
lea
jo
add
mov
jo
lea
mov
push
lea
push
lea
push
lea
push
lea
push
push
mov
call
lea
mov
call
test
je
mov
push
call
lea
push
push
call
mov
lea
lea
push
mov
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
push
call
mov
jmp
mov
push
jmp
lea
lea
push
push
push
call
add
ret
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
lea
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
sub
jo
mov
mov
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
push
call
neg
sbb
inc
neg
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
lea
push
call
mov
lea
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
call
not
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
push
call
neg
sbb
inc
neg
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
add
jo
mov
mov
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
call
not
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
mov
mov
mov
mov
call
push
lea
push
call
lea
push
push
call
add
lea
push
push
call
mov
lea
call
push
call
mov
lea
push
push
mov
call
lea
fstp
call
lea
call
lea
lea
push
push
push
call
add
mov
fwait
push
jmp
lea
call
lea
call
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
call
call
fstp
mov
push
call
call
call
fcomp
fnstsw
test
je
mov
jmp
mov
mov
neg
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
add
jo
mov
mov
cmp
jg
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
lea
push
lea
push
call
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
lea
push
lea
push
call
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
jmp
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
mov
lea
call
push
push
call
mov
lea
call
mov
push
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
lea
lea
push
push
push
call
cmp
jge
push
push
push
push
call
mov
lea
lea
push
mov
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
lea
call
mov
lea
lea
mov
mov
call
mov
push
mov
mov
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
lea
push
lea
push
push
call
push
call
mov
push
push
push
push
call
lea
lea
mov
mov
call
lea
call
lea
call
lea
call
lea
lea
push
push
mov
mov
call
test
je
lea
lea
push
lea
push
push
mov
mov
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
call
push
mov
push
push
push
call
lea
lea
mov
mov
call
lea
call
lea
call
lea
lea
push
lea
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
call
push
mov
push
push
push
call
add
lea
jo
lea
mov
mov
call
lea
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
call
push
mov
push
push
push
call
lea
lea
mov
mov
call
lea
call
lea
call
lea
lea
push
lea
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
lea
push
push
mov
mov
call
lea
push
lea
push
push
call
lea
push
lea
push
push
lea
push
push
mov
mov
mov
mov
call
push
lea
push
call
lea
mov
call
lea
lea
push
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
mov
lea
push
push
mov
mov
call
lea
push
lea
push
push
call
mov
push
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
mov
lea
lea
push
push
lea
lea
push
mov
push
lea
lea
mov
mov
mov
mov
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
mov
mov
mov
lea
lea
mov
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
lea
push
push
mov
mov
mov
call
push
lea
lea
push
push
call
mov
lea
lea
push
push
call
mov
mov
push
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
call
lea
lea
push
push
mov
mov
call
test
je
mov
push
call
push
lea
push
call
mov
push
push
push
push
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
call
mov
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
push
jmp
test
je
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
mov
call
push
lea
push
call
mov
mov
push
push
mov
call
mov
lea
call
push
push
call
mov
lea
call
mov
lea
lea
push
push
push
call
cmp
jge
push
push
push
push
call
mov
lea
lea
push
mov
push
call
mov
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
push
push
call
mov
add
jo
lea
lea
mov
mov
call
lea
call
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
call
mov
push
push
push
push
call
sub
lea
jo
lea
mov
mov
call
lea
call
lea
call
lea
lea
push
lea
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
mov
lea
push
push
mov
mov
call
push
lea
lea
push
push
call
lea
push
call
mov
lea
call
lea
call
lea
lea
push
push
push
call
add
push
jmp
test
je
lea
call
lea
lea
push
lea
push
push
push
call
add
lea
call
lea
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
lea
lea
call
lea
push
lea
push
call
mov
mov
push
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
lea
push
call
push
mov
mov
push
lea
push
call
push
push
call
call
mov
push
mov
push
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
lea
lea
call
lea
push
lea
push
call
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
push
push
push
push
call
lea
call
lea
push
lea
push
lea
push
push
call
add
mov
push
call
movsx
test
jne
mov
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
call
mov
mov
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
jmp
jmp
mov
push
call
mov
mov
lea
call
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
lea
call
lea
push
lea
push
push
call
add
mov
push
mov
push
push
push
call
mov
mov
lea
lea
call
mov
lea
push
call
push
mov
push
push
push
call
add
jo
mov
mov
lea
lea
call
mov
lea
push
call
push
mov
push
push
push
call
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
mov
lea
mov
mov
lea
push
lea
push
call
push
lea
push
lea
push
call
lea
lea
call
mov
lea
push
lea
push
lea
push
call
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
jmp
mov
lea
push
lea
push
call
push
lea
push
lea
push
call
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
lea
call
lea
push
lea
push
push
call
add
mov
push
mov
push
push
push
call
mov
mov
lea
lea
call
mov
lea
push
call
push
mov
push
push
push
call
add
jo
mov
mov
lea
lea
call
mov
lea
push
call
push
mov
push
push
push
call
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
mov
lea
mov
mov
lea
push
lea
push
call
push
lea
push
lea
push
call
lea
lea
call
mov
lea
push
lea
push
lea
push
call
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
neg
neg
mov
lea
call
lea
call
movsx
test
jne
mov
lea
push
lea
push
call
push
lea
push
lea
push
call
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
lea
push
push
push
mov
mov
call
add
lea
call
mov
mov
cmp
mov
jg
cmp
jne
push
push
call
mov
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
lea
push
push
lea
lea
push
mov
push
lea
lea
mov
mov
mov
mov
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
mov
push
push
push
push
call
lea
push
push
call
mov
push
lea
push
call
mov
add
push
call
lea
push
push
call
mov
mov
test
jne
push
push
call
mov
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
lea
mov
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
mov
push
push
push
push
call
lea
push
push
call
push
lea
push
call
mov
add
push
call
lea
push
push
call
mov
mov
test
jne
push
push
call
mov
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
lea
mov
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
lea
mov
mov
lea
lea
mov
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
mov
lea
push
push
mov
mov
call
mov
lea
lea
push
push
call
push
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
mov
push
push
push
push
call
push
lea
push
call
mov
lea
push
push
call
mov
add
push
call
lea
push
push
call
mov
mov
test
jne
push
push
call
mov
mov
push
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
mov
mov
lea
lea
mov
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
mov
mov
add
add
jo
mov
xor
jmp
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
push
push
push
push
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
call
mov
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
xor
mov
mov
mov
mov
mov
mov
or
push
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
cmp
fnclex
jge
push
push
push
mov
push
call
jmp
mov
mov
mov
cmp
mov
jne
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
mov
mov
lea
mov
mov
push
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
lea
push
mov
mov
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
test
jne
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
mov
mov
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
mov
mov
mov
mov
lea
push
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
lea
push
mov
mov
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
test
jne
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
mov
mov
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
mov
mov
mov
mov
lea
push
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
lea
push
mov
mov
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
test
jne
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
mov
mov
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
mov
mov
mov
mov
lea
push
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
lea
push
mov
mov
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
lea
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
mov
push
push
mov
mov
mov
mov
call
test
je
mov
test
jne
push
push
call
mov
mov
push
mov
call
lea
push
push
call
mov
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
lea
mov
mov
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
mov
push
push
mov
mov
mov
mov
call
lea
push
push
call
test
je
mov
push
call
push
lea
push
call
mov
lea
lea
push
push
mov
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
push
call
lea
push
push
call
mov
mov
mov
mov
lea
lea
push
lea
push
lea
push
push
call
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
lea
push
push
call
mov
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
lea
push
push
call
mov
mov
mov
mov
lea
lea
push
lea
push
lea
push
push
call
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fadd
mov
mov
fadd
push
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
mov
push
call
push
lea
push
call
mov
lea
lea
push
push
mov
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
push
lea
push
lea
push
push
call
push
lea
lea
push
push
call
lea
push
push
call
push
lea
lea
push
push
call
lea
push
push
call
push
call
push
mov
mov
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
lea
lea
push
lea
mov
push
push
mov
mov
mov
mov
call
mov
lea
call
lea
lea
push
lea
push
push
mov
mov
mov
mov
call
push
lea
lea
push
push
call
mov
lea
call
lea
lea
push
lea
push
lea
push
push
call
lea
push
call
mov
lea
lea
push
lea
push
lea
push
push
push
call
add
mov
lea
mov
mov
mov
mov
mov
mov
push
lea
lea
push
push
call
lea
push
lea
push
push
call
push
lea
push
call
lea
push
lea
push
push
call
push
call
lea
mov
call
mov
test
jne
push
push
call
mov
mov
push
mov
call
lea
push
push
call
mov
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
lea
push
mov
mov
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
lea
push
push
call
mov
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fadd
mov
push
mov
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
lea
push
push
call
mov
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
lea
push
push
call
mov
mov
lea
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
movsx
mov
mov
fild
mov
push
fstp
fld
fmul
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
lea
lea
push
push
mov
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
push
lea
push
call
mov
mov
lea
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
lea
lea
push
push
mov
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
mov
push
push
call
mov
mov
add
mov
mov
lea
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
mov
mov
call
test
je
mov
push
call
push
lea
push
call
mov
mov
lea
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
lea
push
push
call
mov
mov
lea
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
push
lea
push
call
mov
mov
lea
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
lea
push
push
call
mov
mov
lea
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
push
lea
push
call
lea
mov
lea
push
mov
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
mov
lea
push
lea
push
push
call
lea
push
lea
push
push
call
push
call
mov
push
lea
fstp
push
push
call
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
jmp
mov
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
lea
lea
push
push
push
call
mov
jmp
lea
lea
push
lea
push
push
call
mov
jmp
mov
mov
test
mov
jne
push
push
call
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
lea
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
call
lea
mov
call
mov
test
je
mov
push
call
lea
push
push
call
mov
mov
test
mov
mov
jne
push
push
call
mov
mov
push
call
push
lea
push
call
mov
lea
lea
push
push
mov
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
push
call
mov
mov
jmp
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
fwait
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
lea
mov
mov
mov
mov
push
lea
push
push
call
push
push
call
mov
call
lea
call
push
lea
push
push
call
push
push
push
lea
push
push
call
push
mov
push
call
call
lea
lea
push
push
push
call
mov
add
push
call
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
mov
mov
lea
push
call
mov
fadd
fstp
fnstsw
test
jne
mov
lea
push
call
mov
fadd
fstp
fnstsw
test
jne
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
mov
mov
lea
push
call
mov
fadd
fstp
fnstsw
test
jne
mov
lea
push
call
mov
fadd
fstp
fnstsw
test
jne
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
push
mov
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
lea
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
push
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
jmp
push
push
push
mov
push
call
push
lea
push
mov
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
jmp
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
call
mov
mov
mov
test
jne
push
push
mov
call
mov
jmp
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
push
lea
push
call
push
call
lea
call
lea
push
lea
push
push
call
add
lea
call
mov
test
jne
push
push
call
mov
push
push
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
test
jne
push
push
call
mov
push
push
mov
push
call
push
lea
push
call
push
lea
push
mov
call
add
push
call
mov
lea
call
push
push
push
push
call
lea
call
lea
call
lea
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jg
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
push
call
add
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
add
jo
mov
jmp
push
call
jmp
mov
call
push
lea
push
mov
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
setne
neg
xor
cmp
setne
neg
and
mov
lea
push
lea
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
push
jmp
lea
call
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
mov
push
lea
push
call
fstp
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
fwait
push
jmp
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
setne
neg
xor
cmp
setne
neg
or
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
movsx
test
je
mov
call
mov
mov
lea
push
call
mov
lea
call
movsx
test
je
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
mov
push
jmp
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
jmp
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
call
mov
lea
call
push
call
xor
cmp
push
setg
neg
mov
call
mov
lea
call
push
call
mov
xor
cmp
setl
neg
or
xor
cmp
lea
setne
neg
and
push
mov
lea
push
push
call
add
test
je
call
mov
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
call
mov
lea
call
push
call
xor
cmp
push
setg
neg
mov
call
mov
lea
call
push
call
mov
xor
cmp
setl
neg
or
xor
cmp
lea
setne
neg
and
push
mov
lea
push
push
call
add
test
je
call
mov
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
fcomp
fnstsw
test
jne
mov
jmp
mov
mov
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
fsub
fnstsw
test
jne
sub
fstp
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
fadd
fnstsw
test
jne
sub
fstp
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
push
call
xor
test
setl
neg
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
push
call
add
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
fcomp
fnstsw
test
jne
mov
jmp
mov
mov
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
fsub
fnstsw
test
jne
sub
fstp
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
push
call
xor
test
setl
neg
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
push
call
add
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
fadd
fnstsw
test
jne
sub
fstp
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
lea
push
call
mov
push
call
mov
mov
mov
mov
movsx
mov
cmp
je
cmp
je
cmp
je
jmp
jmp
mov
mov
push
lea
push
call
mov
mov
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
lea
push
call
lea
call
mov
mov
mov
push
push
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
call
mov
mov
mov
lea
push
lea
push
push
call
add
jmp
mov
add
jo
mov
mov
cmp
jg
mov
lea
mov
mov
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
push
push
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
call
mov
mov
mov
mov
lea
push
lea
push
push
call
add
jmp
mov
add
jo
mov
mov
cmp
jg
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
neg
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
call
lea
call
lea
push
lea
push
push
call
add
mov
call
push
lea
push
call
mov
mov
mov
mov
push
call
lea
call
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
neg
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
call
lea
call
lea
push
lea
push
push
call
add
jmp
mov
call
push
lea
push
call
mov
mov
mov
mov
push
call
lea
call
mov
jmp
mov
mov
mov
push
push
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
call
mov
mov
mov
lea
push
lea
push
push
call
add
jmp
mov
add
jo
mov
mov
cmp
jg
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
push
push
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
call
mov
mov
mov
mov
lea
push
lea
push
push
call
add
jmp
mov
add
jo
mov
mov
cmp
jg
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
push
lea
push
call
mov
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
call
lea
call
mov
jmp
mov
jmp
mov
mov
mov
mov
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
push
mov
push
call
mov
lea
call
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
call
lea
call
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
push
mov
push
call
mov
lea
call
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
call
lea
call
lea
push
lea
push
push
call
add
mov
jmp
mov
push
mov
mov
mov
push
call
mov
mov
mov
push
push
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
call
mov
mov
mov
lea
push
lea
push
push
call
add
jmp
mov
add
jo
mov
mov
cmp
jg
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
push
lea
push
call
mov
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
call
push
call
add
lea
call
mov
jmp
mov
mov
mov
jmp
mov
mov
push
lea
push
call
mov
mov
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
lea
push
call
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
mov
mov
lea
call
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
call
lea
call
mov
mov
mov
mov
mov
push
push
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
call
mov
lea
push
lea
push
push
call
add
jmp
mov
add
jo
mov
mov
cmp
jl
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
call
push
call
add
lea
call
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
push
lea
push
call
mov
mov
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
lea
push
call
lea
call
mov
mov
mov
push
push
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
call
mov
mov
mov
lea
push
lea
push
push
call
add
jmp
mov
add
jo
mov
mov
cmp
jg
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
mov
add
jo
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
mov
add
jo
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
call
push
lea
push
call
mov
mov
mov
mov
push
call
lea
call
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
push
lea
push
call
mov
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
jmp
jmp
mov
call
push
lea
push
call
mov
mov
mov
mov
push
call
lea
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
movsx
mov
fild
fstp
mov
push
call
fcomp
fnstsw
test
jne
mov
jmp
mov
mov
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
call
lea
call
mov
mov
mov
mov
mov
push
push
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
call
mov
lea
push
lea
push
push
call
add
jmp
mov
add
jo
mov
mov
cmp
jl
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
call
push
call
add
lea
call
jmp
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
fwait
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
or
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
or
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
sub
mov
mov
or
push
mov
mov
mov
mov
lea
push
mov
mov
mov
call
push
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
sub
mov
mov
or
push
mov
mov
mov
mov
lea
push
mov
mov
mov
call
push
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
call
mov
call
mov
mov
mov
call
mov
call
mov
sub
jo
cmp
jg
mov
call
jmp
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
call
mov
call
mov
mov
mov
call
mov
call
mov
sub
jo
cmp
jg
mov
call
jmp
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
push
push
mov
push
call
push
lea
push
mov
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
mov
cmp
setg
neg
mov
mov
lea
push
lea
push
push
call
add
lea
call
test
je
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
call
mov
mov
mov
call
mov
cmp
jg
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
mov
push
call
mov
lea
mov
call
push
push
call
mov
lea
call
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
add
jo
jmp
push
mov
push
call
mov
lea
mov
call
lea
push
call
mov
lea
call
lea
call
mov
mov
lea
lea
call
push
push
lea
push
mov
push
lea
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
mov
push
push
call
mov
sub
jo
call
mov
xor
mov
cmp
jg
mov
push
lea
push
call
mov
test
je
cmp
jne
movsx
sub
cmp
jb
call
mov
lea
jmp
call
mov
mov
add
mov
mov
push
lea
push
lea
push
call
lea
push
call
mov
mov
lea
push
lea
push
call
mov
lea
call
test
push
push
push
mov
push
je
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
movsx
mov
add
jo
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
mov
push
push
push
call
fnclex
test
jge
jmp
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
movsx
mov
add
jo
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
mov
push
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
push
call
add
mov
add
jo
jmp
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
setne
neg
mov
mov
lea
call
test
je
xor
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
call
push
jmp
lea
push
call
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
push
call
add
ret
lea
push
push
call
lea
mov
call
lea
call
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
jo
mov
mov
mov
cdq
idiv
test
jne
call
mov
cmp
jne
push
push
call
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
lea
push
push
mov
mov
call
mov
lea
call
lea
lea
push
push
call
mov
lea
mov
lea
push
lea
push
push
mov
call
lea
push
push
call
mov
push
push
call
neg
sbb
lea
inc
lea
neg
mov
push
lea
push
push
mov
call
lea
push
lea
push
push
call
push
call
lea
mov
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
cmp
je
mov
lea
call
lea
lea
push
push
call
lea
push
call
mov
lea
call
lea
lea
push
push
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
lea
push
lea
push
push
mov
mov
call
push
lea
push
call
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
mov
push
push
call
test
je
mov
lea
call
lea
lea
push
push
call
lea
push
call
mov
lea
call
lea
lea
push
push
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
lea
mov
lea
push
lea
push
push
mov
mov
call
lea
push
push
call
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
push
call
mov
fstp
push
call
call
fstp
fld
call
fcomp
fnstsw
test
je
mov
jmp
xor
neg
test
je
mov
lea
mov
mov
call
lea
lea
push
lea
push
push
call
mov
mov
lea
call
mov
lea
mov
mov
call
lea
lea
push
lea
push
push
call
mov
lea
call
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
call
mov
push
push
call
mov
lea
call
mov
push
lea
call
push
call
mov
lea
lea
push
lea
push
push
lea
push
push
mov
call
lea
lea
push
lea
push
push
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
call
mov
push
call
cmp
fnclex
jge
push
push
push
push
call
cmp
jne
push
push
call
mov
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
fwait
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
push
mov
push
call
push
lea
push
mov
call
push
call
add
lea
call
push
push
mov
push
call
push
lea
push
call
push
lea
push
mov
call
add
push
call
mov
lea
call
lea
push
call
lea
call
lea
call
lea
call
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
push
push
call
lea
call
lea
call
lea
call
push
call
test
jne
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
mov
mov
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
mov
mov
mov
push
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
push
call
add
push
lea
push
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
mov
mov
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
push
call
add
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
mov
mov
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
mov
mov
mov
push
push
push
call
fnclex
test
jge
push
push
mov
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
push
call
add
jmp
push
call
jmp
mov
call
push
lea
push
mov
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
setne
neg
xor
cmp
setne
neg
and
mov
mov
lea
push
lea
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
push
jmp
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
push
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
jmp
push
push
push
mov
push
call
push
lea
push
mov
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
sete
neg
lea
push
lea
push
push
call
add
lea
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
jmp
push
push
mov
push
call
push
lea
push
call
push
call
add
lea
mov
call
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
push
push
call
lea
call
lea
call
lea
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jg
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
push
call
add
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
add
jo
mov
jmp
push
call
jmp
mov
call
push
lea
push
mov
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
setne
neg
xor
cmp
setne
neg
and
mov
lea
push
lea
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
push
jmp
lea
call
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
push
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
jmp
push
push
push
mov
push
call
push
lea
push
mov
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
jmp
push
push
mov
push
call
push
lea
push
call
push
call
add
lea
mov
call
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
push
push
call
lea
call
lea
call
lea
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jg
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
call
mov
neg
sbb
neg
neg
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
test
je
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
push
call
add
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
add
jo
mov
jmp
push
call
jmp
mov
call
push
lea
push
mov
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
setne
neg
xor
cmp
setne
neg
and
mov
lea
push
lea
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
push
jmp
lea
call
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
call
mov
mov
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
add
jo
mov
mov
cmp
jg
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
push
mov
push
call
test
je
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
neg
sbb
neg
neg
mov
push
push
call
neg
sbb
inc
neg
and
mov
lea
call
lea
call
movsx
test
je
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
call
mov
mov
cmp
jne
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
lea
push
call
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
jmp
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
lea
push
push
push
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
jmp
mov
lea
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
lea
push
lea
push
call
mov
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
lea
push
lea
push
push
call
add
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
jmp
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
lea
push
push
lea
push
call
push
push
call
call
lea
call
mov
push
push
lea
push
call
push
push
push
push
lea
push
call
push
mov
push
call
call
lea
push
lea
push
push
call
add
mov
mov
push
call
call
mov
lea
push
push
lea
push
call
push
push
call
call
lea
call
mov
push
push
lea
push
call
push
push
push
push
lea
push
call
push
mov
push
call
call
lea
push
lea
push
push
call
add
mov
mov
push
call
call
mov
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
jmp
lea
push
lea
push
push
call
add
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
movsx
test
jne
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
xor
cmp
sete
neg
and
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
push
push
call
mov
neg
sbb
neg
neg
push
mov
push
push
push
call
neg
sbb
neg
neg
or
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
setne
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
neg
neg
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
lea
lea
call
push
lea
push
call
fstp
lea
call
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
mov
push
lea
push
call
fstp
lea
call
lea
call
lea
call
mov
fwait
push
jmp
lea
call
lea
call
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
lea
push
call
lea
call
mov
movsx
test
jne
mov
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
lea
call
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
mov
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
lea
call
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
mov
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
lea
call
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
mov
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
lea
call
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
mov
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
lea
call
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
mov
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
lea
call
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
mov
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
lea
push
lea
push
push
call
add
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
jmp
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
lea
lea
call
push
lea
push
call
fstp
lea
call
mov
mov
mov
lea
lea
call
push
lea
push
call
fstp
lea
call
mov
lea
push
push
lea
push
call
push
push
call
call
lea
call
mov
push
push
lea
push
call
push
push
push
push
lea
push
call
push
mov
push
call
call
lea
push
lea
push
push
call
add
mov
mov
push
call
call
mov
call
mov
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
mov
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
push
push
call
mov
lea
call
push
push
call
lea
mov
lea
push
lea
push
push
lea
push
push
mov
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
lea
lea
mov
call
lea
push
push
jmp
cmp
jne
mov
lea
lea
mov
call
lea
push
push
jmp
cmp
jne
mov
lea
lea
mov
call
lea
push
push
call
lea
fstp
call
mov
fwait
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
xor
cmp
sete
neg
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
mov
push
lea
push
call
fstp
lea
call
lea
call
lea
call
mov
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
fwait
push
jmp
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
mov
push
call
mov
lea
push
push
call
mov
push
push
push
call
push
lea
push
call
mov
lea
push
push
call
mov
add
push
push
push
call
push
lea
push
call
lea
push
push
call
add
lea
mov
push
call
mov
lea
push
fadd
fstp
fnstsw
test
jne
call
mov
fadd
mov
fstp
fnstsw
test
jne
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
lea
push
push
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
xor
mov
fwait
push
jmp
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
push
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
push
push
push
mov
mov
call
add
lea
call
mov
cmp
jg
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
lea
mov
lea
lea
mov
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
lea
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
push
push
call
add
lea
call
mov
mov
mov
add
jo
mov
jmp
push
jmp
test
je
lea
call
lea
call
lea
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
push
push
call
mov
lea
call
push
push
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
push
push
call
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
mov
add
jo
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
call
mov
mov
lea
push
call
mov
lea
call
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
add
jo
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
add
jo
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
add
jo
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
add
jo
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
jmp
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
lea
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
call
push
lea
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
call
push
lea
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
mov
mov
call
test
je
mov
mov
push
push
call
mov
lea
call
push
push
call
lea
push
push
mov
mov
call
lea
fstp
call
lea
call
mov
fwait
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
push
jmp
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
call
mov
push
push
call
test
jne
mov
push
push
push
push
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
mov
mov
call
mov
lea
lea
push
push
push
call
add
lea
call
cmp
je
mov
mov
push
push
push
push
mov
mov
call
lea
push
push
call
lea
push
push
call
add
push
call
push
lea
push
call
mov
lea
lea
push
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
mov
lea
push
push
mov
mov
call
lea
push
lea
push
push
lea
push
push
mov
mov
call
lea
push
push
call
mov
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
test
je
mov
push
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
mov
lea
lea
push
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
lea
push
lea
push
push
push
call
add
lea
call
test
jne
mov
push
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
push
lea
push
call
mov
lea
lea
push
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
lea
push
lea
push
push
push
call
add
lea
call
test
jne
call
lea
lea
push
lea
push
push
call
mov
xor
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
push
push
call
test
jne
mov
push
push
push
push
mov
mov
call
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
mov
mov
call
mov
lea
lea
push
push
push
call
add
lea
call
test
je
mov
mov
push
push
push
push
mov
mov
call
lea
push
push
call
lea
push
push
call
add
push
call
push
lea
push
call
mov
lea
lea
push
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
mov
lea
push
push
mov
mov
call
lea
push
lea
push
push
lea
push
push
mov
mov
call
lea
push
push
call
mov
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
test
je
mov
push
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
mov
lea
lea
push
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
lea
push
lea
push
push
push
call
add
lea
call
test
jne
call
lea
lea
push
lea
push
push
call
mov
jmp
mov
push
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
push
lea
push
call
mov
lea
lea
push
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
mov
add
lea
call
mov
mov
test
mov
jne
push
push
call
mov
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
mov
mov
call
mov
lea
lea
push
push
push
call
add
lea
call
test
je
mov
mov
test
mov
mov
jne
push
push
call
mov
mov
push
push
push
push
call
lea
push
push
call
push
lea
push
call
mov
add
push
call
lea
push
push
call
mov
lea
lea
push
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
mov
push
lea
xor
push
push
mov
mov
push
lea
push
mov
mov
call
lea
push
push
call
mov
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
test
jne
lea
lea
push
lea
push
push
call
mov
jmp
mov
test
jne
push
push
call
mov
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
lea
lea
push
mov
push
push
call
test
fnclex
jge
push
push
push
mov
push
call
jmp
mov
mov
mov
mov
test
jne
push
push
call
mov
mov
push
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
mov
lea
lea
push
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
fadd
sub
fnstsw
test
jne
fstp
call
mov
lea
call
push
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
fwait
push
jmp
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
lea
call
lea
call
mov
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
lea
call
mov
mov
mov
push
call
mov
mov
push
push
call
test
jne
mov
push
mov
mov
mov
push
call
mov
push
lea
push
call
push
push
call
mov
call
mov
mov
lea
call
mov
cmp
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
push
push
push
mov
push
call
call
jmp
mov
push
lea
push
call
push
push
call
mov
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
push
call
push
call
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
xor
lea
call
mov
lea
call
lea
push
lea
push
mov
push
call
mov
lea
push
lea
push
push
call
add
mov
push
mov
push
call
push
lea
push
call
push
call
push
lea
push
call
lea
call
mov
cmp
jne
lea
push
push
call
lea
mov
jmp
lea
mov
push
push
push
push
push
mov
mov
push
lea
push
call
add
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
lea
call
lea
push
lea
push
push
call
add
mov
cmp
jne
lea
push
push
call
lea
mov
jmp
lea
mov
push
push
push
mov
mov
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
mov
mov
push
push
call
mov
neg
sbb
inc
mov
push
push
call
neg
sbb
inc
or
test
jne
mov
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
call
mov
mov
push
lea
push
call
push
push
push
mov
push
call
call
mov
push
lea
push
call
lea
call
mov
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
push
push
push
push
call
mov
mov
mov
lea
lea
call
lea
push
call
lea
call
mov
push
mov
mov
mov
push
call
mov
mov
push
push
call
test
jne
mov
mov
mov
mov
push
push
push
mov
push
call
call
mov
mov
push
push
push
mov
push
call
call
mov
push
push
push
push
call
mov
push
mov
mov
mov
push
call
mov
call
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
mov
mov
mov
push
call
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
lea
call
mov
push
call
mov
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
mov
lea
lea
call
lea
call
mov
push
push
lea
push
call
push
lea
push
call
push
lea
push
call
push
call
mov
call
mov
mov
mov
lea
lea
call
lea
call
mov
push
push
lea
push
call
push
push
lea
push
call
push
call
mov
call
mov
mov
lea
call
mov
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
call
mov
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
call
mov
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
call
mov
cmp
je
jmp
mov
mov
mov
lea
push
lea
push
call
movsx
test
je
mov
cmp
je
mov
push
mov
push
call
push
lea
push
call
push
call
push
lea
push
call
lea
call
mov
mov
mov
cmp
jne
lea
push
push
call
lea
mov
jmp
lea
mov
push
push
push
mov
mov
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
cmp
jne
lea
push
push
call
lea
mov
jmp
lea
mov
push
push
push
mov
mov
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
push
push
push
mov
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
push
push
push
push
mov
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
lea
mov
mov
cmp
jne
lea
push
push
call
lea
mov
jmp
lea
mov
push
push
push
mov
mov
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
mov
mov
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
mov
mov
cmp
jne
lea
push
push
call
lea
mov
jmp
lea
mov
push
push
push
mov
mov
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
lea
push
call
add
push
lea
push
call
add
push
call
mov
lea
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
jmp
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
push
mov
push
push
push
call
mov
neg
sbb
inc
push
mov
push
push
push
call
neg
sbb
inc
and
test
jne
mov
mov
mov
mov
push
lea
push
call
mov
mov
lea
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
call
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
mov
lea
mov
mov
push
mov
push
push
push
call
sub
jo
push
lea
push
lea
push
call
lea
lea
call
mov
lea
push
lea
push
call
lea
lea
call
mov
mov
mov
lea
mov
mov
lea
push
push
mov
push
push
push
call
add
jo
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
lea
mov
mov
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
lea
push
mov
push
call
call
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fild
fstp
mov
push
call
fcomp
fnstsw
test
je
mov
jmp
mov
mov
neg
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
jmp
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
push
push
push
mov
push
call
call
mov
push
mov
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
push
lea
push
push
call
add
lea
call
lea
push
lea
push
lea
push
push
call
add
mov
push
mov
push
push
push
call
test
je
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
neg
neg
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
jmp
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
xor
cmp
setg
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
xor
cmp
sete
neg
or
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
lea
push
call
push
push
lea
push
call
push
mov
push
call
call
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
mov
mov
lea
lea
call
push
lea
push
call
fstp
lea
call
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
push
mov
push
call
test
je
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
neg
sbb
neg
neg
mov
push
push
call
neg
sbb
inc
neg
and
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
add
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
add
jo
mov
lea
push
mov
add
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
add
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
jne
jmp
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
jmp
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
lea
call
lea
call
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
push
call
neg
sbb
inc
neg
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
mov
push
push
call
test
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
mov
push
push
call
test
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
mov
push
push
call
test
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
add
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
add
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
movsx
test
jne
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
cdq
mov
idiv
mov
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
call
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
cdq
mov
idiv
mov
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
call
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
cdq
mov
idiv
mov
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
call
mov
mov
push
push
call
test
je
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
jmp
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
lea
push
fld
fmul
fnstsw
test
jne
push
fstp
lea
push
lea
push
lea
push
call
push
call
push
fstp
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
fwait
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
call
ret
lea
push
lea
push
push
call
add
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
mov
cdq
mov
idiv
test
jne
mov
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
mov
lea
lea
call
lea
push
lea
push
push
call
add
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
mov
mov
xor
cmp
setne
neg
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
mov
lea
call
movsx
test
je
mov
lea
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
call
lea
push
call
mov
lea
push
lea
push
push
call
add
mov
xor
lea
call
mov
lea
call
lea
push
lea
push
mov
push
call
mov
lea
push
lea
push
push
call
add
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
lea
push
call
push
push
push
mov
push
call
call
lea
push
lea
push
push
call
add
lea
call
lea
call
mov
push
mov
mov
mov
push
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
call
mov
mov
mov
xor
cmp
sete
neg
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
not
mov
lea
call
movsx
test
jne
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
mov
lea
lea
call
lea
push
lea
push
push
call
add
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
mov
mov
xor
cmp
setne
neg
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
mov
lea
call
movsx
test
je
mov
lea
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
call
lea
push
call
mov
lea
push
lea
push
push
call
add
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
mov
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
mov
push
lea
push
call
push
push
push
mov
push
call
call
mov
push
lea
push
call
lea
call
mov
mov
mov
mov
push
lea
push
call
mov
mov
lea
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
call
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
mov
push
mov
push
push
push
call
test
je
mov
push
lea
push
call
push
push
push
mov
push
call
call
lea
call
mov
push
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
push
lea
push
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
jmp
mov
push
lea
push
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
lea
mov
mov
lea
push
push
mov
push
push
push
call
add
jo
push
lea
push
lea
push
call
lea
push
push
lea
push
lea
push
call
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
push
call
add
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
mov
push
call
call
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
lea
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
mov
lea
push
mov
push
call
call
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fild
fstp
mov
push
call
fcomp
fnstsw
test
je
mov
jmp
mov
mov
neg
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
jmp
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
push
push
push
mov
push
call
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
mov
push
push
push
mov
push
call
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
mov
push
push
push
mov
push
call
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
mov
push
lea
push
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
mov
push
lea
push
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
push
lea
push
call
push
push
lea
push
call
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
mov
push
push
push
mov
push
call
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
mov
push
push
push
mov
push
call
call
mov
push
lea
push
call
push
push
push
push
call
mov
call
mov
mov
lea
call
mov
cmp
je
mov
push
push
push
mov
push
call
call
mov
push
lea
push
call
push
push
push
push
call
mov
call
mov
mov
lea
call
mov
cmp
je
mov
push
push
push
mov
push
call
call
mov
mov
push
push
call
neg
sbb
neg
neg
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
mov
push
push
call
neg
sbb
neg
neg
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
fwait
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
lea
push
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
push
lea
push
call
push
mov
push
push
call
mov
call
mov
mov
lea
call
mov
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
push
mov
push
lea
push
call
push
mov
push
call
call
mov
push
lea
push
call
lea
call
mov
push
mov
push
push
push
call
test
je
mov
lea
push
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
mov
xor
lea
call
mov
lea
call
lea
push
lea
push
mov
push
call
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
push
mov
mov
mov
push
call
mov
lea
push
mov
push
call
call
mov
lea
push
mov
push
call
call
mov
mov
sub
jo
sub
jo
mov
mov
lea
lea
call
mov
mov
sub
jo
add
jo
mov
mov
mov
imul
jo
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
mov
mov
push
push
push
mov
push
call
call
mov
mov
push
push
push
mov
push
call
call
mov
lea
push
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
lea
push
mov
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
movsx
test
jne
mov
lea
push
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
jmp
mov
lea
push
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
push
call
neg
sbb
neg
neg
mov
lea
call
lea
call
lea
call
movsx
test
je
mov
push
mov
mov
mov
push
call
mov
push
push
push
mov
push
call
call
jmp
mov
lea
push
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
mov
push
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
push
push
push
mov
push
call
call
jmp
mov
lea
push
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
call
movsx
test
je
mov
push
push
push
mov
push
call
call
mov
cmp
jne
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
call
ret
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
fld
cmp
jne
fdiv
jmp
push
push
call
mov
mov
mov
mov
fnstsw
test
jne
call
add
lea
jo
sub
lea
jo
mov
mov
call
fwait
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
call
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
or
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
or
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
lea
push
lea
push
push
lea
push
push
mov
mov
mov
mov
call
push
lea
push
call
lea
lea
push
push
push
mov
call
add
cmp
je
mov
mov
push
jmp
lea
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
or
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
sub
mov
mov
or
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
mov
lea
call
lea
call
mov
push
lea
push
push
call
mov
push
push
call
call
mov
lea
push
push
call
lea
call
lea
push
push
call
lea
push
call
mov
lea
call
lea
call
mov
push
lea
push
push
call
mov
push
push
call
call
mov
lea
push
push
call
lea
call
lea
mov
mov
mov
lea
lea
push
push
mov
call
lea
lea
push
push
mov
mov
call
lea
push
lea
push
push
lea
push
push
mov
mov
call
lea
push
push
call
mov
lea
lea
push
lea
push
push
push
call
add
cmp
je
lea
lea
lea
mov
push
push
mov
mov
call
lea
lea
push
push
mov
mov
call
lea
push
lea
push
push
lea
push
push
mov
mov
call
lea
push
push
call
mov
lea
lea
push
lea
push
push
push
call
add
cmp
je
mov
mov
mov
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
mov
push
mov
mov
mov
mov
call
mov
mov
mov
call
mov
push
push
push
call
call
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
push
push
call
mov
mov
lea
call
mov
push
push
call
mov
lea
call
push
call
mov
mov
call
lea
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
push
mov
mov
push
call
call
mov
mov
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
mov
mov
call
lea
push
lea
push
push
mov
call
add
mov
mov
lea
lea
call
push
push
lea
push
mov
push
lea
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
mov
push
push
call
mov
call
mov
xor
mov
cmp
jg
mov
cmp
je
cmp
jne
movsx
sub
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
push
call
call
mov
lea
push
call
mov
mov
lea
push
lea
push
call
mov
mov
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
test
je
mov
test
je
cmp
jne
movsx
sub
cmp
jb
call
shl
jmp
call
mov
mov
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
mov
lea
call
lea
call
mov
add
jo
mov
xor
jmp
mov
mov
lea
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
lea
lea
call
push
push
lea
push
mov
push
lea
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
mov
cmp
je
cmp
jne
mov
neg
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
push
push
call
mov
call
mov
mov
mov
cmp
jg
mov
test
je
cmp
jne
movsx
sub
cmp
jb
call
mov
lea
jmp
call
mov
push
mov
mov
push
call
call
push
call
call
mov
sub
jo
mov
movsx
xor
cmp
setne
mov
sub
jo
movsx
xor
cmp
setne
or
je
mov
add
jo
mov
jmp
mov
mov
test
je
cmp
jne
movsx
sub
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
push
call
call
mov
call
fwait
push
jmp
lea
call
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
call
lea
push
push
mov
call
lea
push
push
call
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
push
mov
mov
mov
mov
mov
lea
push
call
mov
lea
push
call
mov
mov
lea
call
mov
lea
call
mov
push
lea
push
push
call
mov
push
mov
push
call
mov
call
mov
lea
push
push
call
lea
call
mov
lea
mov
lea
push
lea
push
push
mov
call
lea
push
call
mov
lea
call
lea
call
push
jmp
test
je
lea
call
lea
call
lea
call
ret
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
call
mov
call
mov
mov
mov
call
mov
call
mov
sub
jo
cmp
jg
mov
call
jmp
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
lea
push
push
call
push
lea
push
push
call
push
push
push
call
mov
call
lea
lea
push
push
push
call
add
test
je
mov
add
jo
test
mov
jne
mov
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
push
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
mov
mov
call
lea
lea
push
push
push
mov
call
add
lea
call
mov
push
cmp
push
push
je
mov
push
call
lea
push
push
call
lea
push
push
call
add
push
call
push
lea
push
call
mov
lea
lea
push
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
lea
push
lea
push
push
push
call
add
lea
call
cmp
je
mov
add
jo
mov
lea
lea
push
lea
push
push
call
mov
mov
jmp
mov
push
call
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
movsx
mov
xor
cmp
lea
sete
lea
push
neg
push
push
mov
call
add
lea
call
cmp
je
mov
push
jmp
lea
call
lea
lea
push
lea
push
push
push
call
add
lea
call
ret
lea
lea
push
push
push
call
add
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
setge
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
mov
mov
mov
xor
cmp
sete
neg
mov
mov
lea
push
lea
push
lea
push
lea
push
call
lea
lea
call
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
call
call
fstp
mov
push
call
call
call
fcomp
fnstsw
test
je
mov
jmp
mov
mov
neg
mov
mov
lea
push
lea
push
lea
push
lea
push
call
lea
lea
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
push
call
neg
sbb
inc
neg
mov
mov
lea
push
lea
push
lea
push
lea
push
call
lea
lea
call
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
call
call
fstp
mov
push
call
call
fmul
fnstsw
test
jne
call
fcomp
fnstsw
test
je
mov
jmp
mov
mov
neg
mov
mov
lea
push
lea
push
lea
push
lea
push
call
lea
lea
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
xor
cmp
setge
neg
mov
mov
lea
push
lea
push
lea
push
lea
push
call
lea
push
call
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
sete
neg
mov
mov
mov
mov
xor
cmp
sete
neg
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
movsx
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
lea
lea
call
jmp
jmp
mov
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
mov
mov
add
jo
mov
mov
mov
lea
push
mov
movsx
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
movsx
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
sub
jo
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
jmp
mov
push
mov
mov
mov
push
call
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
setge
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
add
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
fadd
fnstsw
test
jne
sub
fstp
call
mov
lea
call
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
call
fild
fstp
fmul
fnstsw
test
jne
call
fadd
fnstsw
test
jne
call
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
neg
neg
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
lea
push
lea
push
push
call
add
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
add
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
fadd
fnstsw
test
jne
sub
fstp
call
mov
lea
call
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
jmp
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
mov
mov
mov
lea
lea
call
jmp
mov
call
mov
xor
test
je
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
push
call
neg
sbb
inc
neg
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
neg
neg
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
add
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
fadd
fnstsw
test
jne
sub
fstp
call
mov
lea
call
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
jmp
jmp
mov
mov
mov
lea
lea
call
jmp
mov
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
jmp
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
add
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
add
jo
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
movsx
xor
cmp
setg
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
jmp
jmp
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
lea
lea
call
jmp
mov
call
mov
xor
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
add
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
lea
push
lea
push
push
call
add
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
add
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
add
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
add
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
add
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
fadd
fnstsw
test
jne
sub
fstp
call
mov
lea
call
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
add
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
call
mov
mov
push
call
call
mov
mov
cdq
idiv
neg
sbb
inc
neg
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
add
jo
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
movsx
xor
cmp
setg
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
fwait
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
push
push
push
push
mov
call
lea
call
lea
call
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
push
push
call
lea
call
lea
call
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
push
push
call
lea
call
lea
call
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
push
push
call
lea
call
lea
call
xor
mov
cmp
jg
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
test
je
push
call
mov
lea
call
push
push
push
push
call
lea
call
mov
add
jo
mov
jmp
mov
push
call
push
lea
push
mov
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
call
mov
lea
call
push
push
push
push
call
lea
call
lea
call
push
call
mov
test
jne
push
push
call
mov
mov
push
call
push
lea
push
call
mov
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
push
call
fmul
fnstsw
test
jne
call
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
call
lea
push
lea
push
push
call
add
mov
push
push
call
fnclex
test
jge
push
push
push
push
call
call
push
lea
push
mov
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
setne
neg
mov
mov
lea
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
push
call
push
lea
push
call
mov
mov
push
call
mov
lea
call
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
call
lea
mov
call
mov
push
call
push
lea
push
call
mov
mov
push
call
fnclex
test
jge
push
push
push
push
call
lea
call
call
fwait
push
jmp
lea
call
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
push
mov
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
mov
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
jmp
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
push
mov
push
call
push
lea
push
mov
call
push
call
add
lea
mov
call
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
lea
push
call
lea
call
lea
call
lea
call
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
push
push
call
lea
call
lea
call
lea
call
push
call
test
push
jne
lea
push
call
lea
mov
mov
lea
push
lea
push
call
mov
mov
lea
push
lea
push
call
mov
lea
call
test
je
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
mov
push
push
lea
push
mov
push
lea
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
call
lea
push
lea
push
push
call
add
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
lea
push
lea
push
push
call
fnclex
mov
test
jge
push
push
push
push
call
mov
mov
mov
push
lea
push
call
mov
test
je
cmp
jne
mov
neg
mov
cmp
jb
call
mov
mov
shl
jmp
call
mov
mov
add
mov
mov
lea
push
lea
push
call
lea
push
call
mov
lea
push
lea
push
call
push
push
mov
mov
push
call
fnclex
test
jge
push
push
push
push
call
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
lea
push
lea
push
push
call
fnclex
mov
test
jge
push
push
push
push
call
mov
mov
mov
push
lea
push
call
mov
test
je
cmp
jne
mov
sub
cmp
jb
call
mov
lea
jmp
call
mov
mov
add
mov
mov
lea
push
lea
push
call
lea
push
call
mov
mov
lea
push
lea
push
call
push
push
mov
mov
push
call
fnclex
test
jge
push
push
push
push
call
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
call
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
push
lea
push
push
call
add
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
push
push
call
fnclex
test
jge
push
push
push
push
mov
call
jmp
mov
lea
push
lea
push
push
call
add
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
push
lea
push
push
call
add
jmp
mov
call
push
lea
push
mov
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
setne
neg
xor
cmp
setne
neg
and
mov
mov
lea
push
lea
push
push
call
add
test
je
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
push
jmp
lea
push
call
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
push
call
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
push
push
mov
push
call
push
lea
push
mov
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
mov
push
push
call
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
jmp
cmp
jne
push
push
call
mov
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
mov
push
push
call
mov
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
mov
push
push
call
mov
push
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
push
lea
push
call
push
call
lea
mov
call
lea
push
lea
push
push
call
add
lea
call
push
push
mov
push
call
push
lea
push
call
push
call
add
lea
call
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
push
push
call
lea
call
lea
call
lea
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jg
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
call
mov
neg
sbb
inc
neg
mov
push
push
call
neg
sbb
inc
neg
or
mov
push
push
call
neg
sbb
inc
neg
or
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
push
call
add
test
je
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
mov
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
push
call
add
mov
add
jo
mov
jmp
push
call
jmp
mov
call
push
lea
push
mov
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
setne
neg
xor
cmp
setne
neg
and
mov
mov
lea
push
lea
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
lea
lea
call
lea
push
lea
push
call
lea
push
call
mov
mov
mov
cmp
jne
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
push
lea
push
mov
call
push
call
lea
mov
call
lea
push
lea
push
lea
push
push
call
add
mov
test
jne
push
push
call
mov
push
push
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
mov
test
jne
push
push
call
mov
mov
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
mov
call
lea
push
lea
push
push
call
add
lea
call
mov
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
push
push
call
lea
call
lea
call
jmp
mov
call
push
lea
push
mov
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
setne
neg
xor
cmp
setne
neg
and
mov
lea
push
lea
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
lea
push
mov
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
push
jmp
lea
call
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
call
mov
mov
mov
mov
push
call
mov
call
mov
mov
mov
push
mov
sub
jo
push
mov
push
call
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
push
call
neg
sbb
neg
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
push
call
neg
sbb
neg
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
push
call
neg
sbb
neg
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
push
call
neg
sbb
neg
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
push
call
neg
sbb
neg
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
lea
push
mov
lea
call
push
call
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
push
call
neg
sbb
inc
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
mov
mov
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
jmp
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
mov
push
call
mov
lea
push
push
call
mov
push
push
push
call
push
lea
push
call
mov
lea
push
push
call
mov
add
push
push
push
call
push
lea
push
call
lea
push
push
call
add
lea
mov
push
call
mov
lea
push
fadd
fstp
fnstsw
test
jne
call
mov
fadd
mov
fstp
fnstsw
test
jne
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
lea
push
push
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
xor
mov
fwait
push
jmp
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
push
mov
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
mov
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
lea
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
mov
mov
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
call
ret
lea
push
lea
push
push
call
add
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
movsx
test
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
lea
push
push
call
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
lea
push
push
call
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
jmp
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
mov
call
mov
mov
mov
call
sub
jo
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
lea
push
lea
push
call
push
call
mov
lea
call
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
neg
neg
mov
lea
push
lea
push
push
call
add
movsx
test
je
mov
lea
push
call
push
call
mov
lea
call
mov
mov
mov
lea
push
mov
lea
call
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
lea
push
call
push
call
mov
lea
call
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
call
mov
lea
call
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
call
mov
lea
call
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
push
lea
push
call
push
lea
push
call
push
push
call
mov
call
mov
mov
mov
lea
lea
call
lea
call
mov
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
push
mov
push
lea
push
call
push
lea
push
call
push
call
call
mov
push
lea
push
call
lea
call
mov
push
mov
push
push
push
call
test
je
mov
lea
push
lea
push
call
push
call
call
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
call
jmp
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
mov
lea
call
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
mov
mov
lea
push
lea
push
call
movsx
test
je
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
lea
lea
call
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
jmp
mov
add
jo
mov
mov
cmp
jl
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
mov
push
call
neg
sbb
inc
neg
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
lea
call
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
jmp
mov
jmp
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
call
not
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
jne
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
lea
call
mov
mov
mov
push
call
mov
push
mov
push
push
push
call
mov
mov
cmp
jne
jmp
mov
mov
add
jo
push
mov
push
push
push
call
mov
mov
cmp
jne
jmp
mov
mov
add
jo
mov
mov
mov
sub
jo
mov
mov
mov
sub
jo
mov
mov
lea
mov
mov
lea
push
mov
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
lea
call
mov
mov
mov
push
call
mov
push
mov
push
push
push
call
test
jne
jmp
mov
push
mov
push
push
push
call
add
jo
mov
mov
lea
lea
call
mov
push
mov
push
push
push
call
mov
sub
jo
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
push
push
call
test
je
mov
mov
lea
call
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
lea
mov
mov
call
mov
mov
push
push
mov
mov
call
test
jne
mov
lea
call
mov
push
push
call
test
jne
mov
lea
call
mov
push
push
call
test
jne
mov
lea
call
mov
push
push
call
test
jne
mov
lea
call
mov
push
push
call
test
jne
mov
lea
call
mov
push
push
call
test
jne
mov
lea
call
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
push
lea
push
call
push
mov
push
push
call
mov
call
mov
mov
lea
call
mov
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
push
mov
push
lea
push
call
push
mov
push
call
call
mov
push
lea
push
call
lea
call
mov
push
mov
push
push
push
call
test
je
mov
lea
push
mov
push
call
call
mov
push
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
mov
push
lea
push
call
fstp
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
push
call
mov
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
call
mov
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
call
mov
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
call
mov
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
push
call
push
lea
push
lea
push
call
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
mov
add
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
push
lea
push
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
xor
cmp
sete
neg
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
fstp
lea
call
lea
call
mov
call
mov
call
mov
mov
mov
lea
lea
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
push
lea
push
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
jmp
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
call
movsx
test
je
mov
cmp
jne
mov
mov
jmp
mov
push
mov
mov
mov
push
call
mov
push
lea
push
call
push
push
lea
push
call
push
mov
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
lea
push
mov
push
call
call
mov
lea
push
mov
push
call
call
mov
mov
sub
jo
cmp
jne
mov
mov
mov
mov
mov
sub
jo
cmp
jne
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
push
push
lea
push
call
push
mov
push
mov
push
call
mov
call
mov
mov
lea
call
mov
lea
push
mov
push
call
call
mov
lea
push
mov
push
call
call
mov
mov
sub
jo
cmp
jne
mov
mov
mov
mov
lea
lea
call
jmp
mov
cmp
jne
mov
mov
mov
push
push
lea
push
call
push
mov
push
mov
push
call
mov
call
mov
mov
lea
call
mov
lea
push
mov
push
call
call
mov
lea
push
mov
push
call
call
mov
mov
sub
jo
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
push
lea
push
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
mov
lea
lea
call
lea
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
lea
push
call
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
mov
push
call
call
mov
push
mov
mov
mov
push
call
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
call
mov
call
mov
mov
mov
lea
lea
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
add
jo
mov
mov
mov
mov
xor
cmp
sete
neg
mov
mov
lea
push
lea
push
lea
push
lea
push
call
lea
lea
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
mov
lea
push
lea
push
push
call
add
mov
mov
push
push
push
mov
push
call
call
mov
mov
push
push
push
mov
push
call
call
jmp
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
call
movsx
test
je
mov
push
mov
mov
mov
push
call
mov
push
lea
push
call
push
push
push
lea
push
call
push
call
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
push
push
lea
push
call
push
call
call
mov
push
mov
mov
mov
push
call
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
push
mov
mov
mov
push
call
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
lea
push
call
push
push
push
mov
push
call
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
mov
mov
mov
push
call
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
push
mov
mov
mov
push
call
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
call
mov
call
mov
mov
mov
lea
lea
call
mov
push
lea
push
call
push
push
lea
push
call
push
push
mov
push
call
mov
call
mov
mov
mov
lea
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
lea
push
lea
push
call
movsx
test
je
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
jmp
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
mov
push
push
push
mov
push
call
call
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
jmp
mov
push
lea
push
call
push
push
lea
push
call
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
mov
cmp
je
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
jmp
mov
push
lea
push
call
push
push
push
push
call
mov
call
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
mov
call
cmp
je
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
jmp
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
call
movsx
test
je
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
call
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
push
lea
push
call
lea
push
lea
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
push
lea
push
call
mov
push
push
lea
push
lea
push
call
add
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
push
call
add
mov
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
cmp
jne
push
jmp
lea
call
ret
lea
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
jmp
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
call
mov
lea
call
push
call
xor
cmp
push
setg
neg
mov
call
mov
lea
call
push
call
mov
xor
cmp
setl
neg
or
xor
cmp
lea
setne
neg
and
push
mov
lea
push
push
call
add
test
je
call
mov
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
push
mov
push
add
push
jo
mov
mov
push
call
call
mov
cmp
jl
mov
mov
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
call
mov
lea
call
push
call
xor
cmp
push
setg
neg
mov
call
mov
lea
call
push
call
mov
xor
cmp
setl
neg
or
xor
cmp
lea
setne
neg
and
push
mov
lea
push
push
call
add
test
je
call
mov
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
call
mov
lea
call
push
call
xor
cmp
push
setg
neg
mov
call
mov
lea
call
push
call
mov
xor
cmp
setl
neg
or
xor
cmp
lea
setne
neg
and
push
mov
lea
push
push
call
add
test
je
call
mov
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
call
mov
call
mov
mov
mov
call
mov
call
mov
sub
jo
cmp
jg
mov
call
jmp
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
push
push
mov
mov
mov
mov
mov
call
push
lea
push
call
lea
push
push
call
add
push
call
mov
lea
call
lea
call
lea
call
push
jmp
test
je
lea
call
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
mov
mov
mov
mov
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
mov
call
lea
call
push
jmp
test
je
lea
call
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
mov
call
mov
push
call
lea
push
push
call
mov
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
call
movsx
mov
fild
fstp
fmul
fnstsw
test
jne
call
lea
mov
call
lea
call
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
call
lea
push
push
call
mov
mov
lea
mov
push
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
push
push
call
mov
mov
lea
call
push
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
add
push
mov
jo
push
mov
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
push
push
call
mov
lea
call
push
call
mov
lea
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
fwait
push
jmp
test
je
lea
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
sub
mov
or
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
push
call
mov
lea
call
mov
push
push
push
call
lea
push
push
call
push
call
add
lea
call
lea
mov
push
push
mov
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
push
jmp
test
je
lea
call
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
mov
mov
mov
mov
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
lea
mov
push
push
mov
call
lea
call
sub
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
push
jmp
test
je
lea
call
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
mov
push
lea
push
call
mov
lea
call
push
push
call
neg
sbb
neg
neg
mov
lea
push
lea
push
push
call
add
lea
call
lea
call
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
lea
call
push
push
push
push
call
lea
push
lea
push
push
call
add
lea
call
mov
push
call
movsx
test
jne
mov
push
lea
push
call
mov
push
mov
push
push
push
call
test
je
mov
mov
mov
lea
mov
mov
lea
push
push
mov
push
push
push
call
add
jo
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
mov
push
push
push
call
test
je
mov
mov
mov
lea
mov
mov
lea
push
push
mov
push
push
push
call
add
jo
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
setge
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
lea
call
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
mov
mov
lea
push
push
call
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
lea
push
call
fstp
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
fld
fmul
fnstsw
test
jne
push
fstp
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
lea
call
fwait
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
call
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
lea
call
push
push
push
push
call
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
sub
jo
mov
mov
mov
lea
call
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
push
push
call
add
lea
push
lea
push
push
call
add
lea
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
push
push
call
add
lea
push
lea
push
push
call
add
lea
call
mov
push
call
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
call
mov
lea
push
push
call
mov
mov
lea
mov
push
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
call
mov
lea
call
push
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
push
jmp
test
je
lea
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
lea
call
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
mov
mov
lea
push
push
call
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
add
jo
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
call
cmp
jge
push
push
push
push
call
lea
call
lea
mov
push
mov
call
mov
push
fstp
call
push
lea
push
call
sub
mov
fld
mov
mov
fmul
mov
mov
mov
mov
mov
push
mov
mov
mov
fnstsw
test
jne
fstp
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
lea
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
sub
jo
mov
lea
call
mov
mov
lea
push
push
push
call
test
jge
push
push
push
push
call
lea
call
sub
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
fwait
push
jmp
lea
lea
push
push
push
call
add
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
call
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
setg
neg
mov
lea
call
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
lea
call
push
mov
push
call
mov
mov
lea
push
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
xor
cmp
setge
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
sub
jo
mov
mov
lea
call
mov
lea
push
mov
mov
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
call
cmp
jge
mov
push
push
push
push
call
jmp
mov
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
sub
jo
xor
cmp
setl
neg
mov
call
test
je
mov
mov
add
lea
jo
push
push
push
mov
call
test
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
call
cmp
jge
push
push
push
push
call
mov
lea
call
mov
cmp
jle
mov
sub
lea
jo
push
push
push
mov
call
cmp
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
push
call
mov
neg
sbb
neg
neg
lea
call
lea
call
lea
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
push
call
push
push
mov
push
call
push
lea
push
mov
call
push
call
add
lea
call
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
lea
call
lea
call
mov
push
call
push
lea
push
call
mov
cmp
jne
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
push
call
fnclex
cmp
jge
push
push
push
push
call
lea
push
lea
push
push
call
add
mov
push
call
push
lea
push
mov
call
mov
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
push
call
fnclex
cmp
jge
push
push
push
push
call
lea
push
lea
push
lea
push
push
call
add
call
cmp
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
mov
mov
push
call
fnclex
cmp
jge
push
push
push
push
call
lea
call
cmp
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
push
call
fnclex
cmp
jge
push
push
push
push
call
lea
push
lea
push
lea
push
push
call
add
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
mov
lea
push
push
push
lea
push
call
push
call
call
lea
call
lea
call
cmp
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
mov
mov
push
call
fnclex
cmp
jge
push
push
push
push
call
lea
call
cmp
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
fnclex
cmp
jge
push
push
mov
push
push
call
lea
mov
call
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
mov
lea
push
push
push
lea
push
call
push
call
call
lea
call
lea
call
call
push
jmp
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
mov
mov
mov
mov
call
mov
push
lea
push
call
mov
lea
push
push
call
mov
add
push
push
push
call
push
lea
push
call
lea
push
push
call
mov
add
fld
fcomp
mov
fnstsw
test
jne
mov
lea
push
call
fcomp
fnstsw
test
jne
mov
jmp
xor
mov
fld
fcomp
fnstsw
test
je
mov
jmp
xor
lea
push
call
mov
fcomp
fnstsw
test
jne
mov
jmp
xor
mov
neg
neg
and
neg
and
neg
and
lea
mov
lea
push
push
push
call
lea
lea
push
push
push
call
add
test
je
mov
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
push
call
call
lea
call
lea
call
jmp
mov
lea
push
push
call
test
jge
push
push
push
push
call
lea
call
call
call
mov
fwait
push
jmp
lea
lea
push
push
push
call
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
call
mov
mov
push
push
push
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
push
mov
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
call
lea
push
push
call
mov
mov
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
push
mov
mov
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
call
lea
push
push
call
mov
mov
push
push
push
mov
call
push
lea
push
call
lea
push
push
call
add
push
call
push
mov
mov
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
mov
push
push
push
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
push
mov
mov
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
sub
mov
mov
mov
xor
push
mov
mov
mov
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
mov
test
mov
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
sub
mov
mov
lea
jo
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
call
lea
mov
call
test
je
mov
push
call
lea
push
push
call
mov
mov
test
mov
mov
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
push
mov
push
mov
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
push
call
mov
jmp
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
mov
lea
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
call
mov
lea
push
push
call
test
jge
push
push
push
push
call
lea
call
mov
fwait
push
jmp
lea
call
lea
lea
push
push
push
call
add
lea
call
ret
lea
lea
push
push
push
call
add
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
call
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
call
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
mov
mov
mov
call
mov
push
lea
push
call
push
call
add
lea
call
mov
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
call
mov
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
xor
cmp
lea
sete
neg
mov
call
test
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
or
jmp
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
xor
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
call
mov
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
xor
cmp
lea
sete
neg
mov
call
test
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
or
jmp
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
xor
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
call
mov
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
xor
cmp
lea
sete
neg
mov
call
test
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
or
jmp
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
xor
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
push
mov
call
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
call
sub
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
push
call
mov
lea
call
mov
test
jne
push
push
call
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
xor
cmp
lea
sete
neg
mov
call
cmp
je
mov
lea
push
push
call
test
jge
push
push
push
push
call
mov
push
push
call
sub
mov
mov
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
call
lea
call
sub
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
test
jne
push
push
call
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
xor
cmp
lea
sete
neg
mov
call
cmp
je
mov
jmp
xor
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
sub
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
call
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
call
push
lea
push
call
lea
push
push
call
add
lea
lea
mov
push
push
push
push
call
push
call
call
lea
call
lea
call
mov
push
push
push
call
lea
push
push
call
push
lea
push
call
add
lea
push
push
push
push
call
push
call
call
lea
call
lea
call
call
mov
push
push
push
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
push
call
neg
sbb
lea
neg
neg
mov
call
lea
call
lea
call
cmp
je
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
push
push
call
sub
mov
jo
sub
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
sub
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
lea
lea
mov
push
push
push
push
call
push
call
call
lea
call
lea
call
mov
push
call
push
lea
push
call
mov
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
lea
push
mov
mov
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
mov
add
push
push
call
lea
mov
push
push
mov
call
lea
call
mov
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
sub
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
push
call
lea
push
push
call
mov
lea
push
push
call
add
push
call
mov
lea
call
push
push
push
call
sub
mov
jo
sub
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
call
push
lea
push
call
lea
push
push
call
add
lea
lea
mov
push
push
push
push
call
push
call
call
lea
call
lea
call
mov
push
push
push
call
lea
push
push
call
push
lea
push
call
add
lea
push
push
push
push
call
push
call
call
lea
call
lea
call
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
push
push
call
add
mov
jo
sub
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
push
push
call
mov
push
push
push
mov
call
push
lea
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
call
sub
mov
jo
sub
jo
sub
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
push
push
call
lea
push
push
call
push
lea
push
call
add
lea
lea
push
push
push
push
mov
call
push
call
call
mov
lea
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
lea
push
push
push
push
jmp
mov
test
jne
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
sub
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
call
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
call
push
lea
push
call
lea
push
push
call
add
lea
lea
mov
push
push
push
push
call
push
call
call
lea
call
lea
call
mov
push
push
push
call
lea
push
push
call
push
lea
push
call
add
lea
push
push
push
push
call
push
call
call
lea
call
lea
call
call
mov
lea
push
push
call
test
jge
push
push
push
push
call
mov
push
push
call
sub
mov
mov
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
call
lea
call
sub
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
test
jne
push
push
call
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
xor
cmp
lea
sete
neg
mov
call
cmp
je
mov
jmp
xor
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
sub
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
call
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
call
push
lea
push
call
lea
push
push
call
add
lea
lea
mov
push
push
push
push
call
push
call
call
lea
call
lea
call
mov
push
push
push
call
lea
push
push
call
push
lea
push
call
add
lea
push
push
push
push
call
push
call
call
lea
call
lea
call
call
xor
sub
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
push
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
call
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
call
jmp
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
push
push
call
neg
sbb
lea
neg
neg
mov
call
lea
call
lea
call
cmp
je
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
push
push
call
sub
mov
jo
sub
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
sub
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
lea
lea
mov
push
push
push
push
call
push
call
call
lea
call
lea
call
mov
push
call
push
lea
push
call
mov
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
lea
push
mov
mov
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
push
push
call
mov
add
push
push
call
lea
mov
push
push
mov
call
lea
call
mov
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
sub
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
push
call
lea
push
push
call
mov
lea
push
push
call
add
push
call
mov
lea
call
push
push
push
call
sub
mov
jo
sub
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
call
push
lea
push
call
lea
push
push
call
add
lea
lea
mov
push
push
push
push
call
push
call
call
lea
call
lea
call
mov
push
push
push
call
lea
push
push
call
push
lea
push
call
add
lea
push
push
push
push
call
push
call
call
lea
call
lea
call
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
push
push
call
add
mov
jo
sub
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
push
push
call
mov
push
push
push
mov
call
push
lea
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
call
sub
mov
jo
sub
jo
sub
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
push
push
call
lea
push
push
call
mov
push
lea
push
call
add
lea
lea
mov
push
push
push
push
call
push
call
call
lea
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
lea
push
push
push
push
call
push
call
call
lea
call
lea
call
call
sub
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
call
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
call
push
lea
push
call
lea
push
push
call
add
lea
lea
mov
push
push
push
push
call
push
call
mov
call
lea
call
jmp
mov
test
jne
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
sub
mov
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
mov
push
push
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
push
call
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
call
push
lea
push
call
lea
push
push
call
add
lea
lea
mov
push
push
push
push
call
push
call
mov
call
lea
call
lea
call
mov
push
push
push
push
call
call
push
jmp
test
je
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
lea
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
add
call
mov
mov
lea
call
mov
mov
add
call
mov
mov
lea
call
mov
mov
add
call
mov
mov
lea
call
mov
mov
add
call
mov
mov
lea
call
mov
mov
add
call
lea
mov
push
mov
call
fstp
fld
fmul
fnstsw
test
jne
call
fadd
fnstsw
test
jne
call
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
call
cmp
je
lea
mov
push
mov
call
fmul
fnstsw
test
jne
call
mov
cmp
jb
call
mov
mov
push
mov
push
call
mov
lea
call
lea
call
lea
lea
push
lea
push
push
call
jmp
mov
lea
call
fwait
push
jmp
test
je
lea
call
lea
call
ret
lea
lea
push
push
push
call
add
lea
call
lea
call
lea
lea
push
push
mov
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
push
lea
push
call
add
push
call
mov
lea
call
mov
push
mov
push
call
sub
mov
mov
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
call
sub
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
call
lea
lea
push
push
push
call
add
lea
call
mov
push
push
push
call
push
lea
push
call
push
call
add
lea
call
push
jmp
lea
call
lea
lea
push
push
push
call
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
push
call
mov
push
lea
push
push
call
push
mov
push
call
mov
call
mov
lea
push
push
call
push
mov
push
push
mov
call
lea
lea
push
push
push
call
add
lea
call
mov
push
lea
call
push
call
mov
mov
lea
call
mov
mov
push
push
push
call
mov
lea
mov
call
lea
call
mov
push
call
mov
mov
lea
lea
mov
push
lea
push
lea
push
push
mov
mov
mov
call
lea
lea
push
push
mov
mov
call
mov
lea
lea
push
push
push
call
add
test
je
sub
jo
jmp
lea
push
lea
lea
push
push
mov
mov
call
lea
lea
push
push
call
lea
push
call
mov
lea
call
lea
lea
push
push
push
call
add
push
jmp
test
je
lea
call
lea
lea
push
push
push
call
add
lea
call
lea
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
mov
pop
pop
mov
mov
xor
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
call
call
mov
mov
mov
lea
lea
call
push
lea
push
call
fstp
lea
call
mov
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
mov
mov
push
lea
push
call
fstp
lea
push
lea
push
push
call
add
lea
call
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
lea
call
mov
lea
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
lea
call
mov
lea
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
lea
call
mov
lea
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
push
push
call
test
je
mov
mov
push
call
call
mov
jmp
mov
mov
mov
mov
push
push
call
test
je
mov
mov
push
call
mov
jmp
mov
mov
mov
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
call
ret
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
lea
push
push
push
call
lea
push
call
mov
mov
lea
call
lea
lea
push
push
push
call
mov
mov
add
lea
mov
push
push
call
push
mov
push
call
mov
push
lea
push
push
call
push
lea
push
push
call
mov
push
lea
mov
push
push
call
mov
push
mov
push
lea
push
call
push
call
mov
call
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
push
push
call
mov
mov
push
push
call
mov
lea
mov
lea
push
lea
push
push
mov
call
push
push
push
push
lea
push
lea
push
push
call
push
call
mov
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
push
jmp
test
je
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
lea
call
mov
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
mov
call
lea
call
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
push
push
lea
push
call
lea
push
call
push
lea
push
call
lea
call
mov
push
push
lea
push
call
lea
push
call
push
lea
push
call
lea
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
mov
mov
mov
lea
mov
mov
push
push
lea
push
lea
push
lea
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
lea
push
lea
push
push
call
add
mov
push
push
mov
push
lea
push
call
add
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
lea
mov
mov
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
mov
mov
lea
lea
call
push
push
lea
push
mov
push
lea
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
mov
push
push
mov
push
lea
push
call
add
push
push
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
lea
lea
call
push
push
lea
push
mov
push
lea
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
push
lea
push
lea
push
call
mov
mov
lea
push
lea
push
call
mov
lea
call
movsx
test
je
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
push
push
call
test
jne
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
push
mov
mov
mov
mov
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
push
push
call
neg
sbb
inc
neg
mov
mov
lea
push
lea
push
lea
push
lea
push
call
lea
push
lea
push
lea
push
call
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
call
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
call
lea
call
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
push
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
mov
push
lea
push
call
fstp
lea
call
lea
call
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
push
push
call
lea
call
lea
call
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
push
call
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
push
call
mov
neg
sbb
neg
neg
mov
push
push
call
neg
sbb
inc
neg
and
mov
lea
call
lea
call
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
lea
call
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
lea
call
mov
lea
mov
mov
lea
mov
mov
push
push
lea
push
lea
push
push
lea
push
call
lea
push
call
mov
lea
call
mov
cmp
jle
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
mov
mov
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
push
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
push
push
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
lea
push
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
push
lea
push
call
mov
lea
call
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
mov
push
lea
push
call
fstp
lea
call
lea
call
lea
call
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
lea
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
call
mov
call
mov
cmp
jne
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
mov
movsx
test
jne
mov
mov
lea
call
lea
push
call
mov
mov
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
call
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
mov
mov
lea
call
lea
push
call
mov
mov
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
call
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
lea
call
lea
push
call
mov
mov
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
call
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
jmp
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
lea
call
lea
push
call
mov
mov
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
call
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
lea
call
jmp
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
lea
call
lea
push
call
mov
mov
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
call
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
mov
mov
lea
call
lea
push
call
mov
mov
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
call
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
jmp
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
lea
call
lea
push
call
mov
mov
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
call
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
lea
call
lea
push
call
mov
mov
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
call
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
lea
call
lea
push
call
mov
mov
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
call
mov
mov
call
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
lea
call
lea
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
push
push
call
test
jne
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
mov
mov
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
lea
lea
call
push
lea
push
call
fstp
lea
call
mov
call
mov
push
call
fstp
mov
push
call
call
fstp
fld
call
fcomp
fnstsw
test
je
mov
jmp
mov
mov
neg
movsx
test
je
mov
mov
lea
call
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
call
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
mov
lea
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
cmp
jne
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
lea
push
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
fstp
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
call
mov
fwait
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
lea
call
lea
lea
push
push
call
lea
push
push
call
lea
fstp
call
lea
call
fwait
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
xor
lea
mov
lea
mov
mov
mov
call
lea
push
push
call
lea
fstp
call
call
mov
fwait
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
mov
mov
mov
mov
mov
jne
mov
lea
call
lea
lea
push
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
mov
mov
call
push
lea
lea
push
push
call
push
call
lea
fstp
call
lea
lea
push
lea
push
push
jmp
cmp
jne
mov
lea
call
lea
lea
push
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
mov
mov
call
push
lea
lea
push
push
call
push
call
lea
fstp
call
lea
lea
push
lea
push
push
jmp
cmp
jne
mov
lea
call
lea
lea
push
push
call
mov
mov
lea
mov
mov
push
lea
push
lea
push
push
mov
mov
call
lea
push
lea
push
push
call
push
call
lea
fstp
call
lea
lea
push
lea
push
push
push
call
add
mov
fwait
push
jmp
lea
call
lea
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
mov
mov
mov
mov
mov
jne
mov
lea
call
lea
lea
push
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
mov
mov
call
push
lea
lea
push
push
call
push
call
lea
fstp
call
lea
lea
push
lea
push
push
jmp
cmp
jne
mov
lea
call
lea
lea
push
push
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
mov
mov
call
push
lea
lea
push
push
call
push
call
lea
fstp
call
lea
lea
push
lea
push
push
jmp
cmp
jne
mov
lea
call
lea
lea
push
push
call
mov
mov
lea
mov
mov
push
lea
push
lea
push
push
mov
mov
call
lea
push
lea
push
push
call
push
call
lea
fstp
call
lea
lea
push
lea
push
push
push
call
add
mov
fwait
push
jmp
lea
call
lea
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
push
lea
push
call
lea
push
call
push
lea
push
call
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
lea
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
lea
push
lea
push
push
call
add
mov
push
lea
push
call
push
jmp
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
push
lea
push
call
lea
push
call
push
lea
push
call
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
mov
push
push
mov
push
lea
push
call
add
push
push
lea
push
lea
push
call
lea
lea
call
lea
call
mov
lea
push
lea
push
call
lea
lea
call
mov
lea
push
call
mov
lea
call
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
push
call
add
ret
lea
call
lea
call
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
push
push
call
test
jne
mov
mov
lea
call
mov
mov
mov
call
jmp
mov
mov
mov
mov
push
call
sub
jo
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
mov
mov
lea
lea
call
push
push
lea
push
mov
push
lea
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
mov
mov
mov
lea
lea
call
cmp
je
mov
cmp
jne
mov
movsx
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
push
push
lea
push
mov
mov
mov
mov
push
lea
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
mov
cmp
je
mov
cmp
jne
mov
xor
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
lea
call
mov
cmp
je
mov
cmp
jne
mov
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
jo
mov
mov
mov
mov
movsx
mov
push
push
call
cmp
jle
mov
mov
mov
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
push
call
add
ret
lea
push
push
call
lea
push
push
call
lea
call
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
cmp
jne
mov
mov
mov
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
push
lea
push
lea
push
call
lea
push
lea
push
call
push
call
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
push
push
lea
push
lea
push
lea
push
call
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
lea
push
lea
push
call
movsx
test
je
mov
mov
push
push
call
mov
lea
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
mov
lea
call
jmp
mov
mov
mov
lea
lea
call
push
push
lea
push
mov
mov
push
lea
push
call
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
push
call
add
mov
mov
push
push
call
mov
call
mov
mov
mov
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
mov
cmp
je
mov
cmp
jne
movsx
mov
sub
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
push
call
mov
movsx
xor
push
lea
push
call
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
jmp
mov
mov
lea
call
push
jmp
mov
and
test
je
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
push
push
call
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
lea
lea
push
push
push
mov
call
lea
lea
mov
mov
call
push
jmp
test
je
lea
call
lea
call
ret
ret
mov
mov
mov
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
lea
lea
call
lea
push
lea
push
call
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
push
push
push
push
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
lea
push
push
push
call
add
mov
lea
mov
mov
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
call
mov
mov
lea
mov
mov
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
call
mov
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
lea
lea
call
lea
push
lea
push
call
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
push
push
push
push
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
call
jmp
mov
push
call
movsx
test
je
mov
push
call
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
lea
lea
call
lea
push
lea
push
call
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
push
push
push
push
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
lea
push
push
push
call
add
mov
lea
mov
mov
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
call
mov
mov
lea
mov
mov
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
push
call
mov
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
lea
lea
call
lea
push
lea
push
call
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
push
push
push
push
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
call
jmp
mov
push
call
movsx
test
je
mov
push
call
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
push
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
mov
add
lea
push
push
call
mov
mov
call
mov
lea
mov
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
mov
add
push
push
push
call
mov
call
mov
lea
mov
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
mov
push
push
call
mov
push
push
push
push
call
mov
call
mov
push
push
mov
call
mov
mov
lea
call
push
call
mov
lea
push
mov
call
lea
call
lea
call
mov
lea
lea
push
mov
mov
push
call
mov
lea
call
push
call
mov
lea
call
lea
call
mov
push
push
call
lea
mov
push
mov
call
lea
call
mov
push
call
call
lea
lea
push
push
mov
call
push
jmp
test
je
lea
call
lea
call
lea
lea
push
push
push
call
add
ret
lea
lea
push
push
mov
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
lea
push
rep
xor
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
push
push
call
mov
mov
call
mov
push
mov
call
mov
push
push
push
push
call
mov
call
mov
push
mov
call
push
push
mov
push
push
call
mov
call
mov
push
mov
call
mov
push
push
push
push
call
mov
call
mov
mov
lea
mov
push
push
push
push
call
mov
call
mov
push
sub
mov
jo
push
push
push
push
push
push
mov
call
mov
push
sub
jo
push
push
push
push
push
push
call
mov
push
sub
jo
push
push
push
push
push
push
call
mov
add
lea
push
push
call
mov
call
mov
push
push
push
call
mov
call
mov
push
push
push
push
push
mov
call
mov
call
mov
sub
jo
mov
mov
xor
cmp
jg
mov
lea
push
call
mov
push
push
push
push
call
call
lea
push
call
lea
lea
push
push
push
mov
push
mov
push
call
call
mov
lea
push
mov
lea
push
push
push
push
call
call
cmp
je
mov
push
call
mov
lea
lea
push
push
push
call
mov
mov
push
mov
push
push
push
call
call
mov
push
call
mov
lea
call
lea
push
push
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
push
push
push
lea
push
lea
push
push
call
push
mov
push
call
mov
lea
call
mov
mov
mov
add
call
lea
lea
push
push
push
call
add
lea
call
mov
lea
test
mov
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
shl
jmp
call
mov
lea
push
call
mov
lea
call
mov
mov
mov
add
call
lea
call
mov
push
call
mov
call
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
mov
mov
add
jo
mov
jmp
mov
push
lea
push
push
push
call
call
push
call
call
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
lea
call
lea
lea
push
push
mov
call
ret
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
lea
xor
rep
mov
lea
rep
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
push
call
mov
mov
call
mov
push
mov
call
mov
push
push
push
push
call
mov
call
mov
push
mov
call
push
push
mov
push
push
call
mov
call
mov
push
mov
call
mov
push
push
push
push
call
mov
call
mov
mov
mov
lea
lea
lea
push
push
mov
mov
mov
mov
call
mov
lea
lea
push
lea
push
push
call
push
call
mov
lea
lea
push
push
push
call
mov
add
lea
mov
push
push
push
push
call
mov
call
mov
push
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
push
mov
call
lea
lea
push
push
push
call
add
lea
call
mov
lea
push
push
call
mov
call
mov
mov
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
mov
add
push
push
call
mov
lea
call
push
call
mov
lea
push
mov
call
lea
call
lea
call
mov
push
push
push
call
mov
call
mov
lea
mov
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
mov
add
test
je
push
push
push
push
push
call
mov
call
mov
lea
mov
lea
lea
push
push
mov
mov
mov
mov
call
mov
lea
mov
mov
lea
lea
push
push
push
mov
mov
mov
mov
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
lea
push
lea
push
push
call
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
test
je
mov
mov
sub
mov
jo
mov
xor
mov
cmp
jg
lea
push
push
mov
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
lea
call
push
call
mov
lea
call
push
push
call
lea
mov
lea
lea
push
push
mov
mov
mov
call
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
push
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
lea
lea
push
push
push
call
mov
add
test
je
lea
lea
push
mov
push
lea
push
push
push
call
mov
call
mov
lea
mov
lea
lea
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
lea
mov
lea
push
lea
push
push
mov
mov
mov
mov
mov
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
lea
push
lea
push
push
call
push
lea
lea
push
push
call
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
mov
mov
lea
lea
lea
push
push
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
lea
push
push
push
mov
mov
push
push
call
mov
call
mov
lea
mov
lea
lea
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
lea
mov
lea
push
lea
push
push
mov
mov
mov
mov
mov
call
push
lea
lea
push
push
call
lea
push
lea
push
push
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
add
mov
mov
mov
lea
lea
push
push
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
lea
mov
mov
mov
mov
push
lea
push
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
mov
add
push
call
mov
lea
call
jmp
call
mov
call
mov
lea
mov
lea
lea
push
push
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
mov
mov
add
jo
mov
jmp
mov
push
lea
push
push
push
call
call
mov
push
call
call
push
jmp
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
lea
xor
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
call
mov
lea
push
push
mov
mov
call
lea
push
lea
push
push
lea
push
push
call
push
call
mov
mov
lea
lea
push
push
push
call
add
lea
lea
mov
push
lea
sub
push
lea
push
jo
push
mov
mov
mov
call
lea
push
call
mov
lea
call
lea
lea
push
push
push
call
add
push
jmp
test
je
lea
call
lea
lea
push
push
push
call
add
ret
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
lea
mov
push
call
lea
call
push
jmp
lea
call
ret
ret
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
call
test
je
lea
lea
mov
mov
call
lea
push
call
lea
call
call
push
jmp
call
push
jmp
lea
call
ret
ret
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
lea
push
push
call
push
call
mov
mov
call
lea
mov
call
lea
push
push
call
push
push
call
mov
call
xor
lea
test
setne
neg
mov
call
test
je
call
mov
call
lea
push
push
call
mov
call
xor
test
setne
neg
test
je
mov
xor
test
setne
neg
mov
mov
push
call
call
push
jmp
lea
call
ret
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
call
test
je
mov
test
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
lea
call
push
jmp
lea
call
ret
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
call
test
jne
mov
lea
push
push
push
call
mov
call
jmp
mov
cmp
je
lea
push
push
call
push
call
mov
call
lea
call
mov
lea
push
push
lea
push
push
push
push
push
mov
call
call
cmp
je
mov
mov
mov
mov
mov
call
mov
mov
call
xor
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
lea
mov
mov
push
lea
push
push
push
call
call
push
jmp
test
je
lea
call
lea
call
ret
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
lea
push
push
call
mov
mov
lea
call
lea
call
mov
push
call
mov
push
lea
push
push
call
mov
push
push
call
mov
call
mov
lea
push
push
call
lea
call
mov
push
push
call
mov
lea
call
mov
push
push
push
call
neg
sbb
push
inc
neg
mov
jmp
lea
call
lea
call
ret
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
push
mov
xor
push
call
test
je
mov
mov
mov
pop
pop
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
call
mov
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
call
mov
push
test
je
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
jmp
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
push
call
mov
call
movsx
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
call
mov
call
mov
mov
mov
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
push
mov
push
lea
push
call
push
mov
push
call
call
mov
push
lea
push
call
lea
call
mov
mov
mov
mov
push
lea
push
call
mov
mov
lea
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
call
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
mov
mov
push
push
call
test
jne
mov
mov
add
push
mov
push
call
call
mov
mov
mov
mov
sub
jo
mov
call
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
push
push
push
mov
push
call
call
mov
push
push
push
mov
push
call
call
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
push
push
push
mov
push
call
call
mov
push
lea
push
call
push
push
mov
push
call
call
mov
push
jmp
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
push
push
push
push
push
call
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
call
push
lea
push
push
call
push
push
push
call
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
push
push
call
add
lea
lea
mov
push
push
mov
call
test
je
mov
mov
lea
call
mov
lea
call
lea
lea
push
lea
push
push
call
push
call
mov
lea
lea
push
push
push
call
add
push
push
push
push
call
call
push
push
push
push
call
call
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
push
mov
mov
mov
call
mov
lea
call
push
call
xor
cmp
push
setg
neg
mov
call
mov
lea
call
push
call
mov
xor
cmp
setl
neg
or
xor
cmp
lea
setne
neg
and
push
mov
lea
push
push
call
add
test
je
call
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
call
mov
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
xor
cmp
lea
sete
neg
mov
call
mov
push
test
je
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
push
jmp
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
call
mov
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
xor
cmp
lea
sete
neg
mov
call
mov
push
test
je
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
push
jmp
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
call
mov
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
xor
cmp
lea
sete
neg
mov
call
mov
push
test
je
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
push
jmp
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
je
cmp
jl
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
push
call
mov
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
call
mov
push
test
je
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
push
push
jmp
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
xor
cmp
setne
neg
mov
lea
call
lea
call
mov
push
test
je
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
jmp
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
sub
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
push
lea
push
mov
mov
push
mov
mov
call
add
push
call
lea
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
sub
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
call
add
push
call
lea
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
sub
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
call
add
push
call
lea
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
sub
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
call
add
push
call
lea
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
sub
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
call
add
push
call
lea
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
sub
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
call
add
push
call
lea
call
lea
lea
push
push
push
call
add
xor
mov
mov
push
push
sub
mov
mov
push
mov
mov
sub
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
add
lea
push
push
call
add
push
call
push
call
lea
lea
push
push
push
call
mov
add
push
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
xor
mov
push
jmp
lea
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
push
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
jmp
push
push
push
mov
push
call
push
lea
push
mov
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
sete
neg
mov
lea
push
lea
push
push
call
add
lea
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
jmp
mov
test
jne
push
push
call
mov
push
push
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
test
jne
push
push
call
mov
push
push
mov
push
call
push
lea
push
call
push
lea
push
mov
call
add
push
call
mov
lea
call
push
push
push
push
call
lea
call
lea
call
lea
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
call
mov
mov
lea
push
lea
push
push
call
add
lea
call
mov
cmp
jg
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
lea
mov
mov
mov
lea
push
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
push
push
mov
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
push
call
add
mov
add
jo
mov
jmp
push
call
jmp
mov
call
push
lea
push
mov
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
call
push
lea
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
xor
mov
test
setne
neg
xor
cmp
setne
neg
and
mov
mov
lea
push
lea
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
push
mov
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
mov
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
xor
cmp
lea
sete
neg
xor
cmp
push
sete
neg
and
mov
lea
push
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
push
mov
call
mov
xor
cmp
lea
lea
push
sete
neg
mov
lea
push
lea
push
push
mov
mov
call
mov
xor
cmp
mov
lea
lea
sete
neg
mov
push
lea
push
lea
push
push
mov
mov
mov
mov
mov
call
mov
xor
cmp
mov
lea
lea
sete
neg
mov
push
lea
push
lea
push
push
mov
mov
mov
mov
mov
call
lea
lea
push
lea
push
push
call
push
lea
lea
push
push
call
push
call
mov
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
cmp
jge
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
call
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
cmp
jge
push
push
push
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
push
mov
mov
push
mov
mov
mov
call
lea
push
push
call
push
call
add
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
cmp
fnclex
jge
push
push
jmp
mov
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
xor
lea
mov
push
mov
mov
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
call
mov
lea
call
push
call
xor
cmp
push
setg
neg
mov
call
mov
lea
call
push
call
mov
xor
cmp
setl
neg
or
xor
cmp
lea
setne
neg
and
push
mov
lea
push
push
call
add
test
je
call
mov
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
call
mov
lea
call
push
call
xor
cmp
push
setg
neg
mov
call
mov
lea
call
push
call
mov
xor
cmp
setl
neg
or
xor
cmp
lea
setne
neg
and
push
mov
lea
push
push
call
add
test
je
call
mov
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
call
cmp
je
mov
push
call
cmp
jge
push
push
push
push
call
mov
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
lea
push
call
mov
push
call
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
mov
add
push
call
lea
call
lea
call
mov
mov
push
lea
push
call
mov
mov
lea
lea
call
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
lea
push
call
mov
mov
lea
lea
call
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
add
jo
mov
mov
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
push
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
jmp
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
mov
mov
cmp
jne
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
lea
push
mov
mov
push
call
mov
mov
push
mov
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
call
lea
mov
mov
call
lea
call
mov
cmp
jg
lea
mov
push
mov
call
fstp
fld
fmul
mov
mov
mov
fnstsw
test
jne
call
fadd
fnstsw
test
jne
call
lea
push
push
call
lea
lea
push
lea
push
push
call
push
call
mov
lea
call
lea
lea
push
lea
push
push
push
call
mov
add
add
jo
mov
jmp
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
lea
mov
mov
call
lea
call
cmp
jg
lea
mov
push
mov
call
fstp
fld
fmul
mov
mov
mov
mov
fnstsw
test
jne
mov
call
fstp
push
lea
push
lea
push
lea
push
push
mov
call
lea
lea
push
lea
push
push
call
push
call
mov
lea
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
add
jo
mov
jmp
mov
push
call
mov
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
mov
xor
cmp
mov
lea
lea
sete
neg
mov
push
lea
push
lea
mov
mov
push
push
mov
mov
call
lea
lea
mov
mov
call
xor
cmp
lea
lea
sete
neg
mov
mov
lea
push
lea
push
lea
push
push
mov
mov
call
lea
lea
mov
mov
call
xor
cmp
lea
lea
sete
neg
mov
mov
lea
push
lea
push
lea
push
push
mov
mov
call
lea
lea
push
push
lea
mov
push
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
push
call
mov
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
fwait
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
push
push
push
push
push
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
add
push
lea
push
call
lea
call
lea
push
lea
push
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
push
call
add
lea
call
mov
mov
sub
mov
mov
mov
mov
mov
push
push
lea
push
call
push
call
add
mov
push
call
push
lea
push
call
mov
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
mov
lea
push
sub
mov
mov
mov
mov
mov
mov
push
call
fnclex
test
jge
push
push
mov
push
push
call
mov
mov
mov
mov
push
lea
push
call
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
push
lea
push
lea
push
push
call
add
call
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
call
push
lea
push
call
mov
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
add
call
mov
mov
add
call
mov
mov
add
call
mov
mov
add
call
mov
mov
add
call
mov
mov
add
call
lea
mov
call
mov
mov
cmp
jg
movsx
dec
cmp
mov
jb
call
mov
mov
mov
push
mov
push
call
mov
lea
call
mov
lea
call
lea
call
mov
add
jo
mov
jmp
lea
lea
mov
mov
call
mov
push
lea
push
push
lea
push
push
call
lea
push
push
call
lea
add
push
push
mov
call
lea
lea
push
push
push
call
add
mov
push
jmp
lea
call
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
cmp
je
mov
mov
cmp
jne
mov
movsx
mov
mov
sub
mov
mov
mov
mov
cmp
jae
mov
jmp
call
mov
mov
shl
mov
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
call
push
lea
push
call
push
call
add
lea
call
mov
push
jmp
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
mov
call
mov
mov
lea
call
push
push
call
mov
lea
neg
sbb
inc
neg
call
test
jne
lea
mov
push
mov
call
lea
mov
call
mov
push
push
call
sub
jo
push
push
lea
push
push
push
push
call
mov
add
push
push
push
push
call
lea
push
push
push
call
push
call
mov
lea
push
mov
mov
call
mov
lea
call
push
jmp
test
je
lea
call
lea
call
lea
call
ret
lea
push
push
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
lea
mov
call
mov
push
call
test
je
push
call
mov
push
lea
push
call
lea
push
lea
push
call
mov
push
push
call
mov
add
jo
mov
imul
jo
mov
mov
lea
lea
call
lea
push
push
call
mov
lea
call
lea
call
mov
push
call
mov
mov
push
lea
push
call
mov
test
je
cmp
jne
mov
neg
mov
cmp
jb
call
mov
mov
jmp
call
mov
push
push
push
mov
add
push
push
push
call
mov
call
lea
push
call
test
je
lea
mov
mov
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
call
push
jmp
test
je
lea
call
lea
push
call
lea
call
lea
push
push
call
ret
lea
push
push
call
lea
mov
call
lea
call
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
push
push
lea
push
call
push
call
mov
mov
lea
push
call
mov
lea
call
mov
mov
push
push
push
push
call
push
mov
push
push
mov
call
push
mov
inc
push
push
call
push
call
mov
mov
mov
xor
cmp
setne
xor
cmp
setne
or
jne
mov
xor
cmp
setne
xor
cmp
setne
or
jne
mov
xor
cmp
setne
xor
cmp
setne
or
jne
mov
call
push
jmp
lea
call
ret
lea
mov
lea
push
push
call
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
cmp
jne
mov
mov
push
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
lea
push
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
mov
mov
push
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
lea
push
lea
push
lea
push
push
call
add
jmp
mov
cmp
jne
jmp
jmp
jmp
mov
mov
mov
lea
push
call
mov
lea
call
mov
mov
mov
push
mov
push
push
push
call
mov
mov
push
mov
push
push
call
add
mov
mov
push
call
push
jmp
lea
call
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sahf
sahf
sahf
sahf
pushf
(bad)
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
xchg
add
add
add
xor
and
enter
(bad)
add
add
add
add
add
add
and
adc
and
and
and
add
add
and
pop
add
add
and
jl
and
mov
and
mov
add
xor
add
add
sbb
and
call
add
cmp
and
or
and
and
and
xchg
add
xor
and
dec
add
add
and
call
add
and
mov
and
push
add
sbb
and
sub
add
sub
add
add
add
add
add
fiadd
and
das
add
sub
and
add
add
add
xor
add
adc
add
add
xor
add
and
add
add
add
and
dec
add
add
add
sbb
add
add
push
add
cmp
add
add
add
add
add
and
aam
and
jmp
add
add
and
es
and
dec
add
and
push
add
and
pushf
add
and
mov
add
add
lock
and
or
and
and
and
xor
and
inc
push
and
mov
and
enter
push
and
jle
and
pop
add
adc
and
pop
add
xor
and
pusha
add
or
add
int
add
lock
and
add
and
adc
and
and
and
push
add
xor
and
test
add
ds
and
dec
pop
and
pop
pop
and
mov
add
jl
and
mov
and
xchg
pop
and
cmp
add
mov
pop
and
cmp
pop
and
repnz
and
test
or
add
and
or
add
add
add
xor
add
add
and
mov
add
je
and
test
and
cwde
or
add
add
xor
and
(bad)
or
add
or
add
add
cld
or
add
and
sbb
and
xor
and
imul
and
pop
or
add
add
add
and
cmps
or
add
add
or
and
ror
and
loop
and
and
add
dec
and
or
and
push
or
add
or
add
or
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
je
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
je
dec
xor
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
jbe
popa
inc
jb
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
jbe
popa
dec
popa
je
dec
fs
popa
ins
ins
add
add
jbe
popa
dec
imul
je
je
add
add
jbe
popa
inc
outs
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
dec
gs
inc
popa
arpl
popa
jb
add
add
jbe
popa
inc
jb
gs
bound
imul
pop
pop
jbe
popa
push
popa
jb
outs
fs
outs
popa
fs
data16
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
push
popa
jb
ins
jo
add
add
jbe
popa
dec
jae
je
imul
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
push
popa
jb
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
push
popa
jb
ins
jo
add
add
jbe
popa
inc
outs
outs
ins
push
je
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jb
outs
imul
bound
js
je
jb
arpl
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
jbe
popa
dec
bound
gs
add
pop
popa
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
add
fs
imul
xor
imul
jbe
popa
inc
outs
outs
ins
push
popa
jb
add
add
jbe
popa
inc
jo
cmp
add
pop
pop
jbe
popa
inc
outs
outs
ins
push
popa
jb
jne
ins
add
add
pop
inc
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
jb
jae
add
add
pop
pop
jbe
popa
push
popa
jb
gs
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
inc
imul
add
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
inc
gs
add
add
jbe
popa
push
je
inc
ins
jo
add
pop
pop
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
add
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
dec
bound
popa
jb
add
pop
pop
jbe
popa
dec
xor
add
add
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
jbe
popa
push
popa
jb
jb
add
add
jbe
popa
push
popa
jb
popa
je
dec
gs
push
je
add
pop
pop
jbe
popa
inc
popa
jae
dec
bound
popa
jb
add
pop
pop
jbe
popa
push
je
push
xor
add
add
fs
data16
je
outs
add
add
jbe
popa
push
xor
popa
jb
add
add
jbe
popa
inc
imul
outs
jae
jb
arpl
add
pop
pop
jbe
popa
dec
popa
je
dec
fs
popa
ins
ins
dec
add
add
jbe
popa
push
gs
pop
jbe
popa
push
je
push
cmp
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
inc
dec
jae
jb
add
add
jbe
popa
push
popa
jb
outs
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
push
je
xor
arpl
add
add
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
jbe
popa
dec
outs
jo
je
imul
pop
jbe
popa
push
je
push
outs
push
outs
imul
add
jbe
popa
push
jb
outs
je
imul
popa
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
push
popa
jb
imul
jbe
popa
dec
xor
jb
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
dec
outs
push
je
push
popa
jb
add
pop
pop
jbe
popa
inc
gs
ja
gs
add
add
pop
pop
jbe
popa
push
bound
outs
add
add
jbe
popa
push
je
push
popa
jb
popa
ins
add
add
pop
pop
jbe
popa
push
popa
jb
popa
je
add
pop
pop
jbe
popa
dec
xor
jb
add
add
dec
ins
outs
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
inc
imul
add
pop
pop
jbe
popa
push
cmp
jb
add
add
jbe
popa
dec
gs
add
add
jbe
popa
dec
outs
push
je
add
add
pop
pop
jbe
popa
push
popa
jb
popa
je
dec
gs
inc
popa
ins
ins
dec
fs
data16
add
jbe
popa
push
popa
jb
outs
je
add
pop
popa
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
dec
xor
je
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
push
popa
jb
gs
popa
jb
add
add
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
push
popa
jb
ins
jo
jno
add
pop
pop
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
add
add
pop
pop
jbe
popa
push
popa
jb
fs
add
jbe
popa
push
je
inc
outs
ins
jo
add
add
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
je
push
outs
inc
outs
jae
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
popa
jb
outs
add
add
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
popa
jb
outs
jo
add
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
add
add
jbe
popa
push
popa
jb
popa
je
dec
gs
inc
popa
ins
ins
dec
add
add
jbe
popa
push
cmp
je
xor
add
add
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
dec
add
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
inc
jb
inc
outs
jo
add
add
pop
pop
jbe
popa
inc
popa
jae
dec
bound
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jo
add
add
jbe
popa
inc
outs
jb
popa
arpl
popa
jb
add
pop
pop
jbe
popa
push
cmp
je
xor
add
add
ins
ins
ins
jne
add
add
jbe
popa
dec
popa
je
dec
fs
je
add
pop
inc
dec
je
outs
add
add
pop
pop
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
add
jbe
popa
inc
push
dec
outs
je
add
add
jbe
popa
push
popa
jb
outs
jb
gs
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
inc
jb
gs
je
