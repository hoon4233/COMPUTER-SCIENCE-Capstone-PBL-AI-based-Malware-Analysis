jmp
inc
pop
inc
outs
outs
ins
gs
outs
add
add
inc
add
gs
mov
jne
lea
je
addr16
sbb
sbb
jg
rol
inc
jns
das
inc
nop
packssdw
sbb
push
outs
jb
add
pop
dec
outs
outs
imul
add
push
jae
jb
add
test
mov
fst
or
sub
aaa
pop
ja
sub
sub
dec
adc
or
push
pop
add
jbe
inc
gs
pusha
or
xchg
jbe
mov
jl
cmovae
jne
adc
in
cwde
sub
popa
jae
push
jns
setl
and
aas
dec
popa
ins
adc
mov
dec
jae
mov
push
popa
imul
and
fldenv
push
outs
jl
bound
not
jp
adc
push
(bad)
(bad)
outs
ins
verw
or
jo
je
push
sti
fisttp
or
outs
fs
fs
dec
shl
movs
or
fadd
gs
(bad)
or
inc
gs
jne
je
jo
sbb
mov
loopne
mov
test
add
adc
push
dec
bound
arpl
popa
or
add
lock
jae
ins
ret
pop
jmp
sbb
nop
lods
lahf
pop
add
cld
jo
and
jno
or
bnd
call
and
(bad)
xor
and
and
inc
push
cmp
sub
and
mov
and
and
(bad)
(bad)
mov
cmp
and
push
push
call
mov
test
(bad)
fistp
rcr
mov
or
ret
lea
out
(bad)
inc
push
mov
mov
inc
cmp
jne
mov
mov
mov
sub
imul
fild
push
mov
mov
dec
add
test
dec
mov
mov
mov
sti
push
or
mov
mov
pop
or
add
imul
add
push
push
cmp
sbb
lods
imul
cmp
icebp
mov
mov
mov
pop
and
into
jge
mov
cmp
add
cmp
jne
mov
push
nop
adc
inc
or
jmp
pop
add
ret
sbb
mov
sbb
sti
jne
mov
mov
mov
add
fdivr
arpl
(bad)
fmul
jnp
ja
cmp
jb
mov
add
call
ja
adc
pop
ja
sbb
add
or
jmp
pop
and
cmp
into
cmps
ja
mov
add
cmp
loope
jae
jmp
adc
mov
fnstcw
mov
adc
ror
jg
ss
jmp
lock
call
jnp
cli
mov
fimul
add
mov
cli
jne
(bad)
pop
and
push
push
jmp
push
mov
test
je
mov
mov
jbe
arpl
and
(bad)
mov
push
es
popa
fucom
repnz
mov
xchg
call
test
push
ins
cmp
dec
and
in
cmp
jbe
imul
mov
mov
mov
loop
mov
mov
mov
and
jae
ffree
pop
mov
ja
mov
add
pop
ja
cmp
sti
int3
ins
or
mov
ss
push
sbb
fcmovu
xchg
add
cmp
inc
mov
aaa
push
jne
outs
test
je
or
jle
or
mov
call
hlt
outs
mov
and
or
sti
xor
(bad)
psrad
mov
push
sti
loope
add
enter
cmp
pop
mov
in
test
cmp
jbe
cmp
sbb
bnd
add
adc
sti
push
push
mov
fcomp
mov
mov
push
repnz
movs
repz
and
adc
jmp
inc
pushf
mov
sub
in
daa
cmp
jae
mov
ins
pop
ret
cmp
ss
sbb
(bad)
popa
addr16
cmp
add
aaa
xchg
daa
xor
mov
push
sbb
out
sar
xor
jbe
dec
aaa
(bad)
jg
cmp
adc
xor
mov
inc
cmp
cmp
dec
xchg
add
cs
scas
sti
and
pushf
cmp
movs
adc
mov
xchg
iret
push
adc
jmp
in
arpl
lods
cs
add
add
ja
jne
add
mov
(bad)
fldcw
sub
and
data16
xor
or
enter
xlat
mov
mov
adc
in
rcl
stos
jmp
add
pusha
lea
int3
icebp
jne
dec
mov
jo
mov
cmc
jge
sbb
fnsave
dec
and
mov
test
or
xchg
ins
add
pop
dec
(bad)
adc
test
les
(bad)
inc
xor
cmp
jae
mov
sbb
sub
inc
push
test
mov
mov
(bad)
ret
mov
sar
pop
adc
cmc
(bad)
ret
ficom
cmp
jmp
pop
jecxz
(bad)
jae
mov
fwait
push
push
(bad)
fnstcw
push
mov
push
cmp
xchg
xor
push
pop
mov
loopne
mov
jl
clc
setg
js
cmp
add
adc
xor
cmp
cmp
xchg
xchg
mov
fisttp
mov
pop
mov
push
pop
cdq
xchg
ret
fistp
pop
jmp
mov
mov
or
test
imul
or
(bad)
lods
mov
jnp
mov
mov
push
out
rol
scas
out
les
je
icebp
and
push
jne
pop
jmp
in
hlt
and
add
fistp
push
cmp
call
pop
or
les
cmp
adc
jmp
(bad)
shr
hlt
jmp
bswap
adc
adc
mov
sbb
nop
mov
test
loopne
loope
js
jb
sbb
stos
adc
jle
jne
js
push
jmp
sub
lea
push
adc
lods
in
ss
cmps
inc
mov
stos
or
sub
and
ror
dec
in
(bad)
mov
jmp
rol
cld
jo
jae
out
or
adc
xlat
ss
push
or
xchg
mov
dec
push
shl
dec
or
ret
dec
inc
sbb
sbb
jbe
add
outs
pop
jmp
push
enter
ret
in
jge
cwde
pop
add
and
xor
(bad)
cmp
sbb
push
cli
adc
fimul
aad
idiv
xor
or
loop
dec
fcom
test
dec
out
loopne
add
push
xor
adc
imul
mov
and
push
fisub
xor
jnp
in
(bad)
std
lea
sub
bnd
clc
sub
(bad)
pushf
aad
pop
jle
clc
or
adc
dec
adc
or
jmp
adc
out
lea
adc
xor
mov
push
jmp
data16
ins
fistp
jae
lea
fiadd
sbb
stos
lds
and
mov
sub
(bad)
push
(bad)
shr
cmp
cmp
nop
hlt
test
or
pop
mov
aaa
mov
sbb
cmp
inc
or
xchg
outs
mov
sub
cmp
or
and
pop
mov
or
add
fsub
jo
inc
or
or
fdivr
fnsave
sub
scas
adc
in
mov
adc
push
push
and
rol
cld
add
or
jl
lock
cmp
sbb
clc
adc
pop
add
jmp
mov
sbb
mov
mov
out
sub
or
jg
fwait
push
out
push
pop
sub
sbb
push
push
sbb
test
test
mov
mov
imul
ja
adc
mov
or
popa
and
cdq
pop
adc
cmc
mov
loope
cmp
pop
inc
jle
(bad)
adc
pop
jg
pop
adc
adc
je
pop
jmp
or
sbb
and
cmp
or
test
imul
pop
cmp
movs
sub
push
ret
dec
inc
add
loope
scas
add
addr16
lock
push
imul
adc
pop
das
rol
(bad)
xchg
inc
jb
arpl
mov
pop
mov
hlt
push
dec
pop
or
(bad)
pop
mov
add
or
ja
adc
and
es
and
or
xchg
or
jmp
(bad)
xchg
scas
or
sar
fbstp
jns
mov
add
cmps
inc
or
dec
shl
sub
mov
jne
test
sbb
das
inc
push
pop
(bad)
nop
cmp
jne
or
or
dec
sbb
or
out
mov
inc
push
xor
sbb
sti
jg
sub
dec
or
test
and
test
ret
xor
es
xchg
jns
and
int
sub
xchg
and
mov
lock
jae
push
jmp
(bad)
cmp
enter
cwde
adc
leave
inc
and
and
lock
test
scas
sbb
or
adc
fist
ret
xchg
mov
add
xlat
add
sbb
clc
pop
or
add
enter
cmp
pop
and
cmps
add
movs
ret
aaa
pop
int
rol
jo
xchg
gs
push
pusha
or
cmp
add
loopne
movs
fild
test
je
cmc
lahf
ret
jb
shr
or
or
jmp
cmp
xor
or
or
adc
(bad)
lock
mov
and
xchg
out
lock
pop
(bad)
mov
arpl
rol
xor
cmp
jb
jp
mov
movs
jo
or
data16
inc
add
(bad)
cmp
sub
adc
mov
dec
lock
call
add
cli
rol
dec
les
scas
pop
shl
popf
sbb
int
sub
lock
sbb
test
fstp
or
rol
jl
mov
or
nop
sahf
lds
sbb
adc
xor
pop
dec
push
add
mov
mov
push
cli
sbb
lock
ins
adc
mov
xchg
fbstp
mov
in
xchg
retf
add
xor
push
fbstp
mov
xchg
ror
push
jmp
sar
add
loope
popa
mov
sbb
cs
and
clc
retf
add
lods
sub
je
jbe
or
sbb
(bad)
jae
cmc
and
repnz
adc
repz
dec
rol
js
mov
fwait
imul
clc
rcl
popa
push
push
add
iret
test
xor
enter
(bad)
mov
frstor
daa
or
adc
xchg
mov
test
adc
fist
or
mov
jne
mov
leave
je
(bad)
push
mov
and
pop
cmp
mov
fsub
and
push
repz
outs
xor
shr
out
out
(bad)
cs
loopne
or
pop
push
dec
mov
or
add
(bad)
(bad)
jmp
mov
int3
enter
enter
fmul
(bad)
(bad)
(bad)
loopne
mov
ret
sub
lods
xor
pop
push
inc
(bad)
bt
ret
(bad)
mov
mov
je
rol
push
clc
jg
sub
movs
mov
and
rep
adc
je
cld
lea
cwde
std
xchg
push
cld
sbb
std
sbb
(bad)
cld
and
push
mov
mov
mov
cmp
ja
inc
sub
add
push
test
mov
inc
inc
sub
lds
push
push
jnp
mov
shr
es
or
sbb
fnstenv
dec
outs
dec
fild
or
jp
test
fsin
ret
jne
jmp
or
pop
and
(bad)
in
pop
pop
mov
cmp
jne
sub
mov
cmp
jne
or
cmp
push
pop
add
cmp
fisubr
adc
std
jne
jnp
dec
fucomi
push
mov
mov
jmp
adc
mov
in
or
stos
mov
stos
pop
(bad)
mov
or
push
inc
xor
mov
outs
add
cmp
je
mov
push
sub
inc
xor
test
cmc
cmp
das
hlt
mov
cmp
ja
lea
rol
das
sbb
out
int
inc
jl
pop
xor
mov
sbb
(bad)
fdivr
pop
sub
jmp
inc
and
outs
(bad)
mov
loope
popa
jb
dec
and
fstp
adc
or
call
mov
add
aad
stos
ret
fninit
fldcw
and
or
jo
xor
mov
(bad)
int
test
jnp
or
loope
out
sbb
inc
push
push
dec
cld
adc
cmp
xor
loopne
hlt
or
jne
inc
mov
outs
inc
in
clc
ret
ret
push
push
add
and
push
add
dec
sbb
inc
sbb
pop
scas
mov
adc
jbe
mov
fcom
(bad)
cmp
fidiv
ret
test
or
sbb
or
xor
syscall
out
das
pushf
hlt
sbb
stc
mov
call
ret
ret
push
fs
inc
icebp
xor
jnp
cmp
jne
test
lea
add
cmp
ret
mov
leave
mov
or
push
xchg
mov
cmp
jecxz
sqrtps
add
scas
test
xchg
outs
sub
je
int3
sub
inc
(bad)
mov
push
mov
sbb
pop
pop
je
jmp
pop
fadd
adc
jno
aam
mov
data16
or
pop
data16
sbb
pop
int
pop
jmp
clc
inc
mov
lock
pushf
xor
mov
xchg
mov
pop
mov
ds
add
dec
push
mov
push
add
dec
jne
pusha
fucomp
sbb
ret
es
xchg
sbb
jecxz
test
inc
add
mov
repz
adc
dec
cmp
or
(bad)
mul
add
sub
dec
fisttp
push
sub
cmp
(bad)
jne
rcl
sbb
mov
ficomp
sbb
sbb
pop
out
iret
or
dec
adc
mov
xor
call
or
jmp
mov
inc
or
or
push
rcl
sub
or
fistp
sbb
adc
push
clc
iret
clc
out
cmp
lods
add
add
push
add
cli
in
push
jmp
leave
push
mov
sbb
push
push
in
pop
xor
aam
pop
push
imul
fstp
or
jae
jnp
test
adc
push
push
adc
jbe
lods
in
fucomip
inc
add
add
inc
movsx
inc
inc
jmp
sbb
add
xchg
sbb
sbb
in
sbb
push
ins
rcr
cmp
in
and
push
pop
rcr
outs
mov
adc
aam
lock
jne
sti
cld
cmp
and
sub
sub
and
mov
mov
dec
rcr
scas
or
or
mov
inc
xor
jb
jo
adc
imul
out
mov
push
mov
sub
rol
retf
sub
jbe
push
outs
cld
ss
pop
push
mov
pop
add
sbb
jne
inc
add
sub
std
(bad)
popf
inc
and
mov
xor
ret
arpl
inc
or
(bad)
mov
dec
pop
ret
pop
add
mov
cld
and
jl
icebp
pop
push
or
ret
or
push
jecxz
test
pop
add
lds
jmp
cs
mov
or
dec
call
(bad)
loopne
mov
adc
inc
inc
pop
pop
push
je
inc
(bad)
fidivr
jg
(bad)
aam
data16
mov
(bad)
call
inc
dec
sbb
inc
xor
test
test
cmp
push
cs
pop
das
es
and
and
jg
mov
cmp
mov
(bad)
xor
jae
sar
or
add
add
shl
push
xor
push
jne
lock
js
dec
mov
inc
jmp
jns
jmp
fld
call
mov
inc
xor
ins
ret
jne
in
fdiv
xchg
in
and
sub
jo
add
adc
add
add
data16
aam
jg
addr16
push
push
push
push
push
enter
hlt
imul
jmp
cmp
shr
jg
or
stc
or
or
pusha
add
pop
or
push
or
sbb
mov
aas
mov
mov
out
retf
mov
dec
cmp
fs
in
cvtdq2ps
sub
loop
sti
mov
and
mov
sbb
mov
jne
cmp
mov
fimul
and
cmp
sub
xchg
mov
adc
cvtps2pi
(bad)
cmp
pusha
add
jb
je
jmp
cmp
jg
adc
xchg
and
add
sub
cmp
das
xchg
mov
jmp
mov
es
jmp
mov
jmp
bndldx
xlat
jmp
mov
jmp
mov
jmp
mov
xchg
mov
out
fisttp
jno
retf
and
pop
ret
vminps
pcmpeqw
cdq
in
popa
mov
lods
outs
mov
cmp
push
ret
inc
sbb
mov
mov
and
or
pop
sbb
push
popa
adc
js
adc
ss
sub
mov
sbb
mov
cmp
jl
adc
outs
mov
push
fadd
pop
int3
pop
or
cmp
jne
add
mov
or
shr
ins
cmc
adc
jo
hlt
xchg
iret
ins
and
or
cmp
sbb
mov
cmp
ret
cmp
or
cmp
add
inc
jp
in
and
sbb
or
mov
pand
pop
mov
jnp
add
cmps
adc
imul
add
or
ins
sbb
pop
cmp
adc
ret
adc
retf
sti
popf
fild
jne
(bad)
cmp
dec
jl
mov
jmp
inc
clc
test
inc
enter
mov
and
add
scas
mov
and
sbb
mov
shl
mov
push
cld
shl
cmp
cmps
xor
inc
or
test
jle
ds
inc
push
mov
(bad)
scas
inc
sti
imul
out
pusha
inc
addr16
sar
clc
mov
pop
xor
mov
inc
or
lahf
inc
add
sub
imul
sbb
mov
iret
or
push
pusha
mul
or
outs
fwait
push
pushf
je
add
je
ficom
cmps
xchg
mov
shl
add
movs
outs
pop
sub
jmp
adc
repnz
movs
not
xchg
popa
test
pop
pop
sbb
aaa
or
xor
mov
pop
sub
cld
add
cmp
ins
mov
inc
cmps
mov
adc
pop
cmp
bound
retf
shl
sti
inc
popa
inc
test
adc
cmp
fist
mov
push
and
pop
(bad)
ror
inc
nop
in
or
dec
xchg
mov
bound
push
push
pop
(bad)
add
dec
clc
and
sti
mov
mov
jmp
add
mov
push
push
push
fcom
adc
mov
or
inc
pop
pop
(bad)
sbb
mov
pushf
gs
repz
or
push
stos
jmp
daa
fwait
push
dec
pop
pop
lea
jmp
cvtdq2ps
(bad)
(bad)
adc
sahf
push
add
mov
shl
add
push
shr
push
mov
enter
pop
dec
dec
add
pop
dec
or
add
jecxz
dec
dec
or
pop
and
mov
or
pop
adc
cmp
(bad)
in
push
fstp
cmps
and
jmp
pusha
add
ja
sbb
push
adc
aaa
and
iret
xchg
push
clc
inc
jae
xor
sar
xor
mov
ret
imul
ret
mov
mov
pop
sbb
retf
call
sub
sub
es
jl
cmp
jge
xor
jl
cdq
jb
repnz
sbb
and
xor
jmp
mov
adc
fild
and
xor
outs
inc
ds
sub
cmp
jle
and
stc
add
or
repnz
jnp
push
jmp
adc
out
inc
xchg
xor
jecxz
cld
push
jle
js
push
inc
retf
(bad)
fcmovu
sbb
sbb
repz
das
aaa
xchg
dec
pop
jbe
in
pop
cli
jmp
pop
outs
clc
cmc
xchg
add
xor
lods
sub
dec
not
cmp
ins
ins
inc
sbb
das
pop
push
cmps
mov
add
pop
sub
test
or
dec
fisttp
mov
fwait
push
push
js
add
adc
and
(bad)
push
(bad)
(bad)
and
clc
dec
xchg
mov
lea
cmp
dec
daa
js
push
dec
ret
jg
dec
aas
pop
jmp
mov
clc
aad
add
(bad)
aad
retf
or
mov
adc
add
pop
lea
pop
mov
jmp
adc
hlt
in
outs
mov
push
repz
push
mov
adc
pop
cs
div
or
es
push
dec
sbb
sbb
pop
ins
jmp
cmp
add
cmc
clc
pop
jge
loope
jae
je
cmp
add
loopne
aad
jnp
push
(bad)
mov
and
sti
jbe
out
adc
mov
xor
and
sbb
aas
mov
jns
out
rol
adc
stc
into
xchg
dec
clc
adc
test
xor
push
lock
movs
sub
div
push
push
lods
shr
mov
sbb
cmps
push
or
add
mov
sbb
mov
pop
pop
cwde
sbb
data16
ret
fist
int3
jne
cmp
jb
cmp
cmps
movs
data16
inc
or
add
shl
cmp
sbb
(bad)
lods
inc
(bad)
sbb
das
call
mov
cmp
jae
(bad)
test
or
ret
push
pop
je
das
cmp
inc
or
pop
add
ret
push
push
mov
jbe
push
jmp
rcl
int
cmp
aaa
test
lea
or
jno
pop
mov
or
add
fidiv
xor
push
xor
mov
mov
dec
lea
dec
adc
sub
fiadd
jle
or
mul
ds
daa
sbb
test
adc
aaa
or
in
push
dec
in
outs
out
cmp
out
or
es
popa
sub
cmp
jns
test
sti
or
sub
jecxz
fbld
ficom
nop
push
push
fnsave
xchg
lock
mov
adc
fstp
into
lock
pop
mov
xchg
gs
or
out
push
pop
inc
jbe
jbe
mov
cmp
and
pop
fadd
cmp
fisttp
in
adc
and
jmp
pop
sbb
mov
movs
push
adc
inc
inc
add
jmp
mov
lock
dec
sub
or
rcr
adc
mov
daa
in
inc
outs
mov
mov
xchg
pop
adc
or
lea
push
push
mov
(bad)
adc
in
inc
dec
iret
ret
mov
jo
or
or
jle
xor
xchg
in
or
mov
sub
xor
pop
cs
inc
stos
rol
dec
dec
fisttp
lock
or
adc
sub
and
inc
xor
(bad)
shr
jg
jg
pop
mov
mov
inc
mov
cmp
xadd
int
fwait
cdq
retf
mul
mov
mov
lea
add
fs
jle
mov
push
ret
dec
mov
xor
out
push
and
inc
and
sub
ins
jae
mov
lods
jne
adc
pusha
lea
cmp
and
dec
push
mov
test
dec
inc
ror
push
sbb
push
in
fs
mov
or
mov
loope
sub
and
mov
xchg
mov
(bad)
imul
cs
mov
pushf
lea
(bad)
cmp
sbb
sbb
jne
stc
retf
sbb
ret
sbb
xchg
imul
lea
xchg
into
adc
or
push
or
jecxz
adc
(bad)
inc
mov
and
dec
daa
adc
cmp
pop
sbb
leave
dec
sub
pop
dec
jne
dec
mov
js
adc
(bad)
push
sbb
(bad)
fisubr
scas
idiv
test
pusha
lods
jae
xor
sub
sbb
jmp
sbb
loope
and
add
sub
cmp
jbe
xchg
lock
mov
in
fnstcw
inc
jb
add
mov
fimul
fimul
cmp
mov
push
jo
jbe
or
div
add
mov
add
js
mov
sub
ja
aaa
sbb
jp
and
call
xor
inc
jne
xor
add
fstp
or
xor
mov
adc
pop
add
fstp
sbb
or
sub
dec
adc
neg
shl
cwde
inc
shufps
scas
neg
sbb
ret
adc
call
or
or
(bad)
ins
aam
jg
xor
xor
inc
inc
inc
inc
inc
inc
movs
add
leave
jmp
add
cs
mov
push
xchg
pop
add
call
add
add
jg
js
xchg
icebp
mov
mov
mov
mov
arpl
mov
cmp
call
add
sub
sar
aaa
call
retf
rep
call
xor
jmp
add
movs
xor
jne
push
std
xor
outs
cmp
mov
jbe
push
inc
xchg
aaa
int
mov
sahf
(bad)
inc
jle
sub
push
mov
out
scas
mov
aad
add
les
fild
push
xor
mov
sub
jle
je
cmp
mov
jl
movnti
sbb
push
cs
ror
lds
adc
aam
or
pusha
repnz
xchg
clc
mov
inc
inc
shl
pop
cmp
(bad)
retf
enter
fcomp
jmp
lds
pushf
push
(bad)
jns
rol
rcr
lock
movs
dec
icebp
cli
or
dec
not
dec
or
ins
loope
sub
xchg
push
das
pop
xchg
xlat
push
clc
sub
stos
push
jl
inc
aas
int3
scas
and
jg
pop
(bad)
(bad)
sbb
(bad)
adc
fld
leave
mov
je
(bad)
out
in
sub
pop
inc
add
arpl
inc
cld
ret
fs
jge
in
mov
inc
stc
loopne
mov
stc
ret
fld
out
ret
cdq
in
and
add
or
push
jb
pop
mov
cli
or
in
inc
pushf
or
ret
setae
adc
mov
jle
sub
sbb
add
mov
js
movs
aam
jb
adc
out
xchg
sub
cld
out
out
sub
pop
jecxz
add
leave
sbb
aaa
jg
mov
jbe
imul
cmp
mov
(bad)
mov
jg
das
jg
lods
(bad)
lods
inc
cmp
xlat
fadd
outs
xor
call
retf
xchg
push
or
push
push
int3
into
sbb
ror
mov
(bad)
inc
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
retf
into
and
(bad)
(bad)
jg
or
pop
inc
in
mov
mov
addr16
leave
repnz
bound
(bad)
(bad)
call
jl
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
(bad)
(bad)
inc
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
cmp
inc
xor
cmp
call
mov
stos
aam
(bad)
call
mov
push
sbb
sar
repnz
test
nop
(bad)
(bad)
(bad)
mov
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
(bad)
(bad)
dec
xchg
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
add
dec
in
xchg
cmp
xor
or
lds
mov
(bad)
mov
rcl
popa
mov
and
addr16
repz
mov
(bad)
(bad)
(bad)
fld
mov
push
pusha
les
outs
bound
xor
sbb
and
nop
add
mov
loopne
mov
push
and
rol
sub
repnz
std
adc
inc
aaa
inc
int
(bad)
add
add
add
lock
mov
sub
mov
xchg
dec
pusha
sub
push
adc
xor
inc
pop
out
jno
or
fadd
enter
xor
and
xor
or
mov
xor
xor
mov
enter
je
enter
ins
push
fs
pop
enter
pop
jg
push
and
inc
or
inc
cmp
xor
jbe
and
jb
fs
pusha
pop
pop
and
dec
or
dec
inc
inc
cmp
xor
and
xor
xor
and
and
and
or
or
enter
cld
sbb
jno
hlt
lock
inc
push
in
call
sbb
(bad)
or
ins
je
fs
or
enter
push
xor
and
and
and
xor
sub
or
enter
adc
enter
or
in
or
cld
jae
push
sbb
clc
hlt
lock
sbb
call
nop
inc
(bad)
aam
nop
inc
push
ror
enter
sbb
sar
mov
sbb
test
mov
cwde
xchg
nop
fs
inc
push
mov
sbb
sbb
jo
sbb
push
nop
inc
pop
pop
push
fs
inc
push
push
dec
dec
nop
inc
push
sbb
inc
push
sbb
xor
sbb
sub
sbb
sbb
adc
nop
inc
push
adc
leave
inc
push
sbb
cld
jb
or
enter
in
or
enter
loopne
enter
fcom
enter
ror
enter
xor
sar
mov
or
enter
mov
pushf
cwde
xchg
enter
nop
mov
test
enter
movzx
inc
dec
lock
test
ret
nop
int3
nop
jbe
and
jge
sub
push
inc
mov
push
push
call
fwait
mov
sbb
adc
and
mov
pop
add
push
dec
mov
(bad)
push
es
mov
cmp
adc
pop
pop
pop
mov
or
dec
shl
adc
sbb
and
push
jg
aaa
loopne
mov
mov
test
dec
fs
movs
stos
mov
shr
arpl
and
cmp
jo
imul
dec
dec
mov
jg
push
inc
inc
bound
je
cmp
retf
mov
clc
add
or
dec
popa
or
dec
dec
gs
inc
jns
jg
or
cmp
adc
inc
dec
outs
call
jb
aas
jl
test
and
jl
cmp
jg
inc
inc
imul
outs
nop
cld
inc
repnz
and
outs
mov
aas
or
dec
jbe
data16
outs
adc
inc
or
mov
mov
dec
popa
je
add
inc
enter
dec
dec
outs
jbe
ins
imul
add
ss
mov
gs
test
cmp
add
jnp
xor
or
adc
fs
dec
add
adc
and
inc
add
and
xchg
popa
jae
mov
or
push
mov
or
mov
pop
sbb
xchg
iret
arpl
push
(bad)
xchg
add
scas
popa
adc
aam
add
sbb
dec
and
or
push
je
arpl
inc
add
pmaxub
or
fild
pop
fsub
lahf
adc
adc
inc
mov
push
or
mov
mov
inc
cmps
fiadd
inc
inc
push
cwde
pop
push
inc
inc
cmp
adc
fidiv
leave
mov
fwait
ror
arpl
addr16
mov
push
out
adc
push
pop
or
imul
adc
dec
hlt
mov
add
mov
test
xchg
push
push
sub
shl
dec
sar
jbe
sar
leave
repz
je
mov
outs
sbb
or
ja
iret
mov
je
jg
(bad)
(bad)
out
and
sti
je
movzx
jnp
mov
xlat
sub
pop
cmps
lock
mov
xchg
loope
mov
loop
push
and
adc
aas
fstp
pop
mov
mov
add
sub
jb
sub
or
mov
cs
sbb
jl
inc
mov
or
sub
jb
pop
stc
dec
repnz
or
(bad)
jae
inc
dec
jne
mov
rol
aas
mov
or
outs
mov
push
jno
(bad)
push
lods
ret
push
xchg
dec
enter
push
cmps
add
sub
sbb
add
mov
add
imul
mov
push
jmp
cwde
test
test
sub
jmp
jg
sbb
mov
test
fmul
or
pop
imul
pop
mov
mov
stos
lock
lahf
inc
repz
push
lock
ret
xchg
test
pushf
fninit
add
popf
mov
mov
xchg
push
sbb
and
inc
mov
push
and
mov
pop
ret
ret
(bad)
xchg
sub
jnp
add
mov
ja
pop
inc
(bad)
mov
loopne
out
mov
jnp
sbb
adc
hlt
repnz
retf
sub
pop
push
xor
xchg
(bad)
dec
mov
adc
add
cmp
ror
out
dec
retf
inc
pop
pop
daa
xor
aaa
mov
lea
mov
and
nop
sub
sub
mov
repnz
retf
xor
into
xor
mov
xor
ss
aaa
jo
shr
adc
add
dec
inc
out
jg
mov
xor
xor
mov
mov
mov
rol
sbb
nop
loope
and
sar
jmp
dec
ret
push
std
dec
pop
push
shl
add
sbb
dec
pop
and
inc
inc
add
sbb
mov
(bad)
mov
adc
or
adc
aas
loop
mov
cmp
jle
mov
stos
les
xor
add
or
add
fistp
push
or
int3
push
cmp
daa
pop
daa
add
mov
sbb
mov
dec
adc
data16
pop
inc
xlat
inc
hlt
loopne
add
and
shr
dec
dec
je
bnd
pop
lock
or
sub
pop
dec
push
push
cmp
sbb
(bad)
adc
lods
jmp
or
cs
push
push
xor
loopne
sar
dec
fmul
pop
mov
jae
xor
and
fstp
dec
or
retf
add
mov
xchg
or
and
stos
or
sub
dec
pop
ins
cld
mov
in
(bad)
inc
clc
sub
xor
movs
jnp
(bad)
cmp
imul
sub
jns
add
xchg
add
add
in
sub
adc
pop
or
jl
pop
sbb
push
(bad)
je
fsubr
and
aas
retf
(bad)
sbb
or
xor
mov
dec
pop
adc
mov
pop
inc
pop
add
mov
outs
push
pop
fwait
call
test
pop
add
lods
rol
dec
loopne
clc
repnz
stc
inc
je
add
je
pop
jne
mov
push
jmp
jb
push
mul
test
aam
dec
xor
push
ret
push
jne
xor
mov
cmp
ret
push
add
lea
sub
push
in
mov
out
sub
aaa
jnp
fild
push
jne
and
cld
push
loopne
jne
jbe
mov
jae
(bad)
inc
pop
loopne
jmp
xor
and
mov
and
jmp
adc
clc
add
or
je
mov
dec
in
fidiv
into
pop
add
cmp
jecxz
dec
mov
mov
jae
aaa
dec
push
or
inc
in
fsubr
mov
mov
jmp
mov
ss
and
aas
stc
in
push
add
add
adc
jnp
je
cmp
add
adc
cmp
ret
or
jne
lahf
shl
jo
mov
out
fdivr
or
jbe
mov
and
push
shl
scas
push
into
mov
adc
ret
mov
or
imul
dec
pop
inc
jp
mov
jbe
js
pop
rol
das
push
(bad)
or
sub
rol
push
push
cld
rol
push
outs
xor
retf
lea
call
cmp
or
mov
in
lea
test
add
ror
aaa
arpl
icebp
add
pop
sub
push
add
js
mov
add
adc
xchg
or
xor
mov
mov
jmp
das
mov
add
cmp
xchg
sbb
pop
ss
call
mov
mov
loope
dec
push
cli
lea
imul
or
push
leave
dec
bound
sub
hlt
test
iret
cmp
fiadd
inc
fs
or
ss
jo
gs
inc
add
idiv
add
pop
mov
sub
xor
and
sub
inc
les
psraw
add
mov
(bad)
sar
xor
mov
mov
adc
mov
mov
xor
sbb
adc
mov
les
leave
fimul
mov
mov
in
js
sahf
adc
mov
mov
ss
mov
sbb
in
nop
movs
and
test
test
mov
cs
jl
mov
test
sub
mov
inc
add
and
xchg
(bad)
mov
or
pop
ss
mov
xchg
or
push
push
fcomp
lea
inc
push
jns
mov
dec
aaa
pop
hlt
mov
daa
add
pop
jnp
into
jle
das
fs
jns
(bad)
add
fs
adc
mov
ins
or
pop
in
mov
dec
push
mov
mov
push
dec
sbb
imul
cmp
movs
es
fwait
daa
xor
mov
jb
mov
add
cmp
loop
sub
iret
sub
and
lahf
cmp
int
xor
mov
push
inc
xchg
inc
sbb
dec
das
sar
mov
mov
inc
lods
pusha
and
fcomp
pop
mov
add
cmp
xor
adc
sahf
adc
aas
pusha
scas
push
lea
mov
cwde
or
dec
mov
dec
adc
push
out
push
or
xchg
(bad)
pushf
jge
cwde
add
and
mov
into
push
test
mov
inc
jb
pop
sar
sbb
dec
je
mov
adc
xor
ja
sub
adc
ret
or
sbb
ret
sub
test
loop
add
add
retf
jbe
xchg
mov
mov
mov
dec
test
xchg
nop
jmp
rol
inc
jle
daa
(bad)
mov
sbb
add
bound
xchg
dec
popa
dec
pop
jno
ss
fisttp
jne
int3
push
or
inc
jbe
lds
add
aad
mov
mov
jl
add
xor
fucomi
add
sti
push
jg
ins
cmp
adc
pop
mov
jb
sbb
int
mov
dec
in
or
push
imul
push
inc
xor
or
xchg
push
or
loop
ret
sbb
jb
jmp
mov
lea
(bad)
stos
fadd
shl
dec
mov
sbb
push
fcom
cwde
ret
sbb
enter
pop
push
(bad)
nop
aas
xor
dec
je
jmp
xor
inc
xchg
lahf
xchg
inc
xor
retf
mov
fwait
and
add
mov
add
mov
or
or
push
adc
mov
int3
and
ror
cdq
fsub
or
cwde
in
adc
sbb
xor
jbe
ficom
jb
jo
or
hlt
lock
xor
ins
lock
cmp
ja
mov
xor
mov
sbb
(bad)
mov
aaa
in
xchg
ins
xchg
in
adc
hlt
or
js
xchg
cld
and
cdq
xchg
mov
xor
fdiv
in
mov
add
cmp
dec
mov
repz
cmovno
push
push
dec
shr
pop
xor
mov
lds
aam
add
arpl
add
push
mov
sbb
pop
sar
cld
ins
hlt
inc
repz
pushf
add
xchg
push
pop
test
lods
adc
pop
mov
in
xor
add
or
daa
fstp
adc
clc
shr
dec
inc
dec
mov
mov
mov
xchg
pop
cs
or
add
pushf
sub
lods
push
push
movs
inc
lahf
popf
fidivr
add
call
mov
dec
shl
cld
movzx
sub
lea
int3
retf
iret
repz
movs
xchg
(bad)
out
pop
adc
jne
mov
mov
add
adc
sub
mov
xor
jmp
sub
lods
or
(bad)
lods
mov
out
or
dec
call
push
rcr
jg
cmp
jl
je
sti
sbb
leave
jg
es
cmp
inc
mov
fld
xchg
outs
psllq
je
cmp
neg
stos
loop
pop
adc
stos
or
mov
clc
sub
sbb
call
xchg
sub
jl
and
mov
inc
mov
xchg
je
jb
or
fdivr
pop
in
jp
stos
or
outs
mov
loope
jmp
inc
jge
cmps
neg
jmp
or
mov
inc
ins
cmc
mov
stos
xchg
push
fdivr
mov
not
popa
sbb
inc
dec
or
in
mov
mov
pop
cld
dec
mov
stos
cmp
pop
pop
jb
dec
test
jb
mov
jmp
mov
lods
sub
mov
mov
aas
sti
div
mov
inc
lea
or
sahf
lock
jmp
(bad)
jecxz
cmp
inc
jne
inc
dec
(bad)
iret
sub
test
ss
test
psrlq
call
cmp
jbe
mov
add
lea
(bad)
cs
aaa
mov
push
push
cmp
sub
or
test
push
imul
ins
adc
adc
arpl
mov
add
and
and
or
and
sti
mov
inc
sub
sub
data16
or
mov
sub
add
arpl
pop
sbb
sub
sbb
enter
or
jecxz
or
push
sub
mov
shr
jmp
cmps
inc
or
adc
mov
dec
or
xlat
pop
arpl
sahf
add
inc
(bad)
mov
imul
xor
pop
retf
in
rcr
xor
je
add
icebp
je
addr16
or
jle
cmp
imul
pop
mov
xchg
lods
add
cmp
sbb
jne
jg
mov
pop
dec
cli
in
jne
jecxz
lods
cmp
outs
cmp
daa
je
cmp
je
xchg
adc
out
loop
mov
or
and
ret
mov
lods
cmp
je
sbb
jmp
(bad)
push
mov
lea
mov
inc
push
hlt
dec
and
xor
cmp
je
pop
xor
sbb
cmp
je
pop
cli
out
idiv
inc
inc
xlat
jmp
inc
jmp
shl
pop
fimul
push
ficomp
jge
mov
shl
add
mov
fild
jo
adc
sub
mov
sbb
lods
pop
sti
jmp
sub
xor
jne
jmp
shl
loopne
xor
stc
or
jge
stos
sub
scas
es
adc
adc
xor
ss
sub
mov
mov
iret
pop
lea
ret
push
sub
sti
or
int
xor
shl
repz
push
sbb
or
push
and
aam
fstp
lss
int
(bad)
adc
hlt
mov
jle
outs
in
cmp
jle
sub
cmp
mov
xor
int3
add
lods
jg
imul
and
sbb
mov
jl
pop
mov
outs
lods
fucomp
fdiv
cmp
in
adc
ret
shr
inc
sub
or
loopne
xor
xor
add
imul
stos
pop
mov
enter
jle
fisub
mov
jne
mov
xchg
dec
rcr
cmc
cmp
sub
pop
xchg
push
or
mov
fsub
push
jg
pop
fdiv
cmp
inc
pop
mov
scas
outs
sub
aaa
jnp
cs
push
outs
xor
sar
inc
add
loope
mov
frndint
fld
fsave
loopne
fwait
imul
add
fisubr
dec
fild
lea
mov
inc
outs
mov
fist
add
in
add
rcl
xor
mov
mov
add
jns
cmp
or
test
cmp
jae
scas
cmp
xor
outs
test
push
add
or
ja
jmp
ins
mov
movs
xor
mov
ret
and
push
jge
push
or
jmp
push
outs
mov
or
je
pop
dec
int
add
(bad)
jo
inc
xchg
push
jl
mov
mov
fisttp
cmps
sbb
jae
dec
add
mov
gs
fild
cmp
out
or
xor
lods
lock
fwait
jbe
dec
mov
jne
mov
push
enter
jmp
jne
dec
jne
jmp
mov
add
pop
outs
ins
out
mov
jmp
(bad)
rol
(bad)
push
or
lods
mov
popa
push
shr
push
lock
fstcw
fclex
fldcw
xor
mov
cmp
jge
xchg
sub
add
into
adc
lods
pop
cmp
lods
shr
or
cmp
je
adc
mov
push
adc
pop
add
inc
loopne
dec
sbb
loopne
inc
hlt
dec
add
loopne
add
aas
(bad)
not
fnstsw
test
inc
lea
adc
sahf
sar
mov
jb
lods
test
dec
and
xchg
lods
sub
add
jae
fimul
and
fiadd
inc
jmp
push
mov
stc
xchg
sub
fidivr
inc
imul
pop
jmp
mov
ins
xchg
outs
lds
add
mov
add
jns
(bad)
cdq
outs
test
icebp
or
lea
pop
in
fbld
cli
pushf
mov
pop
test
pushf
(bad)
movs
inc
add
dec
or
fisub
sbb
sbb
ror
inc
dec
(bad)
push
dec
jl
pop
xor
add
adc
sbb
test
push
(bad)
push
pop
inc
jge
out
mov
jle
or
dec
push
shl
mov
xor
pop
cmc
fcomip
xor
dec
sbb
ins
push
outs
jo
or
sbb
fdivr
pop
sbb
sbb
adc
sbb
ficomp
inc
lods
int3
mov
and
mov
(bad)
cmp
jmp
sbb
sbb
test
out
pop
mov
lock
mov
stos
jmp
pop
dec
push
or
stos
mov
push
mov
call
or
lea
or
sbb
inc
std
mov
cmp
add
call
dec
jne
mov
inc
push
leave
push
dec
or
rol
fild
jp
dec
ja
push
clc
(bad)
fdivr
leave
add
call
ret
call
ret
into
add
lods
or
cmp
mov
aas
pop
das
mov
ret
dec
add
lar
cmp
in
jbe
inc
or
jmp
cmp
sbb
add
mov
js
pop
cld
pop
jo
lea
inc
push
jae
sti
inc
imul
xchg
movsx
aas
xor
sub
or
call
repz
fisttp
lea
lea
pop
cli
push
mov
mov
cmp
outs
jne
(bad)
ja
jb
test
jl
mov
movs
out
mov
mov
push
mov
sbb
es
adc
pop
(bad)
mov
dec
ror
ret
mov
fwait
in
jle
jb
inc
cmp
pop
outs
les
movs
call
add
out
add
into
pop
push
dec
or
lods
cmp
xchg
pop
stos
mov
into
retf
test
push
out
pop
and
mov
ret
movs
arpl
jbe
std
repz
adc
mov
aas
popa
js
pop
mov
clc
and
repz
lds
cmp
fisttp
in
aam
test
push
jmp
popa
mov
xor
add
repz
cmp
or
cmp
push
xor
int3
mov
daa
inc
pop
popa
sub
out
iret
or
int3
cwde
sbb
xchg
push
jmp
je
sbb
or
(bad)
mov
int3
fst
fld
fld
ret
fild
mov
adc
enter
aad
ds
jnp
adc
nop
xchg
mov
ds
pop
sbb
out
pop
sbb
shl
ins
fisubr
mov
popa
sub
xchg
inc
cmp
or
push
pusha
or
inc
or
fwait
cmps
jmp
add
pop
add
addr16
retf
call
mov
addr16
cwde
or
repz
or
add
pop
pop
pop
fild
sbb
adc
rol
fisttp
adc
xor
pop
pop
pop
ret
mov
push
mov
ss
adc
mov
pop
add
dec
gs
jo
gs
sahf
adc
add
lods
nop
or
dec
outs
je
push
jo
sti
data16
jbe
sbb
push
adc
in
ins
je
jb
inc
or
shl
fild
je
je
or
lods
pop
fisub
mov
jo
xchg
cmp
jne
aaa
cdq
dec
imul
xor
fs
sub
jg
jb
je
rol
inc
pop
loope
push
int3
fild
jne
sub
push
cmp
ret
inc
nop
or
inc
jbe
jl
pop
dec
imul
stc
inc
inc
imul
bt
stc
and
cmp
dec
dec
ja
inc
inc
jno
sar
test
cwde
xchg
add
push
and
test
inc
mov
(bad)
call
inc
int3
add
mov
mov
les
mov
arpl
mov
push
push
xchg
jae
rol
or
out
ror
in
push
pop
stc
in
scas
test
js
mul
inc
js
outs
enter
xchg
mov
jae
mov
and
arpl
and
mov
jae
(bad)
pop
enter
invd
jae
cdq
fcmovne
jecxz
mov
lea
inc
add
ins
int
ror
add
xchg
daa
pop
shl
xchg
and
sub
ins
xlat
xor
aam
adc
addps
imul
add
cmp
add
push
lahf
jae
pop
or
inc
add
sub
sub
pop
pop
and
lods
mov
add
sub
mov
pop
enter
jp
movs
js
mov
ins
cwde
add
cwde
(bad)
cdq
inc
call
pop
nop
xchg
adc
scas
adc
pavgb
sbb
scas
jmp
clc
add
dec
retf
cmp
shl
enter
add
iret
movs
sbb
xor
das
pop
in
push
dec
repz
nop
jp
shr
pushf
add
push
or
mov
inc
jb
dec
jnp
lock
popf
fsubr
ins
nop
pop
push
dec
dec
cmp
ins
popf
sti
push
popa
test
dec
jne
sahf
pop
xor
das
rcl
jnp
popf
int3
xchg
int
xchg
sahf
dec
sahf
repz
repz
add
jl
sbb
jo
in
mov
jb
adc
not
je
aaa
aam
cwde
sbb
and
mov
repz
fldcw
int3
daa
pop
push
jge
test
fisttp
pop
movs
add
mov
in
mov
sbb
int
in
and
xchg
cmp
cmp
dec
adc
add
fdivr
pop
sub
lock
push
jl
jmp
in
jle
test
or
mov
sti
jbe
sti
in
rcr
inc
xchg
rol
add
js
pop
out
pop
xor
rol
cmps
into
leave
or
cld
(bad)
sti
(bad)
cli
(bad)
stc
(bad)
clc
push
dec
cmps
jmp
add
clc
call
adc
shl
or
push
mov
daa
and
cmp
adc
inc
dec
add
sub
adc
or
add
mov
add
pop
addr16
add
xchg
stos
and
data16
push
pusha
inc
je
mov
scas
and
push
dec
lods
cdq
bound
or
cmp
sbb
pop
jbe
add
sbb
fmul
add
pusha
aad
xchg
hlt
cld
pop
jg
aad
add
or
mov
ror
dec
cld
sbb
and
mov
pop
adc
icebp
push
(bad)
mov
or
mov
push
inc
rcl
add
jle
retf
jbe
aad
sbb
sub
jne
adc
mov
retf
xor
add
push
fmul
les
outs
movs
mov
or
hlt
arpl
push
adc
out
sub
cmc
mov
outs
add
xchg
pop
jmp
and
push
or
call
(bad)
inc
push
dec
jp
inc
(bad)
or
sahf
mov
xchg
lea
shr
or
sbb
popa
or
and
inc
movs
sahf
and
push
call
aam
cmp
stos
not
and
int
xor
fild
hlt
mov
nop
movsx
jmp
sahf
cld
ret
mov
enter
je
std
in
mov
mov
add
pop
or
adc
or
pop
mov
(bad)
xchg
lods
sbb
pusha
aam
nop
xchg
icebp
ret
sbb
inc
je
(bad)
sub
cld
sbb
dec
push
jns
daa
repnz
inc
dec
inc
iret
and
lods
repz
hlt
ss
lods
int3
cld
das
fwait
push
mov
push
fadd
or
outs
mov
mov
repnz
mov
pop
add
inc
cmps
test
sub
xor
(bad)
cmp
xor
mov
jno
xor
pop
push
ror
mov
and
test
inc
inc
lods
xchg
shl
lock
pop
push
es
add
inc
mov
inc
adc
inc
mov
ret
or
lds
mov
push
mov
inc
movs
sub
not
sub
dec
out
jg
xchg
aam
inc
xor
mov
adc
movs
or
dec
jg
popa
outs
ss
push
ja
mov
dec
adc
pop
adc
arpl
dec
inc
ds
(bad)
sub
add
je
push
ds
mov
inc
add
dec
pop
jo
pop
and
dec
repnz
ret
inc
or
fiadd
or
jmp
repnz
pop
cmp
xchg
sub
sbb
mov
and
js
mov
pop
xor
sbb
imul
mov
push
add
pushf
arpl
aad
out
sub
cmps
jbe
jne
inc
inc
mov
lods
push
sti
pop
xlat
mov
or
clc
jne
adc
call
into
je
arpl
adc
sub
jge
xchg
sbb
out
shl
clc
sub
test
sti
popf
jecxz
enter
mov
pusha
pop
cmp
scas
addr16
pop
inc
jbe
out
and
add
ins
mov
les
xchg
out
es
cmps
(bad)
cmp
fnstenv
pop
mov
repnz
lods
mov
nop
xchg
leave
sbb
clc
mov
shl
icebp
cmp
sahf
ror
jl
mov
mov
mov
and
push
xor
fs
or
xor
xchg
test
jo
or
les
mov
inc
sbb
mov
xor
sub
or
pop
pop
xchg
sub
xlat
jg
xor
jl
aas
adc
mov
fisttp
outs
push
jge
sub
aam
loope
dec
lea
add
les
add
(bad)
in
inc
jg
inc
test
cmps
ret
fwait
pop
inc
out
test
mov
mov
and
or
cmps
fstp
mov
add
mov
das
mov
movs
aaa
push
sbb
add
jb
pop
mov
dec
cmp
jne
or
mov
test
add
pop
push
xchg
in
push
xchg
pop
jnp
retf
int3
push
mov
(bad)
jmp
test
cmp
fnstenv
jne
or
ja
push
and
and
push
(bad)
addps
or
cmp
movs
mov
adc
shl
push
push
adc
adc
xor
jle
movs
aaa
jl
push
(bad)
jle
mov
or
movs
add
xor
not
dec
ret
stc
(bad)
js
or
inc
xor
xchg
push
mov
adc
nop
arpl
cmp
jge
iret
inc
mov
jecxz
push
into
add
jg
rcl
test
push
adc
and
pop
sar
xchg
shl
adc
push
push
adc
cmp
je
bound
mov
push
cmp
mov
dec
test
test
xlat
mov
mov
js
(bad)
out
(bad)
outs
adc
repnz
or
mov
mov
in
add
cmp
test
add
cmovg
leave
je
stos
adc
btr
xchg
jl
rol
jmp
xchg
dec
fstp
fsub
dec
push
xchg
jg
adc
dec
ret
je
or
mov
pop
ja
pop
jg
mov
xchg
sbb
add
ret
aam
jnp
ret
or
push
inc
cmp
jne
inc
inc
and
mov
bound
adc
push
xchg
mov
and
jns
test
aam
fisub
or
push
mov
inc
cmp
in
call
fs
out
in
add
dec
sub
test
sub
outs
imul
jg
iret
add
or
cmp
add
inc
jp
lods
dec
sbb
inc
repnz
push
add
(bad)
sub
nop
adc
mov
stos
xor
shl
push
test
adc
call
xlat
adc
push
mov
aam
and
pop
scas
or
in
xchg
adc
and
es
adc
push
xchg
mov
or
neg
mov
ret
cmps
mov
or
dec
lahf
or
add
jo
pushf
in
mov
das
pop
jnp
call
mov
out
push
aas
push
pushf
or
cmps
rol
push
mov
pop
pop
sbb
dec
iret
cmp
sbb
sbb
stc
xchg
in
mov
or
(bad)
and
xchg
cmps
nop
out
test
lea
adc
sbb
jns
sub
push
call
mov
or
pushf
test
(bad)
add
xchg
data16
enter
fadd
movs
inc
scas
xchg
in
stc
mov
xchg
cld
xor
xor
cdq
movs
es
push
aas
test
xchg
out
jnp
push
and
sbb
jo
mov
ja
int
push
jo
ret
add
(bad)
xchg
(bad)
test
(bad)
es
addr16
add
popa
div
add
adc
dec
add
push
mov
pop
out
aaa
mov
inc
push
push
adc
cli
faddp
pop
mov
pop
mov
popa
cdq
cmp
mov
add
add
or
repz
mov
and
pop
loope
fwait
neg
fsubr
enter
jbe
mov
repnz
iret
lock
lock
add
xchg
inc
pop
push
in
jl
jl
or
int
sub
adc
in
sbb
sub
sub
jnp
push
adc
adc
shr
(bad)
jb
pop
loope
push
jno
pushf
inc
sbb
sbb
xchg
jnp
icebp
pop
adc
call
inc
pop
or
dec
xchg
in
clc
sub
leave
ret
out
(bad)
nop
sub
and
nop
cmp
stos
popa
je
cmps
adc
xchg
mov
and
aaa
call
sbb
add
push
test
sub
inc
adc
mov
lock
lods
mov
add
and
add
fdivr
and
cmp
mov
and
mov
inc
inc
mov
dec
enter
xchg
fmul
dec
call
mov
add
mov
inc
add
inc
pop
fwait
add
dec
or
dec
fld
pop
adc
and
xchg
adc
and
fs
clc
xchg
cmc
or
or
push
mov
stos
mov
xchg
lods
push
cmp
push
inc
fs
dec
sub
or
adc
add
push
adc
inc
mov
seto
mov
inc
dec
call
or
enter
add
and
mov
xchg
cmp
xchg
sbb
or
and
(bad)
ror
push
or
or
and
pop
xchg
xchg
mov
shl
xchg
jb
(bad)
clc
xor
cs
sbb
pop
movs
clc
cmp
dec
mov
sar
jae
adc
mov
jo
jnp
fcom
or
dec
mov
cmp
lahf
fisttp
in
ficom
adc
(bad)
jmp
push
xchg
push
lods
shl
mov
sbb
movs
iret
and
cmp
xchg
push
enter
dec
cmp
jb
inc
or
inc
enter
pop
imul
mov
scas
ins
test
push
jo
xor
mov
test
dec
out
push
and
xchg
and
in
and
xchg
ret
or
cmp
sub
pop
mov
cmp
mov
add
mov
mov
sub
cmp
(bad)
or
or
neg
lss
ss
xchg
pop
pop
mov
pop
pop
xlat
rol
xor
loopne
cmp
push
jnp
sbb
push
stos
push
mov
mov
push
popa
mov
lods
sbb
xor
sahf
and
mov
or
or
mov
mov
sbb
adc
dec
je
jmp
mov
jo
pop
mov
test
ja
add
jns
mov
jb
mov
pop
and
mov
mov
adc
sbb
outs
sub
mov
loopne
bnd
and
jmp
jnp
mov
lea
pop
sti
nop
lock
js
dec
xlat
cs
std
add
adc
add
push
mov
push
xchg
je
jbe
jge
jmp
fild
mov
pop
pop
xor
sbb
jmp
inc
xor
pop
add
push
rcl
adc
cmp
jl
lea
shr
pop
add
(bad)
and
jge
push
jno
ror
dec
int
adc
add
repz
int3
adc
mov
pop
cmp
es
mov
jmp
rcl
popa
test
mov
adc
pop
and
pop
push
mov
push
push
dec
add
sbb
inc
sbb
je
or
xchg
jle
mov
cwde
ja
mov
or
jmp
xor
push
ret
clc
push
repnz
dec
mov
clc
or
mov
and
sar
fst
xor
sub
scas
aaa
mov
xchg
adc
or
sbb
call
sti
inc
hlt
adc
push
add
(bad)
cmp
xor
xor
jl
adc
mov
jg
cmp
jl
test
push
(bad)
mov
adc
(bad)
jle
adc
sti
push
mov
cld
cmp
jl
cmps
push
mov
call
jns
lea
adc
push
sbb
xor
xor
dec
dec
inc
out
or
dec
cld
xlat
mov
sub
adc
inc
test
dec
or
or
xor
fadd
fs
lock
add
or
push
sbb
shl
loopne
loopne
aad
and
test
adc
mul
dec
icebp
lods
div
add
jne
mov
add
pushf
mov
mov
mov
test
leave
nop
in
ficom
push
or
cmps
cmp
pop
cmp
nop
xchg
pushf
pop
cmps
in
push
pop
aaa
add
inc
aam
repnz
aad
add
mov
mov
sub
dec
ins
push
ror
mov
jge
sub
pop
sti
(bad)
ret
fist
mov
mov
jge
mov
sbb
call
je
mov
sub
xlat
aaa
jo
ss
or
dec
jge
aaa
imul
jno
sbb
push
outs
ret
add
popa
adc
inc
sbb
aam
inc
cmp
dec
cmp
aam
or
push
and
sub
test
jle
cmp
jge
mov
xor
push
mov
mov
and
inc
sbb
or
dec
add
adc
or
push
add
or
adc
(bad)
in
cmovle
mov
stos
mov
cmp
adc
cli
popf
dec
cmp
inc
jp
adc
pop
mov
adc
cmp
aaa
sbb
sti
sub
or
cmp
sbb
add
loopne
mov
jo
mov
and
in
aaa
jb
cmp
je
and
xor
lea
jmp
or
adc
xchg
sub
xchg
lea
add
popa
mov
enter
ror
inc
call
lahf
ror
xchg
dec
fsub
add
xor
sub
ins
add
fst
mov
add
add
lds
(bad)
xchg
rcr
inc
add
shl
dec
retf
daa
(bad)
push
(bad)
fcomp
jae
add
xchg
jno
lahf
mov
sbb
or
jbe
or
fstp
dec
mov
imul
cmp
push
pop
sahf
arpl
mov
xor
adc
jnp
inc
inc
ds
adc
or
and
mov
inc
imul
or
nop
pop
xor
mov
out
clts
int
test
add
ja
jno
cmp
mov
add
ins
and
inc
or
or
push
or
or
push
inc
popf
(bad)
xor
pop
dec
or
in
sub
add
pop
jo
sbb
adc
jg
add
or
mov
inc
xchg
clc
jg
mov
rsqrtps
mov
push
jb
jo
imul
shr
adc
nop
pop
div
mov
inc
rcl
(bad)
sbb
lea
or
sbb
push
mov
mov
dec
hlt
test
cmp
sbb
aas
es
mov
gs
pusha
and
sti
aaa
and
xlat
or
or
mov
inc
jge
add
jge
lock
int3
lods
inc
out
mov
mov
movs
adc
popa
inc
sbb
push
mov
pop
and
jmp
mov
sbb
nop
adc
cmp
jne
mov
mul
sbb
adc
cmp
leave
and
sbb
lods
scas
push
fnsave
xchg
fcomp
jecxz
orps
push
iret
ins
push
xchg
adc
push
add
test
adc
leave
sti
push
mov
bound
pmulhuw
call
xchg
add
addr16
repnz
pusha
add
imul
push
pop
lods
(bad)
jecxz
inc
xchg
sti
add
mov
lock
ss
pop
mul
sub
mov
pop
movs
mov
lock
add
je
adc
xchg
imul
pop
add
adc
pop
adc
fidivr
push
adc
or
das
jmp
out
adc
jge
arpl
loop
test
dec
or
mov
pop
fild
push
cmp
adc
mov
push
adc
push
add
add
movs
jmp
push
xor
das
push
fnstsw
or
call
imul
mov
inc
dec
add
inc
scas
and
xchg
movs
push
hlt
dec
jo
inc
pop
dec
xchg
dec
dec
int3
inc
fwait
jnp
sub
jb
fcomp
jecxz
pusha
ss
pop
mov
int3
dec
and
popf
movs
add
frstor
pop
outs
adc
push
hlt
les
xchg
sar
adc
mov
or
cmc
push
or
inc
mov
push
dec
xor
push
sub
and
add
add
sbb
push
and
mov
cmps
mov
push
mov
and
jmp
or
imul
fst
ds
mov
xor
and
scas
movs
iret
xor
prefetcht2
shl
sbb
and
fs
daa
jae
in
(bad)
xchg
dec
add
adc
rcl
int
sti
loop
jmp
cmp
in
jnp
mov
xchg
in
lods
mov
mov
adc
ds
or
outs
sub
cmp
cmps
pusha
xor
jnp
xchg
inc
mov
shr
jmp
cmp
jo
lock
retf
leave
xchg
sbb
test
(bad)
pop
je
es
mov
adc
test
mov
jae
stc
inc
pop
xchg
int
fist
mov
(bad)
and
pop
out
pop
pop
and
shl
fdivr
ss
pop
test
xor
ja
dec
push
lods
mov
mov
je
out
push
popa
inc
dec
mov
and
movs
in
test
aad
(bad)
jae
into
push
cmp
sbb
mov
sub
jae
or
movs
cld
jmp
push
adc
out
mov
dec
in
pop
jl
jp
lea
jmp
mov
add
in
inc
inc
or
and
pop
ret
and
loope
adc
jle
inc
inc
jne
or
or
inc
movs
pop
daa
and
xchg
xlat
xor
dec
in
sub
int3
jmp
les
push
dec
push
cmp
and
ret
lods
adc
cwde
push
in
adc
loope
data16
jge
push
daa
clc
daa
dec
ss
sub
in
cmp
xlat
push
mov
mov
push
and
bt
jbe
inc
lock
or
jmp
sti
mov
int3
shl
jmp
xor
or
ja
stos
sti
or
jno
sub
mov
sbb
dec
call
xchg
xor
je
repnz
inc
es
xchg
push
xor
xchg
adc
adc
movs
mov
je
sbb
pop
and
sbb
in
push
xor
scas
push
hlt
push
pusha
lods
in
jbe
ret
lahf
and
in
out
ficom
pop
aaa
lock
sub
mov
mul
or
xchg
pop
jp
aam
jmp
cdq
movs
pop
sbb
mov
sub
and
xor
sub
pop
(bad)
rcr
and
mov
xchg
fsubr
call
mov
dec
and
inc
dec
cs
outs
adc
adc
dec
mov
sbb
and
adc
sbb
loopne
repnz
lods
lahf
rdpmc
sub
add
aaa
add
dec
call
fwait
mov
iret
lods
pushf
loopne
leave
pusha
adc
dec
adc
lods
mov
sub
pop
ret
fisubr
sbb
pop
or
or
in
and
or
std
fwait
sub
cs
cmps
lods
push
(bad)
xor
ins
in
int3
sar
jge
sbb
and
fs
leave
xor
fwait
sub
bound
xchg
ds
add
pop
cmp
mov
add
jmp
scas
xor
js
adc
fild
aad
fucomi
inc
pminub
cmp
sbb
cmp
mov
push
jge
nop
stos
jge
fcmovne
mov
jecxz
mov
stc
inc
pop
and
les
scas
jnp
dec
ror
movs
ret
dec
cmp
inc
and
xlat
ins
add
add
add
adc
jb
retf
xchg
popf
or
mov
je
and
add
jno
scas
sbb
sbb
pop
push
in
mov
xor
pop
add
add
inc
mov
or
pop
and
pusha
scas
(bad)
mov
popf
and
cmp
jne
xchg
xchg
pop
test
or
movaps
adc
mov
stc
xor
mov
adc
mov
jo
adc
ja
or
mov
xchg
mov
pusha
add
add
add
call
lahf
scas
test
mov
xor
mov
adc
push
outs
dec
mov
call
test
sub
or
or
cmp
nop
pop
or
loop
in
mov
sub
jmp
aad
outs
push
jle
in
ss
and
bound
or
stos
jg
jne
sbb
push
dec
inc
push
cwde
iret
jne
shr
mul
sahf
sbb
pop
lock
cmp
(bad)
data16
xchg
inc
stos
rol
cmp
jne
and
clc
cmp
dec
adc
sti
add
jo
ja
mov
ret
mov
or
pop
xor
lods
inc
ret
mov
mov
sub
retf
push
imul
fcomp
xchg
sbb
clc
xor
sbb
lahf
pusha
pop
xchg
outs
xor
fbld
xor
mov
jmp
cmp
imul
out
jmp
mov
sub
inc
sbb
dec
inc
sub
sbb
jecxz
in
lea
add
je
sbb
call
jmp
mov
test
cmps
pop
dec
mov
mov
mov
and
outs
inc
out
push
push
mov
clc
leave
ficom
dec
mov
sbb
jne
add
movs
pusha
pop
sub
push
xchg
into
popf
ret
mov
hlt
iret
fadd
inc
cwde
or
in
xchg
mov
mov
sub
and
push
hlt
jmp
pop
sbb
enter
jnp
add
pop
in
nop
add
in
in
sar
repz
sbb
jg
dec
pop
mov
and
ja
jbe
push
sbb
cmps
xor
mov
dec
cmps
imul
mov
adc
sub
cwde
dec
test
mov
sbb
enter
xchg
in
rol
sbb
(bad)
cwde
cmp
mov
pop
enter
inc
(bad)
in
test
rcl
loopne
dec
xor
jmp
xchg
rcr
test
sbb
inc
mov
inc
rcl
cwde
ins
jmp
push
ret
or
mov
rcr
adc
xchg
or
arpl
jmp
aas
adc
mov
sub
ins
push
icebp
je
xlat
cmp
les
jns
ret
mov
cmp
sbb
adc
addr16
les
test
inc
push
mov
push
xor
jne
pop
inc
cmp
mov
add
push
and
pop
shl
int3
dec
adc
ror
pmulhuw
dec
mov
inc
test
xchg
cmp
mov
dec
lea
push
xor
pop
xor
bound
or
ja
es
repz
adc
xchg
in
sbb
enter
push
jo
xor
(bad)
bound
adc
jmp
movs
test
div
aam
add
outs
mov
mov
mov
aaa
test
movs
pop
xor
fdivr
das
dec
dec
xor
dec
aam
xor
jp
mov
sbb
out
popa
outs
xor
(bad)
xchg
inc
or
pop
push
scas
and
xor
xchg
pop
or
push
xchg
lods
xchg
xlat
and
fimul
xchg
in
xor
repnz
or
and
sub
test
add
or
clc
call
dec
clc
cli
pop
ja
bts
jmp
int
add
xor
fisub
mov
adc
push
and
je
dec
xchg
cmp
or
pop
cs
cmp
aad
mov
add
jmp
push
lods
test
push
pushw
mov
xchg
mov
bound
icebp
rol
dec
push
push
dec
xor
addr16
or
arpl
xlat
out
or
dec
das
cdq
add
push
xchg
jle
ret
add
inc
inc
jle
fidivr
sbb
mov
ds
adc
sbb
mov
movs
daa
clc
(bad)
aam
mov
mov
adc
cdq
mov
xchg
imul
cmps
jmp
cs
add
and
imul
cmps
xchg
lahf
retf
and
fist
xor
push
push
and
fisttp
pop
mov
mov
sub
push
arpl
cmp
jmp
dec
mov
mov
push
les
nop
fisttp
mov
push
test
ret
push
push
sub
sub
test
pop
push
dec
in
(bad)
hlt
aas
(bad)
mov
or
or
adc
out
jmp
adc
js
mul
retf
ins
push
xor
sbb
inc
stos
or
push
ins
pop
sub
push
scas
js
xor
push
add
mov
imul
pop
call
mov
or
sub
adc
mov
xor
inc
inc
cmps
mov
push
adc
sbb
(bad)
push
mov
adc
sar
bnd
and
fstp
cwde
sub
retf
repnz
xor
or
mov
or
dec
clc
das
push
push
lods
jge
js
retf
push
inc
add
add
inc
push
pop
pop
inc
ret
mov
pop
push
ins
mov
mov
bound
retf
push
sbb
popa
push
mov
out
bswap
es
movs
in
mov
sbb
ficom
lock
pop
shr
je
jb
push
xor
mov
pop
xor
mov
add
or
js
(bad)
push
shl
test
dec
and
sub
retf
adc
push
mov
jl
and
shl
cmp
stos
fmul
pop
and
push
dec
add
mov
sub
adc
adc
stos
mov
or
and
icebp
or
dec
neg
or
lock
dec
das
je
xchg
xor
fs
das
sbb
dec
pop
mov
arpl
cmp
fsub
and
or
add
clc
dec
lock
mov
adc
lods
adc
dec
fs
inc
sub
inc
mov
mov
dec
or
sub
call
mov
adc
mov
lods
sbb
mov
arpl
or
pop
sub
xor
mov
cmp
and
pop
shr
sbb
mov
dec
xor
push
push
push
or
mov
scas
jge
jmp
inc
or
aam
retf
or
nop
rcr
out
adc
imul
cwde
popf
sbb
test
cmp
mov
mov
or
call
inc
sub
aaa
jae
pop
add
cmp
leave
push
mov
xchg
pop
sub
adc
or
sub
cmps
adc
mov
mov
fwait
mov
mov
xor
dec
pop
push
imul
popa
and
in
bound
retf
fsubr
or
in
das
lock
or
aas
sbb
movs
sbb
cmp
imul
ret
adc
add
xchg
imul
mov
jae
add
jns
mov
ds
mov
sbb
mov
ret
mov
jmp
mov
xchg
cmps
cmp
(bad)
or
or
(bad)
add
pusha
add
add
mov
xor
xchg
leave
outs
mov
add
add
xchg
(bad)
mov
inc
add
jle
sub
enter
jae
mov
add
je
sbb
mov
sub
cmp
int
or
push
cmp
repz
loope
mov
push
cmps
movq
shl
in
sub
or
shr
push
enter
fld
cmp
out
jb
stc
pop
cwde
jns
mov
add
cld
or
retf
xchg
loope
inc
add
sub
call
adc
or
dec
adc
nop
daa
push
mov
and
aam
adc
xchg
test
in
and
int
test
add
stos
pop
test
xchg
mov
mov
inc
mov
clc
sbb
mov
jg
vandpd
out
lock
(bad)
addr16
add
adc
push
mov
or
fild
jge
rcr
pop
add
mov
ss
sub
jge
or
jne
adc
inc
xor
(bad)
imul
and
mov
dec
jno
cld
std
or
pop
xchg
or
adc
push
and
clc
mov
mov
(bad)
xlat
leave
adc
jp
ret
pushf
rol
out
add
mov
pop
enter
dec
sub
inc
pop
adc
sbb
shr
fadd
sub
daa
push
jnp
mov
and
out
addr16
(bad)
push
(bad)
bound
mov
push
and
pusha
mov
fdiv
jg
jno
ret
idiv
inc
push
rcr
adc
ins
leave
iret
xchg
ror
xchg
into
scas
push
fdiv
sar
push
mov
dec
xor
pop
or
cmp
add
push
and
retf
ins
push
xchg
mov
rcl
mov
push
scas
test
pop
ins
aad
jp
rcr
and
cwde
int
xor
sub
int3
xchg
enter
test
sub
ja
clc
ja
fld
fcompp
fnstsw
sahf
sub
fcomp
jae
adc
ret
sbb
jge
fwait
sbb
in
xchg
out
xchg
and
(bad)
push
jmp
cli
add
shl
mov
jne
and
cmps
xor
add
and
test
jmp
leave
cld
add
inc
repnz
xchg
mov
mov
daa
retf
and
or
std
mov
dec
mov
retf
fs
ins
xor
lds
retf
dec
in
mov
ret
mov
call
mov
jae
sbb
push
pusha
dec
sbb
sub
xchg
pop
fstp
pop
pop
rol
sti
mov
mov
sbb
cmp
(bad)
sub
mul
test
(bad)
sbb
jbe
push
jae
fadd
and
repnz
(bad)
jmp
icebp
push
push
leave
daa
out
gs
pop
int
repz
inc
daa
imul
push
mov
xor
test
or
cmc
dec
dec
mov
pop
test
mov
cmp
cmp
push
push
adc
and
push
fdiv
jae
mov
(bad)
rcl
pop
and
lock
mov
pop
push
xor
fs
sbb
jo
push
pop
pop
pop
enter
mov
ret
adc
mov
dec
cld
retf
pusha
shl
add
js
cmp
test
push
int
add
mov
into
clc
mul
xchg
test
stos
fistp
xor
daa
lea
adc
mov
pushf
cmp
push
fild
pop
mul
mov
into
in
clc
pop
repnz
push
push
nop
dec
sbb
jo
mov
xor
sbb
fst
(bad)
(bad)
fisttp
(bad)
hlt
rol
adc
push
into
xchg
hlt
push
and
cmc
pop
push
bound
scas
pop
mov
mov
pop
js
inc
out
sbb
int
sbb
adc
mov
outs
and
mov
fisub
fwait
adc
mov
mov
cmp
(bad)
push
ret
test
scas
sub
lods
push
inc
pop
or
leave
stos
cmp
stos
inc
aam
cmp
dec
mov
add
cmp
lods
mov
inc
add
dec
push
or
(bad)
adc
pop
push
sti
add
adc
xchg
loopne
inc
rol
inc
sbb
adc
rcl
inc
leave
rcl
pop
push
adc
mov
adc
add
(bad)
repnz
adc
mov
adc
dec
push
sbb
adc
push
es
shl
and
add
or
add
cmp
je
ds
push
imul
shl
xlat
fwait
and
xor
adc
movzx
dec
sbb
push
mov
xchg
jg
adc
adc
imul
add
ja
pop
add
test
jne
push
adc
add
adc
or
mov
inc
ds
pusha
test
push
and
mov
inc
addr16
xchg
inc
jl
adc
cmp
and
sub
sbb
sub
stos
jo
pop
jb
add
adc
xchg
loopne
loope
loop
test
jne
lods
or
sbb
push
adc
jne
push
cwde
dec
(bad)
mov
inc
and
test
mov
adc
nop
mov
adc
and
mov
jno
pop
jo
mov
sbb
pop
daa
sub
dec
mov
in
jne
xchg
sbb
and
(bad)
aaa
sbb
enter
sbb
add
fs
add
mov
repnz
ret
rol
inc
push
stc
dec
jmp
sbb
mov
and
adc
das
or
jnp
gs
lods
or
outs
jo
adc
or
cmp
arpl
pop
jle
push
(bad)
jmp
jo
pop
add
and
sbb
movs
sub
jne
(bad)
ds
mov
add
inc
icebp
das
mov
test
popa
cld
jbe
fidiv
cmp
adc
sbb
xchg
pop
int
mov
aam
mov
movs
lahf
or
cmp
call
adc
mov
shl
inc
dec
aad
cdq
bswap
inc
pop
adc
inc
dec
jne
xor
xor
push
lahf
dec
add
pop
es
ins
xor
ds
fnstsw
and
mov
add
je
cmp
je
and
pop
adc
test
cwde
inc
xchg
outs
push
add
pop
or
or
sub
mov
mov
repnz
dec
cmp
out
sbb
xor
lea
out
test
(bad)
adc
jp
push
or
jge
push
(bad)
add
dec
and
dec
mov
xor
pop
ret
test
and
mov
push
add
or
mov
std
pop
test
mov
dec
test
jl
inc
loope
outs
in
in
cwde
jb
inc
dec
jne
xchg
pop
push
rcr
inc
fadd
xchg
pop
push
leave
add
sbb
mov
or
jmp
mov
adc
shl
add
pushf
pop
adc
pop
mov
(bad)
pop
or
mov
or
test
popf
test
das
in
ins
mov
or
pushf
push
inc
sub
and
jns
pop
sbb
test
nop
adc
jo
lock
mov
ret
inc
push
fwait
jl
je
cwde
enter
xchg
push
push
mov
nop
sub
mov
mov
jl
je
sbb
test
int3
dec
push
mov
setb
ret
inc
fsub
lods
mov
xchg
jne
or
or
fidiv
imul
add
ins
bound
aaa
(bad)
sub
push
sbb
pop
popa
jb
int
imul
or
cmp
es
pushf
jae
inc
fst
jmp
add
leave
xchg
adc
xor
adc
mov
jbe
enter
retf
xchg
movs
mov
clc
call
jne
div
out
pop
je
or
mov
or
imul
cs
scas
cmp
push
add
sbb
outs
cs
js
add
cmps
ins
xor
push
cmp
mov
add
mov
mov
ja
cmp
add
push
fs
loopne
sub
call
push
xor
outs
leave
cmp
pop
push
inc
inc
outs
popa
bound
ins
call
mov
aam
fs
push
lds
sbb
scas
xor
mov
pop
push
or
popa
outs
ret
and
in
jnp
imul
je
out
push
push
popa
imul
sbb
test
sti
jb
fwait
sub
jmp
push
imul
scas
sbb
and
sahf
push
clc
dec
outs
inc
ins
imul
mov
gs
sbb
arpl
inc
add
out
jae
rol
in
fmul
add
add
sbb
nop
push
cmp
add
mov
or
fild
fldenv
shl
add
and
pop
(bad)
mov
inc
sub
icebp
inc
mov
inc
sub
int
fstp
mov
pop
popa
mov
icebp
popa
mov
inc
mov
loope
mov
repz
push
and
add
push
push
call
mov
ins
cmp
in
mov
js
jo
enter
push
push
sahf
pop
inc
and
jmp
fstp
fnstsw
adc
and
div
push
sahf
aam
into
push
fcom
lock
inc
neg
mov
scas
mov
lock
movs
ret
fadd
pusha
add
add
pop
pop
add
imul
movs
sbb
mov
inc
fadd
lods
cwde
mov
gs
mov
test
jbe
int
repnz
xchg
xchg
imul
mov
mov
adc
mov
pushf
fimul
dec
mov
nop
ret
gs
data16
xor
ja
scas
jle
mov
loopne
enter
mov
xchg
pop
push
call
inc
ins
loope
or
fs
jb
push
cmps
jle
mov
arpl
imul
fld
pop
adc
add
mov
stos
clc
pushw
je
push
psubw
inc
les
jb
popf
ret
sub
sbb
adc
xchg
dec
pop
or
ins
fst
sbb
sub
sbb
push
ja
adc
push
cmps
clc
pop
pusha
push
movs
pop
jp
not
adc
add
sbb
hlt
sbb
por
sub
add
popf
sub
jge
jmp
adc
inc
cmp
and
daa
pusha
sub
push
jne
and
mov
mov
dec
test
dec
pop
shr
out
and
into
mov
in
shl
adc
dec
mov
test
adc
push
lods
push
or
dec
mov
push
add
xor
inc
and
add
cli
mov
js
mov
cmp
gs
mov
add
dec
xor
(bad)
mov
xchg
dec
sbb
xchg
cld
dec
mov
call
and
inc
stc
inc
sub
outs
ja
aaa
dec
pop
or
out
mov
cmp
iret
xor
hlt
xchg
mov
mov
push
loop
retf
je
mov
ror
push
iret
add
in
clc
sbb
add
sti
jmp
inc
xor
push
add
pop
and
or
nop
add
inc
inc
mov
mov
jnp
mov
adc
js
loopne
xchg
ja
mov
je
sbb
or
sub
sub
xchg
cmp
ja
or
xor
or
in
(bad)
mov
add
sub
neg
fcmove
cmp
jg
mov
or
call
jno
mov
mov
aad
inc
mov
call
pop
cmovs
test
jg
in
shr
or
add
(bad)
cmp
jle
mov
xor
xchg
jge
jne
jle
mov
adc
pop
sbb
add
fistp
shl
sbb
aaa
sbb
push
sbb
cmp
add
nop
scas
out
fs
cmp
sbb
imul
in
jmp
jg
xchg
sub
and
xor
jo
out
test
sub
add
add
and
xchg
adc
cld
add
cmp
inc
enter
pusha
dec
jo
inc
jae
pop
sbb
and
sbb
aad
jmp
adc
data16
pop
inc
jg
sub
xor
outs
push
nop
xor
push
and
aad
inc
and
pop
retf
mov
cmp
rcl
inc
pop
sbb
loopne
cmp
call
daa
xchg
or
int
xchg
int3
int3
lock
push
jmp
sbb
dec
push
and
ret
ret
jle
mov
mov
mov
pop
dec
inc
mov
lds
pop
xchg
mov
add
dec
inc
shl
and
les
ja
data16
adc
ins
xchg
jns
int3
pop
and
mov
ss
mov
jb
out
shr
aam
cmp
mov
call
add
sub
rol
cmp
or
mov
dec
mov
or
mov
xor
psrld
or
or
pop
fmul
fadd
test
call
scas
sbb
dec
jnp
bound
rol
push
push
adc
add
mov
mov
xor
hlt
mov
ss
mov
call
push
lea
xchg
xchg
loopne
lock
cli
rol
gs
pop
push
adc
mov
sti
push
or
push
jb
jmp
mov
inc
mov
sbb
or
inc
test
xor
sub
cld
and
aad
or
adc
add
push
popa
rcr
add
das
sub
pop
fwait
shl
lea
je
rcl
daa
mov
aas
(bad)
inc
ins
test
mov
mov
jmp
push
fadd
push
or
(bad)
call
xlat
and
adc
imul
adc
mov
mov
sub
enter
jecxz
sti
inc
push
inc
sub
dec
shl
sti
jbe
je
mov
xchg
hlt
jmp
daa
jae
adc
mov
ret
scas
ja
bound
dec
xchg
xchg
push
and
inc
mov
pop
cmp
stos
icebp
or
stc
sbb
and
pop
and
mov
ss
and
jb
loope
vsubsd
mov
fmul
inc
mov
and
mov
adc
dec
mov
mov
cmp
xchg
cs
pop
push
mov
jl
and
lea
aaa
movs
or
out
push
sub
call
jbe
sub
add
mov
inc
inc
jg
outs
mov
fdivr
call
into
push
icebp
ret
dec
cmp
(bad)
sbb
cs
lods
push
(bad)
and
jb
or
and
jno
call
sbb
and
cmp
je
mov
cmp
movs
add
je
fild
or
jle
(bad)
cmp
leave
loopne
(bad)
cmp
mov
jnp
sub
je
inc
adc
frstor
mov
mov
retf
cmp
jle
cmp
cmp
dec
or
push
imul
add
xchg
pop
inc
jg
loope
push
mov
or
dec
outs
sbb
shr
pop
or
push
inc
xor
dec
inc
pop
ret
lock
jg
jno
fist
cmp
out
int3
mov
(bad)
test
pop
add
or
xchg
sbb
cmp
mov
jno
push
sahf
or
xchg
jmp
sahf
adc
fdiv
and
pop
sub
and
inc
cmp
xor
dec
and
jne
inc
popa
inc
or
jle
pop
mov
mov
jne
mov
rcl
inc
or
or
hlt
inc
or
push
cmp
and
hlt
nop
(bad)
cmp
out
sbb
cmps
and
push
aad
loopne
sub
lahf
loope
xchg
cmp
mov
add
push
cmps
mov
aas
push
inc
mov
aad
adc
add
mov
dec
idiv
fidiv
nop
or
adc
and
sub
or
inc
add
outs
cmp
sub
inc
sub
cmp
cmp
dec
adc
pop
pusha
pop
dec
jo
dec
(bad)
cwde
or
rcr
or
adc
(bad)
xor
and
cwde
aaa
shl
fmul
or
cmp
dec
cmp
popa
pop
mov
leave
leave
or
sar
push
js
pop
mov
jecxz
or
inc
or
scas
jnp
call
or
ret
pop
push
sbb
hlt
xor
xchg
js
int
mov
xchg
sbb
and
add
sub
aaa
loopne
sbb
sbb
dec
add
mov
and
mov
retf
cs
mov
iret
ret
je
or
(bad)
push
ret
and
test
adc
sbb
hlt
inc
and
adc
inc
jmp
xlat
push
sbb
daa
push
xlat
push
ins
call
push
shr
mov
mov
scas
push
dec
pop
push
xor
pushf
jl
cmp
je
push
add
cmp
pusha
sub
jne
inc
jne
mov
hlt
dec
add
call
icebp
call
fistp
or
sub
xchg
pop
push
shl
in
cmp
add
sub
ror
test
rcl
xor
pop
cmp
inc
daa
loopne
(bad)
div
rcr
xchg
pop
loopne
adc
xor
pop
push
ins
sbb
push
xor
call
cmc
mov
xor
push
(bad)
fimul
dec
sbb
add
je
popa
add
(bad)
fldcw
pop
xchg
call
pop
icebp
and
xor
je
ret
mov
cmp
cmc
push
aaa
add
push
push
test
sub
inc
pop
xchg
ds
push
add
ds
inc
cli
push
fdiv
mov
and
idiv
or
push
adc
inc
or
je
mov
adc
mov
adc
sub
and
push
add
dec
movs
loopne
loop
push
push
gs
fwait
push
dec
rcr
cwde
add
aam
ror
jle
in
sub
ret
push
xor
add
mov
or
sbb
test
sbb
add
rcl
nop
add
cwde
or
jge
xor
adc
cmps
xor
add
sub
push
ja
mov
pop
mov
(bad)
push
mov
or
push
loope
pop
adc
test
inc
xlat
inc
sub
dec
inc
push
sbb
dec
push
mov
or
jbe
cmps
loop
push
sti
push
nop
adc
je
mov
in
pop
adc
and
pop
adc
sbb
inc
adc
rcr
mov
retf
cmp
rcl
pop
adc
inc
push
and
add
out
or
(bad)
sbb
cmp
jne
sbb
call
and
mov
fwait
sub
xchg
xor
outs
inc
pop
push
lahf
rcl
inc
sub
repnz
add
ja
push
nop
fst
push
inc
and
xchg
push
mov
ficomp
cmp
push
je
adc
push
les
(bad)
mov
mov
add
jae
sub
(bad)
fs
push
out
fdivr
enter
dec
cmp
pop
fst
push
adc
popa
daa
sti
(bad)
sti
add
cmp
cmp
push
sbb
mulps
cmp
and
fwait
je
lods
mov
inc
push
test
arpl
mov
mov
sub
push
adc
pop
mov
(bad)
iret
lods
jne
sbb
sbb
fwait
sub
jb
inc
(bad)
or
clc
xchg
push
mov
adc
jns
fsubr
call
stos
or
mov
ret
call
pop
mov
add
push
add
test
clc
jmp
add
sub
jmp
or
pusha
or
icebp
inc
out
fiadd
mov
push
adc
popa
(bad)
sub
and
sbb
pop
fcmovb
fisubr
mov
inc
sub
(bad)
and
pop
sbb
and
and
and
mov
adc
mov
sub
adc
cmp
jnp
add
inc
push
nop
ins
cmc
iret
lds
adc
(bad)
push
and
push
cmp
push
jns
ret
fldenv
and
jl
or
rcl
and
cmp
pop
lds
cmps
pop
add
pop
rol
stos
jp
je
cmp
(bad)
enter
(bad)
sub
or
jl
sbb
inc
and
push
inc
push
stos
and
clc
mov
pusha
nop
mov
push
enter
jnp
daa
and
jb
out
lods
add
pop
push
inc
push
push
jb
dec
add
add
sub
test
pop
mov
mov
inc
add
aam
fs
fs
inc
outs
xchg
(bad)
stc
pop
or
fstp
pop
pop
xchg
or
adc
bound
push
push
cmp
adc
clc
xor
mov
test
push
inc
xor
sbb
inc
jbe
shl
push
pop
inc
popa
cmp
pop
adc
push
fmul
mov
inc
dec
or
push
pop
pop
js
adc
add
jae
push
leave
or
add
fist
fidiv
and
fimul
imul
scas
gs
inc
sub
add
pop
fmul
pop
ss
xchg
cmp
arpl
in
pop
or
jns
add
add
cmp
out
cmp
and
pop
inc
add
popa
dec
fsub
addr16
adc
jb
push
dec
push
jecxz
push
jmp
mov
or
adc
xor
sbb
nop
mov
xchg
imul
leave
leave
outs
jo
cmps
pop
repnz
jecxz
cld
inc
add
std
unpcklps
mov
test
push
push
inc
retf
sbb
ds
inc
sbb
inc
ret
adc
add
data16
add
dec
cld
sbb
in
in
cmp
push
sbb
ins
fwait
cwde
sbb
pop
test
push
or
add
add
add
add
mov
or
add
jnp
or
push
mov
cld
(bad)
(bad)
push
and
adc
sbb
idiv
cmc
push
push
push
push
push
(bad)
out
call
adc
out
cmp
jmp
jmp
(bad)
jmp
call
jg
jmp
in
and
add
data16
rol
and
cmps
imul
xor
shr
or
dec
pusha
fnstcw
adc
pop
iret
add
mov
call
les
jne
shr
pop
mov
in
cmp
pop
jbe
enter
sbb
pop
rcl
mov
mov
sbb
call
adc
and
test
inc
movs
stc
pop
rol
sub
add
call
out
add
pop
xor
fild
gs
push
clc
and
inc
ss
sti
test
dec
push
xor
and
cmp
inc
scas
add
(bad)
cmp
or
and
or
cmp
inc
cs
dec
adc
(bad)
cld
frstor
in
add
inc
pop
loopne
sub
sub
mov
outs
pop
dec
xor
das
in
add
mov
cmp
mov
ja
dec
add
cmp
pop
test
xor
(bad)
aaa
mov
mov
add
das
push
clc
pop
mov
adc
add
cmp
add
mov
or
jg
mov
mov
mov
mov
mov
mov
and
and
mov
cmp
das
jbe
add
push
mov
in
sbb
cmp
loop
cld
loope
cmp
jmp
int3
lock
cmp
add
movs
enter
lds
lods
mov
adc
add
ins
call
inc
fwait
cmps
imul
data16
or
and
fdivr
lock
mov
ss
rol
pusha
mov
cmps
jmp
cmps
test
jl
call
mov
mov
mov
cwde
inc
add
inc
xchg
ss
imul
dec
mov
adc
jmp
scas
fld
sub
mov
add
lahf
adc
inc
mov
dec
ret
dec
mov
lods
adc
(bad)
loope
rcr
or
sbb
push
pop
rcl
pop
ja
ret
stos
js
pusha
or
and
mov
ss
stos
loopne
repnz
push
inc
xlat
rcr
or
scas
or
push
dec
add
inc
iret
repz
loopne
or
repnz
div
jo
pop
add
add
aaa
repz
add
push
cmp
pop
fcom
push
sti
adc
pusha
out
js
add
pop
or
and
fadd
mov
dec
ins
cmc
lea
cmp
addr16
call
or
mov
adc
add
lock
or
push
push
sahf
sub
ja
imul
das
inc
jp
enter
push
jae
push
enter
fcomp
adc
add
mov
add
mov
sbb
lahf
adc
fstp
push
pop
push
test
sbb
aam
mov
push
push
pop
inc
add
rcr
sub
arpl
lds
inc
and
pusha
dec
pop
ja
inc
jb
jae
test
and
dec
inc
gs
ins
or
test
inc
or
push
cmp
xchg
mov
push
inc
cmp
jo
adc
jae
mov
ins
popa
xchg
add
dec
dec
outs
and
repnz
jnp
adc
jo
imul
dec
add
push
stc
bound
xchg
dec
push
popa
sub
xor
inc
jo
mov
or
xchg
inc
mov
add
mov
aaa
jl
mov
(bad)
shl
mov
sbb
mov
jmp
xor
add
inc
ret
or
jl
xlat
push
mov
inc
push
cld
mov
cmp
or
or
dec
nop
add
mov
add
or
ins
iret
pop
jmp
and
lahf
(bad)
xor
sar
pop
jl
sub
mov
in
lea
or
inc
fcom
add
dec
sbb
std
scas
mov
and
mov
add
cmp
xor
jecxz
aad
js
repz
mov
cmp
mov
mov
add
aaa
mov
adc
xor
cwde
add
sub
or
sbb
and
mov
adc
push
push
push
inc
ss
dec
test
gs
pop
aam
mov
mov
mov
push
xchg
mov
mov
and
xor
sbb
pop
inc
add
add
mov
iret
sub
ficom
aam
mov
ja
push
aaa
shl
adc
sti
xchg
cmp
(bad)
pushf
pop
cmp
sub
push
add
stos
and
or
push
add
je
sub
add
call
push
push
mov
clc
inc
fadd
pop
les
or
dec
fsub
loope
sbb
mov
pop
or
jge
or
pop
mov
xor
mov
icebp
test
aad
cmps
jl
mov
xor
out
adc
movs
pop
add
xor
pop
inc
mov
mov
inc
inc
lea
test
lds
mov
push
ficom
bnd
or
and
adc
test
lock
mov
add
(bad)
in
mov
pop
(bad)
clc
xor
call
not
inc
clc
xchg
mov
push
add
ror
adc
mov
loopne
fwait
movs
fsub
mov
(bad)
imul
lods
sub
fsubr
lahf
add
repnz
xor
daa
mov
xor
sub
lods
lock
mov
jl
cmp
das
es
cld
sbb
daa
and
or
fisub
mov
outs
int3
mov
popf
je
imul
mov
add
lock
pop
or
add
je
mov
xchg
clc
cwde
push
push
test
je
shl
or
pop
xchg
sbb
mov
jle
imul
inc
mov
adc
inc
sub
or
xchg
pop
xor
(bad)
lods
sti
adc
cmp
xchg
cmc
sahf
dec
fisub
sbb
fdivr
jge
mov
test
hlt
push
mov
ja
out
mov
mov
movs
jae
daa
shr
popa
or
mov
lock
xchg
cmp
xor
shr
sub
cmp
add
lock
sti
xor
add
into
mov
pop
(bad)
jb
add
cmp
jp
xor
mul
and
outs
and
ss
test
adc
jo
xchg
sub
or
jmp
fild
mov
sub
mov
mov
mov
les
sub
mov
pop
xchg
bound
lidtd
sbb
ret
ret
mov
neg
mov
mov
adc
adc
adc
mov
ror
cld
and
inc
shl
pusha
outs
adc
fmul
ins
cdq
leave
dec
mov
test
xor
ror
aam
pop
ins
test
outs
sbb
es
cmp
sub
mov
mov
ficom
sahf
call
and
test
aaa
pop
adc
imul
or
les
mov
inc
or
cmp
ss
mov
(bad)
push
xor
add
add
or
add
mov
mov
inc
push
mov
push
inc
xchg
mov
pop
jae
mov
mov
add
(bad)
cwde
iret
jmp
cli
lds
arpl
cmp
push
(bad)
cwde
add
inc
(bad)
(bad)
xor
or
sub
cmp
dec
data16
ficom
sub
shl
mov
pop
and
ja
jbe
push
cmp
push
dec
je
jnp
xchg
adc
push
mov
dec
movs
xchg
or
xchg
xor
add
ins
add
sub
mov
fwait
xchg
mov
xor
or
inc
add
inc
mov
mov
rcr
xchg
and
(bad)
shr
inc
dec
mov
mov
add
cmp
pop
cmp
gs
pop
inc
push
shl
stos
stos
or
sbb
int3
sbb
inc
add
cmp
sbb
js
inc
push
pusha
loope
cmps
and
adc
sbb
mov
mov
movs
(bad)
daa
mov
call
out
data16
add
mov
xor
mov
xor
mov
ss
push
push
cmp
and
sti
push
in
dec
(bad)
fld
sbb
pushf
add
outs
xor
cmc
add
jnp
push
cmp
adc
div
lds
mov
enter
dec
inc
mov
add
mov
and
je
and
test
push
or
and
(bad)
xchg
or
add
xchg
jmp
jg
inc
xchg
ret
ja
jge
test
and
aad
push
inc
jp
push
pop
and
dec
and
adc
adc
cmp
push
mov
pop
xor
and
aaa
fwait
or
xchg
scas
and
mov
mov
inc
add
inc
push
sbb
adc
pop
ins
sub
dec
add
jle
fs
ret
pop
add
fistp
ins
push
and
add
cs
mov
add
push
pop
mov
movs
loopne
ror
or
fucomi
outs
js
add
add
or
push
or
fidivr
inc
inc
adc
bound
push
(bad)
mov
sub
or
pop
mov
jecxz
inc
add
in
inc
inc
inc
aas
inc
jb
arpl
and
stos
push
mov
adc
movs
test
jmp
adc
jb
inc
or
inc
(bad)
scas
xchg
or
add
aad
and
add
jmp
(bad)
sbb
loopne
(bad)
ins
lea
dec
(bad)
sub
add
push
(bad)
fld
adc
daa
push
add
movs
scas
test
mov
std
nop
inc
xchg
clc
stos
xchg
push
loopne
inc
push
push
mov
add
cmp
leave
lock
je
shr
add
pop
retf
push
mov
in
and
pusha
jmp
popa
ss
call
fld
sbb
je
sub
sub
push
or
add
pop
cmp
pop
jb
or
aas
add
dec
push
mov
in
sub
sub
sub
je
add
push
sub
lods
div
sub
xor
adc
leave
sub
or
inc
xchg
jle
cmp
ret
xor
inc
mov
movs
mov
mov
shl
out
dec
jno
adc
pop
pop
push
and
mov
hlt
leave
xchg
xor
xor
mov
mov
push
add
sbb
mov
clc
or
push
xchg
sub
pop
lock
cld
jne
repnz
adc
push
adc
adc
call
push
cmp
fadd
mov
clc
outs
mov
add
add
test
inc
cmp
mov
and
cmp
mov
fmul
jo
or
(bad)
ja
dec
or
inc
push
add
aaa
sti
inc
in
mov
sbb
push
test
daa
mov
adc
add
or
lods
adc
and
push
add
lock
push
mov
push
out
fimul
or
push
sub
fidivr
and
ret
inc
push
xchg
and
iret
sbb
sgdtd
cmp
(bad)
adc
lea
fisub
inc
xchg
pop
cmps
dec
aaa
shr
or
push
sbb
rcl
sbb
in
stos
jmp
pop
inc
mov
push
inc
nop
mov
mov
sbb
pop
repz
adc
arpl
mov
push
clc
jnp
sub
inc
in
or
mov
inc
xor
inc
clc
inc
sti
cmp
add
je
push
or
jae
das
pop
pop
je
pop
(bad)
das
outs
pop
xor
add
cmp
sbb
pushf
sub
or
push
in
or
mov
lods
dec
and
dec
sbb
sbb
xor
inc
mov
or
repnz
or
(bad)
not
or
rcr
jmp
adc
mov
add
pop
and
shr
cmp
mov
outs
or
test
imul
bound
outs
addr16
or
adc
dec
enter
fst
or
mov
wrmsr
test
sub
add
ins
pop
(bad)
aaa
push
popf
sbb
adc
call
mov
dec
sub
mov
mov
xor
cli
push
dec
dec
xor
mov
xor
fadd
adc
(bad)
mov
push
adc
test
mov
inc
mov
inc
jg
mov
push
mov
xlat
jmp
jmp
test
jne
pop
jnp
sub
or
inc
les
aaa
cli
movs
lods
mov
rcl
inc
mov
test
jmp
popa
stos
(bad)
ficomp
xor
mov
call
pop
xchg
in
cmp
jl
aaa
in
cmp
mov
and
ins
and
ret
outs
jo
push
pop
mov
push
push
mov
or
aaa
je
scas
aam
ret
push
clc
sar
mov
test
mov
mov
into
mul
fist
mov
sbb
ret
mov
out
out
jno
inc
push
mov
imul
xor
enter
lea
sub
xchg
daa
jae
pushf
jecxz
movs
push
sub
aaa
pop
dec
mov
call
pop
jecxz
bound
or
sbb
push
xor
loopne
call
inc
sub
enter
ja
mov
cmp
push
lods
push
ss
add
les
push
inc
movs
cmp
adc
test
pop
sbb
add
ins
pusha
call
cmp
loopne
and
sti
movs
mov
cmp
sub
repnz
or
push
jne
push
es
adc
dec
or
push
push
sahf
rol
inc
imul
cmp
ins
or
cmp
or
adc
push
pop
inc
jl
js
mov
retf
retf
gs
inc
mov
jno
inc
xor
daa
xchg
nop
dec
fld
add
xor
pop
ins
or
jae
out
ins
hlt
clc
xchg
in
add
add
jge
sub
xchg
pop
push
outs
pop
lods
add
xor
inc
jg
sub
add
retf
(bad)
jmp
mov
pop
loopne
sbb
repnz
push
imul
bound
rcl
cmp
push
fidivr
cld
lods
lea
inc
push
in
adc
mov
dec
sbb
into
test
sbb
inc
pop
add
into
mov
pop
ins
mov
jb
cmp
or
mov
pop
cmp
sub
add
add
or
add
sub
mov
jmp
dec
sar
xor
call
cmp
gs
push
sbb
aam
inc
mov
arpl
(bad)
loope
adc
add
mov
aam
jbe
xor
dec
dec
add
hlt
pop
loope
rcr
jmp
mov
inc
fcomp
dec
add
cwde
in
push
sub
inc
nop
jp
outs
pop
inc
jnp
push
or
xchg
sbb
bound
sub
and
call
mov
ror
inc
les
cmp
mov
push
outs
dec
add
inc
cmp
add
repz
mov
inc
fcomp
inc
add
in
inc
int
retf
add
dec
jae
sbb
call
rcr
mov
movs
mov
inc
test
bound
mov
pop
movs
mov
or
fs
in
mov
mov
fwait
cmp
adc
movsx
push
add
or
xor
or
mov
mov
mov
xor
push
adc
or
lock
adc
or
push
or
or
push
stos
dec
shl
mov
fcomp
bswap
xchg
dec
into
sbb
adc
lods
push
pop
jae
or
inc
addr16
call
rcl
push
outs
in
repnz
push
stos
add
jne
mov
pop
push
sbb
stc
inc
out
push
ds
daa
pop
mov
mov
jmp
dec
cmps
(bad)
in
and
aam
adc
test
xor
or
pusha
pop
pop
popf
popf
xor
jbe
jne
leave
xchg
or
out
mov
sbb
mov
add
add
xchg
inc
mov
fs
dec
add
daa
jmp
jecxz
dec
inc
push
push
mov
xchg
adc
sub
inc
ins
push
pop
inc
mov
cmp
rol
ins
ror
dec
or
retf
sbb
dec
stos
jb
cmp
xchg
fs
xor
test
mov
dec
(bad)
imul
repnz
pop
stos
xor
mov
ss
cmp
std
add
push
shl
ror
(bad)
lock
adc
ret
sub
adc
fs
nop
test
jecxz
add
and
jnp
pop
in
adc
xlat
daa
pushw
nop
add
cs
pop
inc
push
sbb
sbb
fwait
mov
lods
push
div
or
inc
adc
xor
mov
dec
daa
inc
add
xor
inc
sar
jns
into
adc
pop
mov
fld
lahf
jl
pop
mov
xchg
pop
retf
fldenv
cmp
inc
sbb
adc
sbb
out
adc
lods
ret
pop
xchg
or
adc
add
loopne
je
(bad)
in
push
xor
mov
adc
pop
add
mov
hlt
push
int3
(bad)
adc
mov
retf
enter
dec
and
or
lahf
lods
push
mov
add
sbb
test
fsubp
mov
jno
push
sbb
dec
or
dec
lidtd
rcr
cmp
jne
sbb
mov
mov
pop
dec
fdivr
ins
fmul
inc
mov
mov
add
hlt
mov
scas
dec
repnz
es
sub
cmc
mov
je
and
xor
(bad)
arpl
or
jge
shl
xor
jl
shl
add
xchg
hlt
xor
sar
je
out
inc
repnz
lods
pop
es
push
cmp
push
ins
and
aaa
fsub
ins
fcomp
cdq
stos
sub
dec
(bad)
shl
mov
iret
push
scas
sbb
and
mov
(bad)
movs
pop
(bad)
dec
je
mov
adc
sbb
or
jg
inc
sub
pushf
shl
or
add
cmp
setg
sbb
and
enter
adc
adc
rcr
ins
ret
mov
mov
je
inc
sbb
and
in
sti
pop
dec
xor
dec
add
daa
or
sbb
xchg
pop
cmp
or
dec
xchg
jmp
test
add
pop
add
call
aaa
fild
sub
mov
xor
dec
dec
dec
mov
jne
shl
frstor
into
aas
or
mov
xchg
or
imul
inc
xor
cmp
adc
ds
rcl
pop
pop
ret
sbb
mov
sets
push
enter
pusha
add
inc
arpl
push
pop
mov
ret
cwde
jge
repz
add
pop
sbb
test
pop
sub
push
pop
or
cmp
inc
jne
adc
in
inc
pop
jbe
lock
test
mov
pop
jl
and
pop
cmps
aaa
sbb
inc
inc
stos
sub
push
inc
outs
or
dec
pop
jbe
xlat
add
hlt
imul
add
or
jge
pop
and
movs
clc
cmps
movs
ret
sub
fcom
sbb
call
dec
jne
adc
or
adc
dec
lods
sbb
pusha
hlt
pop
inc
pop
fild
ret
mov
shl
dec
cmp
jae
push
(bad)
out
stos
xor
rcl
or
imul
pop
inc
lods
neg
adc
add
mov
mov
mov
aam
or
cmp
nop
add
add
nop
out
dec
imul
pop
nop
jecxz
imul
fbld
mov
dec
dec
ss
push
mov
sub
adc
aas
aaa
fld
jb
jg
sub
ss
xchg
(bad)
fcmovnbe
jne
ret
pop
mov
or
stc
rcr
js
dec
adc
add
and
inc
cmc
sub
push
pop
xor
or
inc
sub
mov
mov
pop
xchg
cmp
push
cld
test
xchg
das
(bad)
jmp
push
mov
adc
cmp
iret
add
dec
mov
gs
push
stos
mov
stos
outs
jl
mov
or
mov
ret
mov
fs
enter
adc
les
jbe
bnd
or
push
sbb
mov
jns
(bad)
ins
in
mov
int3
(bad)
repz
and
dec
jne
dec
or
enter
dec
loope
pop
cwde
rcr
js
add
nop
sub
add
cmp
jle
mov
ret
jno
rol
aad
or
or
jp
fs
jnp
push
inc
dec
call
sbb
xor
or
add
das
fsub
add
add
aad
jae
pop
mov
or
aam
pushf
(bad)
loop
fs
cld
and
sahf
stc
cs
jno
add
ror
xor
inc
jno
ins
or
add
pop
sub
stc
adc
cmp
sub
add
sub
mov
or
sub
sub
movs
and
inc
jo
add
pop
test
gs
sub
mov
or
sub
inc
iret
mov
lock
popa
add
inc
test
dec
inc
dec
inc
ds
mov
xor
das
inc
stos
ins
push
xor
inc
push
sub
mov
inc
pop
(bad)
cmp
pop
pop
xchg
cmp
sbb
lea
push
sub
int3
inc
fstp
sub
inc
rcl
push
sbb
inc
or
cmp
inc
add
and
sub
push
adc
xor
pop
(bad)
fst
sahf
and
ret
dec
add
pop
jne
dec
mov
mov
es
push
enter
sbb
sbb
inc
or
popa
arpl
inc
cmps
arpl
cmp
sub
sub
or
mov
fwait
sub
and
add
mov
adc
add
aas
push
addr16
or
inc
loopne
xchg
call
sbb
aaa
add
mov
mov
fmul
mov
lahf
cdq
(bad)
or
retf
or
adc
pusha
push
lock
stos
and
dec
(bad)
adc
adc
mov
cmovnp
cmp
fsubr
fdivp
push
sub
jg
in
inc
add
sbb
pop
push
pop
jbe
repz
xchg
out
popa
xchg
jbe
enter
cmp
push
pusha
pop
sub
mov
and
es
push
and
ins
or
sbb
and
sbb
or
ins
fcomp
ret
push
mov
loopne
loop
mov
sub
sbb
test
add
mov
push
mov
mov
or
push
inc
ror
sti
cmp
inc
popf
inc
daa
(bad)
iret
sub
xchg
pop
xchg
retf
and
jno
pop
ss
sbb
and
jno
out
gs
je
or
scas
mov
sub
mov
push
push
daa
sbb
sbb
imul
mov
or
jne
dec
push
mov
cmp
mov
add
jne
fs
cmp
pop
add
and
call
sahf
mov
xor
inc
jno
mov
add
(bad)
out
dec
jmp
(bad)
cwde
and
bound
retf
rcr
and
inc
xchg
loope
sbb
pop
jbe
mov
cmp
and
add
adc
ret
adc
loopne
xor
ret
or
or
call
outs
add
sub
sub
in
xchg
cmp
ins
inc
mov
movups
add
(bad)
cwde
aam
or
sbb
pop
jmp
mov
jno
jle
jmp
push
fisub
jp
mov
mov
push
fdivr
push
or
add
fisttp
pop
pushf
push
pop
xchg
ins
mov
cmp
lds
je
sub
push
push
or
mov
add
es
jo
es
mov
or
sbb
cmp
pop
mov
enter
inc
mov
or
push
push
push
cwde
mov
shl
test
leave
inc
mov
and
pop
xor
rcr
and
pushf
fwait
arpl
push
jmp
or
and
jmp
jb
lahf
cmp
clc
clc
jne
pop
sbb
pop
adc
test
bound
push
xchg
and
pop
and
addr16
in
ds
sub
jb
add
jmp
pop
rcl
mov
std
and
push
xor
frstor
pop
mov
ficomp
pop
cwde
push
and
pusha
jb
(bad)
inc
call
add
es
(bad)
and
nop
jb
mov
or
push
dec
fwait
xchg
inc
sbb
dec
push
push
add
push
into
in
cmp
repz
clc
push
lea
mov
push
push
cdq
loope
aaa
mov
inc
xchg
cmp
and
psadbw
push
and
sub
xor
jne
push
(bad)
add
add
lock
push
inc
push
ror
cdq
mov
or
lds
mov
ins
sub
stos
stos
pop
sbb
mov
pop
or
stos
push
sqrtps
lea
push
aam
ror
fidiv
cwde
mov
inc
pushf
adc
adc
cmovno
adc
cmp
xor
mov
into
push
push
cmp
repz
aad
xor
mov
jp
dec
fnstsw
jp
adc
hlt
mov
or
and
hlt
sar
jge
in
xor
adc
cwde
test
scas
add
in
loop
inc
xor
dec
and
cmp
mov
mov
out
mov
push
push
add
test
mov
adc
les
mov
in
std
rcr
pushf
push
mov
mov
push
sub
jg
lods
sbb
mov
jmp
xor
in
mov
addr16
mov
mov
lea
xor
pop
in
fwait
lods
and
movs
sub
mov
jb
xor
mov
scas
pop
sbb
in
enter
dec
add
cmp
pop
cmp
mov
sti
or
inc
dec
jmp
and
and
test
mov
push
or
shl
daa
cmps
int3
cs
adc
cmp
es
add
test
cs
adc
add
push
cld
loopne
cdq
outs
push
sub
jnp
dec
add
sub
mov
popa
retf
cs
daa
setae
inc
add
xor
ss
and
dec
pop
xchg
shl
add
loopne
jo
mov
js
sahf
add
dec
sar
mov
mov
jg
rol
cmp
mov
mov
push
mov
cmp
jmp
cmovno
loopne
lods
mov
dec
test
loopne
lea
adc
mov
xor
push
scas
stos
push
test
xor
xchg
mov
int3
and
ret
inc
sub
push
mov
xchg
mov
and
adc
fs
jmp
mov
jbe
add
je
push
sbb
mov
aas
add
ins
(bad)
fisub
pushf
pushf
add
fadd
xor
pop
pushf
lods
add
dec
dec
mov
fisttp
jnp
push
and
rol
clc
mov
add
std
jmp
and
test
rcr
cwde
and
int3
loopne
lods
(bad)
ja
ins
add
fsub
iret
lock
neg
clc
cmp
mov
push
lods
and
adc
inc
push
mov
lahf
fsub
aam
test
(bad)
mov
int3
shl
repz
adc
add
add
mov
push
shl
mov
sbb
mov
in
dec
add
mov
pop
adc
in
test
fstp
cs
retf
aad
outs
mov
add
mov
sbb
or
retf
pop
sti
out
leave
enter
or
and
dec
sub
add
pop
popa
jbe
cmc
jecxz
adc
mov
ror
das
dec
movs
pusha
sub
nop
fsubp
fadd
mov
out
xor
push
adc
jae
in
fs
mov
enter
push
jl
or
(bad)
cmp
mov
or
xchg
mov
fbstp
sub
cmp
enter
nop
sub
xchg
pop
(bad)
nop
add
push
xchg
xchg
pop
das
cmps
jae
xchg
sub
cmps
icebp
add
fldcw
popa
shl
dec
ja
adc
pop
xor
sbb
xchg
mov
sub
mov
jno
pop
xor
mov
dec
add
or
aam
dec
out
sub
and
mov
popa
cs
cli
mov
xor
aam
and
ret
push
lds
retf
add
das
dec
push
outs
adc
inc
or
and
pop
fbld
inc
mov
aam
xor
fisub
or
and
in
xchg
out
adc
xchg
push
add
xchg
inc
cli
imul
shl
cmp
or
shl
shl
pop
adc
mov
mov
loopne
mov
loop
push
or
xor
push
cmp
shl
sub
(bad)
shr
or
aaa
add
sub
loopne
enter
test
add
mov
cmp
nop
movs
push
loope
push
inc
in
mov
mov
std
xor
je
loopne
push
xor
je
mov
jnp
xor
dec
sub
ins
and
ins
xchg
es
ret
jg
inc
and
mov
mov
pop
jle
ds
and
test
mov
jnp
outs
and
sub
repz
xor
cwde
xchg
add
imul
jmp
movs
mov
call
add
inc
sub
sbb
adc
inc
shl
aaa
imul
inc
and
pop
gs
mov
and
daa
add
cmp
xor
xchg
shr
inc
sbb
dec
icebp
sti
adc
or
inc
aaa
pop
push
mov
push
mov
mov
add
pushf
das
es
ror
inc
(bad)
xor
mov
push
dec
dec
fidivr
icebp
ins
test
call
ins
xchg
jg
inc
inc
pop
push
and
sub
mov
add
shl
outs
fisttp
jb
and
jmp
add
or
add
inc
add
mov
inc
jmp
xchg
pushf
mov
mov
addr16
or
inc
test
adc
mov
sbb
jle
sub
out
push
sbb
jmp
sar
iret
mov
fld
push
repnz
test
push
or
and
pop
pop
pop
pop
xor
stos
in
jne
cld
sti
cmps
movs
mov
and
add
xchg
or
or
push
cmp
sbb
je
hlt
scas
mov
call
dec
mov
add
retf
pop
and
sbb
dec
ds
fwait
and
jb
stos
push
push
push
jge
hlt
ds
push
les
jne
lea
cmc
ret
mov
clc
les
dec
adc
and
clc
test
adc
dec
and
jo
sar
mov
dec
hlt
jecxz
xor
jle
add
into
cli
cmp
inc
lock
or
movs
mov
dec
or
dec
jnp
mov
mov
or
fwait
(bad)
or
adc
mov
push
rcr
icebp
test
add
pop
test
xchg
cwde
mov
pusha
adc
mov
inc
and
pop
add
push
or
dec
inc
ins
fs
mov
push
sbb
sub
je
bound
add
pop
and
pop
mov
cwde
add
(bad)
push
adc
or
dec
icebp
adc
jmp
sbb
nop
mov
and
dec
dec
lods
mov
cmp
and
inc
or
cmp
xchg
adc
in
pusha
mov
and
pop
add
sub
mov
mov
dec
cmp
push
daa
inc
jge
das
jp
sub
ins
pop
lahf
jmp
adc
and
xor
cdq
push
ss
sbb
and
call
(bad)
call
div
add
ror
inc
out
imul
pusha
pop
mov
or
mov
mov
pushf
sbb
push
jae
test
or
push
nop
jmp
fwait
movs
add
js
pop
and
push
dec
shr
cmp
daa
(bad)
sar
xlat
inc
cmc
into
sub
push
das
sub
inc
sbb
jb
dec
nop
or
xchg
in
mov
sbb
add
cmp
stos
sub
add
in
pop
pop
fwait
(bad)
call
mov
adc
dec
adc
xor
test
inc
cmp
push
cmp
lds
pusha
dec
lds
xchg
mov
xchg
or
add
mov
xor
mov
mov
jl
mov
mov
and
mov
adc
or
push
dec
xor
rol
pop
sar
mov
push
sbb
rcl
push
icebp
call
add
ss
cmp
sbb
(bad)
cmp
mov
(bad)
mov
sbb
xchg
cmp
dec
xor
test
ror
scas
add
and
pop
mov
ins
and
sub
cld
cmps
mov
mov
js
lock
outs
and
adc
push
imul
mov
lahf
pop
add
movs
mov
cmc
adc
sub
mov
jp
push
adc
loop
xor
pop
add
sbb
in
sbb
push
add
sub
mov
dec
ss
loope
sub
aam
nop
arpl
fstp
loopne
ror
and
sahf
not
dec
and
dec
sbb
mov
inc
push
pop
out
mov
addr16
mov
adc
mov
jl
sbb
or
inc
adc
dec
cmp
jmp
dec
mov
lods
imul
xor
das
adc
and
push
stos
call
and
or
pop
jne
sub
xchg
mov
xchg
sub
xchg
jp
and
and
sti
adc
repnz
ds
add
dec
or
js
cmp
enter
lea
fwait
jle
in
lods
and
sub
or
cmp
jg
inc
and
outs
dec
dec
sbb
mov
push
and
xchg
mov
repnz
or
int
cld
mov
stos
clc
push
inc
jmp
pusha
xor
sub
and
adc
cmp
inc
cmps
or
outs
jae
xchg
add
clc
inc
lock
shl
cld
test
push
cmp
stos
inc
fldenv
adc
cmp
in
in
retf
push
inc
and
push
lea
call
sub
not
adc
retf
add
mov
in
int
pop
adc
rol
sub
fidivr
cmp
or
jle
mov
add
mov
inc
pop
add
cmp
ins
dec
repz
add
jb
(bad)
mov
jle
pop
or
sbb
pop
add
and
xor
push
fadd
mov
or
aad
int3
and
sbb
shl
leave
repz
add
inc
or
mov
push
pop
retf
popa
inc
mov
pushf
shl
mov
je
jae
sub
lods
test
test
je
adc
sbb
mov
pop
(bad)
ins
scas
xor
and
dec
and
jge
push
cmp
push
out
rol
add
mov
or
fs
inc
mov
adc
sbb
pop
stc
inc
pop
mov
test
sahf
inc
stos
dec
into
push
lds
leave
adc
(bad)
adc
retf
sub
push
stos
or
adc
clc
pop
mov
push
xor
and
pop
xor
inc
mov
imul
jmp
push
adc
retf
add
and
add
dec
imul
fist
xchg
ja
cmp
push
add
push
mov
in
and
inc
inc
mov
sbb
pop
jne
inc
in
jecxz
adc
shl
push
mov
add
or
or
retf
mov
jmp
xor
(bad)
stos
ror
dec
jae
enter
jnp
(bad)
or
adc
pop
cwde
jmp
or
imul
and
xor
fstp
or
repnz
push
adc
sub
jp
aas
inc
and
and
inc
add
or
and
jae
nop
lods
jns
jmp
imul
mov
out
push
mov
into
mov
xchg
inc
mov
loope
adc
cwde
sbb
sbb
mov
add
lods
and
or
inc
pop
mov
mov
push
mov
aas
jno
and
aaa
cmp
xchg
iret
mov
push
jae
pop
push
enter
fsub
arpl
cmp
out
pop
or
add
adc
push
psubusw
cmp
sbb
push
xchg
pop
mov
mov
push
retf
xor
xchg
mov
and
inc
inc
mov
mov
fild
pop
and
rol
adc
dec
les
push
cmp
les
mov
add
sub
push
xor
and
les
js
cmp
int3
popa
adc
push
sub
addr16
mov
fcom
add
dec
xor
and
mov
inc
sbb
dec
pop
sbb
pushf
xor
in
push
mov
or
mov
or
push
mov
push
dec
outs
sub
mov
retf
ficomp
pusha
adc
cmp
mov
arpl
sub
xor
jo
cmp
rol
sub
fs
nop
ins
add
add
fmulp
lods
dec
dec
xchg
lds
rcl
push
stos
dec
leave
clc
mov
aas
mov
or
pop
inc
inc
jo
imul
xor
jb
loope
adc
inc
jno
imul
dec
data16
pushf
nop
mov
add
dec
pop
jbe
add
ins
push
and
sub
outs
and
or
pop
loopne
pop
cmp
mov
nop
arpl
pop
add
sbb
xchg
out
xor
ficom
jns
add
push
mov
in
mov
inc
shl
je
arpl
or
inc
add
or
or
inc
mov
sub
xchg
in
inc
push
or
cmp
push
aaa
int
pop
push
imul
data16
fimul
and
or
in
mov
add
fs
add
div
pop
add
push
outs
call
ins
pop
jo
outs
into
push
pop
inc
popa
jae
add
add
or
mov
into
add
inc
ds
outs
jae
(bad)
cmp
gs
jb
lahf
or
outs
fs
cmovbe
cld
ins
cmp
inc
ins
cmp
div
mov
je
add
jl
retf
(bad)
in
or
or
or
push
dec
dec
jbe
out
int
dec
imul
adc
fcomp
sbb
sbb
inc
mov
push
pop
pop
or
pop
cmp
invd
arpl
mov
jb
aad
pop
mov
ins
int3
dec
js
or
fist
or
dec
xor
inc
mov
or
popa
retf
inc
jmp
or
pop
inc
inc
imul
or
or
adc
dec
inc
lds
mov
mov
xor
mov
fs
or
sub
push
je
sub
and
adc
sahf
or
fld
pop
inc
sbb
sbb
fdiv
ss
imul
or
or
ins
(bad)
ss
or
xchg
sbb
sub
enter
imul
imul
pop
sbb
push
shl
imul
out
aas
ins
ins
pop
fst
test
pop
test
les
retf
add
movs
jmp
in
add
ds
cmp
adc
ins
adc
lods
or
xchg
pushf
jo
and
xor
add
popa
and
and
xchg
jl
or
out
jmp
add
lods
mov
xchg
test
ret
or
add
pop
fadd
add
in
dec
inc
pop
sub
pop
ja
sub
jecxz
outs
pusha
or
jnp
push
ss
pop
or
in
mov
enter
sub
outs
xchg
in
jl
mov
cs
outs
add
push
xor
cmps
aam
das
add
arpl
jb
push
dec
pop
adc
movs
xchg
mov
and
mov
int
pusha
pop
pushf
add
sbb
int3
sub
mov
cmp
jno
xor
lea
push
sbb
fwait
or
pop
fs
jg
pushf
pop
xlat
jne
jle
cmp
wrmsr
pop
cmp
inc
fwait
cmps
fnstenv
test
or
mov
sub
xor
pop
punpcklbw
push
stos
or
or
pusha
scas
mov
test
inc
mov
aas
pusha
add
rcl
dec
adc
dec
ins
ins
ret
fmul
(bad)
mov
add
lods
cmp
retf
repnz
or
mov
sete
bound
out
inc
sahf
mov
mov
(bad)
out
test
fmul
ins
add
or
mov
(bad)
adc
out
int3
test
push
add
ret
jge
mov
sbb
xor
pop
and
arpl
add
mov
je
inc
ins
mov
pop
in
mov
sbb
inc
adc
add
outs
addr16
repnz
add
outs
adc
mov
or
cmp
ror
mov
in
rol
test
mov
jmp
mov
cmp
jne
inc
inc
sbb
xor
pop
sbb
push
and
pop
pop
sbb
stc
sbb
or
loop
or
add
mov
sbb
imul
inc
adc
call
xor
and
xlat
pop
rcl
sub
inc
jmp
jnp
add
and
or
or
pop
test
add
(bad)
push
xor
div
add
cmp
adc
xor
push
je
push
shl
jne
push
sbb
add
icebp
or
adc
fidiv
shl
add
ret
jge
fcomi
add
mov
mov
or
jne
pushf
cmp
xchg
mov
cmp
mov
sti
ins
dec
adc
into
je
inc
dec
ins
int3
cmp
sub
aam
mov
jge
mov
inc
adc
jge
aas
or
cmp
fchs
mov
(bad)
data16
call
cmp
sbb
add
shl
or
leave
add
mov
sbb
pusha
sbb
inc
jo
btr
jbe
fwait
out
enter
popa
jbe
add
jb
ins
sbb
and
femms
stc
adc
xor
ins
jbe
jb
nop
pop
enter
add
gs
xor
ja
iret
jne
(bad)
xchg
shl
inc
jne
push
mov
jne
fcomip
mov
jne
or
dec
or
xchg
mov
or
addr16
jne
push
push
bswap
xor
stos
enter
adc
popa
sbb
cwde
mov
dec
test
(bad)
or
test
pop
add
xchg
fwait
sub
ret
inc
jnp
adc
push
inc
ins
leave
ja
les
adc
fcmovu
pop
mov
jo
push
push
imul
push
inc
xchg
loopne
sub
ins
mov
vmwrite
inc
je
inc
ds
adc
mov
pusha
leave
xchg
jecxz
(bad)
adc
arpl
xor
das
xor
je
arpl
imul
in
xor
inc
aas
mov
adc
imul
or
sub
mov
dec
inc
iret
test
dec
ret
scas
cmp
retf
sub
inc
push
nop
lods
call
movs
stos
sub
or
cmp
or
adc
inc
cmp
call
inc
push
jl
add
jae
retw
mov
inc
push
fwait
mov
add
push
adc
mov
test
add
sbb
inc
or
add
mov
dec
pop
je
dec
movs
clc
pop
aaa
mov
adc
inc
adc
mov
std
mov
xor
mov
push
jo
jo
cli
mov
loopne
lar
aam
sti
pop
xchg
pop
push
mov
fs
xchg
call
or
add
jp
or
jne
scas
jns
fild
enter
inc
sbb
ins
add
out
mov
out
jmp
or
inc
call
add
or
(bad)
stos
pop
add
inc
fild
cmps
lea
ins
mov
xchg
(bad)
ror
add
add
mov
mov
adc
cdq
mov
add
add
mov
push
and
dec
mov
inc
shl
adc
push
cdq
xchg
adc
xor
mov
or
add
sub
aaa
push
inc
fist
pop
push
repz
dec
(bad)
adc
nop
add
pop
and
adc
jo
cmp
dec
push
xchg
inc
(bad)
popf
fstp
int
neg
jae
adc
sbb
push
cmp
fisubr
sub
mov
call
dec
sar
sbb
data16
ror
mov
or
aaa
inc
sbb
mov
nop
int
fdiv
mov
add
movs
and
sub
xchg
mov
add
dec
pop
sbb
pop
inc
push
cmp
sbb
inc
(bad)
pop
mov
add
inc
push
test
push
fs
pop
adc
movs
retf
lahf
pop
add
pop
sbb
or
inc
add
or
mov
lahf
add
jl
aam
push
lea
jae
inc
cmp
cs
fmul
sbb
pop
sbb
jns
xchg
add
push
inc
add
or
cmp
mov
and
and
push
mov
and
xchg
inc
jo
cmps
or
bound
mov
push
sbb
mov
jne
(bad)
je
sbb
test
sbb
adc
shr
adc
mov
xor
dec
inc
test
or
adc
push
loopne
call
adc
and
sub
xlat
mov
icebp
add
mov
ret
pop
(bad)
movs
mov
cmp
adc
stc
mov
fs
adc
mov
das
sub
ja
mov
je
jae
sbb
sbb
pop
pop
dec
adc
mov
sbb
or
ror
mov
bound
imul
add
out
ja
movs
mov
dec
and
adc
inc
lea
int3
stos
(bad)
or
or
lahf
aaa
adc
adc
adc
add
scas
loopne
cmp
clc
cmp
pop
test
dec
inc
add
xor
call
xchg
push
movs
fwait
push
dec
adc
push
xchg
ss
shl
mov
adc
mov
and
add
add
jg
mov
not
and
rcr
mov
lock
mov
mov
test
push
adc
in
push
lods
pop
mov
in
ret
pop
mov
add
push
adc
sti
cmp
add
sbb
ja
and
arpl
(bad)
xchg
adc
popf
ret
adc
sbb
(bad)
pop
and
bts
and
mov
add
ret
je
loopne
cdq
adc
add
call
add
arpl
jecxz
add
pop
or
pusha
push
jg
dec
sub
jae
or
daa
in
mov
pushf
or
rol
add
je
xor
adc
and
or
movs
(bad)
or
xor
pop
adc
inc
ins
in
and
jae
add
movzx
pushf
das
xchg
test
es
adc
inc
rcl
xor
add
sar
sbb
shl
add
or
and
shl
xchg
xlat
or
test
ja
nop
inc
into
pop
add
mov
nop
inc
mul
pop
imul
pop
loopne
imul
mov
nop
push
daa
pop
mov
dec
adc
stos
dec
inc
fldenv
jno
js
fiadd
int3
pop
iret
add
dec
sbb
ss
pushf
sub
mov
clc
push
pusha
adc
add
daa
pop
jge
pop
fs
xchg
in
cld
jg
xor
add
jo
jnp
xor
and
dec
inc
lds
mov
ss
add
aad
push
lock
jbe
and
push
ins
fdivr
jns
ja
leave
pop
vmovntpd
dec
in
fnstenv
inc
push
ss
sgdtd
data16
jne
(bad)
and
add
add
add
out
shl
push
lods
mov
mov
inc
sahf
and
xchg
in
repnz
push
mov
add
fisttp
or
adc
pop
data16
push
adc
or
adc
xchg
test
ins
and
pop
adc
jae
and
js
stos
lods
adc
mov
jno
jb
shr
arpl
sbb
dec
sub
lock
cmp
and
cmps
mov
and
aad
pop
hlt
sbb
push
mov
ret
jo
pop
mov
mov
pop
les
popa
lods
mov
mov
pop
push
fcom
xlat
xor
jnp
mov
xor
fbstp
inc
mov
push
in
push
in
adc
in
add
cmp
in
sahf
xchg
xor
or
lock
inc
ror
mov
inc
mov
jp
mov
fimul
sub
cdq
leave
cwde
push
jno
in
push
or
popa
xchg
fcomp
(bad)
aam
out
jno
add
push
in
rcl
imul
(bad)
and
jne
mov
jo
sahf
data16
data16
repnz
movs
push
xchg
fs
aam
add
push
sbb
fisttp
mov
add
push
(bad)
add
out
(bad)
jne
je
daa
int
cmp
sti
ret
jl
or
or
jmp
cmp
pop
mov
leave
shl
mov
wbinvd
add
stc
lea
pop
mov
pop
repnz
shl
adc
outs
push
shr
add
sub
adc
rcr
dec
add
les
jle
lea
fs
sub
enter
lods
mov
and
les
movs
enter
fdiv
cwde
sbb
mov
jmp
inc
mov
ins
lods
or
mov
sbb
call
not
int3
add
push
push
pop
enter
mov
enter
xlat
ins
fistp
mov
mov
push
add
inc
inc
fcom
aaa
enter
sbb
test
mov
int3
mov
in
pop
cmps
and
and
mov
jmp
(bad)
lock
pop
sbb
outs
push
vmovlps
and
inc
cwde
xor
add
stos
ins
or
add
lea
lock
es
inc
push
add
pop
add
or
data16
dec
xlat
sbb
and
push
jns
das
les
add
and
aad
ins
and
jge
add
(bad)
and
fprem
push
imul
sub
push
sub
pop
fsubr
repz
push
inc
sar
jmp
(bad)
fcmovnbe
jb
jle
scas
dec
mov
cld
push
retf
sub
out
call
dec
shr
aam
mov
popa
or
enter
ja
dec
mov
inc
xor
cmp
xor
pop
and
inc
xchg
movs
fdiv
push
ins
adc
add
or
push
dec
or
sub
dec
xchg
(bad)
mov
mov
fistp
ins
mov
je
mov
ins
cli
(bad)
xor
push
sbb
adc
stc
cmc
aas
nop
pop
mov
fcomp
jne
jo
enter
push
paddsb
ds
int3
(bad)
iret
ja
ret
in
loopne
inc
addr16
in
int3
inc
dec
lock
daa
fcomp
dec
push
shl
int3
sub
adc
sbb
enter
xlat
xlat
scas
mov
xor
rcl
aam
sub
sub
fsub
add
sub
mov
add
push
sbb
mov
add
sub
int3
ins
xor
push
mov
push
xchg
aaa
ja
push
aaa
aas
lods
mov
pop
or
imul
push
adc
push
or
in
in
pop
movs
sub
movs
add
dec
xchg
in
outs
jle
loopne
jmp
or
imul
push
fs
inc
xchg
mov
xchg
enter
sub
xor
sub
inc
push
lods
add
xchg
mov
out
ss
jbe
inc
sbb
adc
stos
fcom
sbb
adc
popf
test
ror
add
mov
and
add
xor
outs
loopne
inc
test
xor
mov
popa
stos
cmp
jmp
stos
dec
nop
mov
pop
inc
dec
add
sub
gs
repz
je
lods
and
adc
(bad)
out
or
or
jecxz
dec
es
xor
rol
jmp
or
mov
or
dec
stos
jmp
mov
and
movs
rol
test
add
dec
xor
add
dec
add
fwait
push
mov
xor
inc
mov
mov
inc
cmp
sbb
xor
shr
dec
push
adc
aas
add
cmp
mov
sub
cmp
or
mov
push
inc
sbb
loop
stos
push
adc
mov
movs
addr16
inc
mov
ds
push
dec
jne
push
in
mov
or
les
stos
or
adc
adc
bound
push
mov
and
push
cld
popa
inc
jno
push
xor
and
sbb
aaa
ret
enter
outs
leave
cmps
xor
bound
adc
sti
outs
fnsave
mul
fs
jns
rol
sub
sbb
dec
ror
sbb
push
mov
cmove
adc
inc
mov
pop
daa
xor
dec
push
sub
and
test
or
je
cmp
mov
push
ret
dec
jae
shr
aas
jnp
ficomp
ins
cmps
ss
test
imul
test
jge
push
mov
and
pop
(bad)
sbb
test
cmp
(bad)
add
movs
test
cmp
gs
push
and
test
adc
xchg
test
and
jl
cmp
movs
test
or
add
jp
and
mov
sahf
scas
inc
cld
pop
adc
push
cdq
or
adc
pushf
and
nop
or
sbb
lds
mov
xchg
popf
addr16
xor
inc
adc
pop
test
sub
popf
cmp
and
mov
push
pop
add
jmp
cld
xor
mov
cmp
push
shr
push
mov
xor
mov
in
xchg
dec
(bad)
icebp
jo
add
inc
push
fld
inc
cmp
dec
leave
data16
nop
xor
pop
arpl
fsub
pusha
pop
xlat
cmp
loope
ja
es
xchg
adc
or
or
or
add
mov
add
push
dec
xor
(bad)
in
jp
jmp
inc
xchg
push
or
out
cmp
or
cmp
adc
cmp
mov
mov
fld
in
push
jl
sbb
mov
and
cmp
mov
mov
push
cwde
pop
inc
or
or
and
dec
outs
arpl
add
popf
mov
int3
xchg
dec
sub
je
and
inc
mov
adc
pop
push
icebp
retf
adc
xchg
pop
mov
and
ins
jae
dec
adc
and
sahf
add
lea
sub
pop
or
or
or
jb
iret
and
outs
(bad)
shl
and
mov
or
mov
outs
cmp
imul
adc
or
mov
sbb
jb
das
loopne
inc
add
inc
mov
pop
pop
add
add
adc
jb
mov
mov
cmp
push
movs
cmp
aas
or
adc
add
jmp
add
in
mov
sub
sub
nop
pop
push
hlt
mov
push
popa
sub
or
add
and
mov
imul
mov
int
adc
add
add
inc
mov
or
mov
cmp
push
pop
mov
xor
sbb
push
bound
or
outs
jae
cmp
gs
jg
dec
mov
pop
ins
outs
addr16
add
outs
dec
or
rcl
or
sbb
cmps
cmp
js
ja
mov
aam
or
imul
or
jae
sbb
fwait
nop
ins
mov
data16
pop
in
mov
imul
outs
push
jns
outs
test
pand
fs
clc
inc
test
in
or
imul
push
push
or
jo
fild
jae
cmp
jae
inc
popf
int
push
add
ss
icebp
test
outs
inc
gs
mov
hlt
or
adc
xor
outs
xchg
ins
jns
adc
push
sub
test
pop
and
mov
jb
test
xchg
pop
inc
ss
push
xchg
scas
cmp
sub
push
das
repz
xchg
pop
fld
ins
gs
pop
or
mov
iret
and
adc
pop
stos
cmp
cmp
push
and
pop
mov
in
mov
cmp
dec
aas
lds
rcr
daa
xchg
xchg
pusha
lods
call
jbe
repnz
test
mov
pop
fdiv
fwait
mov
mov
dec
mov
(bad)
movs
aam
mov
push
cmp
and
adc
pop
add
add
out
xor
jmp
sbb
and
sub
add
and
aam
pop
mov
or
cmp
mov
lock
(bad)
fistp
sbb
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
push
add
(bad)
sti
cld
(bad)
(bad)
ss
jmp
test
imul
popf
add
hlt
or
xchg
add
fwait
cmps
pop
ss
int3
dec
mov
cmp
into
xor
call
mov
iret
aad
rcr
add
movs
iret
adc
xor
mov
(bad)
fdiv
add
ins
les
pop
sar
mov
and
(bad)
aam
sub
cmp
add
mov
fnstenv
jp
inc
rcl
es
mov
mov
imul
mov
test
mov
pop
dec
adc
mov
or
and
push
pop
int3
mov
inc
dec
aad
out
add
mov
loop
mov
btr
adc
in
inc
mov
adc
adc
cdq
es
adc
or
in
stc
xchg
lds
and
dec
dec
adc
and
add
call
pop
mov
add
adc
cmp
jb
das
sub
inc
adc
call
push
adc
mov
push
xchg
push
out
adc
and
push
sub
mov
cmp
sbb
inc
cmp
retf
scas
and
mov
neg
add
aaa
or
jbe
mov
pop
aaa
ja
fsub
mov
ins
pop
push
push
cmp
adc
out
scas
jecxz
adc
cmp
push
add
mov
push
or
(bad)
ins
jae
outs
push
inc
push
aas
adc
js
dec
push
rcr
jns
mov
je
pop
sbb
sbb
push
call
mov
rol
sub
fs
movs
imul
jo
and
cvtpi2ps
ja
dec
sahf
aaa
inc
loop
inc
sahf
dec
mov
pusha
adc
adc
movs
mov
mov
bound
adc
pushf
mov
and
cwde
imul
nop
xor
and
and
inc
sbb
pop
bound
ret
popa
(bad)
dec
and
cld
add
nop
lock
fs
pusha
ss
and
mov
cmovns
add
jnp
or
push
fisub
call
mov
outs
dec
sub
xchg
cmp
int3
push
ret
loop
je
sub
sbb
call
js
sahf
inc
inc
fs
enter
movs
fldenv
sub
jo
jl
test
and
add
dec
mov
jmp
mov
cmps
mov
outs
pushf
imul
sbb
jae
xchg
xor
pop
cmp
int
push
jo
stc
and
xor
or
imul
push
and
out
push
out
mov
xor
outs
sti
test
hlt
sbb
popa
aas
cli
rcr
xchg
out
mov
xor
xchg
mov
inc
xchg
xchg
adc
into
nop
aaa
xchg
js
jo
pusha
add
retf
in
aad
dec
test
cmp
into
pop
sub
ret
or
push
and
push
add
nop
lock
and
ror
add
cld
fldenv
adc
xor
in
xor
xor
popf
or
imul
(bad)
loope
push
pusha
dec
mov
enter
push
and
pop
(bad)
adc
adc
sub
in
bound
sbb
mov
fst
cmp
push
add
sub
fsub
sub
outs
and
pop
inc
loopne
mov
or
dec
adc
adc
cld
test
adc
imul
xor
ds
mov
push
imul
xchg
pop
sbb
sti
adc
gs
out
cmp
add
and
cmp
ins
or
or
fbld
push
ror
xchg
and
loopne
xor
mov
test
cmp
or
inc
ss
arpl
push
or
or
out
add
scas
call
or
sub
fucomi
movups
push
or
in
adc
das
fadd
sbb
sbb
fsub
mov
das
add
xchg
add
pop
pop
sub
inc
pop
and
cmp
xor
add
ret
or
jbe
ins
mov
mov
push
test
pusha
inc
in
pop
pop
pop
fwait
call
mov
jmp
or
test
add
mov
(bad)
movs
xchg
sahf
xlat
inc
cwde
loopne
jmp
int3
xchg
jne
jg
cs
das
mov
mov
jae
pop
aam
scas
push
movs
in
xchg
call
ret
push
sbb
add
pop
inc
push
and
out
ror
rcl
jl
jb
push
push
xor
js
add
adc
ja
sub
xor
xchg
sbb
nop
int
jns
les
xor
in
enter
xor
and
nop
inc
inc
dec
xchg
jge
leave
pop
ror
popa
or
push
xor
mov
dec
dec
add
enter
jnp
inc
in
andnps
mov
rcpps
arpl
test
out
or
adc
inc
js
push
in
or
cmp
add
and
fsubr
outs
pop
movs
adc
jp
test
jae
ins
dec
push
push
add
or
and
cdq
out
add
xor
push
mov
mov
mov
call
call
pop
ja
rol
ret
push
inc
daa
add
cmp
ins
push
mov
add
cmp
mov
inc
repz
cld
mov
in
push
add
aam
mov
pop
ins
jnp
inc
mov
and
mov
pop
mov
loope
mov
inc
add
add
(bad)
loop
ret
or
cld
inc
jl
mov
mov
ficom
pop
mov
pop
add
call
mov
xchg
mov
mov
push
add
sbb
xchg
mov
adc
add
and
inc
cmp
mov
cmp
je
or
adc
cs
push
jb
pop
add
outs
orps
cmp
push
inc
stc
hlt
das
cmp
fsubrp
mov
call
cmp
jle
jo
int3
fcomp
iret
mov
iret
mov
loop
ret
pop
mov
(bad)
jecxz
je
inc
inc
add
or
or
adc
test
adc
in
inc
ror
mov
xor
push
shl
lods
and
pop
cs
inc
push
shl
inc
xor
or
scas
mul
push
ins
sbb
adc
js
and
mov
jecxz
dec
add
mov
lock
inc
or
inc
or
mov
dec
mov
or
leave
lods
xchg
mov
mov
popf
xchg
fdiv
stc
pop
fimul
mov
lea
inc
push
or
aam
mov
cmp
add
push
push
jle
lock
mov
push
or
push
xchg
adc
out
mov
push
hlt
xchg
push
test
and
xor
adc
mov
mov
sbb
xor
es
retf
sbb
mov
cmp
cmp
push
push
rcl
je
add
aad
adc
(bad)
sub
or
nop
jmp
cmp
push
mov
ins
je
or
and
lds
push
add
jne
jge
xor
scas
fld
or
ds
jae
cli
(bad)
and
mov
loopne
add
pop
adc
sub
pusha
jmp
pop
hlt
neg
jmp
sub
push
jne
cld
mov
jae
mov
sub
mov
mov
ss
cld
das
shl
push
sbb
cmps
sub
not
add
ret
mov
pusha
sub
dec
stos
adc
nop
mov
ds
mov
cmps
movsx
aam
sub
pop
ja
lea
fcomp
ins
jge
xor
rcl
sbb
cmp
out
adc
mov
add
jae
and
aas
(bad)
ins
in
enter
sbb
xor
or
stos
sbb
es
or
push
xchg
ins
adc
rep
loopne
rol
add
jmp
es
push
cmp
jle
inc
jmp
test
stos
mov
push
add
push
mov
or
js
pop
je
sub
mov
cmp
jmp
enter
iret
(bad)
int
minps
je
arpl
arpl
repnz
adc
adc
(bad)
push
mov
xlat
cmp
gs
clc
inc
cmps
adc
or
sbb
loopne
icebp
lods
mov
leave
jge
rcl
dec
inc
adc
jmp
mov
imul
push
mov
adc
mov
jo
mov
loopne
sti
add
add
pop
int3
jno
jg
jmp
fstp
mov
call
in
ja
inc
cwde
popf
imul
pop
ror
jle
cmp
ss
fmul
inc
adc
inc
inc
cmp
mov
adc
or
sbb
or
inc
mov
fsubr
(bad)
or
add
push
les
mov
jne
inc
outs
inc
and
xor
jbe
in
adc
inc
mov
and
pop
and
les
call
pop
cmp
inc
xor
fisttp
adc
xchg
xchg
rcr
rol
sahf
push
stos
sub
cmp
sbb
xlat
jno
mov
or
js
push
sub
fidivr
(bad)
test
mov
push
add
pop
adc
(bad)
outs
jmp
ret
mov
cmp
movaps
(bad)
push
push
or
jle
add
je
mov
jae
push
inc
xor
or
jnp
or
icebp
psrad
adc
in
or
add
add
sbb
mov
lea
shl
cmps
add
fdiv
mov
adc
sbb
xchg
es
push
std
xchg
mov
daa
adc
pop
inc
jb
xchg
and
add
mov
fcmove
dec
jmp
adc
adc
add
out
add
adc
inc
out
add
jb
loopne
pop
xchg
pop
aaa
or
jmp
add
xor
scas
sub
mov
test
add
or
sbb
push
sbb
xor
mov
adc
int
dec
(bad)
shr
push
mov
sub
pop
and
lea
sub
xor
jge
js
(bad)
fdivr
mov
push
inc
test
cmp
jge
or
sub
or
add
inc
mov
sbb
mov
push
aas
jne
(bad)
cld
push
adc
add
xor
leave
test
imul
add
fwait
dec
mov
sub
sub
pop
or
loop
je
test
rol
(bad)
fwait
mov
xchg
inc
xchg
fcom
inc
mov
cmc
jge
adc
(bad)
and
inc
adc
jmp
add
add
add
pop
sbb
sti
mov
lods
or
fsubr
add
sub
add
adc
fadd
sbb
and
test
and
xchg
das
ror
and
cmp
pop
inc
lock
push
add
pop
ret
inc
ret
adc
mov
ja
jge
pop
call
cmp
push
ret
or
xchg
loopne
cmp
movs
bound
mov
mov
pop
enter
jbe
pop
outs
and
mov
mov
jo
adc
pop
rcr
inc
xchg
add
pushf
add
inc
pop
test
add
add
mov
or
xchg
sub
inc
xchg
pushf
mov
ds
pusha
adc
or
mov
mov
jle
mov
js
mov
and
pop
int3
je
out
(bad)
fnsave
push
inc
push
mov
mov
movs
loopne
push
adc
mov
or
jb
sbb
adc
mov
movs
mov
cmp
sbb
out
mov
sub
cmp
lds
or
rol
add
mov
sub
inc
add
and
bound
fiadd
xchg
imul
and
data16
daa
adc
ins
les
repnz
inc
faddp
stos
rcr
add
mov
jo
imul
fst
mov
xchg
cmp
rcl
add
jnp
enter
or
scas
jae
sub
sbb
pop
fistp
inc
mov
xchg
inc
cmp
add
jle
js
mov
ss
mov
es
stos
adc
xor
adc
or
das
pop
pop
inc
sub
push
mov
in
pop
nop
inc
sbb
dec
dec
jne
sub
jb
out
push
pusha
dec
xlat
jecxz
(bad)
sub
cld
xchg
call
push
pop
mov
pop
jo
xor
das
or
mov
sbb
pusha
inc
shl
inc
(bad)
fldenv
add
gs
and
jmp
lock
jne
add
or
mov
outs
sbb
xchg
sub
ss
push
or
ficomp
push
sub
in
sub
inc
sahf
cmp
outs
add
int
int
push
mov
fmul
test
inc
ss
cmp
adc
mov
scas
adc
push
jl
call
into
push
add
adc
or
cdq
int
push
dec
add
push
mov
sbb
or
push
add
and
iret
pop
jno
sbb
inc
cmp
mov
and
sbb
sbb
dec
push
xchg
sbb
in
test
mov
mov
or
sub
dec
push
sbb
dec
inc
xor
enter
sub
mov
mov
push
adc
sub
inc
stos
pusha
lds
test
lds
pusha
fs
pusha
adc
adc
bound
je
mov
fwait
lods
rol
in
nop
inc
shl
pop
push
xchg
pop
movs
xchg
xchg
mov
mov
jno
sbb
jo
fs
push
cmp
xchg
xor
sbb
sub
push
aam
or
cmp
les
add
mov
and
imul
sbb
inc
xchg
mov
loop
adc
dec
inc
punpckhbw
mov
push
lock
push
push
add
mov
sub
add
push
push
adc
dec
push
adc
add
dec
and
pop
mov
fwait
xor
pop
int
adc
fld
div
pop
add
push
mov
xchg
push
dec
add
mov
adc
arpl
xchg
push
inc
pusha
jmp
lods
or
mov
loope
mov
aaa
test
sbb
mov
cmp
lahf
imul
and
int3
dec
sbb
pop
mov
xor
xchg
test
inc
pop
mov
pop
add
jg
dec
enter
or
mov
xor
fdiv
or
jmp
and
cmp
ret
ret
sub
loopne
jecxz
xor
sub
movsx
aaa
loopne
inc
or
into
add
test
bound
xchg
push
adc
dec
inc
int3
push
setb
add
xor
sub
pop
mov
xor
repz
mov
push
dec
add
jge
in
fadd
adc
mov
rcr
fs
mov
(bad)
push
xchg
ret
jne
sbb
or
push
(bad)
mov
xchg
adc
clc
push
fstp
fs
push
adc
push
sbb
jne
push
cmp
add
adc
push
cmp
sbb
daa
lock
je
es
or
push
mov
add
arpl
arpl
jbe
jns
add
mov
add
inc
push
add
ins
cmp
sub
push
xchg
cmp
mov
test
jge
mov
inc
push
movs
leave
and
cmp
cmc
iret
mov
pop
and
shl
popf
add
aam
inc
sub
scas
test
inc
and
mov
cli
inc
cmps
inc
xchg
or
ret
imul
mov
inc
adc
fsubr
push
imul
std
jmp
jmp
mov
add
leave
fnstsw
jne
ret
imul
push
dec
ret
jae
movs
or
adc
test
push
rcl
add
pop
adc
or
push
xor
enter
add
scas
xor
push
mov
xor
cmps
sti
in
and
hlt
dec
adc
and
loopne
jmp
pop
je
inc
lock
or
inc
or
push
mov
hlt
jmp
add
ins
sub
jmp
popa
mov
pop
push
imul
test
push
or
clc
xchg
dec
mov
jecxz
cmp
sbb
sub
push
jns
sub
push
push
ins
cmp
sub
pop
xor
jp
inc
int3
cmp
or
xchg
rol
mov
lock
popa
lock
ds
aam
fsub
hlt
test
pop
add
and
out
adc
sub
movs
sub
test
xor
mov
cs
les
push
push
xor
push
sbb
push
in
ret
es
cmp
cmp
inc
mov
add
add
loop
aad
adc
pop
and
sub
xlat
(bad)
push
ror
cmp
adc
out
jne
xchg
cld
add
cmp
pop
popa
syscall
dec
in
and
jmp
fwait
mov
jp
push
ins
mov
or
jo
mov
or
jge
movs
mov
lods
ins
fwait
or
cmp
sbb
nop
adc
leave
mov
rcr
mov
mov
pusha
pop
pop
push
inc
leave
or
imul
sub
cmp
test
push
gs
(bad)
mov
ret
push
jno
fadd
sub
or
push
cmp
(bad)
pop
cmp
inc
xor
retf
fidiv
fstp
(bad)
cmp
push
pmuludq
imul
punpcklbw
xchg
dec
inc
pop
cmp
add
cmp
mov
adc
push
add
or
dec
jne
or
xchg
adc
adc
or
in
pop
add
xchg
popa
mov
sub
(bad)
jp
daa
je
jl
enter
sub
ret
shl
pop
clc
je
sbb
idiv
ror
jmp
mov
sub
nop
pop
jbe
xor
sbb
nop
mov
adc
jo
dec
jnp
jecxz
rcr
int3
or
pop
ror
push
push
add
adc
stos
dec
sbb
push
push
in
or
adc
inc
adc
call
or
stos
pushf
cmp
mov
add
jg
pushf
jl
push
adc
push
dec
cmp
mov
ret
cmp
cmp
inc
std
ins
aam
or
cdq
mov
inc
jb
cmp
jns
sbb
les
cmp
iret
pop
mov
or
addr16
pop
adc
mov
push
and
(bad)
xchg
sbb
add
mov
adc
adc
xor
push
add
cld
adc
jb
mov
inc
lock
sbb
data16
mov
pop
lea
inc
mov
dec
mov
adc
xor
mov
push
push
ror
push
and
inc
jnp
fld
adc
cmp
jecxz
mov
mov
xor
add
sahf
add
out
add
pusha
add
test
jle
mov
lods
movs
jmp
push
ror
push
outs
fs
push
mov
adc
jmp
(bad)
or
or
je
cmp
adc
call
cdq
and
and
fadd
sub
lods
add
in
adc
pop
in
out
and
mov
call
lods
fsubr
add
shl
movs
adc
int
mov
ds
adc
adc
(bad)
and
(bad)
pop
xor
or
or
or
hlt
xchg
add
add
mov
inc
shr
sbb
and
xor
xor
pop
jmp
rcr
pushw
cld
or
sbb
xchg
mov
or
adc
mov
(bad)
adc
and
loope
sbb
lods
dec
adc
pop
or
inc
xchg
xor
inc
xchg
push
dec
cmp
and
sub
sub
adc
cmp
push
jbe
adc
lock
stos
sub
adc
mov
push
or
inc
dec
push
cmp
fcom
gs
xchg
popa
mov
sbb
and
bound
mov
dec
pop
add
fcomi
das
push
xchg
imul
push
add
and
sub
and
add
jmp
loopne
and
jle
jmp
shl
inc
add
and
stos
not
pop
or
push
add
adc
and
cmp
mov
fiadd
movs
adc
xor
sbb
cmp
inc
(bad)
jae
shl
and
ins
add
sub
adc
imul
cmp
(bad)
mov
inc
fbstp
push
or
test
xchg
dec
pop
sbb
push
inc
jne
adc
loop
mov
or
add
adc
loop
test
inc
sub
sbb
inc
icebp
pop
loopne
inc
push
adc
sub
imul
push
gs
or
lods
cwde
rcr
and
jo
mov
inc
call
ja
imul
aas
mov
push
ss
ins
mov
jb
adc
pusha
push
ins
mov
ins
mov
pop
inc
aam
mov
or
inc
pop
lea
push
shr
mov
fistp
jge
xor
sub
ss
push
mov
adc
jnp
or
or
out
enter
ja
ins
inc
mov
add
and
jl
fsub
jne
mov
sahf
sbb
pushf
ins
or
adc
lds
or
xchg
shr
cmp
fild
xor
push
mov
icebp
xchg
adc
push
nop
mov
sub
push
jbe
je
or
in
add
fs
dec
inc
mov
and
or
push
xor
cmp
mov
fidivr
nop
mov
add
or
mov
xor
sub
mov
mov
mov
sub
adc
ror
inc
adc
mov
xor
aad
push
shr
push
movs
xchg
xchg
mov
push
inc
sbb
pop
jge
add
sbb
or
add
push
or
push
in
xor
mov
and
mov
or
cmp
add
pop
addr16
and
or
adc
fbstp
mov
or
and
in
adc
shr
pusha
add
pop
or
or
jp
adc
cs
xchg
push
fdivr
gs
jmp
pop
enter
push
out
pusha
xor
cmp
mov
add
adc
pop
add
or
inc
sahf
pusha
pop
jbe
js
inc
push
sbb
xchg
add
test
or
push
xor
rol
mov
outs
(bad)
sbb
ss
push
adc
or
add
inc
push
push
aam
(bad)
adc
mov
movs
mov
retf
sbb
or
inc
sub
es
je
inc
inc
xchg
aam
adc
add
push
les
dec
clc
sbb
lods
cmp
or
(bad)
cmp
idiv
fisub
push
and
mov
pop
inc
mov
jnp
rol
add
xor
xchg
test
mov
fmul
cmp
cmp
inc
popa
xchg
mov
pop
inc
or
ret
das
int
shr
xchg
sbb
test
pop
push
std
push
mov
mov
mov
mov
inc
pop
or
adc
fcom
out
movs
adc
adc
aad
popa
xchg
lods
and
gs
xor
mov
ss
ror
adc
icebp
add
mov
aaa
cmp
lock
nop
outs
or
add
cmc
mov
fs
jmp
cmps
mov
xor
dec
sbb
sbb
lods
out
adc
nop
sub
push
jle
test
cmp
mov
inc
push
lahf
js
jo
xchg
daa
mov
dec
test
leave
stos
cmp
jo
je
imul
and
jae
xor
xor
js
pop
push
add
sub
mov
daa
shl
inc
or
xchg
add
in
lods
stos
retf
lahf
adc
js
lea
outs
mov
add
sub
fisttp
not
cmp
mov
test
iret
inc
or
out
retf
clc
adc
(bad)
jp
adc
lea
xchg
cmps
add
cmp
test
rcl
and
movntps
retf
sbb
and
or
mov
and
pusha
ret
sub
cwde
je
sub
je
adc
adc
xchg
dec
shr
xchg
adc
cwde
or
dec
ret
xchg
inc
add
pop
add
push
xor
or
add
cmp
shr
fisub
fcmovu
cmp
sbb
push
test
xchg
or
nop
and
or
and
sar
xchg
stc
add
loope
mov
mov
cmp
cli
cmp
test
xor
mov
(bad)
in
dec
jmp
mov
cmp
call
sbb
or
mov
sbb
or
xchg
or
(bad)
and
add
lods
addr16
mov
jmp
lods
cmp
xor
enter
fcom
inc
push
cli
adc
add
add
aas
or
aaa
ficom
ret
ja
cmp
leave
imul
xor
call
imul
or
mov
xchg
or
inc
(bad)
and
iret
sub
pop
jbe
sbb
leave
xor
sub
out
fist
inc
rcl
inc
popf
test
sub
and
outs
rcl
pop
ror
(bad)
or
mov
add
mov
adc
or
mov
loopne
aaa
loopne
dec
ret
fisubr
inc
popf
jl
out
fisubr
lock
int
shl
add
xor
test
adc
push
push
test
rcr
leave
fdiv
cli
push
mov
div
push
push
cli
daa
cwde
push
les
mov
xor
xchg
xor
xor
inc
dec
or
inc
and
stos
inc
and
sbb
add
or
je
scas
rol
(bad)
mov
push
inc
(bad)
sub
shr
sbb
jb
fisttp
outs
pop
sahf
add
cmp
dec
sub
sar
dec
rol
sbb
mov
jo
sar
jns
(bad)
lea
std
ret
xor
or
sub
add
ret
(bad)
xchg
scas
inc
(bad)
jb
push
xor
mov
add
into
dec
dec
and
fisubr
loopne
mov
push
dec
jp
nop
and
and
fdivr
jmp
jmp
(bad)
movzx
ins
xor
or
pop
test
add
in
push
jle
or
xor
add
ret
inc
les
fimul
fstp
pop
push
rol
pop
or
inc
mov
cwde
(bad)
mul
cmps
(bad)
pushf
call
or
dec
cwde
fild
fidiv
or
adc
mov
adc
ret
test
add
and
test
cwde
fcom
dec
push
inc
xor
push
or
nop
sti
sbb
and
lods
mov
adc
repz
shl
test
scas
aaa
xchg
xor
sbb
loopne
xor
sbb
js
(bad)
fld
sub
and
pop
int3
rol
jg
adc
mov
push
jo
or
push
cwde
add
mov
int
int3
mov
mov
test
cmp
in
in
daa
sbb
sub
clc
test
adc
sbb
pop
pop
mov
sub
fnstcw
pop
fwait
out
adc
jno
sar
inc
push
outs
jo
push
or
cs
inc
stos
dec
mov
push
cwde
das
add
sub
adc
pop
pop
sbb
imul
or
nop
mov
aad
add
ret
stos
pop
cmp
push
adc
movs
test
mov
inc
mov
loopne
sub
push
adc
add
inc
sub
adc
daa
shr
push
ss
ins
in
mov
and
push
cmp
xor
(bad)
rol
and
and
enter
pop
add
inc
mov
mov
loope
(bad)
inc
loop
jbe
and
dec
jecxz
pop
mov
mov
sbb
adc
sbb
inc
push
push
addr16
inc
outs
dec
sbb
adc
pop
mov
rcl
cmc
sbb
and
fmul
ret
sub
pop
inc
and
cmp
add
out
jl
add
jg
or
ins
jno
test
cmp
push
push
sub
(bad)
test
ffreep
std
jo
pop
push
mov
dec
sub
mov
aad
xor
ds
hlt
jle
add
test
ror
cmp
leave
repnz
sub
xchg
adc
pop
mov
cmp
das
sub
test
adc
ror
push
xor
adc
call
inc
push
pop
xor
mov
fsub
dec
xor
ja
adc
or
add
cmc
or
inc
inc
leave
dec
cmp
mov
iret
mov
push
sub
stos
pop
fs
lods
stos
test
test
or
or
xor
cmp
lea
pop
sub
je
div
adc
call
adc
xor
out
push
je
and
pusha
or
add
test
dec
popa
test
lds
dec
push
pop
adc
or
push
inc
loope
fsub
mov
mov
pusha
fwait
test
hlt
(bad)
sti
(bad)
push
enter
sub
movs
fwait
clc
ds
xchg
jo
mov
(bad)
ins
pop
add
pop
sbb
outs
lods
push
xor
leave
push
xor
sbb
sbb
fs
cmp
inc
out
or
cwde
in
sbb
dec
mov
cmp
add
mov
imul
mov
ja
les
repz
pop
imul
ss
and
add
loop
xor
imul
push
in
loopne
inc
jle
mov
xlat
and
sub
sbb
mov
sti
lods
xchg
push
or
ss
inc
pop
inc
pusha
(bad)
ficomp
int
xchg
stos
(bad)
shl
sub
out
xor
pop
les
add
jae
push
inc
xchg
push
inc
add
mov
pop
cmc
aam
sub
test
fwait
or
push
push
(bad)
adc
and
mov
lea
adc
fsub
sbb
cs
(bad)
push
push
cmc
(bad)
jno
arpl
xchg
push
mov
sub
loopne
or
or
xchg
push
hlt
out
mov
inc
dec
dec
dec
inc
dec
dec
pop
(bad)
and
cmp
inc
jge
jmp
jo
sahf
std
push
push
fcomp
mov
sub
loopne
jle
sub
xchg
and
cmp
xchg
mov
dec
std
pop
adc
xchg
mov
mov
fisubr
and
mov
xor
mov
inc
jge
das
mov
cwde
push
pop
adc
clc
add
pop
push
rcr
push
adc
ret
fisubr
mov
cmp
xchg
or
jg
adc
pop
pusha
jle
xchg
lock
pop
add
adc
sbb
ds
aam
and
popa
cmps
cwde
or
and
xor
add
and
adc
dec
cs
ficomp
dec
sub
sub
push
cmp
cmp
fadd
pop
cmp
enter
inc
inc
dec
jge
lods
sbb
inc
sub
out
adc
mov
daa
add
cmp
and
retf
test
inc
daa
je
imul
adc
or
sbb
add
sbb
outs
cwde
sub
or
inc
jl
pusha
pop
and
int
rol
mov
sub
cmps
push
in
int
pop
jl
and
push
ret
mov
jmp
fs
sub
and
test
push
popf
jo
fldcw
je
xchg
mov
ss
je
jle
ss
rol
mov
cs
out
rcr
dec
and
sub
adc
repz
adc
or
dec
push
push
(bad)
scas
dec
in
ret
mov
xchg
xchg
clc
pop
inc
inc
(bad)
mov
mov
leave
(bad)
repnz
cwde
inc
popf
mov
cmp
inc
inc
mov
(bad)
xchg
sbb
or
loop
js
fmul
inc
dec
push
pop
(bad)
xor
je
and
mov
(bad)
and
add
and
xchg
push
ret
cmp
mov
adc
sub
fist
pop
or
cmc
data16
mov
ja
mov
push
mov
adc
sub
push
popa
sbb
and
or
jg
and
adc
or
cwde
sbb
push
push
cmp
sub
enter
fwait
sub
inc
mov
inc
loopne
pop
icebp
sub
mov
cmp
test
sbb
aad
mov
push
dec
push
or
pop
sbb
mov
sub
mov
mov
test
sbb
dec
data16
or
adc
cmp
inc
or
rcl
add
iret
sub
fs
xchg
and
jns
sahf
mov
adc
xchg
pop
mov
push
add
mov
xor
sahf
push
les
je
jmp
or
or
int
and
dec
xor
jo
and
add
mov
sub
push
lds
or
sub
inc
cmp
add
mov
push
not
and
xchg
dec
cmp
enter
pop
(bad)
out
pop
or
cmp
fsub
int3
and
jmp
into
mov
jo
mov
or
ret
mov
std
stc
mov
sbb
sbb
pop
js
psubsb
add
fs
mov
add
add
fwait
mov
retf
push
cmp
cwde
jmp
not
stc
sub
rol
mov
inc
dec
iret
mov
sbb
xor
int
fwait
lods
sub
adc
adc
aad
imul
jl
or
push
sbb
test
adc
loopne
sbb
int
mov
adc
jmp
xor
adc
cmp
sbb
std
jmp
mov
inc
push
enter
and
les
int
cmp
or
add
shl
pushf
add
pop
push
dec
cwde
mov
pusha
or
push
pop
mov
arpl
jb
add
je
inc
or
push
push
adc
pop
push
push
or
jmp
pop
xor
cmps
arpl
fist
mov
pop
pop
cmp
je
push
add
sbb
adc
inc
bound
cmp
shl
call
pusha
inc
dec
or
ins
lds
pusha
add
ds
arpl
popa
mov
rcl
xchg
mov
and
and
add
and
mov
cmp
mov
cmp
adc
pop
rcl
ja
icebp
shl
jge
cmp
or
aas
push
cs
xor
sahf
sbb
cmp
ret
push
(bad)
fadd
in
mov
mov
call
pop
stos
js
add
xchg
jmp
ret
or
sahf
push
sub
mov
adc
adc
mov
loope
jo
mov
xchg
pop
cmc
xor
(bad)
retf
cmp
inc
adc
inc
adc
push
mov
push
movs
sub
in
and
dec
or
push
cmp
sub
inc
jl
cmps
cmps
cmp
and
bound
xor
jecxz
call
pop
inc
lea
inc
je
cmp
lods
sbb
sub
xor
mov
and
push
cs
inc
iret
pop
pop
add
inc
mov
pushf
idiv
in
movs
mov
jne
cmp
mov
cmp
and
cs
jecxz
and
lods
or
std
inc
add
cli
mov
pusha
adc
push
push
jo
sub
retf
add
add
push
sub
(bad)
sar
sbb
or
pop
rol
int3
sub
mov
mov
cli
test
mov
cli
fsubrp
inc
lock
mov
(bad)
cld
cmp
pop
pop
mov
jecxz
inc
xchg
lea
jl
int
and
in
push
rcr
or
out
inc
push
xor
and
(bad)
(bad)
mov
push
lea
inc
adc
inc
mov
and
jns
nop
mov
jmp
jle
mov
adc
push
rol
inc
xor
xchg
adc
mov
sub
repnz
mov
add
popa
das
mov
fadd
mov
call
xor
or
add
xor
jmp
adc
js
aad
aad
in
add
inc
add
jl
lock
jno
je
and
pop
in
cmp
adc
ret
cs
adc
and
mov
sahf
inc
dec
and
ficomp
(bad)
sub
pushf
sub
inc
and
jle
sbb
in
fdiv
adc
sbb
pop
jmp
fsubr
pop
and
sbb
jne
es
mov
jp
pop
add
int
sbb
pop
jae
and
retf
ret
add
(bad)
cmp
je
and
push
sbb
stos
mov
add
das
pusha
xor
outs
lds
push
jo
adc
xor
push
jo
pop
lock
pop
adc
mov
daa
pop
ins
(bad)
loop
xor
inc
adc
inc
hlt
mul
sbb
sub
dec
jae
inc
fcmovne
push
pushf
add
cmp
push
adc
ds
pop
xor
and
adc
cmp
or
push
lods
mov
and
lea
jmp
and
mov
in
adc
mov
inc
jno
js
test
in
inc
in
inc
add
or
push
sub
pop
mov
xchg
add
xchg
sbb
sub
and
(bad)
xadd
mov
sbb
jg
xchg
dec
xor
and
xor
lea
xor
je
cmps
test
movs
and
xchg
dec
fst
fidiv
push
adc
ror
mov
mov
sub
(bad)
and
inc
fs
gs
pop
mov
push
data16
lods
call
popf
jmp
imul
bswap
add
push
dec
arpl
add
mov
aaa
cmp
fs
inc
jne
inc
js
push
add
inc
inc
movs
and
cmps
and
cmps
xor
add
push
mov
inc
jnp
push
dec
stos
inc
fistp
fidiv
fisub
out
adc
rcl
mov
jl
push
adc
jne
cmp
fmul
aam
loopne
xchg
adc
pop
xchg
sti
jae
sub
mov
inc
out
push
std
adc
fcom
add
(bad)
sti
rcr
sub
sub
lahf
mov
push
mov
or
add
inc
clc
movs
movs
popf
ficom
cmp
and
sub
add
in
pusha
dec
repz
push
add
sub
cmp
add
fs
mov
xor
sti
push
fld
out
(bad)
cmp
les
repnz
jo
inc
mov
sahf
imul
or
call
adc
dec
call
or
sub
mov
in
jo
sub
pushf
pop
ss
fs
add
fcomp
push
jnp
cmps
leave
mov
mov
cmp
das
shl
push
aaa
xor
inc
xchg
inc
jecxz
jecxz
jb
sbb
(bad)
push
sub
call
mov
cmp
sub
add
add
or
ds
shl
pop
add
out
inc
jge
sub
add
daa
pop
mov
mov
add
add
xor
fdiv
inc
inc
mov
inc
dec
sbb
dec
dec
scas
jbe
jno
les
mov
or
cmp
rol
pusha
fmul
lods
push
pop
int
pop
add
push
inc
dec
xchg
inc
mov
mov
sub
(bad)
push
jg
shr
xor
lock
push
test
dec
pusha
data16
and
or
pop
sub
push
pop
leave
xchg
xor
mov
stos
jmp
arpl
ins
fs
addr16
push
add
inc
adc
add
ins
inc
and
lock
test
je
lahf
out
inc
mov
mov
arpl
xor
cli
loop
ret
xlat
hlt
sub
mov
pop
lock
jecxz
inc
sbb
xchg
adc
pop
inc
add
mov
or
push
inc
dec
push
inc
push
aas
and
or
sub
or
arpl
ins
add
add
jnp
loopne
shr
int3
or
(bad)
jg
mov
and
mov
mov
xor
mov
(bad)
jmp
fiadd
jne
push
push
addr16
mov
mov
std
jg
push
fldcw
(bad)
add
pop
cmp
sar
push
dec
add
(bad)
(bad)
in
or
jnp
mov
cli
jle
ror
aas
ss
and
or
mov
mov
xor
mov
and
mov
out
call
out
cmp
xor
lahf
mov
add
jnp
div
cmc
or
xor
ds
pop
xor
sub
mov
jno
sbb
call
push
and
outs
sar
mul
mov
xor
mov
xor
xchg
ins
js
or
fistp
mov
clc
inc
push
call
(bad)
adc
neg
push
pop
xor
fdiv
out
xor
mov
aas
fcomi
add
sub
pop
add
stos
idiv
xor
sti
pop
fidivr
retf
push
mov
inc
stc
mov
push
mov
retf
push
push
xor
mov
fisubr
gs
adc
imul
xchg
popf
mov
sub
test
xor
fcomp
in
in
xchg
add
fstp
sub
cmp
inc
add
and
repnz
btc
pop
stc
test
stos
js
popa
sub
popa
jbe
rcr
sahf
mov
cmp
and
mov
pop
clc
(bad)
fistp
xor
ds
mov
mov
xlat
mov
iret
(bad)
mov
mov
mov
cdq
lds
cmp
idiv
xor
retf
mov
mov
adc
fild
mov
jmp
mov
int3
(bad)
and
and
(bad)
xor
out
mov
mov
mov
mov
and
lods
std
jno
gs
mov
ret
mov
outs
lods
mov
in
push
push
push
(bad)
sti
xchg
or
div
pop
sbb
jecxz
sti
jnp
(bad)
(bad)
(bad)
mov
mov
fidivr
mov
xor
xor
push
mov
(bad)
fistp
les
loop
inc
mov
pop
scas
fbstp
(bad)
aad
outs
adc
(bad)
mov
mov
outs
pop
cli
add
in
mov
adc
std
push
adc
in
fsubrp
rol
(bad)
aas
retf
cmp
aad
mov
jmp
pop
mov
push
cmp
into
xor
pop
jg
inc
sti
mov
and
jne
and
test
jecxz
fld
dec
mov
inc
imul
sti
jmp
outs
(bad)
in
in
or
sbb
test
dec
ins
mov
lock
inc
cmp
adc
lods
jl
not
int
dec
or
in
leave
jo
xor
pushf
lods
cmp
pushf
cmc
arpl
dec
sbb
retf
fisttp
inc
sahf
inc
xchg
pop
shl
clc
or
lock
aas
data16
pop
mov
inc
pop
call
and
aam
mov
mov
sub
pop
sub
mov
retf
pop
add
inc
sbb
dec
(bad)
aam
aam
pop
or
leave
add
mov
mov
xchg
(bad)
aaa
lds
enter
mov
lock
arpl
loopne
dec
popa
push
mov
jmp
test
adc
xor
inc
and
mov
cmps
xchg
xchg
xor
test
(bad)
xor
sub
cmp
sbb
(bad)
dec
in
push
mov
mov
pop
call
ret
and
mov
jne
sub
pop
adc
cmp
ins
call
mov
pop
push
neg
mov
pop
(bad)
out
outs
pop
push
inc
stos
or
daa
retf
mov
stos
mov
in
dec
loope
dec
(bad)
and
in
lahf
adc
call
xor
loopne
sbb
pop
in
dec
mov
dec
(bad)
fstp
mov
inc
hlt
xlat
mov
mov
push
ins
outs
ss
iret
pop
pop
aas
xor
test
mov
idiv
jbe
and
add
fisttp
push
fwait
aas
stos
mov
(bad)
lock
scas
lea
push
mov
outs
push
xchg
aam
fild
cld
(bad)
stc
adc
push
mov
jmp
iret
lock
add
pusha
and
inc
mov
push
loopne
sti
cmc
inc
cmp
jmp
xchg
adc
cld
outs
mov
sbb
mov
mov
retf
out
sbb
lods
xchg
or
repz
fs
add
mov
(bad)
fild
push
scas
or
cmp
push
fs
nop
adc
fdivr
popa
outs
inc
pop
retf
addr16
ins
daa
jae
stc
outs
cli
mov
jne
and
inc
mov
xchg
ja
jmp
mov
mov
add
mov
jo
sbb
jle
int3
ret
or
xchg
ins
push
push
in
popa
mov
sub
mov
sub
arpl
adc
push
inc
fist
popa
loope
pop
iret
pop
sbb
jle
pop
xchg
sub
jge
push
or
xchg
xchg
outs
push
movs
paddb
lock
ins
nop
or
mov
lods
sbb
pop
(bad)
mov
imul
and
mov
mov
mov
push
mov
fwait
sub
lock
mov
data16
push
push
inc
or
test
les
bound
cmp
adc
cmp
fwait
inc
adc
mov
iret
mov
(bad)
das
inc
hlt
jne
inc
push
mov
std
test
pop
mov
jecxz
fldenv
inc
pop
test
pop
add
dec
sub
mov
shl
mov
add
pop
(bad)
inc
mov
and
or
es
not
aas
push
(bad)
jbe
push
mov
jmp
xor
call
fld
sbb
test
les
mov
out
lods
mov
fsub
int3
(bad)
sti
jg
es
ror
push
mov
pop
push
mov
adc
jp
and
add
pop
mov
sbb
stc
mov
mov
xor
push
mov
mov
sti
(bad)
outs
jnp
mov
add
dec
imul
mov
and
adc
hlt
sbb
dec
cmp
cdq
mov
ret
jno
dec
pop
fwait
pop
jo
repz
js
pop
push
mov
push
or
pop
add
std
add
aaa
clc
movd
mov
daa
push
call
push
push
mov
push
and
cmp
das
pop
clc
mov
inc
jg
popf
push
pop
ss
aas
mov
sti
xor
into
mov
and
jo
jle
fmul
pop
sti
push
adc
stos
or
fiadd
(bad)
(bad)
(bad)
jne
inc
xchg
ins
sub
sbb
mov
popa
dec
pop
sbb
pop
jmp
out
out
xor
call
pop
rol
or
or
adc
add
dec
out
add
push
inc
and
fwait
push
sub
pop
nop
ja
mov
mov
jmp
xor
inc
jmp
ins
or
ja
repnz
scas
inc
push
add
jg
pop
mov
mov
scas
retf
jle
adc
jno
popa
enter
add
fnop
clc
(bad)
add
jo
(bad)
out
add
xchg
dec
shl
ret
(bad)
inc
in
loopne
or
mov
mov
mov
mov
xrelease
sub
fidiv
inc
xchg
pop
pop
retf
inc
arpl
(bad)
aas
aam
cmc
clc
push
mov
idiv
movs
mov
in
sub
fimul
pop
dec
sar
mov
jns
fadd
adc
rcr
fisttp
add
std
aad
xchg
xor
push
pop
mov
pop
mov
outs
ror
mov
add
mov
add
sub
push
data16
add
push
mov
sbb
sbb
cmp
pop
and
sub
mov
and
add
mov
jl
and
int3
cmp
je
lds
scas
sub
xor
mov
xchg
pop
movs
push
xor
jmp
mov
cwde
or
test
push
in
in
mov
xchg
or
stc
cmps
repnz
mov
jmp
fdivrp
fistp
adc
sti
mov
mov
mov
jb
cmp
xor
mov
outs
and
push
pop
test
cs
pop
pop
repz
sbb
or
mov
not
rol
pop
bound
loop
pop
std
outs
jne
sbb
inc
inc
mov
adc
xor
xchg
sar
sbb
pop
mov
sub
movs
jg
lea
bound
or
xchg
cmps
(bad)
cld
adc
mov
sub
cmp
(bad)
jns
cdq
addr16
mov
bound
mov
cmp
xor
outs
loopne
jge
xlat
fwait
and
fimul
(bad)
jecxz
shr
imul
mov
call
mov
push
mov
pop
inc
cmp
pop
cs
fucomip
or
push
dec
sub
mov
mov
or
loope
loope
push
call
jg
sahf
test
je
add
ds
push
push
xchg
jne
adc
pop
jo
aas
mov
gs
mov
jae
push
shr
add
dec
outs
sub
jmp
mov
adc
adc
in
xor
xor
push
iret
fdivrp
das
mov
lock
or
mov
lahf
ins
or
outs
adc
dec
push
ja
push
jbe
out
mov
je
and
mov
fidiv
xor
mov
test
popa
clc
pop
push
jp
or
or
fist
mov
outs
(bad)
outs
hlt
mov
pop
add
mov
mov
shl
repz
fstp
js
cmp
dec
mov
jl
pop
(bad)
and
and
or
outs
popa
loopne
add
mov
cli
out
push
jno
and
fisub
dec
sbb
int
outs
jo
add
xor
add
push
sti
scas
push
dec
aam
inc
test
test
pop
mov
stos
in
add
sbb
retf
test
rcl
ror
or
lods
fnstcw
fcom
loope
aas
nop
(bad)
das
bound
stos
ds
or
mov
fwait
das
cmc
xchg
aad
adc
cmp
loopne
mov
outs
aaa
lods
idiv
ret
sub
xchg
xchg
push
mov
xlat
mov
lahf
sbb
pop
or
or
mov
aad
fsub
sbb
inc
clc
shl
xor
cli
nop
in
or
call
mov
xor
mov
add
ficomp
stc
jbe
fsub
jo
inc
push
mov
enter
sar
jno
rsqrtps
xor
nop
mov
push
vpshlb
div
pusha
(bad)
push
xchg
or
ds
push
dec
sub
cwde
je
xor
jecxz
je
ss
aad
lahf
pop
mov
jmp
mov
pop
jnp
mov
repnz
pop
or
inc
jae
cmp
adc
aas
mov
mov
push
mov
adc
push
mov
test
mov
mov
xchg
adc
loop
jge
push
icebp
loope
call
sbb
xchg
push
mov
in
xchg
mov
mov
mov
xor
pop
or
sub
(bad)
pop
mov
adc
ins
popa
push
std
call
cmps
outs
jl
sbb
push
mov
inc
xor
or
jb
push
jle
ficomp
lahf
adc
in
xchg
pop
inc
push
pop
push
jo
jae
or
outs
hlt
xchg
popa
mov
cdq
lock
dec
fcmove
cmp
jne
std
pop
js
mov
add
push
inc
mov
shr
aaa
mov
out
push
movs
pop
jl
dec
sbb
div
fld
hlt
push
sar
aaa
popf
push
add
loopne
clc
push
jle
push
mov
xchg
(bad)
fld
add
jmp
aaa
jbe
je
inc
sub
(bad)
outs
mov
xchg
xlat
aas
and
aaa
sub
and
or
or
inc
add
out
(bad)
fcmovne
jmp
sbb
sbb
jmp
push
adc
cmp
inc
aas
sti
aas
sti
pop
cmp
je
push
popf
mov
movs
xchg
outs
out
and
je
push
jl
mov
cmp
jl
sbb
push
adc
jne
(bad)
push
pslld
fldenv
mov
outs
pop
ficomp
sbb
ins
sbb
push
jae
fldcw
(bad)
das
jg
push
inc
sbb
xor
inc
lahf
or
inc
and
ins
sub
outs
xchg
jne
add
ds
jmp
fld
cmp
out
sub
jne
call
inc
je
movs
pop
jle
popa
pop
or
push
jle
dec
rcl
push
fxch
test
inc
mov
cmp
xor
cwde
jne
in
pop
mov
add
stos
pop
push
mov
pop
pop
mov
sbb
hlt
sub
adc
push
sbb
push
les
enter
push
enter
lods
imul
es
sub
pop
cld
xchg
or
js
cld
retf
add
rol
test
mov
sub
(bad)
ret
test
cwde
test
je
or
pop
xchg
jg
(bad)
xor
leave
jbe
scas
scas
cwde
and
add
inc
mov
inc
push
jns
ss
in
sub
addr16
mov
pop
sub
inc
outs
into
inc
(bad)
outs
popa
outs
ins
popa
or
jne
jne
inc
les
xchg
dec
inc
add
or
test
push
push
jecxz
fnsave
pop
mov
pushf
dec
push
mov
xchg
aam
adc
lods
div
and
cld
mov
push
mov
and
mov
mov
xchg
push
pop
pslld
scas
inc
dec
jle
jbe
popa
movs
or
add
lock
jle
test
xor
inc
call
cmp
and
sub
xchg
push
es
add
jl
ret
xor
icebp
pop
mov
inc
fs
pop
xor
in
pop
inc
cmp
int3
lock
addr16
(bad)
bnd
jne
outs
fs
outs
imul
sbb
movs
fs
outs
push
mov
add
dec
test
pop
mov
call
inc
fs
out
aam
mov
xlat
bound
lds
call
sbb
pop
out
inc
mov
std
jae
out
push
add
(bad)
adc
mov
push
imul
mov
mov
sub
out
cmp
cmp
push
inc
ins
add
push
das
mov
jmp
add
pop
push
mov
add
mov
das
scas
mov
ja
mov
pop
dec
ja
ins
ret
ja
lahf
add
cld
lods
jmp
or
dec
out
(bad)
dec
or
mov
jmp
hlt
add
(bad)
in
inc
xor
push
test
(bad)
and
mov
fs
scas
mov
outs
out
mov
jbe
mov
mov
sti
arpl
mov
fs
dec
inc
jg
push
jo
inc
cmp
inc
pop
ja
push
in
mov
in
push
mov
imul
push
add
jg
not
mov
add
dec
packsswb
jmp
sbb
outs
and
and
jge
fistp
out
cld
inc
pop
test
mov
pusha
add
sub
pop
lods
and
das
cmp
jmp
ja
loopne
add
mov
xchg
inc
jmp
add
sbb
push
cmps
mov
(bad)
cmp
cmp
inc
dec
fisttp
jmp
dec
(bad)
or
dec
mov
xchg
and
inc
xchg
mov
inc
pop
shl
cmps
inc
cli
arpl
popa
sti
push
(bad)
outs
mov
push
shl
out
mov
mov
mov
lea
sti
or
lea
addr16
repz
out
mov
and
ins
pop
pop
not
retf
inc
sti
xlat
and
push
jb
aaa
loopne
or
push
add
add
inc
scas
inc
dec
jb
add
mov
add
and
pop
mov
mov
enter
sbb
mov
sti
mov
mov
test
out
jecxz
mov
test
dec
push
pop
mov
cmp
das
ja
das
sub
bound
mov
test
jo
std
out
add
mov
ret
inc
and
call
cs
dec
add
iret
ret
hlt
mov
jg
sub
mov
fidiv
int3
push
push
mov
ficom
add
jmp
jle
rol
xchg
mov
inc
std
or
popa
jecxz
aas
mov
jp
xchg
ins
(bad)
ins
add
xchg
pop
fdiv
cmp
call
add
cmp
out
out
mov
enter
int3
add
dec
add
xor
pusha
mov
inc
adc
lds
ja
jne
mov
cmp
jnp
pop
adc
or
sub
loopne
lods
mov
sbb
shl
mov
je
dec
(bad)
std
inc
inc
add
mov
cmp
jmp
or
dec
push
mov
adc
push
in
rol
in
and
in
and
outs
fld
inc
pop
or
popa
loopne
add
add
imul
pop
mov
inc
mov
clc
mov
pop
out
rcr
cli
ret
jnp
enter
jb
pop
(bad)
rcr
(bad)
and
inc
mov
(bad)
add
xlat
mov
mov
cmp
and
or
retf
mov
jmp
add
(bad)
sub
pop
out
aas
and
lods
(bad)
call
pop
add
mov
mov
mov
xor
sbb
dec
out
das
mov
push
repz
call
repz
pop
loope
dec
add
or
inc
ret
outs
cmp
(bad)
int3
push
fs
cmp
mov
ins
mov
out
dec
sub
mov
push
ja
or
ret
jg
mov
bnd
inc
add
test
inc
mov
pop
fisttp
push
out
mov
push
jo
jmp
fs
add
cmps
call
rcr
inc
add
sbb
icebp
dec
mov
sub
mov
iret
mov
call
mov
sar
inc
mov
mov
mov
mov
push
stc
dec
sti
(bad)
pop
mov
inc
mov
adc
and
(bad)
push
mov
mov
xor
mov
(bad)
cli
push
inc
mov
adc
cmp
fidivr
xor
movs
in
in
test
jae
pop
push
push
and
outs
mov
mov
push
inc
ss
lahf
push
adc
fbstp
call
std
rcr
out
pop
mov
and
adc
pop
(bad)
in
add
pushf
mov
pushf
xor
cmp
mov
mov
jmp
movs
test
mov
(bad)
push
mov
push
cmp
mov
push
or
add
stos
(bad)
je
mov
push
dec
inc
dec
jmp
adc
add
jmp
adc
mov
mov
adc
call
jmp
retf
dec
outs
inc
(bad)
push
pop
aas
fild
dec
push
test
shl
rdpmc
inc
pop
push
enter
jmp
pop
ins
shl
out
jg
stos
js
(bad)
push
imul
inc
xchg
pop
inc
cmp
ret
pop
mov
(bad)
jle
mov
inc
imul
(bad)
mov
push
push
ins
jg
add
mov
xchg
dec
(bad)
fcomi
fld
mov
sub
int
jbe
icebp
xor
cmp
aas
inc
sbb
jmp
xor
mov
out
add
jae
pop
aas
inc
out
je
or
ret
inc
fidiv
dec
imul
sbb
mov
add
test
(bad)
out
push
out
push
loope
loopne
mov
enter
gs
ret
mov
mov
mov
(bad)
fild
pop
mov
mov
sbb
mov
xor
add
popf
push
mov
pop
mov
icebp
cmp
mov
mov
mov
hlt
xor
loopne
jg
or
dec
cmp
xor
push
mov
dec
rol
out
sar
inc
add
clc
dec
daa
mov
mov
mov
add
ins
fiadd
cmp
cmp
inc
test
call
and
mov
mov
pop
fucomip
inc
pop
mov
rol
xor
jmp
mov
ins
cmp
xor
inc
(bad)
call
sub
fcmovnb
sub
mov
mov
mov
pop
add
push
(bad)
mov
xor
mov
lea
popa
and
or
lods
xor
push
cmc
outs
popf
imul
sub
and
jmp
sbb
mov
fwait
ja
sub
push
mov
lds
test
(bad)
dec
mov
lock
(bad)
sub
and
mov
add
retf
push
mov
test
inc
push
loopne
(bad)
mov
std
repnz
push
add
repz
add
(bad)
pop
mov
add
cmp
inc
std
mov
jp
sub
pop
pop
loop
sbb
rcr
ins
sti
enter
adc
ret
or
jne
adc
mov
inc
jae
pop
sbb
mov
mov
dec
enter
push
sub
cmp
and
push
mov
in
(bad)
mov
aaa
mov
xor
adc
push
test
movs
mov
xlat
dec
mov
shr
sub
xchg
push
or
js
mov
sti
push
pop
push
push
xchg
cmp
and
test
mov
ds
sub
inc
adc
outs
out
or
add
fcom
pop
and
mov
ret
sbb
call
std
xor
xor
mov
cmp
pop
jne
shl
ficom
mov
lahf
add
ret
jl
add
fsub
ret
dec
cmp
mov
icebp
lods
jp
out
mov
xor
outs
sti
jb
mov
fstp
and
mov
mov
dec
jnp
xor
push
pop
mov
xor
and
adc
test
enter
std
xor
not
retf
pop
pop
mov
in
inc
and
and
jge
into
mov
push
pop
(bad)
outs
cli
idiv
inc
daa
adc
sub
xchg
inc
mov
mov
ret
mov
dec
mov
jecxz
cwde
int3
frstor
or
rcl
mov
dec
or
pop
xor
mov
rol
out
dec
mov
dec
test
popf
pop
or
outs
push
cmp
add
push
mov
mov
sbb
mov
(bad)
iret
mov
(bad)
push
pop
cmp
fistp
jno
mov
pop
adc
xor
js
(bad)
and
and
inc
or
call
adc
fcomi
movs
imul
adc
mov
inc
in
fbstp
mov
mov
rol
dec
mov
jae
inc
sar
xor
mov
mov
fdivr
fsub
sub
(bad)
push
mov
pop
add
push
cmp
pop
push
(bad)
adc
mov
mov
fs
fs
or
inc
loop
push
pop
push
mov
mov
addr16
sar
or
push
lea
and
icebp
pop
jp
xor
mov
pop
cmp
inc
std
pop
inc
mov
add
dec
cdq
dec
mov
mul
dec
jb
call
jle
mov
imul
add
mov
mov
movs
or
cli
xor
rcr
arpl
inc
jno
adc
add
xchg
in
push
cmp
rol
fsub
pop
test
dec
test
jmp
fdivr
mov
inc
or
outs
into
push
mov
mov
cld
push
mov
aas
xchg
mov
and
sub
fadd
dec
push
mov
mov
mov
add
push
ds
cmp
sti
xchg
aas
int3
js
add
adc
mov
lds
or
mov
mov
ret
add
sub
aaa
jbe
scas
xor
mov
sub
outs
mov
ins
sbb
jnp
mov
test
mov
mov
adc
mov
mov
mov
jne
mov
loope
imul
add
sub
mov
mov
ret
ds
xchg
(bad)
sets
jecxz
inc
sub
xor
mov
pop
pop
mov
call
inc
ret
xor
(bad)
in
ins
inc
and
imul
retf
sbb
pop
pop
stos
jne
shl
mov
lock
stc
push
pop
xchg
scas
(bad)
sbb
pop
mov
xchg
sbb
sbb
repz
cmp
xchg
sub
mov
jbe
push
add
lock
pop
xor
das
jle
add
push
mov
pop
adc
add
push
cmp
rcr
add
cmc
xor
rcl
ror
fs
out
(bad)
fistp
fcomp
cmp
jno
inc
add
cli
lds
adc
mov
pop
cmp
aaa
sbb
outs
popa
test
(bad)
push
sti
lock
add
pop
mov
mov
into
retf
fdivr
add
clc
dec
cld
sar
bound
or
xor
mov
pushf
mov
ret
lea
or
ins
sub
lock
aam
call
adc
or
out
repnz
shl
mov
jle
adc
std
aam
faddp
jecxz
mov
add
adc
mov
lock
aaa
mov
clc
push
mov
inc
add
ins
pop
cli
int
loopne
inc
mov
push
push
pop
iret
repnz
adc
cmps
xchg
and
loopne
icebp
mov
and
mov
fldcw
push
xchg
pop
mov
mov
jnp
jb
aam
shl
arpl
out
or
mov
cs
scas
or
nop
hlt
mov
dec
pop
mov
aas
xchg
les
shl
inc
cmp
and
pop
fcmovnbe
mov
push
or
in
sbb
gs
mov
mov
adc
or
mov
enter
xchg
push
mov
std
jg
or
or
cmc
sub
int
hlt
sub
ret
dec
mov
rcr
lds
jno
xor
sub
mov
fdiv
clc
inc
and
dec
sbb
mov
mov
sub
mov
sub
lea
mov
out
loop
mov
push
fs
add
call
mov
jo
push
add
dec
xchg
fisub
jns
and
not
idiv
test
push
adc
dec
mov
push
iret
daa
mov
rcl
push
cmp
sar
sub
adc
fs
pop
rcl
(bad)
aaa
dec
and
mov
call
xor
mov
sub
mov
mov
pusha
mov
movs
xchg
or
xchg
add
or
test
mov
add
mov
push
adc
adc
add
in
mov
add
sub
jmp
and
imul
xchg
push
pop
adc
jge
aad
mov
call
push
mov
pop
pop
mov
mov
and
div
dec
add
(bad)
pop
mov
mov
mov
jae
xchg
add
bound
fcmovnb
xchg
mov
mov
call
into
ss
mov
mov
pop
sub
mov
mov
mov
adc
push
mov
inc
ins
das
aam
or
inc
test
mov
mov
hlt
inc
pop
daa
inc
push
mov
das
mov
push
and
ret
repnz
dec
and
aad
adc
dec
mov
sti
mov
daa
sub
xor
cld
xchg
in
add
lahf
dec
sub
test
push
mov
ror
jmp
add
inc
sub
in
fs
jno
pop
icebp
fs
xchg
lock
(bad)
(bad)
(bad)
call
and
daa
sub
pop
sub
sub
adc
or
sbb
sbb
or
pop
std
jmp
add
or
push
or
add
xor
cmp
xor
adc
(bad)
inc
cmp
inc
dec
inc
inc
inc
inc
pop
push
inc
inc
dec
jg
jmp
dec
dec
push
push
push
dec
push
dec
pop
pop
dec
pop
popa
pop
pop
pop
je
jne
add
push
ins
jns
push
mov
add
ja
cmps
lds
(bad)
dec
lahf
mov
lods
or
mov
jmp
mov
(bad)
(bad)
call
ffreep
xchg
movs
mov
shl
jmp
mov
xchg
mov
mov
cwde
mov
(bad)
jg
lea
imul
sahf
mov
test
fiadd
pushf
movs
call
in
scas
fcom
call
ret
out
and
xchg
aad
jle
jmp
in
neg
mov
mov
icebp
xchg
dec
cli
cld
jg
jmp
jg
je
ins
mov
loop
jg
sub
xchg
and
mov
cmp
dec
push
mov
fsub
(bad)
icebp
cdq
push
xor
jnp
inc
jmp
xor
adc
outs
stc
sbb
mul
sub
mov
jge
or
(bad)
sub
stos
cmp
cmp
shr
in
pop
js
push
push
and
ss
mov
ja
das
add
ins
(bad)
ja
xor
lock
stos
inc
xchg
pop
and
add
mov
fild
pop
popa
xor
div
cmp
jbe
and
and
sbb
pop
xchg
push
arpl
or
sub
push
or
call
arpl
stos
push
push
leave
rol
cmp
inc
sahf
jae
adc
clc
fisttp
jle
loop
(bad)
or
das
hlt
mul
pop
pop
test
retf
int
mov
repz
xchg
test
or
jnp
fbstp
or
inc
loope
and
into
(bad)
sahf
inc
jmp
imul
dec
aam
mov
repnz
das
adc
popa
xchg
xchg
ror
mov
push
pop
dec
out
mov
mov
arpl
inc
outs
xchg
and
add
popa
mov
sub
adc
outs
adc
(bad)
pop
adc
dec
and
adc
stos
pop
loope
outs
mov
and
adc
pop
jmp
test
mov
xchg
mov
mov
jae
stos
mov
mov
inc
leave
jmp
mov
cmp
and
jne
sub
and
aaa
jmp
lds
inc
xor
inc
(bad)
(bad)
jg
arpl
or
leave
test
and
push
mov
cmp
arpl
pop
push
mov
mov
int
daa
and
cmp
mov
and
stos
inc
and
retf
fistp
or
cdq
les
add
aam
test
aam
xchg
sub
sub
and
adc
mov
hlt
and
and
xor
jne
or
retf
fistp
adc
mov
repz
popf
push
mov
in
sub
dec
push
cmp
cs
push
mov
cmp
and
sub
mov
adc
sbb
dec
xor
outs
arpl
adc
addr16
fdiv
or
aam
sbb
inc
rcr
idiv
(bad)
mov
das
popa
sub
ret
add
or
popa
push
push
cmp
(bad)
in
push
push
and
add
mov
inc
adc
sub
or
and
add
pop
stos
sub
sbb
pop
sahf
pop
stos
and
fist
(bad)
test
sub
outs
std
mul
clc
inc
ror
sub
arpl
and
pop
jmp
popa
and
xchg
mov
jne
imul
sbb
data16
sbb
mov
scas
lock
or
xchg
inc
fucomi
popa
jnp
sbb
xlat
and
outs
arpl
and
punpcklwd
pop
cld
dec
push
popa
and
push
sbb
mov
ins
push
mov
push
jae
jp
cmp
add
push
dec
out
dec
data16
cmove
jp
sti
pop
mov
popa
jp
popa
adc
dec
icebp
cmp
std
push
addr16
sub
mov
mov
add
(bad)
pop
popa
mov
jecxz
mov
fistp
jle
push
call
xchg
loopne
sahf
or
imul
dec
push
loopne
mov
adc
dec
enter
aaa
and
pop
and
sbb
stc
arpl
cmp
imul
and
add
dec
outs
push
inc
repnz
sub
adc
xor
lds
push
cs
sub
imul
dec
(bad)
aam
mov
mov
in
fcmovnbe
shld
mov
adc
fsub
dec
or
pop
or
ss
mov
fild
shl
mov
sbb
aam
cld
std
cmps
xor
adc
inc
add
in
out
aam
sbb
mov
mov
ins
outs
jo
dec
aam
cli
sbb
fist
xor
xchg
in
les
add
or
out
adc
ins
push
adc
sbb
or
xor
and
ja
fbld
repnz
adc
or
sub
mov
adc
adc
cld
cld
xor
cmps
aas
add
fstp
lock
sbb
mov
or
js
mov
push
cld
mov
cmps
inc
mov
xchg
mov
xlat
push
scas
pop
push
pop
sbb
out
mov
or
jmp
in
mov
lahf
leave
call
loop
xor
and
out
fimul
push
dec
sub
stos
pop
adc
push
jbe
bound
sahf
xor
arpl
pop
or
aam
push
dec
and
jno
xchg
mov
pop
mov
mov
fisttp
or
cvtps2pd
add
adc
dec
fwait
jecxz
lahf
daa
or
and
arpl
sbb
cmp
push
lea
xor
imul
pop
lds
stc
xchg
outs
and
daa
cmp
aaa
sbb
lea
sub
add
sbb
add
fwait
mov
cld
nop
stc
les
pusha
and
es
pop
xor
test
push
push
xchg
mov
xlat
mov
mov
push
add
jbe
add
leave
jae
fnsave
daa
sub
jp
imul
mov
cmp
sub
sub
mov
pop
fldenv
daa
or
dec
retf
add
or
sub
popa
jae
ins
jns
pop
sti
adc
adc
pop
das
or
ss
shr
jbe
or
clc
cmps
pop
pusha
mov
imul
call
pop
xchg
aam
pusha
or
pop
add
inc
push
sbb
repnz
xlat
or
enter
loop
and
xchg
adc
sub
push
sbb
jmp
push
not
lea
cs
gs
sub
rcr
mov
aaa
pusha
and
aam
inc
sahf
cmp
cmp
mov
repz
in
inc
dec
(bad)
mov
fwait
aaa
aam
jb
shl
out
loopne
and
jg
imul
sbb
rcr
outs
arpl
cmp
movs
and
sub
lock
pop
adc
imul
stos
push
adc
sti
jbe
jbe
mov
xchg
xchg
sbb
cmps
mov
sub
jmp
(bad)
fild
sbb
ins
aas
clc
sub
das
cmp
mov
add
(bad)
sub
push
jno
mov
mov
and
retf
xor
mul
push
mov
imul
dec
loop
sub
lods
cmp
adc
lock
call
daa
sbb
es
loope
adc
loop
dec
fst
sbb
mov
outs
sbb
lahf
int3
das
pop
sub
pop
fimul
pop
jle
jae
das
je
pop
cmp
xor
inc
stc
jae
frstor
inc
xchg
push
and
fstp
adc
ss
fstp
push
fsubr
inc
fs
xchg
dec
jae
fstp
das
push
pop
inc
mov
add
jg
push
je
adc
mov
mov
bswap
push
mov
sub
scas
test
or
push
sbb
arpl
or
into
xchg
cmps
lds
stos
mov
push
sub
inc
ror
das
int3
xchg
mov
push
and
jp
loop
and
ss
aam
arpl
mul
bound
lds
or
jb
mov
mov
pusha
cmp
fbld
sub
or
mov
int
xchg
and
and
dec
xchg
mov
mov
fcom
imul
adc
mov
pop
adc
xchg
sub
mov
mov
sbb
stos
dec
repnz
(bad)
jecxz
inc
mov
mov
sbb
inc
popa
xor
mov
mov
add
ds
in
test
mov
mov
outs
sti
sti
imul
popf
xchg
pop
arpl
(bad)
imul
adc
push
add
jns
setbe
mov
cs
ins
and
add
stc
push
and
loope
mov
ror
(bad)
cmp
shr
inc
or
xor
mov
ins
mov
cli
(bad)
or
outs
jnp
inc
jnp
mov
ins
mov
psubd
pop
shr
xor
popf
ins
lea
xchg
iret
shl
cmp
xchg
dec
enter
popa
pop
or
and
add
in
mov
sbb
inc
cmp
mov
aaa
inc
xchg
mov
fnstsw
xchg
cmp
dec
xchg
cs
std
push
dec
adc
dec
cmps
mov
jae
cmps
xor
inc
cmp
mov
test
or
xchg
out
and
mov
cwde
xor
mov
sub
(bad)
push
(bad)
pop
jae
sti
ds
fisttp
push
inc
push
arpl
sub
sub
pop
pop
xor
cpuid
fwait
movs
int
popf
popa
mov
mov
mov
lock
cmp
arpl
sub
dec
mul
ret
ins
stos
xchg
cmps
dec
xor
xchg
fstp
sbb
sbb
sub
ins
dec
cld
inc
or
dec
jnp
jne
sbb
fdivr
imul
pusha
or
cmp
push
or
ins
es
sti
es
sbb
jg
xor
mov
mov
jo
mov
fbld
jmp
push
scas
shr
mov
call
imul
pusha
bswap
int
add
out
cmp
cmc
cs
lods
nop
jns
lea
fisttp
repz
dec
imul
jle
push
jbe
and
daa
xor
in
ss
fistp
ins
popa
and
adc
iret
or
enter
imul
adc
add
jecxz
mov
mov
mov
sub
jo
jo
les
scas
mov
or
dec
pop
pop
mov
adc
xchg
xchg
sti
outs
shl
and
pop
ret
push
and
or
iret
int3
nop
or
movs
adc
sbb
and
repz
cmp
nop
scas
xchg
mov
mov
out
nop
xchg
xchg
arpl
mov
call
or
xchg
xchg
popf
in
scas
icebp
push
arpl
out
fwait
in
sub
movs
icebp
lods
cs
adc
mov
fist
daa
cld
jnp
and
mov
lods
std
xor
jle
sub
and
mov
bswap
mov
stos
and
fst
cdq
sbb
add
lock
test
lea
stos
jae
ss
mov
pop
arpl
test
push
jmp
mov
(bad)
outs
mov
lds
mov
push
in
cdq
aam
sub
adc
lds
adc
out
ins
sub
jmp
shl
push
shr
std
or
and
cmp
les
adc
mul
push
sub
and
cwde
cmp
pop
inc
sbb
sub
(bad)
not
arpl
push
cmp
icebp
loope
push
ficomp
dec
pop
daa
shr
and
mov
jae
sahf
inc
outs
pop
sbb
sub
das
and
mov
adc
sbb
add
inc
mov
sbb
push
cmps
fwait
pop
addr16
arpl
cld
in
sbb
pop
adc
pop
(bad)
or
or
inc
je
mov
push
enter
lods
(bad)
pop
dec
jp
mov
mov
mov
xchg
(bad)
sahf
mov
xchg
sub
mov
(bad)
add
push
jae
or
adc
(bad)
mov
outs
fnsave
and
aad
sub
scas
bound
fsub
xor
dec
shr
loope
and
xlat
scas
ins
mov
sub
ret
fld
retf
lods
ja
sub
mov
dec
sbb
gs
arpl
jne
call
adc
mov
sbb
inc
sbb
dec
push
push
ds
dec
push
push
les
or
les
sub
ds
ss
cmp
or
call
and
fidivr
push
xor
jae
je
(bad)
push
push
and
(bad)
xchg
cmp
mov
aam
dec
xchg
xchg
int
sbb
mov
or
pop
sub
push
and
xlat
xor
sub
sub
fcom
jmp
out
push
aam
sbb
xchg
adc
sbb
and
cwde
jo
stos
fs
sbb
sbb
pop
test
call
sub
sub
dec
inc
retf
pop
jno
and
xlat
imul
dec
inc
mov
not
pop
cmp
test
adc
arpl
jne
ror
pop
mov
mov
mov
(bad)
adc
mov
sub
sbb
or
pop
std
(bad)
jecxz
pop
mov
popa
lods
add
cmp
adc
leave
jmp
or
jbe
pop
into
cdq
es
mov
inc
arpl
rol
add
mov
loope
mov
mov
adc
inc
cmp
mov
ss
scas
lock
jp
and
dec
hlt
push
fimul
loope
add
push
movs
and
mov
sbb
arpl
cmp
xchg
ret
lods
sbb
dec
data16
mov
and
scas
inc
out
push
push
aam
xchg
mov
or
fisub
mov
push
sub
call
and
or
fsubr
dec
cwde
and
gs
fldenv
mov
inc
adc
xchg
jmp
adc
loope
stos
mov
retf
push
loop
push
sub
or
xchg
mov
pop
loope
inc
xchg
and
fdiv
adc
mov
stc
stos
pop
sbb
sub
ret
scas
mov
sbb
std
inc
add
inc
jp
sub
and
xor
fxch
or
loope
int
sbb
mov
cmps
in
mov
and
mov
rol
cmp
lea
arpl
icebp
inc
sbb
mov
push
xchg
je
cmp
test
and
xor
retf
inc
sub
rcr
inc
add
inc
jnp
and
mov
pop
sub
mov
pop
pop
xchg
addr16
lods
icebp
out
and
loope
and
mov
sub
push
jbe
dec
inc
cmp
ss
push
push
pusha
xchg
mov
daa
aam
fisubr
clc
dec
not
jp
pusha
leave
adc
loope
popa
sbb
pop
std
sti
sub
mov
sub
add
sub
fadd
push
ror
xor
nop
add
add
sbb
in
aam
jl
sub
sbb
mov
pop
push
mov
push
lea
xlat
inc
test
and
lea
xor
mov
bound
push
jb
jl
or
push
sub
test
sub
xlat
shl
pop
out
pop
inc
shr
dec
aam
shr
mov
popf
sbb
push
push
push
cld
shr
xchg
push
daa
je
pop
cmp
test
or
(bad)
pusha
mov
jns
inc
adc
push
dec
out
int
loope
or
xor
jbe
daa
adc
sbb
sub
sbb
adc
lock
mov
std
push
lock
test
jmp
popf
mov
ja
sahf
add
inc
mov
xlat
mov
adc
or
mov
rcr
aas
pop
ret
(bad)
loop
inc
inc
and
loop
or
dec
stos
adc
dec
mov
ret
das
(bad)
mov
mov
dec
or
stos
sbb
and
outs
push
aam
and
hlt
inc
jbe
and
shl
aad
scas
sbb
daa
mov
imul
lea
popa
add
mov
sbb
adc
rcr
cmp
aam
fnstcw
(bad)
cli
mov
pushf
xchg
xchg
xchg
out
jmp
or
fisub
jg
ds
ja
(bad)
loop
pop
cmp
xor
push
popa
das
xor
das
pop
aam
sub
popa
xor
data16
mov
dec
mov
sub
sbb
sub
sub
xchg
into
xor
pop
arpl
adc
dec
cmp
int
xor
or
fwait
sbb
out
std
sti
retf
sub
or
stos
adc
add
(bad)
mov
mov
mov
je
retf
cmp
sub
or
dec
mov
cwde
mov
fcom
adc
mov
ret
int3
xor
adc
popa
add
ja
mov
mov
mov
sub
fistp
mov
adc
ret
loopne
add
lock
test
mov
shr
jecxz
pusha
jnp
in
and
cmps
sub
mov
std
aad
cli
stos
dec
aas
push
xor
pusha
stos
sbb
cmp
adc
les
and
nop
dec
mov
repnz
es
or
js
mov
aam
push
push
popf
retf
leave
(bad)
std
cmp
shr
and
adc
push
mov
dec
inc
or
test
pusha
ret
call
cmp
addr16
jbe
aam
or
in
push
pop
ror
sub
mov
cmps
mov
or
je
icebp
and
sahf
cmp
mov
outs
xchg
sub
enter
mov
add
jmp
pop
test
xchg
sub
call
das
jle
retf
popf
sbb
pop
pop
dec
ret
xlat
call
ins
cmp
add
ins
adc
(bad)
add
cs
lahf
mov
imul
or
sbb
loope
and
xor
loope
sti
mov
mov
movs
push
jg
mov
fld
mov
sar
iret
mov
push
lahf
mov
fist
xor
add
mov
pushf
icebp
div
mov
pop
sbb
call
aaa
sbb
inc
add
xchg
xlat
and
add
das
mov
push
lods
inc
sbb
inc
arpl
stc
push
mov
add
aam
leave
jecxz
outs
aaa
jne
dec
movs
data16
bound
adc
test
popa
xchg
mov
push
or
jno
punpcklwd
retf
retf
iret
and
popa
dec
pop
popa
dec
aaa
stos
mov
mul
adc
dec
popa
and
add
adc
js
xor
js
mov
sub
mov
outs
mov
mov
stos
sub
sub
xlat
fiadd
dec
pop
add
dec
test
outs
(bad)
mov
popa
popf
inc
je
and
sti
retf
(bad)
cwde
dec
push
pop
adc
js
in
and
aas
ins
mov
in
pop
xor
mov
dec
hlt
call
jge
mov
jecxz
xchg
arpl
add
sbb
jmp
pop
es
arpl
hlt
pop
xor
aaa
fld
mov
push
pop
sub
lods
inc
inc
imul
pop
dec
jno
xor
call
ret
adc
dec
mov
or
and
ret
in
add
sbb
mov
add
jl
pusha
adc
das
in
movs
jg
js
jo
idiv
ins
jle
mov
cmp
sub
das
add
loope
out
pop
retf
push
inc
push
dec
dec
push
inc
pusha
(bad)
(bad)
(bad)
inc
jae
je
jbe
inc
jp
outs
imul
inc
dec
dec
push
je
push
je
arpl
jecxz
ss
mov
cmp
mov
icebp
jo
xor
and
jne
pusha
test
and
push
pop
loopne
push
pop
mov
out
into
adc
or
test
call
rcr
aaa
aaa
xor
dec
(bad)
xchg
add
rol
ins
cld
dec
stos
xchg
pop
push
rcr
movs
fsubr
(bad)
sub
repnz
cmp
nop
sbb
sbb
sub
rcl
es
mov
fisttp
nop
sbb
out
outs
shl
ret
push
movs
rcl
mov
mov
fs
es
scas
mov
xlat
jne
and
dec
sbb
pop
call
dec
push
pop
fsubr
lock
inc
retf
add
xchg
test
push
mov
inc
loope
and
mov
jle
or
xor
or
jb
dec
sub
xchg
cmp
dec
call
pop
mov
fucomi
inc
pop
loop
stc
out
push
lods
std
lds
shr
dec
mov
mov
test
pop
mov
das
stos
(bad)
dec
sub
jmp
scas
outs
js
adc
xchg
xchg
pop
aam
clc
inc
cmp
xchg
in
out
call
js
jl
xchg
or
mov
aaa
retf
dec
push
adc
dec
pop
ja
cs
(bad)
sbb
sub
bound
jbe
fld
adc
add
and
pop
xor
int
addr16
sub
sub
es
push
xchg
xlat
out
adc
mov
xchg
popa
sub
popa
out
scas
jle
test
stc
daa
sub
and
mov
pop
ret
sbb
mov
push
pop
cmp
dec
jb
dec
ficomp
cs
sbb
arpl
fsub
add
nop
xor
or
and
leave
cs
ins
mov
sub
sub
neg
pop
or
outs
or
mov
(bad)
in
popa
xor
pop
jo
fwait
inc
and
imul
dec
shr
(bad)
(bad)
sti
and
pop
cmp
push
jp
sub
jne
cmp
adc
jmp
std
retf
add
sar
popa
outs
mov
pop
push
inc
cmp
or
push
sbb
or
pop
push
(bad)
dec
imul
push
mov
aam
sbb
fld
add
pop
das
mov
das
das
adc
outs
mov
out
xchg
add
enter
in
sub
mov
adc
xchg
int3
adc
fs
test
ins
bound
mov
pusha
fst
shr
jbe
cdq
xor
mov
scas
addr16
into
(bad)
daa
gs
inc
popa
sub
sub
ja
push
pop
jae
xchg
lea
imul
das
ins
or
or
mov
fnstsw
cli
push
xor
or
(bad)
stos
call
retf
in
inc
fcmovnu
mov
rcr
and
(bad)
sti
pop
je
push
popa
pusha
cmp
dec
or
jge
lahf
jmp
(bad)
ficomp
pop
jae
popa
aaa
stos
push
cmp
cmp
pop
push
and
add
daa
sti
jmp
cmc
cmp
sub
(bad)
fld
adc
outs
push
fsubr
(bad)
sub
retf
stos
and
test
mov
repnz
enter
out
push
cmp
mov
(bad)
cmp
sbb
repz
dec
ds
pop
mov
mov
inc
fsubr
dec
mov
adc
call
jecxz
push
jge
jp
push
and
sub
mov
call
call
or
or
outs
sub
xor
int3
out
xchg
mov
or
push
add
sub
sti
add
xor
arpl
ret
dec
mov
inc
pop
aad
shr
cs
test
or
nop
fnsave
rcr
or
mov
das
and
stc
push
js
stos
cs
or
inc
add
jg
sbb
scas
xor
jb
stos
iret
mov
aaa
adc
adc
aaa
sti
or
inc
mov
sbb
popf
dec
mov
cmp
add
mov
xchg
(bad)
dec
add
fs
mov
mov
(bad)
jp
aas
imul
fsubr
mov
out
shr
fist
push
sub
jmp
or
jns
and
adc
pop
or
mov
push
movs
or
pinsrw
aam
nop
sub
outs
pusha
mov
pop
adc
inc
cmp
popa
mov
movs
scas
jae
mov
mov
or
lods
into
push
lds
inc
ja
out
sahf
daa
and
sub
push
ret
ror
push
pop
repnz
fiadd
sar
loopne
sbb
add
push
jmp
test
adc
icebp
xlat
fnstenv
jmp
adc
cli
dec
push
xchg
jge
movs
aad
sahf
test
in
push
(bad)
ja
pop
mov
call
retf
call
lahf
daa
push
mov
idiv
js
(bad)
adc
pop
push
xchg
cs
js
add
xor
daa
ins
inc
cmp
jnp
out
adc
cmp
jle
(bad)
or
leave
adc
pop
test
in
or
adc
xor
inc
cld
imul
add
(bad)
pop
imul
cmp
lods
sbb
sbb
mov
fistp
or
adc
loopne
in
in
out
div
xchg
in
or
sbb
pop
mov
or
and
mov
in
adc
aam
fdivr
cmps
out
xor
dec
rcl
add
jbe
add
cmc
daa
push
dec
adc
aam
sbb
mov
inc
adc
bound
sub
cmp
repnz
(bad)
cld
xor
pop
imul
icebp
test
aam
loopne
js
dec
iret
or
adc
push
xor
stos
aad
inc
test
xchg
fs
and
js
aam
xchg
cmps
stos
mov
cs
lods
adc
sbb
fild
adc
inc
mov
adc
push
mov
imul
cdq
in
scas
sbb
push
mov
sbb
sub
jne
out
jne
arpl
xor
fsubr
loop
and
dec
std
push
jo
lods
pusha
xor
pop
or
div
fs
dec
aad
ss
jnp
dec
enter
adc
fisubr
fld
pop
cs
ja
pop
sbb
mov
dec
ins
mov
add
inc
pop
sub
dec
mov
sbb
dec
leave
mov
pop
aas
jmp
mov
mov
jl
mov
adc
push
icebp
dec
pusha
jmp
int
(bad)
nop
add
pop
pop
inc
or
rol
cld
retf
inc
fld
xchg
fs
sub
iret
stos
popf
xchg
fdivr
pop
mov
es
mov
push
inc
int
cmp
cwde
pop
pop
cmp
sahf
ins
lds
(bad)
mov
fcmovbe
push
lods
outs
and
inc
push
int
movs
jmp
not
or
in
xor
pop
xor
sub
push
sub
and
cmps
adc
or
and
ds
sub
repnz
popa
sub
sahf
mov
xchg
test
mov
xchg
call
push
sti
std
lods
and
sahf
or
jle
pop
xchg
icebp
cdq
add
shl
daa
popf
cld
ss
dec
push
test
test
and
jae
jg
pop
push
inc
jge
addr16
ins
pop
fsubr
mov
adc
inc
aas
inc
stos
adc
mov
in
pop
sub
and
shl
adc
or
dec
xchg
fcos
push
movs
mov
shr
stos
mov
(bad)
fcom
or
dec
mov
cmp
push
push
mov
fcmovnu
add
push
adc
push
ficom
ficom
pop
mov
push
xor
ins
in
cs
pop
cmc
in
(bad)
pop
push
std
movaps
dec
cld
xor
adc
inc
arpl
sub
fst
and
mov
stos
pop
xchg
cmps
xchg
jmp
fcom
and
add
fst
add
ret
cli
sub
dec
and
aad
mov
and
(bad)
mov
mov
jno
imul
push
loope
dec
cld
pusha
pop
sub
push
neg
ret
mov
xor
arpl
popa
and
shr
cli
or
mov
imul
das
dec
pop
xchg
outs
mov
xor
xor
sbb
add
mov
add
add
sbb
push
and
sub
stos
adc
fsub
dec
xchg
inc
xchg
cmp
cmps
mov
addr16
sbb
outs
xor
mov
sub
test
sbb
xlat
push
dec
or
(bad)
pusha
(bad)
in
pop
cmp
rcr
pop
(bad)
push
imul
or
fisttp
sbb
inc
lds
xor
mov
add
sbb
jo
pop
ins
and
inc
mov
(bad)
push
jp
and
xchg
dec
fld
xchg
cld
js
ret
inc
push
jbe
cld
push
mov
(bad)
pop
outs
ret
(bad)
fadd
(bad)
aam
or
mov
adc
jmp
xchg
fsubr
add
adc
cdq
jns
pop
jb
dec
les
test
test
scas
adc
mov
inc
ja
lods
sub
cmp
mov
mov
jnp
popa
sub
sub
nop
lahf
xchg
popa
test
and
lahf
sahf
(bad)
pop
ja
test
pop
and
mov
arpl
mov
sub
aam
stos
mov
xor
(bad)
mov
cs
in
icebp
ret
daa
aam
sti
out
xor
arpl
ja
xor
(bad)
or
lds
retf
inc
xlat
dec
mov
scas
adc
mov
rcl
imul
dec
(bad)
pusha
pop
sbb
xchg
or
fisubr
adc
sar
add
cmc
shl
lahf
sbb
jge
fcom
add
push
es
bound
and
loope
fcomp
xor
leave
out
imul
je
fidiv
or
in
sbb
xor
inc
sti
pop
sub
mov
shr
(bad)
jb
arpl
mov
lods
js
inc
dec
sbb
cmp
pmulhuw
sbb
pop
inc
jmp
and
mov
sbb
xchg
push
adc
das
add
xchg
and
add
les
add
mov
inc
std
or
or
psubw
aam
mov
ficom
mov
test
fimul
mov
fnstsw
or
mov
xor
dec
push
nop
add
imul
add
dec
shl
sbb
sub
push
xor
lods
sub
or
pop
popa
sub
aad
adc
cli
sub
inc
inc
retf
mul
xlat
repz
sbb
cpuid
sub
inc
stos
and
dec
cs
mov
aam
sar
data16
jmp
stos
pop
jle
or
inc
jp
adc
nop
add
push
sbb
and
mov
push
add
or
push
xchg
es
jbe
push
mov
add
pop
mov
lds
mov
xchg
das
ja
mov
outs
mov
aas
sub
jecxz
int3
clc
pop
aaa
push
lods
ja
or
lds
mov
jns
lods
sbb
dec
cmps
mov
pop
xchg
sub
(bad)
mov
stos
ficom
push
sub
ret
sub
std
pop
call
aas
adc
aas
sbb
aas
sub
fld
xchg
shl
fistp
or
sub
adc
in
xor
and
fwait
jecxz
mul
pusha
adc
dec
adc
or
aam
or
cs
adc
stc
inc
ret
sub
repz
mov
push
call
sub
fst
int3
int3
retf
pop
adc
lock
test
std
and
mov
leave
mov
or
sbb
xor
inc
js
pop
or
jmp
add
in
add
mov
pop
jno
in
inc
push
push
stos
cmovb
aam
and
repz
push
sbb
stos
sub
lea
mov
add
or
(bad)
cld
and
mov
jne
sub
xchg
pop
cmc
cwde
pop
ja
enter
sub
xchg
dec
mov
es
mov
int3
inc
jae
sub
xor
(bad)
adc
cmp
arpl
retf
test
sub
std
mov
pusha
sub
pop
pop
addr16
retf
icebp
test
mov
or
call
fstp
cdq
mov
cdq
inc
mov
xchg
js
jle
daa
mov
inc
mov
pop
icebp
retf
es
dec
in
mov
mov
mov
data16
jnp
pop
dec
add
sbb
nop
movs
xchg
test
dec
repnz
mov
sub
and
shl
mov
test
and
pop
arpl
pushf
mov
fild
inc
retf
sub
sbb
dec
cmp
or
dec
mul
in
call
test
mov
sub
xchg
sti
mov
jle
js
mul
mov
cmp
mov
jb
inc
lods
push
sub
sub
mov
aaa
test
add
inc
sub
push
jmp
clc
xchg
mov
icebp
push
stos
cmp
cmps
push
stos
xchg
push
add
dec
xchg
sbb
push
jbe
and
test
cld
ret
or
lods
and
push
mov
add
movs
and
(bad)
enter
and
push
sub
xchg
mov
sbb
das
sbb
and
adc
push
(bad)
cmp
fimul
mov
and
xor
sbb
dec
stos
pop
dec
rol
push
mov
mov
xchg
rol
cmp
xchg
inc
stos
add
push
mov
push
pop
imul
lea
push
xchg
test
les
mov
mov
jg
sbb
inc
jle
retf
dec
fmul
loop
daa
sar
add
ss
cwde
arpl
or
loop
sbb
in
mov
cmp
ins
and
inc
out
(bad)
std
sub
sahf
daa
sub
adc
loopne
lea
aam
fld
xlat
mov
or
push
mov
or
pushf
repz
ins
cmp
jg
push
adc
or
and
jmp
xchg
xor
fs
inc
push
cmp
push
pop
das
adc
or
xlat
or
mov
das
pop
aaa
pop
aas
mov
pusha
and
rol
aaa
arpl
sub
dec
loope
ins
mov
test
dec
xchg
in
inc
scas
sti
add
movntq
cmps
and
dec
icebp
sbb
sub
imul
adc
push
push
jnp
lock
daa
sbb
sub
(bad)
cwde
sti
test
lods
adc
lods
shr
jbe
push
popa
adc
jle
test
adc
sub
or
mov
push
jg
push
cmps
xlat
cwde
or
sub
sub
pop
cmp
cmp
add
mov
or
sbb
xor
add
inc
out
mov
dec
inc
fisubr
leave
jle
das
aaa
push
pushf
add
nop
shl
adc
sbb
and
pop
pop
push
or
dec
dec
pop
inc
fs
and
lock
add
dec
stc
pop
add
(bad)
nop
mov
aaa
push
lds
fcmovnbe
fs
inc
cmp
pop
(bad)
cli
xchg
outs
cmp
sbb
ret
inc
(bad)
mov
call
or
mov
and
cmps
pusha
stc
cs
call
pop
dec
push
jle
cli
pop
add
scas
ins
repnz
push
(bad)
push
push
ret
jmp
add
enter
jp
xchg
jp
popa
or
and
es
mov
inc
imul
daa
enter
mov
push
(bad)
call
dec
mov
fidiv
mov
(bad)
mov
outs
mov
test
mov
sub
jb
(bad)
fidiv
popa
push
popa
fwait
mov
adc
add
shr
adc
fstp
cwde
jecxz
sti
pop
add
aaa
stos
(bad)
(bad)
in
inc
mov
gs
in
gs
stos
push
dec
shl
test
cmp
jns
adc
(bad)
out
jg
and
(bad)
pushf
bnd
add
rol
fild
in
lds
std
(bad)
mov
push
(bad)
jmp
push
(bad)
test
add
adc
ret
and
pop
inc
xor
stc
mov
pop
dec
ss
mov
(bad)
jg
lds
ss
mov
add
mov
add
ret
sub
mov
or
aad
rcr
out
rol
add
jb
out
test
loope
sbb
jmp
mov
addr16
inc
mov
sbb
(bad)
jg
std
sbb
pop
push
sbb
hlt
inc
mov
dec
gs
and
xchg
int
add
hlt
(bad)
popf
jne
nop
dec
jmp
outs
icebp
mov
pusha
repz
repz
sub
jmp
int3
cmp
sti
sar
sti
(bad)
mov
jmp
fcmovu
cmp
pusha
fnsave
(bad)
(bad)
ret
add
(bad)
outs
clc
or
and
pusha
das
or
ret
jb
(bad)
lods
push
leave
(bad)
das
xchg
mov
xor
enter
es
clc
pop
cmc
jmp
jl
and
int
mov
loop
and
in
repnz
push
cmp
and
cmp
xor
not
jbe
leave
jge
pop
mov
inc
jp
(bad)
pop
lds
enter
push
and
push
jmp
shl
inc
jns
in
and
int
pop
fwait
stos
out
cld
gs
ja
sar
cmp
mov
push
pusha
lahf
sahf
(bad)
in
fisubr
or
pop
retf
movq
les
inc
fisttp
shl
lods
adc
inc
out
mov
add
cli
xchg
icebp
inc
jmp
jmp
inc
sbb
jae
or
push
sar
cld
inc
xor
lahf
(bad)
add
sbb
hlt
outs
ss
xlat
pushf
(bad)
sahf
(bad)
(bad)
(bad)
mov
cmp
mov
and
cmps
mov
popf
sbb
xchg
fwait
adc
add
jmp
cmp
pop
(bad)
jmp
loopne
pop
mov
int3
sti
dec
xor
ja
push
jo
push
add
mov
(bad)
out
popf
retf
icebp
stos
cmps
pop
mov
sahf
int
stc
jb
xchg
pop
hlt
xchg
cmps
pop
inc
fs
or
test
gs
icebp
imul
push
stc
(bad)
(bad)
xor
and
stc
pop
and
cmp
mov
stc
outs
mov
cmp
push
outs
enter
pusha
jnp
push
jp
pop
mov
xchg
(bad)
cmp
or
inc
jecxz
push
sbb
test
mov
(bad)
pop
loop
add
(bad)
dec
in
add
ins
inc
mov
iret
pop
mov
enter
arpl
sahf
lods
xchg
fidiv
pop
push
(bad)
lahf
jl
(bad)
(bad)
test
mov
(bad)
xor
repz
repnz
pop
(bad)
jmp
mov
jp
iret
sbb
push
mov
mov
inc
sbb
(bad)
jmp
(bad)
in
pusha
rcl
mov
jb
jp
fild
(bad)
cmc
iret
sub
mov
mov
lahf
mov
mov
or
and
mov
repnz
xor
mov
das
ins
cld
out
out
ret
mov
add
out
pop
cli
mov
clc
clc
jo
xor
xchg
(bad)
jmp
or
jb
jmp
sbb
mov
pop
jmp
stc
cmc
repnz
daa
mov
mov
cmp
xchg
(bad)
das
sbb
push
int3
arpl
cmp
enter
test
jp
add
jle
fcmovnb
int
adc
and
pop
dec
pusha
and
jmp
mov
and
dec
sub
and
aas
inc
jp
add
iret
push
mov
mov
push
loopne
fcomi
or
(bad)
jp
shr
cmc
cwde
inc
ja
outs
cld
mov
shl
(bad)
xchg
jns
in
mov
add
push
mov
and
(bad)
imul
xchg
mov
cmp
test
(bad)
or
sbb
mov
and
inc
gs
fwait
xlat
dec
jmp
jmp
call
pop
(bad)
cmp
(bad)
addr16
sbb
out
mov
jo
inc
cmp
call
std
add
lds
sub
(bad)
jmp
pop
mov
in
enter
jmp
in
pop
add
or
mov
adc
out
mov
pop
ficom
adc
aad
cmp
test
(bad)
(bad)
in
jge
jmp
mov
xor
mov
cmp
adc
movs
push
inc
sub
imul
add
xchg
push
add
push
(bad)
jbe
jmp
shl
jb
lods
pop
js
(bad)
scas
repz
daa
daa
cmc
test
jmp
es
inc
mov
or
std
inc
pusha
ins
push
test
and
call
enter
rcl
mov
das
out
dec
std
dec
xor
push
fcmovnb
and
xor
or
lock
pop
pop
std
fbld
fs
in
add
(bad)
imul
mov
xchg
pop
ss
call
xchg
enter
xchg
sbb
(bad)
pop
(bad)
in
mov
mov
lds
(bad)
xor
and
aaa
das
xor
adc
cli
xor
dec
int
ins
add
mov
ret
cmc
imul
jge
call
sbb
ret
inc
cmp
add
cmp
daa
mov
iret
popa
sub
adc
outs
lea
lahf
pusha
push
jns
xor
sub
pop
cs
shl
enter
add
fs
or
adc
jl
push
aad
ja
clc
(bad)
in
sahf
ins
add
xor
js
mov
arpl
ficomp
and
mov
xor
stc
add
add
push
inc
dec
es
mov
push
mov
jp
fistp
mov
push
dec
fs
mov
pop
jae
mov
pop
(bad)
sub
xchg
sbb
dec
mov
push
arpl
mov
mov
aam
pop
push
cdq
sbb
mov
cmp
repz
cmp
leave
ret
push
jmp
and
inc
in
jno
lods
shl
adc
in
test
ret
mov
mov
mov
js
push
inc
mov
pop
mov
or
dec
shr
ss
jmp
pop
sbb
sub
int
out
jnp
pop
push
cmp
mov
loope
sbb
mov
and
sbb
dec
jmp
enter
add
sbb
stc
adc
repz
stc
xchg
aam
xchg
aam
cs
fisub
xor
dec
das
aas
pop
inc
inc
in
aam
aam
inc
xchg
aam
sbb
nop
aam
cdq
mov
in
jne
mov
aam
mov
and
aaa
mov
mov
test
push
addr16
push
cwde
in
hlt
pop
lock
ja
jle
mov
out
mov
add
xchg
mov
dec
sbb
and
shl
fisubr
push
sub
add
dec
daa
stc
imul
jge
xor
jmp
pop
(bad)
fnstsw
sub
xchg
sbb
psubsb
xor
enter
test
jbe
sub
and
cmp
xchg
fwait
push
xor
jle
sub
aas
xor
lock
cli
inc
mov
xor
fistp
add
mov
sahf
xor
mov
pop
lods
int3
xor
mov
repnz
adc
cmp
(bad)
scas
and
arpl
xchg
xor
fist
adc
xor
mov
mov
pop
into
add
into
push
aam
push
inc
push
and
(bad)
push
aam
pop
push
lods
mov
push
pop
dec
stc
ss
call
mov
pop
or
icebp
ins
fst
js
test
mov
imul
cmp
mov
sub
and
xchg
mov
cmp
in
fndisi(8087
(bad)
jg
stos
inc
push
pop
xor
xchg
jge
(bad)
or
lock
lods
(bad)
dec
pushf
rcl
in
push
mov
fild
call
mov
mov
mov
adc
fstp
dec
test
ret
cld
inc
cmp
sub
test
or
jns
ret
fwait
arpl
push
xchg
mov
mov
cdq
cmp
int
push
(bad)
mov
cli
call
ret
dec
std
and
out
out
push
aam
and
daa
xchg
inc
nop
stos
sub
mov
adc
stc
push
arpl
test
retf
das
mov
xlat
push
repnz
add
shl
les
mov
mov
loop
imul
mov
cmp
or
mov
fs
das
inc
add
inc
test
test
test
popa
in
aam
jmp
jns
mov
shr
ret
aam
leave
ss
lea
dec
mov
enter
and
repz
repnz
cmps
mov
and
fwait
mov
sbb
mov
and
and
stc
rcl
mov
sar
aam
mov
or
rcl
fild
iret
xchg
rcl
and
cmp
pop
inc
cmps
in
aam
in
xchg
aam
sbb
pop
inc
mov
push
mov
gs
jns
aam
inc
iret
dec
push
in
xchg
out
ret
lock
jno
int3
aam
daa
fstp
lods
(bad)
xchg
push
sbb
mov
mov
sbb
mov
ja
aam
and
or
inc
adc
popa
and
icebp
into
cmp
push
scas
dec
and
push
les
mov
jno
(bad)
fild
bound
adc
retf
mov
dec
sbb
mov
stc
dec
cmp
in
xlat
sbb
sub
and
pop
pop
outs
jmp
repz
test
jmp
jp
cld
inc
add
call
ret
lds
cs
ret
sub
call
outs
jl
stos
inc
stos
jmp
or
call
inc
mov
push
add
push
push
sub
push
pop
call
pop
jge
jmp
clc
lods
push
sbb
aad
stc
inc
or
push
or
mov
stc
call
cs
enter
in
(bad)
in
outs
hlt
jg
into
test
mov
repz
fiadd
(bad)
idiv
pop
mov
mov
sahf
test
stc
pop
aas
push
aaa
jp
mov
sahf
rol
aaa
cli
arpl
add
cmp
ret
enter
sub
(bad)
(bad)
enter
xor
adc
push
lods
rol
sahf
or
call
jnp
pop
js
push
rcl
repz
pusha
aad
jb
push
cmp
cmp
pop
sub
int
adc
in
and
outs
das
fsubr
fstp
(bad)
das
ins
pop
test
fist
pusha
(bad)
scas
popf
dec
add
scas
cmc
cmp
jb
sar
mov
arpl
push
adc
(bad)
ja
out
push
pop
js
(bad)
adc
call
xchg
sub
pop
push
int
(bad)
fstp
sbb
sete
das
(bad)
gs
ins
push
shr
push
iret
pusha
push
pop
ret
cs
(bad)
mov
sub
adc
mov
in
sti
dec
adc
dec
jns
(bad)
fisubr
mov
sub
scas
int
or
mov
dec
test
push
dec
add
pop
pop
pop
jmp
jne
pop
jmp
jmp
cmp
jmp
inc
and
xor
fwait
cli
fbstp
enter
inc
pushf
dec
sbb
pop
jl
pop
jo
xlat
jl
cmp
(bad)
gs
xchg
sub
cld
cmc
gs
daa
sub
mov
add
scas
add
jmp
(bad)
scas
jle
pop
cwde
push
psubw
popf
call
loope
adc
adc
sub
mov
test
mov
mov
pusha
fidivr
add
xchg
(bad)
mov
mov
ret
sbb
dec
syscall
in
enter
dec
pusha
cli
push
(bad)
dec
xchg
sti
sbb
inc
clc
out
and
cld
out
mov
push
inc
(bad)
pop
gs
jae
cli
dec
clc
and
int
add
movzx
addr16
movs
inc
pop
fild
std
pop
xor
fucompp
mov
lods
cmp
sub
das
jnp
adc
(bad)
out
not
outs
xor
in
or
sahf
push
mov
out
(bad)
icebp
jp
aad
sahf
mov
add
(bad)
jo
std
mov
sub
add
vmovaps
or
sbb
fld
ret
inc
jnp
lods
ret
aad
add
stos
in
mov
and
(bad)
push
sub
sub
jmp
arpl
fadd
ins
sbb
xor
aad
cmc
clc
sahf
pop
mov
inc
inc
pusha
xchg
xor
ret
pop
inc
mov
inc
inc
sbb
stc
and
mov
mov
addr16
or
out
(bad)
sbb
jmp
stos
std
inc
nop
mov
sub
addr16
in
and
jns
pushf
retf
jg
outs
mov
addr16
mov
mov
add
inc
call
jo
js
arpl
out
scas
ret
sbb
sahf
outs
add
pop
enter
dec
push
test
jl
aam
inc
pushf
dec
sbb
dec
add
jl
sub
sub
std
bnd
xor
push
jo
push
mov
or
jns
add
lds
mov
loopne
pop
cs
pusha
pop
je
cmp
add
addr16
push
or
jno
nop
pop
js
ror
fdivr
in
inc
mov
call
(bad)
ss
cmp
call
addr16
imul
xchg
dec
in
dec
inc
dec
and
lods
adc
cmp
mov
mov
xlat
daa
out
aam
inc
mov
mov
adc
test
sub
repnz
xlat
repnz
es
push
clc
sub
retf
fmul
aam
sub
cmp
aam
retf
lea
jbe
sub
loop
rcr
jmp
sub
adc
and
retf
enter
pop
lea
and
not
push
aam
test
pop
call
sbb
aam
loop
in
in
fwait
jnp
(bad)
aam
and
call
inc
inc
ja
fwait
aam
cmp
int3
and
mov
stc
cld
rcr
mov
pop
xor
inc
mov
retf
xchg
fcmovnbe
inc
jle
bound
cmps
mov
getsec
(bad)
mov
rcr
cmp
inc
adc
xor
inc
in
sar
movs
aaa
jle
xchg
dec
aam
sub
je
sbb
iret
out
adc
dec
push
cmp
aaa
and
xchg
movs
pop
out
xchg
and
out
and
jl
in
movs
call
fs
and
mov
pushf
out
popa
and
pop
test
xor
cs
and
fild
dec
call
ss
sahf
sbb
and
and
aam
int3
pusha
mov
xlat
jnp
sbb
repz
cmps
ja
xchg
cwde
daa
test
fstp
inc
in
or
dec
or
ds
xor
leave
cmps
fcom
sbb
ds
je
xchg
and
mov
adc
inc
leave
and
and
xlat
ins
fmul
aaa
mov
add
jg
aaa
adc
and
adc
dec
cdq
das
imul
loop
ds
(bad)
mov
adc
adc
sub
(bad)
scas
jae
push
or
je
pushf
or
pop
dec
and
cmp
push
das
fild
shl
push
cmp
ds
push
jmp
scas
mov
mov
aas
pop
stc
(bad)
inc
in
scas
das
mov
or
jbe
jno
pop
jecxz
mov
gs
mul
popa
sbb
pop
outs
mov
js
fnsave
(bad)
ja
mov
sbb
cmp
xchg
sbb
fisub
mov
in
ds
pusha
jne
mov
dec
push
arpl
mov
stc
sbb
cs
add
scas
dec
in
dec
call
aam
inc
jb
mov
sbb
sub
mov
aam
fwait
in
popa
adc
in
test
leave
mov
retf
fs
fsub
xchg
pop
loop
inc
jge
adc
add
mov
jno
fsub
dec
dec
pushf
loope
fild
out
lds
push
lods
or
in
add
and
fsub
sub
scas
mov
jecxz
push
outs
push
mov
les
add
daa
data16
ss
sub
jp
call
test
xlat
pop
mov
fisub
pop
or
cmp
mov
stc
mov
adc
jbe
dec
mov
xchg
in
mov
xchg
jbe
js
and
xor
and
out
xchg
arpl
cli
icebp
fs
dec
mov
push
cld
inc
push
xchg
arpl
add
adc
sub
pop
pop
out
pop
add
xchg
aam
fbld
sub
aam
adc
(bad)
rol
enter
jge
mov
arpl
cld
repnz
pusha
lock
adc
cli
pop
ss
call
mov
repnz
cmp
es
adc
cmp
sbb
jle
loop
aam
stos
xchg
inc
mov
aas
fstp
jmp
and
jmp
and
ds
xchg
mov
sahf
shl
cs
ins
mov
and
cmp
lea
ror
mov
ror
adc
mov
pop
mov
es
mov
loop
pop
mov
push
jae
or
repz
fld
dec
out
mov
sar
in
mov
in
aam
mov
push
movs
test
pop
mov
pop
in
and
test
mov
imul
mov
jg
xor
pop
in
jg
push
fisttp
fld
and
call
out
xor
jae
xor
aam
pop
push
repz
cmp
xor
inc
mov
daa
pop
push
data16
in
lea
popf
adc
xlat
std
xchg
xchg
sub
sub
mov
ss
imul
cmp
rol
or
mov
cmp
loopne
jg
imul
mov
jb
mov
retf
(bad)
iret
addr16
in
cmp
or
iret
mov
xchg
cli
not
ins
inc
iret
dec
sub
jnp
inc
mov
or
ror
xor
outs
popa
jb
push
jle
cmp
pop
jle
cdq
dec
icebp
sbb
scas
xchg
mov
loop
mov
and
jo
in
(bad)
aam
sub
sbb
pop
test
and
adc
daa
inc
sahf
xchg
xchg
das
(bad)
in
mov
aam
ret
sub
ret
ins
adc
ret
inc
xchg
add
sbb
(bad)
cmp
xchg
ret
test
push
and
stos
in
cs
and
xchg
sub
stos
es
cmps
sti
je
cld
inc
jl
inc
cmp
prefetcht2
pop
add
or
jno
(bad)
in
mov
out
not
sbb
int3
xor
sar
cli
retf
loopne
repz
and
aam
sbb
test
inc
push
pop
sub
fstp
xchg
sahf
adc
test
cmp
gs
cmp
leave
int3
sbb
sub
fstp
sub
pop
test
push
scas
or
repz
in
or
and
scas
aaa
xchg
out
retf
retf
jl
push
in
in
retf
push
stos
ror
dec
sbb
repz
es
scas
(bad)
call
cmp
hlt
iret
lahf
enter
mov
aaa
and
stc
ret
sub
and
rcl
adc
and
pshufw
jecxz
aam
xchg
call
retf
arpl
inc
das
and
pop
jb
sahf
xchg
sub
sti
and
jae
sbb
push
(bad)
aam
clc
or
test
movs
idiv
shrd
call
lods
loopne
push
loope
xor
mov
movs
cmp
pop
push
and
inc
(bad)
or
xlat
cmp
stos
fwait
dec
push
xor
mov
mov
daa
fs
not
arpl
movs
jb
ds
loop
outs
(bad)
mov
adc
mov
and
jns
sbb
sbb
jae
add
ins
pop
pushf
push
cdq
adc
add
pop
xor
lds
rcl
pop
dec
call
test
sahf
dec
sbb
dec
and
xor
cmps
push
fist
adc
sbb
mov
push
leave
add
movs
jmp
dec
push
ja
push
or
outs
nop
pop
xchg
cmp
push
fst
ins
pushf
mov
push
pop
add
outs
mov
inc
and
sbb
or
adc
pop
add
retf
sub
test
and
and
and
sub
mov
fisttp
hlt
inc
or
mov
loope
mov
dec
imul
pop
push
dec
popf
pushf
lods
jnp
ins
das
mov
lahf
jl
mov
int3
int
and
and
call
pop
and
xchg
sar
sub
dec
push
sub
xor
cmp
xchg
out
and
inc
pop
sub
inc
cmps
shl
or
inc
sti
mov
ret
push
sbb
or
pop
mul
mov
cmp
cs
mov
cs
adc
jb
inc
mov
jno
iret
add
inc
and
xchg
adc
jae
and
call
stos
adc
dec
push
lods
stos
fsubr
or
sbb
(bad)
cmps
sbb
stc
mov
jo
jnp
arpl
cmp
jae
pop
pop
and
popa
and
sub
das
adc
or
sub
inc
mov
mov
add
fcmovnu
push
cmp
jns
imul
inc
ficom
inc
in
or
jbe
mov
movs
in
cld
daa
cmps
cwde
lods
int
es
mov
(bad)
push
outs
sbb
call
loop
loope
movs
retf
pop
fs
outs
call
es
mov
mov
inc
cmps
idiv
test
mov
mov
addr16
cmp
pop
cs
pop
pop
bound
sub
mov
loope
dec
push
lods
int
sbb
test
das
cmp
dec
xchg
arpl
jle
out
mov
ds
ins
add
bound
outs
sar
mov
ja
xor
mov
not
cld
outs
add
jno
mov
loope
cs
loope
data16
popf
lea
jecxz
jns
ret
sahf
test
dec
sahf
mov
pop
ds
xor
mov
or
jns
xor
or
xchg
aam
add
cdq
jns
aam
test
jae
fs
dec
and
mov
add
hlt
sbb
push
push
mov
imul
inc
add
lods
(bad)
xlat
sub
or
xor
popa
jae
inc
jl
aas
xchg
mov
jae
or
ds
jbe
iret
add
icebp
pop
arpl
loopne
outs
and
jae
out
rdmsr
ss
dec
cmps
jg
dec
jl
(bad)
adc
shl
xchg
cmp
inc
push
mov
or
int3
pop
pop
inc
mov
loop
and
stos
call
jmp
mov
ins
and
push
je
fidiv
pushf
ins
outs
sub
push
inc
les
pushf
add
and
pushf
xor
pushf
adc
pushf
cmp
in
jb
cdq
call
cs
sbb
cdq
jmp
jmp
jge
div
mov
daa
jb
mov
xor
hlt
sbb
mov
jnp
cwde
inc
jne
push
enter
fcmovnu
cmp
jle
push
stos
xchg
push
pop
cmp
dec
fcomip
in
jg
xor
cmp
cwde
cld
and
aaa
mov
cmp
fst
push
sbb
mov
and
nop
pop
xchg
jp
fs
std
or
sti
sub
sbb
imul
int
push
ja
sar
movs
movs
shr
mov
loope
cli
cmc
repnz
push
mov
mul
cli
mov
nop
mov
pop
inc
or
xor
ja
cmp
mov
mov
pop
cmp
test
cmp
(bad)
enter
cmp
or
sahf
iret
xchg
out
loope
xlat
stos
rol
out
mov
imul
mov
rcl
repnz
aas
sub
xor
arpl
xlat
addr16
call
call
jl
fdiv
ins
iret
leave
call
add
ss
pop
xchg
sub
jo
and
repz
sbb
inc
xchg
or
or
and
popf
and
cmp
lock
faddp
push
in
xor
and
or
dec
retf
out
test
(bad)
push
cwde
pop
arpl
or
add
mov
jl
pop
xchg
daa
ret
out
push
rcl
cmp
pop
and
in
xchg
inc
outs
mul
jno
add
mov
(bad)
push
push
sub
sub
into
sub
jae
retf
adc
sub
pop
mov
jb
inc
or
fadd
add
leave
in
and
es
pusha
push
mov
mov
jl
fmul
pop
push
jl
cld
movs
popa
out
loop
cs
pop
stc
inc
cmovo
sub
retf
push
rcr
ins
cmp
stos
(bad)
fisubr
inc
adc
out
adc
jae
pop
test
sbb
xchg
cmp
adc
or
xchg
pushf
das
aas
lock
and
pusha
shr
push
addr16
mov
push
pusha
cmp
cmps
fst
fdivrp
jbe
cmp
jl
inc
cmps
jbe
xor
push
fninit
mov
fstp
out
add
pop
pop
jb
into
out
or
cmp
arpl
cwde
jecxz
xchg
out
leave
leave
mov
addr16
neg
mov
imul
mov
fld
leave
das
gs
call
xchg
sub
jno
stos
or
stc
jno
dec
in
xor
adc
and
retf
std
add
jb
pop
mov
adc
add
mov
cmc
stos
loope
stc
repnz
ss
stc
int
test
sbb
into
mov
push
ss
mov
jecxz
mov
mov
and
xchg
pop
cmp
in
fmul
add
inc
mov
xor
dec
test
fsubr
sub
div
rcr
mov
arpl
in
dec
mov
or
aaa
arpl
imul
(bad)
aad
mov
cmp
mov
or
ins
ins
adc
push
(bad)
mov
pop
add
adc
sub
push
aam
add
int
push
mov
jle
stos
dec
sahf
std
pop
(bad)
adc
mov
das
popa
sti
repz
mov
xor
and
inc
inc
lock
das
or
jae
push
lock
int
mov
sbb
xor
cmp
or
pop
cmp
daa
sti
pop
cmp
cmp
sub
xchg
or
in
mov
sbb
push
sbb
lock
lods
and
mov
mov
stc
iret
(bad)
or
xchg
and
(bad)
pop
out
aaa
(bad)
out
das
mov
sbb
mov
cmp
sub
(bad)
int
ds
das
add
jl
ja
dec
in
repnz
(bad)
or
cmps
mov
ja
lahf
pop
repz
and
imul
inc
fwait
aad
fstp
loope
push
cmp
int3
cmp
int3
push
cmp
(bad)
(bad)
(bad)
mov
cmp
sub
xchg
add
cmp
sub
xchg
ja
cmp
pusha
cmp
es
push
(bad)
call
push
jns
fild
mov
xchg
lds
(bad)
in
(bad)
(bad)
jp
(bad)
mov
fwait
xchg
jl
push
call
ja
cmp
cs
sbb
mov
in
dec
mov
inc
cwde
jmp
mov
cmc
or
xor
icebp
outs
mov
inc
test
out
push
mov
jmp
(bad)
(bad)
(bad)
dec
add
pusha
sbb
pop
pushf
mov
out
test
add
xchg
inc
pushf
and
xchg
(bad)
(bad)
jmp
(bad)
adc
jl
sti
inc
pop
rol
xchg
shr
stos
ret
(bad)
(bad)
jmp
mov
mov
mov
inc
mov
sbb
out
out
out
or
fs
mov
out
nop
jmp
xchg
aad
mov
jl
inc
add
dec
jnp
movs
and
(bad)
dec
xor
(bad)
adc
jns
mov
mov
sbb
ins
icebp
jg
jmp
push
pop
jmp
adc
(bad)
ret
cmps
retf
icebp
add
sub
test
call
adc
test
in
jle
es
push
adc
das
stos
daa
das
xchg
adc
and
jne
or
xchg
adc
and
das
cmp
div
stos
or
test
sbb
push
push
pop
sub
jbe
fstp
fld
daa
add
arpl
repz
in
mov
jmp
sbb
dec
outs
adc
mov
scas
adc
push
shr
push
and
mov
sub
inc
icebp
pop
sub
lods
(bad)
adc
leave
pop
sbb
lods
or
or
sub
sub
adc
outs
pop
aam
fwait
stc
inc
adc
out
out
sbb
xlat
adc
push
jnp
or
xlat
daa
cld
or
sub
mov
popa
sub
jae
mov
stos
ss
jne
cmc
push
xor
push
aas
mov
xchg
je
arpl
stos
sbb
adc
push
adc
push
mov
inc
neg
pop
pop
jmp
call
out
xchg
pop
repz
(bad)
mov
xchg
inc
jmp
std
xor
sar
xor
sbb
scas
test
nop
in
and
pop
adc
pop
mov
lea
sar
inc
and
std
int
and
pop
mov
sub
lds
pop
add
sti
(bad)
in
leave
add
sti
jmp
in
cmp
push
nop
addr16
fisttp
cmp
sbb
daa
aas
stos
push
jmp
cwde
pop
adc
xchg
ins
pop
popa
or
loope
ret
add
jno
repz
xlat
xchg
mov
push
adc
add
inc
out
and
xlat
mov
sub
loop
popa
push
jecxz
cmp
pop
icebp
mov
mov
inc
test
lds
xchg
iret
inc
push
in
pushf
mov
mov
mov
inc
pop
stos
and
ret
mov
addr16
dec
pusha
pop
mov
fmul
jmp
mov
add
inc
das
or
add
sub
jg
jnp
xor
inc
mov
inc
aas
es
int
mov
and
or
movs
shl
in
mov
jae
leave
pop
paddsb
dec
repnz
xor
xor
ret
or
lahf
push
mov
push
jmp
jge
and
in
cmp
sub
mov
and
aas
shl
fs
jae
push
adc
in
pop
test
imul
and
cmc
adc
ret
repz
test
push
mov
ss
pop
sub
(bad)
cmp
mov
jns
xor
fwait
adc
xchg
aad
sbb
int3
push
push
xchg
push
repnz
xchg
push
daa
arpl
scas
pop
psllw
jle
aam
inc
xchg
repz
push
ins
call
dec
aam
pop
or
and
into
jbe
in
dec
mov
pop
hlt
cmp
stc
rol
cld
aam
cmc
sbb
jmp
sub
popf
ret
(bad)
xchg
stc
add
sub
dec
pop
inc
outs
mov
mov
(bad)
sub
out
inc
(bad)
aam
mov
in
fs
jnp
popf
shl
cs
jl
or
scas
lods
inc
clc
mov
mov
cs
dec
add
ins
ja
mov
add
add
add
inc
mov
pop
outs
push
mov
add
ror
lock
mov
push
push
clc
sub
cmp
aam
loopne
pushf
inc
and
add
cwde
cdq
pop
es
xor
pusha
push
jg
cld
pop
stc
xchg
jl
mov
leave
or
and
loopne
hlt
add
sbb
sub
stos
add
adc
sub
sbb
fld
adc
repz
test
aam
jmp
pop
jg
rsm
sbb
aam
fwait
cmp
dec
dec
push
sti
leave
addr16
add
xchg
adc
xor
jnp
icebp
cmp
ds
push
lock
mov
(bad)
stos
loop
sub
adc
stc
dec
mov
shl
push
ins
jns
jge
jnp
stos
xchg
cld
mov
test
pop
xchg
mov
nop
inc
xor
rcl
icebp
cmps
arpl
dec
dec
and
or
inc
or
jb
mov
xchg
xchg
xor
pop
scas
push
repz
mov
sub
in
(bad)
dec
sub
xchg
xchg
jle
sub
(bad)
fcomp
sub
push
sub
sub
mov
(bad)
stc
and
adc
(bad)
call
daa
mov
xchg
sahf
and
sub
jb
daa
cmp
icebp
or
repnz
in
jnp
jp
out
add
aam
adc
xor
add
pop
movs
dec
sti
push
aaa
push
aam
mov
dec
ins
mov
mov
cmp
jg
fsub
ds
popa
adc
lods
aam
cmp
lea
add
sub
pusha
push
daa
test
or
add
outs
pop
sub
lea
add
imul
out
or
mov
mov
push
push
bnd
mov
outs
lods
inc
int
mov
pop
out
pop
and
daa
xchg
popa
adc
or
(bad)
test
int
push
jle
push
retf
in
retf
mov
push
stc
jl
jmp
shr
fcmovne
adc
imul
mov
test
mov
int3
adc
mov
pop
sahf
xchg
aas
mov
repnz
pop
repnz
lahf
sbb
push
jbe
mov
mov
and
pushf
nop
iret
push
push
adc
(bad)
jns
push
sub
jl
bound
test
sub
mov
(bad)
jb
push
pop
xchg
jl
xchg
scas
scas
lock
pusha
or
popf
dec
and
(bad)
mov
sbb
and
das
xchg
aam
jno
fiadd
cmp
cld
imul
dec
loopne
jle
cld
and
inc
in
ror
push
popf
pop
pushf
sar
into
js
xchg
mov
int
arpl
nop
cwde
stos
out
pop
aam
and
and
fisubr
xchg
dec
and
in
push
mov
xor
add
(bad)
cs
xchg
js
sti
fcomp
pop
shl
sub
xchg
mov
adc
out
fwait
mov
inc
sub
test
mov
je
sbb
or
xchg
jg
dec
hlt
pop
jno
imul
test
sbb
jbe
std
dec
adc
(bad)
sub
or
pop
cmp
add
iret
mul
das
mov
scas
and
in
fs
jae
aad
loop
xchg
adc
push
mov
mov
xchg
sahf
sbb
fsubr
scas
loopne
iret
fst
xchg
out
aaa
and
mov
and
pop
mov
outs
fcomp
cmp
cdq
mov
xor
xor
push
or
and
xchg
(bad)
and
cmp
mov
das
test
sub
scas
xchg
cwde
pop
aaa
rcr
and
rcr
xchg
bound
lock
lods
xchg
daa
add
dec
or
(bad)
cld
nop
pop
mov
shr
ja
lds
call
call
mov
fwait
cs
push
and
xchg
mov
shl
sub
mov
in
sub
xchg
xor
pop
push
stc
inc
sbb
jae
inc
pop
and
pop
lds
pop
sub
test
jle
pop
mov
inc
sub
imul
fist
(bad)
push
mov
ds
adc
lods
cmc
ror
out
push
shr
dec
push
aas
and
dec
xchg
int
pop
pop
dec
sub
cs
fs
(bad)
xor
cmps
cmps
xchg
mov
cmps
lea
imul
jo
in
push
add
pop
in
cmp
pop
xchg
add
sbb
sbb
push
jecxz
mov
add
sub
pop
xor
or
mov
mov
inc
arpl
add
xlat
push
push
adc
sbb
addr16
fldcw
dec
cs
mov
sub
repnz
jb
call
push
push
(bad)
adc
pop
pop
addr16
mov
sbb
cmps
cmps
cmp
mov
cmp
ins
cs
out
pop
add
cdq
mul
xchg
repnz
and
push
cmp
jns
xchg
push
hlt
enter
sbb
mov
dec
push
lods
das
mov
rcl
xchg
js
or
sub
pop
or
sbb
in
pop
popa
es
and
stos
dec
push
fsincos
cli
in
or
test
stos
sub
fs
and
pop
mov
pushf
add
add
shl
pop
mov
mov
add
daa
and
and
pop
repnz
hlt
inc
outs
xchg
aam
jmp
and
(bad)
and
nop
jecxz
sahf
xchg
imul
pop
rol
ss
ins
(bad)
out
movs
mov
add
inc
sbb
mov
sub
leave
(bad)
mov
mov
sub
das
push
mov
jmp
ss
cmp
lds
scas
add
cmp
mov
pop
icebp
outs
stc
psubq
icebp
int
outs
adc
out
inc
pop
inc
xchg
sbb
ja
les
bswap
jl
stos
enter
add
ds
sahf
mov
and
mov
pop
jle
outs
rcr
bnd
mov
adc
add
(bad)
mov
stos
ficomp
push
pop
in
mov
pop
movs
mov
test
jae
add
sub
rcl
out
jge
pop
imul
into
mov
mov
ins
retf
cmps
mov
(bad)
(bad)
(bad)
jmp
test
out
mov
dec
cmps
pop
and
jno
sbb
push
popf
xor
jg
mov
jnp
fild
hlt
dec
outs
adc
les
jmp
xor
or
jmp
cld
call
cmp
gs
call
enter
and
(bad)
(bad)
(bad)
inc
sahf
shr
int
call
cmc
push
sbb
inc
fs
repz
sub
jmp
mov
jo
mov
xor
cmp
addr16
outs
(bad)
(bad)
(bad)
jmp
sbb
rcl
shl
xchg
push
out
sub
pop
mov
cmp
push
in
leave
mov
(bad)
jg
cld
pop
scas
dec
movs
jecxz
adc
xor
ficom
mov
or
imul
jbe
aas
pop
mov
xor
(bad)
inc
int
punpcklwd
add
popa
adc
and
addr16
or
inc
stos
adc
leave
leave
daa
or
cmp
les
cmp
push
push
les
or
add
add
lods
push
enter
mov
maskmovq
test
jb
std
loopne
jg
in
push
das
jb
ds
icebp
arpl
ss
movs
das
std
dec
jg
push
idiv
or
lods
push
xor
xor
inc
inc
stos
or
hlt
fist
mov
stos
sbb
and
stc
sub
inc
rcr
add
test
loop
sub
in
or
into
out
xchg
and
out
out
xchg
mov
xchg
sub
adc
pop
sbb
xor
out
inc
and
and
push
sub
push
sub
push
sub
arpl
in
jbe
inc
fsubr
fiadd
mov
sbb
sbb
lods
jp
js
aaa
pop
or
jmp
mov
mov
lods
cs
ror
push
arpl
js
lods
add
(bad)
cmp
xchg
jnp
mov
jo
cmp
adc
scas
mov
fild
ins
jae
cmp
dec
xchg
pop
mov
fbld
repz
lods
fdivr
ss
push
clc
loopne
stc
xchg
pop
xchg
mov
sub
jl
das
lds
cmp
sub
dec
inc
mov
pop
stc
inc
fld
jge
xor
or
xor
xor
mov
cmp
dec
(bad)
pop
mov
mov
pop
push
push
ss
cmp
in
(bad)
cli
inc
xchg
mov
cld
inc
inc
fmul
sbb
xchg
in
fild
clc
dec
dec
ds
aad
cli
mov
adc
pop
outs
fstp
dec
(bad)
mov
jb
out
mov
test
push
sbb
mov
mov
repnz
xor
jbe
dec
call
add
xchg
sahf
das
iret
mov
scas
sbb
inc
and
ror
mov
das
arpl
sbb
pushf
xchg
das
and
enter
cld
jmp
rol
cld
fcom
lock
aam
and
or
out
adc
(bad)
or
daa
cld
mov
ret
fst
mov
aas
leave
inc
mov
and
sbb
sbb
xor
ins
mov
retf
and
sub
movs
pop
cmp
sub
pop
test
push
lods
jbe
push
inc
mov
dec
xchg
test
dec
mov
jmp
test
arpl
xor
pusha
stc
sbb
fistp
adc
inc
pop
sub
xchg
adc
sub
sbb
(bad)
std
cs
mov
cs
adc
mov
dec
cmp
add
icebp
inc
xor
fcomip
and
xor
mov
xchg
add
xchg
cld
pushf
loop
dec
fstp
sub
nop
in
cmps
rcl
cmp
cmp
jno
cmc
pop
(bad)
mov
(bad)
and
jb
cmp
mov
mov
mov
not
mov
js
std
sub
daa
sub
in
jb
inc
pop
push
ds
jo
jne
dec
dec
sbb
push
ret
xor
xchg
add
sub
cld
and
add
and
inc
xchg
std
cmp
and
imul
aam
loopne
push
pop
sbb
pop
jg
stc
xor
mov
push
and
mov
pop
test
rcr
adc
clc
and
stc
out
jmp
and
test
dec
mov
inc
mov
add
cmp
fist
in
inc
sahf
test
sub
leave
es
mov
int3
test
jmp
or
ja
dec
lods
sub
int
sbb
stos
and
movs
repz
in
test
mov
sbb
push
sbb
push
mov
dec
mov
jmp
test
repz
sub
cdq
aam
and
or
or
arpl
mov
cli
cwde
call
add
sbb
(bad)
add
sahf
daa
or
aam
jp
fisttp
(bad)
lods
sahf
cmp
fimul
(bad)
or
retf
push
xlat
cmp
cmp
cmp
stos
aam
adc
arpl
xchg
sbb
pop
push
cmp
pop
les
shr
push
mov
arpl
jno
adc
add
and
mov
jae
(bad)
ins
aas
dec
or
xor
dec
call
imul
push
jo
mov
fisttp
and
jo
mov
(bad)
cmp
cmp
xor
and
iret
fild
mov
jae
push
out
push
(bad)
scas
aam
dec
outs
mov
retf
movs
jbe
adc
shl
cmps
jo
add
add
ja
sbb
sub
es
call
xchg
out
cld
sbb
jecxz
adc
arpl
mov
xchg
jmp
pushf
push
xchg
cmp
dec
jnp
lahf
xchg
call
add
hlt
push
dec
xchg
sub
ins
aas
push
jb
or
push
jbe
fstp
rcr
int3
imul
dec
push
inc
into
jbe
xchg
or
cs
pushf
fs
xchg
popa
xor
out
add
sbb
xor
and
dec
jb
daa
inc
dec
ds
shl
shl
and
in
xor
enter
and
cmp
mov
shl
mov
push
xor
mov
repz
mov
div
ror
mov
mov
add
loope
sub
mov
pop
adc
test
mov
bnd
inc
fst
xchg
in
adc
add
dec
out
inc
sahf
pushf
nop
xchg
leave
mov
and
jnp
adc
sbb
sub
leave
shl
fist
add
xchg
mov
xor
mov
sub
mov
jge
stos
jns
cli
arpl
pop
loope
pop
jp
mov
in
cmps
dec
inc
cld
mov
sub
and
sub
xchg
clc
in
xor
add
es
dec
adc
and
add
add
sbb
mov
mov
push
cmp
out
jmp
(bad)
mov
pop
ror
movs
vpackuswb
stc
in
mul
jno
sub
aam
xchg
inc
fwait
adc
mov
test
div
sub
jb
adc
mov
mov
mov
ins
stc
sbb
daa
adc
aam
mov
lahf
iret
xchg
(bad)
arpl
mov
sub
mov
rol
cs
pop
sub
mov
cmc
xor
sahf
test
pop
sti
mov
push
das
call
sbb
xor
xor
mov
push
push
fldcw
cmp
aam
dec
mov
sbb
fldenv
mov
popa
inc
sub
or
pop
sub
pop
mov
mov
das
mov
sub
sahf
fisubr
int3
aaa
sub
xor
scas
ss
jne
inc
sub
push
loop
nop
pop
cmp
mov
rcl
push
and
mov
dec
inc
pop
ja
aaa
retf
mov
int3
fsubrp
sub
jb
ror
xchg
or
xchg
popa
out
inc
ds
mov
add
or
cmps
pmulhuw
inc
mov
or
jnp
cli
and
out
cmps
aaa
lfs
rcl
or
lods
sbb
ret
aaa
inc
inc
sbb
leave
add
xor
sbb
push
retf
loop
pushf
cmp
pop
clc
cmp
pop
jge
popa
and
push
jne
mov
in
cmps
and
fisttp
lods
and
arpl
retf
cmc
lods
inc
inc
cmp
cmps
adc
repz
hlt
shr
cmp
jmp
cdq
xchg
mov
scas
adc
les
cmp
dec
xor
mov
ror
stc
pop
dec
xchg
adc
inc
(bad)
pop
(bad)
mov
adc
or
or
outs
jp
(bad)
seta
sar
sahf
in
and
pop
dec
push
sbb
mov
jl
in
jno
ret
add
inc
test
mov
div
xchg
jnp
pop
popa
sbb
int3
pop
fstp
arpl
addr16
shl
stc
sub
enter
pop
es
jmp
ret
loopne
cmps
addr16
push
lods
and
add
outs
test
or
jmp
pop
sub
out
adc
das
jecxz
loope
out
aad
sub
sti
fisttp
jbe
in
mov
loope
xor
pop
pop
adc
cli
jnp
pop
jmp
call
stos
pop
lods
sbb
nop
(bad)
ficom
in
jbe
out
or
retf
jnp
or
sub
mov
dec
aas
cmp
clc
jmp
sbb
push
lods
pop
cmps
jae
aas
dec
js
das
and
les
iret
add
test
test
(bad)
pusha
pop
frstor
push
(bad)
call
(bad)
cld
pop
add
push
add
fimul
mov
es
sbb
arpl
mov
stos
fdiv
and
das
popa
das
cmp
das
inc
arpl
inc
mov
push
pop
lahf
pop
mov
pop
popf
add
repnz
and
pop
addr16
mov
push
cwde
sub
push
add
leave
iret
xor
ror
jo
dec
inc
out
(bad)
clc
(bad)
aam
and
out
or
xchg
ins
pop
jb
fwait
jmp
and
sbb
xchg
daa
mov
xchg
sbb
xchg
xchg
sbb
lods
pop
add
dec
jb
sbb
sbb
and
lahf
nop
xchg
add
and
and
xor
ins
cmp
aaa
cmps
in
push
mov
nop
cmps
je
push
cmp
xor
(bad)
sub
ins
mov
fs
mov
js
aam
and
(bad)
in
push
mov
popf
sbb
sbb
push
ja
mov
push
xchg
fldenv
(bad)
push
pop
ror
xchg
adc
dec
pushf
loopne
iret
imul
mov
rcr
(bad)
stc
add
daa
sahf
pushf
sub
outs
jmp
mov
xchg
xchg
mov
push
call
lahf
mov
mov
add
repz
aam
or
retf
rcr
test
mov
mov
not
push
xchg
mov
out
shr
imul
aad
and
int3
mov
inc
or
sub
mov
test
das
sbb
mov
(bad)
xchg
lods
mov
xchg
xchg
(bad)
mov
lods
mov
out
sbb
sar
mov
int3
mov
(bad)
push
lock
xlat
cmps
jg
mov
and
mov
aam
xor
inc
adc
fld
pusha
cmp
mov
cmp
and
nop
adc
dec
jmp
adc
dec
mov
sub
or
mov
out
xor
and
jle
sbb
aam
add
add
stc
jl
int3
das
pop
mov
arpl
jbe
pop
arpl
popa
and
lahf
jnp
sbb
imul
into
pop
and
mov
lahf
inc
arpl
xchg
jnp
xchg
arpl
inc
shl
js
xchg
cli
test
lods
or
push
cmp
fs
repnz
inc
sub
push
mov
jo
call
sub
ins
sahf
xor
adc
int3
mov
jmp
or
cmps
and
fs
imul
and
and
xchg
sbb
xchg
mov
dec
lock
mov
in
ja
repz
mov
neg
xchg
sbb
pop
mov
cli
inc
mov
xchg
lock
pop
fdivp
mov
fisubr
out
mov
push
aaa
nop
imul
adc
jo
inc
std
out
dec
cwde
sbb
xchg
repz
xor
mov
or
xchg
or
mov
mov
cld
pushf
and
aad
in
mov
cmp
pop
leave
xor
lea
out
cmovnp
jno
and
xchg
inc
lock
or
out
ins
test
push
mov
add
clc
add
icebp
cmp
fdiv
sub
cmp
and
xchg
imul
cmp
rep
adc
and
cmp
out
push
icebp
cli
adc
repnz
cmp
inc
sbb
(bad)
xor
dec
or
and
mov
sub
dec
into
or
stos
mov
in
push
jp
ins
enter
out
retf
sti
xchg
movs
jle
jmp
in
jge
cld
pop
cld
sbb
loop
cld
in
adc
stos
sbb
imul
aaa
outs
inc
push
arpl
fsubr
(bad)
mov
lahf
daa
aas
mov
retf
or
and
pop
in
pop
(bad)
mov
enter
ss
pushf
mov
loopne
cmp
(bad)
pop
loop
sbb
scas
add
and
daa
loopne
xchg
test
(bad)
push
dec
iret
test
mov
inc
ret
int3
rcl
ja
int3
test
sub
pop
and
cs
int3
cmp
xchg
sub
xchg
sbb
int3
mov
xchg
test
sbb
xor
es
(bad)
push
idiv
fild
es
loop
ins
xchg
mov
dec
mov
stos
adc
jns
arpl
jo
in
add
call
adc
mov
int
pop
pop
and
nop
outs
cs
pop
(bad)
adc
movs
repz
xor
aam
fiadd
out
adc
pop
int
fs
(bad)
ss
outs
xor
pop
sbb
push
hlt
lds
aas
mov
mov
sbb
gs
pop
aas
loop
mov
or
shl
outs
fisttp
dec
hlt
add
(bad)
adc
repz
sub
enter
cmc
add
xchg
in
js
adc
jp
xchg
aam
sub
in
stc
dec
enter
iret
push
fcom
mov
xchg
pop
loopne
in
nop
iret
xchg
sub
enter
imul
mov
push
ins
gs
sub
inc
push
mov
push
mov
daa
mov
sar
cmps
ja
or
dec
test
and
sub
xor
outs
popa
dec
or
push
fucom
inc
test
mov
pop
pop
imul
mov
mov
mov
inc
mov
xor
and
loope
adc
aas
scas
and
movs
sub
xchg
and
dec
jb
in
js
and
cmc
out
or
adc
mov
int3
retf
mov
xchg
inc
hlt
xor
xor
enter
aam
movs
jb
fisub
setno
xor
add
pop
xor
cmp
je
jns
sub
pop
call
in
adc
pop
iret
xchg
in
pop
xor
std
aam
and
and
xchg
data16
push
lock
mov
sub
xchg
or
mov
les
inc
sbb
push
data16
or
adc
add
rcl
jp
push
inc
mov
pop
jp
(bad)
(bad)
inc
(bad)
aam
mov
cld
inc
sub
cmp
ins
rcr
pop
das
cmps
scas
cmp
pop
xor
mov
out
cmpxchg
lds
js
pop
push
retf
pop
push
push
xchg
add
test
mov
xor
push
adc
std
rcl
adc
cwde
pop
std
cmp
mov
push
cmps
add
or
stos
mov
sub
xchg
dec
sub
xlat
push
ins
sub
scas
cld
or
add
dec
and
or
add
jle
mov
xor
pmullw
enter
in
adc
in
in
sbb
(bad)
mov
fprem1
xchg
cmp
sub
jo
xlat
sub
out
push
adc
pop
ret
test
pop
rcr
jmp
mov
mov
aam
cmp
adc
out
xchg
fdiv
add
mov
enter
popf
ja
push
stos
sub
lods
fistp
add
mov
fidiv
push
fs
push
adc
ficomp
je
adc
mov
pop
nop
sbb
arpl
dec
mov
xor
adc
inc
add
pop
and
hlt
(bad)
push
sbb
fs
sahf
xor
sahf
sub
and
loop
aam
lds
cmp
pop
push
push
jp
sbb
enter
lods
or
mov
stc
push
ja
jnp
ret
mov
inc
jl
mov
and
popa
aad
sub
sahf
mov
xchg
inc
bound
sub
out
dec
inc
retf
or
or
cmp
fsub
mov
ror
inc
loop
mov
mov
push
dec
enter
dec
xchg
jge
and
jbe
push
ficom
mov
sub
sbb
pop
inc
xchg
push
inc
sub
addr16
sub
mov
out
xor
out
jno
popf
mov
addr16
mov
sub
or
in
mov
or
push
mov
out
or
aam
shl
mov
xor
sbb
test
mov
mov
push
(bad)
aaa
xchg
adc
jmp
fwait
fwait
mov
cwde
sub
nop
inc
or
sahf
add
and
lds
nop
pop
enter
rol
push
and
lods
(bad)
add
cmp
lds
jb
fsubr
cmp
nop
xchg
cmp
cli
add
cmp
dec
cli
daa
jbe
inc
in
cmp
cli
or
add
add
and
push
gs
mov
adc
bound
pop
test
mov
loop
loopne
sbb
leave
inc
adc
dec
js
add
repz
in
ja
jg
or
mov
int3
xor
or
aam
aad
retf
or
shl
jo
(bad)
iret
jnp
pop
fxch
ins
mov
jmp
and
daa
xchg
and
jns
jns
(bad)
movs
sub
jle
out
and
cmp
jle
out
inc
cmp
enter
mov
and
(bad)
push
outs
mov
sbb
or
sub
dec
xor
and
sbb
or
fld
out
adc
xlat
inc
jo
add
cmps
or
or
xor
fwait
ret
aaa
aas
div
mov
add
push
sbb
adc
xchg
sbb
ret
fild
push
daa
mov
sbb
push
repz
imul
popa
sbb
jg
stc
retf
sbb
pop
repnz
pushf
mov
ins
and
cmp
leave
inc
imul
popa
es
enter
outs
pushf
sub
cdq
nop
dec
pop
sub
sbb
add
sbb
mul
(bad)
push
arpl
jge
mov
xor
ss
inc
or
ja
xlat
ud0
(bad)
fistp
mov
mov
or
jne
inc
xchg
adc
jle
jbe
mov
(bad)
jmp
cmp
out
std
xor
mov
repz
and
xchg
in
aas
add
xor
add
mov
pop
jb
add
(bad)
(bad)
(bad)
call
xor
inc
mov
js
fnstsw
mov
call
cwde
jle
inc
dec
or
mov
and
or
mov
or
xchg
inc
sahf
fnsave
(bad)
in
gs
xor
cmp
fld
lahf
xor
or
mov
std
js
or
xor
jge
add
pop
push
jbe
mov
add
pop
inc
das
xchg
xor
(bad)
and
push
je
(bad)
mov
jge
test
or
arpl
in
push
in
mov
sahf
pop
std
push
mov
mov
cmc
pushf
inc
and
fnstsw
pop
cdq
test
ins
fld
fist
cld
ins
jmp
mov
fbld
fwait
jmp
sti
mov
dec
and
mov
fucomip
xchg
call
lods
mov
cwde
mov
adc
fadd
loope
mov
outs
call
js
(bad)
jle
ret
cmp
jbe
or
pop
xchg
mov
mov
xor
lods
jnp
mov
pop
dec
inc
jne
add
jle
pop
jo
nop
push
gs
push
mov
lock
imul
fdiv
aas
stc
das
ins
xchg
bound
into
sbb
and
je
xor
fbstp
clc
popa
jo
ret
xor
jnp
jmp
jge
add
je
idiv
(bad)
fistp
in
fidivr
outs
mov
cmc
int
inc
shr
push
pop
cld
push
mov
paddb
mov
and
mov
cli
cld
bound
repz
popa
mov
adc
mov
inc
ret
adc
pusha
stc
pop
dec
or
xor
sbb
inc
mov
pop
inc
out
push
call
das
sbb
stos
pop
dec
jmp
xor
dec
(bad)
fistp
daa
mov
bound
jle
inc
pop
mov
(bad)
fcom
push
inc
pop
sbb
or
jns
ret
xchg
daa
frstor
jne
div
cs
mov
push
cmps
fstp
mov
ret
mov
(bad)
jge
sub
add
sub
inc
push
idiv
pop
js
push
(bad)
iret
dec
jmp
loope
idiv
loope
popa
std
xor
ss
addr16
pop
clc
jge
inc
repnz
test
xor
inc
fcmovnu
add
ja
stc
jg
sbb
addr16
jae
jmp
clc
mov
jae
and
jmp
aaa
sub
or
push
xchg
or
mov
jge
shl
stos
dec
call
in
stc
xchg
xor
adc
adc
in
in
call
mov
dec
mov
jg
dec
pop
push
fisub
jmp
ret
mov
dec
sub
int
(bad)
and
mov
test
jno
and
adc
cmp
retf
and
ds
push
(bad)
sub
mov
pop
das
jnp
outs
pop
clc
int3
or
ss
fsubr
dec
out
(bad)
std
aaa
inc
popf
jae
packuswb
aad
repz
or
es
fsubr
jb
push
pop
fdivr
out
pop
and
push
pop
sti
frstor
cli
mov
inc
int3
mov
mov
lods
fdivr
(bad)
pop
imul
inc
add
xor
jb
ins
or
push
adc
inc
push
sub
push
sub
push
add
push
xchg
mov
add
aas
xchg
retf
in
jbe
push
add
push
pop
xchg
xor
xor
movs
and
add
cs
in
pop
retf
inc
mov
and
ror
cmp
fwait
ss
jbe
jbe
jnp
jbe
pop
mov
inc
mov
fnstenv
retf
in
pop
out
scas
(bad)
dec
add
inc
mov
mov
inc
push
test
xchg
dec
or
pop
add
jbe
pop
cs
dec
dec
push
cmp
dec
push
pop
fld
inc
bound
push
sbb
inc
or
loope
jb
inc
pop
inc
or
je
jecxz
jbe
mov
test
imul
mov
mov
fdivr
movq
jb
inc
cs
mov
lock
bound
cli
dec
sti
push
sbb
(bad)
pop
leave
adc
bound
push
jb
lock
imul
jl
cmps
imul
movs
imul
pop
jle
into
pop
pop
repnz
int
scas
imul
xlat
mov
sahf
sbb
sbb
xchg
xchg
add
fadd
lea
mov
loopne
jbe
retf
in
mov
add
ins
aaa
pop
lahf
and
add
jg
jge
pop
mov
aaa
xor
and
pop
xor
cmp
pop
ss
fwait
inc
xor
sysenter
cmp
aaa
cmp
rol
or
imul
mov
fdiv
and
or
ret
popa
xchg
xor
in
daa
das
rol
mov
in
add
and
mov
sbb
or
repz
imul
js
outs
mov
mov
mov
hlt
and
fiadd
inc
cmp
pop
imul
(bad)
jg
add
mov
mov
lahf
mov
dec
pop
push
inc
js
adc
mov
addr16
leave
fwait
cmp
fwait
bound
idiv
ss
cmp
inc
inc
jb
inc
xor
lahf
outs
jbe
popa
lahf
pop
dec
push
js
jg
cmp
js
inc
frstor
xor
in
pop
out
xchg
mov
sti
das
cmp
fwait
popa
mov
and
jp
mov
cld
xchg
ins
sar
test
out
fdiv
pop
ja
jg
adc
retf
and
add
pop
or
retf
retf
sti
or
in
cld
add
mov
pusha
rol
das
mov
jg
lods
or
xor
push
xchg
dec
push
std
pop
xor
fs
xor
adc
mov
leave
push
loopne
dec
xor
in
xor
push
ja
aas
cmp
in
push
test
xor
mov
push
xlat
push
outs
repz
inc
retf
daa
aam
adc
jle
clc
push
dec
(bad)
loopne
sub
call
lfs
outs
dec
std
mov
cwde
sbb
mov
push
in
push
and
add
push
in
cs
scas
jo
and
in
ja
and
push
mov
add
test
pop
fld
pop
rcl
ins
sbb
or
push
cs
push
loop
xchg
aas
xlat
pop
aam
outs
loopne
push
fs
call
xchg
daa
dec
mov
cmp
add
cmp
inc
pop
dec
xchg
out
adc
les
ins
and
push
sub
or
test
aas
push
sbb
adc
jmp
adc
fcmovb
mov
and
push
das
addr16
std
sbb
pcmpgtw
(bad)
and
jmp
and
inc
xchg
out
retf
fbstp
xchg
jecxz
in
lods
mov
cli
in
jg
ja
cli
jo
(bad)
and
(bad)
cld
cs
js
push
or
fst
pusha
or
aad
fcmovu
(bad)
sti
jg
clc
std
push
fst
jb
pop
repnz
sbb
dec
test
sbb
in
out
pop
xchg
dec
push
and
xchg
test
add
and
les
push
movs
mov
jl
pop
jne
imul
sub
icebp
popa
movs
clc
(bad)
jmp
dec
out
lods
push
fcomp
sub
outs
xor
xchg
mov
add
or
ja
(bad)
fnstsw
(bad)
sbb
xchg
jecxz
nop
xor
xchg
scas
imul
lahf
inc
xor
cmp
ss
mov
push
das
xchg
aam
test
bound
call
(bad)
popa
jle
sti
xlat
inc
xchg
push
imul
cmp
fstp
js
push
daa
sbb
mov
stos
aaa
test
sbb
sbb
cmps
pop
and
(bad)
push
jbe
sub
stos
push
adc
xchg
fcmovbe
ret
outs
push
enter
data16
ret
cmp
push
stc
push
push
push
mov
jbe
outs
dec
sahf
iret
out
(bad)
jns
out
in
or
jmp
imul
bnd
shl
daa
in
push
imul
enter
imul
jmp
and
jmp
xlat
cld
imul
jo
dec
shr
push
and
imul
pop
ins
movs
pop
mov
daa
inc
pop
xor
out
ja
rcr
rcl
sub
loope
fs
aad
dec
inc
rcr
mov
enter
int
call
jge
stc
dec
xchg
loopne
js
xor
fdiv
adc
sahf
fs
sahf
int
aam
inc
into
adc
push
push
data16
and
test
and
pop
imul
repnz
leave
dec
das
aas
sbb
push
and
(bad)
push
xchg
xchg
cmp
mov
fs
sub
or
rcr
mov
cmp
pop
inc
cmp
es
(bad)
sahf
xor
cmps
pusha
leave
stc
and
int3
sub
mov
neg
fs
add
imul
jmp
pop
nop
js
scas
mov
cmc
clc
(bad)
jnp
pop
repz
adc
fadd
mov
outs
jae
xchg
xlat
add
sub
pop
sub
in
inc
mov
aaa
loope
dec
mov
pushf
mov
push
sar
arpl
jl
inc
xchg
in
xor
das
leave
jp
enter
stos
inc
mov
cdq
addr16
xchg
xor
add
cmp
cmp
into
aam
sbb
pusha
mov
out
stc
jp
jp
xlat
mov
loopne
lahf
pavgb
lock
stos
ja
jns
call
sbb
adc
inc
daa
jl
adc
icebp
pop
sub
or
pop
jbe
inc
jne
cmp
je
daa
lahf
jbe
sbb
and
repz
dec
mov
mov
or
and
or
out
cmp
ins
sub
(bad)
repz
or
aam
jmp
xor
and
enter
sub
mov
adc
jno
sbb
leave
mov
mov
mov
inc
pop
push
xchg
mov
test
cld
mov
pop
in
dec
sub
push
dec
cwde
repz
pop
push
jb
jne
mov
xchg
and
into
or
or
pop
sar
mov
pop
je
inc
pop
(bad)
dec
std
xor
aas
cmp
cmp
lahf
mov
and
xlat
mov
mov
mov
sub
inc
push
inc
mov
mov
movsx
xor
cmp
mov
add
mov
sbb
jbe
sbb
and
ja
mov
xor
arpl
not
add
sti
adc
cmp
and
or
xchg
mov
xor
mov
scas
stos
rcr
iret
loopne
and
add
outs
sqrtps
das
cmp
popa
add
mov
add
lods
inc
mov
mov
pop
sbb
or
dec
inc
iret
push
push
call
adc
inc
sbb
adc
jle
pop
in
and
ret
add
sub
mov
push
sbb
pop
pop
sub
inc
mov
sbb
cmp
mov
inc
or
xchg
(bad)
je
arpl
mov
jne
sub
lea
in
cmp
sbb
push
xor
add
cli
add
push
xor
cmp
ins
and
stos
jno
add
and
adc
add
push
pop
pop
push
push
aam
push
pop
jno
lahf
fmul
lods
push
pop
movs
xlat
scas
neg
push
pop
jmp
dec
or
lds
bound
jp
aas
outs
mov
les
js
call
sbb
in
add
and
mov
loope
push
sbb
ficom
and
and
sbb
ds
pop
ins
pop
aad
fucomip
pusha
or
xchg
push
arpl
dec
add
sbb
push
mov
pop
mov
push
pop
push
icebp
xor
(bad)
jp
inc
test
push
fs
dec
outs
pop
xchg
ret
pop
ret
mov
xchg
fsub
fdivr
adc
in
adc
xor
shr
push
jno
shl
pop
dec
jle
test
dec
dec
pop
adc
push
inc
push
push
pop
pop
pop
dec
(bad)
push
dec
ja
inc
cmp
dec
push
pop
push
or
push
arpl
cmp
bound
idiv
out
fidivr
aaa
or
gs
je
jne
jp
jo
push
push
out
(bad)
push
ds
cmp
inc
xor
push
rsqrtps
or
retf
inc
aaa
jle
dec
inc
pop
push
push
inc
inc
dec
dec
jbe
inc
pop
pusha
pop
pop
pop
pop
imul
(bad)
call
push
push
push
ins
outs
jo
imul
jp
pop
jno
aaa
xor
xor
cmp
jb
cmp
aas
aas
xor
aaa
cmpxchg
or
popf
nop
and
das
add
add
and
jmp
pop
adc
xlat
mov
in
pop
add
jno
jl
cmp
mov
dec
repnz
sbb
in
cmp
outs
pop
scas
mov
loop
xchg
in
js
sbb
and
enter
cwde
sub
fcmovne
add
pmulhuw
ins
inc
pop
cmp
mov
mov
mov
loop
daa
inc
fwait
inc
stos
sub
jno
dec
cmovg
push
jmp
or
cli
sbb
adc
aaa
adc
pusha
fild
dec
jbe
popa
pusha
into
mov
and
repnz
fs
xor
cwde
mov
push
in
and
sbb
mov
ds
sbb
sub
pusha
xchg
iret
cmps
stos
(bad)
jge
das
sti
pop
sbb
jne
fwait
xchg
sar
imul
shl
aam
out
nop
iret
(bad)
pop
daa
mov
mov
ds
retf
in
mov
mov
xchg
out
and
pop
cli
mov
jnp
pop
vpgatherdq
fs
ins
adc
in
test
retf
in
out
and
popa
dec
jae
sbb
pop
popa
ja
pop
icebp
xor
leave
data16
and
inc
in
and
call
xor
repz
inc
ss
das
out
dec
jbe
pop
repz
or
cmp
ja
(bad)
movs
sub
sti
ret
out
mov
stc
sahf
mov
sub
xchg
pusha
cmp
stc
nop
pusha
pop
xchg
cmc
or
enter
sbb
mov
iret
addr16
push
pop
mov
out
movs
dec
dec
fwait
xor
xchg
int
and
repnz
mov
cmp
dec
lds
mov
push
pop
adc
pop
pop
xor
repz
cmc
dec
inc
add
inc
sbb
ror
mov
ss
add
cmps
pop
xchg
addr16
(bad)
pop
fistp
cmp
or
ss
pop
cld
inc
mov
xor
xor
sub
and
mov
xchg
in
fs
mov
outs
push
mov
into
addr16
aaa
fisttp
push
add
dec
and
pop
lds
in
ds
xchg
das
icebp
pop
and
dec
mov
pop
pop
sbb
inc
inc
inc
jl
and
and
leave
or
pop
adc
scas
cmp
pop
scas
cs
aad
cmc
xchg
xor
push
stc
push
stc
ss
xchg
dec
xchg
sub
(bad)
dec
cmp
sub
sbb
adc
dec
mov
inc
mov
das
pop
cli
loop
sub
repnz
push
stos
inc
lahf
iret
xchg
iret
xchg
test
xchg
test
in
xor
or
sub
arpl
sub
hlt
push
test
xor
loope
cld
sbb
inc
outs
sub
call
popf
xor
xchg
js
dec
xor
jb
stc
xchg
daa
push
stc
jb
out
xchg
mov
xor
pop
add
enter
pop
test
push
enter
adc
out
lock
push
ins
nop
sub
hlt
bnd
(bad)
ss
in
stc
cmp
call
xlat
xor
xor
sub
xlat
repnz
or
popf
xor
fmul
fcomp
and
ss
sbb
and
enter
call
rcl
push
aam
mov
jecxz
sub
xchg
mov
inc
mov
adc
lahf
out
test
mov
lods
jmp
add
or
sbb
cwde
sbb
push
mov
stos
cmc
add
jns
sbb
hlt
or
shr
push
aad
push
jl
sub
enter
xchg
add
mov
or
and
sub
les
cmc
xor
rol
push
sub
(bad)
int3
mov
pop
scas
stc
mov
outs
dec
stc
mov
sbb
hlt
and
add
push
loope
enter
sbb
sub
push
pop
les
xchg
or
sbb
icebp
cmp
mov
push
test
xchg
cli
(bad)
mov
add
push
(bad)
push
stc
jl
mov
push
out
lahf
add
pop
lea
adc
dec
ins
cmp
sar
pop
icebp
xchg
xchg
cmp
shl
inc
sbb
jp
nop
dec
dec
pcmpgtb
test
fisttp
hlt
mov
pop
add
xchg
fidivr
mov
pushf
ins
mov
rcl
dec
ins
out
xchg
xchg
inc
pop
cmps
pop
mov
es
push
movs
dec
gs
mov
pop
pop
loopne
in
in
out
in
push
xchg
mov
bound
and
in
xchg
adc
out
fwait
adc
xor
dec
mov
cmp
pop
sbb
push
test
imul
ds
test
xchg
mov
repnz
pop
cmp
sti
pop
mov
xor
addps
mov
add
imul
pop
jle
dec
jne
daa
inc
call
mov
(bad)
(bad)
in
or
shr
in
int
cmp
xlat
rcr
sbb
push
retf
cmp
sub
daa
aad
movs
test
movs
add
mov
lods
xchg
movs
ss
sbb
and
dec
mov
aas
lods
movs
xchg
or
cwde
mov
mov
clc
adc
aas
xchg
outs
aaa
sub
pop
bound
(bad)
push
add
inc
xor
repnz
leave
or
inc
cmp
cmc
imul
push
add
pop
adc
stos
jb
jmp
push
fiadd
neg
dec
push
mov
adc
jmp
test
pop
add
dec
cdq
and
inc
mov
push
pop
mov
cmp
ss
mov
pop
mov
sar
mov
push
sbb
je
jns
mov
enter
mov
mov
or
xor
and
inc
mov
sbb
sbb
fist
or
mov
mov
xchg
stc
mov
stos
mov
pop
mov
cmp
sub
adc
cld
dec
sar
push
and
daa
lods
std
call
push
sub
dec
leave
add
shl
mov
push
out
or
inc
das
and
mov
or
(bad)
dec
dec
js
int3
nop
adc
dec
or
xchg
ret
loopne
and
sub
fsubr
das
dec
rol
dec
jae
and
lahf
or
sub
clc
inc
stc
and
mov
jp
and
repnz
mov
out
push
popa
das
adc
push
pop
ss
retf
(bad)
xchg
mov
ds
je
pop
cwde
lea
add
cmp
mov
inc
sub
push
dec
inc
(bad)
aam
dec
jo
ror
push
mov
inc
sbb
add
dec
pop
or
inc
arpl
dec
mov
mov
rcr
imul
mov
push
dec
popa
out
les
scas
stc
aam
push
daa
xchg
daa
xor
xor
xchg
ror
test
ds
xchg
in
sbb
(bad)
out
mov
(bad)
imul
cld
idiv
fstp
mov
jle
push
mov
int
sub
out
mov
cmp
in
inc
ret
mov
imul
and
fwait
and
in
in
jae
imul
pop
aam
cmp
pop
xor
adc
dec
adc
inc
adc
repnz
mov
inc
inc
fwait
sahf
inc
inc
pop
push
xchg
cmp
lods
int
cwde
push
std
pusha
mov
daa
add
mov
fwait
(bad)
loopne
test
rol
ret
neg
pop
mov
rcl
rol
mov
cmps
clc
cmp
shl
jl
xchg
jmp
pop
aam
sti
nop
and
ror
sub
or
inc
sbb
mov
in
mov
ins
inc
movs
out
cmp
cs
add
push
fsubr
xchg
ret
pop
dec
cli
fwait
mov
xor
lahf
mov
mov
adc
sub
test
push
pop
out
cmp
loopne
or
aam
sbb
icebp
in
leave
jae
popf
retf
stos
fwait
fwait
push
xlat
data16
inc
fcomp
stos
fsub
pusha
jns
ss
pop
inc
pop
push
xor
leave
test
addr16
xor
jmp
out
rcl
xor
das
jle
iret
repz
call
sahf
out
imul
and
mov
out
mov
adc
inc
iret
cmc
xchg
outs
inc
stc
xchg
int
xchg
bound
cdq
ds
hlt
adc
adc
xchg
stos
aaa
adc
fiadd
add
movntq
je
pop
(bad)
mov
int3
jp
mov
test
xor
leave
xchg
xor
inc
in
pop
cmp
and
or
cmp
xchg
pop
sbb
movs
mov
pop
dec
ror
jmp
fiadd
es
dec
mov
loopne
out
aam
jns
sar
mov
repnz
nop
(bad)
es
sub
aam
iret
popa
aad
ins
loop
cmp
lock
sub
aam
cmps
sbb
mov
and
in
test
daa
mov
sbb
xchg
xchg
shl
push
push
mov
dec
dec
addr16
mov
loopne
(bad)
mov
shl
sbb
mov
inc
cmc
sub
push
sar
frndint
or
push
cmp
lods
sub
nop
ins
xlat
xchg
cmp
enter
mov
pop
sub
aam
cmp
cmp
in
inc
test
rcl
sbb
sbb
repnz
sub
in
aam
pop
xchg
inc
ds
and
daa
bound
enter
sub
aam
call
rol
das
inc
inc
(bad)
sub
cmp
int3
aam
cmp
mov
pop
bnd
das
sbb
test
dec
aaa
xor
sbb
aaa
xchg
xchg
ret
sahf
popa
and
imul
inc
imul
les
pop
inc
(bad)
dec
inc
int3
ins
aaa
pop
jbe
enter
movs
jbe
outs
xor
xor
xor
enter
pusha
gs
ret
xchg
inc
test
in
inc
je
push
inc
out
je
cmp
pusha
daa
repnz
sahf
inc
add
dec
and
mov
cmp
sub
repz
inc
cmp
out
sbb
sbb
pushf
inc
das
xor
repnz
in
enter
stc
or
addr16
xor
aaa
cmp
inc
sahf
xchg
xchg
jno
or
inc
sahf
daa
and
mov
in
jns
push
or
and
jns
repnz
dec
and
lahf
xchg
addr16
and
inc
mov
xchg
out
and
cmps
fs
repnz
xchg
push
sbb
mov
push
mov
cmp
repnz
in
enter
pop
call
sub
sub
sahf
sub
pop
bnd
sub
inc
xor
das
add
xchg
in
cld
sub
inc
lock
adc
lods
cmp
inc
jmp
pop
inc
stos
aaa
xchg
pop
jno
jns
and
push
sub
inc
mov
sbb
imul
mov
jecxz
dec
aaa
out
lds
in
or
and
dec
sbb
repnz
cmp
out
pushf
mov
fimul
fbstp
call
loope
and
inc
inc
inc
add
lods
shl
mov
imul
jb
xor
(bad)
jmp
mov
scas
cmp
lea
xchg
mov
iret
(bad)
jl
sahf
xchg
(bad)
repz
rol
and
or
cmp
xchg
xchg
ins
fwait
mov
sbb
out
repnz
hlt
xor
xor
jae
cmps
mov
aaa
sar
rcl
sar
pop
xchg
xchg
xchg
xchg
cmps
shl
cmps
push
jns
sahf
in
or
pop
pusha
cmps
jns
fs
in
shl
xchg
cmp
dec
inc
inc
scas
and
dec
xor
call
mov
test
cmp
repnz
mov
ja
xchg
daa
cld
cmp
push
daa
inc
ds
lock
mov
daa
loop
or
in
xor
sbb
jbe
leave
xchg
xchg
sar
adc
idiv
imul
jl
dec
repnz
pushaw
dec
cmp
dec
sar
outs
xor
enter
and
mov
inc
push
xor
sub
cmp
pop
(bad)
ja
cmp
leave
xchg
cmp
in
add
daa
sar
daa
fst
jb
add
int
dec
add
loopne
(bad)
cwde
or
ss
pushf
in
and
cs
xor
inc
mov
or
sub
mov
sub
jg
push
mov
dec
dec
sar
cmp
daa
jns
xchg
and
cmp
enter
add
jmp
pushf
cld
mov
stc
cmp
jecxz
stc
mov
aam
sub
into
in
iret
ds
xor
and
lock
cmp
and
in
pop
nop
sti
xor
sti
adc
or
push
inc
add
mov
dec
or
das
inc
xchg
popf
fld
mov
pop
add
push
jbe
mov
xchg
dec
mov
pop
sbb
div
in
pop
imul
fsub
add
xchg
pop
outs
jmp
mov
cmp
inc
imul
or
hlt
test
push
loopne
in
iret
sub
je
outs
jns
push
adc
dec
sar
adc
push
cmp
orps
pop
jno
or
add
inc
lea
pop
and
push
and
add
out
adc
popa
and
jmp
aam
fiadd
fcmovnu
int
ret
call
out
and
mov
and
jae
jae
add
aaa
fcomp
adc
sub
xchg
ret
xchg
inc
dec
add
int
call
inc
add
aaa
cmps
imul
imul
mov
adc
aaa
cmp
xor
shl
lds
dec
repz
xchg
inc
jae
dec
rcr
lds
out
pop
push
pop
mov
imul
xor
pop
inc
sbb
xor
shl
imul
cmps
imul
imul
imul
imul
xor
das
push
adc
cmp
xor
shl
cmps
fwait
(bad)
call
xchg
sub
push
add
je
cmp
and
dec
and
and
xor
rol
xor
dec
shl
loop
xchg
dec
shl
xchg
cld
sub
cmps
imul
cmps
imul
imul
call
push
aas
cmps
imul
imul
movs
imul
call
pop
dec
pop
imul
jmp
adc
xor
cmps
imul
xor
xor
int3
add
test
mov
inc
iret
fistp
pop
mov
mov
cmp
add
pop
dec
add
je
in
sub
pop
mov
or
mov
pop
imul
pop
xlat
mov
pop
das
emms
sub
or
xlat
xor
pop
pop
adc
add
por
add
mov
mov
add
pop
int3
(bad)
sub
pop
inc
cmp
enter
pushf
stc
mov
or
inc
add
cmps
jmp
xchg
xchg
adc
xlat
ins
fwait
cmps
adc
jmp
jmp
xchg
or
add
out
pop
add
push
in
jmp
cmovl
aas
or
dec
xlat
jne
aam
add
push
ja
retf
fnstenvw
call
dec
and
out
cmp
push
call
add
pop
div
pop
xchg
dec
lds
or
das
mov
pop
fwait
sbb
test
mov
mov
sub
pop
mov
pop
daa
ja
frstor
and
call
pop
pop
and
imul
mov
dec
xlat
xor
dec
push
repz
(bad)
lds
pop
xlat
je
and
xchg
xlat
jne
imul
adc
bsr
pop
lea
outs
push
xor
add
cmps
jmp
mul
sub
idiv
and
inc
inc
fwait
ja
enter
mov
aas
(bad)
scas
add
shl
xchg
sub
sbb
mov
call
adc
scas
dec
add
sysret
mov
or
idiv
and
sbb
je
retf
pop
cld
jbe
pop
repnz
js
cmp
push
and
sub
xor
retfw
or
das
out
sub
test
cmp
and
nop
xor
loopne
imul
xor
pop
jmp
shl
pop
xor
push
inc
pop
imul
cmps
imul
pop
repz
cmps
repnz
and
call
int3
scas
sbb
add
jmp
test
dec
shl
enterw
fldenv
mov
unpcklps
data16
jp
jp
jae
or
jne
push
jp
pop
jo
retf
jp
jns
fnstenv
inc
inc
ins
popa
pop
add
adc
push
push
push
dec
or
ins
imul
and
popa
dec
arpl
mov
mov
jbe
cmp
dec
push
jae
jo
arpl
inc
addr16
cmp
jge
lods
and
popa
je
jle
(bad)
outs
outs
lahf
ins
jo
adc
popa
add
cmp
outs
ins
dec
mov
jp
push
mov
int
sub
jb
jnp
imul
data16
ins
imul
outs
jmp
push
ins
mov
in
push
jp
add
jbe
cmp
call
std
test
jbe
outs
fnstcw
jns
inc
jo
pop
sub
fmul
ins
jg
pop
pcmpgtb
cmp
jns
arpl
sti
bound
inc
and
adc
push
call
adc
dec
pop
jo
outs
mov
je
popa
aas
push
addr16
ins
push
mov
mov
or
adc
push
data16
les
cmp
or
pop
pop
sub
lods
sbb
cdq
fstp
cdq
mov
push
in
pminub
jbe
jae
adc
jbe
jmp
ins
dec
adc
push
je
push
ret
adc
fcom
test
xor
cdq
lods
cmp
push
ss
ins
rol
aaa
cs
inc
xchg
ret
xchg
sbb
and
fstp
push
inc
xchg
and
xor
add
jmp
adc
push
aaa
sub
aaa
aas
aaa
inc
aaa
(bad)
(bad)
(bad)
call
dec
aaa
dec
aaa
push
aaa
jno
imul
aaa
gs
enter
(bad)
aaa
fnstenv
mov
jmp
xchg
aaa
cwde
aaa
(bad)
(bad)
(bad)
jmp
aaa
ret
aaa
pushf
aaa
retf
aaa
shl
les
fdiv
sti
aaa
pop
xor
xor
xor
push
xor
(bad)
call
jmp
xor
xor
sahf
cmp
cmp
cmp
ss
fbstp
(bad)
ss
xor
xor
xor
xor
xor
dec
xor
jp
adc
xor
xor
xor
xor
(bad)
mov
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
call
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
ds
and
jno
ja
mov
(bad)
(bad)
mov
inc
add
add
arpl
mov
aas
sar
aas
mov
ret
aas
cdq
aas
mov
(bad)
(bad)
(bad)
aas
dec
cmp
icebp
cmp
ins
cmp
int3
cmp
idiv
or
cmp
lods
loop
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
and
pop
aaa
sbb
or
or
push
aaa
push
aaa
in
xor
mov
aaa
jmp
xor
and
imul
addr16
mov
xor
je
mov
lock
xor
ret
(bad)
cmp
cmp
and
(bad)
(bad)
call
lea
cmp
cmp
cmp
cmp
cmp
ja
(bad)
(bad)
cmp
ss
cmp
push
ss
ss
mov
xor
xor
xor
cmc
mov
(bad)
push
xor
xor
ds
aas
adc
inc
aas
pusha
aas
imul
aas
cwde
aas
sahf
aas
retf
aas
out
aas
icebp
std
(bad)
(bad)
fnstsw
add
cmp
call
cmp
mov
cmp
dec
in
out
pop
aaa
jne
xchg
aaa
shl
in
(bad)
dec
xor
jno
imul
addr16
xor
clc
retf
movs
xor
repz
xor
xor
xor
ror
mov
jae
jmp
push
mov
stos
xor
aad
cmp
cmp
cmp
mov
cmp
jo
hlt
inc
mov
jg
repnz
cmp
push
cmp
dec
xor
xor
inc
xor
ins
adc
xor
leave
inc
int
call
inc
push
xchg
xor
xor
cmp
cmp
cmp
push
inc
push
cli
cmp
jp
ins
in
lods
cmp
cmp
xchg
cmp
xor
push
cmp
lds
int3
cmp
dec
pop
jge
cmp
cmp
cmp
ss
xor
(bad)
(bad)
push
inc
ss
ss
jo
lds
mov
ss
(bad)
ss
ss
sahf
fnsave
int
mov
xchg
ss
(bad)
cmp
pop
cmp
pusha
cmp
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
mov
(bad)
cmp
cmp
cmp
cmp
ror
add
(bad)
jg
inc
inc
cmps
aaa
mov
ja
(bad)
xor
xor
add
cli
sbb
aaa
xor
pusha
xor
cmp
cmp
dec
shl
outs
lods
cmp
cmp
sar
mov
(bad)
(bad)
mov
ss
mov
fidiv
pushf
ss
shl
inc
test
mov
inc
cmc
inc
test
(bad)
inc
inc
repnz
jecxz
xchg
inc
cs
sbb
aas
or
push
mov
dec
outs
aas
jmp
xchg
aas
mov
cmp
pop
cmc
cmp
mov
xchg
cli
cmp
push
cmp
(bad)
(bad)
cmp
cmp
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
leave
sbb
(bad)
not
aaa
add
pop
aaa
test
xchg
aaa
add
aaa
sbb
or
xor
mov
xor
jg
add
xor
cmp
cmp
cmp
cmp
xchg
stos
ins
jbe
arpl
push
pop
clc
(bad)
jmp
xor
popa
xor
movs
xor
xor
jo
je
push
fidiv
shl
loope
pushf
xor
or
xor
hlt
xor
(bad)
push
cmps
xor
xor
xor
ds
dec
inc
ret
inc
ds
inc
aas
pop
retf
int3
aas
in
xchg
inc
aas
jmp
loope
mov
cmp
xchg
pop
push
(bad)
jmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
xchg
(bad)
push
sbb
jo
push
fbstp
mov
stos
(bad)
dec
icebp
aaa
in
aaa
jle
int
xor
xor
xor
xor
xor
jmp
xor
xor
xor
inc
xor
cmps
pop
jg
call
mov
out
xchg
xor
xor
cmp
cmp
jp
(bad)
cmp
jl
icebp
cmp
ror
je
(bad)
(bad)
(bad)
push
clc
ss
movs
ss
sub
pop
xor
mov
jns
mov
(bad)
jge
xchg
xor
bound
gs
xor
xor
xor
xor
xor
xor
iret
adc
(bad)
jg
cmp
sar
cmp
inc
pusha
jl
(bad)
mov
inc
rol
jbe
and
cmp
cmp
cmp
cmp
iret
in
or
aaa
lods
aaa
mov
xor
pop
call
xor
xor
xor
xor
and
aas
xchg
xor
(bad)
dec
pop
mov
les
cmp
mov
fnstsw
aad
pop
ss
ss
(bad)
jg
je
jge
mov
pushf
xor
cli
xor
(bad)
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xchg
xor
lahf
cmps
fistp
mov
xchg
inc
das
push
dec
(bad)
(bad)
jg
jae
mov
retf
aas
or
mov
sub
or
sbb
dec
das
xchg
adc
(bad)
cmp
lock
int3
std
out
mov
xor
xor
push
xor
rcl
add
xor
(bad)
jg
sbb
mov
add
pop
lea
xor
xor
xor
xor
lods
out
(bad)
addr16
ds
inc
dec
test
aam
adc
imul
(bad)
aas
pop
aas
out
aas
or
cmp
add
fdiv
add
out
mov
daa
xor
xor
xor
out
mov
xor
mov
cmp
pop
cmp
lods
mov
cmp
lds
xchg
(bad)
(bad)
adc
ja
xor
mov
xor
sar
mov
ds
ds
inc
imul
inc
sbb
jae
shl
dec
pop
cmp
cmp
(bad)
lea
cmp
cmp
cmp
cmp
cmp
add
jmp
arpl
mov
cmp
dec
fcomp
xor
fnsave
aam
sub
and
fbstp
add
add
lahf
push
call
cmp
cmp
cmp
ud0
(bad)
data16
(bad)
div
add
xor
inc
xor
ret
mov
xor
jl
xor
lds
mov
int3
in
push
cmp
nop
cmp
mov
mov
ret
cmp
cmp
(bad)
cmp
cmp
adc
and
test
xor
xor
xor
inc
adc
mov
xchg
mov
mov
mov
aas
mov
cmp
inc
jae
(bad)
xchg
cmp
push
jne
pop
jns
mov
jmp
js
lods
cmp
push
loop
sub
std
pop
fbld
dec
cmp
movs
aaa
mov
xor
loopne
adc
xor
fs
xor
xor
sbb
adc
cmp
sti
push
jbe
cmp
cmp
jno
(bad)
cmp
adc
loopne
and
push
(bad)
fcomip
inc
xor
xor
inc
xor
cmps
and
xor
xor
xor
inc
xor
or
mov
mov
stos
xor
icebp
fistp
inc
popa
inc
xchg
mov
aas
push
aas
ja
dec
call
cmp
xchg
cmp
cmp
or
retf
data16
cmp
sbb
rol
add
sub
lds
xor
rol
xor
mov
sbb
mov
sti
dec
adc
add
cmp
dec
call
(bad)
nop
cmp
jbe
mov
aaa
lock
fdivr
push
fidiv
xor
mov
hlt
xor
xor
repz
call
xor
xor
cld
mov
sbb
ds
ds
mov
aas
sub
or
sbb
mov
jmp
inc
aas
inc
aas
push
repz
outs
aas
std
xchg
(bad)
mov
aas
sub
or
std
outs
popa
loop
cmp
cmp
cmp
cmp
pop
outs
(bad)
ffreep
(bad)
nop
cmp
cmp
pop
cmp
jmp
cmp
or
mov
out
push
movs
aaa
jge
sbb
mov
aaa
mov
(bad)
jge
fisttp
xor
xor
xor
mov
or
and
xor
dec
(bad)
call
mov
cmp
jns
jmp
cmp
cmp
cmp
cmp
inc
test
std
cmp
cmp
cmp
jns
sub
sbb
retf
ss
ss
ja
pop
ja
ret
xor
sub
and
or
cmp
xor
xor
xor
xor
(bad)
jg
xor
je
int3
xor
xor
xor
xor
mov
xor
push
xor
pcmpeqb
dec
adc
mov
(bad)
or
ds
sbb
cmp
pop
ds
ds
ds
ds
ds
ds
ds
imul
popa
das
rcl
mov
out
xchg
ds
fimul
cmps
call
add
push
cmps
sbb
fwait
aaa
mov
repz
mov
idiv
dec
es
or
repnz
mov
hlt
push
aam
xchg
aaa
stc
aaa
xchg
aaa
xchg
aaa
cld
dec
xor
pop
xor
aad
jge
xor
xor
or
push
std
and
(bad)
cmp
inc
xor
xor
xor
pop
arpl
cmp
test
xor
popa
xor
in
int3
xor
cmps
call
mov
mov
(bad)
ja
xor
mov
loop
call
xor
cmp
call
xchg
arpl
push
pop
xchg
push
xor
gs
arpl
xchg
pop
cld
xor
push
xor
outs
jbe
imul
out
and
int3
xor
xor
out
loopne
xor
repz
fwait
xor
(bad)
mov
(bad)
in
jmp
xor
inc
xor
addr16
stc
xor
xor
dec
adc
add
das
cmp
sbb
and
and
push
cmp
cmp
sbb
cmp
cmp
ror
pop
dec
and
pop
shr
fwait
pop
jg
cmp
outs
cmp
ja
in
cld
jmp
cmp
inc
cmp
dec
cmp
push
cmp
pusha
cmp
imul
cmp
popa
cmp
in
mov
iret
cmp
cmp
cmp
cmp
mov
popa
mov
cmp
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
out
call
ss
pop
ss
or
sub
mov
pop
ss
ss
and
pop
ss
aad
mov
ss
ss
test
sar
aaa
jnp
ss
iret
cmps
ss
ss
shl
fwait
mov
add
cdq
repz
lea
ss
mov
xlat
ss
push
jo
sbb
das
xor
add
outs
addr16
xor
push
push
(bad)
mov
xor
cmp
dec
xor
fs
pop
xor
xor
(bad)
(bad)
(bad)
mov
xor
iret
xor
mov
xor
mov
fcomip
push
div
test
xor
mov
xor
adc
xchg
xor
das
ins
xor
adc
out
xor
pop
mov
xor
dec
xor
xor
push
pop
jb
push
pop
or
outs
add
loop
or
push
jl
add
adc
pop
pop
sbb
aam
imul
mov
bound
mov
jne
mov
sub
pop
ins
pop
sbb
or
mov
dec
xchg
pop
sub
pop
sbb
nop
and
cmp
or
je
das
mov
ins
movups
adc
imul
inc
jmp
sub
inc
add
fwait
imul
jecxz
add
arpl
or
aaa
inc
add
jle
and
push
jmp
iret
ins
lea
or
or
iret
(bad)
(bad)
popf
and
jg
dec
out
push
mov
(bad)
mov
mov
inc
enter
test
lea
or
xchg
(bad)
call
and
rol
mov
sti
pushf
movs
loopne
movs
fndisi(8087
nop
retf
(bad)
jmp
mov
test
mov
mov
cmp
pop
add
jg
mov
jnp
rcr
mov
mov
(bad)
(bad)
inc
add
(bad)
out
ins
jns
jmp
cdq
cdq
call
in
(bad)
(bad)
mov
mov
je
mov
push
mov
(bad)
(bad)
jg
addr16
shl
loop
mov
ror
(bad)
test
adc
cdq
lahf
and
push
std
push
jmp
xchg
mov
inc
mov
mov
push
and
fistp
dec
ffree
mov
test
aas
bnd
imul
dec
loop
in
in
xchg
test
add
mov
std
outs
(bad)
cmp
pusha
out
mov
cmp
fisub
(bad)
xchg
(bad)
push
mov
retf
pop
mov
inc
jo
jg
scas
jmp
(bad)
(bad)
(bad)
aas
xor
sar
imul
shl
sar
cmps
pop
lock
(bad)
fucomi
mov
movs
sbb
inc
loop
repnz
test
in
in
inc
rol
in
test
mov
(bad)
call
(bad)
fist
add
jmp
fldcw
(bad)
jae
lahf
jnp
movs
cmp
retf
xchg
inc
mov
xlat
into
lea
repz
fucomi
outs
sbb
fld
(bad)
jmp
in
pop
mov
movs
mov
fnstenv
fild
mov
mov
div
repnz
in
repnz
retf
xlat
mov
mov
sub
xor
add
pop
push
mov
inc
sar
ins
iret
pop
lock
loopne
lahf
mov
and
loopne
mov
mov
jnp
fstp
div
inc
repz
shl
nop
and
mov
outs
clc
xchg
iret
test
xor
js
add
stos
mov
call
mov
inc
stos
mov
in
mov
inc
xchg
xchg
adc
fist
ficomp
sbb
jle
xchg
fisttp
cmps
(bad)
cmp
(bad)
inc
xchg
in
iret
lahf
lods
mov
test
call
xchg
lods
fistp
js
mov
fistp
push
aas
ret
push
mov
rol
cmp
xchg
sub
retf
fisubr
(bad)
not
pop
scas
repnz
mov
pop
jge
call
sub
mov
mov
call
icebp
das
inc
repz
mov
mov
xor
retf
jmp
mov
xlat
aam
(bad)
xchg
stos
ret
xchg
add
ficom
les
xor
jmp
and
fnstsw
jmp
mov
rcl
xchg
fstp
test
ret
into
jle
cld
mov
fdivr
fld
sahf
push
shl
sub
fs
mov
xchg
sar
mov
or
stc
sub
neg
mov
and
pop
xchg
daa
(bad)
(bad)
(bad)
idiv
push
xor
enter
and
and
test
(bad)
(bad)
jp
mov
iret
sub
outs
ins
fs
ins
jae
push
mov
xchg
out
imul
stos
push
stc
jae
ins
xor
xor
mov
jae
jbe
cmp
fistp
jo
adc
fs
ja
sub
arpl
outs
fs
aaa
mov
inc
bound
pop
cmove
jno
dec
jo
ja
clc
imul
adc
pop
push
movs
mov
aas
cmp
outs
data16
dec
cmc
(bad)
cmp
and
jp
jne
jbe
push
jp
inc
mov
inc
or
adc
jge
fbstp
and
adc
aas
je
jb
jno
and
in
inc
dec
push
inc
push
cli
retf
push
jae
ds
imul
jae
mov
and
pop
outs
adc
push
fldcw
fsub
or
mov
jns
jbe
sub
fistp
add
xchg
cmp
jle
loopne
dec
ins
je
or
push
xchg
adc
ja
and
aaa
adc
adc
outs
stc
or
pop
jo
dec
jae
inc
sar
mov
pop
sub
add
popa
jae
iret
test
or
pop
(bad)
jnp
sub
aas
jne
xchg
or
fwait
push
bound
jp
dec
adc
shl
sbb
sub
jp
arpl
mov
or
add
out
pop
lods
arpl
jne
adc
and
addr16
mov
sbb
or
or
sbb
xlat
mov
mov
je
jno
and
fld
cmp
jle
adc
je
pop
adc
adc
arpl
push
lea
and
xor
jp
or
cmp
or
pop
mov
or
je
jne
jnp
jbe
add
sbb
mov
adc
outs
pop
sti
cmp
xor
cmp
xor
ins
jno
std
mov
mov
dec
xor
dec
aaa
xor
ss
xor
je
dec
xchg
inc
aas
xor
xor
jmp
jnp
xor
test
daa
push
cmp
rcr
jbe
sbb
shl
sbb
(bad)
jp
aaa
xor
cmp
xor
cmp
jne
jnp
jp
add
xor
imul
push
nop
adc
sub
inc
ret
mov
pop
mov
dec
sub
add
push
cmc
pop
add
mov
xchg
add
lods
add
xor
xchg
(bad)
fisttp
es
call
sub
mov
sbb
out
xlat
add
sbb
mov
ins
loope
pop
mov
pop
fiadd
dec
les
dec
retf
and
mov
or
push
adc
cmp
xor
pop
pop
repz
ss
adc
out
add
add
jecxz
mov
bound
lods
enter
sbb
aam
xor
inc
je
mov
cmp
in
fnstenv
adc
mov
aad
add
add
fild
sub
add
and
jne
je
sub
aad
or
scas
and
popa
je
xor
push
xchg
lea
and
or
or
add
je
cdq
inc
adc
pop
add
cmps
jmp
or
cmps
imul
add
cmp
aaa
xchg
pop
mov
cmps
jmp
mov
dec
xchg
pop
pop
xchg
daa
add
pop
inc
xchg
adc
fld
cwde
mov
int
pop
push
fwait
adc
cwde
or
mov
xor
and
add
jg
inc
sbb
push
push
inc
movs
(bad)
mov
inc
or
xlat
xchg
mov
mov
mov
mov
mov
(bad)
stc
(bad)
(bad)
push
mov
(bad)
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
or
pop
and
in
xor
adc
cmp
and
jnp
xlat
std
and
add
(bad)
movs
pop
std
mov
dec
shl
(bad)
cli
aam
fnstenv
not
add
imul
imul
cmps
imul
shr
in
xrelease
in
hlt
inc
xchg
add
cld
xchg
mov
dec
gs
pop
mov
or
pop
or
nop
out
sub
test
mov
shl
pop
mov
call
adc
inc
add
repnz
sub
inc
imul
cmps
imul
imul
cmps
imul
sub
xor
ror
inc
or
push
call
push
mov
imul
adc
adc
push
retf
push
pop
jns
mov
push
xchg
add
fcom
add
inc
xlat
stc
add
push
push
push
sbb
adc
push
retf
add
add
adc
(bad)
inc
sub
add
sub
push
shl
push
add
inc
aas
push
or
add
pop
add
jg
mov
cmps
imul
cmps
imul
add
in
fldcw
sbb
jg
inc
int3
ficom
pop
cli
mov
adc
adc
xchg
add
in
stc
adc
arpl
mov
add
cld
aas
adc
push
add
add
push
add
pop
push
ror
fild
dec
imul
add
imul
jl
cmp
add
adc
mov
pop
lock
mov
iret
add
push
fld
add
jl
add
dec
jbe
jg
or
xor
and
js
jo
sbb
add
add
int
dec
cmp
jo
add
call
add
call
adc
call
nop
or
sti
push
fldenv
mov
mov
and
loopne
mov
xchg
mov
(bad)
push
add
sub
and
daa
das
aaa
add
xchg
sub
lods
fwait
ins
mov
in
loopne
pop
add
cld
out
fs
add
and
adc
std
push
adc
push
xor
add
mov
add
lods
adc
stos
dec
test
fdivr
sub
pop
das
retf
dec
aas
add
in
mov
adc
adc
sar
pop
movhps
push
or
xor
fwait
cmp
add
fcom
add
lock
and
mov
pushf
pop
addr16
in
or
push
sub
mov
xchg
add
jbe
add
xor
push
sbb
fwait
jp
cs
test
pop
loopne
ret
rol
cmp
add
fsubr
xchg
retf
push
sbb
or
test
sbb
inc
add
(bad)
mov
pop
or
mov
pop
jo
push
imul
mov
aas
fwait
out
add
cmps
pop
cs
sbb
fwait
neg
out
fisub
cmp
add
loopne
fidiv
paddb
aas
add
ins
fnstenv
inc
add
adc
or
mov
outs
add
jae
fwait
xor
adc
add
jne
add
unpckhps
xor
(bad)
lds
gs
gs
repnz
outs
add
daa
jae
jne
adc
je
ins
adc
(bad)
jne
cmp
add
adc
es
jne
ja
imul
scas
jns
imul
ins
ins
fist
xor
add
cmps
lods
fistp
addr16
shr
daa
pop
jnp
gs
pop
sbb
int
fbstp
inc
adc
jne
jb
ficom
add
mov
add
mov
push
popa
inc
test
xor
ja
aas
data16
adc
mov
or
pop
cmps
dec
cwde
sar
adc
mov
jne
iret
dec
pop
enter
jbe
inc
mov
jo
loope
push
iret
push
fcom
adc
sub
xchg
lea
lahf
mov
popa
jb
mov
enter
dec
or
lock
jecxz
mov
or
jb
fld
push
or
fild
push
sbb
ss
std
adc
cmp
pop
cmp
outs
and
(bad)
sub
out
das
sub
add
ror
xor
adc
dec
mov
inc
clc
dec
inc
sub
fs
int
mov
jnp
mov
mov
mov
or
mov
add
xchg
xchg
cmps
mov
inc
cmps
and
shl
sbb
or
sbb
mov
xor
xlat
jo
sbb
sub
mov
shr
jne
push
sbb
mov
xchg
add
retf
icebp
xor
xchg
jne
rol
xor
add
sub
mov
and
add
inc
ja
mov
(bad)
pop
inc
dec
lea
pop
and
pop
or
test
cmp
es
in
sub
(bad)
push
bound
xor
or
push
push
in
imul
arpl
ins
mov
push
add
pop
arpl
jo
je
mov
mov
test
inc
sub
add
jae
lods
xchg
(bad)
arpl
adc
bound
fs
pop
pushf
outs
or
lahf
inc
jns
je
lods
pop
sbb
or
cmc
sub
jb
ja
dec
sbb
leave
jne
sub
lea
sbb
jge
fsubr
daa
imul
ret
sbb
xchg
ret
gs
jmp
add
push
and
add
adc
ins
jnp
ret
jmp
addr16
xor
add
sub
xchg
inc
inc
call
nop
jg
in
ins
jno
xchg
clc
xor
arpl
adc
jecxz
adc
mov
jb
sub
push
imul
mov
and
cmps
dec
or
(bad)
jne
movs
jae
mov
adc
push
inc
jbe
and
and
cli
or
xor
and
cmp
ror
nop
cmps
and
rol
inc
test
sub
push
mov
jae
dec
push
daa
jnp
or
pusha
fist
dec
ja
push
and
imul
imul
outs
or
pop
arpl
(bad)
jne
(bad)
std
imul
jb
sbb
inc
ja
and
or
and
adc
inc
mov
arpl
add
jne
mov
popa
adc
iret
dec
pop
mov
fnstsw
jge
push
ror
fldenv
and
add
push
leave
clc
dec
scas
jb
jae
into
dec
jbe
xor
adc
fmul
leave
adc
add
cmps
cmp
xchg
arpl
test
inc
mov
inc
add
or
sub
jg
arpl
and
pop
outs
(bad)
(bad)
xlat
fwait
inc
ja
or
pop
movs
ins
daa
pop
nop
xchg
es
xor
fcomp
pop
outs
ret
pusha
dec
xor
xchg
in
movs
dec
dec
js
or
or
add
and
or
pusha
mov
pop
sub
pop
(bad)
mov
xchg
rcr
aas
addr16
ins
ss
xor
data16
xchg
ficomp
imul
cwde
add
xchg
sbb
outs
pop
bound
xchg
sbb
icebp
inc
or
xchg
inc
mov
cwde
arpl
jae
or
add
dec
add
mov
lea
add
pop
aaa
(bad)
mov
pop
add
mov
es
dec
adc
or
neg
mov
ret
std
push
pusha
dec
sbb
inc
aad
aad
aam
test
icebp
popa
mov
xor
dec
cmc
iret
jne
and
fs
xor
add
pop
jne
jne
js
arpl
pop
xlat
aad
inc
popf
cs
dec
call
popf
and
pop
and
data16
push
adc
(bad)
add
cmp
jb
sbb
adc
dec
add
lea
loope
icebp
imul
mov
div
mov
pop
xor
mov
or
(bad)
sub
add
inc
and
popa
pushf
and
mov
and
pop
aad
shl
dec
xchg
inc
add
mov
nop
sbb
call
retf
jmp
pop
das
sbb
pop
sub
jmp
mov
jne
and
cmp
and
jne
sbb
pop
push
int3
pop
dec
sub
sub
retf
xchg
(bad)
arpl
dec
inc
lahf
ja
and
mov
and
and
ret
add
sub
xor
inc
div
daa
js
pop
or
shr
fsub
cmp
fsubr
pop
aaa
and
xor
pushf
adc
adc
int3
cmp
mov
setae
and
bound
jnp
xchg
mov
pop
or
pop
ficom
addr16
loopne
arpl
enter
pop
mov
xor
mov
dec
es
pop
mov
pusha
inc
enter
sub
xchg
mov
pop
and
inc
in
adc
push
dec
retf
push
jnp
fist
add
aas
es
jge
lahf
jo
dec
aaa
pusha
add
shl
xchg
push
in
or
lds
jo
or
push
mov
mov
jmp
jmp
sub
jge
inc
push
int
iret
ins
or
adc
add
idiv
jmp
add
bound
mov
sub
fwait
movs
or
jo
xlat
xor
loope
cmp
and
xor
arpl
outs
mov
jns
rol
push
out
les
mov
or
xchg
add
adc
push
pop
sbb
mov
ret
test
test
or
add
aam
sub
int
and
xlat
jge
dec
cmp
push
wbinvd
(bad)
jecxz
inc
and
ins
test
sub
pop
repz
not
loope
cmp
lods
cmp
jp
out
jne
inc
mov
ins
or
adc
cs
sub
sub
pop
rol
cmp
sub
ja
add
mov
ret
fbstp
jecxz
stos
outs
inc
std
or
cmp
adc
(bad)
sbb
xor
aam
or
rcr
rcr
dec
dec
pop
dec
jge
pop
xchg
mov
pusha
out
mov
xchg
aas
dec
fld
push
jae
sbb
ins
adc
xchg
xor
and
or
inc
test
lods
pop
ror
(bad)
mul
jne
jnp
add
jl
shl
or
daa
sbb
xchg
sub
fwait
inc
popf
xchg
daa
pop
mov
movs
mov
and
pop
mov
mov
dec
(bad)
jge
jns
pop
xchg
cwde
les
stc
adc
dec
imul
inc
xor
aas
popa
aas
add
pop
movs
mov
sbb
dec
xlat
xor
lods
inc
or
and
int3
cmp
or
retf
mov
mov
leave
jne
ret
push
gs
mov
imul
repz
jne
xor
inc
maxps
add
jmp
sub
cmp
pop
sub
inc
sub
push
rol
inc
inc
sub
sbb
nop
cmp
(bad)
sbb
xor
jns
inc
sub
inc
test
loop
mov
and
mov
imul
shl
and
rcr
add
mov
je
and
xchg
xor
cmc
or
jg
sub
push
xchg
imul
xchg
or
inc
inc
adc
int3
xchg
in
pop
add
pop
das
std
je
mov
gs
aaa
add
leave
cmp
loopne
pop
aaa
push
push
mov
loope
(bad)
dec
icebp
fxch
push
inc
dec
fwait
sub
sbb
shl
(bad)
daa
in
test
push
xor
push
rcl
jge
inc
inc
shl
push
xchg
das
or
das
push
jmp
lods
add
fwait
sub
in
xchg
lods
pop
and
shl
addr16
ffree
in
sub
and
fadd
ins
sub
retf
mov
push
outs
or
push
sbb
and
xor
rol
retf
fist
rcl
or
xor
jne
das
pop
mov
pusha
pop
cmp
pop
movs
mov
adc
cmp
pop
pop
jo
rol
mov
adc
ja
xchg
loope
jmp
push
push
xchg
mov
pop
jge
jns
outs
pop
jne
cs
push
or
imul
test
add
fiadd
inc
mov
sbb
and
icebp
shr
daa
and
rcl
outs
pop
in
(bad)
lods
cmp
push
pop
inc
xor
fld
pop
aas
test
das
movs
in
and
sbb
daa
aad
or
push
sub
mov
jae
je
cmp
mov
jae
arpl
ret
inc
push
sub
xor
push
and
(bad)
and
mov
imul
mov
icebp
sub
emms
xchg
pusha
(bad)
pop
mov
adc
lods
das
adc
adc
sbb
pop
push
mov
inc
sub
jo
rcl
xchg
inc
sbb
and
addr16
or
test
or
shr
sub
add
sub
jecxz
mov
fistp
movhps
xchg
pop
pop
movs
jecxz
in
add
in
sbb
jb
sub
adc
xchg
aas
test
sub
add
xchg
jl
xchg
adc
ret
leave
sub
sbb
test
cmps
add
add
mov
in
inc
jbe
js
push
jmp
sub
inc
repz
pop
add
fimul
sbb
das
push
adc
into
and
cmp
jmp
jo
jg
js
js
and
add
mov
inc
add
jns
mov
vmwrite
addr16
ins
inc
neg
push
pop
pop
dec
gs
mov
add
popf
inc
or
or
fsub
jb
add
xlat
in
add
pop
add
push
test
xor
add
or
xor
or
and
test
fnstenv
pop
mov
push
mov
push
adc
stos
das
sbb
cwde
aaa
and
fadd
inc
jae
or
fldenv
pusha
adc
push
scas
inc
fisubr
popa
pop
and
add
mov
add
inc
add
and
add
mov
add
add
pusha
add
fld
das
add
pop
and
jle
lea
or
pop
ins
ror
sbb
add
or
gs
and
test
clc
add
or
retf
stos
add
pop
das
cmp
add
push
and
in
pop
push
or
mov
mov
adc
and
enter
add
or
add
sbb
add
sub
jmp
add
add
add
push
imul
cmp
jb
imul
ficom
(bad)
adc
outs
cmp
aad
pcmpgtw
not
inc
das
nop
fs
inc
outs
ins
lahf
or
in
lahf
mov
jne
inc
imul
inc
outs
retf
dec
or
bound
jb
jbe
retf
jns
dec
jae
push
inc
push
push
je
inc
fwait
mov
int
bound
cmp
int
mov
ins
ror
fmul
(bad)
outs
in
fs
inc
and
jne
or
inc
inc
fs
ret
mov
push
fidiv
inc
js
xor
mov
xor
daa
push
adc
add
inc
push
mul
and
cmovg
inc
push
or
adc
xchg
outs
(bad)
or
cmovns
outs
sahf
push
push
push
ja
fs
faddp
adc
adc
add
adc
or
or
fcomp
ins
adc
push
add
je
adc
or
mov
mov
sbb
outs
lds
add
or
mov
ins
popa
sqrtss
fwait
cmp
dec
adc
loope
or
mov
inc
jle
ins
arpl
ins
xchg
pop
jbe
inc
bound
nop
mov
xor
femms
xor
xchg
sbb
icebp
fsubrp
nop
xor
outs
sbb
fdiv
gs
add
jae
inc
out
pop
(bad)
es
jae
push
and
or
ret
pop
mov
and
cmp
ret
loopne
fsubrp
adc
pop
sbb
dec
jp
cwde
outs
push
jge
cmp
sbb
hlt
ja
jl
sbb
pop
arpl
mov
imul
int
push
jns
xor
ins
push
test
imul
jae
adc
inc
nop
adc
push
push
pop
adc
dec
or
xor
inc
shl
push
xchg
xchg
sub
jbe
push
and
add
in
sbb
pop
pop
adc
shr
test
adc
inc
imul
sbb
push
ret
imul
rol
ret
adc
ja
and
inc
out
arpl
push
test
push
dec
and
mov
mov
jo
data16
adc
cmp
xchg
or
or
cmp
push
and
xchg
push
js
fsubr
cmps
sub
sbb
int
and
cmps
mov
ins
mov
dec
ins
outs
jmp
dec
jae
inc
and
mov
nop
inc
cmps
or
xchg
cwde
inc
fs
call
cmp
jae
dec
or
popa
cmp
lods
mov
fadd
pusha
push
ins
sub
lods
in
and
pop
(bad)
nop
mov
rol
jae
das
adc
ins
fdiv
out
pushf
mov
in
outs
fadd
outs
push
lds
cmp
icebp
or
adc
inc
adc
ret
pop
ret
ficom
mov
xchg
mov
fstp
cmp
es
push
cmps
sbb
xchg
mov
add
nop
not
lock
fdiv
inc
punpckldq
mov
jo
pusha
dec
lds
mov
pop
in
bound
mov
add
frstor
les
mov
mov
dec
repnz
mov
fisubr
jne
cs
data16
push
jo
lods
aas
or
pop
(bad)
fdiv
fild
pop
jae
or
fcom
std
mov
jb
ins
aaa
pop
(bad)
jle
adc
arpl
adc
xor
ficom
outs
ret
fild
adc
inc
sbb
dec
ja
fs
inc
inc
call
test
mov
push
out
or
inc
add
pop
jnp
imul
xchg
jo
or
cwde
xor
out
cmp
dec
pop
data16
test
xchg
lds
loope
adc
jne
push
add
xchg
sub
and
adc
sbb
push
jmp
mov
fwait
add
mov
leave
data16
cmp
or
ins
push
test
push
imul
push
sbb
add
je
jne
adc
push
test
sub
xchg
imul
es
cmp
stos
sbb
and
mov
or
xchg
fs
ror
in
inc
or
push
mov
inc
adc
mov
mov
inc
pop
jmp
xchg
dec
dec
adc
xchg
inc
mov
je
or
lods
or
ret
clc
add
sub
sub
push
jae
rcr
ror
adc
add
dec
and
adc
mov
xchg
xchg
je
das
arpl
das
sbb
push
stc
push
cmp
xor
arpl
jne
sbb
inc
mov
or
dec
js
xchg
pminub
data16
xchg
or
push
mov
inc
cld
je
add
dec
xor
retf
adc
and
or
and
ror
cdq
outs
inc
push
pop
lds
leave
inc
jno
je
sbb
imul
fstp
inc
cmc
or
or
xchg
mov
(bad)
clc
xchg
and
mov
inc
xchg
or
add
int
mov
or
and
popa
sahf
or
or
ins
addr16
aaa
or
inc
(bad)
mov
shr
shl
push
nop
in
and
or
fsub
push
push
daa
data16
mov
adc
add
push
xchg
js
cmp
fwait
add
adc
pop
adc
test
mov
pmaxub
cmp
ret
shl
adc
add
cmp
scas
fdivr
pop
nop
sbb
inc
fs
imul
xor
(bad)
xchg
(bad)
jg
push
push
inc
add
dec
add
add
pop
inc
sub
sar
add
sbb
xor
and
or
or
fldcw
cld
or
xchg
in
popa
xchg
out
cmp
add
push
int
in
cmp
or
jo
pop
adc
mov
add
sbb
add
sti
push
enter
dec
inc
inc
xlat
les
pop
mov
outs
jmp
retf
dec
shr
inc
inc
push
inc
rol
jnp
mov
daa
faddp
inc
push
push
or
int
or
daa
add
xchg
out
in
add
add
jo
push
movs
sbb
mov
cs
jae
nop
loope
add
push
jb
or
xchg
popf
xor
push
daa
cmps
cmp
add
dec
mov
push
jo
seto
jb
mov
gs
xchg
je
xor
add
fsubr
add
add
inc
add
add
add
add
add
add
aam
add
xor
int
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
xor
add
add
arpl
