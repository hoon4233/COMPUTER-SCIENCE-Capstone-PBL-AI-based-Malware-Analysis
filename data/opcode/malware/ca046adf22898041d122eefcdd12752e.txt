sti
das
add
add
sbb
stc
xchg
push
jb
jns
push
ins
enter
pop
ins
cmp
inc
ins
outs
dec
jae
and
outs
add
jns
and
jo
imul
jb
dec
jae
jae
jbe
in
je
inc
jne
jne
sub
mov
xor
ja
ja
mov
dec
dec
cld
fidivr
js
mov
jns
inc
jp
cmp
in
and
jl
pop
les
sbb
jb
jge
jle
jle
jg
xchg
and
jg
cmp
in
xchg
fnstcw
or
cmp
jb
mov
jg
pop
pop
test
inc
mov
test
dec
xchg
jbe
enter
xchg
adc
ins
aam
je
adc
mov
sbb
outs
adc
mov
std
fisttp
fcmovne
xchg
and
mov
into
into
push
inc
adc
xor
(bad)
aas
push
rsqrtps
rcl
jb
push
pop
aaa
cmovb
xchg
mov
pop
xor
dec
fist
mov
ds
push
(bad)
outs
lock
jbe
pop
push
das
and
sahf
and
jl
adc
add
sbb
mov
mov
push
jg
aas
inc
dec
outs
ret
ret
cmp
cmp
dec
xor
inc
ret
popf
sub
lahf
das
or
ret
fist
pop
(bad)
cdq
pop
pause
dec
cld
ret
mov
push
pop
ins
div
push
cwde
adc
xchg
fild
es
pushf
sbb
inc
mov
cmovns
push
cmp
cs
das
dec
sub
cmp
cmp
or
and
inc
scas
cmp
fdiv
fld
push
orps
daa
daa
daa
sub
xor
cld
jle
cmovg
add
pop
xrelease
cmp
or
inc
push
lahf
and
fs
rcl
dec
(bad)
xchg
and
pop
cs
fstp
shl
dec
(bad)
movs
add
jno
jb
ss
aas
adc
xor
dec
push
fnstcw
outs
retf
adc
xchg
aas
sub
push
into
sbb
push
jae
pop
and
jbe
int
cmp
outs
out
push
fist
xchg
movs
sub
repz
in
imul
mov
push
xor
xchg
out
call
xor
push
push
lods
inc
ds
xchg
shr
add
sahf
sub
push
jae
cmp
repnz
push
repnz
or
xor
push
jb
cmp
mov
cmp
add
in
scas
scas
retf
loop
pop
in
pop
dec
mov
out
xchg
addr16
mov
xchg
in
adc
xchg
dec
ds
iret
mov
in
dec
pop
jl
sahf
addr16
cmps
retf
pushf
cmp
xchg
push
ins
and
pop
sub
in
test
or
pop
leave
jae
cmp
out
stc
add
mov
(bad)
loopne
sbb
daa
iret
jae
mov
addr16
ds
bound
mov
xchg
jl
aad
arpl
sub
pushf
cmp
mov
fs
jns
cmp
icebp
jae
xor
adc
cmp
iret
sahf
pop
sbb
gs
out
adc
cdq
mov
call
imul
push
addr16
cmp
push
adc
inc
push
retf
imul
pop
leave
jae
cmps
retf
out
xchg
out
(bad)
and
ss
xchg
out
(bad)
mov
aaa
outs
dec
sahf
addr16
pop
ja
mov
iret
xchg
jl
outs
cwde
mov
jns
(bad)
popf
out
das
jo
cwde
mov
leave
out
retf
out
sbb
ds
leave
repz
jo
(bad)
aas
jb
out
imul
mov
shl
je
push
out
xchg
iret
(bad)
pop
jne
fwait
xor
pop
jbe
test
outs
xchg
das
ja
out
jns
cmp
xchg
cmc
out
cmp
sbb
push
xor
bnd
(bad)
fcmovnu
add
addr16
ds
gs
jnp
repz
sahf
sahf
mov
(bad)
cmp
ds
stos
fcom
push
jge
cmp
out
push
jle
push
lods
jns
or
sbb
pop
jb
push
repnz
nop
out
repnz
enter
out
jns
jae
cmps
retf
nop
int
add
or
in
mov
xchg
out
imul
xchg
out
popf
mov
daa
iret
xor
int
dec
ds
clc
adc
sub
xchg
cmp
dec
sahf
ret
imul
sahf
inc
pop
jne
push
mov
cmp
je
cmps
retf
dec
call
inc
jns
sub
outs
mov
(bad)
jge
mov
repnz
sbb
sub
sahf
cmp
aad
pushf
xor
stc
adc
sbb
cmp
(bad)
repnz
sub
test
ficom
push
jnp
iret
repz
repz
xchg
mov
fdivr
daa
push
bnd
xchg
jp
or
xor
jae
cmp
arpl
pop
and
repz
leave
inc
xchg
imul
ret
sub
and
mov
daa
iret
jecxz
push
fwait
inc
xchg
out
jns
jne
sahf
int
out
ret
sbb
mov
in
dec
repz
call
repz
and
ins
nop
lods
call
lahf
daa
scas
in
jns
bound
leave
out
jns
vpunpckhbw
mov
out
xchg
mov
out
sahf
jle
ret
iret
xchg
xor
sbb
sbb
or
xchg
out
test
out
jmp
daa
fmul
push
aas
or
cmps
and
mov
xchg
dec
mov
sbb
jbe
cmp
ss
pop
inc
(bad)
not
int
ss
sub
add
jns
jp
cmc
setle
fadd
movs
call
xchg
add
push
das
fstp
add
cmp
and
or
pop
mov
push
inc
push
push
cwde
(bad)
out
repz
mov
jle
add
test
cdq
pop
push
xchg
es
call
xor
push
mov
dec
pop
cmp
push
cmp
dec
fwait
in
in
enter
popa
aas
stos
imul
ins
and
push
test
test
mov
mov
ins
fbstp
xchg
aas
xchg
sahf
mov
repnz
cmps
inc
add
cmps
call
sbb
mov
stos
in
enter
stos
sub
pop
or
lods
out
not
lods
std
inc
mov
lods
mov
and
sub
pop
pop
cs
xchg
dec
or
xor
mov
adc
shl
mov
adc
inc
sub
xchg
js
jo
mov
das
push
sbb
in
jl
in
or
inc
cs
push
adc
sbb
pop
cs
ins
aam
jl
pop
xchg
jge
in
jl
or
fisttp
or
das
sti
cs
retf
dec
mov
or
xchg
and
push
mov
add
enter
push
sub
pop
and
push
stc
pop
test
inc
adc
add
pop
in
nop
addr16
sbb
pop
inc
adc
bnd
fcomp
test
or
and
sti
mov
cmp
lods
out
aam
inc
jle
add
sbb
pushf
xchg
add
sbb
das
add
mov
jnp
sub
xor
jne
jp
jb
push
ss
fisttp
add
add
mov
ins
rol
sbb
sub
xor
jmp
fsub
dec
or
adc
xor
lock
or
add
or
pop
inc
sti
cmps
enter
push
mov
xchg
inc
inc
inc
addr16
xor
inc
push
push
push
ja
adc
inc
jno
imul
pop
push
inc
cmp
inc
jle
xor
push
in
int
cmp
shl
and
pop
mov
add
lock
inc
push
mov
xchg
jmp
(bad)
lahf
mov
out
xor
add
inc
inc
lods
jge
gs
lock
jnp
repz
push
fld
out
iret
sub
(bad)
in
cmp
imul
sub
movs
sub
out
sub
out
sbb
cmp
xchg
xchg
mov
cmc
sub
dec
outs
push
retf
inc
fs
dec
loopne
add
scas
inc
mov
pop
push
sahf
inc
repnz
mov
ret
fldcw
dec
mov
adc
pop
and
rcl
inc
repnz
aas
pop
inc
pop
fwait
ret
sub
dec
lea
mov
add
pushf
pop
and
call
pushf
aad
hlt
sar
test
dec
movs
cmp
js
aas
(bad)
ins
scas
xchg
add
cmp
jmp
hlt
cmps
das
dec
and
cmc
add
ss
scas
test
push
mov
pop
add
leave
and
adc
sahf
call
test
sub
mov
in
pop
sbb
pop
and
push
pop
into
pop
jae
mov
les
pop
inc
push
div
in
ds
repz
adc
push
sub
repz
cmp
pop
ins
jns
cli
cmp
sub
dec
rol
inc
pop
stos
add
sbb
sti
sbb
jae
fstp
jne
jbe
jb
mov
loopne
imul
jg
ins
xor
clc
cs
pop
add
aaa
adc
inc
cld
iret
sub
mov
outs
push
adc
jbe
ds
out
dec
enter
in
push
stc
push
push
sahf
out
call
mov
popa
ins
out
sub
push
adc
pop
lock
pop
repnz
aad
mov
jns
pop
test
pop
or
pop
xor
xchg
sbb
lahf
add
mov
sbb
lahf
push
pop
and
js
mov
movs
in
in
cmp
xor
and
enter
mov
cmp
dec
aam
loope
out
sti
or
loope
sahf
cmps
adc
adc
pop
(bad)
out
push
rcr
push
sbb
jns
pop
xor
das
jp
aam
je
jns
dec
jl
jge
jle
xchg
jg
outs
add
and
and
pop
add
sar
inc
pop
shl
jl
mov
int3
iret
clc
push
test
and
int
outs
pop
add
adc
outs
inc
pop
and
mov
sar
jecxz
std
or
clc
pop
add
and
int
push
xor
test
ret
leave
dec
push
imul
pop
repnz
mov
in
or
outs
or
iret
outs
(bad)
repnz
jb
add
sbb
in
jl
std
test
in
pop
mov
fwait
inc
iret
loopne
mov
hlt
or
rol
cmp
repz
fsub
xor
dec
sbb
invd
mov
popa
mov
bound
leave
arpl
or
mov
addr16
icebp
test
lock
lock
adc
sub
push
sub
add
daa
cli
push
inc
add
push
xor
jbe
jge
(bad)
push
xor
dec
add
pop
push
add
add
test
jle
out
push
imul
cmp
jb
aam
mov
pop
mov
cmp
push
pop
dec
enter
cmp
jo
inc
clc
add
repnz
pop
cmp
cmp
sahf
stos
mov
out
cmp
stc
push
cmp
and
out
sub
sub
sahf
out
jnp
xchg
out
in
dec
sbb
cmp
cmp
pop
jbe
sti
mov
test
dec
pop
repnz
call
pop
inc
and
and
mov
xchg
xchg
mov
test
repnz
cwde
or
nop
xchg
or
cdq
dec
call
call
icebp
xchg
xchg
popf
aaa
sahf
sbb
jo
outs
sub
js
jg
push
pop
pop
sbb
jmp
cli
dec
xchg
or
pushf
jl
mov
imul
dec
sub
test
and
inc
or
mov
mov
cs
inc
push
in
inc
test
rol
sub
push
pop
ror
or
mov
nop
fisttp
and
enter
enter
dec
fcom
enter
call
daa
in
pop
adc
fwait
or
je
clc
dec
sbb
sahf
pushf
je
add
nop
inc
mov
add
(bad)
cmp
pop
cmp
xor
inc
in
adc
dec
repz
jp
jl
mov
cmp
es
fsubr
and
add
ja
fiadd
push
and
repz
out
inc
xor
inc
push
iret
repz
pusha
push
adc
repz
int3
fadd
and
dec
jne
push
push
jp
imul
cmp
jno
nop
clc
jmp
inc
jae
xor
pop
dec
xor
mov
xor
outs
inc
jbe
push
inc
xor
inc
push
dec
xor
dec
je
ins
dec
arpl
xor
mov
push
push
test
inc
xor
dec
dec
push
jns
jle
aaa
stc
call
pop
outs
inc
push
inc
je
pop
lods
push
push
addr16
push
cmp
imul
adc
(bad)
xchg
pop
inc
add
inc
adc
add
inc
in
ret
mov
repnz
push
ins
add
push
push
dec
push
add
movs
mov
adc
add
jne
xchg
idiv
dec
add
data16
push
push
add
add
ficom
sub
gs
outs
(bad)
mov
fsub
aaa
sti
inc
fs
lds
mov
and
push
sbb
rol
xor
scas
sub
jmp
mov
lods
xor
dec
stos
xor
xchg
inc
outs
mov
xchg
jb
sti
cmp
push
loop
or
cmp
outs
addr16
ins
mov
ins
gs
dec
sti
(bad)
(bad)
fld
push
jae
data16
push
imul
je
imul
or
and
dec
dec
fwait
adc
ds
lock
inc
or
outs
inc
push
loope
ja
pusha
das
add
sub
call
xor
jns
arpl
fs
into
jg
sar
xor
xor
push
aas
inc
dec
push
popa
jb
dec
inc
jmp
inc
jb
xor
aas
inc
xor
push
ss
push
push
xor
jo
inc
sub
sbb
(bad)
mov
jp
gs
dec
outs
push
jle
ja
push
arpl
outs
imul
dec
bound
cmp
jp
(bad)
push
ss
jo
inc
sub
es
xor
cmp
inc
cmps
inc
ss
(bad)
sbb
retf
pop
pop
jbe
popa
inc
jb
jb
jbe
jb
ins
outs
ja
pop
rcr
inc
jb
gs
inc
add
das
dec
mov
(bad)
dec
mov
jl
test
dec
jg
outs
mov
xchg
mov
push
jae
dec
and
jno
cmp
inc
push
shl
and
sbb
mov
pop
pop
dec
repz
(bad)
mov
add
inc
mov
add
inc
mov
in
adc
aas
xchg
add
push
mov
test
mov
call
jp
add
inc
mov
inc
dec
dec
push
or
int3
mov
or
outs
pusha
stc
lahf
or
inc
inc
icebp
mov
jmp
pop
leave
or
mov
inc
scas
jae
bound
inc
(bad)
pop
in
jmp
(bad)
(bad)
(bad)
inc
lods
and
out
jge
scas
cdq
mov
inc
mov
xor
xchg
pop
call
shr
in
mov
add
out
in
(bad)
mov
add
sahf
out
push
or
adc
out
sahf
out
and
sub
sti
adc
xor
add
neg
lds
sub
fs
push
iret
repz
js
mov
jnp
add
nop
xchg
repz
adc
iret
mov
mov
sbb
xor
dec
push
imul
or
sbb
imul
enter
ss
je
inc
inc
sub
mov
jp
mov
sbb
sub
xchg
jp
sbb
cmp
mov
(bad)
ins
popa
adc
jae
and
jmp
sub
dec
hlt
stos
xor
imul
rcr
ins
xor
cld
push
or
xor
aad
outs
mov
xor
push
push
dec
jbe
xlat
xchg
xor
adc
inc
sub
fs
movs
popf
retf
and
push
inc
inc
push
or
or
mov
mov
and
mov
adc
retf
xchg
das
or
sbb
add
add
jl
stc
repnz
and
add
add
sub
and
movs
mov
out
jo
jb
pop
mov
sub
xchg
retf
in
loopne
int3
int3
cld
(bad)
mov
je
data16
jns
xor
push
add
pop
dec
les
ins
imul
lock
jmp
dec
cmp
push
dec
jb
aaa
pop
dec
aaa
push
push
add
dec
push
jno
inc
dec
adc
addr16
ins
outs
(bad)
je
cmc
(bad)
push
inc
dec
pop
gs
imul
js
jns
popa
push
pop
pop
(bad)
(bad)
mov
jp
xor
pop
push
jp
xor
dec
dec
in
lock
dec
imul
pop
jne
cmp
fisttp
nop
jbe
je
jbe
push
outs
inc
dec
je
pop
inc
addr16
push
lock
cmp
aam
add
push
stos
lods
push
jmp
xchg
inc
mov
sbb
pusha
add
and
cmovge
in
ja
add
and
ss
sti
rcr
js
push
add
mov
or
mov
lea
mov
ds
les
inc
or
test
jg
out
into
sub
and
push
stos
fadd
add
(bad)
pop
or
repnz
inc
cmps
dec
mov
inc
cmps
cmps
cmps
dec
addr16
jle
outs
imul
inc
outs
add
(bad)
jg
adc
popa
ds
mov
dec
mov
push
std
(bad)
(bad)
jmp
or
sub
dec
call
test
jbe
push
push
dec
xor
ins
ret
call
xor
inc
dec
pop
arpl
cmp
push
push
push
imul
or
xor
inc
push
out
fs
push
push
xor
xor
dec
xor
ins
outs
dec
or
fbld
push
adc
adc
cwde
pop
jo
ds
lds
mov
pop
jne
inc
inc
pop
add
es
jbe
jne
nop
inc
mov
push
mov
shr
jns
add
pop
mov
enter
push
(bad)
jne
test
xchg
pop
push
outs
fidiv
inc
es
pop
outs
push
scas
mov
imul
ja
and
mov
popa
pop
ss
dec
arpl
xor
mov
sahf
aaa
es
jae
fstp
lock
add
je
bound
cmps
xor
jnp
mov
add
bound
cmps
fidivr
fist
gs
ja
inc
push
je
loopne
push
(bad)
(bad)
sub
xlat
gs
or
out
mov
aas
fisttp
xchg
jnp
inc
mov
inc
xor
mov
je
inc
push
dec
ret
ret
mov
jo
mov
ins
cmp
inc
sub
push
bnd
jae
sbb
dec
push
xchg
xchg
fisub
inc
arpl
imul
in
loopne
aaa
dec
push
(bad)
jp
loopne
loope
and
push
gs
and
outs
jns
aaa
jbe
lods
cmp
mov
adc
push
xor
pop
aaa
fcmovnbe
push
aaa
inc
push
mov
ror
bound
xor
jno
popa
bound
push
ss
div
pop
jmp
dec
scas
inc
jb
rcl
mov
dec
push
inc
xor
fcom
dec
pop
cmp
add
push
mov
dec
ds
push
loope
adc
rol
mov
pop
jne
pusha
sbb
mov
mov
push
xlat
imul
test
cli
(bad)
jp
ja
jg
mov
xchg
ins
jmp
add
sbb
mov
xchg
inc
pop
add
iret
and
imul
(bad)
popa
push
mov
aas
push
dec
push
xor
lds
xchg
ins
scas
jmp
mov
jl
outs
out
and
cmp
pop
dec
jb
cmps
popa
sbb
pop
mov
outs
mov
mov
fs
daa
cmps
dec
dec
bound
cmp
out
mov
jns
retf
mov
push
xor
mov
and
pop
and
xor
dec
jae
sti
cmp
imul
inc
outs
outs
or
je
mov
sbb
push
arpl
dec
outs
fs
pop
sti
js
outs
popa
fs
inc
mov
dec
xor
mov
mov
das
adc
(bad)
xor
add
sbb
dec
outs
pushaw
daa
dec
outs
inc
mov
inc
imul
mov
jl
je
xor
inc
jb
pop
fstp
pop
push
dec
xor
out
fcmovu
imul
push
outs
push
cmp
sbb
imul
enter
jg
jo
bound
outs
fs
fmul
pusha
int
(bad)
outs
inc
pop
mov
add
add
inc
pop
jae
and
jo
dec
test
hlt
inc
js
je
arpl
push
pop
test
addr16
scas
dec
imul
aas
push
outs
ins
jle
pop
dec
fbld
inc
gs
pop
gs
mov
in
xor
push
sti
jae
jo
dec
push
push
jmp
add
aas
daa
dec
adc
cmps
sbb
jo
or
sub
out
pop
dec
and
ins
je
push
push
cli
in
lods
loopne
ins
jo
add
aaa
dec
gs
fcom
push
inc
push
inc
jno
inc
fs
pop
jnp
sti
push
jne
lahf
(bad)
mov
cmovae
(bad)
iret
dec
xor
(bad)
mov
xor
inc
jb
push
mov
pop
xor
inc
cmp
xor
jnp
repz
pop
xor
inc
xor
xor
ja
fbstp
jae
sbb
xor
inc
repz
mov
inc
inc
ds
mov
mov
aaa
dec
cmp
cmp
xor
repz
xor
aaa
inc
loopne
int3
fiadd
lahf
ss
in
call
xchg
jns
es
sub
dec
jecxz
mov
addr16
push
mov
rcr
push
fadd
fidivr
inc
xor
ss
lock
ret
or
jnp
mov
cs
push
push
inc
jp
pop
arpl
sbb
pop
outs
(bad)
jge
pop
mov
sub
mov
stos
dec
das
push
pop
imul
or
cmps
ins
jp
sbb
add
mov
pop
push
xchg
je
add
dec
cs
xor
and
xlat
outs
pusha
iret
dec
out
arpl
iret
loop
xor
push
inc
es
push
push
cwde
xor
ja
mov
push
mov
addr16
mov
sub
jnp
sbb
call
ss
je
mov
mov
and
push
movs
popf
add
push
sbb
mov
aaa
jne
push
ds
or
jb
icebp
daa
iret
adc
das
jo
add
(bad)
push
push
mov
xlat
gs
add
outs
xor
mov
outs
ins
sbb
or
cmp
ins
lahf
and
iret
inc
jl
gs
xor
cs
push
je
pop
xor
idiv
dec
gs
outs
jb
dec
xor
add
imul
ja
or
in
je
xchg
dec
or
add
xor
push
sbb
xchg
and
sub
xor
adc
sbb
add
and
test
sbb
rol
or
pop
and
arpl
ins
sub
sub
adc
outs
mov
inc
adc
maxps
test
cmp
and
ja
add
icebp
test
ja
or
lock
adc
jl
pop
rol
sub
push
pusha
loope
shr
aas
xchg
pusha
mov
xchg
inc
mov
inc
adc
in
in
hlt
push
in
out
in
in
aam
mov
jnp
ja
dec
das
rcl
je
ret
push
fwait
add
and
add
je
leave
repz
fidivr
add
adc
ins
mov
push
fs
push
add
mov
and
test
inc
loop
add
pop
push
pop
aas
adc
(bad)
cs
add
or
pop
fwait
add
mov
das
xor
nop
jbe
jns
push
mov
inc
push
nop
out
ror
sahf
inc
mov
pusha
inc
ror
xlat
mov
push
cmp
add
inc
push
pop
push
std
push
add
sbb
mov
xor
and
push
xor
popa
mov
adc
push
xor
and
stc
push
inc
add
or
scas
cmp
or
mov
pusha
cmps
fwait
or
or
sub
shl
and
vphadduwq
sbb
imul
test
pop
sub
and
ret
mov
nop
inc
push
push
add
test
nop
cmp
loopne
das
jl
pop
enter
mov
xor
test
cmp
scas
jno
adc
ins
dec
or
clc
or
sub
fisttp
push
inc
inc
pop
mov
lods
bound
ja
sahf
inc
or
adc
cmp
add
outs
imul
and
and
cbw
xchg
or
popa
(bad)
adc
or
pop
add
lods
bound
mov
imul
femms
cmp
push
sub
inc
jo
and
bound
mov
add
adc
bound
pop
iret
xlat
inc
jne
mov
inc
xchg
or
cmp
inc
push
or
xlat
cmp
sbb
sub
data16
cmp
xor
(bad)
sbb
dec
inc
lahf
mov
mov
ins
and
inc
psrlw
pusha
cwde
js
(bad)
aad
jne
cmps
fdiv
inc
xor
iret
mov
and
push
pushf
pop
push
clc
imul
push
mov
sbb
jae
pop
jecxz
ficom
add
or
push
leave
pop
sub
call
xor
add
test
movs
and
in
repz
push
enter
cs
or
cmp
(bad)
(bad)
shl
inc
xor
pushf
aas
in
xor
ja
xor
or
pop
jl
pop
push
sbb
dec
js
push
pop
push
xor
add
nop
es
std
adc
sbb
push
push
or
out
push
push
cwde
loopne
pop
jo
popf
out
mov
shr
mov
adc
in
pop
cmp
sar
iret
or
pop
cs
mov
sar
push
mov
add
xchg
sbb
xchg
inc
sub
add
lods
outs
or
addr16
dec
pop
push
js
dec
into
xchg
add
sub
add
pusha
cmp
pop
popf
inc
mov
sub
cmps
pop
ror
push
(bad)
push
xor
jo
nop
fldcw
jg
arpl
dec
pop
mov
adc
jg
xor
repnz
inc
(bad)
xchg
popf
(bad)
test
movs
dec
cmps
in
cmp
cwde
push
das
nop
or
and
push
cmp
jnp
cmp
adc
push
xor
sti
fidivr
bound
lock
mov
sub
push
repz
xchg
pop
hlt
pusha
lods
fs
jp
out
pop
mov
add
dec
push
pushf
cmp
hlt
shl
jmp
dec
aas
ss
sar
xor
inc
push
ins
mov
gs
inc
imul
xor
add
push
xor
jg
hlt
jno
xor
inc
dec
dec
xor
inc
dec
dec
je
imul
push
push
jo
dec
outs
dec
outs
inc
dec
es
push
jae
dec
clc
xchg
jmp
outs
jne
popa
gs
xchg
popa
xor
imul
push
inc
outs
je
dec
outs
jae
jno
arpl
jo
jne
(bad)
(bad)
jg
dec
inc
bound
js
cmp
imul
inc
push
xor
adc
dec
gs
dec
xor
(bad)
idiv
das
(bad)
xor
dec
push
jo
mov
push
ins
xor
push
bound
scas
js
adc
inc
dec
ins
inc
dec
jp
jp
push
fs
jno
fs
mov
cmp
jo
inc
cmp
inc
inc
push
fs
out
(bad)
mov
je
push
xor
jbe
jb
dec
dec
jae
pop
inc
push
jo
push
push
js
fdiv
push
jns
dec
dec
inc
push
push
(bad)
(bad)
mov
jno
jns
addr16
xor
jbe
cmp
add
mov
je
inc
cmp
jbe
ja
cld
out
inc
xor
dec
bound
xor
jmp
sub
push
jl
mov
and
(bad)
jmp
push
mov
mov
inc
cld
mov
or
add
or
mov
outs
jnp
mov
fcom
mov
movsx
test
je
out
lahf
out
ins
ins
les
lea
aas
ins
pop
and
or
sbb
push
sbb
in
mov
add
or
add
int3
ret
ret
jle
pop
or
jge
movs
add
dec
in
loopne
add
mov
ret
cmp
cdq
or
xchg
leave
or
xchg
imul
adc
enter
ins
in
in
rol
sub
ins
enter
shr
and
inc
outs
add
outs
sub
in
data16
dec
add
in
call
fnstsw
add
jo
mov
sbb
dec
jg
pusha
add
push
add
jmp
dec
add
idiv
cld
aas
inc
enter
push
adc
enter
enter
ds
enter
pop
or
enter
and
and
and
or
and
aaa
adc
in
in
pop
and
or
and
sbb
and
and
dec
adc
in
mov
stos
in
adc
jb
repnz
mov
xchg
pop
enter
or
test
inc
leave
jae
leave
or
jbe
jb
jb
push
sub
ja
in
in
pop
push
and
nop
inc
sbb
enter
and
nop
dec
and
or
pop
adc
test
push
mov
or
sub
or
adc
test
or
or
push
(bad)
and
test
sub
nop
add
xchg
test
mov
add
jns
sbb
or
push
dec
cmps
and
repnz
inc
xor
inc
call
test
xchg
add
call
xor
jecxz
in
mov
sbb
or
and
and
and
or
cmp
or
shl
nop
sub
xchg
mov
test
and
xchg
adc
jns
sbb
add
adc
push
test
xchg
push
mov
bound
cmp
dec
xchg
nop
sub
xchg
cmp
das
mov
jb
mov
dec
adc
pop
js
sub
mov
inc
xor
or
push
mov
lahf
add
sbb
or
inc
enter
loopne
and
inc
cwde
adc
in
push
add
and
nop
pop
xor
and
mov
test
sub
nop
inc
sbb
mov
test
dec
enter
push
jne
xchg
pop
inc
jb
mov
add
test
mov
enter
xor
adc
outs
call
or
dec
mov
mov
loopne
sar
je
inc
cmp
mov
sub
js
loopne
cmp
mov
add
fdiv
pop
pushf
neg
dec
push
nop
pop
(bad)
out
out
add
or
popf
xor
fbstp
pop
(bad)
loopne
or
pusha
test
add
mov
and
pop
sub
xor
inc
movs
pusha
cdq
mov
sbb
pop
mov
adc
add
and
sbb
repnz
(bad)
movs
lea
jo
ret
and
scas
xor
sbb
cmp
xchg
push
out
xor
add
jb
nop
add
inc
adc
push
test
add
fiadd
in
mov
inc
and
jno
fnstenv
and
in
push
dec
scas
xchg
pusha
cwde
push
cmp
adc
ss
inc
lahf
mov
push
in
xor
mov
mov
ret
nop
out
pusha
push
aam
jnp
fstp
push
sub
pushf
(bad)
daa
jmp
pop
mov
and
mov
dec
mul
stc
and
mov
fnclex
cmp
mov
push
push
mov
sbb
cwde
jmp
out
add
mov
xor
pop
mov
dec
adc
iret
leave
and
push
or
sti
xchg
add
push
push
push
add
mov
clc
mov
mov
jo
cmps
push
(bad)
pop
call
pop
sbb
add
movs
jb
and
add
cs
cld
(bad)
adc
fwait
inc
or
add
ss
adc
add
in
xchg
arpl
add
aam
int3
push
xor
adc
les
je
cwde
inc
pop
sbb
and
mov
outs
xor
in
mov
rsqrtps
bound
or
jmp
mov
dec
or
adc
cmps
add
cld
pusha
mov
add
dec
enter
pop
push
push
push
test
inc
cmp
in
sbb
inc
push
and
xor
in
push
xor
push
sub
fs
scas
inc
sub
add
xchg
xchg
add
xor
and
movs
or
push
and
cdq
in
in
inc
mov
mov
adc
xchg
xor
push
mov
cmp
rcl
pop
mov
stos
test
push
jae
cmp
mov
imul
popa
test
enter
test
or
dec
and
and
sar
and
and
ret
xor
test
mov
gs
mov
dec
adc
or
mov
jns
add
xchg
push
mov
fs
xchg
sbb
mov
aam
jl
leave
and
pop
xor
js
and
je
mov
add
cmp
jo
les
jo
dec
mov
and
dec
or
ds
sbb
adc
jne
pushf
adc
jno
add
cmp
push
and
push
or
lods
sbb
or
clc
adc
cmp
in
add
lahf
xchg
add
adc
adc
adc
adc
and
and
add
mov
int3
imul
pop
stos
xchg
add
fst
in
ret
sbb
(bad)
imul
cmp
jge
scas
or
pop
push
js
xchg
and
xor
adc
in
pop
push
cmp
sub
mov
sbb
rcl
mov
or
enter
or
pusha
popa
test
imul
push
adc
js
dec
or
ret
nop
call
sbb
rcl
sbb
inc
mov
inc
scas
cmc
hlt
pmovmskb
sbb
loopne
or
xchg
or
sbb
add
inc
jne
dec
inc
cmps
inc
pop
loopne
je
aam
xor
sub
imul
cmp
and
xor
movs
push
fs
inc
push
and
in
adc
pusha
adc
pop
inc
pop
sbb
enter
adc
push
aad
mov
mov
imul
movs
pusha
cmp
and
jg
xchg
stos
sbb
das
inc
or
mov
and
cmp
sbb
mov
or
sbb
call
cmp
and
enter
lock
leave
inc
adc
jb
pushf
sbb
in
add
and
fs
push
mov
xor
xor
sbb
in
xchg
adc
and
nop
xchg
pop
mov
adc
(bad)
sbb
pop
enter
pop
arpl
xor
add
add
sub
pop
xchg
sub
or
in
call
es
xchg
inc
scas
nop
in
add
or
clc
adc
hlt
lock
inc
sub
xchg
push
imul
stos
pop
and
or
dec
bound
movs
sbb
inc
pop
mov
dec
call
cmp
out
mov
cmps
arpl
add
adc
xchg
xor
mov
loopne
nop
dec
es
adc
in
add
fdivr
cmps
pop
lea
push
push
scas
shl
shl
push
inc
lock
mov
jo
pop
loope
arpl
push
aam
dec
add
outs
rcl
scas
add
pusha
ins
sub
pop
lds
jne
mov
jo
mov
cmp
add
mov
mov
ja
sub
scas
loopne
fidiv
mov
fsub
imul
push
and
stos
sbb
jge
rol
mov
xacquire
cmp
mov
loopne
test
mov
cmp
push
pop
adc
sbb
push
xor
add
adc
inc
dec
add
test
xchg
push
mov
mov
mov
adc
add
jb
aam
fcomp
dec
sbb
or
add
dec
push
enter
rcl
xchg
stos
nop
mov
xchg
cmps
add
add
sbb
xchg
mov
and
movs
mov
cmc
adc
mov
mov
pop
inc
repz
pop
ret
fsub
dec
xor
pop
je
adc
leave
enter
cli
adc
cmp
int3
and
addr16
dec
jb
rcl
shl
push
pop
ret
out
add
xor
sub
dec
dec
aaa
sbb
jb
pop
dec
sbb
adc
fdiv
and
sub
mov
imul
xchg
xor
je
add
push
xchg
mov
enter
in
enter
sub
adc
and
shl
adc
rol
rcl
dec
mov
push
test
retf
jmp
xor
repnz
mov
mov
hlt
outs
xor
movs
pop
mov
or
ror
daa
int
jnp
dec
call
mov
dec
jnp
push
(bad)
shr
pop
pushf
and
or
mov
mov
and
mov
jns
xor
in
mov
cmp
or
sub
ret
fs
adc
movs
xor
push
test
call
inc
xchg
dec
lahf
add
jecxz
jnp
call
mov
inc
cs
pop
jl
ins
cmp
mov
js
in
retf
in
fadd
xchg
pop
jb
sub
shr
cmp
adc
nop
xchg
pop
mov
enter
rol
bound
cmp
push
mov
or
add
sar
fwait
shl
pop
enter
sub
pop
cmp
push
or
xor
mov
push
dec
pop
movs
or
sub
popf
xor
push
and
push
pop
into
fisubr
mov
or
adc
adc
pop
psubsb
mov
(bad)
pop
or
shr
fld
add
inc
call
mov
popf
xchg
clc
cld
sbb
mov
xlat
xchg
or
dec
xor
bound
fdiv
test
pop
int3
sbb
in
or
dec
add
int3
inc
and
in
mov
adc
test
pop
leave
sub
or
and
pop
in
push
xor
dec
jb
jae
fucomi
pop
enter
test
ret
iret
int
cwde
dec
pop
cmps
xor
and
dec
jl
and
mov
inc
call
cmp
xchg
inc
rol
cmp
sbb
cs
dec
or
pop
pop
cld
jbe
push
dec
push
push
mov
jmp
mov
xchg
dec
add
push
dec
inc
push
and
push
jb
fisttp
leave
ins
jecxz
xchg
inc
pop
push
movs
shl
dec
ins
sbb
xchg
cmp
pushf
nop
test
cmp
adc
inc
push
cmp
xor
add
pop
xchg
in
sbb
xor
out
jmp
inc
or
fadd
mov
test
arpl
mov
mov
mov
push
cmp
adc
dec
inc
nop
retf
and
xor
xor
and
fsubr
dec
sub
inc
das
inc
push
push
sbb
adc
mov
mov
mov
icebp
cmp
nop
adc
jmp
sbb
jb
xchg
sbb
f2xm1
in
xchg
dec
xor
daa
push
in
inc
dec
fcom
adc
push
pop
leave
adc
inc
scas
nop
push
rcr
daa
jmp
pop
xchg
dec
mov
push
dec
mov
mov
pause
data16
mov
test
pop
enter
cld
arpl
and
xor
mov
ins
dec
ins
push
and
dec
and
dec
cmp
xchg
or
clc
or
jmp
test
jae
addr16
jno
shr
in
pop
mov
add
test
cmp
dec
lock
inc
lock
pop
add
mov
xor
popf
ror
pop
cmp
cmp
mov
lds
arpl
pop
inc
add
enter
ret
pop
add
or
dec
and
mov
sub
or
or
sbb
test
or
in
add
and
dec
enter
sub
add
adc
rol
xchg
or
test
inc
add
xchg
sub
aam
xchg
or
mov
add
cmp
adc
or
sbb
push
test
push
mov
int
fcomi
push
push
and
jne
mov
addr16
xchg
mov
push
sub
jo
dec
jbe
pop
test
adc
jmp
fnsave
mov
dec
mov
inc
pop
and
dec
sub
and
dec
push
(bad)
push
cmp
aad
pop
pop
cmc
push
push
push
clc
mov
or
cs
inc
test
adc
adc
sub
pop
or
test
push
jb
test
adc
fsubr
pusha
sbb
cmp
arpl
push
enter
pop
mov
sbb
push
jo
cmp
adc
sbb
and
or
cwde
push
adc
adc
or
jb
int3
xor
shl
sub
cmps
mov
lds
adc
leave
xor
bswap
add
test
nop
mov
pop
or
add
jb
inc
hlt
adc
jb
inc
sub
push
and
bound
add
in
sbb
in
xor
inc
ss
add
cwde
add
pop
dec
push
fcomp
fadd
fdiv
xor
sbb
inc
and
xchg
sbb
sbb
cmp
pusha
add
sbb
xor
pop
mov
in
push
and
jmp
imul
fadd
fmul
pop
pop
mov
push
push
mov
shl
and
das
pop
inc
stos
pushf
pushf
sbb
lahf
mov
fisub
bound
cwde
add
aam
aam
xchg
mov
fst
xchg
hlt
lock
gs
sub
hlt
lock
or
jb
shr
iret
out
movs
rol
cmp
add
mov
mov
sub
jb
int3
int3
int3
dec
cs
and
inc
push
push
add
pop
movs
xor
or
dec
retf
in
adc
enter
add
dec
in
sub
add
sbb
and
add
push
sub
clc
add
dec
leave
add
or
or
push
push
sbb
in
call
test
sub
push
add
add
dec
push
lea
mov
or
in
add
test
add
in
add
and
loop
inc
stos
nop
push
pop
mov
inc
and
or
fiadd
leave
add
xor
movs
adc
mov
xchg
or
inc
add
adc
jo
sbb
sub
sub
test
or
inc
and
cmp
adc
and
sub
dec
loope
sbb
pusha
fs
dec
add
xchg
pop
sub
adc
dec
push
dec
stos
adc
sbb
lods
mov
lock
push
jb
push
nop
push
cwde
add
(bad)
add
enter
add
fucomi
xchg
xchg
sub
adc
add
cmp
push
shr
cmp
rcr
in
mov
add
test
test
and
scas
in
pop
push
jb
add
or
sbb
xchg
pushf
or
add
adc
push
popa
add
cmc
push
xchg
adc
jecxz
mov
push
jns
data16
inc
xor
jne
dec
shl
push
xor
xchg
mov
scas
xchg
(bad)
mov
inc
push
adc
dec
dec
ret
test
add
pop
dec
mov
mov
aad
mov
xchg
push
jns
or
jo
punpckhbw
dec
pop
sbb
push
mov
push
enter
pop
and
xor
inc
lods
jno
nop
in
jb
aam
xlat
push
nop
push
pop
les
lods
jecxz
cs
cmps
and
inc
inc
sahf
inc
lods
push
xchg
pop
js
mov
mov
add
dec
mov
(bad)
shl
les
imul
jb
push
pop
shl
mov
cmp
fwait
pushf
sub
dec
sub
pop
clc
cld
clc
push
jno
ins
lock
hlt
sbb
add
ins
add
loop
pushf
cmps
cmp
shl
adc
xchg
add
in
call
add
mov
and
xchg
mov
jmp
add
lea
xor
jo
xor
adc
add
rcr
loopne
push
enter
adc
push
jmp
mov
jo
mov
add
push
popa
inc
mov
sub
xchg
fcom
mov
inc
xchg
je
mov
lods
mov
and
add
mov
adc
sti
aam
add
jp
and
lahf
les
stc
(bad)
push
push
in
loopne
loopne
inc
nop
das
mov
movs
jecxz
stos
mov
imul
add
daa
pop
outs
pop
lods
cwde
or
je
mov
mov
mov
call
adc
mov
mov
jnp
bound
push
or
add
mov
pop
push
add
sbb
push
jo
call
dec
gs
push
dec
xchg
mov
add
push
mov
sub
in
enter
adc
mov
add
dec
push
loopne
sbb
int3
sbb
sub
daa
add
pop
sbb
aad
movs
mov
adc
inc
or
sub
and
pusha
and
and
dec
movs
jno
add
sbb
mov
les
push
daa
push
pop
dec
push
sbb
dec
add
and
call
cld
or
push
push
jmp
and
mov
jne
push
dec
and
mov
hlt
test
pop
icebp
pop
push
add
and
sbb
gs
retf
pop
adc
and
ins
ins
pop
jb
in
dec
cmp
push
push
inc
add
or
pop
xlat
push
nop
add
enter
inc
push
inc
(bad)
gs
mov
mov
pop
jl
mov
and
mov
add
shr
jns
cmps
jns
inc
fisubr
mov
imul
sub
ins
cmp
stos
push
xor
arpl
or
mov
pop
adc
mov
cmp
adc
adc
push
and
sbb
cdq
imul
rcl
daa
pop
push
push
push
push
xor
sub
adc
cmp
stos
shl
mov
sub
or
inc
or
dec
(bad)
dec
inc
call
sbb
mov
lods
xor
mov
mov
inc
jp
or
inc
push
out
in
pop
add
push
push
xchg
sbb
sbb
jae
xor
outs
inc
pop
jp
mov
shr
enter
push
sbb
scas
dec
clc
add
pop
call
mov
and
cmp
ds
pop
push
inc
cmps
adc
stos
sbb
arpl
add
and
add
xchg
dec
inc
stos
inc
jp
(bad)
enter
ds
adc
adc
jb
or
mov
xchg
pop
and
adc
mov
in
adc
add
xor
pop
cmp
cmp
and
es
shr
dec
inc
push
jns
lds
xor
dec
dec
fmul
inc
add
arpl
xchg
push
enter
cmp
dec
pop
dec
cmp
call
add
pop
dec
es
pusha
fs
fnsave
xchg
cwde
out
sbb
push
sub
jp
and
mov
mov
and
sub
add
push
dec
xor
jb
and
push
stc
lods
push
jb
mov
or
adc
add
scas
les
push
nop
add
ss
mov
xchg
cld
les
add
sar
sub
ret
rcr
inc
inc
enterw
mov
xor
sbb
mov
add
inc
or
adc
mov
adc
jl
mov
and
jnp
fdiv
mov
jne
add
add
mov
mov
mov
movs
pusha
xor
add
movs
test
mov
call
sbb
and
or
mov
push
add
les
and
or
(bad)
cwde
out
ret
add
add
cmp
cmp
inc
call
sbb
adc
mov
add
sbb
(bad)
add
scas
pop
mov
bound
call
pop
adc
inc
bnd
adc
adc
inc
repnz
sub
add
add
pop
or
sbb
push
sbb
mov
inc
inc
and
fs
repz
scas
add
mov
mov
iret
bound
rol
and
iret
dec
cmp
xor
gs
push
push
sub
pop
add
lahf
adc
(bad)
call
inc
cs
xchg
les
nop
or
add
stos
inc
test
push
push
push
repnz
dec
xchg
dec
call
jmp
pop
mov
pop
cmc
jae
cs
stc
dec
xchg
push
inc
popf
or
add
or
xchg
test
mov
xor
aam
imul
inc
arpl
push
test
fs
inc
and
adc
es
or
mov
fs
push
or
cdq
fcmove
xor
cld
push
inc
mov
xchg
arpl
dec
jge
stos
mov
pop
adc
mov
subps
cmp
or
test
cmp
or
nop
dec
test
add
add
jb
out
add
sbb
sub
adc
and
test
mov
cmp
sbb
xor
cmp
sbb
inc
add
xchg
or
(bad)
adc
pop
jmp
lea
mov
sub
and
and
add
mov
repnz
add
outs
outs
sub
adc
adc
sbb
sub
add
xor
and
shl
jno
xor
mov
sub
adc
lock
lock
cmp
xchg
in
in
in
or
add
daa
inc
inc
adc
call
and
inc
sbb
pop
mov
pop
or
loop
cmp
ret
leave
aaa
nop
sub
sub
or
fisubr
pop
leave
and
test
and
rcl
xlat
leave
stc
or
add
fsub
or
in
leave
enter
loopne
enter
(bad)
adc
and
add
pusha
adc
dec
pop
scas
or
fmul
fsubr
nop
or
(bad)
mov
adc
and
inc
inc
enter
push
or
adc
inc
lods
jns
dec
or
dec
inc
sbb
(bad)
les
sub
mov
mov
push
in
mov
sbb
loopne
mov
mov
jmp
pop
call
cmp
pushf
sbb
jb
and
xchg
inc
and
adc
dec
dec
sub
enter
dec
jb
mov
and
sbb
push
popa
scas
fadd
pop
in
cmp
bound
lahf
ss
pop
in
int
sub
cmps
and
adc
jo
iret
in
mov
add
xor
or
jmp
add
add
mov
and
add
mov
mov
mov
mov
push
mov
mov
es
cmp
ds
add
adc
cmp
bound
push
xchg
fs
add
mov
adc
and
mov
and
mov
mov
fisub
mov
push
lock
enter
int3
adc
aaa
mov
dec
pcmpgtb
mov
js
and
pop
dec
sub
and
dec
and
add
enter
or
add
push
adc
xlat
jb
push
add
js
je
outs
(bad)
fld1
push
shr
add
arpl
pop
das
pop
jns
mov
add
push
and
and
test
mov
or
lods
and
test
(bad)
cmc
stos
nop
and
push
add
push
pusha
pop
push
nop
pusha
pusha
mov
int
cmp
push
or
lods
icebp
and
sub
pop
sbb
jns
xchg
mov
xor
lods
pusha
push
and
enter
outs
leave
sub
int3
add
int3
rol
and
arpl
push
jb
push
cmp
fs
jo
ror
pusha
jae
sbb
adc
adc
push
lods
inc
sub
arpl
lods
in
adc
inc
daa
mov
mov
or
retw
add
cmp
xor
retf
call
out
mov
aad
and
mov
stc
outs
push
xor
cdq
push
popf
push
loope
sbb
dec
push
push
or
enter
push
test
push
test
xchg
or
dec
xor
pusha
stos
jmp
retf
test
xor
adc
addr16
fmul
aas
mov
fnstcw
ja
les
sbb
or
hlt
or
pop
test
mov
push
mov
adc
sub
lods
xor
push
adc
lock
hlt
lock
add
gs
pop
or
inc
ss
out
pop
inc
mov
cmp
xchg
push
pop
pushf
test
sub
ss
inc
xchg
je
sub
(bad)
add
shr
lea
pusha
mov
nop
push
nop
inc
sub
xor
xchg
and
gs
xor
xor
dec
nop
xchg
inc
ror
or
mov
sub
add
xor
adc
dec
xchg
clc
dec
xchg
lock
cwde
jo
sub
lds
rol
cmp
std
cmp
aas
pushf
dec
fsubr
loop
cli
ins
push
add
mov
test
pusha
inc
leave
pop
movs
repz
cwde
lea
mov
adc
jo
or
cmp
dec
cs
sub
jg
into
or
shl
adc
leave
loop
stos
cwde
in
mov
sahf
aas
and
movs
mov
add
push
jne
cs
jmp
sub
ret
std
xor
stos
rol
sbb
addr16
jg
in
add
mov
popf
ror
xchg
hlt
cld
add
rcpps
repnz
inc
pop
adc
or
add
leave
inc
das
cmp
adc
adc
sbb
push
adc
test
mov
outs
adc
and
push
mov
pop
jg
jo
sub
out
mov
sahf
sbb
pop
and
leave
add
pop
inc
cld
or
stc
pushf
cmp
ds
and
add
add
and
rol
cs
push
xor
or
iret
xor
jno
nop
je
pop
cmp
mov
pop
lea
nop
das
and
pop
and
(bad)
idiv
nop
pop
sub
or
mov
sahf
inc
adc
mov
or
mov
dec
adc
mov
in
adc
cmp
pop
and
cmp
mov
es
push
leave
push
leave
add
inc
inc
xor
inc
scas
ficom
cmc
dec
stos
add
jo
push
inc
mov
add
xor
mov
add
xchg
mov
cmp
or
adc
sbb
adc
xor
(bad)
xor
and
push
jo
out
jecxz
scas
push
enter
push
push
test
pop
aam
jns
add
nop
(bad)
jb
ret
pushf
mov
or
mov
loop
or
add
pop
adc
cmps
ins
fs
ficomp
adc
and
and
push
es
pop
pusha
xchg
or
or
out
jle
and
sbb
add
jno
(bad)
lahf
sbb
(bad)
xor
add
cmps
movs
mov
and
push
push
mov
outs
popa
sub
cmp
jae
dec
es
sub
xchg
mov
sub
es
sub
xchg
mov
sub
es
sub
mov
jb
sbb
xchg
xchg
and
xchg
inc
and
and
xchg
dec
and
adc
xchg
xchg
mov
movs
cmps
xchg
or
or
scas
stos
pop
mov
scas
mov
or
or
scas
mov
mov
mov
or
scas
mov
nop
cwde
ret
les
(bad)
mov
or
enter
into
leave
add
test
rcl
and
or
and
fmul
add
test
fist
and
or
in
loope
add
in
stos
out
pop
adc
pop
cmp
push
(bad)
aam
mov
adc
aam
rcl
retf
inc
xor
repnz
es
lods
movs
(bad)
jmp
sbb
in
stos
mov
pop
cmp
rcl
je
in
sub
aaa
and
(bad)
sub
sub
jb
push
daa
add
sub
sub
xor
cmps
mov
cmp
add
out
dec
lock
or
icebp
cmp
push
push
push
sbb
scas
and
sbb
push
(bad)
xlat
xchg
or
lods
repz
mov
pop
push
push
mov
add
push
jb
sbb
scas
nop
stos
in
cli
sti
loopne
cdq
inc
std
(bad)
and
lock
add
push
repnz
add
sub
in
add
hlt
nop
stos
add
scas
movups
cmp
adc
adc
enter
pop
sbb
sbb
adc
push
xor
and
and
es
mov
leave
pop
pop
pop
js
mov
xchg
push
mov
push
scas
cmp
(bad)
sar
sbb
mov
aam
rcl
mov
js
rol
xchg
js
sbb
daa
add
cmp
add
(bad)
ret
neg
sbb
inc
push
push
add
cmp
fxch
test
mov
and
cs
leave
push
xor
xor
jb
and
cs
sub
dec
stos
ins
pop
out
dec
xchg
fstp
pop
fsubr
push
repnz
in
js
dec
and
aaa
cmp
mov
outs
jg
jb
xchg
cmp
add
nop
stos
in
inc
inc
out
sub
aaa
push
adc
inc
enter
add
dec
push
and
add
ds
inc
dec
and
add
mov
jecxz
outs
and
jmp
sub
xchg
push
add
cmp
push
push
add
dec
leave
jae
push
add
push
and
loopne
sbb
xor
pop
pop
sbb
xchg
adc
add
sbb
dec
pop
sub
arpl
popa
dec
arpl
loop
push
leave
and
pop
add
or
add
pop
ins
inc
push
bnd
cmp
and
push
enter
pusha
test
addr16
stos
repz
inc
test
ins
ins
add
jo
mov
or
in
mov
es
js
jnp
sub
jmp
adc
mov
adc
push
inc
push
jl
daa
xchg
inc
push
jle
jg
aad
loope
add
leave
sub
sub
and
add
push
mov
mov
xor
xor
push
xchg
mov
jmp
es
inc
test
jno
test
inc
push
inc
xchg
cmp
sbb
sub
inc
mov
loopne
mov
sti
pushf
sbb
pop
sub
in
jb
pop
sbb
sbb
mov
in
mov
mov
xlat
mov
pop
nop
xchg
sbb
add
xchg
stos
xchg
or
xchg
add
je
add
cmp
pop
mov
push
adc
push
repz
ds
jb
fwait
mov
aam
pushf
nop
adc
daa
add
add
pushf
popf
sbb
int
sahf
cmp
mov
pop
and
and
dec
dec
leave
pop
and
mov
inc
push
and
mov
jb
dec
test
enter
stos
dec
dec
and
cwde
rcr
enter
inc
inc
je
add
sbb
mov
adc
mov
pop
and
mov
cmc
or
dec
sbb
data16
xor
adc
stc
ds
outs
xor
pop
dec
push
add
add
mov
mov
sbb
rol
jb
sbb
jo
or
mov
xlat
shl
inc
retf
jae
cs
push
int3
sub
loope
(bad)
enter
push
inc
ret
dec
enter
cmp
or
and
xchg
sbb
inc
scas
sub
enter
add
push
xchg
int
cmp
xchg
cmp
shl
nop
inc
dec
es
ins
adc
or
jp
in
cs
dec
cs
shr
(bad)
xlat
sti
call
mov
adc
push
leave
add
fsubp
loope
fs
sub
mov
sub
xchg
or
jmp
inc
cmp
xor
add
retf
and
pushf
add
inc
inc
sti
sub
jb
cdq
push
sub
cwde
mov
mov
mov
add
std
jo
data16
xchg
jle
int3
(bad)
(bad)
adc
push
xchg
lock
mov
dec
add
in
mov
add
ffree
mov
mov
and
push
enter
cli
sti
cld
cmp
(bad)
and
add
push
push
add
add
add
sub
inc
push
sub
shl
enter
and
xor
and
arpl
test
mov
sbb
sbb
or
or
sbb
pop
scas
xchg
out
jl
and
add
push
xchg
stos
daa
and
and
nop
and
sbb
inc
push
cmp
or
sub
xor
enter
cmc
aaa
cmp
and
inc
leave
mov
push
and
inc
add
test
inc
add
and
mov
xor
mov
arpl
sti
and
add
mov
arpl
stc
adc
pop
and
movs
push
jno
retf
pop
add
xchg
pop
pop
add
jmp
and
in
push
cmp
inc
sub
adc
adc
je
popa
add
and
jns
arpl
fimul
sub
call
push
rcl
add
and
and
int
sbb
loopne
movs
and
adc
popa
shl
pusha
and
inc
and
xchg
add
sub
jl
add
add
adc
outs
add
dec
call
push
repnz
push
fiadd
xchg
retf
and
jne
stos
add
and
xchg
and
adc
pop
or
aaa
movs
and
mov
add
jb
add
test
pop
xchg
dec
cmp
xor
add
jnp
xor
sub
call
cmp
inc
aad
push
sti
lods
sbb
or
or
in
sbb
in
je
adc
inc
mov
and
leave
add
or
dec
dec
cmp
sbb
leave
les
sti
fadd
xor
enter
int3
add
add
enter
cmp
pop
dec
nop
(bad)
dec
inc
or
dec
dec
pop
sub
pushf
es
mov
add
pop
rcr
dec
and
sub
push
fcom
dec
ret
xor
dec
in
xchg
int3
int3
enter
test
std
cld
std
sub
inc
sub
xor
fist
cdq
inc
xchg
xchg
inc
cmps
xchg
test
add
test
cmps
test
push
nop
sub
cdq
lods
nop
stos
in
call
scas
mov
add
dec
push
repnz
clc
std
push
lea
cmp
cmc
nop
adc
cmp
div
cmp
xor
jmp
stos
xchg
cdq
inc
scas
nop
mov
in
sub
cmc
(bad)
push
xor
and
iret
rcl
into
push
xor
add
fld
add
cmp
add
add
add
add
sbb
dec
add
add
or
in
in
leave
mov
call
pop
in
add
add
icebp
add
add
xor
clc
stc
sti
dec
lds
retf
popf
mov
add
or
add
add
add
or
or
or
scas
adc
scas
xchg
or
push
sbb
push
pop
ins
sub
add
ins
scas
mov
push
inc
add
mov
or
sbb
fist
mov
dec
in
add
in
mov
in
jno
or
dec
loopne
dec
sbb
inc
(bad)
fcom
pushf
enter
inc
xor
add
enter
inc
fmul
pop
enter
cmp
test
pop
or
add
mov
in
adc
inc
stc
pop
aad
sub
push
push
xchg
push
pusha
arpl
ror
dec
es
scas
inc
es
shr
ret
vunpcklps
add
or
add
mov
mov
push
inc
ins
and
mov
xor
or
fwait
popf
scas
stc
les
enter
cmp
mov
and
xchg
fistp
(bad)
xchg
pop
and
mov
in
and
adc
inc
inc
add
add
ss
repnz
pusha
adc
enter
inc
pop
and
jb
sbb
add
fmul
test
pop
or
adc
add
sbb
clc
clc
sbb
fsub
lock
call
add
add
cs
fsub
fadd
push
out
daa
test
rcr
in
ret
repz
repnz
adc
les
test
add
jnp
push
xor
mov
jne
add
dec
or
xor
gs
cmps
mov
adc
(bad)
int
bound
or
popa
test
fld
xchg
pop
test
xor
and
pusha
mov
pop
repnz
or
je
mov
test
and
xchg
(bad)
xchg
jbe
das
mov
or
dec
push
dec
push
enter
fs
mov
sbb
mov
inc
dec
jb
inc
add
add
sbb
inc
cmp
sub
in
add
or
and
dec
cwde
cmp
clc
icebp
add
push
xchg
adc
and
push
and
fs
ins
lock
aas
add
and
sbb
inc
adc
cdq
(bad)
test
push
sbb
leave
add
inc
lock
xchg
sbb
js
je
fs
or
stos
jo
jo
sbb
add
and
xor
fs
fwait
push
movs
adc
pop
gs
mov
inc
call
push
xchg
adc
movs
inc
leave
or
nop
sub
mov
sbb
rcr
push
push
js
or
je
fwait
or
jo
cmp
mov
(bad)
aam
mov
nop
add
ret
sbb
or
gs
retf
jo
pusha
cmp
sbb
fild
fdivr
and
xchg
pop
pop
rcr
imul
sub
xor
rcr
pop
mov
popa
std
jo
sbb
jne
mov
mov
pop
lods
test
les
push
push
add
imul
in
push
retf
push
pop
cmp
hlt
and
push
jmp
lahf
pop
repnz
call
push
call
jmp
fsub
inc
sahf
lock
movs
adc
add
and
mov
sub
pop
and
xchg
movs
push
stos
mov
cmp
fcom
sbb
mov
adc
add
add
ss
and
xor
fidiv
dec
adc
or
pop
test
pop
add
mov
xchg
pop
and
dec
and
xor
int
add
adc
pusha
call
lock
leave
imul
adc
jb
inc
or
fs
or
lea
inc
or
push
loopne
cmp
test
pop
pop
add
add
cmp
add
and
or
xlat
adc
je
rcr
push
in
fcom
push
mov
pop
leave
cmp
push
lea
and
scas
arpl
or
adc
or
lods
push
sbb
nop
add
xchg
push
push
mov
add
sub
inc
test
jb
sahf
adc
xchg
mov
clc
mov
ret
add
jp
adc
mov
das
xor
pop
jmp
mov
in
in
loopne
push
enter
adc
je
jnp
and
push
stos
fwait
adc
or
and
lahf
and
out
mov
mov
sub
inc
jb
or
sbb
add
stos
xchg
sub
test
repnz
test
inc
pop
pop
mov
pop
sbb
pusha
push
pop
ror
jb
pop
fild
in
cmp
mov
inc
dec
leave
out
and
and
push
or
daa
inc
push
add
inc
lods
or
sub
add
push
pop
pop
and
lods
add
or
or
add
xlat
mov
call
push
and
nop
add
je
or
mov
push
pop
cmps
in
add
sub
repnz
mov
mov
or
xor
test
cs
xchg
add
test
jle
fmul
pusha
dec
nop
inc
pop
and
in
mov
push
xor
test
inc
shl
inc
adc
loopne
icebp
pushf
je
add
fdiv
push
int3
dec
pop
mov
je
ins
cmp
aam
dec
test
jp
push
push
sbb
ins
ins
push
test
pushf
ret
dec
dec
or
je
jne
sbb
sub
adc
cmps
or
inc
mov
jno
mov
fcom
cmp
mov
sub
mov
and
xor
jo
cwde
nop
nop
push
stc
mov
ins
cmp
sub
sub
and
xchg
jl
fs
push
mov
jb
leave
in
pusha
inc
inc
pop
inc
and
movs
lahf
aam
bound
sbb
loopne
sbb
lock
les
dec
in
sbb
and
mov
xchg
and
mov
cmp
out
jne
ins
arpl
cdq
sbb
inc
into
inc
mov
pop
(bad)
fcom
pop
adc
(bad)
bound
in
dec
call
add
repz
xor
stos
inc
and
aad
test
xchg
pushf
mov
sbb
sbb
pop
or
sbb
nop
sub
mov
cmp
cdq
mov
test
mov
xchg
cmp
int3
lock
fsubr
ss
inc
push
inc
scas
push
dec
cdq
add
mov
pop
xor
xor
das
sbb
inc
dec
push
xchg
mov
add
sbb
leave
test
or
out
adc
adc
fisttp
pop
adc
sub
dec
enter
sub
cmp
adc
push
test
push
adc
and
stos
add
cmps
sbb
xor
(bad)
xor
inc
scas
xor
stos
inc
ds
enter
jne
cmp
pop
and
dec
push
or
mov
add
fs
xor
enter
mov
inc
das
movs
add
scas
rcr
mov
(bad)
xor
lahf
xchg
inc
out
ins
sub
mov
dec
pop
pop
mul
sbb
(bad)
fistp
cmc
sbb
push
inc
add
leave
aam
add
sub
mov
pop
mov
loop
imul
and
sbb
dec
push
leave
pop
sbb
int3
lods
bound
cmc
xchg
ret
xor
jae
push
mov
cmp
nop
pop
test
and
jne
jb
add
out
push
test
add
push
aaa
test
jmp
and
and
dec
xchg
sbb
loopne
das
jno
xor
movs
test
push
xchg
ret
nop
push
xchg
push
(bad)
pop
repnz
test
mov
scas
and
add
je
and
leave
push
dec
or
dec
xchg
cmp
add
push
xchg
jae
push
inc
(bad)
sub
inc
mov
int
add
pop
outs
adc
push
xchg
lock
adc
push
xor
sub
mov
push
ins
imul
mov
cdq
call
and
jns
aam
xor
or
rcl
mov
inc
shufps
and
sbb
mov
mov
add
scas
sub
add
xor
pop
test
xor
mov
or
dec
inc
dec
adc
movs
pop
mov
movs
xchg
shl
or
sub
pop
imul
cld
std
hlt
std
dec
arpl
dec
in
fsub
sbb
(bad)
lock
cs
lods
std
repnz
test
pop
movs
lods
pushf
enter
jl
jb
test
ins
fwait
pop
pusha
inc
mov
push
daa
and
and
or
adc
daa
cld
std
lock
cdq
or
fmul
sbb
mov
mov
mov
nop
inc
mov
daa
mov
dec
cmps
cmps
and
ja
add
leave
jnp
inc
inc
jg
(bad)
(bad)
inc
lods
addr16
test
fisttp
addr16
mov
ror
ins
xor
rcr
cmp
xchg
add
add
dec
sbb
movs
inc
add
imul
xor
or
fs
cs
add
dec
call
movups
jns
or
test
add
dec
mov
test
jno
nop
xlat
movs
(bad)
ja
and
mov
push
add
sbb
test
jo
repnz
sbb
push
std
ds
dec
push
push
std
push
std
ins
std
js
inc
mov
xchg
inc
inc
mov
mov
mov
inc
mov
adc
push
push
in
pop
rcl
in
in
adc
cmps
mov
mov
fstp
push
sbb
fst
and
sbb
or
add
mov
push
stc
scas
add
imul
std
adc
cmp
jb
hlt
std
in
in
enter
add
fcom
add
loopne
xor
jb
dec
std
std
std
std
xchg
dec
pop
and
pusha
dec
push
aaa
hlt
xchg
dec
stos
in
push
or
dec
and
push
dec
sar
add
add
ret
lds
mov
xor
xchg
add
jmp
push
jo
enter
adc
inc
jb
adc
dec
pop
pop
push
int
add
nop
sub
push
jle
push
mov
inc
loope
jmp
inc
shl
fisubr
jb
lods
xchg
movs
xchg
push
fcom
jb
cmp
add
xor
mov
sbb
jns
xchg
push
test
push
mov
cwde
adc
mov
cdq
pop
shl
js
dec
mov
leave
jecxz
mov
aaa
les
mov
into
add
add
addr16
test
nop
add
mov
mov
jg
adc
and
or
add
push
mov
push
(bad)
loope
das
lock
inc
mov
push
jmp
adc
and
dec
mov
int
push
(bad)
push
adc
xchg
in
pop
lds
in
sar
sbb
push
rol
or
(bad)
loop
in
mov
mov
add
stos
outs
or
push
ja
sti
add
mov
xor
cmps
push
in
jge
stc
mov
xlat
or
rcl
mov
and
js
push
sbb
retf
add
xlat
nop
in
mov
xor
jecxz
add
push
in
dec
dec
push
test
cs
push
js
in
push
sub
inc
cmp
cmps
mov
xchg
push
enter
adc
cld
(bad)
cld
(bad)
fsub
fs
push
xchg
retf
xor
ins
add
add
outs
movs
inc
ret
or
push
sbb
fs
push
and
xor
loope
pop
data16
add
jmp
ins
and
xchg
xchg
test
inc
nop
or
inc
sti
add
aaa
sbb
imul
cmp
dec
dec
pop
pop
inc
cmp
add
cmp
daa
inc
loope
jb
sbb
pop
push
ss
sub
imul
in
mov
movntps
cmps
ror
jb
in
in
fadd
sub
pop
jb
rcr
fmul
xor
sub
nop
and
fmul
test
jle
xor
es
call
and
jb
push
movs
aam
sti
add
and
xor
rcl
xchg
add
les
cmps
add
fs
in
dec
mov
add
xor
add
xchg
mov
pusha
dec
cmps
xchg
mov
sbb
mov
in
add
or
nop
stos
and
sbb
push
mov
shl
ins
adc
xchg
or
add
mov
leave
mov
mov
mov
enter
adc
cmps
xchg
sbb
mov
sbb
lahf
js
push
outs
les
stc
loop
or
scas
push
rol
icebp
aam
daa
and
ret
mov
xchg
fiadd
adc
pop
cmp
mov
cwde
jo
nop
pop
mov
(bad)
aam
jge
adc
es
or
jb
lds
mov
daa
push
outs
push
dec
jl
mov
dec
dec
xor
mov
pop
shl
(bad)
mov
push
jb
xor
inc
cwde
(bad)
fwait
js
pop
jo
dec
out
mov
fwait
jbe
mov
sub
dec
aam
les
pop
push
daa
sub
popa
fild
add
mov
pop
fistp
mov
mov
out
mov
mov
xchg
adc
pop
dec
fbld
or
mov
add
imul
mov
mov
jno
mov
shl
aam
stos
aam
cmp
je
sbb
aas
int3
mov
mov
repnz
adc
fadd
push
call
dec
xor
out
lods
bound
(bad)
and
xor
mov
jl
cwde
add
add
adc
push
jl
xchg
add
dec
es
movs
loop
mov
movs
add
imul
push
pop
fsubr
into
add
daa
int
and
mov
jecxz
rcr
pop
lds
push
add
lock
xchg
bswap
enter
smsw
push
push
jmp
test
adc
and
mov
xor
call
mul
test
loopne
loopne
cmp
aam
mov
xor
ficomp
cmp
dec
pop
ins
lods
mov
in
xchg
inc
jb
fs
mov
les
inc
pop
callw
sbb
cdq
data16
xor
mov
inc
movsx
je
pop
pop
cmp
mov
lods
sahf
jmp
mov
push
push
aam
dec
push
add
lock
pop
scas
mov
(bad)
cmp
mov
enter
ror
mov
arpl
sar
mov
ds
add
xchg
dec
sub
mov
jmp
call
push
lods
lods
pop
ret
add
mov
dec
jmp
pop
xor
ror
cmp
or
add
sbb
mov
loop
mov
push
mov
add
nop
cmp
mov
cmp
mov
cmps
pop
in
icebp
shl
fsub
jecxz
leave
xor
adc
push
push
ret
pushf
pushf
pop
in
pop
in
push
imul
cwde
mov
push
xchg
stos
xor
fcom
nop
and
dec
sbb
icebp
mov
ror
arpl
sbb
mov
xchg
test
pop
push
fsubr
outs
and
push
aas
cmps
mov
fsub
cwde
pusha
push
push
push
xchg
mov
sbb
sbb
js
sub
hlt
add
dec
fdiv
jmp
js
jl
fcomp
mov
fs
js
and
int3
sbb
push
daa
cdq
idiv
pop
jb
adc
or
icebp
ins
and
rcr
push
nop
push
sbb
nop
mov
fs
inc
(bad)
xchg
fs
dec
ret
sti
inc
fdiv
or
jo
arpl
mov
out
add
icebp
inc
push
and
pop
or
dec
dec
call
or
and
add
push
or
mov
fist
add
je
push
push
cli
jne
jl
leave
mov
cmp
lahf
add
xor
outs
ins
in
and
inc
inc
jb
test
adc
push
inc
mov
push
jb
xor
or
int3
push
cmp
and
and
fadd
xchg
fwait
movs
stos
je
and
popa
cdq
and
jb
lods
cdq
test
fs
mov
mov
je
inc
adc
and
adc
in
test
icebp
or
loope
out
xor
inc
or
jbe
or
inc
cli
mov
shl
jmp
xor
inc
(bad)
adc
mov
xor
dec
aas
cmp
add
mov
mov
test
xchg
xchg
inc
add
shl
in
inc
mov
xor
lods
(bad)
xor
ficomp
call
enter
or
js
or
jb
shr
pop
leave
push
push
add
jge
das
or
jne
fs
cmp
or
sub
je
jge
pop
or
arpl
loop
xchg
je
push
scas
inc
xchg
mov
push
cmp
ja
mov
add
(bad)
rcr
daa
pop
mov
jns
xchg
push
(bad)
xor
test
sub
mov
sbb
and
arpl
dec
xchg
or
movs
mov
and
adc
xchg
adc
dec
bswap
movs
push
and
pop
movs
dec
xor
in
test
cmp
jp
mov
mov
enter
or
leave
inc
rcl
and
cmp
add
xor
fcom
repnz
jbe
test
clc
adc
add
std
cdq
xchg
mov
push
inc
mov
pusha
pop
dec
sub
jne
inc
inc
std
xor
jl
test
dec
fwait
push
rol
lock
add
mov
adc
imul
fs
sbb
push
push
mov
or
shl
lea
(bad)
cmp
xchg
pop
or
mov
mov
test
ret
cld
sahf
or
xor
icebp
rcl
xchg
call
push
or
push
pop
sbb
rcl
fld
fnstsw
sub
dec
test
sar
sub
xchg
cmp
dec
pop
iret
add
pop
leave
push
pop
call
dec
pop
inc
xchg
push
rol
test
inc
add
mov
add
add
jo
or
adc
clc
mov
mov
inc
dec
arpl
test
lods
and
and
add
sub
retf
xchg
sub
mov
mov
xchg
push
or
push
mov
adc
adc
call
sub
scas
pop
add
inc
push
imul
fcmovb
add
dec
test
jl
mov
sub
inc
and
call
stos
jne
sbb
stos
xchg
(bad)
sbb
pop
in
or
adc
push
xor
xchg
mov
bound
in
ret
pop
mov
and
push
adc
arpl
or
adc
push
leave
ror
cmps
nop
add
xchg
sbb
sbb
pop
or
xor
push
test
js
sub
movs
and
rcl
xor
sbb
lahf
add
jecxz
int
xchg
out
sub
and
xor
push
xor
add
and
push
add
add
enter
enter
shl
cmp
fbld
and
adc
mov
daa
add
or
movs
xchg
jnp
rcl
lds
je
or
pop
sub
inc
xor
mov
mov
mov
inc
mov
dec
loopne
test
and
cmp
sbb
or
mov
lds
rcl
adc
in
add
push
sbb
movs
movs
xor
fisttp
cmp
or
push
jb
cmp
inc
lods
sti
ins
xchg
or
shl
cmp
add
cmps
sub
fmul
fs
and
xchg
cmps
or
xchg
xor
pop
jo
or
lock
imul
pushf
xchg
sbb
xor
and
jb
mov
sub
fwait
or
jnp
test
or
add
pop
inc
mov
rcr
sub
jb
push
lds
mov
mov
sbb
cmp
fadd
pcmpeqw
push
xor
les
je
arpl
cmp
jmp
sbb
add
add
and
or
dec
inc
inc
xor
add
adc
mov
arpl
add
sub
sbb
xchg
pop
adc
or
test
add
xchg
shl
inc
pop
xor
xchg
dec
in
and
and
add
cdq
loop
imul
(bad)
ins
adc
push
xor
push
adc
xor
shl
adc
cmc
inc
sub
call
and
push
add
pop
mov
push
or
mov
pop
test
mov
xlat
daa
push
or
and
pop
inc
aad
ds
push
add
sub
aad
and
mov
inc
push
(bad)
js
fistp
push
aam
dec
sbb
push
add
bound
mov
jle
sub
or
mov
rcl
mov
push
call
and
or
and
repnz
sbb
adc
scas
movs
inc
loopne
shl
pushf
fxch
jae
pushf
add
pushf
adc
pop
pop
sbb
ret
popf
pop
or
dec
pop
ror
nop
pushf
ret
pushf
push
add
xchg
sub
xchg
or
cmp
sbb
test
inc
pop
mov
sbb
push
adc
test
xchg
jge
ins
sub
push
add
or
out
push
sub
and
pop
push
push
mov
int3
(bad)
sbb
(bad)
aam
jno
call
sub
movs
mov
pop
add
inc
mov
inc
jmp
push
push
sbb
pusha
xchg
rcl
in
xchg
dec
push
dec
pop
add
inc
(bad)
xor
and
test
add
and
push
push
test
inc
xor
xor
add
ret
or
pusha
and
adc
adc
ret
add
sbb
push
into
je
pop
popa
inc
enter
rcr
jle
push
nop
push
pop
adc
pop
das
add
and
(bad)
cmp
add
inc
pop
dec
mov
mov
adc
rol
jb
aas
sbb
adc
aam
add
xor
push
nop
aam
aam
loopne
dec
stos
adc
fcomp
fadd
les
xor
and
add
jo
call
mov
fidiv
lds
add
or
sbb
lea
enter
add
add
inc
inc
push
pop
add
pop
adc
xor
or
mov
in
xor
test
push
imul
mov
sub
jb
mov
cmc
pop
xor
xchg
pop
cld
(bad)
adc
dec
mov
or
add
inc
xchg
cdq
movs
xor
inc
add
inc
bound
test
push
int3
add
enter
mov
(bad)
rcr
jecxz
xchg
imul
dec
cs
leave
in
and
xchg
mov
dec
dec
icebp
jo
cmc
dec
aam
mov
mov
(bad)
jmp
mov
push
leave
and
push
add
xor
clc
leave
leave
adc
mov
dec
push
adc
dec
inc
data16
lods
out
mov
xchg
jb
movs
dec
cmp
in
pop
in
clc
or
pusha
aad
pusha
jmp
dec
movs
lea
cmp
jns
pop
pop
ins
push
push
push
arpl
pop
cmc
dec
jecxz
jl
sar
add
lods
push
xor
adc
dec
lock
push
mov
adc
aad
xchg
retf
in
or
add
cs
scas
movs
or
test
test
dec
test
jo
push
cmps
fsubr
jb
jns
pop
inc
or
push
pop
inc
movs
retf
movs
mov
test
dec
xor
pop
cmc
inc
repnz
enter
add
sti
inc
repnz
push
inc
inc
mov
mov
sbb
dec
push
pushf
pushf
add
mov
mov
and
fcomp
mov
movs
pop
es
pop
xor
leave
push
inc
sub
cwde
xchg
or
leave
cwde
sbb
mov
inc
or
mov
test
scas
cmp
xor
mov
arpl
nop
sbb
inc
mov
in
enter
movs
adc
inc
bound
ss
int
pop
shl
popa
sbb
mul
out
push
add
dec
pop
ds
inc
push
das
cmp
pop
add
rcl
loopne
add
sar
add
sbb
add
test
rol
adc
das
or
cmp
mov
mov
das
sub
mov
test
fs
retf
loopne
rol
loopne
dec
call
inc
dec
leave
in
(bad)
or
mov
shl
cld
fld
mov
mov
fist
clc
imul
push
movs
rsqrtps
and
shr
ret
push
mov
mov
repz
shr
popa
ins
add
inc
test
arpl
clc
pop
nop
xchg
mov
mov
push
inc
mov
dec
cmp
xlat
(bad)
clc
add
mov
hlt
aad
ror
sub
push
popa
push
push
pop
lea
and
cmps
add
add
add
fs
inc
add
or
mov
xchg
xchg
mov
and
dec
ds
pop
adc
and
push
push
(bad)
pop
pop
int
sub
popa
push
dec
lods
push
popa
mov
and
inc
test
ss
sbb
or
add
in
dec
loopne
add
xchg
and
iret
inc
and
nop
xchg
in
cld
cmp
push
and
cmps
test
retf
dec
and
or
xchg
add
sub
nop
sub
nop
nop
dec
scas
enter
clc
and
adc
or
arpl
push
jl
dec
mov
and
and
scas
dec
and
sbb
sbb
xchg
xchg
add
test
xor
test
cmp
push
push
cwde
dec
jne
fisub
add
xchg
jnp
add
xor
sar
add
inc
and
or
rol
ror
sub
mov
pop
rcl
mov
mov
ja
push
mov
push
mov
push
sbb
mov
fwait
and
lods
push
in
jo
adc
mov
sbb
push
jge
enter
outs
sub
arpl
retf
or
popf
adc
sbb
xor
add
add
pop
xchg
jnp
mov
pop
xchg
mov
dec
add
push
std
mov
xchg
jo
lea
push
test
add
push
popa
sbb
nop
xchg
es
mov
pusha
jo
mov
ss
call
or
xchg
or
pop
test
lea
cdq
inc
out
cmp
lock
ret
cmc
das
sti
and
pop
mov
push
jo
rcl
push
cmp
or
call
std
adc
rcl
add
or
inc
icebp
inc
adc
cdq
call
sbb
cdq
fadd
jl
and
es
pop
in
jo
mov
jns
fdivr
sbb
in
add
in
movs
and
mov
fwait
and
imul
inc
and
pop
inc
pop
ret
sub
push
sbb
pop
sbb
and
fadd
xor
or
sbb
mov
jne
sub
pop
jb
pushf
add
fadd
sub
or
push
and
dec
test
add
pop
lods
lea
cmps
add
add
adc
push
loope
sbb
rol
outs
cmp
gs
or
push
cmps
std
sbb
or
sbb
push
shl
adc
add
mov
test
sub
xchg
dec
cmp
pop
(bad)
adc
and
popf
dec
push
jae
sub
sbb
inc
sar
cmc
imul
inc
rcr
retf
or
test
enter
test
shl
lds
xor
and
mov
add
add
dec
add
in
mov
dec
and
test
imul
sbb
call
adc
(bad)
push
mov
movs
mov
dec
add
int3
fisttp
or
fidivr
mov
out
xchg
dec
xor
fwait
add
mov
fdivr
add
mov
pop
or
dec
adc
and
or
add
or
mov
pop
or
rol
dec
or
inc
or
push
add
sub
enter
je
or
test
cmp
jl
push
js
sub
inc
push
int3
iret
add
ss
js
jmp
mov
das
in
sbb
shl
mov
inc
xor
mov
sub
or
adc
out
or
cmp
lods
xor
fwait
pop
mov
cmc
cmp
jne
push
add
adc
into
add
jns
cmps
sar
push
cmp
add
xor
add
push
xor
mov
or
leave
sub
pop
mov
push
cmp
jo
pushf
nop
addr16
mov
and
sbb
adc
add
ja
xor
push
push
sub
call
and
xchg
(bad)
fist
add
jl
rcr
and
mov
retf
lea
mov
inc
xchg
and
les
or
cmp
and
enter
repnz
dec
fmul
inc
pusha
mov
sub
pop
add
add
mov
nop
or
add
mov
xchg
pop
leave
sub
add
jmp
pop
mov
out
test
mov
add
dec
cmp
xor
mov
sub
cmp
and
mov
mov
add
xchg
add
add
popa
pop
pushf
es
sub
sbb
inc
mov
xchg
mov
xor
test
lahf
aam
pusha
movs
push
and
push
dec
int3
sub
dec
and
in
inc
test
(bad)
cmp
js
inc
loope
push
pushf
cs
daa
or
xchg
dec
dec
cmp
sahf
or
push
stos
push
mov
cmp
pop
mov
popf
adc
sub
mov
pop
in
(bad)
cmp
fsub
pop
dec
push
nop
movs
mov
adc
enter
popa
pop
test
aaa
nop
pop
adc
lock
jl
scas
adc
sub
inc
pop
pop
adc
jns
jb
scas
jne
or
daa
movs
push
mov
ins
movs
xor
xor
sub
pop
or
and
inc
test
mov
int3
jge
add
cmp
or
and
xchg
imul
aad
or
or
push
iret
movs
add
sub
je
push
cmp
adc
dec
ss
sbb
adc
mov
add
sub
lds
mov
ins
test
leave
jl
adc
add
xchg
je
sub
push
adc
xchg
dec
inc
imul
and
sbb
push
jl
mov
xchg
adc
sbb
inc
xchg
scas
shl
sub
sbb
retf
and
push
push
dec
mov
fs
jnp
xor
sbb
inc
and
or
jp
adc
or
dec
sbb
adc
test
retf
rol
and
aaa
add
div
push
and
mov
pop
add
xchg
push
xor
push
xor
pushf
dec
and
stos
jno
or
mov
ret
inc
inc
and
cmp
push
fsub
and
dec
dec
loopne
int
loopne
cwde
sbb
pushf
add
es
rcr
add
shr
fld
popf
inc
add
jo
inc
mov
mov
test
in
add
mov
sbb
dec
call
out
pop
xor
and
ins
out
push
sub
adc
sbb
lahf
jmp
inc
pop
(bad)
adc
test
in
lea
push
and
and
jns
xor
(bad)
js
inc
cmps
in
xor
add
adc
inc
(bad)
loopne
pop
lea
add
add
xchg
or
add
test
adc
(bad)
adc
jnp
mov
sbb
test
test
gs
out
fwait
adc
in
xchg
fstp
lods
or
add
nop
sub
add
push
or
adc
xchg
pop
mov
leave
mov
add
lods
jo
in
mov
mov
inc
xor
or
and
xchg
jmp
out
and
xchg
push
enter
mov
adc
mov
mov
inc
test
mov
aam
or
inc
push
lea
in
aam
xor
stos
movs
jne
push
rcr
and
test
movs
pusha
retf
inc
mov
or
in
mov
add
or
adc
inc
movs
push
or
pop
js
and
in
add
jp
pop
dec
call
xchg
and
dec
xchg
fs
adc
add
inc
adc
mov
into
xchg
aaa
mov
cmp
fcom
mov
add
add
call
retf
clc
and
inc
push
cmp
in
add
aas
mov
or
inc
pop
push
inc
mov
nop
or
aas
sbb
push
and
or
es
xchg
ret
dec
stos
inc
mov
leave
daa
nop
sub
inc
call
inc
dec
and
outs
mov
stos
dec
push
cdq
inc
cmps
nop
cmp
test
fs
cdq
inc
pop
fsubr
int3
add
and
or
add
adc
mov
sbb
call
push
outs
push
jne
ja
jno
popa
jo
push
or
or
xor
lea
rcl
ins
mov
arpl
sbb
jg
inc
jne
push
xor
gs
sti
jne
ins
imul
jo
push
ins
js
call
fadd
cmp
inc
inc
push
jbe
jns
bound
in
(bad)
(bad)
jmp
inc
push
add
push
push
jne
push
jp
inc
push
ins
xor
sbb
outs
and
sub
(bad)
inc
xchg
mov
xor
mov
in
movs
jge
xor
pop
dec
add
icebp
pop
lock
(bad)
mov
mov
stc
shl
or
and
scas
packuswb
(bad)
(bad)
push
test
mov
pusha
jg
addr16
leave
pushf
push
xchg
xor
mov
mov
push
and
ins
(bad)
(bad)
jg
in
cmp
sbb
movs
fdivr
xchg
sub
mov
pop
(bad)
in
rol
adc
(bad)
(bad)
(bad)
call
into
fisttp
pusha
out
shl
ror
adc
mov
test
(bad)
(bad)
(bad)
jmp
aam
scas
push
leave
pop
dec
retf
int3
pop
mov
and
push
mov
pop
out
xlat
dec
push
sub
(bad)
(bad)
call
out
fcomp
hlt
lods
cmp
xor
xor
and
mov
sbb
mov
sbb
mov
out
(bad)
(bad)
(bad)
jmp
sbb
stos
pusha
mov
mov
dec
aam
pop
push
push
lods
sar
cdq
xchg
inc
cmp
sbb
xor
xchg
mov
mov
ret
outs
adc
xor
scas
clc
(bad)
(bad)
fisttp
movs
mov
movs
adc
mov
jmp
fst
(bad)
call
cmc
daa
xchg
or
dec
add
test
jle
mov
das
loop
(bad)
(bad)
(bad)
(bad)
mov
or
xchg
jae
dec
xor
(bad)
daa
lods
sub
mov
or
mov
(bad)
(bad)
jmp
repnz
push
adc
rcr
sbb
into
adc
jmp
cmp
jmp
sbb
test
int
or
pop
ins
(bad)
(bad)
mov
leave
mov
or
outs
jnp
pop
xor
cmp
movs
(bad)
(bad)
(bad)
(bad)
fistp
lods
xor
lock
jmp
call
test
retf
stos
addr16
movs
test
(bad)
(bad)
(bad)
inc
sub
mov
shl
mov
sbb
pop
mov
int
(bad)
(bad)
(bad)
call
int
xchg
push
add
cmps
aam
pop
push
jno
movs
dec
jmp
mov
lods
cdq
cs
jmp
(bad)
rcl
cmp
push
jae
dec
jle
pop
adc
mov
out
add
(bad)
(bad)
(bad)
cmp
sub
add
and
mov
pop
aas
fstp
icebp
inc
call
(bad)
(bad)
(bad)
cmp
es
movs
lds
ret
fstp
push
cmp
pop
outs
mov
inc
or
iret
call
je
icebp
(bad)
(bad)
(bad)
push
ret
pop
dec
adc
stos
ss
call
cdq
ret
mov
or
(bad)
xor
(bad)
inc
ins
push
adc
scas
pop
add
call
xor
(bad)
(bad)
(bad)
push
repnz
data16
push
sub
sbb
xchg
push
and
mov
push
cld
(bad)
jmp
mov
fbstp
inc
inc
imul
in
sub
xchg
pop
test
dec
pop
cmp
mov
pop
(bad)
sbb
(bad)
aad
jp
icebp
jne
cmps
dec
dec
test
aad
cmp
lahf
iret
jmp
sbb
stos
cld
sub
aaa
sbb
mov
ja
cmps
mov
rcr
sub
xchg
aas
sbb
jmp
sbb
inc
xlat
push
ret
mov
les
(bad)
(bad)
(bad)
jg
imul
cmc
mov
mov
inc
into
cmc
dec
(bad)
out
sbb
jmp
mov
lahf
pushf
(bad)
(bad)
(bad)
push
fdivr
jae
mov
pop
or
cs
cmp
sbb
and
jmp
(bad)
jmp
inc
inc
int
lods
ds
xchg
xor
fs
xor
mov
pusha
(bad)
(bad)
(bad)
call
clc
jae
push
test
repnz
jne
jmp
fwait
popa
in
jb
mov
xchg
jg
(bad)
(bad)
(bad)
push
jp
mov
sub
add
inc
cmps
inc
jg
xor
push
or
push
(bad)
(bad)
(bad)
jmp
aas
daa
jp
ret
xor
int
xchg
rcr
mov
es
test
dec
popa
xacquire
(bad)
(bad)
jmp
dec
or
cmps
push
aaa
ror
or
xchg
into
(bad)
(bad)
(bad)
call
and
mov
push
aad
push
bound
jecxz
xchg
pop
xor
push
mov
push
repnz
dec
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
cmp
xchg
loop
pushf
xchg
mov
lock
xchg
aas
sbb
mov
std
xor
leave
inc
loopne
add
enter
push
shl
test
out
cmps
mov
cmp
(bad)
jmp
daa
lock
js
test
jns
xchg
push
scas
rcr
ins
arpl
inc
mov
(bad)
(bad)
(bad)
inc
cli
pop
sub
mov
and
ret
(bad)
call
sub
stos
std
aad
dec
(bad)
(bad)
(bad)
call
xor
xchg
loope
mov
mov
sbb
jb
add
dec
(bad)
(bad)
(bad)
push
(bad)
mov
(bad)
rcl
data16
imul
bound
push
jne
jmp
push
(bad)
(bad)
(bad)
call
pop
xchg
adc
inc
and
dec
inc
dec
mov
jecxz
mov
adc
jg
(bad)
jmp
adc
ret
xchg
cmp
mov
xor
(bad)
(bad)
cmp
or
ret
cwde
cmps
clc
gs
out
cmp
ss
mov
or
shl
sub
fdivr
clc
rol
mov
jb
inc
jle
ror
std
sub
(bad)
(bad)
(bad)
jmp
mov
aam
dec
dec
mov
cmp
pop
ins
clc
jb
mov
add
mov
pusha
xchg
(bad)
(bad)
(bad)
(bad)
fidivr
xchg
inc
in
inc
in
pop
push
mov
mov
or
dec
je
add
jg
retf
cdq
(bad)
(bad)
jmp
push
add
cmp
cmc
push
cdq
xor
cmp
push
pop
pop
shl
outs
xor
xlat
js
push
jmp
xlat
cmp
call
xor
(bad)
(bad)
call
cs
sbb
dec
jo
mov
mov
add
(bad)
lods
out
push
sub
cmc
mov
(bad)
jl
fcomi
inc
mov
(bad)
pop
jg
mov
fisttp
shr
fiadd
(bad)
(bad)
call
(bad)
cmc
jle
test
and
(bad)
imul
sub
fsub
(bad)
(bad)
(bad)
jmp
cmps
pop
jae
movs
mov
test
nop
ss
pop
jmp
jmp
add
(bad)
(bad)
(bad)
(bad)
aas
movs
and
adc
jmp
pop
out
mov
ja
mov
repnz
xchg
fcomip
(bad)
push
xor
add
fsubr
jge
mov
pop
test
dec
push
pop
nop
int3
(bad)
(bad)
(bad)
push
mov
xchg
out
push
sbb
lods
das
pop
cmps
pop
push
ret
ja
jl
mov
dec
mov
(bad)
(bad)
dec
push
gs
test
dec
inc
pop
sahf
aam
jp
iret
call
popa
(bad)
(bad)
jmp
inc
push
mov
test
xchg
adc
xor
pop
jle
fistp
pop
(bad)
out
clc
dec
outs
push
imul
gs
push
pop
scas
xor
xor
(bad)
jmp
push
push
pop
loopne
repnz
ins
inc
(bad)
push
sub
popa
mov
adc
(bad)
call
mov
data16
and
retf
and
in
add
pop
adc
xchg
jg
dec
(bad)
(bad)
(bad)
call
mov
mov
imul
aaa
inc
pop
push
mov
ins
lods
ins
xor
or
pop
(bad)
(bad)
(bad)
inc
je
lods
stos
and
mov
into
test
out
repz
cmp
fwait
inc
dec
scas
(bad)
(bad)
(bad)
(bad)
call
loope
xchg
add
shl
adc
jo
dec
add
add
inc
jl
idiv
sti
aam
icebp
jecxz
sahf
xor
xchg
repz
rol
hlt
(bad)
(bad)
inc
clc
dec
lds
xor
fisubr
das
adc
int
mov
adc
retf
(bad)
jmp
and
loope
adc
(bad)
push
push
aas
enter
sub
(bad)
(bad)
(bad)
(bad)
call
push
push
jae
out
or
or
mov
jecxz
pop
out
or
dec
movs
mov
(bad)
(bad)
(bad)
ds
cld
jbe
cmc
in
fcom
lds
loopne
xchg
cs
cli
mov
jge
xor
mov
add
icebp
(bad)
(bad)
(bad)
call
retf
cs
hlt
xchg
idiv
lods
push
popf
adc
sub
pop
sbb
jg
(bad)
(bad)
(bad)
dec
add
or
das
cmps
pop
jl
sti
pushf
dec
lahf
ja
sub
sti
inc
push
pop
push
mov
(bad)
call
in
arpl
add
or
rcl
adc
in
inc
dec
inc
aam
pop
dec
adc
add
daa
mov
je
cmp
xchg
mov
add
jmp
xchg
cmp
sbb
sbb
mov
movs
movs
adc
test
fbstp
(bad)
(bad)
(bad)
inc
xchg
push
neg
(bad)
popf
fmul
adc
lahf
(bad)
(bad)
xchg
les
in
fs
mov
loopne
mov
sub
out
pusha
cdq
pop
repz
pop
mov
enter
xor
cmp
pop
push
ret
or
mov
dec
retf
lods
xlat
popf
(bad)
(bad)
(bad)
call
xchg
jns
cmp
test
(bad)
cld
in
ins
mov
leave
popf
mov
cmc
fisubr
clc
add
call
cld
(bad)
jle
pop
xor
jge
dec
loop
jnp
add
add
push
jne
add
push
int
(bad)
(bad)
(bad)
(bad)
fnstcw
out
xor
and
and
mov
sub
add
sub
sub
adc
(bad)
(bad)
push
in
jns
aaa
xlat
test
sub
aas
push
jae
ja
stos
mov
pop
mov
addr16
(bad)
xchg
add
dec
push
xor
daa
aam
lods
pop
(bad)
(bad)
(bad)
(bad)
jg
xor
mov
mov
mov
sub
ret
mov
movs
sub
sub
in
stos
push
(bad)
(bad)
(bad)
(bad)
fmul
fwait
sub
push
sub
ins
repz
mov
sub
mov
push
xchg
imul
(bad)
jmp
outs
push
jnp
jae
xchg
mov
aaa
es
push
add
mov
rcr
rol
mov
dec
not
pop
mov
daa
and
popw
cdq
imul
(bad)
(bad)
(bad)
call
push
mov
out
inc
js
cdq
loop
aad
data16
inc
pop
xchg
dec
xchg
push
or
pmaddwd
(bad)
(bad)
call
stos
mov
mul
pop
stos
pushf
mov
xchg
jbe
and
fdivr
(bad)
jmp
push
dec
xor
jb
jecxz
cmp
call
mov
dec
ror
push
in
jb
jnp
and
pop
std
jmp
dec
xor
ror
dec
xchg
ret
js
js
popa
mov
arpl
(bad)
(bad)
push
mov
fs
daa
lds
dec
and
xchg
out
or
imul
mov
popf
ins
popf
jle
mov
jg
or
les
cld
xor
fst
test
dec
xchg
jne
dec
in
ins
and
pop
xor
cld
pop
mov
push
push
movs
aam
or
cmp
xchg
inc
or
jo
lahf
jmp
(bad)
(bad)
(bad)
(bad)
ins
sti
sar
fwait
pop
mov
adc
push
sbb
xor
jbe
addr16
dec
add
in
mov
dec
lahf
fstp
repz
sbb
js
jae
es
out
clc
(bad)
(bad)
mov
movs
rol
ins
ins
push
test
bound
jp
(bad)
(bad)
(bad)
jmp
bound
xchg
pop
mov
push
ins
or
xchg
je
enter
xor
fsub
(bad)
(bad)
(bad)
mov
sub
inc
mov
retf
or
repz
mov
shr
clc
(bad)
jmp
add
scas
fidivr
arpl
cmp
cmp
(bad)
(bad)
in
mov
xchg
xor
push
int3
xor
rcr
popa
rcl
dec
xor
xor
movs
(bad)
(bad)
(bad)
(bad)
mov
xchg
inc
sbb
adc
in
pop
gs
xchg
pop
sub
loopne
xchg
(bad)
call
das
mov
or
in
and
(bad)
in
test
popf
(bad)
xchg
nop
leave
(bad)
mov
js
inc
cmp
dec
sub
and
(bad)
(bad)
(bad)
dec
dec
jg
inc
jae
add
ins
pop
and
je
lods
in
test
cld
(bad)
out
(bad)
iret
ss
stc
sbb
ins
sub
xchg
ins
inc
retf
jg
dec
std
jbe
movs
fild
push
pop
movs
xchg
pop
mov
pushf
movs
lock
(bad)
(bad)
(bad)
(bad)
mov
jbe
fcmovb
pop
cmps
(bad)
dec
xchg
xor
rol
adc
(bad)
(bad)
(bad)
(bad)
(bad)
clc
dec
xchg
xlat
push
aas
cmps
ret
adc
push
mov
les
sar
pop
(bad)
(bad)
mov
ret
jb
sbb
pop
jmp
scas
(bad)
dec
lds
and
mov
(bad)
(bad)
call
dec
repz
xor
repnz
imul
clc
push
push
in
popf
xchg
rcr
(bad)
(bad)
call
or
inc
shl
and
cmp
cmp
stc
pop
das
lods
pop
push
ror
imul
(bad)
(bad)
mov
cwde
and
cld
imul
jo
retf
repnz
fnstenv
je
cmp
outs
cli
mov
loope
imul
mov
xor
(bad)
(bad)
inc
ss
fstp
sub
fild
cmp
xor
sub
cmp
pop
(bad)
(bad)
(bad)
jmp
lods
inc
sub
mov
pop
and
out
push
in
fwait
sub
iret
pop
jmp
push
(bad)
(bad)
(bad)
dec
out
ins
pop
jecxz
inc
call
aad
(bad)
push
sub
mov
mov
ds
jg
call
std
cs
xor
popa
lock
xchg
sbb
das
test
jg
or
(bad)
repz
ds
sub
cli
lods
cmp
(bad)
(bad)
call
aas
imul
ror
adc
test
add
(bad)
pop
cmp
and
(bad)
(bad)
(bad)
(bad)
mov
push
inc
ret
ins
xchg
out
cmps
or
and
fcom
jge
push
cmp
int3
(bad)
(bad)
(bad)
call
jno
test
out
jmp
aad
jl
loopne
or
jo
cmc
pop
sbb
xchg
popa
fdivr
sbb
inc
mov
daa
dec
push
aaa
outs
sbb
(bad)
es
mov
xor
into
aas
push
and
(bad)
clc
(bad)
out
jl
out
(bad)
(bad)
(bad)
call
sub
mov
cmp
fsubr
adc
fisub
add
and
(bad)
(bad)
(bad)
jmp
je
int3
cmc
pop
adc
xor
cmp
rep
and
xchg
mov
into
stos
push
nop
movs
call
loope
(bad)
(bad)
in
push
shl
mov
mov
lods
adc
fld
cmp
je
jne
(bad)
(bad)
mov
cmps
popa
xchg
lock
sub
arpl
sbb
add
cmp
enter
(bad)
(bad)
(bad)
jmp
cmp
or
or
jge
jmp
or
pop
ror
mov
(bad)
(bad)
(bad)
sti
adc
mov
idiv
iret
retf
lds
xchg
cmp
jnp
cmovne
(bad)
(bad)
(bad)
(bad)
fidivr
lahf
jo
loopne
mov
test
ret
jbe
jp
jmp
cmp
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
fiadd
adc
mov
and
pop
mov
inc
dec
stc
jb
jp
loop
pusha
(bad)
(bad)
(bad)
jmp
bound
mov
cmps
or
jnp
mov
ja
inc
gs
inc
mov
dec
mov
sbb
mov
pop
mov
mov
les
mov
(bad)
push
(bad)
stc
mov
movs
adc
stos
and
push
jb
cmp
div
retf
pop
xor
adc
(bad)
(bad)
jmp
addr16
fiadd
shr
push
dec
sub
int3
xchg
int3
and
add
jae
pop
into
add
pop
std
add
fs
scas
(bad)
sbb
shr
fisubr
(bad)
dec
test
int3
mov
fnstsw
sbb
jmp
fstp
mov
cmp
mul
(bad)
(bad)
(bad)
(bad)
ds
cwde
aad
mov
arpl
cs
cmp
cld
cmp
shl
scas
fdiv
or
(bad)
(bad)
inc
inc
sbb
push
cdq
popf
cmp
sbb
xchg
sbb
ss
in
je
loopne
cs
(bad)
(bad)
(bad)
push
dec
popf
and
loop
fadd
test
ror
dec
leave
cmp
(bad)
(bad)
cmp
add
push
fwait
out
xchg
xchg
mov
mov
dec
cdq
add
add
and
inc
fstp
pop
inc
dec
mov
(bad)
(bad)
cmp
aad
scas
test
inc
lds
aad
movs
cmp
mov
je
(bad)
(bad)
call
add
mov
dec
mov
mov
mov
cmp
or
push
les
popf
(bad)
sub
(bad)
(bad)
call
je
scas
mov
aaa
cli
push
push
inc
jo
xchg
push
comiss
cmp
(bad)
mov
in
mov
dec
pop
cmp
jno
lds
adc
push
mov
(bad)
(bad)
(bad)
dec
sub
stos
retf
(bad)
sar
cwde
retf
cmp
push
mov
(bad)
(bad)
mov
popa
pop
aam
mov
mov
dec
mov
or
cdq
std
std
and
(bad)
jg
aas
mov
jmp
loop
jo
xchg
mov
mov
test
sub
(bad)
(bad)
push
call
cmps
xlat
sbb
pop
xlat
shr
inc
mov
test
xchg
das
add
aaa
js
xor
stc
xchg
pop
in
mul
std
(bad)
jmp
cmc
scas
sahf
sti
int3
dec
mov
aam
xor
stos
outs
sbb
jmp
inc
jo
sub
outs
fidiv
jmp
dec
aaa
jns
(bad)
jg
dec
cmps
in
aad
jle
ror
(bad)
fadd
jmp
shl
(bad)
(bad)
(bad)
(bad)
inc
pop
push
dec
mov
mov
cmps
push
shr
ins
clc
add
aam
fsub
mov
and
loop
xor
sbb
dec
mov
or
jmp
or
ins
dec
scas
pop
pushf
imul
(bad)
icebp
xchg
pop
stc
jp
sub
adc
pop
inc
cmps
mov
movs
bound
jno
jmp
popa
inc
sbb
or
ret
mov
movs
jns
imul
(bad)
(bad)
fisub
repnz
scas
data16
add
and
jmp
sar
jne
sti
cli
sub
sbb
add
(bad)
call
imul
pop
pop
mov
adc
mov
mov
call
cld
call
pop
inc
out
push
dec
nop
inc
icebp
jge
div
not
and
inc
xor
xchg
jb
pop
jge
(bad)
fistp
sbb
jmp
sbb
movs
fucom
dec
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fld
mov
push
je
pop
mov
push
or
and
jae
fstp
ss
idiv
adc
mov
dec
mov
imul
lahf
pop
xchg
mov
outs
inc
push
adc
jg
lea
adc
aas
std
inc
add
enter
adc
mov
and
das
clc
(bad)
inc
inc
sbb
add
test
push
(bad)
push
loop
mov
mov
xchg
iret
push
mov
adc
cld
ins
imul
les
inc
xor
push
test
(bad)
jmp
xchg
push
sahf
fcmovbe
sub
into
adc
mov
popa
lock
mov
add
mov
and
inc
cmp
cmp
mov
les
into
iret
pop
ret
pusha
push
retf
cmp
out
sbb
push
mov
jg
cmp
outs
fmul
dec
push
(bad)
(bad)
(bad)
jg
xor
cwde
add
jo
mov
adc
test
and
in
hlt
cmps
pushf
push
sub
(bad)
(bad)
cmp
test
sbb
(bad)
fidivr
mov
push
std
(bad)
jmp
push
in
push
add
dec
mov
mov
sub
(bad)
(bad)
call
cmp
mov
mov
cdq
sub
cmps
mov
(bad)
aad
movs
push
inc
push
adc
(bad)
(bad)
call
scas
ins
out
pushf
pushf
es
dec
and
scas
push
out
in
(bad)
(bad)
(bad)
call
pop
loope
jo
xor
ret
jne
lods
fcom
push
test
pop
and
pushf
push
in
push
(bad)
fcomp
inc
pop
sahf
bound
aad
out
loopne
sub
xchg
lea
cmp
jg
add
fmul
dec
dec
not
icebp
inc
(bad)
(bad)
(bad)
jmp
xor
jns
add
fstp
xchg
or
enter
sbb
dec
fild
(bad)
(bad)
jmp
fild
rcl
and
neg
mov
scas
mov
sub
mov
(bad)
(bad)
(bad)
(bad)
push
stos
shr
jo
fsub
xor
push
dec
in
test
pushf
lea
(bad)
(bad)
jmp
mov
stos
sub
arpl
cmp
cmc
jg
and
aad
xor
and
(bad)
(bad)
(bad)
jnp
aaa
hlt
mov
loop
mov
and
sbb
xchg
pop
stc
mul
pop
xor
(bad)
(bad)
jmp
dec
enter
jmp
xchg
jle
scas
mov
inc
jge
dec
inc
lods
cmp
(bad)
(bad)
(bad)
call
fdivr
in
mov
int3
ror
or
(bad)
call
fist
jmp
hlt
loopne
and
sub
jb
fimul
es
mov
push
jns
pop
jl
stc
movs
stc
mov
dec
cmp
jbe
sbb
push
jmp
mov
mov
xchg
jmp
cmp
sbb
lds
(bad)
(bad)
(bad)
(bad)
aas
push
in
movs
not
add
jge
inc
fs
or
(bad)
pop
mov
rol
scas
(bad)
(bad)
push
inc
cmps
lods
sub
lea
dec
mov
(bad)
(bad)
(bad)
push
aas
dec
xor
xor
fdiv
or
pop
mov
push
scas
and
jmp
daa
cmps
or
and
xlat
fst
outs
cmp
je
pop
add
sbb
sub
inc
adc
mov
pop
jno
mov
in
lods
aas
xchg
sets
xchg
loope
(bad)
(bad)
(bad)
call
xchg
cld
in
xor
int
imul
addr16
out
lods
push
and
dec
mov
call
int3
jmp
pop
xlat
sbb
adc
adc
(bad)
(bad)
(bad)
dec
lds
or
push
out
popa
add
lahf
(bad)
cmps
push
inc
dec
sar
jmp
ja
sbb
loope
dec
mov
aad
stos
xor
sti
mov
push
sub
jmp
inc
pop
push
xor
call
mov
or
(bad)
mov
adc
retf
aaa
and
js
test
mov
ror
(bad)
(bad)
(bad)
push
pop
adc
push
ja
js
out
rcl
mov
xor
xchg
jae
mov
sub
jmp
push
sti
outs
push
pop
pushf
fist
iret
(bad)
push
mov
loope
aaa
pusha
adc
sub
cmps
mov
sub
fdivr
xor
cmp
je
inc
and
dec
fs
sub
push
cmp
es
rcr
ja
(bad)
dec
pop
and
pop
jo
add
push
add
rcl
dec
cmps
mov
in
lds
movs
cmp
ficom
aad
push
enter
loop
(bad)
test
sar
mov
or
(bad)
popa
or
dec
adc
mov
mov
xchg
in
(bad)
(bad)
(bad)
inc
pop
mov
fwait
stc
ins
sub
jb
iret
mov
pop
mov
test
stos
mov
mov
call
loop
scas
push
jmp
movs
pop
popa
push
mov
int
out
jge
pop
and
enter
and
jmp
inc
push
in
stos
scas
and
mov
cmp
inc
rcl
add
jo
xor
(bad)
jmp
and
sbb
mov
add
(bad)
sub
clc
pop
gs
ins
cmp
(bad)
(bad)
inc
mov
ret
cmps
sti
mov
xchg
jmp
cmps
(bad)
(bad)
(bad)
dec
dec
icebp
fwait
adc
xchg
punpckhdq
jb
cli
nop
dec
js
ins
call
inc
adc
scas
add
xchg
dec
or
dec
xchg
dec
xchg
dec
sbb
(bad)
xlat
movs
jno
and
jo
add
jae
fcomp
outs
loope
cmp
push
clc
rol
pop
add
xlat
dec
sahf
test
adc
(bad)
jmp
inc
inc
pop
dec
jg
sahf
call
mov
jecxz
sar
call
iret
sar
inc
into
ds
aam
fisttp
add
cli
jmp
mov
mov
test
and
retf
ins
jne
(bad)
(bad)
(bad)
(bad)
call
inc
adc
ficomp
in
push
inc
adc
pop
inc
jnp
cmp
jne
or
shl
dec
das
sar
sub
imul
xor
dec
ret
push
(bad)
call
stos
test
bnd
add
fcomp
lods
das
mov
inc
push
jns
mov
clc
xor
jmp
inc
dec
sbb
cmc
std
call
add
(bad)
(bad)
(bad)
(bad)
inc
xor
push
sub
pop
cmp
pop
xlat
mov
cmp
jo
sub
(bad)
(bad)
(bad)
fnstsw
and
jg
icebp
pop
aaa
xlat
cmp
cmp
icebp
xchg
retf
ins
mov
cmc
mov
(bad)
(bad)
(bad)
(bad)
fcmovnu
adc
imul
cli
ret
jns
push
lods
call
mov
lods
fstp
push
loopne
and
mov
adc
idiv
sar
xchg
mov
es
sti
repz
sub
stos
je
(bad)
(bad)
(bad)
dec
adc
cdq
mov
jb
mov
rcl
in
sub
jns
(bad)
mov
(bad)
(bad)
(bad)
call
or
sahf
xchg
into
in
cmp
(bad)
test
std
mov
sub
or
sbb
(bad)
(bad)
inc
push
pop
cmp
dec
mov
not
mov
(bad)
dec
ret
(bad)
mov
xlat
(bad)
(bad)
(bad)
call
cwde
in
(bad)
sbb
pop
pop
leave
aaa
popa
push
dec
gs
imul
sbb
(bad)
(bad)
(bad)
push
or
pop
test
nop
out
push
fsub
xor
(bad)
(bad)
dec
stos
lds
ins
rol
push
mov
dec
rol
das
bound
mov
call
jo
mov
int
and
gs
cs
xchg
sbb
pushf
(bad)
(bad)
(bad)
call
cmp
adc
aaa
leave
xor
or
push
adc
or
and
inc
dec
movs
(bad)
jmp
in
adc
lock
lea
pop
ret
cs
int3
jb
dec
cmp
(bad)
jns
push
pop
push
mov
in
xchg
mov
xchg
lock
loopne
(bad)
call
xor
mov
fwait
xchg
xchg
xchg
ror
(bad)
(bad)
mov
cmp
test
push
aas
leave
and
(bad)
stos
mov
mov
xor
movs
aam
push
cld
jmp
jo
push
sbb
pop
cli
retf
add
lods
scas
cmp
idiv
and
adc
(bad)
(bad)
(bad)
cmp
sbb
mov
push
pushf
cmp
mov
pop
fadd
mov
adc
loopne
mov
(bad)
call
inc
add
ins
movs
push
sub
or
pushf
(bad)
pop
repz
xchg
xchg
pop
inc
jecxz
mov
pushf
(bad)
(bad)
dec
outs
lods
in
xor
lds
dec
scas
and
sar
(bad)
call
jbe
mov
mov
loopne
mov
mov
clc
leave
push
cmp
sti
mov
dec
sub
lea
lock
dec
cmps
and
push
outs
fiadd
icebp
(bad)
(bad)
out
or
das
adc
push
fnstsw
and
into
cmc
enter
out
mov
pop
(bad)
(bad)
(bad)
jns
sar
and
es
pop
test
inc
cmp
and
fwait
jecxz
(bad)
call
shl
push
inc
xor
stos
int3
pushf
xor
and
call
xchg
sar
sti
mov
data16
jb
scas
out
jmp
out
and
fimul
lds
xchg
(bad)
push
jmp
je
popa
jo
icebp
adc
xor
into
es
xor
(bad)
jg
bound
jp
ss
ficomp
add
pop
jmp
(bad)
(bad)
push
sub
push
fldl2e
cmp
push
repz
jne
popa
pop
mov
(bad)
(bad)
(bad)
jmp
dec
lea
sar
shr
push
lods
mov
and
add
jmp
xchg
scas
xor
cmp
pop
clc
xchg
(bad)
mov
test
es
addr16
jno
or
popa
imul
mov
jmp
fisubr
jbe
adc
shl
add
test
jne
push
cmp
(bad)
(bad)
jg
lea
cmp
xchg
dec
sub
arpl
or
sbb
sub
(bad)
(bad)
(bad)
call
pop
push
mov
inc
fild
inc
lds
xor
jmp
xor
(bad)
(bad)
(bad)
cmp
stos
ss
int
jp
push
adc
lea
dec
je
cmp
mov
loopne
sub
pop
cmp
imul
jmp
xor
lahf
mov
iret
out
jb
loope
adc
adc
inc
pop
cmp
loop
inc
mov
bound
add
mov
adc
fsub
out
dec
nop
in
xor
(bad)
mov
dec
fcmovbe
push
jp
sbb
ins
pusha
rcr
(bad)
push
test
jae
fist
ror
push
push
jle
sub
jg
(bad)
(bad)
mov
call
mov
pop
mov
mov
inc
xor
jnp
(bad)
mov
js
pop
ss
stos
mov
out
add
call
and
inc
push
mov
pop
mov
clc
jle
cmp
xchg
cmp
jbe
inc
aaa
mov
outs
mov
(bad)
aas
xor
fst
jb
add
mov
mov
cld
(bad)
(bad)
jg
(bad)
int3
in
call
leave
iret
repnz
mov
test
inc
(bad)
(bad)
(bad)
jmp
push
pusha
scas
in
js
cmp
mov
sub
push
maskmovq
pop
adc
imul
inc
(bad)
(bad)
(bad)
call
mov
fbld
outs
popf
pop
cmp
dec
mov
pop
xor
cmp
dec
(bad)
and
pop
mov
es
(bad)
ja
mov
mov
aas
mov
(bad)
(bad)
jg
mov
add
loope
into
push
cmp
jo
rcl
xchg
adc
movs
enter
(bad)
(bad)
(bad)
jmp
dec
push
mov
arpl
ins
retf
in
or
mov
(bad)
jmp
adc
dec
(bad)
mov
(bad)
fsub
and
xchg
or
gs
jg
dec
mov
in
dec
or
add
into
aas
sahf
mov
fistp
iret
mov
sar
inc
les
cmp
mov
cmp
int3
push
(bad)
jmp
inc
xchg
enter
seto
cmp
imul
(bad)
(bad)
frstor
sub
ret
xchg
in
pop
fimul
xchg
(bad)
in
mov
dec
jb
outs
cmps
mov
(bad)
(bad)
(bad)
dec
pusha
jmp
enter
retf
jb
xchg
mov
sti
popf
jo
stos
dec
xor
repnz
(bad)
jmp
add
push
push
xchg
adc
das
inc
fnstcw
movs
fcomip
(bad)
dec
(bad)
mov
pop
cmp
sbb
xchg
pop
cli
jl
test
inc
inc
(bad)
(bad)
(bad)
dec
lods
xchg
mov
lea
loopne
pop
jmp
movs
bound
outs
test
xchg
jmp
xor
inc
dec
mov
inc
in
push
add
data16
xchg
inc
xchg
adc
(bad)
(bad)
inc
inc
ret
out
es
outs
lahf
out
loopne
jmp
cmp
inc
mov
xor
addr16
or
push
mov
jmp
dec
movs
je
nop
mov
lahf
cmp
add
ja
bound
jle
inc
ficom
mov
add
lods
lahf
leave
dec
cwde
push
test
jle
(bad)
(bad)
dec
mov
pop
ins
or
sub
fwait
or
hlt
shl
call
sar
(bad)
call
les
pop
(bad)
xor
dec
cmp
cmps
aas
ds
mov
jns
and
and
(bad)
(bad)
dec
inc
aam
xchg
xchg
scas
mov
push
or
icebp
repz
popf
cwde
lea
mov
jo
fcomip
(bad)
push
fld
cwde
pop
sub
xor
int3
inc
mov
(bad)
(bad)
sub
ds
mov
adc
and
inc
repz
xor
lods
mov
in
test
mov
popa
xchg
pop
(bad)
ror
dec
sub
out
push
ficom
sub
(bad)
jmp
lods
dec
pop
mov
imul
nop
ins
pop
pushf
pop
dec
mov
dec
lock
inc
mov
mov
push
shl
jb
outs
cmp
or
cmp
jecxz
xchg
enter
and
pop
or
inc
adc
sub
sbb
xchg
int
es
ins
sbb
dec
jp
pop
cs
(bad)
(bad)
call
pop
idiv
push
sbb
fwait
shr
mov
std
mov
ret
xor
cmp
(bad)
push
fisub
xor
cmp
pop
mov
shl
inc
cld
dec
xchg
call
mov
push
rol
outs
pop
inc
je
aas
cs
and
cdq
call
jg
aad
xchg
mov
mov
stc
xchg
add
jmp
dec
stos
dec
mov
call
adc
aad
add
dec
hlt
push
push
sar
inc
push
out
imul
retf
idiv
sub
push
sbb
stos
(bad)
(bad)
(bad)
(bad)
ds
inc
push
push
es
scas
retf
pop
adc
adc
jmp
push
and
mov
(bad)
(bad)
(bad)
jmp
lock
pop
and
mov
mov
or
sahf
retf
add
cwde
jmp
xor
and
cmp
jae
xchg
inc
std
in
ja
sub
jmp
mov
and
loope
cmp
add
add
or
inc
je
fcomp
data16
outs
inc
nop
(bad)
(bad)
(bad)
jmp
push
outs
lahf
and
jge
push
cmp
pop
sub
out
jns
cli
std
outs
sub
adc
(bad)
push
popa
jb
out
xor
fstp
cdq
rcl
mov
dec
ss
inc
xchg
xchg
fdiv
iret
sbb
mov
mov
scas
xchg
popa
inc
sbb
scas
call
cld
jb
lods
std
jnp
sbb
xor
test
mov
jae
(bad)
(bad)
call
push
test
nop
clc
retf
jmp
lock
push
jo
inc
jnp
pop
jb
je
rol
sar
jne
mov
test
cmps
hlt
sti
inc
mov
mov
sub
call
jl
push
jo
clc
test
sub
inc
mov
adc
sti
ret
clc
(bad)
call
stos
scas
fadd
leave
adc
mov
inc
iret
out
cmp
pop
inc
stos
jns
cmp
arpl
(bad)
(bad)
jmp
int
sti
inc
cli
icebp
jle
test
pop
mov
or
in
xchg
mov
(bad)
jg
push
mov
int3
int3
cmps
jae
(bad)
jle
popa
std
sbb
(bad)
dec
xchg
loope
push
mov
das
add
add
outs
dec
(bad)
(bad)
(bad)
jmp
enter
xchg
sbb
xchg
aad
fcomp
pop
(bad)
into
jo
xlat
mov
xchg
das
(bad)
(bad)
(bad)
jmp
and
pop
and
leavew
sub
push
pusha
jp
push
icebp
push
mov
comiss
(bad)
inc
fidiv
fwait
(bad)
adc
push
and
aad
push
inc
or
xor
pop
or
aas
in
es
mov
(bad)
mov
or
out
xchg
jmp
mov
mov
pusha
loope
pop
cmc
(bad)
call
mov
cmc
retf
ins
pop
push
sub
dec
into
scas
hlt
test
mov
(bad)
call
ds
ret
repz
inc
dec
outs
cmps
lds
into
call
(bad)
call
lods
dec
sbb
and
je
std
mov
sub
test
push
(bad)
jmp
lahf
(bad)
jns
dec
mov
fmul
cmp
dec
push
lods
nop
(bad)
(bad)
(bad)
jmp
fcom
popa
out
stos
mov
adc
shr
pop
inc
test
and
jl
pop
std
(bad)
push
push
fwait
cmc
fcom
repnz
ins
out
shl
inc
(bad)
(bad)
(bad)
inc
and
dec
loope
sub
(bad)
mov
retf
push
mov
ror
(bad)
(bad)
(bad)
jg
cmp
in
pop
jmp
and
aam
sub
repnz
call
adc
adc
ret
ja
sbb
(bad)
(bad)
(bad)
jg
addr16
ss
in
js
xlat
fs
adc
and
adc
cmp
out
jb
rcr
jmp
or
loope
cmps
sar
mov
pop
jns
sbb
retf
test
(bad)
(bad)
cmp
cli
xchg
pop
push
xor
pop
pop
push
fisubr
sub
mov
pop
(bad)
mov
jg
dec
pop
sbb
in
fdiv
jno
xchg
dec
mov
(bad)
call
fwait
mov
pop
inc
imul
neg
or
xchg
ret
(bad)
(bad)
call
fwait
mov
pop
ret
push
push
arpl
hlt
lock
out
push
loopne
push
(bad)
(bad)
(bad)
jg
mov
xor
xchg
pop
stos
stos
pop
mov
jae
jge
out
or
je
aas
or
cmp
(bad)
(bad)
mov
cwde
dec
lock
jmp
ror
rol
inc
push
xchg
pop
inc
or
push
cld
jno
jecxz
jmp
push
mov
aad
lods
or
imul
cmc
sub
mov
(bad)
(bad)
(bad)
jmp
call
aas
lds
fdecstp
xchg
or
add
inc
pop
test
jl
test
loopne
jae
out
mov
std
(bad)
jmp
jno
iret
jg
xor
test
(bad)
ss
push
pop
and
sbb
(bad)
push
std
xlat
dec
adc
pusha
sub
es
sti
and
jmp
in
pop
aam
add
arpl
(bad)
fcomip
dec
or
popf
mov
cmp
sbb
cmp
or
(bad)
(bad)
(bad)
push
xchg
jo
xchg
adc
ror
ds
mov
adc
jb
(bad)
(bad)
(bad)
call
add
xlat
xchg
sahf
inc
push
cli
lahf
out
sbb
in
out
dec
lea
pop
push
(bad)
jmp
inc
cli
inc
lock
cmp
(bad)
daa
jecxz
jmp
jnp
push
(bad)
(bad)
(bad)
mov
or
in
rcr
jb
xchg
popf
fsubr
stos
(bad)
lds
or
dec
jmp
push
mov
dec
jl
dec
xor
or
push
or
(bad)
(bad)
jmp
jge
fbld
mov
sub
sub
xchg
ret
mov
pop
and
(bad)
(bad)
dec
repnz
imul
or
push
jecxz
aad
cdq
push
test
add
(bad)
inc
push
xchg
out
lock
lods
mov
push
xchg
in
out
mov
adc
(bad)
(bad)
jg
hlt
mov
int
mov
nop
dec
(bad)
adc
dec
jnp
icebp
in
test
jl
mov
(bad)
(bad)
fcomip
inc
cld
and
dec
leave
movs
add
cmp
jns
inc
jl
sub
add
push
(bad)
(bad)
(bad)
(bad)
jns
rcl
and
stos
sub
mov
mov
and
cmp
ror
(bad)
call
repnz
(bad)
pop
sbb
jo
mov
lahf
scas
mov
jno
pop
xchg
ror
sbb
mov
shl
cmp
lahf
jo
adc
sti
push
fmul
sub
push
lea
inc
jo
ficom
outs
aas
push
push
jecxz
and
add
push
jb
jge
(bad)
(bad)
(bad)
jmp
and
test
adc
fwait
in
pop
adc
push
mov
jecxz
test
jmp
xchg
les
jle
push
cld
dec
inc
mov
jg
iret
shl
fldcw
(bad)
(bad)
jnp
movs
ss
mov
out
call
mov
cli
movs
gs
ret
adc
push
fisttp
(bad)
(bad)
inc
push
jne
pop
vmovhps
xor
test
fucomp
jg
es
aas
test
pop
mov
loopne
and
aam
lods
push
sbb
xlat
sbb
icebp
mov
jge
and
ret
jb
mov
mov
adc
test
das
sbb
aad
int
(bad)
(bad)
(bad)
cmp
or
loop
adc
std
fst
jae
inc
inc
ss
cwde
mov
dec
inc
adc
mov
(bad)
(bad)
(bad)
cld
pop
stos
mov
mov
clc
xchg
xchg
dec
or
mov
dec
js
(bad)
push
mov
(bad)
inc
push
stos
je
and
sbb
mov
push
outs
mov
cwde
dec
dec
jno
add
loopne
(bad)
(bad)
(bad)
cmp
movs
aad
sbb
ins
pushf
fst
bound
and
in
cld
clc
add
nop
jbe
(bad)
fbld
adc
dec
sahf
sbb
std
ret
nop
retf
daa
test
(bad)
call
and
mul
outs
gs
jle
push
repz
jae
(bad)
(bad)
(bad)
(bad)
jmp
or
push
sub
in
cmp
pop
fild
call
or
pop
inc
pop
leave
out
es
jle
repz
les
ja
inc
(bad)
(bad)
inc
xor
push
popf
cmp
fwait
or
repz
xchg
das
lods
push
xchg
mov
jecxz
jg
xchg
pop
pop
pop
cmc
pop
fdiv
jp
cld
(bad)
push
sub
(bad)
(bad)
(bad)
jmp
retf
mov
xchg
push
inc
sar
retf
aam
mov
mov
cmps
add
dec
xor
in
ss
and
ins
enter
(bad)
and
clc
data16
jmp
aam
or
lahf
(bad)
fdivr
push
push
cmp
enter
pop
leave
aas
lods
neg
xchg
xchg
repz
out
hlt
jb
les
xchg
dec
lock
test
mov
repz
mov
push
inc
push
cmps
cmps
xchg
and
in
(bad)
mov
out
push
loop
test
inc
(bad)
jmp
ds
mov
mov
(bad)
(bad)
jmp
test
add
sbb
mov
addr16
adc
mov
adc
sbb
cmp
loop
pop
push
push
popa
pop
aam
stc
shl
lahf
adc
stos
jle
sub
(bad)
and
pop
fwait
and
mov
rol
mov
(bad)
(bad)
(bad)
call
adc
sbb
rol
inc
(bad)
and
xchg
in
mov
or
(bad)
inc
and
inc
retf
adc
mov
sbb
sbb
pop
retf
mov
push
sar
js
test
cs
test
adc
push
jmp
retf
pusha
mov
cli
(bad)
xor
je
sub
pop
jg
cld
addr16
out
(bad)
(bad)
(bad)
dec
jl
addr16
movs
movs
push
(bad)
push
fs
or
push
pop
xchg
xchg
add
xchg
imul
jl
pop
adc
popa
jmp
cli
call
cmp
jmp
idiv
fcom
mov
(bad)
(bad)
(bad)
push
adc
nop
sbb
fsub
xchg
and
jno
rcr
adc
jmp
push
ss
sbb
xchg
icebp
das
test
stos
inc
aam
lock
sar
lock
hlt
inc
aaa
add
sbb
inc
jns
out
call
xchg
pop
cs
sub
xchg
mov
mov
(bad)
(bad)
jmp
ins
add
ret
ss
jmp
inc
inc
jp
pop
in
mov
or
cmps
(bad)
cmp
scas
test
push
sti
(bad)
cmps
stc
xchg
or
test
(bad)
(bad)
jmp
jg
bound
and
adc
sahf
ins
call
sbb
(bad)
(bad)
(bad)
dec
sub
xchg
rcr
mov
lods
mov
xchg
xchg
inc
xchg
add
sbb
(bad)
jmp
jb
jmp
(bad)
push
sub
jo
icebp
(bad)
sbb
cmps
ds
aas
ins
adc
fs
(bad)
jmp
and
sbb
cmp
icebp
ins
add
inc
mov
leave
fild
xor
fcomip
repnz
or
push
add
fucomip
fisttp
ret
jmp
lahf
mov
(bad)
dec
mov
lds
adc
retf
sbb
xlat
inc
push
push
(bad)
(bad)
jg
shr
je
cmp
fcomp
xchg
jge
add
addr16
bound
mov
mov
repnz
add
dec
retf
jo
sbb
mov
mov
cmp
(bad)
(bad)
dec
fs
sub
dec
jecxz
(bad)
leave
push
inc
dec
sub
push
dec
xor
xchg
jne
push
adc
pusha
out
and
and
and
jmp
call
movs
xor
sub
push
mov
and
push
push
(bad)
inc
das
je
cmp
(bad)
call
pop
mov
push
das
mov
fadd
dec
cmp
xor
loop
(bad)
jmp
sbb
cld
adc
int
pop
adc
mov
jg
(bad)
mov
fist
retf
sbb
xchg
jmp
push
xor
(bad)
fbld
inc
mov
(bad)
cmp
loop
and
and
repnz
(bad)
(bad)
jmp
xchg
mov
out
shl
pop
jnp
outs
ins
xchg
in
ror
(bad)
(bad)
(bad)
mov
fisttp
inc
dec
sbb
pop
gs
jp
repnz
(bad)
mul
into
(bad)
(bad)
(bad)
(bad)
out
movs
inc
jbe
jmp
sbb
mov
xchg
mov
mov
(bad)
(bad)
(bad)
push
cmp
inc
adc
mov
xor
and
loopne
mov
clc
sub
ins
sub
loope
dec
outs
pop
dec
shl
fwait
rcr
sti
shl
clc
dec
mov
div
(bad)
(bad)
(bad)
(bad)
mov
sbb
cwde
js
les
adc
push
xor
(bad)
stos
movs
xchg
jmp
(bad)
(bad)
(bad)
fcomip
xadd
daa
dec
adc
xchg
xchg
shr
cmps
lea
(bad)
(bad)
(bad)
jmp
cdq
mov
mov
pop
(bad)
dec
shl
jge
sbb
(bad)
sbb
les
push
cld
jmp
sar
add
xor
mov
scas
mov
fwait
inc
jmp
(bad)
(bad)
(bad)
call
icebp
cld
dec
arpl
or
int
stos
movs
in
cs
cmp
mov
sbb
(bad)
(bad)
mov
fidivr
pop
mov
sti
add
adc
xchg
dec
xor
(bad)
(bad)
(bad)
inc
sbb
pop
loope
sbb
cmc
cmp
mov
mov
fisttp
dec
sub
cmps
(bad)
jmp
mov
or
retf
pop
pop
in
into
or
sub
mov
jb
lahf
(bad)
push
jo
cmp
mov
(bad)
(bad)
inc
mov
movs
mov
cmp
jge
add
cdq
movs
inc
test
cmp
lds
(bad)
(bad)
dec
pop
sti
xchg
js
mov
mov
clc
sbb
sub
icebp
(bad)
jg
mov
xchg
mov
mov
jle
adc
test
pop
and
(bad)
(bad)
(bad)
jp
leave
inc
cli
sub
movaps
in
mov
ja
(bad)
(bad)
call
push
xor
sti
jbe
push
mov
cmps
mov
xor
(bad)
(bad)
(bad)
push
outs
imul
fwait
mov
fdiv
scas
(bad)
pop
xchg
mov
cmp
mov
(bad)
(bad)
jmp
call
lock
adc
lahf
pop
mov
daa
dec
mov
cmp
cmp
int3
loopne
stos
(bad)
push
retf
fidivr
mov
repz
dec
outs
mov
pop
ja
cmc
(bad)
dec
or
xchg
test
(bad)
js
dec
sub
adc
hlt
movs
sbb
(bad)
(bad)
fistp
add
mov
aad
fmul
cld
in
cmp
push
xchg
retf
pushf
push
xchg
shr
cwde
retf
push
add
mov
call
shr
fs
jo
jl
addr16
(bad)
(bad)
(bad)
jmp
xor
rcr
add
or
and
and
imul
movs
xlat
iret
xor
ror
pop
lods
movhps
mul
mov
rol
in
cdq
sar
(bad)
call
retf
sbb
in
cmp
sbb
push
sub
(bad)
mov
dec
les
int3
jmp
push
std
(bad)
fdivr
leave
push
adc
sar
or
loopne
loop
lds
(bad)
(bad)
dec
mov
retf
imul
jmp
call
stc
(bad)
(bad)
(bad)
call
test
movs
loop
xor
lahf
inc
mov
xor
push
repnz
dec
push
xchg
jbe
(bad)
(bad)
(bad)
(bad)
fmul
xchg
rol
popa
cmp
sub
xor
stos
adc
xor
hlt
ins
pushw
sahf
(bad)
(bad)
(bad)
jmp
call
pop
stc
cwde
push
add
sbb
call
into
dec
jb
shl
(bad)
(bad)
(bad)
clc
mov
mov
or
js
daa
sbb
lods
add
push
ins
xor
push
dec
retf
inc
push
fisttp
(bad)
mov
add
scas
popf
aad
adc
mov
pop
es
mov
retf
(bad)
(bad)
jmp
pushf
(bad)
and
movs
enter
cmp
mov
loop
xchg
adc
mov
dec
jl
jl
inc
into
push
xor
push
bnd
pop
and
(bad)
(bad)
(bad)
inc
frstor
xlat
int
cs
mov
(bad)
cmps
movs
push
popa
jmp
fcomip
call
pop
push
jne
mov
(bad)
cmp
sbb
mov
outs
jbe
sahf
jmp
or
jbe
popa
fcomp
jmp
(bad)
mov
and
jmp
adc
in
mov
aaa
lods
stc
pop
mov
dec
cmp
adc
retf
mov
rol
lods
cmp
dec
mov
fwait
pushf
lods
fs
or
or
loope
stc
out
(bad)
(bad)
(bad)
call
fnsave
hlt
out
adc
shl
loopne
std
sahf
mov
adc
leave
aam
(bad)
dec
stos
pop
loope
ret
pop
mov
pusha
(bad)
or
mov
mov
dec
enter
inc
fstp
inc
stos
mov
jmp
xchg
cmp
mov
fdivr
push
(bad)
(bad)
(bad)
dec
push
ins
ret
pushf
jle
push
jmp
scas
mov
js
mov
pop
sahf
loopne
pop
hlt
pop
xchg
(bad)
(bad)
(bad)
call
adc
inc
int
xchg
sub
sub
mov
xchg
pop
sub
mov
cld
pop
mov
add
inc
sbb
outs
cmp
xchg
(bad)
(bad)
(bad)
(bad)
cmp
cmp
ins
xlat
sahf
test
lds
or
invd
mov
(bad)
(bad)
(bad)
call
xchg
shr
mov
adc
and
dec
pop
xchg
cdq
sahf
(bad)
sub
and
push
or
aaa
std
shl
retf
push
sbb
lods
shr
add
cmp
mov
movs
aas
mov
ja
out
cli
retf
and
retf
pop
mov
inc
(bad)
test
mov
lock
call
pop
xor
mov
jge
cmps
fmul
jo
jae
mov
cmp
inc
paddw
(bad)
dec
pop
popa
lahf
xchg
mov
aas
mov
dec
and
sub
dec
push
sar
(bad)
inc
push
test
nop
int3
xchg
pop
js
outs
fiadd
fwait
jmp
test
dec
test
jmp
icebp
or
in
lock
inc
call
stos
sub
pop
xor
add
adc
ret
test
sbb
mov
pop
aaa
inc
repz
sar
clc
(bad)
(bad)
jmp
(bad)
(bad)
daa
or
lmsw
mov
repz
push
inc
les
stc
add
shr
outs
mov
cmp
add
cmps
les
inc
mov
xlat
push
pop
inc
or
(bad)
(bad)
push
pop
xlat
fs
addr16
add
push
dec
sub
pop
sub
movs
(bad)
(bad)
(bad)
call
push
cli
daa
add
cdq
adc
lods
cmp
aas
add
dec
cmps
loopne
rcl
dec
into
scas
mov
call
(bad)
cmp
icebp
push
fadd
rol
int3
ins
sub
push
inc
jge
mov
push
mov
adc
sbb
jmp
sub
sub
cld
(bad)
call
movs
ins
adc
in
mov
aaa
jmp
dec
dec
dec
mov
(bad)
jl
cld
(bad)
inc
jns
mov
test
ret
xchg
ds
sub
push
dec
pop
(bad)
(bad)
jmp
test
add
int
cmp
test
pushf
cwde
rcl
adc
xor
and
aas
jl
js
jbe
inc
shr
sub
or
add
cmp
jmp
je
mov
mul
in
jno
pop
mov
inc
in
xor
lock
push
xor
std
ficomp
enter
test
push
jb
inc
adc
inc
popa
icebp
dec
mov
(bad)
(bad)
(bad)
jmp
and
add
jmp
arpl
dec
jb
pop
dec
and
jmp
(bad)
(bad)
jmp
sbb
add
stc
into
das
add
mov
pop
scas
out
fwait
xchg
sti
(bad)
(bad)
(bad)
call
cld
shl
das
jno
in
(bad)
arpl
jo
mov
xchg
rcl
es
pop
lock
(bad)
dec
inc
rcl
pop
imul
fwait
(bad)
ficomp
enter
adc
lahf
mov
int
(bad)
(bad)
(bad)
(bad)
or
adc
gs
push
test
jge
mov
sub
sub
jae
vmread
fsub
shr
xchg
sbb
or
mov
adc
push
ss
jb
mov
movs
dec
fdivrp
(bad)
jmp
mov
jmp
ins
cmp
xchg
cdq
lds
cld
jg
dec
(bad)
(bad)
(bad)
cmp
(bad)
add
mov
mov
rcl
movs
inc
push
aaa
aam
arpl
inc
out
pop
pop
lea
mov
inc
cmovs
cli
(bad)
push
mov
dec
sub
sbb
loopne
int
dec
pushf
add
mov
jmp
test
push
push
cmovg
pop
dec
pop
je
(bad)
int
loopne
(bad)
(bad)
(bad)
(bad)
mov
daa
xlat
mov
xor
les
lea
mov
out
popf
pusha
sbb
loop
(bad)
(bad)
(bad)
inc
mov
sub
(bad)
dec
mov
jge
inc
mov
cmp
(bad)
(bad)
fstp
movs
add
dec
mov
jl
inc
jo
imul
mov
dec
fdivrp
call
loopne
sbb
fnstenv
rcr
inc
test
jo
call
cmps
(bad)
(bad)
(bad)
inc
out
rol
int
or
shr
push
sub
jle
sti
hlt
jg
hlt
push
and
(bad)
(bad)
fdivr
push
dec
mov
mov
jae
fs
or
xor
mov
jnp
cmp
(bad)
(bad)
(bad)
cld
add
mov
jge
sbb
xor
nop
enter
and
fptan
(bad)
(bad)
(bad)
call
or
xor
mov
lock
gs
dec
dec
imul
pop
das
std
pop
test
sub
stos
dec
outs
push
xchg
cmp
sbb
sti
mov
addr16
pop
je
(bad)
call
inc
into
int3
adc
pusha
stos
pop
sti
xor
nop
or
repnz
pop
pop
fs
(bad)
shr
jnp
sar
(bad)
in
lea
push
jg
rcl
(bad)
movs
sub
rol
sar
push
mov
sub
(bad)
(bad)
(bad)
jge
pop
scas
fbld
popa
mov
outs
mov
lahf
es
inc
jno
pop
inc
retf
pop
je
(bad)
(bad)
jg
aam
(bad)
ss
retf
lock
aam
dec
sbb
fwait
or
sub
xchg
(bad)
(bad)
(bad)
dec
pushf
and
cmps
or
out
push
cs
sub
mov
jecxz
dec
hlt
ins
lods
popa
fsub
mov
(bad)
(bad)
call
sbb
ins
mov
xor
hlt
int3
outs
repz
xor
shr
pop
cmc
test
(bad)
(bad)
inc
in
(bad)
jbe
std
(bad)
gs
cmp
imul
mov
pop
icebp
bound
je
sbb
push
les
les
dec
(bad)
(bad)
(bad)
inc
(bad)
push
loopne
mov
adc
adc
push
jne
xor
aad
mov
(bad)
dec
aam
mov
cmp
sti
xchg
xor
stos
inc
add
jne
push
call
mov
pop
sub
mov
adc
mov
mov
bound
(bad)
(bad)
out
jmp
pop
or
xlat
and
(bad)
in
or
gs
pop
xchg
pop
(bad)
(bad)
call
mov
cmp
cmps
inc
std
sbb
push
add
inc
mov
stos
push
ds
sub
fcomip
into
add
iret
sub
rcl
mov
cmp
pusha
(bad)
(bad)
(bad)
call
sbb
and
jo
int3
retf
and
and
mov
sub
mov
jg
dec
aas
test
mov
dec
nop
aaa
xor
in
aad
popf
mov
(bad)
(bad)
(bad)
call
iret
cmps
mov
pop
retf
dec
sbb
mov
mov
and
mov
cmc
in
repz
cli
sbb
cmps
bound
adc
adc
xor
inc
add
mov
mov
nop
inc
sbb
retf
loopne
clc
xchg
cmp
sbb
retf
fucomip
inc
mov
jmp
push
pop
mov
inc
pushw
mov
ss
jge
into
inc
movs
fld
in
or
call
stos
rcr
std
push
mov
sahf
dec
push
ret
loopne
push
or
(bad)
rcr
ins
mov
(bad)
(bad)
jmp
sub
cmps
in
push
xor
or
xchg
xchg
jle
push
lea
mov
push
cmc
imul
xchg
pop
(bad)
(bad)
(bad)
jmp
mov
retf
sbb
push
lahf
stos
xchg
push
push
jle
mov
cmp
mov
mov
(bad)
out
clc
outs
jmp
outs
xchg
jg
(bad)
dec
sbb
and
(bad)
call
cld
cwde
jbe
fs
cmp
or
mov
mov
loopne
inc
sbb
or
aad
sub
push
fcomp
fsub
pop
and
cld
retf
(bad)
inc
call
fucom
clc
sub
data16
xchg
movs
mov
and
repz
(bad)
(bad)
inc
inc
out
in
mov
jno
call
aad
rcl
cwde
pop
lds
pushf
pop
sbb
pop
mov
mov
fst
les
push
mov
mov
(bad)
jmp
cmc
cld
xlat
jl
outs
jl
fucom
inc
xlat
leave
jae
mov
fld
dec
lea
xchg
fcomip
(bad)
inc
pop
imul
xchg
inc
aad
in
lods
js
jnp
mov
jmp
push
jbe
repz
shr
idiv
sub
cmps
and
enter
outs
cli
jnp
das
xchg
xchg
jp
or
xchg
call
std
and
sti
fwait
daa
pop
(bad)
(bad)
(bad)
(bad)
jmp
les
pop
dec
lock
or
adc
shr
stos
or
packuswb
(bad)
(bad)
(bad)
push
jecxz
inc
jl
repnz
jmp
ret
dec
mov
inc
sub
(bad)
mov
call
push
aas
mov
sahf
xor
icebp
ror
adc
or
imul
ret
sbb
pushf
and
jae
and
fistp
sub
(bad)
(bad)
call
(bad)
xchg
inc
ins
mov
push
jmp
jl
in
xchg
mov
adc
adc
xchg
pusha
jg
(bad)
(bad)
sti
dec
cmp
pop
dec
loopne
and
xor
je
cmp
stc
les
sti
add
std
push
jle
iret
push
or
add
and
(bad)
mov
ss
les
dec
push
mov
jge
mov
push
push
jmp
(bad)
(bad)
push
es
(bad)
xchg
in
jecxz
test
pop
rep
push
jle
imul
popa
outs
jne
jne
mov
(bad)
(bad)
push
stos
inc
pop
jg
dec
ins
repnz
test
inc
test
adc
popf
pop
mov
xor
dec
out
(bad)
(bad)
(bad)
push
adc
jo
or
pusha
sbb
(bad)
std
sub
and
pop
mov
sub
(bad)
(bad)
inc
stos
fisub
xchg
sbb
jl
and
dec
mov
xor
or
jo
(bad)
(bad)
mov
ror
cmp
scas
cwde
sub
call
jnp
retf
jbe
jle
jnp
dec
mov
std
js
repz
sub
arpl
imul
or
dec
dec
fwait
test
sbb
mov
test
out
arpl
fbld
int3
mov
mov
adc
add
ret
fstp
and
lods
test
xchg
jp
fcmovbe
(bad)
(bad)
(bad)
(bad)
mov
mov
fstp
jno
test
sub
imul
(bad)
(bad)
(bad)
jmp
mov
mov
mov
add
imul
jp
pop
ins
movs
cmps
(bad)
(bad)
(bad)
(bad)
fstp
aas
or
shr
mov
jne
outs
jecxz
call
(bad)
inc
cmp
add
repz
dec
daa
push
mov
test
jmp
(bad)
(bad)
(bad)
mov
ret
js
fidivr
into
call
cli
adc
mov
pop
(bad)
(bad)
(bad)
call
lahf
and
sbb
pop
mov
outs
push
push
xor
shl
xor
or
jle
lock
(bad)
dec
repz
(bad)
iret
out
mov
push
inc
xchg
or
and
dec
das
cmp
outs
(bad)
jmp
add
add
fisttp
sub
out
enter
mov
pop
in
dec
mov
(bad)
(bad)
(bad)
jmp
idiv
cdq
cmps
xor
shl
mov
loopne
mov
adc
imul
(bad)
(bad)
(bad)
jmp
adc
push
adc
mov
ja
mov
mov
stos
sbb
test
ins
mov
(bad)
(bad)
call
int3
nop
ss
or
xchg
push
ret
push
mov
push
(bad)
call
cld
imul
xchg
test
sub
arpl
maxps
dec
sub
stos
sahf
or
(bad)
clc
mov
ins
out
les
sub
push
pusha
(bad)
test
aam
scas
sti
inc
push
fiadd
xchg
push
rcl
mov
fist
mov
call
add
xchg
jmp
outs
(bad)
push
xchg
lea
xchg
int
pop
rol
(bad)
(bad)
(bad)
jmp
sub
repnz
nop
adc
cli
lods
xor
jg
shl
out
ficomp
(bad)
(bad)
call
mov
pop
in
inc
adc
hlt
mov
push
push
inc
cdq
sbb
clc
xchg
lahf
lea
and
aad
dec
cmp
pop
fldenv
sti
pop
jb
xchg
sub
xchg
(bad)
jg
lods
inc
xchg
std
mov
lahf
mov
bound
mov
hlt
or
out
dec
pop
push
shl
(bad)
(bad)
(bad)
jmp
mov
shl
out
movs
jge
sbb
ss
ins
mov
cmps
and
dec
(bad)
(bad)
(bad)
call
ins
mov
scas
inc
retf
jo
loopne
push
ret
add
icebp
std
jp
jno
ins
out
in
push
sbb
call
stos
out
inc
rol
lds
dec
add
and
popa
fsub
stc
nop
push
mov
out
mov
mov
pop
cli
(bad)
mov
test
(bad)
(bad)
dec
push
mov
movs
mov
xor
cmc
repz
mov
push
(bad)
(bad)
(bad)
call
(bad)
mov
popf
mov
dec
push
sbb
push
mov
(bad)
(bad)
inc
cmc
pop
fldl2e
test
and
add
mov
(bad)
leave
into
cs
mov
loope
mov
rol
sar
mov
es
push
push
xchg
loop
push
ins
push
test
mov
clc
(bad)
jns
ror
jmp
imul
mov
aam
xchg
fistp
(bad)
(bad)
(bad)
call
retf
enter
mov
mov
loop
jl
stc
lahf
mov
cli
int
inc
xchg
test
(bad)
(bad)
(bad)
out
lds
lea
push
push
bound
icebp
in
lods
std
mov
push
movs
in
outs
fwait
sar
(bad)
jmp
enter
sahf
pushf
in
xchg
test
stc
sub
xchg
push
outs
in
(bad)
ds
(bad)
(bad)
(bad)
push
adc
inc
clc
retf
shl
(bad)
not
xor
fadd
out
add
(bad)
fistp
jno
fsubp
test
vpackuswb
add
daa
xchg
lock
and
nop
sub
push
(bad)
(bad)
mov
xor
jmp
icebp
scas
jnp
push
adc
jmp
sbb
inc
popf
leave
or
xor
and
mov
jae
rol
sar
mov
push
mov
dec
pop
xor
das
in
stc
sub
rol
adc
call
and
fnsave
stos
push
sub
(bad)
(bad)
jmp
xchg
(bad)
(bad)
retf
out
adc
test
popa
ret
pop
jns
js
popa
adc
xchg
adc
xchg
mov
push
shl
and
mov
into
sbb
sbb
mov
cmp
(bad)
(bad)
(bad)
call
mov
add
loop
push
push
into
sub
leave
sahf
xchg
or
mov
ins
(bad)
(bad)
(bad)
jmp
sub
pushf
jae
(bad)
jg
bound
fistp
movs
mov
add
nop
loop
mov
(bad)
(bad)
(bad)
inc
stos
shr
pop
adc
lods
aad
imul
cli
(bad)
cmc
add
(bad)
(bad)
(bad)
call
dec
hlt
ds
add
adc
loopne
arpl
repnz
fimul
mov
out
jl
call
leave
loope
ins
int
cwde
es
sbb
xchg
sbb
(bad)
call
outs
ret
push
movs
retf
push
div
or
add
dec
leave
ds
(bad)
(bad)
(bad)
jle
je
ret
ret
pop
leave
popf
xchg
test
cdq
jmp
pop
in
inc
loope
xor
outs
and
cmp
mov
sub
into
push
imul
arpl
ss
xor
nop
sub
jbe
add
cmp
popa
js
sbb
(bad)
(bad)
jmp
mov
sbb
ret
jecxz
inc
mov
(bad)
in
xchg
pusha
int3
call
(bad)
hlt
gs
or
cmp
jb
stos
push
inc
pop
mov
into
(bad)
(bad)
(bad)
(bad)
cmp
gs
mov
mov
out
dec
mov
add
rcl
leave
dec
adc
add
clc
(bad)
(bad)
call
mov
scas
xor
mov
adc
cmps
repz
aaa
test
into
fs
dec
rcl
pop
bnd
mov
arpl
cmp
mov
les
(bad)
(bad)
(bad)
inc
scas
mov
add
add
pop
out
xchg
fisub
push
ja
jmp
push
add
mov
mov
(bad)
push
xor
and
ficomp
(bad)
(bad)
call
ret
pusha
cmp
sbb
sub
sbb
add
jns
inc
dec
jno
(bad)
(bad)
(bad)
(bad)
jns
jecxz
xchg
dec
fs
or
jnp
jge
rcr
cs
out
push
in
ret
xchg
(bad)
(bad)
jmp
cdq
xchg
add
lock
inc
pusha
pop
stc
mov
xor
outs
clc
(bad)
(bad)
mov
adc
or
dec
jns
lea
(bad)
(bad)
(bad)
(bad)
call
jle
inc
or
mov
pop
inc
and
jns
xchg
xchg
call
(bad)
(bad)
(bad)
jmp
aam
jmp
add
sar
pusha
scas
xchg
dec
dec
inc
adc
daa
dec
cmp
enter
(bad)
(bad)
call
outs
pop
jp
pop
test
sub
jle
loopne
push
aad
xor
stos
pusha
sub
call
mov
add
loopne
sbb
rcl
(bad)
loop
add
push
inc
mov
(bad)
(bad)
(bad)
jmp
pusha
jo
ffree
gs
xchg
mov
or
sti
fld
jae
sub
outs
ins
psubusw
(bad)
(bad)
call
jnp
int
xor
retf
push
loop
(bad)
retf
push
imul
mov
add
(bad)
dec
or
xor
add
(bad)
js
and
sub
and
push
repnz
push
adc
aas
bound
nop
sahf
sbb
cmps
xchg
iret
adc
(bad)
jmp
and
sti
lods
ja
dec
add
lds
mov
sar
jbe
ins
or
xor
or
xchg
cwde
dec
cmp
pop
jnp
test
push
int3
(bad)
jmp
mov
and
mov
sub
jg
sub
and
(bad)
dec
cmp
mov
retf
or
stos
adc
xchg
mov
(bad)
(bad)
(bad)
(bad)
jle
test
cwde
push
pop
mov
mov
idiv
inc
addr16
mov
adc
inc
(bad)
test
pop
inc
enter
xor
xchg
cdq
pop
add
jne
inc
pop
pusha
adc
(bad)
jmp
ins
js
jg
push
std
rol
push
push
xor
mov
ja
push
cld
inc
ins
ret
push
pop
int3
cld
push
cmc
and
dec
add
(bad)
jmp
mov
mov
shl
push
(bad)
stos
out
jmp
dec
(bad)
jmp
inc
or
fs
call
dec
sbb
or
(bad)
jns
scas
mov
iret
add
push
jle
addr16
xor
mov
leave
pop
stc
shl
mov
clc
pop
repz
sub
int
fstp
aas
(bad)
ins
sbb
and
call
div
(bad)
stc
pop
cmps
fs
(bad)
pop
mov
cmp
mov
adc
inc
(bad)
xor
(bad)
(bad)
(bad)
jmp
jnp
pushf
test
jno
jbe
push
fadd
fild
xchg
das
mov
(bad)
(bad)
aas
test
das
sub
jmp
sub
(bad)
inc
rcl
push
push
inc
out
ins
mov
jle
mov
dec
lock
cmp
pop
cmc
mov
(bad)
(bad)
(bad)
call
jns
push
lahf
mov
cmps
imul
push
mov
call
xchg
scas
mov
popf
rcl
xor
pop
pop
(bad)
pop
(bad)
(bad)
(bad)
call
pusha
std
test
sar
sahf
lock
xor
pop
push
xor
aad
pop
fdivp
sbb
(bad)
(bad)
call
jl
jno
xchg
add
leave
xchg
sar
dec
cdq
mov
repnz
loopne
pusha
push
sti
in
mov
fild
movs
(bad)
push
push
or
or
(bad)
fcomip
dec
mov
(bad)
mov
jge
pop
pop
or
xchg
jb
pop
leave
data16
pusha
scas
iret
nop
dec
je
dec
ins
cwde
inc
shl
(bad)
(bad)
call
ror
fst
and
clc
and
add
dec
or
ror
mov
ret
(bad)
(bad)
call
mov
iret
push
ins
inc
push
not
lods
aaa
ins
add
ins
je
push
add
jg
fiadd
outs
xchg
and
mov
imul
out
(bad)
(bad)
dec
enter
jle
outs
mov
stos
test
rol
add
mov
sbb
inc
popf
add
jnp
mov
loopne
(bad)
jg
add
push
sar
loope
dec
xor
pushf
pushf
in
popa
ss
and
(bad)
fbstp
aam
iret
and
test
loopne
jmp
mov
and
je
jmp
inc
leave
dec
mov
cmp
stos
sub
bound
or
mov
sahf
pusha
aad
popa
jo
jmp
jmp
sub
rcl
in
mov
scas
enter
mov
cmp
(bad)
inc
add
mov
sahf
add
jle
lahf
mov
jle
mov
sahf
mov
jns
(bad)
inc
jmp
xor
das
dec
in
sahf
mov
scas
(bad)
(bad)
mov
pop
imul
push
mov
fmul
into
loop
(bad)
(bad)
inc
les
push
jae
push
mov
out
out
pop
and
dec
ja
inc
sbb
sti
cdq
add
data16
jecxz
sub
lock
shr
sbb
and
inc
mov
sti
shl
add
retf
lods
(bad)
fild
jno
pop
add
and
sbb
retf
jle
pop
bound
cli
popf
pop
hlt
(bad)
inc
inc
iret
dec
loopne
jge
xor
test
xor
sub
int
test
lods
sar
(bad)
(bad)
(bad)
call
jns
sar
dec
mov
xchg
(bad)
mov
push
inc
dec
test
mov
jl
or
(bad)
(bad)
(bad)
inc
jecxz
mov
mov
mov
xor
push
mov
ds
xor
mov
inc
mov
push
push
stos
repz
fsubr
mov
cmps
fistp
(bad)
(bad)
(bad)
jmp
push
jl
pop
ret
jb
popa
xchg
cdq
retf
xchg
es
inc
jno
adc
(bad)
(bad)
(bad)
call
scas
pushf
add
cli
or
pop
adc
and
add
xchg
push
(bad)
call
inc
jnp
sbb
xchg
addr16
dec
mov
ds
addr16
(bad)
(bad)
out
cli
mov
aas
push
adc
test
mov
inc
retf
into
dec
sub
(bad)
(bad)
(bad)
jmp
test
mov
push
cmp
fwait
xor
dec
or
jle
push
repz
cmps
adc
call
cld
jmp
stos
dec
es
int
call
fisubr
xor
mov
(bad)
(bad)
(bad)
jmp
mov
mov
adc
outs
test
or
in
shl
daa
mov
xor
or
cmps
or
xchg
call
loopne
cmp
loopne
cmp
stos
pop
mov
or
mov
outs
es
(bad)
(bad)
(bad)
jp
sub
stos
xchg
and
pop
and
jle
cmp
cmps
jle
ins
loope
xor
adc
lds
(bad)
(bad)
(bad)
jmp
aad
rcl
sbb
sbb
idiv
xor
cmp
or
mov
in
mov
inc
jmp
cli
(bad)
call
iret
push
sar
push
inc
pusha
add
pushf
jno
stos
inc
mov
jmp
push
cmp
cmp
push
push
jo
je
sar
(bad)
(bad)
(bad)
(bad)
cmp
sbb
test
inc
xbegin
cmp
or
cld
rcr
dec
rcr
cld
lods
popa
(bad)
out
(bad)
dec
(bad)
imul
dec
ret
add
push
rol
sub
xor
popa
lds
cwde
es
(bad)
(bad)
call
inc
sub
cwde
ins
in
add
fdiv
xchg
fsub
stos
mov
dec
mov
mov
mov
retf
setle
fidiv
popf
adc
scas
mov
loopne
iret
add
push
(bad)
(bad)
(bad)
call
jmp
mov
mov
cmp
imul
adc
fist
mov
(bad)
(bad)
(bad)
call
mov
(bad)
rcl
or
and
sub
mov
sub
cmps
mov
scas
ss
xor
push
cmp
dec
fucomip
push
jecxz
iret
push
stc
dec
outs
mov
add
stc
dec
adc
(bad)
jmp
mov
aad
aam
or
mov
sbb
outs
js
cli
(bad)
dec
fistp
movs
sub
mov
clc
pop
mov
movzx
(bad)
(bad)
(bad)
dec
neg
xadd
sub
pusha
xchg
das
xor
add
adc
jne
cmp
aam
retf
mov
cli
in
push
nop
clc
scas
push
ret
(bad)
(bad)
(bad)
jmp
scas
mov
add
paddsw
ins
shr
mov
mov
loope
outs
pushw
ret
fdiv
inc
inc
sub
fld
data16
bnd
add
(bad)
(bad)
(bad)
xor
jle
loopne
les
imul
in
mov
pop
push
jmp
js
mov
mov
push
xor
ror
cmovnp
in
and
add
jo
pop
lea
mov
pop
int
(bad)
(bad)
(bad)
mov
xor
jmp
mov
jg
outs
pop
xor
mov
and
mov
(bad)
(bad)
call
jb
mov
sbb
push
adc
adc
and
clc
outs
sbb
stos
sbb
(bad)
inc
iret
pop
jo
jmp
rcl
das
adc
lods
fdivp
movs
pop
xchg
into
je
(bad)
(bad)
(bad)
push
(bad)
cli
int
and
(bad)
dec
add
aaa
add
jae
mov
(bad)
(bad)
inc
push
jne
push
loopne
push
push
shr
fistp
mov
or
xchg
cmps
pop
sbb
cmp
and
mov
std
inc
adc
int
js
imul
(bad)
(bad)
(bad)
jmp
das
mov
jo
mul
into
jp
ret
(bad)
packsswb
xlat
mov
bound
xchg
push
pusha
sbb
(bad)
dec
mov
fsubr
mov
mov
mov
mov
(bad)
jg
call
add
mov
xchg
jbe
xchg
stos
test
dec
push
cld
(bad)
call
adc
das
pop
lds
inc
aas
push
xor
cmp
ins
rcr
mov
jmp
js
in
dec
push
or
jge
(bad)
jge
jo
es
(bad)
(bad)
(bad)
dec
lock
sub
fwait
mov
mov
add
xchg
stc
inc
push
cmp
ja
(bad)
fld
fist
mov
xchg
clc
cmp
push
pop
pop
dec
and
fistp
xor
cmp
dec
jge
jle
popf
adc
push
stos
inc
in
or
dec
(bad)
(bad)
call
fist
fisub
xchg
dec
call
out
and
pop
adc
add
jmp
out
enter
xor
ds
mov
jb
jmp
(bad)
(bad)
dec
and
out
into
dec
cwde
and
pop
jle
mov
mov
call
jmp
rcl
(bad)
(bad)
dec
ror
mov
cmp
arpl
and
sub
dec
sbb
pop
enter
cdq
int
or
loope
cmp
ss
int
daa
lock
adc
ss
mov
fs
mov
popf
js
(bad)
(bad)
(bad)
jmp
pop
push
cmp
and
inc
or
xor
and
sub
cmp
xor
jae
mov
adc
lea
imul
or
mov
lock
pop
(bad)
(bad)
(bad)
jmp
aas
fsubr
outs
or
pop
std
push
ret
jecxz
and
mov
sar
call
mov
xor
stos
stos
mov
and
inc
push
jmp
jmp
dec
fisubr
xlat
test
mov
dec
aaa
(bad)
lock
(bad)
call
fsub
add
call
cmps
mov
jp
and
aas
shr
xchg
mov
adc
(bad)
(bad)
call
cmp
mov
jp
jmp
lahf
call
inc
enter
(bad)
(bad)
dec
ret
repnz
mul
mov
jne
popf
das
and
fimul
lods
ja
mov
hlt
cli
cmp
pop
jne
xor
test
jp
mov
clc
daa
jp
(bad)
(bad)
(bad)
(bad)
js
std
fcomp
ins
clc
xchg
sbb
sub
jae
and
mov
stos
out
aad
push
out
(bad)
(bad)
(bad)
call
(bad)
xchg
loop
mov
les
mov
inc
pop
cmp
popf
inc
cmp
std
xchg
gs
(bad)
(bad)
(bad)
call
fiadd
in
popa
lahf
inc
sub
cmp
xor
cmp
pop
(bad)
(bad)
(bad)
push
jne
leave
mov
(bad)
sub
mov
pop
ins
sbb
pop
imul
mov
inc
fdivr
addr16
call
cmp
xchg
out
sbb
(bad)
(bad)
(bad)
push
adc
out
enter
test
mov
inc
scas
test
inc
jmp
aaa
cld
jmp
push
push
test
aas
mov
jmp
mov
(bad)
(bad)
(bad)
jmp
adc
sbb
mov
lods
stos
sbb
inc
js
(bad)
jl
popf
push
dec
jle
js
mov
(bad)
(bad)
(bad)
js
call
scas
or
inc
outs
in
dec
add
(bad)
retf
add
arpl
call
aad
xor
nop
sub
(bad)
scas
call
das
js
sbb
jge
inc
sbb
out
sub
std
imul
add
inc
inc
sub
mov
aas
int3
adc
push
mov
(bad)
call
jecxz
xor
add
lahf
test
push
into
xlat
ror
push
sar
(bad)
(bad)
(bad)
jg
mov
adc
pop
inc
ficomp
ja
imul
(bad)
(bad)
(bad)
(bad)
cmp
fcomip
out
inc
and
mov
sub
neg
push
or
fcmovnbe
cmp
call
enter
or
ret
cmp
(bad)
(bad)
jmp
sbb
push
xchg
sub
pop
ja
mov
outs
push
xchg
and
or
dec
jg
(bad)
dec
pop
hlt
fnstcw
mov
pop
adc
push
gs
jae
inc
fimul
jl
test
call
out
in
retf
lock
int3
call
and
(bad)
dec
pop
mov
jae
loopne
cmps
inc
mov
lods
jne
mov
(bad)
out
stc
(bad)
imul
rol
inc
unpcklps
ins
ror
xor
test
dec
push
outs
inc
stos
popf
pop
or
push
(bad)
and
inc
and
pop
out
mov
stos
mov
pop
jae
or
mov
ins
and
scas
(bad)
call
in
sti
mov
and
xchg
push
sub
in
test
jp
xlat
push
ds
and
and
jp
cmp
call
sti
jge
iret
xor
pop
sub
mov
retf
lods
fs
inc
sub
xchg
sbb
ret
das
test
jge
(bad)
(bad)
(bad)
jg
xchg
cmp
push
dec
jno
ffreep
sahf
xchg
xor
xchg
jmp
and
(bad)
(bad)
(bad)
dec
into
dec
mov
sti
(bad)
ror
push
or
dec
repnz
fisubr
add
int3
and
js
cs
fucomip
pop
fisub
outs
and
dec
sahf
les
add
pop
loopne
outs
fwait
mov
movs
jae
std
sub
cli
push
icebp
pop
iret
mov
(bad)
(bad)
(bad)
stc
xchg
mov
adc
push
retf
daa
pop
mov
iret
xor
xchg
xchg
adc
call
imul
js
dec
add
pop
adc
icebp
lock
mov
xchg
xchg
les
inc
fwait
push
push
icebp
stc
inc
mov
sbb
lds
pop
mov
xchg
popf
cmp
(bad)
dec
test
jno
jbe
pop
mov
and
nop
lea
(bad)
inc
mov
stos
leave
ret
arpl
and
sub
jb
mov
in
xor
mov
icebp
or
cdq
aad
cdq
shr
ja
pop
or
dec
cmp
add
(bad)
(bad)
call
aam
pushf
mov
jne
inc
or
movs
jp
inc
or
ror
jo
mov
(bad)
jg
cli
inc
adc
imul
push
loope
jecxz
xchg
adc
pop
mov
mov
aam
(bad)
(bad)
(bad)
jmp
sub
fstp
jbe
lahf
test
add
addr16
les
xor
jmp
push
dec
cld
repnz
fucomp
ror
packsswb
adc
lods
mov
cmp
bound
fisubr
leave
fst
hlt
scas
mov
jbe
dec
clc
inc
in
(bad)
(bad)
(bad)
fcomi
aad
dec
inc
imul
retf
out
outs
int3
sbb
(bad)
ins
retf
sbb
inc
push
je
daa
std
imul
bound
mov
(bad)
mul
and
mov
mov
ds
cmp
xor
repz
(bad)
jae
(bad)
(bad)
(bad)
call
mov
push
(bad)
js
imul
jno
outs
outs
add
sub
into
mov
adc
fst
pop
jecxz
push
cmp
aad
loop
jns
mov
mov
fiadd
pop
pusha
fcomp
mov
int
jg
dec
xor
cmp
(bad)
jmp
push
mov
and
mov
int3
cmp
enter
ret
(bad)
(bad)
mov
push
jmp
imul
loopne
xchg
rcr
in
ret
cmps
mov
push
(bad)
call
scas
sbb
das
cmp
or
and
fist
sar
call
dec
imul
imul
inc
(bad)
jmp
imul
lea
cld
jecxz
mov
je
jo
ins
adc
pusha
mov
(bad)
(bad)
(bad)
push
and
movs
(bad)
jbe
xchg
xor
test
jmpw
cld
(bad)
dec
add
jmp
aas
(bad)
mov
mov
call
sub
out
cmp
scas
cli
dec
mov
(bad)
mov
or
cmp
xchg
pop
mov
(bad)
(bad)
(bad)
out
jg
cmp
out
rcr
clc
and
mov
mov
or
and
call
(bad)
(bad)
(bad)
call
or
xchg
scas
cmp
xor
test
add
scas
add
scas
sar
jecxz
(bad)
(bad)
inc
sub
dec
jmp
imul
in
mov
(bad)
(bad)
dec
xchg
mov
addr16
sbb
add
(bad)
leave
jecxz
in
mov
xchg
xor
mov
(bad)
(bad)
(bad)
cli
inc
push
out
inc
fisttp
pushf
sub
or
dec
mov
mov
scas
inc
ins
pop
fwait
adc
out
(bad)
(bad)
dec
subps
fmul
popf
jno
or
mov
(bad)
(bad)
pop
or
int3
xchg
(bad)
(bad)
(bad)
(bad)
jmp
inc
je
inc
pop
stc
pop
push
loope
push
pusha
cmp
lods
sbb
mov
(bad)
(bad)
(bad)
dec
lock
ret
ret
dec
pop
or
in
hlt
mov
test
sbb
out
movzx
xchg
pop
pushf
jge
(bad)
fdiv
jbe
pusha
pop
jl
push
(bad)
(bad)
(bad)
inc
mov
jbe
jnp
or
daa
jne
xor
outs
adc
sbb
rcr
(bad)
in
inc
or
inc
mov
je
mov
inc
addr16
dec
leave
dec
mov
pop
xchg
(bad)
jo
inc
sub
shl
xor
mov
rol
popa
pop
retf
push
(bad)
(bad)
(bad)
(bad)
fst
mov
jle
add
adc
aad
pop
shr
pop
mov
push
or
mov
jp
xor
outs
mov
out
(bad)
clc
xchg
outs
push
call
das
shl
xchg
jmp
gs
push
and
loop
pop
ins
xchg
ror
mov
out
dec
add
jmp
mov
push
xor
adc
aad
jp
(bad)
in
stos
popf
icebp
(bad)
(bad)
(bad)
push
stc
pop
mov
in
push
xchg
mov
mov
mov
test
inc
outs
aad
jg
fbld
sbb
jnp
(bad)
(bad)
call
mov
mov
int
out
sub
dec
repz
inc
lahf
fwait
xchg
jns
sub
inc
out
xor
(bad)
(bad)
dec
push
dec
ret
dec
jecxz
fcomp
mov
mov
sub
pop
js
xor
call
(bad)
(bad)
push
inc
call
cmp
int
mov
cs
sbb
int3
and
hlt
push
lahf
dec
add
stos
(bad)
(bad)
(bad)
inc
test
pusha
call
leave
mov
pop
mov
sbb
xor
mov
scas
clc
(bad)
(bad)
out
jb
mov
sbb
push
pop
xchg
or
push
jbe
push
mov
clc
(bad)
(bad)
(bad)
in
sub
mov
push
mov
and
inc
lods
arpl
mov
ficom
(bad)
dec
jecxz
stos
idiv
or
(bad)
mov
dec
inc
mov
call
test
sub
sbb
mov
jbe
inc
stc
or
inc
mov
push
push
movs
or
cmps
push
add
fadd
push
and
(bad)
(bad)
in
ret
fdivr
cmps
ss
pop
sbb
stos
aad
jge
ret
jb
xchg
popa
cmp
call
shr
adc
dec
stos
mov
jne
xor
(bad)
jg
mov
lods
or
popa
fdiv
sbb
xor
xor
test
(bad)
cmp
sub
cmps
fsubrp
test
inc
push
adc
xchg
pop
fisttp
mov
xor
push
clc
jne
ret
dec
jmp
outs
(bad)
hlt
fwait
ds
jbe
jno
adc
(bad)
(bad)
call
or
pop
in
xchg
es
das
inc
xchg
or
xor
fdivr
(bad)
(bad)
call
aad
or
dec
sbb
sbb
jnp
sub
sub
push
jno
or
inc
(bad)
(bad)
(bad)
call
aad
mov
xor
adc
mul
sub
mov
out
fdivr
xchg
fild
mov
push
add
loopne
stos
sub
add
in
add
inc
rol
sbb
clc
mov
and
mov
mov
jnp
data16
lea
(bad)
(bad)
out
jle
adc
jb
jg
js
test
repz
outs
nop
push
nop
inc
(bad)
(bad)
(bad)
call
sub
adc
jl
ja
add
cdq
hlt
push
mov
daa
mov
sar
call
(bad)
out
add
dec
inc
mov
shl
std
and
out
add
xchg
test
(bad)
dec
sub
mov
das
jmp
in
xor
ds
xchg
scas
sub
mov
(bad)
mov
test
pop
loope
in
clc
scas
call
inc
add
retf
xchg
pop
and
(bad)
(bad)
call
jns
adc
pop
mov
cmp
xor
jecxz
aad
jmp
pushf
push
retf
leave
xchg
loope
iret
sbb
arpl
or
adc
pusha
mov
cmp
xor
adc
lds
mov
cmp
(bad)
push
adc
(bad)
jg
(bad)
jae
(bad)
mov
and
inc
mov
xor
ins
movs
sbb
cmp
or
test
push
cmps
jp
shl
and
fisttp
movs
xor
jae
shl
out
cli
(bad)
jmp
popa
dec
ds
(bad)
leave
mov
pop
adc
lea
mov
(bad)
dec
mov
test
mov
xchg
push
mov
and
(bad)
(bad)
push
imul
inc
fucomip
mov
fcom
push
or
test
in
lahf
and
or
(bad)
(bad)
(bad)
call
movs
pop
jae
cmc
xchg
or
call
add
jno
xchg
or
(bad)
(bad)
(bad)
(bad)
sti
sbb
es
jmp
sahf
je
add
sahf
int
in
jo
loopne
lock
out
adc
push
ss
and
sahf
pop
add
movs
test
or
int
mov
jno
imul
jmp
sub
(bad)
fild
fadd
jecxz
inc
dec
add
sbb
xchg
and
(bad)
call
cwde
mov
inc
ds
es
out
sub
and
inc
add
(bad)
(bad)
(bad)
dec
data16
rol
mov
jp
mov
lea
int3
inc
dec
push
dec
add
icebp
push
mov
jp
or
lods
cmps
push
mov
push
jl
pop
dec
inc
aas
(bad)
iret
bound
xchg
(bad)
ins
ja
or
test
xchg
(bad)
(bad)
(bad)
(bad)
cmp
mov
bound
xchg
mov
cmp
mov
dec
push
push
jmp
sbb
sub
cmp
outs
(bad)
(bad)
jmp
or
adc
cdq
push
push
mov
sub
sub
stos
dec
cmp
pop
outs
(bad)
(bad)
(bad)
call
cmp
add
jno
out
jns
mov
stos
cs
(bad)
out
call
dec
jmp
ret
push
sbb
jne
js
movs
rcr
dec
gs
mov
inc
fwait
jmp
cli
dec
arpl
adc
xor
ins
in
and
or
adc
inc
jmp
inc
or
mov
mov
test
jne
xor
(bad)
or
call
rcr
mov
inc
mov
xchg
adc
(bad)
mov
in
bnd
push
scas
push
add
nop
retf
dec
dec
pop
xlat
(bad)
and
inc
and
(bad)
(bad)
(bad)
jmp
pop
aad
rcl
cmp
push
in
ja
push
jg
jb
mov
jo
(bad)
(bad)
(bad)
call
imul
enter
mov
pusha
(bad)
rcr
imul
rcl
sar
(bad)
dec
mov
push
or
cmp
cmc
inc
mov
fldcw
imul
outs
(bad)
(bad)
(bad)
jmp
pop
cmps
xchg
pop
inc
fimul
(bad)
mov
fwait
mov
adc
mov
fidiv
(bad)
call
xchg
jg
pop
hlt
mov
mov
inc
or
test
(bad)
adc
adc
ins
mov
push
in
loop
mov
(bad)
jp
les
pop
pop
scas
jl
cmp
test
mov
jecxz
or
(bad)
(bad)
push
dec
add
mov
test
cmp
je
xor
call
pop
pop
(bad)
jmp
cmps
rcl
adc
movs
fsubr
pop
and
inc
mov
mov
sub
(bad)
(bad)
(bad)
fdivr
push
cmp
mov
enter
pop
out
(bad)
in
push
inc
or
int3
mov
aad
fist
xchg
adc
mov
arpl
add
mov
and
xor
(bad)
inc
std
loopne
sbb
xchg
or
das
cmp
clc
dec
lea
test
xchg
jo
(bad)
(bad)
(bad)
call
sub
repz
cvtps2pd
imul
pusha
test
fldcw
(bad)
(bad)
(bad)
dec
or
jecxz
iret
mov
call
outs
mov
data16
sar
mov
(bad)
(bad)
call
xor
or
add
pusha
and
sahf
sub
cld
hlt
jg
(bad)
(bad)
call
inc
mov
jge
mov
jne
out
inc
mov
jns
mov
push
sub
(bad)
dec
push
je
cmps
pop
ror
jne
jns
mov
cmp
scas
mov
sbb
sub
(bad)
(bad)
(bad)
push
inc
(bad)
mov
mov
cdq
jnp
mov
mov
sar
inc
xchg
pop
int
mov
jmp
pop
and
cdq
clc
xchg
shl
mov
test
in
stc
dec
push
scas
add
(bad)
call
retf
repnz
mov
dec
sub
pop
mov
pop
in
cmps
(bad)
(bad)
(bad)
inc
push
aaa
mov
pop
jno
push
mov
sbb
rol
int
cmc
or
sub
sub
jmp
mov
stos
mov
mov
fnstsw
ins
das
(bad)
in
xchg
or
dec
mov
hlt
cdq
cs
xchg
sti
mov
or
push
sahf
in
(bad)
(bad)
(bad)
inc
stos
add
add
sub
mov
fs
xchg
in
rcl
call
shl
pop
inc
or
stc
jecxz
stos
mov
adc
mov
jae
jb
popf
enter
ret
lods
lods
add
sbb
jmp
(bad)
out
jle
into
adc
xchg
xchg
push
popf
dec
test
fld
gs
jno
cmp
sub
das
push
fwait
stc
pop
out
sub
(bad)
(bad)
fist
inc
cmps
(bad)
mov
in
int
pushf
push
pop
cmps
je
pop
cmps
shl
ins
inc
loop
(bad)
(bad)
jp
sbb
adc
movs
xchg
pop
pop
dec
mov
cmps
pusha
mov
scas
les
cmp
cmp
push
mov
jmp
mov
repnz
or
(bad)
(bad)
call
gs
iret
ficom
mov
pop
lods
sahf
out
loopne
jno
jg
adc
outs
aam
or
mov
push
movs
mov
fidivr
mov
and
cwde
push
daa
rol
(bad)
(bad)
(bad)
fbld
in
inc
bound
mov
inc
xchg
adc
xor
(bad)
push
mov
xor
add
(bad)
push
cld
xchg
(bad)
or
lock
dec
mov
push
loope
inc
xor
(bad)
(bad)
call
push
sbb
push
shl
shl
ror
imul
mov
or
xor
(bad)
(bad)
push
rol
aad
movups
jl
add
fiadd
mov
scas
sub
cmps
(bad)
(bad)
(bad)
call
mov
mov
fidivr
xchg
adc
push
mov
pop
mov
and
(bad)
(bad)
jmp
call
shl
dec
jbe
mov
gs
ret
arpl
xchg
cmp
loopne
in
(bad)
(bad)
(bad)
push
jb
scas
fcomp
outs
icebp
ss
fst
cmps
jp
adc
mov
adc
in
(bad)
(bad)
(bad)
call
pop
push
fdivr
add
add
out
mov
add
adc
inc
into
js
(bad)
(bad)
(bad)
dec
rol
sub
dec
ss
dec
mov
push
mov
inc
cwde
xor
out
fdivrp
(bad)
(bad)
jmp
adc
iret
jae
cmps
or
pop
leave
and
jecxz
iret
jmp
lea
jg
(bad)
sar
ss
lods
les
jno
push
push
and
dec
(bad)
(bad)
(bad)
jmp
fwait
mov
les
jp
stos
jmp
inc
push
int
(bad)
mov
sub
iret
xchg
sub
in
xchg
push
imul
push
jge
push
jecxz
scas
(bad)
call
mov
cmc
inc
add
(bad)
mov
fucomip
mov
(bad)
(bad)
inc
lea
jmp
(bad)
dec
ret
cmp
add
xchg
push
lods
repz
or
mov
mov
push
jle
gs
vmaxpd
ret
into
rol
(bad)
(bad)
(bad)
(bad)
xchg
ds
sub
pop
test
jg
xlat
out
shr
dec
and
(bad)
call
rcl
sbb
(bad)
push
jae
fist
inc
dec
add
(bad)
(bad)
dec
shl
scas
cmps
mov
jle
cli
mov
push
int3
push
mov
inc
and
pop
cli
stos
popa
ret
gs
(bad)
(bad)
jmp
push
cld
dec
xor
adc
iret
push
mov
xlat
(bad)
(bad)
(bad)
call
pop
test
push
aas
cmp
ins
inc
lods
add
fs
and
adc
jg
(bad)
(bad)
dec
ds
inc
xor
int3
cs
mov
fild
cld
xor
sub
gs
sbb
sbb
inc
mov
adc
dec
hlt
xor
mov
sbb
ja
jb
jp
(bad)
(bad)
(bad)
aas
movs
or
ja
push
sub
stos
mov
(bad)
arpl
jmp
ins
(bad)
(bad)
(bad)
jmp
xchg
cs
dec
adc
or
rol
loopne
add
lea
(bad)
push
int
sub
inc
sbb
loope
pop
inc
aad
inc
fs
sar
call
mov
stos
minps
jmp
xchg
jbe
add
jl
sub
or
mov
call
dec
xchg
arpl
fld
xor
and
aam
cwde
popa
pusha
mov
jmp
jno
or
(bad)
jmp
movs
adc
mov
sbb
jmpw
mov
cmp
lock
cmp
fist
jp
pop
inc
arpl
inc
or
lahf
in
(bad)
(bad)
(bad)
jmp
jns
shl
pushw
xor
cli
out
or
fwait
cmp
xor
sbb
aas
sbb
mov
(bad)
inc
sbb
or
pusha
xchg
loop
stc
scas
outs
sub
add
inc
sub
gs
ins
(bad)
mov
inc
in
repnz
cs
add
(bad)
(bad)
(bad)
(bad)
fisubr
cmp
jns
jecxz
push
and
ror
rcr
and
rol
push
pop
or
(bad)
(bad)
(bad)
call
std
nop
push
pop
add
dec
out
fmul
add
cmp
xor
push
xor
movs
daa
jnp
arpl
push
(bad)
inc
aas
shl
(bad)
jecxz
fstp
les
aam
and
(bad)
(bad)
(bad)
jmp
push
stos
js
push
push
adc
add
test
mov
sbb
cli
cmp
(bad)
xchg
add
sbb
inc
out
mov
(bad)
(bad)
(bad)
mov
mov
retf
and
add
pop
jp
hlt
sbb
and
add
loopne
dec
sub
movs
arpl
xchg
jns
je
or
dec
dec
or
pop
pusha
push
inc
out
(bad)
(bad)
push
aam
pop
push
retf
popf
and
cld
imul
xor
cmp
dec
push
cli
(bad)
(bad)
inc
fld
xor
aas
cdq
pop
std
dec
outs
sbb
in
and
mov
sub
rol
int
pop
mov
jg
repz
(bad)
(bad)
cmp
test
pop
outs
or
dec
out
rcr
lea
(bad)
(bad)
push
into
adc
push
or
sbb
loopne
in
rol
(bad)
(bad)
in
pusha
add
lahf
adc
dec
call
or
out
fist
jmp
push
test
sbb
xlat
in
and
and
sub
call
(bad)
dec
into
bound
xlat
fcom
pop
mov
sub
mov
(bad)
(bad)
call
push
jns
imul
push
push
popa
push
dec
cmp
jmp
dec
shl
icebp
movs
std
addr16
lock
add
mov
add
mov
cmp
(bad)
call
aas
sbb
xchg
es
imul
mov
inc
inc
jmp
call
repnz
popa
rol
pop
dec
sub
dec
iret
xor
mov
retf
call
loopne
loope
stos
lahf
and
sar
pop
cmp
test
xchg
push
adc
mov
mov
pop
movs
inc
mov
jb
into
cmp
cmp
xchg
sbb
(bad)
jmp
dec
mov
ds
sar
jp
inc
mov
frstor
stc
inc
add
push
les
fst
jle
leave
call
adc
push
cld
arpl
mov
mov
popf
pop
call
dec
popf
in
(bad)
(bad)
(bad)
(bad)
sti
fimul
xchg
ins
addr16
cli
lahf
ret
pop
xchg
movs
xchg
daa
push
adc
and
(bad)
(bad)
(bad)
(bad)
jl
movs
xchg
js
outs
add
(bad)
cs
ret
xor
xor
sbb
(bad)
(bad)
jmp
sub
adc
jbe
movs
popw
retf
out
mov
inc
addr16
adc
(bad)
(bad)
dec
aaa
cld
cs
pop
mov
lea
lods
xor
into
sar
cmp
(bad)
(bad)
call
popa
cmp
dec
cli
mov
mov
add
or
jg
fcmovnb
aas
xchg
adc
add
in
adc
loopne
test
push
cld
push
mov
pushf
(bad)
retf
test
sti
enter
fcmovu
xor
mov
(bad)
(bad)
(bad)
dec
sbb
mov
mov
cmps
jnp
adc
pusha
lahf
sbb
adc
sub
mov
inc
ss
adc
loop
call
xchg
repnz
push
imul
xor
cs
ss
dec
pop
jle
(bad)
(bad)
(bad)
mov
push
xor
push
push
adc
pop
dec
shl
cmp
or
mov
dec
jge
jb
loop
mov
repnz
movs
mov
bound
loop
fldcw
(bad)
(bad)
jg
not
(bad)
bound
mov
sbb
(bad)
mov
cmps
push
inc
ds
je
scas
cli
(bad)
(bad)
jmp
pop
int3
sahf
or
sahf
arpl
dec
inc
xor
dec
add
(bad)
(bad)
(bad)
jmp
pop
jp
popf
xor
fsubr
pop
aam
adc
(bad)
dec
test
clc
cld
sub
or
ds
(bad)
(bad)
jmp
mov
jmp
or
dec
popf
mov
pop
inc
cmp
pop
test
and
push
les
jae
adc
push
xchg
clc
pop
inc
in
jmp
mov
mov
(bad)
cmp
add
sar
mov
pop
dec
dec
dec
and
cmp
sub
sbb
pop
lock
mov
inc
mov
(bad)
(bad)
clc
in
pop
and
scas
mov
je
daa
inc
ja
addr16
mov
mov
aas
stos
call
(bad)
stc
cmp
sar
push
jb
es
(bad)
and
pop
repnz
xchg
dec
outs
in
cdq
sbb
inc
(bad)
(bad)
(bad)
call
jl
sbb
mov
or
aad
ins
inc
mov
nop
add
inc
xchg
(bad)
(bad)
(bad)
push
jne
repnz
(bad)
nop
add
pop
cmps
inc
or
sahf
jae
mov
lahf
mov
jg
(bad)
inc
push
test
in
pop
aam
jb
adc
ret
fprem
(bad)
(bad)
(bad)
jmp
jecxz
ret
or
mov
fidiv
in
movs
mov
aas
add
hlt
xor
dec
(bad)
(bad)
(bad)
(bad)
fdivr
inc
(bad)
jnp
jns
push
push
daa
scas
retf
rol
and
sub
jge
inc
aas
or
stc
mov
fcomip
inc
mov
pop
wbinvd
nop
xchg
add
xor
shl
lods
call
(bad)
das
mov
icebp
mov
sbb
scas
cli
(bad)
push
pop
icebp
inc
fisubr
sar
xchg
and
inc
test
mov
addr16
hlt
stos
pop
fsubr
inc
dec
push
mov
jmp
int
push
call
(bad)
(bad)
(bad)
call
inc
inc
and
add
xchg
lods
dec
sbb
outs
clc
jo
jg
(bad)
(bad)
cmp
cmps
mov
in
mov
ins
(bad)
cwde
movs
inc
xchg
(bad)
(bad)
(bad)
call
outs
imul
or
mov
das
nop
scas
repz
lock
mov
pop
or
pop
and
and
xchg
add
mov
ror
inc
mov
(bad)
(bad)
(bad)
call
dec
ret
lods
ins
or
nop
and
jg
ins
mov
cmp
push
mov
dec
push
inc
inc
into
mov
inc
add
sub
arpl
dec
adc
inc
jp
les
stos
loope
jno
in
mov
cdq
cmp
xor
jmp
jmp
repz
fst
loopne
inc
data16
sbb
push
(bad)
(bad)
(bad)
dec
sar
ror
mov
fld
add
and
(bad)
jmp
cli
(bad)
mov
loopne
and
sbb
dec
scas
int
lock
mov
add
push
cmps
xor
cmp
dec
push
outs
fisubr
(bad)
(bad)
jmp
push
add
pop
dec
inc
popa
nop
repz
mov
adc
ja
push
xchg
adc
imul
ret
(bad)
call
test
leave
push
lea
cdq
jb
adc
cs
outs
sub
pushf
xchg
jp
pushf
jge
dec
cmp
(bad)
(bad)
(bad)
dec
cmps
adc
pop
mov
es
xor
test
lea
push
sub
push
(bad)
inc
sbb
jno
dec
popf
jmp
test
leave
and
repz
dec
(bad)
(bad)
(bad)
inc
xor
pop
ret
daa
mov
fistp
add
add
sub
cld
(bad)
(bad)
mov
and
fistp
jns
test
fnstsw
loope
hlt
sar
add
jle
test
pushf
sub
gs
mov
imul
iret
mov
(bad)
(bad)
(bad)
call
mov
xor
test
mov
add
adc
popf
mov
pop
scas
outs
call
jmp
es
rcr
jb
cmp
pop
loop
inc
add
popf
shr
ror
(bad)
(bad)
(bad)
dec
sti
ds
out
inc
adc
inc
jmp
lds
sbb
mov
sbb
(bad)
(bad)
cmp
mov
inc
std
inc
xchg
dec
enter
cmp
aas
jno
leave
daa
mov
repz
xchg
stos
mov
rol
inc
jnp
mov
or
(bad)
(bad)
(bad)
jg
test
push
mov
jbe
test
arpl
stos
into
loopne
push
and
add
inc
(bad)
(bad)
(bad)
(bad)
mov
movs
jmp
mov
ds
cdq
cmp
enter
dec
sub
out
jle
mov
(bad)
push
cbw
ins
jno
cmp
dec
dec
bound
mov
xor
xlat
loop
shr
push
xchg
mov
ror
cmp
cmps
aam
adc
and
(bad)
(bad)
(bad)
call
in
pop
and
enter
push
jl
pushf
jne
push
pop
jbe
retf
pop
inc
pop
hlt
pusha
xchg
xor
hlt
jg
dec
sahf
adc
ins
sub
fucom
cmp
bound
pop
cld
pop
pop
aaa
in
dec
ds
sbb
jbe
xchg
mov
mov
out
push
(bad)
imul
inc
loop
jl
dec
test
add
mov
mov
out
data16
xor
dec
mov
jnp
jne
pushf
mov
mov
(bad)
(bad)
call
cli
cmp
vmwrite
(bad)
dec
cwde
call
sbb
mov
fs
mov
leave
cs
lods
mov
adc
cs
outs
cld
addr16
aaa
mov
jge
jle
(bad)
(bad)
call
push
pusha
daa
mov
pop
lods
rcl
(bad)
adc
or
pop
or
dec
cmp
call
and
mov
cmp
jns
outs
(bad)
push
into
mov
pop
inc
out
pusha
fdivr
(bad)
inc
xor
test
jmp
ins
stos
dec
pop
push
push
jle
(bad)
(bad)
(bad)
dec
fidiv
xchg
push
fild
lods
adc
cmps
mov
aad
xor
outs
mov
out
outs
xor
loope
outs
pop
pop
dec
das
loope
test
clc
dec
add
(bad)
aam
and
mov
xchg
stos
cs
adc
and
adc
(bad)
(bad)
jg
call
adc
imul
xchg
sbb
out
jns
call
jb
xor
mov
repnz
add
movs
test
inc
ss
jmp
adc
jnp
pop
mov
(bad)
(bad)
out
rcl
mov
mov
mov
and
mov
imul
mov
(bad)
(bad)
(bad)
jmp
sbb
jmp
inc
(bad)
pushf
jo
fsub
add
(bad)
jmp
ficom
ret
test
adc
jl
scas
sub
and
(bad)
inc
fbld
mov
cwde
cmps
sub
mov
in
xchg
inc
(bad)
(bad)
call
cmp
(bad)
fistp
xchg
movs
pop
sbb
jae
movs
scas
cs
bound
pop
mov
(bad)
(bad)
dec
mov
dec
cmp
popf
push
jmp
nop
int3
jo
add
in
in
mov
push
movs
push
sub
sbb
(bad)
(bad)
inc
mov
adc
dec
cmp
adc
xor
jno
sbb
mov
clc
inc
xchg
(bad)
(bad)
(bad)
(bad)
jle
xor
rcr
js
push
retf
sub
(bad)
(bad)
xor
out
xchg
outs
ret
movs
or
pop
pop
sahf
scas
(bad)
jg
jbe
xchg
das
dec
mov
outs
test
pop
retf
dec
bound
(bad)
(bad)
(bad)
mov
mov
or
vhaddpd
cmp
pop
sub
and
xchg
ror
jge
dec
fwait
dec
rol
mov
push
inc
pushf
mov
sbb
mov
lahf
mov
or
adc
inc
(bad)
out
and
sub
dec
inc
xchg
mov
xchg
fs
cmp
add
and
(bad)
(bad)
push
xchg
fcom
pop
xchg
clc
(bad)
lods
jp
jmp
sub
pop
cmc
(bad)
inc
out
(bad)
ds
jmp
fistp
outs
or
cmp
(bad)
inc
mov
sahf
dec
push
sub
adc
adc
popa
mov
adc
es
adc
(bad)
(bad)
dec
sahf
mov
push
fcmovnbe
xlat
sti
mov
fisttp
int3
add
inc
xor
sub
(bad)
(bad)
push
pusha
cmp
jns
jae
or
jbe
push
push
retf
cs
push
dec
ss
(bad)
(bad)
jmp
add
or
cmp
xchg
sbb
sub
into
cmps
inc
shr
(bad)
(bad)
jmp
pop
or
sub
lock
push
(bad)
push
add
rol
dec
(bad)
(bad)
(bad)
inc
ja
and
aaa
jg
or
jmp
or
or
add
fs
out
out
dec
dec
sti
addr16
scas
aad
pusha
pop
cmp
sub
xchg
push
add
shl
push
jne
call
add
add
nop
clc
mov
push
hlt
jp
xor
(bad)
dec
loop
jl
(bad)
cmp
pop
js
js
adc
push
(bad)
imul
sar
(bad)
jmp
jns
cmps
int3
fadd
lods
add
loope
shr
push
(bad)
(bad)
(bad)
push
dec
aas
gs
iret
cwde
xchg
das
sbb
cmp
arpl
mov
mov
mov
or
sbb
inc
lods
test
in
pushf
push
fdivr
adc
shl
jmp
xchg
popa
clc
mov
setbe
sbb
mov
xor
lahf
mov
inc
and
shr
sub
aad
pop
inc
ficom
mov
inc
lock
add
(bad)
inc
and
and
xor
(bad)
loop
adc
lahf
inc
mov
iret
repnz
adc
repnz
xchg
call
adc
sub
and
jo
gs
xchg
stc
sbb
fimul
(bad)
(bad)
(bad)
dec
sub
mov
adc
fisttp
sbb
mov
inc
aam
and
xlat
ss
xor
jmp
(bad)
(bad)
(bad)
(bad)
stc
daa
mov
add
mov
pop
(bad)
in
mov
in
jbe
or
(bad)
(bad)
(bad)
cmp
mov
mov
or
fwait
xchg
sub
cmp
(bad)
(bad)
jmp
test
pop
pop
push
and
mov
lahf
add
shr
wbinvd
sbb
or
mov
cwde
in
or
inc
js
mov
and
add
stc
sbb
push
mov
dec
ins
(bad)
(bad)
(bad)
call
xor
jl
ds
push
daa
push
sbb
mov
jnp
jmp
fnstsw
jmp
fwait
lods
jnp
or
jo
gs
sbb
pop
ins
ror
cld
aaa
dec
(bad)
jb
(bad)
(bad)
push
xor
mov
inc
sub
dec
xchg
xor
adc
jae
call
jmp
cmp
inc
fmulp
push
adc
mov
(bad)
push
push
gs
pushf
pop
test
sub
cli
xchg
test
pop
stos
and
(bad)
(bad)
inc
aam
popf
lods
cmp
mov
mov
aad
fidiv
das
retf
jns
popa
out
je
xchg
inc
adc
xlat
pop
xchg
jp
scas
lahf
imul
(bad)
(bad)
std
cwde
test
xchg
add
xor
clc
je
aad
add
idiv
(bad)
(bad)
jmp
xchg
mov
push
bound
jle
add
shl
adc
scas
aas
rcl
rcl
test
inc
in
sbb
hlt
cdq
dec
mov
push
or
sahf
mov
mov
(bad)
jbe
jne
(bad)
(bad)
(bad)
js
xchg
fisubr
daa
add
xchg
shl
or
in
(bad)
(bad)
(bad)
dec
ja
lock
inc
cmp
movs
imul
xor
mov
mul
add
loopne
sbb
test
or
jbe
out
fs
into
ret
(bad)
(bad)
(bad)
call
ret
daa
ins
and
xor
xor
daa
mov
add
pusha
(bad)
(bad)
fcomip
test
bnd
xchg
mov
repz
jno
dec
popa
xor
jo
icebp
sbb
pop
das
sahf
pop
aad
iret
psllw
sbb
jbe
xchg
jmp
inc
xchg
(bad)
mov
retf
sub
test
push
test
fwait
jl
cmp
or
std
jbe
or
pop
xchg
push
xlat
out
cmc
dec
lahf
cmp
add
jle
xor
dec
repnz
cmp
(bad)
mov
imul
push
shl
(bad)
fsub
call
and
cli
jno
push
pop
in
jg
mov
xor
inc
ret
cmp
mov
mov
pop
cld
ret
popa
sub
int3
imul
dec
xchg
ins
repnz
add
repz
mov
xchg
or
das
iret
lds
repnz
icebp
sub
xor
pop
jg
in
(bad)
aad
cs
push
aaa
jge
jne
setp
and
adc
dec
push
push
pop
xchg
out
and
mov
out
out
xchg
(bad)
(bad)
(bad)
call
fcomp
xchg
sub
push
sub
cmc
loopne
shl
inc
mov
pop
shr
(bad)
(bad)
jmp
mov
jb
enter
xchg
and
xor
shr
push
cmp
mov
mov
dec
push
test
xchg
int3
mov
push
dec
or
and
sbb
(bad)
(bad)
jg
and
pop
xlat
cmps
aaa
push
xchg
popf
mov
cmc
mov
(bad)
(bad)
push
aas
data16
aad
sbb
test
lock
mov
iret
repz
in
aad
mov
mov
(bad)
(bad)
sti
add
(bad)
fmul
cmp
or
lds
aas
push
lea
xchg
leave
cli
jae
sub
(bad)
(bad)
dec
repz
or
cmp
cmp
cwde
pop
xchg
sbb
(bad)
mov
jbe
mov
or
sbb
sub
test
call
xchg
retf
jne
(bad)
(bad)
dec
(bad)
and
xor
mov
out
and
popf
mov
fwait
jg
(bad)
jmp
out
lea
sti
inc
ss
popf
dec
jmp
jmp
jno
imul
out
add
fsubr
cs
loope
faddp
in
ds
(bad)
jmp
jo
cmp
add
imul
shr
inc
pop
jae
cmp
mov
jmp
mov
xchg
es
mov
mov
push
repnz
clc
out
out
sbb
rcl
cmp
adc
loop
jl
mov
fiadd
(bad)
(bad)
call
cmp
imul
inc
cld
sub
cmp
sub
mov
xor
pop
and
(bad)
jmp
or
mov
cmc
ins
xchg
adc
mov
xlat
sbb
pop
stc
push
(bad)
(bad)
(bad)
push
sbb
imul
dec
sar
pop
enter
mov
cmps
(bad)
loopne
das
sub
jp
clc
(bad)
(bad)
(bad)
jmp
xor
jecxz
in
push
push
sbb
sbb
jg
sub
sahf
and
clc
(bad)
inc
xchg
push
push
mov
fidivr
sub
das
jo
xlat
mov
cwde
adc
(bad)
(bad)
call
fs
cs
(bad)
pop
std
das
cmp
ins
or
push
mov
xor
(bad)
(bad)
(bad)
dec
xor
out
ss
es
sar
call
test
(bad)
(bad)
(bad)
jle
xchg
add
test
out
les
fstp
mov
repz
mov
(bad)
(bad)
(bad)
fstp
xor
pop
adc
adc
sti
out
jecxz
ds
ret
std
arpl
adc
(bad)
(bad)
inc
mov
add
aas
and
test
jmp
clc
(bad)
(bad)
call
mov
in
xchg
rcr
sbb
retf
int3
movs
push
shr
adc
(bad)
push
(bad)
jne
mov
into
xchg
pusha
jge
das
out
stos
xchg
in
xchg
xchg
popa
(bad)
(bad)
(bad)
dec
gs
mov
loopne
mov
shr
xcrypt-ctr
cmps
(bad)
push
in
push
cwde
sbb
xchg
jge
cmp
(bad)
dec
jmp
in
out
xchg
fdivr
pop
push
ret
iret
jmp
ss
std
sbb
fwait
loopne
xor
add
ins
sbb
mov
sahf
in
and
(bad)
(bad)
mov
dec
in
mov
pop
cmp
adc
jno
stos
scas
mov
jl
in
inc
dec
mov
sub
(bad)
pop
lods
sbb
into
add
cld
sbb
xlat
xchg
fwait
(bad)
fcomip
jmp
xchg
adc
data16
fsubr
jmp
cli
add
sbb
push
inc
mov
push
retf
pmaxsw
out
rcr
not
xor
(bad)
(bad)
(bad)
jge
pop
and
popf
sahf
jbe
fsub
sbb
(bad)
es
js
xchg
(bad)
aam
mov
pop
mov
sbb
popf
(bad)
fisub
js
dec
jno
sbb
shl
shl
retf
aaa
dec
gs
call
js
ss
xor
mov
loopne
adc
(bad)
stc
mov
or
das
xchg
aaa
clc
(bad)
(bad)
push
pop
mov
mov
mov
cmps
mov
or
cmp
pop
inc
icebp
(bad)
pop
pop
inc
sar
mov
inc
mov
mov
inc
call
(bad)
(bad)
call
das
(bad)
mov
and
pop
jl
retf
pop
test
xchg
shl
cli
(bad)
call
call
push
in
fist
mov
sar
js
std
mov
sub
cmp
mov
inc
jae
xchg
dec
repz
pop
fdiv
loope
inc
arpl
and
mov
inc
push
std
(bad)
call
xchg
or
aas
ret
sahf
dec
aam
xchg
and
test
xor
(bad)
std
cmps
ins
xor
pop
retf
in
cmp
icebp
mov
or
(bad)
(bad)
jmp
bound
clc
outs
jmp
and
adc
int3
(bad)
cmp
lea
out
in
dec
(bad)
(bad)
jmp
inc
cld
jae
inc
pop
or
jle
adc
jns
and
xor
dec
lahf
inc
cld
inc
stc
cmc
xor
sbb
gs
pop
outs
adc
(bad)
mov
pop
jo
xchg
jge
add
nop
mov
(bad)
(bad)
push
cmp
iret
cmp
sub
not
lds
test
(bad)
out
clc
(bad)
mov
inc
mov
dec
mov
bound
add
jecxz
xchg
aad
mov
test
inc
dec
jmp
call
(bad)
cmp
pop
(bad)
(bad)
(bad)
push
push
shl
add
xor
sbb
pop
and
out
jmp
xor
and
mov
test
retf
inc
sbb
mov
pop
pop
sub
or
ret
sbb
inc
adc
sbb
fst
push
es
outs
cmps
adc
pop
data16
in
mov
adc
mov
xor
in
or
push
(bad)
(bad)
call
xchg
mov
pop
arpl
adc
xor
inc
jmp
jmp
fs
mov
aam
jle
pop
add
test
and
add
mov
test
mov
rcr
mov
or
jo
jge
fsub
sub
rol
bound
shl
mov
(bad)
inc
sahf
loopne
sub
inc
mov
adc
sbb
test
mov
add
dec
or
(bad)
iret
or
mov
scas
aad
(bad)
(bad)
inc
mov
adc
imul
leave
aam
jmp
jge
call
pop
scas
jl
lods
outs
jecxz
sub
ins
popa
push
mov
pop
addr16
(bad)
(bad)
dec
imul
lds
or
dec
outs
stos
imul
sahf
addr16
add
jmp
or
(bad)
out
fstp
ins
loopne
sahf
daa
retf
cmp
enter
std
push
fstp
xchg
and
cmovae
inc
sub
jmp
push
mov
lea
(bad)
(bad)
jmp
push
pop
(bad)
cdq
shl
aaa
shl
mov
(bad)
(bad)
(bad)
dec
mov
popa
cdq
cmps
outs
fistp
int
lods
nop
call
call
(bad)
(bad)
(bad)
call
popa
push
test
mov
ffreep
mov
dec
dec
in
daa
scas
push
das
cmp
mov
push
(bad)
out
cli
inc
mov
fld
test
dec
push
pop
jae
dec
sub
sbb
sar
(bad)
(bad)
push
(bad)
xor
add
jbe
(bad)
jae
fstp
ja
mov
mov
repnz
inc
jecxz
(bad)
(bad)
(bad)
push
icebp
shl
fisubr
ret
outs
ror
mov
std
cmp
push
pop
aad
(bad)
(bad)
(bad)
call
xchg
ret
mov
pop
or
mov
push
inc
jle
outs
or
xchg
sub
(bad)
mov
out
sub
push
and
adc
sub
xchg
push
test
and
cmp
iret
mov
mov
and
and
fstp
call
loopne
fisub
icebp
outs
sub
imul
(bad)
push
aaa
div
or
xor
je
je
adc
shr
xchg
aaa
leave
mov
retf
aad
pop
(bad)
(bad)
(bad)
dec
add
es
cli
rcl
stos
cmp
scas
lods
in
mov
sbb
pushf
xchg
call
call
cs
scas
rcl
jbe
fld
(bad)
add
cwde
stos
or
(bad)
(bad)
(bad)
jle
test
xchg
pop
ja
in
sub
and
push
arpl
lds
(bad)
inc
or
mov
sar
(bad)
or
and
cmp
mov
ret
cmc
mov
push
mov
mov
add
jns
pop
enter
mov
addr16
(bad)
(bad)
call
leave
cdq
mov
dec
xchg
pusha
cmp
out
fincstp
sbb
sbb
dec
add
sub
(bad)
(bad)
dec
pop
arpl
push
js
fdivr
add
adc
jp
aad
(bad)
(bad)
(bad)
push
sahf
jge
ins
aam
add
or
xchg
or
mov
xor
nop
cmp
mov
test
(bad)
inc
popa
call
icebp
cld
fmul
bound
test
or
inc
stos
pop
mov
pushf
adc
(bad)
call
outs
out
cmp
lds
mov
push
std
into
pushf
inc
xchg
in
imul
lock
je
leave
sbb
pop
jb
int3
add
(bad)
rcr
sbb
add
cmp
pop
mov
dec
hlt
sbb
xor
sbb
jns
sbb
mov
fdivp
jns
mov
inc
dec
(bad)
(bad)
call
sbb
aas
into
push
mov
ficom
push
mov
jne
xchg
(bad)
push
push
cmp
lods
push
les
pop
cmp
or
sbb
std
gs
inc
into
(bad)
(bad)
(bad)
jg
push
mov
mov
mov
jg
cdq
gs
mov
popf
in
and
(bad)
dec
xchg
add
push
push
dec
outs
imul
mov
cmp
cmps
repnz
pop
dec
xchg
(bad)
(bad)
(bad)
call
or
int3
push
rcr
mov
xor
(bad)
jne
xchg
aad
daa
or
call
push
mov
movs
and
ins
pop
shl
test
stos
(bad)
(bad)
jmp
popf
mov
popf
jbe
fisttp
lock
jle
lahf
pop
jle
(bad)
(bad)
(bad)
jmp
dec
lods
test
cmp
mov
inc
ds
pop
jmp
mov
imul
mov
push
mov
adc
enter
lods
push
adc
push
(bad)
(bad)
cmp
imul
outs
or
enter
push
pop
cs
(bad)
mov
(bad)
(bad)
(bad)
jmp
jecxz
push
pushf
xor
pop
sub
sbb
pusha
dec
movs
ror
aad
es
lds
jmp
stos
push
(bad)
arpl
dec
push
cdq
mov
lods
fwait
ror
aas
inc
jbe
call
jl
or
inc
and
pop
push
lock
lock
inc
push
sub
inc
inc
inc
mov
add
add
inc
int3
or
fucomi
or
push
jle
and
push
dec
jg
xor
icebp
(bad)
(bad)
call
xchg
rol
xor
int3
fiadd
inc
ror
out
xchg
test
(bad)
dec
scas
ds
icebp
dec
fadd
xchg
jne
imul
scas
outs
jle
mov
movs
xchg
sub
(bad)
mov
call
int
and
inc
loop
(bad)
(bad)
jmp
add
xchg
das
or
sbb
aas
mov
jmp
cmps
mov
xchg
(bad)
(bad)
call
pusha
and
adc
icebp
mov
cmc
jae
xchg
jmp
mov
dec
mov
imul
xchg
(bad)
fcomip
jmp
loopne
mov
into
retf
fistp
or
arpl
(bad)
(bad)
call
mov
rol
cmp
lahf
jp
jnp
imul
cmp
sbb
(bad)
(bad)
push
test
mov
xor
test
shl
sbb
cmps
(bad)
(bad)
jmp
imul
int
and
(bad)
cmps
sbb
mov
scas
stos
(bad)
(bad)
push
adc
int
fild
jae
pop
mov
xchg
int
out
mov
cli
cmp
mov
add
daa
push
fs
scas
add
adc
pop
xchg
out
fdivr
(bad)
pop
pop
dec
pop
mov
and
(bad)
(bad)
cmp
jo
mov
xchg
movs
mov
fnstsw
push
jl
jl
pop
mov
int
cmp
sbb
(bad)
(bad)
call
cmp
mov
sbb
cdq
shl
pop
or
fnstsw
test
xchg
cmps
(bad)
fadd
cld
(bad)
(bad)
(bad)
out
jne
mov
and
mov
inc
rcr
dec
or
jg
jecxz
jne
clc
jg
ins
cmp
mov
adc
les
in
aaa
std
out
or
fadd
and
(bad)
outs
clc
scas
dec
cwde
sbb
out
push
add
imul
pop
pop
dec
ins
mov
sub
dec
xchg
pop
ja
(bad)
(bad)
(bad)
jmp
int3
aad
push
sub
ret
mov
dec
push
mov
rcr
popf
xchg
into
in
in
(bad)
(bad)
(bad)
(bad)
jg
mov
in
mov
pop
cmp
frstor
into
sub
nop
bound
fcomip
call
push
push
lea
sub
iret
mov
and
pop
mov
jecxz
pop
hlt
(bad)
dec
pop
out
push
add
pop
cmps
neg
sub
std
sub
loop
(bad)
call
stos
xor
push
fild
sub
sahf
repz
inc
(bad)
stos
leave
xlat
jne
(bad)
(bad)
jg
(bad)
gs
test
add
mov
aaa
jecxz
je
jae
outs
fcomip
(bad)
inc
mov
push
xchg
adc
mov
mov
jp
jg
(bad)
(bad)
(bad)
(bad)
jmp
scas
jl
stos
mov
pop
and
xor
cld
xor
inc
dec
repnz
(bad)
(bad)
(bad)
dec
(bad)
xor
aad
mov
push
enter
je
inc
add
adc
sbb
dec
in
jmp
in
and
call
mov
ret
or
jmp
cs
scas
stc
clc
and
(bad)
(bad)
inc
mov
mov
sbb
cmc
mov
popa
ficom
scas
dec
call
shl
jne
rol
shr
ret
in
push
std
(bad)
jmp
shr
xor
or
cmp
cmp
rcr
call
in
mov
mov
and
pop
xlat
out
mov
jge
pushf
cmp
jmp
das
pop
cli
int3
leave
or
jmp
dec
add
cmp
std
inc
mov
enter
mov
sub
out
lds
(bad)
(bad)
(bad)
call
mov
adc
jns
lods
add
cmp
add
rol
(bad)
dec
jg
add
or
ss
dec
push
cmp
popa
jle
push
jb
mov
pop
pop
xor
(bad)
jmp
sbb
pop
mov
lds
and
(bad)
clc
paddb
inc
enter
sub
mov
fdivr
and
(bad)
(bad)
(bad)
inc
xchg
push
cs
lds
mov
int3
sub
fld
call
jp
in
cmps
scas
lds
outs
ficom
jl
mov
gs
pop
lds
mov
mov
mov
push
mov
(bad)
(bad)
(bad)
push
xlat
int
lahf
pop
lds
mov
cs
inc
repz
add
(bad)
(bad)
call
ds
out
push
int3
xchg
aam
or
inc
popf
xchg
or
je
test
(bad)
(bad)
(bad)
inc
mul
loop
aas
nop
movs
dec
jns
fsin
mov
push
leave
push
push
and
sub
(bad)
jmp
repz
jl
xlat
(bad)
out
xchg
(bad)
(bad)
mov
cmps
jmp
rcl
in
cmps
test
loopne
lods
or
cld
not
enter
mov
jg
retf
push
fadd
push
scas
mov
cmp
aam
dec
ror
mov
cmp
push
call
mov
pop
inc
jmp
gs
fmul
xlat
cmp
jmp
jecxz
ss
(bad)
(bad)
jmp
mov
in
cmp
in
(bad)
pop
loopne
outs
jmp
jmp
dec
add
cli
ds
(bad)
(bad)
jmp
sub
mov
cli
cmc
mov
push
outs
(bad)
ss
adc
(bad)
(bad)
(bad)
dec
cs
and
ds
jmp
cmp
rcr
or
dec
inc
inc
mov
adc
jg
(bad)
push
adc
jo
lods
and
iret
cli
sub
imul
add
sub
(bad)
dec
cmpxchg
dec
pop
push
push
fdivr
pop
std
jmp
xchg
mov
fwait
xchg
fidiv
sub
div
pop
ja
test
cli
(bad)
(bad)
jmp
aaa
adc
call
cmps
push
mov
sbb
(bad)
(bad)
jmp
cmp
in
dec
mov
call
ror
(bad)
rdseed
(bad)
fcomip
imul
add
call
or
mov
(bad)
(bad)
(bad)
mov
push
rcr
jmp
fld
sub
aad
(bad)
call
retf
push
bound
xchg
mov
push
sbb
xor
pop
mov
(bad)
(bad)
jg
xchg
enter
test
or
or
lock
in
fldenv
frstor
cmp
(bad)
jmp
cmp
push
and
and
push
out
mov
imul
leave
outs
pop
imul
cdq
icebp
push
fimul
dec
es
(bad)
(bad)
push
lahf
mov
frstor
arpl
movs
or
inc
add
in
lock
xchg
jl
test
mov
push
daa
test
xchg
pop
xchg
retf
dec
jns
mov
inc
xlat
push
add
push
out
jg
add
(bad)
mov
hlt
add
arpl
cmp
xor
int
lock
daa
ret
xchg
cmps
cmp
mov
jo
(bad)
(bad)
jmp
and
mov
mov
inc
xor
rol
lock
adc
inc
mov
dec
push
jno
pushf
mov
lock
push
or
je
mov
sub
xchg
nop
push
jmp
push
into
and
movs
push
mov
jge
(bad)
pusha
enter
(bad)
(bad)
call
sub
test
xor
xchg
push
pushf
push
mov
mov
inc
xchg
(bad)
(bad)
(bad)
inc
xlat
inc
inc
push
outs
sbb
sub
xor
xchg
mov
dec
mov
nop
add
push
data16
mov
sti
and
(bad)
(bad)
jmp
jmp
sbb
push
jns
sahf
push
mov
dec
cdq
mov
scas
out
(bad)
mov
xchg
inc
xor
(bad)
mov
std
imul
push
(bad)
imul
loop
jo
sub
ds
add
push
call
pop
gs
(bad)
(bad)
push
sbb
xor
dec
or
in
and
cmp
push
hlt
rcr
inc
push
or
cmp
iret
movs
sub
mov
mov
cmp
stos
rol
(bad)
loope
cmps
repz
jne
(bad)
(bad)
dec
dec
xlat
pop
mov
bound
das
xor
fwait
cs
daa
frstor
cmps
gs
(bad)
(bad)
call
sar
retf
int3
popf
rcl
cmp
js
cmp
cmc
xchg
add
(bad)
(bad)
(bad)
jmp
fucomp
std
dec
fldenv
fidivr
push
idiv
pop
(bad)
aam
seta
push
cld
jg
lahf
or
xor
jnp
retf
dec
movs
mov
(bad)
dec
das
push
inc
(bad)
std
sub
cmc
adc
dec
iret
fdivrp
in
sbb
sbb
jmp
aaa
cld
xor
adc
push
mov
movs
pop
sub
(bad)
mov
jg
rcl
mov
out
sbb
add
into
mov
mov
pop
jle
cmp
sub
mov
test
or
mov
(bad)
dec
(bad)
stos
outs
xor
push
loope
push
cmps
or
daa
test
or
(bad)
(bad)
inc
xchg
push
scas
mov
pop
mov
popa
mov
mov
sbb
mov
push
xchg
pop
mov
popf
pusha
and
movs
into
addr16
repnz
je
xor
(bad)
(bad)
call
jno
jae
scas
cs
fwait
adc
xchg
add
(bad)
(bad)
(bad)
mov
iret
es
sahf
fld
clc
xor
push
dec
mov
pop
push
pop
icebp
mov
jl
xchg
dec
adc
cmp
mov
test
(bad)
(bad)
(bad)
dec
fcom
(bad)
and
or
and
jb
imul
shl
fnstenv
push
mov
dec
(bad)
(bad)
(bad)
call
pcmpeqd
scas
loopne
dec
push
out
mov
mov
rol
daa
leave
jmp
inc
fwait
addr16
inc
cmp
int3
lods
sar
mov
popf
pop
jns
(bad)
(bad)
push
adc
int3
into
ret
bound
(bad)
jne
mul
sub
inc
rol
clc
(bad)
jmp
aam
pop
xor
out
fnstenv
adc
cli
adc
adc
(bad)
(bad)
call
add
sbb
pusha
lea
(bad)
mov
xchg
mov
adc
sub
lock
gs
ja
cdq
enter
(bad)
cmps
lods
xchg
pop
sub
sar
jmp
xor
xchg
mov
mov
adc
mov
push
idiv
(bad)
(bad)
(bad)
mov
retf
dec
xor
cmp
icebp
xchg
pop
jb
and
push
test
mov
(bad)
(bad)
(bad)
fistp
repz
cmp
aam
and
push
inc
data16
or
je
cmp
cmc
(bad)
sar
movs
jle
add
cld
adc
(bad)
(bad)
call
outs
sbb
in
(bad)
aad
xchg
and
mov
movs
loop
stos
(bad)
call
call
ins
fcmovu
jb
cmp
sbb
mov
fisubr
(bad)
(bad)
(bad)
push
es
imul
test
lea
leave
cli
xor
jg
jbe
mov
adc
(bad)
(bad)
(bad)
fild
add
arpl
sub
sahf
pop
es
lods
pop
mov
(bad)
(bad)
jnp
cmp
add
pop
pop
inc
jns
mov
jp
mov
jp
or
scas
clc
dec
cmp
jne
pop
xchg
add
adc
mov
or
xchg
mov
lock
std
sti
mov
loop
push
cli
setge
mov
xchg
sub
test
fild
ss
mov
xlat
add
rol
shl
call
mov
imul
mov
enter
stos
ins
(bad)
(bad)
(bad)
jmp
jns
sahf
sbb
cdq
dec
sub
(bad)
sub
mov
das
cmps
or
dec
jl
(bad)
(bad)
inc
sar
test
ret
repnz
sub
and
retf
nop
fld
int3
dec
and
mov
mov
(bad)
(bad)
(bad)
push
xchg
dec
or
loopne
mov
int3
inc
mov
xor
fdiv
retf
(bad)
(bad)
push
scas
dec
fwait
inc
xchg
aad
ins
hlt
mov
sub
(bad)
jmp
fstp
mov
call
rcr
(bad)
mov
xchg
fbstp
inc
xchg
push
jg
dec
sbb
xor
dec
cmp
(bad)
pop
lock
ja
add
mov
push
pop
sysenter
xchg
lock
pop
adc
(bad)
(bad)
(bad)
call
mov
jae
into
test
push
stos
cmc
push
fdiv
add
in
mov
das
shr
pop
jecxz
push
dec
mov
cs
nop
sub
or
enter
stc
adc
jg
test
data16
jb
jae
adc
leave
movs
xor
test
push
jb
mov
shl
dec
sahf
loope
add
mov
cld
(bad)
(bad)
dec
lahf
pusha
mov
push
rol
sbb
xor
push
pop
push
pop
push
imul
push
dec
xor
scas
fcom
xor
arpl
cdq
sub
loope
scas
or
(bad)
(bad)
(bad)
(bad)
jns
mov
push
out
pop
gs
aas
jge
xor
daa
retf
adc
sub
in
dec
(bad)
dec
mov
ret
sar
dec
push
repnz
lea
(bad)
(bad)
(bad)
call
or
jg
dec
stc
test
xor
mov
leave
xor
stos
call
(bad)
call
and
(bad)
pop
iret
out
dec
stos
js
xor
(bad)
or
lods
jne
sahf
nop
(bad)
(bad)
(bad)
push
inc
mov
and
bound
ffree
jmp
mov
(bad)
jne
rol
imul
sub
mov
cmc
data16
jo
xchg
pop
adc
mov
push
ret
(bad)
(bad)
(bad)
in
rcr
sbb
sub
rcpps
inc
mov
outs
std
outs
jmp
int
popf
inc
enter
jg
xor
loop
out
loopne
fsub
(bad)
fisttp
sub
sub
xor
repnz
jmp
pop
loopne
pop
icebp
fcom
mov
fidivr
stos
enter
cld
pushf
and
or
into
test
stc
pop
shr
jge
rcl
cli
mov
jecxz
inc
adc
cmps
neg
cmc
mov
test
(bad)
jmp
cwde
mov
cld
jle
pop
mov
sbb
jo
xchg
jb
(bad)
fwait
push
shr
sar
(bad)
jmp
dec
cmp
push
pop
mov
ins
cli
loope
iret
js
and
mov
outs
sbb
mov
add
pop
add
xchg
cs
and
fcmovu
mov
and
jbe
std
adc
xchg
stos
(bad)
(bad)
(bad)
fnsetpm(287
or
rcl
xchg
out
push
in
sahf
add
dec
imul
(bad)
(bad)
inc
outs
dec
push
and
gs
adc
popa
(bad)
fcmovb
jp
movs
icebp
dec
call
mov
cmp
jg
mov
mov
(bad)
call
add
dec
out
popf
jnp
cmps
ret
sar
xor
(bad)
(bad)
push
call
cli
(bad)
jmp
sbb
fcomp
daa
adc
imul
add
inc
iret
or
retf
das
cli
inc
add
leave
and
mov
add
rol
inc
aad
(bad)
(bad)
push
adc
fwait
or
popf
imul
popf
jg
cdq
sub
push
leave
in
sub
mov
inc
out
(bad)
and
mov
shl
call
(bad)
mov
(bad)
(bad)
jmp
jl
int
xchg
test
xor
mov
int
movs
iret
jae
cmc
inc
adc
add
(bad)
(bad)
(bad)
(bad)
jle
dec
sub
sti
mov
pop
mov
aam
and
imul
popf
push
jg
pop
fcomip
pop
call
mov
inc
loope
data16
and
mov
(bad)
(bad)
(bad)
push
scas
data16
imul
xchg
cmp
test
jge
aaa
add
popf
push
pushf
pusha
(bad)
dec
mov
(bad)
(bad)
(bad)
(bad)
jnp
xor
or
push
xor
xchg
push
mov
cmps
retf
loopne
outs
clc
(bad)
push
dec
sbb
icebp
mul
call
cmc
loope
xchg
jp
(bad)
mov
lock
mov
sub
lods
fidivr
add
(bad)
(bad)
(bad)
call
sbb
shr
pop
lods
in
fsubr
xor
xchg
movs
fcomp
push
mul
repz
test
(bad)
(bad)
push
push
shl
sbb
pushf
out
jg
fstp
dec
and
xor
(bad)
(bad)
jmp
cld
cmp
stos
std
daa
adc
sub
adc
imul
jle
push
out
mov
loopne
dec
inc
push
outs
arpl
jb
(bad)
(bad)
(bad)
(bad)
push
mov
dec
xor
xor
or
xor
sub
out
(bad)
leave
jbe
adc
mov
idiv
xor
mov
imul
pop
jno
cmp
adc
mov
cmp
jmp
(bad)
(bad)
(bad)
dec
out
sahf
mov
rol
dec
jnp
ins
bound
sbb
mov
add
add
jmp
(bad)
call
add
loopne
aaa
pop
arpl
leave
adc
cli
cmps
xor
pop
aas
(bad)
(bad)
(bad)
dec
pop
adc
adc
out
cmp
loope
fldcw
jmp
into
aam
jnp
(bad)
(bad)
jmp
xchg
or
cld
dec
imul
(bad)
(bad)
(bad)
mov
push
mov
inc
push
gs
inc
inc
and
repz
lahf
sbb
xchg
(bad)
(bad)
call
jae
jmp
rol
add
push
push
xor
xchg
xchg
sub
jmp
(bad)
(bad)
(bad)
call
sub
(bad)
das
ror
mov
outs
mov
icebp
cmp
(bad)
sti
dec
xchg
(bad)
(bad)
(bad)
fcomi
xor
jb
ja
push
push
lods
ret
stos
sub
aaa
repz
push
dec
retf
xlat
add
or
push
push
call
push
xchg
pop
mov
in
lahf
mov
aaa
ds
jmp
inc
xor
and
mov
loop
jne
ret
(bad)
call
and
test
or
inc
and
cmc
push
xchg
rol
cs
push
ja
xchg
mov
pop
fimul
cwde
cld
pop
popf
and
dec
sbb
sbb
lods
adc
push
outs
lahf
pop
lahf
or
and
xchg
jle
out
inc
mul
and
(bad)
(bad)
jmp
mov
xor
push
jbe
sbb
not
cmps
or
movs
mov
cmp
scas
dec
xchg
or
std
ror
das
jmp
rol
xor
cld
xchg
xor
mov
or
stos
inc
sub
jo
loop
dec
fbstp
and
(bad)
dec
aam
out
fdiv
pop
scas
mov
xor
lea
mov
push
(bad)
(bad)
(bad)
dec
cmps
push
in
dec
and
call
mov
jnp
mov
test
or
mov
(bad)
jmp
push
in
mov
ror
dec
pusha
or
mov
mov
mov
mov
adc
(bad)
addr16
dec
es
add
gs
(bad)
(bad)
(bad)
push
fcmovu
push
cmps
stc
fs
mov
push
pop
xor
sbb
clc
inc
fsubp
ret
icebp
sbb
(bad)
(bad)
call
fcomi
loope
sar
enter
or
jle
add
syscall
push
sbb
or
cmp
mov
mov
and
or
jns
xor
loope
push
call
scas
call
lock
in
(bad)
(bad)
mov
leave
(bad)
push
in
xchg
sub
jge
xor
fidivr
push
push
push
pop
push
das
inc
adc
mov
ds
push
cmps
sub
ins
repz
(bad)
dec
mov
mov
cmp
pusha
retf
sub
or
pop
push
(bad)
(bad)
(bad)
jg
and
pushf
add
pop
and
mov
mov
nop
dec
ret
addr16
in
mov
sbb
(bad)
mov
ret
xchg
jg
push
adc
pop
xchg
xor
popf
mov
(bad)
(bad)
mov
add
int
pop
dec
out
into
pop
mov
inc
sti
fs
pop
(bad)
(bad)
(bad)
call
test
jl
inc
and
dec
cmp
icebp
mov
and
call
pop
hlt
(bad)
(bad)
call
and
sbb
inc
mov
lods
(bad)
pop
xchg
bound
(bad)
(bad)
call
pop
sahf
sub
sti
pop
mov
sub
outs
js
mov
(bad)
(bad)
(bad)
push
inc
xchg
aam
pop
xor
cmp
jbe
push
cmp
test
or
data16
scas
(bad)
(bad)
(bad)
jmp
cld
sbb
jae
in
clc
adc
rol
mov
inc
dec
mov
retf
outs
(bad)
(bad)
(bad)
jg
pusha
cdq
ins
pop
popf
or
dec
cmps
mov
cwde
add
jp
fs
or
(bad)
(bad)
(bad)
jmp
retf
or
movs
adc
shl
and
mov
xchg
dec
enter
push
mov
aam
aam
jg
int3
xchg
stc
adc
(bad)
push
sub
icebp
rol
or
test
sbb
sub
fcomip
(bad)
fld
cmp
dec
call
jecxz
mov
push
mov
aam
(bad)
(bad)
jmp
ds
in
dec
push
out
jns
retf
mov
ficom
pop
sti
sbb
pop
xor
xchg
(bad)
(bad)
(bad)
dec
outs
imul
inc
inc
adc
nop
cmp
dec
jle
mov
aaa
das
js
(bad)
(bad)
(bad)
jmp
(bad)
imul
inc
push
pop
mov
sbb
in
jbe
rol
daa
xor
ret
imul
jmp
mov
xchg
inc
and
ja
mov
jb
sub
cdq
pop
mov
pop
inc
out
(bad)
(bad)
(bad)
call
pushf
icebp
in
fadd
inc
jno
mov
or
je
xchg
mov
cmp
retf
inc
push
inc
push
mov
push
test
rol
mov
ja
sub
out
inc
(bad)
and
push
fs
adc
and
mov
jmp
mov
xor
iret
rcr
xor
retf
(bad)
mov
repnz
test
out
sbb
xor
stos
jecxz
jmp
cld
sbb
mov
dec
repz
cmp
(bad)
call
cmps
mov
daa
fdivrp
sub
jne
icebp
clc
push
pop
mov
mov
push
(bad)
scas
push
cmp
sub
jge
sti
xlat
repnz
shl
popf
aam
xchg
fcomp
iret
ds
lea
int3
pushf
jns
rcl
mov
cmp
call
push
jle
add
adc
inc
stos
je
je
cs
(bad)
(bad)
inc
test
sbb
dec
mov
xor
push
cmp
dec
(bad)
(bad)
(bad)
dec
arpl
adc
mov
xchg
add
sti
outs
in
ss
jmp
adc
push
(bad)
(bad)
(bad)
call
cmc
pushf
fld
inc
fld
retf
push
lods
mov
sti
jnp
loopne
sti
xchg
sub
aad
(bad)
(bad)
jmp
cmp
fwait
aas
aas
cmp
mov
gs
lea
ror
dec
cmc
push
push
dec
or
dec
xor
adc
bound
out
and
jbe
(bad)
(bad)
inc
push
push
and
cli
mov
adc
stos
sub
sbb
dec
iret
jecxz
push
aas
fwait
push
cmps
hlt
mov
(bad)
(bad)
(bad)
fcomip
sbb
cld
cld
nop
pop
cmps
sti
fcomp
daa
cdq
shl
xlat
gs
push
adc
adc
(bad)
(bad)
jmp
add
add
pop
fdivr
(bad)
xor
dec
and
test
leave
sbb
jg
push
sti
dec
test
cmps
cmp
stos
add
add
push
lods
retf
fadd
test
or
sbb
shr
daa
loop
sub
call
ror
dec
in
mov
in
shr
fwait
jmp
data16
leave
(bad)
(bad)
(bad)
call
retfw
or
cmp
mov
cwde
pop
and
icebp
call
(bad)
push
pop
ret
js
outs
inc
les
xor
cmp
arpl
sub
push
scas
lea
(bad)
(bad)
(bad)
jmp
cli
xchg
mov
xchg
repnz
sbb
and
out
ret
test
mov
(bad)
jmp
dec
xchg
mul
jae
fwait
mov
out
ficom
xor
addr16
(bad)
(bad)
(bad)
cmp
mov
fwait
fwait
jl
call
fsubr
jb
push
sub
dec
sbb
lahf
sar
(bad)
(bad)
jmp
call
and
imul
or
inc
mov
sub
cmp
cmp
(bad)
jmp
fldcw
stc
jae
jecxz
cwde
movs
ret
xchg
(bad)
icebp
iret
je
sar
fdivr
scas
retf
sub
xchg
out
cwde
(bad)
jmp
push
cwde
fcomp
das
(bad)
mov
inc
int
ins
cwde
pop
dec
sti
xchg
mov
or
push
cs
movs
leave
test
xchg
fs
mov
fadd
call
test
mov
(bad)
(bad)
jmp
mov
pop
cmp
ss
into
and
jecxz
jl
inc
add
push
pushf
jbe
mov
pop
(bad)
(bad)
mov
lea
call
lds
jle
xchg
ficom
pop
(bad)
(bad)
jmp
mov
stos
mov
retf
push
in
daa
and
out
ins
loopne
pop
sub
(bad)
(bad)
(bad)
inc
mov
ja
(bad)
cmps
(bad)
jp
repnz
ins
or
pop
mov
push
aaa
and
(bad)
(bad)
(bad)
jmp
inc
pusha
in
mov
ins
rol
xchg
into
arpl
jmp
fidivr
outs
mov
idiv
cdq
or
push
mov
jge
outs
lahf
sbb
xchg
adc
ffree
mov
dec
cld
retf
(bad)
(bad)
(bad)
inc
stc
push
xchg
jmp
dec
mov
adc
(bad)
out
inc
clc
pop
ins
ins
mov
(bad)
(bad)
mov
je
scas
es
or
das
rep
mov
pop
jg
cld
(bad)
jmp
mov
dec
outs
pop
es
jmp
jmp
sahf
add
jae
and
mov
pop
pop
cdq
mov
ins
xor
(bad)
(bad)
dec
inc
fstp
in
pop
cld
mov
pop
jo
jmp
push
test
inc
cmp
jb
sahf
call
loopne
into
inc
xchg
test
test
xchg
adc
or
(bad)
(bad)
(bad)
dec
popf
push
js
sub
lahf
pop
test
retf
mov
out
add
(bad)
call
inc
scas
jae
pop
pop
push
adc
cmp
bnd
test
jb
dec
push
sbb
cld
ret
(bad)
(bad)
out
cli
loop
sahf
mov
lds
pop
loopne
and
mov
retf
scas
inc
daa
out
cmp
cli
mov
cmp
(bad)
(bad)
(bad)
dec
mov
jb
sbb
fsub
jmp
adc
sub
in
retf
jge
sbb
out
clc
push
sbb
add
cmp
pop
and
inc
(bad)
jg
stos
cld
outs
jbe
xor
adc
inc
lods
add
sbb
sbb
test
rcr
call
cld
jmp
(bad)
jne
leave
mov
adc
mov
add
mov
jg
(bad)
push
xchg
retf
sti
sbb
dec
cmp
fidiv
pushf
(bad)
call
add
mov
popa
aad
int
mov
pop
frstor
je
call
dec
int3
mov
sbb
gs
out
je
sar
in
(bad)
(bad)
jmp
add
mov
jecxz
stos
mov
mov
inc
mov
(bad)
(bad)
(bad)
jmp
sub
xor
adc
jb
fidiv
mov
lock
(bad)
(bad)
stc
cld
and
xchg
xor
shl
(bad)
mov
jno
hlt
bound
mov
(bad)
dec
out
xchg
popf
into
out
js
sahf
push
rol
or
iret
icebp
int3
push
popa
(bad)
(bad)
(bad)
call
cmp
mov
jae
scas
into
out
(bad)
test
push
nop
cmps
and
add
(bad)
(bad)
inc
cmovo
or
and
lds
arpl
gs
addr16
pop
(bad)
int
xchg
xchg
daa
add
(bad)
jmp
aaa
jb
xchg
retf
icebp
push
and
jne
frstpm(287
sbb
pop
add
(bad)
(bad)
mov
aad
outs
push
movs
dec
mov
xor
sub
xchg
xchg
jb
(bad)
(bad)
(bad)
inc
xchg
out
out
jns
outs
retf
pop
sub
and
cmovns
cli
(bad)
(bad)
jg
xor
pop
mov
pop
cmps
jp
xchg
push
or
jb
(bad)
cdq
mov
jmp
add
sahf
imul
jg
int
xchg
mov
leave
addr16
(bad)
(bad)
(bad)
jmp
(bad)
ret
bound
popf
mov
ins
xor
jbe
xor
(bad)
xchg
push
dec
(bad)
(bad)
(bad)
jmp
and
movs
test
loop
jmp
retf
popf
dec
repnz
js
je
int3
mov
fld
add
lea
dec
push
mov
enter
and
mov
sar
jg
mov
aam
pop
push
test
call
clc
push
push
jne
dec
sub
(bad)
mov
scas
mov
xlat
mov
jb
push
rdtsc
ins
add
(bad)
in
xchg
in
call
out
popa
and
lds
xchg
dec
or
fsubr
(bad)
mov
mov
das
dec
pop
cmp
sub
push
or
(bad)
(bad)
(bad)
inc
retf
psrlw
push
dec
jae
mov
pusha
or
bound
add
retf
js
(bad)
(bad)
(bad)
call
jecxz
pop
jp
lahf
fsubrp
push
lods
data16
pop
es
(bad)
push
add
enter
cmp
stos
cmc
stos
(bad)
jmp
ret
mov
cmp
in
fs
cmp
sbb
out
(bad)
(bad)
(bad)
fistp
movs
xor
sub
test
cmp
xchg
leave
dec
retf
dec
cmp
push
enter
sar
ds
dec
shl
test
push
(bad)
(bad)
(bad)
jmp
mov
repz
xor
ins
xor
cmp
(bad)
jo
cmp
(bad)
dec
jne
or
rol
ret
mov
pop
gs
xor
(bad)
jmp
shl
push
data16
adc
pop
adc
fmul
in
sbb
(bad)
(bad)
dec
adc
fistp
sub
pusha
inc
lea
retf
arpl
(bad)
dec
xchg
(bad)
sub
nop
dec
sub
dec
(bad)
(bad)
(bad)
(bad)
fcmovne
retf
mov
inc
jmp
add
je
mov
or
jp
sar
inc
call
xchg
lods
aaa
sbb
xchg
loopne
dec
cmp
(bad)
jmp
clc
call
cmps
push
xor
arpl
pop
loop
(bad)
mov
fldenv
jae
(bad)
(bad)
call
call
dec
pop
add
mov
mov
out
dec
repnz
add
xchg
ds
pop
(bad)
(bad)
(bad)
push
sar
(bad)
adc
imul
loopne
das
outs
cmc
clc
and
jns
jnp
add
(bad)
jmp
lahf
mov
jge
inc
jmp
mov
jge
gs
mov
(bad)
(bad)
jg
nop
cmp
stc
in
inc
add
loope
dec
leave
jmp
push
cmp
mov
dec
adc
inc
inc
dec
inc
sub
sub
sbb
ret
(bad)
(bad)
dec
and
inc
xor
adc
and
hlt
arpl
(bad)
(bad)
(bad)
jg
mov
xchg
push
mov
push
or
clc
xor
adc
xchg
out
cli
(bad)
jmp
in
mov
and
pop
shl
adc
ja
rol
mov
ret
aad
hlt
inc
or
cmp
aas
inc
jo
jmp
cmp
jmp
add
mov
es
nop
jmp
aaa
hlt
ret
ss
mov
jmp
xor
in
iret
xchg
popf
mov
push
adc
inc
inc
or
pusha
(bad)
(bad)
(bad)
dec
addr16
sbb
mov
pop
aaa
pop
push
loope
scas
or
jecxz
movs
xor
gs
(bad)
(bad)
call
jmp
xchg
div
add
ficomp
dec
sar
or
jb
or
cmp
int
leave
mov
and
mov
push
pop
(bad)
(bad)
jmp
mov
push
lea
out
mov
adc
test
sbb
mov
(bad)
(bad)
jg
in
into
call
call
mov
jle
rol
(bad)
inc
ret
push
lock
(bad)
in
cmc
fild
mov
nop
xor
mov
dec
call
les
test
sub
add
das
lock
xor
jmp
dec
xchg
and
adc
adc
adc
or
(bad)
cmp
pop
ror
popf
sub
stc
and
fstp
(bad)
(bad)
call
jle
or
xlat
jbe
fisubr
pop
mov
push
aad
pusha
aas
adc
mov
(bad)
(bad)
(bad)
call
xchg
aas
shl
mov
xchg
nop
loopne
and
xor
out
or
mov
cmc
(bad)
(bad)
(bad)
inc
lods
mov
dec
jmp
popf
call
mov
lds
and
(bad)
(bad)
jmp
dec
or
add
mov
out
repnz
sub
fstp
mov
(bad)
(bad)
(bad)
inc
inc
xchg
mov
inc
call
sub
loopne
std
out
(bad)
mov
data16
adc
or
jmp
mov
jge
sub
(bad)
(bad)
call
ret
push
pop
cwde
push
mov
test
(bad)
out
mov
scas
sbb
cmp
(bad)
jg
ins
lahf
sub
mov
test
test
cmc
rcr
dec
(bad)
call
mov
dec
push
mov
jnp
call
out
xchg
ror
pop
push
std
call
inc
cmp
mov
fs
test
(bad)
call
sub
outs
dec
daa
rcl
mov
cmps
fimul
sbb
or
inc
(bad)
sub
jmp
fsubr
or
pop
test
ror
xor
inc
(bad)
jnp
movs
(bad)
(bad)
(bad)
(bad)
jle
cmp
repnz
(bad)
movs
mov
jnp
pop
mov
jae
xlat
xor
out
dec
aaa
loopne
(bad)
inc
jge
push
sti
or
pop
xchg
adc
iret
add
add
push
sub
fild
in
push
jmp
in
stc
xor
je
sub
cmc
sbb
xor
push
gs
jl
cld
jae
adc
push
outs
jle
sbb
(bad)
(bad)
(bad)
mov
inc
inc
mov
and
je
adc
in
sar
mov
(bad)
(bad)
(bad)
call
das
jg
jg
mov
or
sub
mov
loope
int3
or
dec
add
inc
hlt
mov
or
lods
or
test
sub
fiadd
ins
(bad)
(bad)
(bad)
inc
mov
sub
repz
or
aam
and
fstp
ror
not
(bad)
aad
(bad)
(bad)
(bad)
clc
inc
nop
cmp
outs
add
and
jle
mov
or
add
adc
(bad)
(bad)
(bad)
jmp
add
sub
inc
addr16
cmps
mov
and
and
ss
les
jmp
mov
fisttp
(bad)
ds
cdq
or
mov
xor
hlt
inc
(bad)
(bad)
dec
daa
scas
mov
(bad)
call
arpl
push
(bad)
(bad)
(bad)
dec
xchg
retf
sahf
addr16
adc
dec
cmp
add
and
sahf
adc
push
mov
lods
sub
mov
retf
scas
or
inc
xchg
or
mov
bound
(bad)
(bad)
(bad)
(bad)
jmp
ret
(bad)
push
std
(bad)
jge
loopne
shl
retf
xchg
and
and
lahf
iret
imul
sub
popf
sub
mov
call
cld
push
xor
in
loop
pop
aad
loopne
rol
daa
test
call
push
pop
lahf
inc
cwde
mov
xor
mov
loopne
inc
jae
dec
fisttp
cmp
or
repnz
(bad)
(bad)
jmp
push
test
daa
pop
push
cmp
mov
cli
sbb
(bad)
out
test
jae
jmp
test
or
test
jno
jg
stc
inc
lods
test
mov
(bad)
(bad)
inc
add
lds
fisubr
inc
dec
pusha
imul
cli
repz
inc
jno
mov
out
loopne
jg
cli
ins
mov
(bad)
mov
rol
ins
das
leave
and
cmp
(bad)
mov
mov
lea
(bad)
jecxz
jl
jl
cmp
pop
pop
xchg
jns
and
jnp
(bad)
(bad)
call
jbe
dec
ins
in
pop
dec
shl
jmp
mov
inc
loop
mov
add
(bad)
(bad)
call
cli
test
fiadd
dec
mov
xor
fcmovnu
mov
(bad)
call
jecxz
mov
adc
push
fmul
rol
dec
(bad)
(bad)
(bad)
inc
jne
lahf
push
cs
jmp
jl
jne
nop
push
add
dec
cmp
(bad)
jmp
cli
xor
lds
outs
test
and
imul
test
mov
(bad)
(bad)
(bad)
push
leave
pop
jmp
push
dec
push
sbb
mov
std
pop
jle
mov
and
cld
mov
mov
icebp
ret
int3
mov
jns
and
mov
out
iret
sbb
jmp
div
lock
fiadd
mov
test
icebp
dec
sub
adc
sub
jmp
mov
cmps
jbe
lea
retf
out
push
inc
xor
test
fwait
(bad)
jg
call
jecxz
cmps
jg
mov
ins
out
stc
push
dec
mov
popf
(bad)
(bad)
(bad)
(bad)
jmp
aaa
xchg
aam
or
pop
test
jp
and
push
xor
ror
dec
std
(bad)
jmp
nop
and
fist
dec
mov
mov
shr
jg
cmp
(bad)
push
push
dec
iret
and
(bad)
pop
ins
fisttp
pop
cmp
in
mov
(bad)
(bad)
(bad)
(bad)
call
sub
sub
cli
leave
das
push
xlat
mov
shr
dec
(bad)
sub
das
sbb
(bad)
inc
ror
mov
dec
mov
ret
dec
cmovbe
pop
int3
or
mov
push
loopne
(bad)
jmp
and
jecxz
fwait
aad
ja
xor
stos
iret
push
xchg
pop
cmp
xor
or
(bad)
mov
(bad)
fcom
out
pop
popf
ror
int
mov
sbb
(bad)
(bad)
(bad)
in
dec
outs
call
pop
sti
inc
ret
call
add
test
xlat
mov
popa
sbb
(bad)
(bad)
dec
push
int3
jecxz
lods
outs
aad
sbb
stos
mov
mov
xlat
mov
(bad)
mov
in
jle
pop
movs
jmp
imul
into
xor
cwde
jmp
(bad)
(bad)
cli
xor
pop
or
xor
mov
es
or
dec
xchg
pushf
sub
dec
sub
fwait
or
call
push
xor
out
les
adc
push
add
rcr
dec
scas
mov
pop
daa
lock
(bad)
(bad)
call
sub
xchg
jnp
adc
out
xchg
inc
aas
jno
stos
int3
ror
int
sub
sub
(bad)
(bad)
(bad)
ds
imul
scas
mov
push
push
sub
pop
jns
sbb
(bad)
(bad)
(bad)
push
rol
movs
mov
dec
loope
push
mov
mov
lods
(bad)
call
xchg
(bad)
(bad)
(bad)
inc
clc
test
add
add
mov
push
xor
pushf
jmp
and
(bad)
(bad)
(bad)
jmp
fst
lods
in
(bad)
(bad)
dec
imul
jbe
jmp
add
push
push
cmp
clc
retf
fwait
loopne
mov
mov
mul
call
ss
ret
out
(bad)
sbb
loop
mov
mov
push
sbb
and
fbstp
(bad)
imul
jns
inc
pop
ss
mov
pop
cld
(bad)
push
daa
jnp
and
and
jmp
mov
jns
jmp
dec
(bad)
stc
jae
jne
jmp
and
(bad)
push
cli
sub
lahf
and
(bad)
(bad)
mov
test
mov
push
lock
ins
ins
daa
movs
push
or
cld
(bad)
(bad)
(bad)
jmp
fild
mov
adc
stos
retf
in
cld
ins
cmp
mov
cli
(bad)
(bad)
inc
mov
mov
jmp
sahf
into
mov
das
(bad)
shr
cld
scas
push
repz
fiadd
mov
xchg
adc
(bad)
(bad)
(bad)
call
sti
lods
lods
test
jmp
pop
inc
int3
cmp
pop
or
push
or
fadd
inc
ja
(bad)
mov
mov
je
mov
cmps
scas
(bad)
mov
push
mov
inc
mov
inc
std
(bad)
call
retf
clc
jl
iret
pop
repnz
jp
cmps
mov
rcr
(bad)
fcomip
ffreep
mov
js
lahf
test
mov
jge
sbb
(bad)
mov
cdq
in
inc
arpl
and
bound
add
sbb
dec
out
jno
out
outs
dec
ror
std
(bad)
(bad)
inc
or
pop
(bad)
mov
jb
push
and
stos
scas
aaa
lods
dec
or
test
div
ja
(bad)
mov
enter
pop
mov
sub
cdq
ficom
mov
jmp
lods
pop
or
add
pop
sub
push
fdiv
mov
jno
pop
ds
cdq
pop
(bad)
(bad)
(bad)
inc
ja
ret
or
(bad)
lds
cmp
dec
test
inc
mov
pop
repnz
adc
push
pusha
(bad)
pop
test
ds
sbb
inc
(bad)
jg
inc
mov
aaa
retf
test
neg
adc
sar
es
inc
(bad)
or
sahf
lds
repz
nop
mov
(bad)
(bad)
call
daa
ret
or
jg
push
cwde
jle
pop
mov
and
sbb
add
ficomp
sahf
xchg
(bad)
(bad)
(bad)
cld
mov
pop
bound
out
push
add
mov
adc
push
push
cs
das
(bad)
sti
pushf
or
jmp
clc
ret
dec
movzx
outs
bound
and
push
bound
jb
mov
xchg
pop
push
(bad)
(bad)
(bad)
dec
jns
pop
adc
(bad)
(bad)
or
jle
push
loopne
test
push
push
or
out
(bad)
(bad)
(bad)
sti
rcr
xor
cmp
vpmacssdd
mul
cmp
and
(bad)
(bad)
jmp
das
cwde
push
jmp
xor
mov
pop
dec
and
pop
ss
adc
(bad)
(bad)
call
inc
add
or
leave
div
scas
lods
and
stos
jle
pop
mov
xchg
push
push
(bad)
dec
or
and
mov
cli
dec
cwde
mov
xor
(bad)
(bad)
(bad)
jmp
in
mov
push
xor
ds
cmps
lock
dec
jns
test
mov
xor
sbb
(bad)
(bad)
dec
out
inc
mov
pushf
retf
aas
popf
fdivr
fs
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
sbb
mov
loopne
mov
push
and
push
jmp
xor
lar
std
out
(bad)
jmp
add
int
mov
adc
stc
test
add
mov
push
retf
or
inc
sbb
and
(bad)
(bad)
call
cmp
mov
xor
or
repnz
and
shl
adc
fimul
(bad)
(bad)
(bad)
jmp
addr16
jmp
sahf
cmps
pop
jle
sahf
pop
and
push
ficom
xchg
sbb
mov
add
(bad)
shl
in
dec
and
dec
or
ins
sub
push
adc
(bad)
cmp
loop
fdivr
rcl
sbb
test
lods
and
adc
out
outs
(bad)
jmp
mov
inc
dec
fld
push
pusha
push
ret
xchg
jmp
xor
push
(bad)
(bad)
(bad)
call
cli
jne
jl
cwde
test
xchg
cmp
pop
mov
push
jl
xor
lahf
push
call
(bad)
push
loopne
ins
mov
xchg
push
(bad)
push
shl
adc
(bad)
call
push
mov
xchg
cmc
jmp
push
es
(bad)
(bad)
mov
push
aaa
rol
jl
js
add
or
popf
mov
sub
out
cli
lock
mov
cmp
xor
pop
dec
iret
(bad)
(bad)
dec
and
pusha
pop
lods
jnp
jle
aad
pop
int
dec
fwait
mov
movs
mov
mov
(bad)
(bad)
(bad)
call
ds
sbb
inc
mov
dec
sbb
movs
stos
shr
dec
call
jge
push
jge
(bad)
(bad)
(bad)
push
mov
std
repz
mov
mov
jecxz
dec
sti
xchg
push
fistp
clc
jmp
xchg
mov
dec
dec
ss
jae
movs
and
in
cmp
mov
(bad)
(bad)
(bad)
push
in
mov
ficom
pop
cmps
pop
inc
cmc
in
mov
cmp
jno
fwait
ror
jne
mov
(bad)
(bad)
inc
adc
pop
push
or
and
movs
mov
mov
mul
adc
jmp
enter
jnp
std
rol
sbb
xchg
and
(bad)
(bad)
(bad)
push
cwde
xor
mov
sar
mov
pop
dec
cld
push
hlt
addr16
pop
pushf
imul
(bad)
jmp
mov
stc
pop
ftst
scas
mov
add
imul
iret
cld
xchg
shr
dec
lods
jmp
(bad)
cld
clc
xor
sub
loope
loop
iret
in
xchg
dec
pushf
stos
mov
out
jg
jb
mov
(bad)
(bad)
inc
fst
fnstsw
mov
in
test
into
jl
cmp
(bad)
(bad)
(bad)
inc
xor
rol
inc
das
add
pop
mov
adc
adc
sbb
push
push
(bad)
jg
jmp
enter
mov
xchg
rcr
scas
mov
pop
hlt
(bad)
jmp
add
sub
cs
ret
and
jmp
lods
shr
xchg
add
(bad)
(bad)
jmp
inc
(bad)
pop
loopne
(bad)
cmp
cwde
(bad)
das
adc
dec
xor
jg
or
cmp
popf
sbb
out
pusha
jnp
xor
cmp
(bad)
(bad)
push
sub
or
(bad)
imul
ins
pop
cld
jno
int3
add
(bad)
(bad)
inc
call
or
mov
xchg
retf
pop
clc
iret
daa
data16
mov
idiv
daa
cmp
bound
push
mov
in
(bad)
fisttp
sbb
retf
cmp
push
pop
pop
fisubr
mov
(bad)
push
dec
fwait
jno
and
xchg
shl
icebp
mov
stos
dec
xchg
mov
or
data16
dec
inc
inc
mov
lods
or
rcl
(bad)
(bad)
(bad)
(bad)
mov
test
or
pop
add
jo
mov
imul
int
outs
sbb
xor
(bad)
(bad)
(bad)
push
repnz
(bad)
call
mov
add
imul
(bad)
(bad)
dec
lahf
in
movs
inc
ds
dec
xchg
imul
pop
jne
enter
inc
sbb
fdiv
(bad)
(bad)
(bad)
call
add
xchg
loopne
mov
ja
mov
rol
xchg
scas
pop
(bad)
(bad)
(bad)
call
outs
fldenv
jnp
repnz
inc
stos
es
jecxz
retf
or
push
dec
js
push
pushf
fcomp
cli
push
dec
and
fwait
ds
mov
loopne
(bad)
loopne
ds
loopne
xchg
xor
pop
push
popa
push
inc
add
adc
shl
call
(bad)
dec
sbb
mov
ret
(bad)
loopne
cmps
mov
test
test
sahf
sub
push
(bad)
(bad)
inc
std
lds
jmp
loopne
call
xor
(bad)
inc
sbb
stos
mov
adc
inc
lods
and
data16
es
sbb
mov
pshufw
nop
cmc
dec
outs
xlat
push
pop
sub
jg
pop
adc
bound
(bad)
popf
int
inc
not
in
mov
fs
in
add
(bad)
call
sub
mov
xchg
add
ins
inc
cmps
(bad)
lea
mov
pop
or
inc
in
pop
inc
sahf
add
(bad)
(bad)
call
pop
xchg
jo
les
loope
sar
pop
pusha
pop
and
hlt
jbe
mov
pop
xchg
mov
inc
test
mov
add
out
icebp
(bad)
push
js
test
packssdw
loope
(bad)
(bad)
jmp
jmp
jmp
pop
xor
adc
pop
mov
pop
bound
(bad)
(bad)
(bad)
dec
mov
push
(bad)
(bad)
jp
mov
popa
adc
inc
jmp
xor
jmp
loop
fcmove
out
adc
mov
adc
jle
in
mov
jbe
or
xchg
mov
push
add
in
movs
mov
inc
mov
inc
aad
jge
stc
jns
out
pop
retf
and
xchg
or
jmp
adc
scas
jnp
bound
dec
jle
sbb
pop
(bad)
in
sbb
ret
pop
mov
sub
je
push
xor
add
jno
xor
ds
ret
rcl
(bad)
(bad)
(bad)
(bad)
mov
arpl
push
(bad)
sbb
fistp
mov
adc
xor
(bad)
(bad)
(bad)
jmp
inc
(bad)
cmp
fsubrp
scas
mov
or
xor
mov
mov
das
sar
(bad)
(bad)
(bad)
mov
mov
xchg
pop
aam
outs
pop
hlt
sub
and
jo
int
div
(bad)
(bad)
inc
fwait
or
test
inc
adc
shl
xchg
(bad)
idiv
(bad)
(bad)
fild
jns
add
xchg
addr16
pop
mov
adc
aas
inc
or
cmps
fdivrp
lock
fs
(bad)
(bad)
(bad)
mov
mov
test
idiv
lahf
and
ficomp
popa
(bad)
lods
xchg
push
(bad)
(bad)
(bad)
(bad)
stc
iret
arpl
mov
(bad)
mov
inc
sbb
sub
bts
mov
xor
push
jbe
jbe
mov
(bad)
dec
dec
sbb
adc
adc
xor
cmp
je
push
mov
cmp
inc
sub
xlat
inc
mov
sub
sbb
jp
xchg
xchg
call
sbb
push
sbb
dec
in
popa
xchg
cs
aad
or
lods
fcmovbe
jno
adc
sti
(bad)
(bad)
(bad)
inc
adc
cmp
mov
inc
in
add
jae
jecxz
jnp
cmp
in
popf
push
(bad)
(bad)
(bad)
inc
repnz
inc
mov
cmc
aas
fadd
sub
test
fdivr
sub
mov
mov
cmp
lock
push
and
sahf
in
imul
mov
out
dec
inc
js
xchg
ins
add
loop
xchg
repnz
mov
test
push
aad
dec
aad
clc
(bad)
(bad)
(bad)
jmp
jo
cli
cmp
cmps
and
add
adc
mov
arpl
adc
pop
std
jmp
xchg
sub
fnsave
cmp
adc
(bad)
(bad)
out
cli
mov
test
mov
daa
rcl
jno
jno
xlat
or
(bad)
(bad)
(bad)
call
ss
popa
das
jnp
jno
clc
cdq
sbb
xchg
rcl
(bad)
cmp
push
xor
mov
retf
inc
test
adc
push
scas
mov
pop
pop
mov
(bad)
call
lods
test
xchg
xor
pop
pushf
mov
jle
mov
rol
jmp
inc
xor
pop
inc
int
js
out
sar
test
add
std
je
(bad)
(bad)
dec
into
jle
dec
add
test
push
mov
sbb
adc
cld
stc
(bad)
(bad)
(bad)
(bad)
cmp
clc
imul
mov
das
cmp
imul
repnz
push
mov
outs
(bad)
call
push
ins
rcl
pop
in
sti
ret
xchg
mov
das
cmps
out
mov
or
sar
mov
ret
arpl
xchg
push
lock
ins
inc
mov
pop
jp
ja
(bad)
(bad)
(bad)
jg
dec
movs
rep
aad
sub
mov
pop
sbb
adc
push
push
or
ja
loop
jmp
cli
stos
enter
pushf
mov
inc
and
or
adc
(bad)
(bad)
sbb
scas
(bad)
(bad)
(bad)
call
scas
xor
enter
push
out
rcr
stos
call
jb
dec
push
std
call
cli
lds
or
cmps
and
mov
xor
dec
jecxz
dec
js
jp
xchg
in
jnp
mov
push
std
adc
xchg
push
(bad)
(bad)
fcomip
mov
push
push
or
jecxz
in
lahf
ror
mov
ret
push
xor
mov
div
ficomp
into
lds
push
fst
cmp
pop
cmp
push
aaa
pushf
adc
pop
stos
jb
xor
les
dec
test
push
inc
bound
dec
sub
sar
pusha
test
sbb
ret
rcr
mov
loop
ret
(bad)
jmp
pop
shl
add
push
and
fimul
adc
add
test
xor
push
fsubr
jmp
(bad)
cmp
dec
mov
mov
pop
pop
xchg
es
dec
lock
aaa
jmp
das
cli
std
add
add
loopne
push
pop
cdq
outs
retf
out
fsub
dec
outs
xlat
mov
mov
push
cli
pop
inc
or
jae
mov
fwait
adc
scas
in
jg
(bad)
(bad)
call
and
inc
sbb
inc
cmp
retf
shr
jmp
addr16
dec
movs
lea
push
(bad)
aaa
mov
cli
jae
shr
loopne
mov
(bad)
(bad)
(bad)
call
jno
mov
sbb
mov
xchg
push
xchg
js
xchg
je
sub
xlat
push
jmp
pushf
xlat
imul
dec
inc
cmp
(bad)
loopne
(bad)
jae
fwait
(bad)
(bad)
(bad)
inc
xchg
test
lods
mov
cmp
retf
lock
loopne
jmp
(bad)
push
dec
ja
sub
lods
xchg
mov
push
mov
nop
lds
sti
mov
adc
loop
inc
ins
push
(bad)
(bad)
push
mov
xor
lods
outs
adc
cmc
imul
xor
stc
cld
mov
(bad)
(bad)
inc
xchg
popa
stos
loopne
ret
or
test
out
pop
arpl
(bad)
(bad)
(bad)
call
mov
cmp
pop
enter
mov
pop
jo
inc
sub
sbb
int
mov
sbb
mov
stos
and
xchg
adc
scas
or
loopne
mov
mov
fldcw
gs
sub
or
icebp
jne
fstp
out
cmp
mov
dec
test
(bad)
jmp
add
sub
xchg
in
das
movs
(bad)
pop
cmps
pop
sub
push
rcr
jecxz
jl
outs
cli
cwde
mov
fxch
gs
cmp
fbstp
movs
and
in
retf
ret
pop
popf
ins
jne
pop
(bad)
(bad)
(bad)
jmp
push
add
mov
dec
cs
and
aas
dec
je
inc
cmc
(bad)
dec
fwait
dec
push
dec
lock
and
lods
mov
inc
dec
xor
adc
pop
inc
repz
ja
jne
push
adc
pusha
cmps
imul
mov
test
pop
lds
(bad)
(bad)
(bad)
inc
mov
inc
leave
cmps
mov
jbe
ins
and
mov
mov
pop
in
lods
(bad)
(bad)
(bad)
inc
aam
movs
xor
push
stos
xchg
mov
test
icebp
ins
dec
jge
inc
dec
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
mov
adc
or
data16
icebp
cmp
inc
mov
call
push
mov
or
dec
dec
xchg
in
cwde
push
xchg
(bad)
(bad)
jmp
pop
scas
jb
stc
pop
shl
clc
ins
mov
push
mov
mov
stos
mov
dec
clc
repz
addr16
mov
inc
(bad)
mov
jo
jbe
out
and
(bad)
jmp
inc
scas
mov
jmp
lock
out
and
sahf
mov
adc
mov
loop
ja
cmp
(bad)
(bad)
call
adc
fnstenv
mov
and
repnz
and
mov
icebp
and
retf
out
ds
popa
(bad)
(bad)
push
dec
cli
jp
mov
or
push
pop
jns
inc
je
sbb
arpl
dec
ror
push
into
sar
mov
mov
xor
loope
sbb
(bad)
(bad)
jmp
dec
push
in
sub
xchg
and
sub
pop
std
enter
xor
(bad)
(bad)
(bad)
(bad)
jmp
pop
mov
mov
lea
outs
sub
out
cvtps2pd
pop
dec
lea
dec
cmps
(bad)
jg
call
mov
dec
push
xor
sub
jecxz
jmp
or
out
ins
ja
xchg
cmp
cld
(bad)
(bad)
jmp
iret
cmp
test
hlt
jmp
dec
frstor
sub
mov
inc
mov
pop
dec
ss
jnp
xlat
fidivr
(bad)
push
push
add
jmp
jbe
out
sar
ret
dec
(bad)
jmp
xchg
cmp
inc
das
ins
jge
inc
pop
xchg
sub
and
(bad)
(bad)
(bad)
dec
xor
mov
mov
mov
push
mov
mov
mov
(bad)
(bad)
inc
push
mov
pop
push
aad
into
fidivr
les
and
pop
(bad)
(bad)
(bad)
inc
test
pop
xor
add
inc
jns
lods
mov
out
(bad)
(bad)
(bad)
jmp
xchg
scas
sti
ja
test
cli
outs
xor
cmps
and
sub
imul
bound
pop
jns
arpl
in
inc
sub
jmp
xor
outs
cmps
fcomp
retf
push
pop
lds
int
(bad)
(bad)
inc
or
fwait
scas
pop
imul
test
mov
push
daa
iret
mov
stos
nop
(bad)
(bad)
(bad)
(bad)
inc
mov
inc
mov
lods
mov
push
dec
repnz
and
stc
jnp
aad
loopne
fs
push
(bad)
(bad)
(bad)
call
pop
ror
mov
jo
ret
mov
jecxz
add
rcl
dec
(bad)
(bad)
(bad)
dec
pop
retf
fs
mov
jl
cmp
leave
jmp
mov
(bad)
test
(bad)
out
clc
call
test
sbb
add
inc
and
cs
rol
dec
in
fucomip
clc
(bad)
inc
cwde
inc
jne
stos
into
jge
jae
push
repnz
sbb
mov
(bad)
mov
pop
cmp
and
jne
add
(bad)
adc
xchg
(bad)
stos
sbb
(bad)
(bad)
fdivr
and
xchg
pop
out
xor
fadd
pop
adc
cmp
(bad)
(bad)
(bad)
inc
ins
pop
and
xor
cld
cmp
test
test
fwait
jmp
sub
jmp
or
(bad)
(bad)
jmp
cmps
pop
pop
push
jbe
pop
mov
nop
out
jmp
fs
push
gs
push
fdivrp
(bad)
out
push
mov
pop
cmc
das
popa
out
inc
dec
cmps
(bad)
(bad)
(bad)
in
in
xor
mov
xchg
push
(bad)
xchg
mov
stc
(bad)
pop
cld
call
(bad)
inc
add
mov
hlt
std
inc
mov
adc
and
mov
cdq
jl
(bad)
(bad)
(bad)
jmp
push
jmp
inc
cs
movs
push
push
sbb
(bad)
push
cmc
movs
push
adc
cmp
jbe
pop
push
push
scas
mov
sub
cwde
ss
pop
push
mov
aaa
imul
call
cld
xlat
fcom
dec
cs
xchg
call
push
push
cli
psubusb
(bad)
jmp
test
jnp
add
or
popa
je
mov
mov
(bad)
mov
scas
sti
adc
shl
and
xchg
push
pop
popa
inc
repnz
(bad)
(bad)
inc
jecxz
data16
mov
pushf
pop
jmp
loopne
aas
shl
repz
lods
push
(bad)
(bad)
(bad)
jmp
dec
lea
or
leave
dec
mov
mov
js
ror
rol
(bad)
(bad)
(bad)
fdivrp
pop
sub
mov
pop
cmps
push
mov
and
add
push
jl
(bad)
mov
hlt
je
push
mov
mov
xchg
fwait
stc
push
jnp
(bad)
dec
(bad)
fwait
loop
sar
inc
sbb
lahf
clc
ficom
lahf
xchg
(bad)
ja
inc
(bad)
jmp
add
mov
adc
addr16
xchg
pusha
fucomp
jp
imul
mov
ja
adc
lahf
jbe
inc
dec
out
mov
inc
fdivr
in
pop
imul
xchg
cld
(bad)
jg
dec
inc
lea
push
in
mov
xor
retf
scas
lahf
daa
cs
(bad)
(bad)
dec
stos
sar
stos
call
lds
mov
cmp
mov
ds
lea
jnp
cwde
jns
(bad)
call
cld
mov
das
call
lahf
jge
push
inc
pushf
and
rol
call
loopne
out
jnp
sbb
jae
xchg
fs
jns
daa
sbb
iret
pushf
pop
(bad)
(bad)
(bad)
call
add
cmp
push
push
shl
sbb
and
test
scas
imul
push
lock
(bad)
(bad)
(bad)
(bad)
jnp
pop
and
or
or
or
xchg
or
call
inc
(bad)
(bad)
(bad)
in
cli
jae
jl
scas
ficom
adc
nop
inc
mov
mov
xor
repnz
(bad)
(bad)
jmp
mov
stos
push
lahf
add
std
xchg
repz
sbb
cdq
xchg
jl
xor
pop
dec
cmps
idiv
(bad)
(bad)
(bad)
mov
push
inc
int3
inc
je
aad
sbb
jg
nop
sahf
mov
ins
fidivr
cld
je
push
dec
inc
shr
mov
out
gs
pop
adc
jp
out
pop
ud0
(bad)
jmp
mov
dec
test
outs
dec
or
scas
mov
dec
inc
cmps
dec
jb
(bad)
scas
shl
(bad)
(bad)
(bad)
(bad)
jl
ds
sub
gs
and
int3
xor
or
je
bound
sbb
nop
gs
sti
pop
inc
stos
(bad)
(bad)
(bad)
(bad)
call
lock
and
repz
pop
push
int3
inc
jecxz
and
lock
(bad)
(bad)
(bad)
dec
and
add
aas
scas
mov
gs
xchg
lea
pusha
sbb
fwait
xor
mov
call
popa
int3
xchg
test
aaa
xchg
ins
iret
jg
mov
arpl
sbb
dec
bound
mov
(bad)
(bad)
(bad)
dec
lds
mov
mov
mov
inc
adc
(bad)
outs
or
(bad)
(bad)
dec
pushf
call
aaa
dec
sbb
mov
lea
nop
lods
es
test
xor
dec
mov
rcr
jmp
push
xchg
adc
int3
jno
fidivr
jecxz
jbe
(bad)
jg
adc
pop
inc
ins
sub
out
mov
mov
push
pop
jl
fidivr
(bad)
(bad)
(bad)
dec
sbb
(bad)
lods
push
fs
dec
mov
ds
xor
lea
rcr
inc
repnz
mov
movs
cmc
(bad)
pop
mov
sub
mov
mov
inc
dec
sar
popa
(bad)
(bad)
(bad)
call
sbb
jo
adc
jle
je
mov
out
xchg
add
int3
cdq
test
adc
(bad)
(bad)
(bad)
inc
icebp
sbb
jno
inc
xchg
fisttp
loop
inc
(bad)
mov
jno
add
enter
pushf
jecxz
inc
(bad)
(bad)
jmp
ficom
repz
mov
xchg
xchg
pop
(bad)
adc
jne
push
xlat
push
shl
add
push
bound
repz
jmp
call
inc
popf
xchg
add
mov
cmp
out
imul
ja
jns
pop
dec
cmp
out
or
and
outs
add
sar
aad
inc
adc
cmps
push
in
inc
outs
imul
in
jmp
inc
movs
push
aas
xchg
pop
push
fidiv
outs
xchg
push
test
ficomp
mov
mov
and
pop
mov
cmps
sar
aad
scas
mov
lock
pop
or
sbb
outs
xchg
adc
pop
scas
(bad)
(bad)
(bad)
(bad)
fcom
or
pushf
cmps
out
mov
icebp
pop
cdq
pop
sar
popaw
dec
ret
(bad)
(bad)
(bad)
cmp
pop
xchg
ss
jb
rol
xchg
in
bound
add
mov
xor
jnp
jg
(bad)
(bad)
(bad)
out
dec
aas
out
pop
push
and
add
test
or
call
sbb
push
or
xor
sub
sub
mov
mov
je
(bad)
(bad)
dec
xor
xchg
test
les
(bad)
mov
das
pop
cli
sbb
xor
xor
(bad)
(bad)
call
cmps
popa
pop
and
dec
mov
in
xor
cmp
cs
movs
in
cmps
push
rcr
ja
out
add
loope
out
mov
loop
mov
(bad)
(bad)
(bad)
inc
inc
arpl
aaa
mov
xchg
scas
mov
mov
cmp
sub
pop
retf
(bad)
(bad)
(bad)
jnp
add
cmps
jge
test
sub
lods
cmps
sbb
(bad)
push
push
mov
xor
ret
loopne
mov
sub
push
mov
(bad)
(bad)
dec
stos
call
cmp
cmp
push
call
cdq
dec
cmps
aad
fst
(bad)
call
enter
test
cmp
and
mov
push
jne
cmp
(bad)
call
sub
sub
retf
sahf
mov
daa
or
push
das
mov
pop
lock
dec
loopne
loope
pushf
sbb
retf
ror
outs
out
xor
stos
(bad)
(bad)
(bad)
call
imul
push
add
push
jb
imul
iret
fild
bnd
mov
sub
outs
push
jb
pop
fcomp
mov
data16
in
inc
cmps
inc
in
jmp
dec
inc
scas
mov
pop
inc
fcos
(bad)
fcomip
cdq
fldcw
lods
mov
sub
fwait
xor
cmp
mov
(bad)
(bad)
fisttp
add
push
imul
fstp
cmp
push
sub
or
call
(bad)
call
jmp
cmp
outs
loop
iret
mov
(bad)
dec
mov
retf
xchg
das
hlt
or
shl
(bad)
(bad)
jmp
and
cld
popa
push
call
ins
jecxz
adc
mov
mov
retf
pop
add
iret
pop
push
sbb
pop
inc
aaa
jge
xor
inc
repnz
(bad)
(bad)
(bad)
inc
jmp
popa
repz
push
xor
mov
popf
outs
mov
mov
adc
push
jnp
and
adc
xlat
add
popa
imul
mov
push
push
stos
pushf
(bad)
(bad)
(bad)
(bad)
in
int3
lahf
mov
jo
arpl
je
mov
shl
icebp
lods
add
sbb
dec
and
push
popf
sub
or
jl
adc
(bad)
(bad)
inc
aas
cmp
fild
fwait
mov
sub
pop
xor
pop
sub
add
(bad)
stc
(bad)
aad
sar
(bad)
(bad)
jmp
or
mov
pop
push
lds
add
dec
and
std
(bad)
push
cdq
push
ins
ret
mov
sti
in
fsubp
adc
mov
dec
loopne
arpl
stos
(bad)
dec
inc
dec
cmp
cmovo
mov
push
sar
push
sub
dec
sti
dec
push
mov
dec
rol
push
cmc
pushf
adc
pop
push
mov
sub
test
lods
jb
(bad)
(bad)
(bad)
jmp
push
ftst
or
cmp
inc
push
popf
and
sahf
and
fwait
inc
mov
dec
adc
xchg
dec
adc
pop
inc
test
cmp
rcl
dec
pop
lock
mov
(bad)
(bad)
(bad)
jmp
(bad)
or
psllw
fdiv
loop
sar
xchg
icebp
add
xchg
inc
test
mov
stc
nop
in
push
dec
or
scas
jmp
inc
adc
scas
std
(bad)
(bad)
inc
push
out
(bad)
add
sub
adc
adc
push
call
aaa
xchg
inc
pusha
sub
add
js
xchg
into
ja
(bad)
xor
cmp
es
(bad)
(bad)
jmp
js
dec
dec
add
inc
jp
test
push
loope
sbb
enter
sub
into
xchg
fxch
(bad)
(bad)
(bad)
(bad)
jl
sahf
loope
loopne
test
out
(bad)
das
dec
xor
pop
dec
jmp
adc
std
cdq
aas
(bad)
(bad)
(bad)
call
je
jp
sub
cmp
xchg
mov
aam
aam
dec
aad
popa
int
fwait
loope
(bad)
(bad)
push
sub
inc
not
add
outs
sbb
aas
push
call
int
movs
jbe
dec
cmp
es
arpl
mov
mov
pop
pusha
xchg
dec
je
stc
push
jbe
(bad)
(bad)
dec
fidiv
ret
jle
cwde
into
(bad)
(bad)
and
aam
push
dec
stos
repnz
mov
xchg
(bad)
(bad)
jmp
inc
push
push
jb
push
lds
cmp
jmp
mov
int
(bad)
dec
cmp
sbb
xchg
cmc
test
sub
pop
jmp
(bad)
retf
sub
push
jne
std
(bad)
(bad)
(bad)
mov
in
inc
dec
jne
mov
movs
mov
fsubrp
in
aas
fidiv
sub
sahf
or
(bad)
jmp
fiadd
inc
adc
add
scas
push
pop
and
mov
fst
stos
xchg
push
mov
(bad)
(bad)
(bad)
jmp
es
mov
cmps
ret
cmc
shr
ret
add
add
mov
pop
jp
arpl
(bad)
(bad)
inc
add
mov
ja
int3
cmps
mov
cmp
movs
gs
and
jb
mov
inc
movs
out
test
stos
pop
leave
inc
dec
test
(bad)
(bad)
(bad)
jmp
push
mov
dec
inc
outs
lds
xor
push
sbb
xor
push
js
call
movs
cmc
fistp
mov
inc
mov
int3
inc
mov
(bad)
(bad)
inc
and
rcl
push
movs
ds
out
mov
ss
ja
or
mov
push
sub
out
clc
dec
fwait
push
scas
add
lea
in
push
ds
leave
les
mov
push
cld
jmp
inc
mov
pop
loop
mov
je
jae
push
dec
mov
shr
loopne
cmp
(bad)
in
lods
sub
mov
pop
xor
ss
in
push
and
pop
dec
cmp
(bad)
dec
fwait
loopne
call
popa
fmul
ffreep
movs
cmp
lods
repz
(bad)
(bad)
call
ds
ja
cwde
hlt
xchg
xor
jp
in
and
(bad)
(bad)
jmp
xor
or
sbb
push
add
jle
sub
xor
es
js
pop
sub
imul
(bad)
inc
pop
je
push
cwde
mov
jl
pusha
xchg
cmps
mov
mov
sbb
sub
sub
(bad)
jg
push
sbb
mov
les
aad
cld
or
neg
jbe
jmp
(bad)
mov
retf
mov
push
cld
jae
inc
mov
fdivrp
(bad)
(bad)
(bad)
aas
outs
in
inc
fucomip
shl
cmp
imul
aam
or
test
leave
stos
sub
cmp
sti
(bad)
(bad)
(bad)
dec
cmp
fstp
mov
dec
loope
inc
or
mov
retf
call
push
pop
arpl
test
xor
xchg
retf
std
fdiv
ss
lock
int
jno
(bad)
(bad)
(bad)
mov
xchg
test
push
inc
sub
dec
sbb
mov
pusha
or
sbb
jle
retf
(bad)
(bad)
(bad)
push
inc
(bad)
jo
call
sub
popa
push
test
fdivr
pushf
or
adc
(bad)
(bad)
inc
cmp
push
mov
mov
sbb
push
js
retf
fld
sub
or
cli
(bad)
(bad)
call
stos
add
cmc
cmps
call
dec
call
cmp
pop
data16
or
jmp
pushf
sub
dec
push
ret
xchg
dec
aas
stos
loopne
jo
outs
lfs
lea
loop
call
mov
repnz
cmps
sub
adc
jmp
icebp
out
jg
sahf
in
pop
stos
add
shl
jns
movs
xchg
mov
jmp
(bad)
(bad)
call
push
lods
das
nop
loope
push
sbb
pop
xor
and
es
adc
stos
inc
popa
xchg
call
repnz
sar
(bad)
(bad)
dec
int3
sub
stc
push
mov
push
outs
sti
sub
sbb
push
or
retf
aaa
(bad)
call
cld
dec
cdq
rol
stos
cmps
test
leave
data16
jnp
xchg
mov
retf
and
ret
push
jmp
mov
enter
jb
xchg
(bad)
clc
push
inc
icebp
(bad)
(bad)
(bad)
call
cmp
or
xchg
rcr
or
xor
dec
stos
pusha
pop
mov
aas
cmp
lds
xor
xor
rol
pop
clc
(bad)
call
call
outs
movs
inc
xor
push
out
(bad)
(bad)
jmp
test
(bad)
mov
cmp
add
push
xchg
leave
inc
inc
mov
jno
aaa
xor
add
and
(bad)
(bad)
(bad)
dec
out
sub
jmp
jmp
pop
scas
jno
adc
cmp
mov
jmp
retf
xchg
popf
or
adc
lahf
sub
and
push
pop
or
pop
cmp
call
dec
pop
push
fadd
fwait
ret
repnz
ficom
(bad)
(bad)
(bad)
call
add
(bad)
add
sub
aaa
xchg
push
iret
or
and
push
jno
aad
adc
(bad)
(bad)
(bad)
inc
aas
sti
inc
sub
jo
repnz
dec
pop
and
mov
stc
mov
(bad)
jne
and
(bad)
(bad)
inc
mov
loop
addr16
jne
mov
xor
push
mov
aad
jp
(bad)
(bad)
(bad)
(bad)
cmps
adc
mov
add
cli
inc
clc
xchg
sub
pop
push
push
jae
jecxz
pop
mov
(bad)
(bad)
(bad)
jmp
or
jmp
std
cld
sbb
ss
fild
js
or
(bad)
(bad)
(bad)
jmp
out
xor
jg
and
dec
mov
jl
add
call
dec
mov
std
(bad)
(bad)
call
or
push
push
(bad)
mov
add
imul
sahf
popa
dec
pop
push
aam
cmc
mov
or
or
fnstcw
jle
leave
(bad)
sbb
xchg
stos
not
xlat
aam
mov
(bad)
(bad)
call
bound
aad
and
push
dec
pushf
sub
fcomp
pop
jb
fldcw
jg
and
or
jl
test
cmc
rol
sti
add
inc
mov
hlt
rcl
inc
fs
dec
and
pop
inc
popf
or
cmp
mov
das
mov
dec
dec
mov
push
ficom
ja
imul
sbb
(bad)
(bad)
jmp
cmps
mov
shl
repnz
sti
jae
test
inc
movs
call
ret
clc
outs
(bad)
(bad)
(bad)
(bad)
cld
sar
adc
dec
fld
imul
mov
(bad)
nop
call
(bad)
(bad)
jmp
loop
push
out
fs
data16
add
jge
add
xor
cmp
(bad)
(bad)
(bad)
call
mov
and
pop
out
add
pop
pop
cmc
mov
enter
jns
cmp
jnp
(bad)
(bad)
(bad)
(bad)
fldenv
jno
clc
aas
inc
jg
divps
dec
jmp
addr16
fiadd
retf
jne
dec
cmp
(bad)
(bad)
(bad)
mov
cmp
mov
inc
hlt
push
mov
out
popa
jecxz
stc
ffree
jmp
clc
pop
pop
cdq
xchg
mov
stos
outs
pop
jbe
sbb
mov
shl
fbld
pop
vmovd
in
inc
ins
mov
leave
shl
cmp
mov
dec
jl
jecxz
dec
out
cli
(bad)
mov
xor
dec
jbe
jle
out
(bad)
pop
hlt
sbb
imul
cld
(bad)
jmp
mov
xlat
sub
nop
outs
fwait
mov
jae
les
lea
cmp
(bad)
(bad)
(bad)
(bad)
mov
cli
imul
sbb
int
in
lods
pop
(bad)
mul
add
(bad)
(bad)
cmp
div
mov
push
jne
clc
jl
aaa
std
(bad)
call
mov
sar
inc
inc
or
(bad)
(bad)
(bad)
call
inc
fs
sete
lock
mov
in
rcr
xor
fld
(bad)
(bad)
(bad)
jmp
or
pop
stos
outs
sub
jge
lods
sub
jae
sahf
push
mov
(bad)
jmp
stos
ss
jmp
sub
mov
mov
push
imul
std
int3
ja
xchg
or
add
cmp
das
ret
xchg
ins
scas
mov
jmp
shr
iret
xor
xchg
jmp
jo
sub
out
inc
int
inc
into
stc
sub
mov
xrelease
sub
push
inc
imul
je
push
retf
test
inc
adc
(bad)
(bad)
push
(bad)
mov
adc
outs
xlat
out
bound
xchg
cmp
aad
or
jo
in
xor
xor
add
(bad)
(bad)
inc
push
pop
sbb
ja
sahf
daa
movs
sub
xchg
push
adc
cli
fidivr
cld
lods
ret
div
mov
cwde
jecxz
repnz
sahf
inc
sub
loopne
add
dec
(bad)
(bad)
(bad)
call
int
dec
jo
je
arpl
mov
mov
clc
xor
fcom
aaa
cli
jae
pop
mov
call
cwde
call
je
cmp
cwde
enter
(bad)
(bad)
(bad)
mov
mov
test
out
and
pop
xor
mov
push
rcr
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jnp
mov
rcr
ins
popa
sub
mov
retf
mov
push
xor
add
pop
sub
outs
cmc
cmp
sub
jne
repnz
or
pop
loopne
cmc
lods
inc
xchg
pop
jne
add
sahf
ins
out
sub
sbb
inc
sbb
fistp
pop
mov
sbb
fldz
ja
es
call
(bad)
(bad)
jmp
cmp
not
mov
jo
shr
inc
nop
in
rcr
jmp
push
pop
sti
(bad)
arpl
shl
cmp
push
jge
sti
fstp
in
call
dec
xor
jmp
xchg
jle
iret
mov
call
push
inc
mov
jl
popa
and
mov
fiadd
inc
or
cmps
pop
push
(bad)
(bad)
(bad)
jmp
mov
loop
or
outs
pop
xor
mov
ds
pushf
shl
ins
imul
aad
test
and
cwde
xchg
jmp
(bad)
(bad)
(bad)
(bad)
inc
adc
clc
cmp
bsf
mov
and
jge
push
push
fistp
xchg
stc
mov
jo
dec
push
nop
inc
(bad)
(bad)
(bad)
jmp
shr
fadd
pop
inc
mov
(bad)
push
rcr
fldcw
(bad)
jmp
cwde
mov
pop
lock
add
daa
or
movd
push
in
retf
shr
das
(bad)
(bad)
(bad)
jmp
mov
sahf
mov
cmc
mov
scas
pop
sub
push
gs
into
mov
mov
das
movs
(bad)
stc
adc
xor
push
pop
push
outs
dec
imul
cmc
add
jg
push
mov
sub
cli
and
bound
sbb
cld
cmp
push
ja
lods
pop
mov
cmp
mov
sbb
(bad)
jg
je
(bad)
push
scas
xor
jle
push
add
(bad)
pop
jnp
or
lock
in
in
(bad)
(bad)
(bad)
jg
leave
sub
rcl
repz
out
dec
(bad)
data16
repnz
nop
mov
xor
sbb
(bad)
(bad)
(bad)
(bad)
jmp
inc
xchg
push
rcr
pop
inc
push
jo
hlt
aad
adc
movs
in
out
in
fwait
(bad)
(bad)
(bad)
call
and
out
outs
fstp
cmp
cmp
sbb
lods
jb
fs
jg
fld
ins
fcmovbe
test
add
in
mov
je
inc
ret
push
jg
(bad)
(bad)
jmp
lods
dec
adc
adc
and
and
(bad)
(bad)
dec
mov
push
jmp
fmul
and
and
adc
fild
jbe
imul
stos
xor
jg
retf
mov
dec
jb
pop
fstp
packssdw
adc
dec
rcl
idiv
sub
rcr
push
mov
outs
add
idiv
add
jno
rcl
outs
dec
add
inc
push
cmp
cmp
push
popf
xchg
xor
int3
call
(bad)
(bad)
cmp
add
test
je
sbb
push
(bad)
mov
push
dec
cld
movs
(bad)
(bad)
(bad)
push
jp
mov
scas
sbb
out
cmp
xchg
stos
sar
jmp
mov
imul
out
(bad)
push
std
(bad)
test
cld
jnp
or
(bad)
fidiv
or
sbb
xor
(bad)
(bad)
(bad)
or
addr16
mov
and
cmps
dec
mov
jl
mov
mov
push
test
(bad)
dec
inc
push
outs
shl
das
xchg
push
mov
and
xchg
pusha
stc
sahf
fiadd
(bad)
(bad)
dec
clc
xchg
fidivr
or
cmp
pop
fwait
loopne
sbb
dec
cmp
cmp
(bad)
(bad)
call
clc
jne
lahf
pop
lds
inc
xchg
push
shl
mov
xor
jmp
(bad)
call
fldenv
adc
cs
sbb
fwait
cmp
test
xor
movs
loop
cdq
mov
push
into
hlt
(bad)
(bad)
(bad)
call
push
out
sbb
fild
cmp
push
es
sbb
sub
jmp
(bad)
(bad)
inc
sti
dec
pop
int3
xor
push
sbb
push
push
ins
arpl
adc
and
jl
cmps
(bad)
mov
fwait
mov
loopne
dec
fsubr
push
xchg
and
(bad)
(bad)
(bad)
jmp
shr
icebp
lds
jae
repnz
aas
pop
(bad)
fwait
ds
or
shl
(bad)
dec
(bad)
mov
adc
imul
xchg
xchg
jb
call
std
(bad)
leave
ds
xchg
mov
js
pop
loope
clc
mov
stc
aad
cmps
mov
ja
in
es
lea
and
mov
push
mov
xor
mov
sar
jmp
push
pusha
dec
dec
sub
dec
(bad)
(bad)
(bad)
(bad)
aas
psubb
sahf
fcmovu
mov
cmp
neg
icebp
fisub
inc
cmp
xchg
mov
(bad)
call
in
movs
sub
mov
mov
fidiv
cmp
in
mov
aam
shl
jmp
test
mov
mov
pop
add
fwait
mov
test
das
dec
call
jb
cs
jecxz
mov
mov
mov
js
(bad)
cmp
xlat
and
or
call
(bad)
addr16
push
and
std
(bad)
scas
xchg
lahf
loopne
pop
(bad)
iret
lea
(bad)
inc
jne
inc
cmp
retf
inc
pop
add
repnz
cmp
adc
(bad)
jmp
and
pop
sbb
jnp
push
mov
sub
push
xlat
cmps
icebp
mov
(bad)
(bad)
call
js
jbe
push
stos
dec
xor
icebp
sbb
ins
cli
sbb
pop
add
jmp
clc
jmp
cld
add
out
(bad)
sbb
inc
rcl
pop
nop
(bad)
(bad)
(bad)
push
adc
scas
inc
jmp
imul
jg
mov
popa
aad
and
(bad)
(bad)
call
mov
call
fidivr
dec
ss
xchg
xchg
xchg
and
(bad)
call
loopne
mov
out
pop
std
movs
leave
sbb
out
js
xchg
or
(bad)
(bad)
inc
adc
sub
jae
sub
retf
xchg
lods
imul
fsubr
ds
fdiv
inc
loope
call
(bad)
push
push
outs
aad
push
data16
shr
in
jl
test
pop
xchg
adc
push
cld
inc
sbb
mov
rsm
retf
in
fnstcw
sbb
dec
fcomip
(bad)
call
mov
outs
push
lahf
cmp
push
pop
lea
int
xor
(bad)
inc
cld
pop
xor
ss
and
push
and
fisttp
fsub
(bad)
(bad)
(bad)
(bad)
(bad)
push
retf
push
or
adc
or
out
rol
dec
rol
int
ds
(bad)
jmp
sub
or
adc
sbb
sub
and
or
and
sar
(bad)
(bad)
jns
sbb
mov
jo
repz
dec
add
ja
xlat
push
xchg
pop
sar
(bad)
(bad)
jg
pop
adc
sub
push
and
inc
inc
cld
cmps
mov
push
shl
push
sub
add
sbb
mov
xchg
(bad)
(bad)
(bad)
jmp
arpl
or
mov
test
xchg
pop
push
retf
fisubr
(bad)
mov
out
mov
and
or
retf
dec
sbb
cmps
cmp
(bad)
call
mov
dec
or
or
into
les
pop
push
(bad)
mov
pop
int
xchg
cmps
mov
(bad)
dec
pushf
ret
enter
jp
add
pop
les
out
cmp
(bad)
jge
jns
push
push
sti
mov
push
mov
dec
loop
push
mov
mov
pusha
cmpps
cmp
icebp
in
mov
sbb
jp
sub
xor
dec
inc
outs
(bad)
mov
xlat
jbe
dec
add
dec
sub
gs
pop
jg
cmps
mov
call
mov
fwait
and
inc
lock
xor
inc
cmp
mov
mov
fild
mov
outs
cli
push
xchg
mov
push
std
push
jle
mov
fmul
mov
xchg
ds
pop
pop
adc
dec
(bad)
(bad)
(bad)
inc
cmps
pop
xor
pop
mov
stos
pop
mov
stc
inc
int3
add
std
sub
or
(bad)
(bad)
push
jmp
cmps
cmp
stos
inc
adc
mov
dec
inc
push
stc
test
(bad)
(bad)
(bad)
jmp
mov
(bad)
dec
scas
bound
adc
jmp
xchg
jns
out
mov
push
and
mov
ret
xor
xor
mov
pop
jl
shl
jmp
test
xor
cmps
push
dec
mov
xlat
mov
pop
or
jne
or
ror
sar
cmp
xchg
loope
inc
imul
xchg
fisttp
jp
jmp
rcr
test
mov
lea
pop
call
retf
pop
inc
scas
push
(bad)
fistp
xchg
retf
enter
jl
xchg
inc
pop
mov
rol
mov
xchg
inc
dec
(bad)
(bad)
out
sbb
not
out
(bad)
(bad)
dec
dec
pop
popf
cmp
push
out
and
pop
add
stc
outs
out
jmp
loop
(bad)
(bad)
(bad)
mov
scas
or
(bad)
sub
cs
jge
pop
sbb
stos
adc
(bad)
inc
loopne
loop
xchg
sub
retf
shl
aad
inc
cmp
out
and
sbb
inc
repz
mov
call
mov
je
cmp
inc
dec
pop
mov
mov
mov
add
inc
xlat
jmp
arpl
int
cmp
mov
clc
(bad)
(bad)
call
sub
xlat
aam
or
mov
int
es
int
inc
xor
pop
imul
push
push
pop
div
xchg
cmps
mov
leave
sbb
cmp
pop
push
jmp
push
mov
xchg
lods
pop
pop
pop
push
jnp
das
jne
test
hlt
xor
jns
rcr
push
pop
(bad)
(bad)
jmp
mov
retf
sti
xor
add
push
push
xlat
xor
push
(bad)
push
push
xchg
cmp
xchg
hlt
dec
adc
cmps
(bad)
jns
ret
test
xchg
jno
or
(bad)
(bad)
jmp
inc
mov
pop
outs
ret
mov
push
icebp
(bad)
jg
cld
inc
sub
mov
xchg
push
ins
hlt
loope
(bad)
(bad)
(bad)
(bad)
inc
mov
jmp
sub
loop
out
mov
bndstx
lds
jg
mov
fst
or
ja
movs
ret
mov
jg
cmp
imul
call
adc
(bad)
(bad)
(bad)
dec
int3
and
mov
sbb
js
xchg
sub
fld
cwde
pop
(bad)
(bad)
(bad)
dec
jecxz
mov
pop
jp
xchg
cmp
aas
lods
(bad)
push
xor
es
mov
call
jmp
mov
xor
popfw
aad
std
aad
out
or
push
nop
jg
pop
popa
jle
pop
jmp
call
add
xchg
dec
pop
push
repnz
sti
rcr
iret
jae
dec
movs
test
cld
(bad)
push
push
dec
jne
mov
xlat
fs
jg
loopne
test
add
(bad)
(bad)
dec
test
out
pushf
(bad)
int
shr
enter
dec
xor
add
mul
or
(bad)
mov
(bad)
(bad)
inc
jbe
retf
push
ja
pop
gs
nop
adc
inc
iret
mov
hlt
outs
std
sbb
sub
pop
ds
or
cld
xchg
and
popf
out
ret
das
mov
(bad)
jmp
xor
sub
cli
sti
adc
js
mov
je
into
push
xchg
xor
mov
mov
add
pop
xor
xor
jnp
jb
js
sub
cmps
clc
xchg
aaa
std
jmp
popf
loopne
xor
dec
ss
mov
xchg
mov
cmps
sub
(bad)
inc
jge
push
sbb
sbb
cmp
pop
push
dec
dec
arpl
mov
rcl
(bad)
jmp
loop
(bad)
sub
leave
rol
cmps
mov
fisttp
icebp
(bad)
pushf
mov
and
mov
loop
lds
pop
dec
dec
ds
xchg
push
scas
(bad)
mov
repnz
add
loope
in
mov
jno
pop
data16
adc
(bad)
(bad)
jmp
adc
xchg
std
stos
xor
fidivr
outs
aad
push
int3
pop
sub
in
pop
mov
rcl
pop
lahf
in
or
or
inc
nop
mov
fcomip
push
xor
in
jge
mov
repz
jns
pop
ret
cs
(bad)
(bad)
(bad)
call
sbb
jno
je
shr
push
or
cmp
scas
scas
mov
enter
(bad)
(bad)
(bad)
dec
test
out
add
inc
repnz
int3
shl
jns
dec
sbb
(bad)
(bad)
(bad)
call
or
dec
(bad)
cmps
jb
mov
inc
xchg
mov
sub
pop
stos
cmp
xchg
and
mov
mov
js
pop
dec
and
popa
iret
(bad)
(bad)
(bad)
jmp
in
fsubr
inc
xor
fwait
loopne
int
mov
inc
dec
adc
inc
mov
(bad)
(bad)
(bad)
inc
push
adc
sbb
push
(bad)
daa
fwait
dec
jge
popf
add
into
imul
cmps
mov
(bad)
(bad)
(bad)
call
ins
xor
out
pop
pop
mov
rcr
cmp
mov
fnstenv
jg
xchg
add
adc
mov
or
fdiv
adc
mov
mul
movs
mov
in
cmp
(bad)
call
inc
and
push
jp
(bad)
fs
mov
(bad)
jmp
jle
enter
(bad)
dec
sbb
pop
rcr
(bad)
out
cmp
mov
adc
sbb
mov
pop
xchg
call
jb
cmp
cwde
xor
ds
(bad)
mov
rcr
or
cmp
sub
je
call
push
lock
in
loop
fwait
stos
dec
jae
mov
or
cli
int
sub
cld
push
aaa
jb
(bad)
(bad)
(bad)
call
jmp
cmp
stc
sti
les
xchg
mov
lea
cmps
cld
adc
leave
dec
xor
(bad)
push
dec
lea
adc
or
add
test
(bad)
inc
test
mov
mov
(bad)
push
jmp
xchg
das
out
enter
fsubr
adc
and
rcl
push
add
(bad)
dec
(bad)
stc
cwde
jae
ror
lea
push
mov
pop
(bad)
(bad)
(bad)
(bad)
(bad)
ds
cwde
cdq
sub
les
and
fcom
es
sti
sub
mov
and
xor
imul
lahf
mov
mov
dec
jle
xchg
sub
in
inc
pop
dec
jle
test
mov
das
sub
das
shl
cmp
cmp
aam
mov
or
outs
cli
(bad)
mov
push
not
sub
push
addr16
loope
mov
hlt
(bad)
(bad)
inc
pop
or
pop
adc
imul
jmp
not
std
fistp
xchg
outs
cld
xor
sub
push
ror
adc
inc
(bad)
(bad)
(bad)
jmp
push
push
jge
and
fst
es
pop
mov
mov
in
and
ins
xor
(bad)
(bad)
(bad)
jmp
loopne
hlt
js
imul
mov
jo
or
xor
xchg
or
mov
inc
xchg
pop
leave
test
ins
imul
adc
inc
scas
(bad)
(bad)
mov
shr
jne
xchg
ds
pop
sbb
addr16
(bad)
call
mov
loope
adc
xor
fwait
pop
pop
xor
rcl
jmp
retf
mov
xlat
jmp
dec
mov
shl
gs
push
pop
push
cmp
cmc
pushf
mov
(bad)
jmp
(bad)
(bad)
push
pop
mov
jae
in
inc
mov
mov
xchg
mov
dec
shl
jp
xor
(bad)
(bad)
call
fs
jno
push
lea
dec
xor
nop
nop
es
xchg
cli
mov
(bad)
(bad)
(bad)
(bad)
call
push
aad
xchg
push
ins
pusha
in
inc
lock
ret
fidivr
(bad)
(bad)
dec
mov
mov
jmp
jae
dec
ficom
dec
popa
inc
jge
xor
shl
push
push
arpl
(bad)
(bad)
inc
mov
mov
mov
hlt
mov
xchg
jne
pop
repnz
sub
xor
call
lods
xor
push
hlt
mov
sahf
popa
inc
test
pusha
hlt
(bad)
mov
(bad)
(bad)
(bad)
push
imul
in
loopne
pop
ss
pop
pusha
and
mov
sbb
push
jno
enter
inc
clc
call
jp
test
stc
(bad)
mov
outs
(bad)
(bad)
(bad)
(bad)
call
(bad)
sbb
gs
fdivr
sub
mov
add
in
shld
sbb
(bad)
(bad)
(bad)
inc
mov
stos
pop
sub
in
and
loop
inc
aam
jnp
pop
pop
cdq
push
push
movs
(bad)
(bad)
(bad)
inc
lahf
pop
dec
sbb
jg
fdiv
and
test
sub
hlt
dec
push
call
in
repnz
mov
and
xlat
mov
clc
add
and
(bad)
popf
mov
lock
and
inc
inc
pop
shl
cmp
(bad)
(bad)
(bad)
push
mov
dec
test
sbb
pop
out
ror
test
rol
ja
(bad)
aad
test
int
stc
xchg
dec
(bad)
iret
test
and
retf
sti
(bad)
(bad)
jmp
sbb
adc
cmp
test
in
add
dec
cmps
sbb
jg
sub
or
inc
sub
jb
mov
scas
rcr
jge
dec
ins
sahf
iret
out
or
movs
push
sti
cmp
ret
sbb
mov
mov
jl
cmps
mov
sbb
jl
cmovno
(bad)
(bad)
(bad)
dec
sar
pop
mov
scas
dec
test
adc
nop
inc
sbb
out
rcr
(bad)
(bad)
inc
jb
jge
pop
xor
inc
dec
sbb
je
sbb
cmp
repnz
movs
mov
test
(bad)
(bad)
(bad)
inc
(bad)
aam
pop
or
sub
inc
mov
repnz
or
xchg
mov
cmps
cmps
mov
mov
repnz
inc
xchg
push
mov
aaa
push
in
stc
jmp
xor
and
leave
popa
pop
iret
(bad)
fdiv
and
and
ud0
inc
(bad)
into
mov
push
gs
pusha
push
jp
or
aas
cdq
jns
(bad)
(bad)
(bad)
(bad)
(bad)
clc
call
mov
scas
paddusb
xchg
jge
dec
loopne
jo
mov
lods
test
(bad)
(bad)
(bad)
push
jo
hlt
jge
push
std
pop
dec
jno
mov
push
sub
ret
mov
(bad)
(bad)
(bad)
inc
mov
jecxz
sbb
test
hlt
cmp
div
xchg
clc
cmp
(bad)
(bad)
(bad)
cmp
outs
repnz
push
hlt
repz
je
adc
in
sub
es
xchg
jmp
sub
fmul
mov
pop
or
(bad)
(bad)
dec
add
xchg
xor
test
ins
gs
xor
(bad)
(bad)
(bad)
clc
cmp
and
pop
cmps
outs
xchg
add
cmps
adc
mov
movs
sti
mov
jmp
and
addr16
adc
push
cmp
adc
pop
lea
(bad)
push
fst
jnp
movs
cmp
inc
and
jb
mov
std
bswap
in
mov
dec
dec
enter
(bad)
std
sub
cmp
jle
push
retf
cs
test
enter
cmp
shr
xor
call
(bad)
(bad)
cmp
aas
pop
sub
test
pop
addr16
jle
push
fs
jno
ins
in
xlat
cmp
(bad)
cmp
into
sub
pop
push
icebp
jae
xchg
sar
pop
int3
enter
mov
xchg
mov
lock
(bad)
jmp
inc
leave
sub
pop
jb
adc
std
mov
js
mov
outs
mov
cmp
lods
adc
fdiv
push
cmp
js
fucomip
fcom
(bad)
push
or
cmp
xor
jno
lods
jg
fst
(bad)
(bad)
jmp
jb
cmp
mov
add
add
ja
sbb
lahf
popf
(bad)
(bad)
(bad)
jmp
or
sbb
pop
xlat
loopne
scas
xlat
adc
cdq
mov
mov
and
loop
(bad)
(bad)
jmp
dec
add
push
je
mov
fdivr
lock
pop
lock
inc
mov
sbb
add
jmp
mov
or
pop
inc
mov
mov
add
jmp
add
movs
jg
daa
push
cdq
fst
pop
inc
sub
arpl
mov
repz
and
(bad)
jg
cmp
call
jbe
hlt
dec
fwait
es
gs
inc
in
lahf
dec
(bad)
(bad)
push
adc
jnp
jo
mov
mov
out
inc
loope
inc
and
iret
ror
dec
in
ds
push
test
mov
push
sub
clc
add
mov
(bad)
(bad)
stc
(bad)
cmp
or
(bad)
xor
mov
mov
dec
leave
fisttp
pop
gs
(bad)
(bad)
mov
repz
repz
sbb
xor
out
lahf
push
adc
ror
cld
xchg
jmp
sbb
clc
jp
lea
sub
jns
fwait
dec
out
(bad)
(bad)
push
nop
push
push
pusha
(bad)
enter
jbe
into
in
jl
sub
inc
stos
out
cdq
add
(bad)
dec
or
fimul
movs
pusha
push
push
mov
shl
cwde
cmp
not
cmps
jl
popa
cld
call
sub
xlat
add
push
fld
mov
(bad)
(bad)
inc
pop
or
push
inc
scas
mov
mov
(bad)
sbb
jle
jecxz
fist
push
(bad)
(bad)
(bad)
dec
mov
xor
pop
bound
sti
cmp
or
fcom
(bad)
(bad)
(bad)
fnstcw
mov
or
loop
sbb
mov
(bad)
mov
and
cmp
rcl
mov
call
dec
or
sub
jns
(bad)
push
cmps
fsubr
adc
(bad)
(bad)
push
push
dec
nop
mov
hlt
jb
lods
in
and
push
js
ds
js
xor
imul
(bad)
push
mov
lock
mov
sub
sbb
mov
mov
(bad)
cs
(bad)
(bad)
(bad)
retf
inc
sahf
sub
movs
jecxz
mov
cmps
and
mov
push
mov
jp
ss
movlps
shl
in
(bad)
(bad)
inc
dec
aas
js
ret
adc
sbb
and
pop
retf
adc
(bad)
dec
lds
push
and
stc
test
mov
loope
pop
(bad)
or
stos
fcom
(bad)
dec
ins
add
mov
jle
and
test
outs
push
inc
mov
(bad)
(bad)
(bad)
inc
mov
std
jge
data16
mov
sub
ficomp
int3
das
lock
(bad)
jmp
pop
inc
imul
adc
cmp
mov
clc
mov
in
out
xchg
inc
(bad)
(bad)
(bad)
inc
push
mov
jbe
mov
call
jns
(bad)
dec
loope
ins
imul
adc
push
in
ja
fild
out
cmp
ins
cld
call
loopne
mov
fs
(bad)
call
scas
push
shr
and
fist
inc
repz
dec
pop
adc
gs
fnop
inc
xor
pop
push
inc
cpuid
(bad)
mov
iret
movs
stc
(bad)
(bad)
(bad)
call
repz
test
cmp
dec
in
rol
cmp
xchg
xchg
or
aaa
and
(bad)
(bad)
push
mov
xor
pusha
xchg
scas
xchg
mov
(bad)
cld
in
adc
inc
pop
dec
mov
(bad)
(bad)
(bad)
(bad)
fld
cmp
pop
mov
(bad)
mov
xor
lock
je
mov
push
lahf
(bad)
(bad)
(bad)
(bad)
stc
adc
push
js
add
pop
out
inc
aad
fisubr
dec
add
pusha
xchg
and
(bad)
icebp
(bad)
(bad)
call
fcom
ret
mov
mov
add
add
popf
(bad)
(bad)
call
test
imul
dec
sbb
mov
jmp
lea
scas
(bad)
push
bound
xor
or
pop
mov
or
(bad)
dec
push
xor
pop
fst
scas
ret
sbb
in
cli
dec
mov
xor
(bad)
jmp
ret
pushf
pop
jl
inc
jg
rcl
ret
pop
sti
and
add
dec
and
(bad)
(bad)
push
cmps
mov
dec
pop
sbb
pop
jmp
push
hlt
mov
jle
sbb
inc
mov
int3
cmp
sbb
inc
cmp
cdq
test
(bad)
(bad)
(bad)
call
ret
lods
test
push
ja
cdq
in
fsub
sub
in
(bad)
movs
mov
call
rcl
lods
fcom
repz
(bad)
jle
nop
lock
jmp
dec
push
leave
cmc
in
inc
add
dec
lock
mov
rcr
xor
jbe
push
jnp
loop
inc
test
mov
je
lods
push
out
neg
fcmovne
shl
push
dec
dec
add
dec
mov
cmp
cld
(bad)
(bad)
(bad)
jmp
aas
fs
(bad)
pop
xchg
push
test
loopne
cwde
and
push
pop
mov
icebp
inc
add
inc
push
cmp
rol
xchg
enter
call
cwde
mov
(bad)
mov
push
sti
jecxz
xor
pop
stos
(bad)
lea
cli
(bad)
jg
inc
fadd
xchg
push
pop
aaa
out
inc
cmp
test
(bad)
jmp
mov
loope
cmp
jge
xor
sub
add
sahf
push
fwait
add
(bad)
jmp
jle
adc
sar
call
call
(bad)
inc
mov
xchg
outs
or
addr16
sahf
retf
mov
pop
clc
cmp
(bad)
(bad)
dec
lock
call
rcl
fld
jle
cmp
jecxz
dec
mov
int
sub
daa
xor
dec
mov
(bad)
inc
jo
sub
test
sbb
xlat
les
mov
pusha
inc
fdivr
(bad)
(bad)
(bad)
aas
mov
xchg
jg
xchg
sbb
lea
pop
xor
jb
cmp
ins
test
mov
jecxz
neg
stos
rcr
sub
imul
aad
std
(bad)
(bad)
(bad)
push
arpl
cld
or
jmp
add
sbb
jmp
inc
mov
mov
test
push
jmp
jne
mov
fwait
out
cli
dec
mov
gs
in
push
(bad)
fistp
xchg
pop
mov
push
scas
mov
shr
ds
stc
pop
sahf
push
dec
and
or
ret
push
xor
mov
fcomi
(bad)
(bad)
call
cwde
jb
or
cwde
fwait
shl
out
in
inc
test
push
sahf
xchg
mov
(bad)
(bad)
(bad)
fistp
adc
pop
mov
aam
jp
pushf
(bad)
sbb
(bad)
dec
adc
pop
loopne
push
inc
stos
pop
scas
push
cdq
cdq
xchg
add
imul
call
jecxz
mov
int3
ds
adc
and
pop
inc
jns
cmp
dec
(bad)
(bad)
(bad)
jmp
xchg
jne
loope
push
int
and
inc
(bad)
sub
pop
xor
repnz
in
inc
scas
pop
std
pop
call
(bad)
(bad)
fld
and
fsqrt
jmp
pushf
cmp
adc
pop
mov
jg
int3
sets
xchg
cmp
sub
in
les
shl
cmp
(bad)
(bad)
push
shl
dec
xchg
imul
cmp
sahf
mov
call
jg
mov
and
mov
inc
mov
jne
lock
retf
call
or
inc
add
dec
mov
jle
mov
mov
mov
fwait
arpl
ins
or
mov
imul
stos
pop
lock
out
das
cld
sbb
aaa
cld
jmp
out
pop
sbb
mov
scas
popa
and
in
jne
push
jb
(bad)
(bad)
(bad)
(bad)
mov
cmp
inc
dec
and
pop
std
shr
mov
and
out
and
jmp
enter
loope
popf
test
sub
(bad)
inc
pusha
(bad)
mov
inc
ficomp
das
mov
int3
and
push
pusha
cld
nop
(bad)
(bad)
(bad)
jmp
fwait
test
pop
add
pusha
fbld
sbb
or
pop
add
xchg
cmp
clc
(bad)
jmp
out
and
dec
ror
scas
dec
gs
nop
push
inc
cli
into
nop
aas
imul
mov
imul
pop
dec
xor
or
jl
cld
call
xchg
(bad)
mov
(bad)
test
pop
mov
int3
mov
dec
sub
mov
adc
jne
(bad)
(bad)
(bad)
call
mov
fmul
leave
mov
fs
sub
mov
mov
push
add
push
inc
xor
xor
(bad)
jmp
iret
les
and
(bad)
and
idiv
aad
push
(bad)
(bad)
jmp
data16
fistp
mov
lods
pop
ds
jg
push
mov
dec
ret
adc
cmc
enter
jmp
or
cmps
ret
mov
xchg
lea
xchg
in
sub
or
inc
jmp
xor
and
into
inc
test
sbb
pop
ror
jmp
push
in
loopne
neg
adc
jl
je
(bad)
(bad)
call
jne
movs
ss
out
sbb
or
fcom
outs
or
push
mov
mov
pop
arpl
(bad)
jg
fnstsw
pop
adc
cld
shl
test
or
xor
dec
int3
jne
push
jecxz
retf
mov
mov
mov
retf
or
jmp
call
pop
inc
(bad)
addr16
dec
loopne
daa
das
pop
inc
dec
xchg
(bad)
(bad)
(bad)
call
mov
push
mov
dec
stos
les
xchg
fidiv
js
push
dec
les
(bad)
(bad)
jmp
movs
(bad)
shl
dec
and
and
dec
scas
cld
lods
outs
(bad)
mov
jmp
retf
enter
clc
loope
cmp
jge
ret
iret
pop
or
and
xchg
push
dec
popf
sub
ret
jbe
xchg
jmp
les
mov
cmp
in
in
out
dec
add
cmp
js
and
xchg
sbb
(bad)
(bad)
jg
mov
dec
push
aad
pop
inc
(bad)
xchg
jp
lods
inc
pushf
icebp
xchg
mov
add
cli
(bad)
(bad)
inc
sbb
xchg
and
rcr
inc
push
mov
mov
call
cmps
scas
jne
stc
xor
enter
sub
mov
pop
inc
shl
pop
(bad)
(bad)
(bad)
(bad)
cmp
xchg
retf
sbb
jne
push
ror
mov
mov
ret
js
or
leave
ds
aaa
xchg
cmp
(bad)
(bad)
inc
(bad)
(bad)
cld
jne
push
push
into
adc
sbb
push
mov
and
fdivr
(bad)
(bad)
jmp
cwde
movs
movs
push
pop
inc
int
sbb
call
bound
scas
jmp
push
jnp
pop
add
(bad)
(bad)
dec
es
imul
mov
jb
pop
daa
aad
jnp
test
or
lods
pop
jecxz
gs
(bad)
(bad)
(bad)
jle
(bad)
loopne
daa
out
test
inc
shl
fldenv
adc
mov
popa
leave
sub
jmp
(bad)
xor
or
daa
push
push
sbb
popf
mov
and
add
push
xchg
cmp
shl
sbb
jg
adc
mov
mov
lock
sti
imul
test
lahf
sub
test
mov
jp
call
and
js
cmp
mov
sub
popf
icebp
push
fdivr
(bad)
(bad)
(bad)
jp
add
repz
jne
pop
ja
mov
inc
les
popa
mov
(bad)
dec
into
lahf
mov
cmp
cmps
pop
retf
(bad)
mov
sbb
(bad)
(bad)
(bad)
push
add
iret
stos
mov
test
bnd
(bad)
je
jp
inc
outs
cli
outs
mov
cdq
and
(bad)
jg
call
xchg
rol
ins
jmp
and
push
fdivr
xchg
(bad)
push
and
paddsb
jo
push
sub
(bad)
(bad)
(bad)
fnstsw
mov
adc
in
call
jge
js
out
jecxz
sub
imul
(bad)
jmp
fwait
push
test
data16
jmp
call
sahf
sbb
dec
in
inc
mov
mov
inc
or
int
cmp
pop
sbb
jl
iret
mov
in
inc
rep
cmp
test
pop
icebp
mov
ret
xchg
loopne
adc
fcmovnu
ret
(bad)
mov
adc
aaa
es
push
push
and
pop
or
iret
mov
(bad)
shr
pusha
sbb
clc
mov
mov
sub
push
sti
adc
in
jne
(bad)
(bad)
(bad)
call
add
test
stos
add
adc
rcr
std
ds
and
xchg
adc
jo
(bad)
(bad)
(bad)
jmp
push
xchg
xchg
inc
mov
jns
je
fdivr
stc
xor
xchg
(bad)
(bad)
(bad)
push
addr16
dec
xor
or
sub
adc
or
or
mov
and
adc
loope
add
fbld
rcl
xor
popa
dec
rcl
mov
xor
xchg
enter
fdiv
into
fstp
rcr
(bad)
(bad)
push
pop
ins
push
sbb
stc
(bad)
popf
pop
jle
int
and
into
mov
sahf
hlt
xor
(bad)
(bad)
jmp
mov
xor
push
add
or
jb
mov
adc
cmps
jns
pop
ja
pop
loopne
scas
mov
movs
data16
aaa
push
(bad)
aam
(bad)
(bad)
push
popa
push
repnz
xor
xor
retf
mov
es
repnz
mov
jns
std
cmps
loopne
mov
call
in
jae
gs
ss
das
sbb
(bad)
lods
sti
pop
ins
imul
or
xor
int
or
or
js
push
adc
rcl
adc
sub
(bad)
jmp
(bad)
xlat
or
inc
dec
repz
or
mov
jbe
add
push
sub
add
mov
push
and
imul
jnp
adc
push
(bad)
(bad)
(bad)
sub
fs
cdq
ins
(bad)
bound
pusha
jb
pop
push
xor
ja
jns
jo
(bad)
(bad)
(bad)
(bad)
jns
jmp
ins
adc
bound
pop
call
jp
cmc
imul
push
out
adc
xchg
xor
and
cmp
imul
shl
(bad)
call
add
cli
movs
jae
push
sbb
push
and
mov
in
xor
mov
fdivrp
call
std
pop
pop
std
mov
jmp
pop
and
pop
sub
adc
(bad)
out
adc
out
not
movs
arpl
adc
out
out
lahf
dec
add
(bad)
(bad)
inc
add
or
stc
(bad)
(bad)
xchg
mov
enter
rcr
sub
dec
aad
mov
(bad)
(bad)
adc
sub
mov
sbb
and
jmp
repz
cdq
add
adc
sub
in
xchg
sub
(bad)
(bad)
(bad)
push
fmulp
fwait
dec
mov
mov
js
sub
and
repnz
xlat
pusha
cli
cmps
jle
imul
sub
out
cli
jnp
js
xchg
or
daa
xchg
or
(bad)
(bad)
(bad)
push
and
xchg
and
(bad)
sahf
mov
or
clc
jge
test
xchg
outs
or
(bad)
inc
adc
pop
pop
add
mov
adc
es
xor
lock
dec
mov
mov
(bad)
stc
inc
stos
xchg
add
popf
mov
jo
cwde
(bad)
mov
(bad)
(bad)
(bad)
inc
lea
xlat
sti
clc
jg
repz
xchg
xor
pop
jmp
repz
loope
(bad)
(bad)
(bad)
dec
push
out
cwde
rol
outs
fst
lea
pop
rol
pop
mov
mov
push
aam
sub
mov
dec
cmp
je
and
sub
(bad)
cmp
int
dec
popa
jg
sbb
and
das
clc
call
dec
cmp
(bad)
fidivr
push
mov
pop
mov
jle
add
dec
sub
or
push
add
sbb
(bad)
(bad)
(bad)
cmp
jne
imul
stos
sar
cld
mov
mov
les
mov
cmp
lock
(bad)
(bad)
cmp
std
xchg
pushaw
ret
bound
(bad)
(bad)
add
shl
hlt
jo
(bad)
dec
cmp
hlt
pop
add
out
aad
sub
js
fld
(bad)
call
enter
js
fidivr
or
adc
xchg
clc
dec
ins
movs
jle
sbb
cld
fcomip
sub
les
loop
shl
fcmovu
push
add
hlt
dec
in
sub
pop
pop
xchg
fstp
(bad)
(bad)
(bad)
(bad)
call
pop
arpl
jno
neg
inc
ret
ret
pop
mov
push
imul
pop
mov
mov
loope
(bad)
(bad)
(bad)
cld
add
add
fdivrp
lahf
mov
cmp
out
mov
push
jmp
jmp
adc
mov
lods
aaa
mov
stc
fadd
test
dec
xchg
mov
rcr
int3
scas
iret
sub
push
stc
xchg
movs
inc
inc
(bad)
std
mov
or
or
nop
cmp
shr
push
pop
js
or
sbb
movs
out
inc
clc
xor
sbb
(bad)
(bad)
jg
mov
dec
stos
(bad)
push
xadd
jnp
jge
inc
(bad)
(bad)
(bad)
(bad)
cld
push
xor
(bad)
ja
sbb
ins
mov
fdivr
rcr
add
sub
fiadd
std
sub
ret
push
dec
out
dec
cmp
das
es
daa
mov
loop
inc
call
jl
ins
(bad)
enter
cmp
jb
fild
push
lds
stos
enter
(bad)
push
loope
cmp
pop
loope
pop
in
mov
push
xchg
gs
cwde
(bad)
(bad)
(bad)
(bad)
call
mov
push
pop
ficomp
jmp
and
fdivr
pop
fst
pop
jno
jmp
(bad)
(bad)
call
daa
aaa
mov
mov
aad
mov
adc
jecxz
mov
jns
test
aam
push
cld
dec
std
sub
dec
push
stos
(bad)
icebp
jmp
(bad)
clc
imul
(bad)
(bad)
(bad)
push
pop
xchg
add
ja
arpl
mov
js
and
mov
hlt
xor
pop
sbb
pop
inc
(bad)
(bad)
(bad)
(bad)
cmp
push
mov
sub
mov
jbe
ret
or
gs
or
xchg
loop
(bad)
call
test
xchg
add
jmp
shl
leave
cwde
int3
add
jnp
(bad)
(bad)
jmp
mov
daa
cmp
pop
push
repnz
movs
or
call
ret
(bad)
pop
nop
jo
(bad)
xchg
and
pushf
shl
inc
jmp
sbb
mov
iret
lods
sub
dec
mov
mov
lds
(bad)
(bad)
(bad)
dec
xor
mov
jecxz
mov
pop
cmc
cmp
mov
push
jo
jecxz
inc
popa
loop
out
clc
(bad)
call
push
xchg
ja
inc
lea
mov
jae
in
mov
aam
(bad)
mov
loopne
aas
xor
and
jle
aam
scas
inc
shl
and
loope
(bad)
jg
cmps
mov
test
(bad)
cmp
imul
jae
cmp
(bad)
fadd
xor
cmp
(bad)
lods
add
mov
and
int3
sar
(bad)
(bad)
(bad)
jmp
pminub
test
adc
pop
jbe
cmp
fidiv
pusha
fcom
test
lods
popa
cld
cmp
dec
inc
aas
nop
adc
(bad)
(bad)
loopne
addr16
add
(bad)
cmp
xor
sti
test
or
(bad)
sub
fcomip
(bad)
dec
daa
and
cmp
xor
add
xchg
inc
dec
adc
pop
sub
(bad)
mov
push
xchg
cwde
adc
scas
stos
jge
or
imul
mov
push
xchg
(bad)
(bad)
(bad)
dec
dec
or
shl
lea
inc
call
dec
pop
test
imul
push
enter
stos
leave
mov
pushf
inc
sbb
mov
xchg
and
fdivr
(bad)
(bad)
(bad)
call
cmp
sub
xchg
call
(bad)
retf
xchg
out
cwde
outs
imul
cmp
xchg
data16
pop
out
sub
sti
push
jmp
movs
mov
(bad)
(bad)
jmp
mov
add
call
adc
gs
sub
loope
cmp
push
cld
inc
pop
cmps
aaa
sub
adc
aad
or
adc
cmp
cli
test
jb
mov
pop
loopne
test
adc
jecxz
jo
push
pop
cmp
adc
xchg
mov
mov
xor
cpuid
jae
(bad)
push
(bad)
(bad)
jg
pusha
call
test
mov
inc
fsubr
jns
mov
(bad)
jmp
cmp
add
add
sub
aaa
add
sbb
and
xchg
pop
mov
dec
mov
out
cli
inc
mov
mov
jno
out
xor
pop
cld
(bad)
in
shl
test
dec
push
out
mov
out
dec
push
and
dec
add
sbb
(bad)
(bad)
jmp
retf
pop
fsub
leave
xchg
mov
sahf
iret
inc
call
sbb
(bad)
mov
clc
icebp
or
push
cwde
imul
add
or
(bad)
(bad)
(bad)
call
das
out
push
mov
iret
popf
mov
push
fild
dec
rcl
xchg
adc
jg
(bad)
dec
push
or
fs
sbb
dec
add
pop
popa
lds
push
(bad)
push
push
xchg
scas
mov
lea
(bad)
(bad)
mov
inc
sub
js
add
outs
nop
ja
adc
inc
and
and
jge
outs
mov
das
lea
and
(bad)
inc
out
adc
add
push
sti
test
int
retf
sbb
push
or
(bad)
out
(bad)
fcmovnb
and
pushf
inc
cs
push
popf
repnz
sub
(bad)
(bad)
push
cmp
mov
out
inc
outs
rcr
adc
mov
pusha
sbb
(bad)
(bad)
(bad)
dec
pop
sbb
jmp
jmp
push
pushf
mov
bt
cmc
jg
clc
(bad)
jmp
adc
es
sub
sub
or
pop
dec
call
or
lock
mov
and
sar
leave
mov
enter
(bad)
(bad)
call
cli
lods
jp
ret
jb
push
fisttp
cmp
sub
enter
push
jmp
adc
imul
or
push
movs
jp
cwde
jns
loop
push
imul
(bad)
call
test
push
(bad)
aas
pop
mov
mov
js
lahf
xlat
dec
add
stc
js
sbb
lds
lock
int3
mov
sub
(bad)
(bad)
call
or
push
ror
jle
aas
xlat
scas
retf
(bad)
pop
xor
pop
aaa
cmp
mov
xchg
jmp
cmp
inc
or
xor
lea
test
mov
pop
rcr
fnstcw
sbb
mov
dec
add
push
dec
push
outs
inc
adc
(bad)
(bad)
mov
pop
into
push
push
call
mov
pop
stos
or
daa
and
(bad)
(bad)
(bad)
(bad)
mov
in
jp
in
gs
loop
fmul
or
cmp
cmp
fbld
xor
sub
movs
sub
or
movs
ins
cmp
fcomip
fisub
push
sbb
xchg
in
sub
mov
mov
repz
and
shl
sbb
fs
dec
cmp
push
das
adc
popf
inc
fdivrp
jg
jmp
ja
adc
mov
mov
not
call
jbe
xor
pop
(bad)
push
call
xor
loope
fld
jp
or
shr
pop
mul
xchg
cmp
sbb
or
in
rcl
xchg
sub
push
sti
push
jle
ins
add
xchg
or
(bad)
mov
ja
retf
sub
pop
lds
add
xchg
pop
cld
dec
jp
add
xor
leave
lock
add
lock
xchg
(bad)
(bad)
(bad)
cld
jne
stos
in
dec
repz
imul
and
adc
les
or
jae
dec
fst
fs
jg
imul
lahf
ins
xor
pop
into
in
std
and
loopne
(bad)
(bad)
jg
xor
mov
dec
test
inc
jg
aad
aaa
mov
stos
shl
je
inc
mov
(bad)
(bad)
jmp
stos
repnz
push
hlt
inc
xor
je
inc
arpl
hlt
dec
rcl
xor
stc
stos
sahf
icebp
(bad)
(bad)
(bad)
jmp
repnz
fbstp
jb
mov
mul
rcl
sub
jp
daa
(bad)
(bad)
(bad)
jmp
arpl
pop
lods
pushw
dec
mov
push
fisub
add
add
(bad)
jg
xor
mov
loop
stos
mov
mov
sub
cdq
jg
or
xchg
das
xchg
leave
fisub
les
(bad)
(bad)
in
call
in
pop
fisub
fcom
lods
adc
add
ss
inc
jecxz
mov
jo
mov
cwde
cwde
adc
mov
(bad)
(bad)
(bad)
jg
iret
test
mov
push
out
adc
pop
adc
(bad)
movs
push
(bad)
(bad)
(bad)
jl
push
call
stos
cmp
mov
mov
sub
ss
fbstp
or
inc
sub
lods
mov
xchg
in
stos
xchg
cmp
icebp
sahf
xchg
ffree
push
pop
push
(bad)
jmp
pop
out
add
cmp
jo
pop
ja
(bad)
(bad)
mov
jecxz
test
mov
push
dec
mov
out
iret
movs
push
xchg
add
push
aad
(bad)
(bad)
dec
arpl
push
push
jmp
arpl
addr16
jmp
and
push
pop
or
aas
and
(bad)
(bad)
push
mov
xor
maxps
test
ins
out
pop
add
inc
fsubr
pusha
idiv
(bad)
jmp
inc
lods
bound
dec
jge
xchg
into
push
push
cmp
sbb
popf
fisub
(bad)
push
mov
mov
(bad)
outs
cmps
mov
xchg
cmps
outs
mov
jp
push
pop
(bad)
(bad)
(bad)
inc
and
(bad)
ror
aam
add
mov
outs
jbe
inc
mov
mov
sbb
aam
(bad)
(bad)
inc
xor
sbb
mov
cmp
and
lea
jnp
inc
push
mov
(bad)
(bad)
dec
scas
int
or
lds
aad
mov
shld
(bad)
(bad)
call
jmp
xor
lods
test
jae
aaa
movs
and
jg
add
test
pop
ret
nop
push
retf
out
jecxz
mov
in
adc
popa
jmp
(bad)
fistp
mov
cmp
jnp
fsubr
(bad)
fidivr
mov
(bad)
jmp
and
push
dec
ja
or
jmp
ss
(bad)
(bad)
(bad)
dec
and
xor
or
add
sub
test
addr16
(bad)
(bad)
(bad)
cmp
mov
and
sub
sub
movs
(bad)
jae
xchg
push
pop
jae
(bad)
js
(bad)
dec
mov
pop
fisub
jnp
adc
sbb
repz
xlat
pop
(bad)
popf
std
aam
(bad)
(bad)
call
push
scas
mov
pusha
xchg
dec
iret
push
mov
je
ret
in
in
mov
adc
(bad)
(bad)
push
jns
repnz
sub
and
aam
push
movs
out
enter
mov
(bad)
(bad)
call
mov
aas
into
mov
out
inc
retf
js
call
fs
sbb
out
jmp
ja
jg
push
loope
and
clc
jae
push
mov
retf
mov
cmps
adc
jno
test
(bad)
call
(bad)
xchg
aaa
push
mov
test
jp
call
in
add
lock
(bad)
clc
xor
call
loopne
fnstcw
jns
push
sbb
sub
mov
cmc
or
(bad)
mov
xor
jge
dec
or
push
data16
cmp
(bad)
inc
movs
test
int
iret
inc
push
pop
sub
add
inc
add
das
jne
mov
jmp
call
mov
inc
mov
ret
inc
cmps
sub
imul
(bad)
(bad)
call
dec
call
pop
jo
xor
xor
cwde
aad
test
mov
pop
xchg
(bad)
(bad)
inc
daa
int3
push
inc
fs
adc
mov
cmp
mov
loop
stos
sbb
(bad)
and
sar
fst
sub
fistp
(bad)
(bad)
dec
xchg
popf
xchg
dec
nop
(bad)
cmp
je
add
inc
cmp
mov
and
(bad)
(bad)
(bad)
call
xor
in
fs
jns
push
pop
adc
loop
sub
inc
out
push
(bad)
jg
jmp
cld
test
dec
sbb
cmp
outs
inc
mov
out
adc
add
push
(bad)
(bad)
(bad)
cmp
nop
cs
sar
sub
jbe
or
dec
xor
mov
(bad)
(bad)
call
xchg
pop
add
mov
and
out
fisubr
mov
into
jb
ret
xchg
push
(bad)
(bad)
(bad)
dec
or
dec
jno
rcl
repz
pop
hlt
test
or
mov
enter
mov
inc
mov
std
push
inc
mov
sub
pop
add
push
pop
scas
(bad)
sub
mov
or
aam
popa
mov
in
or
cs
js
(bad)
mov
push
pop
fst
outs
pop
cmp
jle
mov
adc
mov
and
mov
add
repnz
enter
jne
mov
pop
aad
mov
(bad)
inc
dec
ins
test
or
xchg
sbb
int3
add
push
(bad)
out
push
icebp
cmp
pop
mov
pop
sub
jge
add
jp
call
or
out
cmp
rcr
retf
(bad)
aaa
cmc
fldln2
imul
lock
ins
test
adc
sub
(bad)
mov
pushf
mov
adc
jbe
in
and
(bad)
(bad)
jmp
push
push
mov
jnp
jecxz
mov
mov
pop
sub
hlt
pop
call
in
aas
fisubr
pop
div
push
in
rcl
shl
sbb
push
(bad)
aaa
movs
test
push
rcl
push
mov
(bad)
(bad)
call
push
jle
mov
data16
push
jae
(bad)
jns
es
enter
clc
cmc
(bad)
(bad)
jmp
(bad)
div
xor
bound
jbe
sub
cli
div
into
je
scas
out
adc
(bad)
(bad)
call
sbb
aaa
add
hlt
xchg
test
cmp
jnp
mov
gs
rcl
stc
mov
rcr
push
icebp
ror
push
mov
ins
gs
repnz
(bad)
mov
aad
fst
fld
in
cmp
mov
add
loop
dec
(bad)
(bad)
(bad)
inc
mov
and
or
jno
sub
shl
mov
sbb
call
(bad)
(bad)
jmp
lahf
push
cmp
sbb
cmc
daa
fbstp
xchg
in
dec
rol
ret
(bad)
(bad)
dec
sar
leave
ins
pop
daa
pushf
int3
mov
sbb
bound
int
ja
add
imul
(bad)
(bad)
jg
ret
cmp
mov
or
mov
dec
cmp
pop
ins
add
cli
call
or
xor
jbe
mul
mov
mov
fcos
(bad)
(bad)
call
mov
or
cmps
out
mov
(bad)
ds
aam
or
cmp
mov
fcomp
dec
fcmove
shl
inc
(bad)
pop
mov
xchg
(bad)
(bad)
inc
xchg
mov
hlt
dec
inc
push
cld
mov
mov
mov
outs
adc
(bad)
(bad)
jmp
hlt
stc
adc
clc
mov
mov
mov
xchg
and
pop
jecxz
mov
sahf
sub
(bad)
mov
test
scas
sbb
xor
jle
in
(bad)
lahf
xchg
gs
loopne
int3
(bad)
(bad)
(bad)
(bad)
call
das
retf
cmp
jle
cmp
cld
inc
xchg
test
jge
push
xchg
shr
(bad)
(bad)
out
clc
fnstsw
fnsave
retf
push
pop
mov
pop
cmp
jae
call
push
in
popa
pop
out
push
jne
das
shl
nop
ins
xchg
(bad)
push
mov
pusha
dec
xchg
jae
int
push
and
iret
aaa
cmp
imul
(bad)
(bad)
(bad)
aas
jmp
xchg
fsub
mov
adc
dec
dec
push
jg
sbb
aaa
arpl
pop
cmp
in
mov
dec
(bad)
(bad)
(bad)
jmp
jmp
std
mov
push
mov
xor
cmc
imul
and
lea
xor
imul
dec
test
imul
adc
cmp
dec
stos
mov
ss
loope
pop
loopne
std
and
inc
xor
jbe
es
pop
inc
in
(bad)
(bad)
(bad)
inc
or
dec
cmp
sti
addr16
and
and
mov
xor
bound
test
call
mov
(bad)
inc
(bad)
(bad)
(bad)
fild
outs
nop
add
in
sbb
mov
call
mov
(bad)
(bad)
(bad)
jp
out
xchg
cmc
mov
mov
(bad)
repz
mov
test
cmp
fmul
mov
or
add
fs
lods
jmp
xchg
loopne
and
jle
cdq
pop
cli
mov
and
mov
pop
cmp
or
stc
push
xchg
lods
xchg
jbe
and
call
pop
pop
mov
inc
push
sbb
iret
aas
ins
sbb
ss
adc
shl
(bad)
jmp
dec
xchg
xchg
cmp
lahf
inc
sbb
fs
cdq
cmps
sbb
lea
scas
cmp
push
(bad)
(bad)
stos
push
mov
mov
stc
adc
push
inc
or
xor
(bad)
(bad)
jmp
inc
xchg
push
add
jbe
mov
mov
stos
xlat
clc
xchg
mov
(bad)
(bad)
(bad)
mov
sbb
outs
mov
adc
dec
jle
outs
dec
fsubr
mov
xor
(bad)
(bad)
(bad)
call
push
jne
sbb
fnstenv
jg
and
and
rcl
dec
dec
cmp
(bad)
mov
stos
inc
icebp
rol
jno
shr
pop
call
fxch
test
std
(bad)
jg
(bad)
sub
popa
push
or
ss
jl
xlat
mov
(bad)
popa
push
xchg
dec
aaa
std
mov
push
push
mov
pop
cmp
pop
and
movs
pop
ds
imul
or
call
stos
in
imul
pop
ror
fisttp
push
cmp
jp
mov
xchg
sub
jae
retf
(bad)
jg
ss
call
ja
sbb
call
and
aaa
(bad)
(bad)
(bad)
push
cmp
es
mov
and
push
repz
pop
call
or
mov
pushf
inc
enter
in
fcmove
add
and
inc
pop
jp
aad
dec
push
(bad)
cs
mov
sub
(bad)
(bad)
call
xor
add
add
sbb
(bad)
dec
xchg
inc
sti
mov
add
(bad)
push
repz
push
ss
aam
fwait
jg
in
mov
add
cdq
shufps
(bad)
jg
or
rol
mov
idiv
(bad)
(bad)
call
lods
in
pusha
mov
sbb
mov
cmp
push
mov
mov
inc
in
xchg
sub
jbe
xor
lods
mov
fisub
dec
fild
or
push
popf
pop
rcl
call
xor
cmp
inc
popa
inc
mov
(bad)
(bad)
jmp
and
sahf
mov
bound
push
stc
movs
(bad)
daa
xor
dec
inc
push
cmp
ret
sbb
int
inc
loope
push
pop
call
out
ss
xchg
xor
mov
jmp
pop
aas
rcl
jo
cmp
(bad)
(bad)
jmp
sbb
mov
dec
mov
stos
add
dec
inc
push
push
pop
imul
(bad)
(bad)
(bad)
dec
fild
leave
xor
mov
enter
lds
sti
dec
outs
call
cli
lds
loopne
jmp
int
inc
push
push
es
and
xor
daa
ret
mov
(bad)
push
call
xor
push
push
mov
lea
ins
cld
jbe
and
jo
mov
pop
push
xor
stos
jbe
stc
adc
out
xchg
stos
cmp
(bad)
fcomip
sub
cs
dec
sub
sbb
fld
popa
std
repz
xor
mov
xor
push
inc
test
popa
addr16
jno
dec
rcl
ret
enter
mov
(bad)
(bad)
jmp
adc
call
jecxz
adc
xor
push
imul
adc
rol
dec
dec
sub
dec
in
pop
jg
or
mov
add
dec
adc
fwait
(bad)
(bad)
(bad)
fstp
lds
mov
pushf
adc
jae
nop
pop
ins
xchg
xchg
pop
(bad)
(bad)
(bad)
(bad)
mov
repnz
dec
xchg
mov
pop
mov
mov
or
dec
and
aas
clc
(bad)
(bad)
inc
fisub
shl
dec
mov
cmps
mov
add
ds
adc
aam
loop
(bad)
inc
fs
xor
dec
pop
cmp
fnstenv
adc
pop
or
push
or
(bad)
(bad)
call
mov
push
pop
les
call
(bad)
mov
add
mov
call
mov
jns
loopne
retf
fmul
popa
mov
jg
cmp
out
icebp
test
jnp
add
mov
add
nop
xlat
xor
(bad)
(bad)
(bad)
cmp
push
js
imul
int3
xchg
lods
jp
push
shl
adc
jg
lea
xchg
retf
xchg
mov
outs
pop
pop
push
(bad)
(bad)
(bad)
fndisi(8087
ja
or
sbb
jl
and
cs
aaa
das
cmp
(bad)
(bad)
(bad)
jmp
xor
les
mov
mov
mov
add
jle
cwde
loope
mov
ja
mov
cdq
push
sahf
and
sub
int
fistp
aas
ds
pop
stos
data16
cs
movs
or
inc
jns
sahf
xor
sbb
xchg
rcl
stc
ret
xchg
jl
ret
test
(bad)
(bad)
call
aam
or
mov
mov
ret
ds
inc
and
mov
nop
pop
pop
sahf
(bad)
sub
mov
(bad)
(bad)
jmp
pop
sub
mov
sbb
dec
std
pop
retf
sbb
call
(bad)
cmp
ins
mov
in
je
pusha
xor
xlat
mov
cdq
or
fcomip
inc
add
jne
push
mov
mov
(bad)
(bad)
(bad)
jmp
mov
jb
movs
hlt
jmp
clc
xor
das
pusha
enter
mov
pop
push
add
jmp
mov
sbb
and
mov
dec
pusha
imul
rcr
inc
enter
inc
xchg
mov
outs
mov
mov
push
and
(bad)
dec
ss
jp
clc
push
push
push
daa
mov
and
or
and
out
cmp
dec
fcomip
call
push
dec
sub
sbb
mov
(bad)
call
retf
das
or
dec
dec
cmp
push
loope
cmp
pop
mov
test
cmc
lahf
mov
ror
call
inc
xchg
push
arpl
sar
sbb
pop
and
mov
or
gs
sub
mov
sub
dec
xchg
outs
add
mov
mov
(bad)
(bad)
inc
mov
mov
mov
call
sub
lock
xor
in
lahf
dec
(bad)
(bad)
cmp
ds
inc
adc
push
xchg
(bad)
push
cmp
jmp
(bad)
push
(bad)
jbe
dec
lea
mov
fld
pop
dec
fwait
sbb
fucomi
popf
jae
sub
xor
xor
and
sub
(bad)
ds
jmp
fcomp
or
in
adc
shl
loopne
es
and
std
(bad)
inc
inc
add
enter
adc
cmp
retf
and
cmp
(bad)
stc
inc
cmps
stos
push
loopne
(bad)
leave
cld
ds
pop
or
or
int3
repz
(bad)
(bad)
(bad)
jmp
jecxz
rcr
test
std
inc
es
loope
xor
ret
in
pop
sti
jmp
ja
clc
jmp
add
sbb
sbb
jmp
xor
pop
mov
inc
adc
push
dec
test
cld
outs
pop
xor
xchg
(bad)
(bad)
(bad)
jmp
movs
lods
mov
loop
clc
call
or
mov
cmp
xor
mov
cs
(bad)
(bad)
(bad)
in
cli
dec
cmps
and
dec
mov
stc
aaa
(bad)
out
fimul
jg
adc
(bad)
(bad)
(bad)
push
pop
lahf
pop
jmp
sbb
fisubr
pop
xor
adc
(bad)
(bad)
call
imul
mov
mov
cmp
mov
ds
cmp
scas
push
mov
sub
(bad)
(bad)
jg
fstp
jmp
repnz
push
daa
movs
inc
in
and
fld
sti
dec
(bad)
(bad)
call
ins
pop
ins
lahf
je
pop
adc
fdiv
jle
movs
in
add
(bad)
(bad)
(bad)
sti
xchg
jl
repnz
out
popa
stos
cmp
push
dec
cmovae
fadd
add
push
(bad)
or
jge
push
aas
sub
dec
push
inc
or
dec
cmp
test
scas
bound
aaa
fistp
push
stos
jg
add
(bad)
(bad)
push
leave
lsl
push
cmp
push
push
and
dec
jge
adc
push
mov
(bad)
(bad)
(bad)
jg
popa
enter
gs
stos
add
inc
stc
sahf
pop
pop
iret
inc
push
inc
test
cs
(bad)
(bad)
dec
dec
rol
adc
push
or
pop
cmp
cmp
lahf
or
pop
pop
push
push
(bad)
(bad)
(bad)
inc
bound
mov
icebp
sub
mov
mov
mov
xor
imul
pop
push
and
sbb
stc
push
test
(bad)
(bad)
(bad)
(bad)
cmp
mov
movs
mov
mov
xor
rcl
and
and
(bad)
(bad)
mov
push
xor
and
aad
fwait
inc
vpcmpeqd
push
lds
out
lods
(bad)
(bad)
(bad)
dec
jl
cmp
sbb
movs
adc
push
mov
data16
inc
sbb
push
std
(bad)
jnp
lea
jl
lea
lods
call
lock
sub
(bad)
(bad)
inc
arpl
clc
or
mov
ins
out
fstp
scas
fs
scas
lea
mov
(bad)
(bad)
call
inc
popf
arpl
aas
cs
nop
add
mov
push
(bad)
fcmovnu
or
pop
xor
push
(bad)
(bad)
(bad)
inc
ret
movs
imul
add
scas
cmc
inc
inc
dec
popf
fs
cmp
xor
(bad)
(bad)
inc
lea
sti
shl
mov
xchg
dec
xchg
inc
jb
(bad)
out
dec
cli
hlt
xor
xor
sbb
(bad)
(bad)
(bad)
stc
movs
push
lea
sahf
out
and
jb
(bad)
pop
and
retf
outs
pop
sbb
das
cli
(bad)
dec
inc
or
stos
and
inc
dec
adc
jno
mov
mov
(bad)
jmp
test
pop
loop
rcl
sub
pop
adc
lahf
mov
dec
(bad)
xchg
mov
(bad)
call
cld
sahf
xor
int3
and
or
jmp
sbb
jmp
and
aam
cmp
lahf
push
loop
adc
add
movs
mov
and
pop
shl
loope
cmp
arpl
scas
cli
(bad)
dec
ret
mov
inc
or
sub
and
inc
mov
cmc
imul
sbb
add
pop
ds
xlat
xor
outs
call
jmp
sbb
rcr
aaa
rcr
cmps
sbb
aam
fmul
sbb
data16
(bad)
dec
ins
test
repz
jb
jno
or
fisttp
div
(bad)
(bad)
(bad)
dec
outs
out
sbb
inc
mov
or
xchg
lods
dec
arpl
ficom
mov
push
mov
cmp
sti
sti
test
and
mov
mov
call
inc
pushf
xor
sbb
and
sahf
(bad)
push
fcmovne
ret
jne
push
push
pop
outs
(bad)
(bad)
(bad)
jmp
lock
test
gs
jo
xor
shl
cdq
inc
dec
out
call
push
lahf
movs
(bad)
(bad)
(bad)
jmp
mov
and
ja
mov
fnsave
mov
or
add
push
fidivr
push
jnp
(bad)
jmp
or
pause
fsubr
sbb
mov
xchg
pop
sub
dec
out
ja
xchg
(bad)
hlt
fsubrp
lods
or
rol
fdivrp
(bad)
(bad)
inc
das
stos
int3
out
outs
mov
sbb
sbb
popa
into
push
cmps
xchg
cmc
dec
rcr
inc
pop
mov
and
fcomip
add
retf
xchg
jb
(bad)
nop
jmp
cs
(bad)
(bad)
(bad)
call
movs
outs
lods
pop
lea
repnz
jle
test
int3
or
xchg
push
ss
dec
int
add
mov
das
retf
(bad)
rol
ins
push
(bad)
(bad)
(bad)
inc
ret
push
or
and
ror
jnp
fistp
loopne
(bad)
out
(bad)
(bad)
(bad)
dec
mov
mov
out
data16
xor
dec
popa
adc
repz
(bad)
(bad)
(bad)
call
lds
mov
test
sbb
mov
(bad)
aam
dec
out
jae
retf
mov
fcom
out
xor
popa
dec
mov
(bad)
retf
inc
idiv
jae
or
fimul
xchg
call
loope
es
test
mov
cmc
mov
stos
hlt
mov
adc
imul
cli
repz
mov
cmp
xchg
adc
or
(bad)
(bad)
(bad)
jmp
inc
fs
ds
jmp
xchg
nop
jge
ret
mov
call
pop
mov
mov
pop
fisttp
xchg
shl
pusha
ins
call
ficomp
jl
in
mov
mov
pusha
pop
adc
das
out
das
mov
int
(bad)
(bad)
jmp
daa
rol
arpl
das
outs
sub
std
inc
pop
sbb
sub
fisttp
leave
xchg
inc
adc
mov
test
push
pop
sub
cld
jmp
mov
js
dec
or
dec
adc
mov
aaa
fadd
or
xor
jmp
mov
ins
lds
sub
hlt
movs
jp
mov
dec
(bad)
mov
(bad)
std
jmp
int3
inc
(bad)
sub
push
inc
dec
mov
test
inc
mov
shl
push
xor
adc
cmp
xor
stc
jo
nop
sub
dec
in
mov
jno
jnp
and
inc
ds
loop
(bad)
(bad)
(bad)
jmp
loope
popa
inc
and
jle
push
leave
jne
jne
cmp
out
jge
out
xchg
adc
or
add
call
ret
xor
push
or
rcl
stc
in
lock
mov
(bad)
(bad)
jmp
pop
jle
test
pop
retf
cld
xchg
mov
jbe
fcos
aaa
jl
and
repnz
(bad)
stc
(bad)
(bad)
(bad)
jmp
xchg
lods
mov
das
movs
mov
pop
jbe
push
push
into
inc
dec
jns
push
mov
(bad)
jmp
mov
push
retf
repnz
test
push
(bad)
das
inc
pop
and
mov
retf
lock
scas
mov
cmps
loopne
or
imul
(bad)
sbb
(bad)
dec
lock
lods
xchg
int
not
dec
(bad)
cmp
xchg
push
xor
cmp
xchg
(bad)
fmul
push
pop
adc
xor
dec
add
pushf
or
(bad)
(bad)
(bad)
jmp
push
lea
(bad)
icebp
leave
(bad)
mov
mov
mov
jg
gs
popa
(bad)
dec
mov
adc
lds
mov
out
sbb
(bad)
(bad)
(bad)
call
inc
sub
ds
mov
call
aas
pop
(bad)
mov
jmp
cmc
ins
push
inc
mov
mov
gs
xlat
dec
outs
loopne
xchg
(bad)
jmp
test
pop
movs
and
out
xlat
shr
int
in
mov
jmp
(bad)
stc
jno
sbb
pop
pop
mov
mov
(bad)
(bad)
dec
push
xor
js
sahf
cmp
inc
sti
add
sub
dec
sar
add
dec
iret
xor
push
mov
(bad)
(bad)
dec
mov
retf
xor
cmp
repz
retf
bound
out
ror
call
fdivrp
jmp
inc
dec
mov
mov
add
cs
jmp
test
mov
aas
(bad)
(bad)
(bad)
jmp
int3
test
loopne
aaa
pop
ret
xor
or
cmp
mov
call
clc
scas
clc
cmp
mov
out
mov
repz
lods
outs
cli
(bad)
push
push
pop
sub
cld
push
fadd
sar
sub
pop
call
stc
cmps
lods
sbb
(bad)
(bad)
(bad)
(bad)
jg
mov
dec
mov
clc
jo
popa
jg
loop
adc
inc
sub
cmp
jae
retf
or
(bad)
inc
or
cli
push
lods
mov
jne
lds
cmp
xchg
mov
loopne
outs
pop
mov
fstp
add
scas
das
repz
(bad)
(bad)
jmp
pop
daa
and
popf
test
aam
mov
cmp
dec
call
sub
imul
ficomp
or
mov
jmp
jg
jmp
iret
paddq
fcomp
call
xor
call
rcl
repnz
inc
movs
jg
adc
jp
je
mov
add
mov
or
adc
adc
add
mov
retf
mov
mov
xchg
adc
ins
or
mov
cmps
xchg
idiv
imul
inc
call
cmp
imul
(bad)
mov
jmp
data16
pop
push
int3
lods
(bad)
test
mov
(bad)
(bad)
(bad)
dec
mul
mov
stc
cs
mov
cmp
adc
call
inc
add
xor
lea
test
aaa
or
fsub
adc
lahf
mov
aaa
call
(bad)
(bad)
(bad)
jmp
sub
rcr
or
xor
pop
aad
popf
xor
in
and
mov
pop
xor
(bad)
call
scas
cmps
ins
fmul
dec
jns
jmp
inc
sub
pop
sub
aaa
hlt
inc
imul
in
lds
inc
xchg
mov
(bad)
jmp
ror
mov
sbb
clc
mov
test
hlt
stos
jo
and
aam
adc
(bad)
(bad)
(bad)
call
sahf
add
xchg
xchg
dec
sub
aad
cld
xlat
(bad)
mov
pop
cmps
call
cdq
push
and
jmp
clc
pop
loop
aam
mov
repz
xlat
adc
test
call
mov
fisttp
test
adc
aaa
dec
int
pop
jae
loop
jmp
clc
and
xchg
pop
push
xor
sbb
dec
push
and
inc
sub
dec
cmp
adc
(bad)
(bad)
inc
mov
adc
int
dec
out
movs
out
sbb
ja
test
sbb
(bad)
(bad)
(bad)
jns
out
push
mov
jno
sbb
pushf
call
push
xor
ror
(bad)
(bad)
(bad)
(bad)
jp
adc
pop
mov
adc
inc
je
js
dec
jmp
push
push
hlt
loopne
or
and
(bad)
(bad)
mov
mul
inc
mov
or
je
(bad)
into
jmp
pop
jecxz
or
lods
(bad)
(bad)
(bad)
push
inc
dec
(bad)
dec
adc
in
inc
sbb
jg
retf
outs
retf
push
fiadd
(bad)
(bad)
(bad)
(bad)
jmp
xchg
nop
enter
jb
pop
shl
pop
popf
and
and
xchg
mov
call
push
inc
inc
mov
(bad)
jg
les
sub
sbb
dec
pop
test
sbb
cmps
(bad)
(bad)
(bad)
fstp
test
mov
jecxz
sahf
popf
cld
mov
std
int
(bad)
hlt
jp
call
(bad)
jnp
pop
scas
shl
inc
ins
mov
xchg
pop
in
inc
sub
mov
xchg
mov
or
hlt
mov
cld
(bad)
jmp
dec
fwait
pushf
out
inc
cmp
sbb
push
inc
cmps
jmp
test
(bad)
jmp
inc
addr16
inc
push
xor
inc
bound
addr16
adc
sti
push
dec
les
gs
retf
dec
dec
scas
jecxz
adc
xor
in
aad
(bad)
call
(bad)
out
pop
hlt
sub
mov
sub
push
bound
dec
addr16
(bad)
jg
lods
pushf
push
push
loop
cmps
jns
cdq
push
mov
jns
arpl
(bad)
call
test
push
je
pop
mov
arpl
out
push
aas
cmp
aaa
scas
ror
out
add
retf
addr16
(bad)
jmp
pop
pop
int
daa
mov
push
out
xor
mov
pop
in
(bad)
(bad)
jmp
and
test
sub
pop
and
xor
sbb
sbb
(bad)
push
(bad)
dec
js
pop
or
aad
jmp
and
retf
xlat
(bad)
(bad)
(bad)
dec
xchg
cmp
fbstp
jne
jmp
xor
repnz
rcr
xchg
push
outs
pop
xchg
cmp
mov
inc
in
push
mov
inc
push
aad
cmp
(bad)
(bad)
(bad)
(bad)
fld
rcr
fwait
out
add
lahf
leave
std
push
add
add
sti
and
jae
(bad)
(bad)
(bad)
jle
out
cmp
mov
push
mov
in
and
adc
sar
loopne
iret
mov
(bad)
(bad)
(bad)
inc
test
aam
lea
sub
pop
sahf
push
call
pop
push
test
inc
mov
adc
add
(bad)
(bad)
(bad)
(bad)
js
mov
push
repnz
push
fdiv
pop
fsubp
dec
sbb
jnp
leave
mov
pushf
mov
sub
jmp
aam
int3
sti
push
(bad)
(bad)
(bad)
jmp
scas
xchg
mov
dec
pop
adc
adc
mov
retf
mov
add
dec
rcl
inc
popf
hlt
sub
(bad)
mov
xor
push
hlt
(bad)
(bad)
(bad)
fdiv
dec
fisub
xchg
xor
(bad)
fild
mov
jae
sub
mov
mov
adc
sbb
sub
(bad)
(bad)
jmp
xchg
outs
dec
popa
adc
frstor
in
sbb
sbb
xlat
xchg
inc
mov
xor
jmp
fs
in
push
pop
cmp
jne
dec
movs
daa
sti
sti
or
cmp
leave
ss
xchg
(bad)
(bad)
(bad)
jl
mov
mov
icebp
cdq
push
out
loopne
add
movs
push
pop
iret
xchg
std
mov
(bad)
(bad)
(bad)
jmp
adc
(bad)
(bad)
mov
fist
mov
fimul
sbb
xlat
push
ins
jbe
xchg
(bad)
(bad)
(bad)
dec
xchg
int
add
movs
popf
mov
xchg
sub
push
sbb
add
(bad)
mov
push
push
cmp
icebp
dec
rcr
pop
rol
out
or
push
in
cmc
popa
outs
mov
add
scas
and
adc
mov
je
xchg
sbb
xchg
inc
push
xchg
pop
inc
iret
cmp
bound
nop
(bad)
(bad)
(bad)
(bad)
(bad)
jns
xlat
std
scas
sbb
push
jg
mov
cwde
jns
add
push
xor
jl
hlt
mov
adc
cli
pop
lock
inc
push
cli
(bad)
in
or
aaa
inc
mov
lock
clc
(bad)
(bad)
(bad)
jnp
loope
cwde
daa
push
movs
adc
xchg
pop
dec
xor
pop
jbe
sahf
push
or
(bad)
(bad)
out
adc
xor
sbb
adc
test
mov
mov
mul
push
repz
movs
(bad)
(bad)
(bad)
call
dec
sub
fdivr
push
cli
enter
iretw
pop
retf
inc
fist
lahf
jno
xor
(bad)
(bad)
call
xor
fimul
loope
push
adc
mov
int
dec
bound
(bad)
(bad)
jmp
fldcw
pop
or
iret
sub
sar
push
sahf
scas
mov
cmp
loop
or
aad
or
xchg
ins
push
inc
dec
pop
dec
js
push
(bad)
(bad)
mov
push
or
sub
push
les
(bad)
addr16
lock
(bad)
pop
cs
cmp
jmp
cs
sbb
enter
push
cmp
cs
imul
shr
rol
xchg
push
mov
(bad)
(bad)
mov
add
inc
call
jg
or
jo
pop
daa
imul
mov
js
ins
(bad)
(bad)
(bad)
jmp
xor
pusha
add
outs
sbb
and
xor
retf
out
lods
(bad)
or
(bad)
(bad)
dec
push
xchg
mov
push
mov
cmp
or
sub
arpl
lea
inc
and
push
xor
push
mov
or
mov
mov
daa
cmp
dec
std
in
shl
xchg
add
(bad)
mov
sbb
test
aam
(bad)
(bad)
(bad)
push
add
jne
out
sbb
rcl
lods
fmul
adc
cmp
cmp
into
repnz
das
cmp
sbb
pop
mov
xlat
jae
mov
(bad)
(bad)
xchg
jle
es
(bad)
push
mov
sbb
mov
aad
inc
jno
cld
outs
sbb
fwait
pusha
lea
and
(bad)
(bad)
call
ffreep
sub
arpl
push
das
xchg
cmp
jp
dec
mov
push
js
repnz
jmp
fstp
sub
or
mov
ror
lds
mov
or
jmp
and
push
pushf
arpl
inc
sub
(bad)
(bad)
(bad)
(bad)
fidiv
dec
push
fisttp
hlt
scas
call
rcr
sub
(bad)
(bad)
call
daa
pop
jno
outs
ret
xor
movs
sar
mov
in
dec
dec
adc
out
jl
cmp
lock
(bad)
inc
imul
daa
jecxz
push
push
aas
jge
std
jnp
dec
cwde
arpl
push
jmp
pop
test
test
mov
pop
movs
(bad)
inc
push
in
jo
fdivr
das
adc
test
(bad)
jmp
js
cld
dec
ins
ficomp
iret
retf
mov
pop
outs
pop
add
xor
pusha
test
bound
mov
aad
pop
pop
xchg
dec
je
pop
cmp
mov
(bad)
(bad)
(bad)
push
ja
outs
in
sbb
jno
mov
(bad)
into
or
dec
sar
cmp
dec
(bad)
js
test
push
or
test
xor
sbb
cmp
(bad)
(bad)
push
mov
stos
jae
(bad)
cmp
int
outs
sar
push
mov
test
(bad)
(bad)
push
push
cmp
push
sub
mov
ret
imul
(bad)
adc
jmp
xor
cli
inc
mov
sahf
sub
sbb
(bad)
(bad)
(bad)
jmp
mov
jle
lea
pop
ins
sub
out
sbb
push
jmp
cs
pop
les
(bad)
(bad)
jmp
xor
add
icebp
div
in
fidiv
scas
or
mov
scas
bound
ja
(bad)
call
cmp
push
push
ds
mov
enter
ins
adc
pop
push
mov
(bad)
inc
test
out
mov
inc
rcl
push
test
or
mov
adc
nop
stos
pop
xchg
inc
jp
pushf
cmps
sub
addr16
leave
ret
lods
enter
jne
dec
sbb
push
sub
pusha
outs
mov
inc
inc
or
out
les
cmps
adc
popa
sub
push
rol
jl
daa
test
ficom
adc
rcr
pushf
cmc
je
stos
fs
(bad)
(bad)
push
cmp
adc
sbb
sub
jmp
imul
call
sahf
outs
out
jmp
fwait
and
dec
adc
mov
cmps
imul
dec
inc
push
xchg
xor
fdivr
(bad)
(bad)
(bad)
jg
inc
add
fbld
std
sti
or
jno
repz
int
xchg
jle
inc
push
lods
pop
xchg
jmp
(bad)
fucomp
cmps
fwait
add
aas
or
cmp
adc
dec
push
daa
addr16
mov
(bad)
(bad)
(bad)
call
retf
cmp
mov
ret
movs
or
stos
xlat
inc
popf
hlt
jmp
ins
mov
sbb
(bad)
(bad)
call
xlat
clc
mov
mov
icebp
ror
mov
cmp
jg
(bad)
(bad)
jns
cmc
mov
dec
pusha
in
stos
out
cmps
sub
je
enter
(bad)
(bad)
(bad)
call
cdq
arpl
je
mov
mov
movs
lods
sub
or
aaa
sub
pop
adc
dec
push
dec
mov
mov
icebp
data16
leave
hlt
je
pop
clc
xlat
xchg
test
(bad)
(bad)
(bad)
call
xor
mov
xor
mov
clc
push
clc
leave
int
shl
(bad)
cli
or
cmp
cmp
jbe
data16
xchg
jg
sbb
(bad)
push
mov
jle
jl
jge
push
dec
fldpi
in
fisub
adc
mov
nop
xor
(bad)
(bad)
(bad)
(bad)
fist
sub
mov
jle
push
bt
mov
adc
(bad)
(bad)
inc
retf
xchg
jecxz
push
xor
fwait
cmp
out
or
aaa
cld
(bad)
push
jmp
mov
xchg
jmp
je
pop
fstp
ins
inc
shr
sub
std
and
(bad)
xlat
push
fs
xor
sub
and
das
ins
sbb
cmp
mov
(bad)
inc
sbb
jb
mov
mov
fs
std
test
adc
out
fidivr
bound
xor
fwait
mov
icebp
pop
frstpm(287
fnsavew
xchg
fbld
inc
xor
jg
jmp
mov
mov
mov
or
enter
xor
sti
icebp
stos
call
fwait
(bad)
call
xchg
mov
retf
(bad)
mov
mov
popa
out
imul
(bad)
dec
sbb
or
popf
imul
sub
push
add
shr
mov
cmp
inc
mov
inc
gs
jne
mov
int
jo
inc
xchg
xchg
(bad)
(bad)
jmp
adc
popf
or
pop
out
ja
cld
xchg
push
mov
lock
xchg
or
sbb
jg
(bad)
(bad)
jg
and
or
movzx
inc
bnd
sbb
(bad)
(bad)
jmp
inc
(bad)
lods
jecxz
sbb
jne
xchg
call
loopne
test
sbb
mov
cmp
and
cmp
call
bound
mov
push
mov
stos
test
(bad)
(bad)
(bad)
inc
or
jecxz
cmps
xor
les
push
cmp
or
cli
jmp
cwde
adc
push
shl
and
(bad)
call
sbb
cld
adc
mov
sar
xor
loop
sbb
jmp
xchg
(bad)
inc
push
mov
fcmovb
fldenv
sti
cmp
call
(bad)
(bad)
inc
inc
scas
dec
dec
cmc
adc
pop
mov
or
mov
pop
jmp
jno
(bad)
(bad)
call
xor
sbb
repz
inc
inc
stos
sahf
cli
retf
add
shl
(bad)
push
mov
lahf
inc
es
add
jns
xchg
mov
fcmovu
in
(bad)
ret
jo
adc
(bad)
(bad)
jmp
and
unpckhps
retf
and
add
sub
pop
(bad)
(bad)
jmp
pusha
and
push
lods
adc
and
arpl
inc
popa
jb
add
xchg
jl
dec
push
dec
movs
push
fcomp
dec
sbb
rol
mov
mov
inc
pop
or
mov
push
xchg
dec
pop
frstor
or
dec
clc
xchg
mov
hlt
cdq
mov
push
jmp
jmp
mov
xchg
push
mov
mov
test
cmp
movs
xchg
inc
inc
dec
out
jns
jmp
dec
jg
clc
and
push
ror
dec
call
imul
pop
xchg
sbb
or
push
into
aas
mov
aam
movs
mov
jp
pop
cmp
jo
mov
rol
and
jno
(bad)
(bad)
call
inc
mov
and
push
xchg
icebp
or
pusha
mov
(bad)
(bad)
jmp
inc
inc
loope
retf
mov
in
das
push
(bad)
sub
xchg
adc
sub
fsub
(bad)
mov
idiv
push
enter
dec
pop
out
rcr
(bad)
(bad)
call
and
push
popa
push
popa
stos
dec
stos
rcr
sbb
jecxz
movs
(bad)
jae
(bad)
(bad)
jg
loop
sahf
das
jo
mov
sub
pop
arpl
out
mov
pop
cmp
les
lahf
push
into
pop
inc
mov
sbb
jmp
clc
fnstenv
(bad)
scas
cmp
fmul
movs
push
mov
test
(bad)
div
scas
test
int3
shr
std
lock
mov
dec
fbld
cmp
pushf
sub
(bad)
(bad)
(bad)
push
xchg
mov
mov
aam
mov
ds
adc
outs
es
int
mul
pop
shl
je
stc
push
(bad)
(bad)
fisttp
jbe
push
into
outs
sub
jge
mov
add
(bad)
in
mov
daa
ja
mov
callw
mov
test
pusha
adc
(bad)
jmp
mov
scas
ja
stc
xchg
psubusw
add
xor
jnp
(bad)
(bad)
(bad)
(bad)
jnp
cmp
xchg
dec
add
fistp
jae
jle
out
clc
xor
lods
pop
std
(bad)
(bad)
(bad)
call
stos
mov
cmp
(bad)
fld
push
xchg
lock
sub
fs
or
jl
xchg
pop
ret
(bad)
(bad)
dec
xchg
mov
scas
mov
and
stos
ins
cmp
dec
mov
xchg
es
clc
pop
lock
(bad)
(bad)
in
sbb
popa
mov
out
push
out
xchg
fs
dec
jnp
(bad)
(bad)
(bad)
(bad)
cld
or
outs
xchg
push
out
repnz
in
and
ja
lea
movs
enter
cmp
cmp
aaa
scas
nop
and
mov
mov
clc
jl
loop
imul
icebp
and
aad
out
xchg
(bad)
(bad)
jg
inc
dec
hlt
cmps
and
inc
out
cmp
movs
dec
sbb
add
cmp
(bad)
(bad)
call
pusha
punpcklbw
sar
sub
(bad)
jmp
inc
and
add
cmp
fs
mov
(bad)
call
adc
and
in
xchg
push
pop
push
jecxz
xor
scas
data16
(bad)
(bad)
dec
inc
xor
outs
push
outs
and
out
cli
add
mov
test
mov
xlat
daa
das
cwde
jp
stc
ret
dec
(bad)
(bad)
call
shl
test
pop
xor
adc
pushf
pop
test
jb
(bad)
(bad)
jmp
mov
jae
into
add
into
dec
push
imul
sub
mov
(bad)
inc
mov
imul
cmp
cmps
in
jg
mov
(bad)
(bad)
dec
scas
repz
or
push
cwde
das
das
call
and
sbb
(bad)
(bad)
outs
dec
ret
mov
add
pop
sahf
add
das
loop
mov
(bad)
(bad)
push
fcom
xchg
or
(bad)
push
mov
dec
push
xor
push
mov
mov
pusha
dec
mov
(bad)
(bad)
(bad)
call
sbb
jmp
xchg
retf
icebp
dec
xlat
mov
or
ss
(bad)
mov
movs
xchg
xor
imul
(bad)
call
mov
cmp
out
cs
jbe
aaa
inc
(bad)
pop
ins
arpl
and
(bad)
(bad)
(bad)
dec
or
cmps
xchg
cmp
sbb
idiv
sbb
jge
(bad)
mov
add
mov
mov
lods
dec
ins
pop
shl
(bad)
jg
fsub
aaa
inc
jle
hlt
addr16
cmc
add
pop
imul
popa
orps
jl
retf
aam
repz
jmp
pop
add
dec
add
cmps
ret
dec
cmp
data16
int3
es
test
jmp
mov
adc
(bad)
cli
aam
outs
or
xchg
mov
mov
fcom
imul
imul
sub
loope
arpl
sub
pop
js
jns
cs
test
ss
(bad)
in
pop
adc
and
jp
out
in
call
pop
loopne
inc
sbb
aas
(bad)
jg
mov
adc
fsub
or
or
inc
(bad)
(bad)
(bad)
push
das
popf
aaa
mul
sbb
jle
pushf
jle
jo
cmp
pusha
or
enter
fsub
(bad)
sbb
xor
dec
dec
add
ror
mov
pop
je
cs
(bad)
lock
push
cmp
(bad)
call
inc
loop
fwait
xchg
pop
loopne
hlt
pusha
xchg
jae
xor
mov
pop
and
push
lock
(bad)
(bad)
call
push
or
jbe
adc
or
cwde
mov
mov
sub
inc
sub
pushf
imul
jno
adc
mov
sbb
dec
sub
(bad)
call
fadd
mov
inc
add
enter
adc
test
retf
aas
(bad)
pop
call
jmp
int
or
xchg
xlat
dec
gs
and
inc
push
pusha
push
in
adc
fimul
or
mov
stos
in
imul
(bad)
jmp
or
pop
(bad)
icebp
xchg
jno
push
in
(bad)
(bad)
call
push
in
fidivr
aam
lds
sub
out
ret
xchg
test
aaa
out
mov
(bad)
(bad)
jmp
jmp
jmp
mov
push
stc
or
(bad)
mov
outs
lock
jmp
or
shr
or
outs
jae
mov
jge
sahf
push
(bad)
(bad)
(bad)
(bad)
cmp
scas
sub
in
cs
jae
push
adc
jmp
(bad)
(bad)
(bad)
(bad)
inc
fdiv
push
int3
mov
adc
ja
push
mov
dec
sahf
mov
xor
dec
pop
mov
cwde
mov
aam
ror
xor
cmp
jmp
push
push
fwait
and
loopne
(bad)
sbb
push
aam
fidivr
(bad)
(bad)
push
sbb
add
(bad)
fsub
dec
aaa
pop
mov
jno
int3
lahf
inc
inc
fmul
(bad)
push
test
ret
fs
cmc
cmp
adc
sbb
inc
adc
shl
ret
(bad)
(bad)
call
inc
push
xor
inc
call
adc
add
sbb
in
test
xchg
(bad)
mov
clc
mov
push
(bad)
jns
cli
out
mov
jmp
(bad)
loop
sbb
ss
fcomp
not
pop
xchg
into
(bad)
mov
jno
(bad)
sbb
cs
retf
cmc
cmp
mov
jmp
adc
ror
mov
xor
(bad)
xchg
(bad)
(bad)
(bad)
jmp
jno
enter
mov
jg
mov
mov
ror
(bad)
(bad)
dec
jae
imul
dec
call
push
cmps
test
sbb
adc
add
popf
mov
mov
(bad)
call
add
rcl
and
sbb
rol
ret
(bad)
mov
call
das
frstor
outs
(bad)
repz
repnz
loope
nop
call
(bad)
add
add
mov
(bad)
(bad)
(bad)
jmp
push
inc
pop
fs
xchg
sub
test
xchg
adc
sti
ret
inc
pop
adc
(bad)
(bad)
fcomip
jmp
dec
adc
jg
stos
jae
iret
jl
mov
mov
inc
adc
ins
sti
pop
movs
(bad)
mov
div
dec
inc
adc
aaa
in
dec
(bad)
(bad)
(bad)
call
pusha
out
movs
jg
fiadd
pop
aad
nop
xchg
test
(bad)
lods
pop
push
pusha
cli
xor
push
(bad)
(bad)
(bad)
call
call
xor
test
mov
ror
std
leave
pop
xor
xchg
push
adc
(bad)
(bad)
(bad)
dec
int
cmp
push
sub
push
mov
mov
ret
retf
xchg
int
jb
xchg
imul
cld
ins
adc
scas
push
iret
dec
jmp
arpl
test
movs
adc
shl
inc
inc
rol
das
add
push
es
mov
repz
jbe
(bad)
adc
loopne
inc
push
enter
mov
in
nop
test
jmp
(bad)
jmp
or
xchg
loop
call
inc
pop
imul
icebp
jmp
adc
les
mov
inc
(bad)
adc
(bad)
(bad)
dec
xchg
loopne
jle
fst
sbb
cmp
scas
das
xchg
add
push
cmp
lahf
(bad)
(bad)
(bad)
call
in
adc
cmc
mov
adc
shl
mov
cdq
adc
in
add
pop
push
loop
sar
inc
jg
aam
out
dec
cli
or
jns
mov
cmp
or
(bad)
cli
clc
push
mov
sbb
mov
leave
sbb
push
inc
(bad)
(bad)
(bad)
call
fnstsw
cwde
jmp
mov
fidivr
movs
test
mov
dec
ror
leave
cmps
loope
fstp
call
jo
popa
mov
cs
into
movs
pop
fs
mov
jne
jbe
mov
(bad)
inc
jns
scas
and
and
in
inc
push
(bad)
mov
cdq
xchg
ret
dec
not
and
in
mov
pop
or
cmps
test
(bad)
(bad)
(bad)
(bad)
ffreep
leave
push
xchg
(bad)
or
cld
inc
inc
repnz
jmp
or
or
mov
(bad)
jns
stos
loope
es
repz
mov
jo
gs
movs
and
mov
mov
daa
iret
jle
(bad)
dec
ja
mov
mov
or
cmps
and
(bad)
cs
test
dec
scas
repnz
in
push
jle
bnd
repnz
mov
add
aaa
cmp
(bad)
call
sbb
or
mov
arpl
sbb
(bad)
mov
movs
mov
int3
call
fwait
jp
add
je
(bad)
mov
sub
push
loop
(bad)
jg
push
mov
(bad)
(bad)
push
adc
out
and
out
mov
pop
push
pop
mov
aad
xchg
xchg
xor
js
adc
jp
rep
mov
(bad)
(bad)
(bad)
mov
fild
xchg
jnp
das
inc
in
lds
xchg
in
xchg
add
mov
(bad)
(bad)
call
cwde
jae
inc
jecxz
stc
adc
mov
sbb
jmp
rol
call
fidivr
mov
(bad)
in
dec
mov
aad
mov
xchg
xor
fisubr
xchg
(bad)
(bad)
push
mov
add
sbb
(bad)
in
test
push
xchg
adc
mov
out
stc
clc
inc
mov
mov
repnz
xor
sbb
aaa
std
(bad)
call
jp
jg
inc
cmps
add
mov
xchg
or
jo
mov
inc
cmp
(bad)
(bad)
call
popa
fidivr
bound
and
mov
pop
jo
xor
lods
xchg
cs
jmp
pop
jae
mov
es
retf
add
mov
xchg
jg
(bad)
jg
or
lock
jbe
les
stc
sub
add
rcl
(bad)
(bad)
(bad)
jge
movs
push
sub
mov
daa
or
loopne
xor
xlat
xor
les
(bad)
(bad)
(bad)
dec
not
add
and
sub
jmp
shl
dec
pop
mov
lock
std
(bad)
(bad)
(bad)
call
out
mov
lgs
lea
movs
jae
sub
sbb
(bad)
ss
add
loopne
int
mov
(bad)
(bad)
call
loopne
pop
loopne
mov
aad
xor
mov
sar
rcl
sbb
xchg
inc
cmp
mov
jno
and
inc
cmp
cs
mov
lods
push
shl
stc
ins
lock
shr
sub
mov
push
in
je
sahf
mov
pop
fwait
outs
sahf
(bad)
jmp
add
pop
xchg
ins
cmp
xchg
call
jnp
mov
push
ss
dec
ret
mov
arpl
push
in
and
mov
fstp
push
inc
adc
push
pop
jmp
(bad)
(bad)
dec
not
mov
imul
add
cmp
jecxz
ficomp
(bad)
jmp
sbb
lock
fisttp
jne
sbb
nop
icebp
test
je
dec
test
call
call
nop
retf
xchg
test
push
(bad)
mov
in
std
add
in
(bad)
(bad)
(bad)
inc
cmps
jp
fadd
mov
inc
dec
pop
sbb
xor
daa
push
pushf
out
(bad)
sub
std
(bad)
dec
jno
div
arpl
cmc
test
sub
aaa
nop
cld
xor
dec
lock
jb
mov
cwde
jmp
push
je
dec
lahf
stos
jge
out
call
inc
xchg
ret
fldenv
cmps
sub
pop
push
leave
xchg
jg
(bad)
(bad)
fstp
fdivr
sub
test
mov
push
pop
xchg
push
jne
jne
call
(bad)
inc
aad
mov
adc
imul
pusha
ss
adc
scas
adc
(bad)
push
repz
add
ficom
in
loope
jae
sti
jo
cdq
lea
test
jmp
loop
cmp
cmps
cmp
test
pop
ds
jbe
and
(bad)
pop
dec
inc
arpl
jb
push
inc
xchg
pop
pop
xor
mov
xlat
in
sub
push
inc
or
dec
jmp
clc
(bad)
(bad)
cmp
test
push
fdiv
xchg
sub
inc
inc
push
lods
jmp
bound
bound
aad
xor
mov
and
pop
into
fisub
sti
jmp
dec
(bad)
push
sub
sahf
jns
jge
es
das
adc
and
pop
mov
sbb
fwait
mov
scas
loop
mov
(bad)
call
sub
std
pop
movs
sbb
out
popf
call
aad
or
dec
xchg
es
xlat
(bad)
(bad)
(bad)
jmp
push
and
dec
push
cli
div
mov
enter
mov
mov
mov
mov
shl
pop
pop
mov
stc
jge
(bad)
jnp
push
(bad)
call
call
out
int
retf
test
adc
fist
(bad)
(bad)
(bad)
(bad)
clc
std
movs
push
stc
xor
and
ret
jge
mov
pop
stos
push
(bad)
mov
sbb
xchg
mov
(bad)
sti
fild
pop
push
sbb
aam
or
(bad)
(bad)
(bad)
inc
std
sub
inc
or
or
test
inc
ror
fbld
iret
and
aas
xchg
repnz
popf
stc
mov
pop
jns
fwait
sub
leave
int3
jmp
ror
ror
push
(bad)
(bad)
jnp
mov
pop
xchg
int
xor
inc
movs
inc
outs
sbb
outs
adc
rcl
(bad)
(bad)
(bad)
inc
test
adc
clc
or
jns
(bad)
mov
pop
pop
(bad)
stc
jbe
in
cmp
(bad)
(bad)
jmp
mov
stc
or
pop
out
aaa
hlt
imul
ffreep
clc
xchg
add
das
call
(bad)
jp
fist
aam
out
mov
push
mov
(bad)
xor
push
cli
jmp
dec
jmp
sub
sub
mov
scas
(bad)
mov
lea
inc
clc
cld
cmp
jp
in
adc
lods
sbb
rcr
adc
retf
addr16
xchg
into
jg
inc
add
aas
nop
or
jle
mov
rcr
(bad)
(bad)
(bad)
jmp
mov
popa
mov
cmp
xchg
xchg
retf
push
sbb
push
mov
pushf
cmp
neg
js
sbb
mov
cmp
xchg
adc
dec
popa
mov
(bad)
(bad)
(bad)
push
sahf
or
cmp
das
stos
adc
outs
fiadd
mov
sub
sub
addr16
pop
mov
pushf
add
mov
mov
cmps
addr16
adc
or
repnz
lea
ret
cmp
push
gs
or
icebp
or
(bad)
push
push
dec
fcomp
dec
ss
adc
sbb
icebp
out
pushf
mov
xchg
(bad)
(bad)
(bad)
dec
clc
cmp
mov
jb
ficom
lods
and
sahf
jmp
rcr
ret
mov
sub
add
add
gs
ins
dec
addr16
dec
pop
inc
mov
repnz
fs
js
mov
(bad)
mov
int
sub
jne
iret
retf
in
daa
ret
or
das
mov
mov
mov
cmp
js
fild
scas
pop
fimul
or
sub
jns
movs
pop
clc
(bad)
(bad)
mov
stos
daa
pop
xor
sbb
scas
and
pop
out
jb
push
(bad)
(bad)
(bad)
call
adc
das
cmp
push
stos
hlt
mov
cdq
mov
jae
xchg
ins
outs
out
call
scas
(bad)
(bad)
(bad)
(bad)
fiadd
pop
out
jo
xchg
push
icebp
pop
int3
xchg
popf
aam
pop
add
mov
ins
fcomp
inc
xor
(bad)
(bad)
inc
ins
pop
aad
les
sahf
out
dec
sub
out
imul
sbb
(bad)
(bad)
jmp
das
pop
dec
(bad)
fimul
bound
fidiv
adc
or
adc
dec
sbb
mov
scas
(bad)
sbb
scas
pop
repnz
jnp
shr
or
ins
outs
dec
dec
cmp
inc
sub
xor
cmp
xor
inc
outs
mov
(bad)
(bad)
(bad)
push
repz
adc
xor
and
mov
iret
imul
int3
pop
int3
jg
loop
nop
ins
(bad)
inc
sub
mov
add
xor
pop
in
mov
(bad)
(bad)
(bad)
jmp
pop
push
inc
pop
mov
out
ins
jmp
add
frstor
inc
pop
sbb
pusha
adc
(bad)
jmp
adc
mov
push
push
pushf
sbb
loopne
xchg
mov
push
test
(bad)
(bad)
dec
xor
xor
mov
jmp
sbb
mov
jo
pop
adc
(bad)
mov
fidivr
or
cmps
xchg
dec
(bad)
dec
xchg
sub
adc
enter
(bad)
(bad)
(bad)
aas
retf
adc
iret
aad
rol
ins
(bad)
loope
xor
mov
fbld
sub
push
and
lds
movs
or
cld
(bad)
(bad)
jmp
push
movs
inc
repnz
(bad)
sbb
lahf
sub
xchg
popf
retf
das
icebp
adc
(bad)
inc
loop
mov
dec
mov
push
imul
cli
lock
mov
adc
(bad)
(bad)
call
add
mov
cld
cmp
mov
retf
pusha
jl
imul
sub
(bad)
jmp
rcl
in
inc
sub
xchg
jae
mov
enter
int3
cmps
dec
mov
adc
(bad)
(bad)
(bad)
jmp
push
jmp
push
or
mov
test
xor
(bad)
(bad)
(bad)
call
imul
add
cs
or
gs
cwde
out
addr16
arpl
sub
nop
inc
loopne
out
push
pop
leave
cmps
mov
mov
cmps
fistp
add
repnz
outs
sub
(bad)
cs
call
mov
imul
fcomp
adc
scas
(bad)
jmp
xor
xor
shl
retf
lods
mov
(bad)
(bad)
(bad)
jmp
pop
or
push
fild
dec
out
retf
adc
xchg
sub
call
jae
cli
movs
xor
pop
add
out
stos
jne
ret
jae
arpl
(bad)
(bad)
dec
cmp
push
or
add
loopne
sbb
pushf
dec
cmp
or
(bad)
(bad)
(bad)
jmp
dec
pop
push
jb
mov
mov
ret
sbb
or
push
push
sub
popa
push
and
cmc
(bad)
fxch
jmp
cmp
push
cld
out
sbb
repnz
jne
in
sahf
sub
lock
out
ret
jl
pop
cmp
sub
lods
(bad)
inc
mov
push
fcom
pusha
mov
or
(bad)
jmp
leave
adc
mov
sbb
imul
xchg
(bad)
(bad)
jmp
pop
out
movs
mov
lahf
cmc
ds
cmp
xchg
push
mov
(bad)
inc
inc
xor
clc
push
fisubr
pop
fistp
outs
dec
push
mov
inc
cmp
daa
cli
pop
jl
jg
(bad)
(bad)
mov
les
dec
or
dec
and
jo
push
xor
mov
lods
jbe
sbb
stos
clc
(bad)
(bad)
call
je
sbb
and
add
pop
psraw
cmp
jmp
out
retf
out
fsubr
loopne
sub
mov
test
adc
xor
test
jmp
fmul
mov
cmp
pop
sub
and
mov
test
je
jo
xchg
mov
ror
pop
sub
xchg
mov
xchg
rol
xor
push
rcr
ins
call
arpl
push
cmps
stos
cmp
test
mov
pop
or
(bad)
(bad)
mov
(bad)
inc
mov
lock
or
or
dec
mov
idiv
(bad)
(bad)
call
js
xchg
xor
sbb
movs
ins
cwde
mov
adc
and
fdivp
leave
(bad)
(bad)
(bad)
jmp
idiv
mov
jl
inc
sahf
mov
or
adc
jb
fstp
push
dec
cs
call
test
mov
mov
repnz
dec
scas
test
xchg
inc
loop
(bad)
(bad)
(bad)
(bad)
clc
dec
inc
aad
or
je
xchg
and
ror
push
pop
cmp
jg
inc
test
sbb
mov
(bad)
out
xchg
or
cld
jnp
xchg
jne
daa
xor
(bad)
(bad)
call
bound
mov
(bad)
imul
mov
sub
sub
scas
(bad)
dec
jmp
adc
pop
sbb
jbe
arpl
dec
movs
retf
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
in
iret
dec
arpl
aad
sbb
dec
push
xchg
arpl
(bad)
inc
inc
bound
and
mov
sub
cdq
aaa
pop
fwait
push
ja
(bad)
(bad)
(bad)
jp
jae
pushf
cmp
mov
add
(bad)
mov
fldenv
and
xor
ret
(bad)
(bad)
(bad)
(bad)
jmp
sub
test
repnz
xchg
movs
inc
and
cmp
dec
jg
je
ja
ss
cmp
imul
pop
fs
test
scas
ins
mov
(bad)
sub
pop
lock
out
sub
xor
jg
mov
mov
and
inc
repnz
xchg
xchg
aas
sar
ficomp
cmp
pop
dec
ror
mov
xchg
fidiv
mov
xchg
fsub
pop
mov
push
in
and
mov
push
adc
pop
jns
ins
xor
pop
push
les
out
dec
lea
sub
sbb
add
(bad)
call
push
in
or
mov
push
sbb
xchg
jo
push
mov
mov
cli
lods
xor
push
in
inc
(bad)
(bad)
in
(bad)
call
test
mov
repz
invd
inc
ret
repz
les
(bad)
(bad)
(bad)
(bad)
(bad)
test
test
in
add
pop
call
ins
sub
jnp
inc
(bad)
(bad)
(bad)
inc
xor
add
(bad)
jbe
xchg
xor
icebp
daa
call
sub
shl
idiv
(bad)
(bad)
jmp
push
icebp
mov
pop
ds
push
repz
movs
xor
jne
in
push
push
sub
popa
mov
inc
xchg
push
ss
clc
ja
push
nop
mov
xchg
(bad)
xor
(bad)
xlat
xchg
mov
cmp
hlt
and
push
xchg
cdq
xchg
data16
(bad)
(bad)
push
mov
or
fild
cmp
cld
std
xchg
adc
push
adc
jb
call
test
xor
retfw
mov
inc
(bad)
pop
lods
clc
das
mov
movs
sahf
add
(bad)
nop
fsubr
(bad)
(bad)
push
mov
aad
inc
mov
inc
dec
arpl
aaa
add
mov
leave
sub
sub
mov
(bad)
jmp
and
ja
rcl
add
ins
sbb
outs
xor
int
hlt
(bad)
(bad)
jmp
adc
xchg
fdecstp
pop
aad
je
push
sbb
xchg
jmp
cmp
shl
xor
add
cmp
fadd
push
jbe
je
or
mov
fldcw
push
sbb
cmp
(bad)
call
add
retf
popa
jle
pop
mov
push
test
pop
inc
xlat
loope
adc
(bad)
cs
cmp
call
mov
pop
sbb
cmp
sub
enter
gs
xor
scas
clc
(bad)
(bad)
fistp
fst
fs
in
mov
je
xchg
arpl
(bad)
(bad)
push
sub
inc
mov
mov
jo
mov
pushf
xor
int
jae
out
mov
dec
or
pop
retf
pushf
loop
fmul
shl
(bad)
(bad)
(bad)
call
pop
cmps
mov
out
rcl
ins
popf
jge
push
iret
push
pop
mov
push
add
sub
xchg
(bad)
(bad)
(bad)
dec
test
ror
xor
scas
ss
mov
xchg
call
pop
fdiv
jecxz
dec
sbb
loop
xchg
pop
in
xchg
pop
sbb
(bad)
jg
pop
push
mov
mov
imul
test
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
out
jmp
dec
ret
lock
into
stc
daa
movs
das
jecxz
int
sub
push
jg
test
mov
es
aas
add
or
add
test
push
inc
jae
pushf
xchg
mov
rcr
sbb
mov
je
sti
popa
(bad)
jmp
iret
push
repz
iret
test
dec
pop
cli
movs
dec
cld
stos
(bad)
jmp
(bad)
mov
movs
inc
fstp
int
fsub
sete
fild
add
mov
aas
rol
(bad)
push
out
dec
mov
xchg
mov
(bad)
loopne
mov
and
aad
outs
stos
arpl
jmp
mov
sbb
sahf
fst
push
sbb
imul
dec
pop
mov
cmp
call
sahf
data16
mov
and
inc
sub
test
mov
fxch
xlat
push
xchg
sub
movs
mov
sub
push
push
push
ss
mov
aas
or
mov
push
out
ss
dec
mov
jae
add
push
bound
(bad)
(bad)
fidiv
jl
pop
push
xchg
adc
in
mov
(bad)
out
inc
movs
and
call
sbb
mov
addr16
pop
popf
xchg
and
imul
inc
mov
jmp
das
les
xor
and
jns
sub
into
or
sti
cmp
(bad)
call
es
fwait
mov
fwait
adc
sub
jg
jo
(bad)
adc
(bad)
jle
inc
mov
push
fimul
add
dec
xor
je
jo
test
(bad)
(bad)
call
sbb
add
cmps
rcr
not
out
mov
and
les
cmp
pop
cmp
(bad)
(bad)
jmp
(bad)
test
shrd
js
sub
stc
jecxz
(bad)
jae
mov
mov
inc
add
add
push
mov
ficom
(bad)
(bad)
(bad)
jmp
push
cli
or
xchg
addr16
mov
iret
test
in
add
(bad)
inc
cli
xor
in
xor
icebp
mov
mov
nop
add
call
adc
jno
cmp
cmp
out
mov
jp
cmp
(bad)
call
cmps
inc
fwait
jecxz
cs
popa
mov
and
xchg
imul
sub
sbb
call
cmps
mov
mov
dec
mov
jmp
or
fstp
mov
dec
mov
sub
lock
mov
into
mov
adc
or
mov
out
lea
adc
fsubr
arpl
lock
outs
mov
push
(bad)
enter
ins
jo
ret
(bad)
jg
cs
mov
stc
mov
rcr
push
jbe
sub
add
rcl
(bad)
(bad)
dec
addr16
test
mov
jl
and
cmp
cmps
inc
inc
lock
cmp
in
dec
jle
stos
cli
mov
not
adc
(bad)
(bad)
(bad)
ficomp
aas
clc
(bad)
add
pushf
inc
jnp
int3
xchg
movs
or
(bad)
jg
add
stos
lods
ss
xchg
lahf
sbb
pop
add
sbb
cmc
ins
pop
push
fisttp
fdivrp
stos
sub
mov
in
jmp
cmp
cli
out
push
mov
ds
call
cmp
out
outs
jb
pcmpeqw
push
mov
ins
loopne
call
(bad)
call
mov
cmp
fdivr
ror
xchg
daa
scas
sbb
in
into
addr16
(bad)
(bad)
(bad)
call
inc
push
mov
(bad)
not
mov
jg
xor
cmps
inc
jo
jae
out
stos
in
(bad)
(bad)
(bad)
push
mov
push
test
inc
mov
dec
fstp
pop
stos
sahf
stos
and
(bad)
(bad)
(bad)
(bad)
jle
jbe
mov
pop
add
sub
jb
inc
add
mov
enter
(bad)
(bad)
inc
sbb
xor
cmp
fwait
pop
out
push
mov
test
xchg
push
sbb
(bad)
cmp
jmp
inc
test
outs
imul
(bad)
retf
bound
sahf
mov
(bad)
cld
(bad)
mov
(bad)
(bad)
call
xchg
mul
in
daa
(bad)
imul
(bad)
test
hlt
scas
(bad)
(bad)
jg
loopne
(bad)
pop
sbb
xchg
fstp
leave
sub
mov
les
cmc
das
clc
dec
rcl
lods
add
(bad)
call
cmp
jne
mov
out
scas
clc
push
dec
mov
jbe
out
jnp
outs
cwde
fsub
xor
(bad)
(bad)
(bad)
(bad)
(bad)
call
aaa
lar
xchg
and
adc
fisttp
into
adc
movs
adc
mov
push
(bad)
(bad)
jmp
aas
adc
lock
jb
cs
add
pop
fisub
(bad)
repnz
xor
dec
push
dec
cmp
inc
movsx
cmp
adc
(bad)
push
xor
push
sub
push
mov
retf
addr16
add
pop
fwait
xor
std
(bad)
(bad)
dec
pop
ja
adc
xor
retf
(bad)
pusha
cdq
dec
sub
loopne
movs
call
jno
mov
cwde
xlat
addr16
call
loopne
sbb
call
xor
and
and
(bad)
(bad)
mov
pop
ret
aam
mov
add
add
cwde
xchg
push
mov
jge
(bad)
and
(bad)
(bad)
(bad)
mov
sahf
shl
mov
jne
or
mov
cmp
(bad)
call
and
adc
jns
into
add
(bad)
inc
jb
pop
pop
xchg
xchg
test
in
ret
int3
pop
leave
push
push
dec
outs
(bad)
fdiv
xchg
call
xchg
and
push
lahf
mov
(bad)
jbe
(bad)
sbb
(bad)
(bad)
dec
xchg
cmps
ror
fwait
or
jns
adc
stos
or
idiv
out
dec
(bad)
lahf
je
adc
stos
sbb
jle
std
in
sti
fidivr
(bad)
mov
loopne
mov
push
outs
add
cmp
cmp
fs
xchg
in
(bad)
(bad)
(bad)
mov
scas
pop
dec
sub
jecxz
popa
add
mov
cmp
inc
cmp
jns
rol
cli
(bad)
call
jp
(bad)
sub
adc
pop
fwait
in
lods
test
in
inc
aad
inc
(bad)
(bad)
(bad)
out
repnz
stos
cs
mov
test
xchg
out
(bad)
sar
(bad)
call
pop
pusha
jb
aas
or
or
inc
mov
add
and
cs
adc
out
sbb
and
xchg
xchg
ret
je
(bad)
(bad)
(bad)
jg
bound
xchg
lahf
mov
or
mov
or
push
sub
(bad)
(bad)
(bad)
(bad)
(bad)
loop
rol
pop
retf
cmps
xchg
push
jno
push
and
cmp
adc
lods
into
pushf
jmp
sub
ds
out
ins
jle
(bad)
(bad)
push
out
add
jae
xor
pop
aam
sbb
inc
(bad)
jae
jecxz
fistp
out
push
fiadd
inc
jge
clc
mov
push
add
icebp
cld
add
(bad)
(bad)
jg
add
imul
lods
sub
mov
in
sti
mov
cmp
cmps
xlat
xchg
sub
(bad)
dec
pop
iret
rol
cld
xor
gs
adc
enter
call
jmp
push
or
push
xchg
out
lahf
mov
mov
test
stc
lahf
jne
adc
xchg
fwait
leave
repz
(bad)
(bad)
(bad)
call
pop
inc
ret
cmps
push
je
or
mov
mov
punpckhdq
xchg
cmp
dec
std
mov
fisttp
or
or
repnz
(bad)
push
stc
fisttp
sub
icebp
aaa
inc
and
cmp
ins
xor
icebp
(bad)
(bad)
(bad)
push
out
mov
clc
ja
jl
add
leave
mov
fist
int3
gs
call
(bad)
(bad)
(bad)
dec
fst
mov
int3
out
xchg
inc
call
and
sahf
mov
and
repz
(bad)
(bad)
call
and
cmp
xabort
and
int
adc
push
pop
jecxz
or
mov
popa
mov
(bad)
(bad)
(bad)
fistp
pop
scas
(bad)
sbb
je
sbb
mov
in
mov
mov
mov
(bad)
cli
mov
fisttp
fdiv
push
es
xchg
mov
fwait
sub
jae
pop
mov
stos
add
(bad)
mov
mov
pop
pusha
cmps
mov
arpl
xlat
inc
inc
mov
jbe
push
jo
aaa
xchg
aas
xchg
shr
(bad)
(bad)
push
outs
xor
lock
mov
jae
data16
push
xchg
pop
mov
das
cli
data16
int3
pop
loopne
outs
jl
std
push
jb
popa
idiv
(bad)
(bad)
dec
fs
call
js
push
out
retf
cdq
mov
(bad)
(bad)
cld
jle
(bad)
(bad)
clc
popa
test
leave
sub
jmp
jl
int3
xchg
mov
(bad)
(bad)
mov
cs
fwait
movs
jge
push
out
or
shr
mov
in
mov
(bad)
(bad)
jmp
fiadd
pop
stos
mov
addr16
dec
retf
or
and
(bad)
push
ins
pop
outs
xchg
data16
(bad)
(bad)
(bad)
jmp
into
xlat
or
out
add
bound
jmp
aam
cmc
mov
out
(bad)
(bad)
(bad)
(bad)
jmp
sbb
jbe
icebp
xchg
iret
jmp
movaps
mov
xor
mov
or
dec
es
push
(bad)
mov
stc
or
iret
xchg
fs
push
in
lods
push
arpl
mov
(bad)
fimul
stos
call
xor
jg
mov
and
sbb
jmp
into
loope
mov
mov
daa
call
or
data16
call
sub
shr
mov
or
sbb
ficomp
mov
enter
lds
xchg
(bad)
(bad)
(bad)
jmp
pop
fmul
dec
push
dec
xchg
aas
xchg
ret
retf
pop
dec
scas
add
ja
(bad)
call
push
enter
imul
fwait
es
out
test
and
loope
sar
dec
mov
and
inc
add
mov
dec
pop
pusha
push
(bad)
mov
(bad)
(bad)
jmp
inc
jp
adc
inc
fild
das
dec
xor
pop
adc
iret
inc
pop
in
or
(bad)
(bad)
(bad)
js
adc
adc
or
outs
push
add
(bad)
(bad)
jg
add
hlt
sbb
xor
jp
rol
push
adc
mov
(bad)
jmp
cs
imul
mov
sub
movs
or
pop
je
push
mov
sub
adc
pop
pop
test
movs
dec
cmp
jg
jo
mov
int
(bad)
(bad)
call
loop
dec
stos
ja
xchg
lods
ins
mov
out
and
mov
dec
ret
lods
mov
xchg
cmps
cmp
mov
jnp
mov
inc
mov
push
jae
mov
mov
(bad)
dec
(bad)
(bad)
(bad)
call
and
or
pop
aad
pop
pop
outs
sti
dec
mov
jnp
out
xor
ret
pop
in
pusha
lods
js
sbb
xchg
leave
rol
(bad)
(bad)
jg
or
int3
rol
jo
(bad)
int
js
mov
stc
jl
add
ds
pop
cmp
(bad)
(bad)
call
xor
add
loope
fild
pop
xchg
and
sub
sbb
(bad)
(bad)
jmp
out
push
jo
dec
push
mov
repnz
pop
inc
icebp
(bad)
data16
jae
jmp
sbb
pop
stos
(bad)
call
test
lock
test
in
push
ror
inc
data16
(bad)
(bad)
inc
arpl
xor
xor
inc
test
jle
dec
test
(bad)
loopne
call
jmp
(bad)
(bad)
call
sahf
les
cmp
and
sub
jmp
cmp
test
clc
(bad)
lahf
(bad)
(bad)
jg
ins
add
sub
dec
xchg
(bad)
adc
pushf
ins
jae
lock
sti
cmp
iret
fild
dec
aaa
xchg
adc
cmp
sbb
je
scas
lods
xchg
mov
jmp
sub
dec
mov
xchg
shl
mov
cmps
cmps
sti
and
dec
(bad)
jmp
jg
aaa
and
jle
data16
icebp
inc
and
mov
cmp
(bad)
inc
sub
fwait
enter
imul
clc
and
cmp
mov
sub
ds
cli
lods
int3
ss
sbb
rcr
mov
fisttp
add
inc
sbb
(bad)
(bad)
(bad)
(bad)
cmp
xchg
and
add
pop
cmp
xchg
push
mov
sbb
pop
mov
xor
add
pusha
lods
sub
stos
mov
inc
jb
loopne
(bad)
(bad)
call
in
inc
mov
sahf
icebp
lahf
xchg
inc
cmp
inc
leave
aam
push
ficom
add
loopne
mov
enter
loopne
shr
inc
mov
mov
sar
push
into
pop
xor
push
mov
or
ins
push
arpl
mov
shl
(bad)
(bad)
out
push
or
ret
adc
xchg
stos
ins
mov
xchg
mov
test
ds
(bad)
(bad)
(bad)
fidiv
addr16
or
jbe
push
or
xchg
jo
mov
test
movhps
scas
dec
js
(bad)
(bad)
(bad)
out
ja
ja
inc
inc
dec
outs
jg
data16
(bad)
xchg
ret
inc
dec
mov
pop
fldenv
(bad)
(bad)
(bad)
jg
fmulp
(bad)
mov
in
es
loope
call
jle
outs
mov
(bad)
(bad)
jmp
jg
stos
xor
out
aas
fld
inc
push
sar
sub
dec
sar
(bad)
(bad)
dec
xchg
jae
push
loop
sar
outs
mov
(bad)
mov
sub
gs
movs
(bad)
(bad)
(bad)
call
sti
xor
cmp
xchg
or
(bad)
mul
or
sub
adc
mov
(bad)
(bad)
(bad)
call
fwait
dec
jae
jl
lock
sub
ins
xor
hlt
push
push
mov
xchg
pop
ret
in
movs
daa
(bad)
(bad)
(bad)
(bad)
clc
sbb
(bad)
aad
iret
cwde
jmp
fsubrp
jg
xchg
and
leave
jmp
in
inc
out
(bad)
(bad)
(bad)
inc
jno
xor
cmp
pop
(bad)
xchg
(bad)
out
or
jo
scas
jmp
(bad)
jmp
mov
push
sbb
ror
jo
ds
adc
es
sbb
js
pop
popa
jmp
dec
loop
fild
and
pop
std
push
xchg
jnp
xchg
loope
mov
inc
mov
imul
jmp
mov
adc
mov
xchg
cmp
inc
xchg
aaa
adc
jno
(bad)
(bad)
(bad)
inc
push
xchg
xor
mov
mov
mov
jmp
aaa
clc
dec
in
inc
mov
(bad)
(bad)
(bad)
jg
lea
jns
clc
adc
pop
scas
xchg
pop
dec
ins
ins
or
shl
shl
push
inc
mov
std
(bad)
(bad)
jmp
cmps
or
in
mov
or
push
imul
adc
das
cdq
dec
(bad)
call
mov
adc
cmp
lods
cmp
pop
sbb
gs
(bad)
(bad)
(bad)
jmp
pop
jle
(bad)
nop
jne
add
push
ds
sar
mov
lahf
inc
fisubr
jg
sub
dec
sub
cmp
je
pop
push
out
ins
lock
jmp
dec
cwde
pop
mov
fstp
mov
cdq
imul
cld
xchg
sbb
add
fnstenv
fimul
push
push
(bad)
(bad)
(bad)
push
ret
fimul
loop
cmp
aas
(bad)
sbb
scas
sbb
cmps
ins
test
pushf
sti
pop
push
inc
loopne
pusha
popf
xor
retf
mov
hlt
add
ss
mov
test
(bad)
(bad)
(bad)
push
scas
fcomp
mov
xor
xchg
jns
das
pop
jo
push
cs
and
mov
int3
mov
lea
fisubr
xchg
inc
clc
dec
pusha
test
push
in
inc
mov
jmp
sar
inc
push
leave
mov
push
and
mov
mov
and
sbb
ins
sub
(bad)
(bad)
call
cli
xchg
push
ins
dec
pop
mov
aas
cs
mov
push
pop
shl
mov
cwde
test
(bad)
dec
xchg
stos
int
push
call
rcr
scas
add
add
jmp
int3
push
mov
push
adc
mov
dec
(bad)
(bad)
(bad)
sbb
lds
cli
clc
adc
leave
mov
shl
sub
mov
inc
fnstsw
adc
or
xor
int3
mov
(bad)
dec
neg
cdq
adc
repz
sub
jge
aas
call
pop
(bad)
loop
out
ja
(bad)
(bad)
inc
int3
adc
mov
arpl
mov
(bad)
mov
icebp
push
cli
mov
xchg
jp
repnz
jbe
push
(bad)
(bad)
(bad)
push
es
lods
adc
xlat
lock
into
aam
mov
loop
add
push
(bad)
fisubr
cld
xchg
and
mov
dec
stos
jge
pop
add
(bad)
call
loopne
xchg
jp
arpl
push
ret
cmp
inc
test
(bad)
(bad)
mov
pop
aas
dec
xor
and
ror
mov
xchg
and
(bad)
(bad)
(bad)
push
jg
sbb
cmps
fwait
xchg
push
push
sbb
(bad)
push
mov
mov
stc
movs
retf
inc
pusha
xchg
(bad)
cmps
fwait
dec
dec
movs
mov
sbb
xchg
mov
outs
test
mov
std
push
mov
retf
jns
or
adc
dec
or
das
xchg
shr
pop
jne
adc
xchg
(bad)
sahf
stc
lods
ins
sti
cdq
add
cmc
mov
pop
mov
(bad)
(bad)
call
adc
loop
mov
lods
mov
int
mov
(bad)
out
cli
call
shl
sahf
(bad)
hlt
adc
jo
sahf
add
hlt
loope
(bad)
(bad)
(bad)
clc
cdq
or
sbb
xchg
cwde
repz
mov
mov
aas
push
add
jmp
mov
inc
shr
int
cmp
mov
enter
or
push
jg
es
mov
xchg
dec
ror
(bad)
(bad)
push
mov
mov
pop
cmp
pop
ja
pop
int3
add
(bad)
(bad)
(bad)
out
ficom
aad
or
jecxz
sub
fistp
(bad)
sub
pop
add
aas
cmps
jmp
push
cmp
fmul
(bad)
or
jg
cmp
or
sub
adc
aam
and
(bad)
(bad)
call
and
addr16
test
mov
sub
shl
shl
mov
stos
(bad)
(bad)
(bad)
jmp
leave
inc
test
sti
push
inc
ja
sub
sti
lds
jp
push
(bad)
(bad)
(bad)
dec
sbb
dec
fmul
pop
pop
movs
or
lahf
push
std
shr
mov
in
(bad)
in
fist
or
or
cmp
jmp
mov
xor
mov
adc
(bad)
(bad)
(bad)
dec
dec
xchg
jnp
inc
fsubr
gs
xor
call
call
jg
(bad)
cmp
es
adc
xchg
pop
jge
and
dec
daa
jns
mov
push
and
mov
push
adc
test
sub
ficom
loopne
ds
mov
stos
adc
arpl
mov
repz
mov
addr16
xchg
out
sub
mov
mov
call
mov
and
or
fs
fmulp
repz
shl
mov
lahf
cmp
stos
retf
addr16
sub
(bad)
(bad)
dec
loope
lods
lods
inc
adc
sub
mov
push
xor
(bad)
call
sub
mov
bound
loop
and
sbb
lahf
cli
adc
outs
mov
mov
cmps
push
cmp
adc
(bad)
or
in
xchg
mov
push
mov
ds
das
clc
jmp
pop
dec
or
arpl
xchg
test
mov
adc
ffreep
ret
in
push
and
out
gs
movs
outs
inc
clc
lea
ins
push
mov
(bad)
push
sub
mov
mov
add
hlt
sbb
mov
(bad)
(bad)
(bad)
jmp
xor
and
adc
das
and
test
mov
enter
(bad)
(bad)
dec
(bad)
outs
aad
mov
pusha
addr16
js
fwait
scas
(bad)
jle
(bad)
stc
sub
call
(bad)
call
mov
mov
out
pop
lods
xchg
enter
pop
jl
aam
dec
jle
jo
das
(bad)
(bad)
(bad)
(bad)
cmp
sbb
inc
xchg
xchg
mov
push
lock
lahf
call
es
imul
ret
int
imul
jo
js
push
mov
sub
cmp
fdiv
dec
inc
cmc
(bad)
(bad)
(bad)
je
dec
fmul
call
sub
out
mov
xchg
sbb
out
jno
push
int
das
adc
mov
xchg
lock
imul
jb
jne
test
(bad)
(bad)
push
pop
mov
xchg
jae
cmp
cmp
push
xlat
jp
adc
(bad)
sti
jge
push
out
pop
(bad)
(bad)
(bad)
push
ds
ins
jbe
pop
inc
xor
out
or
mov
in
shl
push
push
and
(bad)
call
adc
test
sbb
fnstcw
psubq
push
pop
(bad)
or
int3
test
movs
jg
(bad)
jmp
mov
pop
xchg
test
mov
and
push
daa
jp
std
(bad)
call
cmp
mov
inc
pushf
ja
into
mov
cmp
push
adc
paddd
shl
jmp
jo
push
int3
pop
(bad)
call
adc
cmp
add
arpl
cmp
mov
push
(bad)
(bad)
(bad)
aas
mov
retf
mov
mov
aam
pop
lds
stos
adc
push
clc
cmp
imul
aam
aas
jns
xor
mov
(bad)
loop
ds
jl
(bad)
(bad)
call
pop
sub
loope
or
pop
into
mov
dec
fiadd
in
ins
xchg
imul
(bad)
jmp
sbb
test
in
popf
fimul
neg
xor
pop
cld
(bad)
mov
rcl
mov
ja
lldt
in
adc
repnz
(bad)
cmp
mov
rcr
dec
sahf
enter
mov
ins
scas
push
cmp
mov
(bad)
(bad)
jmp
mov
dec
dec
lods
cmp
pop
dec
cs
jne
pop
int
jl
adc
ss
(bad)
(bad)
jmp
pop
enter
xor
icebp
push
(bad)
lock
sub
aad
jmp
cwde
inc
idiv
(bad)
call
leave
lahf
ret
push
enter
jns
xor
aad
mov
imul
(bad)
(bad)
(bad)
(bad)
clc
or
mov
jne
cwde
jge
les
cld
jmp
and
and
(bad)
(bad)
(bad)
call
jns
adc
sbb
divps
aam
pop
pushf
imul
adc
out
(bad)
jecxz
mov
mov
jmp
push
fsub
into
push
jle
lock
(bad)
(bad)
out
cdq
push
adc
push
mov
jecxz
ins
xor
les
pop
ja
dec
outs
pop
(bad)
(bad)
call
push
out
and
cmp
cmps
popa
pop
aas
adc
cmps
dec
sti
retf
leave
out
pusha
test
xor
call
test
mov
and
clc
(bad)
(bad)
(bad)
(bad)
call
adc
sub
inc
dec
adc
add
pop
cmp
shr
out
jns
lods
in
adc
(bad)
(bad)
call
leave
mov
mov
xchg
ss
int
test
add
out
adc
add
(bad)
(bad)
jmp
fcom
xor
in
xchg
das
into
loope
pop
ret
mov
inc
sub
outs
(bad)
jmp
ror
xchg
cmps
jle
mov
enter
(bad)
(bad)
(bad)
dec
xchg
loopne
mov
jmp
cdq
repnz
in
out
aas
test
mov
sahf
mov
(bad)
(bad)
(bad)
jmp
repz
add
gs
sub
lds
jg
je
mov
dec
sub
ins
(bad)
(bad)
dec
lea
jb
and
outs
lea
fld
retf
jecxz
(bad)
(bad)
(bad)
dec
test
mov
daa
or
mov
sbb
cwde
mov
fwait
stos
(bad)
popf
in
or
call
int
sbb
(bad)
(bad)
daa
sbb
jmp
cmps
mov
loop
(bad)
(bad)
(bad)
call
stos
cmp
jmp
in
ficomp
xor
add
adc
(bad)
(bad)
inc
jmp
data16
inc
ret
js
popf
retf
mov
xchg
mov
lods
fwait
pop
repz
(bad)
(bad)
inc
int3
sbb
fs
repnz
mov
mov
cmps
movs
jne
gs
jg
lods
dec
mov
nop
jge
(bad)
(bad)
(bad)
jmp
inc
cmp
repz
xor
arpl
stos
call
adc
(bad)
(bad)
mov
lods
ret
add
mov
es
jge
xor
pop
std
addr16
dec
push
and
cld
or
add
xchg
cmc
xor
lahf
call
(bad)
inc
sbb
cdq
ins
(bad)
jl
jl
sbb
pop
cld
mov
test
lds
pop
and
inc
and
xchg
stos
lea
cmps
and
mov
cli
cli
data16
add
mov
sbb
xor
xor
jo
(bad)
(bad)
(bad)
push
aad
jp
nop
out
xchg
xor
sub
lds
xlat
enter
push
push
push
rol
sub
xchg
jge
(bad)
(bad)
(bad)
call
iret
aaa
mov
loopne
sar
mov
add
pusha
xor
xor
pop
ds
sbb
cmp
xchg
out
push
movs
lea
sar
mov
loopne
das
push
jecxz
cmp
out
xchg
clc
fild
ins
push
fmul
movs
ja
inc
loope
sbb
outs
clc
out
jmp
xchg
fs
data16
(bad)
jp
xor
inc
out
fisttp
add
stc
add
sub
iret
int
cmp
(bad)
(bad)
call
xchg
and
addr16
xor
int3
aaa
jmp
jmp
nop
ins
jnp
jge
(bad)
(bad)
(bad)
call
sbb
int
mov
stos
push
push
dec
jge
or
idiv
hlt
add
cmps
or
stos
jg
js
add
pop
mov
loopne
push
mov
(bad)
(bad)
(bad)
jle
and
push
clc
mov
out
push
inc
pushf
mov
test
inc
scas
cmp
xor
test
xlat
add
dec
js
enter
push
inc
jl
sar
(bad)
(bad)
jmp
mov
test
iret
sub
xor
jmp
in
(bad)
(bad)
mov
mov
adc
int3
jne
out
ror
push
(bad)
cmp
arpl
das
cli
(bad)
js
pushf
xchg
adc
mov
call
pop
jmp
lods
jmp
leave
loope
jae
scas
mov
mov
int3
dec
mov
cli
adc
(bad)
jmp
add
shl
dec
loope
ins
sar
inc
imul
(bad)
(bad)
dec
inc
push
(bad)
aaa
retf
jbe
xor
data16
inc
movs
inc
jns
sbb
dec
call
(bad)
(bad)
call
mov
das
xchg
movs
arpl
sub
stos
add
ds
jmp
fs
sbb
outs
into
jae
push
call
jmp
rol
test
loope
and
sbb
push
lock
(bad)
(bad)
jl
push
pop
adc
retf
add
mov
jno
xchg
xor
jmp
or
(bad)
(bad)
call
sar
pop
js
jbe
mul
nop
mov
cld
lds
addr16
jle
cmp
(bad)
dec
inc
mov
add
dec
inc
inc
lock
data16
in
(bad)
iret
pushf
leave
adc
(bad)
(bad)
(bad)
call
pop
adc
add
dec
popf
es
test
add
sbb
not
push
fsubr
movs
mov
(bad)
(bad)
push
repz
push
(bad)
aas
mov
(bad)
out
mov
mov
jno
add
pop
dec
inc
mov
sub
jmp
test
mov
(bad)
(bad)
(bad)
push
rol
test
jo
(bad)
in
mov
sub
pop
dec
jb
or
int
push
imul
(bad)
(bad)
(bad)
jnp
sub
cmps
mov
pop
jmp
jg
sbb
les
popa
jecxz
dec
test
call
add
in
pop
and
ret
pop
sub
push
test
inc
cmp
mov
jmp
clc
dec
xor
mov
lods
xchg
or
cmps
outs
mov
idiv
movq
mov
dec
aas
fnsave
shl
std
xor
mov
mov
pop
jb
stc
push
adc
add
std
jp
(bad)
call
lock
mov
int3
mov
pusha
test
add
add
(bad)
call
jne
cmp
aad
test
rol
dec
cmp
add
adc
fcomip
(bad)
pop
pop
cs
call
pop
and
mov
mov
test
pop
out
lahf
imul
jb
inc
mov
lods
fsub
iret
push
dec
mov
push
sti
aaa
or
inc
clc
(bad)
jmp
inc
(bad)
jnp
push
or
sub
add
adc
cmp
bound
fisubr
ror
jmp
and
add
cli
in
retf
sti
ror
sub
inc
les
imul
mov
enter
inc
push
xchg
jne
not
and
call
std
dec
fld
jmp
inc
push
rcl
outs
test
adc
(bad)
jmp
shl
push
ret
push
mov
mov
push
xchg
sub
stos
mov
stos
mov
(bad)
push
inc
mov
push
shr
xchg
rol
and
sub
rcl
fdivrp
call
sub
sbb
sti
pop
inc
push
mov
call
fist
stc
retf
sar
(bad)
(bad)
(bad)
jmp
ss
call
je
pop
(bad)
(bad)
jmp
inc
jp
xchg
cwde
loopne
cli
call
std
shl
and
lds
pop
(bad)
cmp
pop
rol
jg
or
inc
add
adc
leave
outs
(bad)
(bad)
(bad)
dec
pop
jmp
cs
adc
mov
cwde
inc
lea
add
(bad)
push
cmp
mov
(bad)
jle
adc
or
lahf
aad
dec
in
jnp
push
adc
aad
(bad)
ds
(bad)
stos
sbb
stos
cdq
jge
xchg
pop
xor
loope
ins
or
rol
fcomp
sub
call
or
dec
xor
jmp
xchg
adc
je
xchg
dec
mov
cmp
mov
fdiv
mov
int
xchg
sbb
lods
sar
(bad)
jmp
pop
leave
movs
aas
inc
add
adc
cmp
cmp
jge
(bad)
mov
dec
jg
cmp
pop
adc
sub
cmps
jne
adc
int
(bad)
(bad)
(bad)
jmp
pusha
add
sbb
mov
out
and
mov
xchg
scas
cwde
movs
pop
add
pop
iret
mov
data16
(bad)
jg
push
sub
addr16
mov
xor
sar
retf
mov
imul
xchg
icebp
outs
test
into
inc
sub
(bad)
sbb
(bad)
in
sbb
sub
cmp
xchg
and
and
inc
std
xor
(bad)
jg
daa
dec
cld
test
sbb
mov
stos
pusha
dec
cmp
in
test
fisub
(bad)
(bad)
push
sbb
jne
dec
retf
nop
test
mov
hlt
nop
xchg
data16
test
daa
pop
mov
pop
test
(bad)
(bad)
(bad)
jmp
push
pop
add
pop
pop
stc
adc
jp
ret
mov
jnp
inc
mov
pop
repnz
(bad)
(bad)
(bad)
inc
or
gs
neg
shr
xor
xchg
pop
popf
lods
dec
cdq
(bad)
cmp
push
fsubr
out
cwde
adc
push
push
ss
add
jo
xor
fbstp
xlat
dec
or
ret
(bad)
(bad)
(bad)
inc
loop
stc
jl
daa
pop
jbe
outs
stos
jae
and
push
add
out
jbe
mov
(bad)
(bad)
(bad)
jmp
je
push
dec
cmp
ja
mov
and
(bad)
cld
fistp
or
aaa
std
(bad)
call
push
out
fimul
rcr
add
in
adc
movs
fdivr
jg
inc
adc
xchg
into
mov
ds
push
ja
add
cmp
scas
enter
(bad)
fadd
and
aas
fisub
loop
in
jmp
sbb
inc
add
pop
or
xchg
hlt
ds
mov
(bad)
(bad)
mov
and
add
push
and
push
lods
cmp
pushf
(bad)
pop
xchg
cs
rol
cmp
aas
rcl
dec
pop
xor
loope
ret
cmovno
(bad)
(bad)
cmp
jmp
jle
iret
fcompp
mov
xchg
imul
cwde
bound
popa
and
out
into
adc
mov
mov
pop
push
imul
(bad)
(bad)
jle
stc
mov
xor
mov
xchg
push
pop
adc
(bad)
adc
mov
jecxz
mov
loop
pop
xchg
mov
(bad)
scas
xchg
dec
cmp
stos
jg
mov
push
sbb
xor
(bad)
jg
jmp
mov
fwait
out
and
ret
(bad)
cli
cmp
dec
js
retfw
loope
(bad)
jmp
adc
cli
push
retf
add
into
out
or
loope
cmp
(bad)
(bad)
(bad)
mov
cmps
call
lock
or
xchg
and
repnz
(bad)
pop
(bad)
(bad)
jmp
mov
push
jle
adc
in
and
imul
mov
dec
(bad)
(bad)
(bad)
(bad)
ficom
mov
int
dec
retf
xor
and
mov
ss
(bad)
call
call
mov
jle
pop
jbe
or
test
sub
in
(bad)
jmp
js
outs
shl
rol
dec
mov
sbb
cli
and
das
mov
jmp
idiv
gs
(bad)
(bad)
mov
xor
mov
fnstenv
pop
(bad)
mov
(bad)
dec
js
sbb
sahf
je
fmul
xchg
int
mov
jmp
setl
(bad)
(bad)
(bad)
(bad)
jp
lahf
stos
nop
in
ins
xchg
sbb
add
outs
out
loope
repz
dec
shr
cmp
(bad)
(bad)
inc
push
in
push
cdq
xchg
sbb
scas
les
jo
jecxz
dec
and
addr16
or
push
cld
xor
(bad)
(bad)
(bad)
(bad)
ds
jmp
test
daa
popf
xchg
aam
(bad)
pusha
xchg
imul
inc
inc
add
cmp
push
ret
inc
mov
(bad)
inc
daa
(bad)
int3
jnp
(bad)
mov
push
pushf
pop
jns
jns
(bad)
call
nop
addr16
pop
outs
add
cld
jg
mov
in
jl
inc
mov
fimul
(bad)
(bad)
jmp
or
pop
ins
xlat
mov
add
jne
mov
jl
(bad)
(bad)
(bad)
mov
nop
sub
add
or
(bad)
sub
mov
pop
inc
inc
call
mov
es
movs
mov
cmps
fcomp
jle
(bad)
pop
mov
aas
pushf
sar
repz
outs
sbb
cmp
cmc
ret
fs
cmp
js
cs
(bad)
(bad)
jmp
call
sub
cli
inc
add
cmps
std
inc
add
popf
add
lea
(bad)
(bad)
(bad)
jmp
and
xchg
outs
mov
mov
(bad)
movs
sti
int3
pop
outs
xor
jmp
call
inc
lock
loopne
bound
inc
dec
in
sub
add
ins
and
inc
mov
push
push
pop
aad
mov
cli
mov
and
push
pop
into
pushf
mov
sub
pop
jmp
inc
jmp
pop
cld
addr16
inc
enter
push
out
push
add
(bad)
pop
mov
push
(bad)
jg
inc
shl
push
fwait
or
sbb
icebp
and
aad
repnz
nop
ror
sbb
or
adc
jns
adc
adc
xor
jmp
lock
stos
fild
jns
outs
lea
mov
retf
xor
sti
retf
inc
pop
fcom
rol
or
sbb
(bad)
(bad)
mov
xor
push
fsub
or
ret
retf
dec
adc
(bad)
(bad)
call
fdivr
cmps
into
push
dec
mov
js
cli
mov
and
mov
mov
jle
(bad)
(bad)
jmp
mul
xor
and
jg
dec
jmp
lds
mov
(bad)
(bad)
jmp
mov
xchg
push
sub
ret
adc
pop
mov
inc
sub
dec
push
adc
ret
push
imul
add
jge
(bad)
(bad)
(bad)
jg
movs
adc
shr
enter
xchg
cmps
fs
mov
cmp
mov
rol
cmp
(bad)
(bad)
(bad)
mov
jo
jp
nop
mov
push
icebp
jg
test
daa
add
inc
sub
lods
(bad)
jg
mov
loopne
mov
nop
cmp
sub
(bad)
(bad)
inc
push
push
or
and
pop
pop
leave
js
icebp
cs
fdivr
sbb
push
imul
(bad)
jmp
push
cli
pop
xor
adc
imul
adc
jb
inc
mov
cmp
jmp
dec
sub
test
xchg
clc
mov
jg
dec
je
and
jbe
xor
dec
jns
loop
(bad)
dec
inc
sub
xchg
pop
jmp
sub
xchg
sahf
cld
add
add
(bad)
(bad)
push
mov
shr
xchg
ja
(bad)
xchg
cmp
xchg
add
and
ins
stos
push
(bad)
inc
leave
or
in
(bad)
mov
mov
loop
push
scas
inc
ficomp
ja
gs
(bad)
(bad)
dec
dec
std
pop
and
loopne
and
repz
popf
mov
imul
out
push
sub
dec
data16
cli
(bad)
(bad)
jg
test
mov
xchg
ds
out
call
dec
xchg
gs
stos
jge
xlat
loope
(bad)
(bad)
(bad)
jmp
outs
retf
sbb
cwde
and
arpl
add
jb
mul
icebp
mov
cdq
cli
stos
(bad)
call
inc
gs
lahf
or
pop
sbb
in
push
sbb
jmp
fld
dec
icebp
retf
dec
(bad)
and
fst
fwait
repz
jmp
(bad)
push
js
push
out
(bad)
and
mov
sbb
dec
sub
icebp
(bad)
inc
cli
xchg
cdq
cmp
adc
sub
and
fild
(bad)
(bad)
(bad)
dec
fld
pusha
adc
or
outs
add
jmp
pushf
rcl
xor
loopne
(bad)
(bad)
(bad)
call
popa
fsub
scas
mov
fimul
and
cli
push
cmps
int
and
adc
(bad)
(bad)
(bad)
dec
rcr
xlat
int3
xchg
ins
xchg
lods
or
ret
xor
push
(bad)
or
call
mov
rcr
mov
sub
mov
fmul
sub
pop
or
test
into
cmp
cwde
jmp
jae
ins
jb
loop
xor
out
fmul
call
dec
dec
aaa
cld
(bad)
mov
scas
add
push
cmp
xchg
add
jl
dec
dec
xor
(bad)
(bad)
(bad)
dec
dec
pop
mov
adc
mov
jmp
jbe
pop
test
pop
cld
inc
push
adc
dec
lock
into
sbb
cli
adc
pop
add
imul
in
(bad)
(bad)
push
adc
inc
inc
aad
push
js
lods
jg
aas
rsqrtps
pause
jo
lock
(bad)
call
sbb
repz
push
daa
movs
mov
mov
imul
test
rcl
jbe
jecxz
xchg
sar
jne
sub
xchg
pop
gs
mov
aas
dec
xlat
push
(bad)
jg
(bad)
clc
cmp
retf
dec
jo
add
add
xor
lock
dec
push
jmp
jmp
xchg
pop
icebp
jp
inc
sti
mov
mov
mov
inc
xchg
mov
(bad)
ins
push
in
inc
sub
pusha
adc
dec
or
lahf
lods
sub
das
retf
ins
(bad)
(bad)
xchg
retf
shr
or
fwait
(bad)
stos
iret
imul
or
(bad)
(bad)
(bad)
inc
hlt
push
adc
cmc
aas
idiv
push
cmp
sbb
mov
push
cld
mov
pusha
ffree
jo
enter
or
sar
(bad)
(bad)
(bad)
fxam
mov
or
gs
pop
or
das
cld
imul
test
mov
(bad)
inc
sub
dec
mov
cmovp
fld
push
add
ror
in
movs
jmp
(bad)
(bad)
dec
mov
test
out
xlat
lea
xchg
pop
jmp
out
sbb
enter
jmp
or
add
sbb
fisttp
sub
(bad)
les
aam
pushf
ds
push
adc
pop
loopne
retf
imul
mov
jae
in
retf
hlt
shl
inc
(bad)
(bad)
(bad)
jmp
sub
into
int
aad
jmp
sub
mov
outs
iret
out
dec
retf
mov
(bad)
(bad)
dec
cmps
inc
cmc
sbb
mov
test
leave
das
cli
test
mov
(bad)
(bad)
call
pop
dec
(bad)
js
nop
lahf
mov
in
(bad)
mov
ss
or
adc
and
(bad)
(bad)
call
fistp
out
fwait
sub
sub
int
push
and
adc
data16
(bad)
(bad)
dec
shl
sbb
repnz
shl
dec
mov
daa
(bad)
(bad)
(bad)
call
mov
ja
shl
add
xor
daa
xlat
push
dec
sbb
pop
or
push
add
sbb
push
mov
mov
fwait
cld
dec
push
(bad)
inc
pusha
jnp
xchg
mov
add
mov
(bad)
call
outs
pop
sbb
and
call
(bad)
(bad)
(bad)
call
sub
mov
retf
push
xchg
mov
hlt
inc
fiadd
(bad)
dec
cmp
xor
aaa
jmp
pop
loopne
xchg
cmp
popf
mov
(bad)
(bad)
jg
int
pop
push
cmp
dec
shr
imul
test
jnp
cmps
lea
std
sbb
fld
clc
call
loopne
push
pop
inc
mov
xchg
in
rcl
pop
test
pop
lock
out
jmp
imul
call
scas
in
sub
(bad)
mov
pop
jg
sub
lock
stos
push
outs
scas
hlt
mov
imul
mov
xchg
in
or
xchg
les
adc
push
push
xor
dec
dec
xor
or
enter
add
orps
adc
(bad)
(bad)
call
fist
push
jmp
mov
je
test
pusha
sub
(bad)
(bad)
jmp
xor
add
mov
repnz
pop
inc
test
stos
pop
movaps
repnz
sbb
(bad)
(bad)
(bad)
dec
es
ret
inc
mov
xor
test
shl
outs
mov
(bad)
not
pushf
es
lea
xor
in
sbb
aas
outs
in
retf
(bad)
(bad)
(bad)
jmp
cmp
popa
push
popf
xor
xor
(bad)
mov
ja
(bad)
(bad)
push
(bad)
sbb
ds
shl
adc
imul
push
cld
(bad)
call
fld
inc
fsub
movs
pop
mov
retf
pop
out
es
mov
(bad)
jnp
idiv
mov
jge
adc
mov
mov
add
xor
scas
mov
add
(bad)
jmp
inc
mov
outs
(bad)
neg
pushf
mov
jmp
(bad)
aaa
dec
push
stos
rol
fisub
jge
nop
sbb
cli
adc
push
(bad)
mov
pop
les
imul
int
mov
push
push
dec
call
clc
(bad)
jmp
cmc
sbb
test
lea
or
mov
push
push
loopne
(bad)
(bad)
jmp
and
sbb
sbb
sbb
addr16
bound
(bad)
sbb
in
cmp
call
(bad)
call
out
movs
stc
or
cmps
hlt
xchg
aas
je
pop
sar
hlt
arpl
(bad)
dec
(bad)
mov
aam
and
mov
loopne
test
xchg
call
xchg
xlat
(bad)
(bad)
call
push
inc
and
sub
iret
mov
retf
js
dec
(bad)
(bad)
(bad)
jg
cmp
cmps
dec
xchg
or
popa
das
stc
mov
inc
push
add
pop
sbb
(bad)
(bad)
(bad)
inc
lock
test
jl
std
call
push
pop
bound
cmps
cli
(bad)
(bad)
(bad)
dec
loop
jne
aad
jmp
mov
imul
(bad)
fldenv
mov
xchg
ret
add
and
or
fbld
push
(bad)
(bad)
mov
pop
movs
clc
sbb
daa
aaa
mov
int
jp
mov
call
and
(bad)
(bad)
(bad)
push
nop
test
mov
add
loopne
popf
ror
aaa
push
dec
ret
or
push
std
fnsave
fcomip
(bad)
in
lds
mov
or
arpl
jne
(bad)
(bad)
(bad)
jmp
mov
dec
fld
dec
aad
sbb
jbe
sub
in
stos
scas
push
add
jmp
fidiv
jg
(bad)
ds
bound
repz
and
iret
outs
sahf
shl
(bad)
jno
lahf
out
fdivp
(bad)
fcomip
push
jl
pop
xchg
jns
out
pop
jno
lahf
(bad)
(bad)
je
loopne
fdiv
rcl
(bad)
(bad)
mov
dec
inc
sti
push
adc
fisubr
push
and
sti
adc
retf
add
int3
pop
(bad)
(bad)
(bad)
jmp
icebp
push
sub
sbb
cli
cmp
imul
(bad)
in
pop
je
(bad)
jle
into
shl
inc
cmp
aam
mov
(bad)
in
add
(bad)
(bad)
dec
cmps
scas
jle
aam
xchg
sbb
push
sub
fld
fs
jne
data16
enter
(bad)
(bad)
push
xchg
push
enter
in
or
jns
jb
lock
repnz
pop
loop
clc
(bad)
dec
mov
xor
pusha
bound
push
aad
into
or
xchg
pop
dec
dec
cdq
cdq
push
add
pop
mov
hlt
rcl
or
(bad)
dec
bsr
mov
add
add
movs
xchg
sub
call
pop
jbe
push
sub
icebp
(bad)
iret
jmp
add
cld
push
sub
out
ror
or
call
sbb
int
mov
retf
xchg
retf
test
lahf
pusha
std
pop
cmc
inc
or
xchg
rol
and
mov
adc
lods
(bad)
adc
jbe
dec
and
push
imul
ds
pop
loopne
call
clc
sub
inc
mov
add
shr
stos
inc
jbe
pop
mov
jle
fild
out
jnp
dec
push
jg
xor
mov
and
fldz
mov
jg
call
(bad)
sub
mov
out
dec
fcomp
mov
(bad)
(bad)
in
jmp
test
cmp
or
loope
or
(bad)
(bad)
push
pop
ror
ret
(bad)
mov
mov
test
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
pop
add
adc
in
in
(bad)
arpl
push
cdq
mov
loop
mov
jno
lds
or
jmp
mov
cmp
hlt
addr16
test
push
sysexit
loope
cmp
(bad)
jnp
push
stos
fs
and
pop
add
mov
sbb
(bad)
jmp
and
mov
and
dec
dec
out
loopne
cmp
add
into
lock
dec
xchg
mov
lea
mov
sahf
(bad)
call
push
hlt
mov
aam
aas
jecxz
inc
add
popf
mov
pop
arpl
dec
cmps
or
mov
jns
dec
into
test
movs
dec
cmps
stos
sub
cmp
aad
(bad)
(bad)
(bad)
std
cs
inc
inc
xlat
ja
jl
mov
shl
rcl
push
jmp
cmc
movs
jmp
call
cwde
ss
xor
jae
pop
inc
pusha
leave
fdivr
push
and
jecxz
movs
lods
jmp
(bad)
(bad)
inc
fld
lods
lea
dec
(bad)
stos
push
jb
ja
xchg
ins
mov
jmp
or
xor
ret
fcos
(bad)
dec
cmp
or
cmc
sub
mov
jne
sbb
mov
lahf
out
ret
mov
cmp
and
mov
addr16
push
inc
push
out
std
dec
cld
adc
cmps
aaa
jl
das
loopne
sub
sbb
imul
sbb
ja
cmp
(bad)
dec
js
aam
pop
xor
xor
mov
xchg
mov
(bad)
(bad)
(bad)
jmp
stos
pop
test
lds
jnp
dec
clc
fld
loop
sbb
jnp
adc
xchg
(bad)
(bad)
(bad)
(bad)
call
js
mov
rcl
sub
dec
dec
std
jge
inc
mov
xchg
popa
mov
stc
(bad)
jg
sti
out
inc
or
inc
ret
pop
std
dec
adc
jns
repnz
xor
(bad)
(bad)
call
mov
cmc
cmp
lds
fcom
inc
ret
ja
in
arpl
jmp
stos
jg
test
test
push
push
add
cmp
aad
(bad)
jle
ss
lock
mov
bound
lea
(bad)
(bad)
call
loope
sub
pusha
mov
loop
scas
inc
mov
sbb
jne
pop
pusha
cwde
(bad)
(bad)
(bad)
call
sahf
sar
jne
cwde
ins
fwait
and
xlat
mov
sub
mov
lods
xchg
mov
(bad)
frndint
cld
fcomi
in
and
pop
daa
and
loop
(bad)
and
cs
xchg
cmps
fbstp
add
call
sub
jecxz
or
inc
xor
cmp
fstp
jle
inc
shl
cmp
or
sti
cmp
add
outs
jnp
or
add
inc
movs
push
jle
in
(bad)
(bad)
inc
pushf
inc
hlt
repnz
sub
(bad)
jmp
pop
adc
add
sbb
sbb
frstor
fild
dec
jb
pop
jbe
inc
push
(bad)
(bad)
call
sub
mov
adc
(bad)
fimul
sub
cmps
call
js
fwait
cs
jl
lods
fcomp
mov
pop
or
and
push
(bad)
call
jne
mov
xchg
mov
xor
or
inc
mov
adc
(bad)
push
loopne
ja
mov
cli
push
loop
cmp
or
push
clc
pusha
mov
cmp
inc
das
lods
movs
cwde
xor
ins
and
mov
jae
lea
mov
test
push
call
stos
fwait
in
xchg
aad
arpl
mov
jo
pop
xor
aam
or
push
xor
inc
inc
cmp
add
mov
or
inc
loop
inc
test
or
(bad)
(bad)
inc
dec
dec
mov
cmp
mov
ja
mov
ins
sub
iret
cmp
fcomip
(bad)
(bad)
(bad)
aas
out
sbb
stos
mov
and
data16
or
sub
scas
scas
clc
stos
test
gs
and
jle
out
xchg
jns
sti
xor
repnz
lock
mov
pop
(bad)
(bad)
fcomip
xchg
std
sbb
jo
and
ja
or
pop
xor
(bad)
loopne
(bad)
(bad)
(bad)
inc
das
push
cdq
xchg
cdq
adc
xchg
ds
enter
dec
dec
or
jp
cmp
jl
inc
(bad)
dec
in
mov
mov
shl
cmp
ins
in
or
nop
movs
mov
cmp
sub
cmp
mov
or
push
(bad)
(bad)
jmp
xchg
clc
sub
mov
cmp
inc
repz
call
push
(bad)
xchg
pop
jb
mov
pop
mov
aam
stos
sub
(bad)
fild
loopne
lahf
std
retf
call
cmp
(bad)
(bad)
inc
outs
mov
dec
test
jle
shl
push
repnz
dec
je
xchg
in
or
popf
sbb
pop
jmp
and
imul
(bad)
call
out
inc
add
mov
ret
ds
cmp
fstp
sbb
mov
jmp
xor
mov
xor
fsub
or
lods
sbb
bound
stos
(bad)
adc
mov
dec
loop
or
mul
loop
jg
(bad)
mov
mov
sbb
iret
jmp
mov
jmp
xchg
sbb
or
adc
ret
repnz
mov
push
mov
dec
(bad)
dec
cmps
sbb
jmp
mov
aas
aas
nop
mov
and
(bad)
(bad)
(bad)
(bad)
cli
sti
ds
jno
das
inc
jbe
mov
sbb
pop
inc
movs
add
(bad)
mov
push
imul
jle
pop
cmp
clc
push
call
xlat
inc
mov
dec
rol
out
(bad)
(bad)
dec
iret
dec
mov
ror
out
inc
jae
out
mov
shr
cmp
(bad)
stc
or
idiv
pop
repz
jns
push
arpl
fisub
xor
addr16
(bad)
(bad)
dec
enter
(bad)
pop
adc
ror
jecxz
mov
cmp
pop
pop
add
outs
or
jno
pop
pop
ja
jns
push
outs
bnd
fcmovnbe
inc
jge
daa
les
sub
pop
ret
icebp
dec
lock
(bad)
(bad)
(bad)
mov
in
and
rcl
cmp
push
mov
loopne
mov
(bad)
(bad)
(bad)
jmp
cmps
push
call
cmc
fwait
sbb
sbb
push
jns
or
es
cmc
adc
(bad)
(bad)
(bad)
(bad)
ficom
add
jbe
xor
and
mov
xor
pop
mov
add
and
dec
pop
pusha
lods
mov
mov
or
xor
push
(bad)
mov
push
sbb
add
pop
enter
dec
adc
dec
mov
push
mov
or
sbb
pop
add
lahf
cmp
fnstsw
sbb
enter
sub
and
mov
xor
shl
mov
(bad)
mov
dec
push
xchg
dec
mov
fcomp
mov
rcr
and
(bad)
inc
(bad)
jg
push
loop
mov
mov
(bad)
and
push
in
popa
inc
add
(bad)
(bad)
(bad)
jmp
fsub
sbb
cmp
dec
sub
fsubr
pop
dec
in
jns
adc
sbb
aam
(bad)
mov
add
adc
pop
bound
repnz
bswap
movs
ss
(bad)
inc
std
mov
(bad)
xchg
inc
je
stc
xor
enter
dec
aaa
xlat
xor
mov
dec
and
add
jmp
mulps
xchg
xlat
repnz
dec
icebp
fdiv
ss
stos
inc
or
(bad)
(bad)
dec
scas
jp
mov
jmp
pop
mov
xor
jp
push
mov
(bad)
(bad)
push
mov
in
pop
scas
lock
(bad)
dec
push
mov
(bad)
enter
mov
xchg
les
add
pop
dec
jp
and
addr16
loopne
idiv
cmps
ss
sbb
pop
out
xor
mov
test
inc
test
nop
sahf
push
(bad)
(bad)
(bad)
call
dec
icebp
in
int3
push
sub
int3
push
sub
ins
shl
out
(bad)
fild
push
sar
(bad)
push
neg
sbb
pop
int
pop
or
out
and
add
(bad)
inc
or
cmps
cwde
sub
repnz
pop
ja
rol
int3
das
jbe
sub
(bad)
(bad)
call
aas
cmp
lea
dec
cmps
stos
icebp
out
test
dec
sub
icebp
xchg
pop
(bad)
fcomip
out
(bad)
(bad)
(bad)
(bad)
js
push
vpackuswb
push
xchg
xchg
jo
push
pop
out
dec
sub
pop
sbb
cwde
popa
fs
(bad)
(bad)
call
jge
out
(bad)
fnstcw
fdiv
stos
lahf
movs
test
in
nop
mov
int3
xchg
mov
(bad)
push
bound
dec
xor
retf
inc
xor
cmp
fnstenv
push
jecxz
jmp
jno
icebp
adc
cmp
call
sbb
ss
xor
(bad)
jmp
push
jno
mov
dec
sar
(bad)
call
retf
mov
sub
dec
cmp
add
xor
lods
or
push
or
inc
cmp
or
or
and
dec
(bad)
sti
daa
shl
xor
(bad)
(bad)
jg
fs
into
out
loop
mov
fdivr
lods
imul
push
xchg
adc
or
(bad)
(bad)
(bad)
(bad)
stc
rcr
popa
in
pop
popf
push
push
jp
and
shl
mov
sbb
pop
adc
(bad)
(bad)
call
retf
stos
call
xor
mov
mov
cmp
(bad)
jmp
cmc
rcr
clc
dec
jp
pop
cmp
cs
sub
mov
popa
icebp
cmp
(bad)
(bad)
call
mov
adc
mov
dec
mov
fstp
stos
mov
inc
jne
(bad)
(bad)
call
adc
cli
or
stos
neg
jp
inc
mov
pop
or
push
cmps
inc
enter
call
int3
adc
lahf
bound
cmp
out
(bad)
into
inc
jnp
cli
xchg
xchg
retf
mov
(bad)
(bad)
jmp
pop
enter
fs
xor
fwait
jae
mov
(bad)
sbb
in
mov
and
(bad)
(bad)
jg
sbb
push
cdq
cmp
test
into
dec
in
push
aad
xchg
dec
mov
pop
cwde
mov
(bad)
(bad)
inc
call
std
or
(bad)
jmp
mov
and
jmp
cdq
mov
xchg
mov
cmp
out
mov
push
scas
test
or
ds
(bad)
fcomip
dec
in
pop
shl
jo
and
sub
cwde
inc
cmps
xor
jl
(bad)
(bad)
call
movs
cmp
stos
mov
retf
repz
jmp
call
in
lahf
mov
cmp
sbb
xor
std
(bad)
(bad)
fdivp
shl
scas
in
cmovg
mov
adc
mov
popa
ret
mov
jg
mov
cmps
pop
outs
hlt
jae
sub
mov
sub
mov
(bad)
jg
inc
dec
push
dec
dec
xor
mov
or
pop
nop
(bad)
sub
cld
mov
(bad)
(bad)
call
xor
jp
repnz
jl
movs
mov
pushf
adc
ret
lock
sub
nop
(bad)
jg
jg
cmp
pop
mov
jmp
add
mov
ret
jb
(bad)
(bad)
(bad)
call
and
xchg
into
hlt
jo
mov
pop
jmp
sub
sub
lods
xchg
call
icebp
mov
jne
mov
or
or
(bad)
(bad)
(bad)
cmp
loop
(bad)
in
mov
push
stos
rcr
jno
add
into
mov
(bad)
stos
popf
mov
fcomip
push
das
jl
add
or
pop
push
ret
(bad)
or
(bad)
(bad)
(bad)
call
test
out
addr16
add
mov
(bad)
shr
jmp
(bad)
(bad)
push
(bad)
or
push
retf
pop
push
push
add
add
cmp
es
push
int
out
xchg
mov
(bad)
(bad)
(bad)
(bad)
call
add
fxch
call
jb
lods
cmp
in
dec
and
cwde
add
(bad)
jmp
push
shl
adc
add
dec
pop
cmp
sar
sti
fcomi
(bad)
(bad)
call
mul
xor
daa
in
in
int
popa
pop
and
mov
enter
add
outs
and
clc
iret
lock
push
into
add
mov
(bad)
(bad)
(bad)
(bad)
sti
mov
jbe
and
add
inc
in
outs
mov
aas
in
sub
jnp
mov
(bad)
call
jne
pop
dec
adc
jmp
shl
xchg
pusha
outs
pop
xchg
rol
xchg
lods
xchg
sub
mov
nop
cmp
cmps
scas
push
mov
into
dec
add
fadd
add
retf
or
sub
retf
fnsave
dec
mov
repnz
jmp
mov
rep
test
pop
out
mov
(bad)
(bad)
jmp
jl
outs
outs
mov
dec
cmps
into
add
je
test
mov
inc
sub
mov
call
dec
mov
dec
sbb
push
retf
ret
or
inc
push
mov
mov
pop
hlt
add
adc
jmp
adc
rcr
pop
mov
xor
mov
sbb
push
int
stos
(bad)
(bad)
(bad)
mov
xchg
mov
(bad)
push
loop
cmp
or
(bad)
fcomip
ret
mov
pop
add
movs
in
sbb
pop
arpl
jmp
jbe
lock
iret
inc
retf
and
dec
push
xor
pushf
jle
js
test
test
(bad)
(bad)
fistp
sub
cmps
xchg
movs
stc
inc
neg
cmps
cdq
lea
icebp
cmp
call
ret
pop
out
dec
adc
mov
pop
dec
add
xchg
lods
mov
pop
(bad)
(bad)
(bad)
call
xor
ror
ds
jns
push
out
fwait
(bad)
sahf
pop
sub
ficomp
hlt
enter
jg
(bad)
(bad)
(bad)
jmp
mov
movs
icebp
or
sub
push
pop
jbe
jno
jbe
and
jge
and
repnz
cmp
daa
sub
cdq
adc
hlt
xchg
inc
data16
jecxz
out
or
scas
mov
(bad)
fcomip
jmp
call
xchg
dec
sub
pop
mov
add
into
fmul
(bad)
mov
data16
mov
cmps
(bad)
call
dec
rcr
std
(bad)
call
dec
call
and
lahf
xchg
movs
ret
inc
xor
jbe
(bad)
(bad)
(bad)
call
fs
repnz
dec
ja
and
repz
(bad)
pushw
lock
xor
push
sbb
pop
(bad)
(bad)
(bad)
(bad)
cmp
adc
outs
mov
inc
(bad)
cli
xor
push
xor
pusha
(bad)
mov
push
(bad)
cmp
xchg
adc
mov
add
and
icebp
and
int3
push
mov
xchg
or
(bad)
(bad)
jmp
cdq
mov
mov
mov
dec
xchg
mov
out
and
mov
(bad)
(bad)
cmp
pop
cmps
mov
not
lock
jb
scas
push
in
sub
inc
mov
pop
dec
dec
(bad)
(bad)
(bad)
push
mov
cmps
sub
dec
imul
retf
sbb
cmp
add
ja
jmp
cs
loopne
xchg
cmp
jmp
mov
cmp
jo
cmc
(bad)
dec
ret
mov
test
fst
ins
pop
lahf
mov
std
mov
jge
(bad)
(bad)
dec
mov
sbb
jle
push
sahf
outs
es
or
(bad)
(bad)
(bad)
mov
(bad)
sub
imul
scas
mov
jle
jne
xlat
xchg
jge
(bad)
(bad)
call
or
cmps
jnp
xchg
int
push
sbb
mov
int3
adc
sbb
ds
mov
loop
pop
jnp
not
pop
sub
ins
add
jge
mov
mov
inc
loopne
xchg
(bad)
(bad)
dec
out
adc
push
mov
jmp
(bad)
and
xor
int3
sbb
adc
mov
shl
sbb
cmps
push
(bad)
cmp
(bad)
push
jg
or
(bad)
(bad)
jmp
mov
dec
add
(bad)
xor
inc
lahf
icebp
int3
adc
sub
jmp
jmp
popa
pop
aas
imul
(bad)
push
les
add
jle
mov
dec
inc
pop
push
inc
or
adc
cli
mov
mov
call
loopne
jle
cli
mov
call
das
push
adc
cmp
ror
adc
sub
sbb
xor
repnz
(bad)
(bad)
(bad)
call
adc
(bad)
jg
mov
mov
dec
ficom
mov
push
lods
jl
sbb
in
in
cmps
jge
retf
cli
arpl
ins
mov
cmp
(bad)
(bad)
(bad)
jmp
or
mov
in
push
std
xchg
jmp
jnp
cmp
cwde
mov
(bad)
in
mov
sub
ins
outs
sar
pop
shl
fwait
dec
jo
xor
(bad)
inc
out
popf
bound
mov
pop
fld
in
or
daa
adc
inc
loop
aaa
test
mov
(bad)
(bad)
(bad)
(bad)
pop
add
inc
jbe
ret
andps
es
rol
nop
leave
mov
call
xor
mov
push
ror
je
mov
lods
fdivrp
(bad)
(bad)
inc
cwde
and
jmp
(bad)
(bad)
xchg
fisttp
cdq
xchg
(bad)
es
cmp
push
rcl
(bad)
fcomip
cmp
stc
dec
cld
mov
adc
(bad)
jmp
push
arpl
mov
stos
sbb
pop
jb
int
inc
mov
cmps
scas
sub
(bad)
(bad)
(bad)
mov
sbb
pop
dec
fist
mov
stos
inc
(bad)
jo
push
push
mov
dec
jmp
ds
call
dec
jecxz
pop
out
aas
sbb
scas
adc
mov
push
xor
(bad)
call
dec
aas
(bad)
loopne
jnp
mov
mov
imul
inc
pcmpeqd
or
(bad)
(bad)
(bad)
jp
mov
cmp
rcl
jcxz
sub
jmp
inc
(bad)
(bad)
jg
dec
mov
jae
inc
inc
sbb
dec
fld
pop
cmp
xchg
(bad)
(bad)
inc
icebp
sub
enter
rcl
fnsave
(bad)
adc
std
xchg
push
ja
(bad)
call
add
paddq
push
aam
sub
(bad)
or
addr16
ins
sub
cld
in
and
dec
cmp
adc
das
into
hlt
(bad)
(bad)
(bad)
fld
outs
imul
stc
push
imul
pop
repnz
aad
adc
sar
xchg
jle
aad
ret
xchg
aad
cmp
(bad)
(bad)
jg
int3
cmp
aas
aad
bound
xchg
fidivr
ret
ret
cmp
and
jns
cmp
adc
ret
xor
jg
outs
push
add
(bad)
(bad)
call
fsub
cld
xchg
xchg
ja
or
mov
xchg
mov
jne
pop
or
push
loopne
in
sbb
ins
push
rcl
retf
inc
and
stos
(bad)
(bad)
(bad)
call
xor
into
mov
push
sbb
cmp
retf
out
and
clc
cld
sbb
(bad)
(bad)
(bad)
mov
icebp
leave
mov
popa
inc
inc
sub
sahf
sub
call
add
add
test
or
(bad)
mov
das
clc
dec
repnz
icebp
ror
sub
mov
test
xor
pop
inc
enter
stos
xchg
(bad)
push
inc
mov
(bad)
cmp
std
dec
mov
scas
jnp
aad
push
push
pop
repnz
push
mov
fwait
mov
ins
lods
jne
cdq
(bad)
(bad)
(bad)
(bad)
mov
xor
push
add
je
popa
xchg
add
sbb
or
mov
jbe
mov
(bad)
fdivr
es
mov
sbb
fdivr
pop
pusha
sub
(bad)
test
ret
mov
inc
pcmpgtw
mov
sahf
test
mov
mov
inc
(bad)
(bad)
jmp
sti
ret
mov
loopne
cmp
push
inc
push
mul
fstp
(bad)
(bad)
(bad)
jmp
je
mov
add
pop
ja
loopne
jbe
mov
aaa
jl
inc
inc
das
or
jle
sub
(bad)
(bad)
push
dec
rol
mov
cli
imul
xor
shl
(bad)
(bad)
jmp
inc
inc
dec
jbe
mov
aad
jo
inc
xchg
sbb
cmp
add
push
inc
push
clc
rcr
adc
es
dec
jno
mov
mul
sbb
call
cld
mov
out
sbb
scas
cmp
dec
call
jbe
nop
push
mov
jnp
icebp
out
les
sbb
retf
and
and
or
push
mov
outs
lock
jmp
inc
xor
or
lea
or
dec
jnp
ins
dec
call
fistp
lds
cmp
js
(bad)
dec
mov
fidivr
pop
scas
xchg
movzx
(bad)
sub
int
push
pop
sub
loop
imul
addr16
inc
adc
jg
bound
out
sub
xchg
cwde
jne
(bad)
(bad)
(bad)
(bad)
cmp
jo
dec
cmp
add
imul
inc
repnz
out
push
aad
in
add
(bad)
(bad)
fist
inc
xor
or
add
sbb
clc
dec
sbb
(bad)
(bad)
jmp
ja
xchg
xchg
gs
pop
iret
dec
push
(bad)
adc
push
push
lea
out
mov
push
cdq
(bad)
(bad)
(bad)
call
cmp
push
pushf
jmp
shr
ja
adc
call
loop
mov
mov
(bad)
dec
add
cmp
dec
sbb
sbb
sub
lahf
push
mov
int
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
pop
(bad)
ja
cmp
movs
xchg
stos
leave
lds
mov
push
sbb
clc
popf
push
push
int3
neg
pop
retf
dec
mov
(bad)
jmp
test
mov
or
scas
mov
aam
loope
mov
mov
fwait
jp
xchg
jne
mov
mov
mov
inc
es
test
inc
gs
cli
or
cmp
scas
int
(bad)
(bad)
jmp
imul
scas
pushf
in
dec
pop
bound
cmp
(bad)
jbe
and
jmp
pop
outs
push
cmps
jg
mov
push
(bad)
mov
dec
std
cs
inc
ds
push
xchg
out
dec
(bad)
out
lds
mul
inc
stos
es
or
(bad)
paddsb
loopne
jle
inc
pop
stos
(bad)
(bad)
dec
icebp
xor
mov
ja
jl
push
cmp
push
pop
aad
call
push
jae
fcom
aaa
in
mov
or
jl
test
pop
xchg
jae
xchg
xor
jecxz
int3
cli
(bad)
(bad)
(bad)
call
scas
sbb
cmp
push
gs
jmp
imul
lds
adc
(bad)
jmp
loope
pop
xor
mov
or
arpl
out
jg
test
(bad)
mov
mov
in
add
or
mov
rol
(bad)
(bad)
inc
bound
fbstp
(bad)
jmp
jo
sub
dec
aaa
mov
xlat
imul
(bad)
(bad)
fidiv
out
fwait
or
fs
mov
sub
inc
xor
clc
xchg
pop
fstp
int
dec
(bad)
(bad)
(bad)
push
inc
sahf
cmp
inc
mov
repz
xor
sub
cs
in
dec
dec
mov
std
(bad)
inc
out
into
dec
popa
into
mov
mov
das
pop
retf
push
(bad)
imul
mov
(bad)
(bad)
(bad)
inc
or
jae
ror
mov
sbb
xchg
sub
scas
fld
in
jecxz
int3
pop
ret
push
mov
cmp
imul
(bad)
jnp
sub
jmp
or
add
outs
dec
cmc
mov
cmps
and
jmp
adc
and
sbb
xor
imul
xor
in
or
aaa
adc
call
ja
add
xchg
repz
inc
or
sbb
jg
(bad)
jmp
(bad)
push
and
std
pop
xchg
pusha
fidiv
cmps
add
(bad)
(bad)
(bad)
jmp
cmc
ror
mov
and
push
leave
xchg
cmp
ficomp
and
outs
jg
fcos
(bad)
(bad)
call
push
idiv
repz
pop
test
ror
pop
lods
adc
(bad)
push
std
dec
jl
cmp
mov
fld
ret
addr16
(bad)
(bad)
jmp
jp
xchg
test
(bad)
jne
mov
inc
cmp
(bad)
dec
inc
jae
dec
adc
in
inc
dec
pop
loopne
call
dec
mov
out
xor
cmp
push
(bad)
sbb
cmp
push
mov
fcom
lods
dec
ds
rol
test
and
fadd
xchg
(bad)
xor
push
ja
and
jmp
inc
(bad)
jmp
mov
push
movs
aad
push
xchg
cmp
and
jle
mov
repnz
mov
int3
sti
mov
call
repnz
mov
mov
inc
pop
ins
add
and
shr
sub
movs
adc
and
(bad)
(bad)
(bad)
inc
or
mov
les
inc
adc
scas
daa
mov
mul
adc
leave
(bad)
jmp
fwait
sbb
mov
or
dec
loope
xchg
adc
mov
add
add
inc
popf
xor
leave
dec
add
cmp
jb
dec
sub
call
and
cmps
sub
(bad)
push
jle
jne
jo
psubq
(bad)
(bad)
(bad)
inc
ficom
cmc
push
add
pop
cmp
pop
outs
mov
retf
in
shl
(bad)
(bad)
(bad)
dec
mov
cmp
dec
xor
rcl
fnstcw
outs
push
mov
mov
call
ins
mov
fisub
fst
retf
pusha
hlt
fild
imul
push
mov
out
gs
sub
es
in
add
movs
jmp
or
shl
jmp
scas
les
sbb
pop
(bad)
(bad)
(bad)
dec
pop
pop
dec
imul
mov
xchg
jno
std
ja
add
les
out
fwait
jg
push
(bad)
(bad)
(bad)
jmp
jg
jb
pop
gs
ins
lock
jle
lea
aam
out
pop
inc
jge
add
sub
add
(bad)
(bad)
inc
lahf
push
bound
jmp
cwde
mov
out
inc
rep
xor
cdq
or
loop
lea
aad
in
jns
js
out
sbb
and
sbb
inc
lea
(bad)
out
jg
(bad)
(bad)
jmp
sub
xor
(bad)
mov
xlat
jbe
loopne
add
in
inc
jb
(bad)
(bad)
push
pop
int3
fbld
in
popa
jno
jne
xlat
test
icebp
faddp
lock
(bad)
jmp
sar
in
mov
dec
push
cmp
sbb
in
mov
(bad)
(bad)
(bad)
jp
push
add
daa
call
inc
cld
aad
aad
ror
scas
in
sbb
mov
sub
dec
mov
or
enter
adc
fbld
jg
loop
lods
movs
dec
cmp
mov
(bad)
(bad)
(bad)
dec
cmps
not
mov
pop
cmp
xchg
popf
dec
push
jns
outs
xchg
retf
aad
cdq
push
or
push
pop
cmp
pop
sub
mov
cdq
(bad)
(bad)
(bad)
inc
mov
dec
mov
ds
jbe
(bad)
(bad)
jle
dec
aas
push
cs
out
jbe
(bad)
(bad)
(bad)
inc
jp
lods
dec
xor
sub
ss
or
jmp
jnp
cmps
add
adc
sbb
sbb
adc
sub
lods
je
pop
push
sahf
xchg
pusha
dec
pop
push
das
push
hlt
call
pop
pop
arpl
xchg
adc
hlt
(bad)
mul
or
sbb
push
out
mov
push
(bad)
(bad)
(bad)
fbld
pop
in
pop
shr
adc
dec
out
scas
cmc
nop
pop
push
pop
fcos
(bad)
(bad)
jmp
mov
aaa
fdivr
shl
test
out
aas
mov
xor
sbb
mov
cmps
cdq
mov
jbe
cmp
mov
adc
retf
(bad)
call
dec
aad
les
push
sub
xchg
dec
call
sub
sar
push
push
mov
gs
xchg
jp
cmp
imul
pushf
(bad)
(bad)
jmp
add
or
xor
ret
fisub
lahf
lahf
mov
leave
(bad)
jmp
cli
(bad)
fstp
xchg
push
(bad)
push
pop
hlt
mov
jle
adc
pusha
xor
(bad)
(bad)
call
fld
ds
mov
test
stos
stc
push
in
jo
mov
sub
(bad)
(bad)
out
(bad)
jae
jp
dec
in
xor
inc
out
jp
in
xchg
sbb
push
push
add
cmps
cmp
out
enter
movs
mov
mov
ror
cmp
dec
push
inc
xchg
sbb
dec
jne
pop
inc
pushf
popa
sar
(bad)
(bad)
inc
dec
(bad)
cmp
movs
loope
dec
dec
sbb
jge
mov
mov
sbb
or
push
movs
pop
sbb
(bad)
adc
and
loop
mov
push
add
inc
(bad)
(bad)
(bad)
(bad)
mov
out
jmp
xor
jne
inc
test
pop
in
rol
jns
fstp
sbb
gs
scas
stos
jg
aaa
std
adc
pushf
(bad)
out
cli
enter
into
cs
ss
(bad)
(bad)
(bad)
cmp
cmp
idiv
pop
test
push
rol
scas
sbb
loopne
iret
cmp
sbb
(bad)
call
ja
into
mov
mov
add
int3
dec
add
mov
(bad)
jl
jmp
and
(bad)
(bad)
mov
mov
or
mov
sbb
pop
shr
mov
(bad)
push
cld
pop
jne
sub
push
xor
stos
cwde
aas
in
test
dec
adc
(bad)
(bad)
(bad)
push
xlat
sub
ror
sub
xchg
outs
(bad)
fidivr
inc
(bad)
cmp
(bad)
(bad)
call
cmp
xchg
scas
loope
in
push
dec
into
ss
fnstsw
test
or
pop
cmp
xor
call
push
sar
outs
jmp
inc
test
lock
or
sar
shl
jg
mov
jb
push
sbb
leave
or
(bad)
(bad)
(bad)
jmp
sti
lahf
retf
push
mov
out
xor
test
mov
add
jb
mov
std
sub
ss
(bad)
(bad)
call
pop
shl
js
scas
push
and
jmp
jns
rcr
jp
imul
sahf
(bad)
(bad)
(bad)
push
jl
test
loope
sbb
adc
lock
scas
aas
mov
pop
sbb
xlat
leave
mov
pop
(bad)
(bad)
dec
sbb
test
aam
cmp
aad
jl
push
jno
pop
scas
(bad)
(bad)
(bad)
(bad)
inc
das
arpl
xchg
sti
add
out
cdq
pop
xchg
std
adc
fiadd
(bad)
push
jmp
leave
jle
jo
dec
out
sti
(bad)
(bad)
(bad)
push
test
pusha
enter
push
loopne
push
push
mov
scas
pop
pop
sub
xchg
pop
adc
mov
jnp
loop
ret
into
ror
xor
pop
or
xchg
jmp
jmp
cld
mov
jno
into
xchg
jo
or
call
push
cld
ins
hlt
pop
push
add
xchg
mov
outs
push
or
inc
(bad)
jmp
dec
ins
and
hlt
(bad)
rcr
fwait
push
jl
fdiv
pop
jno
(bad)
(bad)
jmp
lds
sub
jp
loopne
into
leave
cmova
cmp
outs
cwde
mov
(bad)
call
mov
inc
mov
popf
mul
fucomi
jmp
call
mov
enter
scas
lea
int
xchg
(bad)
inc
push
cmp
inc
sbb
aas
pop
push
aad
(bad)
(bad)
call
push
repnz
fdivr
js
add
or
and
bound
call
xchg
jne
sbb
jl
ins
mov
dec
out
dec
repz
fsqrt
(bad)
(bad)
inc
pop
iret
and
pusha
xor
lods
stc
jle
cmp
test
aam
in
xchg
push
and
arpl
in
call
mov
and
shl
repnz
(bad)
(bad)
jmp
punpcklwd
inc
mov
pop
in
dec
adc
jp
mov
into
xchg
lods
call
std
add
push
loope
js
ins
xchg
(bad)
imul
xor
dec
ins
dec
aad
nop
clc
mov
call
jo
(bad)
(bad)
(bad)
jg
out
inc
jecxz
iret
stos
adc
adc
xor
or
mov
test
or
(bad)
(bad)
dec
mov
add
mov
push
fistp
sbb
ret
xchg
(bad)
(bad)
(bad)
push
mov
push
movs
mov
dec
sbb
sub
adc
rol
(bad)
(bad)
jmp
imul
ds
cs
mov
retf
loopne
jg
xor
ins
loop
lock
(bad)
jmp
fnstcw
mov
add
push
mov
loop
fs
inc
movs
add
dec
sub
sbb
(bad)
(bad)
(bad)
call
ret
int
dec
je
sbb
add
(bad)
ds
(bad)
mov
sub
out
pop
out
(bad)
(bad)
(bad)
jge
adc
rol
add
mov
or
jne
dec
xchg
pop
out
push
(bad)
ds
(bad)
(bad)
inc
and
out
jl
stos
mov
mov
pop
jns
jge
fsubr
out
out
(bad)
(bad)
inc
jbe
mov
mov
mov
outs
cmc
push
xchg
aas
out
xchg
ins
and
push
(bad)
(bad)
call
cwde
push
jno
hlt
push
cmp
outs
sahf
outs
lea
ret
pop
mov
inc
mov
add
inc
or
mov
jmp
mov
out
and
push
rcr
fisub
jmp
jge
je
test
pop
loopne
push
cmc
adc
lock
call
pop
mov
xchg
fptan
(bad)
jmp
jae
jne
les
div
push
(bad)
(bad)
(bad)
call
das
(bad)
int
push
mov
sar
mov
je
xor
xor
sti
jmp
adc
nop
sar
fmul
mov
test
mov
adc
push
pop
pushf
sub
and
ficomp
mov
bnd
ins
xchg
cmps
aaa
push
fmul
push
mov
call
and
ss
jbe
or
enter
sbb
inc
sub
or
call
aad
xchg
mov
aam
mov
dec
mov
and
xchg
mov
fcomip
(bad)
push
inc
mov
sbb
(bad)
cld
xchg
mov
arpl
jp
(bad)
(bad)
(bad)
push
push
idiv
pop
aad
aaa
jmp
cmps
imul
es
and
cmp
xor
dec
add
jmp
or
test
mov
add
(bad)
(bad)
(bad)
(bad)
cli
test
xchg
in
enter
inc
data16
jae
inc
fimul
in
jnp
xchg
mov
aam
add
(bad)
cmp
xor
xchg
push
jp
inc
xchg
or
(bad)
(bad)
(bad)
jg
xor
ffreep
add
push
lock
adc
mov
push
(bad)
(bad)
(bad)
(bad)
fidiv
pop
ins
ja
jno
sbb
cmc
cmp
jmp
jp
test
add
(bad)
(bad)
call
movs
out
(bad)
aaa
pop
int3
pop
inc
stos
mov
ins
mov
and
push
push
xchg
mov
outs
sbb
add
xchg
(bad)
pop
cmp
or
pop
ins
pop
cmp
jns
sbb
push
mov
fsubr
ins
adc
into
ja
(bad)
(bad)
dec
jg
add
ins
sub
ret
or
fstp
sahf
mov
(bad)
(bad)
(bad)
inc
mov
sub
enter
pop
jbe
inc
cmps
adc
cmp
xchg
(bad)
call
cdq
adc
mov
sub
inc
xor
out
enter
(bad)
(bad)
call
ror
lahf
int
jecxz
lock
sbb
sub
(bad)
(bad)
(bad)
dec
clc
dec
nop
addr16
pop
jl
jmp
shl
pop
pop
lods
shr
jle
(bad)
(bad)
inc
inc
push
jmp
fcomp
jg
sahf
xor
mov
mov
retf
xlat
cmp
xchg
in
or
push
(bad)
(bad)
push
mov
pushf
ret
mov
inc
test
imul
or
(bad)
addr16
(bad)
(bad)
(bad)
in
scas
sbb
mov
adc
xchg
das
pop
test
inc
retf
ja
lock
jmp
jmp
mov
inc
jae
adc
push
jmp
add
or
mov
icebp
mov
clc
sub
xchg
jg
jbe
sbb
jmp
scas
out
and
in
ss
jl
div
imul
inc
xor
into
pop
adc
(bad)
(bad)
inc
and
out
ret
xchg
fnstenv
and
inc
out
adc
or
loope
mov
lock
lods
mov
sub
(bad)
mov
mov
jl
(bad)
shl
std
iret
push
jo
mov
sbb
cmp
push
(bad)
jmp
jp
mov
outs
movs
test
or
(bad)
retf
in
xlat
call
mov
(bad)
(bad)
(bad)
mov
inc
loop
push
mov
cmp
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
jmp
cmp
pop
mov
add
sbb
stos
and
div
clc
pop
call
in
lock
out
pusha
push
cs
mov
push
outs
fwait
rcl
(bad)
pop
sar
(bad)
(bad)
call
dec
lds
in
mov
aad
fs
inc
xchg
mov
adc
loope
aad
pop
mov
(bad)
jmp
movs
sbb
stos
xor
xchg
xchg
mov
mov
jg
or
jno
mov
xor
imul
(bad)
dec
jmp
push
aas
les
daa
dec
inc
and
stos
movs
sbb
add
shl
es
data16
pop
clc
jmp
xor
sub
sub
cmp
shl
(bad)
(bad)
cmp
ja
mov
xchg
adc
pop
outs
int3
push
mov
hlt
xor
inc
push
mov
and
(bad)
adc
(bad)
push
inc
adc
jp
rcl
lea
and
inc
mov
into
pushf
or
pop
popa
sbb
dec
push
ins
and
jmp
fiadd
rcr
pushf
and
(bad)
call
push
lods
or
pop
adc
adc
lea
retf
xor
or
adc
jmp
movs
into
and
cmp
adc
enter
add
or
jmp
pop
mov
jmp
lds
gs
mov
inc
test
sbb
sub
hlt
push
push
cmp
(bad)
(bad)
(bad)
dec
call
jne
iret
lods
mov
adc
push
push
imul
jg
add
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pop
xchg
in
neg
xchg
cmps
ins
sub
inc
adc
adc
fs
xchg
dec
sub
clc
sub
test
mov
dec
rol
mov
or
int
push
(bad)
jmp
pop
sub
into
sbb
pop
mov
jl
shr
push
dec
dec
(bad)
(bad)
push
cmp
and
out
in
cmp
xchg
mov
loope
fld
stos
or
jmp
or
mov
sbb
xor
mov
mov
xchg
and
or
(bad)
(bad)
(bad)
jmp
jmp
test
jmp
sub
add
sbb
dec
test
dec
movs
in
(bad)
fild
(bad)
call
loopne
push
lea
gs
adc
mov
dec
adc
cmc
push
(bad)
jmp
(bad)
(bad)
(bad)
push
hlt
jb
shl
and
jmp
jb
cli
pop
dec
add
push
mov
(bad)
(bad)
jmp
sbb
rol
add
dec
add
popa
retf
stos
and
mov
mov
or
(bad)
(bad)
call
pop
jge
test
add
jns
xchg
xchg
push
das
(bad)
cwde
nop
movs
out
and
sti
add
test
lahf
jnp
mov
mov
mov
outs
mov
movs
inc
mov
xchg
movs
imul
neg
std
cwde
(bad)
(bad)
(bad)
dec
cmp
in
shl
jbe
cmp
(bad)
sub
pushf
sahf
test
dec
call
jne
rol
dec
fs
mov
or
in
(bad)
adc
scas
add
stos
(bad)
jg
jmp
(bad)
stc
scas
push
pop
adc
rcr
pop
nop
or
mov
jecxz
jle
dec
data16
sbb
pop
xchg
sub
clc
(bad)
(bad)
call
dec
add
lahf
xchg
or
cmc
mov
sbb
pop
jmp
and
inc
fwait
mov
(bad)
out
scas
or
jmp
mov
mov
mov
push
jecxz
push
int
jmp
and
(bad)
(bad)
push
rcr
inc
xor
loop
aam
fidivr
jg
frstor
rol
(bad)
(bad)
(bad)
call
xor
pusha
(bad)
jmp
mov
push
mov
adc
imul
mov
dec
push
cld
push
jo
out
and
cmp
or
mov
jmp
xor
mov
xchg
imul
clc
sar
(bad)
(bad)
push
mov
jns
xchg
jb
fmul
imul
xor
and
movs
sti
mov
mov
(bad)
(bad)
jg
retf
adc
and
adc
pop
or
int
loopne
sub
add
ror
push
add
xchg
xor
ins
sbb
cmc
and
jg
or
(bad)
push
div
add
leave
aas
pop
cmp
or
nop
out
xchg
loope
outs
inc
in
(bad)
(bad)
(bad)
call
dec
push
xchg
mov
cmc
adc
and
not
fcomp
not
lods
or
push
adc
pop
sub
inc
retf
xchg
mov
lock
fsub
pop
movs
dec
pop
dec
stos
adc
inc
jle
sbb
xor
(bad)
(bad)
(bad)
jmp
int3
mov
xchg
(bad)
cvtdq2ps
and
ins
pop
dec
call
lods
mov
(bad)
(bad)
(bad)
mov
jb
and
icebp
(bad)
inc
stc
inc
mov
push
in
(bad)
(bad)
(bad)
(bad)
call
(bad)
cmp
(bad)
adc
(bad)
jmp
ins
in
dec
inc
sbb
(bad)
(bad)
mov
ret
adc
mov
mov
mov
or
jp
mov
call
dec
lahf
or
xlat
inc
js
gs
xor
into
aam
(bad)
inc
stc
or
and
push
shl
addr16
jmp
adc
(bad)
(bad)
inc
jge
adc
cdq
mov
fwait
fs
jecxz
push
mov
push
std
inc
test
stc
add
and
add
js
ret
js
mov
(bad)
(bad)
(bad)
call
bound
sub
das
adc
xchg
mov
sbb
test
scas
out
test
dec
(bad)
(bad)
(bad)
inc
add
fbld
adc
ja
retf
je
das
(bad)
lock
sbb
and
stc
(bad)
(bad)
dec
mov
sbb
out
call
into
pop
ja
imul
pop
pushf
mov
cdq
rcl
test
pop
ins
jecxz
xchg
jmp
dec
cld
ins
lea
mov
dec
imul
pop
dec
jmp
out
sahf
(bad)
and
jmp
cmp
les
jae
aad
out
fcmovne
(bad)
ds
cmp
jmp
(bad)
push
add
in
and
xor
stos
inc
retf
add
mov
(bad)
(bad)
mov
or
sub
fidivr
lods
ucomiss
and
outs
test
sub
(bad)
(bad)
(bad)
(bad)
jle
minps
xor
idiv
or
mov
push
mov
push
pop
mov
dec
xor
mov
pushf
ss
retf
xor
es
push
pop
call
stc
ret
xlat
nop
les
push
outs
call
call
mov
dec
xor
cwde
int3
mov
fcmove
jecxz
inc
jns
(bad)
(bad)
(bad)
call
inc
lods
push
scas
fistp
repz
in
xchg
xor
sub
mov
sub
jl
dec
lock
pop
in
adc
xchg
jae
cli
das
popf
jmp
and
xchg
(bad)
(bad)
(bad)
jmp
push
clc
test
pushf
aaa
push
shl
adc
ret
xor
aas
fidiv
mov
rcl
in
mov
mov
shr
or
(bad)
push
je
cmps
jns
sbb
movs
jb
sar
jmp
mov
call
add
icebp
mov
adc
mov
fnstsw
jle
sti
pushf
fldenv
mov
pop
fcomip
mov
(bad)
(bad)
(bad)
call
retf
push
ror
lea
push
popa
push
sbb
(bad)
loopne
pop
pop
(bad)
retf
xor
jecxz
(bad)
mov
out
(bad)
jmp
mov
out
inc
test
sub
cmp
sub
add
aas
jmp
sub
not
nop
(bad)
(bad)
(bad)
jg
ins
sbb
je
adc
or
add
cmp
inc
sar
mov
aaa
jmp
cli
dec
adc
out
leave
or
out
push
cmp
fimul
packssdw
sbb
(bad)
scas
clc
(bad)
call
outs
pop
iret
int
mov
test
and
nop
jp
gs
or
(bad)
call
retf
scas
pop
out
and
adc
xor
mov
mov
sub
jp
mov
sbb
in
fld
xchg
(bad)
(bad)
(bad)
jmp
xchg
leave
stc
lods
mov
aam
sbb
(bad)
mov
retf
push
mov
pop
mov
sbb
lock
sub
imul
and
fs
test
(bad)
(bad)
push
int3
repz
ret
arpl
call
mov
jle
adc
(bad)
(bad)
(bad)
inc
popf
addps
dec
mov
ficomp
push
push
cmc
icebp
or
div
mov
mov
xor
cmc
jge
add
test
dec
fstp
ja
add
dec
(bad)
call
or
sahf
push
arpl
fistp
or
mov
push
cld
cmp
sbb
mov
sub
(bad)
push
icebp
das
in
int
adc
mov
fcomip
in
loopne
hlt
inc
add
push
imul
in
lock
(bad)
in
and
fldcw
mov
cmps
cli
xchg
pop
rol
pop
pusha
xchg
retf
inc
adc
or
mov
mov
scas
aad
mov
sbb
imul
xor
mov
ins
test
mov
xor
mov
sbb
std
gs
cld
(bad)
in
sti
out
dec
pushf
outs
in
mov
dec
mov
rcr
dec
lods
imul
push
cmp
es
mov
call
pop
test
jno
mov
repnz
ja
out
or
pop
fsubr
jg
inc
fcomp
(bad)
(bad)
call
fs
ja
sar
scas
jmp
lahf
imul
inc
push
cwde
cs
(bad)
(bad)
(bad)
fsub
push
sub
(bad)
xchg
ss
dec
push
and
xor
aam
sub
(bad)
inc
or
dec
icebp
push
idiv
(bad)
jg
sbb
inc
adc
mov
in
mov
(bad)
(bad)
jmp
repz
(bad)
retf
test
dec
cld
in
scas
xchg
enter
popa
pop
cld
inc
pop
cmp
(bad)
mov
xchg
fild
push
push
xor
outs
push
ficomp
pop
inc
fs
adc
cmp
lea
fsub
xchg
les
clc
es
mov
mov
aaa
movs
div
mov
in
out
dec
out
jge
sahf
(bad)
(bad)
(bad)
call
pushf
in
shl
jmp
jae
std
lea
sbb
call
mov
call
inc
jb
mov
iret
inc
cmp
inc
pop
mov
(bad)
mov
scas
rcl
call
pop
cli
sti
mov
aad
ja
sbb
adc
cmp
fsub
test
adc
popf
lods
jge
test
sub
mov
xchg
pop
(bad)
(bad)
call
fimul
pusha
lds
lahf
aas
add
xchg
(bad)
add
adc
mov
jmp
out
xor
fist
mov
mov
aas
inc
ja
out
dec
dec
out
jno
(bad)
(bad)
jmp
loop
dec
fbld
pop
ja
dec
inc
or
outs
dec
scas
pop
clc
(bad)
clc
cwde
and
and
les
fwait
je
sti
clc
sub
jmp
xchg
fiadd
pop
jns
pop
test
popf
not
outs
outs
mov
or
aam
nop
xor
ins
in
adc
test
dec
popa
inc
dec
xchg
jge
std
pop
adc
pop
push
mov
jl
sbb
lods
jo
mov
jae
icebp
int
cmp
(bad)
(bad)
push
and
nop
mov
(bad)
pushf
(bad)
adc
cdq
pop
dec
iret
pop
xchg
(bad)
(bad)
(bad)
jmp
out
rol
(bad)
sub
push
cmp
push
shl
sti
in
or
ins
popa
jnp
call
lods
sti
gs
shl
xor
dec
jbe
lods
pop
push
jo
icebp
(bad)
call
inc
jnp
inc
adc
das
add
dec
or
mov
jbe
jbe
(bad)
(bad)
mov
imul
loope
rol
xchg
xor
cmp
lea
cdq
push
(bad)
(bad)
jmp
call
mov
mov
jmp
cmp
repz
lea
pop
(bad)
dec
mov
mov
mov
int3
inc
out
mov
call
je
in
mov
dec
aam
dec
pop
pop
inc
out
shl
out
rcr
sub
sahf
lea
scas
rcl
neg
shr
cli
fwait
pop
xchg
fbld
mov
adc
(bad)
jmp
(bad)
(bad)
and
test
inc
mov
pop
mov
pop
imul
(bad)
(bad)
call
retf
rcr
sub
jge
jmp
push
(bad)
leave
cmc
cdq
push
xchg
outs
xchg
clc
jmp
xchg
cmp
aam
cmc
jmp
loop
(bad)
(bad)
dec
jge
add
ja
sbb
shr
icebp
in
sbb
sbb
rol
dec
pop
xchg
ins
aaa
std
jg
sbb
mov
pop
ret
je
les
sbb
sbb
ins
or
dec
shr
retf
mov
mov
or
(bad)
jmp
pop
add
fadd
xor
imul
(bad)
push
push
inc
fcom
push
hlt
push
lods
dec
mov
enter
fist
movs
(bad)
(bad)
(bad)
push
fmul
mov
mov
pop
ss
pop
ret
jl
test
(bad)
enter
mov
(bad)
(bad)
(bad)
dec
sbb
mov
mov
push
jp
push
jg
ror
xchg
mov
adc
pop
fidivr
addr16
dec
xchg
add
adc
cmp
ja
sar
mov
test
(bad)
(bad)
call
mov
mov
mov
mov
xchg
mov
mov
sbb
adc
outs
and
fidivr
mov
not
xor
pop
sub
mov
les
jno
test
adc
mov
pop
out
out
inc
fisub
call
dec
adc
mov
sbb
mov
ss
test
and
mov
add
shr
stos
pop
xor
lock
cmp
je
les
jge
(bad)
(bad)
(bad)
(bad)
jle
lods
test
ins
jmp
jg
inc
cmp
cwde
das
mov
mov
(bad)
call
and
bound
in
popa
int3
cmp
ror
pusha
adc
inc
mov
inc
dec
(bad)
(bad)
(bad)
fsubrp
fbstp
sub
mov
mov
push
aam
cli
repnz
(bad)
call
mov
pop
pop
sti
mov
popf
std
pop
adc
mov
jmp
std
adc
sbb
aaa
aas
fcom
adc
mov
xor
in
push
fdivr
(bad)
(bad)
push
jno
pushf
and
ror
xor
scas
outs
out
clc
xchg
cmps
inc
(bad)
(bad)
push
inc
cld
jle
or
pop
add
jge
pop
stos
ins
out
nop
xchg
std
mov
out
(bad)
jmp
enter
add
or
retf
out
xor
repz
xchg
add
adc
adc
hlt
ret
aaa
js
xchg
stos
hlt
mov
addr16
test
dec
lods
(bad)
jle
mov
out
leave
stc
pusha
dec
pusha
cld
jg
push
clc
(bad)
(bad)
call
add
xor
je
pop
mov
call
ja
(bad)
mov
(bad)
(bad)
out
jo
retf
xor
aas
(bad)
ja
dec
mov
mov
ret
xchg
idiv
mov
mov
fistp
int
and
stos
sbb
push
shl
rcl
movs
div
mov
or
cmp
(bad)
dec
loopne
mov
aad
mov
into
retf
aaa
repnz
push
sbb
loopne
inc
push
stc
jae
retf
jecxz
retf
push
fwait
hlt
mov
(bad)
mov
hlt
cmps
sar
outs
ins
sbb
fdivr
jnp
bound
cmp
fstp
scas
mov
(bad)
dec
outs
(bad)
test
jmp
call
and
(bad)
(bad)
jg
adc
call
ror
pop
(bad)
push
cmp
mov
push
(bad)
call
push
mov
mov
js
js
xchg
jge
sub
(bad)
dec
shr
cs
lods
push
adc
xor
mov
add
jae
movs
xor
ja
jbe
add
lock
(bad)
inc
jbe
push
ins
call
sub
inc
pop
int
mov
mov
inc
repz
out
and
sub
mov
mov
outs
mov
iret
inc
mov
arpl
push
sub
test
clc
dec
test
(bad)
(bad)
(bad)
jp
sbb
and
or
dec
popf
add
or
mov
(bad)
push
in
cmp
jmp
mov
sbb
mov
mov
dec
xor
and
movs
icebp
dec
aad
fnstenv
xor
fs
xor
push
xchg
aas
mov
and
ss
and
in
sbb
sub
jg
xor
xor
(bad)
(bad)
jg
lea
push
ret
xor
outs
add
aaa
mov
pop
mov
(bad)
(bad)
(bad)
(bad)
iret
cmps
out
xchg
pop
fld
xchg
cmp
sub
out
lds
push
pop
movs
xchg
sbb
jmp
cmp
loop
(bad)
sbb
retf
inc
inc
push
push
xchg
mov
lock
dec
test
adc
dec
cmp
loope
leave
dec
scas
movs
out
(bad)
(bad)
dec
movs
shl
inc
in
xchg
pop
pop
pop
mov
mov
ss
popa
jo
pop
jne
inc
push
nop
shr
lods
scas
or
fwait
cwde
or
scas
sub
in
jle
sbb
loope
(bad)
fs
jmp
cmc
imul
sbb
pushf
and
cmp
lock
(bad)
inc
mov
sub
jle
lock
xlat
xrelease
dec
cmp
movs
sub
push
cmp
xchg
popa
sbb
(bad)
(bad)
inc
stos
inc
mov
push
push
int
xor
sahf
iret
je
mov
idiv
cli
dec
stc
fmul
(bad)
(bad)
(bad)
push
rol
(bad)
dec
cmovb
add
jle
sti
xchg
cmp
stc
adc
and
(bad)
(bad)
(bad)
(bad)
call
jae
cmp
stos
jmp
outs
leave
jg
sbb
or
jmp
xor
dec
push
rol
cmp
call
icebp
test
call
enter
or
sbb
cmps
xchg
jp
test
ret
xchg
test
push
out
and
mov
fidivr
pop
cmp
xchg
int
dec
lods
jmp
(bad)
call
movs
xlat
cmp
inc
dec
mov
dec
mov
xor
add
cmp
out
push
outs
lea
dec
adc
test
stos
sbb
pop
mov
mov
xchg
mov
mov
(bad)
cmp
cmp
mov
jp
sub
adc
pop
outs
push
das
pop
inc
in
loope
sub
sub
jmp
(bad)
call
fsubr
sbb
xor
mov
stos
cwde
adc
imul
jnp
mov
(bad)
fcomip
add
mov
bound
add
push
imul
jmp
inc
ror
jmp
sahf
sbb
cmc
push
mov
inc
dec
adc
adc
pusha
sub
jnp
jecxz
(bad)
jg
inc
jecxz
mov
pop
out
js
sub
not
mov
jle
(bad)
mov
das
pop
ret
jmp
add
outs
mov
es
call
pop
mov
sbb
and
pop
sub
cmp
(bad)
(bad)
(bad)
(bad)
jmp
sub
stc
(bad)
mov
xchg
xchg
mov
fcmovu
ffreep
xor
mov
or
ret
(bad)
in
add
pop
popa
hlt
cwde
xchg
xchg
fnstsw
fdivr
or
jmp
sub
inc
and
inc
adc
adc
lds
pop
icebp
or
xor
std
pusha
cmp
and
(bad)
jmp
arpl
test
sub
mov
cdq
inc
xor
aam
into
call
(bad)
dec
sbb
xchg
cli
jmp
cmps
push
call
mov
or
or
pop
pop
icebp
dec
mov
stc
scas
nop
mov
int
pop
cmp
(bad)
(bad)
(bad)
push
test
cmps
cmc
adc
pushf
add
mov
mov
sub
rcr
aad
(bad)
(bad)
jmp
stc
cmp
sub
(bad)
dec
jg
sbb
cmp
mov
ud2
jle
mov
cmc
repnz
(bad)
(bad)
(bad)
std
mul
rol
cdq
out
vrsqrt14sd
mov
dec
mov
in
retf
retf
jg
xchg
(bad)
dec
add
in
mov
xor
sub
(bad)
sub
push
push
mov
jg
(bad)
jmp
not
ss
pop
push
jmp
push
push
fisttp
jno
(bad)
inc
js
and
(bad)
sti
cmp
cli
xchg
xchg
test
jle
out
mov
add
sti
(bad)
inc
pop
xor
stos
jmp
push
dec
sahf
mov
xor
inc
mov
loope
scas
mov
retf
pop
sub
jo
xchg
das
lods
sahf
and
(bad)
(bad)
(bad)
push
jnp
popf
mov
fs
stc
dec
repnz
cmp
mov
rcl
cwde
in
xchg
idiv
(bad)
out
cli
cmp
jns
pushf
push
lds
add
nop
loope
call
dec
inc
jb
lahf
xor
push
sub
sbb
jb
stos
sub
(bad)
mov
push
inc
pop
add
ss
inc
add
(bad)
call
in
stos
mov
cmp
fistp
or
xchg
jp
mov
and
fwait
pop
fmul
out
xchg
adc
cmp
ror
js
stos
inc
cmp
xchg
push
mov
dec
rcl
cwde
xchg
mov
dec
pop
push
xor
xor
cld
mov
adc
inc
push
or
mov
cmps
dec
sbb
call
jo
icebp
pop
sbb
push
sub
retf
jmp
and
ds
mov
push
daa
lahf
pop
pop
jae
(bad)
(bad)
call
ret
idiv
daa
dec
addr16
scas
sbb
cmp
test
cmp
xor
loope
dec
clc
(bad)
call
dec
and
pop
ins
fild
mov
jmp
(bad)
(bad)
inc
lods
stc
adc
call
jmp
aam
adc
sub
(bad)
(bad)
jg
cmp
fsub
pop
aad
mov
jmp
addr16
jmp
xor
outs
mov
les
push
leave
adc
and
lock
fistp
mov
xor
daa
or
mov
jb
iret
shl
(bad)
(bad)
(bad)
push
call
shl
out
jbe
pusha
ds
mov
or
(bad)
(bad)
(bad)
jmp
sbb
sub
fwait
pop
inc
sbb
push
jmp
(bad)
and
(bad)
(bad)
(bad)
call
je
(bad)
or
daa
rol
pop
dec
push
xor
(bad)
and
jnp
jae
ja
ret
push
(bad)
(bad)
(bad)
(bad)
cli
cmps
sbb
movs
sub
imul
xchg
outs
fstp
cmps
(bad)
(bad)
call
adc
adc
jmp
xor
nop
mov
lea
je
sub
or
mov
cmp
call
mov
xor
jae
jmp
pop
sub
data16
ret
(bad)
fsub
push
xchg
stos
push
add
(bad)
(bad)
jmp
lds
icebp
arpl
sbb
jge
(bad)
ins
mov
push
sub
mov
(bad)
mov
jge
mov
sti
and
jmp
pop
jne
out
daa
add
(bad)
(bad)
dec
dec
mov
outs
shl
fcmove
pusha
mov
in
add
ficomp
adc
outs
fcomp
or
mov
cmp
and
daa
xchg
add
ds
jecxz
jge
xchg
(bad)
(bad)
(bad)
cmp
ret
mov
movs
arpl
fs
push
add
inc
test
mov
outs
(bad)
(bad)
(bad)
call
mov
inc
aas
js
xchg
jge
jge
pop
adc
xchg
adc
loop
lods
loopne
ins
jl
xor
das
mov
cmp
lock
xor
mov
fisub
sar
(bad)
jg
sar
push
iret
mov
fldcw
adc
imul
lods
(bad)
mov
push
or
out
xor
jno
(bad)
jmp
jb
pop
jmp
outs
clc
(bad)
dec
adc
sar
test
out
lods
retf
das
aad
(bad)
call
cwde
add
jbe
dec
and
rcl
jae
aam
dec
add
inc
clc
add
lahf
sbb
hlt
lods
mov
jg
pop
push
sub
es
rcr
hlt
ret
cmps
nop
(bad)
call
call
sar
cmc
pop
into
mov
outs
bound
pop
jbe
icebp
(bad)
jg
(bad)
jns
(bad)
fstp
mov
add
mov
ret
xchg
sar
lods
(bad)
(bad)
fcomip
cdq
cmp
pop
xchg
bound
ja
mov
jmp
xchg
lods
(bad)
fcomip
call
fs
dec
cdq
in
(bad)
sub
add
mov
imul
dec
push
pop
mov
inc
outs
mov
sti
cmps
cmc
dec
adc
retf
(bad)
std
(bad)
(bad)
out
or
or
jmp
add
cmp
das
icebp
jo
xor
xchg
or
push
xchg
std
(bad)
call
ret
mov
cld
in
int
xor
cmp
enter
dec
stos
lock
call
mov
xchg
ret
test
pop
cmp
dec
(bad)
jmp
xchg
(bad)
and
movs
clc
aad
mov
xor
movs
aad
or
clc
(bad)
(bad)
inc
in
idiv
test
popf
dec
cmps
mov
stos
or
pop
mov
jmp
or
(bad)
jmp
jno
lods
jg
jnp
data16
popa
(bad)
(bad)
(bad)
jmp
lods
cmp
lds
sbb
dec
ret
and
fwait
cwde
imul
cmps
cmp
(bad)
(bad)
(bad)
call
sbb
dec
dec
(bad)
(bad)
cmp
xchg
xor
scas
cmps
bound
(bad)
jl
push
jp
xchg
sub
das
pop
lods
cld
stos
mov
(bad)
(bad)
call
lahf
scas
or
jmp
cmp
cdq
cdq
pop
xchg
push
or
pop
sub
sbb
in
out
cld
(bad)
push
popf
test
inc
aad
shl
mov
xor
push
inc
xchg
dec
fdivrp
(bad)
(bad)
call
rol
fmul
xchg
in
jmp
or
leave
loope
fild
jae
fs
inc
idiv
add
mov
ja
cmp
(bad)
(bad)
call
jo
cmp
sub
(bad)
pop
xor
xchg
repnz
xchg
mov
dec
lahf
shr
(bad)
(bad)
(bad)
in
cdq
mov
(bad)
out
push
dec
(bad)
fisubr
add
cmps
cmp
pop
mov
(bad)
(bad)
fistp
mov
inc
popf
repnz
aaa
(bad)
nop
xor
adc
(bad)
(bad)
mov
cwde
call
scas
lea
cmps
pop
mov
int3
jno
popf
pop
loopne
(bad)
(bad)
dec
cmp
cmp
dec
mov
jle
retf
push
and
shr
cmps
inc
mov
dec
test
fsub
fadd
inc
mov
cmp
loopne
jmp
and
xchg
jns
push
sub
xor
ss
clc
cmp
jmp
aad
xchg
mov
xchg
and
adc
sbb
adc
or
(bad)
(bad)
call
retf
and
mov
ds
or
jle
imul
(bad)
mov
inc
jbe
dec
ret
(bad)
es
daa
mov
add
(bad)
(bad)
arpl
cmps
jmp
jle
add
(bad)
(bad)
(bad)
cli
lds
push
into
test
push
ja
cmc
add
jo
jb
dec
jecxz
stos
mov
mov
jb
pop
xlat
out
pop
(bad)
(bad)
(bad)
(bad)
jp
mov
mov
lock
pushf
bound
inc
dec
fist
les
ins
push
jmp
jo
pop
lock
sbb
imul
icebp
mov
xchg
add
sbb
out
(bad)
jecxz
clc
(bad)
jmp
into
inc
mov
ret
inc
daa
push
fbld
dec
pop
(bad)
(bad)
(bad)
inc
and
mov
sbb
add
test
(bad)
dec
inc
and
jbe
pop
out
mov
mov
(bad)
(bad)
jg
mov
inc
sub
in
jmp
xor
lahf
inc
rcr
in
xor
cmp
sub
sbb
arpl
fsubr
push
push
adc
sub
mov
mov
aas
and
(bad)
(bad)
cld
adc
shl
cmp
arpl
cmp
mov
inc
test
xchg
out
movs
jmp
jo
push
jge
pop
outs
or
test
mov
pop
push
jmp
push
mov
in
inc
mov
xchg
sar
(bad)
(bad)
(bad)
call
es
test
fst
in
test
ret
dec
(bad)
lods
fimul
mov
inc
xchg
mov
test
(bad)
call
bound
jno
loop
int
jns
pop
dec
popf
aaa
je
test
test
dec
inc
fwait
not
les
dec
into
xor
mov
(bad)
(bad)
(bad)
mov
(bad)
lods
push
and
fisttp
jbe
out
sbb
lahf
and
cld
iret
add
cli
(bad)
(bad)
push
cli
(bad)
push
mov
and
or
jp
fcmovnu
mov
jecxz
int3
inc
outs
mov
outs
ins
sahf
inc
fadd
cs
gs
call
pusha
pop
lods
xor
push
inc
inc
(bad)
ds
mov
sub
pop
mov
out
mov
(bad)
jmp
mov
xchg
rol
stos
push
dec
sbb
push
(bad)
fmul
repnz
mov
and
nop
and
scas
sti
sahf
pop
sar
call
adc
test
xchg
and
(bad)
(bad)
dec
jns
repz
stos
dec
fiadd
(bad)
mov
dec
in
std
jns
and
jmp
addr16
std
sahf
dec
sbb
(bad)
shufps
and
rcr
mov
icebp
inc
xchg
les
inc
lahf
repz
mov
sub
push
int3
(bad)
(bad)
jg
push
lds
xlat
data16
inc
ret
pop
pop
test
pop
push
jecxz
xchg
repz
test
pusha
sahf
data16
mov
in
sub
pop
fld
int3
(bad)
(bad)
(bad)
call
push
push
xchg
adc
push
mov
xor
xchg
inc
jmp
jmp
(bad)
fistp
adc
mov
xchg
xor
js
jbe
idiv
std
(bad)
(bad)
(bad)
call
mov
fstp
das
in
mov
mov
aaa
retf
rcl
cwde
dec
(bad)
(bad)
(bad)
push
ficom
or
jp
pop
ins
clc
sar
and
jmp
(bad)
(bad)
(bad)
clc
or
fisubr
aad
push
cwde
fdiv
xchg
ss
rcl
in
ret
gs
(bad)
mov
std
adc
xor
mov
xchg
fcom
rcr
push
in
or
(bad)
(bad)
inc
cmps
adc
jo
repz
fisub
test
add
xchg
es
(bad)
(bad)
dec
and
push
leave
jmp
sti
test
adc
inc
xor
sbb
or
sub
xor
test
jmp
xlat
loop
ja
and
daa
outs
push
int
jo
dec
pop
cli
(bad)
(bad)
mov
sbb
test
mov
adc
mov
pusha
(bad)
(bad)
mov
mov
xchg
leave
mov
popf
jae
pop
ins
data16
rcl
jmp
(bad)
(bad)
(bad)
inc
nop
inc
sub
movs
add
cs
sti
fisttp
fdiv
dec
dec
out
movs
xor
(bad)
jmp
(bad)
mov
sub
in
sti
int3
dec
xchg
add
outs
pop
cmp
(bad)
repnz
inc
mov
clc
adc
mov
nop
pop
int
or
jg
lods
sbb
or
test
xchg
lds
cmp
(bad)
dec
pop
aas
dec
cli
mov
fist
ficomp
mov
aam
push
adc
xchg
hlt
out
mov
and
sbb
les
cli
nop
cmps
daa
nop
inc
jno
retf
pop
leave
cli
(bad)
in
push
int
xor
stos
enter
pop
ds
cmps
das
push
icebp
sbb
fsub
loope
iret
dec
pop
xor
jmp
adc
and
jnp
jae
dec
adc
xchg
xchg
or
jo
xchg
(bad)
(bad)
(bad)
(bad)
push
pop
out
push
pop
dec
push
mov
pop
cwde
adc
inc
inc
pushf
add
fsubr
(bad)
(bad)
fbld
seta
jne
addr16
in
enter
test
mov
popf
retf
pop
cli
jg
push
test
sahf
into
mov
mov
popa
into
(bad)
call
push
add
add
mov
cmps
fninit
sahf
inc
add
sar
call
shl
addr16
jo
pop
mov
(bad)
push
(bad)
push
jns
pusha
(bad)
jg
jg
mov
out
adc
retf
cmps
xchg
and
dec
lock
addr16
push
cmp
cs
push
mov
in
xchg
xchg
cdq
lods
and
test
(bad)
int
cmp
and
mov
imul
xor
(bad)
(bad)
(bad)
std
lds
sar
adc
xor
or
push
or
jmp
jge
(bad)
(bad)
push
jle
and
(bad)
dec
xlat
in
aad
ins
cmp
jp
pcmpgtw
sbb
pop
or
dec
dec
jmp
lods
icebp
adc
add
outs
call
cmp
xor
xchg
sub
cmp
jmp
xor
icebp
repnz
or
adc
cli
adc
(bad)
(bad)
(bad)
in
inc
mov
lahf
sbb
rcr
push
push
sub
mov
jae
test
call
fsubr
adc
aas
inc
(bad)
adc
out
jmp
dec
pop
lock
dec
pop
out
test
std
sbb
(bad)
int3
push
je
out
(bad)
std
inc
pop
adc
loopne
adc
test
(bad)
mov
int3
stc
xchg
in
and
fld
test
push
scas
jge
cmp
jecxz
stos
mov
fs
test
enter
les
jmp
mov
pop
cmp
ss
nop
cmp
push
cmp
sbb
ror
inc
mov
aad
push
push
clc
scas
jnp
cli
push
jmp
sub
pop
push
or
mov
inc
mov
cmp
in
fidivr
cld
daa
dec
and
adc
dec
mov
(bad)
mov
jp
mov
ret
cmp
pop
stos
or
ss
dec
push
(bad)
(bad)
dec
mov
or
xor
adc
(bad)
sub
(bad)
push
push
call
mov
and
gs
or
xchg
mov
adc
(bad)
js
fimul
(bad)
push
xchg
cld
inc
test
outs
jae
lahf
push
ins
mov
push
cmps
push
js
pop
sub
outs
sub
xchg
js
lods
(bad)
inc
daa
pop
mov
setno
adc
inc
or
inc
mov
stos
(bad)
(bad)
jmp
enter
fs
cdq
jo
rol
add
mov
aam
sbb
add
call
sub
cmc
pop
outs
pop
push
shl
push
mov
mov
(bad)
(bad)
inc
pop
enter
(bad)
adc
(bad)
ss
loopne
dec
mov
pop
rol
xor
retf
push
loopne
clc
xlat
dec
dec
in
stos
jp
outs
adc
xchg
iret
xchg
(bad)
(bad)
dec
mov
fs
mov
sbb
fs
mov
pop
icebp
sub
fmul
hlt
cmps
xor
cmp
dec
aas
cmp
dec
adc
test
retf
lods
lea
xchg
xor
pop
loopne
and
stc
add
pop
mov
aam
rol
sub
push
fwait
push
stc
call
iret
cmp
ds
xchg
jns
pop
clc
adc
xchg
xor
cmp
(bad)
rcl
int
jbe
fwait
popf
fild
scas
pop
ret
sub
js
loope
cwde
out
int3
xlat
push
loopne
push
mov
imul
loopne
mov
inc
shl
aaa
cmc
cs
mov
out
jg
(bad)
push
adc
xor
call
add
enter
and
xchg
or
sbb
(bad)
jmp
mov
mov
adc
push
inc
sbb
pop
mov
fstp
(bad)
(bad)
(bad)
push
fild
pushf
pop
pop
push
and
mov
lss
sbb
pushf
cli
(bad)
jg
outs
mov
and
cmp
(bad)
jp
pop
xchg
repz
fucom
aas
sbb
jmp
xchg
dec
pop
jmp
dec
movs
clc
push
in
inc
fcmovnb
(bad)
jg
or
sbb
(bad)
movs
es
cdq
or
and
mov
push
sbb
les
stc
js
inc
sahf
push
push
jne
(bad)
(bad)
inc
cwde
and
push
and
add
xor
dec
fnstenv
(bad)
(bad)
(bad)
push
in
lods
ret
shl
cmp
mov
xchg
popa
data16
ins
enter
lods
(bad)
(bad)
(bad)
call
or
aam
leave
aad
popa
cmp
idiv
inc
outs
or
in
add
(bad)
(bad)
inc
xchg
mov
mov
push
mov
loop
stos
xchg
add
pop
push
xchg
mov
shl
ret
sbb
jge
cdq
fsubr
(bad)
jmp
and
mov
mov
inc
add
test
xchg
add
fld
call
push
popf
or
jmp
(bad)
jmp
mov
xchg
retf
inc
adc
cmp
repnz
cmp
(bad)
call
mov
mov
aam
or
lea
jno
inc
mov
or
adc
inc
test
aad
push
cmp
(bad)
(bad)
dec
aam
add
push
ins
imul
loopne
mov
hlt
loop
pop
xchg
mov
mov
(bad)
(bad)
(bad)
call
mov
(bad)
pusha
jmp
inc
retf
and
jae
jno
xchg
jmp
iret
xor
(bad)
(bad)
(bad)
(bad)
push
loop
out
inc
adc
sbb
push
pop
push
inc
out
ret
jnp
mov
cs
call
push
fwait
xchg
das
sub
xor
test
aaa
mov
xor
call
ja
sbb
es
mov
mov
mov
cmps
test
lock
ret
mov
(bad)
(bad)
call
arpl
jle
loopne
jg
stos
aaa
or
pop
fcom
bound
rcl
ud0
(bad)
(bad)
mov
loope
and
mov
fsubp
xchg
in
adc
and
idiv
cmc
imul
(bad)
inc
mov
dec
repz
data16
imul
js
mov
mov
xchg
das
mov
pop
mov
or
vmaxsd
push
into
add
inc
sub
pop
push
into
ficomp
cmp
out
shl
(bad)
(bad)
(bad)
js
pop
and
xor
inc
mov
pop
imul
gs
jecxz
pushf
daa
aad
and
ins
lock
dec
mov
ret
inc
not
arpl
ret
loope
data16
jo
push
mov
loope
add
(bad)
dec
scas
push
lea
cld
xchg
test
ins
ja
(bad)
(bad)
(bad)
mov
cmp
or
in
and
iret
pop
mov
xchg
js
out
mov
lahf
enter
adc
(bad)
inc
xchg
xchg
add
das
sbb
sar
pop
sahf
sar
(bad)
inc
adc
nop
inc
js
mov
mov
fld
mov
xor
jmp
(bad)
sbb
paddw
(bad)
cmp
inc
hlt
xchg
test
fisub
inc
loope
(bad)
in
adc
pusha
sti
fwait
pop
jb
test
gs
shl
(bad)
(bad)
fnsave
push
and
xchg
mov
int3
pop
jne
cld
mov
icebp
sub
or
(bad)
(bad)
jmp
bound
and
mov
push
stc
jbe
inc
and
clc
adc
mov
inc
sar
(bad)
call
xor
dec
adc
push
jo
fsub
dec
je
jle
cmps
pop
pushf
pop
(bad)
aam
or
pusha
inc
out
mov
xchg
sub
xor
clc
dec
test
jg
jle
outs
mov
inc
out
xchg
popa
mov
ret
loop
data16
shr
(bad)
dec
pop
mov
sti
cmp
pop
cmp
jns
(bad)
(bad)
(bad)
inc
dec
inc
or
repnz
sbb
aam
mov
mov
inc
retf
jg
xor
or
ud0
(bad)
jmp
mov
je
mov
mov
fsub
add
daa
xor
cld
(bad)
(bad)
call
fdivr
dec
xor
jmp
ss
fs
pop
mov
add
mov
call
add
sbb
xor
sub
and
dec
add
sbb
out
cli
push
jmp
out
call
adc
sbb
xchg
(bad)
(bad)
jmp
inc
sub
and
in
sbb
jae
jo
pop
(bad)
(bad)
(bad)
(bad)
jmp
and
addr16
adc
(bad)
(bad)
das
mov
push
mov
mov
addr16
push
jne
(bad)
(bad)
(bad)
(bad)
std
nop
mov
(bad)
jno
sbb
add
ss
push
sub
xchg
jge
cli
xchg
hlt
mov
(bad)
(bad)
dec
(bad)
lods
and
addr16
arpl
stc
jo
cmc
inc
and
mov
mov
xchg
mov
out
jmp
sub
and
mov
sub
inc
xor
or
sar
xor
popa
fwait
jle
(bad)
je
add
imul
ja
out
loope
inc
xor
dec
lods
cmc
imul
mov
idiv
jbe
pop
pop
loopne
sysexit
retf
imul
fisttp
(bad)
je
and
imul
int3
std
orps
cmp
sbb
pop
xor
(bad)
movs
(bad)
setg
jp
mov
inc
gs
push
sbb
(bad)
(bad)
(bad)
jmp
retf
sar
and
cs
cmps
cdq
jo
jns
mov
adc
adc
and
jmp
clc
pop
xor
add
jmp
sbb
hlt
ret
jmp
mov
cmps
and
iret
dec
daa
clc
jl
xchg
xchg
cdq
adc
mov
jmp
pop
mov
and
jmp
scas
fiadd
call
push
call
or
cs
and
ss
js
aaa
sbb
mov
pop
pop
inc
aaa
(bad)
(bad)
(bad)
(bad)
jle
(bad)
inc
push
ss
js
jecxz
ins
rcr
cs
out
cmp
shr
(bad)
push
aas
outs
and
cmp
push
mov
(bad)
(bad)
mov
mov
sbb
xor
pop
xor
push
add
int
loop
ja
pop
mov
mov
xchg
mov
mov
cs
add
(bad)
(bad)
inc
or
sbb
push
sahf
jbe
imul
cs
jle
movs
push
dec
inc
mov
(bad)
inc
inc
add
xchg
jge
xor
xchg
shl
push
push
test
aas
dec
fisttp
cmp
(bad)
inc
dec
pusha
(bad)
retf
loopne
cmps
(bad)
xchg
adc
sbb
mov
jmp
xchg
popa
adc
arpl
in
rcr
push
cmps
pop
icebp
pusha
call
call
lahf
inc
sbb
sub
push
jo
test
add
dec
mov
(bad)
mov
cmp
pop
push
loope
dec
(bad)
(bad)
(bad)
inc
xchg
sar
test
(bad)
into
and
xchg
(bad)
loope
outs
xlat
pop
xchg
cmp
add
call
call
lea
push
jl
outs
daa
inc
push
fdiv
jle
fstp
inc
and
lods
sar
adc
mul
sti
mov
push
enter
ins
in
cmp
xlat
cmp
fdivr
pop
lock
loop
inc
cmp
sub
jl
or
movs
xor
icebp
sti
sub
aaa
imul
aam
or
inc
(bad)
jns
mov
push
xchg
push
xchg
(bad)
(bad)
(bad)
jmp
fdiv
inc
sti
out
sar
icebp
push
inc
adc
es
push
fld
mov
jl
shr
test
jle
xor
mov
and
pop
xor
fidiv
jb
aas
xor
(bad)
(bad)
call
clc
in
call
idiv
mov
fisub
gs
(bad)
(bad)
jmp
fnsave
pop
movs
test
mov
mov
sbb
xchg
jb
adc
mov
into
push
mov
std
(bad)
(bad)
(bad)
out
xor
push
mov
ret
out
loope
data16
cmps
xchg
call
cs
cmps
lahf
adc
(bad)
call
push
xlat
or
sub
stos
add
cmp
xchg
fs
jne
inc
mov
mov
sbb
mov
add
repnz
adc
mov
(bad)
(bad)
jmp
fsubr
sahf
je
jg
cmp
or
xlat
stc
jae
(bad)
mov
clc
fisubr
aad
jmp
push
jmp
sbb
(bad)
(bad)
(bad)
dec
sub
pop
xchg
das
out
and
mov
dec
mov
scas
pop
inc
mov
mov
mov
call
push
push
repnz
mov
mov
cld
inc
pusha
(bad)
lods
loopne
outs
xchg
(bad)
(bad)
clc
ret
ss
bound
add
jl
stos
movs
inc
lods
out
push
pop
(bad)
mov
sahf
push
mov
ins
repnz
rcr
cmp
aaa
cmovl
js
hlt
(bad)
dec
fs
dec
aad
mov
retf
sbb
cwde
jns
stos
xor
(bad)
(bad)
(bad)
fsub
fwait
xchg
mov
sahf
int3
jle
sbb
jecxz
loop
sbb
mov
or
stos
mov
sbb
bound
lea
add
mov
fcmove
mov
fld
jp
movs
aaa
pop
fldcw
jp
(bad)
(bad)
call
mov
test
fst
xor
out
add
aas
dec
xchg
mov
sti
mov
lahf
cld
(bad)
(bad)
dec
push
push
scas
push
push
leave
call
xchg
dec
movs
inc
(bad)
sub
add
inc
sbb
(bad)
call
adc
test
push
repz
fisttp
lock
mov
mov
inc
mov
xchg
jo
cmc
(bad)
(bad)
mov
mov
sbb
out
inc
repz
gs
inc
call
lock
and
mov
xchg
shr
leave
fnstenv
mov
loope
dec
repz
call
pop
dec
mov
ret
push
cmp
push
lods
scas
or
push
inc
stos
pusha
shl
cmp
leave
sub
push
(bad)
call
ins
adc
mov
add
pop
sub
loop
mov
(bad)
(bad)
call
xor
and
pop
xchg
js
(bad)
mov
xor
int3
test
push
mov
neg
fs
outs
pop
cdq
test
jae
push
popa
push
les
mov
in
popf
add
(bad)
(bad)
(bad)
call
dec
pop
fadd
outs
aas
mov
push
mov
dec
inc
push
add
out
(bad)
(bad)
(bad)
push
adc
pop
or
pop
mov
sbb
xchg
stc
or
mov
loopne
adc
xor
aaa
inc
ins
ret
bound
(bad)
call
mov
outs
in
sbb
aaa
mov
test
popa
push
(bad)
(bad)
(bad)
(bad)
(bad)
jle
ret
sti
nop
aaa
push
add
popf
call
ss
scas
mov
inc
ret
hlt
call
cmc
and
push
xchg
sbb
mov
jg
cmps
aaa
xchg
and
lods
ja
cld
cmps
jge
(bad)
mov
retf
(bad)
jmp
scas
jb
aam
xlat
into
data16
pop
es
mov
fcomip
(bad)
out
loopne
cdq
xor
je
inc
enter
jge
dec
pop
pop
test
(bad)
(bad)
jmp
dec
dec
sti
fs
pop
leave
ret
jmp
add
movs
and
mov
jg
ror
(bad)
call
pop
jae
call
dec
sub
fisttp
in
fsubr
pop
mov
(bad)
push
pop
bound
popf
xor
loopne
mov
outs
ficom
les
call
cmp
sbb
inc
or
into
lds
jg
push
stos
retf
ss
sahf
fsubp
inc
sbb
cs
jne
cmc
(bad)
(bad)
jmp
mov
mov
sti
mov
xchg
or
bound
test
cmp
mov
ficom
cli
push
inc
fs
icebp
test
xlat
mov
adc
jns
test
jns
jns
mov
sub
push
es
pusha
aas
xchg
sbb
jmp
rol
add
out
inc
push
or
call
jne
pop
into
cmp
and
push
add
cmp
inc
movs
das
cmp
and
sub
and
mov
pop
jmp
xor
sub
xor
xor
or
jmp
fs
lods
xchg
fbstp
sbb
addr16
mov
and
cmps
xchg
push
(bad)
nop
fist
jmp
mov
addr16
sbb
and
sub
ror
enter
ret
xor
cmp
(bad)
call
or
cmc
div
cwde
pop
add
daa
ins
push
jmp
cld
mov
xor
(bad)
(bad)
inc
into
or
xor
retf
sbb
cs
sbb
mov
add
jg
pop
fdivp
test
popf
push
and
xchg
inc
fwait
inc
mov
loope
sar
(bad)
mov
js
test
sbb
cmpxchg
push
mov
push
inc
mov
xchg
cwde
inc
jb
mul
xchg
pop
stos
mov
mov
cmp
(bad)
call
cld
jae
lahf
xchg
cmp
fidivr
sbb
sub
scas
cli
(bad)
(bad)
fmul
fwait
sahf
jo
push
popf
cmovns
call
popa
mov
dec
adc
dec
xor
adc
push
int3
xor
and
jmp
imul
inc
sbb
fistp
xor
(bad)
(bad)
dec
into
fiadd
inc
and
in
push
std
push
movs
or
loopne
inc
cmc
xor
push
cld
(bad)
(bad)
(bad)
push
sub
mov
pusha
ins
xchg
sahf
push
dec
fwait
call
neg
cld
xchg
push
mov
(bad)
(bad)
(bad)
call
fisub
fistp
push
sub
ror
dec
cwde
ja
call
pop
fild
push
data16
test
push
clc
imul
lea
jno
jmp
lea
push
or
fisttp
inc
inc
cld
jmp
pop
pop
mov
adc
loope
ins
mov
retf
dec
cmp
and
ret
pop
xor
xchg
aad
mov
adc
fild
or
cli
call
push
mov
(bad)
fmul
add
and
inc
movs
and
(bad)
cmp
ds
pushf
adc
es
sbb
pop
arpl
nop
fdiv
lock
std
lahf
pop
out
(bad)
dec
loope
pushf
test
xchg
(bad)
out
sub
push
push
sbb
(bad)
(bad)
(bad)
frstor
adc
jbe
pop
xor
jmp
jmp
in
pop
cdq
movs
sahf
repz
(bad)
jb
lahf
(bad)
push
inc
xchg
mov
mov
jmp
or
aad
jmp
push
lods
jns
outs
shl
stos
and
out
or
int
fisub
(bad)
(bad)
out
clc
sub
pusha
jge
sbb
(bad)
pop
mov
(bad)
cmps
mov
inc
iret
pop
sbb
and
dec
ss
dec
aad
loop
cmp
fidivr
push
or
and
sbb
(bad)
(bad)
push
jmp
sub
xor
stc
dec
stos
mov
pop
test
pop
mov
xor
das
sar
(bad)
push
jae
mov
add
(bad)
dec
stc
pop
add
mov
fimul
cli
inc
mov
ret
in
and
xchg
cmp
call
(bad)
(bad)
(bad)
push
loop
jnp
xlat
lahf
call
div
fwait
mov
dec
fxch
hlt
jle
(bad)
(bad)
inc
jecxz
lods
push
jge
push
ror
and
pop
or
cmp
jne
cdq
pop
cmp
std
(bad)
mov
pop
push
push
sub
scas
iret
ficom
push
fnstenv
cmps
cli
jg
pop
cmp
adc
jo
cmps
sbb
or
(bad)
(bad)
push
jb
nop
xchg
in
shr
or
repz
ds
cmc
adc
inc
mov
clc
jo
dec
rcr
clc
(bad)
dec
pop
mov
sub
lods
(bad)
mov
rcl
sub
or
les
fdivp
dec
out
sbb
adc
cmps
mov
inc
popf
retf
lods
jg
(bad)
(bad)
call
mov
dec
lods
jp
or
sub
pushf
fwait
mov
mov
in
(bad)
jmp
sub
popf
(bad)
mov
(bad)
lods
out
and
lahf
out
mov
js
xor
(bad)
adc
hlt
mov
out
test
adc
out
jmp
stos
mov
inc
inc
(bad)
call
out
je
mov
pop
mov
mov
hlt
inc
add
and
mov
call
ror
rol
pop
adc
int3
xchg
or
cwde
outs
mov
stos
mov
(bad)
(bad)
(bad)
inc
dec
mov
dec
(bad)
xchg
bound
xor
js
sub
call
idiv
stos
(bad)
call
in
xor
dec
mov
inc
retf
repnz
js
in
jmp
call
cmc
push
cmps
add
mov
push
sbb
pop
imul
cli
call
xor
or
push
clc
hlt
mov
sahf
or
(bad)
(bad)
(bad)
out
nop
call
mov
or
mov
or
std
(bad)
(bad)
(bad)
push
ds
(bad)
cmp
mov
mov
(bad)
loopne
lds
xor
mov
sub
sub
in
adc
test
xlat
(bad)
(bad)
call
cmps
sti
xchg
inc
push
jmp
mov
rcr
xchg
cmp
dec
adc
pop
lea
push
sub
xchg
mov
into
xchg
or
xchg
aas
into
mov
addr16
(bad)
push
frstor
add
ret
and
jne
fdivp
xchg
push
ror
fsub
ss
(bad)
(bad)
(bad)
(bad)
fcomi
in
pushf
shl
pushf
into
in
cmp
sub
lea
outs
out
call
dec
(bad)
jmp
daa
call
jb
std
fild
adc
xchg
sbb
inc
out
xchg
or
xchg
sub
jmp
sub
jecxz
adc
(bad)
(bad)
inc
dec
jg
repz
ja
push
fnstsw
movs
sbb
sbb
push
xor
mov
dec
(bad)
(bad)
(bad)
jns
gs
ins
xchg
loopne
mov
loop
xor
add
sub
cmp
enter
pop
push
mov
add
xlat
sbb
and
adc
ret
mov
inc
enter
and
xor
xchg
out
jle
popf
xchg
push
push
call
les
mov
or
or
out
neg
mov
loopne
push
std
(bad)
dec
inc
(bad)
inc
dec
mov
jnp
int
fadd
jmp
popa
xor
pusha
movs
pop
ins
mov
les
push
mov
jb
imul
mov
sbb
mov
push
ja
aas
in
jb
sub
(bad)
(bad)
jmp
lds
call
cwde
in
add
push
test
stos
xlat
jno
jmp
ins
sub
jmp
dec
mov
or
cmps
cld
(bad)
(bad)
dec
xchg
add
pop
xor
shr
jg
out
shl
mov
(bad)
outs
enter
push
or
fwait
mov
mov
cmp
dec
fmul
dec
movs
jle
jle
out
add
(bad)
call
into
inc
loope
pop
push
mov
sahf
(bad)
(bad)
(bad)
dec
push
repz
(bad)
cmp
loope
mov
mov
shr
add
(bad)
(bad)
jmp
sbb
retf
jo
sahf
push
sbb
enter
push
adc
mov
and
push
cld
(bad)
out
pusha
jae
sub
pop
xchg
jmp
or
mov
(bad)
xor
sub
adc
xchg
cmp
(bad)
mov
int3
cmp
sub
cmps
jmp
shr
cli
(bad)
(bad)
(bad)
mov
xchg
in
inc
mov
inc
xor
mov
fiadd
mov
or
mov
(bad)
fstp
in
fld
add
call
push
cli
xor
fcomp
fwait
pop
(bad)
popa
ja
and
push
std
pop
add
or
test
repnz
xchg
jnp
sar
xchg
cmp
outs
pop
shl
push
mov
xchg
imul
cmp
cmp
aam
push
xchg
es
sub
(bad)
jg
(bad)
fidivr
sar
pop
into
cmps
sub
fidivr
xchg
(bad)
(bad)
(bad)
call
fisttp
mov
data16
fmul
inc
cld
call
xchg
dec
pop
sub
xchg
push
out
(bad)
push
sbb
cmp
into
in
pop
fcom
jle
inc
sar
dec
sbb
inc
in
(bad)
(bad)
cmp
out
iret
cdq
fsubp
xor
test
mov
xor
mov
(bad)
(bad)
(bad)
jmp
mov
aad
pop
mov
retf
aad
pop
in
push
add
repz
xor
jg
(bad)
push
or
out
pop
retf
push
inc
mov
aam
push
xchg
pop
cmps
mov
(bad)
(bad)
(bad)
jmp
imul
adc
push
pop
pop
loop
adc
xor
dec
or
dec
into
inc
adc
jmp
(bad)
push
or
fdiv
nop
stos
xor
push
dec
leave
pop
test
ds
scas
stc
dec
leave
cmp
mov
cs
adc
(bad)
(bad)
inc
out
sbb
cmps
xchg
int3
push
push
push
pop
sbb
out
mov
fiadd
movs
lock
(bad)
(bad)
jmp
xor
cmps
in
cmp
sub
pop
add
adc
dec
mov
jno
ja
(bad)
fdiv
mov
cli
test
and
(bad)
call
mov
sub
sub
jle
inc
fidivr
pop
int3
mov
das
(bad)
(bad)
(bad)
call
test
int
or
std
cmp
scas
stos
xchg
jbe
push
mov
inc
iret
int
mov
adc
push
cs
aas
inc
or
(bad)
pop
sub
lea
fsub
(bad)
ja
test
cli
(bad)
push
inc
out
imul
test
shr
loopne
(bad)
push
lods
inc
cmp
enter
fld
sub
adc
in
hlt
fisttp
nop
std
cmc
mov
lds
rcl
push
sar
hlt
push
or
dec
mov
ror
cmp
(bad)
(bad)
(bad)
inc
inc
sbb
or
and
in
jno
lea
xor
push
push
inc
call
sar
(bad)
(bad)
mov
pop
cmps
test
in
inc
stos
push
aas
mov
(bad)
mov
xchg
jbe
pop
mov
fdiv
retf
pusha
and
rol
jge
and
inc
mov
(bad)
(bad)
jmp
inc
jae
push
mov
or
ds
shr
ins
sbb
xchg
gs
mov
(bad)
(bad)
aad
mov
mov
jg
sub
adc
das
cmp
cmps
(bad)
(bad)
(bad)
jmp
mov
xor
sub
jle
jg
popf
cs
and
jmp
add
sahf
js
(bad)
(bad)
(bad)
(bad)
cmp
scas
add
fwait
stc
push
xchg
cli
push
ror
lea
add
sub
and
leave
mov
mov
xor
add
loopne
clc
imul
lods
jns
pusha
test
aas
pop
pop
xchg
adc
(bad)
(bad)
jmp
and
sbb
pop
icebp
pop
cli
cmp
call
xor
dec
mov
jecxz
sub
(bad)
(bad)
push
es
in
cmps
or
fidivr
retf
les
or
es
pop
jnp
mov
(bad)
inc
imul
dec
cwde
sbb
lock
dec
add
in
(bad)
(bad)
(bad)
inc
push
pusha
fmul
test
or
ins
push
mov
mov
mov
(bad)
(bad)
inc
addr16
rcl
shl
sbb
aas
outs
out
pop
aaa
xchg
dec
aaa
bound
cs
xchg
xchg
xchg
repz
dec
outs
xchg
mov
jmp
(bad)
(bad)
(bad)
jg
sbb
and
(bad)
mov
popa
adc
inc
xor
call
mov
in
cmps
and
cmp
scas
mov
(bad)
les
adc
test
rcl
mov
mov
ja
inc
pop
inc
ins
fistp
popf
(bad)
add
xor
add
(bad)
out
jns
cmps
jg
or
fld
jecxz
push
div
mov
mov
sbb
xchg
test
cmp
(bad)
(bad)
(bad)
jmp
xlat
in
sbb
pop
lock
push
mov
mov
cdq
xor
pop
sub
pop
gs
mov
and
xor
pushf
jecxz
or
(bad)
(bad)
call
movs
iret
call
pop
shr
xchg
aad
push
or
mov
mov
mov
sbb
(bad)
push
out
mov
xor
add
inc
cmp
xchg
jne
jge
mov
mov
sub
pop
push
add
sub
imul
xor
shl
mov
(bad)
mov
dec
mov
in
ss
enter
idiv
add
rol
js
or
es
or
sbb
push
test
cmc
xor
dec
scas
dec
frstor
enter
ins
sub
mov
cmp
sub
xor
(bad)
(bad)
jmp
xor
fdivr
sbb
mov
mov
lahf
sbb
add
popf
daa
pop
rcr
(bad)
(bad)
(bad)
push
jecxz
push
shl
rcl
mov
scas
jae
fsubr
das
cs
dec
sbb
xchg
popa
shl
or
(bad)
(bad)
dec
push
lock
dec
xchg
mov
or
out
add
mov
adc
push
scas
push
(bad)
ret
ins
(bad)
(bad)
(bad)
fild
mov
pop
sbb
pop
call
xor
sti
ds
jmp
mov
ja
cli
(bad)
mov
cli
into
imul
outs
into
(bad)
(bad)
(bad)
jg
jb
retf
xchg
cmp
inc
lock
ja
xor
and
sbb
mov
call
sub
dec
es
shl
(bad)
(bad)
(bad)
mov
rcl
repnz
fbstp
xchg
into
dec
stc
or
push
stos
inc
adc
(bad)
(bad)
inc
xlat
icebp
hlt
mov
cs
mov
push
mov
enter
jge
fcom
outs
(bad)
push
pop
mov
aam
inc
loope
nop
in
add
scas
aaa
and
das
je
jmp
lods
stc
bound
scas
push
sub
arpl
jp
scas
rcl
sub
(bad)
call
and
dec
fcom
ss
add
(bad)
sbb
cmps
dec
shr
xchg
jmp
push
arpl
fsubrp
dec
retf
repnz
stos
pop
retf
xchg
ret
rcr
cmp
call
sbb
in
mov
pop
add
jae
(bad)
(bad)
(bad)
jmp
xor
add
inc
jle
pop
push
es
call
jecxz
cmps
pop
jnp
(bad)
(bad)
(bad)
(bad)
(bad)
lods
mov
(bad)
leave
adc
xor
mov
les
mov
call
retf
(bad)
call
lahf
xor
outs
pusha
nop
jl
jge
rcr
outs
xor
mov
icebp
mov
or
outs
in
mov
adc
xor
pop
sbb
test
or
mov
fsubr
mov
retf
(bad)
(bad)
(bad)
mov
outs
cli
cmps
adc
out
dec
(bad)
push
xchg
push
fidiv
mov
(bad)
(bad)
(bad)
(bad)
mov
xchg
aaa
xchg
call
jns
es
pop
add
mul
(bad)
push
jl
push
jmp
clc
push
in
mov
lahf
push
div
or
jbe
call
out
popf
loopne
mov
(bad)
(bad)
(bad)
inc
mov
fcmovnu
xchg
dec
xor
xchg
out
aas
sti
int
adc
jne
add
(bad)
das
(bad)
call
mov
mov
imul
cli
(bad)
push
retf
jmp
adc
sbb
and
fisub
xor
adc
add
mov
(bad)
(bad)
call
sbb
test
pop
inc
test
xor
add
in
xchg
xor
inc
mov
(bad)
(bad)
call
push
shl
ins
ret
and
mov
xchg
xchg
xchg
push
pop
xchg
add
xlat
dec
inc
push
addr16
(bad)
jmp
mov
jae
idiv
push
stos
xor
loopne
je
xchg
fs
lock
mov
or
push
ror
dec
mov
and
inc
and
cdq
jmp
(bad)
push
and
push
scas
loope
sbb
bound
and
xchg
xchg
pop
(bad)
mov
push
dec
stc
mov
cmp
rol
xchg
or
mov
sbb
(bad)
(bad)
inc
mov
rol
xchg
aas
or
repnz
pop
not
inc
ret
out
cmp
mov
xchg
push
jbe
sub
mov
and
inc
lock
call
sub
into
das
cli
inc
int3
imul
cmps
call
mov
nop
fsubr
sub
leave
out
push
xor
inc
inc
dec
std
(bad)
dec
cld
popa
mov
scas
sub
cmp
cli
sbb
bound
dec
mov
(bad)
(bad)
(bad)
mov
aam
and
bound
adc
add
dec
xchg
loope
cmps
mov
jmp
lea
push
shl
cs
neg
es
mov
jmp
rcr
xor
adc
xor
fmul
(bad)
(bad)
fld
aas
mov
jmp
mov
scas
push
cld
mov
outs
sbb
adc
xchg
aad
test
mov
(bad)
ins
or
inc
loop
jbe
adc
pop
cld
pop
icebp
jp
pop
sub
loopne
(bad)
std
movs
inc
add
stc
cwde
(bad)
(bad)
(bad)
inc
loop
xchg
sub
push
or
jl
retf
test
into
add
(bad)
(bad)
(bad)
dec
adc
adc
lahf
cmps
inc
and
in
nop
cmps
stos
adc
mov
arpl
sar
pushf
mov
sbb
out
clc
dec
jns
mov
call
ja
dec
adc
xlat
adc
in
ret
mov
mov
imul
mov
lock
je
inc
and
call
push
(bad)
mov
fisub
inc
adc
add
ss
(bad)
(bad)
inc
cmp
inc
(bad)
pop
in
mov
adc
(bad)
ror
mov
cmp
lds
mov
(bad)
mov
cli
push
jl
sbb
jb
pushf
pop
lea
inc
pop
lods
adc
push
add
neg
add
test
popa
stos
xor
fcmove
push
jle
ds
add
mov
(bad)
(bad)
(bad)
dec
xchg
stos
lahf
int
retf
out
add
pushf
movs
or
and
or
movs
mov
(bad)
(bad)
(bad)
inc
inc
add
(bad)
and
mov
push
xor
aaa
cwd
movs
and
shl
pushf
adc
jg
icebp
add
lock
out
jmp
fnstcw
(bad)
(bad)
pop
jg
call
ret
loope
adc
pop
call
rcl
out
xor
push
pop
jne
xor
(bad)
(bad)
call
repz
movs
cmps
fist
das
ficom
sub
or
in
push
mov
mov
dec
(bad)
(bad)
(bad)
(bad)
jmp
int
mov
xchg
dec
popa
pushf
adc
pop
sti
cmp
scas
ds
call
out
cmps
adc
or
icebp
sub
in
push
add
jl
shl
(bad)
(bad)
(bad)
call
rcl
xor
stc
bound
gs
push
jo
enter
das
jg
and
(bad)
cli
cmp
(bad)
(bad)
fdiv
sbb
cdq
lea
cli
or
fiadd
dec
sub
dec
jle
js
(bad)
(bad)
(bad)
fincstp
jecxz
movs
clc
jmp
shl
ins
shl
cmp
adc
shr
mov
inc
cmps
push
mov
fiadd
ins
mov
cmp
retf
(bad)
(bad)
dec
(bad)
sbb
add
loopne
div
cli
lods
dec
pop
fdiv
xchg
(bad)
(bad)
(bad)
inc
dec
(bad)
jl
scas
gs
mov
add
inc
loop
push
lock
(bad)
(bad)
(bad)
jmp
fsub
mov
cmp
jl
xchg
std
lahf
cmc
add
shl
pop
aad
jg
jg
mov
lahf
mov
mov
dec
(bad)
sub
push
(bad)
(bad)
(bad)
(bad)
call
jle
jge
mov
les
rep
sub
test
or
jp
nop
hlt
cmp
mov
cli
(bad)
dec
sbb
push
cmps
sbb
mov
xlat
pop
test
cmp
mov
push
std
(bad)
(bad)
js
ja
aaa
sbb
lock
clc
sti
je
inc
inc
ins
movs
imul
jmp
mov
push
sar
fsub
sub
pusha
js
mov
(bad)
mov
(bad)
(bad)
push
popf
push
cli
mov
test
inc
pop
ror
fs
mov
punpcklbw
lahf
dec
xchg
aam
sti
icebp
cld
inc
xor
adc
(bad)
call
bound
add
call
or
sbb
(bad)
jg
(bad)
mov
cmp
add
cwde
dec
pop
call
jmp
clc
sbb
and
mov
ins
sbb
ret
mov
(bad)
fcomip
clc
and
add
ret
mov
ins
test
outs
stos
dec
and
fstp
daa
pop
icebp
(bad)
(bad)
fsub
push
mov
push
or
and
lahf
mov
imul
xchg
push
pop
test
push
cs
pop
loopne
loope
jo
call
add
pop
adc
cmp
push
mov
mov
(bad)
(bad)
call
(bad)
rdpmc
mov
push
mov
pop
fsub
adc
cmc
loope
fnsave
push
add
cld
fsub
push
sub
mov
test
aas
xchg
dec
int
movs
aad
(bad)
(bad)
(bad)
push
mov
clc
shl
add
xchg
in
test
jge
push
inc
iret
cmp
fbld
mul
mov
dec
cdq
jnp
jne
inc
repnz
mov
call
repz
cwde
push
push
xor
hlt
pop
pop
push
(bad)
(bad)
sti
push
inc
push
pusha
stc
pop
leave
or
or
push
(bad)
(bad)
(bad)
(bad)
jge
gs
test
mov
jmp
or
push
inc
shl
cmc
pop
xor
(bad)
(bad)
mov
add
dec
cmc
pop
popa
adc
inc
inc
neg
jge
mov
ins
cmp
(bad)
(bad)
call
aad
ror
or
addr16
cmp
push
idiv
enter
call
hlt
iret
arpl
cmp
jmp
adc
mov
dec
cdq
ja
mov
jle
sub
jnp
leave
int3
mov
mov
outs
mov
dec
pop
mov
jbe
(bad)
call
cmc
(bad)
jb
je
cs
add
imul
pop
mov
mov
mov
xchg
out
inc
add
or
push
aad
(bad)
(bad)
(bad)
push
adc
ins
cmp
cwde
xor
ds
adc
fidivr
(bad)
jmp
adc
outs
fimul
outs
sub
pushf
mov
sub
mov
add
(bad)
call
pop
es
jmp
sti
leave
in
pushf
div
cli
(bad)
(bad)
dec
or
mov
push
adc
push
push
rol
(bad)
lods
cmp
pushf
test
inc
aaa
pop
aaa
xor
add
jle
aam
sbb
mov
jg
in
xchg
addr16
push
sub
or
lock
loopne
(bad)
inc
cs
xchg
xor
sub
mov
jnp
scas
scas
(bad)
cld
ud0
(bad)
(bad)
fsubr
add
pop
and
ror
mov
cmp
mov
(bad)
(bad)
inc
pop
es
sub
and
adc
lods
jnp
add
xchg
test
(bad)
jg
loopne
(bad)
nop
mov
sahf
scas
js
ss
je
fstp
push
xchg
pop
dec
jmp
rcl
out
push
(bad)
popa
sub
push
daa
das
movs
(bad)
mov
jg
scas
sbb
and
das
and
hlt
nop
fst
xchg
enter
cmps
outs
jmp
movs
mov
mov
inc
pop
loope
mov
cdq
inc
cwde
in
jnp
jmp
xchg
mov
sbb
addr16
out
stc
int3
pop
(bad)
push
xor
ja
inc
(bad)
jg
or
out
cmps
jle
dec
add
stos
inc
pop
cmp
adc
cmc
(bad)
inc
sar
dec
dec
mov
outs
repz
adc
mov
jmp
in
aad
ret
adc
test
or
sbb
cld
(bad)
jg
inc
repnz
push
push
call
adc
lods
mov
dec
jmp
fs
mov
std
or
mov
in
dec
add
iret
(bad)
mov
xchg
(bad)
push
inc
push
call
repz
xor
(bad)
(bad)
mov
push
jge
das
inc
jbe
shl
push
mov
mov
call
(bad)
push
(bad)
or
bound
jmp
mov
sub
or
ja
and
lods
add
shl
jne
lods
call
cs
(bad)
(bad)
(bad)
cmp
adc
adc
shl
inc
sbb
xor
imul
mov
cmp
(bad)
(bad)
push
mov
outs
and
xchg
cmp
or
lods
arpl
retf
mov
jbe
(bad)
(bad)
mov
nop
(bad)
fdivr
xor
xchg
adc
sbb
fs
lds
retf
inc
pop
xchg
xor
mov
shr
adc
or
xor
fcomp
ja
fiadd
sahf
das
adc
movs
and
adc
mov
sub
cmp
cwde
(bad)
(bad)
(bad)
call
movs
jo
mov
cdq
in
cld
pop
xor
ror
jmp
icebp
pop
or
dec
mov
inc
cmp
pop
push
data16
add
sbb
mov
fdivp
sub
je
cmp
push
mov
aam
loope
fiadd
enter
mov
in
xor
scas
lahf
loopne
sub
stc
adc
cs
(bad)
(bad)
fimul
jae
rcr
jne
sbb
retf
cli
daa
adc
cmp
hlt
test
(bad)
call
ins
je
pusha
xlat
retf
leave
(bad)
dec
fistp
jecxz
nop
int3
and
sub
das
or
sahf
(bad)
xchg
inc
xor
jge
imul
retf
mov
pop
(bad)
call
xor
mov
jecxz
dec
jbe
std
jno
xor
xchg
(bad)
(bad)
jmp
sti
pop
les
mov
or
test
pop
mov
jle
repnz
(bad)
(bad)
inc
xchg
cs
mov
js
int3
stos
sbb
outs
bound
cmp
das
inc
jns
rol
mov
aam
push
pop
aaa
and
stos
nop
in
out
fstp
add
push
add
mov
adc
(bad)
(bad)
(bad)
jmp
movs
je
out
out
movs
aam
(bad)
mov
and
jecxz
jb
outs
add
das
add
cld
(bad)
mov
std
and
xor
mov
out
pop
addr16
test
fadd
ins
stos
and
das
push
ficom
(bad)
dec
(bad)
call
inc
and
daa
(bad)
(bad)
inc
dec
or
mov
mov
fneni(8087
xor
repnz
cmps
pop
pop
mov
(bad)
(bad)
call
jnp
xor
add
not
mov
mov
outs
lods
movs
in
cmp
mov
jmp
icebp
jne
inc
dec
movd
lods
les
cli
cmp
lods
push
fdiv
sub
(bad)
(bad)
(bad)
call
xchg
into
sub
lds
ss
or
xor
int
adc
test
sbb
jmp
mov
out
call
mov
dec
(bad)
popa
retf
sbb
(bad)
clc
dec
icebp
adc
retf
nop
aaa
repz
inc
ja
or
mov
out
popa
mov
jo
xor
(bad)
(bad)
jmp
sbb
lods
stos
into
inc
xor
test
call
loopne
das
pop
dec
xor
push
and
fdivrp
(bad)
(bad)
(bad)
mov
push
stc
cmp
hlt
adc
push
jl
sbb
frstor
inc
cmp
out
cli
sub
cs
mov
or
dec
js
xlat
adc
aad
sahf
push
(bad)
(bad)
(bad)
jmp
push
jge
sub
sbb
les
sbb
inc
xchg
(bad)
(bad)
ins
cli
xchg
ins
(bad)
(bad)
(bad)
in
imul
dec
dec
or
sbb
repnz
mov
(bad)
(bad)
jmp
loop
fidiv
adc
push
in
scas
stc
pop
pshufw
and
xchg
mov
add
call
push
fwait
push
xchg
imul
aaa
mov
xchg
mov
(bad)
call
sub
pop
inc
dec
jb
mov
mov
mov
(bad)
call
xor
stos
pop
jle
sbb
je
test
inc
sbb
sbb
ja
mov
fstp
(bad)
call
loope
cmc
repz
xlat
pop
in
push
div
in
xchg
dec
cmp
inc
movs
fidivr
call
(bad)
inc
iret
(bad)
pop
mov
xchg
add
mov
call
adc
and
es
inc
cdq
dec
push
adc
out
add
(bad)
sti
cld
cmp
aaa
cmp
jbe
pusha
sub
jp
dec
and
push
daa
dec
push
xchg
(bad)
(bad)
jns
imul
or
sub
and
pop
into
lods
ss
stos
das
aas
or
std
jmp
(bad)
cmp
jg
xor
(bad)
retf
retf
out
xlat
(bad)
lahf
push
add
(bad)
mov
adc
xor
aad
jmp
(bad)
(bad)
jmp
lods
fcmovnb
push
cmp
(bad)
pop
loope
or
jmp
cs
jnp
push
and
add
bound
retf
out
xchg
mov
ror
and
call
jns
push
sub
xor
imul
data16
rcr
pop
in
cmovs
push
or
fadd
push
in
ins
sbb
test
pop
cmp
push
inc
inc
push
ins
or
dec
pop
xchg
pop
pusha
add
ret
push
faddp
leave
ins
cs
sti
mov
mov
inc
dec
arpl
push
popa
fs
data16
imul
popa
outs
inc
fistp
ret
cmp
xchg
sbb
pop
dec
sahf
lea
jb
adc
(bad)
lods
shl
jbe
ficom
sbb
ss
add
adc
lds
ja
popa
push
in
ins
push
sbb
add
movs
(bad)
ficomp
xor
dec
mov
add
mov
jnp
xor
pop
jmp
mov
push
ret
sbb
and
push
xor
jae
ret
mov
lods
mov
fnstenv
call
imul
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
or
pop
popa
ret
dec
cmp
jne
(bad)
arpl
loop
daa
dec
xor
sbb
adc
pop
stos
sub
pop
jmp
jne
ins
fld
pusha
iret
pusha
call
push
push
jne
fs
mov
jns
je
popaw
arpl
lea
sub
inc
dec
es
jb
pop
jbe
adc
ss
and
pusha
inc
push
mov
mov
test
int
mov
rcr
sub
xchg
mov
mov
ins
outs
addr16
sbb
sar
sbb
pop
push
cmp
dec
sbb
imul
xchg
xor
add
add
lahf
loopne
or
fs
dec
mov
and
out
sbb
mov
fsubr
jo
dec
cmp
push
(bad)
aaa
xor
popa
mov
or
jo
add
ins
ins
jne
fcmovu
sub
mov
popf
cmps
mov
enter
stos
sub
add
and
mov
js
cs
dec
in
mov
icebp
cmp
loopne
sidtd
add
adc
add
cmp
(bad)
mov
pop
push
add
fcomp
add
inc
add
in
jae
(bad)
call
adc
dec
cmp
lock
ror
jnp
push
inc
sub
out
cld
adc
je
js
mov
mov
smsw
cli
cs
lods
loope
add
cmp
cmps
add
cs
jb
xchg
or
push
ror
xor
loopne
adc
jo
jmp
and
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
add
add
xor
add
pusha
add
or
add
rol
add
adc
add
add
add
add
add
add
push
add
add
add
add
cwde
add
add
add
rol
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
mov
add
push
xchg
add
add
add
add
add
add
add
add
add
mov
add
add
add
in
add
add
add
add
add
add
add
fadd
add
lods
test
add
in
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
add
add
add
add
sub
add
(bad)
aam
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
add
adc
add
add
add
add
add
add
add
cli
add
add
dec
add
sbb
add
add
add
add
add
add
add
rol
add
dec
add
inc
in
add
in
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
fsubr
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
or
add
add
cmp
add
add
add
add
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
or
add
add
add
add
add
add
add
and
outs
dec
inc
add
dec
add
pop
add
inc
add
add
push
jg
add
sub
add
sub
add
stos
sub
add
mov
sub
add
or
mov
add
mov
add
mov
or
mov
cmp
add
sub
add
sub
add
ret
add
cmp
add
xor
add
xor
add
cmp
add
sbb
lods
inc
add
mov
add
stos
pop
add
mov
add
mov
sbb
mov
jo
add
fs
add
js
add
push
cmp
popf
jge
add
jg
add
push
add
(bad)
dec
add
retf
dec
add
iret
inc
push
add
pop
add
rcr
add
inc
add
loope
add
sti
push
add
sti
dec
push
add
imul
fsub
(bad)
je
add
jge
add
jb
add
jns
add
outs
pop
add
jb
add
add
in
add
jmp
add
repnz
add
add
rep
add
std
push
add
jo
add
jp
add
jge
add
jno
add
jns
add
jae
add
jo
add
jnp
add
jp
add
popa
push
add
dec
and
ret
push
sub
call
jns
add
popa
xor
add
jp
add
jge
add
jae
add
jg
add
jg
add
dec
add
outs
dec
add
js
add
jns
add
xchg
xchg
sub
add
xchg
add
or
add
mov
add
xchg
add
int
adc
fstp
add
jmp
add
jmp
add
add
cld
xchg
add
mov
add
pop
add
test
add
lea
add
xchg
add
add
pushf
add
jecxz
or
jmp
xchg
add
(bad)
xchg
add
cmc
fwait
add
clc
cwde
add
repz
push
add
cdq
adc
fisub
add
hlt
test
add
mov
add
repnz
push
add
mov
add
mov
daa
add
cdq
xor
dec
xor
fisub
and
icebp
movs
sub
out
das
add
mov
aaa
add
mov
ss
lds
add
xlat
add
cli
loopne
add
cli
add
push
pop
add
retf
es
(bad)
xor
hlt
shl
mov
push
add
xor
cmp
xchg
mov
scas
xchg
add
mov
inc
add
test
(bad)
xchg
pop
add
xchg
pop
add
xchg
inc
add
mov
movs
dec
add
mov
add
mov
add
mov
jbe
call
xchg
popa
add
xchg
ja
aad
arpl
(bad)
stos
je
fdivr
arpl
stc
mov
dec
add
lds
test
add
les
jmp
pusha
add
(bad)
addr16
lds
not
jns
cld
loopne
add
movs
mov
add
mov
add
sahf
nop
add
scas
add
fsub
call
scas
mov
add
mov
mov
in
mov
mov
fcmovb
xchg
rol
pushf
add
into
pop
repnz
xchg
out
nop
add
loopne
add
ret
rol
test
add
enter
leave
mov
add
shl
add
loopne
add
leave
mov
(bad)
into
add
(bad)
add
retf
lds
jecxz
retf
add
fcom
add
fst
add
jmp
fadd
icebp
out
add
out
add
jmp
add
repnz
add
repz
div
add
(bad)
inc
add
xor
add
inc
dec
cmp
cmp
add
add
pusha
xor
cmp
inc
inc
inc
inc
inc
dec
sbb
add
popa
outs
jb
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
dec
sbb
adc
or
jnp
dec
dec
push
push
dec
push
dec
dec
dec
dec
dec
inc
inc
inc
dec
sbb
(bad)
xor
jge
dec
push
push
push
push
push
push
push
push
dec
push
dec
dec
dec
dec
inc
inc
dec
adc
push
lods
add
push
push
push
push
push
jge
mov
push
push
dec
dec
dec
dec
dec
dec
dec
movups
add
jb
push
push
push
jge
push
jge
nop
je
sub
mov
fwait
mov
push
push
dec
push
dec
dec
dec
(bad)
movhps
jg
push
jge
jge
jge
jg
inc
daa
mov
repnz
out
out
jg
push
push
push
dec
dec
dec
adc
pop
lea
jg
jg
jg
nop
jae
mov
repnz
out
leave
mov
push
dec
push
push
movups
add
add
jg
jg
nop
sub
repz
clc
clc
clc
clc
repnz
leave
mov
push
push
push
adc
pop
add
add
mov
nop
and
clc
cli
clc
clc
cli
repnz
clc
repnz
repnz
(bad)
jge
push
push
push
adc
pop
add
add
jg
nop
and
cli
cli
cli
clc
cli
cli
cli
repnz
repnz
repnz
repnz
xchg
push
push
push
push
adc
adc
add
test
nop
sub
clc
cli
cli
cli
cli
cli
clc
repnz
cli
cli
repnz
clc
repnz
repnz
jge
push
push
cmp
adc
add
add
nop
jno
cmc
cli
cli
cli
cli
cli
cli
cli
cli
cli
repnz
cli
cli
repnz
repnz
repnz
cmp
adc
add
add
(bad)
or
cli
cli
cli
cli
cli
cli
cli
cli
cli
repnz
cli
cli
repnz
repnz
repnz
sbb
sbb
add
test
push
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
repnz
cli
cli
repnz
bnd
jge
push
cmp
sbb
add
add
or
cli
cli
cli
cli
cli
cli
cli
cli
cli
(bad)
shr
cli
cli
repnz
cli
cli
repnz
jge
inc
sbb
sbb
add
test
cli
std
cli
cli
cli
cli
cmc
clc
cli
cli
cli
cli
cli
retf
mov
repnz
cli
repnz
jmp
sbb
sbb
add
test
cli
cli
std
cli
cli
call
cli
cli
cli
in
xchg
xchg
nop
js
iret
out
repnz
out
mov
inc
sbb
push
add
add
cli
std
cli
std
cli
aad
and
cli
cli
clc
out
fcmovnb
nop
nop
xchg
out
out
mov
inc
push
push
push
add
add
(bad)
std
cli
repnz
inc
or
ret
xchg
xchg
jmp
pop
add
add
(bad)
(bad)
sti
lahf
dec
dec
inc
inc
push
jp
mov
xchg
cmp
xlat
cli
out
jg
dec
pop
pop
pop
add
add
(bad)
in
xchg
mov
jp
jnp
jnp
jnp
jns
sbb
hlt
cli
cli
(bad)
mov
dec
pop
and
add
add
loop
jge
nop
nop
nop
xchg
xchg
nop
nop
jp
cmp
push
jp
adc
clc
ror
and
add
test
push
jge
mov
mov
nop
jnp
(bad)
std
std
cli
cli
mov
and
and
add
test
out
mov
imul
dec
jp
idiv
(bad)
(bad)
(bad)
(bad)
clc
mov
and
and
add
test
std
(bad)
test
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
(bad)
std
std
in
mov
and
add
add
(bad)
std
(bad)
(bad)
std
cli
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
std
std
(bad)
std
cli
test
mov
and
add
add
std
std
std
std
(bad)
(bad)
std
(bad)
sti
(bad)
std
(bad)
std
(bad)
std
(bad)
std
std
std
(bad)
std
std
call
nop
dec
and
and
add
test
std
std
std
std
std
std
std
(bad)
(bad)
std
(bad)
std
std
(bad)
std
std
std
std
std
std
clc
mov
nop
dec
and
cmp
add
test
std
std
std
std
std
std
(bad)
std
std
std
std
(bad)
std
std
(bad)
(bad)
(bad)
std
std
cli
loopne
mov
dec
cmp
and
add
test
std
cli
(bad)
std
std
std
std
std
(bad)
std
std
(bad)
std
std
std
std
std
std
cli
icebp
xchg
mov
xchg
dec
cmp
cmp
add
test
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
repnz
mov
nop
mov
cmp
add
test
cli
cli
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cli
out
mov
xchg
nop
nop
mov
cmp
add
add
and
std
cli
std
std
cli
(bad)
std
std
std
std
std
cli
out
mov
xchg
nop
nop
mov
add
add
xchg
and
cli
std
std
std
cli
std
std
std
cli
std
std
cli
repnz
xchg
nop
nop
mov
cmp
add
test
nop
xor
out
cli
cli
std
std
cli
std
std
cli
repnz
mov
mov
nop
nop
mov
cmp
add
add
mov
shr
out
clc
repnz
out
shl
mov
mov
cmp
add
xchg
xchg
xchg
xchg
xchg
js
mov
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
movs
mov
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
nop
mov
mov
add
add
(bad)
xchg
xchg
xchg
xchg
xchg
xchg
mov
xchg
xchg
mov
nop
nop
mov
dec
cmp
movs
test
nop
(bad)
nop
xchg
xchg
xchg
xchg
xchg
mov
nop
mov
cmp
and
and
and
and
test
xchg
xchg
xchg
xchg
xchg
nop
nop
mov
dec
cmp
and
and
and
and
add
nop
xchg
(bad)
xchg
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
inc
add
(bad)
(bad)
cld
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
cld
add
jg
add
inc
add
aas
add
(bad)
cld
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
clc
add
add
jg
add
add
add
inc
add
add
add
inc
add
add
aas
(bad)
inc
add
add
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
daa
add
mov
sub
add
sub
add
sub
or
ret
sub
add
sub
add
sub
add
out
add
icebp
xor
add
mov
add
mov
pop
and
mov
das
add
jns
add
dec
add
retf
add
push
add
rcr
add
pop
sbb
cld
inc
add
cli
dec
add
stc
push
add
neg
cli
pop
add
stc
pop
pop
add
fs
les
aad
add
fsub
lds
add
jge
add
jno
add
jae
add
jae
add
jle
add
jns
add
adc
retf
add
adc
ret
je
add
jle
add
jno
add
popa
add
in
add
in
add
jecxz
add
out
add
jmp
push
add
push
add
ins
add
hlt
outs
add
clc
imul
in
add
jmp
add
jmp
jge
add
jne
add
jno
add
jne
add
jne
add
jae
add
jp
add
jge
add
jl
add
pop
cmp
ret
gs
shl
fidiv
add
jns
add
jnp
add
popa
ds
jns
add
push
add
fisttp
add
out
add
jmp
mov
add
add
cmc
add
add
add
add
mov
add
lea
add
lea
add
mov
cmc
lea
repnz
add
xchg
add
loop
add
in
fwait
add
out
xchg
push
add
call
cmc
call
repz
or
out
xchg
pop
add
xchg
sbb
add
xchg
sbb
fisubr
add
in
mov
add
out
or
rep
add
rep
add
out
mov
or
repz
add
mov
pop
add
mov
add
mov
add
mov
das
add
mov
fisttp
xor
fcom
sub
add
fwait
sub
add
mov
add
lahf
ss
cdq
ss
stos
and
(bad)
xor
out
xor
out
cmp
hlt
ret
add
test
add
ret
icebp
leave
(bad)
dec
or
not
add
stc
fadd
add
in
add
retf
mov
dec
add
xchg
je
(bad)
mov
retf
add
lea
xchg
pop
add
mov
pop
add
mov
inc
add
mov
dec
add
mov
push
add
mov
bound
leave
mov
fimul
jg
(bad)
mov
data16
mov
bound
(bad)
test
jnp
shl
ja
sar
imul
mov
ins
add
movs
jb
cmc
mov
inc
add
shl
jg
call
(bad)
push
icebp
shl
cmps
add
lods
xchg
enter
iret
fwait
mov
retf
add
mov
xchg
add
lods
lahf
add
mov
add
stos
mov
add
mov
mov
add
mov
add
rol
aad
xchg
add
enter
les
add
fild
add
shl
rol
mov
fcmove
mov
faddp
mov
add
(bad)
stos
add
aad
add
aam
add
fsubr
add
xlat
mov
add
int
add
leave
lds
fmulp
leave
add
rol
add
ror
add
aam
add
fcmovnu
add
aad
add
(bad)
add
(bad)
add
(bad)
add
loopne
add
loope
add
out
add
jmp
in
in
jmp
jmp
imul
in
div
in
add
repz
div
add
clc
test
cld
cld
sti
add
(bad)
inc
mov
mov
dec
popf
add
add
xor
ss
dec
add
mov
xor
cmp
cmp
xor
pop
add
add
scas
adc
pop
inc
inc
inc
inc
inc
cmp
ss
add
add
add
add
mov
xor
inc
inc
pusha
pop
sub
test
inc
inc
cmp
cmp
add
mov
pop
pusha
push
push
(bad)
jmp
inc
inc
inc
cmp
add
add
add
add
pop
pop
pop
push
stos
call
jmp
jmp
ins
inc
inc
inc
sbb
add
add
test
pop
imul
imul
repnz
in
in
in
jmp
pusha
inc
inc
sbb
add
add
and
out
div
out
in
in
in
jmp
inc
inc
and
add
add
add
stos
div
div
div
out
div
imul
imul
shl
and
add
add
add
out
div
div
div
div
imul
imul
neg
outs
inc
and
add
add
add
div
div
div
div
mov
jmp
or
add
add
add
add
div
repnz
div
idiv
jmp
movs
pop
cmp
or
add
add
imul
adc
(bad)
mov
jbe
fs
dec
shl
add
add
add
mov
in
sbb
data16
sbb
nop
pop
inc
push
push
add
add
add
add
addr16
push
fs
inc
inc
pop
inc
sbb
imul
xchg
(bad)
sldt
add
add
add
pop
push
push
mov
into
div
loope
jbe
adc
add
add
add
add
mov
sti
sti
sti
mov
xlat
xchg
jnp
adc
add
add
add
add
cs
cli
repz
test
cld
(bad)
cld
(bad)
(bad)
cli
cli
cli
cdq
xchg
jnp
adc
add
add
add
add
adc
cli
cli
cli
(bad)
cli
stc
cli
cli
(bad)
cli
cli
cli
(bad)
cli
loopne
xchg
jp
adc
add
add
add
add
es
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
cli
cli
out
mov
adc
add
add
add
add
je
div
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
test
jnp
jbe
sbb
add
add
add
add
xchg
push
out
cli
cli
cli
cli
cli
cli
cli
cli
sti
not
xchg
xchg
jnp
jbe
sbb
add
add
add
add
xchg
jb
out
idiv
idiv
cli
cli
cli
imul
mov
xchg
jnp
jbe
inc
sbb
add
add
add
add
jnp
gs
out
idiv
div
mul
mov
xchg
xchg
ja
imul
sbb
add
add
add
ja
jp
jnp
add
fcmovne
(bad)
mov
jp
imul
add
add
add
jae
ja
jnp
jnp
mov
xchg
jnp
imul
cwde
cwde
xchg
add
add
add
add
ja
ja
jp
jnp
jnp
jnp
jp
pusha
pop
inc
and
add
add
add
add
jae
je
jp
ja
pusha
pop
sbb
sbb
sbb
adc
adc
adc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
push
aas
(bad)
inc
ud0
add
lock
(bad)
add
pavgb
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
ud0
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
sub
add
cmc
add
sti
cmp
add
pop
add
fstp
add
inc
add
stc
pop
add
iret
push
add
jg
add
arpl
add
data16
call
imul
add
outs
add
hlt
outs
add
clc
outs
add
in
add
in
ja
add
jnp
add
jno
add
jge
add
jl
add
arpl
add
js
add
jns
add
test
add
call
fadd
add
test
add
mov
add
pop
add
xchg
add
xchg
add
in
add
add
xchg
add
neg
add
neg
add
out
sbb
out
adc
out
xchg
adc
hlt
xchg
pop
add
mov
push
add
lods
or
add
cmps
add
icebp
stos
add
clc
stos
add
out
mov
add
repz
add
mov
add
mov
add
cmc
mov
add
rol
sub
add
xchg
aas
add
mov
add
rol
cmc
rol
icebp
les
add
(bad)
and
repnz
cs
sahf
dec
add
xchg
dec
add
nop
push
add
cdq
push
add
lods
push
add
mov
dec
add
lods
pop
add
stos
push
add
mov
gs
stos
push
aam
gs
mov
add
mov
js
repz
push
add
leave
pop
add
retf
(bad)
mov
xchg
add
scas
xchg
add
mov
xchg
loopne
mov
lock
add
rol
add
int
add
int
add
sar
add
fld
add
retf
lds
xlat
aam
add
xlat
xlat
add
fcom
add
fcmovnu
add
(bad)
add
int
add
aad
add
aam
add
xlat
rol
loope
aam
loopne
fild
out
aad
loope
fild
loopne
loopne
in
loope
in
in
in
in
add
jmp
icebp
out
jmp
repnz
repz
hlt
repz
hlt
hlt
add
cmc
hlt
add
clc
test
(bad)
(bad)
inc
pop
dec
push
push
push
adc
or
add
add
add
or
adc
or
add
add
xor
je
ins
inc
sbb
add
add
imul
jbe
jb
adc
add
add
and
add
add
pop
cmp
push
bound
add
add
imul
pop
sbb
sub
xor
xor
js
sub
add
add
test
xchg
pop
add
add
add
outs
dec
sub
popa
inc
arpl
jge
inc
sub
add
add
ss
xchg
or
add
pop
ds
cmp
dec
inc
dec
cmp
add
cmp
xor
and
or
add
add
add
push
push
push
push
push
push
push
push
add
add
(bad)
inc
add
pop
add
loopne
add
rol
add
add
add
add
add
add
add
add
add
add
add
sldt
or
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
add
or
add
or
add
add
add
add
dec
add
add
or
add
pop
add
add
or
add
add
pop
sub
add
lahf
gs
xchg
gs
sub
add
or
add
pop
push
add
pop
add
push
add
daa
add
add
adc
sbb
cdq
data16
shl
clc
in
add
loope
add
loope
add
loope
add
loopne
add
pop
push
add
add
add
add
sbb
add
add
add
add
push
add
or
add
add
add
push
add
inc
add
retf
cmc
in
jp
(bad)
in
add
loope
add
jecxz
add
in
add
in
add
in
add
in
add
out
add
ret
call
pop
add
or
add
push
add
add
push
push
add
or
add
add
jnp
lock
add
cmc
ins
add
icebp
pusha
add
lock
(bad)
jmp
add
call
addr16
in
add
jecxz
add
in
add
jecxz
add
out
add
ret
inc
add
mov
add
mov
add
cmp
add
dec
add
add
push
add
add
push
push
add
add
add
add
add
sub
call
add
call
jns
(bad)
hlt
data16
cmc
ins
add
cmc
jb
(bad)
cmc
jno
(bad)
div
push
outs
add
hlt
ins
add
icebp
ins
add
out
imul
jmp
add
out
add
in
add
in
add
jecxz
add
out
add
lds
push
daa
add
xchg
and
lock
add
add
add
add
add
add
add
push
push
add
add
add
add
sbb
(bad)
pop
push
add
mov
xchg
add
test
add
idiv
push
ja
push
jbe
push
jne
push
je
push
jae
push
jb
push
jno
push
jo
push
outs
add
rep
add
lock
add
in
push
(bad)
jmp
addr16
in
add
out
add
(bad)
dec
add
mov
sub
jmp
add
xchg
add
add
add
dec
add
add
add
add
add
add
add
sub
add
push
adc
add
ins
add
rol
add
cmc
je
push
jno
(bad)
cmc
jnp
(bad)
idiv
push
jl
(bad)
cmc
jnp
(bad)
test
clc
cdq
add
clc
cwde
add
test
add
cmc
je
(bad)
cmc
jae
(bad)
div
push
jo
(bad)
cmc
outs
add
repnz
add
out
imul
jmp
add
out
add
out
add
(bad)
dec
add
mov
add
mov
add
lods
and
add
add
imul
add
cmp
add
sbb
add
add
add
add
or
add
sub
add
ret
repz
mov
std
cmc
jl
push
je
(bad)
cmc
jge
(bad)
cmc
add
push
add
(bad)
test
(bad)
(bad)
add
mov
jae
inc
test
(bad)
xchg
pop
(bad)
shl
and
not
add
div
cmc
jb
(bad)
div
push
outs
add
hlt
outs
add
lock
add
in
push
(bad)
jmp
dec
add
mov
add
mov
add
mov
add
add
add
add
dec
add
add
add
add
add
add
add
add
bound
add
mov
cli
cmc
jns
push
jg
push
add
test
push
test
push
test
push
test
push
mov
(bad)
out
cmps
add
(bad)
je
push
test
aam
mov
call
xlat
xlat
call
aad
call
aam
call
rcl
dec
retf
retf
dec
ret
mov
push
xchg
push
jne
push
jae
push
jb
push
jo
push
outs
add
icebp
ins
add
out
ins
add
(bad)
dec
add
mov
sub
push
add
cmp
add
add
add
add
add
add
add
add
add
leave
jnp
or
xchg
add
cmc
add
cmc
test
(bad)
test
(bad)
test
(bad)
cmc
mov
(bad)
cmc
mov
(bad)
mul
add
scas
cmp
dec
mov
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
fdivr
fcmovnu
(bad)
fcmovu
(bad)
fcomp
fcos
xlat
xlat
xlat
(bad)
(bad)
(bad)
(bad)
(bad)
aam
aad
rcl
sar
retf
(bad)
fld
arpl
not
add
cmc
je
(bad)
cmc
jb
(bad)
div
push
outs
add
repz
inc
dec
add
mov
add
mov
add
mov
add
push
add
add
add
add
add
add
not
add
test
push
mov
push
mov
push
mov
push
mov
push
lea
push
lods
add
mov
dec
das
(bad)
fcmovnb
sar
loope
jmp
loopne
(bad)
(bad)
(bad)
(bad)
fdivrp
fstp
(bad)
(bad)
fdivr
fcmovnu
(bad)
fcmovu
(bad)
(bad)
fcos
xlat
xlat
xlat
call
(bad)
(bad)
call
aam
dec
into
into
call
lds
mov
push
jbe
push
je
push
jae
push
jno
push
je
inc
dec
add
mov
sub
(bad)
mov
or
add
not
add
cmc
mov
(bad)
cmc
lea
(bad)
test
(bad)
not
add
icebp
scas
add
mov
add
shl
loope
(bad)
jecxz
jecxz
jecxz
jecxz
loop
loop
loope
loope
loopne
loope
(bad)
(bad)
(bad)
fdivrp
fstp
(bad)
(bad)
fdivr
fcmovnu
(bad)
fcmovu
(bad)
(bad)
fsin
xlat
fcomp
(bad)
(bad)
(bad)
(bad)
dec
int
(bad)
loope
dec
push
jg
(bad)
cmc
ja
(bad)
div
push
jae
(bad)
div
inc
dec
add
mov
add
mov
add
mov
add
add
xchg
add
add
cmc
pop
(bad)
cmc
xchg
add
not
add
not
(bad)
mov
add
ret
(bad)
in
loope
in
in
in
in
in
in
jecxz
jecxz
jecxz
jecxz
loop
loop
loope
loop
loope
loope
loopne
loopne
(bad)
(bad)
(bad)
fdivrp
(bad)
fdivr
fcmovnu
(bad)
fcmovu
(bad)
(bad)
fcos
xlat
xlat
xlat
dec
leave
mov
(bad)
cmc
jns
(bad)
div
push
jne
(bad)
idiv
inc
dec
add
mov
daa
add
mov
sub
add
add
add
xchg
add
cmc
xchg
add
cmc
xchg
add
not
add
imul
add
mov
loopne
(bad)
out
out
in
in
in
in
in
in
in
in
in
in
jecxz
jecxz
jecxz
jecxz
loop
loop
loop
loop
loope
loope
loopne
loopne
(bad)
(bad)
(bad)
fdivrp
fstp
(bad)
fcmovnu
(bad)
fcmovu
(bad)
(bad)
(bad)
(bad)
(bad)
fld
imul
test
(bad)
idiv
push
ja
(bad)
idiv
dec
push
add
mov
daa
add
mov
sub
add
not
push
cwde
add
neg
add
mul
add
scas
cmp
jmp
aad
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
jecxz
jmp
loop
jmp
loop
jmp
loope
jmp
loopne
(bad)
(bad)
(bad)
(bad)
fdivrp
fstp
(bad)
fcmovnu
(bad)
int3
retf
hlt
mov
add
idiv
push
jge
dec
pop
add
mov
sub
(bad)
mov
sub
add
cmc
xchg
add
cmc
popf
add
cmc
mov
add
jmp
call
scas
mov
(bad)
out
call
jmp
out
(bad)
out
out
out
out
out
out
in
out
in
in
in
in
in
in
in
in
jecxz
jecxz
jecxz
jecxz
loop
loop
loop
loop
loope
loope
loopne
loopne
(bad)
(bad)
(bad)
fdivrp
aad
aad
in
cmp
push
jnp
(bad)
idiv
(bad)
rcr
inc
sub
inc
sub
inc
sub
cld
lds
push
cmc
xchg
add
cmc
mov
add
imul
add
shl
call
call
(bad)
call
out
(bad)
out
out
out
out
out
out
out
out
out
out
in
out
in
in
in
in
in
in
in
in
jecxz
jecxz
jecxz
jecxz
loop
loop
loop
loop
loope
loope
loopne
loopne
(bad)
fdivr
fdivr
add
cmc
jle
(bad)
cmc
jns
(bad)
(bad)
pop
add
enter
enter
leave
sub
dec
add
add
add
pushf
add
imul
add
jecxz
add
mov
retf
jmp
jmp
jmp
(bad)
call
call
call
jmp
out
jmp
out
jmp
out
jmp
in
(bad)
fadd
xchg
mov
rcl
jmp
loope
jmp
in
jmp
in
jmp
jecxz
jmp
jecxz
jmp
loop
jmp
loopne
call
les
test
(bad)
ficomp
dec
sub
dec
sub
dec
cs
into
das
add
mul
add
imul
add
mov
add
shr
jmp
(bad)
jmp
jmp
jmp
(bad)
(bad)
into
(bad)
loopne
(bad)
(bad)
call
call
out
out
out
out
out
jmp
pusha
push
mov
(bad)
aad
sub
inc
mov
xlat
(bad)
loop
loop
in
in
jecxz
jecxz
loop
loop
iret
enter
xchg
add
cmc
add
cmc
add
fisub
call
sub
add
shr
add
shl
add
cmc
cmps
add
cli
aad
(bad)
stc
rol
(bad)
repnz
pushf
sub
(bad)
fdivr
jmp
jmp
(bad)
jmp
call
ret
ret
jb
(bad)
mov
jmp
call
(bad)
call
call
mov
cmc
mov
(bad)
hlt
mov
(bad)
icebp
cmps
add
jecxz
or
(bad)
mov
mov
mov
(bad)
fdivr
jecxz
jecxz
into
retf
ret
xchg
push
push
test
(bad)
cmc
add
loop
add
fsubr
add
fsubr
add
xlat
xor
(bad)
aad
add
cmc
lods
add
cli
xlat
add
sti
fld
jmp
movs
add
(bad)
dec
and
jmp
jmp
(bad)
jmp
jmp
jmp
jmp
jecxz
jecxz
shr
or
lods
inc
add
aad
xchg
jmp
out
jmp
jecxz
(bad)
fcmovu
(bad)
into
int3
(bad)
dec
mov
jo
in
cmps
pop
push
stos
add
out
movs
add
in
pushf
add
jmp
add
jmp
outs
pop
(bad)
mov
mov
into
retf
(bad)
xchg
pop
push
xchg
push
test
jmp
arpl
(bad)
fidiv
add
fidiv
add
(bad)
add
fnstenv
add
cmc
mov
loope
fld
(bad)
cli
fild
(bad)
fdiv
(bad)
out
push
div
idiv
icebp
icebp
icebp
(bad)
in
in
in
(bad)
fstp
fdivr
aad
pop
(bad)
in
add
loopne
add
mov
add
enter
int3
lods
js
shl
daa
(bad)
jmp
movs
add
icebp
cmps
add
lock
add
out
mov
add
jmp
add
jmp
jle
(bad)
frstor
(bad)
mov
add
enter
into
enter
xchg
add
cmc
mov
(bad)
cmc
xchg
(bad)
jmp
add
jecxz
add
jecxz
add
loope
add
fidiv
push
cmc
mov
add
cli
loopne
dec
dec
add
in
mov
idiv
div
idiv
lock
(bad)
out
aaa
(bad)
call
imul
loop
add
fidiv
(bad)
call
xchg
(bad)
jmp
add
in
cwde
add
in
popf
add
in
lahf
add
in
lahf
add
in
sahf
add
in
fwait
add
jmp
(bad)
jmp
pop
add
lods
xor
jmp
in
dec
shr
cmc
mov
(bad)
cmc
xchg
(bad)
out
ins
add
jmp
xor
(bad)
out
add
jecxz
add
repnz
add
cmc
mov
add
hlt
rol
inc
xor
(bad)
cmc
cmc
cmc
(bad)
in
loope
push
mov
add
mul
add
out
fwait
add
jmp
add
(bad)
jmp
mov
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jns
inc
inc
add
mov
das
jmp
int3
(bad)
jmp
out
jmp
jecxz
dec
mov
push
xchg
add
test
push
ins
add
out
xor
(bad)
out
xor
(bad)
in
xor
jmp
add
repnz
pmaddwd
add
stc
fld
(bad)
jmp
(bad)
repnz
(bad)
jmp
(bad)
(bad)
repz
push
xchg
(bad)
hlt
xchg
add
cmc
mov
add
imul
add
div
(bad)
lock
add
fld
dec
pop
add
mov
jl
(bad)
jmp
jo
push
je
(bad)
out
loope
call
call
loopne
aad
arpl
not
add
cmc
xchg
(bad)
imul
push
xor
(bad)
cmc
xor
(bad)
icebp
xor
add
repz
pop
test
cli
stc
xlat
add
loop
add
enter
repnz
bnd
push
add
hlt
mov
(bad)
hlt
xchg
add
cmc
call
in
mov
(bad)
in
or
out
mov
(bad)
lock
popa
(bad)
rep
xchg
push
int
(bad)
imul
call
push
lods
add
in
mov
dec
inc
push
(bad)
fisubr
(bad)
lock
lock
out
out
out
jmp
in
(bad)
call
mov
(bad)
stc
mov
(bad)
clc
cmps
add
cld
imul
(bad)
sti
ss
div
add
repnz
add
add
add
mov
and
enter
aad
(bad)
fbld
sub
repz
repz
loopne
push
mov
push
mov
hlt
add
hlt
xchg
(bad)
jmp
outs
dec
(bad)
clc
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
retf
in
test
(bad)
call
fst
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
jmp
in
(bad)
clc
int3
or
sti
retf
add
cli
lds
(bad)
stc
mov
(bad)
(bad)
push
add
push
add
cld
cmp
push
cmp
and
add
add
scas
add
leave
add
clc
rol
(bad)
fisub
sub
repnz
hlt
hlt
(bad)
cmc
cmc
cmc
push
hlt
hlt
(bad)
bnd
push
push
test
(bad)
rcl
div
icebp
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
div
out
(bad)
jmp
test
div
in
(bad)
clc
clc
clc
push
div
(bad)
div
idiv
div
idiv
div
idiv
repnz
aam
(bad)
cli
retf
add
cli
mov
(bad)
stc
mov
(bad)
(bad)
addr16
(bad)
cmp
(bad)
(bad)
cmp
(bad)
cld
cmp
push
cmp
and
add
add
scas
add
test
(bad)
clc
rol
jmp
stos
add
mov
and
icebp
icebp
icebp
push
repz
hlt
hlt
hlt
push
hlt
hlt
(bad)
cmc
cmc
cmc
(bad)
cmc
cmc
cmc
(bad)
repz
jecxz
repnz
xchg
loope
and
out
mov
idiv
div
idiv
clc
clc
clc
push
div
(bad)
clc
clc
clc
(bad)
imul
jmp
(bad)
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
cmc
cmc
cmc
(bad)
call
(bad)
xor
cli
retf
cli
les
(bad)
stc
mov
add
(bad)
addr16
(bad)
cmp
(bad)
(bad)
cmp
(bad)
std
cmp
push
cmp
add
repnz
inc
test
add
out
mov
or
out
in
in
push
repz
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
div
push
hlt
hlt
push
call
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
cmc
cmc
cmc
push
lock
(bad)
stos
(bad)
stc
lds
(bad)
cli
mov
stc
rol
stc
mov
add
std
addr16
(bad)
cmp
(bad)
(bad)
cmp
(bad)
std
cmp
push
aas
add
repnz
add
int3
add
test
add
movs
cmp
(bad)
jecxz
retf
push
repnz
repz
repz
repz
hlt
hlt
hlt
(bad)
hlt
hlt
hlt
push
hlt
hlt
(bad)
cmc
cmc
cmc
(bad)
cmc
cmc
cmc
push
cmc
cmc
(bad)
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
cmc
cmc
cmc
(bad)
cmc
cmc
cmc
push
cmc
cmc
(bad)
cmc
cmc
cmc
(bad)
repz
loop
(bad)
in
mov
add
stc
ret
stc
mov
add
clc
stos
add
std
imul
(bad)
cmp
add
std
cmp
add
icebp
stos
add
int3
add
test
push
leave
add
mov
add
int
nop
push
lock
repnz
repnz
repz
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repz
jmp
(bad)
clc
ret
add
stc
lds
(bad)
stc
mov
add
clc
mov
(bad)
clc
test
(bad)
std
push
(bad)
(bad)
aas
add
(bad)
aas
add
(bad)
aas
add
clc
inc
add
icebp
stos
add
retf
test
push
enter
xchg
add
cmps
pop
inc
(bad)
jmp
jmp
icebp
icebp
icebp
push
icebp
icebp
(bad)
repnz
repz
repz
repz
repz
repz
repz
hlt
hlt
hlt
(bad)
hlt
hlt
hlt
push
hlt
hlt
(bad)
hlt
hlt
hlt
(bad)
hlt
hlt
hlt
push
hlt
hlt
(bad)
hlt
hlt
hlt
(bad)
hlt
hlt
hlt
push
repz
in
in
in
(bad)
aad
mov
(bad)
stc
enter
rol
clc
mov
add
imul
add
std
imul
(bad)
inc
(bad)
inc
(bad)
stc
inc
add
repnz
add
add
cmc
ret
add
test
(bad)
hlt
mov
pop
call
retf
out
out
out
push
icebp
icebp
(bad)
icebp
icebp
icebp
(bad)
repnz
repnz
repnz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repnz
out
out
out
(bad)
aad
sar
out
das
(bad)
clc
retf
clc
les
(bad)
clc
mov
add
clc
lods
add
mul
add
cld
addr16
inc
(bad)
inc
(bad)
inc
(bad)
cli
inc
add
repnz
add
cmc
rol
cmc
ret
test
call
mov
jmp
in
(bad)
out
out
out
push
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
repnz
repnz
repnz
repz
repnz
repnz
repnz
repnz
repnz
in
in
in
call
rcl
(bad)
fidivr
add
clc
mov
(bad)
clc
mov
push
mov
push
test
push
mov
add
cld
data16
inc
inc
cld
inc
add
stc
inc
add
icebp
stos
add
mov
add
cmc
rol
hlt
mov
add
mov
mov
(bad)
out
out
out
(bad)
lock
lock
lock
icebp
icebp
icebp
(bad)
icebp
icebp
icebp
push
icebp
icebp
(bad)
icebp
icebp
icebp
(bad)
icebp
icebp
icebp
push
repnz
icebp
icebp
icebp
(bad)
icebp
icebp
icebp
push
lock
call
retf
(bad)
(bad)
fidiv
add
clc
retf
test
add
div
add
mul
add
neg
add
inc
(bad)
inc
(bad)
sti
dec
add
cli
inc
add
add
add
lods
add
hlt
mov
add
hlt
mov
add
lock
(bad)
lahf
pop
sbb
mov
jecxz
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
lock
lock
lock
lock
lock
icebp
icebp
(bad)
lock
in
in
in
(bad)
fstp
(bad)
ret
(bad)
fisubr
add
test
add
idiv
add
imul
(bad)
neg
(bad)
not
(bad)
dec
(bad)
dec
(bad)
cld
dec
add
sti
dec
add
add
add
mov
movs
repz
add
hlt
mov
add
hlt
mov
add
out
lods
add
test
and
test
mov
jmp
out
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
inc
(bad)
test
(bad)
jmp
push
retf
test
add
div
add
mul
add
cmc
xchg
add
cmc
mov
push
pop
(bad)
cld
arpl
(bad)
dec
(bad)
dec
(bad)
std
dec
add
cld
dec
add
add
repnz
mov
mov
(bad)
repz
push
mov
(bad)
repz
(bad)
hlt
mov
add
hlt
mov
add
int
adc
mov
test
inc
ret
ret
(bad)
rcl
sar
fcomp
fdivr
(bad)
fsin
rcl
sar
mov
push
jb
(bad)
add
test
(bad)
test
push
mov
(bad)
idiv
add
cmc
cmps
add
cmc
sahf
add
cmc
xchg
add
cmc
lea
push
test
(bad)
test
(bad)
(bad)
push
add
dec
(bad)
dec
(bad)
std
dec
add
add
add
scas
add
repnz
add
repnz
(bad)
repz
(bad)
repz
push
mov
(bad)
hlt
mov
add
hlt
mov
add
fstp
cmp
mov
push
(bad)
scas
xchg
push
xchg
push
dec
cdq
xor
out
or
(bad)
test
push
les
(bad)
cmc
les
(bad)
test
push
ret
cmc
mov
add
cmc
test
(bad)
cmc
lahf
add
hlt
xchg
add
hlt
mov
(bad)
hlt
test
push
add
(bad)
(bad)
lock
dec
add
(bad)
xchg
add
(bad)
gs
(bad)
outs
add
repnz
leave
icebp
test
push
test
add
repnz
add
repz
push
mov
push
mov
push
mov
push
mov
add
hlt
mov
add
hlt
mov
add
hlt
mov
add
cmc
rol
cmc
rol
cmc
rol
cmc
rol
cmc
rol
cmc
rol
cmc
mov
add
cmc
mov
push
test
add
hlt
xchg
add
hlt
xchg
add
hlt
pop
push
nop
add
test
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
out
add
(bad)
lods
add
repnz
aad
mov
add
icebp
cmps
add
icebp
stos
add
repnz
add
repnz
add
repnz
push
mov
(bad)
repz
(bad)
repz
(bad)
repz
push
mov
add
hlt
mov
add
hlt
mov
add
hlt
mov
add
cmc
mov
add
cmc
rol
cmc
ret
add
idiv
add
hlt
movs
add
hlt
xchg
add
cmc
xchg
push
jne
(bad)
repz
repnz
add
sti
dec
add
(bad)
imul
(bad)
(bad)
xlat
add
(bad)
clc
add
push
add
add
add
mov
fsubrp
sahf
add
lock
add
icebp
movs
add
icebp
test
push
stos
add
repnz
add
repnz
add
repnz
add
repnz
(bad)
repz
push
mov
(bad)
repz
(bad)
hlt
mov
add
cmc
rol
cmc
rol
hlt
mov
add
cmc
stos
add
neg
add
div
(bad)
stc
pop
add
cli
dec
add
cld
inc
add
(bad)
cmp
(bad)
cld
ss
div
add
out
xor
(bad)
out
xor
(bad)
repnz
clc
cmp
jmp
add
add
add
stos
add
fwait
add
out
sahf
add
lock
add
icebp
stos
add
repz
push
mov
add
repz
push
mov
push
scas
add
cmc
mov
add
test
add
cld
push
add
dec
inc
(bad)
inc
(bad)
inc
(bad)
(bad)
aas
add
(bad)
cmp
add
(bad)
cmp
call
std
add
repz
ins
lock
dec
out
xor
xor
aaa
add
test
lock
add
repnz
add
icebp
lods
add
repnz
add
repz
(bad)
cmc
mov
push
stos
add
neg
add
cli
test
(bad)
cld
jp
(bad)
(bad)
outs
add
(bad)
addr16
(bad)
popa
add
call
(bad)
pop
add
(bad)
push
add
dec
hlt
dec
dec
ret
add
inc
data16
aas
add
cmp
add
icebp
test
adc
sti
int3
add
push
add
call
add
(bad)
jge
lock
jne
fcos
outs
.byte
.byte
