adc
sbb
div
icebp
fwait
pop
in
push
add
sbb
daa
fidivr
into
cmps
inc
ins
inc
xlat
test
aam
push
ss
add
add
adc
cwde
js
jl
jle
xchg
sbb
loope
or
shr
pop
lds
sbb
dec
mov
es
add
jb
mov
or
or
scas
(bad)
mov
jmp
jo
loop
ss
mov
and
cmp
xchg
dec
add
test
loop
mov
sbb
enter
in
xor
jns
dec
cmps
scas
xor
mov
and
fst
ror
cmp
mov
xor
ins
push
pusha
mov
xchg
ins
xchg
inc
xchg
dec
cmp
and
test
test
ins
imul
jae
mov
test
call
and
pushf
js
ds
lea
adc
ret
and
push
ins
or
mov
or
mov
lock
and
gs
jno
(bad)
jmp
add
cmc
mov
mov
and
ret
shl
xchg
mov
inc
pop
sub
ja
popf
pop
or
ja
test
in
call
gs
adc
dec
call
cwde
add
or
test
es
sbb
push
sub
and
xor
add
pop
dec
mov
ficom
add
(bad)
lea
not
sub
sti
push
mov
(bad)
std
push
sbb
cmp
pop
lods
xchg
hlt
xor
pop
or
mov
mov
movs
add
mov
push
mov
fsub
jp
out
push
xchg
mov
lods
ins
mov
pop
sub
ds
mov
sbb
popf
xchg
or
adc
push
dec
sbb
sub
pop
mov
ret
scas
add
sub
aam
dec
sub
pop
rcl
mov
pop
or
in
lods
sbb
xchg
cmp
adc
xor
pop
xlat
dec
sub
loope
movs
loope
enter
retf
xchg
cwde
xor
inc
xor
(bad)
in
sbb
pop
jle
xchg
sub
jmp
out
pop
mov
mov
shl
bound
fst
push
sar
call
mov
xor
mov
mov
(bad)
cmp
ja
ja
sahf
and
pop
adc
repz
(bad)
fwait
aam
sar
addr16
icebp
cmp
leave
mov
or
dec
mov
pusha
dec
jmp
aam
xchg
cmps
push
fbld
cmc
jmp
cmovo
adc
or
pop
imul
jae
cmp
pop
in
push
adc
push
mov
xchg
movs
add
push
or
and
in
and
mov
xor
sub
lds
add
jecxz
xor
shl
sbb
xchg
sub
mov
mov
dec
add
call
adc
push
inc
sub
mov
or
test
mov
adc
adc
dec
or
sub
icebp
stos
out
nop
mov
movs
mov
dec
out
and
(bad)
and
nop
stos
mov
mov
outs
popf
cs
pushf
in
stos
mov
jecxz
out
enter
lea
jmp
jb
adc
or
inc
sub
add
idiv
int3
inc
(bad)
movs
push
jle
xor
fs
and
pop
adc
xor
jns
xchg
mov
test
pop
inc
lods
ficom
cmp
dec
mov
call
mov
sbb
test
adc
push
mov
mov
or
dec
sub
in
test
jl
add
aad
or
aas
xchg
mov
dec
mov
add
enter
mov
pusha
fld
mov
stos
dec
adc
inc
inc
cmp
rep
in
popa
dec
inc
inc
(bad)
in
dec
ins
fisttp
adc
into
or
aad
popf
add
sub
cdq
ss
push
aas
fiadd
cmp
cs
ss
dec
scas
retf
scas
push
repnz
mov
bound
mov
shufps
fistp
inc
sub
pop
outs
and
call
sub
push
fist
jge
out
sbb
push
loop
xchg
mov
mov
in
popf
jmp
cmp
mov
mov
scas
daa
shl
js
jl
mov
jno
stos
xchg
and
enter
jae
push
dec
cmp
push
add
sti
loope
repnz
push
shr
add
cli
aaa
in
das
ret
ret
or
mov
inc
lea
push
jbe
mov
jae
mov
cmp
das
mov
xchg
push
aas
mov
ins
enter
pop
fdiv
xchg
push
inc
loopne
push
and
aam
out
fcom
movd
cmp
add
shl
mov
inc
dec
add
sub
inc
xchg
xchg
jo
in
ss
mov
push
cdq
cmp
xor
scas
into
push
dec
inc
inc
inc
lds
adc
add
push
xchg
fiadd
mov
mov
stos
loopne
jle
arpl
hlt
mov
sub
mov
mov
or
mov
in
jl
in
jg
lock
mov
pop
add
xchg
mov
mov
ds
adc
and
imul
cmc
cmps
iret
pop
daa
pop
pop
add
inc
pop
test
inc
pop
cld
xchg
or
jge
das
mov
movs
das
mov
mov
jmp
fsub
jle
rol
push
mov
imul
(bad)
repnz
mov
fcomp
adc
retf
xchg
jl
test
inc
mov
mov
xchg
fbstp
sar
add
bound
sub
lods
daa
dec
aad
push
add
gs
push
inc
push
lods
push
movs
test
sbb
sub
cdq
cmp
jmp
mul
mov
sti
xchg
and
fistp
cwde
ret
xchg
mov
mov
xchg
call
fimul
add
in
push
sbb
in
in
sbb
(bad)
in
add
push
in
add
test
mov
outs
imul
adc
dec
fs
leave
and
pusha
shr
sub
out
xchg
jmp
mov
push
cld
out
cmp
fucomp
add
mov
addr16
imul
ffreep
pop
cwde
add
pop
sahf
into
in
inc
xlat
sbb
ror
jno
dec
test
stc
aas
and
or
outs
scas
lock
mov
shl
mov
mov
cld
inc
cli
mov
fild
mov
nop
xor
inc
cmps
(bad)
jge
mov
out
inc
mov
jbe
sbb
pop
pushf
pop
mov
lods
pusha
jmp
scas
gs
mov
pop
outs
jge
cli
ror
sti
ret
mov
jae
cld
adc
pop
cmp
test
scas
adc
(bad)
in
fcmovnu
neg
paddw
sub
pop
add
add
daa
sub
pop
pop
pop
int3
pop
push
mov
dec
std
add
add
inc
nop
and
jne
cmc
enter
pusha
cli
lods
into
cmps
cmp
mov
inc
cdq
mov
mov
sbb
adc
jmp
jae
repnz
adc
neg
adc
mov
and
pusha
jne
or
sub
pusha
mov
adc
lds
int3
lods
adc
sub
dec
dec
nop
out
mov
push
mov
mov
sbb
mov
in
add
pop
or
sub
ins
retf
repz
call
dec
sub
cmp
lds
jg
cmp
mov
mov
sub
shl
call
pop
aaa
xchg
iret
add
das
mov
xor
cmp
daa
nop
mov
push
lahf
(bad)
pop
inc
or
sti
dec
jnp
add
repnz
push
adc
ja
fwait
out
or
popa
mov
ins
lock
and
inc
push
xchg
push
es
add
out
test
sub
mov
jg
jle
jmp
push
xchg
add
loop
and
jmp
adc
rcr
test
adc
leave
push
pushf
cdq
in
mov
jne
out
mov
push
movs
test
lea
imul
das
or
sub
jl
sbb
dec
cmp
mov
xchg
mov
push
into
push
popf
fnstsw
arpl
or
cmps
test
rcr
mov
or
add
sub
push
add
dec
(bad)
rol
push
dec
test
pop
cmp
pop
fwait
push
inc
imul
xor
js
shr
xchg
ins
aaa
adc
adc
test
inc
(bad)
outs
cs
jl
retf
test
jne
ins
xchg
icebp
or
ins
mov
les
in
cmps
mov
sti
das
jg
mov
push
xor
jb
and
loop
aad
int3
pop
(bad)
xchg
mov
(bad)
cmp
push
fst
xchg
ret
sub
sbb
pop
fidivr
stc
popf
in
ins
out
arpl
sbb
or
xchg
or
jge
push
push
sub
pop
scas
push
mov
retf
sbb
cdq
imul
out
sbb
add
sbb
inc
inc
xchg
jmp
scas
jmp
jmp
mov
adc
enter
loopne
mov
push
add
pop
sti
pop
jg
or
js
aaa
push
sbb
test
pop
dec
leave
xlat
xor
jmp
push
jp
or
push
lds
push
in
shr
dec
mov
out
lods
dec
(bad)
gs
jno
mov
ds
or
pop
out
(bad)
inc
add
dec
pusha
or
mov
or
es
and
sti
adc
psraw
hlt
gs
retf
into
hlt
mov
sub
mov
mov
lahf
je
es
jo
jno
enter
mov
xor
ret
jg
nop
cmp
daa
mov
sub
mov
push
push
daa
sub
imul
(bad)
imul
bound
adc
sub
sub
(bad)
shl
(bad)
in
mov
pop
xchg
lods
or
cmps
push
repz
nop
adc
or
add
loop
sbb
push
cmp
xchg
mov
mov
repz
cmc
push
add
push
jne
jg
sub
push
sahf
iret
jle
repz
div
pushf
imul
(bad)
xor
add
call
lods
sti
push
mov
xchg
push
push
jmp
imul
scas
xchg
ds
jne
(bad)
mov
jno
stos
fs
repz
outs
jno
mov
cmp
push
cmp
adc
inc
xor
push
idiv
or
or
enter
test
out
loop
xchg
xchg
mov
cld
retf
fst
inc
mov
jne
adc
add
aam
xchg
dec
rol
sub
mov
xchg
sbb
sbb
mov
cmp
sbb
add
fisubr
rcr
ror
clc
pop
arpl
fstp
adc
nop
inc
inc
sbb
call
imul
pop
push
push
mov
xor
addr16
inc
ror
pop
cmps
pop
mov
mov
pop
sbb
fsubr
xor
mov
sub
jno
movs
(bad)
mov
push
scas
add
stc
push
mov
hlt
and
jecxz
push
jne
xor
pop
mov
xchg
scas
pop
cmp
fidivr
je
push
mov
dec
enter
xor
call
mov
push
ffreep
and
cmp
bound
dec
dec
mov
mov
ins
adc
sbb
cwde
mov
sub
pushf
mov
pusha
inc
xchg
in
inc
arpl
scas
mov
jge
lds
push
adc
push
fld
fwait
mov
lds
aas
jbe
pusha
adc
shl
dec
cmp
movs
mov
shr
adc
out
add
mov
xchg
jmp
das
add
mov
adc
test
test
add
mov
add
jecxz
push
mov
aas
lods
ret
and
iret
sub
loope
bound
jno
inc
dec
ja
iret
push
xchg
mov
add
adc
lods
xchg
(bad)
jecxz
(bad)
das
lea
pop
nop
mov
nop
dec
fdiv
mov
rol
sub
shr
sub
inc
mov
int
sahf
push
add
add
(bad)
mul
pop
jne
dec
xchg
cmp
add
or
inc
fnsave
or
lods
add
add
repz
fdiv
inc
and
add
sbb
pop
jne
jecxz
dec
adc
test
hlt
test
mov
outs
hlt
out
scas
inc
outs
gs
inc
add
sbb
stc
sar
loopne
cmp
fist
add
cmps
cwde
retf
and
or
add
add
jnp
add
cmc
(bad)
mov
scas
xchg
mov
movs
cmp
enter
mov
push
shr
add
mov
mov
and
pop
add
nop
mov
or
xadd
mov
shl
xchg
mov
inc
cmovo
mov
adc
adc
scas
pop
fmul
jb
mov
test
stos
sub
(bad)
call
lea
scas
pushf
mov
cwde
pop
in
daa
leave
sub
in
imul
bnd
sbb
fcomp
cmp
cmovle
fisttp
inc
shr
popf
retf
retf
jo
(bad)
repnz
mov
mov
mov
xor
retf
dec
sbb
sbb
scas
mov
mov
cmps
mov
lahf
retf
xor
test
lahf
scas
stos
jmp
outs
pop
add
push
mov
jp
in
(bad)
out
imul
add
add
movs
xchg
lds
stos
or
nop
xchg
push
jl
mov
fdiv
out
aas
nop
in
ins
(bad)
stc
add
ror
and
inc
or
dec
xchg
mov
push
mov
sti
test
in
jp
mov
mov
and
pushf
push
add
movs
mov
add
fist
out
jmp
sbb
and
ins
pop
out
ja
sbb
ds
add
sbb
push
add
xchg
ret
and
call
sti
scas
dec
fs
mov
xchg
xchg
mul
xchg
call
stos
xor
xchg
fs
in
repz
dec
es
mov
retf
jmp
shl
pop
add
arpl
sbb
icebp
mov
and
cmps
imul
shl
jle
cmp
xor
cmp
or
sub
xlat
loop
(bad)
outs
dec
fnstcw
pop
loopne
aam
cmps
cmps
adc
retf
xor
add
fmul
aam
loopne
(bad)
fiadd
es
mov
loop
(bad)
rol
fsub
imul
(bad)
loop
int3
and
add
push
inc
mov
icebp
inc
push
adc
cdq
mov
cmps
leave
arpl
cmp
call
add
pop
push
add
or
push
and
push
sub
das
cmp
aaa
sbb
leave
push
and
pop
adc
add
pop
inc
inc
or
and
dec
pop
pop
push
pop
dec
fist
or
or
int3
lods
xchg
frstor
add
loop
sub
adc
repnz
les
lock
in
in
out
hlt
jmp
add
sbb
xor
inc
aas
ds
cs
jne
sub
mov
sbb
outs
push
mov
jmp
fstp
jp
pop
iret
xchg
iret
inc
jb
pop
(bad)
jb
cmps
or
adc
xor
push
push
or
mov
cmp
sub
and
jp
shr
sbb
gs
dec
jae
adc
and
js
inc
dec
pop
mov
loope
jns
ins
jl
mov
pop
jp
outs
jb
loope
sbb
je
add
cmp
mov
push
aad
xchg
test
xor
mov
mov
iret
and
mov
ficomp
mov
lea
cmc
xor
retf
test
icebp
(bad)
cld
pop
cmps
sbb
jmp
invd
add
xor
pop
mov
xchg
popa
aad
push
pop
lods
hlt
sub
sub
daa
xchg
push
pop
add
and
sbb
mov
jns
adc
call
xor
pop
lea
and
lea
inc
sbb
outs
popa
outs
push
loop
icebp
pusha
lods
cwde
xchg
xchg
xchg
dec
cmp
mov
test
test
es
mov
xchg
inc
fild
mov
mov
add
push
push
scas
cmps
mov
sbb
xor
jle
loope
and
ret
pop
leave
and
or
xor
cmp
add
xlat
adc
mov
or
call
cmp
inc
pop
pop
stos
sbb
or
je
data16
jl
outs
add
add
jb
rcr
clc
and
aad
retf
std
or
clc
fcmovu
(bad)
aam
test
mov
xchg
lea
(bad)
in
in
jmp
es
add
ret
mov
inc
inc
inc
add
or
mov
sub
cmp
or
sbb
or
cwde
sub
ins
jg
dec
push
pop
or
jecxz
adc
dec
jno
jb
push
jb
add
loopne
add
add
rol
adc
mov
enter
inc
sbb
mov
jnp
sahf
shl
aad
scas
adc
dec
dec
dec
jge
add
adc
ret
cmp
pop
pop
pop
pop
test
or
add
mov
dec
jo
jmp
jg
(bad)
shl
mov
sbb
dec
mov
pop
mov
dec
and
sub
add
mov
cs
cli
xor
mov
mov
pop
mov
cmps
cli
push
adc
push
pop
push
test
add
and
inc
out
pop
jae
pop
pop
xchg
push
pop
push
xchg
mov
jo
inc
add
adc
shl
stc
inc
imul
cli
cdq
je
fcomip
mov
cwde
cmp
test
or
push
push
adc
inc
sbb
sub
imul
inc
adc
dec
mov
push
inc
sub
adc
jp
and
(bad)
or
mov
xchg
pop
and
adc
push
lods
and
pop
daa
jne
pop
shl
outs
push
xor
and
add
repz
jno
or
inc
cli
lods
pusha
stos
push
cs
jp
scas
mov
dec
in
in
out
jmp
push
mov
sbb
std
pop
pushf
fst
xchg
fist
pop
or
mov
stc
cmp
mov
je
pop
and
mov
push
dec
inc
fs
dec
out
push
loop
and
aaa
mov
inc
inc
test
mov
(bad)
pusha
test
xchg
lods
xchg
mov
test
add
mov
sub
inc
add
xor
and
push
or
or
push
dec
or
add
inc
add
push
cmp
xor
push
ret
add
xor
jbe
jnp
es
mov
push
push
adc
outs
jno
push
loope
sub
repnz
inc
mov
adc
jge
std
adc
pop
pop
inc
pop
arpl
clc
jne
sti
and
icebp
add
mov
or
add
xor
ret
es
adc
lahf
jmp
and
adc
add
adc
cmp
mov
movs
stos
xchg
std
adc
mov
add
rcr
int3
fmul
ror
fist
cld
icebp
test
out
add
out
loop
icebp
loope
fistp
and
int3
retf
push
or
jmp
add
lahf
add
or
lahf
ror
sub
or
fmul
inc
add
lods
adc
inc
xor
inc
ret
inc
xor
daa
dec
int
or
push
sbb
popa
out
daa
xchg
and
sbb
es
sbb
in
or
lds
or
or
add
inc
add
pusha
lea
push
push
push
push
push
call
mov
mov
lea
mov
push
call
je
mov
call
ret
push
cmp
jae
push
push
push
jmp
push
push
push
push
xor
xor
lods
xor
stos
dec
jle
call
jae
xor
call
sub
jae
mov
inc
jmp
mov
mov
call
adc
loop
not
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
sub
jb
push
lea
rep
pop
jmp
pop
pop
pop
pop
pop
ret
add
jne
mov
sub
adc
ret
inc
call
adc
call
jb
ret
