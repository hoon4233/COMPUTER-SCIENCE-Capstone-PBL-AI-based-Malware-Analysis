iret
add
add
xchg
sub
clc
ins
dec
gs
aaa
or
stos
test
aas
das
or
mov
and
jmp
or
jns
pop
mov
repz
xchg
popf
mov
shl
sub
sub
movs
add
in
(bad)
or
mov
mov
dec
dec
push
jae
cmp
mov
(bad)
xor
push
mov
push
out
xor
ins
(bad)
mov
dec
arpl
xlat
cwde
shl
push
imul
and
fild
mov
mov
popf
pusha
add
jns
mov
xor
arpl
es
adc
adc
jmp
dec
jbe
fdivr
add
ret
xor
sub
loop
imul
inc
cmp
int3
or
mov
pop
int3
jb
jmp
adc
or
mov
ret
scas
cmps
(bad)
and
inc
xor
add
retf
lea
sub
das
fimul
pop
inc
hlt
push
popa
(bad)
jg
jne
sbb
stos
inc
pop
pop
(bad)
xchg
cli
shl
movs
cmp
push
and
retf
add
cdq
jle
mov
xchg
cli
in
sbb
pop
in
jno
mov
add
and
or
xor
iret
mov
pop
push
mov
aaa
ins
mov
bound
xor
cmc
mov
std
push
push
test
push
(bad)
fnstsw
mov
push
mov
leave
sub
fimul
ds
sbb
out
mov
fld
fbstp
fisub
xor
inc
mov
iret
mov
cld
sub
scas
push
pop
dec
mov
jmp
retf
clc
scas
mov
mov
out
cdq
retf
mov
adc
dec
inc
lock
cmps
jmp
cmc
xchg
cmp
test
lds
cli
dec
and
mov
or
mov
rol
jl
nop
mov
xchg
(bad)
(bad)
popf
mov
lods
(bad)
in
push
aad
in
cs
inc
and
sbb
add
frstor
mov
pop
fs
xchg
bound
adc
pop
mov
jnp
xchg
mov
lds
rol
pop
mov
push
loop
das
cdq
adc
movs
shl
add
pop
xor
gs
and
shr
adc
and
popa
pop
xor
ror
dec
and
and
mov
scas
add
(bad)
jns
ins
mov
sar
out
mov
dec
fnstenv
ret
push
das
sub
push
loope
xchg
push
pop
mul
inc
cmp
in
hlt
outs
cmp
ja
xor
jg
dec
xchg
jmp
mov
je
ret
out
push
sbb
or
cdq
inc
cdq
lds
mov
pop
ins
(bad)
or
(bad)
and
xor
push
fld
push
outs
out
jmp
mov
jg
add
fsub
jp
push
jmp
jno
lock
and
xor
cwde
and
jmp
add
mov
push
in
shl
hlt
jne
push
stos
adc
mov
lea
test
jo
int3
sti
or
mov
test
cs
in
mov
into
pushf
mov
push
ret
mov
xor
jg
cld
cmp
mov
sub
mov
mov
stc
(bad)
mov
sbb
sbb
mov
add
ins
jns
dec
rol
in
lock
ins
inc
adc
push
je
cmp
call
pmuludq
xor
stos
pop
mov
fs
mov
or
xor
retf
cmp
fwait
inc
add
adc
xchg
retf
sub
pop
test
jbe
adc
mov
mov
add
shl
inc
or
mov
loop
test
mov
pop
cmp
push
hlt
lods
jmp
dec
inc
add
adc
test
jmp
loop
cmp
push
xchg
mov
sti
xor
pushfw
inc
xor
imul
in
mov
dec
fsubr
mov
mov
lahf
lds
lock
xchg
inc
mov
push
rcl
xor
jae
jne
inc
sbb
icebp
and
into
mov
dec
std
gs
inc
jae
sahf
pop
inc
div
cs
(bad)
test
sub
xchg
cmp
mov
adc
push
jae
cmp
mov
inc
mov
std
xchg
mov
jnp
test
stos
and
jg
aam
lods
pop
add
jns
cmps
ins
minps
loop
xor
test
add
test
jne
inc
hlt
test
xchg
jne
inc
fisubr
repz
xor
xchg
cmp
and
mov
mov
bndldx
int3
jle
xchg
jg
cli
push
(bad)
ja
xlat
jmp
stos
(bad)
mov
fs
test
popf
inc
fld
or
in
(bad)
pop
pop
lods
push
xor
pop
and
aad
addr16
push
and
sbb
dec
arpl
push
dec
dec
push
mov
push
mov
lods
dec
das
push
int3
mov
pusha
stos
add
dec
inc
cmp
cmps
xchg
leave
ins
and
and
or
mov
jmp
push
icebp
add
push
pop
ds
push
xlat
adc
mov
sbb
(bad)
cmps
pop
pop
js
sub
loop
mov
je
sbb
aas
in
push
loopne
jle
xlat
dec
push
adc
in
stc
add
pop
mov
repnz
and
push
adc
xlat
sbb
cs
call
mov
mov
inc
aas
sbb
jae
push
stc
sbb
test
cld
xor
popf
xor
test
(bad)
out
shr
retf
addr16
add
outs
aam
mov
jne
mov
mov
test
popa
leave
loopne
dec
(bad)
fidiv
xchg
les
ins
in
or
js
mov
and
fisubr
pusha
xchg
sbb
(bad)
cs
mov
dec
imul
call
mov
xchg
addr16
mov
jno
sub
cmp
(bad)
jle
and
es
ret
je
je
inc
rcl
sar
lea
pop
xor
lahf
adc
fld
cld
aas
mov
test
mov
xchg
mov
enter
fnstsw
lea
xor
inc
add
les
inc
mov
fisubr
pop
cmp
jns
dec
ret
test
add
mov
hlt
popa
cmp
out
fld
es
or
or
test
add
dec
sbb
and
xor
jmp
and
mov
jae
mov
out
jno
lods
dec
stos
xor
xchg
movs
call
or
(bad)
xor
xor
pop
mov
add
jl
out
es
adc
ins
mov
or
jge
hlt
dec
jnp
out
xchg
(bad)
imul
mov
xor
jae
or
add
cmp
je
std
push
es
push
cwde
jmp
mov
in
call
call
(bad)
mov
xchg
mov
enter
add
aas
xor
xor
xchg
aaa
mov
loop
(bad)
dec
dec
call
imul
or
popf
jecxz
inc
std
test
and
mov
fisubr
in
je
out
mov
repz
call
mov
hlt
mov
cdq
inc
cdq
ins
add
inc
fucomi
stos
inc
push
popf
lods
hlt
int3
aaa
fst
imul
xor
test
inc
pop
mov
or
cli
xchg
test
jle
xchg
cdq
push
ins
cld
enter
loopne
rol
into
ins
addr16
sub
dec
addr16
mov
pusha
lea
or
ja
pop
xchg
stc
(bad)
and
enter
out
aad
test
mov
jnp
pop
lea
popf
dec
test
(bad)
push
push
jp
mov
out
push
adc
push
lds
mov
stos
cdq
push
mov
and
inc
dec
(bad)
jmp
clc
(bad)
cld
fwait
js
sub
dec
pop
sub
pop
std
daa
cdq
fwait
and
mov
mov
shr
jmp
scas
jecxz
adc
out
jge
jae
in
cmp
or
pop
and
pop
or
retf
mov
xchg
jmp
xchg
ins
aaa
jl
scas
xchg
sbb
inc
add
aas
(bad)
mov
int3
push
dec
mov
in
test
cmp
and
(bad)
daa
or
xchg
mov
fimul
dec
jl
jmp
xchg
mov
(bad)
cmp
daa
mov
xor
ds
jne
lds
xor
pop
clc
xor
ret
mov
or
mov
xchg
push
aas
add
cmps
sub
fsubr
lods
mov
je
gs
adc
pop
sub
push
dec
mov
add
mov
adc
inc
sbb
je
dec
fnsave
pusha
push
(bad)
adc
mov
std
lods
sub
jmp
movs
pop
cdq
push
into
and
jmp
loopne
lods
xchg
and
pusha
arpl
pop
in
sub
mov
retf
xchg
add
mov
push
jg
sbb
jmp
jb
and
push
or
outs
xchg
aad
ja
jae
push
push
mov
jae
mov
pop
popf
push
mov
push
jo
add
mov
fild
iret
aam
imul
jnp
adc
dec
aaa
and
cmp
cld
mov
sub
fisttp
das
mov
push
sbb
pop
(bad)
mov
sub
adc
retf
add
or
mov
mov
xchg
ror
cdq
sub
outs
mov
retf
jns
fdivrp
sbb
sbb
loope
sub
adc
mov
mov
and
fst
inc
aaa
sub
mov
sbb
mov
xor
add
shr
icebp
inc
push
jo
scas
jg
in
hlt
xchg
cmp
nop
cmp
retf
dec
dec
sub
sbb
xchg
in
adc
in
hlt
fadd
aam
pusha
cld
push
push
inc
jae
jle
jge
xchg
nop
mov
fcom
outs
and
and
loope
lea
sbb
sub
pop
and
adc
jmp
xor
cmps
pop
mov
jp
mul
cld
fld
pop
loopne
sbb
call
pop
jnp
add
mov
sbb
xchg
call
dec
push
stc
div
add
xchg
shl
nop
and
pushf
mov
in
jmp
sub
and
fild
push
jns
adc
mov
aad
jne
xchg
stos
cmc
(bad)
cmp
pop
xchg
mov
mov
and
mov
lds
imul
mov
(bad)
loopne
fcom
out
pop
jno
push
pop
(bad)
push
dec
es
sub
fwait
(bad)
int
out
mov
pop
mov
fs
in
cmp
push
adc
sub
dec
push
popa
mov
cld
pop
or
add
cmp
call
dec
les
rol
and
popa
mov
movq
clc
(bad)
mov
fwait
dec
or
pop
inc
dec
addr16
jmp
xchg
ds
dec
mov
les
push
push
sbb
js
pop
mov
dec
lock
lods
cmp
jmp
aad
aam
add
sub
xor
push
xchg
mov
pusha
shl
cld
hlt
sub
and
test
ror
icebp
adc
shl
inc
lea
xchg
in
pushf
mov
push
sub
out
jo
jnp
pop
les
or
push
(bad)
in
daa
test
stos
xlat
inc
add
add
sbb
nop
popf
dec
fwait
lea
shl
retf
call
jnp
push
mov
loopne
cmp
jmp
sub
loopne
cmp
(bad)
rol
aas
mov
(bad)
stc
cmc
adc
mov
fimul
cmp
cdq
pushf
rcr
inc
adc
xchg
inc
(bad)
jns
add
popf
aaa
fadd
jl
push
(bad)
fldenv
test
call
push
movs
gs
jecxz
les
fimul
test
push
xor
jo
rcl
pop
dec
pop
push
add
fdiv
jmp
and
jo
in
cmps
arpl
sbb
je
loope
inc
add
adc
(bad)
xchg
data16
or
in
pop
loope
cmp
inc
adc
iret
jl
adc
hlt
aad
out
xlat
mov
je
jae
pop
stos
mov
sar
fidivr
inc
pop
int3
mov
scas
and
scas
mov
lods
push
and
or
in
lock
fsubr
sub
rcl
inc
jo
and
ins
xchg
dec
out
jmp
mov
push
(bad)
in
sub
jmp
add
and
push
aad
xor
xor
inc
mov
cli
inc
sti
out
enter
push
aad
push
cmps
ins
lea
adc
mov
cmp
ret
(bad)
xor
jmp
xor
cmp
pop
mov
or
and
shl
pop
je
ss
xchg
xchg
repnz
mov
push
add
outs
push
sbb
leave
inc
hlt
sub
mov
int
enter
pop
(bad)
mov
aaa
(bad)
mov
push
inc
fmul
jl
in
push
out
popf
mov
inc
pop
xlat
pop
push
add
ins
jbe
ins
and
cmp
aad
sbb
clc
mov
pop
add
sbb
push
dec
out
outs
sbb
jmp
cmp
jo
scas
pop
daa
sub
fsub
idiv
scas
cmp
cdq
repz
clc
xor
aaa
dec
inc
push
ins
fadd
lea
add
pop
shl
retf
sub
and
adc
stc
test
adc
cmp
inc
jg
pop
xor
pop
in
jp
sub
push
stos
pop
and
mov
jle
fld
fld
inc
inc
xor
jl
jge
sbb
leave
vmread
fcomp
and
shl
cmp
mov
and
jbe
cmp
ins
repz
mov
ds
sub
push
into
imul
adc
ds
scas
lahf
xchg
std
mov
pushf
(bad)
and
(bad)
setg
or
xor
mov
nop
movs
(bad)
and
les
add
sbb
daa
push
lea
cmp
stos
scas
or
adc
test
les
xchg
jge
nop
xchg
jl
adc
pop
fmul
out
in
push
pop
jae
test
arpl
inc
(bad)
dec
addr16
mov
mov
test
fs
inc
sbb
add
xchg
inc
sbb
out
es
xchg
popa
icebp
cwde
or
and
out
cmp
in
push
movs
or
in
add
out
inc
pop
imul
push
cmp
xchg
pop
fisubr
je
movs
dec
sahf
pop
ins
nop
mov
cmp
mov
xchg
enter
int3
xchg
or
pop
push
leave
push
outs
out
inc
xchg
jmp
lea
cmp
jmp
ins
cs
pop
inc
cdq
paddb
ret
sbb
icebp
push
sub
fisubr
xchg
(bad)
cmc
loopne
lock
push
in
cmc
adc
in
mov
loope
ss
movs
mov
aas
fucomp
cli
inc
icebp
jns
lock
xor
dec
shr
or
adc
push
stos
sub
add
in
push
in
scas
and
int3
and
ror
imul
xchg
fs
jg
out
and
mov
out
xlat
and
ss
or
data16
stos
call
fst
in
sub
clc
mov
in
pop
jnp
aaa
sbb
and
add
dec
xchg
test
aaa
inc
xchg
popf
sbb
(bad)
in
ror
js
dec
nop
lock
add
mov
addr16
mov
test
das
pop
mov
pusha
pop
or
pusha
mov
dec
sbb
jle
ret
retf
fcomp
retf
mov
mov
rdpmc
jl
test
xchg
sbb
cwde
jb
inc
test
mov
out
test
rol
mov
mov
popf
push
test
push
sbb
in
cli
xchg
fnsave
js
add
adc
push
iret
sub
jo
pop
mov
into
lea
sti
add
(bad)
ficom
pop
push
and
xor
movs
cdq
repnz
loop
mov
and
mov
dec
adc
cmc
stc
retf
js
fs
cmp
adc
test
jmp
cmps
add
jno
push
ret
pop
iret
mov
inc
push
and
xor
popa
inc
add
mov
cmp
mov
jle
cs
cmc
fs
shl
push
push
sbb
movs
aam
lods
or
cmp
inc
mov
and
movs
out
mov
test
enter
mov
jo
ss
cmp
nop
popa
imul
shl
adc
out
stc
test
shl
fistp
dec
hlt
xor
lahf
pushf
mov
loopne
ret
inc
mov
stc
movs
das
ins
push
inc
or
mov
arpl
push
inc
and
nop
jge
in
mov
out
cs
push
sbb
cmp
stc
scas
mov
or
pop
xor
xlat
nop
adc
test
mov
shr
pop
pushf
push
aad
test
mov
adc
cmc
iret
cmp
sub
out
push
jmp
rcr
bnd
cwde
xchg
and
mov
les
and
ficom
in
nop
fistp
js
mov
data16
add
mov
cmp
dec
mov
mov
pop
xor
sub
(bad)
adc
xor
test
adc
dec
inc
xchg
out
sub
lds
test
cmc
jb
leave
scas
jns
and
cli
adc
movs
add
pusha
jae
sbb
lea
call
aad
sbb
in
inc
out
in
pop
or
cmp
mov
out
ja
xchg
xchg
ins
dec
jp
hlt
shr
sbb
pop
ds
rol
jns
mov
and
push
adc
push
push
inc
out
sbb
retf
ins
inc
data16
ja
fwait
movs
daa
gs
rcl
(bad)
or
mov
hlt
fsub
scas
and
je
xor
pusha
shr
mov
mov
fadd
cdq
inc
jge
bound
xor
and
fidiv
scas
or
xchg
push
stc
rol
xor
loope
jnp
ja
xor
xchg
add
or
daa
jp
daa
jno
sub
adc
sub
arpl
inc
fwait
sub
sbb
not
pop
mov
mov
into
push
and
inc
mov
fimul
mov
mov
je
add
stos
shr
mov
in
ins
and
push
fist
adc
je
bound
in
outs
pop
stos
push
mov
sub
xchg
fisubr
cmp
cmp
sbb
mov
inc
mov
jno
test
jo
aas
inc
cmp
push
push
push
pop
mov
shl
xchg
mov
jns
std
sub
mov
shl
adc
xchg
xchg
pop
push
arpl
xor
jo
mov
add
inc
fsubp
ds
jge
sbb
pop
mul
stos
sar
sub
or
inc
(bad)
or
(bad)
mov
pop
ss
cmp
inc
mov
add
loope
cdq
push
pusha
ins
(bad)
loop
jno
ins
cmp
jne
leave
jns
xor
aas
adc
add
mov
pop
jns
movs
out
xchg
es
or
pop
jl
daa
jg
add
mov
dec
jno
repz
mov
mov
sti
test
rcr
aad
(bad)
xchg
adc
jno
nop
(bad)
ss
dec
cmc
inc
inc
sbb
popf
repz
add
ret
inc
cmps
out
xor
dec
mov
mov
sahf
or
addr16
loope
mov
and
(bad)
out
mov
pop
ins
dec
movs
enter
not
push
aaa
mov
jne
in
imul
ret
imul
sub
pop
mov
inc
mov
in
xchg
mov
cmp
pop
dec
sbb
imul
and
xor
retf
push
jbe
repz
push
mov
sub
es
repz
add
dec
int
sbb
xlat
adc
jmp
fdivr
jp
sub
pop
call
sub
push
enter
sti
test
sbb
sahf
xchg
ficom
movs
xchg
mov
test
shr
xchg
push
pushf
inc
aad
(bad)
in
and
in
or
adc
xchg
in
es
mov
ins
adc
xor
and
sahf
stos
fbld
and
fild
jmp
lods
xchg
cmp
adc
mov
push
jb
mov
bound
xchg
fwait
mov
shl
(bad)
pmaxsw
pop
pop
test
dec
sub
es
mov
jmp
jmp
mov
stos
sbb
ins
imul
cmps
mov
xchg
mov
jge
push
push
ror
aam
loop
outs
jp
(bad)
loopne
inc
and
cli
std
or
mov
mov
scas
fsubr
in
push
inc
movs
pop
mov
scas
mov
dec
fst
push
pop
lea
jmp
std
jge
mov
push
jp
clc
js
imul
xchg
fdiv
cs
gs
fistp
lock
dec
sar
in
pop
pushf
ror
ins
(bad)
push
fcomp
out
retf
push
cmc
mov
mov
mov
cmp
xor
or
fsubr
scas
sub
jg
cmps
inc
adc
test
fistp
mov
sub
fisubr
push
es
mov
cmp
pop
loope
xor
xchg
ror
mov
push
jecxz
pop
inc
sub
imul
mov
out
adc
popf
cmp
mov
cmp
push
das
add
popa
pop
jns
loope
push
in
nop
enter
push
cwde
js
test
call
cmc
mov
in
or
mov
sub
das
mov
pushf
mov
xor
dec
repnz
test
mov
adc
sahf
cmp
add
pop
inc
add
mov
sub
xchg
imul
enter
mov
or
mov
sub
adc
lods
sub
call
jg
xchg
add
jne
ss
es
dec
test
imul
div
out
sub
fstp
and
adc
ja
aad
stc
(bad)
fdiv
out
xor
loop
dec
xor
mov
pop
push
mov
sub
icebp
popa
out
add
sub
and
scas
sbb
fs
movs
cmps
inc
(bad)
and
rcl
mov
fs
dec
test
stc
fcom
test
data16
ja
test
push
mov
sti
cmps
xor
jnp
js
in
sbb
into
dec
imul
test
test
mov
pop
or
inc
std
push
mov
xchg
and
pop
mov
ds
movs
in
in
adc
pop
and
bound
sbb
out
dec
fld
out
in
sub
aad
push
das
shl
div
pop
icebp
cmp
cmp
pop
and
nop
adc
xchg
(bad)
mov
iret
push
cmp
pop
mov
jmp
ds
aaa
cwde
mov
addr16
mov
xchg
imul
mov
and
aaa
mov
in
push
pop
mov
sbb
icebp
popa
xchg
xor
fldcw
cdq
push
mov
aas
popf
or
cmc
add
mov
das
data16
nop
out
movs
int3
sbb
mov
mov
or
mov
outs
repnz
adc
push
cmp
inc
retf
jb
adc
or
mov
leave
and
je
push
push
or
jmp
xchg
les
fild
icebp
jae
xor
xchg
xchg
push
outs
jge
repnz
jne
pop
jb
(bad)
stc
hlt
ds
adc
mov
cs
data16
ins
or
xor
xchg
movs
xlat
xchg
jg
jmp
(bad)
imul
and
inc
pusha
pop
jne
push
mov
xchg
or
pushf
aad
inc
fisttp
inc
push
inc
cmp
add
pop
arpl
push
mov
ds
(bad)
jmp
jge
(bad)
and
(bad)
jl
stos
cmps
imul
mov
aas
dec
xor
or
add
mov
ret
sar
jle
std
xchg
call
sbb
xor
mov
sub
cmp
test
and
mov
mov
sbb
cs
add
push
xor
fs
and
jge
jmp
push
and
cmc
sub
test
adc
in
xor
mov
push
ficomp
popa
mov
cmp
scas
xor
pop
pop
fwait
es
nop
cmp
mov
mov
ins
jle
std
mov
(bad)
imul
test
movs
xchg
mov
and
xlat
push
jns
jb
sbb
pop
mov
fs
xchg
inc
in
or
push
ja
(bad)
mov
ins
daa
aad
imul
push
(bad)
jg
cld
xor
out
push
inc
fstp
cmp
add
outs
cmc
sub
jo
loope
cs
xor
xchg
das
xor
call
repnz
dec
cmp
inc
cwde
movs
pop
rol
push
out
into
cdq
dec
pop
pop
mov
mov
scas
rcl
mov
mov
lock
mov
cmps
jbe
das
fsubr
retf
out
sub
loope
dec
pop
pop
jnp
repnz
pop
cdq
das
mov
cli
dec
in
or
mov
inc
dec
add
fcomp
adc
inc
mov
daa
fistp
leave
repz
fcomp
jle
std
pop
mov
mov
stc
jno
mov
mov
fist
dec
add
xchg
dec
test
adc
in
and
or
lds
ret
out
jno
addr16
cmps
sar
adc
mul
(bad)
imul
mov
test
dec
push
(bad)
retf
mov
cwde
sbb
scas
imul
outs
movs
or
call
outs
sbb
rcr
lock
es
add
test
push
rcl
push
jns
or
(bad)
cs
sbb
adc
cmps
pop
ror
fs
jbe
inc
das
sub
frstpm(287
aad
div
(bad)
dec
xlat
push
fild
xchg
sbb
ds
lea
sbb
(bad)
dec
xor
rcl
pop
into
mov
outs
imul
test
scas
mov
mov
inc
sti
or
pop
cs
cdq
inc
xor
add
aam
fs
iret
outs
aas
or
push
aam
push
push
inc
dec
lods
sbb
dec
ffreep
mov
xchg
es
dec
inc
fstp
repz
rcl
aas
and
add
leave
and
arpl
mov
cmp
cmp
or
std
mov
les
inc
cmps
and
lock
inc
push
push
xchg
add
jle
inc
or
xor
cld
scas
mov
in
movs
xrelease
fsub
add
ret
inc
nop
call
lock
je
xor
pop
scas
adc
(bad)
ins
ds
jecxz
mov
sbb
mov
fcmovu
jne
push
outs
xor
sahf
aaa
mov
out
sub
sar
inc
(bad)
xor
addr16
pop
das
xlat
sub
push
sub
rep
loope
rep
mov
xor
xor
rol
pop
jbe
in
xchg
in
leave
loop
mov
rcl
fs
daa
enter
ret
cmc
mov
lea
jmp
pop
jl
pop
cmps
mov
jmp
shl
test
ins
jmp
xchg
(bad)
inc
ins
push
das
or
jb
xchg
outs
mov
push
add
and
cmp
mov
lods
clc
cmp
hlt
dec
aad
rcl
setg
ds
ins
xchg
cmps
ds
and
mov
fcom
jg
xchg
stos
sbb
or
pusha
xor
test
mov
mov
sub
mov
adc
clc
inc
cmp
dec
(bad)
repz
mov
sub
mov
cmp
pop
inc
lahf
mov
jecxz
xor
mov
mov
pop
add
mov
jno
dec
push
adc
(bad)
push
and
loop
loope
lea
out
loopne
stos
jb
pop
cmp
and
out
mov
out
das
add
in
push
sub
xor
ins
cwde
shr
push
(bad)
movs
jbe
xor
mov
adc
inc
pop
push
pop
xor
loope
ret
sti
addr16
dec
push
cmp
push
imul
scas
cmp
fbld
inc
data16
mov
lock
std
dec
ds
into
(bad)
loop
leave
and
je
jns
stos
lahf
(bad)
fs
hlt
sbb
sar
fisttp
jg
add
or
or
cdq
mov
add
dec
and
or
out
pop
mov
shr
call
je
pop
outs
sar
clc
cmps
out
pop
loop
mov
pop
ss
jg
fdiv
cwde
adc
nop
div
xor
xor
fild
inc
xor
fisttp
(bad)
inc
sub
in
pop
xor
pop
aam
ins
dec
xor
dec
mov
jg
fcomi
mul
aad
outs
jbe
dec
es
dec
add
adc
lahf
ins
mov
scas
or
pop
mov
jmp
int
jmp
aaa
xor
ret
das
mov
scas
popa
dec
mov
push
dec
(bad)
lds
aaa
pop
cwde
cmp
cld
inc
test
shl
adc
in
pop
xchg
jns
sar
ret
sar
cmp
add
xor
es
cmc
mov
mov
or
cmp
in
test
imul
(bad)
dec
loopne
lock
jge
xor
movs
dec
rcl
data16
and
mov
ja
mov
je
mov
or
test
cmc
movs
add
or
(bad)
das
ss
jbe
dec
(bad)
mov
ins
fs
aad
push
jo
add
jo
popa
mov
xor
pop
and
repnz
push
sbb
out
xor
xchg
daa
pushf
sbb
xor
inc
or
push
push
dec
add
aam
pop
adc
sar
jl
in
neg
fnstsw
(bad)
sub
or
outs
sub
xor
or
fs
push
scas
(bad)
jmp
out
push
std
sub
pusha
mov
not
out
xor
cdq
or
cwde
inc
jno
sti
and
mov
aam
jge
add
or
scas
ins
inc
fdivr
cli
loope
xchg
push
out
ins
cmp
stos
pop
cmp
test
mov
dec
adc
fistp
inc
call
(bad)
popf
jmp
lds
loop
jo
fbstp
outs
push
mov
in
push
lock
push
inc
jnp
je
sub
mov
and
and
xchg
push
adc
fcmovb
sub
mov
pop
les
nop
adc
repnz
inc
sahf
add
clc
mov
sbb
aas
dec
daa
vmovhps
add
sar
jl
stos
cs
(bad)
jle
mov
mov
aaa
or
(bad)
add
mov
aaa
cmp
nop
add
jns
outs
fld
dec
cmp
push
add
aad
gs
loop
shl
int
xchg
push
ins
sub
cmc
(bad)
rcr
ins
rcl
icebp
arpl
jbe
aas
int
stc
sbb
sbb
or
aaa
mov
push
repnz
pop
xor
inc
jnp
xchg
sbb
std
sbb
inc
mov
dec
mov
gs
mov
sub
sub
push
call
inc
pop
and
pop
jg
outs
lods
sub
call
xchg
xchg
(bad)
fcmovnu
cmp
in
shr
aaa
mov
pusha
mov
inc
fwait
xchg
push
hlt
dec
lahf
push
dec
push
ror
push
mov
(bad)
lock
retf
adc
test
clc
xchg
adc
call
cmp
adc
out
cmp
shr
jecxz
jge
cmp
int
sbb
cdq
adc
push
repz
outs
scas
idiv
repz
jno
xchg
je
into
imul
or
fstp
add
lods
cmp
cmps
stc
sbb
(bad)
mov
fisttp
stos
lock
jmp
mov
in
cmp
xchg
mov
xchg
xor
test
in
cs
jmp
mov
sbb
data16
popa
ds
mov
cmp
mov
dec
jmp
push
or
lea
mov
xchg
push
inc
cwde
mov
fisubr
jge
ret
adc
test
mov
out
loope
test
mul
rcr
add
ss
jns
and
aas
out
jg
cmp
xchg
xor
into
bound
rcl
int3
cmp
cs
xchg
or
stos
sbb
shl
(bad)
inc
xor
adc
(bad)
cdq
in
mov
sub
xchg
mov
push
cdq
ss
stos
dec
jno
cmp
mov
mov
ret
jo
test
xchg
cld
sub
lods
in
and
pop
into
mov
pop
sbb
jmp
aas
cmp
stos
fwait
pop
lds
sub
jb
sub
jbe
pop
sahf
retf
xlat
out
imul
clc
sti
movs
mov
out
adc
jp
fs
das
push
int3
inc
mov
cmc
push
sub
hlt
imul
or
test
adc
test
icebp
int3
cmp
sbb
mov
sub
jmp
jns
pop
xor
push
xchg
mov
lock
mov
cmps
mov
jns
in
cmp
dec
pop
jb
sbb
adc
xchg
add
(bad)
mov
push
jmp
jne
es
sbb
fmulp
int3
(bad)
mov
mov
dec
push
xor
xchg
jge
inc
ss
int3
std
imul
retf
dec
pop
mov
xor
out
cmp
mov
inc
or
test
fbstp
push
inc
dec
loope
mov
cs
and
std
lea
pop
xor
lea
les
or
jmp
adc
jo
js
adc
sar
xchg
xor
bound
fild
mov
out
shl
xchg
xchg
xor
shl
add
cmp
or
inc
jnp
cmps
pop
sahf
out
in
loope
push
lods
clc
sub
(bad)
retf
out
std
js
mov
jnp
mov
fistp
in
dec
mov
in
xchg
cdq
into
bnd
pop
push
pop
or
inc
out
push
push
xor
cmps
cwde
aas
(bad)
dec
jl
xchg
cmp
xchg
sbb
xor
add
pop
pop
pop
pushf
or
sbb
in
xor
enter
push
inc
mov
xor
mov
push
nop
retf
inc
cmps
es
addr16
jo
movs
mov
cmc
int
mov
mov
das
push
adc
sub
lods
mov
imul
and
push
lahf
cmp
clc
xlat
out
mov
fst
adc
sub
dec
call
lock
jle
ins
mov
ds
fild
ja
fs
in
adc
jmp
jl
imul
or
std
hlt
aam
pop
dec
add
mov
scas
mov
mov
push
cmps
sbb
inc
loopne
add
jae
in
les
test
sbb
sbb
(bad)
mov
sbb
sub
jns
sbb
cmp
cmp
test
std
cmp
fwait
mov
sbb
mov
mov
push
ss
dec
cmp
cmp
mov
repnz
clc
pop
pop
in
pop
(bad)
push
mov
mov
pop
jnp
cs
jbe
pop
iret
and
mov
mov
xchg
into
jge
or
cmp
or
mov
(bad)
bound
ret
loope
inc
fwait
imul
mov
(bad)
mov
lods
imul
scas
pop
mov
scas
add
in
inc
xchg
mov
adc
dec
rol
dec
int3
pop
call
mov
inc
pop
leave
not
fsub
sbb
aaa
ds
xchg
inc
sahf
inc
dec
lds
ins
popa
xor
ror
pusha
jg
dec
test
ds
xor
and
addr16
(bad)
in
mov
jg
mov
sbb
pop
call
in
mov
mov
(bad)
dec
push
std
dec
push
test
dec
shr
ret
not
dec
jmp
lahf
dec
shl
pop
(bad)
les
xchg
call
cmp
mov
push
stc
mov
dec
xor
inc
fstp
loop
cli
mov
add
sbb
(bad)
cmps
or
xchg
test
repnz
imul
ins
jmp
jnp
jnp
push
pop
fistp
sub
icebp
mov
push
arpl
adc
sbb
(bad)
mov
ss
push
pop
add
inc
pop
rcl
cwde
pop
shr
xor
sbb
ret
retf
adc
and
adc
(bad)
mov
dec
repnz
sbb
nop
jmp
movs
dec
std
adc
push
das
repnz
out
aad
(bad)
stos
jl
gs
cmps
cmp
cmc
mov
icebp
cld
shl
sar
mov
lods
xchg
call
mov
into
xlat
pop
aad
sbb
push
aaa
in
in
adc
addr16
movs
cmc
test
aad
adc
js
dec
and
jne
rol
in
aam
ins
out
xchg
pop
imul
add
jmp
inc
push
mov
fs
pop
mov
add
adc
movs
sbb
mov
test
test
or
sahf
push
imul
ss
cmp
test
mov
retf
push
out
popf
jno
dec
push
dec
xor
dec
pop
adc
inc
outs
xchg
or
inc
jg
dec
aaa
test
repnz
outs
test
mov
pop
pop
pop
mov
in
dec
mov
bound
out
xor
sbb
mov
imul
(bad)
lahf
and
sbb
mov
pop
test
lds
push
xchg
daa
sub
stos
push
mov
je
sbb
sub
adc
cmp
cmp
(bad)
clc
(bad)
bound
fild
jp
mov
out
sbb
fmul
adc
or
and
fwait
repnz
mov
popa
imul
pop
or
jae
sub
dec
dec
aad
dec
inc
xor
out
jp
inc
bound
and
(bad)
mov
cmps
sub
or
out
sbb
inc
(bad)
ds
or
push
xchg
mov
bound
out
inc
mov
daa
sbb
dec
push
aad
push
sti
jb
hlt
rep
retw
cmp
and
cli
push
push
xor
add
in
repnz
ins
mov
shl
sub
(bad)
into
mov
add
pushf
sub
inc
xchg
sub
jp
jnp
pop
push
test
push
mov
dec
cmps
mov
and
xor
ins
mov
jl
repnz
int
mov
adc
mov
push
sbb
xchg
in
add
jmp
add
mov
and
dec
in
pop
dec
adc
dec
rol
inc
or
jae
push
cmps
rcl
mov
mov
shl
adc
in
xchg
push
fcmove
jg
push
jl
std
pop
nop
repz
push
imul
add
cmp
push
sub
scas
mov
pop
dec
add
inc
out
out
mov
rcr
call
lods
mov
clc
push
js
cli
cld
and
xor
cmp
stos
ror
sub
mov
xor
push
fcom
xor
cmp
cdq
shl
push
adc
push
scas
clc
sbb
in
push
push
in
popa
scas
sbb
sbb
jmp
sub
ins
dec
stos
add
mov
push
xchg
lock
movs
icebp
jge
je
mov
cmp
cwde
(bad)
cmp
fbld
das
popa
mov
add
das
jo
xchg
in
and
out
and
push
inc
sbb
xchg
std
lahf
data16
mov
or
nop
out
retf
jmp
jmp
mov
cmp
push
leave
jge
mov
ss
(bad)
stos
pusha
cmp
cwde
mov
fwait
sub
mov
inc
call
test
scas
jle
stos
pop
mov
inc
int3
mov
ret
and
sbb
or
fcmovu
xor
icebp
movs
lods
jnp
js
mov
and
ss
sub
xor
(bad)
(bad)
add
int3
cli
fsubr
cwde
adc
mov
jns
inc
pusha
out
adc
ret
ret
mov
mov
jmp
inc
lahf
add
js
xor
mov
push
mov
cmp
cmp
add
adc
aas
and
mov
xchg
shl
arpl
test
imul
sub
xor
repz
mov
sahf
loope
adc
out
sbb
lds
int3
dec
mov
xor
sti
(bad)
neg
dec
bound
scas
sti
sar
je
stos
and
jno
adc
popa
xchg
inc
int3
fmul
sahf
adc
out
dec
and
clc
pop
fwait
jb
sti
push
call
pop
inc
shr
(bad)
adc
fsub
adc
cld
fs
mov
mov
push
push
cmps
mov
fsub
in
pushf
and
sub
sbb
inc
sbb
mov
xchg
mov
adc
lahf
lds
push
stc
je
adc
sub
pop
mov
hlt
inc
and
mov
jo
pop
mov
fdiv
jnp
pop
sbb
dec
icebp
bswap
cli
mov
push
xchg
cld
repz
adc
xchg
jb
aas
fisttp
dec
pop
lahf
pop
inc
mov
mov
cmp
jne
(bad)
popf
push
mov
xlat
outs
mov
call
iret
in
or
mov
dec
lods
int
bound
sahf
sbb
xor
call
cmp
and
mov
add
xor
stc
mov
jnp
sbb
dec
add
out
dec
jbe
and
adc
xchg
xor
and
jns
imul
xor
nop
push
mov
rcr
stos
add
mov
shl
and
cdq
fild
call
jb
mov
sar
rcr
ins
das
ss
test
(bad)
lods
xchg
mul
pop
les
dec
mov
out
movs
pop
cli
icebp
or
fucomip
mov
mov
push
inc
(bad)
mov
dec
mov
mov
dec
and
dec
dec
leave
mov
pop
movs
push
push
shl
inc
sub
jl
add
push
xchg
xchg
ficom
(bad)
sub
adc
repz
clc
sub
imul
sub
daa
jmp
dec
dec
sbb
cmps
popa
adc
(bad)
adc
adc
popf
push
mov
rol
dec
dec
or
sbb
outs
xchg
cdq
add
pusha
rcr
test
ret
fnstsw
fst
mov
mov
pop
and
jmp
xchg
cmp
int3
add
mov
jbe
mov
jg
jae
jo
pop
std
xor
std
repz
pop
jnp
cmp
retf
mov
xchg
sub
outs
push
mov
fbstp
dec
repz
outs
sbb
push
imul
outs
mov
int3
or
jns
into
xchg
sbb
cmps
icebp
inc
pushf
sbb
or
and
xor
or
mov
imul
pushf
out
leave
iret
push
call
out
push
arpl
aas
pop
mov
or
hlt
dec
mov
pop
das
ja
jge
add
inc
scas
mov
fdivr
shl
rcr
mov
call
jmp
pop
lds
mov
xchg
xchg
adc
scas
ror
jl
inc
mov
aam
(bad)
xor
bound
lds
ds
push
adc
test
mov
cmps
and
push
addr16
dec
out
cs
mov
enter
pusha
dec
sub
rcl
ss
inc
xlat
and
(bad)
adc
mov
test
fst
lock
lods
adc
enter
imul
cld
mov
inc
repz
mov
push
adc
mov
cdq
dec
call
in
inc
pop
fld
in
xor
mov
xchg
call
retf
xchg
inc
push
jmpw
adc
in
ror
dec
out
popa
shl
ds
out
aas
repz
lds
sub
(bad)
sahf
add
mov
dec
or
sbb
repnz
adc
fidivr
lods
dec
retf
push
push
cli
movs
nop
xor
dec
push
loop
add
cld
jmp
fiadd
xlat
jp
pusha
or
mov
inc
setno
mov
push
mov
test
(bad)
fmul
ret
in
shl
or
mov
xor
push
xor
pushf
mov
(bad)
and
in
leave
jmp
daa
imul
(bad)
mov
push
iret
inc
pop
cmp
nop
fcmovnu
mov
inc
ret
(bad)
jl
sbb
xchg
fiadd
fwait
cmp
inc
leave
sti
imul
sbb
js
push
das
sub
sub
(bad)
gs
ins
shl
pop
stos
lea
or
sahf
or
inc
sahf
mov
jecxz
sbb
and
mov
jl
and
ja
popf
repz
and
inc
push
icebp
fadd
repnz
outs
mov
ficomp
sahf
or
std
addr16
out
push
dec
inc
fwait
xchg
adc
push
jg
sbb
imul
addr16
mov
adc
and
leave
pop
pushf
or
mov
shr
aaa
arpl
pusha
and
inc
es
shl
mov
(bad)
xor
js
cmp
push
dec
sahf
sub
ret
dec
jo
lock
mov
std
xor
pop
xchg
pop
push
std
push
xor
aad
mov
movs
mov
pop
hlt
test
arpl
inc
and
(bad)
sbb
mov
jb
das
pushf
rol
pop
sbb
out
arpl
ret
push
test
call
xor
cmp
lock
in
inc
mov
mov
lock
mov
cmp
pop
mov
mov
std
push
or
(bad)
mov
pop
jmp
pop
adc
mov
sub
daa
pusha
movs
(bad)
jmp
in
pop
pop
ins
gs
push
jnp
pop
(bad)
xchg
fisttp
cmp
or
dec
mov
xlat
scas
push
and
dec
cmp
cmc
cmps
and
bound
mov
ja
pusha
cmp
ja
test
(bad)
out
lds
retf
lea
push
inc
pop
push
mov
(bad)
movs
ret
xchg
mov
push
retf
xor
jle
push
loop
sub
and
pop
cmp
cmp
test
inc
rol
stos
pop
cmp
sbb
pop
adc
aam
push
arpl
and
std
or
scas
push
push
mov
das
arpl
daa
xchg
mov
sub
ins
(bad)
mov
aam
pop
jns
pop
mov
(bad)
dec
loope
adc
out
lods
clc
jle
mov
inc
rcl
nop
loopne
cli
mov
add
dec
loope
inc
inc
inc
popa
mov
dec
inc
arpl
pop
jno
pop
cmp
sar
in
pop
cmps
jo
dec
inc
mov
loop
sub
xor
and
aas
push
cs
adc
imul
mov
jns
cmp
movs
sahf
mov
adc
in
dec
push
inc
jb
out
adc
xor
mov
inc
adc
rcl
jb
sbb
retf
inc
outs
push
jb
mov
in
and
xlat
lods
rcr
inc
cmc
and
sbb
shr
jmp
(bad)
mov
mov
pop
cld
lock
daa
aad
xor
push
inc
push
or
mov
inc
dec
out
mov
sub
movs
stos
sbb
and
xchg
add
shl
inc
imul
out
mov
ret
sub
xchg
sbb
es
sub
ror
and
mov
adc
in
(bad)
repnz
pop
pop
cld
sub
pop
or
mov
iret
sbb
sbb
cmps
ror
imul
push
mov
cmp
aaa
enter
cmp
out
jb
jno
mov
outs
push
push
fstp
dec
and
mov
jb
push
sbb
and
stc
(bad)
(bad)
inc
retf
mov
ins
imul
adc
sahf
xchg
sbb
mov
js
das
or
cmp
mov
ffreep
pop
imul
mov
leave
shl
test
jnp
retf
sbb
rcr
inc
test
mov
sub
xor
nop
xchg
mov
cli
aaa
xor
jp
sahf
inc
xor
cmp
adc
mov
push
push
push
nop
mov
push
pusha
fisttp
leave
dec
bound
pop
jecxz
mov
movs
aam
xchg
xchg
dec
sub
js
sbb
mov
fcomp
retf
aam
rsqrtps
jg
je
gs
scas
cdq
std
mov
xchg
xchg
repz
dec
lea
cmps
fcom
and
xchg
jmp
mov
fsub
or
mov
pop
jmp
adc
pop
cmp
dec
pop
mov
and
jmp
clc
pop
fsub
fnstenv
jle
fistp
dec
xchg
std
mov
push
pop
inc
jge
mov
sbb
pop
mov
(bad)
fnstenv
fld
cmps
imul
in
in
popa
or
cdq
mov
jae
(bad)
(bad)
cld
inc
dec
pop
push
retf
xchg
lods
sbb
popf
mov
ret
pop
idiv
lea
xchg
add
cs
cmp
popa
or
int
sbb
and
inc
lods
xor
aaa
jp
add
or
movs
mov
jle
repnz
popf
dec
inc
fmul
dec
jle
jb
faddp
shl
xor
dec
and
dec
mov
jne
sub
mov
(bad)
mov
xor
xchg
mov
xlat
scas
sub
bound
inc
and
cmps
fisub
in
aas
push
shr
mov
mov
push
cmp
xor
enter
push
mov
mov
scas
push
xchg
or
push
jns
cs
xor
mov
dec
clc
scas
push
add
push
bound
mov
mov
lock
mov
mul
or
outs
ins
jp
cmp
outs
cmps
dec
es
cmp
pop
dec
icebp
outs
repz
fcom
arpl
lock
ficomp
dec
push
adc
std
jmp
dec
push
pushf
cmp
add
xor
(bad)
pop
int3
xchg
mov
sbb
mov
dec
pop
dec
xor
sbb
or
pop
neg
leave
sahf
push
mov
das
repnz
or
mov
cmp
mov
test
ret
add
imul
ja
shl
xlat
fild
idiv
pusha
(bad)
test
jns
mov
retf
stc
in
lods
imul
or
pop
add
cwde
lods
in
out
imul
and
sbb
out
daa
call
arpl
jo
imul
das
add
stos
dec
imul
dec
push
cli
pop
cmc
in
in
adc
and
push
mov
and
pop
cmps
mov
push
lock
call
xor
sub
sbb
xor
aam
lea
outs
and
aad
in
push
std
cld
mov
sbb
mov
push
sbb
lock
aad
sub
sbb
repnz
repnz
inc
and
test
gs
or
or
popa
mov
adc
mov
xor
inc
xlat
jmp
sbb
pop
aad
fistp
lods
adc
mov
cmc
and
cmps
dec
lods
pop
out
xchg
mov
stc
cmp
cwde
mov
adc
dec
test
add
mov
jnp
ss
sbb
enter
adc
inc
add
xchg
in
inc
mov
jg
cwde
fcmovne
xor
cld
mov
adc
aaa
mov
pop
mov
jmp
adc
push
pop
addr16
sbb
mov
data16
out
cmps
jle
cmp
inc
mov
ds
movs
xor
bound
and
push
imul
cmp
jecxz
cmp
jmp
int
adc
xchg
dec
push
test
sbb
push
int
push
pop
(bad)
push
inc
dec
sahf
xchg
sbb
push
test
hlt
and
adc
xchg
add
ret
mov
xchg
int
(bad)
sub
aas
pop
cld
inc
jb
lock
sbb
out
aam
lods
aas
lods
mov
repnz
rol
xor
(bad)
(bad)
cmp
in
rcr
arpl
sar
xor
push
mov
adc
jmp
xor
add
mov
mov
mov
mov
(bad)
fs
cmp
sbb
cmps
cwde
and
adc
push
and
and
test
cmp
and
outs
push
jne
xchg
sbb
pop
and
and
mov
dec
cmps
daa
lods
jmp
xor
mov
int3
call
pop
ret
sbb
dec
add
mov
stc
inc
jg
mov
jne
ss
add
bound
xchg
daa
call
clc
es
popf
push
sub
inc
jae
push
cmps
cmp
jmp
pop
pop
inc
lds
add
retf
and
sub
jl
push
fcom
das
loope
cmp
ror
jne
and
xchg
rcr
loopne
add
inc
lds
cmp
mov
mov
xchg
inc
shl
(bad)
aaa
mov
mov
mov
(bad)
push
aas
retf
push
je
sar
leave
bound
sub
ins
xchg
mov
add
and
jbe
push
je
or
gs
push
into
(bad)
lds
add
lds
(bad)
dec
outs
adc
mov
xchg
mov
fwait
or
lds
gs
or
cmp
sub
sub
sbb
sbb
xchg
imul
pop
(bad)
call
jmp
das
adc
mov
sbb
ret
add
inc
pop
stos
xor
inc
rcr
sbb
dec
dec
(bad)
xor
imul
iret
cmp
mov
push
xor
cmc
aaa
mov
sbb
bound
jne
aad
call
stos
not
mov
rol
mov
popa
mov
add
sbb
mov
or
in
mov
adc
sbb
ds
(bad)
data16
cmp
xor
sbb
inc
call
aaa
add
xlat
xchg
sbb
push
pop
fbstp
xor
xchg
sbb
mov
lock
push
push
cmp
xlat
(bad)
mov
pushf
fsubrp
dec
adc
jp
ja
mov
aam
sbb
in
call
adc
or
xlat
jns
xor
xchg
out
sbb
xchg
cmc
ins
mov
push
pusha
mov
mov
adc
jb
daa
in
sahf
mov
sbb
test
imul
(bad)
push
jns
ds
lock
fldl2t
xchg
inc
out
add
aam
sub
mov
cs
sub
inc
add
call
jo
or
repz
adc
into
jb
jg
xor
push
aas
add
push
rol
xchg
pop
push
mov
jbe
out
mov
add
xchg
lods
jg
rol
into
jae
adc
sub
arpl
pusha
pusha
push
mov
cld
mov
xchg
pop
mov
fstp
loop
cmp
pop
mov
mov
inc
in
arpl
mov
fs
in
shl
push
sbb
cmp
fild
xchg
inc
fs
into
push
call
push
rcr
mov
sub
repz
daa
push
and
rcr
in
fwait
sub
or
pusha
jo
xchg
xchg
sbb
and
nop
pop
adc
loopne
mov
hlt
add
mov
jg
pop
inc
(bad)
adc
pop
pop
in
fwait
inc
sbb
mov
adc
dec
add
int3
mov
jg
iret
fidiv
xor
and
test
push
not
shl
mov
imul
lods
mov
scas
dec
(bad)
pop
outs
xor
out
jo
jmp
add
sub
(bad)
dec
jmp
or
sti
sub
mov
aam
jmp
and
(bad)
xor
cmps
ficom
add
or
mov
(bad)
ficom
xor
sbb
mov
add
add
sbb
out
pop
rol
inc
(bad)
jns
arpl
fdiv
sbb
in
jmp
pop
mov
mov
push
aas
xor
scas
das
sbb
pop
cmp
je
and
xchg
inc
push
aam
lds
and
sbb
test
cmps
sahf
mov
xchg
xchg
outs
popf
adc
cmp
mov
inc
retf
pusha
mov
push
rcl
mov
pop
in
fwait
jb
mov
enter
scas
inc
in
out
xchg
leave
and
cli
pusha
pop
leave
sbb
rcl
loope
adc
jle
dec
scas
push
cmp
dec
mov
inc
(bad)
stos
ja
(bad)
movs
inc
push
mov
stos
inc
push
fsubr
sub
or
fucomp
add
xor
mov
div
sub
pop
(bad)
pop
fmul
pop
popf
pusha
pop
retf
popa
cld
test
(bad)
or
adc
fwait
sub
add
sbb
xchg
popa
mov
mov
push
xchg
push
fwait
iret
repz
jl
neg
push
mov
dec
pop
push
push
jmp
inc
mov
lahf
(bad)
add
sbb
pop
out
sbb
cmp
jnp
sti
out
je
mov
nop
stos
sub
or
jl
sub
fs
lods
in
push
or
dec
mov
leave
xchg
call
xchg
pop
inc
dec
movs
and
or
add
lock
xchg
scas
jb
inc
xchg
(bad)
lods
pop
mov
mov
add
cdq
push
stos
adc
mov
xor
cmp
cmp
iret
push
jecxz
icebp
in
pop
out
jge
(bad)
out
jns
pushf
jl
ds
jb
jmp
nop
xchg
ds
pushf
sbb
or
adc
into
aad
adc
mov
xor
jns
ret
pop
pop
dec
adc
movs
pop
sub
test
fstp
adc
movs
sub
jmp
data16
rcr
adc
lahf
stc
jns
cmp
shl
je
push
pusha
icebp
daa
xchg
dec
aad
popa
dec
scas
inc
mov
jb
les
hlt
std
xor
gs
aaa
sub
mov
sahf
movs
loop
stc
jge
out
(bad)
neg
ss
xor
sub
adc
inc
jcxz
jb
cmps
das
mov
push
test
jbe
adc
add
mov
lahf
rcr
push
iret
jg
cmp
add
out
inc
ds
cdq
gs
xor
(bad)
dec
push
lds
and
mov
inc
pop
push
sub
scas
cld
xor
pop
out
ins
dec
bound
mov
call
inc
push
loop
fimul
out
mul
imul
mov
(bad)
push
test
jle
dec
inc
xor
xchg
stos
push
pop
dec
sahf
jecxz
aad
or
jg
add
(bad)
retf
cld
and
(bad)
pushf
movs
mov
popf
jae
daa
les
mov
jle
and
shl
jl
mov
comiss
xor
xchg
jns
mov
(bad)
cld
(bad)
mov
dec
sub
scas
ret
icebp
stos
sbb
js
jnp
inc
aad
cmp
mov
jbe
imul
push
sub
sub
fdivr
push
xchg
enter
enter
push
rcl
mov
adc
inc
add
test
int
bound
les
fadd
imul
dec
add
fcmovu
icebp
aas
jb
sbb
pop
rcl
aas
adc
clc
add
dec
mov
jb
xlat
push
cmp
(bad)
lods
xlat
(bad)
xchg
mov
pop
hlt
imul
pop
jecxz
pop
(bad)
sub
aaa
cmp
mov
xor
es
call
test
(bad)
mov
int
popa
lock
lds
xchg
xor
std
mov
arpl
lahf
cmps
icebp
jle
xor
xchg
js
and
jl
js
mov
rcl
xchg
retf
sbb
adc
fnstenv
xlat
mov
inc
adc
jecxz
repz
imul
jae
or
push
call
xchg
pop
adc
dec
mov
or
imul
or
jp
ja
xor
dec
and
inc
dec
mov
push
sub
mov
pushf
push
enter
addr16
add
inc
gs
adc
or
or
mov
fwait
shr
clc
sub
and
in
test
mov
or
fnstsw
sbb
jmp
lahf
dec
fcomp
out
cmps
push
test
stc
pop
xchg
jae
js
into
and
stos
repz
jnp
sbb
loop
push
loope
jo
push
cmp
rcr
movs
pop
or
mov
ins
ins
mov
scas
sbb
push
mov
rcr
mov
rcr
imul
imul
leave
enter
test
jbe
daa
das
mov
inc
fsubrp
dec
sub
adc
fimul
push
imul
movs
and
scas
pop
add
mov
bound
pusha
call
pop
test
jle
bnd
dec
xor
outs
shl
sub
cmp
ss
xor
cmp
es
pushf
(bad)
adc
ss
cdq
ficom
inc
sub
lods
fwait
sub
ins
mov
and
push
mov
(bad)
dec
popf
add
jmp
push
pop
jge
pusha
mov
rcr
mov
sub
and
mov
ror
leave
call
call
jb
push
in
sbb
mov
retf
aaa
sub
das
daa
mov
inc
push
ret
out
sub
xchg
sbb
imul
mov
push
jmp
ins
and
lods
push
xchg
mov
and
pop
fld
cli
pop
xchg
sub
inc
sub
and
xchg
in
jl
ss
add
pop
xchg
sub
inc
xor
sub
dec
jle
fdivr
stc
add
cwde
sbb
lds
mov
inc
jb
mov
mov
cmps
pop
sahf
mov
adc
lea
aam
mov
leave
fst
out
and
shr
jge
retf
sub
fisub
data16
cmp
add
sub
xchg
mov
popa
scas
xchg
shl
add
push
xchg
sti
push
fistp
push
and
mov
nop
outs
popf
rcr
jnp
sub
adc
adc
loop
and
sbb
repz
adc
adc
inc
xlat
cmp
push
into
out
ror
push
addr16
hlt
loop
mov
inc
shl
push
cmc
pop
push
lock
xor
call
xchg
imul
cmc
pop
fst
fwait
push
jmp
or
fnstsw
mov
pop
push
stos
sti
sub
dec
daa
mov
mov
not
hlt
push
sub
push
imul
fucomp
popa
pop
mov
lods
jp
ins
loop
addr16
mov
ret
pop
sub
out
adc
jns
sub
and
dec
in
xor
mov
repnz
sub
(bad)
clc
aam
hlt
push
and
add
stc
or
cli
lods
mov
and
ds
pop
nop
jb
movs
lock
pop
shl
popf
(bad)
leave
fmul
pop
sahf
mov
cs
xor
test
cmp
aas
es
mov
ja
in
dec
jb
mov
popf
jnp
jge
jg
hlt
xchg
mov
jge
cmp
or
lea
jno
mov
sahf
mov
popa
mov
lock
xor
shl
scas
add
arpl
jge
or
pop
js
popa
inc
in
dec
xchg
(bad)
jmp
and
jb
adc
sbb
fucomi
xor
add
ret
fsubp
cmps
adc
adc
and
clc
jo
ror
jae
or
cmps
push
ins
pop
mov
loop
cwde
jbe
enter
and
or
inc
outs
jo
mul
js
aad
push
adc
mov
cmps
inc
inc
aad
push
repnz
ds
ds
jae
mov
mov
les
sbb
cmp
aad
js
loope
mov
sbb
iret
loop
push
cmp
cmp
imul
les
mov
mov
dec
(bad)
mov
sub
dec
es
addr16
lods
inc
outs
sub
aam
push
shr
jbe
xchg
ja
in
jp
shl
dec
pop
test
jmp
les
popf
dec
cmp
sbb
push
outs
ja
push
jne
pop
mov
popa
add
cwde
cmp
inc
xor
out
pop
mov
stc
hlt
aad
pop
lods
sub
jmp
(bad)
mov
mov
iret
jno
cmp
pop
fistp
mov
push
cmps
scas
inc
mov
push
or
mov
or
pop
mov
mul
and
sub
sub
add
popf
cmp
add
cmp
sbb
jnp
enter
cwde
sub
(bad)
mov
mov
mov
es
(bad)
jo
xchg
dec
inc
ret
out
jle
pop
jmp
aaa
pop
sbb
and
and
pop
mov
inc
fsubp
outs
jg
add
fdivr
or
sbb
push
pusha
fnstenv
aam
dec
cmp
xor
and
ss
lods
mov
pop
xlat
and
fldcw
sub
sti
adc
scas
fwait
repz
add
int3
ret
xchg
fsub
sbb
adc
xor
adc
std
dec
and
das
push
xor
mov
aaa
jecxz
cld
dec
push
dec
rol
lea
xchg
aad
pop
mov
mov
bound
jbe
clc
ret
and
pop
adc
inc
in
(bad)
or
pop
dec
aam
mov
adc
pop
push
jmp
popa
mov
sub
idiv
dec
cmp
clc
hlt
and
sbb
mov
and
jns
mov
xor
pushf
push
mov
cmp
and
xlat
gs
pop
push
xchg
jbe
jne
movs
push
(bad)
out
mov
mov
mov
sbb
push
in
cmp
outs
sub
into
xor
shl
(bad)
into
xchg
push
dec
retf
les
xor
mov
mov
push
mov
pop
push
test
push
daa
imul
sbb
push
addr16
inc
arpl
popf
jmp
leave
jne
inc
(bad)
and
ja
fild
inc
in
xor
sub
and
xchg
ror
sub
fbld
cmps
or
xchg
lods
mov
add
and
je
adc
adc
fwait
or
inc
jecxz
pop
lahf
jecxz
inc
inc
mov
sbb
fs
cmp
sub
xchg
test
xchg
cdq
and
and
ss
cld
mov
jno
outs
nop
enter
das
mov
sbb
fimul
adc
and
pop
add
je
pushf
ss
jne
sub
fwait
mov
dec
test
(bad)
mov
in
shl
mov
xchg
push
fpatan
add
pop
enter
and
loop
pop
call
mov
adc
ins
(bad)
shl
enter
ins
cmp
out
enter
sbb
mov
mov
fdiv
mov
sbb
ret
push
cdq
in
inc
inc
sbb
sub
shl
mov
mov
jnp
fcmovu
jge
cmp
sub
adc
pop
xor
mov
sar
aaa
sub
push
add
sub
sbb
sub
adc
jp
jmp
outs
sar
or
outs
xor
jecxz
movs
jmp
cmc
adc
into
aas
inc
mov
add
sbb
pop
out
dec
sahf
pushw
ins
push
jmp
push
test
inc
mov
retf
(bad)
push
pop
mov
repnz
inc
cmps
adc
cmps
sub
fwait
inc
or
pop
rol
xchg
sub
jbe
push
push
add
push
xchg
bound
and
jecxz
and
setns
ins
outs
fdiv
jle
jnp
jg
push
dec
rcl
xchg
mov
pusha
jb
add
js
lock
jns
pusha
pop
into
jns
mov
mov
ds
mov
push
adc
cmp
shl
xchg
xchg
push
popa
repnz
sub
or
stos
cs
ret
test
push
xlat
test
inc
pop
sbb
outs
xchg
(bad)
sbb
ds
shr
or
add
test
imul
jne
adc
(bad)
lock
jmp
ins
ins
test
jmp
stc
stc
push
and
ror
or
sbb
sub
mov
fbld
cmp
inc
sahf
jle
inc
aam
and
loope
mov
xor
xchg
daa
xor
sbb
ficomp
cmp
sub
lock
dec
jl
jb
sbb
pop
ds
jmp
nop
std
or
in
mov
adc
mov
inc
test
or
scas
std
sub
dec
test
out
sub
add
arpl
(bad)
repz
into
scas
pop
mov
lods
shr
pop
push
mov
and
cld
jo
leave
lock
les
inc
pop
jge
mov
jae
dec
ins
xchg
and
or
or
cs
ins
stos
rol
add
sub
pop
pop
add
mov
push
neg
imul
in
mov
xchg
hlt
jbe
add
inc
out
add
fcom
call
lods
jb
js
cmp
pop
mov
inc
(bad)
cld
ror
dec
int
mov
pusha
fistp
stos
and
pop
pop
sub
fisubr
cmp
jne
shr
inc
mov
addr16
xor
push
mov
dec
mov
in
jge
mov
cmp
pop
movs
(bad)
stos
inc
dec
adc
ror
(bad)
nop
in
mov
das
sub
lea
daa
and
sub
sbb
cmp
(bad)
mov
sub
sar
fild
or
fs
xor
mov
ja
xchg
pop
in
test
rcr
sbb
push
xor
cmp
add
test
cmp
fs
xchg
adc
int
mov
leave
and
mov
or
fild
jmp
psrld
daa
cwde
and
fistp
or
push
enter
cmp
mov
xor
aas
or
hlt
sahf
popa
sub
xchg
sahf
cwde
ss
jo
dec
shr
xchg
shl
shr
aas
test
sbb
fsub
and
test
cwde
inc
sti
movs
jl
mov
mov
mov
push
into
push
(bad)
das
shl
cmp
push
jnp
and
addr16
xchg
mov
mov
mov
bnd
jle
jns
shr
call
enter
push
in
cwde
test
push
inc
scas
ja
adc
stos
mov
dec
lea
jnp
jl
xchg
out
cdq
cmp
jo
mov
inc
or
cmp
jecxz
fst
shr
push
inc
test
inc
adc
mov
loope
pop
loopne
fsub
aad
jne
test
jg
loopne
sbb
pop
stos
popf
mov
(bad)
cmc
inc
outs
jno
push
sub
mov
and
jnp
popf
mov
int3
and
jno
or
push
pop
mov
and
jmp
push
je
xchg
loope
fld
lods
cmp
mov
pop
sar
fucomi
mov
shr
cmc
test
movs
jge
rcr
in
test
fsubrp
and
jns
in
pop
or
mov
pop
and
das
retf
add
(bad)
lods
xor
sub
ror
adc
adc
dec
mov
xchg
pushf
dec
test
add
mov
das
arpl
in
daa
or
lahf
mov
dec
out
(bad)
jb
aas
dec
je
cmp
adc
and
fisttp
jb
push
inc
stc
into
xchg
iret
add
stos
(bad)
jle
inc
sub
(bad)
call
(bad)
dec
xor
inc
pop
ins
xchg
jo
scas
mov
adc
sbb
ret
and
xor
jmp
jb
and
mov
cmps
adc
xor
jne
in
sub
sbb
add
jbe
pop
rcl
pop
jne
mov
pop
out
int
add
dec
cmp
loop
jbe
sub
scas
xchg
pusha
(bad)
xchg
inc
mov
jmp
cs
or
mov
arpl
stos
mov
retf
gs
popa
xor
mov
and
adc
retf
cdq
push
push
fiadd
sahf
or
push
pop
sbb
fistp
inc
push
jmp
and
jmp
mov
sti
call
loopne
int3
fwait
int
dec
(bad)
shl
xchg
jbe
idiv
sar
mov
push
sub
mov
nop
mov
sub
(bad)
stc
mov
out
test
dec
jp
push
iret
push
sub
jo
test
mov
bound
clc
push
cwde
sar
pop
iret
adc
add
adc
push
iret
push
stos
push
popa
call
xor
imul
vsubpd
mov
push
cdq
xor
(bad)
mov
iret
push
push
lahf
loopne
dec
ret
inc
push
pop
pusha
xchg
in
fild
xor
ficomp
outs
push
hlt
mul
ins
les
cmp
mov
nop
sub
call
test
and
popa
cmp
pop
fld
movs
bound
inc
push
jno
push
dec
sub
mov
inc
(bad)
jle
mov
loope
xor
call
xchg
test
and
je
push
push
les
mov
mov
jmp
mov
loopne
xchg
jae
out
mov
jle
pop
movs
ja
adc
fild
push
mov
outs
ins
sahf
(bad)
ds
xor
jmp
jbe
cmps
bnd
imul
or
addr16
js
xchg
jne
in
xchg
in
jl
(bad)
data16
jbe
repnz
xor
dec
sbb
into
push
repnz
push
stos
dec
jb
(bad)
enter
jg
jmp
and
fnstcw
fidivr
mov
mov
jl
jnp
jecxz
dec
popa
mov
push
push
mov
xchg
inc
fnstcw
jmp
dec
test
popf
js
xor
pop
push
mov
outs
stos
or
xor
xor
into
lock
test
imul
es
nop
cwde
stos
or
or
or
jp
retf
cmp
mov
pop
pop
cmps
stos
ror
mov
retf
outs
in
sbb
and
icebp
out
int3
scas
aad
xchg
setno
mov
fidivr
mov
retf
test
std
data16
outs
call
or
jnp
adc
jmp
xchg
sti
push
sub
es
xor
rcl
cmp
or
outs
sub
cmp
test
stos
ror
scas
or
mov
mov
pusha
mov
in
dec
mov
and
push
pop
in
push
jmp
ins
cmp
xchg
sti
jmp
or
aaa
fisttp
pop
jle
ins
loopne
and
ret
inc
cmp
(bad)
jmp
hlt
add
daa
mov
loop
std
cmc
or
mov
sub
(bad)
hlt
mov
mov
lds
or
push
dec
jo
xlat
rol
js
mov
or
fisttp
cmp
cwde
push
sub
in
scas
cwde
dec
stos
into
xor
sbb
bound
pop
jbe
mov
pop
add
xchg
stos
out
xchg
fisubr
enter
inc
sbb
addr16
bound
int
repz
sbb
lea
push
jmp
(bad)
std
nop
dec
stc
mov
jnp
mov
(bad)
mov
in
dec
rol
mov
cdq
repnz
in
stc
jge
xor
pop
pop
jl
je
xchg
(bad)
in
or
xor
dec
imul
fwait
add
or
das
adc
(bad)
jno
mov
mov
repz
mov
scas
stos
movs
mov
adc
das
stos
xor
pop
mov
jge
inc
fidiv
test
shl
mov
pop
in
push
pop
xor
mov
pop
xor
add
add
sub
push
ds
ficom
loope
mov
cmp
mov
add
call
cmp
imul
int
pop
cdq
pop
jp
stos
xchg
mov
add
add
push
xlat
xchg
mov
adc
clc
ror
jbe
leave
mov
push
push
adc
and
ficom
shr
sbb
cmps
enter
push
push
in
jmp
ja
scas
pop
dec
sub
push
mov
ror
dec
mov
mov
popa
ds
mov
into
imul
sbb
dec
test
mov
out
mov
shr
out
rol
loope
test
retf
jne
mov
add
mov
xchg
and
lock
mov
pusha
push
movs
pop
pop
(bad)
xchg
ds
sbb
mov
lods
inc
and
movs
aas
cmps
inc
in
sub
out
mov
gs
pop
in
jno
add
retf
adc
fisubr
lahf
or
shl
push
cmps
mov
push
sahf
push
pop
fnstenv
mov
push
adc
out
mov
bound
test
mov
popa
push
push
pop
push
les
pop
mov
pop
mov
jg
lahf
push
or
inc
loop
mov
cmp
adc
jle
in
mov
xchg
gs
call
cmp
lahf
mov
aas
jns
add
jmp
sbb
inc
mov
push
push
xor
aas
sti
sbb
stc
push
mov
xor
ins
jle
cmp
lock
pop
xor
int
int
dec
imul
mov
pop
(bad)
mov
xor
or
jl
fs
icebp
in
aas
mov
and
xchg
pop
fst
call
loope
clc
mov
add
cmp
sbb
lock
cdq
xor
sub
jo
mov
mov
xchg
icebp
lahf
sbb
sbb
js
or
xchg
cmp
xchg
inc
mov
cmp
cs
push
lods
out
test
out
ins
movs
xchg
cwde
jns
xor
mov
sti
sbb
addr16
sar
jecxz
lock
test
aas
inc
inc
add
jmp
gs
mov
inc
xchg
sbb
pop
enter
js
stos
les
sbb
adc
mov
add
jmp
or
out
sbb
add
dec
add
sbb
xchg
into
push
pop
and
pop
ins
aad
adc
cdq
jbe
dec
sbb
cmp
fwait
mov
les
int
bound
ret
push
sub
sub
jae
pushfw
adc
aam
xor
leave
add
retf
pop
push
xor
push
shl
jns
xchg
dec
mov
rcr
inc
sbb
or
xchg
add
jecxz
jns
xchg
es
mov
out
das
inc
lds
(bad)
jge
pop
sar
jl
adc
dec
das
mov
fcmovbe
xor
pop
push
xor
pop
inc
(bad)
cmp
jg
and
retf
xor
xchg
shl
or
and
mov
mov
rcl
jns
sbb
lea
or
cmp
pop
adc
sub
ds
js
jnp
pop
sub
cmp
hlt
hlt
loope
in
add
aas
movq
lds
loop
push
add
dec
dec
and
adc
sub
mov
stos
mov
adc
fwait
das
xlat
mov
mov
sti
xchg
(bad)
jmp
sub
and
out
ins
adc
xor
jg
sbb
imul
mov
mov
bound
inc
or
cmps
inc
jp
xor
sub
pop
int
jae
(bad)
fadd
jae
sbb
repnz
in
cmc
enter
push
inc
sti
cmovnp
fiadd
in
jbe
inc
cmp
mov
leave
cmp
jnp
mov
mov
push
inc
jmp
push
xor
jno
sti
push
jmp
push
adc
adc
jne
mov
add
push
daa
ins
mov
push
cdq
cmp
ret
je
xchg
jmp
pushf
pop
mov
pop
adc
cmp
out
js
test
pushf
repnz
or
inc
clc
sub
out
inc
fst
or
sub
scas
retf
pop
xchg
imul
mov
or
xor
cwde
call
and
push
stos
(bad)
cmp
inc
movs
push
jmp
popa
pop
popf
dec
mov
mov
jmp
ret
test
mov
cmps
push
retf
dec
icebp
and
sbb
popa
and
push
jno
pop
aam
mov
sar
jle
imul
or
sbb
test
mov
cwde
jmp
xor
fistp
jle
push
jmp
lock
les
mov
loopne
add
dec
mov
scas
jle
call
ror
xchg
sbb
or
push
mov
mov
and
div
loop
and
ja
into
scas
cmp
pop
pop
ins
jp
cli
out
inc
pop
xor
add
js
in
cmp
jge
lods
mov
xor
ins
les
fcmove
retf
loope
ror
addr16
dec
lock
xlat
mov
xchg
retf
inc
xor
data16
mov
mov
(bad)
shl
fnsetpm(287
cmp
fadd
lock
gs
sub
or
mov
pop
mov
inc
xor
test
adc
cmps
(bad)
adc
sbb
jne
jle
mov
pop
xlat
pop
enter
xlat
punpcklbw
cmps
inc
test
jecxz
daa
in
shl
ret
jo
adc
fstp
retf
aaa
mov
loope
push
std
dec
call
(bad)
lahf
test
(bad)
div
or
fadd
mov
into
sti
push
pop
cmp
jnp
add
aad
mov
(bad)
ret
test
mov
repnz
pusha
xchg
in
sbb
inc
sti
xor
pusha
jns
je
mov
hlt
test
mov
scas
les
adc
cli
pop
inc
ja
jnp
inc
pop
aas
push
fstp
stos
jmp
ret
push
bnd
cli
fistp
add
cli
and
aaa
xchg
bound
out
xchg
jl
(bad)
enter
sahf
lea
push
xchg
icebp
mov
push
je
xor
mov
push
stos
lds
(bad)
sub
in
add
sar
jle
jae
sub
dec
mov
aas
sahf
loopne
call
mov
ss
les
xor
add
ins
dec
js
aad
imul
cmp
in
dec
fidiv
(bad)
pop
mov
test
mov
push
bound
xchg
adc
add
mov
adc
rol
stc
adc
in
dec
or
cmp
jl
pop
stc
stc
cli
out
or
out
or
fldenv
(bad)
adc
lock
mov
xchg
push
(bad)
out
cld
sti
imul
(bad)
les
jne
mov
pop
daa
push
add
inc
adc
cmp
pushf
or
rol
lods
mov
movs
dec
mov
cld
sahf
(bad)
cli
lods
add
int
jbe
outs
outs
popf
or
dec
inc
stc
push
aaa
sbb
loopne
sub
adc
sub
dec
and
dec
in
aaa
(bad)
mov
pop
mov
ret
outs
cmp
fwait
lods
cmp
mov
push
mov
je
jmp
sub
daa
xor
ins
cmp
mov
sbb
push
mov
pusha
retf
push
clc
repnz
fwait
mov
fwait
xchg
test
rcl
inc
pop
movs
push
xchg
sbb
inc
retf
es
ret
and
push
push
ret
dec
dec
arpl
sub
sbb
mov
or
fist
and
sub
movs
mov
mov
cld
cwde
inc
lock
xor
xchg
sahf
cmp
xor
pop
jne
xor
xchg
and
sub
jb
mov
xchg
iret
imul
fadd
adc
into
bswap
push
xor
push
sti
dec
les
pop
int3
data16
or
mov
cmp
fist
stos
xchg
lds
pop
scas
fstp
push
adc
dec
or
xchg
jl
cmps
in
xlat
and
lods
sub
aad
in
push
fdivr
(bad)
gs
pop
fimul
in
sbb
leave
out
sahf
sbb
call
in
push
lds
data16
dec
fs
mov
cmp
sti
mov
das
leave
mov
sahf
imul
stos
js
mov
jnp
mov
xor
cmp
mov
sub
jnp
sahf
inc
mov
in
cld
inc
mov
jg
sbb
std
mov
shl
ja
pop
push
push
lods
cmp
jnp
ja
in
inc
xchg
inc
cmp
retf
aas
xor
inc
mov
dec
add
mov
lea
mov
pop
stos
xor
mov
icebp
iret
lahf
cmps
push
jae
add
sub
mov
pop
mov
adc
sub
ja
and
int
jle
dec
call
outs
inc
or
ja
outs
xor
es
jbe
in
pop
loope
arpl
jno
sbb
dec
loopne
retf
mov
addr16
(bad)
fild
aam
push
push
adc
push
jns
sbb
sub
push
fild
mov
cs
xor
xchg
xor
mov
test
inc
inc
sbb
cwde
rol
mul
clc
rcl
adc
shr
push
mov
push
xchg
arpl
das
into
xor
das
mov
adc
sub
iret
xchg
or
out
out
(bad)
(bad)
std
mov
imul
cmp
and
add
ins
dec
xor
and
lock
scas
mov
loopne
inc
into
sub
xor
jge
ja
sbb
pop
scas
stc
(bad)
std
loope
jns
stos
sahf
mov
out
mov
push
hlt
add
mov
dec
mov
out
inc
ds
(bad)
sbb
jns
repnz
hlt
inc
retf
pusha
sbb
inc
stc
in
jmp
and
ds
shr
or
jb
cmps
and
push
int
sub
bound
push
xchg
pop
repz
lock
out
cmps
retf
fist
sub
es
std
outs
jnp
aas
jo
mov
dec
popa
mov
add
outs
jmp
jle
cmp
retf
sti
not
push
fnstcw
mov
jae
fs
inc
adc
push
test
int3
mov
dec
mov
fwait
test
or
pop
add
xchg
out
lahf
add
popa
ss
mov
(bad)
iret
fild
mov
scas
in
setbe
mov
or
lods
es
retf
inc
and
int
jbe
mov
and
lock
or
je
fcom
pop
jge
push
cld
data16
xor
mov
add
loope
test
ins
in
xchg
or
ins
lahf
xor
ror
mov
das
sbb
lea
xchg
cmp
mov
ds
sbb
out
jne
add
bound
jp
sbb
pop
ret
adc
sahf
jle
pop
iret
mov
lods
shl
xor
(bad)
out
or
cmp
pop
sub
lods
movs
mov
cmp
jnp
mov
pop
dec
lds
push
shr
cmp
dec
push
gs
pushf
xor
push
xchg
xchg
mov
adc
jp
ror
mov
cli
cwde
sbb
mov
xor
outs
xchg
xor
cmc
or
mov
ret
and
outs
cmp
mov
fild
mov
out
in
out
pop
dec
hlt
(bad)
xchg
(bad)
xchg
ret
mov
mov
div
adc
or
scas
rcl
sbb
adc
les
sti
loopne
mov
or
inc
loop
repz
pushf
sub
loope
inc
shl
mov
(bad)
cli
mov
out
leave
inc
setnp
cmp
sub
and
fist
(bad)
cmp
ret
dec
xor
int
out
(bad)
scas
push
inc
or
dec
mov
sbb
jmp
mul
retf
xor
(bad)
popf
fs
int
sub
jp
xor
fsubp
mov
sub
mov
add
xor
out
mov
jge
retf
fwait
into
dec
cdq
clc
mov
dec
call
inc
inc
loopne
je
or
sar
idiv
nop
mov
retf
sbb
outs
sbb
pop
aaa
sahf
mov
xchg
and
pop
stos
loopne
xor
ror
pop
(bad)
lock
jg
inc
adc
imul
pop
fnstenv
inc
xor
mov
sbb
xchg
test
adc
xor
push
test
jle
out
nop
(bad)
repz
pop
aaa
loopne
xchg
in
daa
daa
mov
and
rcl
loop
jnp
cmps
xchg
jg
cmc
pop
das
retf
mov
or
inc
sbb
push
lds
fadd
in
cmp
cmps
gs
movs
sbb
mov
shl
popf
xchg
lea
mov
ret
sbb
test
jo
push
xor
retf
or
shl
mov
idiv
inc
xchg
or
cld
mov
into
push
mov
test
mov
call
movs
inc
int
mov
mov
xchg
pop
loop
and
mov
adc
adc
enter
jae
and
gs
out
mov
repnz
inc
jae
iret
aam
loopne
lods
hlt
gs
mov
jle
dec
out
push
in
dec
cli
aad
or
sub
(bad)
in
xor
rcr
add
int3
mov
mov
cli
push
xor
aam
das
dec
cmp
mov
das
cmps
jns
xor
jmp
push
cli
call
gs
and
inc
sbb
pop
arpl
adc
es
(bad)
scas
inc
jne
fsubr
cmp
mov
out
mov
(bad)
dec
test
mov
mov
popa
jbe
mov
dec
inc
mov
jmp
xchg
cmp
xor
out
dec
lods
repz
sti
jbe
adc
jecxz
jmp
imul
adc
call
push
dec
in
fstp
add
jge
mov
pop
xchg
in
jl
or
sbb
adc
and
xlat
in
fwait
cmp
clc
div
lods
mov
and
pop
sahf
or
pop
xor
dec
mov
pop
push
dec
pop
leave
push
stos
xchg
inc
in
loope
mov
ins
or
ins
icebp
jp
test
pop
nop
ins
jo
ret
mov
(bad)
mov
xor
movs
pop
or
ret
add
push
mov
jmp
aaa
adc
loopne
mov
scas
add
fwait
arpl
inc
push
sbb
dec
out
push
cwde
push
inc
and
jg
xchg
mov
xchg
or
or
sub
out
dec
shl
xchg
push
data16
adc
mov
arpl
fst
jle
xor
iret
xor
mov
or
ss
(bad)
aas
mov
xchg
jg
ret
imul
mov
hlt
xchg
imul
cli
sub
jmp
ins
sub
popa
xchg
jnp
repz
mov
mov
fisub
pusha
dec
mov
cmc
jne
movs
push
adc
and
iret
es
jne
jmp
dec
test
mov
adc
dec
ror
stc
sti
jmp
(bad)
mov
aas
mov
jmp
sbb
mov
mov
adc
sbb
inc
aad
sub
loop
pop
scas
fnsave
and
jbe
pop
ds
and
outs
cmc
dec
icebp
fprem
rcl
ret
sub
or
or
jne
outs
sub
test
inc
cmp
sub
cmp
xchg
in
(bad)
dec
cmps
(bad)
dec
jne
sbb
mov
rcl
jb
add
lods
dec
cmp
cmp
sub
cmp
dec
cdq
dec
mov
dec
adc
push
xchg
sbb
push
mov
sbb
cmps
ret
or
sub
jae
sub
stos
daa
inc
sbb
xor
fdiv
hlt
fxam
push
stos
xor
mov
(bad)
mov
es
mov
imul
sbb
xor
mov
mov
in
out
push
or
inc
fld
and
cmp
dec
cmp
mov
xor
sbb
cmp
adc
mov
dec
adc
imul
pop
mov
mov
pop
adc
out
jne
push
adc
iret
dec
add
nop
jmp
in
(bad)
stos
sub
push
fistp
sub
add
sar
scas
mov
test
and
push
in
in
pop
xchg
aam
mov
fwait
push
js
or
into
mov
xchg
or
or
xor
dec
ins
scas
sbb
and
rcr
add
mov
daa
mov
call
outs
test
or
pop
xchg
and
mov
inc
xor
movs
xor
jp
xchg
xchg
sbb
std
xchg
push
sbb
mov
sub
mov
imul
shl
xor
loope
ror
mov
cmps
test
jge
cmp
inc
repnz
call
fsub
mov
jmp
lods
test
add
xor
cmp
repz
fisttp
ins
xor
add
sbb
xchg
and
add
pop
iret
mov
mov
sub
mov
mov
gs
lahf
dec
add
mov
retf
daa
fld
jbe
call
jl
adc
mov
sub
sbb
jns
xor
xor
sub
push
mov
mov
out
(bad)
sbb
lea
loopne
and
adc
sbb
mov
leave
xchg
xchg
adc
pop
dec
stos
jnp
fisttp
lea
aas
fdivr
fldcw
ins
mov
ja
fst
xor
mov
leave
sbb
xchg
xor
dec
lock
xor
mov
repnz
xchg
cwde
daa
aad
jae
cwde
push
jl
or
inc
or
cmp
retf
push
add
sub
cmps
pop
and
dec
sub
daa
inc
push
jae
(bad)
icebp
push
pushf
lea
or
sub
pop
or
mov
enter
pshufw
pusha
fidivr
lods
cmp
jecxz
and
pop
rcl
loop
stc
mov
and
imul
or
cmp
xor
loope
xchg
aas
xor
xor
repnz
loope
adc
cmp
mov
call
xchg
pushf
call
mov
cmp
in
mov
jmp
pop
sbb
aas
jl
bt
dec
sbb
pop
mov
vminsd
out
jl
mov
adc
adc
not
xchg
add
push
rol
test
(bad)
pop
xchg
sar
test
aas
and
mov
imul
pop
movs
cmp
(bad)
cmp
push
cmps
push
fadd
ror
xchg
nop
push
out
call
gs
dec
cs
pop
dec
xor
and
cmps
inc
adc
jne
jbe
call
push
cmp
or
stos
(bad)
jp
push
pop
xchg
enter
xor
xchg
push
or
es
fs
imul
loop
dec
outs
retf
push
dec
call
(bad)
mov
jle
popf
mov
mov
out
jae
aad
or
jae
jo
mov
jb
and
shl
dec
xchg
pushf
mov
dec
mov
sahf
aam
(bad)
cmp
pushf
adc
jns
ins
lahf
lock
fimul
dec
loop
jne
mov
stos
jb
loopne
movs
test
add
scas
sbb
bound
dec
xor
cs
cs
ss
adc
pop
mov
pop
xchg
mov
push
std
dec
adc
iret
shl
mov
daa
out
shl
aaa
push
mov
cdq
lahf
iret
(bad)
ins
inc
xor
call
(bad)
xor
in
fisttp
les
(bad)
jae
adc
cmp
and
xchg
mul
pop
stos
fistp
jmp
jno
sahf
pop
loopne
hlt
rcl
fcomi
cwde
rol
jle
cmp
lds
sbb
and
mov
xor
inc
add
cli
mov
push
call
call
popf
mov
cmp
mov
adc
retf
mov
adc
ret
inc
sub
sbb
jmp
push
neg
fist
mov
pop
xchg
xchg
jo
or
loope
repz
pushf
sbb
and
call
scas
je
(bad)
and
pop
rcl
(bad)
call
scas
xor
imul
dec
in
scas
retf
sbb
mov
sbb
adc
fist
cmp
mov
add
jb
and
xchg
sbb
mov
scas
sbb
sub
push
or
ins
mov
xchg
cmp
sahf
xor
fldenv
sahf
jnp
ins
not
mov
mov
dec
aam
ss
mov
inc
mov
and
scas
mov
jle
xlat
adc
jns
(bad)
push
in
stc
in
(bad)
(bad)
cli
(bad)
in
lods
xor
mov
jns
repz
cmp
jg
jb
adc
cwde
leave
icebp
aad
in
dec
inc
ret
lea
add
dec
fs
lahf
mov
fst
push
dec
adc
cmp
ret
inc
add
pop
scas
or
(bad)
xchg
(bad)
clc
or
sub
sub
dec
xchg
inc
push
(bad)
outs
jmp
cwde
xlat
sbb
mov
ds
adc
or
mov
pop
jmp
stos
in
ja
clc
out
adc
jmp
lds
dec
xchg
jmp
sub
call
mov
shr
sub
nop
ja
xchg
hlt
mov
call
and
ja
fadd
movs
push
cmp
inc
inc
shl
add
test
loopne
clc
ds
mov
pop
loop
pop
pop
cmps
dec
daa
inc
int3
pop
pop
pop
repnz
lds
xor
push
jnp
in
or
cli
xchg
mov
fistp
mov
mov
xchg
mov
or
enter
mov
mov
add
loope
or
(bad)
and
xchg
push
les
add
repz
cs
mov
fimul
cli
std
inc
shl
xchg
mov
mov
imul
scas
into
cmp
fild
jl
in
and
jns
xor
or
xchg
cmc
fidivr
arpl
mov
(bad)
in
inc
ret
and
pushf
mov
les
adc
push
div
pop
lods
vmwrite
jge
cmp
stc
ret
pop
or
test
adc
dec
int
ret
add
xchg
mov
lods
cmps
adc
sub
sti
push
repnz
sub
mov
inc
nop
or
inc
and
ja
std
inc
std
and
ror
mov
aaa
push
dec
dec
xchg
mov
pushf
xor
(bad)
fcom
dec
inc
xlat
inc
fmul
xchg
adc
scas
cmp
mov
ja
mov
stos
arpl
push
repnz
leave
add
call
push
pop
rcr
or
mov
dec
iret
imul
rcl
mov
test
adc
cwde
sti
mov
daa
call
call
push
mov
call
xor
dec
int3
pop
ins
dec
dec
sub
jo
in
shr
xchg
mov
out
into
call
xchg
stos
bound
mov
push
push
jno
fwait
xchg
fst
and
imul
or
ins
and
pop
pop
push
retf
mov
jmp
cmp
pop
je
add
not
cmps
ds
add
out
shl
jnp
mov
fcom
inc
sbb
cmp
shr
xchg
(bad)
stc
inc
retf
cmps
enter
pop
in
jp
cmp
out
or
push
imul
adc
pop
icebp
jnp
lea
mov
sti
lds
push
pop
jge
add
xchg
or
push
mov
cli
xchg
mov
lea
ficom
test
sub
cdq
in
retf
cmp
add
push
and
adc
xlat
in
rcr
int
inc
dec
cmc
jg
clc
fisttp
sti
cmp
jp
mov
gs
xchg
push
mov
pop
jae
(bad)
ret
std
xchg
inc
ja
into
(bad)
outs
pop
retf
push
mov
lock
cwde
pop
adc
(bad)
and
data16
push
mov
ds
adc
add
jae
imul
mov
lea
sub
shr
call
ja
sub
test
jmp
adc
lahf
cmp
jg
mov
inc
in
push
and
out
xchg
loope
jnp
mov
cwde
les
inc
shr
xor
jns
mov
aam
dec
push
std
dec
jae
lahf
dec
lods
test
fdivp
push
lock
push
mov
push
dec
sbb
jp
add
xor
bswap
ror
movs
sbb
cli
pop
xchg
and
sub
into
iret
std
jmp
mov
adc
push
push
inc
stos
dec
adc
ins
pop
inc
jp
and
jnp
cdq
xor
sbb
jns
xor
(bad)
add
and
aam
(bad)
retf
mov
ja
cmp
sbb
pop
add
scas
sahf
leave
dec
cmp
inc
pop
out
sbb
mov
sbb
mov
addr16
xchg
xchg
inc
push
mov
pushf
add
inc
test
push
sbb
mov
pop
push
mov
test
sbb
jecxz
jp
lods
mov
add
pop
test
mov
xchg
clc
adc
shl
call
and
mov
pop
je
(bad)
hlt
nop
push
cmps
xor
pusha
mov
push
fstp
sbb
(bad)
push
push
mov
std
dec
mov
cs
lock
jge
je
fst
in
sub
daa
int
sub
in
repz
ja
xchg
dec
movs
cmp
dec
test
inc
movs
sub
xchg
or
(bad)
jae
hlt
xlat
xor
call
mov
xchg
xchg
sar
cmps
mov
lods
test
int
mov
fld
push
jmp
clc
stos
jmp
mov
lods
popf
dec
xchg
inc
inc
popf
xchg
ds
sub
int
pusha
(bad)
rcr
jmp
call
jne
pop
gs
inc
push
jnp
inc
mov
inc
int
adc
sub
xor
arpl
in
jne
add
ret
jp
cmp
(bad)
add
cmc
fwait
inc
xchg
add
je
sub
in
daa
lods
adc
outs
fs
mov
lds
pushf
ja
add
pop
cmp
retf
xchg
and
push
add
jmp
js
sbb
dec
push
xor
neg
int
sbb
mov
add
(bad)
xchg
in
outs
lods
ficomp
scas
adc
sub
frstor
jnp
dec
jno
daa
scas
cdq
jo
daa
fst
(bad)
jle
push
xor
dec
pusha
dec
push
cdq
in
push
sar
sti
dec
cmc
adc
(bad)
jmp
lea
add
(bad)
stc
xor
push
je
xor
lods
fcmovb
test
fnstenv
cdq
not
cmp
inc
(bad)
fisubr
pop
mov
mov
fiadd
in
adc
sub
in
popf
add
lods
add
cmps
es
call
shr
sbb
nop
inc
stos
(bad)
in
pop
inc
pop
ja
loope
xor
ror
cmp
pop
and
rol
shr
sbb
mov
push
icebp
rcr
adc
push
jmp
push
(bad)
mov
push
outs
in
mov
in
pop
inc
fimul
dec
std
sub
mov
lea
push
sahf
sbb
sbb
mov
jle
adc
jmp
cli
add
pop
nop
sahf
cs
mov
or
push
iret
mov
test
jl
push
rcr
adc
pop
xchg
ins
jecxz
push
jp
jle
xor
jns
jb
aad
xchg
dec
mov
aaa
lods
mov
jae
pop
enter
outs
xor
das
scas
pop
jne
ss
mov
cdq
imul
lods
repz
call
pop
adc
out
nop
adc
(bad)
data16
adc
test
and
cmps
movs
push
(bad)
mov
out
retf
ja
dec
int
cli
dec
mov
and
xchg
xchg
sub
sub
inc
(bad)
daa
iret
retf
dec
retf
jge
sahf
xchg
or
cmps
sub
icebp
add
mov
clc
lahf
push
clc
jb
(bad)
into
push
jmp
xchg
and
iret
shr
mov
arpl
adc
jl
mov
popa
jecxz
sbb
daa
mov
cdq
inc
mov
sbb
jg
and
xchg
mov
pop
mov
inc
lahf
ret
(bad)
(bad)
loop
mov
leave
aas
int
sub
xor
or
mov
sbb
mov
movs
xchg
mov
push
sub
fwait
or
fsub
retf
cld
jo
mov
xchg
clc
mov
ret
cmp
jnp
nop
sbb
call
push
mov
add
mov
rol
cs
push
jb
push
adc
ret
out
fs
mov
(bad)
mov
(bad)
(bad)
in
lods
(bad)
imul
xchg
mov
dec
dec
loopne
icebp
jns
hlt
imul
mov
or
mov
dec
fcmovu
ins
(bad)
or
xor
(bad)
mov
fidivr
dec
push
xchg
call
icebp
pop
adc
ds
cmp
fist
xchg
dec
es
push
mov
mov
mov
(bad)
and
hlt
jno
rcl
lods
push
mov
mov
or
and
mov
pop
pop
adc
retf
jmp
sub
ret
mov
les
rol
mov
inc
xchg
addr16
xor
xchg
ins
cld
repnz
std
adc
push
pushf
xchg
and
setge
test
dec
pop
movs
sbb
cmp
mov
jl
fisubr
push
hlt
cmp
jnp
pushf
scas
xor
add
dec
xchg
mov
(bad)
dec
dec
or
(bad)
ficom
and
pop
(bad)
lahf
aas
loop
(bad)
aam
call
xor
sub
inc
mov
jno
jle
es
push
push
pop
mov
fcomip
call
(bad)
in
iret
jo
lods
push
or
push
sbb
imul
jmp
jl
mov
jbe
and
sbb
jns
(bad)
or
jo
sti
pop
(bad)
cs
in
xchg
call
lea
(bad)
xor
pop
or
stc
mov
cmp
fstp
xchg
shl
or
lea
mov
add
jmp
and
fadd
aas
mov
pop
sti
mov
scas
cbw
mov
inc
dec
adc
add
ret
xchg
mov
retf
arpl
adc
push
inc
mov
xor
mov
pushf
mov
das
test
cli
pop
inc
pop
mov
and
rcr
or
inc
mov
jmp
sbb
add
mul
es
push
(bad)
adc
pop
xchg
ja
pop
mov
dec
out
and
and
cmps
pop
ja
cld
push
(bad)
sub
add
push
mov
clc
in
inc
dec
in
arpl
push
mov
mov
aaa
adc
dec
ret
cwde
mov
inc
push
mov
out
repz
mov
sub
bound
jmp
mov
mov
push
mov
pop
pop
dec
pop
outs
sbb
xor
mov
imul
jmp
outs
into
stos
jge
or
jno
repz
shl
ins
xor
mov
fcomp
push
(bad)
jno
pop
fistp
xor
mov
jne
or
ret
fistp
add
sbb
jbe
push
std
or
iret
push
push
lds
fnstcw
loop
pop
adc
cmp
addr16
or
dec
adc
xor
push
jbe
arpl
mov
aas
xchg
leave
pop
push
mov
sub
push
sub
push
adc
inc
das
pop
sub
(bad)
aad
ror
mov
les
daa
(bad)
aam
sar
push
ja
cmp
mov
pop
addr16
cmc
not
test
(bad)
cs
inc
outs
dec
xchg
cli
les
push
fcmovb
shr
je
idiv
sub
sub
fnstenv
jmp
mov
dec
(bad)
sbb
mov
mov
push
and
push
js
xchg
(bad)
loopne
ficomp
shl
call
into
pushw
inc
and
dec
adc
dec
dec
ret
imul
xor
and
rol
mov
jg
lods
addr16
add
pop
fdivr
fsub
xor
pop
inc
pop
je
test
cli
retf
jo
clc
test
push
sbb
mov
test
in
mov
das
mov
mov
das
or
bound
pop
xor
into
movs
xchg
pop
dec
stos
sbb
dec
pop
fisttp
or
and
xchg
mov
cmp
sub
sbb
or
popa
push
sar
scas
dec
jl
dec
(bad)
mul
mov
enter
push
mov
test
aad
or
sub
adc
jns
mov
repnz
cmp
mov
jmp
outs
loopne
inc
cs
test
adc
daa
stc
mov
jb
cmp
pop
xor
or
jl
adc
loopne
cmc
jge
loope
repz
(bad)
std
enter
sub
fimul
enter
popf
mov
daa
add
jae
mov
and
mov
sub
into
test
in
inc
icebp
repz
daa
(bad)
pop
xchg
xchg
out
xchg
push
lods
jo
jns
pop
call
pusha
xchg
(bad)
sbb
(bad)
jmp
pop
fnsave
sti
mov
xor
retf
mov
xor
pushf
dec
dec
and
push
pop
daa
sub
stc
push
inc
dec
xchg
jmp
outs
xor
(bad)
das
mov
test
add
cs
(bad)
mov
mov
cmp
pop
rcl
jg
rol
iret
scas
sbb
mov
mov
and
int
cwde
cmps
mov
push
push
out
adc
clc
mov
mov
hlt
iret
mov
std
fild
in
lea
imul
out
in
dec
ror
les
lds
xor
sub
add
test
clc
push
mov
jge
xchg
push
jno
je
push
pop
in
jmp
mov
(bad)
jnp
lods
pop
or
(bad)
cmc
jecxz
jmp
aad
pop
sbb
(bad)
jmp
rsqrtps
push
out
outs
mov
movs
push
sahf
sub
fist
jmp
push
ffreep
add
pushf
jl
imul
pop
mov
jne
cmp
dec
adc
retf
sub
fs
push
retf
pop
dec
dec
sti
xchg
sbb
daa
inc
pop
loope
cmc
ret
and
retf
sbb
cmp
xchg
in
push
adc
inc
push
xchg
cmc
xchg
ds
inc
repz
pop
out
xchg
push
mov
out
xchg
cmp
mov
dec
out
jbe
stos
shl
das
rcl
jns
mov
xor
dec
mov
push
test
xor
std
mov
sbb
mov
hlt
lods
daa
add
aad
mov
mov
push
sbb
in
xor
fs
in
add
adc
adc
movs
popf
test
dec
test
jge
ja
div
scas
out
fst
jg
adc
jp
repnz
repnz
jl
mov
xor
xchg
fnstenv
mov
lods
stos
je
dec
ret
test
in
or
call
sbb
es
dec
stos
jl
push
aaa
and
fcom
cs
dec
push
pop
sub
mov
fcomp
retf
mov
lods
xlat
ins
and
jg
pop
scas
(bad)
repnz
inc
lahf
sub
mov
mov
ja
sbb
cmp
jo
pop
inc
xchg
cmps
sti
xchg
sbb
jg
and
movs
jns
mov
fs
mov
jge
adc
xchg
daa
mov
fdiv
jns
repz
popa
fstp
push
(bad)
jmp
or
pop
xchg
aaa
pop
out
cmp
stos
daa
adc
retf
jecxz
pop
movs
push
ret
mov
cs
inc
mov
jl
mov
sbb
adc
push
shl
loopne
outs
xor
mov
mov
xor
jno
cmp
add
mov
ret
pop
shl
dec
mov
add
outs
jbe
and
gs
inc
pusha
pusha
jp
repz
pop
pushf
cmc
aad
jg
(bad)
aas
imul
sbb
and
(bad)
sub
xor
movs
fxch
xor
lea
ret
push
inc
sar
mov
iret
(bad)
sub
pop
jno
mov
mov
xchg
mov
pop
pop
call
shl
pushf
sbb
mov
jnp
cmp
retf
jmp
mov
push
mov
popa
gs
in
in
repnz
sbb
cmp
(bad)
aam
jno
repz
out
add
into
mov
push
iret
aad
xlat
push
call
cmps
dec
mov
mov
loop
or
push
xchg
scas
outs
lock
addr16
mov
sub
add
pop
push
push
imul
push
add
jnp
cdq
add
movs
mov
push
pop
loop
js
test
jp
sub
test
push
sub
out
jmp
or
out
xchg
xor
cmps
adc
inc
jns
push
mov
mov
adc
adc
enter
pop
inc
test
ret
mov
test
xchg
sbb
ja
repnz
add
aas
push
inc
movs
daa
aaa
je
jns
jne
(bad)
mov
sti
clc
stos
sub
dec
xchg
and
pop
fsubr
jo
add
dec
pop
cmp
sub
shr
ret
std
scas
inc
rcr
xor
inc
jns
movs
cmp
int
jecxz
xor
iret
dec
sar
bound
icebp
mov
xor
jb
inc
cld
nop
push
outs
xchg
aam
sahf
fwait
jo
mov
adc
adc
out
lock
dec
test
sbb
aaa
xchg
lods
imul
pop
sub
ficom
push
mov
fdiv
sbb
jno
pop
cli
xor
xchg
call
pop
xor
cld
xor
ins
sbb
call
mov
jns
sub
adc
aas
fs
loop
xor
xchg
xor
sar
pop
mov
or
xor
fwait
aas
xor
aaa
pop
pusha
lods
retf
icebp
mov
pop
cmp
pop
push
jge
leave
test
xor
leave
fsubp
push
sar
push
sub
int3
mov
jne
dec
cmp
mov
fnsave
ror
lock
sub
add
pop
aad
xchg
dec
adc
jmp
lds
push
fadd
inc
fcom
mov
(bad)
xchg
aas
rcl
in
lds
or
cli
fsubr
push
mov
inc
ret
mov
(bad)
loope
mov
push
fwait
imul
mov
push
pop
pop
imul
out
dec
aaa
fadd
ret
fnstenv
cmps
sti
sbb
jmp
loop
pop
xchg
mov
mov
adc
(bad)
lods
xor
sbb
(bad)
loopne
fisttp
mov
test
inc
call
mov
cmp
repz
jl
int3
scas
push
test
add
dec
pop
out
or
cli
jge
jmp
sub
jp
fiadd
rcr
xchg
(bad)
sbb
daa
xchg
mov
cmp
xchg
rcr
in
sub
and
pop
out
xchg
pop
mov
xchg
test
data16
mov
fwait
add
pusha
retf
aaa
loop
sub
dec
jns
sbb
test
mov
or
test
inc
inc
and
movs
jne
leave
call
sbb
dec
push
(bad)
mov
inc
mov
shl
sbb
or
test
test
push
cmp
dec
pop
mov
inc
push
adc
adc
stos
and
sub
jg
rol
cwde
push
popf
jmp
cmp
jns
push
mov
or
mov
pop
rcl
iret
pusha
scas
xor
mov
mov
imul
and
cli
xor
lods
push
and
jno
aam
sub
mov
mov
cld
pop
outs
jl
xor
test
push
adc
test
adc
pop
into
push
pop
mov
mul
fmul
dec
dec
push
pop
mov
mov
pushf
xor
xlat
lods
jns
ins
cli
pop
dec
sbb
ror
or
push
loope
pop
sub
xchg
outs
and
out
cli
sbb
xchg
pop
dec
popa
pop
jmp
(bad)
movs
jns
stos
and
jae
movs
je
and
ret
lods
hlt
repnz
mov
push
cmc
iret
not
test
ja
dec
sbb
sbb
neg
and
or
xor
lock
xor
and
fst
popa
pop
sahf
retf
mov
inc
or
movs
jne
aaa
dec
or
dec
add
iret
mov
xchg
add
xchg
test
jg
pushf
mov
mov
fisttp
and
and
pusha
mov
jo
push
sub
cs
or
repnz
push
fist
fisttp
pop
push
jmp
and
pop
inc
mul
or
rol
fsub
mov
icebp
arpl
int
aad
jbe
inc
push
dec
movs
gs
aad
push
sbb
xchg
sub
test
fimul
and
jp
popf
and
repz
and
push
retf
jp
pop
lods
mov
xlat
ds
inc
sub
mov
in
sysenter
mov
fstp
outs
outs
mov
repz
sub
push
cli
adc
pop
dec
jmp
ss
ja
je
std
sbb
scas
cld
jae
sbb
adc
dec
in
mov
(bad)
xor
jb
or
lea
ds
sbb
adc
push
out
movs
xor
outs
adc
sub
jbe
jno
mov
in
or
fstp
push
add
xchg
es
cmp
iret
pop
(bad)
fcomp
fadd
or
adc
mov
arpl
mov
add
repnz
std
push
test
aaa
lds
cmc
pop
call
dec
outs
js
int3
inc
and
cld
and
loop
out
mov
sbb
mov
mov
test
rol
jl
xor
dec
jecxz
in
ret
shl
retf
pop
and
mov
fsubr
push
loop
out
sbb
cld
or
or
pop
ret
sbb
sbb
jbe
or
mov
and
push
mov
cmp
push
pop
or
mov
jle
xor
vpsraw
test
and
jmp
push
or
sub
popf
(bad)
les
movs
call
mov
data16
rcr
cmp
call
jbe
xchg
fadd
in
pop
jne
mov
std
jnp
pop
dec
push
jmp
and
lea
out
mov
adc
mov
add
mov
and
retf
and
sub
movs
cs
xchg
jbe
pop
cwde
xchg
mov
fs
xor
pop
in
in
ins
lea
push
fmul
cmp
push
sti
and
xchg
ja
mov
dec
dec
inc
lods
leave
call
adc
mov
inc
(bad)
iret
paddusw
xchg
push
bswap
mov
sub
retf
pop
sbb
(bad)
cmp
dec
add
inc
cmp
add
push
mov
adc
addr16
(bad)
jg
sub
xor
add
imul
stc
loopne
xor
lea
and
push
xchg
lods
fisttp
dec
in
push
in
pop
mov
cld
(bad)
cmc
pop
fbstp
push
rol
loop
inc
leave
adc
ins
push
xchg
in
cmp
jnp
jb
sbb
(bad)
sbb
rcr
lds
adc
xchg
fld
dec
mov
cmp
dec
push
test
add
inc
sahf
or
jmp
mov
ins
mov
mov
inc
in
dec
dec
cmp
cmp
cmp
xor
jecxz
scas
mov
sub
scas
mov
jmp
cmc
mov
or
push
js
and
push
inc
xchg
or
daa
inc
cmp
push
icebp
retf
aad
cmp
adc
sub
sbb
fild
push
data16
dec
mov
xchg
jne
push
fldcw
add
jbe
pop
in
int
aad
xchg
push
aad
mov
rol
fcom
adc
mov
shr
sbb
mov
ja
sub
je
jae
or
cs
fbstp
push
inc
and
inc
rcr
push
(bad)
(bad)
jp
jp
mov
sbb
jns
rol
call
call
xchg
loope
out
xchg
shl
sbb
or
pop
bnd
and
sub
retf
fwait
xchg
cmp
jmp
data16
outs
in
jnp
jbe
lods
stc
and
out
cmp
int
mov
shl
sbb
push
int
das
frstor
retf
cmps
ret
pop
or
dec
daa
test
ds
jne
sub
hlt
iret
in
xor
mov
retf
dec
mov
sbb
mov
mov
lods
and
sub
xchg
cs
mov
xor
xor
mov
mov
retf
in
icebp
aad
sub
push
clc
rcr
jecxz
(bad)
fwait
mov
ds
bound
sbb
outs
movs
repnz
jg
fwait
and
jp
inc
div
ret
mov
dec
js
stos
out
mov
inc
fwait
out
xor
dec
mov
mov
pop
mov
cmps
shl
ror
outs
ins
pop
fisub
jb
xor
inc
sub
add
dec
stc
xor
pop
imul
mov
ins
or
mov
(bad)
xor
stos
(bad)
jmp
leave
icebp
std
int
dec
push
pop
iret
and
popf
sti
add
dec
push
push
sbb
mov
aas
shl
cmp
xor
(bad)
and
or
test
rcl
out
aaa
dec
sbb
dec
ss
fist
mov
mov
dec
add
dec
out
popw
inc
xchg
aas
pop
push
cdq
lds
or
cmp
inc
xchg
mov
fwait
xor
or
pop
or
cmps
mov
(bad)
stos
dec
sbb
push
mov
xchg
mov
cs
jg
and
jb
mov
adc
pusha
xor
and
(bad)
push
jmp
pop
xor
sbb
dec
call
(bad)
mov
push
neg
scas
lds
cdq
loop
jne
out
push
sub
cmp
sar
push
push
in
jmp
test
sahf
add
inc
(bad)
mov
inc
cld
cmp
scas
push
call
jg
fs
xlat
dec
in
xchg
pop
push
in
sub
xor
(bad)
fld
loope
dec
add
xlat
bound
add
jbe
jns
ds
lock
jb
dec
adc
dec
inc
daa
repz
loop
fcom
cmps
into
dec
jmp
mov
aad
sbb
scas
cmp
stc
cld
int
cdq
jbe
mov
outs
and
vcvtss2si
adc
js
xchg
add
bnd
cli
pop
das
mov
pop
and
(bad)
hlt
add
jns
add
repnz
sti
add
mov
cmp
and
cld
test
ins
add
cmps
mov
pop
call
ja
das
ret
mov
ins
icebp
fwait
pop
sti
mov
jmp
and
ror
or
bound
enter
dec
mov
fistp
ja
xchg
in
jae
dec
ins
adc
jmp
dec
cmp
(bad)
push
cmps
dec
cmp
cmp
das
(bad)
adc
aaa
sub
dec
pop
dec
cmp
cmps
jae
adc
cmp
jecxz
test
jle
(bad)
fistp
out
push
xchg
popf
lods
ins
or
xchg
clc
call
fild
retf
icebp
mov
pop
xchg
fbld
in
lods
dec
dec
in
retf
call
cmp
enter
test
loopne
dec
xchg
movs
mov
ret
mov
pop
adc
arpl
and
xor
dec
stos
in
neg
xchg
lods
sbb
lds
push
repz
imul
pop
ret
das
push
adc
(bad)
jmp
or
jmp
xchg
int
fnstsw
add
mov
or
cmc
cmp
sub
or
fnstsw
es
dec
xor
pop
(bad)
scas
dec
push
jmp
pop
pop
and
retf
dec
fld
mov
in
sar
ror
cmps
cmp
and
bnd
cwde
xchg
out
gs
add
jae
rol
jmp
add
push
add
push
sub
sbb
xchg
push
icebp
add
xchg
push
mov
in
retf
pop
test
jnp
sub
dec
in
call
fsub
dec
xlat
mov
jle
scas
cli
jmp
lds
test
mov
maskmovq
mul
sub
jno
ror
lea
fldenv
push
shr
add
push
arpl
dec
inc
sub
jecxz
bound
and
cmp
jge
ds
mov
mov
in
jne
sbb
lods
scas
push
cli
push
mov
pushf
push
and
je
cld
mov
imul
cmc
clc
inc
in
mov
cmp
fdiv
xor
or
mov
leave
pop
cwde
(bad)
or
hlt
outs
push
out
popf
mov
mov
mov
adc
retf
jnp
lods
in
aad
outs
jecxz
mov
ret
movs
mov
push
xchg
dec
enter
imul
or
adc
les
imul
and
ret
inc
test
jne
and
mov
and
xor
inc
test
xchg
fistp
cmp
push
stc
jg
(bad)
and
jmp
das
lods
push
and
sub
push
jl
les
shl
movs
leave
or
push
je
aam
fld
(bad)
jbe
or
xor
and
(bad)
xlat
cmc
jmp
mov
cmp
xor
test
ja
push
int3
dec
hlt
out
mov
xor
call
addr16
add
movs
jl
xlat
sbb
inc
pusha
retf
or
stc
stc
xor
xchg
push
mov
xchg
lds
shl
mov
sar
js
push
inc
add
or
jno
add
fcomp
call
loopne
jb
mov
aaa
jns
pop
xor
mov
mov
pop
nop
cld
imul
xchg
pop
pop
push
into
lea
ret
and
cmp
xchg
fdiv
dec
add
int
ins
call
push
ins
push
mov
lods
cmp
test
stos
je
mov
(bad)
adc
xlat
xchg
(bad)
jecxz
outs
pop
add
out
test
pop
sub
and
jecxz
mov
mov
shl
test
push
xchg
jae
dec
dec
adc
adc
and
xor
push
mov
aad
mov
add
or
inc
pop
cs
test
sbb
add
and
inc
inc
jg
(bad)
(bad)
cld
jp
loopne
push
(bad)
mov
jmp
mov
sbb
(bad)
sbb
inc
inc
pusha
mov
into
stos
cmps
daa
popa
push
dec
cdq
push
sbb
repnz
popa
std
push
ss
mov
arpl
vpackssdw
bound
mov
push
mov
push
inc
mov
push
int
pop
pop
in
adc
pop
and
lahf
cmp
pop
lods
cmps
ss
mov
pop
std
push
cli
repz
stos
pop
sub
inc
mov
or
or
xor
cmps
mov
shl
outs
inc
or
push
sar
out
jp
cmp
out
nop
ja
les
mov
sub
aad
sti
jo
mov
adc
movs
push
and
push
daa
sahf
icebp
and
test
lock
xor
(bad)
cmp
fsubr
cmp
push
movs
mov
mov
int3
adc
arpl
push
pop
xchg
adc
inc
jmp
fdiv
pop
mov
(bad)
jne
mov
hlt
add
loop
sub
mov
mov
mov
sub
mov
int3
cmp
dec
imul
mov
mov
mov
mov
pop
inc
mov
test
xor
adc
add
loop
inc
into
ins
loope
and
neg
std
sahf
ret
add
rcl
push
adc
mov
ins
sbb
cmps
gs
scas
mov
inc
jae
cmp
mov
cdq
int
lahf
push
data16
ins
and
and
push
jnp
xor
dec
and
push
mov
xchg
cmps
mov
ds
inc
pop
mov
in
jle
cmp
push
into
call
adc
jbe
in
mov
test
(bad)
rol
add
pop
pop
fst
fist
pop
aad
xor
(bad)
sti
loop
fcom
inc
pop
test
mov
push
inc
jbe
sbb
adc
pop
adc
call
test
add
test
daa
aad
adc
or
and
cmp
jecxz
arpl
ret
loopne
dec
jno
ret
mov
pop
clc
xor
mov
sbb
adc
jno
push
push
pop
mov
loopne
push
sbb
(bad)
aas
jns
and
xor
imul
jmp
call
shl
mov
lods
sbb
mov
test
sub
retf
enter
shl
sub
fistp
and
cmp
push
ja
mov
and
int
mov
rol
mov
jae
mov
pusha
mov
sti
mov
mov
cmp
ffree
div
cwde
dec
xchg
jg
nop
in
stos
ss
inc
inc
mov
mov
adc
jbe
leave
fwait
scas
cmp
inc
gs
or
rcl
inc
push
or
imul
iret
push
sbb
mov
add
or
sbb
dec
jmp
xor
jne
dec
in
lahf
(bad)
ja
ret
xchg
test
out
sub
loop
sbb
aas
cmc
mov
mov
push
les
pop
enter
repz
jbe
mov
iret
(bad)
ror
movs
enter
out
add
sti
mov
gs
fnsave
sbb
sub
popa
xor
fisub
pop
pop
stc
xor
leave
icebp
in
test
ret
mov
cwde
lds
in
retf
loope
cmp
(bad)
int3
push
inc
ret
loopne
cmp
repnz
mov
outs
call
add
cmp
out
mov
jmp
xor
ficom
add
inc
(bad)
fild
scas
cmp
cmc
repz
jcxz
dec
or
call
mov
add
xchg
retf
ret
push
std
mov
sub
mov
popf
leave
xchg
fcomp
loop
enter
xchg
imul
int3
shl
adc
repnz
pop
nop
jmp
out
mov
pop
outs
cmp
rdmsr
stc
adc
enter
mov
rcr
mov
push
adc
add
cmp
xor
mov
les
or
cmps
push
dec
add
xor
push
dec
lock
in
push
push
or
sub
in
fwait
mov
fs
push
(bad)
or
inc
mov
pavgw
dec
enter
rcr
shr
xor
sub
cmp
sbb
sbb
add
out
add
jge
pop
jp
scas
pop
adc
xor
jne
jns
leave
rol
cmp
adc
cmp
push
fwait
jmp
(bad)
or
or
and
xchg
jae
jl
and
in
call
sahf
in
inc
push
je
ins
sbb
mov
repnz
xor
cli
rcl
dec
xor
xchg
adc
xor
push
jl
mov
nop
mov
sahf
sub
mov
addr16
mov
mov
cmp
push
repnz
addr16
fcmove
mov
hlt
stos
std
test
inc
or
xor
cmp
(bad)
retf
sbb
repz
clc
int
or
std
addr16
xor
jmp
add
iret
mov
cmp
retf
pusha
pop
stos
xchg
cdq
pop
xchg
les
jbe
dec
(bad)
mov
shl
bound
mov
jnp
fs
pop
iret
dec
in
sbb
loop
adc
nop
retf
sub
call
bound
inc
int
pop
or
or
out
push
stos
leave
sgdtd
stos
ja
jae
jnp
mov
jne
(bad)
bnd
jmp
scas
inc
jl
retf
or
xor
lea
mov
inc
je
pusha
pop
inc
dec
xor
xchg
inc
inc
sbb
call
loop
jne
xor
ret
mov
mov
arpl
inc
stc
xchg
call
iret
in
test
ret
dec
inc
xor
test
pop
xchg
shr
retf
inc
bound
ds
adc
cmp
and
push
sbb
push
pusha
lock
data16
dec
sbb
jle
jecxz
push
stos
leave
loope
ret
xlat
lods
lahf
mov
sub
enter
mov
test
mov
jae
pop
adc
aam
cmps
xor
clc
lock
mov
jge
xor
push
xor
cmp
(bad)
mov
lea
dec
stos
enter
adc
add
test
test
inc
ins
add
out
neg
sbb
hlt
xchg
sbb
bound
xchg
aad
mov
cmp
pop
or
fdiv
push
not
popf
push
aaa
add
pop
dec
xor
xchg
xchg
xor
pop
mov
pop
xchg
xor
jl
jne
gs
sub
add
sahf
push
int
and
cmp
lods
sbb
jne
dec
scas
push
fild
xor
shrd
(bad)
mov
adc
jo
inc
adc
out
and
imul
adc
jle
test
add
lock
mov
lock
jmp
movs
and
out
cmps
sti
data16
jo
imul
(bad)
idiv
jge
pop
mov
into
ds
out
jbe
pop
jmp
dec
pop
je
icebp
sbb
ins
xor
push
fbstp
fadd
sub
or
ret
movs
jmp
mov
or
xchg
add
cmp
sbb
jmp
idiv
icebp
sub
add
nop
xor
mov
(bad)
jmp
ss
(bad)
scas
jno
(bad)
pop
jae
mov
mov
jmp
icebp
push
jmp
jecxz
dec
ins
fsub
in
(bad)
pop
xchg
lods
cmc
or
sti
test
call
stc
add
add
inc
push
inc
bound
cld
mov
das
movs
or
mov
popa
push
stc
mul
jbe
push
fisttp
and
dec
mov
not
mov
imul
test
sub
mov
cmp
or
jge
mov
xchg
inc
pushf
neg
out
daa
jle
sub
adc
mov
sub
xor
sub
je
and
xchg
jns
mov
into
data16
aaa
jp
push
sahf
pop
aad
push
jmp
repnz
(bad)
sbb
fistp
mov
mov
lods
aad
or
xor
and
fldenv
mov
or
in
clc
sbb
fcom
loop
mov
loop
inc
sub
repz
xor
sub
push
jp
out
push
in
cmp
xchg
add
mov
mov
adc
sbb
adc
ds
idiv
xchg
iret
push
inc
jmp
test
stos
loope
jno
lods
mov
pop
mov
bound
gs
and
fmul
ds
mov
mov
nop
loop
inc
ins
xor
jne
mov
dec
adc
mov
popa
dec
je
cmp
fimul
sub
dec
pop
mov
inc
sub
sbb
jmp
mov
ret
push
sbb
push
ja
mov
xchg
xor
push
out
dec
data16
mov
xor
adc
sbb
xor
add
not
or
test
push
in
cs
or
cli
push
adc
mov
jnp
mov
lock
rol
cmps
mov
call
lock
call
inc
imul
aaa
add
xlat
scas
and
adc
xor
scas
inc
cmps
not
clc
sub
inc
add
ret
mov
sub
xor
cld
int3
dec
mov
cmp
jecxz
add
sub
xchg
mov
xchg
xlat
add
cmps
scas
push
and
mov
jmp
mul
fist
call
mov
push
and
and
les
add
ins
push
pop
sub
mov
sub
test
pusha
sub
xchg
mov
inc
cmp
mov
fiadd
cmp
aas
sbb
loop
dec
dec
or
sub
pop
sahf
cmps
fstp
cmp
dec
fcmovnb
mov
cmp
call
adc
lahf
mov
add
mov
fisub
jb
mov
add
mov
call
ins
mov
js
dec
add
repnz
std
into
dec
lahf
ror
ret
inc
and
mov
idiv
mov
imul
sahf
pop
std
cld
and
mov
ins
out
push
stos
outs
fbld
int3
pop
mov
rol
and
xor
cmp
fist
int3
pop
add
call
cmp
icebp
xor
test
jbe
jbe
icebp
dec
shl
pushf
sub
imul
call
xor
int
in
sbb
adc
cwde
cmp
cmps
cli
test
sbb
push
js
jbe
jp
xor
retf
call
sub
mov
sub
ret
mov
xchg
sbb
and
xchg
or
and
cmps
mov
push
push
call
in
bound
mov
pop
cmp
sbb
sahf
pop
mov
movs
mov
out
and
mov
hlt
scas
adc
(bad)
scas
fsubp
dec
or
mov
or
jmp
push
cmp
jle
ret
jmp
loope
xor
push
rcl
ss
test
movs
test
and
mov
pop
mov
stos
add
sbb
xchg
push
sbb
outs
(bad)
jns
cmps
mov
(bad)
adc
and
cmp
sbb
mov
inc
push
(bad)
cmp
push
xlat
inc
xchg
jb
ja
cmp
into
pop
sub
ret
xor
sub
out
push
xor
leave
cmp
aad
jns
icebp
stos
or
jmp
js
xchg
pop
add
gs
push
jg
mov
je
(bad)
das
cwde
jmp
push
icebp
mov
movs
in
or
icebp
retf
sbb
lods
ret
jae
dec
or
(bad)
std
and
xchg
jecxz
inc
jle
int
jae
fistp
fld
ds
mov
push
or
mov
pop
rep
out
mov
gs
pop
je
retf
(bad)
or
jne
jno
cs
mov
mov
(bad)
jmp
fdivr
js
repz
(bad)
pop
pop
sti
ror
mov
mov
dec
repnz
scas
out
push
mov
mov
xor
fisubr
jb
push
outs
and
sbb
jmp
add
cmp
push
dec
scas
jmp
cmp
aas
popf
xchg
cs
stos
cmp
dec
cmc
or
rcl
pop
sub
lock
repz
frstor
jno
stos
fucomi
rol
rcr
mov
push
sub
mov
adc
jnp
arpl
inc
bound
jmp
lods
mov
xchg
mov
rcr
add
retf
retf
add
adc
shl
or
xor
xchg
loopne
mov
xor
jo
div
int
adc
adc
outs
call
test
out
pop
sub
and
std
das
mov
and
dec
out
(bad)
nop
pop
xchg
inc
fwait
add
out
inc
js
out
mov
jmp
mov
retf
nop
enter
repz
stos
and
fwait
sub
imul
jmp
push
js
jne
dec
jo
mov
mov
cmp
mov
jmp
sub
dec
xchg
add
movs
retf
cwde
add
cld
mov
mov
and
xor
sub
inc
out
xchg
popa
icebp
mov
fiadd
cmp
sbb
xor
sub
jmp
xchg
dec
mov
ror
cmp
(bad)
movs
ret
adc
pop
xchg
sahf
repz
int
mov
test
(bad)
add
push
fdivr
mov
int
lds
fst
shr
add
and
mov
push
repz
and
call
inc
and
pop
or
sub
mov
mov
fadd
stc
ja
ficomp
push
xchg
dec
adc
ret
add
ficomp
sub
push
jns
imul
cmp
push
sub
repnz
out
(bad)
pop
mov
fld
xor
mov
xor
movs
jne
pop
mov
ins
and
out
jno
int
jg
imul
and
lock
xchg
int3
sub
stc
movs
mov
and
pop
dec
loop
cwde
ja
call
stc
dec
xchg
mov
add
sbb
ds
dec
inc
arpl
loope
adc
mov
adc
sub
push
adc
mov
gs
sub
fld
push
mov
and
ins
cmps
jecxz
not
int3
pop
add
in
jmp
dec
jne
enter
jmp
mov
jns
or
out
and
sub
les
imul
mov
and
icebp
fs
and
xlat
outs
cmp
mov
and
out
push
push
(bad)
xor
cmp
lock
xor
call
inc
scas
jg
pop
in
shl
aad
in
shl
(bad)
sbb
jb
and
aaa
dec
mov
ficom
ss
std
and
call
cmps
pushf
or
sbb
push
add
sub
sbb
mov
xchg
cmp
scas
add
clc
aaa
sub
test
sub
mov
or
test
mov
in
mov
and
adc
adc
mov
pushf
xor
cmc
jno
cdq
dec
jecxz
mov
mov
add
fisttp
push
cmps
in
push
xchg
or
gs
imul
leave
mov
pop
sahf
aas
std
dec
pushw
lods
jnp
mov
mov
sub
into
loopne
mov
icebp
cmp
or
out
sti
and
jmp
ds
or
dec
push
xor
mov
pushf
stc
cmp
pop
pop
ffreep
aad
cmp
xchg
shr
and
pop
push
mov
sti
and
lods
in
or
cmp
imul
addr16
iret
cmp
lock
mov
mov
in
or
je
dec
(bad)
dec
jp
je
or
test
cmps
cmps
pop
xchg
push
pop
shl
loopne
scas
ins
adc
sub
or
shl
in
lea
mov
mov
aaa
xor
sub
sbb
mov
push
into
xchg
pusha
mov
sub
lea
add
popa
call
jns
ins
inc
adc
repnz
xchg
cli
and
mov
dec
sbb
add
not
shr
loope
js
fmulp
int3
nop
mov
sub
xchg
jle
dec
fisttp
retf
retf
in
xchg
scas
add
ins
scas
add
lea
dec
push
sub
inc
shr
movs
dec
jg
mov
cmps
lea
out
inc
dec
push
sbb
push
push
xor
push
push
sub
inc
pop
mov
stos
push
mov
xchg
xchg
mov
pop
shr
mov
cmp
fidiv
mov
(bad)
cmps
out
mov
jp
stos
mov
xchg
dec
cld
cmp
or
jg
fcom
outs
mov
daa
xchg
retf
and
pop
jle
inc
pop
stos
gs
gs
and
sbb
mov
stos
sbb
stos
in
fimul
fbstp
scas
mov
inc
pop
jb
mov
scas
mov
or
push
push
or
xchg
ins
dec
sbb
fs
and
fidivr
in
push
call
aam
movs
inc
cmp
dec
and
data16
xchg
jg
mov
xchg
mov
sahf
inc
enter
call
mov
rol
xor
retf
jle
std
daa
push
push
push
out
test
xchg
frstor
int3
ja
aaa
lods
bound
mov
inc
mov
lahf
inc
nop
mov
add
sahf
mov
inc
jbe
popa
mov
ins
daa
(bad)
jg
into
shl
cs
test
inc
jg
jp
ret
outs
jns
adc
jmp
inc
xor
(bad)
rol
pop
mov
cmp
movs
mov
sub
xchg
push
jl
mov
xchg
adc
mov
ret
mov
jne
mov
int3
push
lods
mov
dec
jbe
cld
push
xor
dec
fadd
nop
push
sbb
jnp
icebp
xchg
dec
mov
aaa
aam
(bad)
sahf
js
pop
xor
adc
pop
inc
loop
xor
cmps
fs
mov
ror
scas
push
jp
mov
movs
sub
pop
jge
dec
int3
cmps
movs
lahf
sbb
in
cmp
add
xchg
cmps
sbb
(bad)
retf
hlt
xchg
inc
repnz
sub
dec
cmp
push
push
jb
mov
mov
(bad)
jle
pop
clc
jnp
xchg
add
outs
rol
xor
xor
shl
scas
fidivr
mov
movs
out
xlat
jo
pop
add
ret
xchg
bound
je
shl
xor
mov
pop
test
inc
bound
jns
popa
clc
adc
cmps
sbb
ss
scas
jb
ficomp
(bad)
mov
add
and
mov
cmp
je
out
mov
ins
(bad)
das
lea
aas
cs
sbb
fmul
pop
xchg
icebp
leave
push
pop
or
cs
cwde
pop
or
xchg
jp
sbb
inc
xchg
push
and
call
adc
mov
cmp
xchg
stc
nop
jnp
mov
or
mov
pushf
shl
cdq
stos
je
xor
(bad)
mov
mov
dec
es
out
(bad)
sub
repz
shr
jno
data16
dec
lods
movs
into
lock
add
push
adc
cmp
call
xchg
pusha
sub
and
adc
leave
fimul
aad
mov
jb
imul
mov
in
ror
hlt
xor
fsub
mov
repnz
dec
iret
fidiv
mov
pop
idiv
mov
or
retf
push
scas
xchg
pusha
repnz
xor
pop
adc
sub
adc
ds
scas
inc
hlt
mov
xchg
and
fst
or
repnz
cdq
ja
inc
int
jp
adc
(bad)
int
cmp
mov
ds
sub
(bad)
cmp
sub
fisub
push
push
cdq
add
pop
imul
mov
dec
mov
jecxz
sbb
xor
neg
jmp
(bad)
rcr
popf
ja
addr16
pop
push
and
test
popa
inc
or
in
or
mov
data16
pop
outs
jecxz
(bad)
fadd
push
xchg
push
inc
fwait
jns
xchg
mov
rol
jnp
jl
and
sahf
or
dec
sub
loope
add
scas
or
in
lock
dec
push
cmp
aam
lods
inc
dec
mov
dec
pop
mov
add
mov
aaa
lods
push
adc
xchg
es
cmp
test
pop
xor
and
mov
xor
movs
inc
dec
jo
(bad)
jecxz
xor
push
inc
adc
popa
dec
scas
xchg
(bad)
push
pop
das
sub
push
movs
sub
ins
ds
iret
fidiv
(bad)
into
dec
and
fsubr
sbb
out
fcmovbe
sbb
cdq
loopne
stc
fisttp
adc
lea
stos
je
ficomp
out
cmp
xchg
call
push
xlat
adc
aas
mov
call
fcomp
adc
mov
mov
and
enterw
movs
retf
mov
clc
outs
adc
test
sti
push
shl
imul
test
rcr
(bad)
popa
and
fdiv
data16
out
xor
fiadd
daa
idiv
es
sub
sub
sub
pop
pop
add
pop
ins
fistp
fild
(bad)
cmp
pop
or
cmp
cmp
inc
push
or
pop
test
pusha
mov
rcr
dec
fidiv
mov
mov
and
lods
jge
dec
out
call
call
sbb
sub
mov
inc
ret
repnz
bswap
jns
inc
mov
mov
jmp
loopne
or
out
jns
cmp
cdq
lea
mov
rol
out
in
hlt
mov
dec
sub
inc
and
iret
int3
xor
out
call
idiv
dec
mov
je
loop
xor
and
js
mov
mov
into
retf
and
in
or
mov
icebp
sbb
ja
cmp
daa
jo
mov
jne
scas
push
mov
daa
por
jge
mov
push
mov
addr16
into
out
add
outs
repz
loop
cdq
mov
out
xchg
mov
mov
mov
(bad)
out
mov
ins
xchg
push
ror
lahf
mov
cmp
jmp
int3
cs
loopne
ins
or
or
scas
add
jmp
mov
adc
jno
pop
or
cmps
adc
in
rcl
sbb
(bad)
jle
mov
mov
xor
ds
es
sbb
jo
sbb
inc
pop
mov
test
mov
pop
jl
sub
xor
clc
mov
(bad)
jno
sub
fsubr
pop
jb
or
outs
push
aas
push
in
mov
into
rcl
jmp
es
mov
jg
repz
cld
pop
mov
push
fwait
in
rcl
imul
movs
mov
mov
jae
fs
pop
loopne
int3
fidivr
repz
mov
cmp
xchg
repz
fisubr
repz
add
cmp
or
sub
(bad)
pop
ds
sub
xchg
mov
dec
dec
retf
dec
fidivr
mov
hlt
sub
cld
jb
sub
push
jns
add
and
lods
push
xlat
mov
ret
outs
fild
pop
add
mov
aaa
xchg
pop
and
push
ficomp
xor
mov
xor
movs
cmp
and
mov
cmp
das
jmp
xchg
es
fadd
mov
lea
pop
mov
cmps
jmp
sub
and
(bad)
and
jnp
and
mov
lds
mov
inc
add
int
ret
and
call
fistp
inc
and
aaa
pushf
loope
mov
sbb
push
pop
sub
js
cmp
cwde
int
daa
div
out
ror
push
int3
fmulp
pop
(bad)
xor
pop
fmul
iret
ja
cmps
daa
or
mov
or
pusha
mov
mov
xor
jae
lahf
(bad)
jmp
test
aas
in
sub
data16
mov
mov
push
imul
fs
in
ss
xor
cdq
jge
and
push
repz
enter
std
push
repz
inc
call
(bad)
xor
in
inc
hlt
ins
sub
pop
dec
add
mov
lods
mov
cmps
stos
xor
mov
add
stos
inc
ja
sub
ret
out
lds
daa
mov
jle
jp
hlt
ficom
out
lahf
fistp
loope
mov
sub
sbb
jb
retf
mov
pop
push
cmps
loope
or
js
scas
cld
arpl
test
(bad)
not
outs
rcr
ret
and
jle
fwait
stc
out
dec
pop
push
push
cdq
in
mov
mov
xchg
add
fadd
dec
mov
imul
pop
pop
jbe
repnz
adc
pop
cmp
mov
pop
pop
(bad)
xchg
jmp
fnstsw
and
adc
out
add
(bad)
sbb
das
lds
(bad)
(bad)
or
retf
or
in
das
mov
adc
jae
sbb
test
loopne
outs
movs
ins
push
fst
mov
mov
idiv
pop
xchg
push
dec
push
es
lods
adc
data16
push
nop
mov
xor
repnz
lods
es
leave
or
mov
dec
cmovnp
fstp
mov
ss
mov
pop
pusha
loopne
(bad)
jmp
int3
and
into
and
popa
cmp
cdq
mov
mov
js
fadd
into
out
stos
cmp
repnz
stos
retf
push
xchg
loop
mov
pop
pop
dec
mov
loopne
aad
jo
inc
jp
cmp
bound
or
in
retf
cmp
fcom
loop
push
shl
inc
leave
mov
mov
mov
mov
fmul
jno
ror
and
mov
pop
add
push
push
xchg
push
mov
and
fistp
add
cmovp
sub
mov
jl
pop
loop
mov
jmp
loopne
dec
out
add
icebp
sbb
outs
cwde
fwait
test
outs
push
fidivr
adc
xlat
mov
lahf
push
repz
lock
push
sbb
dec
pop
pop
jge
test
add
lods
dec
xchg
mov
dec
aad
lods
inc
inc
add
add
sahf
jo
sbb
hlt
cli
pop
jmp
(bad)
or
rcr
and
push
cmps
mov
adc
scas
je
data16
or
aad
loope
adc
add
sbb
mov
xchg
pusha
push
enter
pop
xor
cmps
jecxz
clc
dec
mov
cwde
xor
add
jnp
mov
add
add
xchg
scas
out
jno
lahf
lods
repz
arpl
icebp
lods
(bad)
jg
fcomp
jg
dec
idiv
adc
in
inc
outs
adc
aam
xchg
arpl
addr16
fwait
cmc
loop
mov
jae
cmps
lods
xor
or
out
push
leave
push
push
and
stc
xchg
sbb
or
inc
add
and
imul
push
sbb
pcmpgtd
out
xchg
dec
sbb
test
scas
adc
pop
xchg
cdq
mov
and
xchg
jecxz
iret
sbb
rol
aam
pushf
mov
pop
or
push
adc
jl
push
shl
and
jae
inc
pop
jbe
adc
sub
pop
call
adc
push
lsl
jnp
fwait
cmps
or
or
cmp
fstp
in
fisub
pop
push
jl
jg
jl
pop
cmp
mov
pushf
stos
add
jmp
jne
xchg
pusha
inc
mov
maxps
push
je
pop
int
outs
lahf
xor
loop
cli
call
sti
bound
movs
add
cmps
pop
xor
cs
and
lds
inc
icebp
sub
sbb
or
xchg
(bad)
inc
test
push
lgs
adc
add
add
pop
xchg
pushf
repz
(bad)
xlat
mov
loope
dec
push
xor
inc
out
sub
sub
adc
push
pushf
test
rcl
adc
pop
and
sbb
div
adc
fbstp
(bad)
jno
in
repz
cdq
movs
jle
dec
xchg
mov
popa
fwait
test
out
shl
mov
outs
repnz
fimul
dec
jg
inc
mov
cdq
fmul
cmc
mov
retf
sahf
or
mov
popa
adc
dec
rcr
imul
mov
inc
xchg
dec
pop
pop
dec
nop
add
outs
cmc
icebp
cdq
mov
int
fiadd
inc
retf
jmp
imul
shl
leave
popa
(bad)
pop
popf
sub
adc
push
daa
sub
mov
test
sahf
aaa
jecxz
and
and
sbb
jae
mov
lock
push
pop
push
cmps
xchg
jle
mov
and
lods
xrelease
xor
add
mov
scas
pop
aam
pushf
jmp
iret
fild
mov
pushw
jae
sub
fist
mov
in
inc
cdq
scas
pushf
(bad)
push
mov
lock
pop
fldcw
or
clc
push
lods
shl
push
inc
and
(bad)
and
jmp
fs
rcl
xchg
xor
repnz
shl
sub
or
fnstenv
lahf
or
in
dec
dec
in
pop
push
shr
lods
jle
push
jne
cs
push
jmp
xchg
mov
retf
mov
movs
mov
inc
retf
or
aam
push
dec
push
jle
cmp
push
(bad)
jl
or
mov
into
dec
sbb
cld
mov
and
jno
jle
pop
add
adc
sbb
fidiv
fistp
mov
mov
adc
sar
loope
daa
pop
cmp
xor
scas
retf
div
inc
pop
sub
sub
ret
xchg
jmp
movs
sbb
pop
addr16
cli
cli
std
push
mov
call
aam
or
cmp
sub
mul
push
and
jle
sbb
xor
dec
pop
je
inc
pop
cmp
mov
pushf
arpl
js
iret
push
add
xchg
rol
aam
cmc
pop
cmp
pop
shl
ins
push
(bad)
test
or
mov
(bad)
(bad)
xchg
shr
movs
mov
xor
xchg
in
aas
push
inc
mov
sub
sbb
mov
scas
mov
sub
mov
mov
mov
shr
das
loopne
push
inc
and
inc
and
les
ret
fidiv
and
xchg
call
inc
aam
push
loope
lahf
pop
call
in
jle
lock
adc
mov
rcl
pop
push
mov
dec
push
adc
jge
dec
cli
dec
js
lock
jb
xor
cmp
mov
mov
jge
adc
fs
mov
push
(bad)
adc
ret
iret
out
adc
(bad)
mov
jp
sub
jae
js
sub
jmp
push
movs
and
gs
shl
jp
fidivr
add
add
fisub
aaa
iret
inc
pop
pop
and
push
(bad)
call
jl
aam
hlt
dec
dec
loopne
dec
sub
int
ficomp
lahf
icebp
icebp
add
arpl
xchg
mov
pop
jecxz
mov
(bad)
mov
fmul
xchg
jge
out
pushf
dec
mov
sub
je
cmp
push
fldcw
inc
jle
(bad)
pop
adc
sub
test
sub
jle
out
xor
mov
push
adc
and
jg
popa
clc
inc
repz
xor
out
mov
add
js
push
add
mov
in
gs
mov
mov
(bad)
jb
dec
mov
inc
pop
(bad)
fdivr
es
popa
mov
fs
inc
mov
or
sbb
and
div
add
mov
retf
clc
and
gs
mov
cmp
mov
fld
mov
jns
lea
pop
add
imul
xor
bound
mov
sbb
jo
inc
jmp
dec
cdq
sbb
into
in
movs
add
xchg
cmp
loopne
pop
aam
jns
adc
sbb
es
pop
or
or
or
dec
push
jo
mov
jmp
std
mov
shl
mov
xchg
je
push
sbb
xchg
out
movs
es
jmp
retf
out
hlt
mov
and
dec
clc
mov
fdivr
add
push
out
sar
fidivr
movs
popf
cmc
dec
imul
cmp
mov
fst
inc
mov
and
cmc
push
sbb
mov
bound
dec
push
sbb
ror
mov
jb
sub
fnstsw
xor
mov
jle
sbb
jbe
xor
and
dec
sbb
repz
ret
sub
loop
add
pusha
stos
xchg
pop
pop
add
rcr
fnsave
inc
mov
pop
test
dec
inc
in
pop
popf
cmps
mov
jmp
pop
aas
imul
and
xor
sub
mov
pop
jo
or
sar
mov
push
sub
mov
mov
push
push
ds
bnd
inc
sar
jge
mov
ror
cmp
in
into
inc
scas
arpl
test
pop
sbb
inc
fadd
into
and
dec
frstor
dec
xchg
aas
daa
dec
xchg
pop
lods
jb
mov
rol
pop
pop
adc
jmp
pusha
xchg
pop
cmps
call
jmp
(bad)
out
jp
cli
xlat
rcr
sbb
ficom
fs
sbb
cwde
call
ret
lds
imul
(bad)
nop
push
loope
add
fsub
retf
push
pusha
jecxz
push
shr
sbb
xor
imul
movs
dec
sbb
push
ret
lods
xchg
stos
push
stc
ja
xchg
xor
jge
enter
or
push
jne
inc
jg
mov
out
xor
je
stos
mov
or
cdq
add
mov
(bad)
mov
popa
popf
adc
or
ins
jmp
movs
sti
adc
dec
scas
rcr
and
js
pop
je
mov
xchg
lods
sbb
ins
inc
add
retf
aaa
es
shl
or
jle
pop
icebp
jne
add
stos
lds
mov
xor
mov
retf
(bad)
mov
(bad)
cmp
mov
lds
icebp
sti
jle
in
mov
mov
ins
adc
repnz
(bad)
mov
push
push
outs
stc
movs
pop
or
(bad)
(bad)
std
mov
mov
sbb
pop
(bad)
cmp
mov
sbb
neg
cmp
popf
out
mov
ins
mov
pop
call
sbb
pop
mov
(bad)
mov
icebp
xor
sbb
ins
fidiv
mov
cmc
pop
enter
jmp
dec
(bad)
adc
inc
cmp
mov
rcr
popa
sbb
in
lods
std
js
dec
add
ret
int3
gs
call
add
arpl
das
sub
sub
sbb
clc
test
dec
cmp
popa
inc
out
int3
cmp
pcmpeqb
mov
loopne
out
lock
fs
sahf
xchg
test
in
fistp
ins
and
xchg
je
cmp
jno
pop
rcr
stos
mov
retf
mov
mov
xchg
js
js
test
mov
sub
jge
pop
lahf
push
(bad)
(bad)
popf
dec
xchg
sub
sti
sbb
dec
push
fisub
sbb
jmp
inc
imul
xchg
push
pusha
jne
mov
sbb
and
sbb
sbb
not
mov
into
mov
push
(bad)
icebp
repnz
and
sbb
stc
call
cmc
enter
or
pop
inc
sahf
jle
mov
jb
loope
xor
dec
push
fcomip
jae
pop
hlt
push
inc
sbb
cmp
cmp
mov
call
fwait
jmp
sbb
mov
retf
test
sar
and
mov
hlt
sti
test
rcr
loope
rsqrtps
xchg
cli
das
xchg
inc
popa
imul
xor
mov
pop
push
inc
dec
shr
test
sar
xlat
xchg
shr
btc
arpl
jnp
(bad)
mov
pop
and
sbb
cld
adc
mov
push
pushf
iret
retf
adc
jl
sbb
dec
inc
fldcw
cdq
sub
push
mov
outs
mov
int3
cmp
(bad)
es
addr16
cmp
mov
fiadd
xchg
mov
(bad)
pop
mov
sub
jne
adc
mov
mov
inc
int3
fmul
inc
ret
fucom
or
xlat
lock
nop
out
jmp
dec
pop
inc
nop
psubw
outs
aad
in
inc
sub
mov
outs
push
push
lea
loope
sub
adc
lods
dec
mov
sahf
xor
stos
xor
imul
daa
test
sbb
jno
in
add
xlat
or
scas
ficom
pop
ss
jge
push
add
sbb
shr
xchg
lock
jno
aas
mov
shl
(bad)
sub
xchg
dec
cmp
xlat
mov
and
shl
push
mov
push
pop
mov
and
int
lods
push
test
mov
outs
push
push
int
mov
pop
sbb
loope
jnp
(bad)
and
inc
stos
jge
in
adc
imul
xor
push
add
jne
cwde
pop
add
jp
push
jns
mov
gs
jno
sub
aaa
jbe
xor
(bad)
aaa
cmps
and
pop
ja
mov
mov
stc
adc
sub
lods
or
sbb
aad
dec
mov
lock
mov
rcr
mov
push
mov
inc
fiadd
cmps
sbb
xor
lea
rcl
pop
lahf
xchg
cld
frstor
out
push
or
cmps
dec
lea
push
and
add
test
xchg
jp
cdq
rcr
ret
push
in
shl
aas
pop
stos
pop
hlt
fcmovnbe
mov
(bad)
xchg
(bad)
sahf
jg
ror
mov
std
push
adc
test
scas
add
(bad)
mov
jmp
cwde
xor
pop
jmp
daa
jle
(bad)
ins
fwait
and
test
mov
dec
ret
in
aad
test
xchg
je
(bad)
stc
jne
mov
in
jne
mov
xor
sbb
and
test
adc
fisubr
or
or
pop
fmulp
push
fstp
rol
push
cs
jg
cmp
sbb
aaa
(bad)
cmp
inc
(bad)
out
sbb
test
mov
xchg
retf
icebp
pop
out
fmul
mov
call
inc
xor
pop
inc
jg
cmp
adc
fcmovu
sbb
mov
jp
pop
sbb
xor
ds
pop
sbb
xchg
sbb
not
jecxz
cs
nop
test
popa
mov
into
lea
push
test
sbb
xor
pop
and
add
push
sbb
push
inc
push
jmp
xchg
inc
mov
jns
or
retf
hlt
hlt
push
adc
leave
push
ja
cmp
xchg
jge
add
mov
dec
out
imul
fbld
repz
scas
rcl
sub
mov
arpl
out
sub
and
sbb
inc
pop
add
inc
int
push
jmp
push
jge
ret
aas
mov
clc
cdq
push
and
mov
xchg
xchg
xor
adc
and
jne
arpl
inc
push
test
leave
mov
ss
xchg
stos
mov
or
pop
cli
mov
pop
xchg
jno
mov
push
pop
xchg
pop
aam
lea
inc
xor
cmp
popf
jmp
repnz
psubusb
inc
not
jp
mov
std
and
pop
fstp
stos
(bad)
pop
ja
popf
sub
imul
out
pop
hlt
scas
push
(bad)
and
mov
jl
test
fadd
or
in
movs
push
fs
rcl
popa
mov
imul
xor
sar
cmp
pop
lds
outs
inc
jle
or
retf
out
jge
xchg
ret
mov
out
xchg
xor
sahf
(bad)
mov
mov
pop
add
jno
mov
push
stos
add
adc
push
dec
pop
movs
sub
retf
adc
jne
jae
mov
jae
js
mov
xor
pop
stos
gs
mov
sub
xchg
cmp
popf
sub
cmp
sbb
jne
hlt
rcl
loope
and
jne
pop
or
add
cmp
or
cmc
mov
cld
shl
rcl
retf
arpl
fld
dec
rcr
rep
push
in
iret
dec
movs
sahf
or
adc
sti
pop
inc
mov
in
cmp
out
or
mov
idiv
mov
and
jb
adc
mul
dec
cmps
aaa
ins
xchg
add
pusha
sbb
(bad)
sub
mov
in
cmc
jp
sbb
and
or
xor
push
std
adc
les
adc
(bad)
pop
fist
push
enter
sti
sub
sahf
jb
loop
mov
mov
sbb
xchg
(bad)
ja
aad
add
inc
test
aam
rol
mov
pop
mov
push
jmp
jmp
jb
sbb
mov
xor
addr16
pushf
nop
movs
outs
addr16
jo
repz
adc
mov
sub
mov
adc
cmp
loopne
aaa
cmp
jmp
jg
icebp
not
add
rcl
(bad)
mov
not
jb
ins
mov
dec
(bad)
pop
pop
pushf
sub
test
jb
adc
push
adc
dec
retf
jnp
and
ret
mov
cmp
mov
scas
push
xor
lahf
add
mov
mov
gs
imul
add
cli
jnp
pop
inc
retf
sar
add
lock
test
mov
ret
cs
jmp
(bad)
repz
push
fbld
jl
cld
das
sub
push
daa
push
aaa
or
push
fisttp
test
mov
sbb
mov
cmp
push
cmp
xchg
jae
xor
bound
mov
adc
stos
movs
cld
lods
xor
sbb
out
outs
xor
out
(bad)
pop
(bad)
dec
xchg
sbb
xchg
int
ret
std
adc
test
addr16
idiv
lahf
fidivr
rol
addr16
and
jl
mov
xchg
dec
xchg
push
icebp
iret
adc
jl
sbb
jge
fwait
(bad)
fneni(8087
mov
test
or
cli
enter
mov
in
in
(bad)
test
dec
pop
gs
ror
sahf
mov
call
sub
sub
push
in
sub
sahf
rol
test
sbb
lds
jnp
lods
dec
sbb
jne
and
add
mov
stos
cli
jl
es
stos
push
cs
dec
dec
inc
sbb
sti
loopne
mov
and
fstp
stos
popa
dec
rcr
mov
adc
loope
pop
(bad)
fsub
push
pop
mov
pop
cwde
mov
adc
(bad)
dec
out
data16
pop
xchg
pop
add
inc
jmp
call
cdq
ret
dec
lods
sub
fs
in
cmp
dec
nop
arpl
jo
das
xor
cdq
dec
sbb
in
dec
cmp
ret
aas
mov
shl
add
test
test
jg
loope
icebp
es
shl
(bad)
and
mov
cmp
xchg
lods
sbb
loopne
aaa
xchg
mov
inc
or
sub
sbb
dec
and
jbe
jmp
or
sbb
movs
add
jp
fcmovnbe
mov
push
xchg
aad
push
out
js
mov
jecxz
test
pushw
mov
dec
ror
or
sbb
push
sbb
adc
ficomp
pop
dec
mov
ins
inc
add
push
out
jnp
popf
mov
cmc
and
int
sbb
cmp
daa
inc
mov
adc
or
idiv
jns
or
imul
mov
adc
pop
and
xor
aas
(bad)
imul
hlt
std
pop
sub
jge
stos
test
inc
xchg
cmp
or
pop
lock
ins
mov
dec
into
mov
cmp
in
data16
fst
push
pop
es
lea
fisub
cld
mov
xor
mov
loop
inc
clc
sub
data16
push
imul
jmp
sti
pop
(bad)
push
arpl
or
ficomp
cmp
mov
jp
sub
and
mov
cli
dec
jb
jmp
push
or
jmp
add
cmp
xor
hlt
ret
jl
adc
jle
jecxz
repnz
loope
out
icebp
xor
enter
sub
mov
ror
xor
add
pop
enter
cdq
sbb
loop
cmc
and
and
test
pop
scas
lods
mov
mov
call
pop
out
mov
jmp
push
cli
imul
div
mov
bound
cld
lahf
add
mov
cmc
pop
mov
(bad)
fisub
retf
push
in
lds
imul
mov
ja
sub
leave
and
xor
lods
shl
push
inc
or
dec
sub
gs
scas
fisttp
pop
inc
inc
add
out
mov
(bad)
mov
add
mov
add
sbb
cld
dec
cmp
fs
push
push
out
gs
and
cmc
dec
fldcw
jno
sahf
(bad)
mov
inc
retf
and
push
jno
popa
dec
adc
in
xor
mov
ret
call
jmp
mov
gs
movs
xor
(bad)
leave
dec
dec
lods
ret
sub
adc
jbe
std
dec
xor
dec
mov
sbb
(bad)
rcl
fldenv
pop
xchg
sub
ja
jb
(bad)
pop
stos
sbb
mov
pop
movs
and
sbb
ja
and
add
cli
out
int
jge
rcl
add
mov
or
cmp
in
cmps
repnz
gs
sti
mov
inc
xor
xchg
icebp
mov
(bad)
push
in
sbb
(bad)
in
arpl
mov
jmp
sub
jp
pushf
cdq
mov
mov
nop
test
test
enter
bt
mov
stc
inc
cmp
out
shl
sub
test
push
mov
fsubr
pusha
aam
pop
mov
jmp
sbb
xchg
dec
jecxz
jp
repnz
push
dec
fcom
ja
inc
ins
jnp
rcl
stos
add
xor
push
aaa
and
unpcklps
xor
adc
mov
jo
xor
xor
mul
add
aaa
outs
fisubr
sub
cdq
or
out
cmc
xor
pop
or
and
or
test
xchg
jae
push
mov
sbb
mov
jns
cli
mov
xchg
jle
push
add
xchg
aas
add
add
ror
ret
int
fdivr
out
or
xchg
jmp
imul
movs
sbb
fimul
mov
pop
ror
pop
cmps
push
cwde
test
dec
fldcw
adc
sub
inc
pop
mov
out
repnz
cmp
movs
dec
mov
(bad)
mov
xor
sbb
jg
dec
inc
dec
leave
lock
jecxz
add
xor
fisubr
mov
inc
(bad)
add
push
retf
leave
ror
push
test
outs
mov
jae
inc
add
adc
clc
xchg
sub
jmp
(bad)
in
push
call
loope
mov
cmc
mov
adc
push
int3
adc
inc
push
dec
lahf
imul
or
ss
cmp
mov
sub
sti
push
pop
bound
lods
addr16
sub
adc
ins
jg
or
push
xor
jl
push
xchg
or
adc
js
shr
cmc
mov
cmp
in
scas
mov
and
push
add
xor
push
sub
jbe
pop
and
(bad)
in
imul
jb
fld
jb
(bad)
ja
nop
adc
add
fbld
xchg
test
nop
jp
add
sahf
mov
xchg
sti
mov
addr16
sbb
xchg
pop
rcl
inc
mov
mov
icebp
sbb
mov
aad
jg
mov
xor
sub
mov
cmp
mov
iret
inc
(bad)
aad
stos
dec
fiadd
xor
and
fild
or
scas
jmp
mul
xor
and
cmps
jg
scas
inc
fldcw
sub
leave
xchg
sar
add
xor
sub
scas
sub
dec
fs
retf
dec
jg
jmp
cmps
jnp
mov
in
leave
lock
jmp
mov
xchg
mov
ins
sub
js
push
dec
stos
mov
xchg
bound
fcmovnbe
push
xor
scas
sub
push
inc
mov
cdq
rcl
jae
imul
call
xor
sbb
adc
inc
hlt
iret
add
add
xchg
xchg
cmp
jb
push
retf
mov
sub
fwait
mov
fwait
mov
xchg
dec
fdivr
pop
lea
cmp
repnz
(bad)
mov
loop
inc
push
push
or
and
xchg
ret
in
test
jmp
xchg
mov
mov
lods
mov
jmp
mov
or
adc
pop
lock
jne
stc
mov
sar
cld
(bad)
push
mov
add
and
fstp
enter
repz
mov
dec
xor
push
fucomp
mov
(bad)
(bad)
mul
scas
faddp
mov
and
sub
sbb
in
(bad)
outs
xor
out
sahf
cmp
push
mov
pop
jo
or
jb
jmp
sbb
push
fild
dec
push
jecxz
out
mov
fucomip
scas
cmp
push
loope
stos
cwde
icebp
loop
inc
and
std
iret
lds
adc
call
or
mov
mov
or
lea
sbb
fsubr
(bad)
push
loop
fs
mov
int3
aam
leave
cmp
jnp
and
pusha
xchg
sub
dec
fs
test
jecxz
in
sti
xor
mov
test
xchg
adc
pop
test
jb
sbb
cdq
test
sub
in
jmp
ins
pop
push
test
popf
cli
add
mov
jecxz
xchg
lods
jb
test
xor
sbb
sub
js
adc
iret
adc
lahf
cli
jmp
(bad)
mov
mov
mov
mov
sbb
jle
sub
pop
in
jno
mov
test
add
or
loopne
pop
pop
inc
jmp
mov
mov
out
mov
inc
cmp
mov
imul
pushf
pushf
leave
lock
loop
sub
add
jmp
int
imul
xchg
jae
pop
inc
(bad)
test
mov
mov
sbb
adc
and
fisttp
jl
push
mov
mov
inc
cmp
cmp
aam
ins
xchg
imul
jb
loop
cmps
lock
fnstenv
dec
xchg
mov
push
or
fidivr
leave
lock
cdq
sahf
mov
and
call
add
sbb
fstp
out
dec
add
mov
(bad)
in
hlt
jecxz
test
call
out
mov
test
rol
sbb
xchg
inc
pop
mov
jmp
pushf
stos
lods
dec
lods
shl
push
movs
jp
xchg
(bad)
repnz
sti
sub
std
in
scas
jle
pop
and
cli
mov
push
lds
loopne
js
mov
xchg
mov
add
xchg
cli
mov
and
mov
add
cld
jae
leave
or
and
sti
push
mov
fcmovb
dec
add
cld
jge
jb
adc
add
arpl
dec
inc
pop
int
ins
aaa
xor
cwde
(bad)
adc
pop
repnz
out
add
or
mov
mov
sub
inc
mov
inc
jmp
or
neg
or
cdq
js
xor
pop
inc
cmp
cld
movs
jo
das
mov
(bad)
stc
mov
xchg
jmp
inc
pusha
xlat
jbe
inc
(bad)
sbb
dec
popa
mov
fst
sub
pop
popa
sbb
xchg
or
ins
mov
inc
nop
int3
xchg
pop
daa
lods
ins
in
jecxz
in
call
outs
hlt
(bad)
jp
cmp
fcom
xchg
jmp
mov
mov
fist
add
push
and
inc
push
pop
push
sub
ja
jno
daa
mov
inc
(bad)
add
test
out
ss
jae
arpl
jbe
dec
ds
mov
push
bound
mov
stos
pushf
push
rol
in
jmp
out
mov
jno
mov
dec
push
jmp
loopne
outs
fscale
call
cs
pop
jmp
sub
lods
daa
adc
add
adc
or
mov
mov
dec
xor
sbb
aas
jns
push
push
dec
push
and
(bad)
sub
push
ds
mov
xchg
sub
cmp
into
push
shr
cmps
dec
jb
addps
lock
sub
(bad)
cmps
or
push
mov
rcr
jo
(bad)
fs
or
out
cmp
or
sbb
iret
int3
jge
call
jmp
in
jo
enter
mov
or
push
fidivr
push
inc
inc
jne
nop
xor
sbb
cmp
mov
aad
jl
retf
adc
imul
jbe
xchg
fadd
fsubp
das
xchg
xor
cmps
push
inc
or
mov
outs
sbb
rcl
into
push
xor
in
mov
jb
or
aaa
pop
stos
and
mov
in
bound
push
cmps
pop
push
aam
mov
stos
rcl
push
sub
fdiv
into
mov
out
cld
ss
(bad)
and
je
imul
test
adc
inc
dec
push
stos
aas
mov
inc
mov
lods
mov
sub
sub
fimul
add
neg
aad
or
and
cwde
in
xchg
aaa
stos
(bad)
stc
xor
(bad)
mov
arpl
cmp
jbe
dec
das
(bad)
mov
pop
ds
mov
dec
loope
or
and
jg
aas
enter
push
mov
movs
pop
lods
push
mov
mov
jno
fisubr
mov
inc
stc
jle
ja
mov
mov
cdq
icebp
rol
movs
imul
test
aas
mov
sub
sti
into
mov
cmp
mov
in
jns
fidivr
pop
mov
mov
jg
ins
inc
inc
add
add
and
push
hlt
jg
test
(bad)
cld
ja
xor
push
aaa
popa
mov
mov
mov
loope
and
ror
test
and
sub
jle
push
enter
(bad)
and
outs
and
cmp
cmc
rol
xor
cmp
add
add
bound
mov
mov
and
cli
mov
fcom
(bad)
jbe
ins
lahf
pop
into
sbb
ret
lock
lahf
jb
cmp
mov
fnstsw
pop
jno
add
adc
lods
(bad)
arpl
aaa
pusha
mov
mov
pop
in
sbb
and
inc
pop
mov
(bad)
mov
cmp
jmp
adc
(bad)
call
xchg
loope
and
xor
fidiv
out
and
and
sbb
pop
mov
adc
dec
mov
jno
inc
sub
mov
pop
add
inc
dec
sahf
sub
fistp
outs
jo
sbb
mov
mov
xchg
cmp
aas
adc
dec
lds
cmps
leave
lock
mov
mov
retf
repz
xchg
data16
popa
or
ffreep
sub
pop
aad
je
xor
sbb
xchg
xchg
sti
shl
inc
ss
sbb
push
xchg
or
js
sub
add
or
xor
push
ret
das
test
dec
sbb
adc
pop
jmp
mov
loope
loope
cmp
addr16
pop
xchg
jl
sbb
dec
mov
je
sub
jle
pop
ss
pop
ins
mov
ds
inc
lds
mov
xor
cmp
and
fmul
out
add
pop
sbb
adc
loope
sbb
lock
jmp
cs
jo
shl
jmp
mov
es
call
cmps
jmp
sub
or
mov
cld
out
mov
pop
icebp
scas
shl
jle
cdq
push
repz
add
cli
popf
dec
xor
inc
fiadd
push
and
in
out
lock
adc
mov
push
pop
pusha
vpsubb
(bad)
call
(bad)
fild
cmp
fld
cmp
movs
sbb
stos
sub
xor
popf
outs
ficomp
imul
daa
dec
jg
jne
push
pop
mov
movs
jl
cmp
or
ffree
sbb
sbb
dec
or
add
add
push
or
dec
int3
dec
cmps
pop
fsubr
stos
leave
mov
or
xchg
fs
mov
icebp
add
jg
xor
in
pop
adc
lods
rcl
call
and
mov
adc
xor
push
cmp
mov
jg
xchg
jg
hlt
or
aas
clc
sahf
aas
into
mov
nop
gs
cmp
jbe
call
out
(bad)
clc
inc
outs
mov
xchg
test
xlat
es
jmp
push
mov
mov
pop
dec
push
or
inc
fwait
lahf
and
xor
mov
out
mov
out
pushf
xchg
push
jno
aad
mov
add
jne
dec
lds
(bad)
jp
xchg
sub
mov
fdivr
pop
das
stc
test
dec
shr
adc
call
pop
add
sub
sbb
add
aam
(bad)
mov
push
fadd
sub
div
fsubr
fcmove
add
inc
js
call
and
sbb
sub
les
mov
jb
(bad)
aam
push
mov
inc
jns
sbb
adc
xchg
sbb
add
mov
cmc
lahf
lock
or
fidiv
mov
rcl
dec
sti
and
lock
mov
push
test
pop
dec
es
ror
pop
xchg
repnz
into
outs
pop
cmp
clc
pop
cmp
xchg
cmps
and
fs
pop
mov
lock
pop
or
dec
mov
sub
cmp
nop
xchg
xchg
dec
cmp
popf
push
and
xor
pop
pop
addr16
lods
outs
jmp
or
test
add
outs
sub
in
sar
or
inc
cmp
stos
mov
call
pop
cmp
retf
xor
adc
adc
push
push
inc
cmp
push
and
jns
nop
scas
data16
jmp
repnz
in
mov
mov
sub
adc
jmp
lods
adc
xchg
fsubr
in
xlat
cmps
outs
pop
jmp
mov
cmps
push
push
adc
popa
bound
push
mov
(bad)
iret
stos
rcl
lods
inc
icebp
mov
push
outs
xor
push
mov
xchg
es
sbb
xchg
sar
mov
jl
mov
jo
cmp
adc
loope
shr
adc
add
mov
xor
mov
push
dec
sub
arpl
jnp
adc
mov
(bad)
and
je
push
sub
pop
in
setae
gs
call
mov
repnz
mov
push
leave
push
dec
xor
out
mov
and
xchg
dec
nop
cmc
and
dec
inc
jge
out
sbb
loope
(bad)
mov
xlat
mov
out
or
ja
jmp
add
iret
(bad)
loope
movs
xor
ins
xor
(bad)
and
rcl
lods
arpl
pop
je
sbb
sbb
imul
push
and
ret
jge
fmul
inc
les
aas
fcmovb
cmp
dec
fsub
aam
mov
and
pusha
daa
ror
inc
sbb
fs
xchg
out
xchg
imul
add
shr
sbb
shl
inc
mov
jmp
mov
add
jp
push
push
xchg
push
jno
xchg
imul
(bad)
pop
stc
test
fmul
cmps
les
scas
pusha
dec
movs
xchg
adc
lock
stc
rcl
mov
pop
push
popf
ja
sub
enter
sbb
in
daa
ins
rcl
adc
push
test
je
dec
leave
dec
test
lods
imul
test
push
xor
xor
aam
icebp
add
aaa
pop
or
int
movs
dec
mov
inc
and
adc
inc
xchg
sbb
jne
adc
mov
mov
xchg
in
mov
mov
mov
(bad)
or
push
test
(bad)
dec
mov
fadd
lods
sbb
mov
lods
loopne
sbb
cdq
pop
cmp
test
sub
jo
mov
dec
xor
leave
cmp
cmp
imul
popf
dec
jl
lds
mov
xchg
inc
push
push
xor
scas
push
cwde
inc
fld
rcl
ss
jge
mov
hlt
outs
pop
xchg
mov
sub
test
cdq
xlat
jnp
add
xchg
sub
outs
dec
ret
or
xchg
xor
mov
dec
popa
jb
je
xlat
push
cmps
clc
pop
mov
(bad)
lods
mov
xor
and
ds
mov
and
mov
mov
sbb
sub
mov
js
jae
xchg
(bad)
push
cmps
fs
shl
leave
and
retf
xchg
xor
and
enter
jmp
cmp
xchg
cs
pop
jmp
adc
mov
inc
ds
jmp
repnz
nop
mov
jno
mov
xchg
lods
hlt
cmps
cmp
loopne
lods
adc
xchg
mov
xor
call
jp
sbb
cs
ret
add
push
or
(bad)
xchg
inc
es
retf
pushf
jl
mov
addr16
cmp
cmp
or
scas
mov
cwde
jne
inc
add
aad
jge
adc
cmps
idiv
push
and
iret
jae
push
mov
lock
push
pop
ds
pop
in
imul
popa
(bad)
fst
inc
sar
scas
mov
ins
aaa
shr
or
add
mov
adc
and
mov
out
nop
or
sub
ds
hlt
inc
dec
sar
je
push
mov
ins
nop
xchg
adc
mov
or
lods
rcr
pop
dec
dec
jle
jmp
jmp
scas
imul
mov
xor
cmp
retf
dec
je
sbb
(bad)
enter
test
pop
je
dec
or
jmp
cli
mov
daa
lds
(bad)
pop
popa
and
aad
mov
mov
and
or
adc
push
or
jg
add
cld
dec
mov
jne
adc
aad
jg
ror
enter
mov
rol
sahf
(bad)
or
pop
push
pop
dec
fs
loope
or
lods
jno
xchg
or
push
imul
(bad)
mov
imul
(bad)
mov
and
lock
jb
xchg
or
xchg
jno
movs
mov
mov
ret
(bad)
bnd
pop
adc
cmp
cmc
add
mov
mul
jmp
adc
sub
mov
mov
dec
push
test
out
pusha
setb
inc
push
ja
or
mov
mov
cmp
clc
in
cmp
push
jp
fsub
jno
das
in
jnp
(bad)
and
dec
mov
inc
push
dec
or
sub
sub
jecxz
fldenv
ret
jae
mov
mov
stos
loopne
mov
push
xchg
sbb
mov
stos
inc
mov
ficomp
inc
ins
das
cmp
mov
xchg
cmp
mov
fsubr
out
inc
jo
js
inc
dec
in
inc
adc
cmps
jle
jnp
clc
sbb
je
es
xor
sub
pop
(bad)
fdivr
das
or
arpl
in
shr
outs
mov
mov
cdq
cmp
(bad)
in
xchg
xor
cmp
mov
push
mov
inc
sbb
scas
jp
adc
sbb
cdq
call
cwde
outs
pop
loopne
call
out
retf
add
push
xor
or
mov
lea
jno
in
pop
add
sub
mov
adc
sbb
out
cld
pop
cmp
and
and
cwde
loopne
cld
shl
(bad)
cld
leave
and
cld
xchg
cmp
xchg
movs
loope
ins
xchg
mov
push
jge
test
pop
mov
inc
(bad)
cld
jg
pusha
push
push
rol
xchg
mov
test
push
jo
pusha
test
add
and
pop
sub
leave
popa
sar
cmp
xor
add
(bad)
call
xchg
jbe
adc
stc
jns
std
and
fbld
mov
mov
jnp
inc
mov
cmps
lods
xor
mov
lahf
jmp
jae
into
inc
hlt
or
push
xchg
lahf
and
adc
pop
pop
stos
sub
sar
(bad)
push
adc
push
mov
neg
sbb
vcvtss2si
mov
adc
dec
xor
dec
call
mov
js
pop
or
cmp
jl
inc
fadd
xchg
xchg
pop
ret
jg
inc
fsub
out
or
in
and
add
and
jmp
push
std
mov
(bad)
xchg
pop
stc
push
outs
xchg
xchg
sbb
clc
jbe
xor
popa
mov
call
rol
je
iret
sbb
inc
pop
out
xchg
cmps
pushf
out
jno
imul
mov
cmp
retf
lds
leave
jbe
xchg
or
loop
mov
add
xchg
dec
fdivp
and
lods
scas
dec
lods
push
shr
push
sub
cmp
cmp
int3
lds
out
sub
(bad)
lea
jmp
sahf
or
pop
jo
pop
(bad)
mov
xor
je
ret
jl
fnsave
push
jl
jns
xor
cvtdq2ps
mov
shr
sbb
(bad)
pop
fsub
and
dec
xor
or
ins
movs
pop
adc
jmp
cmp
push
mov
cwde
cmp
out
pop
xor
rcr
retf
loope
sub
rol
lea
push
stc
or
call
mov
push
setg
repz
stc
xchg
fsub
xor
mov
xchg
fwait
sbb
jne
movs
mov
pop
dec
and
shl
movs
and
movs
mov
jg
mov
fwait
ds
cmp
sbb
mov
dec
mov
xor
out
bound
sub
cdq
jmp
mov
adc
inc
xchg
or
dec
loopne
(bad)
fcomp
inc
xchg
dec
sahf
cmp
and
cwde
mov
ror
stos
loope
adc
out
push
pusha
sub
iret
sub
inc
dec
jmp
call
pop
imul
imul
fdivr
(bad)
ficom
add
jae
mov
ins
clc
lock
add
xchg
gs
xchg
loop
cmp
sub
jns
dec
ror
shl
add
and
fnstcw
inc
aam
retf
lods
pop
pop
adc
mov
sub
arpl
inc
sub
data16
(bad)
jg
sub
push
dec
or
cmp
mov
out
mov
std
mov
xchg
xor
adc
push
xor
jmp
xor
sti
std
sub
mov
call
fstp
add
mov
add
fld
int3
mov
fimul
popf
xor
dec
scas
data16
sbb
dec
(bad)
je
out
pop
dec
js
stos
dec
inc
inc
xchg
push
mov
sub
jo
cli
push
ja
imul
jnp
fwait
imul
jae
es
xchg
sti
loopne
pop
(bad)
cmp
pop
cmp
sbb
outs
scas
stc
test
add
cmp
cwde
repz
sub
jmp
or
pop
rcl
repz
xchg
ins
xor
push
cmp
stos
fst
stc
clc
and
jecxz
xor
cmp
test
pop
inc
leave
push
sbb
adc
sbb
ss
push
test
jp
mov
movs
test
xchg
pop
out
or
xchg
out
add
xor
cmps
lock
inc
add
xchg
das
sub
cmps
sub
pushf
ss
sbb
dec
aaa
jp
test
adc
push
xchg
cmps
jbe
pop
adc
dec
imul
fwait
imul
push
in
mov
dec
pop
pop
lds
(bad)
std
out
adc
clc
jge
cmp
inc
sub
or
xchg
jge
popf
out
and
add
xor
scas
adc
adc
in
push
lods
jl
inc
shr
mov
aam
mov
mov
sbb
movs
in
pusha
sbb
mul
out
push
or
xchg
sti
in
jmp
leave
test
push
ins
add
mov
lea
push
jnp
ins
add
mov
cmps
jmp
xchg
xor
push
cwde
xchg
jae
jmp
dec
adc
aas
jno
xor
jno
lock
(bad)
xor
pop
das
call
mov
and
stos
sub
cld
sbb
shr
mov
repz
cmp
aas
sar
das
popa
in
xchg
pop
imul
cmp
cwde
jmp
fcom
push
loop
es
aas
and
push
sub
mov
sar
std
sti
mov
pop
leave
inc
xchg
xchg
push
and
sub
cmp
push
test
jl
in
call
test
sub
jmp
push
mov
mov
arpl
sub
and
cmp
shr
jg
pop
mov
outs
mov
lods
jb
inc
and
sar
bnd
stos
xor
ja
mov
in
xor
imul
mov
scas
pop
mov
or
ror
sar
sub
shl
lea
out
sbb
adc
dec
rcr
sti
adc
(bad)
fmul
aam
retf
(bad)
push
mov
lods
fisttp
das
ficom
jmp
xchg
cld
and
push
(bad)
sti
sahf
cmp
and
push
inc
and
jae
pop
repnz
jge
adc
sbb
mov
int
lock
sbb
retf
adc
xchg
in
xchg
ret
push
xor
xor
aam
fsubp
jmp
fldcw
pusha
mov
add
mov
xchg
pop
push
movs
push
clc
and
jbe
jnp
xor
jle
aad
cdq
xlat
lock
lods
xor
fcom
adc
lods
ins
mov
adc
and
popf
js
gs
out
ret
fadd
cmp
push
int
sbb
ror
stc
(bad)
fstp
push
ins
cmp
or
cmp
pop
sbb
cmp
cmp
adc
and
in
dec
arpl
push
and
cmp
xor
shr
cmp
movs
mov
sbb
pop
and
xor
sbb
mov
cs
cmp
pop
pop
xor
jbe
aad
xlat
icebp
sbb
icebp
xor
xlat
push
adc
sar
add
ret
imul
sub
sbb
and
jns
jae
xor
or
aad
jge
sbb
add
jle
cmps
sub
jmp
or
ds
jl
adc
adc
cmp
stos
mov
pop
add
add
jmp
lahf
jae
popf
rcr
(bad)
xlat
int3
xchg
int3
test
cwde
inc
xor
xchg
outs
adc
and
pushf
cmp
or
call
je
push
xor
mov
cmp
mov
or
shl
nop
jge
mov
scas
test
pop
mov
ss
scas
pop
shr
mov
cmp
jmp
int
(bad)
pop
jnp
jecxz
es
add
push
pop
pop
(bad)
int3
push
popf
push
jge
(bad)
out
loope
add
test
cmp
mov
pushf
in
repz
xor
fisttp
(bad)
jmp
jmp
lock
pushf
shr
fcom
enter
add
out
push
adc
push
fmul
scas
mov
test
in
popf
imul
loopne
or
cdq
fistp
out
icebp
and
out
jmp
cld
fld
mov
mov
mov
js
in
lahf
xchg
cmps
nop
shl
aaa
popf
pushf
sub
int
pop
mov
ins
push
leave
jbe
cdq
mov
out
outs
mov
cmp
ret
fstp
jbe
stos
dec
ds
out
cmp
shl
jp
mov
out
movs
sbb
jge
sar
and
ins
sti
add
sbb
call
cmp
in
mov
out
cli
scas
push
rcl
(bad)
(bad)
mov
mov
mov
shl
fmul
mov
in
and
ss
adc
(bad)
xor
cmp
dec
or
fist
outs
xchg
pop
or
js
xor
push
pop
or
ins
outs
xchg
dec
adc
mov
pop
sub
std
add
inc
mov
pop
xor
stos
stos
xchg
and
sub
xor
(bad)
cmp
mov
scas
mov
pop
dec
push
push
sbb
mov
and
les
leave
lds
sti
xchg
lds
and
push
xlat
fwait
cmp
movs
ja
mov
mov
cmp
jmp
push
outs
rcl
pop
dec
fbld
arpl
mov
or
mov
loopne
cmp
xchg
arpl
ins
iret
arpl
ja
xchg
jl
in
test
test
pop
mov
xor
aam
cmp
outs
jnp
stc
retf
loope
push
cmp
mov
or
dec
mov
push
ds
adc
jp
cmps
xchg
add
and
out
xlat
inc
add
out
mov
push
dec
pop
lods
or
ins
nop
sbb
or
mov
add
add
cmp
jmp
(bad)
xchg
push
push
out
xchg
ds
and
mov
adc
push
pop
hlt
and
leave
cmps
shl
jl
cmp
mov
push
(bad)
out
jmp
movs
in
retf
(bad)
pop
data16
bound
(bad)
loop
xor
int3
ret
aam
xchg
jb
clc
cdq
pop
rcr
mov
in
loopne
pop
cmps
imul
lea
pop
sub
jle
adc
stos
cmp
jae
stos
fist
add
inc
cmc
fiadd
aaa
repz
mov
cli
or
jmp
or
cli
inc
dec
stos
iret
fldenv
jmp
pop
je
into
push
sbb
dec
je
sbb
mov
xor
in
test
jmp
xor
mov
xchg
cs
pop
scas
rcl
aad
subps
jle
gs
outs
mov
dec
pop
fs
push
dec
ins
push
stos
mov
call
pop
mov
lods
mov
mov
jge
ja
xor
inc
test
dec
add
pop
adc
nop
out
cmp
mov
mov
ins
jp
cmps
jmp
push
outs
(bad)
lock
push
lods
fisub
aas
(bad)
xchg
fs
outs
(bad)
jnp
aaa
std
or
scas
xchg
std
mov
sub
in
pop
icebp
dec
cdq
fimul
int3
movs
outs
pop
test
ss
lahf
mov
pop
pop
(bad)
inc
movs
push
xor
das
pop
test
jmp
test
ins
push
mov
sbb
xchg
inc
ins
jno
lods
hlt
pop
clc
(bad)
fdiv
sub
scas
or
lahf
out
dec
out
ins
xchg
sub
adc
cwde
sti
loope
rcl
jnp
in
mov
outs
fidiv
dec
mov
mov
ror
iret
hlt
in
push
mov
push
loopne
xchg
sar
out
add
out
test
mov
enter
adc
sub
ins
xchg
inc
movs
cli
call
outs
mov
mov
aad
rcr
outs
lods
(bad)
mov
cmc
jecxz
pop
out
je
sar
xchg
sbb
inc
sbb
fs
dec
cmp
ins
cmps
jmp
jb
test
dec
call
and
fdivr
mov
and
scas
movs
cwde
test
call
arpl
or
push
ror
mov
pop
xchg
jge
mov
loop
push
pop
jmp
aaa
iret
arpl
ins
xchg
fild
movs
sbb
outs
clc
clc
inc
int3
adc
jae
aam
mov
mov
lods
jmp
inc
cmps
add
xchg
add
cld
jbe
adc
mov
imul
outs
mov
add
cmps
popa
lahf
mov
cmp
xor
sar
test
mov
mov
mul
mov
addr16
movs
aad
xchg
mov
imul
xor
jmp
lds
mov
in
xchg
jo
cmp
mov
mov
addr16
add
jbe
pop
data16
cmp
mov
test
pop
sbb
test
sbb
push
inc
call
mov
jne
hlt
jg
inc
int3
jnp
jmp
into
push
(bad)
enter
xchg
fiadd
dec
pop
cmp
lods
stc
or
fwait
xchg
and
push
and
cmp
inc
jge
push
mov
xchg
lods
cmc
add
neg
aaa
sbb
fistp
rol
inc
ror
dec
leave
icebp
rcl
dec
cmp
jne
push
or
mov
pop
int3
je
lods
dec
jne
test
mov
push
lds
jbe
shr
(bad)
jnp
cmps
inc
outs
cmp
gs
add
add
int
out
lahf
loopne
jae
das
xlat
pop
and
dec
test
call
das
call
stc
add
mov
cmp
lahf
and
push
jecxz
addr16
popf
movs
mov
mov
fldenv
pop
outs
xchg
sub
pop
mov
pop
ss
mov
bound
fiadd
jae
enter
xor
xor
jae
imul
push
ins
(bad)
inc
je
mov
(bad)
ins
sbb
or
pop
or
stos
jae
inc
sub
rcr
dec
push
jecxz
cmps
jmp
stc
pop
adc
not
inc
and
leave
sub
sbb
ret
mov
cmp
push
xor
sub
cmps
loop
push
push
push
mov
xchg
call
xchg
jmp
addr16
jb
adc
ficom
and
(bad)
loop
jmp
sub
stc
pop
fsub
lods
std
call
das
or
jl
cmp
ds
push
xchg
sbb
movs
dec
rol
jns
cdq
lods
jb
xor
jo
cmp
sub
mov
push
js
jge
pop
dec
rcl
sub
pop
fidivr
int3
inc
and
int
adc
pop
mov
mov
gs
fcmovnb
lods
and
mov
xor
out
sub
cmps
leave
shl
rcl
loope
aam
dec
ret
inc
jo
out
lahf
cmc
les
mov
iret
repnz
pushf
cli
into
xchg
fs
pop
jae
xor
push
movs
and
jns
push
cmp
jne
lods
and
ss
leave
xchg
pop
pop
push
(bad)
push
jmp
jo
mov
fcomp
push
pop
pop
jmp
outs
mov
mov
cwde
mov
rol
sbb
loopne
clc
add
mov
xchg
repnz
cdq
mov
(bad)
sbb
push
fldenv
mov
pop
xchg
stos
shl
ror
rcr
inc
add
mov
xchg
repz
pop
adc
mov
repnz
pop
xchg
fsub
jmp
xlat
adc
cmp
dec
push
and
into
mov
loop
xor
pop
aam
mov
adc
xor
dec
jo
repz
pop
mov
or
scas
jmp
cmc
dec
jb
push
adc
inc
xor
aam
mov
xlat
jno
xchg
lock
mov
(bad)
push
jmp
jl
mov
ds
nop
inc
stos
pushf
test
in
inc
cmp
popf
hlt
dec
in
or
xchg
push
popa
mov
jne
mov
addr16
jmp
js
aam
iret
jmp
(bad)
bound
or
inc
das
imul
mov
push
cmp
std
ret
das
cmps
mov
mov
sub
(bad)
out
fisub
lds
and
inc
data16
and
sub
jbe
and
outs
adc
in
adc
pusha
mov
xor
mov
adc
mov
ds
or
sbb
xlat
xchg
ret
in
mov
das
fstp
xchg
jg
(bad)
push
jbe
aad
adc
mov
mov
mov
sub
sti
pop
inc
retf
dec
push
sub
ret
fstp
jae
inc
xor
xlat
hlt
jg
das
ins
inc
mov
jge
xchg
cmps
sar
test
int3
pop
enter
dec
js
add
fistp
call
or
push
rcr
push
test
repz
int3
pusha
xchg
(bad)
xor
mov
or
test
mov
stc
jae
iret
mov
mov
cmp
xchg
cmp
xchg
xchg
popa
sahf
js
push
mov
add
loope
xor
mov
adc
call
inc
fcom
pop
popf
mov
jl
and
cmp
or
aaa
push
push
ins
cdq
push
aaa
jns
imul
mov
cmps
sbb
jp
pop
pop
sub
push
js
or
dec
stos
ins
fcomp
dec
mov
and
hlt
xor
lahf
lods
jg
lods
jmp
(bad)
(bad)
xchg
pushf
pop
enter
cdq
jnp
call
cmps
cmc
adc
cli
rol
popa
sti
add
cmp
in
jmp
ins
addr16
add
(bad)
pusha
mov
cmc
xor
add
xchg
push
jns
push
jb
inc
jmp
dec
stos
(bad)
aad
add
pop
popf
movs
sub
add
test
pop
xchg
or
push
mov
mov
push
iret
mov
cmp
fadd
pop
(bad)
pop
movs
out
sbb
sar
push
adc
inc
in
fldenv
mov
xchg
pop
imul
in
jmp
rcr
lods
inc
lock
xchg
xchg
out
xor
sahf
inc
retf
and
bound
(bad)
hlt
pop
mov
pushf
loope
shl
scas
int
push
sbb
imul
iret
inc
add
clc
dec
mov
les
inc
add
mov
fdiv
inc
pop
jle
cwde
ds
repz
inc
mov
mul
sub
aad
sahf
pushw
fild
push
mov
sub
sahf
cli
int3
scas
xor
outs
icebp
pop
adc
icebp
outs
(bad)
daa
jo
inc
enter
mov
sahf
or
or
jbe
sub
mov
or
fbld
add
sub
pushf
dec
idiv
gs
mov
or
cld
idiv
icebp
adc
js
outs
daa
loop
nop
sbb
shl
outs
mov
fnstsw
mov
fwait
add
retfw
rol
and
push
mov
clc
ss
daa
jg
add
imul
in
cld
add
neg
xchg
imul
bound
dec
or
rcr
push
fcmovne
dec
adc
mov
test
mov
xchg
mov
jmp
rcl
add
out
inc
lea
mov
js
fsub
stc
lds
(bad)
jl
add
repz
inc
jo
call
add
cvttps2pi
xor
out
cmps
movs
xchg
dec
(bad)
and
iret
call
sbb
jns
imul
sbb
jecxz
mov
cmp
cdq
sar
sub
add
xchg
jnp
sbb
popa
mov
test
mov
das
inc
ret
mov
inc
std
dec
and
lock
nop
jg
fidivr
push
mov
and
cmps
movs
add
mov
sub
sbb
ins
mov
cmp
les
test
xor
mov
mov
fist
sbb
les
aad
sbb
pop
sub
mov
cmps
retf
imul
cmp
cwde
mov
(bad)
dec
sbb
jmp
push
push
je
in
and
sti
cdq
adc
jae
dec
jne
or
jge
(bad)
ins
pop
dec
imul
sub
jnp
adc
std
pusha
inc
cmp
out
dec
ficom
popw
fwait
xchg
outs
push
jne
das
lock
and
pop
ins
enter
add
pushf
dec
loop
xor
movs
enter
cmp
xchg
loopne
sbb
pop
leave
movs
push
les
lods
shl
jb
aaa
clc
repnz
inc
fmulp
jne
cmp
cs
ror
jecxz
sub
sub
cli
sar
idiv
cmp
enter
rcr
aad
jne
or
push
cs
mov
push
xlat
jp
and
call
inc
adc
pop
cwde
std
rol
pop
or
push
cld
ret
mov
pusha
js
cdq
ror
and
lahf
inc
rol
jmp
inc
dec
jmp
(bad)
enter
adc
mov
pop
in
retf
jae
pop
cmp
mov
push
xchg
add
push
hlt
sub
mul
sub
and
pop
fisubr
data16
cmp
cwde
xor
leave
xor
pop
add
movs
les
mov
aam
lea
sahf
ja
lds
fucomip
out
xlat
daa
jbe
sub
loopne
xor
pop
inc
outs
xchg
dec
add
aas
arpl
sbb
jl
int
inc
stc
in
inc
(bad)
adc
sti
jno
jmp
dec
add
add
in
das
mov
int
fs
xchg
fiadd
fidivr
xor
xor
ret
cmc
xor
dec
dec
out
sbb
cmp
(bad)
rol
fsub
mov
xor
ficom
lds
dec
dec
mov
addr16
(bad)
ins
or
popa
hlt
and
push
movs
hlt
or
push
dec
mov
cmp
sar
inc
imul
pop
fistp
fnstenv
add
in
or
aas
cdq
ss
popa
xchg
fs
imul
inc
mov
xchg
loop
or
or
fs
xor
dec
xor
inc
das
push
rol
mov
pop
popf
shr
repnz
mov
(bad)
ss
aad
aam
cmps
dec
stc
push
(bad)
xor
or
adc
lock
and
pusha
fiadd
lock
clc
shr
xchg
icebp
fidiv
lea
dec
push
aaa
std
movs
push
sub
out
inc
enter
inc
adc
adc
imul
pop
jb
iret
pop
push
and
retf
outs
out
push
jmp
mov
push
xchg
cmp
sar
stc
in
jp
fnstenv
retf
mov
rcl
addr16
and
jo
cmps
scas
fsub
and
push
icebp
xchg
inc
int
inc
xlat
popa
arpl
faddp
int
sbb
mov
jnp
dec
add
mov
push
out
loop
add
rol
cmp
sbb
add
mov
sbb
mov
cmps
(bad)
fidiv
push
add
dec
mov
and
aas
out
cmp
out
pop
cli
rcr
xchg
cdq
jb
or
adc
rcr
cmp
ds
in
shl
dec
mov
push
or
js
ins
and
add
dec
cwde
push
push
add
rol
iret
push
pop
pop
jo
out
mov
lds
add
dec
xor
nop
xchg
jnp
lea
mov
and
test
push
xchg
sbb
in
call
ret
jbe
shr
in
cmp
mov
push
test
ins
aam
stos
dec
jmp
es
ss
cmp
or
push
xchg
mov
inc
je
push
sub
xchg
and
shl
jmp
clc
imul
pop
or
sbb
or
ins
loopne
enter
or
test
push
test
sub
daa
sbb
(bad)
aam
mov
(bad)
frstor
adc
cmp
dec
sbb
ficom
jnp
mov
pop
sbb
jg
or
(bad)
jmp
popa
lahf
in
sub
cmp
or
in
shl
movs
lock
call
dec
pop
ss
push
dec
jmp
adc
adc
dec
push
push
mov
mov
sub
loopne
dec
push
aam
gs
jbe
sbb
je
and
inc
xchg
jns
test
repz
pop
cmp
cmps
and
cmc
popf
xchg
sbb
inc
or
call
ss
inc
and
cwde
scas
cdq
sti
sbb
loope
dec
sub
add
rcl
mov
inc
pop
ret
inc
sub
cwde
cmp
mov
adc
jae
jge
mov
mov
pop
xchg
push
jge
xor
or
jg
push
mov
sbb
les
mov
ja
sub
mov
rol
int3
std
mov
mov
mov
dec
push
mov
into
aad
xor
sar
mov
mov
push
xchg
aaa
xchg
test
or
lods
iret
es
xor
push
inc
mov
inc
das
and
sti
sub
fadd
mov
jae
call
mov
xchg
cmps
dec
xor
sub
les
loop
ficom
leave
enter
jb
aas
fbstp
pop
cmc
ret
sub
cwde
outs
es
stc
loopne
add
ins
jno
movs
dec
jb
push
imul
adc
or
ins
pop
shl
cli
xlat
aaa
cmp
add
add
xchg
fs
popa
add
js
mov
cld
stos
add
pop
mov
repz
sub
jmp
jae
retf
in
sbb
jns
fs
popf
adc
movs
push
and
pmaxub
std
pop
std
dec
aam
xor
(bad)
ins
xchg
or
sar
imul
leave
fild
dec
mov
cmp
push
loope
scas
(bad)
out
sub
add
daa
xchg
mov
fcomp
fs
dec
cdq
call
xor
or
sbb
sti
call
dec
cwde
add
jmp
daa
popf
out
ret
out
aas
cdq
pusha
xor
movs
outs
dec
mov
jnp
dec
xor
mov
aam
inc
jecxz
pop
outs
xchg
loop
xor
add
scas
jne
daa
or
xor
adc
jmp
xchg
fiadd
adc
mov
popa
xor
mul
mov
dec
stc
mov
hlt
mov
push
cmps
in
mov
ins
adc
push
dec
loopne
dec
lea
aam
(bad)
push
jno
or
dec
mov
push
ret
aaa
aas
int
sub
jnp
push
adc
test
(bad)
adc
cmps
in
call
adc
or
icebp
lods
xor
loopne
add
jp
jl
and
inc
jno
fidivr
mov
scas
xchg
cmp
shr
push
ret
mov
sbb
test
push
mov
int
xchg
data16
add
pop
test
or
clc
repnz
nop
in
xlat
(bad)
out
mov
push
pop
das
loopne
inc
sbb
sbb
je
lahf
hlt
sub
cs
das
cmc
pcmpgtw
call
(bad)
adc
arpl
sbb
inc
sub
add
lods
aaa
mov
ss
leave
jmp
popa
inc
fs
mov
pop
pop
dec
enter
in
rcl
push
add
test
adc
sbb
scas
mov
ins
sub
sti
retf
mov
shl
or
mov
mov
call
push
or
stc
add
add
(bad)
xchg
icebp
outs
add
cwde
pop
(bad)
push
retf
pop
or
dec
das
rcr
and
je
cmp
jl
cmp
xchg
mov
out
pop
and
in
inc
xor
pop
pusha
pop
call
xor
or
ins
mov
repz
adc
inc
mov
dec
sbb
cld
dec
cs
inc
or
cmps
jmp
stos
pop
pop
into
dec
fbld
push
loope
push
mov
cmp
sub
int3
dec
fsub
xor
or
mov
mov
and
loop
nop
add
daa
xchg
je
or
bound
je
int3
cld
pop
fsub
stos
push
mov
cmp
pop
jb
int3
dec
cdq
stc
sbb
xchg
mov
adc
jns
add
out
adc
pop
dec
jmp
cs
(bad)
call
stc
jno
in
add
out
aam
in
pushf
(bad)
jae
mov
mov
loop
xlat
cmp
push
stos
sub
pusha
fcom
sbb
add
mov
fimul
adc
and
mov
lock
adc
mov
retf
addr16
aad
test
retf
imul
and
pop
repz
jg
xor
jbe
cdq
sub
pop
sbb
inc
fsubr
dec
scas
retf
sub
mov
fcom
mov
hlt
xchg
inc
push
cmps
cmc
iret
adc
daa
mov
or
ficomp
lock
adc
stos
pop
call
dec
jp
lds
jmp
iret
push
ds
mov
inc
sbb
xchg
sub
sbb
(bad)
repnz
pop
mov
ficom
jg
div
pusha
icebp
mov
inc
das
(bad)
xor
or
dec
mov
repz
es
nop
fnstsw
in
lods
ficomp
and
or
jb
out
mov
out
or
stc
out
dec
ret
fsubr
push
outs
ror
dec
mov
mov
and
cli
xchg
jl
dec
ja
adc
aad
es
ja
pop
xchg
jbe
daa
movs
mov
dec
ins
adc
popf
and
rcl
aas
inc
dec
mov
fld
mov
cwde
sbb
mov
inc
add
xchg
adc
sahf
inc
sub
adc
loopne
xchg
les
lss
and
(bad)
clc
inc
mov
jns
jp
loopne
mov
add
mov
xor
and
add
sub
lea
retf
or
enter
sbb
sub
je
fucomp
pop
fs
lds
arpl
sbb
loope
mov
jmp
popa
repz
xchg
adc
loope
cmp
inc
xor
call
out
mov
call
pop
dec
dec
lods
arpl
mov
pop
dec
push
mov
dec
dec
jl
sbb
into
adc
outs
mov
jb
iret
sbb
sub
sub
cmp
aaa
ss
and
(bad)
inc
gs
jge
pop
test
and
xor
sbb
shl
repnz
data16
fisub
cmps
push
shufps
inc
lahf
hlt
add
push
setae
sub
out
test
cli
cmps
adc
mov
stos
ret
out
inc
jne
xor
or
mov
cmp
or
(bad)
jmp
add
mov
xchg
dec
loopne
mov
pop
xchg
jae
sub
(bad)
xor
sub
fcom
jecxz
dec
hlt
scas
test
push
adc
jbe
out
test
push
inc
jmp
add
in
fld
clc
xor
pop
fist
and
jno
xchg
cli
fiadd
adc
mov
std
stos
pusha
je
ret
xlat
push
addr16
adc
mov
movs
aaa
ret
loopne
xor
test
clc
xchg
and
xchg
and
mov
enter
xchg
sti
mov
jecxz
(bad)
xor
pop
cli
outs
rcl
ins
outs
sbb
bound
shl
inc
mov
push
ds
div
jbe
shr
fwait
out
dec
shl
sti
test
gs
repz
sub
jns
sti
lahf
mov
jg
push
scas
mov
aas
add
pop
cmp
mov
and
lods
jecxz
fisttp
push
lahf
ret
mov
leave
stos
stc
adc
mov
hlt
inc
sbb
dec
mov
xchg
sub
scas
cwde
cmp
adc
push
push
mov
mov
jnp
cld
mov
jge
sbb
pop
loopne
adc
pop
xor
mov
or
push
pop
mov
call
xchg
hlt
aas
xchg
fcomp
mov
jp
dec
mov
jmp
mov
sub
bnd
push
into
in
jae
xchg
cli
lock
in
push
in
gs
in
ret
loop
push
lea
lock
cld
packsswb
sub
lahf
fldenv
xchg
cmps
fidivr
aad
fidiv
xchg
inc
cld
inc
movs
cmp
jnp
xchg
mov
xor
jecxz
cmp
cmps
push
into
dec
add
or
jg
sub
stos
or
xor
dec
and
in
pop
mov
pop
stos
xchg
fs
scas
fs
or
adc
push
mov
mov
movs
es
movs
cmc
inc
popf
cmp
sub
cmp
xchg
inc
fnstcw
push
xchg
pop
mov
outs
dec
(bad)
(bad)
aam
or
out
fcomp
mov
jnp
into
in
ins
dec
cmp
pop
cmps
rol
cmps
inc
mov
mov
movs
cmp
(bad)
jmp
adc
test
stos
(bad)
pop
mov
cwde
ss
dec
jo
ins
inc
sbb
pop
das
lock
mov
mov
cs
xchg
in
lods
fisttp
pop
cmp
push
popa
mov
pop
inc
mov
popf
dec
popa
cmp
jbe
xchg
mov
enter
fcmovu
out
neg
dec
pop
xor
cmp
inc
push
jmp
icebp
in
lock
sbb
scas
popf
aaa
pop
fild
mov
jns
push
dec
inc
or
cmovge
inc
in
mov
(bad)
pop
imul
cld
push
mov
mov
xchg
leave
call
int
(bad)
loopne
jb
in
inc
pop
add
int3
(bad)
fiadd
and
push
sahf
mov
or
mov
mov
mov
hlt
dec
and
cli
jnp
pop
sbb
stos
push
cwde
add
mov
mov
and
out
sub
scas
fs
repnz
imul
int
stc
push
xchg
xchg
out
jbe
cmc
out
jge
dec
mov
add
imul
sbb
cmp
inc
add
stc
push
mov
jmp
mov
xchg
data16
mov
ins
jbe
xchg
mov
dec
cwde
push
or
pop
cmc
pop
test
ror
(bad)
xor
ja
cmp
mov
test
shr
shr
jecxz
outs
inc
mov
sbb
(bad)
inc
cmp
adc
cwde
sbb
pop
addr16
cmp
jmp
jmp
fld
stc
out
jecxz
adc
sbb
fnsave
push
adc
push
add
scas
pop
outs
dec
(bad)
sub
mov
retf
xchg
push
sahf
ds
outs
movs
adc
cs
add
not
adc
pop
dec
xchg
cmp
ret
xchg
or
mov
mov
xchg
popa
push
cli
sbb
cld
fldcw
sub
imul
jge
inc
or
out
lods
(bad)
cmc
ja
arpl
xchg
icebp
mov
lods
mov
xor
push
lods
sbb
or
sar
int
int
adc
lock
jb
sub
retf
out
push
outs
loopne
inc
hlt
div
sti
jae
lods
shr
and
loope
and
iret
(bad)
dec
sub
out
outs
pop
adc
sub
pop
mov
jecxz
in
cmps
int3
(bad)
call
cmc
div
sar
cmp
dec
into
cmc
call
or
ret
int3
push
nop
or
or
add
call
xor
xchg
cmp
scas
frndint
sub
pop
sub
fsubp
sbb
adc
shr
push
(bad)
and
cmp
sub
ins
ja
sbb
mov
cmp
mov
pop
in
adc
sub
rcl
jecxz
cwde
push
nop
add
dec
cmp
in
lar
loopne
xchg
inc
pop
nop
les
fst
or
loope
pop
inc
sub
stc
jbe
imul
call
sbb
cdq
loop
dec
(bad)
mov
mov
push
mov
loopne
and
xor
dec
adc
or
lock
inc
xchg
adc
mov
push
es
and
ret
data16
test
add
xchg
fldcw
loope
lock
cdq
clc
fwait
ins
sub
dec
loope
ret
or
jae
sbb
pop
shl
mov
cli
jp
test
mov
cwde
inc
mov
pop
retf
mov
rcr
(bad)
mov
stos
cmp
js
outs
sub
shl
out
pop
sbb
test
xlat
push
leave
je
clc
jmp
mov
scas
xchg
xchg
cmp
fidivr
jae
jl
fistp
ret
and
stos
fsubr
pop
jae
adc
enter
xchg
and
jmp
gs
sbb
push
outs
xchg
mov
push
jne
pop
bound
hlt
pop
fld
scas
add
or
and
cmc
adc
out
and
push
shl
or
dec
aas
jb
das
cdq
les
inc
imul
inc
dec
mov
loop
inc
sbb
or
ror
mov
enter
mov
sub
mov
add
or
mov
mov
pop
in
dec
mov
mov
adc
aam
push
stos
mov
(bad)
cmp
repnz
xchg
jp
enter
xor
sub
or
fldenv
fwait
movs
mov
sub
cmovnp
jb
jne
inc
jnp
push
mov
sbb
idiv
jle
inc
test
pop
pop
pop
out
mov
sti
xor
pop
out
(bad)
jmp
pop
ret
jae
mov
ficom
sahf
enter
push
mov
jecxz
stos
ins
xchg
or
dec
xor
scas
fistp
cmp
je
gs
cmp
and
push
jns
xchg
xchg
xchg
mov
push
fldcw
mov
push
cld
push
dec
ror
dec
gs
pop
cmp
rol
jg
cmp
mov
call
(bad)
fisttp
xchg
mov
sar
shl
sbb
mov
icebp
xor
and
enter
cmp
jle
push
(bad)
fcom
xor
xchg
cdq
pop
inc
imul
dec
add
xor
lods
lods
adc
jp
retf
sub
std
retf
push
es
and
into
sub
(bad)
rcl
rep
jg
cmp
les
dec
icebp
bound
pop
pop
outs
adc
and
jno
mov
dec
imul
sar
sbb
xchg
jno
inc
lods
cwde
cmp
push
fsubr
sbb
loop
and
push
mov
fwait
push
mov
pop
fstp
scas
mov
push
mov
mov
fisubr
or
les
imul
fwait
adc
dec
mov
lea
jl
mov
inc
jge
inc
lahf
addr16
dec
ins
mov
dec
fwait
daa
shl
sbb
mov
xchg
dec
scas
test
pusha
cmps
sbb
cld
test
push
sbb
dec
stos
xor
pop
aam
mov
jge
scas
dec
xchg
out
or
arpl
pop
xchg
jno
test
jg
jp
mov
icebp
loopne
sbb
cli
fwait
xor
lahf
sbb
dec
xchg
repz
fxch
or
(bad)
in
outs
add
lahf
cmp
xor
adc
ss
sub
lods
push
(bad)
in
stc
dec
(bad)
cmc
sti
xlat
clc
add
push
lock
out
push
and
push
pop
js
lods
stos
jmp
repnz
shr
jle
pop
push
dec
clc
sub
jle
add
dec
jo
mov
hlt
ret
out
aas
xlat
dec
xchg
movs
loopne
xor
js
dec
add
xlat
push
repz
pop
lea
jmp
lds
lods
fucomip
pop
ror
pop
xor
mov
mov
mov
push
mov
stc
dec
mov
adc
lods
lods
xchg
cld
push
xchg
int3
test
ins
adc
dec
add
shl
daa
icebp
not
sbb
pop
dec
retf
add
add
mov
xchg
test
cwde
cmp
mov
push
jle
iret
push
dec
push
pop
retf
loope
fwait
aam
lock
(bad)
cmp
and
push
xor
ror
pop
fstp
sbb
adc
dec
and
loopne
mov
imul
(bad)
jle
push
repnz
mov
mov
retf
pop
sbb
cli
inc
aas
ret
imul
jmp
enter
dec
jle
mov
(bad)
jo
bound
dec
jg
movs
or
retf
cld
inc
and
sub
jae
das
dec
or
test
(bad)
xlat
stos
mov
mov
in
pop
aaa
shl
test
sti
fpatan
or
or
(bad)
push
es
mov
test
jae
hlt
repz
and
xor
ds
je
sbb
rcr
cmps
and
pop
js
ret
pusha
repnz
clts
pushf
rcl
movzx
and
push
dec
push
ins
push
popf
test
fs
sub
mov
xchg
prefetch
jp
cmps
loop
in
aam
bound
dec
(bad)
pop
rcl
and
scas
push
cwde
mov
cwde
into
dec
add
push
xor
loop
inc
mov
aaa
cmp
in
icebp
jne
dec
ins
sbb
pop
lahf
leave
pop
out
jae
mov
imul
mov
repnz
mov
call
pop
sbb
push
push
fnstcw
inc
clc
cmps
cmp
jmp
je
jno
push
test
mov
adc
fiadd
cmp
cmp
fimul
jno
(bad)
pop
fcom
mov
cmp
pop
jl
jecxz
jns
mov
stos
pop
ins
addr16
mov
icebp
jae
lods
cdq
cmp
and
sub
xchg
sub
or
call
pop
xor
scas
inc
cmp
cmps
mov
imul
cmp
xchg
int3
jg
xchg
(bad)
inc
push
dec
dec
clc
rol
daa
mov
(bad)
fidiv
push
lods
cmps
(bad)
pop
sub
pushf
xchg
push
out
outs
test
loope
sub
ds
(bad)
sbb
pop
pop
inc
jmp
inc
cmp
jecxz
mov
getsec
mov
ret
arpl
inc
pop
(bad)
aad
xor
retf
lock
sbb
repz
repz
imul
jns
adc
outs
sub
les
sti
or
leave
or
jne
mov
loope
stc
jecxz
adc
cmp
lock
mov
int
jo
mov
adc
outs
scas
mov
add
dec
ins
mov
xor
xor
loopne
mov
loop
fsub
sub
stc
mov
xor
add
mov
fidivr
sbb
pop
jl
lods
pusha
adc
adc
mov
into
leave
sbb
test
push
sar
sub
and
mov
into
pop
cmp
loop
add
adc
shl
mov
lahf
sub
ds
ins
mov
fimul
mov
inc
ret
sbb
adc
stos
adc
cmp
cdq
push
cmc
sbb
lds
mov
js
adc
(bad)
inc
and
aas
(bad)
cmp
aas
mov
and
imul
arpl
jmp
xchg
sbb
scas
sbb
frstor
xchg
retf
dec
in
cmc
and
rol
mov
out
lock
xlat
int3
pop
retf
xlat
mov
(bad)
adc
out
movs
sbb
lock
jle
inc
inc
inc
add
lods
fnstcw
jae
(bad)
mov
xchg
cld
xor
jns
mov
pusha
cmp
in
iret
fmul
fs
in
xor
sahf
xlat
mul
or
lahf
sbb
mov
xor
jbe
stos
inc
fdivr
outs
mov
mov
mov
je
sbb
(bad)
jno
out
sbb
pushf
jg
out
cmp
and
push
es
cs
push
xor
xor
hlt
ds
call
in
pop
dec
mov
add
push
fcomp
test
mov
xchg
(bad)
and
daa
cdq
addr16
pop
les
retf
add
sub
aad
ret
fidiv
imul
into
shl
mul
inc
inc
popa
(bad)
fst
enter
jmp
push
fsubr
out
sbb
imul
imul
and
scas
data16
sub
aad
inc
xchg
sbb
cdq
push
and
adc
loopne
mov
fs
inc
mov
jmp
movs
test
(bad)
fsubr
test
outs
pop
(bad)
iret
or
pop
cli
ins
jo
stos
jno
repz
jb
push
mov
std
sbb
xchg
cmps
movs
aaa
sbb
fwait
in
mov
pop
sti
dec
push
dec
push
aaa
jnp
push
sbb
jl
xchg
or
cmc
loope
xor
fbstp
fs
fwait
dec
xor
icebp
scas
dec
lahf
in
add
out
mov
xlat
and
in
jae
sahf
mov
pop
in
mov
retf
and
rep
fdivp
mov
retf
stos
sbb
retf
jge
cmps
jg
std
push
jns
sbb
and
js
dec
clc
mov
inc
mov
je
mov
pop
add
ss
mov
in
sbb
icebp
jne
mov
pop
mov
fidivr
sbb
jg
mov
aas
push
leave
pop
leave
dec
stc
push
mov
sbb
cdq
ins
ins
imul
retf
outs
mov
mov
clc
into
not
dec
push
xor
inc
enter
test
mov
(bad)
sar
imul
cmps
es
int3
cmps
mov
push
mov
fs
inc
neg
sub
cmp
test
mov
nop
dec
jle
fdivr
sbb
dec
mov
and
ja
dec
test
mov
pop
dec
pop
sub
inc
pop
int
dec
or
js
inc
adc
gs
pop
call
jp
xchg
fist
hlt
or
fwait
jmp
cmp
popf
addr16
and
or
xchg
cwde
push
dec
mov
fsub
ss
push
pop
dec
add
or
cli
cmp
add
test
(bad)
fild
mov
dec
fadd
out
and
sahf
inc
push
sub
rcl
shl
cli
in
aam
test
add
or
call
cdq
push
push
imul
jb
adc
sar
enter
out
shr
jbe
pop
jl
cmp
add
xor
mov
in
stos
sub
sti
inc
xchg
adc
sti
sbb
xor
iret
and
jge
cmp
(bad)
pushf
or
fcom
xor
cmp
cmps
lods
pop
jo
sub
xor
pop
lock
loopne
(bad)
dec
lods
pushf
popf
add
dec
xchg
aaa
pusha
mov
loopne
sub
xchg
dec
cmp
inc
aas
push
xor
jbe
cmps
movs
xor
mov
cmp
test
ja
or
pop
fidivr
xlat
test
xchg
xor
push
ja
in
in
stos
inc
shr
xchg
mov
pusha
adc
data16
push
ss
or
ss
sbb
xor
push
(bad)
push
jae
scas
or
jl
mov
xchg
mov
jle
into
pop
lahf
les
mul
ss
inc
nop
iret
stc
pop
call
cs
int
inc
pop
xchg
mov
ins
pop
pop
cdq
cdq
push
adc
int
test
test
fs
jo
lea
sbb
ret
mov
out
mov
and
lock
rcr
retf
in
ins
je
vunpckhpd
cdq
cdq
inc
cmps
add
or
movs
mov
mov
dec
ja
mov
aaa
dec
cmp
cmp
pop
dec
sub
add
and
fiadd
(bad)
into
push
in
outs
loope
nop
or
gs
sbb
inc
in
repnz
mov
add
mov
mov
xlat
add
fbld
ds
xchg
test
shr
fst
jg
push
(bad)
and
xchg
push
pop
sti
mov
std
mov
out
std
fabs
out
dec
inc
xchg
aam
inc
or
adc
imul
sbb
xor
int
cmps
cmp
push
cdq
paddq
into
mov
(bad)
or
jmp
xchg
clc
(bad)
xor
gs
jg
mov
shr
inc
fist
or
(bad)
dec
ret
sub
sub
push
enter
pop
jl
cmp
int
mov
mov
pop
jnp
mov
daa
outs
aas
sbb
test
imul
sub
sub
adc
mov
call
lods
imul
loop
cwde
je
adc
idiv
pop
dec
(bad)
aaa
xor
loopne
ja
lock
retf
cmps
ss
cmp
jns
xchg
mov
(bad)
aaa
xchg
push
int
cdq
in
cdq
lods
fld
pop
adc
mov
mov
lock
or
jge
adc
pop
inc
pop
and
cs
ins
sbb
movs
je
arpl
cmp
xor
fidivr
ret
out
jb
in
in
or
cmp
push
aas
or
shr
ins
imul
mov
push
and
stos
loope
fst
cwde
cmp
xor
mov
in
xor
jns
adc
sub
mov
mov
inc
lds
push
adc
int
sub
and
shr
sub
dec
dec
push
and
sub
cld
cmp
in
sbb
ds
mov
aaa
neg
(bad)
call
addr16
push
rol
ret
mov
xchg
test
in
stos
int3
ins
or
mov
ffree
sti
pop
lds
push
pushf
push
xor
hlt
(bad)
adc
imul
pop
lock
pop
jp
dec
adc
test
mov
and
pop
xchg
inc
push
addr16
cs
cli
popf
fsubr
imul
(bad)
lock
mov
lds
int
push
aas
lahf
in
int
imul
xchg
pop
jmp
pop
sbb
pop
pop
dec
xor
enter
mov
jp
ja
mov
fisub
loopne
or
out
xchg
fcomp
xor
bound
inc
push
xchg
in
or
sub
and
in
adc
fwait
cmps
fstp
push
addr16
sub
jg
lods
arpl
jnp
lahf
sbb
cmp
in
xor
jno
mov
adc
inc
mov
ins
xor
int3
and
jne
push
pusha
and
mov
xchg
(bad)
and
les
fs
rol
pop
dec
adc
dec
or
mov
mov
aaa
sub
and
sub
out
cmps
loop
lahf
ret
loope
daa
mov
sub
push
repz
or
fsubr
(bad)
jae
mov
adc
loop
inc
mov
sahf
aam
mov
pushf
cmp
das
retf
imul
jae
cmp
add
or
pusha
(bad)
aad
les
jae
add
sti
loope
cmp
add
jmp
mov
aam
imul
or
dec
hlt
aad
popf
jbe
mov
mov
lea
out
cdq
in
shr
xchg
adc
cmps
jle
or
cmp
rcl
adc
inc
jb
movs
sub
enter
jmp
push
fnstcw
sub
(bad)
mov
cwde
inc
inc
cmp
pop
out
jbe
add
sahf
xlat
vcvtdq2ps
(bad)
sub
mov
out
xor
jbe
dec
sbb
sub
movs
mov
pop
ror
xor
jmp
adc
repnz
dec
clc
fsubr
push
push
jg
cmps
imul
mov
sub
jle
jp
jne
in
ins
adc
outs
out
pop
pop
sti
sbb
mov
stos
xor
mov
push
cld
jns
inc
dec
jl
pop
sbb
and
sbb
xor
push
pop
cld
jnp
mov
push
mov
inc
cdq
repz
pop
mov
xchg
xchg
xor
xor
mov
push
test
dec
mov
push
xchg
jg
mov
fmul
sub
push
or
sar
stos
ret
cdq
pop
jae
cmp
int3
aam
fisub
loopne
sahf
(bad)
cmp
dec
je
ret
je
mov
xchg
cld
xlat
or
and
push
retf
icebp
popf
in
sub
ins
fcmovnb
retf
dec
xor
sbb
jle
test
mov
stos
icebp
and
retf
fs
shl
dec
pop
mov
push
xchg
imul
or
adc
adc
push
jb
or
out
ins
inc
cmp
jb
repnz
fcmovu
pusha
adc
jb
in
inc
sub
in
or
shl
ficom
in
in
mov
ret
pop
jns
jle
push
sti
loop
popa
scas
out
mov
push
mov
in
fxch
adc
cmp
dec
mov
movs
lock
pop
bound
loope
out
ret
loop
inc
mov
stos
cmp
or
jnp
ror
xchg
enter
and
lods
rcr
mov
mov
mov
(bad)
ficom
fisubr
inc
pusha
push
xchg
push
push
popf
das
adc
mov
imul
sahf
or
out
lea
out
or
mov
mov
mov
je
mov
sbb
ins
mov
inc
adc
shl
jmp
sar
mov
cmps
es
or
fadd
pop
aad
test
mov
es
pop
(bad)
and
adc
fidivr
sub
out
mov
push
fwait
adc
mov
popf
pop
inc
dec
clc
lock
push
sar
fwait
xchg
fimul
fld
mov
cwde
retf
mov
inc
test
and
push
outs
mov
add
aas
fist
jb
(bad)
mov
imul
dec
fs
ret
stc
sub
or
stos
mov
mov
mov
mov
retf
mov
mov
popa
pop
fcmovbe
fwait
imul
mov
add
add
or
lods
retf
sbb
outs
cmp
js
gs
jge
push
cld
call
mov
(bad)
jmp
jmp
cmp
scas
mov
xchg
cmp
jb
dec
sbb
sub
mov
out
repnz
push
lahf
inc
fimul
and
inc
dec
mov
dec
(bad)
out
adc
fsubr
xlat
mov
popa
into
or
daa
mov
cmp
mov
cmp
jno
lods
or
and
mov
cmp
inc
std
and
outs
jb
adc
daa
jb
dec
stos
mov
movs
daa
int3
fsub
or
cmc
and
cmc
aad
mov
mov
sbb
adc
ficom
push
jl
and
xor
add
call
sub
jnp
(bad)
and
int3
cli
pop
loopne
shr
mov
dec
popa
addr16
dec
out
pop
ficomp
jge
popf
in
sbb
xor
fidiv
mov
sbb
enter
add
dec
movs
mov
xor
jp
adc
xchg
fwait
mov
pop
inc
mov
or
mov
das
mov
mov
je
data16
add
sbb
mov
sbb
pop
jmp
jbe
lea
clc
xchg
repnz
data16
jge
push
mov
shl
stos
daa
ss
mov
sbb
enter
aad
sbb
cli
sahf
mov
fs
push
push
xchg
lods
jmp
pop
inc
cmp
cs
add
and
mov
inc
pop
popf
dec
aaa
mov
je
lods
in
adc
sub
(bad)
pop
fwait
(bad)
xor
jnp
pop
inc
rcr
xchg
mov
cdq
fsub
stos
push
sub
aaa
jno
cmp
adc
test
inc
in
ds
and
out
(bad)
push
jmp
pop
rcl
push
imul
adc
into
retf
xor
or
add
mov
outs
add
and
push
aam
es
mov
xchg
push
rcr
push
fldcw
imul
aam
iret
cmp
punpckhdq
jno
xchg
push
jmp
and
call
loopne
hlt
pop
add
fldpi
xchg
sub
loope
cmp
push
out
sti
int3
ins
adc
jp
sbb
mov
mov
cmp
sar
es
cwde
out
outs
or
and
mov
ficomp
loopne
jbe
into
dec
arpl
xchg
adc
mov
out
pop
xor
scas
fstp
sub
pop
fs
dec
adc
xchg
retf
add
add
aam
movs
xchg
jne
jg
mov
loope
rep
dec
mov
sbb
adc
push
(bad)
je
jbe
repnz
and
jns
jge
ins
jl
sub
push
ret
sub
add
xchg
ins
xchg
cmp
mov
shl
into
ficom
pop
out
dec
jb
dec
cmp
loop
mov
or
jl
outs
scas
(bad)
jae
or
xchg
sar
cmp
dec
xor
fisubr
adc
lahf
mov
imul
pop
inc
ja
lahf
mov
cmp
clc
data16
movs
sbb
nop
xor
stos
shl
movs
dec
test
fsub
in
jb
and
ret
adc
stos
cmp
fcomp
pop
pop
xchg
out
sbb
sti
retf
jp
sub
jmp
mov
cld
jb
jo
mov
pop
sahf
xchg
jnp
out
mov
movs
sbb
adc
mov
movs
push
dec
dec
or
jo
scas
adc
and
jle
mov
mov
je
jge
mov
push
mov
stc
cs
xor
push
outs
ficom
and
hlt
daa
cs
jbe
in
pop
dec
mov
imul
pop
pushf
mov
je
or
jns
push
in
ror
sbb
lock
push
sbb
aam
sti
xor
pop
jge
in
xor
repnz
cmp
rcl
call
aam
mov
push
retf
mov
movs
loopne
and
cmp
shr
xor
xor
mov
sahf
mov
pop
sbb
dec
xor
xor
lea
cli
sub
imul
push
stos
add
or
dec
(bad)
in
add
or
adc
(bad)
loope
dec
add
std
inc
sbb
jno
cld
iret
dec
xchg
(bad)
in
fdiv
out
inc
push
dec
push
dec
call
popa
mov
shr
mov
aam
cmp
cmp
mov
cld
push
or
pop
mov
adc
jbe
ret
pop
xchg
push
add
dec
mov
jae
push
adc
sahf
mov
jmp
jle
sbb
mov
test
and
sbb
push
pop
pusha
pop
jae
rcl
or
push
or
daa
lahf
push
xlat
adc
cmps
jne
jns
adc
xchg
and
xor
shl
inc
pop
scas
fldcw
xor
sub
push
sub
sub
jp
sub
(bad)
outs
out
cs
stc
pusha
mov
adc
(bad)
rcr
jo
mov
mov
mov
sub
xchg
mov
sub
test
retf
pop
sar
(bad)
fidiv
je
shr
pop
sub
rol
cmp
add
dec
sbb
shl
arpl
test
fwait
jae
xor
popf
movs
adc
in
cli
jl
fucom
xchg
sub
xchg
pop
fild
dec
les
inc
nop
xchg
popf
xchg
into
cwde
jle
nop
out
sub
add
dec
data16
inc
imul
sub
arpl
test
or
sub
movs
sub
shl
mov
adc
pop
jb
imul
jmp
or
ins
loop
mov
(bad)
xor
xor
popa
repz
mov
cld
fnsave
push
adc
ficomp
iret
(bad)
sbb
jl
inc
jo
sub
test
stos
dec
ds
lock
in
sbb
mov
xchg
or
add
pop
int
aaa
mov
outs
push
nop
push
dec
and
lods
dec
rcl
(bad)
call
mov
add
pop
into
xrelease
sbb
xchg
into
dec
adc
fwait
add
adc
cmp
pop
shr
pop
repnz
stos
nop
pop
stos
xchg
sub
into
jb
js
jecxz
or
(bad)
aaa
jb
jp
and
jl
ins
jecxz
out
xchg
aaa
repnz
stos
hlt
or
jl
in
in
cmp
xchg
inc
int3
cmps
pop
dec
ret
stos
fist
es
stc
das
popa
pop
cmps
scas
mov
mov
idiv
xchg
lock
cmc
add
mul
mov
sbb
mov
test
cmp
xor
into
add
push
inc
pop
jge
jb
and
fs
ja
push
sub
test
sahf
cmp
push
fimul
xor
cdq
je
mov
(bad)
nop
aaa
pop
hlt
nop
jmp
dec
fwait
(bad)
leave
add
push
adc
retf
add
pop
scas
push
ret
mov
add
lods
ins
or
push
js
cmp
jge
out
jnp
movs
fsub
fistp
pop
jge
stos
fwait
pop
hlt
inc
addr16
ficom
dec
sbb
cmp
aad
ss
mov
xchg
add
push
add
rcl
clc
test
inc
aaa
dec
adc
and
xor
call
int3
call
and
imul
xchg
test
in
(bad)
call
xchg
add
aas
rcl
ja
sbb
pop
les
cmp
mov
loopne
or
inc
dec
popf
imul
cli
movs
mov
cmp
loop
mov
mov
mov
or
adc
mov
std
test
and
ret
inc
xchg
pop
lods
adc
test
leave
sbb
jl
mov
push
jle
and
add
std
ins
(bad)
shr
and
les
loopne
push
add
jbe
mov
pop
cmc
mov
push
cdq
pop
jns
mov
xchg
fmul
ret
mov
or
jmp
aaa
pop
mov
mov
push
stc
fmul
and
xchg
sub
jl
cmp
jmp
dec
ret
adc
xor
mov
push
xor
sub
push
cs
mov
popf
pop
jnp
cwde
dec
and
push
cmps
add
data16
pop
stos
(bad)
ficomp
mov
jmp
cmps
or
pusha
adc
std
fbstp
popf
cmovne
jg
add
rcl
bound
rcl
int3
mov
dec
outs
dec
scas
std
adc
mov
cld
sub
inc
xchg
mov
jnp
inc
ret
mov
es
push
xchg
push
outs
stos
lods
jnp
shl
cmps
inc
push
push
aam
pop
inc
loope
xchg
push
fist
pop
les
pop
jecxz
retf
push
adc
clc
xor
scas
cmp
mov
pop
test
mov
sub
frstor
shl
call
inc
xor
push
nop
jns
mov
(bad)
inc
out
(bad)
sub
add
call
(bad)
or
ss
fucom
lahf
or
xor
mov
dec
adc
xchg
rcl
call
push
je
xchg
cmp
jl
jo
icebp
dec
mov
sub
inc
inc
arpl
xchg
push
icebp
out
mov
xor
fwait
add
call
neg
out
(bad)
adc
retf
out
push
add
leave
das
je
mov
(bad)
dec
xor
pusha
xchg
out
adc
or
ret
pop
push
pushf
xor
mov
jg
mov
or
inc
and
pop
adc
pop
inc
popf
lds
pop
jnp
and
jo
inc
dec
call
jmp
retf
mov
test
cld
sub
jle
rol
pop
push
sub
xchg
into
push
dec
mov
mov
sbb
xlat
inc
pop
popf
sub
sbb
or
mov
jmp
add
push
ins
leave
fbld
mov
inc
sub
pushf
push
dec
mul
xor
mov
cmp
dec
adc
xchg
nop
aas
fiadd
enter
mov
lods
or
aas
ror
xchg
cmps
jo
push
sbb
sub
xchg
jne
lods
adc
pop
push
add
push
rol
sbb
(bad)
and
mov
push
jle
jmp
jmp
frstor
mov
pop
adc
lahf
es
push
cmp
cmp
mov
dec
jp
sub
mov
data16
sbb
addr16
mov
loope
cmp
cli
std
ja
lea
(bad)
add
add
retf
mov
scas
je
(bad)
cmp
enter
xchg
repz
retf
add
sar
jmp
xchg
ss
or
mov
ret
ret
retf
adc
mov
mov
xchg
or
sahf
in
(bad)
cmp
inc
mov
leave
push
or
inc
inc
sbb
xor
mov
jmp
adc
or
push
or
fild
bound
or
(bad)
xchg
hlt
xor
mov
loope
stos
mov
daa
sbb
neg
xor
dec
ret
ret
push
retf
call
push
inc
hlt
mov
adc
mov
or
mov
and
pop
and
ins
and
lock
pop
mov
pop
cmp
or
push
xchg
push
lods
jl
adc
and
mov
or
or
dec
add
push
repz
add
jnp
push
outs
sub
aaa
xchg
cmps
push
mov
pop
inc
cmp
pop
jbe
test
jmp
mov
pop
in
mov
push
jle
xchg
repz
(bad)
or
sbb
dec
jge
push
fcmovb
ds
hlt
xchg
xchg
mov
lods
pop
mov
mov
xchg
int3
adc
jecxz
sub
sbb
push
jg
dec
lock
jecxz
out
lock
inc
(bad)
cmp
mov
mov
bndstx
inc
mov
inc
pop
stos
fadd
cmp
sbb
and
pop
mov
(bad)
fistp
js
xchg
mov
mov
mov
imul
mov
push
scas
pop
imul
fs
test
mov
arpl
mov
adc
test
mov
int
push
mul
dec
nop
shl
into
jnp
adc
or
sbb
lods
sbb
das
mov
adc
and
jecxz
sbb
jns
jmp
stos
sbb
rcl
xor
add
jo
cdq
leave
loopne
sbb
mov
pushf
iret
xchg
push
or
pop
add
jno
sbb
mov
mov
loop
iret
jo
push
push
clc
sbb
hlt
and
das
lods
push
add
lods
retf
pop
lock
repnz
repnz
retf
stc
mov
into
and
call
loop
pop
loopne
jo
retf
mov
xchg
ins
cmps
lahf
cld
neg
inc
adc
addr16
es
pop
movs
jns
sub
sti
sub
push
and
xchg
mov
inc
xlat
(bad)
adc
adc
std
push
dec
movs
std
push
iret
loopne
and
inc
imul
call
test
mov
jae
fadd
jns
sub
daa
outs
mov
mov
out
inc
addr16
or
int
cmps
outs
shl
repz
push
pushf
xor
jecxz
ds
iret
add
jl
arpl
lock
fisubr
mov
push
test
stos
inc
ja
add
mov
xchg
cmp
push
enter
sahf
jb
jg
xor
fadd
push
xor
call
dec
mov
add
popf
shl
lea
xor
in
cmp
sbb
ins
xchg
sbb
jno
mov
sti
sbb
fisub
pusha
cmp
jne
pop
sub
dec
outs
xor
and
repnz
sbb
adc
ud1
inc
aam
in
and
jne
js
gs
mov
pop
rol
inc
push
dec
adc
pusha
shr
mov
mov
movs
mov
adc
call
push
sbb
jge
xchg
cwde
ror
sbb
(bad)
lock
sub
pop
cdq
mov
inc
stos
mov
lods
fidivr
mov
popa
cmp
cmp
mov
mov
pusha
mov
loopne
push
xchg
mov
dec
xchg
je
push
rcr
imul
ins
and
cmp
jp
shl
adc
shl
dec
(bad)
mov
test
inc
jmp
and
ror
add
and
loop
jo
(bad)
clc
sbb
repnz
fsubr
inc
sahf
and
cmc
sbb
imul
shl
fstp
fidivr
push
inc
jmp
and
scas
inc
push
imul
xor
ins
lock
sub
mov
shl
and
xchg
mov
pop
xor
or
fadd
scas
sar
sub
sub
outs
ja
sbb
ins
stos
cmc
mov
sahf
sbb
or
movs
jns
adc
ret
or
mov
aad
mov
rol
push
inc
add
movs
dec
inc
cmp
mov
pushf
and
sub
fcomp
pop
mov
mov
clc
and
std
pop
or
inc
(bad)
adc
fistp
inc
gs
dec
dec
xchg
lods
adc
sbb
adc
std
mov
scas
jbe
push
popa
int3
stc
sbb
das
xor
pop
fucomp
inc
loop
int3
xor
cmp
and
pop
jne
sbb
xor
dec
cmp
cmp
sbb
jge
rcl
ins
dec
mov
jecxz
aas
in
xor
or
mov
pop
fistp
sbb
retf
inc
xor
out
out
mov
pop
push
adc
mov
xor
out
mov
(bad)
sub
retf
mov
ins
pop
cmps
fadd
push
mov
stos
push
scas
repnz
dec
jae
dec
dec
jmp
add
fstp
aas
jns
jnp
add
test
xchg
rcl
xchg
out
mov
push
pop
sub
inc
mov
cld
jp
call
adc
idiv
test
sbb
clc
fwait
pop
icebp
and
ins
cmps
mov
mov
mov
jmp
add
sbb
test
or
add
or
loop
mov
mov
push
mov
into
jle
cmp
sub
aas
fcmovu
enter
push
push
mov
in
out
and
jae
add
lahf
sbb
out
mov
popf
cmp
pop
call
addr16
addr16
data16
jg
push
loopne
dec
inc
sub
mov
loopne
call
mov
add
sbb
jno
sub
push
jnp
lea
aad
out
jmp
in
xlat
jno
stos
jmp
sub
loopne
xchg
bound
cmp
cmp
or
or
imul
les
push
rcr
repnz
je
sub
mov
xchg
xor
mov
mov
push
adc
sbb
pop
in
fst
mov
add
jle
sbb
mov
cli
pop
mov
mov
push
into
cmp
dec
add
jnp
and
pop
scas
or
jns
stos
leave
addr16
rol
aad
inc
xor
out
nop
les
sti
pop
pop
pop
test
mov
inc
jbe
dec
(bad)
movs
xchg
jnp
sbb
adc
aam
ja
(bad)
pop
dec
cdq
dec
mov
movs
pop
mov
(bad)
outs
stos
dec
stos
aad
outs
pop
in
shl
jecxz
outs
jno
dec
pop
cmp
xor
mov
mov
adc
shl
pop
iret
jbe
enter
adc
push
out
cmp
rol
ins
pop
adc
fdivrp
iret
out
int
sar
out
jbe
jns
es
iret
mov
jle
push
aas
jmp
jne
sahf
out
stc
mov
pop
and
push
sahf
or
dec
pop
inc
fstp
pop
jmp
cwde
pop
ins
cmps
sub
scas
fwait
push
or
(bad)
stc
cld
fiadd
sahf
dec
ins
or
cmp
in
mov
sahf
mov
sbb
sbb
sbb
and
inc
fidivr
jmp
shr
sahf
ret
sahf
pop
in
pop
les
mov
(bad)
pop
jne
dec
test
pop
or
scas
ja
mov
or
push
push
inc
dec
push
add
stos
lock
out
loop
jl
shl
sub
in
push
mov
or
sbb
rcr
dec
sbb
and
addr16
lods
sahf
xor
push
out
neg
out
(bad)
enter
mov
into
or
dec
sbb
adc
jbe
cmp
cmp
mov
lods
lods
xor
arpl
xchg
pop
xor
push
xor
lods
sub
push
and
(bad)
cdq
pop
adc
(bad)
imul
ins
dec
ins
xchg
and
xchg
cmc
adc
push
cwde
popa
xchg
(bad)
shr
cld
jle
jmp
outs
addr16
jo
repz
popa
outs
or
popf
add
sub
push
jge
and
mov
in
shl
movs
mov
dec
popf
mov
inc
add
test
pop
push
ror
cli
imul
dec
sbb
loop
movs
jmp
mov
je
inc
cmc
xor
push
ja
jo
daa
pop
aas
sub
repnz
lds
and
sbb
mov
xlat
adc
mov
cli
dec
in
push
adc
out
sbb
cmc
mov
fmul
and
bound
lea
int
sbb
fcomp
push
cmps
sar
pushf
and
jo
loopne
and
stc
jne
push
and
rcr
xor
fwait
stc
int
push
mov
outs
retf
jo
jg
popa
ss
xchg
mov
and
ds
xor
(bad)
and
pop
jbe
sub
sbb
repz
push
loop
and
jg
loopne
loope
add
sbb
adc
add
cmp
push
sub
icebp
(bad)
jns
sahf
fistp
ret
lods
mov
sub
sub
xchg
ins
dec
jno
sbb
jo
inc
pusha
jo
lea
repz
push
mov
scas
hlt
inc
or
jge
sub
popf
jmp
mov
pop
fmul
ds
fdiv
xchg
arpl
add
in
int3
lods
sbb
sub
ins
retf
adc
inc
lock
scas
rol
xchg
push
jle
pop
lock
fmul
push
jle
mov
mov
repz
mov
pop
stos
dec
mov
(bad)
dec
and
xor
cmp
popa
dec
call
rcl
jne
fld
push
cmp
mov
jmp
mov
inc
test
pop
call
ds
inc
int3
(bad)
addr16
jno
cmps
pop
pop
loope
ret
sahf
mov
das
add
test
enter
jno
repz
adc
cs
jp
push
bound
cmp
scas
popa
mov
int3
pop
xor
mul
push
std
je
adc
dec
mov
cmps
enter
into
loopne
mov
(bad)
sahf
scas
repz
pop
std
add
jecxz
push
adc
push
or
mov
xor
pop
dec
add
and
or
pop
dec
pop
sbb
xor
or
xor
xchg
cmc
pop
jle
test
mov
sub
inc
and
mov
sub
inc
shl
push
add
daa
push
sbb
xor
and
cld
xor
xchg
fst
or
dec
mov
pop
sub
fistp
xor
jno
xor
xchg
fnstenv
icebp
fdiv
les
mov
lock
icebp
mov
pop
out
imul
jl
dec
sub
sub
icebp
cmp
loopne
mov
push
cld
ja
retf
call
mov
jg
jp
shl
add
xchg
repz
dec
in
push
jmp
and
xchg
sbb
or
(bad)
repz
fist
retf
xchg
data16
mov
ins
mov
aad
cmp
das
mov
inc
es
cld
inc
jne
and
cmp
dec
sbb
inc
jne
push
mov
pop
mov
sub
dec
xchg
aas
lock
dec
cmps
pop
mov
cli
xor
(bad)
retf
lods
push
cmps
out
inc
mov
retf
imul
lods
lods
into
addr16
mov
xchg
movs
movs
dec
pop
icebp
lods
mov
and
aaa
loop
(bad)
mov
mov
sbb
jmp
sbb
retf
jge
outs
mov
adc
push
and
mov
fdiv
adc
mov
int3
rcr
jge
inc
mov
es
sahf
call
stos
cmp
dec
xchg
jnp
ss
(bad)
jne
call
xor
sub
fdivrp
push
movs
cmp
scas
sub
adc
sbb
mov
call
data16
loope
ins
aaa
out
repz
lock
mov
xchg
pop
xchg
scas
imul
mov
xchg
jg
into
jecxz
lahf
pop
dec
pop
aas
out
popf
jge
cmp
popa
retf
mov
dec
ror
cmp
sar
cmps
cmp
pop
pop
(bad)
jge
adc
daa
xchg
ins
push
int
fcom
inc
mov
xchg
cmc
rcr
popf
or
mov
test
dec
mov
mov
dec
jns
or
jo
popf
int
mov
retf
out
or
push
xchg
retf
sbb
xor
push
jle
sub
test
xor
pop
xchg
daa
xor
jle
fild
inc
add
mov
ja
and
mov
jg
fdivr
xor
into
jmp
cmp
rol
int
in
leave
sbb
data16
inc
jb
xor
lock
sbb
cmps
(bad)
mov
sub
test
ja
enter
fldcw
test
inc
dec
fwait
iret
jo
nop
into
rcr
dec
pop
jmp
mov
fisubr
aam
xchg
mov
out
fiadd
lock
fisttp
sbb
adc
inc
pop
or
ret
ret
shl
sbb
push
xlat
pop
inc
cmp
dec
out
cmp
add
add
(bad)
mov
jo
add
xor
xchg
inc
mul
pop
daa
xchg
ja
mov
mov
popf
jbe
aaa
mov
push
add
cwde
inc
test
icebp
add
jnp
fwait
lods
enter
aas
fld1
cli
adc
jb
push
sbb
adc
and
cmps
cwde
outs
xchg
cmp
sub
leave
cmp
add
push
mov
inc
fucomip
dec
pop
cmps
retf
ins
jge
fnsave
mov
mov
clc
scas
or
xchg
jns
and
scas
or
(bad)
mov
mov
(bad)
pop
mov
xchg
xor
out
sbb
test
mov
loope
xchg
inc
sar
add
pop
push
pop
mov
pop
aad
pop
sub
xchg
and
jb
bound
loope
cmovge
sbb
sub
fdivr
jge
neg
lahf
cdq
or
mov
fimul
shl
fdiv
or
pop
out
loop
lods
aaa
sub
mov
inc
xor
sub
ins
push
mov
xor
fdivr
je
xor
dec
sub
sub
mov
cmps
ins
mov
adc
(bad)
lods
stos
jecxz
mov
cmps
(bad)
(bad)
enter
hlt
movs
test
outs
sbb
mov
cmp
sti
add
pop
mov
mov
stos
or
scas
lods
cs
mov
add
repz
movs
push
adc
push
mov
repz
sub
xor
mov
jbe
jle
jle
ds
ja
add
pop
shl
mov
xor
dec
scas
push
and
in
pop
sbb
push
adc
rcl
jbe
cmps
xchg
xor
mov
nop
dec
jecxz
fwait
jno
cmp
dec
enter
sbb
jg
sub
jmp
in
dec
push
mov
xlat
cli
xor
xor
jb
push
cmp
ret
mov
test
xchg
inc
idiv
leave
movs
xchg
mov
and
sahf
push
jg
repz
jmp
sub
xchg
inc
mov
mov
int3
and
cmps
xchg
mov
out
mov
xchg
sti
or
test
pop
daa
shl
xor
ds
mov
and
in
iret
mov
push
mov
std
jo
jne
dec
(bad)
shl
xor
ins
test
fsubr
mov
int3
sub
pop
loop
fisttp
adc
fcomp
std
ret
ret
cwde
jge
xor
adc
mov
in
into
sbb
mov
mov
sti
(bad)
ror
push
and
(bad)
loope
lea
aaa
sub
test
xchg
mov
bound
inc
dec
pop
mov
sbb
jmp
pop
mov
gs
jno
les
lods
xchg
dec
pop
pop
mov
enter
dec
cmps
bound
xchg
jp
aas
mov
hlt
mov
bound
int
(bad)
scas
inc
adc
shl
pop
xor
push
std
mov
xor
movs
adc
movs
push
std
mov
sbb
adc
xor
jle
(bad)
jp
jno
jmp
data16
fidiv
nop
jae
pop
sbb
rcl
mov
popa
scas
or
test
or
dec
inc
jp
jle
je
sub
and
div
outs
dec
cli
stos
add
cs
adc
xor
pop
dec
jl
pop
pop
xor
iret
imul
int
jae
inc
dec
clc
or
inc
and
int3
mov
dec
sbb
cmp
cwde
mov
imul
data16
pushf
mov
pop
rcl
popf
ins
push
push
out
jp
int
mov
mov
leave
sbb
pop
cmp
loope
pop
call
pusha
pop
in
push
push
and
sbb
mov
dec
in
cmp
mul
fst
hlt
push
push
jl
mov
and
jb
mov
mov
push
sub
leave
jno
lock
mov
call
sub
gs
add
push
out
xor
push
in
and
sub
lods
and
xchg
add
cmps
inc
(bad)
sbb
call
cmc
xchg
and
in
mov
xchg
pop
(bad)
in
push
sub
push
mov
push
sub
leave
lahf
cld
push
inc
add
retf
xchg
test
div
adc
int3
sub
adc
rcl
xor
pop
xor
xchg
push
inc
iret
in
mov
es
(bad)
or
sbb
mov
adc
pop
sub
inc
pop
idiv
js
call
shr
mov
es
inc
lods
retf
iret
add
and
mov
outs
cdq
push
clc
scas
pushf
jecxz
xchg
les
mov
mov
lahf
int3
xchg
shr
outs
sub
push
jne
jae
fldcw
add
xchg
sti
or
cmps
pop
cs
(bad)
and
div
pushf
cdq
xchg
mov
imul
jae
mov
add
repnz
clc
popa
add
xchg
xchg
mov
retf
in
add
clc
dec
lds
fisub
les
push
jbe
pusha
data16
cdq
in
jmp
and
sub
sub
in
jmp
icebp
jle
push
sbb
push
push
mov
sub
cmps
or
jnp
ja
adc
sbb
cmp
mov
jo
test
popa
(bad)
jle
and
pop
pop
inc
mov
cmps
ins
dec
xchg
xchg
sbb
enter
push
cmc
jle
mov
inc
cld
shr
jne
inc
sbb
cmc
sahf
push
pushw
jg
ret
cmp
shl
outs
imul
sub
or
mov
or
push
dec
xchg
or
mov
(bad)
mov
lock
and
mov
jp
mov
mov
les
sub
les
pop
push
xor
adc
mov
mov
ret
or
xchg
mov
jp
jbe
dec
pop
push
mov
xchg
js
loop
jbe
push
mov
and
inc
popf
mov
and
lds
mov
bound
mov
scas
jne
mov
out
std
icebp
mov
stc
xchg
in
mov
ds
mov
add
lods
movs
mov
jmp
cs
clts
or
dec
mov
sahf
pop
retf
js
or
push
pop
or
pop
daa
sub
test
out
enter
mov
xor
jmp
ins
outs
ds
cmps
cmp
adc
dec
and
je
lock
mov
mov
mov
jg
sar
mov
xchg
mov
xchg
jno
adc
cs
xchg
cmp
or
cld
jbe
out
lods
xor
mov
aas
xor
mov
das
mov
adc
jo
xchg
es
popa
push
leave
jbe
or
cmps
imul
fadd
loop
sbb
xor
pusha
sbb
imul
and
push
dec
add
or
xchg
sar
pop
or
jae
xchg
aaa
aam
pusha
fwait
cmp
rcr
push
adc
pop
mov
out
ja
outs
sub
pop
jge
lahf
xor
loopne
xchg
add
sbb
ss
or
mov
jecxz
fstp
jge
sbb
ja
cmp
aad
jb
retf
xor
add
cmp
call
push
out
mov
cwde
dec
pop
loopne
mov
push
or
pop
xor
mov
mov
xchg
xchg
repz
jbe
and
sub
rol
mov
sub
inc
in
ja
lock
push
stc
push
mov
push
mov
rol
adc
add
fdivr
pushf
dec
fst
push
push
ret
int
fstp
std
jmp
jmp
and
jp
loop
cwde
push
sbb
sar
adc
shl
inc
or
test
dec
ret
jge
jp
dec
icebp
jno
add
jl
mov
call
push
inc
cld
jb
dec
push
xchg
les
cmc
inc
inc
cli
movs
add
data16
xchg
mov
add
pusha
and
xchg
cmp
or
js
sub
enter
xor
dec
push
ja
std
mov
imul
mov
cmp
push
hlt
aas
push
pop
jno
bound
mov
out
mov
sar
push
mov
cs
call
pop
xchg
adc
dec
jle
ins
scas
mul
retf
cli
sbb
jl
ins
xor
mov
pop
mov
lods
rsm
xor
mov
sbb
movs
adc
retf
(bad)
dec
sbb
mov
push
je
jns
fbld
mov
xlat
jno
sub
add
sub
sub
adc
dec
push
imul
loope
sub
stc
dec
inc
and
pop
in
ds
add
mov
mov
inc
ins
cmps
das
mov
rcl
mov
mov
mov
jmp
dec
lahf
cmp
jbe
mov
mov
xor
or
imul
mov
lods
pop
(bad)
in
imul
mov
jle
stc
icebp
scas
sbb
pop
std
mov
and
jns
shl
int
fs
(bad)
loop
(bad)
push
xor
cwde
inc
das
lods
and
imul
adc
mul
gs
xor
lea
ror
pushf
mov
xor
xor
cmp
dec
xor
imul
push
xchg
aaa
(bad)
jmp
xor
rcr
and
push
dec
sub
fdiv
test
push
push
jle
xor
dec
inc
add
push
sub
xor
adc
mov
pop
or
ins
std
jno
sbb
fild
loopne
xor
in
sbb
or
fistp
gs
fcom
in
xchg
inc
js
sar
fcomp
or
push
idiv
adc
shr
xor
faddp
xchg
aad
ret
retf
xor
pop
push
mov
xchg
popa
fwait
aam
jb
shl
cmp
stos
xchg
jb
cmps
lahf
pop
int
shr
sbb
push
call
pop
xchg
aas
jmp
push
mov
push
push
mov
imul
lods
std
(bad)
lods
inc
je
shr
les
xor
adc
call
ror
push
xchg
dec
fdivr
stc
pop
repnz
mov
mov
mov
xchg
pushf
sar
xor
dec
aad
mov
jge
or
(bad)
add
and
add
dec
sub
in
or
rcr
cdq
aam
daa
int3
mov
loop
ss
cmps
int3
xchg
popa
push
test
aaa
adc
call
loope
fidivr
sub
repnz
hlt
inc
add
cwde
fdivr
push
mov
sbb
je
sahf
iret
or
aaa
mov
or
es
inc
pop
sub
jo
out
jo
enter
jmp
scas
pop
call
leave
mov
pop
leave
out
ficomp
cld
fist
add
sub
jmp
fisubr
mov
add
cmp
out
add
fs
jl
add
xor
(bad)
adc
jmp
cmps
mov
pcmpgtb
jo
pop
(bad)
call
push
cmps
sub
rcl
mov
test
loope
jmp
addr16
out
or
jl
cmps
dec
shld
pusha
(bad)
cmp
mov
inc
mov
pop
sti
push
gs
sar
mov
sahf
outs
(bad)
(bad)
in
lea
mov
inc
lea
xor
cbw
fistp
xchg
gs
movs
adc
jmp
arpl
movs
dec
push
(bad)
div
sub
cli
(bad)
xchg
scas
pop
xchg
aaa
loop
stos
mov
inc
out
or
mov
adc
lds
xchg
je
(bad)
dec
inc
mov
or
lods
in
mov
pop
imul
sub
sar
mov
(bad)
sbb
(bad)
xlat
js
fisubr
inc
dec
inc
nop
test
fstp
cmc
xchg
test
aas
push
jne
push
mov
inc
stc
std
stos
test
movs
sbb
sub
pushf
push
int
pop
pushf
ins
cmc
mov
jmp
mov
pop
mov
adc
ror
lods
dec
sub
cmps
push
sub
in
mov
xchg
jne
push
or
adc
test
sti
add
xchg
(bad)
mov
and
test
cmp
xchg
std
jmp
dec
loopne
and
lods
popa
xchg
pop
cmp
jae
fcomp
cmp
es
call
in
ret
sti
dec
pop
cmps
nop
add
dec
sbb
scas
mov
jle
setne
dec
or
pop
shl
mov
or
mov
push
lahf
mov
sbb
or
sub
lea
jo
mov
test
cmps
sub
xor
push
cmp
push
push
stc
int3
out
loope
ja
mov
cmp
jae
fs
fs
test
nop
gs
adc
bound
sbb
cmps
fdiv
(bad)
popf
pop
and
and
retf
jo
retf
push
mov
sti
(bad)
cmps
jno
and
sbb
cmps
and
jmp
leave
cmp
in
mov
fisttp
jns
mov
add
add
push
retf
sahf
mov
adc
(bad)
pop
mov
sbb
inc
in
or
out
sbb
mov
outs
movs
push
sti
shl
pushf
ret
push
cmc
jmp
clc
pop
rol
push
push
mov
xlat
test
cmp
loop
mov
mov
(bad)
fucomip
push
mov
mov
(bad)
out
pop
cdq
jns
sbb
or
stos
cmp
(bad)
test
stos
and
or
pusha
cmp
fild
jb
nop
fadd
pop
shr
xor
cwde
pop
out
xchg
daa
fsub
pop
fnsave
fisub
inc
pop
fwait
cmp
inc
push
add
(bad)
jnp
mov
dec
xchg
pop
dec
cmp
jecxz
ret
push
inc
lahf
and
mov
push
sub
mov
xor
jnp
icebp
cwde
vpunpckhwd
sbb
mov
cmps
mov
cmp
nop
stos
enter
aas
xor
cmp
inc
cwde
in
(bad)
pop
retf
nop
mov
xor
jg
mov
push
cmp
xor
out
mov
(bad)
lods
std
xor
fldcw
popf
ja
rcl
stc
inc
inc
imul
sbb
jns
cmp
imul
fist
mov
cmp
cmps
push
mov
stc
sub
xor
push
pop
inc
ja
scas
mov
inc
in
cmp
js
xor
mov
mov
aas
js
and
cli
xchg
inc
(bad)
pop
push
int3
cmps
mov
daa
inc
push
and
adc
sbb
jle
(bad)
popf
popf
rcl
rcl
(bad)
icebp
mov
aas
mov
in
popa
add
pop
dec
aaa
dec
cmps
and
push
mov
aaa
push
cmp
enter
out
cmps
(bad)
lea
mov
leave
loop
popa
(bad)
ja
push
arpl
mov
lods
sbb
adc
mov
xor
loope
std
xchg
inc
lods
lods
fimul
call
fdivr
add
mov
popf
out
jg
paddb
push
adc
in
jle
retf
das
mov
fild
push
out
adc
movs
dec
imul
pop
lahf
in
enter
xchg
mov
std
inc
inc
jecxz
xchg
sbb
push
aam
addr16
jp
inc
repnz
and
cmps
jg
cld
pop
stos
pop
mov
cmc
sbb
pop
mov
mov
aam
push
dec
xor
fiadd
fmul
out
sbb
cld
rcl
mov
dec
std
gs
aam
icebp
sub
xchg
aad
outs
test
push
and
addr16
sub
jmp
or
aad
in
dec
mov
daa
aad
dec
sub
retf
out
or
retf
inc
adc
pushf
hlt
popf
jle
push
push
leave
hlt
movs
adc
add
ds
imul
pop
aas
sub
(bad)
mov
fwait
sbb
and
shl
jmp
inc
inc
xchg
test
xchg
dec
movs
scas
jg
pop
dec
cs
ror
lods
fist
xor
jae
lds
movs
xor
out
mov
ss
(bad)
or
dec
(bad)
frstor
mov
les
ret
or
mov
sub
xor
jmp
cld
sub
daa
mov
out
test
adc
call
lds
retf
addr16
mov
adc
test
cdq
inc
int3
pusha
sti
gs
xchg
mov
fimul
push
sub
dec
push
cmp
inc
test
mov
repz
and
fwait
and
push
sub
sub
sub
sub
jb
mov
shl
mov
outs
pop
pop
ret
fsub
mov
pop
jno
loop
into
out
sub
push
aad
bound
scas
sbb
out
test
in
dec
enter
loope
fmul
fwait
aam
mov
mov
stos
mov
lods
int
or
retf
sub
mov
jb
out
call
repz
loopne
and
pushf
out
call
test
imul
mov
popa
add
in
jne
jge
xchg
sti
out
xchg
shl
in
into
push
ja
add
dec
pop
test
data16
or
outs
ins
sbb
(bad)
mov
lea
imul
js
jmp
sub
dec
pop
mov
mov
fsub
fisub
add
(bad)
repnz
inc
xchg
sbb
or
sbb
cmp
cmp
fcomip
arpl
lock
push
fimul
cmps
adc
inc
mov
add
jmp
dec
push
mov
push
jmp
cmc
les
clc
fisubr
(bad)
aas
add
sub
(bad)
fwait
or
mov
imul
mov
cmc
mov
sbb
lea
xor
add
inc
test
ins
xor
(bad)
stos
dec
or
fld
cmp
movs
jg
call
nop
cmp
leave
jmp
sbb
arpl
std
inc
ins
mov
dec
fbld
jecxz
addr16
rcr
mov
pop
ss
lds
pop
add
fmul
outs
jmp
aaa
pop
scas
push
call
in
mov
sqrtps
xchg
call
mov
movs
mov
jle
jae
(bad)
cs
jp
pop
xchg
add
jge
lock
call
test
loope
bound
popf
repz
mov
fld
xchg
xor
mov
aad
neg
iret
lds
fwait
push
(bad)
mov
pushf
lods
mov
(bad)
imul
lods
scas
pop
or
arpl
mov
out
xchg
scas
es
add
mov
int3
sub
cdq
gs
gs
jno
add
xor
push
cmps
xor
test
into
out
xchg
call
xlat
xchg
aam
movs
add
jp
inc
pop
repnz
(bad)
fs
mov
out
lahf
dec
lods
and
xor
test
das
cli
test
pop
mov
ret
add
test
pop
dec
xchg
xchg
(bad)
es
mov
and
adc
jl
(bad)
dec
loopne
mov
in
out
jo
jne
xor
xor
sbb
cdq
ja
mov
and
xchg
mov
pop
or
mov
lods
das
shl
icebp
cmps
or
or
adc
fcomp
enter
dec
rcr
popf
or
mov
lea
pop
fist
or
sbb
mov
sub
(bad)
not
rcr
mov
in
les
and
add
inc
ret
mov
push
push
cmp
in
adc
std
push
inc
fisttp
mov
jecxz
in
aam
in
movs
xor
xor
jnp
clc
jo
sub
lods
or
xor
ins
xor
add
xor
jl
aas
sub
neg
je
repz
or
iret
ret
cs
and
inc
xor
pop
jnp
push
addr16
fidiv
das
xor
cwde
loopne
adc
sbb
imul
sbb
jp
cmp
dec
pusha
fdiv
jno
(bad)
mov
jle
cdq
or
push
jmp
int
ins
sub
(bad)
adc
pop
cmp
jb
or
mov
and
mov
mov
sbb
neg
sbb
adc
loopne
xor
add
jecxz
lock
arpl
movs
mov
sbb
sbb
inc
mov
mov
cmp
cli
aas
(bad)
push
outs
mov
mov
or
int3
dec
loopne
dec
(bad)
and
retf
ins
dec
adc
es
sbb
out
stos
ins
push
cwde
mov
cmp
pop
mov
fist
jbe
jns
jecxz
sub
(bad)
mov
leave
sbb
aas
daa
cli
xchg
xlat
sbb
ins
inc
outs
shl
cmp
dec
mov
movs
int3
dec
mov
loope
mov
jo
call
inc
stc
lods
scas
mov
ja
xchg
and
jmp
aam
jne
rol
sub
add
movs
cwde
push
or
jl
aam
enter
dec
out
stc
jb
shl
mov
data16
mov
test
push
push
icebp
in
enter
test
mov
inc
sahf
jp
call
xor
xor
adc
xlat
aad
ja
mov
ins
int
(bad)
loopne
test
add
cmps
jmp
jnp
out
jbe
(bad)
retf
bnd
jmp
or
sbb
pusha
adc
fwait
pop
pusha
mov
in
call
ja
sbb
push
outs
(bad)
(bad)
icebp
push
add
mov
and
jmp
rcl
jo
mov
sahf
jge
cmps
dec
outs
cmps
mov
leave
repnz
xor
ins
scas
or
mov
add
sbb
aaa
rcl
inc
mov
mov
ds
cmp
ss
dec
out
xchg
push
enter
xchg
enter
sti
outs
sti
shr
sbb
sub
jp
xor
jmp
jmp
jecxz
dec
xchg
sbb
dec
xlat
cdq
xchg
scas
sub
fild
inc
test
jecxz
les
outs
gs
iret
ror
mov
xchg
cdq
fisubr
and
mov
stos
inc
call
push
(bad)
adc
fst
jmp
es
sub
(bad)
in
dec
div
cmp
sub
sub
addr16
iret
ror
xor
fstp
sub
test
mov
aam
shl
jecxz
call
loope
sbb
add
aaa
int
mov
out
and
add
std
sbb
iret
cmp
push
push
iret
ins
and
push
in
push
xchg
sbb
retf
push
into
ss
scas
fld
inc
je
or
fsub
sahf
fs
mov
aas
push
mov
aaa
sbb
inc
pop
ss
or
dec
ret
push
pop
fimul
hlt
pop
jnp
and
sub
fldcw
add
adc
sti
cs
jp
iret
adc
test
ss
int3
sbb
mov
mov
xor
xchg
pop
dec
mov
or
mov
addr16
cmp
cmp
dec
rol
dec
test
mov
test
sbb
stc
call
push
xor
adc
cmp
or
and
xor
xor
scas
xor
mov
or
inc
cwde
sub
push
fild
jbe
movs
cmps
cld
jp
sbb
mov
movs
xchg
push
mov
mov
lds
adc
xchg
(bad)
rcl
cwde
dec
mov
push
shl
xor
(bad)
repnz
es
call
jnp
inc
add
nop
jnp
sub
aas
or
movs
xlat
in
pop
pushf
hlt
repz
dec
retf
ins
out
add
sbb
inc
adc
xor
jne
push
fneni(8087
sub
jl
sub
jb
pop
inc
icebp
retf
mov
jecxz
ja
imul
test
add
pop
dec
mov
dec
leave
arpl
push
jecxz
lea
hlt
pop
imul
xchg
dec
or
movs
or
lods
jle
jno
retf
sub
not
mov
cld
sbb
sub
pusha
or
push
(bad)
push
out
les
imul
xchg
push
sub
jo
mov
outs
mov
pop
shl
and
jo
(bad)
cmp
rol
data16
xor
or
inc
push
cld
out
sbb
sub
(bad)
add
or
rcl
mov
cmps
sar
or
add
(bad)
cld
out
xchg
in
in
pop
push
(bad)
cld
test
lea
movs
mov
cdq
lods
xchg
pop
dec
fild
jno
mov
pop
lahf
idiv
in
mov
pop
pusha
(bad)
in
retf
adc
ret
mov
retf
outs
xor
js
dec
dec
or
jecxz
lock
xchg
cmps
cmp
in
push
movs
gs
(bad)
and
jge
fstp
cmp
push
mov
push
(bad)
rcr
scas
lods
leave
fwait
push
fs
(bad)
dec
jno
cmp
xchg
push
imul
xor
and
add
fisttp
adc
sar
aam
adc
pusha
mov
pop
sub
xchg
movntq
cmp
pop
movs
repnz
test
jnp
neg
mov
mov
fiadd
adc
mov
or
xor
mov
shr
add
scas
and
cs
fdivr
sbb
in
and
inc
and
js
in
jp
cmp
sahf
or
jmp
bound
xchg
aaa
cmp
out
(bad)
movs
and
ret
rsqrtps
mov
xchg
adc
pop
cmp
repnz
(bad)
mov
sti
cld
lock
jp
mov
jmp
lds
cmp
(bad)
cmps
and
mov
stc
arpl
fsub
add
retf
jecxz
ins
push
and
mov
mov
lahf
jecxz
sbb
cli
mov
cmp
inc
inc
aas
xchg
push
aaa
nop
mov
inc
aam
sbb
mov
sbb
pusha
into
les
test
fistp
ds
jg
fwait
in
cmps
pushf
fisub
push
mov
call
test
imul
push
xchg
aad
gs
cmp
mov
(bad)
mov
mov
inc
or
adc
push
jns
out
or
xchg
mov
dec
sbb
cmp
aad
nop
mov
xor
xor
xchg
xchg
repnz
idiv
mov
arpl
cmps
ins
jmp
dec
pop
test
jmp
ja
ins
adc
call
sti
scas
sbb
pop
xchg
push
in
in
aas
xchg
sub
push
mov
arpl
jge
jg
push
scas
sbb
shl
push
jmp
sbb
(bad)
dec
je
adc
fsave
mov
ss
movs
add
(bad)
lods
arpl
add
leave
das
and
pop
sbb
push
call
xor
pop
aad
aas
and
sbb
dec
aaa
sub
lock
lahf
sti
cmc
sahf
mov
xchg
mov
in
pushw
push
jns
inc
push
test
in
and
jecxz
pushf
sub
(bad)
jo
sbb
sbb
pop
xchg
bnd
dec
shl
in
sbb
or
clc
cmp
sbb
cwde
cmp
or
mov
ret
cld
int
push
ins
sbb
adc
and
mov
cmp
sub
loope
adc
jno
dec
je
(bad)
sbb
scas
loop
hlt
xchg
ret
mov
stos
push
repnz
fwait
dec
cli
xor
mov
ror
pop
leave
neg
mov
cmps
inc
inc
fs
or
xchg
jmp
jecxz
je
cli
sub
sti
sbb
adc
dec
inc
xor
cmp
ds
push
enter
dec
fs
out
fst
xchg
mov
test
sbb
repz
mov
gs
or
mov
fisttp
in
dec
repnz
dec
xchg
sbb
inc
cmp
inc
lods
and
inc
sbb
pop
loope
jnp
xchg
sbb
arpl
imul
mov
and
call
cmc
cmp
and
adc
nop
dec
mov
test
fmul
cmp
cmps
loop
icebp
sbb
cmp
jbe
jp
icebp
sub
push
cmp
inc
jne
cli
pop
lods
inc
fxtract
scas
mov
xor
loop
pop
dec
leave
inc
pop
popf
and
push
in
fsubr
adc
and
cmp
push
push
xchg
enter
(bad)
out
adc
sar
in
xchg
push
shr
outs
outs
leave
outs
or
imul
outs
add
adc
std
jns
je
cmp
addr16
pop
bound
dec
push
sub
idiv
icebp
jns
and
mov
das
xor
pushf
fimul
mov
out
pop
lds
dec
adc
js
xor
arpl
inc
or
mov
mov
xchg
movs
mov
(bad)
arpl
das
inc
jg
stos
push
cld
inc
mov
and
dec
xor
test
inc
cld
and
mov
add
int
(bad)
jecxz
lahf
adc
pop
dec
jae
popf
jno
lds
push
push
xchg
and
xor
das
pop
add
ja
mov
sub
jg
(bad)
cld
and
dec
mov
mov
pop
ins
push
sbb
and
aaa
pop
in
and
jl
inc
push
repz
or
fnstcw
xor
adc
add
jge
retf
bound
pop
in
inc
cmp
cmp
or
xor
xchg
mov
lahf
cdq
jnp
sti
lock
xchg
aam
jmp
jo
mov
push
sbb
dec
xchg
loop
adc
stos
rol
aas
enter
out
sahf
scas
mov
call
adc
outs
fwait
(bad)
aad
aad
into
and
stc
mov
daa
pop
or
push
(bad)
aam
pushf
pop
in
jmp
and
push
imul
dec
mov
iret
or
push
retf
xor
or
jl
pushf
pop
and
and
push
xlat
jecxz
or
push
rol
movs
shl
jl
mov
punpcklbw
xchg
lds
aaa
mov
jno
or
iret
retf
ret
jg
retf
xor
cdq
retf
iret
sbb
out
cli
mov
xchg
fidivr
mov
ds
push
xchg
cmp
xor
mov
movs
nop
fisubr
dec
dec
mov
fimul
movs
pop
sti
mov
push
sub
inc
cmp
ret
ror
fs
push
test
(bad)
outs
push
sti
ss
xchg
aam
cmp
and
imul
mov
scas
jmp
jne
test
(bad)
aam
loop
ins
dec
fdivr
call
clc
xlat
mov
add
fsubr
rol
loopne
pop
sahf
sahf
jno
push
pop
shr
jne
(bad)
cmc
mov
and
icebp
push
aad
mov
and
lea
hlt
aaa
stc
mov
fdivr
jge
int
std
cld
dec
ja
aad
stc
adc
gs
icebp
xor
push
sar
fbld
jl
jnp
cwde
fwait
test
mov
ss
mov
ret
mov
push
repz
pop
retf
or
fidivr
adc
pop
repnz
mov
xchg
push
pushf
or
jmp
mov
fidivr
loope
stos
daa
push
cmps
xchg
cmc
add
mov
mov
jb
outs
dec
rcl
jns
cli
jae
jecxz
hlt
fisub
int
out
cmps
(bad)
sub
dec
cmp
js
popa
bound
cmc
in
pop
mov
sbb
emms
mov
xchg
ds
outs
push
jge
jg
cmp
sbb
mov
mov
shr
shr
adc
and
adc
xor
xchg
dec
dec
inc
movs
(bad)
xchg
xor
mov
aam
sbb
jl
(bad)
push
sti
pop
mov
movs
fwait
sub
jge
add
div
repnz
sub
aad
xchg
sub
sub
sbb
imul
mov
repnz
cmp
inc
mov
call
adc
lods
sahf
push
mov
and
inc
push
sbb
and
add
aas
dec
jl
push
pop
loop
(bad)
icebp
jle
xchg
add
hlt
cmp
movs
or
outs
(bad)
and
(bad)
push
test
lock
push
out
push
arpl
and
adc
out
sub
sbb
cdq
push
loopne
mov
dec
mov
aaa
stc
mov
sbb
fwait
stos
xchg
xchg
test
out
jl
shl
into
ins
dec
iret
(bad)
and
retf
fnstcw
xchg
cmp
sub
scas
loop
fcmovnbe
pushf
push
outs
mov
ror
or
sar
(bad)
leave
mov
icebp
mov
add
ds
cmp
xchg
or
lahf
sbb
aam
adc
mov
push
inc
ror
popf
ins
pop
xlat
mov
jl
jns
popf
js
mov
movs
mov
jb
push
retf
call
pop
or
inc
fbld
popa
mov
in
cmp
mov
cmp
adc
std
push
or
inc
cmp
mov
ins
jo
mov
mov
push
test
imul
pop
repnz
in
sub
inc
pop
cli
sub
lods
repnz
inc
add
adc
cmp
dec
and
imul
push
inc
leave
and
idiv
aad
out
jo
push
cmp
xor
aam
hlt
sbb
ror
mov
pop
dec
xchg
aaa
adc
dec
(bad)
pop
pushf
mov
cmp
xchg
push
inc
mov
arpl
push
push
xor
das
or
(bad)
dec
sub
scas
hlt
pop
add
lahf
aaa
lock
mov
mov
fld
mov
out
enter
cli
(bad)
leave
jge
outs
das
arpl
(bad)
mov
xchg
outs
das
xchg
cmp
sbb
sar
lea
push
ds
cwde
sahf
pop
mov
les
test
je
inc
popa
sub
mov
push
sub
jns
mov
cld
retf
and
mov
jmp
push
(bad)
cmc
repz
scas
pop
lds
sti
xor
fcmovnbe
imul
jp
(bad)
out
xchg
repnz
xor
pop
in
push
lds
push
lods
cdq
xor
cwde
jge
jl
push
out
jbe
lea
(bad)
jo
sub
cmp
lock
jmp
pop
jl
push
mov
leave
push
adc
dec
std
add
stos
jo
sti
sbb
add
push
jnp
push
stos
imul
icebp
retf
sub
adc
call
adc
cmc
arpl
int
(bad)
xchg
(bad)
dec
pop
pop
cmp
push
push
dec
out
mov
in
lods
leave
addr16
or
fdivr
arpl
hlt
xchg
fimul
cli
mov
leave
adc
mov
cmc
inc
data16
jo
in
pop
fsub
loopne
and
jmp
fsub
sti
sar
xchg
shr
mov
xchg
push
adc
mov
adc
icebp
les
outs
pusha
ds
scas
daa
daa
cmp
mov
sbb
loopne
pop
retf
les
or
into
xlat
sbb
mov
outs
call
xchg
pop
adc
add
gs
push
sti
test
in
mov
xchg
add
lea
out
rcr
cmc
int3
sub
pop
nop
or
or
cmp
iret
pop
push
jmp
aaa
fidivr
pop
(bad)
inc
lahf
pushf
retf
cld
ins
push
rol
pop
dec
pop
test
ins
js
xchg
push
lods
xchg
nop
push
fnstsw
enter
movs
cmp
inc
leave
jge
clc
fld
push
inc
adc
dec
pop
aaa
imul
movs
and
inc
je
jb
in
adc
shl
popf
mov
fwait
add
push
aas
(bad)
scas
bound
jbe
retf
test
jg
mov
out
stos
mov
pop
movs
in
loopne
fwait
xlat
add
cmp
ins
int
inc
cli
or
cmp
adc
jbe
call
push
pop
retf
lahf
add
mov
nop
dec
dec
les
lock
mov
popa
test
dec
jl
ret
outs
and
xchg
pop
jp
cmp
inc
lods
add
inc
js
or
push
mov
rcr
retf
cmps
or
and
ins
out
push
arpl
scas
retf
xor
inc
xor
add
mov
or
pop
stc
ins
mov
push
js
rcr
ror
sub
mov
test
and
test
mov
pop
lea
jle
cmp
dec
xlat
jp
or
inc
xor
dec
scas
push
jae
ret
test
test
(bad)
clc
movs
push
idiv
jne
xchg
adc
cmp
sbb
clc
retf
cdq
gs
cld
mov
adc
mov
mov
nop
and
movs
adc
dec
and
or
mov
pop
pop
jl
ss
xchg
cmp
rcl
push
lods
inc
adc
hlt
sub
push
lahf
ficomp
xlat
inc
pusha
inc
dec
mov
add
pop
xchg
xor
mov
pop
addr16
push
push
and
call
int
jno
xor
jg
pop
xchg
inc
test
mov
mov
and
dec
ficom
inc
mov
ficomp
dec
sbb
jb
dec
xor
pop
push
jb
dec
mov
outs
loop
fs
adc
jo
jbe
scas
fstp
stos
shl
add
mov
inc
retf
test
addr16
and
mov
pushf
cmp
and
mov
(bad)
ins
retf
ss
aaa
push
xchg
sub
pusha
sub
mov
sub
add
xchg
jge
neg
add
sar
cmc
jg
popf
leave
sub
sub
out
jge
in
rcr
sahf
dec
clc
ret
mov
adc
(bad)
push
outs
xchg
pop
mov
(bad)
fwait
xlat
push
stos
fucom
fs
lock
ret
outs
std
repnz
mov
pushf
out
retf
sti
or
call
adc
cld
fwait
or
test
(bad)
xchg
arpl
ds
xor
inc
or
in
push
jecxz
and
ds
adc
and
add
cmp
fiadd
or
(bad)
loopne
mov
mov
fisub
mov
cs
repz
jnp
or
mov
aas
dec
adc
jo
jne
dec
and
jecxz
fst
or
pop
mov
scas
rcl
sbb
cmp
add
fstp
jg
movs
hlt
cmp
sti
xor
cmp
mov
xchg
mov
adc
icebp
cmp
sbb
or
dec
xchg
cmp
xor
push
ffreep
sub
ret
adc
std
movs
mov
nop
fs
ror
dec
ss
push
inc
add
or
and
push
rol
adc
push
imul
sub
jecxz
add
push
dec
push
mov
popf
inc
cmps
loop
dec
xor
imul
cwde
jb
add
adc
mov
fsubr
test
mov
pusha
shl
mov
and
mov
mov
jns
lock
int3
loopne
dec
mov
xchg
add
dec
cs
mov
in
xor
popf
(bad)
jmp
xchg
xchg
mov
or
push
bound
push
xor
dec
mov
sar
test
sub
sub
xchg
xor
in
xchg
ret
sbb
out
xchg
(bad)
mov
test
mov
sbb
inc
pop
sahf
add
pop
mov
les
frstor
arpl
sub
loop
cmp
data16
into
cmp
test
and
rcl
das
jp
pusha
test
pop
adc
jmp
rcl
fwait
icebp
pop
or
mov
sbb
pop
adc
adc
imul
cld
adc
out
fs
dec
xor
lods
out
(bad)
mov
rol
adc
xor
jmp
pushf
xor
sbb
add
std
imul
jecxz
pusha
add
mov
jnp
retf
cmps
jo
fs
mov
(bad)
pop
std
xchg
dec
clc
inc
dec
int
inc
sub
mov
sub
sbb
or
xlat
lds
into
test
cmp
dec
popa
sub
inc
sbb
cmc
add
js
fisttp
xchg
jmp
pop
sbb
les
pop
xchg
inc
dec
sbb
in
xor
fmul
fld
out
ins
out
sbb
sbb
icebp
bound
pop
lock
pop
pushf
fiadd
popa
test
push
and
call
mov
jp
out
mov
mov
and
sbb
or
sbb
(bad)
jne
adc
std
and
fiadd
xchg
mov
aas
mov
sbb
mov
dec
mov
dec
sbb
push
inc
mov
push
sbb
xchg
push
icebp
(bad)
cmp
dec
pop
sbb
enter
sub
aad
xchg
out
and
mov
ret
and
ds
mov
mov
and
retf
in
test
dec
sbb
fsubr
jnp
rcr
and
push
jg
sub
out
ret
push
dec
sub
push
push
iret
lock
imul
jb
push
or
sub
mov
shl
fnstcw
test
jge
aam
jno
outs
bound
fwait
aad
mov
sub
mov
lds
(bad)
push
xor
das
lahf
pop
lahf
aad
retf
add
add
test
inc
dec
call
popf
pop
adc
dec
shl
es
adc
jmp
icebp
int3
ror
mov
dec
mov
imul
jbe
mov
push
xchg
clc
rol
das
adc
add
sub
dec
ins
je
scas
in
push
mov
sbb
xchg
dec
dec
retf
or
and
pop
add
cmp
xor
lea
stos
scas
xchg
lods
xor
out
jecxz
xor
cmp
fldenv
sbb
sar
inc
iret
jno
push
cmps
dec
jp
fisttp
sub
int3
mov
ins
pop
in
mov
pushf
inc
daa
addr16
(bad)
mov
dec
inc
cdq
iret
jbe
sahf
(bad)
addr16
rol
test
cmp
in
pop
adc
aaa
jnp
or
mov
idiv
addr16
jns
in
inc
pushf
push
fwait
push
fmul
(bad)
sbb
in
int3
xchg
loop
cmp
xchg
adc
repz
dec
cmp
cmp
es
xor
fidiv
cdq
jnp
retf
arpl
lahf
cmp
cld
movs
mov
movs
stc
sahf
sti
and
push
shl
(bad)
sbb
test
out
inc
mov
retf
hlt
or
mov
jmp
lods
xchg
repnz
into
push
ins
and
mul
jp
inc
ds
or
clc
addr16
mov
int
cmc
mov
mov
repnz
jmp
enter
scas
xor
iret
jle
mov
push
cs
and
popf
test
jl
sub
(bad)
xor
inc
pop
dec
xchg
rcl
add
xchg
xchg
inc
rcl
lods
inc
pop
ja
test
sahf
gs
inc
loope
iret
mov
xchg
ror
loope
call
dec
push
out
call
sub
aad
scas
scas
scas
mov
cs
mov
mov
push
cmc
nop
cmp
repz
imul
(bad)
(bad)
push
rol
jmp
aas
mov
xchg
in
adc
add
mov
lahf
pop
cdq
push
sub
sub
(bad)
leave
jle
cmp
stos
and
dec
push
shl
aaa
movs
es
ret
mov
pop
jo
push
mov
enter
and
in
test
or
pop
movs
push
pop
stos
push
jp
in
mov
and
es
mov
aad
push
push
mov
ret
dec
(bad)
lock
xor
xor
adc
jl
push
jns
pusha
ficom
fwait
pop
jmp
pop
test
mov
imul
adc
loop
stos
cmps
mov
jns
fild
jo
ins
(bad)
sbb
jmp
sub
jmp
pop
mov
cmps
jp
fwait
je
test
std
fild
push
xlat
jg
(bad)
outs
adc
adc
and
mov
jg
pop
(bad)
scas
popf
jbe
pop
cld
push
push
lds
and
cmp
sub
gs
mov
aaa
xor
cmc
push
frstor
sbb
ins
xlat
push
inc
leave
into
ret
jecxz
add
xor
sbb
or
sub
cmp
fwait
cmps
shr
xor
push
ss
and
pop
and
sar
rol
push
retf
push
and
mov
sub
call
jo
loope
pop
push
mov
cdq
cmp
jnp
ror
pop
daa
ficomp
dec
pop
mov
pop
(bad)
adc
(bad)
(bad)
in
sub
adc
js
mov
test
test
push
sub
sub
(bad)
mov
pop
(bad)
pop
mov
imul
mov
sub
iret
push
imul
call
push
sub
mov
nop
clc
mov
test
in
jecxz
lock
mov
add
dec
retf
jae
pop
retf
inc
cmp
or
adc
inc
push
pop
mov
jecxz
sub
int
pop
loope
jmp
xchg
loope
mov
dec
pop
call
and
(bad)
push
scas
jno
jle
inc
ds
jg
pop
in
int
mov
adc
xor
std
pop
xchg
xor
fst
into
enter
repnz
in
lods
lahf
inc
stc
addr16
(bad)
out
retf
repz
test
cld
lds
(bad)
sbb
mov
clc
pop
jae
adc
inc
sub
sbb
mov
xor
popf
add
fisubr
out
setbe
jnp
rcl
daa
pop
push
xchg
or
std
retf
jl
in
mov
nop
stc
sbb
mov
inc
cmps
sbb
sbb
in
ins
dec
ja
cli
jmp
xchg
bound
shr
mov
aas
stc
repnz
arpl
sbb
imul
cdq
shl
fucomi
ins
(bad)
push
push
push
cli
pop
ja
test
add
mov
xchg
les
xlat
(bad)
cld
xchg
mov
cmp
push
scas
sbb
sub
ins
push
repnz
fst
jge
leave
movs
aam
pop
or
out
test
xor
and
sbb
cmp
pop
inc
sbb
xor
or
mov
and
ins
mov
mov
pop
test
dec
imul
std
std
adc
push
xor
xor
xchg
xchg
(bad)
sti
mov
cmp
mov
xor
in
add
mov
sub
cwde
fidivr
xor
lods
les
clc
mov
mov
sub
mov
dec
or
mov
dec
push
pushf
test
out
or
jmp
xor
dec
ja
retf
(bad)
inc
rol
ret
push
das
ss
jg
pusha
(bad)
jle
and
mov
add
iret
(bad)
test
test
enter
jge
imul
cmp
and
sub
fidiv
imul
mov
and
add
and
mov
fiadd
sbb
stos
fidiv
addr16
cmp
fadd
mov
std
jmp
push
xchg
fldcw
and
icebp
js
cmps
loopne
mov
or
aad
sbb
mov
data16
adc
mov
out
push
adc
leave
xor
xchg
inc
fxch
sbb
sbb
adc
xchg
add
stos
mov
push
inc
dec
inc
out
sub
or
cdq
xchg
leave
jae
or
popf
test
in
mov
fld
in
sub
pop
add
add
call
xchg
stos
outs
push
dec
sub
fwait
stc
sbb
es
pop
retf
mov
rcl
jne
es
cs
bound
aas
xchg
push
inc
xor
inc
xchg
push
aaa
cmp
jne
cmp
retf
add
push
fsub
mov
pop
jle
add
pop
mov
sbb
scas
dec
aas
add
adc
(bad)
repnz
iret
(bad)
call
inc
and
mov
pushf
sub
push
stc
push
xlat
dec
xchg
ftst
pop
test
(bad)
or
es
gs
mov
rcl
mov
shr
push
pusha
pop
out
and
repnz
cmp
icebp
std
mov
les
(bad)
or
test
dec
pop
enter
mov
sbb
neg
stc
pusha
dec
or
mov
or
cwde
fild
mov
fldcw
pop
push
test
jmp
xchg
seto
xchg
out
cmp
scas
dec
aaa
adc
cdq
sbb
jl
or
sub
(bad)
mov
les
out
and
fisubr
ds
call
mov
int3
aad
(bad)
inc
or
fistp
xchg
nop
cmp
shl
test
arpl
pop
aad
iret
mov
sub
cli
jno
bound
mov
dec
out
xchg
adc
sbb
cld
setl
into
pop
xchg
lds
inc
xchg
sub
retf
std
dec
jmp
cli
test
jl
cdq
lock
xchg
xchg
jnp
mov
fwait
test
imul
sub
sbb
mov
jae
in
or
in
cmpxchg
fwait
mov
mov
out
jg
adc
jns
icebp
mov
repnz
mov
nop
call
cmp
pop
mov
mov
js
outs
clc
mov
pop
dec
inc
gs
stc
pop
mov
cdq
cmc
add
or
std
pop
jp
stos
pop
mov
retf
mov
cmps
into
xlat
(bad)
mov
lods
inc
add
add
ins
and
aam
inc
(bad)
out
jnp
push
dec
push
icebp
xor
jecxz
mov
xor
ret
and
jnp
adc
mov
loopne
test
js
add
idiv
pop
adc
jno
sbb
add
mov
stos
or
stos
ins
inc
xor
mov
aad
xchg
shr
in
mov
sub
clc
mov
clc
movs
cld
xor
mov
mov
or
adc
rcl
pop
sbb
push
aaa
sti
pop
sti
push
pop
or
and
pushf
leave
adc
inc
test
mov
mov
nop
int
pushf
mov
jp
ja
bound
or
inc
lods
ret
mov
jno
adc
push
scas
pusha
mov
mov
push
dec
jb
(bad)
push
rol
sar
ja
sub
inc
lods
sub
fld
ror
xor
pusha
lods
push
inc
das
sub
stos
cmp
fwait
cdq
xor
retf
clc
leave
lods
imul
ficom
dec
fs
sub
jae
idiv
in
daa
imul
inc
cli
pushf
jo
ficomp
cs
pushf
jge
inc
mov
push
sbb
dec
jl
ss
stos
jle
jecxz
repz
inc
pop
out
lahf
cmp
mov
dec
fld
xchg
mov
iret
out
push
pop
aas
mov
imul
cld
xor
div
adc
std
dec
pop
aad
xor
push
xchg
mov
iret
push
scas
dec
dec
pushf
jmp
inc
jmp
sub
sbb
ret
inc
push
sub
pusha
shl
int
xor
cmp
inc
mov
inc
mov
(bad)
jbe
xchg
hlt
shr
adc
icebp
cmps
push
xor
dec
mov
seta
pop
jmp
and
mov
push
pop
test
cdq
inc
jmp
imul
push
jge
dec
jo
or
cdq
xchg
inc
mov
cmp
jb
jg
xor
pop
sub
inc
jns
adc
dec
pop
scas
add
pop
jp
add
push
in
xor
push
or
test
mov
mov
cmp
add
add
ss
xor
pop
xor
cmc
xor
cmps
pop
xadd
xor
mov
dec
lods
dec
in
ret
bound
push
fst
sub
lock
inc
and
dec
cmp
lahf
clc
xor
fcmovne
sbb
lds
hlt
xor
lods
xor
or
cli
rcr
push
pop
pop
(bad)
outs
push
ret
cs
push
pop
pop
or
xchg
rol
loop
fwait
gs
or
cmp
inc
jecxz
and
aam
fmul
lahf
xor
mov
mov
jb
test
shl
jb
add
push
dec
int3
jmp
cmp
dec
dec
fwait
push
icebp
mov
mov
push
sar
mov
loop
scas
adc
jnp
shl
scas
daa
add
aas
push
mov
lods
in
push
pop
adc
push
repnz
(bad)
leave
push
jecxz
cmp
or
mov
pop
ins
call
add
jb
jo
push
add
pop
fldenv
pop
mov
cld
imul
add
ss
xchg
icebp
push
(bad)
sub
jo
dec
in
cmp
mov
icebp
pop
mov
int3
cs
push
xor
sbb
jne
out
xor
loope
pushf
mov
xlat
adc
dec
icebp
ret
mov
add
mov
pop
pop
aaa
xor
and
sub
sahf
xchg
aad
aaa
imul
xor
sbb
or
adc
fcmovnu
(bad)
(bad)
stc
shl
jecxz
in
gs
mov
xor
imul
cmps
inc
mov
dec
pusha
out
mov
add
inc
mov
inc
ins
pop
mov
push
mov
lods
jg
cwde
sbb
jp
jbe
setl
push
gs
lds
std
sbb
outs
repz
lods
loope
sbb
mov
inc
jmp
test
retf
jp
push
or
addr16
add
lea
mov
push
or
add
scas
and
mov
test
ins
rol
and
xor
neg
test
in
scas
ss
pop
int3
aas
pushf
pop
retf
cmp
mov
xchg
and
aad
rol
je
mov
ins
sub
dec
adc
sub
inc
ds
mov
or
scas
cmps
and
sub
sub
pushf
pop
push
jge
xchg
lds
and
cdq
cld
cmp
pop
jbe
push
test
(bad)
or
ror
mov
js
mov
mov
and
and
daa
sbb
sub
les
enter
add
shld
pushf
loop
xchg
movs
jge
fisub
push
(bad)
gs
stc
or
stos
imul
inc
or
comiss
sbb
bound
inc
jmp
or
adc
cmp
std
cmp
stos
pop
inc
add
or
xlat
mov
aad
repnz
cld
fwait
(bad)
repnz
or
lods
int
jg
clc
or
pop
stos
outs
sub
(bad)
(bad)
stos
mov
sub
aad
(bad)
jae
dec
jns
call
xchg
push
add
jmp
push
std
push
mov
loopne
mov
push
dec
sbb
pop
jne
push
movs
pop
mov
dec
addr16
dec
das
jl
leave
in
mov
sub
sbb
sbb
sbb
iret
(bad)
xchg
mov
es
std
call
(bad)
aad
pop
pop
movs
inc
and
cmp
push
jns
jbe
pop
mov
mov
dec
pop
mov
xor
and
cmp
test
outs
out
pop
data16
repnz
fdiv
jmp
fyl2x
inc
mov
cli
adc
xchg
in
iret
mov
fwait
cld
loope
inc
loop
jmp
mov
jecxz
sar
fist
iret
rcl
and
pop
jmp
sub
mov
ficom
repnz
adc
retf
push
sbb
or
aas
pop
scas
imul
xchg
mov
inc
daa
xchg
xor
jb
or
imul
pop
out
inc
lods
inc
mov
in
inc
in
dec
cmp
add
(bad)
mov
mov
out
aad
ds
xchg
pop
stos
inc
fwait
jb
popf
inc
mov
enter
xchg
push
xchg
inc
push
dec
or
repz
(bad)
ret
out
rol
(bad)
xchg
inc
jo
fild
dec
cmp
ret
(bad)
jmp
pop
mov
js
je
imul
js
stos
mov
sub
pop
ret
call
mov
neg
mov
push
mov
pop
mov
nop
iret
dec
xor
loope
je
lock
jo
test
jmp
(bad)
call
in
lods
nop
popa
into
lahf
aaa
add
cs
std
adc
xchg
icebp
sbb
lods
push
scas
stos
or
sub
mov
lock
inc
cmp
cmps
imul
les
dec
or
push
jl
mov
add
mov
movs
mov
mov
jg
aaa
cdq
retf
mov
jmp
inc
push
(bad)
pop
test
sbb
push
out
es
repz
shl
ins
mov
pop
(bad)
cli
adc
fwait
add
cs
movs
or
out
push
cli
pop
cmp
cld
hlt
pop
movs
pop
sub
loope
and
adc
sub
sti
push
mov
pop
(bad)
push
dec
jge
aas
xchg
stc
in
or
hlt
cli
(bad)
sbb
mov
out
push
mov
sub
sub
in
inc
shl
imul
movs
xor
dec
sbb
sub
inc
mov
xor
sbb
mov
cwde
sub
cdq
jmp
test
mov
sar
push
je
ins
cmp
out
fidivr
arpl
push
sbb
push
jge
xor
repnz
or
fsub
push
mov
aad
pop
mul
fs
repnz
mov
pop
mov
lds
mov
(bad)
loop
(bad)
div
dec
mov
jp
mov
aad
ds
lea
(bad)
mov
mov
add
mov
jno
cmp
rol
idiv
dec
test
mov
add
jae
inc
xchg
and
or
cmp
jno
fnstsw
add
(bad)
sbb
scas
(bad)
sbb
lds
movs
mov
dec
mov
stos
xchg
lods
sar
lahf
outs
jecxz
xor
pop
cli
lods
gs
in
adc
mov
pushf
sub
or
mov
fsubr
(bad)
mov
cmp
ja
fadd
xchg
stos
pushf
in
(bad)
mov
push
imul
xchg
retf
sub
mov
jne
mov
sbb
aam
mov
add
dec
jmp
add
test
fwait
adc
les
add
test
sbb
pop
push
mov
cmp
ds
cmp
test
aas
fisttp
xor
retf
in
movs
push
cs
adc
scas
retf
jecxz
enter
les
fcmovne
in
in
fist
fwait
jns
cmp
fbld
sub
cmp
out
push
pop
stc
dec
rol
or
mov
mov
mov
rcr
lds
push
aaa
ret
jmp
(bad)
clc
jns
jne
or
add
dec
js
in
mov
(bad)
mov
jl
rol
sbb
mov
or
das
inc
call
and
popa
adc
jmp
push
mov
pop
mov
xchg
sahf
jnp
jmp
outs
imul
mov
xchg
push
mov
mov
jbe
mov
(bad)
mov
es
adc
dec
or
add
fist
in
inc
mov
ins
jmp
inc
dec
mov
clc
pusha
inc
sbb
pop
pop
je
stc
in
sti
push
fcompp
cld
dec
jmp
adc
adc
and
js
cmp
fstp
jge
cwde
sbb
dec
jl
push
fbld
cmp
sti
pop
aaa
movs
leave
dec
arpl
ins
and
inc
out
sub
push
das
mov
cmp
mov
lea
ret
arpl
lods
and
out
and
pop
ret
xchg
outs
jno
dec
out
push
dec
add
pop
fs
pop
cld
data16
sub
add
xchg
outs
(bad)
sbb
cmc
outs
jmp
sbb
add
and
inc
retf
dec
ins
(bad)
mov
fnstsw
adc
push
fsub
(bad)
and
push
inc
dec
call
cs
stos
push
xchg
jecxz
xor
lahf
or
aas
jae
daa
das
leave
out
lock
sub
daa
adc
push
dec
xor
inc
or
neg
push
outs
outs
adc
sbb
stos
inc
xchg
mov
adc
repnz
push
stc
push
jmp
fcomp
mov
push
mov
aad
sbb
repnz
push
pusha
jae
mov
mov
fld
iret
xchg
rcr
add
into
div
mov
sub
pusha
mov
movs
pop
dec
aad
(bad)
psubusb
fld
leave
out
retf
mov
or
lock
mov
lock
fadd
popa
xor
stc
nop
push
cmp
sub
sti
jnp
pop
(bad)
jbe
mov
mov
xchg
push
jnp
mov
push
xor
sub
mov
push
mov
jnp
outs
or
(bad)
mov
or
and
out
test
and
leave
jmp
or
sbb
xor
aas
imul
cli
cmp
call
bnd
and
shl
xchg
or
pop
mov
cmps
rcl
ficomp
ins
xor
ins
sbb
int3
pushf
dec
aam
cmps
sub
scas
mov
mov
lods
jmp
push
outs
push
mov
call
jecxz
mov
mov
mov
inc
or
pop
cmp
xchg
and
sub
add
cld
push
mov
nop
and
aas
mov
popf
stc
(bad)
out
adc
(bad)
mov
inc
cmps
push
(bad)
rcl
aam
sub
in
leave
xor
push
das
xor
mov
out
jg
jbe
cs
scas
nop
data16
sub
mov
mov
hlt
dec
and
ja
pop
sti
pop
je
fwait
nop
data16
pop
sbb
stos
hlt
std
jae
mov
and
(bad)
in
popa
scas
push
xchg
test
push
imul
dec
sahf
cld
scas
mov
das
jnp
jp
mov
sar
sbb
push
addr16
inc
movs
mov
mov
pushf
fidivr
sbb
fdivr
icebp
mov
xchg
hlt
sub
call
ret
cdq
push
scas
mov
or
aam
mov
pushf
shufps
jp
je
(bad)
xor
aas
into
iret
fld1
jno
lock
inc
clc
mov
push
in
sti
imul
lea
xor
push
jno
es
ds
sbb
sbb
(bad)
retf
js
inc
arpl
test
push
jge
dec
cdq
movs
loop
mov
ret
mov
sbb
test
cmps
adc
ins
mov
pop
push
mov
dec
icebp
mov
mov
mov
(bad)
mov
sbb
push
push
aad
rol
pop
ret
movs
mov
fs
dec
mov
mov
xchg
add
outs
ja
adc
ret
ss
adc
inc
aad
push
(bad)
push
sbb
(bad)
push
sbb
jecxz
sbb
stc
cli
in
loop
adc
mov
push
xchg
cs
fld
test
les
fnstcw
add
mov
js
(bad)
loopne
mov
and
in
add
jnp
inc
movs
aaa
repnz
pop
in
adc
jmp
sub
mov
rcr
push
aad
jno
or
or
in
out
add
ret
test
pop
test
dec
sub
mov
ins
add
push
dec
(bad)
adc
popf
and
sbb
and
call
jo
ss
iret
out
sbb
mov
loop
rcl
ret
add
cdq
mov
xor
lahf
cmp
lahf
int3
mov
cld
xchg
stc
shl
pop
cwde
test
pop
add
fwait
in
mov
xor
lahf
inc
inc
bound
sbb
es
sub
sbb
pushf
sbb
fdivr
sub
pop
mov
add
cmp
clc
push
adc
scas
fwait
pop
retf
xchg
ss
iret
mov
in
in
imul
mov
adc
mov
(bad)
aas
mov
and
xlat
bound
push
cmp
cmp
pop
xchg
lock
les
and
mov
ds
into
aas
leave
loope
xchg
lds
adc
push
leave
push
add
aas
fadd
test
push
sub
(bad)
cmp
stos
pop
je
dec
sub
dec
out
scas
sbb
dec
jl
jl
les
loope
inc
repz
inc
adc
pop
jecxz
into
shr
shr
inc
imul
aad
(bad)
outs
or
xchg
test
jmp
pop
mov
and
mov
mov
imul
dec
mul
xchg
sub
test
inc
fs
out
shl
jl
(bad)
push
mov
out
iret
cmp
xor
jge
stc
mov
xchg
sbb
lods
cmp
sub
shr
pop
push
inc
mov
cmp
int3
ins
xor
ja
mov
cmp
fstp
nop
push
and
xchg
out
xlat
cdq
inc
movs
and
mov
jnp
cwde
in
sbb
cmp
iret
jmp
xchg
loope
ror
push
iret
cmps
adc
loopne
push
daa
pop
fild
dec
pusha
pop
jge
arpl
jns
shl
(bad)
mov
xchg
xchg
mov
hlt
add
or
ja
cmp
mov
clc
sub
add
push
loope
jo
outs
cmp
(bad)
mov
std
adc
sbb
call
imul
mov
adc
fwait
clc
mov
into
push
push
shl
pop
adc
jge
cmp
fistp
sbb
inc
cmp
mov
int3
jp
jae
xor
into
mov
mov
or
in
imul
jmp
mov
je
mov
mov
adc
mov
std
or
div
push
dec
mov
movs
dec
mov
adc
scas
in
add
inc
out
inc
ficom
frstor
inc
(bad)
(bad)
mov
pushf
pop
xor
pushf
scas
fnstsw
std
mov
mov
dec
lds
nop
sbb
ins
mov
adc
jo
push
xor
jmp
xor
icebp
mov
jbe
fisubr
add
leave
add
pushf
rcl
fisub
(bad)
jnp
imul
adc
push
scas
dec
mov
dec
imul
inc
add
retf
mov
cs
push
dec
pop
test
(bad)
call
jns
jb
xchg
es
fst
mov
mov
inc
fld
jae
movs
icebp
adc
mov
mov
pop
cs
not
and
cmp
mov
jnp
bound
mov
dec
pop
mov
mov
xlat
mov
enter
adc
jmp
int
in
ja
cmc
mov
dec
call
pop
lock
sub
lea
ds
pop
movs
push
mov
mov
push
ret
mov
icebp
adc
sar
rol
push
jbe
mov
cmp
xor
rol
out
pop
sbb
mov
cdq
xor
and
adc
or
out
cs
sbb
pusha
out
adc
cmp
and
or
imul
rcl
cdq
adc
test
xor
pop
inc
pop
push
xchg
loop
and
add
mov
rcr
xchg
mov
lock
iret
in
add
cld
test
unpcklps
loopne
cmps
fisttp
mov
nop
movs
xor
mov
lock
data16
loop
mov
inc
pop
sbb
idiv
ret
cwde
sbb
inc
or
adc
inc
mov
aad
lahf
mov
mov
out
aas
dec
add
pop
ret
test
ds
pop
push
adc
cmp
push
jge
and
xchg
loopne
js
xor
mov
test
pop
or
pop
xchg
push
fsub
in
xor
mov
or
xor
xchg
xor
inc
iret
push
cmp
das
daa
pop
cmp
(bad)
mov
adc
and
or
xor
(bad)
int3
adc
mov
call
or
loopne
jle
push
loop
out
fdiv
fstp
es
pop
xor
in
sub
add
rcl
pusha
pusha
cwde
cmp
gs
sti
ss
xor
jns
add
mov
add
into
call
mov
je
mov
movs
pop
(bad)
jmp
stos
ja
mov
vpaddusb
and
inc
mov
xor
sub
cmp
lds
mov
inc
cdq
push
push
pop
mov
call
(bad)
dec
xchg
jne
scas
repz
xchg
jmp
mov
jo
lods
mov
mov
fs
mov
xor
add
pmulhw
xchg
rcr
xchg
mov
js
push
out
in
iret
xor
shr
dec
pop
jno
and
mov
or
and
(bad)
xchg
mov
pushf
in
inc
das
iret
sbb
pop
mov
mov
dec
adc
cs
ret
push
push
stos
pop
add
push
ins
das
mov
jl
pop
xchg
mov
enter
retf
inc
sbb
jo
cmp
xor
jne
or
jnp
adc
push
and
cwde
ret
mov
test
sub
adc
or
adc
fs
mov
lahf
ja
push
test
and
cli
and
lods
out
test
or
xchg
add
add
test
icebp
leave
inc
sbb
aas
sub
xor
mov
adc
sub
sub
xlat
pop
in
pusha
dec
or
cmp
adc
ret
or
xlat
push
sub
push
js
call
mov
movs
xor
fdiv
or
cmp
call
adc
adc
mov
jne
fwait
aad
imul
add
xchg
or
std
gs
lods
or
test
mov
sub
jbe
daa
enter
lods
sbb
jp
rcl
xchg
int
push
pop
clc
push
fucomp
lea
or
mov
arpl
dec
inc
xchg
test
test
push
mov
call
or
loopne
hlt
or
xchg
stc
stc
push
ins
xor
cmp
jge
cmp
test
add
mov
stos
aaa
clc
imul
adc
scas
das
xor
and
iret
into
cmp
fstp
adc
aaa
clc
sar
xor
rcr
sub
clc
pop
and
mov
iret
xchg
retf
pop
jae
adc
xchg
push
outs
adc
and
retf
or
(bad)
iret
push
and
fst
and
xchg
add
fsub
cmp
movs
mov
jmp
std
vprotb
fst
(bad)
mov
bound
test
pop
int3
test
vmwrite
(bad)
out
stc
mov
xchg
inc
movs
mov
or
pop
adc
push
sub
jmp
sar
jp
mov
mov
or
adc
and
inc
fldenv
mov
in
sbb
call
pop
and
shr
mov
jecxz
sbb
lds
in
sbb
xchg
cwde
mov
(bad)
clc
dec
sub
mov
ss
mov
(bad)
daa
int
ds
es
pop
pop
dec
xchg
ffree
gs
sar
fisub
or
test
arpl
jp
enter
fdivr
xor
mov
scas
mov
xchg
xchg
fild
dec
aam
scas
jb
lods
call
fmul
adc
inc
shl
mov
int
pop
dec
ret
loop
pop
imul
(bad)
cli
push
ret
iret
cs
ins
dec
mov
cmps
scas
call
mov
jecxz
mov
add
adc
xor
mov
inc
stos
inc
xchg
faddp
mov
adc
idiv
dec
cli
mov
sub
lods
out
mov
adc
add
adc
scas
sub
out
ror
jne
fsub
pop
add
pop
dec
inc
(bad)
add
inc
sub
push
sbb
pop
jmp
jmp
loope
cmp
push
sbb
cmp
or
fld
in
stc
jmp
dec
jmp
pop
das
neg
fs
(bad)
and
mov
dec
adc
mov
in
out
or
dec
dec
jmp
sbb
loopne
loopne
cs
icebp
ins
push
or
add
int
(bad)
pop
mov
mov
mov
xchg
aam
and
shr
jmp
xchg
dec
gs
outs
mov
stos
cli
xchg
mov
sub
sub
arpl
push
cmc
push
movs
aad
inc
mov
sbb
out
or
(bad)
xchg
lahf
shl
in
inc
dec
or
movs
pop
out
dec
adc
mov
xor
int3
xlat
sbb
or
fist
mov
pusha
and
jne
push
jno
mul
lods
add
xor
(bad)
aam
dec
mov
in
int
fbld
mov
dec
and
jg
fmul
ficomp
sub
xor
daa
dec
jecxz
and
mov
pop
sbb
dec
inc
pop
fmulp
xchg
jb
(bad)
outs
int
jge
or
jns
cmp
ins
push
call
aas
mul
xchg
adc
sub
dec
add
lock
into
ss
setbe
leave
int
inc
adc
fistp
push
jg
jg
nop
ins
xor
mov
inc
or
jmp
in
add
and
lahf
test
jle
dec
dec
pop
(bad)
or
xor
and
icebp
pop
es
aaa
xchg
cmps
repz
aaa
mov
shl
xchg
pop
icebp
dec
(bad)
fcmovbe
movs
inc
out
out
rcr
int3
or
je
xchg
mov
pop
test
xor
sub
cmp
jge
cmps
stos
mov
sahf
pushf
in
jle
sbb
or
(bad)
scas
icebp
in
pop
es
inc
adc
cmp
repnz
sbb
sahf
(bad)
ret
or
out
push
dec
sub
jl
int3
inc
movs
pushf
hlt
xchg
adc
movs
jne
or
xlat
imul
xor
(bad)
mov
add
shl
outs
aam
mul
push
cs
call
shr
mov
popa
cs
call
cdq
xchg
in
mov
jecxz
ins
sti
and
mov
inc
ret
dec
cli
add
repz
cmp
out
loopne
sub
and
icebp
div
rcl
lock
and
adc
(bad)
push
push
movs
mov
int3
cmp
inc
movs
mov
or
test
mov
jnp
iret
call
(bad)
out
sbb
and
shl
add
scas
and
(bad)
idiv
mov
out
push
cli
mov
pop
or
mov
(bad)
xchg
adc
or
dec
cmp
add
fsubr
cmp
mov
dec
jmp
neg
mov
retf
push
sub
retf
outs
lds
mov
xchg
push
adc
add
in
and
loop
pop
movs
mov
aad
popa
daa
out
or
xchg
in
add
mov
jb
xlat
xchg
addr16
jle
dec
dec
ror
pop
scas
imul
push
lds
shl
jecxz
ret
xchg
mov
dec
mov
sub
cmps
mov
stc
mov
cmp
jmp
clc
pop
inc
push
pop
mov
and
cli
cmp
inc
sar
jmp
cli
sub
addr16
push
push
cmc
add
mov
sbb
pusha
lahf
icebp
push
repz
jns
shr
adc
mov
inc
dec
add
mov
cmp
enter
push
icebp
(bad)
lahf
push
fstp
fld
in
hlt
adc
(bad)
push
mov
jle
pop
add
data16
xlat
sbb
loop
mov
sbb
or
lods
jb
jle
cmp
push
jl
push
and
cmps
repnz
sbb
and
call
xor
mov
dec
inc
outs
jno
jno
outs
idiv
ret
mov
fst
repz
pop
push
fdiv
sbb
rcl
fcomp
fwait
mov
jnp
sub
cmp
jo
sub
nop
add
cmc
and
jnp
std
push
add
mov
and
dec
ja
cmps
pop
movs
xchg
(bad)
shr
pusha
movs
cmps
fwait
or
cdq
imul
dec
sbb
cmp
add
inc
xor
adc
add
retf
push
out
lods
or
jge
push
imul
test
dec
out
iret
outs
sub
cmps
mov
and
jle
retf
(bad)
mov
jg
mov
(bad)
ret
repz
add
jb
(bad)
mov
or
xor
fucomip
mov
dec
lea
inc
fwait
push
and
pop
inc
mov
push
dec
imul
retf
rcr
xor
int3
mov
enter
aaa
adc
push
jle
xlat
ja
stos
dec
mov
cmp
fstp
add
or
stos
jle
daa
shl
dec
gs
hlt
xchg
cmp
mov
pusha
and
push
jae
mov
rcl
pusha
fisttp
enter
iret
rcl
daa
sbb
pushf
push
dec
dec
jb
dec
ret
mov
hlt
push
xchg
dec
cmp
mov
cmps
pop
(bad)
in
test
push
aas
cmc
inc
push
cmps
and
mov
hlt
fsubp
cld
repz
call
pop
int
jae
mov
fadd
icebp
mov
mov
cwde
pop
adc
hlt
ror
cdq
inc
inc
inc
jp
or
cwde
push
js
jp
dec
pop
das
int3
iret
cmps
stos
pop
scas
mov
(bad)
aas
push
xchg
das
jno
ror
rcr
xor
test
xlat
mov
stos
jg
xchg
xor
call
jno
xor
xor
or
adc
in
mov
inc
adc
and
push
outs
test
and
inc
(bad)
sub
daa
jp
or
cmp
mov
pop
adc
hlt
dec
movq
sahf
push
neg
mov
add
fcmovnbe
push
dec
or
jl
sti
mov
mov
xchg
fisub
push
arpl
inc
dec
rol
cli
add
aad
ror
movs
stos
scas
pop
lods
jno
loopne
push
movs
mov
sub
push
rol
imul
pop
test
iret
mov
push
and
mov
sub
aas
mov
mov
cmp
out
mov
call
mov
jno
sbb
jle
leave
cwde
popa
sbb
enter
test
add
outs
push
pop
mov
or
mov
pop
retf
jnp
jg
add
jne
lea
cmp
ficom
push
fwait
lds
iret
add
repnz
imul
(bad)
fiadd
and
dec
data16
jl
jle
mov
(bad)
mov
mov
xchg
add
in
imul
retf
ja
cmp
aam
mov
lds
xchg
in
xor
or
ret
into
jbe
leave
jb
cmps
fbld
nop
jmp
mov
in
xchg
xor
xchg
mov
push
add
xchg
cmp
or
or
outs
outs
inc
test
xchg
movs
fdivr
mov
add
ins
sbb
add
loope
sbb
shr
lods
xchg
repnz
inc
push
ret
scas
mul
test
cmp
sub
ds
sbb
xrelease
int3
mov
sbb
cmp
jp
out
dec
push
test
or
ss
sbb
cmp
cmp
adc
and
adc
inc
mov
imul
stc
push
pop
xchg
dec
or
shl
ins
mov
xchg
or
scas
out
jmp
test
xchg
mov
mov
jle
cmp
sub
adc
push
push
clc
cmps
adc
cli
jne
dec
cmps
xchg
je
xor
mov
mov
aad
das
repz
mov
adc
repnz
xchg
xchg
test
add
loop
or
adc
sub
fcomip
fistp
dec
sbb
push
jae
add
mov
push
dec
lods
and
push
call
or
lock
sub
mov
cmc
adc
rcr
push
mov
(bad)
std
jb
fist
std
pushf
sahf
ss
mov
or
mov
ss
push
icebp
dec
retf
ds
enter
cmp
pop
pop
fsubr
jle
mov
sbb
mov
push
xor
mov
rcr
pushf
cli
ds
cdq
ficom
les
adc
jnp
push
adc
fstp
jg
lods
push
xchg
push
lods
xor
cmps
popf
(bad)
jo
gs
nop
xchg
mov
mov
mov
pop
in
sbb
jl
dec
shl
inc
xabort
dec
sub
mov
sub
jo
mov
out
mov
inc
push
and
pop
popf
js
xchg
inc
leave
cmp
mov
pop
mov
mov
xchg
push
mov
adc
push
mov
mov
mov
repnz
sub
ja
add
mov
and
fmul
xor
mov
cmc
push
jle
popf
aad
inc
psubw
mov
fbld
xor
imul
jns
mov
test
sbb
inc
test
sbb
dec
and
test
mov
xor
test
push
push
retf
(bad)
mov
lds
test
push
and
xchg
cmp
dec
aam
lds
call
sub
jo
std
gs
mov
scas
mov
and
shl
jae
mov
dec
push
ret
sar
test
(bad)
fadd
popa
ret
mov
cmc
add
les
std
xchg
imul
and
or
pop
enter
xor
inc
lods
(bad)
ins
dec
hlt
sbb
and
sbb
outs
sbb
sar
std
push
or
ins
dec
and
mov
shl
sbb
in
mov
or
or
or
lods
or
mov
add
mov
gs
mov
xchg
sbb
ins
and
(bad)
or
hlt
out
dec
adc
inc
shr
fs
cli
outs
fst
mov
js
ins
(bad)
cmp
pop
sbb
jge
mov
out
fs
das
rcl
stc
xor
and
lods
jle
pop
sahf
or
mul
push
cmp
xchg
(bad)
sti
adc
das
cwde
cmp
sbb
jg
push
or
jmp
inc
jns
push
ins
pop
movs
rcr
call
sbb
or
shl
ds
xor
cmc
inc
jno
(bad)
aas
into
mov
xchg
push
retfw
ds
iret
xor
ret
mov
(bad)
addr16
jmp
adc
retf
mov
jmp
or
push
or
push
(bad)
call
std
adc
shl
sbb
xchg
pop
xor
dec
xor
adc
pop
add
jno
es
or
jge
test
mov
fist
imul
jb
sbb
push
push
(bad)
mov
data16
fwait
repz
and
xor
in
mov
cmp
test
call
or
jmp
retf
xor
dec
popa
loop
popf
sahf
neg
gs
mov
call
jmp
fdiv
stos
loopne
mov
icebp
popa
stos
scas
outs
pop
xchg
adc
scas
fld
push
loopne
ins
fnstcw
mov
int3
xchg
push
sbb
imul
cmp
add
push
xchg
mov
pop
mov
sbb
test
ins
sub
icebp
and
sbb
cwde
jns
sti
and
dec
mov
inc
sub
lahf
sbb
lods
int
xor
out
out
ins
mov
int
xchg
pop
loopne
mov
repnz
mov
inc
mov
and
inc
in
mov
mov
gs
aad
lea
xor
xchg
sub
fdiv
sbb
mov
mov
addr16
adc
push
jnp
popa
inc
stos
lea
in
(bad)
ja
arpl
mov
out
mov
imul
out
or
add
xor
lahf
(bad)
shl
arpl
and
fdiv
ja
aaa
cmp
popf
jmp
or
arpl
and
mov
test
test
pop
into
lods
int3
dec
pushw
inc
lods
sub
mov
sbb
xor
xchg
push
in
pop
lea
mov
enter
out
aas
mov
sar
lods
div
call
adc
push
add
test
dec
pop
mov
dec
loope
inc
shr
sbb
mov
xor
icebp
xchg
sbb
mov
add
add
xchg
into
push
scas
push
push
das
jne
jmp
xor
ins
leave
add
cmp
lock
cmp
pop
jae
sub
pop
dec
movs
ins
dec
ins
jo
pop
adc
and
int
clc
popf
pop
add
xchg
mov
rol
loop
inc
mov
sub
push
(bad)
sub
clc
call
sub
loopne
in
test
retf
sbb
xor
iret
sti
call
add
inc
out
jb
add
cld
dec
jg
mov
imul
mov
mov
sub
pop
xchg
sub
sub
sahf
pop
idiv
inc
push
mov
out
sti
es
cmp
xor
je
(bad)
pop
out
aad
cmp
dec
data16
xchg
adc
mov
jmp
jnp
rcl
pusha
adc
or
nop
int3
and
jecxz
mov
xchg
jne
pop
aam
(bad)
stos
mov
inc
js
sahf
scas
xor
xchg
jmp
lods
cmp
pushw
cld
push
ins
lods
ins
xor
cmps
sub
mov
repz
mov
lods
cmps
movs
xchg
retf
data16
dec
mov
gs
div
retf
pop
aas
clc
add
into
leave
push
scas
inc
sub
mov
and
mov
mov
mov
xchg
loopne
aas
nop
mov
adc
(bad)
and
fldenv
pusha
out
scas
pop
out
iret
jns
cdq
mov
dec
or
xchg
jmp
bound
inc
lods
out
arpl
jo
mov
and
jecxz
push
fstp
add
rol
dec
pop
(bad)
fimul
test
cwde
jmp
jns
jne
mov
push
xor
push
mov
jne
and
xlat
or
(bad)
mov
and
xor
out
cmps
push
push
dec
imul
xor
outs
or
pop
cmp
out
(bad)
mov
(bad)
jecxz
and
jg
mov
jne
shl
mov
ror
repnz
mov
push
scas
and
jae
xchg
iret
dec
js
(bad)
mov
js
scas
aad
sub
in
xchg
sub
mov
out
dec
cmp
xchg
add
push
stc
sub
loope
jmp
mov
in
jp
sub
daa
fldenv
sbb
cmp
call
xchg
hlt
jmp
sub
(bad)
fistp
fist
dec
inc
stos
test
xor
add
pop
shr
ficomp
push
clc
sub
sub
(bad)
push
popa
aam
fst
push
fldcw
(bad)
call
not
test
push
mov
sbb
cli
retf
ficom
cs
pop
outs
leave
push
rcr
push
scas
pop
xor
xor
push
(bad)
mov
or
fidiv
cmps
add
test
cmps
retf
add
and
sbb
loop
push
stos
hlt
or
ss
cmp
movs
sub
icebp
cmp
inc
jg
dec
add
imul
push
fwait
jbe
daa
push
and
xchg
hlt
mov
adc
push
stos
sub
sti
and
dec
or
loop
push
dec
loop
cli
and
add
repnz
mov
(bad)
xchg
mov
jp
mov
gs
jne
ds
ret
ins
push
adc
xor
add
mov
popa
(bad)
out
cmps
div
mov
cmp
jnp
ret
fmul
loop
fldenv
pop
inc
test
push
loope
ja
cmp
xor
lds
loopne
adc
div
push
(bad)
jle
ins
in
push
daa
push
pop
and
sbb
movd
mov
inc
mov
js
xor
out
jle
aad
scas
sub
ins
js
jnp
pop
xlat
out
and
int
test
sub
ret
loope
cmps
mov
cmps
stc
push
jmp
jns
mov
add
jo
shl
xchg
mov
pop
push
jp
int
jne
popf
mov
test
inc
mov
mov
pop
mov
aad
push
cmp
std
dec
sti
lock
jmp
cmp
mov
add
ds
imul
fidivr
pop
test
push
mov
js
mov
clc
cdq
push
xchg
mov
sti
loop
jl
xor
jnp
scas
addr16
mov
shl
ret
repz
mov
sbb
popf
dec
and
hlt
sub
scas
mov
add
cmp
repnz
xchg
int
fmul
dec
aad
out
into
ror
loopne
fcomp
inc
pop
jmp
aas
add
ret
test
xchg
stos
xchg
test
es
mov
js
xor
add
xchg
(bad)
les
in
push
ja
cwde
xchg
in
or
sub
pop
leave
out
loopne
aas
test
shl
jge
jo
lods
and
pop
pop
cmp
fld
pop
retf
sub
pop
repnz
add
cmc
jne
mov
fcomp
fisub
inc
(bad)
fld
or
movs
or
adc
mov
ja
stos
test
sub
shl
pop
dec
div
sbb
leave
pop
outs
cmp
sbb
iret
std
add
push
cmp
test
nop
sub
fidivr
xchg
pop
test
call
or
cmp
std
aad
push
xor
(bad)
push
dec
out
add
shl
adc
fsubr
int3
aad
test
sbb
cmove
pop
and
test
jb
jo
arpl
sbb
xor
inc
adc
daa
sub
mov
dec
mov
jns
sub
ret
fistp
in
in
sbb
push
add
fisttp
ret
das
inc
mov
push
sub
retf
hlt
bnd
pop
inc
push
and
sbb
add
leave
sub
pop
repz
das
xor
push
pop
add
pop
xor
lock
and
sbb
loopne
pop
mov
cmc
fstp
inc
(bad)
mov
or
sub
sbb
jmp
mov
lods
dec
xchg
inc
mov
sbb
push
push
mov
inc
xchg
xchg
test
dec
dec
or
jo
cmps
jmp
inc
dec
popa
mov
popf
xor
push
dec
std
mov
push
mov
data16
nop
dec
jmp
and
sub
loope
sbb
mov
inc
lahf
mov
movs
jmp
(bad)
jo
mov
pop
jb
mov
arpl
sub
sbb
mov
pop
aam
popf
jmp
mov
adc
mov
ins
dec
imul
or
push
push
dec
or
cli
lea
sub
mov
pop
loope
(bad)
cmps
or
xchg
int3
sbb
push
sbb
stos
jae
mov
xor
mov
push
aam
in
jmp
enter
mov
mov
fwait
rcr
pop
mov
leave
push
and
jl
jae
jnp
aaa
inc
push
sub
loop
sahf
add
dec
mov
into
fcomp
sub
sbb
das
cmp
out
div
push
dec
xchg
aaa
or
pop
fsub
inc
ret
jmp
fwait
xchg
pop
push
in
bound
push
in
scas
loopne
sub
pop
not
ins
ins
std
xchg
hlt
arpl
or
push
ins
cmp
adc
mov
push
pushf
cmp
jnp
mov
dec
stos
or
mov
pop
dec
jl
jne
add
scas
cmp
and
aam
call
cmc
or
nop
hlt
xlat
add
or
imul
mov
xor
popf
jmp
jmp
push
icebp
idiv
mov
out
adc
ja
mov
mov
inc
ja
push
pop
xor
dec
mov
fistp
xor
mov
icebp
mov
pop
ds
sub
adc
in
add
mov
xor
sub
dec
daa
ss
inc
pop
or
cdq
mov
adc
hlt
and
lahf
pop
cs
mov
cmp
fsub
hlt
loopne
mov
mov
xor
jae
sub
mov
mov
inc
jno
pop
daa
nop
jo
sar
sub
push
sub
mov
sbb
into
push
int3
scas
movs
xor
stos
movs
cwde
and
dec
or
jmp
sbb
test
xchg
push
sar
leave
mov
les
jno
movs
adc
clc
pop
pop
add
fcmovu
cmps
in
adc
(bad)
(bad)
leave
bound
sub
iret
loope
xchg
pushf
mov
movs
out
xchg
xchg
mov
mov
shl
mov
lds
icebp
xor
test
sub
aaa
ret
jmp
out
sub
xchg
xor
jp
lods
xchg
lock
adc
sbb
daa
xchg
add
pusha
lods
and
hlt
push
fist
test
sbb
dec
mov
jle
ds
arpl
mov
repnz
and
aad
mov
fcomp
xlat
mov
nop
cmps
push
nop
dec
or
pop
(bad)
retf
dec
out
adc
cmovbe
mov
cli
xor
sti
xchg
out
test
add
and
movs
mov
jg
dec
xchg
sti
repnz
cmc
cwde
sti
scas
inc
sbb
push
in
mov
(bad)
sbb
loope
mov
pop
shl
retf
mov
cli
pop
mov
xlat
or
and
push
sbb
scas
daa
adc
pop
inc
sbb
ret
fiadd
mov
push
mov
bound
in
movs
call
es
enter
fdivr
call
jp
and
sar
loope
xchg
daa
das
loopne
call
mov
cmps
stc
or
lea
retf
ret
jecxz
jae
pop
(bad)
mov
mov
cmc
mov
int3
imul
dec
leave
sahf
mov
adc
cmp
adc
mov
jnp
inc
inc
(bad)
and
repz
cmp
inc
jl
daa
cmp
dec
xor
imul
sub
pop
sub
mov
jnp
(bad)
mov
(bad)
jmp
or
pop
sbb
leave
pop
add
jo
enter
or
retf
fcmovnu
fdivr
in
test
bound
or
js
pushf
arpl
adc
sti
test
fstp
jp
pop
dec
mov
imul
sti
dec
add
iret
adc
xor
mov
sbb
into
dec
aas
fnsave
pop
leave
outs
rol
shr
add
adc
mov
dec
leave
aaa
add
push
and
jo
xchg
scas
mov
mov
cmp
and
sbb
mov
mov
add
sub
in
push
daa
aam
cmps
int
adc
minps
in
push
rol
push
dec
mov
scas
int3
push
enter
in
xor
and
cdq
xchg
mov
scas
mov
xor
mov
xor
dec
nop
ror
in
jg
push
lahf
pop
popa
fistp
ja
cmp
test
sub
(bad)
ret
push
sbb
xchg
in
xor
aad
add
das
fidiv
or
jle
fcom
leave
mov
add
or
pop
clc
cmc
xchg
ja
into
cs
mov
out
mov
test
pop
mov
adc
sbb
fs
xor
test
jnp
add
mov
cmp
dec
fisub
jmp
inc
add
or
inc
mov
aaa
dec
add
cmp
aam
aam
int
ja
stc
pop
jns
ins
mov
jl
int
dec
mov
inc
test
lea
adc
push
xor
fistp
sbb
xor
xchg
test
mov
adc
call
lock
inc
push
dec
mov
(bad)
mov
jg
mov
mov
(bad)
mov
dec
jae
mov
pop
add
arpl
mov
mov
cmp
jg
test
push
xchg
jmp
xchg
or
int
inc
and
pop
sti
xor
enter
pop
mov
sbb
pop
adc
not
(bad)
mov
dec
cmp
mov
jp
dec
sbb
cwde
xor
or
push
adc
test
shl
dec
jle
(bad)
out
movlps
rcr
loop
lods
fcmovb
xchg
or
pop
xor
into
pop
push
and
cmp
sahf
(bad)
outs
cmp
add
mov
mov
into
mov
js
outs
pop
sub
mov
cs
sbb
sbb
fadd
pop
jl
int
inc
sub
jg
sbb
jno
ds
adc
inc
jmp
mov
dec
dec
and
mov
jge
lea
sahf
cmp
(bad)
jmp
data16
data16
std
xor
jns
jnp
(bad)
jg
push
(bad)
in
movs
sbb
popf
scas
pop
jle
jge
(bad)
mov
xor
sbb
or
sub
(bad)
jo
mov
leave
inc
mov
icebp
daa
push
call
mul
loop
call
push
mov
outs
imul
int3
xlat
sub
xchg
scas
mov
cs
enter
cdq
sub
mov
adc
sub
pop
in
mov
and
js
ja
scas
popa
jl
stc
inc
test
push
mov
jns
ret
adc
shl
fwait
cli
sub
es
mov
ins
clc
sti
arpl
inc
fdiv
mov
mov
test
jl
pop
mov
pop
sti
adc
fsubr
mov
push
pop
cmp
lahf
dec
ds
jno
lods
(bad)
scas
mov
xor
scas
jo
ret
jp
leave
daa
push
ins
sub
fistp
out
lock
popa
xchg
jno
cmp
or
sar
fxch
push
add
mov
jnp
jno
jle
mov
arpl
xlat
xchg
sub
xlat
data16
cmps
outs
cmps
pop
inc
xor
adc
movs
sbb
mov
adc
movs
leave
adc
jp
shl
fnstcw
mov
sub
jne
mov
adc
add
cmc
fwait
mov
xor
cmc
inc
cmp
mov
add
dec
inc
sbb
mov
sub
sub
neg
jg
push
fld
add
lods
pop
sar
adc
lea
in
sti
int
ds
mov
mov
test
sub
cmp
out
mov
inc
in
pushf
mov
sub
cli
inc
shl
add
sbb
mov
lea
js
clc
mov
ret
outs
and
fadd
pop
std
jns
cmp
fild
aad
sti
mov
mov
inc
xchg
lahf
(bad)
xchg
mov
fild
popf
mov
cmps
jge
or
add
fst
lds
inc
imul
pop
arpl
jnp
sub
jne
sub
cld
xchg
cmps
sbb
sbb
sub
jg
pop
pop
xor
push
test
push
scas
pop
adc
and
cmp
and
mov
xchg
int3
add
fwait
pop
stos
mov
nop
jo
and
lock
cmc
xor
js
test
cs
and
sahf
dec
mov
jns
in
push
and
push
bswap
dec
ins
push
outs
push
stc
shl
jbe
jae
push
mov
movs
sub
aas
les
jne
in
add
xchg
mov
enter
sub
push
(bad)
lea
push
push
mov
mov
pop
sub
js
movs
popa
push
mov
daa
sub
sbb
(bad)
pop
jne
jmp
sbb
push
xor
xchg
rcl
outs
pop
push
imul
jecxz
dec
add
(bad)
(bad)
mov
hlt
pop
repnz
dec
cmp
mov
and
rol
je
and
test
lds
mov
daa
push
test
cmc
xlat
sahf
inc
mov
and
ja
loopne
out
adc
(bad)
int3
repnz
adc
push
or
out
cmp
retf
arpl
nop
lods
jle
je
add
sbb
cmp
outs
xor
push
xchg
xor
stc
push
adc
push
arpl
add
xchg
jp
pop
ss
jne
pusha
ret
lea
add
into
icebp
add
test
(bad)
mov
retf
test
ror
das
adc
mov
inc
fild
(bad)
lock
je
mov
mov
jp
xor
and
add
stc
xchg
adc
inc
outs
std
push
sbb
es
sbb
ins
sti
sbb
xchg
sbb
push
cmp
mov
and
mov
arpl
shr
sbb
xlat
popf
push
pusha
jge
dec
sub
lods
bound
jb
inc
and
add
enter
or
out
shr
pop
pop
xor
das
or
cmp
es
test
dec
loope
mov
pop
int
xor
xor
dec
jp
sahf
lds
fistp
add
in
(bad)
adc
repz
sbb
call
lock
mov
fcom
lds
ins
imul
add
lods
ja
cmp
mov
sar
adc
or
inc
mov
sahf
mov
lods
jb
call
dec
xchg
in
adc
pop
pop
mov
dec
shl
pushf
les
inc
test
in
loopne
ds
fadd
out
iret
das
test
scas
or
cmps
adc
les
cmp
jae
xor
stos
into
int
mov
mov
sub
call
sti
xchg
mul
mov
clc
sbb
popa
push
lea
cmps
mov
shl
sub
scas
arpl
loop
popf
jnp
fst
mov
add
cdq
sub
jmp
push
scas
loopne
dec
and
push
sub
jmp
dec
rcr
fbstp
sub
or
and
repz
push
je
rcr
xchg
pop
ret
inc
mov
push
sub
inc
push
adc
sub
out
pop
outs
adc
inc
push
pushf
in
arpl
and
lods
or
scas
pop
push
and
pop
arpl
clc
int
fwait
and
mov
(bad)
push
jle
or
mov
loope
jp
movs
pop
ins
fwait
jnp
xchg
xor
movs
push
sub
jecxz
adc
mov
sahf
xchg
bound
add
pop
call
sub
sub
xor
retf
adc
sbb
dec
lds
data16
ja
scas
xor
lods
pop
fisubr
jb
push
mov
cwde
jle
fisttp
add
cmp
(bad)
int
dec
cli
xor
xchg
les
cli
cwde
fcomi
dec
push
repz
mov
or
mov
mov
jecxz
call
movs
xlat
nop
xchg
mov
push
int3
push
jl
xchg
add
cmp
repz
push
nop
fild
aad
push
mov
inc
int3
mov
adc
cmps
aas
jo
pop
sar
xchg
bound
sbb
add
out
sub
sbb
iret
lods
imul
cmp
pop
js
(bad)
div
repnz
fcomp
inc
test
dec
jg
xor
xor
or
das
cdq
ss
shl
xchg
lahf
movs
out
js
(bad)
sti
pop
cwde
jl
adc
mov
mov
test
fisttp
add
mov
cmc
push
pusha
call
shl
cmp
gs
call
xor
lea
retf
push
and
hlt
popf
pop
mov
imul
adc
je
mov
lea
ret
aam
xor
fisttp
imul
xlat
inc
push
in
les
aas
add
lods
pop
dec
iret
or
xor
dec
jns
jb
(bad)
icebp
push
push
push
jae
sbb
mov
adc
je
repz
mov
inc
ss
and
es
rcr
js
out
dec
cmp
dec
adc
rcr
pop
dec
imul
bound
fcom
xor
lods
into
daa
loope
sbb
imul
rcr
int3
xor
movs
mov
cs
lds
mov
xchg
movs
xor
jmp
out
(bad)
sub
jecxz
adc
push
sub
cmp
xor
scas
ret
mov
pop
out
stos
inc
(bad)
cmp
xchg
sti
and
mov
shl
aad
pop
xchg
popf
addr16
push
(bad)
(bad)
ret
inc
stc
nop
enter
pop
(bad)
in
es
push
mov
je
aaa
xlat
pusha
sbb
mov
ret
xchg
push
mov
mov
fld
jne
or
push
sti
and
cmc
addr16
xchg
jo
ret
mov
cli
or
pop
jmp
lea
test
dec
add
(bad)
(bad)
lock
pushf
cmp
es
pop
sbb
xchg
sub
loopne
movs
mov
repz
cmc
mov
jle
in
in
push
not
inc
pop
shr
mov
sub
out
outs
shl
pushf
cdq
and
jmp
cmp
pop
jo
push
(bad)
pop
xchg
dec
sub
enter
call
and
mov
sahf
jmp
jnp
aaa
inc
push
in
inc
movs
sbb
sti
push
pop
xchg
and
mov
or
sub
fbld
adc
mov
js
cld
pop
jle
mov
mov
pop
outs
bound
lods
pop
ins
movs
ret
popf
arpl
cmc
add
and
xor
dec
fwait
mov
sbb
(bad)
scas
pop
inc
push
jle
mov
loop
enter
out
adc
add
push
push
ins
lea
adc
in
addr16
mov
shl
dec
fist
daa
mov
and
test
leave
xchg
aam
dec
dec
cmp
fst
dec
gs
sbb
enter
fmulp
cmp
push
cdq
rol
sub
das
fdivr
loopne
or
jg
imul
loop
out
adc
ins
stos
out
pop
jp
ja
shr
add
and
pusha
sbb
mov
jne
rcr
ret
scas
movs
mov
in
xor
ds
std
cmp
clc
movs
ds
mov
sar
inc
inc
test
pop
leave
dec
imul
xchg
and
mov
sbb
push
mov
cmps
stc
in
inc
imul
mov
or
cmp
jbe
out
dec
cli
stos
mov
or
in
bound
mov
pop
jle
popa
or
xchg
jns
adc
stc
(bad)
xchg
aam
ret
sbb
bound
stc
pop
fs
cld
mov
retf
pop
or
popf
sub
arpl
stos
push
mov
repz
je
or
mov
sbb
mov
test
loop
jae
push
jb
gs
dec
aas
loope
nop
jge
(bad)
sti
inc
in
pop
inc
mov
mov
sbb
call
or
shrd
adc
push
pop
vmovups
xchg
cmps
mov
ret
xchg
out
rcr
jl
xchg
dec
dec
test
cli
idiv
ret
mov
fisubr
aas
xchg
cmp
pop
je
(bad)
xlat
and
addr16
retf
jecxz
stos
cmp
sub
cmps
pop
loope
das
xchg
add
je
shl
out
in
(bad)
pop
out
repnz
es
and
jbe
mov
call
push
jp
ja
(bad)
push
xchg
sbb
cmps
sbb
addr16
dec
leave
cwde
(bad)
fdivp
dec
sti
xchg
add
ret
add
inc
fs
pop
and
fldcw
stc
sbb
cmp
(bad)
cmp
ins
jno
pop
cli
dec
test
xchg
xchg
inc
xchg
push
jmp
(bad)
and
mov
sbb
xchg
sub
or
jecxz
fsub
popf
xchg
imul
pusha
lock
mov
mov
movs
push
xchg
mov
mov
jae
push
mov
mov
inc
mov
fcomp
jae
inc
sbb
ss
outs
call
in
fld
test
daa
std
inc
mov
push
loop
mov
lock
test
nop
jp
je
and
rcl
xor
sub
sub
les
cmp
pop
xor
data16
ins
inc
or
shl
mov
popa
jnp
hlt
sub
and
movs
not
jne
sbb
arpl
dec
(bad)
clc
call
ret
(bad)
adc
lahf
nop
cli
add
cmp
push
aaa
ins
in
add
retf
jg
daa
mov
shr
es
out
and
mov
pushf
inc
xchg
aas
into
ins
push
out
pop
fistp
cmps
je
mov
(bad)
je
mov
mov
push
jb
or
jg
add
xchg
mov
fldenv
add
scas
(bad)
or
pop
sbb
iret
sbb
inc
neg
add
adc
or
in
xchg
push
clc
inc
jae
mov
sub
fst
fdiv
rol
mov
popa
inc
cmp
mov
imul
enter
inc
dec
movs
jmp
lods
push
dec
(bad)
call
mov
inc
add
push
or
les
scas
push
xor
shr
adc
fcmovne
ret
and
jl
mov
sti
inc
add
mov
sbb
fwait
jecxz
push
or
stos
retf
push
(bad)
xchg
cld
mov
aas
test
inc
pop
fisttp
stc
les
cmps
and
or
rcr
int3
cmp
pop
imul
stos
cmp
jne
(bad)
stc
cmp
pop
xchg
and
pop
pop
mov
popa
repnz
cmps
int3
mov
int3
sub
pop
push
cmp
cmp
cmc
rcr
dec
xor
inc
test
ficomp
xchg
pop
adc
or
repz
jg
xchg
adc
pop
push
mov
push
jmp
fadd
scas
in
rep
rol
jmp
jmp
mov
popa
inc
mov
fdivr
das
cld
mov
jmp
aad
jl
hlt
scas
mov
ss
or
mov
outs
push
jne
pusha
xchg
jne
sub
and
iret
add
dec
pop
dec
pop
(bad)
mov
push
dec
pushf
lods
aad
cwde
push
retf
bound
jmp
mov
shr
test
retf
or
jmp
push
xor
imul
add
add
dec
add
cmp
dec
or
pusha
xchg
stos
retf
arpl
xor
test
out
pop
fidivr
inc
pop
call
popf
lahf
test
push
jo
xor
cmp
imul
cmps
xchg
(bad)
arpl
push
ins
xor
fstp
mov
shr
scas
sub
push
add
jmp
sub
hlt
fwait
cmps
sbb
imul
inc
push
cs
add
movs
(bad)
xchg
adc
push
pushf
jp
adc
rcl
test
fidivr
sahf
into
ss
repz
push
mov
movs
pop
out
cmp
mov
out
inc
adc
mov
push
and
xor
pushf
cwde
ins
add
cmp
ins
lds
pop
cwde
pop
outs
jno
scas
mov
fidiv
mov
pop
aaa
jge
je
(bad)
fwait
xor
call
dec
or
in
push
and
es
jnp
fcos
inc
aam
aam
mov
jp
loop
push
cwde
mov
cmp
adc
movs
inc
shl
pop
ds
movs
mov
pop
adc
cmps
int3
ror
imul
adc
(bad)
aam
pushf
movs
push
out
(bad)
outs
fidiv
jmp
outs
xor
jno
pop
adc
jbe
aad
push
in
adc
frstor
cwde
mov
mov
es
xchg
aam
jo
fild
dec
add
nop
js
mov
sub
rcr
or
dec
aas
fstp
ins
adc
pop
sbb
test
dec
in
jns
jno
ret
pop
sub
sub
js
add
test
mov
fs
sbb
mov
in
and
mov
jge
ret
in
shl
push
fst
shr
shr
scas
cmp
dec
retf
stos
cmp
mov
int
sub
mov
icebp
adc
xor
add
sub
sar
sub
ja
sub
dec
fwait
lds
xlat
mov
aam
call
outs
retf
cmps
adc
sbb
push
pop
or
test
lea
add
push
inc
sbb
ret
lahf
pop
jbe
ss
nop
movs
xchg
jmp
aam
mov
mov
arpl
and
ja
sub
arpl
loop
cmp
ss
xchg
sub
loopne
push
push
and
sbb
iret
into
and
add
push
mov
lahf
test
jbe
int3
cwde
sub
pop
outs
leave
xchg
sbb
pop
fnstenv
cs
push
xchg
(bad)
mov
daa
and
adc
jmp
sub
and
adc
ins
dec
iret
xor
daa
jbe
xor
out
outs
jnp
push
lods
paddd
mov
outs
sbb
stc
popf
dec
ss
xor
lods
mov
jmp
rcr
pop
add
ds
xlat
sahf
sbb
or
cmp
lea
push
fcom
push
inc
lahf
pusha
cmp
jbe
fild
mov
cmp
mov
xor
adc
pushf
call
jns
adc
test
call
outs
in
test
in
nop
repz
jecxz
mov
jne
add
int3
ret
push
pop
out
loop
sbb
sub
xchg
push
push
fist
xlat
sbb
imul
shl
mov
xchg
xchg
xor
mov
dec
adc
mov
cdq
outs
imul
fbld
sub
mov
pop
ret
test
sti
lods
std
sub
xchg
stos
pop
xor
fidivr
stos
mov
and
mov
jo
push
push
and
dec
fs
cld
fwait
dec
test
inc
xor
dec
in
or
and
adc
out
jg
jo
cmps
js
sub
sbb
movs
(bad)
pop
mov
jae
sub
jecxz
mov
mov
js
mov
mov
ret
sub
mov
repz
std
iret
hlt
xchg
mov
scas
inc
mov
jmp
pop
push
int3
jmp
imul
scas
scas
pop
or
pop
cld
jl
arpl
aas
push
push
dec
out
jp
inc
lods
stc
cwde
jl
dec
sbb
ret
pop
mov
sbb
ret
pop
nop
idiv
push
adc
ror
js
jb
aam
jg
mov
mov
inc
es
mov
es
popa
mov
xor
outs
adc
mov
lds
shl
iret
cmp
push
shr
mov
sbb
call
xor
mov
or
outs
mov
add
lahf
sti
jmp
cmc
sbb
ror
jnp
adc
jbe
push
pop
fs
xchg
xchg
inc
mov
adc
movs
push
push
int3
add
pop
test
mov
ret
sub
xchg
(bad)
repnz
fcom
mov
(bad)
fiadd
adc
sbb
dec
and
inc
inc
sbb
mov
xchg
xchg
dec
int
ret
pop
repz
les
pop
call
adc
mov
jae
xor
or
out
out
aad
in
call
ins
out
mov
dec
jmp
jmp
dec
mov
mov
jno
adc
pop
push
push
(bad)
scas
sbb
mov
imul
push
inc
jle
jae
xor
out
loope
sbb
repz
stos
jle
sbb
je
add
mov
dec
jmp
sbb
adc
jecxz
aaa
adc
inc
sbb
pop
outs
test
mov
sahf
movs
mov
ret
cmc
aas
cmp
ret
or
adc
fcomp
inc
movs
or
xchg
enter
dec
aad
cwde
data16
jmp
in
jmp
popf
repnz
dec
xchg
in
mov
stos
lahf
push
push
cmp
idiv
repnz
in
mov
fnstenv
xlat
add
fwait
pop
cmp
bound
sbb
nop
and
aad
jp
or
data16
push
stos
fild
ins
(bad)
out
or
out
pop
push
lahf
(bad)
and
jno
inc
jo
jne
in
or
cpuid
movs
(bad)
lock
pop
pop
test
dec
or
movs
xor
add
in
mov
mov
ins
mov
mov
aas
xor
dec
shl
in
fsub
pop
and
mov
popa
dec
repz
cmp
lds
and
jnp
sub
mov
movs
and
addr16
in
xor
adc
mov
dec
mov
dec
shr
aad
int
stos
xchg
jae
inc
ds
test
xchg
jg
adc
xor
outs
dec
jg
je
mov
and
mov
or
push
loope
sbb
pop
mov
and
or
jg
(bad)
std
mov
mov
in
sub
jge
mov
sbb
loope
jb
add
add
mov
jmp
gs
sub
ins
xchg
test
inc
stc
inc
push
into
or
adc
stc
dec
xchg
jecxz
out
mov
ret
test
mov
daa
pop
test
pop
not
xchg
jl
dec
repnz
push
stos
push
in
fcom
add
sbb
pop
mov
call
dec
xor
sub
in
je
aam
mov
add
cmp
xchg
cmp
lahf
in
or
out
aad
mov
mov
shr
cmps
test
cwde
into
clc
mov
add
jmp
mov
pop
cmp
(bad)
xchg
mov
pop
(bad)
cmp
(bad)
test
rcl
lock
jnp
leave
adc
aas
pop
int
fcmovnu
add
adc
cmp
jb
mov
iret
or
sub
movs
sbb
lock
push
jecxz
dec
dec
sbb
push
sbb
xchg
cmp
rol
cdq
xchg
jge
loopne
(bad)
(bad)
xchg
xchg
call
(bad)
sbb
pusha
repnz
lods
xchg
add
mov
retf
ins
pop
sub
push
or
xchg
stos
lods
sbb
and
xor
dec
xor
xchg
ins
js
mov
(bad)
push
and
ja
sbb
pop
inc
into
or
lock
ins
push
cmps
xor
adc
or
mov
inc
push
in
dec
loope
mov
push
cmps
and
and
cld
call
pusha
(bad)
cld
(bad)
std
lock
lds
add
aad
fcom
jge
es
stos
aas
xor
dec
adc
(bad)
xor
popa
lahf
push
call
sahf
repz
call
inc
pop
dec
inc
fs
jne
or
mov
mov
cs
cdq
or
mov
or
xchg
add
cdq
hlt
and
(bad)
test
push
cwde
out
pop
jl
jp
mov
add
cdq
adc
retf
add
ret
(bad)
daa
jp
jno
sbb
repz
sbb
pushf
std
sub
add
scas
pop
fdivr
sub
sbb
das
inc
push
cmps
outs
sbb
out
mov
inc
mov
cmps
mov
jne
mov
mov
sub
pop
adc
sbb
retf
dec
rcl
xchg
ss
or
nop
dec
(bad)
sub
fisubr
(bad)
xor
je
mov
fcom
lea
mov
jo
in
xchg
cwde
int3
mov
hlt
and
ins
push
rcl
push
inc
pop
outs
call
cmp
sbb
mov
mov
aam
cwde
shl
scas
push
cmps
mov
cmp
(bad)
cmovns
push
stos
mov
fistp
dec
dec
push
dec
jp
mov
pop
js
shl
call
inc
sub
pusha
adc
out
push
stc
xlat
je
jle
jno
cmp
add
mov
add
bound
xchg
push
or
dec
lods
cmp
dec
mov
lods
pop
call
(bad)
push
inc
out
add
sub
adc
adc
xchg
xor
mov
pop
inc
and
mov
lock
mov
jmp
maskmovq
imul
js
addr16
inc
push
and
lahf
push
pop
test
add
mov
jle
mov
inc
leave
mov
inc
rcl
pop
ds
retf
mov
outs
ficom
or
sub
shr
mov
pop
cmp
jmp
pushf
out
jecxz
ror
cmps
leave
test
xchg
repnz
sub
jl
inc
movs
sbb
add
out
dec
call
aaa
into
pop
fs
push
mov
outs
gs
push
push
cdq
or
lods
xchg
xchg
sbb
sub
mov
and
mov
inc
inc
inc
xor
mov
add
mov
add
call
adc
and
dec
fwait
in
test
dec
and
outs
inc
aam
dec
pop
jo
retf
mov
mov
inc
push
sbb
dec
(bad)
push
dec
inc
cli
push
jne
cs
movs
clc
mov
call
dec
scas
pop
mov
mov
jp
push
int
mov
loope
fisttp
sub
scas
int
mov
mov
adc
adc
(bad)
ffreep
cmp
cwde
or
mov
pop
xor
and
push
pop
cmp
ficom
out
push
dec
les
lock
jo
and
adc
adc
imul
les
mov
aaa
fidivr
inc
add
cli
mov
xchg
rol
cmp
pop
adc
xor
call
pop
mov
sbb
or
mov
pushf
push
rcl
mov
loopne
retf
xchg
add
scas
mov
xor
retf
mov
sbb
shl
pop
(bad)
xor
adc
sub
and
mov
mov
pop
in
mov
out
je
sbb
or
xor
outs
mov
add
fild
imul
push
adc
into
lods
stos
mov
xchg
repz
mov
adc
push
int
add
popa
aad
das
add
pusha
pop
pop
xchg
popf
lods
fadd
sbb
(bad)
repnz
inc
add
pop
cmps
fnstenv
out
mov
push
xor
loop
mov
add
dec
lea
ss
jbe
icebp
repnz
mov
add
sub
jl
push
cld
out
(bad)
sar
push
push
mov
xor
push
(bad)
std
fwait
imul
mov
pop
cmps
arpl
xor
xor
out
out
movs
pop
fidivr
mov
or
push
jne
xor
xlat
push
mov
ins
add
fdiv
int3
repnz
minps
xchg
xchg
outs
adc
xchg
mov
sbb
fimul
add
mov
mov
fsubr
mov
pop
pop
mov
pusha
imul
lock
mov
mov
retf
jecxz
fsub
dec
retf
jns
push
cmp
(bad)
cmc
gs
or
shl
sti
push
pop
cmp
iret
xchg
and
gs
add
fidivr
imul
xchg
imul
dec
pop
rcl
dec
push
retf
in
push
sbb
daa
xchg
pop
pop
xor
retf
add
inc
imul
test
test
sub
outs
int3
mov
rcl
ret
out
add
ins
test
jb
arpl
(bad)
je
push
jnp
enter
xor
addr16
fidiv
inc
pop
stc
xlat
arpl
dec
xor
aad
push
aad
out
in
adc
jl
les
mov
dec
adc
sub
mov
push
idiv
icebp
scas
lds
adc
cmp
sbb
std
xchg
pop
sub
sub
jb
xlat
repnz
test
jmp
pop
adc
sbb
rcl
push
not
out
ins
sbb
jg
add
jl
scas
xlat
pushf
retf
xchg
push
add
pop
pop
inc
jae
aad
imul
inc
out
jnp
sub
and
pushf
pop
fidiv
pop
push
fsubr
sub
cmp
mov
xchg
adc
inc
hlt
shr
nop
or
sbb
es
cmp
gs
mov
call
xchg
stc
jp
ds
pop
sahf
stos
fs
inc
adc
enter
xor
aam
imul
adc
(bad)
and
outs
retf
inc
sbb
xchg
gs
jnp
push
jo
jmp
adc
push
stos
bound
fild
into
fcomp
ret
cmps
inc
inc
mov
rol
ss
mov
mov
xor
or
mov
lds
repnz
pop
aam
push
sbb
jmp
mov
sbb
pusha
pand
jmp
dec
in
sbb
mov
and
shr
pop
fsubr
adc
xchg
lods
aad
mov
dec
and
hlt
scas
test
mov
or
shl
adc
mov
mov
push
imul
repnz
out
and
(bad)
sbb
push
pop
pushf
ret
push
ins
ins
out
or
pop
and
call
push
push
add
shr
(bad)
jp
push
cld
test
cdq
sub
ret
inc
call
int3
(bad)
(bad)
ins
out
popa
(bad)
(bad)
add
ficom
loope
xor
and
shl
call
movs
push
retf
(bad)
jnp
aad
jecxz
sub
int3
push
imul
mov
int
popf
add
les
fs
push
inc
push
xchg
dec
mov
xchg
out
sbb
adc
jbe
les
xor
sub
fs
mov
jae
jno
aad
push
push
pusha
cwde
pop
adc
and
ja
(bad)
dec
cmp
in
pop
outs
adc
aad
add
shl
mov
pop
add
mov
mov
xchg
dec
test
pop
or
and
cmps
int3
je
(bad)
xchg
mov
(bad)
stc
call
pop
xchg
fild
inc
push
cmp
xchg
xchg
cmps
out
xor
mov
clc
inc
cmp
popa
dec
cs
aam
jne
add
inc
jecxz
pop
dec
sbb
inc
aam
enter
mov
scas
dec
std
or
call
imul
lahf
push
(bad)
(bad)
mov
ins
add
sub
adc
or
sbb
loopne
xchg
scas
push
outs
(bad)
not
mov
popa
imul
jecxz
or
adc
or
out
or
(bad)
rol
mov
repz
fimul
add
mov
push
mov
add
push
add
retf
xor
dec
mov
cmc
test
mov
push
pop
(bad)
jne
xchg
shl
pop
addr16
test
xor
mov
mov
inc
xlat
es
ds
mov
inc
push
dec
(bad)
cdq
aad
in
lods
lods
mov
adc
cmp
cmp
xchg
mov
scas
outs
psrlw
test
out
fcom
cmp
fs
xchg
test
popf
dec
sti
sub
dec
stos
jns
and
test
fld
pop
pop
es
call
sub
mov
mov
aam
iret
into
enter
les
loope
push
out
out
mov
push
mov
adc
mov
push
mov
sub
dec
sar
cdq
mov
xchg
in
das
iret
pop
fcomi
mov
push
test
out
inc
scas
popf
sbb
sub
xchg
or
sbb
dec
sbb
aas
cmc
sahf
or
mov
cwde
stos
xchg
mov
sub
inc
pop
and
imul
rcl
mov
stos
jo
dec
pop
cmps
sahf
loop
pushf
loope
fnstenv
lahf
dec
arpl
fs
aaa
scas
jp
test
call
bswap
dec
cmp
adc
outs
and
or
and
test
sub
adc
adc
dec
test
or
or
xchg
ja
aam
dec
cdq
jge
pop
jns
(bad)
mov
popf
sahf
add
add
jmp
call
xchg
jge
stos
mov
mov
xor
retf
call
les
arpl
xchg
xor
jb
mov
aam
sbb
movs
test
fld
mov
jmp
aaa
xchg
aas
test
loope
sbb
jle
sbb
jno
cdq
fcom
pop
lds
mov
(bad)
dec
repz
sub
jmp
xor
shl
push
inc
fadd
cmp
and
enter
mov
push
cs
push
add
movs
xchg
jecxz
lea
dec
and
add
pop
ds
shr
fsubr
fld
inc
or
daa
xchg
aas
lea
push
and
sar
nop
popa
test
inc
idiv
cmps
cmp
out
test
das
inc
pop
add
xor
aaa
cmp
out
xchg
mov
cmp
jmp
sub
sbb
push
es
jo
jmp
mov
mov
sub
outs
rol
stc
add
adc
pop
pop
stc
into
not
iret
aaa
pop
xor
pop
mov
dec
pop
daa
jns
mov
ins
std
fnstenv
ins
jp
mov
cdq
add
aas
mov
scas
sar
xchg
in
fst
and
call
pop
je
mov
or
jae
xchg
fmul
stc
ins
adc
ret
fcmovb
inc
popf
xchg
push
clc
or
(bad)
fld
test
sub
sbb
pushf
movs
out
dec
mov
ins
fsub
adc
test
ins
(bad)
ins
push
cmps
inc
shl
pop
and
pop
mov
popa
jb
adc
mov
sbb
mov
mov
(bad)
and
adc
mov
mov
sub
jns
mov
leave
jmp
aam
sti
pop
xchg
jmp
in
xchg
cmp
sbb
imul
stc
xor
icebp
cs
push
jle
xchg
cmps
cmc
cmp
pushf
xor
aas
push
mov
cld
aaa
call
pop
cmps
dec
mov
fbld
in
sahf
ins
sub
or
cmp
test
pusha
mov
jl
lock
or
inc
pop
retf
mov
xor
loop
rcl
jge
icebp
add
jmp
sbb
rcr
inc
imul
or
shl
(bad)
mov
xchg
cmc
mov
mov
test
mov
cmp
lahf
lds
jno
sub
add
mov
dec
dec
cmp
sub
sbb
cmp
pop
inc
dec
sbb
inc
fdivr
fist
cs
dec
call
mov
(bad)
or
push
mov
add
in
sub
and
stos
cdq
shl
dec
sbb
add
leave
add
popa
pop
xor
cwde
add
or
xchg
or
mov
rcl
and
test
add
add
outs
jp
and
or
call
xor
mov
add
cmp
fs
push
push
in
mov
xor
pushf
nop
inc
push
xor
sbb
in
xchg
dec
xor
inc
fwait
push
jl
xchg
lahf
push
loop
ret
retf
mov
pop
(bad)
retf
setbe
adc
icebp
rol
adc
arpl
jge
js
into
lahf
dec
push
ds
adc
mov
mov
or
aas
repnz
ret
cli
sbb
fiadd
movs
cld
cmp
out
das
in
mov
es
in
ja
push
xlat
ret
(bad)
in
jae
es
pop
mov
aaa
cmp
and
mov
frstor
sub
or
adc
ret
mov
adc
xchg
xorps
stc
or
lahf
sub
pop
pusha
dec
pop
jmp
in
mov
jo
jge
pop
adc
xor
and
fnstenv
retf
cmp
les
stos
cmp
jbe
icebp
out
pop
mov
ret
iret
mov
mov
pop
das
dec
popf
(bad)
aad
(bad)
mov
nop
dec
jne
cmps
mov
popf
xchg
adc
cmp
and
or
fdivr
xchg
pop
dec
std
je
mov
mov
pop
sub
mov
in
imul
adc
nop
idiv
sbb
xchg
lahf
jne
cmp
xor
loop
fcom
fldcw
mov
fcmovb
sub
push
test
outs
jle
mov
mov
mov
cmp
sub
pop
or
jae
inc
mov
adc
cmp
rcl
add
add
mov
fdiv
dec
pop
mov
sbb
mov
stc
popa
mov
fxch
dec
mov
test
push
mov
cmp
in
(bad)
aas
imul
sub
loopne
cmps
add
cdq
cmc
push
mov
push
cmp
fild
mov
cli
(bad)
mov
jno
jno
xchg
stos
adc
dec
dec
lds
std
mov
sub
call
jge
fistp
fcom
jle
(bad)
push
ss
mov
jg
push
jae
xlat
out
sti
cmp
inc
cmp
mov
test
xchg
push
pop
sbb
pushf
ror
scas
mov
adc
rcl
cmp
mov
ss
mov
shr
jmp
(bad)
retf
imul
sub
add
mov
pop
in
adc
xchg
xor
icebp
fild
push
cmps
push
icebp
xchg
and
push
ss
cmp
call
jmp
xchg
dec
les
ds
xor
inc
jmp
test
adc
repnz
inc
mov
loop
data16
adc
adc
push
or
fst
out
mov
dec
add
rcl
mov
in
in
pushf
add
or
div
cmp
xchg
dec
mov
aad
sbb
lods
dec
sbb
mov
mov
daa
in
xor
pop
imul
jle
retf
jbe
push
nop
pop
mov
inc
xor
and
pop
mov
mov
out
sub
fst
add
and
sbb
sbb
dec
ins
popf
inc
repnz
es
mov
mov
xchg
popa
xor
push
dec
cmp
fistp
xrelease
fist
mov
pop
fadd
aad
std
lock
or
pop
stos
les
ss
ins
and
bound
inc
xchg
mov
add
mov
or
es
inc
ret
shl
inc
test
inc
imul
sub
cdq
xchg
add
adc
ret
aam
cmp
mov
adc
mov
je
addr16
and
arpl
outs
mov
test
push
pushf
ret
sbb
mov
add
ret
adc
cdq
adc
(bad)
jae
and
push
inc
sub
mov
test
aaa
(bad)
and
inc
aas
sub
js
dec
popf
ins
in
out
aaa
repnz
and
mov
scas
loop
bswap
ins
sub
sub
mov
jecxz
lahf
stc
cmps
mov
fstp
cmp
jp
sti
push
addr16
xchg
jae
mov
icebp
movs
mov
cmp
das
jmp
push
movs
add
jg
test
movs
add
pop
(bad)
jns
dec
(bad)
jmp
push
inc
push
loope
adc
lds
inc
xchg
test
jecxz
outs
mov
mov
push
in
in
mov
push
cwde
or
aad
cmp
sub
pop
cmp
inc
jp
cld
rcl
jo
lahf
bound
and
test
cmp
outs
aaa
jns
lahf
int
pushf
push
and
xchg
jnp
dec
push
adc
das
clc
cmps
pop
(bad)
scas
ret
inc
loope
add
clc
in
out
call
sti
mov
cmp
add
and
call
rcl
sbb
sbb
add
cwde
mov
inc
and
mov
imul
je
fs
jno
lds
movs
mov
mov
or
mov
xchg
push
jp
mov
mov
shl
adc
addr16
push
jmp
outs
fistp
push
cmp
das
ja
popa
mov
(bad)
shr
jmp
pop
call
movs
mov
sub
and
xchg
mov
or
cmp
call
pop
aaa
lods
sub
movs
mov
xchg
mov
xor
sti
and
in
in
mov
jge
int3
cmp
dec
inc
retf
add
nop
sub
sbb
jbe
imul
jp
inc
in
lds
mov
dec
inc
les
fild
adc
or
clc
xor
cli
xchg
jb
push
es
sbb
xchg
sbb
pop
repz
add
xchg
lods
jecxz
inc
enter
mov
ins
gs
mov
lods
aam
xchg
(bad)
pop
or
ss
sar
inc
cmp
dec
xchg
loopne
dec
gs
sub
fiadd
sub
repz
cmp
mov
cmc
mov
dec
mov
mov
push
jnp
xchg
mov
mov
jmp
shl
(bad)
loopne
into
add
arpl
cmp
call
push
mov
mov
mov
mov
xor
sbb
and
adc
or
ja
call
cmc
sub
jp
cmc
jmp
dec
push
inc
ja
das
movs
es
ret
dec
push
push
mov
jmp
xor
xor
sub
push
push
neg
hlt
or
pop
pop
lods
mov
cs
loopne
pop
mov
sbb
das
xchg
ins
mov
mov
inc
xchg
fidivr
mov
cld
xor
fist
call
inc
mov
int3
mov
rcl
pmuludq
lods
or
and
(bad)
jo
fwait
outs
inc
sbb
or
ret
dec
or
adc
cmc
std
data16
fs
fnstsw
lds
sbb
in
xchg
and
xor
call
jp
push
clc
adc
and
aam
or
xor
push
cmp
mov
adc
and
fidiv
test
sub
and
sub
or
aas
call
dec
cli
cmp
push
inc
push
add
lock
fadd
bnd
stc
push
outs
adc
sbb
mov
ror
aam
loop
mov
mov
and
mov
push
push
xchg
or
mov
mov
(bad)
jl
js
fs
xchg
sub
rdmsr
mov
xor
rol
push
cld
push
int
inc
pop
mov
inc
adc
or
sbb
inc
imul
mov
or
add
add
and
pushf
jb
sbb
xchg
ds
into
inc
or
bound
fild
or
fbstp
xor
ror
fst
shl
add
movs
xor
dec
ins
jecxz
popa
push
test
aad
es
fidiv
push
sub
sar
and
cwde
jbe
(bad)
jmp
jle
cli
adc
dec
inc
pop
rcr
loope
into
into
or
inc
cli
cmps
lds
cmp
stc
popa
dec
xchg
pop
pusha
dec
fsub
mov
mov
pop
jmp
cmps
imul
vmovhps
jnp
inc
inc
and
push
fcom
bound
movs
out
cmp
pop
cmp
sbb
mov
ins
lods
xor
cmp
pop
adc
xchg
movs
jge
jle
das
push
lahf
pop
(bad)
mov
mov
jge
mov
mov
sub
and
add
cdq
dec
inc
mov
ja
mov
in
inc
hlt
jg
jp
arpl
sub
loope
mov
pusha
mov
adc
aas
out
xor
mov
xor
std
in
xor
push
shr
lds
sbb
mov
pop
loopne
mov
enter
mov
jne
xchg
or
sbb
and
mov
(bad)
repz
arpl
adc
add
das
outs
adc
inc
das
or
rcr
lock
inc
fwait
sbb
(bad)
je
in
imul
jo
xchg
pushf
cli
idiv
jmp
jecxz
out
cmp
mov
repnz
ret
popa
mov
rcl
push
inc
add
(bad)
cmp
js
or
cmc
scas
call
cmc
das
adc
mov
imul
inc
shl
xchg
imul
jno
ss
loop
out
ins
fwait
add
bound
xor
sahf
dec
sbb
and
shl
xor
cmp
mov
test
test
(bad)
nop
jno
je
pop
fiadd
aam
mov
iret
mov
popa
popa
inc
mov
adc
cmp
addr16
fisub
sbb
jecxz
mov
jnp
mov
pushf
push
inc
outs
sbb
push
outs
jns
rcl
mov
test
push
mov
add
pop
data16
les
mov
out
fwait
and
sub
dec
mov
dec
inc
inc
push
add
retf
setg
pop
nop
adc
in
inc
ss
pusha
das
pop
stos
adc
imul
gs
jl
mov
sbb
mov
xchg
mov
cmp
in
push
dec
scas
jmp
retf
(bad)
dec
mov
jne
mov
bound
jno
dec
pop
sub
in
sbb
inc
mov
jg
shl
popf
out
adc
push
cmps
rol
(bad)
mov
nop
adc
mov
pushf
add
addr16
loop
add
push
xor
je
popf
push
out
data16
push
cli
out
xor
mov
push
es
inc
mov
or
pop
jmp
aad
daa
cld
call
test
call
sbb
retf
hlt
not
push
push
inc
hlt
pusha
sete
dec
mov
pop
and
call
test
pop
mov
out
push
sub
mov
sub
(bad)
jg
dec
add
xor
sbb
mov
sbb
cmp
in
or
dec
dec
les
bound
jmp
inc
jne
mov
mov
repz
mov
jo
in
pop
xor
mov
or
add
fs
stc
imul
fsub
fistp
aad
imul
adc
arpl
pop
xchg
mov
mov
(bad)
push
cmps
retf
mov
ffree
retf
cmps
loope
hlt
out
mov
adc
int3
jg
jmp
sbb
fldcw
sub
das
mov
inc
and
adc
push
inc
adc
inc
dec
imul
out
fmul
aam
fstp
dec
sbb
jmp
std
outs
and
clc
xor
push
adc
aas
repnz
mov
retf
aad
mov
call
jmp
jl
mov
mov
inc
loope
jle
ds
fbld
push
stc
jle
mov
fadd
fstp
mov
lea
ins
(bad)
xor
lods
out
xchg
mov
fmul
sbb
lock
pop
pop
ret
pop
jns
(bad)
mov
sar
xor
mov
jae
push
daa
shl
fnstcw
das
xchg
jl
imul
stos
cmp
ret
jp
(bad)
test
pop
sub
cwde
mov
dec
cmp
jno
sar
fbstp
fcmovne
(bad)
xchg
ror
aaa
out
mov
ja
loope
jp
in
jecxz
out
and
dec
das
es
jle
imul
in
or
adc
push
ja
push
rol
sbb
test
nop
push
test
sbb
pop
leave
cmp
frstorw
std
into
adc
popf
ins
aas
daa
pushf
outs
sbb
push
aam
fcmovne
aaa
xlat
test
and
push
outs
frstor
mov
inc
xchg
sub
pushf
pop
push
popa
lock
sub
push
(bad)
fnstcw
frstor
scas
gs
arpl
add
hlt
outs
sub
sti
int3
mov
addr16
push
inc
add
jg
neg
mov
mov
pop
mov
loope
inc
adc
or
emms
dec
sbb
jg
and
scas
inc
neg
cmps
(bad)
push
xchg
xchg
ss
arpl
jl
fdiv
push
cmp
ins
stos
cmps
ret
scas
dec
cwde
imul
sbb
(bad)
fist
fistp
jne
inc
fidivr
sbb
or
out
or
xchg
push
outs
adc
or
mov
xchg
call
shr
jg
lea
cdq
enter
and
shl
out
push
mov
jp
dec
pop
stos
mov
adc
or
loopne
popa
dec
adc
adc
neg
ins
push
in
jb
ror
std
add
sbb
push
arpl
mov
pop
fsubr
push
enter
sub
xor
jp
hlt
ret
pop
inc
mov
cmp
or
sbb
dec
push
push
sub
mov
mov
xchg
scas
cli
sbb
dec
mov
sub
adc
sbb
xchg
adc
or
push
pop
bound
cmc
outs
push
jl
mov
push
mov
setbe
movs
loopne
dec
test
std
or
adc
jmp
mov
(bad)
sti
test
xor
out
mov
or
push
pop
cmp
mov
add
cmc
push
shr
and
jmp
clc
pop
pop
pop
mov
pop
inc
(bad)
loopne
add
mov
push
xlat
es
pop
mov
jl
cli
out
mov
push
out
out
add
int3
add
fadd
push
add
sbb
xor
jae
xor
ins
enter
cmp
ss
push
jo
sbb
rcl
mov
or
out
rol
sbb
sub
push
int
test
adc
cwde
cli
pusha
in
pop
sub
sub
fisubr
pushf
sbb
adc
sbb
shl
mov
repnz
cmp
mov
out
dec
test
xor
cs
mov
mov
ds
mov
arpl
dec
and
jp
(bad)
xrelease
clc
cmps
fwait
sbb
das
(bad)
and
and
ret
jns
popf
fist
mov
inc
int
out
sbb
into
ins
movs
xchg
int
sub
push
cld
lahf
dec
test
sar
push
sahf
les
test
mov
xchg
cmp
xchg
ficom
loope
jecxz
sub
adc
or
mov
push
shl
adc
cmp
not
jp
in
mov
les
fcomp
sbb
inc
lea
add
add
daa
fs
xchg
outs
push
out
pop
imul
shl
mov
nop
ror
mov
mov
push
rcr
jecxz
(bad)
xor
push
pop
mov
xlat
and
mov
call
jae
(bad)
xlat
or
jge
mov
ficomp
pop
bnd
int
inc
push
aas
pop
add
(bad)
cmc
dec
push
and
sub
mov
daa
mov
imul
scas
or
adc
or
cs
jmp
lods
add
aad
jmp
sahf
loopne
mov
movs
sti
pop
jle
jg
popa
sub
ficomp
sahf
retf
sub
stc
and
enter
mov
sub
cli
adc
jno
clc
mov
cs
std
scas
xchg
mov
dec
pop
mov
sub
das
pop
movs
jnp
in
(bad)
lea
outs
lahf
sbb
loop
mov
push
lds
and
or
arpl
enter
mov
fmul
aas
cmp
int3
xchg
pop
shr
int3
shl
xchg
scas
aam
enter
pusha
pop
mov
adc
dec
aad
mov
and
lods
(bad)
jg
mov
mov
retf
push
(bad)
lods
fs
or
inc
mov
mov
mov
jne
cli
out
pop
or
dec
inc
mov
dec
pushf
pop
lods
dec
cmps
out
outs
mov
fcom
frstor
stos
ret
adc
xor
xchg
pop
inc
sub
sbb
retf
ja
lahf
sar
rcr
les
out
lods
(bad)
pop
pop
sahf
xor
lods
cmp
popa
dec
in
sub
cmp
pushaw
push
pop
mov
adc
fdivp
adc
and
lahf
dec
pop
cmp
cmc
lods
icebp
sar
inc
adc
test
xchg
cmp
sbb
pop
adc
push
nop
cmps
rcl
mov
ins
fiadd
inc
push
shrd
jo
pop
dec
pusha
(bad)
int
xor
xor
stos
ja
test
add
adc
dec
add
ss
fsub
test
inc
dec
jp
addr16
mov
push
pusha
dec
push
push
cmp
test
outs
dec
sbb
rcl
adc
mov
inc
enter
adc
fldenv
push
stc
mov
cmp
mov
lea
sbb
mov
scas
dec
xchg
lods
into
rol
cmp
(bad)
mov
or
sbb
repz
mov
lds
sti
and
mov
scas
xchg
inc
sub
adc
xor
fchs
(bad)
hlt
jb
push
addr16
fwait
out
pop
push
retf
(bad)
jnp
ds
outs
push
repz
xor
push
cs
dec
cld
jae
push
mov
cmc
lods
call
dec
inc
test
and
mov
imul
xor
lods
or
cld
cwde
outs
in
cwde
inc
lock
sbb
mov
push
mov
rcr
int
hlt
inc
daa
(bad)
(bad)
jp
sbb
nop
jp
iret
pop
or
mov
pop
sub
in
ret
scas
sbb
imul
mov
call
push
cld
cdq
mov
and
test
sub
popf
rcr
nop
push
and
mov
inc
repnz
hlt
cs
xchg
add
push
inc
xor
jl
jno
sahf
or
xchg
(bad)
in
add
nop
outs
(bad)
in
out
push
xchg
xchg
loope
push
mov
push
dec
loopne
inc
sbb
xor
sub
ins
shr
push
adc
(bad)
jmp
adc
or
out
repnz
add
ins
fdiv
outs
imul
pop
rol
inc
cmp
pop
jge
bound
lahf
fild
jnp
out
dec
dec
dec
in
xchg
imul
cs
inc
push
test
dec
stos
dec
test
mov
frstpm(287
pushf
adc
cmp
pop
mov
adc
ins
or
mov
add
fstp
(bad)
int
push
add
rcr
loop
xor
adc
pop
adc
fidivr
enter
mov
xchg
cmc
ret
es
sub
mov
push
pusha
add
inc
push
mov
xchg
in
push
in
(bad)
pop
cmps
xor
fwait
xchg
push
inc
pop
(bad)
mov
xchg
pop
lea
inc
add
hlt
push
retf
lods
sar
inc
mov
mov
jmp
dec
adc
dec
outs
adc
loop
adc
lea
push
jg
int
aam
into
or
xchg
enter
mov
test
adc
shl
out
(bad)
xor
inc
inc
fisubr
iret
imul
pop
sbb
sbb
mov
push
mov
cmp
xor
push
sbb
push
out
ficom
dec
lods
(bad)
aas
in
ja
popa
ror
pop
jl
mov
xlat
(bad)
mov
mov
xor
xchg
in
call
sub
mov
sahf
inc
rol
and
js
xor
das
mov
xchg
push
call
xchg
cmp
push
lds
fld
loope
mov
mov
mov
mov
ins
xchg
push
pop
mov
lock
sub
sub
dec
xchg
outs
inc
pop
mov
hlt
popa
inc
mov
lods
xchg
jge
sbb
mov
push
cmp
imul
dec
cld
add
data16
xchg
cmp
les
jo
jle
mov
jmp
call
dec
sub
ins
sahf
popf
sub
push
xchg
mov
adc
das
mov
add
or
cmp
retf
jmp
sbb
adc
push
cmp
movs
ins
pop
mov
jo
mov
(bad)
fcomip
inc
mov
jg
or
mov
jle
cmps
addr16
add
jecxz
popa
push
xor
xchg
xchg
jmp
pusha
push
(bad)
les
fcomip
inc
mov
mov
clc
push
ins
dec
xchg
stc
add
pop
pop
stos
cld
jbe
sar
inc
mov
call
je
loope
jne
pop
xor
int3
dec
mov
add
test
stc
mov
cmp
imul
mov
adc
aaa
sbb
sub
in
jo
inc
xor
push
and
mov
push
(bad)
mov
(bad)
sti
call
pop
nop
pop
(bad)
xchg
test
or
fadd
add
aad
inc
mul
and
sbb
enter
adc
xchg
ins
add
mov
jns
mov
ror
scas
leave
retf
and
fidivr
xor
fsubr
sahf
mov
mov
setle
stos
adc
fsubrp
jge
jnp
dec
pop
jmp
xchg
into
mov
sbb
mov
sbb
repnz
test
outs
inc
(bad)
sahf
int3
ja
jbe
(bad)
pop
sbb
sahf
dec
outs
dec
sub
pop
retf
pop
or
inc
xchg
sub
adc
shl
loop
cmc
adc
jl
mov
test
repz
jle
mov
fwait
push
loop
dec
sbb
(bad)
add
inc
inc
dec
cmp
aam
(bad)
les
repz
les
call
add
jmp
leave
sbb
movs
dec
arpl
aam
mul
arpl
xchg
mov
pop
sbb
push
push
mov
push
or
movs
inc
mov
and
xor
call
pop
pop
xor
jae
jg
fnsetpm(287
adc
mov
jmp
xchg
sbb
pushf
je
scas
dec
dec
xchg
xlat
repz
sbb
jns
push
jns
or
enter
movs
push
test
push
sti
and
ja
std
aaa
lock
sbb
pcmpeqd
mov
inc
test
jne
mov
pop
dec
push
cmc
lods
lods
push
ins
mov
add
cmp
xchg
js
mov
jmp
push
inc
retf
pop
test
je
and
mov
pushw
int
enter
add
cwde
ror
bound
(bad)
fist
inc
sbb
nop
push
mov
test
push
rcr
ja
ret
aad
das
dec
pushf
test
aam
neg
xor
je
pushf
fiadd
inc
mov
cmps
(bad)
jmp
pop
mov
pop
stos
jmp
mov
dec
jnp
xchg
out
ret
dec
xchg
ins
fdiv
fwait
repz
and
push
mov
jae
jle
jg
jne
repz
pop
push
cmp
stos
xchg
or
(bad)
jo
popa
pop
aam
shr
popa
cmp
mov
xlat
sub
jmp
inc
aam
sbb
ds
not
mov
mov
sub
sbb
sub
repz
sub
xor
movs
popa
inc
cmps
aad
inc
(bad)
pop
fcom
fld
jne
out
sub
sbb
and
sti
retf
add
cmp
imul
int
pop
and
and
sbb
jle
adc
jecxz
mov
xchg
outs
daa
fwait
je
mov
ja
mov
call
cdq
les
cmp
dec
test
dec
xchg
fst
mov
call
ret
xchg
popf
mov
mov
es
and
or
and
fdivr
int
scas
mov
out
pop
daa
jp
cwde
lea
mov
rcr
jnp
(bad)
mov
ret
sti
shl
adc
cmc
movs
sbb
jle
ins
pslld
popf
popa
sub
cmp
sbb
jno
inc
call
mov
cmp
test
das
mov
inc
sti
int
jmp
sbb
(bad)
mov
cmp
retf
xchg
pop
out
mov
inc
adc
rcl
add
sbb
sbb
dec
fadd
and
cmp
xlat
mov
push
sti
xchg
jno
xor
mov
ret
xchg
jmp
and
sbb
jle
shl
inc
ins
leave
stc
pop
xchg
imul
(bad)
loop
jb
lock
ficomp
nop
test
adc
xor
popa
dec
sub
pop
(bad)
adc
out
stc
sbb
mov
cmp
pop
dec
push
mov
aam
push
cwde
dec
gs
push
adc
lods
rcl
cld
adc
pop
cld
jo
adc
or
frstor
retf
pop
icebp
adc
rcl
loope
mov
cmp
mov
jle
fs
stos
jl
or
and
jbe
dec
out
mov
xchg
leave
mov
add
(bad)
mov
call
pop
int
sbb
dec
stos
pop
ror
adc
ret
pop
inc
(bad)
ins
nop
adc
outs
mov
popf
mov
mov
dec
pop
fild
popa
hlt
in
leave
xor
into
sti
mov
aas
mov
pusha
ret
xchg
jb
fild
test
add
jmp
stc
jl
int
stc
out
or
in
imul
xor
pop
aas
cmc
mov
add
vdivss
xor
mov
adc
je
mov
lea
push
sbb
pop
and
cmps
inc
stos
mov
addr16
lahf
aas
inc
add
cmc
cmps
sub
cwde
(bad)
mov
cli
push
adc
imul
movs
shr
dec
les
mov
popf
inc
jl
rcl
or
adc
xor
mul
mov
sahf
jl
push
jae
out
jbe
cmp
sbb
jb
je
and
push
push
lods
sub
mov
leave
cmc
pop
push
add
(bad)
mov
pushf
ret
sub
or
aad
sbb
shr
add
ss
movs
cmp
or
xor
mov
adc
adc
iret
pushf
aaa
push
(bad)
dec
jb
push
or
add
int3
mov
mov
add
pop
aas
sub
dec
sbb
mov
push
mov
imul
inc
sbb
lock
je
mov
(bad)
fisttp
inc
push
pop
mov
sbb
sar
add
dec
loopne
push
fistp
popf
aaa
ror
and
or
jp
mov
jo
pop
cs
fst
pop
lods
jmp
adc
in
adc
addr16
in
cdq
mov
popf
out
(bad)
and
mov
in
(bad)
mov
cli
jg
dec
loop
xchg
mov
xchg
pop
outs
les
fadd
jl
out
push
mov
shl
and
mov
sbb
mov
out
mov
inc
dec
push
std
sahf
fild
out
lea
(bad)
jmp
in
xchg
out
enter
dec
push
loop
repz
mov
in
sub
and
pop
mov
out
and
fimul
in
cmp
adc
into
push
ins
das
ret
dec
sbb
jnp
adc
pop
test
or
(bad)
fwait
jbe
xchg
dec
(bad)
xlat
dec
mov
adc
cmc
test
pusha
cwde
in
push
xchg
jp
loop
ror
cmp
jno
mov
mov
sbb
add
mov
cli
mov
dec
sar
call
or
cmp
enter
adc
mov
into
es
addr16
pop
dec
push
out
int
pop
cmp
ret
mov
(bad)
test
hlt
adc
mov
mov
cmp
jecxz
rcl
push
push
cmp
pop
fstp
inc
mov
mov
push
and
mov
push
call
mov
es
pop
mov
inc
adc
fist
inc
adc
push
data16
cmc
and
jmp
ret
and
sbb
xchg
add
dec
and
adc
outs
jmp
in
ficomp
pop
inc
lods
cmp
cs
outs
fmul
mov
xor
clc
bound
xor
leave
shr
loop
push
push
jb
test
mov
mov
pop
inc
pop
add
inc
mov
(bad)
xor
aaa
aad
cmp
leave
cs
test
mov
mov
shl
sahf
repnz
cmp
adc
loope
inc
ss
mov
jg
xlat
outs
xor
mov
pop
out
stos
or
fcomp
out
fidiv
adc
dec
cmp
adc
jbe
cmp
ja
mov
dec
daa
je
push
(bad)
and
lahf
call
mov
mov
jl
ss
jb
pop
adc
pop
adc
add
sahf
mov
or
jnp
sub
sub
and
ret
sti
xor
outs
in
lock
pushf
jne
popa
out
adc
pop
adc
xlat
xchg
add
aas
lods
or
jne
push
lds
movs
(bad)
sbb
mov
xchg
jmp
(bad)
fdiv
das
cmc
adc
xor
stos
ss
fs
lock
mov
sub
mov
mov
daa
movzx
pop
jmp
shl
push
xor
mov
sbb
xchg
cmp
sub
mov
mov
into
mov
xchg
jo
cmps
jp
xor
cmp
clc
pop
adc
scas
sbb
cmp
ror
push
mov
hlt
mov
cmp
pop
ret
mov
mov
fdivr
scas
scas
test
test
mov
pop
sub
aad
out
or
or
mov
in
lahf
ins
mov
push
jno
cmps
lods
mov
push
cld
xor
mov
adc
loop
dec
nop
sbb
cwde
popf
repnz
xor
mov
jne
xor
sub
movs
pusha
xchg
nop
sbb
mov
repnz
pop
jmp
xchg
push
retf
repnz
enter
mov
pop
out
add
ficom
test
mov
push
lods
mov
jge
jge
mov
sbb
pop
ret
aaa
jmp
jp
pop
xchg
mov
push
inc
xchg
addr16
call
arpl
mov
popf
fwait
xor
inc
and
xchg
push
inc
sub
push
or
push
jp
nop
and
cmps
inc
addr16
and
and
dec
repz
ret
(bad)
aaa
movs
lods
and
sbb
fist
nop
stos
pop
aas
cmc
fwait
stos
push
aaa
outs
mov
push
pop
es
push
inc
data16
mov
mov
inc
push
mov
cmp
sar
sar
mov
xor
das
repnz
push
pop
std
add
push
aad
mov
(bad)
or
dec
cdq
push
pop
cmp
in
jnp
and
dec
and
jae
jns
sbb
push
clc
(bad)
sbb
pusha
int
mov
pop
dec
addr16
shl
mov
pop
or
xor
sbb
sbb
pop
shl
mov
push
push
rol
dec
mov
enter
mov
ficomp
leave
mov
jg
out
call
jnp
mov
in
adc
xor
fstp
adc
pop
add
push
in
push
in
dec
dec
dec
fcmovu
neg
shl
pop
in
(bad)
fucomip
(bad)
adc
ds
push
mov
add
push
outs
jp
loopne
in
fstp
mov
push
retf
pop
test
adc
js
aad
into
mov
je
daa
mov
mov
jbe
add
push
xchg
adc
add
pop
pop
push
xchg
cmp
iret
aaa
hlt
(bad)
push
cs
inc
inc
hlt
data16
inc
pop
enter
jl
fcomp
mov
add
adc
sub
fdivr
div
inc
int3
in
and
adc
pop
ret
fbld
rcl
mov
xchg
and
loope
mov
sub
adc
cmp
cmp
dec
cmp
das
xchg
lock
mov
mov
test
ret
aam
mov
(bad)
setle
ja
fidiv
push
pop
push
test
fwait
xchg
call
mov
adc
(bad)
in
xchg
scas
or
xor
ins
jge
cs
sub
mov
push
xchg
mov
mov
aad
jle
shl
scas
pushf
scas
ins
or
jno
bound
test
or
icebp
push
cmp
and
pop
sbb
ret
mov
jb
and
repz
call
jno
and
or
dec
daa
dec
int3
jae
js
add
paddusb
rcr
mov
fimul
mov
test
and
cmp
int3
xor
frstor
ror
inc
cdq
or
pop
sub
sub
adc
inc
stc
jp
stos
xchg
fdiv
and
jmp
out
xchg
pop
mov
cmc
inc
jecxz
(bad)
inc
ja
cwde
push
repz
jle
pushf
cmp
and
and
movs
jl
fs
(bad)
fisubr
lods
enter
lahf
pop
rcr
(bad)
sbb
push
ins
int
mov
pop
retf
fadd
adc
ret
data16
jge
jmp
xchg
mul
movs
push
push
outs
and
inc
push
sub
mov
adc
cmc
and
clc
adc
daa
shr
add
scas
shr
lea
or
xchg
ins
rcr
and
push
push
sahf
retf
jmp
push
mov
mov
pop
mov
ds
jb
adc
addr16
fist
and
pushf
push
imul
or
fst
or
push
sbb
gs
fsubr
add
fdiv
aam
adc
mov
push
add
jmp
mov
mov
dec
fcom
(bad)
out
bound
mov
adc
push
dec
jo
sub
mov
pop
sbb
out
gs
xor
mov
inc
sti
pop
out
mov
(bad)
cmp
retf
dec
clc
push
mov
adc
jae
das
rcr
sbb
nop
pop
loopne
push
popf
jp
cld
rcr
cmc
xor
std
in
test
xor
cwde
xchg
mov
jo
mov
sub
outs
mov
(bad)
neg
jle
xchg
or
mov
and
pop
push
inc
jae
stos
xchg
pop
and
sbb
add
jp
(bad)
pop
add
jmp
push
inc
sub
adc
jp
fstp
xor
mov
fdivr
cmp
jno
cdq
popa
imul
xor
popw
or
or
xor
shl
ins
mov
push
in
pop
push
cmps
je
pop
xchg
cmp
mov
inc
(bad)
out
test
fcomp
adc
xchg
adc
add
int3
adc
es
add
imul
pop
xor
ss
and
mov
ss
push
fnstenv
cmps
xlat
mov
es
outs
and
test
ret
pop
mov
fcom
out
add
mov
push
dec
ins
xchg
and
outs
je
(bad)
aad
add
iret
jmp
pop
pop
xor
cdq
and
retf
imul
pop
les
push
movs
es
ins
jbe
sub
push
int3
cmp
lds
dec
inc
fist
inc
es
mov
xchg
mov
push
sub
pop
add
out
movs
scas
hlt
outs
adc
int3
daa
add
mov
into
stc
mov
clc
les
cmp
jb
inc
ror
lahf
test
dec
and
dec
imul
ins
jb
adc
imul
sub
or
fnsave
or
xchg
lods
cmps
adc
jmp
out
movs
or
scas
cmc
test
repnz
std
xor
mov
movs
adc
es
test
ret
inc
sar
nop
ss
ficomp
aas
in
stc
scas
and
mov
and
dec
jmp
and
fist
adc
sub
or
xor
jp
dec
fadd
push
ins
fbstp
pop
push
pop
lods
mov
or
and
(bad)
push
in
push
repnz
add
jne
sbb
push
call
ins
mov
mov
inc
jno
and
or
stos
inc
ret
cmp
jecxz
mov
mov
mov
pop
fwait
push
movs
sbb
mov
ret
fadd
xor
mov
scas
mov
add
push
and
sti
mov
mov
sahf
out
pop
cli
sbb
pop
mov
js
jo
out
mov
icebp
in
lahf
or
jno
std
repz
pop
loopne
jp
jae
mov
int3
mov
jns
mov
jl
mov
retf
push
mov
push
or
pop
mov
ss
arpl
jle
cmp
jae
cmp
mov
(bad)
nop
out
fs
sbb
mov
mov
jne
ins
jae
cli
jmp
test
das
push
daa
loopne
or
xor
mov
push
add
jg
shl
out
(bad)
mov
aad
xor
pop
stos
pop
dec
in
dec
cmp
and
in
shr
retf
fimul
xchg
pop
test
lock
add
push
jns
ss
stos
add
(bad)
jns
mov
dec
mov
fnstenv
jbe
xchg
mov
sub
cmp
and
pop
outs
push
mov
cs
jl
xchg
and
rcl
fidiv
push
dec
pop
imul
fadd
and
cdq
in
inc
movs
add
cmps
adc
ret
mov
pushf
pop
mov
mov
outs
mov
jmp
mov
mov
cmps
inc
aaa
mov
js
popf
add
xchg
outs
fcomi
jo
sbb
inc
cwde
inc
mul
mov
or
outs
imul
xor
aam
in
js
xor
sub
sbb
mov
cli
movs
or
mov
mov
iret
jmp
aas
jb
mov
std
jne
rol
and
fistp
test
mov
or
fcomp
out
into
and
xchg
sub
sub
addr16
fistp
loope
popf
outs
(bad)
push
xlat
mov
ror
push
push
push
mov
leave
mov
push
neg
jno
pop
jne
aas
cmp
adc
rol
jp
mov
push
ja
jl
ret
repnz
out
cmp
loope
cmp
cmp
pminsw
sbb
push
sbb
mov
sbb
scas
pop
and
mov
cmp
call
xchg
push
xchg
test
out
dec
jle
fadd
mov
out
ret
mov
cmps
idiv
add
pop
rol
and
ret
test
lods
lahf
and
ja
cli
cmp
bnd
lock
popf
sub
mov
ins
fdivr
(bad)
cdq
mov
and
dec
mov
push
int
pushf
fs
mov
sahf
push
sub
xchg
stos
into
(bad)
cmp
aad
push
xchg
mov
test
das
xchg
jmp
adc
mov
jl
sub
daa
test
dec
loope
or
out
arpl
shl
data16
jge
push
xor
mov
sub
pop
xor
popf
and
xchg
xor
(bad)
aad
push
jo
retf
and
sub
xor
(bad)
cmps
pop
jmp
sbb
xchg
sbb
mov
push
mov
or
dec
dec
clc
cdq
aam
popa
mov
mov
imul
in
sub
out
fwait
in
push
pop
dec
lods
push
mov
or
jbe
jno
(bad)
dec
mov
and
push
in
mov
xlat
arpl
or
lock
inc
jmp
retf
adc
mov
push
outs
or
fs
(bad)
test
sahf
in
mov
addr16
idiv
mov
sub
xchg
ins
push
cmp
xchg
pop
daa
xor
push
sar
je
pop
inc
cmc
dec
jb
ja
pop
add
push
or
dec
ja
sbb
xor
cli
je
aam
xchg
hlt
add
fndisi(8087
sub
push
repnz
mov
cmp
mov
out
add
push
int3
sub
enter
xor
sbb
cdq
mov
mov
sbb
mov
mov
fistp
pushf
pushf
or
leave
(bad)
in
cli
add
dec
mov
mov
cs
xchg
inc
mov
int3
cmp
and
mov
loope
push
mov
pop
retf
and
rol
loopne
out
cmps
pop
and
inc
cmc
out
xchg
sub
adc
sbb
inc
xor
cmp
or
lods
shl
ins
mov
and
mov
addr16
int
dec
and
popf
mov
jno
aam
pop
push
movs
jns
pop
bound
pop
popa
imul
cmp
imul
std
mov
out
inc
pop
jo
scas
dec
popa
inc
loop
cmp
imul
hlt
or
sti
sub
add
mov
sti
sbb
int
popa
(bad)
mov
lahf
dec
(bad)
mov
jge
sti
rcr
dec
cmp
lods
xor
push
shl
daa
arpl
ja
hlt
clc
inc
in
div
xchg
mov
shl
cmps
pop
adc
repz
adc
mov
mov
int3
xchg
fadd
mov
dec
sub
ret
push
sub
xchg
xor
cmps
bound
jp
cli
pop
movs
stos
lock
icebp
and
ss
jb
or
sbb
cmps
daa
jle
xchg
adc
xchg
mov
cdq
add
cwde
push
shl
dec
sbb
popa
mov
xor
outs
mov
jge
and
(bad)
cld
mov
jge
push
cs
xchg
mov
xchg
xchg
sbb
outs
fist
cwde
sbb
mov
cdq
repz
idiv
movs
pop
div
sbb
push
push
sti
shl
je
add
inc
gs
retf
pusha
push
sub
push
stc
fwait
push
dec
arpl
fist
retf
out
das
pop
call
cmp
int
out
cmp
shr
stos
mov
inc
pop
inc
jmp
mov
iret
mov
imul
lahf
test
mov
out
div
push
(bad)
je
pop
jno
xchg
test
inc
jno
jae
jne
push
push
movs
mov
cmps
mov
das
inc
ja
lods
jp
sub
push
ret
and
sub
cmp
loop
pop
inc
(bad)
ss
inc
popf
arpl
pushf
adc
test
mov
sub
and
mov
adc
in
inc
jmp
sub
loopne
dec
jmp
movs
sbb
adc
bound
mov
int
jne
xor
inc
inc
dec
jne
push
mov
xor
rcl
test
pop
les
dec
dec
sub
dec
push
icebp
lods
dec
aad
call
ficomp
(bad)
stos
outs
and
and
jmp
rcl
inc
rcl
inc
xchg
ss
jae
mov
adc
pop
hlt
push
mov
sub
rcl
and
mov
dec
add
jg
mov
mov
push
enter
jl
pop
pop
(bad)
adc
out
inc
push
sbb
cmc
jnp
push
xor
test
add
mov
dec
mov
push
pcmpeqw
arpl
popf
mov
(bad)
push
mov
pop
xor
mov
sti
imul
jbe
jp
aad
mov
mov
mov
sub
add
shr
sub
and
add
jl
sbb
movs
popa
mov
stos
push
xchg
inc
out
movs
jp
inc
inc
aad
aam
mov
aam
gs
xor
lds
jl
popa
pop
fcmovnb
jge
aaa
sbb
addr16
fdivr
lahf
enter
into
jecxz
lahf
xchg
fimul
inc
dec
xchg
xlat
div
sbb
inc
sti
mov
mov
push
aaa
fs
jge
inc
dec
jp
xchg
ret
push
repz
dec
stos
fdiv
das
mov
pusha
and
into
lock
cmp
in
dec
(bad)
setge
pop
aam
xor
add
popf
inc
inc
mov
lods
enter
sti
push
xchg
inc
xor
xchg
mov
daa
cmp
mov
pop
mov
sub
ror
cmp
push
pop
push
xchg
cmp
adc
mov
xchg
lea
ret
loopne
mov
retf
mov
pop
retfw
mov
mov
jge
push
push
jmp
ret
inc
or
mov
(bad)
add
push
pop
mov
inc
clc
in
pop
cwde
sub
sahf
xchg
mov
movs
cmps
mov
call
xchg
mov
xor
or
and
cmp
fistp
sbb
mov
stc
add
popa
in
dec
pushf
push
mov
jmp
pop
js
test
sbb
pop
in
xor
dec
inc
pushf
jp
mov
aam
aaa
dec
in
mov
(bad)
rcr
(bad)
in
mov
aas
xor
sub
ja
jae
adc
fsubr
push
sbb
mov
sbb
mov
jp
dec
lods
cli
sub
ins
fcmovne
pop
push
mov
or
outs
std
test
jl
sbb
and
or
outs
pop
js
pop
add
mov
sub
push
int
cmp
enter
jl
lds
rol
(bad)
jl
sub
jge
cmp
stos
in
push
mov
js
sub
jmp
test
xor
(bad)
and
sub
(bad)
mov
mov
mov
mov
inc
cmp
or
cdq
mov
and
int3
es
push
xchg
loop
mov
or
sbb
sub
das
push
(bad)
xor
fbld
rcr
enter
pop
into
stc
mov
add
mov
mov
cmps
mov
dec
(bad)
and
nop
call
and
push
mov
fist
pop
adc
xchg
push
push
or
fwait
xchg
mov
shl
inc
dec
add
mov
inc
test
movsx
mov
mov
cld
(bad)
(bad)
cmp
cmps
out
cdq
dec
push
imul
inc
test
jbe
loope
les
mov
in
jnp
out
out
sbb
and
je
fwait
push
inc
push
shl
or
adc
mov
cmp
sbb
or
adc
les
sbb
test
inc
in
mov
imul
adc
(bad)
aad
push
lods
jmp
xchg
mov
inc
jmp
cbw
mov
fcomp
fincstp
push
out
and
xchg
cli
push
iret
fwait
adc
lea
mov
xchg
retf
shl
loope
push
pop
xchg
imul
xchg
fdiv
sbb
sbb
cmp
icebp
jg
das
mov
xchg
ds
mov
(bad)
or
arpl
outs
xchg
mov
dec
jno
xchg
xchg
enter
fcom
mov
ret
xchg
sbb
mov
in
lock
icebp
push
mov
adc
aaa
ins
les
xor
in
sub
pop
cmp
(bad)
out
std
lea
xlat
or
das
push
pop
sub
imul
push
nop
leave
xor
inc
push
mov
mov
dec
(bad)
xor
mov
sbb
push
sub
lock
(bad)
cmp
cmp
cmp
daa
sahf
push
clc
add
call
push
call
aas
in
aam
push
mov
sar
stos
mov
jmp
push
pop
or
stos
xor
mov
lahf
ret
mov
jp
adc
js
pop
push
or
push
leave
sti
push
mov
add
popa
xor
(bad)
dec
outs
loope
scas
jb
and
aaa
add
fadd
adc
push
test
retf
cdq
les
mov
stos
lahf
jb
mov
sbb
(bad)
xchg
loop
cmc
sub
das
mov
pop
stc
movs
fst
xchg
cld
and
fisttp
out
fsincos
call
dec
popa
pop
adc
cmps
cmc
in
xor
jb
jbe
mov
cmp
and
xor
jns
test
or
jmp
frstor
mov
icebp
(bad)
mov
(bad)
daa
nop
out
xchg
adc
sub
hlt
lahf
jp
mov
in
test
stos
das
data16
in
xor
xchg
outs
leave
jnp
sbb
mov
push
or
rcr
scas
push
ret
sbb
jno
xchg
push
push
ins
jl
add
fimul
jg
or
push
push
sub
mov
cdq
sub
add
popf
add
lods
sbb
add
mov
cdq
jp
repz
sbb
add
add
xchg
hlt
out
and
shl
cmp
push
shr
ret
repnz
rol
adc
dec
sbb
data16
jmp
jg
stc
aam
ret
mov
adc
loopne
dec
out
faddp
loopne
and
xor
in
jae
sub
or
dec
jo
shl
mov
mov
cmp
mov
cwde
mov
ins
push
icebp
imul
xor
lods
jle
ret
mov
push
fs
outs
pop
pop
push
mov
shl
rcl
aaa
in
dec
xchg
loop
cmc
xor
hlt
push
(bad)
jb
mov
enter
imul
loope
lods
cmc
inc
mov
test
dec
enter
xor
xor
xchg
in
pop
cs
mov
je
pop
mov
pop
add
pop
xchg
xchg
imul
loopne
push
inc
ins
mov
hlt
sub
fiadd
cmp
scas
sub
xchg
add
inc
cmovbe
pop
xchg
push
mov
jle
jecxz
stc
sub
fs
imul
in
scas
cmp
fsubr
retf
ror
mov
pop
jmp
ror
test
lea
inc
cmpxchg
cdq
cwde
add
mov
imul
mov
cmps
and
sub
jmp
fisttp
mov
aas
ret
adc
cmp
mov
cmp
shl
sbb
mov
(bad)
test
or
dec
test
mov
shl
cmp
scas
jle
or
ds
pop
addr16
(bad)
xchg
jp
not
out
(bad)
rcl
push
mov
ss
inc
inc
jecxz
push
ror
lahf
test
icebp
clc
xlat
push
mov
inc
jno
not
pop
cs
ja
mov
or
fadd
lods
das
lds
mov
into
ret
xchg
call
jne
jmp
mov
aas
shl
inc
jl
cli
mov
in
mov
push
cmps
jne
xchg
in
clc
imul
mov
aaa
ss
mov
push
mov
(bad)
mov
mov
mov
adc
inc
mov
jmp
ins
cmp
mov
cmc
inc
mov
fcom
(bad)
mov
rcr
push
mov
sbb
in
sbb
outs
sbb
dec
jb
inc
and
neg
gs
mov
(bad)
mov
fistp
push
sub
mov
mov
dec
aas
dec
dec
or
jecxz
sbb
xchg
fmul
pushf
or
iret
xor
(bad)
push
jnp
add
adc
sti
jno
repnz
addr16
jnp
inc
add
out
adc
and
mov
fldcw
xchg
in
stos
ffreep
mov
lock
es
mov
dec
sub
outs
test
sahf
test
pop
xchg
dec
fs
pop
jbe
push
dec
push
xchg
pop
ret
adc
test
mov
push
cs
loope
aam
xchg
sbb
out
imul
jo
js
mov
and
ja
jge
adc
pop
imul
mov
cli
adc
dec
or
ss
dec
lock
xchg
cmp
mov
test
imul
lods
nop
xor
mov
rcl
test
popa
shr
jl
sub
popa
and
add
movs
fwait
mov
(bad)
(bad)
fcomi
mov
js
mov
and
fist
stos
stos
xchg
push
test
cmp
pop
addr16
add
inc
inc
sub
sbb
jnp
sub
pop
ret
aad
or
pop
dec
and
out
retf
test
dec
(bad)
push
xor
or
int
test
pop
inc
push
(bad)
mov
(bad)
rol
jne
mov
movs
mov
cmp
or
pop
cmp
(bad)
or
cmp
push
jno
inc
imul
and
dec
call
dec
jp
repz
mov
lods
lea
test
dec
psubsb
cmp
mov
adc
xchg
inc
xchg
sbb
daa
sbb
popa
test
leave
cld
dec
and
fild
xchg
pop
jge
imul
fnstenv
adc
rol
mov
sbb
clc
dec
pop
inc
or
adc
jnp
inc
mov
jp
push
call
pop
sbb
sbb
mov
and
inc
test
xor
xor
out
mov
mov
mov
fist
cmp
xchg
loopne
inc
mov
stos
ret
leave
xchg
adc
mov
lods
mov
adc
fimul
cli
cmp
cld
fwait
jmp
mov
pop
fbstp
aas
jo
seto
xchg
xor
adc
xchg
pop
jb
or
call
push
add
inc
das
(bad)
mov
aaa
push
cmp
jns
jo
xchg
dec
mov
(bad)
ja
jp
cli
push
popf
inc
xor
cmp
cwde
add
cli
xor
ud0
and
push
dec
out
call
call
or
cld
cmp
dec
push
add
repz
or
mov
das
mov
sub
cmp
xchg
fsubr
mov
xchg
mov
pop
xor
outs
fwait
push
push
fsub
cmps
and
adc
mov
push
jge
xchg
aas
adc
adc
sub
mov
repz
js
mov
and
(bad)
mov
clc
repnz
push
xor
lods
cmp
repz
mov
mov
jle
xor
pop
pop
jge
stos
loopne
das
es
inc
jecxz
mov
cmp
(bad)
pop
cld
cmc
and
out
lods
test
inc
cmp
mov
jecxz
pusha
arpl
push
imul
mov
sbb
mov
add
inc
fwait
jbe
mov
fild
mov
cwde
cli
mov
lods
ret
or
(bad)
jmp
ret
das
cmp
and
cmps
fidiv
inc
stc
push
fiadd
xchg
lock
repz
cmp
clc
or
xchg
inc
add
mov
fwait
or
ret
call
or
aad
jecxz
mov
js
sub
add
je
sar
xchg
fdivr
lahf
cmp
mov
cmp
mov
outs
ja
xchg
cli
jo
push
push
idiv
sbb
retf
pop
jmp
xor
jl
call
sub
mov
sbb
mov
fwait
cwde
pop
sub
inc
shl
dec
xchg
iret
add
enter
xchg
out
xor
fild
xchg
inc
cmp
aaa
xchg
mov
xor
sbb
neg
pop
mov
fs
push
mov
adc
xor
pop
mov
push
sbb
mov
popa
int3
outs
mov
imul
jmp
add
(bad)
out
ret
jno
cs
jp
inc
cmp
sub
push
mov
movs
js
jmp
xchg
sub
stc
movs
out
jl
dec
xchg
shl
mul
jae
xchg
sub
movs
outs
das
cld
xchg
dec
mov
stc
sbb
pop
jnp
adc
lea
pusha
push
mov
stos
(bad)
cwde
pop
test
imul
movs
cld
pop
add
aaa
stc
rcl
jb
and
mov
push
sub
pop
adc
cmp
hlt
mov
cwde
imul
out
rol
jmp
xchg
jbe
arpl
imul
clc
adc
stos
adc
pop
push
dec
mov
adc
icebp
dec
or
(bad)
jmp
(bad)
mov
outs
xchg
jmp
jnp
aaa
sti
adc
dec
mov
imul
in
xchg
ret
sar
push
xor
xlat
jge
les
inc
sub
arpl
call
jno
or
pop
test
mov
inc
push
push
and
test
fdivr
fisttp
and
arpl
mov
or
push
fild
scas
dec
inc
imul
cdq
mov
mov
cmp
dec
out
outs
mov
outs
in
and
dec
sbb
scas
adc
das
mov
push
push
imul
mov
cmp
and
mov
xor
push
mov
iret
retf
fistp
popf
out
mov
or
cmp
mov
pop
mov
shl
icebp
sub
or
icebp
and
into
sbb
mov
adc
ficom
test
mov
lods
aam
lds
add
inc
xchg
lods
hlt
ret
test
ret
outs
jl
mov
jns
(bad)
dec
cmps
aaa
sbb
movs
aam
not
loopne
pop
cmp
xchg
addr16
dec
or
pop
xor
mov
shl
sub
ss
cmp
sub
call
sub
or
out
adc
sub
mov
xchg
ror
call
cld
int3
xchg
pop
sub
xchg
data16
mov
je
jle
jne
rcl
mov
fcomp
push
xchg
add
jecxz
in
repz
sub
mov
retf
(bad)
addr16
ins
aas
sub
sahf
psllw
stos
test
and
mov
ror
popa
ror
fs
into
dec
cmp
xor
xor
scas
sbb
sbb
sub
cmc
loopne
test
sar
(bad)
or
dec
and
rcl
mov
(bad)
(bad)
xor
cmp
add
int
sub
or
je
icebp
jo
mov
jge
xchg
pop
jecxz
femms
std
fld
ret
movs
dec
or
dec
jmp
sbb
push
shl
mov
mov
mov
mov
sbb
shl
cmp
fdiv
dec
and
pop
ins
nop
clc
pop
cld
pop
push
mov
mov
(bad)
daa
ss
jb
xlat
fisubr
push
push
mov
adc
mov
test
iret
mov
mov
ja
test
(bad)
imul
neg
pop
adc
retw
xlat
fdiv
stos
aas
mov
lock
leave
rol
fadd
not
iret
adc
push
fiadd
cmps
adc
push
(bad)
jmp
cmp
and
cmps
push
pusha
pop
fs
daa
dec
je
mov
sbb
retf
lock
fld
pop
push
add
dec
pushf
ins
dec
sbb
mov
mov
mov
add
jae
pop
add
repnz
(bad)
fisub
add
outs
adc
fnstcw
into
mov
out
loopne
mov
pop
inc
sti
sbb
push
or
and
stc
push
ds
mov
idiv
jns
add
ins
mov
mov
addr16
add
mov
dec
xor
(bad)
pusha
les
in
aaa
mov
push
enter
xchg
cld
nop
test
stos
movs
jge
mov
imul
pop
pop
jb
fsubr
or
sub
or
std
ss
dec
and
int3
pop
jmp
fiadd
mov
jg
push
into
mov
or
fidiv
pop
arpl
scas
bound
dec
inc
adc
mov
(bad)
fist
divps
int3
push
add
push
mov
and
mov
(bad)
mov
sbb
mov
mov
lahf
cwde
sahf
xor
add
outs
sub
xor
out
les
clc
shl
gs
(bad)
in
das
add
cld
lock
mov
loop
in
cmc
and
ret
and
pop
jno
bound
das
push
sub
hlt
(bad)
aas
test
mov
jno
mov
fwait
mov
aam
cmp
xor
stc
mov
cmp
cmp
clc
and
xchg
and
pop
(bad)
out
int3
aaa
lock
add
adc
out
(bad)
cmp
in
lahf
xchg
arpl
mov
xchg
loop
gs
lock
add
jns
ins
in
xchg
fcmovu
sar
sbb
pop
in
sbb
cmc
and
mov
std
xor
push
xor
push
pusha
cli
sbb
fistp
(bad)
mov
rep
pushf
fstp
addr16
pop
pop
test
push
imul
and
std
fxch
sar
push
(bad)
jmp
sub
test
leave
inc
repz
adc
inc
pop
repnz
movs
or
clc
mov
fs
scas
cmp
out
pop
ret
sbb
ja
inc
cmps
in
mov
stc
inc
call
mov
or
push
sub
call
add
cdq
aad
mov
and
adc
fcom
xchg
push
mov
ins
iret
xchg
cmp
cwde
cmp
ja
push
out
inc
fldcw
leave
sbb
pop
xor
int3
mov
ret
xchg
and
xchg
pop
xchg
inc
mov
sub
inc
and
imul
or
mov
cmp
mov
add
inc
lea
cmp
js
enter
cmp
sub
mov
add
add
ja
jmp
ja
jb
sbb
lods
jns
inc
push
fidivr
mov
mov
nop
cmp
sub
inc
fmul
shr
cli
mov
pop
inc
xchg
or
clc
xchg
push
mov
jno
dec
inc
jno
sahf
dec
gs
retf
pushw
push
or
xchg
in
fbld
push
out
repz
sti
test
jecxz
dec
jecxz
jb
add
aas
and
pop
mov
(bad)
jnp
and
imul
xlat
ficom
xlat
test
out
int
cmp
sbb
arpl
popa
sar
mov
or
mov
pop
mov
sub
push
sbb
ja
xchg
imul
jl
add
les
mov
scas
cmp
sub
outs
cmp
xlat
gs
das
cs
and
push
scas
in
stos
mov
test
jnp
call
adc
aas
cld
adc
scas
int3
pop
loopne
fcomp
jle
pop
adc
or
jb
in
dec
and
paddd
jne
cmp
cld
xchg
xchg
mov
pop
mov
cmp
push
xor
std
ret
mov
adc
mov
xchg
push
add
push
int3
fnstsw
jb
call
mov
cmps
sbb
ret
(bad)
rcr
jmp
jle
cli
dec
cmp
push
in
retf
jbe
scas
jmp
inc
sbb
leave
sar
add
xor
lds
dec
call
jle
jnp
outs
xchg
mov
inc
fbstp
pop
xchg
xchg
fld
fwait
mov
or
push
xchg
push
pop
cli
ret
ins
jae
jmp
outs
inc
or
jmp
jne
cmps
fwait
pop
stc
jne
sbb
jb
push
nop
sub
cmp
bound
fwait
xchg
inc
enter
sti
loope
add
cwde
fnstsw
stos
and
int3
or
ja
sti
fwait
cmp
rcl
push
push
pop
call
mov
sbb
cmp
xchg
iret
pop
sar
inc
mov
mov
mov
mov
movs
movs
stos
loopne
xchg
outs
in
xor
mov
arpl
push
jbe
lock
scas
mov
ja
or
jl
mov
je
dec
std
or
rcl
aaa
add
aam
add
jbe
xor
retf
push
pusha
mov
je
cs
mul
push
xchg
mov
cmp
das
push
je
push
sti
cmp
sbb
shr
and
sub
fld
call
pop
push
mov
shl
cli
in
pop
rol
shl
sti
and
jnp
or
repnz
or
xchg
arpl
pushf
addr16
(bad)
mov
arpl
and
scas
pop
mov
sbb
add
repnz
pop
mov
fld
inc
aad
ror
mov
fcmovnbe
fist
test
inc
test
cld
sub
xchg
adc
mov
cmp
out
addr16
scas
lock
pop
cmc
shrd
addr16
cmps
popf
mov
cmc
cli
sbb
mov
repz
dec
xor
xor
add
xchg
aam
pushf
hlt
sti
pop
cmp
dec
repz
pop
sub
aad
pop
loop
cs
sub
ficom
xor
xlat
idiv
add
mov
dec
mov
pop
ret
movs
sar
adc
xchg
push
xchg
pop
dec
ret
stos
cs
not
sub
jbe
loopne
nop
pusha
call
and
popf
inc
nop
adc
neg
rcr
ins
outs
scas
inc
push
fcmove
jmp
xchg
xchg
jne
xchg
dec
nop
lea
jg
pop
cmp
or
pop
pop
xchg
idiv
push
(bad)
xchg
ror
push
mov
jae
adc
mov
test
or
mov
sbb
sbb
mov
jp
mov
xor
rcl
popf
dec
or
test
dec
mov
and
add
sub
es
in
mov
and
shl
imul
outs
pop
(bad)
or
pop
push
sbb
call
adc
mov
mov
clc
cmp
mov
aad
and
sub
adc
lods
fst
sbb
mov
(bad)
sub
dec
or
add
or
jl
repnz
jae
sub
xchg
sub
enter
js
mov
pop
jecxz
push
mov
sbb
add
pop
add
cmps
mov
hlt
jae
sbb
add
inc
and
mov
or
nop
ret
in
cli
push
cmp
call
pop
pop
ins
sbb
inc
cmp
sti
add
sbb
mov
das
push
push
inc
and
cld
mov
push
test
sbb
sub
sub
jo
inc
xchg
cmp
loopne
mov
pushf
pop
push
dec
pop
or
jmp
mov
data16
outs
mov
jae
dec
xchg
sub
out
add
cmc
clc
mov
or
aam
pop
and
cmp
jge
push
int
stos
dec
(bad)
push
sbb
fs
div
in
pop
stc
loopne
and
mov
xor
ret
push
mov
fld
retw
gs
call
xchg
cmp
xchg
mov
(bad)
push
or
add
stos
cmp
xchg
es
adc
int
data16
pop
test
bnd
sbb
outs
add
mov
jp
mov
cmc
sbb
inc
mov
add
popa
clc
int3
cwde
icebp
test
cmp
lods
push
aam
jae
add
(bad)
lods
loopne
push
sub
ret
push
pop
add
inc
cmc
or
jl
mov
in
push
mov
or
icebp
inc
jmp
imul
push
cdq
ret
push
xor
or
push
lock
loop
dec
(bad)
dec
jne
fdiv
sub
mov
mov
mov
xor
adc
sahf
push
push
sahf
mov
mov
lods
sbb
pop
cld
and
retf
xchg
push
stos
or
pop
pop
and
and
sub
dec
mov
stos
ds
dec
mov
adc
or
mov
cmps
sbb
out
popa
sub
mov
jae
dec
sbb
gs
ror
pop
stos
sbb
rol
bound
xlat
aad
das
push
cmp
inc
int3
nop
cdq
jmp
cmps
(bad)
and
pop
or
mov
stos
push
add
lea
dec
adc
sbb
shl
mov
and
scas
mov
icebp
rcr
lahf
addr16
loope
mov
push
and
sti
bnd
pop
(bad)
loop
and
mov
jp
xor
ret
push
(bad)
dec
sar
inc
mov
test
dec
enter
inc
jl
ret
ja
mov
jge
or
pop
ret
fidiv
(bad)
icebp
jmp
dec
xchg
mov
adc
jp
pusha
fdivr
(bad)
std
outs
shr
ss
push
mov
xchg
dec
call
rcr
cld
pop
jp
jno
sbb
test
in
jns
sub
sbb
fldenv
fsubr
xchg
pop
adc
movs
out
hlt
test
pop
mov
pushf
repnz
shl
jle
jnp
stos
jbe
fisttp
pop
lods
cmps
adc
repz
push
push
mov
push
sbb
les
mov
ret
ins
test
and
push
cli
add
shl
push
imul
jmp
sbb
sbb
dec
jle
push
cld
inc
mov
xor
sbb
sub
hlt
mov
rcr
sub
iret
imul
popa
je
sahf
push
inc
cmps
mov
fwait
xlat
cmp
mov
stos
pop
and
cmp
jg
push
das
test
loop
(bad)
int3
cmp
dec
push
dec
sub
jb
cs
cli
jo
out
jne
jbe
cwde
clc
rol
pop
jo
ss
lock
sti
cmp
or
xchg
inc
mov
fadd
stos
dec
mov
int3
mov
jl
hlt
jno
int
xlat
dec
lea
(bad)
jge
popa
fdiv
jo
dec
cmps
stc
test
fs
xchg
int
inc
aaa
or
sub
clc
mov
mov
mov
scas
das
jecxz
dec
push
or
arpl
xchg
ret
adc
rcl
jbe
jmp
(bad)
xchg
jne
aad
jno
outs
or
sbb
cmc
inc
mov
cld
jno
cs
and
push
out
int3
cmc
ja
cmc
or
cdq
lods
dec
inc
pop
sub
inc
push
dec
ffree
hlt
mov
fld
int
fsub
daa
aad
cwde
push
push
pop
cs
cmp
aam
inc
lock
icebp
std
out
test
push
cmp
out
lahf
jbe
push
(bad)
sbb
mov
push
comiss
push
xchg
jb
push
enter
inc
fwait
aad
retf
ret
fistp
pop
imul
sub
push
icebp
nop
adc
enter
fnstsw
fwait
mov
adc
jecxz
cmp
scas
rcr
and
hlt
sub
sub
rcl
xchg
cmc
mov
ficomp
push
fdivr
cmc
pop
loopne
popa
inc
into
mov
adc
stos
jmp
push
push
ror
and
and
inc
dec
imul
fmul
movs
in
enter
sub
mov
gs
xor
int
(bad)
addr16
(bad)
cmps
mov
test
sbb
sub
xor
(bad)
in
mov
data16
sti
fcmovnbe
fbld
xchg
adc
inc
ffreep
xchg
push
lds
sahf
ffreep
dec
jno
cdq
fsub
push
ins
repnz
pop
push
mov
call
cmp
or
aad
sub
push
popf
fwait
mov
in
aad
cmp
outs
jmp
push
fist
fidiv
adc
movs
jmp
cmp
cmp
cmps
fldcw
xchg
sti
movs
test
jb
je
pop
mov
pushf
out
pop
sub
mov
jle
ficomp
jbe
loopne
mul
mov
cmp
fs
or
sub
cmp
push
out
mov
sbb
cmp
in
dec
fwait
adc
retf
loopne
int
mov
mov
mov
inc
test
mov
mov
shr
fidiv
push
xlat
push
mov
jl
cmp
movs
int
lods
lods
shr
adc
pop
add
js
jge
cmc
jno
jns
or
push
pop
cmps
out
cmp
cmp
lods
mov
pop
xor
(bad)
xchg
xchg
pop
mov
and
stos
jns
rcr
sbb
ror
scas
into
push
push
mov
int3
test
push
rcr
and
test
sbb
xor
cmp
inc
icebp
and
das
push
test
jmp
test
hlt
xor
push
jo
(bad)
sbb
fsincos
outs
jo
popf
mov
dec
movs
inc
adc
push
push
mov
xchg
call
adc
cli
sbb
mov
xchg
push
push
call
add
push
cmc
push
pop
mov
inc
adc
adc
dec
mov
bnd
push
push
lods
pop
dec
repnz
iret
push
retf
add
in
sbb
gs
dec
inc
mov
cs
xlat
pop
cmp
xor
add
and
je
fdivr
lds
daa
sub
fcom
movs
pushf
ffreep
dec
and
add
fild
fnstcw
cmp
ret
bswap
daa
not
out
and
cdq
int3
jno
push
(bad)
xor
retf
mov
inc
test
mov
ins
(bad)
pushf
mov
call
sahf
jecxz
std
mov
add
(bad)
mov
jnp
int3
daa
or
retf
inc
xchg
dec
fwait
pop
das
in
push
or
dec
div
mov
aam
xchg
mov
mov
aam
std
sub
test
jge
sub
xchg
pop
or
aad
mov
mov
dec
sub
repz
fisttp
sbb
aas
rcl
movs
add
add
push
or
ret
push
jmp
or
outs
(bad)
cmp
push
and
inc
add
dec
std
cmp
nop
ds
cmp
or
iret
and
loop
xchg
xchg
jmp
mov
sub
dec
jb
outs
rcl
(bad)
mov
sub
sbb
fs
xchg
(bad)
scas
dec
ss
dec
push
imul
pushf
mov
push
loopne
jno
inc
mov
mov
xor
(bad)
xor
cwde
out
sub
jbe
xor
aam
push
adc
pop
cwde
add
les
rol
mov
call
push
jecxz
and
mov
imul
mov
mov
stos
push
cmp
inc
mov
and
mov
cwde
and
pop
int
dec
dec
or
loopne
aad
stos
sub
(bad)
ins
mov
jnp
js
xor
in
ret
jecxz
sbb
xchg
out
dec
movs
push
leave
jns
ins
rcl
sahf
pop
or
ins
lods
cli
push
and
pop
mov
pop
push
add
lods
(bad)
loopne
jo
sbb
into
pop
jg
loop
pminsw
push
scas
lock
add
dec
mov
lahf
jge
jno
sti
nop
ret
(bad)
jns
xchg
addr16
or
push
stc
bound
hlt
cs
xchg
or
shr
lods
vmulsd
cwde
lea
push
aaa
xchg
jle
aad
push
jge
jbe
jae
add
lods
mov
mov
xchg
pusha
adc
and
imul
push
add
retf
push
leave
icebp
test
mov
call
lods
adc
dec
(bad)
mov
push
push
cmp
out
sub
(bad)
data16
jecxz
jmp
and
mov
mov
push
and
push
enter
les
(bad)
push
mov
and
into
xchg
mov
mov
dec
imul
fistp
inc
dec
jbe
and
iret
jmp
loopne
adc
mov
cmc
sahf
mov
das
pop
sbb
push
pop
in
shl
or
imul
imul
aas
mov
test
xchg
in
sbb
sub
mov
mov
cmp
push
inc
adc
xor
scas
fwait
in
jle
int
fucom
mov
adc
into
fwait
into
mov
mov
outs
popa
or
pop
lea
sub
xchg
scas
imul
fdivr
sub
test
ss
sbb
or
dec
jo
inc
rcl
and
add
push
cli
pop
pushf
pop
ret
dec
call
mov
xchg
sbb
sbb
pop
add
dec
movs
imul
pop
jmp
and
mov
in
mov
xlat
mov
jg
sub
in
test
adc
out
mov
js
xor
add
jge
mov
and
inc
mov
or
retf
pushf
and
adc
mov
ds
fwait
ss
pop
idiv
repz
test
retf
int
mov
cs
shr
xlat
sub
cwde
or
movs
imul
retf
sbb
in
push
mov
sub
mov
and
clc
enter
mov
mov
popf
mov
inc
jb
sete
xchg
push
sbb
mov
add
loop
mov
or
fidivr
inc
mov
test
cmp
sbb
and
(bad)
xor
pusha
iret
clc
daa
std
mov
mov
ins
push
xor
scas
pop
mov
movs
mov
mov
xor
push
repz
sub
mov
imul
arpl
in
out
or
push
out
retf
mov
fnstenv
ins
mov
jnp
shr
push
push
add
ret
lds
jne
ret
push
leave
int3
xchg
aam
loope
popf
cwde
dec
bswap
xchg
ret
jl
aaa
pop
or
sti
mov
add
sbb
xor
fild
add
jge
pop
mov
inc
inc
pop
fwait
mov
pop
mov
cwde
leave
pop
xor
in
pop
out
les
out
mov
imul
int3
fwait
dec
adc
adc
inc
mov
pop
xchg
pop
push
movs
test
push
shr
mov
sbb
cmp
rcr
scas
cmp
mov
movs
mov
lds
adc
pop
pop
and
jns
add
fld
jl
shr
sub
pop
fdivr
cmp
int3
and
in
push
sbb
add
sub
fcomp
sbb
or
ja
shl
mov
mov
(bad)
neg
sbb
les
rcr
push
fcomp
pop
out
repz
cmp
popa
push
pop
mov
imul
std
xor
cmp
or
xor
mov
jmp
sbb
xor
adc
inc
or
xor
int
push
mov
leave
jmp
cmp
je
pop
adc
mov
adc
mov
movs
rcr
test
sbb
mov
movs
mov
jae
push
in
or
adc
jle
jecxz
xor
add
outs
add
test
test
add
xchg
xor
xor
xchg
ret
mov
cld
push
je
sar
cmp
(bad)
jg
repnz
dec
jo
int3
mov
shr
out
jo
cmps
add
mov
sbb
dec
xchg
sbb
ins
add
dec
out
mov
mov
fidiv
add
xacquire
jbe
shr
and
in
mov
and
pop
mov
inc
(bad)
and
push
ss
mov
mov
mov
call
cmp
mov
pop
cmp
cmp
sub
hlt
cli
aad
mov
xor
sbb
add
sbb
fnsave
lahf
cmp
and
push
out
or
dec
push
(bad)
add
call
fdiv
mov
popf
arpl
cmp
call
fwait
or
mov
adc
neg
ret
stc
mov
inc
mov
daa
pop
xor
sub
stos
js
fnsave
dec
jns
add
icebp
mov
dec
pop
dec
fistp
and
cmp
out
mov
popf
sub
ins
or
cmp
test
or
aaa
dec
pop
js
inc
mov
into
ja
je
fldpi
call
push
cwde
imul
int3
mov
call
and
sub
or
outs
pusha
xchg
inc
std
xchg
mov
sbb
dec
mov
mov
jg
aaa
mov
adc
inc
into
outs
ja
dec
cmc
adc
xchg
cmps
push
(bad)
jo
pop
imul
xchg
mov
ins
cwde
xrelease
in
inc
into
sar
lahf
jmp
xchg
add
in
mov
cdq
(bad)
inc
mov
xlat
fisttp
xchg
sahf
div
push
sub
(bad)
in
or
fistp
inc
adc
or
dec
pop
lea
int
(bad)
xchg
and
inc
mov
or
sub
sub
repnz
sbb
ret
mov
int
retf
pop
xchg
int
xor
cmp
pop
xchg
adc
push
sbb
es
jno
mov
test
sti
addr16
ins
dec
jle
js
xchg
cli
add
sbb
mov
je
in
cld
mov
test
lods
xchg
gs
sub
fcmove
jno
or
jno
into
ds
(bad)
je
mov
xor
pop
jns
inc
xchg
mov
(bad)
das
movs
mov
push
retf
adc
pop
jo
sbb
ja
dec
adc
jbe
std
cli
mov
out
call
(bad)
leave
mov
das
inc
or
sub
ja
mov
aaa
(bad)
sti
mov
push
fiadd
sbb
(bad)
enter
out
bnd
in
(bad)
xor
fwait
xor
mul
(bad)
loopne
jno
inc
sub
ud1
xor
pop
dec
cdq
in
xor
nop
call
inc
aam
xor
pop
jnp
es
add
sub
adc
jbe
movs
fs
xchg
or
sub
stos
cmp
ret
sahf
and
pop
ss
xor
xor
cmc
cli
daa
xor
outs
push
xchg
out
xchg
icebp
sbb
out
jmp
cmps
cmps
in
and
sub
and
outs
sbb
(bad)
out
add
mov
and
ja
pushf
fnstenv
idiv
jge
stc
xor
call
nop
add
add
jmp
mov
fwait
sbb
icebp
sub
and
push
sbb
(bad)
movs
pop
imul
mov
mov
mov
mov
dec
pop
sbb
fistp
outs
out
xor
or
or
loope
xor
mov
cmp
pop
lahf
(bad)
popa
scas
sbb
stos
iret
inc
mov
or
test
jmp
aaa
add
mov
ja
cmps
push
jmp
retf
(bad)
xor
aas
into
loopne
jns
daa
iret
test
inc
and
xor
fadd
and
jb
inc
push
sbb
mov
das
push
jmp
out
pop
outs
add
pop
and
scas
adc
and
mov
scas
out
jecxz
mov
xor
pushw
pop
movs
jnp
repz
add
lock
add
and
mov
xchg
loopne
shl
cmp
imul
xor
fistp
xlat
rcl
pop
jp
out
call
jg
stc
adc
mov
xchg
test
sub
ret
ja
or
push
pop
out
mov
jg
cmc
xchg
dec
xchg
outs
adc
clc
cdq
sbb
pusha
jne
fs
mov
adc
dec
dec
ret
cli
xchg
mov
push
not
loop
mov
push
fst
dec
push
test
pop
and
mov
scas
mov
xchg
push
dec
pop
xchg
shr
cdq
test
inc
xchg
in
inc
js
in
je
push
inc
push
mov
pop
pop
test
loop
xlat
movs
ds
test
xchg
repz
out
dec
addr16
sbb
push
and
aaa
dec
mov
xchg
test
int
or
cmps
dec
xor
out
dec
push
dec
push
(bad)
fsubr
push
xchg
and
ror
lods
cmc
mov
scas
into
cmp
cmp
loop
push
mov
xor
cdq
rcl
sub
xchg
xor
repnz
sbb
popf
mov
xchg
sbb
jl
jns
dec
rol
mov
mov
push
gs
jbe
retf
es
sbb
dec
and
nop
(bad)
jmp
dec
adc
mov
dec
(bad)
imul
jno
inc
inc
cmp
push
inc
lods
mul
imul
push
dec
xchg
mov
(bad)
cmps
dec
outs
gs
dec
test
in
sub
jl
jmp
data16
pop
mov
jns
push
xchg
jmp
and
jno
inc
retf
pop
pop
xchg
test
jb
push
cmps
mov
arpl
jbe
cmp
dec
cwde
ins
jno
aaa
retf
jl
mov
push
mov
jnp
jecxz
adc
jmp
adc
or
cdq
jmp
mov
(bad)
loopne
xor
or
add
jecxz
cwde
mov
outs
popw
adc
popa
xchg
pushf
dec
rcl
dec
xchg
and
push
ins
ret
test
inc
sub
outs
pop
ins
in
or
mov
hlt
cmc
jl
mov
and
xchg
pop
xchg
cwde
xchg
gs
std
pop
dec
mov
pop
ins
dec
xor
mov
mov
mov
adc
mov
push
clc
xchg
adc
pop
pop
jge
xchg
iret
or
mov
sub
inc
sub
push
jp
scas
popf
hlt
sub
lods
iret
stos
bnd
out
jmp
xor
xchg
test
and
(bad)
xchg
(bad)
sti
dec
cmps
scas
fimul
in
add
pop
adc
maskmovq
not
icebp
in
lods
sub
xor
(bad)
in
int
cmp
popa
jp
clc
xor
inc
out
jnp
bound
and
mov
or
dec
mov
inc
ds
dec
mov
xlat
cmp
mov
inc
mov
mov
ja
cld
hlt
nop
nop
push
shl
adc
pop
rcr
sub
cli
dec
cmp
jne
or
cwde
or
(bad)
jae
fs
pop
and
test
or
ret
cmp
nop
pop
mov
aam
cmp
lahf
adc
inc
mov
pop
pop
xchg
es
pop
loope
jo
mov
pop
lahf
cmp
dec
mov
cmc
and
cmc
inc
dec
mov
or
mov
dec
pop
popa
push
sub
pop
inc
push
dec
rol
pop
iret
sub
lea
mov
xchg
fcomp
push
sub
mov
hlt
dec
(bad)
jecxz
shr
mov
(bad)
loopne
xchg
loope
mov
test
mov
in
pop
dec
or
adc
in
mov
rcr
lods
mov
xchg
loopne
out
mov
add
adc
add
dec
cmp
pop
add
inc
mov
fucomi
mov
jg
in
(bad)
outs
cmp
jns
mov
mov
mov
call
push
out
fild
push
nop
mov
sbb
mov
cmp
push
arpl
loopne
xchg
mov
push
jno
test
int
cmp
in
test
push
gs
add
pop
sbb
retf
jmp
xchg
outs
jne
rol
or
pop
push
gs
pop
sar
fisubr
lahf
pop
(bad)
fild
leave
dec
(bad)
mov
xchg
mov
dec
rol
pop
push
mov
idiv
mov
dec
enter
inc
lods
aaa
push
sub
int3
or
xor
retf
add
jl
or
dec
(bad)
cmp
in
(bad)
fisubr
lds
arpl
mov
movs
xor
ror
ins
adc
out
loopne
push
mov
cmc
or
sbb
push
push
jle
ret
mov
sub
push
pop
(bad)
cmp
mov
pop
in
aad
mov
inc
mov
pop
push
lahf
cmp
lods
adc
dec
mov
outs
loope
mov
add
fwait
rcr
popf
daa
xchg
push
hlt
xor
loopne
jl
mov
test
inc
fidiv
inc
lahf
fwait
push
sub
xchg
inc
mov
xor
or
mov
mov
or
scas
das
mov
cmp
xor
retf
ror
mov
add
rol
xchg
test
iret
mov
sub
loopne
test
fcomp
pop
cmp
add
das
xor
fbstp
jge
jle
shr
addr16
fs
nop
cs
loope
arpl
movs
or
sub
fs
adc
test
out
adc
loope
iret
add
outs
push
and
mov
cmp
movs
pop
xchg
call
fwait
and
xchg
fidivr
arpl
pop
sbb
pusha
stos
and
adc
ficomp
xchg
jae
dec
add
and
lea
cs
inc
mov
lods
mov
xchg
jp
jbe
add
sbb
test
jp
sub
mov
sub
xor
jl
or
daa
inc
fidivr
add
test
repz
arpl
loop
cs
push
shl
div
and
popf
imul
inc
fwait
and
dec
mov
or
push
int3
outs
fnstenv
jno
fsubr
jmp
xchg
ja
mov
mov
jmp
mov
pop
dec
mov
mov
retf
fninit
inc
jb
fnstsw
cs
jge
cmc
dec
or
jbe
mov
sub
into
jecxz
iret
adc
int3
and
push
cmc
cmp
cmc
out
std
outs
iret
stos
scas
lods
xchg
dec
popw
xchg
shl
adc
aaa
imul
bound
inc
es
mov
cmc
imul
std
cmp
rol
test
fstp
dec
enter
mov
xchg
xchg
iret
nop
dec
call
sbb
push
add
inc
mov
shl
jns
ja
mov
push
xchg
push
xchg
jmp
scas
bound
mov
call
sbb
ret
loopne
sub
and
mov
or
pop
dec
int
jmp
imul
cmc
fwait
pop
cmp
retf
icebp
(bad)
mov
and
sub
ds
fstp
mov
xchg
and
ds
add
cmp
sub
mov
mov
cmp
xchg
std
cmc
or
call
and
xor
je
lods
lods
cmps
sbb
sub
jmp
imul
adc
dec
arpl
push
fistp
jne
pop
mov
sub
mov
popa
outs
mov
mov
pop
or
pushf
pop
and
add
or
test
stos
xchg
test
sbb
cwde
call
mov
xchg
int
push
cli
mov
retf
push
dec
adc
mov
adc
jge
and
lock
sub
stc
outs
(bad)
push
fisubr
or
pop
ins
sbb
mov
and
fnstsw
int3
out
sub
(bad)
in
adc
xchg
add
and
hlt
and
inc
sub
add
cwde
add
sbb
nop
cmc
cmp
in
mul
in
hlt
inc
in
mov
inc
ss
aam
(bad)
pop
outs
push
and
mov
pop
pop
(bad)
jmp
push
xchg
push
in
mov
mov
jnp
or
(bad)
outs
or
inc
mov
bsf
mov
(bad)
std
or
test
pop
xor
sub
push
sbb
or
dec
test
into
and
out
daa
lods
mov
lods
aad
in
fwait
xchg
add
dec
jns
xchg
xchg
iret
sub
xor
jns
das
fmul
popf
jmp
mov
cmc
jge
fidiv
rcr
jp
ins
pop
outs
ror
hlt
data16
aaa
jmp
push
push
add
mov
xor
jo
(bad)
repnz
daa
adc
inc
xor
add
adc
shl
out
xchg
or
or
clc
loope
das
loope
cmp
popf
outs
cmps
loope
mov
mov
in
ins
es
int
adc
icebp
mov
adc
sbb
lods
clc
add
mov
(bad)
stos
je
sbb
dec
or
fldenv
out
jmp
mov
repz
jns
mov
retf
cdq
or
ficomp
inc
stc
add
fisub
aad
addr16
std
rcr
and
push
loope
out
loop
loopne
or
jae
sbb
dec
inc
jbe
mov
cld
mov
mov
fdivr
jg
fimul
mov
sbb
imul
ds
cld
cmps
inc
nop
(bad)
popa
sbb
std
mov
retf
cmp
shr
shl
jnp
mov
jne
dec
jb
in
jmp
aad
(bad)
push
rol
rol
jne
add
scas
pop
cwde
std
test
push
mov
nop
pop
sub
call
inc
lods
pop
cwde
xchg
add
xchg
lods
out
sahf
push
imul
xchg
ja
movs
dec
iret
dec
sub
sub
jg
push
mov
pusha
hlt
inc
sub
mov
leave
or
push
test
iret
fisubr
lock
out
in
pop
inc
or
mov
dec
aam
push
test
jno
lods
push
ds
scas
add
repnz
adc
clc
mov
ins
iret
sub
in
fxch
xchg
lock
cmps
mov
push
xchg
dec
fdiv
and
mov
rcr
dec
jne
push
inc
adc
cmps
mov
loopne
cmp
pop
or
leave
movs
jp
mov
outs
inc
pop
outs
cmp
fbld
movs
clc
jmp
sub
int
pop
fwait
data16
xor
ds
(bad)
fistp
clc
shl
mov
mov
or
xchg
rcr
sbb
xchg
jp
movs
sub
dec
aaa
jno
mov
pop
fist
and
idiv
(bad)
icebp
leave
daa
mov
jmp
mov
shr
ja
les
ret
sbb
lock
pop
or
inc
dec
pop
mov
enter
in
inc
inc
push
inc
add
ret
add
dec
push
pop
ficom
or
jp
xor
jmp
rcr
enter
fist
push
push
cs
or
sub
jns
aam
mov
lods
xor
jge
adc
push
mov
sbb
aas
push
or
push
js
jp
int
push
adc
and
out
dec
inc
push
cdq
add
retf
push
add
mov
mov
clc
jmp
inc
jno
cmp
or
inc
leave
fmul
mov
retf
mov
or
xchg
sub
jecxz
jmp
shr
or
fs
retf
ror
inc
pop
xchg
sbb
inc
sbb
leave
(bad)
aad
inc
(bad)
and
fsubr
mov
lods
xor
aaa
std
fcomp
or
test
imul
cmps
jmp
adc
dec
inc
ja
xor
cmp
repz
and
out
pop
add
add
push
or
mov
mov
xor
iret
mov
cmp
inc
cli
adc
pop
pop
aam
ficom
scas
ins
add
stc
movs
inc
xchg
jmp
cmc
and
test
mov
mov
loope
cmp
cmps
adc
fidiv
cmps
mov
pop
es
aam
xor
pop
stos
or
add
jg
mov
add
or
jmp
popa
push
mov
aaa
mov
add
test
mov
imul
in
ins
pop
out
fistp
xchg
mov
mov
xchg
push
clc
in
mov
mov
popf
mov
loope
retf
sahf
out
ins
sahf
adc
mov
ss
and
or
adc
xor
mov
mov
xor
jmp
ror
dec
jg
(bad)
and
retf
jae
test
pushf
(bad)
fimul
cmp
cmp
in
shl
sub
mov
mov
sbb
xchg
xchg
mov
push
dec
cli
mov
cld
sbb
icebp
xor
mov
ds
outs
enter
add
mov
mov
xor
out
jno
sbb
push
push
mov
mov
in
xchg
mov
out
int3
fwait
mov
push
push
inc
mov
out
cld
loop
test
cmc
pop
loope
mov
adc
pushf
and
not
xchg
pinsrw
cmp
and
test
dec
fsubp
loopne
mov
pop
add
call
and
ins
and
loop
xor
fs
push
in
sub
jbe
ins
bound
mov
mov
shr
call
add
xor
inc
sbb
stos
(bad)
sub
outs
cwde
cdq
and
jmp
mov
pushf
pop
sub
lods
and
ror
(bad)
adc
xlat
mov
push
sbb
jmp
push
in
sti
push
aaa
sbb
push
or
gs
or
enter
pop
inc
cmp
and
cmp
pusha
sub
clc
xor
mov
cli
sub
xor
div
repnz
mov
mov
in
les
cmp
push
outs
test
pop
bound
jae
inc
iret
fstp
jmp
(bad)
jmp
and
add
mov
addr16
pushf
rol
(bad)
iret
jle
jmp
mov
jg
mov
sub
call
std
sub
add
push
xchg
push
inc
jg
sti
dec
out
ror
leave
mov
jo
(bad)
push
jbe
mov
add
in
mov
jge
ret
adc
dec
repnz
hlt
mov
ret
inc
ins
and
sub
ret
adc
imul
mov
pop
addr16
hlt
cmp
and
arpl
push
aas
jmp
pushf
or
jne
mov
imul
ret
jle
mov
popf
clc
gs
jg
and
adc
xchg
pop
out
and
int3
fadd
mov
mov
into
jno
push
in
imul
inc
adc
jnp
jge
xor
cmps
(bad)
jns
jne
adc
cmc
ja
sahf
int
out
xlat
ret
pop
sbb
fstp
mov
pop
mov
rol
icebp
stc
fiadd
and
jp
xchg
in
aad
push
cdq
sbb
and
push
mov
mov
fcom
mov
push
pushf
push
repnz
cli
push
inc
out
ror
and
ins
push
jno
push
or
cmp
es
mov
loop
ins
and
arpl
mov
and
rol
sbb
rcr
fbld
mov
jle
sar
rcl
sbb
ds
in
icebp
pushf
pop
aam
movs
mov
dec
pop
mov
mov
ret
and
stc
stos
stos
xchg
loop
add
pop
retf
add
pusha
push
sti
popf
xor
aas
sub
dec
pusha
sbb
test
push
xchg
arpl
nop
cmp
int3
jb
loop
es
jo
js
push
iret
stos
pop
cmp
push
mov
(bad)
push
dec
call
std
mov
fist
in
pop
push
icebp
fcomp
mul
add
pop
or
push
enter
addr16
cs
aaa
test
fsub
inc
ror
pop
ss
xor
xchg
lds
add
test
mov
in
inc
retf
jmp
aam
sub
cmp
stc
xchg
les
(bad)
jb
or
sub
add
js
sub
mov
jno
jae
shl
call
std
and
mov
and
iret
sti
pop
clc
mov
push
test
int3
jmp
jg
imul
cmp
xor
les
mov
sub
loopne
shl
lods
mov
mov
mov
sbb
cmc
loopne
sub
fild
lea
jno
pop
std
out
gs
lahf
cmc
or
repz
mov
repnz
or
stos
mov
adc
(bad)
call
dec
add
mov
popa
cli
stos
inc
cs
scas
inc
pop
jmp
dec
mov
sbb
mov
rcr
pop
cmp
mul
push
clc
add
mov
cmp
fsubr
(bad)
imul
popf
xchg
cli
push
fsubr
jg
inc
adc
aam
stos
jnp
scas
xchg
dec
xchg
push
adc
sbb
push
fimul
cmps
call
fmul
call
js
sub
fadd
and
test
pop
(bad)
cmp
(bad)
dec
movs
sub
xor
jecxz
push
dec
jl
cmp
sahf
std
xor
add
in
aaa
jge
iret
cs
mov
pusha
or
xchg
add
or
aad
dec
sbb
or
pop
inc
xor
ins
and
mul
sti
pop
mov
push
pop
pop
xchg
push
add
hlt
sbb
fsub
pop
xchg
and
cmp
push
int3
call
mov
aaa
stc
and
cmps
mov
mov
jb
adc
in
in
inc
add
and
pop
push
adc
mov
mov
clc
jg
cwde
sub
jmp
int3
xchg
ins
les
out
sti
xchg
jl
and
fstp
ret
xor
lods
aas
mov
adc
mov
sti
inc
push
and
(bad)
and
outs
cmp
je
inc
repnz
into
movs
sub
mov
adc
in
lahf
ret
inc
std
movs
push
jns
sub
out
stc
cmp
stc
inc
das
push
in
aad
out
int
mov
inc
xchg
jb
hlt
dec
jge
or
pop
out
jne
div
mov
or
fisub
xor
iret
movs
push
scas
push
retf
(bad)
sar
or
fisubr
fistp
cmp
push
clc
pop
mov
lds
and
ins
push
sti
push
and
test
pop
mov
lods
dec
call
mov
fdivr
in
ds
imul
addr16
add
xor
into
dec
sahf
jmp
mov
es
add
sbb
inc
(bad)
mov
push
stos
dec
mov
inc
mov
mov
jl
inc
jp
dec
mov
sbb
xor
hlt
stc
adc
inc
inc
(bad)
jecxz
jmp
add
xchg
fisubr
ficomp
es
test
pop
out
and
mov
adc
aad
mov
clc
loope
je
mul
and
inc
enter
cmp
dec
enter
pushf
adc
push
lods
ror
jae
xor
mov
daa
int
test
fisttp
mov
data16
mov
jecxz
and
(bad)
fstp
and
xchg
(bad)
out
jle
out
jnp
and
jge
lahf
dec
and
loopne
jne
int3
adc
and
mov
in
mov
mov
bound
or
mov
mov
or
jno
sbb
test
mov
das
jecxz
cs
cmp
inc
dec
adc
daa
inc
jle
enter
mov
int3
loop
push
(bad)
jae
and
sub
dec
mov
dec
leave
or
push
mov
mov
call
mov
push
scas
hlt
xchg
iret
(bad)
adc
icebp
jmp
(bad)
mov
scas
loope
(bad)
jle
fwait
xchg
adc
cmp
mov
out
cmp
in
dec
cdq
and
data16
xchg
mov
push
ins
add
push
scas
(bad)
push
sahf
lds
out
xchg
xchg
push
pop
inc
data16
xchg
nop
fiadd
movs
jbe
xchg
jmp
and
jno
xor
pop
jmp
jno
les
xchg
adc
aaa
retf
sti
das
mov
arpl
repz
movs
and
scas
adc
and
push
mov
adc
mov
lods
int
sbb
push
retf
test
(bad)
jbe
mov
mov
push
iret
adc
jge
or
xchg
pop
fcomp
jge
cmp
sbb
std
xchg
or
repz
aaa
out
push
xchg
outs
adc
ins
cmc
add
fs
dec
cmp
mov
xor
and
nop
jno
jb
cmp
pop
jg
les
repnz
arpl
and
in
jg
mov
lods
push
inc
movs
fdiv
inc
dec
sbb
push
out
lock
inc
lds
sbb
mov
dec
inc
jmp
test
arpl
pop
dec
cmc
pop
pop
jno
mov
mov
xchg
sar
int
sub
push
addr16
inc
mov
sub
pop
xchg
jnp
ds
icebp
sahf
jmp
daa
cli
retf
and
call
test
dec
imul
lahf
push
pushf
test
outs
iret
retf
jnp
into
sub
cmp
push
add
lods
jg
shl
xchg
stc
cmp
lods
in
mov
add
scas
gs
push
imul
sbb
jle
setb
add
jb
icebp
pop
pop
out
jb
dec
aas
and
mov
hlt
shr
xchg
imul
lods
es
xor
jns
xor
mov
pop
mov
dec
dec
xchg
bound
push
mov
(bad)
fnsave
(bad)
jge
xchg
inc
icebp
xchg
jg
inc
dec
test
cli
dec
cmc
push
(bad)
fwait
dec
dec
test
shl
xor
dec
cmp
jmp
add
hlt
(bad)
or
ror
bndldx
mov
mov
add
out
sub
fist
push
ins
in
sbb
cmp
sbb
dec
mov
scas
cs
xchg
xlat
xor
(bad)
das
cmp
ja
inc
scas
sub
or
in
lahf
sbb
mov
in
nop
pop
ret
mov
sub
fist
mov
dec
adc
fxch
es
push
inc
mov
call
xchg
mov
fdiv
jb
mov
sbb
in
sbb
call
mov
es
call
jmp
ret
and
xchg
retf
hlt
rcl
ror
xchg
jecxz
pop
(bad)
xor
pop
xlat
mov
push
lods
(bad)
enter
pop
mov
ds
je
inc
xchg
sub
sub
lods
loop
(bad)
cld
cmc
push
or
in
out
add
xor
out
sub
cmp
cmps
pop
int3
push
xor
(bad)
enter
mov
and
pop
inc
jle
and
repnz
int
ffree
push
push
push
in
imul
movs
cmp
mov
ss
ret
pop
fild
enter
jmp
retf
call
jmp
dec
push
push
imul
leave
movs
cmp
bound
adc
push
sub
aas
mov
pop
fldenv
push
cmp
xchg
int3
xchg
lahf
outs
or
scas
xor
dec
pop
pushf
xchg
sbb
addr16
mov
inc
das
and
das
pop
cwde
add
xchg
ins
int
cmc
(bad)
punpckhwd
adc
sar
jle
push
add
pushf
jg
mov
pop
mov
xor
cdq
sbb
daa
ja
xor
leave
fstp
xor
leave
or
mov
dec
pusha
ret
fisub
hlt
lahf
cmps
xor
adc
retf
xchg
cmp
dec
xchg
(bad)
cmp
and
jmp
adc
movs
push
inc
(bad)
jmp
mov
ds
xchg
pop
or
outs
xchg
sbb
int
call
inc
jbe
and
adc
(bad)
les
adc
call
es
fidiv
mov
mov
adc
in
repz
mov
bnd
imul
sbb
add
in
dec
sbb
dec
test
jno
xor
jge
jmp
mov
jecxz
sbb
cwde
dec
int
xchg
mov
adc
push
push
ret
movs
mov
retf
(bad)
push
inc
iret
or
out
mov
cmp
dec
and
loop
jno
or
push
dec
inc
aad
jbe
xor
cmp
mov
fcomp
push
inc
and
loop
(bad)
adc
arpl
inc
and
push
sbb
cmp
scas
jle
scas
jno
pop
fwait
lds
adc
jecxz
add
lock
outs
hlt
mov
(bad)
and
jl
xchg
loope
movs
jno
retf
neg
ucomiss
mov
adc
rcr
pcmpeqw
pop
mov
jecxz
mov
adc
sub
push
stos
rcl
ja
push
dec
out
and
js
pusha
and
bound
pusha
cmp
jl
js
mov
sbb
ror
cld
shl
out
movs
fild
dec
test
cwde
jmp
cmps
dec
loop
ins
push
mov
loope
scas
or
ins
mov
jp
(bad)
stc
sub
xchg
out
dec
stos
sti
in
fsub
retf
add
bound
jbe
lock
mov
loop
jnp
mov
ret
fnstcw
jno
xor
xchg
and
jb
inc
pushf
fsubr
mov
pop
sub
inc
xchg
dec
xchg
cmp
sbb
(bad)
leave
xor
mov
push
imul
fisubr
xor
xchg
sti
movs
ror
add
lea
shr
cdq
in
push
sbb
jbe
dec
add
pop
mov
cmp
xchg
push
pop
mov
push
adc
rol
push
pop
out
test
cmp
ror
scas
int
adc
ror
aas
cmps
into
stos
add
sbb
push
push
adc
inc
inc
add
and
xchg
lods
xchg
loop
mov
mov
out
in
jmp
je
adc
dec
je
push
xor
arpl
lock
mov
popa
je
mov
stc
mov
rcl
mov
imul
xchg
imul
push
repnz
jbe
test
or
push
cmc
rol
iret
mov
(bad)
popa
fisub
dec
add
aas
cs
aaa
pop
dec
xor
sahf
cmp
fimul
adc
lea
dec
mov
xchg
mov
adc
add
jl
jp
and
outs
(bad)
out
sbb
ins
dec
sub
or
adc
mov
jmp
xor
inc
(bad)
jno
sahf
mov
out
dec
mov
jbe
mov
mov
push
pop
add
imul
pop
in
out
sub
cmp
out
xor
add
and
mov
mov
cmp
repz
mov
cmp
dec
dec
dec
mov
jmp
mov
pusha
movs
out
out
cli
jbe
sub
je
sbb
mov
bound
out
neg
shr
pop
push
fld
or
out
jnp
xchg
add
inc
cmp
adc
test
stos
or
mov
jbe
pop
ins
mov
jbe
dec
pslld
push
xor
push
js
je
mov
or
push
adc
and
jecxz
inc
jne
outs
mov
imul
inc
jmp
retf
inc
test
leave
xor
stos
xor
dec
in
daa
dec
stc
sbb
push
cmp
or
out
push
div
mov
sub
test
xchg
retf
cld
mov
sbb
push
push
adc
icebp
push
xchg
cmp
xchg
mov
hlt
lods
sub
adc
js
xchg
push
jnp
xor
ror
pop
mov
pusha
ja
push
fdiv
enter
push
outs
jno
imul
inc
sub
mov
mov
jmp
mov
shl
sahf
jo
movs
ins
mov
mov
push
imul
cs
cmp
jns
sti
sbb
mov
xchg
pop
fdivr
retf
pusha
pusha
xchg
popa
mov
mov
std
lods
fsin
sbb
jge
push
sbb
mov
sbb
or
repnz
fsubrp
and
stos
and
xchg
popf
and
ret
cs
jae
(bad)
repz
sub
pop
pop
mov
nop
fdivrp
sub
sbb
jno
(bad)
mov
mov
lods
mov
lods
int
repz
hlt
add
dec
loopne
and
adc
adc
(bad)
and
imul
lfs
push
sti
data16
push
sbb
jmp
lods
jne
cmp
dec
pop
jbe
iret
retf
js
and
cmc
dec
mov
mov
jp
jecxz
in
xchg
jecxz
inc
(bad)
ds
iret
clc
fild
push
and
xchg
sub
pop
in
sbb
ds
scas
mov
add
xchg
int3
adc
outs
mov
jle
scas
jl
test
push
lock
dec
leave
add
xor
faddp
jmp
rep
mov
ins
mov
in
retf
pop
xchg
add
push
sub
movs
add
push
xor
scas
jno
inc
pop
lea
mov
daa
out
jo
push
adc
cmp
dec
mov
mov
mov
cwde
outs
inc
cmps
movups
fild
imul
jmp
(bad)
not
loop
jb
xchg
pop
push
add
ret
push
bound
xlat
sti
daa
fwait
dec
(bad)
sbb
add
dec
ret
xor
jne
ins
test
idiv
lahf
push
sti
jmp
dec
ret
mov
mov
mov
pop
aam
addr16
jg
loopne
mov
mov
mov
jns
imul
xor
outs
inc
fsubr
ds
out
in
mov
iret
arpl
fcomp
mov
jbe
xor
outs
out
mov
dec
jnp
mov
pop
fidiv
shr
xor
push
mov
adc
hlt
inc
jnp
sbb
inc
imul
xchg
push
(bad)
mov
imul
pop
sahf
dec
pop
sahf
add
sbb
jp
in
mov
sbb
addr16
cli
sub
mov
repz
adc
jno
dec
loop
pop
xchg
inc
daa
sub
ins
cmps
das
es
jno
aad
inc
add
outs
sbb
add
je
xchg
sbb
int3
aam
aas
enter
pushf
(bad)
cmps
movs
stos
cmp
into
cmp
aam
sub
ret
arpl
cmp
mov
ins
mov
test
mov
dec
pop
gs
test
test
adc
xchg
div
xchg
ins
imul
repz
pop
jbe
xor
mov
jmp
xor
test
add
(bad)
stos
das
fidivr
and
push
jo
cmp
aas
sbb
xor
test
push
ret
push
fld
jp
les
into
mov
adc
and
inc
mov
inc
pop
into
aaa
ret
push
mov
leave
add
clc
add
or
push
mov
bound
cmp
rcr
lock
sub
mov
sbb
adc
mov
retf
sub
add
and
sti
mov
fwait
add
fst
cld
arpl
cmp
jnp
add
lahf
inc
dec
mov
mov
ret
pop
(bad)
lahf
mov
jne
scas
je
nop
mul
inc
pop
adc
sti
cmp
xor
mov
mov
xchg
push
stc
cli
dec
push
cmps
sub
sbb
mov
jge
pop
cmps
nop
xor
addr16
call
aas
jl
sar
gs
sub
cmp
fisub
jmp
mov
(bad)
mov
xor
sub
pushf
cmc
add
imul
loope
cld
mov
mov
out
xor
add
imul
jb
je
pop
jne
mov
pop
mov
or
(bad)
mov
push
(bad)
loope
jbe
mov
or
sbb
sar
aaa
xchg
mov
pop
int
mov
in
push
mul
loopne
out
and
inc
(bad)
in
shr
dec
enter
mov
stos
xor
and
ins
cwde
popf
dec
imul
cmp
call
ins
push
inc
pop
pop
scas
test
pop
xchg
icebp
cmp
lods
and
in
sub
pushf
scas
dec
loope
mov
jne
jmp
sub
mov
lock
sbb
cmp
or
mov
adc
daa
cmp
mov
mov
cmp
fld
retf
mov
enter
pushf
mov
add
loope
es
cwde
(bad)
push
and
int3
aam
imul
sahf
mov
dec
movs
cmp
fbstp
retf
jle
loopne
mov
je
add
dec
push
add
(bad)
leave
aaa
call
add
cmp
xor
cwde
in
ucomiss
test
jo
push
xchg
pop
push
imul
(bad)
std
sbb
je
loop
push
mov
sbb
adc
aad
and
adc
jns
dec
mov
and
inc
mov
in
inc
add
sbb
add
adc
dec
mov
fdivr
inc
dec
mov
test
stc
push
push
fcom
jnp
pop
ins
fidivr
jnp
sub
ins
mov
cmc
mov
jno
mul
lds
retf
div
(bad)
cli
add
add
mov
mov
callw
sub
inc
push
gs
and
jno
mov
push
mov
add
outs
ror
pushf
repz
fidivr
inc
inc
out
stc
int
dec
clc
inc
pop
mov
sub
enter
xchg
xchg
mov
jne
add
retf
loop
or
lahf
test
dec
xchg
dec
pop
fmul
icebp
and
into
test
out
pushf
bound
add
out
pop
pop
fdivr
pop
mov
aas
(bad)
ja
outs
pop
in
out
ds
repz
stos
add
jge
and
xchg
or
stc
lds
dec
mov
nop
test
mov
gs
xor
loop
inc
shl
mov
mov
fld
or
stos
adc
dec
ja
dec
ins
clc
(bad)
and
in
fidiv
(bad)
and
lds
sbb
pop
cs
in
int
fild
jp
aas
repnz
push
into
fst
jb
in
sar
push
iret
bound
sbb
and
mov
adc
stc
aaa
push
mov
cmp
dec
imul
dec
push
or
std
mov
mov
inc
xor
dec
lahf
push
jns
shl
adc
lods
icebp
sti
retf
sub
jno
loope
out
and
xchg
sbb
or
fisttp
loope
push
sbb
dec
pop
push
daa
xchg
xor
sub
je
out
sbb
aas
adc
pop
or
bound
jp
pop
push
push
fwait
clc
mov
push
outs
dec
sbb
(bad)
mov
into
data16
mov
push
pop
push
bound
pop
mov
aas
lahf
imul
pop
mov
push
pop
xor
les
hlt
xor
(bad)
mov
sbb
je
push
jp
imul
je
(bad)
push
mov
rol
ja
dec
and
xor
retf
pop
sbb
imul
scas
adc
rol
xlat
adc
inc
pusha
push
jecxz
je
hlt
mov
(bad)
in
or
frstor
dec
fiadd
retf
cmp
leave
xor
ss
icebp
mov
mov
mov
call
test
cmc
xchg
rol
sbb
not
mov
bound
int
dec
jecxz
adc
mov
inc
jbe
movs
addr16
punpcklwd
popf
jne
jns
mov
in
jmp
test
push
and
sbb
sbb
jno
add
sbb
push
sbb
cmps
(bad)
cmp
ror
ror
xlat
dec
test
aaa
push
lea
or
retf
shr
ret
dec
daa
outs
aad
jl
imul
jno
je
nop
fldenv
adc
sub
vshufi32x4
push
xchg
test
mov
xor
mov
leave
sbb
jb
lods
rcr
add
pusha
aam
in
push
leave
inc
mov
xor
cmp
adc
lahf
loopne
jge
sub
stos
int
cmps
pop
stos
pop
xor
dec
iret
inc
dec
data16
mov
dec
mov
or
xchg
ss
in
loop
cmps
(bad)
fisub
add
push
jno
mov
or
pop
xor
add
fcomi
xchg
enter
add
push
js
inc
jmp
mov
mov
std
sar
ins
imul
cmp
movs
jg
and
call
leave
icebp
jmp
imul
sbb
pop
in
inc
scas
call
ja
mov
add
das
rol
mov
bound
add
push
push
loop
xlat
and
test
call
(bad)
fwait
stos
cmp
jb
rcr
out
outs
mov
sub
dec
data16
dec
push
es
xor
cs
cmp
jbe
loop
jo
aad
xlat
fs
dec
sbb
xchg
rol
dec
or
scas
pop
lods
sub
jmp
ja
int3
cmps
cmp
mov
cmps
and
loope
lds
ins
stos
add
cs
mov
inc
outs
jp
lods
or
mov
and
fwait
ss
cmps
mov
sub
inc
sub
mov
into
sub
inc
shl
(bad)
cmps
test
je
int3
ds
out
push
out
xchg
rcr
jle
inc
xchg
push
jmp
add
and
adc
pop
les
inc
push
mov
push
xor
cmp
pushf
cmp
out
mov
inc
fcom
ins
push
dec
add
scas
inc
mov
(bad)
xor
scas
lahf
sub
lahf
sbb
and
adc
into
stc
pop
mov
out
sti
pop
lods
cwde
and
cmp
xchg
xor
add
cmp
jp
sbb
popa
sti
(bad)
popf
fmul
in
pop
out
inc
enter
std
pop
(bad)
leave
mov
push
add
pop
xor
stos
pop
ja
sbb
leave
and
xlat
retf
and
leave
enter
sti
mov
sub
retf
(bad)
out
(bad)
fadd
pop
sahf
and
test
out
jne
stc
mov
sub
repz
hlt
fidivr
push
sbb
and
adc
scas
idiv
js
adc
shr
rcr
lods
mov
outs
aam
and
sbb
or
cmp
in
xchg
pop
es
sub
fmul
jbe
cmp
icebp
ja
enter
sub
xor
xor
jne
les
inc
pop
sar
pop
(bad)
push
mov
ret
push
push
push
stos
bound
and
sub
cmps
(bad)
repz
and
add
ror
int3
xor
or
mov
adc
sbb
sub
shl
cmps
jge
or
movs
sub
cdq
cdq
and
ffree
loope
lea
ja
inc
or
inc
arpl
xchg
jae
int
mov
cld
add
push
cli
bound
out
int3
xchg
mov
inc
push
movs
fucomp
push
div
inc
xchg
pop
pop
fs
push
rol
jmp
loopne
stos
in
adc
jb
psubsw
push
sbb
xor
test
sub
cld
jnp
and
retf
(bad)
mov
cmp
and
or
fstp
and
sub
scas
mov
dec
imul
fbstp
mov
xchg
stos
mov
(bad)
les
xchg
inc
fimul
fsub
push
jb
popf
sahf
hlt
aam
and
mov
lods
inc
fs
mov
sbb
cmps
mov
sahf
sbb
fcmovnb
sub
cmp
in
xchg
pop
jo
pinsrw
nop
outs
ret
and
xor
pop
in
add
inc
dec
jne
push
data16
movs
daa
int3
in
out
push
ss
stos
not
dec
or
dec
inc
sub
mov
jns
lods
and
cli
inc
aaa
xchg
pop
xor
xor
pushf
add
xchg
mov
cwde
sub
push
aas
and
mov
js
clc
xchg
scas
pusha
sub
aam
out
mov
loopne
mov
bound
clts
jbe
in
and
loope
clc
jb
dec
or
adc
je
add
push
push
adc
push
inc
jns
retf
pop
out
sbb
dec
dec
cmp
lock
enter
out
je
in
xchg
pop
xchg
int
adc
mov
sti
jns
gs
mov
xor
ficom
repnz
repz
sbb
repnz
ret
pop
jge
xor
xor
sar
jecxz
popf
xchg
xchg
nop
fisubr
fsub
mov
add
ret
test
iret
ds
sar
push
cdq
dec
mov
jno
jnp
inc
push
in
stos
xchg
push
ret
sti
jb
xchg
shl
fimul
mov
jae
jo
mov
mov
lods
add
mov
lods
jg
push
mov
enter
inc
cwde
mov
(bad)
push
xchg
or
add
es
enter
(bad)
adc
xchg
cwde
push
dec
cmp
sub
mov
sub
xchg
stos
cmp
pop
out
dec
je
cld
mov
sbb
nop
jmp
dec
ins
push
and
jle
sahf
imul
xchg
into
mov
sub
mov
iret
add
add
xchg
mov
dec
mov
adc
sub
cli
stos
and
rol
sahf
sub
and
sub
arpl
xchg
and
in
js
mov
pushf
out
xchg
dec
iret
fnstcw
cmp
lea
cmp
sub
repnz
or
xlat
pushf
addr16
mov
dec
in
jb
test
mov
std
es
push
lahf
push
cld
hlt
fdivr
mov
imul
retf
and
lods
out
data16
aas
xchg
sbb
mov
in
ins
test
jmp
push
in
and
push
jae
ja
cmp
cmp
daa
movs
push
dec
mov
push
mov
aaa
addr16
mov
pushf
mov
inc
pop
add
mov
xor
or
in
fld
cmps
es
xlat
pop
(bad)
sbb
jecxz
cmp
sahf
cmps
push
inc
hlt
out
cmp
sub
and
cmp
inc
adc
sub
adc
adc
inc
das
retf
movs
es
std
xor
mov
inc
xchg
inc
in
cmp
ins
mov
dec
imul
test
sbb
sub
imul
lods
mov
jge
add
inc
xchg
ret
inc
ins
int3
data16
sahf
pop
int
pop
fwait
(bad)
jo
and
sbb
xchg
ret
push
sbb
imul
inc
sbb
cmp
daa
lods
daa
xor
sti
jmp
pop
fild
dec
fisttp
fsub
adc
mov
push
push
arpl
iret
and
jmp
fist
jae
inc
mov
sub
aad
icebp
mov
and
(bad)
cli
push
adc
pop
adc
mov
fcmovu
sub
mov
(bad)
lock
sub
mov
fsubr
adc
mov
sub
add
fwait
pop
std
mov
scas
xchg
mov
xor
xchg
sbb
add
outs
in
dec
mov
sbb
scas
push
or
sar
and
adc
jne
leave
(bad)
xchg
in
fxam
movs
push
xor
rcr
and
adc
loope
ja
jmp
jge
out
or
std
mov
cdq
jbe
stos
mov
push
movs
push
daa
mov
sbb
or
mov
lock
cmp
aam
xchg
ret
test
sbb
xchg
(bad)
mov
aad
add
enter
mov
rcl
shl
out
mov
movs
pushf
inc
adc
pop
mov
cmps
push
mov
jne
xchg
mov
xchg
xlat
push
mov
jbe
dec
cmp
dec
enter
cmps
cwde
sar
cmp
inc
mov
jb
xchg
(bad)
shl
push
and
sbb
lds
int
jno
push
cmp
int3
and
in
ror
inc
popa
pop
xor
scas
adc
sub
inc
add
(bad)
sbb
jl
pop
or
dec
cwde
push
mov
test
jne
dec
jmp
in
in
in
icebp
popa
ss
(bad)
repnz
out
movs
lahf
imul
fstp
adc
les
xchg
cld
scas
inc
push
inc
xchg
inc
mov
das
das
je
sahf
dec
sub
and
sub
mov
add
and
jb
fisub
out
cmc
lahf
and
dec
idiv
jae
cmp
mov
xlat
pop
sub
addr16
jne
mov
jmp
and
and
adc
xchg
loopne
jecxz
inc
fmul
fucom
sar
pop
icebp
inc
cdq
jne
mov
cmp
imul
aaa
sahf
shr
lea
mov
rcl
mov
fs
gs
addr16
mov
fs
test
dec
data16
pushf
inc
icebp
jb
push
inc
xlat
push
inc
lods
sbb
mov
inc
pusha
jp
stos
push
shl
lds
or
fs
aad
fld
in
pop
(bad)
push
dec
inc
push
cmp
mov
(bad)
std
jmp
sub
enter
mov
dec
sub
(bad)
xchg
int
daa
cwde
cmc
gs
mov
test
fdiv
jge
push
hlt
stc
sti
cmc
stos
xor
sti
push
jmp
jecxz
popf
in
cmps
xchg
retf
mov
jbe
mov
inc
loope
jae
cmp
les
cdq
iret
idiv
sbb
fldcw
ja
(bad)
xchg
push
ret
dec
inc
daa
stos
sbb
repnz
imul
fmul
sub
ret
add
pop
clc
add
je
outs
fadd
or
mov
push
imul
push
push
pop
fwait
push
push
dec
je
in
in
xor
push
dec
cmp
xchg
cld
fidivr
cdq
pop
pop
stc
or
and
fbstp
pop
jecxz
xchg
xchg
fmul
sbb
ss
ret
adc
test
dec
pop
ss
xchg
inc
mov
push
xor
movs
inc
lds
adc
(bad)
xlat
loop
fs
mov
mov
js
or
movs
mov
outs
pop
out
mov
jne
loopne
xchg
(bad)
dec
ins
xchg
out
pusha
pop
sbb
pop
es
test
pop
jl
dec
(bad)
xchg
out
push
cdq
repz
inc
inc
fwait
icebp
hlt
pop
dec
js
scas
lock
hlt
sub
sub
cmp
xchg
pushf
cmp
mov
inc
inc
dec
fstp
mov
(bad)
and
(bad)
enter
in
movs
dec
imul
sbb
lods
faddp
push
in
popf
fisttp
into
mov
push
sub
add
mul
cmp
mov
xchg
test
dec
sub
mov
pop
xchg
stos
aas
add
test
add
(bad)
pop
and
inc
mov
xor
mov
iret
ins
jmp
mov
mov
(bad)
push
in
icebp
gs
out
sub
mov
out
das
icebp
pop
inc
xchg
jecxz
imul
inc
lods
sbb
ds
pop
jbe
mov
mov
mov
imul
ins
int
jno
xlat
sub
sub
mov
or
mov
stos
out
add
jne
test
cmps
inc
fidivr
fiadd
fldl2t
outs
mov
pusha
inc
push
fdivr
cmps
std
or
out
cmps
mov
pusha
sub
call
fwait
retf
lea
mov
dec
shl
in
fild
cmp
sub
pop
push
mov
in
ret
cmp
call
loopne
sub
jb
mov
hlt
scas
jnp
cmp
cmp
cmps
or
mov
inc
outs
fsubr
or
fidiv
hlt
and
dec
gs
dec
(bad)
mov
(bad)
adc
scas
xor
loope
das
pushf
in
pop
rol
int
fisub
mov
or
ss
pusha
mov
sbb
in
je
jbe
inc
add
arpl
adc
push
inc
js
xchg
jae
jnp
jbe
push
sub
mov
pop
adc
(bad)
jp
push
inc
dec
(bad)
pop
(bad)
dec
push
cdq
mov
movs
nop
push
arpl
call
cmp
and
push
inc
in
lea
xor
dec
cmp
aad
cdq
(bad)
shr
mov
xchg
mov
mov
mov
and
clc
ins
loopne
fwait
jne
in
dec
dec
frstor
jns
(bad)
jbe
mov
dec
cwde
dec
xlat
sub
aas
jle
add
mov
addr16
or
out
aad
out
lock
(bad)
hlt
ins
(bad)
xor
mov
hlt
mov
xchg
test
ficomp
pop
adc
cmp
sub
and
pop
or
jbe
sahf
sub
popa
mov
aas
xchg
xor
xchg
jl
ja
das
ds
in
sbb
jl
sbb
sub
cmp
in
push
cmp
jg
leave
out
jge
pop
outs
sahf
outs
data16
dec
mov
sbb
lahf
mov
imul
repz
push
fcomp
jne
push
in
mov
call
or
push
call
fisubr
ds
dec
jecxz
pop
xlat
inc
sbb
add
pop
enter
cld
addr16
sub
iret
ss
mov
mov
int3
inc
push
fwait
dec
sub
(bad)
mov
cld
bound
pop
pop
mov
mov
and
adc
xchg
hlt
jnp
jo
fisttp
jecxz
loop
lods
push
outs
mov
xchg
les
push
pop
inc
in
sbb
or
xlat
push
retf
mov
shr
and
clc
aaa
(bad)
pop
push
inc
stc
in
cli
xchg
sar
ja
add
push
jo
popf
pop
movs
dec
mov
cmp
(bad)
push
jns
xor
scas
add
(bad)
das
cs
dec
sti
jp
iret
adc
fiadd
cmps
mov
jecxz
mov
and
ret
in
jo
std
nop
pop
dec
je
gs
fucomi
call
pop
mov
int3
jns
pop
jbe
mov
cmp
add
mov
sti
shl
cmp
out
fstp
sbb
adc
(bad)
xor
mov
lods
pop
mov
mov
(bad)
mov
mov
wbinvd
push
push
or
mov
popa
pop
fiadd
pop
clc
pop
pop
xchg
jle
(bad)
adc
jmp
sbb
cmc
xchg
(bad)
(bad)
pushf
stos
inc
xor
fwait
add
mov
adc
popf
push
pop
xor
sub
dec
cmp
inc
push
adc
push
in
sbb
xchg
inc
cmp
in
div
loope
mov
add
jmp
and
pop
mov
(bad)
push
dec
push
jo
(bad)
mov
or
pusha
cmps
int
add
pop
repz
hlt
mov
dec
inc
mov
sbb
adc
mov
repz
idiv
push
ss
fsub
add
dec
mov
ins
inc
retf
pusha
(bad)
loope
retf
xor
jb
rol
xchg
push
mov
jle
std
aam
sar
and
(bad)
in
xor
lds
or
daa
test
div
sub
out
ins
pop
mov
xchg
or
scas
test
mov
mov
mov
out
add
pusha
dec
mov
pop
lea
shr
fnstenv
ja
aad
inc
test
fidivr
es
add
test
sub
shr
(bad)
out
mov
ins
mov
rcl
stc
jns
mov
ins
mov
sub
pop
in
lds
cld
scas
movs
fs
gs
jl
shr
popf
mov
in
fnstcw
push
int3
jge
pop
arpl
mov
and
or
pop
cmp
int3
push
das
sbb
loope
(bad)
cdq
outs
cdq
mov
pop
ror
push
pop
fisttp
dec
inc
xchg
shr
sub
jmp
cs
sbb
adc
mov
pop
pop
xchg
push
movs
fistp
adc
mov
sub
xchg
cmps
pusha
push
xchg
push
mov
loope
loope
jmp
ss
push
and
sbb
or
aaa
jae
popf
add
loopne
push
xchg
dec
ficom
aam
mov
imul
jmp
xor
pop
inc
xchg
repz
fmul
dec
and
fiadd
aas
aas
add
jne
(bad)
fidivr
xchg
cmp
sar
push
iret
es
test
sbb
pop
cmp
pop
inc
clc
jge
adc
and
cmps
add
push
fnstsw
mov
xlat
pusha
int3
loop
push
rcl
and
out
frstor
mov
pop
inc
or
lods
adc
in
pop
test
icebp
pop
in
mov
dec
cmovg
mov
je
inc
dec
mov
sets
repnz
jns
sbb
mov
sbb
stc
aas
fidivr
mov
inc
mov
mov
addr16
xchg
sub
lock
(bad)
adc
xchg
cmc
or
dec
hlt
popf
fdiv
jbe
ret
pop
pop
sbb
jo
or
paddd
inc
das
popa
and
xchg
into
retf
xor
popa
push
mov
outs
sar
sub
in
retf
push
(bad)
sti
push
jge
add
mov
sub
and
sub
inc
jl
push
xor
sbb
mov
mov
(bad)
sahf
pop
mov
jnp
pop
das
aaa
mov
gs
push
arpl
jnp
aas
aad
dec
out
ret
pop
push
adc
(bad)
dec
loopne
and
adc
ret
bound
(bad)
lods
mov
ds
push
lods
cmp
dec
aaa
repnz
imul
pusha
imul
or
jns
mov
push
or
leave
popf
pop
(bad)
(bad)
mov
mov
add
mov
xchg
pop
xor
push
or
call
adc
add
or
mov
jge
jmp
xchg
and
mov
cmps
xchg
sbb
adc
fidivr
enter
jbe
mov
or
clc
adc
jge
aas
xchg
dec
or
cmp
out
int3
jle
sbb
sbb
add
adc
lahf
ror
fistp
inc
push
outs
inc
mov
sub
xchg
and
jae
repnz
jp
adc
test
or
into
push
(bad)
sbb
adc
bound
ror
mov
mov
sub
add
loop
xchg
ret
adc
and
stos
mov
movs
or
mov
xor
cwde
push
pop
xchg
ins
lods
inc
push
sub
lea
(bad)
xor
fcomp
ds
mov
pop
gs
cmp
leave
jle
mov
adc
sub
fdivr
cli
lock
neg
jae
xor
pop
adc
mov
(bad)
not
xor
adc
in
cwde
retf
lea
sbb
mov
sub
push
pushf
sti
push
add
adc
icebp
movs
or
(bad)
out
test
enter
mov
push
inc
sbb
sub
jne
arpl
jecxz
inc
xor
mov
dec
out
dec
and
jmp
fisubr
adc
cdq
mov
mov
cmp
fnstenv
sahf
iret
xchg
dec
out
xor
adc
sbb
sbb
sahf
sbb
lds
mov
mov
dec
repz
push
pushf
sub
loop
cmc
sub
aaa
add
jl
push
repnz
xchg
fs
out
call
xlat
mov
dec
aad
ret
adc
cmc
jmp
sub
mov
into
mov
push
sti
mov
adc
mov
mov
cmps
lahf
out
or
call
nop
ror
dec
adc
popa
xchg
xchg
popf
fcomi
das
out
xor
test
xchg
gs
or
loopne
sahf
stc
pop
pop
mov
cmp
mov
aas
cmp
int
add
xchg
outs
std
jl
fwait
push
or
in
ficom
xchg
sub
push
mov
cmp
test
cmp
and
jg
test
retf
push
repnz
xchg
daa
imul
out
sub
shrd
cmovle
push
xchg
clc
test
ret
mov
test
lods
aad
mov
push
test
inc
(bad)
push
cli
in
mov
movs
jg
ins
sub
out
out
pop
xor
fwait
bound
(bad)
jnp
adc
stos
dec
addr16
jne
cli
loopne
mov
fmul
mov
pop
jae
xor
xchg
jns
push
int
shl
dec
pop
js
call
(bad)
dec
popa
push
jae
push
retf
ficom
repnz
mov
cs
out
dec
imul
scas
mov
inc
dec
xor
or
stc
jle
retf
jg
dec
test
sub
cld
aam
fisttp
cmp
retf
dec
mov
push
in
out
dec
jp
mov
pop
repz
xchg
sub
sbb
lods
test
nop
mov
cs
xor
int3
push
jbe
sub
or
idiv
lods
adc
out
fst
in
and
test
push
stc
mov
cmp
mov
xchg
sahf
out
cmps
sub
fsub
sub
xchg
xchg
and
mov
std
cmp
retf
retf
mov
and
aam
dec
jmp
int3
imul
jbe
jnp
stos
mov
enter
sbb
xchg
cmp
movs
push
pop
sub
je
adc
iret
adc
push
popa
hlt
lods
shl
mov
mov
cmc
loopne
push
mov
ss
outs
in
mov
inc
ss
sub
or
fbld
xchg
adc
jecxz
adc
mov
aas
sbb
gs
shl
(bad)
fidiv
push
ret
sahf
mul
ja
xchg
cmps
xchg
adc
loop
rol
inc
xchg
bound
xchg
loope
xor
or
daa
mov
jmp
pop
aas
pop
and
cdq
loopne
leave
push
jle
push
in
xchg
pop
clc
jo
jl
jb
dec
pop
jmp
pusha
or
stos
xchg
outs
lods
js
lods
add
(bad)
loope
and
sbb
adc
fsubr
popa
les
mov
mov
sbb
(bad)
popa
std
and
push
shl
xor
mov
aaa
xor
cli
movs
mov
inc
ret
mov
std
jge
xchg
in
mov
ins
or
ret
xor
cdq
pop
sub
sub
sub
outs
push
(bad)
xor
add
dec
jb
enter
mov
add
jmp
sub
mov
mov
push
dec
stos
pop
mov
mov
retf
or
cmp
ins
cmp
fidivr
mov
and
xor
iret
cdq
rol
mov
mov
dec
mov
adc
lods
loopne
scas
cli
push
push
mov
push
dec
icebp
adc
mov
adc
call
outs
sbb
jns
addr16
jecxz
cmp
cli
adc
jmp
or
dec
imul
loope
test
jge
ror
cmps
cmp
mov
rcl
dec
push
pop
arpl
mov
clc
stos
push
push
or
add
repz
sbb
jne
daa
lods
enter
push
or
call
mov
dec
std
dec
pop
adc
retf
rol
aam
jmp
icebp
add
imul
add
rcr
repnz
cmp
das
shl
dec
stos
and
in
imul
(bad)
push
and
dec
inc
or
push
sti
adc
and
or
mov
mov
fild
pop
les
xor
popa
or
sbb
and
sbb
hlt
sub
ja
push
in
rcr
loopne
ret
or
pusha
icebp
mov
push
out
sbb
or
mov
pop
(bad)
mov
ds
stos
ds
cld
or
addr16
je
mov
jb
jg
and
mov
sub
cmp
mov
fidivr
mov
cmps
pushf
iret
ficomp
xchg
sub
push
cmp
movs
cmp
shr
fwait
sub
sub
in
or
outs
inc
sub
cmp
mov
inc
fld
idiv
xchg
xor
test
imul
out
out
mov
adc
std
in
push
int3
imul
mov
dec
jns
push
fld
cmp
jle
in
and
call
dec
push
sbb
jne
(bad)
mov
pop
and
outs
mov
sub
(bad)
ins
dec
xor
pop
and
cmps
mov
inc
mov
push
cmp
jnp
xor
adc
inc
out
stos
stos
and
mov
in
sti
sub
push
int
adc
popa
outs
out
fistp
lock
out
loopne
adc
xor
scas
mov
punpcklbw
sub
lea
dec
sbb
scas
cdq
aaa
lock
xchg
xchg
adc
mov
in
push
stos
mov
mov
xor
xchg
imul
or
xchg
sub
test
sbb
in
adc
popa
ja
mov
mov
xchg
jns
cmp
cmp
mov
or
xor
mov
shr
or
inc
data16
inc
test
sub
shr
mov
cwde
inc
add
rcl
dec
jge
aas
push
pop
stc
cmp
adc
pop
arpl
pop
addr16
popa
mov
test
aas
mov
sti
inc
sahf
lock
inc
pop
in
fidivr
sbb
iret
jmp
cld
jo
and
es
push
fcomp
sahf
mov
dec
scas
test
push
inc
js
in
inc
add
or
nop
ins
or
repnz
jl
stc
or
gs
add
daa
(bad)
leave
jge
adc
cmc
mov
div
sar
dec
out
jnp
inc
cwde
scas
sbb
fadd
mov
adc
push
pushf
(bad)
popf
fwait
pop
mov
push
shr
out
pushf
push
fstp
adc
push
mov
sub
out
scas
data16
xadd
inc
(bad)
mov
(bad)
retf
jae
and
push
aam
fldcw
xor
(bad)
push
cmc
dec
mov
mov
test
lods
add
adc
jbe
pop
retf
(bad)
jbe
mov
inc
int
xchg
imul
dec
cdq
outs
cli
scas
cmps
lods
jmp
mov
rcl
inc
sub
push
xchg
rcr
cmp
jae
retf
sub
mov
xor
ss
out
push
jmp
sbb
movq
icebp
cmp
inc
push
repnz
pop
rcl
mov
dec
and
arpl
push
iret
out
sbb
jnp
xor
cmp
jp
sti
leave
push
mov
add
ret
adc
rcl
mov
dec
ins
(bad)
pop
ror
stos
enter
cmc
mov
mov
jne
out
add
adc
movs
jbe
or
idiv
fidiv
xor
cmp
retf
and
or
cmc
leave
dec
(bad)
cmp
mov
out
imul
mov
into
xlat
inc
jae
xchg
xchg
add
lahf
int
(bad)
jmp
inc
push
jp
aad
cmp
div
and
inc
pushf
cdq
pop
sub
sbb
daa
iret
cld
rcr
jae
ficom
sahf
js
cld
ficomp
ret
jno
push
inc
adc
jg
add
inc
fidivr
call
push
dec
aam
sub
inc
or
adc
je
jo
fadd
pop
xor
push
xchg
dec
js
adc
aaa
adc
push
loope
mov
inc
xchg
and
cld
or
repz
leave
jno
inc
aaa
gs
call
push
sbb
fbstp
(bad)
shl
call
adc
jne
xchg
out
mov
mul
loopne
mov
out
fld
pop
lds
sub
mov
sub
cmp
adc
fucomi
add
cmp
jp
(bad)
push
xlat
pop
pop
(bad)
syscall
test
mov
sbb
or
push
and
xchg
pop
inc
mov
(bad)
jb
mov
js
sbb
sub
bound
jle
xchg
fistp
aaa
jno
cli
push
jmp
ror
imul
aad
(bad)
(bad)
ja
ss
sbb
lds
and
or
fiadd
inc
dec
repz
dec
add
xchg
inc
test
cld
popf
mov
sub
mov
into
imul
adc
mov
inc
scas
xor
adc
lahf
in
aad
mov
outs
mov
clc
movs
or
jp
test
inc
cli
movs
jb
inc
movs
lods
push
lar
enter
leave
lahf
std
fs
push
dec
jne
pop
or
pop
pop
movs
or
dec
aaa
repz
xor
inc
push
adc
cmp
jnp
jno
hlt
or
daa
cld
dec
ins
push
mov
dec
shl
dec
pop
or
dec
cmp
sbb
inc
cld
out
add
cmp
idiv
jmp
(bad)
imul
out
mov
sbb
cmps
lock
in
cdq
outs
fwait
cmp
dec
stc
(bad)
pop
mov
push
inc
retf
inc
sbb
outs
xor
xchg
sti
movs
das
mov
sbb
cmp
repz
cmp
cld
sbb
dec
xchg
out
gs
outs
jmp
jno
cmove
rol
pop
xchg
loopne
cmps
cmc
shl
mov
pop
sub
xchg
arpl
mov
dec
imul
dec
add
mov
push
adc
ja
rcr
daa
or
loope
mov
int
mov
add
mov
sub
loop
push
cmp
retf
xor
jmp
fcmovu
push
das
dec
push
fsub
loope
mov
shr
jle
xchg
pop
fistp
aas
cld
ins
pop
dec
repz
push
pushf
(bad)
push
adc
push
cmp
mov
inc
dec
xchg
retf
inc
aas
dec
cmp
loope
mov
pop
push
cld
xor
xor
dec
int
jne
out
xor
cmp
push
inc
inc
repnz
mov
jo
xor
leave
cwde
ret
add
pusha
pop
sub
movs
movs
mov
mov
mov
cmp
mov
iret
ss
push
or
bound
push
jmp
push
xlat
clc
les
sub
loop
rol
ds
xchg
cmp
rcr
test
push
loope
xor
popf
(bad)
pushf
das
mov
inc
pop
mov
je
sbb
clc
fld
aas
pop
jnp
test
or
(bad)
jmp
stos
cmc
ja
lock
ficomp
in
pop
cmp
mov
lock
dec
dec
das
inc
ret
stos
outs
repnz
push
daa
jns
je
fistp
mov
test
inc
add
outs
add
dec
iret
lods
xchg
ja
into
cmps
rcl
pusha
xor
(bad)
stos
and
popa
cwde
dec
aaa
jmp
(bad)
or
test
mov
jb
fld
loop
fs
nop
sub
xor
gs
movs
and
mov
xor
scas
xchg
adc
and
in
mov
add
and
retf
lods
mov
add
add
int
mov
lea
xor
pop
xchg
aam
shl
shr
(bad)
dec
jae
cmp
leave
cmp
and
jp
inc
cmp
mov
sbb
imul
scas
push
inc
jns
xor
inc
inc
and
pushf
and
pop
(bad)
dec
imul
lds
mov
call
imul
pop
fdivr
mov
inc
add
jmp
add
fstp
mov
fdivr
mov
inc
or
xor
test
cs
or
xchg
mov
adc
xchg
pushf
or
test
stc
fimul
imul
dec
push
xor
imul
jmp
add
dec
cmp
mov
and
cmp
sub
js
cld
call
movs
sub
pushw
out
call
out
xor
xor
mov
test
pop
pop
pop
in
xor
fisubr
adc
jbe
jns
loope
bound
adc
arpl
inc
or
inc
sub
std
inc
cmp
in
adc
scas
mov
xchg
mov
(bad)
and
ds
outs
popf
inc
repnz
push
nop
sar
addr16
enter
add
inc
sbb
lods
mov
(bad)
add
or
adc
(bad)
sahf
je
ror
(bad)
mov
aas
push
jo
adc
adc
push
iret
sbb
adc
pop
ror
push
or
out
push
cmps
mov
adc
mov
add
push
out
dec
shl
push
adc
(bad)
paddusb
movs
fstp
xchg
frstor
and
outs
ins
ins
pop
xor
cmp
cs
loope
(bad)
mov
aas
or
sub
pop
sub
sti
xchg
clc
inc
jmp
push
xchg
sub
pusha
and
add
add
aam
jo
sbb
mov
(bad)
leave
dec
dec
in
sub
xlat
(bad)
fdiv
test
jmp
sbb
cli
mov
hlt
js
add
xchg
aam
(bad)
inc
and
pop
xchg
push
test
mov
push
mov
pop
int3
pop
push
xchg
xor
add
movs
(bad)
or
push
xchg
push
jae
xchg
adc
cmp
call
lahf
xor
add
jp
and
fadd
mov
retf
inc
es
lods
jno
loopne
hlt
out
ret
xchg
ja
test
sbb
lds
add
repnz
mov
jno
cmc
lea
out
gs
rol
cmp
mov
sbb
sbb
sub
(bad)
mov
mov
mov
scas
outs
push
add
cmp
mov
push
pop
rol
out
and
inc
cmp
jo
repz
(bad)
or
mov
jmp
inc
push
push
push
leave
push
mov
(bad)
mov
or
xor
das
push
outs
mov
dec
lahf
ja
cmp
mov
pop
or
mov
int3
es
inc
ds
lods
mov
push
std
das
add
pop
cmps
ds
sub
and
sahf
aam
call
pinsrw
xor
retf
out
loop
or
jo
mov
sbb
ins
ror
push
sti
outs
push
leave
int3
xor
add
pop
popf
pop
cli
mul
in
mov
inc
rol
xlat
push
xchg
enter
mov
adc
cmp
rcl
pop
(bad)
aaa
imul
cmps
in
mov
and
dec
xchg
xlat
sub
out
mov
into
fcmovnbe
pop
adc
xchg
add
sub
test
cmp
inc
dec
or
in
push
cld
jbe
daa
mov
mov
sahf
dec
ret
push
lds
adc
cmc
loope
movs
push
mov
pop
enter
mov
push
jmp
or
push
cmp
pop
into
jl
jno
mov
push
outs
test
ror
lods
adc
jbe
pop
add
idiv
enter
sub
cmp
jae
mov
mov
mov
xor
or
imul
ror
loop
ss
push
mov
mov
stos
ror
fisubr
lahf
fcmovu
(bad)
and
push
into
hlt
cdq
stos
cmp
into
push
jp
jbe
and
adc
das
pop
sub
popa
jae
sub
data16
(bad)
dec
scas
and
cli
out
and
ins
and
mov
and
movs
ret
outs
lds
rcr
lea
xor
ret
push
retf
pop
loop
in
xchg
test
mov
and
(bad)
sub
lods
jg
push
pop
mov
mov
xor
lea
jno
ret
out
mov
(bad)
retf
mov
(bad)
data16
pop
stc
sbb
pop
cli
hlt
mov
fild
fs
fdiv
adc
and
mov
sbb
jnp
scas
cwde
aam
stos
test
icebp
inc
lock
sbb
jle
xchg
jp
mov
inc
adc
mov
cdq
sub
adc
mov
pop
inc
cmp
lds
pushf
jle
push
jecxz
scas
cmp
test
out
enter
add
cdq
stc
in
lds
add
cmps
loop
adc
ja
das
cmps
xor
jmp
mov
std
jnp
jge
adc
xchg
mov
cmp
lds
rcr
into
or
mov
les
pop
outs
data16
sbb
pop
dec
pop
add
cmps
pop
aaa
mov
mov
cmp
popf
mov
sti
xchg
sub
lds
dec
sub
(bad)
int
sahf
repnz
stc
or
(bad)
lahf
mov
add
mov
shrd
mov
(bad)
sub
sti
fwait
sub
ret
(bad)
push
push
out
add
pop
mov
test
mov
mov
cmp
scas
scas
popa
ja
ins
mov
adc
or
mov
or
arpl
cmps
or
je
sahf
xchg
mov
ret
scas
inc
push
and
seta
pop
add
imul
sbb
jmp
push
mov
push
pop
aam
jae
(bad)
sbb
mov
int
out
inc
nop
add
jp
add
stc
sbb
or
cmp
push
push
cmp
adc
cld
pusha
neg
popa
xchg
sar
adc
movs
ins
shl
or
daa
pop
fs
sbb
call
movs
ins
push
jno
lea
fwait
mov
and
mov
and
push
fs
push
push
call
pop
sbb
or
jmp
ins
or
xor
inc
mov
add
into
(bad)
cmp
push
jo
retf
das
mov
pop
sbb
lods
out
cld
inc
(bad)
daa
adc
jg
stos
cld
je
mov
sar
sbb
add
in
adc
xor
movs
rol
push
pop
jle
sub
leave
cmps
sub
adc
mov
inc
inc
pop
mov
daa
outs
cmps
inc
(bad)
mov
pop
fmul
push
fsub
pop
in
into
mov
out
test
dec
xor
pop
xor
cld
adc
push
push
xchg
push
dec
es
repz
(bad)
pusha
cmp
scas
mov
jle
dec
jmp
cld
push
scas
push
adc
or
cmc
ret
shl
inc
add
fs
push
pop
cmp
stos
ds
dec
mov
ror
mov
lods
and
and
ret
pop
out
push
ins
push
stos
push
lock
not
and
ficomp
sub
fcos
dec
ds
and
mov
(bad)
ss
mov
pop
outs
jecxz
adc
push
repz
sbb
inc
pop
pop
out
sbb
xchg
xor
pop
inc
mov
dec
mov
push
lods
cmp
fwait
test
(bad)
jl
push
add
lods
or
push
dec
or
ins
fisttp
in
fidivr
mov
adc
std
push
out
push
mov
call
push
mov
js
cdq
inc
sar
in
mov
(bad)
pop
pop
jp
or
jns
push
fsubr
pusha
fs
not
ins
pop
sbb
push
sub
jo
sbb
sbb
repnz
and
push
lods
and
call
fist
xlat
aam
dec
out
mov
mov
push
push
dec
mov
sti
dec
rol
dec
stos
push
ins
sub
sub
rcl
fmul
pop
(bad)
lea
mov
cmp
not
jae
loopne
sub
pop
push
ins
fidivr
stc
adc
mov
sub
mov
lods
dec
into
movs
out
psllw
pop
sbb
das
sub
not
fs
shl
xchg
int3
or
dec
dec
fs
jae
mov
add
or
fild
aaa
(bad)
fld
xchg
pushf
or
or
ret
test
pushf
mov
push
adc
add
mov
cmp
cmp
imul
push
dec
repz
inc
lds
xor
xor
inc
lahf
mov
cmp
push
mov
sbb
test
mov
cwde
jmp
push
ins
lds
add
jmp
retf
shr
xchg
loope
lds
xchg
addr16
(bad)
mov
jle
fwait
mov
jmp
pop
dec
clc
call
and
push
mov
xchg
les
and
lea
repz
pop
jl
and
cmp
popa
inc
push
cmp
add
nop
ss
mov
inc
push
xchg
sub
mov
xchg
mov
jnp
xchg
mov
or
in
es
push
mov
fidiv
push
(bad)
push
fld
xlat
arpl
data16
push
jecxz
rcl
fwait
stc
loopne
cmp
mov
pop
(bad)
dec
(bad)
std
jae
in
js
jae
sub
xchg
pop
inc
inc
push
pop
cmp
mov
xlat
add
mov
and
and
xchg
retf
movs
mov
les
aam
jno
pop
add
lock
retf
jb
nop
loop
fistp
push
sbb
and
ficomp
xor
iret
push
add
int
fdivr
mov
dec
test
mov
cmp
mov
fadd
and
popa
mov
dec
jg
sar
out
sbb
add
fwait
mov
(bad)
stos
out
jae
jnp
ja
shr
mov
enter
iret
leave
enter
add
xchg
sub
jb
mov
jo
inc
sub
fs
aas
or
jmp
idiv
sub
xor
ins
mov
push
jg
add
cmp
in
data16
adc
lds
mov
lods
ins
mov
sub
cmc
je
dec
ds
imul
add
js
outs
dec
std
adc
imul
pop
neg
cmp
sbb
inc
out
ins
das
pop
jb
data16
xchg
loopne
mov
sub
mov
mov
je
mov
loop
ret
scas
std
jmp
adc
xor
jp
jmp
sbb
les
xchg
sub
mov
push
fdiv
ror
pop
add
sbb
rol
ret
inc
ja
cwde
ins
xchg
add
pushf
push
movq
in
xchg
pop
jmp
ror
retf
mov
add
test
adc
loopne
stos
cmp
repnz
nop
repz
stc
jmp
mov
xchg
std
fbstp
fisub
(bad)
and
test
nop
dec
inc
mov
rcl
and
stc
pop
adc
inc
stc
dec
xor
mov
push
in
out
jns
mov
in
pop
or
sbb
pop
jno
xchg
call
jge
shr
lds
pop
clc
enter
gs
inc
lods
nop
adc
int3
test
popa
mov
int3
sahf
sub
cld
imul
mov
jge
dec
dec
test
jb
enter
mov
jbe
popf
cmc
popa
xchg
mov
fcom
inc
mov
aaa
or
jne
mov
pop
mov
pop
jnp
inc
mov
ss
fwait
out
movs
repz
push
repz
jge
not
hlt
shl
mov
xor
adc
add
(bad)
(bad)
stc
pop
ret
mov
jmp
retf
aaa
pop
leave
inc
mov
(bad)
mov
daa
(bad)
movs
cmp
pop
in
mov
icebp
inc
push
sbb
arpl
pushf
in
repnz
hlt
xchg
sbb
and
push
push
outs
cld
and
cmp
mov
gs
test
xor
cld
daa
jnp
(bad)
xchg
pushf
scas
xchg
scas
jmp
cdq
ins
cdq
les
into
or
loope
add
jmp
pop
adc
aas
loopne
ficomp
aam
cmp
mov
repz
out
out
rcr
mov
jmp
xor
dec
hlt
push
retf
mov
adc
lock
push
and
into
stc
ffree
adc
inc
mov
stos
dec
sahf
outs
ins
sub
jg
addr16
cmc
sbb
cmp
sbb
aam
iret
shr
pop
pop
into
push
jle
(bad)
dec
popf
cmp
sub
ja
js
push
fld
rcr
push
mov
fimul
adc
hlt
sar
push
inc
pop
inc
mov
es
xchg
(bad)
fcomp
sub
popf
dec
cmps
cmp
iret
and
(bad)
test
sbb
(bad)
popf
addr16
and
ins
xlat
into
mov
and
xor
clc
rol
jno
add
pusha
cli
xchg
dec
mov
sbb
imul
mov
cmps
cmc
xor
je
mov
dec
jbe
loopne
jecxz
shl
ja
mov
leave
popf
jne
jge
jno
mov
(bad)
sbb
inc
push
xor
xchg
retf
pop
mov
(bad)
retf
(bad)
lahf
inc
fild
fisubr
jmp
sub
xor
lods
xchg
xchg
pop
sub
jno
fs
movd
aaa
mov
or
shr
push
jle
xor
sahf
dec
jns
enter
int3
mov
cmps
cmp
dec
jg
cli
jmp
fist
sub
dec
mov
in
mov
out
fcomp
out
xchg
mov
or
fcmovu
xor
test
aad
mov
xor
ret
repz
mov
test
inc
xchg
jmp
out
mov
push
and
leave
xor
push
arpl
lds
add
js
cmp
xchg
xor
pop
fist
stos
mov
add
(bad)
xor
ja
mov
push
enter
pop
cli
cmp
sub
(bad)
cmp
and
imul
push
add
pop
shl
jo
imul
mov
mov
pusha
cmc
call
fcomip
xchg
call
adc
lods
pop
jne
loopne
adc
pop
or
xlat
jae
mov
mov
mov
jnp
ss
fwait
cwde
adc
loope
nop
adc
add
pop
and
neg
sahf
ss
and
(bad)
push
outs
lahf
daa
stos
popf
mov
sub
stos
(bad)
push
xor
ss
repz
add
pop
scas
and
mov
out
mov
pop
jmp
pop
pushf
out
fs
(bad)
cmps
xchg
test
ins
int
daa
mov
pusha
inc
hlt
mov
in
inc
mov
jg
xor
pushf
int3
or
sub
adc
sub
in
xor
daa
or
(bad)
xor
enter
fisub
pop
xor
sub
pushf
mov
xor
(bad)
adc
sub
jl
sub
pop
add
or
lea
stc
pop
push
pop
or
and
fcmovb
cmps
add
dec
mov
iret
sub
das
add
cli
vpxor
push
cdq
xor
sbb
pop
xor
fnstsw
xchg
rcr
xchg
scas
inc
push
iret
out
inc
ja
call
cmp
inc
adc
adc
sub
call
xchg
and
ins
sub
jo
lea
sub
jb
lods
iret
xor
out
call
inc
jb
sti
das
test
xchg
inc
push
and
jo
add
es
nop
xchg
sub
(bad)
and
inc
test
retf
push
sub
sbb
fisttp
lea
xchg
add
or
jp
cmc
xlat
cmps
loope
arpl
mov
xchg
test
adc
loope
sbb
ins
xor
add
mov
adc
jns
dec
sub
lods
adc
sub
xor
push
rol
repnz
push
stc
daa
bound
loop
cmp
bound
push
dec
pop
ret
inc
call
xor
ins
mov
fs
cmp
das
ret
sub
xchg
jne
adc
inc
add
inc
ins
out
outs
stos
neg
xchg
inc
dec
(bad)
mov
scas
sub
inc
mov
aam
pusha
sbb
sti
jle
dec
pop
loop
popa
mov
sub
cmp
mov
xor
retf
adc
dec
adc
or
sahf
pop
xchg
addr16
psllw
je
jecxz
sub
inc
sahf
out
hlt
pop
pop
dec
into
jp
test
mov
pop
or
scas
mov
jg
mov
in
fsubr
lds
cli
daa
aaa
fisttp
jecxz
push
popa
imul
adc
fcomp
sub
ret
jmp
movs
mov
sub
push
mov
inc
aad
mov
xchg
mov
add
mov
dec
and
call
or
das
test
or
jns
out
in
lock
cmps
or
dec
(bad)
movs
rcr
shl
outs
(bad)
lods
shr
dec
fs
fwait
jae
pop
pop
in
xchg
xchg
mov
sub
mov
fistp
call
out
add
xor
jmp
fwait
cld
ins
add
int
out
mov
call
mov
dec
test
inc
mov
or
test
add
in
sbb
push
pop
ins
add
mov
sub
mov
xor
mov
fstp
push
pop
mov
jb
lods
mov
out
or
lock
pop
bound
sub
jae
lods
out
data16
in
adc
push
arpl
mov
xor
jge
(bad)
mov
dec
(bad)
push
mov
sbb
rol
fisubr
retf
mov
push
push
adc
stos
retf
retf
mov
call
pop
cmp
xor
pop
inc
ja
je
das
cmp
xchg
and
fs
dec
cmp
pop
repnz
mov
hlt
rcl
mov
(bad)
adc
out
out
mov
jmp
arpl
pushf
idiv
int
cs
lock
add
ret
aaa
pop
dec
xor
and
jae
call
dec
addr16
adc
pop
bound
repz
fidivr
cmp
cmp
mov
push
rol
sub
push
jb
add
sub
mov
sbb
cmp
cmp
aam
jo
inc
mov
dec
popf
test
movs
jmp
out
adc
jne
int
pop
ss
xchg
jnp
scas
cmp
push
mov
cli
fbld
movs
icebp
neg
pop
scas
cmp
sbb
es
jecxz
js
sti
sahf
pop
xchg
mov
adc
push
scas
fsub
out
(bad)
cmp
scas
cmp
push
enter
mov
sub
iret
outs
pusha
jecxz
xor
movs
movntps
adc
lea
or
cli
jno
pop
inc
leave
mov
xor
fadd
jl
xchg
outs
mov
push
popa
rcr
mov
fmul
mov
add
cli
mov
ja
sub
dec
jge
jns
scas
inc
pushf
ror
jb
mov
dec
int3
es
push
sub
push
dec
mov
push
pop
sbb
popf
xor
and
bound
loope
pop
mov
mov
pushf
arpl
add
ds
retf
arpl
nop
sar
mov
shl
xchg
xor
(bad)
sbb
into
inc
neg
push
xchg
or
mov
loopne
stc
stos
scas
test
in
sub
sbb
cmp
aaa
rcl
(bad)
mov
xchg
dec
ins
test
jle
retf
add
sahf
fistp
mov
mov
dec
gs
js
push
jo
pop
cmps
sar
lds
int
lock
fld
pop
ins
and
dec
popa
enter
stos
or
sbb
inc
mov
cmp
mov
popa
inc
or
lods
shl
xchg
fucomip
pop
enter
sub
popf
(bad)
(bad)
jmp
push
cwde
push
(bad)
or
rol
clc
lahf
sub
fld
cmp
dec
stos
mov
xor
mov
rol
pop
ins
retf
lock
pop
adc
int3
adc
stc
ret
retf
adc
cmp
lahf
mov
dec
lea
dec
jae
adc
inc
cmps
(bad)
jmp
test
retf
dec
xchg
push
jne
add
popf
fsubr
lahf
cs
inc
mov
sbb
xor
ins
neg
inc
mov
push
lods
xchg
or
and
xchg
bound
adc
stos
ss
lea
outs
lock
bound
ds
adc
xor
dec
scas
out
fwait
out
aam
sbb
sub
ja
lods
xchg
inc
cmp
cmps
push
mov
ss
push
int3
shr
add
add
retf
rol
mov
adc
(bad)
fcom
fstp
adc
mov
fstp
adc
jge
xor
(bad)
mov
rcl
cmp
jbe
mov
pop
add
sub
cld
sbb
call
jnp
pushf
int3
mov
ret
xor
(bad)
mov
shl
in
in
jne
xchg
shl
hlt
xchg
or
and
test
add
adc
shr
and
(bad)
adc
sbb
les
ds
ficom
inc
fcomip
jecxz
and
icebp
mov
cdq
adc
repz
int3
std
xchg
ret
fbstp
pop
mov
push
mov
cmp
dec
jecxz
inc
mov
pop
out
(bad)
leave
add
mov
mov
mul
outs
int
shl
xlat
or
fwait
imul
loop
add
add
and
pop
call
cmovle
and
outs
jmp
adc
adc
mov
sbb
outs
mov
xchg
lahf
sahf
xchg
je
adc
mov
imul
jo
sbb
and
sbb
inc
mov
mov
sbb
pop
xchg
pop
add
dec
fmul
adc
add
push
test
fld
jp
mov
xor
(bad)
sub
(bad)
cwde
cmp
sbb
jmp
pop
push
adc
(bad)
add
scas
xor
lock
out
repnz
cmp
aam
enter
arpl
sahf
jb
popf
outs
xor
out
(bad)
or
cmps
ja
pop
lea
rol
mov
xchg
scas
cmc
imul
mov
cmp
out
ds
ds
adc
mov
cmp
(bad)
popa
imul
add
(bad)
in
sar
dec
pop
pop
sub
test
and
mov
xchg
movs
inc
push
push
or
and
pop
pushf
aam
test
das
xor
je
lea
sbb
lahf
(bad)
aas
add
fadd
sub
js
int3
mov
popa
out
scas
sub
lock
mov
cmp
adc
fld
pop
sbb
lea
in
mov
inc
jmp
or
push
in
xchg
popf
jns
fs
inc
retf
lock
aaa
mov
cld
add
(bad)
rol
out
loop
test
scas
sahf
inc
rol
fdiv
mov
xchg
mov
outs
jne
adc
daa
or
inc
jo
adc
pop
xor
jge
dec
cmp
jle
pop
fcomp
enter
xor
xchg
xchg
stos
mov
daa
push
pop
sbb
xlat
lods
retf
dec
dec
push
mov
mov
pop
mov
bswap
dec
add
xor
shr
enter
sbb
xchg
inc
sbb
shl
or
push
loop
mov
jecxz
rol
gs
adc
jb
push
jns
ja
xchg
push
push
je
mov
inc
sbb
jno
sahf
jns
cmp
sahf
inc
inc
adc
add
(bad)
inc
ds
sub
leave
repz
fst
lock
inc
or
outs
pop
ret
mov
enter
mov
xor
fimul
jns
scas
and
rcr
mov
sbb
ror
aaa
imul
adc
inc
cmps
or
push
and
(bad)
pop
mov
cmp
cmp
add
jl
cmc
adc
sar
bound
rol
or
les
xchg
jmp
inc
mov
push
inc
test
xor
pmullw
stc
fs
dec
sbb
pop
mov
inc
stos
mov
xchg
lds
jmp
aas
gs
push
adc
inc
push
push
rcr
lds
push
adc
into
bnd
outs
push
add
push
pop
mov
call
adc
or
mov
test
xchg
in
jne
ret
or
pop
mov
mov
inc
stos
xchg
enter
sub
mov
push
push
xor
mov
jns
jg
out
adc
addr16
inc
adc
ret
std
jl
ins
mov
and
fld
addr16
(bad)
mov
xchg
icebp
int
push
mov
xor
or
add
mov
stos
in
in
ror
fwait
cmp
xchg
mov
xor
inc
aam
imul
pop
fwait
mov
cmc
sub
mov
js
out
mov
retf
daa
cdq
addr16
jle
pop
xchg
test
mov
jmp
mov
es
dec
sub
jne
push
push
cmps
imul
daa
sbb
xchg
mov
nop
fmul
dec
call
pop
and
icebp
movs
rcr
and
in
shl
std
push
mov
pop
xor
icebp
mov
ror
pop
dec
ins
repnz
ds
mov
std
adc
sub
retf
cmp
adc
das
mov
push
cmc
ret
fisubr
ret
adc
push
sahf
outs
mov
fsub
adc
xor
in
push
push
cmps
wbinvd
retf
lods
or
jg
jg
sbb
pop
jg
or
push
stc
inc
(bad)
pop
fmul
sub
loope
shl
pop
mov
(bad)
push
test
(bad)
jbe
rcl
inc
repz
test
cmp
mov
sub
and
ret
loope
mov
and
mov
xchg
cmp
or
rcl
in
in
cmp
test
pop
dec
pop
pop
sti
dec
or
repnz
push
mov
ins
inc
sub
scas
stc
int
(bad)
push
add
push
(bad)
es
pop
pop
sbb
push
jbe
scas
div
mov
inc
imul
(bad)
dec
clc
inc
mov
pop
cmp
push
jb
pop
dec
or
mov
aam
xchg
push
repnz
cmc
ret
sbb
mov
mov
mov
std
imul
into
pusha
cmp
lahf
push
push
jno
popf
aad
fwait
cmp
xchg
xchg
push
mov
mov
imul
xor
clc
dec
push
es
add
and
jmp
std
clc
push
pop
sbb
inc
adc
xor
pop
xchg
(bad)
push
pop
(bad)
retf
loopne
dec
xchg
jo
repnz
into
shl
ret
gs
hlt
jnp
in
lock
inc
xor
jns
xor
std
dec
inc
pop
sbb
sub
cli
test
inc
pop
popf
sahf
jg
hlt
xchg
test
jno
and
iret
sbb
xchg
jo
and
mov
pop
sbb
push
jl
(bad)
nop
push
cld
fwait
xchg
jl
mov
sub
cmp
scas
dec
jg
sbb
shr
jbe
cmp
call
lods
push
repz
dec
push
and
mov
cmp
nop
sar
mov
imul
data16
scas
in
out
cs
lea
stos
dec
scas
inc
xor
inc
adc
sbb
push
cmp
sub
or
vmovdqu
stos
jmp
test
je
add
jb
int3
(bad)
in
out
retf
lahf
mov
xchg
and
imul
hlt
pop
cmp
pusha
pop
das
jge
dec
int
cmps
jmp
sub
sar
into
adc
dec
xchg
sub
test
mov
in
outs
out
xor
sub
xchg
popa
or
push
inc
inc
loope
mov
aaa
scas
data16
and
bound
imul
mov
mov
imul
jbe
or
sbb
ror
cmp
adc
fs
stc
inc
xchg
test
sub
pop
inc
fist
in
sti
popf
jg
dec
test
aaa
and
xlat
leave
ins
add
mov
add
(bad)
push
push
sub
sbb
mov
mov
mov
jmp
lock
std
xor
inc
sahf
add
xor
and
fwait
push
xchg
es
lock
sbb
dec
xchg
jae
xor
and
jb
add
addr16
fidiv
ret
call
pop
add
sbb
jl
xlat
icebp
shr
inc
rcr
fwait
cwde
jo
sub
call
push
sbb
lea
xor
adc
push
add
mov
push
(bad)
cmp
aam
hlt
shr
cld
lds
fxch
pop
cmp
ins
sbb
pop
inc
push
sub
ss
jle
cmps
xor
(bad)
rcl
sub
retf
add
cmc
pop
stos
mov
les
fstp
imul
addr16
inc
data16
adc
sbb
imul
add
ja
xor
adc
cdq
xor
cli
and
ins
sbb
lods
std
(bad)
fld
pushf
fnstsw
xor
or
aam
push
add
retf
sub
ins
push
test
stos
aaa
scas
xchg
rep
xchg
lods
mov
pop
fidivr
add
out
xor
pop
in
pop
es
mov
jge
mov
cmc
sbb
and
pop
sub
mul
add
adc
push
jb
out
push
push
fcomp
out
and
jb
fiadd
push
fdivr
sbb
add
jae
xchg
push
popa
arpl
out
xchg
xchg
inc
stos
cli
ins
cbw
jg
pop
push
xor
rcl
inc
xlat
cmc
cdq
call
lea
call
(bad)
jp
add
xor
fs
push
and
jne
jns
jnp
sbb
pop
inc
leave
out
out
rcr
shr
cmp
jge
leave
mov
sbb
sub
rcl
adc
leave
imul
int
xor
cmp
inc
sbb
aad
cmp
retf
cs
int
aam
xchg
lods
sub
pop
ss
dec
mov
loopne
dec
push
les
push
cmp
pushf
jb
jle
cli
inc
fsubr
fchs
call
fs
pop
xchg
push
sahf
shl
mov
mov
shl
fdivr
ficomp
pop
in
jecxz
push
push
push
cmp
jno
outs
icebp
xor
inc
mov
(bad)
push
fcmovb
pusha
test
(bad)
std
pop
fldenv
cld
mov
xchg
adc
add
(bad)
fwait
jo
pop
mov
xor
outs
fwait
adc
xchg
inc
mov
jg
jmp
cld
add
das
loop
fidiv
push
xor
push
inc
xchg
stos
sbb
dec
mov
mov
add
add
(bad)
fist
or
cmp
test
bnd
leave
pop
(bad)
cld
into
icebp
add
xchg
mov
fcomip
jmp
or
sbb
sub
cmp
clc
fcomp
xchg
div
inc
or
jnp
cmc
rcr
mov
sub
test
dec
in
out
add
xor
sahf
jl
int3
pushf
and
dec
int3
inc
push
std
add
iret
mov
mov
adc
push
hlt
sbb
popf
ins
mov
mov
rol
lock
loop
retf
inc
out
push
lds
in
mov
inc
or
shl
mov
adc
jno
cs
loopne
(bad)
aaa
xor
or
test
inc
enter
push
inc
xchg
in
rep
int3
not
jmp
arpl
jae
retf
mov
dec
pop
mov
hlt
push
push
test
or
push
add
les
push
sbb
aam
call
add
push
scas
add
ffree
cmp
sub
push
movs
loopne
fwait
xor
ins
cmc
repnz
dec
adc
cs
mov
mov
bound
pop
mov
sar
fisub
loop
or
fsub
cmp
ds
sub
hlt
mov
loope
out
fcom
and
xchg
mov
cwde
jl
sbb
add
test
cmps
mov
loop
sub
adc
push
iret
mov
jns
adc
sar
mov
xchg
or
dec
retf
push
pop
js
push
(bad)
mov
in
movs
sub
fidivr
xchg
lock
cmps
jp
lods
pop
pop
xor
(bad)
jo
cld
sbb
lahf
sub
bound
cmp
retf
push
mov
mov
dec
gs
sub
sar
lods
ja
nop
(bad)
pop
in
mov
dec
(bad)
call
mov
scas
sub
dec
xlat
jmp
sub
in
pop
xor
sbb
xor
stc
inc
xor
xchg
in
xchg
mov
mov
inc
push
or
rcl
shr
in
es
add
cmp
adc
sti
and
dec
and
out
and
ds
inc
cmp
psubsb
xchg
addr16
push
out
push
add
aas
pop
jl
shl
pop
cmp
pandn
mov
or
pop
call
outs
pop
push
fsubr
aam
mov
sub
aad
mov
fild
pusha
mov
mov
jb
repz
(bad)
or
xor
hlt
icebp
cmp
int
pop
ins
cmp
das
(bad)
enter
jg
leave
cmp
lea
or
fst
push
mov
shl
and
iret
cmp
cld
addr16
sti
xor
ins
mov
mov
pop
fucomi
hlt
push
fsubr
dec
add
sub
fucom
jno
push
stos
adc
fisttp
(bad)
push
test
adc
and
test
push
out
mov
aas
imul
xchg
sbb
scas
mov
pushf
push
ret
mov
fldcw
inc
xor
xchg
shl
xchg
repnz
ror
inc
movs
cmc
mov
adc
push
fcom
xlat
sub
mov
xchg
and
fnstsw
cmp
fidivr
pop
inc
imul
test
mov
xchg
xchg
retf
cmps
and
mov
jmp
fsub
daa
scas
jg
xchg
cmps
and
(bad)
sbb
(bad)
pop
xchg
cmps
dec
pop
iret
mov
inc
lods
cmp
retf
and
jle
mov
in
sbb
jecxz
jmp
mov
(bad)
lods
add
sub
jo
loop
fistp
and
adc
bound
inc
jns
gs
sub
ret
adc
movs
push
mov
push
cmp
outs
push
ins
sahf
push
or
dec
js
cmps
outs
cmps
stos
ret
sbb
in
mov
inc
adc
ja
adc
xor
xchg
sbb
push
push
jmp
lods
test
or
xchg
and
or
das
sub
xor
aaa
lds
repz
scas
cmp
pop
aad
scas
inc
out
jmp
loope
cmp
sti
imul
push
test
fistp
scas
cmp
push
inc
sub
inc
(bad)
mov
xlat
dec
fadd
pop
data16
or
aam
mov
movs
popf
pop
push
and
ins
stos
std
mov
je
sbb
or
mov
pop
lods
xor
and
inc
sub
jmp
mov
cmps
push
(bad)
mov
fcom
adc
lock
push
mov
sbb
ret
sub
ret
in
sub
cmp
and
(bad)
ins
cs
cmp
mov
lock
sub
imul
xor
jne
dec
cdq
xor
jnp
cmp
sahf
cmp
sub
adc
jp
inc
repz
push
cdq
push
push
movs
xchg
xchg
mov
jg
test
je
or
push
cmp
mov
ins
dec
push
cmc
or
in
psubw
inc
iret
xor
add
sbb
or
call
aad
retf
sub
pop
push
inc
clc
inc
pop
movs
lods
cmp
inc
mov
sbb
loop
mov
int3
js
scas
ds
push
add
movs
xchg
jae
in
inc
popa
jnp
cmp
fiadd
js
dec
or
movs
addr16
punpckhbw
(bad)
xor
shl
xor
adc
cmp
rcl
fs
cmp
jmp
aaa
jne
imul
jae
hlt
mov
mov
fsubr
adc
mov
test
pusha
add
cmps
xchg
rcr
cmp
adc
mov
xchg
rcl
mov
pop
dec
lds
adc
jno
mov
das
in
ins
jb
sbb
outs
cwde
mov
rcl
out
sti
aaa
dec
loopne
push
repz
lods
mov
jmp
cs
push
push
into
(bad)
cmp
adc
shl
ret
cmp
push
mov
icebp
clc
xor
mov
fisttp
and
mov
cmp
je
hlt
scas
xchg
mov
js
(bad)
push
jb
loopne
test
lock
adc
push
dec
mov
cmp
cmp
xor
jge
push
dec
outs
cmp
popa
fcomp
shl
neg
popf
fs
stos
dec
imul
fistp
adc
pop
add
xor
mov
fidiv
xchg
(bad)
cmp
fucomi
xor
clc
mov
cmp
mov
fld
sub
shl
(bad)
aas
inc
mov
(bad)
out
xor
sbb
sbb
daa
mov
push
fisttp
mov
dec
xor
scas
stos
ja
sub
cmp
into
cmp
rcr
mov
jge
and
pusha
mov
inc
ret
cwde
push
sub
sub
in
(bad)
clc
sub
mov
pop
out
js
inc
sub
xchg
mov
adc
or
popf
out
jecxz
arpl
loop
sbb
mov
outs
neg
mov
cmp
and
sbb
mov
sbb
aad
aad
mov
and
sub
xor
ds
and
xchg
adc
pop
lds
dec
mov
daa
pop
add
push
inc
push
imul
pop
out
in
jns
mov
out
fnsave
add
movs
dec
loopne
fisub
mov
jne
mov
(bad)
jmp
pushf
add
loope
mov
mov
loopne
pop
call
outs
xchg
shl
ins
add
dec
mov
shr
sub
(bad)
jnp
retf
nop
daa
cmp
sub
lea
les
repnz
lods
sti
or
pop
inc
repnz
mov
pop
push
sbb
adc
mov
ds
iret
xor
mov
or
cmp
fwait
loop
shl
sub
(bad)
(bad)
cli
scas
add
in
(bad)
test
pop
pop
ficom
mov
pop
outs
push
inc
ja
jae
(bad)
cmp
or
leave
test
das
fcmovu
scas
test
xor
add
lds
pop
mov
cli
push
push
and
push
and
popa
adc
or
jg
ds
and
mov
call
sbb
js
cwde
jecxz
retf
fwait
jmp
jo
in
xlat
inc
push
leave
add
mov
(bad)
cmp
inc
inc
call
leave
clc
sbb
in
aam
sub
mov
xor
fwait
sbb
cli
fld
push
mov
aad
or
pusha
pop
jg
or
jnp
nop
(bad)
xchg
fsub
sbb
std
stc
or
mov
js
ret
imul
outs
mov
xchg
or
out
pusha
sub
stos
shl
je
and
push
pop
stc
js
in
ret
ins
popa
mov
in
cli
add
aam
out
lahf
mul
mov
jae
into
adc
jle
outs
pop
dec
pop
popa
test
loop
stc
addr16
pop
sti
leave
xor
adc
pop
mov
jnp
and
sub
sbb
xchg
push
mov
jnp
scas
adc
sar
nop
mov
imul
sbb
mov
lods
std
inc
push
push
lock
mov
push
(bad)
xor
cs
sar
(bad)
out
mov
std
jmp
xchg
push
push
add
jge
xchg
sub
jp
cmp
std
jge
mov
(bad)
(bad)
fld
mov
out
pusha
mov
les
js
(bad)
jmp
pusha
fneni(8087
xchg
dec
pop
xor
repz
and
cld
mov
sbb
mov
ret
mov
cli
adc
lods
add
pop
aam
adc
lods
mov
call
hlt
in
pop
and
imul
xor
xchg
jmp
xchg
cli
jge
fist
pop
xchg
pop
scas
or
sbb
mov
pusha
or
xchg
mov
retf
mov
sub
adc
mov
mov
sbb
bound
dec
into
mov
jmp
cmp
xchg
or
sahf
xchg
xor
movs
and
fld
popa
in
das
and
repnz
stos
and
jle
mov
(bad)
repnz
add
inc
mov
loop
outs
jo
das
imul
stc
test
mov
int3
xchg
out
(bad)
into
fild
sub
mov
retf
(bad)
cld
mov
aaa
into
hlt
push
add
jne
push
mov
movs
inc
(bad)
sub
mov
xor
dec
mov
jnp
stc
sbb
pop
and
pop
jmp
inc
inc
repnz
int
icebp
and
cmp
aas
lock
and
imul
jecxz
adc
mov
iret
jmp
(bad)
jns
lods
arpl
int
xor
movs
stos
dec
iret
cmp
imul
pop
jl
cdq
adc
fisub
jbe
popa
call
xor
cld
(bad)
ss
das
loopne
sti
(bad)
add
jle
mov
sub
div
fstp
out
fist
add
hlt
cli
pop
inc
pop
mov
(bad)
pop
jo
shr
popf
(bad)
sub
add
dec
pop
mov
push
hlt
mov
push
scas
sbb
mov
xchg
cmc
inc
idiv
imul
mov
ret
adc
cmp
jle
out
jge
sbb
outs
stos
stos
pop
mov
mov
ret
pop
sbb
test
cmc
xchg
push
cmps
and
mov
movs
dec
push
adc
push
int3
dec
int3
sbb
fwait
dec
imul
jmp
test
jl
push
adc
jecxz
ss
or
inc
dec
add
xchg
mov
jb
mov
pop
mov
dec
rcr
ret
ret
jbe
push
cmps
sub
inc
push
(bad)
dec
and
pop
xor
push
sti
test
fdivr
outs
mov
sub
and
fldenv
or
cmp
push
sar
sub
pand
add
xor
or
enter
jmp
inc
sti
push
dec
imul
loopne
in
push
sbb
mov
dec
hlt
dec
xor
add
adc
fcomip
mov
mov
ror
std
push
mov
xchg
mov
xor
inc
cmp
dec
pop
push
jl
mov
into
jle
push
inc
xchg
xor
lahf
lahf
or
(bad)
cld
pop
fidivr
retf
xchg
jns
xlat
js
sub
ror
lahf
inc
pop
inc
and
jae
cmps
lods
fsub
jge
adc
xor
adc
sar
xchg
fld
xchg
sub
jg
sbb
pusha
or
xor
push
mov
fldcw
cmp
mov
aas
aam
scas
outs
dec
jns
lea
push
cmp
jp
popf
mov
dec
xchg
mov
xchg
outs
lahf
jbe
adc
inc
cmps
arpl
push
cmp
jmp
add
loop
js
stos
call
jp
xchg
and
jne
pop
stos
mov
jp
arpl
jmp
cwde
jmp
sub
(bad)
ins
push
sbb
das
mov
jg
jge
xor
push
cmps
pop
popf
loope
pushf
xor
pusha
mov
push
dec
push
int3
ins
cs
add
push
xor
lock
pop
xchg
mov
sar
jg
dec
and
xor
repnz
xor
jb
je
fdiv
jo
mov
scas
mov
push
sbb
push
and
mov
mov
lock
or
push
inc
cmp
movs
int3
xlat
jno
dec
xchg
xor
push
(bad)
sbb
arpl
jno
scas
xchg
clc
dec
retf
mov
jmp
mov
sbb
cld
xlat
std
dec
xchg
dec
inc
sbb
xchg
mov
and
adc
fs
push
repz
rcl
push
push
test
mov
jnp
icebp
mov
mov
and
clc
lods
push
cmp
imul
jg
add
mov
mov
mov
fisttp
push
push
fucomip
imul
fimul
int
sub
mov
or
mov
bound
out
and
sar
xor
adc
dec
jge
dec
fsubr
inc
mov
in
xlat
jo
mov
xchg
jge
neg
lea
std
cmp
(bad)
push
ret
inc
ja
mov
mov
loope
mov
out
imul
jecxz
add
imul
bound
jb
out
iret
cld
ror
jo
addr16
lods
mov
inc
push
in
xchg
inc
mov
or
sar
test
adc
arpl
fisttp
hlt
dec
rcl
call
sbb
mov
cmps
sti
or
dec
imul
mov
hlt
pop
in
iret
add
jecxz
scas
dec
inc
inc
imul
pusha
cmp
repnz
and
inc
stc
pop
or
mov
xchg
add
jo
mov
mov
jg
scas
jl
imul
aam
xchg
stc
mov
aad
cdq
xor
in
jb
adc
leave
push
add
scas
mov
pusha
sub
jbe
jbe
sbb
add
or
push
scas
and
ss
pop
in
fistp
mov
mov
cmps
dec
cmp
retf
movs
pop
mov
sbb
push
sbb
sbb
fisttp
int
mov
sub
dec
loop
lds
sub
or
(bad)
and
dec
popf
les
fdivr
movs
arpl
dec
adc
js
mov
jl
test
cld
std
nop
xchg
mov
(bad)
fidivr
push
jp
xchg
scas
fstp
inc
xor
in
cmp
mov
dec
xchg
xchg
dec
mov
retf
test
pop
or
data16
rep
mov
jns
jecxz
and
rcl
out
cmps
adc
push
jg
scas
mov
xchg
jmp
mov
jb
stos
lds
adc
xor
cwde
and
or
lods
ret
push
std
dec
cmc
mov
bound
rcr
out
push
mov
push
jle
(bad)
inc
and
movs
xor
sbb
push
sub
sbb
ds
lock
call
mov
pop
push
mov
(bad)
(bad)
out
jo
std
fst
das
mov
fcom
push
lods
pop
loop
jne
or
jp
mov
push
lds
xchg
mov
xchg
jno
ss
in
(bad)
stos
push
mov
push
pop
jmp
mov
pop
pop
mov
ret
movs
scas
es
mov
dec
pop
je
movs
add
fsubr
add
mov
xchg
repnz
mov
retf
pushf
sbb
pop
imul
outs
fcmovbe
jle
push
inc
jb
lock
mov
dec
push
aas
into
mov
xor
cmp
cmp
and
into
push
dec
jmp
ss
pop
and
or
aam
and
sbb
dec
rcr
loop
scas
or
movs
jns
mov
xor
dec
jb
cdq
pop
cmp
pop
retf
addr16
mov
out
ret
sub
in
cmps
mov
ins
xchg
stos
jns
in
inc
adc
lods
or
les
(bad)
fmul
mov
icebp
sti
mov
popf
test
jle
sub
fnsave
icebp
xchg
cmps
add
in
pop
imul
mov
mov
jmp
add
out
inc
cmp
in
xor
int
add
and
sub
inc
mov
shl
cld
ficom
push
movs
leave
sahf
cs
cmp
pop
mov
push
fwait
pop
in
sbb
pushf
adc
mov
scas
dec
ret
jnp
sub
xchg
add
sub
push
cs
pushf
fsub
pop
sar
in
cmc
fs
sub
clc
arpl
cmp
or
test
dec
pop
into
add
mov
ins
jmp
inc
int3
sahf
out
dec
das
mov
ja
into
fdiv
inc
dec
mov
sub
js
sub
inc
xchg
int3
xchg
xchg
scas
pusha
sbb
popa
inc
out
sub
not
fidivr
call
mov
call
sbb
sbb
test
icebp
div
not
xchg
ret
icebp
jmp
inc
and
movs
rol
fldcw
lea
mov
push
xor
call
jmp
add
cmps
test
mov
sbb
cwde
je
xchg
push
jo
lock
pop
jbe
push
adc
add
lahf
mov
push
sbb
inc
jge
sub
fistp
xor
shl
movs
push
stc
and
(bad)
imul
mov
ins
fwait
outs
out
loopne
ins
push
pop
pushf
push
and
and
in
mov
inc
mov
jge
xchg
and
jmp
mov
mov
or
rol
ror
xor
push
mov
add
call
xchg
or
cmps
popa
out
cmp
dec
js
inc
cmp
pop
mov
in
sar
ret
mov
inc
push
sub
xor
ret
bound
ins
pop
xlat
dec
sbb
fimul
inc
enter
push
fimul
clc
iret
retf
psubd
adc
push
mov
or
fld
dec
or
sub
jmp
push
and
sbb
push
test
lods
out
pop
xor
fld
or
xchg
dec
sub
fwait
pushf
and
clc
adc
lods
add
out
or
inc
add
dec
loope
sahf
sub
or
cwde
outs
mov
pushf
es
xor
nop
or
int3
inc
dec
scas
push
mov
out
add
fisttp
mov
leave
fidivr
test
cmp
adc
mov
mov
cmps
or
in
xchg
cmp
mov
ja
rep
mov
enter
mov
punpckhbw
sub
lods
(bad)
aas
pop
loop
and
add
push
test
movs
sub
jl
dec
jmp
mov
and
jno
and
movs
push
mov
adc
sbb
and
mov
or
mov
xor
add
cmp
fbstp
out
loop
fwait
xor
cmp
pop
mov
push
pop
dec
fs
leave
fcom
dec
dec
aam
dec
cs
int3
sti
shl
mov
enter
in
or
shr
or
int3
and
(bad)
pop
fldenv
mov
sbb
ins
xlat
add
cmp
dec
sahf
loopne
jle
test
cmp
jg
int
push
nop
sub
test
push
pop
dec
lock
stc
aas
mov
call
cs
js
fmul
mov
inc
and
fcomp
stos
fstp
xlat
pushf
lds
icebp
in
jne
xchg
cmp
out
sub
pop
sbb
push
pop
jno
or
les
into
fs
cmps
ret
jg
jmp
test
in
xchg
jmp
mov
xor
mov
repnz
push
push
sub
popa
pop
shl
dec
(bad)
iret
dec
(bad)
adc
mov
sar
jb
clc
in
ret
adc
ins
scas
jnp
jne
out
sbb
pop
jns
sbb
add
loop
repz
pop
pop
loope
or
cmp
aam
aam
sbb
dec
retf
or
aaa
xchg
sub
retf
mov
ins
fidivr
pop
inc
ret
xor
mov
fwait
sbb
inc
push
pop
mov
outs
push
int
popf
(bad)
clc
std
pop
dec
mov
jno
pop
mov
inc
out
xchg
or
adc
or
xor
js
mov
dec
outs
sbb
adc
scas
xchg
inc
lods
mov
sbb
leave
fsub
in
pop
dec
pop
inc
jmp
cli
sub
test
ficom
dec
outs
jo
out
out
jge
jp
loopne
cmp
jl
nop
jp
(bad)
sbb
jp
push
fwait
int3
jecxz
lock
add
sti
movs
jge
std
pop
adc
pusha
(bad)
push
jae
and
sub
pop
cmps
idiv
addr16
xchg
pushf
jnp
push
and
ror
jns
mov
push
jle
pop
sub
mov
adc
dec
cmps
cmp
xor
out
cmc
and
mov
inc
ss
cmp
psrld
scas
dec
xlat
sub
movs
dec
fild
pop
out
in
and
mov
in
fcom
push
les
add
rol
outs
mov
push
fdivr
inc
(bad)
(bad)
mov
and
mov
loope
(bad)
push
sbb
movs
jmp
int
mov
es
(bad)
cli
pop
fisttp
xchg
gs
sbb
jns
dec
xchg
add
pop
xor
xchg
arpl
aas
cmp
mov
fnstsw
mov
mov
retw
stos
push
loopne
neg
cmp
adc
mov
cmps
lods
jle
ins
mov
(bad)
jnp
loopne
add
mov
adc
ja
rcr
test
adc
pop
inc
jg
pop
push
pop
sub
imul
mov
cld
ins
inc
in
or
jmp
sbb
or
mov
mov
(bad)
fiadd
sub
mov
cmp
ss
mov
fimul
and
mov
and
xchg
jb
cmp
and
push
mov
pushf
pop
mov
cwde
pop
test
cwde
mov
call
int3
out
sbb
push
lock
inc
(bad)
icebp
cmp
jnp
xchg
mov
(bad)
mov
movs
mov
scas
jge
imul
sub
jge
sub
push
push
sbb
popf
movs
call
mov
cmp
in
lds
call
into
cmp
mov
and
jne
mov
test
dec
sub
scas
pop
xchg
cmp
cmp
pushf
adc
scas
push
xor
sub
aas
cmp
ds
mov
out
jno
pop
mov
cwde
call
or
jbe
inc
lahf
int3
ss
test
inc
popf
mov
jge
dec
mov
add
mov
addr16
pop
out
xor
jae
test
mov
stc
mov
push
out
repz
fs
movs
push
jge
dec
in
sub
iret
adc
mov
(bad)
js
scas
test
sahf
fsin
pusha
out
mov
jmp
mov
ja
pop
ret
js
mov
pop
add
mov
aaa
repnz
sbb
jmp
cmp
mov
mov
pop
adc
fcmovnu
or
dec
hlt
push
ret
mov
sub
adc
ss
mov
sbb
pop
arpl
mov
aam
(bad)
sti
iret
daa
add
xor
and
mov
pop
sbb
push
fsub
xor
or
xchg
gs
or
test
sbb
and
lock
and
mov
pop
ins
mov
mov
cdq
sbb
hlt
ror
mov
xchg
das
pop
mov
test
mov
push
inc
cmp
pusha
push
inc
fsubr
fs
clc
lds
xlat
out
fcomp
push
inc
jmp
mov
outs
stos
adc
lea
xor
cmp
mov
in
jae
mov
icebp
movs
addr16
sub
mov
mov
and
(bad)
mov
mov
add
jmp
push
rol
adc
mov
pop
xor
fcmovne
ds
cmp
mov
call
xor
out
in
(bad)
int
add
aas
sbb
scas
and
push
xor
add
std
push
jp
jecxz
jmp
jle
in
cli
sub
xor
aaa
shl
fdiv
and
sub
push
aam
cwde
jmp
fwait
stos
call
xchg
js
fwait
rcl
inc
pop
loop
push
push
inc
retf
jge
adc
sahf
push
pop
mov
lahf
std
adc
aam
hlt
out
xor
inc
leave
xor
pop
pop
xor
jge
mov
mov
mov
mov
xlat
pushf
cmp
popf
fld
mov
mov
sbb
jnp
scas
imul
imul
cmp
cmp
cmp
xor
sub
sub
fmul
push
movs
push
inc
pop
int
cmps
add
jbe
jecxz
xchg
xchg
fwait
jmp
jmp
xlat
bound
mov
jmp
shl
iret
movs
push
stc
fwait
xor
std
mov
pop
pop
cdq
jmp
icebp
test
xor
adc
push
xchg
pop
outs
cmp
pusha
jecxz
jb
cmp
retf
(bad)
cmp
out
aas
sti
push
jle
rcr
cli
jg
call
pop
push
lds
mov
in
pop
and
mov
add
jo
in
das
pop
sub
dec
sub
cs
in
jo
adc
repnz
xchg
nop
ss
ds
lahf
jmp
repz
out
xchg
and
pop
retf
cs
mov
daa
les
sbb
test
sbb
jl
cmp
cli
bound
or
pop
loopne
enter
cwde
retf
or
shl
sbb
push
xor
push
fucomip
fistp
ins
or
add
cmps
in
push
dec
mov
mov
sbb
test
(bad)
mov
or
xchg
(bad)
push
or
xchg
nop
mov
xchg
mov
out
nop
push
adc
inc
sub
shl
jnp
ret
pushf
xor
mov
mov
out
les
ror
and
and
dec
ret
inc
arpl
das
adc
ss
mov
mul
sti
mov
out
sub
popa
pop
cmp
cs
jno
and
out
lea
cmp
nop
out
(bad)
sub
xchg
add
cld
jae
cwde
pop
cs
imul
js
repz
sbb
cmps
push
and
ins
inc
add
inc
mov
inc
call
bound
test
dec
mov
inc
into
mov
mov
push
jmp
test
inc
ins
xor
push
mov
dec
(bad)
fcomp
retf
mov
pop
(bad)
leave
xor
mov
mov
mov
les
push
and
xlat
into
mov
jmp
inc
scas
js
je
adc
sub
adc
lods
pop
mov
jb
std
add
mov
sbb
mov
xchg
ror
inc
or
out
push
ja
mov
dec
inc
sub
fsubrp
and
movs
cmp
loopne
stc
push
je
pop
lahf
sar
sbb
and
xchg
xchg
cmp
xchg
mov
test
dec
(bad)
mov
inc
fs
inc
mov
pop
mov
(bad)
xor
jne
and
fwait
mov
cwde
adc
in
std
jnp
pop
push
jl
jmp
jecxz
sbb
and
scas
mov
mov
pop
std
sub
mov
sub
aad
add
lahf
cwde
aas
cmps
mov
cmp
inc
mov
or
adc
test
jecxz
pop
mov
push
fs
jl
rcr
mov
cmp
adc
jmp
(bad)
retf
and
mov
push
jae
cmp
mov
repz
mov
int
pop
scas
jmp
pop
sub
push
cmp
push
inc
inc
int
dec
clc
pop
out
sbb
push
push
jmp
mov
sbb
sbb
xchg
test
inc
bound
cmp
xor
jp
mov
and
inc
sbb
fild
clc
jmp
dec
dec
in
fcomp
mov
sub
mov
xor
iret
push
dec
ret
enter
inc
cmc
pop
rcr
cmp
pop
test
and
nop
xchg
inc
push
inc
repz
mov
les
(bad)
(bad)
in
jae
fidiv
jecxz
mov
inc
scas
retf
lods
lock
push
inc
xor
push
or
cs
lds
lods
adc
lods
shl
inc
mov
jno
push
dec
movs
repz
std
stos
pslld
pop
popa
push
ss
stos
lods
pop
addr16
xlat
out
shr
outs
and
mov
dec
add
js
cmc
imul
dec
or
and
ret
inc
dec
xchg
pop
or
iret
push
jnp
in
mov
adc
cmp
add
fmul
jl
mov
out
xor
popf
lahf
ds
push
push
mov
shr
repz
mov
das
push
pop
lock
mov
and
and
pop
dec
xchg
inc
lahf
jge
mov
pop
or
fcmovu
(bad)
pop
or
jmp
clc
mov
lods
cmp
stos
adc
cwde
jb
ret
pop
das
jb
cmp
jbe
add
mov
xchg
push
sar
fst
or
mov
pop
mov
push
pop
fwait
jno
jmp
jb
sbb
xchg
push
mov
cmc
mov
mul
xchg
test
push
jnp
stos
jge
pop
(bad)
in
jns
je
test
test
repz
scas
(bad)
fist
mov
xchg
daa
add
cli
fild
adc
ror
pop
sbb
sub
add
push
enter
xor
mov
scas
leave
add
dec
cmp
sub
mov
xor
jo
xchg
pushf
jg
mov
cwde
xchg
mov
push
retf
clc
mov
aam
cmp
dec
cmc
pop
movs
mov
or
pop
nop
stc
ja
cmc
aaa
xor
leave
gs
pop
or
pop
add
and
cmp
sbb
or
ffreep
leave
call
dec
mov
je
and
mov
les
movs
(bad)
in
xchg
push
fwait
div
fs
arpl
add
pop
adc
jg
repz
inc
xlat
in
hlt
mov
in
xor
fs
xor
imul
dec
sub
movs
(bad)
adc
shl
mov
add
adc
adc
jmp
test
imul
push
cld
push
pop
dec
loop
push
rcr
mov
jmp
and
into
les
pop
popa
inc
jb
scas
pop
es
aaa
pop
data16
je
popw
mov
push
sbb
push
ror
add
cmp
inc
jmp
fidivr
(bad)
imul
arpl
lea
fldcw
sub
fs
rcl
adc
data16
xchg
and
test
sbb
jne
push
mov
cmp
sub
out
mov
sub
jecxz
mov
call
mov
in
fstp
xchg
inc
push
jg
adc
cs
std
stos
mov
jae
stos
into
pop
pop
(bad)
lods
jno
popa
xor
div
mov
mov
imul
(bad)
iret
dec
mov
pop
(bad)
jge
outs
mov
fiadd
nop
inc
pop
xlat
ins
sti
stos
pusha
int
or
nop
shl
and
stos
jg
or
mov
xchg
jle
outs
mov
ss
xor
push
test
(bad)
retf
icebp
xchg
rol
xchg
jle
dec
into
mov
ror
push
xor
inc
jb
adc
mov
push
inc
les
mov
sbb
mov
fild
sbb
or
mov
xchg
sbb
cli
out
rol
outs
(bad)
push
and
mov
adc
push
adc
mov
sbb
aas
mov
ss
js
cmp
cmps
out
jl
push
xrstors
push
push
daa
xchg
sti
xchg
xchg
rcr
cmp
inc
mov
push
push
sbb
add
cmp
mov
loopne
ss
dec
dec
cwde
add
cmp
push
mov
stos
xchg
and
xor
repnz
add
ret
test
xlat
jmp
and
mov
add
or
sar
adc
mov
int3
mov
icebp
or
and
cmp
in
movs
popf
pop
inc
and
lds
bound
push
cwde
pop
sbb
aaa
repnz
jmp
inc
lock
and
cmp
scas
dec
fisub
fucompp
imul
stos
dec
xchg
push
pop
clc
movs
sahf
or
mov
cmp
sbb
int
or
sub
sub
pop
retf
dec
pop
scas
es
adc
lods
mov
push
test
les
dec
fisubr
movs
xchg
dec
int3
rol
push
leave
dec
aas
xchg
outs
push
std
mov
aas
sahf
adc
sbb
push
(bad)
xchg
jecxz
paddd
pop
in
mov
inc
add
and
push
pop
jns
fbstp
jp
fiadd
cmp
pop
jl
jnp
fdiv
retw
jo
(bad)
std
push
dec
push
mov
and
sbb
stos
inc
xor
add
dec
ins
aas
inc
or
mov
dec
das
push
out
loope
jmp
iret
xchg
ret
inc
push
mov
mov
jno
or
jg
pop
or
loopne
pop
ficom
fnstsw
push
sbb
sbb
clc
(bad)
xchg
cmp
sbb
cwde
pop
cmp
sub
push
push
sub
popf
in
dec
mov
push
add
enter
mov
hlt
cs
add
push
div
aad
ficomp
outs
fwait
(bad)
sub
inc
sar
test
jecxz
and
inc
js
xor
adc
ret
stc
jmp
inc
jmp
repnz
in
scas
fadd
bound
ror
(bad)
arpl
push
add
sbb
mov
rol
aad
jb
cmps
not
ins
lods
neg
mov
dec
sub
adc
cmp
in
mov
xor
pushf
pop
and
jle
retf
sbb
aam
jo
mov
sbb
mov
jp
xor
adc
shl
cmps
pop
inc
rcr
arpl
cmp
mov
sbb
fsub
(bad)
push
jle
sahf
arpl
mov
mov
inc
inc
scas
sub
xor
xchg
(bad)
cmp
lods
sbb
xor
ret
mov
pop
jns
rol
stos
jmp
mov
iret
fisub
imul
cmps
das
jbe
je
and
sub
lods
test
test
push
push
repnz
pop
mov
imul
fld
pop
add
jge
jp
fcomp
mov
or
test
es
mov
aas
jno
(bad)
bound
push
fs
movs
sub
jne
pop
or
jne
fldenv
jl
cmp
mov
cmc
mov
ds
push
inc
inc
add
sbb
in
dec
ins
jo
sub
lahf
pop
mov
push
jmp
in
push
fs
inc
popfw
or
push
push
ret
inc
out
mov
imul
aas
inc
inc
and
sub
in
sub
jbe
int
popf
xchg
xchg
pop
mov
movs
xchg
sbb
(bad)
pop
push
adc
test
mov
push
mov
xchg
xor
fs
pop
jo
or
or
aam
jmp
pop
stos
sub
adc
dec
scas
loop
repz
icebp
gs
pop
mov
jne
add
shl
lods
xchg
and
pop
add
(bad)
leave
ds
dec
and
or
pop
popa
and
xor
in
pop
neg
adc
out
mov
jmp
push
xchg
inc
retf
mov
fcomp
or
int
aaa
adc
and
mov
pop
cmp
cmp
jne
sbb
out
into
pop
stos
fldlg2
dec
ret
fiadd
mov
pop
mov
jecxz
aam
movs
fstp
mov
and
xchg
dec
and
leave
repnz
test
cmp
mov
adc
mov
inc
sbb
and
sub
out
(bad)
(bad)
cwde
mov
popf
pop
dec
or
push
gs
inc
adc
out
jne
or
and
fimul
add
pop
mov
and
ficomp
mov
in
pop
les
dec
test
test
ins
imul
lea
ret
cmc
fild
inc
xchg
push
push
mov
(bad)
pop
mov
loopne
push
movs
int3
sub
jmp
jmp
pop
lea
sbb
and
lds
stos
and
sub
mov
cmp
sbb
or
xor
xor
popf
adc
sub
shr
inc
jl
jl
jns
sahf
jae
push
jb
popf
push
test
frstor
xor
jb
xchg
int
and
adc
ins
addr16
test
fbld
popf
jge
sbb
xchg
test
adc
addr16
inc
xchg
mov
inc
les
pop
vcvtpd2ps
mov
repz
stos
or
xchg
int
xchg
in
mov
xor
and
mov
icebp
jnp
and
mov
sub
dec
dec
mov
ss
sub
adc
jnp
adc
adc
mov
shl
into
(bad)
xchg
mov
stos
iret
addr16
aas
xchg
pop
lahf
sbb
xchg
ds
inc
fidiv
dec
lock
push
xor
push
js
push
jg
mov
adc
sbb
cmc
test
jge
mov
pop
xor
or
sahf
xor
out
mov
pop
xchg
push
addr16
or
sbb
mov
jnp
aaa
adc
pop
sub
ds
cmps
jno
(bad)
fidivr
repz
iret
or
mov
jne
mov
push
adc
push
fisttp
daa
xchg
outs
pop
dec
jmp
ror
aad
mov
pop
mov
stos
sub
pop
push
bound
loopne
pusha
fdivr
and
sub
into
das
ret
mov
jo
adc
xchg
cwde
sti
push
cmp
xchg
xchg
shl
cmp
jnp
fscale
inc
inc
ret
and
test
movs
jae
ja
les
call
and
in
pop
xor
std
mov
mov
movs
mov
sub
and
mov
iret
mov
mov
cmp
lahf
and
mov
retf
popfw
mov
cs
mov
jns
pop
pop
xchg
nop
stos
imul
in
(bad)
int
loope
adc
les
or
jecxz
mov
movs
xor
jns
ret
aam
imul
and
xor
xor
pop
jne
pop
xchg
cdq
scas
inc
or
jmp
mov
adc
inc
mov
push
mov
push
lock
or
neg
js
jmp
bound
xor
or
std
daa
inc
jp
imul
cmp
push
inc
sbb
push
jne
push
and
imul
pop
fwait
fwait
xor
in
gs
mov
sub
jecxz
hlt
xchg
data16
ss
xor
mov
clc
sahf
outs
in
jbe
sub
mov
test
pop
fwait
adc
mov
push
mov
sub
jp
lahf
pusha
js
sbb
jns
inc
rcr
scas
xchg
inc
in
jle
mov
int
sahf
(bad)
nop
ret
and
or
mov
dec
lea
dec
lods
cmp
fcmovb
out
icebp
sbb
loop
fs
in
stc
daa
xor
adc
retf
cmp
push
mov
mov
jge
and
inc
dec
cmp
fcmove
or
ja
jbe
cmp
mov
mov
fst
sbb
ss
push
xor
xchg
mov
mov
aas
or
fwait
aam
into
iret
push
push
inc
add
adc
or
fwait
pop
lahf
outs
(bad)
rcl
push
cld
pop
dec
add
cmc
out
mov
add
and
sahf
jmp
ret
(bad)
retf
mov
jge
xor
add
jg
icebp
push
test
outs
out
daa
(bad)
cmps
mov
jb
sbb
jo
ins
imul
jl
sbb
dec
cmp
sub
out
in
enter
arpl
bound
xchg
fdiv
fisttp
sub
dec
cmc
mov
jo
pop
sbb
popf
adc
or
push
xchg
popa
out
add
pusha
cmp
outs
fdivr
sbb
adc
xchg
or
movs
mov
dec
sbb
mov
inc
sub
dec
adc
mov
dec
xor
in
pusha
stos
rcr
add
mov
rcr
out
imul
leave
adc
xchg
sar
shl
jmp
fs
xor
pop
sub
enter
sub
sbb
jo
dec
in
adc
adc
pop
or
mov
repz
sub
fdivr
shl
dec
retf
push
in
mov
jle
(bad)
out
repz
into
cmp
mov
mov
sub
in
and
imul
push
ss
sbb
jne
or
pop
fidivr
movs
mov
test
in
mov
data16
mul
scas
repnz
xchg
clc
into
outs
push
mov
xor
jge
sbb
adc
jnp
lods
stc
push
pop
xchg
mov
push
push
push
or
shr
xor
fcom
in
push
ret
xchg
dec
ja
push
jbe
push
lea
sbb
js
mov
push
push
inc
arpl
xor
mov
fistp
jne
jge
call
inc
inc
jne
retf
xor
push
cmp
jne
cs
mul
mov
fcomp
sub
jmp
hlt
and
and
jno
push
mov
inc
mov
stos
outs
add
sbb
mov
and
push
dec
and
sbb
bound
sub
sub
jmp
or
cdq
out
jnp
mov
pop
mov
loope
pop
jno
rcr
std
pop
mov
aam
(bad)
inc
xchg
jecxz
sahf
or
sub
clc
cdq
hlt
pop
shl
mov
retf
es
mov
pop
aas
sti
addr16
sub
mov
mov
adc
aaa
je
cs
loope
pop
sbb
add
jae
rcl
xrelease
xor
hlt
sub
pop
movs
retf
cmp
or
fsubp
pop
mov
cmc
retf
xchg
sub
stos
test
cmps
and
pushf
jmp
dec
rol
das
cwde
outs
(bad)
imul
std
pop
xchg
xor
push
mov
push
psubsw
js
sub
jl
mov
fs
sbb
movs
mov
mov
sub
movs
call
jle
ss
inc
or
inc
lods
jecxz
enter
lods
cmp
out
ror
into
fcomp
ss
cmp
aas
xor
mov
or
mov
scas
mov
int
nop
push
call
adc
adc
std
int
mov
stos
loope
pop
xchg
xor
jmp
rcr
fisub
int
cmps
jb
add
add
dec
out
test
add
xchg
and
jge
enter
sahf
fucom
inc
fwait
pusha
adc
mov
or
bound
mov
or
push
fisttp
hlt
inc
sub
inc
dec
pop
dec
or
jo
inc
lds
xchg
sti
fidiv
jge
sahf
movs
inc
or
mov
outs
sti
cld
les
pop
ss
dec
in
xchg
xchg
pop
sub
aad
outs
push
(bad)
std
push
inc
(bad)
(bad)
(bad)
cmp
aam
mov
jecxz
sub
clc
cmp
ja
jns
shl
rcr
jg
mov
mov
scas
lds
movs
jo
imul
mov
jae
mov
sbb
xor
jno
xor
mov
lock
test
xchg
ins
push
rcr
jno
add
sub
pop
adc
push
xor
popa
pop
bound
jnp
or
out
sub
scas
jbe
add
stos
test
(bad)
sub
jnp
jmp
enter
shl
scas
mov
xchg
jae
dec
lods
pop
data16
mov
fistp
enter
sub
mov
(bad)
fwait
jg
(bad)
and
mov
jne
sbb
not
sub
lea
lods
pop
push
lea
mov
sub
rol
inc
add
repnz
(bad)
mov
setbe
stos
gs
fidivr
std
(bad)
fcmovnb
mov
sbb
test
push
xchg
xor
and
fild
dec
loope
jo
ret
xor
inc
and
sub
mov
push
test
push
ins
imul
jo
inc
sub
adc
inc
or
pop
std
add
mov
loope
and
in
enter
push
aas
arpl
iret
inc
jg
test
test
lock
pop
xor
pop
xor
test
add
adc
inc
cwde
mov
enter
out
sbb
push
loopne
pop
push
cld
push
jp
mov
sub
pop
inc
addr16
mov
ficom
dec
sti
cmp
add
out
pop
mov
and
mov
in
mov
jae
fsubr
cs
push
cwde
lds
xlat
jp
pop
push
(bad)
push
je
mov
mov
xor
mov
mov
icebp
jae
je
in
sub
sbb
(bad)
(bad)
cmp
cmps
sbb
aam
je
or
(bad)
sti
pushf
sub
mov
pop
(bad)
cld
jbe
aas
or
and
mov
out
sbb
aaa
xor
gs
sub
(bad)
std
ja
sbb
push
sbb
mov
cli
sbb
ins
inc
mov
dec
cli
nop
ins
cmp
jmp
xor
and
sbb
(bad)
jmp
in
(bad)
pusha
pop
(bad)
shl
(bad)
inc
cmps
dec
and
pop
jo
icebp
scas
repnz
lea
repnz
setg
jg
fs
mov
cdq
pop
cld
clc
xchg
hlt
out
pop
mov
xchg
pop
into
jge
cmp
fwait
movs
jnp
mov
jne
lock
pushf
adc
out
imul
sbb
out
mov
mov
call
add
or
push
stos
test
sub
cdq
cmps
cli
fsub
or
cld
inc
ja
cmps
int
aad
dec
xchg
dec
repz
xor
hlt
retf
lock
div
add
mov
add
mov
jnp
or
mov
xchg
inc
push
hlt
jnp
cmc
ret
mov
jmp
pop
pop
mov
rcr
mov
or
sti
ret
jge
push
cs
in
mov
mov
aaa
add
and
test
and
or
lock
dec
rcl
shl
pop
mov
pop
inc
gs
leave
pop
stos
xchg
jle
inc
push
aaa
pop
movs
aaa
or
and
rcr
pushf
or
cmc
sub
out
std
sbb
not
(bad)
mov
cmp
push
mov
(bad)
push
mov
dec
add
shl
mov
mov
mov
into
ret
gs
imul
lods
nop
sub
xor
fcom
mov
mov
int3
xchg
imul
cmp
loope
inc
cmp
arpl
imul
pop
push
(bad)
or
adc
jecxz
into
fidiv
jl
enter
into
xlat
pop
sub
cmp
es
scas
into
inc
lock
sbb
and
and
popa
stos
xchg
retf
xor
(bad)
stos
adc
and
jo
xlat
sub
call
cmp
cmp
adc
(bad)
and
push
inc
fwait
add
sub
push
pop
jmp
lods
ja
retf
sbb
test
xchg
out
cli
movs
jecxz
in
xlat
test
mul
or
scas
mov
xlat
(bad)
fsubr
in
pop
scas
xor
outs
mov
fldcw
mov
cwde
mov
enter
add
cwde
mov
adc
mov
mov
inc
push
and
cmps
clc
shl
cli
aad
dec
adc
lods
loopne
mov
and
rcr
xor
xor
fsub
stc
ss
xlat
mov
loope
lds
(bad)
jne
seto
ror
test
jno
sub
or
sti
or
xchg
gs
xchg
pop
push
push
fiadd
and
sti
iret
mov
add
push
and
mov
outs
js
add
jnp
inc
mov
push
pop
fistp
sbb
sbb
or
loope
loopne
push
imul
xchg
push
jge
cmp
ins
cmps
in
js
data16
pusha
dec
sar
add
sub
jno
fwait
adc
sbb
and
or
push
cmc
sub
ret
dec
icebp
mov
lock
mov
aas
mov
(bad)
idiv
scas
lds
test
les
out
out
inc
and
sub
stos
ja
push
xchg
ins
loope
push
retf
and
sbb
mov
push
mov
jle
cmp
or
aaa
call
aam
(bad)
pop
pop
movs
dec
push
add
rcr
ror
mov
mov
push
pusha
faddp
arpl
sahf
push
test
push
in
loopne
mov
sub
push
adc
rep
inc
xchg
cmp
rol
icebp
fs
or
push
cli
and
jmp
pop
adc
aad
sbb
sbb
sbb
inc
fdivr
adc
clc
inc
ret
mov
repz
jns
ror
cli
mov
adc
and
clc
pop
adc
(bad)
cwde
fcmovbe
xchg
stos
fcmovnb
or
in
mov
xchg
repz
(bad)
mov
jb
mov
(bad)
leave
dec
call
fs
clc
mov
inc
repnz
daa
mov
lea
aas
pop
fnsave
loopne
mov
aad
xchg
inc
cmp
out
(bad)
pop
inc
and
sar
mov
jmp
push
mov
repz
jp
imul
xchg
and
push
gs
fiadd
xor
and
repz
in
inc
xchg
inc
test
imul
jmp
outs
fwait
bound
mov
sub
stos
pop
push
aas
popf
cmp
cs
jmp
test
xor
imul
mov
xchg
ja
cs
mov
mov
xlat
std
pop
sbb
pop
dec
ret
push
xchg
aam
pop
add
movs
sub
cwde
jbe
and
mov
mov
icebp
outs
jge
pop
mov
pop
jle
imul
cmp
jb
sub
(bad)
jmp
cmc
pop
or
sbb
bound
cmc
add
jno
cmps
pop
mov
lods
fistp
jl
or
jb
hlt
outs
push
adc
popf
stos
or
dec
cld
nop
inc
or
mov
dec
pop
aam
xor
rcr
add
or
xchg
out
cmp
push
cs
je
jno
cmp
ds
daa
pop
dec
loop
(bad)
jno
and
mov
jno
mov
movs
lods
dec
fdivr
out
jmp
lods
test
pop
xchg
movs
dec
push
sub
jbe
inc
dec
jnp
inc
push
pop
cmps
in
ds
or
mov
imul
sub
into
ins
jp
and
dec
mov
mov
stos
fadd
push
and
imul
mov
xor
xchg
mov
sbb
shl
lods
xchg
or
ss
pop
outs
push
fcmovu
jg
or
clc
test
xor
adc
xchg
mov
dec
repnz
jl
and
mov
test
dec
in
sbb
fsub
shl
mov
loope
(bad)
cmps
xchg
mov
sbb
sub
xor
movs
lock
ror
scas
cmp
sub
dec
and
mov
xor
imul
(bad)
(bad)
loopne
push
push
call
add
fsubr
shl
or
test
mov
inc
sbb
xchg
call
jmp
lds
enter
add
or
jle
aad
jle
fdiv
xchg
push
jno
popf
rol
lods
cli
cld
movs
adc
cmp
cmp
jo
ret
(bad)
mov
or
scas
jns
jecxz
loope
ret
pop
or
cwde
adc
push
mov
cmp
jb
dec
sub
repz
dec
out
scas
xor
jp
lods
test
or
sar
cmc
mov
arpl
jne
pop
(bad)
aas
(bad)
sbb
fwait
loop
and
in
cmp
out
in
ds
jno
test
sub
or
ret
push
sbb
fmul
fnstsw
mov
xchg
mov
sub
lods
dec
rol
xchg
arpl
out
cmp
fs
clc
ficom
sub
pop
ret
dec
rcl
sub
or
data16
in
jp
cwde
jmp
xchg
aaa
inc
dec
into
and
cdq
(bad)
rol
xor
stos
and
mov
jl
push
and
inc
lock
data16
xor
jg
xchg
push
aad
adc
sbb
adc
adc
pushf
ins
xlat
pop
pop
pop
enter
push
sub
mov
sub
or
out
test
mov
sub
mov
dec
stc
xchg
mov
loope
sub
sub
add
inc
mov
nop
sub
xor
cmc
ror
mov
test
fild
sbb
inc
adc
adc
xor
not
je
push
imul
das
out
arpl
cmp
sub
fist
jne
sti
jp
nop
popw
mov
add
adc
jl
push
push
daa
data16
xchg
lds
add
sub
ins
mov
clc
fcmovne
pmulhuw
or
enter
rol
push
push
ret
pop
mov
dec
pop
jmp
lods
leave
aaa
(bad)
iret
add
mov
add
rcr
sub
(bad)
jno
push
mov
and
inc
jns
and
or
mov
popf
mov
sbb
mov
sbb
ds
xlat
push
jmp
xor
xchg
and
pop
lahf
add
xchg
adc
(bad)
(bad)
mov
xor
mov
inc
mov
aas
inc
sahf
xor
and
adc
test
xor
push
mov
ror
sbb
xchg
push
cwde
adc
(bad)
fcom
mov
sahf
pop
lds
or
sti
setl
lahf
cmps
cwde
addr16
sub
int
ror
push
call
sbb
cdq
ins
cmp
int
mov
mov
xchg
xor
jl
movs
pop
push
les
mov
xor
dec
mov
(bad)
clc
cmp
cmc
mov
xchg
test
ins
iret
sub
lds
fimul
or
adc
(bad)
mov
xchg
sbb
movs
add
mov
adc
push
or
(bad)
cmc
ror
cmp
lods
jp
in
inc
sbb
xor
(bad)
sar
sti
and
out
inc
xchg
xchg
push
sub
int
icebp
pop
jb
icebp
and
cmp
mov
popa
out
cwde
cmp
push
shr
fstp
arpl
js
gs
out
aad
and
xchg
jo
imul
sbb
cdq
cdq
cli
push
lea
arpl
cmp
pop
mov
lock
fnstenv
lds
iret
fwait
(bad)
mov
xchg
movs
mov
xchg
les
cmp
enter
xchg
mov
cli
adc
popf
hlt
pop
xchg
adc
mov
push
jno
repz
ss
fimul
sbb
(bad)
call
push
mov
mov
and
mov
lahf
(bad)
shl
stos
int
adc
scas
add
lahf
and
dec
retf
jne
rol
or
aad
mov
sbb
aas
mov
(bad)
dec
and
add
push
retf
and
ret
mov
pop
dec
aas
popf
ins
push
ins
inc
shl
aam
enter
push
pop
dec
scas
rcr
pop
data16
out
test
cli
pusha
cmp
idiv
rcr
or
loopne
ret
loopne
fist
jno
ds
hlt
inc
pop
(bad)
movs
shl
stos
add
jns
cmps
movs
je
sub
sbb
cmp
addr16
fsubr
jno
into
loope
mov
push
push
icebp
xchg
retf
fild
mov
adc
fidivr
jecxz
xchg
cmps
int3
mov
add
clc
sub
ret
cmc
push
fmul
jecxz
lahf
or
xchg
int3
sub
pusha
xchg
pop
jno
stos
(bad)
in
push
cmp
add
or
rol
push
jb
jl
xor
jle
xchg
adc
aaa
dec
sub
cmp
retf
fwait
(bad)
das
push
sbb
int3
push
js
xchg
xor
and
mov
jp
pop
xor
pushf
inc
dec
mov
jns
ror
adc
hlt
mov
imul
lods
adc
outs
cmp
ret
mov
mov
cmps
dec
sbb
or
data16
or
pop
and
dec
imul
div
aam
push
inc
stos
mov
jge
jmp
es
or
xor
xchg
addr16
push
inc
sbb
xchg
add
jle
icebp
xchg
sar
sbb
jb
dec
ss
jae
mov
sub
cmp
inc
pop
jmp
sti
xchg
adc
sub
aaa
(bad)
push
test
inc
mov
dec
push
sti
ret
stos
sub
sub
mov
inc
xor
popw
fs
fs
xchg
(bad)
pop
or
ffree
std
stc
pop
pushf
and
jge
(bad)
aas
cmp
cmp
frstor
jmp
rol
lahf
sub
pop
dec
idiv
arpl
mul
xchg
cs
imul
fsubr
and
in
push
and
inc
lods
pusha
push
ds
or
loopne
fidiv
push
sub
and
mov
fsub
jno
or
dec
hlt
fmulp
shr
mov
lock
pop
shl
adc
hlt
jge
mov
movs
test
rcl
mov
inc
bnd
inc
jecxz
int3
dec
enter
fidivr
cmps
sub
pop
aaa
or
adc
sbb
jg
sbb
push
out
das
icebp
and
ss
and
sar
test
and
test
hlt
or
fdiv
pop
push
mov
addr16
fmul
pop
out
rcr
push
jecxz
adc
mov
sbb
cs
mov
fldcw
lock
jb
pop
outs
sub
ins
add
int3
lock
mov
xor
sbb
icebp
and
adc
aaa
inc
fucom
mov
mov
leave
movs
popf
inc
push
sub
pop
out
call
movs
dec
mov
jns
sub
mov
jo
cmp
dec
clc
sub
gs
nop
(bad)
push
repnz
add
mov
scas
mov
and
jecxz
addr16
inc
xchg
inc
aas
leave
mul
jo
jle
sbb
xchg
dec
mov
pop
mov
fbld
outs
add
aam
dec
movs
sti
call
dec
clc
jnp
cmp
std
retf
ss
jns
fidivr
adc
jo
and
or
and
dec
adc
psllw
(bad)
jae
ins
pop
pop
aaa
iret
add
into
in
xor
or
dec
xchg
jbe
ja
jmp
enter
inc
xchg
push
mov
pop
movs
xchg
sbb
scas
sbb
out
dec
ja
sbb
sbb
js
(bad)
ds
rcl
cmps
cmp
add
and
scas
jle
xor
in
mov
inc
gs
adc
push
loope
iret
ins
mov
sub
mov
shr
js
push
inc
jo
int
fcom
out
xchg
pop
sub
adc
inc
mul
fcmovb
mov
out
mov
fsubr
mov
xchg
jnp
adc
xor
addr16
sub
cmps
mov
outs
jae
mov
inc
sahf
push
xchg
stos
cmp
rcl
ds
fmulp
or
and
sub
mov
lods
movs
sub
push
mov
jge
into
lea
rcr
push
out
add
xlat
xchg
je
xchg
fsub
and
add
inc
cmp
pop
sub
xchg
jb
lds
das
out
mov
adc
xchg
xor
(bad)
jo
dec
stc
gs
lock
pop
test
sti
cmc
aaa
jb
in
retf
sbb
inc
out
into
popa
out
sbb
cmp
cmp
push
jge
mov
mov
xchg
adc
inc
mov
enter
pop
(bad)
fbstp
idiv
pop
imul
xchg
push
out
sub
sub
retf
xor
mov
jns
mov
jmp
xchg
icebp
cmc
gs
test
push
pop
inc
xor
stc
shl
xchg
cld
ror
pop
mov
test
(bad)
inc
test
or
mov
jl
in
hlt
lahf
inc
sub
fcmovu
inc
(bad)
in
ret
and
dec
ins
and
imul
or
(bad)
js
mov
loopne
pop
mov
mov
pop
mov
dec
pusha
xor
mov
hlt
pop
sub
mov
pop
jns
shl
movs
ror
push
fdivr
xchg
add
mov
sar
mov
xchg
push
into
and
je
xor
js
rcl
lds
inc
lahf
mov
movs
loop
sbb
call
stos
test
push
xlat
dec
out
js
fldcw
xchg
mov
loope
(bad)
not
mov
ds
cmp
push
or
outs
fsubp
push
xlat
aam
cld
lods
(bad)
adc
pop
jg
out
stos
or
dec
dec
or
stos
push
jmp
dec
cmps
test
or
shl
sub
je
jno
movs
add
pop
mov
movs
push
pusha
ret
pop
jmp
xchg
xor
dec
retf
or
repnz
arpl
inc
jae
inc
jmp
(bad)
xchg
cs
xchg
jae
stos
jp
out
out
xor
xchg
icebp
sbb
lods
xor
push
mov
jle
and
jns
(bad)
mov
and
mov
mov
xor
ret
inc
adc
jb
ret
aaa
loopne
hlt
and
push
or
xchg
lock
mov
frstor
js
and
sti
aas
xchg
xchg
or
aaa
cwde
mov
lahf
mov
xchg
sub
loope
adc
push
repnz
add
mov
std
push
mov
xor
nop
and
or
inc
leave
leave
sub
jno
repnz
pop
add
pop
cmp
adc
or
syscall
xchg
mov
outs
lea
push
movs
inc
std
sbb
scas
fs
dec
aam
adc
xchg
in
enter
add
mov
in
pushf
(bad)
fist
jne
push
pop
ins
out
icebp
cmp
js
xchg
mov
mov
pop
daa
imul
(bad)
xor
or
sbb
shl
lds
push
repz
cmp
push
mov
stc
(bad)
test
scas
jo
pop
sbb
dec
mov
mov
daa
push
or
lods
imul
add
or
inc
mov
mov
fstp
je
retf
sub
xchg
mov
aad
ds
add
push
out
in
dec
pop
dec
sbb
lds
jg
pop
mov
cmp
in
mov
sbb
dec
int3
dec
inc
or
and
enter
sbb
add
pop
xchg
xchg
sahf
outs
mov
pop
arpl
adc
in
rol
rol
fstsw
mov
mov
push
bound
test
and
sbb
idiv
out
jecxz
xchg
enter
aaa
add
inc
gs
dec
jmp
mov
mov
inc
inc
mov
call
arpl
sbb
shr
es
add
fadd
cmp
and
es
loope
xchg
movs
test
lods
or
and
aad
sbb
ret
mov
jecxz
icebp
popa
sbb
add
add
idiv
inc
or
add
shr
movs
adc
retf
mov
adc
sbb
je
xor
mov
inc
xor
jmp
in
mov
aaa
fld
pop
(bad)
or
fsubr
mov
mov
push
dec
dec
out
xchg
stos
sbb
in
push
hlt
imul
inc
push
int3
lods
inc
sbb
push
sub
(bad)
jne
popa
addr16
xchg
mov
and
push
add
sahf
sti
add
xor
and
mov
repnz
xchg
fwait
shl
ret
xchg
and
cmps
sub
imul
cmp
inc
sub
loopne
mov
pop
(bad)
sub
mov
movs
dec
sbb
dec
add
pop
cmp
push
stos
jle
adc
xchg
jb
pop
and
pop
std
mov
loop
pop
rep
cmps
add
xor
xchg
aas
xchg
cmps
push
stc
push
xor
push
call
mov
arpl
(bad)
pop
cmp
mov
ss
mov
cli
lahf
sbb
xchg
pop
cmp
mov
jmp
add
(bad)
xchg
stos
ret
shl
pop
pop
cli
cmp
mov
addr16
retf
xor
xor
mov
mov
mov
addr16
pop
imul
scas
xchg
jns
rcl
push
sahf
mov
jge
shr
and
xor
adc
mov
add
scas
jg
xor
mov
jne
test
or
stos
add
fiadd
mov
xor
adc
or
in
jbe
jo
dec
lods
sub
jb
or
(bad)
push
sub
sti
cmps
rcl
or
(bad)
repnz
loopne
jno
pusha
jl
sbb
add
cwde
jo
sbb
clc
mov
adc
mov
mov
xor
ret
or
pushf
dec
adc
loop
inc
and
jmp
xor
mov
mov
jl
int3
clc
push
xor
lea
xor
or
ins
jb
not
xor
xchg
imul
jmp
jo
fisub
cdq
mov
or
and
call
push
fcmovnbe
or
sbb
xor
fucomp
rol
mov
sub
adc
add
test
stos
popf
(bad)
sbb
jmp
mov
lahf
push
jmp
xchg
clc
inc
xchg
jbe
xor
inc
jle
sub
bound
dec
jle
and
fidiv
sbb
jmp
bound
cdq
mov
fnstenv
cdq
adc
(bad)
mov
pop
dec
addr16
aas
pop
ret
retf
adc
jno
mov
pop
call
test
ret
xor
in
ret
nop
cmc
sbb
push
mov
cmp
stos
(bad)
(bad)
xchg
adc
cmps
jbe
cwde
daa
mov
gs
and
cmp
popf
(bad)
out
iret
(bad)
mov
scas
xor
scas
sub
xchg
push
fsub
jecxz
cmp
daa
push
jle
gs
inc
gs
ins
xlat
jmp
jmp
mov
jbe
jle
jb
sub
xchg
sahf
es
mov
das
xchg
ret
rol
sub
inc
mov
xor
das
aas
loope
and
push
jmp
int3
xchg
lods
adc
mov
push
mov
(bad)
sub
sti
pminsw
mov
test
stos
adc
ds
mov
mov
xor
sub
test
push
jae
data16
cmp
mov
push
sti
lds
xchg
jae
std
lea
adc
pop
sub
shl
loope
mov
leave
push
test
icebp
pop
ins
out
and
push
or
repnz
and
jge
jnp
shl
sbb
out
repz
mov
push
adc
ins
js
jl
(bad)
mov
mov
seto
lods
and
movs
inc
movs
(bad)
cmp
sub
jno
(bad)
dec
aaa
mov
and
add
idiv
sbb
add
fild
mov
in
dec
bnd
pop
lods
inc
int
push
pop
xor
xor
push
and
pop
jmp
and
xlat
push
stc
jno
shr
out
or
cs
jp
xchg
pop
lock
rcr
ja
adc
mov
int3
dec
xchg
loop
dec
mov
daa
rol
je
ret
inc
adc
not
(bad)
xor
jbe
mov
cmp
fmul
or
sti
sahf
push
add
stos
sbb
mov
test
dec
sub
mov
mov
sbb
adc
movs
add
xchg
fs
dec
popa
ins
in
repz
es
inc
xchg
or
jns
or
add
cmp
push
ins
or
out
(bad)
sub
jbe
pushf
adc
xchg
(bad)
icebp
xchg
lock
pop
repnz
and
jo
jnp
ja
dec
push
adc
ror
loopne
fcomp
(bad)
sahf
inc
dec
int
add
imul
mov
mov
stos
mov
rcr
pop
cmp
popf
movs
xchg
mov
fsub
adc
sub
mov
sar
sbb
inc
enter
push
loopne
xchg
bound
aam
dec
jae
aaa
(bad)
movs
sbb
mov
ins
movs
sbb
push
or
rol
push
mov
in
imul
cmp
cld
ror
push
dec
or
test
pop
aas
sbb
pop
movs
push
lock
imul
hlt
and
loope
in
inc
sub
jmp
loopne
adc
out
in
jp
mov
in
push
mov
adc
sub
fcmovbe
test
xchg
dec
and
sub
pop
or
sub
jecxz
mov
ror
jmp
xchg
arpl
mov
xor
les
gs
mul
mov
das
cmc
push
sub
int3
call
push
and
int
xchg
mov
jno
push
pop
dec
xchg
cdq
inc
je
mov
and
daa
(bad)
xor
xchg
cmp
ins
xchg
int
ds
loope
pop
icebp
adc
cmp
in
out
xchg
adc
push
xchg
cmp
push
pop
sub
int
int
xor
add
nop
arpl
idiv
push
aam
fwait
pusha
ret
mov
in
and
cmc
rcl
push
addr16
and
bound
inc
dec
xor
bnd
mov
pop
xchg
cmp
pop
out
outs
stos
mov
jmp
xchg
(bad)
in
cmp
out
test
retf
xchg
sub
popa
sar
push
jge
nop
scas
jnp
fnstenv
or
cmp
cmp
xchg
jecxz
lea
and
fcomp
int3
jbe
mov
fst
dec
jg
sub
xchg
out
push
rcl
rcr
add
out
inc
sub
rcr
mov
mov
lods
push
bound
pop
iret
movs
repnz
mov
add
dec
jmp
mov
and
sbb
fs
pop
movs
test
jg
mov
mov
das
rcr
bswap
repnz
mov
hlt
fstp
push
rcr
sbb
test
cs
fwait
mov
adc
outs
pop
in
pop
test
mov
dec
outs
inc
cmps
mov
aad
xchg
movs
or
ret
or
imul
jae
scas
shr
clc
mov
inc
movs
lea
push
xlat
add
inc
push
das
or
stc
xlat
aam
movs
(bad)
mov
pop
and
push
mov
push
mov
int3
cld
sbb
test
add
or
call
bound
neg
xchg
cmp
dec
mov
out
mov
jnp
lods
mov
push
fsubr
idiv
sbb
out
pop
scas
iret
push
xchg
int
push
movs
aas
push
mov
mov
push
push
fsub
stc
popa
push
mov
lahf
and
(bad)
outs
xchg
or
into
pop
adc
adc
gs
mov
hlt
lods
ja
xchg
test
cdq
mov
push
pop
jmp
inc
cmps
fldenv
xchg
aas
dec
or
imul
jl
inc
dec
lahf
(bad)
cmps
add
mov
xlat
mov
jg
shl
push
mov
or
fisub
aas
adc
adc
or
out
(bad)
cld
out
movs
mov
movs
popa
jo
jne
(bad)
icebp
sbb
dec
cdq
jnp
push
mov
mov
adc
xchg
shl
(bad)
cmp
push
ret
inc
add
fwait
rcl
data16
cmp
pusha
out
mov
mov
cmp
mov
push
cld
and
dec
sub
adc
out
sbb
mov
stc
outs
mov
aaa
push
(bad)
test
mov
(bad)
jmp
idiv
or
sub
call
add
dec
dec
fist
out
pop
cwde
stc
pushf
clc
pop
loope
push
test
pusha
enter
out
lods
inc
dec
outs
cmp
iret
mov
pop
cmp
mov
shl
fiadd
ss
outs
cmp
mov
dec
int
shr
dec
xor
push
stos
addr16
imul
je
or
jne
pop
or
ins
cs
sub
cmp
mov
(bad)
mov
cdq
sbb
mov
sbb
and
mov
xchg
push
je
push
push
jne
stc
loopne
cmp
sahf
(bad)
es
nop
sahf
cmp
adc
dec
mov
add
push
inc
adc
js
outs
mov
mov
clc
arpl
mov
jns
(bad)
mov
(bad)
cmc
rcl
jo
jmp
ror
inc
pusha
fldenv
mov
push
sub
lea
inc
imul
pop
xchg
add
gs
mov
jecxz
mov
push
adc
xor
inc
add
test
sbb
sub
push
stc
pop
lds
(bad)
mov
mov
xor
aas
jne
push
sahf
fisttp
adc
and
jl
and
xor
and
xchg
mov
pop
dec
jle
js
into
cmc
bound
mov
movs
sub
les
in
call
mov
inc
sbb
je
pop
push
cmp
bound
mov
xor
xor
sbb
fisub
cmp
pop
sub
adc
stc
(bad)
fwait
push
mov
push
push
loop
push
dec
xchg
add
pop
adc
cmp
mov
(bad)
and
dec
sbb
fidiv
test
(bad)
and
fsubp
mov
sub
ds
(bad)
mov
retf
cmp
xchg
mov
mov
or
or
lods
adc
mov
cld
sub
sahf
mov
mov
cmc
push
repz
pop
call
popf
jp
mov
dec
lods
ficom
or
xor
fstp
push
mov
push
mov
jmp
and
mov
xchg
pop
adc
sbb
test
or
(bad)
test
inc
add
push
movs
xor
mov
pusha
lahf
sbb
sti
and
xor
popa
repz
push
retf
dec
inc
jg
call
arpl
mov
(bad)
sub
sbb
fistp
add
scas
mov
or
lods
fdivrp
inc
jmp
stos
les
mov
jns
fld
jne
cs
fld
ja
call
les
pop
pop
cmp
push
and
xor
xor
xchg
mov
fabs
xor
jo
fimul
sbb
add
mov
sbb
lock
xchg
or
sti
jmp
push
shl
push
sahf
mov
cmps
cmp
cwde
dec
dec
sbb
sbb
or
les
inc
xor
jnp
jmp
pop
add
ss
adc
scas
pop
or
imul
(bad)
into
loop
push
into
lock
jl
xchg
popa
pop
int3
dec
mov
clc
dec
mov
cdq
sbb
pop
mov
in
fistp
mov
call
aaa
cs
cli
push
sub
jmp
jmp
jge
push
jns
adc
dec
sti
sbb
jae
mov
fiadd
jmp
push
lods
std
repz
lock
mov
xchg
push
hlt
cmp
(bad)
out
stc
(bad)
push
sti
not
xchg
push
jbe
sbb
test
jle
out
movs
int3
dec
in
jae
sbb
iret
ins
repnz
jb
mov
add
mov
pop
je
hlt
xor
(bad)
xlat
(bad)
and
or
xor
jmp
xlat
sbb
pop
mov
fstp
aas
and
mov
daa
or
cmc
ins
movs
mov
pop
lea
or
and
or
mov
and
mov
jp
pop
je
inc
fdiv
cmp
push
fs
stos
lods
mov
pop
cdq
lds
and
call
mov
jp
push
pop
retf
cli
adc
lds
mov
pop
ror
out
mul
push
jbe
test
mov
aam
push
mov
gs
cmc
jb
or
clc
add
fprem
xchg
cmp
jne
and
or
movs
retf
movs
mov
jmp
mov
xchg
in
sbb
jbe
or
inc
cs
xchg
jbe
sub
add
enter
pop
cmc
jge
in
xlat
call
lock
jge
pop
sub
jge
add
jecxz
mov
and
cs
jbe
outs
mov
pop
adc
cmps
fs
pop
in
lahf
jmp
test
int3
adc
xor
add
or
cmp
mov
mov
bound
push
mov
dec
push
jmp
push
test
xor
mov
les
mov
add
jnp
cmps
sub
mov
mov
aaa
xor
int3
imul
jns
xlat
sub
in
and
jg
rol
add
outs
fld
inc
lds
sub
dec
fucomp
pop
add
xchg
mov
adc
cmc
or
cwde
int3
popf
fnstcw
data16
jmp
jo
add
adc
repz
int3
mov
sbb
ret
push
cmp
lock
daa
xor
ret
fs
fdiv
jne
mov
call
sub
aam
icebp
mov
lods
pop
or
outs
fwait
add
in
mov
push
jmp
cs
mov
test
dec
mov
ins
mov
aad
mov
jo
adc
adc
mov
int3
push
mov
(bad)
mov
shl
and
(bad)
cmp
scas
push
iret
cmp
mov
in
aam
xchg
mov
add
div
jne
stos
dec
jp
push
bound
movs
xchg
call
push
ss
push
add
xchg
addr16
pop
cli
cli
stos
push
dec
and
cmc
inc
add
pop
cwde
pop
cmp
add
ins
push
ins
stos
clc
adc
pop
cmp
dec
and
mov
push
retf
shr
stos
imul
rcl
inc
xor
adc
lahf
xchg
pop
ja
mov
shld
mov
mov
jnp
inc
push
cmp
mov
mov
and
lea
inc
and
out
fldenv
cmps
inc
xchg
or
daa
aam
rcl
dec
and
std
sbb
pop
outs
xor
jecxz
rol
inc
mov
push
dec
inc
push
and
int
pop
imul
xchg
inc
xor
cwde
mov
push
xor
adc
jmp
mov
cli
fidivr
out
aad
mov
out
cmp
bound
ss
and
xchg
pop
push
jns
and
push
in
(bad)
inc
(bad)
xor
scas
inc
jle
mov
stos
aad
mov
or
shl
cdq
inc
pop
and
pusha
in
sbb
icebp
int3
or
inc
xchg
fild
shr
popa
mov
fld
and
sub
lds
and
xor
pushw
adc
lods
test
dec
je
xchg
stos
fstp
fbstp
in
add
stos
cld
pop
(bad)
xchg
and
mov
push
xchg
outs
adc
sbb
pop
cmp
fidiv
xchg
(bad)
mov
stos
clc
fidivr
mov
mov
fistp
cmps
mov
inc
mov
push
jns
cmps
sub
dec
aad
arpl
pop
cmp
sbb
push
jp
adc
or
push
jmp
rcr
neg
xor
push
sar
retf
sbb
pcmpgtw
or
push
jnp
popa
rol
push
addr16
in
rcr
cli
cld
mov
out
xor
dec
dec
jecxz
add
jbe
push
mov
fistp
movs
cld
inc
and
pop
shl
shl
adc
maskmovq
fwait
or
dec
xor
lods
int3
pusha
mov
sub
xchg
ds
or
inc
je
scas
psubb
fld
and
adc
cdq
ja
repnz
out
inc
scas
rcr
out
mov
clc
pop
scas
mov
(bad)
jmp
inc
push
xchg
fcomp
idiv
lods
sbb
mov
rcr
out
and
ret
outs
and
(bad)
lds
js
pop
cmp
dec
lods
and
jecxz
sbb
dec
sub
out
shr
cli
in
cmc
push
push
jb
jp
mov
inc
jmp
dec
cmp
pop
cmp
test
ja
dec
stc
or
cmp
dec
ret
inc
test
ss
and
sbb
movs
adc
loopne
inc
dec
mov
pop
inc
out
sbb
xchg
in
fsubr
cdq
or
ficomp
pop
dec
call
dec
fimul
rcl
call
pop
repnz
out
cmp
movs
mov
in
add
cdq
retf
lahf
cmps
sub
ror
or
in
cs
push
mov
ficom
popa
out
mov
and
adc
in
fsubr
leave
push
inc
jns
scas
dec
pushf
(bad)
cmp
repz
in
pop
push
sbb
and
leave
ja
add
popf
mov
pop
mov
and
inc
xchg
xchg
mov
repz
inc
sub
push
pop
or
stos
retf
jmp
push
sub
jo
mov
test
(bad)
adc
sub
fwait
ret
mov
xor
jg
xchg
mov
fild
cld
jmp
nop
adc
pop
mov
push
inc
test
das
pop
cwde
fnstenv
adc
mov
and
mov
aad
out
add
stc
arpl
add
lahf
call
sbb
enter
mov
loop
jmp
xor
fnstsw
loopne
add
xor
xor
into
daa
sbb
scas
cmp
aam
iret
adc
adc
mov
adc
mov
test
aad
es
scas
push
daa
inc
mov
jo
arpl
mov
retf
push
push
adc
fwait
movs
pop
cmp
mov
mov
test
add
fstp
mov
pusha
sub
ins
or
repnz
pop
dec
push
jae
xchg
test
and
jae
ja
imul
fdiv
jne
aaa
xlat
and
movs
inc
and
mov
mov
cmp
fs
test
(bad)
push
rcl
xchg
imul
mov
mov
pushf
pop
adc
ja
mov
and
jnp
sahf
or
push
dec
pop
cs
je
mov
mov
and
push
inc
pop
jecxz
add
into
das
jne
inc
push
je
mov
cmp
pushf
push
je
jge
adc
adc
inc
xchg
mov
stos
cdq
fistp
call
and
pop
jb
pop
jbe
aam
jmp
out
pop
inc
sbb
jg
pop
fcom
mov
repz
fnsave
outs
inc
and
cmc
dec
xchg
fimul
pop
jge
jnp
or
mov
fdiv
(bad)
arpl
jecxz
jl
mov
repz
ror
(bad)
pop
xchg
inc
cmp
push
shl
mov
out
mov
cmps
imul
mov
fs
jecxz
mov
mov
and
imul
inc
mov
jg
and
add
sbb
xchg
cli
imul
sar
xor
ja
add
push
mov
stc
les
adc
loope
mov
mov
out
sub
jb
mov
or
dec
mov
adc
outs
mov
sub
mov
fs
ror
add
pop
jmp
enter
ss
std
jns
jno
mov
mov
lods
je
pop
inc
jb
inc
out
cld
jg
mov
ja
les
jmp
dec
sub
imul
mov
cld
sbb
dec
(bad)
pop
adc
sbb
retf
clc
imul
mov
stc
xor
test
rcr
push
add
into
ftst
loop
mov
inc
inc
jnp
cmc
and
pushf
out
in
cmp
jle
cmp
jmp
aam
jns
inc
(bad)
dec
jae
mov
in
jmp
int
iret
or
rcl
mov
push
jae
div
and
daa
rep
push
xor
(bad)
repnz
sub
daa
fistp
xor
in
leave
(bad)
cli
inc
sub
dec
dec
je
push
std
push
adc
loop
add
data16
fsubrp
shl
arpl
mov
call
shr
or
fs
int
dec
inc
rcr
and
mov
sbb
mov
(bad)
sbb
xchg
pop
mov
dec
aas
jns
fsub
pop
retf
test
sbb
jb
dec
jecxz
mov
lods
cmps
jns
inc
mov
scas
push
mov
lods
inc
mov
jp
in
mov
dec
add
out
cwde
xor
xchg
std
xchg
(bad)
mov
std
sub
xchg
(bad)
cmp
pop
mov
and
fwait
js
repnz
pushf
mov
iret
int
adc
mov
mov
or
ret
lds
mov
push
inc
lods
repnz
adc
gs
inc
pop
ins
or
fld
and
stos
jbe
dec
inc
fsubr
mov
(bad)
jno
sbb
rol
pop
and
lock
mov
arpl
adc
movs
sti
push
jmp
or
jno
jns
les
lods
out
jmp
jle
lods
(bad)
cmp
jmp
shl
cmp
pushf
jl
test
cmp
xchg
ja
movs
mov
mov
loop
jae
push
out
inc
jne
data16
movs
adc
push
cli
aas
or
movs
jo
xchg
pusha
fidiv
sbb
stos
fnsave
js
dec
or
js
pop
or
mov
call
out
das
inc
and
or
sbb
call
pop
ret
inc
out
or
loope
sahf
imul
in
mov
fdiv
inc
dec
aaa
movs
or
repnz
and
cld
or
cdq
je
rcpps
in
fdivr
pop
push
mov
xchg
mov
cwde
and
mov
fcomp
cmps
inc
pop
(bad)
or
mov
sbb
repnz
test
das
sar
add
arpl
idiv
ds
jp
dec
repz
sbb
cmc
cdq
dec
in
out
mov
push
mov
xchg
in
or
add
sub
or
imul
mov
sahf
dec
mov
dec
jno
add
jecxz
mov
lds
add
(bad)
nop
mov
test
out
pop
dec
push
xor
xchg
in
leave
inc
lods
retf
test
cmp
icebp
and
cmp
imul
cmps
cmc
cwde
xchg
dec
sbb
pop
pushf
mul
fld
jno
imul
xor
pop
clc
cwde
and
mov
fwait
and
ret
or
adc
std
gs
movs
dec
mov
mov
mov
call
(bad)
aas
and
sbb
push
repz
or
ds
scas
aam
cld
aaa
shr
push
push
in
push
stos
dec
jecxz
jb
lahf
int
jp
div
pop
clc
mov
jno
jb
or
cli
mov
pop
mov
out
xchg
outs
add
mov
cs
jno
mov
pop
inc
sbb
test
add
lea
test
jb
fnstenv
pop
test
pushf
pop
sbb
push
xchg
mov
fwait
xchg
cmp
outs
js
and
js
xchg
adc
push
and
push
dec
in
mov
mov
imul
jmp
mov
test
xor
out
repz
push
sub
xor
shl
pop
mov
pusha
ins
dec
or
test
sti
mov
fist
pop
(bad)
mov
es
or
clc
pop
call
inc
call
fcomip
scas
or
cdq
int
imul
mov
dec
cmps
pop
sti
in
xchg
dec
outs
sub
ret
ss
jno
mov
adc
mov
nop
pop
mov
mov
data16
jp
dec
nop
and
jle
div
cs
test
dec
pop
mov
dec
cli
push
dec
adc
fs
stos
lods
jb
dec
xchg
outs
stc
push
push
mov
icebp
add
outs
xor
jmp
push
add
xor
sahf
push
ds
jg
movs
jge
(bad)
and
sub
inc
pop
mov
cmp
mov
stos
imul
push
cmp
enter
cmp
push
movs
jno
push
cwde
gs
fwait
jl
stos
mov
int
(bad)
in
ds
cwde
push
repnz
sub
in
xchg
(bad)
mov
scas
mov
icebp
inc
pop
lods
pop
adc
pop
nop
jecxz
mov
mov
jle
es
inc
std
imul
pop
loopne
sub
cmp
cmp
mov
sub
loopne
jb
into
mov
add
aaa
int3
mov
xchg
push
jmp
mov
or
retf
popf
in
sti
movs
test
sbb
push
xchg
push
or
iret
add
jmp
lea
in
sbb
mov
dec
scas
jno
jns
jo
and
shl
and
dec
fs
lods
sti
and
or
loopne
sbb
pop
dec
je
mov
add
jb
sar
adc
xlat
pushf
clc
lea
mov
dec
sub
mov
sbb
jmp
push
ins
lods
cmp
imul
or
mov
(bad)
dec
ror
inc
mov
adc
movs
dec
adc
cld
jbe
addr16
test
or
add
add
cmps
aaa
js
test
cmp
movs
(bad)
cld
loopne
xchg
enter
inc
out
pop
test
xchg
xor
mov
cwde
and
mov
ds
and
pop
sbb
inc
sbb
aam
adc
int
mov
sti
and
call
push
cld
push
pop
cdq
adc
or
aam
adc
in
int3
jmp
jb
fisub
jmp
fbstp
and
jg
mov
rcr
adc
aad
stos
xchg
neg
ret
cdq
(bad)
push
pop
dec
push
les
add
shr
jmp
call
inc
ss
jb
in
xor
sti
jp
pop
cwde
add
inc
cdq
(bad)
push
adc
mov
xchg
jno
mov
jnp
ins
pop
adc
pop
in
mov
dec
iret
aam
leave
dec
je
ret
popf
adc
cmp
push
mov
dec
mul
movs
out
push
xchg
push
adc
or
repz
xor
cmp
icebp
push
inc
mov
sbb
jne
in
push
(bad)
dec
bound
mov
std
jl
inc
(bad)
or
mov
enter
mov
mov
cwde
mul
repnz
mov
jno
out
enter
ret
jl
bound
aad
aaa
mov
jl
scas
scas
xchg
pop
mov
stos
cs
add
mov
xchg
inc
test
inc
cmp
sbb
jle
pop
lods
push
add
iret
mov
dec
nop
and
in
xchg
jmp
add
ja
test
iret
(bad)
mov
div
push
push
lock
xlat
test
and
shr
or
das
jb
data16
sub
out
rcl
jne
icebp
in
cdq
aas
push
pop
fldenv
jnp
bound
js
push
outs
cmp
or
mov
inc
mov
jle
ror
inc
mov
js
jmp
test
enter
fstp
jg
xchg
shr
cmp
jnp
pop
popa
cld
dec
mov
ret
pop
repnz
jns
es
rcr
ds
int
and
push
stos
pop
inc
push
and
das
hlt
mov
js
fs
xchg
push
icebp
or
fninit
xchg
je
idiv
in
push
jnp
popf
ret
outs
int3
inc
inc
ss
xchg
mov
bound
clc
fist
mov
loop
xchg
jmp
xor
push
cmps
cmc
out
add
in
scas
jns
dec
adc
push
nop
inc
pop
xchg
add
push
pop
pusha
xchg
cmp
loopne
lods
shl
cmp
and
lds
aas
popf
ja
loop
or
lods
in
pop
lock
nop
sbb
cmp
pop
sti
sub
sti
mov
xchg
jp
mov
loope
dec
dec
mov
popf
sbb
fdiv
cmp
push
dec
mov
lods
ins
mov
call
ret
out
mov
push
xchg
or
sbb
and
sar
add
ret
in
cwde
ins
int
aas
inc
dec
xchg
add
add
mov
mov
mov
cwde
data16
sbb
movs
sbb
mov
pop
ins
jle
repnz
dec
enter
ins
fsub
stos
sti
xlat
mov
arpl
mov
ret
jae
jl
xor
sbb
repz
dec
out
sbb
out
cmps
into
gs
in
(bad)
js
sub
jb
inc
pop
mov
out
mov
adc
in
sub
jo
loopne
stos
dec
inc
mov
sbb
xor
and
js
imul
retf
sub
fsub
push
stos
sbb
xchg
push
js
inc
and
pop
shl
lods
call
aam
(bad)
out
or
inc
outs
push
icebp
repnz
out
je
aas
add
dec
add
out
xor
dec
in
pop
lock
push
fxch
mov
aam
gs
rcr
xlat
add
xchg
push
adc
mov
ret
push
cmp
pop
out
out
xchg
int3
popf
mov
imul
adc
jp
fld
lds
inc
inc
adc
and
outs
(bad)
int
cdq
repz
in
xchg
jo
dec
sti
lds
jns
rol
arpl
mov
and
call
add
fsub
std
pushf
repz
out
inc
and
cmp
cmps
dec
mov
arpl
(bad)
repnz
ss
mov
push
xchg
push
mov
dec
bound
jne
mov
jne
mov
imul
mov
mov
jbe
cs
lds
pop
add
xor
test
or
inc
(bad)
pop
je
retf
jge
imul
test
inc
psubsb
icebp
add
mov
jecxz
ror
or
add
inc
ror
adc
shl
inc
mov
mov
movups
xchg
fcomi
imul
xchg
adc
and
mov
lahf
rcl
call
cmp
dec
push
push
out
into
sub
dec
and
sub
adc
xchg
mov
dec
aas
fsubr
push
inc
jmp
cmp
jae
dec
popa
cwde
mov
jb
add
arpl
test
pop
sbb
outs
add
dec
outs
out
push
mov
pop
cmp
outs
(bad)
jo
cdq
je
xor
mov
popa
lea
jb
add
imul
ret
dec
mov
sub
and
sub
inc
imul
popf
call
test
sar
adc
das
adc
add
pop
(bad)
nop
inc
jmp
(bad)
push
inc
mov
pop
clc
rcl
cmps
cwde
jns
stc
xchg
and
js
test
nop
sbb
cmp
add
mov
sub
xchg
pop
imul
cmps
in
mov
shl
sbb
adc
test
icebp
fwait
xchg
stc
ds
ret
lahf
jb
push
push
mov
xchg
xor
int
push
jp
lods
sbb
call
dec
add
push
pop
mov
ja
pop
call
addr16
adc
das
out
into
push
cs
les
(bad)
xor
clc
jmp
clc
(bad)
dec
or
dec
cmp
ja
add
xor
jg
mov
mov
out
cmp
repnz
retf
jmp
cmp
pop
sbb
test
aas
jge
sub
add
ins
or
fst
dec
popf
(bad)
fcmovnbe
and
outs
mov
xchg
addr16
neg
mov
adc
loopne
push
nop
(bad)
daa
dec
xor
add
add
sub
retf
jbe
or
inc
cmps
pop
arpl
sub
mov
cmp
mov
inc
cmp
xchg
or
push
arpl
pop
(bad)
xchg
sub
int3
icebp
and
clc
lock
sub
sbb
aad
out
sar
jnp
rcl
pop
jp
mov
mov
or
sub
loop
jmp
retf
mov
mov
mov
(bad)
jp
(bad)
push
push
mov
jmp
mov
or
mov
dec
ret
push
or
pop
(bad)
inc
jne
or
xchg
pop
mov
mov
leave
mov
pusha
mov
sahf
sahf
gs
cmps
iret
fmul
and
(bad)
push
xchg
sub
mov
xchg
jbe
movs
and
adc
sub
int3
dec
out
mov
add
pop
movs
mov
dec
daa
rcr
mov
pop
outs
adc
jg
push
mov
data16
stc
std
(bad)
push
xlat
sbb
ret
stc
inc
fwait
push
and
cmp
cmps
sahf
sub
loop
stos
std
out
and
jmp
xor
push
cmps
out
sub
xchg
fnsave
push
mov
cdq
jno
and
sbb
mov
or
pop
or
xor
(bad)
mov
cmp
xchg
adc
ds
into
cmps
ret
xchg
je
fldenv
das
mov
ja
movs
je
jmp
inc
js
and
fs
pop
dec
arpl
cli
aas
xchg
jnp
xchg
rcr
push
adc
push
daa
lods
or
push
add
cwde
loope
lahf
bound
pop
jecxz
or
jno
mov
and
push
mov
call
and
cli
pusha
pop
mov
jl
jg
inc
add
add
mov
loope
pop
dec
mov
dec
cdq
sbb
rcl
in
add
dec
or
mov
outs
sub
mov
cld
cld
sub
jmp
inc
cmp
loope
mov
or
test
xchg
mov
jbe
or
sub
dec
mov
add
stc
cmps
lds
ficom
mov
fucom
scas
stc
call
sbb
jno
add
rcr
dec
aam
imul
ror
(bad)
xlat
popa
inc
clc
sub
les
xchg
(bad)
push
out
adc
in
out
push
pmulhw
int3
ja
pop
fsubp
push
fsub
jmp
pop
xor
or
sti
and
rol
dec
fldcw
ja
fwait
inc
dec
les
ja
lds
frstor
les
dec
jp
add
add
sbb
mov
mov
mov
mov
push
rcr
mov
jecxz
jnp
cld
lock
pop
add
xor
sbb
into
pushf
neg
repz
dec
out
fwait
cmp
ret
ins
shl
cmp
cmp
pop
outs
(bad)
and
dec
fldcw
cmp
and
lock
or
sbb
mov
mov
jns
call
add
jg
lock
cmps
pop
sbb
icebp
push
scas
xor
in
push
sbb
les
mov
fstp
ret
out
sbb
add
xor
aaa
in
add
pop
lds
inc
xor
pop
clc
pop
sti
test
fst
add
mov
mov
mov
add
outs
push
cwde
rol
cwde
sar
scas
add
push
(bad)
mov
cld
clc
mov
jp
cs
adc
inc
imul
retf
mov
ds
mov
cmp
mov
push
add
aas
mov
in
retf
and
mov
fs
test
clc
pop
xchg
cdq
pusha
xchg
inc
leave
mov
sub
cwde
mov
lods
popa
inc
call
sbb
inc
cmp
mov
call
add
mov
mov
xor
addr16
repz
mov
imul
lods
cwde
inc
pop
dec
sub
adc
retf
movs
ficomp
dec
jns
sbb
rol
nop
lds
add
adc
xor
div
leave
pop
or
jno
nop
enter
pop
sbb
jmp
popa
in
dec
mov
push
sub
sub
(bad)
and
mov
in
push
or
push
retf
xchg
lods
adc
repz
pop
xor
test
mov
fistp
mov
inc
or
jge
push
ins
mov
inc
sub
std
in
stc
ins
iret
(bad)
test
(bad)
stos
mov
add
jbe
pop
stos
pop
push
loopne
andps
imul
sbb
jbe
dec
mov
and
adc
jge
mov
push
pop
xchg
and
xor
(bad)
jb
(bad)
mov
inc
outs
mov
stos
inc
(bad)
cmp
test
push
sti
lods
pop
lock
test
jl
mov
retf
jno
cli
inc
aas
cmc
pop
dec
adc
fsub
out
ja
daa
cli
jmp
pop
scas
and
aas
pop
pop
add
in
pop
jp
clc
and
test
inc
cmps
(bad)
jle
arpl
and
dec
cmp
and
loop
mov
loop
ficom
mov
mov
mov
mov
push
sar
(bad)
sbb
mov
outs
jmp
popa
adc
ss
cwde
mov
ja
lea
or
das
xchg
shl
ffree
jns
cmp
or
int3
enter
or
cli
dec
cmps
jns
fsubr
movs
xor
add
cld
push
loop
jg
xchg
dec
clc
test
mov
pop
fs
add
mov
jmp
retf
loopne
arpl
pop
je
call
jns
fwait
imul
or
jmp
mov
in
lahf
push
stos
add
push
in
mov
cld
cmps
cli
in
sbb
cli
and
fdivr
sbb
shl
scas
fcom
test
es
xchg
push
scas
adc
nop
repz
repz
out
(bad)
or
inc
push
adc
out
inc
inc
pop
jns
pop
jmp
jge
test
and
add
icebp
sbb
es
repnz
adc
xchg
scas
rcr
jno
(bad)
ss
pop
pop
jmp
or
inc
push
and
xchg
repz
mov
jecxz
add
mov
jp
mov
cwde
loopne
push
cmp
push
dec
out
(bad)
mov
out
scas
dec
xchg
loope
pusha
sti
jmp
div
jmp
jecxz
cmp
add
xor
sahf
cmps
cs
inc
loopne
ret
sub
je
js
enter
movs
cmps
mov
pop
fcom
in
mov
dec
jmp
shl
ror
mov
xchg
xchg
std
push
mov
scas
sti
pop
mov
shl
mov
adc
xchg
dec
aam
repnz
neg
adc
mov
xchg
out
mov
pop
sahf
pop
xlat
shl
ret
icebp
sbb
icebp
xchg
es
fdivr
scas
xchg
mov
mov
idiv
jb
loope
sub
imul
fimul
adc
and
stc
daa
imul
ds
int
mov
inc
fdivr
ins
lock
psllw
pop
sub
movs
add
mov
sahf
movs
push
std
or
push
test
xchg
ds
cmp
sub
sahf
mov
rcr
pop
mov
std
add
in
sbb
lea
mov
xchg
(bad)
stc
aam
sbb
jmp
int
test
movs
stc
in
cmp
push
(bad)
xchg
out
mov
loope
scas
mov
sub
pop
sbb
add
cwde
mov
mov
jns
imul
jae
retf
(bad)
stc
or
adc
jmp
hlt
stc
sti
iret
dec
sbb
out
inc
and
sbb
xor
clc
aaa
jmp
loope
fs
mov
inc
pop
add
xlat
arpl
push
ret
and
into
mov
shr
sub
dec
sti
lahf
cwde
icebp
imul
ins
dec
xor
fistp
test
icebp
inc
xchg
pop
pop
mov
xchg
in
inc
daa
pop
repnz
pop
lahf
sbb
inc
mov
retf
adc
nop
imul
push
push
out
sbb
jo
mov
jb
jnp
xor
cmp
test
pop
fs
dec
daa
(bad)
push
ins
push
ret
aad
popa
adc
push
add
call
jp
lods
push
push
sti
push
adc
mov
pop
jle
inc
push
(bad)
sbb
pushf
sub
fcom
mov
sub
imul
inc
mov
mov
clc
or
jmp
mov
repz
jp
sbb
out
ret
addr16
arpl
cmps
or
cmp
loopne
mov
pop
outs
lock
fadd
mov
push
sub
cmp
dec
xor
or
pop
mov
sbb
mov
mov
push
in
add
add
adc
stos
test
add
int
fisttp
imul
inc
ficom
mov
cs
pop
inc
mov
xor
adc
ins
push
push
aad
pop
xor
stos
push
xchg
cwde
retf
sub
retf
(bad)
(bad)
mov
jns
dec
test
mov
push
sub
pop
jmp
push
enter
loop
mov
jmp
mov
dec
cmp
sub
fmul
add
jg
test
into
outs
xor
arpl
mov
js
sbb
mov
in
sub
lods
dec
and
sub
fsub
inc
cli
add
mov
jp
xor
dec
inc
scas
es
adc
imul
fnstsw
call
ror
mov
imul
pusha
push
mov
push
clc
sbb
(bad)
scas
jecxz
outs
add
mov
dec
mov
adc
ins
inc
or
test
adc
xor
and
mov
mov
mov
mov
jbe
arpl
push
sar
xor
outs
mov
xor
mov
ins
mov
inc
shl
ja
sbb
inc
loop
sahf
xor
push
push
outs
loope
aaa
repnz
xor
mov
cmp
aaa
pop
jo
xor
and
ss
mov
xor
and
xor
cmp
out
aas
xor
sbb
add
inc
or
aaa
ret
jb
mov
mov
fnstcw
mov
popf
push
cmc
test
(bad)
dec
outs
inc
gs
push
add
and
in
and
out
data16
fiadd
inc
adc
xchg
and
ficom
inc
or
(bad)
pop
push
xor
push
adc
inc
cld
inc
scas
scas
and
pop
ja
mov
test
addr16
mov
hlt
in
dec
inc
rcr
nop
mov
jmp
mov
mov
and
in
jno
popf
and
mov
div
rol
mov
rol
mov
test
lods
push
mov
cmps
mov
xor
mov
xchg
bound
pop
xchg
(bad)
outs
adc
pop
jmp
pop
sub
or
jp
mov
lea
repz
adc
pop
lahf
mov
in
dec
jp
out
cmp
push
sub
push
icebp
push
push
lock
mov
imul
repz
loop
shr
dec
lock
cmps
cmp
sbb
adc
jno
dec
mov
jo
js
sahf
push
fild
add
cwde
cli
out
mov
cmp
dec
je
mov
outs
mov
pop
aad
mov
mov
cli
fild
ja
sbb
arpl
adc
pop
and
(bad)
test
hlt
repz
loopne
retf
ins
jmp
ds
cmc
cdq
sbb
shr
popf
or
sub
ret
hlt
pushf
inc
loope
push
sbb
jecxz
(bad)
or
repnz
pop
int3
ins
pop
cmc
shl
jg
shl
popa
push
cmc
cwde
mov
sbb
jmp
cmp
loope
add
jno
out
xor
xchg
dec
pop
inc
ins
adc
xchg
mov
lea
cmp
std
hlt
sub
jnp
and
out
sbb
inc
hlt
das
test
aaa
scas
mov
xor
and
je
pop
lds
cdq
or
and
xor
dec
mov
call
xchg
jmp
out
iret
sub
loop
add
ds
jecxz
push
idiv
nop
push
or
jne
cs
popf
pop
call
cmp
dec
popf
std
xchg
outs
out
adc
scas
pop
mov
sar
iret
mov
push
xor
outs
lods
lock
bound
dec
mov
cwde
push
push
daa
iret
lds
xchg
in
call
add
ret
ror
xlat
je
xlat
out
icebp
add
and
pop
xlat
jae
pop
in
stos
int
or
leave
adc
jp
push
xchg
daa
test
mov
in
and
imul
xor
lods
jmp
leave
(bad)
inc
mov
pop
lds
or
test
push
push
mul
jmp
js
cmps
pusha
imul
add
or
and
push
fs
icebp
pusha
jmp
rcr
or
sti
movs
fsubr
sub
mov
cs
pusha
(bad)
imul
pop
jl
lock
fdivrp
loope
pop
inc
mov
pop
repz
mov
test
xchg
lods
clc
movs
xchg
xchg
dec
faddp
mov
sbb
inc
scas
cdq
dec
mov
addr16
je
inc
jo
fild
ins
es
sbb
les
popf
(bad)
sbb
out
into
or
pop
push
fiadd
pop
sti
ret
cmp
cmp
xor
(bad)
push
repnz
cmps
jl
scas
je
ret
test
adc
fst
dec
xor
adc
sub
jo
xor
xlat
(bad)
inc
es
mov
fsubr
test
jae
cmp
ret
inc
inc
outs
ret
shl
test
(bad)
jns
lock
dec
mov
xlat
clc
push
xor
scas
sar
shr
call
jae
dec
aad
jmp
or
dec
mov
sbb
sub
aaa
mov
test
dec
pop
sbb
and
fwait
das
add
jmp
dec
cwde
xor
jecxz
and
lods
enter
pop
push
aam
sbb
cwde
push
imul
cmps
int
outs
popa
ja
cdq
add
lahf
loope
pop
sub
jne
inc
aas
inc
inc
cld
bnd
and
fwait
dec
mov
imul
lds
imul
add
sbb
adc
pop
nop
pop
sbb
pop
xor
lock
mov
xor
andnps
loop
adc
xor
es
je
sbb
js
xchg
aad
lds
ins
cdq
inc
jne
scas
test
out
push
cli
pop
(bad)
fsubr
(bad)
pop
and
sbb
xor
push
mov
sub
dec
dec
cld
xor
pop
sar
xchg
xchg
pop
inc
pop
movs
cmp
mov
add
cmp
pop
jo
jl
loope
ror
sbb
pop
sti
adc
xor
sahf
mov
cwde
ins
retf
mov
pop
inc
xchg
sbb
sahf
dec
push
das
mov
sbb
lods
push
push
jp
mov
pop
jb
mov
lock
and
jbe
push
jne
outs
jg
cmp
fdivr
inc
out
or
push
pop
(bad)
cmc
in
pop
repz
cmp
mov
call
mov
mov
adc
inc
fbstp
push
ret
fdivr
jle
fisubr
shr
into
adc
pusha
aas
fistp
mov
test
ror
sbb
push
dec
mov
inc
sub
and
loope
imul
loop
fs
dec
cmc
jbe
or
rcl
xor
jo
arpl
sub
cli
in
dec
xchg
clc
push
test
dec
(bad)
and
rcl
pmulhuw
sbb
cs
addr16
sbb
push
push
mov
push
cmp
sub
les
cmp
outs
mov
pop
push
sub
xchg
inc
mov
mov
shr
aaa
lds
cmp
pusha
jge
push
jne
dec
cmc
ret
hlt
cmp
retf
int
inc
cdq
inc
dec
jecxz
lock
ins
les
aad
xchg
vandps
mov
pop
cli
dec
std
mov
rcl
sub
mov
(bad)
mov
fdiv
iret
call
or
pop
int
sub
inc
add
aam
sub
dec
and
(bad)
lahf
mov
mov
xchg
jge
shufps
pop
push
(bad)
adc
mov
inc
mov
xchg
or
mov
dec
push
push
pusha
into
(bad)
adc
dec
lds
in
xor
call
fbstp
std
pop
jae
jle
mov
bound
mov
fisub
mov
pop
ror
dec
test
and
fdiv
lods
xchg
mov
out
hlt
outs
out
je
push
fdivr
dec
rcr
inc
or
sub
jbe
or
mov
pop
in
pop
rcl
movs
gs
(bad)
adc
out
add
popa
(bad)
adc
dec
xchg
int
popf
push
ret
test
xcrypt-ofb
cmps
in
push
dec
jmp
push
push
outs
jmp
sub
lods
or
mov
bnd
imul
pop
imul
clc
dec
adc
outs
bound
mov
cwde
sub
mov
loop
repnz
push
in
outs
in
(bad)
pop
push
fwait
test
stc
shl
push
xor
mov
mov
imul
xchg
lea
xor
cmps
shl
shr
lds
pop
addr16
xchg
ret
xchg
push
mov
sar
sbb
mov
mov
push
mov
dec
xchg
scas
inc
adc
int3
ficomp
push
inc
mov
xor
inc
fidiv
cmp
test
xchg
loopne
and
xchg
test
mov
lods
or
int3
ror
add
mov
xchg
jl
scas
ret
out
loope
push
cmps
dec
mov
xbegin
mov
sti
dec
xlat
xchg
mov
and
das
das
xchg
mov
clc
or
jmp
std
lods
mov
stos
movs
inc
jl
ficomp
lahf
inc
dec
xchg
out
dec
enter
je
mov
and
sar
fild
imul
bound
push
addr16
mov
xchg
mov
jmp
lods
mov
aad
into
popf
add
xor
push
and
xchg
jmp
push
out
gs
jge
stc
ret
sub
adc
xchg
and
fucomi
sbb
inc
dec
pop
pop
fcomp
inc
xchg
and
push
or
mov
sub
ss
cmp
cmovns
mov
pop
push
xchg
cmps
loopne
lea
hlt
push
rol
inc
ror
jmp
xor
out
imul
not
int
bound
pushf
cmp
dec
je
or
jae
dec
xchg
sub
out
idiv
and
in
dec
imul
xchg
sub
lods
mov
and
es
xor
rep
xor
stos
neg
cld
daa
mov
push
pop
test
stos
jmp
jnp
ds
loope
push
inc
call
pusha
ins
add
cmp
inc
sar
jae
adc
and
stos
lods
mov
sbb
les
out
inc
jo
add
dec
test
loop
inc
out
ins
and
loopne
lods
out
stos
(bad)
cmp
es
push
ret
push
sbb
lds
push
add
cmp
xchg
or
nop
xor
dec
mov
test
add
shr
(bad)
push
ret
xchg
sahf
addr16
xchg
fist
dec
jecxz
xchg
cmp
mov
inc
mov
scas
adc
fldenv
add
push
pop
xor
sub
pop
not
ins
(bad)
pop
sahf
fwait
and
retf
pusha
(bad)
lods
das
mov
mov
mov
dec
mov
addr16
lock
es
mov
adc
sbb
xchg
cmp
pop
idiv
clc
sahf
inc
stc
ja
repz
add
fidivr
jbe
push
aam
pop
movs
xor
push
enter
adc
mov
xlat
mov
jl
pop
cmp
shl
xchg
xor
mov
out
push
scas
aaa
call
xchg
or
shr
add
add
jle
cli
cmp
dec
ins
leave
push
loopne
inc
bound
cld
test
mov
imul
les
cmp
inc
adc
dec
xor
adc
ds
loop
adc
cmc
xor
push
mov
vpcomltuq
mov
push
cmp
adc
adc
aam
sub
jecxz
inc
jo
fdivr
xchg
cmp
pusha
jno
fs
aad
icebp
xchg
and
mov
sub
sub
sbb
jo
das
(bad)
mov
mov
jl
jmp
sub
sti
repz
call
adc
add
loop
cmp
mov
clc
aam
and
hlt
ret
mov
push
repz
xchg
dec
add
lss
mov
xchg
sar
fld
mov
push
adc
sbb
jge
jg
push
add
out
mov
inc
call
call
inc
push
fldpi
xchg
push
lock
aam
fst
push
mov
aas
xchg
and
jo
xchg
call
xor
add
bts
xlat
inc
(bad)
pop
xor
mov
push
push
stc
cdq
jl
xor
aaa
jmp
addr16
push
cli
or
in
pop
add
xor
pop
add
fmul
jmp
ss
push
xor
cmp
js
rcl
pop
arpl
cmp
xchg
fisubr
pop
mov
mov
cli
sbb
push
push
lock
loope
aad
push
jns
or
inc
mov
(bad)
call
scas
push
stos
xchg
mov
adc
adc
sbb
push
psubb
pop
inc
sahf
jle
sub
inc
ds
retf
push
xadd
xlat
pop
and
dec
xor
mov
jne
adc
aam
dec
cmp
lea
imul
arpl
test
cli
add
scas
sbb
inc
add
ds
call
(bad)
mov
push
mov
or
push
lods
push
scas
arpl
stos
sahf
sahf
add
mov
push
pop
cs
mov
in
or
gs
push
lods
xor
sub
int3
pop
pop
data16
std
xchg
std
sub
aaa
inc
mov
sbb
jo
push
sbb
mov
fidivr
add
jne
mov
dec
mov
jns
mov
fs
cld
sbb
pop
xchg
je
dec
mov
adc
rol
les
ds
pop
add
jmp
push
(bad)
in
cld
scas
stos
(bad)
repnz
inc
std
jnp
out
mov
xchg
jge
inc
xlat
add
xor
out
adc
sub
push
repz
add
xor
pusha
or
xor
lock
arpl
addr16
aaa
(bad)
fisubr
push
jbe
imul
rol
lock
bound
mov
mov
dec
call
mov
aam
aad
out
pop
sub
sbb
add
test
outs
in
addr16
aaa
and
jmp
xor
adc
test
ins
(bad)
mov
xor
in
aam
inc
loop
push
cdq
inc
xor
cmps
mov
mov
inc
adc
int3
adc
or
sahf
test
rcl
outs
inc
add
stc
das
out
pushf
and
gs
jb
mov
les
lock
call
and
sbb
cmps
xor
mov
pop
jmp
adc
punpcklwd
or
mov
cli
pop
leave
mov
sbb
pushf
adc
jno
lock
cmp
shl
scas
jmp
out
xchg
xchg
add
push
cs
(bad)
xor
pop
sub
mov
out
loop
lods
cmp
stos
adc
xlat
mov
retf
fdivr
mov
mov
xor
imul
pop
pushf
aam
mov
push
dec
pop
jge
cmp
xor
mov
or
xchg
mov
(bad)
int
aam
dec
nop
data16
adc
add
loop
leave
test
outs
lods
aam
jnp
pop
fild
or
sbb
inc
push
fabs
fcmovne
inc
andnps
push
loopne
ins
out
call
push
and
dec
repz
pop
aad
fidivr
xchg
sbb
mov
sbb
inc
mov
push
inc
les
fs
mov
stos
push
fwait
stc
xchg
pop
outs
sub
jne
xor
push
sub
retf
imul
out
sar
lea
push
ror
cdq
(bad)
cmps
fsub
or
jbe
jns
xchg
add
ss
pusha
sub
add
mov
and
xchg
loopne
test
adc
mov
repz
add
inc
call
mov
popf
das
jge
sub
sub
fsub
nop
or
je
sahf
dec
dec
inc
jbe
clc
push
into
mov
mov
cmps
dec
inc
jmp
mov
inc
imul
fcomp
mov
mov
push
out
sbb
mov
and
fldenv
arpl
das
or
loopne
mov
ins
xor
es
adc
or
xchg
dec
sub
jae
xchg
mov
fld
aas
inc
repz
lea
imul
or
cmp
jae
and
test
sti
mov
enter
mov
hlt
ja
icebp
mov
(bad)
repz
mov
ret
or
(bad)
inc
push
xor
call
dec
and
pop
sbb
hlt
or
fbld
cs
hlt
dec
jl
fsub
loopne
out
jge
push
int3
mov
pop
int
(bad)
aad
mov
add
jg
std
xchg
jge
ins
sub
jge
push
push
cdq
push
int
xchg
test
hlt
movs
lock
shl
inc
int
push
fwait
mov
nop
xor
inc
cmp
push
fcmovu
push
(bad)
adc
stos
sub
ins
test
pop
arpl
add
adc
mov
repnz
sbb
imul
fsubr
popf
dec
jecxz
inc
mov
xor
lock
fld
enter
inc
mov
mov
dec
mov
jae
mov
cmp
std
loopne
mov
loopne
lea
adc
mov
retf
in
into
xchg
or
call
xchg
ja
nop
sbb
call
(bad)
dec
int
cmc
imul
mov
mul
shl
and
jbe
adc
rcr
mov
sar
inc
xchg
sti
or
xor
jle
fisub
push
mov
mov
cmps
mov
mov
mov
out
pop
imul
iret
into
jo
mov
jle
sti
dec
cmp
cli
mov
fucomi
cmp
loope
int
adc
imul
loop
and
clc
jbe
pop
inc
jo
mov
ficomp
xor
jns
mov
das
pop
sbb
sbb
ins
test
mov
(bad)
inc
cmp
jmp
cmp
jb
add
xor
pop
cmp
and
imul
shr
add
(bad)
dec
mov
mov
pop
jo
mov
add
inc
out
jge
pop
jg
repnz
and
out
outs
ds
or
jae
xchg
sub
mov
adc
sbb
lock
or
sbb
popa
sti
mov
lods
pop
das
mov
mov
test
shld
push
cmp
adc
sub
xchg
dec
push
pop
mov
add
outs
mov
aad
pop
add
xor
sbb
mov
sub
jl
push
popf
in
in
jg
dec
push
scas
retf
pop
movs
or
inc
mov
push
jns
and
in
mov
push
in
aam
jns
mov
mov
dec
stos
mov
cmc
xlat
or
pop
ret
lds
push
in
sbb
popa
call
add
leave
into
repnz
xchg
cmp
in
dec
call
pushf
sahf
lea
push
push
xor
mov
mov
cwde
or
fld
or
push
and
icebp
test
out
cmps
aaa
int3
call
xor
scas
jecxz
aaa
and
mov
imul
lods
xchg
(bad)
mov
mov
mov
sub
(bad)
fwait
dec
out
sti
and
adc
lds
add
inc
inc
gs
shl
popa
retf
fdivr
loop
lods
jg
sbb
mov
aam
ins
pop
dec
shl
aam
jae
xchg
push
push
sar
mov
add
add
xchg
push
mov
ret
pop
aas
xchg
(bad)
pop
mov
in
or
stc
mov
sub
or
mov
stos
jne
jmp
push
or
pop
out
ror
sahf
imul
pop
scas
test
push
xchg
sbb
loop
push
(bad)
into
push
fwait
sbb
dec
mov
pop
popa
add
jmp
jmp
jae
push
imul
loopne
cmps
push
out
es
xlat
shl
dec
push
jnp
jg
or
(bad)
xlat
popf
popf
ror
or
(bad)
fisub
adc
sub
push
cmp
movs
clc
(bad)
es
in
(bad)
aaa
xor
pop
mov
dec
cs
add
adc
repnz
bt
fsub
push
pop
adc
ds
jge
aad
mov
cmp
and
out
push
pushf
ret
inc
cli
mov
xor
pushf
push
test
xor
dec
xchg
(bad)
xchg
push
rol
aad
cmps
push
ins
sbb
fs
pop
ss
mov
jmp
xlat
adc
icebp
push
daa
out
lahf
push
mov
cmc
cmp
gs
std
and
mul
cmp
stos
cwde
(bad)
das
mov
pop
pop
adc
mov
das
sbb
jmp
mov
mov
xchg
scas
lods
inc
mov
fs
fdivr
push
adc
fstp
test
sbb
sti
push
and
mov
das
repz
lea
out
mov
cwde
push
stos
es
jns
data16
dec
(bad)
(bad)
(bad)
mov
pop
mov
vmread
es
into
std
xor
jge
ret
mov
loope
jae
neg
cmc
add
hlt
shr
mov
outs
stc
dec
and
xor
cwde
jg
or
lock
xor
fsub
sti
xor
cmps
leave
out
and
hlt
icebp
or
jecxz
inc
pop
addr16
adc
sbb
and
(bad)
pop
push
fisubr
sbb
out
push
ins
cmp
pop
out
pop
jo
daa
hlt
int
add
pop
pop
outs
dec
xor
cli
or
test
jmp
lock
inc
sub
mov
fst
cmp
call
sub
jnp
mov
pop
and
mov
test
movs
sbb
push
call
sbb
sub
idiv
mov
cmps
lds
inc
ins
and
gs
loope
jecxz
sub
test
in
push
fwait
repnz
inc
in
cli
ins
push
mov
push
cli
add
cmp
fiadd
mov
and
add
(bad)
cmp
sbb
es
cmp
or
jae
cmps
mov
and
mov
or
(bad)
mov
out
jnp
sbb
arpl
mov
nop
shl
push
adc
(bad)
push
xchg
jmp
mov
rol
ja
cmps
popf
fnstsw
scas
ins
push
push
or
shl
push
jbe
aas
jmp
retf
sbb
outs
jp
iret
and
iret
mov
sar
push
mov
ret
cmp
jle
popf
loope
xor
sti
mov
cdq
cmp
or
and
outs
sar
stc
adc
or
mov
fimul
and
mov
out
sbb
cmp
cmp
mov
retf
(bad)
shl
(bad)
adc
dec
push
cmp
test
lea
adc
lahf
xchg
or
push
adc
lds
into
daa
dec
add
(bad)
mov
inc
or
xor
(bad)
jne
dec
xchg
and
jne
daa
bound
inc
fnsave
and
push
movs
jo
push
cmps
sub
cmp
sbb
retf
mov
int3
pop
fstp
xchg
pop
push
dec
jge
push
sub
or
mov
dec
cmp
dec
psubd
mov
ss
fcomp
and
not
sub
ret
loope
xor
pop
in
pop
in
sahf
xor
sub
mov
ds
call
pusha
add
mov
jmp
in
mov
not
pop
data16
scas
cmp
jmp
scas
test
jg
je
jge
cmps
in
rcl
fiadd
je
jecxz
leave
les
hlt
pusha
(bad)
pusha
rcr
test
dec
xlat
and
lahf
add
mov
shr
pop
aas
stc
fwait
call
push
add
(bad)
mov
inc
xchg
cmc
xchg
sbb
repz
les
adc
cs
imul
jns
fmul
add
addr16
lahf
cmp
cmp
dec
icebp
pop
xchg
out
or
(bad)
stc
aas
cs
ja
arpl
mov
mov
jmp
stos
push
mov
jl
mov
mov
fstp
pop
jg
fcmovbe
xchg
inc
inc
add
fstp
pushf
or
push
sub
xchg
mov
ds
gs
bound
dec
lds
add
arpl
ret
repz
mov
xchg
jecxz
cmps
outs
adc
sub
in
cmps
xor
sti
add
push
and
cld
clc
imul
jmp
cmp
icebp
jne
shl
push
popa
push
lock
jl
push
lock
add
cwde
dec
jae
sti
je
xor
rol
mov
out
dec
pop
mov
sub
add
and
sbb
movs
pop
push
into
jb
shr
pop
mov
aas
dec
and
inc
dec
cmp
lea
mov
scas
sbb
add
xchg
or
loopne
loope
iret
mov
xchg
cli
add
and
movs
fadd
das
lds
neg
mov
js
fsubr
test
call
clc
mov
and
rcl
sbb
stos
test
repz
shl
jo
add
repz
lock
stos
lea
sbb
pusha
adc
ret
lahf
sub
test
fsub
mov
xchg
cs
xor
xchg
add
mov
mov
int3
in
or
pop
mov
adc
push
cli
push
dec
cmp
jmp
pop
fdivr
stc
cmp
aam
mov
dec
pop
popa
aaa
or
sub
repz
push
jo
das
inc
xchg
clc
mov
adc
movs
xchg
lds
dec
xor
sbb
rep
and
or
add
js
aad
ins
fistp
cmp
add
nop
lds
loopne
mov
dec
repz
mov
fs
mov
inc
jle
fsubr
add
pop
push
int3
cmp
xlat
sub
dec
adc
xchg
push
adc
popf
fsub
(bad)
cld
jne
jge
mov
xchg
sahf
(bad)
repz
jge
outs
or
cdq
mul
ficom
adc
push
cmp
imul
sub
and
dec
jle
jp
sbb
cmp
pop
lea
xchg
xor
ins
push
retf
rcl
or
mov
or
push
mov
jo
cwde
sub
in
or
(bad)
int3
jl
adc
je
scas
jns
popa
sbb
dec
mov
repz
push
sti
adc
or
or
mov
pushw
inc
call
xchg
adc
ja
sub
cmp
cmp
pop
ja
lods
add
mov
fcmovnb
mov
mov
js
and
mov
imul
pop
push
(bad)
xchg
or
jecxz
push
mov
retf
mov
popa
dec
ret
mov
fcomi
xchg
aaa
popf
and
jl
xor
pop
xor
and
into
push
mov
jo
ja
jge
mov
aaa
pop
mov
test
push
arpl
ret
pop
adc
mov
cmp
mov
dec
jno
mov
fmul
add
mov
scas
mov
push
push
jecxz
and
push
mov
jno
add
pop
sar
or
mov
and
push
jno
adc
test
or
enter
cmc
sahf
xchg
pop
mov
stos
push
mov
jecxz
movs
mov
adc
jecxz
inc
inc
jl
xlat
adc
in
(bad)
clc
adc
leave
xchg
push
xor
lahf
cmps
lahf
mov
dec
pop
xchg
aam
fwait
idiv
mov
jle
rcr
cmc
rol
pop
xchg
jg
push
dec
adc
xchg
xchg
mov
cmp
xchg
lea
loop
sub
in
mov
bound
mov
push
loope
dec
sub
jno
sbb
pop
adc
jae
mov
sbb
jno
imul
call
dec
xor
adc
ds
add
retf
inc
(bad)
shr
xchg
cld
xchg
xchg
in
data16
mov
add
xor
or
pop
push
dec
mov
mov
dec
cmp
daa
inc
lock
sub
mov
mov
mov
inc
imul
inc
ror
aad
std
lea
dec
fnstcw
sbb
imul
cmp
ja
mov
jmp
push
cmc
xchg
inc
std
mul
(bad)
dec
pop
xor
out
push
sbb
adc
in
cli
out
xchg
push
xor
adc
leave
jns
dec
mov
inc
jb
in
fbld
and
cli
mov
adc
loope
ja
jne
mov
mov
push
shl
dec
jmp
aad
pop
and
and
int
mov
push
leave
xor
adc
jns
arpl
dec
jbe
or
div
ds
nop
mov
je
lods
dec
pusha
fst
imul
mov
sbb
pop
test
stos
jns
repz
inc
jnp
mov
aaa
scas
or
shl
outs
clc
cmp
xchg
adc
jb
rcr
inc
das
fcom
cmp
mov
or
call
sbb
scas
vhaddps
pushf
ror
jmp
pop
mov
(bad)
fstp
pop
pop
cld
jnp
sar
dec
test
pop
inc
imul
jne
popf
and
push
int3
retf
ret
sti
test
or
xchg
add
cmp
push
fcom
or
ret
movs
mov
mov
inc
xchg
je
leave
xchg
scas
push
dec
(bad)
fcomp
popf
adc
push
jl
cld
or
and
lock
fcom
in
out
push
retf
xchg
xchg
mov
adc
push
popa
pop
jge
jg
adc
add
loop
and
xor
(bad)
hlt
popa
and
sub
fnstenv
and
(bad)
ds
rcl
xchg
mov
icebp
add
jo
adc
sbb
mov
jo
xchg
cmp
int3
push
dec
in
mov
iret
stos
test
je
lds
push
loope
cmp
inc
fs
fnstenv
jno
into
sub
pop
or
into
mov
(bad)
fwait
out
pop
pop
iret
aad
mov
int
inc
outs
sbb
jl
inc
pop
mov
fadd
add
push
jecxz
mov
add
mov
inc
inc
div
lods
call
mov
or
loopne
clc
cmp
xchg
ret
adc
sbb
int3
mov
sbb
(bad)
cmps
scas
out
cmp
cmp
test
inc
repnz
jo
test
arpl
sub
inc
mov
mov
jge
xor
mov
dec
push
jecxz
cs
test
gs
or
(bad)
cmps
jnp
retf
dec
ret
sbb
outs
and
xchg
push
xchg
fwait
dec
jno
push
sbb
out
xchg
call
fiadd
adc
loope
(bad)
jno
pop
push
pushf
clc
fistp
ja
push
dec
test
pop
and
or
mov
inc
add
aam
cmp
fcom
jg
mov
(bad)
jne
pop
retf
test
inc
ret
data16
push
std
shl
and
ret
pop
nop
movs
fmul
push
mov
ss
push
push
or
jmp
add
rol
std
aam
mov
in
inc
add
call
cs
cmp
sar
movnti
inc
nop
in
push
inc
les
push
jne
mov
cmp
bound
sub
add
sbb
cmp
aam
mov
in
or
iret
adc
fisubr
mov
shl
xchg
scas
lahf
pop
xor
push
icebp
mov
sbb
pop
mov
ins
scas
daa
shr
dec
aad
mov
jmp
in
pop
call
mov
xlat
lock
xchg
pop
sbb
aam
dec
jge
add
cmps
test
sub
(bad)
mov
out
frstor
int
mov
mov
push
loop
repz
cdq
cmc
pop
jo
nop
ja
pop
jmp
mov
cmp
mov
push
sahf
or
cld
jecxz
sub
ror
sub
(bad)
pop
sti
add
mov
xor
and
test
mov
std
sbb
and
push
ins
clc
cmp
mov
push
jle
add
ss
push
add
rcl
cmp
shr
sbb
int3
mov
jmp
hlt
sar
xchg
(bad)
pusha
or
dec
sbb
mov
mov
mov
bound
push
es
pusha
(bad)
popf
and
cmp
and
pop
lds
sub
inc
xor
sbb
mov
jge
pop
popa
out
inc
mov
bound
xchg
aad
dec
xchg
xchg
push
retf
dec
out
xchg
in
popf
imul
repz
add
stos
jmp
fucom
js
sub
inc
xor
rol
cwde
add
sbb
adc
inc
sahf
push
(bad)
shl
mov
std
pusha
xchg
loope
xor
jmp
and
mov
xchg
xlat
outs
and
cdq
mov
push
jae
ja
cmps
pop
cmp
mov
sub
dec
and
xchg
mov
mov
adc
dec
cmp
imul
dec
cmp
out
add
test
push
and
inc
and
push
jbe
mov
and
sub
add
xchg
daa
std
rcr
xor
push
(bad)
sbb
out
dec
adc
jmp
push
imul
int3
ins
mov
ret
not
outs
ins
or
sub
(bad)
fwait
adc
mov
sbb
inc
addr16
push
jecxz
dec
xor
push
fwait
out
pop
scas
inc
fdiv
sbb
test
ins
xor
mov
mov
cmp
enter
(bad)
xor
sti
or
retf
adc
or
cs
cdq
pop
scas
ja
pop
cmp
sahf
retf
and
nop
loopne
mov
inc
mov
xor
retf
ror
mov
pop
ds
inc
ror
setae
adc
mov
or
xor
sub
add
loope
mov
push
xchg
in
pop
cmp
jne
shl
bound
cmp
or
out
fsubr
xor
or
and
push
test
fnstsw
icebp
scas
scas
lds
sub
cli
pop
ret
cvtdq2ps
in
xchg
xor
mov
pop
jge
cdq
stos
inc
mov
aaa
jg
mov
sbb
aad
mov
xchg
add
(bad)
outs
and
jns
xor
ret
lds
and
imul
rol
cmp
inc
push
fdiv
sbb
xchg
test
sbb
lods
retf
retf
add
jl
pushf
xor
movhps
add
mov
iret
lods
(bad)
gs
mov
sub
xor
cmp
dec
nop
add
in
sbb
out
add
push
adc
hlt
fst
arpl
pop
inc
aad
mov
cs
jl
cmp
cmp
push
jno
inc
and
jo
das
fild
and
fimul
jo
push
rcr
and
push
stc
lods
add
and
sti
cmc
jbe
sahf
dec
mov
mov
mov
add
fiadd
cmp
movs
(bad)
(bad)
xor
das
(bad)
cmps
mov
mov
ficomp
ror
mov
add
test
xor
mov
push
inc
in
dec
jg
es
lds
repnz
xlat
mov
(bad)
push
xor
mov
jmp
aad
bound
ret
sub
(bad)
fbstp
(bad)
in
ret
imul
xchg
(bad)
cmp
sahf
xor
fisub
loopne
xchg
jnp
add
rol
adc
pop
pop
cmp
xlat
inc
sahf
dec
or
add
test
sub
mov
mov
sbb
push
rol
sub
imul
or
nop
lock
aas
int3
sub
mov
mov
mov
add
jl
out
dec
jge
inc
aas
or
jecxz
(bad)
or
pop
xor
int3
xchg
aas
aaa
adc
xchg
aas
jp
sub
call
outs
scas
(bad)
jb
adc
imul
push
push
dec
sub
jae
stos
cmps
xchg
xlat
cwde
xor
stc
rol
leave
mov
add
sub
mov
mov
add
fwait
retf
dec
mov
xlat
add
aam
in
push
lahf
add
out
aas
jmp
adc
mov
xor
push
sbb
in
add
test
loope
or
ins
(bad)
mov
mov
cmp
mov
out
add
jg
adc
cmp
rcl
repz
(bad)
pop
repnz
inc
stos
dec
add
or
xor
lahf
jge
push
dec
cmps
ficom
cld
mov
or
pop
repnz
leave
mov
jp
in
xlat
and
mov
add
jge
scas
shr
mov
sbb
outs
stos
outs
mov
xor
cmp
sub
xor
xchg
mov
test
imul
rcl
dec
ret
ficom
mov
icebp
imul
(bad)
shl
push
arpl
stc
out
jmp
mov
dec
(bad)
cmp
dec
sub
pop
inc
cmp
mov
lock
cs
add
lock
cmp
push
stc
test
(bad)
iret
pusha
cmp
mov
add
(bad)
jae
xor
push
(bad)
arpl
xchg
pushf
and
outs
fcomp
jl
jmp
adc
loopne
sbb
pop
lfs
cmp
jg
sub
cmp
inc
and
clc
sar
inc
pop
or
xchg
xchg
mov
cdq
mov
cmp
and
sbb
add
stos
sub
pushf
lahf
iret
je
add
in
imul
jmp
inc
push
jl
mov
add
sbb
psubsb
sub
fisttp
pop
xor
enter
test
mul
sub
jge
sub
je
mov
mov
add
loop
movs
imul
fistp
fistp
sbb
mov
sub
lods
jnp
(bad)
sti
push
jns
mov
stc
imul
movs
mov
out
test
je
jge
xor
inc
aaa
xchg
std
(bad)
pop
cmp
inc
add
mov
fcom
stos
dec
lock
sub
adc
(bad)
cwde
fisub
test
mov
mov
stc
inc
outs
cs
mov
stc
(bad)
pop
fidiv
or
push
add
sub
jb
or
xor
retf
sbb
mov
mov
sub
adc
mov
and
ror
outs
out
imul
cmp
mov
jns
fdivr
jge
inc
(bad)
ficom
leave
fwait
inc
cmps
das
in
or
ins
mov
test
push
push
mov
imul
dec
(bad)
xlat
lods
inc
movs
push
les
hlt
clc
pop
nop
pop
sbb
ins
dec
push
mov
shl
xor
mov
rcl
add
jno
jp
cld
or
mov
inc
dec
xor
ds
fs
add
mov
mov
and
rcr
std
add
and
addr16
loopne
pop
js
add
jno
fild
(bad)
inc
jmp
in
or
mov
xchg
sti
xchg
xchg
xor
cld
jae
inc
icebp
test
outs
mov
inc
cmp
scas
or
mov
out
(bad)
xchg
pop
test
enter
xor
lahf
add
les
fist
loop
add
cmp
leave
outs
add
adc
lods
test
xor
das
dec
cs
adc
sahf
mov
sub
fsubr
inc
aam
cmp
loop
sbb
hlt
(bad)
pop
or
xchg
mov
sbb
mov
int3
sbb
lea
mov
stc
mov
dec
pop
les
sub
cwde
es
and
push
scas
xchg
jecxz
retf
xchg
dec
popf
sub
jbe
push
push
dec
pop
jnp
jbe
push
repnz
(bad)
push
ins
inc
in
mov
mov
je
push
inc
ins
or
inc
leave
je
push
out
test
add
inc
sahf
mov
in
xlat
mov
movs
xchg
inc
or
jo
pop
xlat
stos
xchg
sbb
and
out
leave
out
push
add
cli
cmp
jmp
in
call
mov
call
inc
int3
fimul
ret
iret
idiv
cmp
cli
fidiv
(bad)
dec
inc
inc
mov
int3
pop
cmp
jb
mov
cdq
mov
adc
sbb
test
dec
cld
xchg
addr16
or
call
xor
in
lods
leave
out
pop
aaa
sbb
mov
push
and
push
xor
push
inc
movs
xchg
inc
adc
xchg
or
data16
int3
dec
ds
sbb
lods
popf
mov
nop
iret
outs
dec
iret
sahf
in
dec
test
out
add
and
xchg
xchg
repz
pop
pop
ja
stos
add
ja
sbb
mov
hlt
mov
ret
lods
hlt
jle
ret
aaa
cld
pusha
mov
xchg
in
push
cmp
aam
les
imul
mov
pop
jp
push
es
mov
inc
arpl
sbb
loopne
xor
adc
lahf
push
jl
xchg
dec
ror
or
jp
lods
mov
adc
sub
jp
cli
out
shr
mov
adc
cld
or
cs
arpl
jge
jae
xchg
out
dec
push
fldenv
out
adc
shr
xlat
push
test
push
cmp
addr16
out
(bad)
lock
add
mov
xor
(bad)
lock
lods
stc
push
xchg
arpl
repnz
lds
bound
add
sub
and
mov
test
mov
jnp
lods
ret
sub
les
jp
dec
jns
(bad)
enter
mov
push
les
add
imul
mov
jecxz
aam
push
das
test
std
mov
push
(bad)
mov
push
lods
mov
in
mov
stos
out
inc
loope
rcl
jle
lea
mov
js
arpl
fist
popf
pop
push
sub
jnp
ins
ret
ror
sub
movs
mov
mov
mov
lds
jbe
in
pop
inc
shl
inc
mov
dec
dec
xchg
sbb
xchg
not
mov
and
or
cwde
and
and
cmc
xor
inc
dec
test
xor
ror
mov
ja
cld
jns
dec
push
or
ret
outs
call
ret
jg
outs
lahf
data16
xchg
pop
add
loopne
in
fild
ja
ins
ins
jne
pop
mov
jmp
(bad)
enter
scas
push
aad
mov
mov
mov
js
(bad)
or
dec
outs
dec
pop
lods
mov
pop
cld
or
jge
imul
sahf
loop
shl
std
mov
cmp
inc
pop
mov
dec
push
(bad)
dec
std
aam
cmps
inc
adc
and
and
or
sbb
data16
dec
sar
pop
sub
enter
add
add
stos
push
pop
rol
ret
inc
jg
cld
xor
or
(bad)
xchg
jo
xor
retf
inc
cmp
retf
xchg
arpl
jne
shr
frstor
xor
and
lods
aam
movs
cdq
cmps
(bad)
inc
test
or
out
adc
into
jbe
xor
outs
add
cmp
popf
enter
inc
std
sub
shl
jmp
mov
mov
pop
jmp
(bad)
jl
pop
mov
dec
stc
cmp
lahf
pop
dec
jbe
fucomi
mov
shr
(bad)
push
fsub
mov
jb
repz
dec
pop
fisub
mov
cmp
fwait
mov
or
jno
add
stos
sub
push
popf
popf
sbb
jns
mov
adc
add
enter
add
xor
movs
push
test
clc
out
inc
push
enter
aad
xchg
dec
fdivr
(bad)
lahf
lahf
hlt
nop
adc
mov
ss
(bad)
ins
fist
xchg
sub
pop
adc
call
inc
scas
sbb
inc
loope
adc
stc
mov
outs
xor
aad
dec
ror
add
xchg
fld
loop
je
icebp
sub
shr
aam
enter
mov
mov
sub
mov
int
cdq
(bad)
(bad)
sub
neg
adc
stc
jmp
pop
cdq
arpl
adc
cmp
and
sbb
mov
fcomp
fwait
mov
adc
mov
mov
shl
sub
ins
pop
jo
adc
ins
(bad)
mov
push
test
test
(bad)
lock
dec
ins
test
sub
aam
leave
jne
in
mov
or
lods
push
xchg
mov
aam
sub
mov
xor
jne
mov
xchg
mov
push
adc
ds
aaa
test
aaa
lods
pop
(bad)
pop
repz
mov
xchg
retf
push
and
jae
or
adc
push
loopne
fisttp
repz
(bad)
ins
add
sbb
mov
ror
retf
retf
rcr
retf
xchg
cmps
sbb
sub
shl
mov
sbb
ret
ds
dec
xor
das
(bad)
ja
jo
out
mov
mov
and
hlt
ret
das
outs
lock
jne
pusha
call
mov
cmp
pop
loope
div
into
imul
aaa
sub
(bad)
mov
test
dec
cmp
cmp
leave
jae
adc
adc
push
cmp
add
xchg
adc
loope
sbb
or
pusha
and
iret
lods
pushf
iret
pop
out
dec
enter
adc
or
pop
cmc
mov
and
scas
clc
cwde
ror
repz
jbe
mov
or
xlat
outs
or
and
cmp
push
and
add
jl
rcr
add
mov
push
cmp
lds
fild
cmps
sbb
cmps
fild
sub
cmp
addr16
icebp
(bad)
das
iret
pop
adc
jmp
movs
pop
and
popf
test
xchg
inc
not
jmp
adc
jecxz
imul
xchg
call
pop
fnstsw
out
ins
mul
(bad)
mov
inc
add
xchg
inc
mov
arpl
dec
les
mov
arpl
adc
cmp
xchg
imul
loop
xor
scas
mov
dec
and
jbe
fisubr
or
add
iret
std
add
bound
and
imul
int
add
outs
idiv
and
sub
xor
sub
cdq
int
rcl
aad
inc
test
or
sbb
shl
xchg
out
test
fild
mov
ins
(bad)
sbb
pop
mov
push
jp
dec
xor
mov
cmp
adc
shl
mov
adc
mov
div
lahf
dec
mov
pop
stos
outs
inc
push
iret
mov
adc
aas
retf
mov
pop
and
ret
(bad)
xor
arpl
nop
in
shl
mov
mov
mov
(bad)
loopne
sbb
sbb
jecxz
gs
(bad)
call
push
mov
mov
jo
shl
cmps
xchg
ret
mov
imul
mul
aad
sahf
dec
sbb
or
sub
repz
enter
push
fcomp
scas
mov
mov
jmp
xor
inc
in
leave
add
mov
loope
pop
and
cmp
lea
push
add
not
jae
int3
pop
lock
sbb
add
xor
adc
les
jle
push
fdiv
loope
cmps
std
cwde
mov
adc
sbb
add
sub
dec
sub
mov
or
and
int3
rcl
(bad)
mov
stos
add
loop
(bad)
xlat
dec
jo
repnz
jmp
gs
cdq
movs
dec
cmc
fstp
into
mov
adc
call
cmp
jmp
jge
inc
adc
(bad)
pop
inc
imul
in
cmp
outs
jno
ins
dec
push
repnz
mov
dec
ret
add
sbb
fndisi(8087
in
les
arpl
mov
pop
sbb
mov
cs
sbb
dec
sbb
sbb
and
add
pushf
loope
mov
xor
dec
lock
mov
mov
cdq
ja
test
xchg
loop
pop
(bad)
in
out
jle
mov
jb
imul
pop
ficomp
out
int3
loope
dec
cwde
mov
repnz
pop
sub
dec
jbe
push
xchg
retf
ins
mov
inc
xor
mov
push
out
jge
mov
frstor
in
mov
inc
dec
inc
pop
inc
rol
ret
mov
ins
dec
ss
shr
cmp
inc
cmp
and
aas
pop
imul
hlt
int3
xchg
out
add
test
pop
mov
fist
fidivr
call
(bad)
shl
mov
jl
fisttp
xor
and
cvttps2pi
ffreep
mov
outs
sbb
mov
sahf
mov
(bad)
fisttp
and
xchg
ret
(bad)
pusha
in
xor
loop
and
retf
push
test
imul
(bad)
(bad)
mov
cmp
push
repz
cmps
test
dec
xor
cs
mov
push
and
cmp
inc
and
out
xor
sar
pop
pop
sub
fmul
test
or
inc
cmp
mov
sub
push
dec
fcmovnb
psubsw
add
push
in
jg
and
or
dec
repnz
enter
dec
sbb
ja
cmp
or
push
sbb
cli
xchg
je
mov
jns
shl
repnz
add
sub
cmps
xor
push
sbb
aaa
xchg
push
popf
pop
aas
mov
pop
std
jmp
ret
inc
repnz
dec
stos
hlt
sub
enter
dec
cmc
cmp
pop
fidivr
out
pop
in
xor
cmp
into
std
outs
enter
(bad)
fidiv
mov
std
sahf
scas
dec
(bad)
psubb
test
sbb
leave
mov
(bad)
adc
sub
lea
and
clc
js
add
mov
mov
ds
mov
pop
mov
cmp
movs
cwde
sub
(bad)
dec
test
add
movs
pop
aad
add
test
clc
iret
(bad)
scas
sahf
adc
call
mov
or
mov
fwait
xchg
(bad)
and
(bad)
sub
leave
inc
sbb
dec
mov
or
jmp
dec
xchg
mov
cmps
mov
pushf
mov
retf
xchg
dec
das
fs
sbb
iret
sub
dec
int
pusha
xor
xor
ret
(bad)
mov
es
push
loope
imul
adc
in
jnp
pop
add
(bad)
test
fucomip
pushf
add
fbstp
pop
mov
sub
sub
mov
jp
icebp
arpl
dec
je
loope
scas
push
test
stos
sub
loop
adc
loope
inc
int
push
movs
mov
sbb
aad
xchg
xor
push
rcr
jg
mov
fs
aam
mov
push
leave
in
pop
push
pop
mov
test
jle
fs
and
outs
inc
jno
push
aam
xlat
push
cwde
adc
fcmovbe
cli
xchg
rcl
leave
scas
lahf
or
cld
sbb
loop
bound
out
jp
test
fs
jno
mov
mov
fdivr
and
mov
pusha
xchg
ds
lea
push
jp
sub
es
movs
dec
xor
mov
fldcw
sar
adc
xchg
popf
push
bound
rcr
lahf
and
sub
cdq
push
dec
popa
fwait
xchg
jmp
jnp
jb
xlat
and
lds
fwait
or
mov
stos
gs
idiv
cmp
in
mov
stos
inc
sub
stc
adc
lds
into
fbld
lods
(bad)
cmp
(bad)
call
dec
dec
or
xchg
rol
cmp
loope
lods
jg
jne
call
push
add
in
(bad)
and
cs
aaa
mov
jno
and
adc
js
sbb
loopne
mov
loopne
fcomp
and
icebp
repnz
xchg
sub
imul
popf
mov
mov
repnz
push
xor
cmp
sbb
xchg
out
dec
das
gs
xchg
sub
scas
jmp
sub
pushf
adc
ja
adc
xchg
adc
mov
mov
outs
cmp
ror
mov
mov
out
call
xchg
(bad)
xor
outs
mov
popa
add
daa
fimul
mov
arpl
jbe
xchg
pusha
push
pusha
(bad)
inc
sbb
jg
aas
jb
ja
out
movs
aam
icebp
push
or
iret
(bad)
out
in
test
inc
popa
in
out
push
dec
imul
test
nop
pop
or
cs
xchg
jbe
inc
sub
imul
jl
sub
(bad)
jmp
mov
or
or
mov
fdivrp
out
adc
xor
mov
aam
xor
in
adc
jo
inc
or
and
mov
and
or
loope
and
push
stc
push
sub
enter
mov
outs
test
jmp
ins
les
mov
test
inc
(bad)
or
sub
fistp
test
push
xchg
mov
jg
mov
xchg
repz
in
stos
test
or
pop
mov
dec
xor
mov
inc
sbb
fcmovnb
jb
or
or
jle
out
add
mov
ret
(bad)
(bad)
jg
fs
ret
add
pusha
sub
test
xchg
mov
sahf
mov
add
cld
lods
xchg
sbb
jnp
and
jbe
jmp
fcom
arpl
sbb
(bad)
xchg
(bad)
adc
dec
xor
ins
xchg
mov
loopne
xor
ja
not
pop
loop
xlat
xor
cmc
push
retf
sub
stc
jb
dec
xor
push
inc
jae
rcr
and
jle
inc
pop
jg
add
inc
dec
out
neg
jp
les
call
(bad)
jb
fdivr
outs
ja
sub
enter
push
out
cmps
pop
fdivr
ret
pop
jl
mov
pop
add
in
lds
or
adc
repnz
js
adc
in
and
ds
and
xchg
gs
push
rol
xor
inc
stos
mov
mov
daa
ins
xchg
pop
(bad)
and
fidivr
sbb
cmp
lods
arpl
mov
push
retf
into
je
jnp
mov
aam
push
jae
mov
test
call
inc
and
xchg
mov
pop
add
pop
add
jnp
mov
js
cmc
test
jbe
lahf
or
or
mov
mov
popf
scas
adc
ins
mov
scas
int
mov
adc
imul
push
ja
mov
mov
or
mov
fucomip
aas
adc
adc
nop
add
sbb
adc
mov
imul
pop
movs
add
jl
or
add
ror
repnz
push
fnsave
cwde
jp
out
pop
stos
shl
fwait
outs
adc
mov
xchg
popf
pop
adc
pop
(bad)
std
ja
sahf
pop
xchg
lea
jg
inc
push
sbb
fwait
scas
or
add
fistp
lds
fiadd
(bad)
std
hlt
out
das
jge
gs
or
mov
mov
mov
in
pop
data16
and
out
jnp
jge
pop
into
mov
jbe
cmp
ins
test
inc
sbb
cs
cmp
fs
pop
not
push
xchg
ret
add
popa
cmp
out
mov
add
inc
sbb
nop
ret
and
mov
int
fdivr
jle
mov
in
lock
sbb
stos
xchg
(bad)
out
xchg
ins
or
fld
out
out
cs
loope
mov
repz
out
iret
push
pop
mov
dec
rcl
hlt
dec
arpl
jg
pop
push
jle
cmp
stos
in
pop
fimul
lea
mov
test
nop
pusha
(bad)
adc
movs
pop
inc
push
mov
push
jmp
js
iret
imul
rcr
push
bnd
add
ror
(bad)
call
mov
in
nop
mov
bound
das
mov
add
pusha
(bad)
mov
xor
shr
leave
jle
push
icebp
dec
popf
push
mov
jns
mov
xchg
push
sahf
leave
inc
out
(bad)
loope
mov
xor
sbb
add
xchg
or
mov
pop
add
mov
popa
ds
std
inc
mov
push
xchg
push
cmp
push
lea
loope
in
cmp
(bad)
inc
pop
adc
je
add
add
sub
mov
loope
xchg
or
loop
jae
les
(bad)
jmp
fnstsw
inc
add
and
pop
xor
ret
(bad)
fist
mov
push
mov
scas
push
or
dec
mov
lds
adc
les
cmp
adc
jp
cmps
xchg
leave
cmps
pop
mov
xor
data16
js
out
call
pushf
dec
adc
gs
outs
adc
inc
gs
test
inc
mov
les
jge
shl
mov
xchg
jae
adc
dec
cmp
add
movs
je
xor
pop
push
out
pop
ins
retf
xchg
mov
jo
mov
add
mov
cmps
push
jmp
(bad)
into
push
movs
mov
adc
xor
add
rcr
pop
(bad)
scas
mov
in
call
ins
cmp
jl
mov
(bad)
xor
xchg
movs
xchg
call
xor
cmc
push
or
xchg
nop
and
push
div
jne
inc
fistp
ficom
fdiv
mov
or
aaa
jno
mov
movs
jae
jno
adc
(bad)
movs
pop
pop
fdivr
dec
or
pop
mov
pop
mov
xor
loope
inc
cmc
js
and
lea
xor
xor
dec
movs
in
dec
mov
inc
shl
mov
leave
fdiv
sbb
cmp
out
or
xchg
mov
pop
fcomp
pop
mov
les
test
leave
adc
ret
add
mov
and
mov
mov
xlat
dec
int
andnps
ror
lods
push
push
or
sub
stos
sub
push
sbb
push
xchg
inc
jbe
mov
adc
lea
cwde
(bad)
ret
and
sub
je
mov
jp
(bad)
lods
pop
fmul
jb
test
in
adc
mov
jmp
dec
mov
std
sbb
shl
pop
add
test
(bad)
lock
enter
addr16
leave
push
fistp
icebp
cmp
dec
leave
mov
push
sub
int
add
fdiv
jbe
jo
pop
retf
cmc
test
sub
xor
cmc
cmp
rcl
pop
adc
push
repz
xchg
sahf
cdq
sbb
repz
hlt
cmp
sub
inc
push
cmps
cmps
gs
dec
std
inc
pushf
into
out
mov
adc
inc
fcom
mov
jl
call
dec
mov
call
mov
or
dec
out
lahf
adc
popa
fs
jo
or
test
and
xlat
xchg
pushf
xor
arpl
mov
je
lock
fiadd
cmc
scas
test
je
stos
or
dec
adc
mov
stos
mov
jp
shl
dec
das
xor
js
test
idiv
jne
mov
xchg
sub
dec
fsubr
add
cmp
xor
repz
es
mov
add
popf
jg
sub
jae
fadd
mov
push
fsub
pop
test
aad
inc
sbb
bound
pop
push
jmp
inc
mov
fstp
jmp
xor
push
adc
cmp
push
(bad)
and
das
mov
mov
(bad)
icebp
(bad)
dec
dec
jmp
cmp
xchg
xchg
out
movs
pmulhuw
sar
pop
cmps
dec
cli
and
cmp
mov
pop
cmp
fwait
std
xor
jl
mov
loope
push
dec
es
(bad)
sti
rol
xchg
mov
mov
dec
cld
jmp
call
fild
movs
into
mov
pop
jno
arpl
pusha
pop
mov
(bad)
mov
fisubr
jb
pop
int
enter
mov
(bad)
jmp
xor
sub
xor
cs
pop
dec
inc
pop
cmp
push
test
mov
xchg
addr16
mov
adc
push
aad
ficom
dec
mov
imul
inc
sub
xchg
cmp
pop
mov
inc
rcl
mov
outs
sub
fidivr
sbb
mov
in
je
xchg
adc
or
stos
aas
cmp
jbe
rcr
and
or
dec
out
jl
mov
pusha
fild
call
outs
or
mov
or
enter
popa
or
fsubrp
ror
mov
enter
call
sbb
sar
mov
jnp
dec
mov
push
sbb
jno
jae
sbb
cdq
(bad)
stc
mov
mov
push
test
push
push
jne
pop
or
test
add
dec
sbb
cmps
xor
xchg
nop
push
mov
mov
call
cmp
stc
mov
daa
jle
xchg
push
dec
jge
pop
jbe
mov
outs
gs
addr16
lahf
push
test
jbe
idiv
push
jle
nop
push
jle
dec
das
jge
inc
rol
pushf
add
pop
or
jmp
push
stc
adc
stc
pop
sbb
int
jle
dec
dec
stc
adc
popf
xchg
retf
xchg
repz
adc
mov
xor
outs
test
hlt
into
add
repnz
lods
jp
push
icebp
sbb
mov
repnz
je
loopne
push
out
bound
popa
movs
fistp
and
xchg
lods
es
push
jb
fstp
stc
xchg
inc
es
adc
lods
out
jne
jecxz
test
cli
arpl
icebp
fst
pop
mov
jl
and
adc
adc
(bad)
aaa
das
outs
xor
cwde
inc
scas
jecxz
scas
call
ror
cmps
gs
jl
pop
jmp
mov
jno
lahf
add
push
aam
out
and
xor
push
idiv
push
sbb
xchg
addr16
cld
cmp
push
mov
leave
xor
mov
push
jle
push
fnstsw
jecxz
mov
fnstsw
(bad)
loope
jnp
jl
jg
push
pop
pop
mov
mov
movs
retf
pop
cmp
test
sub
aaa
iret
pop
pusha
xor
mov
jg
cs
lock
mov
xor
cmp
aas
pushf
ret
adc
inc
pop
cmp
test
rol
jne
enter
cld
je
jmp
test
cmp
mov
xor
sub
inc
xchg
adc
(bad)
sahf
xchg
mov
pop
mov
add
test
lock
mov
test
add
and
leave
mov
cmps
addr16
ficomp
jae
push
fwait
inc
jp
movs
shr
es
inc
ja
jecxz
adc
lea
mov
or
xchg
test
fstp
jo
cmp
pop
sub
adc
push
out
pop
jns
jne
aam
lods
sub
ins
movs
outs
loopne
je
inc
mov
ret
fadd
dec
out
dec
imul
nop
cmp
add
dec
push
sbb
xor
(bad)
mov
outs
and
pop
sbb
repz
adc
add
dec
push
test
adc
ror
scas
mov
ss
adc
add
pop
jnp
lock
cmc
je
dec
test
test
push
out
fimul
sub
aas
jle
das
mov
in
pop
jg
push
outs
jno
das
mov
adc
push
push
inc
mov
push
cs
or
ss
(bad)
ds
push
ret
pop
dec
not
adc
leave
bound
jmp
test
clc
cmp
or
stc
in
jmp
stc
mov
inc
pop
dec
xchg
sti
or
fs
and
sahf
ins
loop
fcmovne
ins
fwait
push
scas
xor
imul
movs
xchg
dec
inc
inc
xchg
cmp
dec
cmp
out
sar
or
add
fcomp
add
div
dec
popa
lods
pushf
xchg
sub
aaa
mov
push
dec
jne
jo
mov
scas
arpl
in
retf
sub
sbb
dec
adc
xor
cmp
pop
add
sbb
xlat
pop
fisub
inc
or
mov
or
sahf
cld
mov
shl
cdq
iret
in
fisubr
les
lock
jmp
jo
mov
jge
cdq
and
or
sub
dec
addr16
mov
shl
dec
dec
int
inc
(bad)
dec
push
cmps
vpcmpeqw
and
cwde
or
sub
stos
out
mov
scas
and
sub
lahf
dec
dec
ret
pop
and
inc
mov
sub
stc
stc
data16
test
add
mov
push
dec
lods
mov
xchg
push
mov
cmps
mov
ftst
inc
inc
xor
ins
outs
or
test
mov
jbe
fwait
jbe
xor
xor
pop
inc
test
mov
sub
aas
mov
inc
pop
adc
inc
je
(bad)
dec
xchg
push
cmp
jl
mov
add
push
jbe
test
(bad)
xchg
rcl
mov
mul
loopne
push
xor
loope
int
scas
test
mov
cmp
jae
mov
cmp
dec
stos
xlat
ror
test
ss
inc
and
and
pop
sbb
mov
inc
idiv
cmp
movs
jb
push
mov
pop
iret
cdq
mov
or
lods
pop
int
sub
mov
outs
adc
inc
mov
mov
pop
aaa
into
inc
out
or
pop
mov
test
adc
imul
or
neg
stc
outs
imul
jl
fnstsw
nop
lock
not
pop
iret
lock
xor
xchg
in
cmp
mov
lods
call
cli
push
aad
or
fs
xchg
pop
out
sbb
cmc
outs
mov
adc
call
mov
pushf
rcr
mov
inc
xchg
adc
pushf
mov
cmc
adc
sbb
push
and
loopne
(bad)
gs
icebp
test
jmp
mov
into
mov
into
inc
in
outs
stc
sub
gs
mov
ins
cmp
rcl
movs
je
inc
cmpxchg
push
(bad)
(bad)
sahf
mov
sbb
cmc
(bad)
out
leave
je
sbb
jo
inc
add
add
std
movs
sub
mov
cmp
std
js
fs
fidivr
xchg
jne
out
jmp
add
rol
dec
push
ret
lock
add
push
sbb
pushf
xchg
mov
hlt
retf
jb
call
in
dec
icebp
xchg
rcr
fdivp
or
sub
out
iret
sub
mov
(bad)
jge
ins
pop
xor
jge
inc
or
nop
fnstcw
pop
bound
and
movs
fdiv
(bad)
xchg
xchg
dec
mov
repz
xchg
pop
or
or
gs
and
cmp
pop
jg
jl
fnstsw
jbe
ins
call
cmps
jo
or
and
loope
pop
int
adc
xor
xchg
and
fs
sbb
pop
push
push
push
aas
xchg
retf
nop
fcmovu
out
test
hlt
mov
sbb
push
push
pusha
mov
retf
retf
or
(bad)
es
stos
(bad)
xor
out
fist
in
pop
mov
mov
dec
in
ins
xor
push
jg
push
clc
sbb
test
pusha
or
inc
dec
nop
int
sbb
push
imul
dec
hlt
mov
adc
out
shl
cmp
popf
mov
jne
sub
test
movs
and
cmp
pop
sbb
popf
jb
lahf
test
dec
fdivr
cmp
jmp
cs
outs
enter
fucomp
add
(bad)
adc
in
and
jmp
inc
cwde
add
jl
pop
mov
mov
push
jno
cmp
push
jmp
jge
or
int
xor
fmul
and
xchg
add
add
sbb
imul
sbb
daa
mov
clc
fnstsw
arpl
xor
or
mov
shl
std
sub
inc
and
sub
mov
ror
push
and
dec
pop
and
mov
jns
cld
xchg
jmp
inc
leave
repz
sbb
push
jmp
into
lea
add
inc
in
xchg
add
shr
mov
push
loop
push
(bad)
shl
adc
ds
std
sub
out
cli
loopne
mov
xchg
jno
shl
test
in
dec
mov
push
call
add
xor
mul
xor
or
in
scas
scas
pop
je
or
jno
shl
add
outs
bnd
pop
xchg
mov
outs
cwde
adc
fnstsw
stos
dec
mov
aaa
mov
pop
dec
mov
push
push
movs
std
cmp
movs
mov
adc
and
das
popa
mov
push
xchg
ins
aaa
sbb
sbb
scas
shl
retf
mov
es
dec
jl
enter
jg
xchg
out
clc
outs
pop
shl
xchg
or
(bad)
and
arpl
adc
adc
jmp
sbb
mov
mov
sbb
mov
out
mov
or
mov
repnz
cmp
add
mov
and
xchg
lock
push
mov
cli
sbb
mov
jns
pop
shr
mov
(bad)
dec
cmp
in
aad
cmp
ss
neg
test
push
rcl
scas
sub
mov
adc
xchg
popf
sub
mov
jmp
stos
fbld
nop
add
or
cwde
test
or
and
cmp
std
sahf
push
adc
out
mov
aad
mov
in
rcr
fst
add
push
sub
inc
and
arpl
imul
(bad)
xor
loopne
fisub
leave
dec
jmp
rol
nop
sub
jg
jae
repnz
xor
mov
push
xchg
push
repnz
inc
or
enter
jne
rol
ja
xor
and
sbb
loopne
adc
jb
inc
cmp
sub
cdq
pop
sti
pop
mov
stos
pushf
dec
imul
pushf
cmc
dec
leave
sub
adc
add
xor
popf
jl
push
into
in
outs
sub
outs
sahf
sub
mov
mov
mov
inc
cmps
aas
in
test
aam
pop
imul
test
inc
dec
aaa
pop
js
and
push
fdivp
int
mov
test
inc
xchg
aas
cmc
push
xchg
mov
or
(bad)
cmp
fwait
sub
mul
sub
mov
jo
jae
or
mov
(bad)
gs
test
arpl
push
ror
mov
(bad)
out
mov
mov
sub
(bad)
out
or
int3
ins
mov
sbb
es
xor
cmp
inc
mov
dec
xchg
xchg
getsec
or
push
xchg
scas
jmp
popf
mov
cmps
pop
push
mov
cmps
scas
xchg
outs
popf
fcomp
cld
push
scas
rol
(bad)
iretw
pop
iret
and
cmp
mov
push
mov
in
dec
ss
pop
adc
mov
mov
xor
fwait
add
jnp
jno
adc
aaa
mov
adc
fsub
inc
inc
shl
cmc
fdiv
gs
test
das
or
jns
dec
or
cmp
jne
into
push
mov
and
(bad)
arpl
cdq
fmul
outs
xor
xor
shl
jg
dec
dec
add
or
jbe
movs
gs
scas
sub
fidivr
cs
in
mov
or
sbb
sbb
sub
lea
ss
xchg
pop
mov
cwde
gs
and
(bad)
adc
mov
xor
test
xchg
mov
sbb
movs
jmp
sbb
out
xchg
popa
out
fldcw
call
fucomi
stos
daa
movs
jae
adc
movs
shl
adc
or
cmp
rcl
mov
(bad)
(bad)
ins
int3
add
adc
mov
ror
mov
xlat
fs
xchg
cwde
mov
mov
enter
in
das
push
lock
sbb
add
outs
stos
mov
cli
imul
data16
mov
jl
push
mov
xor
(bad)
inc
fdiv
mov
sub
scas
aas
retf
sbb
adc
popa
pop
inc
xchg
dec
mov
xchg
xlat
repnz
cli
xor
jge
sbb
jecxz
js
and
mov
or
or
xchg
dec
pop
mov
jmp
inc
mov
stos
rol
pop
retf
leave
pop
xor
leave
xchg
into
add
adc
hlt
js
std
sbb
bound
sbb
mov
push
adc
pop
mov
push
dec
xchg
and
lahf
pop
mov
jmp
and
inc
pop
and
adc
shr
add
pop
pusha
enter
imul
pop
inc
add
jnp
add
inc
scas
cwde
(bad)
adc
(bad)
xor
jo
loope
mov
gs
sub
jo
daa
mov
repnz
xor
mov
jbe
cmp
xchg
test
fisttp
iretw
mov
jmp
loope
sbb
inc
pop
out
in
pushf
sahf
mov
stc
aas
xor
fsub
cmp
sub
stc
jno
and
push
mov
xchg
inc
or
adc
push
hlt
pop
pop
cmp
arpl
lahf
(bad)
les
xor
in
test
fstp
cmp
jae
ja
jmp
dec
push
pop
shl
xor
and
sbb
sub
bound
dec
cmp
sbb
sub
jmp
mov
dec
jge
popf
jns
out
mov
inc
sbb
shl
mov
adc
jl
pop
out
loope
jno
shl
(bad)
test
adc
rol
pop
dec
out
into
mov
mov
xor
adc
inc
or
scas
push
pop
cld
repz
arpl
mov
jae
lea
stos
es
popf
cmp
and
out
mov
xor
gs
ins
mov
xor
push
rcl
pop
mov
addr16
jno
xor
adc
int
mov
je
xor
ss
std
inc
sub
es
xchg
popa
imul
inc
cli
arpl
cmp
out
xchg
lahf
and
imul
imul
sar
pop
iret
ins
cmps
and
fmul
fimul
mul
popa
or
sub
xor
ins
int3
mov
adc
ret
or
mov
xor
lods
xchg
add
pop
movs
and
jmp
jmp
mov
xor
mov
dec
js
jne
cld
sub
inc
fldcw
cmps
repnz
loopne
and
mov
jae
jg
retf
retf
mov
mov
lahf
push
out
dec
loop
lods
and
clc
sub
scas
cmp
add
fisttp
fucomp
adc
fdiv
sub
mov
inc
push
and
mov
jmp
and
pop
fsubp
jb
cwde
dec
mov
inc
jmp
cmp
mov
push
and
inc
pop
dec
(bad)
arpl
mov
pop
or
aad
mov
adc
add
dec
fst
inc
lock
stos
pop
ja
out
bound
mov
data16
into
mov
in
or
and
xor
jmp
les
mov
shr
in
hlt
inc
sub
fstp
sub
dec
pop
int
retf
hlt
jmp
arpl
lods
and
pop
add
add
push
inc
jns
js
les
icebp
jb
jle
fmul
outs
xchg
stc
ret
mov
pop
sub
es
iret
dec
mov
or
mov
test
arpl
test
outs
inc
ret
pop
pushf
fwait
in
ror
cmps
xchg
scas
pop
and
std
stos
mov
sub
inc
push
loope
xchg
push
call
and
pop
adc
lea
aad
pusha
xchg
xchg
push
sub
xchg
fs
cmps
aad
test
sub
in
out
fwait
xor
xchg
stos
sbb
xor
arpl
xor
push
lods
aaa
jmp
call
jp
mov
pop
adc
test
jp
add
xchg
add
(bad)
pop
or
sub
xlat
adc
js
pop
xchg
jg
fs
dec
cmps
xchg
test
or
dec
test
clc
sub
mov
je
mov
les
imul
pavgb
xor
inc
inc
push
lahf
cmp
out
or
mov
or
es
aad
mov
mov
nop
lods
and
(bad)
mov
and
xor
in
scas
sbb
ret
ss
ficomp
fs
dec
sub
cwde
inc
stos
std
shl
cwde
cmp
sbb
in
bound
xchg
mov
or
xor
ficomp
repz
push
rol
and
nop
fcom
and
mov
sbb
add
std
aad
add
js
sub
imul
push
jg
into
jo
mov
xchg
leave
imul
add
mov
inc
pop
jae
test
xchg
mov
xchg
out
pop
ret
(bad)
nop
cmps
sbb
xor
jecxz
adc
lds
(bad)
(bad)
pop
jge
ret
call
sub
sbb
sub
sbb
push
outs
mov
fbld
inc
out
cmp
test
inc
iret
or
les
mov
retf
or
mov
outs
ins
fwait
sub
push
pop
add
xchg
scas
jmp
into
jle
inc
pop
push
cwde
bts
loopne
sahf
and
add
or
inc
mov
dec
xchg
ja
lahf
xor
mov
aad
out
movs
cmp
pusha
ret
fcom
mov
retf
mov
cmc
or
sbb
setb
jg
out
or
pushf
ror
pop
push
and
jle
dec
loope
mov
or
iret
in
mov
scas
psllw
mov
jg
les
inc
mov
cmp
sub
xchg
sbb
sub
push
ss
xchg
stc
add
daa
sahf
mov
in
fcom
out
cmp
adc
add
or
cs
daa
xchg
inc
push
push
(bad)
sti
cmp
repnz
loop
xchg
cmp
add
bound
mov
add
push
fiadd
mov
push
std
mov
int
dec
mov
ss
jp
loopne
pop
test
pop
cdq
std
and
(bad)
pop
push
jne
mov
cmp
pop
aam
sbb
movs
cmp
ins
adc
cmp
xchg
adc
mov
xor
js
add
mov
bound
loopne
dec
pop
pushf
jecxz
and
pop
(bad)
lahf
call
xor
les
test
stos
popa
(bad)
gs
in
sbb
add
in
mov
bound
mov
out
mov
sbb
pop
mov
cwde
retf
addr16
mov
and
mov
movs
iret
mov
ja
xchg
mov
sbb
std
cmps
(bad)
cdq
cmp
mov
adc
dec
js
pop
icebp
fs
mov
jbe
xchg
mov
or
pop
pop
or
ins
imul
in
loopne
ja
or
sub
sti
(bad)
fiadd
test
sub
adc
shr
(bad)
mov
jb
shr
xor
mov
push
out
sbb
jmp
cmp
out
ret
leave
mov
ins
cmc
movs
or
jb
into
call
call
imul
or
push
mov
movs
mov
sbb
adc
std
arpl
repz
and
mov
fistp
jecxz
cwde
jl
in
sti
jbe
sti
adc
scas
cmp
jge
push
and
dec
sbb
stos
stos
push
cs
push
retf
xor
adc
mov
jbe
popf
retf
enter
push
fild
bound
push
cmc
inc
stos
nop
and
add
rcl
mov
ret
mov
push
es
and
gs
jne
(bad)
mov
ret
mov
mov
adc
dec
mov
sub
sti
jg
pushf
into
mov
jae
shl
aas
es
mov
div
mov
mov
cmp
mov
fiadd
(bad)
inc
fsub
pop
xlat
cmp
icebp
adc
jno
mov
inc
jg
daa
aaa
fisub
mov
adc
push
test
shr
cmp
cmps
inc
mov
and
repnz
in
cmp
pop
xor
pop
mov
lds
(bad)
in
test
fbld
ret
call
and
jbe
pusha
pop
jo
mov
retf
dec
imul
aam
sbb
mov
sbb
xchg
sahf
add
aam
lea
xor
pop
cwde
mov
jp
in
inc
mov
iret
dec
mov
test
push
popf
xchg
(bad)
and
mov
jns
mov
add
xchg
xchg
jns
ins
dec
sbb
xchg
mov
xchg
xchg
clc
inc
add
jns
cmp
cs
xlat
std
mov
rcr
jp
int
(bad)
loop
lahf
sub
adc
js
push
scas
mov
cli
(bad)
rcr
out
outs
lea
test
gs
data16
mov
mov
push
and
sub
and
outs
push
arpl
sub
push
xchg
clc
jle
dec
jge
gs
leave
add
sbb
call
fbstp
adc
xchg
inc
mov
in
push
lods
mov
cmp
ficom
int
cmps
sar
push
push
aas
rol
ins
or
push
push
aas
mov
inc
bnd
test
pusha
movs
lods
pop
scas
dec
dec
lods
xchg
add
and
and
in
cdq
aad
push
clc
mov
lahf
loopne
xchg
(bad)
sti
ins
mov
aas
mov
sub
bound
push
loope
mov
xor
(bad)
jge
and
(bad)
pop
add
pop
cld
inc
jns
aad
clc
inc
ja
adc
out
or
mov
addr16
xchg
fist
test
stos
push
scas
mov
mov
adc
sub
jl
fs
pop
cmp
cdq
push
adc
dec
stos
push
pop
jnp
xchg
push
fdiv
jle
rcl
dec
xchg
movs
jbe
dec
mov
add
xlat
xor
das
jge
fmulp
cmp
inc
or
and
push
clc
or
(bad)
xchg
pusha
js
dec
neg
adc
push
and
jns
mov
fidiv
bound
inc
fsubr
dec
jge
ja
add
inc
jns
and
push
jle
stos
cli
in
xor
sbb
mov
mov
pop
nop
icebp
lods
jge
sbb
dec
cmc
cmp
push
push
mov
leavew
sub
cwde
jb
pop
dec
icebp
jnp
repnz
imul
mov
jecxz
data16
cwde
push
push
mov
call
pop
and
cmp
retf
movs
neg
test
sub
dec
mov
jnp
popf
pop
jae
aaa
sub
inc
movs
movs
mov
mov
sub
pusha
push
mov
inc
shr
sti
pop
jno
ins
and
or
data16
xor
(bad)
movs
inc
push
cmp
xchg
adc
cli
rcr
add
out
sti
sbb
mov
mov
iret
aad
jne
ficomp
ror
pop
jns
rcl
dec
mov
pop
add
js
add
dec
push
and
sahf
fistp
and
pop
imul
inc
test
ror
add
push
inc
xchg
sbb
jnp
imul
aaa
and
add
mov
and
add
or
ret
pandn
xchg
dec
sub
out
out
int
and
aaa
dec
and
cwde
and
das
outs
sar
push
mov
pusha
mov
out
(bad)
push
movs
pop
jnp
pop
dec
xor
sub
test
adc
sub
gs
fdiv
leave
and
icebp
inc
mov
adc
sbb
xor
push
push
or
or
cmps
xchg
jmp
inc
xchg
ja
repnz
pushf
and
mov
out
xchg
xchg
pop
push
xor
mul
mov
out
jno
jmp
ja
mov
in
ins
imul
out
sub
in
sub
jbe
or
jmp
adc
inc
pusha
dec
inc
mov
mov
mov
cmp
fst
sbb
dec
lea
mov
push
and
rol
and
imul
jle
sti
(bad)
pop
or
xor
aas
push
mul
xchg
fimul
cmc
sbb
ins
inc
push
push
jmp
adc
cmps
adc
sbb
jae
imul
mov
pop
xchg
dec
test
int3
xor
mov
pushf
mov
in
mov
xor
pusha
in
lahf
(bad)
je
jnp
pushf
cwde
repnz
(bad)
sti
pop
mov
jp
std
xor
cmp
xor
mov
xchg
cmps
pop
push
scas
lahf
and
ret
or
cmp
xchg
scas
cmp
in
push
xlat
iret
loopne
dec
or
outs
test
sbb
in
es
pop
or
and
add
scas
aaa
imul
xchg
jne
inc
ins
add
and
out
leave
adc
cmp
out
cmp
mov
or
cmps
imul
jno
sbb
adc
ds
je
icebp
mov
test
(bad)
data16
add
in
mov
js
enter
xchg
push
mov
and
sub
mov
ret
(bad)
sub
dec
xor
fisubr
(bad)
fstp
adc
ja
test
and
mov
sbb
add
inc
retf
enter
sahf
loope
mov
daa
es
imul
mov
jmp
adc
fldcw
ror
nop
inc
sbb
out
jno
push
adc
and
or
xchg
cmp
add
or
into
or
push
or
std
test
cs
std
cli
and
stos
ja
fstp
mov
scas
popf
mov
sbb
int
(bad)
mov
pop
out
retf
shr
sub
and
(bad)
rcr
rcr
retf
loop
leave
inc
pushf
shl
mov
pop
(bad)
pop
sbb
(bad)
inc
xchg
shr
mov
movs
xor
xor
xchg
push
scas
cmp
and
sbb
dec
clc
aad
cmp
pop
pushf
or
call
push
movs
mov
mov
ret
les
add
aam
jl
nop
mov
mov
sub
adc
xchg
popf
cli
or
retf
fwait
jp
iret
lods
push
or
push
sahf
(bad)
stc
add
inc
movs
pop
sub
loopne
pop
aaa
mov
cmp
rcr
lods
sub
cmp
sbb
cmps
pop
cmp
iret
ins
in
xchg
push
fistp
sbb
loope
or
jg
ds
inc
push
outs
and
cld
push
jle
retf
std
in
sbb
mov
and
lds
movs
jmp
ret
dec
pop
add
rcr
ret
sbb
movs
sub
xchg
or
aad
ds
out
dec
pop
sbb
push
mov
inc
pop
into
and
dec
mov
fisttp
jno
sbb
sbb
sti
icebp
rol
sub
mov
int3
rcr
mov
xchg
pop
les
js
lahf
mov
cmc
or
(bad)
test
xchg
mov
or
sar
xchg
fnsave
sub
lods
call
cmp
outs
loop
(bad)
dec
and
xchg
mov
mov
icebp
jmp
lds
sbb
test
cmp
lods
ja
and
retf
pop
in
jecxz
add
cld
sbb
cmp
in
mov
or
jnp
shl
retf
mov
pop
jge
sti
ror
idiv
cmp
add
xchg
dec
xchg
and
pop
xchg
mov
retf
in
inc
jbe
mov
pop
inc
mov
cli
mov
in
sbb
xor
leave
not
push
test
xchg
add
ins
aas
rdmsr
das
iret
(bad)
idiv
cmp
rcr
jmp
xchg
push
mov
(bad)
stos
jbe
add
addr16
loopne
mov
mov
shr
pop
dec
nop
adc
jmp
mov
xor
sbb
fstp
ficomp
jnp
mov
js
ins
das
repnz
in
or
pop
lods
mov
xor
scas
movs
adc
cmp
xchg
pop
test
pop
push
or
mov
repz
pusha
jno
addr16
jl
loop
jb
pop
and
in
rcl
mov
inc
jo
mov
call
jns
jmp
xor
(bad)
lock
inc
scas
addr16
and
or
cli
rep
rcr
xchg
sub
push
iret
adc
scas
push
inc
je
add
and
mov
dec
stc
xchg
or
shr
fs
lods
retf
sbb
xor
shl
or
icebp
scas
pusha
mov
icebp
add
aaa
mov
fcomp
nop
daa
aam
cmp
pop
jg
popf
retf
inc
or
xchg
xor
cmp
inc
jmp
xchg
fld
(bad)
jne
mov
das
xchg
nop
mov
sub
xchg
mov
mov
jmp
daa
nop
pop
sbb
int
es
call
mov
les
dec
(bad)
xor
test
fcomp
sti
pop
aas
mov
push
jmp
fidivr
fsub
pop
mov
push
sbb
dec
inc
inc
jo
mov
mov
or
jmp
sbb
ins
ins
movs
jns
nop
add
bound
std
and
fisub
sub
mov
xor
cmp
xchg
xlat
in
loope
push
xor
xor
test
inc
out
ss
ja
inc
fprem
cwde
dec
cmp
out
jmp
push
cmp
jbe
lea
out
inc
ins
mov
and
lea
cld
stc
arpl
js
add
(bad)
stc
mov
scas
sub
fisttp
push
sub
and
stos
add
jp
scas
or
in
and
or
(bad)
and
loop
push
adc
sahf
or
or
scas
ret
call
cli
out
jmp
xor
jae
push
dec
ror
sub
pop
shr
lods
mov
adc
ret
iret
(bad)
sar
mov
mov
aaa
xor
std
xor
xchg
stos
loopne
pop
xor
aas
xchg
mov
pop
sbb
mov
adc
jmp
cmp
pop
add
scas
test
(bad)
loope
retf
fbstp
mov
xchg
xor
push
in
js
vphsubdq
cmp
shl
bnd
adc
je
retf
das
adc
test
loope
loope
fcom
push
in
arpl
js
sbb
inc
cmp
icebp
daa
add
and
rcr
call
and
enter
xchg
outs
retf
sub
or
pop
fmul
and
pop
dec
xor
inc
(bad)
test
leave
push
cs
or
or
dec
jbe
xchg
mov
mov
push
dec
push
hlt
mov
fld
sbb
xchg
sub
dec
les
xlat
xor
pop
jo
jmp
mov
lahf
iret
inc
gs
(bad)
fldenv
jb
pop
cmps
adc
cli
and
push
mov
into
pop
dec
inc
or
jno
jmp
mov
popf
or
arpl
pop
inc
ja
movs
pop
aad
push
fs
aam
scas
es
mov
xchg
(bad)
aas
sbb
xlat
into
retf
sar
into
stos
jle
je
dec
add
mov
mov
(bad)
xchg
cld
cwde
imul
out
adc
sub
out
xchg
shld
adc
push
lods
std
movs
push
xchg
add
bound
jmp
pop
push
mov
arpl
pop
mov
push
mov
jns
dec
jmp
sbb
out
fcmovbe
mov
push
rcr
inc
fadd
mov
dec
push
jge
sub
mov
xlat
ins
stos
sub
xchg
fist
adc
xchg
push
inc
jae
fbld
jbe
push
scas
dec
jl
adc
adc
and
cmc
dec
call
add
xor
in
ja
adc
push
sti
inc
sub
iret
xchg
(bad)
out
xchg
mov
ffree
data16
xchg
adc
cmp
push
out
(bad)
pop
arpl
(bad)
jmp
loope
daa
jns
out
aaa
jb
mov
xchg
pop
retf
ins
adc
les
mov
gs
dec
out
int
les
and
retf
jno
cmps
ss
addr16
rcl
or
sub
inc
xor
ins
ja
jl
mov
(bad)
adc
retf
dec
cmp
lds
(bad)
imul
jb
js
pop
jns
in
(bad)
out
ret
cdq
pop
xchg
test
and
or
imul
mov
jns
cmps
lds
dec
cmps
fcomp
pusha
add
fst
adc
add
mov
repz
add
inc
mov
icebp
shl
sub
pop
enter
imul
add
and
dec
aaa
das
sbb
nop
adc
repz
cmp
jle
(bad)
aaa
inc
cmp
push
adc
test
cmp
or
fcom
(bad)
ja
xor
jl
pop
js
dec
hlt
jns
push
nop
out
test
cwde
sbb
out
adc
cmp
pop
jb
jo
shl
xchg
es
sbb
add
xchg
leave
mov
test
mov
ins
test
mov
imul
add
rcl
out
adc
sub
in
(bad)
pushf
(bad)
sbb
mov
in
mov
mul
push
mov
loop
pop
and
ins
cmc
ds
loopne
iret
idiv
inc
fisttp
push
lods
out
fbstp
icebp
add
int3
jmp
shl
pop
jno
call
test
ss
cmp
outs
add
jns
out
push
xor
xchg
ss
test
push
push
push
movs
and
nop
hlt
lods
data16
sbb
push
pop
out
nop
stos
pop
jne
mov
fstp
push
shr
(bad)
aas
in
aad
imul
mov
imul
sti
es
(bad)
std
jg
cmc
pushf
gs
pushf
pop
(bad)
iret
push
addr16
push
jb
gs
not
lock
(bad)
call
sbb
xchg
jecxz
xchg
jo
push
mov
jnp
push
scas
in
or
mov
jne
sbb
mov
jecxz
or
iret
dec
jle
xor
and
xor
nop
mov
rol
xchg
cli
add
loop
test
mov
mov
xchg
jnp
or
dec
dec
jnp
push
push
mov
rcr
enter
stc
and
syscall
pop
es
sub
mov
cmp
inc
push
scas
mov
fisttp
pop
inc
jge
or
mov
sub
push
push
pushf
add
mov
test
outs
cdq
aad
lea
call
mov
dec
jb
push
test
retf
inc
cmp
out
dec
jmp
inc
mov
cwde
and
ss
aaa
cmp
xchg
popf
punpckhbw
movzx
adc
xchg
cdq
add
lock
test
xor
jl
mov
out
ins
xchg
js
dec
jne
aaa
addr16
cld
push
out
dec
jp
jb
imul
aam
xlat
cli
sub
mov
and
int3
jmp
and
es
shl
int
adc
(bad)
xchg
test
xchg
mov
shl
lods
cmp
add
inc
and
dec
inc
xchg
cwde
stc
enter
sbb
jg
in
xor
sbb
repnz
dec
jo
fld
xor
popf
push
jbe
adc
test
sub
jns
push
push
cmp
sub
ss
inc
stos
and
jo
nop
inc
addr16
inc
inc
jg
inc
pop
jbe
or
push
dec
sbb
pop
xlat
mov
sbb
in
sbb
xor
inc
cmp
loope
mov
pushf
and
fs
sub
inc
push
enter
call
mov
int
aad
fcom
sbb
sub
pop
jg
xchg
ins
int
or
mov
add
dec
sbb
and
xchg
cmp
xor
and
test
push
push
out
jle
out
xor
jle
shl
adc
fcom
cmps
(bad)
xchg
mov
mov
pushf
add
sbb
jbe
fsubr
popa
pop
leave
adc
fimul
out
add
inc
mov
xchg
add
int3
sti
push
pop
movs
pusha
push
mov
and
int
rol
shr
(bad)
in
(bad)
mov
imul
adc
and
sub
and
cmp
push
sbb
mov
push
lods
cmp
xor
push
jno
mov
nop
xor
out
mov
cld
push
cli
rol
and
rcr
pop
dec
out
jno
int
mov
cmp
mov
cwde
and
imul
cmp
sub
sub
pop
retf
cdq
(bad)
and
(bad)
mov
je
into
push
jno
xchg
dec
cmc
jp
sbb
rcl
xor
inc
and
jno
cmp
ss
imul
stos
rol
pusha
rol
dec
js
jae
push
mov
ja
xor
in
jecxz
dec
fidivr
into
js
retf
(bad)
int
adc
es
sub
aaa
ins
repnz
cmp
loopne
dec
movs
imul
or
lods
das
and
mov
into
push
add
pop
push
sub
pop
pop
test
imul
xchg
cld
aas
add
arpl
mov
and
mov
sub
outs
ror
sub
push
sub
jbe
bound
xchg
cmp
xchg
out
push
adc
jmp
mov
cdq
rol
inc
jmp
out
jmp
imul
mov
sub
ja
and
and
scas
lods
(bad)
cld
stos
jns
test
outs
xchg
cmp
(bad)
xchg
mov
mov
dec
sub
inc
dec
mov
and
inc
test
jg
xchg
out
ja
push
aaa
pop
mov
sahf
add
test
inc
or
add
ss
sub
shr
ja
jne
sub
mov
cwde
push
shl
sbb
inc
xchg
pop
xor
inc
in
fisubr
mov
outs
or
aad
adc
sbb
xchg
dec
adc
sub
fild
and
jne
not
pusha
fwait
sbb
daa
pop
mov
inc
inc
bnd
out
xchg
xchg
inc
popa
fwait
sbb
dec
mov
loope
push
adc
in
mov
and
mov
cmp
sub
cmp
push
pop
fs
add
or
xchg
xchg
sub
(bad)
iret
dec
adc
(bad)
popaw
(bad)
sub
movs
cmps
jnp
inc
mov
push
sub
(bad)
imul
loope
mov
ret
fild
les
push
into
adc
retf
jb
data16
data16
pop
mov
nop
xchg
fcom
xchg
js
mov
push
psubb
push
cdq
mov
cmp
fmul
push
jnp
ds
mov
or
xor
(bad)
cld
adc
add
sbb
sbb
movs
inc
add
fs
and
and
mov
outs
add
sub
sub
or
in
cmps
(bad)
pop
idiv
rcl
rcl
sbb
mov
cmp
xchg
retf
ja
pop
out
sbb
push
pusha
leave
sbb
ins
pop
(bad)
mov
add
dec
outs
stos
aas
(bad)
(bad)
sbb
stos
hlt
push
push
add
test
mov
sahf
fwait
pop
scas
(bad)
lods
or
push
or
fnstenv
or
mov
lock
popf
test
add
or
outs
enter
push
movs
cmp
loopne
jb
loope
sub
adc
sar
(bad)
or
jle
in
cwde
or
ss
lods
in
mov
loope
fwait
repz
scas
dec
pusha
imul
pop
addr16
fwait
push
scas
jo
and
xchg
std
jnp
lea
cmps
movs
jb
inc
mov
out
pop
dec
test
test
xlat
jb
call
int
(bad)
rol
int3
ffree
push
fadd
mov
adc
adc
mov
clc
sbb
pop
arpl
js
add
or
or
arpl
xchg
jmp
mov
bound
mov
call
das
outs
sub
xor
mov
pop
sahf
mov
popa
sbb
xchg
mov
and
dec
ret
pop
push
xor
aas
pushf
or
sbb
mov
or
ror
cvtps2pi
sti
ret
cmp
and
mov
or
push
mov
(bad)
(bad)
jmp
js
je
dec
cmp
jmp
pop
dec
imul
sub
aad
hlt
sti
fidiv
ss
and
xor
jbe
push
jmp
mov
push
ret
and
ss
and
xchg
xchg
pop
cdq
popa
test
cmps
cmc
or
pop
in
int
stos
push
xor
aaa
clc
sbb
dec
in
pop
sahf
xor
adc
pmuludq
fidiv
mov
retf
ss
loop
sub
xor
bound
pop
jae
mov
xor
ins
cmp
and
clc
and
fild
or
dec
adc
xor
pusha
cs
xchg
call
sub
std
cmps
je
fimul
aas
xlat
popa
mov
push
ror
pop
pop
mov
and
out
mov
scas
adc
lods
adc
lahf
inc
inc
mov
and
xchg
out
push
mov
inc
out
add
das
lock
cmp
add
xor
fst
hlt
rol
inc
push
cmp
(bad)
dec
adc
pop
push
repnz
cmps
cmp
inc
mov
lahf
out
shl
jnp
mov
mov
cmp
lock
xchg
sbb
cmp
vpsubsb
in
pop
inc
addr16
rcr
jmp
sub
lds
jbe
jl
cmp
add
sub
test
push
movs
push
jae
fadd
scas
enter
(bad)
pop
out
and
fs
jmp
das
dec
adc
adc
or
call
in
gs
xchg
test
pop
fstp
mov
sbb
add
push
xor
int3
test
loop
and
shl
pop
lds
popa
mov
or
cwde
shl
iret
or
dec
imul
jno
push
out
repz
push
cmp
xor
dec
adc
xchg
dec
or
ror
loope
pop
and
sbb
pop
or
inc
call
sbb
pop
ficom
push
fwait
loopne
movs
les
add
cwde
jecxz
enter
add
push
data16
mov
sbb
xor
fist
movs
cmc
daa
xlat
aas
sub
out
lahf
inc
xor
and
mov
xchg
pushf
not
clc
call
push
and
dec
add
popf
mov
cwde
in
outs
jl
ins
popf
mov
dec
add
sbb
adc
xor
add
enter
ja
cwde
fcom
cmp
cmp
test
add
pop
call
dec
and
fsubr
dec
adc
retf
and
xor
push
or
dec
mov
in
data16
out
jbe
push
jmp
retf
int3
call
pop
mov
fsubr
inc
loopne
ret
aaa
xchg
dec
cli
loopne
outs
cmps
(bad)
imul
lods
mov
adc
lock
stos
popa
cmp
aad
stc
sbb
enter
add
sbb
or
pcmpeqb
sbb
in
mov
and
pop
mov
leave
push
and
nop
push
and
cmp
in
mov
and
ret
jne
mov
ficom
stos
retf
xchg
aaa
mov
aaa
mov
xchg
bound
sub
mov
push
xchg
mov
mov
push
pop
push
inc
(bad)
mov
ss
add
dec
shl
mov
dec
mov
(bad)
sub
sbb
out
leave
mov
xchg
enter
inc
cld
sbb
nop
imul
jno
jle
inc
mov
push
jno
ror
rcl
and
inc
into
inc
dec
jl
das
mov
lsl
cld
and
(bad)
imul
ret
adc
repnz
xor
lahf
sub
jae
cli
add
cmp
push
les
jmp
pop
mov
ins
jg
repz
ss
push
mov
inc
mov
mov
ret
std
fcomp
mov
in
lods
pop
xchg
mov
dec
xchg
and
test
mov
pop
mov
xchg
popa
push
adc
mov
dec
jecxz
outs
not
inc
iret
mov
jge
jb
stos
cld
push
mov
aad
out
call
idiv
or
mov
test
lds
push
inc
jp
mov
or
sbb
cmp
and
ret
push
sub
out
lea
and
not
add
xchg
das
sti
das
cmps
in
lock
mov
cmp
sub
pop
push
sbb
mov
movs
in
mov
sub
jecxz
ins
imul
sub
shl
jp
cld
stos
xor
and
or
and
aas
sar
xchg
test
ins
or
shl
shl
outs
cwde
mov
adc
data16
sbb
inc
cmp
sub
movs
inc
or
inc
aas
mov
cmp
daa
mov
mov
push
aas
lea
rcl
dec
loope
idiv
mov
bound
xor
sbb
fisubr
das
inc
cmp
push
xchg
dec
push
fsubr
shl
sub
cmps
stc
ret
pop
mov
or
lods
xor
add
mov
aaa
dec
mov
fisubr
mov
fwait
test
inc
mov
pop
and
pop
mov
bound
fadd
xchg
inc
jbe
out
xchg
jmp
inc
fild
or
mov
loop
fadd
dec
inc
push
pop
lds
bnd
bound
xchg
pop
push
call
test
ret
js
add
fisub
jp
xlat
js
adc
ss
in
dec
and
cmp
jae
fistp
push
jmp
not
cli
addr16
das
or
out
mov
fld
aad
sbb
fimul
pop
inc
cmp
cs
stos
mov
sbb
add
je
outs
push
(bad)
movs
push
ficomp
mov
or
xchg
and
xchg
jge
push
jp
xor
outs
iret
rcr
xchg
add
push
pushf
sub
fcomp
sti
and
call
ret
into
xchg
lahf
dec
mov
mov
dec
xor
jp
cmp
mov
repnz
iret
sub
xlat
(bad)
(bad)
jecxz
pop
retf
popa
mov
ficom
jmp
cmp
ror
scas
push
cs
punpckhwd
call
cmp
retf
cmps
or
xchg
mov
dec
xor
add
imul
(bad)
out
clc
add
mov
xor
jmp
in
dec
mov
jl
and
sar
cmp
ds
xlat
sti
ret
aas
add
mov
into
rcr
rcl
adc
or
and
xchg
inc
mov
popa
jne
push
xchg
rcr
or
fimul
test
mov
(bad)
jne
imul
es
mov
add
add
pop
and
push
call
adc
call
and
mov
xchg
jb
int
in
out
aas
jns
mov
mov
mov
fimul
xchg
pop
dec
imul
dec
lods
jmp
mov
push
add
nop
cmps
sub
sub
loopne
sbb
pop
dec
mov
aaa
aaa
add
xchg
or
or
pop
ja
dec
enter
frstor
push
cmp
fxch
(bad)
or
inc
cmp
pop
(bad)
xor
out
jbe
int
(bad)
jae
cmp
movs
push
(bad)
idiv
lods
and
imul
push
cmp
outs
rcl
mov
jae
(bad)
fucom
gs
das
stos
icebp
leave
jbe
add
test
(bad)
(bad)
js
pop
rcl
mov
test
es
xchg
and
fisub
add
(bad)
jmp
mov
stos
fisttp
push
test
inc
mov
cmc
in
mov
mov
mov
in
cmc
lea
hlt
ins
dec
gs
mov
xor
pusha
jno
cli
jmp
retf
xchg
out
dec
add
xor
xchg
xlat
push
inc
and
out
add
pop
xchg
push
cmc
push
mov
cmp
jnp
into
mov
fcomi
add
and
xchg
nop
pop
push
and
push
fadd
fist
imul
das
push
nop
pop
inc
scas
push
push
dec
rcr
outs
retf
xchg
lock
mov
ss
or
push
fnstsw
out
pop
out
dec
push
dec
rol
add
fstp
in
sar
jae
mov
std
int
push
jecxz
or
mov
jns
mov
jge
pop
or
(bad)
adc
sbb
jo
xchg
mov
outs
mov
fwait
sbb
ret
(bad)
mov
and
sahf
mov
pop
mov
jae
jmp
js
jo
adc
in
int3
test
(bad)
jle
mov
ss
inc
cmp
adc
mov
mov
jbe
mov
add
retf
mov
cmps
and
pop
ins
enter
fistp
push
and
xchg
pop
pop
arpl
mov
pop
mov
cmp
push
dec
push
jl
rcl
popa
sub
lea
(bad)
dec
not
jl
repz
lods
ds
push
call
dec
fstp
(bad)
xchg
xchg
sar
retf
xchg
mov
(bad)
jo
movs
fadd
daa
inc
loop
xchg
xchg
mov
lods
pop
xchg
out
sahf
mov
xchg
fwait
lahf
sub
sbb
jge
sbb
add
pushf
repz
sbb
imul
shl
mov
sub
(bad)
xchg
adc
or
not
jg
cmp
inc
or
lds
adc
cmp
xchg
(bad)
adc
popa
push
std
inc
sbb
adc
cmps
add
xchg
mov
iret
xor
mov
sub
loope
or
por
popf
adc
cld
aam
jle
sub
xchg
lock
adc
sbb
and
out
and
jecxz
add
dec
stos
lahf
mov
int3
mov
mov
pop
(bad)
dec
xor
mov
pop
aad
push
loop
add
iret
cld
pusha
jbe
call
sbb
rcl
mov
jmp
push
push
clc
ins
inc
idiv
adc
pop
out
loope
and
dec
push
inc
xchg
and
aaa
repz
sub
std
je
(bad)
stc
mov
sti
or
push
cmp
push
cli
push
cmps
aam
fdiv
adc
push
shr
adc
psllw
leave
in
stos
test
lods
dec
ror
jnp
mov
push
inc
out
jl
and
push
pusha
pop
test
dec
xor
inc
dec
adc
arpl
mov
std
sti
xchg
lea
sub
xor
mov
ror
mov
sahf
inc
je
push
and
rcr
in
jmp
pop
inc
leave
push
adc
mov
xlat
pop
scas
test
mov
add
fs
and
stc
dec
pop
loop
push
inc
aam
(bad)
xchg
lds
add
nop
pop
mov
mov
adc
stc
nop
(bad)
mov
sbb
test
jo
popa
iret
test
pop
sub
jmp
push
(bad)
and
xchg
inc
sub
sbb
loope
cmp
mov
cmps
inc
icebp
js
jb
xchg
xchg
xor
add
or
mov
and
addr16
add
ds
and
sub
stos
or
fwait
ins
test
fs
xchg
mov
and
inc
imul
fmul
jnp
ds
stc
push
es
inc
std
int3
popa
cmps
scas
xchg
adc
pop
xchg
mov
sahf
test
mov
add
or
mov
mov
bound
cwde
loope
sub
adc
jmp
cmp
loop
dec
and
ss
inc
fstp
ret
das
adc
push
les
and
xchg
adc
xchg
mov
(bad)
adc
inc
xor
shl
out
add
mov
lahf
inc
repnz
dec
int
mov
cmps
in
cli
cs
pop
pusha
mov
cmc
int3
xor
js
fimul
call
and
or
mov
mov
jl
pop
push
push
pop
and
test
mov
and
xchg
rcr
stc
idiv
retf
mov
sub
daa
pop
push
inc
clc
fucomi
add
mov
push
sbb
inc
ins
ss
pop
and
(bad)
dec
dec
stc
inc
sbb
pusha
nop
sbb
cmp
popf
call
jmp
xor
or
dec
(bad)
cs
outs
repnz
ss
out
clc
out
fbstp
xchg
pop
out
push
mov
lods
outs
push
movs
sbb
ret
fs
push
aam
dec
jo
push
and
outs
sbb
jns
pop
pop
repnz
jecxz
mov
shl
stc
fistp
lahf
pop
push
pop
int3
fcomp
test
add
lock
jo
inc
add
aad
mov
retf
out
jne
ss
inc
sub
mov
xor
inc
stos
cs
shl
bnd
pop
into
xchg
sub
mov
shr
(bad)
pop
fdivr
not
popf
cdq
fs
nop
jmp
ficomp
mov
lahf
inc
jge
stos
cwde
mov
or
sbb
xlat
or
dec
ret
pop
repnz
ror
ret
xchg
shr
xchg
sub
xor
jno
jne
sar
loop
xor
outs
adc
int3
les
cmp
sub
call
jg
iret
repnz
loopne
xor
xor
or
inc
imul
sub
push
push
or
xor
aad
les
sub
(bad)
xor
leave
sub
add
(bad)
nop
std
outs
jle
cld
mov
jnp
mov
dec
sbb
enter
push
mov
dec
inc
mov
sbb
sub
popa
pop
add
xor
inc
push
bound
cmps
fstp
and
leave
add
xchg
pop
std
adc
sub
add
in
cmp
push
call
xchg
adc
in
or
adc
cmp
mov
cmp
or
(bad)
mov
cmps
mov
add
xchg
in
jmp
and
les
jno
cdq
adc
xchg
or
outs
inc
push
out
jl
fwait
pop
adc
fldcw
push
dec
mov
fdivr
inc
pop
(bad)
into
push
sbb
mov
shr
mov
call
mov
int3
push
popf
and
cmc
push
xchg
scas
mov
mov
je
mov
xchg
push
adc
mov
lods
mov
adc
fmul
xchg
xor
retf
push
repnz
mov
test
fdivr
test
ja
mov
jmp
mov
cs
fild
aam
xor
mov
mov
pop
push
clc
pop
inc
es
loope
push
enter
das
outs
xor
test
test
je
cmp
iret
inc
in
mov
into
cmps
jmp
out
xchg
inc
enter
jmp
inc
loop
hlt
and
test
cmp
int
pushf
jae
inc
scas
push
push
mov
mov
repz
in
pop
xchg
retf
or
aas
aad
mov
std
sti
fs
outs
pushf
popf
sar
mov
pusha
test
push
repz
iret
and
xor
je
adc
addr16
icebp
mov
cld
adc
test
push
xlat
inc
hlt
cmp
and
jg
or
dec
sub
shr
out
mov
adc
std
outs
arpl
jne
outs
aad
jno
test
xchg
ficom
(bad)
(bad)
jle
adc
out
push
inc
push
clc
cmps
outs
stc
dec
add
xchg
jne
cmp
scas
fldcw
push
and
or
jne
jno
inc
push
xlat
lds
scas
rol
mov
test
and
repnz
mov
inc
(bad)
jg
mov
jg
iret
dec
(bad)
jge
stc
pop
rcl
fnstsw
fdiv
dec
mul
xor
mov
cmp
jno
jmp
pop
mov
dec
sahf
stos
or
push
shl
jae
and
aas
in
dec
lods
bound
jle
(bad)
scas
call
aas
sub
adc
outs
jne
dec
mov
jp
jbe
ss
dec
push
(bad)
jmp
sahf
sahf
sub
cmp
xchg
ret
pop
int3
pop
cs
inc
or
retf
loopne
pop
iret
add
repz
add
lahf
mov
mov
jg
lods
push
in
sbb
test
mov
adc
jmp
adc
aad
mov
in
movs
dec
pop
daa
jns
(bad)
sahf
jp
inc
sub
cmp
cdq
(bad)
nop
daa
dec
fld
jl
adc
in
cli
sub
mov
rcl
adc
js
(bad)
adc
inc
or
ror
adc
sbb
std
adc
out
loope
mov
clc
arpl
out
cli
pop
fnstenv
in
inc
sbb
xor
in
sbb
xor
sub
sbb
lea
xlat
stos
fwait
cwde
adc
xchg
push
shl
out
xchg
push
pop
iret
or
mov
mov
cli
mov
cmps
push
fs
mov
mov
xchg
out
popa
xor
mov
test
sbb
pop
adc
xor
push
repz
push
xlat
jae
mov
pop
pushf
cmp
bound
enter
or
dec
loopne
push
pop
jp
jns
xchg
fistp
xchg
loopne
in
xchg
jmp
xlat
scas
repnz
aam
gs
(bad)
xor
sub
dec
jecxz
jnp
or
cmps
mov
(bad)
test
repz
outs
xlat
or
mov
repz
ds
or
mov
mov
out
cmp
ds
cmp
es
fst
pop
dec
pop
sub
jno
(bad)
cmp
sbb
adc
imul
dec
jmp
jo
mov
jb
push
push
xchg
stos
xor
mov
inc
scas
xchg
cmc
sbb
cmp
sub
pop
fadd
call
adc
rol
sub
(bad)
in
mul
xchg
or
mov
inc
cmp
jle
mov
dec
cmp
pop
pop
dec
iret
(bad)
vpshuflw
add
nop
jns
mov
pop
mov
into
or
std
sub
sbb
sbb
push
repnz
inc
push
cmp
clc
cmp
call
cdq
imul
clc
jno
nop
hlt
(bad)
test
pop
pop
sub
sub
push
hlt
sbb
fadd
mov
repnz
cmp
jb
movs
mov
mov
jg
(bad)
repnz
test
mov
mov
dec
mov
stos
mov
mov
jmp
push
and
les
call
ja
repz
or
in
mov
dec
int3
jmp
jno
inc
dec
jne
mov
push
ffree
shl
cmp
scas
pop
mov
sbb
cmp
call
gs
and
sub
mov
cs
les
mov
stc
and
xchg
cmp
enter
adc
mov
jns
mov
and
bound
pop
cmps
sub
pop
(bad)
aaa
lods
or
std
xor
dec
lahf
xchg
daa
jle
add
adc
loopne
pop
jo
or
loopne
test
mov
in
popa
inc
jge
sti
rcr
scas
dec
push
sar
push
scas
jecxz
stc
std
mov
pop
es
fwait
retf
adc
scas
call
xchg
push
fwait
add
stc
das
mov
ss
add
push
add
sti
adc
inc
pop
inc
inc
xor
lea
mov
or
popa
mov
sub
test
fs
sub
jae
sar
(bad)
adc
add
sahf
mov
xchg
int3
add
stos
xor
ror
in
iret
outs
loope
enter
icebp
loope
cmc
shl
(bad)
jl
sbb
scas
lods
fld
adc
push
mov
int
inc
into
adc
xor
daa
mov
scas
mov
into
mov
and
test
xabort
in
enter
stos
inc
stos
ins
nop
ins
iret
push
or
dec
jmp
retf
daa
cwde
nop
sub
int3
and
jnp
push
ds
cdq
aam
pop
lods
mov
sbb
shl
aad
inc
cmp
inc
in
push
or
jo
aaa
add
xor
jecxz
stos
shr
mov
mov
push
icebp
ror
mov
mov
scas
push
sbb
icebp
pop
push
int
mov
xor
rcl
xchg
int3
sbb
jle
mov
iret
addr16
pop
xchg
(bad)
shr
cmps
add
mov
lods
into
pop
cmps
fs
fistp
scas
jbe
cmp
movs
cmp
jns
mov
(bad)
(bad)
scas
fcmovne
cmp
aaa
rol
mov
fmul
iret
rcr
dec
and
push
mov
ja
popf
jae
jo
jge
mov
aaa
xor
js
les
xchg
xchg
sub
jne
scas
ss
mov
fnstsw
jge
dec
arpl
and
inc
aam
sti
(bad)
mov
jo
sbb
cmps
adc
or
jae
dec
push
pop
dec
in
cmp
das
(bad)
loopne
and
push
or
xor
add
outs
adc
fwait
mov
pop
fcom
lea
cmps
jle
icebp
xchg
in
and
sbb
add
js
repnz
mov
cld
jae
lods
add
add
push
test
pop
xchg
jo
xor
sbb
mov
mov
xchg
ins
aad
jp
add
cmp
aam
shl
in
hlt
mov
ins
pop
adc
mov
mov
imul
icebp
test
jno
std
je
dec
lock
or
inc
not
stos
sbb
inc
push
icebp
dec
cmp
jbe
movs
loopne
push
push
pop
imul
inc
mov
add
mov
clc
sub
pop
jmp
pop
mov
cld
xchg
cwde
mov
icebp
addr16
inc
icebp
adc
cpuid
shl
in
dec
pusha
les
dec
cdq
push
inc
sahf
pop
loop
adc
ja
test
cmp
int3
mov
cdq
inc
inc
lahf
cli
xor
inc
sahf
add
out
dec
int
mov
push
dec
mov
inc
inc
das
xchg
aas
in
push
stos
clc
jo
xchg
inc
(bad)
push
daa
add
pop
pusha
pand
mov
(bad)
call
cmps
neg
mov
(bad)
inc
fdivr
mov
jnp
leave
cdq
pop
jmp
stos
pop
sub
xlat
inc
fsubr
aaa
dec
cmp
mov
pop
out
ret
stos
movs
adc
sub
push
sahf
cli
dec
stos
mov
in
inc
add
mov
xchg
js
pop
sbb
rcr
or
je
jns
push
xchg
test
adc
adc
mov
fwait
aam
push
jl
cmp
xor
pop
lds
xor
call
sub
fisub
push
xchg
push
mov
and
int3
xor
cld
add
push
mov
data16
stos
lea
cmp
sbb
in
ficomp
adc
xlat
data16
aad
out
nop
cli
out
add
ja
(bad)
and
mov
pop
jbe
xchg
cmp
mov
fwait
pusha
add
sti
xchg
adc
sbb
xor
mov
cmp
call
and
or
cmp
cmp
inc
mov
jnp
js
mov
lea
fild
out
mov
gs
(bad)
loope
xor
push
int
clc
and
cmps
in
mov
scas
cmps
outs
add
mov
push
cmp
out
adc
sbb
jl
dec
(bad)
sti
pushf
lods
aaa
sbb
data16
ins
int3
test
add
daa
lds
imul
repz
or
mov
push
cmc
mov
jae
cmp
cmp
clc
inc
dec
xchg
mov
xor
out
inc
in
push
sbb
push
adc
jg
dec
icebp
pop
pmuludq
push
outs
shl
jno
push
dec
add
xchg
aam
jmp
jg
push
std
fisubr
or
sub
sti
call
es
mov
cmp
cld
loop
(bad)
ds
std
inc
adc
xor
mov
pop
data16
mov
jg
xchg
add
jle
jp
in
pop
lock
jl
in
xchg
adc
mov
xchg
add
sbb
push
mov
scas
pushf
add
shl
cmps
jo
or
mov
ror
ins
popa
aas
adc
icebp
jne
mov
clc
nop
in
int
xchg
xchg
ins
cmp
fwait
jp
mov
push
xchg
pop
push
ins
retf
les
ins
add
pop
xchg
lock
jnp
neg
ror
sub
clc
repnz
pop
nop
push
test
pmaxsw
or
and
adc
sub
je
outs
fbld
jecxz
and
icebp
cmp
fcom
mov
xor
js
mov
xchg
es
mov
retf
and
or
dec
retf
jmp
push
sbb
push
xor
int3
lea
mov
mov
cli
cmps
leave
outs
push
mov
in
fwait
cmp
mov
ins
inc
xchg
mov
cmp
xchg
cmp
ret
sbb
add
adc
push
repnz
jle
or
outs
addr16
shl
pop
ja
cmp
adc
adc
jl
xor
(bad)
gs
ss
xor
adc
mov
popf
push
sahf
out
push
sar
inc
mov
dec
mov
xchg
aaa
mov
test
test
sbb
cmp
out
push
mov
mov
inc
dec
inc
dec
push
cdq
pop
test
fmul
mov
inc
sub
sbb
ss
mov
jns
dec
bnd
xor
lahf
nop
repnz
lods
popa
and
ds
fwait
call
or
ja
int3
fstp
sbb
(bad)
div
push
mov
ss
pop
enter
inc
adc
test
jmp
mov
push
xor
test
int3
adc
xchg
popf
movs
js
fnstcw
sahf
sbb
add
in
pop
xchg
push
fnstsw
sbb
loope
sbb
loope
scas
out
xor
xchg
sbb
cmp
addr16
faddp
pop
stos
(bad)
adc
addr16
xor
push
mov
xlat
push
sbb
loopne
jl
cmp
add
cmp
pop
inc
pop
xchg
jp
frstor
scas
sahf
daa
pusha
and
inc
cmp
xchg
cmp
sub
dec
push
repnz
data16
mov
cmp
cmc
and
dec
sar
lds
stos
jl
inc
popf
int
jne
lods
shr
sbb
and
cmps
pop
rcr
adc
and
jns
mov
adc
pop
in
push
outs
fistp
outs
adc
(bad)
sub
mov
adc
fcomp
lods
ror
xchg
aam
jmp
sbb
sub
inc
and
cli
adc
add
or
inc
loope
mov
fs
daa
or
xor
inc
arpl
push
test
push
adc
inc
(bad)
fxch
push
clc
dec
ror
push
addr16
es
jne
dec
push
cmc
inc
ins
cwde
mov
fadd
or
mov
(bad)
clc
out
xchg
push
mov
(bad)
dec
or
aad
js
out
lods
rcr
sub
xor
add
jmp
into
repnz
cmp
outs
fiadd
stos
inc
sti
push
mov
pop
cmps
mov
and
inc
mov
cmp
ror
scas
dec
les
xchg
aad
push
mov
push
ror
pop
je
xchg
sub
data16
daa
(bad)
test
or
sub
sbb
arpl
test
bswap
pop
mov
je
sbb
jae
dec
(bad)
fild
cmp
int3
jae
xchg
cmp
mov
lods
icebp
pop
cmp
js
jne
into
stc
sbb
jns
mov
ds
es
(bad)
cs
call
push
cmp
sbb
inc
repz
int
xchg
imul
or
cmp
ja
xchg
jae
jl
mov
ins
cmps
cmp
iret
and
into
push
inc
push
inc
imul
xchg
dec
js
clc
gs
mov
pop
mov
dec
push
push
jmp
loopne
sub
cwde
sub
xor
iret
jnp
call
mov
sub
or
and
mov
pushf
sub
retf
dec
les
clc
stos
xchg
lds
popa
dec
push
(bad)
push
inc
and
cmp
pop
jecxz
out
in
inc
stos
add
cwde
jo
push
mov
push
add
enter
test
ret
mov
xor
dec
repnz
hlt
or
(bad)
mov
ficomp
movs
cs
jnp
(bad)
rcl
cmc
and
rol
mov
mov
sbb
ja
push
test
dec
and
xchg
cmp
mov
mov
mov
icebp
pop
mov
cmc
xor
dec
adc
iret
adc
mov
jb
movs
(bad)
adc
arpl
(bad)
cmp
sub
das
sbb
jae
imul
adc
jp
dec
bswap
push
fninit
gs
pop
xor
jl
in
xchg
sti
xor
and
pushf
das
push
xchg
lods
repnz
add
sub
jne
ret
add
shl
lods
xchg
inc
sbb
or
pusha
push
mov
ins
scas
repnz
ss
call
fdivr
dec
inc
push
xchg
loop
sbb
and
gs
cmc
dec
add
nop
inc
pop
ins
cdq
mov
lahf
xor
inc
inc
lods
(bad)
adc
in
(bad)
lds
push
in
inc
jmp
jmp
es
mov
sbb
sub
cmp
std
sbb
jl
imul
inc
mov
or
pop
sahf
sahf
xchg
sub
mov
das
ins
pop
leave
mov
xor
jae
sub
clc
(bad)
cwde
xchg
out
and
stos
aas
sub
aad
ins
and
popa
ror
fsubr
xchg
sub
nop
dec
std
mov
and
pop
mov
test
xchg
pop
shl
pop
push
leave
mov
stos
adc
aam
pushf
push
movs
inc
mov
or
mov
enter
btc
neg
xor
cmp
mov
pop
movs
mov
idiv
pop
pop
or
xor
mov
into
mov
jo
push
dec
mov
mov
or
inc
mov
in
fdiv
outs
sbb
jmp
retf
dec
mov
dec
out
push
mov
popf
hlt
dec
xor
xor
fs
and
dec
out
ins
push
or
sub
imul
lds
and
add
xlat
adc
fwait
xor
xchg
lods
cmps
and
cmps
xor
dec
push
mov
mov
scas
pushf
shl
imul
mov
sub
pop
mov
imul
sbb
stos
mov
test
out
jb
test
aad
adc
rcr
mov
sbb
push
sbb
push
push
ins
js
jecxz
out
mov
sbb
or
int
push
daa
or
in
icebp
ins
cmp
jb
push
ror
mov
dec
mov
enter
movs
push
mov
pop
mov
mov
out
addr16
mov
int3
test
movs
cdq
cmp
shr
fiadd
fwait
loopne
imul
mov
out
(bad)
in
pop
xchg
std
jg
stc
mov
jmp
inc
sbb
push
pop
icebp
hlt
jo
xor
ja
sub
into
lahf
inc
imul
mov
xor
jne
mul
test
jbe
jne
adc
mov
(bad)
cmp
movs
popf
xor
call
ins
mov
inc
add
cli
add
push
jge
push
add
xor
in
pop
xor
mov
ffree
adc
or
xor
retf
inc
pusha
sub
int
aas
ret
xchg
and
add
jge
push
mov
(bad)
sbb
xor
cmp
leave
repnz
movs
or
les
pop
sub
imul
cmp
add
repnz
sbb
outs
inc
rol
pop
xchg
aad
inc
xchg
mov
aad
push
mov
dec
out
in
retf
jbe
lds
paddb
ins
sub
leave
xor
call
or
mov
or
sub
mov
push
inc
es
lock
jge
ret
out
or
mov
gs
ret
(bad)
cli
add
test
retf
mov
cmps
loope
ret
cmp
psrld
rcr
fidivr
scas
push
daa
ins
pop
popf
pop
scas
ss
jne
out
idiv
push
mov
cmp
mov
add
imul
xchg
ret
popf
pop
pop
pop
sub
nop
pop
leave
int
push
jae
adc
push
std
lds
xchg
(bad)
cmp
or
sbb
xchg
sbb
pop
jnp
(bad)
cmp
mov
pushf
pop
inc
loop
pop
call
sahf
pop
dec
push
fs
pop
int
clc
pop
movs
or
or
retf
shl
xor
lods
sbb
repnz
or
inc
stos
push
ins
or
test
add
push
lea
icebp
pop
push
jbe
fsub
retf
and
(bad)
sub
mov
out
cmp
and
or
jb
(bad)
push
lods
(bad)
xchg
or
xchg
ret
xor
xlat
dec
push
fnstcw
push
dec
cmc
inc
jle
mov
or
sar
and
lods
test
push
dec
and
inc
arpl
xchg
loope
push
into
pop
leave
jecxz
push
mov
mov
mov
scas
fistp
push
sbb
fimul
jae
jecxz
stos
push
(bad)
sub
bound
test
inc
cmp
fidiv
and
(bad)
jle
mov
sub
mov
fisttp
retf
out
pop
loope
cmc
daa
dec
(bad)
jp
retf
mov
or
jb
ins
jno
sub
scas
jp
shr
xor
inc
fisttp
js
xor
outs
(bad)
lods
adc
xor
jbe
jp
pop
fist
out
mov
call
mov
test
sub
sbb
jle
mov
mov
std
das
sbb
out
inc
retf
mov
xchg
jl
mov
mov
sub
add
jle
xor
sbb
repz
aas
gs
xchg
jl
xchg
cli
dec
(bad)
out
imul
dec
mov
mov
jecxz
(bad)
pusha
pop
test
or
xchg
pop
add
stos
imul
(bad)
cmp
arpl
aad
pusha
pusha
(bad)
aad
push
imul
adc
push
mov
loop
mov
xor
jle
and
(bad)
push
adc
mov
push
fs
(bad)
lods
int3
fld
cmp
xor
xor
add
jp
(bad)
adc
push
sub
sub
sub
in
les
xor
push
(bad)
out
jae
xor
sbb
sub
les
xchg
out
sbb
mov
nop
sti
in
adc
push
push
pop
jbe
jmp
shl
cmp
mov
ins
sub
lods
out
add
call
std
mov
mov
gs
inc
cs
cwde
xchg
sbb
popa
xchg
pop
jnp
pusha
sbb
pop
in
in
cli
and
out
movs
inc
cmps
xchg
mov
ins
out
sub
pop
push
push
(bad)
xchg
sub
cmp
cs
push
xchg
or
add
cmps
rcr
and
pop
pop
pop
or
inc
test
iret
mov
xchg
out
push
cmp
add
or
mov
fucomp
pop
sub
xchg
or
add
fcom
add
push
pop
rol
jnp
bound
push
shl
pop
out
dec
aas
ss
in
mov
jle
push
ret
push
mov
cmc
push
xor
test
push
and
fidiv
ins
rol
(bad)
shl
pop
mov
out
int3
aas
adc
mov
cmps
push
sbb
mov
jge
and
(bad)
push
sbb
sti
aad
(bad)
retf
push
(bad)
xor
xchg
mov
push
popa
dec
out
out
dec
push
jmp
scas
xor
int3
in
mov
jno
out
adc
cmp
rol
xchg
imul
bswap
cmp
or
lea
leave
retf
ficom
inc
fld
xor
or
jp
push
(bad)
movs
arpl
and
adc
mov
ins
or
out
cli
bound
jae
repnz
xor
fwait
shl
mov
repz
outs
movs
pusha
es
and
pop
push
mov
ror
mov
xlat
cmp
cdq
das
stc
xor
push
fucom
xchg
adc
jle
mov
push
ins
mov
imul
push
xchg
stos
ds
mov
dec
fistp
out
dec
or
shr
movs
popa
jl
sub
jmp
lods
call
fdiv
ficomp
inc
push
mov
mov
and
out
(bad)
xchg
or
loop
loopne
movntps
repnz
mov
iret
das
stc
fcomp
xchg
(bad)
xchg
les
imul
mov
ins
pop
in
call
pop
ror
cdq
ret
mov
mov
mov
sahf
call
cdq
ss
or
sub
fwait
and
call
jno
xchg
sbb
and
xchg
sub
sub
mov
pop
fisubr
dec
pop
adc
jg
test
test
aam
mov
fisub
rcl
push
mov
ret
leave
rcl
jns
imul
or
outs
xor
(bad)
jge
push
pushaw
mov
(bad)
lods
push
stos
push
mov
push
push
retf
daa
mov
(bad)
mov
cmc
test
ja
iret
pop
clc
jmp
add
pop
pop
or
sbb
scas
aaa
int
daa
mov
dec
jbe
cwde
shl
jae
mov
xlat
aaa
jl
sti
rol
and
std
fisubr
xchg
cmp
mov
inc
ins
das
int
clc
ins
pop
out
les
mov
jmp
imul
xor
pusha
iret
ror
and
lea
add
jmp
cdq
cmp
mov
je
add
(bad)
jl
arpl
fcom
dec
leave
add
mov
push
jge
aad
inc
movs
out
mov
das
lock
inc
dec
cld
sub
push
jg
cld
bound
jb
mov
add
and
mov
jnp
mov
das
imul
adc
ds
jp
cmp
pusha
ja
push
sbb
adc
call
mov
mov
hlt
leave
jnp
mov
dec
(bad)
les
adc
jmp
xchg
call
sbb
lods
rcl
adc
jmp
fucomp
jp
outs
mov
xchg
aas
sbb
mov
mov
aad
mov
addr16
ret
jo
call
rol
bound
cmp
adc
or
stc
sbb
dec
(bad)
(bad)
adc
adc
jge
mov
cmp
inc
jecxz
push
pop
cdq
xor
push
add
aaa
(bad)
call
int
push
xor
xor
add
sti
pop
inc
imul
pushf
ds
sbb
inc
xchg
imul
scas
test
mov
ret
stc
jo
stc
lods
fsincos
push
pop
cmps
jp
mov
loop
int
ins
(bad)
adc
push
mov
pop
mov
ja
movs
cs
(bad)
mov
lahf
and
cmp
int3
xor
pushf
pop
xchg
mov
(bad)
fwait
pop
jnp
adc
sbb
retf
out
shl
dec
inc
fadd
mov
adc
push
sar
inc
pop
sbb
daa
sbb
sbb
(bad)
push
dec
(bad)
jo
movs
cmp
jmp
adc
mov
ds
cs
jbe
mul
test
sbb
pushf
fistp
push
push
xor
mov
hlt
in
add
cmp
mov
outs
adc
stc
adc
push
lods
xchg
mov
or
(bad)
leave
(bad)
mov
dec
or
fcom
shl
xchg
lds
push
cmp
and
push
inc
cmp
mov
sbb
pop
cmc
mov
out
cmps
cmp
outs
loop
or
lahf
sbb
div
or
lods
in
ss
int
mov
xchg
dec
mov
mov
mov
scas
mov
iret
ret
ret
push
cmp
fdivrp
cwde
retf
pop
xchg
jns
mov
(bad)
mov
das
and
or
inc
ins
xchg
add
fistp
in
sbb
repz
xor
sub
pop
xchg
jae
jmp
in
mov
add
lds
add
mov
mov
iret
lods
std
cmp
xchg
(bad)
(bad)
fldenv
loope
call
mov
clc
xchg
mov
ret
dec
mov
mov
sub
loop
stos
pushf
stos
xchg
(bad)
jp
lds
(bad)
add
sbb
sub
mov
arpl
jle
and
ret
call
mov
test
gs
(bad)
fimul
adc
jge
stos
inc
inc
dec
xchg
not
mov
dec
lds
sub
xor
popf
xor
aas
dec
fld
lods
mov
xchg
xlat
repnz
xor
pop
jecxz
sub
cmp
push
jb
mov
js
mov
mov
mov
mov
sahf
imul
push
pop
fs
mov
pop
jge
jo
pop
mov
cmps
add
add
jl
stos
ds
(bad)
outs
adc
cwde
sbb
subps
out
pop
xchg
add
loopne
mov
inc
cmp
sbb
in
(bad)
cmp
mov
je
cmps
mov
sub
push
or
shl
mov
jbe
inc
aam
add
jae
mov
jmp
and
loopne
inc
dec
xchg
jbe
adc
hlt
in
(bad)
std
(bad)
and
std
cmp
add
nop
pop
gs
mov
cmp
xor
or
aam
xlat
jmp
mov
das
mov
sbb
sar
call
xchg
stc
pop
and
jmp
aas
test
jmp
cmp
shl
bound
pop
push
mov
push
cmc
xor
sub
enter
test
mov
pushf
mov
pop
movs
mov
sub
lods
sbb
mov
mov
je
pop
sub
xor
xor
fmul
stos
ins
cmc
mov
xchg
les
adc
dec
gs
rol
mov
ss
cld
or
sub
xor
(bad)
mov
xlat
dec
imul
mov
es
addr16
cmc
dec
loope
push
inc
mov
repz
push
or
gs
sub
inc
sbb
and
ror
retf
test
push
mov
sahf
js
test
int3
shl
xchg
and
cmc
pop
outs
xchg
scas
out
xchg
test
jp
ins
mov
loope
dec
loop
mov
or
sbb
outs
add
sti
pextrw
cmp
lods
sub
ds
and
pop
jo
arpl
mov
sbb
loope
pop
ins
inc
outs
cmp
mov
dec
inc
jae
cmp
jp
(bad)
out
inc
sti
popa
and
push
mov
out
or
pop
add
lea
ins
mov
sbb
fbstp
jno
push
imul
in
sub
sub
mov
xor
int
sahf
add
mov
and
js
and
xor
sub
pusha
das
fwait
addr16
adc
repz
and
ficomp
sti
cmp
std
cli
fwait
push
jmp
test
jecxz
in
call
xchg
in
sbb
pop
scas
(bad)
les
jmp
jmp
push
aas
loopne
mov
lods
xor
xor
mov
clc
or
std
mov
xlat
lahf
mov
mov
pop
xor
movs
cs
push
xchg
cld
add
arpl
and
das
ss
aad
adc
mov
jae
(bad)
in
push
repnz
test
jns
pop
(bad)
inc
inc
xchg
cmp
sub
sti
in
std
xchg
pop
(bad)
rcr
adc
test
fcomp
pop
sub
jle
ret
mov
leave
enter
je
popa
mov
pusha
jnp
sbb
outs
cs
xor
adc
icebp
dec
sub
ins
push
add
in
xchg
(bad)
fiadd
stc
jg
test
cmps
pop
push
xor
mov
push
ret
mov
popf
pop
imul
pusha
mov
adc
dec
fsubrp
sbb
stos
repnz
and
int3
pop
stc
or
lods
sub
push
imul
mov
mov
cs
adc
or
jnp
leave
gs
pop
in
dec
aad
in
pop
lea
scas
popfw
jg
fcmovb
aas
outs
add
inc
enter
ds
sar
jecxz
xor
movs
fstp
mov
push
repz
sub
fimul
popf
sar
cld
rcl
xor
mov
ficomp
jmp
imul
cmps
lea
loop
dec
adc
xchg
push
popa
and
push
es
cmp
(bad)
into
ins
jecxz
clc
cmp
or
(bad)
bound
(bad)
pop
and
sbb
in
dec
xor
jno
movs
mov
mov
mov
outs
push
cmp
xchg
and
or
jbe
mov
add
inc
xchg
xchg
mov
dec
enter
jecxz
push
imul
inc
sbb
popa
pop
dec
push
dec
lahf
mov
stos
inc
lds
fbstp
cmp
(bad)
xlat
sbb
cmp
inc
pop
nop
mov
or
adc
pop
gs
sub
sahf
aam
push
or
adc
dec
add
fidiv
inc
inc
cwde
pop
pushf
leave
nop
push
or
dec
stc
xchg
je
push
std
adc
sbb
jp
xchg
test
xchg
into
aad
mov
xlat
pop
cmc
in
mov
push
nop
out
mov
xchg
lods
retf
sbb
int
pop
or
mov
das
sahf
adc
add
push
in
or
imul
pop
inc
icebp
(bad)
or
push
mov
mov
shr
and
mov
cwde
sbb
jmp
jbe
cwde
lahf
repnz
push
cmp
or
and
ret
add
and
add
xchg
test
pop
or
mov
and
(bad)
stc
fucomp
push
xor
push
sub
(bad)
lods
pop
dec
(bad)
lock
adc
aad
movs
push
mov
outs
loope
repnz
jge
ins
dec
fcomp
mov
xchg
loope
jle
jle
mov
fdiv
ins
push
and
je
test
or
dec
jmp
adc
(bad)
ins
dec
push
xchg
mov
out
sti
scas
dec
scas
dec
pop
sbb
mov
sbb
scas
outs
dec
shl
call
cmps
xchg
popf
mov
mov
xor
jecxz
shl
lds
ja
inc
sbb
not
cli
les
jmp
aas
sbb
btr
dec
ficomp
mov
arpl
xor
dec
ins
test
and
mov
rcl
and
xor
xchg
int3
shl
movs
fsubr
xor
popf
ins
sbb
pop
jo
gs
xchg
xchg
mov
cli
or
mov
ins
cmp
aaa
mov
inc
cmp
aas
out
fidiv
jl
rol
jnp
sbb
iret
mov
fdivr
jg
rcr
loop
cmp
lock
cmp
inc
into
mov
mov
add
je
xchg
xchg
jne
fstp
cdq
mov
aaa
dec
jp
and
shl
inc
nop
(bad)
jo
enter
lock
out
mov
fild
xchg
sbb
movs
stos
pop
mov
test
cwde
dec
test
adc
imul
sbb
dec
jmp
out
jns
retf
sub
adc
and
push
mov
push
inc
xor
mov
movs
inc
mov
stos
xor
add
jmp
repz
in
popf
retf
jae
sar
pop
sub
cwde
and
(bad)
arpl
or
push
out
and
xor
push
jp
scas
icebp
cli
in
push
inc
mov
shr
xor
add
or
das
jl
mov
mov
push
cwde
lods
pop
and
sti
lds
inc
adc
mov
daa
mov
push
shl
mov
jb
pusha
push
lahf
cwde
or
pop
sahf
jmp
adc
sub
mov
push
scas
cld
adc
sbb
sar
cli
xchg
jmp
mov
cdq
inc
outs
and
add
add
push
pop
loopne
lods
push
jmp
aas
xchg
in
js
xchg
jecxz
xchg
inc
test
lods
retf
mov
repz
add
inc
in
jecxz
in
cwde
and
jmp
fcom
mov
movs
cmp
or
icebp
or
pop
dec
outs
mov
mov
movs
ror
pop
mov
jge
call
xchg
xchg
pushf
add
mov
ret
inc
mov
pop
fs
repnz
js
push
outs
mov
inc
fs
fbstp
ins
sub
and
dec
jne
mov
out
jne
adc
jno
stos
inc
adc
fucomi
pop
adc
jo
jns
jb
mov
xor
jge
es
mov
xchg
popf
lods
gs
fistp
adc
ret
xlat
rcr
xchg
sbb
in
repz
cmp
or
fmul
ror
pop
aad
xchg
xchg
cmc
pop
add
mov
inc
xchg
in
movs
jp
scas
cld
imul
add
imul
sbb
add
push
js
cmc
push
arpl
pop
outs
(bad)
int3
imul
jmp
cmp
add
aam
cmp
and
retf
es
xor
enter
fwait
mov
jge
repnz
repnz
mov
jno
(bad)
push
mov
inc
out
lods
dec
push
push
nop
mov
add
es
outs
add
sub
cmp
retf
sub
fisttp
xchg
jnp
push
or
popf
(bad)
js
jne
pop
scas
and
in
popf
test
movs
jl
xlat
jb
lock
or
pop
jp
mov
cdq
push
cdq
inc
rol
adc
iret
sub
lods
pop
cmp
test
inc
stos
push
mov
sbb
imul
sti
sti
sbb
stos
repz
rcr
jle
bnd
xor
test
jns
sub
sbb
data16
movs
cld
push
test
push
sbb
xchg
jbe
out
pop
jmp
out
and
nop
lea
pop
sub
xchg
xchg
rcr
cwde
test
fcmovbe
hlt
push
add
pop
inc
pop
sub
mov
jnp
test
clc
test
ja
jp
lds
cdq
data16
adc
inc
es
scas
mov
in
xor
jbe
or
inc
xlat
ret
xchg
imul
xor
lods
out
mov
mov
add
imul
sbb
xchg
dec
cld
dec
xchg
loop
add
push
arpl
cdq
repz
cs
out
add
mov
xchg
xchg
push
fsub
inc
ror
idiv
in
and
test
cmp
(bad)
(bad)
mov
push
dec
bnd
(bad)
je
pop
rol
sub
cld
mov
mov
cli
ja
fisttp
inc
(bad)
loope
push
hlt
jb
(bad)
fcmovu
fsubr
sbb
add
mov
adc
ja
scas
sbb
fist
push
out
mov
(bad)
cmps
ss
push
fs
enter
mov
clc
out
iret
mov
cmp
push
push
ret
mov
(bad)
pop
movs
mov
pop
(bad)
mov
icebp
and
ds
and
inc
test
bound
or
popf
lds
xchg
cmps
jl
popf
inc
inc
fsubr
lds
pop
adc
adc
imul
xor
xor
retf
ins
sub
and
scas
pop
es
dec
cmp
sbb
dec
xchg
xlat
jmp
aaa
pop
(bad)
adc
test
xor
cmp
pop
jl
mov
inc
pop
mov
xor
ins
pop
sbb
mov
iret
inc
mov
xlat
ds
or
mov
xor
push
shr
jo
jne
arpl
dec
pop
or
jp
jns
xchg
jne
hlt
mov
mov
xchg
inc
inc
add
jb
scas
call
xchg
(bad)
xlat
mov
ins
inc
inc
push
lea
sub
xchg
pop
sub
push
or
jp
repnz
idiv
ja
cmp
aad
rol
inc
sbb
call
dec
sbb
inc
and
(bad)
in
call
test
pushf
sbb
test
add
fstp
repnz
test
xchg
xlat
sar
adc
pushf
sbb
leave
(bad)
dec
add
sbb
mov
xchg
data16
mov
rep
or
inc
outs
pop
pop
stc
xor
jmp
jnp
cmp
mov
(bad)
push
mov
push
mov
das
inc
mov
mov
mov
pop
xchg
xchg
cmps
and
jnp
stos
stos
int3
cmp
xrelease
adc
mov
shl
leave
adc
xor
add
push
call
dec
mov
sti
stos
(bad)
je
push
mov
stc
jecxz
mov
movs
sbb
les
jae
inc
xor
lods
jbe
aaa
retf
sar
inc
sbb
(bad)
pushf
jbe
dec
sar
rcl
jge
pop
shl
movs
pushf
fisubr
push
imul
adc
or
dec
mov
adc
aad
enter
xchg
push
stc
sub
and
push
xchg
xor
popf
xchg
(bad)
outs
repnz
jmp
or
(bad)
(bad)
pop
rol
rcr
xchg
jmp
leave
(bad)
mov
rcr
push
push
xor
jb
jmp
ds
mov
mov
in
adc
push
pop
pop
and
inc
retf
dec
test
fldcw
sbb
out
es
push
push
dec
jnp
mov
dec
xor
and
sbb
xchg
iret
xor
mov
xchg
add
pop
mov
outs
(bad)
icebp
adc
retf
(bad)
std
push
es
xlat
aaa
jne
sub
mov
les
push
or
sbb
push
adc
ja
lea
mov
add
cmovl
lock
aas
mov
adc
pop
cmp
lock
or
loop
jmp
rcr
ret
push
mul
cmp
xor
adc
das
push
(bad)
mov
sbb
cdq
imul
cs
movs
les
xchg
dec
fisubr
bound
and
mov
mov
adc
adc
inc
(bad)
jns
out
push
jl
(bad)
into
or
pop
arpl
and
mov
jno
dec
lods
sti
ret
mov
lahf
push
mov
mov
mov
pop
cdq
popf
mov
scas
mov
xchg
scas
addr16
sub
mov
xor
sbb
sub
adc
inc
push
fbstp
cld
sub
sbb
lea
pop
inc
ror
xor
fdivr
and
fistp
and
fmul
and
xchg
jb
mov
mov
pop
pop
hlt
movs
push
and
add
neg
xchg
nop
adc
fsubr
mov
add
cmp
rol
aad
lock
adc
pop
arpl
loopne
pop
xchg
mov
cmp
inc
xor
add
rol
clc
ds
cli
int3
inc
cs
les
pop
or
lds
jb
into
xchg
jg
mov
jno
xchg
fst
push
out
out
mov
ins
cmp
adc
shl
jns
xlat
mov
imul
out
add
outs
iret
jecxz
(bad)
mov
and
cmp
sahf
push
shl
pop
mov
mov
into
jae
or
and
out
add
adc
pop
out
or
mov
ins
lahf
lock
inc
test
stos
xor
add
adc
cmp
push
dec
xor
and
jae
icebp
(bad)
adc
jo
es
fsubr
lock
das
int3
dec
add
xor
arpl
sub
and
mov
add
aas
push
mov
inc
or
push
add
je
mov
out
mov
mov
mov
cli
push
sub
scas
sub
not
or
or
lods
fisub
shl
push
(bad)
ins
sbb
fstp
int3
sub
adc
sbb
push
or
stos
and
ins
mov
mov
cmp
hlt
jne
out
inc
jecxz
pop
daa
sub
sub
out
repnz
das
or
adc
and
sahf
push
out
cmps
dec
(bad)
aas
jg
pop
add
sti
test
(bad)
cmp
dec
push
rol
mov
mov
xchg
push
(bad)
xchg
push
fimul
sbb
inc
inc
std
cmps
and
cwde
cdq
pusha
jbe
rcr
sub
xchg
mov
aam
loop
push
aad
(bad)
sti
or
call
inc
mov
inc
test
in
popa
mov
pop
cmp
or
movs
idiv
scas
sbb
mov
clc
leave
fst
add
lahf
pop
inc
into
cdq
sub
pop
fist
adc
mov
add
test
cdq
pop
push
mov
lock
hlt
clc
push
jl
test
cld
ss
popf
mov
daa
xchg
lea
lods
out
in
(bad)
xor
inc
xor
cmp
push
adc
adc
ins
loope
in
neg
ja
add
push
add
sbb
jmp
pop
(bad)
or
jmp
jnp
mov
nop
pop
test
push
push
stos
jne
int3
add
mov
pop
push
gs
push
mov
in
aam
sahf
cmc
and
or
icebp
iret
pop
jge
fisubr
mov
enter
xor
mov
cmp
(bad)
cmp
mov
jo
and
psubq
sbb
imul
jmp
inc
mov
mov
ss
mov
xchg
and
cmp
mov
js
cmp
loop
dec
rcr
and
js
jb
ret
push
mov
jmp
xchg
push
mov
add
call
cmp
(bad)
jmp
dec
mov
in
jmp
jp
cmp
lock
jbe
repz
jg
sahf
sar
sti
ins
pop
pop
mov
ins
push
adc
mov
cmp
inc
sahf
jp
movs
mov
jnp
mov
xor
dec
cdq
adc
dec
xlat
call
dec
cmp
jmp
repnz
loopne
cld
mov
push
inc
or
aas
ds
dec
pusha
loop
out
cld
adc
add
aad
xor
sub
rol
cwde
cmp
js
dec
mov
and
cs
or
fisubr
sbb
fadd
fbstp
pop
cmp
dec
push
addr16
jae
dec
or
jg
les
sti
test
popf
enter
cwde
outs
arpl
cmp
mov
shl
cmc
mov
pop
cwde
push
pop
jno
cmc
lea
pop
cmp
stc
in
out
dec
outs
cmp
les
fstp
pop
shl
xor
add
sbb
or
xor
je
push
push
adc
pop
(bad)
push
aaa
sub
pop
push
add
fistp
pop
cmp
loopne
xor
adc
fmul
dec
dec
jmp
push
(bad)
loope
ret
mov
iret
sub
sbb
mov
test
push
dec
dec
mov
xchg
adc
sbb
imul
cmp
jl
dec
out
xor
xchg
fidiv
push
mov
fisub
adc
pop
aaa
push
ror
dec
mov
sbb
pop
movs
xchg
jmp
jmp
jg
jmp
dec
inc
xor
sahf
ins
enter
dec
sahf
push
mov
nop
rol
pop
clc
sbb
mov
loop
std
mov
mov
inc
adc
lahf
push
les
fwait
dec
(bad)
pusha
cmp
sub
pop
outs
add
imul
mov
fidivr
push
or
stos
mov
popf
shr
call
dec
mov
dec
push
fwait
(bad)
fisttp
sbb
out
loopne
xchg
repnz
test
or
and
shl
dec
jl
rol
add
adc
rcr
xor
(bad)
(bad)
les
xchg
inc
xchg
stos
sub
nop
dec
dec
and
jb
inc
ret
jns
sub
jae
data16
sahf
ror
fwait
fwait
pop
fs
fcom
lahf
sahf
out
mov
jmp
cmp
sub
jp
retf
inc
mov
sub
pop
cld
push
enter
scas
out
push
movs
ret
das
imul
shl
mov
test
push
pop
jmp
adc
add
stc
dec
adc
add
xchg
inc
sti
xchg
mov
mov
sub
clc
xor
jp
sbb
(bad)
fucomp
pop
sti
cmp
jp
fstp
sbb
icebp
mov
inc
inc
xor
(bad)
in
ret
js
(bad)
es
push
mov
or
mov
jmp
dec
into
pushf
fsubr
cdq
nop
mov
sub
push
mov
push
inc
hlt
ins
pop
scas
push
dec
sbb
sub
aas
push
aad
jp
lods
movs
inc
cli
retf
sub
data16
cmps
fs
push
sbb
sar
sub
mov
cmp
sahf
add
add
mov
push
adc
push
retf
(bad)
cmp
leave
mov
(bad)
lea
xor
or
or
cmps
call
and
in
adc
mov
dec
adc
sar
fwait
pop
push
cmp
cmp
inc
pop
xchg
into
xor
dec
sub
and
call
imul
xchg
outs
out
xor
dec
cmp
test
inc
sbb
scas
inc
push
mov
outs
xchg
xchg
(bad)
push
xchg
add
loope
cmp
and
loopne
cmp
in
mov
rcr
dec
fdivr
inc
cmps
push
pop
jg
psrld
fsubp
jmp
push
pop
adc
adc
and
(bad)
mov
aad
add
or
mov
lods
in
xchg
ja
pop
pop
mov
imul
out
push
iret
sub
xor
divps
or
mov
mov
mov
je
mov
lds
xor
dec
sbb
or
push
ret
out
sbb
inc
mov
mov
bound
pop
jbe
pop
lods
sub
scas
clc
bound
js
test
mov
int3
mov
xchg
shr
dec
and
inc
aad
sti
pop
pop
clc
mov
cmp
ret
inc
xor
stos
mov
ins
retf
jbe
push
mov
mov
xor
xor
fadd
xor
and
stos
lea
push
clc
pop
add
or
cmp
fisub
sti
pop
in
mov
add
cmp
sbb
sahf
aam
push
jge
int3
adc
fisttp
sub
jp
loopne
cdq
dec
jle
rol
dec
bound
das
fimul
push
inc
idiv
cld
push
movs
jns
sti
pop
xchg
bound
outs
in
out
call
inc
shl
aaa
stos
retf
mov
jmp
jecxz
adc
add
jg
mov
mov
sbb
or
push
stos
hlt
shl
pop
imul
sbb
fisub
popa
mov
xchg
xchg
retf
push
or
and
jmp
outs
jo
adc
mov
mov
sbb
push
and
std
mov
dec
movs
stc
lea
mov
pop
push
mov
ins
stos
es
data16
stos
cmps
inc
mov
jmp
and
rcr
cmc
scas
or
jp
mov
call
call
dec
add
sub
add
in
pop
in
nop
sub
push
inc
mov
mov
cs
(bad)
shr
out
or
(bad)
outs
mov
div
xchg
jle
je
xchg
loope
mov
lds
xchg
(bad)
dec
movs
inc
les
out
mov
ror
ss
push
(bad)
jg
inc
inc
jae
lods
ins
out
add
sahf
repz
mov
dec
je
pop
aas
mov
icebp
add
out
push
cmp
or
mov
stos
data16
cs
sbb
and
pop
movs
std
xor
and
jg
jno
xor
xchg
pushf
ror
push
mov
push
cmp
inc
pop
xor
add
shr
dec
mov
lahf
xchg
jns
and
jle
push
mov
xchg
cli
xor
and
rcr
dec
pop
in
xchg
adc
jns
inc
inc
or
mov
addr16
or
sub
xor
addr16
test
in
sub
pop
mov
mov
pop
outs
mov
or
push
fldenv
sti
retf
shr
cs
(bad)
dec
and
and
je
(bad)
mov
call
mov
iret
or
xlat
xor
jmp
test
enter
dec
test
loopne
add
xchg
addr16
cs
je
bound
retf
sbb
adc
movs
stos
add
add
call
or
cld
pop
ins
cwde
pop
fisub
push
jns
mov
or
xor
xor
das
fistp
(bad)
jo
les
out
retf
std
outs
mov
xchg
mov
xchg
adc
xlat
(bad)
test
inc
rcr
or
inc
lods
adc
ds
adc
pop
inc
sub
push
mov
sbb
and
std
inc
jmp
stos
push
stos
test
xor
lds
sbb
lods
in
dec
ret
fldenv
mov
jbe
pop
mov
je
jns
call
sub
push
out
mov
mov
pop
mov
jmp
cmp
in
jno
dec
pop
jno
pop
cs
scas
mov
dec
int
mov
out
inc
pop
and
lock
rcl
cs
fsubrp
scas
popa
clc
(bad)
mov
xchg
(bad)
push
sub
lds
out
js
mov
pop
push
mov
xor
lea
push
sbb
cmp
pop
add
sar
(bad)
push
add
ror
pop
or
rcl
mov
test
pop
mov
mov
add
mov
or
mov
aam
ja
xor
add
jge
and
add
inc
cmp
pop
test
mov
fld
and
mov
outs
inc
shr
es
and
dec
mov
pop
cdq
inc
xor
and
add
xor
rcl
shr
enter
out
push
push
fwait
retf
mov
(bad)
loopne
xor
fwait
int
lods
mov
xlat
cmp
and
cmp
mov
sub
mov
jae
inc
mov
push
fdivr
in
cmps
jle
enter
cmp
mov
mov
and
sbb
xchg
and
add
jae
pop
inc
iret
cmp
popa
in
div
mov
push
adc
jecxz
(bad)
xchg
ds
dec
and
sbb
inc
pushf
les
pushf
pop
adc
addr16
out
push
mov
cmp
cmp
mov
xor
ds
or
mov
pop
lods
mov
cli
mov
(bad)
ds
push
test
test
add
loopne
outs
mov
hlt
or
dec
ret
addr16
pushf
hlt
mov
xchg
mov
inc
in
call
lods
jb
cmp
stos
inc
nop
shl
mov
shr
add
jl
shl
push
int3
push
js
shl
test
jp
js
or
ss
enter
sub
push
pop
dec
xchg
mov
fstp
cmp
aad
mov
and
cmp
ret
and
cmc
frstor
cmps
inc
adc
test
pop
dec
jne
scas
in
daa
gs
cwde
shr
cld
jle
addr16
mov
cwde
into
add
(bad)
fadd
ret
sub
or
std
sbb
add
sbb
jns
pop
push
inc
loop
lea
nop
aam
sub
inc
and
adc
mov
mov
jne
jp
ins
scas
cmp
sbb
sar
fidiv
int
sub
add
scas
dec
(bad)
or
icebp
sti
xchg
mov
fwait
cmp
push
mov
call
arpl
cmp
outs
pop
scas
fsubr
lds
mov
push
loopne
xchg
adc
lea
hlt
ss
jp
jmp
std
adc
test
pshufw
retf
movs
pushf
push
out
sbb
or
rcl
push
fwait
xchg
inc
and
icebp
out
test
popa
mov
adc
dec
and
mov
jo
stc
add
fimul
ja
loopne
mov
std
add
mov
jb
enter
and
pop
or
xor
icebp
stos
jg
out
cs
aam
add
popf
add
mov
clc
xchg
push
xchg
cmps
jno
mov
dec
outs
call
lock
loope
inc
ret
gs
(bad)
mov
js
sub
and
dec
std
test
fmulp
in
ss
out
aam
push
cdq
or
test
in
dec
movs
aam
cmp
dec
push
dec
paddsb
push
mov
cld
dec
fadd
adc
dec
pusha
cs
xchg
cdq
setl
jle
mov
ds
mov
daa
adc
aam
mov
pop
in
add
xchg
fist
int
push
mov
xor
pop
imul
fsub
mov
es
dec
sbb
test
inc
inc
xchg
mov
cmp
mov
cwde
sbb
cmp
fwait
mov
ret
mov
retf
fs
cli
out
lea
adc
das
das
jl
jae
aam
(bad)
ds
jge
stos
je
(bad)
pop
dec
pop
aad
pop
fcom
sub
hlt
mov
xor
pop
into
adc
lds
sub
push
in
xchg
rcr
pop
adc
test
push
add
push
or
test
push
in
leave
rcr
sbb
xor
xor
lods
push
mov
fdiv
or
jp
scas
dec
mov
nop
dec
popf
jg
jne
mov
inc
call
retf
cld
mov
data16
ins
sbb
jnp
out
push
gs
popa
inc
gs
jge
movs
out
jge
fdivr
jnp
push
pop
or
mov
test
fidiv
loop
sub
(bad)
test
mov
repnz
cmps
push
jmp
aas
fadd
inc
cli
cmp
lods
sbb
punpckhbw
stos
push
aam
inc
push
rcl
inc
fisub
xlat
xlat
sbb
fisub
sub
add
fisubr
sbb
(bad)
cmp
sub
cmp
xor
xchg
test
pop
and
shr
cmp
sbb
cmc
ja
fwait
mov
push
jns
jae
fwait
mov
aaa
das
ds
mov
push
push
call
dec
in
pop
mov
stos
jnp
cmps
sub
sub
das
imul
shl
adc
std
imul
iret
bound
jge
sub
dec
dec
jg
in
add
into
sbb
pop
cwde
mov
sbb
xchg
push
pop
push
test
mov
in
out
xor
lock
jbe
fstp
xlat
fdivr
pop
mov
out
xor
je
imul
xchg
push
mov
add
shld
inc
aam
in
or
inc
jle
jmp
(bad)
xchg
hlt
in
cwde
repnz
fwait
ret
add
adc
out
jp
ret
inc
xor
js
popa
inc
pop
mov
sbb
and
dec
dec
push
or
mov
jl
adc
xor
ja
out
or
xor
fcomi
xor
xchg
pop
aaa
push
in
fsub
push
ins
pop
push
stc
(bad)
mov
adc
mov
pop
add
mov
aas
push
(bad)
mov
enter
xchg
mov
mov
daa
test
icebp
inc
in
mov
jno
inc
inc
stos
jecxz
scas
push
xor
loopne
fs
sbb
out
push
adc
mov
test
iret
bound
(bad)
cmps
jmp
mov
cmpxchg
sbb
xchg
jle
stos
ret
xchg
repz
xchg
jle
cs
lock
lahf
cmp
ficom
and
push
in
rcl
or
retf
mov
cmp
ds
and
xor
out
scas
adc
sar
imul
aam
mov
test
popa
adc
mov
adc
mov
fs
push
mov
xchg
sbb
xchg
lahf
add
pop
call
mov
mov
jo
sbb
pushf
lock
jns
pop
fwait
nop
sbb
(bad)
loopne
mov
push
int3
mov
into
(bad)
dec
movs
mov
fst
pop
sub
les
pop
pushf
fbld
and
xor
pop
aam
jmp
retf
stos
shl
xor
mov
rcl
(bad)
ret
jb
leave
add
cmp
mov
add
test
imul
adc
ss
sub
test
aaa
mov
aad
inc
or
addr16
loopne
mov
adc
inc
fs
mov
fadd
push
adc
push
or
xor
jmp
clc
ds
fs
or
and
cmc
jno
jge
push
(bad)
push
push
adc
mov
dec
out
test
cld
es
mov
(bad)
jl
inc
popa
inc
leave
sub
add
fcmovnu
fcmovnu
test
inc
ins
push
xchg
cs
sub
mov
clc
xchg
cmp
jns
xor
cdq
outs
add
jge
(bad)
scas
ror
pusha
mov
popf
mov
cld
push
pop
inc
lock
pop
or
ror
fild
and
dec
faddp
std
clc
pushf
das
xor
xlat
movs
sub
out
and
pop
sti
mov
adc
mov
aaa
cld
inc
xor
shl
push
mov
inc
or
add
ret
or
or
inc
or
push
cld
outs
dec
and
xchg
(bad)
int
or
js
out
mov
jbe
adc
in
pop
into
(bad)
xlat
out
push
inc
mov
idiv
dec
cmp
mov
ror
or
sub
xchg
nop
cli
enter
and
popf
data16
push
mov
stc
es
(bad)
cmps
(bad)
addr16
(bad)
jp
sub
loop
dec
add
iret
cld
aaa
mov
xlat
aas
ret
and
lods
in
mov
test
call
adc
cmps
loopne
inc
push
stos
into
jno
cmp
cmp
push
in
loopne
das
mov
ss
test
lea
lods
xchg
and
out
in
fidiv
sbb
dec
es
inc
ins
lea
ret
test
and
leave
or
mov
inc
ins
pop
add
ins
fldenv
adc
mov
push
jge
xchg
nop
movs
push
jge
and
xchg
xor
pop
mov
test
mov
cwde
push
lods
pusha
push
scas
xchg
inc
xor
mov
leave
cmovo
sahf
mov
or
mov
jl
sub
push
mov
das
cmc
mov
dec
add
repnz
les
ss
ds
pop
or
xchg
mov
aaa
cmp
das
stos
int3
jb
fist
adc
jp
mov
(bad)
push
sub
pop
push
aad
gs
jmp
push
rol
cli
mov
mov
and
call
adc
and
jmp
push
inc
pop
div
mov
xchg
cmp
pop
xchg
xor
lahf
loope
add
sub
xor
jo
cmc
std
lds
mov
ins
gs
sbb
mov
and
xchg
sbb
or
(bad)
addr16
jb
mov
adc
push
into
int3
and
scas
jge
sub
leave
fwait
(bad)
cmp
jl
pop
pop
(bad)
mov
leave
std
jmp
das
xchg
jne
fdiv
int
mov
cmc
pop
pop
add
jno
int3
adc
dec
bound
dec
call
nop
xor
jbe
shl
aad
nop
cmp
jo
jge
jo
mov
inc
sub
dec
fsubr
cli
sbb
cmps
sub
int
dec
sahf
neg
cmp
or
addr16
loope
fistp
lods
popf
or
icebp
pop
jo
jg
sbb
push
xchg
xor
out
xor
mov
fwait
daa
push
pop
push
daa
push
and
inc
push
pop
scas
and
xor
pushf
sub
in
sub
scas
and
dec
sahf
in
xlat
popa
push
mov
stos
nop
aad
add
sar
arpl
das
mov
les
cmps
xor
inc
je
mov
pop
pop
icebp
push
fwait
lahf
add
sar
mov
jnp
mov
mov
mov
push
mov
cwde
sbb
dec
dec
cmp
jbe
add
push
rcr
std
movs
push
test
xor
mov
idiv
dec
int3
ret
or
mov
ror
sub
loopne
jbe
add
adc
xchg
(bad)
repz
lahf
repz
in
mov
cmps
cli
leave
pop
scas
jb
and
mov
jne
cmp
jge
shl
js
aas
into
mov
push
cwde
lods
and
imul
mov
ror
add
sub
push
cmp
pop
pop
pop
mov
bound
pusha
cmp
cmp
fnsave
fdiv
fxch
or
push
mov
xchg
pop
push
outs
dec
jmp
icebp
mov
lds
stos
and
loop
or
mov
mov
and
ins
adc
add
xlat
fxch
stc
js
mov
cmp
mov
call
mov
mov
and
jmp
retf
ret
mov
push
and
push
leave
inc
dec
ror
push
cmp
pop
inc
sub
dec
sub
add
inc
jo
dec
test
das
shl
retf
cmp
in
bound
push
cmp
imul
pop
jb
jno
pop
push
xchg
ins
vpshlw
inc
dec
clc
out
pop
mov
mov
cmps
dec
sbb
loopne
xlat
shl
leave
or
or
pop
pop
ror
push
xor
fnstenv
stos
sub
inc
loop
sub
bound
fbstp
mov
outs
in
mov
jg
in
lods
pusha
ret
adc
dec
push
jl
cmp
cmps
or
(bad)
(bad)
sub
aaa
ins
lock
loop
mov
mov
inc
push
icebp
inc
and
daa
pop
pop
sub
adc
(bad)
push
iret
out
mov
push
and
inc
jmp
cmps
dec
adc
jae
mov
sub
out
xor
cmp
fstp
cmps
lds
mov
out
out
push
mov
or
in
sub
inc
stos
js
(bad)
adc
add
jg
push
dec
jg
test
mov
dec
pop
inc
sbb
sub
add
scas
jp
mov
mov
test
inc
es
ss
xchg
retf
ja
jl
lods
std
and
mov
inc
lods
aaa
movs
add
mov
pop
mov
stc
adc
push
mov
ins
push
(bad)
test
sbb
inc
jg
and
lea
aaa
xor
mov
mov
jp
push
retf
jmp
dec
daa
jg
and
or
or
pop
mov
xchg
pushf
add
loope
push
ins
fs
mov
cmp
or
aad
fs
imul
loopne
xchg
popf
cmp
nop
mov
xchg
or
daa
aaa
rcl
pushf
mov
pop
jno
aas
inc
pop
cmp
cmp
xchg
loopne
mov
test
push
mov
xchg
cmps
rcl
out
sbb
lahf
cmp
mov
inc
or
dec
lods
dec
xchg
or
sahf
fnsave
aam
fstp
cvttps2pi
cli
jne
das
das
push
in
mov
add
(bad)
call
fwait
or
ins
add
cwde
push
adc
imul
xor
pusha
rcr
mov
dec
adc
mov
(bad)
add
pusha
or
shl
jge
or
cmp
xchg
sub
in
test
in
push
loope
jle
inc
push
ins
lods
dec
retf
fcomp
jp
fcomp
sub
pop
mov
stc
pop
sub
jl
dec
sub
xchg
mov
jp
mov
pop
adc
mov
jle
jg
mov
sti
imul
push
push
mov
loopne
sub
or
popf
dec
mov
pushf
mov
and
sbb
add
aas
aam
rcr
jg
in
fiadd
(bad)
cmp
add
push
dec
ss
and
mov
or
dec
mov
adc
add
jo
ins
arpl
cmp
push
sub
lods
in
push
mov
imul
sub
outs
pusha
loope
or
out
pop
xchg
and
dec
(bad)
idiv
mov
leave
add
movs
cmps
xor
push
push
lock
bound
jg
dec
sub
(bad)
mov
jb
mov
test
dec
jno
ds
ja
pop
(bad)
in
xor
outs
loop
mov
retf
fiadd
(bad)
sti
outs
and
mov
xchg
push
push
or
mov
and
sbb
mov
mov
mov
aam
cs
movs
push
call
movs
lahf
ja
in
mov
mov
mov
retf
sbb
push
push
inc
xor
shl
dec
mov
sub
sbb
pop
cli
lahf
sar
cmp
jb
out
and
adc
loop
pop
shr
out
shl
stos
mov
dec
dec
pop
push
iret
loope
mov
(bad)
shr
fmul
shl
push
paddw
pop
(bad)
jmp
pop
push
xchg
jns
dec
call
inc
jmp
arpl
inc
lock
or
mov
icebp
add
sub
out
cmp
jae
push
push
pop
clc
mov
jo
adc
push
xchg
ja
push
mov
inc
and
xchg
or
ret
pop
add
inc
add
popa
inc
popf
loop
je
stc
out
lea
xchg
dec
add
mov
mov
pop
pop
jp
fwait
ret
rcr
retf
jge
cli
popf
js
ds
out
adc
cmp
test
retf
imul
ins
adc
movs
popa
sbb
mov
sub
rol
add
cli
ins
(bad)
xchg
in
mov
imul
inc
mov
sbb
dec
js
movs
lods
fs
imul
lds
lahf
ret
(bad)
pop
mov
mov
or
mov
in
shr
out
dec
lock
push
imul
jb
retf
jne
or
stos
add
mov
pop
cmp
nop
fnsave
push
std
ror
aaa
pop
jae
in
das
or
cmp
aam
imul
sub
add
movs
fwait
fwait
pop
cmp
iret
test
ins
cmp
out
scas
imul
movs
cmp
dec
mov
xchg
scas
or
mov
cmp
mov
call
xchg
mov
inc
add
xor
inc
enter
cmp
and
call
mov
iret
xchg
arpl
mov
xor
les
clc
lods
jge
stc
cli
dec
movs
jno
dec
jbe
leave
xlat
mov
sbb
xchg
ins
mov
xchg
mov
loopne
pop
inc
adc
xor
je
adc
mov
ins
lock
aaa
add
push
(bad)
pop
adc
sbb
aad
fistp
mov
(bad)
or
fistp
retf
(bad)
sub
xchg
add
mov
and
push
aam
and
jg
mov
mov
mov
dec
loope
jae
mov
mov
and
adc
movs
in
rol
fldcw
or
out
xor
cli
hlt
fist
outs
inc
cmp
daa
or
push
jecxz
cmps
(bad)
jo
loop
pop
pop
data16
scas
and
and
pop
data16
icebp
xchg
dec
pushf
cmp
aaa
pop
adc
push
stos
(bad)
std
(bad)
icebp
mov
and
ret
aad
gs
pop
ins
int3
ficom
(bad)
(bad)
aam
movs
mov
sti
sbb
in
stos
jmp
xchg
jl
and
push
stos
cmp
or
or
push
repnz
xchg
mov
aam
mov
js
test
hlt
jns
in
mov
jno
push
xchg
icebp
aad
rol
imul
test
jo
xchg
es
loopne
in
jb
lods
scas
mov
pop
je
add
mov
ret
mov
popa
xchg
sbb
xchg
ret
pop
dec
cld
cs
jl
push
icebp
cmp
pop
movs
mov
jmp
and
add
xchg
sub
and
sub
stos
sbb
push
xor
addr16
dec
jno
jp
retf
pop
mov
idiv
mov
inc
and
sub
test
cwde
or
inc
add
mov
mov
mov
and
int
cmp
xor
(bad)
inc
(bad)
push
cld
sub
(bad)
call
cmp
popf
push
scas
shl
push
jmp
dec
mov
xchg
mov
icebp
cdq
(bad)
xlat
pop
sub
sub
lods
adc
les
and
clc
js
icebp
daa
and
into
push
dec
adc
test
and
mov
in
sub
push
aas
mov
(bad)
mov
clc
lahf
mov
mov
pusha
add
xor
mov
xchg
mov
lock
dec
add
jl
pushf
adc
(bad)
xlat
and
scas
scas
sub
mov
and
inc
xchg
fdivr
cld
fisttp
and
in
call
repnz
cmp
arpl
stc
popa
loopne
retf
or
xor
lods
cwde
dec
and
mov
xchg
cli
outs
jl
popa
pop
cmp
js
retf
test
push
rcl
cmp
cmps
push
and
rcl
inc
test
xchg
jo
sahf
mov
std
sbb
rcr
cwde
jg
outs
lds
jmp
sbb
test
or
jl
jmp
test
sbb
jns
inc
and
sub
stos
cmp
dec
mov
dec
ja
xor
into
(bad)
(bad)
sub
aas
dec
xor
sar
fidiv
or
inc
xchg
and
add
and
sbb
lea
dec
mov
(bad)
retf
dec
sub
push
xchg
daa
xchg
outs
and
or
xchg
lds
test
int
mov
fs
ret
jo
loopne
leave
(bad)
hlt
sar
xchg
sbb
aam
inc
not
add
sub
adc
or
outs
mov
fnstsw
jbe
jbe
mov
cmp
icebp
aad
mov
sub
xchg
cmp
sbb
cmp
cmp
outs
pushf
or
(bad)
(bad)
sub
mov
(bad)
into
adc
jge
stos
push
(bad)
std
add
sub
xchg
aas
jl
iret
retf
xchg
inc
stc
jno
xchg
int
jmp
cmps
xor
pusha
fbld
clc
(bad)
std
and
ds
cmps
pop
inc
xbegin
and
cmp
or
dec
cmp
pop
mov
add
jns
pushf
je
shl
cmp
cmp
dec
jnp
scas
out
inc
aam
ins
ret
mov
mov
or
bnd
test
sub
push
jmp
sub
xor
(bad)
into
mov
cmp
push
adc
sbb
fcom
dec
std
cmp
pop
sbb
stos
xchg
mov
ret
jl
inc
mov
in
xor
or
sbb
pop
add
cmps
push
add
test
push
ja
(bad)
lea
pop
cdq
mov
dec
iret
jb
jnp
ins
shr
enter
sti
fisttp
add
retf
adc
push
xchg
mov
jno
mov
lahf
sbb
aam
mov
(bad)
and
iret
add
sub
call
cmps
cmp
rcr
fs
sbb
push
mov
xchg
fdivrp
xchg
jnp
push
mov
push
std
jb
ret
(bad)
xchg
std
fsub
inc
icebp
lods
jle
sbb
pusha
fcmovu
stc
adc
or
ja
out
jb
out
add
mov
inc
dec
cdq
jl
cmp
and
jmp
lahf
jmp
test
xchg
or
jge
rol
ret
js
adc
in
push
mov
inc
es
fdivr
xchg
stos
mov
bound
loopne
jecxz
mov
mov
iret
mov
inc
ficom
pop
mov
jne
push
xlat
jae
push
bound
mov
gs
mov
mov
mov
cmc
jp
es
inc
push
out
push
mov
in
inc
mov
stos
nop
fadd
aad
or
sbb
jmp
jne
jl
and
or
les
jp
add
mov
into
and
or
xchg
lds
adc
xor
fwait
and
lock
jo
cwde
adc
idiv
adc
fldcw
sbb
jb
cmp
mov
push
test
leave
ja
adc
aam
popa
xchg
aas
jno
inc
stc
out
sbb
xchg
pop
stc
or
xor
ins
stos
lock
test
xchg
mov
cwde
xchg
scas
dec
cmp
outs
fmul
call
ss
mov
aad
mov
or
clc
cdq
int
ds
sahf
xchg
idiv
pop
cdq
mov
mov
pusha
mov
or
les
into
pop
or
mov
ret
xor
mov
mov
scas
mov
mov
out
dec
cmps
shl
xchg
push
jmp
or
pop
mov
pop
add
loopne
mov
xchg
cmps
mov
add
inc
repz
pop
nop
jo
rcr
(bad)
fwait
push
inc
stos
in
push
mov
pop
dec
lock
mov
mov
icebp
cmc
push
pop
inc
fdivr
jne
pop
aaa
dec
loope
cmp
dec
push
or
add
mov
add
sub
scas
shl
imul
div
imul
pop
push
pop
shl
loop
loope
jmp
mov
sbb
(bad)
mov
test
pop
xchg
lds
sub
les
out
ret
out
shr
or
lock
pop
out
jmp
ss
cmps
int
xor
movs
int
arpl
popf
push
xlat
neg
and
push
fwait
popa
pop
xor
imul
xchg
jl
inc
dec
ja
dec
xchg
cwde
fcomp
xor
add
test
stos
dec
pop
cmp
or
xchg
push
rcr
(bad)
lahf
je
adc
mov
popa
inc
sub
push
data16
xchg
fistp
das
cmps
xlat
cdq
push
or
adc
mov
mov
out
dec
repnz
dec
pop
ds
fwait
fs
mov
aad
push
xor
jmp
lahf
inc
pop
or
sbb
int3
cmp
test
aam
mov
mov
add
mov
les
add
cwde
aas
ror
stc
inc
sar
jo
es
xchg
dec
faddp
inc
mov
xchg
adc
mov
aas
jnp
shl
or
cmp
mov
mov
or
sub
ror
xchg
mov
cs
in
jns
js
pop
xchg
nop
dec
mov
sahf
icebp
fimul
pop
repz
add
out
cmp
or
in
or
jmp
jb
add
scas
(bad)
in
jmp
fidivr
aas
inc
mov
add
jo
pop
mov
bound
push
fstp
jg
adc
adc
xchg
call
xchg
out
xor
fstp
or
mov
(bad)
stos
enter
push
out
xor
mov
cmp
sbb
fild
jo
push
jg
sar
xchg
inc
pop
fisttp
rcl
and
call
addr16
mov
xchg
pop
hlt
leave
lds
cmp
push
push
mov
imul
sub
retf
ret
jmp
inc
es
call
xchg
xchg
test
mov
dec
pop
pop
(bad)
fstp
mov
and
nop
sbb
push
dec
fmul
xor
cmp
cmps
sub
mov
cmp
adc
icebp
imul
fcmovnbe
in
jl
leave
pop
cmp
popf
arpl
scas
ins
mov
iret
push
lds
jmp
xchg
rcr
cmp
pop
dec
out
jno
aaa
call
sbb
jne
jb
lods
scas
clc
out
shl
lods
add
inc
inc
xchg
mov
not
add
cmc
test
pushf
js
into
imul
add
movs
pop
push
in
outs
or
sub
movs
out
mov
jle
jp
lock
mov
adc
out
xchg
jnp
fmul
jmp
rcr
sbb
sbb
icebp
mov
movs
sbb
inc
push
jae
jnp
mov
or
sahf
xor
ins
mov
iret
or
cmp
jp
jne
sar
out
into
loopne
mov
jbe
loopne
jno
xchg
out
sub
cmp
inc
dec
(bad)
cld
mov
ins
fimul
mov
sar
mov
cmps
xor
std
mov
cmps
sub
and
adc
push
mov
add
loopne
pop
cmp
xlat
jae
xchg
bound
sub
cmps
dec
repnz
jno
out
outs
sbb
fimul
add
repnz
inc
xchg
fdiv
daa
push
xchg
xchg
ror
fmul
inc
cmp
adc
inc
xchg
sub
in
mov
arpl
std
jae
pop
les
out
push
jae
jmp
or
xor
mov
xchg
test
adc
jb
push
pop
or
sub
retf
mov
popa
icebp
loop
pusha
test
lock
jl
and
inc
pop
mov
sbb
pop
push
xchg
sub
jmp
shl
mov
fwait
shl
daa
xchg
adc
(bad)
retf
shl
sbb
mov
add
pop
cwde
dec
push
jnp
repz
loopne
loopne
loope
mov
pushf
(bad)
jno
cmp
mov
adc
or
mov
cld
mov
aas
mov
test
adc
ret
icebp
push
xor
fisubr
xchg
mov
cmps
das
inc
pop
pop
inc
nop
lea
jmp
ret
rcl
fimul
sub
mov
shl
adc
adc
jne
addr16
imul
(bad)
mov
pop
pop
fcmovnu
fdiv
je
imul
sbb
mov
sti
bswap
outs
pop
pop
mov
lahf
cmps
jns
push
leave
retf
cdq
lods
ins
mov
jmp
in
sbb
into
push
jmp
leave
xchg
mov
cdq
add
or
es
xor
(bad)
mov
adc
inc
lock
cdq
outs
dec
push
sub
pop
sbb
out
sahf
mov
add
cmp
dec
dec
out
xchg
mov
pushf
std
xlat
sub
xchg
js
in
mov
xchg
push
jle
rcr
mov
cli
xor
pop
mov
or
cmps
add
jp
and
xchg
out
adc
loopne
xlat
adc
push
ds
rol
or
outs
jecxz
sti
test
xlat
xor
clc
or
push
and
out
xchg
fs
(bad)
and
adc
add
inc
mov
daa
push
sbb
scas
mov
enter
inc
add
movs
call
cmp
pop
aas
movs
mul
int3
(bad)
repz
int
hlt
jne
push
pop
out
xor
mov
stos
or
shl
adc
or
les
adc
fist
mov
out
std
dec
and
in
nop
mov
xchg
das
jmp
leave
jmp
add
sub
call
mov
jno
mov
or
inc
shr
xchg
mov
adc
and
mov
hlt
movs
jg
cmc
mov
push
inc
cmps
mov
inc
xlat
ror
frstor
cmp
das
ins
bound
lea
popf
adc
mov
push
sbb
push
ficom
sbb
mov
scas
dec
mov
nop
xor
xchg
call
lods
std
mov
ins
ror
retf
in
xchg
and
mov
mov
jg
mov
xchg
out
dec
fwait
add
aas
(bad)
pop
adc
or
jl
or
gs
mov
pusha
gs
dec
fmul
pop
mov
scas
(bad)
ss
mov
add
imul
aad
fiadd
fisub
fmul
sbb
repz
pop
rcr
loop
add
ss
push
sbb
add
mov
or
(bad)
xor
in
je
jmp
push
aad
inc
pop
fcomp
dec
inc
outs
iret
sbb
xchg
inc
fdiv
call
test
outs
jae
ins
jmp
mov
fld
ret
push
outs
out
pop
fnstcw
pop
inc
cwde
arpl
mov
sbb
inc
outs
sub
sar
jne
mov
pop
call
mov
or
inc
mov
daa
jne
jae
rcr
and
dec
and
xor
sbb
mov
cmp
adc
xchg
sbb
add
mov
dec
add
pop
icebp
pop
inc
inc
cmc
vmaskmovdqu
icebp
neg
inc
ins
sub
aaa
mov
dec
into
fistp
push
or
cli
cmp
inc
sbb
inc
ret
retf
sub
test
add
icebp
xchg
jle
inc
cmps
punpcklbw
adc
or
movs
or
or
xchg
aas
mov
mov
ja
sub
push
(bad)
jge
repz
cli
sub
push
repz
cmp
adc
dec
and
jbe
mov
jp
mov
aaa
lea
adc
mov
cmc
sub
inc
lock
call
jmp
pop
and
inc
scas
pop
and
jge
icebp
jo
sub
sbb
add
add
mov
test
ret
add
add
and
imul
clc
jp
push
pop
or
ror
and
icebp
out
out
dec
loop
add
std
jl
mov
das
pop
add
mov
fidivr
or
test
dec
push
leave
(bad)
mov
cmp
or
cwde
(bad)
std
xlat
stos
or
mov
adc
adc
adc
fcmovnu
jp
inc
cdq
lahf
pushf
dec
sti
pop
data16
push
in
mov
xchg
cli
sbb
push
xchg
inc
inc
cli
mov
jno
cmp
ficom
push
stos
test
pop
mov
outs
enter
pop
fcmove
jp
cwde
mov
data16
mov
(bad)
mov
retf
cdq
lock
(bad)
mov
xchg
jl
fs
adc
aam
jns
fs
in
movs
outs
inc
cmps
xor
inc
push
jp
add
mov
outs
les
inc
lock
push
scas
ret
out
adc
ficomp
(bad)
pop
xchg
movs
rcl
cmp
or
iret
mov
jno
push
ja
in
call
inc
enter
das
(bad)
jmp
or
ffree
int3
inc
inc
sbb
adc
inc
xchg
mov
jnp
and
mov
or
dec
push
ins
mov
repnz
ins
inc
xchg
call
cld
bound
cmc
mov
into
mov
lods
ds
xor
(bad)
scas
mov
ins
and
jg
fwait
adc
pop
adc
ss
pop
cmp
in
xchg
mov
pushf
out
xchg
dec
cmc
arpl
jmp
adc
inc
jns
cmps
mov
xchg
pop
cld
scas
fisubr
cmp
inc
shr
sbb
cmp
out
loope
or
push
add
loopne
dec
and
push
cs
out
push
es
movs
dec
rcr
xor
mov
fild
inc
sti
ficom
xor
xor
cmps
push
jecxz
mov
xor
scas
je
xchg
int
xor
inc
mov
inc
leave
(bad)
nop
jbe
loop
pop
cmc
retf
ss
sti
sti
push
imul
mov
daa
mov
inc
jge
xchg
movs
jle
mov
(bad)
adc
(bad)
and
cli
sahf
in
fimul
or
xchg
cdq
fwait
add
call
push
sbb
cld
fdivr
mov
cmc
(bad)
xlat
cmp
fstp
sbb
xchg
adc
pop
mov
and
mov
cmp
cmp
ja
push
dec
mov
mov
call
out
shl
movs
stos
cwde
sbb
cdq
aam
jge
cdq
cdq
into
mov
and
fucom
test
stos
dec
push
xor
inc
es
fwait
cmc
adc
jmp
sub
sub
add
adc
pop
xor
sar
mov
adc
mov
jne
lods
and
xchg
jns
fidiv
call
inc
into
loop
rcl
inc
xor
daa
jp
ja
sub
data16
outs
dec
popf
sbb
pop
dec
ret
pop
mov
pop
sbb
shr
jle
xchg
bound
cmp
and
cmp
adc
fs
cdq
sub
ds
out
call
or
test
imul
push
adc
jmp
leave
iret
cdq
mov
mov
int3
loope
push
cld
pop
jecxz
call
add
mov
mov
inc
pop
cwde
sub
cwde
jmp
rol
rcr
mov
xchg
dec
dec
mov
call
lahf
call
push
stc
pop
lock
ret
imul
outs
or
or
leave
cmc
lds
add
cmc
xchg
mov
jl
lods
jae
jle
sysenter
cmc
xor
mov
daa
aad
inc
inc
mov
aaa
add
pop
cmp
xchg
push
stos
js
lahf
ret
sbb
mov
mov
fcom
mov
add
daa
test
mov
xchg
adc
jmp
cmp
mov
push
rcl
outs
push
cli
fsub
fbstp
adc
nop
inc
leave
pop
std
cdq
mov
daa
cmp
not
mov
rcr
pop
mov
aas
mov
icebp
icebp
and
in
sub
sub
icebp
xchg
push
(bad)
ds
addr16
ja
test
dec
scas
pop
pop
dec
cld
xor
jb
adc
mov
dec
push
stos
pop
js
mov
ss
mov
mov
cld
aam
lods
enter
push
shl
mov
adc
call
rol
loopne
shl
fs
or
daa
gs
cld
je
xor
fisub
push
outs
out
loop
enter
sti
rol
cdq
cmc
cmp
push
ss
and
sbb
add
cmp
mov
pop
pop
pop
and
mov
fisubr
or
xchg
push
ret
(bad)
bnd
jno
and
and
jbe
shl
aaa
jmp
add
(bad)
push
in
mov
mov
xor
sbb
fwait
sbb
xchg
and
mov
push
call
mov
repz
mov
or
and
mov
mov
fild
fisttp
pop
pop
jnp
xor
sub
xchg
sbb
xchg
mov
jmp
mov
push
rcl
(bad)
xor
(bad)
cmc
and
jo
jp
xchg
ficom
fs
scas
jmp
push
mov
stc
mov
adc
xor
jmp
aas
adc
sbb
adc
aaa
or
shr
jg
add
fcomp
xchg
mov
les
(bad)
das
ins
aas
cdq
je
rcr
ss
cli
xor
pusha
sub
lea
repz
jge
push
dec
sub
bound
daa
out
rcr
push
stc
inc
outs
nop
addr16
pop
mov
push
push
inc
inc
mov
cli
ja
iret
lods
(bad)
mov
xor
inc
mov
pop
dec
test
retf
mov
push
inc
mov
jmp
fistp
jg
jle
and
mov
popa
xchg
inc
sub
pop
sub
xchg
notrack
out
test
adc
outs
lods
addr16
call
cmp
pop
aam
in
cmp
jmp
lods
fsub
push
ss
int
cdq
and
out
push
dec
push
rcr
sbb
out
push
dec
fld
test
cmps
push
push
dec
shr
das
cmp
inc
lahf
lds
aas
push
fiadd
ins
mov
push
push
push
aad
mov
sbb
inc
loop
dec
and
cmp
add
test
adc
mov
cmc
das
leave
mov
data16
pop
aad
adc
dec
(bad)
(bad)
cmp
cmp
iret
push
mov
pushf
scas
imul
mov
sbb
push
cs
(bad)
inc
adc
or
jnp
gs
inc
push
fcom
test
adc
or
mov
lea
frstor
aad
jne
iret
dec
pop
push
inc
mov
pop
mov
jb
mov
imul
lds
mov
xchg
add
scas
icebp
sub
sub
push
adc
(bad)
adc
int
test
sub
add
push
or
repnz
and
jae
push
dec
push
mov
push
shl
inc
xlat
pop
movs
clc
(bad)
jmp
push
jp
pop
push
cld
add
push
cmp
fild
mov
in
cdq
inc
sbb
dec
prefetchwt1
xchg
cld
das
jecxz
outs
test
adc
inc
das
rcr
push
ret
mov
or
lock
jns
fnstenv
test
push
cmp
enter
mov
scas
ret
pop
shr
movs
sar
mov
stos
or
and
mov
rsqrtps
sar
retf
inc
aaa
add
inc
xor
pusha
jae
xchg
add
sahf
stc
xor
aas
ret
sub
dec
push
add
push
dec
xchg
inc
sub
xlat
dec
fiadd
ja
mov
mov
pop
pop
lahf
ret
popa
ins
repz
pop
or
loope
(bad)
push
mov
lahf
sub
(bad)
ror
inc
xor
(bad)
inc
repz
scas
push
outs
push
push
ret
cs
or
outs
inc
pop
cmp
xchg
push
mov
(bad)
test
rcl
sub
and
fwait
adc
into
int3
test
mov
jns
test
retf
loop
pop
xor
inc
adc
call
fidivr
push
pop
sahf
mov
repz
mov
mov
imul
dec
push
stc
(bad)
or
mov
push
or
dec
idiv
rol
dec
mov
ins
or
adc
sbb
mov
stos
loop
and
inc
cmp
add
fs
test
dec
sub
xor
push
mov
jnp
jne
mov
sub
sbb
mov
(bad)
ds
cmp
cs
cdq
pop
arpl
add
push
pop
je
popf
mov
adc
je
ficom
sub
pop
je
ficom
std
loopne
push
(bad)
and
jb
jo
stos
int3
ins
add
inc
jge
ins
push
pop
jnp
pop
int3
sbb
out
addr16
pusha
xchg
ss
nop
dec
not
lahf
jnp
(bad)
push
mov
std
lds
push
aas
or
sbb
and
mov
xchg
mov
out
fwait
std
and
mov
mov
mov
push
adc
sub
mov
jae
imul
adc
icebp
cmp
sbb
adc
movs
xchg
int
es
or
sub
call
sti
sub
mov
and
les
fiadd
jg
loop
movs
adc
repnz
or
push
cmp
inc
xor
xchg
shl
call
lds
xchg
pop
adc
ror
mov
mov
shufps
xlat
cli
cld
xor
sub
pop
jmp
and
and
leave
clc
rcl
mov
bound
shl
cdq
test
jae
xchg
or
shl
push
inc
fsub
out
sbb
retf
cli
pop
lds
das
adc
lods
outs
xchg
inc
add
aam
cmps
push
cld
test
xor
retf
lock
mov
ss
stc
xchg
adc
mov
and
inc
test
fcmovbe
into
fsubr
xchg
imul
ja
or
aaa
lock
jp
mov
xchg
inc
cmp
int3
outs
xor
rcr
lahf
pop
div
cld
bound
sub
xor
retf
fwait
(bad)
cwde
test
fiadd
xchg
lods
arpl
in
and
inc
(bad)
sub
add
(bad)
cdq
push
jae
pushf
popf
sahf
mov
lds
pop
int3
lock
pop
push
(bad)
scas
mov
jne
xchg
xchg
rcl
cmp
inc
pusha
int
add
test
sti
pop
pop
fmul
leave
cmp
je
dec
push
jno
jo
daa
cmp
scas
test
sub
pop
dec
retf
in
inc
repnz
cmp
test
pop
sub
jo
ret
arpl
sbb
and
jns
ret
gs
rcl
sub
push
outs
ror
test
mov
or
dec
ins
aam
shl
mov
sahf
cs
rep
dec
inc
dec
in
adc
or
cmp
mov
xchg
jno
pop
cmps
push
int
(bad)
cmps
adc
or
data16
mov
(bad)
adc
mov
mov
out
mov
push
mov
xor
ret
add
cs
test
and
sbb
adc
bnd
ss
xchg
sub
xchg
scas
mov
arpl
sub
clc
cli
push
sar
inc
add
lea
pop
fsubr
inc
out
jmp
int
pop
mov
fs
mov
fcomp
lahf
sub
ret
jmp
pop
mov
div
pop
aad
lods
sub
xlat
jno
and
stos
div
not
ja
mov
test
mov
jmp
(bad)
lock
dec
ins
mov
cmp
lock
inc
imul
push
ficomp
in
jo
inc
iret
mov
(bad)
mov
dec
add
out
fld
add
mov
(bad)
add
ret
fwait
test
jmp
mov
in
clc
scas
sbb
push
pushf
ret
test
retf
pop
pusha
dec
push
cmps
rol
adc
push
or
mov
(bad)
test
icebp
sub
out
pop
dec
sub
push
push
sub
mov
fcom
lahf
enter
mov
retf
outs
test
fucomp
jbe
xchg
loop
repnz
les
or
inc
in
mov
in
dec
(bad)
(bad)
mov
arpl
jns
jno
mov
cmps
mov
fsub
pop
xchg
add
dec
(bad)
jg
dec
mov
sbb
cmp
and
cmp
xchg
push
cmp
mov
dec
pop
inc
push
and
or
int3
pop
pop
jb
push
fild
ds
dec
xchg
sub
cmp
cmp
adc
lds
push
add
retf
outs
cmps
adc
mov
fcmove
outs
mov
retf
xlat
rol
dec
push
push
retf
add
push
dec
outs
or
cmp
inc
or
dec
mov
add
cmp
cmps
push
aaa
cmc
aad
or
or
push
(bad)
lods
jb
ret
(bad)
icebp
inc
mov
clc
(bad)
sub
iret
inc
push
pop
mov
xor
lods
lods
(bad)
scas
outs
arpl
ror
sbb
(bad)
mov
jns
mov
ret
dec
fnstenv
inc
test
mov
jne
loope
add
mov
lds
lea
mov
and
fild
jle
aaa
mov
mov
repz
pop
lahf
pop
pop
stos
in
and
loope
cwde
dec
or
call
cld
fbld
mov
dec
mov
call
dec
pushf
mov
adc
lahf
fucomi
icebp
xor
stos
cmp
xor
loop
addr16
loopne
push
call
pop
mov
lahf
and
pop
fsubr
inc
scas
and
sub
in
loop
mov
pop
or
inc
in
js
push
(bad)
out
jp
popf
adc
jb
in
test
adc
stos
or
shr
cld
rol
fisub
test
ins
call
stos
mov
pop
mov
sar
cs
out
add
push
cs
imul
sub
bound
push
mov
jl
adc
jno
into
cmc
sub
push
mov
daa
pop
scas
cs
not
dec
jecxz
pop
sbb
push
int3
adc
inc
repz
shl
mov
add
add
mov
pop
ds
or
cmp
adc
pusha
movs
cmp
(bad)
jmp
mov
sub
lahf
adc
xor
(bad)
cld
enter
sub
xchg
jns
mov
inc
addr16
dec
push
out
and
sub
fidiv
bound
aaa
xchg
jb
out
shl
mov
jno
mov
fs
sar
sub
repz
out
mov
adc
mov
movs
mov
or
dec
loope
and
movs
int
adc
repz
int3
or
sahf
mov
cli
stc
aas
sbb
mov
hlt
repnz
fsub
mov
movs
(bad)
retf
and
ror
nop
xchg
adc
lahf
add
fimul
jae
pop
in
test
shr
loopne
lds
push
inc
push
adc
mov
push
inc
popf
pop
inc
fs
cwde
lods
add
sub
jecxz
(bad)
mov
addr16
inc
mov
push
sub
cmp
prefetchnta
test
into
jp
movs
test
cmps
xor
call
aad
mov
cwde
push
xor
mov
mov
repnz
sub
xor
mov
jg
push
aaa
fwait
aas
mov
sub
sbb
sub
ins
adc
int3
jp
sahf
shr
fistp
adc
or
lahf
mov
push
imul
sbb
cmp
mov
enter
data16
leave
(bad)
push
dec
(bad)
mov
pop
jb
jo
dec
mov
stc
mov
pop
fisubr
std
jg
sub
mov
imul
loop
cmp
push
clc
mov
fsubr
rcl
es
add
rol
jp
jns
adc
and
lods
pop
cmps
cmp
ror
shl
dec
pop
dec
cs
enter
push
jo
mov
stos
xor
mov
push
xor
in
jbe
test
imul
out
in
mov
pushf
cmp
cld
cmp
aam
shl
sub
(bad)
or
std
push
push
pop
lock
cdq
daa
adc
adc
jl
jne
fadd
sub
pop
fwait
jmp
mov
lahf
add
ja
mov
enter
enter
(bad)
ins
or
cdq
or
cmp
out
cli
cs
dec
inc
cmp
mov
fist
adc
mov
cmp
mov
sub
ret
cmp
dec
mov
shl
jmp
cmp
cmp
adc
cmp
mov
bound
data16
in
cdq
popf
mov
or
adc
ds
and
jnp
push
or
push
cdq
mov
outs
into
sti
scas
lahf
into
xchg
inc
leave
das
push
int
cmps
jmp
daa
pop
sub
rol
add
ret
mov
sub
jnp
es
dec
push
loope
inc
adc
jo
js
leave
mov
push
in
lea
(bad)
shl
dec
push
jae
(bad)
sbb
nop
inc
push
ins
int3
out
fnsave
ss
and
out
jns
adc
cwde
pop
dec
(bad)
ss
push
out
dec
jb
mov
and
mov
jp
xor
cmp
fcmovnu
xlat
leave
fldcw
lock
loop
daa
cmps
loopne
pop
adc
arpl
mov
out
inc
pop
pop
aad
out
pusha
adc
mov
out
retf
mov
pop
hlt
in
ds
jns
jo
ss
out
loope
jge
xchg
push
(bad)
push
jmp
int
mov
mov
cmps
mov
adc
jl
dec
js
call
xchg
repnz
mov
xlat
xchg
fcomp
sbb
loop
movs
mov
inc
out
or
and
push
test
pop
out
ret
push
pushf
(bad)
mov
sub
inc
push
in
mov
aad
pop
retf
fild
mov
test
retf
adc
cmp
sbb
dec
mov
or
and
sbb
sti
and
mov
imul
out
xchg
addr16
fwait
mov
cmp
xlat
inc
mov
scas
clc
je
ret
mov
les
mov
jb
cmp
(bad)
(bad)
push
xchg
(bad)
out
add
xchg
xchg
jb
(bad)
mov
not
sbb
cmps
leave
movs
inc
and
fidivr
cmp
je
jmp
int3
pusha
sbb
sbb
add
mov
or
dec
js
cs
mov
imul
dec
push
pop
mov
enter
jmp
adc
push
sub
inc
test
icebp
jbe
sub
mov
mov
mov
pop
int3
inc
mov
out
xchg
call
mov
jne
popf
and
cmps
xchg
out
sub
es
test
retf
cmp
sub
clc
cmps
(bad)
cmp
add
mov
sbb
lods
ja
icebp
xchg
sub
mov
fldcw
push
loop
inc
dec
in
inc
ret
push
push
pushf
lds
mov
cmp
dec
mov
inc
cwde
xchg
and
sub
stos
inc
fadd
xlat
push
test
scas
sbb
pop
or
jmp
pop
std
cli
or
scas
adc
test
jp
mov
add
jmp
ss
inc
dec
mov
mov
jbe
mov
push
push
pop
jle
add
and
and
ins
mov
fdivr
or
fnstcw
or
js
mov
add
in
inc
loopne
cmp
aam
and
popa
and
mov
inc
(bad)
mov
fist
mov
mov
adc
fisubr
lods
and
out
add
jp
data16
pushf
xor
mov
mov
sub
xchg
adc
sahf
mov
push
imul
iret
mov
ret
fmul
sbb
mov
mov
xchg
sub
add
mov
jge
xor
xchg
icebp
sub
and
dec
pusha
or
sbb
out
mov
xchg
iret
test
shl
ss
and
pop
ret
and
outs
add
dec
in
mov
cmps
sub
push
nop
(bad)
int
xlat
mov
aaa
pop
shl
cmp
leave
icebp
sbb
push
or
xor
(bad)
movs
push
dec
cmc
rcl
mov
rcr
xor
leave
and
push
outs
scas
mov
cmp
sbb
push
(bad)
jne
stc
fdiv
jp
outs
in
outs
cwde
or
add
inc
xor
sbb
xchg
jp
adc
inc
js
or
cmp
(bad)
into
push
dec
dec
es
(bad)
in
sbb
ret
popa
movs
pusha
add
mov
xor
(bad)
(bad)
cmp
stc
xchg
and
cmps
pop
test
gs
add
push
or
push
cmp
outs
movs
fmulp
clc
xor
pop
pop
repnz
stc
inc
aam
rol
dec
add
pop
mov
iret
mov
pop
stc
inc
and
sub
nop
xor
dec
loopne
and
mov
jg
push
ja
repz
xchg
cmps
xor
fs
pop
xchg
sub
push
sbb
lock
mov
fistp
test
inc
xlat
jnp
aad
or
hlt
pop
pusha
inc
jl
repnz
test
in
jnp
jl
push
shl
and
clc
xor
mov
inc
lahf
mov
jg
(bad)
les
test
mov
loope
clc
and
adc
loopne
sub
xor
push
sti
ja
jmp
jo
mov
in
ja
(bad)
mov
xchg
psrlw
cmps
jl
sbb
sub
dec
jns
(bad)
xchg
adc
push
mov
cmc
add
cmp
sbb
ret
imul
je
(bad)
(bad)
stc
inc
test
cwde
and
(bad)
sbb
movs
dec
out
mov
dec
or
adc
loop
repz
adc
out
icebp
adc
adc
push
dec
stos
ins
add
xor
inc
arpl
inc
adc
in
push
push
adc
push
push
xchg
sub
cli
gs
lds
push
test
loopne
in
bound
xor
aaa
arpl
scas
das
sti
in
not
(bad)
cmps
add
jb
mov
adc
call
test
movs
mov
cdq
add
call
scas
call
xor
pop
lea
dec
stos
adc
xor
mov
pop
hlt
stos
sahf
fdiv
cli
pop
rol
fld
mov
add
js
lock
push
aaa
scas
sbb
jnp
les
psubw
and
sbb
mov
int3
cmp
pop
shl
ins
out
mov
out
cmp
ja
jl
repz
das
jae
lods
cmp
and
pusha
cmp
(bad)
push
add
or
xor
jae
aaa
dec
ins
out
cmp
add
(bad)
int3
mov
test
xlat
mov
inc
lds
pop
pushf
loop
pushf
scas
jge
popa
mov
pop
gs
jg
adc
push
gs
jbe
std
adc
test
push
hlt
xor
push
sub
mov
aad
imul
(bad)
pop
push
add
call
fnsave
mov
push
retf
add
adc
aad
sub
xlat
xchg
xchg
(bad)
(bad)
std
add
jp
mov
aaa
jb
adc
sahf
add
std
je
les
push
jmp
cmp
sahf
xor
jb
(bad)
int
fwait
dec
iret
mov
xor
dec
inc
daa
clc
loopne
sbb
and
cmps
sbb
inc
push
jmp
dec
adc
mov
movs
cli
fcomip
jnp
and
clc
mov
ret
int
dec
pop
imul
add
out
jne
push
push
inc
ficom
inc
repnz
retf
or
stos
xchg
cmps
add
jp
loopne
(bad)
mov
add
push
call
add
inc
jnp
adc
hlt
jge
pop
mov
mov
mov
std
push
add
repz
jecxz
or
loop
(bad)
jne
or
push
or
mov
mov
ret
inc
push
cmp
jl
dec
mov
cmp
cs
loopne
pop
cmp
shl
shl
cli
mov
ficomp
neg
es
push
jbe
mov
mov
sub
jae
mov
cmp
sbb
adc
cmps
mov
pop
inc
inc
and
mov
mov
inc
popa
scas
test
(bad)
xlat
test
xchg
lds
(bad)
stos
(bad)
int3
dec
cmps
out
shl
sbb
cs
or
add
adc
lods
popa
lods
outs
xchg
add
cmp
push
ficomp
test
or
fnstenv
push
test
das
mov
jl
add
jae
lds
sub
sub
adc
les
out
pushf
aas
sub
xchg
xor
mov
shr
(bad)
call
or
shl
dec
push
xor
mov
mov
dec
cmp
cmc
cmp
repz
mov
loop
scas
lds
push
push
adc
movs
and
scas
xor
push
mov
jns
ss
or
ret
out
fwait
pop
mov
(bad)
cli
and
std
push
aad
and
xlat
cmp
stos
cli
call
xlat
fild
jge
dec
pop
fld
aaa
cmp
mov
scas
sub
icebp
(bad)
push
(bad)
cli
sub
sub
cmp
xchg
jp
xchg
lea
push
sbb
fisubr
mul
add
scas
xchg
fdiv
xor
js
mov
sbb
inc
mul
cmps
mov
out
(bad)
jp
imul
jo
sahf
mov
jmp
mov
mov
dec
cmp
test
stc
fild
out
out
outs
pop
jne
call
cmp
ficom
cmc
add
sub
jbe
fld
jp
lock
(bad)
stos
outs
cli
fbld
jo
jnp
inc
push
sbb
pusha
mov
fist
(bad)
call
rol
gs
mov
cmp
adc
cs
mov
(bad)
mov
rcr
cmps
push
pop
call
and
in
(bad)
es
icebp
mov
sub
push
and
add
daa
test
add
xor
in
sbb
retf
stc
je
mov
push
dec
inc
loop
test
add
push
jns
enter
mov
jl
mov
(bad)
mov
jae
xchg
xchg
ins
sbb
hlt
push
pop
shl
adc
mov
cmp
cmc
sar
jns
jae
out
arpl
gs
pop
fisttp
sbb
enter
sub
dec
xchg
push
adc
xchg
xor
aad
hlt
xchg
idiv
lahf
inc
int3
cmp
scas
cmp
scas
pop
mov
pop
mov
jl
stc
push
add
and
dec
and
iret
test
mov
out
in
imul
ret
cmp
sub
sub
jle
mov
jecxz
inc
mov
cmp
mov
sahf
xchg
jle
xor
push
fisub
aad
int
dec
stos
comiss
push
frstor
out
cmp
pop
loop
cmp
adc
mov
add
xor
inc
fstp
jbe
mov
dec
push
cld
test
xor
or
mov
cmp
int3
mov
sbb
xor
jbe
ins
ins
sub
imul
test
cmps
jmp
mov
mov
jne
dec
jnp
jmp
aas
movs
dec
outs
add
add
inc
je
pop
add
fild
pop
jns
fwait
popa
out
pop
jge
inc
mov
mov
xchg
repnz
push
clc
mov
xor
mov
fucomp
push
dec
jae
add
jl
ret
not
xchg
xchg
push
out
es
xchg
adc
cmps
and
stc
dec
push
push
inc
mov
xor
idiv
pop
jecxz
dec
hlt
mov
add
mov
push
mov
push
mov
xchg
in
lock
aas
mov
inc
xchg
out
push
cwde
into
cwde
movs
push
adc
pop
cmp
inc
inc
and
mov
and
test
add
cmp
lods
arpl
shl
out
(bad)
cmps
mov
cmp
pop
dec
rcr
fwait
sbb
hlt
add
jb
lods
pop
je
pusha
ret
xor
out
cld
outs
pop
push
mov
fbstp
jge
jmp
inc
(bad)
cmps
ret
rcl
push
dec
jnp
xor
mov
jge
stc
xor
in
sti
adc
and
fistp
fcmovu
mov
loop
xchg
rol
sbb
push
aam
or
inc
int3
xlat
adc
and
(bad)
(bad)
idiv
adc
add
movs
hlt
dec
int
repnz
adc
retf
xor
mov
fst
pop
aam
jge
inc
cwde
mov
fs
xchg
and
jge
neg
rcl
sub
jbe
lods
stos
pop
pop
xor
iret
add
aaa
arpl
pop
mov
cmps
inc
ror
push
push
bound
out
out
(bad)
xor
pop
arpl
je
fld
and
mov
jmp
mov
stc
cmp
pop
jbe
test
jg
inc
add
imul
xor
fwait
push
nop
mov
cmp
push
popf
mov
inc
or
mov
das
or
pop
adc
xor
icebp
xchg
lds
in
mov
lahf
add
mov
outs
lock
and
mov
lods
cdq
pop
xor
inc
jae
icebp
in
xchg
cmp
inc
fwait
je
mov
xor
ret
bound
pop
or
and
dec
repz
push
fistp
jno
mov
or
sbb
test
lea
aam
adc
dec
and
rcl
ins
add
sub
test
add
mov
rcl
fadd
mov
lods
out
jbe
xor
cmp
sub
test
pop
mov
outs
mov
cmp
jl
ds
icebp
aam
lods
out
cmps
jmp
outs
adc
(bad)
cmp
call
xchg
or
inc
movs
pop
fcom
imul
xchg
daa
es
push
repnz
das
iret
(bad)
pop
xchg
pop
or
jg
(bad)
xor
not
test
fcom
loope
sub
mov
repz
std
mov
cld
out
shl
ds
or
lds
fisub
push
add
iret
mov
sbb
shl
idiv
sub
adc
jmp
loope
dec
cmps
mov
repnz
xor
(bad)
(bad)
jp
pop
in
jmp
lods
xchg
pop
loopne
cmp
outs
xor
sbb
mov
mov
adc
sbb
mov
xchg
jl
or
dec
sub
mov
das
sub
cmp
loope
ins
out
outs
push
add
nop
and
call
mov
clc
pop
adc
xchg
into
aas
pushf
xor
lock
mov
add
push
clc
adc
push
dec
iret
(bad)
and
lea
xor
shl
add
jnp
pushf
fcmovbe
inc
imul
(bad)
adc
mov
lds
scas
push
cli
add
jo
mov
fnstcw
xor
cwde
pop
call
lds
adc
add
sub
scas
adc
xchg
and
imul
jmp
xlat
jns
push
stos
mov
cmps
cmp
arpl
test
fwait
push
stos
fidivr
sub
leave
mov
inc
sub
jmpw
push
lock
dec
lock
dec
jmp
and
mov
(bad)
jg
inc
xchg
loope
add
push
sbb
clc
xor
aaa
jns
mov
or
outs
xchg
(bad)
(bad)
ror
bound
cmp
inc
clc
push
ror
xor
lods
xchg
call
or
sub
popf
ja
or
sbb
add
jbe
ins
in
imul
jmp
xchg
mov
out
iret
je
push
mov
mov
aas
int3
repz
sub
ins
adc
push
ror
cmps
jno
cli
enter
arpl
daa
jns
jae
lds
ret
(bad)
jmp
lock
inc
nop
inc
xchg
ins
cmps
dec
test
movs
mov
retf
aas
mov
imul
fild
mov
or
dec
jmp
idiv
adc
add
jle
cmp
std
mov
adc
add
pusha
adc
mov
sar
jns
or
sub
mov
push
dec
jbe
pop
fdiv
cmps
dec
push
xor
dec
sbb
inc
xchg
add
adc
sbb
out
jge
dec
stos
aam
mov
movs
mov
cmp
jno
dec
pop
mov
mov
cmp
test
shr
adc
pop
adc
addr16
sub
jae
jge
daa
mov
push
aad
lahf
mov
and
hlt
sub
out
mov
(bad)
(bad)
(bad)
jnp
mov
jge
add
ja
push
in
xchg
aas
fld
sahf
repnz
sbb
aad
pop
dec
cmp
rcl
sub
jg
mov
push
retf
jmp
lock
jne
(bad)
addr16
pop
xor
in
movs
(bad)
js
and
sub
xor
jecxz
sar
xchg
lods
mov
fidivr
outs
test
repz
inc
pop
repz
push
or
push
popf
aam
sub
test
mov
mov
push
test
repnz
inc
arpl
and
repnz
outs
ss
jo
xor
movs
inc
sbb
adc
inc
lods
mov
test
pushf
mov
pop
push
push
jne
int
push
sahf
cmps
xchg
xchg
int3
fcmovnb
xchg
jecxz
retf
pop
mov
lods
leave
das
cld
cwde
sar
push
fs
iret
(bad)
xlat
stc
jnp
adc
mov
mov
cld
mov
mov
xor
inc
adc
fcom
fsub
add
les
add
add
in
pop
mov
add
sbb
popf
mov
xchg
adc
push
jb
sar
and
dec
cmps
inc
ja
xchg
mov
or
hlt
xchg
arpl
shl
(bad)
mov
xchg
mov
jg
int3
push
inc
aam
lods
or
outs
xor
pop
mov
lods
aam
sahf
or
jne
jecxz
xchg
mov
nop
cdq
push
mov
mov
add
nop
into
movs
xchg
add
sbb
push
add
mulps
xchg
mov
fild
push
imul
and
xchg
sub
js
mov
jmp
(bad)
or
(bad)
and
mov
jbe
push
lods
jmp
mov
or
or
mov
xchg
pop
jg
mul
test
jp
in
jmp
(bad)
enter
test
test
gs
jl
add
xrelease
pop
inc
mov
xchg
out
and
(bad)
sar
in
ss
aad
imul
inc
mov
fidiv
inc
lds
mov
jle
shl
mov
and
jle
aad
into
adc
stos
popa
inc
repz
push
sbb
mov
inc
movhps
outs
sub
cmp
jno
push
mov
jo
jge
(bad)
xchg
fcomp
lds
or
aaa
xchg
inc
mov
push
xchg
push
fs
add
xchg
imul
cmp
ja
mov
sub
(bad)
(bad)
mov
jb
loop
test
je
dec
iret
(bad)
(bad)
cmp
outs
pop
cmps
add
mov
bound
adc
test
(bad)
aas
(bad)
popa
xchg
mov
dec
dec
or
loopne
rep
jns
pop
xor
(bad)
sub
xor
dec
jnp
add
aam
pushf
das
rcr
jb
mov
push
xchg
sub
dec
loopne
jle
dec
jo
inc
sub
arpl
dec
mov
mov
cmp
adc
or
cli
jmp
inc
dec
scas
(bad)
int3
sub
ja
sub
inc
fcomip
or
sub
sti
sbb
jecxz
mov
in
(bad)
hlt
test
scas
and
or
out
imul
test
add
mov
stos
test
jmp
xor
imul
mov
jl
fld
ins
out
xchg
inc
dec
sub
imul
test
fwait
lahf
xor
dec
mov
mov
mov
pop
add
pop
arpl
mov
fs
fadd
pop
mov
out
popf
iret
and
ins
repnz
nop
push
xchg
clc
jae
(bad)
icebp
push
cdq
mov
test
test
lock
cld
sbb
gs
(bad)
or
shr
cmp
or
pop
cmp
nop
push
xchg
pop
mov
imul
sub
xor
stos
addr16
into
repnz
loopne
push
fcmove
cmovae
and
xor
sub
mov
adc
shr
les
cmps
add
test
mov
jno
popa
cmc
(bad)
fwait
xor
daa
call
sub
mov
out
(bad)
dec
cwde
movs
clc
sbb
or
xacquire
mov
(bad)
lds
fsub
xor
shl
sbb
push
rcr
in
pop
jl
cwde
sub
scas
fld
out
sbb
movs
xchg
out
loope
inc
xchg
test
or
dec
cmc
sbb
or
dec
mov
cmps
icebp
fisttp
ins
int
xor
fst
shr
push
ss
es
jle
pop
ret
iret
pusha
sbb
ds
xchg
inc
out
push
xchg
adc
test
shr
stos
jp
adc
cwde
adc
mov
sbb
stos
popf
(bad)
xchg
add
mov
xor
xor
ret
xchg
pushf
retf
push
mov
push
arpl
dec
bound
rcl
jecxz
or
adc
lods
fistp
hlt
dec
daa
add
sub
xchg
cmp
pop
jbe
inc
out
fst
or
test
mov
frstor
shl
push
inc
les
jno
xor
pcmpgtd
scas
dec
fs
mov
mov
mov
mov
adc
rcl
ja
mov
into
pop
fsub
mov
xchg
(bad)
mov
mov
dec
inc
sahf
push
pop
retf
out
xchg
fdivr
mov
out
push
mov
sahf
outs
sbb
sub
bound
loope
into
popa
sub
cli
jmp
xor
or
dec
jl
mov
stos
xchg
stos
xor
dec
ja
xor
cmp
mov
lahf
je
dec
jnp
pop
add
dec
sub
xchg
imul
mov
shr
push
lock
gs
(bad)
xor
je
gs
xchg
cmps
es
cwde
outs
and
scas
(bad)
out
std
mov
cld
or
repz
ds
in
aaa
xchg
mov
aaa
and
dec
pop
(bad)
iret
outs
jnp
sub
cmp
jp
jg
sahf
into
cdq
jmp
mov
arpl
into
xchg
shl
sbb
sahf
cmp
pop
clc
inc
(bad)
push
enter
push
xor
add
scas
mov
popf
(bad)
rcl
gs
aas
xchg
nop
ins
or
dec
rcl
dec
sbb
pop
pop
mov
cld
adc
aas
inc
mov
inc
push
xchg
ins
mov
std
test
xlat
inc
inc
and
add
scas
xchg
xor
sahf
fistp
ins
pop
movs
shl
add
push
pop
adc
outs
out
rol
and
cwde
repz
aaa
(bad)
pop
retf
arpl
sbb
jbe
pop
push
mov
pop
cmp
and
test
pop
and
test
add
mov
xor
push
loopne
mov
rol
add
xor
cwde
mov
mov
dec
sbb
adc
cli
jns
out
jp
cmp
xchg
dec
mov
mov
out
js
icebp
mov
and
push
pop
pop
dec
popa
pop
test
ds
icebp
loop
movs
mov
push
rcl
push
or
add
sub
movs
call
scas
dec
test
lds
sbb
jp
fldcw
mov
and
dec
outs
or
lock
fistp
add
mov
inc
push
mov
addr16
mov
lock
out
in
mov
hlt
pop
cdq
sbb
rcr
retf
(bad)
jnp
inc
xor
inc
cdq
cmp
inc
js
mov
mov
ret
or
jmp
xchg
(bad)
das
or
lds
adc
jns
loop
xlat
add
mov
adc
movs
jb
pop
shr
pop
loop
cmps
and
xor
xchg
cmps
sahf
push
repz
inc
and
mov
pop
cmp
mov
mov
leave
inc
imul
cmps
(bad)
ins
dec
pop
mov
sub
sar
xchg
sahf
popf
or
ins
add
push
(bad)
jmp
test
jnp
pop
nop
mov
je
cli
hlt
mov
dec
cmp
xor
outs
ss
dec
mov
mov
sub
add
dec
rol
and
or
aas
pop
(bad)
shr
call
xor
xchg
outs
scas
pusha
xchg
mov
pop
mov
inc
push
jecxz
xlat
popa
jmp
adc
into
test
fmul
xor
pop
xor
jbe
mov
xor
sti
mov
out
jge
jns
jno
aad
(bad)
nop
jnp
(bad)
stos
push
ret
shl
je
sbb
jae
hlt
pop
or
ss
lahf
or
mov
sbb
dec
push
and
push
and
das
mov
cmc
ficom
retf
std
loopne
add
(bad)
loope
sahf
sub
lds
mov
sub
aad
gs
stc
retf
bound
mov
push
or
stc
bound
dec
in
fdivr
mov
and
mov
mov
jno
cmps
sub
mov
pop
les
add
ja
mul
(bad)
out
pop
push
mov
movs
add
jl
inc
xchg
adc
lahf
or
jnp
sub
pop
jns
push
xor
retf
icebp
sub
sahf
mov
(bad)
mov
push
adc
add
cmp
mov
loop
dec
ret
or
mov
loopne
inc
cdq
jae
push
iret
adc
ss
push
hlt
movs
or
push
leave
out
cmps
sahf
sbb
push
call
xchg
jno
mov
outs
mov
mov
imul
loope
ds
sub
fisubr
mov
mov
add
mov
sbb
data16
sub
movs
movs
mov
ss
addr16
add
lock
rcr
sub
cmp
arpl
mov
push
mov
retf
ret
addr16
loopne
mov
sub
gs
mov
adc
mov
jle
push
sbb
test
sub
fs
add
jb
data16
je
cld
ss
xchg
fistp
mov
daa
mov
push
sbb
jecxz
popa
ja
lahf
scas
sti
xchg
push
mov
dec
inc
dec
pushf
and
cmc
fdiv
jge
xchg
js
xlat
push
ret
popa
sub
retf
adc
or
imul
push
(bad)
pushf
cmps
mov
cwde
pushf
xor
mov
adc
shl
sbb
inc
movs
clc
test
lea
idiv
xchg
cmp
clc
sar
cmp
lahf
adc
inc
inc
push
inc
dec
or
xor
(bad)
add
mov
mov
aam
pop
fild
jecxz
lock
push
push
aad
iret
pushf
dec
sbb
sub
imul
adc
ins
movs
sub
cmp
sub
mov
arpl
das
imul
lds
dec
and
(bad)
cmp
in
frstor
xchg
and
fstp
lods
dec
outs
clc
inc
dec
cmp
popf
fucom
int3
and
ret
inc
xor
mov
sbb
sub
and
xor
cmp
pop
sbb
dec
add
ja
jb
jne
sbb
jg
or
push
sub
scas
mov
xor
fisub
and
xchg
mov
movs
ss
sub
das
daa
mov
push
je
test
icebp
bound
and
fcom
stos
pop
push
ds
mov
jne
cmp
rol
sub
pop
xchg
retf
int3
pop
xchg
dec
mov
dec
enter
in
xor
inc
xchg
pop
xchg
xchg
dec
ds
aam
cmp
aas
daa
pop
shl
dec
aas
mov
inc
mov
inc
fisubr
out
xor
or
retf
fistp
dec
add
jb
xor
mov
push
movs
inc
out
adc
pop
cmp
mov
adc
sbb
push
jmp
es
retf
cs
mov
call
(bad)
push
fild
in
mov
mov
pop
and
adc
(bad)
inc
xor
sub
int3
mov
ror
or
jbe
in
(bad)
retf
jg
mov
push
ror
push
inc
dec
xchg
stos
push
mov
sub
mov
pop
sub
rol
loop
dec
mov
jno
jno
or
adc
mov
test
or
or
cmp
call
jp
push
cmp
jecxz
adc
stc
jg
mov
cmc
(bad)
mov
(bad)
(bad)
cmp
and
add
out
push
sbb
imul
cmc
jecxz
jecxz
or
cmp
push
sbb
push
enter
or
cdq
jo
aas
or
mov
add
es
cmp
cmc
(bad)
cmp
dec
aaa
mov
jb
cmp
cmps
pop
cmp
mov
xor
jae
repz
fnstsw
cld
je
imul
xor
mov
ins
mov
push
jge
or
push
adc
dec
jl
ret
mov
adc
xor
and
push
push
pop
cmp
int
retf
xchg
mov
sbb
lahf
enter
ss
mov
dec
mov
pusha
das
xchg
imul
sahf
cmc
xor
(bad)
mov
stos
mov
jbe
scas
(bad)
loope
in
jecxz
dec
in
stos
stos
mov
cmp
arpl
jnp
jecxz
add
sub
pop
or
xor
leave
cwde
xchg
je
mov
out
jmp
aas
aad
stos
dec
repz
jo
std
inc
cmp
jns
xlat
test
adc
dec
adc
cld
fild
test
xor
loopne
add
repnz
mov
imul
jbe
pop
xchg
in
(bad)
in
call
shr
ja
mov
cmp
loope
shr
sub
push
push
mov
add
push
xor
or
fld
push
popa
cmp
js
add
mov
mov
inc
in
jae
mov
repnz
jae
push
nop
cmp
jae
cdq
inc
fisub
lods
gs
mov
into
cmp
mov
ja
arpl
or
iret
push
push
rcr
add
sbb
nop
cmps
sub
mov
mov
hlt
push
mov
mov
pop
(bad)
pop
push
test
ret
xor
test
in
xchg
sbb
retf
pushf
jbe
jecxz
and
add
push
jns
rdmsr
push
inc
(bad)
mov
xchg
stos
ja
ins
in
cmp
aaa
cmps
clc
xor
add
popf
cmps
mov
clc
or
adc
cli
push
out
test
jne
dec
add
aam
movs
outs
ret
rol
enter
or
jae
clc
out
mov
pop
inc
imul
xor
or
ins
jle
in
xor
and
or
imul
pop
push
cmp
and
fistp
xor
daa
inc
inc
repnz
or
xchg
inc
lock
jge
mov
xchg
sub
push
mov
aad
mov
push
add
push
jmp
xchg
dec
xor
sub
aaa
jle
idiv
push
cld
sbb
int
shl
pop
xchg
add
imul
hlt
call
ror
pushf
icebp
sbb
adc
xor
dec
das
ja
xor
sub
clc
pusha
and
jge
outs
dec
lods
sub
mov
pop
sbb
mov
ds
pop
cmp
scas
xchg
bound
adc
pop
bound
mov
mov
sub
adc
pop
xor
push
xchg
(bad)
(bad)
mov
or
(bad)
sub
ret
adc
sbb
jl
inc
mov
inc
sbb
gs
hlt
push
push
jge
rol
jb
out
mov
mov
clc
in
or
jp
or
xor
jp
mov
sbb
adc
sub
xchg
jmp
andnps
and
push
inc
ds
imul
call
pop
sahf
gs
push
xchg
leave
stc
add
outs
stos
shl
outs
xchg
xchg
sbb
imul
dec
lea
out
push
bound
loopne
jle
xlat
inc
mov
mov
mov
pop
sbb
sub
into
mov
arpl
pop
dec
sub
mov
fisub
mov
cli
enter
xchg
sbb
mov
xchg
and
mov
dec
mov
aas
cmps
xor
fiadd
cmovg
pop
dec
bswap
popf
cmp
retf
ss
xchg
xchg
mov
(bad)
adc
ja
retf
fcom
push
pop
adc
pop
cwde
pop
inc
pop
(bad)
inc
inc
mov
pop
inc
jno
add
addps
das
rol
arpl
pop
inc
fldcw
jl
cmp
sbb
not
mov
pop
std
and
jecxz
nop
sar
lock
adc
push
out
inc
sub
and
outs
out
and
push
jmp
repz
and
pop
push
cmc
push
sub
ror
pop
sahf
adc
push
pop
fistp
js
and
into
mov
cld
test
mov
dec
(bad)
rol
xchg
or
int3
sti
gs
xor
aad
add
add
xor
push
push
(bad)
push
sbb
cs
cs
xchg
cld
jge
out
push
neg
dec
push
repnz
push
and
icebp
into
mov
xlat
mov
jg
movs
dec
int
push
lock
push
jb
lahf
xor
mov
call
push
jne
gs
add
mov
clc
mov
cmp
sbb
push
pop
mov
test
push
sub
xchg
ss
imul
inc
or
lock
xor
pop
jns
lahf
ins
sub
sub
inc
scas
mov
stc
jnp
push
hlt
or
ins
movs
push
daa
and
xchg
call
fwait
mov
enter
popa
out
rcr
adc
outs
test
(bad)
fs
imul
es
add
std
icebp
and
popa
sbb
sbb
adc
mov
jle
push
(bad)
xchg
imul
test
retf
rol
sbb
in
(bad)
popf
(bad)
cmp
sbb
pop
(bad)
jmp
stc
loopne
test
out
in
cmp
es
iret
es
pop
sbb
dec
inc
jle
pop
xchg
xor
lahf
gs
mov
js
mov
add
push
xor
xor
aaa
mov
ins
jecxz
outs
dec
cdq
test
xchg
ja
ja
xchg
jb
hlt
sub
cmp
ss
dec
fild
aaa
cmp
sbb
stos
rol
test
(bad)
outs
ins
jb
or
xchg
xor
and
rcr
mov
mov
mov
mov
test
push
inc
dec
xor
enter
test
aas
cli
adc
jne
aam
xchg
fst
cld
inc
iret
rcr
inc
inc
rol
iret
mov
inc
inc
out
dec
dec
mov
adc
jge
xchg
add
xor
fcom
out
jecxz
sbb
push
cmp
or
data16
pop
push
outs
fcmovnb
xor
or
movs
out
pop
sti
push
jnp
ss
sti
jmp
(bad)
les
xlat
les
call
daa
out
lods
je
pusha
int3
pop
adc
shl
add
std
or
or
imul
xchg
mov
cmp
push
and
int3
jle
in
(bad)
jns
cmps
pop
xchg
mov
out
out
ret
sbb
loop
stos
push
fcomp
mov
cmp
int
xor
mov
adc
call
mov
push
dec
lea
test
dec
test
adc
xor
sbb
scas
test
xchg
or
sbb
aad
fs
push
pop
cmp
dec
jp
pop
cmp
retf
lods
mov
imul
leave
int3
dec
sub
outs
idiv
ss
sub
add
lds
leave
les
or
leave
push
call
das
pop
push
dec
sbb
repz
xor
push
xor
fidivr
sbb
out
mov
pushf
dec
adc
pop
loopne
mov
ds
mov
push
fdiv
sub
jb
cmp
or
ret
popw
cmp
aad
inc
jne
sub
mov
repnz
pop
dec
test
xchg
ja
pop
pusha
out
xchg
pop
adc
aaa
int
jbe
add
ret
sahf
test
jne
leave
sub
push
jg
mov
fidiv
mov
or
rcl
xor
xor
scas
inc
lods
mov
movs
mov
jnp
into
mov
pop
jle
addr16
sub
ja
push
cdq
mov
mov
or
mov
sbb
repnz
inc
push
sub
pop
mov
nop
mov
jmp
in
sbb
xchg
add
je
stos
call
sbb
add
push
inc
inc
outs
xor
dec
fnsetpm(287
test
in
pop
cs
mov
and
push
sbb
test
cmp
arpl
and
sbb
xor
sbb
mov
mov
mov
jo
es
jg
imul
mov
fst
inc
jge
(bad)
jecxz
mov
pop
xchg
pop
imul
pop
push
sahf
fcom
cmp
into
stc
pusha
imul
xchg
mov
hlt
pop
scas
arpl
aam
call
ja
fwait
inc
dec
jbe
inc
xor
sub
add
xor
mov
movs
xor
jbe
mov
iret
jge
and
clc
scas
and
out
mov
test
inc
mov
scas
mov
mov
popa
jmp
jae
sbb
jle
out
adc
sbb
cmp
sbb
ins
inc
xchg
scas
add
mov
inc
mov
dec
imul
dec
xchg
jmp
sar
mov
cld
cmps
scas
pop
enter
sahf
push
mov
aas
add
mov
mov
loope
loopne
test
push
sub
mov
mov
inc
or
shr
xchg
adc
shr
mov
xlat
pop
lahf
bnd
popf
cmp
xchg
mov
test
test
scas
rol
sub
mov
in
inc
inc
adc
push
leave
je
sbb
sbb
cmp
lahf
sbb
fcomi
pop
adc
push
dec
xchg
mov
add
or
call
popf
leave
loope
das
fstp
or
neg
pusha
xchg
rep
inc
stos
nop
jp
mov
or
in
inc
lods
and
and
je
xor
punpckhdq
(bad)
cli
mov
jl
add
popf
lock
inc
rcl
sbb
gs
(bad)
cmp
loope
je
sbb
xor
out
icebp
pop
ds
jmp
xor
adc
mov
nop
arpl
jecxz
je
mov
leave
add
mov
out
inc
fs
jae
lds
push
xchg
xchg
and
cld
arpl
movq
aas
ins
enter
lock
xchg
out
or
sub
imul
inc
popa
inc
push
in
jne
jge
cli
rcl
out
stc
and
out
in
adc
cmps
mov
mov
nop
xchg
enter
cmp
(bad)
fisttp
mov
popa
out
pop
ds
int
iret
scas
arpl
popa
into
in
outs
js
repz
je
inc
(bad)
pop
ss
es
cmp
push
dec
or
jo
aaa
(bad)
lahf
or
outs
lods
push
jmp
pop
sub
fstp
and
mov
es
inc
pop
mov
lahf
mov
push
loopne
scas
addr16
xchg
les
out
enter
mov
je
dec
inc
inc
inc
cwde
cmp
shr
int3
jle
jns
daa
adc
mov
mov
pop
dec
cwde
fucomp
dec
add
jnp
mov
nop
out
stos
jno
jg
inc
out
aad
icebp
fadd
clc
scas
fcmovb
adc
mov
je
add
pop
dec
repnz
popa
cmc
ins
inc
push
ret
cwde
mov
loope
imul
or
pop
pop
and
xchg
dec
pop
jo
in
push
les
dec
push
mov
xchg
daa
xchg
push
or
add
cmp
xor
dec
push
inc
mov
sub
cmp
inc
jnp
push
xchg
std
icebp
push
shr
push
dec
adc
loope
jmp
dec
jmp
xor
cdq
xchg
shl
popa
push
adc
popa
mov
cmp
arpl
les
popf
dec
lods
dec
cmc
mov
xchg
push
inc
mov
mov
pusha
xchg
(bad)
adc
sub
scas
xor
add
lds
jg
nop
sbb
dec
or
xchg
cmps
popa
out
push
dec
cmp
call
rol
or
aam
in
mov
in
ins
fwait
jbe
retf
outs
fdiv
js
rcl
mov
inc
aam
arpl
or
pop
add
fcmovne
call
push
push
call
xor
push
or
dec
dec
leave
xor
mov
scas
mov
inc
mov
std
sub
push
and
inc
inc
test
cmp
sub
ror
lahf
cmp
out
lods
lahf
out
mov
mov
rcr
dec
jle
mov
ss
dec
xchg
out
mov
pop
sub
fs
pop
scas
out
mov
and
int3
js
mov
in
adc
sub
pop
jmp
or
add
mov
lds
movs
in
sbb
pop
inc
fidivr
xor
retf
sbb
sub
mov
enter
jae
aaa
mov
inc
cli
fcom
inc
cmp
mov
pop
jns
(bad)
cmp
pusha
rcr
(bad)
retf
aad
ret
lods
mov
ret
icebp
aad
pop
dec
inc
lods
nop
mov
ins
xchg
inc
shl
mov
fcmovu
mov
sub
lods
cdq
pusha
mov
push
jb
jg
imul
push
les
pushf
sub
pop
cmp
aas
scas
push
xchg
sub
or
pusha
imul
push
test
(bad)
fist
xor
jnp
cwde
fadd
sub
icebp
inc
or
daa
sbb
retf
or
push
iret
aam
lds
adc
inc
cmps
dec
inc
cdq
ins
dec
loopne
sbb
mov
js
into
(bad)
adc
push
rcl
loope
aaa
adc
out
daa
sub
ds
test
cmps
mov
cli
mov
loop
sub
sbb
xchg
push
mov
retf
mov
add
into
loop
icebp
faddp
cmps
sahf
movs
jns
fistp
xchg
pop
pop
or
jb
test
cli
lods
inc
shl
out
inc
xor
xchg
and
or
mov
mov
push
sub
mov
bound
push
pop
repnz
push
sub
jl
in
fisttp
mov
ja
dec
stc
rcpps
dec
inc
xchg
icebp
pop
cmp
add
cmc
icebp
adc
(bad)
sub
lock
jle
cmps
shl
sbb
cmp
cmp
arpl
mov
fisubr
add
dec
add
cmps
cmp
xor
popa
mov
add
sbb
mov
cs
xchg
loopne
fadd
and
fs
push
pcmpeqw
sbb
sub
xlat
jg
xchg
rol
js
push
adc
js
aam
adc
outs
and
dec
in
mov
xor
jmp
pop
jl
xchg
adc
lock
adc
rcl
pop
(bad)
mov
shl
jne
sub
int
sbb
movsx
xor
fs
aas
pop
adc
push
cmp
cs
sahf
cmps
aam
ss
cmovb
pop
lods
outs
dec
gs
xchg
inc
stos
cmp
cwde
or
int
push
sar
sub
data16
pusha
std
into
cmps
mov
pop
ds
and
movs
jne
adc
push
sbb
or
ins
test
dec
pop
and
or
sbb
fs
cwde
ret
dec
cmp
mov
aam
es
stos
xchg
out
js
ret
neg
cmp
lahf
xchg
(bad)
(bad)
pop
add
jne
mov
jg
pop
jl
sub
sar
mov
lods
ret
loope
cmp
fwait
mov
test
rcr
sti
ja
in
xchg
call
xchg
aaa
ins
jle
scas
pop
xchg
rcr
adc
mov
inc
call
jbe
fidiv
aaa
(bad)
imul
or
and
sbb
mov
ret
dec
jbe
mov
pop
xor
xchg
setns
pop
jb
push
cmps
push
into
jmp
retf
(bad)
mov
in
ss
add
lea
xor
scas
lea
dec
xor
in
sahf
mov
movs
aam
mov
dec
rcl
repz
push
loop
pop
sti
or
imul
into
sub
(bad)
mov
dec
push
adc
outs
lds
out
fsub
pop
iret
loop
mov
outs
xchg
inc
in
mov
mov
pop
test
lahf
and
mov
or
inc
test
cs
or
cs
stc
into
mov
pushf
sbb
and
sub
push
dec
jp
ds
or
(bad)
sbb
push
xor
pop
fidivr
mov
mov
push
sti
mov
(bad)
mov
mov
sbb
in
mov
sbb
lods
pushf
shr
jmp
dec
enter
mov
push
xchg
leave
and
int
or
push
mov
fsubr
call
aam
cmp
or
mov
addr16
movs
mov
cmp
mov
xlat
xchg
inc
fsub
add
push
ss
xchg
fwait
sbb
mov
add
mov
clc
stos
stc
lods
enter
sahf
(bad)
push
test
jbe
mov
and
pop
xchg
fs
stos
ret
out
jbe
aaa
cmp
and
fcomp
pop
sbb
loopne
dec
ret
std
cwde
repnz
mov
xor
dec
mov
add
cmp
mov
mov
ins
sub
out
adc
ret
and
xor
jbe
sbb
rcl
dec
bnd
pop
sbb
pop
xor
sti
ja
mov
sub
cmp
and
leave
les
shl
jp
ds
pusha
xchg
adc
(bad)
bound
jno
sub
shl
sahf
xlat
mov
int3
popa
add
push
jmp
out
lea
and
mov
jne
icebp
mov
inc
inc
call
jge
mov
jle
shl
add
std
mov
inc
leave
popf
or
inc
mov
add
cli
shl
pop
mov
xchg
js
repnz
aad
test
sbb
add
ss
movs
mov
mov
loopne
jmp
sti
cs
xor
sar
inc
mov
cmp
cmp
dec
fs
out
(bad)
cmp
mov
sub
into
or
ds
xchg
mov
sub
movs
(bad)
std
add
scas
mov
xor
jb
popa
xchg
adc
push
pop
sbb
cld
out
or
sub
sar
mov
test
mov
fs
or
bound
(bad)
or
or
sbb
(bad)
(bad)
mov
out
mov
enter
or
les
ffree
adc
clc
mov
test
cmp
pop
inc
mov
std
and
sti
test
sbb
or
sbb
adc
push
lods
rcl
sub
enter
push
jl
xchg
xchg
mov
jnp
ins
das
std
cmc
ja
jbe
daa
outs
psraw
mov
retf
dec
cwde
adc
(bad)
js
mov
inc
jmp
jae
xchg
or
cdq
sbb
add
fcomp
sbb
in
cwde
xor
jmp
sbb
lock
mov
push
push
xchg
js
mov
mov
push
das
mov
dec
mov
or
or
pop
dec
pop
ss
inc
jg
mov
xor
lahf
pop
neg
and
dec
aaa
xor
jg
lea
stos
jmp
xchg
mov
(bad)
shl
mov
dec
xchg
and
rcl
jp
mov
movs
push
sahf
inc
outs
int3
sbb
out
or
sbb
int3
xor
jnp
test
xchg
(bad)
jl
rol
rcl
inc
(bad)
shl
cmp
cmp
push
fisttp
pop
fnsave
sahf
jne
fdivr
add
mov
jns
lock
xor
outs
movaps
cwde
jns
adc
xchg
xor
outs
mov
mov
imul
retf
push
invd
(bad)
bound
pop
ss
mov
dec
(bad)
mov
cmp
scas
adc
stos
and
je
dec
iret
leave
jb
shl
rcr
push
jg
out
mov
call
cmps
sahf
in
mov
pushf
call
adc
add
mov
call
test
das
adc
repz
adc
aam
nop
scas
mov
mov
dec
xchg
xchg
leave
xchg
mov
push
push
xlat
pop
push
(bad)
pusha
adc
not
shr
mov
sub
or
dec
in
and
aad
pop
pushf
cmps
mov
jbe
popa
mov
in
sub
add
sub
xor
push
lahf
lods
sbb
pop
mov
pop
call
pop
xor
ja
or
dec
aam
jg
ds
scas
les
xchg
xchg
cli
mov
add
int
(bad)
movs
pusha
mov
push
dec
sbb
mov
loopne
jecxz
je
sbb
leave
or
add
jno
fild
push
test
adc
cmove
sbb
call
inc
add
cmp
ret
sbb
xchg
adc
lods
cwde
aad
and
inc
cs
adc
in
push
icebp
push
push
repnz
enter
cmp
add
lods
xchg
or
and
aam
popa
xchg
jle
loope
loope
cmp
mov
mov
lods
stos
(bad)
xchg
jne
test
out
outs
sahf
jp
and
push
or
js
pushf
sbb
sbb
and
and
dec
jne
ficom
shl
xchg
mov
fadd
aam
out
popf
(bad)
iret
stc
repnz
cdq
lods
(bad)
jmp
test
cmp
repnz
xlat
add
push
jb
dec
xchg
call
adc
shl
ja
je
dec
mov
fidiv
add
fldenv
and
mov
xlat
(bad)
cli
sbb
dec
inc
repz
in
mov
int3
adc
sbb
lds
je
pop
mov
or
lahf
and
addr16
jns
add
nop
iret
dec
xor
mov
lods
bts
lea
dec
cmc
out
ins
cmps
inc
xor
scas
lods
xchg
gs
add
push
ins
jns
push
stos
fwait
in
mov
mov
mov
xchg
lahf
fucompp
cwde
(bad)
fld
sub
add
(bad)
addr16
sub
pop
jae
and
hlt
pop
xor
dec
enter
fist
jl
fld
adc
push
(bad)
adc
xor
adc
mov
jmp
jmp
jmp
sbb
xchg
movs
fdivr
inc
jo
fisttp
dec
sbb
fimul
or
repnz
call
(bad)
jne
or
adc
push
lea
or
xchg
mov
sub
fsubr
pop
sub
and
(bad)
xchg
sbb
mov
sbb
adc
push
cmp
mov
iret
out
cld
xchg
pop
in
push
jbe
call
(bad)
cli
imul
mov
dec
mov
jne
repnz
jne
xchg
lods
jo
addr16
push
xchg
mov
xchg
mov
xor
sbb
push
adc
xor
cmp
sbb
outs
inc
into
xchg
das
fcmovnbe
or
pop
mov
das
rcl
pop
push
jnp
mov
(bad)
push
mov
xchg
test
mov
pop
shl
shr
cmps
leave
jns
or
adc
jp
lea
ficom
(bad)
in
inc
mov
inc
push
cwde
unpcklps
mov
rol
in
dec
jmp
jo
mov
rol
leave
push
in
enter
idiv
push
les
clc
mov
sub
add
js
les
shl
xor
(bad)
jmp
xlat
fimul
lds
pop
lods
stc
and
hlt
mov
dec
outs
pusha
xor
dec
adc
jne
mov
fsub
jl
outs
std
int3
inc
jg
rol
mov
and
push
mov
arpl
cld
and
ret
(bad)
jmp
ja
push
push
dec
imul
push
cmp
inc
mov
sub
call
add
adc
xlat
mov
push
pop
pop
mov
jecxz
xchg
aaa
gs
jge
mov
xchg
arpl
into
ror
mov
dec
xchg
mov
imul
ret
jb
retf
jo
pop
aam
sahf
adc
lock
cmp
dec
pop
pop
and
cmps
in
push
dec
sub
pop
or
xlat
test
retf
push
push
cs
inc
add
rcr
xchg
sub
test
fwait
jae
das
cmp
cmps
std
pop
inc
pop
mov
inc
cwde
(bad)
cmp
fstp
add
je
in
outs
and
inc
shl
test
test
adc
jecxz
loop
in
stos
vmovntps
lock
jle
inc
push
js
or
push
push
cmp
ins
push
sbb
mov
movs
fld
enter
jge
adc
ret
fnstenv
dec
dec
mov
sbb
xlat
sub
sbb
enter
je
or
pop
movs
push
inc
out
das
leave
inc
hlt
add
lods
xchg
in
(bad)
pop
xor
pop
inc
fidiv
mov
pop
sbb
sbb
inc
xor
adc
sub
pop
mov
jns
push
loop
shr
in
imul
and
mov
push
retf
fmul
mov
lods
icebp
js
cmp
shl
push
retf
dec
call
imul
loope
(bad)
fstp
outs
inc
mov
iret
or
xchg
loopne
jl
or
xor
lock
mov
out
fiadd
inc
jle
dec
je
pop
lock
or
mov
mov
or
pop
cdq
push
lea
mov
xor
ret
xchg
or
jbe
pop
pop
dec
dec
imul
or
mov
repnz
dec
adc
mov
and
mov
into
out
dec
in
retf
cmp
bound
daa
jnp
mov
cmp
add
sti
pop
xchg
add
jb
xchg
lea
dec
fwait
pop
cmps
jmp
(bad)
dec
lea
inc
mov
pop
xlat
fcmovb
adc
mov
fild
or
mov
das
push
pop
xchg
push
dec
mov
mov
call
dec
adc
fs
or
icebp
stos
into
clc
cld
test
test
ror
pushf
in
adc
inc
movs
in
add
mov
popa
sub
mov
adc
push
inc
cdq
pop
sbb
mov
(bad)
out
outs
mov
xchg
ror
or
aaa
loopne
lsl
icebp
jmp
mov
fsubr
xor
push
movs
push
mov
shl
push
xor
push
xchg
pusha
adc
shl
xchg
jnp
or
dec
add
scas
cs
jno
or
dec
mov
ret
(bad)
fdivp
dec
movs
test
popa
dec
aad
aad
cwde
je
mov
cmps
pushf
mov
inc
cdq
or
cmp
test
fmul
or
mov
push
fiadd
daa
loopne
mov
rol
jl
add
int3
faddp
and
lods
inc
add
pop
jge
(bad)
mov
mov
cdq
aaa
cmps
sub
pop
push
mov
mov
sbb
ret
cli
retf
and
imul
fstp
int3
mov
hlt
jmp
mov
ins
les
add
lds
and
mov
(bad)
fwait
loope
cli
xor
cld
mov
rol
test
lea
pop
imul
mov
fdivr
(bad)
xor
inc
(bad)
xor
aam
push
nop
pop
test
jmp
mov
sbb
adc
xchg
or
mov
add
and
and
stos
or
xchg
or
push
adc
pop
mov
adc
cmp
jbe
xor
xchg
mov
nop
push
and
test
js
jmp
mov
push
in
adc
push
adc
xchg
dec
ficom
mov
xor
xchg
pop
icebp
int3
sti
imul
add
(bad)
mov
push
add
sbb
mov
hlt
cmp
aaa
daa
imul
ja
adc
scas
dec
(bad)
stos
daa
int
jne
retf
ror
mov
leave
inc
inc
iret
popf
aas
add
(bad)
call
in
sbb
pop
sub
fst
cmp
lods
xlat
pop
fwait
icebp
mov
sbb
les
xor
pop
dec
push
es
and
mov
cmps
push
or
lea
sbb
xor
sbb
ds
add
test
xchg
js
push
mov
add
pop
dec
sbb
popf
jbe
js
pushf
fiadd
cli
repnz
cmp
push
and
push
sti
ja
gs
mov
inc
cwde
jno
loope
stos
xor
cli
push
sbb
dec
popa
cli
mov
int3
in
leave
lods
das
or
mov
jl
repnz
cmp
scas
mov
call
sbb
mov
pop
int
scas
les
adc
mov
repz
(bad)
jg
movs
sbb
retf
rcr
ins
sub
test
inc
cwde
mov
call
mov
adc
movlps
jl
aas
sbb
cs
js
sbb
pop
push
push
stos
or
gs
xor
mov
xchg
fs
cs
or
aad
pop
mov
push
xor
stos
mov
xchg
and
test
jns
icebp
pop
and
scas
ss
xchg
cmps
adc
mov
sbb
pop
push
in
inc
sar
out
imul
dec
pop
sbb
(bad)
jle
pop
ficom
cmp
xlat
daa
inc
loop
pop
inc
js
icebp
push
cmp
or
test
(bad)
xchg
dec
sub
retf
scas
jb
into
cld
jmp
sub
mov
push
rcr
jp
lahf
jne
push
cmp
inc
es
outs
ss
inc
aas
mov
cwde
dec
stc
sbb
add
aam
mov
int
int3
dec
and
or
xor
xor
adc
or
or
jno
sbb
mov
gs
ficomp
out
repnz
fsub
fisubr
xor
ins
inc
mov
div
dec
into
fsubr
xchg
cwde
test
aad
or
test
int3
xor
cmp
push
sti
movs
test
ins
mov
push
jecxz
pop
cs
cli
fwait
mov
mov
sbb
adc
les
add
pop
aam
sahf
cli
or
seto
adc
hlt
aam
scas
int3
fwait
jb
arpl
bound
pop
mov
jmp
fmul
mov
sbb
popf
sub
das
out
fisubr
or
clc
fsub
(bad)
push
or
add
iret
hlt
mov
movs
movs
(bad)
div
out
adc
sub
inc
loop
cli
mov
xor
mov
or
lock
add
pushf
lods
cmp
jnp
or
imul
pop
mov
jbe
into
mov
cmp
inc
pop
and
imul
inc
push
xchg
dec
pop
in
lods
jge
stc
(bad)
jge
repnz
les
sbb
sub
int
lods
sub
mov
push
mov
dec
cmp
jmp
leave
ret
pop
cmp
aad
xor
jne
push
mov
test
jmp
icebp
ds
push
adc
or
fidivr
ret
xor
outs
movs
test
pop
movs
enter
sti
daa
add
mov
lods
mov
jge
aad
xor
sbb
ret
cmps
arpl
repnz
pop
repz
sub
test
xor
add
dec
rol
inc
lea
push
xlat
idiv
ror
jl
mov
into
xchg
icebp
rol
dec
jmp
cmp
xchg
scas
mov
cmp
ins
and
lahf
pushf
out
xchg
mov
mov
iret
mov
movs
adc
loop
sbb
adc
test
ins
cmp
sub
scas
push
pop
push
out
js
push
xchg
adc
inc
les
adc
stos
xor
shl
xchg
jb
push
popa
push
adc
std
call
add
shl
mov
inc
cmps
or
shl
aas
(bad)
in
pop
pop
dec
in
xlat
adc
add
push
jnp
xchg
mov
add
or
popf
push
pusha
add
cmps
and
xlat
test
jl
leave
xchg
sbb
and
pop
movs
rol
js
sub
std
mov
jbe
stos
pop
lock
cmc
leave
and
dec
xor
dec
mul
les
div
push
push
enter
lea
cli
jecxz
daa
jno
in
movs
fld
addr16
fidivr
clc
jmp
stos
mov
mov
xchg
in
push
push
clc
movs
test
arpl
icebp
shl
sbb
adc
cmps
repz
int3
ins
xor
pop
mov
xchg
dec
movs
mov
xchg
and
dec
popa
cmp
push
adc
jne
rcr
sti
call
in
mov
and
bound
mov
in
dec
jb
fsin
add
mov
hlt
test
jno
sahf
push
arpl
test
or
mov
adc
push
mov
daa
hlt
pop
add
ins
adc
mov
shr
push
add
shr
mov
xchg
pop
inc
mov
jecxz
xlat
sar
jb
xor
mov
inc
or
xchg
pop
pop
xchg
mov
mov
cmp
xchg
mov
fst
dec
cmp
mov
test
sub
jl
sub
loop
xchg
cmp
cli
cmp
push
pop
cli
fimul
and
jl
movs
pop
mov
aam
adc
add
sbb
pushf
daa
cs
fisub
lods
push
outs
jl
imul
xchg
xor
push
mov
dec
push
arpl
jg
pop
fstp
(bad)
leave
fstp
sbb
mov
fadd
push
jecxz
xor
pop
jg
sbb
jb
outs
rol
push
jo
iret
mov
dec
or
sbb
jbe
dec
imul
push
fisubr
lods
xchg
sub
cmp
mov
mov
int3
push
add
or
add
xchg
arpl
cmp
int3
jo
fst
mov
loopne
push
ja
ins
repnz
pop
jo
test
cmc
out
mov
inc
cdq
pause
dec
(bad)
(bad)
jecxz
dec
xor
(bad)
lods
pop
das
lock
add
fmul
mov
and
sbb
adc
fdecstp
and
loope
aaa
test
fs
jo
adc
movs
cli
inc
imul
mov
jge
cmp
fs
push
jecxz
out
and
xchg
pop
and
enter
sbb
sub
xor
out
loopne
adc
jp
lahf
iret
out
mov
and
sub
xor
mov
xchg
aam
sti
fiadd
popf
hlt
xor
cmp
rcr
mov
push
cmp
loop
cmps
cmps
rol
push
fisubr
std
sbb
adc
or
push
xor
or
jmp
inc
fwait
jo
sub
fcmovnu
lods
dec
jle
sub
cmp
loope
jecxz
fucom
bound
push
pop
or
xor
mov
fwait
stos
xor
mov
out
rol
xchg
out
push
(bad)
imul
out
popa
inc
sbb
add
idiv
lea
enter
jp
adc
repz
call
mov
pop
test
mov
sar
mov
inc
jg
pop
int
mov
mov
inc
jno
popf
arpl
adc
dec
les
cmp
ror
jns
mov
push
sti
idiv
fisttp
sar
test
aas
icebp
mov
pop
test
mov
or
stos
neg
call
and
enter
ins
ds
addr16
mov
push
pop
cmp
in
or
aaa
gs
int3
add
xchg
mov
dec
xor
inc
xchg
retf
clc
pop
(bad)
enter
cmp
jge
pop
dec
rcl
sub
mov
push
xor
leave
js
jns
leave
push
sub
or
aad
cmc
cld
mov
push
xor
cli
(bad)
fsub
pop
fstp
in
xor
push
psrlw
xor
les
add
ins
jle
retf
sub
pop
out
or
pop
inc
jmp
daa
test
inc
(bad)
inc
jmp
or
aam
jecxz
shr
add
lock
push
push
mov
in
aam
mov
(bad)
in
jo
xchg
loopne
mov
push
inc
mov
ins
mov
cli
movs
xor
shl
adc
dec
or
aam
dec
rcr
sbb
pop
xor
lods
push
add
add
push
rcr
je
xchg
and
jno
cmps
das
or
add
add
in
sub
cmp
retf
nop
ficomp
xor
(bad)
adc
into
in
jb
xchg
push
inc
pop
rcr
and
push
call
sbb
jmp
sub
aad
adc
aaa
and
mov
push
mov
leave
mov
loopne
jae
(bad)
sub
xchg
outs
mov
mov
stos
ss
sub
cld
ja
cmps
push
test
js
and
ret
out
pop
repz
mov
(bad)
cmp
sub
cld
leave
retf
lea
adc
pop
rcr
daa
jo
dec
mov
inc
sbb
pop
jno
push
push
fcomip
fsubr
mov
push
push
nop
iret
sbb
cmp
ss
pop
(bad)
in
jns
pushf
mov
popa
shl
test
jecxz
outs
nop
and
pop
out
xchg
mov
mov
jle
dec
(bad)
data16
popf
in
sub
sub
pop
daa
sbb
std
psadbw
pop
cld
fmul
mov
and
aam
xor
(bad)
bound
and
mov
nop
rcr
pop
ins
mov
addr16
xchg
xchg
cmp
xchg
stos
lods
xor
popa
sar
xchg
sbb
cmp
jl
lea
cmp
outs
jns
adc
cmp
mov
ss
push
dec
mov
ret
xor
jge
pop
imul
or
(bad)
imul
xor
pop
sub
dec
ins
xor
and
jmp
sub
aad
sbb
ret
fild
inc
aas
jns
retf
jbe
in
mov
lahf
mov
imul
push
gs
movs
xlat
aad
dec
in
mov
push
daa
sub
data16
cmps
and
imul
(bad)
mov
out
mov
mov
jno
lods
jp
loope
je
imul
cmp
repz
cwde
pop
sbb
movs
jbe
repz
pop
sub
mov
sar
in
repz
mov
out
xchg
aas
gs
nop
pushf
sub
mov
ret
repz
adc
pushf
ss
jmp
mov
xchg
leave
movs
push
fld
push
test
int3
jl
frstor
mov
out
ins
adc
add
lds
dec
push
sbb
xchg
add
xchg
rcr
cwde
popf
shl
inc
push
pop
ret
ficom
ret
daa
xchg
push
mov
jno
sbb
aaa
mov
jno
scas
mov
and
mov
push
sub
mov
adc
sbb
mov
xchg
xor
or
add
(bad)
jmp
sub
cmp
cmp
pop
les
test
sub
sub
xor
dec
dec
mov
ins
push
fwait
adc
pop
sub
jg
jmp
jns
imul
inc
cdq
clc
mov
cmc
hlt
cmc
daa
mov
pop
fidivr
jae
xchg
jb
cmp
push
in
xchg
add
mov
test
aas
or
pushf
rol
cwde
lds
inc
mov
jns
cld
push
adc
xor
dec
lds
add
leave
(bad)
sbb
pop
xor
imul
pop
jmp
xchg
movs
ror
cmp
fidivr
or
ins
(bad)
add
dec
in
hlt
nop
jne
outs
or
push
push
mov
xor
or
in
out
or
in
mov
(bad)
fisubr
cwde
imul
cmp
cs
test
addr16
dec
dec
mov
lea
in
cmp
adc
push
int
cli
pop
popa
mov
mov
inc
pop
scas
fdivrp
pop
mov
popf
mov
outs
out
mov
jl
pop
inc
cmps
fst
add
xchg
push
dec
hlt
jp
aaa
es
ins
push
fwait
or
sbb
jg
mov
push
retf
aam
ins
cdq
dec
pop
xor
and
mov
cmps
pop
daa
or
xlat
add
xor
pop
arpl
and
sbb
neg
mov
es
leave
addr16
mov
fwait
in
inc
xchg
mov
jmp
fst
and
xchg
pushf
inc
mov
cmps
out
mov
mov
mov
mov
jno
pop
pushf
fcom
lods
jle
loope
cmc
jmp
and
mov
mov
aam
push
into
je
mov
jle
jb
and
bound
and
out
dec
add
inc
jb
stc
addr16
(bad)
ja
mov
and
test
in
mov
push
les
push
xchg
lds
mov
mov
(bad)
cmp
lds
cs
adc
jnp
in
fmul
(bad)
(bad)
in
adc
mov
sub
jle
jmp
or
stos
push
cmc
push
mov
jecxz
(bad)
jnp
mov
fwait
dec
jge
inc
cld
push
xchg
pop
lock
xlat
mov
xor
and
das
imul
cmp
(bad)
lods
cmp
add
mov
ret
xchg
fsub
scas
mov
push
fwait
pop
retf
dec
add
ret
stc
sub
dec
ret
and
xor
fistp
pop
push
inc
movs
sar
add
iret
dec
repz
ins
inc
jns
lods
adc
inc
adc
(bad)
daa
xlat
mov
loope
retf
sbb
xchg
js
sub
(bad)
fld
or
int3
scas
leave
jo
jg
inc
dec
push
mov
jb
cmp
xor
(bad)
jmp
lods
imul
es
push
lods
loopne
lds
faddp
xor
std
jmp
ins
jecxz
xlat
loopne
push
cmp
mov
sub
jo
cmp
aam
pop
adc
or
fsubr
sbb
jg
in
pop
jae
mov
jns
sbb
mul
mov
cmps
sub
dec
(bad)
or
into
test
lods
int
push
es
in
lea
xor
out
push
daa
fcomp
dec
aam
inc
mov
dec
xchg
or
cmc
pcmpeqd
bound
xchg
fwait
ja
add
push
je
pop
hlt
fcomip
xlat
xor
icebp
mov
fs
(bad)
mov
cdq
and
push
popa
xor
fld
cmp
or
add
xchg
sbb
mov
mov
mov
movs
jae
dec
outs
or
loope
jbe
stos
fdiv
fist
push
loopne
leave
mov
mov
lahf
fwait
sub
add
sti
shl
lods
ss
movs
sub
fstp
or
aad
scas
sbb
dec
sbb
xor
adc
xor
jnp
pusha
push
and
or
jae
je
pop
aas
or
jecxz
xchg
push
jmp
push
sbb
mov
lea
cdq
dec
push
scas
clc
mov
adc
hlt
pop
loop
jmp
adc
nop
test
or
cmps
push
adc
add
xchg
sbb
dec
pop
ret
push
jno
inc
mov
ja
repnz
stos
stos
add
and
mov
add
ror
jae
ja
mov
rcl
aam
xchg
clc
arpl
loope
push
add
xor
and
sahf
add
loop
jnp
out
pushf
mov
scas
std
in
int3
pop
fisttp
jno
add
or
in
outs
rcr
sti
into
add
arpl
js
xchg
adc
mov
cmps
imul
in
fdivr
or
dec
jae
pop
mov
xchg
inc
pop
(bad)
je
icebp
icebp
and
hlt
in
sub
dec
rcr
mov
mov
jg
mov
lahf
mov
push
jnp
cmp
movs
mov
(bad)
ficomp
imul
std
movs
pmaxsw
pop
sbb
xor
or
push
sar
lea
dec
jbe
or
adc
aam
xor
inc
sbb
icebp
mov
std
sub
pop
cmp
mov
sbb
cmp
push
(bad)
xchg
push
pop
mov
aad
sbb
mov
and
add
pop
call
xlat
inc
repz
push
jmp
mov
sub
add
ins
je
leave
fsub
shl
xchg
test
xchg
mov
adc
je
arpl
xchg
ret
cs
aad
xor
and
dec
mov
cmp
cmc
les
pop
enter
sub
mov
fstp
jno
pop
aam
mov
cwde
sar
adc
mov
pop
or
xchg
sub
pushf
ret
dec
aam
std
stc
xor
inc
outs
sbb
and
ficomp
ss
mov
imul
mov
and
fbld
pop
test
xchg
(bad)
dec
jp
popa
push
imul
nop
cs
clc
(bad)
je
add
mov
(bad)
cmp
ret
scas
test
clc
out
add
or
and
xchg
jl
inc
movs
mov
sub
jno
shl
xor
repnz
lds
call
sbb
mov
es
xchg
and
ss
sbb
sti
clc
xor
mov
(bad)
add
ins
xor
and
iret
and
mov
adc
outs
mov
movs
dec
mov
das
shr
repnz
dec
mov
in
mov
xlat
imul
ror
shr
pop
popa
fs
int
iret
loope
jl
sbb
mov
push
cmp
pop
neg
outs
inc
dec
add
fwait
jl
jmp
lea
popa
cwde
test
dec
test
pushf
push
dec
inc
xchg
mov
call
jb
push
cwde
dec
cdq
jb
fild
add
inc
cmp
sar
movs
ss
mov
cmp
adc
mov
xchg
out
push
(bad)
cdq
dec
and
sub
or
mov
jmp
rcl
add
test
cdq
mov
mov
test
inc
daa
mov
sub
inc
dec
mov
or
fild
xchg
push
(bad)
sbb
inc
test
mov
(bad)
cli
push
outs
sub
or
mov
mov
test
in
(bad)
repz
sbb
and
ret
inc
and
adc
xchg
es
pop
mov
dec
dec
pusha
mov
push
test
dec
jmp
fnstenv
cmc
mov
or
jo
xchg
push
pop
xor
adc
jae
inc
adc
mov
xchg
div
dec
arpl
jle
cmp
ret
retf
cmc
pop
sub
lods
mov
pop
aam
mov
push
push
adc
sbb
das
jge
cs
inc
out
mov
scas
nop
jmp
dec
test
ficom
lea
sahf
push
mov
add
jnp
or
or
je
mov
jg
ja
xchg
mov
adc
imul
and
jbe
pusha
mov
jbe
bound
xchg
pop
cmp
add
jl
push
and
inc
adc
clc
xor
aam
mov
mov
pop
loop
(bad)
in
mov
enter
shr
adc
ins
mov
jnp
es
mov
xor
loope
inc
push
(bad)
pop
mov
jle
dec
rcr
dec
repnz
inc
cld
jle
and
push
cmp
adc
jne
mov
popa
cdq
ins
movs
push
push
push
dec
cmps
cs
enter
and
dec
mov
ret
lahf
push
lea
enter
push
retf
out
mov
idiv
add
cmp
jnp
pop
hlt
cmp
and
xchg
xor
xchg
adc
fwait
leave
outs
call
jnp
ror
pop
cwde
div
ret
call
cmp
std
stc
fwait
dec
movs
int3
pop
adc
ret
cmp
pusha
and
out
mov
jo
cld
nop
mov
jecxz
xchg
icebp
shl
xor
loope
pop
adc
shr
mov
xchg
push
dec
mov
jb
(bad)
push
pop
adc
pop
cmp
or
dec
xchg
cmp
or
call
mov
jbe
jle
test
leave
bound
jp
js
mov
push
mov
fidivr
dec
jb
(bad)
mov
xor
sbb
sub
aaa
mov
cmp
pop
test
xchg
jnp
inc
adc
outs
ret
adc
std
movs
mov
fldcw
and
xor
push
(bad)
dec
call
or
ja
or
xor
push
pop
fidiv
or
fwait
jge
inc
ja
sbb
mov
xchg
cmp
inc
xchg
sbb
push
xchg
(bad)
pusha
jp
and
sub
sub
jp
jne
add
js
icebp
xchg
lock
cli
outs
push
mov
hlt
add
xor
ror
sbb
push
movs
loopne
cmps
xchg
ja
sbb
mov
xchg
lea
je
(bad)
and
inc
xchg
adc
cmp
fld
add
dec
xor
adc
fld
js
mov
das
test
push
cwde
add
or
pop
sbb
test
lock
out
mov
mov
push
jae
sti
popf
call
sahf
xlat
call
test
ficomp
xchg
xor
stc
jle
fistp
mov
dec
add
ss
aaa
(bad)
jo
out
movs
imul
mov
pop
or
call
aam
add
pushf
mov
cmc
pop
cmp
pop
inc
aas
inc
cs
inc
mov
in
leave
addr16
or
inc
mov
aam
xchg
call
add
ds
mov
ins
clc
(bad)
adc
pop
cld
cwde
cli
push
or
test
xchg
fcmovnbe
jle
dec
mov
jmp
jge
xor
mov
leave
sbb
gs
ja
mov
and
fimul
stos
dec
inc
fidiv
pushf
test
adc
mov
imul
test
mov
jns
mov
mov
pop
sub
jno
sbb
xchg
sub
push
push
jle
inc
and
out
and
push
push
shr
xchg
mov
and
and
hlt
inc
out
push
sbb
cli
push
out
jge
mov
popf
aam
mov
mov
mov
sub
jle
jmp
outs
adc
cmp
pmulhuw
test
popa
and
sub
jge
(bad)
pusha
xor
jecxz
xchg
mov
inc
xchg
lock
jns
sub
or
inc
dec
inc
ins
(bad)
mov
add
into
dec
(bad)
cli
inc
jge
fmulp
es
out
sbb
outs
sub
das
js
int3
push
inc
into
test
int
mov
imul
dec
dec
mov
jg
pop
call
sbb
into
push
push
dec
cld
shl
loope
xchg
or
hlt
push
cmp
adc
idiv
stos
pop
retf
(bad)
pusha
loope
dec
inc
push
pop
pop
add
mov
ret
sub
jecxz
sbb
cmp
fld
push
gs
push
dec
sbb
shl
adc
test
out
sub
push
jae
ss
pop
cmp
sbb
mov
int3
cld
cli
call
in
jmp
xor
adc
pop
sar
cs
jmp
sub
add
js
test
jmp
inc
popa
jno
jno
in
xchg
or
adc
dec
or
mov
stc
sbb
jmp
scas
xchg
fnstenv
xor
and
dec
jno
jmp
push
dec
mov
xor
push
xchg
xchg
(bad)
adc
test
push
mov
and
leave
fadd
add
sahf
mov
adc
lods
sti
add
in
cwde
pop
test
mov
stos
cmps
push
dec
cld
inc
fcomi
cs
fdivr
mov
xor
out
fs
stos
inc
mov
xor
mov
stc
pop
test
in
or
and
repnz
stos
test
pop
jp
scas
movs
add
pushf
cdq
jno
out
pusha
ret
ret
mov
retf
ins
pop
cs
cmp
and
or
xchg
enter
mov
xor
xchg
mov
call
xlat
dec
xchg
cmc
aad
or
(bad)
mov
pusha
xor
dec
lds
(bad)
push
push
pusha
push
fist
jge
dec
enter
stos
add
mov
cld
and
lods
cmps
lahf
push
hlt
outs
sub
stc
mov
cdq
add
sub
jecxz
jns
jmp
ja
mov
mov
inc
mov
jle
jl
lods
jmp
(bad)
mul
call
mov
stos
ret
jmp
mov
(bad)
xchg
sub
mov
cli
leave
stos
into
push
mov
jno
ss
jnp
add
(bad)
shr
fstp
(bad)
xor
jl
movs
daa
imul
popa
aam
sub
jns
sub
mov
adc
sub
and
outs
shl
xor
jecxz
jae
add
sbb
stos
daa
adc
fdivr
jge
xchg
push
mov
xor
fidivr
in
mov
mov
movs
out
mov
std
std
pop
addr16
pop
dec
sub
dec
dec
out
xor
xor
jecxz
dec
mov
int
rcr
sub
fsubr
dec
out
or
jge
xchg
scas
fist
cmp
pop
mov
mov
pop
test
fiadd
or
shr
dec
sahf
inc
sub
popa
in
pushf
sbb
das
inc
mov
nop
pop
sbb
pop
mov
add
(bad)
mov
sbb
or
in
shr
push
popa
mov
retf
jb
mov
nop
sbb
in
inc
jg
in
test
fimul
adc
loopne
sbb
dec
lahf
ins
bound
mov
scas
cli
pop
sbb
(bad)
or
leave
adc
in
retf
outs
xor
mov
test
mov
arpl
add
(bad)
out
xor
xor
aam
and
rcl
jg
popf
repnz
ret
bound
aas
js
sub
add
or
inc
mov
out
into
daa
ss
ret
jp
ret
mov
mov
lods
mov
push
cmp
bound
add
inc
jp
dec
push
jbe
jecxz
cmps
pop
sbb
pop
jae
mov
(bad)
push
dec
jg
xlat
pop
mov
jo
mov
jle
movs
retf
cs
clc
dec
sbb
lahf
imul
add
push
pop
inc
shl
sbb
hlt
test
xor
out
loop
enter
inc
adc
push
out
and
sub
xor
and
cmp
dec
fdivr
mov
test
cli
mov
mov
mov
(bad)
sub
xchg
sbb
dec
bound
pop
(bad)
(bad)
imul
(bad)
(bad)
mov
div
or
pop
int
push
out
pop
imul
mov
dec
and
sbb
jecxz
ss
cli
sbb
add
lods
sub
xchg
sbb
movs
xchg
dec
push
loop
xor
out
and
or
aas
inc
outs
scas
loopne
arpl
adc
sub
enter
mov
js
div
icebp
push
jmp
mov
xchg
pusha
cs
xor
arpl
clc
mov
and
aas
stos
daa
add
add
enter
sbb
push
mov
sub
push
push
lods
in
ss
mov
add
dec
not
mov
icebp
xchg
xchg
inc
mov
sbb
cmp
xor
in
cmp
fistp
add
sub
in
outs
mov
sbb
push
mov
(bad)
pop
cmp
mov
(bad)
push
rcl
or
cmp
jnp
in
xchg
ss
aam
xchg
mov
or
out
sahf
xchg
fcomip
xor
ret
sbb
iret
pop
ins
je
jns
fiadd
cmps
mov
inc
es
imul
jb
call
add
jmp
cmp
cdq
dec
sbb
or
mov
push
mov
push
frstor
mov
int
movs
test
cmp
aad
push
xor
mov
sbb
outs
adc
mov
cmp
xchg
lods
mov
jge
test
and
(bad)
es
or
ins
mov
push
fisttp
arpl
out
ss
xchg
xchg
or
test
pop
jns
or
pop
imul
inc
cs
cmp
add
dec
lea
in
les
dec
loope
out
cmp
xor
cmp
out
dec
cmps
out
icebp
cmp
adc
push
imul
push
xchg
pop
lea
jns
jecxz
out
lahf
test
stos
and
cmp
push
mov
outs
xchg
fsub
shl
fist
xor
(bad)
push
test
int
arpl
sbb
movs
cmp
cmp
jmp
loop
jno
jmp
jns
inc
pop
ret
sbb
in
inc
xor
int3
mov
jbe
fnstcw
dec
fwait
adc
in
int
sub
cmp
xchg
push
sbb
mov
jl
push
adc
mov
xchg
or
adc
add
mov
jae
pop
mov
stc
xchg
fwait
xchg
push
into
in
mov
pop
jecxz
test
adc
jl
or
cmp
gs
dec
or
call
stos
adc
fdivr
cmp
ss
data16
call
cmps
mov
enter
xor
push
int3
jae
push
outs
add
cdq
sbb
inc
movs
js
pop
(bad)
push
ds
je
rcr
sub
xchg
(bad)
jge
xor
sub
xor
mov
pop
(bad)
in
push
mov
mov
dec
call
mov
xor
xlat
loope
dec
rcl
mov
in
or
gs
jo
icebp
mov
sbb
dec
mov
or
hlt
stos
in
leave
cmc
ins
mov
xor
jo
ins
in
inc
shl
xor
inc
mov
int
xor
add
jmp
jp
cwde
lds
jg
pop
and
outs
mov
pop
xor
sbb
cwde
(bad)
inc
arpl
mov
mov
fild
xor
xor
outs
xchg
mov
dec
jo
xlat
inc
scas
in
ins
sbb
push
jle
mov
std
push
(bad)
in
div
cdq
mov
sbb
repz
movs
(bad)
leave
loop
cmp
jb
jge
daa
movs
ds
dec
clc
xor
ret
and
or
scas
xor
sbb
fmul
mov
push
xor
and
lods
push
ret
dec
and
add
sub
hlt
mov
jb
scas
and
sub
add
xchg
sbb
xor
mov
jecxz
fwait
push
mov
jp
sbb
out
bound
ja
test
push
lds
movs
aad
sbb
lock
stos
(bad)
fcomp
int3
pop
dec
mov
cmp
stos
sub
cmps
xchg
lahf
mov
aam
jbe
lds
add
mov
rol
les
inc
je
or
pop
frstor
pop
iret
mov
fwait
sahf
sub
loopne
pop
test
jb
inc
inc
push
sbb
(bad)
jns
pop
adc
inc
lock
xchg
cmp
push
rcl
shr
mov
jae
rcr
lods
mov
sub
pop
push
sub
mov
xchg
push
pop
xor
out
inc
(bad)
jg
or
xchg
jmp
xchg
jecxz
in
jae
lods
push
xor
sahf
and
push
inc
mov
push
xchg
pop
mov
retf
sub
mov
lds
lods
gs
mov
cmps
sub
call
xchg
push
xchg
clc
int3
loopne
dec
mov
(bad)
adc
or
cmp
shl
xchg
or
mov
test
pop
pop
fsubr
pop
lods
mov
mov
jne
sub
jle
adc
nop
pop
pop
stc
push
pusha
lods
push
push
mov
cmp
cld
xor
movs
out
mov
xchg
adc
inc
repnz
stos
mov
pop
in
push
mov
mov
into
loopne
xor
sub
dec
xchg
cs
in
mov
jbe
pop
sub
sahf
xchg
push
lds
xchg
aam
xchg
jnp
imul
mov
jge
inc
lea
cmp
cdq
inc
outs
(bad)
stos
and
ret
adc
js
jl
pusha
add
mov
sub
les
ret
sbb
add
rcr
stos
xor
psrlw
lea
aaa
pop
enter
xchg
icebp
enter
not
push
push
or
fcomip
adc
and
jl
fadd
dec
dec
jmp
pop
inc
mov
mov
dec
ja
enter
(bad)
icebp
sub
xor
sub
inc
(bad)
jbe
test
inc
mov
sar
ror
sbb
repnz
xchg
outs
jne
ss
fidivr
xchg
out
in
ja
pop
inc
outs
outs
pushf
inc
push
pop
sbb
out
pusha
int3
ss
dec
push
or
call
lahf
in
lock
cli
dec
mov
outs
dec
dec
icebp
xor
xor
xabort
bound
cli
cmp
jne
aaa
lahf
mov
pop
pop
popf
rcr
dec
sub
das
and
mov
push
test
push
inc
cmc
in
mov
ja
rcr
div
das
out
dec
dec
std
popa
pop
leave
jp
mov
ret
stc
loope
xlat
(bad)
adc
int
fnsave
outs
in
inc
arpl
repnz
and
test
lds
mov
sbb
adc
jmp
pushf
sbb
pop
mov
and
inc
sbb
and
call
jg
cmps
push
pop
pop
aas
sub
adc
or
jmp
jae
outs
adc
shl
(bad)
hlt
gs
dec
pop
and
addr16
cmp
add
add
shl
in
sbb
aad
cmp
mov
(bad)
jmp
xchg
repz
cmp
data16
shl
jb
xor
jg
mov
call
shl
psraw
sbb
call
xor
out
add
add
dec
cli
push
jmp
rcl
clc
(bad)
(bad)
(bad)
cs
pop
xor
push
(bad)
gs
je
mov
fisttp
pop
push
sbb
sub
xor
jmp
fwait
loope
pop
cdq
repnz
jle
mov
fwait
sub
addr16
stos
fs
pop
jbe
and
jne
cmps
jmp
pop
mov
mov
ror
mov
add
je
sbb
out
mov
ret
sbb
and
mov
sbb
adc
cmps
popa
ret
adc
rcr
mov
lahf
cmp
dec
inc
mov
xchg
mov
sbb
mov
adc
aas
inc
cmps
pop
push
adc
jmp
movs
aaa
mov
dec
add
mov
push
sbb
dec
int3
test
adc
mov
bound
xor
dec
in
addr16
aam
ds
mov
push
add
mov
add
outs
sbb
das
push
lahf
xor
jno
sub
fsubr
xor
fs
mov
adc
into
pop
out
add
stos
shl
leave
lea
rcl
mov
sbb
jbe
fs
mov
mov
rcl
sbb
cs
cmp
mov
aas
lahf
mov
dec
dec
cmps
int
jmp
mov
lods
cdq
add
bound
retf
ins
sbb
sbb
cmp
repnz
sahf
jecxz
xor
and
xor
mov
xchg
icebp
adc
(bad)
inc
push
and
scas
xchg
sahf
mov
push
pop
fdiv
mov
ja
fnstenv
cmc
inc
dec
sbb
mov
jae
xor
enter
retf
sub
out
push
xchg
cwde
shl
ja
sub
or
retf
lods
inc
fcomip
scas
mov
(bad)
mov
das
mov
mov
cwde
popf
aas
out
cmp
inc
std
xchg
adc
inc
ins
cmp
fnsave
inc
mov
shl
mov
add
(bad)
jg
push
mov
pop
pop
daa
push
fnstenv
scas
xor
test
jp
jmp
in
add
inc
es
pop
push
daa
mov
jecxz
popa
rcr
(bad)
push
popf
out
add
adc
test
jl
call
mov
adc
cmp
xor
cmp
jae
add
(bad)
jo
mov
out
xchg
enter
leave
rcl
pop
xor
lods
xchg
mov
div
ss
shr
not
jae
pushf
mov
push
out
les
mov
fld
mov
jmp
adc
adc
inc
or
test
push
mov
fwait
(bad)
imul
shl
xor
push
sbb
cmp
cmp
je
pop
xor
lds
mov
repz
push
xlat
shr
fnstcw
ret
scas
mov
in
jg
fimul
add
inc
call
mov
push
cmp
add
sub
ret
inc
inc
mov
dec
mov
add
test
fs
ds
movs
add
outs
aas
and
xchg
dec
ret
(bad)
fs
stc
lahf
pop
(bad)
mov
push
aaa
and
xchg
mov
movs
xchg
inc
push
push
inc
dec
cdq
cld
or
xchg
in
(bad)
mov
lock
shr
(bad)
fist
popa
and
pop
shl
test
loopne
fld
cmp
aaa
mov
and
rcr
mov
rcl
int
js
test
aad
push
mov
sbb
(bad)
(bad)
inc
das
cmp
call
mov
loopne
push
add
pushf
pop
sub
test
std
aas
inc
clc
sub
sub
outs
push
scas
nop
cmp
jp
std
imul
push
je
adc
sahf
mov
jle
(bad)
cli
xchg
xlat
fcmovbe
sbb
add
js
jo
loopne
(bad)
push
or
pop
fptan
loope
int3
add
call
pusha
lods
ss
dec
bound
les
gs
pop
cmp
jle
lods
mov
mov
cmp
jge
sub
aam
pusha
mov
fisub
mov
dec
adc
(bad)
xchg
ins
into
xchg
or
cwde
jmp
or
lods
stos
mov
popf
lahf
mov
pshufw
(bad)
movs
mov
or
adc
fld
jl
sbb
repz
mov
mov
fistp
or
dec
ds
call
stc
sub
pushf
jns
test
sub
sbb
int3
hlt
popf
scas
and
test
cmp
dec
inc
int3
pop
in
ins
push
jmp
cmps
sar
push
pop
mov
add
cmp
ret
and
test
leave
pusha
retf
jl
in
les
ja
xchg
inc
sbb
add
scas
popf
shl
fst
dec
mov
sub
jb
inc
icebp
pop
loop
fldcw
or
clc
imul
jg
pop
(bad)
xchg
cmp
ret
ficomp
popf
xchg
mov
(bad)
nop
push
enter
cmp
mov
mov
pop
fbld
mov
sub
jecxz
push
adc
ss
sub
inc
mov
jbe
sbb
xchg
scas
daa
ficom
ins
xchg
ret
loop
xchg
mov
test
sbb
out
(bad)
push
sahf
int3
retf
or
lahf
pushf
push
dec
mov
pop
xlat
cmp
cmp
add
dec
push
jge
inc
mov
mov
dec
scas
push
cmps
(bad)
outs
frstor
jb
fistp
or
xchg
enter
hlt
test
cmps
scas
jmp
jecxz
aad
int
or
ins
xchg
inc
fisttp
aad
repnz
rcr
adc
std
add
jmp
(bad)
inc
lds
and
xchg
arpl
push
popf
and
push
push
call
aaa
jns
hlt
sub
or
fiadd
mov
adc
push
push
cmps
(bad)
xor
mov
pop
adc
loop
cmp
enter
cmp
cmp
cmp
pop
clc
fadd
int3
outs
adc
sbb
cmc
sbb
into
imul
outs
sar
loope
ret
pop
adc
xchg
in
jecxz
dec
pushf
ror
std
sub
(bad)
shr
xor
rol
mov
sub
arpl
aaa
das
aaa
push
sbb
mov
pop
push
add
push
es
in
and
mov
aam
(bad)
(bad)
adc
gs
mov
jmp
arpl
or
xchg
cmovns
pop
mov
pop
outs
sub
adc
sbb
in
movs
cmp
adc
(bad)
or
shr
mov
mov
rol
cmp
pop
mov
dec
aad
iret
cs
jmp
test
add
fdiv
mov
fmul
add
inc
cmps
(bad)
mov
addr16
pop
call
and
or
sbb
dec
leave
inc
add
int3
clc
mov
cmc
sahf
mov
daa
outs
mov
bnd
and
mov
les
sbb
cmp
xchg
pop
push
add
fidivr
imul
cmp
in
push
scas
sbb
add
cdq
xchg
dec
int3
loop
rcl
test
mov
lods
mov
xor
aas
fidivr
add
jge
push
push
cmpxchg
cdq
aam
jmp
adc
out
push
mov
sub
push
sti
adc
das
push
mov
inc
dec
push
mov
aaa
jecxz
mov
and
icebp
dec
push
mov
or
mov
popf
add
in
repnz
aad
xlat
pop
sbb
mov
pushf
into
push
xchg
mov
fld
not
hlt
mov
and
mov
ds
inc
js
out
mov
adc
stos
mov
loop
mov
test
push
mov
pop
cmps
enter
and
fmulp
jno
clc
inc
pop
mov
jl
and
aam
inc
loop
push
pop
std
test
imul
movs
sti
scas
jle
adc
xchg
call
xor
pop
cdq
std
mov
jae
mov
mov
inc
xor
lods
jo
jne
mov
retf
pop
out
sbb
adc
and
push
shl
loope
and
xchg
retf
jp
out
jnp
pusha
adc
push
mov
loopne
push
push
jp
sbb
stos
cmp
fcom
adc
test
xchg
retf
push
mov
loope
pusha
jg
inc
movs
enter
cmp
fbld
lahf
pop
imul
lods
test
test
mov
data16
mov
in
add
dec
cmps
push
push
loop
xchg
pop
loopne
mov
lds
cli
inc
jmp
maxps
xor
mov
dec
xchg
mov
out
mov
adc
pop
push
arpl
sbb
mov
mov
mov
xor
pop
(bad)
push
imul
adc
inc
imul
cmp
dec
leave
call
pop
imul
inc
pop
mov
push
cwde
daa
repnz
and
lock
shr
sbb
add
ss
enter
rcl
xor
xchg
popf
test
imul
mov
and
mov
mov
stos
add
push
push
jmp
cmp
fwait
jle
test
cmp
jmp
sub
pop
out
outs
push
xor
sub
mov
xchg
lds
inc
fistp
(bad)
in
cmp
dec
jo
mov
dec
nop
test
dec
gs
mov
movs
out
outs
pop
sbb
popa
in
push
push
scas
xchg
xor
mov
lds
add
jl
dec
sub
dec
pop
ins
ficom
adc
test
push
mov
mov
jmp
outs
movs
or
xchg
into
cmp
jne
push
call
sbb
dec
inc
sahf
push
imul
dec
lahf
jle
add
mov
cmp
sbb
gs
jmp
fstp
(bad)
popf
add
mov
shr
xchg
and
push
loop
sbb
mov
cdq
shl
mov
inc
mov
hlt
sbb
add
into
out
and
inc
in
fmul
dec
scas
mov
and
push
cmp
out
jae
retf
xor
and
test
sbb
movs
add
or
into
stc
ror
imul
xchg
jbe
gs
mov
repz
inc
mov
push
pop
into
add
movs
inc
cmp
ficomp
dec
mov
cld
push
pop
sub
cmp
loope
gs
mov
and
jno
adc
mov
sub
xchg
xchg
shl
std
shr
(bad)
sbb
les
jae
cmp
in
mov
ror
jne
add
xor
popa
pop
inc
pop
aam
popf
sahf
mov
dec
pop
cs
and
stos
mov
repnz
fcomp
mov
or
popa
inc
dec
movs
push
fidivr
dec
mov
xchg
frstor
aas
retf
(bad)
xchg
popa
imul
cmp
cmp
xor
js
mov
fistp
leave
push
cs
pop
pop
ror
and
push
inc
or
jbe
lds
loop
cld
add
xchg
repnz
in
jg
xor
push
fwait
sub
or
(bad)
dec
adc
addr16
ds
fwait
ja
mov
mov
pop
pop
dec
push
mov
jge
call
imul
in
push
lods
inc
cmp
lea
fdiv
das
mov
mov
shl
jmp
inc
adc
sahf
imul
cmp
int3
push
out
les
mov
inc
push
(bad)
ror
popf
push
adc
mov
retf
xchg
dec
jmp
lds
je
mov
and
je
bound
pop
fst
scas
push
mov
cmp
sub
cld
mov
fidiv
je
std
mov
aad
adc
dec
outs
pop
popa
inc
or
(bad)
xchg
movs
lea
sub
mov
or
stos
scas
add
push
lods
mov
lahf
fld
push
mov
popf
or
scas
bnd
out
fdiv
xchg
xchg
xchg
bswap
mov
push
push
pop
adc
sahf
mov
push
push
sub
(bad)
(bad)
cs
xchg
shl
or
out
stos
inc
popf
inc
adc
mov
pop
aam
xor
fist
adc
ss
(bad)
and
out
add
or
xlat
sahf
cmc
icebp
dec
mov
jne
add
pop
cdq
inc
jne
fcomi
xchg
repz
inc
inc
lock
mov
cmps
or
jge
mov
retf
xchg
mov
mov
xor
sbb
bound
call
out
sub
jae
icebp
in
mov
jmp
pop
inc
mov
mov
(bad)
das
add
dec
fwait
push
adc
dec
outs
in
and
or
cmps
jae
in
push
daa
in
add
mov
jns
inc
dec
inc
in
into
(bad)
xchg
dec
mov
sub
sti
cs
rcr
loop
(bad)
xor
push
mov
cs
(bad)
jecxz
pop
mov
xor
adc
push
popa
test
outs
pop
push
stos
mov
adc
xor
js
cs
xchg
jmp
dec
pop
push
inc
cwde
cmp
out
loop
mov
scas
jns
fwait
aas
mov
dec
xor
js
jmp
sub
cmp
sub
push
int
sbb
mov
push
je
jecxz
cmps
ret
inc
dec
cmps
sub
cdq
xor
ds
(bad)
adc
sbb
mov
add
rcl
xchg
xor
sbb
jno
adc
repz
mov
sahf
bound
bound
mov
mov
das
cdq
les
or
mov
pusha
loopne
std
mov
dec
ret
and
add
push
repz
jne
in
mov
or
xor
sti
push
adc
aaa
mov
or
push
or
sbb
mov
outs
imul
add
mov
pusha
pop
ss
pop
std
cwde
sbb
xchg
and
out
leave
and
out
cmp
js
jno
cli
inc
inc
pop
lods
sub
mov
jmp
fdiv
and
or
pop
nop
fcomp
ins
pop
pushf
jp
sub
jg
and
shr
into
shr
jb
mov
in
mov
nop
push
call
mov
aas
js
stos
add
shl
dec
dec
pop
popa
retf
lds
mov
cld
jb
adc
and
lods
sub
addr16
inc
test
leave
mov
jne
retf
mov
out
sti
sahf
inc
repz
xchg
sbb
mov
sub
cli
sti
add
shr
popa
add
(bad)
jge
enter
ret
into
pop
outs
mov
jmp
leave
mov
mov
pop
test
xchg
push
repnz
dec
repz
in
push
push
mov
cmc
and
rcl
inc
adc
push
clc
cmp
sub
(bad)
lods
and
imul
or
jbe
xchg
scas
jnp
pop
fld
in
sub
hlt
cmp
les
adc
rcr
test
rcr
pop
and
pusha
scas
ins
inc
stc
mov
sar
mov
mov
jbe
or
pop
cmc
push
xor
pop
ss
jle
jno
cmp
mov
push
repnz
cmp
or
mov
xchg
pop
retf
jecxz
mov
push
or
and
push
retf
xchg
cmp
sbb
test
into
add
dec
sbb
and
pop
pop
add
jmp
cmps
mov
lock
out
xor
into
jl
adc
adc
lods
shl
xor
iret
mov
and
pop
hlt
mov
pop
cmps
or
lods
adc
movs
repz
movs
push
lock
sbb
or
mov
add
shr
or
inc
into
cmc
out
mov
jo
sahf
in
inc
(bad)
call
popa
popf
fistp
push
mov
in
xchg
jg
sbb
(bad)
pop
lods
push
test
scas
or
stc
pop
sbb
scas
xlat
sti
push
xor
ret
mov
xor
mov
sub
mov
and
and
adc
mov
ret
test
movs
sbb
pop
jg
retf
repnz
or
adc
mov
or
pop
mov
ret
pop
loope
scas
cmp
fisubr
inc
shr
cs
pushf
sahf
fsub
inc
cs
cdq
jle
sbb
xchg
inc
cwde
mov
aad
out
xchg
daa
cdq
pushf
pop
pop
jp
in
xchg
fisttp
push
ss
scas
or
xor
shr
lods
mov
xchg
ret
inc
jp
(bad)
jnp
ins
dec
daa
sahf
sar
mov
test
mov
xor
jns
mov
mov
sub
mov
add
cmp
sub
fmul
popf
cmps
mov
dec
and
pop
adc
addr16
int
fsubr
shr
mov
mov
jae
shl
cld
loope
xchg
jbe
jbe
in
push
jb
arpl
ret
mov
leave
(bad)
dec
mov
jle
pop
outs
push
sbb
dec
mov
and
cmps
push
add
mov
cmp
icebp
cmp
mov
fnstsw
pop
sub
test
sbb
and
repnz
mov
aaa
mov
push
and
inc
gs
imul
outs
loope
mov
sbb
hlt
rol
mov
adc
ret
scas
push
nop
psrlq
sbb
aam
dec
sub
mov
sub
xlat
mov
sub
fs
hlt
pop
and
or
cmp
xchg
fs
call
push
sbb
xchg
jae
pop
mov
imul
sbb
cmps
or
dec
or
popf
mov
add
xor
xor
pop
xchg
ucomiss
popa
call
push
not
jge
add
fs
clc
inc
pop
cmps
dec
dec
dec
fst
std
xchg
dec
xor
sub
pop
mov
mov
mov
cwde
dec
add
pop
popa
cli
mov
adc
xor
test
sbb
or
fs
mov
xchg
lea
add
add
in
and
push
jnp
mov
cmp
push
mov
mov
xor
push
mov
aas
push
fst
call
mov
xchg
push
fdiv
stos
pop
mov
jnp
and
mov
xchg
mov
xlat
jl
(bad)
imul
ret
lds
or
imul
imul
std
xor
dec
imul
xor
movs
(bad)
jg
mov
imul
popa
in
push
retf
mov
xchg
ds
ret
aas
in
fld
adc
enter
xchg
mov
jb
add
pop
mov
leave
sub
popf
xchg
repz
mov
add
adc
mov
bound
push
shl
cli
pop
or
shl
icebp
inc
dec
ds
shr
sub
inc
mov
repz
dec
les
jns
inc
jmp
dec
imul
adc
jae
in
mov
inc
or
or
push
fst
int
inc
mov
iret
jmp
in
jo
addr16
jae
popa
inc
ja
jne
out
pop
pop
iret
push
sti
fstp
test
fwait
push
mov
js
cmp
in
pop
pop
dec
adc
mov
enter
rcl
or
pop
jne
enter
pop
mov
xchg
adc
lock
pop
cmps
mov
test
popf
sbb
cdq
sub
inc
sbb
or
inc
xchg
mov
fiadd
jb
xchg
cmp
pop
xchg
mov
in
xchg
inc
sub
out
shl
loopne
mov
mov
pop
xchg
fisttp
push
xchg
inc
js
jl
dec
jns
jne
add
jge
test
movs
es
xor
cli
xchg
cmp
dec
neg
push
(bad)
mov
imul
jecxz
ins
jg
ja
imul
mov
out
adc
mov
push
cwde
or
out
mov
gs
mov
and
movs
mov
jb
cld
mov
pop
dec
cmc
fs
ja
(bad)
push
mov
jmp
push
loope
push
retf
das
cmp
js
fmul
lea
mov
ror
and
(bad)
imul
mov
mov
(bad)
cdq
push
cmp
or
lods
dec
call
inc
test
push
pop
out
sbb
adc
add
in
or
loop
sub
cmps
sbb
ds
in
or
pop
ror
jl
mov
scas
add
cs
cmp
stc
outs
push
mov
xor
mov
outs
xchg
or
jo
hlt
dec
sbb
inc
cmp
mov
push
pop
mov
leave
dec
das
pop
mov
lahf
push
add
dec
xor
add
jns
push
pop
scas
push
jge
or
add
enter
jns
inc
mov
adc
fbld
mov
sar
adc
inc
dec
aas
xchg
leave
dec
adc
(bad)
jge
(bad)
(bad)
sub
test
std
pop
sbb
xor
stos
or
push
pop
aaa
in
ret
mov
loope
cmp
repz
nop
or
test
mov
mov
arpl
and
ret
sbb
xchg
dec
and
cwde
ins
ins
dec
ja
outs
mov
xlat
mov
lock
shr
bound
cmc
pop
int
push
lods
push
dec
push
cs
xor
fcmovnu
sbb
xchg
dec
aas
mov
movs
xchg
dec
adc
dec
jmp
stos
shl
sbb
sub
rcl
xchg
ficomp
push
in
sub
or
loop
fld
pop
xor
(bad)
les
jecxz
cmc
xchg
pop
xor
loopne
dec
ja
daa
in
call
dec
and
and
leave
cmp
xchg
sbb
sbb
jle
xlat
pop
(bad)
mov
jnp
push
sbb
xor
fisttp
xchg
arpl
stos
cmps
mov
add
out
cmp
sbb
test
jnp
mov
sbb
and
mov
int
test
shl
inc
cwde
mov
jbe
mov
in
jle
cmps
adc
dec
xchg
jb
pop
fldenv
and
sub
mov
rol
and
in
cwde
xor
outs
or
neg
cs
call
lock
cdq
fimul
neg
mov
in
push
pushf
cdq
loope
pop
outs
sbb
cdq
(bad)
out
sbb
fild
inc
mov
stos
loop
loop
int
rcl
jmp
cmc
or
(bad)
out
xor
dec
sahf
mov
cmps
lahf
and
cli
jl
jmp
or
add
mov
or
nop
test
fcmovnbe
mov
mov
stos
(bad)
call
push
add
not
and
and
sub
jbe
xchg
jp
lods
out
rol
rcl
or
loopne
and
and
or
jns
(bad)
ror
call
aaa
sbb
mov
sar
fs
arpl
std
dec
push
xor
js
in
lods
fcmovbe
enter
jbe
and
xchg
pop
dec
inc
or
das
adc
int
mov
dec
cmp
movs
mov
and
pop
xor
xchg
pop
mov
mov
call
jmp
pop
mov
sbb
push
and
sub
icebp
fcom
test
(bad)
call
retf
daa
in
xchg
adc
xchg
xor
cmp
and
mov
xchg
stos
cmps
or
fwait
jp
idiv
xor
leave
jns
xor
lea
add
push
or
mov
xor
and
stc
lods
out
pop
loop
fcmovnu
jnp
mov
daa
add
and
pop
jb
je
cli
xchg
push
lea
popf
jns
cmp
pop
lods
pop
and
or
call
sti
jnp
sbb
movs
adc
inc
pop
pop
push
out
inc
shl
mov
mov
xor
mov
jno
std
imul
push
addr16
fdiv
push
jmp
cmps
pusha
pop
into
jbe
pand
or
inc
and
sbb
outs
push
test
pop
ror
lds
sbb
mov
mov
jl
sbb
movs
retf
mov
xor
or
sti
neg
sbb
fisttp
adc
push
sub
mov
outs
xchg
or
jnp
mov
rcr
dec
stos
das
out
adc
jns
int3
pop
pop
inc
mov
or
dec
es
fcmovb
je
cmps
adc
push
mov
mov
int3
add
sbb
adc
inc
jne
in
xchg
or
add
jmp
stc
hlt
movlps
(bad)
pop
inc
sub
arpl
push
fidivr
sbb
adc
adc
out
fisub
push
xor
sbb
imul
xchg
add
loope
(bad)
adc
dec
loope
and
sbb
and
lds
push
bound
sub
add
lahf
cmp
pop
imul
dec
ins
call
xchg
mov
fstp
aad
sbb
ret
pop
rol
jno
shl
xlat
sbb
or
dec
mov
xchg
movs
add
jns
cmc
jno
pushf
jae
mov
ins
cdq
mov
xor
xor
xchg
das
mov
xor
jecxz
imul
outs
jmp
sbb
pusha
xor
movs
aas
add
js
or
mov
ins
popa
sbb
mul
hlt
mov
jg
mov
mov
ja
or
or
imul
push
or
mov
push
add
push
iret
out
xor
push
stc
ret
rcl
ficomp
in
xchg
mov
push
aas
sub
(bad)
repz
bound
jmp
jnp
std
dec
adc
dec
sbb
(bad)
xor
test
lock
jp
shr
mov
imul
cld
add
into
fimul
adc
ja
push
popf
cmp
outs
xchg
lea
push
aas
int
xchg
and
sbb
cmp
loopne
mov
xchg
jecxz
sbb
arpl
in
adc
test
sbb
ja
scas
ins
neg
retf
(bad)
mov
gs
movs
jmp
dec
mov
xchg
mov
lods
enter
and
out
mov
inc
nop
mov
nop
outs
push
or
and
xchg
or
jb
sub
pop
mov
jns
ins
not
push
(bad)
pop
test
add
out
fst
xor
push
je
sar
xor
int
pop
dec
shr
sub
lock
mov
cmc
pushf
cmp
das
and
xor
jnp
or
pop
js
(bad)
test
pop
inc
mov
jecxz
and
outs
xchg
cld
addr16
loopne
pop
push
sub
and
cmps
dec
sub
inc
inc
sbb
call
mov
mul
push
mov
xor
test
int
rcl
call
dec
in
fiadd
fimul
test
test
dec
cmc
mov
out
adc
cmp
jle
in
repnz
lea
jecxz
movs
mov
dec
test
push
shr
int
push
ss
xor
rep
loope
and
add
mov
pop
popf
add
fldcw
sahf
xchg
bound
loopne
scas
div
or
ins
icebp
into
xor
or
adc
and
pop
adc
add
pop
pop
in
sub
test
stos
add
sub
adc
movs
xchg
out
std
mov
in
mov
and
sbb
xor
push
stos
mov
mov
stc
inc
jne
and
adc
push
fist
sahf
sahf
jle
ficom
mov
jle
jno
aad
mov
push
call
aad
mov
sbb
rcl
aas
sbb
add
cmps
jne
int
xchg
lea
arpl
jl
or
mov
dec
outs
mov
and
scas
into
std
enter
or
mov
stos
test
sub
jl
mov
ds
xor
cmp
sub
adc
cmps
cld
add
loope
lods
popf
jne
cmp
push
jb
cdq
and
inc
popa
push
imul
jbe
jo
es
mov
cmp
or
pop
movs
mov
mov
(bad)
xchg
push
aad
mov
fstp
xlat
pop
loop
jb
xchg
xlat
add
fadd
sbb
cmc
jle
jecxz
mov
xor
sub
mov
xor
mov
stos
popf
scas
xchg
aad
inc
cld
ss
lahf
dec
mov
popf
jo
retf
adc
outs
inc
or
retf
xchg
int3
mov
lods
test
mov
mov
push
jge
fucomip
cmp
lock
mov
test
push
dec
sahf
test
cwde
ja
dec
mov
and
mov
and
fidiv
dec
mov
mov
jno
imul
fwait
(bad)
jle
pop
call
repz
(bad)
fstp
lock
shr
lods
arpl
dec
cmp
cmp
xor
and
sbb
in
pop
fstp
ins
aam
(bad)
jmp
pushf
mov
retf
mov
mov
xchg
jbe
push
(bad)
and
ret
mov
or
jp
fist
dec
setle
retf
test
imul
es
xor
out
sbb
xor
ins
xchg
adc
mov
nop
xchg
jecxz
sbb
cdq
out
shl
or
cmps
dec
rol
js
xchg
mov
lods
mov
xor
test
adc
pop
mov
(bad)
cmps
fs
rol
imul
dec
lods
pop
xchg
mov
js
jg
stc
mov
and
and
mov
imul
shr
mov
into
xchg
xor
in
sub
cld
jno
sbb
cmp
clc
push
sbb
in
dec
ds
outs
push
into
mov
xchg
mov
js
fwait
into
je
bound
dec
mov
jmp
xor
mov
(bad)
fcom
arpl
jne
xchg
mov
fisttp
pop
not
push
and
adc
clc
popa
jmp
or
jecxz
repz
add
(bad)
xchg
pop
adc
scas
mov
xor
sbb
(bad)
or
cmp
icebp
or
push
popf
sub
jns
lahf
add
jmp
inc
mov
xchg
push
and
aas
or
cwde
jecxz
mov
and
push
jge
aad
sub
ja
into
imul
jnp
cmp
push
jnp
in
mov
js
xchg
shl
xor
outs
sub
or
(bad)
jmp
push
js
mov
pop
lahf
cld
lds
fs
cmp
or
dec
lds
pop
dec
sub
pop
je
and
ins
cmp
or
es
ja
cld
inc
nop
ret
(bad)
xor
xchg
out
cmp
inc
cdq
dec
out
push
out
repnz
cld
stos
fbstp
or
and
or
adc
add
outs
and
mov
fistp
retf
fld
int3
icebp
xchg
out
shrd
pop
cmp
pop
xor
inc
push
push
mov
cwde
int3
stos
aaa
scas
xchg
cmps
fldenv
data16
inc
lods
mov
cmp
xchg
jns
mov
push
push
fwait
int3
cmc
mov
mov
jp
ds
lods
div
push
sub
adc
sbb
into
jb
gs
jmp
jl
mov
add
out
jno
fdivr
push
pop
or
call
out
jo
xor
push
popf
cmp
mov
cmps
xor
xchg
mov
fsubp
jns
and
retf
or
repnz
(bad)
cmp
and
mov
and
retf
cmp
sbb
push
mov
dec
cs
mov
ins
dec
out
mov
inc
add
ss
cmp
bnd
loopne
movs
mov
cld
les
and
sbb
pop
jle
enter
movs
shr
or
dec
gs
test
cli
ret
rol
js
xlat
les
das
pop
out
aaa
(bad)
dec
push
cdq
mov
sbb
inc
mov
test
pop
adc
jbe
pop
lods
push
sbb
xor
dec
lahf
fild
jb
(bad)
push
push
in
movs
cmp
adc
push
dec
in
fwait
jnp
pop
or
mov
outs
movs
imul
mov
xor
mov
cmc
xchg
ins
(bad)
aam
into
fld
(bad)
iret
mov
jge
fsub
nop
in
imul
push
pushf
imul
adc
adc
xchg
shl
xchg
add
test
ror
sbb
sbb
push
mov
imul
(bad)
mov
(bad)
out
loop
pop
xor
mov
or
ret
jno
enter
sub
jp
in
dec
test
pop
jbe
(bad)
out
mov
mov
mov
mov
sbb
ret
lods
std
pop
mov
es
xchg
mov
es
ds
pushf
dec
mov
jmp
and
jecxz
aam
out
scas
stos
movs
and
and
push
in
imul
je
sub
push
jg
fild
lock
pushf
jns
ret
out
mov
jl
jo
out
push
in
test
cmp
sbb
mov
lock
arpl
xor
push
aaa
and
rcr
add
lock
push
add
push
jl
inc
xlat
sbb
mov
sbb
fdivr
add
add
int
imul
xchg
ins
or
aas
imul
in
mov
ins
push
cld
pop
push
data16
inc
fbld
int3
cmc
mov
jmp
push
(bad)
sbb
mov
imul
xchg
ins
xor
push
xchg
pop
pop
call
xchg
aam
loop
jmp
xchg
jge
not
(bad)
pop
hlt
popa
hlt
push
sub
test
sub
mov
sbb
idiv
fs
out
das
cmps
push
ficomp
push
mov
fs
cld
mov
lods
imul
mov
fisttp
in
js
xchg
jle
jmp
fidivr
mov
jne
or
addr16
scas
sub
int
mov
push
or
das
sbb
jecxz
psubw
aaa
ror
ins
jb
sahf
jmp
inc
call
push
imul
xchg
sahf
sub
cmp
cmp
pop
sub
dec
push
jb
add
pop
xor
hlt
pop
fadd
js
xchg
sub
jl
mov
icebp
cli
lahf
cmp
xchg
dec
pushf
mov
retf
adc
(bad)
mov
jbe
push
jbe
mov
push
dec
adc
mov
mov
ja
fwait
mov
or
lock
aam
sub
(bad)
cmp
inc
scas
daa
jnp
sar
fild
xchg
mov
test
xchg
xor
outs
addr16
inc
int
jo
(bad)
xor
push
inc
fimul
push
inc
push
and
loopne
cmp
dec
lea
cmps
mov
pop
hlt
mov
sub
popf
pop
in
out
xchg
in
and
push
mov
les
aam
ds
imul
data16
mov
mov
push
lods
shr
(bad)
popa
mov
(bad)
les
mov
fadd
stos
push
mov
dec
imul
shr
loopne
mov
dec
jecxz
or
fwait
mov
outs
push
imul
push
xchg
fmulp
xchg
mov
mov
xchg
shl
sub
push
cs
loopne
mov
mov
push
adc
cmp
or
and
xor
lods
mov
retf
cs
sub
mov
push
sahf
imul
and
stos
(bad)
popa
push
cmp
out
sub
repz
sbb
adc
cs
rcr
mov
mov
repz
cvtps2pi
ins
jg
adc
fist
sbb
ds
push
sub
pop
fiadd
lock
aam
adc
mov
adc
and
cmps
addr16
cmp
mov
push
fucom
mov
adc
push
iret
(bad)
rcl
loop
push
cdq
adc
cli
xor
sub
sub
dec
mov
push
ins
xchg
retf
mov
das
pop
mov
or
syscall
xor
cmp
jns
(bad)
mov
xor
cmp
cwde
out
fcmovbe
dec
pusha
std
adc
call
or
sbb
(bad)
or
jb
into
pop
ja
loop
fsincos
int
nop
inc
(bad)
and
pusha
or
pop
in
leave
mov
push
test
addr16
inc
lock
jno
nop
xchg
leave
out
pop
inc
inc
scas
sbb
retf
je
pop
fisub
shl
loop
adc
mov
dec
and
mov
int
sbb
and
test
mov
scas
das
adc
pop
inc
xor
hlt
adc
mov
out
or
xchg
mov
pop
pop
inc
les
gs
in
dec
(bad)
in
mov
arpl
xor
lock
push
push
leave
inc
jl
sti
cmp
popa
sbb
mov
jno
lods
iret
imul
popf
jmp
mov
(bad)
dec
pop
mov
adc
xlat
inc
mov
xor
cmp
or
movs
mov
in
fs
loop
test
jno
sub
fnstenv
aaa
mov
and
mov
or
xchg
ins
aaa
mov
dec
mov
adc
les
sub
repnz
ss
fs
xchg
lea
cmp
mov
(bad)
lods
popf
(bad)
(bad)
or
sbb
scas
cmps
call
or
pop
jnp
aaa
pop
push
call
fsubr
xchg
mov
enter
adc
mov
adc
das
pop
cwde
add
arpl
pop
loopne
ret
adc
mov
pop
xchg
cmps
ds
jmp
push
jl
dec
rol
push
inc
(bad)
loopne
push
xchg
mov
(bad)
imul
sbb
jno
mov
mov
add
addr16
stos
retf
inc
inc
and
cmp
pop
mov
in
dec
in
nop
aas
pop
aam
test
cmp
add
jmp
add
sar
mov
shl
je
cmp
mov
popa
inc
xchg
nop
push
jmp
adc
sbb
dec
and
cmp
sahf
cmp
push
or
mov
cdq
stos
outs
movs
(bad)
and
or
gs
iret
js
sbb
mov
xor
test
push
adc
sbb
add
arpl
sbb
xor
push
pop
mov
pop
pusha
and
mov
fistp
into
inc
jg
mov
test
fs
cmp
xchg
sub
in
shr
jb
(bad)
stos
(bad)
std
cmp
sbb
(bad)
std
xlat
(bad)
xchg
and
data16
mov
jnp
call
repnz
popa
mov
sbb
jecxz
cmp
rcr
out
fcom
mov
jne
test
inc
push
outs
ins
mov
icebp
pop
ror
int
or
mov
sub
ins
adc
bound
cmp
jbe
outs
aaa
jle
jmp
fs
call
stc
test
sbb
clc
stos
pushf
scas
push
scas
sub
jg
push
cmps
jae
mov
push
nop
xor
retf
push
cmovp
cwde
xchg
push
int3
aas
(bad)
xchg
std
jns
mov
shr
add
xor
and
in
sub
adc
into
mov
or
cwde
jp
xor
jbe
mov
cdq
pop
cmp
inc
imul
je
mov
stos
in
xchg
or
mov
sub
cmp
fcmovnb
imul
(bad)
imul
push
xor
cli
retf
xchg
pop
push
push
sub
outs
call
adc
jle
lahf
jge
(bad)
inc
mov
arpl
(bad)
retf
cmp
cmp
jp
sub
add
cmps
jbe
(bad)
not
popf
jno
in
or
repnz
sub
aaa
and
inc
outs
lahf
add
ds
ss
pop
iret
fdivr
push
stos
rcl
jo
cld
inc
cmp
cmp
scas
cmp
test
add
push
stos
imul
stos
adc
retf
cld
int
nop
xchg
jns
and
push
pop
loop
or
mov
imul
fld
pop
sahf
mov
repnz
xchg
ret
pop
jmp
pop
push
mov
movs
ins
xor
mov
ret
sar
(bad)
les
push
or
pop
mov
cmp
sbb
or
cmps
ja
lahf
imul
mov
rol
lahf
retf
jge
sbb
sbb
adc
ins
jmp
push
add
sahf
xor
adc
fcomp
jae
sub
ins
dec
pop
or
xor
pop
xchg
add
lods
out
mov
add
jb
jmp
xor
cmp
pop
lods
dec
sub
jle
xor
out
test
scas
dec
sub
dec
ret
pusha
lds
pushf
loop
stc
push
outs
retf
inc
mov
cdq
repnz
cmc
cwde
sbb
adc
(bad)
dec
popa
sbb
xchg
xchg
xlat
data16
test
jge
jmp
fcmovu
and
xchg
ret
cmps
call
cli
adc
out
enter
cs
and
rcl
test
mov
jecxz
test
jno
xchg
sahf
sahf
outs
pop
das
scas
int3
(bad)
aam
into
sub
aam
dec
retf
push
mov
popf
test
or
mov
xor
ror
int3
in
bound
adc
inc
sub
sahf
xchg
leave
jae
sub
or
xor
or
je
pusha
mov
ins
retf
sub
xchg
push
enter
js
pop
pop
mov
imul
test
adc
call
lahf
push
cmp
stos
mov
lods
cmp
jb
outs
push
in
cli
or
mov
cdq
packsswb
nop
adc
and
push
ret
push
hlt
or
adc
imul
dec
(bad)
cmps
into
push
cs
add
push
mov
ffree
or
addr16
xchg
pop
(bad)
push
fsub
cs
jg
adc
pop
adc
test
outs
xor
les
dec
adc
lahf
xchg
push
je
mul
in
bound
mov
jp
push
or
lods
test
pop
das
fnsave
push
repnz
(bad)
jmp
sub
add
cmp
popf
pushf
mov
loope
imul
call
pop
imul
aaa
lahf
mov
inc
cli
call
lods
fwait
xchg
mov
in
add
rcl
cmps
sbb
int
scas
and
adc
adc
test
aaa
js
or
test
inc
and
jl
add
imul
clc
xchg
sub
adc
mov
retf
js
mov
(bad)
lahf
rcl
mov
jecxz
cmc
rcl
enter
jge
movs
xchg
lea
sub
cwde
xor
cmps
and
dec
xchg
cmp
push
and
xchg
xor
and
inc
add
adc
mov
movs
push
xor
dec
mov
(bad)
sar
pop
xchg
aaa
and
fmul
or
adc
retf
adc
aad
or
pop
call
aad
jmp
dec
mov
jne
or
xor
push
push
(bad)
mov
push
mov
test
mov
das
in
cs
pop
xchg
leave
inc
cmp
std
outs
or
call
dec
pop
sbb
mov
inc
fmul
dec
adc
fadd
xchg
lahf
in
ret
mov
dec
enter
loope
pop
xor
enter
cld
nop
mov
sbb
arpl
push
and
mov
cmp
pop
jo
push
push
in
cmp
sub
leave
jg
mov
lahf
xor
cli
jle
cmp
pop
pop
push
push
and
(bad)
fnstsw
lea
loopne
jbe
sti
sub
test
mov
sahf
sbb
sub
stos
fucomi
sub
ror
(bad)
sbb
push
shr
inc
dec
mov
(bad)
in
test
int3
jmp
mov
mov
push
mov
add
addr16
pop
iret
aas
jo
(bad)
jno
sub
dec
xor
mov
(bad)
xlat
in
mov
or
xor
sub
and
data16
ror
dec
xchg
or
adc
cmps
lahf
jo
or
mov
nop
enter
cmp
test
nop
fld
data16
pushf
out
inc
jp
mul
push
(bad)
sti
or
inc
and
(bad)
in
aam
xchg
adc
jmp
test
and
add
aaa
sbb
movs
int3
mov
mov
int3
sti
and
mov
mov
call
bound
push
scas
test
mov
dec
bnd
mov
adc
mov
and
pop
adc
push
fnstenv
stos
pop
cmp
loopne
js
sahf
pop
nop
std
lahf
fcmove
jno
bound
and
leave
imul
dec
cdq
inc
pop
mov
nop
ins
outs
xor
daa
test
push
movs
cmps
push
or
cmp
mov
and
retf
adc
js
das
nop
mov
shl
(bad)
les
mov
jae
fidiv
or
ins
adc
pop
jae
rol
sahf
bound
stos
(bad)
sbb
loopne
fsub
lock
icebp
pop
movs
push
or
inc
das
repz
and
add
mov
repnz
jbe
jae
sti
xchg
dec
xor
lea
fisubr
leave
cld
in
mov
sub
add
outs
inc
rcl
loope
out
dec
mov
aas
pop
call
dec
daa
jns
cmp
in
xchg
repz
es
imul
cli
sub
outs
push
(bad)
aad
mov
jg
gs
(bad)
iret
fidivr
inc
das
dec
aam
mov
dec
mov
ror
mov
xor
and
jge
ror
ret
lods
adc
scas
sub
jge
cmp
shr
pop
lock
xchg
and
mov
idiv
movs
rcl
call
fcmovu
mov
sar
push
(bad)
push
(bad)
popa
jge
pop
(bad)
sub
adc
test
cmp
mov
jle
scas
ror
jmp
jge
fbstp
fnstcw
(bad)
(bad)
outs
cmp
repnz
in
popa
pop
sbb
aaa
jo
xor
mov
mov
mov
mov
or
addr16
ds
imul
mov
add
mov
fnsave
in
(bad)
sub
xor
pop
pop
inc
adc
into
jmp
xchg
and
loop
out
mov
aam
adc
cmc
jmp
sub
(bad)
into
enter
scas
xchg
pushf
sub
daa
repnz
adc
outs
rol
jns
sbb
jp
sbb
inc
cmp
stos
movs
fldenv
sbb
and
rol
imul
out
push
(bad)
pop
in
add
xchg
je
stos
out
xchg
mov
hlt
pop
pop
pop
popf
sbb
adc
add
pop
das
call
xchg
push
mov
jb
jp
in
sub
popa
aas
stc
add
add
adc
shr
fild
sti
sub
(bad)
sub
add
ret
aam
adc
mov
arpl
sti
outs
cdq
int3
mov
imul
inc
jno
dec
dec
icebp
std
sbb
ja
test
sti
inc
and
jae
cmp
jmp
add
iret
xor
cmp
and
in
in
add
inc
push
xor
add
xor
xor
clc
add
xchg
pop
fsubr
dec
ret
test
lea
xchg
mov
pop
lock
and
outs
inc
xor
mov
mov
js
bound
push
adc
retf
jo
dec
fsub
bnd
pop
and
aas
xchg
stos
mov
cld
adc
xchg
fbld
stc
or
test
xchg
inc
in
cmp
lods
sub
or
sub
les
mov
mov
(bad)
enter
scas
dec
mov
test
inc
addr16
mov
das
jmp
xor
repz
jl
fadd
stc
sbb
cwde
push
int
gs
push
inc
sub
xor
cmps
fimul
adc
pop
mul
loopne
mov
mov
ret
mov
cdq
xor
out
loopne
pop
dec
enter
adc
jge
loopne
xlat
je
in
js
push
mov
or
pushf
adc
sbb
push
neg
arpl
fcom
jmp
loop
push
jg
imul
test
bound
pop
lods
sub
addr16
imul
mov
pop
xchg
pushf
mov
rcr
fsubr
inc
in
nop
dec
or
sub
inc
push
rcl
sub
dec
retf
out
push
retf
test
jp
daa
sub
fcmovnbe
dec
hlt
dec
adc
imul
pop
ss
xor
xchg
cmp
cmp
jno
popf
repnz
test
jns
add
sbb
sahf
mov
outs
jns
repz
mov
pop
jbe
ds
scas
stos
lock
inc
push
inc
fnstcw
sti
mov
addr16
sub
rcl
jb
dec
mov
push
cmc
mov
nop
leave
add
es
test
jmp
mov
(bad)
pop
fcmovb
and
xchg
push
push
repnz
mov
sbb
pop
add
(bad)
aad
push
mov
push
mov
loop
or
data16
ret
add
xchg
ja
rol
in
or
and
mov
fs
jns
cmp
(bad)
ja
je
push
add
out
lds
adc
inc
mov
imul
adc
add
in
call
sub
movs
add
enter
mov
out
and
push
mov
add
adc
cwde
dec
imul
test
add
cmp
dec
cmp
fcomi
js
and
(bad)
fstp
loope
inc
pop
dec
icebp
inc
js
retf
std
jo
or
(bad)
mov
movs
and
movs
lods
and
imul
mov
xor
push
ins
aad
jmp
xor
lock
js
mov
add
test
jl
pusha
ja
inc
dec
lods
cmp
mov
dec
mov
(bad)
jae
outs
sbb
les
sbb
iret
neg
fisubr
push
dec
test
arpl
popf
(bad)
inc
and
imul
test
xchg
out
aas
movs
out
cmp
aad
mov
cs
imul
hlt
jnp
jp
mov
fstp
cld
repnz
retf
jg
jo
push
scas
repnz
aas
adc
retf
imul
mov
pop
das
cld
jp
sub
pop
call
dec
retf
call
mov
sub
mov
dec
sub
cmc
loopne
test
imul
icebp
lea
cdq
pushf
lods
neg
(bad)
push
pop
sub
mov
dec
sti
fmul
outs
push
mov
pop
test
retf
cmp
xchg
arpl
movs
cmps
inc
int
sbb
push
outs
out
inc
out
xchg
xor
leave
(bad)
dec
mov
std
jns
or
jl
std
loope
fs
xor
adc
mov
mov
outs
test
jae
clc
dec
jo
add
pop
fdiv
imul
in
cmp
inc
adc
jmp
pusha
clc
into
mov
call
xor
xchg
pusha
fs
cmp
scas
sub
int3
movs
daa
bound
add
cli
ror
popf
ret
or
push
andps
jmp
lods
(bad)
cli
push
stos
inc
jg
cld
std
shl
xchg
outs
jnp
and
lahf
popw
jl
icebp
push
fist
jb
ds
sbb
jns
inc
dec
lods
push
push
xor
xchg
mov
mov
cmp
js
lea
or
loopne
cmp
cmp
and
jo
pop
out
push
ror
mov
pop
sub
adc
xchg
dec
sbb
ja
fidiv
jnp
cmp
jne
lods
ret
test
adc
scas
jmp
cld
ins
and
cli
sub
xor
or
sbb
leave
and
stos
in
dec
movs
add
lods
push
mul
mov
fimul
in
loopne
and
mul
out
loopne
outs
pop
rcl
int
push
rcl
les
xchg
test
mov
jmp
sbb
fsub
xor
icebp
test
fisttp
jno
retf
das
add
iret
ins
jmp
jns
mov
fsubr
cmp
(bad)
(bad)
retf
loopne
mov
popa
mov
xlat
adc
shl
mov
sahf
cmp
xchg
ret
cmc
dec
cmp
mov
sub
rcr
and
mov
fidivr
or
out
out
imul
dec
jo
mov
arpl
dec
out
jmp
sub
jecxz
pushf
ins
pop
das
jns
mov
mov
jb
cmps
xor
sub
dec
jp
retf
adc
repnz
cmp
mov
stos
imul
(bad)
xchg
dec
stos
mov
push
out
mov
clc
mov
pusha
or
xor
add
or
leave
dec
dec
sbb
pop
repz
cwde
enter
and
sub
mov
jae
sub
arpl
or
test
jg
stc
jb
(bad)
pop
cmc
les
mov
rcr
inc
and
push
xchg
sbb
outs
and
bound
call
leave
push
jg
pop
rol
or
out
and
jnp
imul
jns
call
sbb
imul
sub
sub
pop
inc
das
jns
mul
xor
imul
mov
jg
xor
retf
pusha
jb
fimul
jge
(bad)
ror
or
aad
(bad)
icebp
stos
xchg
pop
jbe
sbb
inc
pop
add
aas
xchg
clc
jo
(bad)
cmps
mov
(bad)
or
inc
(bad)
(bad)
or
push
jle
retf
dec
push
push
adc
sar
pushf
sbb
je
(bad)
pop
sti
cmp
mov
push
cmps
out
jmp
mov
scas
(bad)
std
shl
jae
fs
test
clc
cwde
fst
pop
fcmovnbe
ret
cld
(bad)
sahf
pop
jle
ret
sti
cmps
xbegin
jle
movs
sub
test
dec
cmc
xor
push
(bad)
pop
sti
cmp
ret
(bad)
jle
adc
popa
xchg
mov
lea
stc
inc
mov
ret
stos
or
test
call
push
mov
jp
inc
std
mov
add
fld
push
stc
rol
mov
enter
sti
pop
xor
out
int
jg
push
cmp
jle
dec
pop
sbb
(bad)
repnz
cmp
sbb
gs
pop
xchg
fwait
in
iret
cmc
mov
pop
mov
push
jp
mov
inc
add
inc
popf
push
jo
cmp
aad
scas
jecxz
mov
nop
fld
mov
adc
shl
pop
sti
shr
push
popf
jmp
dec
and
mov
outs
jmp
cmc
retf
ficomp
scas
push
sub
sub
inc
dec
jmp
xor
aas
stc
mov
cmp
jo
ror
in
shl
stc
ror
pushf
popf
movs
xor
stos
inc
addr16
mov
(bad)
jns
shr
sbb
dec
std
mov
enter
mov
jp
xchg
enter
pop
mov
push
xor
fst
mov
xor
add
fldcw
cmp
or
(bad)
mov
repz
lds
popa
push
mov
lahf
pop
and
cmp
add
retf
pop
jnp
adc
push
xor
cmp
shl
pop
xchg
call
into
pop
or
hlt
or
dec
movs
sub
push
scas
dec
mov
pusha
push
jp
or
(bad)
out
jnp
fstp
adc
scas
or
mov
mov
jmp
(bad)
icebp
stos
xor
outs
mov
sub
add
mov
aas
cmp
cs
mov
inc
mov
aad
mov
scas
mov
sbb
jnp
fsubr
call
add
push
mov
cmps
mov
pop
mov
mul
jo
fild
add
scas
pop
es
inc
imul
jae
out
js
sub
cmp
dec
or
in
jno
mov
or
push
cld
mov
jle
ins
sbb
xor
dec
pop
push
xchg
es
add
lds
mov
imul
adc
jno
lock
nop
dec
sub
cmps
mov
adc
dec
pop
jge
push
movs
inc
mov
outs
fcom
(bad)
ins
jnp
dec
shr
push
add
sbb
pop
int
cdq
pop
jp
push
and
mov
or
loopne
(bad)
fst
push
daa
repnz
adc
mov
cmp
lods
push
aad
loop
dec
push
inc
pusha
sbb
das
inc
push
mov
xchg
mov
arpl
jp
adc
repnz
fdiv
dec
cld
mov
in
mov
shr
inc
xrelease
fidivr
outs
aaa
sti
das
xor
dec
sub
int3
xchg
cmc
icebp
pop
jb
jg
push
inc
sti
mov
adc
dec
lahf
gs
xchg
lods
pop
cmps
or
clc
adc
test
mov
xchg
push
fs
jb
cmps
sub
xlat
int3
xlat
mov
and
mov
pushf
fmul
xchg
or
jmp
push
gs
xor
or
and
pop
adc
clc
into
jp
xor
jge
inc
mov
in
mov
push
pop
dec
cli
jg
add
js
adc
dec
(bad)
cmc
mov
fisub
call
cmp
xchg
xchg
nop
mov
jmp
and
test
das
dec
push
sub
cld
xor
sub
jp
mov
(bad)
lods
aas
sub
scas
jl
inc
add
xor
pop
inc
cmps
outs
mov
mov
call
mov
sub
(bad)
push
shr
iret
xlat
cmps
xor
cwde
pop
scas
out
inc
(bad)
(bad)
stos
add
mov
push
(bad)
(bad)
fisubr
xchg
mov
cwde
cmc
rol
add
xchg
call
jae
xchg
hlt
and
mov
xor
sub
and
inc
mov
mov
icebp
xchg
test
cmps
push
adc
mov
das
repnz
push
inc
(bad)
arpl
ins
js
adc
mov
push
fist
out
xor
dec
test
retf
pop
push
add
int
ins
daa
and
push
jl
cli
loope
stos
icebp
lea
inc
pop
ins
add
or
popa
daa
pop
add
ss
mov
adc
inc
ins
sub
js
daa
(bad)
(bad)
mov
and
mov
jle
jo
movs
shr
jp
or
pop
sbb
mov
popa
loopne
mov
sub
adc
jno
push
std
data16
div
mov
ins
dec
test
mov
cmc
dec
js
lea
mov
mov
std
push
xor
dec
dec
push
stos
cmps
imul
xchg
jl
inc
cld
mov
addr16
mov
mov
or
les
mov
aad
xchg
add
scas
sbb
xchg
lds
mov
and
std
jecxz
push
(bad)
sub
mov
xchg
ds
in
cdq
mov
sub
mov
jg
imul
mov
jl
out
(bad)
mov
and
adc
imul
mov
fisubr
loope
mov
cmp
inc
test
inc
cmp
test
scas
xor
lds
pop
add
xchg
call
pop
aad
cmps
push
or
(bad)
pop
xchg
xor
adc
pop
(bad)
mov
mov
dec
and
push
inc
das
dec
scas
push
add
fabs
push
pop
clc
mov
adc
xchg
fidivr
cmps
mov
xor
cli
mov
or
out
es
lds
das
cli
imul
(bad)
sbb
(bad)
push
sub
push
sbb
xor
cmp
out
mov
push
mov
pop
cli
xor
pop
xchg
test
pop
add
dec
sub
push
fist
sbb
aas
jno
cmps
sub
inc
inc
out
push
xor
xor
retf
xchg
jo
xchg
clc
inc
mov
add
lods
xor
and
or
or
int3
sbb
int3
retf
mov
clc
xchg
popf
mov
fld
adc
mov
and
int3
lock
fwait
sbb
mov
adc
jbe
mov
cmp
and
stc
inc
movs
pop
inc
cmp
fidivr
pop
fs
call
out
pop
lahf
and
or
rol
adc
loopne
into
dec
enter
xchg
jp
mov
mov
and
jo
xchg
in
xor
syscall
lahf
loope
pop
dec
cmps
add
xchg
stos
ret
or
lods
pusha
mov
push
push
(bad)
aad
cmp
loop
adc
sbb
mov
cmp
(bad)
jmp
mov
jl
or
push
jnp
adc
cs
pop
mov
dec
aas
outs
mov
jmp
enter
in
cdq
jecxz
and
cdq
outs
test
dec
fisttp
fdiv
xor
dec
dec
scas
aaa
xchg
cld
imul
mov
fimul
and
out
mov
stc
iret
out
pop
call
adc
ror
jecxz
push
arpl
test
fld
jecxz
(bad)
pop
int3
mov
add
or
mov
stos
mov
retf
mov
or
retf
push
ins
mov
xchg
dec
xchg
adc
dec
pop
jmp
movs
and
push
popf
lea
iret
push
mov
gs
push
test
inc
outs
mov
push
or
ret
xor
aad
mov
adc
mov
dec
inc
mov
jge
rcr
xor
inc
mov
retf
outs
shl
in
daa
stos
dec
sbb
xor
push
pop
retf
jb
fld
repnz
add
shl
push
imul
(bad)
jo
in
jb
inc
enter
js
test
pusha
xchg
mov
aaa
sbb
leave
pop
mov
inc
inc
scas
out
sbb
push
cmps
imul
or
sub
xchg
int
dec
icebp
fstp
ja
cmp
or
and
cmc
test
push
sahf
(bad)
inc
test
xchg
inc
cmp
sub
bound
clc
sti
lds
ins
sub
nop
sub
inc
mov
push
out
add
cmp
cli
lock
inc
movs
sbb
push
xlat
test
mov
mov
fdivr
cmp
int
xchg
jmp
mov
xchg
std
pop
or
sbb
cdq
inc
inc
test
test
sti
and
stos
mov
imul
ret
and
lods
cmps
jnp
xor
aas
fld
pop
fdivr
mov
mul
scas
(bad)
ins
ror
push
push
in
je
cmp
xor
les
int3
mov
jnp
inc
imul
repnz
mov
dec
jne
repnz
jmp
mov
mov
call
jge
cmp
cwde
xchg
push
adc
push
mov
and
inc
and
loope
jnp
retf
push
std
cmp
pop
mov
out
mov
lock
aam
mov
mov
mov
dec
push
sbb
pusha
push
in
or
or
jae
ficom
es
xor
into
je
push
xchg
outs
bound
out
jnp
mov
adc
pop
ja
rcr
mov
das
xlat
pop
das
push
ja
cs
pop
retf
in
arpl
ins
jbe
jp
sub
lods
outs
cmps
shl
ss
inc
push
popf
leave
(bad)
shl
arpl
retf
inc
nop
cs
sub
sbb
cs
jmp
outs
push
aad
(bad)
repz
jle
hlt
pop
pop
mov
cmps
sbb
fisttp
pop
mov
ins
sub
mov
cs
(bad)
ins
jmp
sub
sbb
cld
cmc
add
outs
repnz
out
mov
gs
xrelease
jge
dec
pop
mov
ins
jbe
pop
jg
dec
ja
pushf
iret
daa
push
scas
icebp
aas
scas
cmp
popf
xchg
nop
test
jbe
dec
pop
pop
mov
cs
out
scas
push
leave
jp
pop
push
int3
mov
add
pop
inc
enter
sbb
fs
int3
mov
xor
cmp
mov
jmp
cmp
pop
iret
xchg
add
and
jp
dec
mov
shl
sub
jmp
das
int3
cmps
mov
fdivr
push
inc
cmp
(bad)
loop
fistp
int3
mov
sbb
scas
popa
push
ins
in
inc
jns
ret
std
(bad)
jb
push
xchg
sbb
jnp
jmp
adc
fisttp
cmps
jae
std
rol
retf
retf
fist
dec
aad
das
inc
sti
fsub
call
mov
and
mov
push
jp
pop
lods
push
aam
xor
sub
outs
mov
int
loop
es
cs
inc
clc
pop
jmp
mov
dec
out
imul
out
push
test
mov
outs
jle
inc
neg
das
int3
mov
or
sbb
(bad)
mov
dec
lds
push
std
mov
ins
pop
js
mov
push
repz
xchg
lds
push
pusha
xchg
mov
aad
dec
fld
icebp
pop
pop
xchg
cs
(bad)
popf
rcr
dec
mov
sub
psubsw
add
dec
loopne
push
cmp
inc
cli
push
dec
shl
xchg
jg
sub
out
push
jecxz
push
sti
rcl
add
pop
test
cwde
push
jge
mov
mov
and
imul
mov
adc
iret
mov
adc
or
adc
adc
cmp
add
cmps
cmp
loop
push
ds
inc
pop
xor
fiadd
or
xor
add
bound
leave
mov
mov
lahf
mov
mov
outs
inc
jg
sub
rol
pusha
or
lds
inc
adc
lods
call
mov
and
ret
aas
xor
push
mov
xchg
and
cmc
retf
adc
jb
sub
fadd
xor
retf
dec
sbb
adc
xchg
jae
jne
add
inc
out
dec
mov
pop
adc
add
ins
xor
add
ret
test
iret
adc
add
ins
out
sub
fs
lock
adc
adc
ds
repz
lods
mov
lods
les
jns
mov
sbb
das
ja
cmp
dec
into
lds
mov
sbb
mov
test
jno
dec
pop
sbb
fisttp
push
imul
xor
mov
push
test
sub
arpl
sub
enter
push
or
cld
aas
sub
add
xchg
(bad)
(bad)
ja
mov
and
repnz
fidivr
xor
dec
inc
in
xchg
inc
icebp
xchg
and
mov
idiv
add
and
mov
popf
scas
loop
push
out
add
loopne
mov
push
call
mov
test
test
call
aas
mov
cdq
scas
int
mov
adc
int
js
mov
imul
ret
or
clc
int
stos
loope
jge
dec
sbb
push
jecxz
push
scas
lock
neg
ja
xor
movs
push
xchg
iret
mov
and
jo
pop
jb
xchg
idiv
or
test
pop
iret
imul
adc
pop
ret
retf
or
(bad)
je
shl
jg
mov
icebp
jbe
pushf
and
and
mov
xlat
jnp
scas
cli
lea
and
inc
mov
xchg
and
cdq
jns
pop
jg
push
xchg
jmp
movs
inc
xlat
add
scas
mov
xchg
das
cmp
sub
adc
mov
mov
mov
adc
and
sub
inc
std
xor
(bad)
test
in
or
das
test
icebp
mov
mov
mov
(bad)
xor
das
lods
pop
jnp
mov
and
cli
shr
xchg
pop
fidivr
or
push
mov
jmp
jae
hlt
inc
jns
add
sub
in
cmp
lods
ja
out
and
leave
pop
ret
leave
mov
lods
xchg
fs
push
jns
dec
pop
xchg
mov
sub
ror
into
scas
nop
sub
fistp
or
jo
sub
lock
ja
gs
mov
ds
cld
ja
loope
arpl
mov
test
adc
cmp
lea
and
inc
cmp
outs
in
mov
daa
jae
dec
dec
sbb
sbb
scas
cmp
inc
pop
and
sbb
stos
lods
push
sub
cwde
add
and
dec
lahf
and
xlat
clc
outs
inc
loop
jae
xor
and
push
loope
sbb
ins
test
fild
(bad)
in
lds
push
mov
leave
or
pop
ins
lea
mov
ret
ja
(bad)
cmp
aas
icebp
ss
xchg
cmps
retf
ret
inc
das
fdecstp
and
(bad)
ret
jmp
popa
fcmove
fisttp
add
mov
and
lods
xchg
les
inc
out
xchg
sahf
mov
call
xchg
lahf
loop
fst
fdivr
adc
push
in
cmp
mov
imul
inc
or
dec
and
mov
cmps
xchg
fstp
icebp
jge
inc
xchg
test
imul
push
push
mov
(bad)
in
jmp
and
push
push
cmps
cmps
sbb
test
js
adc
das
scas
push
cmp
jno
div
adc
mov
sar
ret
mov
push
pop
or
test
dec
xchg
jmp
fnstsw
fwait
sbb
mov
push
lahf
xor
xor
pop
punpckhwd
out
push
and
push
out
inc
fwait
jp
and
aaa
imul
mov
pop
push
fwait
out
inc
ds
ja
sub
mov
mov
sub
mov
enter
sub
pop
push
sbb
mov
(bad)
jle
stos
adc
and
fs
icebp
in
jae
shl
pop
ins
inc
xchg
xchg
mov
pop
ds
jge
inc
call
aas
stc
lods
(bad)
jge
clc
pop
xchg
xchg
hlt
ins
cmp
scas
ins
xchg
and
fsub
movs
adc
xor
popf
arpl
mov
(bad)
push
xchg
mov
mov
or
pop
les
jb
jno
popa
mov
mov
adc
mov
inc
mov
pop
cs
mov
sub
inc
nop
ret
xchg
fcmove
ds
into
add
sti
nop
gs
ror
outs
cmp
push
mov
into
arpl
xor
dec
sub
pop
sahf
inc
shl
xor
repz
rcl
mov
lahf
ret
xor
or
add
mov
jecxz
fwait
icebp
rcr
stos
std
ins
xchg
popf
sub
lods
aaa
aam
push
fidivr
mov
dec
out
mov
imul
nop
rcl
lea
test
sbb
in
mov
je
cmp
xor
adc
je
mov
cmps
sar
pop
adc
xor
mov
push
mov
loop
mov
(bad)
cdq
out
scas
inc
cli
pop
ins
adc
mov
lea
mov
fidiv
fistp
icebp
out
or
mov
stc
aad
cmc
mov
or
fwait
sahf
mov
loope
and
mov
or
stos
mov
js
mov
xchg
dec
cmp
out
add
add
mov
xor
out
sbb
jp
scas
ret
jnp
cdq
jo
dec
ja
push
inc
ss
xchg
lds
call
jmp
call
aas
test
aam
lea
lea
mov
mov
int3
(bad)
cmp
pop
or
mov
hlt
int
out
inc
cmp
jmp
iret
cmc
out
les
fidiv
cmp
bound
leave
out
sub
mov
pop
mov
popf
mov
jo
jge
inc
dec
aam
rcr
sub
lods
bnd
in
jl
loopne
add
cmc
cmp
fcom
dec
loop
lods
push
lea
fwait
dec
fld
xchg
and
adc
movs
retf
mov
ins
fdivr
mov
(bad)
mov
js
sub
rcr
cmps
out
add
(bad)
ficom
icebp
pop
stc
imul
add
inc
aam
adc
xchg
not
pop
pop
mov
push
mov
daa
dec
cmps
xchg
jmp
sbb
or
xlat
inc
loop
add
add
sar
ja
fdivr
sahf
mov
push
cmp
gs
nop
popf
ds
inc
and
lea
dec
mov
dec
adc
xchg
loopne
xor
fsubrp
adc
jmp
aaa
push
xchg
jns
jno
cmp
or
int3
mov
mov
gs
lds
stc
scas
lock
sbb
push
mov
pop
cvtpi2ps
into
test
adc
sar
jns
scas
mov
nop
scas
or
imul
dec
sti
push
mov
pusha
popf
sbb
and
pop
in
dec
retf
mov
(bad)
xchg
stos
daa
push
lds
xchg
scas
bound
mov
(bad)
bnd
inc
pop
lahf
shl
mov
out
lods
ds
xor
int
push
(bad)
clc
push
leave
je
inc
lea
sbb
mov
loop
mov
aad
cli
inc
inc
lar
std
out
cmp
outs
push
adc
int3
pop
jne
lock
push
in
sbb
jns
fcmovnb
add
mov
mul
dec
jp
adc
xchg
pop
inc
xlat
sbb
repz
push
jmp
fsubr
pop
mov
es
icebp
inc
imul
pop
stos
or
into
retf
jg
adc
in
jne
sar
sti
push
lods
cmp
ror
jecxz
or
test
loopne
pop
xor
lds
inc
xor
sbb
ins
xchg
cmp
sbb
jge
test
push
or
loop
lock
out
add
out
adc
ret
nop
fstp
pushf
xchg
push
mov
aaa
bnd
test
push
mov
repz
push
sar
sub
jg
out
adc
imul
ins
dec
mov
mov
mov
and
icebp
jmp
mov
iret
rcr
push
cmp
popa
out
mov
jns
shl
test
xor
out
xor
xchg
push
in
dec
add
dec
and
inc
pop
adc
cld
call
sub
xor
(bad)
repz
sbb
cmps
adc
push
jmp
imul
inc
pop
(bad)
ds
mov
or
test
popa
div
mov
icebp
pop
mov
add
adc
sti
(bad)
adc
xlat
je
call
data16
rcl
loope
adc
int
ficom
sbb
add
dec
xor
inc
cli
fmul
jmp
or
imul
popf
jb
(bad)
icebp
xchg
adc
cmp
(bad)
and
shl
fistp
loope
fisttp
in
imul
retf
mov
sub
jg
nop
or
push
stos
icebp
lahf
outs
inc
stos
xchg
mov
shl
adc
pop
arpl
xchg
sti
mov
sub
adc
push
inc
mov
push
adc
sbb
(bad)
es
loope
mov
or
test
fiadd
sub
sub
stc
fsub
push
push
xchg
xor
daa
retf
(bad)
or
pop
adc
cmp
sub
mov
(bad)
scas
mov
adc
jge
rol
lock
jp
stc
or
ins
call
dec
adc
add
fucomip
sbb
loope
mul
mov
(bad)
xor
xchg
repnz
ds
add
iret
les
push
call
jno
loopne
xor
fdiv
mov
sbb
cmp
lock
push
push
jmp
lea
push
and
sar
in
lods
adc
jno
fcom
jp
dec
pop
nop
mov
fdiv
pop
pop
fdiv
cmc
lahf
mov
ins
scas
jmp
outs
add
scas
in
shl
jae
std
loope
stc
and
sub
inc
or
push
add
movs
add
dec
je
inc
pusha
jno
sub
shl
mov
imul
ret
jge
pop
push
inc
rcl
stos
dec
imul
aaa
cmp
pop
mov
nop
mov
retf
aad
dec
or
push
dec
xor
push
dec
sar
mov
xchg
fidiv
lods
dec
dec
cmp
xchg
or
cs
adc
aad
in
int
jp
lea
mov
mov
clc
rcl
ret
data16
stos
(bad)
adc
stos
rcl
pop
cmp
sbb
cld
popf
and
xor
loope
in
mov
loop
pop
iret
(bad)
aas
aad
jne
xlat
ins
sub
(bad)
call
(bad)
ffreep
repz
push
into
xchg
lds
and
aam
sbb
xchg
and
push
enter
mov
aam
xchg
adc
add
mov
add
pop
je
(bad)
clc
inc
xor
addr16
sti
mov
cmp
ror
adc
test
mov
cmp
or
sub
mov
mov
lahf
pop
jmp
in
repnz
pop
into
popf
add
pop
dec
lods
loope
ss
cmps
cwde
push
adc
aad
pop
stc
ins
dec
sbb
out
popa
xchg
retf
call
fs
pop
mov
movs
or
mov
mov
loope
add
push
pop
stc
addr16
test
jb
loopne
mov
sar
mov
arpl
pop
mov
stc
pop
lods
jl
xchg
je
push
test
sbb
aaa
lea
mov
dec
mov
jno
in
push
cmc
ins
loope
jo
xor
xchg
movs
xchg
call
inc
mov
sbb
xchg
bound
adc
lods
in
retf
push
and
add
fidivr
jnp
pavgb
or
nop
dec
stos
add
sbb
hlt
mov
rol
js
mov
xor
cld
dec
int3
dec
scas
xor
pop
addr16
outs
js
pop
lds
repnz
jae
dec
cmp
sbb
dec
fimul
neg
push
test
fisttp
ja
push
xor
xchg
aam
ror
std
inc
mov
scas
aas
je
mov
add
cld
cmc
pop
push
jnp
sar
or
push
jg
pusha
mov
ret
jmp
xchg
test
xchg
push
test
xchg
jbe
xchg
cmp
inc
lods
inc
push
mov
aas
push
dec
xchg
xchg
js
cmp
fdivp
push
dec
clc
sbb
shr
aas
(bad)
es
lds
mov
jne
push
mov
adc
jmp
mov
lahf
jmp
imul
js
in
or
sahf
cmp
repz
in
ja
inc
push
rcr
sbb
sbb
les
jecxz
lock
das
xchg
mov
dec
cmp
call
pop
mov
repz
push
scas
sar
mov
dec
sbb
inc
xor
popf
fld
test
shl
fisub
cdq
mov
not
jmp
neg
mov
stos
dec
xchg
push
cmp
jmp
xchg
out
or
fmul
int
add
retf
fisttp
inc
mov
sbb
sti
and
pop
lds
fistp
rcl
test
popf
mov
dec
mov
mov
(bad)
xor
aaa
out
mov
push
mov
(bad)
ss
cdq
rcl
mov
pushf
mov
add
adc
lock
dec
cli
adc
add
mov
addr16
test
add
(bad)
mov
scas
popf
push
in
xchg
push
jo
add
push
pop
adc
xchg
push
pop
adc
test
das
in
ret
in
dec
cmps
mov
fs
ins
je
pop
xlat
test
dec
sbb
push
sbb
jmp
mov
jmp
rcl
cmovno
in
bnd
mov
pop
cdq
pop
xchg
sbb
lahf
shl
sub
jg
daa
mov
xchg
pxor
sti
outs
lahf
cmp
sbb
std
shr
sub
mov
bound
mov
jne
and
in
xor
lods
mov
and
cdq
pop
and
mov
outs
lahf
mov
outs
sub
fsubr
mov
pop
addr16
js
push
lea
adc
pop
push
and
movs
mov
add
dec
and
shl
ret
fmul
xlat
repnz
data16
ins
mov
jno
push
dec
(bad)
cmova
stos
retf
stos
add
jg
cmp
int
test
push
jmp
mov
gs
jecxz
mov
loope
retf
sbb
mov
ret
add
ror
je
out
imul
push
push
jmp
cli
cli
sbb
sbb
adc
mov
push
dec
push
jbe
adc
xor
shr
dec
push
dec
pop
in
loop
mov
(bad)
pusha
mov
les
imul
xor
std
in
fbstp
adc
dec
jp
xchg
aad
mov
adc
dec
cdq
int
add
cmp
(bad)
pop
push
fbstp
scas
add
hlt
push
pushf
mov
mov
clc
mov
jns
cmp
push
fnstsw
jle
xor
les
mov
lods
hlt
pop
fs
and
rcl
call
es
adc
mov
mov
stos
loope
(bad)
ror
fs
or
in
xchg
sub
adc
jne
jmp
add
outs
sub
hlt
pop
mov
ret
scas
mov
mov
mov
mov
push
xchg
sbb
aad
add
pop
mov
jns
call
dec
movs
cmc
add
add
loope
shl
loop
cli
stc
(bad)
mov
mov
pop
out
mov
pop
cmp
jo
and
(bad)
in
mov
xor
pop
fld
popa
mov
call
retf
in
push
repnz
jno
xor
and
xlat
mov
adc
pop
cmp
cs
dec
ins
add
pop
and
pop
dec
rcr
adc
xchg
sbb
dec
cmp
iret
add
loopne
jns
add
jo
jae
mov
sahf
add
retf
xor
jb
stos
sub
adc
cmp
mov
int3
xchg
fild
mov
in
cs
pop
xor
ins
cmps
sbb
dec
and
in
mov
outs
pop
mov
dec
sub
repz
out
idiv
pop
cmp
repnz
xchg
std
cdq
mov
out
cmp
jg
cmp
jl
cs
xchg
mov
pop
retf
aaa
stos
call
out
(bad)
adc
pusha
test
xor
add
jo
sub
jecxz
jnp
and
cmps
push
xchg
mov
in
mov
enter
js
jl
loop
ss
cs
jne
pop
imul
repnz
fs
or
adc
or
fcom
sub
mov
sub
pop
pop
dec
cdq
pop
imul
push
(bad)
and
xor
fadd
in
fwait
aaa
cmps
push
dec
mov
and
js
or
jle
bnd
js
ficom
imul
mov
or
data16
xchg
jp
fbld
addr16
test
data16
enter
data16
int
xor
or
dec
loope
(bad)
loopne
nop
adc
or
cdq
jmp
fistp
pop
addr16
fild
jns
std
pusha
push
mov
inc
popa
ja
add
xchg
mov
in
pop
jae
mov
rol
stos
jbe
xor
push
ror
loope
pop
sub
push
cmp
shl
push
push
xchg
push
xchg
dec
int3
push
xchg
pop
mov
jns
xchg
dec
inc
iret
adc
adc
sub
add
clc
inc
iret
ins
jno
fcmovbe
jmp
xor
cmp
ds
push
stos
mov
xor
es
stos
push
scas
popa
fadd
fst
mov
ret
data16
mov
inc
xor
std
mov
jo
mov
iret
lahf
pop
or
ret
push
dec
sets
xchg
pop
stos
test
cli
sub
enter
cmc
push
repnz
frstpm(287
fst
xchg
xor
fs
push
add
es
xlat
adc
jp
inc
repz
into
ins
xor
lea
and
fdiv
ss
out
inc
push
add
add
and
ins
push
add
cmp
retf
xchg
push
je
dec
mov
mov
shr
mov
in
adc
push
arpl
lahf
shr
mov
sub
push
adc
arpl
pop
retf
je
out
xchg
scas
mov
jge
loop
mov
inc
sub
jb
mov
loope
daa
scas
sahf
ds
lds
sub
and
sbb
and
adc
push
xchg
int3
pop
mov
jo
addr16
aad
sub
stos
adc
aaa
adc
repz
lahf
and
mov
mov
(bad)
mov
dec
mov
mov
dec
push
mov
outs
adc
cs
clc
loop
sbb
movs
and
call
out
xchg
loope
or
and
push
sbb
dec
xlat
cmp
inc
mov
in
stos
mov
aas
push
arpl
xchg
xchg
push
or
mov
das
loopne
fsub
loop
xchg
cmp
push
(bad)
ds
or
jle
mov
mov
jbe
jns
adc
push
pusha
cmp
xchg
aam
ret
mov
jmp
sub
pop
xor
adc
or
loope
mov
pushf
inc
daa
ss
sub
pusha
loop
ja
pop
ins
loope
aad
cs
loope
push
lahf
or
js
outs
cwde
ins
jae
cmp
and
bound
push
xchg
mov
pop
out
mov
sbb
dec
movs
scas
jbe
dec
cdq
pop
cmc
push
cwde
mov
ss
jmp
jo
inc
(bad)
adc
push
mov
or
mov
in
aaa
gs
xor
aad
xor
mov
cmps
cmp
fidiv
into
fwait
or
inc
popa
sbb
shl
nop
mov
out
pushf
js
frstor
scas
or
jbe
mov
mov
inc
cld
dec
ret
add
lock
in
push
sti
mov
enter
xor
imul
cs
xchg
push
xor
mov
pop
mov
xlat
dec
ins
aas
push
inc
sbb
push
inc
dec
and
xor
(bad)
and
test
or
mov
sub
adc
inc
push
call
sub
loopne
sbb
jbe
jp
es
xchg
add
out
lahf
add
push
ret
into
mov
adc
loopne
cmp
and
int3
pop
clc
sbb
xchg
loop
sub
mov
ret
add
cmp
rcl
xchg
and
scas
outs
cmp
xor
mov
imul
mov
gs
or
loope
jle
push
or
test
jg
mov
lahf
sub
cmp
mov
mov
jp
push
add
js
les
ret
dec
arpl
jo
mov
add
scas
mov
clc
dec
mov
sub
mov
sbb
mov
dec
loopne
jno
mov
jl
inc
and
push
leave
sub
stos
scas
data16
inc
pop
push
stos
pop
sub
cmp
adc
iret
mov
mov
dec
dec
push
xchg
add
popa
and
hlt
test
lea
dec
(bad)
out
mov
lahf
mov
outs
adc
add
jle
or
or
retf
(bad)
lods
mov
inc
out
mov
popa
cli
in
push
dec
stc
cmp
jecxz
jge
sbb
in
push
adc
test
int3
inc
mov
push
jge
cmps
jge
mov
push
pop
iret
(bad)
aam
xchg
ins
rol
jmp
pop
dec
xchg
shl
sahf
fadd
sbb
fbstp
ret
add
push
ins
xchg
jl
fxch
ror
int
mov
rcl
cdq
jnp
push
popa
leave
shl
test
cmp
push
and
cmps
push
sahf
test
and
xchg
jmp
fadd
pop
add
jb
adc
sub
addr16
cmp
mov
dec
call
pop
mov
sbb
fs
loope
ret
scas
push
jle
jnp
fisttp
dec
and
pop
jp
fmul
push
push
mov
xchg
fbstp
je
mov
dec
sub
cmp
or
and
(bad)
or
out
shl
leave
or
jbe
es
aas
clc
fadd
not
mov
stos
mov
aaa
repnz
scas
ja
sbb
(bad)
aas
stc
fist
push
and
dec
arpl
sahf
lods
push
fild
fcomp
jle
dec
mov
retf
stos
dec
jns
retf
mov
mov
idiv
sub
into
cmp
mov
or
pop
cs
add
adc
inc
mov
sbb
sub
loopne
mov
or
inc
pop
nop
or
out
add
lods
(bad)
pop
mov
ror
xchg
adc
std
cmc
ret
js
retf
bound
lods
adc
fdivr
sahf
js
shr
test
cmovg
and
fisttp
mov
movs
or
pop
loope
clc
test
dec
sub
shl
sbb
cld
ins
push
xchg
test
cmc
xchg
dec
xlat
cmp
cmp
xchg
add
and
aaa
inc
dec
and
ret
retf
inc
xchg
and
mov
mov
mov
sbb
movs
test
jmp
sbb
push
or
xchg
std
dec
repnz
cmc
or
push
xchg
xchg
shr
pop
mov
dec
(bad)
xchg
pop
jp
test
arpl
jl
and
mov
jo
sar
jge
cmp
test
mul
addr16
into
test
fs
adc
push
mov
and
mov
out
xor
push
mov
cmp
mov
pop
(bad)
div
or
inc
adc
and
pop
fstp
cmp
jg
cmp
and
sbb
test
sbb
call
(bad)
cld
pop
out
fwait
xor
sbb
sbb
sub
and
test
mov
xor
aad
and
lods
jbe
inc
in
fst
mov
sub
push
cld
ins
lods
idiv
and
test
mov
add
jo
xchg
loop
add
mov
fsub
inc
retf
pop
pop
jmp
ds
cmps
fimul
mov
ret
or
jno
nop
push
xor
lods
ror
ins
pop
repz
mov
sti
jmp
rol
nop
rcl
add
pop
xor
mov
fs
xor
mov
push
scas
inc
sbb
jg
cmp
mov
sub
lea
shl
lods
xchg
jmp
into
jge
push
loope
and
enter
dec
out
jnp
adc
stc
xor
cmc
sbb
xchg
ror
mov
push
push
fld
and
(bad)
xchg
imul
cmp
cmp
cmp
pop
mov
pop
cs
imul
scas
cdq
movs
add
out
jne
fucomp
mov
and
fcom
cmp
cld
and
test
mov
xor
cwde
sbb
mov
mov
jo
jle
jge
fs
push
xor
sub
xor
and
(bad)
mov
ret
and
xor
pop
sar
jbe
into
adc
xor
repnz
ret
scas
xor
xchg
add
push
addr16
daa
in
addr16
outs
cwde
mov
inc
aas
div
add
inc
(bad)
pushf
mov
sub
mov
pop
add
(bad)
push
xchg
mov
xchg
push
mov
aas
mov
mov
aam
inc
xlat
(bad)
cld
shr
pop
fnstcw
icebp
jmp
pop
dec
pop
mov
stos
xchg
call
xchg
out
(bad)
out
sub
in
outs
mov
and
jge
or
dec
inc
xchg
xchg
pushf
jo
fs
mov
clc
sbb
test
inc
pusha
ret
das
cwde
xchg
sub
shl
sbb
in
movs
inc
cmp
mov
jge
or
jp
push
push
lods
es
and
xchg
enter
mov
mov
pop
(bad)
test
and
inc
pop
add
scas
(bad)
(bad)
cld
aad
jecxz
xor
dec
test
int
in
out
dec
jno
mov
cmp
and
repnz
cmp
jno
jmp
ss
inc
retf
call
imul
adc
and
cmp
retf
aad
fcomp
sbb
scas
pop
ds
sbb
ss
(bad)
retf
fist
lods
test
je
or
mov
lock
retf
iret
jns
cli
xor
cli
xchg
inc
cmp
leave
or
mov
mov
push
xor
in
iret
fsub
xchg
mov
mov
out
adc
add
aas
mov
mov
and
xchg
mov
dec
mov
aaa
push
dec
push
add
inc
jae
jo
aas
or
int3
cld
(bad)
jo
cdq
clc
jp
icebp
stos
pushf
idiv
pop
aaa
in
(bad)
shl
es
(bad)
pop
lods
cmp
push
lods
icebp
repz
or
push
jno
inc
mov
dec
loopne
addr16
cmps
jno
dec
addr16
jl
sub
loopne
fnstsw
sar
xchg
popf
dec
shr
mov
push
and
dec
(bad)
(bad)
sub
add
lahf
fs
adc
ins
imul
push
add
add
and
sbb
fild
jecxz
push
data16
cld
inc
xchg
jecxz
mov
pusha
call
je
int3
xor
aad
popa
in
adc
frstor
jno
call
jge
cli
loop
test
shufps
cmp
test
xchg
imul
xor
xor
lea
cmp
scas
cwde
pop
mov
push
pushf
stc
(bad)
adc
scas
(bad)
mov
mov
lods
jb
xlat
fnstsw
and
(bad)
mov
xchg
inc
aad
out
fld
lods
adc
movs
or
jns
das
pop
pop
repnz
inc
jns
push
movs
loop
popa
stos
scas
(bad)
shl
retf
dec
pop
sbb
(bad)
jo
mov
aaa
repnz
popf
sbb
(bad)
mov
xchg
imul
lahf
cmps
ret
cmp
sbb
loop
push
push
sub
jae
fcmovnb
or
dec
cmp
retf
or
jnp
xor
or
mov
push
add
jg
or
dec
out
xchg
mov
mov
mov
dec
inc
retf
stos
dec
out
xchg
pop
dec
imul
dec
add
shl
cmp
dec
(bad)
jbe
jmp
push
jb
sub
loope
sbb
adc
fisubr
cld
dec
inc
call
fisttp
mov
xor
(bad)
xor
cmp
mov
mov
jmp
jae
ret
mov
retf
dec
les
rcl
xor
adc
imul
xchg
push
add
popf
mov
ja
xchg
cmp
lock
xchg
shl
push
jb
xlat
dec
inc
(bad)
popf
das
fucomip
clc
pop
shr
stc
push
mov
pop
inc
call
cmp
(bad)
in
and
mov
iret
cmps
mov
jmp
mov
jno
(bad)
dec
jmp
ja
pusha
lahf
jecxz
xchg
stc
dec
jg
ret
fsub
xchg
pop
push
inc
adc
fmul
out
inc
add
mov
xchg
adc
sub
mov
jo
cmp
pop
xchg
inc
inc
vandps
mov
(bad)
movs
loop
ret
inc
cdq
sbb
cmp
xchg
sahf
push
stos
sbb
mov
cwde
fs
sbb
gs
sbb
inc
out
inc
out
or
and
jecxz
jo
cmp
jge
push
test
lahf
daa
lea
pop
ss
(bad)
jge
cs
cwde
mov
in
pop
mov
(bad)
sahf
call
movs
into
bound
sbb
movs
mov
push
jno
in
sbb
in
mov
xor
retf
(bad)
mov
push
nop
add
ins
(bad)
iret
push
cmp
mov
fs
or
mov
hlt
out
daa
xchg
aaa
retf
xor
mov
in
icebp
and
push
inc
daa
cmp
and
call
jp
dec
and
push
sbb
mov
js
jecxz
or
test
sub
rcr
and
call
jnp
mov
js
inc
inc
cli
and
xlat
ja
jnp
jae
mov
mov
data16
repnz
and
mov
jmp
fcmovu
add
cdq
and
dec
mov
pop
mov
pop
test
fcomp
retf
bound
jo
mov
sbb
shl
add
inc
jg
cmp
mov
lods
imul
pusha
or
jecxz
dec
mov
sbb
fs
add
js
popa
add
mov
in
jmp
cs
call
and
mov
fisub
in
mov
push
pop
mov
xor
jo
pop
adc
push
(bad)
mov
jo
retf
mov
lea
mov
jb
mov
pop
jo
push
sbb
push
sbb
bound
scas
popf
mov
push
ror
stc
or
adc
loop
push
sub
and
pop
retf
dec
out
cmp
stc
inc
lods
mov
sub
xor
sbb
xchg
loope
adc
mov
retf
mov
push
fldcw
(bad)
inc
mov
mov
sbb
mov
loopne
mov
or
inc
jne
xor
mov
movs
loopne
push
push
jnp
xchg
mov
mov
and
mov
xchg
xchg
mov
mov
(bad)
dec
fwait
cmp
pop
inc
aam
sti
pop
inc
xor
xor
add
ins
out
add
jmp
out
jne
cmp
xchg
xchg
and
cmp
bound
shl
inc
fldenv
dec
ror
sbb
push
adc
or
push
pop
loopne
data16
jmp
mov
aaa
ffree
rol
ficomp
mov
push
stos
or
in
mov
ret
xchg
cli
mov
adc
jl
addr16
mov
inc
mov
aaa
repz
loopne
add
cmp
inc
ficomp
stc
or
sbb
pusha
jecxz
fisub
aad
push
inc
lahf
jp
or
(bad)
xchg
out
out
or
leave
adc
pop
inc
pop
js
sahf
mov
cmps
movs
adc
push
adc
movs
push
fcom
xor
add
dec
and
jne
clc
stos
aad
call
cs
icebp
out
ror
inc
pop
add
add
mov
dec
mov
hlt
dec
push
pushf
mov
cs
jmp
lods
dec
adc
adc
dec
push
call
push
jb
lods
call
fidivr
pop
inc
ins
cmps
loope
shr
xor
stc
loopne
leave
xchg
dec
inc
cmp
stc
fucom
sub
test
mov
nop
stos
pop
ins
xchg
daa
call
push
dec
test
adc
mov
jl
call
push
rol
clc
add
scas
int
push
pmullw
mov
jns
pop
pop
outs
jnp
inc
ret
loope
or
sbb
cwde
cmc
stos
out
fadd
mov
fimul
or
mov
xchg
pusha
leave
(bad)
xchg
inc
(bad)
loopne
jle
ror
and
popf
mov
xlat
rcr
and
add
adc
sti
outs
pop
stos
adc
or
jae
(bad)
push
mov
xor
mov
pop
push
and
hlt
xchg
jecxz
and
inc
lods
mov
int
pop
(bad)
ror
xchg
mov
gs
rol
inc
jmp
stos
in
sbb
mov
rcr
in
pushf
(bad)
inc
into
and
cdq
jbe
ror
fcmove
cmp
imul
jbe
into
shl
or
adc
call
mov
push
mov
cmps
leave
xor
cmp
mov
mov
jle
jp
(bad)
not
ins
adc
mov
push
scas
pusha
mov
push
lahf
and
pop
jbe
sub
sub
mov
sub
cwde
jo
imul
mov
mov
and
mov
sti
xchg
std
push
int3
les
test
outs
movs
sub
neg
call
retf
sbb
mov
sub
mov
movs
cmp
fmul
stos
or
(bad)
add
add
xchg
mov
nop
cwde
push
and
pop
or
lea
mov
jecxz
mov
test
and
pop
inc
fisub
dec
mov
(bad)
fisub
inc
js
stc
jno
inc
jmp
and
push
imul
push
retf
mov
sub
retf
jmp
mov
inc
int3
movs
es
jmp
retf
in
xor
xchg
addr16
or
adc
nop
clc
cmp
xchg
mov
jns
cmps
push
and
jne
fild
dec
adc
mov
mov
pop
ffreep
adc
xchg
xchg
or
cmps
adc
adc
adc
or
mov
cmp
mov
push
mov
add
push
jmp
icebp
das
fwait
add
hlt
icebp
pop
pop
mov
std
or
pop
popa
div
jge
adc
jmp
inc
xchg
mov
mov
xchg
test
jns
and
rcl
adc
jae
pop
jbe
jge
jmp
fcom
fst
add
fdivr
out
cs
push
adc
(bad)
out
adc
arpl
xchg
repnz
cmp
and
or
into
in
mov
and
lods
scas
std
jb
dec
or
sub
pop
dec
xlat
aad
jnp
aaa
mov
ins
mov
sbb
shl
mov
imul
std
xor
(bad)
pushf
cdq
test
adc
or
or
jb
jg
inc
mov
or
push
push
test
in
mov
cdq
jl
hlt
mov
xor
mov
and
shl
stos
mov
sahf
mov
sbb
jae
dec
pop
stos
ret
xchg
pop
lods
add
loope
sub
jb
lods
sbb
sbb
inc
(bad)
cmps
test
movs
ficom
movs
in
das
sub
hlt
sub
add
aas
(bad)
not
cmp
sub
push
adc
sbb
lea
out
ins
push
js
mov
movs
cld
inc
jnp
inc
mov
lock
aaa
add
add
popf
mov
hlt
mov
pop
cdq
or
mov
ins
and
xchg
scas
enter
fisubr
sub
enter
inc
out
clc
dec
shl
shr
das
mov
mov
jno
xor
repz
inc
arpl
and
fs
mov
mov
cmp
xchg
or
leave
and
xchg
mov
pop
mov
test
imul
les
or
push
in
fs
ss
and
(bad)
adc
mov
jle
mov
enter
js
shl
pop
fcmove
pusha
adc
clc
neg
adc
(bad)
not
loop
or
movs
xor
call
inc
out
rcl
sahf
or
scas
retf
test
sahf
pop
sbb
sbb
adc
retf
mov
int
sahf
(bad)
adc
sahf
aas
or
xchg
out
adc
jl
mov
ins
adc
stc
jmp
sub
(bad)
sub
add
mov
arpl
push
xchg
push
mov
jmp
jo
dec
ja
dec
outs
xchg
js
clc
push
lods
mov
sbb
ror
push
sbb
push
xrelease
sbb
repnz
xlat
ja
aam
jne
and
or
adc
jno
ss
lahf
lods
pop
pop
lea
and
sub
loop
xchg
icebp
out
je
xor
daa
int
imul
mov
dec
xchg
mov
test
dec
outs
mov
mov
pop
pop
sbb
push
ret
xor
call
inc
adc
push
jnp
and
dec
ret
(bad)
mov
sbb
fldenv
test
inc
test
sub
mov
and
cmp
or
fdivrp
mov
dec
frstor
mov
fild
sbb
into
stos
and
mov
and
dec
aad
sub
cs
loope
pop
(bad)
jns
inc
or
lea
push
pop
pop
enter
mov
sbb
pop
je
aas
mov
mov
js
xchg
mov
sti
out
jb
xor
dec
(bad)
cmps
mov
loopne
ja
aaa
mov
fcom
in
inc
or
imul
add
sub
test
xchg
ret
xchg
imul
(bad)
or
xor
mov
xor
in
dec
jne
shr
cwde
mov
rcr
sub
cmp
jge
mov
inc
aam
mov
cld
push
sbb
stos
ds
or
mov
sub
int
movs
sar
les
stos
js
jecxz
dec
sar
jno
jo
or
icebp
mov
popa
leave
pop
lods
imul
jp
sub
sub
mov
int
and
mov
sbb
mov
scas
sahf
retf
push
(bad)
push
xchg
retf
push
mov
or
cmp
or
adc
addr16
inc
shr
sub
nop
aam
lock
and
sbb
icebp
sub
stos
cmp
enter
mov
or
cmp
ret
mov
js
jp
je
sub
fst
cs
call
je
aam
cdq
mov
shl
sar
jno
jne
mov
adc
push
movs
cmp
(bad)
js
hlt
sub
push
into
add
cmp
mov
cdq
in
inc
jp
mov
in
stos
pop
mov
test
das
scas
aad
mov
lock
dec
mov
pop
and
push
sub
sub
into
inc
jg
xchg
inc
out
pop
fstp
sub
aam
stos
or
rol
jne
xchg
cdq
add
js
stos
inc
jbe
cmp
das
xor
or
mov
cld
(bad)
pop
or
and
inc
loope
sbb
ins
push
add
adc
and
hlt
mov
cmc
jo
add
xor
jp
fbld
inc
push
jno
adc
out
call
aaa
test
ins
or
push
dec
inc
imul
xor
out
shl
ret
int
mov
sub
cmp
cmps
fst
sbb
es
pushf
push
jns
pop
or
les
test
inc
inc
pop
arpl
pushf
dec
sub
sub
adc
cmps
inc
rcl
imul
shl
jmp
adc
xor
mov
rol
xchg
jle
lods
cmc
add
mov
loop
dec
sub
xchg
rcl
gs
imul
mov
movs
movs
leave
ds
pop
js
sbb
call
repnz
inc
rol
loope
mov
cmp
inc
adc
jp
(bad)
inc
(bad)
adc
xor
daa
ss
mov
pop
mov
ins
inc
adc
clc
aas
xchg
xchg
mov
(bad)
mov
add
aas
dec
jo
retf
aas
sub
test
aam
pusha
lods
sub
movs
cmp
(bad)
pop
sti
test
mov
dec
test
popf
dec
rcl
ss
sbb
es
cmp
sbb
cmc
cmps
pop
sahf
mov
jbe
push
je
dec
shl
push
mov
xchg
pop
(bad)
int3
or
movd
push
mov
cmp
lock
push
dec
jns
sub
or
stos
fadd
retf
les
inc
xlat
xchg
bound
(bad)
lea
or
inc
push
cmp
and
inc
xchg
sbb
xor
dec
jbe
cs
adc
fcmove
jne
call
hlt
dec
jmp
js
pusha
icebp
data16
add
iret
sbb
lds
push
jae
push
fldcw
hlt
(bad)
shl
test
jmp
popa
xchg
mov
xor
sbb
je
add
clc
neg
jmp
cmc
sbb
mov
and
cld
xor
imul
(bad)
xor
daa
std
jb
movs
dec
pmullw
fistp
add
pop
out
sbb
sub
mov
aad
add
sbb
sbb
jmp
retf
daa
sbb
pop
int3
pop
jle
mov
dec
ret
sbb
add
ja
cmp
icebp
xchg
dec
sub
mov
cs
push
jp
sbb
aam
jne
xchg
inc
cmp
lahf
push
dec
push
xor
rol
imul
movs
cmc
sbb
sub
idiv
or
xchg
stc
jecxz
cdq
dec
jmp
lea
dec
cmp
xchg
mov
fcomp
xchg
sub
int
pop
xlat
mov
retf
mov
pop
inc
push
xchg
cwde
sub
mov
mov
pop
mov
xor
inc
jl
je
dec
xor
xchg
adc
mov
bnd
push
mov
fs
test
(bad)
push
lock
jmp
sub
xchg
imul
mov
pop
add
out
mov
and
es
fldenv
les
test
and
retf
clc
loopne
ins
cdq
pop
psrad
imul
xor
ds
mov
cmc
lock
clc
out
(bad)
in
addr16
in
inc
jle
mov
cmp
xchg
mov
ins
add
ror
ss
cmp
mov
mov
test
or
sti
in
mov
cwde
pop
fldenv
hlt
sbb
inc
adc
pushf
jae
mov
dec
in
lds
add
jmp
mov
test
cwde
outs
sub
jmp
in
jge
dec
out
fnstcw
es
shl
call
inc
repnz
rcr
sbb
jbe
mov
add
xchg
fimul
aam
into
int3
cmp
pop
lock
sti
push
push
repnz
xchg
rcl
ds
or
or
lahf
sub
out
pop
push
and
pop
rcr
bound
cmp
inc
and
jb
popa
movs
pop
mov
mov
test
jmp
jecxz
jo
xchg
test
adc
(bad)
xlat
xchg
xor
or
rol
fsub
jge
outs
inc
in
mov
xchg
add
xchg
mov
outs
mov
adc
sar
pusha
rcr
fistp
add
(bad)
mov
iret
jno
loop
fld
mov
dec
rcl
mov
xor
ins
pop
pop
adc
push
clc
lods
xchg
inc
nop
cmc
ins
sub
xor
mov
push
retw
adc
mov
adc
mov
adc
icebp
pop
stos
retf
out
out
jbe
loope
lea
jmp
pushf
xchg
xchg
xor
xor
mov
sar
dec
fsubrp
xlat
out
jge
in
sub
nop
mov
gs
mov
das
push
jp
stc
fdivr
pop
mov
enter
cmp
mov
pushf
push
cmp
push
repnz
inc
test
stc
and
dec
fmul
cdq
fimul
pop
inc
lods
push
test
ins
sbb
mov
in
leave
loope
add
inc
gs
sti
aaa
fcomp
xchg
sub
mov
imul
outs
jge
sub
jbe
adc
div
stos
xor
mov
mov
mov
aas
xchg
add
jmp
repz
jno
outs
add
(bad)
int3
mov
jmp
or
adc
push
pushf
sbb
popa
icebp
add
mov
adc
and
jge
(bad)
cmp
aas
pop
loop
fcomp
mov
rcl
xchg
or
ds
aam
pop
mov
inc
dec
xchg
lods
ins
cld
or
dec
dec
inc
leave
clc
aam
dec
mov
push
jp
in
ja
or
es
fnstcw
ja
cmps
cmps
scas
daa
lods
cmp
call
test
or
jmp
mov
aam
or
pop
jns
adc
bound
imul
pop
(bad)
sahf
dec
push
or
xor
mov
and
pop
dec
and
xor
int3
dec
pop
ins
dec
xor
mov
xchg
cmp
dec
add
test
xor
popf
jp
add
leave
movs
cmp
outs
mov
ret
sub
xchg
and
stos
push
je
mov
mov
sub
xor
sub
push
test
lahf
mov
aaa
pop
ins
adc
add
jecxz
or
ds
pusha
push
dec
daa
jecxz
push
cmp
pop
clc
popa
adc
mov
lds
xchg
cmp
and
mov
scas
dec
mov
std
add
fldcw
lods
loop
in
(bad)
fst
pop
ds
shl
push
in
mov
test
mov
inc
cmp
lock
mov
xchg
cmps
xor
pop
out
push
aaa
ret
sbb
(bad)
inc
sahf
pop
xchg
(bad)
outs
sub
ins
icebp
fbstp
mov
jmp
out
movs
loop
cwde
out
repnz
in
mov
fistp
xor
loope
mov
call
jno
or
vmovd
push
sbb
adc
imul
fucomip
mov
or
inc
scas
movs
lock
inc
pusha
jmp
test
addr16
inc
out
mov
loop
pop
(bad)
mov
arpl
xchg
xchg
sbb
icebp
jp
cmp
push
mov
imul
mov
sub
rcr
mov
push
and
popf
aas
or
outs
mov
add
test
push
int
mov
or
test
icebp
mov
ret
inc
dec
imul
push
bound
sbb
out
shl
mov
or
cs
jecxz
sahf
mov
mov
popf
sub
stos
push
out
mov
or
pop
ins
mov
mov
test
jbe
adc
mov
xor
pop
jae
push
cdq
int3
or
je
pop
adc
mov
push
cmp
jmp
xchg
jmp
push
call
lds
je
hlt
pop
cmp
fabs
sbb
dec
lds
mov
jns
sti
add
ins
cld
push
xchg
lds
neg
cmp
std
xor
aad
xor
mov
aad
shl
aad
outs
int3
fs
jecxz
or
fldcw
stos
rol
popf
push
and
push
sbb
jo
leave
push
add
jbe
ins
ins
ins
mov
push
mov
jo
push
push
pop
pop
lea
xor
pop
and
mov
data16
(bad)
frstor
xor
test
loope
sbb
sub
cmc
pop
inc
pusha
es
(bad)
or
retf
mov
mov
test
imul
div
fild
pop
test
xchg
mov
std
and
in
shl
mov
inc
cwde
sub
mov
in
sub
adc
adc
jmp
sbb
cdq
sar
fsubr
pop
sbb
arpl
rcl
mov
sbb
sub
nop
in
ret
jnp
cmp
push
mov
(bad)
xor
dec
mov
jno
repz
scas
ror
inc
xchg
push
lahf
lods
std
frstor
retf
ret
xlat
leave
or
and
inc
fcomp
adc
enter
sar
sub
inc
pop
and
lods
loopne
pop
cmp
data16
mov
mov
or
mov
mov
retf
call
mov
sbb
jb
daa
dec
jno
aaa
imul
mov
pop
and
test
xchg
ss
xchg
gs
mov
sub
and
push
xor
mov
imul
cmp
in
das
fdecstp
dec
int3
lods
inc
loop
lock
ins
test
call
jmp
or
xchg
cdq
cld
dec
add
cmp
cmc
stos
fiadd
push
jl
push
lods
jmp
ss
jmp
jmp
xchg
shr
mov
pop
out
sub
xchg
or
retf
adc
xor
xchg
jae
cli
repz
push
inc
test
shl
pop
call
jnp
(bad)
dec
ret
mov
int3
(bad)
cmps
push
(bad)
imul
retf
clts
cli
cwde
xor
arpl
jo
inc
ja
ds
pop
fadd
mov
pusha
xlat
mov
sub
xchg
or
xchg
inc
add
push
stos
aas
(bad)
sahf
addr16
ja
push
(bad)
cmps
cpuid
mov
jae
imul
and
adc
adc
scas
daa
adc
and
jle
sbb
gs
cdq
test
xchg
cmc
loop
fcmovne
repnz
clc
mov
into
lock
lods
(bad)
cmps
jl
xor
popa
out
push
sahf
fild
imul
movs
cmp
sbb
out
mov
repz
push
cmps
mov
call
rcl
in
jmp
or
mov
lea
call
xor
mov
pop
lea
mov
or
cmp
fisub
lods
cli
adc
and
mov
popa
xchg
pop
pop
sbb
sbb
and
xlat
and
dec
ret
sti
and
test
cdq
in
fimul
pop
mov
xchg
fild
xchg
and
out
or
sbb
int
add
(bad)
arpl
adc
cmps
xor
arpl
call
adc
fldcw
fs
(bad)
aaa
pop
in
shl
push
aam
pop
mov
inc
inc
mov
add
sbb
pop
jmp
fs
repz
push
enter
xor
cmp
jg
repnz
dec
push
mov
adc
push
mov
push
sbb
adc
pop
sub
test
data16
jb
cld
call
pop
imul
ins
mov
xchg
std
dec
mov
push
sub
nop
and
cmp
aaa
pop
(bad)
jne
outs
imul
lock
rol
adc
test
scas
inc
clc
out
cmp
mov
sub
sti
dec
or
mov
aas
cmps
sahf
xchg
pop
nop
dec
push
fstp
mov
dec
xchg
jno
pop
ret
adc
xchg
xor
fs
add
fwait
ss
xor
mov
mov
adc
mov
xchg
or
out
shr
mov
pop
jge
call
pop
sbb
mov
sub
out
int
mov
pop
popa
retf
aas
in
or
dec
mov
xchg
sbb
xchg
and
mov
mov
and
pop
mov
xchg
enter
mov
fisubr
fist
dec
push
fist
and
push
cmp
dec
xchg
adc
mov
in
test
sbb
sub
in
adc
imul
repnz
fisttp
hlt
add
std
and
in
les
call
push
rol
movs
push
loop
jmp
sub
dec
icebp
mov
and
jle
or
(bad)
jns
cld
leave
test
push
sti
les
cmp
sub
dec
lods
cmp
sub
xchg
ja
and
pop
sub
scas
cmp
cmp
stc
sub
and
xchg
outs
icebp
imul
popa
jmp
push
mov
outs
retf
in
lock
stc
movs
pop
mov
(bad)
pop
adc
inc
sbb
jbe
sahf
in
repz
sub
cmp
mov
adc
jae
jmp
cmp
ror
pop
pop
add
loop
in
ret
add
and
push
sub
cmp
xor
ror
stos
or
out
xor
push
xor
fs
out
fcmovb
push
ins
stos
or
push
xchg
xchg
sbb
and
adc
pop
movs
cmp
mov
mov
inc
xchg
test
in
jo
aaa
and
leave
cli
adc
inc
fiadd
adc
mov
pop
jmp
mov
add
sbb
fimul
ins
mov
fisttp
or
cmps
mov
jno
arpl
jnp
cmp
iret
fisubr
lea
aaa
nop
aaa
sbb
lods
add
retf
nop
clts
(bad)
addr16
add
mov
pop
shr
in
enter
mov
test
cli
jmp
mov
test
xor
mov
push
mov
sar
and
inc
shl
rcl
imul
jbe
jle
ds
fst
sub
jae
ja
test
mov
push
int3
gs
outs
in
lea
mov
call
mov
(bad)
fcomp
sbb
xor
mov
iret
aas
adc
bound
(bad)
cs
and
push
sbb
inc
int
xchg
add
imul
stc
mov
and
in
pop
or
mov
outs
or
jns
add
jae
pop
rcl
aad
jbe
adc
mov
sub
xchg
mov
arpl
pop
int3
pushf
sub
pop
mov
in
mov
xlat
adc
punpckhwd
pop
adc
outs
rep
outs
out
pop
rol
mov
out
out
mov
test
add
push
add
mov
add
push
fistp
arpl
mov
fsubr
cmp
push
sbb
aam
jbe
pop
stos
js
xor
js
lods
aad
and
(bad)
ins
iret
push
jmp
inc
mov
test
fwait
arpl
int3
xchg
lahf
add
and
push
cmp
repnz
mov
mov
add
and
pop
(bad)
sti
test
and
js
push
adc
sub
xchg
sub
cmp
fdiv
pop
call
cmp
mov
inc
pop
jo
fstp
xchg
mov
adc
sbb
call
out
xchg
stos
fmulp
mov
pop
jo
push
les
movs
aaa
int
push
shl
sbb
sbb
repz
jbe
sub
push
pushf
pop
js
shr
fsub
cmp
jno
jle
ds
or
pusha
in
push
push
div
not
shl
shr
std
mov
aas
push
mov
dec
(bad)
xchg
and
pop
bound
xchg
bound
jmp
movs
mov
test
dec
sbb
inc
or
jns
shl
fsub
adc
or
push
addr16
aam
popa
pop
fiadd
mov
adc
mov
adc
icebp
retf
lea
push
mov
or
test
(bad)
out
fsubr
out
aaa
loopne
cld
sbb
lock
pop
iret
cld
mov
xor
and
pop
or
movs
loopne
test
add
sbb
(bad)
repnz
push
sub
out
mov
dec
in
aaa
dec
iret
mov
xor
or
sub
mov
mov
cmps
cdq
pop
mov
jbe
adc
sub
mov
adc
fbld
inc
xlat
push
scas
fwait
int3
(bad)
xchg
mov
jno
mov
xchg
jge
or
jno
inc
out
mov
and
addr16
cmps
gs
mov
loope
cdq
leave
pop
outs
add
sbb
add
adc
inc
(bad)
fnsave
fwait
and
stos
mov
jns
mov
pop
movs
ficomp
pop
pusha
xchg
fs
ret
and
mov
inc
in
bound
cmp
xor
mov
cdq
cmp
mov
shl
ret
lods
ficom
mov
adc
mov
in
scas
mov
out
fwait
sub
jmp
retf
sub
or
mov
inc
pop
cmp
xchg
aaa
in
fisubr
mov
sub
leave
call
mov
add
bound
inc
xchg
xor
add
xor
bound
movs
xor
sub
shr
jmp
mov
and
xchg
cmovo
mov
jne
ss
inc
or
int
je
ss
icebp
sbb
push
cli
mov
or
dec
pusha
add
jecxz
push
inc
outs
(bad)
movs
adc
dec
mov
scas
mov
aaa
out
jmp
mov
aad
xchg
mov
adc
pop
scas
push
(bad)
outs
dec
mov
in
and
jle
ds
in
pop
fdivrp
out
ror
jecxz
mov
inc
int
cmp
xchg
fcmovnb
push
mov
xor
cmp
xchg
lea
sar
lds
add
xor
mov
sbb
jge
sahf
scas
fsub
or
sub
repz
cmp
test
inc
push
jge
cli
stos
add
(bad)
cwde
fsubr
out
int
(bad)
cs
punpckldq
dec
mov
or
dec
dec
es
ds
rcr
out
pop
cld
aam
(bad)
shl
push
add
movs
or
and
nop
jg
iret
inc
cdq
movs
pusha
imul
stos
mov
stos
jmp
push
pop
aas
push
scas
lahf
cmps
loope
(bad)
mov
and
hlt
mov
addr16
jo
stos
faddp
sbb
jl
or
mov
das
mov
rcl
cli
inc
stos
js
push
push
cli
arpl
xchg
fld
cmp
inc
(bad)
mov
mov
imul
cmp
fisubr
fxtract
sbb
or
add
cld
rcr
push
xor
stos
ficom
aam
js
(bad)
pop
adc
sub
popf
daa
neg
into
clc
js
mov
dec
mov
sti
mov
cmps
adc
gs
ror
ret
lods
cmp
mov
ins
loop
out
sbb
sbb
popa
inc
aad
mov
lea
push
push
jbe
sub
mov
dec
mov
pop
jecxz
popa
xchg
xor
mul
mov
xchg
jbe
outs
jns
arpl
cdq
test
adc
push
and
jmp
hlt
push
mov
inc
fwait
adc
into
cli
push
or
jl
mov
mov
push
and
xchg
repz
mov
mov
imul
xchg
movs
inc
dec
in
jns
mov
fsubr
sbb
bound
jmp
dec
jge
int
add
inc
das
mov
(bad)
sub
mov
lea
enter
hlt
loopne
cmp
stc
into
shl
sbb
daa
add
xchg
pop
fnstenv
mov
add
push
pop
mov
dec
fadd
sbb
pop
frstor
fstp
mov
push
mov
out
mov
push
jmp
push
arpl
ins
or
fs
xchg
call
packssdw
cli
test
mov
or
push
or
xchg
out
lock
jp
xchg
push
test
sub
sbb
outs
nop
(bad)
outs
dec
cld
cld
shr
out
push
ret
mov
adc
mov
pop
pop
mov
in
lods
enter
jecxz
add
out
inc
mov
add
cs
repnz
cmps
into
cwde
adc
jb
out
jmp
pop
push
or
test
cmp
fwait
stos
(bad)
aad
scas
std
cmp
je
dec
outs
push
(bad)
retf
cmp
aad
cmps
fidivr
add
inc
sub
movs
or
movs
ret
sbb
jge
mov
aas
cmc
jne
stos
sub
sub
test
mov
jne
jns
scas
jns
mov
xchg
scas
jg
mov
repnz
mov
gs
in
cmp
inc
jno
mov
inc
sbb
je
mov
mov
add
cld
xchg
int3
pop
push
shl
mov
mov
mov
out
test
xchg
ja
div
pop
neg
xchg
ja
mov
add
mov
lea
xchg
pop
pop
shl
ret
mov
scas
pmaxub
imul
mov
and
sub
gs
xchg
inc
jno
lods
lds
data16
add
fdiv
inc
dec
ret
cs
sahf
test
jl
fisttp
aam
(bad)
fcom
popf
popf
scas
cmp
add
inc
sbb
mov
sahf
aas
mov
sar
pop
and
jle
es
pop
jmp
cwde
(bad)
mov
xchg
outs
sbb
fiadd
shl
pcmpgtb
(bad)
push
inc
dec
jno
xor
data16
(bad)
or
ror
or
fcomp
push
xor
fs
retf
int3
ror
add
jno
jg
ins
out
adc
aaa
fmulp
xlat
adc
pop
pop
(bad)
add
dec
(bad)
into
cmps
ss
fwait
test
mov
iret
inc
jns
iret
stc
push
aas
ins
inc
rol
or
loop
push
push
mov
aad
rol
mov
cmc
outs
fwait
out
push
mov
pop
inc
enter
hlt
jno
(bad)
jmp
loop
sub
std
sub
jb
push
dec
fiadd
push
mov
push
retf
fsub
pop
add
(bad)
loope
ret
add
jg
into
test
call
inc
js
out
and
test
mov
test
out
cmp
shr
bound
mov
(bad)
or
enter
hlt
inc
scas
gs
mov
test
test
xor
mov
fisttp
aad
dec
aad
dec
fcom
les
cmc
in
fidiv
leave
test
icebp
inc
stos
and
sti
imul
or
jae
add
sar
mov
test
lahf
sub
jno
leave
push
js
not
dec
cmp
rcr
out
mov
loopne
sbb
jne
or
pop
and
lods
push
jmp
cmps
jecxz
mov
fild
cmp
fst
xchg
and
push
ds
std
pop
pushf
cmp
cmps
fld
push
call
stc
and
or
retf
xchg
mov
mov
imul
cwde
aam
shr
xchg
fnstsw
sbb
pop
mov
sub
lods
or
rol
push
pushf
popa
sbb
push
mov
sub
iret
cmp
in
and
not
rol
push
into
pop
addr16
mov
xchg
sti
addr16
fist
jb
mov
xor
jnp
jmp
jo
pusha
jno
outs
ss
jmp
dec
add
cmps
mov
(bad)
rol
in
xchg
rcr
inc
(bad)
lods
sbb
mov
push
inc
cli
loope
nop
mov
or
icebp
ss
jmp
out
ret
fwait
or
je
and
cld
stc
sbb
xchg
mov
ret
mov
les
push
adc
add
sbb
xor
lahf
dec
dec
(bad)
mov
xchg
inc
rcr
cld
mov
and
jne
and
lds
inc
and
ss
mov
xchg
jo
jp
xchg
and
add
mov
dec
pop
jo
aas
inc
in
les
shl
cwde
test
pop
sar
leave
push
cmps
out
cmp
in
or
mov
(bad)
ja
gs
or
aaa
call
xor
pop
xor
outs
pop
in
jg
retf
loop
jg
jnp
ss
iret
pusha
cmps
push
sub
(bad)
les
(bad)
fild
jb
or
in
cmc
(bad)
pop
test
cmps
movs
cmp
ds
xchg
stos
sub
jg
aaa
sahf
scas
sbb
out
sbb
push
call
jno
jmp
int
das
lods
cmc
and
outs
inc
ret
jmp
into
adc
cmc
lea
or
dec
repz
mov
out
add
jne
pop
mov
dec
sub
dec
mov
stc
jno
xchg
dec
retf
lea
in
iret
movs
es
(bad)
psubb
and
xchg
and
fmul
rcr
daa
(bad)
fidiv
fistp
and
mov
cmp
fisttp
cmp
lea
rcr
hlt
fsub
push
popa
dec
xor
mov
push
iret
mov
xor
aam
sbb
fild
sub
jo
or
das
je
push
xor
lea
int
sub
xor
jge
imul
nop
fst
shl
add
nop
fst
jp
ficom
sbb
jl
add
jne
mov
repnz
mov
and
xor
xchg
test
or
movs
cs
fidiv
(bad)
sbb
into
jle
mov
rcr
mov
pop
into
loope
call
lock
icebp
adc
push
lea
loope
mov
mov
das
mov
inc
add
sbb
mov
sbb
fs
sbb
push
or
xchg
(bad)
in
nop
xchg
mov
sbb
pop
mov
push
inc
inc
js
cmp
sbb
or
ins
fidivr
adc
outs
xor
lock
and
pop
rcl
sbb
push
mov
inc
adc
and
mov
xchg
xchg
je
bound
push
mov
jae
add
fist
fdivr
ins
arpl
sbb
fucomi
ret
loop
mov
shl
xchg
mul
lds
mov
addr16
fst
fndisi(8087
inc
adc
repnz
repz
xor
push
mov
inc
inc
into
daa
in
leave
add
retf
cmp
arpl
pop
inc
or
xchg
les
mov
push
jne
pop
out
mov
test
ins
ds
das
dec
es
js
inc
sar
add
sar
mov
jp
bsf
dec
sbb
in
(bad)
dec
lock
(bad)
and
outs
xlat
std
jae
push
lea
mov
not
lds
pop
test
inc
(bad)
push
dec
into
cmc
sub
imul
enter
jge
loop
in
mov
movs
push
add
pop
repnz
inc
hlt
ds
(bad)
out
and
je
sub
mov
arpl
or
sbb
mov
aad
pop
cmps
addr16
fcomp
data16
inc
and
mov
fadd
call
ins
retf
mov
xor
sub
jp
sahf
sahf
xchg
fisub
arpl
movs
mov
fcomp
xor
mov
in
test
ja
inc
or
das
loope
daa
mov
je
popf
and
add
cld
call
or
movs
scas
mov
pop
mov
or
in
test
stos
xor
in
fwait
iret
or
mov
js
das
add
in
or
(bad)
xchg
neg
call
mov
dec
hlt
das
icebp
mov
dec
icebp
pop
int3
hlt
(bad)
or
call
push
mov
pop
dec
data16
sub
nop
adc
rcr
ja
test
out
add
cmp
add
in
(bad)
sar
rcl
loope
icebp
cmps
out
jmp
scas
pop
je
out
ret
adc
imul
scas
push
mov
fnstenv
adc
test
movs
scas
jmp
or
push
mov
ret
sub
push
(bad)
mov
test
jmp
push
and
pop
repnz
out
dec
cmp
cdq
push
jmp
jmp
test
and
clc
fst
pop
push
or
mov
jmp
sahf
mov
or
lea
movs
retf
loop
cmp
nop
mov
or
cmp
mov
add
jo
ins
pop
cmps
add
and
stos
rol
out
pusha
dec
out
(bad)
fldcw
fldcw
mov
packsswb
fadd
jnp
das
shl
jecxz
adc
ficomp
dec
adc
aam
mov
out
int3
push
pop
inc
mov
stos
in
mov
shl
lahf
xchg
lds
adc
push
retw
cwde
jecxz
popa
push
push
cmp
mov
leave
pop
std
mov
mov
in
shl
lahf
data16
add
fmul
mov
mov
sub
xchg
stos
lds
popa
sub
inc
push
push
inc
pop
jns
and
mov
stos
es
add
add
fldcw
inc
pushf
mov
mov
daa
mov
xor
test
cmp
mov
call
push
push
imul
xlat
mov
std
out
inc
mov
or
dec
pop
inc
out
inc
(bad)
cmp
std
sub
mov
stos
mov
cdq
movs
das
xchg
pusha
arpl
test
mov
sbb
dec
enter
sub
sub
xor
ins
pop
pop
ins
jno
lock
mov
sbb
cmp
gs
in
cmp
jnp
lds
fisub
adc
cmc
repnz
cmp
jo
dec
aad
jmp
cmpxchg
aam
cmps
sbb
mov
mov
inc
test
movs
iret
repnz
adc
fwait
xor
cli
sub
loopne
jmp
stos
fmul
(bad)
(bad)
enter
repz
out
cli
ficomp
ss
xor
lock
add
jmp
int3
jo
xchg
push
inc
mov
hlt
dec
aaa
push
dec
xchg
mov
sti
cmp
cmp
aad
test
jmp
and
cmp
jnp
cmps
adc
pop
addr16
sub
jle
mov
lods
xchg
sub
stc
call
inc
fnstsw
mov
xchg
(bad)
popf
xor
and
pushf
lods
cmp
inc
mov
sbb
and
dec
add
cmc
stos
and
loopne
jnp
xchg
ror
or
pop
test
fsub
push
cmp
rcl
pop
arpl
das
mov
lock
mov
lods
mov
cdq
stos
pop
jecxz
or
aaa
pop
and
aas
repnz
ja
and
sbb
mov
mov
enter
cmp
mov
pop
jno
cld
idiv
add
or
(bad)
neg
loop
xchg
cmp
popf
test
arpl
jno
popf
jecxz
movs
data16
sbb
xchg
lock
std
int
and
mul
adc
mov
and
add
jl
adc
adc
cmp
lds
lock
sub
test
mov
adc
dec
call
jge
mov
(bad)
mov
mov
inc
jmp
int
iret
xchg
push
clc
mov
ror
lods
sub
pushf
and
dec
rcr
stc
fwait
lahf
pop
(bad)
adc
sahf
inc
iret
shl
enter
or
bound
adc
clc
out
or
xchg
or
mov
js
pop
mov
mov
test
inc
jmp
mov
(bad)
stos
jbe
punpckhbw
and
xchg
and
pusha
mov
fucomi
test
scas
popf
mov
ja
mov
arpl
scas
pop
jl
pop
repz
mov
and
cmp
adc
cs
push
arpl
pop
mov
xor
jae
sbb
cdq
add
xor
loopne
jge
dec
mov
pop
(bad)
jl
cmp
pop
rol
adc
imul
sub
adc
retf
loop
sbb
pop
(bad)
push
jo
pop
mov
pmuludq
mov
icebp
dec
aas
pop
push
sub
shl
sub
in
jge
adc
sahf
ret
fadd
fmul
fisub
loop
movs
in
ret
cmps
fimul
dec
repnz
lock
sbb
jl
sbb
lods
shl
fwait
vshufps
inc
adc
in
(bad)
loopne
loope
popf
out
in
mov
ror
push
mov
xor
or
mov
pop
pop
jbe
pop
aaa
dec
xor
mov
inc
cwde
les
mov
ret
and
(bad)
add
stc
or
cmps
out
dec
pop
cmp
push
enter
fdivrp
not
push
movs
jne
int
aad
inc
in
cmp
adc
shl
fstp
test
inc
cwde
push
inc
je
out
test
sub
pop
test
sbb
push
jl
or
cmps
pop
mov
mov
test
inc
sub
stos
add
pop
jae
inc
and
xchg
clc
inc
call
test
inc
cmc
mov
mov
scas
adc
sbb
lods
xchg
push
jmp
sub
jmp
das
pop
shr
test
cdq
sbb
inc
mov
out
lods
and
(bad)
ficom
jle
leave
ret
push
repz
imul
jle
add
lea
xor
mov
mov
and
xchg
sub
dec
jl
icebp
mov
jnp
repnz
cmp
ds
iret
pop
jb
xchg
xlat
pop
cmps
addr16
fisttp
out
xchg
push
cmc
aad
call
icebp
pop
jg
add
mov
repz
aad
sbb
push
int
icebp
test
mov
outs
xor
push
mov
jae
data16
xchg
inc
fadd
ss
cld
repnz
es
cmps
add
cmp
call
inc
pop
mov
test
mov
cmp
mov
xor
cmp
add
xchg
test
add
jp
xchg
movs
jge
xchg
xor
mov
test
push
pushf
and
lahf
mov
xchg
mov
arpl
mov
add
mov
sbb
das
cmp
fwait
push
out
scas
test
mov
cmp
lods
das
popf
pop
lahf
xor
ret
mov
inc
popa
xor
clc
cmp
sbb
add
push
fwait
sbb
xor
outs
mov
xchg
push
dec
push
aaa
jle
jne
jmp
dec
into
cld
xchg
xchg
inc
(bad)
loopne
lds
aas
cli
(bad)
(bad)
out
fiadd
sub
in
xchg
mov
lea
sub
mov
add
ror
out
mov
fwait
xchg
out
cmp
test
mov
(bad)
repz
dec
xchg
out
rol
push
in
adc
out
or
in
xor
jle
mov
(bad)
out
cmps
add
idiv
js
js
push
js
mov
out
ins
push
inc
imul
and
pop
push
inc
dec
or
lock
xor
pop
outs
jo
mov
(bad)
lea
jmp
mov
jp
sbb
jle
test
call
fs
jae
loope
in
out
inc
or
xor
dec
hlt
push
pop
adc
repz
rol
or
clc
sub
and
add
mov
cmp
xchg
call
inc
sahf
or
sub
in
cmp
cmps
jo
jne
cmp
cmp
cmp
and
stos
inc
pop
adc
lods
push
jmp
mov
call
cs
lea
pop
sbb
test
pop
shl
js
adc
and
retf
aad
xor
nop
sbb
sbb
popf
lock
int
mov
cmp
inc
jp
xor
inc
mov
push
ins
call
jecxz
(bad)
jns
mov
push
repz
xchg
or
je
cs
push
shr
dec
(bad)
mov
jne
cdq
jge
ds
fcom
or
popa
mov
jecxz
jle
jmp
mov
daa
sbb
mov
lds
mov
hlt
xchg
xchg
push
xor
push
aad
lahf
shl
bound
fwait
popf
and
inc
lods
js
mov
cmp
ins
push
in
retf
rol
mov
cmp
stos
jmp
cmp
pmullw
(bad)
movs
icebp
adc
daa
pop
mov
sub
sbb
std
iret
test
ins
dec
add
ret
adc
lahf
or
jbe
xor
mov
mov
loop
mov
push
sbb
mov
push
pop
push
sahf
jbe
jg
mov
dec
push
mov
and
sbb
lods
jns
cmp
test
push
das
add
pop
mov
and
stos
pop
movs
adc
jge
xchg
xchg
lock
pop
mov
es
inc
push
add
(bad)
push
sbb
fisub
fnsave
arpl
inc
jbe
mov
jbe
in
pop
aaa
push
je
dec
add
sub
cmps
mov
inc
push
jbe
sub
mov
pushf
jno
(bad)
pop
mov
mov
xlat
stos
mov
sar
sub
cmps
popf
xchg
push
add
aaa
shl
sahf
ja
mov
jle
pop
inc
arpl
jmp
cmps
loope
mov
scas
push
mov
fdivr
test
sbb
nop
ret
call
inc
je
adc
push
cmp
sbb
push
adc
add
fst
(bad)
repnz
stos
call
pop
aad
xchg
and
xor
push
in
jle
lea
hlt
adc
pop
in
mov
(bad)
daa
lahf
xchg
das
imul
in
pop
mov
inc
xor
bound
movs
mov
aad
outs
xlat
aam
mov
in
mov
loopne
retf
inc
cld
das
dec
call
stc
xchg
or
repz
xchg
add
movs
rcr
call
lds
xor
dec
pop
jp
sub
call
xor
paddsb
dec
imul
xchg
out
mov
mov
and
call
lock
not
jmp
sub
fadd
mov
leave
aad
push
add
ficomp
ja
dec
mov
mov
mov
fsub
bound
sub
push
rol
xor
adc
lods
add
sbb
(bad)
cli
shl
push
push
dec
call
test
shl
cmp
adc
mov
bound
sti
je
stc
loopne
xor
repz
and
loop
sbb
mov
rcr
jle
cwde
push
rcl
test
sub
out
jb
dec
push
popa
jns
ins
imul
or
sub
and
inc
fdiv
adc
or
or
and
pop
das
lahf
jmp
jne
inc
ja
int
int3
sbb
pop
sub
jle
mov
(bad)
(bad)
repz
jns
enter
and
inc
cmp
imul
jle
push
lods
inc
imul
cmp
or
and
aas
outs
aaa
ficom
fcomp
sub
sub
add
je
adc
pop
js
fcomp
js
push
pop
retf
in
mov
sub
mov
es
in
push
fwait
test
cmc
not
mov
pop
xor
pop
or
aad
nop
or
pop
inc
ret
sbb
xchg
daa
cmp
in
mov
xchg
ret
pop
retf
push
cmp
movs
sub
dec
jl
dec
rep
cmp
mov
mov
fist
adc
and
stc
cwde
out
xchg
jno
daa
jnp
lods
scas
out
push
lock
jno
clc
jmp
mov
sub
xchg
adc
or
fld
mov
test
stos
call
daa
xchg
mov
xor
mov
sbb
push
mov
fwait
loope
sbb
loope
jmp
adc
rcr
out
mov
stc
ret
aam
pop
lea
cmp
push
test
outs
lods
jb
lods
fs
and
inc
cmp
push
scas
ja
pop
xchg
fdivr
fs
dec
jnp
pop
xor
fadd
adc
test
nop
mov
cwde
inc
adc
xor
in
loop
gs
xor
(bad)
hlt
push
adc
push
jmp
call
sbb
xchg
es
xor
xor
sbb
pop
or
sub
xchg
clc
ret
fisttp
cmc
mov
lahf
jo
int3
arpl
stc
xchg
ss
sub
sbb
jmp
or
(bad)
cld
inc
(bad)
stc
push
xor
out
add
scas
aas
rol
cmc
ror
out
sbb
out
jg
lea
int3
jl
mov
(bad)
test
mov
jo
push
adc
mov
lods
in
mov
jne
adc
hlt
test
scas
dec
jnp
adc
pcmpgtd
gs
mov
and
pushf
add
cdq
iret
ret
fs
lds
add
leave
popa
mov
and
test
fld
push
nop
div
movs
adc
cs
lahf
xor
fisttp
dec
xchg
outs
mov
in
out
mov
lods
jg
out
mov
sub
and
cdq
mov
jp
movs
sub
mov
pusha
cmp
imul
cmp
or
addr16
out
xor
(bad)
in
retf
jo
retf
stc
sbb
repnz
test
pop
add
or
lods
push
push
jo
pop
enter
xlat
ret
xor
sti
mov
jecxz
push
sbb
jne
fld
inc
and
xchg
addr16
mov
int3
(bad)
fadd
push
loop
jo
push
add
push
ss
dec
sbb
jmp
ret
jno
xlat
test
int
add
adc
je
outs
and
sub
dec
js
push
retf
xchg
xchg
and
mov
lods
mov
mov
repnz
bound
add
xchg
mov
jb
rcr
xchg
xchg
fldcw
or
or
imul
add
cmp
sub
fistp
and
push
sbb
push
xor
mov
pop
pop
jmp
sbb
test
jg
clc
jno
in
leave
push
ins
push
pop
push
data16
mov
popf
loopne
jnp
lock
lea
test
push
mov
popf
xor
(bad)
mov
out
out
adc
push
aas
(bad)
pop
test
ins
int
loop
fadd
leave
call
in
enter
pop
push
and
test
and
push
stos
cdq
jns
sub
and
cmps
dec
jle
pop
mov
cmp
sbb
loopne
stos
dec
(bad)
jl
loope
dec
test
aaa
inc
cmp
imul
rol
jnp
xor
jbe
jl
out
ds
add
mov
rcl
mov
icebp
pop
call
imul
mov
ret
es
jg
inc
and
ret
adc
arpl
mov
xchg
inc
pop
imul
xor
jbe
push
call
jle
bound
test
push
shl
or
pop
push
fwait
std
push
and
test
clc
sub
scas
jmp
stos
cmc
push
loopne
jnp
inc
icebp
add
add
rcl
sub
adc
call
cmps
cmp
inc
lods
or
cli
fidiv
into
mov
jmp
popf
fisubr
sahf
pusha
mov
adc
fwait
aam
dec
pop
in
inc
mov
jo
adc
retf
inc
fcom
or
add
div
pop
cmp
ret
add
loop
cmp
retf
sub
hlt
hlt
mov
imul
test
jmp
pop
repz
jg
adc
push
or
lods
in
inc
add
mov
fld
aas
loopne
and
(bad)
xchg
int
sti
std
les
frstor
mov
adc
xor
mov
int
sub
(bad)
enter
pop
mov
mov
leave
stos
mov
cmp
pop
mov
add
mov
out
(bad)
jmp
jae
es
das
cli
fwait
jne
push
push
fidiv
rol
mov
and
or
inc
rcl
lods
les
stc
xchg
xchg
xchg
push
inc
ins
(bad)
adc
dec
shr
rcr
mov
mov
and
sub
cli
out
add
aas
lods
ret
js
jl
retf
aaa
fisttp
sbb
jns
push
ret
adc
jg
retf
xchg
fs
push
fcom
mov
add
test
xlat
pop
arpl
arpl
repz
icebp
in
leave
cwde
mov
xchg
cmp
mov
imul
inc
in
vmovups
dec
cwde
cld
pop
add
sti
ds
je
pushf
jmp
xchg
mov
xor
fneni(8087
out
neg
loop
mov
pop
enter
jo
xchg
or
out
sbb
sahf
test
jecxz
or
leave
movs
jmp
cmps
and
inc
leave
mov
mov
xchg
leave
xchg
gs
pusha
dec
sub
or
dec
lea
sti
ja
adc
xor
mov
cmp
inc
cmp
fidivr
sbb
pusha
mov
inc
les
mov
clc
fisttp
fdiv
pop
mul
adc
das
sbb
into
data16
fisttp
cmps
mov
mov
mov
sub
dec
inc
push
jbe
and
pop
push
aas
cmps
movs
lahf
fbstp
inc
in
dec
aaa
pusha
test
leave
cmps
push
dec
int
sbb
mov
ret
mov
pop
inc
ja
jge
sbb
arpl
adc
(bad)
mov
push
and
sbb
adc
pop
xor
mov
es
(bad)
aad
jle
arpl
xor
cdq
pop
jb
pop
inc
xchg
mov
jno
jns
outs
repnz
pop
pop
add
cmp
xchg
jae
jle
out
hlt
outs
(bad)
lea
inc
test
stos
pusha
(bad)
int3
or
xchg
jmp
fistp
xchg
sbb
cdq
adc
mov
daa
call
movs
sbb
hlt
and
(bad)
jge
fdivr
out
mov
dec
push
and
icebp
xor
sti
scas
dec
sbb
push
sub
jg
sbb
xchg
call
jae
(bad)
out
ret
push
test
call
cld
xchg
out
mov
(bad)
(bad)
push
(bad)
mov
push
into
sbb
lahf
push
loope
cmps
jg
pop
mov
mov
(bad)
and
les
xchg
pop
cmps
imul
adc
or
add
add
les
fisttp
neg
sbb
push
push
inc
aaa
mov
(bad)
fmul
pop
jb
cmps
push
scas
fadd
sub
rcr
mov
js
es
repz
test
retf
dec
js
aas
mov
or
push
rol
and
sbb
mov
inc
mov
sub
dec
sub
and
call
xchg
adc
xor
inc
fucom
repz
inc
mov
repz
ins
lahf
xchg
or
push
imul
stos
(bad)
adc
mov
dec
xor
test
lods
push
aam
jbe
mov
sbb
dec
ja
cld
loope
dec
scas
push
fs
(bad)
pop
adc
mov
add
push
cmp
or
push
lods
mov
sub
stos
mov
cs
mov
stos
xchg
into
aaa
mov
pop
fiadd
sub
xchg
inc
mov
or
pop
cmp
mov
xor
das
dec
jg
mov
(bad)
fst
pcmpeqw
xor
fcomip
sbb
mov
jge
imul
aas
data16
cmp
out
pop
mov
scas
fisub
mov
cmp
into
sub
push
xchg
jp
dec
bound
dec
repnz
adc
daa
idiv
pop
cli
cdq
cmp
cmc
or
dec
push
lahf
out
idiv
sbb
pop
call
sbb
pusha
sbb
rol
rol
addr16
fs
inc
vpavgw
dec
les
cmp
cmp
lock
rcr
(bad)
out
add
pushf
fcom
ficom
mov
mov
sahf
test
inc
push
(bad)
icebp
daa
pop
repz
outs
int
jno
adc
lock
daa
mov
je
xor
xlat
inc
mov
cmp
cmps
xchg
or
or
loopne
pop
sbb
inc
and
lahf
adc
jmp
adc
inc
mov
xor
rol
push
fs
(bad)
in
in
jo
sbb
adc
in
sbb
outs
jno
push
ds
inc
sbb
clc
jo
loopne
and
mov
push
out
sub
aam
aad
xor
cmp
shl
jbe
xor
mov
lahf
push
mul
fcmovb
popa
sahf
daa
stos
cmp
sbb
pusha
push
dec
pop
xor
inc
pop
in
ffree
fwait
stos
add
adc
(bad)
jmp
and
test
pop
xlat
loope
(bad)
push
push
(bad)
(bad)
sub
in
mov
fisub
pusha
add
mov
clc
retf
call
sar
sti
(bad)
in
rol
jmp
cmp
stc
(bad)
fiadd
mov
cli
ret
xor
fmulp
test
inc
fucomip
cmp
jno
ds
xor
xlat
fst
stc
test
fsub
gs
add
xlat
pop
aad
jg
stc
pop
iret
add
dec
clc
cmp
mov
inc
pusha
xor
cmp
fld
sti
inc
sbb
stos
leave
shl
lea
lods
xor
pop
cmps
push
jmp
shl
movs
dec
and
cmp
(bad)
sbb
dec
inc
inc
stc
addr16
retf
retf
xchg
(bad)
test
fcomip
and
jp
mov
jo
push
cdq
cld
add
test
dec
mov
sbb
shl
jmp
mov
mov
cs
or
or
mov
and
push
outs
cli
jmp
cld
sbb
imul
jns
int3
lea
aas
ficomp
adc
mov
lea
push
xchg
ret
xor
cmpxchg
retf
daa
das
imul
mov
mov
mov
call
(bad)
jle
jp
inc
je
xchg
cmp
pop
mov
jb
inc
sbb
push
jae
pop
test
hlt
mov
jns
lock
mov
pop
sub
mov
mov
xor
push
xlat
jp
scas
(bad)
jle
arpl
adc
shr
shl
pop
jbe
lea
test
aam
mov
pushf
inc
ins
scas
push
mov
loope
int3
fmulp
push
out
inc
sub
data16
daa
add
int3
lock
xor
call
loop
fadd
ds
jmp
test
push
mov
nop
dec
mov
mov
inc
loop
repnz
daa
(bad)
out
pop
ret
mov
out
sub
xor
(bad)
loopne
pop
pop
or
dec
cmp
stos
ret
mov
call
cs
div
sbb
jle
jge
and
xchg
loop
pop
aam
and
push
sbb
repz
pop
stos
sub
push
xor
dec
cld
and
int3
in
hlt
xchg
mov
outs
repz
add
in
jp
out
inc
sbb
icebp
or
mov
adc
hlt
adc
inc
xchg
pop
sub
loop
lahf
jmp
mov
outs
addr16
sub
inc
pop
(bad)
jns
lds
push
mov
sahf
mov
mov
push
or
mov
out
sti
fld
out
sbb
(bad)
frstor
push
mov
mov
sub
pop
xor
imul
push
ret
hlt
je
ret
mov
pop
(bad)
aad
(bad)
in
inc
add
and
xchg
push
ins
sub
imul
sub
or
in
mov
inc
aad
jl
pop
out
pop
int
mov
xlat
mov
adc
dec
add
test
push
(bad)
mov
push
ins
rcl
cmp
sahf
loopne
je
sub
(bad)
scas
add
repnz
je
push
add
std
adc
popf
xchg
mov
imul
aas
loop
ins
mov
loop
div
les
lea
pusha
cmp
xor
mov
cld
mov
cmc
lods
dec
pusha
sbb
push
mov
push
int3
mov
add
sbb
jo
imul
aas
and
(bad)
jecxz
shr
xchg
int3
int
dec
fistp
mov
repnz
pop
push
cmp
add
stos
aam
mov
jg
jne
push
xor
mov
enter
push
cdq
fist
hlt
js
mov
add
push
cwde
sub
scas
scas
inc
shl
out
outs
or
movs
ja
leave
test
(bad)
loopne
(bad)
lds
mov
mov
xor
mov
test
and
fs
adc
xor
clc
push
mov
inc
mov
adc
mov
cld
mov
leave
mov
dec
or
adc
jo
ds
jb
(bad)
push
xor
jmp
out
inc
cmp
pop
pushf
jge
out
cwde
sub
xor
fwait
add
jb
add
pop
cmps
adc
(bad)
mov
mov
add
(bad)
sbb
mov
mov
out
pop
fdiv
adc
mov
jo
mov
pop
test
mov
loop
int3
push
xor
cs
sbb
sub
sbb
push
mov
sub
retf
out
xlat
ret
iret
scas
mov
js
rol
das
out
(bad)
imul
and
shl
xlat
cs
xchg
xor
cmp
mov
ret
inc
popf
call
lods
mov
cmps
jmp
outs
ja
mov
push
jmp
or
les
stc
(bad)
xor
clc
stos
push
push
ins
mov
ret
pushf
daa
mov
call
jbe
iret
pop
add
add
xchg
inc
addr16
pop
outs
outs
stos
bound
(bad)
rcr
cwde
jns
int
jae
or
mov
cmps
scas
fs
fld
mov
xchg
adc
mov
cmps
ret
fwait
into
push
push
xor
iret
xchg
in
or
ret
fstp
ja
inc
addr16
outs
aaa
mov
cld
inc
cmps
movs
les
movs
outs
or
out
retf
imul
sub
test
cmps
into
scas
pop
int3
sbb
lds
mov
dec
(bad)
xor
and
xchg
loope
add
push
add
mov
push
ficom
pop
adc
out
adc
jge
cmp
pop
mov
mov
enter
retf
xor
inc
xlat
adc
ret
push
xchg
push
cdq
mov
int3
inc
cmc
push
lods
popf
fistp
dec
pop
mov
shl
pop
arpl
mov
fadd
xchg
xor
push
xchg
dec
adc
inc
shl
dec
ja
enter
stos
jo
aaa
xchg
inc
sub
dec
sahf
add
mov
or
mov
push
out
mov
dec
xor
fadd
mov
nop
jnp
push
daa
jge
push
lods
ja
mov
rcr
sub
mov
jmp
out
imul
push
test
xchg
lock
sub
cdq
and
fisubr
sbb
shl
fsubr
pop
xchg
leave
cwde
sub
xor
push
sti
jp
out
dec
in
mov
push
dec
out
sub
mov
rcl
loopne
jg
pop
xchg
nop
adc
into
push
loop
adc
sub
and
pop
push
inc
ficom
adc
(bad)
push
sub
push
outs
dec
fldcw
ja
shr
sbb
inc
fild
call
mov
add
call
add
aad
mov
mov
std
std
dec
inc
pushf
test
jmp
xchg
xchg
imul
push
add
dec
clc
sbb
sub
xor
popa
mov
in
ret
and
movs
call
movs
ss
shr
in
mov
push
push
shl
in
(bad)
je
out
fimul
xchg
xor
int3
cli
dec
out
xor
mov
ja
ret
repz
pop
ins
(bad)
in
or
pop
jb
push
xor
test
into
fimul
cmp
inc
cmp
push
mov
jg
js
push
ds
mov
div
std
jne
push
push
fimul
(bad)
out
mov
cmp
loopne
fdiv
test
in
mov
cmp
mov
shl
pop
cld
into
into
cdq
jns
outs
adc
stos
dec
data16
dec
and
out
push
mov
pop
sub
dec
inc
aad
mov
mov
sub
cwde
ss
mov
adc
add
into
inc
xor
or
mov
sub
addr16
dec
jmp
enter
scas
jp
fwait
sbb
push
push
pop
loope
mov
outs
aad
mov
fst
xlat
mov
push
xor
jae
arpl
xor
dec
inc
(bad)
pop
outs
pop
aas
jmp
pop
imul
sub
push
push
sbb
pusha
xchg
jge
retf
gs
mov
test
jp
in
xor
or
outs
lahf
jecxz
ret
cdq
jp
sbb
out
js
shl
iret
sub
pusha
retf
pop
jbe
mov
dec
and
loop
pop
jge
push
fsin
repnz
xchg
(bad)
iret
add
cmp
fucomp
sti
xchg
fld
dec
popa
lods
push
bound
int3
lds
(bad)
retf
out
test
mov
mov
pop
fcmovnbe
xchg
movs
sar
xchg
sbb
lahf
mov
xor
lds
movs
push
jmp
mov
jp
scas
movs
xor
addr16
outs
adc
push
pop
jae
xor
ja
out
adc
fist
jecxz
push
inc
or
int3
push
(bad)
rcl
pop
mov
mov
inc
int
pop
mov
scas
push
aaa
jecxz
mov
cmp
ja
push
sub
stos
cwde
mov
clc
add
arpl
ds
jno
mov
push
xchg
dec
xor
xchg
inc
mov
jle
leave
fs
mov
cmp
fcmovne
das
idiv
data16
and
pop
(bad)
outs
inc
neg
mov
out
jp
sahf
out
add
mov
pop
pop
mov
push
les
push
loope
hlt
dec
mov
(bad)
xchg
sti
pop
test
iret
fist
mov
call
sub
ret
not
add
xchg
loop
not
retf
sbb
push
add
jmp
fst
xchg
dec
sub
repnz
jnp
add
add
mov
ins
or
mov
jns
sbb
sub
or
xchg
pop
sub
adc
loope
xor
(bad)
stos
jo
jmp
arpl
lods
jne
jo
leave
push
stos
inc
inc
pop
scas
jmp
(bad)
hlt
pop
enter
pop
daa
test
adc
(bad)
hlt
inc
xchg
push
lods
xchg
out
cli
push
aad
(bad)
jle
mov
sbb
inc
test
mov
push
es
pop
cli
rcr
adc
rcl
pop
pop
repnz
jb
addr16
cli
push
loop
rol
shr
call
inc
mov
adc
rcl
std
das
adc
popa
test
cmp
or
out
add
jge
or
(bad)
xchg
shl
outs
loope
and
nop
(bad)
cmp
scas
inc
push
mov
pusha
scas
mov
or
ins
(bad)
dec
test
js
push
out
fmul
ja
mov
ins
cmp
aaa
add
cmps
sub
cmp
fidivr
inc
push
cmps
cmc
rol
adc
adc
test
or
inc
cmc
pushf
test
nop
adc
inc
adc
ins
pop
pop
jae
and
out
sbb
stc
cs
ins
push
jns
xchg
test
test
xlat
xchg
call
(bad)
shl
(bad)
pop
jne
xchg
dec
sbb
xchg
mov
dec
pop
repz
xor
mov
xor
pusha
mov
sbb
ret
push
popf
jo
push
push
test
sbb
mov
repnz
jb
pop
push
lock
fst
imul
cwde
jne
jg
or
jae
out
jo
jne
jbe
loope
push
add
lahf
jge
sbb
ins
pushf
jne
dec
jne
out
jb
rcr
fistp
cmp
fdivrp
or
loope
xor
and
test
adc
nop
and
inc
test
sub
push
mov
adc
cld
arpl
pop
xor
xchg
pop
ffree
out
add
mov
mov
fldcw
ficomp
aam
sbb
adc
cli
or
mov
mov
aas
icebp
cli
sahf
xor
ins
xchg
push
stos
movs
test
(bad)
mov
lods
sbb
aam
iret
ret
dec
pop
xchg
mov
jb
shr
gs
adc
xchg
sub
lahf
inc
push
jne
retf
pop
xor
xchg
cmp
es
push
dec
mov
xlat
mov
div
es
push
sub
test
int3
outs
jnp
mov
or
add
shl
in
adc
outs
inc
shl
shl
xchg
mov
retf
aaa
enter
mov
sub
lods
mov
movs
sbb
pop
jno
sub
jbe
sub
fist
sub
leave
mov
in
adc
aam
lods
mov
inc
lea
and
jmp
in
out
int3
nop
(bad)
jmp
add
sahf
es
xor
loop
repz
repz
xchg
pushf
mov
out
dec
in
sbb
inc
xor
push
repnz
les
sbb
pop
and
out
call
(bad)
call
jmp
inc
dec
in
adc
stc
mov
dec
or
test
sti
cmp
in
cmp
push
call
xor
jno
pop
fild
pop
add
test
mov
pusha
dec
hlt
push
rcl
mov
sub
cmp
adc
jmp
repnz
(bad)
div
outs
ins
(bad)
push
pop
(bad)
adc
mov
xor
adc
mov
mov
mov
push
out
arpl
sub
fiadd
jmp
shr
icebp
daa
div
jg
fxch
dec
nop
and
(bad)
xlat
shl
pop
jns
xchg
ret
pop
inc
or
sbb
mov
xlat
in
js
sbb
cmp
retf
push
cmp
cmp
cs
aam
cmp
lock
xchg
mov
fwait
stc
mov
pcmpgtb
and
outs
xchg
push
xor
int
test
(bad)
retf
push
jge
xchg
push
out
mov
or
and
sub
shl
outs
or
adc
push
stc
sub
or
jb
imul
push
jns
jmp
aad
sub
popf
std
jge
mov
dec
push
adc
or
push
ret
xor
jbe
cmp
pop
(bad)
mov
test
sub
ins
mov
(bad)
stos
aas
les
pop
mov
pop
les
ret
pop
loope
add
stos
jecxz
sub
dec
fstp
jmp
xchg
jmp
jmp
xor
push
ja
aad
cli
imul
test
or
or
xchg
push
js
mov
pushw
call
inc
inc
jmp
outs
and
(bad)
(bad)
sbb
sub
popf
lahf
cmps
cmp
xchg
test
push
and
sub
(bad)
rep
mov
rol
xchg
inc
fadd
mov
pop
dec
cld
push
add
ss
mov
lods
aad
sbb
adc
retf
inc
fsub
(bad)
dec
mov
es
(bad)
ins
les
mov
iret
out
add
push
out
push
mov
out
jne
jo
xchg
jl
loop
je
mov
xor
cwde
(bad)
in
ret
fimul
lods
in
cmp
xor
cmps
xchg
or
mov
dec
xchg
mov
and
cmp
test
jo
retf
in
pop
mov
rcr
add
jge
aas
mov
xor
bound
push
mov
pop
outs
pusha
lods
int
bound
sbb
pop
dec
sub
aaa
ror
les
mov
mov
scas
and
sar
xchg
push
mov
mov
dec
and
into
jb
sub
cdq
nop
or
out
sahf
cmp
inc
and
mov
repz
ins
fldl2e
leave
xchg
(bad)
iret
add
repz
neg
scas
js
das
fs
out
or
or
add
mov
pusha
jbe
push
mov
mov
mov
jne
add
aas
xlat
adc
xchg
xlat
lods
mov
xchg
jp
cmp
int3
push
mov
pop
adc
sbb
xor
push
sbb
dec
xchg
mov
pop
inc
hlt
cdq
out
(bad)
repz
cmp
jne
out
aam
imul
lods
xor
pusha
dec
shl
stos
dec
jbe
pop
(bad)
jmp
iret
cmps
pop
ja
out
cmp
jb
mov
dec
add
gs
push
pop
call
test
cmps
neg
pop
in
xchg
test
fiadd
xchg
jb
and
mov
sub
sbb
xchg
ret
mov
retf
mov
push
aas
aas
sbb
scas
aaa
xchg
mov
xchg
add
aaa
or
addr16
(bad)
fiadd
test
jp
xchg
test
push
sbb
sub
or
cmps
xor
mov
stos
iret
hlt
mov
sar
sbb
pop
xchg
jge
scas
stos
mov
pop
adc
lock
xlat
dec
mov
jns
mov
ja
mov
pushf
xor
lock
cdq
inc
dec
scas
fdivr
mov
pop
cli
push
mov
cmp
rcl
cmp
outs
mov
(bad)
popf
retf
adc
iret
cmp
inc
mov
push
sbb
mov
stos
ins
popa
bound
sub
(bad)
ins
dec
cli
(bad)
mov
and
ins
into
jge
fiadd
dec
inc
xor
sbb
mov
imul
daa
sub
mov
(bad)
popf
es
push
outs
pop
out
rol
ja
sbb
test
addr16
fwait
xor
je
lea
mov
mov
scas
or
mov
xor
cmps
movs
inc
rcr
and
mov
push
mov
es
mov
xor
pop
scas
popa
lahf
out
scas
adc
adc
xor
in
mov
int
pop
add
sar
adc
inc
pop
dec
imul
nop
jmp
fist
dec
fldenv
stos
faddp
or
and
bound
xor
inc
imul
stc
add
shld
arpl
aam
and
jns
iret
int3
js
sbb
inc
repnz
jg
fs
int
and
out
push
arpl
or
pop
pop
push
ficomp
cld
adc
(bad)
int
out
lds
dec
loope
repnz
(bad)
imul
mov
stos
adc
xchg
adc
rcr
stc
mov
xchg
lahf
mov
xor
inc
sub
ror
push
or
xchg
cmp
sahf
les
push
mov
or
loope
fidivr
retf
jns
push
push
xchg
adc
cmp
jmp
cmp
ins
clc
push
repz
mov
mov
aam
clc
push
rcr
xchg
int3
movs
mov
loopne
pop
imul
out
rcr
pusha
pop
dec
add
out
sbb
enter
loopne
jle
xor
push
out
pop
call
(bad)
ss
mov
call
scas
or
push
xchg
lds
lea
(bad)
jg
fdivr
xchg
push
sub
stos
ret
and
cs
ins
or
sbb
add
push
inc
loopne
jmp
cdq
jmp
icebp
(bad)
push
repnz
aas
xor
jmp
mov
push
enter
sub
mov
(bad)
ins
sub
sub
xchg
repz
mov
rcr
pop
pop
xchg
push
push
add
mov
arpl
sbb
xchg
xchg
test
pop
lods
mov
lods
inc
hlt
test
push
or
xor
mov
rol
xor
sub
adc
or
xchg
mov
adc
and
rcl
xchg
xchg
imul
lods
jp
fs
mov
push
sbb
mov
push
mov
fsubr
inc
sbb
ss
dec
jle
in
mov
adc
push
ja
cmc
mov
pop
jmp
sub
jnp
push
test
inc
pop
xor
daa
jmp
in
mov
lea
mov
popa
daa
stos
xlat
sub
and
sbb
movs
xor
xor
call
and
(bad)
(bad)
xchg
mov
inc
mov
mov
outs
pop
or
mov
mov
and
or
mov
add
ins
mov
int
add
loope
addr16
add
data16
scas
add
jb
or
xor
loope
xchg
cmp
jp
add
pop
add
cmp
or
imul
push
inc
out
mov
repnz
in
lds
inc
scas
push
(bad)
sub
mul
icebp
push
add
popf
jo
jns
add
stc
inc
mov
ret
in
popa
sbb
xor
adc
jp
jb
jne
xchg
out
adc
cmps
and
imul
mov
jmp
xor
icebp
repz
sub
push
jmp
cmp
push
test
addr16
mov
call
nop
cwde
cmps
mov
sub
js
adc
stc
outs
out
retf
inc
dec
pop
dec
jns
aam
nop
mov
sub
test
dec
lahf
jno
in
sub
sub
movs
xlat
call
jge
add
pop
test
(bad)
jb
xchg
sub
into
or
movs
mov
dec
mov
jle
sbb
sbb
xor
jecxz
or
xchg
xchg
retf
(bad)
pop
call
sti
in
xor
scas
ret
hlt
and
ficom
ror
mov
xor
rcr
and
clc
add
xchg
mov
xchg
mov
xor
sub
retf
adc
and
pop
jae
pop
ins
fwait
jno
ja
sub
paddsw
jbe
iret
pop
es
jb
cmp
push
pop
xchg
cmps
adc
xor
jno
cwde
cld
mov
test
push
cmp
mov
not
mov
xor
mov
push
inc
cmp
xchg
js
pop
test
inc
adc
mov
inc
fdivr
mov
inc
sar
mov
adc
mov
test
sub
call
ficomp
mov
shr
shl
pop
aad
push
ror
jo
sahf
dec
push
adc
xor
or
xchg
cmc
sub
data16
and
push
dec
dec
xchg
mov
cdq
imul
pusha
dec
es
bound
xchg
scas
nop
ror
or
xchg
push
mov
jb
out
push
cmp
pop
inc
pop
clc
scas
sbb
dec
out
repnz
(bad)
stos
jns
loop
or
fidivr
cmp
push
xchg
cli
ss
xchg
aas
jecxz
stos
iret
sbb
jae
retf
dec
sub
enter
dec
pop
test
out
push
sbb
mov
sbb
pop
jne
jnp
jnp
div
ror
jnp
push
and
outs
(bad)
cli
or
retf
inc
push
shl
mov
or
adc
add
aam
push
sub
push
fnstcw
aas
bound
std
movs
repz
jecxz
pop
push
icebp
sub
sbb
sbb
xor
adc
ret
je
test
xor
mov
(bad)
movs
sub
test
jns
adc
fimul
sbb
mov
(bad)
nop
jbe
fnsave
add
(bad)
rcl
aaa
out
ficomp
cwde
lahf
in
(bad)
mov
data16
jb
or
sbb
xor
movs
and
hlt
scas
call
xor
xchg
inc
or
adc
(bad)
and
inc
pop
ins
adc
enter
push
mov
mov
out
(bad)
(bad)
mov
cmps
es
test
push
arpl
test
ss
inc
mov
(bad)
adc
leave
sub
iret
out
mov
movs
jge
xor
xchg
test
popf
xor
inc
xor
hlt
in
pop
push
sbb
mov
sbb
shl
mov
and
sti
iret
sbb
fscale
jp
mov
(bad)
enter
dec
adc
mov
(bad)
iret
(bad)
loope
xchg
aas
and
jge
aaa
retf
test
mov
add
in
sub
xor
inc
clc
cwde
xchg
or
add
mov
cmp
or
leave
hlt
pop
or
lds
lods
xchg
dec
mov
arpl
movs
jns
retf
inc
pop
jmp
or
pushf
and
xchg
push
(bad)
das
shl
out
jb
in
or
ss
xchg
cmps
loopne
xchg
push
inc
repz
sbb
pop
sti
aad
jge
push
mov
or
popa
mov
sbb
fld
sahf
mov
inc
js
call
lock
jg
(bad)
mov
das
fild
mov
iret
aad
pop
dec
sahf
das
inc
es
jb
add
dec
aad
mov
mov
dec
aam
fsub
inc
or
xor
push
das
dec
aad
lea
push
into
leave
out
xor
sbb
sub
call
into
push
add
inc
mov
jbe
paddsb
mov
(bad)
dec
mov
dec
push
fild
(bad)
movs
mov
(bad)
xor
mov
das
(bad)
(bad)
mov
(bad)
jo
iret
pop
and
pop
inc
icebp
mov
fwait
or
push
popa
aas
fdiv
je
push
xchg
sar
loopne
cmc
push
stc
pop
inc
out
in
xor
mov
dec
hlt
push
lea
in
lods
sub
mov
push
cmp
mov
data16
shr
xlat
ins
cmps
retf
imul
push
scas
dec
test
test
call
sbb
push
inc
cmp
loopne
ror
cmp
ja
clc
loopne
loopne
adc
movs
cmp
ds
mov
cmps
and
jmp
fs
in
bound
sub
(bad)
xchg
push
or
dec
test
ja
jl
(bad)
xor
ins
xor
or
adc
test
dec
rcr
mov
xchg
xor
pop
xchg
add
(bad)
mov
test
inc
leave
mov
mov
popa
mov
xchg
mov
pop
and
sub
call
movs
mov
cmp
inc
loopne
jge
xchg
inc
jns
cmps
popa
lahf
je
in
xchg
jnp
or
xchg
xabort
ds
xchg
cli
xor
lds
jge
int
xchg
nop
lea
cmp
xor
jmp
lahf
add
push
std
mov
in
out
pop
cmp
movs
push
push
mov
rcr
ss
jb
inc
cmp
fistp
cmc
nop
(bad)
xchg
dec
stc
jmp
outs
push
jae
dec
xchg
mov
sub
arpl
mov
jb
je
mov
sub
pop
loopne
jmp
ds
cmc
loopne
inc
cmp
in
mov
rcr
mov
dec
sahf
jg
rol
and
or
xor
(bad)
fstp
push
pop
inc
aaa
jmp
push
mov
add
mov
jg
push
shr
cs
cmp
pusha
imul
push
adc
sbb
daa
sar
mov
mov
mov
dec
xor
in
inc
xor
inc
repz
pop
mov
pop
sbb
aam
and
es
jae
cmps
inc
bound
mov
sub
sbb
mov
dec
sbb
gs
out
lahf
dec
xchg
std
push
popf
lods
lahf
pop
sti
push
sub
xchg
fld
mov
or
sbb
mov
sbb
iret
ror
out
fld
jmp
mov
push
jmp
into
xor
push
mov
mov
packsswb
mov
sahf
movs
jg
ret
jo
adc
ins
and
sbb
mov
aad
fldenv
test
or
inc
jmp
pop
mov
inc
push
cs
out
inc
scas
inc
pop
clc
push
push
and
xor
sub
adc
cmp
scas
shr
fwait
repnz
aad
enter
test
adc
repz
inc
pop
jmp
sub
sub
shl
sahf
lods
mov
jecxz
inc
dec
sbb
sbb
inc
jl
sbb
xchg
aaa
frstor
xchg
jecxz
pop
rol
aaa
ret
test
pop
or
pop
fsub
or
or
scas
xchg
test
inc
cld
gs
sub
adc
mov
ins
inc
neg
mul
jecxz
les
push
push
sbb
fidivr
xlat
in
shl
icebp
jecxz
arpl
cmp
mov
call
ret
mov
jp
jbe
fldz
mov
cld
std
pop
inc
jns
or
fimul
daa
pop
sbb
mov
inc
mov
sahf
jg
inc
es
sbb
dec
cmp
ins
xchg
test
mov
dec
popf
mov
cwde
pusha
lahf
call
pusha
into
ins
pop
dec
jne
jmp
cdq
xchg
fmul
aam
adc
(bad)
and
pop
push
adc
xor
retf
js
inc
mov
outs
jmp
pop
sub
sar
mov
mov
push
cmp
push
or
and
xor
mov
push
push
cld
(bad)
dec
mov
xchg
in
jle
retf
lds
(bad)
stos
xchg
mov
and
in
push
jae
movs
lods
movs
xor
and
jmp
inc
cld
(bad)
jmp
xchg
out
pop
stos
jle
jp
sub
and
jmp
(bad)
cdq
bound
iret
pushf
mov
out
or
sub
xor
mov
in
lock
cmp
jne
dec
outs
scas
arpl
test
pop
(bad)
push
push
mov
cmps
mov
xchg
mov
xlat
xor
mov
leave
enter
xor
jbe
ins
dec
test
andps
mov
and
cmp
call
inc
or
stc
dec
loope
cmc
xlat
xchg
mov
arpl
mov
jns
shr
mov
jge
xor
(bad)
jmp
pop
jecxz
push
cmp
ins
lahf
push
pop
pop
jbe
sar
xchg
test
mov
sub
cld
ds
fs
pop
arpl
ds
xchg
jo
loope
(bad)
and
sub
bswap
iret
inc
sbb
loop
imul
out
pop
ins
std
xchg
lock
or
cld
pop
loop
mov
movs
arpl
push
sahf
xchg
addr16
nop
call
ror
inc
add
xchg
fisub
pop
outs
add
push
push
std
mov
(bad)
jno
aam
fdivp
(bad)
mov
adc
movs
movs
push
adc
or
popa
imul
aad
mov
and
call
add
hlt
dec
push
push
adc
out
cli
push
push
int
aam
mov
into
mov
or
js
push
aad
and
ficom
enter
pop
mov
in
dec
neg
in
cmp
ret
mov
pushf
aad
xchg
dec
dec
or
dec
ret
les
ror
jmp
out
(bad)
xchg
xchg
popa
push
out
xor
push
sub
adc
mov
mov
(bad)
in
lods
lahf
in
aam
adc
sub
sbb
xchg
int
mov
jns
or
cmp
mov
xchg
pop
adc
lea
mov
pop
out
movs
xchg
div
inc
icebp
jae
pop
push
ds
inc
imul
std
aaa
fcomp
xchg
sub
icebp
sbb
(bad)
pop
dec
js
inc
movs
pop
or
push
dec
or
jns
mov
xchg
inc
sub
jg
lea
inc
gs
lods
inc
mov
cmp
pop
loopne
scas
je
sub
sbb
xor
int3
and
jno
push
pop
ret
push
shl
iret
mov
sahf
cld
cli
adc
inc
sbb
fdiv
and
cmp
push
jnp
jnp
ror
adc
cwde
scas
scas
loopne
mov
aas
dec
pop
mov
and
out
popa
sub
pop
xor
sub
test
or
jmp
add
test
jns
outs
and
xlat
xor
xchg
int
mov
movs
push
aad
push
sar
mov
or
loop
dec
dec
dec
xchg
cld
mov
popa
iret
dec
dec
cld
xchg
outs
enter
loopne
xchg
dec
mov
mov
sub
(bad)
and
fsubr
popf
call
cld
jbe
stos
and
out
(bad)
xchg
or
lods
and
sub
jmp
shr
ret
ret
jecxz
mov
sbb
push
xor
pop
inc
push
lock
dec
mov
and
add
xchg
pusha
(bad)
idiv
sar
cmps
in
mov
js
(bad)
jns
mov
ss
int3
adc
cmp
dec
jbe
imul
pushf
pushf
mov
dec
cmp
mov
add
addr16
mov
sub
cmp
scas
xchg
retf
pusha
push
sub
cmc
dec
sti
ror
sub
xor
ss
dec
and
addr16
mov
mul
push
mov
(bad)
aam
push
jmp
and
xchg
xchg
mov
jmp
inc
stc
std
out
pop
mov
push
shl
and
xchg
adc
pop
(bad)
not
pop
cmp
sar
stos
or
aas
cmps
sub
arpl
jl
call
pop
push
xchg
push
in
dec
xor
ins
mov
aam
xor
mov
retf
xchg
pusha
repz
mov
in
out
fcmove
cmps
sbb
aam
scas
and
fwait
(bad)
and
push
xor
inc
jno
or
inc
pop
adc
rol
or
leave
je
sbb
test
hlt
fstp
out
xchg
dec
pusha
adc
dec
retf
fsubr
pcmpgtd
test
jne
jno
ficomp
daa
sub
pop
into
bound
fstp
dec
pusha
fisttp
jmp
sbb
scas
jns
add
fisubr
retf
xor
lods
dec
repz
repnz
ds
sbb
jp
jno
clc
mov
nop
xchg
retfw
cmp
mov
out
and
push
cwde
adc
add
imul
daa
shl
xchg
mov
cs
cdq
dec
ja
mov
and
pop
push
add
test
sub
push
inc
or
repnz
enter
or
call
outs
dec
je
int
add
ror
fwait
cmp
xchg
mov
mov
(bad)
in
add
jbe
pop
fisub
lods
sub
adc
cmp
hlt
mov
test
ins
fs
mov
add
mov
cmps
push
add
push
int3
and
jb
sub
in
mov
(bad)
shl
push
or
sti
or
add
adc
push
xor
mov
push
jae
out
jnp
dec
iret
jns
pop
ins
cs
sbb
sub
mov
pop
inc
test
and
push
stos
aam
mov
sub
clc
inc
sub
mov
iretw
add
sub
dec
in
push
inc
rol
add
xor
push
fist
sti
sbb
push
nop
jae
and
inc
adc
mov
fs
jae
into
retf
or
xcrypt-ctr
cmps
cdq
mov
mov
cmp
jb
sub
out
fs
fst
repz
mov
outs
(bad)
bound
jno
loope
jmp
cmp
loopne
xchg
sahf
xlat
(bad)
stc
repnz
pop
out
mov
pminub
and
mov
fidivr
dec
rcr
pop
lds
jle
pop
and
cwde
xor
xchg
sbb
pop
push
xchg
and
sub
mov
fwait
outs
sti
push
jg
jno
and
ja
xchg
push
push
inc
mov
mov
ffreep
jmp
xchg
inc
ficom
hlt
jno
mov
adc
fsubr
xor
loope
std
iret
xor
ins
out
dec
(bad)
clc
jmp
fidiv
ret
push
das
(bad)
loop
dec
dec
dec
jecxz
jae
aas
aam
scas
comiss
rcl
imul
movs
push
jae
mov
in
(bad)
(bad)
xlat
jle
push
xchg
dec
fcmovu
in
and
or
push
mov
inc
add
jno
cmp
fadd
cmp
mov
or
inc
movs
mov
out
pop
pop
retf
push
mov
or
iret
rcr
sbb
mov
inc
cmc
ss
jne
xor
(bad)
lock
xchg
fimul
xchg
retf
sbb
add
mov
jb
xor
loop
or
cmps
jg
(bad)
fsubr
mov
xchg
push
stos
mov
inc
jo
xlat
add
cmp
(bad)
not
and
cmc
dec
add
mov
push
aas
inc
hlt
sub
jl
pop
sub
mov
inc
sbb
jecxz
or
data16
test
in
push
in
popa
add
fild
mov
lock
adc
test
imul
out
inc
jb
mov
aad
mov
jle
push
into
pop
and
leave
mov
add
addr16
out
out
mov
in
es
pop
cmp
(bad)
jb
mov
pusha
ds
jmp
clc
push
call
or
xchg
fldenv
jnp
mov
sar
int3
ja
mul
pop
into
cwde
jmp
test
call
mov
ror
std
arpl
mov
lea
rcl
movs
fwait
push
mov
push
(bad)
xchg
push
call
ss
push
pop
ret
mov
cmps
mov
bound
mov
add
xchg
cmps
fwait
les
cmp
jo
data16
scas
mov
and
neg
adc
test
sub
arpl
jl
imul
add
xor
fnstcw
and
in
push
mov
inc
mov
cs
xor
in
adc
jno
mov
xor
imul
adc
cmp
jns
cdq
fnsave
sahf
dec
loopne
mov
xor
aaa
iret
mov
std
pop
sub
mov
hlt
js
sahf
mov
lock
mov
inc
leave
pop
ss
ret
push
rcl
cmp
outs
int
aad
push
mov
and
movs
cli
inc
xchg
popf
sbb
mov
jl
pop
mov
or
mov
fsub
jecxz
fs
nop
mov
mov
in
fsubr
push
adc
sub
pushf
cmp
push
jge
lods
dec
(bad)
shl
jmp
(bad)
(bad)
push
dec
xchg
add
(bad)
or
aas
out
into
hlt
rol
push
in
data16
iret
inc
add
xchg
inc
aaa
sbb
test
nop
adc
xor
(bad)
pop
xor
out
in
pop
mov
xor
ret
retf
push
test
daa
sbb
cmp
std
mov
(bad)
ins
fs
sar
inc
test
add
cwde
rol
push
(bad)
(bad)
xlat
and
mov
jp
hlt
add
sub
aad
adc
mov
out
jmp
pop
cmp
rol
int3
adc
call
mov
lahf
(bad)
jns
test
add
sbb
push
repz
imul
and
xchg
out
ss
inc
xlat
cmp
or
xor
pop
and
retf
jmp
nop
jl
icebp
es
adc
sub
fisub
ins
xchg
pusha
inc
sbb
push
sub
lds
shr
fwait
push
cmp
(bad)
jmp
and
inc
adc
mov
and
dec
adc
mov
jp
(bad)
xchg
pop
sbb
loop
cmc
loopne
push
dec
in
js
sub
push
aam
inc
dec
stos
stos
fisubr
adc
mov
aas
ins
sub
pop
loope
xor
and
ja
add
fmul
xor
icebp
(bad)
nop
lods
add
or
pusha
loopne
or
scas
cdq
and
sbb
jmp
pop
push
leave
push
xor
mov
ss
rol
sub
ins
icebp
mov
jne
in
jb
mov
daa
stc
adc
push
and
movs
and
mov
sub
jmp
sar
inc
xchg
sbb
sub
lods
xchg
sub
imul
inc
jge
xor
cmps
gs
(bad)
aaa
loop
xor
(bad)
mov
mov
jno
xchg
xchg
add
fbld
jle
lahf
cld
arpl
xlat
(bad)
lock
adc
push
mov
retf
repz
pop
scas
int3
cwde
sti
mov
pushf
push
xlat
xchg
loop
jecxz
icebp
fisub
or
inc
xor
xchg
enter
mov
movs
jg
jle
data16
sahf
dec
cmps
in
xchg
shl
xchg
xchg
fidivr
scas
sub
push
xor
ja
and
test
mov
movs
in
pop
mov
inc
dec
and
out
mov
sub
rol
inc
movs
rcr
jno
hlt
push
shl
add
movs
jle
xchg
cmps
int
mov
push
call
jbe
ror
movs
lods
mov
xchg
into
pop
xor
mov
imul
and
(bad)
xor
mov
fucomip
pop
add
out
add
ss
cmps
inc
inc
or
mov
lahf
lock
es
hlt
fbld
popa
cdq
inc
jg
sahf
lock
or
(bad)
loopne
xlat
sub
ror
xchg
je
or
pushf
fdivr
xchg
mov
in
pop
adc
imul
js
scas
push
jne
stos
and
test
or
mov
push
daa
sub
pop
cmp
pop
setb
xchg
push
inc
and
cmp
call
jg
push
ficom
lea
sub
aam
ret
push
ins
in
test
or
jmp
push
lahf
push
std
jb
in
or
adc
jne
jp
lock
add
inc
lods
out
dec
arpl
and
xchg
fdivr
fsubr
pusha
jno
movs
lock
jle
pop
hlt
call
scas
fwait
adc
mov
sbb
aaa
lock
and
sub
loop
xchg
cwde
repnz
or
cli
pop
jae
and
add
(bad)
xchg
ffreep
sbb
xchg
xor
data16
xchg
bound
mov
jp
jecxz
inc
add
scas
mov
(bad)
into
jle
cwde
and
ins
xchg
test
mov
clc
sub
jg
jbe
pop
pop
inc
das
cld
push
pop
js
sbb
mov
and
adc
cmp
push
arpl
pop
daa
cmp
mov
ins
iret
sub
inc
pop
mov
push
mov
jo
sbb
aad
cmc
adc
and
dec
dec
movs
xchg
cmc
mov
inc
xchg
mov
add
ins
or
fnstenv
repz
outs
sbb
into
pop
aaa
dec
bound
(bad)
push
sbb
cmps
mov
sbb
les
inc
add
je
dec
inc
inc
sbb
mov
stc
gs
dec
shl
cld
adc
test
push
and
into
int
(bad)
mov
ja
std
(bad)
cs
jmp
jno
xchg
and
js
inc
daa
pop
add
enter
push
or
inc
pop
pop
sub
sbb
out
dec
sbb
repnz
push
jle
fild
dec
jle
sub
push
mov
imul
out
ins
outs
jge
adc
mov
pop
ja
adc
jp
cmps
mov
in
es
sub
mov
ins
fwait
or
add
or
sbb
sti
cmp
ror
jnp
scas
or
xor
pop
mov
loope
(bad)
rol
cmp
xor
xchg
rcr
adc
fdiv
(bad)
cld
or
test
retf
pop
arpl
dec
arpl
push
clc
adc
repz
dec
mov
mov
push
mov
add
adc
sbb
fwait
ins
enter
xor
adc
ucomiss
pop
xor
lea
add
jno
mov
inc
shr
pop
(bad)
mov
xchg
arpl
aam
push
mov
pop
cmp
or
add
cdq
mov
in
call
xchg
mov
adc
xor
mov
retf
cli
pop
mov
jl
movs
cmps
push
mov
mov
ss
ret
cs
fwait
sbb
fimul
and
xchg
aas
mov
fdiv
je
sbb
lahf
mov
fistp
arpl
sbb
xchg
adc
push
cmp
in
and
ins
daa
jbe
retf
pushw
or
aam
dec
pop
inc
mov
jmp
aad
push
sbb
xchg
pop
out
das
sbb
sar
pop
inc
fisubr
add
cli
popa
aad
or
ficom
mov
cmp
xchg
nop
mov
mov
push
sti
push
sbb
outs
or
hlt
ret
push
adc
mov
xlat
push
add
aam
jp
call
test
or
lods
adc
mov
(bad)
push
call
stos
mov
outs
rcl
push
inc
pushf
enter
loope
je
push
sub
stos
(bad)
cmp
cmp
cmp
hlt
jae
out
adc
pop
dec
scas
sub
pop
pop
stos
fisub
jmp
or
jmp
or
or
and
add
fcmovb
pop
stos
dec
xchg
and
jns
gs
cmc
xor
jns
cmp
sub
stos
pushf
mov
paddusb
repnz
jne
mov
test
mov
jmp
scas
adc
call
dec
fwait
or
pop
inc
mov
add
push
adc
lock
sbb
fcomp
sbb
mov
inc
xor
mov
and
sub
je
and
mov
out
retf
std
push
(bad)
lds
add
mov
sbb
je
or
and
or
pop
push
xchg
into
jg
pop
fneni(8087
xchg
rol
jecxz
mov
cmp
xor
sahf
push
mov
not
test
fld
sub
popa
sbb
add
push
rcl
repz
dec
das
(bad)
mov
jecxz
xchg
push
pop
ins
fsub
loopne
ja
xor
(bad)
mov
dec
fsub
mov
test
mov
scas
dec
cmps
fnstenv
aaa
addr16
out
push
pop
call
in
aaa
mov
add
or
sub
or
in
xlat
aaa
push
into
cld
cmp
nop
mov
sub
mov
push
xor
or
psubsb
pop
fdivr
jg
mov
retf
outs
sub
inc
fild
push
daa
fld
inc
inc
xchg
push
sub
cwde
pusha
icebp
xchg
bound
inc
inc
shr
mov
rcr
jae
stos
neg
nop
dec
jge
or
or
and
iret
lods
adc
dec
xchg
cmp
and
jnp
dec
vorps
mov
ret
add
or
mov
ror
add
into
sub
call
lea
mov
shl
cmp
or
not
xlat
jg
mov
mov
enter
cmp
in
mov
fwait
jbe
scas
(bad)
adc
dec
movs
dec
xor
xor
adc
adc
jbe
mov
(bad)
(bad)
xchg
inc
xor
mov
sbb
mov
sar
movs
mov
pop
dec
(bad)
cs
dec
inc
push
sbb
fild
test
loope
stos
sub
xor
mov
sbb
cmp
int3
adc
dec
lds
(bad)
xchg
cmp
xchg
shl
or
xchg
ret
bound
sub
jge
jle
popf
jg
das
inc
js
xor
cmp
jp
loopne
(bad)
push
aam
cmps
pop
outs
std
int3
add
xchg
push
fs
or
jmp
jp
or
push
test
sbb
cmp
and
adc
loopne
add
push
inc
es
rol
jg
aam
je
sub
pop
xchg
adc
and
mov
aam
mov
(bad)
(bad)
loope
jns
mov
jmp
xlat
and
mov
loope
xchg
or
xchg
cmp
inc
hlt
add
gs
sahf
add
push
repnz
test
sub
(bad)
or
int3
mov
stc
cmp
xchg
ins
popa
test
es
lock
inc
imul
jae
out
xchg
pop
imul
(bad)
stos
jl
jg
adc
add
jns
jnp
outs
test
push
std
push
(bad)
stos
pushf
and
pop
mov
dec
or
adc
out
adc
fimul
cmp
in
adc
xor
fistp
aad
dec
repz
push
mov
jns
mov
movs
mov
fmul
jnp
and
mov
xchg
jmp
outs
nop
pushf
arpl
push
int
pop
push
mov
test
pop
xchg
jp
sbb
cld
dec
push
and
push
ffreep
xor
push
push
sub
sahf
movs
push
inc
out
fldcw
xor
and
lods
inc
add
add
jle
test
mov
and
movs
ds
inc
and
test
fsubr
push
cmp
cwde
loope
sti
loop
mov
jmp
(bad)
mov
xor
dec
lock
jp
not
cmps
pop
ficomp
xchg
mov
jg
and
fld
cmp
push
(bad)
pop
and
add
add
cmp
dec
mov
jp
dec
loope
lock
mov
adc
cdq
pop
xor
movs
push
das
add
in
test
pop
cmp
push
cld
lahf
cmps
pop
jns
mov
pop
mov
jbe
push
nop
dec
cld
mov
lds
shl
dec
shl
mov
or
ror
out
fdiv
inc
es
fmul
js
in
add
bound
fadd
pop
ins
mov
(bad)
int3
outs
lahf
cli
cli
scas
les
mov
cmp
std
lds
add
ficom
into
in
aas
mov
mov
or
ds
mov
cmps
(bad)
aam
cld
adc
xchg
mov
inc
push
mov
jns
call
and
(bad)
inc
mov
sysenter
adc
mov
les
outs
or
es
mov
adc
rol
mov
mov
jbe
ja
sbb
push
mov
adc
or
mov
sbb
cmp
rdpmc
pushf
shl
pmaddwd
add
sbb
ss
js
sbb
mov
inc
push
int3
fsin
sbb
push
mov
adc
cmp
adc
or
cwde
jmp
fadd
push
add
jmp
mov
pop
add
push
(bad)
lock
call
jge
das
jle
cmp
out
(bad)
loope
popa
and
push
lea
loop
in
cmps
xchg
loope
add
int
pop
dec
lods
std
mov
pushf
and
or
psllw
pop
fnop
add
add
outs
xor
inc
ret
xchg
jae
push
inc
xor
cwde
adc
fld
cmps
fimul
adc
cmp
mov
cmp
xor
loope
mov
sbb
adc
inc
arpl
lea
loopne
or
psubsw
inc
and
xchg
inc
add
jae
cli
jbe
outs
mov
rcl
jl
jbe
in
retf
and
scas
xor
hlt
and
push
push
leave
add
jb
into
xor
pop
in
inc
pop
leave
fs
inc
or
out
fsubr
aas
das
mov
dec
out
jl
add
sub
mov
mov
inc
adc
jae
jno
dec
mov
jle
fwait
mov
xchg
mov
in
rol
sub
adc
or
or
sbb
jmp
loope
adc
jbe
mov
rep
inc
call
cmc
xor
sbb
rcr
int3
sbb
mov
add
pop
shl
xor
popa
or
mov
out
lock
xor
cli
jo
cmp
xor
div
stc
not
add
das
adc
xor
addr16
jae
sub
sbb
fst
into
mov
mov
cmps
push
mov
dec
imul
lock
add
mov
in
int
repnz
scas
mov
push
mov
mov
cmp
fisttp
outs
shl
adc
mov
sbb
dec
xchg
mov
dec
ja
aam
jecxz
aas
into
xchg
mov
adc
jb
jne
sar
fcomp
mov
in
ja
std
cmp
scas
aam
es
dec
xlat
mov
inc
xor
fimul
dec
out
and
sbb
mov
test
push
fmul
jp
mov
sub
jmp
loope
daa
rcr
mov
mov
pop
jg
xchg
jl
push
and
out
cmps
jno
std
or
fld
arpl
adc
xchg
mov
cdq
test
jae
jle
mov
in
dec
dec
xchg
push
cmp
fadd
cmps
jecxz
xor
pop
das
arpl
scas
push
mov
rcr
or
or
jmp
inc
out
nop
sbb
sub
mov
test
mov
jne
ret
adc
pop
ja
or
out
test
sub
sub
jno
sbb
imul
loopne
adc
test
xchg
mov
adc
dec
mov
add
push
test
xchg
shr
push
pop
cmp
inc
push
inc
jmp
or
lahf
cwde
imul
or
std
jne
jne
xor
pop
lock
(bad)
dec
jmp
xlat
setnp
xchg
ss
sbb
vpminud
scas
enter
cmp
shr
div
mov
pop
fcom
aas
dec
push
inc
int3
jge
dec
add
mov
out
stc
add
inc
mov
fmul
iret
add
scas
retf
add
xchg
dec
pop
adc
mov
push
adc
popa
nop
test
mov
pusha
loope
fs
adc
fwait
and
xchg
lods
pop
add
(bad)
and
jp
or
jge
cmp
xor
js
stos
pushf
push
or
pop
dec
xchg
stos
outs
inc
pusha
mov
cmp
iret
inc
dec
aaa
sub
xchg
xchg
test
loop
xlat
jmp
ror
mov
mov
push
ret
jl
inc
sub
mov
xor
test
ins
les
xor
lea
(bad)
retf
mov
int3
sbb
add
adc
inc
or
add
mov
fmul
scas
push
popa
sub
sti
jmp
fwait
stos
lahf
xchg
mov
sbb
and
cld
lock
inc
cmp
div
push
sub
add
aam
ds
call
mov
mov
dec
dec
mov
push
or
shr
loopne
cmp
popw
lods
sub
mov
jl
or
(bad)
jp
pand
sti
mov
mov
hlt
clc
sub
mov
and
pop
int
push
(bad)
arpl
fsub
jns
int3
call
dec
mov
dec
(bad)
daa
out
lods
add
xchg
sub
inc
addr16
movs
mov
mov
shl
xor
mov
sbb
sahf
scas
mov
mov
retf
pop
pop
ja
(bad)
and
and
mov
sub
in
jo
add
inc
xor
imul
xchg
jmp
xchg
pusha
sbb
push
jecxz
jecxz
sub
cmp
aas
or
popa
mov
int
and
push
out
push
mov
cmps
mov
mov
jmp
xor
and
pusha
xor
inc
ret
xchg
fdivr
mov
xchg
or
data16
(bad)
leave
inc
cs
ficom
jl
push
cmps
aas
add
sub
sub
mov
(bad)
inc
aam
aad
add
xlat
pop
les
fld
(bad)
and
or
popf
mov
cmp
cmp
out
dec
add
pop
mov
or
xchg
fcomp
aas
and
int
xchg
outs
adc
(bad)
mov
inc
sahf
loope
jge
es
jg
jg
aam
int
mov
addr16
mov
je
add
mov
add
pop
rcl
push
das
fild
push
jecxz
(bad)
loope
lods
cmp
mov
xchg
stos
cmp
push
pop
sub
retf
cli
pushf
or
mov
outs
cmp
cld
test
lock
adc
inc
lahf
dec
push
int3
xchg
add
sbb
inc
leave
mov
jns
mov
call
push
ins
js
(bad)
ffreep
fsub
push
push
mov
loop
das
aad
addr16
test
fdivr
mov
sti
pop
repz
add
adc
pop
mov
outs
jne
movs
add
pop
movs
int3
xchg
xor
add
inc
imul
mov
mov
add
dec
aaa
add
sbb
aam
pop
fwait
clc
fnstenv
cmps
add
cmp
aaa
shr
cmps
pop
adc
inc
fs
dec
aam
xchg
bound
push
xchg
push
(bad)
test
test
test
dec
push
jo
xchg
xlat
lds
mov
hlt
inc
push
ins
in
pop
(bad)
hlt
jns
stos
inc
adc
sub
ret
punpckhwd
cld
cmc
adc
out
div
repnz
mov
jl
xchg
sub
inc
xchg
inc
jg
jb
adc
inc
in
add
inc
jo
popf
test
sbb
jne
jl
mov
int3
pop
test
mov
fdivr
jmp
inc
sbb
sbb
pop
jecxz
pop
push
push
sbb
fxtract
xchg
adc
stos
or
xchg
add
stos
dec
sub
xor
out
push
add
mov
stc
cmp
xchg
dec
out
arpl
jmp
or
xchg
sub
or
and
mov
inc
test
jg
sub
fucom
pop
cmp
mov
push
sbb
mov
popa
int
cmp
jl
es
movs
or
pmaxub
push
and
xchg
test
retf
push
je
push
add
pop
push
cmp
add
push
outs
in
retf
xchg
out
fwait
retf
cmp
inc
mov
xor
inc
into
clc
retf
cmp
xchg
scas
xor
jnp
shr
mov
les
jne
pop
std
sahf
js
mov
dec
mov
push
ins
mov
stos
test
bound
pop
push
sub
(bad)
test
fdivrp
daa
cmp
push
jbe
mov
(bad)
cld
iret
stc
mov
add
pop
adc
mov
js
(bad)
push
es
mov
sub
cmp
pop
pop
xlat
loop
jno
mov
test
(bad)
sbb
hlt
test
dec
push
and
push
dec
add
mov
mov
pop
mov
jmp
adc
scas
popf
jmp
dec
push
imul
sub
fsubr
xchg
mov
pushf
or
pop
cmc
mov
xchg
jp
adc
mov
xlat
cld
ret
hlt
sub
jae
adc
dec
dec
xor
frstor
retf
dec
xchg
xchg
fst
loope
test
push
or
jne
xor
daa
mov
mov
scas
jbe
adc
jge
pop
or
(bad)
clc
sub
ds
scas
cwde
mov
add
sub
dec
jmp
jg
rol
add
in
pop
fdivr
psubusb
lds
add
out
xchg
cmp
cmps
mov
out
inc
adc
ror
push
out
sti
mov
test
push
and
mov
jp
sub
fwait
aas
dec
fstp
fwait
push
xchg
and
shl
push
pop
cmp
push
sahf
test
push
pop
pop
(bad)
pop
adc
pop
push
jl
inc
mov
retf
out
es
or
push
mov
add
jnp
sub
ins
mov
mov
repz
xchg
xchg
mov
adc
and
loope
into
jecxz
jmp
mov
adc
lds
aaa
inc
or
and
mov
iret
ins
and
sbb
or
out
mov
cmps
mov
(bad)
sbb
dec
lea
sahf
cmp
int
jbe
test
lods
mov
cmps
clc
fld
inc
cmc
std
xor
pop
rcl
aaa
cmp
je
retf
add
pop
jbe
ficomp
into
loop
sub
fcom
adc
lea
out
rcr
dec
sbb
mov
sbb
mov
jne
dec
inc
push
xor
int
adc
cmp
repz
pop
cwde
cmps
iret
icebp
enter
mov
xchg
cwde
loopne
mov
in
ds
mov
adc
dec
xor
add
push
cwde
sub
inc
lods
jmp
popa
xor
loope
mov
pusha
js
(bad)
in
sub
jl
lods
iret
sti
xor
cmps
das
call
fiadd
adc
out
ret
out
dec
test
sub
gs
test
adc
pop
xchg
iret
loop
dec
push
popa
rcl
sub
nop
pop
push
out
aam
outs
sti
adc
mov
lahf
test
xor
pop
loop
cmps
jmp
sub
dec
xchg
push
xor
ins
xchg
cld
(bad)
pop
jns
gs
inc
fimul
adc
pop
enter
pop
call
imul
pop
mov
into
dec
mov
xchg
sti
shl
mov
outs
lods
sub
cmp
pop
mov
shl
pushf
xor
or
fs
mov
shl
sbb
ins
or
das
sahf
add
imul
mov
fcomp
or
mov
es
and
inc
fbld
fwait
pop
retf
ins
stc
dec
enter
scas
in
jg
fiadd
add
pop
repnz
lds
(bad)
retf
inc
inc
xor
jae
push
out
mov
xchg
imul
pop
sbb
pop
push
inc
cli
inc
pop
jb
add
fcom
adc
inc
xchg
(bad)
or
pop
sub
ret
pop
shl
add
out
inc
cmp
loopne
jmp
icebp
jmp
stc
xlat
lock
pop
cmp
sub
sub
inc
(bad)
stos
mov
icebp
add
clc
repnz
fmul
out
sbb
mov
jno
push
fimul
ror
retf
clc
and
and
(bad)
adc
jg
mov
mov
xlat
gs
popf
xchg
rcr
inc
dec
pop
mov
xchg
lods
addr16
jmp
xchg
pop
add
mov
xchg
fwait
mov
mov
cmp
data16
sub
popa
int3
out
(bad)
stc
or
adc
mov
or
jg
cmp
loope
dec
jbe
sbb
dec
sbb
mov
(bad)
sub
cmc
jns
call
bound
xchg
pop
je
jmp
cmc
xor
pusha
popa
or
dec
popa
jbe
(bad)
adc
out
dec
scas
mov
push
mov
outs
or
xchg
jl
add
push
pop
loopne
sahf
cmp
xchg
cmp
out
dec
hlt
jmp
rol
push
shr
push
enter
pusha
into
jne
loope
(bad)
jnp
add
lea
leave
cmc
sbb
out
mov
(bad)
aad
and
js
pop
push
mov
sbb
cmp
push
ret
jno
pop
jo
pop
jb
out
lods
jmp
mov
cdq
push
inc
je
jb
jmp
jle
lods
push
mov
dec
xchg
xor
jecxz
fst
jge
(bad)
adc
cmp
add
lds
mov
mov
or
or
popa
jno
into
loope
(bad)
scas
cmp
cmps
ret
jecxz
rol
and
sar
xchg
shr
call
dec
and
out
cmp
scas
jbe
in
jmp
add
pcmpeqw
leave
sbb
xor
stos
inc
jno
das
jo
out
sub
jg
fs
xchg
xchg
jae
push
arpl
push
xor
mov
cwde
ins
fld
(bad)
in
lahf
adc
repnz
das
pop
dec
sub
xor
cdq
out
add
add
xchg
push
and
aas
hlt
nop
pop
movs
jae
ss
(bad)
jmp
ret
sub
rcr
mov
mov
scas
arpl
mov
fld
pop
pop
adc
aad
dec
jno
aas
neg
movs
scas
push
aaa
aam
imul
cdq
pop
iret
hlt
inc
cdq
js
ret
cmp
mov
lds
mov
fwait
pop
loopne
pop
mov
add
inc
push
jbe
in
jae
(bad)
repnz
add
jge
lods
mov
adc
mov
xchg
cli
call
dec
and
fld
es
add
mov
mov
scas
data16
fidivr
daa
pop
aaa
std
cmps
jne
dec
out
pop
das
sub
pop
dec
ret
fiadd
das
out
add
mov
std
ss
sub
in
mov
inc
lods
adc
outs
cmp
test
fwait
sub
test
fbstp
popf
jo
packsswb
in
inc
rol
mov
fst
nop
mov
jae
(bad)
jp
xchg
xor
ja
mov
jg
test
pop
xchg
retf
loopne
repnz
dec
or
je
bndstx
cwde
leave
in
retf
imul
sub
mov
call
mov
out
call
push
and
mov
test
movs
mov
cwde
dec
lock
mov
and
mov
ror
hlt
out
pop
adc
push
aas
loop
xchg
mov
ds
pop
mov
push
inc
push
fbld
mov
es
int
inc
mov
hlt
(bad)
mov
pop
mov
adc
xchg
mov
mov
frstor
imul
dec
ins
push
mov
push
cdq
push
mov
not
movs
repnz
rcl
test
mov
xor
mov
mov
(bad)
leave
xchg
pop
data16
and
pop
fcom
inc
jl
push
jmp
pop
dec
xchg
sbb
add
cmc
push
fst
fdivr
or
xor
and
push
cmp
loope
cmp
push
jecxz
test
je
pop
int
aaa
(bad)
outs
xchg
int
add
xchg
and
inc
mov
jmp
mov
adc
idiv
cmps
inc
or
mov
jbe
xchg
mov
test
inc
sub
test
fadd
cli
call
test
adc
xchg
aam
enter
(bad)
rsqrtps
mov
jp
xor
and
xchg
fild
imul
imul
je
add
add
neg
add
arpl
pusha
jp
sbb
sti
fldcw
daa
sbb
fistp
iret
push
dec
les
ins
jbe
stc
pop
mov
popf
jg
jns
(bad)
and
xor
xor
call
popa
jmp
push
jl
call
fsubr
fidivr
in
dec
call
add
and
aaa
call
mov
aas
push
nop
jb
or
in
lods
iret
cmp
jbe
imul
push
cmc
sbb
shl
dec
xor
jp
in
aas
cld
mov
loope
pop
sti
clc
xor
data16
xchg
or
ret
int3
dec
outs
jo
sbb
pusha
es
inc
jmp
and
nop
and
(bad)
push
loopne
adc
jmp
into
std
sbb
mov
iret
cli
xor
mov
lods
adc
int3
dec
in
dec
jp
loope
test
dec
mov
int3
(bad)
lods
mov
pop
adc
pop
jmp
jmp
outs
rcr
adc
sub
in
inc
popf
xor
dec
shl
adc
in
pop
retf
les
sub
fdivr
rol
inc
cmp
nop
dec
fisub
popf
add
cmp
pop
xor
dec
ror
mov
pop
loop
cld
imul
cmp
sbb
cmp
loope
sbb
push
mov
xlat
jno
sbb
mov
inc
dec
pop
repz
shr
push
loope
sub
jge
sbb
hlt
jle
xlat
fisttp
mov
fadd
inc
xchg
push
out
fidiv
cmp
cmc
enter
mov
rcl
test
inc
int
lock
mul
or
push
aas
jno
(bad)
gs
loop
pop
sub
xchg
mov
retf
dec
pop
sar
fst
aaa
jo
or
xchg
popa
cmp
stos
dec
shl
ja
mov
mov
js
test
push
fnstcw
mov
popa
sbb
or
add
ds
pop
dec
cdq
mov
mov
enter
dec
inc
(bad)
xchg
(bad)
ins
mov
mov
xchg
mov
adc
ret
or
loopne
add
mov
jns
xor
int
ins
ficom
pop
and
xchg
rcl
jbe
jmp
sub
cmps
dec
bound
mov
and
neg
pushf
push
cmps
adc
sbb
jmp
cmp
dec
sbb
xor
sar
cmp
fdivr
outs
or
shr
shl
cmp
out
leave
hlt
jae
das
sub
out
lods
push
int3
jns
int3
mov
sbb
in
psraw
pushf
cmc
mov
push
icebp
retf
xchg
clc
outs
push
cwde
out
not
adc
xlat
and
pop
pop
inc
aad
add
hlt
sbb
cmps
fcomp
mov
movs
adc
sti
cmp
inc
xor
ins
xchg
imul
mov
(bad)
int3
sbb
xor
dec
sbb
cmp
push
out
inc
xor
inc
mov
(bad)
js
inc
scas
lahf
ins
adc
jmp
inc
inc
loop
mov
data16
pusha
push
cmp
ss
jno
jmp
outs
mov
sub
xor
cwde
js
adc
dec
jmp
mov
inc
cmp
adc
fdivrp
sub
pop
(bad)
mov
in
retf
imul
scas
clc
ret
retf
push
fisub
mov
mov
push
pop
adc
test
cwde
repz
neg
out
or
and
adc
addr16
(bad)
jmp
mov
xor
mov
ins
xchg
test
jmp
push
push
mov
out
and
dec
jmp
lea
fwait
add
les
cmp
into
mov
or
retf
pusha
cmp
ja
xchg
lea
mul
mov
sbb
and
loop
outs
and
inc
test
out
hlt
push
popa
push
call
das
out
iret
sub
arpl
or
dec
int3
mov
arpl
push
repnz
sub
lahf
and
push
mov
outs
call
inc
jmp
enter
mov
arpl
push
dec
in
dec
nop
adc
pop
mov
fs
sbb
pushf
dec
sbb
fnstenv
sbb
xchg
add
inc
test
popa
in
sub
pop
in
pop
xor
call
in
js
in
loope
push
pop
imul
mov
fdivr
sbb
ret
enter
in
mov
fs
loope
and
inc
pop
call
clc
push
push
dec
xor
and
pop
into
xchg
mov
nop
int3
cmp
retf
cdq
popf
cmp
popa
call
(bad)
icebp
ret
in
mov
dec
data16
je
xchg
call
push
(bad)
xor
ja
mov
fwait
cmc
lea
push
mov
call
jnp
gs
arpl
in
repnz
or
sub
push
pop
inc
rcl
in
xor
inc
cdq
loope
add
lock
cs
loop
and
mov
xor
shr
sub
add
ins
or
(bad)
pop
pop
mov
je
(bad)
call
add
push
data16
sub
mov
xor
imul
cmp
jecxz
push
imul
jecxz
mov
cmps
dec
mov
inc
xor
clc
and
and
outs
rcr
push
xchg
cwde
push
jmp
and
(bad)
shl
shr
pop
xor
fwait
jl
in
jno
cmp
xor
pusha
jl
dec
aad
xchg
aad
xor
xor
ds
pop
out
cwde
iret
add
jb
push
out
mov
add
jg
add
jge
xchg
and
adc
xor
jge
or
and
push
adc
mov
cwde
xor
call
sbb
mov
lods
push
mul
mov
shr
pushf
movs
inc
(bad)
icebp
jno
and
jo
sub
shl
sbb
push
inc
pop
nop
inc
push
scas
sbb
adc
stos
pop
mov
add
cmp
test
gs
xchg
xor
mov
dec
pop
in
inc
int
retf
jmp
jb
call
xor
mov
mov
stos
aad
je
or
movs
mov
addr16
cmp
fwait
mov
jle
popa
aad
add
leave
add
out
or
push
push
popf
neg
and
mov
pop
addr16
pusha
out
retf
push
lods
push
xor
mov
icebp
xchg
fidivr
clc
and
clc
xor
cli
ja
pop
aad
pop
cli
(bad)
popf
arpl
xchg
pop
(bad)
mov
(bad)
ror
mov
inc
out
je
mov
add
movs
dec
pop
(bad)
push
mov
rcr
jmp
(bad)
dec
jg
daa
in
jmp
lods
mul
fisubr
cmps
mov
sti
aaa
sbb
jle
ds
test
adc
mov
daa
mov
inc
fs
sbb
bound
sub
sub
fcom
in
cmps
inc
sub
pop
cmpxchg
jl
std
out
repnz
dec
jno
fisttp
and
sbb
pop
adc
das
mov
mov
arpl
clc
movs
lock
loop
stc
pop
vmwrite
pusha
inc
push
arpl
sub
shr
inc
loopne
fcom
fldcw
ret
jb
pop
shr
add
addr16
add
mov
lock
mov
(bad)
cmps
ret
fisttp
push
sti
mov
cdq
or
or
adc
xor
loop
dec
xchg
gs
adc
and
sbb
inc
(bad)
inc
xchg
int3
stos
mov
or
ja
cmovg
int
push
dec
aas
jecxz
arpl
ins
mov
inc
mov
std
rep
adc
out
out
call
in
cdq
imul
sbb
imul
(bad)
enter
daa
repz
push
mov
inc
or
mov
dec
add
lods
pop
inc
test
and
retf
push
ret
pop
inc
mov
bound
stos
mov
xor
sar
rcl
(bad)
pop
sbb
in
cli
call
xchg
repnz
mov
jbe
mov
movs
popf
int
fs
cmps
cmp
aam
sbb
xor
sub
mov
jo
stos
cli
dec
mov
daa
in
xlat
adc
adc
cwde
pop
popf
add
ret
gs
cmps
cmc
jle
xchg
xchg
adc
add
jmp
mov
cmps
in
outs
pop
je
mov
out
inc
mov
fstp
fcomp
push
mov
loopne
mov
sar
scas
add
mov
rcl
pop
cs
pop
cmc
fld
sar
fldenv
mov
icebp
push
jne
shr
mov
xor
nop
les
mov
jne
sub
or
jg
xchg
cmps
cdq
fadd
xlat
cmp
add
add
push
or
les
cmc
fimul
sti
dec
test
lds
dec
mov
jp
fwait
adc
call
cmp
push
mov
push
shl
xor
jae
mov
out
pop
mov
mov
mov
cdq
mov
inc
pop
xchg
ins
jmp
popa
xchg
(bad)
test
aad
ror
mov
pushf
mov
dec
pop
xor
out
cmp
sbb
pop
jb
push
pop
(bad)
movs
pop
sbb
add
cmp
add
xor
(bad)
mov
ret
fnstcw
inc
push
sub
mov
cli
dec
shl
pop
pop
mov
inc
cmps
xchg
in
out
aad
xchg
mov
gs
inc
or
aaa
iret
xor
jmp
outs
(bad)
fstp
ror
xchg
lock
out
(bad)
mov
xchg
jnp
mov
std
jo
outs
push
jne
add
ss
imul
xchg
push
loopne
or
adc
daa
pop
cs
inc
xchg
adc
xor
lea
mov
cmp
js
arpl
xor
adc
or
jmp
mov
test
xlat
ror
jp
sahf
jmp
cs
jmp
movs
dec
retf
out
or
adc
xor
cmp
sar
push
cmp
mov
gs
pushf
outs
or
pop
push
pop
mov
jo
jno
lock
inc
xchg
xor
adc
push
mov
mov
mov
ror
pop
les
mov
cmp
lods
aad
push
shr
xchg
stos
jmp
ror
push
sub
xchg
jecxz
adc
retf
inc
dec
into
push
aaa
mov
pop
or
cld
fdiv
aad
call
pop
mov
ins
dec
dec
iret
lahf
arpl
sbb
adc
inc
jle
ficomp
int
add
jp
xchg
mov
data16
les
ret
or
cdq
jb
add
pop
sub
or
in
pop
push
rcr
sub
sbb
test
jg
or
pop
leave
into
retf
add
xor
sbb
push
sbb
(bad)
int3
cli
dec
cmp
(bad)
fcom
retf
test
and
push
nop
mov
mov
stc
mov
mov
cmps
lock
adc
pop
fucomi
mov
in
imul
mov
adc
jl
push
(bad)
sub
cmp
sub
mov
popf
xchg
fisubr
cmp
aaa
dec
cmp
fisttp
cmc
js
ins
dec
daa
hlt
lods
aaa
dec
imul
sbb
jb
fidivr
sub
cmp
xchg
lods
cmps
fist
hlt
aam
out
and
mov
adc
aaa
dec
xchg
jo
cmp
sbb
mov
mov
inc
add
push
lds
sub
and
adc
push
pop
mov
inc
fisttp
(bad)
mov
jb
stc
push
fst
pop
pop
cs
sub
adc
adc
mov
ds
inc
ds
shl
jge
ss
nop
inc
pusha
xchg
popa
jo
call
dec
mov
sbb
and
scas
adc
pop
sahf
fwait
pop
sbb
sub
(bad)
aas
fmul
out
inc
daa
stos
shl
add
rcr
add
push
push
retf
test
int
mov
fisub
xchg
xchg
lock
xor
or
jge
ins
fnstsw
in
sub
push
shl
aad
xor
jne
shr
js
mov
sbb
inc
and
sub
int3
hlt
or
ror
sub
out
jno
xor
mov
sub
ror
ins
jge
sub
ja
leave
xchg
je
out
push
retf
or
mov
out
addr16
outs
mov
or
lock
shr
lods
icebp
jae
gs
jmp
inc
test
add
cmp
shr
out
shr
dec
loope
dec
xor
pop
inc
inc
into
push
int3
mov
push
fisttp
adc
inc
cmp
mov
xor
sub
fld
inc
cmp
adc
inc
lds
(bad)
jnp
call
das
fmul
into
cmps
fdivr
sub
xor
and
or
adc
add
inc
test
pop
xor
mov
xor
push
sti
adc
adc
out
btr
cmp
std
xor
in
push
pop
leave
aas
sub
not
test
push
dec
sub
mov
inc
imul
xchg
fmul
adc
imul
xor
cwde
hlt
mov
pop
scas
add
gs
lea
repz
ins
xor
sbb
retf
fwait
pushf
push
sub
lahf
arpl
adc
enter
enter
jl
push
mov
jbe
adc
jns
mov
ret
mov
adc
(bad)
push
add
pop
mov
dec
xor
adc
mov
dec
lock
adc
ror
popa
adc
div
in
lea
xor
mov
cmp
imul
xchg
sub
jge
mov
test
sub
add
cmp
mov
fnstenv
in
repz
sbb
sbb
call
cmp
xor
pop
inc
or
push
popf
mov
add
rcl
dec
retf
and
dec
cwde
push
cmp
mov
hlt
iret
push
mov
jecxz
pop
dec
in
mov
out
ja
leave
jmp
int3
movs
add
adc
icebp
cs
repz
mov
mov
enter
jle
(bad)
bound
push
mov
(bad)
arpl
mov
jmp
mov
dec
imul
mov
jns
mov
shr
add
aaa
retf
fprem1
push
enter
dec
popa
std
ins
movs
pushf
mov
aas
sbb
mov
dec
call
xchg
sbb
jmp
push
out
dec
clc
fld
test
add
xor
sub
mov
ror
push
cwde
rcl
imul
inc
push
js
adc
cmp
jl
inc
mov
jne
mov
fidivr
idiv
cli
sbb
push
sub
jo
(bad)
iret
jp
ins
dec
dec
aam
fldcw
icebp
arpl
sbb
mov
inc
mov
mov
lods
push
cmp
sbb
loopne
pop
sub
in
jecxz
idiv
in
stos
and
sub
push
in
sbb
or
xchg
inc
and
cwde
jae
popf
inc
outs
add
imul
adc
inc
stos
inc
or
mov
shr
xchg
xchg
or
push
int
arpl
and
scas
imul
cmp
and
xor
push
ins
inc
mov
lods
add
loopne
sar
pop
jns
dec
icebp
es
ds
ror
jae
pop
xor
and
punpckldq
jge
(bad)
jl
scas
bound
cmp
popf
push
add
dec
add
fistp
add
and
push
fwait
cmp
out
inc
push
ficom
add
cmp
retf
adc
ins
jb
cmp
mov
arpl
mov
inc
cdq
in
mov
popa
xchg
adc
xchg
mov
xchg
in
(bad)
xor
aam
mov
add
test
stos
lea
dec
popf
aad
sub
jl
stos
mov
imul
adc
iret
arpl
jne
jecxz
in
test
lds
xchg
adc
loop
repnz
loope
lahf
jmp
xor
sub
xchg
and
dec
xlat
xchg
push
enter
mov
int
fs
rol
xlat
xchg
pop
fimul
mov
or
push
xchg
mov
dec
(bad)
(bad)
imul
and
out
push
shr
and
fmul
mov
arpl
out
inc
mov
imul
out
fcomp
inc
sub
xchg
push
cmp
std
push
xchg
mov
or
push
sbb
(bad)
leave
cmps
xchg
je
and
lock
rol
lock
xor
retf
sti
bound
xor
ret
(bad)
jo
aas
mov
mov
xor
sti
mov
jl
push
xchg
or
sub
xchg
cmp
jo
loop
mov
pushf
call
lods
fstp
gs
sbb
cmp
xor
sub
fwait
mov
cmc
ja
int
mov
push
rcl
loope
sub
jge
push
or
mov
xchg
inc
jo
inc
nop
xor
xor
push
mov
lock
in
adc
cmp
push
jge
xchg
jnp
push
in
fwait
inc
dec
mov
mov
(bad)
push
adc
cmp
iret
inc
test
cdq
call
add
sub
mov
hlt
push
cmp
fstp
and
in
xchg
outs
sub
add
mov
and
stos
jmp
div
mov
and
dec
(bad)
pop
(bad)
neg
into
out
dec
sbb
and
jl
in
push
fmul
mov
jno
pop
sub
into
aam
fsub
xchg
jnp
inc
mov
mov
aaa
inc
pop
in
inc
mov
rol
sub
pushf
(bad)
xor
adc
shl
sbb
jae
test
nop
dec
mov
fnstcw
loopne
cmp
jmp
pop
mov
xchg
shl
mov
xchg
movs
or
mov
jae
adc
(bad)
lds
jge
nop
call
and
mov
test
and
inc
jb
popa
pushf
mov
pop
inc
adc
sub
shr
jbe
push
adc
iret
call
pop
mov
pop
test
clc
inc
push
xor
retf
and
xlat
sbb
gs
div
dec
rcl
daa
scas
jecxz
bound
inc
pop
cmps
std
loope
add
hlt
pop
into
data16
test
or
cmc
sub
sahf
and
pusha
mov
or
out
dec
sbb
mov
popf
mov
add
push
adc
push
sub
sti
retf
sub
(bad)
retf
mov
test
pop
mov
xor
sub
ja
ins
inc
sub
sbb
inc
bound
mov
mov
jmp
and
adc
imul
add
into
mov
sub
mov
mov
push
arpl
sahf
retf
cli
in
xchg
fnstenv
pop
fsubr
data16
out
xchg
popa
cmp
aaa
adc
jl
addr16
dec
popf
adc
cmps
xchg
in
fistp
gs
lock
(bad)
xor
lods
nop
mov
mov
adc
cmc
mov
sahf
clc
jmp
jnp
adc
jno
xchg
fisttp
mov
dec
jge
inc
fs
jb
lods
sub
jg
cmp
out
cmp
clc
retf
ja
call
sbb
push
neg
xor
push
test
enter
pop
xchg
or
adc
xchg
int
push
add
inc
push
push
sbb
xor
add
xlat
mov
jecxz
pop
cmp
and
clc
adc
mov
pop
popf
pop
push
xchg
cdq
xchg
ds
ds
ins
repnz
test
cmp
mov
mov
sbb
sub
jmp
mov
ret
lock
jno
ins
(bad)
(bad)
lds
xchg
pop
jno
sub
or
sbb
mov
js
and
and
dec
mov
sbb
pop
lahf
pop
repnz
pop
ins
dec
pop
cmp
or
jg
stc
cmp
nop
out
stos
mov
dec
mov
jmp
push
or
aam
fimul
jmp
out
jmp
in
push
inc
dec
shl
or
aas
sub
dec
(bad)
xchg
push
push
lock
push
mov
in
xchg
sub
test
inc
pop
inc
jno
push
xchg
ss
outs
clc
adc
xchg
dec
fwait
xchg
xlat
fcomp
fcom
sbb
(bad)
sahf
retf
cmp
mov
and
lods
es
mov
popf
stc
cmp
dec
adc
cmp
outs
push
test
jp
pop
pop
iret
gs
cmp
inc
pop
cmp
cmp
jecxz
mov
mov
mov
add
enter
xchg
test
lock
out
inc
fcom
aas
sbb
(bad)
or
and
scas
cwde
sbb
or
sub
xchg
gs
pop
xor
(bad)
loop
adc
and
cmc
inc
mov
adc
les
dec
imul
jnp
sbb
(bad)
clc
test
jbe
repz
aam
inc
jbe
xor
inc
fwait
add
dec
xchg
test
xlat
outs
mov
push
dec
or
add
icebp
dec
shr
mov
mov
adc
es
fst
(bad)
clc
lods
mov
add
sbb
hlt
les
jl
test
mov
inc
pop
call
lea
pop
mov
adc
sub
or
les
jnp
js
inc
mov
mov
push
std
cmp
xor
mov
sbb
add
push
or
jmp
jnp
push
gs
int
je
inc
imul
or
and
adc
push
push
cmp
ror
enter
call
jl
push
test
repnz
pop
in
adc
xlat
sub
cmc
sbb
push
retf
fdivr
and
mov
in
sbb
push
adc
mov
pop
ins
mov
shl
dec
ret
add
push
add
bound
stos
push
jge
push
adc
fadd
dec
sub
jo
icebp
push
adc
cs
or
in
call
pop
fs
push
shr
mov
pop
mov
popa
adc
xchg
(bad)
push
pop
in
std
and
jge
inc
adc
mov
and
ins
cmps
mov
call
(bad)
adc
and
add
leave
jne
xor
cmps
cli
xchg
ins
dec
push
cmc
pop
jno
mov
dec
xor
cmps
inc
stos
mov
mov
pop
lahf
cmp
cmp
sar
mov
sub
fwait
dec
dec
xchg
dec
lea
jnp
ret
sbb
ror
xchg
inc
push
fiadd
inc
pushf
push
into
scas
jbe
cld
adc
sti
lds
pusha
adc
add
cmps
push
stc
shr
shl
ins
cmp
ins
inc
or
pop
call
rcr
mov
iret
stc
inc
addr16
dec
jl
clc
pop
ins
lods
mov
xor
inc
and
pop
jne
fwait
js
ret
ret
xor
xor
dec
mov
lea
mov
jmp
test
adc
pop
push
adc
std
sub
les
pop
fbstp
dec
mov
push
dec
adc
or
frstor
jnp
push
xchg
outs
leave
es
lock
xchg
icebp
scas
sub
fstp
and
outs
out
aas
or
(bad)
push
jmp
pop
retf
push
neg
jbe
outs
in
jbe
scas
cmps
test
and
test
xchg
jnp
adc
push
sub
in
and
je
inc
ret
ins
sub
neg
in
mov
and
jns
xor
pop
fmul
jo
cmp
xchg
cmc
mov
mov
inc
jle
xor
adc
sub
and
jmp
enter
or
test
jecxz
fnstsw
adc
leave
outs
sub
loope
or
popf
or
ss
rcl
ret
in
ins
aas
jl
push
adc
jb
or
dec
les
hlt
cs
(bad)
sbb
aad
cdq
movhps
jg
das
unpckhps
out
xchg
(bad)
(bad)
pop
les
lock
dec
outs
inc
sar
fist
or
int3
adc
xor
shr
xlat
inc
push
or
(bad)
sub
push
pop
mov
sbb
jg
(bad)
repnz
sbb
fcomp
out
push
sbb
mov
sub
push
mov
repnz
retf
into
outs
add
shr
mov
popa
inc
xchg
mov
out
leave
sub
je
sub
ins
jnp
out
jmp
test
(bad)
sbb
cmp
(bad)
mov
adc
pop
mov
jecxz
mov
jno
pop
sbb
xchg
mov
xor
mov
clc
push
std
mov
ds
popf
add
push
scas
sub
fdiv
(bad)
cmp
xchg
add
xor
cmp
addr16
retf
pop
xor
cmp
mov
dec
repnz
shl
jno
cmp
adc
mov
sub
jb
fisttp
test
out
xor
clc
xchg
sbb
or
adc
pop
fs
xchg
sbb
adc
pop
fstp
outs
icebp
xchg
adc
ret
xor
inc
mov
jne
cli
pop
leave
push
inc
mov
xor
add
jl
fmul
jbe
sahf
cmps
(bad)
gs
inc
xor
adc
popf
mov
ins
lods
pop
jmp
push
push
add
xchg
mov
test
test
push
jmp
div
pop
xchg
pop
dec
pop
outs
movs
mov
psraw
in
rcl
aad
xchg
popa
(bad)
sahf
popf
cli
cmps
sub
cmc
xor
pop
jmp
push
test
enter
dec
jge
xor
xor
adc
sbb
mov
cli
push
lds
icebp
fldenv
pusha
or
(bad)
fiadd
and
fnstenv
mov
ss
xchg
retf
ficomp
mov
push
add
adc
inc
fmulp
add
push
cmp
inc
mov
push
das
out
sub
or
mov
fnstcw
std
test
out
cli
pop
js
lahf
sbb
dec
jno
sar
loop
lods
dec
popa
pop
test
ret
mov
mov
sub
sub
and
jmp
outs
jp
dec
push
cmp
inc
push
sar
add
retf
in
(bad)
ja
adc
imul
bound
out
cmp
mov
fwait
pop
fiadd
pop
dec
mov
sbb
fsubr
in
daa
mov
je
movs
gs
aas
mov
in
jne
dec
ror
jbe
xor
dec
(bad)
leave
in
repz
in
mov
clc
(bad)
std
je
xchg
jb
lea
fistp
sbb
push
ins
test
fld
fisttp
lds
and
aas
add
imul
xchg
or
or
fwait
lock
push
out
rol
dec
add
sti
pop
dec
xchg
mov
mov
or
(bad)
and
loope
sub
pop
ds
dec
cmp
in
aaa
outs
shl
mov
push
jnp
ins
les
loope
jg
dec
xor
and
call
test
mov
inc
push
loop
stos
test
pop
out
mov
sbb
scas
mov
(bad)
jno
xchg
ss
pop
imul
mov
fcomip
pop
pop
fs
pushf
test
add
nop
daa
cmp
cmp
inc
jne
pop
pushf
mov
mov
mov
pop
test
jno
fnstenv
dec
loop
test
sub
(bad)
int
ret
outs
push
fbstp
ins
or
dec
mov
mov
out
push
cmps
in
sub
loope
inc
adc
dec
cld
sub
cld
jl
mov
jmp
mov
xchg
jns
call
imul
ret
loope
movs
aaa
sbb
push
in
jae
(bad)
in
(bad)
repnz
push
sub
add
mov
inc
sahf
pop
jno
daa
je
inc
neg
xchg
mov
mov
in
ret
xchg
mov
test
cld
mov
fimul
call
cli
(bad)
jbe
inc
mov
jo
dec
pop
out
xchg
into
cmc
or
add
in
push
das
mov
sbb
xchg
popf
pop
sub
mov
xor
leave
jbe
cmp
loopne
test
push
jg
shl
dec
(bad)
aas
jmp
(bad)
imul
aam
repnz
mov
aad
push
dec
mov
stos
mov
mov
ins
xor
jb
pop
add
lock
dec
cdq
daa
dec
cmp
pop
sahf
shl
or
mov
out
adc
dec
and
retf
push
pop
sub
cmp
dec
cdq
in
add
lahf
repnz
test
sub
scas
push
mov
lods
hlt
sub
or
inc
div
imul
in
stos
js
ja
enter
adc
dec
and
and
test
cmp
fisub
xchg
call
stos
and
xchg
rol
ffreep
lds
add
adc
loope
mov
ror
jne
mov
(bad)
in
mov
add
imul
leave
cmovs
ds
pusha
push
sbb
popa
pop
xchg
into
ja
std
ins
pop
push
jae
pop
sbb
xor
pop
test
pushf
add
xchg
sti
or
shl
xor
std
push
js
or
add
aas
outs
pusha
sbb
mov
pusha
add
loope
aaa
cmp
in
xchg
movaps
lods
and
mov
sub
push
inc
sbb
gs
mov
xchg
lds
mov
test
mov
std
jp
ret
jae
(bad)
mul
int3
cmp
rcr
mov
xchg
push
push
fistp
cld
dec
and
mov
dec
add
pop
mov
jg
pop
cmps
jns
fist
into
push
daa
(bad)
(bad)
pop
test
and
xchg
test
dec
out
stc
mov
mov
ret
stc
into
out
jne
mov
in
stc
mov
shr
hlt
mov
cmp
adc
sbb
sbb
xchg
mov
pop
sub
pop
aas
rcr
data16
aaa
add
sub
sbb
sub
mov
and
dec
cmp
movs
sbb
jmp
(bad)
(bad)
mov
call
shl
adc
cdq
jmp
add
shr
test
adc
sbb
into
add
in
inc
push
adc
int3
movs
mov
adc
cdq
xor
loopne
add
inc
and
scas
push
add
popa
cmp
sti
gs
aam
push
mul
xchg
in
in
mov
inc
mov
mov
xor
jmp
cmps
mov
adc
cmc
(bad)
sbb
ja
inc
xchg
adc
jnp
cs
adc
or
mov
ins
pop
out
adc
into
jb
sub
xchg
push
jg
inc
mov
(bad)
aam
mov
outs
pop
mov
add
stc
pop
cld
jb
lock
fcom
jnp
nop
cmps
inc
sbb
cmps
hlt
dec
pop
(bad)
ins
cmp
push
cmp
sbb
jno
lar
xchg
dec
test
ds
scas
pop
push
adc
ret
push
mov
sbb
repz
repnz
cmp
dec
xchg
leave
push
sbb
inc
xchg
cmp
ins
mov
pop
jge
adc
fwait
add
xchg
pop
jg
ffreep
and
cld
fbstp
out
test
mov
xor
jns
icebp
pop
sub
adc
clc
add
adc
(bad)
pop
cmp
adc
and
jecxz
jbe
mov
inc
lds
imul
mov
inc
pop
xor
out
mov
inc
pop
rol
cwde
dec
mov
test
sti
jb
dec
out
stos
inc
add
push
in
loopne
in
sub
push
xchg
ret
inc
sub
cwde
xor
push
jmp
and
sbb
int
sub
add
arpl
push
inc
popa
xchg
mov
mov
(bad)
test
test
fisub
mov
add
fdivr
xchg
or
ret
scas
and
xor
std
out
loope
and
inc
out
pusha
mov
in
and
out
scas
cmp
sub
push
popa
mov
mov
push
jp
sbb
or
fs
adc
pop
imul
mov
and
(bad)
or
das
retf
inc
pop
daa
cld
adc
test
shl
sahf
mov
sti
jp
mov
out
xor
mov
cmp
in
xor
(bad)
(bad)
dec
mov
sbb
cwde
and
pop
mov
push
js
push
lods
ret
movs
dec
not
jae
mov
jmp
sbb
(bad)
push
shl
mov
stos
shl
sbb
idiv
call
popa
rol
sub
out
sbb
sub
mov
cwde
or
xchg
unpcklpd
jo
scas
sbb
sub
xchg
stos
shr
adc
xchg
inc
mov
ins
adc
fxch
jmp
pop
adc
sub
repnz
cmp
je
sahf
pop
jb
aaa
ins
les
or
mov
cmp
mov
test
ins
lock
pop
lds
mov
adc
sub
aaa
adc
mov
ror
mov
push
sub
inc
out
cmpxchg
dec
lods
sbb
mov
adc
push
sbb
(bad)
fbld
int
mov
jns
dec
and
jg
addr16
dec
jmp
mov
sub
lock
add
add
aaa
adc
pusha
cmps
push
pop
fnstcw
pop
dec
mov
inc
lock
mov
movs
mov
loop
popa
xor
clc
fist
jmp
adc
dec
call
or
out
js
test
jnp
bound
xchg
mov
(bad)
fwait
ss
dec
leave
mov
inc
int
and
pop
add
js
nop
adc
pop
(bad)
push
mov
lods
jnp
outs
addr16
inc
jecxz
push
loop
pop
and
xor
xchg
and
mov
lea
int3
xchg
adc
mov
out
xor
sbb
movs
gs
jb
clc
fdiv
fwait
int
dec
adc
lahf
pop
or
pop
fs
mov
add
(bad)
cmps
push
mov
es
sub
lds
and
or
mov
mov
inc
jle
sub
xchg
or
imul
and
or
call
inc
mov
(bad)
aaa
(bad)
int3
and
movs
xor
xor
ficom
pop
xor
test
or
mov
icebp
fs
(bad)
out
ficomp
xchg
mov
nop
adc
mov
push
imul
imul
pop
or
enter
loop
push
xchg
arpl
and
test
sub
les
in
adc
repz
daa
ja
or
xchg
push
repnz
dec
cdq
cmps
lock
lods
cs
mov
in
xor
jge
push
pop
imul
sub
bound
rep
mov
xor
sbb
mov
(bad)
aas
xor
pusha
call
sar
into
mov
sub
sub
rcl
jbe
aaa
ret
pop
adc
jb
push
div
mov
cwde
test
lea
into
je
popf
retf
and
add
mov
mov
cmps
scas
sbb
rcr
call
dec
stc
mov
les
int
pop
adc
and
jae
test
adc
push
push
inc
or
pop
(bad)
movs
xchg
pop
scas
xor
mov
iret
or
loope
add
ror
dec
faddp
shr
test
fnstsw
dec
adc
in
daa
inc
fisttp
lea
sub
mov
jns
or
dec
daa
call
mov
jp
dec
dec
into
loope
test
pushf
push
pop
jno
(bad)
in
mov
push
jnp
ja
mov
mov
inc
jl
xchg
ror
fstp
xchg
(bad)
pushf
mov
sbb
ud2
jg
push
and
imul
cmp
jo
cld
bound
enter
mov
movs
mov
rol
pop
jbe
aam
jae
add
inc
out
stos
push
push
dec
xchg
ins
mov
xor
pusha
pop
nop
and
mov
or
or
js
sbb
mov
test
icebp
pop
into
xchg
rol
push
fptan
mov
out
mov
xor
fstp
gs
test
dec
repz
lahf
stos
sub
add
or
fsubr
loopne
jmp
movs
outs
outs
clc
xor
and
test
leave
shr
in
repz
outs
xor
xchg
mov
jge
dec
xlat
sbb
mov
mov
ins
in
jb
push
push
fcom
lods
push
ins
mov
cld
sub
and
cdq
call
nop
mov
out
lods
pop
cmp
push
stos
fdivr
pop
inc
push
out
lahf
outs
or
(bad)
scas
sbb
or
add
aam
aas
dec
add
into
cmp
daa
aaa
mov
mov
xchg
rcl
pop
add
jecxz
das
pop
sar
pop
outs
sbb
div
pop
or
popa
(bad)
fld
stc
lds
(bad)
iret
xchg
adc
xchg
xor
inc
ror
retf
(bad)
leave
int3
cs
xor
xchg
inc
push
sbb
in
inc
jmp
call
xchg
stos
mov
dec
repz
sbb
iret
leave
enter
or
and
mov
push
cli
(bad)
cmc
jge
add
push
(bad)
mov
outs
pushf
pop
jmp
adc
adc
or
xchg
int
push
int3
push
pop
sbb
fistp
jge
push
loope
xor
or
dec
and
jl
dec
inc
push
cmp
imul
mov
outs
in
mov
outs
mov
and
lods
sub
and
dec
xchg
out
sbb
inc
out
and
and
call
ret
adc
push
mov
jnp
or
rcl
mov
shr
aaa
add
inc
jmp
movs
mov
cmps
fst
outs
cmp
mov
mov
clc
(bad)
xchg
fnstsw
loop
jp
mov
sub
jl
pop
mov
cmp
inc
mov
xchg
aam
mov
hlt
imul
jbe
xchg
xor
cmp
sub
in
dec
xchg
cli
add
sbb
cmp
and
jmp
repz
out
nop
xor
rcl
bnd
fild
aam
pusha
into
das
ror
mov
inc
mov
es
sub
data16
frstor
push
jle
into
pop
jmp
(bad)
(bad)
fmul
(bad)
inc
pusha
sub
pop
push
or
xor
in
mov
pop
aas
jne
out
pushf
dec
jae
dec
sbb
adc
jmp
popa
adc
cmp
das
scas
test
sub
loopne
mov
ja
ficom
jp
or
or
stos
xchg
push
jnp
and
jp
push
arpl
jecxz
in
inc
loope
inc
or
push
cdq
adc
ja
out
dec
and
mov
enter
into
sub
(bad)
cmps
into
jecxz
cmp
test
out
aaa
call
ror
mov
(bad)
add
fild
xchg
and
jg
jno
fwait
std
jp
mov
or
mov
pop
sahf
dec
out
jns
movs
mov
retf
imul
sbb
sbb
xchg
sbb
scas
imul
jg
fdivr
cwde
lods
dec
inc
add
mov
dec
mov
fwait
adc
ja
or
inc
push
mov
(bad)
jmp
outs
or
cwde
aas
enter
sbb
push
xor
shr
adc
jno
add
and
movs
sbb
(bad)
ins
das
(bad)
repnz
idiv
bound
jle
arpl
adc
push
arpl
daa
sub
add
and
mov
push
iret
rol
lods
repz
inc
jmp
(bad)
jae
sub
xchg
aaa
add
adc
leave
mov
pop
cmp
mov
call
jmp
sahf
adc
call
js
shl
mov
push
mov
xchg
(bad)
scas
test
mov
popa
xchg
pop
in
sub
retf
add
inc
cmp
and
shr
cwde
mov
adc
call
xchg
dec
pmulhw
dec
cld
test
mov
sbb
xor
lock
fidivr
test
fneni(8087
xor
clc
xchg
lahf
sbb
nop
lods
stos
retf
mov
or
paddw
xchg
pop
ins
xlat
jbe
jg
jmp
popa
repz
jl
ds
mov
xchg
clc
pop
pmaddwd
mov
shl
imul
push
ins
ffreep
in
dec
mov
aaa
sbb
mov
xchg
pop
or
sub
ins
jae
cld
jmp
adc
jle
aad
inc
jecxz
jae
out
or
repnz
idiv
outs
jp
inc
fild
in
mov
jae
mov
mov
and
icebp
stos
push
dec
push
add
cmp
xchg
ins
push
sbb
outs
pop
xchg
std
pop
sbb
jns
aam
and
jbe
loope
sbb
aam
push
(bad)
dec
jne
ret
stos
dec
call
dec
sbb
das
dec
bound
lods
mov
ja
push
mov
aaa
mov
jmp
popa
or
add
repnz
jmp
js
push
push
clc
sub
jb
nop
leave
inc
pushf
xor
test
test
mov
popf
lods
push
jmp
xchg
aaa
stos
pop
hlt
or
push
xor
adc
in
cdq
loope
cmp
in
jne
push
mov
out
jo
call
sub
fdivr
aaa
cmc
in
add
dec
out
xchg
push
mov
jge
in
mov
std
sub
mov
dec
jg
addr16
pop
or
pop
and
add
data16
in
cs
add
cld
mov
mov
push
jg
movs
aaa
(bad)
and
xlat
and
mov
sub
or
fcomp
fbstp
aad
fstp
in
jo
sub
xchg
shr
lea
sbb
add
push
pop
repnz
dec
in
in
stos
bound
mov
xchg
mov
nop
mov
ss
mov
fadd
dec
mov
call
in
cmp
sub
jl
das
test
xchg
pop
mov
add
mov
add
jg
or
div
dec
aaa
(bad)
sbb
jecxz
int
pop
ret
loop
rcl
ret
sub
xlat
aad
les
je
pop
jae
mov
clc
mov
pop
int3
test
sub
retf
xchg
sbb
cmc
push
sub
add
nop
adc
mov
cmps
jge
adc
dec
icebp
aam
je
sti
aad
jp
pop
xor
cmps
add
sar
dec
mov
cmc
sbb
mov
fs
mov
data16
fbld
fsubp
add
sbb
gs
pop
pop
shr
and
adc
xchg
mov
(bad)
test
dec
test
push
mov
mov
fsubr
in
fcom
mov
xor
fisub
hlt
int3
loopne
leave
retf
aas
ret
sub
test
ret
shr
rcl
stc
xor
icebp
add
mov
ror
outs
jnp
jo
jbe
(bad)
add
jmp
add
loopne
(bad)
les
sub
scas
mov
and
in
jbe
mov
mov
xchg
add
xor
retf
sub
dec
cld
push
adc
mov
push
pop
or
xor
stos
lea
sbb
aas
mov
and
repnz
fld
dec
inc
push
icebp
xchg
pop
scas
ds
(bad)
sti
or
or
arpl
fwait
loopne
xlat
mov
pop
movs
imul
fstp
scas
mov
cmp
jle
mov
ret
lea
int3
loopne
gs
mov
or
lock
push
push
cmps
and
stc
clc
retf
push
or
jmp
ja
(bad)
push
fcom
repnz
test
aad
or
push
addr16
push
mov
xor
or
mov
ja
lock
les
pop
push
hlt
ins
faddp
mov
xchg
inc
pop
pushf
pop
sbb
xchg
and
bnd
jbe
sahf
inc
in
lods
cs
jmp
mov
std
int3
xchg
sbb
mov
cmp
stc
xchg
mov
push
cmp
adc
retf
imul
push
fwait
(bad)
in
and
pop
js
frstor
push
(bad)
xchg
gs
aad
(bad)
pop
in
dec
and
add
fdiv
push
shr
adc
loope
push
ret
stos
jecxz
add
ins
clc
mov
and
dec
lods
mov
mov
jecxz
in
sub
int3
push
fs
sub
shl
imul
mov
fdiv
adc
in
aad
or
fst
xchg
cdq
mov
push
inc
adc
fwait
stos
dec
cmc
mov
int
outs
test
or
push
adc
push
je
inc
push
mov
js
add
or
out
sbb
pop
mov
mov
mov
ss
push
aas
or
aas
ja
cpuid
dec
shr
(bad)
iret
idiv
sbb
std
cwde
jmp
jmp
cli
(bad)
mov
cmps
xor
adc
ins
dec
repz
cmp
lea
cmp
into
and
xlat
shl
dec
mov
in
inc
retf
sub
dec
push
push
shl
mov
(bad)
cmp
mov
mov
ret
mov
cmp
mov
pslld
mov
nop
mov
pop
mov
xrelease
gs
addr16
aaa
or
and
push
pop
ror
aaa
inc
scas
arpl
jg
sbb
inc
jbe
sahf
push
jbe
(bad)
addr16
lea
(bad)
int3
ins
daa
sti
mov
mov
adc
cmps
(bad)
aas
fisttp
xor
mov
jmp
dec
cmc
and
out
mov
add
push
mov
(bad)
(bad)
out
jmp
xchg
cdq
sbb
push
cmps
shr
ret
movs
gs
sahf
dec
push
int3
inc
scas
push
(bad)
nop
fucom
pop
fstp
pusha
cli
cmp
mov
pop
in
sbb
stc
jbe
sbb
out
inc
(bad)
(bad)
adc
sub
mov
inc
xlat
jge
cld
in
cmp
jle
push
icebp
inc
xor
dec
inc
xchg
sar
jmp
retf
les
cld
jno
ss
adc
inc
jp
lahf
idiv
mov
pop
add
stos
pop
loop
shr
fdivr
xor
xchg
inc
push
outs
popa
xor
lds
add
xchg
adc
push
outs
ins
push
iret
es
in
jbe
lahf
sar
loop
push
cs
mov
jne
and
daa
add
pop
pop
arpl
push
sahf
dec
scas
pop
imul
rol
xor
jge
in
adc
dec
adc
js
pusha
in
(bad)
sub
mov
mov
pusha
das
aas
dec
aaa
cs
(bad)
movs
inc
lahf
jmp
add
pop
sub
stos
add
mov
inc
jl
dec
mov
sahf
(bad)
sahf
stos
fs
hlt
push
(bad)
sti
leave
sub
fs
jecxz
mov
(bad)
stos
jge
aaa
out
test
push
fimul
cmc
data16
div
jns
loope
retf
jns
push
add
ins
jp
cmps
xor
into
dec
mov
cmp
xor
cmp
and
mov
or
call
in
int
sub
push
push
xlat
cdq
xchg
aam
mov
(bad)
out
or
or
dec
fwait
ret
xor
pop
cli
ins
popf
stos
and
out
xor
push
les
int
mov
xchg
mov
out
cld
dec
stc
cmp
push
sub
jmp
in
push
push
adc
push
pop
inc
popf
sbb
cs
lods
ins
inc
dec
pushf
aas
cwde
ins
adc
pusha
xor
and
mov
jbe
(bad)
jmp
rcr
ds
pop
mov
test
ja
popa
mov
cmc
cs
sar
dec
idiv
jb
clc
aaa
dec
xor
sbb
loope
popa
inc
enter
mov
mov
adc
(bad)
push
jmp
mov
sbb
add
inc
xchg
in
xchg
sahf
(bad)
or
jge
cmps
(bad)
iret
or
movs
inc
or
xchg
jae
inc
sahf
cmp
repnz
mov
je
retf
xchg
add
imul
outs
les
inc
mov
mov
cmps
ja
dec
lds
xlat
xchg
mov
in
loopne
mov
push
sti
cs
lds
jmp
call
cmc
add
and
icebp
cwde
(bad)
dec
cmp
lahf
cwde
mov
adc
out
fnstcw
mov
adc
and
pop
jecxz
or
int3
cmp
sbb
push
cmp
ss
in
(bad)
mov
xor
xchg
imul
fdiv
jl
inc
ja
mov
fdivr
bound
push
inc
xor
call
(bad)
test
sbb
bound
dec
or
or
sbb
retf
lahf
jmp
imul
jae
sbb
inc
ss
fdivr
jne
fs
xor
dec
sub
push
pop
das
std
leave
jb
daa
mov
adc
mov
enter
sbb
out
jge
imul
daa
imul
pop
push
xchg
dec
xor
jne
arpl
xor
jle
pop
nop
retf
jnp
mov
lods
sbb
movs
pushw
test
cmp
and
mov
sbb
stos
add
adc
dec
into
cmps
(bad)
push
in
or
mov
dec
sub
inc
paddusb
mov
sub
rcl
push
in
jno
test
pop
inc
jb
push
xchg
jnp
sti
mov
mov
adc
fisttp
mov
shr
test
js
mov
sbb
sbb
cmps
adc
pop
movs
jmp
jg
les
adc
sbb
add
jo
xchg
push
repz
aas
imul
mov
fmul
pop
mov
sar
and
clc
push
mov
fdivr
xor
fmul
lahf
out
std
mov
cmp
push
dec
jne
sti
pop
hlt
dec
xchg
movs
push
or
adc
bound
push
dec
ret
sbb
and
mov
push
or
sar
sub
xchg
or
mov
push
jae
mov
lea
add
push
xchg
cdq
repz
dec
jmp
movs
fistp
sbb
test
sti
xchg
ret
es
fbld
ds
retf
int3
jno
pop
std
xchg
xor
cdq
aad
shl
xchg
push
inc
and
dec
adc
sbb
inc
out
sub
repnz
mov
retf
pop
out
sahf
retf
xchg
mov
xchg
push
dec
aad
lea
loop
ins
cmp
mov
pop
retf
ins
nop
jl
(bad)
mov
adc
rol
mov
sbb
inc
sti
cmp
xor
mov
inc
adc
pushf
out
pop
(bad)
(bad)
and
dec
hlt
stc
mov
push
push
add
inc
cmc
push
sub
jle
adc
lock
jmp
mov
add
icebp
cmp
sub
dec
dec
sub
jp
or
sbb
xchg
push
inc
sbb
outs
enter
jb
and
pop
inc
pop
mov
cmc
out
fwait
repnz
repz
add
pop
jne
jp
xor
stc
push
(bad)
stc
jnp
pop
fsubr
pop
scas
mov
inc
popa
ret
sahf
xor
adc
mov
cmps
mov
adc
adc
retf
into
adc
or
loopne
daa
mov
xor
mov
jmp
rol
ret
push
mov
arpl
lods
push
(bad)
std
push
mov
fld
pop
outs
jno
jecxz
addr16
cmp
adc
pop
popa
jne
xchg
jmp
ror
xchg
lea
retf
pop
xchg
xchg
ja
mov
lahf
xor
dec
push
sub
and
or
fdiv
add
cdq
ins
sbb
mov
sub
and
inc
push
or
adc
sbb
repnz
xchg
xchg
sub
lods
xor
(bad)
jp
push
imul
retw
dec
js
fnsave
sbb
je
pusha
int3
call
cmp
push
push
daa
inc
arpl
mov
int3
and
mov
mov
aaa
in
cmp
mov
xchg
fcom
ss
xchg
test
pop
rol
movs
sub
lods
pop
mov
pop
cmp
adc
pop
sub
push
xchg
sbb
cli
es
xor
mov
mov
out
mov
cmc
ins
ret
push
sbb
(bad)
aas
mov
inc
mov
mov
mov
mov
out
sub
jg
inc
cmp
mov
xchg
jo
sbb
idiv
pmovmskb
add
(bad)
cli
dec
adc
jnp
mov
sti
pop
lods
leave
dec
shr
std
gs
push
xor
inc
jae
adc
sub
cmp
mov
out
mov
push
into
sub
sub
pop
clc
cmc
push
fcom
ds
cmp
push
ret
test
fst
and
pusha
fsub
call
jp
fst
cmp
cdq
inc
sahf
push
mov
and
das
adc
mov
out
dec
pop
cli
lds
outs
cmp
pop
cs
jmp
test
cli
pop
cs
adc
loop
jmp
cmp
(bad)
mov
idiv
in
movs
or
mov
inc
sbb
js
jge
xchg
test
cs
jo
adc
push
sub
xchg
push
data16
sti
pop
sub
fstp
stos
sbb
inc
and
jecxz
(bad)
xchg
test
mov
call
sub
jb
outs
jg
mov
add
and
lods
ins
adc
inc
imul
push
cmp
xor
mov
xlat
mov
daa
mov
call
or
imul
stos
test
cli
sub
movs
or
test
inc
push
sahf
retf
stc
sub
mov
data16
xlat
cmp
mov
icebp
xchg
dec
sub
pushf
lock
retf
(bad)
lahf
add
loop
(bad)
sub
inc
je
outs
call
inc
xchg
aas
fimul
push
sbb
jae
inc
pushf
jbe
push
pop
jae
xchg
fnstcw
fld
int
mov
push
push
sub
nop
loopne
ror
(bad)
mov
dec
lods
sbb
iret
(bad)
pusha
jb
sti
jle
jge
lahf
call
mov
and
jne
ret
in
xor
or
rcr
hlt
mov
dec
out
out
push
fstp
push
aam
gs
pusha
scas
dec
imul
mov
stos
pushf
or
and
inc
loopne
mov
out
test
movs
mov
jno
cmc
test
xor
popa
(bad)
cld
fsub
xchg
pop
sbb
add
add
fldenv
jmp
sbb
nop
and
push
inc
data16
loope
popf
fwait
and
retf
mov
imul
inc
xchg
inc
lods
rcl
int3
adc
inc
push
mov
lods
cli
popf
inc
xor
jmp
retf
adc
jb
ficom
retf
push
scas
sub
pusha
push
or
inc
and
addr16
mov
or
mov
inc
mov
jbe
xchg
jne
lods
pop
repnz
cmps
mov
jmp
fnstsw
lahf
xchg
movs
add
cwde
jg
fs
mov
jbe
xchg
mov
push
mov
push
mov
cmps
(bad)
out
stos
loopne
jecxz
add
icebp
icebp
sbb
xchg
addr16
push
adc
dec
mov
sbb
xchg
mov
int
test
test
lahf
out
cli
add
jno
mov
dec
es
scas
pop
(bad)
jbe
in
inc
pop
or
ret
aaa
and
inc
lods
pushf
test
bound
cmc
fcom
cmc
xor
dec
into
sahf
retf
pop
mov
push
test
jle
push
shl
addr16
shl
je
aas
sub
mov
sub
imul
imul
sbb
into
fwait
mov
fldlg2
xchg
enter
retf
jmp
mov
loop
(bad)
dec
cwde
cmp
dec
xchg
and
push
adc
sub
adc
inc
adc
stos
and
test
add
mov
mov
addr16
inc
inc
ins
lea
xor
test
mov
push
(bad)
ret
out
stos
aam
dec
pop
pop
mov
dec
adc
lahf
sub
cmp
jmp
push
retf
jmp
test
sbb
ja
jg
ins
xor
bound
stc
inc
mov
xor
mov
jg
in
inc
pusha
sub
in
retf
ret
scas
int3
shr
call
out
gs
fidivr
fs
shl
fnstcw
mov
fnsave
jl
icebp
repz
dec
and
aas
xor
or
stos
xor
call
cld
fs
retf
mov
ins
pushf
jmp
push
mov
mov
pop
mov
repnz
adc
sar
fdiv
ret
sub
dec
js
pop
push
or
shl
inc
sahf
test
xchg
push
pop
retf
not
xchg
in
mov
dec
jnp
pop
push
xchg
add
mov
and
pushf
icebp
jb
cmp
mov
ja
sbb
cmp
scas
dec
mov
idiv
xchg
pop
rcl
inc
dec
loop
retf
jle
jmp
adc
jo
es
clc
dec
cmp
outs
pop
push
cmc
push
icebp
dec
pusha
and
in
(bad)
mov
hlt
ins
call
out
jecxz
sub
push
aad
jno
jle
mov
xchg
ficomp
outs
imul
ret
into
test
jbe
xchg
inc
icebp
xacquire
inc
fwait
ret
and
imul
dec
rcl
arpl
int3
push
pop
ja
bound
pop
icebp
aas
test
xor
ins
dec
mov
arpl
xor
lock
or
mov
jge
fwait
push
dec
repnz
mov
or
cdq
jecxz
add
es
push
pop
inc
sbb
out
pop
and
push
jmp
sbb
xchg
lods
call
push
mov
sbb
aaa
adc
es
cwde
sahf
out
inc
test
mov
jmp
das
pop
lods
pop
push
scas
popf
mov
sbb
sbb
out
mov
adc
jb
aad
pop
jae
xchg
inc
stos
inc
xchg
out
lock
clc
cmp
or
dec
mov
ret
mov
cmp
ret
and
push
and
repz
add
adc
mov
sub
ret
pop
mov
inc
mov
push
test
cs
fs
in
or
inc
pop
test
sbb
call
add
ffreep
lods
rcr
pop
add
dec
out
loop
sub
pop
scas
mov
mov
movs
loop
imul
imul
dec
fidiv
mov
ja
jo
sub
retf
pop
mov
fcomp
push
xchg
cmp
sbb
push
sbb
arpl
cld
scas
xor
int3
sahf
mov
adc
ds
jne
mov
(bad)
push
inc
out
mov
scas
adc
pop
inc
nop
cmp
mov
pop
fadd
test
shl
xchg
cld
ins
xchg
shr
shl
icebp
in
push
movs
scas
xor
cs
test
cmp
(bad)
push
dec
adc
inc
aam
loop
xchg
push
mov
inc
test
into
pop
retf
out
retf
add
jb
cld
mov
push
jns
nop
mov
(bad)
mov
xchg
and
gs
out
icebp
pop
pop
shr
mov
dec
pop
xchg
and
sbb
push
or
or
add
mov
div
ds
jmp
bsr
into
dec
xchg
xor
in
imul
cmp
nop
mov
sub
sub
mov
dec
inc
test
lds
aam
sub
push
xchg
add
and
jecxz
mov
inc
sbb
int3
les
(bad)
jne
mov
pop
fwait
and
out
cs
dec
mov
lods
fisubr
sbb
dec
test
dec
into
das
cli
push
pop
out
dec
cmc
out
or
pop
or
test
addr16
jle
fs
mov
dec
add
or
jbe
cmps
adc
ins
arpl
mov
inc
cld
push
dec
dec
mov
out
in
push
mov
mov
add
cmps
xor
mov
fdiv
xlat
mov
retf
hlt
aaa
dec
imul
push
call
cmps
xor
cmp
test
lods
inc
push
xchg
mov
rcl
bound
pusha
das
imul
lds
and
mov
repnz
mov
mov
repz
or
cdq
mov
jecxz
sahf
or
cmps
add
loop
dec
(bad)
je
rcl
fcomp
lods
adc
mov
xchg
sbb
leave
cmp
xchg
scas
mov
jmp
ins
js
add
into
inc
mov
pop
int3
cmp
xchg
pop
shl
inc
jo
mov
jge
jmp
std
lea
test
fnstsw
sbb
sub
jnp
in
mov
xchg
aam
sbb
out
cmp
hlt
call
sbb
mov
aas
fs
neg
cmc
fsub
mov
mov
inc
(bad)
mov
imul
cmps
mov
repnz
loopne
sahf
push
popa
arpl
outs
dec
test
mov
aaa
adc
test
les
and
les
test
pop
sub
outs
cmp
adc
es
pop
ja
and
mov
jg
cmc
lods
cmps
(bad)
stc
outs
sub
in
not
(bad)
mov
cmp
pop
jnp
sahf
pop
div
cmp
xchg
and
jmp
aas
sub
xor
sub
push
xchg
aaa
imul
into
inc
mov
jmp
xor
sub
movs
mov
loope
adc
sub
pop
(bad)
add
cmp
ret
jmp
stc
jns
pushf
mov
fist
je
je
xlat
cmp
mov
mov
jb
test
ds
(bad)
mov
cli
adc
pop
or
mov
jmp
test
clc
mov
xchg
(bad)
mov
mov
cdq
movs
jl
retf
call
sub
cmp
in
dec
mov
outs
aaa
cwde
fwait
or
ss
dec
cmovs
xor
loop
pop
cld
fst
xor
cld
dec
pop
jnp
dec
xchg
adc
je
into
es
fdiv
sar
xor
jg
or
imul
mov
fsub
sbb
(bad)
sbb
xchg
ins
mov
popa
mov
cmp
outs
adc
rol
outs
test
xchg
outs
push
dec
out
sbb
jno
rcr
push
iret
xchg
aaa
nop
pop
lods
jae
int3
xchg
hlt
add
jg
retf
aas
addr16
stos
imul
dec
or
call
inc
enter
and
sub
ds
xchg
mov
jmp
(bad)
iret
or
jg
xchg
dec
xor
shl
sub
enter
hlt
sub
xchg
pushf
bound
shr
xchg
lahf
mov
cs
pop
fadd
(bad)
mov
ins
inc
lahf
push
xlat
pop
into
cwde
pop
movs
dec
rcl
mov
dec
test
sti
fld
inc
lock
icebp
in
jo
push
jmp
cmps
lahf
push
push
adc
adc
jmp
cmp
and
cmps
scas
mov
mov
mov
popf
mov
out
sahf
das
sbb
repnz
and
push
outs
and
add
jge
in
mov
xchg
sub
inc
jne
cmp
cmc
push
push
shl
psubusb
arpl
loop
mov
dec
int
mov
mov
and
int3
or
mov
rol
jns
clc
and
sub
pop
sbb
xor
fimul
iret
leave
loope
stc
mov
sbb
adc
fcmovu
push
repz
xor
sbb
adc
in
ins
mov
pop
popa
pop
stos
jae
lock
mov
xchg
in
lahf
mov
ins
lahf
ret
out
push
retf
out
fisttp
jmp
sbb
mov
outs
mov
xchg
adc
push
mov
push
and
adc
test
(bad)
fwait
jno
cmp
loop
or
push
xchg
and
push
add
adc
jmp
push
xchg
scas
or
in
in
mov
cmps
aam
imul
daa
cmp
popf
std
cli
pop
push
push
jne
cmp
xlat
pop
(bad)
xchg
ja
lea
dec
xchg
mov
fisub
outs
(bad)
fidivr
xchg
lods
rcl
clc
jmp
in
call
or
aad
popf
out
jo
je
mov
shl
mov
inc
lea
adc
retf
idiv
rsqrtps
(bad)
sbb
add
xchg
sbb
fcmove
adc
imul
ret
cmps
lea
(bad)
stos
retf
xor
repz
in
imul
test
pop
stc
mov
iret
jno
cmps
xor
adc
mov
jae
(bad)
and
and
mov
jecxz
push
es
outs
xchg
test
enter
add
cmp
jae
inc
outs
movs
push
jne
pusha
add
shr
xchg
jp
push
test
dec
fucomi
fdivr
retf
loop
out
adc
in
in
and
enter
push
pushf
jbe
dec
imul
pop
jg
movs
push
fnsave
mov
mov
push
push
push
inc
fs
in
push
stc
out
data16
push
sbb
jl
cmps
adc
cmp
mov
aad
cmp
pop
push
sar
xor
sar
test
add
nop
call
add
xor
sbb
jb
inc
push
mov
cmp
(bad)
mov
jle
push
xor
dec
sar
(bad)
icebp
inc
outs
inc
xchg
clc
pop
mov
cmp
add
das
add
xchg
arpl
movs
xor
push
cmp
push
xor
retf
dec
imul
mov
push
in
adc
xchg
mov
pop
leave
loop
rcr
mov
int
sbb
inc
inc
cmps
sub
push
xchg
xor
aam
fwait
or
out
dec
(bad)
daa
add
int3
adc
mov
cdq
mov
inc
jp
(bad)
fwait
outs
ins
stc
xor
imul
neg
stos
mov
adc
adc
mov
cmps
repz
sub
mov
or
xchg
data16
in
cmp
and
(bad)
(bad)
sbb
adc
bound
dec
or
sub
or
imul
mov
movs
pop
jp
mov
(bad)
cmp
dec
(bad)
sbb
test
and
aad
mov
inc
inc
add
xlat
iret
imul
xor
frstor
data16
inc
add
xor
gs
add
sar
sub
xchg
gs
(bad)
adc
or
or
sub
imul
pusha
lea
xchg
scas
dec
mov
lods
push
jnp
aam
fmulp
popf
xor
sbb
lahf
cmc
sub
inc
mov
jmp
jg
hlt
(bad)
dec
and
mov
adc
inc
clc
pop
cdq
cmp
std
sbb
pop
ss
out
xor
xchg
mov
sub
add
xor
inc
add
jl
inc
push
and
xor
add
xchg
test
or
inc
sub
push
(bad)
adc
dec
jecxz
mov
jb
sub
or
in
or
jg
pop
test
push
pop
or
(bad)
pusha
jmp
int
or
mov
inc
mov
mov
jle
(bad)
out
mov
xor
and
aam
fnstenv
mov
mov
out
mov
lock
mov
mov
shl
dec
or
pop
xchg
fcmovnu
push
clc
jle
and
inc
outs
sub
addr16
mov
fld
mov
ror
inc
ins
jmp
sar
jecxz
mov
addr16
fnstcw
jecxz
sahf
aam
fmul
in
cmp
jge
call
popf
pushf
int3
dec
mov
push
ror
fcomp
mov
xchg
mov
fidiv
cld
sub
cmps
repnz
mov
fisttp
mov
mov
imul
sbb
push
adc
aam
shr
push
call
outs
xchg
int
xor
mov
inc
(bad)
call
inc
inc
ins
jbe
mov
jnp
adc
push
inc
int3
jmp
and
rcl
mov
jle
or
push
xchg
cld
adc
adc
xchg
test
sbb
ja
js
in
xchg
cwde
imul
inc
push
jle
xor
add
jecxz
mov
popa
mov
xchg
and
pop
push
cmp
jl
xchg
push
jmp
push
cwde
int
mov
aaa
icebp
and
stos
jns
sahf
cdq
sbb
mov
xor
test
sub
cmp
dec
mov
sahf
retf
mov
ficom
iret
jmp
xchg
push
dec
push
or
mov
stc
outs
pop
retf
sahf
pop
pushf
pop
ja
test
fcomp
mov
push
dec
mov
or
pop
inc
imul
dec
aam
ins
cs
out
lods
aas
push
push
(bad)
retf
and
mov
push
cmp
jbe
lds
stc
shl
lea
adc
jge
loope
shrd
in
loopne
div
pop
xchg
leave
xor
nop
xchg
xchg
sti
pop
cmp
lods
or
out
sub
xlat
in
test
pop
cli
fld
sbb
jle
loopne
ja
push
adc
(bad)
cs
inc
test
pop
and
bound
stos
inc
shl
leave
ret
or
loop
aam
in
or
dec
add
stos
sub
cmps
rcr
jno
or
fcom
cmp
sbb
pusha
mov
push
and
das
dec
and
dec
jb
mov
inc
xchg
sbb
fs
loop
jle
jbe
xchg
push
and
lods
sbb
nop
pop
mov
push
mov
xchg
jmp
out
imul
adc
test
jp
stc
lods
ror
les
cmps
sahf
out
xor
xor
cs
movs
inc
outs
mov
mov
iret
sbb
mov
jmp
neg
adc
mov
push
out
inc
jae
ret
xchg
wbinvd
adc
div
cmp
dec
push
neg
sbb
out
mov
mov
adc
push
popa
inc
push
rcr
clc
jg
inc
push
fnsave
push
iret
out
push
stc
xor
adc
lods
mov
cmp
int3
jle
je
or
addr16
movs
in
xchg
test
and
adc
mov
stos
push
xlat
add
mov
jp
dec
ret
and
mov
lock
call
cmp
cmp
sbb
pop
mov
push
movs
cld
jecxz
sub
add
jbe
push
push
ds
push
fimul
xor
jne
shl
ds
gs
popa
dec
xchg
ret
loope
adc
sub
or
dec
jns
cmp
mov
push
sbb
es
mov
clc
mov
pop
cld
cmp
cwde
jbe
test
test
lea
jnp
scas
inc
call
nop
ins
sub
add
add
test
mov
xchg
push
std
daa
repnz
loope
push
adc
cmp
ja
adc
(bad)
mov
pop
lea
and
xchg
jne
xchg
int
xchg
call
out
jge
or
mov
push
mov
fwait
cmp
fmul
and
push
(bad)
pop
push
outs
fisubr
dec
fcomp
pop
movs
and
dec
dec
xor
cmp
lahf
enter
add
or
fnstsw
fidivr
rcl
in
dec
pop
jbe
xchg
and
ins
(bad)
and
cli
pop
rcl
mov
std
jnp
mov
inc
addr16
aad
leave
iret
adc
outs
sbb
or
in
or
push
and
jp
dec
sub
(bad)
into
xchg
mov
or
lods
scas
cmc
push
mov
bound
xchg
in
xor
push
cmps
jnp
xchg
cmp
cmps
inc
xor
rcl
test
hlt
jae
add
inc
push
xchg
or
cmp
adc
or
mov
mov
enter
and
mov
push
push
iret
(bad)
and
jnp
add
movs
mov
add
sbb
and
adc
mov
push
je
xchg
sub
dec
(bad)
fild
iret
sub
jne
jl
ins
out
iret
pop
push
cmp
loopne
fcmove
js
or
and
int
xchg
shr
inc
fistp
mov
repz
push
(bad)
jp
int3
xchg
add
sahf
(bad)
adc
repz
ret
fnstsw
cwde
add
mov
fld
sbb
lds
cmps
cmps
push
imul
push
ins
mov
shr
jb
xor
cmp
icebp
test
enter
in
lahf
js
and
scas
and
dec
in
pop
mov
or
cwde
dec
mov
(bad)
ins
loopne
mov
mov
dec
in
xchg
out
hlt
ins
push
jnp
fistp
xor
int
jmp
lods
jb
aaa
aas
retf
xchg
pop
push
dec
mov
loop
jg
or
stc
jge
imul
cmc
xor
cmc
or
jmp
adc
xchg
pop
pop
pop
lea
sub
add
out
jmp
jmp
pop
daa
pop
movs
cmps
mov
add
inc
jecxz
or
dec
pop
pop
cdq
aaa
loopne
call
xchg
adc
repnz
pop
inc
clc
(bad)
dec
jmp
daa
mov
(bad)
sbb
daa
movs
mov
fdivp
push
nop
stos
mov
sbb
xchg
jge
mov
push
or
rol
xchg
inc
lods
movs
mov
(bad)
mov
cdq
add
pop
jno
fucomp
jmp
in
or
lock
outs
add
nop
clc
adc
sbb
test
cmp
cwde
aad
jge
les
mov
int3
cdq
movs
in
icebp
xor
xor
sbb
sub
jmp
pop
mov
gs
shl
not
lods
leave
add
and
cmp
add
pop
xchg
jbe
pop
js
add
dec
xor
add
aaa
inc
int3
push
pop
cmp
inc
cmps
xor
or
mov
xor
inc
push
add
sahf
pop
aam
jg
(bad)
iret
ret
inc
adc
xchg
arpl
mov
fchs
in
adc
out
xor
cmp
xchg
and
inc
mov
rcr
enter
sbb
movs
fidiv
cmps
xchg
mov
xchg
js
pop
dec
jns
add
or
fwait
mov
test
test
dec
icebp
mov
jmp
jmp
das
pushf
movs
dec
iret
mov
dec
push
out
mov
lds
arpl
add
retf
xchg
rol
fcom
std
inc
cmps
icebp
and
daa
jge
rol
or
xor
xchg
mov
aas
jno
leave
stos
ror
push
and
mov
push
pushf
sub
or
leave
inc
mov
add
jmp
shr
sbb
pop
inc
sbb
pop
sub
cmps
shr
ins
les
pushf
out
cld
fiadd
xchg
push
pop
stos
pusha
mov
dec
mov
xor
add
aad
(bad)
imul
fist
push
dec
push
aaa
add
arpl
adc
ins
aaa
cmc
retf
neg
repnz
scas
enter
je
das
xor
xchg
int
ja
xor
frstor
xor
cmp
pop
in
loope
movs
and
mov
ja
pop
mov
jge
xor
fidiv
mov
add
loope
mov
repnz
gs
(bad)
rcr
cli
ret
or
jg
cmp
fwait
mov
jmp
push
xor
xor
push
outs
repnz
cmp
stc
(bad)
pop
jge
dec
pop
inc
push
stc
retf
icebp
mov
out
cmps
dec
xor
jecxz
inc
dec
add
pop
scas
in
(bad)
mov
dec
mov
mov
fisubr
pusha
and
leave
xchg
push
push
sbb
xchg
retf
int
and
retf
sbb
loopne
(bad)
stos
cmp
xchg
les
push
adc
push
push
add
pop
dec
nop
push
fs
xor
out
pop
es
cli
data16
int
outs
test
cdq
enter
jp
cmp
mov
ret
xor
call
ins
fadd
dec
mov
enter
cwde
push
std
jmp
mov
scas
inc
mov
jno
outs
popa
xchg
jg
add
lea
cdq
repnz
enter
into
dec
xchg
jl
mov
inc
sub
cmps
pop
and
bound
les
ds
fs
das
jne
stos
xchg
call
in
leave
mov
cmp
in
inc
call
out
or
sub
push
out
jbe
ja
je
jge
mov
jmp
clc
out
jmp
retf
sub
mov
repz
mov
int
cld
sbb
fucomip
iret
mov
cld
and
rcl
xchg
or
iret
jnp
adc
dec
je
ret
push
cmp
in
nop
ficom
push
sbb
and
iret
mov
shl
xchg
jmp
imul
mul
fsub
dec
dec
pop
in
xor
add
je
retf
sub
adc
and
adc
jge
dec
(bad)
jae
sahf
adc
loopne
mov
pop
fimul
cld
fsub
in
aad
loopne
ins
int
push
dec
fwait
or
fwait
jae
pop
mov
scas
shl
push
cmp
stos
mov
fs
pop
pop
dec
pop
fdivr
xchg
outs
pushf
push
fwait
dec
int3
fisttp
jns
in
xor
cmc
cli
out
mov
or
(bad)
cmps
pop
(bad)
cwde
into
xchg
call
aaa
clc
retf
mov
mov
xlat
das
mov
xlat
sub
retf
mov
neg
aad
dec
sbb
sbb
movs
adc
mov
data16
js
pop
mov
cmc
xlat
jne
aas
js
mov
cmp
adc
clc
cmps
das
in
test
push
or
inc
mov
jmp
dec
mov
(bad)
jne
repnz
int
(bad)
xor
lock
adc
add
and
xor
mov
out
in
xor
add
je
call
jb
push
cmp
imul
lahf
push
mov
push
or
pop
pop
lahf
rol
sbb
jecxz
hlt
mov
push
cmp
(bad)
sbb
stos
jo
mov
popf
xchg
jmp
cmp
add
pop
xlat
xchg
sub
or
jl
cmp
in
leave
dec
and
and
data16
rcr
or
outs
mov
inc
pop
out
push
pop
stc
xchg
mov
pusha
das
cwde
inc
lds
mov
push
mov
cmp
pop
sub
out
adc
cdq
out
dec
and
mov
mov
movs
add
mov
sbb
das
adc
lods
xchg
inc
mov
mov
pop
aaa
push
out
xor
fild
js
(bad)
fwait
outs
repz
xor
jo
inc
inc
rcl
mov
add
mov
mov
sbb
mov
mov
retf
(bad)
pop
cmp
cmp
add
iret
adc
pop
fisub
out
mov
out
lea
hlt
sub
sub
lock
js
xor
mov
pusha
ins
or
jb
lahf
and
lock
add
push
cmp
jecxz
(bad)
pop
jp
pop
fnstcw
pop
test
add
out
cmp
push
add
pushf
jbe
mov
inc
sub
adc
int
aas
jo
jecxz
jns
mov
mov
cmp
loope
ss
stc
push
dec
into
or
retf
scas
fwait
loop
pop
pusha
stos
mov
pop
push
pusha
pushf
(bad)
push
sub
sub
mov
in
push
dec
push
in
cmp
and
sbb
ins
or
xchg
or
pop
adc
imul
xchg
test
pop
rcr
cmp
movs
push
or
cmps
call
retf
addr16
in
stos
daa
xor
clc
dec
(bad)
xchg
call
rcr
arpl
xor
mov
sub
jmp
test
les
scas
or
and
pop
out
xchg
movs
(bad)
cmp
daa
or
or
pop
mov
in
bound
fsub
icebp
loopne
arpl
ds
loope
rcr
jge
into
je
mov
sub
int
dec
sar
(bad)
in
imul
mov
sbb
mov
and
std
je
sar
test
shl
pusha
fild
imul
mov
neg
sub
cmp
sahf
call
mov
(bad)
mov
add
lods
cwde
pop
movs
push
push
pushf
pop
jl
bound
imul
push
outs
xor
enter
popa
loop
inc
jp
int
jge
mov
inc
xchg
lea
dec
fisttp
sbb
push
push
cwde
in
clc
in
mov
fild
mov
gs
mov
pop
mov
and
jmp
popa
cmp
aaa
pop
ficomp
push
mov
inc
sahf
fst
mov
in
(bad)
adc
loop
pop
out
jo
in
inc
push
mov
loop
cmp
mov
sub
xchg
jl
mov
pop
xchg
shl
mov
jecxz
or
movs
cmp
test
and
or
mov
outs
arpl
bound
out
ss
clc
ins
in
mov
aam
aad
sub
int
movs
cld
lods
ret
push
nop
cmp
pushf
xchg
hlt
jne
popa
fwait
mov
pop
lock
sbb
push
mov
xor
imul
ret
mov
test
mov
sub
cld
adc
sub
or
test
retf
and
out
pusha
sbb
jecxz
and
push
sbb
mov
mov
fld
mov
rol
int
std
mul
enter
cmp
inc
jbe
xor
and
sbb
test
jecxz
inc
out
xor
jl
popf
hlt
pop
fld
add
dec
aaa
mov
xor
rol
inc
fcom
gs
iret
popa
inc
call
(bad)
cmp
pop
jnp
sbb
fist
and
es
pop
cmp
xchg
cmp
ret
sar
popa
mov
mov
cdq
sub
dec
or
movs
xor
dec
loopne
xchg
dec
pop
dec
sub
sub
out
jp
out
mov
lods
adc
mov
repz
int
rcr
jg
js
nop
mov
adc
mov
sub
setno
int3
ror
popf
xor
mov
push
jecxz
jmp
sahf
clc
ret
call
sbb
ror
xor
push
out
mov
xlat
in
test
loope
ins
stos
ror
stc
inc
hlt
in
(bad)
xor
add
xor
xor
mov
das
in
cmp
clc
sub
test
push
es
sub
scas
and
in
inc
lea
xor
dec
sbb
pop
daa
dec
loopne
nop
adc
stos
stc
pop
mov
dec
push
xor
or
fsubr
dec
xchg
push
jp
popf
test
enter
xchg
push
and
(bad)
inc
lahf
fisub
cmc
or
cmp
and
jo
mov
lds
iret
int
shl
and
jno
inc
retf
fimul
mov
in
jo
mov
sbb
jno
popa
push
in
bound
aam
add
add
push
sub
outs
in
loop
stc
fs
ja
cld
sbb
lods
cmps
test
jl
repnz
push
mov
in
loope
retf
push
ins
sbb
adc
call
dec
call
xchg
int
jle
js
jbe
cmps
stc
jb
hlt
mov
aam
pop
adc
mov
fst
inc
rcl
in
fadd
mov
mov
ja
cwde
(bad)
sbb
loope
rcl
jmp
mov
les
inc
adc
dec
dec
add
add
dec
call
fwait
adc
vphaddbq
or
mov
icebp
xchg
mov
rcr
mov
fidivr
ret
test
ja
loopne
mov
adc
sbb
sbb
fist
xor
(bad)
iret
inc
test
xor
hlt
ins
aad
push
retf
shl
cld
pop
cld
mov
popf
stos
sets
push
retf
mov
adc
cs
jo
in
iret
fstp
fidiv
jl
jmp
scas
ficom
mov
lods
sub
mov
or
(bad)
push
repnz
pop
mov
dec
scas
aad
dec
inc
jno
fld
das
(bad)
sti
dec
mov
cmps
mov
jmp
pop
imul
cmp
lahf
fimul
cmps
inc
sub
push
jne
int
enter
mov
push
(bad)
mov
fidivr
jne
add
pusha
aas
mov
mov
sub
sbb
sbb
adc
std
add
(bad)
mov
data16
push
shl
push
ins
xchg
mov
bound
mov
mov
push
jne
fsub
fmul
and
lods
adc
test
jbe
jae
shl
fs
imul
sub
out
xchg
out
(bad)
inc
mov
inc
shl
or
imul
inc
jecxz
xchg
sub
enter
loopne
std
inc
pop
out
popa
pop
loopne
fadd
test
pop
cwde
movs
pusha
inc
xchg
adc
jmp
aaa
iret
ins
test
cmp
loope
or
ds
in
mov
xchg
push
repz
cld
jo
ss
mov
pop
fmul
add
push
bound
push
sbb
out
ds
pop
je
fsub
das
xchg
lods
pop
jg
cmp
mov
mov
aam
cld
test
daa
pop
aaa
cmp
or
call
pusha
(bad)
mov
data16
in
lock
mov
inc
test
lea
jnp
sahf
ja
push
fnsave
cmps
mov
fwait
addr16
xchg
inc
mov
and
jl
xchg
(bad)
shl
jns
ret
sub
mov
lahf
test
cs
pusha
mov
mov
sub
mov
jae
cmc
adc
push
mov
mov
or
add
fisttp
xor
cmp
out
and
xor
shr
ja
add
jmp
clc
dec
jnp
sbb
jmp
inc
push
add
in
mov
cwde
and
mov
mov
cmc
jp
loope
(bad)
outs
inc
in
cmps
out
fwait
ins
outs
int
jecxz
call
xchg
out
fiadd
adc
pop
adc
outs
frstor
shl
cdq
lds
sub
xchg
cmp
call
mov
sbb
mov
push
xor
cmp
sti
in
stos
sub
inc
sub
aam
xor
sbb
stc
and
(bad)
cli
lahf
sub
movs
pop
retf
xchg
jg
pop
xor
daa
sbb
xchg
xchg
jns
repz
inc
fdiv
and
repnz
mov
jae
rcl
mov
sahf
cdq
enter
jge
(bad)
cld
enter
sub
test
cmp
cli
int
mov
rcl
call
mov
in
sub
call
(bad)
jg
mov
fidivr
iret
loope
scas
mov
in
xor
popa
or
sub
fimul
jmp
fs
push
movs
adc
pop
sub
int3
retf
test
and
mov
lock
cmps
test
sbb
mov
aas
push
loop
movs
in
sbb
jmp
jno
mov
nop
pop
inc
mov
bound
fidiv
outs
add
ret
shrd
add
xchg
add
mov
sar
xchg
xor
mov
cmp
xchg
jmp
popf
xor
test
mov
xor
mov
pop
nop
mov
ret
xchg
dec
jp
xor
pop
pop
(bad)
push
stos
cmp
fmul
push
popa
xor
mov
xchg
pop
jbe
sub
mov
out
sbb
ror
in
inc
xor
xchg
fwait
push
nop
mov
push
enter
pop
dec
frstor
repnz
clc
xchg
fld
jns
dec
fimul
and
sbb
sub
and
or
cmp
push
je
add
inc
bound
iret
mov
jg
iret
daa
ins
call
retf
loopne
in
and
inc
add
call
je
mov
pop
loop
mov
mov
loope
cmc
out
adc
add
fbld
shl
cmp
fs
popa
(bad)
out
xchg
test
(bad)
(bad)
cmp
sbb
mov
push
nop
enter
in
in
fimul
das
or
cmc
mov
dec
or
xor
mov
out
add
add
inc
mov
movs
pop
mov
adc
rcr
mov
mov
inc
mov
nop
push
inc
and
dec
jbe
jnp
pop
call
jo
(bad)
into
movs
pushf
push
jle
sub
jne
cld
mov
add
cmp
jle
mov
cs
sub
das
pushf
or
mov
sbb
frndint
jg
test
jne
in
fiadd
xchg
dec
sahf
dec
push
inc
(bad)
jns
jne
test
cwde
retf
inc
jmp
jge
adc
inc
xchg
mov
mov
fsub
retf
out
dec
pop
mov
mov
push
add
rep
sub
jb
or
mov
lds
mov
std
ss
mov
push
int
xor
or
aas
ja
sub
push
and
shl
adc
adc
add
fbstp
fadd
sbb
scas
arpl
xchg
ins
push
xchg
loopne
dec
add
dec
lds
jecxz
outs
sub
mov
test
push
xchg
fdivr
push
pop
movs
ins
push
cmc
out
retf
sbb
mov
std
mov
mov
sti
out
push
das
inc
outs
cdq
leave
jecxz
bound
mov
pop
jmp
into
sub
pop
rcr
inc
xor
pop
sbb
scas
cmp
loopne
inc
push
jae
and
sub
xor
inc
mov
fnstcw
addr16
inc
(bad)
call
mov
dec
addr16
mov
movzx
cmp
inc
jnp
mov
jns
aad
fdivr
push
pop
(bad)
int3
addr16
in
mov
jne
fwait
cmp
mov
add
lds
call
and
lods
mov
into
(bad)
movs
mov
mov
leave
std
mov
jmp
sbb
ins
push
cmps
or
shr
pusha
mov
cmp
push
shr
loop
cmp
outs
push
inc
scas
stos
fucomip
daa
jle
cmp
push
imul
jle
cmp
aam
iret
jbe
shl
mov
jecxz
or
sbb
imul
gs
or
jno
pusha
add
mov
movs
aad
cmps
push
push
jnp
pop
in
inc
or
push
icebp
or
mov
add
inc
xlat
out
pusha
mov
fisub
inc
fwait
mov
ins
popa
movs
mov
xchg
mov
popa
or
xor
test
dec
or
aam
aam
dec
arpl
push
iret
xchg
retf
les
push
dec
fadd
lea
adc
stos
fidivr
adc
js
and
or
ins
mov
(bad)
mov
fidiv
lock
mov
add
mov
mov
and
mov
cmp
dec
aam
mov
mov
push
pop
push
repnz
cmp
fidiv
sbb
and
retf
daa
adc
or
popa
add
pop
dec
pop
fs
and
cmps
inc
sub
call
push
shr
jmp
cmp
mov
ss
pop
mov
repnz
popf
cdq
int3
adc
pop
add
(bad)
inc
fisttp
cmc
or
outs
hlt
adc
push
fcomip
sahf
(bad)
scas
xchg
sbb
pop
fisub
mov
in
xchg
cmp
icebp
sbb
jl
pop
jae
imul
pop
push
pop
lock
pop
sti
mov
stos
mov
or
test
add
sub
dec
ret
aam
daa
int
pop
sub
xor
sub
dec
scas
jo
outs
div
push
mov
xchg
(bad)
fiadd
cmp
or
push
xor
mov
inc
jge
mov
fwait
add
out
sub
mov
addr16
add
adc
adc
pusha
cmp
push
push
(bad)
lock
add
xor
movs
and
ja
pop
loop
adc
nop
cmp
and
pop
dec
repz
out
scas
retf
ins
int
lock
push
retf
push
arpl
into
xor
mov
and
mov
sbb
sbb
jle
xchg
call
push
loopne
mov
jmp
add
dec
jg
push
fiadd
movs
out
push
int3
mov
and
mov
stc
mov
popa
out
(bad)
in
scas
mov
sub
(bad)
es
fisttp
ins
ret
sbb
mov
aaa
xchg
xchg
and
mov
push
scas
mov
addr16
or
cs
push
scas
hlt
and
inc
sbb
or
shl
das
jmp
dec
pop
xchg
push
mov
pop
inc
xor
or
lods
sar
imul
arpl
xchg
and
jge
mov
fcom
test
retf
retf
shr
shr
stc
add
push
pop
cmp
scas
into
outs
mov
xchg
(bad)
cmp
jmp
jge
dec
cwde
push
nop
cli
xchg
add
xchg
mov
pop
fcom
test
ret
xchg
adc
hlt
sbb
inc
cmps
lea
inc
sub
std
push
jae
xchg
fwait
retf
movs
jae
outs
mov
or
xlat
aaa
fbstp
hlt
xchg
add
or
hlt
sub
add
push
sbb
(bad)
movs
xchg
jns
xchg
stos
sbb
or
jb
int3
mov
push
dec
int
dec
mov
out
or
in
retf
call
call
mov
js
xchg
fidiv
dec
sub
call
rol
(bad)
and
sub
xor
sar
fucomip
inc
daa
sbb
aad
enter
dec
pop
pminub
push
push
mov
or
xor
popf
push
pop
xlat
movs
in
je
bound
mov
ja
sar
and
and
or
jg
push
xchg
in
(bad)
imul
xchg
mov
(bad)
in
ja
enter
add
imul
cld
jle
pop
jo
arpl
pop
add
nop
cs
fld
cld
mov
popa
mov
mov
retf
cmp
jo
sbb
sbb
xchg
push
mov
ds
in
pop
jmp
xchg
aam
mov
mov
add
out
cli
int3
cmps
ror
xor
pop
ret
dec
ss
push
iret
jg
and
daa
xor
rol
cmp
mov
sub
push
xchg
sub
dec
repz
and
jmp
or
int
leave
sbb
test
neg
or
pop
push
jle
jmp
xor
lahf
xor
clc
(bad)
out
or
lods
inc
rol
sub
sbb
out
or
mov
mov
adc
pop
jmp
mov
sahf
cli
test
or
loopne
cmps
adc
inc
push
pusha
and
jno
mov
je
jg
mov
ins
jne
mov
stc
cmc
rcr
icebp
ins
sub
xor
pop
push
ror
and
xlat
adc
out
mov
cmp
cmp
pop
mov
int3
xchg
lds
push
stos
rol
and
jl
les
je
inc
ja
(bad)
add
add
pop
shr
jo
and
dec
jg
aad
jae
call
mov
inc
test
add
mov
int3
jmp
call
jo
scas
clc
xchg
or
lea
or
bound
and
adc
inc
into
mov
dec
push
cmps
aam
das
shl
leave
jb
ret
add
xlat
and
dec
pushf
jns
jo
sbb
mov
inc
fidiv
ins
fld
or
das
sbb
jl
jle
jp
pop
mov
sahf
ss
or
jo
loopne
xchg
call
xlat
jbe
mov
fwait
in
daa
dec
inc
cmps
cs
sbb
lahf
add
in
and
test
aaa
shld
mov
aas
icebp
popf
jbe
enter
push
rcl
mov
inc
mov
popf
add
pusha
fiadd
les
mov
mov
icebp
sti
das
in
inc
pop
jecxz
ror
pop
stc
jle
mov
pusha
xor
lock
pop
inc
sbb
inc
sub
or
std
sti
dec
in
adc
(bad)
into
mov
inc
lods
cmp
jns
push
push
out
aad
mov
sbb
xchg
sbb
pop
and
mov
pop
mov
inc
cmp
xor
sahf
cmp
mov
test
lock
xlat
mov
push
jmp
nop
mov
jno
imul
outs
clc
sbb
shl
jb
iret
pop
aam
retf
data16
fnsave
xor
(bad)
imul
outs
push
aad
mov
mov
mov
fwait
mov
add
sub
mov
test
fmul
in
xchg
jne
push
out
sub
int
sbb
pop
mov
into
nop
jg
add
stos
mov
pop
movs
das
sti
stos
pop
cli
or
sbb
fsub
mov
jne
pop
iret
cmps
int3
dec
sbb
or
cmp
repz
cdq
cs
dec
cmp
scas
out
inc
bound
xchg
xchg
and
or
jb
popf
add
push
mov
cmps
dec
or
stc
movs
mov
xchg
cmp
imul
sbb
cmp
push
(bad)
mov
fadd
dec
inc
or
sbb
aas
inc
push
fldenv
or
push
arpl
or
jo
fsubr
mov
pusha
dec
in
push
call
aas
inc
popa
idiv
and
add
ja
xchg
push
adc
cmp
adc
gs
stc
imul
push
xchg
or
int3
inc
push
int
sub
mov
arpl
ret
es
inc
or
fyl2x
cld
enter
sub
mov
mov
ror
popa
push
mov
sub
inc
jnp
cdq
and
call
mov
and
pushf
dec
and
sbb
fdiv
sub
pop
test
add
mov
movs
inc
cmp
dec
imul
inc
shr
sti
pop
cmp
out
push
ss
pop
mov
sbb
pusha
(bad)
fsubr
mov
test
add
test
add
loop
in
imul
add
adc
or
push
and
xchg
outs
cwde
xchg
pop
in
cmps
shl
jo
scas
sub
idiv
xor
and
neg
sbb
shl
pop
(bad)
fadd
aas
mov
xchg
jp
fidivr
iret
and
jmp
shr
test
or
call
and
and
sub
add
bound
mov
repnz
data16
lods
sbb
les
movs
outs
mov
cmps
cmp
lods
pop
jmp
(bad)
or
pop
aas
(bad)
jne
(bad)
jmp
aad
repnz
pop
sbb
xor
cmc
and
mov
adc
scas
cmc
xor
das
pop
(bad)
fisub
sbb
push
fistp
cmp
retf
pop
dec
loop
iret
movs
test
lds
sub
pusha
add
bound
xor
add
add
inc
pop
mov
fdivrp
loope
cmc
cmp
adc
data16
xchg
daa
xchg
add
xor
mov
sbb
ins
xchg
inc
dec
push
out
fcomip
dec
pop
mov
xor
fadd
and
ds
ret
push
sub
xchg
xchg
cmp
inc
push
sbb
int3
repz
sbb
add
jle
enter
mov
dec
aas
(bad)
out
leave
mov
xchg
fmul
fcom
push
cdq
ror
pop
push
lahf
sbb
in
inc
mov
cmps
mov
push
cmp
iret
sub
sub
in
mov
xor
and
pop
pop
xor
addr16
or
arpl
xchg
mov
loopne
arpl
pop
pop
popa
adc
scas
mov
call
lods
mov
xchg
fs
idiv
and
sub
mov
cmp
mov
sti
xchg
cmps
leave
cs
jle
mov
cmp
or
fs
enter
sbb
movs
ins
test
push
jge
add
xchg
lahf
jmp
add
jno
daa
sti
loopne
push
aaa
in
les
push
mov
inc
(bad)
iret
sub
imul
xor
dec
rol
add
mov
lods
pusha
hlt
pop
cmova
pop
cmps
jae
xchg
jmp
icebp
pop
lods
push
div
(bad)
mov
call
sub
lods
pop
mov
fbstp
aad
dec
stc
nop
pop
and
xchg
and
aas
or
cwde
cs
cdq
out
jl
jnp
mov
xor
xchg
jl
cmp
fwait
ins
push
or
push
adc
jno
adc
or
push
aas
fstp
push
fcmovb
shr
fwait
mov
fld
mov
pop
add
(bad)
ret
dec
xchg
jmp
jno
retf
add
rcr
movs
or
jo
shl
dec
repz
loope
mov
add
test
jl
cmp
jle
xlat
fld
dec
sbb
push
data16
(bad)
and
loopne
outs
pop
xchg
mov
cmp
stos
inc
std
into
sbb
repnz
pop
pop
jae
inc
fadd
repz
mov
jne
jnp
shl
arpl
stos
adc
xchg
jo
sbb
mov
loope
imul
mov
dec
loopne
mov
cmps
dec
add
inc
push
or
or
inc
rol
ret
mov
sub
cmp
push
jne
adc
dec
mov
call
std
enter
add
fwait
in
stos
add
fisubr
fucomip
scas
dec
arpl
jl
dec
xchg
popa
or
mov
sub
stc
and
inc
xchg
mov
ins
xchg
inc
fdiv
gs
in
hlt
dec
fstp
(bad)
cmp
push
mov
cmp
(bad)
dec
xor
jmp
nop
pushf
xchg
dec
scas
xor
jecxz
sti
add
gs
inc
adc
xchg
push
arpl
ret
test
ror
les
aas
inc
jb
adc
in
sar
xor
and
ja
ja
arpl
inc
add
outs
repz
fild
scas
dec
jb
push
cmp
jo
sub
test
icebp
mov
in
scas
ret
out
jmp
inc
xchg
rcl
mov
cmps
push
mov
aam
aaa
test
mov
imul
push
aaa
lods
cmp
cwde
or
mov
cmps
adc
pop
adc
sahf
sub
sub
(bad)
fwait
stos
ror
and
pop
test
daa
sti
shr
scas
cmp
jno
pop
pushf
push
(bad)
neg
mov
mov
repnz
in
jg
and
add
lock
cmp
cmp
add
inc
mov
mov
or
inc
xchg
sar
sub
dec
call
les
ja
arpl
jns
jno
movs
inc
popf
ret
sbb
test
dec
inc
mov
jge
xlat
add
mov
cmc
xchg
bound
and
adc
(bad)
mov
inc
shl
xor
mov
mov
mov
test
adc
out
stos
(bad)
cmps
push
mov
in
test
dec
dec
icebp
idiv
in
rcl
(bad)
pop
outs
push
dec
mov
xchg
xor
ret
inc
mov
call
lea
push
movs
shl
fsubr
mov
ret
ja
jae
push
rol
(bad)
sub
mov
ret
or
ret
cmc
je
and
rcl
addr16
out
(bad)
pop
dec
sbb
cmc
inc
jg
and
jo
cld
stos
(bad)
pushf
jp
xor
dec
data16
idiv
sbb
movs
stos
jae
mov
(bad)
inc
jno
jecxz
test
(bad)
out
dec
inc
jecxz
std
mul
pop
mov
hlt
xor
xchg
imul
stos
pusha
fwait
fs
adc
add
aaa
mov
xchg
jne
rcr
jns
dec
leave
sub
jne
mov
imul
movs
jle
mov
adc
ja
xor
mov
pop
push
fld
xchg
aam
retf
fisttp
pop
ins
sar
push
mov
mov
(bad)
aam
mov
int
add
and
xchg
(bad)
cmps
adc
mov
outs
mov
lahf
movs
call
mov
xor
loop
cwde
in
je
sbb
call
push
dec
jo
add
push
ret
mov
pop
mov
add
xlat
jge
pushf
mov
cmp
idiv
ss
out
xchg
popa
inc
imul
pop
sahf
pop
pushf
cli
stos
sub
push
int
out
sub
cld
mov
dec
or
or
(bad)
js
sub
pushf
xor
pop
fcomp
cmp
cmp
push
mov
ret
addr16
pop
arpl
mov
lahf
xchg
(bad)
jle
xchg
jl
sbb
and
sub
fldcw
push
mov
cmp
pop
cmc
clc
lea
pop
or
int
dec
int3
inc
jge
fsub
test
fs
movs
scas
repnz
sbb
push
bound
push
mov
pop
xor
pop
stos
outs
retf
jg
adc
out
call
gs
sub
adc
arpl
(bad)
ror
adc
iret
jg
sbb
(bad)
jo
add
ret
movs
into
pop
mov
int
mov
retf
pop
jle
cmps
ds
xchg
pop
and
mov
(bad)
mov
out
cmps
dec
sbb
push
out
scas
mov
idiv
cmps
push
cmp
bound
jecxz
xor
xchg
push
mov
adc
pop
cmp
dec
inc
adc
mov
inc
push
aas
sbb
pushw
aad
in
jne
rcr
es
(bad)
push
imul
dec
xchg
sub
inc
or
xchg
cwde
pop
jne
pop
dec
ret
sub
adc
mov
popa
cwde
stos
and
dec
add
and
lahf
out
aad
ins
or
or
in
sbb
repz
dec
sub
imul
stos
jmp
or
mov
mov
out
ds
pop
lods
mov
mov
lods
cld
jns
fsub
enter
pusha
xchg
dec
dec
nop
sar
pop
sbb
test
clc
adc
cdq
or
sub
push
aam
cmp
cmps
jg
dec
sti
push
das
mov
cmps
leave
stos
push
dec
mov
jbe
pusha
jl
jge
mov
stos
dec
neg
out
(bad)
and
enter
(bad)
aam
pop
adc
and
adc
push
ja
mov
xchg
je
jge
push
pop
dec
cmps
pop
test
mov
stos
rcl
daa
xchg
mov
push
lahf
xchg
pop
es
sub
in
bound
in
fisubr
inc
nop
rol
neg
pop
xor
(bad)
adc
pop
adc
bound
or
out
out
fild
(bad)
xor
pop
stos
cld
or
jl
ret
arpl
mov
jnp
mov
push
fs
xchg
jge
xchg
mov
add
mov
xchg
sbb
mov
ret
pop
loopne
push
mov
enter
xor
jae
push
dec
push
cs
out
rcl
adc
pop
pusha
cmp
and
sbb
popa
vcvtsi2sd
jo
mov
jp
test
pop
adc
test
jnp
test
das
in
fs
add
adc
fcmovnu
cmp
out
hlt
push
ret
out
test
(bad)
adc
dec
jae
push
ins
movs
mov
ss
div
pop
jno
iret
lods
cmp
add
ret
mov
iret
push
pop
add
push
mov
mov
lods
add
xchg
call
ror
cmc
mov
(bad)
sbb
mul
push
cmp
cwde
loope
fcomp
xor
cdq
fistp
dec
push
movs
neg
enter
adc
pop
mov
stos
xchg
jle
mov
aas
or
xor
cli
jg
sbb
popa
adc
int
pop
push
(bad)
in
js
xchg
push
popa
call
xor
pop
aam
jbe
aas
fcomp
push
add
jae
sub
gs
jle
movs
xor
xor
adc
jp
scas
inc
mov
icebp
add
imul
sub
lods
and
pop
cs
push
adc
dec
popf
xlat
in
pop
div
fidivr
dec
shr
aad
pop
and
xor
fidivr
outs
cmps
dec
popa
sbb
mov
movs
mov
sar
(bad)
popa
shl
test
stos
pusha
gs
mov
pop
arpl
cmovno
add
xor
and
dec
sbb
jmp
(bad)
fcom
sub
push
div
sbb
stos
cmps
(bad)
pop
jecxz
dec
inc
arpl
xlat
xchg
idiv
sub
popa
pop
iret
jle
shr
(bad)
cwde
mov
xor
push
lds
in
mov
fdivr
adc
jecxz
sub
adc
dec
xor
or
adc
sti
cld
adc
sti
xchg
addr16
(bad)
cmp
cmp
dec
ss
dec
bound
in
mov
add
sbb
loopne
add
mov
mov
mov
shl
pop
push
lahf
inc
jecxz
mov
adc
scas
mov
dec
pushf
in
jno
rcl
push
sub
scas
or
movs
es
aam
mov
pusha
cmp
cwde
mov
or
icebp
or
data16
or
adc
pop
xor
rcl
inc
or
mov
int
sbb
(bad)
pop
xchg
jne
outs
test
imul
stos
and
loope
jg
call
mov
cmp
cmp
xchg
enter
arpl
add
out
sbb
pusha
and
retf
fs
rcl
push
popa
sbb
push
mov
mov
mov
cmps
and
or
mov
in
iret
test
xchg
test
(bad)
mov
lods
adc
rcr
(bad)
in
and
push
mov
sub
(bad)
aad
push
dec
icebp
mov
test
xor
mov
xlat
aam
in
mov
pop
movs
sahf
rcr
jns
imul
xor
dec
ret
(bad)
sbb
push
push
outs
scas
dec
push
or
sahf
inc
mov
sub
mov
sbb
cmp
sub
out
je
jge
cs
mov
lods
xchg
add
push
and
sbb
fxam
sbb
in
loope
sub
jmp
popa
or
xor
sbb
dec
dec
mov
lods
in
xchg
xor
repz
imul
add
sahf
fldenv
imul
lock
stos
loop
in
and
and
cmp
mov
and
and
mov
inc
call
or
loope
call
(bad)
cmps
sbb
(bad)
fstp
or
fisubr
rol
(bad)
dec
stc
movs
pop
(bad)
ins
xchg
ins
pop
jge
or
cs
sahf
jecxz
jno
aad
add
repnz
sbb
das
lods
xchg
xchg
idiv
mov
cwde
fsubr
cmc
xchg
mov
xor
pop
xchg
aam
hlt
and
scas
iret
aas
jo
lods
dec
test
jg
arpl
cmps
cmp
jo
jg
gs
mov
clc
sub
cdq
push
pop
jmp
shl
fisttp
or
sub
push
dec
mov
xchg
adc
xor
jmp
and
sbb
lods
repnz
ds
mov
mov
int
sbb
sbb
rol
dec
inc
jl
mov
into
jae
inc
add
sbb
mov
fsub
dec
lock
cmps
ffreep
test
jp
sub
dec
jb
dec
in
enter
rcl
imul
ds
jge
push
fucomi
pop
dec
nop
pop
or
jae
out
retf
push
adc
stos
stos
scas
and
aas
cmps
sbb
sbb
lahf
fidivr
(bad)
icebp
xchg
fucomp
in
fild
lock
push
mov
(bad)
mov
scas
pop
mov
ss
fstp
add
and
fwait
mov
ins
stc
mov
in
inc
lock
pop
(bad)
xchg
outs
enter
xchg
jge
jno
cmp
sbb
int3
rcr
inc
push
jmp
hlt
dec
push
adc
sub
sbb
ds
loop
and
mov
lds
mov
lahf
xchg
push
ss
repz
mov
cmc
xchg
fadd
mov
xor
xchg
mov
mov
mov
add
aaa
cmp
add
xor
imul
inc
mov
xchg
cmp
iret
jge
add
mov
dec
cwde
imul
mov
bnd
and
ins
out
stos
or
inc
xchg
jb
add
mov
aam
jne
jo
outs
popf
in
sub
mov
sbb
xchg
or
push
sub
(bad)
je
add
(bad)
jg
aad
pop
adc
mov
leave
mov
jns
scas
retf
pushf
sub
jl
retf
pop
div
mov
daa
xor
pop
dec
lds
ja
dec
pop
sub
es
jmp
sti
or
imul
cmps
mov
dec
nop
movs
sbb
jge
in
out
mov
out
cmp
cmp
scas
(bad)
dec
mov
add
jl
fist
mov
or
pop
out
add
retf
push
popa
test
stos
xchg
inc
cli
lods
mov
es
out
mov
sbb
jmp
test
(bad)
daa
scas
in
cmp
sbb
push
push
test
xchg
(bad)
jg
out
sbb
rcr
push
ss
call
cmp
cdq
adc
mov
mov
cmp
mov
bound
fidivr
inc
(bad)
sbb
or
in
repnz
les
test
jp
and
mov
jecxz
or
gs
or
fisub
inc
xchg
fwait
push
and
inc
and
and
mov
add
push
out
test
adc
(bad)
(bad)
(bad)
mov
daa
loope
ds
imul
lods
lods
cmps
iret
ins
mul
mov
adc
jne
push
xlat
lods
ror
imul
sti
mov
push
sub
mov
cmp
pop
pushf
pop
(bad)
and
int3
xor
enter
lahf
aad
das
add
cmp
dec
mov
es
test
dec
push
into
pop
(bad)
push
mov
stos
test
mov
mov
pop
ss
nop
push
mov
inc
stos
popa
shl
pop
test
ds
sti
jl
xchg
sub
xchg
popf
mov
mov
and
sub
jnp
xor
loope
mov
stos
pop
addr16
in
xor
jno
xor
retf
xchg
sub
cli
cmp
int
jb
pcmpgtb
mov
or
xchg
leave
shl
rcr
xor
imul
stc
cmp
ret
sub
mov
xor
out
cmc
cmps
bound
xchg
xchg
mov
pop
scas
mov
out
scas
xor
sub
xchg
fld
mov
popa
sub
sub
out
lds
leave
scas
push
mov
add
add
mov
mov
jb
test
(bad)
fistp
scas
or
int
jnp
bound
ss
aas
xor
inc
movntps
sub
or
enter
(bad)
push
mov
jmp
call
xor
pop
dec
aad
lock
add
pop
jmp
lock
or
(bad)
and
pop
retf
rcl
stos
ss
push
in
jno
outs
xor
fs
cmp
and
repz
push
jbe
xchg
dec
xchg
mov
inc
scas
pop
call
test
push
popf
inc
and
mov
push
xor
enter
xchg
or
ins
aas
mov
cmp
fist
push
mov
pop
xor
fild
ds
ins
aas
push
mov
mov
cwde
(bad)
add
push
pop
pop
out
fwait
iret
(bad)
fisubr
shl
movs
iret
ret
add
add
jmp
or
push
shr
mov
pop
jl
inc
pop
push
sub
imul
mov
movs
mov
mov
aam
int3
fisub
sub
popf
dec
jns
and
pop
pop
popa
imul
cmps
aas
xor
pop
dec
and
mov
and
aad
xchg
adc
shr
or
icebp
ret
in
ret
inc
mov
cs
jp
xchg
push
adc
in
data16
rcr
ret
sub
aas
stos
jnp
sbb
jnp
xor
push
sbb
loop
mov
add
xchg
stos
dec
mov
or
inc
sub
or
enter
call
xchg
mov
or
adc
adc
pop
inc
cmp
xor
call
in
push
inc
dec
xlat
and
mov
rcr
sbb
inc
clc
scas
mov
das
add
xchg
imul
sub
adc
inc
jae
in
adc
ins
cli
movs
mov
ficom
shl
xchg
mov
jmp
out
cmp
mov
enter
push
push
xlat
rcl
aaa
fnstcw
repnz
push
cdq
aad
jle
xor
mov
mov
fimul
aas
push
fs
movs
jb
jb
add
sbb
inc
push
popa
je
or
(bad)
jmp
mov
bound
fwait
push
cld
pop
jnp
mov
push
xchg
mov
test
and
out
mov
pop
jp
cmp
mov
sub
daa
dec
(bad)
mov
cmp
into
xchg
(bad)
es
add
mov
nop
test
inc
xchg
dec
mov
pop
fcomp
jns
cdq
mov
pop
cmp
ret
mov
icebp
lahf
retf
retf
mov
mov
dec
sub
iret
adc
pop
sub
dec
loop
es
push
xor
ja
jae
mov
push
xor
sub
enter
cmc
fistp
jb
ds
add
sbb
jmp
mov
in
adc
push
outs
sbb
(bad)
mov
push
shl
into
push
icebp
jo
pop
int3
mov
dec
push
inc
adc
jbe
sub
leave
mov
jne
mov
cmps
cwde
mov
pushf
adc
scas
pop
sti
jl
xchg
arpl
imul
sti
iret
stos
mov
xchg
sub
cmp
inc
mov
cmp
call
fiadd
jns
jmp
push
pop
and
mov
and
sub
or
cmc
icebp
outs
shl
fcmovb
jge
jbe
in
and
sub
and
cwde
cld
out
pop
inc
push
cmp
cdq
sub
cmp
mov
pop
and
cmp
fmul
adc
jecxz
inc
pop
jmp
mov
mov
inc
inc
xchg
fwait
into
aad
mov
imul
call
(bad)
leave
scas
cdq
movs
mov
out
dec
shl
cs
xor
push
fnstcw
pop
das
mov
and
and
cmc
mov
daa
mov
stos
lahf
mov
(bad)
test
js
dec
dec
mov
or
xchg
and
push
loopne
mov
mov
mul
hlt
movs
in
xchg
jno
cdq
mov
jp
rcl
adc
test
ja
test
sbb
cmp
pop
test
xor
push
dec
sub
mov
test
cmp
retf
jecxz
nop
cmp
sub
mov
adc
pusha
dec
push
dec
jae
cmps
loop
adc
in
jae
out
std
pop
cmp
repz
imul
addr16
xchg
leave
pop
in
inc
inc
xlat
jge
pop
xchg
adc
test
mov
cmc
sub
jno
sub
mov
std
das
pop
sbb
add
das
scas
and
pop
test
jno
mov
es
repnz
fistp
in
cmp
dec
xchg
mov
and
pushw
pop
add
sbb
xchg
ds
imul
ds
mov
fs
test
inc
cs
out
outs
sbb
test
sbb
add
hlt
pop
test
inc
cmp
cmps
or
xchg
xor
pop
imul
rcl
dec
icebp
jp
arpl
std
sub
ss
cmp
pop
mov
push
clc
leave
sbb
jb
(bad)
mov
cdq
fwait
call
ret
add
mov
push
js
jnp
mov
dec
jns
xchg
add
mov
fs
in
pop
cld
mov
aad
adc
or
dec
cmp
mov
ror
repnz
leave
and
pop
add
in
cmp
test
jb
cmp
inc
xchg
xor
add
pop
ret
dec
ins
and
dec
mov
aas
and
mov
adc
cmp
out
pop
test
js
aas
aad
add
xchg
sbb
inc
in
mov
paddsb
jmp
mov
push
int3
cmp
jnp
imul
or
and
inc
or
cli
sbb
dec
mov
sub
call
movs
and
outs
mov
stc
lea
sar
repz
rol
cmp
mov
sbb
sbb
add
adc
adc
mov
push
dec
pop
xchg
js
hlt
cmp
sub
pusha
dec
jl
mov
push
dec
imul
inc
pop
jle
mov
retf
mov
add
shr
pop
sub
popf
adc
ja
pop
dec
mov
cld
mov
xchg
or
push
test
(bad)
mov
lods
push
inc
xor
jmp
push
sbb
adc
sbb
and
mov
cmovs
and
das
mov
sbb
pusha
imul
xchg
push
cli
xor
jbe
xor
and
(bad)
mov
mov
or
pop
dec
xor
mov
sbb
xor
jno
movs
es
add
cdq
retf
adc
mov
scas
loopne
test
sub
push
xor
push
fimul
jno
neg
arpl
(bad)
out
mov
adc
out
or
cmp
popa
or
mov
sar
daa
mov
sub
or
inc
(bad)
out
xchg
pop
mov
xchg
or
lock
je
and
dec
mov
aas
mov
push
mov
dec
sbb
xchg
sub
fst
push
jnp
push
repnz
into
mov
out
cmps
fld
cmp
in
mov
or
sub
mov
mov
inc
and
enter
shr
jmp
xchg
mov
and
sub
loop
sub
cmp
xchg
sbb
jl
into
inc
and
pop
in
or
aas
mov
sub
sbb
imul
out
jns
cmp
(bad)
pop
rol
xchg
sub
mov
mov
loope
xor
or
retf
int3
mov
xor
add
push
dec
leave
mov
inc
fst
add
mov
add
shl
jge
inc
fcom
push
pop
xor
mov
loope
(bad)
mov
not
jo
xchg
adc
sbb
cmp
aad
pop
aaa
mov
inc
mov
sbb
stc
pop
or
jmp
aam
ret
sub
mov
pop
ret
cmp
dec
sbb
dec
pop
push
sbb
mov
rcl
in
mov
pop
pop
dec
fsub
mov
cmp
pop
shr
pusha
lds
xadd
int3
scas
(bad)
mov
cmp
(bad)
stos
dec
cmp
loopne
cwde
cmc
jns
xchg
stos
les
jbe
jecxz
aam
aad
das
dec
enter
aas
jecxz
cmp
int3
jbe
sti
push
xchg
mov
js
fcom
lock
lods
push
inc
add
inc
or
icebp
and
add
jmp
je
sub
imul
adc
xchg
cld
mov
add
jo
lock
mov
out
sar
sbb
lahf
mov
fisttp
mov
xlat
mov
pop
pop
stc
push
jp
fnstcw
js
aam
in
das
xchg
cmc
mov
inc
out
jg
out
pop
jle
stos
(bad)
(bad)
xchg
int
pushf
push
mov
mov
push
icebp
push
aam
out
dec
adc
pop
pop
sub
push
aad
lahf
push
xor
sbb
adc
sar
pushf
std
xchg
and
test
or
pushf
pop
sbb
mov
stos
push
sbb
int
xchg
push
xchg
inc
out
(bad)
scas
scas
adc
rcr
pop
add
sbb
in
xlat
sahf
jno
loopne
or
push
retf
dec
mov
cdq
ss
fadd
sbb
dec
and
fsubp
fdivr
dec
ins
retf
scas
int
or
or
mov
ins
mov
sub
mov
jno
pop
jg
xchg
rol
sub
xor
push
in
test
cs
and
hlt
jl
add
jg
aas
jns
bound
je
lea
leave
mov
rcr
cli
imul
xchg
jbe
xchg
xor
mov
ror
mov
test
fst
jecxz
fcmovne
or
sub
fld
push
and
dec
not
mov
enter
int
sbb
adc
adc
stos
jae
sub
inc
pop
mov
std
xchg
pop
mov
push
mov
sub
mov
push
push
add
loopne
retf
mov
aad
or
test
xor
shl
sbb
call
sub
or
aam
enter
pop
xchg
pcmpgtd
inc
int
nop
or
out
pop
fwait
xchg
push
aam
test
xor
mov
and
or
retf
imul
fwait
loopne
push
addr16
movs
or
jb
popf
ins
cmps
(bad)
sub
dec
ss
sbb
mov
dec
movs
and
mov
fsubp
mov
add
outs
push
xchg
mov
shr
lods
loope
clc
jle
or
cmp
jno
xchg
shr
(bad)
jmp
rsm
dec
jle
xor
(bad)
xor
movs
pop
pxor
mov
(bad)
xchg
test
xor
mov
and
les
repnz
outs
mov
xor
xchg
inc
xchg
or
pop
and
xchg
stc
repnz
jb
pop
ret
xor
popa
inc
das
outs
add
pop
ins
xchg
mov
dec
lods
dec
fs
or
in
test
stc
loope
or
mov
das
push
inc
js
popf
push
jge
out
cmps
pop
sub
push
xor
mov
popf
test
adc
rol
int3
or
push
cmp
pop
neg
out
sbb
adc
popa
out
sub
ja
sub
imul
pop
adc
xor
add
out
ja
add
sub
inc
push
fmul
dec
cmc
imul
inc
xchg
mov
push
inc
mov
imul
sar
xchg
neg
loop
pop
xchg
xchg
jmp
call
std
stos
ins
add
sub
movs
pop
sbb
jne
sub
scas
aam
(bad)
adc
cmp
push
sub
daa
lods
out
ret
sub
sbb
inc
dec
jo
xlat
mov
adc
mov
add
dec
mov
push
fucom
xor
sbb
push
add
ss
jnp
in
sub
outs
cmps
aam
push
or
or
dec
pop
push
int3
mov
int3
(bad)
pop
pop
push
mov
dec
fisttp
js
jmp
inc
jne
sub
sahf
test
pop
jmp
pop
fistp
and
mov
dec
lds
test
dec
sbb
out
int
fidivr
fldenv
dec
mov
jp
lods
xor
dec
push
dec
xchg
jbe
stos
sbb
jle
dec
xor
arpl
dec
div
movs
loop
cli
sub
(bad)
clc
lods
xor
ss
imul
popf
or
test
inc
pop
sub
mov
dec
or
aam
push
add
repnz
call
dec
sar
stos
rcl
jmp
cs
daa
rcl
scas
jb
call
pushf
aaa
out
ss
dec
jne
pop
lahf
mov
cli
jmp
jo
cdq
rep
inc
mov
jp
mov
rcr
inc
and
jnp
dec
sub
pushf
scas
ins
out
in
adc
call
aad
xor
cli
outs
xchg
test
push
mov
cmp
sahf
push
pop
add
pop
cli
icebp
dec
out
imul
push
int
movs
ret
xchg
mov
mov
inc
fdiv
jno
popf
jo
sbb
jbe
shl
sbb
sbb
xchg
jmp
add
cmpps
add
gs
dec
lods
cmp
test
jae
enter
out
dec
mov
xchg
jle
ror
add
cwde
adc
repnz
icebp
push
cs
fcomi
push
mov
cvtdq2ps
pop
call
mov
int3
test
cmps
outs
xor
imul
mov
fdivr
mov
jno
sub
fstp
cmps
push
cwde
and
call
cmc
xchg
cmp
pop
lock
fwait
inc
out
test
clc
sub
loope
mov
loope
mov
es
sub
test
mov
int
daa
data16
retf
test
pop
xchg
rol
add
mov
jnp
xchg
sub
xor
dec
fidiv
pop
jns
dec
mov
cmp
push
movs
into
dec
sbb
(bad)
push
mov
jo
mov
mov
enter
imul
sub
in
jb
pop
adc
push
mov
cmp
ins
mov
ins
and
adc
xchg
dec
sub
(bad)
into
ret
repz
das
dec
inc
cmp
scas
stos
in
scas
jae
hlt
add
cmp
sub
btr
cdq
rol
je
cli
pop
fstp
test
pop
xchg
xchg
or
shl
test
cwde
data16
popf
shl
cmps
ds
mov
fwait
adc
push
js
sahf
in
cmp
push
out
add
adc
lock
pop
push
mov
nop
push
jo
or
jbe
jbe
scas
lock
retf
rcr
imul
xor
adc
mov
ins
arpl
sub
xor
iret
pop
out
push
fldcw
jmp
test
stos
jns
cmp
ret
mov
add
cwde
push
mov
cmp
add
fcos
and
(bad)
mov
xchg
push
sbb
and
push
cmp
out
xor
je
jo
dec
jne
retf
imul
int3
not
xor
mov
shufps
stos
push
mov
sub
cmp
pop
pop
cli
out
mov
add
popf
xchg
jge
add
add
fnstcw
xchg
sbb
lock
aas
mov
add
and
sbb
hlt
shl
mul
repnz
dec
pop
and
mov
leave
(bad)
push
sub
int
push
in
jg
push
mov
retf
mov
iret
sti
sti
mov
aad
jmp
xor
adc
push
jns
push
outs
out
int
mov
pop
mov
xor
stos
in
popa
push
fwait
jo
nop
push
repz
xor
test
fsub
xchg
cmp
pop
mul
ds
inc
sar
std
inc
inc
fdiv
pop
xchg
add
and
mov
adc
movs
out
or
inc
xor
scas
cmp
mov
cmp
push
lahf
jno
test
scas
push
cmp
mov
sbb
mov
jmp
fisttp
scas
xchg
ds
push
imul
ror
iret
push
pop
xchg
or
mov
bound
mov
inc
xchg
stos
push
fs
xchg
scas
cmp
mov
push
(bad)
div
leave
mov
dec
cli
stos
out
adc
xchg
dec
inc
inc
xchg
jge
clc
js
cld
pushf
cmps
mov
loopne
jmp
push
retf
std
push
int3
lds
js
mov
retf
rcr
cmp
(bad)
xchg
(bad)
pop
mov
mov
std
inc
arpl
mov
(bad)
mov
aad
and
test
pop
dec
mov
add
movs
lods
test
xor
rcr
adc
pop
ins
push
xlat
pop
and
cli
sub
push
addr16
sub
xchg
maskmovq
neg
fcmovnb
xchg
test
dec
sub
nop
or
jo
pop
cmps
pop
cmp
int3
inc
sbb
add
fidivr
and
inc
rcr
lds
sub
push
fld
xchg
jno
lea
loop
and
or
mov
ja
jge
es
das
pop
and
and
jnp
enter
mov
out
and
imul
push
popf
lock
push
(bad)
xor
test
popf
test
retf
sub
jb
stc
sub
mov
inc
hlt
je
xor
call
add
jns
pop
int3
or
imul
ss
mov
gs
pop
mov
das
inc
mov
ins
xchg
imul
int
push
xor
add
add
push
jo
push
add
test
mov
pop
mov
outs
adc
ins
fwait
mov
jae
sbb
jno
add
xor
jp
mov
daa
(bad)
jg
(bad)
sti
cmp
mov
out
int3
push
or
(bad)
push
sub
call
loope
xchg
jmp
sub
jns
dec
cmp
loop
ins
pop
ficom
outs
cmc
xchg
cmc
fcomp
xor
mov
dec
mov
sub
repz
push
clc
pop
adc
cmps
inc
xchg
pop
inc
ret
ror
push
test
jg
push
mov
xor
jnp
rol
mov
movs
mov
shl
and
xchg
pop
xchg
or
xchg
mov
clc
xchg
sbb
sbb
scas
lods
ret
pop
push
mov
rcr
pop
in
fdivr
test
xchg
adc
hlt
je
mov
imul
into
call
mov
push
sub
mov
cmp
rcl
hlt
hlt
adc
and
js
leave
fisubr
imul
mov
lock
push
idiv
iret
sbb
or
add
mov
adc
sub
fwait
jge
das
icebp
jle
xchg
pop
iret
inc
popf
test
test
mov
imul
dec
fldenv
jmp
inc
dec
pop
cmp
adc
pusha
cmps
cmp
rol
xchg
inc
aad
fimul
(bad)
pop
jno
inc
and
je
movs
sub
cs
cs
cmp
sbb
dec
je
inc
icebp
(bad)
rol
mov
sub
dec
aaa
popf
es
xor
repnz
mov
into
or
mov
data16
fisub
es
xor
or
push
mov
cmp
es
fimul
sub
mov
sar
and
pop
fwait
sti
(bad)
push
mov
cdq
cmp
dec
fs
mov
fldenv
push
or
add
cmp
pop
add
imul
das
fisttp
xor
fwait
mov
scas
lds
fwait
(bad)
addr16
gs
jp
shl
call
push
repnz
push
retf
sub
cmp
pop
mov
jbe
imul
mov
cmps
rcr
gs
aad
cmp
dec
mov
rcr
mov
fcomp
cld
pop
mov
jae
cwde
mov
push
hlt
mov
aad
adc
call
pop
dec
xchg
shl
imul
add
mov
clc
je
movs
ins
cwde
push
inc
popf
into
bound
sub
jnp
retf
data16
mov
jo
xchg
inc
ret
jmp
pop
push
test
pop
mov
jg
out
mov
mov
pop
clc
shl
or
jmp
push
test
xchg
jne
xor
adc
sbb
enter
jne
fild
push
dec
adc
mov
xor
scas
pop
xor
je
adc
popa
mov
jmp
test
data16
pop
imul
pop
clc
out
or
in
hlt
out
mov
icebp
inc
and
or
jg
mov
inc
ror
cs
push
stos
test
adc
pop
jbe
aam
mov
hlt
loop
std
movs
or
sbb
or
call
xchg
ficom
cmp
dec
popf
in
or
test
pop
sbb
or
leave
push
jne
mov
push
or
ss
mov
fidivr
cmp
mov
cmp
mov
mov
daa
jmp
test
enter
inc
adc
ins
pop
arpl
cs
jmp
pop
xor
in
popf
gs
jecxz
ficomp
xchg
mov
rol
sbb
push
mov
stc
dec
ins
and
sbb
pop
xchg
lods
dec
int
inc
cmp
pop
or
xchg
aad
jb
test
sbb
mov
add
into
or
mov
sbb
and
bound
ror
sub
sbb
push
dec
fstp
dec
sub
retf
movs
(bad)
je
outs
adc
push
ror
out
xchg
sbb
(bad)
jmp
loopne
jg
xchg
xchg
xor
adc
adc
cmps
and
cdq
dec
popa
adc
mov
xchg
cwde
mov
fst
mov
xor
ja
push
enter
(bad)
pop
xchg
fwait
pop
push
or
cmps
pusha
inc
lea
fisttp
push
xor
(bad)
xchg
dec
sar
retf
lods
cmp
shr
imul
dec
leave
retf
dec
jbe
stos
mov
stc
mov
les
xchg
iret
iret
adc
adc
pusha
or
imul
sbb
mov
pop
pop
jecxz
fadd
push
(bad)
inc
pop
clc
push
lock
cmp
fdivrp
(bad)
das
ins
jmp
mov
inc
add
sbb
inc
xor
mov
mov
sbb
push
or
daa
and
stc
(bad)
xchg
(bad)
int
cmps
cli
pop
and
mov
lahf
out
aaa
lock
push
in
cmp
popf
push
jl
aaa
xor
or
adc
and
popf
sbb
test
icebp
mov
addr16
cli
es
scas
stos
shl
outs
dec
jge
pop
out
adc
adc
sbb
sbb
ret
ja
and
outs
dec
mov
dec
lahf
lock
movs
ror
iret
add
ret
mov
aad
jns
mov
and
das
inc
fstp
dec
cmc
aad
fldenv
std
sahf
fwait
jne
or
les
adc
cli
cmp
imul
les
push
fbstp
xor
aas
mov
sahf
and
outs
xchg
std
sbb
cmps
push
cmps
sub
xor
xor
jmp
pop
sahf
jbe
mov
cmp
xor
mov
cmc
out
fidivr
(bad)
jnp
cwde
push
sar
movs
pop
lds
retf
inc
rcr
mov
(bad)
fucomi
(bad)
fcmovbe
(bad)
dec
cmp
cmp
cli
test
xchg
jnp
into
lea
in
xor
xchg
in
mov
xchg
and
pop
ret
adc
ss
repnz
loope
scas
ret
inc
(bad)
(bad)
mov
repz
sbb
(bad)
mov
mov
sbb
xchg
test
adc
jbe
inc
or
ret
pop
leave
out
cld
mov
lahf
xlat
fisttp
jne
mov
pop
or
inc
cs
pop
sub
std
xor
fadd
and
sub
mov
add
loope
cmp
addr16
stos
jb
or
gs
pop
inc
inc
mov
fimul
test
loope
sbb
lods
fucomip
popa
jmp
retf
aaa
sbb
dec
sub
inc
iret
fbstp
add
sub
(bad)
fs
inc
es
jno
cmp
and
inc
faddp
loopne
inc
(bad)
out
mov
or
dec
enter
push
jmp
cmp
sahf
in
jno
xchg
fcompp
push
aas
cmps
idiv
mov
sbb
or
xor
hlt
aas
mov
jb
mov
shr
ret
push
add
shr
cmp
es
arpl
and
add
xor
in
jmp
and
rol
and
sbb
jne
push
add
lods
inc
imul
or
dec
or
fcomip
repnz
xor
(bad)
xchg
(bad)
jl
dec
pop
cmp
push
pop
jne
mov
aas
mov
mov
mov
(bad)
outs
sbb
dec
popf
cmc
or
leave
fs
mov
adc
dec
ficomp
loop
push
pshufw
mov
jle
dec
lods
or
and
push
push
ret
xor
in
dec
cmps
mov
out
aaa
out
pop
bound
mov
aam
loopne
mov
jno
inc
pop
mov
out
sub
(bad)
ds
out
mov
pop
popa
bound
nop
mov
push
jne
xor
aaa
imul
dec
jns
sub
inc
xor
mov
sub
jl
fstp
push
cmc
je
mul
xchg
mov
call
mov
or
fadd
add
fs
pop
lods
push
jl
imul
xlat
adc
mov
inc
or
or
iret
pop
in
dec
or
cmc
dec
inc
or
repz
(bad)
enter
ret
jmp
push
pop
and
repnz
div
pop
je
sahf
loopne
test
nop
xchg
xor
loope
cmps
jb
ins
xchg
or
ror
jp
mov
mov
retf
retf
inc
and
sbb
fsub
shl
add
adc
daa
int3
fimul
dec
iret
iret
push
shl
pop
in
hlt
add
retf
add
pop
(bad)
inc
imul
outs
into
test
in
pusha
xor
out
xchg
imul
clc
mov
fcmovbe
sbb
pop
test
in
repnz
and
fnstsw
je
movs
fcomip
cdq
mov
daa
jb
pop
mov
xchg
and
in
mov
scas
lds
sub
adc
push
add
int3
mov
dec
xchg
jb
retf
ss
xor
ret
iret
push
and
jmp
lods
inc
inc
(bad)
mov
addr16
jecxz
cld
xor
out
sti
into
imul
outs
cmp
push
sub
push
inc
call
dec
and
outs
xor
(bad)
int3
xchg
aad
sub
mov
xchg
repnz
push
push
and
cmp
fldenv
int
test
hlt
push
cmp
mov
mov
imul
sbb
ins
sbb
or
mov
jle
adc
outs
jg
sub
stos
cdq
pop
xchg
xchg
fcmovnu
cmp
cmps
add
cmps
loopne
(bad)
je
hlt
mov
adc
xor
and
or
sub
dec
loop
jns
repz
xor
and
xchg
or
xchg
daa
scas
cmc
adc
jnp
sub
shl
mov
mov
shr
cmp
push
int3
and
or
add
(bad)
rcl
sub
loopne
sbb
test
dec
fbld
xchg
scas
daa
xchg
ja
ja
adc
xchg
retf
sub
sub
aaa
sbb
pop
int
adc
popf
pop
mov
clc
in
aam
pop
push
test
loop
pop
movs
push
nop
cmp
xor
inc
test
mov
and
inc
xchg
push
(bad)
popa
movs
mov
and
sub
iret
aam
loopne
(bad)
cmp
out
test
imul
add
(bad)
std
stc
dec
add
dec
pop
lea
inc
imul
in
mov
and
xor
mov
enter
mov
fcmovne
std
mov
fadd
cmovo
icebp
movs
ins
retf
ss
loope
aaa
dec
cld
aam
xchg
adc
dec
fist
lock
or
mov
adc
push
push
sbb
push
xchg
not
scas
fldcw
mov
adc
and
or
and
loope
ins
sti
add
lea
mov
jge
out
test
or
mov
jmp
xchg
scas
inc
xchg
jbe
jecxz
pop
scas
pop
push
xchg
sbb
(bad)
sub
adc
je
mov
jge
dec
retfw
neg
fcom
xor
loope
iret
xchg
(bad)
rcr
jmp
dec
loop
cdq
mov
arpl
mov
fdiv
pop
sbb
xchg
sub
(bad)
test
jne
aaa
cmp
and
cmp
cdq
xchg
dec
jne
sbb
sub
xchg
add
jnp
dec
pop
inc
push
in
xor
and
aaa
xor
push
sbb
mov
scas
xor
outs
cmp
out
xchg
fs
inc
mov
lahf
jp
adc
or
jp
rol
cmc
clc
test
mov
jp
sahf
xor
ins
mov
dec
aaa
cld
mov
stos
lods
jmp
mov
pop
in
or
sub
int3
iret
outs
out
stos
push
cmps
adc
and
mov
push
scas
pop
add
mov
add
cwde
pop
pusha
pusha
fucomi
xchg
and
or
mov
hlt
pop
inc
push
mov
sahf
retf
fwait
test
(bad)
sub
and
mov
jle
mov
push
push
mov
cmp
mov
pop
jmp
pop
jbe
xchg
sub
xchg
sahf
fimul
inc
xchg
add
mov
imul
adc
jl
or
xor
mov
sub
(bad)
adc
dec
adc
les
adc
hlt
push
sbb
fild
mov
test
add
or
sub
ficomp
inc
xchg
adc
vfrczps
jmp
jmp
arpl
add
or
mov
and
ja
xlat
cmp
xor
inc
(bad)
dec
mov
int3
cmc
mov
inc
(bad)
mov
(bad)
outs
push
and
jmp
fcomp
cmp
dec
jmp
cmps
mov
xor
push
iret
mov
add
jnp
loopne
pushf
sub
mov
outs
mov
sbb
(bad)
mov
cs
pop
mov
cli
dec
or
fistp
movs
loope
mov
clc
xor
or
rol
push
jmp
jmp
fisttp
ss
push
mov
jne
outs
aaa
mov
sub
popf
add
cmp
xor
or
and
xor
shrd
sahf
out
ret
stos
je
fcom
(bad)
(bad)
sbb
popa
jmp
int3
dec
js
out
or
in
movs
inc
ja
les
pop
movs
ins
nop
sbb
out
(bad)
test
nop
repz
and
pop
add
lahf
inc
jns
imul
es
rol
sbb
dec
jae
in
aad
mov
dec
push
adc
pop
(bad)
jg
mov
pop
jae
and
stos
push
ins
inc
(bad)
(bad)
and
push
out
(bad)
inc
in
add
sub
aam
and
loope
test
(bad)
into
xor
pop
ret
mov
scas
adc
mov
xor
fild
loop
push
pop
pushf
test
jb
cwde
and
es
and
cwde
jg
jle
pop
ficom
cmp
retf
out
xor
inc
xchg
in
je
and
(bad)
stos
es
clc
shl
jl
sub
mov
sub
dec
or
xor
cmp
(bad)
nop
inc
cld
jnp
in
in
not
mov
adc
fwait
push
sub
fs
jmp
dec
and
sbb
jl
js
mov
cmp
and
xor
sub
mov
mov
jae
stos
stos
cmp
mul
dec
fld
hlt
out
dec
inc
cmp
cs
outs
jmp
test
aaa
fsubr
pop
(bad)
fcom
push
lods
cmp
cmp
cmps
lea
mov
jp
xchg
inc
add
jmp
dec
clc
mov
jmp
inc
ret
sbb
movs
jb
sub
adc
or
fisttp
mov
pop
movs
push
mov
xchg
outs
mov
lods
test
aaa
jo
stc
dec
imul
mov
inc
icebp
cs
mov
inc
jae
adc
not
jno
inc
fwait
pop
dec
gs
call
jmp
xor
add
nop
retf
jnp
pop
call
fucomip
lea
mov
std
pusha
dec
cmp
pop
scas
mov
push
repnz
mov
out
sbb
and
lds
jge
pop
cmp
mov
sbb
std
cmp
ret
outs
dec
push
pop
mov
xor
sub
cli
push
cmp
adc
dec
retf
mov
inc
pop
pop
shl
mov
in
mov
cmps
pop
mov
push
stos
mov
f2xm1
ds
add
int
xor
mov
ss
mov
add
or
cwde
dec
cs
jp
mov
mov
stc
(bad)
push
mov
push
out
pop
fdivr
sbb
jnp
mov
dec
sub
into
loop
jp
hlt
repz
xchg
sub
jl
retf
das
sahf
mov
sbb
push
popf
mov
mov
push
(bad)
(bad)
mov
pusha
clc
test
sub
nop
cmp
ss
mov
mov
mov
inc
jns
out
fisttp
(bad)
test
pop
mov
dec
fwait
lds
ret
mov
sub
mov
and
in
and
aas
adc
daa
je
scas
(bad)
in
xor
lea
inc
mov
scas
dec
aaa
inc
es
das
ret
rcl
in
push
dec
ret
push
cmp
imul
sar
xchg
xchg
push
icebp
(bad)
jb
movs
jb
xlat
neg
xchg
fcom
mov
cmp
(bad)
xlat
mov
adc
mov
jg
test
scas
jo
push
or
push
nop
test
jle
adc
cmp
and
cmp
adc
je
pusha
push
daa
mov
in
xor
lds
mov
mov
fadd
cmc
bound
les
push
sbb
or
fwait
das
mov
mov
adc
loop
pop
mov
int
mov
push
mov
adc
inc
push
cwde
push
fldenv
mov
cmps
jp
bound
or
ins
lods
das
mov
mov
mov
pmuludq
push
in
test
aad
je
aad
loopne
mov
es
sahf
mov
ret
test
pusha
xlat
pop
aad
pusha
xor
push
jge
mov
mov
sar
inc
xchg
push
sar
rol
sbb
adc
lea
mov
loop
stos
jmp
mov
dec
test
stc
dec
jno
movs
mov
xor
fldenv
jbe
in
sub
jno
hlt
add
mov
dec
sar
test
cwde
test
not
ret
repz
popf
(bad)
(bad)
jp
push
mov
dec
loopne
in
in
(bad)
mov
jge
dec
cmp
xchg
inc
mov
(bad)
aad
mov
mov
push
and
(bad)
pusha
sbb
add
adc
mov
scas
into
xchg
mov
mov
jnp
call
dec
dec
mov
jmp
pop
pusha
in
and
mov
in
or
sbb
lock
adc
imul
xor
in
push
je
inc
push
inc
inc
xlat
jg
push
sbb
push
fdiv
test
leave
dec
aaa
dec
stc
pop
in
xchg
ins
inc
xor
pop
xchg
out
add
pop
popf
jmp
sbb
adc
mov
and
or
ins
(bad)
(bad)
lods
test
icebp
or
mov
(bad)
repnz
xchg
mov
cld
cmp
jno
stc
adc
fs
loope
mov
mov
pop
fcmovbe
jne
cld
popa
mov
sub
xchg
jl
add
(bad)
scas
lods
repz
repnz
loop
sti
mov
xor
push
sar
mov
inc
(bad)
jl
mov
pop
or
popa
addr16
ins
loop
mov
or
xor
movs
fstp
jecxz
mov
das
xor
mov
xchg
retf
jle
sub
cmc
(bad)
(bad)
jnp
sub
or
push
push
js
out
(bad)
inc
(bad)
cmp
push
add
push
push
call
call
inc
inc
repnz
add
inc
arpl
sar
adc
push
mov
push
mov
mov
daa
xchg
mov
popf
loopne
fimul
push
clc
sti
mov
bound
(bad)
jae
xchg
or
cmps
pop
sbb
sub
cwde
mov
cs
and
push
out
adc
lods
or
or
aas
scas
jmp
add
out
js
jecxz
pop
sbb
jo
mov
jns
sub
mov
cwde
std
movs
adc
xor
add
push
call
pop
int
in
lods
push
cdq
int3
rol
inc
lock
call
dec
pop
lods
mov
sar
leave
test
mov
add
xchg
inc
adc
int
pop
push
mov
dec
sti
out
lahf
call
and
into
fwait
ds
test
sbb
dec
je
xor
mov
pop
ins
das
scas
xchg
call
ret
adc
dec
bound
mov
xor
shl
popa
jns
xchg
(bad)
fwait
mov
cs
cmp
mov
pusha
dec
pop
xchg
jns
pop
pop
add
jns
adc
dec
push
arpl
mov
mov
call
dec
aad
xor
pop
fs
rcr
jg
xchg
ficomp
xor
(bad)
mov
pushf
pop
retf
mov
inc
arpl
mov
and
adc
mov
outs
cwde
fbld
movs
push
sub
sub
pop
aaa
not
pop
out
imul
dec
mov
inc
add
sbb
jnp
jae
cmp
xor
mov
loope
in
cmps
imul
ret
scas
scas
iret
mov
popf
push
adc
daa
cmps
dec
dec
pop
or
or
iret
fild
mov
popf
jb
jae
and
inc
mov
jecxz
mov
call
stos
xor
pop
mov
inc
adc
sub
(bad)
jecxz
inc
dec
into
jae
adc
cmp
iret
enter
xlat
fadd
add
les
mov
or
mov
pop
cdq
mov
ret
cli
outs
(bad)
mov
lea
mov
pop
loop
pop
cmp
cmp
movs
xor
adc
sub
(bad)
cwde
ret
or
fld
mov
(bad)
and
outs
inc
aaa
outs
(bad)
daa
or
push
neg
jecxz
enter
adc
sbb
mov
mov
pop
pushf
cld
jecxz
loop
sbb
mov
jp
jmp
pop
sbb
imul
jg
jns
mov
mov
adc
out
fld
jp
out
push
inc
sbb
mov
xchg
dec
leave
pushf
ret
and
js
xchg
jne
es
in
xor
mov
pop
or
bound
ds
push
cmps
clc
ins
jnp
mov
out
ins
inc
out
in
ret
mov
addr16
out
test
fdiv
daa
js
mov
mov
mov
adc
(bad)
xchg
pop
and
(bad)
ss
jbe
push
pop
jle
fs
gs
inc
pop
clc
mov
inc
in
inc
sbb
add
and
jne
fwait
dec
in
out
xor
ins
sar
or
lods
mov
je
loope
mov
xchg
push
jmp
inc
sub
mov
repnz
adc
add
ja
aas
fcomp
fcom
mov
js
repnz
mov
aam
sbb
mov
dec
nop
test
jle
out
or
mov
(bad)
push
out
loop
dec
jo
imul
jl
inc
dec
pop
mov
je
sub
push
les
inc
bound
push
mov
cmp
imul
inc
jecxz
stos
fsubr
mov
xor
xor
inc
std
push
and
loope
imul
add
(bad)
mov
in
cmp
sub
or
add
nop
cmc
push
(bad)
jnp
xor
mov
imul
add
cmp
js
mov
or
out
gs
inc
loop
inc
test
cld
xor
adc
stc
cwde
lea
lock
repnz
fwait
push
aad
outs
add
push
jl
sbb
xchg
push
mov
add
call
lods
iret
cmc
xlat
les
shl
jo
mov
sub
pop
mov
(bad)
mov
aas
mov
scas
rol
mov
add
cld
sbb
paddb
xlat
sub
push
mov
rcl
adc
hlt
(bad)
sar
inc
dec
into
xchg
mov
sub
dec
xchg
sbb
test
mov
adc
push
pop
inc
sbb
clc
sbb
sub
loop
mov
pop
loop
sar
cmp
clc
push
push
js
mov
push
ins
lds
test
push
lea
xchg
jp
sub
mov
mov
ins
mov
pop
xchg
std
sbb
xor
arpl
fcmovnu
push
lock
es
jno
mov
xor
js
sbb
and
retf
mov
fisub
and
data16
mov
rol
daa
mov
sub
test
jo
cs
sub
push
push
pusha
dec
lock
fwait
and
fild
xor
(bad)
push
inc
scas
adc
mov
jae
cmps
pop
in
xor
cld
fs
or
xchg
mov
mov
out
mov
mov
sbb
into
mov
fidivr
dec
test
cmp
imul
cmps
pop
push
add
xchg
fwait
push
out
addr16
dec
sub
mov
ins
add
adc
dec
push
mov
add
dec
xor
fisttp
cmps
and
shrd
jmp
push
push
push
or
(bad)
(bad)
lds
out
pop
mov
sbb
sbb
rcr
jp
daa
push
and
in
repz
and
cwde
call
lahf
int
inc
ret
popa
add
cld
cmp
mov
xlat
cmp
test
sbb
pop
pop
test
cld
dec
push
and
lods
popa
stc
jo
aam
dec
pushf
xchg
dec
lds
pop
mov
mov
pop
clc
push
cmps
jg
jb
out
jns
sbb
cmps
in
mov
aam
dec
hlt
jno
jb
mov
(bad)
sub
inc
or
loop
out
xor
jb
mov
scas
daa
sub
pop
es
cmps
dec
repnz
loopne
pop
push
xor
and
cmp
aad
fwait
mov
sub
adc
test
xchg
pop
cmps
jle
jp
jg
movs
mov
pop
je
lea
fwait
xchg
pop
push
not
sub
mov
fwait
loopne
fst
mov
push
repnz
add
inc
sti
je
inc
xchg
cld
adc
add
clc
shr
xor
sub
or
aaa
mov
dec
std
clc
dec
fs
stos
and
and
adc
shl
fwait
or
mov
sbb
jmp
mov
ret
jnp
test
data16
xchg
mov
sub
aas
mov
inc
mov
xor
mov
cwde
retf
push
add
out
imul
jbe
adc
push
add
xor
xor
sbb
popa
jmp
adc
xchg
ret
fwait
dec
push
in
aas
or
push
inc
and
icebp
aaa
cmps
clc
fwait
ret
test
(bad)
xor
int3
mov
pop
cmp
push
mov
stos
jge
jg
and
mov
les
dec
scas
lea
mov
aad
js
mov
adc
add
stos
ror
dec
lahf
scas
jmp
jmp
test
mov
fld
sub
sbb
es
daa
lods
jae
test
pop
data16
adc
jmp
dec
scas
lahf
js
stos
cmc
mov
pop
inc
les
xor
lods
ffree
dec
movs
jnp
dec
cmps
pop
and
(bad)
fstp
mov
test
daa
mov
xchg
inc
mov
iret
mov
sbb
xchg
push
in
or
mov
popa
inc
(bad)
retf
cmp
mov
fs
sub
scas
mov
cwde
shl
sbb
in
mov
cli
xor
or
es
cld
dec
add
sub
call
cmp
clc
push
xchg
fistp
pop
pop
dec
sbb
xlat
push
xchg
and
sbb
out
sub
outs
je
les
mov
mov
popw
nop
mov
pop
movs
jl
or
daa
ret
leave
add
pusha
xor
lahf
test
les
mov
psubsw
sbb
xor
fs
pop
out
shl
mov
ins
aaa
adc
or
mov
dec
icebp
daa
push
fwait
lods
leave
repnz
retf
call
mov
sub
not
cmc
push
jmp
push
jg
xchg
sub
mov
stos
mov
mov
in
pop
or
xlat
push
mov
fistp
sbb
ret
enter
leave
jb
neg
sub
dec
dec
icebp
addr16
sar
mov
xor
rcr
imul
sbb
sbb
retf
push
jmp
ret
sbb
mov
in
push
and
push
fs
mov
jo
daa
push
cmc
push
pop
sti
and
in
rcl
out
pop
mov
mov
mov
cmps
leave
inc
push
sub
test
xor
lods
aaa
and
and
jae
icebp
leave
and
or
jnp
inc
xlat
dec
scas
mov
jmp
adc
loope
sub
in
jecxz
adc
cli
cmps
js
lds
push
xchg
push
mov
(bad)
sti
mov
pushfw
dec
dec
adc
fcomi
dec
repnz
cmovne
iret
cmps
mov
(bad)
scas
jl
mov
dec
push
sub
ds
or
imul
adc
adc
iret
jecxz
neg
cdq
xchg
add
stos
cmp
in
inc
lea
sbb
mov
ins
stos
test
mov
cmp
jns
imul
mov
xor
shl
stos
sbb
out
push
sti
js
sub
sbb
in
lods
das
(bad)
push
mov
nop
jge
daa
mov
call
cmps
das
dec
ds
dec
or
add
dec
icebp
dec
adc
sbb
jnp
fcmovu
or
sti
add
ins
out
and
mov
add
and
mov
mov
mov
mov
cmp
and
fsubr
dec
ins
imul
mov
pop
cdq
and
inc
mov
jg
lock
je
rol
test
leave
sub
inc
jne
test
xchg
pusha
(bad)
mov
xchg
mul
adc
mov
pop
ja
push
clc
cmp
mov
ins
pusha
mov
xor
jns
movs
push
adc
dec
jmp
cmp
dec
imul
dec
loop
inc
xchg
pop
pusha
jp
mov
add
fucomi
es
push
adc
icebp
sub
out
dec
mov
xlat
test
rol
fucomip
popa
std
mov
cs
mov
add
mov
xchg
push
xchg
call
pop
xor
add
xor
push
stc
jl
fadd
fsub
push
push
sub
rcl
scas
ror
fiadd
pop
add
xor
dec
(bad)
mov
icebp
push
push
ret
and
in
ins
mov
mov
nop
and
inc
jb
or
mov
sbb
out
in
jg
ins
mul
int
fld
push
pop
rol
mov
xchg
mov
xor
pusha
cmp
rcl
(bad)
xor
dec
pop
das
sbb
xchg
and
push
dec
adc
int
dec
pop
inc
pop
in
cmc
mov
mov
sub
cmp
ror
push
out
test
cmp
mov
mov
(bad)
enter
mov
out
xor
pusha
sbb
or
xchg
jp
in
push
xchg
add
add
inc
push
inc
sub
sbb
xor
int3
test
push
(bad)
out
test
test
push
jecxz
leave
retf
adc
and
in
sub
(bad)
fsubr
ins
test
scas
inc
rol
push
cs
movs
fsub
jle
xchg
push
cs
xchg
dec
jp
call
adc
out
jae
push
(bad)
jmp
fstp
sub
std
cs
cmp
mov
pop
int
fsubr
fbld
ror
jge
mov
test
gs
int
cmc
stos
push
out
mov
out
lahf
popf
jne
lods
popf
xor
mov
ins
adc
xchg
sbb
in
adc
mov
or
sti
jb
dec
std
and
aas
stos
cmp
test
push
shl
lds
(bad)
cs
repnz
call
inc
inc
gs
sahf
push
mov
xchg
pop
cs
or
mov
adc
inc
jmp
dec
test
or
xchg
leave
cs
mov
test
xor
fstp
lods
mov
mov
mov
cmp
xlat
cmp
sbb
push
in
push
out
jp
mov
in
(bad)
call
add
sub
loop
lock
div
push
push
xor
dec
jne
in
nop
test
es
aaa
ficom
leave
(bad)
sbb
inc
inc
mov
xor
pop
jle
jl
neg
lods
ss
xor
xor
jl
ret
cwde
adc
push
mov
fnsave
jecxz
fwait
ds
sahf
mov
arpl
add
jmp
sti
dec
pop
mov
retf
push
mov
(bad)
push
sub
shl
out
mov
cmp
pop
jecxz
push
inc
or
fnsetpm(287
xchg
adc
cli
ficomp
dec
arpl
cld
sbb
shl
xchg
add
jle
jnp
nop
lds
loopne
sub
sbb
pop
in
push
inc
adc
mov
fnsave
popa
xlat
sub
push
add
out
out
aas
pop
mov
xchg
rol
inc
mov
fnsave
test
cmps
sbb
inc
mov
cmp
imul
ds
pop
dec
sub
mov
sbb
jmp
sub
jmp
inc
dec
call
loopne
dec
pushf
or
jns
jns
xchg
out
outs
movs
in
add
test
retf
test
dec
and
in
leave
jg
push
push
das
and
mov
outs
mov
test
out
jp
sbb
jb
xchg
bound
lock
movs
rcr
or
cmp
or
jmp
dec
pop
jnp
inc
(bad)
iret
inc
dec
cwde
loope
mov
push
and
xlat
aas
scas
xchg
push
js
xchg
hlt
and
jo
sub
mov
jmp
add
stc
push
div
mov
xor
je
jmp
scas
lea
movs
in
repz
fcomp
and
pop
push
jns
mov
arpl
mov
std
leave
fadd
adc
and
int3
aaa
cmp
xchg
xchg
inc
aas
(bad)
(bad)
popa
jno
imul
cmc
lea
sub
loop
cwde
push
fbstp
popf
js
and
ss
mov
ret
ds
jns
fisubr
xchg
mov
neg
cmc
mov
(bad)
mov
sub
mov
enter
bound
sbb
inc
pop
inc
xchg
pop
push
mov
sub
and
cdq
js
and
std
dec
mov
push
mov
fcomp
jno
mov
sub
push
mov
xchg
std
arpl
jbe
jl
mov
bound
or
jno
xchg
test
test
call
and
sub
fs
mov
pushf
div
dec
jmp
sar
mov
fcmovnu
or
mov
inc
pop
dec
mov
pop
out
sub
jge
(bad)
mov
fild
dec
call
pop
retf
rcl
jle
xchg
pusha
dec
sub
rcl
xchg
xchg
clc
lahf
dec
scas
call
(bad)
xor
mov
pop
push
fimul
shr
bnd
retf
fadd
int
xor
pop
sub
mov
pop
rep
mov
pusha
push
inc
mov
ds
pop
xchg
fsubr
scas
sub
jmp
imul
aas
adc
or
daa
sbb
retf
out
sub
mov
sbb
pop
lds
mov
addr16
sbb
sbb
mov
sub
sbb
stos
mov
lock
shl
iret
fbld
push
xor
sbb
pop
sbb
mov
or
sbb
rcr
dec
popf
fnstsw
inc
sbb
cmc
fucomp
jmp
push
inc
or
dec
fsubr
and
pop
and
xor
dec
ret
retf
sbb
mov
das
fstp
mov
push
push
jbe
add
loop
data16
aaa
cmp
loop
xchg
mov
test
(bad)
ror
lea
push
add
push
mov
nop
(bad)
jae
aas
push
pop
out
sub
(bad)
call
mov
scas
sbb
shl
es
jbe
inc
sub
mov
sbb
das
out
into
pop
icebp
push
push
inc
mov
push
test
pop
mov
pop
ror
sti
lock
pop
xchg
mov
dec
out
adc
hlt
cmp
mov
xchg
cmp
ins
out
mov
scas
push
jle
gs
stc
clc
fdivr
(bad)
nop
imul
or
cmp
fs
stos
push
pushf
mov
leave
pop
out
adc
xchg
arpl
mov
iret
int3
xor
dec
jnp
or
and
cmp
jae
mov
mov
test
scas
popa
sbb
inc
adc
jl
inc
sub
repnz
loope
or
mov
cmp
xlat
pop
pop
xchg
std
pop
xlat
mov
jle
dec
cmps
ret
push
mov
push
leave
pop
jb
cmc
cdq
ret
mov
iret
frstor
or
movs
xor
push
js
int
push
dec
cs
mov
jno
cmp
ror
and
mov
ss
(bad)
fsubr
xchg
jg
std
adc
jl
outs
mov
test
push
inc
add
and
push
and
push
shr
inc
outs
stc
add
jl
inc
or
mov
mov
mov
push
push
rcl
pop
dec
xchg
neg
loopne
push
jmp
cwde
cmps
das
loopne
jge
sub
xchg
cmc
lea
or
mov
add
stos
(bad)
push
push
imul
pop
mov
and
jo
ret
shl
push
cwde
cdq
push
mov
push
pusha
fstp
xchg
adc
mov
and
inc
jge
enter
aam
mov
inc
dec
dec
loopne
mov
shl
in
mov
mov
shl
int3
pop
lock
nop
dec
lds
xchg
cmp
mov
mov
pop
in
fsubr
(bad)
pop
inc
outs
mov
jge
(bad)
mov
xor
int3
cmc
test
push
out
and
sbb
adc
xchg
mov
test
imul
xlat
xchg
and
shl
out
push
mov
fiadd
jle
stos
dec
jl
retf
pop
pop
outs
lods
and
shr
inc
mov
outs
idiv
pop
stos
or
daa
inc
outs
adc
mov
out
stos
dec
sub
mov
and
cmps
loopne
ds
pop
adc
sbb
mov
cmps
pop
test
mov
add
cwde
mov
xchg
ja
iret
xor
dec
xor
pop
pop
leave
and
inc
nop
mov
pop
cmp
or
rcl
repnz
jg
or
sbb
cmp
and
dec
pop
push
popf
mov
jno
or
sub
clc
mov
pusha
dec
mov
lods
popf
(bad)
stos
fcom
rol
fwait
mov
push
int3
mov
push
push
xchg
push
(bad)
out
fnstenv
popf
lea
mov
xor
scas
dec
cmp
cmps
and
retf
or
cli
(bad)
mov
aaa
jle
pusha
enter
lods
into
mov
or
sbb
or
in
push
xor
fidiv
outs
rcr
ds
call
(bad)
out
test
sahf
lahf
mov
adc
(bad)
or
sub
jcxz
and
lds
shl
fsubr
pop
pop
and
leave
data16
xor
pop
dec
mov
iret
sub
adc
gs
mov
aam
dec
mov
sub
(bad)
mov
mov
or
inc
xor
rol
adc
js
mov
pushf
out
xchg
imul
push
inc
push
cmps
cmp
push
mov
iret
jmp
pushf
ins
pop
sub
aam
daa
or
xor
les
popf
mov
stc
cmp
or
(bad)
std
call
dec
push
shr
mov
icebp
xor
retf
jmp
jmp
aad
push
and
fidiv
ja
cmp
into
pusha
arpl
xor
(bad)
push
jl
jmp
jno
mov
daa
sbb
fs
mov
(bad)
cmc
dec
fisub
rep
adc
outs
enter
or
(bad)
dec
xor
push
push
and
enter
stos
dec
push
repz
imul
sbb
pop
les
jns
inc
and
xchg
jbe
sbb
lahf
cmp
imul
xor
daa
mov
fisubr
iret
shl
not
int
mov
or
inc
in
xor
in
inc
arpl
jne
pushf
scas
mov
dec
and
or
jmp
adc
(bad)
ja
cmc
jbe
push
xchg
mov
xlat
scas
outs
mov
inc
cmp
ss
lds
inc
fidivr
lds
stos
(bad)
lahf
adc
dec
aaa
jno
push
ror
mov
aaa
adc
xchg
rcl
es
pusha
enter
hlt
cmp
cmps
popa
in
icebp
jge
popa
sahf
push
sbb
xchg
mov
cmp
pop
pushf
sub
test
ins
inc
lods
mov
xchg
sub
push
mov
(bad)
ss
xor
jns
sub
xchg
mov
xor
aaa
jae
push
call
std
scas
push
sub
mov
mov
lahf
or
inc
dec
and
mov
adc
mov
jle
mov
loopne
mov
sbb
sti
(bad)
aad
xor
retf
repnz
xor
lahf
into
les
inc
out
adc
retf
out
call
dec
dec
xchg
(bad)
jmp
pushf
call
cmc
daa
mov
mov
adc
jbe
jle
and
fs
out
dec
hlt
aad
daa
loop
inc
leave
ret
or
mov
pop
push
leave
lods
pop
leave
inc
repnz
push
lock
mov
fadd
xchg
enter
sbb
jnp
or
in
push
add
loop
jnp
xchg
test
dec
mov
fistp
pop
inc
je
push
mov
push
mov
pop
jnp
mov
repnz
into
xchg
ds
mov
mov
or
popa
stos
out
inc
rcr
mov
cli
mov
outs
adc
adc
pop
fimul
cmps
jl
test
cmp
push
jnp
cmps
mov
adc
aam
jmp
inc
adc
call
mov
hlt
xor
add
and
leave
jmp
cld
xor
mov
jne
push
mov
jnp
inc
push
cmp
cmc
enter
ins
xor
sbb
cdq
cmc
or
mov
mov
dec
js
pushaw
xchg
pop
cwde
inc
sub
push
data16
jle
push
test
pop
adc
xchg
mov
push
dec
mov
vpmadcswd
inc
sub
push
xor
pusha
jb
js
mov
scas
mov
jnp
bound
push
popa
(bad)
dec
pushf
mov
jae
add
push
jmp
xchg
rcr
in
lahf
sar
sub
sbb
and
jne
sub
cmp
xchg
inc
adc
sbb
in
xchg
cmp
arpl
jo
push
push
movs
push
xchg
inc
pop
sbb
or
add
push
sub
jmp
pop
cmc
xchg
mov
jge
xor
pop
leave
aad
(bad)
xor
test
pop
xchg
call
mov
jecxz
mov
fcomp
das
mov
inc
or
add
lds
shl
xor
dec
mov
cmp
lahf
pop
sbb
sti
pop
jp
fisttp
pop
mov
sub
push
mov
lods
mov
mov
or
shr
xchg
and
and
ret
aas
and
pop
inc
jmp
mov
cdq
(bad)
and
adc
dec
pop
iret
cdq
aam
nop
repz
jp
push
cmp
(bad)
sbb
outs
aad
push
and
ds
or
mov
ficom
mov
jl
sbb
cmps
adc
push
dec
rcr
gs
fs
pusha
shl
outs
push
pop
mov
dec
lods
pop
sbb
movs
outs
or
retf
or
xchg
push
adc
jo
js
fcomp
push
ins
in
sbb
lods
sub
jo
mov
push
ror
xchg
mov
add
imul
adc
hlt
push
mov
nop
xor
mov
xchg
lods
adc
in
jge
popf
cmp
push
sub
scas
sti
pop
movs
les
adc
ficom
out
hlt
inc
xchg
lds
iret
xor
into
ss
add
(bad)
mov
mov
mov
xchg
daa
popf
cld
outs
shl
jb
or
cmps
shl
xchg
mov
movs
fadd
dec
jg
test
and
movs
push
and
mov
adc
iret
das
dec
test
idiv
lds
popa
jge
(bad)
fcomp
imul
shl
sub
or
mov
clc
test
sub
es
rcl
and
popf
pop
lods
mov
std
inc
mov
lea
nop
adc
(bad)
fcom
addr16
xchg
sub
inc
adc
cmps
aam
in
das
movs
lds
sub
dec
mov
leave
or
or
test
and
xor
retf
iret
mov
sar
(bad)
stc
fsubr
cld
xor
pushf
inc
faddp
xchg
and
ins
pushf
and
sub
push
loopne
mov
leave
hlt
sbb
dec
cs
ret
int
mov
ret
fs
push
pop
clc
lea
je
add
jmp
push
stos
mov
xor
jmp
pop
add
outs
pop
xor
das
or
jge
stos
and
and
sti
ret
inc
iret
fs
fsubr
add
push
mov
adc
jg
sbb
mov
sub
cmp
or
movs
es
retf
mov
sbb
xchg
sbb
loop
push
mov
in
(bad)
mov
xchg
inc
bound
dec
jle
xor
xor
idiv
pop
jb
out
cmc
out
inc
rol
arpl
stos
ficom
mov
xchg
arpl
and
mov
adc
cmp
push
cmp
dec
std
jbe
je
pop
mov
fcomp
jecxz
pop
mov
or
cmps
and
cwde
pop
sub
sbb
or
scas
hlt
cmps
mov
test
or
in
in
repz
cs
arpl
stos
in
pop
sub
push
jge
mov
xor
cmc
pop
shl
fwait
xchg
fldenv
pop
scas
and
mov
bnd
xor
cli
push
rol
in
push
sub
out
cmp
cwde
dec
lock
lock
cdq
pop
pop
add
jne
add
stos
sbb
daa
jns
mov
in
xchg
xor
out
cmp
mov
add
xchg
outs
inc
jno
ret
xor
shr
add
fld
(bad)
bound
(bad)
jb
dec
mov
mov
movs
clc
je
cmp
mov
mov
mov
mov
add
mov
push
stos
mov
sub
ror
inc
jle
mov
inc
dec
call
pop
xchg
aaa
jg
scas
xchg
sbb
movs
fild
sbb
xor
clc
lahf
dec
push
nop
cs
fs
fdivr
(bad)
cmp
pop
movs
xor
pop
mov
xor
mov
inc
xchg
jge
pop
mov
call
push
out
adc
push
push
ins
inc
inc
das
sbb
sub
ja
shl
popf
loope
mov
mov
xchg
cmp
sbb
movs
mov
lods
nop
push
inc
push
retf
scas
call
mov
stc
fsub
aad
shl
jae
mov
out
jmp
adc
inc
and
or
mov
xchg
mov
in
inc
and
mov
inc
loopne
in
pop
js
jns
cld
jae
mov
and
dec
ret
push
jmp
icebp
dec
(bad)
fs
pop
icebp
and
mov
xor
popfw
add
pop
mov
sbb
lods
mov
push
pop
loop
push
xchg
stos
sbb
ins
push
mov
xchg
cmp
(bad)
enter
fdivr
xor
mov
fsubr
bound
push
mov
push
jmp
outs
dec
cmp
ins
mov
inc
lahf
repnz
jmp
inc
in
xchg
mov
nop
data16
jecxz
xlat
bound
xchg
jns
or
out
out
lds
adc
pop
sti
ret
cwde
fcom
aas
cli
cdq
std
push
fsub
add
ss
out
add
lds
adc
ins
dec
popa
sub
sbb
sbb
aas
lea
in
mov
rcr
int3
inc
pusha
and
leave
pushf
inc
fbstp
push
dec
push
mov
push
retf
sbb
out
lods
adc
pop
fsub
(bad)
and
jecxz
xchg
adc
and
xor
pop
int
mov
mov
push
sub
mov
popw
iret
(bad)
int3
nop
fistp
cdq
inc
in
push
rcr
fs
daa
imul
test
fs
fnsave
bswap
mov
popfw
mov
mov
(bad)
imul
stos
mov
jge
int3
mov
cmp
sbb
xchg
test
or
mov
ret
ret
inc
psubb
cmps
in
mov
inc
pop
test
mov
add
sbb
jbe
pop
push
mov
fidiv
xchg
cmp
das
sbb
mov
cmp
bound
retf
inc
ja
je
mov
(bad)
sbb
push
add
cmps
adc
imul
mov
enter
xor
into
inc
mov
jg
mov
inc
jmp
pop
test
sti
xor
jecxz
ins
ret
mov
mov
test
push
int
push
scas
aaa
(bad)
jecxz
les
xor
adc
cmp
or
add
pop
fld
fcmovnb
stos
ror
inc
aas
ins
loope
dec
or
mov
dec
push
dec
in
mov
out
push
xchg
movs
icebp
xchg
(bad)
mov
pop
inc
pop
retf
jp
aad
fistp
aas
adc
dec
movs
inc
xchg
imul
outs
or
xchg
loope
mov
ror
mov
pop
mov
iret
xor
mov
sbb
and
push
jae
mov
adc
hlt
test
and
out
sub
movs
call
mov
(bad)
unpcklps
fs
sbb
mov
cmps
sub
test
xor
cwde
mov
ss
inc
lods
xor
aas
sub
lock
add
int
pop
sub
fcom
out
call
cmps
cmps
mov
daa
sub
or
cmp
movs
jge
data16
mov
leave
and
js
int3
(bad)
stc
xchg
adc
fst
out
ret
dec
scas
mov
movs
sub
xchg
lea
pop
(bad)
mov
pop
mov
pusha
iret
les
mov
adc
js
call
movs
shl
sbb
pop
(bad)
test
jns
bnd
mov
mov
in
mov
and
fld
stos
test
lds
pop
adc
(bad)
test
js
pop
adc
imul
pop
fs
and
cmp
(bad)
dec
push
rcr
inc
mov
sbb
out
addr16
in
inc
pop
(bad)
cld
sub
mov
movs
push
aaa
stos
stos
xchg
sub
test
enter
pop
jmp
inc
lock
ja
pop
inc
lea
pop
add
(bad)
jb
push
mov
pusha
inc
out
dec
xor
and
mov
sub
cwde
mov
sub
jnp
xlat
or
movs
mov
nop
mov
adc
push
inc
jnp
dec
xor
push
cmps
jns
mov
push
push
mov
loopne
xor
rcl
sub
test
xor
xchg
inc
sub
push
mov
mov
fwait
xor
inc
imul
mov
inc
jecxz
pop
cs
fwait
iret
and
popf
sub
movs
jo
add
xchg
adc
mov
jg
jecxz
xor
bound
sahf
dec
or
sbb
push
xor
adc
pop
call
dec
inc
xchg
and
jnp
imul
mov
xor
push
inc
mov
jp
test
or
mov
inc
iret
popa
mov
out
fidiv
xor
push
pop
es
xchg
add
jmp
fcomp
jb
pop
mov
ficom
jnp
add
mov
jecxz
outs
add
popf
or
imul
fidivr
nop
enter
xor
sbb
pushf
jns
add
mov
or
and
jns
pop
mov
pushf
repz
ficomp
stc
mov
jge
popf
add
sahf
icebp
mov
and
xor
enter
in
xor
imul
sti
jae
mov
jns
push
icebp
call
pop
and
inc
sahf
push
push
mov
jo
inc
xchg
lea
mov
adc
mov
and
into
fdivr
mov
dec
or
and
inc
dec
arpl
jecxz
sahf
retf
mov
push
xor
mov
sbb
icebp
fsubr
aas
inc
lods
ret
mov
push
dec
push
sub
aas
pop
jae
push
xlat
jmp
(bad)
jno
add
pushf
out
call
dec
loope
sub
jb
adc
xchg
loope
xor
(bad)
cmp
cmp
pop
xor
cs
cmp
pusha
clc
sbb
imul
mov
xchg
cmc
(bad)
out
sub
adc
fld
pop
lahf
cwde
xor
xchg
and
adc
inc
(bad)
aam
fs
ins
add
lods
ins
adc
fdivr
ja
inc
(bad)
aam
xlat
mov
out
jne
inc
xchg
inc
push
fs
(bad)
sbb
or
daa
dec
push
cmp
or
mov
data16
imul
lds
inc
gs
shl
int3
fst
mov
test
retf
cmc
ins
adc
sar
dec
stos
outs
inc
push
call
stos
mov
into
lea
mov
sbb
mov
ds
dec
ss
mov
data16
dec
jl
(bad)
sti
jno
dec
jb
stos
cmp
icebp
loop
mov
xor
imul
sub
push
stos
pop
pop
iret
shl
sub
adc
inc
out
test
xchg
xchg
(bad)
adc
retf
es
xchg
jmp
fistp
int
add
lods
test
push
rol
adc
mov
fs
mov
dec
inc
ins
mov
(bad)
(bad)
icebp
fbld
or
sbb
aaa
fcomp
and
sbb
push
test
shl
(bad)
xor
(bad)
jns
(bad)
popf
sbb
pop
sbb
daa
leave
add
(bad)
push
mov
aad
mov
lahf
js
adc
dec
mov
pop
fimul
adc
and
hlt
mov
pop
push
pop
loop
loop
pop
clc
mov
cmp
sub
push
jb
xchg
aam
mov
inc
nop
test
sbb
bswap
xor
cmps
inc
dec
push
in
jmp
mov
cmp
mov
pop
pop
mov
cmp
out
aam
jecxz
enter
adc
addr16
push
inc
or
inc
push
jge
inc
dec
mov
imul
push
sbb
jmp
rol
push
ins
xor
int3
push
mov
xchg
sti
dec
test
js
and
inc
mov
xchg
xchg
nop
adc
xor
jle
(bad)
xor
pushf
movs
add
ds
int
imul
sub
add
mov
std
movs
sub
pop
push
in
iret
ja
adc
mov
bound
jmp
scas
gs
icebp
hlt
test
in
imul
cmp
xlat
popf
dec
repz
daa
add
jbe
sbb
mov
mov
ins
mov
leave
imul
leave
dec
icebp
sub
les
ret
mov
jg
jne
dec
adc
jle
sar
scas
or
pop
cmc
loope
mov
cmc
jp
ret
fdivr
bound
jo
sti
(bad)
dec
or
je
sahf
mov
dec
outs
pop
rol
mov
and
(bad)
jno
call
(bad)
mov
retf
push
xchg
dec
loop
mov
fmul
inc
xchg
jo
pop
cdq
xor
push
(bad)
xor
inc
cmp
push
mov
add
adc
aad
pop
xchg
sbb
ins
movs
daa
leave
sbb
sub
ss
inc
test
mov
(bad)
fsqrt
ja
mov
sbb
cmp
jp
sub
loope
loop
dec
cli
push
enter
mov
fmul
mov
push
mov
(bad)
mov
sbb
and
(bad)
mov
js
iret
loop
xchg
not
xor
xchg
mov
hlt
push
xchg
pop
loope
mov
test
pop
jge
xor
outs
xchg
repz
out
sbb
je
enter
cmp
xor
fsubrp
adc
xor
cmp
sti
js
fstp
add
or
dec
sti
(bad)
pushf
sti
cdq
sub
sub
ret
mov
xchg
popa
call
dec
stos
mov
pop
mov
sbb
or
dec
int
aaa
fcomp
cwde
mov
dec
dec
inc
lds
push
xchg
pop
or
pop
sbb
cmp
adc
xor
mov
hlt
jns
xlat
shl
inc
test
sbb
aaa
or
mov
and
(bad)
dec
ret
arpl
inc
xchg
pop
(bad)
das
mov
jge
adc
mov
mov
outs
xor
jge
xor
les
test
push
mov
cmps
rcr
ror
ret
mov
fwait
pop
aas
ret
and
xlat
fwait
test
adc
xor
push
and
pop
scas
repz
or
(bad)
jne
scas
lea
adc
shl
xchg
xchg
cmp
mov
push
sub
xor
mov
fstp
fs
adc
sbb
xchg
sti
out
mov
adc
inc
lahf
std
mov
or
push
adc
sbb
sub
outs
push
ret
sub
mov
sahf
fs
jmp
cdq
cmp
pusha
sub
iret
add
pop
out
js
jne
pop
fcomp
dec
enter
dec
(bad)
jmp
sbb
(bad)
and
scas
xor
xchg
jne
pop
pop
sbb
out
sub
outs
lds
mov
stos
out
(bad)
(bad)
jg
or
loop
retf
daa
fst
mov
pop
fmul
jnp
popf
in
xchg
ret
push
repnz
push
ins
test
sti
adc
bound
adc
dec
mov
stos
xor
in
fdivr
or
mov
cdq
clc
mov
sub
mov
pop
aaa
mov
push
ins
fst
in
fucom
repnz
repz
mov
sub
leave
xor
jmp
jmp
mov
sub
sti
and
mov
(bad)
cmc
mov
loop
mov
shr
int3
test
cmps
xor
shl
into
and
inc
ds
mov
shl
jle
test
mov
adc
fld
retf
mov
inc
mov
sbb
sbb
inc
cmp
retf
fistp
repz
sbb
push
push
add
push
adc
jae
ins
lock
push
add
sub
ins
dec
loope
fbld
idiv
in
cmp
call
jmp
cmp
cld
(bad)
sub
pop
aas
or
js
dec
xor
push
dec
call
and
mov
in
hlt
call
movs
scas
sbb
(bad)
cli
loop
enter
sub
dec
enter
xchg
cmps
test
xchg
sbb
xor
int
ror
jne
mov
xor
adc
mov
nop
mov
push
fist
or
ss
iret
loopne
pop
into
or
xor
pop
add
xchg
pop
push
mov
sbb
mov
mov
push
fstp
cmp
and
gs
xor
xor
bound
shl
outs
scas
out
call
pop
mov
pop
sub
and
aad
lods
fisttp
adc
push
pop
sbb
out
fild
fstp
dec
mov
arpl
mov
and
ds
pop
std
test
and
(bad)
std
mov
(bad)
push
es
push
fmul
inc
mov
xor
and
test
push
and
xor
mov
(bad)
test
xor
ss
mov
jmp
mov
cli
dec
sbb
sub
cmps
aad
mov
ror
jb
dec
ret
gs
pop
sub
push
(bad)
fcom
stos
cdq
push
popf
inc
loop
push
and
push
popf
and
xchg
idiv
imul
xchg
test
xchg
add
(bad)
xor
in
sub
xchg
popf
lods
mov
loope
ins
fidiv
mov
repz
(bad)
push
fs
fisttp
sti
push
inc
add
mov
fsubr
mov
push
cli
mov
inc
jecxz
dec
mov
test
out
aaa
dec
fcos
loop
dec
out
push
rol
mov
cwde
ins
and
(bad)
cmp
inc
sbb
xchg
rcl
cli
dec
mov
pop
adc
inc
icebp
pop
adc
cwde
addr16
jno
cmp
(bad)
mov
sbb
sbb
movs
in
push
daa
jae
inc
scas
repnz
xchg
test
jmp
cmp
adc
pop
and
ror
mov
jmp
aad
(bad)
sub
mov
fidivr
adc
das
fsubr
jg
das
clc
jecxz
push
push
stc
in
inc
adc
cmps
jnp
pop
jg
outs
mov
dec
cdq
jmp
ins
push
xor
cli
jmp
mov
push
or
in
nop
test
ds
lock
jg
dec
pop
and
lods
add
adc
(bad)
out
cmc
xchg
int
jg
or
push
jno
xchg
stos
ret
sahf
xchg
je
mov
shl
cmps
push
pop
rol
pusha
jg
cmp
fnstcw
mov
test
enter
jg
jecxz
mov
mov
inc
aad
mov
mov
mov
cdq
lahf
das
cmp
aaa
add
in
push
and
rcl
mov
inc
cmps
gs
out
in
addr16
out
movs
(bad)
daa
inc
jae
daa
imul
sbb
js
adc
pop
mov
and
xor
test
sub
mov
arpl
hlt
int3
mov
pop
adc
ficomp
mov
jp
or
and
int3
xor
dec
sub
sub
and
xor
retf
rcl
adc
and
neg
add
pop
lahf
data16
ror
mov
sub
test
pop
popa
xor
and
mov
cdq
push
jp
mov
clc
sub
push
xchg
movs
call
mov
syscall
pop
jle
nop
and
push
pop
ins
mov
outs
mul
pop
repz
enter
stos
mov
movs
sub
ja
sbb
adc
mov
out
pop
cmc
cli
sub
jno
(bad)
lea
jmp
and
cli
test
mov
and
xor
mov
xchg
inc
rcl
mov
push
pop
out
stos
cmp
dec
jmp
retf
xor
pop
enter
mov
lods
jecxz
cmp
dec
mov
mov
jl
mov
call
movs
fsubr
mov
mov
sub
stos
stos
pop
movs
dec
rcl
daa
aas
push
ror
dec
or
xor
sbb
xchg
lods
stos
lods
loope
dec
fst
ret
sub
ds
into
push
aas
pop
sahf
jbe
inc
test
loopne
jmp
sub
xchg
mov
pop
sbb
and
push
or
(bad)
mov
inc
addr16
int3
pop
xor
inc
jp
pop
ins
inc
imul
sub
in
mov
xchg
pop
das
adc
dec
xchg
stos
aad
scas
retf
mov
out
or
cmp
mov
xchg
xlat
mov
loop
jecxz
ss
(bad)
pusha
cwde
(bad)
inc
add
mov
cmps
mov
outs
cmp
test
or
jmp
cmps
lock
cmp
jnp
adc
xchg
lahf
cwde
mov
lods
push
(bad)
cli
xor
mov
dec
int
pop
aas
sub
add
add
sbb
int3
adc
loopne
sti
outs
jae
mov
push
push
mov
fiadd
aam
scas
(bad)
push
lahf
or
xor
int
dec
hlt
int3
cmp
sbb
retf
add
fdivr
je
jb
fimul
inc
(bad)
mov
xchg
push
mov
popf
scas
dec
es
bound
sar
mov
and
int3
cmp
mov
sub
int3
jns
aaa
ss
retf
shr
or
or
int
and
sbb
mov
push
sbb
cmps
sbb
das
cmp
cmp
jmp
and
pop
std
aad
in
fs
fwait
std
mov
fild
cmp
cli
(bad)
pop
adc
mov
adc
inc
adc
push
and
dec
jge
test
jo
xlat
sbb
sbb
adc
pusha
mov
sbb
fnstenv
retf
mov
fsub
jbe
pop
loopne
rcr
fisttp
push
movs
adc
add
mov
pop
movs
call
cmp
inc
rcr
mov
sub
lods
sbb
dec
mov
xchg
es
in
pop
xchg
mov
in
xor
dec
lahf
data16
test
mov
dec
jp
dec
enter
mov
pop
mov
dec
clc
lods
cmc
mov
rcl
inc
dec
shr
mov
mov
(bad)
xchg
js
pop
mov
aam
shl
sub
jno
push
push
jae
dec
push
fs
and
fadd
(bad)
je
cmps
gs
sub
cld
imul
ret
clc
and
push
sub
xchg
dec
pushf
jmp
mov
mov
mov
xor
inc
rcr
or
popf
jnp
xor
xor
imul
shl
xor
mov
add
xchg
lock
sub
jge
out
mov
sbb
sub
push
sar
cld
repz
add
mov
lods
inc
pushf
fcmovu
mov
and
dec
or
mov
stc
pop
mov
pop
push
in
mov
sub
jne
dec
dec
fisubr
push
(bad)
out
xchg
add
jbe
iret
outs
jb
(bad)
mov
repz
idiv
clc
popf
mov
push
ins
int
mov
outs
cs
jns
dec
ficomp
xor
ror
mov
xchg
inc
inc
or
ret
push
adc
rol
call
loop
dec
inc
in
(bad)
jns
arpl
out
mov
mov
sub
ja
rcr
je
stos
pop
aas
test
sti
mov
sbb
add
aad
pop
inc
xchg
stos
xor
out
and
xchg
retf
and
pop
and
pusha
enter
lea
clc
(bad)
pop
mov
pop
loope
jns
xor
sar
dec
retf
fistp
sbb
and
shl
xchg
xchg
les
ja
mov
sub
jmp
std
jecxz
or
sub
xchg
mov
adc
inc
push
push
sub
or
cmp
dec
fcomp
test
xor
int3
mov
push
jmp
push
mov
outs
inc
jb
xchg
inc
mov
jmp
daa
int3
mov
out
or
jb
jmp
ins
mov
mov
or
and
js
std
fisttp
pop
mov
fs
adc
loop
mov
popa
pusha
jne
enter
pop
mov
call
cmp
inc
cmp
dec
into
in
icebp
(bad)
retf
push
dec
sub
jns
mov
das
inc
scas
inc
mov
pop
pop
callw
sbb
imul
adc
mov
jmp
mov
repz
test
cwde
jae
(bad)
lds
ja
fcom
cdq
push
fadd
scas
cmp
movs
sub
cli
dec
jmp
pop
dec
dec
push
sbb
sbb
fnstsw
imul
xchg
mov
movs
or
iret
xchg
pop
xchg
iret
jge
jmp
push
out
sub
loopne
ja
cmp
sbb
and
and
in
push
add
inc
lahf
outs
test
aad
and
mov
mov
lods
les
inc
pusha
fcomp
ins
dec
pop
or
mov
or
xchg
fdivp
cdq
lods
push
cmp
pusha
stc
inc
call
pop
adc
in
push
ja
popf
push
adc
pusha
aam
es
(bad)
jno
mov
retf
sub
xlat
push
outs
xchg
jl
scas
cmp
popf
je
fdiv
stc
out
dec
push
sub
mov
inc
adc
inc
sub
je
pushf
(bad)
add
add
in
std
or
lock
sbb
vpcmpeqw
inc
mov
bound
jl
xchg
js
pop
stc
inc
and
ret
loop
push
inc
fisttp
push
xchg
mov
rcr
xchg
(bad)
xchg
mov
clc
or
ins
test
jae
xor
xor
ss
test
dec
sbb
int3
mov
mov
and
fs
xchg
xchg
cdq
push
adc
push
cmp
lods
stc
xor
or
dec
ficomp
add
aad
and
call
push
and
xchg
aad
lods
imul
and
inc
stos
cld
fdivrp
jmp
loope
out
mov
scas
cmps
retf
scas
arpl
repnz
pop
pop
inc
push
repz
mov
xchg
xlat
sub
test
bnd
lock
xchg
and
add
jbe
int3
lods
loopne
jmp
test
mul
fwait
pusha
nop
pop
dec
mov
pop
mov
fs
ja
es
dec
cwde
xor
fst
cmp
xor
dec
add
pushf
leave
cmp
pop
mov
mov
and
adc
cs
mov
pop
leave
aaa
mov
fdivr
mov
shl
jecxz
add
sti
sub
mov
cld
sbb
dec
arpl
out
dec
mov
mov
push
mov
or
xchg
retf
scas
jno
add
mov
aas
imul
sub
jns
call
mov
call
xchg
xlat
mov
sub
(bad)
int3
fcom
mov
mov
mov
dec
adc
sbb
fmul
or
loopne
push
(bad)
aam
sub
lds
pop
bound
add
mov
adc
(bad)
xchg
ins
rcl
push
retf
cmp
dec
push
adc
lahf
dec
shl
ja
push
pop
inc
loopne
dec
and
pop
mov
mov
jne
pop
and
push
clc
jle
xor
and
mov
inc
cmc
sbb
jl
jmp
cmp
sub
popf
retf
dec
mov
and
push
imul
mov
adc
adc
ret
xor
mov
mov
xor
mov
or
jo
sub
lea
jns
xchg
(bad)
mov
fldcw
sti
and
or
sbb
mov
jbe
imul
cmp
arpl
call
(bad)
cmp
pop
out
cdq
mov
aas
mov
sbb
pop
mov
dec
test
mov
push
mov
in
mov
or
xor
push
das
pop
xchg
adc
xchg
sub
in
iret
leave
mov
int
push
ins
adc
fidivr
sub
cli
or
fcomp
pop
in
inc
and
out
notrack
mov
jecxz
fiadd
xor
add
imul
and
sbb
push
sahf
mov
adc
sbb
cmp
or
mov
sub
pop
sbb
adc
idiv
ds
into
pop
jns
mov
sahf
(bad)
add
fimul
test
dec
sub
mov
mov
and
stos
ins
mov
sbb
push
mov
data16
xchg
mov
add
mov
jmp
les
jne
or
mov
fistp
cmc
ret
inc
push
push
mov
pop
mov
xor
jge
or
pop
ss
inc
ret
in
cmps
adc
adc
cwde
cmp
jmp
xchg
sub
aad
inc
adc
mov
(bad)
(bad)
je
into
test
cmp
and
gs
and
jne
data16
nop
rol
inc
fcom
sbb
cmp
in
dec
and
movs
daa
fs
dec
mov
stos
mov
imul
loop
mov
sub
(bad)
fstp
push
xchg
inc
adc
(bad)
sub
inc
cmp
sti
shl
jmp
xchg
dec
scas
cwde
push
in
fbld
pushf
loopne
mov
jg
push
mov
loope
mov
add
xchg
pop
adc
xor
adc
pop
fistp
jae
movs
push
add
or
jnp
adc
sbb
addr16
push
or
les
and
loope
add
pusha
out
mov
popf
sti
jmp
pop
add
and
cs
sar
xor
pop
push
and
out
or
test
xor
push
(bad)
js
in
inc
inc
inc
push
and
ds
sbb
adc
nop
pop
mov
jp
sbb
jae
test
mov
call
inc
push
mov
icebp
and
xchg
or
div
adc
push
add
cmps
pop
and
loop
ret
jg
lahf
cmp
outs
dec
pop
cdq
outs
pop
add
fsubr
test
mov
cmp
test
sahf
out
add
aam
aad
push
nop
push
scas
fidivr
sbb
cwde
jmp
xchg
(bad)
jl
xor
cmps
cmps
(bad)
imul
inc
hlt
retf
and
adc
xor
iret
push
(bad)
in
jp
pop
pop
xchg
fistp
mov
or
retf
push
call
ror
es
pop
jmp
push
rol
sub
arpl
cmp
fwait
mov
xchg
cmp
dec
stos
neg
fwait
movs
out
xchg
mov
stos
mov
cmp
push
jo
shr
out
int3
mov
sub
dec
mov
iret
in
ds
mov
sbb
cmp
fisub
cmc
test
sub
pop
mov
test
imul
pop
hlt
mov
cdq
cld
cmp
push
imul
xor
adc
imul
daa
adc
or
lods
sbb
mov
xchg
pop
cmp
mov
popf
aaa
push
inc
ja
cmp
test
(bad)
jmp
ins
lea
aaa
mov
lods
icebp
test
sbb
jecxz
inc
xor
sbb
xor
test
icebp
int
shl
iret
jp
jae
retf
mov
leave
inc
push
cmp
push
dec
sbb
mov
dec
lahf
mov
mov
cmp
cmc
rcl
jo
sub
cmps
adc
sub
dec
cwde
lods
test
in
sbb
aad
jge
inc
jne
(bad)
sub
jmp
xchg
mov
xor
rol
retf
mov
sbb
or
adc
dec
retf
hlt
pop
je
clc
rcr
nop
stos
daa
mov
mov
test
stc
or
mov
sbb
loop
aad
test
aad
adc
sbb
inc
inc
int
jnp
into
aam
pop
mov
mov
xchg
xor
scas
in
and
shl
jne
pop
and
or
push
and
cmp
dec
push
jae
and
jo
sti
push
jb
adc
test
xchg
das
ins
pop
xor
(bad)
hlt
or
popa
iret
pop
ret
sub
daa
mov
xlat
xchg
lea
cmp
call
stc
cmp
pop
ja
out
mov
sbb
mov
int
or
add
xchg
inc
ror
in
pop
iret
adc
cwde
in
adc
dec
and
js
ins
cmp
or
(bad)
data16
mov
test
push
xor
jb
ficom
pop
icebp
mov
sbb
adc
repnz
nop
ja
idiv
lods
aam
pop
dec
jns
mul
mov
push
retf
xchg
out
ja
bound
mov
inc
sub
sub
fmul
fs
sub
jl
(bad)
cmp
loop
cdq
mov
sahf
or
lea
push
jmp
out
cmp
sub
mov
and
imul
stos
xchg
mov
(bad)
xor
scas
adc
xor
sbb
pop
push
je
fld
fisub
(bad)
xchg
pushf
rol
sahf
fstp
outs
pop
mov
(bad)
lods
pop
fmul
dec
push
or
iret
cmp
sbb
cwde
shr
mov
shl
cmp
mov
cli
mov
xchg
mov
scas
stos
mov
addr16
pop
push
cmps
jo
jmp
xor
(bad)
pop
out
fidiv
mov
sub
sti
pop
test
adc
pop
ds
out
cmp
outs
adc
(bad)
pop
clc
retf
push
sbb
dec
xchg
sbb
jo
mov
repz
inc
push
cmp
jns
fadd
push
(bad)
cs
adc
movs
ds
fadd
jg
add
je
out
sldt
push
push
shl
sbb
xchg
repz
xor
movs
(bad)
lods
mov
cdq
mov
pop
inc
std
fadd
xlat
movs
icebp
push
bound
sub
inc
and
ret
dec
mov
push
mov
jae
(bad)
mov
inc
dec
adc
xor
push
ins
jp
pop
(bad)
fdiv
add
cmp
movs
and
push
push
and
and
push
mov
das
(bad)
pusha
out
call
aas
sar
out
xor
adc
pop
ret
and
fmul
mov
mov
int
leave
fnstcw
call
push
jmp
into
call
gs
fldenv
mov
add
repnz
fidiv
fst
mov
push
popa
add
and
push
mov
cld
cmp
addr16
or
cmps
aam
sbb
pop
add
dec
pop
sbb
inc
cdq
pop
sbb
adc
add
in
je
xor
jge
test
loope
jp
repnz
popa
je
mov
add
mov
fistp
int3
ins
loop
popa
fwait
lock
xchg
aad
sub
(bad)
es
lock
xor
out
out
push
pop
outs
movs
xlat
shr
rcr
repnz
mov
pushf
cmp
sbb
pop
test
push
stos
aaa
iret
xor
sbb
and
jmp
jne
mov
jp
sahf
sbb
adc
sub
push
repz
push
ror
push
and
imul
enter
(bad)
mov
sub
(bad)
scas
jne
fs
inc
pop
lock
dec
inc
jge
arpl
in
mov
imul
sbb
jno
addr16
jae
xchg
mov
and
mov
mov
or
ins
mov
or
push
sub
mov
jl
outs
push
std
enter
shl
push
in
aaa
(bad)
sbb
mov
out
add
jnp
jb
pop
retf
xchg
or
inc
loope
out
(bad)
loopne
adc
test
sbb
and
fnsave
shr
fbstp
out
jae
push
push
xchg
sub
jo
retf
jnp
dec
or
xchg
jecxz
inc
test
inc
mov
jb
ins
pop
loope
mov
mov
in
pop
gs
dec
arpl
int
and
cld
movs
fcomp
jo
jl
xchg
mov
xchg
inc
(bad)
xor
sub
leave
clc
and
jnp
in
mov
mov
pop
mov
and
jbe
push
into
jmp
lock
iret
fwait
pop
mov
or
dec
call
dec
xor
movs
jle
(bad)
adc
dec
ins
mov
push
lahf
imul
add
(bad)
shr
ret
xchg
jnp
jmp
pop
mov
sbb
popf
xchg
mov
loop
into
cmps
push
jo
xchg
or
les
ss
(bad)
fild
add
scas
inc
mov
sbb
push
mov
imul
and
in
sbb
pop
cmp
pop
cmp
outs
push
push
lea
inc
fmul
fsub
js
mov
movs
sub
pop
mov
inc
pushf
push
mov
xor
mov
jno
inc
xor
jle
add
and
jae
sub
adc
imul
xchg
xor
ffreep
sub
test
sbb
sbb
mov
loop
sub
dec
push
add
cdq
xchg
les
mov
scas
mov
(bad)
stos
test
cld
inc
lahf
leave
and
xchg
fdivp
mov
mul
mov
jnp
lock
fild
jecxz
push
mov
sub
jle
push
xchg
xchg
shr
fild
shl
sbb
mov
fst
in
adc
ins
jl
mov
lock
push
lods
fild
in
out
inc
dec
jmp
dec
loope
jl
stos
outs
push
loop
mov
or
popf
stos
inc
pop
sub
mov
xchg
pop
repnz
mov
xor
lahf
sti
clc
lahf
jns
ja
call
(bad)
mov
inc
aas
dec
aaa
xor
dec
xchg
lea
and
cmp
lods
gs
pop
packsswb
inc
hlt
pop
out
dec
lods
ins
cwde
mov
jmp
call
aaa
fiadd
inc
(bad)
in
les
stc
xchg
and
mov
aas
mov
lds
sub
mov
sahf
imul
rcr
nop
cwde
mov
xor
in
mov
repz
fistp
dec
inc
cmp
cdq
out
dec
fs
not
pop
sub
push
in
das
xor
sub
fcmovnu
aaa
xor
push
and
and
fld
and
or
cdq
les
inc
jo
dec
ins
jmp
in
inc
scas
sar
pop
inc
shl
inc
mov
adc
js
pusha
mov
aas
inc
adc
ins
xchg
outs
jne
mov
pop
sbb
hlt
lahf
mov
rcr
jl
cmps
in
jmp
ja
push
push
cdq
clc
mov
xchg
(bad)
mov
retf
test
lods
pop
cld
arpl
pop
mov
jbe
cmc
leave
test
fimul
fdivr
jge
data16
and
sub
dec
jle
mov
inc
cwde
push
ins
and
imul
cmps
ds
and
les
mov
mov
pop
movs
inc
dec
ret
add
leave
inc
cwde
outs
lds
jb
fwait
sub
mov
popa
jl
outs
push
loopne
ret
retf
xchg
daa
rep
repz
test
cwde
jmp
(bad)
outs
jmp
push
iret
mov
shl
inc
rcr
enter
int
mov
iret
jne
or
addr16
test
lock
or
dec
lds
out
aaa
(bad)
cld
ja
jnp
imul
dec
jbe
mov
lods
pushf
sbb
pop
dec
mov
xor
adc
inc
add
inc
jae
std
inc
call
leave
dec
retf
inc
mov
in
mov
mov
fwait
out
jle
jp
(bad)
jmp
outs
imul
jo
in
xor
gs
mov
pop
sub
xor
fsubr
inc
inc
mov
jne
fs
push
xor
xor
adc
test
mov
rcr
fimul
and
xchg
mov
and
or
adc
add
push
dec
and
imul
push
dec
jae
arpl
inc
mov
(bad)
fcom
lods
outs
xor
test
je
dec
movs
shr
imul
pusha
out
xor
cli
pop
mov
push
(bad)
out
out
es
jae
ret
cwde
(bad)
(bad)
xchg
shr
adc
jne
cmp
jl
ja
and
aad
pop
mov
popf
add
pop
pusha
sbb
jo
loop
(bad)
mov
jmp
sti
js
xchg
popf
mov
ret
add
gs
int
xor
fld
cld
lahf
jp
mov
and
push
ror
xor
pop
and
jno
and
fdivr
push
test
adc
cmp
jnp
lock
push
dec
jl
jmp
shr
xor
jge
arpl
(bad)
(bad)
pop
fdiv
movs
mov
cmc
js
mov
mov
push
nop
and
mov
ss
xor
cmc
pop
jnp
push
xchg
jmp
(bad)
push
pop
in
xchg
xchg
in
push
cli
xchg
sub
fidiv
xor
imul
dec
dec
mov
mov
and
jo
sbb
xor
xor
sub
movs
push
ror
retf
mov
std
mov
test
das
add
popa
sub
fnstcw
xchg
mov
test
pop
pop
fisubr
fisubr
(bad)
mov
dec
push
fs
sbb
xchg
jge
push
push
mov
add
cwde
sbb
add
xlat
xor
add
mov
lock
xor
jecxz
inc
xchg
mov
popf
repnz
arpl
sahf
sbb
or
sub
xchg
imul
retf
je
pop
and
sub
sahf
xchg
repz
push
movs
push
pop
and
push
test
push
mov
in
mov
nop
jns
in
sbb
ret
popf
xchg
leave
sbb
jl
clc
xor
jns
sub
pcmpgtw
pop
jp
and
add
shl
shr
retf
add
mov
sub
push
xor
aad
movs
mov
out
jmp
mov
cmc
push
mov
aam
cld
lods
ins
lods
xchg
inc
mov
shl
aaa
es
dec
xchg
sbb
jl
xor
and
mov
mov
lea
aas
fucomip
in
pop
test
(bad)
adc
nop
ret
cmp
mov
mov
xor
lds
adc
mov
aad
gs
iret
sar
add
shl
mov
mov
sbb
rcl
ins
dec
sbb
push
mov
fsubr
lds
call
cmp
jmp
aaa
mov
shr
sub
dec
shl
or
les
add
inc
mov
sbb
sub
xlat
jb
in
retf
and
stc
dec
imul
div
inc
enter
fwait
adc
xchg
sbb
neg
mov
sbb
mov
retf
int
cmps
in
add
leave
push
fimul
das
stc
pop
popf
jb
loope
sub
xchg
sub
cmps
push
inc
xchg
adc
shl
sbb
mov
outs
inc
fadd
sbb
inc
(bad)
cli
sbb
sub
(bad)
inc
mov
mov
cmp
fld
jno
dec
arpl
mov
in
mov
adc
les
loope
xchg
(bad)
fldenv
rol
mov
(bad)
fist
jg
shl
stos
fucomip
sbb
jae
adc
push
shl
cmps
and
js
scas
cmp
cmp
(bad)
ficom
dec
or
jmp
or
scas
xchg
ds
in
(bad)
cmp
lds
cmp
pop
pop
sub
jg
add
enter
dec
push
or
add
popf
xchg
fnstcw
mov
loop
xor
out
adc
loope
fld
dec
pop
dec
jnp
pop
push
xor
retf
add
dec
sub
(bad)
aas
push
imul
out
pop
shl
test
add
xchg
xchg
in
out
pop
mov
xchg
jle
xchg
xchg
addps
repz
sub
das
js
cdq
pop
aad
(bad)
sub
mov
(bad)
daa
mov
pop
cwde
jg
shl
pusha
shr
push
ins
cs
pop
mov
xlat
cs
fnstcw
or
jg
push
lea
das
inc
in
cmc
add
xor
movs
cld
push
mov
inc
add
pushf
ret
mov
dec
mov
dec
mov
movs
imul
or
popf
inc
or
xor
dec
and
rcr
xchg
out
movs
push
popa
jecxz
mov
dec
lds
das
stos
add
push
adc
push
add
and
call
jbe
popw
movs
mul
mov
mov
xor
jmp
jne
mov
xchg
clc
js
cmps
sub
push
out
pushf
push
loope
fld
das
cmps
stc
add
fiadd
jns
sub
int
jmp
in
fsubr
pop
mov
cdq
in
pop
and
in
mov
std
mov
xchg
dec
cdq
push
fstp
mov
loopne
inc
imul
cli
push
lea
or
dec
jbe
fcom
and
hlt
sti
mov
sbb
mov
sub
push
pop
stos
call
and
fs
sub
mov
jns
ss
push
fistp
push
enter
pop
cmp
mov
dec
int
iret
mov
sub
sbb
cmps
pushf
mov
pop
mov
fwait
cmp
jb
(bad)
mov
rol
inc
dec
dec
std
dec
cs
in
sti
adc
dec
jo
pushf
adc
cvtps2pd
sub
enter
and
mov
and
sub
es
sub
cmp
je
or
jo
pop
cs
dec
data16
sub
mov
popa
out
js
dec
add
fwait
stos
test
mov
xor
sti
retf
cld
dec
jle
add
scas
das
mov
fdiv
inc
jp
out
jb
mov
push
cli
cdq
pop
inc
fdiv
gs
(bad)
jmp
test
inc
or
je
dec
push
dec
sub
add
mov
inc
xor
popf
mov
or
in
in
leave
or
mov
mov
cmps
ss
cmp
sub
pop
xchg
xor
jp
test
jmp
out
cdq
cli
sahf
(bad)
xchg
xor
cwde
push
das
shr
cmps
loop
shr
sqrtps
adc
ins
xor
pop
mov
jae
jecxz
rcl
inc
ret
test
test
pop
xor
pop
push
arpl
push
test
adc
lods
cmps
sub
jl
sti
pushf
jmp
rol
jge
arpl
mov
inc
outs
dec
call
fst
mov
inc
fistp
gs
ins
adc
aam
mov
test
push
push
int
jge
in
in
(bad)
out
scas
inc
hlt
retf
bound
mov
pushf
add
adc
(bad)
pop
or
xor
(bad)
in
lock
jg
mov
sti
and
pop
scas
jg
sbb
pop
dec
hlt
stos
push
movs
mov
stc
fcmovbe
xchg
jl
xchg
neg
adc
mov
or
cmp
pop
push
adc
leave
loope
pop
clc
rcl
pop
rcl
fcomp
in
in
sub
cmp
or
fyl2xp1
xchg
cmp
dec
mov
dec
or
inc
xchg
scas
xchg
popa
outs
in
aam
shr
xor
mov
fbstp
jmp
cmp
push
sahf
jnp
jge
mov
ret
ret
or
daa
popf
int3
cli
xor
into
je
mov
test
push
pop
test
jae
je
sub
dec
xor
das
pop
add
outs
test
jns
leave
push
mov
and
or
nop
push
outs
push
cmps
jo
pop
movs
int3
(bad)
stc
call
loope
out
jnp
pop
push
leave
in
mov
inc
clc
mov
fisttp
in
popf
pusha
in
mov
addr16
ror
add
cld
enter
rol
or
aas
sub
cmp
sbb
dec
dec
mov
call
fisub
daa
lock
adc
fldenv
sar
cmps
outs
sub
lods
pop
jne
cwde
jo
fs
push
fist
inc
shl
push
js
or
stos
scas
(bad)
fidiv
dec
adc
jle
je
mov
out
xchg
test
repnz
sbb
fstp
cwde
popa
es
jne
mov
sub
mov
adc
mov
vpxor
aas
repnz
xor
clc
jmp
mov
xor
adc
(bad)
and
inc
movs
ret
scas
jae
inc
retf
add
ins
shl
push
sub
pop
mov
loop
xlat
jge
retf
jne
aam
cmc
imul
jae
sbb
cwde
xlat
mov
xchg
sub
sbb
sbb
ror
call
inc
aaa
dec
hlt
cld
xchg
pop
sti
sahf
and
xor
icebp
xchg
cmps
add
lea
packuswb
push
lods
and
jle
mov
aaa
push
fdivr
or
xor
pop
dec
jmp
add
out
por
ror
dec
out
push
xchg
push
sbb
aaa
sbb
pop
mov
jl
retf
dec
cmp
adc
and
std
or
pop
cmp
idiv
imul
shr
mov
inc
aas
lahf
scas
adc
mov
jmp
cmp
clc
cmp
into
cmp
loop
push
xor
out
dec
(bad)
test
cwde
stos
and
movs
fs
call
loope
inc
popf
push
sub
(bad)
loopne
sbb
sahf
retf
jo
mov
mov
imul
cmp
mov
imul
jmp
(bad)
cmp
fidiv
test
pop
xchg
aaa
out
mov
lods
mov
addr16
cmp
(bad)
out
jle
mov
cmp
pop
pop
lods
rcl
sub
enter
mov
add
scas
push
adc
sub
rcl
pop
push
fld
jl
dec
and
stos
push
push
fbld
pop
xor
mov
lahf
fist
push
jp
or
les
cmp
arpl
dec
clc
xchg
mov
sbb
cmp
or
outs
sbb
jl
and
ss
or
fdivr
mov
loopne
dec
in
ret
push
(bad)
pop
xchg
sahf
mov
sbb
loope
mov
mov
mov
lea
inc
aas
jmp
pop
stc
xchg
mov
mov
cmp
daa
repz
movs
adc
push
push
aas
ret
ss
dec
xor
xlat
dec
jae
lods
mov
in
mov
imul
(bad)
adc
sbb
push
cwde
push
or
mov
hlt
jno
mov
es
jg
nop
push
(bad)
out
xor
mov
and
jmp
adc
xchg
aaa
fcomp
mov
mov
dec
lds
fnstcw
aaa
or
mov
mov
push
loopne
cmps
rcl
out
jle
jmp
pushf
push
ficom
xchg
retf
jge
or
xchg
das
cdq
jg
and
and
cld
push
xchg
inc
jno
test
pop
xchg
data16
or
(bad)
mov
push
rcr
(bad)
xchg
push
je
dec
dec
push
xchg
sbb
(bad)
push
pop
hlt
adc
cmps
mov
xchg
inc
pop
movs
iret
ffreep
(bad)
fadd
fcmove
in
(bad)
cmp
push
push
leave
je
adc
retf
addr16
jns
sbb
xchg
mov
clts
mov
xchg
mov
movs
mov
inc
popa
sbb
adc
pushf
pop
mov
in
xlat
int
add
cwde
jp
adc
xor
jno
and
cmp
retf
adc
iret
movs
int3
cs
cdq
sbb
push
(bad)
ficomp
sub
test
in
stc
xchg
fnstcw
adc
mov
jg
or
lods
sar
iret
lods
lahf
fcomp
mov
clc
popf
sub
ins
sbb
xor
(bad)
jg
popa
jno
out
(bad)
sbb
mov
fmul
sbb
inc
std
dec
das
shl
aam
pop
push
sub
xor
cmp
daa
xchg
xchg
mov
xor
mov
inc
(bad)
jp
aas
stos
push
pop
imul
pop
les
ja
cmc
fucomi
and
mov
test
mov
fld
sbb
pusha
or
inc
test
add
add
test
data16
pop
pushw
out
aas
xchg
les
xchg
xor
imul
mov
mov
and
mov
add
jae
nop
das
ins
dec
push
sub
and
cdq
movs
imul
gs
retf
scas
into
sub
inc
sbb
and
xchg
xchg
ins
push
les
mul
inc
jbe
test
call
lahf
dec
test
jmp
adc
in
mov
ins
movs
es
dec
hlt
movs
mov
xchg
gs
das
xor
mov
inc
outs
push
jecxz
shl
mov
mov
sbb
loope
pop
cmp
mov
je
ins
push
or
repnz
mov
not
jb
lock
(bad)
imul
(bad)
cmp
data16
ss
pop
cmp
inc
ftst
adc
sbb
sbb
mov
je
xchg
dec
scas
mov
xchg
mov
ins
addr16
mov
mov
lods
and
dec
mov
call
mov
stc
cmp
outs
movs
jle
xchg
ins
xchg
jnp
pop
jp
hlt
retf
das
ins
cmp
jge
test
and
sub
rol
xor
arpl
sub
and
movs
mov
test
xchg
das
xor
mov
push
inc
adc
pop
mov
push
push
or
xchg
sub
cmp
cmp
gs
dec
ds
mov
mov
pop
ja
aaa
xchg
dec
movs
jg
stos
xchg
out
jns
sub
shl
sub
mov
cmp
ret
mov
stos
or
jo
sub
stos
mov
mov
sti
mov
gs
push
add
loop
clc
push
cli
pusha
pop
xchg
test
inc
inc
aas
test
pusha
outs
mov
popa
add
call
adc
fwait
push
dec
mov
adc
dec
and
mov
retf
mov
inc
jmp
movs
mov
mov
movs
dec
cdq
dec
repnz
mov
sbb
sahf
or
push
in
lods
mov
stc
std
mov
out
sbb
and
fwait
loope
and
pop
or
pop
mov
cmps
xor
cmp
(bad)
jp
data16
mov
retf
xchg
mov
iret
repz
neg
icebp
dec
add
xchg
outs
stc
gs
ret
in
mov
popa
pop
bound
je
out
pop
int3
mov
adc
test
aaa
inc
stos
adc
or
jb
dec
mov
mov
mov
fsub
sub
pop
outs
bound
push
sar
jmp
pop
sti
or
cld
add
outs
mov
rol
inc
adc
dec
mov
ins
cwde
std
loopne
cmp
out
mov
sub
rcl
fidiv
repnz
push
inc
push
loope
xor
sub
xchg
(bad)
out
inc
test
jmp
dec
jo
push
sub
mov
mov
push
fistp
stos
ins
jp
cs
adc
mov
jmp
out
dec
icebp
dec
lock
sti
fcmovnbe
into
jg
stos
jecxz
mov
aam
jmp
retf
addr16
jbe
and
jg
inc
jb
shl
or
jecxz
ins
push
or
(bad)
fadd
mov
jp
mov
iret
mov
and
xlat
pop
inc
add
out
dec
aad
stos
repz
jb
sub
test
fdivr
call
mov
dec
xchg
xchg
pop
icebp
jmp
sti
sub
not
sub
pop
outs
mov
push
lods
push
adc
sbb
push
clc
daa
push
cwde
out
xchg
imul
push
adc
in
jnp
mov
hlt
adc
pop
sub
imul
pusha
push
iret
retf
es
mov
mov
movs
jp
and
mov
inc
leave
push
push
enter
sub
cmp
inc
rol
cmp
sbb
adc
movs
adc
aad
in
jo
push
aam
mov
icebp
iret
xchg
and
popa
jne
loope
test
iret
xchg
ror
adc
add
retf
xor
daa
stos
xor
add
test
call
and
pop
push
mov
push
int
mov
pop
mov
ss
adc
iret
pop
cli
push
jg
xor
jmp
sub
movs
loope
outs
cld
xchg
(bad)
and
inc
jmp
shr
sahf
mov
fiadd
mov
inc
adc
into
pop
es
sbb
mov
jo
lods
jo
(bad)
push
adc
dec
stos
ret
nop
fwait
inc
mov
xor
jl
nop
cmp
inc
rol
mov
lds
mov
jmp
push
push
add
or
aad
add
jns
test
loop
rcl
push
outs
sub
sahf
push
fiadd
pusha
mov
ret
dec
add
push
repnz
repz
xchg
movs
mov
mov
test
xchg
xchg
xchg
dec
push
inc
mov
xchg
push
push
mov
jmp
out
sysexit
cmc
xchg
add
cs
out
fsincos
lds
pop
addr16
cmp
cmp
sbb
imul
enter
fistp
popf
enter
pop
into
nop
adc
loope
add
mov
imul
sbb
cli
ret
or
xrelease
test
dec
lds
arpl
sub
call
test
cs
leave
sti
dec
cmp
xor
and
pop
fist
(bad)
popa
mov
movs
adc
push
or
retf
std
(bad)
shr
ins
call
fist
mov
mov
push
fbld
lahf
int
js
mov
sub
jp
push
imul
add
pop
mov
push
add
adc
xor
jle
(bad)
das
jbe
sar
ret
xor
xchg
xchg
or
arpl
or
or
xor
mov
push
scas
mov
fmul
rol
pusha
add
mov
out
xchg
loop
dec
aas
xchg
aam
cmp
(bad)
fisttp
jb
ins
daa
int
sahf
pop
retf
pusha
cmovns
cld
inc
jo
dec
movs
or
and
(bad)
call
call
fldenv
rcl
ja
das
push
cmp
es
iret
mov
es
mov
jle
movs
and
cmp
ja
jle
dec
cmps
data16
jb
adc
ins
xor
dec
loopne
sbb
jbe
and
sbb
jmp
scas
das
xor
out
add
(bad)
sub
jbe
into
(bad)
loopne
lahf
out
and
(bad)
faddp
lock
push
pop
mov
loopne
int
ins
loop
stos
adc
stos
test
push
outs
cmp
mov
scas
push
test
sbb
jne
mov
outs
jl
repnz
sub
xchg
pop
es
xor
ja
es
daa
arpl
test
and
adc
leave
xor
push
mov
xor
inc
out
or
int3
push
stc
mov
mov
aaa
rcr
es
mov
daa
sti
push
ror
sub
xchg
lea
in
cmp
or
dec
jp
bswap
hlt
xor
gs
out
mov
cmps
inc
fisttp
fbstp
cmp
mov
sbb
dec
mov
mov
fwait
mov
in
pop
dec
push
out
pop
shl
cwde
shl
sbb
mov
jnp
loopne
pop
fld
xchg
adc
push
sub
xor
xchg
(bad)
fcom
xchg
pop
inc
ret
cmps
xor
xor
fwait
test
mov
add
test
(bad)
mov
lods
js
inc
sub
or
std
arpl
mov
call
lahf
jne
push
lahf
xor
sub
(bad)
aaa
and
out
mov
cli
mov
cmc
jl
xchg
jmp
inc
jmp
inc
sub
lods
cmp
(bad)
mov
adc
das
stos
xor
mov
test
dec
add
in
adc
jnp
arpl
movs
cmc
jae
add
dec
outs
jmp
xchg
mov
push
cmp
push
fstp
sbb
jecxz
scas
loop
mov
cwde
push
test
(bad)
clc
cmps
div
dec
aaa
(bad)
and
sbb
xchg
cmc
test
cmps
add
sbb
call
test
sub
(bad)
fcomi
out
iret
cwde
or
add
inc
xchg
mov
test
cmp
xchg
cmp
cwde
inc
cmp
jae
ins
js
imul
fwait
and
cmp
sub
mul
dec
push
xor
inc
dec
repz
jns
push
sbb
das
push
jmp
in
pop
addr16
sbb
push
jle
sbb
dec
das
ret
dec
ins
icebp
inc
and
std
xor
and
push
in
inc
mov
aas
mov
xchg
ja
add
add
dec
xchg
mov
in
push
dec
inc
je
jmp
push
sub
push
pop
cmp
call
call
xchg
and
repz
dec
xor
jns
push
mov
or
push
rol
and
fimul
xchg
sar
push
mov
sbb
fwait
arpl
and
pop
cld
add
ficom
xchg
inc
lods
sbb
adc
dec
and
test
imul
adc
xchg
cmps
xchg
sti
call
push
cld
sub
jmp
push
inc
jns
push
mov
add
js
pop
ss
add
(bad)
dec
pop
test
pop
cmc
shl
xchg
adc
mov
pop
(bad)
adc
repnz
mov
icebp
and
xchg
je
xor
outs
sbb
push
mov
cdq
mov
imul
int
dec
clc
and
idiv
adc
lods
mov
fdivr
std
jne
and
cmc
push
inc
aam
and
rcr
rol
movs
add
call
fnstenv
sub
fiadd
xchg
sbb
imul
pop
push
int
inc
cdq
or
inc
adc
xor
call
add
xor
push
inc
pusha
jns
inc
fwait
(bad)
cdq
xchg
pop
dec
lea
mov
daa
mov
(bad)
leave
lds
and
push
cmp
inc
pop
lea
push
test
lahf
iret
push
rcl
adc
jp
das
ror
sbb
or
jbe
es
mov
cli
inc
mov
fdiv
fisub
addr16
mov
or
add
inc
test
and
call
xor
pusha
fimul
pop
push
pusha
xlat
movs
aad
pop
test
ja
xchg
or
cmc
mov
pop
imul
mov
jbe
mov
push
push
or
mov
jmp
mov
jge
out
hlt
ja
dec
pop
lock
xchg
fisubr
xchg
test
mov
dec
cli
cmps
mov
cmc
jg
jp
nop
mov
or
and
movs
pop
ficomp
in
jg
mov
test
ss
(bad)
xchg
mov
fwait
pop
sub
sbb
inc
adc
mov
ret
loopne
add
shl
mov
movs
addr16
jno
and
(bad)
lods
ror
bnd
mov
fs
iret
rcl
test
jnp
mov
push
push
dec
loope
(bad)
fidivr
mov
push
cmp
cmc
rcr
stos
stc
in
into
ret
xchg
mov
aas
fs
xchg
push
(bad)
push
das
(bad)
repz
test
repz
jno
scas
imul
xchg
push
mov
jne
xchg
mov
xor
imul
imul
cli
clc
xchg
sub
and
outs
mov
fisttp
mov
mov
repnz
mov
dec
sbb
in
and
aam
sbb
fistp
dec
in
mov
adc
(bad)
fldcw
jmp
into
(bad)
nop
mov
push
jns
cmp
sbb
jns
sub
test
neg
xchg
jne
cwde
mov
jb
jp
jae
les
pop
mov
int3
xor
mov
mov
(bad)
jp
in
call
cli
fdiv
inc
(bad)
aaa
aam
not
cwde
mov
add
push
push
lea
rcr
dec
mov
out
es
mov
sti
arpl
jmp
or
add
xor
pusha
aam
sbb
call
mov
jmp
and
pop
ret
test
int3
inc
push
pop
or
stos
mov
mov
xor
rcr
cld
jb
scas
je
fs
fisttp
pop
xchg
jns
jae
int3
sbb
inc
movs
or
out
movs
xchg
push
ins
retf
adc
mov
xchg
push
inc
sub
loopne
sub
movs
mov
jne
sub
(bad)
cmp
jnp
rcr
hlt
ja
push
xor
int
inc
adc
fisttp
test
jl
int3
xor
lods
and
daa
sti
adc
mov
and
mov
and
sub
int
mov
jle
aad
psubsw
loope
inc
sub
clc
ja
setle
out
(bad)
mov
jae
dec
ret
leave
inc
mov
int3
mov
mov
inc
mov
xchg
pop
es
dec
bound
dec
test
cmps
push
mov
mov
cvtpi2ps
push
mov
fsub
xor
jo
shr
jno
imul
test
fld
mov
rcl
cmp
cs
pop
pop
cmp
add
mov
jmp
mov
ss
nop
shr
into
jl
out
(bad)
ficomp
and
cdq
cmps
loop
jp
sahf
sbb
mov
pop
adc
aaa
inc
jecxz
lea
dec
fidivr
sub
jg
lods
xor
clc
mov
mov
add
inc
and
pop
and
jge
mov
push
(bad)
and
daa
(bad)
mov
sahf
xchg
pop
call
jecxz
dec
outs
push
mov
pop
add
mov
ins
mov
xchg
and
xchg
loop
lods
sbb
mov
or
lods
push
stos
out
test
imul
fistp
cmps
lods
mov
push
pop
adc
xor
inc
xchg
push
sbb
inc
pop
ret
lods
sub
nop
mov
aad
push
jmp
lahf
fidiv
int3
add
sti
(bad)
sub
and
movs
jno
loop
lahf
stos
xchg
mov
push
jge
std
jb
int
out
jae
stos
pop
jns
dec
or
aaa
push
or
sbb
dec
ds
or
push
xchg
in
mov
cli
adc
mov
jmp
stos
ins
sub
mov
add
pop
ss
je
sbb
mov
fdiv
jp
jle
outs
xchg
inc
test
out
shl
inc
icebp
mov
mov
mov
outs
mov
or
lods
pop
xor
cmp
push
ret
pushf
inc
xor
call
loopne
stos
xchg
inc
lahf
iret
ss
jbe
xchg
jnp
repnz
cmc
inc
jmp
ss
std
outs
push
sahf
call
pop
dec
and
push
pushf
out
dec
push
popf
inc
(bad)
mov
dec
retf
fdivr
cdq
enter
inc
xchg
jns
push
loope
lock
das
add
mov
test
mov
iret
xor
in
outs
lea
in
and
inc
jo
fcmovne
adc
retf
push
mov
add
sahf
push
xor
mov
ins
mov
sahf
push
xlat
mov
mov
aas
addr16
outs
repnz
sbb
(bad)
cmp
mov
add
adc
mov
lods
pop
enter
dec
mov
leave
mov
push
push
imul
(bad)
xchg
movs
repnz
sub
sbb
and
fdivr
add
xchg
mov
(bad)
mov
xor
out
inc
add
out
xor
imul
jmp
fneni(8087
je
pop
hlt
dec
adc
inc
inc
sub
repnz
add
jle
sti
xchg
out
dec
test
mov
push
xor
push
inc
cmp
fcmove
and
jge
cld
push
inc
jge
sbb
mov
pop
xchg
sub
call
sar
cmp
jl
mov
jns
jle
repz
adc
aam
adc
push
fist
and
je
xchg
and
daa
mov
jp
rcr
fsubr
shr
adc
jnp
mov
dec
loop
in
cld
push
cmp
imul
cmp
sub
std
xchg
and
pop
dec
cmp
js
xchg
push
ss
push
push
adc
ret
add
inc
inc
xor
loope
lock
push
(bad)
(bad)
test
rol
loop
xor
in
(bad)
call
mov
jg
retf
or
test
mov
cli
lods
popa
dec
mov
pusha
fdivr
call
mov
out
mov
and
imul
adc
mov
(bad)
imul
ins
push
stos
mov
fimul
or
popa
adc
int
in
int3
call
aam
ja
or
push
(bad)
jge
inc
in
aam
push
jp
out
and
or
cmp
sti
call
inc
loopne
call
add
xchg
std
fwait
enter
jecxz
pop
stos
ja
jmp
jge
cmp
stos
xchg
ret
neg
(bad)
cwde
gs
dec
cmp
dec
or
shl
into
mov
xor
sbb
mov
cmps
out
inc
daa
xchg
inc
mov
dec
aaa
jmp
repz
test
pop
les
inc
(bad)
call
jbe
jmp
or
dec
add
aad
imul
shr
and
sub
(bad)
clc
sub
fs
push
sub
pop
outs
bound
pop
push
xchg
push
pop
rcr
int3
push
out
pop
cmc
fucomp
ss
jp
mov
repz
jmp
push
cmp
or
mul
data16
xor
in
lahf
ins
and
mov
repz
add
cmp
xor
push
sub
jecxz
inc
addr16
pop
jb
test
fisttp
add
add
mov
stos
adc
shl
mov
pushf
xor
sub
jo
jmp
scas
arpl
mov
test
xchg
push
mov
xchg
adc
movs
push
aad
mov
pop
call
fmul
xchg
jmp
int
sbb
xor
pop
pop
inc
fld
pop
xor
stos
push
leave
xor
xor
mov
fidivr
pop
(bad)
icebp
mov
ficom
cli
xor
cmp
mov
lods
ds
jmp
mov
out
ret
cmp
retf
das
ja
movs
stos
cmc
sar
xor
(bad)
mov
jmp
sbb
data16
cs
mov
adc
add
or
aaa
in
arpl
cmp
ja
leave
mov
adc
xchg
pusha
aaa
and
(bad)
js
xor
mov
mov
jmp
lods
jne
xor
cmc
repz
inc
sbb
mov
in
or
add
mov
in
je
mov
je
(bad)
or
ss
data16
into
dec
ins
movs
fwait
pop
dec
rol
aas
call
retf
mov
sbb
cmc
fimul
sub
sbb
cld
fstp
or
in
cmp
xchg
call
mov
in
dec
outs
loopne
push
mov
mov
iret
outs
jae
push
and
outs
adc
or
jmp
stos
fwait
jmp
xchg
sbb
sub
movs
imul
xchg
xchg
mov
jmp
adc
push
jno
sbb
or
call
in
aam
mov
and
movs
hlt
stos
push
xchg
adc
mov
cmp
and
sbb
xchg
jmp
int3
scas
iret
jbe
sbb
sbb
shl
cmp
push
sahf
mov
sub
inc
movq
sahf
xchg
(bad)
or
rcl
aaa
inc
sbb
jp
push
mov
sbb
xchg
push
in
pop
icebp
and
in
ss
cwde
fiadd
lea
xlat
and
jmp
pop
scas
push
add
cs
push
add
rcr
or
repnz
gs
repnz
cmps
faddp
xchg
pop
inc
and
mov
mov
pop
or
fld
aam
(bad)
(bad)
xchg
out
push
dec
cli
mov
jno
mov
fbstp
test
bound
jnp
rol
jno
cwde
div
jmp
push
xor
(bad)
sbb
(bad)
push
and
test
inc
or
adc
pop
mov
ror
add
mov
inc
pusha
imul
(bad)
addr16
pusha
shr
call
cmp
add
movs
aam
xor
xchg
adc
sub
fisubr
inc
shl
add
dec
lea
test
push
outs
call
add
aaa
xor
lock
rcr
loope
pop
mov
ins
outs
xor
cmps
inc
push
callw
ss
or
jno
out
(bad)
sub
xor
jge
aam
jmp
or
sub
(bad)
xchg
dec
sub
mov
dec
xor
popf
pusha
in
mov
pop
les
fidivr
dec
adc
sbb
push
push
in
ds
cwde
add
sbb
out
mov
adc
outs
xlat
outs
adc
adc
(bad)
ja
scas
mov
xor
pop
scas
sub
mov
fnstsw
lock
call
sub
call
das
aas
jo
add
push
pop
nop
(bad)
ret
push
dec
retf
clc
aas
sbb
cmp
jb
jbe
mov
jmp
mov
loopne
shl
ja
sub
int
ss
(bad)
call
stc
leave
(bad)
out
jg
inc
loopne
pop
mov
and
mov
or
mov
xchg
jle
out
loopne
sub
xor
imul
adc
cmp
push
push
pop
xchg
mov
fs
scas
test
(bad)
pop
and
loope
xor
jo
shl
addr16
cmp
push
div
ins
push
jmp
add
jno
ds
adc
addr16
(bad)
enter
cmova
sbb
loop
fwait
loope
mov
xor
pop
mov
bextr
nop
adc
xchg
mov
mov
cmp
mov
ja
dec
mov
xchg
pop
sar
or
sbb
das
fcomp
mov
aaa
leave
mov
retf
and
fstp
data16
cmps
or
xchg
adc
jne
loop
ret
and
je
inc
int
mov
cmps
cmp
mov
mov
repnz
test
cmp
push
pop
cli
mov
pusha
shr
cmps
lds
jg
in
add
fisttp
xchg
jl
mov
cmp
pop
cs
out
shl
outs
add
inc
sbb
aas
push
xor
daa
xchg
(bad)
ja
xchg
fstp
aas
inc
aam
adc
sahf
or
pop
mov
jl
fwait
xchg
ror
out
neg
add
or
inc
push
ss
inc
mov
cmp
mov
mov
retf
sbb
jmp
rcl
mov
mov
imul
xchg
mov
xlat
test
adc
inc
or
(bad)
retf
nop
jnp
jle
mov
xchg
jb
(bad)
or
imul
mov
dec
dec
add
and
(bad)
mov
int
icebp
lds
push
dec
push
inc
jp
mov
mov
inc
sub
cdq
mov
jecxz
out
cmp
test
out
loopne
movs
ja
test
sbb
cdq
ja
cld
jmp
cs
mov
add
jmp
icebp
ror
pop
(bad)
ins
pop
mov
mov
jmp
xchg
and
adc
mov
cmp
adc
cmp
push
pop
pop
fiadd
mov
and
adc
dec
mov
push
or
or
aaa
popf
dec
out
adc
sub
rcr
mov
inc
popf
mov
repz
dec
das
xchg
scas
pop
sbb
adc
call
into
in
inc
inc
inc
loope
inc
pop
call
rcr
mov
or
dec
popf
ja
sbb
std
push
out
sbb
loope
das
call
iret
mov
loope
cmp
std
std
(bad)
retf
pushf
xchg
pop
cld
or
cmp
push
iret
pop
leave
xchg
jmp
cmp
scas
push
stos
fs
lods
div
rol
xor
ror
pusha
jg
and
inc
jnp
xchg
and
pop
cwde
out
adc
(bad)
and
outs
clc
movs
stos
stos
xchg
push
and
jo
mov
mov
pushf
xor
sbb
div
mov
mov
retf
int3
xchg
dec
mov
xor
cmps
jge
rol
or
pop
push
add
xor
add
and
push
test
lea
xor
mov
jne
dec
jnp
and
scas
ret
loop
in
daa
rcr
or
or
pop
mov
cwde
cld
es
push
call
mov
add
xor
sbb
dec
dec
pop
or
gs
pop
cmps
and
in
inc
jp
mov
out
fsubr
lahf
sbb
fidivr
ret
sbb
test
fdivp
cmp
psubd
dec
shr
aam
jmp
pop
push
adc
jge
mov
push
scas
fucomip
mov
cmp
fwait
adc
jecxz
clc
lods
sub
dec
inc
xchg
add
xchg
shl
jp
cmps
pop
out
cmps
sbb
movs
mov
aas
push
fst
dec
std
shr
test
mov
pop
push
pop
xchg
in
es
mov
adc
sub
or
sub
inc
cdq
cmps
into
in
pop
lock
pusha
dec
out
mov
inc
(bad)
lds
(bad)
fstp
es
fnstcw
or
in
out
xor
aam
push
sub
les
(bad)
ja
xchg
fistp
inc
outs
icebp
and
inc
cmp
mov
repnz
dec
iret
push
mov
mov
push
pop
loopne
dec
repnz
mov
push
retf
test
and
int
sub
mov
je
sub
mov
in
pop
popa
sahf
mov
iret
arpl
mov
clc
and
mov
psadbw
mov
das
test
cdq
enter
cmp
aas
lea
add
mov
pop
hlt
xor
shr
jp
mov
sub
cld
push
lahf
sti
dec
fild
(bad)
das
movs
add
inc
inc
stos
test
loop
enter
aas
pop
sbb
mov
inc
jb
sbb
dec
push
and
in
aad
mov
stos
adc
add
int3
repnz
add
adc
cli
sub
iret
push
dec
xchg
mov
test
(bad)
out
enter
xchg
push
js
aas
sar
jle
sub
fnstsw
shl
jnp
hlt
cmc
mov
sbb
cmp
aam
xchg
stos
mov
adc
clc
in
shr
xchg
jb
sbb
adc
xchg
call
stos
movs
aas
ffree
icebp
idiv
(bad)
mov
mov
sub
xchg
pop
xlat
and
xchg
mov
popf
xchg
(bad)
popf
jae
mov
inc
lea
add
adc
mov
jle
ds
xchg
mov
aad
dec
cmp
call
mov
loop
fnstenv
xor
push
addr16
xchg
(bad)
vunpckhps
loopne
pop
and
xchg
pop
add
fild
int
jecxz
xchg
lods
clc
jmp
inc
(bad)
pop
dec
ss
jb
and
ja
in
call
jl
push
xor
xor
sub
or
jmp
adc
adc
ret
shr
fwait
xor
pop
cmp
or
mov
(bad)
xlat
out
mov
imul
aad
inc
xchg
fwait
mov
inc
inc
ror
sbb
movs
jno
cmp
shl
ss
push
mov
inc
inc
xchg
fimul
mov
mov
cmp
xor
call
xchg
fs
jo
cwde
imul
arpl
ja
push
daa
cmp
jg
or
retf
xchg
js
aam
pop
(bad)
loope
push
loopne
retf
inc
adc
call
mov
icebp
dec
out
jno
cdq
cmp
cld
sbb
pop
cwde
test
adc
cli
jge
dec
and
lea
adc
add
or
ret
jbe
pop
mov
pop
sub
fstp
dec
dec
mov
mov
in
jl
cmp
out
mov
movs
or
xchg
aam
in
je
xchg
push
mov
sbb
xor
mov
sti
adc
push
rcl
push
push
xor
pop
sub
call
(bad)
into
sub
and
and
fistp
(bad)
adc
xlat
test
stos
ret
cmp
ror
sbb
add
fist
add
mov
(bad)
out
leave
popf
retf
retf
test
adc
sbb
or
pop
adc
outs
js
loopne
mov
or
adc
mov
nop
mov
movs
jno
js
cwde
dec
mov
xlat
hlt
dec
lods
pushf
fiadd
push
int
and
sahf
adc
out
sbb
jmp
in
cdq
push
nop
push
mov
inc
sub
mov
sub
cs
cmp
gs
dec
cmp
sbb
fcomi
mov
push
inc
clc
mov
cdq
dec
adc
xchg
xchg
call
mov
sub
adc
or
rcl
and
mov
ret
push
dec
cwde
adc
and
into
enter
xchg
out
mov
inc
jle
enter
jne
mov
sub
outs
mov
push
inc
mov
fsubr
sub
mov
rcr
xchg
(bad)
mov
adc
push
lds
aad
inc
adc
inc
jl
inc
fsubr
adc
lods
or
pop
les
or
fiadd
fist
mov
or
daa
test
jp
test
leave
mov
sbb
test
mov
mov
(bad)
mov
cmp
sbb
test
fst
std
fist
xchg
popf
adc
dec
and
adc
imul
adc
mov
retf
les
test
inc
push
xor
imul
(bad)
ret
and
retf
dec
test
fimul
aaa
(bad)
mov
adc
push
push
inc
bound
or
loopne
ds
pop
call
mov
jmp
dec
jb
jne
dec
push
sub
clc
nop
dec
xchg
rol
xor
jnp
aas
call
add
idiv
dec
out
xor
js
sti
push
lock
inc
pop
popf
addr16
jnp
scas
ret
scas
fst
or
add
out
push
cmp
and
mov
sbb
daa
lods
ds
xchg
in
jl
or
mov
push
push
ret
ret
daa
xchg
je
aaa
mov
scas
ins
and
imul
fisttp
inc
jae
movs
push
mov
retf
or
mov
cmp
movs
fdivr
repnz
sbb
mov
out
daa
xchg
push
mov
scas
scas
jecxz
pop
or
dec
dec
or
and
mov
xlat
pop
xchg
into
fidiv
cld
and
xchg
or
or
mov
adc
sub
jg
cld
fidivr
loopne
sub
(bad)
movs
(bad)
aad
rcl
fs
scas
sbb
sub
sbb
pop
sbb
ficom
imul
mov
rol
mov
test
inc
xlat
adc
cmp
jnp
fbld
mov
cmps
pushf
push
fsubp
out
cmp
repz
int3
sub
lea
pop
jne
sbb
or
mov
and
fidiv
out
mov
stos
mov
dec
repz
cmps
or
nop
mov
mov
call
push
scas
jne
outs
clc
xor
mov
int3
pop
(bad)
stos
mov
and
sub
jnp
test
test
sbb
rcr
jno
sub
mov
ja
jb
popa
pusha
seta
lds
xchg
or
add
(bad)
lds
sbb
dec
into
popa
pop
inc
test
add
sbb
add
shl
xor
mov
or
in
push
push
push
mov
int3
add
(bad)
xchg
push
and
sti
sub
pop
push
loopne
clc
icebp
xchg
mov
loopne
mov
test
pop
div
test
or
mov
rcr
into
aam
les
add
adc
pop
dec
je
sbb
dec
cmp
mov
in
xchg
xor
add
adc
or
sub
or
dec
fld
inc
cmp
imul
xchg
and
and
les
jne
sbb
xchg
loope
push
cld
mov
mov
sub
imul
jge
jmp
test
pushf
test
push
push
shl
mov
xchg
ins
fsubr
dec
and
jmp
xchg
scas
xor
mov
add
shr
rcr
jno
aaa
cld
push
mov
adc
jns
xchg
aas
mov
xchg
lea
push
js
mov
int
and
add
(bad)
xor
sbb
add
sbb
xchg
arpl
fsubr
das
add
rcl
cli
push
push
xchg
add
pop
lods
cmps
mov
scas
and
lods
xchg
lahf
mov
or
sar
jg
out
test
push
mov
aas
pop
mov
sub
mov
je
and
xor
inc
ss
aaa
retf
mov
retf
mov
mov
ror
test
sbb
mov
mov
inc
lods
xor
ins
jge
xchg
inc
push
ret
or
mov
jp
enter
imul
mov
cli
cmp
dec
es
and
and
(bad)
(bad)
cdq
xchg
mov
pop
sar
pop
(bad)
in
dec
pop
imul
or
push
cmps
or
fs
cmp
mov
lahf
and
inc
jge
adc
mov
jmp
adc
mov
cmp
xlat
jbe
sub
cwde
fmul
adc
mov
dec
mov
pop
and
cmp
mov
lods
or
imul
loop
test
pushf
cld
(bad)
loop
pushf
lds
adc
inc
jge
loopne
cmp
xchg
(bad)
outs
stc
in
push
and
hlt
add
dec
ins
mov
sub
mov
ins
movs
sub
sbb
cmp
fstp
jb
ss
jne
leave
sbb
push
imul
mov
pop
in
cmovnp
pushf
cmp
gs
sar
aas
mov
push
ins
ss
imul
dec
ds
sbb
movs
neg
(bad)
in
ss
cmp
adc
stos
push
shl
xchg
adc
outs
push
in
sti
mov
mov
rcl
inc
inc
popf
fsub
aaa
in
stos
es
add
(bad)
and
out
addr16
dec
adc
push
imul
aam
sar
ror
push
(bad)
clc
(bad)
sub
retf
jge
(bad)
cmp
jo
(bad)
or
aaa
push
pop
push
push
xchg
lods
pop
push
sbb
sub
push
lds
mov
leave
(bad)
fild
pop
mov
mov
aad
cmps
mov
xor
enter
fnstenv
xchg
ret
loopne
sti
test
les
push
push
iret
or
inc
mov
cwde
in
xchg
dec
or
pop
rcl
pop
cli
out
call
xchg
xchg
pop
out
gs
mov
in
jae
(bad)
stc
in
push
and
in
dec
scas
add
cmp
jno
sub
add
and
mov
es
cmc
cwde
and
mov
jmp
adc
cmp
rcl
gs
(bad)
imul
(bad)
hlt
es
mov
into
inc
cmps
fdivr
push
popa
jb
repz
imul
sub
bound
jo
ja
sbb
movs
rol
arpl
call
(bad)
push
jmp
retf
cmp
cdq
jne
popa
mov
movs
nop
loope
lds
pop
add
mov
ror
jmp
xchg
push
(bad)
test
and
push
stc
xchg
and
mov
cmc
popf
inc
jbe
dec
in
and
mov
cld
scas
ds
es
fcomp
lahf
xor
adc
mov
pop
xchg
push
jns
repz
xor
or
jecxz
cmp
cli
test
in
cmps
pusha
lock
sbb
lahf
mov
fstp
cmp
mov
cmp
outs
popf
jb
loop
jmp
push
mov
jb
mov
jl
adc
push
sub
mov
dec
scas
sbb
jnp
jne
dec
repz
push
popa
fs
mov
xor
jle
mov
pusha
cdq
repnz
cs
sbb
cmp
sub
into
lods
xor
pop
retf
cli
xor
pop
mov
pop
in
cdq
push
popf
mov
test
imul
cli
xchg
cmp
jle
sbb
aaa
lock
dec
iret
ins
(bad)
bound
leave
out
inc
jnp
lea
leave
xchg
inc
push
mov
mov
jmp
ins
or
xor
xchg
ins
loope
push
xchg
daa
sti
sub
dec
movs
and
sub
pop
mov
mov
call
(bad)
scas
xor
mov
inc
mov
fs
inc
ret
mov
test
aam
lock
out
loope
sbb
push
cmc
ret
inc
gs
pop
ror
jl
dec
dec
in
cs
or
mov
xchg
lock
test
adc
or
adc
mov
pusha
(bad)
ss
dec
xor
dec
adc
aad
jnp
fmul
adc
and
cmps
jne
aas
and
jmp
add
adc
out
mov
push
cmps
cli
jmp
call
inc
popf
xchg
cmps
pop
cmp
ret
outs
jns
push
retf
jne
mul
sar
and
mov
out
xchg
loope
mov
stos
(bad)
mov
xchg
jle
xchg
jnp
cmps
add
xor
cdq
or
mov
and
xor
xor
mov
in
into
mov
xchg
inc
cmc
std
outs
jb
and
ins
(bad)
and
in
ret
mov
inc
js
dec
mov
jecxz
pop
dec
outs
(bad)
or
sub
xlat
jb
and
int3
or
addr16
imul
lea
xchg
aaa
mov
repz
jecxz
movs
fucomip
and
cmp
inc
jmp
ja
sub
mov
test
xor
loope
push
movs
fdiv
mov
and
ret
adc
cdq
movs
movs
sbb
jno
xchg
mov
cld
gs
adc
aad
repz
retf
jnp
outs
xor
xor
mov
or
icebp
adc
in
xor
mov
retf
mov
xor
adc
scas
and
ins
mov
test
mov
push
xor
jnp
xor
sahf
and
test
movs
sbb
pop
cmp
dec
dec
xor
xchg
cwde
xchg
mov
and
retf
add
or
ret
jmp
repz
in
fisttp
fsubr
or
mov
dec
adc
cmp
in
inc
xchg
out
xchg
call
mov
xchg
sub
push
sub
xor
inc
or
push
dec
or
rcr
fwait
and
add
mov
jb
adc
mov
cmp
dec
xchg
leave
mov
aas
cmp
xor
mov
loopne
ds
dec
inc
sbb
fbstp
jno
call
mov
cmp
xchg
xchg
mov
sbb
test
push
sti
adc
enter
push
jmp
cdq
lods
cli
pop
std
inc
ds
mov
pop
in
mov
in
mov
push
into
xchg
cmp
popa
mov
adc
xor
jecxz
imul
or
sub
inc
push
(bad)
push
cmp
push
dec
pushf
push
jmp
or
test
scas
mov
outs
sub
icebp
test
cmp
cmp
jmp
bound
ror
xchg
ret
data16
adc
lds
and
and
xchg
xchg
sar
add
inc
ins
jg
xchg
xchg
sbb
outs
imul
pusha
pop
add
mov
sub
shl
fisub
pushf
mov
push
fimul
cmps
stc
push
pusha
pop
sbb
ins
mov
nop
mov
enter
pop
test
mov
int
pop
jns
pop
push
(bad)
dec
xchg
add
cmp
(bad)
pop
jnp
mov
push
cld
or
scas
cmp
shl
or
aaa
sub
sbb
mov
pop
xor
or
cmps
pop
dec
lds
adc
outs
pushf
addr16
neg
ins
jge
fisub
fcmovb
lods
push
ins
mov
dec
fadd
mov
jmp
or
repz
retf
xor
xor
fist
movs
sahf
inc
lds
cmps
or
push
pop
pop
(bad)
xchg
mov
and
cmp
mov
frndint
sbb
push
je
sti
cmp
arpl
rcr
jno
mov
mov
sbb
xlat
cmp
nop
test
push
out
mov
xchg
inc
inc
or
xor
jle
xchg
popa
ins
lahf
call
out
dec
sbb
repnz
arpl
(bad)
sub
push
sbb
jg
jg
and
push
push
fimul
xlat
pop
inc
mov
gs
es
das
push
cmp
jg
hlt
inc
jbe
and
aas
fidiv
inc
mov
pop
dec
neg
mov
jg
sbb
aaa
add
cld
in
xchg
jns
sub
cmp
retf
sbb
pop
out
xchg
ror
out
or
cmc
mov
inc
sub
int3
add
jns
mov
inc
inc
adc
outs
leave
(bad)
dec
into
mov
rol
cmp
arpl
mov
leave
pop
jl
loop
dec
inc
sbb
cdq
or
push
xchg
ds
add
xor
dec
les
je
lahf
(bad)
pop
jg
sahf
inc
pop
ss
mov
mov
cdq
mov
das
jae
or
inc
lds
mov
bswap
jae
sbb
push
mov
jg
cmp
out
xor
dec
mov
mov
sub
adc
test
cmp
xchg
out
fucomp
adc
mov
push
call
dec
sar
pusha
sbb
add
sbb
shl
shl
mov
outs
mov
fisubr
or
adc
(bad)
cmps
call
mov
xchg
es
(bad)
loope
test
(bad)
jge
loope
adc
mov
retf
enter
mov
jo
jnp
sbb
and
xchg
xchg
and
in
cmp
inc
lods
jae
fnstsw
pop
mov
aaa
inc
xchg
ret
rol
xchg
mov
adc
dec
pusha
adc
rol
retf
fcmovnbe
out
and
aas
inc
and
iret
jg
mov
ss
ret
mov
loopne
fidiv
(bad)
emms
xor
pusha
inc
popa
int
xchg
pop
xchg
sub
pushf
mov
sar
scas
push
jp
jle
scas
sub
mov
push
inc
jg
add
addr16
imul
mov
iret
push
test
xor
sub
cmps
mov
push
mov
inc
dec
sbb
loope
and
cdq
out
cmc
aas
cwde
retw
or
cmps
push
and
pop
jmp
js
add
dec
outs
arpl
std
push
mov
xor
ror
mov
ss
jmp
sbb
mov
jp
dec
dec
inc
ret
xchg
push
inc
cmc
jmp
mov
xor
push
inc
sahf
lock
(bad)
ror
movs
stos
cmp
movs
sub
add
cdq
xor
stos
lock
or
lods
ret
sbb
or
test
push
clc
cmp
xchg
and
or
imul
push
add
mov
sti
sub
adc
fs
mov
scas
push
inc
(bad)
loopne
arpl
mov
imul
inc
or
loope
xlat
adc
push
xchg
and
xchg
stos
or
mov
pop
sub
adc
test
loopne
test
mov
into
jg
pop
and
dec
pop
pop
add
and
sbb
leave
ss
retf
repz
adc
lock
mov
sbb
jbe
shl
scas
cld
xlat
(bad)
sub
jecxz
mov
mov
mov
xor
sbb
ret
lods
or
push
popa
mov
xchg
xor
add
mov
mov
loop
push
aaa
shl
mov
aas
sub
or
shr
sub
dec
push
inc
mov
repz
mov
not
jecxz
adc
xchg
enter
mov
cli
and
adc
out
dec
jno
je
mov
sti
rcl
test
pop
mov
jae
mov
add
out
dec
xchg
cmps
adc
popa
mov
inc
xchg
pop
adc
iret
sti
inc
je
shl
and
outs
xor
jl
jcxz
xor
or
mov
mov
imul
es
jle
movs
pusha
adc
out
and
mov
pushf
les
(bad)
and
dec
jno
and
ret
mov
outs
stos
and
pop
mov
mov
mov
mov
cld
jns
push
push
out
in
ins
push
add
push
jnp
sbb
(bad)
fwait
call
int
(bad)
iret
cmp
fldcw
fdiv
push
pop
imul
jnp
addr16
fwait
push
or
enter
ror
ja
and
sbb
hlt
push
jmp
xor
jl
fmul
leave
and
sub
test
ins
call
jo
sub
cmp
lods
or
push
mov
and
mov
jg
(bad)
fbld
pop
push
outs
mov
popa
call
add
and
rcr
add
fld
(bad)
pop
(bad)
icebp
xchg
aad
(bad)
(bad)
and
xchg
cmps
and
xor
add
pop
jbe
sub
sbb
jns
and
jb
inc
std
adc
addr16
jecxz
xor
fist
xchg
and
gs
(bad)
iret
sbb
lods
jge
adc
scas
mov
lea
add
movs
loopne
push
adc
hlt
mov
outs
aam
fidivr
push
xchg
push
xor
test
mov
fdiv
jb
or
sar
rol
test
add
and
rep
ds
pop
mov
fsub
enter
dec
push
sbb
cmc
push
inc
mov
mov
dec
mov
(bad)
mov
mov
dec
cmp
mov
retf
mov
pop
ret
sub
mov
push
ins
xchg
push
cs
ret
je
xor
push
mov
rcl
sub
sbb
stc
into
inc
idiv
sub
mov
pop
jo
cmp
pop
xor
jecxz
or
add
jmp
ret
push
lds
fisubr
mov
sub
loopne
cli
retf
in
push
ror
shl
les
lods
stc
dec
jb
dec
or
sbb
test
xlat
test
mov
jmp
mov
mov
inc
cdq
stc
mov
sbb
(bad)
fwait
adc
outs
mov
stos
add
sbb
(bad)
repz
or
repnz
jg
xchg
pushf
xor
pop
jns
pop
test
ja
or
sub
rol
out
mov
inc
dec
sbb
inc
int
cld
in
mov
mov
ss
mov
add
push
push
ds
ja
pop
sbb
mov
pop
xchg
push
imul
push
mov
pop
xchg
nop
xchg
ss
out
fsubr
(bad)
fldenv
add
enter
inc
out
dec
pop
push
or
push
sub
je
repz
shl
mov
cs
sub
mov
push
popf
cmp
pop
out
mov
mov
mov
adc
push
xor
(bad)
(bad)
xchg
sub
add
leave
movs
push
add
sub
add
jg
pushf
rol
sbb
test
call
sub
pop
in
cmps
dec
daa
cmp
or
jmp
call
cmp
fidiv
pop
jb
sbb
repnz
jecxz
sub
lods
mov
add
aaa
out
and
jmp
mov
inc
sub
lahf
fnstcw
lods
test
xor
sub
ja
out
cmp
mov
loop
sahf
pusha
and
inc
fistp
into
leave
xchg
or
data16
mov
gs
arpl
int
fcmovnbe
sbb
addr16
in
fidivr
sbb
pop
sbb
clc
or
dec
or
jne
pop
sub
mov
test
in
out
mov
inc
mov
fnstcw
cmp
pusha
push
adc
lods
addr16
stos
or
sbb
sub
xchg
mov
jb
(bad)
add
mov
add
xchg
call
cli
fld
mov
add
ss
jle
aaa
add
cmps
hlt
mov
adc
(bad)
ins
movs
lahf
ror
sti
sbb
pop
out
xchg
lods
pop
lds
xchg
pusha
into
std
rcr
jno
mov
pop
mov
mov
mov
call
jl
sub
jbe
push
and
pop
pushf
loop
xchg
mov
out
cld
stc
sbb
push
and
mov
repnz
in
adc
xlat
jmp
and
je
adc
sbb
pop
xor
shl
mov
jae
scas
and
jl
sub
mov
fs
jg
out
mov
or
xor
fcomp
fiadd
lea
cmp
pop
sti
neg
sbb
xor
inc
scas
jmp
jb
out
lock
sbb
lods
addr16
pop
shl
fs
mov
sti
add
push
frstpm(287
mov
es
sub
inc
ss
sbb
pop
fmul
adc
mov
je
jnp
pop
ja
out
mov
and
cmp
pushf
leave
pushf
(bad)
sahf
outs
or
scas
pop
dec
cmp
jno
sti
lahf
mov
jmp
mov
pop
mov
lea
xchg
cmc
mov
lsl
mov
and
xchg
cld
jmp
cmps
test
xor
push
xchg
xor
in
cld
shl
inc
dec
pop
sub
pop
aas
into
sbb
mov
daa
push
adc
add
mov
fadd
cmp
hlt
loope
sub
sar
ss
mov
dec
xchg
push
bound
xchg
xor
imul
cmp
cwde
mov
mov
mov
sbb
push
fisttp
jbe
inc
mov
nop
fstp
push
test
pop
xchg
push
les
ds
test
out
inc
push
or
sbb
pop
test
sbb
mov
push
aas
(bad)
cmps
push
sbb
sub
or
pop
jle
cmc
jb
xchg
push
out
mov
inc
rcl
xchg
ins
aad
xor
sbb
or
mov
and
in
push
push
mov
sbb
(bad)
scas
mov
retf
dec
mov
adc
rol
xor
push
or
ss
mov
fiadd
mov
(bad)
adc
inc
jno
out
mov
mov
dec
sti
inc
mov
push
imul
sar
dec
inc
test
fdiv
pop
mov
mov
xchg
hlt
ss
out
jbe
lahf
out
sbb
ja
xchg
mov
jmp
inc
cmp
(bad)
loop
retf
add
ret
mov
mov
mov
arpl
adc
repz
push
lods
xor
arpl
cmp
lods
or
fstp
pushf
dec
push
push
and
enter
(bad)
and
popa
push
or
test
loopne
and
mov
mov
mov
xor
stos
pop
pop
es
bound
leave
mov
aam
add
xchg
jg
push
js
dec
bound
jae
add
jae
mul
cmp
and
xor
clc
or
dec
xor
ret
dec
adc
mov
cmps
pop
xchg
jns
(bad)
scas
pusha
repnz
add
or
adc
mov
mov
pop
and
(bad)
jge
push
clc
push
gs
mov
add
cmp
sub
cmps
mov
fwait
jge
push
jp
lods
test
add
fcomi
push
mov
fwait
or
or
movs
push
shr
adc
stos
ds
add
movs
mov
cmc
sub
or
pusha
(bad)
jne
push
or
cmps
pusha
out
imul
dec
(bad)
adc
(bad)
gs
test
xchg
push
int
xor
ret
cli
pop
adc
scas
push
cmp
sub
dec
movs
xchg
in
and
imul
mov
xchg
stos
icebp
retf
leave
in
adc
jbe
jge
fst
mov
or
xor
test
jnp
jge
out
mov
(bad)
pop
mov
dec
stos
imul
les
sub
push
js
int
test
scas
into
cmps
mov
sub
shl
mov
sub
inc
test
adc
mov
inc
inc
mov
jb
das
and
jns
lods
adc
and
mov
cwde
push
xor
mov
dec
add
dec
or
in
sub
or
mov
mov
mov
xchg
loope
mov
inc
mov
or
dec
fbstp
fisttp
pop
not
and
mov
xor
sti
pushf
mov
jns
(bad)
push
adc
or
loope
pop
lea
mov
fld
lahf
out
int
fcmovu
dec
push
add
add
div
mov
inc
sub
push
shr
in
dec
pop
mul
pusha
mov
sub
(bad)
jle
gs
aam
es
adc
(bad)
xchg
cmps
or
sub
jbe
or
cmps
add
jl
ins
mov
mov
int
repz
push
mov
mov
xor
mov
and
repz
sbb
jo
cdq
mov
cdq
mov
cmp
add
lock
dec
xor
pop
sbb
or
ficom
das
movs
data16
pusha
jl
ja
add
fiadd
inc
pop
aaa
sahf
cwde
out
inc
and
push
movs
ret
jmp
mov
and
push
xchg
test
(bad)
mov
cmp
push
retf
data16
sub
ret
cwde
movs
cld
(bad)
jl
rcr
jecxz
xchg
xor
sub
aas
call
sbb
jge
mov
stos
pop
cwde
retf
push
int
fwait
push
push
pop
sbb
pop
add
mov
sti
rcr
inc
stos
xor
mov
push
mov
push
mov
sbb
out
xchg
out
outs
ins
movs
imul
add
adc
pop
sub
pop
test
(bad)
or
and
stos
shr
sbb
fadd
icebp
push
pop
dec
add
or
icebp
sbb
jo
in
mov
mov
jmp
cmp
test
ins
pop
movs
imul
aad
shl
pop
rcr
mov
inc
pushf
dec
push
shl
add
jne
sbb
push
out
loop
or
(bad)
dec
cmp
lods
(bad)
dec
xadd
add
xor
cmp
pop
mov
popa
clc
adc
dec
push
adc
repz
test
sub
fsub
popf
jecxz
je
movs
add
cmps
cwde
or
add
(bad)
jl
ret
jmp
push
shl
retf
cli
sub
inc
fdivr
jle
lods
dec
mov
loope
mov
mov
(bad)
icebp
leave
popa
not
adc
add
leave
cld
inc
fs
mov
push
inc
(bad)
mov
or
aam
cmps
push
mov
jmp
cdq
inc
xchg
jge
shl
int3
jp
std
push
je
outs
jmp
cmp
mov
xor
je
and
cli
rol
jl
pop
hlt
push
retf
xor
call
sbb
xchg
(bad)
lea
add
dec
push
cli
loop
fs
je
mov
icebp
out
jl
fs
dec
(bad)
(bad)
dec
push
lahf
into
jle
test
and
pop
ins
mov
sahf
(bad)
lods
jge
xchg
sar
vaddsd
mov
shr
cdq
jmp
adc
imul
rcr
mov
adc
mov
adc
in
inc
adc
jp
mov
neg
xor
adc
pop
test
(bad)
das
daa
mov
xchg
in
popa
mov
jns
mov
shl
call
rep
out
mov
sbb
mov
arpl
push
pop
movs
pop
jns
popf
stos
call
loope
es
mov
inc
test
add
xor
int3
mov
sti
adc
ja
dec
mov
ret
aad
int3
daa
imul
inc
mov
sti
retf
jl
bound
add
adc
scas
cld
popf
xchg
add
bound
add
push
jo
pop
push
out
jmp
cmp
inc
ss
sbb
sbb
loope
pop
pop
fxch
lock
cmp
lods
adc
xor
mov
mov
arpl
push
rcr
test
je
dec
scas
xor
mov
int3
xchg
je
pop
mov
jmp
in
xchg
dec
aaa
(bad)
jge
mov
sar
mov
mov
jecxz
(bad)
jbe
xlat
pop
dec
mov
(bad)
or
loope
mov
movs
cdq
sbb
inc
xor
rcl
add
cmps
jae
call
pop
jno
mov
xchg
cmps
pop
movs
clc
adc
inc
loope
pop
push
or
(bad)
jbe
mov
cmp
adc
jge
ret
xor
das
or
daa
pushf
mov
cli
cmp
dec
xchg
dec
pop
sbb
and
xchg
jo
jb
movs
mov
into
ja
or
(bad)
dec
scas
fiadd
(bad)
in
ss
sbb
dec
jnp
stos
jmp
(bad)
fbld
mov
ss
sub
lock
and
mov
inc
cmp
mov
jb
adc
fidivr
fist
mov
loope
dec
xor
popa
outs
jmp
add
xor
popa
call
sbb
mov
cmc
popa
sub
xchg
cmovs
jg
or
in
pop
and
adc
(bad)
jmp
ja
shr
sbb
cmp
push
in
arpl
data16
dec
and
dec
addr16
dec
rcr
inc
adc
mov
inc
iret
lock
aaa
mov
push
jmp
in
push
inc
cmp
cs
gs
dec
xchg
mov
sub
xchg
or
mov
and
int3
jl
jmp
addr16
mov
push
(bad)
cld
pop
push
fiadd
push
inc
out
fst
in
nop
cmc
shl
movs
sub
add
daa
xchg
out
cmp
repnz
inc
loope
xlat
sub
jno
lods
mov
jae
retf
adc
rcl
or
mov
cmp
lahf
inc
cld
addr16
pop
jp
icebp
push
addr16
scas
cmp
mov
jbe
adc
stos
js
fdiv
dec
xor
sbb
dec
cmc
sub
mov
pop
clc
add
add
(bad)
push
pop
stos
pop
js
and
nop
xor
out
aad
push
sbb
or
rcr
mov
shl
adc
add
fcmove
loop
xor
adc
mov
xor
mov
mov
or
xchg
out
mov
scas
shl
jne
outs
cdq
sub
test
pushf
imul
and
xchg
xchg
add
loop
int3
nop
not
(bad)
lods
pop
or
mov
fbstp
std
push
test
xchg
imul
inc
dec
test
push
inc
ds
int
addr16
in
jo
xchg
cmp
retf
lea
imul
inc
mov
fisttp
sub
(bad)
repnz
out
imul
les
and
test
stc
cmc
test
and
mov
push
icebp
sbb
stc
push
daa
add
out
gs
sbb
(bad)
mov
ds
stos
int3
lahf
fwait
bound
movs
mov
add
sub
popa
adc
daa
cld
fnsave
ret
int3
pop
call
hlt
mov
repz
and
dec
pop
xor
xor
in
jne
push
xor
pop
aaa
sbb
(bad)
or
ret
pop
(bad)
ja
dec
xchg
pop
ds
mov
(bad)
ret
and
push
in
enter
aaa
adc
adc
sub
push
add
xchg
dec
call
enter
mov
imul
pop
stos
pop
bnd
mov
mov
adc
and
sbb
mov
cmp
dec
pop
(bad)
retf
push
lds
stos
sub
mov
fiadd
adc
neg
pop
xlat
shl
loopne
mov
fs
loop
les
sbb
mov
cli
(bad)
int3
retf
xchg
movs
rol
gs
inc
mov
out
jno
out
outs
add
add
pusha
mov
sbb
sahf
adc
mov
mov
jmp
scas
scas
push
retf
outs
lods
jge
aam
test
int
inc
cdq
movs
movs
mov
xchg
out
in
pop
push
out
xchg
mov
mov
push
not
daa
sub
loopne
or
mov
stos
(bad)
push
add
lock
shl
xchg
(bad)
aas
stos
and
ins
sbb
mov
outs
in
ja
adc
lods
or
add
fidiv
loope
adc
in
repnz
xor
mov
cmps
sub
popf
cld
(bad)
loopne
dec
lods
jmp
adc
inc
dec
aad
inc
or
data16
ret
dec
jo
pop
pusha
(bad)
mov
adc
(bad)
shl
push
push
shl
and
jmp
in
mov
xchg
add
cld
loopne
lahf
outs
cdq
sub
cmps
(bad)
pop
ret
mov
or
pop
ss
retf
leave
sahf
xor
inc
sub
es
or
mov
imul
je
dec
mul
xchg
sahf
out
in
out
jl
sub
xor
adc
inc
dec
pop
imul
xor
ins
or
sub
xchg
cdq
or
sbb
add
js
fwait
dec
movs
cli
movs
bnd
and
out
mov
pop
sub
or
fld
outs
cmp
mov
lea
les
ja
(bad)
sbb
pop
fisub
mov
ss
sbb
adc
sub
nop
(bad)
daa
clc
ret
xor
jb
mov
adc
xchg
popa
or
sub
outs
cmp
dec
sbb
adc
dec
addr16
imul
loope
mov
das
sbb
adc
es
retf
sbb
call
pusha
(bad)
jbe
rol
mov
adc
aaa
(bad)
fcomp
gs
test
cmp
xchg
pop
test
push
pop
pusha
dec
stos
(bad)
js
push
scas
pop
dec
data16
sbb
mov
shl
sbb
inc
sbb
dec
add
xchg
xlat
and
arpl
cs
movs
lods
pop
sbb
xor
out
pop
xor
cmps
cli
inc
into
loopne
shl
sar
out
scas
add
mov
mov
jp
mov
cmp
pusha
(bad)
in
xchg
and
jo
push
pushf
sub
loop
loope
fcomp
push
fwait
pop
cmc
ins
push
mov
mov
sub
idiv
fadd
cli
ret
mov
dec
pop
dec
xor
adc
stos
add
xchg
into
add
xor
cmc
sub
int3
push
mov
les
shl
inc
cmc
rcr
cmovbe
(bad)
dec
add
(bad)
ins
fdivr
push
enter
cmp
stos
loopne
mov
pop
mov
leave
or
jmp
mov
sub
mov
adc
in
sar
pop
mov
cdq
(bad)
les
mov
les
das
adc
call
xlat
dec
push
fcomp
adc
cmps
stos
(bad)
int3
xor
xchg
push
inc
cld
das
fwait
cld
push
sub
aas
inc
mov
stos
xor
je
xor
push
cmp
aam
push
cmc
inc
push
mov
and
mov
cwde
sub
bound
je
adc
sub
mov
inc
jge
xchg
mov
jno
nop
mov
bound
int3
cli
sti
cmps
cdq
(bad)
adc
mov
pop
or
into
inc
sbb
xchg
pop
leave
js
fstp
jns
ins
xor
mov
and
pop
mov
lods
cwde
mov
inc
sub
lahf
test
daa
jnp
mov
push
sub
rcl
mov
pop
rol
or
ret
fwait
rol
movs
mov
stc
and
aad
jnp
retf
xor
div
xchg
mov
push
dec
or
pop
inc
mov
inc
xor
push
adc
js
sar
mov
cdq
and
pop
mov
jbe
jecxz
xchg
mov
push
jl
sahf
outs
ss
push
mov
pusha
cdq
push
hlt
jo
pushf
xchg
jno
inc
cmps
add
push
in
stc
sbb
popf
(bad)
clc
or
dec
(bad)
js
(bad)
adc
ins
jge
add
iret
mov
jne
aas
mov
mov
gs
ret
js
cmp
jg
mov
pop
movs
mov
push
mov
adc
jmp
fstp
sub
int3
shr
icebp
loopne
xor
cdq
inc
movs
int
popa
(bad)
push
fs
fucomp
mov
mov
or
and
test
movs
mov
ins
fs
in
add
xchg
jno
jae
push
aaa
fwait
lods
cmp
les
lea
cmp
mov
xor
xor
idiv
jmp
aas
inc
or
lods
mov
pop
pop
adc
jl
jg
repz
neg
lods
mov
std
stos
popf
jl
xchg
or
fsub
(bad)
adc
test
adc
in
or
sub
mov
icebp
imul
jmp
inc
pop
call
repz
xchg
stos
inc
xor
xchg
inc
xlat
xchg
dec
mov
bound
pusha
bound
pop
jno
inc
mov
or
mov
lods
sbb
mov
in
push
pop
and
aas
adc
push
xor
cmps
pop
popa
add
pop
cmovp
test
sar
pop
lock
in
xor
jecxz
inc
xor
test
sub
sub
test
aas
aaa
int
repz
pushf
xor
jb
test
clc
push
adc
rcr
cmc
rcr
mov
aad
mov
xchg
gs
add
retf
sar
test
push
scas
fwait
into
jg
in
bound
outs
repnz
mov
mov
in
ret
mov
aas
fs
or
or
(bad)
pop
inc
and
pop
mov
into
mov
sbb
and
push
sub
dec
sub
xor
pop
add
push
repz
pop
fucomip
pushf
les
and
pop
xchg
dec
push
je
stos
inc
neg
les
jb
shl
test
js
xor
jle
retf
fwait
xor
loopne
adc
hlt
cmps
add
pop
iret
xchg
jns
out
stc
inc
xchg
icebp
clc
mov
in
cmp
dec
outs
add
stc
push
sbb
clc
jge
mov
dec
xchg
xlat
inc
pop
cli
outs
repz
(bad)
lds
jb
xlat
fild
adc
pop
mov
mov
pop
jecxz
mov
adc
sub
out
ror
or
(bad)
mov
xchg
xchg
mov
rol
lock
gs
xor
sbb
es
sbb
or
(bad)
xchg
xchg
stos
je
inc
add
mov
cwde
stos
cmps
int
loopne
data16
and
cwde
dec
jg
adc
sub
pop
push
xchg
xor
mov
xchg
xchg
push
aaa
lods
loope
mov
xchg
lea
lock
xchg
jecxz
stos
jle
into
data16
inc
or
push
ret
gs
mov
xchg
call
sahf
aad
unpcklps
(bad)
push
imul
loop
sub
aam
jecxz
inc
pop
inc
outs
mov
jb
cdq
mov
xor
pusha
jmp
fcmovu
jg
(bad)
push
cmps
push
sub
lods
das
repz
and
mov
inc
sbb
cmc
jecxz
repnz
ror
lods
pop
add
and
sub
inc
jnp
int
mov
inc
xchg
lods
dec
dec
fnstsw
loopne
mov
je
out
jmp
mov
rol
dec
ficom
enter
cld
inc
jg
rcl
or
in
push
xchg
daa
sbb
sbb
movs
cmp
imul
int3
or
cmp
js
ficom
sbb
cmp
sbb
je
xor
or
or
mov
inc
sbb
into
out
cmp
mov
mov
push
aad
popf
jle
mov
ss
jne
inc
cmp
mov
stos
fstp
mov
fwait
push
cmp
ret
mov
in
adc
cwde
mov
inc
gs
mov
or
repnz
fcom
mov
dec
or
rol
in
dec
out
pop
mov
mov
push
aad
and
std
out
imul
sti
fidiv
lods
pop
stc
rcr
fidivr
pop
pop
pop
add
icebp
pop
mov
sbb
mov
adc
outs
inc
push
push
fdivr
cmps
inc
xchg
cmp
psrad
popf
jo
and
add
loop
inc
(bad)
into
daa
aad
mov
stc
stos
ss
or
lods
add
cmp
xchg
mov
test
xor
push
lods
xchg
out
jbe
mov
or
dec
and
fsubrp
cmp
(bad)
scas
mov
xor
pop
xor
idiv
pop
out
fild
data16
out
test
cs
ins
ja
push
cmp
jmp
inc
mov
call
cs
and
loop
jecxz
movs
fs
inc
addr16
mov
in
cmp
push
pop
push
cmp
mov
jbe
fs
retf
jle
adc
ret
jno
aaa
mov
dec
call
and
(bad)
fmul
ret
pop
xchg
(bad)
inc
mov
icebp
nop
jmp
pop
push
test
and
(bad)
mov
jp
xor
shr
mov
fs
test
pop
cmps
ja
mov
aaa
gs
(bad)
cli
call
into
pop
leave
sar
dec
fcmovnbe
fisttp
inc
jno
jo
stc
dec
mov
out
sbb
sbb
xchg
out
rcr
or
pop
test
add
gs
xchg
fadd
inc
ficom
fdiv
mov
sbb
test
and
cmps
arpl
addr16
outs
xchg
cmp
or
xchg
ins
xchg
mov
fnstenv
sahf
xchg
call
ds
mov
stc
and
add
mov
out
cmps
add
xchg
fidiv
in
cmp
mov
pusha
std
jmp
pop
outs
es
in
adc
int
sub
sbb
dec
fld
test
jno
dec
movs
sar
inc
hlt
pop
xor
aam
xlat
test
movs
cmp
inc
inc
sbb
(bad)
xchg
pop
adc
fwait
sbb
es
ins
or
fs
pop
dec
scas
push
jae
lock
add
imul
retf
icebp
call
nop
adc
idiv
in
sub
xor
mov
dec
data16
and
sbb
dec
fld
dec
neg
test
pop
stc
outs
call
fs
sbb
repz
cld
dec
cmp
or
cli
mov
and
jnp
imul
hlt
jns
fcom
pop
icebp
(bad)
out
xor
adc
push
pop
ja
stc
xchg
aas
cmp
push
adc
call
jne
ret
outs
jecxz
push
mov
outs
lock
jge
adc
mov
(bad)
jmp
mov
pop
jbe
dec
out
sub
mov
cdq
dec
mov
dec
xor
push
sub
and
jb
out
dec
(bad)
rcr
fsub
pop
mov
in
arpl
out
mov
mov
jmp
stos
pushf
test
adc
ins
mov
ins
dec
or
push
mov
dec
lds
sbb
rol
cmp
xchg
pop
scas
and
adc
xor
(bad)
or
sub
add
shr
push
dec
adc
mov
int3
xchg
dec
sbb
pop
int
pshufw
movs
arpl
(bad)
hlt
add
jle
jl
fwait
or
sahf
retf
lods
bound
in
xchg
or
in
test
fdivrp
arpl
fld
mov
mov
retf
cmp
(bad)
loopne
mov
pop
mov
in
or
outs
call
out
pop
mov
xchg
scas
arpl
xor
xlat
ja
dec
xor
loopne
scas
push
cmp
inc
je
pop
sub
cs
(bad)
pop
fisubr
popa
mov
jb
xchg
dec
mov
les
add
jge
dec
fsub
dec
retf
(bad)
imul
xor
push
scas
(bad)
lock
ins
sar
mov
clc
cmc
jnp
jne
pop
mov
mov
dec
mov
mov
mov
test
mov
mov
mov
div
mov
and
and
jne
out
bound
xchg
jno
scas
jae
xor
dec
xchg
dec
add
push
shl
les
xchg
sbb
rol
jmp
sub
mov
jne
mov
inc
cld
outs
xor
js
test
daa
retf
pop
jmp
pop
outs
add
mov
adc
call
add
call
ret
inc
sub
push
in
ror
xor
sub
movs
inc
sub
xchg
lods
adc
ds
fs
push
fstp
popf
jns
sbb
lock
cmp
dec
inc
pop
xor
mov
pop
add
sub
aam
xor
stos
cmps
xchg
mov
out
inc
aam
push
inc
add
ss
mov
mov
lahf
jno
pop
xor
repz
ss
pop
leave
inc
mov
adc
and
mov
cmp
and
data16
mov
inc
inc
cld
dec
in
ucomiss
push
lods
shl
or
xor
ds
dec
loopne
dec
mov
sbb
add
sbb
cmp
sub
sub
xor
mov
adc
lds
mov
xor
in
loope
movs
inc
mov
and
jae
mov
lods
dec
push
jbe
loopne
das
bound
jno
addr16
pop
mov
mov
cmc
mov
enter
repz
cmp
push
sbb
sub
mov
fnsave
mov
lods
aad
jmp
inc
adc
std
inc
jnp
leave
jne
cmc
pop
inc
pusha
adc
add
(bad)
mov
push
das
inc
int3
call
clc
rcr
xchg
pushf
mov
pusha
sbb
icebp
fist
cmp
push
popa
sbb
aam
icebp
add
ret
dec
aad
xchg
sbb
cdq
mov
or
sbb
jns
(bad)
fmul
xchg
arpl
std
or
jmp
push
pusha
push
enter
dec
pop
push
inc
imul
loopne
push
push
pusha
jo
out
mov
sub
jae
adc
call
aam
mov
lea
or
inc
ins
into
daa
pop
dec
mov
push
xchg
dec
cmc
mov
(bad)
adc
(bad)
test
sub
popa
es
ins
sub
mov
repz
sbb
push
in
test
loopne
mov
pop
sub
in
pop
xor
mov
out
aas
das
push
mov
sar
jo
mov
sub
pushf
mov
xchg
pop
bound
mov
out
mov
sbb
cmp
jo
or
sub
add
fst
mov
fnstcw
dec
sub
es
xchg
mov
inc
inc
push
cmp
sar
call
cs
sbb
pop
jle
mov
call
push
aas
jnp
inc
mov
icebp
sbb
retf
lock
out
(bad)
push
enterw
pop
mov
dec
push
repz
add
jno
cld
mov
imul
sbb
sbb
mov
and
or
xor
xchg
add
enter
dec
pop
cmp
pop
es
adc
mov
jge
push
inc
out
enter
mov
movs
dec
cmp
fadd
in
scas
adc
fsubr
sub
pushf
or
push
or
mov
mov
adc
xchg
jmp
and
xor
rcl
pop
bound
outs
jg
jae
xchg
or
jbe
pop
addr16
xlat
cmp
rcr
mov
or
aam
out
js
push
sbb
push
test
mov
test
ins
jnp
out
in
jmp
hlt
pop
sbb
movs
lea
call
xor
push
or
pop
cmp
mov
sti
ins
sbb
and
fwait
loope
cmp
add
mov
push
inc
xchg
pop
inc
push
cdq
and
jmp
mov
cs
push
sti
dec
cmps
xor
push
(bad)
lods
in
pop
leave
pop
stos
je
jae
pop
push
mov
std
mov
cmp
push
pavgb
adc
movs
push
xor
(bad)
mov
sbb
inc
fiadd
fisubr
mov
xor
fisttp
mov
lock
lods
xchg
out
fdivr
sbb
scas
xchg
or
sbb
rcr
cmp
arpl
or
xor
hlt
ds
fcom
movs
push
or
retf
push
je
xor
xor
pop
repnz
fwait
mov
jmp
popf
ja
fadd
push
test
or
and
bound
xor
and
dec
mov
or
gs
and
xor
adc
cmp
je
outs
jb
cmp
sub
lods
jne
div
out
adc
xchg
inc
dec
or
call
mulps
out
add
xor
aaa
xor
mov
imul
cmps
xchg
aas
stc
xor
xor
pop
and
call
inc
mov
call
mov
cmp
jns
rcl
mov
sbb
jecxz
inc
stc
xor
fwait
xchg
xchg
adc
pop
test
inc
popa
fnop
movs
push
in
sbb
test
add
repz
sub
and
not
sbb
nop
nop
push
shr
sahf
repnz
jbe
cmp
sub
js
or
xchg
(bad)
popa
dec
outs
je
pop
mov
inc
cli
xor
(bad)
out
outs
lock
mov
adc
sub
jae
or
ins
dec
and
or
dec
adc
mov
clc
test
add
jnp
sbb
mov
mov
dec
pop
pushf
rcr
dec
bswap
or
rcl
pop
xchg
adc
fsubp
movs
dec
inc
repz
and
sub
jge
xchg
dec
cmp
pushf
xor
rcr
jae
mov
xchg
loope
dec
mov
aam
jo
ret
cmp
mov
push
loopne
cmp
dec
or
dec
push
jmp
out
push
xchg
mov
push
xor
push
mov
call
adc
xchg
sti
mov
dec
sbb
sub
inc
mov
test
cmps
fs
scas
sbb
cdq
dec
popa
mov
sbb
or
jno
xor
mov
sbb
out
scas
jmp
xor
push
mov
sbb
pop
mov
jb
jae
inc
and
or
xor
les
mov
pop
push
pop
sub
mov
mov
dec
scas
int
or
in
jb
rcl
cmp
lods
xor
rcl
into
mov
or
scas
iret
icebp
call
jle
stos
pusha
ja
stos
and
jmp
and
nop
jb
lds
mov
pusha
cwde
sub
or
popa
push
xor
retf
daa
and
call
adc
add
jnp
icebp
cmp
call
pop
jg
stos
and
adc
jns
test
stos
and
pop
and
out
jmp
gs
aad
xor
inc
pushf
pusha
pop
dec
sti
shl
repnz
aas
jne
ds
dec
repnz
xchg
lahf
inc
fist
lock
xchg
or
push
xor
sbb
mov
pop
pushf
mov
dec
rol
mov
add
mov
ret
add
pushf
repz
sub
dec
sar
jmp
sbb
fwait
arpl
call
add
fs
call
movs
ins
xor
dec
push
stc
push
or
dec
cmp
daa
xor
out
jb
test
scas
aaa
mov
cmp
mov
aad
push
jp
aas
dec
cmp
dec
xchg
loopne
jg
push
stos
cmp
ins
pop
push
inc
ret
nop
adc
cmp
mov
jae
adc
loope
fwait
mov
pop
mov
(bad)
int3
push
mov
int3
retf
sub
rcl
or
push
add
pop
add
sbb
inc
jbe
loopne
jns
sahf
cs
int
jmp
add
iret
jno
(bad)
mov
sbb
dec
sbb
cmp
dec
test
pop
(bad)
sub
mov
pop
rcr
add
cli
js
popf
sub
jb
ret
mov
inc
sub
cmp
pop
or
push
push
or
test
out
ret
test
rcr
outs
das
cmp
pop
jne
repz
jns
ret
lock
movs
jns
pop
stos
cmp
jp
and
in
into
call
mov
adc
ins
sti
fcomp
add
xchg
push
push
not
pop
out
mov
pushf
pusha
push
mov
cmp
jge
mov
sub
push
test
mov
and
jg
sbb
sub
(bad)
xchg
jge
xchg
jmp
add
jmp
sbb
in
fisubr
jmp
scas
inc
jno
adc
shr
mov
pop
sbb
inc
adc
sbb
hlt
mov
inc
fldpi
cvtpi2ps
cwde
inc
add
retf
das
mov
and
push
(bad)
sahf
repz
call
push
mov
rcr
cmps
ds
lea
push
push
test
leave
sbb
jge
jp
jb
dec
xor
mov
pop
xor
push
cdq
leave
imul
xchg
psubsw
push
repnz
fldenv
repnz
ret
ins
retf
stos
push
in
xor
or
xchg
adc
sub
aam
scas
pop
pop
inc
mov
jmp
test
retf
nop
ret
imul
push
cmps
and
xchg
add
ins
hlt
xchg
repz
push
or
mov
push
mov
jge
add
jmp
push
cmp
jbe
mov
mov
icebp
and
mov
sti
push
pop
and
push
dec
jno
mov
cmc
jae
leave
aas
dec
jmp
xor
jb
xchg
and
dec
test
aam
sti
cmp
mov
fisttp
push
pop
retf
into
cmp
pop
mul
cld
xchg
loopne
and
das
cdq
mov
aaa
push
cmc
lahf
das
add
push
retf
pop
push
inc
jge
repnz
fdivp
lds
dec
mov
int3
sbb
ret
ret
sbb
push
cmp
arpl
xlat
and
cmps
mov
test
or
mov
rcr
sti
call
sahf
scas
mov
pusha
fidiv
sub
mov
adc
or
mov
xor
ficomp
jnp
xchg
ins
fisttp
and
lds
loope
fwait
jle
xchg
(bad)
js
sub
(bad)
out
sbb
mov
loope
push
into
ret
in
adc
in
and
sahf
mov
lods
imul
movs
faddp
and
stos
and
sbb
mov
mov
cwde
aas
fst
push
xchg
xchg
push
xor
and
(bad)
cmp
inc
dec
pop
and
mov
jl
lods
dec
cmps
xchg
je
fcomp
jo
xchg
and
leave
lea
dec
sbb
in
int3
stos
xor
mov
enter
or
jo
mov
shl
call
and
out
mov
mov
add
movs
in
retf
adc
dec
adc
or
xchg
cld
les
or
and
mov
cmps
out
push
int
xchg
addr16
lods
aas
mov
pushf
out
adc
inc
inc
pop
xchg
adc
mov
push
arpl
movs
lods
lea
add
xchg
test
jo
(bad)
sbb
sti
call
ja
das
dec
pop
mov
test
mov
push
icebp
test
inc
in
mov
sub
jmp
stos
jle
mov
icebp
cld
xchg
jg
jecxz
mov
call
loope
hlt
in
mov
inc
scas
xor
push
dec
iret
pop
out
or
jo
add
mov
scas
push
aaa
in
push
xchg
call
ror
arpl
jnp
xor
push
xchg
sahf
adc
sar
xlat
push
mov
mov
ja
shl
jge
jno
cmp
cmp
adc
in
out
in
repz
add
mov
(bad)
ffreep
out
jg
inc
jnp
rol
pop
push
adc
mov
or
pop
mov
add
int3
popa
push
push
adc
outs
loop
cmp
out
iret
dec
pop
lods
xchg
jmp
and
push
fdivp
xor
xchg
mov
ror
xor
(bad)
data16
cmps
arpl
ret
popf
or
in
fstp
inc
cs
push
int
scas
jp
xchg
push
mov
mov
cmp
push
ret
mov
cmp
mov
fcmovnbe
inc
mov
(bad)
cmp
push
mov
add
inc
and
pop
in
retf
dec
dec
pop
pop
retf
clc
add
movs
push
std
pop
or
lea
loop
and
ret
lock
push
sbb
jmp
mov
loopne
popf
and
add
daa
jmp
push
xor
dec
gs
dec
mov
rcl
jle
arpl
fmul
jne
add
sub
or
shl
push
movs
or
mov
dec
pushf
cld
ficom
in
iret
and
inc
out
sahf
xchg
mov
in
fwait
out
ror
pushf
pop
std
pop
jne
xchg
pop
xchg
mov
sar
pop
adc
pusha
(bad)
dec
sahf
mov
or
push
push
pop
lods
add
xchg
test
xchg
fs
popa
loop
mov
or
xor
arpl
or
sbb
sti
push
jne
xchg
stos
nop
xchg
ins
dec
mov
cmp
jbe
imul
outs
add
movs
out
sub
test
cmc
outs
loope
sbb
mov
mov
fild
cmp
pop
pop
and
push
(bad)
jb
jbe
ja
loope
les
xor
cmp
adc
inc
mov
pop
clc
fdiv
ficomp
out
or
inc
push
push
in
sbb
inc
cmp
in
leave
in
xchg
cmp
iretw
sbb
lea
ss
not
nop
jmp
fiadd
xchg
dec
stos
dec
fild
js
sbb
fbld
dec
push
fwait
icebp
int3
and
in
std
lea
fdivp
cwde
add
mov
add
mov
pop
inc
inc
or
ret
repz
jecxz
arpl
aaa
in
add
sub
std
mov
adc
sbb
cmps
popf
pushf
jmp
imul
adc
mov
and
cmp
adc
out
jle
pop
mov
in
test
xor
jbe
mov
xor
push
dec
xchg
inc
ret
stos
fidivr
shl
ret
mov
jns
lahf
in
pop
xchg
and
and
addr16
xchg
mov
dec
bound
mov
jbe
repz
mov
in
xchg
pusha
int
fst
or
leave
mov
aam
xchg
mov
mov
cdq
or
retf
jmp
ret
dec
xor
in
push
and
and
imul
dec
xchg
retf
xor
pop
leave
ins
into
jbe
push
pop
xor
dec
rcr
mov
retf
xchg
ds
jo
cmp
popf
out
mov
lock
sub
movs
add
jmp
sbb
dec
das
(bad)
std
data16
ds
gs
sbb
imul
bound
mov
inc
cmp
cmps
enter
stos
test
push
out
fs
cs
movs
push
jge
pop
or
cli
(bad)
scas
outs
call
and
push
and
pop
cmp
jns
or
xor
sub
pop
cmps
hlt
mov
xor
push
cmp
inc
outs
mov
imul
pop
scas
adc
mov
jge
mov
(bad)
fcmovnb
clc
add
jmp
adc
add
sub
daa
nop
int
(bad)
push
inc
ret
inc
jno
lahf
xchg
adc
dec
xor
jns
(bad)
out
in
xchg
xchg
jns
dec
adc
lea
not
push
sar
sub
or
ret
mov
xchg
mov
pop
das
jae
jae
push
add
dec
jmp
loopne
xchg
call
cld
adc
jmp
fdivr
out
pop
ret
out
dec
xor
jbe
les
sbb
mov
sbb
and
movs
mov
stos
ror
cld
test
pop
sub
xor
fmul
dec
in
push
dec
cmp
sbb
push
xchg
retf
jl
adc
pop
mov
rcr
cli
mov
cwde
or
movs
sub
or
addr16
push
dec
xor
or
sub
lds
(bad)
int
leave
cmps
jnp
xor
scas
or
test
fsubr
jnp
or
jmp
js
pop
sub
cmp
shl
ds
adc
sbb
sub
js
sbb
ins
inc
inc
js
test
or
jnp
inc
shl
dec
loope
jo
pop
mov
cmp
dec
jle
add
sbb
adc
movs
xor
and
jp
dec
sbb
lahf
xor
ja
cmp
lds
xor
or
loope
cmps
test
push
jmp
dec
sub
pop
adc
and
sar
pop
int
cmp
adc
mov
pop
fsubr
icebp
test
cmp
add
dec
or
jae
add
ret
jmp
push
inc
cmps
popf
push
mov
jp
aaa
xchg
mov
mov
ins
or
leave
jne
inc
rcr
shl
bound
lahf
daa
mul
arpl
inc
fs
cli
je
or
leave
popa
imul
mov
out
js
push
push
retf
aam
jl
out
fcom
pop
cmp
retf
stos
dec
adc
nop
jae
dec
ins
cmps
in
leave
div
in
rcl
stos
int3
adc
shl
push
sbb
jbe
and
mov
sbb
mov
(bad)
es
jecxz
cmps
loopne
cdq
jno
cmp
loop
sahf
lock
or
inc
fisttp
adc
bound
pushf
sbb
fnstcw
mov
jmp
mov
inc
call
cwde
inc
hlt
sbb
ins
jmp
and
movs
jno
into
icebp
or
(bad)
int
mov
mov
inc
cmp
jecxz
in
rcr
xchg
sub
mov
jb
fidiv
loop
xor
push
and
lea
push
push
and
jg
pop
nop
xor
sub
sbb
and
add
fsubr
shl
cmp
pop
inc
inc
loop
stc
daa
test
stos
sub
in
sbb
stos
mov
add
fcomip
xor
aas
movs
push
pushf
jns
mov
arpl
mov
ret
rcl
jl
aam
cmps
jo
mov
out
mov
mov
inc
not
push
mov
mov
iret
add
or
js
sti
(bad)
xchg
(bad)
movs
iret
icebp
inc
jg
fist
inc
or
mov
lea
sbb
(bad)
pop
jo
mov
push
adc
hlt
retf
push
leave
add
int
scas
pop
ret
popa
fidiv
aam
popf
sti
pop
inc
cmp
dec
mov
sbb
add
jle
nop
push
mov
out
cmps
ds
sub
aad
das
sub
pop
imul
lods
mov
fwait
addr16
or
lea
int3
xchg
fisttp
pop
rcl
leave
mov
outs
adc
add
ror
aas
stc
dec
and
xchg
aas
call
xor
cmc
push
leave
sub
scas
mov
jnp
adc
mov
cmp
fwait
mov
aaa
mov
xor
aaa
xchg
and
leave
jecxz
ins
mov
sbb
(bad)
je
inc
sbb
scas
scas
jno
xlat
rol
call
lods
aam
xchg
sbb
cmpxchg
je
jae
mov
repz
mov
mov
jo
jno
jp
(bad)
repz
aad
fcomp
mov
outs
lahf
xchg
add
pop
jecxz
idiv
jae
test
imul
jl
lds
sub
jb
xchg
loopne
pop
call
enter
xchg
stos
loope
gs
mov
jne
jge
retf
jg
add
ja
xchg
sbb
pop
mov
(bad)
aam
les
and
adc
xchg
gs
test
vprotw
mov
lea
pop
scas
in
mov
rcr
out
lods
movs
jmp
mov
or
je
xlat
sbb
mov
pop
adc
out
sub
push
pop
or
cmps
popf
push
sub
gs
popa
rcl
test
and
add
arpl
test
xchg
jno
push
std
daa
mov
sub
cwde
or
test
jb
cld
repz
clc
push
loop
pop
inc
inc
mov
inc
int3
ror
sahf
mov
into
sub
in
sub
pop
movs
js
push
jecxz
shl
aaa
push
add
adc
(bad)
xor
pop
les
sbb
(bad)
xchg
mov
or
pop
jno
shl
cmp
xchg
jl
retf
mov
mov
sbb
and
lods
or
vmovaps
mov
add
out
mov
mov
(bad)
cwde
les
pushf
into
cmp
add
push
or
xor
jnp
movs
retf
jle
jmp
pop
(bad)
xchg
loopne
mov
shl
xor
sbb
arpl
inc
shr
fild
mov
mov
jne
xchg
ror
pop
mov
add
jg
fldenv
lods
adc
retf
adc
shr
dec
retf
and
scas
cwde
add
push
adc
pop
retf
adc
xchg
popf
push
mov
sub
inc
dec
fsub
icebp
inc
pop
out
fdivr
mov
inc
inc
and
or
adc
loope
cli
xlat
aad
shr
cli
in
ret
rep
mov
mov
imul
js
inc
aaa
mov
das
xor
dec
jns
cmp
enter
enter
(bad)
int
push
mov
jmp
test
mov
mov
or
stos
sbb
jo
out
sub
or
es
xchg
mov
jge
shl
gs
push
mov
(bad)
imul
sub
push
mov
adc
lahf
xor
dec
add
adc
adc
or
dec
lods
movs
test
aas
xor
xchg
jns
sbb
mov
and
sub
sbb
pop
in
sub
cmp
in
inc
push
mov
or
mov
xchg
mov
jp
inc
clc
sbb
les
scas
add
push
mov
xchg
add
into
scas
(bad)
scas
xchg
dec
inc
inc
dec
cmps
(bad)
sub
mov
push
std
cld
dec
xchg
mov
dec
jmp
mov
mov
out
xchg
pop
sbb
fcmovb
add
xor
xchg
in
mov
int
dec
jmp
gs
jno
nop
dec
inc
lds
cwde
xchg
mov
cmc
or
aaa
jmp
cmps
ss
adc
pop
jnp
mov
fcmovnu
(bad)
jo
ret
out
and
xchg
in
push
scas
ret
cmps
icebp
inc
cmp
(bad)
es
mov
jne
push
lods
lds
call
xchg
push
test
mov
sahf
push
pusha
pop
sub
jle
icebp
inc
push
(bad)
mov
outs
rol
push
mov
xor
pop
dec
imul
or
stc
in
dec
push
sub
and
xchg
adc
ret
mov
push
stos
dec
inc
loop
lock
test
(bad)
rcl
xor
jb
sahf
push
push
cmps
(bad)
mov
in
xchg
shr
popa
jge
inc
cmc
aas
sub
cmps
xor
xchg
sbb
call
ins
(bad)
sub
pushf
fsub
ret
dec
mov
sbb
adc
push
sbb
jns
out
lahf
test
mov
mov
push
outs
sbb
repnz
jne
jmp
sbb
ret
test
push
cmp
movs
mov
call
imul
inc
dec
cmp
push
add
ret
cmp
xchg
cs
lahf
cdq
mov
push
mov
imul
cmp
loop
ss
push
rcr
std
call
dec
sqrtps
cmp
push
mov
adc
mov
call
lods
addr16
xlat
and
(bad)
pop
cmp
sbb
xchg
int
cmp
sti
pop
mov
ins
sub
rcl
call
add
mov
jmp
cmp
stos
neg
xor
mov
popa
jnp
xor
mov
scas
xor
mov
inc
fld
pushf
nop
adc
mov
in
and
sar
cmps
call
push
enter
sbb
cmp
in
bound
adc
push
mov
push
jae
cmp
retf
jb
jne
mov
mov
daa
nop
or
inc
movs
sbb
push
pop
imul
stos
cmp
shl
out
loopne
jae
inc
mov
pop
pop
aaa
cld
jae
fdivr
test
dec
scas
or
sbb
test
cs
cmps
add
cmps
sti
or
lods
lods
push
test
lods
xlat
push
lods
hlt
mov
jl
add
lahf
arpl
in
retf
push
into
(bad)
loopne
cli
sub
sti
pop
out
cmps
and
cmp
ss
(bad)
ret
xchg
leave
rol
test
loopne
jb
mov
cli
mov
mov
mov
cmp
mov
fsub
mov
xor
sbb
repnz
and
stc
pop
mov
adc
mov
pop
mov
dec
clc
pop
push
shr
scas
jno
adc
push
xchg
or
out
cmps
mov
inc
push
ss
imul
test
and
fmul
lea
cdq
fild
cld
cdq
(bad)
jle
mov
sbb
mov
in
xchg
aas
sbb
gs
ja
in
call
mov
test
mov
clc
or
sub
dec
inc
and
jmp
shl
bound
xchg
lahf
rcl
adc
scas
pop
fwait
cmp
pop
sbb
dec
sbb
or
push
inc
(bad)
pop
sub
retf
push
sbb
aas
outs
mov
in
mov
xchg
sub
sub
sahf
inc
pop
retf
push
jmp
ins
test
cs
int3
jns
xchg
test
das
jbe
hlt
(bad)
rol
push
xor
cmp
mov
cmp
cmc
hlt
inc
adc
mov
jae
call
pop
icebp
sub
repnz
rcr
and
data16
mov
fimul
mov
scas
mov
loope
je
lahf
mov
fcomp
mov
or
jnp
repnz
out
push
sbb
(bad)
hlt
adc
rcl
(bad)
cmp
xchg
mov
(bad)
addr16
mov
int3
imul
shl
in
test
jae
movs
test
les
and
mov
jo
xchg
ins
jp
sub
into
pop
retf
mov
pushf
or
sbb
adc
repz
outs
pop
or
ret
fsubr
xchg
mov
daa
add
mov
mov
(bad)
retf
dec
sbb
jbe
push
(bad)
adc
jbe
lahf
mov
pop
lea
mov
mov
xchg
out
pop
hlt
push
sar
cdq
daa
mov
xor
call
(bad)
shl
shr
jae
mov
jmp
xor
test
std
dec
dec
aas
adc
push
mov
or
into
jge
cmp
jne
in
mov
int
test
ins
inc
dec
xor
inc
add
leave
aad
scas
xor
es
jae
or
jle
ins
sub
adc
inc
jne
ret
hlt
dec
call
sar
cld
dec
repnz
leave
pop
cdq
dec
popa
mov
sbb
out
xchg
adc
stos
ret
jle
ror
sbb
cld
or
mov
sbb
(bad)
idiv
(bad)
jns
fmul
lods
push
cmp
mov
xlat
push
mov
push
outs
jbe
mov
test
(bad)
and
int
loope
cs
sbb
js
inc
out
xor
push
std
jno
and
in
bound
cmp
retf
mov
and
sub
push
and
jmp
rcr
sbb
jb
icebp
or
xor
cmp
gs
sub
adc
xchg
jge
dec
mov
lock
sub
mov
fiadd
sar
push
fs
push
lea
mov
cdq
out
outs
loop
inc
shl
idiv
jno
pop
dec
leave
fldcw
pop
sbb
imul
rol
fstp
add
int
xchg
(bad)
push
inc
sahf
loopne
enter
in
out
pop
inc
push
push
enter
int
popa
sbb
ds
lahf
scas
add
xor
aam
call
mov
inc
sub
mov
je
inc
and
and
clc
(bad)
retf
adc
adc
mov
xchg
jle
out
leave
mov
enter
mov
das
pop
adc
out
pop
mov
test
fadd
and
fwait
jl
aam
leave
mov
jb
movs
ja
in
repnz
xlat
pop
addr16
jl
repz
jmp
hlt
mov
inc
(bad)
or
(bad)
mov
and
or
mov
mov
or
retf
and
fsub
mov
enter
xchg
stos
dec
(bad)
mov
jmp
shr
rcr
cwde
or
sbb
icebp
jmp
(bad)
sbb
adc
inc
int
scas
fwait
pop
addr16
pop
xlat
cmp
adc
push
icebp
mov
aas
sub
popw
pop
out
fild
cmp
adc
sub
pop
inc
cs
jl
iret
pop
gs
lock
pop
xor
js
sbb
sbb
xchg
dec
mov
sbb
inc
add
xchg
pop
inc
push
mov
call
xchg
xor
popa
pop
pop
xlat
ins
setle
jmp
xor
sub
(bad)
jmp
fnsave
ret
aam
inc
jmp
mov
xor
push
and
xor
inc
sub
jns
jo
mov
out
sbb
int
sti
push
pop
stc
cmp
add
std
mov
mov
cli
inc
mov
dec
mov
ds
fmul
scas
or
loope
(bad)
push
outs
aaa
push
sub
arpl
sub
and
add
mov
cdq
mov
jmp
inc
add
bound
(bad)
push
sbb
jb
int
and
lea
dec
mov
and
retf
enter
loope
data16
xor
push
outs
sub
and
inc
and
mov
dec
(bad)
xchg
shr
adc
call
xor
xchg
pop
(bad)
jge
xor
mov
jecxz
sbb
loop
adc
sub
adc
cmp
xor
popa
and
cmp
jg
cmp
inc
(bad)
jle
retf
add
call
push
cmp
add
sub
inc
hlt
xchg
sar
(bad)
data16
cli
jle
mov
pop
adc
cdq
xchg
test
fs
and
mov
es
jno
xor
mov
out
pop
jmp
ja
dec
sti
pushf
push
or
movs
xor
icebp
pop
repnz
jl
jne
jl
xlat
jae
cli
(bad)
test
dec
loopne
shl
add
(bad)
cmps
ror
adc
imul
repnz
stos
push
ins
xlat
bound
hlt
rol
adc
xor
mov
and
mov
mov
mov
ror
push
and
inc
mov
fstp
pop
or
inc
pop
add
inc
xchg
sub
mov
jno
mov
neg
repz
nop
int
pushf
jle
xchg
dec
or
outs
rol
sub
enter
push
(bad)
bound
out
mov
sub
xchg
aaa
ret
push
pop
mov
cmp
leave
aaa
xor
push
pusha
cmps
jp
lahf
add
mov
push
jno
adc
outs
retf
repz
push
popa
pop
(bad)
leave
cwde
dec
or
push
jge
stc
xor
mov
rol
ds
std
push
cld
sahf
stc
inc
outs
add
fmul
fisubr
imul
cli
jecxz
jmp
mov
jg
cmc
(bad)
lods
push
out
adc
scas
mov
cs
std
lock
sbb
xchg
pop
fimul
popf
addr16
xlat
and
push
xlat
les
aad
neg
ret
daa
aam
mov
push
sub
or
pop
adc
aad
sub
call
retf
adc
dec
imul
push
(bad)
jmp
mov
sbb
jecxz
mov
(bad)
loope
and
and
out
cs
sbb
adc
and
imul
xlat
xor
xor
mov
fldenv
mov
imul
or
leave
xor
js
jecxz
ja
cmp
push
outs
mov
sahf
(bad)
stos
xchg
sub
dec
psrld
xchg
jns
pmovmskb
mov
ins
and
mov
out
mov
add
or
xchg
jmp
inc
mov
cli
retf
mov
push
push
push
mov
fsub
cmp
jg
repnz
mov
push
call
pushf
dec
int
sti
(bad)
mov
arpl
sub
xchg
add
inc
jp
neg
add
mov
fsubr
inc
data16
dec
pop
fmul
aas
iret
or
movs
push
repnz
lea
call
retf
push
shr
lods
loop
stc
fs
jl
and
(bad)
das
mov
xchg
inc
repz
loopne
loop
mov
mov
dec
push
jns
arpl
mov
dec
jge
jl
inc
iret
test
add
xchg
pop
jle
aad
mov
xchg
paddb
add
push
dec
retf
into
or
push
leave
pop
add
rcr
jmp
(bad)
int3
ja
and
and
ficomp
out
in
or
mov
jl
rol
stos
sahf
push
imul
push
jbe
mov
sub
xor
clc
je
push
mov
repz
(bad)
call
jle
pop
xor
popa
sbb
ficom
ins
adc
jo
xor
loopne
jbe
sahf
jmp
cmps
ja
jno
cmp
or
retf
mov
fsub
out
fwait
sbb
fcmovnbe
mov
std
js
(bad)
ror
gs
stos
mov
movs
sub
jo
in
jecxz
xchg
aas
jecxz
or
ss
das
mov
inc
call
test
lds
lea
outs
sbb
sub
and
xor
mov
out
lock
(bad)
mov
fistp
xlat
ret
sub
and
(bad)
sub
jne
push
es
(bad)
jmp
lock
in
stc
xor
iret
xor
xchg
xchg
pop
movlps
mov
(bad)
mov
test
jbe
mov
test
mov
loope
mov
retf
and
pusha
dec
mov
lods
test
mov
mov
fxch
adc
xchg
push
cld
inc
sbb
(bad)
js
loop
retf
jae
out
mov
cmp
sbb
mov
and
fidiv
mov
sub
sbb
mov
mov
dec
mov
sub
pop
je
inc
je
add
xchg
pop
mov
rol
push
adc
out
push
aas
or
repnz
ds
add
adc
ins
dec
sub
pushf
or
lods
xor
jb
xchg
mov
loop
cmp
pusha
adc
push
pop
lahf
gs
sbb
icebp
mov
movs
mov
push
or
xchg
and
mov
rol
push
mov
fbld
xor
pop
jne
(bad)
clc
or
dec
enter
out
stc
jmp
cmp
push
inc
dec
jl
stos
fyl2x
(bad)
jo
ss
sbb
dec
imul
test
jb
sub
mov
aad
mov
and
out
add
xchg
in
leave
(bad)
arpl
(bad)
or
adc
hlt
stc
mov
xor
push
ror
out
sbb
xchg
pushf
inc
mov
pop
mov
dec
int
mov
fxam
mov
in
sub
test
cmps
bound
loopne
int
out
add
adc
das
repz
loopne
stos
sub
pop
push
push
sbb
neg
sub
cmps
in
jb
mov
(bad)
test
in
aas
mov
in
pop
arpl
in
lea
mov
mov
cmp
and
sbb
push
data16
pop
cmp
xchg
hlt
fisub
or
cmp
or
lods
mov
popf
aas
mov
mov
cmps
mov
dec
cmc
xor
mov
mov
sbb
jmp
lods
cs
mov
sti
or
repz
inc
in
mov
(bad)
fld
push
jmp
jb
mov
mov
mov
(bad)
outs
xchg
xor
dec
into
dec
in
dec
je
mov
and
cmp
jge
std
(bad)
add
jmp
sub
mov
fnstcw
aad
xor
inc
xor
dec
xlat
(bad)
ins
in
adc
pop
xor
cmp
adc
and
sub
js
jg
pop
shl
das
cmc
dec
xor
or
and
retf
aaa
add
sub
jp
in
retf
loop
loope
and
movs
les
xchg
test
mov
mov
pop
icebp
sub
loopne
cwde
jo
push
loop
js
pop
fdivrp
gs
not
aam
mov
scas
cmps
and
jle
call
xor
sub
jmp
icebp
enter
movs
aam
retf
and
push
mov
pop
sub
jmp
jmp
mov
idiv
jmp
int
pop
in
sbb
jns
rol
jnp
dec
jns
or
and
fwait
nop
adc
add
gs
ret
cld
out
and
xchg
cmp
sbb
in
mov
(bad)
pop
rol
jge
icebp
mul
jns
cmps
movs
iret
xor
add
mov
icebp
push
xchg
repnz
dec
jle
or
add
test
mov
mov
icebp
jmp
xchg
and
xor
push
cs
ja
out
jb
cmp
mov
push
fidivr
cmps
lock
push
outs
xchg
cmc
jl
sti
dec
es
lods
out
repnz
nop
jno
in
rcl
sbb
aaa
or
push
add
mov
sbb
dec
repz
inc
out
mov
pop
mov
jne
cmp
loope
test
add
and
inc
outs
outs
mov
mov
cwde
int3
dec
push
push
lds
adc
imul
jle
xlat
push
and
add
imul
add
xor
xor
inc
leave
xchg
xor
shl
add
das
sahf
pop
movs
inc
imul
jecxz
sar
repnz
sti
sub
push
ss
xchg
loopne
arpl
or
lahf
inc
mov
bnd
js
adc
pop
std
cs
jne
movs
(bad)
enter
dec
cdq
in
leave
popa
shr
jmp
call
ja
stos
in
dec
fcom
mov
fs
xlat
js
sbb
lock
xchg
mov
inc
cwde
adc
es
bound
jg
dec
and
inc
or
jne
nop
iret
rcl
scas
(bad)
mov
jo
push
enter
cs
call
mov
fbstp
jmp
imul
cmps
hlt
jecxz
nop
aaa
iret
jb
push
loopne
fstp
repz
call
shr
xchg
sub
xchg
xor
dec
adc
pop
mov
repnz
dec
cmp
pop
arpl
sar
xchg
push
jnp
(bad)
ins
push
and
imul
mov
shl
(bad)
xor
popa
scas
scas
adc
(bad)
xor
les
clc
mov
ins
add
cwde
or
mov
cmp
push
cmp
hlt
ins
sbb
neg
(bad)
and
mov
mov
mov
cdq
inc
adc
pop
imul
clc
popf
jb
bound
retf
cmp
nop
into
repnz
or
sub
jle
retf
sbb
mov
aam
cmp
popa
inc
xor
lods
cmp
dec
xchg
adc
adc
data16
lock
adc
outs
call
inc
fsub
pop
stos
iret
push
jbe
mov
mov
loop
mov
scas
ins
add
cs
push
jnp
or
xchg
jae
in
and
jnp
out
inc
lds
cwde
test
xlat
hlt
lock
ins
lds
dec
dec
test
pop
pop
fsubr
and
outs
cwde
add
jge
sub
sti
in
and
inc
push
inc
ins
xor
fidiv
or
ja
and
cmps
stos
pop
rcl
mov
inc
stos
jmp
jne
jb
cwde
jo
jle
mov
cmps
dec
rcr
enter
sbb
retf
pop
iret
stos
sahf
in
or
ins
shl
inc
or
dec
repnz
out
stos
xor
(bad)
push
ror
dec
mov
xor
nop
daa
cs
push
or
xchg
adc
dec
add
call
pop
ins
mov
cmps
cmp
pop
stos
jmp
out
lahf
sti
fsubr
mov
or
fist
jno
add
jp
das
ins
pop
rol
in
addr16
movs
mov
jbe
retf
fidivr
push
xchg
shl
es
sbb
cmp
xchg
in
cmps
add
shl
jecxz
out
and
pop
mov
std
push
mov
and
movs
dec
pop
outs
(bad)
mov
add
ficomp
cli
in
sar
clc
scas
out
pop
jmp
inc
jo
cld
or
pop
rol
pop
call
je
imul
scas
repnz
jb
daa
adc
mov
fimul
pop
xchg
jp
ins
(bad)
jmp
mov
out
cmp
fcmovbe
pop
clc
mov
jl
out
pop
push
mov
xchg
ins
jbe
mov
pop
mov
xor
inc
int
mov
and
dec
mov
sbb
jl
pop
push
test
mov
mov
adc
aam
xchg
ret
in
adc
mov
cmp
push
in
(bad)
scas
dec
mov
cdq
aaa
(bad)
fs
mov
pushf
frstor
sbb
and
or
cmp
add
jecxz
pop
or
icebp
popf
mov
(bad)
mov
mov
das
aaa
enter
movs
xchg
xchg
xor
and
push
cmc
sbb
aam
aaa
dec
mov
or
into
test
jp
cli
xchg
sub
repz
mov
fwait
pop
pop
mov
ror
push
cmp
vpunpckhqdq
clc
jecxz
mov
int3
sbb
push
cwde
push
and
mov
mov
into
rcl
jge
mov
cli
fnstenv
fistp
xchg
or
mov
pusha
mov
lock
daa
push
aad
mov
aad
cmp
mov
sar
mov
pushf
retf
popa
shr
(bad)
xor
jb
sbb
cmp
and
xchg
xchg
ror
and
jnp
cmp
sub
into
add
cmp
popf
imul
pop
cmp
fidiv
mov
repz
dec
cmp
es
push
int3
pop
or
push
mov
push
int
add
loope
call
and
sbb
mov
jb
mov
dec
mov
scas
or
jmp
cmp
fild
inc
imul
ins
mov
add
push
fistp
cmp
lods
cmp
lods
and
mov
jecxz
push
push
dec
addr16
cld
adc
jmp
into
inc
fwait
mov
ins
push
add
cmps
hlt
dec
dec
fild
push
push
iret
cmp
xchg
test
jecxz
adc
enter
dec
pop
ins
adc
adc
ins
sahf
inc
sub
in
jbe
mov
cmps
sbb
stos
mov
xchg
lods
sub
scas
les
push
ss
(bad)
loop
cli
sbb
dec
or
mov
inc
jl
jge
fdivr
fst
or
daa
and
inc
cmps
daa
or
push
loop
adc
mov
pop
push
fiadd
sar
pop
mov
test
leave
ret
retf
or
push
mul
imul
adc
clc
test
gs
std
es
jae
mov
fs
inc
jp
pop
fidiv
mov
xchg
jb
and
retf
les
out
das
jo
dec
xchg
inc
(bad)
xor
adc
fsub
cmp
mov
repnz
cmps
das
mov
pop
xchg
mov
xor
or
lea
push
push
pop
push
or
es
inc
(bad)
retf
or
push
push
adc
xchg
add
push
imul
mov
jecxz
std
mov
movs
es
mov
das
mov
sbb
sbb
cmp
loop
icebp
int
push
pop
je
in
push
add
and
aas
cli
push
inc
xor
pusha
fwait
mov
enter
or
fidivr
mov
push
fmulp
inc
daa
call
xlat
mov
test
and
iret
xor
or
mov
sub
sbb
mov
jmp
jg
jg
and
xlat
test
sbb
xor
lea
adc
test
mov
lods
enter
mov
mov
cmp
stos
aaa
dec
jnp
inc
push
xchg
scas
fwait
sub
mov
jne
cwde
add
cmp
push
adc
scas
mov
(bad)
fsubr
retf
inc
adc
and
push
pop
stos
add
pop
sub
dec
fld
loop
sub
and
int
jns
(bad)
je
jmp
and
xchg
rol
and
or
loop
cmp
ret
adc
and
das
push
shl
imul
lods
je
fild
outs
repz
pop
bound
mov
dec
mov
(bad)
jmp
jnp
out
mov
inc
in
ins
add
stc
jecxz
sbb
add
bound
pop
scas
fldenv
aaa
sub
(bad)
pop
push
add
pop
test
popf
push
mov
not
loopne
js
jge
pop
push
ss
aad
leave
sbb
and
out
sub
std
ds
sbb
mov
test
add
or
fs
adc
jge
neg
test
outs
fldcw
adc
xor
inc
xlat
inc
xchg
popf
test
push
fiadd
xchg
loopne
aad
lea
mov
arpl
loop
mov
(bad)
call
clc
dec
mov
inc
mov
icebp
or
imul
les
xor
push
cmc
xor
pop
aaa
lahf
loope
es
movs
dec
pop
outs
mov
fistp
push
mov
mov
adc
or
jge
mov
sub
and
push
mov
mov
cmp
outs
rcl
cmp
xchg
push
xchg
xchg
and
in
gs
and
inc
je
cmp
fadd
add
popf
inc
into
xor
cld
(bad)
fiadd
ins
or
push
xor
jg
add
jp
ss
pop
xchg
shl
shr
cld
xchg
loope
jno
iret
movs
adc
xchg
clc
jno
ret
mov
xchg
sti
dec
cmp
sub
retf
icebp
mov
lods
fbld
dec
dec
aam
lods
adc
pushf
lahf
fstp
and
daa
dec
femms
jl
call
(bad)
sbb
xlat
mov
loope
int
in
pop
frstor
xchg
cmp
xchg
out
call
jmp
mov
jmp
or
dec
push
ss
repz
gs
jp
adc
inc
and
jge
jbe
xor
jo
jmp
(bad)
into
aaa
jl
mov
cmp
push
outs
mov
inc
scas
push
cwde
out
inc
clc
lock
and
in
in
mov
xchg
add
mov
int
mov
sbb
mov
cmp
lea
pop
mov
es
jp
sbb
pushf
not
or
mov
fldlg2
lds
retf
or
or
fdivr
mov
daa
mov
movs
lods
cmps
sbb
inc
jns
pop
inc
xor
jp
scas
cmp
push
rol
retf
push
daa
stos
lods
cmp
fisubr
mov
pusha
mov
loopne
leave
mov
sub
inc
jbe
in
mov
mov
push
lahf
inc
mov
push
je
in
fcom
lds
stos
rol
inc
adc
mov
mov
mov
outs
xor
add
add
and
jl
jl
leave
fs
pop
sbb
dec
mov
cmp
(bad)
pop
jge
sub
inc
fsubr
mov
(bad)
shl
fs
cs
(bad)
scas
sub
mov
xchg
aad
mov
push
pop
repnz
add
xor
adc
mov
imul
pusha
ret
mov
and
dec
mov
sahf
pushf
and
int
push
add
lods
repz
(bad)
pop
xor
sbb
add
arpl
push
dec
sbb
into
aam
xchg
in
jmp
inc
fcmovb
inc
pop
xchg
addr16
dec
dec
fstp
sbb
psrld
mov
not
mov
popf
push
es
pop
aad
xchg
pushf
fs
das
scas
xchg
sub
sub
add
daa
mov
aam
iret
mov
inc
in
and
rol
mov
sub
sub
mov
push
xor
cmp
mov
or
jp
adc
pop
cdq
std
sbb
push
call
cli
fwait
outs
push
cmp
push
cli
fld
jns
sbb
inc
pop
clc
les
mov
and
verw
xor
push
fs
mov
dec
icebp
fs
test
push
mov
pop
movs
mov
pop
adc
call
lods
cmp
xor
xor
inc
loop
cmp
mov
xor
out
jecxz
sbb
push
sahf
popa
arpl
popa
jo
or
xchg
retf
das
lock
push
or
push
adc
leave
lods
repnz
movs
idiv
iret
sub
dec
jne
dec
dec
test
jp
lahf
lods
push
inc
out
add
dec
pop
dec
repz
mov
int3
or
call
int
jno
outs
sub
add
mov
mov
xor
sbb
(bad)
adc
out
cmp
sti
jnp
sub
sub
aaa
sbb
(bad)
push
inc
jl
xor
outs
loope
mov
sub
scas
jp
test
lahf
jns
sub
imul
cmp
jb
dec
sbb
push
rcr
stos
inc
test
pop
or
fnstenv
jp
or
and
repz
xchg
popf
lods
pop
clc
jle
cmp
rol
jecxz
out
mov
(bad)
std
cmp
sahf
sti
or
mov
stos
push
push
push
loope
and
inc
fucomp
icebp
jg
sub
xchg
adc
cmp
jbe
sar
shl
or
mov
lahf
(bad)
cld
or
rcl
aam
jle
mov
(bad)
dec
mov
mov
jbe
out
mov
fadd
xchg
push
ins
sbb
jnp
mov
xchg
in
test
imul
fwait
mov
outs
add
cmp
loop
mov
pop
jbe
in
test
test
xchg
sub
xor
in
daa
adc
push
xchg
mov
shl
fnstcw
pop
cmps
int3
sbb
push
scas
mov
inc
dec
jmp
std
sbb
jl
pop
add
dec
ds
jg
xchg
mov
dec
push
xchg
or
icebp
mov
jl
add
xchg
fbld
clc
adc
sub
sbb
xchg
cld
stos
xchg
fdivr
dec
sub
movs
inc
retf
popf
out
rcr
in
aam
xor
jmp
ins
pop
mov
movs
mov
mov
ret
enter
and
loope
mov
fisttp
mov
imul
ins
adc
add
mov
jbe
into
rol
jl
stos
dec
fbstp
mov
mov
loope
dec
int3
das
mov
out
mov
dec
fidivr
in
mov
pop
ror
push
pop
jno
cld
mov
and
test
mov
or
rcl
pop
and
jno
cmp
icebp
(bad)
retf
sbb
test
sbb
xor
fist
mov
in
cli
retf
cmp
jle
ins
ret
outs
and
fs
add
dec
call
dec
aas
les
cmp
fistp
xchg
popa
inc
cmps
jle
pop
pop
xchg
cmps
and
sti
mov
out
cs
cmp
sub
inc
push
adc
sbb
jae
mov
sub
cmps
xchg
cmp
cmp
cmp
in
push
push
ficom
arpl
dec
test
mov
mov
jg
or
jp
dec
jbe
enter
mov
sar
add
mov
jecxz
inc
mov
xchg
cmp
xchg
out
jp
adc
repnz
shl
in
icebp
push
mov
stos
jl
mov
xchg
pop
ror
addr16
int
ja
adc
inc
stc
test
xchg
mov
mov
pop
pop
call
mov
adc
mov
(bad)
scas
lea
ret
test
mov
shl
xor
arpl
xor
add
sub
jge
sbb
call
sub
sub
clc
push
push
lods
dec
call
stos
out
icebp
mov
or
inc
or
in
xor
mov
out
push
pop
out
js
bound
inc
lahf
mov
xor
fsubr
in
inc
dec
js
mov
or
mov
push
(bad)
in
mov
and
mov
inc
(bad)
repnz
repnz
jnp
rdtsc
aad
stos
xchg
retw
shl
mov
mov
dec
push
or
jo
jle
push
outs
mov
(bad)
daa
sub
fdivr
dec
sahf
rcl
jb
repnz
out
and
pop
(bad)
scas
xchg
mov
fcomp
xor
jb
lods
inc
loop
outs
(bad)
xchg
mov
mov
sbb
mov
cs
iret
mul
sbb
outs
push
mov
test
lds
push
aad
sub
mov
outs
dec
mov
dec
and
xchg
(bad)
cwde
aas
repz
xor
pop
dec
mov
cmps
and
int
aas
call
dec
scas
test
push
lock
xlat
xchg
rcr
push
xchg
inc
dec
pop
cmp
pop
in
lds
fs
movs
shl
aaa
xor
dec
outs
and
aas
icebp
jecxz
push
inc
rol
int
pop
fcomi
lock
sahf
repnz
and
cmps
out
das
dec
inc
mov
push
xchg
jbe
dec
xor
mov
ss
clc
(bad)
rcr
cmp
ffree
lods
ficomp
pop
scas
ja
loop
fbstp
lds
sub
scas
in
mov
adc
cmp
inc
sti
jg
ss
adc
rol
in
jp
mov
lods
add
xor
clc
inc
or
in
adc
xor
in
scas
mov
sub
pusha
pop
fstp
sar
test
pop
pop
mov
or
xchg
xor
xchg
push
pop
dec
or
call
or
add
mov
add
jp
xchg
loopne
mov
test
scas
xor
aaa
js
leave
loopne
aaa
xor
jns
loop
and
test
aaa
jb
sti
mov
test
call
(bad)
fistp
cdq
push
nop
mov
data16
xchg
dec
loope
gs
out
and
shr
divps
sbb
inc
aam
shl
data16
pop
inc
shl
sub
clc
lock
test
popf
and
loope
push
sub
jnp
call
addr16
mov
jp
mov
pusha
js
pop
aas
add
mov
add
sbb
cmp
ds
retf
jno
sti
stos
pushf
in
movs
mov
mov
add
cli
pop
xor
xor
leave
outs
es
push
pop
repz
in
mov
add
jbe
xor
and
stc
pop
and
fisub
lock
cli
xchg
pop
xor
add
mov
inc
stos
xchg
out
enter
into
pusha
inc
fild
call
lock
xlat
pop
and
mov
pusha
jmp
ds
ror
imul
stos
inc
xchg
pop
pop
pop
mov
call
mov
mov
inc
lea
dec
lahf
mov
pop
cld
sbb
sub
fmulp
sbb
push
mov
pop
paddusb
popa
sub
jmp
leave
sbb
rol
jecxz
fstp
in
xchg
cmp
jns
cwde
push
xchg
int3
adc
aas
ficomp
(bad)
stc
xchg
aam
loope
aad
sti
and
test
test
shr
ins
arpl
xchg
xchg
mov
sar
push
jecxz
jne
stc
hlt
cs
nop
mov
loope
mov
int3
movs
fistp
(bad)
aam
or
cmps
add
leave
ret
sub
push
lds
sbb
vpsubb
jno
adc
(bad)
jmp
movs
sub
sar
in
rcr
cld
or
xchg
iret
loop
fbld
sub
add
mov
(bad)
inc
(bad)
aad
jge
inc
ins
xor
aaa
xor
shl
sbb
jb
jmp
cmp
or
mul
dec
jno
idiv
cmps
jecxz
addr16
ja
in
jecxz
sbb
xchg
mov
sbb
dec
xchg
xchg
enter
add
adc
lds
ret
mov
inc
out
and
xor
jmp
fistp
xchg
in
xor
xchg
retf
gs
xor
or
dec
inc
fnstsw
mov
iret
fucomp
lds
in
pop
cmc
bound
sub
mov
push
push
and
add
push
xor
ret
shr
repz
lods
call
ds
not
cmp
dec
push
dec
dec
stos
sub
sbb
nop
fiadd
mov
cmps
jmp
dec
mov
loopne
jl
push
int3
outs
ins
hlt
pop
xor
jge
fnsave
xor
sub
pop
into
rol
mov
imul
(bad)
jp
in
inc
mov
je
cmp
(bad)
pop
mov
fs
mov
das
mov
aaa
xchg
es
das
outs
or
(bad)
mov
iret
dec
loop
xor
dec
adc
aaa
(bad)
shl
fst
fwait
add
mov
inc
dec
mov
jns
lds
out
ret
enter
push
jp
inc
xchg
stos
sub
arpl
inc
std
cmp
loope
movs
jmp
(bad)
pop
adc
stos
mov
dec
shl
icebp
lock
fwait
mov
jecxz
neg
test
mov
fcomi
stos
fst
idiv
sbb
lods
or
sub
lods
fcom
xchg
popw
fldcw
test
xor
jnp
popa
sbb
or
mov
xchg
push
cwde
sub
pushf
dec
xor
cdq
push
js
xchg
push
pop
pop
and
enter
xor
cmp
aam
(bad)
out
dec
push
pop
mov
inc
jge
movs
inc
push
cwde
mov
mov
sbb
mov
cld
icebp
jl
push
rol
rep
dec
sbb
popa
test
xchg
call
dec
and
int
mov
es
or
nop
push
dec
fiadd
inc
pop
push
out
jecxz
outs
mov
push
mov
fwait
xor
mov
pop
adc
mov
idiv
sub
cmc
pop
pop
fisttp
xchg
dec
sub
dec
xchg
xor
sub
add
sahf
and
movs
sbb
sbb
lods
push
sbb
int
xchg
cmps
xor
jle
das
xchg
cmps
xchg
mov
sahf
outs
outs
xlat
int
xchg
xor
cmp
bound
retf
outs
sbb
sahf
js
add
adc
xchg
jbe
cdq
popf
xchg
fld
xchg
cmp
les
pushf
ror
or
aam
cdq
in
call
jp
push
adc
sahf
mov
xor
cmp
or
call
sub
pop
pop
push
inc
adc
mov
dec
and
xchg
inc
cmps
popf
mov
idiv
js
sar
bound
pop
sbb
or
and
sbb
or
sahf
test
mul
and
(bad)
mov
mov
icebp
ss
call
mov
movs
or
add
out
lods
jb
sub
out
xacquire
fucomp
adc
pop
mov
pop
mov
aaa
dec
dec
sbb
enter
inc
mov
sbb
pop
mov
out
push
jno
jle
imul
in
mov
xor
shl
aaa
adc
cmp
sahf
loop
jnp
xor
mov
clc
sbb
pop
add
push
retf
pusha
sbb
sahf
outs
push
mov
dec
xor
ret
xor
sti
mov
xor
xor
jmp
lods
push
add
hlt
sbb
into
dec
jmp
cmp
mov
xor
neg
xchg
sub
mov
out
add
das
fcom
add
into
mov
jmp
or
xchg
ret
mov
sbb
out
cli
adc
or
cmp
scas
dec
jmp
xchg
jns
popa
and
ja
imul
add
push
test
add
call
rcl
es
stc
outs
and
fmul
test
inc
repnz
xchg
lock
(bad)
xor
fstp
adc
stos
mov
cld
(bad)
or
inc
xor
ret
pop
mov
push
cld
sbb
xor
sar
scas
lock
dec
adc
mov
ficom
sub
jae
es
cmp
push
pop
mov
push
push
sub
xchg
sar
(bad)
jb
imul
sti
mov
fisub
push
jecxz
dec
fstp
rcl
fsubr
mov
fstp
lds
dec
mov
pushf
mov
es
jge
xchg
(bad)
xor
cmps
pop
out
outs
popf
cmp
test
repz
sub
mov
enter
subps
jo
imul
repz
cdq
or
cmp
mov
sbb
pop
xlat
movs
in
adc
ds
in
pop
mov
xor
mov
jmp
mov
pop
sbb
add
daa
lds
mov
rcl
cmp
mov
sub
ins
xchg
out
fdivr
(bad)
dec
ret
aaa
fild
pop
retf
mov
lods
mov
mov
enter
icebp
imul
pop
ins
lds
icebp
(bad)
cmps
sbb
pop
push
mov
sti
or
retf
mov
rol
fistp
imul
cs
mov
ins
xlat
push
dec
cwde
sbb
cmps
mov
bound
call
mov
xchg
xchg
adc
push
xchg
fsubrp
je
out
sbb
fadd
into
or
test
xchg
xor
out
xchg
loope
sbb
(bad)
push
and
sbb
daa
xchg
in
mov
fisttp
bound
lds
xor
je
out
push
leave
or
leave
pop
(bad)
jne
test
sub
xor
mov
outs
adc
out
(bad)
es
cmp
sbb
jnp
push
cwde
add
dec
ja
jo
sbb
sahf
sahf
add
push
mov
dec
out
mov
movs
sahf
mov
sub
(bad)
push
mov
in
mov
jge
add
mov
rcr
mov
pop
or
and
hlt
pop
push
ja
mov
lsl
cmps
push
sbb
adc
frstor
sub
std
xchg
xor
addr16
adc
sub
jmp
imul
xor
sahf
loop
xor
pop
add
mov
mov
dec
not
mov
sbb
dec
jmp
mov
jne
(bad)
jmp
in
xchg
inc
inc
stos
xor
push
xchg
fnsave
cmp
mov
sub
popf
mov
pushf
sbb
rcl
xchg
stos
sub
xchg
clc
out
sbb
out
mov
cmps
rcr
push
xchg
ror
xchg
pop
ds
sbb
push
test
ja
popa
das
out
mov
pop
fcomi
pop
mov
enter
(bad)
xchg
mov
jo
ins
xchg
mov
inc
cmps
int
jo
xor
push
jg
repnz
call
sub
xchg
xchg
push
cld
into
and
es
mov
adc
push
pop
retf
inc
pusha
ins
jmp
icebp
inc
js
mov
push
inc
sub
pop
sbb
dec
addr16
jmp
je
and
aas
push
and
nop
inc
dec
clc
fsub
sub
sbb
outs
cwde
imul
mov
fadd
jl
add
js
icebp
pop
add
in
xchg
and
aaa
xchg
mov
cs
out
cli
jbe
sub
jl
mov
not
lods
gs
push
sahf
jl
nop
cdq
or
rol
fild
lahf
and
mov
mov
add
imul
stos
mov
mov
mov
pcmpeqd
fs
sub
les
retf
sub
mov
push
sbb
js
outs
jecxz
in
mov
jge
arpl
pop
outs
fnstcw
cmp
sub
popf
pusha
or
stos
iret
cdq
or
in
frstor
es
lods
scas
in
mov
mov
scas
(bad)
mov
cs
sbb
call
arpl
xchg
mov
into
xor
jmp
xor
(bad)
enter
scas
fwait
das
test
cmc
push
pop
(bad)
fisubr
mov
mov
mov
and
push
add
push
push
inc
and
int
cmp
out
adc
js
(bad)
or
xchg
mov
or
test
sub
inc
xchg
adc
outs
cdq
and
mov
push
lods
cmps
push
fst
(bad)
or
cmps
repnz
in
sbb
retf
xchg
cmp
push
(bad)
repnz
rol
mov
imul
push
mov
mov
lods
mov
xor
data16
fstp
retf
icebp
jmp
cmps
in
cmp
pop
adc
sti
add
or
rol
movs
loopne
mov
and
mov
inc
ret
sbb
push
mov
imul
dec
cmp
mov
lahf
pop
(bad)
out
fcom
icebp
jb
stc
adc
arpl
and
cmps
dec
int
test
ficom
jmp
sub
or
enter
cmp
fs
xor
shr
jae
pop
out
sub
xchg
iret
popa
xchg
ret
pusha
xchg
mov
js
sub
hlt
in
push
or
or
fs
dec
and
push
mov
aaa
add
mov
ins
mov
push
mov
into
les
out
sub
cli
sub
jp
(bad)
push
sbb
jmp
inc
(bad)
fcom
out
adc
cmp
sub
or
sub
fnstsw
xchg
(bad)
out
lea
push
mov
and
lods
xchg
fwait
adc
inc
adc
and
mov
data16
cld
mov
jae
lods
xor
xor
ret
mov
cmc
push
lods
mov
cdq
xor
mov
repz
and
adc
(bad)
fwait
dec
and
(bad)
inc
adc
xlat
loop
in
fnstsw
sbb
push
fdiv
div
adc
sti
add
dec
dec
aad
and
hlt
or
inc
leave
ret
imul
cmp
out
sub
mov
cmps
leave
pop
bnd
test
je
lods
cwde
or
xor
xchg
in
push
imul
push
rol
stos
sar
push
fs
mov
daa
std
jo
adc
pop
and
std
ret
inc
mov
mov
aad
scas
mov
test
shr
jle
imul
push
cmp
jle
or
jle
rcr
mov
shl
jb
pop
(bad)
rcr
mov
and
cmp
pop
push
or
aaa
mov
cmp
sub
pop
sbb
xchg
sbb
cmp
dec
(bad)
ja
ins
repnz
pop
sub
enter
pop
lock
push
push
mov
js
mov
sub
mov
dec
inc
in
add
xor
sbb
ins
lods
ds
xlat
ret
loope
xor
push
fmul
sbb
pop
xchg
mov
inc
and
pusha
stc
dec
and
std
repz
ins
xchg
sbb
call
mov
jo
stc
(bad)
jb
gs
and
outs
in
pop
adc
call
lea
lods
test
into
ins
push
outs
pop
xor
pop
cld
or
outs
inc
sbb
arpl
push
movs
jge
sbb
shl
ins
stc
rcr
dec
jno
jmp
push
jnp
push
ror
dec
jp
call
lock
jns
in
inc
js
dec
rcr
ret
out
imul
cs
cmps
les
pop
out
push
xchg
cmp
xor
mov
add
xchg
sub
stc
jnp
pop
aam
mov
xor
into
retf
mov
sbb
add
mov
sahf
es
mov
aas
xchg
push
leave
loop
aaa
mov
int
mov
push
jo
xor
pop
and
cmp
pop
push
in
je
inc
jnp
call
inc
mov
loopne
aad
mov
cli
cli
sbb
shr
std
pop
inc
inc
push
mov
icebp
or
xchg
and
mov
mov
cmps
popa
xlat
push
mov
jb
fild
je
lods
mov
or
aam
add
push
and
jnp
les
pop
pushf
jae
loop
movs
out
stos
and
shl
lods
add
sbb
jecxz
and
js
out
cmps
cdq
inc
mov
out
and
and
cmp
fsubp
sub
jbe
adc
pushf
stos
retf
retf
xchg
ja
inc
shr
sub
dec
xchg
mov
js
test
sub
dec
add
rcl
and
dec
jo
aam
imul
mov
retf
or
sbb
fcomp
mov
or
mov
je
sahf
call
(bad)
xor
add
into
pop
and
or
mov
jle
sbb
retf
packsswb
popa
pop
leave
xchg
out
xchg
and
aaa
inc
sub
mov
push
addr16
pop
clc
push
or
retf
add
sbb
dec
pusha
mov
fwait
pushf
aaa
cdq
xchg
mov
mov
add
and
(bad)
out
mov
add
mov
and
sub
shr
mov
fwait
jo
repnz
imul
popa
test
cs
mov
test
mov
xor
mov
in
imul
adc
test
or
(bad)
mov
and
aad
test
adc
sbb
cdq
jecxz
and
arpl
retf
rcr
add
aam
fs
sahf
inc
(bad)
jbe
jp
jecxz
sbb
sbb
xchg
jo
jno
and
cmp
xor
sahf
call
push
dec
and
test
xchg
cdq
sbb
dec
out
xor
or
xlat
shr
sub
sti
push
rcr
xor
daa
in
or
adc
loope
fcomp
jbe
cld
pushw
mov
cmp
and
pop
sbb
mov
ins
adc
mov
mov
aas
jb
div
gs
aam
gs
push
lods
xor
cmp
les
sbb
div
sbb
fsub
bswap
fistp
scas
pop
sbb
call
lock
pop
dec
imul
es
pop
in
xor
hlt
ja
mov
xor
inc
repnz
fstp
xor
pusha
pop
and
mov
or
movs
xor
ret
push
adc
mov
mov
cmp
sub
fimul
sahf
cld
or
inc
add
mov
data16
pop
and
sbb
movs
cmps
push
scas
pop
mov
in
shr
and
xchg
in
lods
ins
loopne
mov
mov
div
(bad)
sbb
ret
sbb
sbb
jge
(bad)
loope
lea
jo
jecxz
in
es
arpl
xchg
out
stos
sub
adc
lahf
ins
out
xchg
adc
add
dec
xlat
sahf
fsubr
xchg
ja
je
mov
push
and
in
sbb
test
out
cmps
xor
daa
sbb
jl
jae
sbb
xchg
mov
ins
iret
sub
pop
aam
test
pop
mov
inc
sahf
fstp
mov
or
std
mov
(bad)
jae
leave
stos
clc
mov
sbb
jae
enter
outs
mov
loope
sub
xor
mov
(bad)
call
xor
ror
scas
fdivp
repnz
gs
push
js
test
inc
xor
push
outs
gs
hlt
mov
inc
inc
xor
pop
push
mov
pushf
jns
aad
jmp
movs
jmp
test
inc
retf
jl
mov
test
sub
sbb
mov
add
mov
push
cld
mov
dec
sbb
pop
retf
cli
fmul
stos
scas
jl
call
sar
push
mov
pop
dec
dec
sbb
shl
cli
mov
fidiv
fidiv
ins
pop
adc
jb
xor
clc
and
push
mov
loop
fsub
or
inc
outs
xchg
xor
dec
and
cli
push
sub
loopne
arpl
dec
pop
inc
push
into
hlt
cmp
call
or
and
and
scas
int
sub
inc
ja
mov
in
pop
mov
push
aad
lods
jp
shl
imul
test
push
lahf
adc
jo
mov
xchg
xchg
xor
cmp
leave
cmp
jle
cmps
push
(bad)
adc
sub
iret
pop
push
cvtdq2ps
dec
into
mov
xor
ins
mov
xor
fisubr
xlat
ins
inc
pop
cmp
cmp
adc
push
gs
data16
push
ins
xchg
xor
xchg
ror
call
mov
aad
jmp
inc
push
out
stos
jg
add
cmp
rol
test
outs
and
adc
cmps
stc
das
add
(bad)
sub
mov
adc
gs
mov
and
cmp
fld
add
fsubr
mov
push
xchg
cwde
jmp
ret
rcl
mov
xchg
mov
push
sub
dec
loop
test
cmp
call
cmp
jns
(bad)
cli
stc
out
push
sub
movs
mov
call
mov
je
push
enter
sbb
fild
jne
mov
pop
ins
mov
or
inc
cld
mul
xchg
or
hlt
xchg
fmul
ss
inc
fistp
or
sub
aad
pop
test
stc
aaa
pop
shl
popf
xchg
mov
fst
fisttp
dec
fild
xlat
dec
pop
mov
add
fsubp
push
inc
or
popf
xchg
(bad)
cwde
test
popa
mov
add
pop
loop
and
xchg
fdivr
repz
mov
icebp
xor
jae
hlt
fisttp
dec
mov
jmp
mov
lea
jle
outs
add
ds
xchg
cmp
shr
(bad)
cli
sti
fnstenv
jg
push
iret
rcl
pop
call
es
mov
xchg
dec
retf
sub
clc
sbb
cmp
and
rol
adc
mov
xchg
mov
add
(bad)
mov
sar
jmp
pop
jo
ror
adc
nop
or
out
out
add
and
pushf
pop
les
repz
das
les
lods
in
jbe
(bad)
and
cmc
rcl
and
mov
cmp
mov
add
ds
int3
jns
out
out
cli
jle
sub
jns
cmc
and
jge
int
mov
push
rcl
add
retf
push
(bad)
loop
in
aam
pop
xor
push
imul
pop
add
aam
xchg
clc
ret
mov
addr16
mov
ss
xor
jno
or
imul
mov
or
xchg
stos
retf
sti
inc
adc
and
mov
test
lahf
add
outs
or
pop
sub
(bad)
lods
imul
or
div
int3
pushf
xor
cmp
push
fwait
cmp
push
les
inc
repnz
(bad)
push
dec
aad
mov
push
sbb
push
push
cmc
fisttp
dec
into
sub
addr16
stc
pop
jns
(bad)
cmp
stos
cmps
call
mov
dec
cmp
cmp
int3
jmp
mov
jecxz
sbb
shl
xchg
jnp
cmp
out
add
nop
add
jmp
xchg
add
pop
adc
push
rcr
in
test
push
xchg
aaa
sbb
dec
push
mov
iret
lds
or
jae
dec
aam
shr
retf
and
out
sbb
mov
stos
(bad)
ror
into
test
xchg
xlat
(bad)
fsub
test
or
pop
jae
scas
mov
pop
pop
adc
jno
lahf
xchg
push
js
push
(bad)
dec
test
cdq
outs
ret
sub
fucomi
cmc
sahf
jmp
fldenv
inc
pop
daa
aam
xor
call
imul
push
jl
icebp
ja
loop
jle
test
clc
call
aas
xchg
and
frstor
jmp
das
hlt
push
add
popf
xchg
stc
aaa
push
adc
cmp
adc
or
xor
ja
xor
dec
hlt
dec
jo
mov
movs
mov
je
add
cmp
in
mov
std
frstor
sti
jecxz
or
mov
sar
push
lea
psrad
pop
in
cwde
push
inc
xchg
xor
mov
into
das
cmp
ins
mov
pushf
sub
cmp
int
lds
dec
sti
mov
jl
neg
jnp
retf
xor
(bad)
jnp
fild
or
mov
sar
nop
pop
add
sahf
mov
dec
cmps
sbb
mov
je
adc
jbe
sbb
retf
inc
daa
clc
mov
es
adc
mov
xchg
dec
mov
mov
mov
ss
sub
aaa
push
gs
neg
(bad)
mov
mov
shl
cdq
int3
dec
lods
mov
mov
cmp
and
das
pop
hlt
cmp
loop
lods
in
ret
xchg
xor
out
nop
retf
(bad)
cdq
inc
out
pushf
jge
xchg
xor
push
pop
test
rol
into
mov
aaa
sbb
sub
loopne
inc
fsub
dec
dec
jmp
pop
retf
sub
mov
push
inc
adc
xchg
dec
xchg
dec
jmp
or
xor
ds
cmps
icebp
pop
arpl
outs
pop
cmp
repz
mov
cmps
mov
sahf
adc
loope
add
push
stos
nop
(bad)
ds
fwait
push
cmp
movs
jno
imul
cmc
jmp
mov
mov
xor
adc
jl
sub
jp
mov
ror
xlat
clc
adc
and
adc
std
mov
popf
out
inc
push
dec
loopne
es
rol
dec
mov
and
jo
loope
xor
repz
sub
int
arpl
rol
popa
pop
pop
in
xor
add
mov
shr
jge
dec
shl
les
repnz
mov
popf
fnstenv
jecxz
sbb
pop
loopne
xchg
mov
sbb
gs
xor
jg
sub
js
clc
retf
pushf
add
push
or
daa
jo
dec
popa
mov
xor
lahf
xor
mov
ret
sub
mov
push
vmovshdup
data16
mov
in
lea
push
(bad)
inc
cld
repnz
mov
sub
push
ficom
adc
ja
popa
jno
scas
xchg
sahf
dec
test
inc
(bad)
jecxz
(bad)
dec
hlt
js
imul
or
mov
and
cmp
scas
inc
xchg
xor
bound
jmp
mov
or
pop
pop
mov
cs
jmp
lock
pop
pop
retf
sub
jmp
add
dec
cmps
test
inc
push
adc
mov
mov
xchg
inc
push
or
jo
pop
pop
gs
dec
das
cmp
inc
repnz
dec
dec
leave
push
or
cdq
jmp
(bad)
fsubr
mov
adc
mov
sahf
std
call
xor
xor
call
inc
inc
je
mov
push
lock
mov
push
sbb
jp
call
add
shr
push
mov
repnz
sbb
fiadd
push
mov
fs
dec
pop
or
pop
xchg
xchg
dec
fisub
push
sbb
ret
jnp
ins
inc
imul
js
or
push
loopne
je
lods
add
in
mov
outs
push
sub
ja
jmp
sbb
std
pushf
mov
adc
sti
(bad)
pop
adc
inc
out
pop
xor
sub
xchg
cmp
jne
fiadd
jl
aaa
cmp
lods
pop
test
js
mov
mov
rcl
lock
and
cmp
sti
push
push
pop
mov
sub
mov
dec
pop
out
inc
jl
das
push
ins
pop
mov
scas
daa
sbb
mov
mov
pop
ds
mov
(bad)
sbb
inc
fs
xor
jb
cmp
mov
fcomi
or
test
pop
lods
mov
inc
dec
ins
jbe
jbe
fbstp
jecxz
test
lods
cmp
jge
fs
jno
jg
mov
ret
add
pop
add
pop
xchg
cmp
aas
sub
fbstp
mov
lahf
std
cmp
xchg
repz
adc
popf
add
push
fidivr
xor
inc
jecxz
imul
(bad)
dec
push
bound
add
and
jbe
cld
xor
mov
aaa
dec
and
dec
lahf
in
or
jp
imul
fidiv
push
add
fisubr
dec
jns
dec
xor
in
pop
push
lds
xor
xchg
cmp
ret
(bad)
xchg
(bad)
lea
jns
jbe
mov
adc
and
pop
inc
mov
ja
mov
jo
dec
stc
ret
not
int3
hlt
inc
xchg
mov
mov
std
in
add
out
xor
leave
enter
into
or
adc
fdivr
dec
mov
pop
cmp
add
jo
(bad)
idiv
clc
pop
jge
call
shl
loop
jno
popa
retf
mov
shl
mov
fiadd
pop
lds
je
hlt
dec
push
fisttp
je
test
xor
jbe
loop
int
ficomp
test
and
rol
push
inc
sub
je
jmp
mov
lods
push
mov
lods
mov
xchg
cmps
rcr
push
sub
rcl
jmp
lds
rcr
and
mov
or
retf
jne
repnz
stos
xor
pop
add
sti
adc
jecxz
xor
cmp
dec
push
sub
push
mov
xchg
mov
sub
jb
mov
cld
das
mov
pop
sub
push
pop
add
xor
inc
mov
mov
jae
pop
dec
sbb
(bad)
and
lods
jo
jle
fstp
xor
imul
je
xor
sub
mov
dec
ins
mov
fmul
call
std
push
(bad)
ins
repz
pop
xchg
sti
jne
cmp
push
test
es
enter
push
sti
xchg
jmp
ror
stos
leave
inc
add
das
fs
fimul
mov
das
outs
push
fwait
xchg
in
sub
adc
ret
xchg
fstp
xchg
shr
adc
cmps
out
mov
mov
or
inc
test
mul
sbb
cmps
sahf
push
jle
mov
push
sbb
mov
je
mov
sub
xor
mov
pusha
sahf
aas
cmp
pop
push
sahf
or
lahf
xchg
in
les
retf
xlat
out
inc
pop
scas
xchg
and
mov
inc
btr
pop
push
bound
je
stc
jecxz
jg
push
jns
retf
xchg
out
add
push
push
mov
das
push
push
js
pop
mov
stos
mov
bound
sub
dec
mov
(bad)
jge
popf
(bad)
mov
xor
inc
movs
dec
mov
jmp
pop
inc
mov
mov
xor
test
mov
mov
jl
int
sbb
lock
jnp
retf
xor
ins
sub
sbb
add
cmp
pop
mov
in
aas
pop
mov
pop
jnp
sub
mov
mov
jge
repz
ja
or
ror
pusha
mov
loopne
hlt
pop
or
push
push
inc
and
je
shr
fwait
stos
jbe
push
cmc
je
clc
inc
inc
and
dec
jnp
leave
imul
push
icebp
mov
lahf
popf
lock
push
pop
inc
sub
and
xchg
rcr
ss
jge
cmps
pop
add
cmp
mov
or
in
pop
js
adc
out
or
pop
mov
mov
jb
ja
mov
(bad)
jae
add
imul
scas
inc
fwait
in
stos
dec
jno
jmp
adc
pop
mov
xlat
adc
sbb
mov
ror
push
lea
sub
mov
cmp
push
xstore-rng
cmps
inc
jmp
daa
ret
out
dec
pusha
pop
fimul
mov
loopne
out
inc
ins
aam
aas
pop
lea
push
dec
push
mov
ja
mov
pushf
jae
out
mov
in
add
ret
in
add
mov
pop
arpl
(bad)
jecxz
in
adc
les
fdivp
test
pop
test
sub
xchg
push
clc
xor
pop
mov
hlt
ret
add
mov
or
stc
mov
dec
jl
jnp
mov
xrelease
shl
mov
inc
mov
imul
push
icebp
and
test
inc
lods
push
cli
loope
repz
loopne
cmp
adc
mov
or
mov
and
out
xor
mov
in
stc
dec
scas
push
jecxz
movs
mov
jno
cmp
mov
jb
cmps
call
sub
adc
outs
mov
sub
ins
or
(bad)
mov
fs
and
dec
in
sub
shl
xchg
cmc
bound
aas
ja
sbb
imul
jno
jp
lea
jecxz
mov
and
jle
push
aad
cmp
adc
sub
lds
jb
imul
jns
jmp
mov
into
stos
push
and
int3
mov
stos
test
sbb
pushf
mov
retf
sbb
ror
pop
retf
sub
mov
jno
push
push
add
add
sar
mov
xor
add
mov
outs
jle
(bad)
jb
ror
into
leave
in
nop
movs
rol
lea
cli
(bad)
cmp
shl
adc
mov
repnz
stos
sbb
mov
adc
inc
in
jno
in
adc
sub
fwait
xlat
imul
(bad)
mov
add
mov
mov
(bad)
jmp
sbb
push
(bad)
loop
loope
mov
mov
jb
add
cmps
pop
stc
or
or
dec
jmp
lock
sub
mov
and
pop
ret
rcr
pop
ss
or
cdq
inc
in
movs
mov
inc
cmp
sbb
daa
adc
mov
jae
dec
inc
adc
cmp
cld
loope
inc
fsubrp
push
movs
in
xchg
mov
mov
pop
daa
add
mov
loope
xchg
mov
int
aaa
sahf
add
lds
push
inc
imul
test
call
inc
cwde
pop
xchg
mov
popf
(bad)
dec
cdq
iret
ins
mov
imul
jle
push
xchg
out
std
and
dec
mov
jmp
(bad)
loope
pop
add
gs
pushf
repnz
mov
aaa
ret
jno
imul
lea
inc
inc
sahf
sub
ins
lahf
movs
setne
popf
in
(bad)
fsubr
das
mov
out
mov
push
nop
pop
cmp
ja
xchg
fmul
mov
pop
int3
(bad)
rcr
mov
jbe
mov
test
ret
std
div
lea
repz
addr16
ins
dec
push
xchg
js
sti
jmp
jb
das
jle
sub
jmp
sub
aad
je
sbb
mov
xor
mov
jmp
cmps
(bad)
sahf
xchg
ret
jp
mov
popf
dec
pop
cs
(bad)
sub
fldln2
loope
call
ret
(bad)
mov
lods
mov
and
push
xor
(bad)
add
xor
inc
lds
mov
out
inc
enter
in
mov
pop
stos
inc
std
inc
(bad)
mov
ins
scas
pop
inc
inc
(bad)
xor
sbb
in
sub
rol
or
gs
xchg
adc
fist
xchg
jne
mov
xor
(bad)
shr
pop
rcl
push
inc
jo
jbe
pop
jp
imul
jne
pop
mov
sbb
data16
iret
imul
xlat
cmc
xchg
sar
sbb
dec
dec
xchg
inc
mov
pop
arpl
adc
leave
pusha
add
and
jno
test
aas
mov
imul
cwde
push
lock
jecxz
and
and
pop
dec
mov
addr16
ins
jle
xchg
and
stos
adc
scas
or
mov
in
mov
and
call
inc
mov
jmp
jmpw
and
mov
enter
scas
dec
xchg
mov
xor
sub
cmp
or
test
push
mov
retf
xchg
pop
loopne
sub
xor
or
dec
xchg
jmp
adc
mov
or
sbb
sub
(bad)
jl
jo
push
das
inc
iret
xor
pop
out
stos
inc
cmp
fidivr
out
inc
adc
mov
push
sti
mov
adc
cmp
je
shl
and
add
add
daa
push
into
sub
repz
cmp
cs
add
pop
(bad)
js
inc
xor
sub
ret
test
cmps
in
push
cs
int3
into
rcr
push
cmp
push
ficomp
cdq
ror
je
fnstenv
cmps
jno
rcr
addr16
cmp
mov
test
bnd
in
jmp
mov
mov
mov
inc
aam
xchg
and
fistp
out
add
shl
or
test
adc
pop
call
cmc
rcl
cmp
out
(bad)
ss
aas
mov
gs
adc
dec
or
ret
sub
push
mov
mov
stos
cmp
scas
mov
xchg
jbe
jo
mov
fxch
in
mov
push
mov
jp
lods
dec
iret
fldl2e
cli
xor
cdq
pushf
mov
pop
fwait
mov
ins
sbb
adc
jmp
or
jl
movs
mov
sbb
lahf
sbb
mov
mov
push
pop
pusha
lds
jo
jmp
gs
xchg
sbb
cmp
fdiv
push
lahf
rcr
add
dec
bound
ins
add
ja
pop
fiadd
in
mov
outs
fld
scas
fwait
(bad)
pop
jnp
mov
fidiv
inc
sahf
imul
push
adc
xchg
or
xor
mov
mov
ss
rcr
inc
cs
sti
push
(bad)
stos
push
mov
add
or
scas
mov
in
mov
push
cld
aas
pop
icebp
out
fld
nop
xor
or
jp
gs
call
cmp
ds
mov
test
jmp
fsubr
mov
pusha
mov
jb
inc
adc
add
and
aad
fdivr
inc
cld
jp
das
xor
(bad)
cmp
add
sbb
mov
sbb
loopne
movs
sub
in
call
pop
nop
pop
aam
ret
fld
sbb
jno
inc
dec
aad
fidivr
pop
stos
pop
cmp
out
mov
add
push
or
add
test
dec
sbb
loop
dec
(bad)
adc
pop
nop
xor
xchg
adc
push
push
(bad)
mov
sar
inc
cmc
aad
jb
jo
fs
push
push
sbb
push
push
dec
mov
cmp
pop
push
(bad)
cmp
pop
outs
xor
mov
retf
int
jb
jnp
outs
fisub
lods
jecxz
inc
push
push
aaa
mov
scas
cwde
lods
jp
(bad)
mov
ins
xchg
or
les
into
jg
ins
test
das
dec
pop
sbb
mov
leave
pop
js
jecxz
mov
loope
lods
mov
jno
sbb
xor
movs
mov
and
dec
adc
dec
mov
mov
or
and
pop
stc
mov
push
jae
inc
cld
fidiv
fnstsw
mov
rcr
or
test
ins
dec
mov
int
or
dec
xchg
pop
sbb
add
arpl
je
inc
inc
out
sbb
xchg
aad
add
inc
fist
mov
movs
sub
in
jecxz
call
int
in
pushf
sub
cmp
imul
aas
inc
fistp
lahf
call
cdq
add
and
mov
sbb
pop
out
sub
dec
movs
rol
sub
(bad)
or
mov
xor
(bad)
xor
sbb
out
shl
int3
add
test
test
push
into
ds
pop
das
pushf
test
je
or
out
mov
mov
call
mov
or
int
mov
leave
and
aas
out
adc
outs
adc
(bad)
cmps
imul
mov
jae
push
ja
call
movs
mov
push
imul
jge
aad
and
push
int3
push
repnz
jmp
repnz
in
xchg
nop
jge
jae
(bad)
aaa
mov
mov
or
dec
test
cli
jecxz
mov
mov
jae
ret
and
dec
sub
push
cld
ret
in
jne
ror
adc
add
sbb
and
cmp
jb
sub
(bad)
and
ret
xchg
leave
sub
(bad)
out
sar
mov
(bad)
and
pop
pop
cld
(bad)
es
inc
aas
arpl
pop
xor
adc
clc
rcr
dec
lock
call
mov
ret
movs
xor
add
inc
dec
sahf
scas
outs
cmp
pop
and
inc
sub
ffree
ret
or
(bad)
mov
movs
jmp
sbb
in
sub
cmps
xchg
push
sub
loop
add
mov
jo
call
fs
arpl
out
jno
push
ficom
jbe
push
mov
adc
ret
loop
test
mov
or
call
mov
xchg
mov
inc
cmp
mov
call
inc
xchg
jge
push
push
jno
and
mov
or
push
rol
push
shl
cmp
sub
ins
(bad)
int
(bad)
cld
stos
into
shl
push
(bad)
fucomp
int3
sbb
and
xor
out
inc
out
dec
test
in
lods
jmp
jno
jmp
imul
test
mov
adc
cmp
pusha
dec
bound
inc
ja
mov
shr
fucom
fisttp
jl
arpl
inc
mov
lods
cmps
retf
aad
sub
call
hlt
inc
rcl
sub
cdq
pop
dec
scas
mov
test
sub
xchg
mov
jge
sub
(bad)
xlat
jo
pusha
sbb
shl
and
push
rcr
jbe
adc
pop
pop
cld
pop
and
add
adc
gs
loope
mov
or
fadd
pop
add
test
clc
aam
iret
ss
push
xchg
lahf
sub
or
push
or
jmp
xor
jle
inc
or
mov
cli
pop
les
push
pop
pop
inc
xchg
jmp
(bad)
jb
jno
adc
mov
daa
jle
jmp
clc
call
cmc
loopne
dec
and
xchg
inc
dec
mov
out
jl
inc
jp
int
and
push
(bad)
int
add
xor
fmul
add
aaa
(bad)
mov
iret
sar
icebp
loop
cli
fiadd
aas
retf
sbb
xor
shl
(bad)
mov
addr16
jns
mov
jo
or
jg
mov
jmp
imul
inc
dec
cs
repz
push
push
mov
dec
sub
aam
mov
xchg
jmp
pop
repz
test
ja
mov
or
aaa
push
dec
gs
inc
add
fist
in
outs
sahf
(bad)
lea
pop
sbb
repnz
jae
fidivr
mov
adc
fcomp
neg
fucomp
popf
mov
adc
fst
scas
mov
(bad)
mov
in
cmp
cmp
add
test
inc
jne
xchg
inc
dec
adc
(bad)
xor
fdiv
xchg
jne
ins
pop
cmp
adc
pop
pop
jno
sbb
inc
dec
ret
cdq
cmp
vdivps
call
dec
mov
inc
shr
int3
lea
sub
add
sar
test
je
add
add
lods
sar
or
mov
ret
sbb
retf
adc
int3
or
push
stc
mov
int3
clc
outs
pop
dec
cmc
lds
lea
push
inc
xchg
test
test
add
(bad)
cld
mov
shl
test
ds
inc
aas
and
push
sbb
es
stos
sub
(bad)
repnz
cmp
(bad)
out
rol
std
shr
jbe
xchg
cmp
jmp
inc
jno
push
push
jne
iret
xchg
pop
stc
jle
or
xor
repz
and
xor
mov
add
popf
loopne
repnz
rcl
cwde
(bad)
out
mov
push
jmp
test
bnd
inc
cmc
(bad)
cmp
push
int3
add
hlt
in
mov
mov
push
dec
mov
mov
cmps
shr
xor
or
pop
lahf
sub
popa
push
or
iret
sbb
nop
iret
mov
ffreep
or
dec
jno
into
cmp
mov
adc
stos
repz
sub
push
cmp
mov
dec
mov
adc
sub
lahf
(bad)
(bad)
push
pop
sti
add
mov
iret
pop
sub
sar
jecxz
mov
cli
add
sti
and
call
push
adc
xor
xlat
popa
inc
inc
scas
outs
and
xchg
pop
popa
(bad)
mov
loopne
aad
mov
addr16
mov
fidiv
jmp
sti
movs
cld
xchg
xchg
scas
and
push
ret
dec
rcl
and
mov
xor
sub
mov
leave
sub
adc
mul
repnz
sar
test
jp
fstp
jne
mov
xchg
call
aad
sbb
mov
xchg
mov
jmp
inc
data16
inc
fbld
rcr
scas
jmp
mov
aad
inc
iret
aam
jle
(bad)
hlt
iret
sbb
loopne
and
mov
out
jecxz
push
les
and
popa
lods
ins
jp
cmp
shl
mov
add
ins
idiv
cs
icebp
jb
sub
out
lods
out
push
adc
repnz
fxch
pop
sub
mov
ss
fstp
ss
pop
dec
(bad)
outs
out
mov
fs
xchg
test
mov
push
sbb
push
rcl
jle
rol
cli
push
jns
mov
lods
pop
mov
adc
sub
mov
cli
loop
mov
jmp
and
jg
xchg
cmp
and
mov
mov
rcr
inc
dec
inc
add
(bad)
call
fnsetpm(287
sub
in
sbb
pop
sub
and
add
xor
loop
rcr
cmp
jbe
mov
retf
test
jg
imul
inc
sbb
mov
sbb
outs
ins
mov
mov
mov
jmp
jmp
jle
dec
inc
push
outs
add
push
cmp
pop
in
and
outs
movs
xchg
movs
mov
outs
out
pop
dec
inc
pushf
cmp
(bad)
dec
inc
mov
push
mov
mov
jecxz
add
adc
shl
(bad)
and
sbb
xor
ficom
retf
sbb
addr16
sub
cdq
inc
jle
mov
imul
clc
pushf
or
icebp
mov
mov
xchg
adc
fiadd
adc
(bad)
fsub
fadd
and
mov
loop
clc
sahf
popf
xor
das
daa
imul
sub
pop
in
push
test
add
jmp
or
sbb
mov
div
add
xchg
sub
mov
mov
cli
loopne
icebp
sub
(bad)
push
jae
(bad)
dec
ins
adc
sub
cli
ror
test
or
and
ret
dec
or
jae
clc
inc
ret
adc
int3
popa
dec
cld
sar
pop
and
add
btr
cli
lds
scas
mov
mov
iret
mov
outs
clc
test
cmp
aam
mov
or
mov
inc
mov
cmp
(bad)
mov
ss
mov
(bad)
and
popa
jp
adc
pusha
and
cwde
icebp
div
inc
loop
lods
test
cwde
sub
push
jp
lock
mov
adc
or
in
(bad)
movs
cmps
mov
test
mov
cld
cmc
es
mov
lock
fwait
and
xor
mov
cmp
xor
sar
jns
dec
data16
push
pushf
pusha
push
and
add
test
jg
sbb
movs
daa
sub
cld
sub
and
mov
dec
test
mov
pop
shl
mov
xchg
add
adc
dec
and
pop
adc
int3
mov
js
scas
data16
lds
xor
call
fiadd
retf
gs
mov
pop
lahf
jp
cmp
test
or
lock
sbb
cs
int
sub
pop
push
dec
push
or
pop
cmps
adc
add
stos
aaa
mov
mov
mov
imul
in
jp
popa
pop
dec
outs
into
in
inc
lock
and
sbb
mov
fcomp
mov
pop
adc
stc
jbe
push
mov
mov
pusha
pop
jp
pop
add
lea
mov
fstp
xchg
jg
or
jae
je
lods
push
cmps
aad
or
mov
jg
leave
nop
push
add
lods
mov
lock
pushf
push
push
xor
fwait
mov
mov
xor
pop
enter
enter
ret
add
dec
cs
rcr
add
shr
cmp
push
adc
addr16
sub
ja
push
fmul
dec
mov
loop
mov
icebp
sar
movs
sbb
inc
cmp
adc
or
xchg
retf
in
lock
jp
and
xor
inc
xor
pop
dec
adc
fsub
rcl
neg
sbb
xor
cdq
dec
jge
pop
cmps
add
imul
adc
sub
jno
dec
fsub
and
xchg
scas
outs
je
dec
jecxz
dec
xor
into
pop
test
(bad)
push
mov
xchg
dec
cmp
pusha
xor
out
and
mov
or
imul
jmp
imul
scas
fnstenv
jle
popa
cwde
(bad)
in
mov
adc
call
fcom
cs
lea
sub
pop
sahf
inc
xor
jg
inc
ja
arpl
es
or
ins
push
or
mov
fwait
push
cdq
mov
cmp
or
mov
addr16
scas
mov
and
in
and
mov
and
js
xchg
(bad)
push
popa
leave
mov
inc
test
mov
popa
(bad)
jbe
fnsave
xchg
xor
push
aaa
fimul
jmp
push
sub
cmp
xchg
mov
jp
stos
or
scas
dec
imul
ss
mov
xchg
pop
pop
xchg
fcom
and
popa
sub
mov
inc
xchg
ret
ds
imul
dec
ins
sub
adc
or
xlat
xchg
push
repnz
mov
jmp
mov
jbe
adc
mul
fnstenv
mov
sub
into
dec
hlt
xchg
xchg
push
inc
rcl
dec
movs
and
mov
jp
push
mov
loop
call
fwait
in
jne
adc
cmp
push
jns
inc
test
jmp
pop
sub
dec
push
mov
push
xor
push
dec
js
mov
inc
cdq
test
ss
cmc
inc
icebp
sbb
cmc
imul
xor
outs
cld
pusha
adc
or
movs
mov
leave
fwait
shr
sub
mov
xchg
push
adc
mov
dec
add
(bad)
outs
xchg
scas
in
(bad)
push
lods
fs
sub
aaa
iret
mov
lods
mov
sub
jmp
mov
push
or
jno
rcr
sbb
(bad)
xchg
cdq
aam
scas
sahf
lea
out
je
(bad)
(bad)
add
xor
add
or
mov
jno
stos
iret
sub
aad
in
pop
and
xchg
ror
adc
adc
(bad)
pop
jbe
pop
mov
arpl
push
jp
sbb
cwde
adc
mov
inc
outs
arpl
xchg
idiv
fnstcw
and
daa
xchg
and
sub
mov
movs
ret
jle
jp
call
retf
xor
pop
and
mov
sbb
or
fs
and
pop
js
ss
jl
pop
loope
call
dec
mov
ret
inc
dec
push
xor
push
sub
mov
xor
mov
leave
aaa
inc
xor
sbb
shr
rol
sbb
int3
push
(bad)
sub
dec
cmp
pcmpgtd
push
fadd
jge
cs
retf
mov
jns
or
inc
cdq
(bad)
push
jg
xor
bnd
jbe
mul
push
loop
dec
push
push
and
int3
xor
das
and
and
inc
int
icebp
inc
arpl
jae
cmp
cli
cmps
add
test
stos
adc
sti
cwde
pop
out
cmps
and
popa
fs
mov
jb
add
push
mov
out
int
mov
jnp
sub
repz
fstp
jne
cmp
jecxz
stos
jmp
mov
mov
fidivr
mov
pop
or
out
cld
clc
cwde
sbb
sub
push
aam
imul
push
mov
into
rcl
iret
pushf
mov
push
test
cmc
int3
out
imul
push
and
add
cmps
mov
stc
arpl
jmp
movs
lods
dec
das
inc
stos
adc
das
cmc
cli
call
and
aad
popa
in
fstp
ret
push
jbe
mov
dec
xchg
mov
in
cmp
cwde
addr16
jge
lods
fs
adc
pop
jnp
adc
and
in
les
ret
ror
fmul
inc
and
jl
cmc
mov
(bad)
int3
cmp
mov
punpckhwd
jno
xchg
inc
in
mov
mov
(bad)
push
jne
loope
add
mov
or
cmp
(bad)
fbld
jnp
mov
addr16
ds
jae
mov
aad
lds
and
je
cmp
iret
or
mov
xchg
jl
aas
iret
dec
dec
or
pop
pop
aad
(bad)
cmp
fs
sbb
mov
fiadd
js
add
cmps
inc
adc
mov
xchg
inc
dec
js
push
inc
xchg
mov
lds
mov
fwait
ja
pop
adc
loop
and
cmp
cwde
or
in
(bad)
mov
call
jg
(bad)
mov
sbb
pop
sti
dec
xor
movs
jmp
add
mov
outs
or
push
push
mov
xor
fist
cmp
push
adc
mov
leave
into
int
cld
lock
outs
adc
out
xchg
mov
and
test
outs
push
push
(bad)
jl
add
arpl
or
cmp
jmp
push
not
xchg
lds
(bad)
in
ins
outs
int3
(bad)
cmp
xor
or
retf
dec
cmp
scas
pop
add
fisubr
int
test
mov
add
aaa
into
jle
mov
or
jg
in
add
ja
cmp
shl
xchg
call
bound
lds
lods
push
ret
xchg
enter
pop
pop
lods
xchg
mov
sub
out
xchg
mov
popa
adc
and
add
and
jno
sbb
dec
int3
lock
bound
cmps
add
xchg
pusha
xor
adc
mov
or
stc
js
jmp
aas
xchg
jmp
push
jno
in
imul
mov
cmps
adc
xchg
adc
mov
ret
jb
sub
test
cmp
scas
dec
movs
je
cmps
jl
daa
in
js
mov
es
push
sbb
leave
add
jecxz
push
jns
rcr
cld
sbb
rcl
(bad)
sbb
out
in
sahf
ss
test
mov
arpl
(bad)
and
pop
mov
mov
pop
xchg
mov
aam
mov
cmps
dec
mov
xchg
aad
inc
in
popa
xchg
xor
inc
inc
and
iret
pop
dec
pop
pop
or
sbb
add
pop
jo
pushf
hlt
ja
(bad)
adc
inc
rcl
test
push
xchg
and
scas
ins
mov
loop
sbb
out
cmps
cdq
call
dec
mov
pop
sar
mov
test
in
outs
pusha
and
leave
je
jmp
add
into
and
sub
out
dec
pop
mov
push
loop
fcom
cmc
jge
and
pop
xchg
xor
lahf
sub
movs
shr
mov
rol
addr16
adc
stos
add
mov
pop
mov
push
(bad)
out
xchg
push
imul
in
pop
neg
movs
(bad)
xchg
in
dec
pop
push
pop
inc
vminps
push
cmp
aas
pop
ret
add
into
xor
in
jo
mov
push
sbb
mov
ja
inc
adc
sub
mov
lods
fs
fadd
mov
nop
fst
in
pop
dec
add
(bad)
outs
aas
adc
loop
ja
(bad)
aaa
nop
add
in
push
leave
loopne
mov
pop
add
jp
repz
cmp
bound
cwde
push
ins
call
enter
imul
retf
fist
adc
mov
jns
pop
push
scas
ds
stc
idiv
jne
jno
test
xchg
(bad)
mov
mov
push
retf
dec
adc
mov
sbb
les
popa
xor
mov
mov
xor
fsub
hlt
sub
jp
push
movs
icebp
popf
loope
lock
add
mov
inc
adc
dec
push
dec
call
mov
dec
shr
int3
or
jno
pop
movs
(bad)
ds
xchg
fwait
cdq
fs
and
mov
cmp
pop
add
jnp
pop
imul
pop
in
and
or
retf
es
mov
xchg
shl
mov
lods
mov
xor
aad
or
test
cmc
dec
fnstcw
lods
dec
dec
pop
and
hlt
(bad)
fisttp
cmc
jg
addr16
or
call
push
jne
ret
movs
jmp
sbb
adc
pushf
out
repnz
mov
scas
clc
mov
jmp
in
mov
rcl
mov
cmp
ret
cs
sbb
(bad)
cmp
cmp
lea
movs
mov
fwait
push
lahf
sysret
xchg
lea
test
push
mov
lea
push
mov
stos
fisub
fld
mov
mov
shl
pop
pop
cdq
int3
scas
loop
scas
sub
js
cwde
push
shl
jnp
mov
inc
shl
inc
or
int3
in
into
mov
xchg
sti
dec
xor
ins
pop
push
inc
js
jmp
mov
or
inc
adc
xor
dec
das
pop
or
cs
cmps
scas
cmp
dec
add
xchg
es
add
add
cwde
mov
fsubr
les
les
fild
repnz
int3
out
retf
pop
mov
lods
push
add
push
ja
jmp
gs
jmp
movs
outs
jp
mov
inc
inc
add
xchg
dec
icebp
pop
mov
push
dec
mov
push
lea
loop
add
pushw
xchg
mov
lea
pop
ficom
das
sbb
jbe
add
sbb
mov
cwde
add
inc
ficom
shl
jle
sar
dec
pop
sar
mov
out
ins
(bad)
out
jp
(bad)
mov
mov
leave
xor
push
sar
rol
lods
cli
sbb
pop
out
push
mov
pop
call
add
xor
mov
xchg
into
mov
push
pop
lahf
movs
movs
mov
mov
pop
jo
or
and
push
pop
xchg
sub
sbb
mov
jns
mov
xchg
push
sbb
xchg
and
int3
ror
xchg
aam
iret
enter
js
add
outs
mov
or
adc
fwait
pop
loope
add
movs
test
jo
mov
mov
cmps
sbb
cmp
inc
mov
test
push
fstp
adc
cli
pop
mov
mov
outs
inc
lds
in
leave
pop
fstp
jge
jg
cdq
sbb
dec
push
mov
xchg
sahf
xor
test
pop
sti
js
push
pop
adc
jecxz
cmps
inc
mul
jle
inc
gs
jb
or
xlat
jmp
mov
aas
cmps
dec
clc
clc
lods
cmp
pop
xchg
aad
jo
or
pop
adc
mov
mov
jb
or
dec
pop
or
mov
xlat
sbb
jmp
in
push
fs
cwde
pop
or
jmp
shl
mov
jno
popf
fcom
movs
push
xchg
add
dec
cmc
ins
dec
pushf
and
cdq
inc
arpl
sub
cs
or
push
int
inc
jnp
pop
jo
mov
sub
jo
mov
(bad)
xor
and
outs
pop
ror
pop
push
pop
push
std
mov
aam
cli
mov
div
sar
adc
and
loop
jp
adc
sub
ret
jmp
scas
pop
cmp
jp
aad
inc
pop
rcl
mov
and
test
daa
cli
sbb
aaa
fdivp
int
loope
cwde
or
pop
or
(bad)
lods
cwde
sub
mov
in
jmp
stc
ins
cmp
mov
rcr
mov
mov
or
jmpw
xor
pop
jmp
cli
dec
xchg
add
test
adc
mov
call
ins
leave
mov
repz
int3
fisubr
push
repz
mov
(bad)
fisub
test
arpl
inc
mov
sti
pop
push
push
mov
loop
loope
xor
xchg
mov
outs
(bad)
cmc
pop
inc
ins
clc
adc
jle
js
fstp
xchg
xor
fdiv
push
imul
stos
inc
arpl
and
cld
xor
es
mov
std
mov
mov
(bad)
retf
test
mov
(bad)
les
es
int
xor
xchg
fdiv
out
in
jae
pop
ins
int
xor
pop
push
jne
push
test
out
pop
pop
cld
sbb
cmp
sub
mov
pop
adc
inc
cmp
cmps
jecxz
push
sub
in
repnz
cmp
mov
stc
int
sub
loop
push
aaa
pop
or
adc
push
data16
and
pop
sub
lods
cld
and
dec
mov
xor
jne
push
(bad)
scas
adc
rcr
loope
pop
hlt
adc
loop
mov
xor
add
push
mov
push
sub
dec
aas
fld
xor
pop
pop
(bad)
in
xchg
cmc
mov
xor
clc
jno
mov
out
jbe
jmp
push
arpl
mov
pop
daa
xchg
add
adc
and
mul
xchg
retf
rcl
inc
test
inc
mov
scas
mov
push
test
mov
cmp
adc
sbb
shl
js
fisubr
icebp
fwait
and
clc
(bad)
mov
ficomp
adc
pop
dec
shl
sahf
int3
mov
cmp
sbb
mov
daa
xchg
sub
adc
and
sub
push
cmc
(bad)
mov
mov
out
call
sbb
sub
inc
cmp
lds
sub
mov
sbb
lods
mov
lea
int3
leave
ud2
and
dec
inc
ror
clc
mov
cld
bnd
add
int
fwait
sub
pop
pop
retf
lock
inc
adc
mov
imul
adc
cmp
add
neg
cmp
mov
enter
push
xor
push
fisub
mov
cmc
bound
xchg
inc
gs
inc
repnz
xchg
push
ror
mov
ja
data16
out
dec
fimul
pusha
aam
mov
sbb
xor
loop
push
adc
mov
out
data16
(bad)
mov
scas
push
xor
adc
loopne
and
bound
retf
adc
jge
jge
cdq
pop
sti
lahf
push
jmp
sub
xor
pop
push
(bad)
push
cmp
sbb
fs
push
add
in
pop
cdq
(bad)
sti
fcomp
iret
mov
mov
test
sub
cmp
xor
inc
(bad)
pop
call
iret
icebp
inc
and
xor
stc
pushf
es
adc
lahf
or
xor
fwait
inc
loop
les
in
add
or
and
in
pop
cdq
loop
mov
and
add
sub
inc
add
fcmovnu
icebp
push
aaa
int3
sub
ja
jno
lds
bound
lods
jae
gs
jbe
outs
sub
xchg
into
inc
xchg
or
std
sbb
mov
std
iret
(bad)
dec
rcl
mov
in
jns
aam
test
pop
sub
push
xchg
pop
inc
cmc
cdq
test
or
loop
mov
xchg
mov
je
sbb
cli
iret
lods
rol
ins
outs
push
fld
cld
retf
lock
enter
cmp
cmp
fwait
xchg
cmps
iret
imul
xor
mov
add
sbb
test
cmp
cdq
neg
mov
out
cmc
ins
les
scas
stc
aaa
stc
hlt
jecxz
jmp
push
sub
out
mov
gs
clc
sub
aaa
or
xchg
test
pusha
(bad)
pop
jae
jp
movs
dec
lea
mov
sbb
lea
mov
add
(bad)
lea
dec
cli
mov
test
sub
test
loope
jns
or
imul
sub
xor
push
fbstp
lock
push
sub
xchg
(bad)
xor
sbb
fsub
add
pusha
fcmovbe
retf
xchg
inc
jge
jp
inc
scas
stos
pusha
js
pop
push
or
xor
jno
add
sub
xchg
lods
daa
jge
jmp
sub
and
jbe
inc
sbb
pop
cmp
inc
push
sti
jmp
stc
or
jno
jmp
scas
addr16
push
inc
mov
(bad)
push
imul
mov
pop
push
cmp
dec
jmp
hlt
or
fidivr
test
aad
std
cmp
les
mov
outs
cmc
mov
jl
xor
mov
in
push
sets
inc
push
jne
std
or
stos
push
int3
popf
clc
cmp
pop
aad
and
jmp
sbb
bound
jmp
add
mov
popf
fst
fsubr
fs
das
cmp
sub
xor
fild
push
sbb
mov
sar
scas
xor
xor
imul
mov
adc
mov
bound
aaa
cmps
xchg
cmp
jo
mov
jbe
push
mov
cmp
xor
sbb
rcl
test
ins
mov
lock
cmc
xor
mov
pop
pop
push
inc
sub
push
mov
mov
movs
mov
push
ret
hlt
and
adc
or
call
and
sbb
jl
push
inc
and
ret
xchg
test
jmp
ja
jmp
js
cdq
or
adc
jbe
ins
or
out
inc
loope
add
jge
dec
out
(bad)
and
cdq
mov
jmp
or
cs
sub
sbb
and
mov
aad
or
adc
dec
push
fnstcw
loop
jl
mov
std
inc
call
sub
and
in
pusha
fadd
je
jecxz
mov
sti
fisttp
div
sub
jl
loop
adc
mov
pop
stos
es
popf
adc
(bad)
ds
xor
repnz
mov
std
mov
dec
je
mov
int3
pusha
in
adc
pop
cmp
lahf
xchg
mov
mov
jns
daa
mov
lods
js
pop
icebp
add
add
sbb
adc
add
xor
jbe
jmp
xchg
xchg
xor
mov
fnsave
imul
or
inc
addr16
aam
or
jae
pop
repz
(bad)
lods
(bad)
cmp
repz
in
cmp
iret
mov
stos
inc
or
in
xor
mov
mov
(bad)
iret
push
ficom
mul
add
and
outs
mov
repz
idiv
mov
cld
xchg
fnstsw
push
jo
push
int
data16
ins
adc
pop
into
cmp
(bad)
pop
jge
test
xchg
(bad)
dec
jmp
push
sub
jno
sahf
fild
into
bound
inc
jns
imul
xchg
mov
mov
add
idiv
sbb
in
xchg
out
dec
out
in
fld
mov
jle
cmp
outs
mov
into
mov
and
dec
or
inc
btc
ucomiss
popa
push
push
adc
(bad)
jl
jb
idiv
jl
and
sar
scas
jmp
fistp
icebp
out
ror
mov
xlat
xchg
jns
rol
push
loop
add
imul
jbe
adc
out
push
dec
call
aaa
adc
mov
in
hlt
aad
push
sub
push
cmp
mov
ret
mov
cmps
dec
repnz
stos
add
push
jne
and
and
das
or
(bad)
or
xchg
es
xchg
push
mov
add
sub
into
mov
repnz
cmp
hlt
test
mov
clc
jge
inc
cmp
push
aam
mov
jmp
cld
adc
sti
out
cwde
jno
test
cwde
mov
jb
xchg
pop
push
or
xor
push
cwde
xchg
enter
imul
out
mov
xor
ins
mov
jae
shr
xchg
out
in
sbb
xchg
xor
gs
pop
sbb
fbstp
sti
es
pop
aas
pop
inc
inc
xchg
loop
add
add
sub
ret
mov
ins
int
call
pop
frstor
and
add
pop
lea
je
(bad)
shl
dec
mov
add
cmp
lds
jno
outs
sbb
mov
xor
and
or
xor
jecxz
sbb
call
inc
mov
repz
cmp
pop
xchg
movs
xchg
adc
jl
cdq
cmp
stc
int3
pop
(bad)
js
out
inc
adc
leave
dec
pop
into
inc
gs
pop
sti
mov
mov
das
xchg
pop
sbb
lods
out
or
xchg
shl
mov
jbe
sar
fdivr
and
sub
xchg
and
jmp
in
dec
push
(bad)
mov
push
sbb
push
fimul
das
mov
stc
int3
(bad)
fcmovnb
jae
mov
mov
inc
pop
xchg
add
fwait
ins
xchg
pop
dec
and
jmp
loopne
mov
mov
cmps
xchg
xor
xor
xchg
dec
and
test
test
ins
inc
jmp
push
jmp
pop
sub
dec
ds
repnz
pop
xor
push
addr16
addr16
enter
movs
pop
sbb
xor
pop
xor
imul
out
shr
aam
mov
cmc
pop
stos
dec
cld
pop
lds
cmps
imul
idiv
jge
mov
dec
stos
ficom
std
or
pusha
inc
sub
int
movs
mov
pop
cmp
in
lock
lahf
inc
and
daa
pop
out
pop
add
cmp
test
xchg
and
mov
call
je
mov
adc
push
movs
jp
mov
jae
loop
arpl
sbb
imul
call
xchg
or
sub
stos
cmp
jns
loopne
push
cmp
scas
js
inc
cmc
jle
movs
ins
pop
cmp
and
fwait
or
or
pusha
lods
xor
(bad)
int3
ins
dec
cmp
mov
adc
rcr
push
cmp
jecxz
pop
psllq
or
(bad)
adc
aas
jmp
in
loop
adc
push
ds
push
cmp
lds
push
cmp
push
cld
(bad)
popf
xor
jbe
dec
in
xor
xor
xor
xchg
daa
je
(bad)
sub
add
sub
je
add
hlt
stc
mov
xchg
pmovmskb
or
push
sti
mov
jmp
gs
mov
pushf
ss
shl
xchg
popa
gs
jp
iret
std
pusha
xchg
jle
ins
xchg
(bad)
dec
test
ins
fwait
dec
adc
pop
inc
and
jns
push
adc
movs
adc
add
jl
setle
inc
sub
xchg
push
pop
rcl
pop
cmp
mov
aaa
movs
or
inc
hlt
dec
popa
pop
push
sbb
sbb
movs
int3
mov
adc
jne
mov
aam
push
sbb
dec
inc
adc
push
scas
das
push
and
pusha
arpl
jg
mov
aaa
or
cdq
sub
cmp
leave
cmp
imul
pop
inc
es
movs
imul
mov
xchg
mov
mov
aaa
mov
stos
outs
das
mov
push
mov
xchg
ja
movs
mov
sbb
xchg
add
push
push
push
xor
or
adc
retf
push
ret
cmc
push
inc
mov
jb
and
dec
push
jge
jge
jmp
xor
sub
imul
xchg
xchg
adc
add
xlat
mov
fwait
sub
stc
cmp
xor
loopne
cmc
mov
cmp
push
movs
dec
mov
enter
movs
pop
mov
sti
fwait
inc
ins
clc
xor
xor
inc
jg
test
mov
stos
jns
(bad)
scas
or
(bad)
xor
xchg
aam
loope
fldcw
aad
hlt
sar
pop
into
sub
imul
xor
(bad)
push
jg
adc
imul
pop
dec
and
cmp
or
gs
ins
add
dec
lock
jge
add
stc
and
push
push
push
lea
(bad)
fcom
rcl
push
(bad)
cmp
stc
mov
mov
adc
cmps
inc
jae
sub
fist
ror
xchg
test
aad
or
clc
mov
(bad)
sbb
inc
add
xor
repnz
sbb
iret
xchg
or
add
and
jecxz
pop
pushf
xor
int
pop
imul
gs
int
jns
ins
add
pop
mov
(bad)
add
add
das
dec
add
adc
xor
movs
stc
jg
sti
inc
add
push
jo
pusha
jl
xor
jbe
lahf
add
mov
or
pop
repnz
xchg
mov
movs
sub
es
test
sbb
xor
in
mov
pop
fisub
push
ss
cmp
push
xlat
(bad)
test
dec
out
cmp
jl
fsubr
xchg
std
xchg
lods
imul
jecxz
mov
push
pop
push
repnz
rep
mov
jae
addr16
in
test
push
dec
dec
mov
add
and
lahf
je
rol
dec
mov
adc
xchg
mov
or
inc
mov
ficomp
and
adc
inc
mov
cs
and
pop
stc
nop
out
mov
ins
push
pop
in
nop
jle
inc
outs
dec
fadd
std
jae
jno
dec
test
cmp
ds
arpl
sti
sbb
jns
call
jbe
fdiv
rol
sub
and
leave
mov
mul
cmp
pushf
mov
scas
imul
or
sahf
aaa
mov
sbb
mov
lods
aaa
push
retf
xor
call
rol
inc
push
cld
fdivp
pop
sub
sbb
xchg
mov
cmp
int
pop
push
pop
je
dec
call
js
push
mov
je
or
mov
imul
mov
add
xchg
mov
mov
sbb
retf
cmp
pop
pop
dec
xor
mov
xor
pop
cmp
mov
and
and
stos
jae
jge
sub
add
jno
and
test
mov
stos
cld
loopne
pop
stc
movs
push
out
out
shr
out
sub
sbb
jecxz
call
pop
into
mov
jmp
dec
xchg
mov
add
maxps
sar
je
mov
loop
loope
inc
and
repz
das
push
xchg
arpl
retf
nop
xor
sar
cmps
mov
lods
xchg
fidiv
add
sub
xor
or
bound
sbb
cmp
add
daa
jnp
adc
xor
pop
je
add
and
sub
or
jbe
ins
sahf
push
push
mov
dec
jae
jmp
scas
pop
jae
dec
test
pop
mov
(bad)
in
dec
sub
mov
lods
ins
lods
jl
mov
jnp
jbe
sbb
push
loop
les
repnz
test
mov
lea
xchg
pop
pop
ror
es
int
inc
repnz
or
repnz
mov
movs
fwait
sbb
xor
pop
add
js
int
ror
into
(bad)
or
mov
test
lock
out
push
adc
jbe
arpl
xchg
mov
or
mov
mov
or
cmp
(bad)
das
xchg
rol
jp
ret
js
mov
sahf
cmp
retf
loopne
mov
sbb
enter
push
and
add
jecxz
mov
adc
mov
lods
pop
bound
fs
arpl
or
push
dec
inc
mov
push
xchg
shr
adc
mov
js
and
ja
push
mov
idiv
push
inc
mov
out
inc
aad
push
xchg
inc
mov
js
jbe
sub
sub
jb
and
lods
push
ror
xchg
gs
push
or
adc
or
inc
aaa
xor
rcr
imul
lds
jmp
mov
stos
adc
loope
mov
inc
(bad)
sbb
xor
not
outs
mul
cmp
add
nop
push
jo
push
push
cs
xor
mov
fcom
mov
push
stc
pop
cdq
add
push
cld
xor
lods
mov
pusha
(bad)
dec
pop
mov
jge
div
mov
dec
mov
xor
or
stos
jp
xchg
inc
(bad)
loopne
rcl
inc
or
popa
out
clc
or
inc
outs
cmp
retf
fcmove
loopne
sahf
sub
mov
mov
sbb
shl
(bad)
out
pop
in
jmp
push
stc
push
mov
inc
cli
pop
dec
and
jo
dec
cld
daa
scas
add
fisttp
jns
jl
arpl
jp
or
pushf
or
push
or
push
mov
movs
sub
fistp
fnstenv
hlt
xchg
cmps
addr16
test
ins
mov
push
push
cmp
enter
test
pop
jmp
xor
(bad)
(bad)
loop
fadd
mov
and
xchg
mov
test
mov
adc
cmp
xor
repz
int3
jmp
pop
sub
xchg
out
xchg
mov
adc
daa
fwait
in
or
loope
sub
mov
adc
outs
sar
fldcw
and
sbb
sbb
out
inc
(bad)
mov
mov
cmp
and
jae
scas
mov
(bad)
mov
mov
cmps
push
ret
lds
out
jbe
adc
mov
sbb
fist
jnp
mov
pop
mov
test
mov
and
mov
std
out
popf
aaa
imul
mov
jmp
mov
dec
and
dec
sub
fs
pop
hlt
pop
push
push
cmp
adc
cmp
sub
jns
or
adc
mov
mov
pop
cs
add
or
inc
call
sar
xlat
or
nop
inc
fst
inc
push
pcmpgtd
and
jmp
push
sar
jnp
push
or
aad
iret
stos
cdq
add
mov
gs
jle
fiadd
int
push
pop
setae
ret
or
and
movs
and
ja
repz
out
cmp
xor
pop
icebp
jmp
jmp
cld
sar
popf
into
mov
or
ror
fucomp
sar
(bad)
(bad)
cld
icebp
lds
imul
and
dec
inc
xor
or
in
lods
loopne
mov
push
xor
js
cmps
test
enter
test
popa
xor
sahf
popa
dec
or
mov
(bad)
mov
retf
cld
xor
(bad)
stos
xchg
out
mov
inc
cs
jmp
sbb
mul
aas
bound
std
xor
xor
pop
inc
sub
mov
pop
adc
cmp
jno
(bad)
imul
fidivr
inc
loop
leave
xchg
adc
cdq
sbb
mov
not
or
data16
adc
call
in
xchg
inc
sub
inc
loopne
xor
fadd
sbb
test
jns
xor
xor
stc
pop
or
mov
mov
xchg
sbb
fcom
loopne
mov
je
sbb
stos
repz
test
sbb
leave
(bad)
jne
nop
add
inc
cmp
add
test
sbb
addr16
push
xchg
pop
fmul
adc
xchg
frstor
fwait
inc
stc
popa
inc
dec
sbb
mov
cmps
mov
sbb
je
sub
int
pop
fcom
xor
fwait
xchg
dec
outs
add
in
out
xchg
sar
lods
push
shl
inc
ds
sti
cmp
dec
aas
mov
shr
cld
or
rcr
(bad)
cdq
fist
mov
call
das
jg
lea
add
sub
stos
(bad)
rcr
xor
ss
sub
adc
fucomip
iret
xchg
cmps
xchg
push
nop
mov
adc
dec
xlat
fld
loope
ror
and
jmp
add
shl
mov
xchg
push
out
test
ss
int3
sbb
jp
(bad)
mov
pop
sub
xor
pop
jno
pop
es
addr16
imul
mov
idiv
data16
mov
test
loop
xor
cmp
jne
cli
ja
div
sub
xchg
test
mov
jnp
and
rcr
cmp
fcomp
cmc
mov
arpl
sbb
or
loopne
repz
cmp
mov
mov
xchg
int
test
clc
mov
call
mov
out
enter
fidiv
and
mov
jbe
cmp
and
bound
pop
xlat
mov
sub
add
dec
clc
ror
push
inc
loop
dec
retf
idiv
xchg
add
sbb
jno
jnp
daa
imul
mov
mov
fcmovb
sub
fcom
not
jg
xchg
arpl
stos
inc
rcr
fcmovne
movs
inc
jmp
mov
in
in
les
cmp
mov
fisubr
call
loope
or
xchg
jnp
(bad)
jno
mov
call
push
push
lahf
aam
pop
mov
inc
push
adc
stos
or
test
aad
push
test
les
cmps
jg
inc
mov
and
xchg
into
call
mov
(bad)
aas
test
xchg
sbb
add
imul
and
adc
pop
mul
dec
jg
fnsave
in
aad
add
loope
lock
pop
ins
dec
push
lods
outs
stos
push
retf
sbb
inc
jae
stos
(bad)
outs
dec
or
push
cmp
aad
in
xchg
push
je
(bad)
mov
mov
mov
xor
ja
jmp
mov
cmc
mov
dec
and
jno
iret
loop
cmp
out
lea
pop
and
enter
mov
sub
sbb
(bad)
arpl
js
sar
mov
fidiv
cmc
or
dec
test
mov
std
iret
push
push
shl
xchg
push
cdq
jne
cmp
sbb
enter
push
xor
jb
sar
aad
pop
push
sbb
dec
pop
inc
adc
mov
ret
repnz
test
loope
pop
les
hlt
push
adc
jae
jns
mov
xchg
ja
add
mov
jae
or
fistp
outs
pop
mov
push
ret
gs
repz
popa
fstp
lahf
retfw
fnstcw
test
bnd
and
loope
cmp
(bad)
mov
or
xor
jle
sbb
inc
dec
out
mov
nop
dec
sbb
fisubr
scas
mov
jecxz
mov
int3
les
or
shl
inc
mov
sub
sbb
add
call
add
jge
fwait
mov
aaa
xchg
xchg
lds
push
or
and
cmp
xchg
mov
retf
sbb
sub
mov
fistp
fadd
in
cs
addr16
inc
jo
call
test
cmp
and
(bad)
mov
mov
cmp
mov
xchg
xchg
scas
jp
jo
add
repnz
inc
loope
xchg
sbb
out
xchg
xchg
fs
xchg
sti
lds
cmp
push
pop
dec
inc
cld
in
inc
add
cmps
stos
sub
push
loopne
scas
sbb
fxch
add
xchg
inc
mov
mov
sub
mov
test
dec
aas
test
dec
pushf
js
mov
addr16
and
add
and
je
ins
ins
add
mov
out
cmp
push
mov
adc
(bad)
push
popf
jp
and
cmps
push
and
xchg
cmp
mov
dec
mov
mov
popf
cmps
out
inc
fdiv
icebp
dec
sbb
je
scas
push
push
push
fadd
loopne
je
dec
sub
scas
lds
push
lods
dec
mov
repz
push
push
aaa
cmc
mov
mov
in
cs
inc
cmps
dec
sub
in
mov
(bad)
mov
and
jmp
fcom
dec
add
cmp
and
cmp
call
pop
xchg
or
pop
add
sahf
jbe
mov
(bad)
pop
cmp
iret
aas
shr
fs
lock
in
sbb
add
out
je
xchg
xchg
sbb
xor
sbb
sti
rcr
lods
cld
mov
push
adc
mov
jge
xchg
ret
pop
add
adc
xchg
xchg
jle
out
xchg
sbb
jl
ins
outs
test
jecxz
bound
ret
inc
xlat
sub
push
jge
xor
mov
push
cmps
stc
popa
loopne
out
inc
fs
cmp
xor
pop
outs
xor
dec
sbb
je
mov
mov
sub
push
and
pop
and
movs
dec
test
jmp
int
sub
dec
inc
shl
ror
lods
xor
jle
xchg
daa
inc
out
scas
cmp
(bad)
outs
repz
aas
and
cmp
in
add
iretw
push
jge
sbb
movs
inc
(bad)
rol
scas
inc
inc
sbb
or
aad
xchg
(bad)
mov
cld
inc
fidiv
inc
daa
ss
ret
iret
mov
leave
jo
push
mov
inc
xor
test
add
jle
aad
std
(bad)
hlt
fimul
and
fst
push
and
bound
push
arpl
imul
inc
outs
ror
and
push
or
(bad)
rcr
inc
xchg
mov
aad
outs
pop
adc
mov
add
jae
call
mov
fwait
add
stos
xchg
loopne
dec
push
jo
clc
sbb
sti
cs
test
jmp
adc
mov
mov
lods
test
or
cmps
mov
ret
push
and
cmp
shl
aad
out
(bad)
jge
pop
shl
fadd
jge
inc
add
pop
loopne
cwde
sub
and
mov
(bad)
shr
sbb
jbe
outs
ror
jae
imul
pop
into
add
cmp
fwait
aam
mov
in
jp
and
inc
push
mov
push
std
xchg
out
push
mov
inc
(bad)
aas
mov
adc
jecxz
and
sub
xor
rcr
std
xchg
repz
add
xchg
inc
push
inc
mov
cmp
cmp
js
into
add
or
or
pusha
or
mov
mov
addr16
mov
aaa
xor
mov
push
mov
jo
shl
mov
sahf
xchg
popf
mov
mov
mov
cmp
xor
out
inc
cmp
mov
xchg
or
stos
bound
repnz
sbb
mov
arpl
or
cmp
mov
outs
fild
test
and
cmp
in
(bad)
xor
hlt
jmp
sbb
aam
(bad)
sbb
pop
lods
rol
mov
jno
int
movs
loope
outs
jo
mov
mov
sbb
adc
or
xchg
test
pushf
push
jmp
xor
mov
cld
out
and
in
jnp
mov
aas
test
imul
retf
fcmovu
fwait
aas
lock
arpl
lods
fidiv
fisubr
(bad)
fisub
bnd
sbb
mov
inc
jmp
mov
cmp
sbb
lahf
jnp
test
jle
(bad)
scas
icebp
or
repz
pop
popf
mov
cmps
sbb
retf
mov
cwde
pusha
fist
mov
xchg
jp
lods
adc
cmp
xlat
icebp
add
aad
leave
sahf
cs
ins
cmp
cmp
and
jge
into
adc
sbb
or
jb
ret
jb
in
xchg
mov
mov
jae
into
inc
(bad)
fbstp
popf
pop
cmp
cs
iret
mov
jb
shr
sbb
xchg
sbb
or
cmps
sbb
or
push
mov
push
push
ins
pop
mov
and
repnz
stos
push
xor
pop
xor
icebp
(bad)
adc
cmps
and
push
adc
adc
sahf
movsx
jl
dec
jmp
dec
sahf
jle
aaa
icebp
mov
cwde
sbb
jp
fs
adc
jo
jmp
jne
cwde
inc
xchg
fs
fist
hlt
jecxz
out
fdiv
adc
ins
inc
(bad)
mov
sbb
fiadd
ins
(bad)
jmp
rcr
call
jge
fwait
jbe
adc
xor
in
push
arpl
xchg
push
and
test
and
out
push
cmp
in
jmp
adc
jecxz
sbb
mov
sbb
cdq
mov
and
pop
xor
push
sub
push
jmp
(bad)
pop
dec
fdivr
xchg
sub
retf
jnp
gs
and
xlat
out
(bad)
out
icebp
aaa
jmp
aas
dec
(bad)
pop
mov
or
jns
add
sbb
or
mul
sete
mov
(bad)
sar
test
jb
fbstp
iret
lea
lods
push
cmp
imul
clc
xor
xor
lods
scas
dec
xor
call
and
adc
xchg
mov
mov
leave
sub
push
ficomp
cmp
or
ds
xor
push
in
cmp
scas
pop
or
lock
pop
aad
sub
adc
gs
ss
test
imul
mov
pop
inc
add
cdq
push
push
ds
leave
lods
cmp
pop
mov
mov
or
or
es
mov
int
cmp
mov
in
push
pop
bound
jne
adc
inc
mov
add
pop
scas
cmp
add
ret
dec
jno
stos
or
push
jbe
mov
mov
lock
xchg
mov
mov
aad
sub
outs
sbb
push
add
es
adc
xchg
ds
sub
sbb
aas
jno
call
cmps
daa
stc
scas
cmps
aad
push
popa
cwde
movs
cmc
sbb
mov
or
add
retf
mov
sti
add
stc
ret
je
cmp
imul
(bad)
pop
add
mov
mov
xor
pop
outs
mov
out
jne
cli
test
pop
jnp
adc
jo
mov
frstor
jns
adc
(bad)
in
dec
loop
popa
jl
adc
jo
rcl
mov
xchg
jb
cmp
clc
ins
mov
out
mov
push
fcom
push
adc
push
shl
out
loop
add
mov
jno
cwde
pop
xchg
sbb
inc
in
imul
outs
jo
mov
pop
hlt
sbb
in
mov
xor
stos
sti
adc
clc
pop
jbe
iret
sub
mov
int3
mov
neg
push
ret
jae
sbb
inc
adc
cdq
stos
sbb
dec
lahf
call
or
cmp
jns
jnp
retf
or
lahf
adc
pop
mov
cmp
and
pop
jb
or
fldcw
sub
scas
rcr
sbb
adc
push
jge
int3
(bad)
mov
punpckhbw
das
push
neg
cld
fbld
add
mov
sti
push
jno
lods
or
cmp
aam
dec
pop
test
push
daa
add
pop
or
ficomp
pusha
lea
call
ss
sbb
cli
mov
jae
dec
dec
or
shr
std
push
jle
sbb
cmp
cmps
pop
jmp
mov
push
jae
es
push
stos
add
cli
call
test
jmp
fs
leave
aam
adc
leave
loop
retf
enter
(bad)
dec
inc
nop
dec
fcmove
pop
adc
push
fldenv
or
adc
cmc
fnclex
popf
(bad)
(bad)
das
inc
or
ds
jae
mul
or
ins
jle
sub
or
xor
test
inc
dec
add
xchg
addps
mov
ss
push
sbb
mov
xchg
cmps
daa
jo
push
sub
and
or
std
jbe
sub
not
and
bound
jo
test
add
addr16
pusha
sbb
jo
not
mul
push
(bad)
repnz
int3
mov
aas
xchg
dec
leave
sbb
dec
dec
pushf
xchg
lds
std
sub
jb
sbb
imul
xor
arpl
inc
in
test
pop
mov
add
adc
imul
push
fbld
(bad)
mov
fnsave
inc
jae
push
xor
cs
pop
movs
cmp
and
mov
enter
retf
mov
cs
mov
ja
sub
pop
dec
push
sub
and
dec
aam
fnsave
sub
inc
mov
not
movs
sub
imul
mov
in
jne
add
icebp
(bad)
jmp
fwait
xor
dec
js
test
popa
mov
sub
sub
and
cmp
shr
and
sub
fwait
aas
test
les
fild
call
xchg
or
jp
int3
mov
mov
mov
mov
mov
fs
icebp
or
xor
sub
movs
pop
dec
loope
fild
jmp
rcl
inc
pop
pop
mov
xor
popf
mov
or
jmp
pusha
xor
dec
movs
pop
mov
imul
fadd
jle
enter
ror
out
push
mov
cdq
adc
outs
mov
movs
test
ret
ret
(bad)
mov
lods
sub
int
inc
ret
push
inc
xor
cld
dec
xor
clc
pop
dec
nop
adc
dec
adc
add
lock
dec
sub
sbb
inc
push
add
dec
je
or
cdq
xchg
ss
loopne
dec
pushf
dec
pop
je
jb
fdiv
aas
adc
adc
ins
jp
ins
movs
lods
sub
pop
cmp
adc
adc
jbe
in
push
movs
std
cs
adc
fcom
hlt
addr16
pop
sbb
xchg
inc
sar
mov
mov
and
ins
scas
push
mov
jmp
pop
call
or
pop
inc
scas
xor
jecxz
cmc
push
mov
cmps
enter
or
mov
cmp
sub
xchg
neg
fmul
pop
jge
inc
mov
and
mov
gs
or
not
leave
cmp
dec
out
test
repnz
arpl
into
fbld
push
sub
add
sub
pop
add
xor
adc
mov
fmul
sbb
add
mov
mov
xchg
cmp
jnp
in
add
dec
mul
fidivr
fwait
inc
jbe
loope
sbb
bound
dec
or
(bad)
aad
retf
fucom
mov
or
dec
dec
mov
cdq
pop
(bad)
jmp
add
pop
(bad)
ficom
xchg
fisttp
xrelease
(bad)
retf
mov
sub
xchg
dec
xchg
dec
ja
lock
scas
call
pop
mov
xor
fs
and
and
fbstp
outs
aaa
sti
ret
push
cld
imul
mov
xchg
and
mov
mov
jle
xchg
sub
mov
movs
jb
movs
and
ja
push
sub
ret
sub
(bad)
(bad)
les
jne
aas
inc
or
aam
cmp
jae
ret
mov
popf
cmp
adc
(bad)
jae
pop
imul
and
ins
jmp
cwde
jo
pop
lock
dec
inc
xchg
xchg
inc
pop
lea
out
icebp
add
cmps
push
push
rcl
rcr
es
lock
hlt
fmul
xchg
jg
xor
and
cdq
je
inc
push
scas
xchg
lahf
xchg
xchg
adc
ror
scas
aam
(bad)
iret
daa
test
xor
inc
pop
pop
cmp
xor
je
cmp
cmp
jb
sahf
mov
adc
push
cs
push
xchg
and
cmp
aas
cmps
jno
sub
inc
mov
fldcw
mov
push
je
cmp
mov
cmpxchg8b
add
out
cmp
(bad)
aaa
and
sub
cmp
sub
cs
mov
cld
jne
out
mov
bound
call
cmp
cmc
xor
bound
push
cvtpi2ps
(bad)
aad
pop
cmp
push
pop
std
int
add
xchg
cmp
mov
xchg
jno
(bad)
xor
jge
mov
adc
addr16
inc
xchg
push
pop
inc
mov
add
inc
dec
inc
fisubr
pop
call
sar
loop
xchg
xor
call
inc
sub
cdq
retf
rcr
in
mov
or
hlt
inc
cdq
mov
outs
cmp
popa
adc
xchg
cmp
imul
loop
mov
inc
push
sub
add
(bad)
test
mov
inc
mov
add
cmp
adc
mov
push
mov
mov
push
xor
adc
pusha
pop
push
pop
cmc
adc
sbb
jg
ret
fcomp
das
and
add
sub
imul
in
sub
jecxz
pop
or
mov
out
outs
cmp
(bad)
std
xchg
stc
sbb
sub
adc
jo
and
out
mov
jecxz
fistp
push
mov
mov
out
pop
das
scas
jns
int3
sar
fist
mov
xchg
or
loopne
ins
or
xor
mov
rol
lea
aam
adc
push
je
lock
dec
cdq
jle
frstor
int3
mov
dec
push
sbb
fnstenv
push
and
call
mov
in
mov
pop
int3
inc
pop
mov
int3
xchg
jle
cmp
scas
fwait
push
mov
pop
lods
repnz
imul
mov
sub
jmp
out
pop
jecxz
dec
test
xor
ins
cmp
and
or
sti
iret
(bad)
dec
dec
fstp
push
cmps
pop
xchg
cmc
lods
ds
pop
cmp
pop
ds
ins
out
test
mov
jae
inc
nop
sub
std
xchg
or
fst
xor
test
hlt
mov
aam
mov
or
fsub
dec
sub
stos
inc
cs
ror
das
test
sub
data16
add
inc
add
jne
les
adc
jl
sub
add
div
mov
dec
and
dec
mov
psubsb
mov
shl
mov
xor
cld
movs
lahf
aam
push
cmp
dec
sub
scas
outs
nop
xlat
xor
test
ss
lods
pop
mov
lahf
jecxz
mov
in
or
leave
dec
lods
push
fcom
nop
out
aaa
rol
enter
popa
adc
or
pop
xchg
mov
pop
inc
(bad)
fld
je
dec
fiadd
movs
jmp
test
fs
push
add
mov
imul
pop
enter
mov
mov
ficomp
push
call
(bad)
mov
mov
sbb
daa
adc
movs
aas
leave
xchg
push
cmp
test
dec
jae
bswap
dec
lahf
nop
les
xabort
jnp
arpl
lods
dec
pop
ins
jo
cld
and
xchg
dec
in
and
pop
mov
inc
pushf
fsub
in
cmp
push
popf
mov
iret
or
jno
sti
inc
mul
push
cmps
int
pop
adc
mov
fldcw
cmps
mov
aam
xchg
adc
in
fsub
popf
cmp
call
cdq
rol
mov
shl
cmp
xor
add
xor
loope
in
jge
jmp
lods
out
sbb
ret
or
fstp
sbb
je
push
push
retf
xchg
mov
(bad)
pop
or
jbe
mov
pop
jb
dec
popa
sbb
inc
cmp
push
shr
sub
ds
inc
pop
inc
in
sbb
push
adc
nop
or
push
lock
fucomi
and
inc
into
cmp
scas
cdq
or
add
dec
jne
fbld
or
push
add
xchg
fstp
ss
std
xlat
scas
imul
cmp
sub
int
inc
inc
movs
test
sub
sbb
push
stos
or
xchg
sub
pop
movs
cmp
add
cmp
sbb
lea
push
aaa
clc
repz
dec
jne
lods
sub
movs
dec
lahf
div
push
cmp
push
push
sbb
and
cmp
je
xchg
dec
bound
mov
mov
int
(bad)
xchg
add
mov
gs
mov
in
imul
iret
(bad)
xlat
cmp
xor
test
je
sbb
bound
mov
jmp
loopne
test
leave
loope
idiv
add
add
xor
xchg
data16
push
jecxz
lock
sub
(bad)
ins
xchg
inc
push
fprem
outs
xchg
stc
xlat
in
sub
fstp
cmps
lds
mov
mov
test
rcl
dec
lods
daa
inc
jle
lahf
sub
fadd
pop
mov
cwde
xor
(bad)
nop
js
push
mov
loop
in
add
addr16
ja
push
out
je
jecxz
xchg
rol
jmp
sub
adc
mov
mov
pop
js
fidivr
repnz
jno
outs
cmp
ins
and
dec
std
add
or
cmp
int3
int3
push
clc
(bad)
xlat
test
in
lock
icebp
cmp
jmp
jbe
dec
lods
ret
xor
push
pop
dec
mov
mov
call
or
lods
scas
or
sub
daa
jo
pop
cmp
add
ror
mov
push
xor
test
stos
iret
(bad)
into
retf
rcl
jl
xchg
mov
mov
arpl
ins
fadd
pop
or
sub
fsubr
cmp
outs
out
or
push
xchg
mov
inc
mov
xor
push
outs
hlt
inc
into
scas
xor
in
inc
jp
xor
retf
es
pop
fs
mov
mov
sahf
xchg
xchg
inc
test
int3
cmps
sbb
and
cmp
xchg
or
xchg
(bad)
mov
cmc
and
pop
xor
mov
add
cdq
fimul
mov
stos
(bad)
inc
call
adc
ficom
push
(bad)
sub
lods
cmpps
mov
mov
dec
inc
repnz
lds
int
mov
lahf
imul
xchg
pop
jb
aad
int
pop
jmp
aam
adc
cli
cmp
sbb
cmp
stos
mov
sti
push
and
dec
stc
inc
sar
ret
inc
lds
mov
loopne
push
add
mov
push
add
sbb
pusha
in
fwait
les
neg
les
add
aam
fwait
jl
test
mov
inc
inc
hlt
xchg
push
ins
cmps
adc
pop
rcl
cmp
mov
mov
out
gs
aad
dec
xchg
fdiv
scas
daa
hlt
push
dec
xor
pop
mov
mov
lods
cli
cmp
xlat
pushf
cmp
adc
psubusw
cld
retf
ins
aas
mov
adc
xchg
test
or
xor
in
pop
xchg
(bad)
sub
div
in
pop
jmp
add
dec
or
fdivr
shl
sbb
pusha
xchg
pop
dec
pop
push
inc
push
ins
pop
sub
imul
mov
je
ffree
fisub
xchg
hlt
sbb
stos
xlat
inc
test
fisubr
jbe
add
jg
dec
call
aad
(bad)
and
icebp
sub
xor
sub
(bad)
mov
mov
or
push
mov
mov
in
in
push
cli
or
and
jmp
test
fldcw
jecxz
mov
adc
(bad)
loopne
mov
ror
scas
pop
push
mov
mov
fcom
xor
into
sbb
mov
dec
mov
stc
cmc
popa
adc
sub
enter
neg
sub
adc
popa
sub
cmp
pop
adc
retf
mov
mov
aad
mov
test
jg
jo
(bad)
sahf
mov
in
inc
ror
test
inc
add
ficomp
add
pop
xor
pop
ror
daa
jae
sbb
movs
mov
leave
jb
cld
inc
pop
cmp
fdiv
push
(bad)
pop
call
fs
sbb
sbb
mov
sub
pop
mov
adc
pop
xor
inc
jge
ins
add
pop
in
xchg
and
fisttp
sbb
stos
lock
mov
cdq
popf
js
jbe
jne
sbb
add
ficomp
adc
(bad)
neg
and
call
rcr
mov
mov
mov
ss
cli
movs
mov
scas
sti
jp
test
mov
rol
pop
nop
jns
ins
mov
push
sub
(bad)
in
xor
in
fcomp
lds
cli
adc
iret
mov
mov
lods
pop
xchg
lock
jge
inc
mov
das
loop
aas
int3
dec
scas
clc
mov
or
cwde
int
xchg
push
inc
and
shl
lahf
adc
(bad)
imul
loope
mov
imul
aas
mov
push
dec
inc
leave
mov
mov
mov
adc
ds
call
sbb
int
pop
scas
je
mov
ja
loopne
mov
push
dec
shl
daa
nop
push
jle
ja
test
pop
ret
in
mov
setae
pop
int
pop
inc
jl
(bad)
dec
jb
push
add
pop
push
push
cs
pop
test
sub
stos
test
pop
xchg
xor
mov
adc
mov
push
js
retf
jno
cmp
ins
or
mov
adc
and
das
jb
xor
mov
jmp
out
cmps
adc
lea
repnz
sti
and
data16
sub
fst
fdivr
mov
mov
rol
push
adc
push
sbb
dec
imul
std
rcr
out
bound
xor
dec
mov
or
mov
push
mov
or
sub
sbb
test
xor
inc
pusha
enter
mov
pop
repz
dec
xor
loop
add
add
add
loopne
ficom
enter
dec
mov
dec
pop
jno
(bad)
sbb
mov
xchg
lock
es
jl
outs
inc
fdiv
sub
jns
or
cmps
push
out
ins
mov
mov
dec
xor
pop
pop
stc
pop
ins
arpl
push
retf
ds
mov
(bad)
scas
and
imul
icebp
mov
pop
out
imul
adc
push
add
jae
out
lds
push
jmp
jo
outs
xchg
jmp
popf
mov
and
pop
jbe
inc
sbb
jo
add
inc
call
daa
popa
mov
(bad)
mov
ja
imul
or
mov
fld
mov
aaa
add
es
pop
pop
arpl
mov
test
dec
addr16
sub
call
xor
rcr
xor
icebp
rcr
les
int
push
in
mov
loopne
pfcmpgt
shl
xchg
cmp
adc
jle
enter
(bad)
cmp
add
iret
cmps
push
(bad)
xchg
xchg
sti
ins
jge
dec
movs
inc
sbb
ss
or
cmp
or
cmp
mov
(bad)
mov
stc
nop
adc
jmp
jno
dec
ja
aaa
enter
push
mov
call
xchg
add
pop
in
loop
and
(bad)
mov
pusha
or
push
rol
jb
cmp
xchg
ins
pop
jno
inc
cmc
ja
push
fst
jmp
jno
shl
jge
mov
fisub
inc
jno
shr
mov
xchg
std
imul
hlt
mov
mov
out
jnp
repnz
xor
(bad)
xlat
(bad)
mov
pusha
out
pop
sahf
xor
cmovae
jp
ret
push
test
shl
loopne
and
push
push
adc
(bad)
nop
not
sar
add
int3
sbb
sub
sub
cld
cli
(bad)
aaa
fld
lods
iret
mov
mov
je
mov
out
iret
jno
jne
sahf
and
mov
mov
dec
sbb
das
ja
clc
adc
dec
xchg
sub
xor
inc
mov
pop
rcr
push
fild
lahf
(bad)
out
stc
js
inc
out
cmp
cmp
clc
xchg
inc
iret
ss
ficom
xchg
push
dec
in
outs
push
jmp
(bad)
adc
shl
push
sub
test
movs
adc
outs
sbb
dec
outs
sub
and
mov
lea
dec
mov
js
sbb
push
clc
push
pop
xchg
inc
xor
mov
xchg
std
jb
int3
xchg
ret
add
and
mov
dec
sub
data16
sahf
or
and
pop
or
dec
mov
pop
xchg
adc
stos
sti
mov
nop
inc
js
mov
mov
in
mov
cmps
inc
pop
xchg
test
pop
xchg
xchg
test
scas
rol
out
sti
nop
fidiv
je
nop
repnz
mov
jbe
idiv
add
test
jmp
stos
jg
cmp
xchg
xchg
or
add
and
pop
fadd
imul
pop
ficom
inc
int
sar
popa
retf
int3
xchg
call
sar
ret
lock
movs
mov
adc
sub
popf
mov
adc
pushf
hlt
call
xchg
out
sahf
mov
jae
xchg
and
cmp
loopne
mov
mov
or
cmp
add
mov
xchg
pop
inc
popf
ja
aam
sahf
mov
mov
sti
xor
sub
and
int3
cmp
inc
push
cmps
dec
gs
sbb
xchg
lahf
jge
pushf
and
dec
lods
outs
or
dec
or
fstp
sub
test
ins
mov
inc
mov
data16
popf
xor
in
loop
push
xchg
xchg
fwait
mov
pop
cmp
mov
push
ror
adc
add
fsub
cwde
cmc
pop
cmp
or
loopne
xor
inc
ret
mov
pusha
out
repz
pop
lods
xor
or
cmp
cmp
adc
jb
fnstcw
add
daa
mov
int
sbb
jb
cs
mov
or
cmp
inc
xor
add
ss
jmp
icebp
daa
mov
mov
test
pop
push
or
xor
movs
xor
add
cmp
xchg
mov
ret
fnstcw
adc
(bad)
xchg
adc
xchg
mov
sub
daa
cmp
mov
movs
jne
out
(bad)
cmc
add
adc
cmps
add
sbb
xchg
cmp
xchg
movs
int
inc
jle
retf
inc
pop
test
repnz
(bad)
loopne
aam
fistp
sub
pop
pop
mov
xchg
xchg
(bad)
jne
cmp
in
mov
mov
adc
inc
mov
mov
test
(bad)
push
add
arpl
(bad)
in
in
cmp
mov
cmp
add
test
les
ds
push
sahf
imul
jmp
dec
adc
je
movs
leave
repz
pusha
mov
gs
dec
icebp
cli
push
lock
clc
dec
scas
test
cmp
out
or
mov
xor
cmp
push
imul
mov
loop
leave
inc
loopne
jl
repz
fistp
std
dec
(bad)
hlt
jmp
jg
repnz
(bad)
(bad)
mul
ins
inc
cmps
push
imul
sbb
or
(bad)
mov
mov
in
mov
dec
mov
fwait
clc
fwait
dec
shl
push
jmp
adc
xchg
push
rol
fstp
int
push
cmp
cmovns
rcl
adc
xor
add
jge
jge
add
out
jmp
jne
fidiv
in
dec
aad
mov
test
repnz
dec
fld
dec
jmp
and
mov
in
fsub
mov
pop
mov
lods
in
sub
ss
push
mov
in
or
xor
test
push
cmp
sbb
sub
loop
retf
call
sub
sub
mov
fiadd
icebp
(bad)
xor
jnp
mov
cmp
mul
mov
mov
nop
ss
dec
jns
add
jae
add
add
xchg
(bad)
out
scas
sbb
inc
adc
retf
sub
xor
(bad)
aaa
jmp
les
dec
and
dec
adc
fcomp
mov
push
or
das
inc
outs
shr
push
fsubr
mov
cmc
mov
push
or
scas
ins
xor
mov
inc
jl
xchg
xchg
xchg
cmp
push
jns
scas
add
add
push
add
pop
enter
dec
ja
test
icebp
in
push
push
sub
lods
(bad)
add
outs
mov
in
mov
mov
stc
(bad)
retf
jl
cmp
mov
cld
sti
pop
lds
adc
cmc
rcr
xor
in
test
cmps
cdq
shl
test
or
repnz
inc
das
mov
movs
in
cmp
addr16
(bad)
cmp
dec
mov
out
xchg
jle
leave
mov
loopne
in
cli
ins
mov
mov
cmp
inc
push
mov
ret
mov
pushf
cmps
test
cmp
jns
aas
cmp
mov
test
push
in
lods
lea
sub
cmp
aam
dec
retf
into
sub
push
xchg
and
xor
int3
sbb
cmp
adc
sbb
mov
shr
(bad)
push
cwde
add
sbb
mov
movs
and
mov
sbb
cmp
xor
xchg
call
(bad)
mov
iret
std
mov
je
mov
in
retf
cmp
jne
hlt
movs
or
mov
mov
loop
push
fs
pop
(bad)
aad
pop
retf
mov
xchg
lea
fidivr
arpl
inc
push
aaa
ins
jo
in
repz
fst
xor
out
adc
inc
shl
loope
mov
mov
mov
rcr
add
pop
es
call
inc
pushf
stc
dec
push
push
sbb
mov
add
pop
sbb
fsub
rcl
hlt
xchg
ror
jo
push
nop
or
aaa
(bad)
pop
jle
enter
pushf
ss
in
dec
pop
in
call
mov
pop
outs
pusha
fadd
mov
hlt
dec
clc
jno
push
aas
bsr
add
mov
cmp
sub
bound
mov
in
out
std
push
inc
sbb
(bad)
arpl
mov
into
pushf
stc
outs
xor
cmps
mov
xor
scas
cmps
xor
xor
cmp
sbb
gs
push
ins
in
ror
mov
cwde
xor
sbb
int
xor
cmp
mov
jns
add
push
retf
jge
leave
bound
aam
pop
in
or
mov
mov
push
and
push
ret
call
sti
mov
js
mov
dec
xlat
retf
ret
aaa
jo
ds
mov
test
dec
repnz
inc
inc
out
mov
rol
iret
fcomi
movs
popfw
jns
dec
scas
xchg
(bad)
push
pushf
pop
inc
aaa
in
(bad)
out
(bad)
aaa
inc
outs
xchg
jns
mov
repz
xchg
or
inc
not
or
sbb
call
jae
enter
jo
jle
sub
mov
jecxz
adc
pushf
sbb
sbb
std
jmp
nop
mov
imul
adc
mov
inc
add
cmp
mov
gs
push
ds
mov
pop
jmp
js
ins
cmps
out
aaa
inc
push
rcr
fwait
jmp
test
pop
pop
es
cwde
inc
push
jge
rcr
loope
inc
or
in
push
add
popa
pop
add
dec
pop
sub
mov
sbb
xor
mov
mov
xchg
bnd
sbb
mov
adc
add
adc
pop
push
inc
fcmove
sti
push
pop
jne
int3
inc
jge
cmp
pop
mov
gs
mov
xchg
cmp
shr
(bad)
ja
xchg
stos
loopne
daa
rcl
xchg
lahf
mov
(bad)
cld
inc
adc
fsub
sub
fsubrp
mov
xor
fbstp
push
xchg
mov
ficomp
cmps
stos
cmp
sub
cdq
or
ror
mov
(bad)
(bad)
in
mov
push
scas
push
inc
cvtdq2ps
inc
mov
sar
push
jbe
dec
arpl
repz
or
mov
out
xor
jbe
ins
(bad)
cmps
sbb
sub
cmp
mov
and
xor
sbb
stc
pop
xchg
outs
fistp
popf
aaa
retf
cmp
in
jle
fbstp
mov
int
enter
hlt
sub
fnsetpm(287
fprem1
sub
mov
jno
jbe
mov
pusha
stc
fs
mov
adc
mov
jb
pushf
repz
mov
cmc
not
jae
dec
mov
mov
leave
bound
sbb
(bad)
fwait
repz
stos
pop
test
fld
lock
(bad)
xor
loope
jp
into
sbb
xchg
or
icebp
je
fwait
fwait
pusha
sbb
mov
addr16
mov
sbb
pop
or
daa
dec
cmp
pop
mov
xor
(bad)
xor
outs
sub
stc
mov
push
loopne
ret
sbb
lods
jp
fcomp
mov
dec
loop
aad
inc
(bad)
pop
test
sti
xor
jno
fidivr
adc
add
ror
inc
mov
pop
repz
test
ret
push
mov
xor
cmp
icebp
cmp
fldenv
pop
dec
cmp
jbe
push
popf
popf
out
lods
sub
inc
outs
or
bound
inc
pop
or
lods
fimul
push
or
(bad)
aam
dec
mov
pusha
test
retf
je
(bad)
in
sahf
xor
jmp
hlt
cld
jmp
push
sub
test
xchg
inc
cmp
loop
icebp
mov
dec
jp
mov
mov
fbstp
movs
push
pop
(bad)
je
arpl
mov
pop
or
aad
gs
mov
mov
mov
(bad)
jle
dec
sbb
dec
div
outs
int3
sbb
push
dec
rcl
lea
xor
ins
push
call
sub
fistp
push
pop
cmc
clc
or
mov
sti
shr
lea
mov
cmp
loop
xor
loope
push
hlt
into
jle
cli
add
add
cli
or
jmp
nop
fs
cmc
add
pop
cs
adc
sbb
stos
mov
int
sub
int3
mov
mov
rcl
das
popa
mov
stos
and
aad
add
sahf
mov
jecxz
push
cmp
(bad)
mov
call
jb
xchg
xchg
in
int3
push
mov
std
jbe
pop
add
xor
retf
aam
xlat
adc
pop
fnstenv
ins
jmp
xor
or
loop
mov
icebp
mov
dec
inc
dec
stos
cli
in
idiv
fcomp
fmul
jbe
ins
ds
cs
leave
gs
push
push
pop
iret
retf
aas
inc
push
sbb
add
xor
fwait
add
mov
sbb
retf
sub
push
aad
lea
in
test
cmp
inc
stc
mov
mov
sbb
ins
out
xor
jg
(bad)
aam
jle
push
movs
(bad)
jmp
cmp
jg
jbe
and
lds
jl
push
ret
mov
push
pusha
enter
cld
out
cmp
int3
gs
aas
out
push
push
aad
xchg
bound
ins
daa
std
sbb
test
cmps
unpckhps
test
jle
retf
das
xchg
stc
xchg
adc
jmp
ins
inc
dec
arpl
xchg
pop
popf
pop
(bad)
xchg
(bad)
aaa
pop
arpl
xchg
pusha
jns
movs
and
pop
(bad)
xchg
jg
imul
test
push
or
and
in
xor
dec
xor
ja
pushf
mov
sub
call
sbb
inc
retf
test
inc
cdq
mov
sbb
push
sub
inc
or
shr
icebp
aaa
dec
inc
enter
jnp
mov
mov
mov
add
push
push
adc
clc
xor
outs
dec
je
clc
fs
or
not
mov
fs
sbb
mov
and
xchg
ss
cmp
pop
push
ss
inc
mov
idiv
lea
mov
pop
sti
mov
inc
jmp
mov
retf
ret
push
imul
or
movs
outs
push
fld
adc
jmp
fadd
push
out
mov
sub
outs
inc
xchg
imul
imul
inc
add
neg
xor
test
movs
dec
sbb
jo
pop
sub
mov
xchg
rcl
xchg
push
ret
lahf
cld
xchg
adc
pop
sbb
cmp
fidivr
jge
sbb
fistp
mov
sub
das
in
xchg
aad
pushf
pop
sbb
repnz
aad
pop
and
xor
mov
in
stos
(bad)
sub
test
push
aad
push
out
fimul
mov
(bad)
dec
adc
push
xchg
xor
cmps
call
add
sub
test
dec
std
mov
xor
cmp
lahf
stc
push
js
jmp
pop
in
and
mov
cli
js
dec
(bad)
or
dec
enter
dec
mov
adc
xlat
out
mov
scas
sar
data16
and
push
inc
es
mov
out
inc
pop
or
xchg
and
cli
adc
jp
pop
push
and
jp
loop
jmp
sub
jmp
std
movs
mov
fdivr
mov
sub
add
sbb
retf
jbe
or
repnz
xlat
div
fistp
mov
data16
mov
into
(bad)
jmp
outs
int3
jae
int
and
fdiv
push
add
push
test
sbb
inc
outs
test
in
xchg
ret
fistp
mov
fsub
test
loop
xor
imul
repz
pushf
popa
mov
je
pop
pop
xchg
xchg
push
mov
push
test
mov
sub
and
pop
das
mov
test
daa
add
adc
leave
lahf
ret
mov
pop
out
push
sbb
fstp
fwait
(bad)
mov
push
push
test
inc
fnstsw
nop
mov
in
mov
mov
inc
pusha
jb
push
or
sbb
inc
cwde
mov
sub
pop
pop
sbb
sbb
adc
jmp
push
int
cmp
add
fcmovnbe
dec
inc
mov
sbb
int3
or
mov
adc
push
mov
mov
jmp
mov
sbb
xchg
adc
jg
jnp
int3
sbb
cmp
jle
mov
push
sbb
and
adc
or
add
fs
xchg
movs
addr16
adc
adc
outs
and
lds
mov
mov
out
cld
xor
imul
mov
pop
mov
cs
bound
shl
pusha
add
add
jge
jp
pop
xchg
add
ret
pop
and
sub
pop
xchg
mov
repz
clc
fstp
fldenv
fadd
jmp
push
or
aam
mov
sbb
sub
or
mov
dec
jb
mov
and
lahf
dec
sbb
xor
jg
jae
stc
add
inc
push
aad
mov
sar
dec
push
or
out
arpl
imul
aaa
or
inc
jmp
jb
repnz
test
inc
aas
cmp
in
xor
loopne
lahf
in
inc
imul
push
xchg
repz
and
cld
cmps
cmp
lods
push
pop
cmp
retf
xchg
adc
sbb
push
icebp
xchg
or
push
dec
inc
(bad)
(bad)
mov
clc
dec
iret
jecxz
out
cmp
cmp
mov
push
iret
mov
out
fadd
or
xor
xchg
add
adc
mov
lods
xchg
adc
ret
or
fcomp
addr16
mov
dec
or
jns
fbstp
sub
aad
aad
out
jecxz
cmp
jnp
es
jl
fdivp
inc
push
lock
dec
cs
in
xchg
cmp
mov
fst
jbe
lea
push
ins
mov
jl
mov
fbld
or
push
pop
outs
xor
lahf
nop
pop
mov
sub
outs
xor
sub
mov
leave
cmp
mov
lock
push
dec
pop
scas
dec
mov
lock
cs
adc
jecxz
mov
mov
push
mov
push
(bad)
setg
rcl
sbb
fmul
std
pop
punpckldq
and
sbb
inc
mov
pop
aad
mov
ret
jns
pop
cli
push
push
mov
dec
out
gs
inc
sahf
loope
sbb
push
add
in
cli
mov
cmp
out
sub
jge
popf
push
fmul
cmp
nop
jg
push
les
stos
movs
add
mov
loope
cmp
pusha
cmps
fisubr
test
aad
aaa
retf
and
mov
loope
xlat
out
adc
bswap
icebp
mov
pop
loop
daa
and
int3
jb
rcr
les
add
dec
test
add
cli
scas
fadd
rep
push
dec
push
xor
jbe
inc
addr16
add
mov
add
loope
mov
jg
out
fwait
xchg
xor
and
daa
mov
xor
inc
lods
pop
lea
std
adc
les
outs
rcl
push
cmp
ror
sar
test
xchg
sub
xor
pop
setb
or
push
cmovo
mov
xor
shl
neg
fs
inc
gs
out
and
mov
fadd
aad
xchg
sahf
addr16
xchg
push
sbb
cmp
test
aad
push
jmp
fbld
hlt
outs
out
call
movsx
cld
push
rcl
(bad)
jge
idiv
call
sub
test
xchg
out
das
adc
sbb
push
aad
lods
ret
pop
fld
pop
jl
pop
mov
sar
test
dec
shr
or
adc
sub
jle
stos
push
push
or
sub
les
imul
sahf
imul
shr
inc
mov
jno
sar
mov
nop
dec
or
mov
dec
fmul
push
ins
push
sbb
mov
jb
sahf
and
sub
jl
rol
retf
pop
mov
xor
iret
xchg
inc
shl
es
jns
pusha
fistp
movs
push
or
shl
stos
mov
jmp
adc
imul
inc
scas
sub
popf
adc
(bad)
and
jbe
xchg
xor
sbb
nop
call
sub
inc
mov
or
sub
out
adc
rcl
retf
jae
sbb
cmp
ret
cld
adc
cmp
pop
xor
sahf
mov
fmul
jl
cmp
jae
in
mov
sub
push
fs
outs
mov
jne
cdq
mov
add
sbb
xchg
fdivr
sub
push
cmp
mov
loope
add
cmc
hlt
mov
in
xor
jns
js
pop
or
ss
dec
movs
cmc
fucom
outs
fld
push
xlat
mov
mov
add
movs
inc
xor
cmp
pop
sbb
push
mov
mov
pop
inc
aad
out
jg
mov
add
in
mov
repnz
movs
push
mov
mov
hlt
push
cmp
pop
iret
and
inc
push
nop
mov
out
fisub
addr16
aad
xor
inc
mov
cmp
xchg
repz
aas
lock
rcr
mov
sub
call
mov
mov
push
dec
mov
mov
ror
and
jmp
shl
out
mov
mov
ins
scas
mov
dec
xor
in
and
test
(bad)
pop
mov
inc
stc
fldcw
pop
and
shl
stos
push
es
stos
ret
inc
or
ja
mov
pop
cmp
cwde
mov
and
lahf
xor
arpl
adc
xchg
fimul
and
xor
ins
sahf
fdivr
into
fbstp
cmc
pop
dec
lea
int
in
nop
cli
test
adc
mov
push
xchg
or
pop
(bad)
rcr
ror
iret
push
fdiv
push
call
push
xor
push
mov
lahf
rcr
mov
stc
pusha
cmp
cmp
rol
xor
mov
push
shl
pop
cmps
dec
pop
xchg
imul
popa
jne
ror
(bad)
ins
js
or
call
rcl
adc
adc
jl
adc
fst
jge
(bad)
and
ss
and
mov
dec
xor
adc
mov
jne
mov
movs
loope
push
push
in
mov
dec
mov
aad
rcr
xchg
shl
enter
or
adc
add
sahf
or
(bad)
retf
or
(bad)
jmp
mov
xchg
cmp
out
adc
push
mov
xor
jne
cwde
jg
cld
xor
movs
xchg
lea
lods
jbe
lods
leave
sbb
cmp
sub
xor
or
jns
(bad)
(bad)
dec
sbb
int
es
jae
shr
stos
mov
jmp
pusha
mov
and
pop
fnstsw
(bad)
fdivr
mov
pop
or
mov
sar
(bad)
(bad)
xor
fst
xchg
leave
pushf
mov
test
cmp
push
xor
xchg
jbe
pop
push
mov
int
add
and
out
pop
push
ss
in
or
inc
and
test
mov
sar
int3
mov
cmp
jns
clc
sub
leave
cmp
test
pop
xor
test
push
or
jns
outs
test
cs
clc
dec
jns
into
pop
ins
and
and
ins
cmp
inc
sub
and
shr
push
inc
fiadd
mulps
sbb
mov
mov
retf
leave
ds
pop
jle
mov
in
xchg
sahf
sub
cs
daa
into
add
inc
xchg
loop
dec
in
dec
(bad)
mov
adc
and
cmc
dec
pusha
hlt
mov
icebp
sbb
lds
outs
sub
pop
or
dec
sbb
mov
rcl
movs
ret
ja
pop
lahf
xchg
(bad)
cmp
xor
or
cmp
fst
es
jb
stos
ja
scas
bound
mov
aad
push
inc
lea
mov
sub
lods
repz
dec
lock
inc
push
cwde
push
dec
mov
add
mov
sbb
mov
call
pop
pop
mov
xor
shl
ja
inc
dec
cmp
push
push
out
dec
fcomp
popa
fnstcw
pop
loopne
popa
xchg
iret
movs
xchg
mov
inc
pop
dec
cwde
jno
(bad)
hlt
lock
outs
mov
mov
fwait
push
pop
sub
xchg
jecxz
jmp
mov
adc
repz
in
mov
jmp
add
arpl
rcl
neg
(bad)
cld
outs
stos
jge
repz
add
ret
pop
(bad)
mov
xor
inc
and
inc
cmp
ja
jnp
ins
je
cdq
aaa
ret
cmp
aaa
sti
dec
and
cld
cmc
rcr
cmp
cmps
xchg
scas
jno
(bad)
lock
rcl
imul
adc
xor
jnp
imul
mov
or
jbe
adc
movs
cmp
sub
dec
mov
test
dec
inc
xchg
adc
outs
idiv
inc
inc
pop
lods
cmp
aaa
add
test
dec
inc
mov
and
dec
jo
out
call
jg
adc
inc
cmp
test
sub
(bad)
loopne
clc
fiadd
jecxz
pop
mov
fldenv
inc
imul
jg
leave
imul
fdiv
push
xchg
out
and
sbb
mov
and
xlat
adc
pop
adc
inc
and
mov
movs
clc
mov
xchg
push
es
and
or
sbb
fisttp
leave
enter
dec
repnz
ret
lock
aaa
enter
vsqrtpd
xor
sahf
leave
mov
fld
mov
mov
pop
or
push
mov
cdq
jne
sub
or
aad
enter
mov
mov
fisub
in
inc
rcl
imul
mov
adc
mov
cmc
ret
xlat
pop
dec
xor
mov
and
(bad)
scas
test
inc
adc
xchg
test
or
or
cmp
dec
cmp
push
or
pcmpgtw
mov
cmp
push
mov
mov
jmp
mov
or
repnz
mov
sub
jmp
sahf
aad
mov
outs
cld
paddw
jo
jbe
clc
mov
(bad)
mov
ins
xchg
sub
cmps
sub
std
jmp
lds
mov
ror
call
push
ficomp
retf
mov
mov
xor
int
hlt
jae
mov
mov
mov
sub
(bad)
stc
out
sbb
mov
cdq
(bad)
adc
xchg
pop
das
mov
sahf
call
lods
ror
inc
out
xor
sbb
in
sbb
loop
idiv
(bad)
movs
pop
cmp
popf
or
das
sbb
shl
jle
test
call
cmp
sbb
in
scas
pop
movs
sar
jne
iret
repnz
pop
mov
cli
add
test
movs
repz
cmp
ins
jmp
retf
jecxz
xor
or
push
jns
int
jg
jns
int
and
jle
adc
mov
(bad)
(bad)
mov
std
add
retf
shr
adc
ret
sub
sahf
pop
jge
repnz
push
repnz
adc
jns
inc
xlat
sbb
mov
push
ins
shl
dec
mov
(bad)
jecxz
push
push
into
jecxz
adc
arpl
fwait
mov
xor
pop
into
inc
jo
mov
imul
push
mov
sbb
aas
inc
fbstp
lds
frstor
addr16
jp
mov
push
sub
lds
push
lock
aad
in
push
pop
sbb
add
push
xor
mov
das
push
fstp
dec
pop
cmp
inc
in
cmp
test
int
fisttp
inc
mov
pop
xor
iret
rol
stos
sbb
fiadd
movs
sub
mov
repz
pop
dec
or
lods
clc
retf
jge
adc
loope
out
jp
enter
xchg
pop
and
pop
int
fcom
mov
movs
nop
ja
ins
test
push
jecxz
cli
or
jl
push
stos
fs
call
xor
ds
mov
inc
repnz
cdq
mov
mov
repnz
sub
pop
iret
add
rol
jecxz
inc
jle
ret
movs
sub
push
es
rcl
mov
rcr
sub
pushf
jmp
jae
out
pop
sub
pusha
xchg
dec
xlat
xchg
pop
xchg
in
cmp
jecxz
fsubr
pop
retf
jmp
adc
jne
out
out
cmp
mov
sub
fs
(bad)
dec
inc
mov
ja
push
test
or
shl
or
test
jbe
test
xchg
lods
retf
sbb
inc
dec
add
jp
clc
arpl
ret
push
pop
mov
push
or
or
lahf
pop
cmp
add
cwde
jne
jbe
shr
ja
sbb
into
push
loop
fisubr
inc
cli
push
movs
or
mov
push
retf
imul
xchg
sbb
xchg
std
es
mov
mov
xchg
js
push
daa
repz
pop
mov
bound
mov
enter
sub
pop
mov
call
enter
cmp
inc
push
inc
pop
stos
add
call
sub
inc
dec
push
dec
push
imul
popf
in
retf
movs
pop
adc
shl
movs
mov
mov
adc
and
push
bound
jbe
dec
xchg
cmp
lods
rcl
push
xor
aas
lods
mov
adc
jb
out
or
pop
loopne
jns
(bad)
sbb
mov
jnp
push
pusha
(bad)
push
(bad)
mov
mov
jge
jno
aam
mov
xchg
js
pop
xbegin
ds
out
test
mov
test
ret
into
push
or
pusha
(bad)
ins
jge
clc
into
scas
xchg
jg
test
adc
inc
ss
aad
sbb
xchg
cmp
inc
popa
pop
pop
or
popa
mov
icebp
adc
rcl
scas
ins
inc
dec
sub
adc
xor
test
mov
pop
bound
add
in
pusha
pop
xor
jns
not
stos
sbb
jmp
(bad)
xchg
call
mov
inc
movs
jo
mov
xor
inc
sbb
scas
retf
scas
out
dec
add
pop
sahf
add
dec
inc
sub
inc
sub
mov
mov
into
mov
ins
sbb
adc
(bad)
push
mov
in
jnp
inc
fsub
mov
out
inc
mov
mov
cmp
fimul
mov
lahf
std
test
(bad)
inc
lock
clc
pop
bound
icebp
mov
push
mov
(bad)
adc
(bad)
fisttp
test
mov
push
arpl
push
aad
(bad)
mov
repnz
xor
xchg
xor
aas
cmovns
mov
push
jns
push
not
lock
cmp
inc
sbb
adc
fcomi
jmp
mov
add
mov
push
cmp
xchg
rcl
push
cmp
push
into
movs
pop
sar
cs
pop
push
mov
mov
cmps
pushf
jl
pop
pop
mov
cwde
leave
push
fcomp
pop
dec
xor
pop
push
jecxz
adc
into
movs
cmp
mov
add
addr16
inc
jno
and
push
mov
jnp
scas
sti
aam
bound
pop
xlat
addr16
or
dec
xchg
mov
in
packuswb
mov
arpl
mov
or
adc
adc
xor
mov
movs
push
xchg
aam
cmp
sub
jns
sbb
(bad)
movs
cmp
cdq
mov
ja
pop
cmp
in
pop
outs
shl
test
jbe
cmp
jo
add
sub
adc
jp
(bad)
cdq
call
mov
pop
adc
out
mov
mov
push
push
xchg
out
mov
jl
jae
jp
(bad)
je
sti
sbb
jge
pop
in
push
sbb
adc
lds
pop
mov
out
lds
adc
pop
fld
mov
inc
and
cmp
je
aaa
pop
cmps
inc
hlt
inc
sub
imul
sar
mov
(bad)
loopne
(bad)
push
scas
jae
xor
xlat
scas
pushf
neg
jnp
sbb
pop
aam
aam
pop
jle
jae
fisttp
nop
mov
lock
cmps
jg
hlt
jo
cmp
mov
addr16
add
aas
pushf
retf
cmp
rol
xor
(bad)
frstor
mov
sub
xchg
adc
div
jb
push
out
jne
xchg
xchg
push
cs
mov
or
gs
test
cwde
or
(bad)
fcmovnb
xlat
sbb
fsubrp
jno
cmp
push
jl
cmp
out
daa
ja
inc
push
inc
xchg
imul
adc
out
inc
shr
bound
add
sbb
xchg
push
mov
mov
jbe
in
shr
mov
fdivr
dec
xlat
mov
cmp
pusha
cmp
rcl
mov
(bad)
mov
pop
cwde
fmul
sub
enter
mov
add
mov
bound
inc
push
rol
xchg
(bad)
and
cmp
ret
repnz
and
pop
pop
test
stos
jnp
int
(bad)
mov
add
mov
cli
inc
ret
sti
mov
call
mov
pop
adc
aam
shl
into
je
add
sub
mov
add
cmp
ret
push
and
std
(bad)
in
mov
fmul
xchg
in
and
test
es
jecxz
mov
push
jmp
jmp
xor
xchg
xchg
sub
call
xor
jmp
dec
pop
aad
adc
ror
arpl
ins
xor
pop
mov
pop
pop
pusha
push
outs
cli
jmp
xchg
shr
repnz
pusha
adc
mov
fisubr
and
pop
cmps
add
add
scas
psubw
inc
cmp
je
call
xchg
aas
jmp
push
inc
jno
in
pop
push
jbe
repz
shl
jp
push
mov
gs
sub
hlt
jecxz
pop
pop
adc
push
pusha
mov
sub
mov
mov
int3
cmp
outs
and
and
xor
(bad)
ins
ins
jl
push
stos
or
inc
add
cmp
mov
mov
repnz
jae
sub
cs
test
cmp
jp
out
xchg
jnp
and
repnz
fbstp
retf
cmp
fld
fadd
int
mov
bound
adc
jnp
cdq
sub
fiadd
add
mov
mov
je
inc
xchg
ret
call
sub
rol
enter
sub
adc
xor
test
mov
cdq
mov
fisubr
dec
jae
mov
(bad)
test
jge
jmp
ror
cmp
cmp
sbb
test
xor
out
pusha
add
inc
cmc
pop
(bad)
shr
mov
lods
mov
jg
int
cmp
mov
rol
inc
cmc
sti
xchg
add
mov
jp
fcomp
rcr
rol
mov
push
imul
cld
fisubr
repnz
fstp
mov
sahf
scas
sub
icebp
dec
test
outs
test
punpckhbw
loope
movs
push
aam
ds
add
mov
leave
push
stos
mov
lea
fiadd
into
test
push
push
movs
in
cmp
int3
sbb
aaa
mov
mov
out
rol
loope
pop
jb
pop
jns
popa
call
rcl
inc
cmp
std
mov
sbb
clc
popa
or
add
in
icebp
mov
mov
sub
out
test
sub
mov
cmp
dec
popa
(bad)
enter
aam
ds
shl
stos
xor
adc
rcr
dec
sbb
in
xor
popa
lea
jne
mov
icebp
inc
mov
je
pop
xchg
xchg
sub
push
test
mov
clc
ins
stos
outs
push
push
xchg
neg
jbe
addr16
push
mov
pop
bnd
and
lds
nop
bound
repnz
dec
daa
les
out
out
arpl
loop
mov
or
xchg
(bad)
pop
std
dec
test
jbe
and
sub
xchg
emms
lods
jne
xor
shr
pushf
or
ja
sar
icebp
arpl
or
shl
imul
mov
xchg
stos
retf
scas
pop
je
mov
cdq
mov
pop
mov
sbb
mov
and
push
imul
es
cld
jne
sub
xor
xor
push
int
dec
loope
mov
movs
in
cmp
imul
shr
scas
mov
dec
mov
shl
jno
sbb
mov
and
ror
mov
pop
jo
inc
retf
nop
cmps
add
push
mov
cli
mov
ins
ret
fisubr
xchg
fst
push
and
call
stos
jmp
fstp
add
scas
daa
(bad)
fisubr
repnz
scas
fmul
jne
add
xor
push
or
lods
jo
mov
mov
shl
dec
jo
sahf
scas
cli
sub
push
ret
pop
popa
in
push
or
(bad)
mov
aaa
lea
shl
sbb
dec
dec
pop
adc
cdq
mov
xchg
mov
push
(bad)
inc
(bad)
outs
adc
cdq
push
ret
push
lea
adc
inc
pop
std
fsubr
cld
pop
cmp
push
mov
mov
clc
xlat
inc
pop
sub
dec
imul
pop
std
xchg
push
in
aaa
nop
dec
enter
add
cld
cmp
pop
adc
adc
fwait
or
sub
(bad)
or
out
mov
popa
xor
ret
add
ret
adc
movs
push
cmp
add
rol
ds
ins
sbb
sti
push
sbb
xor
mov
inc
jg
sub
loopne
jecxz
das
js
sbb
fbld
test
scas
push
add
clc
sbb
or
xchg
xor
jl
xor
repz
mov
(bad)
mov
push
stos
cld
xchg
ins
dec
xor
pop
jmp
imul
pop
adc
sub
jmp
or
push
or
and
xor
xor
dec
les
test
int3
ins
repz
leave
js
popf
xor
inc
pop
add
cmp
int3
mov
cld
stc
pop
loope
movs
sub
xor
ret
jmp
lds
mov
cmp
cld
(bad)
clc
mov
movs
push
je
dec
iret
popa
retf
sub
add
cmp
sub
cmp
mov
retf
movs
sub
ins
hlt
test
mov
arpl
imul
mov
mov
mov
mov
adc
dec
inc
jg
cmp
test
or
stos
pop
outs
add
push
mov
or
push
xchg
repnz
xchg
pop
ja
out
mov
and
jecxz
jnp
mov
jmp
dec
in
arpl
icebp
pop
dec
lock
repnz
cli
popf
and
mov
repnz
add
xor
loope
sti
xor
lods
pop
(bad)
xchg
fcomp
cmp
mov
pop
mov
mov
adc
shl
jecxz
xchg
inc
cmp
daa
push
xorps
cmp
add
popf
jne
pop
pop
jbe
leave
scas
pop
and
loopne
dec
cmp
call
ins
jnp
jge
cs
cdq
ins
xlat
repz
jnp
sub
pop
mov
(bad)
xchg
rcl
sub
loope
jecxz
add
in
fidivr
cmps
jnp
mov
mov
mov
cmp
ret
pop
jle
dec
bound
repz
sub
lahf
popa
pop
scas
inc
jl
int
lock
mov
outs
sbb
test
xchg
dec
sbb
sbb
and
or
mov
push
sbb
in
push
loopne
mov
repz
add
scas
xchg
pusha
push
loopne
add
jbe
in
out
xor
addr16
outs
test
push
mov
push
leave
mov
cmp
add
xchg
stos
dec
in
adc
cwde
push
and
loopne
int3
hlt
jbe
jecxz
cmc
and
das
xor
test
aas
pop
inc
test
daa
add
ins
retf
pop
(bad)
adc
pop
push
mov
jg
std
ja
popf
xor
cmps
in
xchg
cli
stc
mov
xchg
scas
movs
ror
ja
add
add
or
iret
imul
js
xor
cmp
mov
mov
jmp
push
stc
pop
rcl
in
mov
sbb
mov
and
outs
(bad)
aam
daa
jg
shl
push
lock
popf
dec
lea
xor
arpl
lods
data16
das
dec
add
nop
sub
mov
cmp
mov
cmp
dec
sti
lahf
lods
jg
push
ins
push
xchg
xor
jg
adc
sahf
dec
cdq
push
or
jae
adc
pop
fldcw
mov
loopne
icebp
scas
push
outs
into
cvtps2pi
sahf
push
inc
mov
int3
xchg
xchg
fcomp
hlt
add
std
icebp
movs
mov
pop
retf
lahf
lea
in
jo
push
jmp
jmp
jp
jae
cmp
add
(bad)
fyl2xp1
pop
pop
sbb
jl
out
(bad)
cld
imul
mov
ret
std
pop
pop
add
lahf
call
lods
mov
loope
enter
xchg
bound
mov
inc
fwait
cmp
sbb
int3
xchg
add
xchg
(bad)
mov
mov
(bad)
fsubr
xchg
ins
sbb
xor
xchg
sahf
sbb
push
out
mov
test
xchg
cld
mov
out
pop
push
push
stos
sub
push
nop
cmp
loop
scas
repz
test
push
stos
sti
out
lods
enter
dec
lock
mov
mov
xchg
pusha
push
push
shr
jbe
pop
dec
lods
mov
sbb
or
stos
cmps
cmps
js
push
clc
xchg
ss
test
daa
cli
sbb
ficom
jmp
cmc
int3
lds
xchg
dec
cmp
mov
stos
xor
leave
mov
mov
mov
and
inc
or
mov
sbb
cwde
pushf
hlt
push
sub
xchg
shl
pop
inc
add
ss
add
jno
fdivr
mov
lods
inc
cs
inc
scas
dec
ja
test
sub
cli
movs
daa
imul
test
dec
dec
int3
mov
mov
mov
cmp
mov
out
nop
mov
test
loope
loope
lahf
(bad)
pusha
adc
movs
outs
push
int3
inc
ja
and
jnp
mov
repnz
lds
mov
inc
sbb
mov
aaa
shl
mov
retf
fdivr
(bad)
jmp
dec
and
jbe
inc
nop
retf
jae
mov
pop
outs
adc
lods
scas
jbe
outs
push
adc
inc
cli
jno
cmps
mov
(bad)
push
sti
ins
(bad)
scas
jae
push
pop
xor
sub
sti
loopne
or
mov
xor
stos
jnp
shl
adc
scas
add
mov
(bad)
repnz
xchg
ds
jns
sbb
push
dec
pushf
es
outs
xchg
xchg
mov
cmp
xchg
out
bound
out
pushf
(bad)
ds
lods
lds
enterw
and
and
dec
xor
cld
xchg
mov
out
inc
jno
xor
arpl
adc
leave
test
jecxz
xchg
leave
(bad)
mov
or
stos
out
sbb
mov
retf
pop
adc
imul
fsubr
adc
fsubrp
push
movs
loope
cld
movs
pop
pop
pop
call
cmp
shr
test
add
and
and
jmp
fsubr
aaa
retf
ja
push
pop
mov
lock
hlt
xchg
fs
and
mov
ja
pop
leave
push
jbe
pop
sbb
inc
mov
inc
inc
xlat
sub
aam
(bad)
outs
(bad)
mov
push
mov
push
xor
bound
inc
jp
dec
lods
pushw
mov
mov
sahf
iret
mov
cdq
mov
push
inc
in
xchg
leave
lahf
pushf
jnp
dec
jnp
mov
outs
(bad)
bound
add
je
call
mov
push
cs
adc
xor
sbb
or
in
jecxz
push
jg
test
scas
in
cmp
adc
mov
cmp
imul
mov
ins
mov
nop
jne
lock
inc
push
xor
fwait
xchg
loope
mov
iret
and
pop
ds
jecxz
pusha
xlat
mov
ret
mov
mov
adc
fcmovnu
and
stos
mov
and
sub
push
dec
out
cmp
jg
pop
imul
stc
in
(bad)
dec
xchg
stos
xor
adc
int
out
pushf
outs
jno
stc
mov
cwde
outs
cmp
ins
test
cli
mov
fiadd
sar
mov
enter
push
ret
mov
push
out
and
and
loop
ret
int3
pusha
out
enter
jae
push
xchg
xchg
cli
sahf
pop
in
pop
ss
pusha
movs
retf
rcl
ret
push
jne
imul
adc
cmp
lea
mov
(bad)
in
mov
add
(bad)
(bad)
sub
push
cdq
repnz
jp
inc
aam
xchg
movs
dec
cmps
cmp
push
and
push
(bad)
lock
dec
push
jne
jmp
push
fsub
cmp
mov
dec
cmc
std
pusha
pop
xchg
sub
hlt
sbb
pop
pop
inc
out
push
adc
dec
and
cmp
fmul
in
dec
(bad)
in
dec
cmps
into
mov
clc
mov
leave
or
int3
xchg
pop
adc
hlt
dec
sbb
movs
arpl
lahf
fcomp
repz
mov
mov
mov
das
adc
ja
cs
shr
or
inc
(bad)
inc
pop
adc
inc
fxch
movs
ror
ja
movs
and
cs
jmp
nop
inc
adc
push
mov
adc
push
jl
pop
cld
loopne
cmps
add
cmp
sub
inc
mov
sbb
test
shl
shl
add
jbe
and
jp
pop
int
push
call
lahf
or
dec
cs
cmp
cmps
jge
dec
fldenv
lock
int3
in
scas
loop
add
ins
sbb
out
mov
jmp
sbb
iret
inc
cld
out
movs
xchg
xor
sub
(bad)
mov
xchg
ins
and
xchg
sub
or
idiv
mov
ss
push
cmp
mov
imul
adc
sbb
int3
nop
neg
and
cmp
or
add
out
mov
push
data16
xchg
sahf
cmps
sub
jecxz
sti
sbb
pushf
lds
mov
test
movs
pop
in
and
mov
mov
add
rcr
addr16
cmp
adc
pop
and
sahf
cli
enter
dec
out
(bad)
frstor
mov
int3
push
test
stos
pop
xchg
enter
push
or
js
out
pushf
add
es
mov
cmp
mov
out
lahf
fidiv
push
push
retf
or
popa
enter
gs
mov
push
leave
into
xor
mov
jbe
js
mov
push
loope
jae
(bad)
sub
ja
bound
cmps
shl
movs
and
out
leave
(bad)
test
ror
lds
push
xchg
adc
and
push
ret
jl
ss
clc
loopne
inc
add
aad
call
sti
push
adc
repz
mov
adc
sub
enter
or
jl
pop
dec
xchg
add
sub
and
push
mov
icebp
and
jge
or
test
push
ds
das
mov
shl
jo
mov
jmp
mov
loopne
neg
idiv
pusha
hlt
xchg
(bad)
sti
pop
push
inc
adc
pop
sub
cmps
inc
jb
fdiv
outs
inc
ds
out
sti
or
cld
fwait
movs
xchg
mov
shl
cmp
pop
add
dec
jle
(bad)
sahf
and
gs
jmp
dec
retf
lock
inc
or
adc
pop
imul
sub
mov
inc
jb
adc
push
daa
mov
inc
jecxz
loope
outs
popf
dec
and
fnstcw
and
dec
push
mov
aam
sar
cmc
xlat
inc
(bad)
jmpw
loope
sub
mov
pop
imul
or
mov
pop
adc
xchg
mov
push
pop
sub
ret
ins
call
inc
aam
ficom
mov
pop
inc
popa
aas
cmp
add
repnz
xchg
repnz
xrstor
addr16
cmps
mov
xchg
push
dec
(bad)
inc
aas
mov
popa
dec
pop
fwait
loope
cmp
xor
cmps
cmc
inc
shr
jmp
shr
stc
(bad)
inc
out
(bad)
pop
ja
je
xor
push
or
cli
retf
je
mov
mov
ret
mov
lahf
mov
ret
lds
cwde
sbb
dec
lea
lds
loopne
inc
push
ds
rcl
clc
and
xchg
push
out
adc
pop
dec
dec
jb
pop
adc
(bad)
ja
cmp
adc
fmul
cli
cld
mov
stos
pop
xchg
repz
push
fidivr
add
shr
fidivr
pop
sub
xor
call
sub
vunpckhps
or
ret
dec
sbb
das
mov
out
cli
jecxz
fstp
inc
ins
int
push
jb
mov
dec
push
mov
fmul
in
mov
jg
pop
stos
rol
or
mov
push
jnp
cdq
push
fs
es
loop
fisttp
call
scas
inc
mov
pop
loop
push
ret
fld
dec
jmp
imul
call
ret
mov
cli
loop
dec
cmp
jle
loope
mov
aas
push
mov
jbe
inc
cmp
lds
test
dec
xchg
lds
or
imul
adc
das
xchg
and
adc
or
mov
sbb
push
retf
and
outs
or
jmp
mov
test
sbb
jmp
jno
mov
es
cmc
mov
mov
mov
fs
dec
xchg
or
push
mov
jno
shl
sbb
ret
xor
cmp
mov
sbb
aas
cmp
and
call
xchg
mov
retf
add
add
adc
inc
(bad)
idiv
jbe
mov
pushf
sbb
adc
mov
jg
jmp
cli
mov
xor
xchg
jb
cwde
scas
lea
dec
mov
repz
jle
or
push
fdivr
lahf
(bad)
test
(bad)
rol
fiadd
sbb
jl
mov
imul
jb
jnp
es
mov
xor
fist
jbe
movs
or
xor
push
add
pop
or
jp
test
xor
mov
and
sbb
mov
loop
clc
cld
xchg
lock
cmps
bound
enter
inc
cmc
or
cs
jo
(bad)
cli
test
xchg
loope
xchg
jns
ds
hlt
adc
jp
test
sti
data16
xor
xor
push
out
mov
xchg
jbe
jecxz
pushf
and
pop
shl
stc
gs
rol
popa
jae
ds
(bad)
dec
xlat
dec
adc
mov
sbb
out
or
inc
push
arpl
pusha
jp
dec
and
add
adc
pop
int3
cdq
cmp
or
loopne
hlt
mov
push
fwait
mov
pop
es
xchg
dec
in
mov
and
mov
in
xor
leave
daa
mov
push
sub
imul
in
int
in
pop
retf
or
adc
mov
fiadd
xchg
push
inc
iret
xlat
lods
cli
(bad)
mov
sub
sbb
pop
lock
aas
adc
daa
int
xchg
stos
arpl
fiadd
push
cmp
call
xchg
popa
jge
adc
or
(bad)
lods
cmp
fucomp
int3
and
ins
sub
push
cmp
inc
lea
js
ja
xchg
mov
stos
(bad)
push
mul
lods
sbb
fcom
add
call
pop
in
xlat
mov
retf
ins
or
lods
not
mov
xchg
mov
repz
jne
int
ja
rol
sahf
pop
clc
adc
cmp
adc
rcl
loopne
(bad)
out
je
mov
mov
dec
dec
hlt
test
loope
mov
mov
mov
pusha
shr
(bad)
cmp
lock
aas
adc
or
mov
call
dec
fadd
jnp
fisub
inc
mov
test
push
push
std
ss
xchg
mov
fmulp
xchg
jmp
mov
jmp
sahf
and
dec
mov
les
cmp
popf
or
push
cmp
outs
retf
mov
xchg
mov
dec
push
adc
xchg
mov
or
fimul
xor
pop
pushf
fmul
lea
mov
mov
xchg
sbb
mov
mov
popf
ret
xor
and
mov
push
xchg
add
mov
mov
pusha
rcl
es
imul
idiv
xchg
dec
mov
fmul
mov
push
aam
je
push
mov
sub
stos
int3
push
cld
std
mov
dec
(bad)
sub
inc
sub
lock
rcr
(bad)
shl
inc
sub
or
out
in
loopne
and
cmps
dec
icebp
in
xchg
mov
aad
jns
into
fmul
xchg
xchg
(bad)
das
mov
jno
popf
stos
outs
sar
inc
ins
hlt
push
(bad)
jnp
mov
es
btr
xchg
pop
pop
cmp
imul
push
ins
int3
ja
mov
adc
or
jno
jp
and
stos
(bad)
bnd
add
jno
aas
add
pop
pop
pop
(bad)
xchg
jnp
popf
std
das
mov
aam
jno
add
mov
cmp
lods
xor
jle
out
clc
pop
imul
mov
int
push
pop
adc
sub
ins
ja
adc
outs
leave
retf
mov
call
jecxz
pop
ja
ss
mov
fist
test
dec
sub
mov
jnp
aam
cmp
adc
push
dec
leave
xlat
sbb
pusha
pushf
cdq
(bad)
and
sbb
(bad)
and
fmul
(bad)
rcl
inc
shl
lds
push
jnp
adc
ret
das
test
stos
test
lods
sar
add
dec
out
shl
sub
jnp
jl
push
out
scas
xchg
push
adc
aas
outs
ja
sub
xchg
jo
popa
push
outs
ja
push
imul
adc
or
lds
(bad)
neg
inc
ret
jae
mov
inc
dec
jmp
push
int3
or
dec
out
ret
ret
inc
mov
ret
inc
xor
inc
cmps
int3
repz
clc
and
dec
mov
or
inc
mov
sar
sbb
add
imul
sub
sahf
adc
mov
int3
lods
push
retfw
push
cmc
loope
cmp
mov
jno
dec
cwde
cs
push
ret
pop
mov
(bad)
jns
dec
dec
cdq
fs
or
xor
popf
imul
(bad)
bound
add
mov
inc
xchg
scas
pusha
fdivr
sbb
mov
and
test
inc
ror
sub
repnz
jg
loope
mov
pushf
jne
pushf
sub
ja
fwait
loope
xor
mov
push
inc
sbb
test
sbb
repnz
inc
ret
fmul
mov
shl
sub
test
gs
movs
sar
loope
fsub
adc
bound
or
xchg
xor
inc
mov
das
call
pop
cmp
push
mov
(bad)
pop
not
shl
ret
ret
or
adc
inc
cmps
pop
jle
stc
imul
xor
and
iret
mov
pushf
dec
push
cmp
retf
pop
scas
stos
sti
loop
add
xrelease
jl
cli
inc
test
inc
xchg
jmp
leave
add
jmp
stos
jge
adc
rcr
adc
sbb
dec
mov
add
call
jno
mov
adc
pop
lea
dec
inc
enter
cwde
in
loop
clc
cmps
fst
test
cmp
jns
mov
adc
into
clc
loopne
mov
mov
leave
in
stos
repnz
xchg
or
test
inc
and
mov
sbb
push
add
addr16
ror
shl
mov
sbb
in
and
xchg
and
sub
xor
nop
fisubr
jne
fldcw
dec
mov
sbb
adc
lock
ins
loope
shl
adc
pop
aaa
jno
xchg
pushf
int3
aad
(bad)
bound
test
dec
mov
sahf
sub
mul
fisub
in
mov
and
mov
xor
mov
pop
sub
dec
cmp
outs
ins
sub
lods
adc
loop
imul
fidiv
push
mov
or
xchg
ret
ins
xchg
ret
cld
(bad)
fpatan
retf
lahf
mov
mul
cmc
push
mov
loope
or
pop
mov
sub
repnz
and
cwde
push
push
mov
mov
pop
test
dec
pop
add
leave
call
retf
sub
fdivp
sbb
and
adc
sbb
push
push
sub
call
jmp
sbb
mov
hlt
(bad)
jmp
cwde
out
jge
pop
inc
sbb
dec
push
adc
shl
jl
or
imul
(bad)
das
push
sub
add
repnz
rcl
int
jecxz
inc
mov
in
das
popa
sbb
aam
and
jbe
sub
push
dec
(bad)
cmc
cwde
rcr
xchg
daa
ins
cwde
sub
enter
mov
fadd
mov
fist
push
hlt
xor
jge
je
cmp
aas
inc
xchg
jge
stos
pop
ins
sbb
inc
into
inc
mov
imul
push
(bad)
cmp
or
and
inc
mov
enter
mov
cli
sub
jecxz
(bad)
(bad)
xchg
adc
loop
sbb
push
cmp
xor
(bad)
inc
je
jmp
mov
jl
in
js
or
arpl
xchg
add
idiv
into
popf
clc
(bad)
out
mov
fs
mov
push
enter
(bad)
or
dec
jle
pushf
cmps
adc
lods
push
sbb
dec
or
add
daa
loopne
mov
jmp
fldenv
cmp
aaa
aad
push
cmp
pop
sub
xchg
outs
mov
xchg
cmps
retf
icebp
pop
xor
push
mov
mov
mov
or
mov
fisubr
jge
mov
and
or
test
pop
or
push
mov
mov
pop
shr
or
push
pop
pusha
imul
int3
or
inc
daa
daa
aam
out
dec
push
pop
push
pop
xchg
loop
fnstsw
xchg
repnz
push
lea
mov
in
in
stos
or
or
mov
popa
mov
out
or
dec
loope
out
push
mov
stos
repz
or
sbb
inc
js
in
pusha
rcl
in
sbb
jecxz
out
mov
sahf
(bad)
and
jb
(bad)
inc
mov
cmps
or
sbb
jg
xchg
jne
aad
movs
and
inc
xor
sub
pop
mov
das
inc
(bad)
jg
mov
rcr
popf
jmp
jo
fnstsw
jmp
repz
fwait
jp
inc
jns
lock
xor
jnp
jle
out
(bad)
mov
sub
ds
std
xchg
lea
arpl
cmp
fnsave
fistp
das
nop
sbb
mov
mov
jns
add
ds
mov
in
jge
pusha
scas
sub
test
outs
and
clc
test
test
(bad)
jge
fs
xchg
popf
adc
inc
in
cmp
jle
shr
mov
icebp
mov
dec
cdq
adc
adc
call
mov
or
cmp
mov
adc
pop
mov
(bad)
aad
pusha
and
mov
icebp
mov
out
cs
cmp
sub
mov
add
mov
pop
mov
or
mov
sbb
sub
outs
into
jbe
mov
or
rcl
dec
addr16
push
nop
xchg
in
inc
jmp
in
pusha
dec
mov
sti
enter
mov
enter
jo
pushf
xor
xchg
mov
cmp
mov
jmp
mov
ja
leave
xor
xchg
xor
dec
mov
jle
jae
in
ficomp
mov
or
mov
sub
mov
aad
and
jnp
and
jne
add
sub
neg
mov
cmp
cs
or
ret
sbb
push
inc
data16
jmp
and
outs
out
out
setp
scas
fild
xchg
and
jno
movs
mov
mov
pop
into
stos
scas
push
inc
sub
outs
jno
icebp
xchg
jns
dec
enter
mov
and
dec
inc
xchg
leave
mov
fnsave
or
mov
icebp
push
popf
pushf
sub
pop
push
inc
or
out
mov
and
mov
das
test
pop
xchg
mov
test
repnz
inc
lock
lds
sub
int
dec
mov
in
pop
test
pop
out
rcr
inc
xchg
xor
fdiv
adc
stos
mov
push
retf
test
cmp
je
sub
cmp
xor
push
ss
aas
mov
xor
xor
cmp
imul
int
scas
adc
inc
mov
sub
in
add
jne
push
(bad)
or
adc
imul
dec
mov
fs
dec
jle
xor
(bad)
mov
movs
daa
push
pop
adc
push
inc
loope
dec
cld
mov
je
cmps
jns
js
xchg
call
add
lods
mov
imul
jmp
dec
mov
aaa
jmp
popf
enter
jo
cmps
out
and
mov
ins
dec
sbb
div
push
mov
mov
push
mov
jnp
or
xchg
adc
imul
add
leave
and
ins
inc
xchg
xchg
(bad)
stos
xchg
lods
pop
add
into
inc
std
inc
int
std
nop
sbb
and
popf
in
push
aas
aam
sub
pop
pop
ds
pop
and
je
(bad)
or
std
mov
dec
mov
sbb
adc
jae
stos
jecxz
cmps
jno
xchg
xchg
sbb
cmps
mov
dec
pop
xor
movs
sub
fnsave
sub
mov
call
mov
(bad)
dec
mov
mov
aas
or
cmps
add
push
aam
mov
xchg
pop
dec
adc
or
mov
outs
jecxz
sbb
ficom
cmp
xchg
test
jo
sub
(bad)
jl
mov
cmp
adc
cmp
dec
ins
ja
push
push
cmp
adc
mov
addr16
out
fldcw
xchg
nop
cmps
scas
psubd
push
leave
aad
sbb
adc
shr
jne
stos
pop
das
shl
sbb
dec
xchg
dec
push
jp
sar
iret
out
in
mov
cli
sbb
bound
outs
inc
loope
jb
ret
and
cmp
and
int3
dec
lahf
loopne
clc
cmp
fdiv
push
rcl
xchg
jne
sub
push
cmp
xchg
out
les
add
jmp
push
leave
sbb
push
mov
mov
sbb
push
sahf
lock
sahf
in
test
fld
je
inc
xor
jmp
test
cmp
xor
fnsave
ss
cmps
inc
mov
add
sbb
lods
in
imul
jne
rcr
push
mov
gs
cmp
pop
int
push
push
scas
and
dec
nop
push
jb
xchg
pop
pop
std
cmp
dec
(bad)
jle
push
inc
push
push
popa
bound
push
mov
pop
dec
test
mov
fild
mov
mov
mov
scas
or
(bad)
repz
les
into
sbb
in
jle
(bad)
retf
repz
(bad)
faddp
add
les
sbb
jns
ja
scas
pop
xchg
push
test
xor
retf
lods
mov
sbb
dec
test
shl
pusha
mov
mov
adc
or
ja
fnsave
mov
cmp
adc
or
and
push
jecxz
ds
loope
jae
ins
jnp
sub
(bad)
pop
cmp
aaa
jnp
jge
sub
xor
neg
sbb
ror
bound
(bad)
mov
add
ds
dec
ds
repnz
leave
ret
dec
stos
sub
dec
repnz
gs
push
arpl
jecxz
mov
push
jl
cmps
push
(bad)
out
mov
popf
into
(bad)
fistp
pop
xor
push
sbb
lock
or
jb
xor
adc
push
ss
jo
lea
and
mov
sbb
xor
cmps
in
add
shr
movs
and
jmp
xor
hlt
in
or
aad
fs
mov
sub
sbb
(bad)
jge
cs
stc
mov
mov
in
push
out
ror
cmp
mov
cmp
out
fst
and
ficom
fbld
test
std
arpl
mov
mov
retf
aad
adc
inc
mov
jl
sub
xchg
fisttp
ret
es
js
jle
or
loopne
int3
xor
gs
pop
push
jnp
cwde
inc
in
outs
out
mov
fs
jg
cmp
fidiv
jo
pushf
cmp
dec
nop
add
or
fcomp
jmp
out
pop
mov
dec
sbb
das
loope
mov
xor
call
jp
push
pop
aam
cli
retf
pop
sub
and
scas
mov
in
sti
pop
out
pop
(bad)
jbe
cli
ret
add
int3
dec
add
mov
xor
xchg
hlt
pop
dec
retf
jmp
stos
push
sets
ins
sbb
jmp
mov
adc
and
pop
pushf
push
jo
dec
push
aad
sbb
xor
add
xchg
mov
dec
fadd
inc
adc
mov
ins
xchg
cdq
repz
(bad)
(bad)
stc
pop
fsub
cmp
int
sahf
outs
push
fidiv
retf
aaa
sub
hlt
or
ins
out
(bad)
and
pop
mov
lods
dec
jo
dec
add
jp
ja
sti
mov
inc
mov
and
shr
pop
xadd
mov
out
enter
jmp
jle
clc
clc
js
xchg
adc
xor
push
jno
sub
sahf
xchg
mov
jp
push
fdiv
lahf
and
mov
loope
cwde
sbb
sbb
into
(bad)
shl
pop
pop
sahf
ret
push
xor
(bad)
enter
push
inc
mov
cwde
cld
bound
aam
in
cwde
sub
sub
sub
mov
inc
dec
sub
enter
xchg
pop
dec
jecxz
into
into
pop
add
dec
pop
xor
inc
test
mov
xchg
push
xor
sbb
nop
mov
sbb
fbld
fs
jmp
iret
cs
xlat
ins
cmps
imul
cs
pop
nop
in
add
xchg
mov
sbb
xchg
cmp
jl
fwait
ins
enter
leave
inc
loop
mov
jecxz
xlat
inc
ss
jb
or
dec
mov
jo
pushf
aad
xor
cdq
popa
shl
sub
shl
fs
call
jge
inc
dec
add
test
(bad)
lds
and
push
ret
test
adc
dec
adc
fnstcw
lds
mov
inc
rol
mov
js
out
repnz
sbb
and
xor
jge
mov
cmp
pop
push
popa
pushf
pop
setp
out
sbb
add
cmp
repnz
(bad)
mov
jnp
cmc
xchg
dec
ins
in
xor
inc
lahf
test
mov
int
retfw
cmp
mov
inc
(bad)
outs
jmp
or
mov
and
test
stos
or
or
jmp
popf
adc
and
or
add
xchg
into
shr
mov
leave
retf
js
dec
or
(bad)
mov
retf
pop
ins
pop
mov
paddq
add
mov
or
cmp
into
and
or
popf
mov
cmp
shl
xchg
(bad)
int
pop
mov
sub
(bad)
jnp
lahf
leave
or
fmul
dec
movs
gs
sub
dec
test
ins
cmp
mov
pop
cmp
shl
cmps
or
(bad)
pusha
std
imul
jmp
mov
jb
add
dec
sub
cmps
cs
pop
mov
(bad)
jmp
inc
pop
pusha
jnp
inc
pop
shl
test
movs
push
aad
mov
xchg
icebp
mov
sub
int3
inc
daa
mov
lahf
xor
adc
inc
unpcklps
ss
stos
and
inc
dec
in
add
leave
mov
adc
(bad)
int3
mov
mov
sti
mov
pop
add
cmps
ins
pop
(bad)
xchg
jae
sub
and
mov
xchg
xlat
ret
popf
dec
add
es
ret
lods
push
test
xchg
pop
dec
(bad)
out
adc
dec
shl
(bad)
stos
push
pushf
movs
ins
enter
pop
jmp
sbb
int
je
add
hlt
pop
jge
cmps
mov
cmps
add
and
dec
mov
aas
lahf
out
aam
lock
sub
outs
pop
std
sub
jnp
cmp
div
sbb
pop
inc
adc
jmp
sar
popf
pop
aam
std
or
es
cmp
push
xchg
mov
das
in
cs
mov
sbb
sti
lods
add
movs
mov
sbb
rcr
cmps
sti
dec
adc
pop
adc
retf
shr
mov
sub
xor
stos
and
hlt
es
mov
and
loopne
jmp
or
sbb
fistp
pop
lods
mov
sbb
adc
pop
cmp
push
mov
into
sbb
push
jnp
movs
push
loop
push
loop
lahf
(bad)
pop
arpl
call
jge
sbb
ret
sbb
imul
rol
cwde
(bad)
push
imul
push
pop
(bad)
mov
test
pop
xor
mov
jecxz
mov
xlat
aam
push
hlt
stos
inc
aam
je
cmp
ror
fst
idiv
ins
bound
(bad)
cmps
add
out
jmp
nop
push
mov
test
pop
cwde
jmp
sub
sbb
pop
cmp
out
aad
(bad)
arpl
lock
ins
xchg
rcl
push
movs
mov
mov
addr16
pop
xchg
xchg
(bad)
cli
xor
cmp
add
popa
sub
lds
xor
les
sbb
out
and
and
call
or
mov
out
pop
pop
mov
pop
mov
fild
push
adc
cmp
scas
and
out
push
sub
pusha
sbb
std
mov
fadd
xchg
lea
aad
mov
sbb
test
adc
(bad)
inc
ror
cmp
push
in
in
cmps
adc
(bad)
ja
loop
xor
cmp
push
leave
sbb
xchg
(bad)
sbb
dec
lahf
adc
call
push
test
sahf
fld
out
jg
jbe
jecxz
inc
sti
mov
hlt
inc
or
in
sahf
fild
push
mov
ror
mov
mov
pop
sub
bound
lds
sub
or
loopne
jne
popfw
xchg
mov
adc
out
fiadd
xor
and
xlat
adc
xor
cli
scas
(bad)
xor
xor
push
daa
in
shr
das
pop
dec
and
mov
scas
mov
call
(bad)
mov
test
lahf
dec
(bad)
ror
sbb
icebp
inc
adc
mov
fld
aas
xor
push
bound
inc
sub
push
jg
int3
std
jne
rcr
xchg
out
(bad)
fwait
sbb
or
sbb
ja
fistp
and
lds
movs
sub
loop
sbb
mov
fiadd
push
sub
in
mov
cmp
xor
repnz
sub
movs
(bad)
jbe
mov
sti
in
and
je
push
movs
pop
sub
inc
xor
fbld
(bad)
cmp
sub
inc
xchg
xor
mov
ins
inc
jl
rcr
xchg
jmp
mov
dec
lods
sahf
jmp
daa
mov
inc
out
cld
rcr
js
dec
mov
mov
call
(bad)
js
fs
(bad)
push
push
ins
sub
outs
mov
mov
mov
cmp
xchg
mov
mov
or
adc
mov
jp
das
pop
pop
(bad)
aas
test
pop
stos
or
xor
inc
mov
mov
push
dec
popf
pop
mov
(bad)
retf
mov
loopne
pop
mov
sbb
mov
in
popf
push
add
lds
(bad)
pop
xchg
push
or
dec
test
iret
test
jecxz
stos
lods
mov
test
imul
aad
(bad)
mov
and
in
mov
mov
push
(bad)
aas
inc
mov
cmp
mov
sub
mov
sub
pop
add
xchg
gs
lds
call
mov
out
push
inc
sbb
inc
shl
mov
push
jmp
sub
pop
jl
(bad)
push
inc
mov
mov
xor
adc
imul
cmps
pop
ret
inc
(bad)
jmp
and
inc
pop
inc
stc
add
int3
fstp
mov
and
popa
push
call
lds
ret
and
lock
push
or
into
aam
shr
inc
cdq
lea
popa
add
into
add
adc
pop
and
fsub
jnp
pop
sti
mov
xchg
sub
and
ret
dec
adc
scas
ins
adc
(bad)
push
fbstp
int3
xchg
xchg
cmps
adc
and
push
mov
mov
arpl
(bad)
mov
mov
test
sbb
in
mov
jp
sar
fadd
and
out
mov
mov
imul
out
mov
sub
(bad)
scas
cmp
mov
add
mov
into
push
or
ret
jb
shl
sbb
call
cdq
dec
mov
sahf
inc
rcr
fcmovnbe
out
out
popa
lock
repnz
push
pop
inc
in
or
(bad)
fidivr
nop
jge
in
xchg
loope
mov
cmps
test
shl
add
stos
xor
iret
push
dec
in
dec
lock
dec
pop
mov
sbb
shr
rcr
out
add
and
add
call
ins
(bad)
mov
or
fistp
cmc
mov
addr16
adc
and
push
jl
test
(bad)
int
mov
addr16
int
cmps
or
ins
ins
iret
icebp
jbe
jbe
mov
not
or
into
mov
jne
mov
mov
out
ds
test
ror
pop
les
push
leave
push
inc
dec
xchg
cmps
fwait
clc
addr16
shl
jo
bnd
ret
mov
inc
mov
(bad)
jo
add
test
push
sub
div
cwde
sahf
jmp
pusha
pop
outs
fst
adc
fld
shr
cmp
cmp
test
xlat
pop
(bad)
and
das
jp
mov
iret
add
sbb
jmp
and
je
push
push
out
cmp
out
adc
or
fdiv
test
mov
or
mov
pop
stc
inc
sbb
jno
outs
pop
ret
mov
mov
xchg
pop
sub
punpckhdq
sbb
push
(bad)
sub
mov
and
add
out
cmp
mov
xchg
(bad)
stos
test
mov
cmp
stc
out
mov
jnp
clc
jmp
test
or
fisub
push
or
shl
mov
stos
mov
pop
push
or
dec
push
push
mov
call
mov
push
push
mov
call
cmp
je
push
push
mov
call
mov
push
push
.byte
dec
