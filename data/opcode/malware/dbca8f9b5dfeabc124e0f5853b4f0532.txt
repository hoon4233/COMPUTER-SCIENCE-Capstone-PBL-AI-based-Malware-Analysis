mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
ret
push
imul
and
xchg
mov
cmps
and
or
ja
outs
repnz
pop
scas
pop
out
pop
sbb
mov
(bad)
(bad)
mov
adc
push
or
cmps
xchg
lea
loop
sbb
dec
rcl
push
push
lahf
enterw
jp
sbb
fmul
hlt
fisub
push
push
imul
loope
mov
xor
xlat
cmp
xor
div
fadd
hlt
hlt
cmps
sub
cmp
jmp
pop
stos
jp
mov
aam
adc
push
cmp
or
test
std
gs
xchg
lds
inc
adc
push
push
ret
pop
sub
cmp
mov
cwde
test
sbb
jge
pop
cwd
dec
ror
fs
mov
inc
loope
fdiv
or
ret
mov
inc
sar
sbb
repnz
jl
cdq
sub
or
xlat
jne
(bad)
cmp
push
pop
mov
out
outs
sub
inc
cmps
push
stos
push
xchg
push
jecxz
mov
adc
loopne
push
mov
mov
sahf
inc
sbb
mov
les
test
arpl
cwde
sbb
out
mov
fs
out
sbb
jo
jbe
stc
jns
push
xor
call
mov
inc
add
cs
adc
dec
neg
sub
stos
scas
jmp
mov
inc
lea
pop
xor
lahf
sbb
mov
int
pop
or
sbb
pusha
push
repz
push
call
xchg
and
pop
pop
sbb
std
cmp
xor
and
repz
mov
rol
mov
push
ror
(bad)
test
icebp
(bad)
mov
sahf
nop
sti
clc
and
sub
cdq
stos
xor
pushf
pop
outs
retf
psrld
ins
sahf
xor
pop
add
inc
xor
or
jmp
popf
or
(bad)
(bad)
adc
repz
xor
xor
(bad)
aam
hlt
lods
mov
dec
or
das
jnp
or
mov
cmp
xchg
or
xlat
dec
hlt
push
push
loope
push
sbb
shl
jne
cmps
sbb
mov
daa
dec
xchg
sbb
loopne
push
cmp
mov
dec
test
(bad)
cmp
scas
loope
ds
and
sub
pop
cli
cmps
sbb
push
sub
add
js
popa
mov
ds
(bad)
pop
mov
sbb
(bad)
or
aas
nop
adc
sub
push
imul
fld
test
cmp
test
sbb
fcmovne
fistp
sub
cmp
pop
pop
cmp
xchg
adc
sub
(bad)
sbb
add
ins
fwait
jbe
xchg
xchg
cmp
mov
xchg
stos
das
shr
inc
mov
ror
adc
sub
mov
dec
comiss
jle
fisub
inc
or
add
icebp
imul
retf
or
add
push
pop
inc
add
sbb
in
mov
popa
(bad)
retf
sub
test
mov
pop
repnz
stos
jg
sahf
and
ror
xlat
retf
pop
add
sbb
xchg
sbb
mov
xchg
mov
push
hlt
and
mov
cdq
dec
mov
inc
mov
lahf
mov
mov
push
arpl
xor
mov
out
aas
call
scas
(bad)
test
xchg
push
pop
mov
xlat
fstp
or
test
pop
and
dec
popf
idiv
jo
and
jbe
push
cmp
call
fwait
test
xchg
mov
adc
lods
sbb
push
loop
ja
into
arpl
out
(bad)
jecxz
jle
mov
(bad)
adc
imul
(bad)
and
push
test
in
jb
test
xchg
mov
ja
jo
scas
sub
adc
mov
mov
(bad)
jae
mov
shl
es
aaa
mov
dec
movs
or
aas
jno
xchg
mov
into
cwde
mov
(bad)
enter
das
(bad)
jae
outs
push
ffreep
push
fcom
shl
and
inc
(bad)
fwait
jp
ins
inc
push
lds
out
or
lahf
outs
jmp
repz
add
mov
ret
pop
xor
adc
rcl
test
ins
pop
dec
mov
jg
aad
push
add
shr
imul
(bad)
sbb
mov
dec
xor
jmp
inc
mov
push
dec
push
clc
jne
aas
push
sub
sbb
std
fs
daa
lahf
rcl
fst
int3
into
inc
push
sbb
mov
add
iret
out
int3
int3
aam
retf
inc
ret
push
cdq
loopne
pushf
test
pop
add
mov
or
nop
out
dec
in
push
cmp
rcl
add
ret
jmp
mov
and
(bad)
cdq
popf
ins
dec
sbb
popf
adc
test
mov
out
mov
in
(bad)
mov
add
pop
into
jo
lds
test
aas
cmp
out
dec
mov
(bad)
cmp
mov
add
xchg
loope
mov
sti
clc
call
rcl
imul
add
sub
xchg
sub
or
sbb
and
mov
add
inc
sbb
inc
or
pop
sbb
sbb
xor
xchg
or
push
std
adc
(bad)
fiadd
(bad)
loope
xchg
jmp
lock
sar
fisub
test
ret
push
xchg
mov
xchg
jecxz
mov
jns
dec
xor
sub
fstp
pop
dec
cmps
adc
repnz
daa
ret
xchg
aas
xor
or
fstp
dec
test
imul
and
es
es
fistp
or
cdq
mov
pop
add
sbb
add
call
add
xchg
pop
retf
push
and
or
xor
sbb
popf
push
cmps
xor
or
hlt
jp
mov
mov
das
sbb
js
stc
loope
jne
and
xor
cdq
xchg
add
or
sti
fsubrp
(bad)
mov
mov
mov
xchg
sbb
das
mov
xor
xchg
pop
sub
add
dec
cmp
out
std
mov
cld
add
ficom
lods
lods
sub
dec
popf
fs
jle
jne
test
fwait
sub
nop
pop
dec
xchg
arpl
fiadd
cli
mov
jl
fnstcw
loope
stos
(bad)
jns
inc
mov
cdq
hlt
imul
test
adc
xlat
or
push
gs
ds
arpl
ficom
call
mov
push
xor
fild
xchg
push
pop
push
adc
imul
idiv
cmp
in
jl
jae
cld
jge
nop
dec
inc
and
dec
sub
hlt
mov
movs
sub
add
mov
xchg
leave
sbb
sbb
imul
aaa
outs
(bad)
sbb
lea
mov
ja
sub
mov
ins
or
adc
add
in
push
mov
fwait
adc
add
dec
bound
xor
adc
addr16
mov
fnstsw
push
push
retf
sub
push
xor
sbb
xchg
ror
inc
fdiv
mov
push
or
stc
cld
pop
jl
push
pop
adc
sub
sbb
out
mov
call
scas
and
fs
cmps
adc
rcr
xchg
xchg
(bad)
bound
mov
xchg
imul
scas
addr16
inc
fisubr
cwde
xor
nop
adc
sbb
adc
and
rcr
jo
outs
mov
js
or
dec
cmp
fcom
and
dec
dec
mov
mov
xchg
(bad)
push
dec
out
sub
hlt
xchg
mov
rol
mov
xchg
call
push
sub
cmp
sti
rcr
nop
ins
in
adc
mov
and
mov
mov
jne
jne
dec
cwde
mov
ficomp
inc
leave
adc
jp
(bad)
jo
push
mov
cmc
out
(bad)
aas
sub
(bad)
cwde
scas
mov
xchg
or
xor
icebp
mov
pop
lods
adc
push
adc
add
enter
fld
push
(bad)
call
popa
(bad)
and
pop
retf
dec
dec
imul
mov
std
and
xchg
jns
data16
icebp
(bad)
push
or
rcr
aad
cmp
cmps
push
fs
test
pop
pop
pop
les
mov
lods
dec
mov
mov
or
jl
pop
cwde
push
ret
jb
cmp
or
jno
xchg
mov
mov
jb
cmps
imul
js
scas
ja
mov
fs
lds
pop
inc
pop
jae
cwde
rol
shr
sahf
xor
jno
mov
add
xor
sbb
jne
test
fild
sub
scas
bound
jb
push
out
mov
dec
dec
mov
jl
aad
xor
iret
jb
ins
sbb
in
push
movs
dec
rcl
das
add
sbb
fs
in
inc
rcl
daa
test
push
not
imul
call
movs
call
push
les
mov
mov
(bad)
test
and
clc
pushf
fist
mov
cdq
push
ins
in
retf
rcl
neg
out
mov
ror
mov
rep
jg
push
mov
xchg
mov
outs
shl
push
inc
ins
or
mov
(bad)
aas
mov
jecxz
xchg
inc
repz
pop
sbb
popa
lock
cwde
or
jnp
inc
mov
push
cmp
adc
add
jb
jne
std
mov
dec
cmp
in
movs
jl
xchg
mov
cmp
jg
sbb
inc
add
jmp
mov
cld
in
sbb
fmulp
jge
sahf
push
das
(bad)
pop
sbb
fsqrt
call
sbb
(bad)
mov
stos
sbb
loop
inc
xlat
dec
jne
out
mov
jae
out
sub
push
ja
outs
xchg
sar
ins
sti
jbe
icebp
push
cmp
cld
cmp
inc
inc
ficomp
xchg
xlat
dec
sub
jne
ins
push
out
ret
pop
jmp
sbb
adc
mov
out
cmp
add
xlat
imul
cmp
vmread
xchg
addr16
ret
xchg
push
aas
cli
xchg
sbb
fmul
imul
mov
movs
imul
pop
in
int
mov
xor
or
jl
mov
gs
outs
dec
fs
push
push
cmc
fcomip
jb
div
test
or
ins
jl
xor
loop
in
xchg
dec
repnz
push
mov
sub
jmp
loope
adc
dec
fs
stos
jno
jne
(bad)
sub
mov
xchg
jg
addr16
rcl
(bad)
mov
push
mov
std
es
sub
fist
dec
jmpw
shl
jo
or
dec
adc
adc
fidivr
(bad)
mov
push
and
fisttp
lea
inc
cld
lods
mov
lahf
sub
div
into
push
dec
mov
fst
add
xchg
stos
test
ds
inc
int3
inc
or
sub
out
enter
(bad)
int3
xlat
(bad)
fucomip
shr
aad
ja
mov
imul
inc
(bad)
sub
mov
das
and
fadd
cmc
sahf
cdq
popf
shr
pmaddwd
jg
or
sub
stos
push
dec
retf
mov
pushf
leave
inc
iret
add
icebp
repz
push
shl
mov
sub
xchg
bound
jmp
mov
test
mov
sti
pop
xor
aad
je
pop
mov
sub
fwait
inc
lods
fisub
leave
dec
ins
xlat
in
lock
loopne
mov
popa
fwait
jne
mov
sahf
adc
pop
xchg
cmp
inc
(bad)
mov
je
inc
lea
pop
cmps
mov
sbb
dec
xchg
leave
add
test
lahf
sbb
rcl
pop
in
and
push
sbb
and
mov
add
clc
mov
adc
mov
mov
xor
push
jmp
popa
sub
(bad)
add
bnd
loopne
sub
dec
mov
mov
add
imul
out
stos
stc
push
daa
jnp
loop
xor
inc
mov
jb
or
aaa
aam
inc
cmp
ror
mov
jecxz
ja
dec
out
push
push
sbb
pop
sub
out
mov
data16
jnp
mov
inc
mov
cmp
retf
pop
xor
adc
adc
inc
mov
xor
int
leave
xchg
pushf
push
call
or
rcr
sar
cmc
gs
push
mov
jmp
leave
adc
retf
fcomp
add
ror
push
lock
xchg
inc
add
sti
mov
(bad)
movs
xchg
mov
std
sti
imul
or
mov
test
jmp
mov
push
cmc
jp
cmp
retf
(bad)
test
and
dec
mov
sub
mov
lods
jge
jae
sahf
adc
add
and
movs
pop
dec
cs
ficomp
push
jmp
test
(bad)
fst
jmp
sbb
or
fcom
test
xchg
and
aam
push
mov
xor
adc
rol
pop
add
push
and
mov
and
mul
mov
adc
fisub
fisubr
movs
inc
dec
movs
clc
jmp
add
mov
repz
dec
fimul
cmp
aaa
outs
mov
sbb
lods
retf
xchg
fsub
xlat
(bad)
cmps
mov
shr
add
add
mov
sub
gs
pop
outs
mov
push
rcl
sub
xor
and
add
mov
daa
xchg
cmp
push
aam
jmp
or
and
pop
adc
add
fs
pop
add
fs
mov
or
mov
pop
add
mov
mov
popa
or
pop
shr
movs
sub
add
movs
ror
and
push
sti
xchg
cmp
stc
pop
stos
mov
jle
test
arpl
cld
dec
jmp
call
movs
sub
push
shl
pop
xchg
or
fucomp
xor
jmp
pop
fdivp
cmp
jmp
and
or
out
out
outs
push
jl
adc
ror
call
dec
mov
pop
and
aaa
mov
jnp
push
xchg
js
movs
cld
adc
cmps
cmp
iret
add
enter
jo
daa
es
inc
cwde
sbb
xchg
pop
push
xchg
and
das
cmc
sub
jbe
sbb
xchg
enter
iret
ret
ja
arpl
in
inc
pop
call
div
push
ror
and
aas
xchg
lahf
test
xchg
adc
mov
mov
aas
mov
sub
hlt
inc
das
push
imul
cld
dec
sub
cwde
popa
adc
aaa
inc
add
cmc
stos
scas
xor
fisub
sbb
sahf
jecxz
cmp
movs
test
mov
mov
fucomip
hlt
movs
push
jnp
pushf
push
outs
ds
mov
in
(bad)
push
mov
inc
jge
jl
sbb
pop
pop
lea
jnp
cmc
iret
mov
dec
sub
aaa
das
mov
fstp
ss
sar
sbb
push
lea
(bad)
pop
xchg
(bad)
xchg
adc
adc
mov
(bad)
shl
pop
add
xchg
jp
or
and
std
scas
mov
cmp
sub
and
mov
adc
or
lods
cmp
inc
sbb
mov
xrelease
test
test
leave
xchg
add
or
mov
xor
or
lods
enter
dec
xor
scas
dec
int
sub
gs
pop
push
ins
mov
pop
scas
xchg
rol
inc
mov
push
sbb
mov
mov
ja
ficomp
enter
dec
sub
or
test
mov
es
dec
in
stos
retf
outs
mov
sbb
nop
fistp
pop
pop
cmp
jo
pop
xchg
jge
mov
mov
loopne
cwde
inc
jp
and
pop
xchg
rcl
xor
mov
shr
ins
leave
imul
xchg
add
xchg
call
aaa
ret
mov
or
inc
push
lods
add
int
pop
push
int
sti
cli
sahf
inc
adc
test
out
xchg
cmps
add
repnz
mov
add
out
shr
mul
cdq
(bad)
lds
inc
mov
repz
mov
mov
push
jmp
cmp
mov
push
aam
sub
inc
xor
xlat
mov
dec
xchg
mov
daa
sub
mov
or
dec
jae
sub
inc
mov
xlat
leave
out
out
push
cmp
lods
xchg
ins
loop
cwde
daa
adc
loopne
jmp
cli
stos
or
xchg
inc
test
mov
pop
rol
jbe
out
popa
jecxz
sub
inc
out
in
call
push
sub
dec
retw
xchg
cli
and
nop
xlat
or
pop
or
jae
shr
or
cmps
aaa
push
loope
dec
repz
jnp
aas
(bad)
sbb
in
lahf
loopne
lock
cli
mov
xor
pop
lds
aam
add
and
xchg
stos
cli
sbb
aad
inc
mov
les
or
mov
sub
shl
call
aaa
gs
lods
push
push
pop
ins
cmp
fwait
add
pop
mov
jbe
inc
ss
popf
xchg
sbb
push
pop
mov
sbb
pop
aas
fnstcw
push
call
rcl
and
adc
or
jnp
outs
xlat
cmp
test
sbb
jl
call
dec
cs
rcl
repnz
popf
(bad)
(bad)
or
loop
call
pushf
inc
inc
xor
mov
lods
xor
in
addr16
mov
mov
adc
xchg
popf
aam
jnp
mov
outs
ds
sub
inc
fbstp
ins
rol
pop
push
scas
mov
push
pop
imul
mov
sbb
jecxz
stos
mov
push
cmp
in
inc
jmp
hlt
inc
sbb
popa
add
popa
out
push
xlat
(bad)
fisttp
jbe
cmp
cmc
push
scas
jno
mov
sub
sbb
rcr
mov
retf
out
fwait
jno
adc
out
mov
and
in
jne
in
lea
stc
mov
and
call
lahf
xor
or
cmp
sub
jmp
inc
cmp
xchg
movs
cmps
outs
xlat
sbb
mov
iret
popa
push
cmps
(bad)
imul
ds
adc
sub
xor
inc
movs
push
pop
adc
in
jns
mov
push
bts
(bad)
movs
mov
push
or
fucomi
pop
dec
xor
sub
sbb
(bad)
jecxz
setb
or
enter
pop
pop
xchg
rcr
jmp
stc
cmp
lods
lock
push
xchg
mov
dec
sub
push
mov
repnz
xchg
outs
xchg
push
cmc
les
mov
xchg
js
mov
cmp
push
sub
jp
daa
cs
dec
and
test
xchg
and
jle
mov
movs
sub
mov
xor
add
adc
outs
iret
cmp
test
pop
aaa
stos
inc
inc
loope
push
in
push
das
lock
pop
inc
inc
aaa
in
aam
adc
inc
add
mov
mov
movs
bound
push
leave
mov
rcl
jmp
xchg
test
fcmovne
mov
push
jp
ret
sar
jmp
and
or
jno
data16
dec
imul
or
xchg
inc
jl
hlt
xor
xchg
push
pop
sub
xchg
add
rcl
sub
xchg
push
xchg
pop
dec
sub
inc
push
mov
cmp
adc
mov
call
mov
sub
shr
jecxz
push
cld
out
cmp
pop
ret
test
add
or
or
stos
jmp
jge
stos
xlat
pop
push
das
sub
add
mov
mov
sub
or
mov
inc
(bad)
repz
mov
fcom
add
push
jge
sub
adc
inc
js
jb
hlt
out
push
pushf
sub
fcom
call
scas
loop
ins
lods
jbe
push
mov
fnstcw
gs
jnp
fdivp
xchg
pop
nop
loopne
mov
mul
call
add
or
mov
lods
xor
daa
xchg
cmp
(bad)
cli
js
imul
adc
xor
sar
jb
push
lds
sbb
fsubr
jmp
jno
add
sub
(bad)
xchg
mov
mov
inc
adc
movs
test
jmp
mov
ins
sub
and
sbb
xchg
or
pop
test
stos
mov
pop
sbb
inc
inc
pushf
jmp
mov
scas
jecxz
ins
sbb
adc
sub
mov
int
stos
dec
shl
fist
cmp
cmp
lods
stos
cmc
out
jg
ins
cwde
or
xchg
mov
xor
push
dec
adc
push
loope
clc
in
dec
mov
dec
mov
dec
(bad)
inc
mov
cmp
adc
xchg
pop
sbb
stc
imul
mov
add
and
jge
jae
mov
loope
pop
xor
pop
sub
neg
add
pop
dec
sub
(bad)
jbe
out
test
cli
add
or
fist
mov
leave
sbb
test
jmp
sbb
jo
js
out
adc
ja
cmc
pop
pushf
int3
imul
inc
sbb
(bad)
mov
stc
dec
mov
lods
push
repnz
dec
sbb
add
inc
mov
dec
into
mov
leave
(bad)
test
and
pop
stos
cmc
loope
pop
test
test
add
or
imul
es
(bad)
cwde
jmp
(bad)
sbb
inc
push
fadd
inc
xchg
mov
out
mov
add
lock
or
fisubr
jle
xor
mov
lahf
fsubr
movs
push
rcl
sub
and
push
aam
int
dec
push
(bad)
(bad)
fild
fiadd
loop
outs
shl
push
outs
fstp
push
mov
push
into
xlat
jns
dec
jg
cmp
aam
and
cmc
push
jp
xbegin
dec
add
jmp
rcl
in
or
cmp
adc
jle
or
add
xor
dec
repnz
aas
ss
(bad)
xchg
sbb
mov
mov
inc
ss
sub
clc
inc
repnz
and
xor
test
mov
push
mov
dec
jo
(bad)
mov
fisubr
rcr
inc
cmp
or
mul
inc
cmp
std
add
xchg
sub
cmps
out
jp
cdq
ins
out
jmp
jecxz
repnz
dec
mov
push
mov
mov
mov
fdivp
std
jle
and
fs
les
enter
mov
mov
mov
and
dec
and
add
das
push
inc
add
jg
adc
or
pop
dec
popa
mov
xchg
jle
jl
adc
cmp
lock
jg
xor
sbb
aad
or
(bad)
loope
and
push
stc
adc
dec
add
aad
lds
nop
inc
adc
pushf
jecxz
sbb
pusha
das
repnz
or
lea
push
inc
aam
out
push
pushf
jno
iret
or
retf
in
shl
hlt
jmp
xor
inc
mov
adc
cmp
pop
cmps
xchg
pop
or
neg
sbb
ds
lea
add
jne
cmp
mov
lods
cmp
xor
inc
ins
hlt
cmp
add
pop
(bad)
cmp
pushf
lods
std
xchg
or
fsubr
fsubr
adc
mov
add
cli
icebp
test
cs
jl
lods
stos
(bad)
clc
fistp
pop
(bad)
dec
inc
lock
jo
add
cmp
xor
clc
add
push
fisttp
rol
xor
sti
int
cs
enter
out
je
test
or
cmps
addr16
daa
sub
ins
loopne
cmp
test
call
pop
aad
jbe
test
jmp
in
push
ins
in
in
lock
xor
dec
push
inc
hlt
push
mov
xchg
icebp
inc
jge
dec
sbb
mov
push
clc
ins
jge
fistp
pop
les
or
(bad)
ret
lods
jg
test
jmp
in
mov
das
and
test
push
inc
cmp
shl
adc
pop
add
mov
xchg
pusha
cmps
loop
fild
cmp
push
test
ins
mov
xchg
stos
(bad)
test
ret
lods
xor
mov
and
in
dec
lods
pop
(bad)
mov
add
inc
cmp
pop
push
sbb
int
aaa
rcr
ins
addr16
xor
iret
sbb
adc
push
mov
lea
pushf
stos
add
out
dec
jl
aaa
xlat
mov
shl
mov
mov
xor
xchg
mov
call
(bad)
imul
cs
jae
daa
xchg
sahf
jle
addr16
xlat
shr
shr
push
pop
lds
cmp
cmp
lahf
test
xor
or
gs
pusha
leave
or
mov
pop
loop
call
out
dec
mov
push
and
ins
push
test
cmp
sbb
data16
call
(bad)
ins
retf
ret
mov
test
addr16
and
(bad)
push
mov
mov
cmp
es
call
das
fdivr
cmps
dec
dec
adc
dec
cmp
add
sub
xchg
or
data16
fdiv
jno
sub
and
fs
xchg
sahf
cmp
add
fs
sti
push
dec
jmp
es
xor
into
ret
push
pop
and
pop
test
(bad)
imul
shr
int
jle
clc
sbb
ins
pop
add
mov
pop
cwde
push
mov
add
jne
shr
loope
inc
into
pop
js
call
cld
addr16
mov
or
mov
xchg
xchg
neg
imul
dec
mov
jg
mov
jb
les
jne
cmp
xor
ds
int
iret
leave
ret
shl
mov
pop
add
movs
lock
pop
(bad)
push
cmps
inc
sub
mov
dec
xchg
mov
clc
ret
mov
jno
jo
mov
pop
push
xchg
jle
xor
or
lahf
mov
xlat
lock
loope
test
bound
xor
outs
adc
and
sub
push
jnp
mov
repnz
(bad)
into
(bad)
(bad)
mul
sbb
rcl
call
mov
add
pop
idiv
xor
ds
push
push
div
push
xchg
mov
jb
and
push
test
sbb
adc
aaa
sub
xchg
cmp
dec
and
cli
jne
js
mov
and
jbe
mov
retf
pop
adc
mov
sub
pop
punpcklbw
test
lds
sbb
neg
rcl
fcomp
push
mov
pop
loop
sub
mov
pop
dec
pop
dec
cli
add
lahf
repnz
sub
adc
sti
mov
fbstp
daa
xstore-rng
cmps
inc
sbb
jo
dec
clc
add
sub
arpl
stos
push
sbb
mov
adc
(bad)
int
sti
cld
inc
pop
loope
jmp
push
out
and
jnp
cdq
dec
test
mov
es
dec
sahf
push
add
sub
sbb
int
in
jge
xchg
xor
fcmovne
jo
ja
inc
jb
add
pop
jne
push
mov
sbb
jbe
jmp
into
shr
stos
sbb
mov
push
mov
inc
das
es
mov
jmp
in
daa
imul
imul
loopne
pop
mov
fwait
mov
inc
cmp
outs
test
dec
shl
pushf
retf
int
adc
cmp
push
fs
in
xor
mov
jmp
scas
xchg
xor
add
push
jmp
cmp
cdq
mov
out
xlat
retf
mov
or
je
repnz
lods
mov
ror
ficom
pop
mov
xor
ss
mov
imul
popf
xchg
stos
sbb
fwait
out
lods
cmp
xor
mov
pop
sub
fldcw
mov
sub
ins
pop
vminsd
stos
fimul
(bad)
and
loop
(bad)
pusha
les
cmc
mov
mov
ror
mov
xchg
and
sub
shl
xlat
push
rcr
in
jne
icebp
push
xor
add
jb
xor
pop
fst
inc
retf
sbb
inc
scas
jge
xchg
xor
or
(bad)
jmp
mov
pusha
xchg
sbb
test
cwde
jl
cmps
data16
(bad)
and
sub
ja
pop
push
mov
out
dec
aad
in
outs
cmp
(bad)
aad
test
mov
jne
push
nop
push
pop
mov
pop
and
into
push
inc
mov
scas
es
mov
adc
aas
add
push
adc
cmp
mov
or
outs
aas
sbb
cmp
ret
and
xchg
inc
dec
stos
imul
pop
pop
les
sub
push
scas
loop
(bad)
push
lock
(bad)
and
es
adc
test
jle
ds
shr
test
mov
mov
in
daa
sbb
test
arpl
aam
test
rcl
or
adc
cmp
enter
scas
jmp
movs
mov
jmp
jns
shl
push
out
clc
ins
cld
push
je
je
jle
test
adc
sub
or
xor
mov
imul
in
mov
push
mov
mov
and
data16
movs
aaa
cwde
xor
sbb
inc
dec
sbb
jl
add
clc
sar
jns
inc
pop
(bad)
cld
adc
ds
in
mov
sub
jo
pop
in
pop
xchg
jbe
jno
mov
cmc
or
cmps
test
pop
fmulp
and
add
jle
adc
sub
repnz
(bad)
mov
fisubr
lock
xchg
xchg
mov
jge
jnp
hlt
dec
mov
fst
leave
inc
and
test
aad
xchg
(bad)
jecxz
cmps
pop
mov
in
sub
ffreep
push
sub
out
xor
hlt
(bad)
das
mov
ins
cmc
sub
mov
stc
push
sar
cmp
pop
cmp
mov
mov
in
push
jbe
push
pop
scas
adc
movs
dec
arpl
jge
movs
fmulp
frstor
push
out
stos
jmp
test
dec
bound
sbb
in
ja
out
cli
loope
mov
fs
sbb
imul
je
inc
mov
push
xor
dec
in
das
push
in
mov
jmp
test
inc
dec
hlt
xor
jbe
xchg
push
jl
dec
loop
data16
push
xchg
mov
mov
adc
lods
dec
push
sbb
jl
or
xchg
(bad)
inc
sbb
das
loop
sar
mov
or
mov
xchg
arpl
mov
aam
sbb
dec
add
aam
cmp
je
mov
jae
pop
xlat
stos
stc
mov
sbb
scas
cmp
call
mov
lahf
call
repz
(bad)
push
sbb
mov
and
out
push
stos
cwde
mov
jbe
mov
mov
add
mov
inc
stos
mov
pop
push
clc
outs
sbb
push
mov
xchg
xchg
out
into
mov
mov
jbe
pop
lahf
xchg
fld
dec
mov
sub
int
test
push
mov
ret
mov
dec
or
hlt
sub
jae
(bad)
lds
addr16
call
pop
loope
inc
jo
enter
arpl
dec
out
mov
test
gs
ds
sbb
ins
idiv
scas
out
push
test
cld
lahf
jae
stos
mov
sbb
cmp
mov
retf
test
cli
lds
cmps
mov
scas
xchg
push
cmp
stos
pop
pop
and
xchg
sub
ja
jns
pop
mov
xor
xlat
out
jp
stos
push
add
cmp
out
pop
pop
sub
ret
shr
rcr
mov
call
or
pop
mov
into
inc
and
mov
ins
sub
gs
push
test
cmps
test
mov
sub
and
mov
scas
xchg
sbb
pop
aaa
test
enter
aam
aad
push
adc
push
ss
into
dec
iret
aaa
enter
fdivr
fcomp
rol
or
mov
fcomi
sub
leave
push
retf
cmps
or
nop
in
sub
(bad)
mov
pop
sbb
mov
cmps
(bad)
cmp
mov
pop
(bad)
loope
inc
mov
movs
cmp
in
scas
dec
jp
dec
ja
cmp
lds
and
gs
cmps
ins
ins
test
mov
push
sbb
push
stos
jbe
dec
or
mov
adc
icebp
sub
cmps
dec
popf
popa
xor
or
loope
add
popf
shr
push
push
lods
mov
mov
mov
dec
push
scas
mov
repz
sub
push
das
sub
sub
inc
sbb
cmps
pop
add
or
stos
inc
aaa
xchg
ss
sub
fbld
lods
stos
int
pusha
retf
add
(bad)
mov
or
and
shl
fidiv
push
mov
sub
cmps
ret
push
mov
and
dec
ins
test
mov
xchg
mov
btc
push
lahf
and
out
pop
jecxz
movhps
mov
mov
out
push
fwait
sub
leave
dec
mov
movs
idiv
and
cmps
je
sar
ficomp
lds
push
call
jbe
jb
loop
mov
xlat
push
mov
cmps
push
add
cmp
pop
and
sub
sub
push
call
ret
push
arpl
jp
adc
sub
mov
mov
sbb
je
lods
push
xchg
fs
dec
(bad)
and
push
inc
cmps
pusha
add
not
pop
adc
jmp
scas
shl
and
adc
test
jne
shl
jne
daa
sub
rol
mov
ins
sub
rcr
ror
ds
cmp
es
leave
add
inc
push
cmps
addr16
ja
jecxz
scas
icebp
jecxz
and
pop
push
and
mov
sbb
bound
shr
mov
bound
stc
mov
fnstsw
push
jmp
into
and
add
and
loopne
pop
mov
or
sar
dec
fstp
addr16
out
and
scas
je
pushf
dec
enter
iret
shl
es
loop
sub
das
xchg
pop
and
inc
pop
mov
jle
fld
and
sub
xor
fild
inc
jo
jg
push
mov
pop
adc
jge
in
rcl
inc
scas
jp
inc
inc
sahf
jae
fisttp
push
jmp
cs
xor
and
sti
std
jmp
push
cmp
retf
cmps
or
pop
adc
adc
clc
jg
mov
sbb
dec
js
movs
push
mov
pop
mov
int3
mov
ja
sar
mov
xchg
ds
ss
das
aaa
lahf
sbb
movs
xor
fistp
lods
dec
push
pop
nop
mov
pop
sbb
xor
iret
and
mov
test
push
inc
ss
aas
pop
pop
xchg
das
mov
xor
mov
jae
mov
push
call
std
mov
pop
dec
mov
mov
lds
xor
call
pop
inc
jp
mov
fild
cmp
bound
lods
and
xor
data16
jno
mov
sub
movs
test
icebp
mov
outs
sti
mov
or
(bad)
lock
imul
out
dec
(bad)
call
sbb
jnp
and
movs
fwait
inc
ret
mov
retf
(bad)
cs
jnp
ror
(bad)
jae
jge
stc
mov
push
xchg
inc
xor
into
and
out
add
aam
ficomp
cdq
pop
rcl
fwait
mov
fld
repnz
adc
ins
xchg
int3
repz
jge
sahf
dec
outs
or
out
mov
dec
in
xchg
ins
lock
sbb
cld
in
sar
int
mov
out
xor
retf
ret
mov
sub
mov
cmp
push
xor
or
das
and
add
sub
mov
xchg
(bad)
cmp
icebp
mov
sub
rcr
in
sti
(bad)
mov
ss
mov
mov
sbb
pop
push
dec
sub
add
jnp
cmc
(bad)
mov
dec
bound
cdq
xchg
bound
push
pop
mov
mov
in
push
scas
cmp
push
loop
test
cdq
add
addr16
stos
dec
mov
ins
pop
shl
mov
dec
popf
xchg
jb
call
aas
jge
lods
ja
daa
fnstcw
dec
cdq
or
iret
adc
ja
popf
popf
mov
xor
inc
enter
push
int3
mov
jbe
repnz
mov
xlat
leave
push
pop
mov
popf
and
cmps
aaa
mov
adc
adc
mov
xor
lds
dec
push
xchg
out
repz
mov
stos
mov
cmp
(bad)
call
dec
retf
cli
into
popa
push
sub
pop
mov
cmp
bound
ret
clc
xchg
sti
pop
(bad)
cli
scas
enter
out
sar
or
mov
repnz
mov
mov
dec
jp
pop
sub
mov
mov
fwait
sbb
test
ret
adc
cdq
push
cmp
rcr
jno
test
push
mov
loopne
dec
popa
stos
(bad)
in
jge
push
jmp
and
in
leave
out
and
sub
cdq
ja
imul
xchg
xor
ja
(bad)
stc
pop
cwde
call
jg
test
mov
lea
fwait
je
outs
out
in
gs
je
or
push
test
shl
in
pop
scas
and
pop
xor
mov
(bad)
not
xchg
cmpxchg
inc
jge
lods
inc
dec
das
fisub
(bad)
stos
icebp
jae
scas
inc
test
mov
(bad)
loope
dec
xchg
jne
and
and
pop
in
and
xor
xor
add
lahf
mov
jmp
les
test
dec
mov
and
leave
jnp
mov
aas
pop
adc
mov
loopne
aas
fistp
fcmovu
fs
and
push
jp
mov
not
mov
push
(bad)
call
adc
dec
inc
push
call
cld
or
add
push
imul
test
mov
rcl
push
mov
mov
sub
nop
(bad)
mov
lods
and
int3
add
imul
enter
mov
mov
jno
imul
push
sbb
sub
mov
pop
cmc
ret
fild
xchg
push
popa
push
lds
aas
add
push
mov
jo
adc
push
out
sub
stc
inc
inc
ins
xchg
jns
test
call
test
xlat
and
push
lods
aas
jo
cmp
push
pop
lock
jmp
dec
imul
cmp
cmp
mov
push
cmps
xchg
jb
jle
aaa
cmp
push
xor
inc
push
adc
mov
aad
mov
dec
mov
hlt
xchg
ins
pop
sbb
or
aaa
out
scas
dec
loop
jp
mul
fidiv
ja
call
jg
rol
aaa
sub
and
or
jmp
cdq
push
xor
add
push
cmp
fistp
in
rol
jmp
pop
sub
(bad)
leave
aad
outs
aaa
je
(bad)
push
not
test
scas
inc
lods
test
sbb
outs
and
pop
dec
icebp
xlat
cmps
pop
in
mov
lock
mov
cmp
mov
and
fimul
sbb
sub
aam
(bad)
sti
and
push
lock
out
mov
iret
ficom
shl
and
sbb
popf
retf
ds
dec
sbb
stos
jmp
mov
scas
pop
(bad)
jbe
jmp
bound
std
dec
mov
xchg
mov
shr
mov
stos
outs
dec
ins
repnz
adc
pop
lahf
aaa
outs
ins
div
push
popf
pop
mov
mov
outs
push
gs
test
arpl
cmp
loop
in
cmp
in
cdq
ret
and
clc
loope
sub
pop
inc
loopne
mov
loope
xor
test
push
or
imul
sbb
inc
or
jmp
pop
das
push
mov
rcl
stos
cmps
in
adc
(bad)
xchg
hlt
imul
mov
outs
xchg
lahf
mov
cmps
push
dec
ficomp
inc
add
mov
(bad)
in
into
iret
call
and
outs
aas
enter
sub
push
add
hlt
mov
ret
test
xor
xchg
jns
fwait
push
dec
hlt
or
xchg
cwde
or
jmp
call
je
dec
mov
jmp
dec
or
test
movs
pop
bound
add
mov
push
jne
es
mov
cmps
fld
rcl
xacquire
pop
mov
adc
pop
inc
movs
fs
pop
into
or
jp
je
arpl
sub
add
adc
push
outs
or
lahf
and
xor
out
stos
cwde
pop
inc
lea
inc
sar
cmp
mov
popa
not
dec
call
inc
mov
pop
jno
das
add
inc
and
jnp
call
stos
mov
scas
mov
add
clc
jg
mov
adc
mov
and
test
mov
and
pop
mov
add
ins
iret
adc
sub
and
shl
dec
aaa
aaa
mov
cmp
mov
and
shl
(bad)
mov
xchg
push
push
dec
clc
mov
test
and
outs
push
cmps
jmp
adc
jmp
add
jle
cmp
retf
out
sbb
outs
sub
and
stos
inc
cmp
add
cli
cs
and
adc
mov
int
cmp
gs
xor
imul
jmp
(bad)
cwde
loop
shl
push
add
mov
nop
sbb
adc
in
not
out
cdq
(bad)
mov
loopne
into
in
movs
mov
push
stos
pop
and
cmps
dec
jbe
sub
pop
fscale
test
and
enter
xchg
pop
adc
or
into
sub
clc
pop
xor
sbb
xor
push
movs
inc
lods
nop
mov
mov
lods
xchg
dec
and
stos
ins
inc
retf
pop
add
add
sbb
xchg
sub
mov
cmps
sub
push
jo
or
push
and
and
inc
cmps
jecxz
xchg
sbb
ss
cmovg
mov
or
add
jne
adc
push
xchg
dec
sub
jmp
mov
mov
mov
jmp
and
jecxz
jbe
out
xor
aas
ret
lds
and
aas
movs
sbb
aam
aad
dec
arpl
sbb
xchg
(bad)
retf
and
push
lock
mov
jb
mov
fidiv
cmps
push
sbb
movs
xchg
mov
sbb
push
out
add
cdq
sub
and
jp
sub
(bad)
mov
stos
cmp
adc
call
jae
clc
or
push
jle
in
test
xchg
dec
and
sar
loopne
fldlg2
sti
cmp
cmps
sub
push
jle
mov
push
cld
mov
(bad)
and
enter
ins
(bad)
scas
(bad)
lahf
test
dec
push
xchg
lahf
retf
or
inc
jae
adc
xor
lock
cwde
dec
(bad)
ss
push
call
xchg
lods
sbb
aad
push
(bad)
jno
dec
jb
push
mov
les
stos
and
mov
stos
cmp
test
shl
mov
(bad)
sar
mov
jae
pop
cmps
retf
mov
ins
or
sbb
cmp
push
dec
popf
out
fcmovbe
mov
imul
mov
xchg
ss
test
das
xorps
xchg
jb
xlat
mov
push
cmp
gs
call
das
add
shl
imul
lods
cmp
fwait
mov
cmc
lea
leave
mov
idiv
stos
cld
or
jnp
clc
shr
add
fdiv
add
sub
sar
xchg
lea
jno
shl
sti
mov
push
test
lds
pop
cli
pop
test
ret
loop
inc
inc
cmp
sub
scas
cmp
bnd
test
hlt
test
add
sbb
and
sbb
xlat
mov
mov
push
push
in
cmp
mov
mov
dec
jle
cmps
sbb
daa
dec
xor
shl
call
push
dec
clc
fsqrt
nop
ins
mov
ds
repz
(bad)
sbb
inc
or
ret
jl
(bad)
jnp
pop
leave
call
cwde
iret
push
leave
mov
cmps
iret
and
mov
mov
call
push
dec
sub
push
adc
push
hlt
pusha
cmp
pop
sub
fsincos
outs
push
fisubr
mov
mov
or
dec
jg
cld
stc
cmps
leave
leave
movs
pop
jae
sbb
retf
pop
push
adc
jb
inc
cli
push
or
mov
mov
cmp
fdivr
xor
enter
mov
lahf
sar
ret
rcr
sub
add
pop
pop
push
xor
and
and
int
stos
push
jne
and
aad
and
call
pop
xchg
(bad)
jmp
out
or
pop
dec
out
outs
add
inc
mov
adc
mov
and
cmp
cmps
ret
test
push
ins
push
jmp
xor
pop
inc
fwait
cdq
loope
imul
shl
push
or
pop
pop
sbb
xchg
js
adc
jle
jmp
xchg
ins
jae
das
cmp
sbb
clc
ins
loop
bswap
xor
sti
fcom
mov
setg
int3
js
add
arpl
icebp
lock
dec
dec
mov
or
xchg
dec
and
dec
test
mov
push
pop
push
scas
out
pop
mov
in
ja
bound
inc
adc
xor
sbb
inc
pushf
js
jbe
lods
(bad)
in
ss
jl
in
fcmovnu
in
(bad)
nop
das
mov
or
cmps
test
out
(bad)
xlat
jg
sub
push
fld
frstor
sbb
mov
or
dec
push
inc
ins
in
adc
in
mov
dec
and
call
xor
pusha
xor
ror
pop
mov
aad
in
mov
hlt
push
(bad)
jmp
mov
add
inc
jbe
cwde
test
mov
adc
sub
jg
in
xchg
iret
fdivr
fisub
int
pop
ja
repnz
or
fistp
sub
pop
sub
loopne
push
mov
addr16
mov
xchg
pop
loopne
bound
cmps
fdiv
mov
cdq
mov
pop
in
cli
lods
xchg
repnz
push
leave
popf
aas
cdq
stos
outs
stos
rcr
jmp
cld
or
xor
and
mov
mov
pop
aam
and
hlt
adc
pop
jmp
xchg
sbb
mov
sub
not
loop
ficom
pop
sub
(bad)
daa
das
cmp
(bad)
push
or
sbb
jp
mov
(bad)
jp
and
fidiv
sub
out
push
inc
xlat
and
xchg
shr
jne
aad
sub
pop
mov
mov
out
push
std
and
pop
mov
xchg
xor
pop
fptan
pop
retf
ror
mov
sbb
mov
push
sbb
cmp
xchg
cwde
jmp
add
xchg
xchg
scas
inc
(bad)
dec
mov
push
ret
and
mov
cwde
dec
dec
into
in
xchg
shl
push
dec
mov
push
das
xor
mov
ins
mov
sbb
ret
pop
xor
push
or
rcr
cmp
cdq
repz
lods
mov
sahf
and
push
leave
movs
cmp
sbb
xchg
inc
ins
loop
loop
jae
xor
les
aaa
push
stc
sub
or
addr16
aam
repz
push
or
xchg
das
pop
movs
or
add
push
(bad)
fst
dec
in
in
adc
shl
in
dec
push
nop
out
ja
sahf
push
or
xchg
test
imul
cdq
push
or
mov
ins
pop
fldenv
shr
push
jle
xor
neg
pusha
lods
repz
push
cwde
ja
lods
mov
mov
push
cmp
call
mov
outs
or
lahf
fidiv
int
jecxz
push
jp
push
aam
lea
je
ins
mov
out
outs
sbb
xor
jbe
mov
push
push
jbe
ror
inc
xchg
imul
inc
pop
jne
int
inc
cwde
push
xor
dec
loop
in
div
aad
xor
fidivr
cdq
inc
mov
repnz
pop
mov
movs
or
mov
enter
push
inc
addr16
dec
inc
add
xchg
scas
leave
mov
call
loopne
mov
into
jmp
xchg
mov
sub
aas
hlt
stos
cmp
jmp
cs
lods
retf
mov
dec
pop
mov
mov
stos
mov
popa
(bad)
pusha
ret
(bad)
(bad)
stc
jmp
push
sub
fidivr
jae
pop
gs
jns
pop
inc
(bad)
in
test
int
xchg
hlt
bound
adc
stos
xchg
adc
push
sub
or
cmp
add
shl
mov
fwait
daa
sbb
cmc
mov
aad
mov
in
sbb
push
test
test
sbb
fwait
int
popa
mov
add
xchg
clc
pop
add
inc
lods
mov
sbb
cs
cmc
pop
movs
mov
pop
out
hlt
pop
sbb
mov
and
lock
sbb
and
aas
sbb
xor
scas
adc
xor
jl
mov
inc
push
movs
push
sar
les
das
adc
fwait
fwait
pop
inc
test
dec
hlt
push
xchg
mov
mov
jns
pop
repnz
mov
daa
fild
sub
rcr
push
adc
ret
cmps
and
push
pop
mov
sbb
adc
(bad)
mov
jnp
xchg
idiv
inc
cmp
mov
repz
push
adc
aaa
adc
adc
loop
mov
ror
jnp
push
cmc
scas
or
stc
mov
jg
ja
xchg
or
repnz
out
dec
mov
outs
mov
inc
pop
xchg
mov
rcr
mov
ret
jne
adc
sub
jp
pop
mov
jb
das
daa
lock
mov
add
out
push
mov
xchg
popa
repz
or
out
cmp
mov
fs
dec
movs
xchg
addr16
push
ins
xchg
xchg
jl
push
pop
mov
or
pop
or
movs
gs
cs
xchg
ins
cmc
sub
aas
mov
in
sbb
test
jmp
in
jmp
outs
out
inc
test
clc
jmp
xchg
(bad)
pop
inc
jo
push
mov
pop
cmp
xor
shr
lds
mov
pushf
bound
mov
jg
or
xchg
dec
stos
mov
aaa
jmp
xchg
rcr
fild
jmp
not
pop
nop
(bad)
fnstenv
nop
sar
jb
inc
ins
sub
je
jbe
lock
jecxz
xor
mov
xor
push
lahf
push
ror
add
test
mov
pop
mov
(bad)
mov
icebp
lea
mov
loope
idiv
std
xchg
repnz
imul
jns
push
clc
lds
inc
push
mov
cmp
dec
and
fs
jecxz
add
jb
or
sub
fcom
pop
div
mov
jp
mov
fsub
sub
and
bound
imul
jle
pop
out
xlat
icebp
xchg
pop
icebp
std
bnd
into
mov
add
xchg
nop
int
call
jb
jb
adc
push
mov
scas
jmp
ins
dec
mov
sti
jg
mov
daa
jne
ins
clc
mov
stos
jp
mov
sbb
push
ins
pop
mov
mov
sbb
add
jle
xchg
ins
xor
jo
lock
std
jge
pushf
aad
in
ins
(bad)
xchg
btr
test
add
stc
ret
sbb
neg
test
xchg
pop
stos
setno
fwait
and
clc
cwde
mov
movs
push
add
mov
xor
lea
js
in
mov
fbstp
mov
push
pop
or
mov
pop
stc
push
into
sbb
sbb
(bad)
arpl
jmp
xchg
mov
(bad)
mov
jb
mov
push
push
jae
mov
mov
sti
xor
pop
dec
add
add
push
mov
outs
outs
mov
xchg
clc
fistp
and
and
sbb
dec
jg
xchg
and
into
and
inc
stc
imul
cmp
out
sub
cwde
(bad)
mov
(bad)
cli
leave
inc
xchg
imul
in
xchg
das
dec
stos
int
or
fild
es
lock
sbb
mov
dec
xor
out
daa
cmp
sbb
and
jecxz
popf
iret
pop
fwait
icebp
inc
popf
push
jl
arpl
or
lock
jecxz
fsubr
mov
sbb
jl
pop
xor
imul
sub
pop
sti
push
jecxz
out
xor
(bad)
or
push
dec
add
mov
cdq
sub
xor
pop
xchg
out
loopne
jg
cmps
outs
std
xor
lock
push
inc
jmp
mov
sub
fcom
jle
push
repnz
(bad)
retf
xchg
pop
xchg
into
jmp
mov
pop
das
xchg
loopne
ins
mov
lahf
mov
leave
or
xchg
mov
dec
cmps
adc
pop
inc
jne
gs
ror
enter
jmp
cs
nop
jno
sbb
inc
sub
call
jo
xor
lods
pop
and
or
jns
adc
jno
ficom
or
mov
mov
lock
sbb
push
outs
(bad)
add
jae
leave
scas
bound
adc
in
cld
aam
or
mov
cdq
fisubr
sbb
ret
(bad)
(bad)
cmc
popa
(bad)
jp
sub
(bad)
rcr
sub
pop
shl
jb
jb
or
sbb
xlat
cmp
pop
mov
push
hlt
or
rcl
call
sub
fwait
in
call
dec
xchg
and
pop
jecxz
lea
inc
xchg
mov
mov
int
xchg
jl
sub
es
cmp
ret
in
jo
into
idiv
cs
(bad)
(bad)
cmp
mov
jae
jmp
icebp
push
aam
jae
mov
dec
mov
rcl
loopne
call
fdivr
or
dec
jns
imul
xor
mov
jne
mov
jl
and
movs
scas
mov
adc
inc
lods
cli
sbb
stc
mov
jge
out
out
je
arpl
scas
jnp
xchg
jns
in
test
loope
movs
test
xchg
xor
and
ror
fisttp
and
hlt
icebp
pop
adc
imul
fcom
call
(bad)
xor
add
jae
jg
xor
push
mov
loopne
sub
out
add
imul
imul
add
loop
icebp
nop
(bad)
mov
test
inc
in
mov
pop
out
mov
mov
(bad)
outs
dec
inc
mov
ins
xchg
jp
dec
ss
add
xor
sbb
fmul
cdq
xor
aas
mov
mov
shr
mov
ins
lods
and
or
ins
test
sub
jno
js
retf
cs
sub
ss
movs
dec
idiv
dec
pop
inc
outs
jae
(bad)
lods
mov
int
xor
mov
fmul
cmp
nop
xor
jg
sti
and
das
lds
adc
(bad)
xlat
repz
sbb
(bad)
mov
adc
dec
add
in
shr
mov
mov
sbb
jae
out
or
popf
sti
movs
and
lods
ret
pop
mov
and
out
dec
js
sbb
or
xor
fisttp
rol
stos
cmp
inc
fst
jmp
fxch
lds
in
in
xchg
fwait
into
jbe
add
mov
xor
call
or
sbb
mov
mov
repz
scas
mov
les
pop
mov
stc
shl
int3
xor
cmps
lea
xchg
stos
mov
pop
data16
and
cmp
inc
scas
pop
inc
sub
xor
sahf
pop
or
push
jmp
adc
sbb
lock
or
sub
mov
enter
lock
fwait
les
cmp
or
in
dec
inc
cmp
adc
and
aas
or
fmul
mov
retf
push
ja
jle
and
stos
cmp
fild
and
mov
adc
adc
mov
xchg
add
mov
xchg
inc
scas
pop
inc
mov
movs
mov
mov
shl
mov
and
in
mov
or
in
aaa
jp
or
sbb
fist
jle
push
addr16
fcom
sub
sbb
xacquire
enter
inc
imul
(bad)
pop
mov
in
push
loope
jge
shr
sub
xlat
cmps
test
int3
dec
mov
jbe
ret
sub
and
cwde
lods
mov
je
jecxz
in
repz
mov
out
cld
scas
shl
lock
shr
dec
mov
push
mov
push
cmps
jo
fwait
xor
and
retf
es
jg
or
push
jbe
in
out
push
xor
add
sub
cmovge
adc
pop
sub
sti
int
mov
shr
push
iret
jecxz
xchg
xchg
dec
fstp
dec
xchg
bound
xor
(bad)
jp
sub
loopne
sti
and
outs
imul
add
sub
pop
mov
dec
mov
cld
out
fadd
jae
mov
lods
xor
pop
inc
repz
fiadd
neg
sub
add
cmp
xchg
sar
xchg
jne
sbb
jbe
sub
mov
and
or
pop
pushf
lds
int
mov
cmc
test
test
sbb
test
pusha
outs
xor
sti
and
pop
dec
pop
jmp
adc
push
push
stos
fisttp
jae
mov
adc
xor
mov
fidivr
adc
aaa
cwde
fcmovb
ror
xchg
dec
je
mov
jp
and
cdq
sbb
mov
lahf
xchg
mov
cmps
mov
or
xchg
cld
cs
ja
popf
jge
call
ror
cli
fisttp
out
scas
sub
or
pop
push
and
ds
and
stc
outs
sti
mov
hlt
nop
ins
in
xor
fld
(bad)
adc
cwde
sbb
mov
dec
pop
mov
xchg
jle
out
lahf
jne
cmp
inc
dec
pop
and
cmps
repnz
mov
fidivr
or
jae
outs
cmp
jl
ins
movs
push
add
mov
or
(bad)
call
int3
xchg
lock
dec
dec
repnz
fdiv
jg
popa
ficom
pop
aam
adc
sbb
cmp
cmc
cmc
ss
and
jmp
adc
test
fnsave
mov
xchg
inc
adc
adc
int3
xor
inc
jge
jmp
aaa
inc
xor
inc
inc
xor
test
inc
xchg
sbb
mov
xchg
pushf
or
call
jae
xchg
cwde
lods
sub
dec
jb
popa
aaa
pop
jp
daa
jnp
and
fldenv
jge
mov
sbb
popf
js
push
xor
cmp
dec
aaa
daa
pusha
fisttp
adc
mov
sbb
jp
pop
lods
in
and
mov
cmps
mov
cmp
cmp
fisubr
pop
stos
cmp
std
scas
sbb
int3
mov
sub
pop
das
loopne
mov
and
push
and
loopne
xchg
adc
loop
iret
in
loop
cld
icebp
push
jle
xor
push
adc
fbld
fcom
dec
jnp
lahf
imul
fs
sub
mov
shl
popa
inc
ret
cmp
mov
adc
jl
push
adc
std
nop
jl
lods
fistp
fnstcw
add
sbb
jmp
xor
and
pop
ins
push
fcomip
pushf
adc
lea
nop
sti
ds
dec
(bad)
enter
pop
sbb
aad
mov
ss
push
push
mov
sub
xor
cmp
cmp
or
aam
push
push
jmp
dec
addr16
stc
cmp
cli
nop
(bad)
adc
mov
aam
jno
mov
pop
cs
inc
jge
out
std
mov
sbb
(bad)
and
in
adc
inc
cmps
xchg
shl
and
mov
ins
xor
cmp
outs
aaa
add
fbld
rcl
imul
add
(bad)
out
sub
sub
pusha
aam
(bad)
daa
mov
or
mov
(bad)
adc
loope
retf
gs
mov
and
jg
sub
xor
mov
dec
aas
mov
mov
repz
mov
(bad)
push
sbb
pop
sbb
pop
gs
ja
mov
inc
xchg
mov
xchg
mov
push
lods
in
jb
cmps
mov
dec
mov
jo
jmp
jg
add
inc
add
pop
xchg
dec
xchg
(bad)
cmp
jmp
bound
or
(bad)
sbb
and
cli
out
mov
popf
pop
js
ror
sub
sar
inc
out
sahf
fiadd
fsub
das
loope
mov
punpckhwd
cmp
rol
or
les
pop
jne
gs
pop
jns
mov
in
clc
pop
pop
xor
hlt
sub
sub
movups
push
xchg
(bad)
lahf
out
ret
inc
cdq
adc
dec
dec
movs
jmp
lds
mov
dec
nop
repz
iret
push
dec
dec
mov
push
dec
mov
cwde
push
or
or
test
movs
inc
out
enter
retf
xor
add
iret
movaps
(bad)
stos
scas
aad
shl
mov
jo
mov
mov
mov
or
inc
jge
ins
outs
int
push
inc
mov
push
retf
mov
div
push
adc
(bad)
cmp
inc
mov
xor
dec
int3
or
or
retf
sub
cmp
popf
jecxz
(bad)
or
loopne
popf
movs
nop
enter
lods
je
xor
out
push
sub
in
jo
xchg
jg
xchg
fld
mov
mov
push
mov
inc
test
or
(bad)
mov
cmp
loopne
add
adc
mov
pop
adc
jl
or
jmp
xlat
push
sub
inc
cs
or
xchg
into
(bad)
out
push
sbb
cmp
and
(bad)
xchg
movs
out
push
sbb
pop
jb
jns
xchg
xchg
lds
inc
lods
cwde
dec
aad
out
push
push
push
popa
mov
mov
out
dec
int3
xor
cdq
lock
out
es
pop
xor
dec
(bad)
mov
(bad)
adc
sub
iret
sub
ja
imul
in
mov
mov
daa
jmp
inc
sbb
inc
xor
ja
and
mov
je
xor
push
stc
out
mov
call
sbb
or
hlt
mov
mov
mov
ds
outs
lock
ret
dec
sub
mov
loopne
(bad)
sbb
cli
loop
sbb
xor
mov
xlat
xor
cwde
rcl
cs
(bad)
pop
xor
or
test
mov
out
sub
add
movs
clc
or
sub
xchg
es
fidivr
push
mov
sub
jg
cmp
sub
jmp
retf
or
jae
mov
fidiv
aad
push
repnz
(bad)
adc
push
sub
aam
mov
cdq
bound
out
sub
mov
add
mov
loopne
mov
aas
jmp
cmp
jg
inc
mov
ret
pop
test
sbb
ins
jb
and
aaa
or
dec
cmc
pop
imul
ret
mov
cmps
push
addr16
mov
test
arpl
int3
adc
retf
dec
or
pop
and
cmp
test
sbb
retf
lock
mov
jp
aaa
arpl
fucomip
js
mov
stc
and
mov
pop
pop
shr
aam
imul
in
sbb
clc
xchg
dec
and
jns
mov
sub
call
mov
lock
enter
repnz
ds
dec
xor
fmul
jns
jo
push
arpl
mov
or
xlat
div
fcom
sar
add
push
ja
bound
sub
xchg
inc
xor
pop
(bad)
adc
jbe
cwde
sbb
cld
push
pop
xchg
and
xchg
push
pop
int3
aas
cmp
mov
(bad)
stos
jbe
mov
(bad)
shl
loopne
psllw
loopne
cmc
or
sub
fs
cmc
scas
pop
fprem
push
ret
xchg
push
push
xor
fs
hlt
mov
es
xlat
out
data16
jge
pop
add
pop
mov
mov
mov
data16
mov
inc
das
dec
mov
mov
jbe
push
sbb
mov
mov
enter
mov
inc
fdivr
out
jmp
adc
and
push
test
and
mov
ja
sub
cmp
xchg
mov
loope
arpl
outs
fsubp
nop
or
test
test
cmp
cmc
dec
jge
push
and
stos
xor
add
mov
adc
ja
jl
(bad)
fld
rol
push
movs
lea
fidivr
pop
fs
into
jnp
jmp
popf
mov
jns
or
jo
xchg
pop
leave
bound
mov
in
pop
scas
and
xchg
mov
jge
clc
rol
pop
sbb
clc
jecxz
cmp
dec
fcomp
xlat
ins
sub
das
jle
clc
sub
mov
icebp
pop
hlt
(bad)
(bad)
dec
lea
adc
adc
lock
loopne
data16
dec
push
out
inc
scas
loope
call
inc
inc
and
outs
pusha
sbb
(bad)
in
jbe
rcr
fidiv
cmp
pop
and
push
in
inc
push
xor
xor
sbb
add
das
jmp
push
arpl
dec
dec
pusha
aas
jne
ret
es
jns
push
loope
(bad)
aas
stos
pusha
(bad)
int3
shr
in
mul
pop
push
lock
mov
jo
mov
leave
mov
push
out
add
and
mov
shr
cmp
psllq
jle
xchg
pop
in
retf
es
mov
or
das
sti
inc
shl
movs
mov
outs
cli
dec
call
(bad)
out
mov
and
je
sbb
mov
arpl
je
fwait
jae
fcomi
adc
xchg
loopne
cmp
sbb
pop
addr16
popa
outs
fist
sub
pop
mov
sub
sbb
aam
shl
sahf
dec
loop
(bad)
daa
push
add
jmp
push
xchg
lods
popf
movs
call
sbb
jecxz
cmps
call
(bad)
out
sub
sbb
pushf
ja
mov
dec
sti
jp
loope
mov
ja
xor
in
or
or
push
neg
mov
test
sbb
in
hlt
jmp
jecxz
sub
sbb
or
adc
add
bound
jnp
into
mov
sbb
lods
inc
inc
inc
jnp
inc
mov
test
popf
add
dec
stc
adc
mov
sbb
bound
add
fstp
inc
or
add
retf
sbb
push
fs
(bad)
repz
iret
mov
lea
enter
mov
outs
mov
mov
pop
xchg
jle
repnz
mov
mov
das
mov
(bad)
rcr
dec
push
movs
mov
pop
mov
(bad)
sahf
int
mov
popf
in
fidivr
(bad)
xchg
in
push
out
mov
cmp
and
jle
rcl
fld
jbe
or
(bad)
jle
and
pop
pop
cmp
xor
pop
mov
cmp
xchg
data16
dec
fiadd
jmp
mov
lock
jno
loop
add
ror
test
sbb
pop
jns
(bad)
aaa
jb
shl
xchg
cmps
mov
lahf
leave
xchg
cmps
into
dec
pusha
fcom
lock
loopne
mov
dec
add
push
aaa
pop
push
jmp
icebp
inc
hlt
mov
ret
aad
(bad)
in
pop
sahf
lea
pop
mov
in
or
mov
dec
and
das
hlt
out
push
ret
sahf
icebp
inc
mov
and
pop
mov
ret
fild
mov
jg
pop
cmps
or
js
(bad)
int3
lods
cmp
mov
in
fwait
test
mov
shl
enter
in
inc
cmp
fisubr
mov
add
inc
cmc
loope
loope
dec
pop
sbb
cmp
inc
cmc
test
into
add
pusha
xor
xor
test
in
jns
in
repnz
gs
and
xor
enter
xchg
adc
test
inc
sti
div
inc
jle
cmp
dec
into
repz
and
popf
ins
mov
in
jecxz
xchg
xor
push
push
out
data16
mov
xchg
into
and
(bad)
icebp
inc
movs
push
ror
or
xor
sti
rcl
push
bswap
stos
inc
or
(bad)
xchg
dec
cmps
adc
vpacksswb
stos
pop
ss
dec
xor
cmp
jecxz
fistp
aad
pop
mov
push
cmp
mov
mov
cmp
pop
inc
enter
dec
icebp
in
push
jns
dec
dec
or
fcomp
xchg
jno
jne
mov
stos
push
dec
pop
hlt
sbb
in
es
push
dec
call
adc
jmp
js
mov
es
aas
inc
xchg
cmc
add
jnp
rol
jbe
inc
mov
jne
add
lahf
call
bound
mov
mov
mov
mov
sbb
or
mov
call
cmp
mov
imul
into
adc
xchg
imul
cmps
stos
inc
dec
mov
fs
or
jne
or
cmps
mov
push
(bad)
cmc
mov
add
sub
push
loope
xchg
push
movs
out
jne
cli
or
mov
xchg
xchg
call
xchg
aas
jp
mov
xchg
imul
mov
pop
sub
scas
das
jbe
rcr
cmp
scas
jg
aad
cmp
xchg
mov
inc
jp
pushf
scas
jo
(bad)
xlat
mov
test
xchg
out
and
adc
loopne
lods
call
xchg
ret
mov
mov
xor
jno
scas
fdivrp
jg
lea
and
pop
jo
inc
inc
xchg
into
or
mov
dec
xor
xchg
mov
add
sub
mov
mov
outs
pop
mov
mov
es
jmp
test
push
inc
sub
add
sar
sbb
sub
xor
pop
(bad)
fcomp
(bad)
and
xor
or
(bad)
scas
dec
push
cli
jge
int3
cmp
sbb
(bad)
fstp
test
mov
push
mov
stc
pandn
adc
dec
dec
loopne
xor
sub
xchg
xor
or
adc
jge
sub
xor
popa
and
(bad)
les
jmp
adc
iret
jg
out
add
jo
inc
mov
es
adc
or
jo
xchg
adc
les
ficom
int
cmps
mov
jl
nop
inc
and
mov
xchg
test
jae
es
pop
imul
push
sar
dec
xchg
and
mov
pop
push
pop
add
dec
test
and
(bad)
out
jns
cmps
lds
mov
add
or
jno
bound
out
mov
adc
jle
imul
pop
es
xchg
and
mov
push
cmp
popf
or
inc
clc
or
cmp
hlt
adc
sbb
push
jmp
sub
mov
xor
neg
cmp
pushf
sbb
cmp
cdq
inc
or
add
aam
push
and
jg
ja
(bad)
sbb
inc
xchg
arpl
(bad)
mov
mov
mov
les
adc
std
stos
xchg
xchg
iret
repz
pop
and
jmp
loope
sysenter
lea
add
lds
rol
shr
pushf
fnstenv
push
xor
cmp
int3
fs
mov
cld
lahf
sbb
into
loopne
shl
dec
dec
or
bnd
sub
jge
inc
xor
mov
sub
movs
push
or
push
imul
xor
adc
lock
inc
iret
jmp
imul
fwait
retf
bound
rcr
retf
dec
out
mov
sbb
call
popf
cmps
ds
rol
popf
jp
mov
jmp
jmp
push
fmul
int3
nop
hlt
ja
mov
std
aas
inc
mov
xor
test
or
xlat
jmp
pop
fcmovu
in
add
mov
sub
aaa
cmc
lock
mov
cmp
dec
mov
or
dec
test
(bad)
ret
sub
(bad)
xchg
push
scas
(bad)
fidivr
jae
and
cmp
mov
test
(bad)
loop
xchg
das
inc
arpl
and
jl
pop
cmp
fdiv
pop
dec
pop
jl
mov
dec
mov
mov
pop
dec
jno
std
xchg
xchg
push
fcomp
xor
in
sub
or
(bad)
xchg
add
sbb
scas
hlt
pop
dec
addr16
in
call
mov
repz
aas
rcr
jnp
mov
loopne
outs
sub
push
les
mov
mov
cmp
xchg
lods
xor
ror
rcr
xor
jbe
add
test
mov
push
movs
mov
scas
sbb
addr16
(bad)
jg
retf
pop
and
push
push
fnstsw
xor
sub
push
pop
mov
not
movs
enter
mov
mov
enter
pop
js
les
popf
mov
push
ret
jmp
hlt
push
popa
stc
cli
mov
xchg
dec
arpl
push
mov
sbb
jnp
iret
int
sar
(bad)
fstp
ret
lahf
xchg
dec
in
sbb
pop
ins
mov
mov
xchg
mov
pop
xor
test
mov
mov
push
pop
inc
loopne
aas
cmp
jno
adc
pop
in
popa
mov
test
addr16
in
jo
dec
mov
push
mov
test
xchg
cmps
or
dec
mov
sbb
add
add
push
dec
mov
imul
(bad)
mov
inc
out
(bad)
pop
iret
add
loopne
adc
and
adc
xor
jae
pop
std
cli
jne
and
fiadd
sahf
(bad)
or
jnp
pop
(bad)
jp
out
int3
int3
dec
jp
jge
outs
cmps
jbe
jnp
push
or
repz
cwde
pop
in
scas
inc
mov
adc
stos
adc
jmp
jecxz
sub
retf
inc
in
bound
out
in
in
adc
lds
call
repz
or
pushf
xor
mov
cmp
dec
mov
cmp
adc
inc
adc
adc
mov
xor
mov
pop
xor
cwde
outs
data16
sub
inc
ins
inc
fsubr
ja
pop
inc
cmovge
and
xor
call
add
(bad)
pop
push
pop
movs
push
jb
dec
sbb
pop
(bad)
cmps
(bad)
test
rcr
sbb
inc
bound
and
loop
loop
fsubp
mul
fsub
and
scas
repz
test
xchg
xor
test
and
iret
xchg
aad
lds
test
jae
mov
mov
dec
dec
iret
fist
sub
jne
cmp
add
push
stc
or
(bad)
jmp
aas
pop
or
adc
jns
xchg
clc
ins
ja
jmp
movs
ins
cmp
mov
jle
sbb
out
adc
xlat
mov
xchg
xchg
xchg
outs
xchg
sbb
sbb
or
push
adc
mov
jno
cmp
dec
in
adc
and
xor
dec
xor
fmulp
cmp
js
jbe
mov
fcom
add
dec
repnz
and
test
rcr
loop
push
aad
inc
jge
push
dec
inc
movs
rcr
inc
mov
jae
outs
xchg
jmp
mov
mov
push
movs
mov
daa
xchg
mov
push
mov
bound
aaa
and
ret
push
rcl
add
hlt
retf
pop
je
adc
test
(bad)
add
ds
cmps
int
or
mul
inc
pop
pop
and
pushf
dec
(bad)
mov
sub
inc
mov
mov
shr
sahf
sub
popf
xchg
xchg
mov
cmc
add
outs
push
cli
outs
dec
sti
push
mov
aam
sub
and
retf
jp
pop
popf
pusha
bound
dec
lods
mov
int3
cmp
jne
mov
js
sbb
dec
mov
xor
outs
sub
leave
xchg
xor
sbb
rcr
mov
std
inc
xor
inc
and
pushf
dec
lea
dec
xchg
sub
xor
sti
adc
mov
adc
or
pop
scas
enter
in
lea
vmovq
outs
imul
mov
vpaddq
das
mov
adc
adc
ror
adc
in
adc
jae
sbb
fistp
sahf
push
cli
enter
(bad)
out
(bad)
jmp
lods
or
rol
int
add
(bad)
out
pop
add
aad
jl
imul
dec
or
dec
imul
movsx
ret
and
outs
mov
into
in
out
inc
out
test
ds
sahf
loop
fcom
pop
(bad)
mov
in
fs
sbb
pop
sbb
xchg
sub
(bad)
xchg
and
push
cld
sbb
aas
fiadd
inc
cld
sbb
push
jo
mov
lods
jo
daa
mov
mov
mov
mov
es
nop
pop
repnz
bound
loop
mov
cmp
add
icebp
int
xor
repnz
or
sub
xchg
pop
and
movs
add
pop
mov
call
test
outs
xchg
or
aas
icebp
mov
or
arpl
nop
sub
addr16
inc
adc
stos
xchg
test
pop
mov
push
pop
(bad)
loopne
aam
bound
iret
or
test
mov
pop
(bad)
inc
mov
mov
dec
push
cwde
lahf
out
sbb
fsubr
mov
cmps
(bad)
and
push
dec
loopne
out
lods
add
stos
cmp
iret
sahf
aas
sub
sub
shl
add
xor
out
pop
xchg
cmp
lods
and
push
hlt
cmp
rcr
and
rcr
popf
cmp
movs
dec
push
mov
mov
mov
in
jmp
gs
dec
out
dec
mov
aaa
or
enter
test
push
dec
stc
push
lods
xor
adc
and
jae
mov
xor
mov
xchg
pop
mov
cmp
test
lods
rcl
fidivr
pusha
pop
mov
loopne
mov
ja
test
ficom
adc
leave
adc
xchg
cmp
stos
xlat
push
jno
add
lea
xchg
test
cwde
es
movs
sbb
jp
inc
adc
mov
fs
bound
sbb
dec
enter
lds
ds
mov
jmp
push
stos
arpl
pop
or
push
push
dec
push
xor
sbb
icebp
sub
frstor
fwait
add
cmp
gs
(bad)
nop
xor
and
cld
mov
iret
sbb
xchg
(bad)
xor
push
out
dec
sub
(bad)
retf
jmp
or
adc
scas
jmp
lods
ss
or
sbb
fstp
push
ins
loop
jmp
stc
lea
add
mov
mov
cmp
in
jno
or
fmulp
ins
(bad)
popf
inc
addr16
out
popf
outs
add
xchg
or
loop
inc
sbb
outs
inc
cmp
add
int
inc
adc
push
ja
mov
hlt
aas
outs
imul
push
sub
xchg
lock
fcomp
div
loop
outs
sti
lds
mov
jmp
ret
repz
aad
mov
and
push
pop
jne
test
and
shl
push
sbb
pop
aad
lods
pushf
rol
repnz
cmp
mov
pop
adc
gs
jae
pop
cmc
push
sbb
std
dec
int
repz
push
mov
(bad)
stc
aad
sbb
push
(bad)
dec
or
out
test
dec
jo
sub
mov
adc
xchg
call
push
outs
mov
loope
clc
push
mov
scas
adc
xchg
lods
sbb
xor
daa
es
jae
add
cld
out
cmp
sub
int3
ins
ret
adc
lea
and
call
scas
js
mov
sub
mov
int3
xchg
ret
test
inc
mov
outs
lahf
ins
mov
add
xchg
sbb
in
out
adc
fcomi
mov
inc
push
arpl
pop
xor
xchg
jg
push
(bad)
sar
repz
(bad)
inc
fnsave
dec
mov
inc
out
test
push
pop
bound
mov
xchg
pop
loope
repz
mov
lock
fcomp
xor
mov
mov
or
mov
fsubp
scas
adc
cld
mov
repnz
(bad)
les
jns
dec
cmp
mov
mov
cs
stos
cmc
add
mov
adc
xchg
cli
ror
rcl
pusha
jo
push
mov
retf
cmc
pop
sbb
into
lds
jbe
mov
fldln2
in
add
mov
add
imul
adc
iret
bnd
or
clc
aaa
sahf
fcom
fistp
cdq
or
shr
jo
jmp
and
ins
(bad)
stc
mov
call
repz
sub
jo
push
div
add
mov
mov
mov
stc
in
dec
rol
push
ins
pop
stos
add
and
jae
xor
pop
sub
dec
add
add
inc
inc
and
cmpxchg
stos
int3
outs
push
test
push
call
aaa
ret
add
bound
or
cli
popa
scas
xchg
pop
stos
mov
movs
into
push
push
dec
loope
fwait
outs
push
push
(bad)
xor
pop
cmp
mov
lea
add
aam
pop
lahf
dec
and
movs
fwait
aad
loopne
hlt
mul
std
sub
sti
int
xchg
fisttp
iret
or
push
mov
or
arpl
xlat
mov
push
cmp
mov
sti
ins
ja
out
ror
retf
push
mov
in
outs
sub
and
test
ret
stos
push
mov
jno
jmp
pop
lods
aas
cmps
ds
sub
scas
and
adc
push
in
cmp
fnstsw
dec
adc
dec
jecxz
jne
or
iret
stc
mov
das
mov
rol
pushf
jmp
arpl
arpl
inc
push
add
int3
add
xlat
dec
xor
sub
adc
test
es
shr
std
lods
xlat
repnz
popa
rcl
push
and
pusha
adc
adc
aas
mov
or
pop
and
fild
aad
mov
scas
mov
cmp
dec
jge
inc
xor
mov
mov
adc
imul
inc
push
mov
sbb
sub
xchg
jno
setp
mov
mov
push
fsub
mov
scas
xchg
frstor
ret
fst
push
jecxz
daa
fs
rol
xchg
or
add
fs
xchg
and
mov
ret
sti
dec
shl
fdivr
repnz
aas
mov
ins
xchg
add
rcr
cmp
mul
inc
push
(bad)
sahf
ja
jmp
sbb
mov
or
lods
fld
xor
leave
mov
dec
enter
mov
retf
frstor
push
lods
mov
sbb
and
popf
add
jge
loope
push
mov
ror
dec
cmc
xor
sbb
adc
mov
mov
scas
inc
push
bound
add
js
(bad)
cmp
adc
inc
pop
loop
sbb
out
inc
mov
xor
sbb
rcl
push
fcompp
mov
jns
outs
in
jg
ret
mov
sbb
fdivp
in
push
sbb
cwde
lea
or
or
or
xchg
cmc
sub
adc
or
shr
sub
cmp
fwait
jnp
icebp
sub
psllq
inc
arpl
rcl
ins
je
xchg
push
add
sti
jmp
sbb
in
out
mov
add
jge
mov
push
fisttp
test
jmp
sub
mov
xor
push
inc
pop
mov
cmc
fcomp
shl
fld
pop
(bad)
sbb
(bad)
jns
adc
pop
(bad)
fcomp
out
jmp
sbb
je
ret
ror
out
cs
push
mov
jno
pop
movs
je
jl
aam
cmc
mov
push
dec
fdiv
mov
fiadd
popa
and
mov
enter
and
nop
xor
inc
dec
cmp
test
mov
loope
cmps
sbb
mov
and
aaa
out
and
fwait
mov
and
(bad)
lock
mov
cmp
pop
xchg
xor
dec
in
jmp
jmp
add
cwde
dec
or
ror
test
std
sub
into
cmp
pop
lock
loop
dec
and
in
in
psrld
pop
mov
cmp
les
mov
fs
mov
inc
mov
adc
cmps
push
repz
retf
call
sub
and
movs
dec
push
stos
outs
retf
rol
dec
mov
inc
xchg
(bad)
fs
pop
popa
test
and
xor
push
cmp
jnp
aad
leave
call
js
outs
or
sbb
out
(bad)
jnp
ja
dec
push
cmp
xor
dec
and
lahf
jb
xchg
aas
shl
imul
xchg
pusha
mov
lock
(bad)
call
dec
inc
mov
and
in
bound
jmp
cmp
popa
loopne
popf
(bad)
dec
push
mov
daa
cmp
das
mov
call
mov
xchg
mov
xor
pop
nop
ret
shl
inc
or
std
not
pusha
out
mov
in
adc
dec
in
xchg
es
add
(bad)
mov
ds
fidiv
fadd
inc
sti
jmp
call
or
sbb
outs
jae
push
cld
jl
icebp
inc
jns
adc
mov
mov
arpl
bound
iret
jmp
pop
adc
lahf
mov
jge
pop
repz
xor
sbb
out
sub
out
inc
cld
jbe
xchg
mov
add
jmp
data16
cmps
xchg
jle
cmp
jecxz
or
outs
aaa
fistp
pop
mov
mov
inc
push
push
pop
adc
jbe
or
test
add
jb
in
(bad)
rcr
mov
mov
or
or
(bad)
cmps
lods
cmp
pop
pop
push
fimul
fs
push
jae
pop
pusha
mov
test
cmp
push
stos
(bad)
mov
mov
cmps
adc
jo
cmp
lahf
mov
xchg
jae
adc
outs
(bad)
jb
mov
inc
ins
xor
repnz
pushf
pop
xor
jno
cmp
outs
jae
dec
xchg
mov
popf
retf
dec
stos
mov
hlt
movs
retf
xchg
xor
adc
jno
(bad)
add
push
sahf
inc
sbb
repz
(bad)
in
or
cmp
addr16
outs
dec
ret
pop
add
add
jns
xchg
popa
enter
push
scas
ret
test
aam
mov
cmp
push
inc
pop
sbb
xchg
arpl
aam
call
out
push
lahf
or
loopne
or
cmp
cmp
dec
xchg
outs
push
pop
cmp
add
pop
adc
xchg
sbb
dec
test
rol
pop
(bad)
push
mov
(bad)
call
fmul
push
in
fisubr
push
adc
dec
jno
xlat
xlat
aas
pop
movs
dec
jg
sub
fild
movs
mov
push
add
xor
pusha
ja
ja
loopne
bound
dec
xor
lds
test
lods
scas
dec
stos
movs
clc
jne
retf
push
sub
outs
push
lock
jne
jmp
das
rol
inc
mov
xchg
xlat
or
call
int3
mov
xchg
add
mov
xchg
retf
push
xor
jnp
cdq
and
jmp
mov
sbb
pop
add
inc
mov
mov
mov
cmps
(bad)
sub
inc
jp
rcl
loopne
sbb
mov
cmp
dec
sub
dec
cmp
sub
push
int3
pushf
movs
popa
repz
inc
sub
pop
retf
ds
mov
or
xchg
dec
inc
xchg
loopne
jecxz
sbb
call
repnz
cmp
jecxz
push
add
inc
mov
xor
(bad)
aaa
imul
mov
mov
test
sbb
rsqrtps
mov
sub
push
mov
test
mov
mov
in
mov
adc
and
fidivr
shl
and
pushf
xor
inc
xchg
jle
dec
in
cmps
jge
into
add
bound
loop
pminsw
xchg
call
div
sar
jge
pop
jmp
add
lods
xor
add
loop
outs
cli
xchg
inc
imul
fwait
inc
cmp
mov
xchg
sbb
cmp
push
pop
aam
daa
jl
sub
in
or
push
inc
out
pop
ret
xchg
jp
cdq
add
ss
lock
inc
sahf
or
aam
test
lods
adc
cs
sbb
xchg
std
sbb
clc
pop
sbb
jne
and
out
or
cli
ja
push
jno
xor
pop
inc
xchg
dec
pop
xchg
pop
popa
into
cmp
pop
out
add
lds
inc
ins
mov
sub
jnp
pop
ficom
pop
loope
ret
mov
das
mov
mov
ja
rcl
xlat
or
stc
mov
fcmovne
or
in
and
fwait
push
aam
and
mov
mov
(bad)
loop
fsubr
push
loopne
jo
jg
ror
mov
test
mov
and
(bad)
iret
test
rcl
sbb
mov
call
in
lea
jl
inc
je
stos
adc
nop
shr
cmps
fsubr
jl
inc
adc
jecxz
sub
cs
sahf
vrsqrtps
jle
cs
gs
push
xchg
jle
sar
cmc
in
test
inc
(bad)
mov
cmp
inc
push
and
in
test
sbb
fist
daa
imul
fadd
call
sbb
xchg
add
inc
mov
cmp
iret
pop
and
cmp
mov
dec
dec
dec
or
push
rcl
push
imul
(bad)
push
jge
mov
ret
arpl
inc
push
ret
add
mov
into
stos
call
imul
lods
and
ret
adc
add
push
fwait
mov
popf
movs
lahf
dec
dec
push
out
push
jecxz
pop
push
jecxz
add
or
sub
stos
neg
add
in
mov
adc
cmp
push
xchg
adc
lds
adc
and
mov
jp
scas
mov
pop
adc
test
sbb
shl
shl
lods
adc
ja
pop
xor
and
cwde
cs
pop
das
mov
push
daa
popf
in
outs
movs
or
imul
jp
outs
fcom
dec
retf
jae
cmp
pop
(bad)
push
xchg
fidivr
jns
retf
jl
or
das
outs
shl
outs
xor
fs
cmp
icebp
dec
cs
jl
movs
retf
pop
or
push
mov
(bad)
jge
hlt
outs
jb
imul
or
cdq
pusha
jae
xor
test
or
sub
inc
cmp
in
mov
clc
mov
in
in
cwde
xor
and
loop
mov
mov
ss
push
imul
cli
popa
adc
or
(bad)
jmp
pop
mov
cmp
mov
js
or
mov
out
aaa
or
xchg
pop
pop
sub
sbb
lds
aas
xor
mov
add
aaa
cld
jmp
cmp
pop
ficomp
fs
add
adc
mov
cmc
cmp
mov
add
sub
mov
sbb
repnz
fmul
retf
sub
mov
push
cld
cmc
fsubp
or
ins
jne
xchg
cmps
or
(bad)
aaa
fdivr
cli
out
popa
mov
call
mov
lods
popa
shl
test
loopne
fsubr
stos
pop
in
es
sbb
add
or
or
mov
add
push
sar
loope
sti
cmp
icebp
retf
cmp
mov
retf
xrelease
mov
mov
mov
je
call
sbb
inc
dec
pop
push
popf
scas
push
(bad)
mov
or
outs
sbb
xor
fild
dec
sar
and
les
mov
cli
or
sbb
mov
retf
lea
popf
pop
cwde
stos
popf
rcl
(bad)
clc
fmul
ds
inc
(bad)
outs
ror
jae
loope
pop
shl
dec
xor
jl
mov
pop
sbb
dec
mov
pop
sub
or
dec
and
lahf
and
(bad)
mov
dec
cld
fwait
push
add
pop
add
push
adc
push
leave
xchg
ja
jbe
sbb
jmp
repnz
fcmove
push
jmp
not
clc
out
adc
cmp
add
in
dec
lock
ins
jo
pop
int3
jp
add
dec
push
outs
lahf
push
inc
xor
and
int3
fs
xchg
(bad)
and
pop
adc
pop
rcr
xchg
jno
inc
add
dec
stos
sbb
sbb
mov
lods
add
sbb
and
dec
fist
mov
aad
cdq
test
jge
(bad)
cld
lods
cmp
ss
push
jnp
rcl
fsubp
and
cdq
mov
dec
adc
xor
outs
xor
ror
jmp
mov
push
jne
xor
mov
imul
in
xor
into
fs
ins
int
sub
and
mov
add
aad
(bad)
jmp
in
lock
pop
movs
jg
mov
ja
ins
loop
push
cli
xchg
(bad)
adc
inc
mov
in
addr16
out
pop
into
jle
ja
pop
push
mov
jmp
jno
or
sbb
aam
cmc
dec
(bad)
pop
or
mov
scas
outs
xor
xchg
imul
jnp
je
inc
xchg
fwait
les
dec
jmp
mov
rcl
gs
out
xchg
mov
dec
cli
jl
push
xlat
inc
pop
jl
xchg
mov
jb
aam
cli
mov
ret
mov
cmps
push
js
repz
inc
test
pop
test
pop
or
stc
jmp
ror
adc
outs
dec
cmp
xchg
inc
push
cmps
adc
pop
das
hlt
pop
pop
shr
or
outs
inc
adc
jmp
mov
iret
call
nop
push
or
sbb
mov
cmp
mov
mov
dec
test
add
les
jmp
sahf
das
pop
xchg
pop
nop
loop
push
int3
movs
std
dec
mov
cli
outs
and
cmc
lahf
or
cmp
test
repz
cwde
mov
and
data16
xchg
xchg
jo
and
jae
js
bound
jo
sub
xchg
add
xor
xchg
sub
(bad)
push
inc
push
dec
sahf
mov
cld
call
push
sub
or
punpcklwd
aam
cwde
mov
pop
std
adc
adc
inc
out
mov
mov
push
test
mov
xor
fsubr
push
out
xchg
and
outs
inc
cdq
rcl
sub
mov
mov
adc
adc
mov
sbb
aas
xadd
fistp
addr16
out
add
mov
mov
pusha
movs
in
inc
inc
test
rol
pop
leave
fild
das
mov
xor
sub
ds
add
jo
inc
push
(bad)
shl
seta
inc
pusha
ja
sahf
adc
bound
dec
xchg
add
test
stos
in
aaa
in
dec
dec
cmp
lods
push
pop
pop
(bad)
xor
lods
ins
mov
movs
jle
mov
inc
aaa
mul
jnp
mov
leave
xor
add
push
fcomi
nop
mov
stos
mov
fild
pop
pop
jecxz
mov
xchg
ins
cmp
jg
loop
neg
fs
sahf
loop
cmps
cmp
cmp
ret
sahf
cwde
es
jl
jl
or
es
pop
jnp
loop
mov
movs
push
jne
sahf
add
cmp
pop
imul
mov
inc
jo
les
loopne
mov
or
or
mov
ss
mov
(bad)
rcl
inc
push
rol
fbld
in
ds
aam
lds
push
mov
int
clc
stos
push
add
push
test
lds
jmp
std
shl
lea
pop
jg
xchg
test
popf
addr16
ins
xchg
lock
xor
pop
fistp
dec
fnstcw
dec
retf
(bad)
cmp
ret
pusha
popa
or
iret
jge
cdq
and
lock
inc
jecxz
cli
cvttps2pi
gs
push
push
mov
sbb
in
std
dec
sar
pop
xchg
pop
mov
push
sahf
cmps
sar
sahf
xchg
lds
out
mov
dec
pop
jne
in
push
les
add
(bad)
enter
add
pop
cdq
add
popf
cmp
push
(bad)
fsub
outs
loopne
in
cmps
mov
movs
jno
pop
push
jnp
inc
sti
push
mov
xchg
outs
mov
cmp
das
fnstcw
test
test
call
push
add
cs
cmps
aaa
mov
xlat
xchg
pop
jno
int3
pop
mov
imul
xor
mov
xor
pop
ret
pop
inc
inc
jne
mov
mov
cwde
scas
mov
(bad)
sbb
fdiv
sbb
outs
xor
jns
movs
jge
cdq
inc
sub
push
mov
js
repz
fs
push
or
inc
fistp
aaa
jmp
push
(bad)
aam
neg
repz
or
mov
dec
pop
add
lea
retf
rol
adc
(bad)
jmp
popa
sbb
frstor
xchg
xor
adc
cmp
push
lock
or
stc
loope
push
mov
out
icebp
jmp
pop
jmp
mov
dec
push
ins
aad
bound
pushf
push
pop
ins
fwait
retf
cmp
cs
sub
js
jmp
rol
ret
sti
and
and
pop
cld
ss
mov
lahf
shr
cwde
push
sbb
mov
cmps
and
inc
shl
out
cmc
xchg
aad
ret
dec
jne
sar
jge
mov
dec
call
fs
loop
ret
mov
popf
inc
sub
arpl
mov
cwde
test
imul
(bad)
or
xchg
sbb
or
mov
outs
and
sbb
inc
mov
inc
ja
shl
jae
pop
push
ins
in
sub
into
(bad)
cmp
xchg
adc
xlat
mov
jae
sahf
cmps
cs
movs
popf
xchg
icebp
dec
iret
jmp
in
leave
outs
xchg
cmp
pop
or
jo
cdq
fs
xchg
imul
push
pop
mov
dec
inc
es
jne
xchg
(bad)
rcl
sub
dec
or
cld
mov
lea
or
lods
(bad)
or
xchg
sub
retf
icebp
retf
jp
pusha
xor
call
mov
jl
or
dec
icebp
push
cmc
cs
push
dec
mov
sub
xchg
push
mov
inc
xor
(bad)
pop
and
inc
jl
adc
hlt
out
repnz
or
mov
jmp
push
je
ror
jbe
adc
push
sar
mov
enter
inc
fcom
mov
xchg
les
aad
in
adc
(bad)
pop
inc
xor
cmps
sub
(bad)
(bad)
cdq
sahf
dec
pushf
push
fstp
jecxz
adc
dec
aaa
retf
sub
dec
xchg
sbb
xor
mov
mov
adc
inc
test
adc
daa
sub
int3
mov
pop
imul
cmp
out
push
mov
push
xchg
leave
jmp
pop
add
xor
pop
sub
mov
xor
adc
mov
fmulp
je
scas
jge
test
and
xlat
ret
fsub
adc
std
inc
out
pushf
fs
hlt
xor
retf
mov
jbe
xchg
inc
xchg
movs
fist
jle
cmc
jmp
jge
pop
mov
inc
stc
es
cmc
cdq
push
cmps
mov
bound
ficom
mov
icebp
inc
lock
dec
arpl
dec
aas
fild
call
aas
jp
cmp
jge
mov
xchg
jne
ss
and
outs
into
nop
jge
pop
or
mov
push
loope
aaa
in
js
test
lods
jecxz
push
ins
sbb
add
adc
mov
sti
(bad)
pop
lods
je
or
mov
pushf
mul
inc
adc
dec
inc
stc
xchg
lds
or
shl
inc
jb
dec
int3
mov
clc
sti
dec
or
push
fcom
nop
das
cmp
sbb
popf
inc
add
or
enter
jp
sbb
in
cmp
aaa
ins
outs
mov
lds
fimul
add
jb
jl
jmp
leave
mov
stos
popf
mov
ret
adc
xchg
push
fwait
pop
in
repnz
aaa
jno
stos
jge
mov
aaa
outs
jecxz
or
(bad)
cmp
mov
test
sbb
dec
pop
in
mov
nop
xor
ja
sbb
jno
add
push
sub
inc
stos
push
xor
xor
retf
and
sbb
mov
popa
add
sub
fisttp
xchg
aad
cwde
test
rol
imul
mov
xor
fistp
cdq
shr
or
dec
neg
rcr
mov
fld
inc
cmp
mov
sub
push
fbld
repnz
mov
ins
ins
mov
push
sbb
sbb
ss
add
lahf
mov
adc
add
in
inc
jmp
xchg
xor
xchg
neg
xor
out
gs
repnz
int
add
sub
shl
dec
adc
mov
pop
add
xor
or
pop
je
mov
mov
jecxz
nop
and
cmp
jmp
inc
mov
and
fcmove
push
fimul
punpckldq
pushf
aam
(bad)
mov
stc
jecxz
ret
jle
(bad)
push
cdq
and
cmc
(bad)
jge
leave
into
mov
mov
ins
mov
call
adc
xchg
jno
std
fild
jb
xchg
mov
or
fsubp
scas
out
adc
cld
cmp
cmps
sub
inc
inc
pushf
out
outs
popf
stos
sub
je
mov
es
jno
mov
jb
retf
fadd
xchg
test
rol
ja
(bad)
loopne
aam
dec
mov
adc
add
xchg
retf
jecxz
leave
repnz
mov
dec
sub
rcl
popf
jl
mov
mov
and
scas
adc
fsub
dec
outs
ins
xchg
pop
inc
outs
xchg
addr16
in
xchg
dec
dec
cmp
push
jnp
sbb
pop
push
in
push
out
das
retf
mov
rcl
sub
sbb
test
sti
bndldx
movs
enter
mov
lahf
fwait
(bad)
push
push
adc
in
add
loope
mov
pop
sub
test
and
sbb
xor
movs
out
push
out
ror
cld
mov
vsqrtpd
aad
je
lock
popa
je
pop
push
xor
shr
mov
test
scas
in
fisttp
inc
mov
sar
ins
and
movs
push
jnp
aam
mov
mov
mov
push
cmp
das
add
jae
lahf
arpl
ins
ds
(bad)
into
cmp
retf
xchg
xor
shr
dec
mov
fdivr
mov
test
(bad)
out
imul
inc
jne
push
jb
shl
xor
(bad)
leave
retf
mov
jbe
loop
mov
sbb
mov
ret
adc
in
in
mov
or
xchg
(bad)
div
js
das
lds
sub
xlat
lock
and
xchg
cmc
bound
mov
stos
es
bound
in
mov
jb
push
jp
into
sub
rol
xor
xor
out
xor
jae
cdq
mov
cmp
fs
fwait
cmp
cmp
mov
sbb
mov
idiv
dec
add
out
add
ss
inc
mov
call
das
xor
inc
nop
adc
sahf
(bad)
data16
xor
push
cs
xchg
push
pop
cmp
in
stos
popf
sub
cdq
sbb
inc
inc
shr
(bad)
jmp
jno
rcl
(bad)
xchg
jecxz
cs
dec
in
hlt
fmulp
adc
test
retf
push
retf
push
xor
push
call
sub
xor
xor
(bad)
in
imul
sub
jns
cmps
and
xor
push
je
sahf
push
and
sbb
js
jmp
sub
pop
push
repz
jle
add
ds
repz
pop
addr16
mov
push
jne
stc
inc
lods
add
sub
jg
mov
shl
push
stc
mov
ret
xlat
push
mov
imul
imul
arpl
ja
jg
loope
mov
jnp
mov
repz
and
or
add
mov
jns
scas
ror
push
mov
xor
sub
gs
pushf
jns
add
cmps
sbb
iret
rol
adc
pop
sub
and
pop
imul
and
jnp
mov
(bad)
imul
popf
inc
aaa
out
imul
and
rol
outs
lea
sbb
in
(bad)
mov
retf
jns
xchg
in
movs
inc
xor
fiadd
mov
loope
pop
xchg
(bad)
lods
ja
(bad)
dec
int
xchg
scas
jle
ja
and
(bad)
push
cdq
mov
xor
jmp
out
dec
retf
cld
pop
lsl
pop
and
sub
or
shl
ret
cs
cli
jmp
lea
stc
push
stc
jl
loope
cmp
lds
clc
xor
test
inc
cmp
pop
scas
pop
movs
or
pop
dec
icebp
out
sbb
es
mov
sub
test
xchg
call
mov
test
sub
(bad)
movs
inc
rol
loop
sbb
mov
test
adc
add
sub
or
sub
mov
xchg
or
push
jecxz
test
test
xchg
lahf
xlat
xor
(bad)
daa
mov
aad
sub
das
mov
dec
xchg
sub
sbb
and
xor
xor
jo
push
stc
pop
pop
clc
adc
fcom
jge
test
iret
mov
cmp
jnp
arpl
and
ret
adc
or
add
(bad)
nop
adc
mov
mov
rol
xchg
mov
pop
mov
lock
or
loop
sbb
cmp
test
scas
mov
or
(bad)
mov
mov
rcl
hlt
xchg
stos
fst
leave
fsub
cmp
push
test
mov
add
daa
int3
cmp
mov
xor
mov
movs
fsubr
mov
or
lds
push
add
add
fcomi
call
mov
sbb
add
cmps
mov
aas
in
shr
push
pop
xchg
add
div
push
pop
icebp
enter
push
ds
add
cmp
ds
cmc
pop
dec
aaa
cli
mov
jle
pop
aas
pop
adc
adc
in
cmp
xor
pop
sub
add
(bad)
imul
lahf
dec
dec
push
call
retf
mov
or
sub
retf
jl
sahf
stos
and
call
movs
repz
push
sbb
das
push
stos
fdiv
movs
push
lea
push
ds
repnz
nop
jns
dec
or
jns
mov
jbe
xchg
test
inc
scas
mov
mov
jmp
and
pop
sbb
sahf
inc
pop
adc
pop
test
addr16
adc
add
in
jmp
out
aam
stos
in
and
test
push
shl
int3
xchg
rol
sub
shr
push
repz
or
jo
int3
cld
sbb
shl
mov
cmp
add
mov
shl
bts
ins
ss
sbb
jmp
sub
and
movs
ins
arpl
addr16
retf
add
push
cmp
adc
jae
dec
rcr
jo
add
adc
shl
into
pop
xchg
mov
or
mov
nop
inc
leave
mov
fsub
repnz
ret
jl
jle
mov
(bad)
ins
scas
or
nop
mov
jle
and
mov
jne
mul
push
aas
scas
dec
jp
inc
pop
pop
in
add
adc
add
out
addr16
cmc
or
mov
int3
jbe
dec
lahf
inc
dec
ins
lods
mov
xor
addr16
das
call
jg
clc
and
in
pop
loopne
xchg
in
cwde
inc
dec
int
inc
dec
loop
into
mov
sbb
test
in
sti
out
lods
out
lods
add
in
sub
xor
test
ja
iret
popf
or
ins
std
push
sub
(bad)
loop
retf
ds
push
jp
add
mov
sbb
add
aam
adc
sub
cli
push
jle
adc
repz
pop
repnz
arpl
inc
aad
inc
outs
add
ret
lahf
adc
(bad)
xor
inc
(bad)
mov
cmp
sub
sbb
ins
xchg
hlt
sub
xor
jp
ins
cld
fwait
(bad)
in
xchg
mov
aam
cmps
jns
(bad)
adc
inc
xor
push
push
jp
mov
xor
sbb
inc
and
test
push
daa
jge
xchg
sbb
mov
fldcw
out
or
ja
jmp
push
popa
aas
(bad)
call
or
and
pop
pushf
test
or
sbb
fnstsw
repz
and
jo
fnstenv
sub
out
shl
ins
xchg
push
fs
jae
xor
adc
icebp
mov
xchg
pop
(bad)
ja
adc
sub
aad
cmp
jecxz
dec
or
test
cmps
pop
pop
in
adc
sub
or
sbb
push
movs
call
(bad)
xchg
sbb
mov
and
cmp
jne
out
rol
jmp
imul
in
inc
cmc
adc
gs
or
mov
jns
mov
sti
mov
pop
scas
push
(bad)
in
ror
or
daa
sbb
xor
sub
cwde
xlat
jo
pushf
and
(bad)
loope
sbb
xor
adc
push
add
push
loope
hlt
and
rol
mov
in
mov
rol
or
fwait
jle
mov
sub
pusha
add
stos
jns
adc
out
cmp
cmps
adc
into
inc
call
adc
push
hlt
cld
loope
(bad)
fwait
dec
test
xchg
sbb
int
or
pop
js
push
stos
add
jno
dec
pop
xchg
mov
stos
mov
iret
or
mov
neg
stos
pop
mov
fisubr
jecxz
ins
fldcw
cmps
fdiv
lods
xor
jb
test
mov
sub
out
sbb
inc
dec
je
movs
cmps
outs
call
std
inc
dec
push
(bad)
leave
pop
ins
aas
push
push
xor
hlt
ins
nop
dec
jmp
and
rol
jb
sbb
sub
or
xor
inc
fs
pop
lahf
xor
jecxz
mov
retf
loopne
cmps
popf
mov
mov
repnz
or
mov
std
or
xor
movs
imul
cmp
cld
mov
xchg
lea
xor
xchg
iret
or
add
jge
dec
jbe
sbb
mov
mov
and
mov
sub
sbb
dec
sahf
ins
mov
shl
sub
or
xchg
ficom
popf
cmp
fistp
leave
pop
mov
adc
xchg
push
(bad)
adc
jmp
(bad)
hlt
sbb
and
imul
scas
xor
fdiv
push
icebp
outs
in
movs
vunpcklpd
inc
clc
repnz
add
xor
jbe
xchg
cwde
cmp
pop
js
or
cdq
adc
test
mov
es
mov
retf
ror
jno
daa
adc
cmp
movs
pop
lods
jp
jns
fnstenv
fsubr
or
xor
sbb
aaa
mov
stc
sbb
adc
mov
jo
(bad)
rcl
xlat
pop
fdiv
or
stos
call
iret
jns
ficomp
(bad)
mov
popa
cmp
lahf
xlat
push
inc
rol
push
pop
pop
and
and
icebp
mov
cmp
pop
in
push
jnp
push
(bad)
mov
or
dec
adc
test
add
add
or
fwait
or
sub
ror
adc
lds
out
sbb
cmp
cmp
xchg
int3
jb
fistp
ret
push
push
lods
xchg
das
cmp
fsubr
inc
mov
test
mov
(bad)
bound
xor
cmps
lods
sub
mov
adc
cdq
(bad)
imul
inc
sub
mov
pushf
icebp
sbb
lock
addr16
jg
mov
pop
pop
jl
xor
mov
mov
xlat
xchg
mov
xchg
in
jbe
(bad)
or
dec
fs
jo
mov
loopne
scas
enter
jmp
pop
and
(bad)
adc
or
or
sti
mov
lea
movs
std
mov
lock
jbe
jl
cmp
cdq
lods
push
jns
retf
retf
or
push
adc
sar
or
jl
aad
sti
jmp
ss
enter
popa
push
cmp
aam
pop
push
(bad)
shl
inc
neg
cdq
sub
sub
adc
daa
int
aas
sub
cs
inc
mov
pop
pushf
call
sub
test
call
mov
movs
in
sub
xor
push
shl
pop
mov
movs
loop
add
(bad)
cmps
pop
mov
xchg
popa
fwait
rcl
xchg
ins
sbb
stos
lods
xor
sbb
das
rcr
call
jle
das
mov
pop
jecxz
jnp
pop
mov
jmp
pop
add
sbb
out
jns
pop
dec
pop
sbb
adc
jge
push
mov
and
es
fwait
aam
push
or
dec
outs
ror
addr16
iret
adc
aas
mov
and
push
sahf
jge
mov
ja
ins
(bad)
outs
popf
mov
adc
and
xchg
call
inc
outs
out
adc
(bad)
mov
adc
fist
lods
mov
and
mov
int3
pop
add
loop
in
jns
test
mov
mov
ja
(bad)
pop
(bad)
jno
inc
fmul
pop
imul
sub
movs
dec
inc
adc
xor
mov
popf
retf
out
jp
add
ins
push
shl
sub
loope
jnp
aad
dec
hlt
xchg
in
jp
out
xchg
js
push
popa
mov
movs
add
sub
and
in
in
push
or
scas
les
xor
cmp
push
or
xlat
shl
(bad)
fist
xor
out
test
add
fwait
xor
aam
call
loopne
js
dec
clc
movs
dec
or
mov
xlat
push
pop
enter
cld
(bad)
(bad)
sub
clc
fwait
mov
mov
arpl
adc
leave
movs
sub
adc
test
aaa
sbb
push
mov
lock
fidivr
mov
mov
jb
mov
mov
ret
les
lods
adc
cld
xchg
nop
xor
(bad)
sub
stos
xchg
fiadd
cmp
rcl
xchg
outs
pop
cli
aam
add
cmps
mov
push
or
test
jg
leave
dec
leave
xor
xchg
adc
mov
cmp
mov
xchg
repz
leave
mov
jbe
ret
jo
add
jnp
push
jge
js
nop
pop
(bad)
int
ja
aad
push
sub
scas
mov
inc
aas
fwait
jmp
jne
je
mov
dec
cmp
imul
push
add
inc
xchg
aad
stos
jl
ret
push
cld
cdq
test
ror
push
xlat
daa
inc
mov
mov
shl
sbb
fdivp
pop
jmp
test
int3
fsub
out
push
push
scas
cvtdq2ps
lahf
fucom
inc
pop
xor
das
rol
push
outs
add
mov
movs
and
test
test
repz
icebp
sub
xor
jge
sti
pop
scas
movs
in
das
fld
cld
pop
inc
jbe
dec
mov
add
popf
aam
inc
shl
mov
jno
scas
iret
sub
add
enter
add
int
dec
stc
or
sub
xor
and
out
mov
adc
aad
cmp
xor
push
popa
jge
cs
fild
(bad)
jae
xor
inc
cs
jbe
xor
jmp
cli
pop
imul
xor
xchg
std
mov
add
in
mov
push
and
pop
repnz
or
xor
clc
test
mov
ins
sub
pusha
xor
sbb
int3
loopne
lds
sub
movs
ret
out
test
daa
inc
data16
lods
jbe
pop
test
mov
movs
aas
mov
test
fs
je
repz
add
sti
inc
mov
cdq
add
mov
stos
mov
loope
mov
mov
or
push
mov
aam
lock
sub
adc
jecxz
xor
add
div
or
push
or
cmp
cmp
xchg
mov
mov
inc
sbb
int3
jmp
sti
or
sub
aad
pusha
stos
push
adc
cmps
test
xor
cdq
dec
adc
retf
push
ins
push
adc
test
fbstp
mov
dec
inc
cmp
mov
aas
call
push
mov
cmp
out
push
jp
xchg
mov
jmp
push
adc
aam
jge
imul
mov
adc
loope
pop
shl
ret
xchg
pusha
push
sub
adc
out
jnp
push
lods
or
js
ficom
test
jae
in
cdq
push
std
push
adc
xchg
push
call
sub
inc
xor
lock
test
in
aaa
adc
fwait
pushf
inc
dec
jg
and
out
stos
sbb
push
xchg
test
cmp
pop
fcom
cld
jecxz
sbb
xor
mov
fstp
adc
mov
dec
(bad)
pmulhw
cmp
jmp
shl
call
pop
xchg
adc
loope
or
push
cmp
xchg
retf
mov
in
enter
mov
add
scas
mov
fidiv
cmp
dec
loop
cmps
dec
fwait
cdq
icebp
cdq
mov
mov
adc
in
mov
dec
cmp
mov
jge
pop
ss
cmp
aam
adc
retf
int3
loopne
gs
int
and
retf
xlat
or
mov
enter
jae
loope
sub
dec
mov
enter
lock
cmp
adc
(bad)
or
lds
dec
mov
inc
cs
adc
adc
cli
xor
(bad)
cmp
sub
arpl
push
jbe
das
movs
dec
sbb
aad
mov
data16
add
push
repz
outs
add
ins
add
mov
pop
addr16
cwde
dec
test
sbb
mov
sub
jae
push
mov
xor
inc
jo
jbe
adc
jecxz
mov
jge
dec
mov
inc
or
push
fidiv
int3
mov
mov
bound
cs
loope
adc
out
and
(bad)
repnz
ret
sbb
mov
cs
inc
cmc
sub
mov
fisubr
push
popa
jo
ret
add
mov
aaa
clc
lahf
mov
cs
call
(bad)
push
ss
push
xor
push
pusha
push
xchg
call
sahf
mov
inc
popf
fisubr
dec
jmp
or
lea
add
lahf
cmp
aad
sub
aaa
imul
or
adc
jecxz
xor
imul
dec
sbb
aas
cmc
sub
sbb
(bad)
xchg
fild
loope
sub
or
aas
test
js
or
aad
and
shr
jno
push
pop
leave
dec
les
jl
(bad)
sub
cmp
gs
xchg
sbb
es
pop
cdq
add
add
shr
push
push
(bad)
loopne
jg
cld
xor
das
push
outs
ins
jmp
in
dec
or
arpl
dec
ins
xchg
cmp
mov
cmps
sub
cmps
sbb
xchg
ret
ss
imul
cmp
mov
push
xor
call
fiadd
in
mov
cmp
ret
xchg
adc
mov
inc
jmp
xchg
fimul
pop
add
sub
fisubr
ret
not
(bad)
add
mov
push
pop
dec
ror
stc
push
jg
scas
push
cli
mov
push
xlat
dec
in
add
and
call
xor
neg
xchg
clc
xor
pop
xlat
pop
rol
ret
xchg
or
(bad)
xchg
push
popf
push
pop
sub
sbb
mov
mov
imul
cdq
in
sub
dec
stc
aam
in
cli
mov
jno
loope
sub
cmp
in
pop
pop
sub
push
jecxz
(bad)
pop
popa
dec
inc
jmp
pop
or
sub
and
sahf
call
enter
into
xor
mov
mov
enter
sub
loope
dec
push
into
jge
ds
cmps
ins
loope
and
daa
jnp
pop
add
jp
sub
jge
(bad)
aam
push
repnz
movs
out
cmp
mul
adc
int
pop
add
lahf
iret
and
sub
or
xchg
dec
cmp
shl
xor
addr16
hlt
jno
loop
jecxz
inc
jae
mov
in
lods
add
inc
mov
mov
rcr
pop
loop
and
xor
mov
push
ret
add
sahf
in
cmp
movs
mov
aam
bound
mov
rcr
out
fild
mov
xchg
mov
pop
aad
fild
addr16
add
or
in
jg
rcr
rol
mov
cld
dec
xor
dec
xchg
icebp
stc
ins
out
imul
sbb
lock
adc
fs
je
out
add
repnz
push
cmc
sbb
mov
cdq
ror
mov
dec
pop
fild
xor
sub
xchg
push
mov
(bad)
mov
(bad)
and
or
clc
sbb
stos
aad
out
adc
sahf
xchg
jecxz
mov
pop
les
jge
jg
fistp
sbb
pop
push
ret
and
shl
arpl
mov
mov
adc
addr16
cmps
mov
add
lods
bound
or
mov
adc
retf
jno
mov
cmp
call
jp
stos
jo
or
or
or
sub
retf
out
jnp
add
loope
cmp
dec
inc
mov
fxch
fiadd
test
pop
jbe
mov
mov
test
ds
xor
jae
in
pop
jne
push
ins
popf
es
aaa
fld
adc
cmps
fcomp
adc
mov
repnz
adc
aam
xchg
pop
jmp
xchg
pop
stc
ds
cmps
push
es
xlat
xchg
je
rol
push
lods
lea
test
leave
dec
add
sbb
add
ss
mov
mov
dec
pop
pop
sbb
mov
jb
push
sti
int3
inc
inc
mov
xor
rol
lds
dec
test
dec
cli
aaa
mov
jl
and
push
cmps
hlt
pop
test
scas
and
les
mov
in
shl
sbb
(bad)
hlt
push
sbb
loopne
jl
je
enter
jnp
push
dec
jge
mov
xchg
sbb
fsub
fwait
cmp
aad
xchg
lds
xchg
sbb
adc
loope
ret
mov
inc
hlt
imul
xor
jno
nop
add
and
(bad)
cmps
cwde
add
add
sub
xchg
pop
repz
mov
hlt
cmp
jns
xchg
daa
call
loope
push
in
pop
mov
stc
jmp
mov
enter
fmul
sub
(bad)
adc
out
inc
and
les
pop
test
call
jbe
ret
pop
mov
xor
mov
mov
(bad)
stc
(bad)
movs
fadd
dec
mov
xchg
imul
repnz
psubb
popa
pop
add
leave
jns
clc
sub
jecxz
push
mov
lds
shr
lock
stos
xchg
push
rep
adc
outs
pop
mov
(bad)
nop
je
pop
push
add
xchg
mov
xor
ss
repnz
mov
mov
vsqrtss
pop
mov
pop
repz
cmps
bound
out
and
jg
cmp
xor
dec
retf
pop
or
inc
xor
mov
pop
pushf
ret
sub
or
test
inc
in
push
ficomp
sub
inc
xor
mov
jmp
jl
xor
in
cmp
fs
sbb
sti
ficomp
fwait
sbb
je
mov
mov
out
movs
cmp
aas
push
adc
cmp
sahf
mov
push
ret
push
lock
push
or
push
jo
(bad)
inc
les
inc
sub
xlat
ret
pusha
js
push
and
pop
push
mov
dec
dec
hlt
lock
out
or
jmp
or
retf
adc
dec
stos
aam
push
pop
add
fild
test
sar
fsub
clc
repnz
loopne
push
push
popa
repnz
sub
loope
xor
sti
das
aas
inc
arpl
dec
pop
in
ret
mov
inc
sbb
mov
cmp
add
aam
xchg
sub
pusha
es
add
jnp
lods
inc
js
mov
in
movs
stos
jg
outs
scas
sar
adc
xor
call
mov
sub
jecxz
and
add
addr16
sbb
cmp
icebp
mov
cmps
or
jl
pop
out
xchg
call
mov
shl
jmp
icebp
out
or
ds
ret
mov
mov
dec
push
push
xchg
(bad)
add
inc
(bad)
into
mov
daa
out
push
mov
mov
jb
cwde
loope
lea
adc
pop
movs
fnsave
sbb
mov
fcmovne
push
xor
rcl
jl
daa
inc
pop
es
and
push
dec
jecxz
pop
inc
inc
pop
into
outs
pop
mov
push
(bad)
fisubr
sbb
(bad)
outs
and
sub
xor
push
outs
jle
pop
lock
mov
inc
mov
mov
mov
out
shl
cmp
add
jmp
test
mov
gs
std
neg
sti
enter
push
or
jne
add
mov
inc
pop
cwde
xchg
jp
cs
sar
aaa
fisubr
sub
xor
cmp
dec
adc
sti
sbb
jl
lods
jmp
iret
pop
xchg
pushf
out
sub
xchg
xlat
jecxz
push
cmp
out
add
push
jmp
pop
push
iret
(bad)
jae
mov
dec
cs
cmp
dec
inc
rol
div
jae
movs
sti
or
adc
pop
aaa
(bad)
stos
(bad)
mov
cmp
pop
xchg
or
test
pop
pop
int
or
push
fimul
jb
inc
push
mov
retf
(bad)
jg
cmps
in
sbb
xchg
mov
push
daa
xchg
jmp
loopne
test
arpl
rol
test
aas
xchg
push
fucomi
or
cmc
shl
rcr
pop
jl
in
in
adc
dec
ds
dec
mov
mov
repnz
inc
ds
ins
(bad)
sub
aas
out
ret
jno
and
mov
retf
mov
mov
(bad)
push
scas
pop
jl
out
and
sub
je
scas
sbb
sti
leave
xchg
sub
and
out
enter
xor
bound
mov
mov
sbb
cmp
int3
imul
lock
(bad)
fstp
test
xchg
mov
mov
cmp
mov
aad
ins
jge
dec
arpl
sub
add
ror
jge
adc
sahf
mov
popf
jle
mov
retf
retf
test
adc
push
leave
js
cwde
inc
lock
pop
jae
pop
(bad)
lds
jmp
inc
jnp
cli
xchg
(bad)
adc
cmp
pop
ins
mov
stos
into
mov
xor
mov
push
in
add
dec
inc
xchg
pusha
mov
pushf
lahf
jbe
sub
stc
sbb
js
jg
push
lods
push
dec
xor
mov
repz
fsincos
(bad)
aaa
outs
nop
inc
cmp
cwde
pop
jno
mov
adc
jo
mov
inc
fs
adc
ds
add
and
rcl
leave
sub
push
leave
sub
div
adc
mov
call
scas
ins
icebp
addr16
jle
jmp
mov
cmp
shl
pop
stos
jecxz
loop
xlat
call
cmp
jmp
mov
mov
(bad)
and
jb
test
lods
in
int3
in
push
popf
addr16
jmp
lock
pop
pop
push
into
shr
push
pop
sub
push
sub
add
test
mov
movs
aaa
push
lahf
add
sbb
int3
stos
ret
push
xor
std
cmps
dec
mov
adc
add
outs
int
ret
adc
loope
into
push
test
push
call
icebp
adc
sti
mov
daa
mov
aas
nop
sub
movs
shl
(bad)
and
pop
fdivr
or
or
or
sub
sbb
mov
inc
sub
out
rcr
xchg
jne
sub
adc
into
or
dec
fsub
icebp
mov
sub
add
int3
inc
fistp
fs
loop
int
pop
sub
xlat
dec
push
pop
xchg
in
sub
pop
test
jno
test
scas
inc
lds
sub
stos
mov
xchg
int3
push
mov
xlat
add
cmp
fdiv
movs
lock
xor
call
repnz
sbb
xor
sub
les
loop
enter
arpl
push
jmp
pop
aaa
dec
int
iret
adc
scas
cmp
mov
stc
loopne
loope
lahf
mov
adc
scas
test
hlt
retf
pushf
test
fidiv
push
dec
retf
xor
outs
retf
loop
push
jb
xchg
dec
(bad)
retf
shl
xor
or
out
rsqrtps
leave
mov
dec
ror
cmp
cmp
mov
pusha
std
int3
bound
push
xchg
data16
(bad)
shl
sbb
pop
into
mov
inc
jo
std
inc
jno
dec
sub
add
jg
add
les
mov
movs
push
gs
jnp
ffreep
mov
jb
repnz
pop
sbb
loop
xchg
push
xor
imul
and
sti
xchg
or
test
inc
out
jp
outs
xchg
nop
xor
mov
jecxz
adc
daa
mov
pop
repnz
enter
push
push
mov
xchg
xor
xchg
push
push
push
(bad)
cmp
mov
xchg
jmp
not
xchg
(bad)
in
adc
popa
jle
loopne
imul
pop
(bad)
pop
or
ficom
gs
mov
mov
int3
dec
dec
nop
or
shl
push
retf
call
movs
retf
stos
clc
outs
pushw
aaa
sub
sub
adc
pop
mov
and
pop
mov
outs
mov
push
imul
push
inc
mov
(bad)
inc
pop
or
sub
xchg
push
mov
push
ret
dec
push
fwait
sub
test
mov
aam
push
xchg
je
or
xchg
int3
dec
xchg
cld
sbb
jmp
jns
outs
scas
fstp
in
cmps
xor
outs
std
sahf
fdivr
mov
fsubr
loope
add
jo
pop
call
outs
dec
daa
jne
sub
cwde
in
loopne
or
inc
xchg
(bad)
(bad)
(bad)
mov
enter
in
adc
jne
pop
push
pop
jb
add
pop
imul
or
je
and
mov
(bad)
sbb
cs
in
data16
stos
neg
push
mov
(bad)
arpl
inc
push
mov
js
(bad)
jmp
scas
mov
cld
pusha
iret
xor
cmp
out
int3
adc
out
dec
mov
(bad)
pop
jl
jge
mov
stos
popa
movd
push
cdq
xchg
inc
out
ins
test
mov
xchg
jle
adc
add
pop
adc
push
dec
or
rcl
loope
push
out
ret
out
pushf
into
pop
js
dec
repz
mov
mov
lea
out
jmp
push
jmp
mov
inc
in
inc
jnp
adc
cmp
push
into
movs
mov
mov
pop
inc
xor
mov
inc
outs
stos
jno
lods
or
push
xor
xchg
sbb
and
and
mov
fnstenv
cmp
scas
ficomp
push
(bad)
aam
inc
nop
idiv
fsub
fneni(8087
call
mov
adc
icebp
add
loop
repz
(bad)
(bad)
(bad)
push
outs
cmp
xchg
pop
pop
xor
pop
(bad)
pop
pop
sub
mov
test
or
add
mov
call
pop
into
cmc
(bad)
dec
push
mov
jns
clc
xchg
shr
mov
mov
fcomp
cmp
mov
sbb
stos
mov
push
jmp
mov
xchg
xor
ja
(bad)
pop
lods
push
jno
mov
sub
adc
mov
imul
push
or
mov
mov
ret
dec
hlt
push
scas
xor
int
mov
movs
frstor
das
add
xlat
mov
loope
nop
daa
add
inc
cs
int
(bad)
(bad)
aad
adc
mov
cmp
mov
sub
dec
jl
sbb
mov
and
pop
inc
hlt
test
jnp
data16
jge
push
call
mov
jae
dec
stos
sub
out
lods
retf
fdivr
mov
xchg
add
aaa
cld
aas
jnp
add
or
in
mov
ss
xor
das
hlt
out
jno
dec
cwde
ja
xchg
dec
xlat
movs
inc
mov
jg
ss
mov
sub
dec
(bad)
loopne
inc
and
pop
mov
(bad)
jle
popa
mov
loop
mov
pop
ins
mov
push
repnz
pop
mov
test
popf
push
sbb
jle
sbb
ins
aas
pop
jge
rcl
adc
bound
sub
daa
add
and
and
call
in
xchg
ret
jb
sbb
(bad)
ror
xchg
arpl
es
xor
pusha
xor
cmp
sahf
sub
add
cmps
push
(bad)
sbb
sub
pusha
or
push
ret
mov
sbb
iret
movs
fwait
lods
mov
imul
dec
pop
jecxz
imul
mov
push
movs
mov
in
push
into
test
cmp
int3
call
fwait
test
jmp
push
(bad)
enter
gs
xchg
dec
push
data16
jnp
push
imul
inc
or
add
sbb
cmc
mov
out
pop
scas
push
repnz
dec
sbb
ss
or
mov
clc
xchg
jo
mov
mov
hlt
add
or
fld
mov
adc
repz
adc
es
and
sti
out
dec
repnz
xor
mov
sbb
cmp
lods
cmp
call
sub
dec
retf
(bad)
arpl
lea
shl
mov
mov
aaa
imul
adc
pop
push
icebp
dec
shl
popa
jge
adc
xchg
adc
and
sub
push
in
stc
cmp
cmps
mov
loop
mov
xchg
sbb
xor
sub
test
mov
in
xchg
cmp
jmp
or
xchg
and
and
xchg
mov
jp
test
push
popa
lods
aaa
pop
int3
(bad)
cwde
sub
imul
mov
fdivr
hlt
gs
clc
dec
loope
dec
add
jns
rcl
fdiv
sbb
mov
fsubr
add
ins
xor
xor
sti
add
dec
and
jl
push
ret
in
adc
sbb
movs
sub
xchg
popa
mov
aad
cld
int
push
xchg
leave
into
xchg
xlat
fnstenv
ds
cmp
push
mov
movs
shr
and
or
cld
nop
jge
inc
push
sbb
js
xor
mov
xchg
cmp
mov
or
jb
pop
adc
jp
(bad)
shr
nop
daa
and
enter
scas
jecxz
test
pop
test
das
mov
into
mov
or
push
clc
cli
and
pop
js
xchg
in
xchg
vorpd
fs
test
lock
xlat
imul
scas
cmp
pop
aam
cmp
(bad)
fiadd
jnp
or
jge
imul
sbb
add
mov
or
mov
xor
add
test
jecxz
das
rcl
aam
cmp
mov
add
(bad)
call
jp
jmp
sbb
arpl
pop
arpl
mov
cmp
sbb
add
adc
sub
fisubr
push
cmp
cmc
sbb
mov
dec
cld
clc
leave
pmuludq
ja
lahf
imul
xor
shl
(bad)
rcl
and
(bad)
fnsave
dec
(bad)
push
mov
lahf
lock
jp
clc
fldcw
or
or
pop
add
rcl
mov
or
push
fwait
cmp
popfw
xchg
and
xor
push
and
clc
mov
lods
adc
(bad)
add
adc
rcr
nop
xor
leave
js
jnp
aam
inc
aas
mov
push
push
jo
push
popa
mov
stc
sbb
inc
sar
sbb
xchg
outs
out
inc
and
aas
stos
push
jle
or
outs
fmul
imul
mov
adc
cmp
dec
(bad)
xchg
fwait
pop
pusha
cli
add
cmc
fst
stc
dec
push
push
push
mov
inc
pop
bound
mov
mov
add
pop
xlat
aad
or
lods
lds
iret
cld
bound
push
pusha
push
inc
xor
(bad)
imul
movs
ja
jle
xor
xor
not
imul
mov
mov
in
or
mov
sar
pop
push
cmp
nop
pop
xor
ins
popa
popf
adc
int3
cmp
jo
cmp
popf
xor
add
repz
in
adc
outs
mov
es
pusha
inc
push
adc
mov
gs
dec
and
sub
mov
sbb
mov
xchg
xor
retf
cmp
mov
test
jge
mov
rol
arpl
ror
push
in
cmp
mov
scas
inc
aaa
inc
push
or
ds
mov
mov
repnz
ja
push
and
arpl
jecxz
jmp
and
stos
mov
call
out
jbe
mov
jno
push
(bad)
mov
adc
inc
out
xchg
test
fld
jmp
or
mov
mov
add
cmp
cmc
mov
inc
js
pushf
push
(bad)
nop
push
dec
and
out
push
imul
repnz
nop
rol
shl
shl
xor
xor
adc
sbb
mov
mov
jg
xchg
mov
lods
sti
idiv
std
jp
xchg
inc
xor
pop
bound
mov
sahf
push
out
lods
inc
inc
nop
mov
aaa
or
dec
fs
mov
cli
js
clc
sub
lahf
sbb
(bad)
cli
out
ret
or
add
fnstcw
out
jmp
icebp
jp
jl
mov
mov
sbb
sub
dec
imul
lea
sbb
jne
dec
sbb
adc
call
mov
pusha
mov
fisttp
into
scas
test
pop
and
inc
sbb
xor
div
stos
pop
xchg
cmc
mov
adc
nop
aaa
adc
fcmovnbe
push
retf
and
cs
and
iret
popa
ficom
push
push
sbb
xchg
push
test
out
cwde
ret
mov
dec
retf
lods
das
mov
sbb
pop
inc
or
and
mov
fs
inc
pop
and
push
rcr
bound
cwde
sub
inc
lods
sbb
add
test
adc
push
or
jae
ja
sub
cmp
je
cdq
push
jnp
adc
dec
test
jo
in
push
push
mov
fdiv
and
in
xchg
ss
les
test
xor
mov
add
pop
(bad)
sbb
int3
sub
sub
cli
sub
mov
sbb
or
dec
mov
cs
xor
adc
mov
and
cwde
or
add
and
mov
mov
or
mov
gs
sub
pop
sbb
rcl
and
fcmovnb
cdq
or
fwait
fwait
rol
icebp
mov
mov
jp
scas
retf
fist
jp
fadd
inc
int3
int
mov
lds
inc
push
das
or
mov
or
mov
fmul
inc
mov
jle
test
aad
push
pusha
mov
ja
mov
cli
sub
jb
inc
inc
pop
leave
push
mov
xchg
pop
test
jnp
lock
shl
jle
xor
dec
push
out
mov
sub
mov
mov
dec
jmp
mov
cmps
mov
(bad)
shr
mov
push
mov
(bad)
stc
sbb
push
in
das
std
jo
popa
in
mov
mov
cs
jmp
sbb
jne
inc
mov
das
popa
or
(bad)
addr16
scas
pop
(bad)
icebp
mov
mov
aam
rol
aas
xchg
lods
or
mov
pop
mov
dec
es
jmp
sbb
stos
dec
pop
push
and
cli
pop
sbb
mov
arpl
xor
sub
add
jecxz
imul
add
mov
mov
(bad)
inc
stos
fs
add
lock
mov
add
xor
cmp
dec
ins
fwait
aam
test
and
sub
(bad)
jnp
aam
pop
mov
icebp
retf
in
and
sub
add
jmp
cmp
xchg
leave
imul
sahf
xlat
cli
nop
xchg
jmp
mov
aad
scas
push
or
adc
pop
jmp
mov
jns
sbb
call
js
pop
lods
jbe
xlat
dec
pop
xor
jo
cli
shr
pop
cmps
cmp
movs
bound
xchg
mov
ja
int
mov
inc
pop
push
mov
xchg
mov
cmp
push
fcom
pop
sub
mov
sub
adc
inc
dec
js
arpl
repnz
mov
mov
push
sbb
sahf
adc
outs
fucomip
(bad)
dec
dec
mov
fwait
push
add
pop
sbb
cmp
and
xchg
hlt
dec
stc
mov
or
cmp
push
jbe
inc
sar
jge
add
pop
sub
cmp
push
dec
les
invd
mov
out
je
push
fldenv
leave
adc
xor
mov
call
out
jae
sub
cmp
shl
jae
jl
scas
mov
cmp
call
lock
call
std
mov
aam
add
ss
nop
pop
xor
lds
fist
scas
sbb
pop
and
mov
dec
fiadd
mov
lahf
pop
sbb
daa
push
dec
sbb
or
xor
and
test
loope
test
adc
popf
xor
or
popf
retf
das
out
push
aaa
or
xor
pop
fild
dec
or
sub
pop
jecxz
ret
mov
in
mov
pushf
mov
test
xor
push
dec
inc
int
push
sub
mov
das
cdq
daa
or
pop
sbb
dec
test
pop
shr
lahf
inc
hlt
fist
ins
scas
xchg
mov
pop
dec
sub
clc
xor
mov
pop
out
sbb
pop
iret
ds
pop
ret
add
cmps
xor
mov
outs
xchg
sbb
push
ret
mov
sub
(bad)
sub
cmp
mov
cmps
jle
cdq
cs
out
fsub
adc
std
push
aaa
cmp
inc
cmp
add
(bad)
mov
mov
nop
adc
add
sub
cmp
pop
popa
mov
mov
push
or
test
sbb
push
std
mov
xlat
jmp
mov
fdivr
inc
pusha
lods
xlat
xchg
fidiv
loope
inc
fild
sub
pop
adc
add
lods
inc
dec
sub
mov
pop
add
pop
(bad)
sahf
sti
mov
fidivr
and
pop
(bad)
sahf
in
(bad)
pop
inc
mov
lods
pop
lea
cmp
outs
movs
cmp
push
ret
jns
rol
dec
xchg
fwait
mov
test
xor
push
mov
mov
mov
mov
movs
or
int
jns
pop
dec
add
cld
rol
jl
ret
mov
fiadd
inc
cdq
pop
(bad)
jmp
pop
add
xor
mov
pop
dec
call
cs
(bad)
cld
push
adc
mov
jge
or
stos
push
add
pusha
ja
xor
jp
and
stos
stc
inc
gs
rol
add
out
dec
or
icebp
out
and
stos
xor
mov
jecxz
cmps
sbb
xlat
adc
and
inc
and
cld
adc
xor
aaa
add
ins
mov
and
jge
sub
into
cmp
jnp
arpl
lahf
test
loope
jnp
out
clc
mov
ficomp
(bad)
imul
mov
push
movs
shl
jbe
xor
or
dec
jno
dec
cs
repnz
xor
or
pop
out
inc
or
retf
addr16
arpl
mov
test
clc
vmovq
add
dec
in
pop
out
add
sbb
loopne
mov
icebp
je
fsub
fcom
xchg
mov
out
inc
mov
cwde
cmps
jne
mov
add
add
aam
dec
xor
ret
adc
loope
add
xchg
div
dec
lods
test
add
cmp
bnd
mov
(bad)
add
int
push
aaa
add
aam
or
mov
in
sar
(bad)
mov
rol
adc
sbb
mov
add
nop
int
scas
fwait
cmp
pextrw
js
adc
and
push
enter
repnz
or
test
or
mov
cmc
fucomp
fist
push
jle
or
dec
sbb
es
or
jnp
stos
xchg
(bad)
in
push
adc
jae
xor
xor
ficomp
out
cmc
mov
pop
mov
mov
repz
ja
jg
pusha
pop
inc
cmp
adc
jb
shr
push
cmp
aas
fsubr
mov
jl
xchg
scas
pop
in
mov
aad
push
mov
sbb
(bad)
dec
xor
fcomip
cmps
fidivr
pop
lods
cmps
rcr
and
enter
(bad)
aam
in
pop
jo
outs
cmp
fisubr
mov
not
movs
push
mov
sbb
cmp
ret
not
(bad)
test
mov
pop
xor
test
pusha
cld
test
fcmove
in
xchg
gs
push
int
cld
mov
adc
jns
gs
mov
clc
in
jg
mov
sub
retf
push
fild
mov
sbb
mul
iret
addr16
push
ja
and
xor
stc
sbb
mov
xchg
sub
dec
(bad)
es
pop
pusha
jmp
call
stos
dec
jecxz
cmps
test
sbb
fwait
mov
sahf
jl
mov
xor
push
leave
mov
jae
iret
fstp
ja
cmp
cmp
out
or
cli
and
fidivr
movs
(bad)
mov
inc
jns
push
dec
js
sti
mov
cmps
in
test
ds
sahf
push
test
or
nop
and
push
pop
jmp
push
scas
adc
lea
inc
jns
xchg
test
into
addr16
fst
jmp
push
stc
dec
jo
mov
push
sbb
push
dec
out
enter
cmps
jne
aaa
dec
cdq
adc
pusha
push
or
cmp
fs
in
dec
jns
cmp
mov
pop
mov
pop
outs
outs
mov
jmp
jle
adc
stos
clc
xchg
xlat
cmps
dec
push
mov
popa
test
or
mov
es
inc
cld
mov
iret
mov
inc
mov
shl
mov
push
xchg
pop
(bad)
repnz
(bad)
xor
adc
add
push
mov
lds
sbb
jmp
push
bound
stos
outs
sti
or
xor
xchg
out
pop
lods
pop
mov
test
outs
ja
jge
retf
stos
les
les
inc
int
sbb
rol
dec
jo
mov
sbb
sbb
aad
dec
out
data16
test
jbe
inc
test
cmps
and
dec
loop
jbe
xor
aas
gs
mov
jnp
pop
jmp
dec
je
sbb
mov
or
sar
pop
push
loopne
in
add
or
mov
daa
shr
jmp
xchg
inc
mov
inc
aad
pop
jge
push
jle
xor
aad
push
int3
mov
pop
sub
or
add
fld
cmp
sbb
dec
xor
jmp
push
out
push
cmp
jl
mov
pop
les
jecxz
mov
dec
xor
loop
sbb
mov
add
fld
mov
jge
pop
xchg
retf
(bad)
cvtdq2ps
pushf
xor
bound
in
push
mov
inc
mov
mov
and
pop
or
cmp
dec
sbb
out
lods
frstor
adc
sahf
xchg
seto
data16
mov
hlt
es
adc
(bad)
ret
out
mov
cmp
pop
popf
pop
je
rcr
pop
dec
loop
pop
(bad)
sub
div
mov
int
inc
hlt
jbe
mov
sar
dec
fnstenv
sbb
mov
xchg
rcr
test
inc
xchg
popf
xchg
fiadd
jmp
ins
(bad)
lods
dec
mov
ror
cmp
ret
ficom
inc
bound
xlat
cmp
inc
lods
mov
add
aaa
jmp
xor
je
xchg
ss
push
jg
fist
inc
push
movs
pop
sbb
sub
ja
xor
data16
test
sub
fldl2t
mov
dec
ss
daa
mov
ret
jne
xor
adc
and
mov
out
add
pop
cmp
into
enter
xor
jnp
enter
gs
stos
lea
mov
cmp
push
sub
stos
jg
aaa
jl
or
scas
rcpps
je
outs
pop
xor
enter
cmp
pop
adc
cmc
stos
and
push
fnsave
ret
cdq
push
xchg
mov
lock
xchg
mov
imul
call
inc
sti
mov
mov
daa
xchg
sub
scas
xor
mov
xor
leave
popa
arpl
addr16
dec
jb
jmp
lock
push
mov
pop
xchg
out
mov
jbe
(bad)
cmp
in
add
repnz
push
out
jmp
push
cld
stc
fdiv
jb
arpl
imul
loop
stos
jecxz
cwde
push
mov
into
jbe
clc
rcl
inc
iret
add
cmp
xor
cmp
cmps
push
fs
ins
xor
arpl
nop
lods
out
xchg
mov
arpl
add
jns
add
or
gs
repnz
loopne
adc
push
push
or
nop
psubq
data16
mov
mov
push
jo
mov
out
jnp
sbb
ins
jp
push
jg
je
cwde
xor
test
jg
jae
adc
ret
cli
adc
cli
adc
adc
pop
adc
loop
test
cdq
out
movs
inc
inc
sub
je
push
in
cmp
outs
cmp
jmp
inc
adc
inc
jb
adc
xchg
jo
inc
push
xor
or
cli
stos
das
xlat
sub
cmp
cmp
repz
jp
aam
xlat
(bad)
xor
js
jle
pop
inc
push
nop
pop
or
jb
or
ja
sub
call
lahf
sbb
out
adc
add
stos
mov
pusha
test
ret
or
inc
sub
push
mov
cmps
aas
cmps
mov
jmp
and
out
adc
repnz
inc
sub
not
xchg
jecxz
mov
repnz
lahf
(bad)
mov
shl
scas
adc
inc
or
jns
push
mov
and
(bad)
std
jmp
sbb
jg
or
xchg
fiadd
(bad)
jp
dec
stc
xor
ret
test
or
les
out
out
and
push
rol
mov
mov
ret
clc
loope
ret
xchg
pushf
xchg
ins
fidivr
pop
int
pop
xor
mov
(bad)
mov
loop
clc
push
in
add
sahf
addr16
or
popf
and
mov
mov
popa
xchg
in
jmp
aam
clc
arpl
fnstsw
shl
xchg
mov
pushf
jmp
cdq
ret
out
xor
in
adc
or
enter
cmp
sub
lahf
adc
imul
out
pop
aam
dec
inc
je
fwait
stc
out
int3
out
fs
(bad)
popa
lahf
jae
mov
adc
cmp
ds
and
iret
cmp
cmps
mov
js
rol
or
push
nop
imul
out
fwait
and
mov
sbb
(bad)
push
in
sar
je
jg
out
xchg
aaa
loope
mov
pop
out
inc
push
pop
jnp
aaa
cmps
(bad)
je
rcl
adc
adc
(bad)
stos
dec
push
pop
adc
scas
dec
cwde
or
pop
dec
adc
mov
(bad)
fwait
shl
dec
sbb
and
adc
dec
push
pop
cmp
mov
sbb
cld
inc
mov
sbb
cdq
jmp
jno
rol
shl
(bad)
jnp
cmc
sbb
sub
cmp
imul
xchg
jne
lahf
mov
mov
cli
and
or
inc
sub
push
push
xchg
call
adc
ret
rcr
int
pop
adc
add
mov
cmps
and
adc
(bad)
adc
data16
aam
cld
mov
repnz
push
mov
scas
cmp
js
and
sub
or
mov
dec
imul
aam
inc
mov
sub
ret
lds
aam
ins
xchg
jmp
(bad)
xlat
ins
mov
fst
mov
jl
call
cdq
fild
mov
and
xchg
cmps
enter
clc
xchg
loopne
adc
(bad)
pop
inc
ss
(bad)
and
mov
push
cmp
mov
and
(bad)
mov
nop
xor
sub
(bad)
sub
neg
test
dec
push
cdq
imul
rol
jne
and
imul
mov
add
cld
lahf
je
mov
or
iret
aad
rol
dec
xchg
in
ficomp
in
inc
xchg
jno
inc
lock
mov
push
push
repnz
loop
retf
mov
cmp
iret
xchg
std
test
rol
jp
pusha
(bad)
std
cmp
xor
mov
or
ds
xchg
das
and
js
stos
xchg
adc
enter
(bad)
stos
jae
push
in
pop
pop
dec
int
inc
cld
loopne
cld
pop
jle
inc
daa
fwait
bound
xor
dec
popa
fwait
lahf
(bad)
int3
or
movs
shl
clc
nop
fimul
fdiv
and
and
jmp
outs
mov
inc
out
and
adc
je
inc
je
cwde
fld
jle
les
jl
shl
add
clc
sub
iret
pop
jbe
xchg
(bad)
aas
lea
(bad)
out
mov
gs
or
fsubr
sbb
pop
jp
dec
dec
pop
ins
mov
out
add
ret
cmp
repz
inc
clc
fadd
xchg
adc
std
lahf
cmp
cmps
in
xchg
jmp
fs
xchg
sar
test
jecxz
push
rcl
or
add
adc
mov
inc
data16
dec
sub
les
pop
mov
jns
adc
jle
stc
cmp
push
push
(bad)
cld
mov
int
pusha
jb
std
xchg
jp
clc
test
mov
das
cdq
or
pushf
out
mov
shl
test
adc
xchg
(bad)
fild
xor
and
dec
mov
lahf
jmp
jbe
aas
add
lahf
inc
test
int
jne
adc
adc
into
stc
repnz
fist
mov
in
or
adc
or
pop
fwait
push
out
add
mov
or
pop
pop
daa
mov
and
xchg
mov
aam
rcl
loop
push
mov
add
mov
movs
or
dec
ret
sub
dec
es
or
jmp
sub
pop
js
xchg
jecxz
ror
aam
mov
mov
xor
imul
into
popa
sbb
iret
push
cmps
aad
ins
mov
add
test
pop
(bad)
stc
fist
scas
ret
push
push
int
mov
or
xor
dec
ds
outs
ret
mov
aaa
push
pop
jae
into
shl
jecxz
jle
mov
mov
shl
add
adc
jne
test
in
add
push
mov
adc
mov
stc
and
sub
outs
imul
imul
adc
xchg
aaa
nop
popa
lahf
je
icebp
arpl
mov
ret
mov
mov
cmp
test
pop
je
fisub
nop
cli
(bad)
lock
cmp
mov
(bad)
hlt
adc
sbb
fisttp
jmp
sbb
xor
sbb
cmps
sbb
ss
in
inc
cmps
pusha
xchg
js
jmp
out
scas
(bad)
fcom
sar
xor
push
dec
(bad)
fmul
rcr
jp
rol
mov
bound
cmp
movsx
sbb
popf
jmp
fbld
push
xchg
ret
repnz
iret
iret
add
leave
xchg
std
mov
jge
fstp
pop
out
mov
and
ror
mov
xchg
ins
inc
int
fmul
xor
xchg
pop
mov
repz
adc
dec
pop
xchg
sti
sub
ror
sub
jne
push
sub
aam
in
popf
or
pop
adc
test
dec
mov
js
push
xchg
pop
fdivr
mov
imul
outs
(bad)
sbb
cmp
data16
es
or
pop
in
ja
cmp
ins
mov
test
push
daa
enter
(bad)
fisubr
mov
cli
out
or
dec
sbb
inc
loope
xchg
scas
jmp
ret
adc
(bad)
stos
mov
jg
or
jb
stc
jg
mov
inc
lock
push
lahf
mov
(bad)
lods
xchg
mov
or
inc
jecxz
jl
pop
jo
sub
jne
ins
or
dec
push
test
lods
cwde
inc
jae
sete
shl
inc
pushf
push
mov
pop
out
push
adc
xor
cli
icebp
into
(bad)
ins
pop
jno
mov
lds
daa
sub
leave
add
push
mov
(bad)
scas
add
mov
cmc
or
loop
mov
jbe
cmc
int3
lahf
add
ss
xchg
jne
test
hlt
repnz
mov
cmp
sub
(bad)
outs
sbb
mov
mov
jecxz
cdq
and
or
push
daa
shr
sbb
xor
nop
jmp
mov
iret
jae
cs
aaa
add
sbb
push
fs
into
dec
(bad)
out
out
xchg
jl
add
or
out
imul
and
addr16
icebp
add
mov
inc
loope
and
sub
mov
pop
ror
adc
stos
bound
add
xlat
jp
or
cmp
into
push
inc
aad
fwait
dec
and
je
and
sbb
pop
loopne
fisub
(bad)
or
mov
push
cmp
jmp
sbb
mov
movs
jnp
stos
sar
xchg
inc
sbb
inc
imul
and
enter
xor
inc
fsubp
cmps
frstor
add
add
(bad)
dec
push
fimul
xchg
shl
mov
add
adc
sbb
into
xor
iret
mov
pop
or
jns
cmp
sbb
jecxz
sub
or
pop
cwde
stc
fsubrp
mov
aaa
cmp
dec
jnp
jp
adc
adc
je
ss
fwait
xchg
dec
nop
mov
dec
mov
cmps
push
sbb
sub
push
repz
xchg
stos
sbb
pop
ficomp
into
out
mov
jmp
pusha
(bad)
loope
das
adc
fucomi
jmp
lods
cmp
pop
out
imul
mov
ret
xchg
loopne
sub
sbb
out
out
jg
cwde
jns
fnsave
xor
sbb
call
pushf
or
cmp
lea
stos
hlt
dec
dec
mov
mov
in
jecxz
jge
push
cmps
jge
adc
scas
dec
mov
dec
inc
gs
repz
fsub
shl
jae
xchg
cmc
shr
mov
leave
sti
and
mov
jmp
and
aas
jge
shl
inc
jecxz
das
into
xchg
in
xor
cmp
(bad)
gs
push
loopne
xor
dec
push
(bad)
je
lds
mov
jae
into
inc
fidiv
mov
mov
fdecstp
xor
stos
cdq
rcr
ret
or
dec
cmp
shl
xor
adc
add
sbb
fcmove
je
call
mov
pop
and
sub
das
add
int
rcl
pushf
clc
jo
or
data16
cmp
fidivr
mov
push
pop
xchg
es
in
xchg
test
sub
push
cdq
push
adc
out
mov
adc
or
inc
add
xchg
cmc
sar
mov
jnp
jo
pop
mov
test
pop
(bad)
mov
inc
jo
inc
fsubr
mov
scas
inc
int3
int3
fisttp
mov
inc
cmp
xchg
data16
cdq
add
jne
cli
out
push
hlt
rol
(bad)
jmp
cli
pop
pusha
sub
hlt
bound
sbb
enter
ja
repnz
fist
leave
jg
jb
iret
push
cmp
sbb
mov
daa
push
gs
stc
inc
xchg
out
adc
inc
jge
fidiv
pushf
test
movs
cli
jmp
xchg
sbb
sbb
fisttp
out
aam
push
add
fs
pop
movs
call
sahf
add
stc
add
xor
sbb
lods
out
fsub
jne
fbstp
inc
fsubr
inc
lds
add
mov
adc
xchg
dec
hlt
cmp
jge
out
mov
jb
clc
ret
out
xor
adc
inc
adc
lea
dec
outs
jle
or
jecxz
add
xchg
jecxz
jmp
imul
outs
repz
arpl
test
push
mov
adc
(bad)
dec
push
add
dec
dec
jg
push
jb
xchg
repnz
xchg
inc
mov
imul
jge
pop
mov
or
mov
xlat
aad
adc
aas
in
mov
stos
fdivr
dec
inc
dec
(bad)
cmps
mov
leave
xor
mov
xor
ret
mov
cwde
adc
mov
nop
mov
imul
aad
clc
mov
push
dec
jmp
test
test
leave
dec
mov
dec
aad
push
jecxz
in
enter
stos
mov
pop
mov
leave
xchg
xor
iret
sahf
test
add
popf
ret
mov
mov
enter
int
xchg
(bad)
xor
fsubrp
dec
les
inc
popa
mov
adc
stc
movs
mov
mov
and
push
and
mov
mov
outs
fbld
sbb
in
stc
cmp
out
aam
(bad)
popa
sbb
dec
in
sub
stos
pushw
shl
sar
mov
push
adc
pop
(bad)
ins
and
cdq
outs
cmp
ror
out
mov
fs
add
std
ja
or
push
cmovnp
add
pop
mov
out
mov
out
cmp
inc
ds
leave
jecxz
jb
lods
cmp
repnz
cmp
sbb
sub
js
ja
sub
cmc
cmp
xchg
(bad)
pop
cli
jns
shl
fwait
sti
repnz
inc
sbb
fsubr
jg
ficomp
clc
neg
jp
push
repnz
std
or
aam
cdq
call
inc
pop
ins
lods
dec
cmp
clc
mov
xchg
mul
inc
stc
lea
(bad)
iret
retf
movs
fist
ins
xchg
mov
fild
push
cli
dec
cs
fwait
pop
je
inc
ret
push
mov
inc
sbb
pop
inc
ret
enter
push
(bad)
fbld
outs
sbb
(bad)
cmps
sub
xchg
out
mov
jecxz
sub
ret
movs
or
fsub
sbb
dec
mov
jae
inc
cmps
leave
or
mov
data16
add
pop
add
enter
push
jo
xlat
or
das
adc
sub
inc
xchg
ds
xor
mov
mov
jb
(bad)
sub
stos
fisttp
dec
xor
and
mov
scas
pmaxsw
add
or
mov
xor
push
mov
mov
loopne
cmc
nop
ret
xor
loop
jecxz
jne
pop
fisttp
scas
fsubr
jge
xor
movs
loop
leave
jns
in
xlat
outs
adc
fnstenvw
and
pop
movs
out
inc
inc
ret
movs
mov
fiadd
sbb
mov
mov
mov
stos
mov
stos
sub
pop
jb
xchg
mov
and
mov
lods
xor
cdq
in
mov
jle
jecxz
jns
lds
push
les
std
imul
xchg
pop
sbb
inc
jne
xchg
mov
fucom
iret
add
lds
push
xor
or
mov
adc
jb
jp
adc
(bad)
imul
ret
and
fisttp
out
test
mov
lods
(bad)
fcomp
ins
popf
xchg
sbb
xchg
mov
lock
mov
xor
in
pop
cmp
leave
test
lds
call
jo
ret
sub
push
retf
in
sbb
jle
jne
(bad)
xor
retf
clc
xchg
add
int3
fidiv
xor
popa
jo
ins
outs
adc
add
ins
sub
or
push
mov
mov
xor
aaa
ins
cmp
ja
inc
mov
std
mov
and
push
sub
inc
jmp
mov
xchg
popf
std
shl
or
pop
lods
pop
mov
dec
xor
mov
jle
fild
in
ficomp
sub
clc
jl
fs
push
adc
mov
call
sbb
add
dec
stc
fnstcw
out
retf
ja
sub
stos
mov
leave
dec
adc
lods
jnp
or
or
neg
mov
and
test
aam
jecxz
shl
sar
mov
mov
gs
cmp
mov
arpl
out
mov
mov
cmc
inc
int
xor
arpl
xor
mov
aaa
adc
mov
lahf
push
lea
xlat
inc
ins
inc
ins
(bad)
xchg
out
mov
xchg
cdq
jmp
es
pop
aas
and
pop
stos
push
rcl
loope
test
jle
push
ss
mov
cmp
or
cwde
je
mov
lds
lds
in
mov
ins
jp
pop
cmps
pop
and
fsubr
pusha
cld
mov
imul
mov
mov
rcr
and
inc
fdiv
add
add
adc
je
rcr
loope
cmp
popf
jp
jle
cmc
xchg
push
pop
pop
and
mov
adc
js
cmp
ds
call
imul
fldcw
test
lods
xor
or
test
pop
and
daa
movs
mov
push
into
div
push
cld
aad
or
in
mov
lods
add
add
xlat
sar
dec
int
cs
jae
or
dec
mov
aad
not
sbb
dec
xor
push
dec
aad
xchg
scas
dec
jno
loopne
or
hlt
lock
adc
and
xchg
rcl
inc
out
mov
aam
popf
sahf
lock
js
push
pop
jns
popa
loope
call
inc
ret
push
dec
outs
xchg
fld
inc
test
ret
xchg
mov
mov
sahf
mov
cmps
pop
ret
fbstp
or
jb
int3
xor
shl
daa
xchg
out
sbb
add
call
aas
jae
push
jo
sub
xor
aas
lds
adc
add
jne
and
add
enter
mov
pop
sub
sbb
push
call
fild
push
aad
hlt
mov
std
add
cmp
push
pop
xor
jl
retf
stc
aad
fidiv
ins
ja
test
xchg
mov
div
scas
adc
pop
or
jle
rcl
icebp
aad
push
mov
retf
mov
dec
push
sub
ins
mov
mov
movs
stos
push
mov
sub
retf
jp
mov
push
mov
dec
push
add
fs
ds
fisubr
test
add
jge
add
mov
jg
iret
push
inc
ror
and
xor
fist
mov
aad
movs
fnstcw
cmp
sar
push
outs
pusha
dec
xor
sub
xchg
xchg
push
in
dec
xor
fpatan
ss
adc
dec
es
xchg
sbb
inc
(bad)
popa
cmp
mul
stos
pusha
scas
inc
mov
sbb
xchg
fisub
jmp
push
icebp
and
jo
sbb
(bad)
or
jbe
mov
ss
retf
movs
(bad)
adc
ret
pop
shl
push
addr16
sub
in
jo
ins
scas
xor
cli
popa
(bad)
(bad)
rol
dec
clc
pop
dec
sub
xchg
or
fild
pop
mov
(bad)
adc
neg
fisub
out
or
leave
outs
jle
xchg
jb
sub
pop
mov
dec
adc
push
cmps
sub
shl
cmp
sbb
sub
cdq
ss
inc
push
xor
sbb
jne
retf
pop
jbe
fstp
and
adc
pop
mov
push
inc
les
xor
sub
cmp
mov
sub
and
int
sub
jbe
aam
inc
scas
sub
jge
sysenter
ss
cmps
aad
pop
mov
pop
or
mov
and
or
pop
lods
cmps
outs
sbb
sub
pushf
xor
das
jb
adc
inc
jge
pop
push
in
jge
cli
int3
movs
inc
mov
test
inc
jbe
mov
stos
cmps
repz
adc
fstp
loope
xchg
out
cmps
or
add
dec
stos
mov
mov
jnp
jge
xor
fcomi
ins
(bad)
cmc
cwde
sub
pop
mov
jmp
in
call
xor
in
adc
sub
push
and
fs
sub
jnp
xor
fst
push
hlt
ret
mov
and
jle
sub
mov
sbb
fwait
leave
ins
xchg
jnp
pop
cld
movs
clts
in
sub
mov
mov
mov
ret
xchg
mov
stos
stos
movs
and
js
movs
cwde
sub
scas
gs
sbb
(bad)
scas
xchg
repz
in
push
mov
xchg
data16
cs
mov
push
fild
ins
fisubr
es
ss
movs
xchg
dec
stc
add
xlat
call
scas
dec
call
shr
jo
adc
xlat
or
push
xor
pop
inc
mov
out
rcr
popa
cmc
call
test
xchg
or
pop
xor
scas
inc
pop
fcomp
mov
rol
push
and
push
mov
push
jg
mov
aam
aaa
cmp
fld
pop
mov
jae
fidiv
adc
push
es
mov
fadd
push
mov
cli
jo
jo
lods
mov
lahf
aam
cmps
out
or
jae
jmp
cmp
ficom
test
sti
mov
cmp
fimul
daa
dec
mov
mov
push
and
pop
push
ficomp
arpl
in
test
test
pop
xchg
repnz
dec
push
jns
std
scas
and
ret
inc
icebp
push
sbb
jle
mov
and
add
mov
loop
push
mov
lea
push
xor
cld
mov
in
adc
jnp
lods
xor
xchg
sbb
adc
xchg
rcl
hlt
dec
gs
js
into
std
scas
dec
pop
mov
clc
fldl2e
les
call
xchg
cmp
sub
cld
sbb
retf
jns
pop
jmp
cmc
xchg
inc
inc
xor
push
repz
xlat
hlt
mov
leave
idiv
mov
call
hlt
lods
adc
lahf
push
into
outs
call
pop
mov
jnp
adc
imul
and
or
and
(bad)
btc
ffreep
add
adc
mov
push
(bad)
cmc
add
test
inc
mov
pop
pop
int
outs
push
mov
clc
inc
addr16
add
(bad)
sub
add
arpl
(bad)
fdiv
nop
out
and
mov
jl
popa
sub
push
scas
scas
(bad)
ret
inc
mov
lahf
sub
push
iret
pop
test
call
js
add
cmp
pop
pushf
add
cs
test
pop
cs
jo
div
in
jo
cmp
iretw
into
call
xchg
sub
stc
push
pop
movs
sub
(bad)
jns
dec
hlt
ds
lods
mov
(bad)
in
int3
mov
xor
or
and
mov
jmp
mov
mov
sar
push
inc
shr
inc
imul
mov
push
imul
adc
dec
stc
fiadd
(bad)
mov
mov
jmp
aaa
pusha
mov
add
out
dec
push
dec
inc
xor
stos
scas
xor
adc
mov
add
jne
mov
cs
mov
out
sub
push
cwde
adc
fs
frstor
outs
mov
pusha
and
mov
scas
shr
dec
js
aaa
aad
ins
or
pop
ins
sbb
ret
mov
aas
sbb
imul
cld
push
repz
repz
mov
jb
and
sbb
arpl
(bad)
mov
lds
mov
cmps
cmp
(bad)
jp
fsubr
je
iret
pusha
mov
in
je
sbb
pop
adc
cdq
not
push
nop
stc
mov
sbb
jne
adc
mov
jge
rol
or
jns
ret
(bad)
jo
into
pop
mov
jns
(bad)
fld1
mov
pop
adc
jecxz
push
scas
mov
shl
pop
leave
or
test
xor
add
out
inc
addr16
lods
push
jmp
cmp
lods
es
jecxz
es
(bad)
pop
xchg
cmp
shl
fnstcw
data16
dec
jnp
in
dec
push
cmps
imul
jecxz
sub
adc
push
fisttp
xchg
mov
lahf
cdq
mov
add
xchg
mov
mov
fmul
jb
mov
push
inc
out
(bad)
(bad)
push
test
push
cmp
int
add
ds
es
inc
pop
or
mov
xchg
mov
ds
cmp
loopne
cmp
dec
mov
or
in
jno
enter
push
pop
test
push
or
pop
les
sub
fmulp
jmp
ins
push
mov
inc
(bad)
ret
mov
pop
jge
add
or
pop
cmc
pop
call
not
push
aam
aam
shr
out
sbb
lahf
in
push
call
aaa
jecxz
hlt
xchg
fisubr
dec
mov
cmps
in
adc
cs
xor
(bad)
xchg
mov
lods
jp
and
movs
mov
mov
mov
(bad)
(bad)
xchg
sbb
jb
jmp
jmp
sbb
iret
stos
ret
cmps
div
ja
outs
in
xchg
(bad)
lock
mov
movs
adc
outs
or
das
fst
push
pop
hlt
cmc
mov
or
inc
cld
lea
jecxz
fs
mov
or
mov
test
shl
pop
mov
fld
mov
imul
mov
pop
cmps
lds
mov
and
test
and
(bad)
push
movs
movs
cdq
adc
loop
mov
or
inc
mov
sub
jg
popf
addr16
out
dec
jb
and
cli
loope
loop
xchg
in
(bad)
(bad)
add
loope
push
loope
sbb
and
xchg
ins
mov
imul
xlat
mov
cmp
out
shr
das
mov
sbb
test
loope
enter
dec
pop
stc
lds
mov
pop
dec
repz
cmp
pop
push
out
push
ret
jo
mov
mov
add
and
retf
cmp
dec
rcl
xchg
jno
dec
push
ret
enter
and
retf
mov
push
ret
jecxz
es
dec
jae
(bad)
icebp
inc
xor
xor
xlat
pop
mov
mov
sbb
fisttp
ret
cld
(bad)
adc
loopne
inc
clc
js
aas
and
cmp
leave
jecxz
mov
dec
cmp
outs
adc
push
dec
pop
or
rol
jae
popf
fild
stos
adc
jecxz
pop
into
aas
iret
cli
mov
xchg
mov
or
pop
cmp
sar
jns
cmps
push
shl
ret
mov
cmp
inc
stc
cwde
shl
stc
inc
(bad)
jns
or
add
and
push
xchg
inc
push
mov
loop
fimul
inc
add
jae
adc
jne
pop
sub
das
xchg
add
loope
int
(bad)
cmp
(bad)
xlat
sbb
mov
fiadd
xchg
daa
or
and
cld
popf
call
rol
pop
or
and
outs
in
pop
xchg
ds
pop
xchg
add
jl
dec
das
inc
push
in
mov
ds
jecxz
loope
xor
mov
xchg
inc
adc
cmp
and
ds
movs
imul
in
mov
pop
cmp
pop
inc
scas
add
xor
cmc
imul
jb
add
icebp
int
lods
xlat
xchg
(bad)
cmp
cwde
mov
or
dec
add
neg
(bad)
sbb
stc
adc
sub
aas
inc
adc
(bad)
adc
dec
push
pop
jmp
mov
adc
std
jns
les
push
add
fucomip
popa
(bad)
lds
add
test
xchg
cmp
pop
pop
push
mov
test
(bad)
add
xchg
mov
icebp
sar
mov
add
lods
bound
mov
mov
adc
dec
fcomp
jmp
jo
or
test
mov
push
mov
inc
inc
lods
sub
pop
mov
sub
mov
jmp
or
pop
retf
int
std
outs
std
sbb
in
dec
pop
sub
test
sbb
jmp
cs
call
inc
xchg
sub
mov
mov
fadd
sti
enter
shl
xor
sahf
mov
stos
mov
or
and
rol
xchg
shr
xor
fwait
and
lods
push
jp
out
push
sti
jb
mov
shl
mov
mov
or
jecxz
mov
fcmove
xchg
mov
loop
fucomip
cwde
out
push
mov
xchg
adc
add
call
outs
mov
call
jge
rol
add
cmp
(bad)
jge
xor
test
outs
xor
idiv
xor
cmps
mov
sbb
shl
pop
push
pop
gs
push
push
repnz
dec
sub
cmps
sub
cmc
rol
sti
stc
cmp
sub
sbb
call
retf
mov
nop
inc
je
push
lods
lods
cmp
stos
je
cli
mov
xchg
mov
shl
icebp
jo
mov
fcom
out
rol
(bad)
sbb
(bad)
das
shl
mov
es
in
inc
jge
fwait
daa
add
(bad)
leave
ja
(bad)
push
or
pusha
bound
fdivr
sbb
int
inc
dec
jns
retf
es
out
clc
repnz
jg
test
mov
jmp
or
scas
push
mov
int3
adc
jnp
bound
push
add
and
shr
inc
in
nop
pop
int3
mov
fsubr
movs
xor
cmc
outs
sbb
call
fimul
xchg
cmp
add
xchg
mov
xchg
in
js
jge
push
repnz
sbb
lock
dec
sbb
xor
popa
inc
or
fisubr
and
xor
fstp
mov
cmp
lea
test
mov
push
push
push
mov
mov
in
ins
scas
sbb
ds
adc
xor
sar
ja
inc
mov
ss
(bad)
xor
push
lods
mov
cwde
out
sbb
ins
xchg
iret
sub
push
test
adc
adc
out
das
add
test
pop
sub
or
sbb
jbe
call
fucom
lock
std
lahf
or
lods
fcomp
(bad)
inc
inc
or
lock
iret
or
mov
add
stos
xor
iret
(bad)
cmp
(bad)
out
sub
cs
mov
and
cdq
mov
fcmovu
ja
(bad)
xchg
outs
pop
cmps
cli
fst
(bad)
push
arpl
push
loope
push
or
mov
retf
pop
inc
outs
dec
cmp
xchg
pop
sub
pop
sbb
(bad)
stos
mov
sub
repnz
cs
rcl
scas
ins
mov
push
mov
or
sti
gs
repnz
lahf
shl
cld
cs
push
cmp
or
in
repz
or
cmp
hlt
mov
enter
sahf
movs
movs
retf
(bad)
pop
movs
outs
arpl
pop
jnp
jmp
jbe
stc
jp
sar
push
shr
lock
inc
popa
sub
adc
(bad)
push
jg
rcl
mov
or
dec
xchg
rol
jge
mov
and
(bad)
popa
or
aam
xlat
mov
sbb
jmp
jge
adc
test
sar
push
jo
cmps
not
or
sti
mov
jno
lods
mov
push
fdivr
aam
(bad)
and
adc
jecxz
pop
mov
pushf
test
mov
retf
dec
ds
sbb
fnstsw
cli
jo
mov
xchg
sar
add
idiv
test
ss
pop
cmc
mov
les
call
rol
shl
sub
sbb
mov
dec
pop
mov
shl
push
pop
rcl
sub
popf
fadd
movs
xchg
jae
(bad)
cmp
jne
dec
nop
pop
mov
mov
ja
stos
out
stos
mov
ss
xchg
mov
adc
out
hlt
sahf
out
aam
xor
mov
shl
or
mov
leave
jne
sti
fsubr
cmps
jns
and
ins
add
pop
outs
lds
loope
lahf
or
or
jecxz
pop
pop
inc
mov
xchg
pusha
sub
mov
jo
jge
jbe
jg
push
mov
mov
test
ret
push
cmp
cmp
leave
jnp
repnz
in
in
ds
mov
xchg
pop
push
and
imul
jle
(bad)
mov
imul
xchg
mov
sbb
adc
std
adc
inc
mov
pop
inc
dec
sub
push
sbb
(bad)
fst
cmp
inc
loopne
fdivr
aam
mov
push
inc
fiadd
scas
add
pop
xchg
leave
iret
xchg
jne
sti
iret
push
push
jae
int
fs
or
push
sahf
arpl
cmp
test
ficomp
xor
scas
arpl
std
sub
imul
(bad)
loopne
retf
bound
call
stc
cmp
inc
inc
jl
ret
jo
movs
jecxz
mov
clc
push
or
pop
pop
fsub
push
pop
out
dec
mov
mov
(bad)
jae
sbb
fld
daa
aam
into
or
rcr
mov
retw
jecxz
aaa
sbb
mov
adc
in
pushf
mov
pop
mov
(bad)
jmp
sub
mov
rcr
ds
and
adc
in
lahf
mov
mov
mov
icebp
fnsave
cdq
ror
call
jl
shr
jl
jle
mov
inc
std
aaa
xor
mov
stos
lock
pusha
mov
inc
leave
js
and
in
test
pop
pop
pop
bound
rol
dec
lahf
sub
push
and
or
popf
fisub
xor
add
test
out
movs
pop
xor
mov
popf
jmp
mov
xor
sub
mov
mov
aaa
stc
cmp
cmp
cli
adc
jmp
jbe
loop
and
aad
callw
ret
(bad)
jmp
cmp
push
imul
rol
call
mov
dec
jmp
sar
jbe
jns
fidivr
sbb
popa
xchg
jle
fist
jno
lods
aaa
pop
xor
jne
movs
test
xchg
add
add
and
cli
jge
ret
fld
jp
cmp
jp
iret
xor
in
sbb
or
popf
out
js
shr
jo
jg
sub
test
cdq
retf
mov
dec
sbb
cmp
(bad)
ficomp
inc
fidiv
test
cmc
movs
loope
leave
mov
jge
aaa
dec
adc
cld
mov
cdq
cmp
setns
sbb
aam
push
das
mov
lahf
mov
xchg
int3
cmp
xor
js
xchg
repz
xchg
dec
inc
sbb
test
sahf
pop
jb
dec
enter
mov
push
icebp
dec
jmp
push
(bad)
fcmovne
dec
repz
or
inc
jne
xchg
movs
xor
xchg
mul
mov
fcomp
aaa
sub
outs
sbb
dec
fisubr
push
rol
jmp
mov
imul
mov
push
push
pop
dec
add
es
or
outs
(bad)
adc
ret
dec
sbb
mov
(bad)
not
and
adc
xchg
daa
or
mov
add
dec
cmp
popa
int
jns
pop
push
mov
sahf
add
stos
repz
adc
bound
sub
int
mov
or
jnp
mov
sub
pop
push
cld
out
mov
push
jle
dec
fwait
push
scas
retf
outs
mov
dec
sahf
jg
mov
sbb
dec
and
add
mov
pop
jnp
jae
test
inc
fisubr
and
jne
jo
cmp
enter
fisubr
or
xchg
pop
xlat
scas
in
daa
mov
jp
es
loopne
ficom
mov
(bad)
cli
in
repz
aas
push
dec
mov
arpl
sub
push
jl
sbb
retf
pop
jbe
stos
push
retf
popa
das
xchg
and
pop
dec
push
cmp
test
(bad)
nop
fdivr
cwde
push
imul
sbb
mov
sub
neg
sbb
adc
xchg
mov
mov
sbb
scas
lea
add
test
je
mov
test
cld
aam
scas
pop
int3
in
mov
mov
add
loopne
aaa
push
mov
fnstsw
cwde
ret
sbb
xor
ins
xchg
fld
cdq
xchg
sub
sub
leave
inc
inc
dec
sti
mov
bswap
das
cmp
jmp
sub
lahf
or
ins
or
dec
adc
jae
fcom
sbb
es
shl
sub
sbb
pop
push
rol
movs
js
inc
aas
adc
enter
and
mov
mov
push
jle
mov
sbb
ds
pop
outs
in
test
ror
pop
std
lods
inc
jge
push
push
mov
sub
into
loopne
xor
not
pop
push
in
jg
cmp
jno
std
mov
mov
aam
test
(bad)
shr
sub
repz
sbb
jmp
arpl
(bad)
cld
cld
enter
inc
pop
into
add
jno
cmps
mov
ja
loopne
out
and
pushf
mov
add
sbb
gs
(bad)
out
mov
push
dec
add
pop
data16
xchg
xchg
xor
ins
popa
in
adc
int
nop
(bad)
in
pop
hlt
ficomp
inc
mov
xchg
ror
out
imul
pop
push
lods
les
aam
jnp
(bad)
pop
push
js
xor
jbe
push
pop
add
ror
jmp
stos
sub
adc
fidiv
out
xor
pop
in
sub
jl
push
mov
shl
mov
repz
inc
out
lods
test
lods
ds
adc
xor
inc
push
pop
lea
ss
push
ret
imul
xchg
cmp
xor
out
fs
rcl
jmp
inc
lods
mov
ss
call
(bad)
push
test
(bad)
jnp
(bad)
aas
sahf
out
in
mov
sbb
fs
nop
xor
cmp
test
popf
inc
shl
push
in
fild
push
movs
lods
pop
int
ja
(bad)
imul
mov
fst
clc
clc
hlt
cld
call
pop
inc
fisub
mov
rol
(bad)
mov
popf
mov
xchg
cwde
xor
dec
adc
adc
test
mov
fst
call
add
fcomp
repnz
xchg
pop
cmp
jl
repz
pop
retf
xchg
xor
bound
cmp
dec
xchg
mov
cwde
popa
cmps
mov
and
clc
ins
sub
retf
int3
fmul
xchg
cld
fadd
dec
pop
movs
in
ds
xchg
scas
mov
adc
inc
rcr
scas
imul
daa
jno
sbb
js
add
push
lock
jns
lahf
cmps
jle
jns
je
mov
faddp
fucomp
inc
jmp
cmp
pop
loope
aas
jno
gs
dec
mov
dec
mov
data16
ficomp
or
xlat
(bad)
bound
sti
jmp
mov
xor
jp
(bad)
fiadd
(bad)
xchg
jbe
cs
cdq
inc
or
test
xchg
ret
fucomp
shl
shl
sub
inc
aad
xchg
jp
and
mov
in
(bad)
ins
mov
pop
aas
movs
jbe
imul
or
ror
push
retf
and
fidivr
mov
sbb
adc
mov
push
repz
jo
scas
cmp
pop
or
or
cmc
arpl
mov
imul
movs
jmp
jmp
in
pop
(bad)
dec
data16
jmp
popf
enter
ror
xor
mov
(bad)
int
imul
or
les
shr
repz
lds
inc
rdpmc
pop
test
dec
cmp
dec
jmp
mov
xchg
or
mov
xor
out
mov
sbb
dec
in
mov
aad
movs
test
ret
pusha
or
jbe
mov
xchg
mov
mov
mov
jo
xor
inc
xor
adc
fsubr
mov
ret
mov
push
in
dec
cmp
aaa
xor
jno
pop
fcomip
(bad)
lods
xchg
out
sbb
mov
loopne
repz
popa
fild
js
jb
jmp
gs
rcl
ins
xor
dec
sub
dec
in
add
or
jne
lods
mov
xlat
mov
cld
shl
xor
xor
inc
call
push
sbb
mov
fwait
out
je
sar
xchg
sbb
int
std
or
mov
dec
stc
inc
or
fs
jnp
icebp
sbb
je
adc
aad
jnp
pop
int3
outs
add
retf
add
pusha
jo
jge
mov
xchg
inc
scas
mov
popa
and
dec
jno
iret
sbb
pop
dec
call
lods
bound
pushf
dec
int3
movs
sub
add
ds
add
xchg
loopne
mov
pop
movs
push
jno
shr
cmp
mov
bnd
mov
xchg
sbb
pop
adc
xchg
sahf
ja
in
and
retf
out
out
je
aaa
in
jns
loop
cmps
clc
mov
jns
xchg
pop
mov
in
xor
lea
xchg
in
cmp
rcr
(bad)
pushf
out
dec
mov
popa
inc
jecxz
fadd
psubusw
(bad)
cmp
cmc
jnp
jl
mov
rcr
mov
imul
fldenv
ja
(bad)
rcr
ins
imul
sbb
sub
retf
xchg
bnd
inc
xchg
and
sbb
addr16
scas
xchg
not
mov
jle
sbb
mov
dec
jb
push
pop
jle
in
adc
(bad)
imul
ds
pop
jns
jae
mov
pop
inc
push
test
call
adc
mov
sbb
fcmove
inc
imul
dec
cmp
out
pop
pop
jle
mov
jb
push
movs
jne
maxps
jae
js
sahf
mov
(bad)
lock
or
jmp
pop
sar
xchg
dec
es
neg
mov
aas
imul
pop
jne
(bad)
stos
mov
fstp
leave
sbb
or
dec
mov
mov
pop
aas
cld
int3
jg
popa
adc
cld
inc
push
push
test
cmps
pop
ret
pop
jne
mov
retf
sub
fdivr
mov
xlat
fwait
leave
adc
aaa
call
retf
cwde
cmp
jecxz
enter
movs
push
jno
push
cmp
(bad)
sbb
popf
rcr
jecxz
in
fcom
cmps
movs
cmp
movs
loopne
test
add
and
mov
aam
push
xor
mov
imul
adc
ds
dec
out
push
(bad)
out
cld
or
sti
pop
jno
mov
loop
and
xchg
push
sti
pop
pop
push
pop
ss
xchg
into
xchg
call
or
cmc
ins
test
inc
jmp
movs
mov
retf
mov
jno
ficomp
jne
aas
pop
xchg
push
jecxz
jge
push
pop
push
pushf
dec
inc
dec
imul
mov
imul
dec
shr
mov
mov
jae
and
cmp
sbb
jle
mov
in
xor
sbb
test
movs
mov
sub
scas
cmp
movs
dec
ficom
lock
retf
sbb
ja
(bad)
aad
(bad)
in
push
jmp
inc
lods
jbe
mov
mov
push
and
aam
inc
dec
xchg
cmc
mov
mov
pop
ins
sub
and
add
bound
push
and
adc
cs
sub
addr16
ins
jno
call
icebp
jno
push
xor
jge
and
xchg
lock
fadd
js
addr16
or
fcmovb
ins
cmp
dec
test
sbb
push
xor
sahf
in
cs
pop
and
and
in
jge
repnz
sbb
push
fcom
icebp
fs
add
out
hlt
shl
sub
inc
xchg
or
dec
fisubr
ins
mov
jns
cmp
or
or
inc
retf
xchg
sbb
pop
xchg
sub
mov
or
mov
fidivr
scas
sti
cld
cmc
out
scas
xor
jne
xchg
imul
jl
pushf
sbb
mov
push
xor
dec
sti
push
out
int
jmp
push
or
dec
xchg
jge
xchg
inc
or
push
int3
je
test
test
mov
sub
sub
xchg
xor
xchg
je
div
in
xchg
stos
retf
repz
loop
ins
mov
aad
daa
or
mov
push
outs
arpl
in
das
mov
ja
jmp
iret
not
les
pand
mov
int
jecxz
add
icebp
inc
xchg
scas
inc
adc
xor
cmp
jl
pop
adc
pop
mov
aaa
fsubr
or
lea
shl
jo
inc
out
lds
and
pop
retf
dec
mov
and
test
or
cmp
(bad)
ucomiss
int3
inc
ss
add
jecxz
cmp
sti
dec
push
and
iret
jbe
xchg
jns
push
lds
addr16
dec
jge
pop
aas
js
je
dec
sbb
clc
arpl
push
xchg
repz
and
ret
cmp
nop
pop
adc
cmp
sbb
mov
sub
xor
ret
in
sbb
daa
sahf
mov
add
loopne
cmp
xchg
add
aad
(bad)
aas
cwde
(bad)
mov
gs
jge
adc
xlat
and
cmp
inc
loop
fwait
inc
fadd
add
pop
sub
push
inc
addr16
arpl
out
rcr
movs
fnstsw
xor
je
xchg
cmps
and
inc
push
into
sbb
test
or
adc
push
and
jnp
scas
xor
(bad)
pop
add
sbb
lea
and
xchg
out
push
punpckldq
(bad)
iret
hlt
test
test
pop
jbe
mov
loope
ret
jg
stos
mov
add
mov
cmp
xor
jnp
out
mov
test
adc
push
xchg
pop
adc
cmp
cmp
loopne
test
inc
daa
push
pop
ins
jg
push
or
das
test
in
fidivr
inc
jb
ror
adc
jnp
dec
js
js
mov
sar
bound
and
sbb
fadd
dec
out
cli
pushf
lea
sub
out
mov
jnp
(bad)
cmc
int3
and
lea
inc
add
cmp
movs
fwait
xchg
sbb
or
lea
movs
ss
dec
in
jns
push
fmul
and
repnz
mov
lock
mov
and
or
pop
movs
stos
nop
fxam
inc
cmp
xchg
jl
inc
mov
shr
add
cmps
cmps
or
cmp
(bad)
pop
and
cmp
jmp
sbb
xor
(bad)
ja
in
jmp
or
mov
retf
push
loope
(bad)
into
sub
dec
and
pop
mov
pusha
xor
mov
std
cs
test
jmp
mov
fwait
stc
aas
popf
cs
mov
jb
int
inc
cwde
push
ins
xchg
test
adc
pop
or
pop
mov
and
dec
add
pop
mov
and
xchg
not
stos
or
stc
adc
ret
ss
dec
jmp
or
call
fstp
leave
sbb
test
and
mov
and
gs
aaa
mov
bound
mov
call
add
xchg
push
retf
and
call
add
repz
lock
ss
mov
aam
retf
fidiv
hlt
cmp
int3
in
xor
sbb
leave
cdq
xchg
adc
test
xchg
and
mov
xor
xor
cmc
in
stos
and
lods
mov
sub
xor
dec
adc
mov
stos
xchg
js
test
sub
jno
inc
add
(bad)
lock
pop
xchg
pop
xlat
mov
dec
sub
ret
out
movs
loopne
test
pop
cwde
(bad)
lock
cmp
sub
inc
stos
push
sub
les
sub
jnp
sbb
jp
jl
loop
sbb
and
cmc
xlat
ss
adc
lods
js
mov
inc
mov
movs
aam
sub
data16
xor
outs
mov
or
adc
mov
aad
add
jo
cmp
ds
and
int3
fstp
repz
or
or
cmp
(bad)
lods
mov
and
dec
sub
dec
fldcw
sub
push
add
rcl
pop
sti
gs
jge
pop
xor
into
sub
pop
(bad)
hlt
inc
fldcw
jno
ins
les
repnz
stos
push
mov
out
daa
arpl
sub
scas
cmps
add
mov
sbb
pop
inc
fwait
push
xor
scas
lfs
adc
cdq
pop
bound
jbe
sbb
jg
sahf
lahf
add
push
cmp
push
xchg
or
scas
adc
dec
hlt
adc
stos
pop
call
iret
test
loope
adc
sbb
add
fs
imul
shl
pop
cld
pushf
jns
cs
lock
and
test
or
icebp
fldenv
movs
add
xor
and
push
xor
jb
cmp
inc
xchg
js
iret
or
push
or
inc
adc
aaa
call
shr
pop
ror
fstp
push
sbb
aam
mov
xor
ficom
mov
push
inc
dec
mov
sbb
ins
mov
mov
jae
shr
sub
mov
mov
iret
ins
push
or
fisub
push
sbb
pop
in
sbb
cmp
std
sar
fld
cdq
arpl
mov
sbb
add
psubusb
push
or
xor
in
xchg
addr16
cwde
inc
lods
jno
ss
and
movs
push
lea
jne
stos
dec
jecxz
jg
in
popf
(bad)
sbb
mov
ret
jbe
gs
xlat
fiadd
dec
mov
ret
mov
movs
inc
das
cmc
mov
loope
repz
shl
or
xchg
dec
mov
xchg
adc
cmp
lock
jecxz
retf
pop
rcr
call
aaa
addr16
ins
or
enter
shr
dec
fsubr
xor
xchg
or
out
xchg
cli
out
data16
rcr
pop
jo
fsubr
aad
xchg
adc
cmp
gs
dec
jge
in
loopne
mov
pusha
ja
jle
gs
jae
(bad)
sahf
sbb
add
jne
adc
daa
mov
outs
pop
mov
pusha
dec
cmps
outs
sbb
inc
shl
stos
or
add
cmp
fadd
pop
fwait
adc
dec
lahf
add
popa
loope
push
mov
dec
inc
rcr
sub
push
inc
pop
sub
test
outs
into
daa
mov
and
and
out
mov
inc
mov
add
cld
das
ins
popa
add
(bad)
sahf
mov
loop
lock
aam
pop
or
cmps
xchg
xchg
aas
mov
loopne
jmp
xchg
ins
adc
popf
and
les
mov
retf
int3
sub
fadd
jnp
out
loope
aad
ror
or
sbb
add
sbb
xor
pop
aam
add
in
stc
loopne
call
cmps
into
cdq
and
jb
cmc
sti
inc
ins
aas
adc
push
lea
in
dec
or
push
pusha
loop
add
in
fild
adc
idiv
fldcw
int3
dec
jl
cmp
js
jb
cmp
out
shl
(bad)
pop
imul
enter
push
shl
retf
and
mov
fidiv
push
or
sub
xlat
push
out
push
pop
fdivr
arpl
jmp
dec
inc
adc
fs
xor
dec
lods
cdq
leave
xlat
repz
nop
fild
jmp
fisttp
jle
shr
pop
mov
mov
push
add
fild
cmps
sbb
mov
shl
outs
fmul
sbb
jle
fistp
(bad)
and
aam
push
pop
inc
xor
mov
push
out
dec
je
call
mov
loope
or
add
stc
push
pop
dec
ret
dec
arpl
scas
mov
jnp
cmc
aas
mov
pop
sahf
mov
iret
in
mov
dec
push
push
sub
jnp
ins
setne
sub
push
iret
fisubr
or
repz
jns
sbb
mov
xor
dec
sub
outs
xor
rol
dec
adc
rcr
(bad)
adc
sbb
xchg
xchg
test
pop
dec
add
xor
stc
adc
adc
inc
stos
xor
push
inc
jnp
stos
inc
sub
psrlw
sbb
xchg
out
mov
pop
dec
fwait
stos
daa
jg
ins
test
imul
push
mov
adc
int
test
push
pop
or
cmp
xchg
pop
and
das
and
imul
scas
push
test
sbb
jg
and
mov
sahf
ret
jns
dec
xchg
stos
in
and
in
ret
call
push
in
fstp
and
mov
inc
mov
(bad)
jecxz
or
les
jmp
lds
cdq
outs
cdq
div
(bad)
jo
add
xchg
jbe
xchg
retf
ds
bound
loopne
aas
mov
(bad)
sub
jmp
leave
or
xchg
jnp
test
adc
jmp
aam
add
jmp
xchg
mov
mov
fdivr
and
aas
dec
cmps
inc
mov
test
adc
inc
sbb
add
xchg
add
jge
xchg
pop
std
inc
or
push
jo
cmp
movs
lea
js
loop
les
and
lods
mov
js
cmc
push
sub
jle
mov
(bad)
fist
sub
push
std
ss
retf
cmp
lea
xchg
and
mov
in
sub
popa
ss
int
jno
das
movs
xchg
mov
push
aam
push
xchg
mov
ins
int
int3
mov
add
xchg
jge
clc
and
add
adc
jp
jne
les
adc
dec
jmp
push
xor
mov
les
and
popa
movs
push
push
sub
pop
fs
mov
stos
repnz
adc
pop
mov
les
push
sub
ja
nop
cmp
int3
dec
cmp
inc
sub
ret
repnz
test
ins
add
stc
cmp
popf
mov
pusha
aad
(bad)
pop
sbb
mov
push
xchg
inc
jnp
outs
pop
adc
pop
push
gs
lds
xchg
fs
pop
cmp
xlat
xor
adc
sbb
aas
or
setne
(bad)
cmp
call
jle
cmp
jmp
cmps
pop
push
enter
(bad)
sbb
in
in
and
ins
jmp
sbb
push
retf
cmc
mov
jp
jo
inc
enter
pop
loopne
add
arpl
shl
mov
lock
lds
sbb
call
movs
in
or
lods
xor
out
(bad)
jno
inc
leave
fst
jbe
or
pop
jmp
push
es
mov
add
cmp
cmp
xchg
stos
arpl
xchg
xchg
or
leave
jae
sub
not
pop
mov
int3
lock
push
retf
pop
push
(bad)
mov
sahf
mov
int
fwait
neg
mov
je
pop
push
inc
sub
dec
ret
xor
ins
pop
cli
leave
bound
retf
outs
push
(bad)
pop
sbb
inc
xor
xchg
and
rcl
xchg
imul
pop
jae
push
push
test
add
scas
pop
push
add
jae
pop
xchg
daa
sbb
pop
xlat
gs
imul
cmp
xor
(bad)
arpl
movs
jb
in
cld
inc
sub
in
cmc
enter
test
ins
fstp
push
dec
dec
xchg
mov
clc
iret
ds
jecxz
cli
xor
pop
ret
xchg
mov
xlat
xchg
test
xor
dec
cmp
sbb
xchg
and
std
adc
into
sub
and
push
xor
lods
test
je
ins
jnp
lock
call
mov
ret
ins
mov
nop
push
mov
jg
jmp
push
xlat
sbb
mov
pushf
aam
dec
fucom
ins
jae
cmp
and
cmc
mov
scas
jp
out
lods
aaa
ins
xor
js
pop
mov
rcr
cwde
imul
or
inc
add
dec
fcomp
out
dec
sub
das
push
in
icebp
sbb
retf
and
out
push
fsub
jmp
cmps
inc
pop
mov
adc
test
cmp
or
sub
dec
retf
cmp
repnz
push
adc
mov
or
add
sbb
mov
gs
push
dec
pop
shl
dec
std
cmp
test
outs
test
fnsave
rcr
in
jmp
and
pop
push
mov
imul
xchg
mov
cdq
or
jns
xchg
sbb
inc
or
add
je
cmp
dec
jg
jle
jns
pop
adc
out
lds
push
mov
stc
mov
push
mov
cmps
fnstcw
adc
mov
cmp
xchg
inc
xchg
xchg
std
jecxz
inc
sbb
ss
mov
lea
into
fsubr
adc
ss
push
out
mov
or
xor
add
jl
jb
and
fcmovb
add
xor
aas
mov
pop
sahf
hlt
mov
adc
and
adc
push
and
cmps
inc
jmp
(bad)
lds
jecxz
lods
cs
push
xchg
add
inc
dec
dec
aaa
in
jae
call
shr
bound
push
rcr
rcl
xor
imul
add
cli
adc
out
retf
sub
test
cmp
(bad)
rcr
mov
das
je
cmps
mov
test
dec
lahf
jno
outs
movs
sbb
pop
arpl
sub
call
pushf
sti
xchg
fstp
(bad)
(bad)
push
xor
shl
lods
add
icebp
mov
jmp
cmps
inc
jmp
test
sbb
(bad)
lock
out
and
push
inc
in
in
ja
ja
push
sub
xchg
cld
mov
aas
movs
jmp
xor
in
xchg
mov
stos
jno
dec
loop
ins
inc
inc
jbe
aas
adc
dec
rol
jle
and
jge
clc
movs
(bad)
pop
out
bound
in
call
out
hlt
and
xchg
sbb
(bad)
test
sbb
in
xor
ret
cmps
addr16
and
add
icebp
mov
mov
add
addr16
inc
inc
and
xchg
push
jg
jb
ja
and
mov
jp
repz
push
cmp
aaa
nop
outs
test
lods
out
xchg
test
push
pop
imul
jg
cmp
cmp
(bad)
imul
mov
mov
xor
push
cmp
vprotw
rcl
sbb
xor
jnp
mov
jecxz
es
jg
in
mov
inc
pushf
xchg
daa
lods
jmp
loop
pop
push
add
mov
mov
mov
inc
lock
cmp
std
adc
add
push
mov
gs
add
bound
pop
int
push
bound
or
fnsave
inc
push
mov
dec
pop
je
in
mov
aam
lods
lahf
jge
jae
and
loop
mov
aas
or
mov
lods
add
and
dec
sub
sar
push
scas
movs
mov
and
jo
mov
sahf
nop
push
leave
gs
adc
aas
xor
jno
hlt
loop
nop
inc
arpl
rol
cli
das
cmp
xchg
and
gs
stc
sub
jecxz
xor
ffree
test
loop
sbb
sbb
inc
add
test
cmp
sar
stos
xchg
xchg
lea
pop
es
daa
xchg
push
mov
jo
(bad)
xor
mov
pop
jno
jg
aas
data16
inc
out
in
mov
jecxz
dec
cmp
cmp
inc
push
ret
mov
iret
sub
mov
repz
lods
push
push
sub
add
ins
fbstp
and
pop
pop
outs
ret
ret
cs
out
lods
pop
movs
jne
sub
in
xchg
hlt
sti
jp
mov
add
inc
loopne
adc
or
jnp
jl
xchg
add
fsubr
ret
cdq
pushf
pop
mov
cmp
cmp
inc
stos
test
mov
cmp
cmp
mov
push
mov
mov
cmps
mov
retf
push
mov
fcomp
and
addr16
mov
and
dec
out
je
movs
inc
aad
inc
inc
stos
(bad)
dec
mov
push
add
or
lea
cmps
enter
cmc
push
jle
icebp
mov
ret
xchg
jp
(bad)
stos
cmp
(bad)
jmp
sti
pop
or
aas
mov
pushf
add
adc
ja
mov
mov
iret
lds
scas
jle
frstor
add
cmps
inc
movs
shl
xchg
adc
lods
gs
stos
stc
mov
inc
mov
bound
pop
cld
cwde
retf
inc
clc
mov
push
fwait
inc
ins
ja
dec
mov
mov
and
out
cmp
stos
sbb
lock
xchg
push
mov
jne
fisttp
push
or
std
daa
(bad)
mov
lahf
mov
sub
mov
xor
int3
daa
jle
movs
mov
fsubr
mov
loope
add
push
mov
das
div
retf
inc
scas
dec
ins
jp
dec
cmp
add
loop
add
test
aas
mov
sbb
pushf
dec
cli
mov
pop
test
xor
push
pop
jo
lds
(bad)
push
push
sbb
or
fs
pushw
ror
mov
inc
aad
inc
fist
add
cmp
out
mov
inc
jge
mov
inc
(bad)
nop
pusha
mov
aam
pop
aaa
adc
lahf
push
std
and
ret
mov
bound
jbe
mov
push
daa
out
fidiv
shl
int3
mov
sub
in
mov
lods
inc
push
mov
inc
sbb
es
mov
pop
mov
xchg
pop
lahf
mov
int3
pop
into
add
pop
lahf
pop
jg
push
cmp
inc
xor
sar
call
xor
mov
cmp
scas
or
lods
mov
and
sahf
dec
lods
lods
data16
sub
push
js
pop
mov
lahf
shl
mov
inc
dec
or
loopne
inc
sahf
mov
aaa
inc
call
mov
xlat
mov
mov
cmp
mov
add
mov
fs
push
fld
out
cmp
fwait
or
xor
test
daa
cmps
ret
mov
adc
adc
and
pop
cmp
outs
repz
repz
mov
rcl
rcl
xor
and
lds
xor
mov
mov
(bad)
pop
ds
push
mov
dec
loopne
jmp
scas
out
push
popa
ins
sub
mov
push
xor
push
pop
and
jb
mov
mov
pusha
adc
jmp
push
xor
mov
adc
movs
adc
mov
xchg
rol
or
pop
sub
psllw
jne
mov
int3
jo
fcom
std
xor
dec
jge
inc
shr
jb
inc
xor
not
pushf
mov
mov
jl
mov
outs
daa
inc
enter
adc
ins
popa
xor
(bad)
cmp
mov
hlt
cmp
cmp
rol
jne
ret
sub
int
popa
ss
movs
pop
sbb
stc
ja
lock
and
sbb
inc
jg
adc
loop
scas
retf
xor
xlat
push
cmp
and
test
adc
test
lods
ss
pop
ror
cmp
dec
out
mov
cmp
ror
jo
dec
mov
jns
xor
mov
loop
jge
cmp
mov
repz
clc
movs
arpl
xchg
lds
stc
add
gs
and
push
test
xor
(bad)
cld
push
mov
and
adc
fxch
pop
adc
and
test
inc
push
push
fnsave
push
fiadd
(bad)
repz
sub
test
clc
(bad)
pop
push
sahf
das
rcr
sub
icebp
push
cdq
ss
rol
pop
test
jb
xor
add
idiv
std
sub
clc
shr
pushf
pop
ret
xchg
into
pop
cmc
shr
arpl
cmp
mov
inc
or
or
(bad)
lods
mov
jo
dec
rol
mul
loopne
mov
xor
mov
movs
dec
dec
ins
mov
ret
stos
out
ss
push
fwait
sti
adc
cmp
ins
out
xchg
pmaxsw
and
mov
mov
mov
xor
repnz
int
sahf
cmp
mov
inc
fisubr
mov
cmp
mov
xchg
add
pusha
and
sahf
mov
and
call
push
hlt
out
cwde
jmp
repnz
test
(bad)
fistp
aad
rcr
xchg
das
xor
sub
mov
cmp
stos
mov
fisttp
mov
loope
js
ss
adc
sbb
jmp
push
ret
out
push
js
dec
cmp
xor
jo
stos
add
push
xchg
(bad)
mul
dec
mov
jge
in
pusha
popf
fadd
in
imul
xor
clc
(bad)
xchg
mov
imul
inc
adc
repnz
and
(bad)
sahf
(bad)
mov
popf
gs
mov
jle
popf
xor
imul
push
pop
das
ret
iret
pusha
and
int
inc
mov
mov
outs
jo
loope
(bad)
push
stos
pop
outs
dec
je
(bad)
xlat
mov
repz
xor
mov
(bad)
push
or
stos
mov
mov
fcomp
fsubr
xchg
(bad)
cmps
in
add
leave
xchg
and
fidivr
push
fdiv
and
test
lods
sbb
mov
ficom
js
mov
inc
dec
outs
push
lea
sub
mov
mov
aad
mov
inc
xor
out
mov
loop
push
cmps
mov
fdiv
xchg
ins
sub
sub
jmp
movs
jmp
sbb
ror
cmp
(bad)
pop
lds
clc
push
fidivr
call
jbe
dec
js
adc
xor
pop
inc
mov
xchg
mov
sub
jecxz
or
leave
out
neg
pop
lock
push
jo
(bad)
mov
jle
mov
hlt
mov
addr16
push
or
xchg
repnz
add
fidiv
imul
inc
in
jbe
or
pop
pop
or
add
stos
mov
pop
xor
pop
rol
out
inc
into
pop
dec
gs
xor
xor
or
or
xor
shl
pop
std
sti
or
jo
mov
pusha
mov
xchg
xor
push
adc
in
push
retf
es
(bad)
and
cmp
adc
xchg
sbb
into
test
push
fstp
stc
inc
popa
push
mul
push
xchg
gs
sub
cs
iret
mov
mov
(bad)
(bad)
data16
jnp
push
xor
sbb
or
pop
mov
mov
dec
into
jmp
xchg
(bad)
pusha
retf
sbb
pop
movs
mov
mov
hlt
test
or
mov
and
jbe
push
xchg
add
sub
add
push
adc
ins
or
jl
jnp
or
mov
mov
aad
(bad)
rcr
ret
test
jbe
(bad)
sub
jmp
mov
test
pop
mov
ss
cmps
xchg
test
shl
xchg
xchg
jmp
movs
stc
pop
or
scas
dec
call
je
push
rol
movs
jle
pusha
push
pop
in
fadd
mov
or
in
fiadd
int3
xchg
aam
add
leave
xor
js
and
div
cmp
dec
xor
or
fist
cmp
pop
cwde
or
les
repz
enter
stc
xor
(bad)
pop
mov
add
clc
xchg
js
je
mov
ror
mov
in
je
sbb
stos
dec
jl
push
arpl
mov
test
add
cmps
das
xor
mov
movs
das
dec
mov
sub
push
pop
mov
adc
popf
mov
mov
adc
inc
sub
imul
ficomp
pop
fs
cli
stos
xor
(bad)
cdq
in
das
je
pop
iret
pop
fild
pop
stos
xor
push
xchg
adc
push
out
loop
push
inc
cmps
clc
add
mov
pop
jmp
or
pushf
jne
mov
stc
test
mov
loope
test
fcompp
(bad)
xor
and
dec
in
cwde
jecxz
mov
push
mov
mov
call
fprem
shr
sbb
push
aad
pop
fcomp
sahf
xchg
mov
popf
push
mov
cmps
push
xchg
and
call
pop
outs
addr16
ins
scas
mov
mov
aaa
adc
(bad)
dec
pop
pop
mov
jecxz
pop
jg
inc
dec
adc
imul
popf
cmp
xchg
test
out
or
fist
and
jp
(bad)
mul
xor
mov
imul
ja
dec
xchg
lds
inc
jnp
push
hlt
sti
(bad)
jns
mov
sub
in
pop
outs
int
popf
mov
es
mov
pop
pop
push
movs
clc
loopne
scas
pop
stos
ret
mov
mov
sub
push
jnp
aas
cwde
(bad)
out
ja
pop
je
push
popa
xor
movs
pop
retf
cmp
cmp
xor
fmul
cdq
mov
mov
add
cmps
cmps
push
mov
push
jbe
push
xor
aad
jnp
adc
or
adc
ss
pop
add
sti
addr16
aam
sbb
or
or
inc
movs
xchg
fs
sti
in
cmp
int3
je
mov
data16
cmp
into
jle
push
inc
shr
add
sti
sbb
fcomp
mov
pop
cwde
aam
loope
adc
sbb
add
fiadd
xor
add
push
adc
jg
jge
(bad)
cmc
xchg
loop
pop
or
hlt
jnp
stos
xor
add
xor
in
dec
and
xchg
jbe
scas
adc
push
out
xor
sti
sub
aas
popf
push
call
pop
sub
dec
test
shr
or
(bad)
push
mov
and
int
adc
das
xchg
jge
shl
fsubr
pop
cmp
mov
fwait
lock
add
out
clc
bound
shl
mov
fmul
add
imul
sub
jg
repnz
and
lds
shl
mov
loop
inc
sar
mov
fstp
test
call
in
nop
in
out
push
dec
es
mov
stos
adc
popf
sbb
jle
sti
(bad)
ret
xor
mov
jmp
fidivr
movs
(bad)
sub
(bad)
cwde
mov
pop
lds
aad
nop
mov
sub
call
shr
fsub
idiv
and
cmc
xchg
shl
lock
mov
test
xchg
ds
mov
jmp
hlt
in
fisub
cmps
or
hlt
stos
pop
fiadd
cmp
and
mov
xor
iret
add
dec
js
clc
mov
mov
dec
aaa
outs
cmp
out
pop
in
push
inc
mov
sbb
(bad)
mov
cdq
outs
leave
pop
in
jmp
push
jnp
movs
jmp
js
jmp
aaa
push
lahf
fst
and
cmp
sub
and
xchg
and
push
sbb
push
add
mov
add
mov
jbe
sub
sahf
fst
lea
inc
push
adc
jb
mov
sahf
mov
mov
jae
out
(bad)
adc
pop
sub
bound
push
mov
or
sub
xor
sbb
add
pop
pusha
push
iret
or
ins
idiv
mov
pop
adc
mov
mov
loop
inc
mov
stos
and
add
dec
cwde
mov
jmp
pop
push
sbb
loope
xchg
cmp
mov
call
mov
inc
int3
in
jl
clc
xchg
jmp
xchg
dec
daa
imul
fst
stc
or
xor
mov
cmp
mov
call
push
mov
rcl
add
xor
ss
jnp
add
or
sbb
dec
dec
jg
movs
xlat
arpl
cmp
mov
pop
lock
movs
inc
loopne
imul
fidiv
bndldx
rcr
jb
jnp
call
xor
push
movs
ret
push
sub
pop
jecxz
std
mov
inc
fmul
inc
ss
cmps
or
lods
test
xchg
movs
inc
aas
jb
mov
popf
adc
fwait
add
stos
lock
aaa
rol
xor
mov
xchg
dec
mov
sahf
daa
xor
idiv
inc
movs
retf
(bad)
in
pop
dec
xchg
adc
jns
inc
sub
popa
adc
xchg
les
rcl
push
imul
jle
add
retf
adc
xchg
setnp
push
cmp
ins
movs
xor
ss
shr
loopne
xor
and
dec
cmps
lea
ja
xor
cmp
push
pop
pop
addr16
mov
pop
test
fcomp
sub
jg
lahf
mov
leave
pusha
cmp
mov
pop
cmp
fnsave
push
or
cmovno
aaa
push
or
xchg
pop
ins
xchg
push
pop
inc
ds
dec
je
std
xor
mov
bound
mov
addr16
add
icebp
fstp
pop
pop
xchg
sbb
test
inc
jmp
jp
pop
enter
push
xchg
aam
fwait
arpl
scas
retf
ins
lods
int3
ror
in
mov
gs
in
mov
pop
mov
sub
imul
sub
mov
data16
sbb
test
dec
sub
popa
mov
jbe
or
sub
jns
leave
in
adc
fldz
mul
cmc
sub
xor
mov
mov
frstor
arpl
xor
mov
dec
dec
push
idiv
or
sbb
and
shl
ja
mov
push
pop
jb
xchg
xchg
retf
mov
aam
idiv
outs
inc
inc
test
iret
popf
cmps
push
cld
aam
and
in
jo
and
(bad)
repnz
clc
push
adc
cs
inc
cmp
and
ja
jns
sbb
shl
icebp
fdivr
movs
add
adc
mov
xchg
push
cmc
arpl
(bad)
sub
add
movs
aaa
mov
bound
mov
push
jecxz
cmc
(bad)
xor
movs
fstp
jmp
jg
(bad)
shl
lahf
mov
push
cmps
xor
jp
shl
repz
rcr
sahf
push
mov
fistp
pop
push
mov
ror
shl
scas
mov
dec
imul
in
leave
inc
out
ror
test
aad
mov
imul
or
aad
inc
mov
aad
xor
xor
mov
jns
xchg
cmp
ret
daa
pop
test
scas
and
inc
cli
and
push
push
jb
push
jge
bound
repz
mov
mov
jl
push
stc
bound
fwait
or
fwait
adc
(bad)
fisub
xor
rol
push
inc
mov
sub
stos
xor
dec
xchg
es
xor
ss
jge
bound
mov
inc
stos
cmc
pop
jae
push
(bad)
sahf
pop
jg
mov
xlat
dec
icebp
mov
ficomp
pop
mov
repz
bound
jp
dec
outs
pop
sbb
inc
mov
ja
ins
sbb
sub
pop
jne
sti
pop
sbb
jmp
mov
gs
jno
cld
pop
mov
fcmovu
xor
in
sub
push
ins
mov
mov
fcmovnbe
jo
popa
sub
iret
idiv
scas
test
sbb
gs
add
scas
adc
jnp
push
in
loope
inc
and
mov
push
out
mov
lods
cmp
ss
add
mov
cmc
(bad)
jno
jle
mov
xchg
(bad)
mov
cmp
scas
sub
inc
add
dec
shr
jb
sbb
xor
jmp
sub
pop
shr
sbb
mov
(bad)
or
(bad)
cmp
xor
lea
imul
arpl
rol
cmps
xor
ds
hlt
lock
inc
adc
sbb
daa
pop
div
xchg
jle
in
add
sbb
das
aam
shl
clc
xor
xor
add
rcl
mov
pop
(bad)
out
pop
dec
fstp
inc
mov
inc
push
sbb
ss
ror
sub
sub
lods
retf
adc
add
test
out
and
xlat
stc
stos
jp
fst
(bad)
imul
sbb
mov
nop
xchg
out
add
or
jecxz
loopne
dec
ss
push
mov
sahf
cmc
movs
daa
xchg
mov
imul
cmp
and
int
sbb
or
cmps
jnp
pushf
loopne
(bad)
xchg
pop
xchg
jge
aad
inc
je
mov
rcr
ss
cmp
daa
xor
daa
pop
xchg
and
xor
push
mov
loop
xor
and
add
mov
popa
lods
sahf
mov
cmps
pop
add
test
js
rcl
lea
xchg
inc
xor
adc
stos
out
stc
imul
jl
mov
mov
fdivr
dec
jmp
mov
xchg
push
cmp
or
outs
rol
sub
push
movs
popa
mov
hlt
sbb
popf
pop
icebp
jbe
aam
cmps
cmp
arpl
mov
jmp
dec
cmp
jne
mov
leave
retf
sbb
int3
repz
xor
mov
dec
test
push
ret
mov
push
inc
lds
xchg
or
rcr
jae
test
pop
fnsave
push
in
cmp
loop
daa
rcr
lea
push
pusha
dec
ret
mov
mov
mov
cwde
cdq
xor
add
mov
sub
mov
in
aad
sub
sub
ins
shl
cmp
jg
mov
cmp
data16
sbb
(bad)
adc
jp
xor
lahf
jns
add
ds
mov
iret
pop
test
and
out
adc
and
mov
or
sbb
clc
outs
stos
int
xchg
addr16
push
push
dec
mov
cmp
outs
in
(bad)
inc
sub
pop
ja
push
mov
arpl
mov
fwait
mov
sbb
sub
je
sub
adc
sar
cmp
push
addr16
xlat
sbb
outs
es
ret
in
inc
and
mov
bound
push
shl
add
sub
imul
mov
sbb
jl
or
mov
cld
dec
jne
push
out
mov
movs
jae
fs
retf
lods
xor
cmps
jle
push
add
mov
outs
pop
lahf
xchg
jg
mov
or
jae
mov
push
or
inc
rcr
dec
addr16
adc
popa
push
add
ror
arpl
pop
jae
ins
xchg
imul
push
add
xchg
fst
jge
mov
pop
ins
dec
outs
adc
xor
jle
adc
mov
cmps
push
hlt
sbb
mov
and
mov
jae
pop
inc
gs
sbb
aam
(bad)
(bad)
cmp
stc
popf
add
push
add
cdq
into
aad
add
cmps
ret
test
cmps
mov
pop
fidiv
ret
into
sub
pop
pop
jmp
xchg
gs
repz
imul
sbb
xor
cmps
shr
sbb
mov
out
into
mov
clc
mov
xor
test
jle
xor
adc
mov
xchg
ds
mov
retf
das
cli
mov
in
cld
cmovs
fwait
daa
pop
out
push
push
or
fimul
inc
lahf
jp
pop
add
imul
sub
out
mov
out
and
dec
add
cdq
mov
(bad)
(bad)
mov
frstor
aad
jmp
(bad)
mov
push
fisttp
jmp
loop
mov
dec
repnz
jle
push
xorps
aaa
rcr
push
imul
scas
fdiv
stc
mov
pop
addr16
adc
(bad)
sub
fcom
dec
push
(bad)
push
sbb
es
fld
sub
xchg
bound
imul
sub
and
mov
jbe
jle
jo
or
push
mov
adc
(bad)
adc
ret
xchg
jg
adc
ss
call
imul
pushf
push
bound
push
movd
mov
cs
sub
cmp
fs
and
sub
cld
push
mov
push
pop
ss
xor
mov
clc
sti
movs
out
(bad)
jmp
clc
mov
mov
mov
popa
cmp
cmp
inc
and
mov
aas
(bad)
push
(bad)
js
inc
mov
aam
mov
lods
mov
mov
sbb
jo
scas
mov
push
cmp
sub
push
mov
ret
jl
add
sbb
and
sti
inc
pop
add
dec
imul
cmps
mov
adc
stos
fwait
ins
fmul
mov
int3
sti
into
jmp
mov
daa
mov
(bad)
sub
mov
fdivr
adc
stc
mov
retf
jne
repz
cmp
jns
inc
mov
xchg
nop
repz
or
mov
test
(bad)
inc
dec
cmp
adc
mov
imul
and
pop
sbb
inc
mov
mov
and
add
js
xchg
pop
cmp
movs
stc
jno
push
dec
adc
xor
scas
mov
test
bound
adc
mov
ret
pop
rol
sub
loopne
ins
rcl
dec
inc
xor
xor
add
pop
aas
pop
ret
mov
and
jno
jns
sbb
mov
movs
ss
and
mov
xchg
add
cld
int3
fadd
push
ins
and
(bad)
sub
out
stos
enter
mov
ss
in
sub
xchg
sub
mov
in
mov
mov
dec
pushf
xor
or
and
loop
popf
jo
lds
add
movs
ss
mov
inc
in
push
in
movs
dec
retf
outs
lock
push
push
push
adc
loopne
ds
pushf
in
mov
mov
(bad)
push
or
in
jle
leave
imul
cmp
fisub
out
add
movs
mov
inc
xchg
and
cmc
scas
push
push
out
iret
mov
lods
iret
xchg
jmp
mov
data16
retf
ret
sbb
ret
jnp
add
xchg
aas
out
rcr
aaa
lahf
lods
mov
mov
xchg
jne
loopne
xchg
fstp
inc
inc
xor
mov
push
jl
mov
jbe
scas
xor
scas
inc
es
or
jae
push
and
mov
pusha
sub
cmps
leave
jmp
aas
jno
lea
dec
mov
add
adc
movs
fisubr
cdq
mov
sub
or
add
sub
or
test
ins
sub
pop
scas
lds
out
mov
sbb
in
cdq
push
pop
jne
aad
and
xor
aaa
pop
xor
and
lock
jne
(bad)
and
xchg
lods
pop
popa
pusha
or
nop
cmp
jnp
aam
sbb
test
setg
inc
dec
int3
mov
inc
sub
cmps
ins
jae
xchg
sub
jg
pop
or
cmp
mov
dec
sbb
or
or
cdq
stos
test
or
sub
sbb
clc
mov
aaa
xchg
les
push
cwde
xor
loope
jbe
xbegin
or
sub
and
sbb
enter
adc
in
sbb
(bad)
and
pop
pop
iret
add
jg
shl
sbb
inc
int
and
jns
pop
pop
pop
fucom
fs
mov
sbb
pop
dec
add
es
arpl
imul
pushf
mov
xor
adc
cmps
sahf
stc
inc
xlat
pop
int3
pop
leave
fs
gs
fstp
sbb
data16
test
das
add
or
outs
adc
sbb
mov
ds
or
and
(bad)
outs
pop
ss
pop
int3
pusha
cwde
in
mov
gs
mov
sbb
imul
rol
popf
test
push
mov
icebp
or
aaa
pop
es
xchg
jae
and
add
mov
jl
and
cld
(bad)
jg
mov
pop
or
xor
or
repz
cmps
cli
add
(bad)
mov
jbe
jbe
cmps
xchg
sbb
or
sbb
lods
adc
mov
inc
sub
xchg
pop
and
test
or
and
mov
shl
cmp
cmp
jae
div
gs
mov
add
or
xor
(bad)
gs
cdq
leave
inc
xor
jno
outs
jecxz
push
and
cmp
ins
xor
xor
adc
jg
pusha
xchg
mov
imul
int
dec
jge
popa
and
xor
scas
inc
dec
cdq
lahf
repnz
sub
cmp
jle
movs
mov
jnp
clc
lods
jle
scas
mov
jmp
mov
push
outs
xchg
fs
mov
scas
push
jp
adc
push
(bad)
stos
in
les
push
or
xchg
jle
ins
ds
fcom
mov
adc
nop
jmp
mov
sar
adc
fdiv
sub
movs
sub
xchg
ins
xor
scas
in
pop
imul
(bad)
jns
stc
xchg
(bad)
sti
pusha
pusha
and
cmp
fs
cmc
dec
mov
dec
in
adc
xor
pop
jnp
aam
push
popa
in
mov
or
jmp
add
in
push
nop
test
inc
out
jae
rcl
inc
mov
dec
ds
mov
fmul
xlat
xchg
pusha
xchg
sbb
into
das
xor
jmp
pop
outs
mov
pop
jg
lahf
adc
pop
cmp
outs
push
xor
adc
xchg
daa
aad
ret
mov
nop
cmp
cmp
out
mov
outs
mov
mov
lahf
lahf
jno
enter
(bad)
in
arpl
cmp
outs
jne
and
rcr
mov
data16
mov
sbb
aaa
push
jp
sbb
mov
cmp
inc
sahf
adc
retf
jo
ret
xchg
sbb
ds
or
mov
aaa
into
div
or
lods
jg
dec
mov
sub
ror
xchg
sahf
mov
cdq
daa
fmul
fist
adc
mov
push
and
xchg
dec
mov
mov
inc
adc
and
into
stos
mov
sub
stos
int
or
fs
lahf
adc
data16
or
adc
xchg
ret
jp
jne
inc
lods
push
(bad)
sar
and
push
adc
adc
mov
dec
inc
mov
call
jecxz
xchg
je
xor
push
mov
out
xor
in
or
jnp
lds
loopne
jecxz
add
(bad)
outs
shl
cmp
rcr
(bad)
xor
enter
int
push
stc
mov
sub
cmp
repz
mov
arpl
xor
xchg
pop
dec
mov
mov
push
(bad)
sbb
and
sar
inc
daa
inc
xchg
add
adc
dec
and
jns
lock
dec
ja
push
scas
arpl
cs
mov
addr16
and
imul
xor
cmp
ss
mov
dec
mov
enter
jnp
ss
jmp
jbe
dec
push
and
xchg
loope
xchg
xchg
push
xchg
sbb
loope
inc
mov
cmp
or
mov
xchg
mov
push
icebp
aaa
ror
xchg
mov
jo
push
call
inc
cwde
out
add
jle
dec
xchg
push
mov
rcr
aad
ret
movs
nop
stc
jl
add
out
push
popf
mov
aam
repnz
in
mov
pusha
xor
mov
push
mov
ret
data16
xchg
xor
dec
xor
cmps
aaa
cwde
imul
movs
add
retf
enter
shr
je
aaa
hlt
mov
sub
into
add
and
add
mov
imul
adc
jno
xor
gs
mov
data16
and
pop
fdivr
call
lods
cmc
pop
pusha
mov
or
test
ret
cld
jae
in
lahf
scas
into
les
ds
arpl
push
dec
inc
popa
and
pop
std
movs
cwde
mov
xor
imul
in
cmps
bound
pusha
(bad)
fidiv
mov
addr16
jb
inc
mov
and
xor
pop
iret
cmp
mov
sub
ja
(bad)
ins
push
bound
push
ds
(bad)
stc
add
dec
inc
jnp
push
xchg
sar
sbb
push
push
pop
cmps
ret
outs
dec
lods
push
in
pop
mov
jle
sub
xchg
jo
and
sub
or
movs
pusha
cmp
mov
pop
(bad)
arpl
xor
stc
jp
push
adc
(bad)
pop
rcr
mov
in
sbb
add
push
push
loope
fisttp
std
jbe
les
imul
mov
sbb
inc
sub
mov
push
jp
dec
mov
sbb
push
lock
lahf
les
or
push
sbb
sahf
and
std
(bad)
mov
mov
repz
sbb
mov
test
out
adc
ret
dec
pop
stos
jge
adc
cmp
loope
stos
fs
hlt
mov
mov
in
lods
bound
and
xchg
fs
fmul
(bad)
aad
mov
jecxz
inc
jbe
fsubr
xchg
xor
(bad)
dec
enter
(bad)
xor
mov
test
mov
xor
popf
and
xchg
xor
adc
aad
aam
mov
xor
es
sbb
cmps
in
lahf
inc
lahf
mov
and
iret
mov
cs
mov
lds
jecxz
add
xchg
push
hlt
mov
or
dec
loopne
in
cmps
fadd
jbe
int
sub
pop
and
jp
jb
ret
mov
je
outs
ret
cmps
jg
ja
jo
neg
add
sbb
loopne
add
out
faddp
nop
mov
aam
jbe
mov
cmp
fisub
imul
(bad)
dec
or
push
psllw
out
inc
dec
icebp
inc
movd
sub
or
aam
es
daa
add
sbb
mov
cmp
pop
inc
or
lods
scas
dec
aam
xor
fld
rcl
cmp
xor
ins
scas
cmps
jnp
or
pop
in
popa
out
xchg
and
sbb
add
cmp
xchg
dec
js
cwde
jle
out
mov
out
sub
sub
pop
and
bswap
pop
test
(bad)
xor
pop
xor
out
ret
cmp
loope
lods
sub
xor
or
test
jns
add
dec
js
test
jno
jmp
enter
or
out
gs
pop
bound
sti
mov
jp
mov
push
cmp
add
mov
fbld
cdq
adc
cmp
sub
sub
ins
pop
and
mov
pop
mov
xchg
mov
xor
xchg
lock
nop
mov
je
pushf
(bad)
mov
mov
push
je
push
jp
mov
adc
sahf
mov
mov
fsubr
pop
jae
mov
mov
sahf
inc
cli
jg
cs
stos
sbb
repnz
(bad)
push
adc
add
bound
enter
cs
das
(bad)
sub
add
sbb
and
rol
scas
test
retf
es
jge
sbb
and
mov
mov
popa
cwde
(bad)
inc
rcl
cmp
cmp
test
ins
fnstsw
call
call
scas
dec
xor
mov
mov
mov
mov
int
rol
inc
cmps
xor
push
mov
sbb
and
shr
ret
pop
imul
mov
inc
adc
stos
add
push
inc
xchg
(bad)
test
mov
cmp
mov
sbb
ror
sbb
push
pop
and
das
das
jae
fldcw
in
cmp
and
ss
in
ret
mov
mov
(bad)
rcl
lods
lods
lahf
cmp
ds
fs
fs
(bad)
mov
xchg
or
xchg
add
mov
xchg
repnz
pop
and
cmp
or
xor
xchg
pushf
punpckhwd
mov
or
sbb
repz
adc
sub
push
and
inc
xchg
and
sub
sbb
shl
xchg
jl
daa
movs
xor
ret
dec
pop
add
bound
or
lahf
and
mov
repnz
into
add
out
jge
mov
repz
lods
and
adc
jno
xchg
daa
(bad)
fiadd
ins
std
mov
xchg
outs
xchg
(bad)
(bad)
pusha
pusha
loope
mov
sbb
and
clc
leave
stos
jmp
inc
jp
jb
js
mov
xor
shl
aam
cmc
push
les
fistp
pusha
or
js
neg
sub
test
add
or
sahf
fcmovu
loopne
les
push
dec
rol
push
(bad)
jecxz
push
mov
push
mov
mov
movs
push
cmp
pop
pop
xchg
push
push
xor
xor
(bad)
mov
push
mov
pop
mov
movs
sub
mov
movs
jmp
shl
imul
in
scas
sub
dec
scas
retf
cmps
hlt
scas
jmp
popf
lds
xor
fcom
popf
or
sub
cmp
xchg
mov
mov
outs
pusha
mov
adc
movups
adc
jne
add
xor
jecxz
jmp
out
call
inc
adc
dec
xchg
ss
vsqrtpd
fist
sub
shr
jns
xor
cmp
movs
pop
push
(bad)
mov
dec
movs
jge
(bad)
mov
sub
jle
xor
aad
fdivr
in
cmc
outs
jno
cs
xlat
xchg
(bad)
in
pusha
adc
(bad)
mov
push
mov
add
mov
rol
or
xor
movs
pusha
imul
or
sub
cmp
push
add
scas
mov
or
std
inc
shr
or
(bad)
xchg
inc
mov
scas
dec
mov
dec
lahf
popf
aas
imul
js
sbb
ss
scas
pop
pop
jnp
(bad)
lahf
loopne
and
in
dec
pop
xchg
jg
imul
jae
mov
(bad)
jns
fdivr
xor
pop
add
add
retf
jns
scas
mov
xchg
cmp
bound
mov
mov
fcomp
stos
adc
ins
jg
repnz
cli
add
mov
mov
rcl
call
dec
cmp
ins
popf
mov
dec
(bad)
ffree
rol
add
push
cmps
dec
adc
jp
dec
gs
es
retf
jne
js
loopne
scas
(bad)
in
stos
cvtps2pd
popa
mov
pushf
enter
inc
es
xchg
jge
pop
ror
add
cmp
pop
loope
dec
into
xor
jge
rcl
add
jmp
mov
fbld
dec
and
jmp
add
pop
mov
sub
out
aas
pop
movs
in
outs
push
cmps
mov
aam
pop
mov
push
aas
jbe
addr16
lahf
adc
ficomp
mov
jns
jg
aad
mov
xchg
shr
pop
cmp
mov
fsubr
popf
or
daa
sub
sub
dec
sti
dec
lds
daa
out
int
lods
imul
int
mov
ss
add
push
daa
mov
stos
in
imul
and
inc
stc
pop
mov
bound
mov
aas
pop
loope
(bad)
idiv
out
dec
sbb
cmps
pusha
imul
sub
lods
lds
inc
mov
inc
sub
xchg
pop
lods
shr
(bad)
add
outs
push
in
inc
or
in
adc
mov
mov
jmp
mov
sub
(bad)
imul
jmp
or
dec
jb
fwait
(bad)
(bad)
data16
sbb
cmp
retf
(bad)
cmc
fdiv
call
mov
pusha
adc
pop
movs
sbb
jns
aaa
adc
scas
jmp
adc
test
rol
loope
xchg
shr
fistp
xor
mov
mov
mov
lock
sti
clc
cmp
call
mov
mov
cdq
push
out
icebp
dec
mov
mov
lea
mov
gs
or
into
outs
mov
inc
call
cmp
into
cdq
add
jbe
retf
xlat
or
ins
or
sub
loope
fisttp
std
inc
adc
cmp
sbb
ja
jecxz
cmp
scas
retf
(bad)
leave
les
mov
and
pop
push
fist
cdq
and
mul
stos
fmul
mov
arpl
int3
popf
pop
inc
mov
add
jns
sbb
loop
mov
or
aas
(bad)
fdivr
xchg
in
inc
pop
(bad)
lock
imul
mov
jne
mov
in
cwde
jno
add
mov
jl
adc
xlat
push
movs
dec
push
icebp
shl
int
jecxz
mov
mov
pop
inc
hlt
pop
adc
mov
or
(bad)
in
aam
(bad)
cs
outs
xchg
cld
pop
xor
cs
xchg
xchg
sbb
js
mov
jp
and
or
aaa
ins
lock
dec
cmp
cmp
jecxz
jmp
repz
mov
je
nop
test
push
ds
loope
push
jle
addr16
push
sbb
imul
add
mov
outs
xor
into
dec
add
shr
pop
mov
imul
loopne
add
test
pop
mov
(bad)
cmp
adc
mov
push
sbb
test
cmp
fstp
popa
pop
hlt
pop
pushf
xchg
mov
cs
or
shr
repz
fdivr
(bad)
ins
push
cwde
inc
test
movs
(bad)
dec
mov
adc
clc
or
mov
stos
nop
jbe
cwde
cmc
(bad)
in
scas
outs
std
push
xlat
rcl
pop
pop
icebp
call
(bad)
pop
or
loopne
repz
sub
popf
cmp
push
xchg
fdivr
xor
push
xchg
adc
xor
sbb
pop
loop
scas
arpl
sub
xor
xlat
push
cmps
in
sub
adc
mov
push
scas
inc
popa
fs
mov
jae
ror
imul
in
movs
xchg
jl
cmps
lea
mov
ins
cmps
cmp
pop
mov
cmps
jecxz
shl
mov
fstp
mov
dec
adc
dec
pop
into
(bad)
dec
lea
xchg
push
dec
ficomp
sahf
jno
sar
in
push
mul
out
std
call
out
jbe
test
test
leave
lods
movs
aaa
pop
pusha
add
cmps
call
aaa
cmp
shr
xor
sbb
sub
les
loop
fwait
in
adc
pop
inc
mov
add
imul
push
ficom
scas
pop
dec
test
inc
in
add
sbb
dec
rcl
push
call
out
ins
sbb
ss
mov
pusha
xchg
std
xor
mov
sbb
xchg
xlat
mov
xchg
or
out
mov
and
jmp
in
out
neg
cmp
lahf
arpl
retf
psubsb
call
lods
(bad)
hlt
pop
mov
mov
test
out
adc
pusha
mov
dec
(bad)
jns
push
nop
in
cld
je
sub
bound
mov
xchg
dec
sub
or
push
shr
into
cmovle
mov
or
and
ss
inc
fstp
dec
xchg
fs
movs
push
cmps
mov
fs
mov
or
call
loopne
nop
inc
das
fs
sbb
lods
xor
cwde
loopne
inc
and
idiv
push
lods
int
pushf
loop
sub
sub
or
call
sub
ret
repnz
dec
inc
xor
outs
aaa
mov
cmc
pop
leave
sub
jg
add
repnz
sti
clc
inc
inc
jge
push
and
mov
std
pop
retf
cld
sahf
test
inc
call
mov
sbb
pop
xchg
dec
mov
mov
(bad)
jp
jno
add
xchg
test
(bad)
mov
jno
pop
imul
in
mov
or
cmp
pop
je
test
push
jno
fldenv
sub
and
adc
sti
lahf
dec
jae
or
jne
sbb
neg
leave
sbb
aas
sti
out
jecxz
add
aas
adc
test
and
(bad)
xor
mov
jge
lea
fidiv
sub
lods
jae
sbb
or
jge
jecxz
add
jno
lds
add
mov
scas
sbb
jnp
movs
dec
push
leave
xchg
jg
push
mov
push
and
imul
and
add
call
mov
jmp
icebp
nop
ja
lds
mov
cld
mov
dec
cmps
repz
out
ret
cmovle
inc
jmp
xchg
adc
test
fistp
arpl
xchg
std
pusha
rcl
cmp
or
cmp
stc
cmp
and
ins
test
(bad)
gs
dec
jmp
xchg
add
push
push
enter
adc
jecxz
and
xor
cmps
cdq
test
jle
sub
outs
fisubr
and
inc
repnz
cs
pushf
fidivr
out
cmps
rcr
mov
imul
push
mov
cmp
push
cmp
inc
cmp
popf
cmc
add
nop
cld
vpshufhw
mov
arpl
mov
ss
(bad)
popf
jp
call
nop
stos
jbe
iret
pop
adc
jecxz
dec
(bad)
out
sti
cli
fs
hlt
(bad)
xchg
aad
pop
fsubr
(bad)
pop
pop
out
pop
(bad)
in
jge
aam
movs
inc
inc
out
lahf
add
sbb
jnp
test
xchg
fwait
mov
cmp
mov
in
mov
in
inc
sbb
sar
test
push
cmps
iret
xchg
mov
xlat
pop
lds
push
into
cmps
leave
jae
call
rcl
das
mov
ds
mov
push
fcmovnu
push
je
retf
les
lea
mov
push
push
jmp
nop
mov
ds
div
lods
mov
or
mov
push
mov
(bad)
fmul
hlt
lahf
jo
lock
cmp
mov
mov
fnstenv
sar
pop
(bad)
cdq
xor
push
mov
mov
(bad)
mov
mov
setne
xor
push
les
std
cmp
outs
ss
and
adc
inc
xor
xchg
mov
xlat
out
(bad)
lahf
or
into
inc
repz
mov
addr16
sti
out
loopne
daa
xchg
aas
sti
pop
jno
or
or
or
dec
dec
(bad)
into
jno
sbb
cli
mov
(bad)
push
out
xchg
sbb
mov
retf
inc
push
push
add
mov
loope
scas
mov
pop
scas
rcl
inc
push
mov
dec
inc
jecxz
sub
aam
or
mov
fwait
jge
pop
push
cmp
inc
out
imul
lahf
fcomp
cdq
mov
adc
xchg
(bad)
js
xchg
stos
push
std
sbb
ror
pop
fisubr
aam
mov
push
mov
bound
aam
mov
jp
nop
mov
outs
dec
lahf
inc
push
push
fcomp
pop
dec
cmp
jl
mov
fstp
jo
test
ds
sbb
or
(bad)
popa
enter
addps
jl
cmp
pop
push
jne
jo
add
or
add
pusha
xchg
aaa
add
lahf
movs
push
xchg
hlt
or
nop
stos
test
xchg
jmp
jle
loop
idiv
dec
lock
clc
nop
jmp
retf
inc
cmp
add
mov
xor
repz
hlt
aas
xchg
enter
fstp
push
inc
push
rcl
int3
jo
push
jp
pushf
push
(bad)
sti
inc
std
not
shl
ds
daa
cmp
jmp
ds
ins
and
call
pushf
out
sub
mov
jns
pushf
dec
in
std
leave
dec
dec
mov
push
dec
es
push
aaa
adc
xlat
cli
mov
test
rcl
hlt
dec
outs
mov
pop
pop
ds
jl
lea
pop
xor
(bad)
outs
jge
test
sbb
enter
xchg
xor
call
mov
and
push
mov
sub
call
ja
fcomp
add
comiss
mov
out
mov
pop
pop
scas
std
je
mov
cs
cmp
jle
adc
ins
scas
in
je
cmc
mul
xchg
movs
mov
sbb
xchg
pop
inc
je
dec
add
cmps
dec
pop
mov
mov
movs
add
sti
arpl
sbb
jge
xchg
sbb
xchg
stc
or
inc
data16
lea
xor
imul
jb
ror
das
les
jmp
aad
inc
aaa
outs
sbb
sahf
xlat
add
xchg
xchg
jb
int
scas
pop
loopne
scas
arpl
pop
test
cwde
test
mov
shr
ret
jns
cmp
inc
adc
mov
scas
mov
adc
call
jmp
pop
inc
push
lea
data16
frstor
fidiv
xchg
cmp
les
and
and
dec
mov
outs
fbstp
(bad)
mov
push
mov
pop
mov
and
das
or
xchg
adc
sub
mov
movs
add
add
out
mov
xchg
cld
dec
sbb
fnstsw
sub
inc
cmp
or
icebp
sahf
je
shr
and
imul
jle
(bad)
das
pop
jg
ja
xchg
adc
jle
ins
pop
inc
and
cmp
pop
jne
fst
cmp
add
push
movs
mov
push
push
push
sub
loop
inc
sbb
clc
inc
mov
cld
or
jnp
dec
xlat
pop
mov
sbb
out
adc
ret
push
pusha
lods
push
scas
les
xor
sbb
adc
aaa
push
dec
cmp
int
fldenv
inc
or
adc
out
sbb
fwait
(bad)
adc
pop
sbb
aam
xor
mov
adc
xor
add
adc
mov
ins
mov
out
pop
cmp
mov
jg
pop
bound
outs
adc
sar
pop
adc
(bad)
mov
dec
mov
sbb
inc
dec
in
xchg
icebp
sub
div
ror
in
hlt
jle
dec
xchg
ins
inc
or
into
lods
call
pop
bound
pop
sbb
push
jno
push
add
xchg
jne
xor
mov
mov
scas
push
clc
jae
arpl
sub
sbb
dec
add
je
sbb
adc
add
mov
test
or
or
je
jmp
cmps
push
outs
push
(bad)
addr16
push
rcr
fmul
mov
data16
dec
out
xchg
rol
retf
adc
xlat
dec
pop
cmp
inc
sub
mov
pop
shr
es
inc
outs
neg
inc
push
pop
push
into
repnz
cmps
jnp
adc
fisub
push
hlt
inc
(bad)
push
loope
cmp
out
push
das
sub
ret
cmc
out
cwde
cmp
in
cmc
sub
inc
outs
mov
ja
mov
ins
sti
jp
and
jns
push
nop
popa
push
stc
push
mov
jl
movs
cbw
pop
mov
mov
cmc
retf
test
cdq
adc
xchg
in
mov
in
call
sbb
pop
sbb
movs
lea
not
stos
aam
pop
jns
movs
test
add
test
bound
jle
mov
push
call
add
pop
pop
fs
lock
and
pop
dec
call
xchg
in
inc
jp
imul
setne
pushf
mov
dec
sbb
icebp
sbb
or
stc
mov
loope
rcr
mov
xchg
push
push
cmc
rcr
inc
scas
inc
out
adc
add
stos
stos
push
(bad)
xlat
inc
sub
adc
mov
cmp
in
(bad)
fadd
repz
mov
jbe
cmps
in
out
outs
jae
sub
test
test
clc
inc
outs
shl
aaa
and
into
add
push
pushf
pop
or
loop
add
stc
cmc
or
lods
aaa
das
sub
jae
sbb
mov
inc
das
jns
jo
mov
ja
(bad)
pop
push
dec
test
push
addr16
sub
test
fst
push
mov
stos
mov
mov
retf
jge
cs
or
iret
jg
adc
pop
jp
xor
sub
mov
adc
mov
sbb
add
mov
jle
cmps
xchg
aam
jns
sbb
jg
movs
inc
push
es
stc
mov
les
punpckhwd
loopne
fimul
pop
jbe
(bad)
loope
out
scas
ja
les
in
sub
jmp
mov
pop
mov
dec
mov
repnz
(bad)
add
jp
and
je
cdq
push
clc
stos
fmulp
pop
imul
dec
daa
test
jl
push
scas
(bad)
push
push
xchg
lock
rol
cdq
cmp
xchg
movs
xor
add
pop
pop
call
push
sub
sar
adc
call
test
addr16
sbb
add
outs
inc
daa
cmp
cmp
add
scas
out
adc
cmc
push
mov
call
imul
mov
pop
jb
ss
bound
fnsave
test
fdivr
in
adc
imul
addr16
xchg
jge
jbe
xchg
or
mov
call
pushw
cmps
repnz
inc
xchg
rcr
int
shl
mov
push
sbb
cmp
push
pop
pop
lds
fisub
add
ficomp
sbb
daa
jmp
mov
rol
xchg
lock
repz
cmc
xchg
call
cmps
sti
sbb
icebp
xor
cld
xchg
dec
mov
popf
pop
xor
bound
nop
hlt
inc
sbb
shl
jg
icebp
mov
sbb
jne
inc
add
das
fmul
adc
cvtdq2ps
neg
(bad)
push
inc
jecxz
mov
inc
mov
sub
mov
cmps
pop
aaa
jo
retf
ds
cmp
loope
push
mov
scas
jo
loopne
ss
(bad)
leave
adc
stc
fmul
setle
(bad)
ret
sub
add
dec
cmp
pop
sub
popf
push
xchg
pop
add
inc
(bad)
cmp
je
cmp
nop
adc
mov
xor
syscall
mov
inc
pop
mov
inc
lods
into
fisttp
xchg
sub
in
pop
mov
sub
xchg
retf
pop
jb
cmp
bnd
xchg
nop
pop
adc
cmps
sub
xchg
adc
sahf
mov
lods
lods
or
and
mov
repz
adc
push
imul
jecxz
in
pushf
mov
push
xchg
repz
push
jno
mov
push
inc
rol
retf
lods
cmps
je
ds
xor
in
mov
fs
ds
outs
(bad)
adc
jo
(bad)
sbb
jmp
cmp
push
sti
jmp
sahf
add
adc
nop
jbe
dec
add
dec
sub
repz
sub
mov
lds
std
xchg
(bad)
inc
pop
mov
mov
jae
test
into
outs
mov
fcom
loop
mov
cs
add
ror
repz
dec
out
or
push
ret
xor
fst
gs
loope
push
sar
(bad)
outs
xchg
push
jl
fs
in
inc
adc
push
xor
popf
arpl
sub
cmp
ror
sti
test
cmp
fcomp
(bad)
daa
or
push
xchg
stos
mov
xlat
push
sbb
dec
dec
and
call
cmps
jp
out
idiv
fbld
(bad)
mov
push
(bad)
xchg
and
push
popa
ror
mov
pop
fistp
jae
jmp
xor
xor
push
pusha
retf
stos
aaa
inc
sub
pusha
(bad)
push
(bad)
mov
int3
sub
mov
mov
push
(bad)
sbb
dec
fcmovnb
and
push
popf
mov
scas
mov
loop
out
mov
cmps
sub
fcomip
test
inc
jo
fwait
clc
cmc
lds
leave
ret
aaa
xchg
xor
in
mov
jne
jae
pop
pop
dec
jo
xchg
retf
call
repnz
cld
push
cmp
aas
outs
sbb
mov
rol
xchg
and
cmp
or
mov
int3
loope
lods
adc
mov
jns
fsubr
mov
fwait
mov
or
push
inc
xor
cmp
rcl
pop
xchg
add
ds
sbb
out
test
xchg
and
and
outs
push
(bad)
sbb
sbb
repz
repnz
test
jne
dec
inc
fimul
ret
jmp
test
test
hlt
cwde
add
retf
hlt
pop
sbb
call
dec
push
scas
mov
pusha
push
cmp
cmp
pop
aad
xchg
mov
mov
movs
call
jo
inc
retf
lds
jge
stos
in
sub
jl
fsub
and
daa
out
loop
and
(bad)
push
mov
mov
imul
and
mov
in
fimul
outs
push
inc
mov
iret
and
adc
js
mov
and
mov
popf
add
mov
cmp
mov
inc
push
cwde
jnp
push
cwde
mov
pop
and
sbb
test
sbb
cmp
loopne
inc
jecxz
pop
out
add
call
lods
adc
ret
jge
test
sbb
bound
xchg
sub
test
(bad)
ss
fs
cmp
mov
cmp
add
icebp
cmps
cwde
jle
out
fbstp
rol
aaa
clc
pop
ds
cmc
cmps
inc
(bad)
xchg
call
sbb
push
and
sbb
mov
pushf
mov
xor
fstp
xor
out
and
dec
out
mov
jle
add
cdq
cmp
test
js
(bad)
test
leave
ret
cs
in
xor
mov
add
and
pop
sti
mov
fdiv
pusha
and
lods
sub
or
(bad)
jp
mov
and
outs
adc
adc
loope
or
or
xlat
pop
jno
xor
xchg
outs
or
adc
fiadd
fsub
outs
mov
scas
adc
ss
cmp
scas
(bad)
cmc
sbb
pusha
sub
sub
rol
xor
outs
sahf
jmp
jae
rol
adc
not
test
xor
cmps
sub
(bad)
fsub
push
sub
out
aad
(bad)
iret
mov
xchg
gs
or
into
mov
pop
dec
adc
xchg
fnsave
pop
cmp
jbe
xor
push
sub
cmps
in
movs
aad
jo
(bad)
retf
jns
add
mov
jle
addr16
lds
(bad)
iret
and
pop
or
repnz
xchg
sbb
frstor
ja
fsub
cmp
push
test
outs
push
call
and
xchg
pop
clc
mov
pop
inc
lods
(bad)
jne
mov
cwde
add
in
and
and
leave
pushf
in
jle
push
ss
imul
inc
hlt
das
mov
push
sahf
test
js
neg
dec
lea
es
cmc
mov
loope
sbb
or
xchg
xor
mov
pushf
jge
xchg
fild
inc
xor
lea
or
xchg
inc
dec
inc
ret
shl
pusha
aaa
inc
push
xchg
mov
repnz
xor
pop
scas
mov
lods
cdq
push
out
arpl
push
adc
push
loopne
adc
pop
sbb
xor
nop
xor
inc
rcl
out
adc
mov
push
rol
jle
addr16
mov
test
icebp
jb
jnp
pop
xor
into
lahf
in
xchg
out
push
xchg
cdq
mov
retf
loop
inc
dec
cwde
inc
inc
imul
rcl
or
pop
daa
dec
popa
pop
xor
test
pop
cmp
jo
rcl
test
cdq
or
dec
in
push
xchg
ja
cmps
inc
retf
int3
imul
push
jmp
retf
jb
ja
xchg
repz
ret
adc
mov
jae
xchg
push
add
daa
stos
gs
int3
dec
mov
xchg
aad
xor
dec
out
or
invd
pop
xchg
jl
in
into
mov
imul
not
popf
add
sub
xor
pop
iret
icebp
mov
pop
adc
out
xchg
or
pusha
dec
test
xchg
inc
xchg
adc
add
cmovl
sub
addr16
sub
in
xor
mov
shr
aad
and
addr16
push
mov
addr16
jno
dec
scas
push
pop
mov
jae
pusha
imul
sub
dec
loope
ss
inc
adc
ds
neg
cmp
fadd
enter
adc
mov
inc
shl
adc
out
lods
inc
loop
fld
mov
ret
jo
stos
sub
scas
push
ret
stos
(bad)
xlat
mov
mov
mov
adc
sbb
int
inc
inc
adc
(bad)
mov
sbb
mov
lods
jmp
inc
repnz
pushf
test
jge
fcmovnbe
lock
fwait
lods
and
inc
stc
xor
aaa
pop
in
adc
push
cmp
cmps
xor
movs
jb
ror
ret
sbb
adc
dec
je
mov
jmp
stos
into
xor
test
es
or
int
into
xlat
and
pop
out
inc
and
and
dec
cmp
int
scas
fcom
stc
mov
sub
xchg
jnp
mov
add
test
push
shr
lock
adc
sbb
xor
and
xor
mov
stc
pop
cdq
xor
iret
arpl
test
ss
dec
repnz
push
pop
iret
ret
lds
mov
sbb
movs
xchg
lds
mov
mov
and
in
(bad)
adc
aam
dec
push
in
icebp
fistp
xchg
and
gs
aad
cmp
outs
inc
jmp
cmp
xchg
jae
(bad)
sub
das
ja
das
jmp
or
das
cmps
add
jbe
cli
out
jo
or
movs
fcmove
jecxz
dec
cld
pop
pop
mov
cmps
mov
addr16
and
push
mov
mov
icebp
push
enter
and
mov
out
test
adc
test
mov
dec
repz
clc
in
xchg
fstp
fdiv
in
lahf
lods
adc
ds
ins
out
push
cli
ds
adc
out
fs
xchg
xchg
mov
lds
ja
(bad)
and
dec
retf
push
(bad)
out
repz
movs
aad
ror
shl
sbb
nop
or
fild
(bad)
mov
stos
ss
(bad)
and
push
popf
mov
mov
in
adc
lods
rol
pushf
and
dec
cli
or
scas
test
mov
frstor
and
xchg
in
test
ror
js
cmp
jae
movs
int
in
xor
jmp
push
adc
test
push
dec
fwait
cmp
lock
mov
jo
mov
rcl
shl
and
call
into
and
add
xor
lahf
xchg
cmp
in
jp
push
cmp
pop
pop
ret
push
sub
aaa
jo
arpl
xchg
sub
jg
fadd
mov
stos
ret
outs
xchg
dec
add
mov
mov
dec
pop
hlt
popa
cli
stc
push
sub
lods
jo
iret
(bad)
and
inc
jne
push
add
sub
pop
mov
fucomi
out
cmp
sbb
cmp
adc
ficomp
push
sti
in
fsubr
cmp
mov
(bad)
das
sahf
cmp
gs
movs
sbb
xor
jmp
pop
add
out
fdiv
and
or
js
in
pop
daa
inc
hlt
mov
mov
add
add
into
dec
jbe
push
mov
mov
jae
mov
test
fistp
in
cmp
je
xchg
mov
mov
push
push
lahf
mov
mov
not
(bad)
int3
aas
push
frstor
rcl
sub
hlt
ins
dec
adc
enter
dec
xchg
add
push
xchg
mov
cmp
add
and
jnp
mov
dec
and
nop
xor
loop
push
pop
mov
or
lahf
mov
push
inc
test
outs
inc
scas
mov
dec
inc
ret
xor
inc
neg
xchg
int3
xchg
ret
fdivr
pop
sbb
pushf
scas
push
mov
(bad)
out
popa
pop
gs
ret
enter
xchg
xchg
mov
(bad)
inc
cmp
mov
cmps
js
jl
adc
(bad)
sbb
les
add
cmp
inc
xchg
dec
popa
add
add
(bad)
ins
mov
inc
ja
push
pop
(bad)
xor
test
bound
xor
test
pop
icebp
shl
fdiv
xor
ins
push
cmp
into
mov
push
mov
or
test
xchg
cmp
ror
mov
jmp
ja
(bad)
out
and
fdiv
xor
or
mov
xor
mov
call
retf
hlt
cmp
or
movs
cdq
mov
(bad)
fcomp
stc
xor
adc
mov
test
xor
sti
fstp
popa
push
mov
and
adc
xlat
pop
mov
stos
mov
loope
cmp
je
adc
pop
inc
ins
ror
adc
leave
push
jbe
cwde
mov
outs
adc
cmp
pop
push
test
mov
cmps
mov
xchg
leave
cdq
cs
cmp
jmp
(bad)
jb
sti
pusha
sub
sub
lds
jp
movs
fcmovnu
in
pop
pop
vmovupd
mov
mov
repz
arpl
fld
and
xor
cmp
pop
retf
aam
je
or
push
dec
pop
lods
mov
inc
inc
inc
sub
cmp
test
inc
mov
cwde
mov
mov
jbe
xor
outs
adc
push
bound
sub
test
sub
push
mov
cmps
push
mov
pop
jmp
push
mov
sar
sub
(bad)
mov
pop
push
les
dec
and
mov
inc
mov
loope
inc
pop
aaa
xor
shl
lock
fbld
retf
or
jno
clc
movs
sbb
jp
ja
pop
jns
mov
iret
aam
(bad)
outs
sub
cmp
pop
scas
mov
xor
sbb
test
sbb
out
mov
or
xchg
(bad)
jne
stos
rcl
jp
std
scas
out
pusha
mov
ins
dec
iret
xchg
in
jge
or
push
mov
jne
jnp
(bad)
fwait
ret
jl
sbb
push
mov
pushf
add
in
inc
xchg
add
out
repz
sub
fld
stc
enter
or
shr
add
in
inc
jns
add
sub
mov
ret
dec
adc
xchg
hlt
push
mov
daa
into
shr
jae
in
clc
aas
(bad)
adc
push
mov
sbb
mov
jmp
inc
mov
or
mov
pop
addr16
dec
mov
int
dec
jmp
les
cmp
xchg
outs
in
arpl
cmp
push
js
imul
dec
cld
mul
test
xor
dec
(bad)
mov
sub
inc
mov
mul
ret
data16
jno
dec
data16
push
cmp
jb
cmc
aam
mov
xchg
or
push
daa
aaa
hlt
pop
lock
jle
mov
add
adc
nop
xchg
mov
inc
sub
fcomp
in
(bad)
ja
adc
or
sahf
cmp
xchg
pusha
or
push
or
sub
cmp
ret
dec
test
adc
dec
jb
fisttp
mov
fidiv
fild
xchg
shr
jb
dec
fild
push
pop
movs
aaa
test
add
xchg
xchg
rcr
call
enter
jnp
es
into
out
mov
gs
vpshuflw
and
jno
es
ret
movs
xchg
shl
outs
push
test
push
xchg
adc
lods
mov
xchg
fwait
movs
mov
enter
and
fcomip
test
ret
aam
movs
out
and
mov
stos
add
repnz
lods
dec
pop
test
nop
retf
add
jo
lock
loope
sbb
push
scas
rol
and
mov
xchg
push
push
in
pop
rol
movs
cwde
sub
loopne
ds
or
pusha
mov
ret
fild
pop
out
arpl
into
pusha
inc
movs
mov
adc
loopne
dec
xlat
jb
sub
xlat
call
push
cmp
push
mov
ret
lock
push
and
add
outs
inc
pop
movs
test
push
sub
gs
pushf
sbb
dec
test
popf
fistp
movs
cld
das
outs
cmps
std
mov
iret
add
js
inc
fild
jno
rcr
ja
test
xchg
loope
mov
cmp
fimul
(bad)
fcomp
mov
in
fsub
inc
mov
fsubr
mov
push
pop
lds
pushf
mov
call
popa
call
imul
or
psubsw
dec
call
push
jnp
xchg
das
sbb
sbb
cld
fstp
inc
mov
pop
adc
adc
push
push
scas
test
dec
mov
cmc
xchg
aaa
lahf
push
repz
cmc
mov
mov
inc
inc
sar
sbb
ins
and
sub
cli
psubw
in
test
rol
test
fmul
fadd
data16
lahf
(bad)
test
rol
sub
pop
fnstenv
loope
aas
mov
ds
push
jns
jns
inc
adc
rcl
enter
dec
pushf
pop
pop
test
fldcw
iret
mov
sti
add
cld
xchg
xor
add
inc
vaddsubps
fisttp
mov
mov
int
sahf
arpl
scas
inc
mov
sti
and
jnp
mov
bound
popf
fwait
mov
mov
fdivr
aad
outs
sahf
pop
loope
fcomp
add
cld
cwde
inc
push
(bad)
xchg
(bad)
aas
add
ror
xor
dec
push
rcl
popa
fiadd
dec
adc
ins
dec
clc
adc
out
and
in
mov
popf
sahf
int3
and
test
sub
and
bound
adc
add
fld
xor
cwde
js
fwait
sub
into
push
pushf
xchg
(bad)
loop
popf
mov
add
out
lods
cwde
adc
out
mov
sub
xchg
fst
cmp
in
inc
ins
ret
jmp
jl
mov
mov
adc
and
repnz
and
cmps
pop
jmp
fmul
lds
idiv
loope
and
pop
in
pushf
out
inc
mov
pop
mov
push
loopne
jb
xor
dec
shr
jno
cmp
fsub
add
jmp
add
iret
push
cmp
push
cmp
or
xchg
lods
jle
loopne
jb
sbb
call
pop
movs
mov
in
aaa
mov
sbb
and
add
data16
lahf
ins
jnp
mov
call
or
pop
xor
hlt
jge
fcom
out
aad
or
xchg
fwait
test
xchg
(bad)
movs
ss
pop
fstp
inc
shl
(bad)
fbstp
dec
movs
add
aad
and
sahf
mov
stos
adc
ja
jns
cli
(bad)
int3
out
fdivr
mov
dec
fld
sub
dec
ret
pusha
or
retf
xchg
xchg
stos
push
enter
mov
and
(bad)
in
sub
rcl
inc
cmp
dec
loop
mov
jp
xor
push
xor
test
xor
out
lahf
(bad)
stos
fisub
inc
shl
inc
jns
loop
retf
or
jl
stos
imul
add
xor
mov
dec
pop
adc
out
movhlps
jmp
sbb
sub
push
dec
push
xor
scas
jecxz
sub
mov
test
fstp
pop
add
sub
dec
jns
adc
lods
scas
icebp
xchg
sbb
push
mov
push
push
and
arpl
je
xor
adc
jmp
adc
push
test
sub
jecxz
(bad)
adc
push
add
sti
dec
mov
adc
push
retf
xor
shl
jl
fcom
xchg
xchg
pop
std
push
ret
push
mov
stos
retf
shl
jnp
cmp
clc
rol
sbb
sbb
pushf
inc
xchg
pop
neg
addr16
repz
jne
mov
in
inc
and
sbb
jmp
lock
xor
mov
hlt
or
xchg
and
rol
mov
fist
clc
std
push
and
mov
sbb
fwait
mov
mov
xchg
and
jo
sub
movs
movs
xchg
fwait
scas
out
inc
jge
xchg
adc
push
jno
les
cmp
pop
cmp
inc
xchg
std
jle
imul
jmp
inc
xlat
sub
std
stos
xchg
int3
mov
std
xchg
mov
cmp
push
out
ret
and
add
into
dec
sbb
mov
hlt
fwait
(bad)
(bad)
fisub
aaa
mov
fmul
mov
sub
mov
cmc
mov
outs
stos
jno
fist
or
pop
popf
fst
popf
and
rcl
sbb
jmp
(bad)
leave
jge
or
xor
shl
data16
es
in
cmps
hlt
ins
int3
mov
pop
in
inc
loopne
mov
clc
mov
(bad)
std
stc
push
add
ret
mov
and
das
cmps
sahf
loope
gs
fst
(bad)
lods
mov
xchg
mov
xor
push
adc
out
push
sbb
jno
cmp
dec
shr
in
and
loopne
sbb
icebp
jecxz
fnclex
xchg
sbb
jne
or
xchg
dec
hlt
clc
cmps
jo
arpl
add
jp
test
sahf
(bad)
imul
sbb
out
xor
dec
mov
sbb
or
jb
fcmovnbe
in
call
xchg
add
cdq
movs
jmp
out
xor
ret
fdivp
inc
xor
dec
test
dec
fiadd
fs
pop
mov
sbb
lar
sbb
mov
xor
sbb
lea
push
xchg
sbb
out
cmp
daa
out
xchg
add
add
aam
cmp
rol
sbb
sbb
mov
and
adc
test
sbb
sbb
inc
fidivr
daa
in
idiv
fisubr
js
(bad)
icebp
out
test
push
add
and
mov
cs
in
adc
jmp
mov
add
inc
jnp
push
and
daa
mov
sub
or
rcr
iret
lock
cmp
pop
add
fild
dec
dec
and
ja
test
ror
and
popa
call
leave
xor
(bad)
mov
(bad)
inc
mov
shl
or
xchg
sub
cwde
les
jae
add
movs
shr
lds
jno
in
(bad)
icebp
cdq
sbb
sti
shr
add
shl
mov
repz
cld
pop
retf
pushf
sahf
and
jmp
push
int
ret
jle
mov
ds
std
push
adc
inc
inc
sub
cmp
jle
fadd
add
cmp
pushf
leave
(bad)
adc
ret
icebp
mov
imul
(bad)
aad
inc
pusha
retf
int
dec
sbb
or
imul
add
mov
mov
inc
mov
js
adc
ret
fldenv
jmp
das
aaa
mov
lahf
push
outs
fnsave
outs
(bad)
xlat
and
iret
adc
lods
sbb
arpl
push
mov
inc
xchg
push
int
or
mov
das
fwait
repz
(bad)
out
rcl
aaa
adc
cmp
and
js
or
aas
or
lock
fcmovnb
popf
in
je
shl
mov
dec
das
pop
stos
(bad)
pop
jb
ficom
scas
jecxz
ret
stos
pop
jns
jns
pop
jnp
pop
sub
jb
dec
ss
jp
adc
ja
xor
mov
xor
jns
test
lods
sbb
scas
mov
mov
mov
pop
int
call
xchg
arpl
inc
retf
addr16
fsubr
sbb
adc
lods
mov
lea
test
div
and
xor
adc
lea
arpl
test
loope
jl
xchg
mov
mov
xor
jns
and
hlt
cli
pop
ins
jmp
pop
mov
and
inc
and
in
jae
pop
sbb
les
or
retf
pop
enter
mov
js
(bad)
fstp
jmp
jg
pop
mov
mov
sbb
inc
retf
inc
(bad)
pop
ss
ret
out
shr
das
pmaddwd
fisubr
mov
mov
cmp
les
and
jo
mov
sub
sbb
pop
ror
ins
inc
sub
outs
shl
icebp
hlt
pop
xor
(bad)
dec
or
js
test
mov
mov
push
mov
inc
ret
mov
leave
push
cmp
pop
and
out
shl
mov
xor
add
cmps
out
div
pop
aam
mov
imul
push
mov
sbb
mov
push
mov
pop
cdq
pop
or
push
mov
aas
(bad)
push
cli
inc
in
sub
pop
sar
xor
or
ret
shl
cmp
xor
pop
cs
stos
adc
dec
cmc
cld
dec
inc
lahf
xchg
pop
dec
adc
and
icebp
out
cmp
inc
cmp
mov
add
popf
and
std
sar
test
das
and
test
retf
adc
cmp
dec
out
outs
ins
call
dec
push
int3
and
cmc
lahf
push
fcomp
pop
jo
rol
jp
add
shl
lahf
leave
data16
bound
nop
inc
xchg
xchg
inc
mov
mov
or
xchg
out
pop
xchg
int3
fnstcw
mov
mov
es
loop
fldenv
sbb
sbb
xlat
xchg
(bad)
imul
and
push
lea
xchg
lds
sbb
push
retf
sbb
push
bnd
sbb
jne
popa
jge
stos
or
test
mov
stos
dec
fcomp
cmp
cwde
push
add
outs
mov
inc
xchg
pop
mov
or
out
fwait
lods
pusha
repnz
push
and
lock
ficomp
hlt
ficom
(bad)
push
add
fisubr
xchg
mov
loope
js
lods
and
jne
adc
add
js
xchg
leave
(bad)
jns
push
imul
jmp
sbb
add
push
inc
hlt
xchg
xchg
mov
stos
lock
jp
clc
and
ss
aam
retf
xchg
mov
and
leave
das
cmp
in
sbb
fsub
mov
add
mov
movs
inc
push
adc
push
cmps
daa
in
es
cmp
nop
jmp
adc
sub
movs
int
dec
and
and
lahf
ins
sub
cs
push
mov
fidiv
adc
sbb
fwait
jb
std
lods
dec
mov
inc
sub
(bad)
pop
jmp
mov
sbb
jns
cmp
push
in
call
adc
mov
in
daa
add
mov
ret
std
mov
mov
aam
div
in
xor
stos
test
ror
out
push
add
cmp
stos
jns
jg
pop
out
dec
sub
lahf
sti
retf
cli
push
inc
or
xchg
js
fld
push
fimul
jne
lea
stos
imul
xchg
push
clc
or
jg
fwait
sbb
fst
mov
add
ins
and
aad
pop
out
test
cmp
push
cmc
(bad)
std
mov
cwde
xchg
jb
push
es
mov
dec
push
js
and
in
xchg
icebp
in
ins
jge
ficomp
sub
mov
ins
loope
add
push
aas
call
sbb
sbb
pop
retf
out
adc
and
push
pop
jne
fisub
dec
pop
xchg
and
push
je
adc
pop
retf
pop
cmps
lods
xchg
cdq
cmp
enter
lods
lahf
in
repnz
push
adc
in
jge
std
rcr
rol
inc
pop
inc
pop
(bad)
push
sbb
sbb
cmp
imul
imul
(bad)
int3
shl
out
ret
jo
pmaddwd
xchg
sbb
and
mov
ins
mov
ret
mov
into
daa
xchg
mov
pop
jmp
add
or
push
push
inc
ins
mov
pop
and
sti
push
mov
inc
pusha
movs
cmc
test
rcl
sbb
mov
(bad)
sar
sbb
mov
xchg
adc
cmp
mov
or
leave
sub
mov
int
inc
or
bound
repz
adc
jg
ret
out
and
stos
xchg
stos
lds
or
nop
push
push
mov
(bad)
arpl
cli
rcl
dec
addr16
mov
pop
jns
int
and
pop
mov
hlt
cmc
jbe
mov
add
jmp
dec
pop
dec
xor
cmp
out
clc
mov
or
pop
ds
push
loop
adc
dec
fiadd
arpl
push
mov
aad
ss
leave
adc
jb
test
dec
lock
add
sub
clc
push
sub
movs
jns
mov
je
mov
retf
sbb
inc
retf
aas
adc
cmps
xor
movs
ja
shr
xchg
push
in
adc
(bad)
stos
sahf
stc
outs
loopne
jecxz
pushf
cmps
pushf
mov
div
ror
imul
inc
cmp
jne
call
jno
out
add
inc
xor
push
mov
push
jg
loope
xor
mov
cmp
push
fcom
dec
(bad)
std
int
sbb
mov
jmp
mov
jno
mov
pop
repz
mov
mov
(bad)
mov
xor
cmp
cli
mov
dec
inc
into
nop
fidiv
sbb
mov
rcr
pushf
cmp
frstor
loopne
cmp
ret
or
xchg
pop
add
adc
stos
sub
jns
add
add
retf
mov
sub
mov
xor
popa
push
imul
xor
loop
mov
pusha
bound
inc
or
dec
inc
xor
aas
inc
adc
adc
mov
aas
push
data16
mov
pop
(bad)
in
and
add
pop
xchg
test
ins
mov
or
dec
xor
cmp
ss
push
scas
jmp
popa
leave
les
pop
cmp
mov
out
sbb
mov
sbb
jno
xchg
and
std
pop
xchg
push
mov
inc
shr
retf
das
mov
jle
push
mov
mov
ffreep
jmp
push
into
gs
(bad)
mov
mov
mov
or
aad
in
leave
mov
sub
movs
xchg
xor
adc
cmp
adc
clc
int
mov
fist
xor
mov
push
xor
mov
sbb
call
neg
test
push
movs
push
push
and
xchg
cmp
jb
std
inc
and
xchg
clc
adc
adc
mov
mov
push
jmp
fadd
jbe
repnz
pop
jmp
aaa
jmp
leave
addr16
(bad)
out
gs
or
lahf
lea
push
(bad)
push
je
push
push
sbb
lods
scas
loop
outs
push
mov
add
xchg
mov
sbb
in
je
pop
and
xor
mov
mov
cmp
cwde
(bad)
fisttp
lds
cmp
inc
mov
and
les
xchg
daa
xor
cmp
fsub
popf
xchg
add
push
adc
cs
aad
fisttp
and
sub
inc
clc
push
(bad)
mov
fidivr
dec
and
mov
sub
mov
aam
inc
add
shr
and
cs
push
mov
xchg
int
add
and
pop
inc
mov
mul
xor
push
or
mov
adc
pusha
add
and
adc
cmps
dec
lods
outs
or
mov
sub
xor
push
xor
jno
and
ror
bound
xchg
das
cs
fnstenv
adc
call
mov
inc
cmp
cli
add
(bad)
inc
(bad)
mov
adc
cmp
out
cmps
aad
gs
mov
xor
out
sub
mov
sbb
cmp
add
cwde
mov
int
dec
add
inc
neg
mov
out
sub
out
jle
sbb
cmp
xlat
pop
popa
inc
sbb
clc
mov
bound
imul
inc
leave
xchg
cwde
inc
aaa
sub
gs
stc
aas
add
jg
mov
ja
clc
and
cmps
(bad)
xchg
les
ret
pop
dec
sbb
stos
inc
cmp
mov
jle
xchg
mov
ins
bound
(bad)
cmp
mov
or
cmp
fild
sbb
rcr
out
lods
sbb
test
add
xchg
cs
add
fisttp
xor
ja
adc
outs
das
neg
stc
loop
mov
daa
add
jmp
or
rcr
jno
in
jl
fstp
or
jae
xlat
sub
ds
push
in
add
bound
cmp
je
call
fstp
push
mov
dec
imul
mov
jl
mov
dec
lods
sbb
add
inc
cmp
(bad)
stos
shr
xchg
jno
mov
mov
mov
icebp
or
dec
inc
cwde
adc
jnp
push
dec
iret
ja
retf
shl
push
je
daa
mov
in
adc
mov
cmp
mov
out
jmp
dec
dec
sbb
loop
sti
add
cmp
mov
pop
mov
aad
jp
jno
cmp
mov
push
push
push
and
mul
cld
imul
xor
jp
das
sub
mov
je
imul
les
shl
inc
pop
or
mov
and
pop
and
pop
lahf
push
imul
cld
test
stc
adc
push
push
cli
add
hlt
rcl
push
mov
sub
leave
in
xchg
dec
fild
gs
jmp
pop
dec
call
retf
int3
daa
gs
push
inc
sbb
pop
xchg
jmp
mov
mov
pop
inc
push
ret
lods
jmp
xchg
or
xchg
shr
push
rol
mov
das
ret
int
cmp
fstp
or
mov
pop
dec
into
or
mov
adc
mov
loop
test
in
jp
adc
xlat
cmp
stos
jecxz
add
test
cmp
push
xor
cmc
fstp
xor
cmp
movs
stc
(bad)
xor
cwde
mov
mov
push
fiadd
stos
pop
rcl
and
add
mov
aad
jmp
test
into
xlat
fcom
hlt
outs
xor
mov
(bad)
pop
push
pop
aaa
add
inc
sub
sbb
cs
sti
dec
xor
inc
dec
fcomp
dec
dec
scas
out
push
cs
fs
icebp
pop
xlat
cs
pop
mov
mov
push
mov
call
loope
cmp
mov
sub
jl
xchg
mov
mov
mov
xor
leave
ss
jbe
jle
and
xor
sub
add
outs
cmp
xchg
call
popa
shl
xlat
enter
ret
mov
mov
push
fsubr
in
and
sub
xchg
xor
mov
sub
xor
stos
test
xchg
fcomp
aad
das
fidivr
fbstp
test
out
and
cdq
jbe
inc
dec
cld
das
cmp
div
cmps
inc
jl
push
or
adc
pop
dec
jle
stos
das
icebp
inc
shl
jmp
addr16
mov
sti
cmp
mov
stc
xchg
in
rol
movs
sbb
xchg
sbb
imul
aam
cmc
aaa
pop
in
enter
jbe
not
cmps
sub
mov
pushf
or
mov
arpl
rol
sub
dec
or
mov
pop
test
ret
loope
jo
and
inc
outs
mov
xchg
aam
mov
inc
int
clc
mov
pop
pop
test
(bad)
(bad)
dec
test
out
fcom
mov
sub
imul
fisub
lea
mov
movs
test
sub
jge
cmp
fcom
enter
repnz
movs
mov
fucomi
cmp
(bad)
daa
ins
mov
(bad)
fist
shl
pop
mov
loope
aad
inc
push
or
jecxz
call
stc
add
mov
adc
xchg
inc
mov
iret
shl
xor
pop
mov
out
and
pop
pushf
mov
gs
mov
pop
mov
int
lock
in
dec
inc
call
or
outs
pop
mov
test
cwde
jb
jne
in
cmp
retf
test
mov
cdq
push
outs
je
pop
(bad)
pushf
pop
xor
mov
mov
push
jne
xchg
int
add
dec
cmp
(bad)
mov
mov
repz
push
leave
into
jl
sbb
out
rcl
mov
scas
idiv
sti
ins
xchg
movs
adc
cmp
jo
fs
adc
fcmove
pop
jae
in
mov
mov
inc
loop
dec
cmc
out
imul
out
aam
dec
mov
or
shl
lods
je
jl
test
mov
cs
stos
jbe
aad
mov
inc
lds
adc
(bad)
mov
sahf
cmc
xchg
mov
call
sub
bnd
lahf
pusha
enter
(bad)
(bad)
dec
pop
sbb
in
lods
fsub
cmp
clc
inc
popa
push
shl
sub
enter
loopne
shr
push
xchg
je
jg
xchg
mov
loopne
in
pop
sub
add
cwde
adc
lahf
jne
inc
adc
jecxz
pop
adc
xchg
mov
add
jg
imul
add
aad
out
sbb
inc
adc
xchg
jecxz
jne
xor
push
dec
out
mov
jp
ror
test
and
mov
mov
add
inc
jecxz
xor
mov
jge
push
fdivr
pop
cmp
sub
addr16
jmp
dec
adc
add
mov
cmp
mov
(bad)
fcomi
cli
shr
inc
sub
mov
and
mov
cmp
(bad)
(bad)
fidivr
and
out
mov
jl
mov
pop
imul
aas
xor
dec
addr16
dec
aaa
lock
and
pop
cmps
mov
mov
cli
in
fld
retf
outs
outs
mov
mov
xchg
pop
push
jbe
dec
(bad)
addr16
test
test
add
push
sbb
imul
or
push
leave
sbb
nop
mov
mov
jl
iret
sub
repnz
pushf
mov
sub
leave
xor
sub
in
stos
mov
jbe
in
pop
cmp
jno
cmc
in
icebp
js
cwde
das
and
ss
loope
rcl
cs
sub
mov
jbe
rol
lock
push
pop
jle
sub
sub
rol
test
jmp
or
pop
mov
ins
add
or
add
jb
xor
sub
in
sub
sbb
push
push
add
pop
in
int
mov
sub
cmp
pop
dec
(bad)
mov
lods
fdivr
mov
jl
jge
jns
push
das
dec
iret
add
mov
mov
adc
cmps
nop
cmp
call
fiadd
in
inc
cmp
and
xor
popf
ins
outs
pop
enter
add
js
aam
(bad)
jg
rol
cmc
retf
dec
sub
inc
inc
xor
clc
push
pop
mov
rcr
cmc
push
in
jb
pop
aam
das
push
sbb
dec
pop
dec
cmps
scas
cmp
stos
pop
or
lods
xchg
mov
mov
into
push
cmp
(bad)
or
loop
mov
or
jns
bound
shl
pop
cli
adc
ret
push
xor
retf
arpl
mov
rcl
mov
ror
add
add
sbb
inc
in
pushf
lods
jbe
shl
mov
and
stos
popa
mov
mov
cld
iret
movs
inc
clc
cmps
out
cli
outs
adc
mov
add
cs
pop
jnp
shr
not
cmps
(bad)
into
mov
stos
outs
jl
lods
xor
js
inc
(bad)
mov
test
lock
push
test
pop
fsub
out
push
or
repz
mov
push
aas
test
cwde
xor
cld
mov
or
adc
mov
fbld
cmp
jmp
mov
mov
pop
and
sbb
mov
ins
outs
mov
mov
faddp
lds
mov
push
call
xchg
fld
aam
in
test
xchg
adc
rcr
mov
xchg
mov
mov
repz
xor
sbb
(bad)
push
(bad)
jmp
mov
xchg
sti
scas
inc
mov
xor
dec
jl
adc
aad
adc
jno
arpl
mov
mov
jne
leave
icebp
cmp
pop
mov
sub
xor
pop
test
push
pop
pop
dec
push
mov
cmp
push
imul
pushf
pop
mov
fstp
xchg
add
retf
stos
sbb
cmp
mov
ds
pop
dec
loopne
out
dec
cmps
out
dec
xchg
xchg
sub
pop
add
hlt
push
xor
pop
rol
add
leave
aam
jmp
cmps
mov
lea
jnp
inc
mov
jne
pop
fwait
ss
pop
(bad)
sub
ror
fldcw
dec
mov
and
push
push
xchg
adc
or
and
jb
jmp
pop
aaa
dec
sar
leave
and
dec
scas
push
(bad)
push
sbb
xchg
pushf
sub
xchg
sti
or
xchg
aas
adc
pop
jle
pop
call
mov
cmp
mov
push
imul
inc
lock
or
adc
jb
mov
mov
ins
je
mov
jns
xor
adc
add
call
lss
repnz
mov
jmp
loopne
loop
jne
mov
arpl
inc
mov
popf
and
neg
push
sahf
mov
ins
add
mov
call
dec
out
ficomp
repz
mov
test
inc
and
xchg
ds
mov
cli
inc
call
pop
jb
pop
push
adc
xor
sub
(bad)
call
xor
nop
cld
xchg
call
pushf
in
pop
pop
dec
call
pop
inc
fs
push
fstp
(bad)
mov
imul
mov
fsub
sub
fist
rcr
mov
ret
mov
jg
push
xchg
cmp
mov
xor
jle
cmp
push
xor
push
or
ret
ss
add
or
xor
daa
jle
mov
adc
adc
ds
or
rcr
jmp
pop
movs
xchg
enter
fwait
ins
fistp
imul
aam
jns
scas
mov
(bad)
adc
adc
dec
ins
jmp
mov
cmp
add
mov
mov
mov
push
push
sbb
movs
inc
xor
dec
xor
ds
or
inc
sbb
push
imul
mov
sahf
test
leave
daa
jge
jmp
sub
(bad)
or
or
inc
dec
pop
sub
(bad)
(bad)
in
dec
jae
cld
popf
jg
push
pop
or
(bad)
cmp
push
je
not
cwde
add
xchg
gs
push
adc
jne
push
dec
inc
add
fnsave
xchg
and
dec
out
jmp
pop
ins
pop
mov
sub
jns
je
fisttp
sub
cwde
xchg
inc
and
mov
push
adc
(bad)
or
(bad)
mov
inc
je
adc
xchg
mov
add
sti
jb
in
cmp
mov
inc
rol
or
add
or
imul
sub
pop
add
enter
in
mov
mov
xchg
xchg
xchg
dec
dec
dec
jno
jb
leave
cli
mov
in
jg
mov
push
mov
cmp
imul
jge
int
jb
xor
dec
in
fwait
add
ror
lea
(bad)
call
int
lds
adc
inc
jmp
mov
cmp
retf
pushf
and
sar
in
cmp
arpl
mov
psllq
(bad)
mov
xor
daa
adc
gs
repnz
iret
adc
aaa
sbb
mov
sub
das
scas
jge
sbb
cwde
sub
dec
mov
add
push
add
adc
xor
hlt
adc
cmp
jnp
cmps
jmp
ror
ss
push
mov
ins
retf
pusha
adc
cmp
icebp
test
adc
dec
push
into
lods
xor
sub
out
jne
(bad)
fcomp
pusha
or
inc
xor
jnp
cli
(bad)
mov
add
repz
loopne
dec
fstp
mov
jge
adc
mov
cmc
cdq
loope
mov
hlt
lock
addr16
inc
ret
dec
mov
fld
mov
outs
sub
adc
xchg
jo
sti
mov
mov
out
push
(bad)
mov
and
xchg
hlt
les
mov
add
aas
dec
stos
shl
xchg
dec
push
inc
xchg
xchg
imul
dec
or
mov
adc
inc
les
mov
adc
stos
jb
scas
retf
fprem1
dec
rcr
cmps
mov
or
jle
mov
xor
and
iret
dec
push
loop
stc
les
or
xor
rcl
vcmppd
add
inc
out
and
test
push
xor
sahf
adc
data16
loopne
push
xchg
out
cli
popf
arpl
in
jb
sar
fimul
mov
dec
in
sbb
test
ja
adc
stc
(bad)
outs
(bad)
xlat
mov
fs
xchg
(bad)
cmp
cs
js
retf
out
and
push
sbb
push
mov
fadd
mov
fisttp
adc
sbb
dec
inc
cs
xchg
mov
mov
or
ret
pushf
pop
popa
push
jns
retf
fadd
ins
cmps
pop
add
pinsrw
mov
daa
mov
aas
fld
xor
push
js
loopne
xchg
mov
push
mov
fnstcw
adc
xchg
fs
popf
fsubr
add
das
inc
pop
jg
jge
ins
mov
push
cmp
xor
push
aas
imul
call
jo
mov
nop
mov
jle
iret
iret
ror
sub
inc
inc
jge
ins
jmp
xchg
xchg
test
fldenv
inc
mov
arpl
in
loop
inc
je
jp
mov
out
dec
clc
(bad)
mov
rcl
push
call
in
mov
push
test
stos
in
push
and
mov
jns
pop
sbb
mov
push
cdq
lds
addr16
pop
in
or
enter
dec
pop
or
jns
and
stos
mov
inc
mov
dec
xchg
sbb
bound
xchg
imul
push
(bad)
dec
cmp
ds
mov
push
dec
dec
fistp
mov
hlt
out
pop
iret
xchg
or
in
cmp
mov
xchg
pop
sbb
cmps
dec
sub
stos
xor
adc
jo
mov
test
(bad)
mov
(bad)
mov
and
ja
push
cmp
gs
dec
or
jg
add
xor
xor
jmp
mov
mov
adc
sahf
je
cmp
mov
cmp
push
repz
or
pop
adc
push
stos
sub
outs
dec
(bad)
jb
pop
mov
jnp
cmps
xchg
sub
test
add
(bad)
fcmovnu
mov
xlat
clc
sbb
mov
mov
sbb
sbb
sbb
shr
push
adc
mov
js
cmp
cli
icebp
mov
adc
inc
lods
mov
xchg
scas
sub
icebp
sbb
mov
push
jg
int3
ss
jnp
mov
mov
dec
push
cs
mov
jl
inc
mov
(bad)
and
mov
sti
loop
add
movs
retf
(bad)
sbb
mov
and
xor
cli
mov
es
sbb
pop
push
jnp
or
cmc
adc
jbe
or
shr
repz
xor
out
clc
addr16
sub
imul
out
xchg
call
call
sub
fyl2x
fcom
iret
daa
ret
dec
mov
add
into
in
pop
neg
out
lahf
and
pop
or
out
(bad)
or
cmp
out
sahf
sub
xchg
sub
mov
dec
outs
sub
and
ror
out
leave
loope
inc
cmp
mov
dec
and
push
fld
mov
jbe
outs
sar
push
out
pop
sub
icebp
std
xchg
cmp
push
loopne
dec
cwde
push
scas
push
jge
xchg
in
hlt
push
xchg
cmps
jae
cmp
retf
(bad)
shl
xchg
push
jbe
rcr
enter
cdq
jl
loop
push
jb
ret
cli
lods
cmp
jp
rol
outs
cli
fstp
mov
dec
jmp
mov
adc
(bad)
fistp
sbb
in
icebp
enter
cdq
add
fbld
jle
out
fistp
hlt
enter
dec
xor
adc
cmp
fsubr
jae
dec
cwde
xor
sbb
adc
jmp
movs
sbb
cmp
or
mov
pop
add
cmp
cdq
ja
sbb
mov
pop
stos
mov
bnd
jmp
mov
inc
(bad)
stos
test
dec
xchg
(bad)
mov
adc
jmp
sub
outs
cmp
mov
jge
les
not
sbb
fistp
aad
add
out
or
bound
popa
in
cmp
movs
aas
ss
int3
cli
nop
and
pop
fsubr
(bad)
out
lea
adc
in
pop
cmp
pop
ds
call
add
pop
das
jo
inc
lock
addr16
sbb
jbe
dec
jnp
fidivr
dec
push
pop
xchg
or
call
adc
sar
or
cmp
add
add
adc
sub
mov
sub
leave
lods
add
jnp
pop
arpl
add
xlat
sar
mov
inc
and
cmp
ror
repnz
sub
inc
lods
fild
lock
and
js
sbb
movs
fidiv
mov
mov
add
mov
test
fist
ins
in
test
xor
ins
lahf
stos
inc
jl
pop
int3
or
pop
in
std
lds
daa
cmp
dec
or
or
(bad)
cmc
mov
xor
inc
inc
mov
push
jecxz
lods
cmp
inc
test
in
sub
push
pop
stc
jle
or
rcl
lods
idiv
ss
xor
in
sub
rcr
mov
loop
fst
push
enter
mov
pop
je
pop
repnz
pop
or
ficomp
je
shl
cdq
into
daa
(bad)
add
fwait
mov
push
jle
sub
das
mov
loop
jmp
xor
ret
pop
xlat
xchg
ret
xchg
(bad)
out
inc
xor
xor
dec
clc
sbb
pop
mov
sub
and
jb
xor
mov
mov
xlat
movs
xchg
xchg
xor
mov
loopne
xor
xchg
push
test
rcr
dec
out
hlt
cmp
inc
push
nop
mov
add
popf
cmp
mov
nop
sbb
loopne
push
(bad)
test
sub
int3
xchg
outs
pop
dec
xchg
mov
push
sbb
adc
outs
or
test
xchg
scas
mov
les
mov
aad
lds
btr
lods
sbb
sahf
cmps
jnp
jne
(bad)
repz
cwde
push
les
xchg
loope
or
and
cwde
in
and
sahf
sbb
adc
or
cmp
in
push
fisttp
pop
or
lock
or
xor
cld
xor
ins
inc
adc
cmp
scas
adc
retf
mov
add
pusha
jmp
ja
mov
add
icebp
mov
xlat
cld
add
pop
mov
test
jl
jno
dec
lea
rcl
sbb
mov
sub
mov
jae
jbe
cmc
jle
inc
lock
loopne
icebp
shr
sbb
std
sbb
adc
inc
pop
call
cld
(bad)
addr16
movs
adc
out
(bad)
lods
dec
in
mov
pop
mov
xchg
retf
pop
adc
ins
mul
cmp
push
repz
rcl
ficom
sbb
aad
fst
cmp
lods
retf
xchg
cmps
call
mov
inc
pusha
jo
fisubr
call
jge
xor
ins
add
jb
imul
clc
shr
xchg
cmps
push
adc
jge
adc
je
les
cmp
mov
jno
sar
hlt
lods
and
(bad)
movs
jmp
cwde
rcr
ja
ficom
inc
cdq
outs
rol
cmp
pusha
add
das
jae
xor
add
add
shl
fnstenv
xor
mov
ret
dec
shl
loop
jecxz
mov
xor
mov
out
lods
cli
inc
or
sbb
dec
or
das
jo
inc
in
sub
xor
xor
(bad)
adc
je
dec
repnz
ds
aaa
scas
cmc
and
mov
(bad)
cmp
cmp
and
fs
xor
pop
push
mov
sti
add
movs
out
(bad)
clc
repnz
mov
jg
pop
cmps
pop
push
push
sbb
out
adc
pop
adc
push
aas
sbb
xchg
sbb
dec
and
mov
sbb
cli
outs
jae
xor
jl
mov
or
loope
je
std
inc
cs
ins
push
sub
mov
aam
inc
sbb
or
or
ret
mov
out
pop
jle
in
ds
out
inc
jnp
test
or
jae
enter
mov
dec
js
sbb
xchg
jg
sub
pop
sti
pop
push
mov
push
sub
push
xor
adc
aas
shl
lock
adc
inc
mov
nop
in
or
stc
push
xchg
mov
dec
pop
(bad)
and
dec
add
pushf
mov
sub
sbb
mov
ins
out
sub
test
mov
push
and
jo
and
or
sub
add
leave
in
push
add
add
bound
gs
(bad)
xchg
test
mov
and
lds
cmps
in
xor
sub
call
test
adc
jae
mov
not
jmp
mov
jge
jnp
jb
fs
adc
or
repnz
cmp
xchg
mov
dec
sbb
mov
iret
push
test
dec
cli
pop
sti
jns
mov
xor
cmp
push
(bad)
adc
and
pop
lods
subps
sar
and
(bad)
retf
and
mov
xchg
pop
ins
in
sbb
pop
push
pop
pop
dec
push
aad
loop
dec
int
pusha
retf
xchg
pushf
mov
sub
jecxz
(bad)
cmp
shl
call
mov
push
jecxz
das
test
ins
and
stos
jb
adc
je
push
and
fdiv
add
into
mov
mov
mov
aas
jbe
xchg
mov
xchg
push
lds
mov
cmp
jge
daa
lods
push
imul
les
mov
mov
in
jp
jns
pop
hlt
or
(bad)
mov
outs
(bad)
leave
pop
push
xor
popa
outs
and
xchg
and
jmp
cmc
loopne
retf
inc
xor
jae
ror
in
cmps
pushf
les
daa
add
and
test
mov
pusha
(bad)
in
lods
mov
movs
lahf
xchg
inc
out
or
ret
dec
test
lods
sbb
test
push
lods
aad
xchg
mov
xchg
pop
sub
xor
mov
repz
neg
jmp
int3
jns
dec
fisub
push
rol
and
mov
cmp
or
call
fsub
push
es
movs
or
mov
mov
jns
test
addr16
mov
retf
sub
mov
cmps
fadd
icebp
ins
inc
jecxz
bound
daa
push
scas
or
aam
rol
pusha
test
daa
jnp
retf
pop
dec
stos
rcr
xor
pop
not
sbb
cmps
das
or
jge
adc
inc
or
jge
cld
xor
sbb
push
push
stc
cmp
jo
mov
mov
adc
inc
imul
jl
je
dec
mov
xchg
sbb
dec
and
adc
mov
fwait
fwait
dec
pop
and
nop
in
retf
aaa
ret
std
or
ins
mov
lea
bound
push
xlat
cmp
outs
add
adc
inc
push
aam
jo
push
xchg
push
ja
repz
xchg
or
lea
addr16
ror
(bad)
out
push
int
iret
ds
mov
xchg
mov
dec
sub
addr16
ins
cmp
stos
dec
fidiv
(bad)
data16
sub
mov
adc
inc
mov
sbb
xor
xchg
cmp
push
adc
cmp
add
lds
xor
retf
cmp
icebp
xlat
retf
cmp
pop
push
(bad)
cli
inc
lods
fld
mov
stos
mov
jns
adc
aam
shr
jne
icebp
xor
sbb
xor
cdq
(bad)
fstp
repz
in
(bad)
fcom
mov
test
jnp
repz
imul
inc
jb
out
or
(bad)
pop
or
pop
popa
jmp
hlt
sbb
call
mov
or
inc
fsub
sbb
jae
pop
(bad)
imul
and
push
push
jmp
sbb
cli
push
call
and
(bad)
pop
sub
adc
mov
push
(bad)
clc
and
pop
pop
ds
cs
pop
(bad)
mov
out
xchg
rcl
sbb
hlt
je
mov
or
pop
jbe
mov
div
ins
test
sbb
push
repz
(bad)
and
push
inc
enter
sahf
xchg
fcomip
adc
lods
rol
int
lods
in
test
cld
shr
xchg
ffree
xchg
(bad)
repz
pop
shl
call
dec
cli
mov
cwde
fwait
or
inc
or
adc
xchg
sub
inc
in
push
ret
jnp
fisttp
add
xchg
mov
sub
mov
aad
ret
leave
mov
push
lods
mov
or
test
xchg
cwde
dec
in
and
jl
mov
xchg
(bad)
fdiv
aaa
mov
(bad)
int3
in
jnp
cs
retf
push
push
jo
ss
lds
push
out
adc
jmp
jg
add
mov
mov
adc
sub
and
icebp
dec
sbb
cmps
jmp
cs
div
mov
ins
adc
js
mov
aam
outs
inc
xlat
sbb
out
inc
lahf
jmp
or
xor
inc
pop
in
mov
popf
(bad)
enter
pop
pusha
in
xchg
popf
dec
dec
sti
lock
dec
mov
cmp
pop
clc
cmp
add
sub
ins
into
or
jl
clc
lea
adc
test
xlat
or
jns
sub
jne
out
out
(bad)
cmp
mov
xor
clc
xor
fdivr
pop
or
jecxz
inc
jl
ds
dec
ret
dec
repz
sub
jp
pop
stc
adc
mov
(bad)
(bad)
hlt
jg
ror
fsub
ret
dec
lods
loopne
push
adc
sbb
jl
lahf
xchg
mov
xchg
sar
popa
xlat
stos
fwait
les
dec
mov
scas
and
adc
xchg
clc
shl
rcr
sbb
cld
sbb
push
jae
out
or
cmp
data16
outs
ficomp
mov
clc
cmp
imul
outs
(bad)
pusha
mov
ja
dec
and
pushf
pop
(bad)
dec
sub
sbb
cmc
sub
xor
repnz
adc
xchg
cld
mov
lahf
test
mov
stos
ins
adc
dec
mov
mov
xor
fstp
cmp
out
cmp
mov
push
sbb
jno
scas
cmp
jl
sub
pmulhw
iret
push
or
inc
cmp
test
sub
gs
jnp
jbe
or
call
scas
or
adc
(bad)
cli
fs
push
add
retf
push
sbb
or
mov
nop
imul
jl
test
lods
inc
ret
fcomp
mov
ds
inc
out
out
xor
mov
mov
jno
push
add
pusha
xor
retf
stos
add
enter
inc
test
cli
dec
fistp
popf
test
es
jnp
aas
inc
pop
add
inc
sub
add
mov
xor
push
ins
pop
sub
cwde
adc
cmp
jns
ja
pop
cmp
(bad)
movs
sbb
xor
mov
outs
imul
xor
aam
cmps
mov
fidivr
stos
inc
sub
mov
popf
int
push
and
mov
mov
adc
fs
jle
arpl
clc
push
pop
push
std
lds
(bad)
push
pop
fstp
pop
call
push
aas
imul
inc
popf
test
jbe
clc
mov
jb
jb
ja
mov
mov
xchg
mov
fisubr
mov
pop
test
mov
in
xchg
mov
retf
rcr
aam
push
mov
jl
fadd
inc
xor
neg
(bad)
inc
retf
fisub
into
jmp
lds
mov
and
cmp
cmp
jo
mov
jecxz
jae
cli
or
push
clc
push
es
gs
lock
push
mov
fwait
push
pop
adc
jb
pop
inc
xor
dec
gs
mov
push
ins
stos
test
and
inc
add
and
mov
jno
mov
mov
data16
aas
fcomi
add
xchg
push
pop
mov
sbb
push
leave
inc
and
xor
ror
mov
outs
jno
in
loopne
xlat
push
aad
pop
mov
add
cli
jge
pusha
xchg
xor
leave
or
dec
push
add
mov
ins
fiadd
aam
xchg
cmp
dec
mov
jae
jmp
fcomp
mov
mov
(bad)
xlat
or
mov
data16
sbb
pop
into
ins
jl
sub
rcr
pop
jne
imul
mov
mov
mov
mov
mov
xchg
adc
mov
mov
(bad)
cmps
mov
cmp
movs
or
nop
push
scas
ficomp
lar
and
(bad)
(bad)
adc
pop
push
fistp
jno
xchg
aaa
cmp
push
fst
sbb
inc
cmc
and
jnp
add
sbb
iret
pop
icebp
pop
or
scas
mov
fild
dec
ror
dec
pop
(bad)
cmp
popf
ret
mov
xchg
je
in
test
xchg
mov
stos
inc
stos
jmp
mov
pop
ins
dec
shl
add
fldenv
jae
cmp
test
push
mov
rcr
mov
ins
mov
movs
mov
test
(bad)
rol
retf
sbb
mov
(bad)
(bad)
mov
jb
xchg
mov
dec
sub
push
lods
ret
sub
mov
dec
fxrstor
sub
shr
cmps
xor
fisub
in
cwde
je
arpl
sti
aad
jnp
rcl
mov
pushf
retf
(bad)
jbe
retf
das
fwait
jb
cli
outs
or
mov
and
cmp
mov
jne
imul
out
iret
inc
jns
mov
shr
sbb
test
inc
loopne
xor
push
cmps
xchg
ret
jo
iret
call
jns
imul
int3
xor
sbb
sub
mov
and
pop
add
aas
push
ins
push
mov
int3
add
ins
(bad)
pop
jbe
jg
cwde
jnp
fsubrp
cmps
je
lahf
popf
pop
xor
out
adc
test
xchg
aas
xchg
aad
mov
pavgw
xor
mov
mov
sahf
inc
jmp
inc
out
fist
sbb
in
shr
ja
cmp
cmp
test
adc
ins
call
in
jb
and
cli
lock
adc
lahf
xor
in
pushf
mov
cmp
push
add
push
and
movs
popa
pop
rol
cmc
cmp
push
imul
mov
push
jbe
cmp
leave
add
jmp
aas
xchg
xchg
mov
test
mov
mov
in
outs
jo
mov
js
jge
(bad)
call
test
and
mov
in
push
fcomp
popa
cdq
dec
repnz
pop
push
cli
icebp
push
push
inc
inc
jecxz
inc
fs
xchg
push
fdivr
add
cmp
mov
cli
mov
inc
arpl
jnp
test
call
jp
inc
sbb
retf
pusha
std
dec
sbb
dec
test
inc
xchg
jb
enter
jge
and
pop
xchg
jne
aam
test
mov
cli
outs
aas
xchg
jecxz
ss
push
mov
jecxz
push
mov
aaa
jns
(bad)
daa
pop
dec
fstp
cmps
stc
and
mov
mov
inc
(bad)
pushf
int
mov
out
ret
bound
je
lock
pop
cmp
jle
(bad)
fwait
sbb
xchg
fsubr
cmp
xchg
sub
cli
mov
mov
dec
dec
mov
inc
adc
jp
push
sub
ja
out
daa
mov
mov
ins
call
lods
jo
cmp
jmp
sub
(bad)
sbb
xchg
into
ss
sub
cld
icebp
int3
push
push
inc
int
je
mov
sar
inc
sar
fs
dec
movs
call
test
in
addr16
les
fld
mov
jle
icebp
mov
cmp
push
or
sbb
popa
call
and
adc
test
inc
and
push
sar
ret
jne
add
ins
cmp
cmc
and
cmp
imul
repnz
sbb
ins
mov
jb
sar
xor
sbb
sub
push
bound
and
sub
mov
mov
bswap
test
outs
aam
ret
xor
dec
cmp
into
or
outs
(bad)
call
pop
inc
mov
mov
sbb
shr
test
test
ret
movzx
outs
mov
jg
ret
jle
sbb
bound
movs
jp
jmp
xlat
xor
and
icebp
cs
sub
fbstp
test
fdiv
ror
js
or
adc
push
movs
push
or
leave
push
add
xor
daa
aad
sar
pushf
in
sbb
and
cmp
pop
xchg
pop
outs
std
add
add
sahf
cmp
mov
cmp
enter
pop
xchg
shl
push
xchg
ret
mov
pop
mov
popf
dec
xchg
popa
and
and
inc
pop
sub
push
xchg
stc
pop
adc
outs
std
sub
cld
push
pop
jae
add
retf
out
jno
pop
imul
adc
das
call
(bad)
cmp
ficom
movs
inc
mov
pop
cli
pop
mov
mov
out
scas
lahf
cmps
imul
mov
call
xchg
jnp
xchg
shr
dec
xchg
(bad)
outs
(bad)
fdivr
push
mov
jecxz
shl
xor
mov
sti
cmp
adc
lock
jo
lea
outs
outs
popf
push
sub
mov
cmp
mov
pusha
sbb
mov
fistp
es
lods
push
ret
push
dec
adc
jbe
xchg
(bad)
js
lds
pop
push
rol
and
shr
lock
or
xor
and
mov
mov
imul
xchg
call
sub
add
adc
lods
pop
popf
cld
inc
adc
pop
xchg
cli
inc
imul
imul
jo
retf
data16
repz
in
jg
sbb
in
adc
jo
out
inc
fadd
push
fld
retf
jb
jmp
mov
fidiv
xchg
ds
test
movs
mul
jl
add
push
or
cmc
or
test
sub
div
cmp
sbb
mov
stc
test
xchg
mov
pop
pop
inc
mov
aas
cs
xchg
adc
jne
cmp
pop
enter
add
(bad)
xor
cmps
jo
add
les
mov
es
(bad)
dec
(bad)
or
dec
test
arpl
pop
call
jae
mov
pop
sbb
push
fimul
mov
in
mov
ja
scas
fidivr
jge
in
add
lea
or
pop
xchg
xchg
daa
jp
int3
jns
(bad)
fidiv
jle
dec
(bad)
imul
pop
adc
imul
fcom
call
adc
add
xor
iret
ins
ror
push
xchg
jmp
sar
mov
std
fdiv
mov
mov
mov
cmp
add
scas
jo
mov
mov
arpl
pushf
xchg
xlat
xor
clc
loop
add
fsubp
sbb
mov
add
mov
(bad)
mov
mov
xor
ja
test
or
xlat
pop
xor
inc
push
fisttp
mov
std
rol
int3
mov
cmc
push
stos
stos
xchg
leave
imul
sub
scas
jnp
pop
mov
mov
push
pop
jo
aaa
xchg
inc
push
out
ins
test
test
cmp
cli
adc
push
or
mov
cmp
mov
adc
icebp
aad
call
jb
cmps
add
lea
cdq
pop
out
pusha
dec
and
adc
push
cdq
clc
mov
mul
call
mov
add
or
js
fadd
inc
jg
cmp
jl
push
push
addr16
or
xchg
inc
ss
add
add
(bad)
cdq
iret
inc
sahf
and
add
test
scas
add
mov
icebp
adc
sub
cwde
jmp
es
scas
add
push
sbb
jg
cwde
adc
stos
iret
jb
loope
(bad)
and
dec
mov
xor
ret
jge
push
add
xor
add
mov
int3
test
mov
je
aas
out
adc
push
jno
fcomp
add
add
outs
jmp
inc
sbb
into
adc
cmp
inc
retf
dec
push
retf
fmul
push
dec
jl
retf
jmp
fistp
adc
ret
xor
sbb
xchg
ds
fcmovnbe
pop
pop
fstp
add
or
(bad)
call
inc
jp
retf
out
cmp
fidiv
ins
cmps
int3
fisubr
clc
push
ret
jno
xchg
call
out
jns
sti
fisub
and
mov
or
lahf
stos
xor
movs
mov
in
jne
call
fist
leave
push
call
push
test
gs
mov
enter
inc
mov
icebp
movzx
xor
arpl
(bad)
mov
repz
out
push
xor
fcmove
cmp
stc
enter
mov
rcl
cs
call
das
(bad)
mov
mov
cmp
mov
adc
sahf
push
lods
xor
lahf
into
fild
sub
sub
je
lock
bsf
aas
in
mul
(bad)
daa
pop
ss
sbb
fptan
sbb
(bad)
or
pop
cmp
jo
fidivr
call
push
stos
pop
leave
loop
out
inc
push
add
movs
add
cmp
mov
(bad)
ins
iret
or
sbb
xchg
fld
lock
fdiv
and
xor
pop
pop
mov
sbb
or
inc
jno
test
inc
cld
fisttp
push
cmc
xchg
push
call
lds
xchg
imul
iret
inc
mov
push
imul
mov
lds
pusha
ficomp
cdq
pop
test
jmp
sub
mov
lock
retf
(bad)
xor
out
xlat
xchg
cmp
lds
mov
mov
pop
push
inc
push
add
jb
les
push
shl
jb
sbb
jge
out
pop
sbb
into
or
(bad)
fidiv
ins
out
sub
push
mov
outs
mov
mov
add
dec
addr16
enter
and
sar
or
pop
or
dec
or
sti
addr16
and
ja
jbe
icebp
in
test
cmp
dec
or
and
mov
pop
dec
jp
fiadd
mov
scas
push
test
loopne
and
xor
add
push
sbb
sahf
mov
pop
inc
xor
ins
pop
inc
jbe
push
jmp
ret
inc
xlat
xchg
sbb
mov
mov
dec
test
xchg
push
mov
push
adc
push
mov
xor
hlt
je
xor
rcr
pop
rcr
mov
adc
in
sbb
push
cbw
into
mov
in
mov
push
outs
dec
add
push
ins
jp
fidivr
and
and
rol
jbe
mov
sub
pushf
adc
ins
les
test
and
shl
in
adc
fnsave
adc
inc
push
fdivp
ret
and
cwde
cmp
or
cmp
shr
mov
cmp
xlat
push
push
push
jb
in
cmc
cmp
je
arpl
and
dec
sbb
mov
loopne
arpl
mov
bnd
mov
inc
into
sub
jb
outs
int
arpl
add
jmp
mov
mov
cmc
and
shl
loope
jle
jae
rol
ficomp
push
jge
and
or
sub
ins
rcl
jmp
(bad)
xor
or
cmc
std
js
push
inc
adc
mov
xor
dec
(bad)
in
or
movs
mov
xor
shl
push
inc
movs
cld
(bad)
in
(bad)
aas
es
std
jb
sbb
sbb
lea
mov
mov
push
shl
bound
cmp
lods
out
inc
sar
aas
add
jmp
dec
mov
xchg
mov
test
jae
in
aam
cmp
lods
fmul
dec
push
inc
fbld
push
sbb
add
clc
or
cmp
push
pushf
push
inc
fistp
mov
(bad)
retf
fstp
and
and
out
jmp
push
add
inc
cmp
inc
int3
mov
pop
stos
push
sbb
test
dec
sbb
pop
addr16
(bad)
in
or
xchg
sbb
aad
xchg
int
mov
aam
(bad)
in
out
xchg
mov
xchg
inc
fbstp
pop
jle
adc
push
mov
fild
cmp
pop
call
mov
(bad)
dec
cmp
(bad)
mov
xchg
push
xlat
mov
fnstsw
jg
push
xor
and
lods
inc
(bad)
push
mov
cdq
shr
imul
test
jmp
cmp
leave
sub
and
icebp
cmc
and
mov
movs
test
sbb
jmp
mov
or
and
cmp
int3
and
jo
fisttp
test
jecxz
sbb
adc
aam
call
inc
push
mov
pop
(bad)
test
rol
int
adc
mov
jp
retf
add
cmps
int
mov
rol
mov
arpl
dec
in
(bad)
xor
pop
inc
popa
imul
ins
iret
test
xchg
jo
mov
cmps
mov
fild
fsubr
loope
rol
fiadd
out
ins
(bad)
sub
mov
les
cli
push
int
addr16
ret
cmps
sub
add
fistp
mov
pop
cmps
in
add
inc
mov
int3
cmp
mov
ficomp
call
aas
pop
push
mov
and
ins
stos
lods
bound
js
mov
(bad)
adc
inc
sbb
imul
test
mov
pop
lods
pusha
lods
pop
xchg
fstp
gs
cmp
shr
pop
lea
shl
xor
loop
imul
adc
ja
xor
in
mov
mov
xor
retfw
ret
inc
sub
cmc
sbb
mov
stos
into
mov
ins
xor
frstor
sbb
mov
jae
dec
(bad)
popa
inc
into
leave
xor
ins
retf
shl
push
dec
fistp
sub
es
adc
sub
push
inc
sti
arpl
mov
icebp
jg
lods
mul
pop
rcl
inc
jg
push
sub
(bad)
mov
xchg
pop
jnp
loope
(bad)
mov
pop
xchg
int3
cmp
test
push
push
dec
cwde
outs
sbb
fld
cmp
ja
out
imul
leave
shl
cmp
or
sub
loope
inc
arpl
test
mov
pop
or
xor
add
jmp
mov
sbb
push
repz
jecxz
jg
out
pop
jb
push
pop
retf
adc
mov
leave
inc
ds
push
push
test
pusha
and
mov
in
inc
inc
fidiv
mov
dec
pop
pop
ret
jp
sub
jae
fbld
das
repnz
cmc
imul
adc
dec
rcl
in
push
(bad)
mov
pop
mov
mov
int
mov
addr16
std
cmp
push
fdivr
loop
fdiv
sbb
jbe
xor
jg
mov
lahf
push
in
(bad)
pop
or
pop
retf
cli
in
xor
cmp
lods
ret
in
mov
stos
rcr
adc
push
jmp
pop
data16
fistp
or
lods
adc
hlt
add
mov
mul
out
cs
push
pop
ja
sub
push
pop
adc
pop
gs
adc
mov
jmp
and
inc
push
les
sbb
jmp
adc
xlat
lods
mov
div
inc
adc
clc
jmp
inc
add
lods
popa
popa
cmp
mov
lea
ins
in
push
js
loop
sbb
adc
(bad)
push
jmp
aam
or
pop
hlt
xor
(bad)
adc
jnp
xor
int
loopne
mov
ins
inc
aas
push
mov
mov
lock
inc
shl
shl
mov
pop
lods
or
dec
in
sub
pop
movs
(bad)
xlat
jne
xor
repz
sub
or
mov
xlat
and
out
lahf
(bad)
sbb
sub
test
add
and
imul
out
pop
pushf
push
jp
inc
push
test
pop
xchg
mov
es
dec
dec
adc
cmp
cdq
retf
xchg
cmc
(bad)
cmp
test
push
adc
repz
stos
jb
mov
and
pop
sub
cmp
sbb
pop
ret
nop
or
addr16
xor
xlat
cmp
and
or
inc
(bad)
jbe
xor
push
stos
cli
mov
mov
movs
xor
fisttp
out
inc
clc
adc
mov
add
sbb
xlat
or
dec
xchg
aaa
cmps
sbb
dec
lds
call
cld
jae
push
scas
loope
add
inc
dec
inc
jnp
dec
pop
or
sbb
xchg
mov
and
div
imul
sub
int3
jmp
adc
jle
mov
mov
mov
cmp
and
sub
adc
push
push
imul
jl
int3
rcr
in
pop
dec
push
lods
add
jb
in
test
ret
mov
mov
sub
adc
or
xor
or
mov
movs
aad
pushf
popa
xchg
repnz
jno
inc
dec
add
push
jne
rcl
mov
or
loopne
xor
sub
mov
push
enter
mov
cmp
add
adc
inc
aam
aas
aam
stc
lock
mov
cli
add
cmps
cmp
enter
pop
dec
sub
cmps
jo
out
cmp
or
inc
ret
enter
dec
lock
sub
or
lahf
out
xchg
in
xbegin
lock
scas
pop
sbb
shl
mov
(bad)
push
push
popa
dec
inc
inc
sar
sbb
cwde
push
mov
xchg
jne
repnz
lea
aaa
mov
call
fldenv
movs
jp
cmp
inc
aam
cli
adc
jo
pop
jmp
(bad)
pop
xchg
push
test
lahf
addr16
in
arpl
add
pop
xchg
xor
pop
and
movs
add
nop
iret
push
into
mov
aad
inc
sbb
inc
add
jns
in
pushf
mov
shl
das
popf
imul
out
sub
push
(bad)
in
adc
data16
pop
jecxz
scas
xor
inc
inc
lods
mov
in
mov
jnp
sbb
xchg
and
in
(bad)
adc
iret
push
jae
push
xor
daa
arpl
aas
rol
std
pop
dec
imul
cmps
loope
or
int3
(bad)
test
mov
and
mov
xor
adc
dec
add
or
cmps
fsubr
xor
cmps
iret
lods
test
bswap
inc
aam
clc
test
(bad)
push
mov
das
test
pop
call
shl
adc
aaa
retf
stos
outs
int
shr
(bad)
int
cmps
outs
add
and
repnz
mov
jl
push
fdiv
loopne
and
mov
jp
inc
loope
cmps
sbb
test
jmp
mov
mov
aaa
sub
not
daa
int3
mov
mov
xor
leave
add
addr16
push
mov
sar
mov
mov
or
mov
add
xchg
push
sar
stos
mov
inc
add
inc
dec
cmp
jno
sub
mov
xchg
sub
mov
fild
xor
test
xchg
pop
xlat
jno
lock
jl
bound
in
(bad)
std
sub
mov
push
sub
mov
add
jmp
mov
cmp
leave
repz
adc
cmp
lds
xchg
repnz
cmp
sub
or
xchg
lods
push
fwait
add
add
retf
leave
add
inc
mov
cwde
lods
mov
and
lds
jecxz
add
enter
inc
fisttp
push
test
call
jo
adc
call
aaa
mov
je
add
push
xor
sub
(bad)
retf
mov
xor
dec
mov
stos
mov
sub
cld
jecxz
sbb
mov
or
(bad)
lea
imul
cli
mov
lds
mov
pop
pop
pop
orps
bound
dec
(bad)
test
lea
and
inc
jo
mov
and
dec
push
pop
test
xor
icebp
and
cld
int
sbb
fs
lahf
adc
sbb
fistp
pop
sub
push
ss
js
ds
jb
push
adc
out
add
fcmovnbe
cli
add
(bad)
ficomp
test
cdq
xor
mov
sbb
xchg
push
cs
jp
add
lock
mov
es
ins
cwde
imul
sub
(bad)
jle
(bad)
stc
push
das
pop
cmp
push
xchg
stc
xor
cld
push
or
pop
jle
pop
pop
fld
mov
mov
gs
and
add
and
mov
pop
cli
push
or
test
cmp
out
lock
pop
cdq
fsub
popa
dec
repz
ficomp
rol
xor
lea
mov
xchg
push
dec
push
sub
pushf
(bad)
pusha
fdiv
call
aaa
neg
dec
pop
adc
js
pop
jp
test
pusha
je
test
sahf
mov
sub
pop
lods
inc
pop
jbe
add
int3
jg
iret
scas
lahf
adc
xchg
sub
jb
add
xor
or
adc
int
pushf
clc
mov
or
push
mov
dec
popf
icebp
int
jmp
shl
bnd
or
adc
mov
mov
repnz
jg
push
data16
xor
popa
rcr
ins
outs
jne
fnstcw
and
and
repnz
dec
push
mov
sub
lds
gs
adc
mov
shl
mov
inc
sbb
jne
sbb
inc
mov
dec
mov
imul
shl
mov
(bad)
out
add
push
rcl
dec
(bad)
movs
lock
pcmpgtb
adc
push
clc
les
mov
cmp
lock
xchg
div
nop
out
(bad)
jbe
sub
mov
stc
scas
vmread
dec
dec
jns
and
inc
inc
rol
clc
xchg
and
push
movs
(bad)
js
jnp
(bad)
out
mov
lods
mov
mov
leave
in
jle
mov
mov
clc
imul
jle
and
int3
(bad)
xchg
add
sub
sub
pop
jbe
inc
ins
je
adc
dec
les
or
imul
in
clc
je
in
imul
retf
loope
vxorps
pop
fcomp
sub
xchg
call
xchg
mov
neg
push
fldenv
push
sub
iret
sbb
cmps
cmp
mov
outs
stc
ret
in
shl
xor
cdq
pop
rol
xor
lea
in
ds
mov
loop
movs
xchg
fcomi
icebp
(bad)
mov
fmul
stos
jbe
retf
xchg
mov
fsubr
sbb
bound
mov
pop
adc
jge
dec
pushf
pop
pop
sub
stos
push
jecxz
or
retf
fiadd
scas
aaa
aaa
jne
test
mov
pop
mov
test
in
neg
ret
pop
dec
dec
fisub
sbb
lods
add
call
sub
fsubrp
push
cmp
push
inc
add
jb
pop
pop
pop
push
push
and
sbb
sti
push
push
add
pusha
xor
dec
cmps
iret
or
add
mov
xchg
and
cmps
jnp
out
mov
aad
sti
dec
sub
add
cmp
retf
add
jge
neg
jb
and
and
int3
retf
arpl
sub
push
hlt
in
imul
pop
aas
inc
sbb
arpl
int
jmp
in
(bad)
mov
push
xchg
inc
and
pop
inc
sub
es
dec
das
sub
sbb
(bad)
fld
and
adc
mov
and
push
stc
cmp
mov
mov
int3
shr
popf
jmp
movs
jb
xor
int
push
ror
xor
add
in
imul
mov
leave
ja
shr
into
(bad)
xchg
adc
es
jae
ret
jmp
inc
cdq
mov
fsubr
jb
fnstsw
pushf
stos
dec
outs
push
test
or
add
pusha
mov
sbb
xor
cdq
cmp
fnstenv
jne
clc
add
into
cs
xor
pop
out
mov
das
push
int
sub
xchg
or
(bad)
mov
sub
stos
popa
in
jbe
adc
lods
shr
lock
mov
jno
push
sbb
call
ret
sub
mov
test
cld
and
outs
cmc
pop
jle
dec
jnp
mov
call
cmp
(bad)
mov
repnz
je
pop
sti
and
call
xlat
push
fs
mov
sbb
mov
pop
mov
out
sbb
mov
outs
push
repnz
inc
or
sub
mov
rcr
icebp
sbb
loope
retf
les
cmp
pop
stos
test
sti
cmp
jbe
test
xor
cmp
and
dec
jle
adc
addr16
xchg
mov
ror
dec
fnstenv
and
rcl
arpl
fld
loopne
mov
ss
sub
lods
mov
push
or
outs
or
shr
nop
and
icebp
(bad)
(bad)
fs
mov
sbb
das
inc
(bad)
mov
dec
dec
jmp
add
pop
mov
push
mov
dec
shl
or
pop
xchg
xor
div
mov
mov
test
push
mov
loopne
(bad)
jb
cmp
dec
mov
leave
je
add
arpl
repz
jne
data16
mov
mov
(bad)
rcl
mov
mov
add
or
xor
and
movs
pushf
popa
pop
punpckhwd
adc
je
cmp
mov
xchg
(bad)
or
gs
xor
std
jbe
jle
adc
dec
xor
sti
dec
ins
pop
push
xchg
or
push
lds
xor
mov
dec
push
dec
push
mov
imul
test
mov
pop
pop
stos
and
mov
sbb
sar
adc
mov
aas
adc
sbb
cdq
mul
fcom
inc
jle
sbb
daa
sub
dec
loope
sub
fdiv
enter
mov
ins
jno
les
movs
ins
cmps
sub
mov
push
jno
jbe
daa
cmps
inc
ins
xor
and
jae
pop
mov
jns
sbb
dec
xchg
add
jg
mov
mov
lds
gs
inc
lods
pop
cmp
mov
out
lods
and
repnz
movs
jle
dec
xor
cmc
les
jno
push
test
xchg
data16
pop
(bad)
pop
adc
mov
push
jne
and
sub
mov
clc
push
mov
daa
cmps
cmp
sahf
xchg
jae
and
xchg
ja
(bad)
dec
and
mov
(bad)
loopne
push
jecxz
bound
ret
mov
dec
jmp
ds
je
movs
inc
call
popa
fstp
jmp
mov
xor
pop
push
cmp
out
push
out
sub
jg
(bad)
dec
mov
jp
xchg
fisttp
lea
or
pop
jae
movs
and
int
inc
or
je
stc
adc
xchg
inc
(bad)
daa
mov
dec
sar
test
adc
mov
aas
push
sub
ror
xchg
sub
into
movs
inc
mov
add
jecxz
sar
cmp
adc
mov
mov
cmp
fcmovne
add
pop
dec
int
sbb
xor
xchg
pop
cmp
inc
aad
sti
mov
jno
in
pop
push
out
arpl
or
jae
mov
repz
push
fwait
mov
sbb
xor
xchg
adc
sbb
cdq
xor
push
bound
xchg
inc
mov
cmc
cmc
jl
push
je
mov
shl
cmps
ffreep
scas
dec
inc
mov
mov
aam
mov
mov
iret
mov
retf
add
add
mov
in
pusha
in
pop
add
out
cli
ins
out
add
jp
pop
(bad)
fistp
sub
call
xchg
cmp
loop
loopne
cld
add
arpl
fdiv
int3
inc
pop
cmps
sbb
cwde
sahf
nop
stc
sbb
mov
(bad)
and
adc
and
jg
cmp
and
cmp
outs
mov
xor
jge
aas
push
push
mov
or
fmul
dec
mov
retf
dec
push
jae
sbb
int
ror
dec
cmp
div
mov
mov
push
movs
retf
xchg
(bad)
jle
test
push
imul
pop
mov
mov
call
nop
or
repnz
xor
sub
fidiv
dec
jo
or
shr
jecxz
push
dec
js
xchg
jmp
push
daa
iret
neg
shl
sbb
pop
mov
test
xchg
fsubr
push
mov
pushf
push
(bad)
hlt
mov
in
out
cs
pop
mov
pop
aas
add
sbb
inc
sub
or
clc
mov
sbb
addr16
pop
stos
hlt
mov
dec
dec
lahf
xor
pop
add
bndldx
jmp
xor
mov
in
jno
nop
xor
movs
sub
cmps
in
pop
mov
dec
enter
pop
pop
and
fist
das
in
loope
dec
push
adc
iret
mov
xchg
pop
jmp
daa
stos
inc
mov
jns
add
test
xor
pop
xchg
(bad)
aad
or
add
add
sbb
fwait
ss
push
mov
cmp
loopne
retf
pop
imul
inc
das
inc
out
ja
repz
adc
or
jnp
inc
aas
pop
pop
call
or
and
xchg
push
cmp
xchg
push
push
test
pop
xor
int3
or
es
mov
lds
mov
loopne
aam
ret
adc
test
ret
retf
les
mov
(bad)
aad
sti
adc
jnp
mov
lahf
lahf
shr
mov
adc
neg
test
cmp
push
pop
mov
sbb
repz
inc
stos
push
addr16
addr16
pusha
mov
out
jecxz
or
xor
call
xchg
inc
or
retf
mov
add
inc
lock
mov
out
push
pop
push
cs
imul
mov
mov
fcomp
cmc
jnp
cmp
sub
fisub
push
jne
sbb
adc
dec
dec
mov
mov
pop
sbb
lods
call
fldenv
and
fnstsw
mov
mov
repz
push
in
aam
rcl
(bad)
out
push
pop
push
ds
inc
add
loop
mov
sub
add
ror
cmps
(bad)
clc
fstp
pusha
jle
aas
mov
xchg
cmp
ins
int3
gs
jl
push
lds
inc
inc
jmp
pop
mov
stc
jl
mov
mov
sbb
fcomp
retf
fsub
out
add
xchg
jge
pop
xlat
cmp
push
mov
pop
mov
mov
mov
lahf
cwde
repz
imul
sbb
jmp
adc
movs
retf
test
add
stos
test
lock
dec
cld
xchg
pop
pop
cmp
and
idiv
arpl
scas
(bad)
mov
(bad)
push
int3
stos
test
ins
add
xchg
cmp
mov
and
jb
out
in
jb
shl
ins
jge
(bad)
clc
jmp
mov
in
mov
cwde
outs
es
shr
movs
leave
pop
pop
xchg
pushf
inc
xchg
push
xchg
jmp
enter
xor
aaa
jp
push
sar
fnstenv
jecxz
popa
pop
dec
xchg
mov
xlat
pusha
inc
and
in
jecxz
data16
xchg
scas
rcl
lahf
adc
or
pushf
clc
std
xchg
movs
stc
fistp
xchg
pushf
sub
sbb
rcl
or
dec
mov
loop
inc
cmps
jno
aad
mov
setno
pushf
mov
gs
sbb
xchg
and
xor
ss
repnz
sbb
jo
(bad)
(bad)
xor
ss
lods
fstp
sbb
xor
scas
and
add
fmul
(bad)
jnp
inc
(bad)
mov
sbb
sbb
cmps
stc
int
jae
mov
dec
ret
fwait
or
adc
cld
dec
sbb
movs
dec
xchg
lock
mov
(bad)
push
adc
cld
jmp
js
or
rep
dec
sbb
sbb
cmp
cmp
shl
xor
es
jns
sbb
xor
push
loop
dec
sar
xor
mov
bound
mov
rcr
or
cmps
push
aaa
ins
fld
lahf
cmp
cmp
test
lahf
adc
ins
sbb
dec
outs
jae
sub
and
out
sbb
xchg
add
sub
push
mov
sub
xor
ins
mov
jge
leave
iret
pop
cmp
loopne
inc
out
cmp
mov
mov
(bad)
jno
mov
enter
popa
or
mov
movs
sbb
pop
xchg
sbb
lea
xor
xor
cmp
mov
jmp
cmps
lods
jb
push
dec
ds
mov
cmp
mov
int3
dec
gs
call
out
pop
je
popa
add
jb
mov
(bad)
jo
mov
repnz
in
adc
fmulp
push
daa
and
xchg
dec
sub
mov
(bad)
repnz
int
mov
retf
push
and
pop
add
push
mov
in
add
fcom
(bad)
xchg
mov
sub
scas
jo
mov
bound
push
fcmovu
shl
pop
lahf
outs
lods
adc
mov
jmp
test
inc
sbb
lock
out
adc
cwde
psubb
mov
mov
pop
fsub
call
lods
pop
fistp
cmp
xchg
sti
lea
mov
inc
sub
push
jae
mov
enter
jno
aaa
fst
pop
and
shl
retf
pop
mov
or
icebp
jae
or
in
sbb
fwait
push
leave
inc
inc
jecxz
sub
arpl
cmps
push
test
sbb
xor
and
xchg
in
iret
fs
push
inc
cli
mov
retf
js
loop
jmp
cli
push
xor
sbb
add
sub
jmp
lds
cdq
mov
ror
or
loopne
aaa
jl
sub
outs
lods
repz
sbb
add
xchg
retf
jno
ds
xchg
push
adc
and
xor
ss
push
scas
sti
scas
sbb
fisubr
and
adc
xlat
int3
cmc
retf
das
retf
dec
(bad)
(bad)
pop
aas
and
cli
push
icebp
adc
sbb
xor
inc
dec
jo
cmps
push
test
repz
inc
or
in
mov
push
aam
lods
and
inc
adc
cmp
aad
sbb
int3
adc
ret
mov
cmp
movs
ror
rcl
mov
or
sub
sub
int3
dec
sub
sar
addr16
outs
rcl
add
pushf
test
sbb
and
cmp
pusha
mov
out
xor
xchg
ss
(bad)
retf
dec
rcr
imul
fwait
and
sbb
stos
loopne
and
or
or
sbb
jp
pushf
adc
in
ret
jno
xchg
mov
jge
inc
rcl
pop
(bad)
aas
jmp
pop
cmps
adc
int3
add
adc
pop
xchg
cmp
and
pop
and
test
repnz
fdiv
mov
(bad)
push
or
cmp
dec
jbe
fld
xchg
jmp
out
push
repz
(bad)
hlt
mov
adc
leave
in
or
fiadd
push
dec
and
ffreep
hlt
inc
retf
ja
jl
add
cmp
retf
and
scas
dec
jno
inc
xchg
scas
mov
loop
dec
cmp
xchg
push
ds
xchg
add
scas
out
mov
cmp
out
lods
sar
add
adc
aam
or
mov
popa
or
adc
sbb
jne
adc
jnp
in
stc
jecxz
mov
cmps
jbe
mov
repnz
mov
xchg
(bad)
pop
pop
push
aad
mov
mov
stc
ja
sbb
xor
jmp
(bad)
xchg
dec
push
dec
or
inc
push
sbb
mov
mov
sub
outs
popf
out
fwait
jmp
push
rcl
mov
pusha
loope
jg
cli
in
mov
shr
mov
inc
popf
mov
sbb
icebp
lods
jecxz
fimul
call
mov
aaa
pop
sahf
add
fst
icebp
neg
iret
cs
imul
add
jnp
cs
jmp
mov
int
jecxz
push
inc
xchg
icebp
xchg
dec
out
push
and
mov
fmul
cmps
push
retf
into
sbb
test
xor
loopne
mov
out
add
fst
fsubr
xor
lds
(bad)
mov
xor
sub
push
ret
fld1
imul
dec
fwait
out
dec
sub
out
jmp
inc
sub
lea
dec
add
lock
cmp
or
je
and
dec
lea
cmp
cli
call
jbe
out
test
ins
pop
iret
nop
out
lods
jp
fwait
inc
pop
js
nop
pslld
sbb
pop
mov
scas
movs
sbb
sub
in
movzx
inc
add
mov
je
adc
retf
mov
xchg
and
(bad)
mov
sti
lods
and
xchg
jne
adc
ret
adc
push
xor
(bad)
addr16
les
and
and
fstp
push
mov
and
in
and
jno
test
sar
xor
cld
call
sub
xchg
sti
loop
out
nop
je
mov
jp
ret
xor
(bad)
and
add
stos
and
scas
enter
fiadd
sbb
dec
inc
xor
mov
mov
in
add
sbb
aas
adc
xchg
push
cs
jo
mov
or
and
dec
jmp
adc
in
xor
loop
(bad)
jo
push
and
push
test
pop
(bad)
mov
mov
pop
and
sbb
repz
std
loope
jo
movs
pop
sbb
nop
mov
repz
cmp
fbstp
jns
jmp
movs
sbb
jne
jne
ja
dec
mov
outs
inc
inc
inc
inc
mov
in
pop
retf
test
pop
cld
adc
enter
sub
lds
xchg
je
stos
adc
mov
adc
jge
jg
out
shl
mov
outs
push
and
mov
xchg
js
in
xor
mov
cmp
ss
jecxz
adc
add
sub
in
add
dec
or
and
mov
pop
jno
xor
mov
cmps
mov
out
add
in
aam
lds
push
arpl
arpl
lock
push
jbe
xchg
stc
cli
outs
cmc
movs
daa
jecxz
int
jp
or
ja
xor
lods
sar
call
mov
ds
mov
nop
mov
mov
jg
mov
adc
sbb
pop
pop
sub
imul
jg
call
jns
icebp
fldcw
pop
cwde
cmc
push
adc
pushf
lods
xor
es
ficom
pop
inc
push
mov
stos
xchg
cs
aad
scas
mov
xchg
mov
fadd
in
pop
cs
inc
xchg
xlat
out
sbb
jns
dec
or
pop
ja
ja
jns
xchg
mov
and
push
call
int3
jo
jae
out
loope
stos
inc
mov
push
loop
jo
scas
les
inc
(bad)
push
out
xor
clc
adc
xor
fdiv
leave
int3
out
daa
adc
scas
imul
push
mov
add
rcr
call
mov
inc
lea
xor
bound
(bad)
cmp
fs
and
stc
xor
(bad)
lods
pop
mov
(bad)
out
leave
es
cld
mov
not
pop
cmc
pop
rcl
pusha
fstp
mov
dec
fst
mov
mov
test
sbb
shr
sahf
xchg
int3
lds
hlt
dec
fsub
out
nop
mov
sub
(bad)
aam
mov
out
xor
js
mov
scas
out
or
retf
sub
mov
inc
aam
ret
fsubr
push
arpl
jp
mul
in
(bad)
out
jp
rol
test
cli
dec
lock
mov
cmp
mov
in
pop
movs
loope
sub
mov
jg
mov
adc
mov
sbb
imul
inc
dec
out
xor
aam
mov
sub
in
popf
jbe
mov
xor
jge
sbb
clc
xlat
add
ds
cs
dec
xchg
call
pop
lock
nop
pushf
aaa
lods
bound
loop
inc
xchg
fnstcw
jne
mov
pop
shl
jl
jmp
sub
ins
xlat
push
sub
push
fisub
mov
jecxz
jl
test
test
cli
mov
jg
data16
leave
cmp
xchg
cmp
adc
and
outs
iret
push
xor
xchg
fwait
sbb
or
adc
dec
inc
add
test
xor
scas
pop
mov
fisub
and
cmp
jmp
ret
mov
jmp
test
or
cmps
(bad)
leave
mov
scas
mov
mov
call
int
sbb
jl
sti
in
cwde
dec
pop
loope
nop
xor
mov
xchg
test
inc
mov
iret
jns
and
ret
cmps
push
xor
jb
in
cmc
adc
movs
popf
sub
sub
sub
sar
stos
cld
add
int
sub
out
popf
and
(bad)
cmps
and
adc
add
pop
push
hlt
and
aas
fstp
cld
inc
inc
test
add
jbe
push
daa
call
sub
das
jl
dec
mov
mov
cmps
lahf
inc
sub
dec
in
mov
xchg
pop
pop
dec
adc
mov
data16
xor
xchg
(bad)
dec
sub
loop
aas
jno
gs
cmp
rcl
sahf
out
ja
and
push
fld
lds
mov
cmp
fsub
add
xor
jl
cwde
xor
pop
add
loopne
pop
and
in
sti
and
into
xchg
movs
mov
sbb
dec
sub
das
les
mov
sbb
test
addr16
sub
pop
(bad)
neg
push
pop
fbld
or
sub
push
adc
pop
or
push
and
fcomp
out
pushf
mov
nop
push
jne
cmp
push
and
lods
mov
jbe
call
imul
mov
cld
add
fsubr
and
into
retf
(bad)
dec
dec
xchg
xor
popf
jae
in
test
inc
lock
push
lock
and
icebp
scas
jno
ret
cld
ins
movs
or
bound
cmps
das
mov
jmp
dec
adc
ins
or
sbb
jne
pop
div
cmp
loopne
xchg
jge
cmp
outs
xor
inc
std
or
jmp
stos
inc
pop
pop
pop
call
ror
ins
mov
xor
xchg
das
cli
lods
push
fwait
mov
fdiv
lds
mov
adc
outs
scas
dec
aad
or
mov
fcomip
jno
ret
loope
retf
les
popa
imul
sahf
or
xor
xchg
xor
sub
sti
sbb
adc
or
pop
mov
lock
bound
test
retf
mov
popa
adc
pop
sbb
scas
pop
stc
xchg
pop
pop
gs
dec
mov
dec
(bad)
in
enter
rcr
mov
mov
sub
(bad)
cmp
xchg
xor
push
pop
ror
loopne
stc
xchg
shl
and
add
and
test
mov
jmp
js
pop
adc
addr16
hlt
push
dec
sbb
add
daa
sbb
fist
xchg
jnp
mov
stos
fld
sub
(bad)
pusha
xor
inc
xchg
push
pop
pop
stos
jg
out
jmp
lock
cmps
rcl
jmp
cmp
lea
push
mov
pop
pop
cmp
retf
dec
mov
mov
es
ror
fdiv
jnp
or
stc
sbb
stos
icebp
mov
sar
or
push
fild
or
cld
icebp
mov
push
mov
ja
xchg
pop
mov
cmp
sahf
test
out
add
dec
push
sti
std
fcomip
aam
mov
ficom
das
cmp
movs
jp
lea
adc
jnp
push
test
or
inc
bound
sbb
push
push
stc
jbe
and
inc
call
(bad)
fidivr
loope
jno
ss
mov
cs
mov
loopne
push
hlt
into
jl
sbb
stos
repnz
jmp
lods
add
xor
out
loope
mov
xlat
push
retf
pop
bound
movs
fistp
cmps
ret
inc
jp
sub
test
lea
xor
mov
and
jb
enter
cs
mov
pusha
ins
xchg
daa
and
and
xchg
push
jbe
aam
pop
stc
add
fnstcw
sub
or
mov
sti
sbb
mov
mov
stos
mov
call
mov
xchg
loope
mov
xor
add
mov
xor
retf
les
xlat
aad
je
ffree
rcr
pushf
xor
loope
outs
mov
fucomi
inc
add
cs
out
cmp
data16
push
cmp
mov
les
psllw
aad
inc
sub
mov
cdq
xor
(bad)
nop
test
jp
das
inc
lahf
imul
(bad)
(bad)
push
aas
ds
push
mov
call
dec
jno
ja
lods
jne
into
push
shl
pop
cmp
int3
int
pusha
adc
push
popf
stos
adc
scas
push
repnz
in
jb
pushf
icebp
or
clc
pop
push
shl
jmp
sbb
test
loop
aam
inc
cs
sti
clc
cmps
mov
pinsrw
push
test
cmp
pusha
xor
ficomp
in
fnsave
mov
push
mov
sahf
movs
or
inc
in
inc
jg
(bad)
jmp
sbb
push
ds
and
inc
dec
int3
outs
mov
mov
jecxz
ss
(bad)
data16
sbb
sub
xchg
es
push
(bad)
into
ret
dec
cwde
sub
xor
jae
push
bound
bound
cli
cmp
and
sbb
dec
inc
xlat
push
jmp
aam
ja
test
fcomp
sti
push
mov
out
sub
inc
cmovne
daa
enter
int
mov
fcom
test
in
test
inc
mov
jno
sub
out
cmp
push
retf
out
cmp
xor
dec
test
sar
mov
mov
mov
into
(bad)
and
movs
mov
fidivr
push
jnp
ja
xor
int3
jbe
icebp
scas
cmp
outs
xor
pop
xchg
stos
sbb
std
or
mov
stos
jle
out
loopne
dec
jl
test
loope
pop
aad
adc
xor
xchg
cs
inc
dec
and
push
dec
jmp
jle
push
and
hlt
push
fadd
jmp
out
inc
fs
pop
jg
inc
cs
and
(bad)
cmp
scas
call
push
test
mov
push
sbb
cmps
hlt
mov
inc
xor
jmp
jg
dec
pop
aas
add
(bad)
daa
sbb
popf
mov
and
data16
fmul
aas
adc
jo
sub
loopne
mov
jne
out
xchg
adc
cmp
call
pop
mov
xlat
div
mov
bound
popf
xlat
movs
jbe
xchg
or
dec
push
gs
dec
jne
jae
jl
fdiv
dec
(bad)
fcom
inc
xchg
movs
xchg
sub
aas
jmp
jp
jl
xchg
sbb
scas
into
repnz
ficomp
pusha
pop
fsubrp
push
pop
ds
shr
rcl
xchg
pop
out
shl
push
and
mov
sbb
add
int
sub
jno
push
sbb
js
pop
push
add
cli
xchg
test
push
scas
inc
ret
mov
mov
dec
cmp
popf
mov
je
mov
aam
cmps
pop
je
clc
xor
fs
out
xchg
jg
sbb
fcmove
(bad)
cdq
sub
sub
outs
push
(bad)
fld
in
popf
mul
in
dec
ins
cmp
dec
in
mov
jmp
and
xchg
outs
pop
ins
mov
jl
test
fcomp
xor
mov
and
std
lods
and
aam
mov
cdq
clc
retf
into
aad
aaa
mov
add
lods
mov
push
(bad)
sbb
mov
fist
lock
or
popa
pop
sbb
or
out
and
aad
xor
addr16
leave
stc
call
sub
add
cmp
adc
loope
in
cdq
(bad)
imul
adc
push
jmp
push
inc
out
lock
cmc
mov
sbb
mov
ret
cmp
sbb
fnstcw
fadd
push
repnz
add
rcpps
mov
(bad)
bound
sbb
mov
add
mov
add
xor
mov
xchg
outs
inc
push
and
dec
mov
daa
add
dec
call
shl
dec
stos
adc
idiv
jle
scas
arpl
mov
xchg
fild
popf
fisub
xlat
stc
imul
xchg
hlt
fdivr
push
adc
fisubr
fs
out
mov
ficom
cli
push
mov
xchg
test
inc
aad
nop
loop
loop
inc
cmps
mov
gs
jnp
and
mov
and
call
add
retf
add
or
sub
cmps
dec
ja
jecxz
hlt
and
push
retf
movs
xchg
je
fwait
inc
mov
cmp
fwait
sub
shl
jmp
sti
ret
jns
xor
aaa
loope
movs
in
push
div
popa
xchg
mov
mov
pop
xor
fisttp
sbb
or
and
jp
imul
pop
sub
push
dec
jno
sbb
sar
xlat
loopne
pop
das
xor
lods
sbb
xchg
frstor
jp
loope
cmp
test
dec
pop
cmp
loopne
pop
lods
call
in
mov
in
sbb
pop
loope
sbb
lods
or
bound
shl
jno
push
jns
mov
add
xchg
shl
dec
xor
lods
fdivr
pop
stos
mov
leave
dec
jbe
jl
mov
jmp
popa
and
ja
cmp
aas
mov
cmp
jns
dec
mov
sbb
test
dec
(bad)
loopne
enter
fwait
rol
sub
adc
dec
xchg
jnp
mov
inc
and
not
xchg
enter
je
push
rcl
icebp
pop
push
test
mov
xchg
leave
dec
push
call
push
popf
xchg
lods
push
iret
fistp
sbb
push
inc
sub
mov
fnstenv
push
dec
rol
ret
mov
lods
mov
cmp
xchg
(bad)
call
add
push
pop
imul
loopne
hlt
outs
sub
or
cmp
mov
scas
or
ins
xor
test
dec
jb
test
pop
pop
cld
(bad)
push
inc
test
aam
mov
jmp
rcr
pusha
mov
sub
push
push
ins
sbb
jb
sub
xchg
and
ins
pop
sbb
dec
addr16
push
popa
sar
dec
jle
push
jnp
dec
dec
mov
sti
mov
fs
enter
mov
ss
and
and
pop
cwde
pusha
lea
pop
inc
mov
cdq
fs
inc
xlat
iret
in
adc
fistp
in
dec
dec
pop
and
mov
dec
movs
cmp
cmp
cmp
cmc
mov
iret
icebp
movs
pop
mov
mov
stos
xchg
mov
fdivr
jo
inc
data16
jno
scas
sub
inc
pop
pop
scas
cdq
in
push
fadd
jecxz
fdivr
(bad)
lahf
jle
(bad)
loop
out
pop
call
pop
push
enter
xchg
daa
arpl
push
fisttp
lods
fist
xor
ffreep
cwde
push
call
push
and
imul
addr16
ss
aas
dec
out
int3
clc
dec
mov
outs
lods
fbld
ins
mov
cmp
and
cld
mov
fwait
xchg
addr16
cmps
push
xor
repnz
cdq
jo
or
mov
jo
sbb
in
adc
mov
cwde
(bad)
xlat
cdq
pop
lods
add
inc
cmp
fild
in
inc
sbb
adc
out
(bad)
and
mov
adc
imul
adc
push
mov
jg
push
push
dec
(bad)
push
loop
adc
(bad)
js
cwde
popf
jno
les
inc
clc
push
int
cmp
cwde
or
aam
shl
imul
xchg
lock
jns
mov
(bad)
(bad)
mov
(bad)
or
inc
aam
loope
daa
fxtract
rcl
jne
mov
nop
push
ins
sbb
add
jge
call
adc
sbb
fild
and
cmp
std
push
inc
adc
out
out
xchg
mov
adc
fcomi
les
mov
or
cmp
and
jno
xor
(bad)
cld
xor
fwait
test
aas
sub
or
push
cli
sub
add
test
adc
add
and
adc
loope
aas
push
xchg
xchg
daa
arpl
dec
jns
jb
xchg
push
shl
mov
inc
jnp
pop
mov
movs
and
dec
xchg
lahf
cmc
sbb
adc
arpl
inc
sti
popfw
jecxz
test
jecxz
movs
add
mov
leave
lahf
lahf
jp
movs
inc
data16
push
xor
outs
into
stc
call
pop
mov
xlat
push
mov
mov
mov
lds
aad
es
inc
mov
aad
repz
mov
mov
inc
push
aas
popf
and
pop
sub
bound
or
jnp
and
mov
pop
jecxz
and
sub
inc
xor
inc
ins
leave
push
xor
push
cmp
stos
adc
xor
adc
push
mov
popa
ins
scas
(bad)
test
jbe
jmp
jle
ret
inc
shl
inc
pop
inc
dec
add
ret
xor
stos
stos
adc
mov
mov
icebp
popa
pop
arpl
std
cmps
fsubr
xor
cwde
lods
in
imul
push
outs
stos
xor
jae
push
sub
je
cs
test
sub
mov
in
mov
fprem
add
mov
fnstcw
movs
push
into
add
dec
cld
or
push
dec
xor
mov
femms
out
scas
je
imul
in
push
jb
inc
test
das
in
les
loope
movs
out
mov
or
xlat
ficom
mov
mov
sar
push
ret
shr
sbb
pop
(bad)
idiv
sbb
bound
jb
mov
xchg
fdiv
movs
lds
hlt
shl
(bad)
out
cwde
dec
hlt
stos
in
add
adc
loopne
xchg
ins
xchg
pop
mov
aad
mov
adc
xlat
arpl
bound
ret
les
(bad)
not
mov
cld
lahf
ins
cmp
mov
iret
adc
shr
jmp
data16
mov
jl
sti
jge
jmp
out
pop
bound
sub
push
mov
xor
sbb
xor
cmp
mov
or
cld
fsubr
and
jnp
test
sub
jl
push
and
loopne
push
fs
sub
enter
nop
jp
mov
add
pop
ret
cmps
ret
sub
iret
(bad)
fdivr
xlat
shl
mov
mov
add
sahf
push
xor
sub
push
bound
cmp
adc
outs
xchg
clc
xor
jb
icebp
popf
xchg
mov
inc
and
fisttp
mul
jmp
int3
idiv
shl
inc
add
adc
jge
adc
cld
or
mov
(bad)
jb
sti
in
test
ret
je
jo
mov
popa
and
add
lahf
push
jecxz
push
xor
into
movs
jb
cmps
dec
jo
scas
out
push
and
jnp
je
pop
int
nop
in
rcl
pop
sub
aas
lods
mov
adc
shl
fild
sbb
pop
je
aaa
shl
and
dec
push
add
add
arpl
inc
pushf
sar
call
arpl
mov
cmc
imul
inc
xor
mov
popa
xlat
jbe
mov
adc
inc
sub
xor
ss
mov
pop
xchg
nop
xchg
jmp
jbe
push
mov
enter
lea
push
add
push
mov
cmp
dec
dec
mov
mov
ins
sbb
inc
fdivr
and
mov
jmp
cwde
test
pushf
cmps
fdivr
stc
adc
or
gs
into
dec
cmp
sub
popf
int
shl
lds
rep
sti
sub
inc
cmp
dec
in
dec
in
or
pop
adc
mov
jp
shl
(bad)
sub
test
nop
stos
mov
arpl
out
inc
aad
cld
and
lock
mov
call
and
sub
into
pop
xchg
cld
adc
out
clc
jmp
fld
test
xchg
ins
cs
hlt
jb
cmp
jae
cs
sbb
movs
imul
or
xor
xor
mov
ins
mov
dec
cmps
(bad)
stc
je
inc
inc
xchg
jno
xor
push
sbb
mov
lods
dec
in
addr16
cmp
int3
pop
arpl
ins
pop
mov
loopne
pop
outs
mov
ret
stos
push
je
gs
push
or
dec
ds
sbb
jbe
mov
adc
nop
ins
into
jmp
sub
mov
jl
xchg
inc
es
lock
dec
mov
rol
popa
mov
arpl
mov
in
pop
lock
push
dec
adc
and
mov
test
(bad)
dec
fadd
adc
add
dec
pop
cmp
fcmovne
ror
push
dec
dec
inc
out
push
cld
pop
or
jnp
fldenv
outs
add
add
push
push
mov
add
xchg
cmc
mov
fadd
in
xchg
adc
xchg
cwde
icebp
sar
pop
pop
dec
push
movs
out
add
sub
sbb
mov
lock
das
nop
dec
cmp
call
enter
out
movs
ret
push
inc
pop
mov
imul
mov
cs
mov
cmp
push
stos
and
ja
and
imul
clc
popa
(bad)
shr
or
clc
in
call
mov
jne
xchg
mov
dec
pop
xchg
cmp
addr16
adc
mov
scas
and
mov
lods
fst
sbb
push
push
shr
adc
(bad)
outs
pop
shr
push
xor
adc
mov
clc
idiv
iret
jnp
mov
adc
adc
or
push
lods
and
test
or
mov
mov
dec
iret
sbb
mov
jb
or
fld
nop
test
(bad)
shr
retf
xchg
lea
cmp
cli
jno
aaa
cmp
pop
sbb
fistp
push
sahf
lea
rcr
add
mov
mov
mov
inc
adc
popf
mov
inc
cmps
xor
or
cmps
dec
pop
fwait
xchg
mov
ret
xor
in
pop
je
mov
mov
push
or
test
xchg
pop
gs
or
rol
sub
(bad)
jge
sub
jb
out
popa
push
movs
(bad)
push
and
mov
mov
sbb
mov
mov
push
adc
dec
inc
or
push
lock
mov
sbb
es
test
loopne
cmp
cmp
and
mov
pop
sub
daa
pop
pop
ins
inc
mov
out
push
pop
add
push
test
inc
add
stos
mov
mov
lods
xlat
je
test
inc
js
movs
ds
xor
shl
mov
daa
js
mov
xchg
mov
push
sbb
shr
and
push
mov
repz
cld
push
jl
pop
pop
mov
and
mov
mov
sub
lahf
xchg
inc
cmps
(bad)
div
mov
addr16
xchg
dec
mov
lock
cmp
mov
push
jne
cmps
mov
loopne
scas
pop
adc
sbb
xchg
popa
fild
and
call
push
xchg
xchg
lods
out
sbb
repnz
cdq
cwde
outs
cmps
push
cmps
sbb
rcl
jo
repz
xor
cmps
dec
scas
daa
or
enter
xchg
mov
cmps
and
push
sub
call
out
mul
ja
and
xor
mov
mov
adc
mov
and
shr
ret
mov
(bad)
clc
test
xchg
stc
xor
push
lods
jmp
mov
imul
and
inc
sbb
movs
ja
leave
pop
push
sar
test
mov
jl
ret
and
bnd
rcl
popa
xchg
rcl
adc
xchg
pop
mov
add
mov
daa
test
ins
dec
add
sbb
mov
loop
push
xchg
nop
sar
jmp
into
jge
ds
out
lds
repnz
ret
loop
mov
aas
stos
or
retf
fwait
pop
add
rol
(bad)
int
es
mov
sbb
push
ds
(bad)
nop
sub
int3
mov
sub
adc
dec
cmp
cmps
punpckhwd
inc
outs
mov
aam
popa
adc
add
or
xlat
or
test
jp
lods
mul
call
pop
mov
sub
sbb
push
sub
mov
icebp
ret
loopne
cli
mov
sub
pop
jns
jmp
adc
fwait
bnd
sbb
xchg
mov
mov
push
aas
mov
mov
cmps
fisub
mov
clc
repnz
scas
ror
scas
xchg
pop
sar
out
push
lods
adc
push
push
inc
or
jle
add
mov
rcl
ins
out
mov
add
sahf
sbb
out
cmp
std
jle
adc
add
sahf
and
mov
out
mov
sub
in
pop
out
or
push
clc
imul
jae
test
out
jno
dec
mov
mov
popf
sub
dec
sbb
sub
pushf
cmp
sti
nop
or
sub
add
ins
in
dec
inc
into
xor
inc
adc
mov
xchg
pop
sti
mov
bound
jmp
aaa
mov
jbe
outs
push
into
(bad)
cmp
ja
push
inc
stos
cmps
cmps
adc
jne
jne
or
out
xlat
mov
shr
mov
mov
call
dec
pop
adc
rcr
stos
movs
mov
mov
fst
and
push
adc
pop
je
rcl
push
fsub
cmp
scas
outs
pop
dec
mov
and
xor
jae
mov
js
push
mov
sbb
mov
fadd
push
stos
or
imul
jge
xor
or
sub
fwait
popf
add
add
xlat
ret
ins
push
adc
pop
inc
push
sbb
sub
ins
loope
cmp
nop
xchg
in
repz
push
mov
push
xchg
xchg
push
test
xchg
ins
out
pop
adc
cmps
mov
fs
xchg
xchg
mov
dec
adc
mov
xor
stc
aad
sub
icebp
adc
ret
fimul
loop
xchg
arpl
sub
xor
retf
jmp
mov
lahf
add
movs
and
adc
mov
or
lahf
aas
jle
cmc
cmps
cli
sbb
xor
cdq
cmps
(bad)
(bad)
sub
aad
add
push
loope
xor
popa
inc
(bad)
cmps
test
sbb
xor
add
push
dec
int3
aas
push
dec
in
add
xlat
(bad)
and
(bad)
add
pushf
mov
pop
scas
inc
jl
push
in
push
icebp
into
mov
cmp
stos
push
test
and
dec
push
stc
xor
(bad)
enter
addr16
lea
idiv
(bad)
xchg
lock
lea
stos
dec
enter
cmps
stos
scas
(bad)
ins
add
dec
loopne
cmps
lds
inc
mov
push
fst
sbb
jmp
push
in
sahf
call
lods
out
xchg
push
stos
push
jecxz
mov
inc
je
add
int
cmp
add
mov
ja
xlat
mov
sub
xor
cld
ds
pop
jnp
cmp
aaa
(bad)
imul
movs
stc
sub
mov
gs
pop
mov
inc
out
clc
mov
add
(bad)
xchg
mov
xor
xchg
fidivr
sbb
das
cli
int3
sub
loope
adc
and
cmp
xchg
rcr
and
in
mov
lock
pusha
in
or
mov
mov
(bad)
lea
test
push
jo
sub
cmp
test
mov
adc
adc
xor
fwait
inc
mov
in
pop
or
enter
ins
ins
push
daa
push
lods
dec
sub
pushf
jne
aaa
mov
jo
movs
lods
in
js
mov
inc
int
inc
in
xor
xchg
sub
loop
push
je
and
js
add
inc
adc
pusha
add
iret
mov
jbe
jae
loop
ss
in
mov
sbb
out
mov
adc
dec
push
daa
jmp
xchg
adc
mov
jp
lahf
jmp
jnp
push
repnz
and
add
pusha
mov
xchg
adc
test
xchg
inc
xor
fidivr
or
fisttp
cli
adc
mov
mov
repnz
call
pop
jne
mov
jecxz
lds
icebp
test
mov
pop
jecxz
pop
leave
jl
loope
mov
repnz
jp
jmp
out
pop
ins
stc
push
xchg
jle
lds
call
mov
cmp
cmc
arpl
leave
mov
mov
jne
mov
aam
inc
xchg
fldcw
push
mov
xchg
mov
push
mov
pop
mov
inc
in
pop
test
jb
jp
and
jb
lahf
push
lods
fisttp
popf
xor
movs
out
sbb
into
and
pop
mov
fimul
outs
fwait
stc
adc
or
sbb
push
retf
add
sub
lods
imul
sbb
repnz
out
dec
cmp
add
not
es
(bad)
mov
xchg
xchg
movs
scas
test
pop
jle
xor
loope
imul
or
sti
stos
cmps
hlt
or
in
int
mov
out
lahf
jecxz
movs
repnz
xchg
xchg
jecxz
jb
dec
(bad)
popa
mov
les
mov
jo
(bad)
push
xchg
push
pop
add
pop
mov
push
push
mov
lods
sub
enter
stos
pavgw
mov
ins
xchg
ss
lds
into
lock
and
in
imul
xchg
xchg
sub
movs
pusha
loop
lahf
push
popa
adc
fisubr
ja
cmp
push
out
dec
add
stc
push
jno
mov
mov
sub
pop
or
ja
rcl
add
ret
mov
inc
and
repnz
sbb
inc
into
add
and
jp
fwait
inc
outs
dec
xchg
neg
xor
push
mov
push
mulps
cmp
pop
retf
xor
push
xor
add
adc
adc
inc
adc
mov
jl
pop
mov
push
or
ds
ret
xor
repz
jle
out
fisubr
add
push
gs
test
add
pop
fxch
test
test
lahf
imul
sub
dec
dec
pop
or
lods
or
(bad)
xchg
jae
jb
in
daa
push
leave
xchg
push
ficom
dec
repz
jle
dec
xchg
inc
add
cli
dec
adc
sbb
cld
sahf
into
ficomp
fmulp
ja
fistp
adc
jmp
fucomi
outs
or
stos
xchg
jo
dec
in
push
sub
cli
popf
test
and
jbe
popf
movs
jle
ja
jl
inc
mov
xchg
dec
push
sub
inc
shl
(bad)
push
inc
enter
cmp
test
fs
rep
movs
add
fdiv
dec
lods
mov
cld
sbb
dec
lods
call
jmp
gs
shl
sahf
popa
addr16
out
pop
inc
mov
cmp
mov
adc
push
in
sub
cdq
pop
mov
jl
cld
sahf
sub
es
sbb
sbb
test
inc
add
imul
dec
jecxz
dec
cdq
pop
icebp
arpl
(bad)
clc
push
add
jae
inc
sti
stos
movs
cmp
cmps
out
popa
inc
dec
add
xchg
sub
xor
in
xor
cmps
dec
out
imul
fdivr
icebp
vmovd
adc
inc
rcl
and
jge
xchg
jecxz
xlat
push
in
xchg
pop
js
mov
stos
call
(bad)
jmp
xchg
jg
leave
cmp
or
loopne
fadd
dec
mov
inc
or
xchg
and
cmp
dec
(bad)
mov
sbb
clc
mov
push
or
imul
imul
aam
sar
xor
cmp
fld
push
(bad)
xchg
daa
dec
pop
sub
mov
adc
mov
and
add
and
fsubrp
xchg
fs
mov
xor
pop
loopne
into
push
popf
dec
in
ins
sti
and
push
nop
adc
call
stc
(bad)
jno
bound
xor
cmps
mov
sub
ficomp
pop
and
leave
leave
mov
in
call
sub
and
inc
dec
or
std
push
test
push
push
gs
jmp
aaa
push
in
xor
xchg
or
cmp
jle
movs
popf
mov
xchg
adc
ss
loope
div
jns
xchg
inc
push
jb
addr16
addr16
lods
cmp
jnp
sbb
test
call
cmp
or
outs
push
pop
xor
push
inc
cmc
adc
call
into
gs
clc
sub
idiv
shl
and
(bad)
je
cmp
nop
int3
ss
and
dec
retf
xchg
popf
idiv
inc
push
xchg
(bad)
mov
or
jecxz
ds
sub
in
call
popf
test
inc
loope
popf
sub
addr16
push
enter
jne
(bad)
lsl
inc
adc
mov
into
jmp
inc
xchg
xor
outs
cwde
push
call
adc
outs
pop
lock
int
sbb
sahf
ret
xor
or
sbb
lods
pop
mov
sbb
jns
pop
and
out
sahf
out
inc
cmc
repz
fs
push
mov
push
repnz
imul
enter
outs
mov
mov
mov
mov
scas
fs
cmps
je
add
and
xor
out
data16
and
jecxz
fs
(bad)
fs
fwait
mov
push
mov
add
out
mov
pop
pop
fst
test
and
arpl
jg
fsubr
rcr
jae
in
fcmovb
sar
mov
dec
add
jmp
cmp
pop
push
out
mov
jns
ins
xor
jb
jns
and
cmps
push
adc
push
adc
leave
mov
rcl
pop
pop
and
arpl
dec
leave
dec
pop
sub
xor
vpcmpeqd
outs
pop
es
mov
sar
mov
cmp
popf
or
xor
outs
push
jmp
xor
inc
pop
cmps
rol
adc
ins
test
and
lods
loope
cli
jno
sahf
sub
push
xchg
je
int
movs
(bad)
mov
lock
lds
adc
mov
(bad)
mov
push
(bad)
daa
out
xchg
dec
add
ss
stc
dec
cdq
jb
dec
jecxz
mov
and
or
jp
imul
(bad)
aam
into
(bad)
jns
pusha
jb
dec
out
ins
add
es
lock
fisub
xchg
xchg
lock
inc
push
int
sub
jno
push
push
xor
cmp
adc
mov
add
ins
out
or
mov
jo
inc
cli
in
dec
iret
add
int
nop
out
add
or
ror
in
xor
fidivr
and
fisttp
push
sbb
push
jmp
adc
jns
outs
adc
push
fist
jbe
clc
cwde
adc
imul
and
aam
mov
xor
jl
ins
sbb
out
mov
cmp
dec
and
push
jmp
push
les
xor
enter
in
push
or
push
sar
xlat
ror
sub
loopne
mov
sub
dec
das
rcl
fidiv
adc
ss
cli
mov
push
push
xor
pop
dec
mov
lock
xor
outs
inc
lods
mov
adc
sar
inc
call
ins
ss
or
fisub
in
movs
dec
xchg
sub
test
adc
scas
mov
xor
jmp
sub
jns
mov
cld
(bad)
fmul
call
add
xchg
or
ins
das
repnz
mov
ror
fsubrp
call
les
iret
push
jecxz
xlat
push
or
stos
shl
sti
or
and
mov
sub
push
nop
xor
int
mov
inc
sbb
pop
xchg
mov
popa
pop
cmp
je
test
enter
mov
scas
pop
daa
push
lea
push
icebp
(bad)
test
div
inc
jmp
std
xchg
adc
int3
rol
push
jmp
outs
sbb
mov
scas
mov
or
mov
(bad)
addr16
cmp
mov
push
mov
adc
push
shl
push
mov
jge
movs
(bad)
or
jb
inc
jecxz
mov
inc
ret
push
int
inc
out
clc
imul
in
jg
mov
int3
out
stc
mov
(bad)
xchg
mov
ret
xchg
lock
call
mov
sub
scas
jne
cmp
and
call
push
jmp
add
cmp
jne
mov
lahf
push
pop
dec
sahf
(bad)
cs
inc
pop
xchg
pop
jno
leave
cmp
push
and
inc
kmovw
in
shl
pop
loope
repnz
ss
adc
add
enter
stos
lock
adc
and
sbb
xchg
stos
ror
mov
xchg
mov
dec
stos
cwde
sar
and
mov
pop
push
jae
inc
pop
out
jg
imul
call
in
inc
sub
ins
pop
outs
cli
add
push
hlt
icebp
pop
push
and
mov
mov
or
mov
jp
xchg
xor
imul
pop
dec
inc
stc
(bad)
aam
jno
sbb
or
xor
inc
data16
xchg
add
jl
jmp
fidiv
neg
xchg
out
jl
dec
into
out
test
mov
xchg
nop
pop
stos
mov
movs
call
sbb
shl
test
xor
test
or
xor
add
mov
cmp
xor
in
mov
loop
test
push
dec
fwait
stos
pop
cdq
ja
movs
pop
xor
scas
fbld
add
daa
dec
dec
and
mov
sbb
into
xchg
cdq
mov
add
add
outs
push
dec
fcom
cld
call
xchg
das
(bad)
xor
daa
ret
aam
fwait
retf
jnp
scas
push
fsub
jmp
xor
pop
sbb
mov
mov
shl
pop
fcmovbe
push
lock
jb
imul
mov
jle
or
xchg
lds
mov
sub
outs
pop
mov
push
add
dec
cmc
xor
in
xor
add
test
das
outs
retf
mov
add
pop
fisub
(bad)
cmp
rol
pop
dec
std
inc
jno
mov
in
cmp
sahf
cmps
cmp
push
arpl
lods
sbb
xor
ss
mov
mov
nop
(bad)
test
lods
ss
cmp
xchg
retf
and
lods
daa
adc
pop
lds
adc
fstp
push
mov
xchg
or
xchg
jp
adc
push
daa
push
test
cmps
ret
les
dec
aad
repz
pop
and
outs
or
pop
push
sub
(bad)
sti
retf
fcom
aad
cmp
enter
fucomi
add
fld
movs
cmp
jns
idiv
lds
pop
mov
stos
or
movs
idiv
dec
ret
inc
outs
js
adc
pop
fst
cmps
test
pop
cmp
iret
jne
fwait
jmp
les
dec
pop
cmp
popf
cdq
fs
xor
fldenv
rcr
mov
inc
add
(bad)
sahf
daa
out
mov
sahf
in
and
fimul
cmp
pop
dec
mov
xor
cmps
arpl
imul
dec
xor
dec
repnz
inc
shl
fiadd
jbe
aaa
or
sbb
mov
iret
pop
or
sbb
ffree
int3
and
mov
mov
mov
or
xchg
outs
cld
in
nop
push
(bad)
pop
das
movs
data16
ret
jo
inc
dec
or
or
fist
sar
xor
mov
fwait
mov
push
dec
xlat
fdiv
mov
mov
pop
sbb
and
enter
je
iret
lea
movs
sbb
jno
push
lahf
cld
aam
int
push
jns
fcom
lock
scas
mov
jecxz
xchg
push
mov
inc
js
xchg
pop
jo
loopne
das
adc
mov
mov
fist
pop
and
and
pop
mov
cmp
popa
inc
adc
(bad)
fistp
mov
imul
lock
mov
adc
jb
dec
popf
sbb
cmp
or
and
xor
lea
loopne
test
jbe
sub
jnp
xor
xchg
mov
adc
add
fcmovne
ins
cmp
and
mov
mov
mov
repz
sti
(bad)
rcr
popf
ror
cmp
mov
mov
aaa
js
and
mov
mov
mov
push
push
popf
inc
out
retf
shl
push
or
fdiv
jecxz
leave
mov
mov
pushf
push
repz
xor
pop
pushf
add
add
dec
inc
or
pop
pop
sub
in
dec
mov
add
movs
sbb
in
sbb
leave
loope
mov
adc
cmp
jle
inc
scas
ins
jae
rcr
jno
add
outs
dec
(bad)
pop
ja
pop
mov
dec
scas
int3
mov
shl
pop
jne
lahf
inc
int
jmp
scas
xor
inc
pop
cmc
inc
xlat
shr
mov
test
cwde
adc
xchg
lea
nop
ja
out
fidiv
fistp
stos
cmp
mov
mov
sbb
dec
xchg
(bad)
jmp
rol
push
push
lea
rol
cmc
mov
xlat
or
push
sbb
mov
stos
data16
loopne
mov
cld
and
sub
xchg
add
rcr
bound
add
or
test
retf
out
pop
es
add
cli
push
or
ret
pop
cwde
jmp
jbe
sub
fisttp
add
add
test
in
sbb
aas
sbb
scas
aad
lea
mov
test
sbb
push
int3
dec
sbb
xchg
mov
cdq
das
les
leave
and
jmp
fnsave
pop
in
ja
imul
les
add
pop
jp
jmp
pop
push
mov
adc
jl
stc
add
retf
std
popa
pop
test
or
mov
dec
add
popf
mov
lods
ins
xchg
sbb
iret
rol
imul
pop
sbb
sub
repz
mov
add
clc
test
stc
loopne
rol
loope
out
or
mov
in
and
(bad)
sti
sub
xlat
sub
xchg
mov
sbb
in
retf
outs
cmps
pushf
dec
aam
add
mov
fadd
addr16
inc
sbb
pop
sbb
es
jmp
jns
push
cmp
ffree
cmp
adc
test
jne
les
iret
pop
mov
es
jb
dec
mov
or
jmp
or
mov
mov
mov
adc
cwde
add
mov
jg
xchg
shr
and
or
jmp
pop
jne
add
xor
mov
pop
adc
jmp
stc
push
mov
jmp
cmp
sbb
test
mov
mov
scas
add
test
es
scas
ins
and
loope
iret
and
int3
jb
mov
shl
inc
dec
mov
adc
enter
fdiv
out
(bad)
movs
jno
std
in
loop
xor
xchg
std
sbb
inc
ins
pop
movs
call
ja
mov
pop
xchg
and
xor
inc
xor
xchg
movs
mov
jo
mov
adc
cmps
shr
mov
lds
iret
test
cmp
cdq
test
(bad)
jl
(bad)
jl
(bad)
inc
inc
xor
das
xchg
or
push
sub
test
fucomp
cmp
jp
ins
punpckhbw
sbb
dec
sub
push
mov
pop
inc
dec
ins
mov
jno
lock
ins
dec
fmul
fldcw
add
gs
sbb
test
int3
into
cmc
shl
movs
mov
jnp
test
inc
iret
retf
hlt
cmc
mov
dec
pop
scas
jo
or
sbb
into
loope
arpl
mov
fisub
add
js
pop
mov
lock
paddsw
inc
adc
and
loope
mov
cmp
test
loopne
and
cmp
mov
scas
xor
(bad)
(bad)
cmps
adc
sti
(bad)
pop
aaa
xor
push
cmc
rol
inc
(bad)
fist
fdivr
mov
xor
rol
cmp
inc
dec
xor
fst
sar
mov
sbb
mov
out
cs
xchg
sub
xchg
adc
dec
in
idiv
and
mov
rcl
test
jle
lds
in
xor
xchg
cmp
lahf
fs
and
icebp
stos
and
push
mov
jp
pop
pop
enter
mov
pop
leave
(bad)
fstp
mov
jbe
dec
add
cdq
xchg
jecxz
repz
pusha
movs
mov
sbb
stos
loope
outs
jnp
jmp
je
pop
es
jae
out
fidivr
into
aas
int
nop
mov
sub
in
(bad)
ror
scas
pop
cdq
adc
dec
xor
mov
cmp
std
shl
ja
jns
adc
test
aad
xchg
cmp
ja
dec
xchg
inc
imul
loopne
fstp
inc
xor
mov
mov
fwait
mov
out
gs
in
xor
pop
retf
pusha
cmps
adc
ss
cmp
inc
je
xchg
enter
mov
movd
sub
jmp
mov
jle
xchg
push
ins
mov
cmp
inc
sub
jmp
mov
dec
mov
fld
cmc
mov
jle
addr16
inc
mov
sub
pop
movs
scas
inc
cld
push
sbb
mov
pop
sbb
cwde
out
pop
hlt
mov
sahf
push
lods
jnp
pushf
push
in
dec
xor
adc
jb
sub
mov
jle
xor
pop
cmp
mov
add
push
outs
and
fisubr
jno
ss
scas
pop
xor
(bad)
sbb
pop
sbb
and
into
ret
inc
aas
out
and
imul
inc
daa
shr
(bad)
jmp
js
or
pusha
mov
out
dec
cmps
jmp
mov
mov
xchg
pop
cli
sub
(bad)
pusha
(bad)
mov
mov
cmp
mov
in
pop
ins
movs
stc
mov
xor
add
cmp
fwait
jnp
mov
fmul
test
cmp
mov
jns
push
push
xchg
clc
and
jb
push
xor
out
(bad)
xchg
dec
inc
push
push
pop
(bad)
popa
mov
sbb
stc
cmp
jle
mov
mov
cmps
adc
jge
out
xor
push
fs
xchg
addr16
mov
(bad)
jmp
or
or
mov
and
dec
sub
mov
inc
sub
pop
dec
jne
adc
mov
retf
(bad)
cmp
pop
xchg
nop
bound
jb
xor
(bad)
jo
mov
push
or
mov
inc
cmps
mov
xor
(bad)
cmc
test
test
sbb
out
dec
fisttp
out
jmp
loope
xlat
fldcw
mov
out
mulps
out
xor
not
mov
mov
adc
sbb
xor
add
push
pushf
adc
icebp
mov
xchg
mov
pushf
push
or
xchg
movs
mov
cmp
cli
test
cmp
push
mov
xlat
shl
nop
pop
or
dec
dec
stc
enter
sbb
mov
push
push
lahf
dec
lds
and
enter
push
ins
(bad)
popa
sbb
pop
lods
icebp
fsubr
test
mov
ret
cmps
cdq
cmps
cmc
sub
sbb
xor
xor
pop
shl
push
neg
dec
mov
sub
add
or
cwde
cmp
inc
rcr
and
dec
push
pushf
pop
test
add
xchg
xchg
(bad)
out
call
xchg
in
inc
mov
loopne
out
sbb
cmp
cld
or
cmp
cmp
jp
stc
lds
int
mov
ins
mov
test
stos
cs
adc
or
add
std
lods
sub
jb
icebp
(bad)
jo
bound
add
into
ficom
mov
push
cwde
jne
mov
mov
and
mov
inc
out
scas
push
push
mov
lods
add
stc
cmp
loope
cmps
fdiv
das
retf
mov
mov
test
add
mov
pop
inc
mov
mov
aad
dec
fisttp
xchg
out
popa
jecxz
std
rcl
fbstp
test
sbb
shl
xor
or
and
inc
cmp
jecxz
jp
mov
adc
cmp
or
adc
pop
jne
fcmovnbe
in
push
dec
ss
test
adc
ror
out
mov
js
xchg
cli
das
inc
bound
push
pop
rcr
out
mov
push
mov
jae
or
dec
fwait
(bad)
push
ins
out
inc
jno
xor
inc
mov
test
in
fwait
ja
jae
pop
ss
loope
sub
xchg
and
test
clc
das
loop
mov
cld
or
cmc
jle
ror
mov
fist
sahf
mov
jp
mov
jnp
sbb
es
dec
movs
mov
or
in
cwde
fcomi
aas
inc
scas
outs
gs
push
add
mov
push
sahf
(bad)
push
inc
sub
inc
push
dec
mov
mov
and
aad
jp
cmp
(bad)
(bad)
in
dec
pop
(bad)
sbb
adc
(bad)
out
dec
sub
call
add
xlat
(bad)
std
lods
mov
adc
addr16
cmps
ficom
pushf
xchg
push
sub
hlt
cmps
and
jl
cmps
scas
or
sahf
(bad)
inc
int
inc
das
and
shl
mov
mov
pop
dec
call
push
jne
jb
sbb
in
test
lods
mov
or
movs
dec
and
cmp
sub
outs
scas
jnp
mov
pop
mov
xchg
mov
mov
cld
jbe
imul
jns
mov
inc
aaa
ins
(bad)
inc
hlt
push
xor
lods
pushf
jecxz
imul
push
stos
and
mov
cmps
cld
ins
inc
ja
dec
rol
and
and
fs
mov
into
cmps
sbb
cmp
pop
push
fisubr
fwait
pop
mov
inc
shr
and
and
inc
mov
pop
mov
pop
or
loope
jne
dec
call
les
add
mov
fwait
mov
outs
xlat
imul
sub
jo
pop
xchg
ja
in
jecxz
pushf
pop
jg
ficom
jo
fwait
pop
leave
retf
scas
sub
push
call
into
add
ins
pop
cmps
push
fwait
inc
push
xor
push
cmps
pushf
jbe
push
inc
test
jl
shr
ins
out
xlat
arpl
mov
enter
in
shr
xchg
pop
aaa
mov
popf
jnp
outs
fsub
or
xor
and
jg
dec
and
jl
ins
nop
add
test
cmp
xchg
dec
pop
jg
retf
pusha
fdivr
retf
aaa
and
push
push
pop
(bad)
imul
stos
sub
fnstcw
sub
mov
lea
xor
and
xlat
mov
push
mov
test
mov
inc
test
pop
dec
sbb
dec
inc
sar
mov
inc
not
pop
retf
les
add
test
dec
dec
add
test
lock
in
xchg
scas
enter
mov
mov
rcr
jmp
push
mov
add
imul
retf
addr16
imul
add
adc
jmp
or
push
xchg
in
and
loope
sar
dec
out
test
sahf
in
add
repnz
mov
push
in
xchg
xchg
sahf
add
xor
neg
iret
add
cmp
push
adc
mov
and
xchg
jecxz
xor
(bad)
loope
dec
rol
jmp
xchg
pop
fdivr
lods
imul
pop
loope
and
lea
daa
int
sbb
imul
mov
clc
sub
and
mov
movs
or
pop
in
dec
fs
shl
mov
pop
test
shl
outs
idiv
push
sub
add
adc
in
and
test
pop
(bad)
(bad)
mov
out
xchg
mov
xchg
mov
mov
test
popf
mov
cmp
pop
in
das
popa
or
clc
xor
and
hlt
imul
mov
mov
cmp
clc
push
pop
ds
outs
jle
pop
pusha
mov
dec
popa
push
lea
adc
mov
enter
inc
ret
xchg
popf
and
test
call
mov
dec
rol
pop
mov
pop
push
and
outs
mov
and
xor
test
xor
test
mov
rol
mov
int3
nop
cmp
jbe
sbb
popf
push
lea
imul
repz
movs
push
or
jl
in
adc
sub
fisttp
mov
aaa
add
push
xchg
jbe
dec
xor
aas
xor
int3
int3
mov
lea
mov
jg
or
mov
mov
adc
xchg
ret
xlat
(bad)
scas
sbb
dec
mov
movs
cdq
fcomip
icebp
fld
cmp
test
add
retf
push
cmc
cmc
jl
lock
ror
pop
retf
ins
xchg
jns
or
fnsave
stc
dec
test
in
jle
mov
xor
sbb
sub
xlat
xor
xor
mov
test
cmp
xor
icebp
icebp
ror
mov
xor
test
retf
and
xor
push
mov
pop
fiadd
pop
test
jo
add
sbb
cmp
(bad)
inc
cmc
shl
push
jno
leave
or
jmp
int
push
push
mov
inc
into
lods
setl
and
(bad)
jae
and
jne
dec
aaa
ins
cs
std
je
jnp
mov
aaa
xor
(bad)
out
xor
movs
fadd
mov
dec
cmp
mov
(bad)
mov
test
pop
(bad)
pusha
and
out
add
xchg
push
mov
adc
js
fdiv
fadd
data16
mov
jnp
nop
mov
adc
mov
sbb
xor
jae
xchg
sbb
jge
jle
sub
test
aas
push
xchg
mov
push
retf
jp
enter
rol
cmp
stc
jl
mov
pop
(bad)
loopne
call
pop
push
loope
(bad)
xor
hlt
fwait
xor
inc
xchg
adc
sbb
inc
mov
pop
sub
xor
outs
in
xchg
fisubr
push
in
dec
mov
cmp
popa
shl
mov
dec
shr
cmp
inc
repnz
sub
xor
in
int3
ins
sub
pop
mov
rol
xchg
add
add
pop
icebp
adc
popa
loop
pop
jae
sub
push
pop
fs
call
in
pop
stos
das
outs
lds
ins
popa
or
pop
lock
out
fwait
and
shl
lock
imul
leave
cmp
call
mov
jmp
cmc
retf
popf
repnz
inc
push
fisttp
ss
pop
iret
xchg
jo
mov
enter
adc
mov
shl
push
leave
mov
xor
lods
dec
ins
sub
xchg
int3
nop
mov
repnz
add
jmp
test
sbb
scas
test
shl
and
(bad)
call
imul
les
mov
ror
cmc
adc
sub
ret
mov
scas
or
(bad)
adc
in
jl
test
or
imul
inc
cmp
lods
shl
add
out
pop
sub
xchg
xor
or
je
mov
pusha
jbe
push
scas
stc
jge
jg
inc
xchg
adc
push
sbb
add
mov
add
push
push
loopne
stos
popf
ins
jbe
xor
pop
mov
call
push
test
add
mov
lds
push
dec
push
xor
xchg
mov
push
xor
and
xchg
jno
(bad)
mov
jnp
(bad)
(bad)
movs
aam
xor
mov
push
xchg
fsubr
sahf
lods
scas
jg
sahf
xchg
mov
and
adc
mov
jnp
xor
aad
mov
out
outs
sub
dec
ret
push
(bad)
pop
sub
add
xchg
nop
pop
fidiv
imul
or
adc
mov
pop
adc
cmove
aaa
mov
cmp
push
dec
retf
jmp
mov
imul
(bad)
in
add
sub
mov
ja
add
mov
fstp
fstp
dec
mov
icebp
ret
mov
rcl
pop
inc
xor
std
sbb
mov
dec
or
sbb
aad
addr16
es
adc
mov
jle
out
or
cwde
jmp
cmp
jae
mov
outs
(bad)
lock
into
test
out
out
jns
ret
ret
jmp
jno
ins
xor
dec
pushf
xor
in
xor
movs
or
(bad)
pop
dec
sbb
scas
mov
xor
cld
add
mov
or
sbb
in
(bad)
jge
(bad)
ins
js
and
shr
int
mov
cmp
jo
daa
adc
add
and
xor
lods
out
dec
and
mov
ret
inc
rol
sar
push
xor
jl
mov
ins
xchg
pusha
jmp
rcl
repz
icebp
data16
xchg
(bad)
rcr
sbb
cmp
jns
sahf
mov
mov
jb
xor
or
in
iret
inc
ins
adc
mov
cs
add
call
cmp
sti
test
inc
inc
ds
movs
push
xchg
xor
out
fstp
popa
out
shl
in
jbe
inc
mov
jmp
mov
xchg
mov
pop
fisttp
jp
es
xor
imul
pop
pop
retf
xchg
and
lods
pop
out
stos
daa
(bad)
pop
je
mov
cmps
in
push
ret
sbb
frstor
imul
aaa
xchg
repnz
jae
jbe
or
test
xor
fadd
lods
es
fstp
adc
mov
or
or
or
mov
pop
sahf
mov
and
sub
sub
and
mov
fucom
fild
pop
test
(bad)
loope
xor
inc
sbb
or
addr16
jp
outs
jbe
push
pop
add
xlat
loope
mov
inc
outs
into
sub
out
int3
jge
sar
inc
shl
sub
dec
hlt
xlat
and
mov
xlat
mov
push
or
cmc
jae
cli
into
(bad)
adc
movs
mov
movs
adc
call
ja
das
ja
jp
test
test
jnp
ror
and
lods
mov
xchg
fs
test
(bad)
out
loope
xchg
mov
cwde
sub
enter
pop
sub
jmp
inc
or
and
xchg
or
sbb
xchg
ds
dec
pop
adc
lds
push
in
je
inc
inc
mov
dec
ja
stos
call
call
arpl
loopne
dec
(bad)
pop
std
cmp
and
mov
add
fimul
add
add
mov
push
sub
data16
lahf
mov
jmp
xchg
out
scas
inc
jnp
dec
mov
leave
add
mov
movs
pop
jecxz
cmp
xchg
fisub
das
scas
pop
jno
pop
mov
lock
dec
push
je
add
dec
outs
(bad)
(bad)
clc
inc
mov
enter
bound
jbe
or
out
in
sbb
loopne
dec
int
mov
push
inc
push
push
in
clc
inc
ja
xor
outs
in
(bad)
fnstenv
inc
inc
push
(bad)
fmul
cli
loopne
rcl
sbb
icebp
sahf
mov
mov
mov
add
cdq
loope
push
jmp
iret
into
cmps
test
and
bound
push
add
adc
xor
loopne
ret
das
or
jae
rcr
dec
xlat
adc
jmp
inc
pop
add
(bad)
cdq
popa
adc
or
popa
dec
xchg
push
out
adc
push
push
mov
jns
imul
mov
mov
sbb
es
sub
mov
aad
push
mov
jmp
dec
lahf
or
repnz
(bad)
test
inc
xchg
dec
in
sub
out
push
fnstsw
push
mov
ja
out
pop
add
imul
mov
jae
sub
mov
out
xor
mov
pop
fsubr
push
clc
adc
pop
pop
lds
fld
inc
jno
rol
shl
rol
dec
out
mov
fs
je
loop
dec
inc
test
jmp
jmp
xchg
dec
and
push
ins
stos
mov
je
or
pusha
das
dec
and
mov
cmp
mov
mov
inc
fs
(bad)
pop
mov
test
jae
sbb
sbb
scas
inc
cs
out
cmc
jg
lods
or
sar
sbb
or
ss
and
push
or
rcl
cli
test
xchg
ds
pshufw
cmp
lea
ds
push
cmp
int
sub
xor
ins
jmp
mov
mov
stos
pop
xchg
ins
dec
fistp
mov
fs
jmp
add
iret
in
fadd
mov
int3
xor
pop
es
jmp
(bad)
adc
jmp
je
aad
(bad)
mov
int3
ins
cmp
sti
enter
pop
aam
out
loop
(bad)
enter
loope
aas
test
lods
sbb
(bad)
pop
data16
scas
sbb
xchg
push
jbe
or
jb
retf
loope
rol
sub
xchg
cmc
out
adc
add
push
je
xlat
mov
call
inc
loop
jmp
cmps
push
ins
adc
int3
add
or
test
push
dec
fnsave
cmc
push
or
cmp
rol
jnp
mov
ins
sbb
or
or
xchg
pop
(bad)
mov
adc
cmps
not
lds
popf
test
call
retf
inc
jae
addr16
inc
pop
jnp
dec
push
push
sar
dec
add
fdivrp
mov
xor
xchg
mov
sub
and
into
dec
jbe
adc
neg
inc
shr
sub
sbb
and
(bad)
das
addr16
inc
jp
out
mov
xchg
mov
fwait
loopne
jne
or
or
fisttp
es
loopne
out
stc
sahf
es
ins
inc
and
inc
js
xchg
jae
mov
ins
sbb
mov
in
cmp
inc
cmp
pop
xchg
sbb
push
retf
pop
fbstp
les
je
inc
jne
aaa
scas
fcomp
mov
call
or
push
xchg
aas
push
mov
xor
mov
push
iret
mov
std
push
shl
mov
(bad)
das
ins
mov
arpl
jns
das
bound
enter
sub
bound
jmp
lods
mov
pop
fdiv
inc
leave
test
aad
iret
leave
sbb
add
add
in
out
sbb
add
sahf
cmp
push
push
mov
scas
jb
or
test
ss
ja
jp
arpl
dec
pop
int3
sbb
mov
mov
out
ins
sub
out
pop
fadd
in
xchg
test
fwait
clc
or
test
fisub
and
xchg
and
fnstcw
fist
push
xchg
and
add
adc
jae
mov
xor
add
and
or
call
outs
stos
pop
mov
jo
and
aam
mov
loopne
call
cli
cmp
stc
jecxz
lods
repz
(bad)
outs
sbb
xchg
xchg
mov
pop
push
sub
call
mov
push
popf
loope
mov
inc
mov
mov
shl
mov
stos
cmc
jne
mov
mov
xor
xor
push
and
mov
out
imul
jne
jge
pop
pop
addr16
pop
mov
sahf
pop
sbb
sbb
push
cmps
sub
push
scas
dec
adc
cmp
add
mov
inc
xchg
ret
ret
in
(bad)
movs
aad
imul
(bad)
iret
jl
add
bound
push
adc
mov
lods
pop
adc
push
retf
das
xor
sub
and
jmp
imul
jp
jns
vcvttpd2dq
push
test
push
in
fstp
ret
ss
das
push
outs
aas
push
adc
dec
call
xor
push
xchg
call
sub
rol
add
addr16
mov
pop
xchg
movs
fcomp
mov
mov
cmc
mov
test
std
leave
clc
fscale
shl
push
fstp
and
or
sti
cmps
push
stc
movs
ror
mov
stos
out
or
dec
xchg
jmp
ficom
adc
mov
mov
hlt
dec
or
lods
addr16
add
mov
or
mov
inc
loopne
mov
ja
xchg
test
push
inc
hlt
repz
jno
lahf
mov
iret
cmp
pushf
test
mov
ins
jno
ja
stos
jbe
popf
push
ds
inc
inc
ror
push
call
call
or
and
shl
enter
test
ins
ins
xchg
out
popf
pusha
cmps
dec
pop
jno
repnz
mov
fsub
lds
fwait
push
(bad)
cmps
and
jmp
js
push
cmc
xchg
and
(bad)
sbb
push
stc
and
es
xor
les
add
inc
mov
push
push
and
cmps
popf
stc
out
mov
iret
push
(bad)
sbb
retf
into
sub
repz
cmps
jae
jne
jge
jae
prefetcht2
sar
mov
lods
pop
test
mov
retf
js
mov
retf
icebp
adc
fucomi
scas
test
xchg
push
(bad)
loope
daa
adc
push
jmp
stos
div
and
and
or
add
push
idiv
dec
fsubr
push
(bad)
repnz
call
mov
fwait
or
pop
jns
jne
mov
push
push
jno
mov
push
dec
sar
inc
call
int
jecxz
add
mov
xor
sub
loopne
sti
fstp
je
pop
retf
push
enter
dec
cld
xchg
daa
in
mov
scas
fdivr
mov
or
test
mov
dec
clc
icebp
pop
fs
fsubr
sbb
repnz
xchg
popa
into
xlat
add
lahf
aam
retf
xchg
sbb
fist
xchg
dec
in
dec
ins
outs
in
outs
call
mov
pop
pop
data16
or
mov
mov
outs
or
cmp
pop
and
and
cdq
fst
mov
sbb
add
jb
sub
sbb
sub
pop
jno
adc
mov
push
pusha
push
mov
mov
in
cmc
movs
outs
imul
xor
jg
les
cwde
or
shr
fistp
test
sti
mov
and
and
stc
fst
inc
xor
cld
pop
xchg
out
and
mov
fwait
xchg
test
adc
sub
pushf
and
adc
std
jmp
je
out
mov
jns
ret
leave
cmp
repnz
mov
les
jecxz
mov
nop
ret
push
cmps
ss
test
or
or
aad
push
adc
popa
jno
fadd
mov
pop
mov
jl
jecxz
pop
test
addr16
sbb
xchg
push
stos
stos
sbb
cld
push
mov
std
push
test
pop
add
xchg
or
cmp
icebp
iret
out
mov
sbb
lods
stos
test
test
adc
cmp
(bad)
fld
stos
shl
cmp
jne
sbb
mov
out
jp
fdivr
test
xor
out
es
push
test
mov
mov
jecxz
mov
mov
xchg
in
gs
xor
sbb
stos
mov
jne
fadd
das
jecxz
outs
xchg
mov
cmp
out
push
jae
sub
mov
shl
fcmovne
mov
cmp
adc
pop
js
cmps
or
ins
loope
and
push
xchg
push
daa
popf
jmp
mov
xor
and
pop
in
jbe
(bad)
sub
push
xchg
(bad)
or
jg
add
gs
out
ss
inc
mov
sub
dec
jg
jo
out
jns
call
mov
push
xchg
popa
pop
add
pop
xor
movs
mov
cmp
sar
icebp
daa
jae
inc
gs
pop
xchg
jmp
repz
je
and
cmp
jmp
loop
aad
jns
call
adc
scas
imul
retf
pop
lds
sar
mov
pop
add
push
lds
loope
out
cmps
xlat
cmps
adc
sub
(bad)
call
jecxz
jno
fwait
pushf
fidiv
ins
pop
jnp
enter
push
fnsave
adc
call
ss
sahf
mov
fs
or
shl
(bad)
pop
test
jg
dec
mov
and
cmp
jecxz
pushf
shl
jo
lea
mov
mov
aam
dec
sbb
mov
ret
jp
xor
cmp
mov
mov
mov
call
fld
xchg
push
inc
das
fistp
test
ror
pusha
xchg
pop
aad
in
out
push
xlat
test
mov
pop
xchg
mov
add
xchg
dec
xchg
jp
test
loope
mov
dec
in
cmps
jp
mov
arpl
jmp
clc
xchg
fs
fwait
cli
lds
scas
ffreep
cmp
stos
in
or
or
push
or
push
es
sub
je
jno
sahf
jg
cdq
push
push
xchg
or
push
into
push
fs
iret
mov
pop
push
enter
jmp
cmc
out
fstp
imul
data16
arpl
pop
in
fmul
adc
cmps
mov
mov
sub
sbb
or
stos
sar
shl
inc
jno
(bad)
sub
add
and
dec
push
xor
scas
push
(bad)
push
mov
popa
sbb
or
out
dec
jb
pop
mov
jl
leave
mov
fbld
outs
sub
xor
mov
pop
cwde
add
(bad)
pop
dec
int
sbb
and
push
aam
cli
stos
pop
sbb
mov
adc
sbb
(bad)
cmp
cmc
cmc
mov
adc
in
aas
sub
pop
add
pushf
dec
test
iret
scas
aam
repz
hlt
xor
icebp
repz
adc
scas
add
inc
and
inc
or
retf
(bad)
sub
or
ins
jb
cdq
mov
cmc
and
xchg
mov
jmp
adc
xor
sub
inc
jbe
(bad)
mov
push
ret
pop
movs
in
pop
pop
stc
mov
aad
mov
retf
jno
out
fwait
sbb
out
sbb
dec
mov
mov
ret
jmp
dec
jae
or
pcmpgtb
inc
leave
dec
add
nop
pop
ins
xchg
mov
push
cmp
sub
inc
push
mov
cmp
push
repnz
jnp
cmp
lea
inc
xchg
xor
mov
xor
pop
sbb
adc
pop
sahf
cmps
cwde
(bad)
xchg
out
(bad)
dec
test
pusha
jae
cmp
add
fnstenv
add
xor
mov
xchg
xchg
add
sar
test
outs
and
stos
cmp
mov
mov
and
add
sub
stc
sub
adc
shl
push
jnp
cmp
or
imul
add
sbb
ins
lahf
mov
out
dec
dec
adc
cmp
and
add
scas
mov
out
adc
fstp
push
test
pop
call
sub
repz
mov
and
cs
lods
lods
adc
in
mov
shl
test
pop
xchg
xchg
addr16
add
or
movs
lock
test
sub
repz
inc
cli
aad
jmp
int3
repnz
popa
outs
jbe
push
xor
or
xor
loopne
in
int3
sahf
ret
mov
sub
mov
xor
mov
ins
outs
data16
fist
push
push
lods
das
adc
out
(bad)
mov
cmp
in
int
inc
or
out
pop
rcl
jl
fcom
aas
fisub
lods
repz
add
in
std
mov
into
jae
sbb
add
mov
ret
out
push
movs
rol
scas
and
in
or
cmp
je
mov
adc
push
mov
in
pop
push
scas
aad
js
or
fstp
dec
punpckldq
mov
push
mov
jb
xor
outs
inc
add
cmp
xor
pop
aaa
mov
sub
mov
inc
adc
mov
jo
push
cli
push
mov
dec
sub
cmps
push
add
fild
retf
es
jns
(bad)
adc
fstp
cld
pop
and
mov
sahf
cld
out
movs
imul
jl
dec
int
inc
das
and
sbb
cwde
mov
xchg
mov
mov
mov
sub
outs
and
and
jae
mov
dec
aaa
sbb
in
loopne
out
(bad)
mov
pop
mov
mov
stos
in
or
push
lods
xor
inc
inc
dec
int3
inc
xor
outs
sahf
cmps
push
adc
or
imul
jmp
mov
mov
mov
aad
je
push
js
mov
mov
out
sub
in
int
fucomip
pop
pop
xor
sahf
inc
pop
mov
mov
pop
adc
int
and
cwde
push
sbb
mov
shl
cwde
cmp
jp
dec
xchg
leave
add
jae
fld
fwait
sbb
push
int
inc
jne
xchg
psllq
or
aas
mov
push
scas
(bad)
repz
std
ins
popf
add
int3
mov
inc
push
inc
or
mov
cmp
or
mov
mov
imul
out
push
dec
pop
push
call
push
xor
idiv
jmp
mov
arpl
icebp
lea
sub
xchg
mov
sub
je
dec
mov
add
pop
vpcmov
js
and
or
popa
cmc
xor
loopne
pop
ror
jmp
in
pop
out
cmp
mov
push
call
cmps
ror
aad
bound
and
mov
neg
add
inc
scas
push
gs
(bad)
mov
jo
push
pusha
aas
rcl
jmp
push
xor
ror
in
aas
fdivr
adc
push
push
push
cmp
loope
jbe
fwait
js
aas
pop
enter
or
xlat
cmp
pop
push
jecxz
mov
in
rcr
xor
out
lods
jp
out
sar
std
cmps
add
ret
rol
cs
pusha
aas
or
jle
and
adc
out
mov
mov
out
cmp
das
mov
and
pusha
hlt
inc
std
jp
outs
cwde
push
(bad)
idiv
add
test
push
push
mov
test
mov
jg
cmps
adc
aam
push
sti
dec
ror
rcl
or
out
and
xor
mov
mov
rcr
add
and
mov
cmp
xor
xchg
popf
mov
and
arpl
mov
inc
dec
sub
aas
mov
xor
xor
push
mov
rcl
pop
je
shl
addr16
movs
repnz
or
push
jbe
bnd
pushf
and
adc
loope
adc
or
jle
add
adc
rol
jne
arpl
mov
adc
adc
std
push
jge
xchg
shr
fnstcw
fimul
push
push
dec
iret
push
mov
inc
(bad)
neg
stos
mov
sbb
gs
or
lods
sahf
adc
jl
out
or
int
jle
or
cmp
pop
aas
call
lock
rol
les
mov
(bad)
fst
push
pop
jb
mov
or
and
vunpckhpd
xchg
sub
fsubp
ins
inc
gs
mov
mov
test
add
cdq
sahf
jno
and
rcl
jns
cmp
sub
daa
mov
cdq
test
pop
sti
imul
getsec
lea
xchg
jbe
int
adc
mov
adc
xchg
jae
add
push
xor
inc
or
std
stos
out
mov
leave
push
repz
(bad)
mov
add
jmp
jno
add
les
or
push
xchg
(bad)
dec
scas
mov
inc
or
jp
arpl
add
shr
mov
push
test
dec
adc
sar
fdiv
outs
ins
add
ins
ret
sbb
int3
or
addr16
and
scas
mov
sbb
cmps
lahf
sbb
add
jae
cmp
cli
mov
push
jg
add
ret
mov
pop
stos
push
out
jl
mov
cli
mov
dec
sar
jno
(bad)
push
gs
shl
repnz
dec
pop
aad
inc
cld
lds
xor
cdq
out
jns
stos
mov
outs
push
outs
jb
mov
ret
mov
cdq
jb
adc
ret
or
xlat
scas
mov
xchg
mov
mov
das
inc
jl
lds
sub
punpckhdq
mov
dec
sub
pop
xor
dec
out
out
add
inc
fs
mov
pop
out
ins
ror
push
ror
std
lock
jle
iret
idiv
cwde
leave
retf
pop
test
sbb
ja
aaa
jbe
push
ret
dec
sar
out
xchg
std
ror
mov
mov
into
subps
inc
les
retf
cmps
(bad)
or
dec
inc
push
xchg
mov
mov
pop
dec
data16
inc
cmc
repnz
les
repnz
movs
cmps
push
push
repnz
retf
inc
mov
cs
mov
cmp
fadd
mov
arpl
cld
int
jbe
scas
shl
out
pop
je
and
add
push
aaa
lods
into
into
dec
cld
cmp
xchg
aas
push
rcl
mov
add
sbb
clc
repz
(bad)
jp
aas
aam
aam
xor
sub
mov
lds
test
sbb
out
(bad)
fild
test
fwait
mov
fimul
sbb
test
inc
push
fdivr
sub
add
int
shr
or
fisubr
sub
mov
cmp
fnstsw
retf
or
in
push
sbb
ds
push
test
mul
ficom
xchg
cmps
xchg
dec
(bad)
nop
sub
aaa
movs
xor
lds
xor
xor
(bad)
cld
mov
mov
fisubr
je
mov
push
mov
inc
mov
inc
jmp
sti
sbb
pop
and
mov
and
jo
push
and
push
lock
mov
pop
pusha
lds
mov
dec
adc
jne
inc
dec
ss
js
xchg
dec
sti
into
dec
sahf
out
mov
cmp
mov
mov
push
sub
add
es
mov
jl
pop
cli
push
adc
fs
cld
dec
pop
jmp
lock
sub
jl
pop
jmp
fnstcw
mov
mov
cmps
inc
(bad)
jg
gs
aam
(bad)
out
xchg
stc
and
or
fnstsw
in
cmp
movs
mov
scas
push
mov
push
adc
mov
jmp
and
movs
push
arpl
sub
xor
jne
arpl
mov
push
dec
push
fst
xchg
rcl
ja
cmc
cmp
pop
daa
imul
popf
aam
dec
loop
sub
test
jl
in
jmp
mov
mov
daa
fidivr
lods
or
leave
push
pop
stos
out
push
add
xor
inc
inc
cmp
mov
js
add
mov
sub
popf
mov
sub
push
imul
pop
movs
test
cmp
shl
jecxz
xor
xchg
mov
(bad)
shr
enter
(bad)
pop
(bad)
xchg
pop
lds
jbe
xchg
inc
dec
mov
pop
push
repnz
repnz
sub
lahf
es
test
cmp
les
mov
into
gs
sbb
dec
shr
mov
and
mov
sub
pusha
mov
pop
cmp
cli
xor
lea
lock
ret
mov
jmp
inc
cmp
jge
out
movs
mov
xor
add
dec
cmps
or
std
pop
test
and
add
into
sub
into
dec
retf
jmp
add
(bad)
test
clc
std
sbb
dec
xchg
rcr
cmps
shl
sub
pop
sub
add
test
nop
mov
in
and
mov
out
jns
pop
ds
sub
xchg
cmp
mov
and
leave
adc
stc
mov
dec
add
pop
fidivr
addr16
or
stos
push
jb
pusha
aaa
cwde
mov
shr
mov
test
xchg
popa
inc
push
retf
adc
cdq
mov
dec
cmovae
jp
jecxz
push
fsubr
fild
xor
ins
add
aam
pop
xor
inc
lds
(bad)
mov
into
lds
outs
enter
and
jne
mov
jns
retf
fs
lods
lds
jne
add
dec
popa
aam
mov
popf
pop
xor
je
out
into
mov
sbb
fidivr
fwait
jmp
lods
dec
loopne
mov
cs
pop
scas
out
pop
test
les
mov
test
lock
std
aas
cmp
ja
sub
bnd
aad
and
push
in
es
mov
sbb
xor
jo
and
or
inc
test
clc
mov
cmp
pop
add
pushf
out
shl
cmp
sub
xor
gs
adc
sbb
dec
das
cli
inc
ret
pop
jge
lods
je
push
inc
push
dec
jle
jmp
and
inc
mov
adc
push
(bad)
or
push
cs
stos
xchg
or
ins
outs
pop
(bad)
test
(bad)
and
shr
mov
xchg
dec
pop
mov
sahf
pop
mov
cmc
sbb
mov
outs
mov
sti
(bad)
aam
daa
sub
sub
imul
xchg
repz
shr
pop
retf
sbb
scas
lahf
adc
pop
fimul
cwde
out
pop
in
outs
out
shl
cmc
aaa
jno
call
hlt
sub
lods
sar
and
jmp
cmc
mov
leave
movs
popf
push
mov
addr16
dec
jno
gs
xchg
pop
push
stos
push
and
repz
push
leave
xor
das
jnp
pop
mov
fwait
dec
ror
mov
sbb
jbe
xor
mov
mov
fwait
mov
out
dec
lods
pop
lahf
sub
cli
xchg
test
mov
dec
rol
in
sub
rcr
or
dec
ror
or
dec
xor
call
int3
scas
jp
fstp
sbb
ret
dec
push
jbe
les
xchg
add
jmp
nop
es
ret
imul
popa
rcl
pushf
out
cmp
push
or
loope
add
jle
jbe
pop
push
ficomp
dec
and
pop
fwait
das
iret
(bad)
ja
add
add
inc
std
mov
std
stc
fdiv
xlat
pop
pop
fisubr
fisub
lods
cmps
test
dec
std
sbb
jmp
jo
hlt
xor
push
retf
sub
ret
pop
or
or
in
push
(bad)
hlt
cmp
imul
hlt
dec
mov
aas
aam
adc
test
repz
(bad)
fs
loopne
push
in
push
and
popa
or
inc
jg
mov
mov
jmp
inc
adc
cmp
mov
xor
mov
add
or
cmp
and
sub
aas
int
stc
mov
dec
neg
push
push
out
inc
xchg
std
push
adc
dec
xlat
cmp
scas
sub
push
mov
or
and
pop
or
cmc
cvtps2pi
and
in
(bad)
cmp
and
iret
push
adc
icebp
add
mov
and
pmaddwd
std
add
shr
mov
fimul
imul
push
es
mov
dec
inc
ficomp
and
or
xchg
js
cmp
cmp
je
sub
xor
or
int3
jno
mov
in
cmp
dec
rcr
lahf
jl
add
push
jo
and
sub
out
mov
stos
mov
pop
sub
dec
mov
add
retf
popa
das
shl
fimul
lea
sub
pop
enter
out
inc
xchg
adc
jle
mov
shl
iret
cmp
fld
aad
pop
in
ja
aam
lods
mov
adc
jp
push
mov
xchg
fdiv
mov
mov
(bad)
push
(bad)
cmp
test
(bad)
sti
and
xor
mov
in
cmp
push
push
xor
inc
mov
retf
cmp
mov
sub
add
cmp
xchg
mov
loopne
inc
mov
xchg
push
pop
mov
out
test
mov
ds
jmp
pop
pop
in
dec
cmc
lahf
or
out
loope
add
add
dec
loope
cwde
or
pusha
pop
out
in
les
adc
add
in
sub
xor
jmp
push
jb
xchg
jecxz
lea
retf
xlat
xor
push
and
loop
(bad)
popf
inc
cmp
mov
jb
std
test
xchg
inc
xchg
or
xlat
les
test
push
lods
fld
sub
ret
dec
out
xor
cmp
cdq
pusha
or
push
sti
inc
dec
jmp
sbb
dec
adc
(bad)
adc
mov
push
adc
add
mov
push
retf
mov
jnp
lods
pop
int
xchg
xchg
arpl
xchg
(bad)
push
inc
adc
sub
in
enter
jmp
int
mov
push
adc
push
aas
shl
mov
rol
movs
in
aaa
or
mov
xchg
mov
cmp
mov
or
jb
ins
scas
add
mov
adc
pop
jbe
dec
test
(bad)
out
jecxz
loopne
jns
pop
ins
imul
mov
inc
cwde
retf
jb
std
xor
pop
add
movs
adc
jle
test
xchg
mov
fnsave
or
mov
sub
mov
xor
jnp
mov
cld
lock
sahf
out
jge
cmp
jbe
(bad)
mov
popa
jbe
jbe
jmp
mov
bound
and
cmp
out
xor
mov
mov
nop
or
push
sbb
dec
lods
lock
sbb
adc
pop
cmp
sbb
mov
jecxz
call
cmp
jb
mov
xchg
cmp
repnz
cld
das
add
stos
cli
mov
lahf
mov
mov
out
mov
ds
and
inc
or
dec
nop
sub
pop
call
inc
popa
add
add
lods
lea
nop
test
sti
mov
jbe
inc
imul
xor
aad
in
loope
xchg
jge
sbb
test
jo
out
or
out
neg
adc
repnz
dec
add
jmp
mov
ja
arpl
sbb
adc
add
cmp
sub
or
add
inc
pop
clc
jno
das
push
cmp
gs
fmul
inc
std
out
movs
aad
push
nop
test
test
add
xchg
pop
sbb
das
xor
mov
stos
or
jo
(bad)
je
add
sub
out
pop
sub
test
fstp
mov
inc
and
retf
adc
xchg
xor
inc
pop
xchg
adc
push
nop
adc
xor
dec
pop
jno
mov
adc
pop
ret
cld
mov
jae
mov
es
pop
cmp
outs
call
or
cmp
or
call
jbe
in
cdq
ds
and
daa
popf
add
or
xchg
shl
jl
mov
cwde
std
mov
fsubrp
cmps
mov
ja
sub
iret
imul
in
and
fwait
test
loopne
jno
pop
ins
fwait
push
and
stos
aas
fst
adc
jmp
mov
es
xchg
stc
or
mov
jb
jno
imul
pop
(bad)
sbb
daa
(bad)
lods
stos
mov
sub
sbb
cmps
mov
add
xchg
in
or
add
outs
(bad)
mov
cli
test
mov
sbb
hlt
movs
dec
in
pop
ret
jo
scas
mov
jl
dec
dec
out
jmp
pop
sub
push
aas
enter
xchg
xchg
mov
vpaddsw
fimul
mov
lock
mov
popf
fild
jbe
sub
or
sbb
lds
stc
outs
add
pop
(bad)
and
jns
je
psllq
jmp
adc
mov
dec
repz
push
add
fisttp
cmp
mov
and
mov
jnp
repnz
mov
cmp
sar
stc
inc
xchg
add
push
cmp
stos
sub
mov
dec
jo
loopne
xchg
call
inc
sbb
fwait
jne
out
mov
mov
imul
sbb
push
or
add
enter
jle
mov
int
scas
scas
mov
inc
(bad)
jmp
jne
push
loope
pop
out
xchg
ret
test
jmp
pop
add
test
push
popa
cmp
(bad)
mov
movs
cmc
imul
push
les
pop
push
popf
add
out
pop
mov
or
jno
inc
push
fnsave
into
adc
popf
pop
jp
rcr
jmp
aaa
sbb
movs
hlt
ss
mov
int
rcr
cmp
ss
sbb
mov
imul
lods
fbstp
cdq
or
mov
and
mov
ja
jae
push
adc
cli
ret
pushf
push
cmp
cmc
stos
cdq
mov
sbb
xlat
(bad)
scas
add
add
inc
xor
xor
into
push
into
push
enter
mov
aam
iret
faddp
or
add
mov
popa
cdq
mov
fwait
mov
cmps
xchg
jo
inc
dec
cld
push
stos
adc
and
adc
ins
push
add
mov
out
inc
adc
push
mov
push
pop
and
std
imul
jo
cs
mov
pop
dec
mov
loope
push
bound
jne
and
aam
jno
jae
or
jge
sbb
fdivr
cmp
or
jne
cld
cs
cli
fstp
shr
jl
ret
pop
rep
xor
ds
inc
sbb
shr
cmp
shl
push
movs
ins
jno
icebp
sbb
mov
xor
push
cmc
int3
sbb
inc
jl
pop
xor
inc
sahf
fwait
dec
xchg
stos
fdivr
push
adc
mov
pushf
in
dec
jl
rep
and
(bad)
pusha
fnstcw
xchg
pop
dec
loopne
mov
hlt
pop
mov
loope
dec
and
jne
mov
out
pop
push
mov
or
dec
xchg
inc
dec
add
jg
cmp
fldenv
xor
xor
xchg
fs
(bad)
fmul
push
push
(bad)
push
fmul
popa
ret
not
xchg
cmp
xor
in
loopne
test
or
add
jmp
popf
cmp
jne
(bad)
pop
mov
daa
mov
mov
mov
nop
cmp
sub
add
mov
addr16
push
xchg
pop
fs
inc
fldenv
out
jecxz
and
dec
pop
mov
ins
mov
test
push
scas
xor
jg
mov
pop
xchg
pushf
sub
aad
ret
stos
sub
icebp
imul
pop
sub
pop
test
xor
lds
and
sbb
dec
lods
fcmovnb
int3
(bad)
adc
or
(bad)
push
push
scas
fwait
add
je
xlat
push
fdivr
ds
sar
add
adc
xchg
xchg
ret
mov
in
cmp
pop
leave
xchg
(bad)
dec
test
pop
arpl
cs
mov
mov
sub
ins
pop
pusha
popf
xchg
push
mov
std
dec
mov
popa
mov
mov
add
jo
cmp
pop
jmp
mov
push
sbb
loopne
inc
scas
push
pop
cmps
dec
retf
int3
pop
ins
cmp
(bad)
cli
push
pushf
mov
(bad)
pop
iret
jl
lock
les
add
and
xchg
rcr
pop
jne
loopne
mov
mov
mov
test
push
sbb
sbb
hlt
adc
mov
scas
pop
jmp
cld
call
or
shl
das
jl
push
(bad)
bound
stc
sti
ficom
icebp
ds
imul
aad
bound
push
pop
push
outs
add
mov
dec
and
adc
and
in
movs
push
scas
mov
aaa
stc
mov
jp
add
or
ror
pop
push
jle
fldcw
leave
xor
pop
or
movs
xchg
jnp
ds
ficomp
dec
mov
dec
adc
sbb
and
inc
(bad)
imul
fld
xor
push
add
ret
in
inc
mov
sub
fild
into
push
femms
mov
inc
jmp
stc
push
xchg
leave
dec
mov
sbb
dec
pop
mov
cli
adc
daa
xor
mov
into
dec
out
jmp
mov
sar
sub
mov
retf
xor
jae
sub
fst
aas
addr16
mov
lods
gs
(bad)
push
pop
in
fwait
aaa
mov
add
jge
sbb
cmp
fwait
inc
push
push
(bad)
lods
mov
mov
sbb
mov
or
imul
jmp
jecxz
xchg
ins
ins
lods
or
fiadd
cwde
popa
and
rcr
(bad)
loope
push
xor
mov
imul
mov
xor
pop
xchg
cmps
test
jb
push
inc
adc
sub
stc
jmp
test
mov
lds
in
les
inc
out
fst
or
inc
fsubr
ins
push
inc
repz
das
iret
out
inc
lea
push
xchg
fwait
in
xchg
dec
loopne
test
scas
dec
jecxz
addr16
cmp
jmp
test
lea
push
or
loop
(bad)
fsubr
push
xor
(bad)
cmp
adc
adc
cmp
pop
cmp
aam
jns
nop
lds
add
mov
in
test
adc
mov
movs
lods
adc
lahf
mov
stc
add
adc
hlt
pushf
(bad)
js
aad
and
jne
and
out
inc
cmp
std
test
dec
rcr
add
push
pop
aaa
stc
pop
cli
call
jecxz
mov
push
xor
dec
cld
mov
fwait
(bad)
lock
mov
jae
xor
push
mov
jle
shl
ret
cmp
clc
dec
call
push
dec
imul
dec
mov
xchg
mov
call
data16
cmc
jbe
retf
dec
or
cwde
ins
push
aaa
jae
call
jecxz
std
dec
fs
mov
inc
cwde
in
mov
retf
sub
scas
push
dec
pop
stos
ja
cmp
rcl
test
sar
inc
(bad)
inc
xchg
fcomp
(bad)
dec
or
fwait
jbe
dec
and
add
cld
daa
ret
jb
dec
jl
cmps
inc
(bad)
out
inc
arpl
cmc
sub
adc
cmp
push
retf
les
push
retf
(bad)
jnp
and
dec
aaa
adc
(bad)
icebp
xchg
add
iret
jmp
mov
je
jl
dec
cmp
(bad)
pop
sub
mov
xor
mov
pushf
cmc
cmp
mov
xor
mov
stos
xchg
jg
mov
mov
lock
lock
jmp
push
daa
arpl
test
or
lahf
ins
cmc
mov
mov
push
mov
pop
nop
in
push
(bad)
daa
sub
cld
lods
jbe
dec
sub
jle
shl
mov
adc
pop
lock
scas
mov
in
add
arpl
mov
jb
outs
cld
push
scas
fs
and
or
mov
or
repz
cld
aas
pop
push
jl
xor
(bad)
lods
mov
sbb
mov
pop
push
or
xor
inc
jo
inc
push
or
sub
cmp
lock
rcl
mov
mov
dec
mov
sbb
xchg
pushaw
mov
ficom
in
lods
mov
pause
and
dec
retf
cmc
lahf
iret
lea
dec
jae
pop
push
jmp
ret
pop
xor
aad
vshufpd
cwde
mov
jge
int3
pusha
movs
inc
dec
test
ins
ss
mov
adc
adc
dec
cmp
sbb
div
push
sar
nop
cmp
scas
stc
xor
bnd
int
aam
test
shr
dec
push
mov
cld
vpaddsb
push
scas
inc
popf
add
pop
push
je
(bad)
lods
sbb
int
and
nop
loop
cmp
pop
jno
dec
repz
out
cmp
rol
fistp
and
jno
xor
cmp
sub
in
add
sbb
add
in
cmc
mov
in
fwait
push
push
jae
xor
sti
mov
inc
xor
je
jge
jns
adc
and
cmp
adc
xor
int
mov
mov
xchg
lods
pop
bound
int3
ss
ror
addr16
in
jmp
xchg
jo
test
mov
scas
loopne
add
or
adc
fldenv
ins
mov
lds
retf
inc
sbb
lahf
cmc
mov
xor
test
gs
cmp
mov
jae
fisubr
fisttp
sub
arpl
ja
fadd
inc
adc
cli
xchg
sbb
fnsave
aad
add
shr
jp
mov
pop
out
call
jmp
outs
mov
jno
xor
and
daa
and
mov
pop
pop
out
mov
xchg
icebp
gs
and
inc
outs
sub
jge
(bad)
fidiv
retf
repz
jae
mov
pop
enter
push
xchg
cmp
adc
sahf
mov
test
gs
mov
aad
ins
pop
pop
pop
cmp
adc
daa
imul
xchg
mov
call
imul
mov
dec
cmps
psubb
sbb
stos
lock
in
xchg
sub
sub
aas
scas
mov
jp
pop
sbb
stc
in
nop
fisttp
gs
fiadd
and
jne
fs
xor
fs
push
sbb
xor
inc
sub
pop
dec
xor
inc
xor
dec
sbb
icebp
adc
cmps
adc
test
pop
xchg
imul
cwde
into
mov
stc
nop
int
dec
xchg
rol
sub
sahf
movs
fdiv
inc
xchg
rol
mov
inc
hlt
cmps
xor
clc
lods
push
mov
(bad)
xor
pusha
mov
jb
dec
sti
pop
xor
loopne
cmp
or
ds
lahf
add
(bad)
xchg
cmp
push
or
test
loopne
xchg
imul
xchg
mov
movzx
jle
push
lods
jge
xor
lods
jl
shr
jle
(bad)
ja
stos
scas
sti
out
lea
je
and
push
inc
aad
cdq
fcmovnb
in
outs
leave
pop
in
mov
push
(bad)
mov
xchg
stos
retf
popf
xor
sbb
je
jnp
mov
mov
pop
mov
bound
mov
inc
adc
adc
dec
xor
jo
cwde
mov
sbb
or
jmp
loopne
mov
loop
(bad)
push
cmp
fldcw
daa
jge
sbb
pop
xor
rcl
retf
or
xchg
mov
mov
test
retf
(bad)
adc
mov
sub
test
loop
xchg
leave
or
in
jg
es
(bad)
push
sahf
push
sbb
mov
and
scas
mov
pop
jbe
sub
jbe
sub
inc
push
imul
jl
repnz
jns
sbb
adc
jg
pop
out
in
push
shl
dec
movups
int
xor
jmp
lods
mov
mov
sbb
in
cmps
jbe
xchg
out
xor
inc
lds
movs
mov
jo
mov
jmp
push
jmp
iret
ret
ja
cmp
mov
xchg
cld
sub
fistp
stos
cmps
jge
or
outs
(bad)
aas
jne
fistp
fisub
jo
inc
push
in
rcr
sub
push
inc
push
jg
inc
dec
cmp
dec
out
jb
sbb
jle
xor
mov
xlat
sub
xchg
mov
xor
cmp
(bad)
imul
xchg
loopne
inc
in
loop
jo
arpl
rep
inc
adc
cmps
dec
es
and
push
mov
bound
ja
xor
call
pop
fucomip
call
movs
inc
xchg
aaa
out
dec
mov
stc
cmp
cmp
(bad)
in
jb
inc
cld
rcl
sub
pop
pusha
aas
pop
cwde
outs
adc
and
shl
popf
xor
sbb
pop
cmp
and
call
or
imul
pop
fst
loope
add
pop
imul
int
mov
push
bound
inc
lahf
adc
mov
push
jecxz
lods
xor
out
xchg
pushf
int3
and
retf
cwde
fild
cmps
into
ds
mov
dec
mov
test
ror
add
jecxz
push
add
dec
cmp
repnz
retf
push
hlt
dec
jmp
adc
imul
or
fnstenv
shl
ds
mov
pop
outs
add
push
into
lock
in
ror
les
or
shl
cmp
adc
in
mov
je
into
outs
les
test
into
sbb
iret
outs
and
dec
popf
inc
push
and
pusha
and
sub
repnz
out
(bad)
pop
(bad)
mov
call
xchg
xor
fisubr
lea
push
dec
inc
add
mov
(bad)
xchg
retf
rcr
fdivr
dec
stos
mov
arpl
daa
dec
outs
push
pusha
sahf
push
jbe
xchg
pop
jecxz
aaa
lahf
mov
adc
pusha
mov
mov
sub
and
idiv
adc
(bad)
mov
data16
xchg
iret
mov
nop
sbb
call
shl
add
clc
mov
push
in
pop
pop
mov
xor
adc
xchg
sub
call
ds
jcxz
(bad)
mov
dec
jbe
xchg
xor
loopne
pop
mov
jb
add
dec
inc
jb
cwde
lods
jmp
(bad)
sbb
aad
cmp
sbb
xchg
xchg
mov
and
fcmovbe
and
xor
rol
imul
test
test
test
ja
stos
pusha
sbb
dec
jecxz
mov
push
push
jmp
pop
rcl
pop
call
lock
mov
jbe
mov
xchg
sbb
mov
xchg
iret
jl
xor
fstp
das
xchg
xchg
adc
pop
cld
mov
sub
shl
fild
dec
inc
neg
push
bound
adc
inc
clc
repz
scas
dec
adc
ficomp
xchg
jle
mov
das
dec
push
mov
rol
std
pop
(bad)
or
sub
dec
mov
cld
(bad)
push
jmp
scas
mov
std
call
js
or
sbb
jecxz
and
jge
mov
and
repz
pop
inc
mov
stc
(bad)
ja
out
in
(bad)
mov
push
ss
cdq
stc
mov
imul
js
xchg
mov
mov
sbb
icebp
cmp
dec
mov
pushf
sbb
call
(bad)
fdiv
or
(bad)
les
xchg
ins
mov
test
lea
popa
nop
retf
emms
cmc
scas
arpl
ss
shr
cmps
imul
aas
inc
adc
jmp
loopne
call
ins
push
fistp
sahf
cdq
jo
sahf
pushf
jg
icebp
inc
mov
xchg
xchg
adc
cmp
mov
mov
cdq
and
into
xchg
add
dec
enter
xchg
dec
mov
ss
mov
adc
inc
imul
jbe
dec
test
xchg
out
stc
jo
out
push
mov
jbe
adc
push
adc
imul
xchg
idiv
cmps
pop
imul
inc
inc
push
shl
dec
mov
into
repnz
add
and
or
daa
jg
dec
xchg
or
stc
sar
ins
mov
sub
add
dec
(bad)
(bad)
pop
cdq
in
mov
out
mov
pushf
pushf
sub
arpl
jo
retf
mov
xchg
mov
fsub
and
xor
aas
xchg
push
mov
shl
ss
cmp
lods
mov
ins
sti
lock
aad
jb
mov
lods
sti
inc
or
lock
xchg
(bad)
repz
sub
lahf
add
outs
xor
(bad)
xchg
pop
cld
push
mov
jae
bnd
push
call
int3
mov
lods
ja
mov
and
ins
fs
push
sub
fwait
out
inc
add
add
sub
(bad)
dec
inc
or
pop
jg
call
pushw
or
cs
add
fwait
add
dec
mov
popf
pop
push
ss
xor
mov
push
idiv
mov
sub
mov
inc
mov
pop
imul
jbe
inc
fcomp
int
push
jge
add
cld
inc
and
out
add
cdq
and
sub
mul
cmp
adc
lahf
push
scas
int3
add
sbb
in
mov
adc
jp
push
cmp
cmp
sub
add
fidivr
add
mov
outs
lock
sub
cmp
cmp
jno
jecxz
ret
push
popa
push
jne
enter
xchg
inc
mov
xchg
dec
lock
sbb
sahf
push
test
sub
lods
mov
lods
div
lock
push
and
mov
push
jne
xlat
and
push
xchg
stos
mov
pushf
call
mov
mov
inc
icebp
in
adc
aas
inc
scas
arpl
test
fbstp
ds
pushf
stos
lock
stc
jmp
add
iret
sar
clc
pop
push
jnp
cli
inc
xchg
repnz
popa
aaa
les
test
inc
mov
sar
jo
arpl
call
pop
xor
mov
or
xchg
jo
pushf
aam
sbb
(bad)
mov
push
xchg
(bad)
int3
data16
sbb
dec
and
sbb
jg
inc
pop
enter
hlt
(bad)
aaa
jb
mov
in
pop
outs
xor
inc
add
sbb
pcmpgtd
dec
pop
mov
in
les
push
jae
sub
dec
adc
mov
test
addr16
xor
sub
adc
nop
xor
leave
cmp
bound
or
sar
dec
jno
mov
cmp
jne
mov
inc
leave
mov
cmp
repz
stos
or
stc
jl
dec
jne
and
adc
ror
sbb
les
adc
xchg
cmp
xchg
rcr
std
push
xor
arpl
in
mov
test
dec
addr16
jecxz
(bad)
ins
aad
(bad)
xlat
stos
loope
mov
(bad)
into
pop
add
cwde
mov
or
aam
pop
push
rcl
mov
inc
(bad)
jge
or
in
jmp
ficom
mov
jnp
gs
mov
pop
pop
jns
shl
cmc
add
or
mov
inc
shl
mov
mov
cmps
rol
rcr
dec
popa
loop
xchg
loopne
pop
movs
sub
sti
movs
cmp
retf
inc
cmp
inc
js
popf
sub
not
jp
adc
mov
lds
mov
dec
pop
pusha
push
neg
das
scas
sub
imul
mov
pop
not
xchg
data16
js
fs
scas
mov
cdq
jl
sbb
stos
sub
dec
jne
pop
es
loope
je
in
sub
lods
shr
adc
sub
or
mov
jmp
adc
imul
(bad)
fwait
popf
sub
scas
outs
xor
aam
arpl
nop
pop
in
enter
dec
mov
fst
mov
(bad)
adc
jecxz
mov
pop
dec
and
push
in
mov
shl
jo
mov
mov
mov
sub
lods
ins
mov
sbb
gs
in
scas
push
rcl
fstp
sbb
iret
mov
gs
popf
inc
pop
rcr
fnsave
sar
(bad)
xchg
(bad)
adc
mov
enter
retf
xor
sub
ret
cmp
dec
int3
ret
cmp
dec
jle
sar
mul
push
or
xlat
(bad)
push
jb
mov
pop
push
pop
or
mov
push
jge
sbb
ja
jmp
jnp
pop
fld
dec
fild
pop
enter
inc
loop
repnz
xchg
call
idiv
repnz
(bad)
mov
adc
push
pop
mov
add
jb
int3
in
loopne
cmp
cld
or
cmp
inc
mov
call
pop
and
xchg
push
stos
mov
in
in
push
pop
jge
jmp
pop
jl
(bad)
jmp
sbb
adc
or
call
fimul
call
or
test
sbb
push
mov
jnp
gs
mov
das
(bad)
xchg
fidivr
pusha
adc
fcmovnb
add
dec
cmp
xchg
ret
data16
add
jl
inc
xchg
jmp
sar
sti
in
cld
ja
jns
sub
stc
cmc
call
jb
dec
hlt
in
mov
je
jo
(bad)
out
jnp
jmp
fs
and
repz
add
scas
pop
(bad)
repnz
test
push
cwde
in
jo
adc
mov
lods
sbb
cmp
shl
call
xchg
inc
pop
in
fsub
xchg
or
push
scas
icebp
call
pop
mov
push
xor
mov
mov
adc
call
pushf
std
sbb
or
add
jo
test
xchg
adc
call
fisubr
jp
sar
sub
sbb
jmp
pusha
adc
or
loopne
jne
sub
sahf
mov
add
and
xchg
js
test
and
and
dec
fisubr
fcomp
lock
xchg
fld
ret
or
cli
xor
pop
mov
cld
xchg
ins
fwait
cmp
ror
(bad)
(bad)
shl
(bad)
jl
jle
inc
sub
fisub
mov
outs
arpl
invd
sbb
movs
dec
out
inc
mov
dec
aas
inc
(bad)
jnp
and
jnp
mov
test
sub
pop
jmp
loop
mov
xlat
leave
in
dec
fcomip
push
mov
jbe
pushf
jecxz
pop
(bad)
rcr
fs
ret
xchg
adc
and
xchg
mov
and
pop
test
mov
(bad)
(bad)
xor
xchg
pop
add
popf
inc
xchg
mov
mov
or
cwde
mov
iret
or
stos
inc
ret
popa
stos
fs
inc
and
mov
adc
xchg
dec
(bad)
out
inc
fild
(bad)
cmc
push
ds
dec
fnstenv
sbb
sub
ja
(bad)
and
xor
data16
dec
xchg
aas
add
cmp
out
cmovo
and
jb
jbe
jl
lods
push
push
fwait
(bad)
imul
mov
cdq
xor
loop
xchg
push
loope
jmp
data16
inc
inc
lods
call
xchg
jbe
cmps
inc
sub
push
add
pop
push
xchg
idiv
add
neg
inc
rol
fmul
cmp
sbb
imul
mov
dec
sbb
mov
and
arpl
mov
jecxz
dec
mov
rcr
push
(bad)
push
xor
cli
mov
shr
inc
cmp
in
(bad)
jecxz
inc
xor
imul
(bad)
xchg
pop
mov
cmp
loope
(bad)
out
fld
push
call
jmp
das
jne
inc
stos
cs
es
push
jp
lea
cmp
push
sbb
test
in
in
cli
movs
sub
xor
mov
bound
(bad)
jae
fcmovnu
dec
pusha
mov
ds
xor
cs
cs
imul
jle
js
mov
adc
bound
aas
mov
cmps
add
jnp
mov
test
push
sub
fs
xchg
dec
fist
in
int
mov
sub
in
jle
sub
push
les
adc
enter
xchg
inc
and
mov
or
nop
push
aad
stc
adc
inc
in
add
out
stos
jmp
jb
outs
cs
xor
xchg
mov
mov
cld
xchg
fcomp
mov
setne
jl
add
sbb
(bad)
cmc
adc
rcl
stc
add
rcr
in
jge
test
scas
mov
dec
mov
push
test
push
adc
push
das
jne
mov
adc
push
or
dec
cli
xchg
adc
ret
pop
xor
scas
clc
js
mov
push
into
sub
mov
imul
bound
sar
jecxz
mov
mov
in
push
scas
ins
pop
push
out
xchg
fstp
shr
or
into
jnp
loopne
fld
xchg
xchg
pop
sub
lock
lfs
clc
ins
leave
sub
adc
je
fcomp
loopne
cmp
enter
les
cs
mov
in
mov
(bad)
sti
dec
cmp
ja
pop
jb
mov
sub
pusha
jle
hlt
cld
outs
mov
add
fsub
cmp
jmp
inc
or
jge
mov
jns
hlt
lea
aas
jl
gs
mov
retf
cs
fs
push
inc
movs
nop
test
rcr
int
cmp
sti
xchg
(bad)
out
inc
push
popf
push
cld
fs
mov
mov
mov
or
cmp
push
dec
sub
mov
or
mov
pop
add
or
dec
adc
or
ffreep
push
xor
js
retf
dec
out
mov
popa
cmp
daa
cs
sahf
adc
pop
mov
push
cli
push
xor
pushf
je
or
cmps
mov
mov
jge
xor
(bad)
add
leave
push
push
mov
xor
icebp
neg
out
mov
add
iret
ret
and
int
in
mov
jb
push
mov
pop
mov
or
pop
push
mov
jo
sub
pop
add
arpl
mov
fistp
addr16
cmc
test
fwait
cwde
jnp
addr16
add
scas
adc
loopne
fs
push
and
jl
xchg
stc
pushw
cmc
inc
enter
retf
xor
ins
mov
shl
xor
popa
or
scas
adc
lahf
stos
out
sbb
mov
fcomp
in
push
lock
stc
push
and
add
ja
xchg
jb
sbb
movs
mov
sbb
push
sbb
dec
xlat
cwde
daa
ficom
stos
dec
in
test
clc
cmps
xor
neg
mov
mov
cdq
into
sbb
cmp
sub
cmp
xlat
adc
mov
bound
lahf
(bad)
(bad)
scas
ret
pop
movs
pushf
push
ds
fld
mov
daa
jmp
inc
and
stos
jno
aam
bound
push
inc
dec
push
jmp
push
mov
cmp
stc
pop
shl
(bad)
push
inc
sbb
scas
jns
xor
mov
nop
pop
jno
mov
pop
sbb
retf
jnp
mov
xor
cmc
pop
push
add
stos
imul
test
fst
int3
mov
ss
push
ret
repnz
shl
retf
data16
sbb
add
(bad)
xchg
jbe
or
jo
fidiv
test
mov
je
xlat
adc
nop
fadd
shr
ret
jne
sub
mov
dec
mov
mov
pop
jne
in
loopne
xchg
xchg
(bad)
mov
outs
mov
xchg
shl
call
add
gs
mov
mov
pop
push
push
push
test
adc
pop
mov
or
movs
cmp
retf
cmp
or
stos
push
js
in
int
mov
sahf
sbb
outs
cli
repnz
inc
into
inc
mov
fxch
and
int
lods
and
(bad)
(bad)
in
jp
jl
jmp
leave
xchg
stos
mov
pusha
jecxz
pop
pusha
pusha
icebp
bound
pop
jns
mov
cs
(bad)
push
push
dec
imul
sahf
dec
inc
mov
mov
sub
call
jno
stc
aas
(bad)
aam
dec
repnz
iret
adc
(bad)
xor
mov
or
mov
fldenv
movs
in
add
pusha
hlt
int3
dec
call
cmp
or
movs
stos
add
ja
fidiv
push
push
pop
add
stos
test
ins
into
jmp
jb
xchg
cmp
push
dec
push
pusha
push
xor
cmps
ja
call
pusha
das
call
inc
and
mov
jecxz
in
push
addr16
and
ds
lds
add
mov
rol
scas
mov
shl
and
es
sub
in
inc
popa
leave
and
add
jb
mov
pop
mov
std
sub
dec
int3
pop
push
retf
cmp
lds
xchg
sbb
pop
add
retf
pop
sar
mov
push
aas
xor
aaa
push
scas
sbb
out
outs
lds
aaa
xchg
movs
aaa
arpl
movs
fstp
mov
add
cmp
sub
xchg
cmp
adc
inc
int3
push
js
(bad)
imul
rol
xchg
mov
mov
mov
popf
adc
adc
cld
repnz
outs
mov
ret
dec
lahf
and
cmp
cmps
jge
mov
jl
add
cmp
cmp
push
mov
cmc
les
or
fidivr
jb
inc
scas
jl
jns
adc
aas
mov
cmps
mov
neg
xor
push
add
mov
dec
movs
stc
sub
pop
sbb
pop
cmp
(bad)
lods
jo
(bad)
imul
dec
fdivr
xchg
in
mov
shr
adc
jmp
test
push
xor
inc
pushf
mov
xlat
and
nop
mov
out
pusha
fsubr
cmp
jo
xchg
fstp
sahf
mov
and
or
sbb
int3
int
test
out
(bad)
stos
popa
test
frstor
repz
aam
cwde
mov
out
enter
xlat
sahf
gs
jmp
popf
jge
mov
fmul
aam
and
aad
sub
dec
sbb
shl
cmp
push
jge
out
(bad)
lahf
jnp
(bad)
fnsave
cwde
(bad)
out
pushf
add
jno
sahf
cmp
cdq
sbb
mov
mov
call
test
push
fsubp
jmp
sub
daa
lahf
adc
inc
(bad)
sbb
fld
lods
sbb
and
out
jae
mov
lock
pop
cmc
xor
cdq
add
xchg
sub
or
scas
cmp
jo
inc
and
inc
dec
fcom
sub
punpckhwd
adc
fcmove
adc
mov
mov
scas
jae
stos
cli
aam
(bad)
scas
xchg
(bad)
jb
pop
adc
pop
mov
mov
xor
or
or
in
ds
push
mov
outs
sbb
sahf
jae
cli
mov
fwait
lods
shl
stos
fist
into
imul
hlt
lock
mov
ficomp
push
xor
pop
inc
cmps
pop
push
push
outs
cmp
es
add
lahf
aaa
pop
pushf
or
retf
add
xor
loope
xchg
pop
mov
movs
pushf
xor
pop
pusha
cs
inc
cli
pop
jmp
cmp
push
nop
outs
fld
ds
mov
mov
lea
mov
mov
sbb
fsubr
mov
jecxz
pop
mov
cdq
lods
adc
lods
(bad)
call
add
xchg
xor
call
sar
out
lahf
fdivr
push
mov
(bad)
icebp
sub
push
cmps
mov
fnsave
push
mov
inc
cdq
sub
jo
push
aas
pushf
cli
call
mov
jno
mov
inc
or
mov
sbb
inc
(bad)
jle
mov
cmps
mov
inc
mov
pusha
das
push
mov
retf
xchg
scas
jge
push
out
in
fdivr
sub
ror
push
lahf
adc
mov
lahf
and
dec
(bad)
mov
hlt
aaa
dec
mov
scas
jge
loopne
rcr
pop
cmps
or
inc
enter
inc
adc
test
mov
xchg
dec
jbe
(bad)
mov
sub
rcr
stos
and
dec
lahf
scas
data16
jb
xchg
xchg
idiv
pop
popf
mov
sbb
or
sub
scas
push
test
and
ret
dec
pop
or
ror
out
push
stc
push
push
and
jmp
rep
adc
ins
jno
add
call
adc
aad
ja
mov
fwait
pop
xor
(bad)
int3
sub
sti
xchg
or
sar
cmps
xor
cmp
cmp
ja
enter
cdq
add
pop
jge
and
pop
fcomp
sub
ds
pop
cmc
mov
or
call
xchg
pop
xor
or
mov
xor
xlat
jae
movs
lods
and
xor
sub
pop
mov
test
and
cmp
xor
cmp
push
jb
fimul
mov
mov
mov
jbe
call
nop
int3
lods
sub
fcmove
push
mov
(bad)
pop
mov
mov
mov
jno
scas
mov
mov
jbe
cmp
hlt
adc
call
(bad)
pop
and
int3
loopne
sbb
rcl
push
jmp
or
js
call
or
sub
(bad)
icebp
bnd
ret
js
test
sub
fldlg2
mov
mov
inc
or
imul
retf
dec
repnz
pushf
out
xchg
jp
mov
xchg
jns
mov
mov
xor
stos
push
(bad)
repnz
call
jno
and
sub
xor
jae
mov
imul
add
daa
xlat
push
les
push
or
mov
push
jmp
lods
hlt
cmp
stos
sbb
mov
test
cmp
fwait
pop
or
nop
ins
adc
mov
xor
fs
shl
sub
(bad)
test
std
push
mov
sbb
lahf
xor
inc
jg
movs
jecxz
ss
test
iret
rcr
pop
push
stos
ja
mov
pop
inc
sbb
nop
mov
dec
fnstsw
fild
loop
(bad)
mov
mov
sar
or
sbb
loopne
mov
std
cmp
mov
call
dec
fld
(bad)
pop
mov
push
mov
cs
mov
sub
dec
scas
int3
inc
cld
jbe
inc
pop
add
call
jo
cmp
loope
jp
ret
stos
dec
pop
or
jae
retf
popf
mov
arpl
add
mov
test
in
cmp
pop
out
sub
cld
scas
jbe
jns
push
sti
into
jmp
movs
sub
mov
xchg
call
pop
(bad)
lds
xor
mov
or
popa
sbb
mov
dec
sub
mov
pop
adc
and
cmp
adc
adc
cld
bound
nop
pop
ja
out
push
sub
push
mov
sub
bound
sbb
jne
int
xchg
adc
xor
test
(bad)
imul
and
dec
nop
ss
mov
repnz
lods
jl
dec
out
push
sub
add
sub
cmps
push
pop
mov
dec
div
sbb
aaa
(bad)
cmps
fst
cdq
or
mov
push
dec
test
lahf
pop
fild
add
sub
cmp
cmp
sar
push
adc
xor
push
adc
mov
daa
cs
ror
cmp
out
sahf
cmps
(bad)
out
sahf
imul
mov
sbb
daa
mov
jno
imul
scas
leave
icebp
out
and
dec
in
lods
sub
push
hlt
(bad)
mov
mov
mov
jne
retf
fld
std
fisttp
rcr
adc
and
add
in
div
inc
mov
arpl
xchg
push
push
push
(bad)
sub
jnp
mov
dec
icebp
and
scas
add
push
jb
adc
and
push
xchg
inc
popa
and
mov
cld
es
arpl
scas
xor
int3
cdq
mul
jmp
push
movs
jmp
add
xor
aas
bound
rcr
cmp
mov
sti
xor
cli
pop
xchg
arpl
xor
xor
inc
push
outs
pop
es
jae
adc
mov
pop
cs
dec
adc
(bad)
push
push
fidivr
iret
addr16
push
and
inc
push
pop
scas
xchg
jl
xchg
push
push
xor
xchg
sbb
jecxz
(bad)
xchg
push
cmps
jb
or
push
sbb
jo
movs
mov
jns
mov
arpl
ficomp
mov
out
hlt
je
out
add
js
sbb
les
sar
mov
mov
(bad)
inc
sub
les
or
retf
aam
not
pop
sub
push
fldenv
pop
ins
stos
js
push
adc
jge
inc
jmp
inc
push
or
add
loop
mov
out
push
ins
push
test
adc
xchg
stos
sbb
vmptrld
int3
std
bnd
aad
mov
ret
fbstp
and
mov
outs
mov
fsub
inc
test
ins
ret
dec
and
retf
mov
out
test
mov
test
xchg
jbe
mov
js
inc
in
cmp
imul
sub
add
mov
or
sub
inc
mov
or
or
inc
rcl
jle
rcr
xchg
and
mov
xor
cmp
fwait
aas
or
add
inc
daa
call
add
mov
jns
pop
xor
ins
cs
aam
adc
test
imul
mov
fst
je
mov
adc
das
stc
aad
loopne
sbb
pop
popa
cmp
out
pop
xchg
enter
mov
mov
pop
ror
(bad)
jb
les
mov
enter
test
(bad)
and
ds
loop
and
dec
in
outs
push
ret
int
mov
push
inc
and
dec
sbb
(bad)
push
dec
fwait
adc
frstpm(287
fist
adc
xchg
xchg
leave
ret
cmp
xor
iret
rol
scas
and
iret
and
ret
(bad)
mov
mov
jno
call
outs
call
push
cmp
cdq
adc
mov
mov
push
dec
xlat
fwait
je
inc
scas
out
adc
sbb
mov
fnstsw
push
pusha
fldcw
fadd
(bad)
ins
jne
push
xchg
dec
xchg
cdq
or
adc
ja
or
push
mov
movs
jl
sub
and
scas
stos
jl
mov
dec
sbb
adc
lods
mov
mov
mov
je
mov
repnz
imul
dec
mov
(bad)
pop
add
or
aas
popf
sbb
cmp
mov
push
jae
in
jnp
in
mov
xchg
dec
rcl
stos
sbb
sbb
inc
adc
dec
pop
dec
aas
adc
sbb
cmp
out
add
adc
cld
jmp
std
mov
add
dec
test
clc
inc
daa
pop
push
sub
push
jle
jmp
sub
das
fst
xchg
inc
leave
(bad)
outs
xchg
xchg
js
inc
push
popa
jmp
rcr
pop
mov
xchg
retf
add
xchg
and
mov
xchg
mov
fnstenv
push
cmp
xor
fdivr
or
lods
retf
or
dec
imul
mov
(bad)
(bad)
mov
sub
(bad)
and
icebp
dec
enter
and
imul
xchg
test
and
jns
fdivr
dec
inc
jmp
movs
mov
ds
mov
add
and
pop
repz
out
(bad)
outs
dec
mov
sbb
fidivr
mov
cmps
clc
mov
or
lods
test
jle
jge
pop
int
xchg
lahf
cmp
hlt
pop
test
add
aaa
fcom
mov
addr16
push
aad
xor
cmp
fist
shl
mov
sbb
neg
hlt
stc
retf
fcom
and
cmps
jge
mov
ja
or
fdivr
(bad)
mov
adc
in
lds
addr16
pop
mov
(bad)
sub
mov
mov
push
add
jp
mov
adc
gs
pop
cmp
xchg
jle
sar
xchg
lahf
sbb
cdq
mov
retf
push
sbb
pop
cmovo
push
lods
pop
sti
mul
js
pop
push
push
sub
repz
mov
inc
iret
in
xchg
outs
inc
lods
pop
ss
or
jmp
jp
inc
out
adc
scas
xor
lahf
(bad)
sbb
into
push
mov
xchg
or
cs
jmp
mov
xchg
mov
cmps
inc
sbb
xor
pop
or
mov
adc
push
adc
lahf
add
sbb
or
das
xlat
sub
scas
cmp
out
je
mov
xor
jne
cmp
fnsave
jno
cmp
in
test
or
xchg
lahf
in
cli
cld
sahf
add
retf
es
enter
loop
mov
pop
pushf
fmul
ds
pop
les
cwde
ja
xor
cli
pusha
stc
cmp
fiadd
xchg
add
jle
and
push
jg
pushf
fisttp
rol
dec
push
or
cli
add
je
stos
(bad)
xchg
xor
rol
push
inc
push
nop
retf
mov
push
add
and
popa
and
jmp
adc
add
(bad)
out
jecxz
add
xor
lock
out
mov
mov
sub
loope
jl
mov
sbb
pop
lock
jmp
inc
sub
adc
scas
push
jns
fs
ret
jmp
jb
cmp
ror
add
fsubr
inc
xor
mov
mov
ss
mov
aad
inc
fdivp
fwait
push
pop
push
rcl
mov
lods
cmp
jmp
xor
pop
loopne
dec
push
or
aaa
add
add
add
outs
lahf
retf
mov
or
push
inc
popa
ja
pop
and
cmp
sbb
push
add
add
adc
add
and
ins
mov
or
xchg
push
jge
movs
das
lea
jl
push
clc
scas
xor
push
adc
loop
adc
jle
mov
retf
fisub
and
shl
cmp
out
(bad)
mov
outs
lahf
and
data16
sub
stos
fstp
inc
leave
cmp
push
push
ret
daa
daa
ror
cmp
mov
mov
inc
rcr
into
retf
sub
jne
sbb
or
jmp
cmp
clc
fs
push
dec
(bad)
xchg
stos
xlat
lea
xchg
or
push
loope
int3
dec
mov
data16
imul
add
(bad)
jmp
or
scas
xor
repnz
or
ds
aad
gs
bound
add
inc
stos
lock
aaa
stos
push
xchg
adc
mov
pop
sub
neg
cmp
icebp
loopne
inc
jle
inc
sahf
rcr
fidivr
sbb
pop
xor
data16
xchg
loop
lahf
mov
mov
mov
retf
jmp
dec
gs
arpl
(bad)
pop
out
or
pop
jmp
pop
rcr
scas
lods
jl
into
cs
push
inc
sub
(bad)
and
xchg
nop
push
push
icebp
dec
int
dec
push
jmp
jp
adc
test
xor
addr16
mov
sub
cld
pushf
mov
push
mov
sub
xor
or
jns
or
out
inc
cs
adc
push
push
sub
add
mov
test
mov
daa
mov
out
cdq
jno
jns
cli
mov
stc
fdiv
jle
or
adc
test
int3
into
sbb
sub
je
pop
mov
retf
loopne
mov
push
retf
mov
add
popf
aam
pop
add
pop
xor
push
in
cmp
int3
loop
mov
loopne
xchg
jnp
out
push
in
mov
imul
or
out
es
dec
xchg
cdq
(bad)
imul
fucomp
rcl
sbb
or
push
adc
jle
ins
mov
lea
int3
mov
ret
cmp
cwde
mov
outs
xor
inc
rcl
adc
or
push
(bad)
pop
push
dec
ja
rcr
in
adc
xchg
jge
repz
push
rol
jae
jnp
sahf
fmul
add
mov
sti
adc
aaa
loope
add
mov
pop
or
dec
xchg
out
cwde
xchg
pop
out
sbb
dec
jo
inc
xchg
loopne
adc
rcl
or
push
cmp
enter
mov
or
(bad)
ja
jmp
ins
fdivrp
push
rol
jne
fisubr
aaa
sbb
mov
xchg
js
push
push
rcl
sbb
mov
mov
jnp
les
test
push
cmp
pop
add
mov
add
push
jle
inc
aam
sar
outs
push
data16
fidivr
outs
mov
in
jo
test
xchg
fsub
mov
outs
and
mov
js
aam
shl
pop
(bad)
and
stc
test
hlt
mov
cmps
or
push
stos
xchg
in
sbb
add
shr
ds
lods
add
add
pushf
clc
sbb
add
add
and
ins
add
repnz
sub
in
jg
pop
sbb
jl
pop
mov
xor
mov
fidivr
imul
adc
imul
push
add
jecxz
cmps
sub
add
mov
lock
xchg
push
jmp
push
jns
pop
adc
fdiv
push
fsub
adc
(bad)
adc
inc
dec
and
arpl
test
pushw
sbb
cmp
and
mov
xlat
adc
adc
dec
retf
and
xchg
or
cmps
xchg
sbb
(bad)
lock
inc
fistp
and
pushf
mov
sbb
xchg
jo
mov
and
lock
mov
xor
push
popa
jo
sbb
push
mov
mov
mov
les
mov
shl
add
and
das
shl
or
test
push
lock
push
sbb
mov
movs
nop
xchg
movntps
mov
push
mov
pop
mov
ss
mov
clc
push
jo
inc
js
fnsave
mov
inc
push
sti
jl
xchg
imul
(bad)
push
inc
jg
in
jb
cmp
lock
(bad)
stos
add
(bad)
push
ja
push
cwde
fist
daa
aad
jnp
or
leave
outs
test
adc
mov
fadd
stos
imul
test
ret
je
jo
xchg
jg
pop
lds
mov
adc
inc
add
mov
mov
dec
jns
fdiv
mov
dec
outs
xchg
sbb
outs
lahf
jmp
inc
inc
mov
sub
mov
into
enter
retf
icebp
jmp
dec
test
mov
hlt
mov
sbb
hlt
sub
add
sbb
test
scas
test
sar
pushf
daa
imul
cmp
pusha
jnp
bound
push
lods
xor
adc
in
pop
push
push
enter
cmp
and
sahf
cld
rcr
aam
mov
fs
enter
fidiv
xchg
inc
dec
sbb
lods
push
scas
nop
and
add
sbb
sti
fs
mov
inc
fdiv
add
dec
push
ds
and
div
sub
cdq
jns
cmc
mov
mov
ins
mov
dec
mov
mov
xchg
lods
fwait
xor
sbb
xor
mov
add
adc
popf
fsubr
mov
fs
mov
sbb
xlat
xor
call
mov
xor
mov
sub
arpl
add
int
cmps
mov
push
fldenv
call
jg
jmp
mov
push
lods
or
mov
or
and
push
pop
mov
pop
sub
repz
out
inc
jbe
dec
and
into
sub
sbb
(bad)
cmp
jne
pushf
pop
fst
icebp
ficomp
adc
adc
and
xchg
mov
mov
int3
mov
loop
pusha
jmp
or
jne
pop
or
dec
cwde
mov
or
jo
xchg
cmp
test
xor
xchg
data16
scas
and
and
push
and
popf
cmp
scas
adc
jno
scas
hlt
jl
inc
sub
mov
pop
std
movlps
push
inc
pushf
fdiv
mov
xor
adc
dec
outs
je
xchg
cmp
clc
adc
outs
xor
imul
xchg
cmp
lods
cmps
xor
sub
and
mov
sbb
mov
pop
call
cmp
xchg
(bad)
or
cli
(bad)
pusha
inc
sbb
rcl
scas
xchg
cwde
(bad)
aam
sub
and
nop
xor
fmul
sbb
pop
dec
mov
fxch
mov
push
xlat
xlat
mov
aam
neg
sahf
gs
ja
stos
outs
pop
clc
xor
das
retf
mov
mov
xor
(bad)
push
shr
std
inc
out
cmp
into
jge
ds
je
jns
js
adc
xor
cmp
pop
arpl
int3
jmp
mov
ins
and
jecxz
and
leave
mov
cmp
imul
jmp
hlt
dec
or
or
outs
jns
and
push
cmp
pushf
std
(bad)
mov
ror
retf
add
dec
(bad)
push
sub
dec
sub
xor
jp
sub
das
shl
nop
std
imul
xchg
jmp
ror
hlt
mov
or
or
je
je
test
mov
lea
push
push
xchg
mov
push
icebp
pop
mov
mov
movs
sub
es
sub
leave
arpl
sub
shl
hlt
fisub
pop
arpl
add
mov
xchg
dec
stos
cmp
adc
cmp
push
les
push
clc
jnp
push
aam
mov
add
inc
jb
mov
bound
fdiv
sbb
xor
add
xor
xchg
test
outs
cmps
cmps
shl
mov
into
aaa
mov
addr16
inc
retf
sar
nop
xor
inc
mov
fwait
int3
xor
out
ret
ss
imul
xor
lods
mov
push
add
fisttp
and
enter
mov
gs
outs
fwait
add
xchg
call
ror
pop
mov
and
dec
xchg
adc
pop
mov
sub
inc
sbb
xor
outs
xor
or
retf
bound
push
and
sbb
out
arpl
adc
xchg
inc
call
fstp
scas
mov
out
les
jns
hlt
out
jle
mov
movs
stos
adc
mov
add
std
and
dec
adc
popf
rol
adc
jmp
mov
ins
mov
sahf
addr16
adc
enter
ret
mov
inc
xor
push
bound
jb
pop
sti
dec
jbe
push
push
sbb
out
sub
mov
pop
loopne
out
jne
inc
(bad)
and
imul
push
enter
cmp
xor
in
mov
push
xor
mov
int3
and
test
jnp
scas
dec
iret
and
pop
xlat
mov
dec
push
inc
add
sub
js
mov
jge
xchg
sub
push
std
push
call
jge
mov
cmp
adc
push
sub
in
mov
cdq
(bad)
into
sub
enter
in
sbb
stos
cmps
xor
pop
push
xchg
iretw
jmp
push
cdq
imul
out
pop
lods
jge
es
push
int
xchg
add
cmp
pop
pop
dec
push
mov
scas
fwait
loope
cdq
mov
jg
jno
sbb
fadd
(bad)
repz
cmps
popa
call
popf
nop
retf
xlat
int
sbb
mov
cmps
xor
xchg
pop
jg
cmp
dec
loopne
call
cld
loope
test
outs
repnz
and
or
stc
js
or
adc
or
aam
adc
je
mov
or
sbb
lea
add
nop
lods
mov
add
dec
cmp
aaa
(bad)
fistp
mov
dec
and
sbb
daa
dec
jbe
xor
add
addr16
or
sub
out
arpl
sbb
xor
jle
or
sbb
dec
fwait
adc
movs
inc
mov
xor
push
cmp
mov
fisub
(bad)
inc
in
sti
les
lods
push
std
(bad)
mov
out
bnd
imul
jge
dec
jae
aam
stos
cwde
push
xchg
push
jb
sar
jl
cwde
jmp
mov
mov
or
ret
sahf
inc
ss
pusha
fmul
dec
xor
xor
pop
mov
sbb
dec
add
push
mov
cmp
(bad)
cli
mov
and
add
pusha
movs
cmp
clc
xlat
retf
push
mov
push
sbb
sub
cwde
nop
pusha
mov
mov
xchg
clc
mov
cmp
sbb
loopne
xor
inc
mov
mov
sbb
leave
xchg
leave
int
les
popa
popa
les
xchg
movs
adc
cmp
mov
leave
mov
movs
pop
jnp
cdq
(bad)
enter
and
leave
mov
jns
iret
sbb
gs
fidiv
shr
add
xor
lods
add
shr
lods
mov
bound
mov
or
push
mov
and
push
(bad)
fcomp
stos
mov
ja
cwde
or
pushf
(bad)
push
jge
jno
js
loop
xor
pop
js
mov
dec
fidivr
(bad)
cmp
mov
js
imul
jl
or
ds
add
popf
pushf
xchg
xchg
adc
in
cs
jg
mov
pop
(bad)
xor
sub
test
es
stos
imul
pop
pop
fcmovnbe
jge
push
outs
jae
jbe
dec
and
sbb
jne
jae
addr16
std
inc
and
ret
mov
inc
add
mov
fnstcw
push
rcr
in
scas
mov
sar
outs
ret
in
mov
lahf
ja
cmp
in
or
clc
add
push
jl
sub
std
mov
outs
in
cmc
and
dec
ret
sbb
inc
(bad)
sub
sbb
jmp
or
xchg
fbstp
scas
(bad)
sbb
mov
loope
aaa
mov
add
mov
push
(bad)
ja
aas
dec
scas
lea
out
or
and
pop
adc
sub
fwait
jne
adc
dec
das
test
ss
mov
jp
imul
xchg
push
add
sbb
iret
or
clc
fbld
and
adc
sar
in
inc
lahf
jo
pop
push
xchg
xchg
sbb
inc
sbb
dec
ins
jg
gs
fsub
movs
int3
int
xchg
sar
mov
mul
cwde
mov
iret
pop
adc
lods
dec
imul
dec
das
jmp
push
repz
add
mov
retf
xor
int3
stc
iret
jno
retf
cmp
mov
(bad)
popa
imul
cmps
jmp
aas
jge
adc
mov
push
xchg
test
cmp
push
test
lea
test
fmul
mov
mov
add
push
leave
loope
sbb
and
pop
cmp
ja
dec
(bad)
push
js
aaa
add
pop
add
data16
std
in
retf
div
pop
or
pop
mov
xor
in
jno
pop
and
dec
pop
add
inc
call
call
je
pop
js
out
inc
cmp
out
jg
xor
aam
lds
scas
inc
cmpxchg
cmp
test
rol
rcr
sub
xchg
push
sub
inc
aam
outs
test
ins
in
mov
jbe
push
std
popf
fmul
sti
dec
sub
js
in
leave
int3
and
adc
test
shl
(bad)
icebp
push
adc
into
mov
mov
and
ror
push
ror
ins
pop
mov
xchg
inc
imul
in
dec
jb
test
sub
push
lods
xchg
pop
sub
add
cmps
mov
out
bound
push
xor
sub
add
inc
lds
and
and
iret
addr16
cmp
add
lss
adc
scas
out
ins
ins
jl
out
call
push
pop
shl
inc
ja
mov
push
adc
cmps
imul
inc
mov
lods
xor
hlt
jmp
or
mov
pop
stc
or
fnsave
or
sar
adc
outs
stos
adc
inc
adc
in
xlat
out
sbb
dec
sub
retf
xchg
fisttp
scas
and
xor
into
inc
mov
and
dec
mov
pop
mov
jecxz
data16
enter
sbb
dec
push
pusha
js
test
call
push
pop
mov
shl
adc
and
pop
jae
(bad)
test
test
jp
cmp
and
xor
(bad)
mov
mov
int
xchg
fist
sub
xchg
mov
cmps
(bad)
dec
pop
xchg
or
rcr
stc
movs
cmp
inc
call
iret
cmc
shl
xchg
dec
loop
xchg
jnp
xchg
jle
sbb
jmp
and
mov
inc
lea
xor
in
push
(bad)
repnz
ss
jmp
mov
mov
or
imul
in
(bad)
inc
mov
xrelease
ja
sub
mov
jmp
xchg
das
pop
xchg
(bad)
movs
ficom
cmp
cli
les
lahf
jb
vmwrite
popf
test
sbb
in
out
jns
sub
mov
jg
stos
inc
mov
outs
retf
ins
cmps
into
stc
test
test
retf
scas
xchg
mov
fst
div
xlat
jge
push
adc
movs
sbb
sub
fs
and
fwait
cli
mov
push
mov
mov
push
loopne
inc
mov
sub
in
js
sub
and
inc
out
and
lea
loop
mov
and
test
jmp
push
imul
mov
mov
push
sahf
push
addr16
fiadd
nop
fisttp
push
mov
jns
xchg
pusha
(bad)
std
inc
adc
sub
js
and
xchg
int
clc
idiv
dec
xlat
loope
ds
dec
out
add
adc
es
xchg
test
in
xor
call
inc
sbb
shr
ss
enter
add
xor
cli
ret
xor
or
loopne
xor
mov
jno
fs
xlat
pop
adc
dec
cli
test
es
add
adc
repnz
scas
mov
(bad)
sub
sub
aaa
inc
mov
aam
add
sub
js
mov
(bad)
push
add
inc
out
loop
jae
pop
add
jecxz
fcomp
sbb
mov
in
aas
sub
sbb
shl
loop
adc
leave
jns
dec
dec
mov
mov
sti
jge
pop
es
push
shr
aam
stos
cs
dec
sbb
jb
jge
and
leave
lock
pusha
cmc
or
ret
retf
fcompp
jbe
add
dec
jne
jmp
xchg
mov
call
push
dec
xchg
mov
xor
push
mov
or
xchg
in
inc
icebp
pop
inc
sbb
push
xor
movs
scas
sub
mov
mov
jns
sub
adc
call
sub
mov
test
pop
mov
call
push
mov
test
enter
inc
repz
cmp
jl
popa
inc
xlat
or
nop/reserved
sbb
or
fxch
ja
jmp
jecxz
shr
mov
ret
outs
ja
jo
dec
call
push
jg
mov
lods
push
mov
add
sbb
(bad)
in
lea
xchg
push
fsub
adc
and
in
add
sbb
mov
daa
repz
jb
mov
jns
jno
mov
push
push
(bad)
mov
cmp
cdq
pop
or
jp
mov
mov
xor
idiv
pop
or
add
js
or
sub
jecxz
xchg
xor
cld
inc
jecxz
sub
fimul
test
push
call
xchg
sub
xchg
popa
jl
inc
push
cld
jge
and
add
mov
(bad)
int
cmps
jae
push
or
jno
xchg
push
das
sar
mov
cmp
jo
dec
fdiv
sub
sbb
sbb
sbb
push
and
outs
xor
arpl
imul
fnstcw
inc
push
repz
pop
daa
in
cdq
int3
fld
shl
mov
ins
adc
test
jns
test
and
xlat
into
fld
adc
push
addr16
mov
out
test
xor
xchg
cdq
cmp
pop
inc
xchg
or
add
lods
sbb
jnp
imul
pop
fisub
inc
aas
mov
cmp
fsub
mov
fadd
out
jp
lock
dec
jo
lahf
mov
int3
sbb
cmp
push
int3
les
add
shr
mov
data16
jle
clc
add
scas
int
and
in
cmps
adc
imul
push
call
xchg
icebp
xchg
and
cmc
rcr
inc
in
shl
dec
xlat
mov
adc
aad
pop
(bad)
int
xchg
je
(bad)
sahf
daa
arpl
out
repnz
and
or
imul
enter
retf
aam
xchg
mov
fcmovnbe
in
repz
cmp
mov
cli
dec
jnp
adc
mov
pop
dec
lahf
ins
mov
cmp
rcl
inc
or
cmp
push
mul
dec
nop
pop
cli
pop
dec
shl
mov
out
ss
cmps
and
bound
fs
or
or
jno
retf
je
pop
mov
(bad)
cmp
jno
xor
xor
jo
adc
add
stos
jbe
add
stos
(bad)
dec
lock
sub
mov
dec
push
jmp
fadd
push
idiv
mov
(bad)
sar
push
xor
or
add
xchg
adc
push
dec
inc
cld
push
es
sahf
jle
je
push
fstp
sub
inc
cmp
push
pusha
cmps
or
(bad)
(bad)
add
retf
mov
cmps
cmc
ja
push
inc
pop
pop
ins
sub
leave
cmp
push
cld
imul
push
aaa
lea
data16
xor
push
fiadd
adc
div
enter
mov
add
jmp
sbb
adc
stos
mov
mov
pop
lea
gs
pop
fwait
pop
jns
in
dec
dec
add
icebp
call
cmp
dec
pop
jmp
fs
loope
mov
mov
fisubr
inc
bnd
inc
fsub
div
imul
adc
and
(bad)
sahf
lahf
or
pop
paddusb
and
jmp
xlat
jb
inc
je
xchg
mov
shl
pop
cdq
enter
and
retf
bound
jmp
push
sahf
jnp
adc
mov
out
outs
xor
lahf
push
and
into
test
pop
xchg
mov
xchg
mov
ret
enter
into
in
ret
rcl
or
dec
div
leave
xor
mul
jle
push
lahf
mov
mov
cmp
pusha
leave
das
push
stos
sahf
cmp
jnp
test
xchg
add
jb
clc
inc
mov
in
jmp
mov
outs
dec
push
cwde
push
in
(bad)
sbb
(bad)
outs
ds
movs
cmp
xchg
push
fnstenv
jnp
ins
jnp
aad
sub
cs
cmc
cmps
mov
or
and
das
sub
movs
mov
or
dec
sub
push
sahf
lea
mov
cmps
jl
or
fstp
inc
cmp
rcl
fmul
fmul
cmps
aas
sub
fcmovbe
xor
icebp
adc
pop
pusha
ret
push
(bad)
idiv
ret
loopne
fild
(bad)
jmp
pop
push
mov
xor
sbb
(bad)
dec
add
inc
xor
mov
iret
sub
mov
test
push
loope
mov
dec
gs
sbb
jbe
xor
dec
add
add
xchg
or
add
(bad)
call
sub
ins
out
push
jmp
pop
mov
jge
mov
push
jmp
mov
and
int
test
mov
icebp
cld
and
gs
sub
popf
add
push
data16
xchg
xchg
(bad)
push
icebp
xchg
pop
pop
inc
xor
(bad)
mov
xor
bound
int
repz
xchg
stos
pop
add
xchg
test
jns
pop
adc
push
mov
addr16
mov
add
sbb
movs
ret
(bad)
lea
lods
pop
xor
pop
push
cwde
psrlw
inc
mov
cmp
inc
jle
cmp
jnp
lods
add
sub
mov
lea
or
out
push
stos
push
test
pop
sub
ficom
(bad)
cmp
pushf
pop
aad
enter
inc
push
mov
sahf
retf
or
stc
icebp
loop
stos
imul
add
dec
out
add
(bad)
fcom
dec
std
push
lds
mov
mov
add
div
int
jae
inc
call
or
xchg
rcl
arpl
pop
movs
(bad)
mul
popa
and
sbb
and
(bad)
xchg
sub
repz
xchg
mov
xchg
pop
jle
std
fist
mov
push
je
enter
mov
lds
(bad)
mov
enter
std
int
js
push
sbb
or
dec
mov
sar
add
fmul
aas
cmp
jecxz
loope
dec
icebp
loope
push
jg
mov
in
add
out
hlt
in
sti
jno
fisttp
lahf
mov
sub
and
xchg
ins
mov
je
cmp
mov
push
repnz
dec
or
ret
into
shr
pop
push
cwde
cmp
aas
mov
push
jp
ret
sbb
jns
mov
mov
cwde
jb
sub
loopne
retf
adc
(bad)
jmp
xor
cmp
scas
mov
jbe
repnz
add
arpl
pop
retf
out
out
pop
xor
icebp
jb
std
scas
mov
jge
nop
or
mov
adc
cmp
xchg
into
fcmovnbe
lock
push
pop
out
push
movs
pop
and
call
rcr
pop
loop
add
mov
pop
fdivr
ds
scas
setp
jmp
dec
test
cmps
es
and
loopne
retf
cmp
cdq
fadd
jecxz
pop
sub
shr
sbb
push
xor
jge
pop
cmc
xchg
test
dec
jne
ss
pushf
inc
cdq
icebp
adc
xchg
sbb
mov
hlt
xchg
and
hlt
dec
into
or
dec
push
xchg
stos
add
mov
jmp
(bad)
dec
jle
cdq
mov
push
mov
cdq
lahf
pop
inc
pop
inc
enter
nop
inc
fwait
or
fld
sub
pop
test
push
mov
mul
ror
shl
cs
sbb
push
fistp
das
std
mov
aam
nop
fld
out
loop
xor
call
fsub
sbb
xchg
push
sbb
cli
retf
push
mov
(bad)
call
ins
xchg
jne
aad
jb
lods
pop
pop
loopne
jmp
and
(bad)
fld
push
call
mov
les
mov
inc
ja
xor
pusha
cli
cmp
xchg
sbb
xor
sub
sub
cmp
call
dec
xor
sbb
les
ja
lahf
jae
pop
inc
cwde
mov
(bad)
arpl
mov
scas
cmp
jle
enter
pop
jg
pop
add
inc
jo
add
or
mov
inc
(bad)
enter
adc
rol
pop
jae
sbb
movs
gs
jb
adc
popf
mov
mov
jle
inc
adc
ret
mov
loop
sub
jno
test
out
or
call
xchg
pop
shl
loop
gs
xchg
sahf
sbb
fnstcw
pop
ficomp
xchg
sub
or
jp
inc
shr
jecxz
pop
mov
mov
adc
int3
mov
push
lahf
lock
dec
sub
mov
push
popa
les
retf
xchg
outs
aaa
mov
aas
sub
in
push
call
loope
sub
xchg
cli
je
fst
ret
(bad)
fcomp
push
retf
fistp
call
jo
pop
add
(bad)
mov
mov
cmp
adc
jge
cld
mov
adc
add
and
or
dec
mov
daa
shl
add
scas
es
mov
and
xchg
std
pop
sar
jno
mov
inc
xchg
pop
mov
jge
nop
iret
add
gs
imul
mov
cld
cmp
les
fdivr
and
adc
and
pop
jno
xor
xchg
sub
mov
stos
jo
stc
mov
jno
cmps
daa
xchg
jmp
(bad)
jp
cmp
jle
mov
mov
cmp
adc
and
(bad)
fucomp
push
sti
xchg
inc
xor
repz
or
iret
mov
ins
sbb
jns
test
loope
retf
retf
jg
shl
fs
sub
in
pop
cmps
or
push
imul
jbe
repnz
or
sub
ficomp
push
pop
mov
div
push
or
nop
pop
mov
inc
shl
inc
mov
push
sbb
pop
pusha
xchg
repnz
inc
das
scas
std
shl
pop
and
jmp
add
or
clc
inc
shr
into
push
sub
icebp
cwde
leave
(bad)
sub
retf
sbb
push
mov
xchg
or
clc
jb
jmp
sub
push
cmps
dec
call
xchg
les
and
mov
mov
movs
fist
pop
outs
push
mov
push
inc
ss
xchg
out
and
add
jnp
inc
imul
cmp
std
push
push
jecxz
cdq
adc
mov
push
xor
es
aam
test
cmp
dec
div
cmp
jns
push
daa
inc
push
mov
or
mov
push
pop
mov
xor
jmp
retf
xor
or
or
lods
jmp
xchg
retf
ja
jb
imul
loopne
xor
js
add
and
xor
push
cmc
pop
nop
inc
push
and
pop
loopne
out
stos
lock
jmp
stos
cmp
mov
fmul
xchg
add
xchg
xchg
push
adc
ss
in
outs
fsub
mov
retf
pop
lods
call
loopne
cdq
mov
push
cld
dec
aad
pop
and
aaa
repnz
leave
xor
pop
pushf
fwait
movs
inc
mov
out
addr16
out
test
out
popw
cmp
cli
int3
fidivr
in
cmp
or
call
mov
pop
sbb
fldenv
xchg
mov
std
je
add
mov
jl
or
mov
inc
mov
cmps
mov
push
cmp
je
fistp
push
pop
jb
xchg
pop
push
mov
mov
add
fxch
scas
sbb
daa
mov
sbb
out
pusha
mov
adc
movs
imul
cli
cmps
xchg
mov
jp
call
push
xchg
cs
lds
sbb
add
in
jbe
push
cmps
cs
aam
and
ds
iret
nop
popf
add
or
dec
dec
pop
fcom
nop
ja
gs
loop
jmp
mov
loopne
repz
test
ins
cdq
xchg
repz
jnp
or
ss
push
jbe
dec
in
xchg
jmp
jle
cld
outs
push
out
pop
les
jnp
adc
xchg
adc
lods
(bad)
push
stc
scas
jns
or
loop
pusha
lea
sahf
xor
bt
xchg
push
aad
mov
and
in
enter
dec
add
lahf
mov
dec
xchg
dec
add
xor
xchg
inc
jmp
arpl
gs
inc
xor
nop
mov
mov
aad
je
pop
repz
sub
push
ja
mov
jmp
mov
dec
rcl
call
push
fs
pushf
xor
ds
sub
pop
add
pop
pop
lahf
ret
mov
in
scas
pop
cmp
cmp
stc
lods
rcl
mov
shl
inc
sbb
aam
cmp
jge
add
jbe
add
mov
mov
mov
stc
cld
xor
sbb
adc
xchg
ret
out
aas
clc
and
fdiv
out
jmp
jns
pop
jge
and
ret
add
adc
dec
sub
mov
lods
pop
push
sahf
sbb
mov
xor
mov
pop
mov
cld
and
push
inc
mov
in
stos
cdq
(bad)
jge
cmovns
push
jp
xor
and
cmps
mov
push
inc
pop
adc
rol
idiv
jg
mov
jb
out
stos
cs
stos
mov
out
or
sbb
leave
xchg
jmp
stc
push
fistp
nop
int
(bad)
ins
adc
xchg
lds
scas
mov
cmps
xchg
js
push
scas
outs
or
adc
sbb
push
jle
adc
lock
pop
push
lock
aas
stos
movs
pusha
and
jmp
sbb
(bad)
sahf
sub
sub
sbb
dec
xchg
test
js
pushf
jne
clc
cwde
and
popa
jmp
xor
inc
sub
outs
pop
mov
jge
stos
or
mov
arpl
xchg
ss
(bad)
in
xor
mov
(bad)
rcr
je
imul
mov
xchg
jl
neg
dec
aas
scas
das
inc
inc
pop
or
push
test
stc
ins
xchg
mul
repz
pushf
sbb
pushf
xchg
pop
cld
shl
and
stos
pop
pop
data16
test
lods
jnp
dec
mov
clc
das
add
hlt
enter
dec
cmc
xchg
int
mov
mov
pop
pusha
in
add
xchg
push
retf
mov
push
int
ret
add
daa
scas
cmps
jbe
add
btr
mov
pop
dec
rcr
adc
inc
or
int
pop
popa
dec
cmp
mov
and
sbb
push
pop
mov
add
xchg
jns
xor
popf
mov
pushf
hlt
mov
adc
rep
pop
mov
mov
jmp
jp
(bad)
hlt
sbb
push
mov
sub
(bad)
cmp
xor
ret
shr
xor
aam
adc
daa
iret
and
rol
imul
and
mov
imul
fisubr
rcr
push
pop
ds
mov
mov
ins
mov
jle
int
nop
adc
mov
or
jb
les
push
sub
dec
cld
leave
cmp
mov
sub
js
xchg
movs
dec
sbb
into
xor
mov
sar
out
or
mov
cmp
adc
test
fisub
add
test
sub
(bad)
lahf
sub
shl
adc
inc
test
sbb
push
repnz
les
push
fst
adc
xchg
lods
push
loop
add
cmc
in
clc
pop
pushf
sub
aas
xchg
(bad)
jno
mov
lahf
mov
popf
adc
dec
mov
jo
call
stos
lods
int
(bad)
mov
mov
loopne
shr
pop
xor
mov
jg
adc
daa
bound
test
loop
add
cs
(bad)
pop
ficom
xor
and
test
fcomp
dec
mov
dec
add
or
int3
inc
arpl
inc
arpl
into
adc
(bad)
rcl
push
inc
shl
fs
sahf
retf
and
rcr
dec
sub
lods
jne
loopne
(bad)
test
icebp
jl
pusha
jl
mov
cwde
(bad)
cmp
inc
aas
fcomp
js
mov
fstp
push
adc
(bad)
shl
(bad)
(bad)
stos
adc
mov
pop
mov
mov
mov
sbb
jp
cmp
mov
dec
sbb
cmp
xchg
pop
cmp
mov
or
retf
clc
jo
imul
cmp
sbb
mov
push
push
sub
mov
movs
or
test
lea
cwde
int3
mov
sub
mov
fiadd
jnp
mov
pop
call
jo
xor
cmps
or
pop
push
ja
pop
fwait
pop
inc
fs
push
jae
add
loopne
pop
test
dec
xor
(bad)
mov
out
hlt
test
outs
sub
mov
rcr
retf
push
inc
cmp
lods
cmp
push
js
pop
lock
outs
mov
stos
sbb
ja
sbb
inc
es
ficomp
shl
add
mov
test
mov
imul
sub
mov
cmp
cmp
push
jno
push
pop
jb
pop
lea
xor
retf
cmp
imul
jno
push
int3
dec
push
fidivr
movs
inc
enter
ja
rcl
dec
enter
xchg
gs
sbb
pop
mov
sub
jmp
in
shl
sahf
rol
mov
push
leave
cmps
out
and
popa
add
inc
xchg
lods
push
and
retf
in
jnp
ret
test
out
clc
sbb
(bad)
pop
std
retf
mov
mov
cld
inc
sub
jmp
scas
leave
retf
adc
mov
enter
mov
push
aaa
aam
neg
and
jl
and
jae
mov
dec
leave
sub
test
stos
sahf
dec
mul
pop
and
cmps
pop
popa
jne
hlt
add
ds
gs
vpunpckhdq
repnz
paddb
inc
sub
sub
dec
cmp
sub
inc
nop
fst
das
retf
stos
jns
aaa
add
cmp
pop
in
retf
test
ds
cdq
fistp
lods
in
sub
idiv
sub
pop
out
cmc
xor
in
in
stos
js
ret
or
ror
dec
fild
jle
jl
fldenv
xor
retf
not
fldenv
daa
(bad)
(bad)
mov
adc
jg
adc
ins
into
ins
pop
inc
xor
push
les
aas
or
rcl
mul
aas
mov
sar
mov
enter
jbe
jecxz
std
xchg
xor
and
dec
out
add
stc
js
dec
xor
sub
dec
ds
addr16
sub
movs
add
clc
lods
jno
mov
movs
cmps
xchg
and
or
pop
ins
sbb
sti
fwait
mov
jae
nop
retf
(bad)
xchg
pop
inc
push
call
push
xor
push
or
fidiv
sbb
xor
jo
xlat
xor
jnp
fst
xchg
adc
cmp
dec
jne
ret
mov
aaa
outs
fcmovb
cmc
sbb
fild
mov
mov
sbb
or
sub
cmp
push
push
mov
iret
sub
add
dec
hlt
mov
scas
pop
adc
cmps
cwde
(bad)
call
push
lea
xor
sub
repnz
jb
out
mov
or
fwait
dec
call
mov
stc
ds
add
into
imul
popf
push
or
or
mov
jno
imul
and
loope
push
pop
jp
sub
mov
pop
int
fnstsw
sub
daa
mov
push
mov
xchg
mov
data16
and
aas
jp
out
pop
mov
and
pushf
stos
mov
fmulp
dec
and
test
jo
dec
cwde
lea
aad
dec
push
arpl
in
jmp
push
movs
or
cmp
scas
adc
push
adc
jne
das
mov
cdq
pop
cmp
(bad)
out
imul
sti
xor
movs
je
sahf
dec
sub
je
daa
xor
daa
sub
xor
mov
push
ret
jnp
push
fist
mov
adc
dec
(bad)
or
dec
pusha
retf
les
addr16
push
push
outs
xchg
mov
dec
adc
cmp
jae
and
ins
pop
into
xor
jno
sbb
inc
mov
clc
xchg
add
retf
jge
(bad)
lds
mov
popf
enter
mov
jl
and
lds
out
xchg
je
jmp
xchg
and
and
ds
daa
in
stos
fincstp
push
fiadd
test
or
jb
mov
test
and
cmp
cmps
and
ja
ror
jg
mov
in
adc
jg
test
fwait
jmp
cmp
mov
out
pop
sbb
cmp
in
outs
adc
or
cld
ret
clc
sub
add
mov
push
inc
mov
or
sbb
cmp
xor
xchg
push
xor
fwait
mov
adc
cmp
nop
inc
mov
push
push
fbstp
cmp
pop
push
sub
xor
push
dec
mov
push
push
sub
xor
ins
(bad)
rcr
push
jl
test
xor
or
push
jle
test
push
sti
aad
mov
fwait
mul
xor
mov
adc
push
leave
jnp
add
mov
aas
xchg
(bad)
jo
imul
cdq
cmps
sar
xor
shl
retf
imul
and
pop
mov
cld
pop
cmp
inc
loopne
call
xor
push
sub
sub
xor
les
movs
loop
and
inc
add
dec
sub
mov
(bad)
mov
cmc
adc
mov
kmovq
pop
shl
mov
jo
faddp
cli
push
or
in
xor
data16
xlat
inc
push
sub
pop
and
push
ins
mov
sub
pop
cs
jb
(bad)
(bad)
iret
ins
jnp
fisttp
movs
sbb
std
jne
mov
aad
jecxz
mul
xchg
out
pushf
mov
into
cdq
cli
fimul
xchg
fstp
mov
dec
inc
push
jae
push
fwait
jae
loop
scas
sub
les
pop
rol
cmc
jae
xor
(bad)
xor
lea
inc
cmp
daa
stc
mov
add
adc
inc
in
es
mov
scas
sbb
push
cmp
in
pop
int3
cmp
test
sub
fld
arpl
jle
loop
cmp
repz
pusha
mov
pop
cdq
push
sub
call
push
mov
inc
or
scas
xor
test
xlat
xchg
mov
lods
out
cmp
retw
(bad)
fsub
xor
sbb
mov
(bad)
(bad)
mov
mov
pop
cld
in
mov
lods
xor
jmp
aas
call
and
ins
and
jp
shl
inc
cdq
xchg
inc
mov
ret
xor
test
mov
pop
jmp
and
jle
inc
(bad)
pop
fs
je
mov
jmp
jnp
aaa
sbb
cmps
aam
loopne
push
test
nop
jno
lahf
out
mov
lods
push
fbstp
jno
pusha
sbb
sbb
frstor
xchg
aaa
jb
or
bound
lea
and
ja
sub
pusha
push
lea
mov
sahf
adc
and
mov
xor
fwait
out
dec
scas
xlat
sub
iret
fisubr
pushf
jp
mov
into
mov
jp
(bad)
cli
pop
dec
ds
inc
and
mov
enter
icebp
(bad)
test
(bad)
mov
stc
pop
jmp
sar
add
ret
jmp
mov
add
sub
imul
aam
mov
loope
or
xor
fld
jne
mov
sub
aam
call
dec
or
xchg
(bad)
(bad)
out
fnstcw
sub
jmp
dec
jle
cmp
push
jne
xchg
cvttps2pi
push
lea
mov
add
iret
fsub
add
ret
or
mov
bound
sub
jle
js
inc
inc
mov
icebp
out
adc
iret
jne
pop
cli
mov
jmp
out
or
sub
nop
in
xor
stc
cmp
add
fiadd
sub
(bad)
std
sbb
stos
sti
xchg
adc
ins
dec
dec
call
sbb
jl
addr16
jg
mov
(bad)
sub
adc
xor
nop
scas
into
cmp
stos
sbb
retf
pop
jmp
add
add
js
mov
(bad)
daa
int3
ds
mov
out
or
and
dec
xchg
cdq
fisttp
test
jmp
jl
stos
iret
mov
jo
pop
scas
shl
mov
add
fldenv
xchg
fidiv
xchg
enter
(bad)
jl
xchg
inc
gs
mov
xor
fcomip
pop
loopne
push
xchg
and
bound
movs
dec
inc
retf
cmps
pop
xor
sub
sub
jmp
stos
cmp
jno
aam
in
and
pushf
mov
xchg
icebp
or
lods
jb
stc
shl
loope
sahf
mov
ins
xchg
popf
rcl
fcom
(bad)
leave
sub
lods
xchg
add
cdq
cdq
loopne
sbb
mov
popa
push
popf
mul
adc
jo
lods
ins
pop
push
add
shl
cwde
or
mov
xchg
xlat
cwde
sub
jo
pop
cmp
xchg
adc
inc
and
jmp
popa
xchg
sub
sti
(bad)
mov
and
fist
inc
pop
jle
push
je
push
scas
int3
ins
cmp
mov
into
adc
mov
pushf
inc
or
xor
sbb
jne
cmps
jmp
in
adc
inc
into
aaa
or
jge
movs
(bad)
call
out
xor
add
rep
cld
daa
or
ds
loop
sbb
sbb
cmp
sub
cmp
cmp
inc
out
(bad)
lods
(bad)
cwde
mov
mov
cli
in
jb
leave
sub
je
push
cmp
dec
mov
(bad)
adc
pop
inc
and
lea
xchg
lds
jecxz
push
or
mov
inc
int3
push
repnz
out
mov
dec
cmps
shr
retf
out
stos
test
cs
ret
stc
or
into
adc
xor
inc
xchg
mov
pop
push
jns
arpl
push
in
imul
push
jnp
pop
jb
and
or
add
rcr
clc
mov
pop
scas
push
cmp
add
inc
out
test
pop
es
ins
popa
add
inc
aad
fldcw
jg
lahf
mov
lock
pop
inc
mov
outs
mov
mov
adc
mov
inc
out
inc
popf
push
dec
mov
hlt
imul
js
mov
imul
dec
movs
xor
stos
jp
enter
jne
push
push
mov
inc
cli
add
mov
dec
data16
inc
push
mov
cmp
jno
xor
stc
popa
jmp
lods
fld
cmc
dec
or
dec
add
push
bound
sar
cmp
data16
and
jmp
out
leave
das
sar
sub
adc
inc
mov
mov
push
nop
cli
mov
pushf
cmp
adc
and
jp
aad
lock
imul
nop
inc
cmc
xor
push
std
sbb
push
mov
iret
aam
jae
or
imul
jns
cmps
or
and
push
in
xchg
jo
test
add
or
jbe
or
sahf
fst
adc
leave
call
rol
lods
and
xchg
and
loop
adc
sub
pusha
inc
in
out
leave
in
or
loopne
fxam
or
fimul
mov
adc
out
jecxz
adc
mov
(bad)
xlat
int
adc
sub
adc
push
inc
iret
adc
jnp
mov
icebp
jecxz
shl
jb
test
or
aaa
repz
mov
jmp
lock
jge
adc
xor
mov
div
test
add
repnz
sbb
and
arpl
loope
test
or
(bad)
push
repnz
xchg
mov
sub
adc
mov
(bad)
or
xchg
add
out
cmp
cmp
sbb
dec
mov
popa
je
mov
cmc
fs
inc
add
or
scas
jp
ficomp
js
cdq
xchg
movlps
out
loope
in
in
mov
jo
ins
pusha
and
je
into
cmps
fdiv
mov
idiv
cmp
jecxz
fsub
mov
(bad)
stos
jle
std
jle
inc
sub
push
cmp
fdiv
mov
daa
in
addr16
jae
xchg
inc
or
ss
pushf
mov
adc
mov
and
ins
cmps
test
push
push
inc
ja
mov
mov
je
and
inc
ret
xchg
add
xor
jb
mov
xor
cmc
sbb
mov
add
aaa
and
in
pop
jge
jno
ret
js
mov
add
ds
(bad)
xor
stc
or
inc
and
ins
movs
push
mov
sub
sbb
ins
nop
mov
jecxz
fdivr
sub
sub
cmps
jp
sub
rcr
adc
pop
dec
jae
mov
jns
dec
push
xchg
mov
imul
pop
mov
repnz
sar
adc
mov
aas
in
push
xchg
jp
adc
push
ins
or
mov
cmp
out
mov
repnz
loopne
adc
push
les
inc
mov
push
punpckhdq
stos
(bad)
push
sub
jnp
push
imul
push
mov
out
cmp
ins
mov
xchg
and
daa
out
mov
icebp
xchg
gs
xor
jmp
mov
das
jb
jle
pop
pop
hlt
pop
stos
mov
shl
loope
aad
jmp
data16
and
or
mov
inc
neg
push
xor
mov
mov
(bad)
cld
data16
mov
or
xchg
xor
add
jnp
outs
movs
push
cmps
fimul
rcr
ins
jle
sbb
aam
push
jbe
and
jns
mov
adc
push
dec
sbb
dec
stos
mov
sub
scas
pop
mov
in
adc
push
stc
sbb
lahf
pop
dec
pop
xor
add
(bad)
repnz
push
or
and
gs
mov
adc
mov
jo
neg
out
data16
inc
scas
loope
test
inc
imul
jmp
(bad)
and
test
in
das
aad
sub
inc
mul
xchg
or
outs
pop
sub
fidivr
int
dec
jg
sub
add
fwait
adc
sub
movs
pop
sub
stos
inc
adc
jns
mov
out
ret
into
or
sub
ss
retf
jns
dec
and
pop
jmp
xor
shl
sbb
call
dec
jmp
inc
mov
push
cmp
jmp
and
int
sahf
arpl
test
pusha
cmp
push
(bad)
jmp
test
rcr
pop
adc
mov
addr16
push
(bad)
or
mov
mov
push
mov
iret
outs
rcl
call
scas
frstor
push
mov
test
adc
sub
jecxz
lds
iret
lods
ret
and
xor
adc
lods
xchg
or
in
dec
push
mov
push
movs
test
dec
cmps
mov
mov
in
ins
or
stos
sbb
les
dec
cli
pop
pop
add
pop
pop
pop
in
pop
hlt
test
dec
inc
pop
fidivr
jmp
scas
lahf
mov
xor
push
push
xor
lahf
or
hlt
add
push
out
mov
fnsave
fucomip
pop
dec
cmp
add
push
cld
(bad)
mov
fldenv
ss
loope
sbb
adc
or
or
pop
mov
fs
inc
pop
(bad)
cld
fwait
mov
cmp
fld
add
retf
sbb
mov
adc
mov
cmp
adc
adc
outs
rcl
mov
pop
adc
xor
dec
adc
in
jp
sbb
or
mov
enter
pushf
push
hlt
lahf
push
cmps
aad
jnp
js
mov
or
shl
cmp
inc
add
adc
std
push
dec
in
push
enter
mov
sbb
inc
mov
adc
pop
sbb
dec
cld
cmp
mov
out
add
mov
rcl
dec
iret
dec
fnstenv
scas
cmp
mov
fidivr
sbb
push
dec
nop
pop
hlt
push
cmps
jno
mov
xchg
pop
enter
loope
or
xchg
loope
leave
test
jo
add
mov
adc
pop
and
jl
shl
ins
lods
or
sub
ds
and
iret
adc
xor
mov
mov
es
xchg
xor
cmp
sar
and
jo
add
mov
ret
sbb
adc
retf
fwait
mov
cmps
ja
ins
jae
in
(bad)
adc
ds
adc
lods
mov
sbb
mov
sbb
and
cwde
jecxz
or
stos
mov
jbe
fdivrp
jp
test
cmc
dec
add
push
sbb
and
adc
dec
inc
add
sahf
sbb
or
movs
popf
and
aaa
loope
dec
sbb
or
push
enter
sub
in
mov
loope
mov
sbb
pop
fisttp
lods
pop
cmp
aas
pop
jne
or
retf
dec
add
adc
dec
aaa
mov
and
out
xor
sbb
mov
movs
mov
or
adc
push
add
sbb
in
out
into
movs
dec
cmp
out
aad
ss
sar
popa
cmp
fadd
cwde
mov
jge
jnp
mov
dec
lea
cmp
xchg
int
pop
call
sbb
sar
push
adc
fnstsw
dec
sbb
inc
mov
fimul
xor
push
test
rcl
retf
pop
fld
push
sbb
and
mov
mov
ss
jno
xchg
mov
loope
call
pop
dec
sbb
mov
sbb
dec
mov
fsub
push
fisttp
xchg
push
dec
retf
mov
cs
or
mov
jmp
mov
mov
scas
jge
call
mov
dec
pshufw
mov
call
mov
mov
jne
jno
push
sbb
icebp
xor
inc
xor
jo
jg
mov
gs
outs
and
cmp
xchg
dec
fisub
(bad)
xor
xor
mov
add
xchg
mov
inc
sub
mov
dec
xor
popf
lahf
in
sub
fst
into
and
add
jmp
fdivr
fisttp
fidiv
dec
addr16
add
or
pmuludq
icebp
add
hlt
lods
ret
lods
cmp
aam
std
mov
add
in
xchg
push
inc
mov
push
(bad)
ja
sub
jle
repz
call
mov
dec
sbb
mov
mov
dec
loope
sub
imul
adc
inc
fwait
rol
enter
push
jmp
xor
ret
test
out
dec
dec
popa
fadd
cdq
(bad)
mov
cwde
jns
sbb
lahf
and
xchg
je
xchg
add
push
outs
rcl
aas
sub
bound
mov
cmp
inc
add
mov
and
cwde
shr
jg
fistp
pushf
aad
dec
push
inc
pop
mov
cmp
aad
mov
outs
cmp
adc
leave
les
xchg
cwde
cmp
(bad)
and
test
xchg
cmps
or
mov
retf
dec
ins
mov
add
push
ffree
(bad)
shr
hlt
sub
repz
lds
cli
pop
cmc
sub
push
jns
jle
popa
out
inc
mov
pop
enter
cld
repz
cmps
das
movs
mov
xchg
cs
les
cmp
fcomp
popf
into
or
jmp
shl
jbe
add
sub
xor
push
mov
es
movs
dec
int
scas
out
pop
dec
inc
fs
out
mov
stos
out
test
and
rcl
xchg
ja
sbb
or
xchg
std
sbb
inc
test
mov
aaa
sub
bound
jmp
adc
push
mov
pop
ret
and
call
cvtps2pd
out
mov
pop
pop
lahf
stos
scas
inc
into
outs
bound
sbb
mov
outs
mov
in
pop
jp
addr16
push
sbb
and
movs
aam
ret
adc
xor
pop
popf
jno
cmps
mov
mov
jne
mov
popa
aas
xchg
fst
scas
shl
in
inc
adc
cld
dec
adc
pop
cs
pop
sub
push
jbe
mov
dec
inc
xor
xlat
cmp
fild
fadd
or
cwde
mov
xchg
aam
cld
shl
and
fs
popa
lock
bound
xor
mov
fst
ins
arpl
dec
pop
nop
enter
in
test
out
xor
repz
xchg
div
in
(bad)
outs
int
addr16
push
enter
xchg
(bad)
psrad
push
or
xchg
call
pushf
pop
test
or
stc
daa
xor
hlt
mov
inc
in
adc
xor
pop
cmps
aam
push
mov
adc
xor
and
dec
mov
sbb
lahf
repz
or
inc
ja
push
aaa
pop
dec
sbb
or
mov
jns
into
push
ret
inc
pop
dec
sub
jo
clc
push
movs
aas
in
sbb
jl
shl
or
sub
test
push
fbstp
sub
dec
mov
mov
add
cld
jl
xor
movs
jmp
xchg
inc
les
push
cmp
jne
xor
loopne
ss
fild
and
jb
pop
jb
imul
push
sub
cdq
add
dec
jnp
rcr
fmul
in
sub
inc
cmp
add
jge
mov
int
mov
sbb
mov
adc
scas
call
sub
mov
jns
xlat
ret
xor
out
mov
fsubr
addr16
dec
int
jecxz
cmp
imul
adc
cmp
or
loopne
cmps
inc
mov
jnp
jg
neg
mov
mov
inc
iret
lock
sub
inc
pop
fbld
pop
push
loope
mov
sub
pusha
loopne
mov
jp
and
push
pop
popa
push
and
push
outs
call
mov
sub
mov
dec
jge
bound
adc
inc
outs
sub
push
jne
gs
test
stos
fst
adc
(bad)
pop
cdq
jb
aas
call
xchg
test
xchg
pop
cli
push
fsubr
mov
in
xchg
mov
inc
pop
cmps
gs
bound
xor
adc
movs
xchg
cli
mov
arpl
jl
mov
adc
sahf
adc
fwait
adc
xchg
dec
sub
xor
xchg
cmc
cli
inc
pop
jae
mov
sbb
es
stc
dec
out
in
stos
test
push
mov
cwde
inc
test
arpl
ret
popa
inc
and
outs
add
outs
jo
cmp
shr
mov
rcr
dec
mov
adc
mov
icebp
mov
push
fdivr
mov
lahf
jb
add
ret
icebp
sbb
cmp
repz
dec
popf
(bad)
adc
out
or
stos
rcl
inc
stc
repz
or
push
repnz
inc
out
add
xchg
rcl
addr16
mov
mov
mov
push
pop
mov
mov
pop
lea
ret
xchg
std
cs
mov
adc
jp
pop
js
dec
scas
cmp
dec
push
in
test
pop
mov
add
js
dec
into
retf
push
test
jg
popa
imul
sub
xchg
test
or
and
jb
pop
ins
xchg
call
dec
rcl
enter
sbb
cmp
xor
retf
or
lea
sbb
dec
enter
mov
adc
jmp
push
jbe
dec
mov
out
add
cdq
mov
push
(bad)
or
test
mov
loop
fisub
ret
mov
push
fs
dec
repz
dec
add
in
stc
call
add
or
fs
in
es
cmps
inc
sub
call
das
enter
lods
stos
inc
mov
mov
test
icebp
cmp
pop
push
push
leave
fisttp
rcr
and
ret
or
adc
mov
sbb
jle
mov
int3
mov
into
and
fwait
cmps
lds
pop
push
out
mov
gs
mov
cmp
std
cmps
stos
pusha
scas
push
mov
add
pop
retf
inc
sar
bound
mov
pop
fcomp
enter
mov
adc
(bad)
or
mov
dec
inc
rcl
jno
jo
push
adc
push
jne
add
leave
imul
in
mov
xchg
(bad)
cmp
push
lods
(bad)
jb
inc
fild
ds
pop
aad
mov
add
aaa
clc
rcl
es
xchg
mov
jmp
enter
jmp
cmp
(bad)
call
(bad)
in
into
repnz
xor
inc
aad
data16
push
adc
and
xchg
retf
push
stos
mov
or
(bad)
xor
jno
(bad)
dec
aam
jl
cmps
mov
arpl
mov
mov
cmp
adc
mov
ficom
dec
popa
sub
fld
mov
jb
js
pop
sub
jae
inc
dec
push
pushf
loope
jb
jge
shl
shl
ror
sbb
sbb
dec
sbb
xchg
jle
sar
push
adc
popf
repz
sbb
hlt
retf
scas
pop
cmp
test
aaa
pop
pop
neg
in
mov
shl
push
loopne
sub
jno
xchg
xchg
mov
mov
pop
xor
dec
loope
lds
adc
adc
aam
ds
popa
aas
stos
mov
rcl
pop
sahf
in
or
xchg
xchg
pop
push
es
xchg
inc
adc
iret
pop
and
inc
sbb
ss
or
push
inc
lods
jnp
mov
dec
sub
adc
lods
call
add
push
push
cmp
fsubr
in
cli
mov
out
ret
pop
aam
cmps
imul
sub
add
jmp
(bad)
add
xchg
leave
xchg
pop
loop
mov
lea
add
push
lods
retf
pop
iret
pop
pop
xchg
je
repz
hlt
xchg
xlat
aam
cmps
call
add
xchg
add
ins
cmp
and
in
retf
add
xchg
or
gs
pusha
lods
cmp
push
adc
(bad)
stos
test
fmulp
call
aaa
imul
cmps
loopne
daa
inc
daa
push
shl
or
sbb
xchg
xor
sbb
cmps
cmp
int3
xchg
adc
test
popf
mov
into
call
mov
xor
ins
pop
sub
dec
push
sbb
xor
out
lds
push
xchg
cdq
push
dec
cmp
and
repnz
jmp
fcomp
ins
xor
out
jle
xchg
xchg
jo
lahf
lea
int3
jp
cmp
int3
sbb
cmps
mov
aaa
or
push
add
aam
adc
and
push
sbb
dec
dec
adc
xor
and
retf
ror
dec
sbb
out
repz
call
or
fidivr
pop
mov
daa
xor
shl
in
push
mov
inc
push
fidivr
test
xchg
data16
inc
jl
fdiv
bound
jmp
(bad)
sbb
gs
cmp
scas
js
or
sbb
xlat
leave
fxch
pop
stos
out
mov
and
call
lock
push
cmps
jno
sbb
dec
cmp
(bad)
xchg
js
repz
jp
jb
push
mov
mov
pop
xlat
loop
fld
mov
dec
jb
inc
add
sub
mov
outs
test
inc
dec
xchg
jge
stos
movs
push
and
leave
inc
adc
adc
or
or
or
ds
call
mov
adc
enter
pop
jg
(bad)
xchg
stc
ror
addr16
xchg
ret
sbb
mov
cmp
mov
repz
xchg
loop
push
imul
pusha
sub
mov
adc
pusha
je
(bad)
xor
or
add
lods
jge
in
pop
xchg
and
sub
cmp
sbb
int3
push
xchg
xchg
xchg
mov
xor
fisubr
dec
loope
fidivr
xchg
or
push
pop
mov
push
je
sub
mov
xor
sbb
mov
lds
sbb
test
ins
gs
nop
push
lds
xor
or
ins
xchg
rcl
cwde
push
jb
xor
stc
push
lods
xchg
mov
(bad)
outs
xchg
sbb
iret
sbb
fisubr
js
cmp
xor
or
jp
and
scas
jns
repnz
pop
call
jae
mov
in
(bad)
jmp
push
pop
pop
out
jne
xchg
ins
fcmovnb
push
mov
pop
or
xchg
jmp
loop
xor
repz
out
mov
sbb
rcl
jg
xlat
cmp
jmp
loopne
call
dec
int
add
ds
jbe
pop
jo
inc
cmp
cli
xor
popa
push
pop
and
mov
imul
push
mov
push
sbb
(bad)
and
sub
aad
xor
adc
sub
jle
xchg
jmp
inc
icebp
xor
imul
lods
mov
mov
dec
or
push
lds
rcr
scas
mov
in
mul
lods
adc
test
mov
imul
(bad)
std
into
mov
mov
psadbw
cwde
ja
push
(bad)
mov
dec
jno
cmps
push
cmc
test
scas
push
lds
out
mov
mov
(bad)
fsubr
sar
adc
out
inc
imul
sahf
sbb
or
adc
sets
int3
mov
jmp
sub
sbb
imul
dec
retf
jle
test
into
popf
mov
and
sbb
inc
mov
aas
ret
inc
xchg
iret
in
aaa
sub
xchg
imul
lods
pop
sbb
jb
sub
test
(bad)
aaa
sbb
popf
mov
test
fcmove
repz
adc
jno
push
sub
mov
aaa
ins
cmp
outs
sub
bound
les
inc
fucom
add
pushf
mulps
ins
jns
sub
ins
ret
imul
ds
out
out
mov
mov
pusha
xor
pushf
sahf
data16
push
mov
jns
jb
lds
inc
pop
mov
test
fsubr
shl
(bad)
cmp
pop
mov
inc
aam
push
mov
retf
xchg
push
mov
jmp
lea
bound
sub
nop
pop
pop
pop
cwde
clc
dec
pop
fist
jb
call
loope
pop
jg
xor
jne
shl
mov
mov
pop
and
into
daa
mov
cmp
or
jp
jns
fidiv
outs
pushf
fs
cwde
mov
pop
movs
inc
mov
nop
xlat
lahf
cmc
cmp
jne
and
xor
dec
inc
aam
out
leave
dec
aad
dec
adc
inc
sahf
call
sbb
inc
or
fwait
pop
iret
shl
rep
outs
stc
and
mov
mov
(bad)
mov
ficomp
cmp
out
(bad)
lods
sbb
mov
inc
adc
lgs
ins
mov
mov
xor
mov
add
in
fdiv
or
jb
inc
cmp
cmp
sbb
inc
cmp
fdivr
enter
int
adc
iret
xchg
xor
test
mov
pop
in
ss
leave
xchg
je
xlat
or
jge
pop
cmp
test
jp
xchg
mov
xchg
es
scas
xchg
sub
int3
xor
out
push
jecxz
lahf
rcpps
jo
xchg
outs
test
xor
dec
mov
loope
inc
xchg
inc
inc
lods
ins
scas
sbb
cmc
stos
mov
mov
popa
push
pop
push
mov
xchg
or
fisub
je
jl
movs
adc
mov
imul
pop
pop
sbb
mov
push
fisttp
add
sti
mov
(bad)
imul
imul
jae
out
inc
add
inc
inc
(bad)
jle
retf
imul
gs
loop
push
mov
popf
aad
sub
xor
push
and
lock
leave
sbb
call
jmp
das
lea
mov
cmc
aas
enter
adc
mov
jnp
push
out
retf
cmps
ret
je
iret
and
ret
pop
sub
and
pop
mov
adc
jo
jmp
stos
xor
cwde
jns
paddsw
mov
mov
jg
xchg
das
and
cwde
lods
pop
mov
push
fadd
cld
and
jmp
aad
addr16
inc
mov
cli
mov
push
fsub
dec
ss
stos
std
clc
inc
push
sar
cmp
mov
jno
into
pop
pop
or
mov
inc
sahf
out
(bad)
push
pushf
sub
(bad)
mov
test
(bad)
pop
lea
mov
push
and
js
jg
sbb
mov
enter
leave
aad
loope
retf
xchg
push
mov
enter
lods
sub
stc
(bad)
and
sbb
(bad)
int
xchg
(bad)
jmp
push
into
out
pop
pop
pop
xchg
pushf
add
or
lea
mov
or
sub
lds
out
retf
inc
cmp
(bad)
sbb
movs
movs
int
outs
cld
loope
fiadd
pop
pop
add
adc
popa
and
cmp
dec
add
adc
sbb
repnz
adc
xchg
imul
lock
sbb
dec
pop
stc
ror
retf
adc
in
aaa
and
imul
bound
pop
mov
jmp
in
pop
jb
bndldx
push
inc
push
sub
fcmovnu
loope
mov
sub
or
mov
rcr
push
dec
sub
aad
cmps
push
push
sbb
inc
push
pusha
push
ins
mov
cmp
aas
sbb
or
js
std
push
outs
or
or
data16
fld
(bad)
inc
xor
add
mov
iret
adc
add
ds
adc
(bad)
out
mov
mov
(bad)
jmp
sbb
lds
aad
and
sti
jbe
xor
mov
sbb
shl
jno
fstp
(bad)
arpl
add
hlt
push
or
les
mov
ins
mov
adc
sub
retf
mov
daa
push
add
jno
gs
push
popa
or
dec
out
pushf
adc
and
xor
popf
and
into
inc
inc
jp
bound
xchg
push
add
sti
movs
add
addr16
fcom
push
pop
xor
shl
loop
ins
lock
sahf
(bad)
aam
movs
fist
jnp
inc
sbb
xor
ins
push
in
mov
bound
hlt
(bad)
fsub
push
push
dec
cmp
inc
dec
fucomp
jge
pop
sub
lods
int3
sub
sub
aaa
gs
xchg
cmp
das
repz
push
push
in
mov
mov
mov
mov
mov
dec
xor
dec
jge
(bad)
inc
xlat
or
lods
imul
ins
cmps
fwait
imul
sahf
xchg
add
inc
ins
pusha
push
idiv
cmps
leave
(bad)
pop
jle
push
mov
std
in
xchg
(bad)
dec
out
ins
push
(bad)
cmp
sahf
push
mov
repz
data16
bound
imul
(bad)
call
inc
cmp
shl
or
mov
std
sahf
test
adc
inc
cbw
(bad)
sbb
mov
fnstenv
nop
int
int3
movs
pop
jge
pop
xor
adc
enter
sub
std
push
inc
push
cwde
mov
pop
xlat
mov
cmp
mov
ins
sub
push
ja
mov
leave
xchg
sub
cmc
mov
jmp
dec
inc
jo
out
or
es
xchg
and
sbb
(bad)
outs
mov
xor
cmp
jmp
enter
xchg
rcl
add
inc
(bad)
(bad)
mov
mov
and
out
cmc
add
cwde
dec
and
push
mul
arpl
lock
out
aaa
(bad)
xchg
(bad)
cld
sbb
dec
popa
pop
inc
mov
adc
out
xchg
test
xchg
pop
adc
loope
into
jnp
mul
int3
ret
push
fnstcw
(bad)
xlat
mov
in
jo
cld
push
sar
retfw
mov
es
fdivr
jecxz
scas
sub
add
iret
enter
inc
out
das
out
mov
call
and
out
iret
add
bound
arpl
adc
cmps
inc
dec
(bad)
sub
xor
repnz
(bad)
rcr
xor
icebp
addr16
add
pop
mov
mov
cwde
cli
into
pop
jo
(bad)
jge
add
jnp
pop
mov
sbb
xchg
test
cmps
inc
mov
rcl
stos
jecxz
cmp
mov
add
adc
call
xor
stos
test
mov
dec
je
push
or
dec
sub
or
ins
les
mov
jbe
in
scas
retf
out
ins
mov
movs
popf
call
stos
dec
mov
sbb
sub
xchg
mov
ja
clc
shl
clc
ja
push
dec
adc
inc
mov
cwde
test
idiv
pop
data16
pop
outs
jae
sub
and
jne
adc
jmp
call
push
cmp
daa
les
jns
fdiv
std
inc
adc
xlat
xlat
sbb
and
push
adc
data16
cmc
mov
mov
into
pop
addr16
icebp
push
inc
(bad)
sub
push
cld
stc
adc
ror
xlat
pop
lods
ret
in
and
adc
clc
or
mov
pop
mov
push
xor
popa
aas
add
mov
fiadd
cmp
jl
lock
fld
mov
movs
dec
ffree
push
sbb
push
int3
fimul
dec
in
add
sbb
ss
cmp
pop
mov
pop
pop
sti
or
sub
mov
sub
gs
xor
sti
add
mov
nop
inc
ss
xchg
cmc
fbstp
ins
int3
add
sbb
in
mov
jb
cli
mov
mov
inc
or
scas
xor
xchg
mov
into
inc
push
mov
or
adc
in
cli
fcom
in
mov
cmp
jl
xchg
imul
scas
repnz
fdiv
(bad)
in
dec
es
call
loop
les
and
add
xor
pop
xor
js
adc
mov
pop
in
cmp
mov
fdivr
and
sbb
inc
jecxz
std
sbb
inc
nop
loop
movs
imul
les
sub
xor
das
xor
inc
les
fwait
(bad)
xchg
add
(bad)
or
js
dec
sbb
hlt
dec
adc
loope
jg
pop
dec
and
lahf
imul
adc
sub
stc
sar
or
mov
mov
cs
or
cmp
or
and
mov
cmp
adc
int3
mov
sti
lock
fisubr
push
dec
sbb
mov
mov
nop
inc
mov
and
push
rcr
and
enter
add
test
ja
ret
jno
jl
enter
xchg
ret
pusha
gs
aas
inc
mov
mov
ds
lahf
jae
or
pusha
pop
and
jmp
adc
pop
dec
and
jo
jne
xor
aaa
loopne
cmp
mov
repnz
sub
pop
aaa
fstp
add
int3
mov
ss
mov
mov
outs
add
push
and
sub
push
and
aad
jae
or
fistp
dec
in
lods
push
xor
aad
push
out
stos
or
xlat
inc
lods
mov
mov
sub
jb
stc
lahf
or
jns
sub
mov
sar
xor
add
bound
aam
rol
or
in
and
arpl
cmps
inc
xor
div
mov
sub
call
mov
mov
pop
imul
dec
ins
dec
cmc
push
mov
in
mov
or
push
mov
jns
jg
cs
popa
ret
xlat
imul
inc
add
inc
jmp
enter
pavgb
mov
ins
movs
stos
jns
imul
dec
xchg
gs
jb
gs
adc
mov
pop
movs
retf
iret
sbb
in
and
ret
pushw
dec
sti
cli
fcomip
push
push
add
pop
mov
(bad)
aad
mov
push
in
xchg
add
inc
inc
pop
jl
(bad)
rcr
es
lds
sbb
jle
mov
or
or
xchg
pop
inc
xchg
clc
ds
xlat
ret
ss
sub
xor
push
call
call
mov
(bad)
fs
cwde
lock
pushf
ror
push
inc
lea
out
in
call
and
jg
mov
imul
(bad)
movs
mov
out
loopne
xchg
test
xchg
enter
cmps
fistp
pop
into
cmovb
mov
jmp
xlat
push
movs
mov
add
fmul
pop
sbb
mov
nop
out
jp
xchg
in
cmp
sbb
inc
xor
adc
test
dec
sbb
(bad)
mov
jmp
les
retf
in
xchg
sahf
mov
mov
inc
int3
or
xchg
mov
data16
in
fcmovne
mov
sar
test
sub
or
lock
lds
gs
(bad)
push
push
cdq
inc
or
jne
adc
ins
lea
xchg
cmps
test
sub
dec
adc
pop
push
fcomp
and
and
imul
push
or
cld
add
aas
sbb
adc
leave
or
test
aam
cwde
cwde
sti
in
pop
add
sbb
cmp
sbb
loopne
out
rcr
xor
push
or
cwde
movs
sub
add
jo
push
xchg
loop
mov
mov
shl
mov
retf
pop
xor
jns
int3
add
adc
jl
pop
and
imul
sub
or
ret
adc
icebp
in
mov
dec
push
(bad)
in
lods
(bad)
pop
fadd
push
sbb
push
pop
int
mov
or
cmp
fld
cwde
and
fwait
cmp
test
test
(bad)
xlat
outs
and
cmp
fist
mov
and
in
pop
dec
cld
inc
repz
ret
mov
xchg
mov
cld
out
pusha
or
xchg
sti
or
mov
into
clc
fstp
call
fist
mov
push
xor
pusha
fld
inc
xor
push
movs
cli
iret
adc
jo
sbb
push
(bad)
call
mov
shr
(bad)
pusha
mov
add
jmp
sbb
aam
jge
inc
xlat
rol
out
mov
inc
inc
or
mov
or
nop
bound
mov
stos
out
jp
xor
gs
sbb
mov
imul
pop
sbb
inc
ss
push
not
mov
out
dec
and
lahf
lods
mov
inc
xor
and
lds
mov
cmp
mov
fisttp
pop
scas
and
mov
and
fidivr
push
mov
idiv
lods
pop
pop
dec
push
iret
cld
ret
in
shr
sar
inc
call
fisub
inc
inc
test
and
or
mov
mov
dec
into
cdq
popf
xor
ss
in
jb
mov
loope
scas
push
out
add
sar
mov
(bad)
imul
push
stos
cmps
cmps
pop
push
adc
fsubr
not
sub
mov
mov
dec
jmp
(bad)
dec
mov
cmp
enter
imul
sub
pop
call
jmp
test
idiv
and
pop
mov
jo
in
call
xlat
je
mov
cmp
mov
dec
jo
pop
push
sub
ja
push
cld
int3
push
xchg
aaa
sbb
int
clc
push
mov
mov
jmp
repnz
push
mov
ret
sti
mov
jg
lahf
or
dec
je
xor
dec
dec
xchg
ret
jl
and
cmp
xchg
add
rol
fwait
(bad)
pop
fwait
repnz
cmp
movs
xchg
sbb
xor
cld
pushf
sbb
aam
cmps
inc
lahf
jne
mov
call
adc
leave
sbb
shr
xchg
jno
rol
add
push
mov
arpl
daa
es
stos
xlat
cwde
dec
(bad)
cmps
dec
jg
and
aam
and
sub
mov
mov
fwait
xchg
inc
pop
xchg
stc
inc
fnstsw
jecxz
pop
lods
and
nop
out
inc
adc
push
mov
repnz
push
mov
mov
in
jl
mov
cmp
cld
push
outs
lgs
add
xchg
jecxz
fs
xor
jo
dec
add
jl
cmp
xchg
xchg
retf
adc
jno
popf
pusha
sahf
mov
daa
add
dec
push
mov
sahf
cdq
cdq
call
and
ds
test
stos
and
stos
and
sub
stc
jb
sub
test
lds
ror
dec
inc
jo
mov
(bad)
loop
fisubr
repz
add
cmovl
pop
fcmovnbe
ret
cmp
inc
jp
inc
and
jb
pop
mov
dec
and
push
loop
cmp
sti
int
jno
inc
mov
lock
jmp
fdiv
hlt
pop
cmps
push
push
dec
add
jecxz
xchg
addr16
stc
mov
pop
jmp
cli
dec
jo
lods
jecxz
cmp
ror
mov
mov
push
aaa
inc
add
xor
leave
stc
adc
sub
outs
repnz
add
mov
pop
mov
sbb
lea
jp
fwait
repnz
mov
pop
movs
xchg
outs
push
shr
cdq
imul
cld
das
and
sbb
ins
dec
inc
arpl
xor
cmp
je
lock
daa
lea
movs
push
mov
jns
jmp
ror
sar
cmp
dec
test
adc
inc
xlat
or
dec
fist
int
mov
pop
sbb
mov
pop
popa
or
mov
clc
cmps
(bad)
and
mov
cmp
out
clc
inc
pop
setbe
cmp
std
ins
pop
dec
add
rcl
sub
test
scas
imul
call
les
mov
test
sbb
repnz
cmp
ins
dec
or
cli
sub
sbb
cmp
neg
mov
jb
sbb
test
dec
adc
inc
dec
pop
lods
into
bound
dec
mov
or
adc
dec
sbb
mov
xchg
fisttp
sti
push
jno
imul
or
cmc
mov
mov
xchg
rcr
push
and
clc
ret
loop
jecxz
test
add
fwait
jae
mov
scas
or
and
xchg
in
aam
outs
out
mov
push
in
(bad)
imul
mov
ja
mov
adc
fnstcw
add
ret
retf
sub
or
inc
cld
jnp
shl
mov
(bad)
fsub
xlat
popf
push
mov
push
or
adc
outs
push
neg
jno
shl
icebp
fsub
mov
icebp
out
cmps
sbb
sbb
inc
or
fmul
cs
iret
fs
aad
pop
sbb
dec
push
pop
hlt
mov
pop
sub
push
pop
pop
daa
mov
mov
sbb
leave
dec
arpl
sahf
fdiv
leave
inc
in
mov
imul
(bad)
(bad)
rcr
dec
mov
xchg
es
or
lahf
xchg
ins
imul
push
add
mov
das
inc
cld
sub
adc
sbb
mov
mov
data16
push
xchg
push
fwait
pop
hlt
arpl
fisttp
dec
push
mov
in
inc
add
cwde
test
push
inc
rcr
mov
outs
nop
(bad)
adc
test
mov
je
sbb
and
jb
mov
fimul
stos
stos
jecxz
adc
sub
jbe
add
xor
mov
out
arpl
jmp
add
mov
and
sbb
je
fisttp
push
sub
leave
inc
daa
adc
imul
add
sti
push
jmp
imul
pop
pop
sub
sub
div
out
scas
pop
out
icebp
push
adc
mov
sub
inc
loopne
or
mov
inc
and
mov
xor
cmp
mov
(bad)
imul
mov
jl
div
movs
(bad)
jne
or
dec
int3
dec
aad
or
loop
xchg
push
out
pop
push
(bad)
mov
mov
jp
arpl
test
pop
ins
icebp
mov
cwde
cmps
or
add
lds
jbe
rcl
jge
fld
mov
push
mov
mov
lahf
test
out
fs
xor
push
outs
and
push
test
neg
(bad)
pop
pop
and
loopne
xlat
add
pop
cmp
leave
cmp
add
mov
loop
(bad)
out
inc
add
adc
adc
cmp
rol
sar
add
repz
test
cmp
imul
push
les
dec
cwde
idiv
push
imul
mov
pushf
fdivr
pop
shl
cld
jecxz
retf
fdiv
sub
aad
push
fdiv
sti
fcmovu
fucomp
xchg
ret
mov
inc
fisttp
sbb
pop
and
aam
mov
and
fist
fist
stos
fwait
icebp
sahf
scas
out
mov
push
pop
imul
test
cmp
shl
cwde
and
add
cmp
cdq
in
out
movs
movs
int
xor
aam
imul
jge
std
push
xor
push
sahf
les
movs
xor
mov
xchg
xor
xchg
mov
bound
mov
inc
xchg
daa
fwait
loopne
add
and
xor
jge
mov
out
adc
xor
dec
push
fimul
and
jb
sbb
mov
adc
loop
clc
pop
add
add
push
scas
jne
imul
out
push
retf
cs
setnp
mov
test
sti
imul
imul
jmp
jmp
mov
ins
push
ins
or
dec
sti
inc
jge
xor
aam
push
scas
mov
cli
pop
cli
mov
sub
sub
jbe
sbb
loopne
daa
pushf
and
or
(bad)
outs
loopne
test
jns
inc
inc
and
call
add
int
mov
mov
in
jecxz
std
fs
out
enter
dec
jb
adc
xor
xchg
cmp
mov
mov
arpl
loope
mov
fld
push
out
hlt
cld
xchg
push
jp
mov
fnsave
fcmovnbe
mov
cli
add
les
stos
add
pop
push
push
jbe
jp
ins
push
and
inc
dec
(bad)
xchg
enter
jmp
pop
jb
scas
mov
cmp
adc
call
nop
fild
icebp
(bad)
cld
stos
jo
push
adc
test
sbb
sbb
inc
jmp
(bad)
fisttp
mov
xor
js
mov
ret
ret
fcomp
test
fdivr
inc
adc
jmp
movs
shl
iret
mov
aad
outs
adc
mov
and
(bad)
stos
dec
fadd
in
(bad)
fild
jo
inc
lock
jns
repz
sbb
sub
aad
in
jg
mov
pop
hlt
shr
jge
sbb
rol
mov
or
sub
add
sub
mov
fisub
addr16
ins
inc
xlat
pop
pop
or
xchg
push
dec
and
add
sbb
jp
jo
sub
pop
fild
xchg
inc
xor
or
aad
call
mov
jno
(bad)
int3
mov
test
and
push
and
stos
jp
cli
pop
cmp
int
and
pop
jb
cmp
cmp
enter
sub
fwait
jmp
stos
adc
in
out
test
fistp
jge
aas
lea
stc
adc
xor
mov
mov
movs
imul
cwde
pop
daa
sbb
push
lahf
inc
jp
ret
fdivr
jp
jge
dec
xchg
mov
jo
xlat
mov
xlat
retf
jae
ret
dec
sub
inc
rcl
movs
dec
dec
adc
xchg
mov
xlat
add
int
mov
pop
jns
loop
mov
int
sar
movs
frstor
sub
bts
scas
jle
cld
addr16
pop
fidiv
mov
imul
mov
loop
pop
fimul
aam
cwde
test
sbb
test
jno
jns
or
mov
pop
int3
ret
outs
ds
(bad)
xchg
push
mov
mov
push
dec
xchg
imul
cwde
mov
xchg
pop
cmp
mov
mov
pop
movs
push
cwde
jo
frstor
sub
sbb
movs
cld
mov
retf
ja
cwde
fsqrt
jbe
jl
movs
dec
(bad)
out
and
je
rcl
cmp
cmp
inc
pop
xor
xchg
ss
pop
mov
rcr
fldenv
test
shr
xchg
or
(bad)
out
bnd
mov
les
cmc
fldcw
cmc
and
add
or
jge
test
pop
push
lods
fnstenv
mov
enter
adc
jecxz
mov
mov
xchg
mov
push
lahf
inc
mov
xor
mov
add
gs
addr16
sbb
xchg
jg
iret
jb
sub
lahf
dec
lea
mov
nop
adc
xor
scas
and
arpl
jae
shl
add
icebp
or
jecxz
or
(bad)
dec
mov
rcr
clc
in
or
(bad)
and
mov
and
clc
sbb
push
(bad)
loopne
shl
fsubr
aas
inc
fld
les
fdivr
sbb
ror
mov
jge
stos
and
ins
push
aam
push
add
rcr
adc
aad
or
outs
cmp
div
dec
mov
lods
adc
mov
out
cs
jl
adc
add
pop
aad
mov
loop
ja
aaa
adc
test
sti
mov
les
dec
xor
mov
inc
(bad)
ffree
pop
pop
ret
loope
mov
xchg
mov
fldz
jg
out
adc
adc
jb
sub
adc
leave
out
xchg
mov
stc
hlt
cmp
enter
aam
ja
push
mov
push
or
bound
dec
push
ins
xlat
xor
(bad)
addr16
add
sar
call
inc
cdq
cwde
aad
xchg
jns
push
retf
xor
cld
mov
call
leave
push
fdiv
push
stos
std
mov
xchg
push
arpl
(bad)
mov
in
xchg
test
add
pop
pop
lods
and
lods
dec
xchg
sbb
icebp
imul
test
std
xor
mov
fist
cmc
jmp
inc
ror
in
js
and
mov
xor
jmp
and
jp
popa
sub
repnz
enter
arpl
ins
data16
sbb
mov
mov
pop
jmp
inc
xor
or
js
xchg
jl
dec
imul
xor
cmps
jl
jle
jb
sahf
mov
sbb
dec
call
ficomp
adc
pushf
clc
push
sub
jnp
mov
lock
xchg
push
xchg
aad
rol
adc
js
add
inc
fsub
sbb
and
and
push
jns
fld
pop
jmp
std
aam
mov
ret
cdq
jae
adc
stos
mov
xlat
mov
jmp
scas
fadd
retf
xor
mov
push
xor
and
mov
ficomp
and
je
call
cwde
push
fiadd
mov
add
retf
inc
mov
or
icebp
int3
cli
sbb
es
mov
sbb
jae
rcl
xor
add
and
pop
pusha
pop
sub
cwde
pop
pop
and
nop
xor
repz
sbb
push
gs
sbb
loopne
and
xor
ficom
dec
nop
repnz
repz
mov
sbb
nop
movs
inc
sub
jno
dec
mov
sub
pop
or
mov
mul
enter
fs
and
ror
pusha
dec
xor
es
mov
rcl
call
cmps
add
pop
push
test
stc
mul
movs
call
mov
enter
jno
cmps
mov
or
adc
lods
or
data16
mov
sti
mov
fimul
mov
test
sub
pop
or
adc
mov
adc
xchg
xchg
dec
fwait
adc
or
aad
shl
inc
cmp
(bad)
fmul
rcl
push
inc
repz
push
js
push
aaa
mov
scas
movs
jno
jmp
mov
jmp
out
add
icebp
mov
pop
dec
addr16
jae
xor
cmps
ss
push
pop
mov
js
(bad)
push
repnz
fld
jp
idiv
movs
and
dec
ss
retf
jmp
(bad)
aas
push
push
dec
mov
(bad)
cmp
hlt
mov
lock
lea
push
mov
push
mov
shl
mov
sar
outs
xor
cmp
ja
xchg
push
mov
pop
fbstp
xor
fisubr
and
data16
and
ror
xchg
mov
ret
ror
inc
outs
inc
in
outs
jo
and
popa
xchg
lea
mov
or
pop
mov
xor
xor
mov
pop
enter
cmp
cld
retf
mov
gs
outs
js
ins
inc
test
repz
retf
cdq
and
test
mov
or
dec
and
hlt
int3
and
xor
sbb
jb
shl
jmp
sub
aaa
adc
icebp
jmp
das
pop
shr
mov
mov
jne
xor
jge
mov
jmp
sub
stos
clc
xchg
outs
cmc
sbb
mov
mov
inc
xchg
add
(bad)
sub
or
mov
cmp
fadd
mov
sti
mov
dec
data16
xor
add
movs
repnz
sub
sbb
dec
xchg
(bad)
out
add
frndint
jmp
dec
jns
movs
adc
jbe
lahf
mov
sti
jg
test
clc
sub
pushf
cmps
push
pop
push
cli
xlat
mov
popf
test
fiadd
add
xor
fs
or
mov
inc
push
ds
ins
loop
aam
xchg
in
mov
cmps
retf
int3
and
js
inc
lea
je
lods
adc
adc
mov
lahf
repnz
mov
mov
mov
push
push
call
jbe
lea
mov
inc
pushf
dec
jmp
or
(bad)
sar
cmp
mov
pop
pop
jge
rol
mov
cli
add
mov
and
inc
movs
jnp
xchg
fnstsw
add
mov
mov
or
pusha
retf
mov
sub
push
scas
loopne
mov
fidiv
xchg
inc
pop
fistp
and
in
shl
aad
and
xchg
mov
sbb
retf
jb
int
inc
nop
sbb
xor
shl
call
gs
ret
xchg
sub
mov
cmps
xchg
loope
and
(bad)
icebp
pop
fistp
mov
movs
int
pop
icebp
fimul
mov
jno
pusha
push
cmp
fdivr
cmp
xchg
fnstenv
mov
lahf
rol
stos
jecxz
sbb
jg
xchg
and
sub
jae
fst
push
arpl
fiadd
xor
imul
and
dec
push
fwait
jecxz
pop
add
dec
add
mov
(bad)
add
xchg
retf
call
cld
push
test
xchg
lods
iret
inc
mov
fiadd
(bad)
(bad)
jmp
xor
aas
stos
push
sub
sub
inc
into
loop
adc
cmp
sbb
add
test
les
movs
fwait
test
mov
mov
or
push
mov
pop
pusha
jle
cmps
mov
stos
pop
in
cmp
jmp
ror
movs
inc
cmp
inc
mov
jo
cmp
in
dec
ins
mov
sub
adc
out
push
or
retf
iret
cmp
pop
mov
outs
out
call
mov
push
ss
inc
dec
sbb
push
sbb
xor
or
inc
add
push
sub
and
push
rcr
ss
xchg
sub
jp
sahf
stos
pop
dec
jb
inc
mov
mul
repnz
inc
push
iret
xchg
mov
cld
pusha
je
aaa
cld
push
xor
fstp
mov
push
sbb
adc
ds
call
popf
mov
mov
shl
sar
inc
icebp
movs
push
xchg
or
and
aam
sub
or
push
push
sar
xor
es
sar
push
ror
mov
imul
ror
xchg
ss
inc
xor
mov
add
jl
(bad)
stos
xchg
cdq
fstp
popf
mov
cmp
fidiv
xchg
push
icebp
cmps
fs
jg
retf
jp
lds
sbb
ss
ror
rcr
out
add
add
mov
sti
jg
xor
sub
iret
es
dec
xchg
cmp
arpl
jo
icebp
pop
xlat
cs
adc
pop
jne
repnz
outs
add
pop
fwait
mov
mov
mov
and
xor
sub
mov
dec
popa
add
xor
pop
sbb
or
inc
aas
in
fstp
xchg
ret
shl
sbb
push
iret
add
popa
sub
jne
mov
or
pop
ds
popf
mov
shr
(bad)
pop
push
sub
push
or
jno
dec
xchg
pop
jp
push
shr
es
mov
mov
ins
sbb
mov
lea
add
mov
push
push
xor
retf
in
fwait
or
leave
cli
int
dec
adc
mov
shl
test
mov
ret
bound
and
aaa
sub
mov
xchg
mov
sub
not
shr
sub
pop
adc
inc
shl
out
jg
hlt
dec
pop
xchg
xchg
rcl
xor
addr16
push
sti
inc
imul
inc
lds
push
jnp
and
and
mov
add
cmp
sbb
or
(bad)
int
in
inc
mov
adc
pop
pop
xlat
mov
mov
fadd
cmc
out
push
mov
push
jl
jno
bound
mov
push
push
push
call
mov
push
pop
add
or
mov
add
dec
shl
stos
sub
push
xchg
mov
hlt
ret
in
mov
idiv
and
in
loopne
cmp
mov
popa
loope
mov
sub
pop
rol
lods
mov
fistp
xchg
(bad)
mov
nop
jmp
mov
push
iret
xchg
les
pushf
sub
ds
jae
and
add
test
push
cmps
dec
jg
jmp
sbb
je
mov
outs
js
dec
push
sbb
inc
adc
test
rol
out
mov
or
or
loopne
sub
jno
xor
sbb
pop
add
sbb
inc
cld
inc
pop
in
push
test
out
pop
rcr
jge
ret
(bad)
cli
jmp
mov
mov
popa
retf
mov
push
outs
not
adc
nop
into
rcl
out
es
daa
sbb
lahf
add
iret
xchg
ins
sbb
std
ds
mov
sub
nop
pop
inc
out
fdiv
xor
xchg
outs
icebp
loopne
aam
addr16
and
fbstp
or
fcomp
nop
xor
scas
push
xchg
xchg
icebp
out
mov
xchg
inc
cmp
jl
fldcw
movs
aaa
adc
dec
xor
sar
sub
test
mov
push
sbb
ror
ror
and
sub
pop
jmp
and
adc
test
dec
call
jecxz
aad
aas
cmps
repnz
or
push
mov
xlat
test
loopne
mov
push
or
cmps
addr16
or
push
xchg
(bad)
jecxz
fidiv
jnp
les
xchg
ret
mov
cwde
scas
mov
dec
pushf
jae
stos
jns
(bad)
hlt
es
or
ret
mov
mov
test
jge
xor
pushf
stos
dec
xchg
or
(bad)
ins
pusha
loopne
sub
aad
sub
dec
pop
ins
push
xchg
int
(bad)
pop
data16
push
cmp
pop
jno
push
js
xchg
int3
in
(bad)
mov
test
and
aas
cmp
xchg
jo
add
cmp
idiv
pop
aas
mov
das
shl
shr
clc
push
lds
cmp
stos
sub
scas
(bad)
xchg
push
in
mov
and
shl
inc
lock
popa
cmp
fiadd
inc
inc
scas
pop
sub
sub
rcl
cdq
sub
repz
stos
sub
rcl
jcxz
jmp
daa
jbe
mov
clc
inc
cmp
sub
mov
xchg
das
loopne
ds
(bad)
test
dec
or
sub
cmp
out
inc
cmp
cmp
(bad)
icebp
inc
int3
ds
cmps
rcl
in
stos
aad
call
jecxz
in
pop
push
sti
fld
sbb
mov
lock
out
dec
xchg
sub
cmp
aaa
mov
aas
mov
aaa
aad
pop
aad
out
stos
das
stos
mov
xlat
mov
mov
push
push
and
pop
add
mov
mov
sar
je
xchg
and
xchg
add
icebp
mov
ficomp
mov
jbe
loop
fs
jmp
sbb
(bad)
es
fidiv
or
jbe
jp
xor
icebp
loop
ficom
nop
iret
(bad)
ins
xor
out
rol
adc
push
(bad)
(bad)
pop
hlt
jl
dec
pop
lock
aam
mov
dec
cmp
lahf
fwait
mov
das
cli
ficomp
add
push
dec
mov
mov
or
xchg
mov
mov
stos
pop
ret
enter
push
jb
jmp
mov
ja
cmc
dec
repnz
jg
cmp
scas
fcmovbe
mov
fst
lock
out
xchg
in
add
xor
or
push
xchg
mov
inc
mov
outs
repnz
mov
in
retf
mov
cmp
and
rol
retf
xor
xor
and
int3
push
sbb
enter
das
fadd
and
imul
aas
ficom
fisttp
out
pusha
cmp
lds
addr16
in
sahf
inc
xchg
fwait
popf
mov
sbb
sbb
xor
ins
mov
add
push
aam
ins
inc
xchg
cmp
ret
dec
outs
and
and
sub
mov
or
mov
jae
inc
inc
add
test
mov
cs
inc
inc
push
dec
cmp
retf
push
lahf
pushf
or
ret
pop
movs
pop
pop
imul
movs
lock
ss
inc
(bad)
jmp
popa
popf
jns
mov
adc
mov
pop
cmp
cwde
ret
repnz
ffreep
pushf
lods
mov
test
adc
xchg
jbe
push
out
data16
cmps
in
lahf
mov
dec
jle
call
jmp
pop
jbe
(bad)
jmp
out
repz
call
or
cmp
sub
(bad)
inc
xchg
test
in
fcomp
cmp
sub
jns
sbb
jge
scas
xchg
movs
popf
xchg
mov
push
sub
mov
xor
xlat
mov
adc
push
or
inc
pop
fnstsw
or
test
push
mov
mov
dec
sbb
movs
xor
ficom
leave
shl
sbb
adc
(bad)
mov
or
mov
or
sub
add
push
nop
lock
mov
sbb
or
lahf
rcl
jns
push
and
lods
mov
in
mov
out
dec
inc
add
mov
adc
mov
xchg
addr16
loop
not
ja
les
out
xchg
inc
ins
and
push
(bad)
lea
stc
mov
retf
mov
into
sub
into
repnz
push
sbb
mov
or
js
cmp
stos
inc
das
push
mov
xchg
pop
cwde
pop
daa
imul
leave
jne
jmp
cld
mov
push
add
(bad)
movs
adc
ins
xchg
inc
sbb
enter
stos
les
sub
and
cmp
jle
pop
je
xor
fadd
fld
popa
mov
or
fstp
xchg
lds
pop
out
loop
cmps
dec
test
gs
nop
sub
jg
mov
enter
(bad)
retf
mov
dec
or
vandnps
inc
jecxz
mov
retf
jmp
rcr
outs
movs
repz
or
call
or
and
out
xlat
(bad)
mov
dec
and
cmc
sar
pushf
xlat
clc
rol
fsubr
enter
js
adc
pop
jl
add
loope
or
(bad)
adc
frstor
jne
pop
mov
mov
inc
sub
pop
cmp
lea
ror
mov
idiv
xchg
sbb
mov
add
or
pusha
push
inc
rcl
add
pushf
pop
sbb
in
pop
shl
fbld
data16
ds
fstp
xchg
mov
add
sar
test
popa
call
arpl
mov
jl
mov
test
jnp
aas
jae
mov
jmp
fdiv
xlat
push
arpl
cmps
clc
xchg
add
fwait
xor
retf
mov
cld
xor
jo
je
xor
inc
hlt
xchg
push
pop
(bad)
scas
call
into
rcl
movs
arpl
outs
xchg
and
test
outs
(bad)
sbb
or
inc
outs
sahf
out
sbb
dec
retf
or
push
test
push
cs
and
arpl
jecxz
mov
pop
and
xchg
lods
jns
scas
xchg
ins
mov
sub
lahf
cmps
xchg
sbb
or
inc
scas
add
adc
test
je
fst
mov
loope
fs
rol
pushf
nop
loop
mov
loop
repz
or
mov
mov
je
and
repnz
jp
ror
shl
dec
es
push
rol
xchg
je
rcl
inc
sti
retf
xchg
into
ror
inc
ins
sub
fbld
(bad)
out
frstor
dec
mov
jge
pusha
xchg
cmp
daa
in
ja
adc
push
outs
sub
shr
inc
ss
rcr
mov
cmp
add
imul
cdq
xor
out
(bad)
mov
xor
cmc
fdiv
loope
xchg
or
xor
or
inc
mov
mov
clc
mov
jns
mov
and
gs
scas
sahf
mov
inc
xor
aam
and
pop
(bad)
xor
mov
jbe
inc
les
ds
cmp
arpl
out
mov
and
jo
mov
xchg
sti
push
sbb
inc
xchg
addr16
sbb
dec
push
rcr
dec
cli
cmps
cmp
add
fld
mov
(bad)
(bad)
and
cmp
bnd
test
add
add
and
adc
js
gs
mov
int
ror
add
push
push
pop
int
lods
cdq
dec
add
add
push
bnd
call
stos
push
add
cmp
jl
popf
shl
mov
sbb
pop
addr16
sub
mov
cmc
inc
push
rcl
int
ror
add
daa
je
dec
cli
or
dec
dec
push
jp
push
xchg
dec
(bad)
jnp
(bad)
adc
jo
fdiv
ss
in
es
repz
mov
jbe
cli
(bad)
fwait
sbb
ror
pop
movs
adc
mov
dec
jle
pop
xchg
push
push
add
xlat
les
int
inc
and
and
jmp
push
adc
xchg
mov
pop
stos
inc
arpl
add
aam
push
sbb
gs
push
jae
mov
lods
in
adc
les
icebp
dec
(bad)
in
xchg
ror
cli
mov
addr16
in
pmulhw
shl
in
imul
cli
jg
push
sub
push
or
mov
out
aas
loope
pop
jae
mov
sahf
js
sub
push
xchg
mov
clc
sahf
and
imul
cs
push
or
sub
in
sub
xchg
ret
dec
bound
cs
push
and
push
ret
mov
mov
push
pop
mov
(bad)
jle
pop
push
fs
mov
test
je
daa
push
mov
adc
inc
inc
add
mov
and
cld
sub
inc
(bad)
jl
mov
and
sti
mov
pop
jnp
xchg
dec
pushf
cmp
xchg
dec
aas
out
adc
fadd
add
xor
mov
fadd
cmc
in
cmp
aaa
icebp
or
push
int
mov
cmc
in
jae
jb
mov
pop
shl
add
adc
sub
xchg
cmp
pop
and
pop
mov
or
loopne
loop
jle
loope
in
mov
cli
or
enter
cmp
cmc
shl
mov
cmps
jmp
fst
add
cmp
cmp
ja
movs
fld
push
add
int3
push
xor
fadd
cmps
imul
xchg
dec
xor
sbb
push
int3
or
sbb
sub
mov
pusha
lods
mov
jne
xchg
push
cmpxchg
sbb
jmp
and
adc
cmps
add
push
xor
ret
xchg
lea
or
xchg
movs
mov
mov
xchg
cmps
dec
or
aaa
enter
popa
sbb
or
gs
inc
jl
cmp
xchg
arpl
retf
psadbw
(bad)
(bad)
adc
jmp
jmp
popa
retf
call
jmp
xchg
adc
sbb
jb
mov
ins
mov
jle
fadd
jmp
xchg
sbb
add
rcr
loope
or
enter
es
in
xor
fwait
loopne
push
aad
xchg
rcr
xlat
and
stos
mov
repz
push
push
bound
mov
sub
loopne
and
in
fdivr
and
push
in
fwait
(bad)
dec
mov
jmp
sbb
sub
cmp
inc
or
movs
mov
fsub
lods
repz
push
(bad)
ficomp
xor
fcmovbe
mov
leave
xor
adc
neg
imul
push
sub
sbb
inc
test
xchg
mov
ret
(bad)
cld
pop
dec
test
xor
aaa
fmul
test
ss
inc
sbb
mov
mov
fist
add
in
push
adc
dec
and
cmps
xor
jbe
loopne
dec
out
push
call
dec
pushw
jge
mov
scas
sbb
pop
pop
adc
scas
nop
adc
pop
sbb
daa
push
add
mov
(bad)
repz
in
in
imul
ss
sahf
jb
push
dec
out
and
cs
xchg
and
rcr
imul
push
push
rcr
jmp
scas
cmp
shl
in
in
add
push
sub
push
sbb
or
lds
into
push
rcr
clc
loope
mov
popf
enter
sti
push
(bad)
cmp
lea
je
or
(bad)
jo
sub
sub
pushf
pop
iret
push
cmp
call
jmp
xor
test
lea
cmp
inc
pop
mov
xchg
xchg
cdq
sub
jne
hlt
pop
adc
mov
sub
adc
loop
push
lds
(bad)
out
popa
in
mov
adc
fisttp
push
jo
xlat
adc
into
sbb
lds
ss
(bad)
sbb
jmp
outs
adc
cli
sbb
dec
sar
out
mov
mov
pop
sub
dec
pop
fwait
push
pop
sub
ror
sbb
int3
mov
mov
push
in
js
fucomi
adc
test
push
out
xor
push
adc
push
call
cld
pop
lds
in
loopne
add
or
sub
cld
aaa
pushf
mov
out
scas
es
dec
popf
inc
xlat
xchg
(bad)
dec
mov
mov
sbb
or
pushf
or
lock
xchg
cmp
(bad)
push
inc
jns
ja
daa
pop
shl
test
test
dec
inc
mov
ja
pushaw
icebp
push
jbe
lods
mov
inc
(bad)
pushf
xor
pop
jg
mov
jmp
mov
push
(bad)
rol
xlat
xlat
and
dec
fs
fisub
ficomp
jno
add
cmp
lods
xlat
inc
jo
xor
mov
cmp
movs
ins
pop
push
mov
mov
xchg
mov
cmp
dec
sub
mov
mov
xchg
loope
outs
out
test
and
dec
pop
inc
jp
or
add
push
stos
jno
xor
test
mov
ds
stc
sbb
pop
or
mov
xchg
loope
dec
jp
push
bound
ins
add
push
sar
mov
dec
add
and
xchg
daa
mov
sub
pop
ss
stos
call
inc
push
or
fldenv
cs
xor
(bad)
enter
sub
push
sbb
repnz
movs
imul
adc
and
mov
inc
call
gs
fild
mov
and
xor
or
pop
inc
xor
rol
sub
pop
push
int
retf
ficom
jnp
mov
fldcw
es
mov
and
adc
aad
mov
xchg
fdivr
inc
add
sbb
nop
test
out
retf
pop
das
enter
fwait
cmps
clc
loopne
fucomip
push
addr16
jno
xchg
mul
lods
imul
sbb
push
xchg
push
mov
fs
out
adc
jo
in
sti
and
arpl
sti
enter
add
test
push
movs
lahf
and
bound
pop
stos
dec
(bad)
xchg
cld
xchg
loope
fild
xchg
xor
jg
not
outs
shr
ret
(bad)
int3
xchg
mov
inc
pop
jmp
adc
push
lods
mov
rcl
inc
xchg
add
push
stos
pop
out
sahf
push
push
jne
cmp
add
mov
clc
push
fs
lock
test
mov
mov
jb
outs
pop
es
and
add
jo
movs
push
cmc
outs
inc
push
(bad)
pop
add
iret
and
push
mov
out
arpl
adc
(bad)
shl
dec
fucom
jle
enter
and
rol
scas
(bad)
mov
lods
loope
out
xchg
mov
pop
clc
stos
out
mov
pusha
aam
repnz
jge
inc
mov
mov
adc
cmps
adc
mov
jnp
mov
sti
mov
xchg
jns
cmp
adc
mov
mov
cmp
mov
and
push
in
ret
push
and
fcomp
loope
inc
jo
jecxz
fimul
cmp
cmp
mov
jecxz
out
or
ficomp
ret
or
ret
rol
push
xor
dec
jb
test
(bad)
sbb
xchg
fs
xor
scas
addr16
mov
rol
inc
adc
jne
fldenv
push
jge
jnp
push
div
xchg
mov
mov
(bad)
dec
pop
mov
test
ret
cmp
addr16
add
cwde
or
test
dec
sub
push
xchg
test
sub
push
push
out
jle
test
xchg
dec
lods
loopne
pop
mov
inc
jmp
or
test
in
jp
mov
popf
push
cld
push
fdivr
and
or
xchg
int
fbld
push
(bad)
ret
jbe
scas
(bad)
add
js
pop
cmp
pop
es
and
and
ds
clc
adc
test
fst
or
gs
push
jmp
(bad)
pusha
or
outs
stos
out
lods
lahf
fsub
push
and
aas
inc
add
dec
cdq
xlat
push
xor
ss
cdq
sub
lahf
retf
loop
adc
xor
xor
inc
mov
mov
sahf
jb
gs
outs
jecxz
test
es
test
pop
or
adc
jl
xchg
sub
sbb
cmp
scas
dec
and
sbb
cmp
ins
ins
or
sub
cdq
jge
mov
jo
in
or
aas
mov
hlt
ds
inc
push
(bad)
dec
shl
inc
test
dec
pop
(bad)
jmp
enter
ins
cmp
mov
jmp
push
(bad)
xchg
inc
push
mov
mov
pop
mov
cmp
test
mov
inc
int
cmp
mov
not
sbb
xchg
mov
in
xor
inc
mov
ds
fs
cli
pop
out
cmp
mov
sub
jg
and
cli
out
sub
mov
rol
or
out
imul
sub
mov
pushf
pop
add
aad
or
jmp
push
cs
xchg
push
jecxz
or
dec
jmp
sbb
fwait
(bad)
push
dec
sbb
icebp
mov
push
rsqrtps
xor
mov
dec
loope
pop
out
les
cdq
rol
aas
xor
xor
mov
rcr
nop
jge
fcom
ret
popf
jne
jmp
retf
lods
out
pop
dec
aas
pop
in
stos
retf
neg
and
mov
gs
or
sub
pop
cli
popf
jecxz
xchg
pop
mov
xchg
into
adc
div
sti
lahf
xchg
sbb
cli
mov
dec
sti
(bad)
mov
gs
out
jo
in
scas
sbb
adc
hlt
cdq
sbb
test
inc
in
rol
and
sub
xchg
inc
fcmovbe
cmp
ins
out
mov
sub
adc
jp
arpl
cmps
mov
mov
add
clc
mov
cmc
jmp
cwde
or
pop
fsubr
dec
cmp
icebp
sub
daa
ins
or
rcl
cmps
push
dec
add
lods
ss
sahf
pusha
daa
outs
adc
jno
mov
(bad)
aaa
enter
neg
aam
add
pop
add
aaa
fstp
mov
cmps
sbb
pop
adc
stos
outs
in
test
mov
mov
push
popf
mov
add
cli
int
cmps
sbb
ret
jmp
cs
jge
cmp
xchg
pusha
out
xor
stos
call
cmp
push
pop
fdiv
inc
enter
jo
test
rcr
js
sbb
cli
nop
mov
or
push
ja
jecxz
pop
inc
ror
test
xor
adc
xchg
aad
hlt
fstp
cmp
adc
inc
or
and
jp
mov
mov
xchg
sub
inc
mov
push
mov
jne
and
push
mov
mov
das
adc
aam
shl
adc
xchg
mov
in
lods
mov
mov
aas
xor
jnp
jmp
push
sub
and
retf
int3
dec
rol
scas
movs
mov
stos
rcr
push
jmp
xchg
sbb
inc
mov
xchg
shr
sub
push
cld
sbb
or
stc
out
imul
cmc
or
dec
aad
mov
jmp
mov
fwait
aam
(bad)
mov
outs
cmp
mov
aam
je
inc
or
push
or
cmp
jl
es
push
or
sti
mov
xor
stos
and
loop
js
cmp
add
es
rol
push
test
fwait
(bad)
neg
cli
push
loop
mov
loopne
push
push
mov
mov
adc
and
fdivrp
pop
in
idiv
leave
jo
rcr
add
mov
or
repnz
mov
out
adc
jb
mov
sub
jne
call
lea
or
push
enter
xchg
lahf
mov
xchg
call
mov
fs
cmp
mov
or
push
lods
shl
dec
cmps
lea
(bad)
repz
push
in
test
pop
jae
outs
stos
xor
repnz
jnp
fwait
mov
cwde
pop
pop
mov
cmp
add
aam
pop
psubusb
enter
mov
fcom
push
call
xchg
(bad)
in
(bad)
fisttp
neg
pushf
inc
push
(bad)
and
gs
stos
clc
mov
xchg
push
je
push
int
pop
jb
aam
imul
sub
test
je
aas
adc
out
and
ins
xor
lock
sub
xchg
(bad)
in
push
repz
std
sbb
sti
cld
in
push
mul
jns
adc
js
mov
pusha
mov
movs
add
call
out
mov
jmp
xchg
jg
sub
stos
loop
repz
icebp
xchg
or
inc
icebp
test
frstor
(bad)
retf
sub
inc
sbb
mov
cmps
adc
pop
xor
cld
xor
stos
fstp
mov
not
jle
lods
add
xchg
sbb
xchg
xor
hlt
call
xchg
mov
pop
std
loopne
int3
cmps
rol
out
adc
sub
call
repz
adc
pop
fild
adc
jp
pushf
fbld
retf
or
dec
cmp
test
or
imul
pop
cli
fistp
(bad)
pop
ins
pop
in
mov
rcl
cmp
push
push
or
popf
cmps
push
add
movs
jl
call
ret
daa
dec
or
pop
scas
ins
dec
mov
adc
inc
ja
push
rcl
mov
clc
adc
mov
sbb
fadd
retf
mov
add
js
movs
leave
leave
jecxz
mov
popa
push
sbb
adc
sub
sub
cmp
in
pop
cmp
mov
popf
xchg
push
lds
call
dec
stos
fidivr
cmp
push
xchg
fs
call
into
xor
cmp
out
pop
fdivr
mov
rcr
imul
sar
sub
add
nop
xlat
pop
pop
lahf
(bad)
clc
add
ins
outs
xchg
jle
sbb
inc
pop
clc
(bad)
nop
enter
in
cmp
leave
inc
or
aad
sbb
das
and
adc
pop
pop
cmps
push
retf
call
test
jl
ret
int3
outs
mov
xlat
imul
add
lahf
aaa
dec
ins
out
aad
mov
inc
inc
pop
ds
pinsrw
adc
xchg
jecxz
push
bound
movs
fimul
das
sbb
xchg
dec
or
(bad)
pop
jl
repz
movs
dec
sar
mov
dec
mov
push
loope
(bad)
mov
ja
ret
(bad)
fmul
sbb
jae
inc
les
or
test
jno
mov
test
(bad)
pop
mov
jmp
pop
sti
sbb
cli
mov
mov
xor
test
jnp
sbb
movs
mov
xchg
out
adc
xor
mov
aad
or
mov
mov
rcl
cmp
push
pop
icebp
push
imul
inc
(bad)
shl
sbb
hlt
loopne
hlt
pop
push
sub
lahf
mov
fs
arpl
(bad)
push
mov
sub
sahf
xor
mov
sub
push
jnp
mov
pop
mov
xor
test
pop
inc
or
or
pop
adc
pop
cli
pop
loope
sbb
pop
pop
cdq
test
std
repnz
sub
loopne
dec
gs
test
dec
inc
jne
and
mov
push
lods
enter
iret
mov
push
adc
movs
js
mov
dec
lock
icebp
and
mov
mov
and
mov
push
addr16
adc
add
hlt
inc
pop
js
retf
hlt
les
xor
jmp
cmps
and
fs
addr16
call
mov
cmp
aad
int
or
dec
pop
xchg
in
xchg
icebp
or
ror
sahf
test
adc
frstor
sbb
(bad)
mov
fnstenv
sbb
mov
imul
(bad)
(bad)
out
add
xchg
inc
sub
(bad)
setb
aam
into
pop
dec
in
mov
sbb
mov
or
rdmsr
(bad)
xor
cmc
dec
mov
pop
push
jp
mov
imul
seto
movs
out
icebp
jbe
iret
fs
inc
xlat
cmp
pusha
out
inc
cmp
retf
retf
cld
dec
out
js
push
mov
rsqrtps
cwde
mov
push
cmps
outs
sub
movs
mov
(bad)
sbb
xor
je
mov
dec
ins
retf
mov
lods
mov
pop
inc
sar
or
add
iret
sub
cmp
sbb
or
add
(bad)
in
sti
mov
rcr
adc
mov
fisttp
stos
test
cmp
or
sbb
outs
js
scas
mov
xchg
sub
push
xor
add
mov
xchg
sbb
nop
or
int
mov
arpl
add
retf
mov
pop
stc
and
ins
cmp
xlat
outs
pop
test
and
int3
xchg
or
mov
xchg
mov
in
pop
push
(bad)
pusha
js
pand
dec
sub
or
xchg
sub
cmc
pop
xlat
enter
push
stos
push
jbe
add
sub
je
call
retf
xchg
arpl
es
(bad)
cmp
push
dec
je
xor
scas
adc
les
cmps
ret
xor
jnp
arpl
add
retf
or
ret
es
sbb
push
sahf
add
jmp
push
pop
ret
hlt
movs
mov
mov
out
jae
inc
pop
in
lock
cdq
jae
mov
(bad)
xchg
push
sbb
in
mov
dec
cld
fnstcw
es
cli
xchg
cwde
and
lods
aad
fdivp
(bad)
sbb
push
inc
xchg
loop
imul
mov
mov
dec
movs
out
adc
xlat
cmps
jne
mov
arpl
jno
mov
xor
ret
imul
iret
or
and
mov
cmp
mov
movs
addr16
dec
mov
int3
fiadd
fdivrp
rol
ret
ja
call
dec
loope
inc
xchg
aam
and
push
mov
mov
add
pop
call
push
sbb
arpl
test
mov
add
setbe
xor
jg
into
mov
inc
cli
push
pop
xor
in
aam
addps
sbb
push
jbe
in
loop
xor
gs
bound
cld
add
ins
add
ins
add
mov
lods
xchg
fsub
fwait
das
test
(bad)
mov
(bad)
or
lds
xchg
cmps
(bad)
lods
cmp
loopne
dec
and
and
(bad)
cmp
arpl
out
xor
or
jb
lock
jns
(bad)
jmp
daa
add
into
sbb
jmp
push
push
cmp
xor
cdq
call
pusha
adc
mov
mov
or
loop
xor
sbb
mov
mov
aad
sub
mov
push
xor
sub
xor
push
ja
(bad)
stc
(bad)
in
fdiv
test
lods
iret
push
push
out
xchg
push
pop
test
outs
cmps
in
lea
adc
das
movs
and
scas
add
xchg
ja
cmp
imul
pop
pop
retf
pop
aad
mov
mov
into
iret
xchg
mov
dec
add
mov
(bad)
fist
xchg
imul
loopne
test
fsubr
push
(bad)
or
inc
stos
ss
(bad)
cld
mov
or
(bad)
int3
ds
xor
sub
xchg
jmp
std
mov
loop
loope
jnp
push
jnp
(bad)
sar
jmp
rcl
shl
push
jno
fldenv
mov
popa
sbb
add
lock
cs
(bad)
push
out
dec
fimul
ja
and
jns
xor
adc
jo
pushf
dec
leave
jge
ds
shl
ins
ret
scas
les
fdiv
inc
sub
stos
not
xchg
je
add
fwait
cwde
add
mov
stc
sahf
cwde
aad
dec
mov
and
aad
jmp
xor
mov
jmp
fld
icebp
into
aad
sar
outs
jge
mov
jnp
add
push
dec
push
stos
fild
mov
fmul
int3
add
(bad)
icebp
frstpm(287
(bad)
push
push
and
and
xor
inc
push
mov
sbb
cmp
cmp
cmp
popa
push
mov
xor
xchg
imul
test
es
xor
mov
cwde
or
mov
cmp
cdq
lds
gs
dec
ins
xchg
gs
fs
test
mov
cmp
pop
test
add
dec
stos
mov
mov
in
stos
xor
sbb
test
jns
mov
fidiv
(bad)
jle
mov
add
push
add
push
adc
int
ja
out
in
mov
xor
push
pop
pop
iret
fwait
xor
ror
icebp
xchg
(bad)
add
fs
mov
mov
fucomip
jmp
mov
and
jo
push
ds
cmp
clc
cld
fild
cmp
test
xor
adc
out
ror
push
mov
shl
xor
mov
and
out
pop
mul
leave
and
cmps
push
aam
int3
fdivr
push
jg
inc
fwait
and
das
out
sbb
ret
or
jmp
les
mov
jae
(bad)
les
arpl
iret
pop
cld
jae
ret
mov
int3
xor
shl
jb
sub
xor
pop
xchg
pushf
jbe
pop
or
sub
(bad)
jns
fs
mov
sub
mov
jp
sub
in
lods
bound
jne
scas
out
pop
cmps
push
mov
push
daa
mul
and
in
mov
push
xchg
popa
mov
adc
and
int3
into
sbb
sbb
inc
out
int3
and
in
pusha
cmp
adc
ja
or
daa
jecxz
ret
popa
or
adc
xchg
jae
xor
inc
bnd
or
fisubr
test
push
xchg
inc
out
fcomip
xor
pop
not
push
ss
inc
pusha
inc
pop
rol
mov
fs
fnstcw
mov
enter
test
inc
mov
inc
lea
and
iret
push
sar
cmp
xor
int3
push
adc
pop
fadd
(bad)
mov
or
sub
ss
push
lods
cmp
inc
and
mov
pusha
mov
imul
sub
sbb
retf
sbb
loop
mov
fstp
mov
cmp
cmps
jmp
adc
sar
stc
lock
cmp
jmp
(bad)
ds
add
mov
(bad)
pushf
mov
lea
data16
xlat
loopne
js
stc
xchg
fild
fs
in
sub
push
(bad)
mov
mov
scas
xchg
dec
xor
cs
sti
push
mov
scas
sub
sub
xchg
test
std
xchg
stc
xchg
mov
outs
in
retf
aaa
mov
popa
enter
pop
mov
test
bound
lock
dec
sbb
cmp
ins
das
idiv
push
mov
retf
aam
jmp
cmp
xor
jp
repz
dec
xchg
mov
inc
push
lods
cmp
ss
(bad)
inc
loop
daa
mov
fst
xor
sbb
jg
adc
push
cmp
inc
clc
adc
push
xchg
popf
dec
mov
push
pop
sub
retf
in
jne
lods
lahf
test
sbb
add
sbb
adc
shl
(bad)
fadd
and
lods
inc
out
xor
loope
retf
pop
xchg
sub
aas
mul
gs
mov
rcl
fnstsw
movs
mov
xor
mov
es
imul
jne
outs
out
pop
enter
inc
or
jae
cmp
mov
sbb
iret
dec
push
dec
jecxz
repnz
popf
icebp
lea
mov
dec
rol
ds
int3
and
xor
les
add
lock
or
inc
frstor
jb
pop
iret
sub
retf
or
rcl
sar
dec
fistp
jl
dec
pop
popa
mov
not
mov
pop
jmp
add
push
sbb
push
xor
lods
xor
xlat
sub
dec
das
inc
xchg
cmp
xchg
dec
sti
inc
scas
daa
sbb
dec
xchg
sub
adc
push
fsub
inc
jecxz
jmp
or
xor
les
rcr
fcomp
fisttp
adc
xor
push
or
imul
sbb
push
out
push
(bad)
push
mov
mov
dec
jp
test
push
adc
int3
loopne
mov
pop
shl
das
cwde
imul
fadd
gs
jmp
ror
mov
pop
inc
leave
(bad)
shr
clc
int3
and
mov
mov
jae
pop
push
in
xlat
mov
xchg
pop
pop
adc
pop
cmp
aaa
mov
int
mov
adc
jne
(bad)
in
or
and
(bad)
sbb
cmp
pop
leave
bound
aaa
adc
fild
js
popa
cmp
inc
imul
sub
popf
push
cmp
jecxz
mov
pinsrw
mov
aad
dec
mov
mov
sbb
rcl
jp
rcl
xor
push
in
inc
xor
repz
xor
dec
and
cs
pusha
sub
add
call
sbb
cmp
enter
jno
stos
test
dec
and
jle
jge
in
cmp
mov
(bad)
mov
sti
in
mov
jno
mov
sub
adc
aam
sbb
push
iret
popa
aam
into
jle
sub
and
loope
je
or
call
in
sbb
(bad)
push
or
add
and
add
or
or
push
cmp
repnz
vmovdqu
(bad)
pop
test
xchg
xlat
iret
sti
pop
inc
ror
sbb
aam
sub
ret
dec
jo
dec
shl
fisubr
mov
mov
or
sub
push
jnp
fs
adc
sar
cmps
(bad)
(bad)
xchg
in
lahf
lock
jp
arpl
cmp
mov
inc
repnz
adc
mov
and
and
(bad)
dec
jno
push
aaa
or
push
in
ja
ins
jbe
jl
xor
pop
xchg
movs
mov
(bad)
adc
nop
f2xm1
sub
sbb
jecxz
xchg
and
push
or
fs
sbb
fidivr
aam
dec
int3
scas
mov
loope
xchg
in
cmps
inc
ret
pop
pop
pop
fs
jne
push
or
aad
scas
pop
les
push
inc
dec
popf
scas
fbld
(bad)
push
test
mov
cmp
ja
xor
mov
push
rcl
cli
loop
xchg
dec
push
movs
das
push
adc
xor
pop
lds
xor
(bad)
clc
shl
add
jno
dec
mov
push
cmp
outs
jmp
xor
out
pushf
push
add
outs
pop
gs
sub
and
imul
fstp
sahf
and
call
fs
cwde
(bad)
fimul
int3
push
int
mov
out
ja
inc
scas
mov
fidiv
dec
cmps
mov
dec
sbb
out
lock
jmp
jmp
ja
mov
int
icebp
retf
push
movs
icebp
dec
dec
push
pop
and
ror
and
push
add
mov
pop
push
call
test
in
retf
pop
push
add
clc
ror
out
mov
xor
add
mov
daa
in
dec
cmp
add
mov
dec
ds
adc
or
movs
xor
iret
push
sahf
test
xor
sub
mov
(bad)
mov
fs
and
push
add
repnz
cmps
xchg
js
fs
int
clc
outs
sti
pop
pop
stc
sbb
cmp
mov
mov
mov
test
pop
jp
shr
cmp
fdiv
mov
jmp
pop
fld
push
push
popa
mov
dec
test
jl
fiadd
out
aaa
fiadd
and
mov
in
and
leave
mov
jg
enter
loope
mov
stc
mov
scas
fistp
in
mov
arpl
jmp
sub
cmp
xor
in
addr16
mov
adc
xchg
push
daa
inc
sub
sub
or
jmp
inc
push
inc
je
sub
adc
xchg
shl
pop
out
sub
xor
or
xchg
shrd
add
fwait
mov
mov
ja
sbb
test
ss
mov
cwde
push
loope
or
mov
stc
aam
inc
xor
je
adc
jg
idiv
movs
int
aad
das
mov
ins
xor
outs
and
mov
sub
call
pop
leave
sbb
outs
stos
pop
pop
or
jg
test
dec
cwde
sub
or
mov
stc
and
xlat
fwait
cmp
test
nop
cmps
(bad)
outs
xchg
cmps
std
mov
jno
scas
inc
mov
jl
cdq
xchg
mov
cmps
pop
aam
std
pop
cdq
pcmpgtw
(bad)
fwait
pop
cwde
int3
xor
fadd
adc
jne
mov
outs
std
adc
sbb
fist
sti
cmp
xor
retf
neg
pop
xchg
scas
jmp
shr
ret
leave
mov
and
in
add
sar
sbb
lahf
ds
pop
push
push
lea
push
lods
pop
mov
xchg
push
or
inc
cmps
dec
mov
rol
sub
adc
pop
addr16
push
sub
lds
das
loope
cmp
je
pop
test
cmp
lods
loopne
mov
jge
pop
ret
sub
mov
pusha
inc
cdq
mov
leave
fcom
inc
push
aaa
jg
push
test
pop
out
jg
xchg
add
mov
inc
sbb
mov
cmp
lods
fld
ror
loop
pusha
pop
(bad)
mov
pop
xlat
int3
mov
pop
and
popa
cmc
out
ins
or
push
xor
mov
fistp
mov
jmp
mov
mov
push
clc
jne
dec
stc
pop
std
(bad)
or
les
sub
(bad)
sbb
mov
nop
div
movs
ror
dec
test
ss
add
inc
jnp
outs
sub
add
ror
xchg
popa
and
inc
lock
jne
call
movs
in
inc
outs
test
sar
mov
mov
cmp
mov
xor
adc
add
inc
mov
pop
pusha
nop
xchg
cmp
shl
lea
jl
int
and
rcl
xchg
sbb
pop
inc
and
mov
ins
test
mov
sbb
adc
and
jo
loope
mov
adc
cwde
ret
mov
retf
cmp
mov
gs
xchg
iret
loope
sbb
cmp
jae
rcl
inc
ins
mov
dec
idiv
ficomp
movs
fldcw
daa
rol
cmps
sbb
cmc
xchg
cmps
add
jb
cmp
jns
xchg
aas
cmp
add
xchg
movs
iret
test
repz
fisttp
popa
cwde
repnz
mov
xchg
xchg
aaa
pop
loop
pop
xor
push
out
aaa
sub
pop
xlat
lods
cld
sub
add
xchg
xchg
ins
inc
rol
aas
in
(bad)
out
dec
push
aaa
xlat
jl
pop
sbb
mov
fidiv
jns
loopne
sbb
sub
adc
into
(bad)
jg
mov
adc
xchg
das
aaa
xchg
fild
jo
inc
and
imul
cmps
test
or
adc
mov
dec
cmp
mov
adc
add
mov
(bad)
popf
cmps
push
jmp
iret
cmp
daa
push
lock
repz
pop
imul
add
fs
and
cmp
cmp
ins
ror
inc
dec
dec
and
xchg
(bad)
push
mov
lods
push
inc
test
sbb
cs
adc
jl
aam
ins
ror
mov
jne
push
mov
or
outs
mov
pop
push
mov
icebp
loop
fcomp
fidiv
xor
shr
sub
std
pop
lea
sub
pop
loop
adc
repz
punpckhbw
(bad)
cwde
jle
repz
cmc
or
mov
outs
scas
and
loope
adc
mov
mov
js
fcomp
mov
or
xchg
stc
add
enter
sbb
xchg
mov
inc
and
push
out
test
adc
mov
xchg
std
push
adc
push
fisub
mov
fstp
and
aam
call
and
out
xor
jmp
push
add
fnstsw
(bad)
xchg
gs
outs
cmps
icebp
xor
push
in
cmp
mov
mov
retf
mov
adc
cdq
out
ss
xlat
rol
xor
rcr
stc
ins
outs
imul
pop
inc
shl
imul
add
mov
add
jns
sbb
or
stos
add
add
pop
pop
repz
mov
push
ss
inc
fst
or
sub
jns
ffreep
mov
fs
sbb
push
pop
mov
mov
cmp
scas
xor
mov
cdq
jb
fimul
or
fdivr
add
clc
cli
nop
add
outs
cmps
cmc
sub
out
lahf
daa
sub
or
icebp
enter
mov
dec
call
sub
cmp
ret
jl
push
ret
and
mov
xor
fdiv
pop
aaa
daa
jo
out
add
or
and
add
pop
repnz
js
or
jo
test
adc
sbb
push
and
mov
and
mov
push
push
mov
pop
stos
mov
mov
jmp
fimul
sub
lds
mov
mov
cmps
mov
callw
bound
test
mov
pop
mov
dec
cmp
xchg
xor
pop
addr16
addr16
xor
popa
jo
loop
js
add
fldenv
inc
stos
mov
cmp
cwde
mov
inc
pusha
icebp
pop
mov
xchg
dec
retf
loopne
pop
loop
adc
imul
punpckhbw
mov
adc
call
scas
sbb
add
pop
in
xor
pop
push
push
dec
mov
scas
(bad)
hlt
ds
sbb
pop
in
push
xchg
or
sub
(bad)
hlt
mov
inc
xor
pushf
jle
and
jne
push
fld1
cmp
sub
adc
call
rcr
xlat
scas
lds
jns
jnp
mov
dec
inc
mov
sbb
fdivr
push
lock
pop
dec
stos
xchg
adc
xchg
nop
and
fbld
addr16
les
or
clc
call
dec
mov
cmp
loope
pop
cdq
sub
xor
xchg
pop
sbb
xchg
movs
xor
or
jg
daa
xor
cwde
movs
daa
jp
ins
leave
xchg
sub
add
fstp
out
out
push
dec
inc
shl
xchg
out
into
push
pop
and
test
xchg
add
push
cmps
dec
cmp
cmp
push
out
fild
ins
xchg
jg
cmp
ins
mov
pop
push
imul
out
jns
dec
leave
adc
popa
jno
(bad)
leave
and
and
ins
shl
cmp
jecxz
pusha
mov
add
(bad)
cmp
ret
cmps
out
ss
ins
faddp
fdiv
cwde
dec
mov
sub
loop
jno
cld
mov
ins
sub
sub
mov
add
scas
lea
(bad)
je
adc
(bad)
dec
test
lock
lahf
repnz
mov
jg
adc
das
jg
push
adc
movs
fild
js
mov
pop
push
jl
popf
pop
xor
repz
mov
cmps
mov
xor
hlt
xor
call
push
imul
inc
and
xor
cld
fimul
daa
push
fcom
sub
sti
mov
add
or
sub
data16
ja
sar
aad
and
arpl
popf
sbb
jnp
in
arpl
pusha
dec
(bad)
movs
xor
sbb
add
clc
jbe
cmp
(bad)
stos
clc
cs
sbb
adc
(bad)
mov
sbb
cmp
mov
iret
fimul
xor
bound
mov
jne
imul
sub
or
fld
jmp
fst
mov
sub
and
cmp
xor
imul
pushf
and
mov
fisubr
or
jae
cld
movs
cmp
or
push
test
mov
or
add
sub
cdq
push
idiv
push
xlat
inc
in
mov
push
lea
aam
inc
adc
mov
stc
aam
or
adc
xchg
push
bound
mov
add
sti
lds
cld
mov
adc
adc
or
inc
test
xor
test
imul
pop
test
stos
jb
inc
bound
in
inc
add
imul
ret
nop
test
push
pop
mov
mov
outs
xchg
je
cmp
or
test
scas
jmp
adc
ficom
mov
clc
aam
mov
out
mov
adc
add
jmp
jecxz
add
imul
cmc
pusha
fdiv
fbld
cmp
sar
inc
and
dec
sar
sub
in
adc
jecxz
xor
js
push
into
pop
daa
test
and
shl
jg
shr
push
psubsb
inc
dec
out
adc
sub
push
or
or
or
retf
xrelease
movs
ror
arpl
jl
(bad)
int
add
xor
cli
and
push
mov
mov
iret
int
sub
shl
loope
sbb
add
xchg
out
pop
test
xchg
and
xor
retf
int3
push
xchg
cwde
xor
or
and
stc
shr
mov
add
add
(bad)
fnsave
pop
bound
inc
ficom
and
or
test
and
(bad)
call
lods
xchg
cmp
das
fsub
cmp
int3
out
ds
mov
shl
test
loopne
jne
arpl
aaa
dec
add
jnp
das
shl
cmp
mov
int3
sbb
jge
jmp
sbb
xor
sub
iret
retf
cli
(bad)
iret
and
fadd
aaa
xor
hlt
or
xor
mov
cmp
and
daa
cmp
and
shl
mov
xchg
or
mov
and
inc
ja
out
int
push
out
sbb
loopne
(bad)
mov
jmp
push
or
pop
(bad)
cmps
mov
xlat
rcr
mov
push
pop
popa
pop
in
mov
xlat
xor
daa
cmp
aam
adc
pop
imul
pop
or
pop
ds
loop
into
sub
gs
cmp
adc
(bad)
jecxz
ins
inc
imul
les
and
test
(bad)
in
not
cld
cdq
add
fist
pop
aaa
push
push
cs
xchg
jmp
jg
setb
test
cmp
stc
cli
adc
sub
aaa
cwde
xchg
and
sbb
push
rcr
cmp
std
das
jbe
xor
sbb
js
ficom
(bad)
mov
jg
scas
rcr
call
sbb
cmps
dec
aad
mov
out
movs
aas
adc
jg
jmp
inc
pushf
adc
jns
jl
and
ret
je
sbb
mov
xor
int3
adc
fcmovb
and
adc
adc
jb
jmp
enter
mov
jb
lods
mov
xchg
push
push
jmp
sub
jmp
adc
movs
fs
jg
add
pop
xor
shl
mov
icebp
mov
dec
xor
std
jns
and
ret
sub
or
cmp
dec
xor
mov
ret
adc
(bad)
or
out
aad
fistp
dec
call
pop
jno
jb
mov
pop
mov
or
retf
hlt
dec
xor
imul
data16
out
jns
mov
iret
les
dec
ins
ins
mov
xor
pop
pop
jp
cmc
addr16
bound
lock
xor
test
xchg
dec
cmp
imul
mov
sbb
mov
push
xchg
popa
mov
dec
mov
js
sub
cmp
adc
ss
xchg
mov
sub
in
out
or
fimul
sub
cli
inc
pop
hlt
push
add
push
push
sbb
inc
mov
sub
push
xlat
daa
add
movs
xchg
in
mov
sbb
pop
loop
push
mov
(bad)
div
pop
iret
xor
xchg
mov
push
test
retf
adc
mov
adc
xchg
mov
cdq
xor
(bad)
sub
jne
mov
call
push
dec
lahf
sbb
push
ret
arpl
jbe
push
repnz
sub
sub
div
inc
xchg
xchg
mov
aad
fcom
mov
xchg
dec
popf
mov
jl
or
in
mov
mov
and
sar
mov
add
(bad)
jle
or
pop
loope
adc
and
jae
pop
adc
mov
out
nop
xchg
daa
fwait
das
arpl
out
and
fbld
jl
sbb
xchg
jecxz
fucomi
pop
outs
(bad)
aad
cmc
out
mov
aas
fadd
xchg
jbe
bndldx
jl
mov
js
sub
mov
mov
dec
push
xchg
in
in
cmps
cs
stc
jp
and
fld
das
loopne
ret
push
dec
lods
rcr
clc
dec
fs
xchg
rcr
and
test
stc
dec
xor
fs
xor
ffree
push
cdq
mov
fstp
aaa
adc
adc
fld
cli
cmc
ficom
jecxz
or
pop
popf
xor
lods
jb
dec
mov
add
dec
je
dec
cwde
jmp
xchg
push
inc
test
mov
mov
dec
xor
mov
mov
mov
cmp
outs
outs
ss
out
out
cmc
mov
xchg
inc
pop
xor
repz
mov
xchg
test
cmp
mov
sub
(bad)
retf
retf
mov
lahf
aad
inc
inc
mov
adc
mov
je
aad
adc
push
jo
mov
jmp
out
aam
jmp
(bad)
cmc
xor
dec
mov
movsx
inc
shr
data16
push
ds
mov
pop
inc
mov
xor
daa
pop
pop
mov
rcr
add
lods
inc
div
sub
jl
jns
leave
ss
xchg
sub
lods
xchg
rcl
cmp
repnz
add
pop
dec
ja
xor
stos
mov
add
push
jnp
jecxz
sub
xor
pop
mov
iret
jnp
fdivr
js
(bad)
in
je
xchg
aaa
sub
or
cmp
sar
js
cld
push
adc
stc
dec
ds
(bad)
mov
dec
jecxz
or
adc
xor
mov
sbb
sbb
adc
fistp
bound
add
jl
jns
or
xchg
inc
mov
push
fwait
sub
add
add
jge
daa
loop
ins
loopne
jo
lock
arpl
or
std
in
pop
mov
mov
stos
rcl
les
pusha
xchg
inc
fnstcw
inc
popa
loope
scas
fadd
inc
inc
xor
jg
stos
sti
aas
ins
es
xor
fwait
cmp
jmp
pusha
inc
test
mov
sbb
scas
cld
pop
das
cmc
or
mov
add
add
dec
xchg
mov
lahf
or
int
pop
and
pop
fstp
adc
cmp
and
mov
adc
nop
add
stos
ins
cwde
(bad)
sti
cmp
imul
push
adc
jne
pop
jg
mov
adc
jb
cmp
aaa
mov
test
mov
(bad)
mov
rcl
jl
lahf
xchg
xchg
mov
outs
xlat
mov
cmps
push
fcom
mov
push
mov
cmp
test
daa
add
add
test
jo
inc
push
cmp
mov
cmp
push
dec
mov
retf
loopne
pusha
mov
test
jp
mov
sub
(bad)
adc
scas
test
je
xchg
sbb
into
jnp
xor
shl
cmps
pop
in
mov
aas
dec
cmps
pusha
pusha
push
(bad)
aam
bound
and
imul
pop
sub
clc
arpl
js
push
xchg
or
cmp
test
call
arpl
lahf
and
pop
int
fldcw
pop
call
pop
sub
es
pop
push
mov
dec
sti
pushf
call
lods
push
pushf
sub
mov
xor
push
repnz
xchg
icebp
dec
sub
hlt
popf
mov
mov
(bad)
aam
and
ja
add
mov
push
push
adc
test
push
test
out
mov
add
lods
fstp
test
xchg
inc
push
xlat
xchg
popw
icebp
int3
xor
imul
mov
out
retf
fild
loop
call
push
es
jmp
rol
xor
inc
or
rol
into
and
mov
push
xchg
hlt
test
pop
ret
mov
in
add
mov
in
push
in
cmp
jmp
movs
jns
sub
ja
in
punpckhwd
mov
jnp
cmp
xchg
test
pop
and
mov
ss
inc
nop
stos
cmp
int3
adc
test
jbe
mov
or
fwait
inc
add
loopne
jb
mov
cmp
(bad)
jp
into
xchg
loope
jno
adc
retf
push
enter
retf
lock
es
jmp
add
aam
stc
outs
(bad)
rcr
test
stos
mov
adc
push
test
or
fwait
add
(bad)
cmc
daa
(bad)
jno
ret
mov
jl
and
clc
fcom
enter
or
leave
cs
fwait
sbb
mov
test
ins
sti
mov
fs
jp
addr16
mov
ins
cld
mov
mov
mov
pop
ror
pop
cmp
add
repnz
inc
sahf
mov
(bad)
es
mov
sbb
sub
mov
jae
push
iret
mov
je
in
ror
pusha
dec
mov
icebp
and
imul
cmps
std
or
cmp
data16
retf
ins
push
je
or
cli
mov
cdq
or
pop
shl
dec
jg
pop
out
pop
ins
jno
push
sbb
mov
rcl
sub
ins
into
mov
xchg
imul
push
push
sbb
mov
dec
fsub
loop
cmp
in
rol
ds
pop
lods
inc
mov
inc
movzx
stc
add
mov
push
lock
dec
arpl
cmp
xchg
pop
fsubr
mov
sahf
sti
mov
inc
lds
mov
or
sbb
lock
mov
mov
jbe
xchg
sub
jge
mov
test
cmps
call
inc
xchg
mov
xchg
ds
enter
pop
test
push
enter
aas
fsub
inc
mov
es
xchg
in
cs
arpl
jae
pavgb
mov
addr16
sahf
aam
xchg
mov
push
mov
daa
xchg
aas
lock
or
push
mov
dec
mov
xor
xor
cmc
(bad)
mov
shr
inc
cmps
icebp
xchg
ffree
ret
mov
jg
ss
pop
or
test
cmp
mov
in
out
inc
sub
ror
and
pop
(bad)
fadd
test
jecxz
or
dec
add
xchg
sbb
sbb
mov
cmc
pop
(bad)
pop
jae
dec
xor
out
mov
test
cwde
adc
push
sbb
aad
sub
jae
push
adc
popa
mov
aad
sub
(bad)
and
cld
and
push
xor
dec
ret
jmp
(bad)
cmp
inc
jmp
neg
cmps
add
lds
pop
pop
jae
xchg
and
test
aad
sub
cmps
mov
(bad)
sbb
jae
dec
jmp
adc
xchg
adc
aam
cwde
xchg
add
xchg
int
pop
lods
int
xchg
xor
mov
and
arpl
jo
sbb
aam
ins
or
stos
movs
and
push
xchg
aam
cmp
adc
jbe
movs
call
aam
sar
jp
mov
(bad)
fisttp
daa
inc
pop
xchg
seto
leave
sar
test
aam
pop
jl
jne
test
addr16
(bad)
rcl
pusha
and
inc
test
jl
ja
or
push
adc
mov
sbb
jp
push
jl
es
jmp
into
mov
stos
jbe
outs
stos
ret
or
xchg
les
add
jl
rcl
and
sbb
gs
iret
setp
add
xor
mov
in
(bad)
xchg
rol
pop
arpl
(bad)
adc
std
mov
cmps
sti
adc
mov
push
sbb
and
(bad)
fstp
pop
lahf
or
push
mov
repnz
out
push
lahf
mov
add
adc
in
ins
shl
aaa
adc
enter
push
test
sub
movs
mov
rol
xchg
aaa
xor
out
test
cdq
(bad)
out
push
push
xor
lock
push
push
inc
cwde
mov
xchg
jae
ror
dec
test
je
pop
lds
test
retw
loop
push
push
imul
dec
lds
hlt
out
mov
xor
hlt
pusha
scas
scas
and
cld
jge
mov
mov
cli
(bad)
sub
push
sbb
dec
inc
pop
pop
xor
cmp
iret
cmp
or
xchg
shr
(bad)
and
div
jb
rol
mov
xor
cmps
sub
jbe
cmp
sbb
sbb
pop
mov
xchg
mov
out
lahf
xor
sbb
mov
ja
push
(bad)
into
sub
pop
ins
xor
jno
test
and
mov
pop
adc
push
and
pop
sti
clc
jge
icebp
ret
mov
dec
dec
jmp
sar
and
repnz
fiadd
mov
xlat
and
inc
gs
push
jnp
or
mov
push
xchg
es
in
dec
jbe
iret
iret
shl
fs
fld
mov
xchg
lods
jne
dec
clc
test
addr16
sub
ret
sti
jge
inc
jo
shr
popa
out
add
aaa
leave
jae
js
xchg
pop
mov
cmp
out
jp
cmp
or
fisubr
cmps
mov
imul
cmc
adc
(bad)
(bad)
in
bnd
xchg
in
arpl
xor
or
or
and
addr16
or
fcomp
(bad)
in
sbb
imul
inc
lds
jmp
pop
add
das
mov
adc
pop
pop
sti
inc
pushw
sbb
pop
movs
push
pop
cmp
out
shr
xor
jp
inc
mov
or
jb
sub
pop
or
mov
sbb
out
sbb
aam
or
sbb
sub
push
sbb
dec
push
xlat
enter
cmp
mov
idiv
pop
cmp
pop
retf
mov
sti
loop
loopne
out
sbb
adc
out
xchg
fwait
pminub
inc
stos
in
fmul
add
lahf
(bad)
xor
jo
retf
int
loopne
cmp
add
shl
or
dec
fmul
mov
xchg
sbb
pop
sar
mov
nop
je
xlat
aas
jno
fiadd
out
leave
cmc
add
dec
mov
cmps
cmp
mov
sub
or
mov
cmp
mov
xchg
enter
scas
outs
leave
pop
and
jae
enter
fwait
xor
std
mov
push
inc
and
addr16
adc
push
mov
aas
xchg
ss
gs
test
jo
mov
push
add
sub
mov
cld
push
daa
das
aaa
jo
retf
in
test
xor
sub
jp
pop
pop
fldcw
xor
(bad)
imul
push
cmc
push
mov
sub
dec
retf
mov
mov
bnd
ds
in
loop
(bad)
dec
out
and
or
push
xor
std
xor
mov
pushf
push
mov
or
jmp
idiv
xor
push
gs
sub
fild
push
lock
mov
xchg
mov
test
pop
aaa
dec
in
inc
call
lock
aaa
pop
rcr
loopne
jne
cli
inc
add
cmps
test
gs
pop
jo
shl
mov
shl
ins
add
iret
sbb
jp
inc
xlat
mov
dec
cmp
push
push
or
sbb
fisttp
sub
push
out
push
arpl
inc
lods
(bad)
jbe
fs
dec
mov
mul
(bad)
push
and
test
(bad)
stos
adc
mov
pop
mov
rcl
aad
dec
adc
and
(bad)
mov
out
cmp
out
outs
call
popa
jnp
mov
test
scas
adc
sbb
adc
inc
cdq
mov
popa
jae
std
push
sbb
dec
arpl
imul
fisub
pop
jnp
mov
int3
xor
cmp
sbb
pop
lds
inc
fild
xor
jge
ss
cdq
aaa
sub
fwait
stos
xchg
out
sbb
iret
ds
ins
sbb
cmps
inc
cmps
cld
call
outs
and
dec
sbb
pop
into
sar
ins
xchg
(bad)
xor
rcl
jbe
imul
sub
xchg
inc
adc
pop
ja
mov
cmp
popa
shr
adc
loopne
pop
push
xor
inc
pop
pop
mov
loope
cs
xor
add
sbb
aas
jns
call
xchg
jge
pusha
in
cdq
sub
stos
inc
imul
inc
inc
jge
into
mov
inc
push
or
jb
in
test
pusha
enter
call
imul
inc
sbb
xor
stc
mov
sub
adc
inc
cmps
inc
sbb
mov
pop
inc
cmc
or
push
cmp
push
cmp
sub
iret
sbb
jb
add
and
in
push
xchg
inc
pushf
ins
dec
ins
xchg
mov
inc
int
icebp
(bad)
in
mov
movs
add
es
aam
in
jl
adc
test
cmp
retf
add
or
pop
movs
jmp
in
cdq
jo
xor
inc
push
adc
adc
mov
push
repz
jmp
mov
or
aas
mov
push
sbb
lods
mov
jge
call
es
retf
cld
iret
mov
clc
in
or
outs
mov
mov
repz
mov
call
lods
pop
xor
aam
mov
out
pop
punpcklwd
(bad)
outs
gs
push
cwde
idiv
sbb
aam
push
mov
xor
cmp
fadd
and
inc
stc
cmp
xor
stos
rol
leave
int3
out
cmp
add
in
pop
jmp
sbb
sub
out
mov
outs
and
imul
mov
test
push
and
out
add
cmp
sub
enter
mov
push
pop
imul
mov
mov
dec
ds
aad
dec
sub
inc
inc
and
xor
mov
test
mov
push
sub
fadd
(bad)
add
push
mov
xchg
out
adc
std
lahf
mov
iret
sar
je
ins
push
push
mov
aam
ins
ficomp
mov
inc
or
cwde
imul
(bad)
mov
(bad)
enter
pusha
ret
xchg
inc
pop
mov
or
jl
jnp
add
retf
rcr
sar
je
sbb
test
imul
sub
loope
xor
mov
fincstp
mov
test
push
jge
(bad)
scas
ja
call
mov
cs
movs
xchg
sar
loop
outs
inc
dec
test
test
pop
and
(bad)
ret
call
hlt
or
mov
mov
push
test
ja
cmp
pusha
dec
outs
adc
imul
sub
mov
xchg
cmp
pop
das
push
xor
sub
aad
cmp
jl
jle
int3
add
xor
pop
iret
dec
cld
sti
inc
test
cmp
sub
mov
and
dec
mov
lods
and
adc
push
push
mov
sub
sbb
scas
jno
push
mov
mov
jnp
jmp
sub
paddb
cmc
popf
mov
jo
(bad)
addr16
clc
leave
mov
cmp
je
jmp
xor
jbe
push
and
jge
daa
enter
test
cmc
mov
sub
imul
mov
cmp
and
cmp
dec
lds
or
js
add
gs
sub
ds
sub
jge
inc
xchg
mov
aas
push
pop
jp
cmp
aaa
lds
jl
out
(bad)
dec
xor
dec
pop
mov
enter
dec
mov
jb
scas
rol
sub
loopne
xor
jno
jo
lods
inc
pop
add
inc
push
ss
lock
cmps
retf
and
push
(bad)
jge
mov
adc
jns
sbb
jle
repnz
mov
mul
gs
jmp
cmp
mov
push
loop
jns
les
outs
aas
lods
inc
inc
test
add
xchg
ret
cmc
xor
(bad)
les
retf
leavew
aad
mov
cmp
fld
aad
fild
xor
sbb
pop
cmp
xchg
fcomp
repz
js
test
pop
jp
fldl2e
out
loop
ds
je
popa
add
xor
sbb
xor
push
(bad)
mov
push
mov
push
mov
mov
test
mov
subps
jmp
ret
or
mov
pushf
dec
inc
adc
leave
jp
inc
cld
in
pop
xlat
dec
add
jge
fisub
movs
jmp
nop
dec
addr16
pop
mov
cwde
cdq
bound
test
mov
jecxz
(bad)
outs
pop
sub
ficomp
jo
mov
ret
aad
loopne
sbb
fbld
mov
frstor
jle
sub
test
out
mov
les
and
cmp
pop
mov
inc
rol
xor
cmps
inc
(bad)
jnp
xchg
addr16
mov
dec
idiv
mov
mov
adc
scas
sbb
in
outs
sub
mov
mov
xor
cld
push
add
sbb
sbb
cli
xchg
pop
cmc
loopne
out
or
(bad)
stc
sub
push
je
rcl
and
leave
outs
inc
stos
mov
out
push
stos
or
popa
dec
xchg
test
nop
and
hlt
mov
out
dec
test
cmp
popf
fidivr
test
test
adc
mov
clc
mov
sti
add
mov
dec
add
mov
ins
add
push
xor
jle
loopne
xor
popa
jbe
jg
mov
inc
sub
fnstsw
mov
fimul
sbb
mov
dec
pop
inc
(bad)
cld
add
push
push
push
outs
out
lahf
in
pushaw
ja
sbb
mov
nop
inc
mov
fdivr
scas
push
mov
nop
lods
mov
mov
jbe
add
mov
test
jmp
pop
icebp
ret
rcl
inc
cmp
sbb
jo
dec
pop
sar
icebp
dec
or
jp
arpl
cmp
sbb
mov
cs
movs
or
into
int3
pop
fistp
in
xchg
imul
pop
test
repz
lods
lock
push
push
xchg
movs
dec
fidiv
mov
and
xchg
lock
enter
out
cwde
pusha
and
xchg
int3
in
pop
pop
mov
inc
mov
loope
push
outs
add
sub
fstp
int3
inc
in
xchg
or
in
cmp
daa
adc
or
jb
std
ret
sbb
cwde
(bad)
push
dec
xchg
adc
nop
pop
xchg
jmp
dec
ror
sub
imul
or
or
daa
nop
rol
jnp
sbb
inc
and
sar
outs
out
xchg
xchg
aad
pop
sub
or
sbb
out
aad
xchg
adc
repz
dec
(bad)
fsub
dec
push
and
jb
dec
cli
sbb
data16
lods
cmp
sub
mov
lds
and
data16
mov
mov
xor
aad
ja
pop
sbb
mov
dec
leave
fidivr
lea
lds
stos
xchg
ret
push
add
int3
dec
test
mov
mov
adc
inc
dec
aam
cli
pusha
pop
xor
mov
add
pop
jmp
dec
cmp
(bad)
mov
add
pop
add
outs
mov
dec
mov
adc
jae
mov
pop
sub
movs
not
ins
pushf
jmp
mov
pop
push
lea
pop
pop
cmp
ret
data16
and
pop
or
js
aaa
(bad)
das
int
fild
inc
sub
mov
movs
les
stos
jns
ja
cmp
je
(bad)
fsubp
hlt
jmp
dec
jecxz
aaa
inc
mov
pop
into
pop
int3
mov
daa
sbb
nop
inc
jl
dec
mov
or
loope
mov
retf
dec
jp
fs
in
gs
sub
xchg
cmp
popa
movs
inc
das
jbe
hlt
mov
jmp
lahf
add
jbe
das
sbb
mov
mov
lods
cmc
sub
dec
mov
pop
xchg
inc
adc
cmp
rcr
and
pop
retf
jbe
into
mov
push
mov
dec
sub
sbb
jno
outs
dec
sbb
frstor
and
mov
pop
add
ret
add
jg
retf
je
inc
cdq
(bad)
lock
add
push
cld
mov
js
int
inc
cmovne
cmp
mov
ret
pop
cmp
xor
retf
dec
push
or
jbe
cmp
mov
mov
fstp
push
add
js
test
lods
cwde
hlt
inc
adc
cwde
scas
test
pop
scas
fcmovbe
mov
xor
fwait
or
xchg
imul
inc
pop
mov
mov
cmp
in
mov
nop
test
hlt
dec
cmp
scas
xchg
jbe
aaa
stos
mov
mov
mov
stc
mov
jno
in
repnz
and
add
xchg
or
hlt
pop
fnsave
cmps
(bad)
sub
pop
jge
addr16
pop
and
pop
fdiv
inc
xchg
iret
popa
ss
mov
jno
inc
fadd
sub
xchg
cwde
dec
adc
pop
popa
loopne
ss
jl
xchg
cli
mov
enter
stc
jns
icebp
cmp
(bad)
fcmovbe
sub
jmp
jmp
add
sub
xor
jbe
and
xor
stos
pop
int
sub
pop
leave
push
inc
retf
clc
mov
sbb
xchg
push
pop
scas
mov
inc
test
js
lea
dec
dec
hlt
cmp
push
add
push
mov
call
pop
fst
mov
mov
push
mov
add
sti
cdq
scas
jae
xchg
in
les
mov
movs
fmul
add
ins
ror
mov
fcomp
adc
es
jg
add
and
xor
xchg
clc
les
scas
inc
jbe
xchg
xchg
into
das
aaa
push
jns
dec
cmp
mov
and
in
iret
push
add
cwde
fnstenv
and
mov
sub
enter
xchg
fwait
mov
mov
enter
mov
int3
cs
sbb
sbb
jb
call
in
or
push
arpl
jecxz
stc
sub
fcomp
inc
jo
push
cld
les
add
mov
fldcw
add
sub
bound
and
jmp
aam
out
inc
sub
sbb
mov
mov
shl
cmp
sub
mov
mov
jo
fs
lods
bound
imul
pop
fwait
adc
(bad)
jmp
push
jo
fld
sub
jno
mov
test
pop
cmps
int
inc
fwait
test
push
pushf
(bad)
(bad)
dec
cmp
add
or
lods
pop
ins
shl
stc
mov
adc
xchg
pop
loope
mov
push
add
xor
adc
dec
xor
xchg
pop
sbb
in
int
lds
sub
push
mov
sub
mov
jle
add
inc
scas
jl
mov
pop
jno
xor
mov
and
pop
push
(bad)
cs
jb
adc
or
push
cmp
sbb
mov
ins
adc
jne
(bad)
lds
outs
push
mov
out
add
pop
test
cmp
push
pop
sub
shr
mov
(bad)
in
add
xchg
cmp
stos
int3
cdq
sbb
cs
and
jnp
or
inc
inc
sbb
pop
gs
rcr
lods
fld
dec
pop
(bad)
fwait
aam
repz
pop
dec
pusha
or
push
outs
sub
iret
mov
jle
cli
push
mov
sub
ja
scas
and
les
mov
mov
cmp
or
xchg
fwait
push
mov
mov
dec
outs
enter
gs
jb
adc
fiadd
add
sbb
jne
dec
push
lods
push
add
(bad)
(bad)
cld
adc
fcomp
jnp
adc
sub
mov
adc
xchg
jmp
and
sub
jmp
sbb
cdq
jle
pop
dec
hlt
mov
push
pusha
jnp
or
xor
je
mov
das
push
inc
call
rcr
leave
sub
pop
pop
xor
sub
das
mov
into
cmp
shl
push
xchg
cli
mov
aaa
cld
bound
add
andps
fwait
xchg
mov
xchg
pop
jbe
mov
fsub
loop
push
hlt
push
adc
pop
jb
sbb
inc
lods
cmp
aas
sbb
iret
jecxz
inc
xchg
repnz
xchg
fnstcw
and
jnp
cld
sub
push
mov
(bad)
std
das
clc
add
cmps
or
add
(bad)
mov
xchg
push
sbb
pop
sbb
fwait
and
mov
and
in
add
(bad)
push
fsub
push
cmps
sub
cmps
pop
add
movs
aaa
sub
(bad)
lock
adc
push
cwde
aam
fstp
jae
mov
cld
mov
inc
test
push
adc
jns
xchg
dec
loop
add
inc
push
lods
test
xor
xchg
pop
cli
inc
mov
add
int3
push
and
je
sbb
imul
cmp
push
out
retf
lea
fcmovne
lea
inc
lds
les
test
inc
movs
popf
inc
mov
or
sbb
jno
lods
lds
inc
and
in
fiadd
xor
xor
cs
lock
dec
outs
xchg
pop
sub
fst
push
jo
stos
pop
push
ss
(bad)
pop
pop
ret
cmc
push
stos
cmps
loopne
repz
ret
leavew
loope
adc
cmp
inc
sbb
or
iret
dec
jmp
cmp
imul
sub
jl
icebp
adc
add
lods
into
lock
dec
es
cmp
test
rcl
mov
mov
push
mov
add
daa
cmps
xchg
xchg
in
dec
imul
ins
iret
mov
lods
xlat
and
adc
jo
call
fstp
and
mov
stos
retf
stos
(bad)
out
inc
xor
push
arpl
xor
data16
das
adc
sub
add
or
inc
sub
push
jmp
int3
hlt
xchg
cmps
ins
inc
aas
out
lods
out
sar
jge
pusha
repz
je
sar
add
mov
jno
push
jle
repz
lock
push
mov
cmp
pop
mov
mov
adc
xchg
int3
xlat
mov
jns
repz
loop
mov
pop
mov
out
es
add
push
jbe
fild
sbb
mov
mov
push
push
mov
jb
jle
rcl
cmps
icebp
adc
ins
shl
aam
leave
int3
mov
leave
jb
mov
ret
or
movs
inc
test
sub
cmp
icebp
aad
out
adc
leave
inc
jmp
sbb
xor
add
fst
(bad)
pop
mov
js
leave
int3
scas
xor
mov
or
shr
cld
pop
push
fadd
jnp
mov
xchg
div
fadd
mov
pushf
mov
daa
mov
dec
jne
sbb
jno
stos
jle
xor
jmp
xchg
shl
mov
fwait
out
adc
pop
mov
and
xchg
jl
mov
lock
daa
test
ins
adc
shl
addr16
jne
mov
mov
jmp
popa
outs
sbb
xchg
mov
lock
xor
arpl
enter
jmp
je
mov
loope
jg
outs
in
out
leave
push
int
inc
mov
popa
dec
dec
jae
adc
sub
push
test
sub
les
mov
fsubr
div
jl
(bad)
push
je
adc
xchg
and
out
fdivr
sar
retf
ret
mov
adc
xchg
mov
xchg
cmp
rol
daa
mov
sbb
adc
je
sub
arpl
inc
adc
movs
test
icebp
adc
nop
aad
xchg
dec
lods
test
loope
xor
(bad)
pop
xor
sbb
scas
push
mov
inc
ret
push
mov
mov
dec
jecxz
jmp
jmp
dec
bnd
xchg
mul
or
jmp
(bad)
dec
int3
lods
pushf
inc
daa
push
jl
inc
inc
jmp
iret
or
js
out
loopne
cmps
push
push
jne
xchg
add
mov
das
mov
push
fimul
or
xchg
xchg
addr16
push
loopne
jmp
(bad)
sbb
stc
sbb
mov
mov
cmps
xchg
cmps
adc
popa
xchg
aad
cld
jmp
inc
(bad)
into
stos
shl
xchg
pop
mov
or
sbb
cmc
data16
popa
stos
les
js
jle
cli
ins
mov
pop
lock
sahf
popa
aad
movs
sbb
jb
(bad)
std
hlt
out
inc
mov
add
jae
pop
ret
xor
pop
ror
into
xchg
push
adc
retf
xor
adc
sub
pop
sub
pop
mov
pop
int3
loope
lock
mov
dec
loope
sbb
fst
std
daa
aas
mov
xor
mov
pop
setl
int3
mov
mov
gs
cmps
cli
imul
ret
lods
inc
mov
adc
or
pop
and
cmp
adc
jne
movs
mov
xor
jle
sub
js
(bad)
pushf
adc
(bad)
fild
int3
dec
aam
mov
inc
xor
sahf
out
outs
scas
loopne
xchg
push
cwde
fld
push
(bad)
popf
mov
mov
test
pusha
fild
cmp
sub
xor
cwde
inc
xchg
fild
mov
add
cmp
stos
shr
push
dec
aaa
mov
sub
es
jb
in
xchg
pushf
cld
pop
addr16
imul
dec
add
pop
push
pop
inc
sub
dec
rol
or
or
mov
mov
xchg
fadd
jge
jg
or
adc
leave
(bad)
clc
cs
enter
add
in
xchg
fldenv
mov
xor
inc
xor
loop
lock
push
repz
add
cmp
les
ss
or
mov
adc
je
call
jge
jmp
push
jmp
es
cdq
adc
push
sbb
hlt
push
ficomp
cmp
test
inc
jecxz
mov
mov
aad
pop
cmp
pop
cmp
data16
pop
int
push
js
les
outs
xchg
(bad)
cmp
inc
outs
push
icebp
aad
dec
cmp
sbb
loopne
adc
push
ror
test
leave
sahf
jns
in
cmps
leave
dec
hlt
fistp
sbb
or
sub
dec
sbb
dec
fld
mov
jae
jmp
push
pop
adc
sahf
cmc
mov
or
sahf
gs
int
pop
daa
int
mov
xchg
pop
mov
xchg
push
std
jmp
add
pop
add
dec
xor
pop
jne
sbb
(bad)
mov
cmps
pushf
repnz
mov
jle
jge
mov
sub
fist
(bad)
mov
mov
aad
pop
add
mov
pusha
inc
mov
sub
and
inc
gs
fst
dec
int
jmp
mov
lods
jo
jo
sbb
mov
stos
jno
in
mov
mov
xchg
mov
push
ror
inc
iret
jp
shl
nop
xor
mov
xor
mov
dec
xchg
mov
mov
sbb
mov
nop
call
pop
xchg
lods
pusha
xchg
or
dec
loope
mov
mov
xor
bound
lahf
xchg
(bad)
dec
push
inc
loope
jno
in
repnz
leave
pop
test
sbb
aad
inc
mov
(bad)
inc
jecxz
push
call
test
add
pop
sbb
dec
sub
clc
sbb
mov
inc
cmp
popa
xchg
push
jo
pop
dec
int3
mov
ss
adc
jmp
or
sub
jl
fist
and
lea
out
adc
and
push
dec
mov
push
jp
mov
call
mov
mov
push
mov
ror
adc
test
or
cmp
jae
sbb
inc
outs
mov
in
mov
das
call
fcomi
(bad)
dec
(bad)
icebp
cmp
lods
or
jbe
or
pop
push
xor
iret
push
repz
popf
and
mov
mov
mov
(bad)
jne
stos
sbb
cmp
push
add
push
dec
mov
sbb
fmul
fbld
js
or
inc
and
xchg
xchg
int3
mov
cmp
fnstsw
mov
xchg
loope
xor
retf
(bad)
cli
dec
scas
punpcklbw
cs
adc
jmp
and
bound
pop
xchg
sbb
mov
sbb
mov
ret
sar
add
pop
out
cmc
or
stos
xor
in
sbb
pop
dec
xchg
xor
sbb
push
(bad)
pop
mov
xchg
addr16
xchg
jge
pop
jnp
dec
jns
cdq
into
jb
sbb
xlat
stos
in
and
mov
push
retf
dec
sub
pop
sti
xchg
(bad)
mov
loope
mov
rol
bound
inc
mov
in
and
inc
dec
hlt
and
adc
fwait
push
mov
mov
pushf
movs
dec
push
movs
xchg
or
stos
test
jmp
int3
xchg
jle
cwde
test
ret
inc
scas
xchg
lahf
mov
or
mov
arpl
shl
in
mov
js
mov
repnz
rcl
pop
add
inc
lock
and
nop
add
pop
jb
cmp
sbb
int
jnp
sub
test
jnp
leave
out
sbb
xor
movs
cwde
xchg
lods
cmp
out
xchg
outs
sub
xor
xchg
aas
cmc
aas
push
jle
int
add
pop
lea
in
jge
cwde
jns
int3
mov
pop
in
sbb
cwde
jg
pop
and
pushf
fidivr
lahf
mov
adc
or
jecxz
add
mov
not
repz
pop
movs
xchg
cmp
sub
jb
sti
jb
mov
inc
jle
fstp
and
rcr
and
sub
fistp
pop
inc
push
js
fwait
adc
imul
cmps
mov
jb
icebp
retf
cmp
inc
xchg
inc
dec
jb
lahf
inc
jae
xor
call
jno
fidiv
jne
je
mov
cmp
xor
test
fwait
adc
xchg
pop
(bad)
iret
call
dec
hlt
mov
neg
sbb
loop
or
sti
shl
mov
movs
div
jle
jnp
cs
mov
dec
push
dec
mov
jbe
ret
vmread
add
jmp
mov
out
lds
adc
movs
add
hlt
vfmsub231ss
mov
pop
inc
arpl
int
mov
mov
retf
fwait
dec
add
cdq
pop
stos
fild
in
pop
js
out
aad
fsub
imul
add
mov
mov
sbb
mov
out
int3
push
adc
jmp
mov
inc
and
and
cwde
xor
out
push
jl
ds
jnp
jnp
and
imul
inc
repnz
jnp
jbe
stos
xlat
mov
fdiv
test
cmps
sbb
inc
jne
sbb
js
or
stos
sbb
in
hlt
mov
neg
ret
cmp
js
xchg
push
jne
stc
adc
imul
in
aam
dec
sbb
push
adc
rcr
jecxz
clc
cmp
cld
cmc
jo
inc
mov
ret
jo
cmp
pop
out
dec
std
mov
xor
pop
int
fidiv
jbe
not
sbb
pop
xchg
imul
and
mov
icebp
inc
lock
push
add
nop
and
shl
sbb
pusha
mov
xor
dec
stos
aad
mov
test
das
ins
push
and
ins
jae
and
jns
gs
jbe
sub
jge
mov
test
dec
pusha
xchg
inc
out
and
enter
xor
fs
mov
mov
retf
jle
mov
outs
and
int
xchg
mov
out
jno
cmp
xchg
call
ret
fwait
push
sbb
mov
mov
push
mov
jg
adc
pushf
or
fild
add
sar
das
fisub
sbb
aad
mov
loop
sub
pop
mov
inc
mov
ret
dec
adc
fistp
std
(bad)
mov
fstp
stos
clc
out
pop
imul
pop
xchg
sbb
es
and
(bad)
jae
pop
jge
jmp
cmp
jmp
fcom
dec
sbb
fbstp
mov
dec
fdiv
retf
retf
pop
lods
mov
cmp
dec
shl
adc
pop
dec
xchg
mov
fpatan
dec
retf
(bad)
out
imul
mov
shr
stc
loope
mov
scas
pop
mov
inc
test
js
mov
xchg
inc
leave
xchg
icebp
dec
lahf
lds
imul
daa
and
aam
mov
ja
in
shr
pop
popf
add
in
mov
jne
xor
adc
clc
jmp
sbb
pusha
mov
clc
call
leave
je
jne
pop
pop
adc
cdq
pop
std
shr
or
jmp
sbb
bound
cmp
dec
pop
clc
movs
loope
div
push
test
cld
cli
jp
shl
mov
(bad)
cld
xor
xchg
in
outs
ins
push
movs
out
popf
pop
rcr
lahf
sbb
stos
xor
ins
mov
outs
stos
jle
pop
push
outs
mov
int3
mov
adc
jp
aam
and
xor
sbb
addr16
sti
or
or
sub
ret
into
inc
out
test
addr16
jae
pop
xchg
cli
mov
add
push
int
sbb
mov
es
out
inc
push
xchg
adc
mov
test
or
inc
ins
and
or
push
data16
xchg
xchg
push
add
pop
in
add
mov
pop
jno
fcom
test
push
test
div
bound
retf
sti
add
xor
sub
jg
cmps
retf
or
push
add
adc
es
mov
int3
cmp
out
ss
inc
movs
jg
sti
mov
or
test
inc
adc
ds
les
nop
test
jo
outs
push
js
push
dec
xor
inc
es
mov
mov
in
add
in
das
dec
aas
(bad)
mov
cmp
jnp
repz
fsubr
pop
inc
js
sbb
(bad)
jbe
pop
enter
cmp
mov
add
sbb
mov
ficom
fstp
add
pop
mov
push
call
shl
xor
and
pusha
jmp
inc
mov
adc
adc
icebp
jno
out
mov
xor
rol
cli
in
mov
cmc
aam
lock
pop
dec
jns
cmovs
(bad)
shl
and
mov
mov
icebp
jle
jecxz
and
fisttp
lods
jo
out
cmp
sbb
sub
fs
jne
pop
popf
cwde
add
and
pop
mov
sub
or
cli
inc
not
cmp
pop
xor
mov
into
(bad)
inc
cmp
mov
sub
jmp
adc
cmc
pop
mov
cdq
mov
cmps
pop
dec
and
mov
mov
inc
inc
in
pop
repz
(bad)
cmp
add
sub
loopne
imul
rcl
lahf
push
ficomp
dec
mov
lock
ss
push
jge
outs
fwait
ins
or
or
stos
jmp
xor
mov
hlt
adc
daa
loop
jmp
int
(bad)
aad
(bad)
jle
test
mov
mov
dec
ds
pop
and
mov
mov
sbb
push
and
popa
dec
cmc
dec
jmp
push
mov
mov
mov
pop
fwait
sub
mov
in
sub
pop
push
pop
fsubrp
pop
movs
sbb
loope
pop
inc
scas
repnz
inc
leave
jle
inc
push
ror
pop
aas
mov
mov
jno
ror
popf
push
std
ins
daa
icebp
push
gs
jge
mov
std
adc
jmp
repnz
sar
jg
inc
scas
orps
xor
popf
or
test
out
mov
mov
cdq
jle
dec
mov
pop
add
div
or
mov
inc
pop
pop
aas
mov
push
mov
rcr
out
jecxz
sub
cld
cmps
pusha
or
push
retf
adc
mov
inc
stos
icebp
sbb
stc
leave
mov
nop
pop
sbb
(bad)
sti
pop
push
pop
iret
ins
cmp
pop
movs
dec
mov
jb
dec
inc
leave
and
repnz
cmps
or
repnz
sbb
sbb
mov
pop
retf
pop
cmp
stos
div
and
cmp
lds
adc
(bad)
xlat
jne
add
cmp
stos
push
dec
jo
mov
cmp
das
sub
mov
not
jl
mov
daa
stos
sub
lods
xor
xor
jge
mov
fst
jg
xor
arpl
mov
inc
aad
mov
cdq
pop
xchg
cdq
cli
lds
jno
iret
ret
retf
das
sbb
fcomp
or
cmc
js
scas
xchg
sti
adc
(bad)
rcl
fisub
inc
add
cmp
xchg
cmps
cmc
jmp
pop
imul
out
and
ja
loope
loopne
mov
pop
fidiv
cmc
fdivr
(bad)
int3
addr16
repz
pop
loopne
or
hlt
cmp
sub
and
(bad)
stc
dec
pop
dec
dec
push
or
pop
(bad)
fwait
push
mov
aam
jae
idiv
sub
jno
(bad)
loope
arpl
aam
jmp
xchg
lods
sub
(bad)
mov
out
push
sub
pop
mov
mov
adc
push
lods
aam
sub
push
scas
je
sbb
out
movs
mov
aas
mov
pop
mov
arpl
mov
push
test
dec
js
scas
imul
jmp
fsubr
mov
ror
loope
imul
jb
or
cmc
mov
pop
test
cmp
mov
mov
test
sub
mov
pop
jmp
lea
pop
xchg
cmc
dec
mov
add
in
test
out
pusha
pop
add
jp
adc
add
xchg
test
out
adc
mov
imul
test
cmp
add
movs
outs
cmp
or
cdq
sub
sub
leave
xchg
fs
dec
scas
jmp
ret
jno
das
dec
das
popf
retf
icebp
push
loope
lods
mov
inc
xor
sub
and
dec
fisubr
mov
fstp
and
addr16
movs
jb
addr16
jle
outs
adc
fisttp
icebp
push
sbb
cmp
push
jmp
mov
adc
fstp
or
cmp
add
pop
aam
xchg
cmps
sbb
push
cmps
icebp
pop
jns
jnp
jle
imul
test
jecxz
jmp
mov
in
sbb
pop
ins
scas
mov
push
and
inc
pop
cwde
retf
out
data16
cld
cmc
pushf
aas
out
lock
jmp
pop
pop
or
add
rcr
sti
loope
fld
cmc
in
add
arpl
push
(bad)
clc
push
pop
(bad)
jnp
sub
gs
or
sub
jecxz
xchg
es
push
das
rol
bound
push
arpl
out
ds
mov
xchg
cs
push
jg
push
push
xor
adc
test
std
mov
(bad)
inc
and
push
and
sub
xor
cld
lock
cdq
sbb
lds
retf
dec
xor
jno
aad
jbe
test
add
lods
ss
dec
jmp
fcom
sub
mov
jmp
aam
aaa
hlt
pop
in
adc
(bad)
test
ret
dec
lea
cmp
xlat
adc
mov
mov
jnp
fst
popf
adc
and
push
jmp
cmp
rol
jge
cmp
les
xlat
mov
xor
ins
push
mov
call
ficom
or
xor
xor
shl
xchg
adc
rcr
out
int3
rcl
scas
cmp
mov
push
sbb
cld
repz
mov
pop
sub
mov
push
push
add
and
mov
lahf
in
popa
or
sbb
sub
pusha
sbb
cmovo
xor
cmc
stos
fcmove
movs
or
mov
sbb
fist
push
pop
(bad)
(bad)
loopne
sbb
inc
jg
cmps
mov
xor
hlt
sub
push
inc
push
loope
sub
scas
(bad)
clc
jmp
(bad)
jmp
fdiv
xchg
ror
dec
into
mov
(bad)
outs
or
sub
imul
js
movs
inc
addr16
jg
data16
push
cmp
loop
in
xor
loope
dec
scas
in
add
mov
jecxz
arpl
pop
bound
add
nop
xor
jno
push
lock
mov
cmp
pop
dec
sub
leave
jno
push
enter
std
cmp
pop
mov
mov
and
inc
imul
mov
mov
call
sub
or
repnz
sbb
aad
daa
jmp
adc
jle
xor
push
repz
stc
sbb
xchg
aad
daa
dec
pop
loope
sbb
sub
into
mov
add
xchg
inc
ja
and
inc
in
push
push
pop
push
push
pop
jecxz
packssdw
or
inc
fs
pop
fisttp
leave
fild
jg
aad
jnp
popa
pop
xor
xchg
mov
cmp
jno
imul
push
push
out
hlt
pop
imul
mov
mov
xor
scas
xchg
loopne
aas
cmps
push
mov
push
dec
mov
xchg
lods
cli
mov
and
mov
and
inc
push
jmp
adc
inc
push
data16
mov
jae
loopne
or
and
ds
ror
xchg
cmp
pop
mov
pmulhw
ja
sti
repnz
or
pusha
rcr
sti
xor
nop
rcr
pop
inc
(bad)
sbb
add
das
and
sbb
sar
gs
inc
lock
(bad)
mov
ret
pop
pcmpeqw
and
retf
loopne
sub
or
push
push
and
fld
push
mov
xchg
mov
jne
sub
into
cli
imul
or
outs
hlt
sbb
push
sbb
add
pop
fisub
stc
cld
xor
pusha
in
minps
rol
pop
pop
and
xchg
into
xor
out
daa
push
sbb
cwde
retf
jnp
(bad)
jne
mov
adc
out
cmp
mov
lods
mov
add
jo
fxch
out
mov
addr16
shl
jmp
xchg
daa
jmp
cmp
mov
(bad)
ficom
je
pop
and
sbb
mov
pop
add
fimul
adc
sub
mov
inc
fwait
push
push
adc
xor
fcmovb
imul
add
js
pop
cli
aaa
add
xchg
sub
lahf
call
mov
hlt
repz
and
mov
loopne
nop
dec
cwde
inc
data16
inc
mov
loop
inc
loopne
push
in
mov
push
in
ins
loope
mov
mov
adc
mov
bound
or
jno
outs
popa
xor
push
mov
pop
pop
inc
std
cdq
fimul
addr16
cmps
sub
iret
mov
aaa
sti
hlt
cmp
mov
scas
pop
sbb
(bad)
xchg
push
xchg
das
and
inc
fist
sbb
cmp
shl
mov
jo
inc
xchg
lds
push
mov
mov
mov
bnd
loop
cmps
jmp
or
cmp
dec
and
mov
lea
inc
pop
mov
rcl
mov
jg
cmp
int3
mov
push
dec
cli
add
mov
mov
sti
add
ret
(bad)
pop
dec
inc
stos
jg
pop
lds
push
mov
inc
and
jnp
dec
jmp
mov
dec
lds
dec
and
or
add
fcom
mov
jns
aam
lds
push
lock
push
scas
imul
(bad)
das
mov
inc
pop
nop
cmc
mov
out
add
adc
scas
(bad)
or
sub
(bad)
fld
push
jg
pop
jg
mov
sub
mov
(bad)
ret
sbb
and
mov
xchg
hlt
mov
push
or
add
pop
xchg
adc
stc
push
mov
add
jle
lods
sub
mov
fld
fisttp
fsub
pusha
shl
ss
fiadd
inc
(bad)
(bad)
cs
jo
and
cmp
adc
hlt
daa
cdq
cmp
xchg
imul
test
mov
inc
test
jge
repz
mov
mov
(bad)
jmp
fild
mov
xor
sub
inc
mov
jmp
pop
out
dec
xchg
sub
pop
mov
xor
mov
imul
or
push
add
cmp
retf
cli
cmc
or
pop
mov
jecxz
mov
ds
int
mov
call
test
mov
push
fld
pop
xchg
mov
cmp
mov
dec
stos
out
mov
pushf
dec
loope
mov
pop
mov
or
mov
sub
inc
and
aas
cld
jle
pop
mov
test
(bad)
mov
jg
jmp
cmp
loopne
mov
cli
jns
fidivr
adc
and
aam
mov
fcomip
cli
lods
mov
repnz
sbb
sub
pop
and
add
mov
adc
jmp
dec
add
es
mov
js
jmp
dec
pushf
jae
xchg
xchg
jecxz
sbb
out
ja
dec
pop
push
sub
cmp
sbb
jle
sbb
jno
ins
dec
pop
fwait
adc
push
imul
sbb
clc
ds
xchg
icebp
lahf
call
sti
leave
fsubr
dec
sub
outs
pop
(bad)
pushf
jae
cwde
mov
push
push
and
in
retf
add
adc
imul
sar
pop
adc
les
popa
sahf
dec
cmp
ret
loopne
inc
movs
in
cld
mov
int3
les
xchg
aas
sbb
inc
rcr
mov
popa
mov
cdq
bound
jne
jo
push
aaa
jns
fucomp
mov
retf
cmc
jg
sub
fisttp
iret
aaa
sub
in
mov
aas
push
mov
xor
cmc
dec
mov
pop
push
jno
xor
mov
stos
jno
ins
dec
js
push
loope
lods
fidiv
dec
inc
jmp
pop
out
cmc
dec
push
sbb
or
cmp
cmp
and
popw
and
mov
add
mov
cmp
mov
add
cmp
xchg
xor
cli
fwait
mov
out
dec
test
rol
mov
sub
push
mov
push
adc
pop
dec
and
xor
aas
mov
adc
xor
das
sti
int
push
or
mov
pop
jno
mov
rol
dec
(bad)
idiv
mov
stos
xchg
dec
dec
es
add
mov
cmc
push
jno
sbb
(bad)
sub
mov
inc
mov
int3
mov
daa
mov
add
popf
mov
push
jge
data16
inc
xor
fdiv
fsub
js
mov
adc
je
adc
sbb
ins
mov
call
or
movs
or
xchg
mov
cmc
push
(bad)
adc
stos
imul
xchg
jmp
adc
movs
je
push
adc
test
int3
leave
pop
ror
aaa
cdq
pop
cmps
mov
mov
push
mov
scas
shr
aas
dec
jp
stos
fs
jmp
nop
ds
pop
mov
pop
rcl
mov
rcr
popa
xchg
lock
out
and
add
inc
addr16
std
push
ret
mov
cmp
jnp
sbb
cmp
in
out
in
imul
ds
popf
jae
pop
fs
mov
jno
xlat
sbb
enter
pop
ss
cmc
bound
test
or
scas
mov
scas
inc
sub
aas
lahf
xor
sbb
ret
in
lock
lods
mov
sub
repz
or
imul
mov
jb
sar
rcr
hlt
cmp
cdq
xchg
push
add
jmp
pusha
dec
add
push
(bad)
and
pop
mov
lahf
sbb
lods
pop
ret
(bad)
pop
push
pop
jns
fs
push
aas
pop
xchg
push
or
pop
and
test
int3
scas
stos
fcmovnu
(bad)
mov
sub
mov
aad
add
pop
push
mov
or
or
scas
push
and
xor
adc
ja
sbb
jle
repz
mov
jo
or
mov
push
inc
daa
js
sbb
leave
(bad)
push
xor
ss
pop
pusha
ret
test
js
pop
call
add
cmps
psllw
aam
cs
fwait
mov
pop
jg
add
aad
loopne
pop
dec
mov
xchg
div
dec
jnp
outs
fisttp
inc
pcmpeqb
adc
shl
add
out
dec
sub
sub
cld
nop
add
aam
adc
cmc
mov
es
add
stos
xlat
in
les
push
mov
xlat
xor
repz
inc
aam
mov
inc
cmps
imul
movs
nop
cmp
test
rcl
push
stc
xchg
inc
adc
cmp
shl
add
rol
je
jp
pop
(bad)
adc
iret
pusha
pop
retf
in
rcr
mov
xlat
mov
mov
cli
push
jle
jnp
fwait
jnp
mov
mov
and
icebp
in
cmp
std
rol
jecxz
out
dec
and
ins
inc
mov
jg
push
cmp
ja
cmp
mov
ds
pop
adc
push
sti
xchg
xor
test
mov
cmp
cmps
or
lods
xor
(bad)
repnz
mov
jg
imul
pop
aas
lock
sub
xor
inc
ss
pop
(bad)
int3
inc
xchg
(bad)
hlt
cwde
into
test
enter
inc
adc
(bad)
mov
sbb
mov
mov
xlat
sub
dec
addr16
xor
out
ins
jle
not
inc
arpl
jl
and
dec
scas
and
fnstenv
(bad)
arpl
in
mov
cmp
mov
jle
sahf
fmul
sbb
dec
shr
popf
jmp
imul
cld
or
loope
inc
jne
add
pop
xchg
xchg
out
dec
int
shl
cmps
mov
das
xchg
rcl
mov
jp
into
int
mov
std
cmp
sahf
xor
dec
lea
call
pop
jbe
jno
add
jg
and
add
sar
not
push
js
nop
pop
push
cmps
sbb
nop
sub
adc
inc
jmp
test
sbb
inc
test
sub
pop
daa
pop
call
pop
enter
out
scas
test
inc
out
push
movs
daa
mov
dec
sub
cmc
push
scas
repz
call
or
cli
mov
in
inc
nop
bound
mov
ja
enter
mov
movs
inc
clc
or
hlt
jl
cmps
loopne
jmp
fsubr
add
fld
or
or
aam
mov
mov
ret
(bad)
stc
(bad)
addr16
add
mov
add
rcl
cmps
loope
jle
jb
stos
in
xchg
jno
or
xchg
mov
dec
adc
mov
dec
xor
dec
sbb
cli
cmc
push
dec
jno
js
mov
sub
xchg
fidivr
ins
ins
dec
retf
push
xchg
pop
icebp
call
leave
push
add
ds
add
inc
pop
fcom
adc
mov
pop
mov
imul
or
or
and
jecxz
xor
and
xchg
lods
jae
and
sub
imul
(bad)
loope
mov
mov
lock
pop
sahf
mov
mov
bound
das
ror
sub
je
sub
sbb
xlat
pop
mov
lods
and
fwait
sti
fild
aam
in
push
ins
cmp
push
jg
stc
jbe
dec
jne
sub
sbb
movs
push
push
out
test
inc
jne
sub
jno
mov
int3
sub
mov
sub
sub
adc
add
mov
cmp
(bad)
fnstenv
add
retf
mov
movs
push
adc
inc
adc
ss
in
stos
cwde
jle
sub
rol
sbb
movs
pop
cmp
or
div
jle
mov
adc
outs
mov
and
push
(bad)
xchg
lods
pop
jmp
icebp
sub
dec
test
adc
pop
sbb
dec
or
jne
repz
rcl
or
pop
dec
pop
pop
mov
sar
mov
rcr
xor
pop
xor
mov
cmp
ret
cmp
bound
rol
arpl
lahf
and
aaa
cmp
sahf
test
pop
xor
pop
add
dec
mov
xor
and
lea
out
icebp
pop
out
add
sbb
movs
test
jns
ss
loop
clc
push
pop
mov
es
xchg
(bad)
mov
pop
mov
enter
nop
icebp
in
and
xlat
xchg
lods
shl
cmp
add
in
dec
ja
dec
xchg
leave
xchg
cmp
mov
sub
pop
xor
push
sub
mov
int
inc
push
bsr
mov
push
and
pop
pushf
aam
sbb
ss
mov
out
pop
sbb
pop
in
xchg
in
jb
pop
jbe
or
add
dec
hlt
pop
test
add
fisubr
addr16
push
iret
mov
sub
lock
dec
xor
test
mov
or
scas
lock
inc
or
hlt
xor
jmp
xchg
cmc
test
add
add
push
pop
jp
rol
or
jl
mov
fnsave
mov
retf
and
mov
cmp
(bad)
pushf
jle
ds
je
pop
cmc
sub
retf
mov
sbb
ror
sub
mov
es
adc
inc
dec
call
xor
push
stos
or
(bad)
aad
dec
jae
dec
jb
scas
popf
test
scas
add
idiv
dec
in
add
push
adc
shl
jb
push
dec
cli
stos
jle
inc
xrelease
xchg
inc
sub
and
pop
popf
fbstp
adc
repz
inc
test
xor
hlt
or
push
sub
xchg
clc
mov
dec
(bad)
(bad)
repnz
outs
sbb
stos
adc
jg
add
test
call
cmp
cdq
jb
outs
inc
add
sub
mov
push
or
ret
xchg
xchg
pop
mov
mov
or
scas
jns
cs
aaa
std
dec
and
dec
cmp
dec
inc
and
xchg
fstp
mov
popa
arpl
mov
or
nop
(bad)
cld
sbb
pop
xor
loope
cmp
out
(bad)
scas
dec
or
sar
(bad)
out
mov
push
cdq
inc
sbb
iret
inc
push
jmp
pop
adc
fs
pushf
xchg
hlt
inc
push
out
xor
mov
pop
add
pusha
ficomp
xchg
enter
fs
mov
jmp
mov
nop
pop
cmc
fstp
jg
bound
test
fmul
push
lock
xchg
inc
outs
outs
icebp
xchg
hlt
arpl
sar
mov
mov
jg
into
test
cli
xor
(bad)
in
fxch
(bad)
outs
mov
ror
jmp
jecxz
popf
sysexit
jno
mov
or
mov
mov
lea
int3
test
cli
retf
mov
mov
lahf
inc
test
leave
dec
sub
xchg
push
adc
jae
outs
ins
test
mov
sbb
or
jbe
cmp
or
icebp
mov
repz
pop
cmps
pusha
lods
sub
jecxz
pop
es
call
pop
(bad)
(bad)
jnp
cdq
retf
mov
sti
mov
fbld
cmp
iret
loop
pop
dec
test
xor
je
leave
pop
popf
jmp
inc
cwde
imul
std
mov
mov
pop
sub
and
scas
clc
sbb
js
push
cdq
adc
jle
ret
pop
cli
(bad)
push
sbb
cmps
jmp
and
aaa
dec
mov
popa
pop
mov
push
in
in
loopne
inc
mov
lods
cld
pop
shr
xor
mov
retf
mov
xchg
jle
push
jecxz
daa
xor
fadd
mov
cmps
loope
cmp
cld
adc
add
adc
and
jmp
push
sub
mov
add
cmp
mov
ret
and
call
or
dec
mov
(bad)
test
adc
lods
(bad)
fiadd
call
push
popa
in
push
pop
daa
xchg
int3
lods
add
or
adc
pop
sbb
xchg
mov
fsub
call
cmps
and
inc
xchg
fucomp
repz
adc
adc
out
adc
jbe
and
in
ja
jae
gs
add
adc
or
std
loop
into
inc
cdq
fcom
jl
fmul
sti
ss
inc
jne
mov
push
movs
push
adc
xchg
out
retf
or
xlat
dec
jmp
cmp
jne
sbb
mov
out
test
add
imul
mul
mov
aas
adc
mov
jns
inc
pop
dec
push
into
cmp
rcl
dec
add
movzx
imul
jg
xor
sbb
mov
mov
and
clc
sbb
xchg
arpl
(bad)
jbe
fidiv
or
mov
ins
repz
cwde
retf
and
sbb
mov
mov
aam
dec
mov
add
gs
stos
cmp
retf
adc
int3
pushf
and
ror
arpl
push
in
int3
pop
daa
js
js
popa
shl
call
inc
outs
or
stc
sub
cmc
in
inc
inc
paddw
and
(bad)
sub
sub
jno
lods
inc
or
pop
shl
ja
or
dec
or
ds
inc
int
aas
inc
leave
fnsave
inc
rcr
fnstcw
dec
movs
mov
imul
scas
sbb
std
call
jge
pop
in
xchg
mov
retf
cmp
div
push
data16
jg
aas
jmp
in
inc
adc
imul
pushf
out
pop
ror
sub
lds
push
icebp
mov
sub
fs
mov
loope
pop
out
xor
cs
inc
fst
sbb
in
in
popf
outs
fst
mov
xor
inc
test
mov
imul
adc
cdq
cmp
push
ror
xor
push
mov
test
push
mov
jmp
dec
pop
push
adc
or
push
stos
jge
out
js
pop
cld
je
ficom
sub
icebp
lods
sub
sub
mov
sar
ja
sub
inc
call
dec
arpl
les
add
jae
jne
cmp
movs
cmps
jmp
daa
lods
xor
ins
xchg
loope
or
shl
mov
retf
inc
mov
mov
cmp
mov
imul
pop
cmp
shl
ja
add
gs
popf
into
or
mov
xchg
cmp
mov
in
call
push
mov
jmp
in
jb
test
mov
pop
cmp
inc
push
mov
rcr
enterw
jmp
aaa
cwde
add
push
clc
stos
in
dec
jp
and
mov
in
or
iret
add
push
jge
jecxz
ins
xchg
pop
xchg
repnz
clc
xchg
test
cmp
aam
mov
dec
mov
xchg
lods
call
lods
fwait
or
xchg
loope
out
and
repz
inc
cmp
xchg
xor
mov
pop
sub
push
lods
cmp
jns
adc
shr
movs
or
xor
aam
and
sub
sti
into
enter
sub
test
cmps
enter
xor
mov
popa
mov
(bad)
hlt
pop
xchg
pusha
cld
dec
push
outs
pop
cdq
repnz
push
jne
pop
sbb
hlt
out
pushf
enter
aas
imul
jo
add
(bad)
in
mov
inc
jno
push
add
add
pop
mov
scas
enter
test
mov
sub
pop
rcr
add
cmp
xor
sub
repnz
sub
into
add
aaa
jne
add
sahf
repz
mov
push
stos
inc
sub
dec
mov
aad
test
dec
adc
ret
retf
addr16
sti
mov
mov
or
mov
xor
icebp
and
mov
mov
mov
aam
arpl
xchg
add
div
stc
sub
stos
ss
inc
and
xor
cmp
mov
mov
or
ror
mov
add
out
outs
or
stc
aas
gs
pop
lods
mov
jecxz
xor
mov
icebp
jo
inc
xchg
popf
add
mov
and
xlat
repz
push
sub
rcl
fistp
sbb
mov
sub
ss
int3
cmps
leave
retw
sub
mov
adc
imul
add
test
adc
push
dec
sub
mov
sbb
aaa
call
push
sub
sub
mov
stos
jo
xchg
aas
daa
sbb
sub
(bad)
sub
movs
jnp
xchg
mov
add
fs
shl
pop
fst
push
(bad)
retf
lea
inc
lock
xchg
cwde
es
sbb
lods
mov
and
jbe
jmp
test
popa
cmp
mov
xor
arpl
xchg
mov
loope
imul
out
dec
ds
adc
mov
rcr
mov
mov
sbb
clc
sub
imul
(bad)
sbb
xlat
retf
adc
adc
mul
adc
sbb
repz
pop
fwait
es
push
test
push
movs
xchg
stos
dec
mov
mov
loopne
xor
sub
mov
adc
push
or
jmp
jge
adc
xchg
or
jg
sub
mov
mov
sbb
pop
in
push
inc
mov
stos
xor
xchg
bound
daa
cmp
jmp
jo
mov
sahf
xchg
lds
cwde
gs
push
pop
les
inc
xlat
sbb
into
hlt
mov
jnp
mov
cmp
add
fisub
pop
pop
and
sar
enter
cmps
pop
bound
mov
ror
jge
pop
xor
stos
dec
lea
pusha
call
out
mov
clc
lea
dec
pop
inc
out
addr16
mov
popa
add
mov
test
sti
mov
xchg
pushf
imul
pop
dec
xor
xchg
inc
sbb
jno
xchg
add
push
push
or
pop
push
in
retf
jbe
shl
inc
push
loope
repz
mul
outs
mov
pop
sahf
movs
or
je
xor
aaa
lea
add
inc
push
ret
stc
cmp
jae
fst
out
aas
ss
jnp
or
or
hlt
xchg
pop
in
sbb
adc
test
adc
lea
jnp
fwait
in
in
loopne
mov
push
xor
push
mov
sub
dec
fisttp
inc
hlt
fcomi
fadd
out
sub
ins
inc
dec
and
int3
sbb
xor
leave
jmp
push
and
add
pop
scas
sbb
idiv
xchg
push
ret
test
and
cdq
ret
xlat
adc
rcl
add
aad
jg
jno
test
mov
repz
test
aaa
lds
hlt
add
or
dec
stc
js
sub
sub
mov
pop
pop
in
rcl
push
in
daa
inc
add
scas
jns
imul
fimul
std
sbb
call
cmps
inc
out
enter
test
aaa
mov
punpcklbw
pop
push
fwait
dec
mov
mov
inc
cmp
mov
sub
jle
xchg
jno
into
jnp
retf
imul
(bad)
push
mov
xor
sub
ret
push
aad
ror
sbb
dec
lock
(bad)
jmp
sar
xor
je
repnz
or
lea
and
and
adc
or
call
loopne
test
out
cs
or
pop
pop
mov
in
mov
xchg
cmps
mov
pop
and
mov
cld
neg
leave
jnp
adc
mov
(bad)
add
call
jge
pop
or
repz
(bad)
jns
inc
jp
mov
shl
adc
shl
mov
das
fisub
imul
out
pushf
dec
and
mov
ret
iret
xor
cmp
scas
xor
or
outs
div
or
cmp
xor
mov
mov
push
call
(bad)
icebp
(bad)
(bad)
gs
ins
retf
ret
push
faddp
xchg
data16
and
aaa
xor
inc
aaa
add
push
xor
cmp
inc
xor
bound
mov
les
add
cwde
loop
xchg
cdq
mov
icebp
mov
(bad)
nop
mov
sbb
inc
mov
dec
mov
mov
js
dec
cmp
outs
xor
xor
out
push
pop
inc
and
gs
es
and
out
cmp
xchg
scas
or
ss
push
ret
and
mov
out
fisubr
pop
xchg
add
pop
pop
mov
push
movs
or
pop
fdivr
in
retf
sahf
fucomp
daa
mov
push
ret
inc
adc
ret
and
mov
sub
adc
dec
sbb
dec
mov
lods
(bad)
out
ja
loopne
xchg
push
fs
call
mov
nop
(bad)
imul
jns
mov
leave
inc
aaa
mov
(bad)
xor
pop
pop
or
lods
lods
lahf
pop
mov
fimul
out
enter
pop
repz
xchg
je
outs
sub
out
pop
xor
in
loopne
adc
outs
jns
cmp
push
in
cdq
inc
fdivr
fdivr
js
sar
inc
fwait
gs
arpl
mov
push
mov
xor
push
and
and
jbe
aad
add
pop
pop
push
cs
imul
mov
push
jnp
mov
sar
scas
inc
jp
repnz
cmps
ja
arpl
jns
outs
mov
add
jns
jo
gs
dec
test
js
adc
inc
rol
arpl
xor
test
rcl
pop
into
call
or
xchg
lods
(bad)
xchg
inc
js
das
pop
add
mov
fist
les
movs
cmps
add
jbe
mov
cli
xchg
cmc
leave
movs
cmp
jbe
cli
cdq
and
sbb
sbb
call
aad
gs
sub
or
xor
push
inc
ret
rcr
in
push
fimul
add
jl
cmp
cmp
cdq
mov
pop
push
(bad)
ins
dec
lock
int
mov
cs
push
lods
and
int
sbb
pop
(bad)
push
pop
mov
or
in
jl
push
jmp
or
dec
push
sbb
(bad)
xchg
fdiv
(bad)
adc
xchg
jb
(bad)
push
cs
fs
inc
iret
fidiv
sbb
scas
sub
push
xor
call
out
xchg
push
jns
pushf
xchg
jb
and
dec
mov
pop
pop
movs
inc
jo
or
(bad)
cmp
in
and
sar
xlat
into
or
sub
pushf
jle
push
(bad)
call
jbe
das
jnp
dec
inc
popa
cmp
jl
add
lods
cmps
or
dec
(bad)
inc
mov
xlat
imul
jge
mov
jp
xchg
rol
sbb
lods
int3
push
daa
out
jp
fcomp
xchg
ja
lds
inc
jns
xor
test
jge
lea
adc
pop
dec
aam
push
jne
cdq
xor
lock
or
mov
jns
jl
outs
add
scas
push
add
cmps
int3
paddb
arpl
fild
js
adc
aam
push
mov
lea
popa
dec
ins
hlt
pop
repnz
adc
test
jmp
push
add
js
xchg
addr16
xchg
jp
jbe
shl
loopne
(bad)
fldcw
or
dec
add
out
sub
or
mov
jge
jg
js
adc
and
mov
ja
cli
je
inc
pushf
imul
dec
int3
sub
mov
push
pop
xor
or
icebp
mov
daa
(bad)
sbb
nop
adc
je
jno
xchg
test
imul
fsubr
sbb
pop
mov
and
jge
jmp
cmp
test
cmc
out
cmp
iret
icebp
ins
test
bnd
ds
dec
inc
cld
std
nop
jmp
xlat
jnp
push
out
pop
dec
inc
leave
fcomp
das
adc
fxch
loop
or
xchg
jle
mov
iret
(bad)
push
pop
call
stc
sahf
cmp
and
xchg
dec
shl
popf
push
sbb
cmp
js
xchg
das
sub
dec
es
sub
idiv
jle
popf
dec
ficomp
pop
int3
ret
adc
jne
pop
retf
sbb
sahf
push
mov
sti
adc
data16
cmp
(bad)
(bad)
push
in
and
(bad)
mov
and
out
fst
lods
sti
cmp
inc
sub
neg
test
aad
inc
cli
in
addr16
sbb
test
jne
into
mov
out
imul
xchg
mov
xchg
pextrw
mov
cmp
cmp
or
jmp
hlt
xchg
jg
cmps
jns
pop
or
gs
jbe
iret
repz
lods
aas
repz
mov
cmps
cwde
ret
fwait
pop
imul
clc
pop
mov
stc
(bad)
push
test
call
stos
lds
sahf
and
in
daa
shr
add
push
shr
or
adc
ret
lahf
hlt
cmp
cmc
or
clc
(bad)
fiadd
cld
stos
push
sbb
mov
jns
mov
aaa
ror
retf
jmp
cmps
retf
pop
mov
addr16
xor
jmp
mov
adc
ins
ror
cmp
mov
fcmove
xchg
enter
xchg
mov
imul
ficom
or
into
pop
fisubr
out
ficom
dec
call
or
and
and
jp
lods
setg
lds
xor
sar
ror
popa
out
fistp
pop
stc
dec
mov
push
cmps
mov
sub
push
cli
out
fwait
ins
cmp
xor
push
mov
fcomi
and
retf
cmps
cmc
fnstsw
imul
pop
outs
int3
cld
ja
imul
(bad)
jp
(bad)
pause
imul
sbb
push
dec
mov
mov
fidiv
pop
cmps
add
xchg
xlat
fisubr
fistp
rcl
(bad)
vpmaddwd
cmps
xlat
xchg
outs
fxtract
lahf
mov
ret
mov
addr16
xor
push
or
add
lods
push
das
xor
cmp
and
pop
int
cmp
jle
stos
mov
fbld
jne
push
pcmpeqb
push
add
mov
mov
mov
ss
or
or
in
fisubr
test
rol
(bad)
pop
loop
fld
int
add
xor
sbb
cmp
xor
int3
das
and
sbb
nop
retf
sub
int
mov
inc
fisub
in
(bad)
or
jp
sbb
or
fs
iret
lea
call
push
push
(bad)
div
fst
dec
fsubr
fwait
push
fcomip
repnz
jmp
dec
or
jecxz
xchg
test
dec
lahf
jl
pop
aaa
movs
or
lods
fdivr
dec
hlt
icebp
push
nop
add
mov
test
in
mov
sub
aad
cmp
mov
add
lahf
sbb
mov
xor
popa
shl
mov
in
int
movs
test
ror
inc
(bad)
xchg
xchg
cmp
xchg
cmc
lds
sbb
cmps
inc
nop
or
and
icebp
sub
cmp
icebp
push
adc
pop
mov
pushf
imul
(bad)
shr
jo
xchg
xor
shl
aaa
out
sbb
daa
shl
leave
out
push
or
inc
retf
stos
sar
lock
jns
pop
sbb
add
and
sub
jp
push
push
data16
dec
into
loope
mov
rol
cmp
movs
aad
or
pop
fld
loope
mov
jmp
jg
pop
aam
inc
sbb
or
call
outs
sbb
aas
pop
pop
push
dec
ret
clc
xchg
(bad)
adc
inc
push
adc
mov
imul
cmp
mov
int3
repz
fimul
pop
pop
inc
das
mov
pop
mov
push
jae
mov
or
jl
call
inc
lods
call
or
cmps
enter
jmp
pop
hlt
stc
in
mov
pop
out
mov
and
icebp
sbb
cdq
das
int3
stc
xlat
push
and
mov
and
stos
sbb
in
rcl
add
outs
imul
mov
xchg
rcr
cmp
retf
(bad)
mov
fadd
or
test
in
loop
inc
mov
push
push
mov
ja
test
xlat
in
add
sbb
icebp
gs
or
mov
fwait
scas
dec
jecxz
xchg
pop
fnsave
mov
rcr
fmulp
fisubr
jl
ins
and
sub
pop
mov
push
call
cmp
ins
arpl
loopne
fistp
in
popa
fisttp
sub
ror
and
jmp
fstp
push
bound
xor
shl
jle
and
push
or
sar
cwde
add
cmc
adc
sub
push
push
adc
movs
daa
jns
xor
in
(bad)
and
dec
and
inc
shr
iret
les
mov
or
fld
bound
hlt
mov
jg
ret
sub
pop
gs
inc
mov
shl
mov
adc
add
xchg
fcmove
call
mov
(bad)
mov
xchg
dec
push
sbb
push
out
(bad)
mov
ss
dec
dec
mov
cdq
or
mov
addr16
push
out
hlt
loope
jecxz
ret
outs
fimul
shl
(bad)
fsubr
mov
repnz
(bad)
jg
inc
loope
inc
jae
push
imul
sub
stos
inc
push
cs
mov
loopne
jbe
in
ror
loope
stos
cmc
mov
stos
stos
pop
or
(bad)
aam
test
out
lods
lock
loop
jl
xchg
adc
fstp
leave
into
pop
xchg
stos
aam
dec
(bad)
retf
in
xchg
cdq
iret
push
stos
enter
retf
pusha
mov
or
mov
in
mov
lods
mov
sub
pop
repz
dec
fnsave
sub
ins
add
pop
dec
cmp
rcl
cmc
adc
dec
or
icebp
cdq
add
dec
mov
cmp
add
add
or
cmc
pop
outs
pop
jne
cmp
test
push
pop
sub
sbb
fs
add
xchg
inc
arpl
xor
adc
ret
pop
pop
div
push
popf
adc
mov
mov
jns
inc
mov
mov
adc
mov
mov
sub
inc
sahf
or
rcr
xchg
pushf
mov
xchg
push
ins
pop
dec
xor
(bad)
jle
dec
jne
leave
shr
mov
inc
out
push
mov
es
add
aaa
push
std
add
adc
loope
lock
cmp
sbb
lds
jb
les
dec
pop
test
adc
jmp
pop
adc
and
add
ja
ret
add
mov
and
jno
jnp
add
jne
es
iret
retf
out
jne
fwait
imul
int
and
push
push
shr
dec
shr
mov
jb
mov
stos
test
mov
ds
loopne
jae
sar
rol
aas
xor
idiv
sbb
cmp
aas
push
cwde
mov
mov
mov
loop
or
nop
mov
jns
sbb
adc
mov
stos
in
cld
mov
inc
cmp
rcr
sbb
push
das
jo
adc
fdivr
fwait
cmp
push
adc
xor
xlat
ret
fisubr
lds
add
xchg
cmova
cmp
iret
(bad)
out
jle
sub
rcl
pop
push
adc
dec
mov
mov
mov
xor
icebp
ins
pop
add
push
ss
aad
fdiv
outs
mov
pop
pop
jle
dec
aam
iret
(bad)
pop
cmp
test
loope
sbb
adc
jge
aad
and
or
(bad)
repz
jne
add
fadd
aaa
stos
es
ret
or
mov
pusha
xchg
jmp
imul
mov
pop
xchg
jae
add
test
gs
out
mov
test
cmps
shl
and
cmp
xchg
movs
dec
sbb
inc
mov
bound
in
pop
sti
add
inc
mov
cmp
push
mov
adc
jnp
mov
call
xchg
sbb
ins
xchg
ja
aas
xchg
out
dec
push
leave
cdq
xor
iret
fs
adc
mov
scas
inc
int3
mov
pop
mov
clc
push
pusha
cwde
fist
jnp
mov
inc
ins
pop
sbb
mov
in
pop
xchg
fld
mov
push
shr
cli
sbb
or
stos
xchg
push
loopne
fcmovne
mov
popa
mov
(bad)
mov
cld
push
popf
pop
fisub
pop
cmp
push
int3
loop
mov
pop
test
data16
not
enter
fistp
pop
scas
mov
push
and
add
sub
dec
shr
dec
lds
call
mov
test
inc
sub
fbld
mov
mov
inc
out
jmp
adc
pop
aad
in
mov
cmp
es
jb
loope
jno
movs
pop
mov
dec
inc
sub
mov
loop
xchg
outs
xchg
test
jl
push
adc
cli
xor
outs
add
lods
inc
jg
jp
call
dec
movs
or
(bad)
into
cmp
or
cmp
leave
call
inc
jecxz
push
mov
jmp
sti
retf
retf
sub
jge
mov
out
(bad)
jo
jge
pop
dec
push
mov
cdq
add
xchg
add
fstp
and
or
test
jp
push
and
adc
sbb
dec
out
or
repnz
xchg
shr
ja
add
mov
sub
and
sahf
push
sbb
mov
mov
xchg
pop
dec
mov
cmp
test
dec
sahf
ja
fild
lods
in
rcr
inc
or
push
xor
xchg
and
mov
js
add
cdq
test
bound
fcomp
dec
imul
lock
jb
push
push
sub
push
or
xchg
sbb
cmp
test
jmp
imul
iret
push
in
pop
mov
(bad)
or
cmc
and
xchg
stos
cmp
js
jbe
mov
into
or
jecxz
push
adc
inc
cs
imul
xor
and
mov
out
mov
mov
mov
dec
loopne
hlt
ret
rcl
lds
ret
fwait
ds
dec
mov
mov
and
mov
adc
xchg
call
dec
ret
(bad)
int
mov
and
adc
sbb
(bad)
adc
dec
(bad)
lea
sub
in
push
dec
sar
jg
or
scas
movs
cs
in
adc
ret
(bad)
fisttp
out
jae
sub
fwait
pop
push
popa
imul
mov
pop
shl
push
jmp
and
lea
movs
pop
mov
cdq
xchg
jb
outs
(bad)
mov
xchg
push
adc
lods
js
fnsave
inc
aas
stc
enter
mov
push
out
pop
stos
pop
dec
ins
out
cmps
lds
repnz
js
imul
test
scas
xchg
test
xor
pop
push
pop
cmp
mov
or
mov
int
pop
mov
xchg
shr
pop
(bad)
jge
je
aam
ffree
call
jge
out
ss
outs
adc
fcomp
fist
jecxz
mov
push
ret
es
js
adc
mov
cli
inc
ins
ret
test
out
lods
fadd
adc
std
mov
xor
outs
adc
ror
shl
mov
mov
push
xchg
cmp
sahf
test
js
pop
and
cs
cmp
and
cmp
add
inc
or
cmp
mov
sti
(bad)
lods
rsm
cdq
stc
aaa
out
dec
lods
lods
(bad)
aam
loopne
mov
dec
xlat
or
test
aaa
mov
pop
push
addr16
fldenv
dec
daa
sbb
sbb
retf
mov
add
pop
icebp
mov
sub
mov
push
mov
aas
stc
fistp
test
(bad)
outs
and
adc
mul
jne
clc
dec
hlt
cmp
cmp
mov
jae
shl
ins
pop
and
pop
and
mov
add
add
in
mov
mov
adc
push
dec
sbb
xor
ror
and
xor
stos
ror
aaa
inc
sbb
es
shr
jns
push
loop
adc
xor
aam
out
and
(bad)
retf
cmp
aam
aad
(bad)
or
test
daa
lods
call
out
mov
shr
inc
and
cmps
iret
jb
dec
rcr
out
iret
or
push
pop
push
xchg
icebp
dec
shl
mov
jo
jmp
mov
mov
out
ja
mov
or
test
std
nop
mov
loope
xor
xchg
test
(bad)
out
inc
mov
out
es
add
das
not
clc
xchg
ror
cmps
sahf
cmps
or
push
popa
popf
mov
pop
xchg
xor
sbb
mov
xor
add
hlt
lahf
inc
inc
and
adc
stc
out
jecxz
inc
aad
xor
int
fsub
aad
shr
nop
je
mov
popf
mov
jg
leave
xor
(bad)
repz
mov
xor
xor
mov
cmp
jge
scas
lods
cmc
push
dec
or
push
ficomp
push
add
lahf
cdq
div
fstp
mov
inc
popf
push
sar
shl
shr
ins
sbb
sub
mov
mov
inc
bound
mov
xor
mov
imul
pop
pop
push
xor
push
pusha
data16
inc
sub
into
in
xor
test
cmc
inc
cmp
jae
mov
sbb
into
sub
xor
push
push
(bad)
push
dec
push
bound
movs
out
add
mov
out
cmp
dec
pop
sub
leave
pop
aas
mov
outs
push
mov
mov
jmp
hlt
jo
popa
call
jg
jp
aam
ss
repz
add
sub
adc
inc
retf
data16
fsub
ins
cld
jge
sbb
outs
or
adc
adc
call
idiv
lds
outs
adc
push
dec
js
and
cwde
or
call
pop
sub
les
pop
nop
stc
sbb
mov
call
fidiv
xor
(bad)
mov
adc
jno
test
xchg
(bad)
inc
jnp
jl
dec
aas
int
das
(bad)
or
push
stos
and
loop
repz
pop
outs
test
aam
out
push
scas
dec
movs
mov
imul
inc
mov
xlat
jno
pop
mov
and
mov
fstp
fiadd
shl
pop
inc
sti
mov
icebp
aam
cmp
push
aam
ror
push
dec
fisubr
xor
aaa
and
mov
or
in
fimul
push
aam
clc
inc
(bad)
leave
mov
lock
xor
dec
or
stos
mov
cs
mov
test
(bad)
dec
ret
sub
or
movs
add
mov
and
call
ja
aas
jge
and
fs
mov
cmp
jae
and
xor
push
or
mov
sub
inc
test
jecxz
(bad)
pop
jne
cmps
ret
jecxz
jl
push
sti
add
pop
push
mov
pop
fucomip
jo
cld
(bad)
mov
dec
scas
jo
xchg
test
rep
pop
mov
mov
in
dec
add
es
push
aas
fs
inc
mov
lods
xchg
adc
ret
(bad)
sub
ins
ret
arpl
rcl
dec
jg
rol
xlat
cdq
push
js
arpl
mov
inc
xor
cli
jmp
jge
push
ds
xchg
daa
ja
jnp
jnp
sub
dec
push
and
lahf
ret
add
stos
mov
adc
icebp
mov
(bad)
enter
inc
mov
dec
or
mov
dec
dec
pop
les
movs
sbb
shl
ret
jno
push
repz
jnp
mov
xlat
mov
daa
call
(bad)
xchg
cdq
aad
or
inc
dec
data16
popf
out
aad
pop
stc
not
jl
xor
test
es
cmp
inc
ror
sbb
pop
jmp
pop
fwait
jne
(bad)
sub
sub
mov
or
sti
imul
sub
out
in
(bad)
inc
push
sbb
sub
mov
xchg
enter
cmp
out
arpl
seto
repnz
and
popa
mov
add
mov
inc
mov
adc
dec
dec
in
or
jne
inc
std
pop
inc
mov
sbb
mov
push
js
xlat
call
test
adc
clc
inc
xor
cmps
rcr
dec
enter
stos
scas
lods
dec
adc
jecxz
pop
and
aam
push
enter
cmp
repnz
and
jae
inc
pushf
pop
scas
adc
cmp
xchg
push
bswap
fcomp
imul
rcr
pop
push
int3
xor
idiv
pop
sbb
sbb
loop
test
mov
pop
dec
mov
add
xchg
and
jbe
mov
int
mov
mov
mov
mov
retf
pop
pop
sub
mov
and
popa
jge
sub
add
adc
jge
sbb
pop
repz
test
push
mov
pusha
fwait
in
sbb
shl
mov
and
mov
lods
mov
movs
xchg
pop
jnp
stc
adc
jb
cli
ins
(bad)
es
xor
xor
lock
shr
lods
ins
outs
stos
das
dec
sub
jle
xchg
pop
stos
add
(bad)
jmp
(bad)
mov
jmp
pop
nop
out
jb
movs
dec
scas
test
dec
pusha
jae
fsubrp
loope
xchg
test
fstp
test
mov
mov
mov
sbb
cwde
xchg
dec
fiadd
cmp
loope
sbb
addr16
repnz
arpl
sahf
(bad)
cld
(bad)
mov
(bad)
out
fnstsw
xchg
jmp
push
(bad)
mov
test
sbb
test
xor
sar
call
jge
lds
dec
sbb
lods
iret
gs
loop
or
pop
sbb
or
out
popa
xchg
stos
push
jmp
pop
mov
add
jge
fs
sub
and
mov
cmps
inc
xor
mov
mov
mov
arpl
cmp
xchg
fs
(bad)
in
shl
xor
lds
cmp
jb
out
outs
jmp
fst
and
mov
(bad)
iret
mov
jp
bound
ror
sti
push
sbb
sub
xchg
xchg
and
and
push
(bad)
push
adc
data16
ja
jae
loop
adc
outs
lods
or
std
mov
xor
repz
xchg
dec
adc
je
mov
or
in
mov
scas
pop
xor
cmc
shr
fnsave
xor
sub
cli
cmps
movs
(bad)
in
mov
cmp
sti
jnp
mov
sbb
dec
(bad)
jno
mov
jno
ficomp
dec
retf
push
in
(bad)
cmp
mov
add
mov
sbb
mov
test
and
frstor
fisttp
stos
dec
rcl
ins
adc
(bad)
jmp
mov
cwde
fnop
pop
enter
pop
sub
mov
cld
in
das
aad
mov
ja
iret
xchg
sub
pop
pushf
jl
add
mov
sub
pop
nop
inc
cli
out
and
pop
sar
push
shl
sub
or
mov
js
add
cmp
or
pop
xchg
adc
aad
pop
loop
xor
sbb
int3
cmp
sub
icebp
mov
leave
and
jno
or
lahf
mov
jae
aam
shr
(bad)
sbb
jo
xlat
sbb
loop
jg
jae
push
jl
inc
jmp
ret
cdq
les
push
int
repz
mov
adc
push
push
inc
jmp
add
jg
cmp
fist
in
in
lock
ret
lods
and
test
pop
mov
sbb
fadd
add
sti
fisttp
imul
mov
mov
cli
call
stos
or
imul
ins
popf
xchg
cmp
xchg
push
in
inc
in
retf
xor
mov
push
jp
and
mov
push
sbb
imul
aad
out
add
jmp
mov
das
push
div
mov
mov
fwait
xor
daa
into
fldenv
rol
mov
adc
or
xchg
aad
add
mov
jg
in
leave
sub
pop
ins
mov
icebp
push
and
jno
jnp
cmp
jne
js
daa
pop
mov
xchg
(bad)
jbe
sti
and
test
mov
xchg
lahf
push
xchg
repnz
(bad)
aam
std
es
into
add
xor
or
mov
cmps
(bad)
mov
aaa
iret
popf
cmc
mov
mov
aas
jae
scas
test
stos
sbb
mov
adc
sti
xchg
pop
ja
rol
in
popa
and
bound
fild
scas
cmp
adc
mov
test
stc
lds
push
leave
je
xchg
aad
adc
mov
sbb
sub
dec
adc
sbb
or
cmp
loopne
mov
jp
iret
add
cmc
out
sbb
(bad)
in
fadd
inc
retf
or
and
adc
jp
cmp
sti
in
pop
mov
lea
fnstenv
stc
lds
movs
or
into
test
(bad)
cmps
aaa
jno
lock
in
inc
mov
scas
xchg
pop
icebp
aaa
pop
es
adc
add
aad
xlat
mov
push
inc
push
add
mov
repz
ret
int3
push
pop
cmp
std
mov
mov
shl
fiadd
and
jo
jl
or
(bad)
ja
mov
push
cld
add
jmp
add
adc
mov
push
xor
retf
adc
ja
loop
mov
fdiv
jmp
ins
(bad)
xchg
mov
in
mov
pop
and
pop
gs
add
push
enter
fmul
and
(bad)
retf
push
lock
std
(bad)
jmp
repz
pop
lds
jecxz
adc
sub
leave
inc
mov
jg
fdivr
hlt
xor
and
mov
mov
iret
xchg
cwde
push
sub
inc
fcom
mov
mov
or
inc
and
pop
stos
in
adc
jp
and
std
dec
fucomp
mov
jo
call
int
mov
mov
cmp
stos
and
inc
icebp
ds
sub
push
dec
enter
mov
add
or
push
paddb
std
(bad)
mov
mov
push
add
push
out
aam
dec
mov
lods
mov
and
cmc
cmp
pop
xor
cmp
pusha
jbe
js
ins
mov
aas
pop
jo
enter
add
out
jmp
cmp
(bad)
sti
cmp
push
xor
(bad)
std
and
mov
jnp
inc
pop
sbb
push
call
mov
push
cmps
jecxz
sub
push
inc
clc
push
mov
pop
and
cld
jp
out
jb
or
adc
jl
or
and
lea
cdq
mov
ins
daa
fwait
jno
push
add
mov
xor
cmp
movs
xchg
sbb
inc
test
repnz
push
sub
(bad)
lock
out
jg
xchg
movs
push
daa
ficomp
push
(bad)
mov
scas
retf
add
outs
in
push
sahf
jecxz
out
add
in
inc
inc
sbb
faddp
call
adc
add
call
jmp
int
cmps
mov
sub
inc
inc
jmp
inc
sti
ror
pop
inc
pop
mov
dec
test
inc
mov
mov
icebp
sub
call
mov
xor
mov
pushf
(bad)
adc
and
xchg
cmp
ret
imul
(bad)
pop
bound
xor
shr
push
cli
iret
popf
mov
icebp
mov
ret
mov
fisubr
sub
adc
inc
ret
adc
inc
int3
aam
fisubr
push
xchg
xchg
outs
fcomp
dec
ins
mov
pop
cmp
and
pusha
mov
lock
out
(bad)
or
jp
pop
xor
dec
outs
stos
add
pop
fistp
push
sti
ret
push
pop
out
jns
dec
stc
xchg
fnstcw
xchg
jmp
pop
xchg
or
jae
xor
add
jl
loopne
sub
xlat
retf
and
sbb
dec
jg
cmp
or
mov
or
xor
sub
stos
(bad)
adc
pop
pop
dec
fs
ins
test
popa
shl
ds
(bad)
out
sub
xchg
adc
mov
in
cmp
test
mov
sti
or
cmp
cs
repz
push
fimul
mov
or
mov
jnp
fnstenv
cmps
mov
mov
retf
fisubr
cmc
mov
mov
lahf
clc
sbb
pop
mov
cmp
lea
jmp
fisub
mov
xchg
cmps
pop
jmp
out
jecxz
xchg
movs
outs
mov
xchg
dec
dec
mov
stos
sahf
fs
xor
jae
and
fs
adc
or
mov
das
lds
push
fbld
mov
pop
dec
test
(bad)
pop
dec
xor
push
xor
cmp
js
lds
push
adc
and
sahf
dec
mov
pextrw
ins
dec
xor
loop
aaa
jbe
mov
test
cwde
cmp
hlt
out
pop
shr
mov
xchg
bound
cli
mov
pop
retf
xchg
mov
loopne
pop
in
sbb
mov
add
add
push
lods
cmps
imul
add
fmul
fwait
nop
in
pop
mov
sbb
mov
inc
sbb
adc
sbb
ret
xchg
enter
je
(bad)
sub
sti
sbb
xchg
outs
and
jg
imul
sub
mov
push
gs
fmul
mov
lahf
dec
popf
jae
sti
scas
add
jns
xor
xor
lods
test
jmp
xlat
retf
mov
pop
ds
ds
outs
in
dec
or
xor
push
mov
fbld
ror
mov
shr
mov
loopne
pop
cwde
mov
pop
addr16
cmc
shl
clc
das
mov
adc
outs
jnp
pop
inc
jb
xor
es
jno
nop
repnz
xchg
test
sti
push
add
push
mov
adc
out
dec
or
add
call
cmp
jmp
test
dec
popfw
sar
dec
aad
or
push
xchg
rcr
pop
add
js
shr
cmp
mov
(bad)
mov
repz
mov
xchg
hlt
retf
stos
icebp
test
xchg
add
test
sbb
nop
pop
imul
xor
fwait
dec
ret
dec
dec
rcl
push
lock
(bad)
mov
cmp
jmp
outs
outs
adc
icebp
sub
or
cmp
push
fmul
xchg
xor
je
sbb
neg
mov
mov
iret
xchg
xchg
(bad)
add
add
icebp
or
aas
scas
ds
mov
cs
inc
out
pop
fstp
cmp
(bad)
and
sub
and
ret
sti
call
adc
jg
cdq
and
je
movs
jmp
cmp
inc
lods
js
test
jo
repz
pop
stc
test
call
loop
or
call
push
mov
add
test
fstp
cmp
adc
out
or
xchg
add
mov
fcmovu
enter
mov
dec
add
push
adc
sti
xor
cmp
dec
adc
jg
hlt
push
(bad)
pop
dec
xlat
movs
push
mov
lods
loop
sbb
dec
jnp
arpl
push
ja
ret
add
in
rol
or
stc
inc
jmp
dec
rol
and
(bad)
jecxz
push
js
lock
pop
mov
pop
push
push
sub
leave
retf
call
adc
ja
push
inc
cmp
sub
test
outs
jl
mov
cmp
call
dec
lods
dec
(bad)
neg
pusha
ins
leave
cmp
je
pop
sub
sub
inc
out
inc
jns
push
sbb
nop
mov
bound
nop
sbb
mov
pop
(bad)
fist
mov
ror
pop
cld
rol
adc
push
push
rcr
test
icebp
xor
out
aaa
cld
out
rol
ror
ja
sti
push
fimul
mov
ins
outs
cmp
leave
sub
cmp
mov
jbe
xor
xor
mov
xchg
sub
fidiv
xchg
jnp
inc
lods
scas
cmc
dec
xor
clc
std
xor
and
push
jmp
add
inc
adc
xor
les
pop
std
sbb
push
sub
adc
lods
or
inc
fwait
add
arpl
faddp
inc
(bad)
int3
fcom
xor
mov
jo
cmp
or
inc
pop
ret
and
std
pop
bound
add
out
pusha
hlt
lods
out
inc
mov
xor
mov
int3
push
sahf
adc
mov
ficomp
clc
xchg
daa
pusha
adc
bound
dec
pushf
call
jbe
icebp
mov
call
leave
sbb
sub
(bad)
cmps
(bad)
push
dec
sar
dec
icebp
(bad)
loop
hlt
movs
aad
push
push
pusha
or
nop
and
jmp
or
mov
rcr
pop
jno
jmp
sub
add
sbb
cmp
ret
mov
ds
(bad)
idiv
repz
cmp
out
mov
jmp
jno
imul
jo
mov
jp
push
cmps
dec
scas
push
fwait
idiv
adc
dec
call
xchg
stos
xor
jecxz
fnclex
and
dec
cmp
out
mov
mov
adc
(bad)
fist
xchg
aad
dec
xchg
pop
push
mov
clc
div
out
jmp
hlt
int3
or
das
fs
mov
xor
mov
or
dec
cmp
cmp
push
(bad)
adc
ins
xchg
pop
pop
jbe
jb
ret
outs
movs
fsub
add
and
ss
xor
xor
or
int3
mov
xor
jle
cmc
adc
xchg
jae
sbb
inc
jp
mov
(bad)
fs
cmps
pop
test
cmps
idiv
cmp
loopne
mov
fsin
rol
push
adc
loope
mov
je
ret
ficom
push
inc
and
retf
out
std
aas
mov
push
(bad)
(bad)
ins
popa
inc
sbb
(bad)
(bad)
push
out
lock
test
mov
jecxz
(bad)
lea
movs
rol
dec
inc
xchg
xor
in
fistp
mov
leave
arpl
inc
pop
dec
stos
and
pop
js
jb
cmp
mov
and
mov
call
mov
or
scas
add
jl
test
scas
add
js
enter
hlt
out
mov
lods
dec
xchg
fld
jns
ds
pop
mov
outs
sub
ss
call
adc
pop
popa
cmp
cmp
pop
mov
xchg
pusha
xchg
jo
xchg
arpl
enter
(bad)
push
mov
fiadd
and
pop
je
stos
push
pushf
test
mov
mov
dec
(bad)
lods
stc
stos
lods
dec
into
fadd
jge
push
and
je
imul
ss
add
pop
jle
or
in
ja
jecxz
scas
xor
cli
and
inc
jbe
xor
pop
lods
cmc
inc
ret
jne
pop
shl
je
je
fldenv
xchg
pop
or
sub
adc
mov
lea
mov
or
imul
mov
mov
xchg
pop
pop
dec
ss
jnp
fild
xor
add
ret
sub
std
fcomp
inc
dec
dec
push
rcl
test
and
call
out
add
xor
out
push
ds
pop
inc
daa
or
aas
cmp
pop
pop
jmp
push
sbb
push
out
dec
imul
sti
or
aas
xor
icebp
mov
sub
push
xor
dec
mov
dec
loopne
or
adc
xor
scas
lahf
retf
or
test
in
jl
adc
dec
cmc
dec
fnstcw
shl
push
call
aad
cmp
(bad)
pop
sahf
imul
inc
adc
shr
sbb
push
outs
pop
aaa
adc
or
pop
jmp
jg
mov
xor
addr16
mov
pusha
mov
ins
jle
aad
push
sar
pop
xor
leave
xchg
pop
pushf
xchg
imul
pop
push
fcmovnbe
cmps
xchg
xor
das
dec
fcomi
cmp
or
xchg
xchg
jbe
leave
or
in
and
bound
fiadd
jns
scas
push
push
stos
imul
jo
push
bound
add
adc
mov
call
neg
xchg
sahf
dec
pop
int
sub
inc
adc
fild
pop
pop
cmp
frstor
mov
add
adc
sub
out
jmp
gs
pop
cmp
aas
xor
iret
xor
inc
(bad)
leave
aas
scas
in
adc
xor
jno
push
pop
adc
mov
rcl
or
cmp
pop
mov
or
bound
or
mov
loopne
mov
mov
xchg
int3
shl
or
add
out
pop
cmp
add
(bad)
jne
mov
int
leave
pop
cld
into
jno
sub
mov
sbb
arpl
idiv
push
push
xchg
pop
(bad)
js
mov
push
mov
push
mov
fisttp
loope
or
xchg
movs
dec
jo
inc
mov
imul
stos
sbb
add
loope
cmp
pop
jns
xor
leave
arpl
das
pop
js
and
mov
adc
jb
(bad)
fstp
fiadd
cmp
add
ins
push
sub
cli
ror
jae
adc
(bad)
test
mov
movs
imul
pop
scas
pop
aad
scas
(bad)
mov
bound
sub
iret
inc
ret
mov
jb
(bad)
int
cmps
jnp
add
cmp
mov
in
push
fdivp
xchg
fmul
push
xor
(bad)
je
sub
sbb
dec
add
jecxz
xchg
push
cmp
mov
fcmovne
outs
shl
retf
outs
pop
add
push
outs
sub
mov
dec
mov
sub
(bad)
cmp
sbb
pusha
fs
cmps
lea
pop
mov
fnsave
cmp
push
test
sub
mov
iret
fnstsw
jnp
sbb
xchg
cs
mov
(bad)
lods
dec
icebp
cld
and
lods
sbb
mov
and
sub
adc
xchg
test
repz
das
and
lds
jo
cdq
movs
sahf
fnstsw
and
xchg
xlat
sub
(bad)
mov
arpl
mov
sti
test
nop
popf
(bad)
out
call
sar
adc
push
(bad)
mov
mov
retf
cwde
test
mov
jno
out
(bad)
int3
popa
sub
sub
(bad)
fwait
into
dec
dec
ret
pop
add
dec
jmp
or
test
(bad)
not
sub
xchg
div
sbb
daa
js
mov
push
add
push
adc
mov
stc
sti
dec
jb
fimul
sar
or
pop
mov
dec
sbb
cmp
out
add
out
add
pop
or
stos
sbb
sub
mov
imul
push
and
hlt
popf
pop
or
sbb
pushf
pop
push
ins
xchg
dec
in
loope
sbb
and
nop
push
pop
fst
rcr
add
mov
sahf
push
mov
jns
movs
sub
movs
call
adc
xchg
dec
push
aas
mov
mov
inc
in
retf
pushf
and
cmp
xchg
xor
cmp
mov
and
push
leave
dec
bswap
movs
or
fistp
inc
mov
icebp
stos
mov
sub
ficom
xor
cmps
test
ds
xchg
popa
push
pop
mov
xor
shr
pop
pop
aaa
fisttp
pushf
xor
push
and
dec
pop
movs
push
xchg
or
loope
in
arpl
adc
adc
out
jge
lahf
pop
pop
mov
(bad)
mov
(bad)
retf
cwde
mov
add
or
ret
add
push
pop
xchg
push
inc
adc
mov
stc
(bad)
mov
dec
jmp
pop
and
add
mov
enter
jg
fs
mov
xor
out
sti
jo
xchg
jecxz
mov
aas
pop
cmp
cwde
push
data16
dec
jecxz
ret
(bad)
pushf
jbe
cmp
or
(bad)
or
and
jne
jae
popa
xchg
in
bound
int
es
xchg
jbe
jp
jno
imul
cmc
(bad)
test
adc
push
hlt
sub
inc
or
jle
cdq
dec
xchg
fs
cmp
div
xchg
bnd
mov
jg
outs
loope
mov
cmp
data16
loop
inc
mov
push
adc
out
cmp
add
mov
fsub
adc
(bad)
dec
push
sub
retf
inc
sbb
dec
add
das
cs
movs
push
jb
in
movups
mov
pop
pop
cmp
push
pop
dec
mov
sbb
add
hlt
sub
std
repnz
mov
dec
ret
mov
push
int
cmc
aaa
xor
aaa
iret
mov
test
daa
fs
rol
jle
les
and
add
inc
cld
mov
add
shl
adc
jp
xchg
(bad)
and
xor
xchg
push
call
into
mov
mov
fst
sub
shl
adc
test
loope
mov
mov
test
and
popa
arpl
cld
iret
pusha
js
test
push
hlt
gs
shr
(bad)
mov
pushf
cwde
outs
outs
push
cli
xor
sbb
cmp
adc
fild
aad
inc
rep
jnp
push
mov
mov
sbb
pop
rcr
int
(bad)
add
fidiv
ja
xor
les
mov
inc
add
pop
retf
mov
hlt
jl
cmp
dec
dec
adc
dec
push
pop
sub
ins
in
push
xchg
xchg
cmps
mov
push
jno
imul
repz
push
jae
xchg
and
jo
dec
mov
jge
jns
hlt
movs
ja
je
mov
dec
push
mov
mov
adc
inc
out
arpl
test
(bad)
dec
jle
out
xchg
jns
pop
or
jecxz
sahf
arpl
fist
fsubr
cmp
les
fdiv
xchg
inc
sti
push
fwait
std
xchg
fwait
jp
ficomp
pop
adc
pop
dec
push
inc
out
ret
push
sub
cmc
push
jle
(bad)
xor
cs
in
jmp
xchg
arpl
xchg
mov
je
dec
or
fnstenv
mov
xor
dec
add
and
pop
movs
sbb
mov
jg
sub
cld
sub
in
push
scas
jmp
xchg
inc
jae
jmp
mov
lea
mov
pop
push
ins
stos
adc
sub
pop
sub
add
test
cli
or
push
xor
adc
fwait
out
jmp
pop
cs
or
sub
fidiv
xlat
ret
and
sbb
pop
xlat
add
cld
or
sub
push
outs
sbb
scas
jp
outs
rcl
push
in
pop
pop
iret
and
or
push
js
dec
mov
jns
repnz
rol
xchg
cmp
nop
(bad)
(bad)
shr
scas
mov
fist
fist
cmps
xchg
push
push
xchg
pop
(bad)
push
loope
push
jno
xchg
add
(bad)
ins
xchg
lock
and
sub
mul
xchg
jno
out
enter
xlat
ins
(bad)
and
or
sbb
leave
adc
and
ficomp
rol
xor
jp
fmul
inc
lods
pushf
sub
lds
iret
std
fisub
dec
std
or
mov
adc
fs
fdiv
sub
and
xchg
mov
inc
in
ins
cmps
outs
push
xor
pop
hlt
and
stos
adc
and
or
scas
(bad)
jmp
fistp
mov
push
jbe
gs
das
int3
inc
das
cmps
leave
and
mov
dec
push
mov
rcr
sub
xchg
xor
add
sbb
movs
aad
scas
(bad)
jge
(bad)
jno
int
jle
mov
ss
add
sbb
add
mov
clc
jl
(bad)
rol
push
push
sbb
and
cli
mov
mov
pop
in
hlt
icebp
add
inc
repz
imul
in
xchg
mov
xchg
and
add
sub
enter
mov
stos
lea
add
movs
popa
push
lahf
cmp
xchg
mov
push
sub
cmp
sub
xchg
jmp
adc
inc
sub
pop
rol
adc
xchg
lds
or
sahf
imul
ret
mov
dec
(bad)
ins
ins
xchg
push
xchg
rcl
fisttp
push
add
xchg
sbb
test
sub
push
or
cmp
adc
mov
sar
mov
lahf
mov
jmp
or
adc
mov
js
mov
test
neg
jbe
sub
fld
jns
cmps
inc
inc
jnp
push
xchg
(bad)
shl
pop
mov
jnp
push
cmp
dec
push
jmp
add
and
not
into
fnstsw
adc
ret
sub
and
sbb
cmps
cmp
and
and
shr
push
je
(bad)
adc
scas
mov
cmp
aaa
inc
into
jnp
pop
inc
xor
add
movhps
xchg
inc
inc
out
xlat
pop
icebp
fild
add
jecxz
cmp
pop
cdq
sub
mov
fiadd
popf
mov
lahf
rcr
push
imul
fwait
cwde
lahf
ror
add
mov
les
call
or
popa
ds
xor
test
add
xchg
in
pop
repnz
jmp
popf
jp
xchg
lds
out
sti
pop
in
fstp
mov
mov
sar
das
loop
popf
jo
push
ins
ds
cmps
mov
xchg
sbb
lea
not
mov
scas
ja
inc
inc
fisttp
xchg
pusha
lahf
jnp
xor
or
ins
test
pop
scas
xchg
xchg
dec
mov
sbb
pop
jno
sahf
hlt
xchg
inc
out
adc
xchg
sbb
in
call
or
jge
les
dec
out
xchg
dec
sub
dec
jg
dec
jne
xor
inc
lock
mov
add
std
pusha
(bad)
loope
fidiv
sub
ja
inc
cmp
popf
aam
rcr
ret
pop
fmul
xor
pushf
sub
pop
push
mov
and
dec
stc
xor
pusha
retf
icebp
loope
jmp
scas
popf
adc
fist
loop
ud1
or
add
push
sub
jl
dec
shl
into
cli
outs
movs
test
scas
mov
(bad)
fldenv
out
inc
sbb
rcr
xlat
add
adc
in
pop
cwde
test
std
cs
out
test
xlat
cmp
mov
pop
or
jmp
add
push
cmp
pop
jle
jl
lods
add
xchg
test
inc
dec
iret
call
push
push
test
mov
cwde
into
mov
jl
xchg
lods
int
add
outs
pop
repz
mov
push
sub
pop
pop
jmp
call
mov
sbb
mov
dec
mov
sub
mov
dec
adc
adc
cli
sub
call
cmp
adc
push
ins
inc
data16
pop
pusha
push
pop
sar
xchg
jns
test
scas
xchg
sub
pushf
jl
int
inc
ja
dec
xchg
iret
push
dec
mov
popf
jecxz
cmp
add
fsub
ins
ror
add
push
and
add
jmp
cwde
fs
jb
hlt
xchg
sub
addr16
mov
sbb
rcl
or
loopne
pop
sub
loop
xor
es
out
cwde
add
sbb
pop
bound
movs
xchg
pop
test
inc
and
jbe
push
cld
pop
(bad)
cmp
xchg
pop
mov
and
inc
add
mov
sub
mov
(bad)
call
retf
inc
mov
xor
leave
inc
repz
sub
and
dec
test
clc
jo
loop
stos
and
mov
icebp
call
inc
cld
into
add
mov
mov
or
mov
xchg
push
push
outs
(bad)
sub
add
ret
cs
das
cmp
faddp
repnz
(bad)
jg
in
rcl
or
mov
ins
popf
and
adc
jne
in
ins
test
and
or
stos
jmp
es
test
mov
cmps
xchg
dec
mov
fcom
aad
jecxz
mov
xchg
mov
cmp
jl
lock
int3
lods
outs
in
mov
jmp
xchg
sbb
sbb
in
xchg
add
out
sbb
addr16
push
cdq
lahf
ss
icebp
fs
push
push
pushf
(bad)
xchg
xchg
fwait
jp
shr
pushf
(bad)
fdiv
int
(bad)
cmp
pushf
mov
or
add
xor
jg
jne
sbb
xchg
mov
mov
xor
pop
sbb
and
sbb
stos
ss
sub
nop
add
movs
xor
mov
aam
xchg
stos
or
jnp
cmc
iret
xlat
mov
add
adc
mov
cs
mov
sbb
xchg
mov
cmp
ss
retf
dec
inc
movs
lahf
add
sbb
pop
cmp
aam
adc
jg
adc
arpl
adc
pop
mov
or
jnp
mov
test
in
pop
push
jb
inc
rcr
fidiv
inc
sub
or
jl
mov
mov
sub
jge
cwde
dec
lods
mov
push
push
cmps
call
fldcw
ror
out
fwait
aaa
stc
xor
nop
sub
pusha
xchg
sub
cmps
xor
and
aam
mov
mov
mov
jg
sub
jae
inc
sbb
cmps
cmp
(bad)
das
test
sbb
gs
ret
add
and
shl
inc
pop
fstp
mov
aam
adc
test
scas
repnz
or
sbb
mov
push
mov
inc
arpl
outs
shl
push
js
(bad)
cli
leave
xor
dec
(bad)
cmps
int3
jge
rcr
or
mov
leave
cmc
fdiv
int
jns
fwait
aaa
pop
cdq
aad
jl
aaa
and
fwait
mov
ss
xchg
test
nop
jb
sub
clc
neg
sbb
fisttp
mov
cs
lock
int3
pop
shl
stos
cs
cmp
nop
retf
test
cmp
xchg
shl
cmc
mov
pop
cld
dec
or
pop
lods
jbe
cmp
int3
ss
push
jmp
mov
jae
mov
inc
scas
lds
push
xchg
inc
adc
lods
jecxz
mov
iret
pop
ds
cmp
mov
cmps
in
xor
out
pop
retf
push
add
mov
jbe
xchg
dec
fwait
in
xchg
cmp
mov
or
into
inc
sbb
fwait
(bad)
mov
inc
outs
(bad)
dec
fwait
mov
movs
cmp
mov
push
dec
lods
or
in
sbb
adc
pop
jl
xor
xchg
dec
fdivrp
mov
xchg
aad
(bad)
sbb
out
cmps
adc
and
add
sar
adc
lea
lea
inc
dec
sti
dec
ds
sti
mov
gs
scas
in
js
cmps
ds
ror
rcl
cmp
int3
and
shl
mov
and
pop
or
push
in
shl
sbb
movs
imul
cmps
fs
sub
add
punpckhwd
dec
bound
outs
mov
fwait
mov
fcom
lock
inc
xchg
and
add
adc
add
mov
add
mov
fisub
cmove
outs
jns
jmp
scas
pop
ror
dec
mov
and
jo
jo
shr
add
imul
pusha
mov
jge
mov
inc
lods
adc
(bad)
inc
sbb
inc
js
(bad)
stos
mov
loope
or
sub
jmp
(bad)
rcr
(bad)
stc
out
jmp
out
ins
nop
sar
cs
int
and
mov
sbb
sub
mov
jl
cmps
out
mov
bound
pop
stos
cmps
push
jl
xor
stos
adc
sar
sbb
movs
pop
add
jne
fldenv
sub
lods
repnz
inc
int3
push
inc
inc
or
movs
je
in
fisttp
and
mov
sbb
sub
xor
pop
mov
sahf
data16
pop
ja
jmp
sti
pop
popf
mul
jp
xor
or
repnz
loop
jmp
fdivr
ret
int
sbb
mov
mov
mov
dec
stos
mov
vpunpcklbw
mov
pop
inc
retf
and
or
(bad)
stos
call
adc
xor
test
movs
dec
retf
inc
xchg
jl
in
push
sbb
retf
int3
inc
push
xchg
mov
repz
scas
jg
adc
mov
dec
sub
test
or
repz
push
rol
scas
push
cmp
fdivrp
sub
test
jg
fsubr
fadd
movs
bound
call
pushf
or
jbe
adc
retf
cmp
sbb
cmp
push
add
dec
les
lods
push
not
add
xor
dec
in
and
test
retf
mov
xchg
mov
mov
mov
jge
mov
cmp
pop
pop
cli
stos
dec
xor
(bad)
loope
pop
mov
or
ins
lds
jmp
leave
les
inc
pop
sbb
outs
outs
jmp
shl
popa
enter
sbb
sbb
sbb
popf
retf
or
mov
push
add
jno
dec
in
sbb
aaa
scas
inc
sbb
xor
ins
popa
fdiv
mov
ja
sbb
mov
and
pop
scas
stos
or
cdq
js
sbb
test
mov
pop
call
push
cld
int3
loopne
dec
call
xor
ss
adc
icebp
repz
jmp
push
push
and
xchg
xchg
xlat
aad
xor
test
das
pusha
sub
sahf
rcl
jmp
inc
dec
aad
inc
aas
out
lods
das
outs
push
pop
cmp
or
ss
xchg
xor
pop
test
jmp
push
inc
mov
jae
cmc
jle
and
in
movs
fisub
stc
add
inc
push
repnz
jecxz
cmp
xor
sbb
ja
ficom
push
test
adc
adc
or
mov
stc
ss
lods
(bad)
mov
pop
xlat
int3
aaa
(bad)
and
repz
leave
mov
pop
in
push
cmp
ins
pusha
push
and
sub
pop
call
mov
loop
test
sub
clc
pusha
fs
pop
ret
inc
neg
xor
mov
xor
add
pop
mov
jns
mov
arpl
loope
out
mov
or
mov
loopne
out
dec
or
std
cmps
sbb
(bad)
leave
adc
lods
push
dec
xchg
push
jp
test
inc
ja
mov
enter
add
into
lods
mov
ror
fidivr
movs
sub
out
and
repnz
dec
into
pop
jmp
aad
addr16
xchg
std
xchg
mov
aad
or
add
xchg
jns
aas
push
aam
xor
es
cmc
stos
das
dec
out
ins
int
je
adc
clc
loop
popf
mov
out
jo
ror
adc
mov
lahf
mov
add
adc
dec
sub
mov
lahf
stos
add
mov
jge
mul
and
xchg
jae
inc
inc
mov
cmp
(bad)
ins
xchg
and
pop
xchg
mov
imul
gs
mov
dec
inc
dec
(bad)
cmps
or
lahf
repnz
push
fstp
cmp
adc
push
push
mov
inc
callw
inc
jge
sbb
call
imul
push
jb
mov
cs
icebp
std
call
ret
push
push
es
ror
sub
jle
rol
jo
push
adc
(bad)
fs
mov
push
ins
loop
mov
(bad)
idiv
retf
xchg
mov
ins
push
shl
clc
mov
out
add
ins
fsubr
leave
xor
leave
hlt
cmps
mov
js
sar
mov
ds
mov
cwde
fst
mov
(bad)
out
jne
lahf
cmp
xchg
xchg
jbe
loopne
sbb
loopne
outs
cli
retf
adc
cld
cmps
inc
fdivr
push
inc
mov
push
xor
jno
jne
in
xchg
inc
int3
out
mov
xor
sbb
fimul
nop
jne
mov
mov
jecxz
pop
dec
into
fldcw
dec
out
cmp
push
bound
xor
es
test
pop
sub
out
(bad)
out
fimul
fwait
je
movs
sahf
popf
leave
sbb
test
pop
mov
repz
std
mov
pop
ret
call
frstor
sbb
sar
mov
push
scas
out
push
out
adc
xor
retf
and
and
retf
ins
test
mov
movs
dec
mov
or
data16
push
xchg
int
(bad)
adc
ds
sahf
add
cmp
les
es
shl
mov
jl
out
push
ds
fwait
mov
div
rcr
jno
jmp
cwde
adc
into
(bad)
imul
loopne
and
(bad)
call
je
nop
inc
pop
enter
stos
jecxz
repz
cmc
mov
adc
xor
or
fimul
(bad)
fcomp
adc
mov
int3
std
mov
ret
adc
nop
std
sbb
gs
test
loop
repnz
test
ret
push
cmp
js
xchg
adc
not
cli
das
jge
je
mov
cmp
xor
movs
int3
(bad)
and
pop
leave
stos
sbb
mov
add
mov
xchg
aad
leave
clc
sar
sar
xor
jl
dec
fldenv
loop
jne
inc
mov
dec
sbb
cmps
jns
lods
xor
shl
mov
enter
fist
fistp
sub
jp
and
jne
js
mov
stc
mov
add
and
and
fwait
sbb
gs
ja
pop
gs
fwait
mov
ss
arpl
dec
pop
mov
(bad)
mov
popa
mov
mov
shl
xor
mov
xor
aad
int3
shl
add
jae
jno
add
xchg
mov
cmp
mov
inc
in
cmp
push
movs
(bad)
jae
(bad)
sbb
xchg
or
dec
(bad)
xchg
stos
jg
js
push
and
mov
icebp
jge
popf
cwde
or
out
scas
lods
push
dec
push
xchg
js
jg
mov
xor
mov
scas
call
cmc
lods
mov
pop
ins
mov
xchg
jl
sar
clc
scas
fmul
fistp
mov
hlt
out
mov
sub
push
call
push
enter
popf
mov
adc
fisubr
outs
rcl
xor
xchg
xchg
stos
loop
inc
jge
push
and
call
bound
inc
adc
enter
dec
xchg
sub
ror
pop
out
in
retf
mov
sahf
jecxz
movs
or
ins
mov
mov
pop
mov
sbb
xlat
popf
aad
cmp
mov
add
sar
fst
push
mov
test
call
in
pop
pop
jge
sbb
xchg
jl
mov
ficom
int
or
fidivr
arpl
mov
push
mov
(bad)
repz
push
inc
pop
jg
cmp
jnp
cmps
scas
mov
loop
fwait
ins
loop
hlt
sbb
sub
add
adc
cmp
mov
add
push
in
outs
mov
arpl
(bad)
push
outs
xchg
mov
loop
or
pavgw
adc
arpl
inc
nop
add
and
(bad)
lock
int3
mov
js
imul
pop
jle
sub
or
mov
or
mov
cmp
push
loope
xor
sub
adc
push
dec
push
imul
fdivr
sar
adc
push
inc
out
into
inc
inc
push
inc
jb
dec
mov
inc
jae
cmps
pop
mov
or
xchg
xchg
imul
fisubr
stos
shl
js
rcl
call
ds
add
nop
or
xchg
dec
or
jecxz
sbb
mov
popf
sub
jno
cmp
fisubr
(bad)
xchg
cmp
(bad)
imul
and
in
cli
lds
xor
and
dec
lahf
inc
inc
ins
jle
fmul
xchg
jmp
and
ja
mov
dec
cmp
call
sbb
ja
xor
xchg
sbb
fisub
xchg
cli
dec
add
ror
js
xlat
outs
xchg
les
into
les
jecxz
fsubr
and
loopne
push
push
rcr
int
sti
push
adc
out
mov
xor
jno
xchg
sub
not
test
outs
data16
fscale
(bad)
mov
mov
aam
fistp
dec
int
push
add
and
xchg
test
cmps
jb
sub
js
mov
jp
cmp
add
cmps
and
sar
icebp
xor
mov
ds
movs
in
inc
push
adc
pop
pop
pop
in
bound
mov
jg
inc
pop
mov
test
addr16
jo
mov
mov
int
inc
data16
pop
scas
mov
inc
sub
sbb
fisub
push
dec
mov
leave
push
mov
sbb
inc
dec
scas
jns
and
test
addr16
fild
fist
ja
(bad)
aam
xor
xchg
test
xchg
inc
(bad)
icebp
sti
popa
adc
sub
xor
popa
lock
mov
std
mov
mov
pop
pop
dec
je
lea
dec
jge
icebp
xchg
jnp
ds
test
push
fcomp
mov
or
daa
pushf
dec
pusha
jnp
and
push
out
loopne
or
std
add
cwde
push
jns
in
maskmovq
test
pop
in
lock
out
stos
push
cmp
mov
pop
add
lea
or
xor
mov
jbe
or
outs
(bad)
fcomp
push
add
lods
iret
mov
stos
jg
or
inc
and
xlat
aad
imul
iret
repz
sbb
sub
pop
(bad)
sub
not
pushf
stos
pop
inc
add
adc
sbb
bound
out
xor
add
inc
mov
rcr
push
hlt
into
retf
ds
sbb
sub
add
and
pushf
jmp
jg
fistp
lods
mov
mov
ret
test
imul
test
push
leave
xchg
pop
aam
repz
inc
fistp
mov
xor
outs
in
or
cmps
xchg
add
adc
in
out
test
ret
add
scas
jge
lds
call
ret
and
repnz
scas
lds
js
test
pop
mov
stos
jge
or
jnp
(bad)
std
adc
xchg
add
pop
xor
or
cmp
and
or
cli
xchg
adc
pop
mov
imul
pop
dec
enter
leave
imul
mov
outs
pushf
lods
cmp
push
movs
sub
sbb
ror
mov
call
or
xchg
outs
ror
adc
rcr
inc
xor
neg
fld
ja
push
push
push
hlt
aad
les
fwait
mov
fmul
repnz
fisttp
imul
mov
lods
and
fs
jo
pop
ins
fild
in
cmp
xchg
mov
mov
jl
inc
jp
inc
xchg
add
call
mov
sbb
inc
and
or
xchg
test
fs
jmp
or
inc
jmp
jg
sbb
test
cmp
adc
vpand
jmp
xchg
rcr
ror
and
pop
aaa
dec
icebp
push
mov
icebp
adc
int3
je
and
scas
cmp
jle
pop
stos
test
stos
cs
adc
fwait
sbb
push
xlat
sub
pop
dec
ret
sbb
ds
sbb
add
add
inc
inc
push
inc
into
push
dec
dec
shl
cld
xor
sbb
or
addr16
nop
dec
add
nop
mov
arpl
retf
mov
jo
les
fisub
popa
sbb
sub
mov
jb
sub
mov
add
push
sar
mov
call
pop
mov
pop
pop
addr16
into
cmp
gs
pusha
fst
popa
icebp
rol
xchg
push
dec
sub
xor
adc
cmp
dec
mov
or
cmps
rol
cmp
cmps
inc
jp
push
int3
outs
(bad)
frstor
push
movs
mov
iret
sbb
xor
lds
aad
mov
sbb
inc
mov
sub
mov
and
jno
retf
push
out
sub
stos
in
out
jl
ins
mov
retf
jl
fcmovbe
cli
mov
or
fiadd
add
out
push
fsubr
jnp
mov
int3
ds
jb
adc
lods
xchg
icebp
loop
or
xor
adc
fucom
ins
dec
mov
sbb
dec
adc
icebp
push
mov
arpl
bound
retf
or
jp
call
dec
add
enter
sub
(bad)
(bad)
outs
pop
pushf
cli
bound
idiv
retf
cwde
cs
mov
jb
mov
rcr
idiv
lds
pop
xor
and
retf
cmp
lock
(bad)
std
xlat
scas
sub
loopne
nop
out
outs
add
inc
pushf
push
mov
scas
cmp
sub
test
inc
dec
adc
jne
mov
and
xlat
jl
cwde
scas
push
(bad)
cmp
cmp
mov
ins
jecxz
inc
pop
in
shr
retf
mov
stos
xor
dec
dec
sub
mov
push
mov
xor
mov
outs
add
fist
adc
iret
mul
pop
add
lds
or
mov
mov
pop
imul
enter
pusha
scas
jno
pop
adc
rcl
mov
push
sub
jp
rcr
loop
mov
pop
xor
mov
rol
fidivr
xor
add
ss
jbe
loop
jmp
inc
sbb
je
and
les
cld
xchg
out
cli
mov
test
adc
and
xchg
cmp
ins
add
inc
sar
sub
dec
jmp
cmp
jl
mov
xor
pop
aas
sbb
mov
mov
test
pop
int
mov
jmp
and
mov
cmc
jmp
cmp
outs
int3
fsub
shl
jmp
jnp
iret
or
out
pop
push
adc
mov
push
adc
mov
push
ret
ins
stos
fmul
fs
out
cmp
inc
cmp
cmp
jb
xor
dec
rol
xor
push
sbb
and
mov
sbb
(bad)
scas
mov
jns
cwde
stos
mov
mov
or
push
xchg
test
inc
inc
fistp
xor
cwde
pusha
mov
aad
imul
sbb
xchg
push
outs
fnstcw
ss
pop
cmp
shr
cmp
fucomi
cmp
stos
sbb
imul
std
xchg
mov
xor
fadd
mov
div
pop
sub
jg
jl
movs
or
fisttp
test
jbe
nop
push
mov
test
outs
sbb
in
sbb
push
mov
jb
fcmovnb
data16
aam
jmp
jbe
mov
movs
jbe
mov
pop
(bad)
int
fisttp
adc
cld
adc
leave
push
inc
into
dec
retf
hlt
out
lods
pop
scas
mov
mov
sub
cmp
mov
syscall
pop
sbb
js
sub
jmp
jnp
add
jmp
ret
xor
int
sbb
mov
adc
mov
in
addr16
pop
jp
mov
stos
adc
push
lods
push
ficomp
repz
and
(bad)
pop
imul
inc
xchg
aaa
sub
push
and
mov
imul
aam
aad
shl
pop
inc
cmp
imul
imul
sar
sub
sub
mov
xchg
hlt
pop
inc
fcomp
fst
adc
aas
pop
adc
mov
jle
mov
(bad)
mov
shr
cmp
add
stos
cmp
fwait
jmp
jg
and
cmps
sub
add
loope
adc
sbb
mov
jno
pushf
xor
xchg
mov
(bad)
ret
adc
pop
es
dec
xchg
adc
xor
push
sbb
ins
int3
xor
or
and
xchg
shl
sti
sbb
xchg
std
mov
sub
mov
retf
sub
cdq
xor
test
xchg
push
clc
and
xor
int3
jmp
xchg
push
mov
ins
leave
sub
das
pop
lds
ins
mov
xchg
xor
jle
pusha
lods
or
and
pop
jbe
cmps
scas
jnp
sti
mov
pop
jmp
and
jae
add
mov
test
mov
repz
je
nop
fs
enter
scas
outs
es
add
xor
in
sub
dec
push
int
call
enter
(bad)
jmp
shl
cli
nop
int
adc
mov
mov
repnz
daa
(bad)
adc
ficomp
mov
inc
js
test
xor
stc
pop
sub
lods
adc
aas
or
pop
sbb
retf
repz
pop
add
xchg
jle
jno
push
push
xor
and
add
mov
and
jle
and
imul
mov
rol
cmps
pushf
repnz
mov
jnp
xor
cs
push
pushf
out
push
sahf
mov
ficomp
jecxz
das
(bad)
jg
call
jne
arpl
ja
out
je
das
sbb
sbb
jmp
dec
int3
push
scas
add
nop
mov
daa
loop
jbe
lds
mov
and
jae
stos
add
inc
stc
outs
push
cmp
mov
loop
push
mov
inc
inc
das
xchg
add
iret
imul
lods
sub
pop
dec
add
fstp
movs
rcl
jbe
adc
xor
rol
int
ja
retf
dec
xor
pop
mul
scas
push
inc
pop
fmul
push
(bad)
jle
jl
jne
int3
dec
addr16
stos
lahf
lock
aad
jns
dec
dec
rcr
add
outs
out
sbb
jle
push
or
call
test
push
(bad)
sahf
(bad)
pop
shl
pop
bound
mov
icebp
daa
call
fninit
(bad)
aam
movs
dec
movs
test
pop
cmc
(bad)
pop
push
pop
mov
or
adc
cmc
inc
mov
gs
in
xor
dec
or
bound
mov
(bad)
jne
jno
in
pop
inc
or
push
pop
test
add
dec
shl
xchg
mov
mov
inc
or
push
imul
(bad)
xor
in
push
adc
and
stos
cmp
mov
cmps
cwde
sbb
xor
dec
mov
inc
push
aaa
loop
push
jo
stos
lods
mov
inc
fnstenv
in
call
sbb
xchg
jl
pop
xchg
pop
(bad)
adc
pop
mov
neg
inc
aam
xor
cmp
cmps
in
fsub
js
inc
mov
adc
and
mov
pop
push
pop
aaa
pop
mov
mov
out
pop
mov
cmp
lods
push
and
sub
add
inc
popa
shl
inc
xchg
out
out
retf
sti
push
sbb
cld
stos
xor
ret
sub
stos
cbw
sti
or
jno
cmp
push
jns
adc
sub
leave
sbb
xor
test
dec
mov
fwait
jg
in
push
ficomp
xlat
jecxz
cs
sbb
cmp
out
aad
cli
test
inc
pop
push
pop
inc
dec
hlt
test
jge
mov
sbb
add
icebp
mov
enter
xchg
dec
push
xchg
rol
mov
ja
fisubr
jb
test
mov
imul
fwait
jl
mov
xchg
mov
inc
xor
mov
inc
cmp
add
sbb
rcl
fs
inc
mov
pop
stc
jbe
pushf
iret
sbb
xchg
pusha
dec
retf
in
sub
fsubr
inc
mov
movs
xchg
mov
push
inc
add
xchg
rol
push
sub
scas
inc
inc
das
mov
ins
jg
hlt
ror
mov
jo
xor
inc
cmp
mov
sub
pusha
cmps
lock
jge
jl
xor
xor
in
add
fs
xor
xchg
fwait
xor
cli
mov
fimul
jmp
adc
stos
int3
push
pop
dec
mov
jecxz
iret
jp
sbb
int3
push
dec
ror
push
xchg
adc
popf
jge
sbb
xor
(bad)
mov
dec
pop
and
loope
add
mov
cs
out
(bad)
arpl
cli
mov
mov
mov
(bad)
mov
and
int3
add
mov
loopne
(bad)
xor
mov
cmps
dec
xchg
jle
xlat
pop
jns
nop
dec
mov
pop
sbb
adc
mov
test
dec
jmp
mov
jmp
xor
out
gs
aas
fisub
jl
in
ja
pop
lds
aad
retf
jecxz
inc
enter
and
cmp
je
sbb
cs
jmp
add
xchg
pop
dec
mov
xchg
fidivr
cs
xchg
mov
pop
adc
adc
ins
lea
push
push
lds
out
dec
mov
fs
dec
daa
addr16
xchg
test
xchg
mov
mov
mov
and
push
inc
xchg
imul
test
jo
mul
mov
ins
bound
push
xchg
sti
lock
jo
mul
movs
ficom
pop
and
mov
addr16
sub
mov
xor
stos
mov
mov
movs
pop
push
push
mov
xchg
or
or
jnp
ja
addr16
pop
xor
xchg
sbb
adc
and
(bad)
fmul
in
adc
aas
and
jmp
repz
hlt
lsl
leave
test
movs
mov
enter
and
leave
das
in
inc
push
pop
add
pop
jb
pop
out
fdiv
xor
and
sub
xor
cld
ud2
std
jae
(bad)
xchg
xchg
jmp
xor
add
movs
ins
mov
jle
ret
loopne
in
js
nop
cdq
sub
inc
call
jge
loop
movs
mov
xchg
adc
push
mov
mov
xchg
or
cdq
out
jle
stos
xchg
sub
ret
(bad)
inc
ret
mov
out
enter
xor
ja
ins
dec
add
cmp
enter
lods
mov
sub
loope
scas
cmp
ins
loopne
mov
daa
or
xchg
jne
add
pop
(bad)
jle
sti
xor
inc
cmp
mov
and
jmp
fs
icebp
mov
xchg
add
push
ja
jg
inc
out
sub
add
je
xchg
xchg
in
enter
pop
xchg
cmp
xor
repnz
inc
xchg
sbb
arpl
in
push
inc
retf
inc
mov
or
popf
mov
out
ret
xchg
mov
jne
call
gs
and
ss
jge
(bad)
mov
xchg
push
dec
push
dec
push
sbb
fs
xor
xchg
call
mov
cdq
jb
or
cmp
mov
lods
cmps
and
clc
dec
repnz
in
jns
daa
stc
and
xor
adc
push
sub
pusha
das
call
hlt
sti
dec
inc
test
dec
adc
ret
add
cmp
sub
xor
dec
test
xor
addr16
test
xchg
inc
outs
push
ret
sbb
inc
aaa
jmp
cmp
inc
lahf
out
mov
inc
mov
xor
or
push
push
push
pop
push
jmp
xchg
call
pop
mov
and
popf
and
and
idiv
xor
mov
cdq
pop
mov
lahf
and
push
je
and
mov
push
add
ins
inc
mov
das
sar
cli
jmp
nop
adc
ds
cbw
dec
xchg
or
adc
sub
rol
jno
jg
nop
adc
xor
dec
dec
jae
push
daa
lea
outs
push
cmp
fbld
ret
sbb
jp
add
mov
dec
std
daa
jns
cmps
xchg
(bad)
mov
aad
je
ss
in
fadd
adc
in
inc
xor
xchg
adc
adc
rcr
jp
push
jnp
dec
aad
repnz
sbb
inc
fstp
push
push
out
in
clc
pushf
push
sbb
out
pop
push
push
lods
shl
pop
sbb
sub
sbb
sub
fs
cdq
test
pop
xchg
dec
cmp
jb
(bad)
cmp
jno
adc
xchg
cmps
div
and
iret
jne
push
loope
xchg
mov
imul
test
add
push
(bad)
enter
jmp
pop
xor
and
or
xchg
fist
xor
cs
iret
xchg
cmp
call
addr16
dec
sub
cdq
bound
adc
pop
pop
icebp
movs
loopne
fisubr
xchg
je
ror
and
repnz
fxch
daa
test
and
lds
pop
xchg
pop
mov
pop
ja
mov
jmp
inc
out
les
push
dec
push
jp
dec
xor
jle
xchg
shl
jne
ret
push
or
pop
mov
mov
xor
adc
(bad)
shl
pop
xchg
xchg
cmc
push
add
cmps
lods
enter
sub
sbb
fucom
pop
mov
fwait
add
mov
or
or
push
loopne
push
call
outs
movs
shl
adc
push
sbb
std
sbb
retf
inc
sbb
jae
dec
pop
enter
aad
xchg
in
jbe
jg
cdq
mulps
xor
cmp
xchg
lods
scas
daa
jl
jb
fcmovne
mov
push
sub
or
arpl
ficom
repnz
mov
mov
push
shl
and
dec
pop
inc
icebp
test
or
scas
icebp
cmp
mov
test
pop
mov
dec
push
(bad)
jg
dec
push
and
lds
in
add
in
xlat
sahf
dec
jns
out
push
punpckhdq
js
xchg
mov
gs
nop
repz
(bad)
jmp
cmp
aaa
(bad)
push
mov
call
les
repnz
sub
rcl
sbb
or
push
add
loope
sub
xor
and
push
mov
inc
ds
mov
(bad)
fucomp
icebp
push
aam
mov
test
popf
jnp
jp
popa
test
dec
and
popf
xor
or
neg
stc
ja
mov
leave
mov
out
jmpw
xor
sbb
mov
dec
call
or
shl
gs
mov
xchg
sbb
sbb
movs
fdiv
mov
cmp
aad
enter
jno
sub
or
imul
rol
fsub
aad
cmc
adc
mov
aam
pop
mov
jmp
repnz
jmp
leave
(bad)
sbb
lahf
rcl
jae
(bad)
fucomip
fldenv
retf
sub
sub
mov
hlt
dec
imul
xchg
stos
sbb
cdq
xchg
(bad)
sub
mov
pop
pop
les
out
fneni(8087
daa
in
mov
icebp
adc
inc
push
adc
aam
fdiv
pop
fsub
jmp
arpl
sbb
stc
pop
mov
jmp
and
ja
out
mov
cmp
xor
(bad)
add
cmp
fcmovnbe
mov
dec
out
add
hlt
mov
mov
mov
push
xchg
in
daa
xor
xchg
jecxz
sbb
ss
and
rcl
dec
add
xchg
mov
and
repz
xchg
push
in
add
icebp
inc
rcl
(bad)
imul
xor
addr16
and
rcr
and
icebp
pushf
adc
sub
adc
cli
loopne
(bad)
(bad)
cld
or
push
arpl
sar
jl
fstp
in
cmp
and
and
es
popf
cwde
cmp
inc
sub
pop
stos
cmc
inc
repnz
and
gs
pop
(bad)
xchg
fld
add
sbb
test
mov
ret
test
ds
gs
add
mov
mov
stos
adc
pop
jbe
jecxz
test
sub
ins
push
ins
dec
pop
arpl
clc
and
icebp
cld
push
mov
push
cmp
addr16
jp
test
out
or
cmp
adc
sbb
test
cli
mov
ja
outs
dec
loopne
pop
clc
push
xor
mov
fstp
test
and
push
and
popa
xchg
test
fld
mov
stos
lock
ja
das
sbb
retf
lock
pop
test
nop
scas
stos
mov
mov
call
add
mov
imul
in
xor
cmp
imul
xor
in
push
jns
outs
pop
xchg
in
inc
je
sbb
scas
xor
jae
lahf
cwde
jns
das
mov
xchg
jge
out
lea
mov
push
into
ja
repz
dec
inc
pop
mov
jmp
sub
sbb
icebp
loopne
mov
in
or
jae
out
test
add
dec
repz
mov
dec
sbb
fld
movs
(bad)
dec
push
fstp
icebp
(bad)
test
cmp
call
(bad)
iret
sti
or
pop
adc
lea
imul
push
cmp
push
xchg
scas
and
fdivr
ins
and
(bad)
xor
lock
repnz
xchg
fnstsw
inc
lods
cmp
into
or
(bad)
out
xor
aaa
pushf
aam
mov
inc
in
mov
leave
movs
mov
out
sub
sbb
mov
mov
xchg
adc
sbb
push
test
or
scas
not
and
or
xor
shl
inc
adc
movs
sub
sub
cmp
movs
and
mov
xchg
or
loop
popf
shl
lods
movs
sub
int
inc
retf
push
push
add
daa
cmp
out
je
lar
sahf
xchg
jno
hlt
pusha
mov
adc
aas
xor
jp
pop
sub
jo
adc
mov
sub
mov
cmps
dec
outs
cmp
push
out
inc
inc
fisub
icebp
cmp
aad
xor
scas
push
adc
nop
or
imul
test
and
je
test
icebp
scas
sub
mov
inc
xlat
mov
iret
jmp
inc
(bad)
push
jl
stos
aad
retf
movs
cmp
jmp
or
js
loop
mov
push
in
pusha
mov
add
loope
mov
fs
pop
outs
and
into
(bad)
pop
xchg
js
xchg
ins
xchg
enter
mov
sub
test
jae
mov
dec
call
(bad)
sbb
cwde
and
adc
inc
push
cmp
and
fisubr
adc
es
push
add
sbb
jae
dec
pushf
iret
ins
and
or
test
dec
ins
or
push
add
ins
fcom
inc
xor
(bad)
mov
pop
mov
movs
or
cwde
xchg
xor
xlat
(bad)
mov
pushf
stos
inc
mov
inc
(bad)
jl
adc
les
inc
out
and
rol
pop
jb
out
leave
aas
aam
sbb
imul
mov
push
mov
daa
inc
jmp
dec
xchg
dec
pop
jmp
jl
xlat
shr
outs
push
mov
lds
or
xor
clc
pusha
bound
or
xlat
push
mov
jns
jae
xlat
jp
dec
cmp
shr
cmps
pop
push
std
imul
and
adc
fcomp
das
xchg
and
add
(bad)
xor
sub
fldenv
push
mov
mov
fisub
push
dec
xor
(bad)
movs
dec
ficom
scas
xor
in
pop
mov
icebp
je
adc
shl
outs
scas
imul
and
loopne
clc
retf
call
jecxz
mov
lods
push
jecxz
xor
mov
jecxz
mov
(bad)
push
pop
or
or
lahf
push
adc
test
leave
fwait
xlat
icebp
sahf
push
lock
leave
leave
push
pop
(bad)
mov
(bad)
adc
mov
ins
xchg
jg
dec
inc
jb
push
xchg
and
xchg
pop
fisub
fmulp
test
packsswb
jb
cli
imul
ror
xchg
popf
ficom
ror
mov
jne
mov
add
std
push
cmps
jge
arpl
fsub
mov
les
mov
cmp
inc
es
repz
push
inc
addr16
mov
jns
div
(bad)
sahf
xchg
mov
and
rol
cmp
cdq
mov
xchg
push
cmp
stos
repnz
movs
fld
test
rcr
sbb
hlt
mov
sbb
xor
out
mov
out
sub
add
test
jmp
mov
cmp
sub
out
xor
jge
xchg
jle
outs
push
movs
cwde
push
(bad)
jne
pop
shr
and
dec
sub
mov
out
or
mov
jmp
movs
adc
imul
xor
je
(bad)
jns
and
hlt
or
sbb
mov
dec
add
(bad)
mov
(bad)
jge
xlat
sbb
loope
lods
mul
cmp
(bad)
icebp
pushf
mov
adc
dec
sub
aad
hlt
or
sub
cmp
sub
dec
les
push
in
or
mov
pop
xor
jnp
popf
sub
mov
xor
out
jne
xchg
xlat
out
stc
push
sub
xor
into
fstp
jg
jae
inc
les
mov
mov
jmp
adc
fst
push
mov
dec
jbe
jp
(bad)
xlat
jle
aas
pop
mov
sub
enter
push
jmp
int
pop
(bad)
rdtsc
scas
dec
daa
popa
lea
xor
iret
out
adc
adc
mov
or
xchg
cmps
cmp
cmp
fdiv
shl
add
bound
mov
adc
lods
mov
or
mov
in
and
retf
jmp
or
shl
cld
push
mov
sub
sbb
cdq
out
cmc
repnz
adc
aam
xchg
ret
inc
and
(bad)
mov
(bad)
mov
pop
fist
or
and
xchg
inc
fadd
in
sub
cmps
mov
addr16
dec
call
mov
sbb
test
retf
out
fwait
jl
inc
mov
push
es
ins
sbb
arpl
dec
pop
xchg
nop
push
mov
ins
sbb
push
cld
imul
fs
loope
enter
in
jmp
jo
loope
adc
gs
fild
(bad)
mov
mov
push
sub
enter
fs
js
cmp
add
cmps
std
in
test
xchg
mov
ins
xor
aam
xchg
mov
fdiv
and
dec
call
bound
pop
into
sub
cmp
popf
sbb
popa
popf
out
jl
je
jge
shl
aad
or
mov
sbb
ret
pop
aad
xchg
hlt
mov
jecxz
ret
push
push
sbb
pop
(bad)
shl
sub
dec
mov
mov
xor
push
inc
mov
fisttp
stos
cmp
test
call
icebp
ficom
data16
jecxz
push
repnz
and
sub
lods
add
sub
repz
mov
sub
jbe
popa
jmp
test
jne
pop
xor
push
lods
sbb
dec
pop
cmp
add
pop
mov
mov
xchg
aad
mov
inc
pop
shr
mov
lahf
push
xor
mov
arpl
xchg
push
rcl
xchg
jmp
stos
in
cs
fmul
mov
sub
xor
test
mov
inc
mov
mov
cmc
xor
xchg
sub
sbb
add
fcmovnb
(bad)
jmp
sub
in
cmp
das
movs
adc
xor
dec
push
mov
imul
cmp
lds
cwde
dec
adc
inc
push
in
xor
mov
iret
(bad)
xchg
mov
sbb
shr
jl
popa
pushf
jp
cmps
jo
cmp
mov
push
cmp
sub
mov
add
cwde
mov
add
jge
hlt
xchg
shl
push
push
cmp
sbb
repnz
sbb
pop
shr
xchg
repnz
ret
cwde
cld
ja
mov
mov
pop
idiv
stc
jmp
inc
dec
lods
(bad)
push
cmp
sbb
add
pop
std
and
xor
push
pop
pop
stos
sbb
inc
ret
aam
push
cmp
mov
pop
jb
adc
sub
ror
loop
(bad)
ror
out
cld
rcr
test
ret
sub
call
add
iret
arpl
xchg
lods
ins
inc
cmp
jle
or
hlt
jb
clc
lods
mov
adc
mov
push
push
popa
ror
out
jbe
mov
inc
dec
lea
xor
pop
add
imul
cdq
sbb
jmp
scas
mov
push
xchg
fadd
push
sub
scas
icebp
and
or
push
xor
nop
(bad)
idiv
cmp
hlt
push
mov
add
test
cmp
out
repz
loope
jg
ja
stos
cmp
and
mov
sar
das
or
icebp
ins
ins
fwait
mov
and
push
stc
call
inc
shr
js
mov
test
and
(bad)
push
ja
cmc
ss
les
sbb
jae
add
mwaitx
adc
jbe
out
out
jo
adc
data16
sbb
push
push
push
mov
pop
sub
and
jno
clc
out
addr16
push
les
cmps
xchg
in
jnp
push
out
rcr
shl
repz
mov
(bad)
stc
mov
sbb
stos
mov
cmp
lods
xchg
sub
arpl
push
imul
jmp
data16
sti
mov
loope
and
rcl
jecxz
sti
mov
sbb
int3
mov
outs
inc
mov
adc
mov
test
dec
sub
xchg
data16
mov
dec
lods
mov
adc
mov
inc
cmp
int
and
jno
jp
or
aas
lods
test
jecxz
pop
rol
popf
jbe
test
loopne
dec
xlat
sar
retf
dec
test
push
or
retf
(bad)
mov
mov
repz
cmp
push
add
das
icebp
sbb
xchg
fld
je
mov
or
or
in
mov
test
addr16
out
mov
inc
mov
mov
int
repz
(bad)
std
inc
mov
or
out
outs
ret
dec
adc
pop
cmps
sub
arpl
pop
mov
(bad)
mov
mov
pop
rcl
adc
adc
fstp
lods
aaa
cmp
adc
pushf
outs
mov
test
in
scas
push
adc
ss
push
push
pop
(bad)
in
call
sub
sbb
and
adc
xchg
in
ror
and
outs
pop
movs
test
xor
stos
mov
adc
dec
cmp
inc
pop
and
cmp
fwait
jmp
sbb
mov
in
arpl
and
aad
mov
xchg
enter
popa
sub
(bad)
mov
jae
daa
xor
push
xchg
js
xor
inc
fdivr
xchg
adc
sbb
or
test
jle
adc
sbb
xchg
bound
mov
inc
pop
je
(bad)
xor
cmp
push
(bad)
(bad)
iret
aad
sub
cmp
fiadd
frstor
xor
pop
and
imul
pop
repnz
push
jle
push
add
cmp
xchg
cmp
icebp
mov
cmps
data16
les
xor
in
xchg
shl
or
fs
or
jne
out
dec
retf
or
pop
stos
pop
push
into
sbb
repnz
int3
sar
mov
stos
fisttp
cwde
dec
mov
mov
pop
int3
cmp
imul
pushf
hlt
rcr
stos
add
imul
xchg
call
cmps
xchg
or
sub
ss
and
push
sub
(bad)
in
aam
neg
stc
cld
ins
rcr
scas
test
xor
lock
sub
sti
sub
push
je
movs
xchg
pusha
int
xchg
in
movs
imul
xchg
stc
mov
add
out
mov
xor
dec
repz
dec
sti
lds
test
jae
and
or
sub
in
clc
fsubrp
sub
idiv
lods
jmp
ret
sar
imul
jle
push
pop
jbe
sbb
dec
jmpw
cmc
xchg
data16
sub
in
in
cmc
xor
pop
retf
jb
fadd
data16
sbb
and
int
mov
adc
(bad)
mov
add
div
sbb
(bad)
scas
or
jae
add
jne
(bad)
rcr
jns
loopne
mov
iret
dec
xor
mov
pop
cmps
or
dec
jmp
jmp
xor
in
lea
add
das
call
(bad)
jecxz
mov
and
lock
xchg
mov
aaa
and
outs
sub
xor
add
outs
popa
mov
add
mov
(bad)
mov
imul
in
(bad)
mov
or
stc
mov
mov
add
sub
mov
pop
pop
mov
inc
sub
xor
pusha
rcl
hlt
push
adc
es
fisttp
inc
jmp
jg
jno
cdq
in
arpl
jae
mov
adc
and
ja
dec
repnz
daa
repz
mov
int3
movs
adc
jle
adc
lods
adc
xchg
lods
enter
ret
cmp
sub
ror
mov
mov
fimul
out
jg
push
mov
xor
es
xor
mov
gs
cld
inc
jl
ins
pop
std
aad
add
pop
or
loopne
mov
pusha
pop
xchg
jge
xchg
fidiv
xchg
aam
push
lahf
push
rcr
jmp
xchg
ret
xchg
outs
or
pop
pop
push
into
pop
or
or
inc
stos
aas
sub
jg
dec
push
out
xchg
xchg
jbe
and
or
retf
(bad)
clc
sub
push
scas
imul
fwait
out
jmp
add
cld
fstp
dec
xchg
mov
mov
push
jp
jbe
inc
mov
popf
out
jmp
(bad)
lods
pop
jge
jmp
ror
ret
jne
fdiv
push
pop
(bad)
(bad)
retf
mov
mov
mov
repnz
lea
loope
lahf
jle
mov
retf
add
mov
xor
cdq
xor
loopne
clc
popf
into
jno
mov
enter
sub
cmp
int
push
js
jns
in
xor
repnz
add
jl
(bad)
out
cs
push
lock
push
jmp
in
sbb
cmc
mov
xor
clc
test
sbb
rcr
xchg
stc
cld
xchg
push
pop
add
scas
xchg
pop
outs
aam
adc
into
dec
adc
repnz
mov
jge
sahf
gs
sbb
inc
movs
clc
cmp
in
push
cmps
fiadd
repnz
xchg
arpl
sub
pop
push
mov
mov
inc
lods
mov
push
in
gs
mov
out
repz
(bad)
mov
leave
les
adc
dec
sub
inc
sub
inc
pop
retf
addr16
mov
and
jae
ret
jae
out
(bad)
sar
clc
(bad)
ins
pop
xor
pushf
xor
mov
das
push
in
and
lock
jo
ja
mov
add
sub
jle
adc
bnd
ds
in
(bad)
repnz
out
sbb
xchg
push
popa
(bad)
xor
(bad)
enter
leave
sbb
cmp
repz
call
ds
xchg
adc
inc
in
fcom
xchg
nop
pop
das
js
jle
or
test
mov
xor
pop
dec
pop
mov
push
stos
repnz
pop
jl
lea
fiadd
inc
mov
sub
outs
pop
add
outs
dec
xor
lods
sbb
adc
je
and
pusha
out
cmc
push
(bad)
popf
xchg
or
pushf
jne
push
in
jmp
inc
imul
ins
sub
mov
cmps
cdq
jg
into
imul
ins
sbb
push
jp
(bad)
mov
cmp
push
mov
sbb
push
ins
out
test
stos
and
outs
mov
arpl
sbb
rcl
dec
js
and
xor
in
sub
mov
test
loope
cmps
rcl
lea
mov
jmp
pop
(bad)
dec
clc
mov
cmp
sahf
ror
cli
pop
pop
push
sub
int
stc
stc
jge
mov
jno
xchg
pop
in
lahf
in
addr16
push
fld
and
hlt
and
mov
outs
dec
xchg
and
cld
mov
movs
fbld
stc
sar
je
xor
push
pop
and
cs
in
sbb
add
test
jae
and
fmul
loopne
dec
add
int
ret
or
mov
retf
aaa
wrmsr
xchg
mov
lods
xor
out
aas
dec
fiadd
arpl
cs
jns
sub
jg
sbb
dec
aad
je
cmp
cmps
xchg
adc
cmp
push
test
lods
(bad)
stc
gs
xor
lds
push
add
shl
xchg
pop
push
jp
jbe
nop
cs
jne
idiv
and
jl
icebp
shr
fiadd
push
push
pushf
(bad)
cli
cdq
sbb
sti
push
inc
mov
std
stc
and
and
xor
mov
sub
jge
das
mov
jbe
mov
mov
xchg
fnstenv
jbe
sti
add
movs
xchg
push
dec
jb
out
ins
mov
stos
mov
push
adc
mov
pop
push
popf
ret
lods
jno
ror
(bad)
popa
out
shl
(bad)
sbb
sub
sub
push
or
push
(bad)
out
pop
sti
sti
jno
xor
scas
mov
into
fild
scas
imul
cmp
jnp
dec
pop
dec
dec
adc
mov
push
mov
add
or
outs
cmp
das
jbe
mov
xchg
jae
aad
(bad)
call
pop
loopne
iret
adc
(bad)
jmp
scas
mov
xchg
cmps
sub
lods
inc
jo
popa
out
xor
repnz
aas
fstp
loopne
push
pop
test
mov
adc
movs
add
sub
bound
imul
or
iret
stos
cmp
jg
repz
sub
dec
xchg
fcmovne
les
and
sub
rcl
js
pop
imul
cmp
mov
pop
jno
jg
ret
jle
xor
or
push
xchg
fcom
pop
or
je
or
popfw
inc
pop
ja
test
shr
mov
daa
retf
xchg
test
and
add
ins
loopne
icebp
cmps
adc
pop
imul
cwde
fld
pop
or
mov
push
dec
repz
xchg
lea
test
out
mov
cmps
pop
jo
dec
clc
jno
push
arpl
mov
inc
mov
jl
and
xchg
adc
cdq
mov
fldenv
ret
jmp
ror
push
popf
pop
je
xchg
int3
cdq
pop
rol
push
ret
aam
mov
mov
iret
enterw
and
sub
cmc
xor
arpl
loop
mov
or
mov
mov
adc
and
mov
imul
das
cwde
pop
outs
test
dec
or
sub
int3
or
push
xchg
retf
pop
es
push
fcomi
pushf
mov
scas
ins
mov
adc
mov
ret
dec
jp
inc
out
xchg
cmp
shr
mov
mov
arpl
addr16
lock
ficomp
inc
sub
mov
push
test
xor
jb
shl
dec
pop
mov
inc
add
mov
gs
lock
sbb
retf
pop
push
imul
xor
xor
mov
inc
mov
div
loopne
push
fsub
cmc
mov
jmp
daa
dec
jge
push
mov
(bad)
mov
push
push
jecxz
xor
ficomp
inc
jbe
scas
cli
sub
jb
call
popa
fst
xchg
into
push
jle
dec
dec
or
and
out
and
popf
ss
aad
mov
sub
sti
rol
jge
sub
aad
fwait
sbb
addr16
xchg
xchg
fisttp
mov
outs
sahf
or
cmp
fst
xor
xor
fs
jns
jmp
mov
ret
es
add
repz
mov
xchg
mov
push
clc
jae
enter
in
sbb
push
push
pop
int
sub
cmp
push
enter
repnz
call
test
mov
mov
mov
retf
leave
sbb
lock
pop
cdq
jbe
out
xchg
into
iret
out
or
dec
mov
ret
inc
jg
xor
sahf
add
mov
inc
jle
out
mov
pop
ins
or
mov
adc
hlt
rcl
loopne
xor
mov
test
xor
or
jp
and
ror
add
jae
ficom
(bad)
ins
dec
xor
jno
mov
mov
fs
gs
cmp
out
(bad)
(bad)
aas
add
ds
cmps
shl
add
inc
jmp
mov
sub
test
mov
ret
jb
pop
pop
mov
push
rcr
pusha
pop
mov
ja
push
cmp
jae
adc
jmp
xchg
and
fwait
stos
loop
mov
pushf
push
push
in
xor
xchg
and
push
inc
adc
in
sbb
stos
xchg
sbb
cmp
sbb
push
daa
mov
lahf
mov
or
dec
js
sbb
jl
std
inc
xchg
sbb
xor
mov
xchg
icebp
xor
(bad)
hlt
jno
out
pop
jns
cmc
cdq
jnp
sbb
je
pop
cdq
and
jmp
pop
les
imul
cld
mov
stc
mov
gs
push
cmps
ja
add
adc
mov
sti
dec
jno
mov
data16
pop
rcr
jl
stos
jbe
xor
(bad)
dec
cmp
movs
mov
test
and
sub
inc
imul
fcmovnu
ffree
push
pusha
arpl
mov
mov
sub
mov
aaa
add
aas
in
or
push
mov
sbb
jbe
jbe
cwde
mov
rol
pushf
or
hlt
add
imul
in
sbb
mov
or
(bad)
repz
and
fimul
mov
fldcw
sbb
push
push
sub
(bad)
outs
(bad)
iret
rol
inc
add
retf
loopne
gs
push
pop
jns
nop
jle
mov
mov
adc
addr16
inc
outs
lock
pop
ds
out
and
adc
cmp
das
push
lea
jno
mov
jns
pop
imul
call
retf
mov
jp
lods
cs
mov
mov
push
aas
and
gs
fidivr
and
or
ins
jmp
repnz
push
dec
add
xchg
sub
xchg
dec
inc
push
and
pop
pop
addr16
stos
and
mov
sbb
mov
loopne
fst
and
push
out
les
mov
fwait
xor
imul
cmovge
cmp
in
sub
xor
test
fwait
adc
sahf
jmp
mov
dec
scas
fwait
mov
cmp
sub
fbld
imul
dec
jmp
cmp
fucomip
or
or
jns
pop
or
in
mov
js
icebp
int3
jae
inc
std
inc
loope
or
inc
sub
cmp
add
pop
sbb
dec
jmp
xor
xchg
ins
shl
sub
xor
imul
(bad)
add
pop
and
xchg
js
je
popa
jecxz
test
dec
div
jb
add
push
inc
sub
pop
mov
or
sub
stc
sahf
dec
fistp
xchg
adc
das
cmp
mov
jae
push
test
and
or
pop
ins
popa
rol
xchg
icebp
push
jl
fidivr
das
shr
mov
lods
int
xlat
pop
pop
cmp
cwde
or
popa
pop
inc
xor
cld
mov
mov
cmc
jb
cmp
or
or
outs
xor
iret
and
cmp
ins
pcmpgtb
pop
mov
sub
xlat
pop
mov
and
xor
push
pop
cmps
jmp
mov
push
adc
xchg
mov
xor
shr
fdiv
jmp
xchg
pop
out
cdq
icebp
and
icebp
popa
jl
jmp
and
cwde
push
pop
mov
hlt
xchg
xor
pushf
xchg
mov
pop
mov
into
cli
inc
mov
repnz
arpl
test
nop
add
sub
jl
clc
lahf
stos
scas
cmovns
xor
push
dec
sub
or
mov
sbb
retf
jge
push
push
cmp
mov
stos
and
movs
mov
adc
cmp
push
sbb
jb
cmps
ret
sub
add
ins
xchg
or
stos
scas
inc
mov
enter
push
clc
and
dec
into
push
cmps
sbb
rol
std
pop
mov
jbe
mov
shr
vmovshdup
cmps
popa
mov
sahf
mov
cmp
cmp
sub
and
cmp
inc
jmp
sbb
cmp
inc
mov
jae
adc
imul
fwait
dec
mov
arpl
xor
fld1
cmps
dec
in
mov
mov
mov
scas
pushf
xchg
dec
mov
or
adc
sub
cmp
(bad)
outs
xchg
xchg
mov
call
cmp
sub
sub
mov
or
mov
daa
int
add
rol
ret
int
mov
lods
xor
frstor
and
xchg
dec
push
loope
xchg
and
ds
xlat
inc
fcom
pop
pop
test
call
(bad)
fisub
nop
adc
stos
ret
outs
jmp
mov
aas
xchg
push
enter
mov
jp
jmp
gs
push
mov
pop
(bad)
mov
sbb
aas
sbb
(bad)
jl
or
sbb
cmps
scas
jnp
xor
cmp
hlt
lds
pop
adc
inc
xlat
je
xor
and
jmp
add
out
push
jl
mov
mov
pop
std
addr16
and
repz
es
sbb
xchg
dec
dec
rcr
pop
repz
push
out
fsub
add
sar
dec
mov
repz
fadd
lea
jns
sahf
fisttp
rcl
das
push
or
repz
jbe
clc
inc
retf
aad
xchg
fild
ud0
xor
inc
pxor
out
dec
xor
mov
sbb
mov
push
mov
out
jg
int3
cmps
pop
fld
jp
inc
add
pop
fistp
(bad)
test
out
add
jmp
es
mov
pop
cwde
mov
jle
mov
or
inc
std
jle
jecxz
rcl
test
retf
cdq
add
test
xchg
mov
icebp
sub
xlat
xchg
mov
outs
mov
xor
jae
mov
push
sub
mov
sbb
fwait
clc
xchg
dec
loopne
cmc
sar
lock
call
jp
pop
pop
adc
fucomip
mov
in
xor
(bad)
lods
jmp
or
loop
lods
cmp
jb
jnp
cs
ins
push
xchg
aam
xor
pop
mov
dec
fmulp
retf
inc
inc
push
repnz
cld
imul
inc
shl
and
je
adc
pop
icebp
inc
fisubr
je
add
repnz
retf
aas
lods
sahf
mov
inc
or
xor
rcr
push
mov
mov
xor
es
daa
inc
outs
dec
fisubr
jmp
dec
pop
dec
scas
addr16
leave
int
pop
pop
cmps
repnz
mov
mov
dec
dec
scas
jp
dec
inc
sbb
into
adc
sub
loope
mov
jns
sub
adc
jmp
jecxz
mov
adc
popf
aad
popa
and
std
(bad)
aaa
mov
and
mov
jle
int3
inc
fwait
jl
lods
push
inc
(bad)
cmc
popa
dec
xchg
(bad)
dec
adc
adc
sbb
jmp
mov
mov
xor
es
jp
lods
jb
retf
bound
sub
das
xor
(bad)
cmp
adc
pop
push
retw
mov
xor
sub
aam
inc
push
push
in
sti
push
mov
jns
in
mov
stc
push
loopne
clc
fldcw
rol
sub
inc
lds
stc
nop
jge
mov
xor
push
add
or
out
mov
sub
sar
mov
jnp
push
movs
pop
lea
std
cdq
inc
mov
dec
add
mov
mov
in
jle
(bad)
cmp
lahf
(bad)
jbe
das
outs
stos
and
int
mov
xchg
popa
dec
or
mov
cdq
sbb
adc
cs
adc
repnz
xlat
cmp
mov
xchg
lods
add
cmp
dec
mov
cwde
jp
(bad)
push
adc
jge
mov
lods
xor
mov
sub
shl
or
in
das
and
push
dec
loope
jae
repz
inc
push
inc
dec
retf
and
sub
mov
jo
xor
aam
ror
retf
cmp
lods
push
cmp
jb
push
inc
std
xor
push
pushf
jae
adc
jecxz
xchg
xor
mov
sub
inc
movs
mov
jp
inc
loopne
(bad)
not
stc
adc
pop
add
stc
mov
cmp
inc
fisubr
repz
into
add
stos
(bad)
ss
fldcw
fs
pop
shr
es
data16
outs
mov
aam
pop
pop
or
movs
xor
inc
clc
inc
mov
fidiv
ret
mov
sub
pop
sub
dec
movs
push
xchg
ret
jl
mov
cmp
mov
dec
stc
jb
push
pop
repz
jmp
dec
mov
cwde
into
push
dec
je
(bad)
xchg
shl
repz
fiadd
retf
sbb
test
adc
retf
inc
pop
add
clc
sbb
div
stc
jns
inc
or
sub
out
add
and
or
mov
gs
mov
stc
ds
add
and
sahf
cmps
jo
xchg
pop
leave
adc
call
cmp
sub
adc
jge
cld
test
aaa
jno
mov
pop
neg
imul
ss
out
out
inc
in
daa
add
loopne
pop
sbb
push
mov
mov
jno
cmp
push
push
test
cmp
or
(bad)
shr
sti
add
inc
addr16
and
repz
pop
call
and
jmp
pushf
stos
ficomp
inc
loope
sbb
or
and
adc
inc
cmps
push
inc
adc
and
(bad)
test
sti
pop
daa
ror
add
jl
sbb
mov
push
cmp
or
scas
shl
add
xor
sbb
pop
inc
mov
gs
mov
jmp
ret
das
lods
popf
int3
mov
xchg
aad
mov
ja
aam
push
or
ret
push
cmp
cmps
cmc
jno
jge
rcr
loope
fxch
mov
in
mov
rcr
(bad)
les
loopne
jns
sub
mov
push
sub
ins
in
mov
cmps
in
or
jge
scas
jl
pop
jns
iret
mov
imul
push
or
jbe
mov
xchg
sahf
in
cwde
stos
inc
(bad)
fisttp
mov
(bad)
mov
mov
test
push
iret
push
cmp
push
dec
ficomp
cmps
icebp
fidivr
test
jnp
pop
push
(bad)
loopne
(bad)
jmp
sub
pop
add
out
js
movs
hlt
jmp
in
aas
inc
rcr
mov
pop
xchg
mov
jmp
jle
jae
std
mov
mov
loopne
or
cdq
jl
aad
fidiv
into
loope
repnz
push
cmps
sahf
mov
fbld
xlat
ins
(bad)
fidiv
mov
push
pop
loop
xlat
cmps
or
fimul
add
dec
and
push
sbb
xchg
push
stos
popa
xchg
mov
mov
cmp
(bad)
mov
rcl
fs
fucom
or
iret
xor
lds
mov
mov
add
or
jmp
sahf
pusha
movs
retf
das
inc
xor
lahf
or
loope
gs
or
loope
push
pop
(bad)
sub
push
and
adc
sub
fld
push
fidivr
sub
ins
push
rol
and
xchg
mov
rcl
addr16
je
in
stos
popf
jno
and
fistp
xchg
adc
ret
(bad)
(bad)
pop
rol
xor
aam
and
sub
movs
cmp
mov
fidiv
sub
dec
(bad)
cld
pop
sbb
add
dec
icebp
stos
(bad)
ficom
stos
cli
test
pop
or
cs
adc
mov
fidiv
test
int
xor
or
mov
push
push
addr16
clc
sbb
or
xchg
xchg
push
xor
fprem1
out
adc
fs
pop
push
nop
add
sub
add
mov
sbb
cmp
ret
je
push
xchg
mov
and
fcomp
add
jo
clc
mov
test
mov
xchg
pop
je
mov
clc
mov
test
mov
jb
(bad)
mov
sub
bound
in
pop
sub
and
aas
xchg
or
cmp
push
add
mov
lds
cmp
mov
(bad)
pusha
gs
push
data16
jp
addr16
daa
(bad)
ins
stos
psrlw
jge
or
das
xchg
std
in
or
dec
loope
sbb
mov
add
ds
cmp
ss
xchg
test
jmp
inc
cmp
in
dec
mov
pop
jo
push
test
(bad)
fnstcw
into
cli
mul
sar
dec
sub
fisub
sbb
mov
cld
or
rol
ins
mov
iret
mov
int3
aaa
adc
fld
or
sub
push
mov
cmps
push
test
mov
mov
ss
and
or
add
jnp
lods
mov
mov
gs
stos
adc
jae
dec
xor
movs
cld
ds
xor
scas
sub
mov
pop
adc
and
pop
sbb
jmp
lds
xor
dec
hlt
pop
out
arpl
and
(bad)
ror
mov
hlt
mov
and
rol
inc
sub
div
ror
mov
adc
clc
mov
pop
std
adc
stc
push
rcl
dec
sar
ins
mov
nop
test
jecxz
dec
cld
int
aad
test
or
sub
xlat
and
cdq
dec
push
sub
xchg
ficom
cmp
mov
adc
adc
xor
jno
addr16
cmp
in
push
stos
mov
cwde
stos
push
add
jbe
add
in
fnstsw
xor
push
(bad)
or
pop
sbb
ror
and
pop
push
pushf
push
leave
sahf
mov
push
loopne
int
xchg
add
fistp
xlat
sar
jecxz
adc
test
add
adc
or
scas
dec
enter
cs
jmp
xchg
or
std
pop
pop
addr16
js
ins
add
out
push
sbb
setp
jo
in
xor
pop
jne
iret
cwde
add
mov
in
repz
outs
inc
loope
retf
rdtsc
call
mov
cmp
cmp
rcl
mov
out
movs
mov
add
out
push
fcomip
sbb
push
jne
inc
jge
cwde
jmp
(bad)
and
jle
frstor
adc
fwait
icebp
mov
aad
push
test
(bad)
inc
push
cs
les
mov
jno
and
pop
adc
sar
daa
pop
mov
push
mov
ret
(bad)
fldenv
shr
in
cmp
stos
cwde
and
sub
out
add
cmp
lods
mov
test
out
aam
neg
jne
sar
push
neg
lds
test
sub
push
jle
dec
je
lods
(bad)
shr
cwde
push
aas
and
je
fsubp
inc
dec
dec
mov
push
push
sar
adc
mov
das
fwait
lock
sub
sbb
(bad)
mov
xor
mov
push
mov
ja
pop
sub
inc
jns
or
mov
push
push
add
mov
sub
and
push
adc
fist
push
xor
inc
sub
retf
scas
xor
scas
push
cdq
ror
xor
sar
fcomp
jp
inc
xor
push
mov
ja
mul
pusha
mov
sbb
jne
stos
inc
ret
ins
test
mov
pop
pop
cmp
in
sbb
jp
lock
push
retf
fidiv
jg
mov
jmp
stos
ficomp
pop
(bad)
aam
retf
sub
and
out
in
pop
xor
in
popf
nop
pop
mov
icebp
xlat
pop
xchg
xchg
xor
ret
xchg
mov
sbb
push
push
scas
jmp
mov
sub
jge
test
sar
stos
cmp
and
sub
lock
loope
(bad)
enter
lea
mov
mov
outs
and
mov
sbb
out
scas
dec
mov
aaa
ins
fnsave
jne
dec
mov
or
pop
mov
loopne
or
sub
add
inc
addr16
jmp
sub
or
lds
movs
mov
daa
pop
xor
jecxz
mov
jo
pop
mov
in
jp
or
in
ins
sub
push
fdiv
add
cmp
sub
jo
and
in
ficomp
fwait
push
movs
mov
push
fst
nop
cmc
dec
data16
int
shl
and
rcl
add
rcr
and
dec
and
scas
(bad)
mov
sti
push
or
push
xor
pop
mov
(bad)
mul
and
mov
push
xor
push
mov
mov
sub
test
inc
mov
jnp
test
ror
aad
dec
inc
shl
adc
cmp
fist
(bad)
or
or
pop
scas
xor
sub
adc
(bad)
fstp
data16
pop
push
leave
push
push
dec
sub
(bad)
or
outs
push
xor
mov
std
arpl
sbb
push
inc
and
pusha
test
dec
das
push
mov
jecxz
ins
sti
aad
mov
push
stc
sub
and
retf
mov
jmp
add
std
retf
cmc
cmp
popa
xchg
or
inc
ret
jo
xchg
cmp
arpl
add
or
jo
call
fnstsw
xchg
fidivr
pusha
jbe
dec
retf
ja
dec
fcom
inc
or
mov
das
jno
xor
mov
cmp
xor
fld
xor
xchg
das
pop
movzx
test
pop
xor
pop
lea
stos
xor
push
mov
or
jnp
in
mov
arpl
les
mov
xchg
jl
(bad)
div
test
cmp
add
and
fucomi
or
dec
cli
rcr
ret
xor
push
cmp
lock
icebp
add
xchg
fcmovbe
int
jmp
js
sub
sahf
jnp
xchg
lock
imul
cmp
scas
xor
mov
pop
out
dec
shr
sub
gs
inc
add
fs
push
xchg
ret
pop
pop
lock
ins
mov
test
enter
dec
mov
ror
push
mov
imul
sar
repnz
aad
sahf
pop
xchg
pop
jl
ror
(bad)
das
or
pop
xchg
das
std
out
pop
nop
dec
or
lock
mov
xor
int
ss
cmp
je
loopne
adc
mov
xchg
adc
adc
ficomp
mov
bound
pop
dec
pop
push
mov
push
(bad)
add
test
bound
adc
test
mov
push
in
arpl
sbb
add
and
pop
xchg
jge
jecxz
icebp
xchg
and
adc
adc
pushf
jge
mov
dec
test
mov
in
inc
or
ds
or
mov
add
xchg
xor
jp
pop
aaa
push
or
clc
addr16
or
jl
sbb
std
les
rol
rcr
das
xchg
mov
dec
sbb
movs
cmp
push
xor
lea
mov
mov
mul
cld
push
cdq
rol
add
sub
sub
adc
sub
jmp
dec
gs
cli
sbb
repz
mov
clc
imul
sub
out
xor
pop
cmps
push
xlat
mov
hlt
repz
mov
mov
cdq
out
cs
cmp
xchg
cs
or
xchg
xlat
mov
sbb
dec
mov
and
test
mov
les
sub
push
outs
ins
dec
rcl
ret
cdq
test
sub
xchg
ret
in
xchg
es
xchg
stos
sub
fldenv
adc
cmp
jns
or
out
aaa
cmp
push
psubd
pop
in
ja
cmp
jb
clc
lahf
cmp
pop
pop
icebp
mov
pop
inc
cmp
out
fimul
imul
inc
or
xchg
sbb
pusha
imul
fild
xchg
bsr
xor
sub
outs
cmp
lods
fcom
cmp
push
xchg
stos
jo
fld
ja
mov
(bad)
jae
popa
cmp
jmp
mov
popa
enter
js
mov
or
pop
ja
sti
in
rol
aad
dec
rol
jmp
je
mov
aas
mov
adc
jg
fwait
add
or
das
push
push
mov
push
clc
sti
rol
cmp
aas
lahf
pop
cmp
push
(bad)
xor
(bad)
fild
shl
pop
movs
ret
push
stc
dec
iret
cmp
pop
or
outs
jae
loope
pop
mov
ret
xchg
fsubp
add
mov
push
pop
xchg
push
mul
adc
cs
es
hlt
xchg
int3
add
jb
mov
adc
or
push
pop
cmp
daa
sub
or
mov
add
and
inc
dec
in
int
sahf
mov
push
pop
int3
cld
popa
sahf
mov
mov
shl
dec
into
dec
cwde
ret
dec
hlt
push
scas
sub
jmp
shl
dec
or
sahf
inc
(bad)
out
loop
mov
cmp
mov
inc
or
fld
mov
(bad)
xchg
psubb
xchg
mov
loope
jbe
fidiv
pop
cmp
ret
mov
sub
cwde
adc
loope
nop
imul
stos
xchg
xor
mov
(bad)
pop
jns
les
mov
cmp
jp
mov
cmps
movs
inc
sbb
cdq
test
scas
test
xchg
movs
xchg
stc
jb
cmp
and
fld
jl
enter
sbb
inc
inc
mov
arpl
test
sub
xor
fcom
or
add
push
ins
push
push
(bad)
xchg
je
xor
pop
push
rcl
mov
pushf
jmp
fstp
cs
mov
outs
aam
addr16
jb
mov
jno
aas
push
scas
jns
jno
add
sub
pusha
or
dec
sbb
pop
hlt
and
push
repz
fisttp
jo
mov
inc
or
sbb
ret
(bad)
mov
ror
ins
(bad)
bound
loope
rol
or
cmp
enter
sub
jp
push
inc
gs
sbb
xor
cmp
add
je
inc
sub
mov
das
cdq
mov
test
dec
jbe
mov
jo
pop
retf
push
fs
cdq
aaa
scas
and
adc
fbstp
xchg
push
aaa
lods
test
loope
mov
outs
inc
add
mov
sub
shl
dec
push
pop
jno
sti
mov
mov
mov
mov
mov
das
outs
xchg
add
jp
mov
pop
jb
cli
sbb
(bad)
jp
scas
aam
clc
push
clc
add
xchg
xchg
stos
pop
add
js
adc
add
fadd
mov
mov
addr16
and
xor
js
add
xor
(bad)
out
jnp
scas
aas
mov
fdiv
(bad)
leave
out
mov
ins
cmp
push
pop
add
mov
or
dec
cmp
dec
dec
pusha
mov
fmul
sbb
xchg
sti
add
inc
je
mov
retf
imul
stos
push
fist
xor
dec
ja
cmps
jmp
nop
mov
sub
mov
and
ins
(bad)
addr16
mov
cmp
inc
and
sbb
(bad)
retf
add
jae
add
leave
xor
push
(bad)
aaa
(bad)
jmp
shl
push
pop
mov
aas
push
jp
adc
(bad)
cmc
push
cmp
xor
and
ins
mov
add
stc
aad
js
loopne
ja
fldcw
stc
loopne
jns
adc
div
pop
inc
jp
mov
cmps
mov
int3
xchg
inc
and
xor
pop
pop
adc
mov
out
dec
pop
and
or
retf
jne
lods
mov
sbb
pop
lock
xchg
add
jl
sub
lock
test
pop
cmp
fmul
(bad)
xchg
fwait
ss
out
movlps
jge
cmps
adc
mov
or
outs
jne
jns
cmp
dec
rol
shr
xor
or
das
mov
sbb
mov
inc
jmp
sbb
cmp
jge
jno
xor
jmp
xor
(bad)
pop
and
pusha
pop
mov
rcr
and
popa
out
mov
and
cmps
dec
clc
out
mov
inc
pushf
jns
cmp
mov
mov
ror
sbb
pop
movs
mov
add
cld
popa
adc
xchg
pop
imul
jmp
cld
fcom
push
hlt
push
sub
xchg
mov
(bad)
fist
sbb
ss
dec
(bad)
ficom
inc
std
mov
cmp
jbe
lods
or
xlat
sahf
cli
sub
add
imul
mov
inc
mov
(bad)
(bad)
jae
cmp
xor
cmp
pop
inc
mov
jnp
sbb
sbb
lea
jl
add
or
xor
add
push
(bad)
xchg
mov
dec
mov
dec
test
ss
call
add
or
mov
adc
jle
aad
test
xchg
fs
aad
cmp
fcmovne
pop
out
push
repz
aam
ror
fisub
fs
jecxz
pop
in
(bad)
cmps
nop
cmp
xor
xchg
jbe
shl
fiadd
pop
aas
and
out
dec
das
aaa
and
outs
mov
jmp
pop
in
test
out
aaa
adc
ret
in
sbb
and
scas
cmps
xor
dec
leave
fisub
repnz
jmp
mov
mov
mov
test
int3
xchg
mov
aad
mov
xchg
push
ret
xchg
pop
in
aaa
outs
xlat
xchg
inc
mov
or
mov
into
adc
mov
jp
inc
retf
lock
xor
ss
gs
cmp
fidivr
jecxz
push
push
test
nop
mov
inc
enter
dec
add
lock
hlt
xchg
lds
push
cwde
ret
jle
call
rol
mov
and
in
jnp
cmp
test
imul
sbb
xor
fcom
jl
gs
jbe
jae
fwait
push
inc
aas
mov
xor
and
retf
inc
inc
jmp
mov
fwait
pop
or
push
push
cmp
fs
ret
pop
mov
dec
outs
xlat
iret
push
loope
sub
loop
inc
retf
stos
jl
or
popf
dec
or
out
and
je
cli
sbb
xchg
mov
fs
push
aam
aas
pop
mov
xchg
mov
xor
jnp
ret
(bad)
(bad)
mov
or
ins
fistp
jmp
sahf
inc
pop
adc
sub
jle
sbb
fs
(bad)
fidiv
shl
jb
shr
arpl
pop
loope
inc
scas
popf
mov
nop
sub
(bad)
imul
mov
jmp
enter
outs
push
int3
jge
pushf
je
mov
shr
mov
xor
cs
aam
call
jmp
in
jle
jo
add
push
in
adc
movs
mov
adc
jo
int3
jmp
arpl
jnp
mov
imul
mov
out
dec
push
inc
(bad)
push
jae
aaa
pop
adc
daa
lods
add
pop
pop
or
pusha
sbb
jns
push
imul
dec
mov
mov
mov
fs
sti
dec
repnz
rcr
dec
(bad)
arpl
shr
(bad)
out
inc
or
aaa
lock
pop
ret
outs
gs
mov
cmp
jge
adc
mov
cs
scas
adc
pop
xchg
stos
fwait
push
adc
cmp
aad
movzx
in
shl
xchg
imul
enter
cmp
repz
outs
test
imul
jmp
push
inc
test
daa
rcr
mov
cwde
pop
test
sub
test
adc
enter
xchg
xchg
addr16
and
ds
retf
aad
daa
xor
leave
enter
sti
retf
retf
xchg
psubq
add
sbb
out
ins
ja
loop
sub
pop
sbb
cmps
add
sbb
fsub
sbb
push
retf
dec
ins
popa
pushf
stos
jb
push
ins
pop
mov
add
and
or
movs
mov
mov
sub
ds
ficomp
test
bound
xchg
pop
or
xor
pop
sbb
dec
push
(bad)
fild
arpl
pop
scas
or
aam
and
and
lahf
mov
retf
dec
mov
inc
test
shl
and
push
out
xor
sti
adc
hlt
or
aaa
mov
loopne
aaa
rol
sub
out
fs
lds
idiv
sti
mov
gs
push
adc
dec
add
mov
in
mov
enter
mov
pop
mov
outs
pop
jb
es
enter
mov
sub
or
leave
pop
scas
pop
scas
mov
pushf
stc
das
add
mov
jmp
cmps
shr
rcl
pop
sub
mov
pop
adc
and
out
jo
shl
push
out
xchg
(bad)
pop
jg
xchg
inc
mov
shl
rol
jp
lds
pop
mov
adc
imul
adc
popa
in
dec
mov
push
jns
not
jno
shl
or
mov
shl
mov
nop
mov
minps
mov
cld
jp
mov
fsubr
icebp
xchg
jmp
loop
xlat
nop
rol
mov
jno
adc
push
sbb
cmp
aam
mov
gs
out
pop
js
shl
xchg
sub
mov
bound
inc
stc
lods
add
(bad)
or
or
mov
shl
rcr
loope
and
shr
mov
sub
test
pop
xchg
out
idiv
cmp
loope
push
and
and
loop
sbb
xchg
mov
call
fiadd
adc
daa
push
cmps
dec
add
js
paddq
push
test
loope
xchg
adc
sbb
out
icebp
mov
add
js
xor
inc
jne
in
dec
ret
and
cmps
jne
sbb
sub
jmp
popf
(bad)
push
add
mov
inc
inc
imul
cmp
cmp
push
dec
cmp
xor
rsqrtps
mov
out
jbe
mov
sar
test
dec
cdq
mov
push
and
nop
fsubr
xchg
dec
or
clc
jnp
mov
(bad)
sbb
call
clc
pop
loopne
cmp
mov
pop
std
xor
jno
lahf
mov
shl
and
mov
mov
out
jae
add
add
and
jb
adc
das
or
stos
mov
cmp
inc
shl
call
sub
into
jmp
scas
inc
inc
loopne
jno
in
out
out
jns
sbb
sub
and
xchg
addr16
push
lods
adc
lods
mov
and
adc
mov
lea
cli
scas
push
out
or
adc
mov
call
or
shr
(bad)
out
and
outs
cmps
inc
pop
call
jl
mov
fld
mov
cmps
cmps
int
out
shl
fsubr
test
retf
dec
loop
xor
pop
popa
pop
call
or
test
mov
sub
cmp
and
lahf
ss
adc
cmp
fmul
mov
and
mov
xor
imul
lock
adc
xor
test
lock
push
and
sub
fdivp
fwait
push
repz
push
mov
sbb
push
ins
cmc
add
int
fistp
sub
hlt
sub
cdq
sahf
dec
xchg
cmp
cwde
loope
stos
mov
scas
add
cmp
js
(bad)
mov
(bad)
gs
loopne
mov
jae
push
xchg
addr16
mov
ret
dec
icebp
mov
icebp
fsubr
pop
ins
aas
test
pusha
rcr
retf
sub
ja
enter
jle
out
mov
scas
bound
cwde
xchg
test
lds
push
cmp
and
daa
cmps
add
xchg
sbb
fs
(bad)
or
(bad)
rol
mov
std
fsubp
xor
cld
sub
dec
pop
fadd
xor
scas
inc
aam
adc
add
les
fnstenv
sbb
sbb
adc
push
in
arpl
pop
aas
sbb
sahf
push
mov
aaa
out
push
das
pop
jge
mov
or
xor
movs
scas
data16
or
imul
icebp
pop
xor
(bad)
jp
idiv
mov
or
jmp
(bad)
push
or
dec
cmp
sub
shr
mov
inc
int
jne
sub
jmp
dec
test
seta
ret
(bad)
xor
xlat
sub
shrd
fdivr
addr16
test
and
sbb
inc
ins
xchg
mov
ss
xchg
xor
call
sbb
out
sbb
neg
pop
add
xchg
push
add
pop
cmp
jnp
stc
push
(bad)
cdq
rcr
inc
stos
push
jmp
xor
data16
push
test
adc
and
mov
stc
rol
push
cmp
or
(bad)
jle
in
inc
sub
push
out
push
add
xchg
jo
mov
ss
xchg
or
outs
je
sub
mov
sub
out
aam
push
loopne
out
cmc
sar
cmps
cmp
jge
in
jns
jecxz
add
jns
dec
sub
and
stos
ds
sbb
dec
jmp
paddd
cmps
cmc
out
in
(bad)
jp
add
out
xchg
mov
add
inc
imul
push
jecxz
jnp
jbe
test
sbb
les
leave
cmp
ret
xor
pushf
sar
ins
(bad)
jno
nop
pop
loopne
xchg
cmp
lahf
or
add
mov
test
test
push
and
pop
mov
test
dec
mov
imul
jne
and
pop
int
repz
mov
add
inc
xrelease
icebp
add
test
xchg
jg
add
dec
aaa
pop
inc
jp
int3
leave
das
mov
js
jb
mov
mov
sbb
enter
and
fidivr
jb
adc
enter
adc
loopne
and
jle
jle
push
jp
push
icebp
jbe
enter
in
xchg
push
push
sbb
mov
sub
(bad)
into
bound
retf
in
test
rcl
clc
ja
pop
jmp
xchg
cmp
addr16
lahf
and
xor
fdivr
adc
retf
loope
cmp
or
pop
cmp
lock
sub
retf
mov
std
push
rcl
out
sbb
xchg
das
aaa
pop
test
fstp
aad
mov
cdq
jp
jecxz
popa
jecxz
mov
jae
dec
xchg
mov
push
lock
mov
push
cmp
xor
jmp
lock
xchg
out
outs
cmp
ret
(bad)
in
inc
push
and
pop
aad
enter
jne
outs
loop
and
push
bnd
std
stc
push
cmp
test
pop
xor
jg
push
mov
js
outs
imul
fcmovnbe
or
xchg
shl
rol
adc
sub
inc
cli
sub
inc
pop
test
mov
sar
mov
movs
adc
dec
es
js
push
mov
ret
xor
sub
or
nop
repnz
in
jle
xchg
daa
mov
call
out
lea
add
cwde
or
(bad)
xchg
dec
or
in
les
rol
sub
scas
int3
aaa
clc
sar
adc
jge
sub
pop
call
test
hlt
clc
out
pop
jno
in
ja
fist
xor
jge
test
jg
loopne
(bad)
jne
dec
xor
sub
cs
sub
cmp
sbb
stos
aaa
ins
adc
div
(bad)
mov
mov
inc
or
and
push
xor
jnp
adc
or
arpl
dec
out
lock
cmps
jle
cmp
jmp
cmp
push
and
xchg
retf
(bad)
fcomip
in
or
jnp
xchg
ins
dec
add
and
dec
pop
imul
mov
imul
and
cmp
sar
lods
adc
test
inc
mov
xchg
pop
pop
sbb
cdq
pop
sub
popf
add
cmp
ins
pop
push
repz
add
sbb
ja
outs
pop
das
cmp
adc
in
popf
test
fist
cmps
jge
test
add
cmp
mov
(bad)
pop
inc
adc
add
pop
mov
xchg
push
push
fst
and
add
mov
mov
repz
mov
pop
push
movs
cli
outs
push
inc
inc
jl
js
daa
pusha
movs
mov
or
jmp
pushf
inc
out
ret
or
sahf
fs
mov
sub
inc
fisttp
in
into
addr16
add
(bad)
ss
pop
mov
test
movs
outs
mov
add
xchg
jl
adc
daa
pop
mov
stos
repz
out
inc
sti
inc
(bad)
jmp
add
fcmovu
mov
and
jmp
int3
push
dec
push
in
and
dec
lods
popf
pop
shl
(bad)
in
ror
popa
add
sbb
arpl
fisttp
out
ja
mov
loope
(bad)
aam
loopne
clc
std
sbb
aaa
pop
inc
sbb
and
mov
mov
gs
sub
pusha
into
call
mov
push
push
ds
sub
sub
pop
jns
ins
ficomp
push
push
sbb
retf
mov
add
add
or
push
aas
shl
xor
fcmovnb
mov
cmp
sub
push
imul
mov
ins
dec
aas
fcomp
mov
div
mov
mov
and
pop
jb
in
mov
sbb
push
movlhps
or
ja
loopne
mov
and
lds
and
push
jne
test
mov
ins
rol
imul
sbb
jne
shl
xchg
mov
add
sub
jl
jl
ins
mov
xchg
jo
fs
inc
sbb
out
in
retf
jmp
mov
ja
push
mov
lds
je
in
out
xchg
shl
lods
ret
pop
sub
cmc
mov
mov
adc
mov
xchg
ja
xlat
cdq
push
repz
mov
add
xchg
out
dec
je
sub
xchg
pop
shl
jge
ins
aaa
mov
xchg
sbb
(bad)
mov
sub
es
enter
cmp
xchg
xor
mov
inc
or
mov
sti
adc
in
sub
arpl
mov
ror
pop
xchg
inc
in
fist
jb
outs
dec
je
mov
fs
xor
mov
pop
adc
xchg
add
call
pop
cld
imul
cmc
sbb
fs
mov
pop
imul
ins
idiv
mov
mov
add
rcr
and
pop
call
inc
je
mov
jne
or
jmp
or
add
cmps
push
mov
push
cwde
enter
cmc
aad
ret
mov
rol
jp
mov
test
(bad)
and
mov
aam
sub
imul
pop
call
retf
(bad)
hlt
loop
pop
ror
out
mov
add
jge
cmp
dec
jg
loopne
int3
add
cmp
lods
dec
repz
pop
retf
ss
jmp
adc
push
add
into
xor
pop
xor
pop
call
sar
ins
arpl
mov
dec
pop
add
xchg
inc
retf
add
mov
movs
mov
aaa
xlat
or
aam
test
imul
and
mov
out
and
or
sub
stc
leave
fdivr
sbb
sbb
inc
fsubrp
jns
cmc
cli
fsub
cmp
mov
xchg
adc
or
and
add
in
(bad)
dec
ror
mov
iret
mov
sub
out
jecxz
pop
jns
pop
ret
add
out
sbb
and
pop
(bad)
pusha
icebp
inc
dec
(bad)
or
ret
or
in
int
(bad)
cmp
xchg
nop
out
cs
out
or
sbb
jle
push
push
(bad)
das
and
out
outs
jmp
push
test
popf
hlt
(bad)
dec
jmp
add
jecxz
std
test
xchg
xchg
js
or
pop
cmc
push
loopne
ret
inc
or
lea
push
pop
lds
add
inc
dec
inc
rol
push
movs
cmp
in
xchg
or
dec
mov
dec
push
adc
lods
ja
(bad)
adc
lds
and
xor
je
mov
lods
inc
add
sbb
sub
jne
shl
sar
sbb
pop
xor
and
mov
pop
push
(bad)
repz
fisubr
and
retf
popa
push
mov
icebp
mov
popf
jmp
aas
fnstsw
xchg
rcr
inc
pop
pushf
call
mov
out
adc
cli
shr
sub
jmp
lods
jno
fwait
stc
xchg
repz
ds
inc
jne
mov
adc
mov
xchg
mov
repz
jae
push
dec
rcl
dec
cvtpi2ps
sub
bound
repnz
xlat
call
xor
inc
push
or
bound
and
retf
xchg
push
and
enter
sbb
dec
in
mov
xchg
out
add
mov
add
fwait
stc
mov
pop
std
push
sbb
pusha
les
in
or
add
mov
jo
(bad)
and
sub
ds
dec
pop
add
push
add
mov
mov
xlat
cmps
lea
js
sub
inc
lock
sbb
test
lea
pushf
cmps
shl
repnz
adc
pop
add
popf
and
or
loope
nop
and
test
int3
jl
mov
test
mov
outs
adc
mov
sbb
es
int
xor
(bad)
sbb
and
pusha
call
iret
rcl
scas
pop
dec
movs
movs
cmp
sbb
cmps
mov
jge
in
and
mov
mov
mov
nop
push
add
cli
fldenv
mov
xchg
push
or
sbb
sbb
shl
pop
mov
test
stc
xor
push
fiadd
jp
(bad)
jmp
in
ja
int3
outs
cmp
cli
sahf
arpl
pop
test
ror
xor
mov
or
adc
fist
xchg
push
cmp
loope
jl
and
imul
jge
div
push
jns
aam
dec
leave
cdq
ins
pop
outs
aas
and
mov
out
dec
push
dec
out
mov
pop
xor
push
push
imul
in
rol
mov
pop
fdivp
fs
xor
cmp
mov
sub
adc
xor
ja
call
shl
inc
fidivr
mov
dec
pop
loop
xor
retf
popa
std
(bad)
ret
add
out
dec
movs
jl
mov
fst
adc
and
or
inc
push
or
imul
sub
popf
(bad)
and
outs
add
cmp
mov
xchg
xor
mov
nop
icebp
dec
cwde
push
les
inc
jae
or
jle
mov
mov
mov
inc
stos
push
imul
inc
dec
and
add
push
jo
out
jne
lods
mov
inc
mov
jg
in
mov
mov
test
lds
out
mov
cld
shl
push
int3
adc
jmp
nop
xchg
inc
xchg
stc
jb
jo
out
jp
sub
cmp
sub
pop
sub
loop
xchg
daa
ins
ja
inc
lahf
or
xchg
cld
lods
xor
add
xchg
shl
in
mov
pop
and
loop
mov
xchg
cmp
sub
data16
dec
into
ret
xor
push
and
repz
ins
sti
mov
jb
test
sbb
push
jmp
daa
sub
or
(bad)
mov
inc
push
movs
(bad)
adc
xchg
jmp
out
inc
push
fdivr
adc
dec
out
ds
jl
and
fcom
retf
in
inc
mov
and
mov
mov
mov
mov
jle
rcl
push
ret
std
bound
xchg
test
fdivr
les
add
neg
pop
xor
retf
or
dec
push
mov
pop
jle
sub
or
mov
adc
sahf
in
cmc
add
ret
xchg
sbb
call
mov
inc
or
jns
cli
jge
xchg
push
lods
leave
xchg
lock
test
cli
gs
imul
mov
inc
ret
xor
jl
mov
jg
add
dec
or
or
(bad)
int
cmps
push
pop
jbe
stos
retf
mov
inc
sti
mov
pushf
lds
cmp
or
push
sbb
mov
sbb
mul
fistp
mov
add
and
aad
ret
ficomp
gs
movs
jnp
das
in
xor
cdq
cs
(bad)
retf
mov
pop
nop
mul
jne
and
sbb
cmp
loop
setg
and
sahf
push
stc
sar
mul
std
retf
adc
xchg
pop
dec
pop
(bad)
movs
aas
push
idiv
and
repz
push
jle
jnp
jecxz
xchg
push
adc
test
fidiv
adc
jbe
and
mov
loopne
mov
cmp
xor
and
jo
out
or
js
jge
sub
pop
mov
int
lods
cmp
scas
jmp
xor
jg
repnz
test
pop
mul
popf
aas
xchg
sub
mov
or
daa
adc
mov
cmp
and
cwde
pop
mov
pop
and
scas
lods
add
in
jecxz
retf
pop
mov
ds
pop
call
cmp
repnz
ja
push
imul
cmps
xchg
push
mov
loope
jae
push
or
cli
add
xchg
mov
or
idiv
(bad)
je
mov
jno
call
sbb
hlt
xchg
rol
jae
mov
nop
mov
dec
mov
fadd
pop
or
adc
add
(bad)
jmp
sub
push
dec
and
lahf
out
dec
es
mov
or
lods
jge
inc
dec
push
or
push
cmp
cs
push
add
inc
fs
adc
mov
leave
ss
mov
inc
pop
dec
js
mov
pop
dec
ret
in
call
cmp
retf
mov
xor
stos
xor
fcomi
adc
lods
xchg
retf
add
jge
pop
das
cmp
lahf
cmps
sti
pop
or
dec
outs
stos
stos
mov
cmps
cmp
shr
aam
jo
ret
sbb
in
arpl
mov
cwde
push
fnsave
mov
sub
je
pop
imul
sub
add
cmps
adc
shl
int
(bad)
inc
jge
aam
pop
out
int
xor
arpl
mov
xor
ret
mov
ja
pop
jmp
std
jecxz
test
movs
or
enter
cmp
lock
xchg
fadd
sbb
fimul
aad
shl
jl
dec
xchg
loop
mov
imul
cld
push
mov
pop
test
stc
test
fcmovbe
dec
out
pushf
xchg
icebp
mov
dec
sub
push
inc
fsubr
call
aam
cld
or
mov
or
cmps
popa
pop
jge
movs
add
sub
jne
std
dec
je
inc
xor
xor
cmp
std
push
add
out
dec
ja
js
cmp
test
data16
cmps
xor
es
call
sti
jno
mov
xor
xchg
ret
je
mov
mov
mov
mov
lahf
out
push
xchg
cmp
test
addr16
sar
call
inc
xor
sbb
inc
mov
mov
or
(bad)
int3
mov
aad
cmp
xchg
(bad)
mov
clc
(bad)
mov
xor
inc
and
pop
das
xacquire
sub
jbe
jns
enter
lock
add
movs
add
out
pusha
add
push
push
rcr
mov
repnz
mov
pop
inc
jbe
or
aaa
inc
sahf
movs
repnz
scas
adc
lahf
iret
jg
in
mov
add
dec
sbb
sar
sbb
jbe
stc
inc
cmp
push
ins
pushf
test
adc
sub
jecxz
mov
cmp
push
addr16
push
(bad)
dec
jbe
mov
fidiv
inc
jne
adc
sbb
(bad)
sbb
xor
(bad)
sub
sub
jnp
xchg
bound
sbb
mul
xchg
popf
push
adc
out
out
nop
xor
dec
pop
stos
jb
pop
in
xchg
out
mov
pop
in
ror
inc
pusha
hlt
sub
mul
mov
lock
or
(bad)
jmp
pop
cwde
cwde
mov
pusha
sbb
mov
movs
fs
jg
pop
mov
imul
fs
mov
pop
in
loopne
scas
in
xchg
and
lock
in
pusha
popa
pop
mov
cld
and
push
jl
pop
lahf
dec
cmc
(bad)
dec
jno
ret
stos
cdq
jbe
adc
iret
and
cmc
in
sbb
xchg
and
push
pop
mov
ins
adc
push
call
cmp
or
fiadd
sub
jmp
outs
sub
push
xchg
fisub
imul
fs
imul
(bad)
mov
clc
mov
xor
adc
test
fcom
add
and
push
and
dec
ret
sub
mov
inc
ds
push
in
int3
(bad)
stos
mov
push
fild
cs
rcl
jne
cmc
(bad)
pop
std
mov
das
mov
push
mov
cmp
les
movs
fidiv
mov
add
mov
jp
or
cs
jecxz
out
shl
mov
jns
jae
loope
in
mov
mov
iret
xor
push
sub
pop
retf
pop
sub
jb
adc
dec
sub
sub
push
jl
cmp
inc
outs
sub
das
lock
pop
mov
cmp
js
lahf
push
mov
call
repz
popf
test
pushf
mov
jae
int
aam
mov
loop
ror
int
xor
sbb
ret
test
ins
(bad)
xchg
jp
cmps
mov
out
mov
jle
push
js
pushf
add
or
push
out
adc
jbe
retf
dec
(bad)
jmp
mov
and
out
jl
lods
test
pop
in
test
in
push
fwait
dec
jmp
fwait
or
fidiv
xor
jns
mov
je
aas
fmul
and
loopne
mov
cmp
or
stos
lahf
or
mov
neg
dec
stc
dec
stos
mov
cmp
(bad)
push
xchg
dec
xor
fistp
xor
mov
add
or
ffreep
aas
(bad)
pusha
aad
mov
mov
daa
mov
lock
inc
mov
call
jmp
test
test
push
or
pop
pop
cmp
push
add
pop
mov
loope
shl
pop
lock
les
aad
(bad)
hlt
cmp
cld
mov
mov
sub
pushf
cwde
xlat
mov
test
ss
inc
push
lods
add
push
add
sbb
or
repnz
mov
pop
ins
mov
call
in
and
outs
lock
pop
jl
cmp
or
jnp
ja
pop
jbe
jl
sbb
call
(bad)
dec
call
iret
outs
push
repz
scas
addr16
cmp
inc
jp
stc
jecxz
in
push
cli
cmps
cmp
fsub
add
(bad)
inc
mov
int3
in
or
inc
pushf
jle
push
ret
lods
test
adc
je
adc
sbb
std
pop
fs
and
jno
inc
mov
fisubr
ja
dec
pop
mov
test
dec
add
lds
push
adc
or
xchg
xor
pop
aam
sub
test
add
lods
dec
or
and
push
push
xor
xor
and
retf
or
push
sahf
shr
movs
ds
mov
adc
pop
fst
jns
cmp
aad
enter
sub
cmc
adc
stos
adc
pop
cli
xchg
pop
imul
mov
shr
inc
sbb
jmp
fst
sub
mov
sub
sub
or
bound
loopne
js
mov
movs
jb
ret
jb
aam
jne
xchg
adc
gs
add
dec
lock
jbe
pop
div
aas
data16
test
jmp
mov
adc
pop
or
jns
pop
clc
in
xor
jns
popf
shl
mov
sub
retf
dec
sti
iret
(bad)
jmp
jne
or
cmp
cmp
or
dec
not
fld
daa
push
xchg
mov
es
lock
xchg
lock
fs
mov
fiadd
les
mov
in
push
pop
xor
inc
out
push
sbb
pop
fstp
fsub
pushf
movs
pop
mov
wbinvd
jo
cs
outs
pop
mov
and
movs
push
pop
fst
out
dec
fstp
inc
adc
sahf
repnz
mov
lock
int
jb
jmp
mov
fimul
and
sbb
lea
sub
xchg
sbb
lods
jb
mov
mov
inc
ret
mov
mov
xor
in
not
in
jno
sub
push
dec
(bad)
push
faddp
test
mov
or
pop
addr16
enter
rcl
icebp
inc
or
ds
xor
sub
cmps
mov
jb
pop
aaa
cmc
adc
push
loop
sbb
dec
xchg
lods
mov
or
sbb
fistp
push
js
jle
int3
movs
loopne
ins
loopne
jne
ds
and
ss
and
sub
sbb
add
lods
mov
test
fldcw
mov
or
cmp
add
scas
test
or
repz
mov
push
pushf
mov
cmp
pop
mov
iret
adc
sub
sbb
scas
mov
or
int
push
ins
daa
sbb
xor
or
out
inc
gs
mov
sub
push
ret
xchg
scas
sbb
xchg
call
mov
(bad)
xchg
mov
xchg
adc
fmul
and
fs
inc
or
shl
mov
loope
into
sbb
xlat
(bad)
jecxz
xchg
mov
shl
cmp
cmp
(bad)
hlt
test
cwde
xor
push
xor
xor
(bad)
js
mov
std
cmp
dec
push
lahf
jg
(bad)
ja
mov
cmps
icebp
inc
pushf
mov
jl
ret
imul
add
clc
addr16
nop
pop
lods
rcr
xchg
or
mov
retf
lock
sub
ror
mov
and
mov
push
in
xchg
xor
in
pop
fdiv
les
daa
jo
lds
aas
cli
mov
mov
dec
(bad)
(bad)
bound
stos
dec
fwait
out
es
out
pop
popf
mov
jb
call
pusha
inc
xchg
retf
cli
xchg
(bad)
movs
adc
(bad)
pop
mov
rol
mov
and
(bad)
and
inc
pop
test
clc
mov
ins
pop
sub
iret
gs
aas
loop
test
sub
pop
sub
leave
outs
xchg
xor
int
bound
dec
aaa
pop
add
inc
and
mov
ins
out
sub
mov
xlat
arpl
pop
je
(bad)
test
aaa
xchg
push
add
mov
gs
imul
scas
sub
gs
ja
lahf
xor
xor
ja
(bad)
in
push
add
int
xchg
cmps
and
icebp
pop
push
cmp
fld
push
out
and
mov
sbb
js
push
or
in
pushf
or
mov
movs
arpl
(bad)
(bad)
push
cmp
push
daa
clc
push
outs
push
adc
inc
dec
nop
sub
aaa
xor
hlt
pop
aad
sub
xchg
adc
psrad
sub
rcl
cmp
dec
out
in
adc
mov
das
ins
(bad)
jle
inc
sti
repz
inc
or
lock
ret
loope
fdivrp
stc
in
(bad)
bound
movs
movs
mov
sbb
(bad)
adc
leave
push
xor
mov
lods
fiadd
(bad)
sar
fwait
add
fisttp
fldcw
xchg
push
sub
dec
fwait
mov
js
pop
inc
sbb
call
xchg
jp
add
mov
push
pop
pushf
jno
and
out
sahf
dec
sbb
rol
pop
sub
or
mov
push
sbb
fstp
arpl
not
mov
adc
std
add
mov
lds
fnsave
cmp
aad
rol
ror
cmc
scas
add
sbb
jns
sti
adc
sahf
mov
aam
dec
mov
or
ret
pop
lahf
cdq
xor
in
test
enter
mov
ds
shl
rdtsc
imul
outs
and
adc
sar
imul
pop
xlat
xchg
add
cli
xor
retf
mov
push
stos
(bad)
mov
in
stos
rcl
mov
imul
jge
and
cli
xchg
sbb
push
jge
mov
push
mov
in
stc
cmp
mov
in
xchg
lea
xchg
mov
pop
sbb
adc
cmp
lds
sub
xchg
jmp
inc
ins
call
jp
out
call
adc
inc
pop
hlt
xchg
sub
xlat
pop
mov
aas
dec
mov
xor
ins
fsqrt
or
fistp
sti
inc
pusha
(bad)
jae
enter
sbb
adc
sti
dec
lods
or
int3
pmulhuw
loop
or
out
add
jnp
dec
mov
fiadd
cmp
xchg
(bad)
int3
and
(bad)
mov
mov
(bad)
xchg
fmul
fs
cdq
repnz
int3
sti
fcomp
icebp
jp
xchg
lea
pusha
and
call
mov
jae
sub
add
fistp
pop
cmc
add
xor
cwde
ja
scas
inc
mov
stc
lahf
int
enter
add
mov
sbb
sbb
pop
into
mov
and
and
and
test
(bad)
arpl
push
imul
(bad)
out
mov
out
test
clc
pop
xchg
mov
wrmsr
mov
(bad)
add
hlt
sbb
jbe
popf
push
mov
(bad)
jns
mov
sbb
scas
aad
stc
loopne
stos
test
xchg
imul
daa
lea
dec
fs
cli
mov
clc
sbb
pop
scas
or
add
(bad)
jle
ds
mov
sub
or
(bad)
enter
std
sbb
gs
jno
leave
clc
xchg
std
movs
callw
ja
loope
pop
sbb
jg
test
jns
retf
and
and
mov
les
test
mov
and
jle
add
or
(bad)
outs
repnz
push
sbb
add
sbb
sbb
and
push
es
hlt
pop
retf
ret
mov
lods
das
lds
cli
xchg
scas
ror
sbb
jnp
mov
sub
cld
imul
push
mov
and
mov
leave
inc
stc
mov
cmc
mov
inc
ffree
jno
add
mov
and
(bad)
fisttp
lahf
jo
sahf
scas
cmp
int
mov
xchg
lods
cli
cmps
ficomp
pop
mov
ret
dec
lods
and
mov
add
cwde
cmps
mov
test
sub
(bad)
xor
lock
out
mov
adc
dec
or
sub
call
fwait
lods
dec
stos
mov
(bad)
es
xor
adc
mov
movs
in
adc
(bad)
adc
xor
pop
pop
cmc
pop
cmc
inc
cmps
shl
mov
lods
(bad)
xchg
cli
das
or
jae
imul
ss
imul
sub
mov
jmp
mov
popf
push
int3
adc
lods
data16
mov
jle
pop
inc
mov
pop
fs
test
sub
cwde
push
sbb
je
(bad)
xchg
dec
(bad)
adc
fistp
popf
imul
jne
sub
push
scas
pop
push
dec
pop
das
pop
rol
mov
xor
adc
(bad)
jmp
xchg
jnp
add
repz
lods
mov
imul
sub
inc
in
popf
je
inc
ins
mov
call
add
std
dec
inc
adc
aad
xor
jmp
daa
dec
pop
pop
mov
add
mov
movs
push
xchg
in
fstp
push
pop
mov
pop
mov
jns
pop
xor
dec
and
push
dec
dec
lock
pop
and
mov
sub
rol
mov
jp
shl
dec
lahf
push
and
ds
add
aam
aad
(bad)
fadd
loopne
inc
fiadd
fdiv
pop
push
cmp
popf
cmc
daa
mov
ins
mov
adc
and
outs
push
mov
jo
and
fist
or
xchg
xchg
jl
scas
repnz
pop
jg
aaa
sbb
ror
stc
ficom
cmp
sub
push
sub
inc
pop
inc
mov
dec
add
dec
mov
inc
dec
pop
jbe
arpl
(bad)
cmc
ss
xchg
ins
retf
jmp
push
adc
sti
cmc
pop
xor
mov
xchg
or
dec
cmp
pop
call
in
aas
retf
mov
rcl
nop
xchg
inc
retf
push
rcr
scas
push
outs
and
aam
mov
bswap
lods
push
push
mov
not
jbe
sbb
repnz
jne
rcr
int
outs
cmp
sub
(bad)
and
pop
loope
sbb
mov
add
push
inc
mov
mov
in
jbe
mov
test
xchg
test
lahf
loopne
(bad)
out
xchg
jp
popf
loopne
dec
mov
push
call
(bad)
outs
mov
and
mov
sbb
push
les
es
jge
jno
mov
sahf
or
inc
push
cmp
scas
push
das
sbb
int
mov
sbb
or
jp
into
out
nop
adc
jmp
add
enter
mov
sub
sub
jnp
jp
pop
(bad)
pop
lods
xchg
ret
mov
pop
add
int
(bad)
pop
mov
retf
outs
sti
mov
sub
xchg
and
or
mov
das
in
neg
sbb
movs
push
scas
hlt
inc
adc
outs
lahf
call
mov
mov
rol
adc
inc
sub
dec
push
std
pushf
jae
xchg
retf
sbb
retf
dec
mov
fadd
(bad)
mov
pop
ds
inc
sbb
cmp
in
xchg
int
mov
add
jne
inc
jmp
xchg
cmp
mov
test
mov
xchg
pop
push
mov
or
push
inc
lock
repz
xchg
add
xor
aad
xor
shr
push
mov
popa
mov
adc
xor
movs
(bad)
fidivr
sbb
xchg
retf
sub
mov
pop
and
jns
dec
add
mov
outs
pop
inc
mov
je
ret
inc
repz
div
pushf
cmp
or
inc
mov
mov
sub
into
daa
rcr
xor
sub
xor
push
out
es
adc
(bad)
sti
clc
aas
jbe
int3
inc
jno
loop
mov
xchg
mul
ins
popa
out
sub
out
and
pusha
pop
ret
leave
in
(bad)
pop
lods
push
int3
test
push
int
sbb
es
les
iret
pop
pop
pop
jb
xor
xor
mov
out
retf
cmp
(bad)
cmp
fucomi
xor
ficomp
xor
sbb
in
fsub
loope
out
not
test
or
mov
xchg
call
mov
in
loope
xor
sub
jmp
and
fst
stos
adc
inc
repnz
scas
sahf
or
outs
jecxz
mul
loopne
adc
bound
cmp
add
cmp
sub
out
test
int3
lds
(bad)
pushf
outs
or
push
dec
shr
xor
ja
aas
mov
adc
inc
mov
pop
retf
xor
dec
xchg
loop
ja
mov
push
or
dec
clc
pop
out
fmulp
sbb
es
stc
loopne
aad
in
xor
push
mov
jbe
in
pop
mov
mov
int3
out
mov
mov
jmp
(bad)
cmp
das
inc
cmp
out
mov
jae
adc
push
aaa
jge
mov
rol
sbb
add
popf
es
sbb
xor
mov
mov
out
dec
pop
aam
dec
lea
adc
jmp
movs
test
ss
call
or
dec
std
pop
test
sbb
cld
jnp
adc
cs
mov
cld
sub
div
pop
ja
inc
jmp
mul
sbb
pop
or
mov
ret
mov
mov
out
jns
scas
aaa
dec
add
sbb
jo
pushf
add
adc
cdq
sahf
inc
xchg
xchg
jnp
xor
popa
test
lea
enter
mov
aas
xor
or
adc
jp
in
inc
jg
enter
scas
dec
mov
ss
ds
inc
popa
je
and
xor
add
call
xor
sbb
fwait
add
fisttp
or
xor
scas
add
push
ss
movs
in
arpl
cwde
popa
repz
or
outs
hlt
jno
dec
add
in
fs
daa
dec
jo
xor
mov
push
add
jmp
das
mov
inc
dec
and
pop
sti
icebp
xchg
test
or
out
mov
xchg
mov
cld
adc
mov
shr
push
and
jns
xchg
sbb
cmp
repnz
out
and
imul
or
mov
xchg
push
ja
adc
xchg
xor
xlat
cs
stc
cmps
int
cdq
fisubr
jmp
mov
jmp
retf
daa
mov
in
js
xchg
fnstsw
sbb
scas
std
gs
pop
je
cdq
xor
push
rcr
jmp
or
mov
sbb
movs
xchg
hlt
in
aam
dec
ins
ss
cmp
xchg
pop
jnp
scas
movs
cmps
and
jbe
mov
sar
pop
dec
sbb
inc
arpl
mov
mov
pop
xchg
das
(bad)
mov
(bad)
push
inc
popf
add
sub
push
fcmovu
pop
aaa
xchg
jnp
int3
mov
fnsave
jmp
jno
and
inc
adc
outs
into
xor
sbb
dec
sub
xchg
imul
aam
push
lods
sti
mov
int3
push
call
retf
dec
xor
inc
xchg
or
inc
outs
fsubr
je
fs
push
inc
adc
pop
and
jmp
mov
rol
sub
fmul
int3
pop
ds
cmp
sub
ins
push
sbb
and
xlat
xor
test
sub
sub
loopne
in
and
movs
cmp
sub
mov
iret
push
xor
xor
fild
jne
lods
loope
mov
cmp
in
mov
push
xlat
xchg
push
push
mov
int3
ret
mov
adc
cdq
add
mov
inc
jo
(bad)
jl
shl
test
mov
iret
fdiv
fcmovnb
pop
dec
jae
and
pop
es
add
not
and
add
gs
push
xchg
mov
mov
xor
adc
mov
inc
stc
adc
adc
xor
aad
xor
lods
jge
jecxz
outs
int3
inc
sbb
mov
(bad)
ficomp
push
mov
pushf
xor
adc
lahf
inc
das
or
mov
hlt
jl
hlt
sub
ins
movs
pop
fs
sbb
inc
repz
mov
xchg
jnp
mov
push
ins
cdq
adc
mov
(bad)
adc
pop
rol
das
call
jo
stc
inc
es
push
popf
pop
inc
fistp
imul
ror
cdq
bound
ficom
test
cmps
cmps
xor
cmp
(bad)
fcomp
imul
std
mov
scas
sub
jae
pop
mov
sbb
pop
into
and
or
out
aaa
dec
out
cmps
fsubr
xor
or
lahf
add
loopne
xor
lahf
push
loopne
hlt
mov
or
add
out
fsub
mov
lahf
sub
push
bound
test
mov
jge
xor
jp
pop
in
mov
in
sub
ja
dec
test
cli
sbb
fild
push
mov
inc
dec
or
std
daa
lock
xchg
cli
xor
jns
mov
loop
fnstcw
jge
sub
and
xor
sbb
std
repz
dec
gs
enter
jmp
mov
ffree
inc
loopne
idiv
jbe
add
bound
push
cld
dec
std
xchg
pop
inc
scas
jns
add
or
and
sub
and
scas
repz
cmp
xchg
add
dec
dec
mov
jno
addr16
mov
jge
and
jecxz
dec
or
lock
mov
push
inc
adc
adc
inc
stc
sbb
jb
xor
dec
jl
call
out
in
(bad)
es
popa
sti
(bad)
mov
cmp
or
cs
inc
repnz
or
or
jnp
and
sbb
mov
in
fcomp
push
lods
xchg
push
mov
lds
inc
in
inc
xchg
les
jg
leave
arpl
or
pushf
mov
out
sub
and
shl
mov
mov
rcr
das
mov
mov
popf
adc
aas
mov
(bad)
sbb
pop
xor
out
aad
fsub
enter
sahf
inc
lea
xchg
push
ret
sbb
fisttp
int
lods
pop
sti
cdq
test
push
std
imul
push
fadd
test
add
jle
in
push
in
(bad)
fcomp
enter
sub
sbb
xchg
loope
rcr
cmp
jae
pusha
inc
loope
mov
(bad)
adc
jnp
add
adc
xor
sub
sub
cwde
pop
mov
dec
mov
and
fcmovu
gs
ins
int3
jecxz
xchg
and
pop
div
xor
and
int3
pop
fwait
xchg
hlt
jle
sub
xchg
mov
sub
mov
mov
jb
js
sti
cmps
push
xor
push
ds
test
jg
sub
cdq
std
fidivr
retf
xor
mov
jbe
cld
repnz
jg
enter
out
pop
xor
out
int
jb
inc
arpl
in
outs
push
imul
push
test
inc
push
xor
dec
bound
(bad)
cli
ds
sbb
int3
cmc
push
mov
fadd
in
cmc
ja
adc
pop
mov
(bad)
fs
out
fcom
push
jne
add
iret
jge
mov
push
xchg
popa
loopne
test
jmp
mov
gs
xor
daa
ret
sti
fist
inc
sub
(bad)
xor
xchg
lea
push
mov
icebp
inc
mov
pop
jge
adc
dec
mov
cwde
adc
pop
bound
lds
adc
pop
test
adc
scas
test
mov
cmc
cmp
mov
jno
inc
inc
iret
push
or
mov
fwait
mov
cmp
popa
push
in
push
popa
ja
jmp
pop
jns
add
xchg
xchg
xor
sbb
retf
xchg
inc
cmp
pop
push
out
movs
push
pusha
xchg
pop
dec
(bad)
jg
mov
test
mov
cmp
jmp
pop
call
jb
dec
xchg
inc
jne
xor
add
adc
jecxz
aas
les
jmp
mov
xrelease
outs
fild
out
jle
xchg
cmp
push
and
(bad)
or
mov
adc
add
iret
in
fsub
icebp
push
xchg
push
stos
inc
xor
and
push
jmp
sbb
shl
xchg
add
call
jge
push
xor
jp
(bad)
iret
sti
pushf
outs
gs
(bad)
push
loopne
loope
fnclex
fdivr
int
out
les
movs
repnz
lods
jmp
fst
pop
mov
leave
cmp
mov
and
pop
pushf
in
fld
push
(bad)
fadd
aam
sbb
ficomp
in
test
js
cdq
sub
cmc
cmps
cmp
sbb
and
xsave
cmp
aaa
dec
(bad)
movs
int3
rcr
dec
or
ret
mov
cmc
dec
sbb
(bad)
sub
inc
cmc
add
push
or
test
or
cmp
fs
sahf
add
(bad)
mov
sar
stos
pop
xlat
or
sbb
mov
mov
dec
cmps
ja
int
mov
pop
xchg
lock
into
xchg
and
not
add
retf
mov
fisubr
inc
(bad)
(bad)
sub
movs
repz
dec
mov
adc
jg
jno
push
xor
jo
mov
loop
or
sbb
ins
(bad)
inc
or
add
xor
imul
je
sar
xchg
aam
mov
xbegin
iret
pop
pop
test
(bad)
cmp
retf
xchg
cwde
adc
mov
(bad)
jecxz
test
fs
scas
inc
lods
arpl
(bad)
call
pop
iret
add
push
fidivr
dec
sub
shl
loope
arpl
cmp
cmc
xchg
cmp
stos
mov
adc
mov
rcr
jl
clc
adc
leave
sub
imul
fistp
imul
mov
ret
test
ret
cmps
in
xchg
or
std
nop
xor
xchg
out
je
cmp
cmps
jo
push
sub
push
ret
cdq
jae
shl
xchg
dec
jae
mov
jle
xchg
out
xchg
sbb
loopne
fadd
mov
push
add
and
(bad)
inc
sbb
xchg
cmps
in
inc
sar
mov
pop
fmul
inc
out
in
adc
xchg
mov
out
inc
rol
int
inc
push
popf
mov
jecxz
(bad)
or
aad
test
push
shl
sahf
lods
cmc
mov
or
out
mov
lock
adc
fcmove
mov
lds
mov
mov
aas
ja
aad
lahf
test
aas
pop
jne
(bad)
es
or
les
cmp
adc
je
sbb
cdq
mov
add
xlat
sbb
cdq
mov
mov
movs
fild
cld
xchg
add
mov
cmps
aad
sar
retf
jns
mov
std
xchg
movs
scas
mov
jle
and
mov
call
push
fcmovnu
or
in
push
sub
fs
mov
jp
push
in
jo
sahf
ds
jnp
loop
aas
rep
mov
adc
shl
sub
xor
pusha
pop
std
or
cli
mov
sti
(bad)
pop
mov
add
and
jg
and
pop
mov
stos
rcr
imul
pop
rcl
add
inc
jmp
push
mov
aad
dec
stos
jle
xor
adc
pop
loope
clc
jle
xor
inc
(bad)
out
pop
pop
dec
add
lds
and
inc
fdivr
and
sahf
mov
enter
mov
call
fcmovnu
mov
or
add
into
cmc
pop
test
mov
jae
test
xor
hlt
jle
jae
add
cwde
xor
call
sbb
add
pop
out
fbld
mov
sbb
xchg
arpl
cdq
clc
sbb
sbb
repz
mov
or
adc
fs
jmp
es
or
nop
out
pop
jp
mov
jno
ins
arpl
lahf
inc
sbb
test
jb
ja
inc
jb
imul
aaa
pusha
pop
and
or
and
mov
jmp
out
dec
mov
stos
repnz
add
movs
sahf
aaa
push
pusha
pop
out
(bad)
ret
sbb
ins
inc
jmp
jmp
rcl
clc
push
jns
sub
adc
cmps
adc
sub
test
jle
sbb
mov
or
mov
movs
int
inc
out
mov
add
popf
pop
gs
adc
call
lods
ret
loop
iret
jnp
cld
std
or
and
call
pushf
test
adc
sbb
lahf
hlt
cmp
cwde
add
push
push
cmp
enter
pop
fcom
xchg
shr
or
je
repnz
push
pop
jmp
fstp
mov
adc
xor
in
xor
sar
mov
aaa
retf
push
sub
xor
bound
and
repnz
ss
cmp
(bad)
mov
xchg
bound
test
shr
je
(bad)
and
lds
or
adc
pop
es
push
inc
mov
popf
jle
scas
dec
rcr
push
inc
or
cmp
clc
and
and
mov
cdq
xchg
sbb
push
shr
dec
es
mov
in
les
das
fisubr
test
or
lahf
into
in
adc
xchg
adc
outs
out
sub
jl
mov
dec
pop
cdq
xchg
dec
xchg
jae
jmp
cmp
dec
js
or
gs
xchg
xlat
lea
dec
push
mov
cld
ja
sar
dec
mov
std
gs
xchg
out
xchg
pop
fstp
xlat
pop
or
inc
jge
clc
ficom
cmp
jecxz
rcr
inc
mov
div
inc
call
jp
cmps
cmps
sub
int
in
or
sub
pop
inc
sub
push
gs
adc
shr
iret
mov
aas
sub
cmp
ins
and
and
sbb
jg
push
mov
inc
ror
pushf
sub
adc
mov
call
or
cwde
inc
ins
in
inc
(bad)
out
cmc
dec
out
in
jb
or
sbb
test
mov
sub
mov
(bad)
jno
adc
bound
jecxz
clc
outs
pop
fwait
inc
fcmove
mov
mov
js
fcom
adc
ret
xchg
xor
aaa
push
sbb
retf
cmps
lods
(bad)
mov
dec
dec
mov
jp
call
inc
inc
out
test
repz
xchg
pop
cs
sbb
fcom
sbb
retf
mov
inc
push
mov
pop
dec
sbb
cdq
iret
pop
shl
outs
jns
and
push
sub
fwait
or
mov
std
addr16
push
imul
cdq
scas
or
cmp
push
cmc
out
aaa
or
retf
imul
fwait
mov
icebp
rcr
leave
cmp
mov
adc
(bad)
cmp
push
out
cmc
retf
pop
dec
add
push
stos
cdq
push
addr16
inc
sti
dec
aad
push
cmc
mul
rcr
scas
test
dec
into
push
hlt
pusha
leave
jns
cmp
pop
lea
mov
cmp
aad
mov
and
push
mov
stos
cmp
mov
xchg
xchg
sbb
hlt
sbb
icebp
(bad)
(bad)
das
push
mov
pusha
adc
xor
push
pop
adc
jge
jg
out
push
out
dec
push
or
xor
fs
push
jmp
retf
add
fisttp
mov
mov
jge
call
fcomp
cmps
fidiv
add
lods
sbb
fiadd
mov
jp
sub
pop
cmp
jmp
cld
retf
movs
push
jmp
xchg
mov
dec
pop
mov
inc
cmp
mov
mov
mul
xchg
push
in
lods
out
daa
popa
xchg
outs
out
iret
(bad)
push
mov
sub
adc
aaa
jecxz
pop
pop
dec
push
add
pop
inc
dec
push
mov
das
ficomp
or
jbe
out
stos
in
mov
cmp
rol
outs
add
shr
or
push
cmp
xchg
mov
adc
repz
outs
pop
and
int3
inc
mov
inc
imul
out
pop
pusha
rcr
mov
lea
add
imul
into
sbb
xor
or
lea
out
jnp
dec
cs
cmp
pop
fild
cmp
mov
jmp
jnp
ret
fbstp
(bad)
and
add
mov
aaa
dec
add
push
mov
mov
lahf
or
lods
jmp
arpl
mov
mov
push
fstp
mov
add
jae
das
xchg
mov
jle
call
mov
mov
mov
cmp
mov
imul
fdiv
adc
inc
mov
lea
in
aad
xchg
scas
push
sti
fisttp
or
mov
mov
lahf
stos
xchg
sub
jae
mov
mov
mov
push
fsubp
jb
les
cmp
das
mov
mov
int
add
add
out
or
aam
jae
cmp
cmp
add
cmps
sub
mov
jp
inc
test
aaa
mov
push
test
mov
sti
pop
sub
ret
imul
cmc
or
sbb
jbe
stos
ret
mov
dec
add
popf
push
inc
(bad)
(bad)
(bad)
stc
dec
xchg
adc
pop
js
inc
jmp
(bad)
mov
fimul
cwde
jno
adc
add
push
sub
mov
sub
adc
jl
sub
ja
xchg
sbb
rcl
(bad)
fiadd
pop
sub
sub
ret
mov
(bad)
push
pop
sub
pusha
ss
sub
imul
outs
mov
das
cmp
and
jmp
sbb
push
fild
xor
cwde
add
stc
enter
cmc
sub
adc
mov
stc
sbb
cmp
aam
(bad)
in
xlat
sub
add
jge
adc
arpl
sub
lahf
test
repz
push
std
leave
add
xchg
jmp
cmp
xchg
dec
into
jmp
out
out
cmc
scas
mov
retf
in
sti
pop
repnz
sub
adc
mov
or
aas
xchg
stos
and
dec
push
sub
or
xor
sbb
das
gs
mov
cmp
pop
mov
hlt
add
stos
adc
int3
sbb
leave
mov
or
push
xor
pushf
and
cs
sub
sbb
mov
mov
sub
jp
cdq
cmps
sbb
ret
sbb
in
aam
sub
data16
pop
mov
je
and
xchg
ins
lds
sar
lea
ins
cmp
bnd
pop
ror
call
fxch
sti
push
pop
xadd
and
push
out
or
xchg
jnp
sti
jbe
fisubr
out
mov
(bad)
jo
jbe
pop
div
xor
pop
sub
mov
push
data16
popa
inc
sbb
imul
fidiv
daa
jne
lock
retf
xor
scas
jge
pop
sub
sub
push
jo
pop
sbb
fldcw
leave
ret
inc
cwde
hlt
std
outs
xor
mov
adc
sbb
into
inc
daa
out
popf
mov
or
dec
mov
push
or
fldcw
psllw
mov
(bad)
xor
cmp
inc
sbb
sub
rcr
aad
mov
add
or
popa
fsubp
cmp
aaa
inc
inc
addr16
stc
mov
pushf
gs
dec
mov
inc
push
fnstenv
icebp
leave
lds
pop
dec
cmp
stos
adc
daa
bound
sub
test
mov
add
and
cmc
xchg
adc
add
daa
cmp
ja
call
shr
popa
test
inc
ins
add
test
mov
mov
sbb
mov
dec
test
icebp
xchg
adc
stos
repnz
jno
mov
mov
mov
retf
dec
push
stos
xor
pop
dec
or
xchg
inc
xchg
shr
cs
inc
add
adc
jae
adc
lock
popf
jae
jge
mov
aam
xor
push
es
dec
push
nop
(bad)
sbb
iret
mov
inc
cmp
push
jne
dec
add
and
push
xor
push
into
leave
inc
sti
push
in
je
xchg
sbb
inc
and
pop
add
push
inc
aaa
pop
pop
jp
mov
frstor
dec
mov
sbb
in
push
ja
inc
scas
jns
add
lods
adc
ror
bound
xchg
jns
in
enter
int
mov
ret
fwait
and
loopne
call
cmp
mov
xor
pop
jno
mov
sbb
retf
jge
dec
in
cli
jl
shl
sub
outs
(bad)
sbb
bound
push
sbb
push
adc
fcos
or
iret
pop
(bad)
fdivrp
pusha
scas
repnz
xor
repz
jne
scas
cmp
xor
fsub
dec
xor
inc
xchg
ja
dec
aas
pop
jne
adc
mov
sub
pop
mov
into
(bad)
adc
jns
mov
test
call
push
call
sar
sbb
lods
data16
sub
lods
mov
pop
jno
cld
sbb
pop
les
inc
pop
in
sbb
and
outs
cwde
cmp
std
(bad)
shl
lods
or
bound
cmc
pop
in
addr16
mov
mov
into
xor
inc
mov
call
push
sub
out
sbb
jge
dec
jno
ret
inc
cmp
dec
mov
sti
cmc
pop
dec
mov
(bad)
cmp
or
cmp
ret
inc
pop
xchg
pop
js
es
(bad)
push
adc
xchg
and
mov
cmp
mov
ret
mov
push
jg
cmp
pop
stc
cmp
retf
dec
cmc
xlat
cmp
sub
nop
and
mov
loop
ss
push
imul
sbb
call
popf
mov
out
jae
cmp
movups
sbb
in
call
sbb
jae
push
jo
std
inc
das
xchg
mov
std
ds
scas
pop
and
inc
jae
mov
jne
or
enter
loopne
stos
xchg
push
fwait
xor
pop
shl
in
stos
and
dec
in
push
sbb
ss
dec
fdiv
mov
push
or
pop
repz
aaa
or
repz
xchg
imul
xor
enter
fimul
enter
xlat
fsubp
cwde
pop
sub
push
cs
stos
or
dec
out
push
scas
fst
mov
stc
test
cmp
jp
fldcw
add
lock
dec
pusha
loop
sbb
dec
or
ror
and
ins
mov
push
in
mov
jno
lods
aaa
mov
int3
out
pop
scas
rcr
mov
ficomp
cmps
aad
jnp
(bad)
pop
test
cwde
aad
xchg
push
fstp
inc
jmp
test
xchg
xchg
push
cmp
add
mov
cmp
fucomi
jo
xchg
outs
and
shl
rcl
retf
outs
js
daa
adc
or
inc
ror
xchg
repz
out
xor
or
arpl
adc
inc
cdq
gs
test
cwde
inc
sbb
pop
sub
dec
mov
movs
in
aaa
inc
(bad)
and
repnz
cmps
in
fld
leave
lock
pusha
inc
sub
into
stc
add
mov
ins
pushf
mov
movs
xor
fistp
cmp
(bad)
das
jge
dec
inc
xchg
fnstcw
sub
test
push
ins
inc
shl
push
in
fmul
mov
adc
mov
add
mov
test
(bad)
cmp
pusha
pop
aaa
mov
push
and
es
outs
push
pop
mov
mov
xor
jle
data16
and
mov
push
push
dec
pop
mov
ins
or
cmp
xchg
stos
in
sbb
lods
mov
ret
or
xlat
sub
mov
outs
retf
std
frstor
aad
adc
ret
push
cmps
xor
es
xor
mov
and
das
push
in
push
dec
sar
jmp
push
xchg
and
mov
lods
movs
pop
nop
pushw
or
jp
push
adc
jb
or
push
lods
test
mov
fwait
test
add
and
inc
push
dec
mov
push
std
add
repz
mov
sub
xchg
loope
adc
jmp
or
std
jge
(bad)
add
mov
ins
(bad)
cmp
fwait
jle
cmp
xor
pop
pop
sub
sbb
pop
sti
(bad)
jl
sahf
cdq
dec
xor
int
out
gs
xchg
sbb
lock
hlt
and
nop
mov
mov
retf
je
mov
inc
or
sub
outs
jge
xor
or
popa
xchg
scas
mov
ss
cmps
ffree
push
or
lahf
or
xor
mov
xchg
pop
iret
inc
xchg
xchg
push
lock
and
cmp
(bad)
jg
mov
xchg
adc
dec
mov
sub
rcr
and
adc
or
in
inc
out
add
lods
sub
nop
sub
ror
int
xchg
(bad)
dec
jno
adc
add
pop
xlat
ins
sti
inc
push
mov
mov
mov
popf
das
and
test
pop
jle
ins
sub
push
sbb
xor
lds
jno
pushf
or
(bad)
cmc
jp
inc
aaa
cdq
or
arpl
pop
out
sbb
dec
ja
or
(bad)
call
mov
leave
clc
psubusb
fwait
sbb
xor
jmp
jo
cmp
push
xchg
mov
jae
arpl
xchg
dec
sub
fild
call
out
movs
cmp
and
jg
inc
add
ss
dec
and
imul
loopne
xor
mov
mov
jmp
jmp
cmp
mov
test
out
jmp
sub
fs
lock
arpl
in
push
dec
xlat
jge
aam
lea
mov
push
or
lahf
imul
jmp
pop
lods
cmps
pop
test
or
mov
ja
cs
jo
cdq
ds
add
ficomp
mov
out
out
mul
retf
call
js
leave
mov
xor
out
fs
add
test
loop
jbe
pop
inc
push
rcl
scas
jbe
ds
jmp
popa
adc
rcr
lods
hlt
push
push
cmp
cmp
lds
cmp
sbb
jge
pop
sub
shr
test
jmp
imul
and
xor
arpl
mov
adc
call
lods
push
pop
or
into
mov
mov
(bad)
hlt
xor
adc
popa
adc
(bad)
fadd
or
pushf
sub
mov
sub
movs
mov
test
sbb
(bad)
hlt
jmp
mov
jbe
sbb
scas
jmp
push
sti
add
das
(bad)
mov
sub
mov
aas
test
mov
xchg
stos
xchg
push
jae
rcl
cs
outs
add
jge
mov
out
adc
xchg
push
inc
and
jne
jecxz
inc
xor
mov
jbe
push
push
repnz
jg
fiadd
jmp
int
pop
js
add
xchg
pop
adc
cli
push
jg
push
or
sbb
mov
call
enter
dec
bound
test
adc
sub
(bad)
daa
enter
cdq
jo
inc
mov
in
push
into
pop
jge
jp
push
mov
xor
jg
popa
lea
inc
data16
xchg
out
xlat
mov
sub
call
xor
aaa
aam
jne
push
fbstp
and
jl
icebp
inc
pusha
sub
ss
adc
add
push
xor
inc
clc
hlt
vcvtss2si
mov
cmp
stc
cmp
test
cmp
sub
and
fdivrp
or
bound
test
mov
mov
inc
movs
cs
test
push
sar
nop
enter
and
(bad)
pop
es
fwait
loopne
jecxz
mov
(bad)
jecxz
fcomp
stos
scas
jb
mov
(bad)
adc
scas
cmp
into
and
repnz
test
js
add
sbb
add
or
pop
mov
aad
adc
mov
and
xchg
mov
push
addr16
ret
cld
js
iret
mov
cmp
scas
jle
adc
xchg
or
jmp
mov
pusha
pop
dec
add
mov
pop
push
int3
enter
or
jl
add
or
mov
les
fst
shl
div
cld
mov
(bad)
xchg
rcl
iret
jbe
xor
lds
sbb
movs
push
xrelease
inc
cmp
jle
dec
out
cwde
lods
sub
popf
cmovle
mov
push
fmulp
push
cmp
dec
call
push
pop
inc
jmp
clc
xchg
adc
int
mov
mov
dec
mov
dec
imul
or
jle
and
xor
shr
imul
test
cmps
fcom
jg
add
jo
and
xchg
(bad)
push
mov
pop
cmc
adc
ret
or
mul
stos
ret
leave
push
sub
ds
sbb
cld
mov
pop
mov
out
mov
jmp
mul
push
push
cli
push
mov
imul
or
clc
gs
adc
cdq
fs
clc
cmp
mov
xor
outs
imul
sub
out
rol
adc
stos
dec
repz
xor
mov
test
mov
mov
fwait
lods
int3
mov
or
pop
mov
adc
fiadd
sbb
lods
mov
pop
popf
xchg
rcl
call
jb
inc
clc
js
out
sub
out
jmp
push
pop
dec
pop
pop
jecxz
mov
test
fld
xor
or
sbb
ja
js
mov
xchg
(bad)
int
(bad)
and
neg
mov
loop
repz
test
dec
xchg
dec
ret
addr16
add
lods
cmp
imul
leave
imul
lds
cmp
mov
inc
mov
ins
outs
dec
fisttp
lock
cmp
shl
call
xchg
adc
addps
push
cmc
ret
add
sar
cli
mov
call
(bad)
gs
repz
adc
leave
fs
inc
adc
rcl
sub
xor
mov
push
gs
push
(bad)
sbb
inc
push
jo
pop
or
in
stos
jbe
cld
add
enter
cmps
imul
xchg
xchg
mov
mov
repz
push
mov
push
mov
fnstcw
jno
imul
sub
iret
rcr
jg
or
es
add
sub
jmp
popf
jne
arpl
(bad)
popf
mov
popa
cmp
xchg
das
adc
int3
xchg
cmps
jle
add
sar
loop
movs
nop
add
or
aad
iret
arpl
dec
or
ret
stc
or
lock
push
cmp
mov
or
add
cmp
test
out
pop
(bad)
cmp
pusha
xor
outs
jnp
iret
(bad)
sti
out
outs
mov
xchg
retf
inc
scas
pop
popf
retf
enter
in
cmp
test
mov
aad
rcr
iret
sub
in
pop
fwait
xchg
sub
je
sahf
in
ret
das
dec
lock
jmp
adc
ds
fistp
(bad)
cmc
lods
add
inc
cli
sahf
call
fnstsw
pop
out
pop
sub
pop
(bad)
loop
retf
push
daa
mov
mov
adc
dec
fcomp
inc
out
les
loopne
icebp
mov
sbb
iret
inc
in
in
jns
mov
(bad)
ins
shl
mov
xor
add
push
out
jecxz
repz
dec
mov
ja
adc
mov
sub
jne
add
stos
mov
xor
jl
outs
popa
je
jno
scas
jge
adc
movs
push
(bad)
xchg
std
rol
adc
mov
cmp
dec
das
jecxz
in
ds
test
sbb
mov
or
inc
xor
mov
sbb
inc
adc
push
push
pop
inc
stc
or
das
mov
sub
xchg
cmp
jl
sbb
inc
div
cld
xchg
pop
pop
mov
cmp
mov
mov
popf
dec
pop
ror
mov
adc
pop
pop
icebp
sbb
in
test
in
sub
inc
cmp
inc
std
fistp
sar
ja
ins
mov
mov
add
jno
pop
xchg
jnp
pop
fwait
mov
sub
leave
push
push
sti
push
inc
test
call
fdivr
mov
inc
stos
test
push
cwde
mov
sub
in
and
jo
jmp
jne
mul
repz
add
mov
rcl
dec
pop
ret
pushf
mov
jno
sti
fistp
sub
push
cld
pop
inc
lahf
lds
test
mov
aas
inc
movs
ret
adc
jns
aam
mov
(bad)
pushf
ins
mov
(bad)
std
iret
add
cmp
ins
retf
pop
adc
xchg
setns
int3
sar
stos
jnp
mov
je
inc
sub
xor
sub
jp
pop
bound
int3
retf
mul
mov
hlt
xchg
sahf
inc
push
and
push
ret
daa
mov
outs
lahf
bound
xchg
rcr
pop
call
or
int3
jnp
jb
jo
scas
fdivr
push
ins
(bad)
aaa
adc
cmp
call
jge
push
sub
xor
and
sbb
xor
adc
enter
sub
cmp
(bad)
les
sbb
clc
mov
stos
das
jge
shr
or
je
adc
in
xor
sbb
and
mul
jno
jns
and
(bad)
dec
out
dec
cmp
push
adc
adc
in
clc
data16
iret
mov
push
mov
sbb
std
mov
pop
sbb
sahf
cmps
pop
push
shr
clc
jbe
fnstenv
stc
repnz
loope
dec
in
test
jb
arpl
adc
pop
xor
cli
sub
adc
cmc
shl
or
stos
mov
xor
fldenv
aad
xchg
inc
xchg
xor
jg
adc
pop
dec
loopne
in
push
pushf
mov
inc
xchg
int3
add
mov
and
cmp
shl
xor
test
pop
and
into
test
sub
aad
jge
push
and
sbb
mov
scas
sahf
sbb
daa
xor
sbb
mov
mov
ror
xor
xlat
stos
bound
call
or
leave
jge
cld
push
test
std
call
jg
mov
inc
cdq
push
or
movs
add
pushf
pop
push
or
or
cwde
aam
mov
leave
jo
in
(bad)
fcomi
xor
(bad)
mov
lahf
adc
sub
cmp
cwde
mov
mov
imul
xor
aad
mov
add
pop
rcr
fwait
mov
jl
adc
adc
fs
cmps
aad
dec
jg
ds
and
mov
cmc
xor
pop
aas
fidiv
push
outs
mov
imul
xchg
stos
pop
movs
or
adc
jns
icebp
lock
int3
retf
retf
in
stos
push
add
retf
dec
inc
dec
mov
or
dec
inc
sub
dec
pop
ja
int3
mov
test
retf
test
sub
xchg
leave
mov
xor
or
push
sub
jno
cs
mov
mov
adc
(bad)
retf
and
mov
pop
mov
out
add
pop
(bad)
icebp
ins
stc
inc
or
retf
stc
and
movs
inc
dec
fyl2x
call
xor
mov
dec
cmp
sub
fisubr
(bad)
jmp
sar
jmp
mov
cs
ja
mov
clc
or
pushf
cdq
stos
popa
push
dec
sbb
fldcw
gs
out
pop
cmc
(bad)
pop
(bad)
stos
ffree
cmps
in
pop
aam
in
or
fsubr
inc
nop
loop
xor
jo
dec
fiadd
daa
and
push
xchg
test
pop
jmp
pop
push
xor
aam
fmul
mov
inc
scas
or
xchg
pop
leave
inc
push
pushf
mov
push
jl
adc
pop
js
jbe
cmp
aaa
pop
rcl
xchg
pusha
popf
out
jmp
push
cli
pop
enter
xchg
out
add
mov
in
mov
sbb
mov
out
adc
sub
cmp
imul
add
cmp
jle
out
leave
or
scas
fucom
push
loop
or
cmp
push
iret
xchg
js
jbe
pop
imul
inc
mov
cmp
nop
sub
pop
sahf
std
fs
inc
retf
movs
icebp
inc
icebp
sub
or
out
mov
clc
or
sbb
xchg
popa
scas
sub
stos
call
mov
pop
xor
cld
xor
or
jns
sub
repnz
rcr
sahf
aam
movs
xor
mov
add
sub
cmps
stos
xor
fcmove
pop
mov
shr
lods
stos
inc
jecxz
inc
out
iret
lods
dec
outs
jnp
mov
repz
jle
aam
adc
pop
pop
int3
int3
stos
shl
mov
imul
mov
cmp
xchg
push
pop
mov
push
mov
pop
jbe
xor
lock
retf
outs
call
stos
inc
lods
es
cwde
and
mov
jb
adc
sbb
mov
mov
(bad)
in
push
out
stos
cwde
add
fbstp
mov
push
jbe
hlt
xor
retf
xchg
fmulp
sub
sub
out
push
jae
xchg
std
out
jmp
jg
ret
(bad)
repz
push
test
add
pusha
cmp
mov
xor
sbb
dec
ret
and
or
sbb
push
xchg
icebp
lock
test
mov
jg
fist
(bad)
cmp
shr
mov
loope
dec
xor
loopne
xchg
xchg
push
pop
retf
pop
jmp
call
movs
mov
inc
or
or
mov
dec
add
mov
xchg
dec
sahf
out
aaa
or
sbb
cmp
pusha
int3
add
aaa
pop
cli
int3
test
push
xor
inc
lock
push
into
retf
out
xor
lea
retf
arpl
sub
pushf
loopne
in
out
stos
or
(bad)
mov
mov
stc
xlat
dec
cdq
dec
in
aam
lods
mov
rcl
arpl
xchg
shl
cmp
addr16
in
push
or
fadd
mov
add
lods
push
mov
push
push
test
pop
in
push
fucomp
daa
mov
sub
call
loopne
dec
mov
std
sbb
dec
push
jmp
xor
inc
in
nop
fadd
addr16
test
fldenv
push
sub
jle
cs
push
pop
lds
cmps
add
mov
jg
push
add
popa
inc
aad
in
sar
push
pushf
sub
sar
ret
loope
in
scas
push
jae
xchg
cmp
fwait
pop
jmp
scas
xor
dec
cmp
sti
jns
mov
mov
leave
xchg
addr16
enter
stos
rcl
imul
fsubr
sbb
add
mov
out
or
sub
sub
mov
les
mov
cmps
fldenv
test
ds
(bad)
dec
sar
sub
push
std
mov
fiadd
cli
mov
sbb
sub
lock
mov
(bad)
in
mov
cmps
xlat
push
xlat
inc
in
movs
cmp
shr
adc
pop
in
int3
add
lea
or
loope
je
mov
cdq
dec
jo
scas
jnp
hlt
jp
xchg
movs
clc
int3
jno
test
out
and
xor
xchg
or
je
pop
popfw
mov
stos
add
aad
aam
inc
mov
clc
sub
mov
push
add
inc
push
dec
cmp
mul
mov
(bad)
je
jmp
or
int3
icebp
mov
cmc
fdivrp
and
sahf
scas
jb
jmp
and
mov
jmp
pushf
jecxz
ins
jl
mov
ror
outs
xchg
rcl
push
(bad)
xchg
add
hlt
cmp
in
xor
mov
aad
mov
or
ret
dec
(bad)
repz
sub
sti
jmp
mov
inc
lock
stos
aas
cmp
cs
mov
jecxz
(bad)
jecxz
add
and
fidiv
jo
int3
pop
adc
clc
cmp
or
xchg
inc
add
mov
shl
inc
fdivr
mov
mov
fisubr
sub
pushf
mov
retf
std
stc
pop
daa
mov
mov
adc
sub
or
in
fs
pop
add
add
mov
mov
and
clc
fsub
and
in
xchg
scas
inc
and
jecxz
(bad)
push
stos
adc
and
jle
(bad)
ins
and
xlat
sbb
daa
test
loopne
ret
call
aad
retf
push
jmp
cmp
out
pushf
inc
data16
(bad)
mov
add
xchg
movs
jae
xor
hlt
push
sub
nop
in
mov
or
sbb
inc
repnz
mov
aad
or
xor
mov
dec
sbb
cwde
das
aas
inc
xchg
cmc
add
mov
or
mov
sbb
pop
xchg
and
mov
pop
push
jmp
mov
clc
into
or
mov
jge
pusha
retf
loopne
adc
mov
cld
cli
sahf
push
xor
ins
mov
dec
mov
cmp
pop
mov
mov
mov
add
clc
es
fistp
lods
push
dec
pop
cmp
pop
ja
mov
ins
sti
outs
enter
sub
sub
xor
pop
dec
mov
push
fnstenv
dec
mov
jp
les
(bad)
xor
cmps
shl
push
add
jb
push
sahf
ins
or
mov
aas
cmp
inc
xchg
hlt
adc
inc
loopne
sbb
pushf
pop
popf
sub
cmp
stc
add
jnp
jg
cdq
xchg
adc
loope
or
dec
daa
mov
push
cmp
ins
stos
out
pop
inc
mov
push
sbb
ret
cmps
add
inc
push
pop
pop
jbe
repnz
sub
xchg
adc
jmp
mov
cmp
lahf
xor
ret
(bad)
fbld
cld
jno
xor
cld
sub
mov
call
xor
adc
movs
mov
scas
cmp
cli
push
mov
retf
adc
mov
mov
fstp
xchg
xor
cmp
push
lods
popf
loope
fisubr
dec
pop
in
add
test
jbe
ja
fsubr
adc
mov
adc
movs
cmps
(bad)
adc
mov
sub
mov
inc
sub
pop
and
or
xchg
mov
fcom
popa
or
fidivr
or
int3
sub
lods
add
movs
pop
xchg
adc
or
ja
mov
scas
sbb
scas
xchg
push
inc
stc
push
mov
js
jae
shl
fdivrp
test
lods
ins
adc
sbb
cmps
iret
cmps
(bad)
mov
pop
lods
int3
loop
fs
test
in
data16
daa
push
sti
arpl
retf
out
into
pop
or
sub
fild
inc
test
mov
sub
xor
shl
adc
add
mov
mov
leave
jle
xchg
mov
sub
popa
pop
mov
sub
hlt
push
or
test
rol
test
jge
dec
ins
lea
push
push
adc
mov
mov
ret
mov
pusha
jnp
enter
jmp
stos
xor
jno
mov
sahf
pop
imul
outs
inc
jne
les
xchg
xchg
jmp
xchg
dec
jmp
xchg
adc
cld
out
inc
iret
ret
add
icebp
mov
repz
jbe
js
int3
push
adc
mov
push
add
lahf
xor
shr
xor
int
inc
out
retf
call
(bad)
or
inc
test
sub
inc
in
fdiv
or
mov
lea
fimul
xor
(bad)
(bad)
dec
movs
mov
mov
mov
mov
mov
shr
dec
push
gs
test
dec
movs
pop
cmps
int
rcr
movs
sub
push
dec
fdivr
mov
cmp
dec
xchg
mov
data16
aaa
jb
sub
push
mov
je
rcr
or
in
gs
or
cmp
and
shr
(bad)
jg
mov
jmp
stos
je
jnp
gs
pusha
or
add
mov
outs
push
outs
into
sti
dec
push
sub
jbe
add
add
push
sbb
jge
fdivr
leave
jle
jae
(bad)
arpl
sub
fst
jmp
jb
cmp
ret
adc
cmps
pop
call
loope
mov
jmp
inc
cmp
aad
xor
(bad)
test
adc
mov
jo
push
shl
pop
mov
mul
cdq
cmp
adc
cmp
repnz
lahf
in
mov
int
push
add
xor
jmp
inc
(bad)
rcl
clc
jl
mov
adc
stos
mov
fwait
nop
sbb
jb
pop
xchg
inc
aad
mov
sbb
loope
xchg
sub
cmp
ret
je
ret
sahf
dec
lock
cmp
inc
imul
add
test
lods
test
test
sbb
jl
fist
sbb
out
xchg
sub
sti
int3
pop
xchg
and
data16
sar
out
and
sbb
push
fwait
cmp
mov
(bad)
mov
pop
sub
lods
cmp
shl
cld
add
cmps
addr16
dec
ins
push
shl
enter
je
int
dec
jmp
jbe
jnp
ss
xchg
test
punpcklbw
test
mov
push
jmp
je
fsub
lds
dec
mov
cmp
and
mov
inc
jmp
cs
cmp
pop
push
sbb
into
jbe
out
mov
mov
gs
out
push
pusha
int3
lock
xor
inc
fistp
or
jnp
js
gs
xchg
xor
cmps
inc
mov
sbb
outs
mov
sbb
push
shl
ins
fisubr
pminsw
adc
sbb
aaa
fs
fnstcw
(bad)
in
pop
test
xchg
push
jne
bswap
xlat
lea
sbb
ret
jmp
imul
and
add
xchg
push
(bad)
dec
cmp
jecxz
push
xor
lods
pop
inc
imul
inc
addr16
icebp
or
add
(bad)
addr16
call
scas
jns
loopne
mov
xchg
in
repnz
shl
dec
outs
and
or
lods
cmp
push
ficom
ds
xchg
aaa
adc
movs
iret
lds
test
sbb
pop
and
adc
shr
in
fidiv
pop
push
popa
mov
add
push
pop
mov
cmp
in
les
scas
cmp
jns
cmp
inc
addr16
inc
out
xor
sbb
ins
daa
ja
std
and
les
sub
lods
movs
cs
push
xchg
sub
ins
push
dec
stos
dec
inc
cs
pop
out
test
cmp
add
inc
pop
into
fimul
and
sub
loopne
call
js
jle
or
iret
call
int3
out
sub
clc
out
dec
sub
or
lds
(bad)
xchg
cmp
xor
and
popf
test
cwde
(bad)
in
aam
loop
inc
jmp
cs
in
fdivr
push
add
pop
sbb
adc
retf
and
pop
mov
repnz
inc
or
pop
iret
je
pushf
push
jmp
aad
push
lods
dec
push
ret
and
hlt
pop
pusha
mov
push
jno
add
aas
mov
cmp
ss
lods
jae
shl
es
inc
loop
sahf
pushf
mov
retf
movs
mov
fcomp
mov
(bad)
ja
mov
(bad)
mov
stc
outs
repz
pop
shl
sar
fcomi
xor
daa
push
inc
push
inc
cmp
cmp
or
clc
add
push
dec
sbb
xor
cwde
cmp
dec
fwait
push
pop
ret
ins
adc
inc
fchs
js
mov
bound
shr
cdq
pop
movs
fwait
dec
dec
pop
repnz
xlat
dec
sub
test
cld
(bad)
xor
jp
or
jae
clc
mov
(bad)
and
push
dec
dec
xchg
xchg
outs
cmp
adc
lock
dec
cld
pop
popf
jo
or
cmps
ret
xchg
or
sub
das
cmp
das
pop
and
int
sub
push
pop
retf
sahf
mov
retf
cwde
(bad)
push
gs
adc
rcl
mov
mov
dec
neg
sub
xor
jmp
stos
pop
xacquire
sahf
fbstp
rcr
je
pop
movs
out
mov
mov
xor
pop
cmc
sbb
test
(bad)
movs
push
cwde
cs
ror
cwde
pop
sti
mov
ret
sub
test
ja
or
jecxz
add
sbb
inc
or
pop
xlat
lea
jbe
push
mov
mov
and
push
xlat
mov
and
xchg
xor
add
push
mov
imul
pop
lods
xor
repnz
push
mov
fild
icebp
sahf
adc
push
xchg
hlt
dec
dec
push
mov
or
cwde
stos
sbb
xchg
mov
je
jmp
arpl
lods
sub
or
nop
jo
out
xchg
stos
call
fmul
cmp
xchg
xchg
dec
push
push
jnp
int
cli
(bad)
pop
sub
and
add
xchg
test
and
xchg
xor
jno
outs
push
stos
das
repz
jb
pop
int
pop
enter
jae
xor
push
mov
mov
push
jmp
pop
outs
aaa
or
mov
fwait
and
xor
and
retf
imul
pop
sub
jmp
mov
jg
aas
sbb
cmp
mul
and
fcmovnu
(bad)
push
push
fidivr
adc
mov
sbb
in
retf
lods
retf
popa
mov
es
mov
add
scas
mov
mov
adc
enter
inc
xor
sti
ror
repz
jnp
ins
dec
sahf
sti
retf
and
xor
adc
or
jne
xor
fisub
mov
mov
mov
ins
jecxz
fcomp
(bad)
and
pop
or
mov
sahf
das
pushf
xor
fdivp
popf
dec
int
popf
ins
mov
add
es
(bad)
jns
pop
mov
bnd
jg
leave
mov
inc
retf
iret
test
rcl
movs
hlt
neg
mov
cmc
neg
mov
mov
cmp
sub
and
aad
ss
add
add
adc
push
adc
or
push
cmp
lods
push
repz
retf
jle
fidiv
push
push
inc
push
fidivr
xchg
fdiv
cs
mov
mov
jmp
addr16
outs
loop
(bad)
into
jecxz
mov
cmp
frstor
add
mov
cmp
cmp
mov
dec
pop
inc
(bad)
aas
xchg
mov
lods
and
leave
popf
std
xchg
mov
mov
mov
fdiv
int3
cmp
add
xchg
add
inc
jmp
push
js
std
test
test
loope
lods
and
fs
xchg
inc
fmul
fwait
cli
inc
adc
xor
mov
jecxz
dec
mov
adc
pop
mov
or
mov
xor
test
ds
push
ins
cmp
sbb
(bad)
fdiv
lahf
mov
sbb
push
cmc
push
push
xchg
loope
jle
mov
sbb
or
cwde
sub
dec
cld
shl
dec
inc
neg
add
clc
pop
xchg
and
mov
stc
dec
aam
int
loop
in
fmul
outs
jmp
cmp
push
sub
scas
or
xchg
add
xchg
mov
lds
pusha
push
push
aad
ret
sbb
int
dec
(bad)
test
inc
(bad)
sbb
gs
shl
fsubr
out
lods
imul
out
fadd
js
mov
js
sub
pop
sbb
iret
mov
clflush
ja
mov
mov
(bad)
std
adc
mov
(bad)
jp
jb
les
xchg
lods
mov
cmp
call
out
pop
cld
je
mov
cs
or
sub
push
int
gs
in
fimul
push
xchg
cmp
sbb
add
xchg
or
inc
mov
cwde
sbb
ds
nop
call
adc
(bad)
cmp
mov
fbld
cs
jo
in
cwde
fdivr
add
aaa
sbb
xchg
scas
adc
mov
popa
dec
push
xor
mov
frstor
pop
mov
retf
dec
xor
cmps
outs
xchg
pop
mov
(bad)
hlt
(bad)
sti
jnp
jge
lahf
repz
loope
push
cmp
sbb
in
jle
(bad)
adc
scas
fsubr
adc
enter
out
jle
outs
cmps
inc
xchg
in
lods
mov
xor
jle
sbb
je
ins
adc
mov
ret
pop
jmp
pop
scas
add
and
xor
data16
sbb
into
cmc
and
inc
mov
test
adc
or
test
inc
cmp
jnp
and
and
add
inc
and
inc
iret
and
fiadd
push
popf
mov
clc
xchg
(bad)
jb
and
or
sti
xlat
shl
imul
jne
add
push
int
ja
sbb
nop
cld
mov
inc
aad
cmp
jg
ret
adc
jecxz
fstp
lea
icebp
mov
add
push
(bad)
imul
mov
cmc
add
cmc
xor
xlat
ds
mov
sbb
fbstp
idiv
test
cmp
mov
loope
pop
push
mov
and
jbe
sbb
sub
push
pop
out
xor
(bad)
mov
popf
shr
shr
push
nop
stc
jo
mov
adc
mov
adc
(bad)
or
xchg
push
bound
mul
cli
jo
jb
cmc
(bad)
lds
pop
xchg
dec
loop
stc
aaa
in
or
xor
cld
aas
je
jmp
xor
push
jno
mov
repz
fsub
xlat
es
in
nop
int
retf
mov
xor
or
inc
inc
xchg
stc
shl
xchg
stc
inc
and
and
leave
int3
add
and
and
xor
shr
aas
push
mov
dec
addr16
nop
and
jbe
repz
nop
mov
and
repz
in
jae
(bad)
pop
arpl
lock
movs
popf
xchg
jae
in
sub
aam
mov
in
aas
mov
or
scas
sbb
sbb
sti
add
movs
jo
jae
sbb
jmp
xchg
out
nop
pop
ret
in
xchg
fisubr
xor
dec
push
(bad)
ficomp
mov
das
addr16
scas
rol
pushf
outs
icebp
sub
sbb
scas
wbinvd
cdq
in
jno
mov
out
mov
test
inc
push
call
cld
outs
mov
dec
rol
xor
cmp
outs
cmp
aas
sub
xchg
add
jbe
sub
movs
lods
leave
pop
gs
outs
pop
out
syscall
cmc
lea
aam
push
xor
pop
cmc
mov
fs
sbb
inc
xchg
fadd
outs
or
dec
ficomp
outs
or
movs
daa
xor
scas
sahf
fwait
adc
jge
pop
loope
fcomp
cld
(bad)
push
and
jae
scas
add
or
inc
out
pcmpgtd
cmp
and
imul
pop
aad
sub
rcr
sahf
bound
cld
out
pop
jnp
jmp
jae
jae
mov
sbb
add
mov
push
cs
call
pop
(bad)
nop
or
je
jno
adc
mov
mov
mov
lea
mov
lds
popa
mov
cli
ror
dec
fbld
(bad)
hlt
leave
ret
cmp
pusha
jb
aaa
loopne
(bad)
fcmovnu
add
xlat
rcl
out
loop
jg
mov
add
ret
fisubr
loopne
pop
pop
fisttp
jbe
(bad)
mov
inc
jb
retf
push
mov
mov
xor
gs
mov
jecxz
jl
add
gs
adc
imul
pushf
or
mov
clc
or
imul
xchg
sti
cmp
xlat
dec
loope
arpl
xor
sub
in
adc
sub
push
and
(bad)
call
and
(bad)
call
shl
push
adc
mov
stos
adc
cmc
inc
or
xchg
sub
fcom
jo
pop
das
or
sub
dec
in
call
ror
fucomp
shr
jmp
jno
scas
sub
sbb
jno
push
push
mov
add
(bad)
pop
sti
pushf
xchg
cmp
sbb
xor
inc
xchg
loop
in
imul
mov
shl
dec
nop
mov
call
int3
or
pop
mov
inc
pop
lea
aad
outs
sbb
cdq
push
xchg
add
sub
mov
cmps
stc
sub
in
pop
in
push
icebp
shr
fcom
enter
sbb
and
jo
fadd
out
cdq
(bad)
call
pop
lods
daa
les
arpl
pop
stos
inc
xor
shl
gs
adc
scas
xchg
mov
mov
mov
ds
or
sub
pop
mov
mov
shr
gs
cmps
sbb
stos
and
add
imul
xchg
cld
sar
jae
dec
ds
mov
(bad)
out
adc
fldenv
sub
ret
bound
inc
cmp
mov
shr
retf
out
das
(bad)
out
lock
movs
and
pop
jl
sub
adc
ror
dec
aad
mov
mov
mov
mov
jnp
push
sub
push
(bad)
mov
nop
jecxz
das
sbb
enter
and
mov
jb
outs
mov
pop
les
lea
cmp
mov
movs
mov
add
jae
sub
cdq
dec
dec
inc
out
cmp
outs
jo
add
jle
ret
jl
push
std
in
and
adc
fst
test
rcl
pop
xor
inc
pop
push
jb
jmp
mov
sub
mov
push
or
js
jb
sbb
int
add
mov
movs
lock
pop
ins
add
and
jp
iret
iret
lahf
retf
jne
sbb
std
imul
push
fmul
cmps
xchg
adc
sub
jmp
outs
jmp
mov
into
icebp
inc
popa
int
or
leave
mov
(bad)
push
mov
loop
xlat
sub
hlt
add
mov
xor
lea
cld
pop
dec
scas
(bad)
cmp
jmp
stos
sti
mov
inc
and
jl
pop
inc
gs
ror
mov
sbb
push
(bad)
repnz
in
inc
or
ds
mov
(bad)
xchg
xlat
jne
and
imul
rcr
stos
pop
sar
ret
push
and
fs
xchg
sub
scas
(bad)
jne
in
bswap
std
out
dec
mov
push
xor
xchg
out
inc
xchg
jne
call
jmp
sar
and
push
xlat
pop
xor
adc
aaa
popf
pop
or
rol
stc
arpl
je
aas
cmp
es
les
nop
in
shld
or
mov
fdiv
mov
pop
dec
arpl
aad
hlt
stos
ficomp
xor
push
adc
push
jno
dec
es
fidivr
or
or
pop
pmullw
jmp
or
pushf
aas
pop
je
adc
jge
jle
push
push
mov
xor
jecxz
fcom
add
mov
sub
sar
imul
bound
inc
push
cmp
mov
dec
jae
outs
gs
mov
adc
scas
mov
(bad)
lods
(bad)
fdivr
stc
push
inc
iret
mov
or
sahf
adc
xchg
les
dec
in
retf
ins
push
or
ficomp
pop
stos
je
adc
dec
or
dec
or
inc
gs
outs
not
retf
pop
push
adc
pop
fisub
or
stc
push
pop
(bad)
jge
sar
jp
cmp
and
(bad)
lock
jno
loopne
(bad)
and
test
xchg
and
and
cmp
scas
(bad)
daa
scas
lock
gs
ret
cmp
loope
xchg
push
jmp
int3
fs
jle
jp
loope
xchg
rcl
div
jnp
mov
mov
rcl
in
ins
lods
jmp
loopne
mov
fs
popf
add
in
push
sub
lahf
in
int
dec
lods
std
loopne
and
int
clc
pop
jb
out
push
push
add
add
pop
cmp
imul
push
jb
push
xchg
stos
pop
jp
int3
sbb
dec
mov
adc
inc
jecxz
scas
clc
inc
call
out
sub
test
sub
and
lods
lods
out
xchg
mov
hlt
pop
pop
aaa
push
(bad)
aad
sbb
daa
mov
lea
jns
fimul
jnp
xor
jne
push
lods
mov
rcl
imul
(bad)
pop
(bad)
cmp
mov
and
jnp
push
repz
fsub
push
loopne
sub
pusha
pop
sbb
mov
out
adc
jle
sti
xchg
cmp
das
sbb
or
div
imul
push
stc
mov
xor
imul
pop
dec
aam
add
sar
add
lds
dec
sbb
push
push
or
push
mov
out
test
xchg
cmp
std
inc
sbb
imul
mov
aaa
or
pop
(bad)
enter
sub
scas
daa
outs
leave
lahf
adc
mov
daa
mov
adc
cmp
iret
and
mov
pushf
fild
mov
scas
es
jl
and
add
repz
dec
xor
ss
fcomp
jle
outs
ins
lock
daa
js
or
ret
imul
(bad)
(bad)
cmp
mov
fistp
ret
xchg
std
jb
sub
pop
ret
cmp
sbb
cmp
sub
ja
pop
hlt
xlat
fcomp
mov
push
out
test
mov
add
fimul
aam
call
sahf
mov
cli
jl
xchg
leave
pop
add
stc
inc
add
mov
out
push
sbb
jns
adc
mov
gs
pop
int3
inc
popf
jbe
(bad)
jmp
xchg
jae
popf
scas
mov
retf
sbb
fisttp
push
fcom
in
push
mov
je
inc
ds
push
xchg
sub
mov
or
adc
fs
shr
or
mov
repnz
push
scas
sub
mov
inc
and
fiadd
dec
sbb
sub
je
cmp
das
mov
cmp
das
fcom
test
or
push
mov
movs
stos
test
xor
xchg
sar
sub
fcom
mov
ds
jecxz
nop
pushf
adc
in
and
cs
gs
scas
aas
pop
mov
not
imul
jmp
mov
fcomip
ret
sar
je
mov
pop
es
fisubr
fst
repnz
xchg
out
pop
fwait
cld
repnz
push
in
and
mov
push
movntps
stos
hlt
(bad)
in
push
lods
xchg
dec
daa
aaa
push
add
stc
imul
in
out
pop
popa
(bad)
scas
retf
xchg
inc
mov
std
rcl
aas
push
jg
xchg
cwde
xchg
xchg
fisttp
fcom
retf
test
inc
push
mov
mov
mov
pop
or
adc
mov
cli
jne
fucomip
cmp
pusha
fld
xor
or
and
and
dec
pusha
in
in
or
or
rcl
inc
jl
leavew
mov
jle
mov
jp
sbb
xor
loopne
mov
sti
(bad)
cmp
in
mov
xchg
mov
pop
sub
or
lahf
jmp
dec
int3
dec
ficom
cdq
pop
call
dec
sub
stc
pop
cmc
sub
bound
push
sub
aad
mov
dec
jge
sub
mul
out
stos
std
xor
and
pop
xchg
mov
ins
jmp
outs
sub
and
dec
inc
sahf
mov
clc
pop
add
stos
xlat
jo
(bad)
jl
adc
mov
imul
fcomp
or
mov
js
mov
mov
int3
aaa
mov
jbe
ror
movs
aad
xchg
inc
lea
add
mov
jle
pmulhuw
call
jg
ror
ins
(bad)
test
je
and
fsub
pop
inc
sub
xor
inc
push
inc
out
mov
jg
addr16
jmp
mov
and
mov
out
cmp
ins
push
lahf
pop
pop
hlt
aad
lea
jle
dec
pop
mov
mov
xchg
jmp
(bad)
mov
shl
add
pop
test
dec
pushf
dec
rcr
aad
imul
call
pop
xlat
mov
das
into
loop
fst
pop
mov
mov
aad
(bad)
leave
add
cld
push
push
daa
stc
lock
push
sub
ins
(bad)
add
movs
jmp
inc
cmp
push
mov
pop
mov
and
push
sbb
fist
mov
push
call
sub
mov
repz
push
mov
push
push
adc
mov
addr16
dec
scas
cmps
push
add
mov
sbb
mov
xlat
lods
mov
ja
movs
ror
fidiv
iret
ins
test
mov
inc
sti
leave
xlat
add
inc
enter
xchg
adc
cld
or
push
sbb
imul
scas
dec
sub
cdq
and
daa
fsubr
or
mov
into
jbe
into
daa
sub
(bad)
repz
loope
dec
cmps
scas
mov
mov
adc
xchg
fcom
xor
das
mov
sub
stos
or
pop
sub
jge
push
out
in
daa
jmp
in
xchg
retf
mov
xor
sbb
sub
jbe
sbb
mov
jns
fldz
hlt
xchg
sbb
lods
fldenv
leave
(bad)
push
lea
icebp
add
ja
rol
pop
push
dec
xchg
jmp
and
dec
fmul
jmp
jecxz
xor
adc
dec
mov
sbb
jge
sub
xchg
push
and
outs
rcr
add
jmp
fist
push
ror
push
sbb
mov
ins
icebp
xor
or
or
call
retf
pop
fs
add
sahf
lahf
inc
pop
addr16
cmp
pusha
inc
jp
lods
es
aaa
dec
call
inc
out
int3
outs
xor
xchg
adc
icebp
pop
out
call
pop
xchg
rcr
cmp
add
sbb
pop
xchg
test
adc
inc
popa
jl
call
jmp
jecxz
les
pop
inc
ins
jo
fisubr
pop
test
xchg
push
push
xor
sti
mov
arpl
pop
mov
mov
ss
pushf
movs
hlt
das
push
shl
out
mov
push
push
push
pop
sbb
pop
js
das
jno
out
(bad)
xor
aad
test
aam
ins
cmps
adc
addr16
inc
sbb
mov
xor
mov
loop
or
fcmovb
xchg
(bad)
ja
jbe
mov
or
cmc
psllw
xchg
jl
popf
mov
and
xchg
mov
in
jmp
stos
xor
pop
fisub
pop
imul
fsubp
mov
ds
dec
mov
fwait
imul
shl
adc
push
mov
fsubr
cwde
mov
pop
outs
clc
test
and
xchg
xchg
cmp
das
sbb
adc
popa
enter
icebp
(bad)
pop
xchg
sti
dec
es
icebp
mov
mov
in
(bad)
imul
xchg
xchg
inc
add
test
pop
mov
adc
bound
pop
call
cmp
(bad)
scas
iret
fistp
test
sub
sub
mov
inc
mov
mov
lods
add
push
test
sub
push
and
sbb
xchg
cmp
mov
xor
push
jmp
hlt
mov
dec
retf
adc
adc
sti
rcr
test
mov
movs
aam
stos
pop
dec
repnz
cmc
js
cld
addr16
inc
ins
cs
and
xor
popf
sub
adc
lods
inc
inc
mov
or
int3
cmp
(bad)
icebp
in
scas
(bad)
and
cdq
add
rcl
fsubr
xchg
in
repz
int
mov
outs
pop
call
retf
adc
push
test
jp
sub
loopne
pop
loop
(bad)
sub
or
mov
mov
adc
add
fwait
jle
dec
mov
or
ffreep
add
std
or
xchg
popf
sbb
shl
or
pusha
add
jae
dec
aas
out
jns
jnp
out
or
mov
aaa
cli
scas
pop
fmul
mov
inc
mov
inc
enter
inc
cmp
xchg
xchg
out
std
sub
cmp
jnp
lock
sbb
adc
push
(bad)
cs
xor
rol
cmp
ds
imul
hlt
bound
pop
ds
pop
out
xor
(bad)
xor
xor
pop
push
scas
cld
jge
(bad)
cli
mov
inc
jne
xor
imul
pop
pop
shr
arpl
and
and
sbb
retf
test
add
jg
push
iret
sbb
dec
popa
cmc
(bad)
push
mov
loopne
dec
sbb
add
push
mov
xor
and
fidivr
popa
pusha
mov
or
nop
push
pop
inc
out
dec
dec
call
fistp
std
ret
fbld
mov
adc
daa
and
jl
mov
gs
stos
test
sub
adc
pop
sbb
mov
sbb
sbb
mov
push
imul
test
repz
leave
sbb
out
xchg
sub
xor
mov
jo
sahf
jns
mov
(bad)
push
ds
mov
and
retf
scas
pop
sbb
daa
xchg
loope
cmp
sbb
int
and
sbb
scas
icebp
retf
pop
bound
les
xchg
xchg
dec
loopne
inc
and
stos
xor
pop
fild
sub
repnz
stos
sub
fadd
and
not
adc
push
dec
jns
stos
push
xor
add
inc
popa
jmp
push
or
ror
rcl
add
imul
fmul
xor
sar
pusha
std
mul
retf
or
push
jecxz
jl
jle
mov
dec
cli
or
in
arpl
and
(bad)
loopne
outs
mov
pop
mov
rcl
shr
in
adc
(bad)
loopne
pop
sub
mov
pop
mov
call
loopne
shr
sti
ins
mov
push
popf
adc
enter
nop
int
popa
sub
fistp
in
dec
cmp
cld
in
dec
in
sahf
xor
jo
sub
xlat
ins
scas
jmp
lahf
fstp
dec
and
dec
dec
scas
std
jbe
xchg
pop
out
idiv
mov
cdq
pop
fwait
les
call
fisttp
or
fcomp
mov
jbe
mov
jg
in
mov
cmp
int
xchg
cmp
ret
adc
pop
fild
xor
cmp
inc
loopne
out
inc
dec
jl
pusha
sub
mov
stos
(bad)
fld
movs
and
das
mov
mov
add
and
call
mov
xchg
jge
push
cmp
out
inc
int
mov
inc
xchg
mov
pop
mov
je
popf
aam
fld
popf
popf
nop
fdivr
jae
mov
sub
cdq
pop
cmps
arpl
add
adc
mov
push
lock
adc
or
sub
xchg
rcr
pop
sti
(bad)
pop
pop
lods
jnp
call
xor
inc
rol
fcmovb
sub
and
(bad)
popf
fild
and
test
sbb
sub
idiv
int
out
mov
loopne
mov
fst
in
inc
sbb
mov
jge
or
scas
(bad)
sub
loopne
int3
dec
jle
dec
sub
not
das
xor
(bad)
dec
xchg
aad
sbb
mov
jnp
lds
std
popa
push
mov
cmps
pop
inc
sub
(bad)
mov
std
push
outs
dec
add
js
fs
rcl
xchg
jecxz
sbb
add
rcr
ss
ret
add
or
jae
retfw
movs
mov
aas
sbb
jl
test
mov
aas
or
leave
arpl
xchg
xchg
sbb
lock
and
sub
cdq
scas
call
arpl
push
(bad)
outs
jae
out
pusha
sub
lock
push
inc
(bad)
jg
pop
mov
nop
clc
mov
pop
stos
in
(bad)
cmp
daa
cmp
ins
ss
mov
test
retf
(bad)
inc
out
out
mov
adc
pop
jmp
bound
adc
cdq
or
xor
sub
xor
mov
mov
sub
dec
mov
or
call
repnz
add
cdq
leave
pop
scas
sub
sbb
cmp
pop
les
icebp
lods
mov
imul
mov
sub
inc
lds
les
xor
jecxz
dec
adc
mov
inc
stos
add
pushf
mov
or
cwde
push
xchg
jne
and
mov
out
into
clc
(bad)
cmps
test
mov
retf
fist
sub
dec
data16
or
xchg
int
dec
mov
push
loopne
enter
sbb
add
cmp
push
icebp
scas
xor
inc
out
sbb
push
mov
cmp
or
retf
mov
(bad)
jo
adc
xchg
data16
sub
aam
dec
and
push
add
js
sbb
test
movs
imul
jnp
jmp
aas
mov
out
mov
sbb
sub
cdq
call
push
loopne
scas
mov
aas
enter
mov
not
lods
pop
xor
cmps
mov
lock
popa
jmp
jno
xor
mov
sub
pop
mul
(bad)
lock
rcl
rcr
sub
shr
imul
sbb
inc
sub
sti
dec
outs
scas
jae
(bad)
or
scas
xchg
inc
popf
outs
adc
lock
xchg
das
ss
int
mov
mov
cmp
rcl
imul
out
mov
lock
pop
test
inc
cmp
pop
pop
mov
nop
push
js
cmp
cmps
sbb
or
shr
inc
aam
fadd
nop
int3
push
add
pop
imul
sub
pop
push
mov
sbb
sub
sbb
aaa
ss
fdiv
inc
out
arpl
pop
leave
cmp
cld
dec
add
jp
mov
dec
jecxz
pop
xchg
jp
jo
js
pop
cmp
shl
out
lahf
std
outs
mov
idiv
pop
test
sub
sub
fucomp
xor
push
adc
mov
daa
inc
movs
push
std
sub
or
imul
sbb
aas
xor
xor
mov
out
(bad)
cmps
adc
sbb
(bad)
sub
xchg
inc
icebp
into
cmp
xchg
in
jno
leave
jg
mov
sub
rol
pop
arpl
lods
push
inc
pop
and
addr16
mov
sahf
mov
cmp
push
xchg
or
mov
lds
(bad)
lahf
jns
data16
or
lahf
ror
int3
mov
mov
push
out
lods
jae
dec
call
push
ins
aas
and
xchg
stos
push
fidiv
movs
lock
test
ret
dec
popa
leave
pop
pop
or
enter
jo
mov
adc
lock
mov
cmp
into
fcomi
not
adc
jmp
adc
push
ins
es
imul
cmp
inc
push
sbb
pop
(bad)
out
push
adc
pop
aam
ss
inc
jne
div
je
ds
stc
aas
enter
mov
xor
push
xchg
add
out
out
jge
mov
leave
test
cmp
rcl
mov
mov
(bad)
or
xchg
adc
jo
xor
push
clc
inc
jnp
ror
sbb
(bad)
push
mov
sub
sub
sahf
dec
out
nop
call
push
scas
and
push
xor
or
(bad)
das
test
ror
loopne
jne
mov
test
sbb
popa
and
xor
and
mov
mov
sbb
test
mov
xchg
lock
mov
scas
call
sub
repnz
imul
jmp
xor
sub
retf
add
mov
add
cmp
lahf
lahf
in
dec
mov
data16
in
call
mov
xchg
addr16
in
loop
out
push
inc
sub
or
or
div
sahf
ja
mov
in
sub
dec
pop
(bad)
jge
push
add
xchg
fiadd
jmp
sbb
and
(bad)
mov
je
pop
fisub
je
leave
or
sub
and
xchg
jg
mov
(bad)
hlt
jp
aaa
icebp
cmp
(bad)
cld
fmul
setno
lods
in
pushf
icebp
les
sbb
mov
jmp
push
movs
jo
rol
fsub
dec
movs
mov
aad
into
out
in
xor
dec
dec
(bad)
call
pop
cmp
pop
cwde
jno
mov
ffree
mov
pop
adc
(bad)
aam
pop
jnp
inc
cmp
or
jnp
jnp
push
mov
xchg
xor
or
shr
inc
enter
jge
loop
cmp
sahf
push
cmp
xor
dec
std
ins
sbb
adc
xor
sbb
jecxz
push
sahf
outs
jae
inc
inc
push
in
popf
and
clc
(bad)
dec
fsub
aaa
or
cdq
int3
iret
scas
dec
xchg
js
jno
(bad)
add
pop
push
rcr
mov
mov
(bad)
daa
fldpi
bound
xor
repz
out
push
mov
scas
sbb
divps
adc
push
ror
jl
dec
call
out
dec
loop
xor
shr
adc
adc
cmps
clc
fstp
xor
repz
mov
movs
sbb
or
sub
aam
movs
jmp
icebp
xchg
imul
cmps
sbb
inc
xor
idiv
pop
or
fisub
mov
stos
mov
inc
ret
hlt
loope
stos
xchg
dec
xor
push
adc
or
repnz
aam
sti
cmp
je
push
and
sub
jmp
mov
mov
add
xchg
adc
cmp
push
mov
push
leave
hlt
pop
test
btr
popf
xor
sub
daa
fisub
or
movs
rol
xchg
pop
add
cmps
scas
js
les
shl
int3
test
aad
int
xor
add
mov
push
div
adc
retf
inc
in
add
cli
lea
push
cdq
js
push
or
lea
xor
pop
sbb
(bad)
mov
jecxz
test
cs
sbb
mov
jns
lock
sub
xor
and
stos
ret
push
sub
mov
fdivrp
ror
(bad)
mov
jne
adc
hlt
xchg
test
xor
sbb
int3
pop
cmps
lds
xchg
iret
or
outs
mov
scas
dec
mov
dec
cmps
jns
aaa
inc
fild
or
inc
daa
in
adc
cmc
ficom
not
cmps
push
adc
inc
mov
cmp
dec
lods
jno
les
test
cmp
xchg
mov
jg
dec
push
add
inc
or
fmul
push
adc
iret
movs
sar
fwait
add
(bad)
out
adc
cli
loop
inc
inc
outs
sub
sbb
xor
mov
test
mov
lods
jp
mov
pop
mov
mov
adc
add
add
xor
outs
cmps
sbb
(bad)
(bad)
xor
inc
leave
add
outs
and
int3
jo
push
sub
aam
sbb
sub
out
sub
sbb
rcr
pop
test
pop
mov
xor
test
or
inc
sbb
icebp
ja
scas
dec
xchg
xor
outs
adc
push
mov
mov
aaa
gs
pop
adc
dec
cmp
add
mov
dec
xchg
imul
adc
mov
or
outs
jp
arpl
out
xchg
jmp
test
mov
or
stos
movs
add
mov
adc
mov
lahf
xchg
iret
xchg
mov
push
add
ins
mov
mov
xor
aad
cld
xor
pop
movs
push
dec
cs
popa
dec
(bad)
pop
in
lods
cmp
hlt
fs
sbb
cmp
xlat
mov
mov
xor
xor
pop
lea
outs
xchg
add
xchg
add
xchg
mov
data16
imul
lahf
mov
out
jecxz
fcomp
push
fwait
mov
and
imul
dec
into
push
test
cmp
push
pop
mov
out
mov
pcmpgtd
cmp
sbb
add
jmp
mov
sub
icebp
xor
mov
fs
loope
inc
out
jmp
mov
out
loop
leave
mov
js
xchg
jae
sahf
ss
cmc
xor
out
mulps
push
dec
jle
into
data16
retf
sbb
pop
loop
jge
sub
mov
adc
and
in
and
xchg
add
jge
mov
loop
dec
gs
sbb
sub
sbb
sub
xlat
sbb
sysret
adc
scas
push
fidiv
push
bound
and
stos
enter
aas
or
sar
ret
test
inc
jg
cld
imul
jbe
inc
repnz
cmp
lods
dec
inc
xor
mov
leave
cmp
aas
bound
in
mov
xor
adc
in
xchg
test
fwait
cmp
mul
push
ret
mov
dec
jno
mov
cs
sahf
push
dec
ins
dec
ror
int3
sbb
test
jno
ret
mov
mov
out
jmp
jo
mov
jno
loope
aaa
xchg
jbe
retf
repz
mov
std
(bad)
std
add
cmps
pop
jo
in
(bad)
sbb
cmp
xor
out
int3
(bad)
inc
out
xchg
add
mov
jbe
movs
xchg
pop
cmp
fist
scas
in
push
inc
pop
mov
sub
sar
pop
outs
(bad)
mov
stc
dec
sahf
add
mov
pop
jmp
in
cmc
cmp
outs
sbb
pushf
pop
out
jnp
push
jbe
xchg
shr
pop
fwait
ret
and
int
or
xlat
sbb
mov
setae
in
add
pop
call
test
test
arpl
fcom
test
ins
push
sbb
push
or
ror
jge
rcl
imul
jecxz
outs
cmp
pop
iret
push
xchg
adc
mov
inc
inc
add
fist
dec
jae
mov
mov
es
cdq
(bad)
or
mov
rol
nop
pop
xor
mov
cmp
mov
add
pushf
mov
push
daa
outs
pop
pop
aas
mov
in
push
xor
sub
hlt
es
fsub
outs
or
xchg
mov
test
popa
mov
adc
vpextrw
lds
mov
xchg
nop
outs
mov
xor
mov
(bad)
iret
jb
loop
lock
stc
ret
iret
rcl
lock
pusha
arpl
ins
shl
push
mov
push
xor
sbb
or
adc
mov
push
(bad)
pusha
pushf
retf
pop
or
int3
leave
sbb
sbb
sbb
cmc
adc
nop
clc
repz
and
and
(bad)
ds
test
dec
mov
addr16
inc
(bad)
mov
or
inc
sub
(bad)
mov
pop
cli
jg
mov
mov
pop
retf
mov
adc
jb
test
rcr
mov
clc
sti
or
add
aam
mov
cmps
ret
data16
sti
jge
cmp
push
adc
sahf
cmp
(bad)
fimul
xchg
mov
outs
aas
add
pop
xchg
jge
sbb
fdivr
aaa
retf
cmp
xor
jae
outs
nop
test
add
out
pop
push
shl
xchg
or
jb
cs
mov
test
outs
sar
cdq
jnp
sub
les
push
retf
dec
jge
shl
jae
int3
xchg
lods
ficom
and
int3
hlt
mov
jge
xor
xchg
push
xor
xlat
jmp
cmp
adc
jae
push
gs
sub
jno
sbb
adc
push
pusha
ja
mov
and
shr
test
sbb
xor
lock
add
and
jp
cwde
fdiv
sub
mov
aam
xchg
dec
std
pop
inc
mov
jb
mov
sub
retf
mov
and
cmps
mov
pop
xlat
mov
and
jbe
sub
inc
cdq
add
into
and
mov
push
dec
jnp
leave
imul
loopne
inc
xchg
dec
inc
(bad)
ror
add
jmp
cmp
leave
(bad)
(bad)
fsub
xchg
push
jae
in
pop
out
sub
outs
iret
int
scas
add
daa
mov
movs
imul
sbb
fmul
gs
movs
ins
js
xor
(bad)
ins
rcl
scas
lods
inc
shl
std
mov
add
popa
xchg
ins
pop
xchg
cmp
inc
mov
enter
pusha
cmp
inc
adc
minps
pop
pop
jmp
lea
pop
(bad)
sbb
sbb
jg
cmps
adc
fcomp
popf
pop
dec
add
test
dec
pop
xor
fnsave
gs
xchg
push
xchg
mov
test
xchg
cmp
cmc
hlt
not
mov
ret
adc
call
loope
loop
xor
in
jmp
cmps
push
(bad)
dec
xlat
xchg
arpl
add
or
daa
pop
xchg
jb
out
pop
bnd
outs
test
pop
jb
jge
and
cmp
mov
mov
scas
icebp
mov
sbb
push
into
jmp
test
adc
sub
jbe
fcmovnu
add
cmps
adc
jns
xchg
adc
xchg
lea
popa
push
fimul
jecxz
xor
mov
dec
hlt
in
sahf
and
out
inc
sbb
mov
jg
sbb
in
fldenv
pop
jle
dec
stos
add
mov
or
pop
inc
pop
imul
out
cmp
mov
es
daa
popf
or
and
adc
pop
(bad)
mov
jbe
into
mov
cmp
out
retf
push
pop
mov
xchg
push
ror
mov
imul
and
push
leave
adc
push
sti
sbb
mov
movs
push
push
fnstenv
nop
into
out
fisttp
arpl
stos
adc
or
lds
and
cwde
push
xlat
jmp
sbb
out
(bad)
cmp
jno
or
ins
cmp
lds
sub
mov
fld
retf
inc
jp
clts
in
mov
gs
xchg
mov
mov
stos
sbb
inc
sbb
mov
test
aad
rcr
call
push
retf
cld
pop
repz
xor
sub
jmp
push
cmp
push
xor
add
jnp
sub
xchg
in
stos
and
mov
mov
and
xor
cmp
dec
pop
fiadd
jb
ss
fldenv
mov
das
mov
cmp
mov
xchg
push
popa
js
jo
mov
dec
jbe
nop
xchg
push
sbb
sbb
inc
adc
ret
xchg
adc
xchg
adc
adc
mov
push
stos
pop
cmc
push
fimul
ins
xor
sub
pop
adc
pop
fidivr
pop
retf
push
and
and
cli
pop
push
popa
fwait
adc
inc
add
jmp
or
push
stos
pop
dec
in
lock
pop
pop
xchg
shl
dec
mov
stc
popf
jmp
stos
jns
rol
push
cdq
aam
push
fs
xchg
movs
xor
int3
mov
push
shr
cmp
fucomp
cli
das
add
mov
pusha
push
add
loopne
xor
sbb
mov
out
sub
jle
mov
add
movs
retf
add
add
mov
pop
sbb
sbb
mov
sbb
mov
dec
ins
and
dec
in
add
loope
sbb
loope
dec
retf
mov
inc
mov
mov
pushf
pushf
ffree
icebp
sub
mov
gs
xor
adc
push
cli
in
js
(bad)
out
add
test
adc
int
in
loope
hlt
xor
pop
xchg
push
inc
ja
mov
(bad)
int
std
cmc
out
sub
(bad)
dec
and
pop
dec
test
sub
in
cmp
push
movs
movs
pop
int
dec
sbb
dec
pop
mov
sbb
in
cmp
cmp
xor
fnclex
scas
and
push
out
sbb
js
sub
jnp
jmp
fs
inc
adc
adc
pop
ret
in
sub
cli
inc
jg
daa
leave
loop
add
in
jg
xchg
cmps
inc
shl
lock
test
iret
les
dec
test
push
jle
mov
adc
lock
jmp
jmp
xchg
lods
das
pop
lods
xor
jnp
ret
push
push
nop
std
test
daa
inc
sub
pop
pop
add
jg
and
xchg
daa
pop
test
cmps
xchg
jo
addr16
dec
or
mul
lds
cmp
lahf
ds
xchg
outs
mov
test
mov
mov
es
jmp
cwde
push
pop
pop
xchg
sbb
shl
imul
or
cmp
and
and
sub
push
and
add
clc
pop
sub
add
fnsave
mov
push
jg
and
jmp
xor
cmp
jle
dec
mov
mov
sub
inc
ds
loope
and
daa
push
loope
and
rol
or
das
add
movs
mov
popf
movs
dec
fisttp
int
and
inc
int3
adc
jp
es
scas
out
sahf
or
push
jl
push
xchg
xchg
mov
call
lods
cmovl
cmp
bound
outs
(bad)
in
loop
jns
adc
imul
mov
aaa
lea
(bad)
aam
pusha
fst
xchg
std
xchg
push
scas
cld
mov
fcomp
push
std
loopne
fisubr
push
adc
shl
mov
adc
retf
sbb
inc
(bad)
mov
jbe
es
mov
mov
jge
sbb
mov
xlat
aas
pop
retf
mov
xchg
mov
repnz
in
add
cmp
mov
mov
pop
cmc
add
std
sub
xor
pop
xchg
push
xor
call
leave
push
pushf
aaa
repz
lds
pop
(bad)
cwde
imul
mov
fnstenv
dec
inc
push
adc
xchg
stc
lock
arpl
dec
adc
ror
ins
xchg
daa
pop
adc
push
cld
pop
iret
adc
and
outs
test
dec
fadd
hlt
jmp
test
mov
push
fild
push
lds
jmp
or
push
sbb
mov
in
sbb
xor
add
sub
loop
out
dec
jge
enter
jnp
mov
aam
ss
pop
repz
and
sub
arpl
cmp
jne
mov
retf
sub
jge
pop
ret
shl
push
bnd
or
pop
mov
fsubr
jo
dec
or
in
xchg
test
scas
mov
lods
mov
test
das
add
xchg
xor
cmps
fstp
rcr
std
data16
sbb
sbb
scas
inc
aad
xor
xor
mov
mov
sar
mov
pop
out
xchg
sub
scas
cmp
aaa
pop
pushf
push
jecxz
or
aas
inc
div
xlat
mov
pop
cs
cmp
ret
int
adc
push
and
xor
into
pop
sbb
xchg
loopne
inc
sahf
and
pop
add
aam
xchg
and
xchg
(bad)
push
jecxz
mov
and
add
xchg
ja
sbb
outs
mov
loop
(bad)
pop
jne
mov
loop
push
int
lahf
and
aaa
jne
sub
test
xchg
jecxz
je
push
in
aam
ret
mov
cli
int
dec
stc
mov
cmp
pop
outs
or
mov
daa
push
cmp
repnz
adc
(bad)
adc
mov
or
jnp
cld
dec
jle
mov
cdq
mov
mov
sub
rcr
dec
int3
(bad)
jg
jg
das
test
mov
in
out
or
fucomip
mov
push
idiv
cmp
sub
xor
mov
cmps
xor
ret
add
mov
mov
inc
dec
call
popa
fistp
shl
(bad)
push
es
and
(bad)
aad
sbb
ret
fsub
push
cmps
cdq
push
push
repz
(bad)
mov
dec
test
jg
or
mov
mov
push
pop
sbb
pop
sub
jno
cmps
xor
movs
push
dec
jp
jnp
sahf
mov
cld
inc
or
add
(bad)
push
sbb
in
add
test
fwait
pop
mov
xchg
sbb
sbb
jb
arpl
and
ins
dec
repz
and
pop
pop
mov
scas
mov
cmp
mov
add
dec
mov
dec
jb
cwde
popf
cmp
(bad)
movs
pop
in
mov
cmp
lods
gs
cmps
bound
imul
xor
mov
add
and
jo
not
xchg
adc
and
inc
out
aam
xor
mov
push
cmp
stos
test
pop
push
pop
cmp
cld
movs
rol
xor
leave
fwait
outs
push
mov
aam
call
int
aam
mov
movs
fld
aas
xor
dec
sub
adc
retf
ins
loopne
lods
sub
xlat
cwde
je
cld
adc
movs
pop
js
movs
in
mul
loope
imul
push
push
jecxz
mov
pop
fdiv
inc
mov
int3
data16
cld
mov
imul
xor
outs
dec
movs
xchg
jmp
pop
in
jne
js
sub
aad
inc
cli
sub
jp
test
mov
jle
mov
jg
out
cmp
clc
jns
adc
lahf
pop
xchg
dec
ss
inc
cwde
jge
or
jae
inc
in
cmps
jns
call
int3
adc
pop
call
scas
inc
mov
fs
jl
ins
jae
and
jns
movs
sub
dec
out
dec
xchg
xchg
ins
enter
or
mov
or
pop
xchg
pop
sub
pop
loopne
pusha
pop
test
jno
mov
lahf
xchg
ja
stc
pop
push
ins
mov
test
mov
mov
rol
xchg
dec
inc
jnp
call
cli
test
in
pop
ss
popf
repnz
into
and
int
and
sbb
sub
mov
ins
add
pushw
mov
mov
(bad)
mov
jnp
hlt
sbb
lods
es
cdq
push
movs
and
jmp
scas
mov
stos
stos
push
add
xchg
pop
lahf
shr
mov
enter
pop
dec
cli
mov
mov
mov
add
imul
mov
fsub
call
shl
mov
mov
cmp
push
shr
jae
push
dec
aaa
cmc
add
out
xchg
or
jb
mov
lods
call
sahf
sar
stc
mov
fnstsw
mov
pextrw
push
(bad)
cld
imul
jmp
jae
jg
xchg
pop
mov
inc
das
inc
xchg
fs
shl
push
add
jne
dec
pop
push
push
mov
dec
dec
fwait
xchg
ror
mov
jle
sub
movs
push
repz
mov
imul
mov
adc
lods
(bad)
mov
cmp
mov
dec
shl
xor
mov
sbb
outs
cdq
(bad)
sahf
inc
or
sub
pop
add
lds
out
cmp
test
je
mov
sbb
cdq
dec
xchg
inc
push
mov
pop
shl
mov
xchg
mov
push
test
ret
dec
jecxz
xchg
adc
fldenv
mov
jmp
sbb
ret
sar
push
(bad)
or
mov
jl
hlt
mov
fidiv
pop
jnp
add
adc
sti
sbb
popa
jo
sub
inc
push
mov
fldenv
xchg
lahf
sbb
xor
(bad)
lock
jecxz
js
jnp
sub
xor
retf
push
ret
aad
mov
dec
pop
xchg
loop
neg
cmc
arpl
push
sbb
jle
mov
retf
push
sub
jbe
mov
push
jns
cdq
rcr
lock
repnz
adc
mov
and
mov
hlt
popf
or
dec
mov
xlat
or
cmp
add
out
sti
push
lods
inc
add
std
cs
sub
xchg
mov
fldcw
aaa
and
mov
or
call
popa
lock
sar
pop
jb
mov
xchg
inc
imul
stc
bound
pop
push
retf
cmp
cmp
popa
add
lods
adc
inc
sbb
push
dec
xor
addr16
scas
inc
pop
int3
mov
ins
push
imul
je
dec
mov
pop
inc
pop
fs
jecxz
imul
in
xor
inc
into
es
pop
and
add
test
fdivr
fdiv
in
test
sub
popf
outs
jno
inc
loope
add
mov
sahf
aam
das
adc
push
xchg
dec
mov
mov
jns
push
cld
xchg
push
add
cmps
jo
inc
cmp
pop
jp
jns
icebp
call
and
out
data16
pop
add
hlt
push
cmp
lahf
jne
cdq
sbb
scas
xor
push
(bad)
sar
jl
cdq
lds
(bad)
cld
ins
(bad)
leave
dec
xchg
push
out
ss
mov
pop
inc
cmp
pop
cdq
adc
ins
mov
mov
mov
scas
jns
(bad)
xchg
int
retf
out
ja
jmp
pop
xchg
jle
adc
mov
test
pop
in
ret
or
jmp
mov
ret
scas
ret
xchg
mov
or
mov
bound
add
pop
jbe
test
pop
jle
xchg
jo
pushf
xchg
cmps
lock
aad
ins
imul
rol
adc
pop
mov
sub
push
mov
cs
sbb
adc
aad
xchg
inc
sub
inc
mov
xor
and
cdq
xchg
mov
push
sub
add
adc
jbe
je
fs
test
in
punpckhdq
sbb
xchg
or
fisubr
imul
mov
hlt
mov
fisttp
mov
push
mov
lea
(bad)
cmps
das
dec
in
sti
sub
aaa
enter
shl
jne
cwde
(bad)
xchg
pop
imul
xchg
pop
ss
or
xchg
retf
add
pop
ror
cs
scas
stc
add
shl
ficom
es
enter
int
cmps
lock
jg
ja
add
scas
lea
pop
mov
and
mov
sbb
cmps
xchg
aaa
cdq
pop
mov
sar
xchg
mov
add
sub
je
pushf
ins
cmp
inc
xchg
fld
fs
sub
cmp
mov
push
fisttp
xor
daa
mov
add
ror
or
aaa
jb
les
sub
dec
sub
iret
loope
or
outs
sub
shl
bound
(bad)
jmp
ds
dec
pop
cmp
out
pop
popf
cmp
mov
shl
add
jle
mov
jns
xchg
or
cmp
test
ins
push
ins
push
repnz
les
xchg
enter
retf
leave
adc
cwde
aam
and
enter
xchg
sti
xor
daa
sahf
aam
add
jecxz
add
mov
jne
push
cmps
push
test
adc
ss
pop
cmc
test
mov
and
clts
push
ficomp
sub
fisttp
sub
xor
adc
clc
jle
(bad)
cmp
inc
push
adc
js
lahf
xchg
aaa
xchg
out
or
cdq
and
mov
sub
jne
sbb
addr16
dec
imul
daa
cmp
mov
push
(bad)
xor
neg
imul
xor
add
(bad)
pop
sub
sbb
sbb
(bad)
psubb
call
fistp
hlt
movs
cmp
cmps
or
sahf
pop
(bad)
jo
adc
inc
inc
inc
fs
xlat
adc
fnstenv
and
xor
sahf
leave
xor
jmp
test
sbb
lods
jp
data16
cdq
pop
add
or
or
shr
or
jecxz
xor
mov
sub
xor
push
popa
push
inc
test
mov
adc
(bad)
mov
aaa
mul
mov
sub
adc
into
mov
inc
not
cmps
sbb
and
xchg
aas
test
or
hlt
mov
stc
push
push
mov
push
es
add
int3
sti
js
lock
mov
xchg
(bad)
loopne
sub
push
shl
mov
enter
rcr
in
(bad)
fwait
bound
mov
xchg
sub
mov
pusha
jb
push
dec
jle
add
cmps
mov
jnp
and
ja
das
dec
lods
cmp
xchg
xlat
jmp
inc
push
mov
mov
inc
push
mov
dec
cmps
(bad)
daa
cmps
scas
inc
test
adc
mov
das
shl
fmul
mov
fistp
jne
fsubr
push
push
mov
clc
push
loop
dec
(bad)
push
and
out
jmp
lods
inc
and
outs
fld
imul
add
push
xchg
or
les
lea
mov
cmp
pop
fbstp
jmp
dec
fidivr
push
sbb
(bad)
data16
mov
ds
add
dec
inc
jne
dec
loop
jmp
mov
mov
leave
xchg
adc
and
outs
mov
push
fwait
or
jmp
inc
arpl
jnp
fsubr
cmp
mov
iret
mov
ss
ret
and
in
js
popf
mov
cvtps2pi
adc
push
fnsave
push
loopne
inc
jle
pop
add
fnstsw
rcr
adc
cmc
fsubr
xchg
jmp
imul
outs
xchg
mov
mov
inc
cwde
mov
pushf
xchg
shl
and
dec
or
cmps
idiv
repnz
dec
lea
rcl
retf
scas
jbe
xor
cmp
adc
pop
and
dec
add
shl
mov
xor
adc
pusha
push
mov
sti
inc
popf
add
scas
and
or
sahf
lods
mov
icebp
js
xchg
adc
sbb
xchg
call
mov
repz
push
cmp
dec
call
test
inc
hlt
mov
xor
(bad)
inc
inc
jbe
shl
test
jo
push
sbb
mov
pop
mov
pop
in
jmp
cdq
xor
inc
jnp
jae
inc
dec
adc
outs
and
call
fild
and
cmc
mov
dec
mov
js
rol
mov
int3
mov
je
mov
aaa
sub
cmp
popa
mov
mov
ret
inc
fucomip
sbb
mov
and
in
imul
mov
xchg
and
jae
pop
dec
cmps
push
xor
and
jmp
inc
sub
or
test
dec
xor
dec
add
out
push
jp
push
xchg
fwait
xor
or
nop
adc
popa
mov
xor
mov
jbe
mov
push
ret
inc
test
mov
(bad)
cmp
ror
mov
adc
int3
cmp
loope
retf
mov
push
mov
inc
scas
nop
dec
jns
(bad)
push
int
je
jb
jno
nop
(bad)
scas
sbb
or
adc
pushf
lahf
sti
popa
in
shl
mov
sub
sbb
movs
movs
dec
and
or
add
mov
(bad)
add
pop
xchg
add
test
mov
or
mov
sub
ss
je
mov
or
mov
adc
hlt
dec
sahf
popf
and
aad
jmp
cmps
aaa
imul
je
in
pop
call
push
mov
ja
jmp
aam
jp
arpl
jnp
int3
das
outs
call
xor
dec
dec
xchg
sar
ss
dec
jno
call
icebp
xchg
or
dec
mov
add
cdq
in
mov
stos
xor
cmps
loope
sti
cmp
sbb
pop
mov
mov
push
cmp
stos
stos
xor
xor
pop
je
push
and
jl
push
and
inc
retf
sbb
push
pop
fadd
je
shl
clc
xor
jnp
jae
xchg
sbb
enter
pop
push
into
loop
mov
pcmpeqb
add
or
jb
pop
dec
xchg
add
mov
pop
out
(bad)
aad
mov
mov
mov
out
repz
test
jmp
(bad)
into
or
dec
ror
xor
sub
mov
ficomp
sub
xor
mov
jmp
and
in
ss
cmps
call
sub
pop
sti
xor
nop
xchg
adc
push
arpl
out
fnstcw
mov
mov
fdivr
mov
jecxz
aaa
in
mov
je
mov
mov
dec
(bad)
and
outs
scas
mov
push
push
cmps
enter
mov
dec
test
cmp
mov
fcmovnu
adc
loopne
ret
ficomp
aaa
jne
gs
cld
shl
cli
inc
xor
and
and
sbb
pop
sbb
add
sub
or
call
imul
pop
cmp
jecxz
adc
sbb
scas
ins
(bad)
retf
test
rol
and
xchg
popf
push
adc
and
mov
test
xor
rol
ins
mov
stos
rcl
push
sub
inc
out
fld1
lods
mov
(bad)
pop
xchg
cmp
jmp
sti
dec
mov
loop
push
xchg
mov
jae
add
mov
or
xchg
inc
jecxz
in
pop
mov
cmp
mov
push
dec
or
and
mov
or
cs
jecxz
test
ret
xchg
rcl
inc
int
ja
mov
lahf
(bad)
sbb
(bad)
push
or
or
call
xchg
push
sbb
imul
jno
sbb
mov
ins
dec
mov
and
nop
xchg
das
loop
xor
mov
in
sbb
xchg
xchg
push
js
pop
xchg
popf
jp
scas
adc
ror
movs
jl
pop
mov
leave
adc
add
fwait
add
pusha
and
mov
jp
sub
dec
jbe
out
jmp
mov
fldenv
jmp
mov
push
ins
outs
mov
or
out
fwait
jecxz
outs
gs
cmp
sub
xchg
jmp
push
pop
dec
jg
je
scas
leave
sub
inc
push
movs
mov
(bad)
in
(bad)
cmp
push
mov
shl
fninit
push
xor
mov
mov
pop
dec
cmp
retf
inc
mov
pop
enter
(bad)
dec
mov
mov
ror
retf
cmp
push
adc
js
pop
fild
xor
push
or
xor
or
mov
sbb
cmp
out
mov
inc
xor
dec
test
sahf
or
jl
add
xchg
stc
xor
jne
sbb
and
fnstenv
scas
loopne
popf
mov
lock
pop
(bad)
out
jecxz
adc
repz
lock
in
mov
ins
cmp
mov
sub
and
mov
cmp
or
imul
inc
addr16
fidivr
push
in
jo
in
out
dec
aas
stos
pop
mov
push
inc
or
xor
repz
aad
rcr
xchg
inc
loopne
stos
xor
inc
cmp
pop
aaa
in
imul
dec
push
pop
outs
pop
or
add
repz
ins
xchg
mov
or
(bad)
(bad)
arpl
sub
push
mov
pop
or
imul
inc
mov
rcl
out
repz
pop
imul
ins
inc
jl
xlat
mov
call
movs
inc
and
je
inc
push
cmc
push
inc
aad
stos
repnz
inc
pop
sbb
test
test
mov
and
adc
test
inc
push
jp
pop
sbb
adc
aam
lods
ins
mov
push
mov
jecxz
mul
lock
dec
jge
cmps
mov
into
jmp
adc
fs
pop
sbb
clc
jmp
sbb
bound
fsub
fdiv
or
out
sbb
xchg
mov
les
fstp
pop
repnz
pop
mov
xor
sbb
sti
fisttp
les
cmp
pop
nop
adc
pushf
jne
or
cdq
ds
ret
xor
xor
dec
add
push
xchg
add
in
sbb
add
jae
movs
sbb
stc
unpckhps
push
cmps
add
aaa
ret
xor
iret
adc
icebp
js
jo
mov
js
imul
pop
gs
inc
mov
inc
test
mov
dec
fbld
nop
ins
cwde
dec
rcr
mov
jae
add
add
stos
(bad)
repz
cld
dec
sbb
jnp
push
ds
jge
shl
lahf
mov
mov
fwait
sub
aaa
inc
aad
or
xlat
inc
daa
jp
add
aaa
out
fstp
cmps
xchg
test
mov
and
test
les
imul
nop
pop
pop
fdiv
fnsave
pop
xchg
push
paddb
mov
mov
add
mov
cmps
xchg
imul
ja
out
ins
popf
mov
or
cmp
call
fwait
jmp
ds
jl
fwait
clc
adc
xor
leave
jg
cmc
adc
hlt
js
pop
aam
mov
mov
(bad)
jp
dec
out
cmp
lods
xchg
arpl
test
jb
jge
pop
xchg
cld
xchg
cmp
pop
mov
fstp
xchg
sbb
(bad)
popa
arpl
jge
loop
jo
das
cs
sbb
mov
loopne
cwde
or
or
mov
cmps
sbb
or
mov
jmp
(bad)
call
movs
xor
cmps
add
pop
das
int3
push
push
cdq
push
dec
mov
dec
repz
push
jae
out
add
mul
sbb
jb
sbb
neg
fadd
dec
cmp
cmc
scas
jnp
xchg
adc
or
sahf
sbb
push
mov
inc
data16
mov
scas
or
jle
inc
loopne
loope
loope
rol
fwait
dec
dec
je
imul
cmc
inc
cmp
pop
std
pop
sbb
mov
ficomp
out
scas
mov
pop
fdivr
mov
sbb
mov
lock
movs
mov
push
psrlw
mov
mov
sar
mov
je
push
inc
idiv
mov
outs
loope
pop
leave
xchg
adc
hlt
push
inc
mov
fld
inc
dec
shl
out
fsubr
ror
test
jg
mov
pop
mov
test
add
call
lahf
in
dec
xor
lahf
ins
iret
call
and
(bad)
jnp
scas
inc
arpl
and
iret
or
inc
jp
int3
(bad)
loopne
mov
jae
xchg
cmp
inc
cli
or
cmp
sub
ss
add
xchg
cmp
(bad)
xchg
(bad)
adc
loopne
out
push
mov
push
lods
stos
(bad)
xchg
cmp
lds
retf
pop
and
mov
ret
cmp
push
lods
outs
ins
or
pop
lods
psubb
dec
in
or
jo
inc
jb
out
loop
mov
loop
push
outs
enter
jl
xchg
lock
lods
mov
jecxz
aam
out
add
daa
ins
xor
aaa
mov
mov
ds
repz
nop
mov
js
add
call
mov
pop
cli
jo
(bad)
pop
in
mov
bound
daa
js
sbb
sahf
mov
mov
lock
push
jecxz
adc
mov
adc
test
in
out
and
push
(bad)
jb
mov
push
sub
jmp
add
sbb
mov
call
jle
mov
pop
add
push
or
push
cmp
lea
pop
sub
sub
jnp
test
adc
cmp
xor
jmp
loop
scas
hlt
hlt
pusha
lods
sbb
cld
loop
out
fidiv
jmp
push
mov
shr
shr
mul
repz
ds
sub
mov
mov
xchg
and
adc
fdiv
jo
mov
call
xchg
mov
cdq
lahf
mov
jbe
sub
xor
rol
stos
gs
in
adc
movs
das
int3
into
or
inc
jb
jg
cmc
sar
into
repz
pop
jb
adc
retf
cmp
add
shl
mov
mov
pushf
cmp
sub
test
mov
cwde
mov
or
push
xlat
sbb
add
imul
icebp
in
pop
pushf
pop
lahf
ret
in
aad
pop
inc
jmp
adc
loopne
loopne
das
add
push
inc
jl
ins
ds
call
cmp
adc
stos
daa
sub
mov
loop
xchg
sub
arpl
inc
mov
retf
je
mov
add
movs
mov
aad
xor
jbe
jge
and
into
sbb
sub
cmc
xchg
mov
add
push
jnp
scas
push
ins
dec
sahf
xlat
inc
xlat
push
sub
add
jecxz
std
lea
iret
sbb
mov
popf
(bad)
jbe
out
push
inc
fbld
in
mov
mov
test
dec
cmps
hlt
adc
mov
lock
or
adc
sub
sbb
rcl
dec
(bad)
out
pushf
xchg
(bad)
cmp
push
dec
stc
pop
inc
ins
mov
mov
add
jl
sbb
pop
push
push
leave
repz
scas
shl
add
(bad)
loope
sbb
fs
div
mov
cmp
call
inc
fnstcw
mov
push
pop
bound
pop
dec
cmp
aam
adc
es
cmp
jl
call
and
cmp
mov
fmul
loop
(bad)
add
cmp
sub
loopne
pop
add
dec
mov
xchg
jns
out
mov
fwait
xchg
popf
or
ret
scas
add
clc
idiv
out
push
pop
sar
sub
sti
add
dec
loop
arpl
out
xchg
imul
test
ja
aaa
jp
inc
aam
mov
ror
in
xchg
pop
pop
pop
(bad)
call
retf
ror
mov
lods
cld
cwde
push
xor
push
js
sub
popf
lods
fsubr
pop
int3
jae
inc
and
jne
and
xor
outs
jo
dec
dec
mov
sbb
mov
in
fidivr
mov
mov
mov
shl
pop
lods
and
aam
adc
dec
push
add
ja
and
and
add
test
mov
jno
xor
in
inc
pop
cmps
sbb
pop
or
pop
iret
(bad)
clc
outs
in
shr
lahf
push
inc
lods
push
popa
out
cmp
int3
mov
sub
sub
in
int3
aas
call
mov
pop
jecxz
retf
shl
(bad)
rcl
arpl
(bad)
addr16
pop
adc
xlat
push
add
mov
jmp
scas
movs
jp
dec
ror
jge
push
shl
(bad)
jae
cmp
push
stos
sbb
sub
aaa
pop
inc
vxorps
mov
xchg
mov
mov
dec
ds
mov
or
lea
stc
push
and
nop
icebp
cli
or
sbb
dec
movs
cmp
cmc
pushf
mov
adc
test
cdq
sti
pop
das
rcr
je
pusha
lods
dec
jbe
push
test
int
adc
mov
fsub
add
xchg
sar
retf
inc
sbb
(bad)
lahf
bound
cmp
cmp
jno
jns
out
dec
dec
mov
stc
ret
fdivr
jmp
xlat
int3
cmp
jp
adc
fimul
mov
push
add
adc
shl
add
push
sbb
jp
out
and
lahf
jmp
xor
jg
arpl
ja
adc
lahf
push
in
nop
push
sahf
xchg
mov
leave
jo
jne
in
push
out
mov
aas
js
sub
push
(bad)
mov
js
stos
pusha
or
scas
xchg
cmp
mov
je
add
mov
xchg
jne
shr
pop
dec
mov
fs
das
sub
mov
aam
ins
test
and
pop
mov
ins
test
jne
sar
mov
mov
aas
pop
stos
push
ror
mov
js
jbe
jg
ds
add
gs
jle
sbb
jb
pop
adc
jp
loop
fwait
jmp
es
lahf
mov
jle
(bad)
sti
imul
adc
sbb
push
add
test
inc
in
pop
adc
cmps
call
loopne
rol
cmps
in
cmp
je
fadd
or
test
sub
add
call
cmp
outs
jmp
sub
mov
retf
(bad)
aam
inc
ffreep
sbb
inc
dec
mov
test
stos
aaa
add
in
pop
test
lods
cwde
in
and
into
int
pop
bound
inc
pushf
xor
adc
inc
loopne
push
into
fisub
and
aam
pop
retf
sbb
push
repz
popf
xor
ja
sbb
js
test
aam
pop
jge
cs
loope
adc
(bad)
pop
mov
mov
cmps
enter
outs
dec
outs
in
aas
lods
xchg
mov
fbstp
dec
add
retf
push
push
xchg
sub
bound
icebp
mov
fdivrp
sub
jne
ja
pop
test
and
ja
(bad)
fiadd
call
out
add
scas
sbb
test
pushf
mov
adc
sbb
sti
cmps
lods
(bad)
dec
and
jmp
xor
(bad)
or
inc
add
scas
xor
sub
sub
sub
mov
cwde
cmps
push
outs
jle
mov
fadd
push
mov
aam
ss
rcl
sub
(bad)
jbe
cmp
jle
es
ins
loope
lock
pop
cmp
pusha
xchg
sbb
pusha
idiv
sbb
(bad)
xchg
pop
out
int
hlt
in
in
dec
add
or
cmp
xchg
mov
jb
(bad)
cmp
cdq
es
xchg
leave
mov
sbb
push
push
je
push
packsswb
jne
dec
std
jp
push
push
xchg
clc
icebp
push
into
sbb
sahf
stos
sub
cmp
scas
in
xor
jmp
mov
jmp
and
les
arpl
in
mov
popf
or
movs
mov
stc
sbb
inc
jb
icebp
aas
neg
test
data16
mov
jo
cmc
pop
inc
rcr
sub
add
push
pop
fnstcw
mov
shl
jg
lock
jl
mov
mov
out
sar
push
fs
cmc
jle
inc
sbb
stos
xor
out
jl
or
cmp
sbb
mul
pop
es
and
retf
outs
(bad)
push
cs
iret
mov
cmp
mov
out
add
jl
leave
cmp
ins
(bad)
js
add
js
and
aam
scas
push
and
push
(bad)
mov
test
dec
ja
enter
jo
rol
mov
loope
mov
mov
xor
rol
fcomp
lea
pushf
pusha
dec
in
sbb
scas
int3
pop
call
sub
mov
fld
dec
mov
arpl
test
add
lods
lods
adc
sub
xchg
loop
(bad)
xchg
push
sub
out
jnp
push
sub
inc
jno
sbb
push
aad
sub
je
pushf
iret
xor
aad
outs
and
adc
sub
mov
mov
xor
xchg
add
add
mov
mov
pop
sub
repz
shl
and
or
idiv
fmul
add
mov
push
jl
push
hlt
sar
cmps
pop
(bad)
out
push
lahf
and
lods
fild
push
mov
push
int
rcr
adc
fdivr
jp
pop
mov
add
test
adc
(bad)
jge
mov
push
out
mov
push
mov
adc
stos
repz
jge
(bad)
cmps
(bad)
repz
mov
enter
leave
jl
mov
lods
xlat
sub
xor
mov
jp
(bad)
jae
jbe
repz
or
shl
adc
mov
jo
out
and
ins
pop
into
cli
lods
xor
scas
push
(bad)
scas
hlt
popa
fild
push
add
ins
pusha
cmps
adc
loopne
adc
xchg
xor
cld
(bad)
pop
xor
lea
mov
fnstenv
add
pop
sar
aad
neg
retf
shr
out
adc
jmp
mov
in
xor
lods
add
mov
sbb
sbb
jmp
mov
jg
and
push
aaa
cmp
movs
mov
mov
sub
rol
or
js
add
jne
test
adc
sub
mov
mov
in
scas
aam
aaa
ins
xchg
adc
shl
stos
pop
mov
pop
add
fcomp
inc
cmp
sbb
hlt
mov
in
in
(bad)
pop
jge
ror
mov
adc
jge
cs
popa
clc
or
cli
lock
jmp
mov
mov
jbe
lods
pop
stos
dec
in
inc
mov
xchg
sti
data16
dec
pop
pop
inc
xchg
jno
xor
adc
mov
lods
pop
clc
mov
jmp
stos
cmc
adc
mov
in
and
fidivr
fisub
adc
pop
mov
fadd
aaa
fist
loope
int
loop
mov
rol
jecxz
jge
imul
pop
shl
or
loop
sbb
call
in
lods
push
push
xor
jge
sti
sbb
aas
mov
jnp
pop
inc
repz
shl
cmp
shrd
or
movs
mov
call
mov
jbe
ret
leave
repnz
js
movs
jge
xchg
ret
stc
sbb
xlat
mov
and
ror
clc
mov
dec
push
adc
(bad)
pop
fs
dec
dec
pop
push
jecxz
sahf
and
pop
out
ffree
and
mov
inc
movs
adc
xchg
inc
jbe
or
push
stos
push
cmp
lds
or
mov
mov
push
add
xchg
(bad)
(bad)
in
add
sbb
fs
mov
push
add
pop
push
or
xor
dec
out
div
jg
add
(bad)
xchg
inc
dec
ret
into
sbb
cdq
ret
das
ffree
in
xchg
ins
rol
push
loop
sub
neg
and
push
bsf
movs
jno
mul
stc
sbb
aas
out
inc
(bad)
xchg
dec
fwait
push
sub
cmp
mov
sbb
aad
lock
adc
xchg
jecxz
push
das
fdiv
mov
sub
cmp
rol
sub
add
call
adc
pop
and
addr16
call
int3
aam
sub
pop
push
pop
push
jnp
fdiv
mov
pop
movups
cmps
xchg
cld
(bad)
rcl
mov
(bad)
(bad)
(bad)
loopne
aas
xchg
sub
xor
(bad)
xchg
push
pop
into
sbb
inc
or
mov
repz
lds
aam
imul
dec
test
cmp
xor
mov
sahf
pop
ins
inc
dec
mov
cmp
dec
inc
push
xchg
xchg
mov
cmc
xchg
push
cli
bound
mov
xchg
popf
lods
push
cmc
cmps
std
cmp
ds
jg
pop
cli
aad
iret
jne
out
js
imul
mov
jle
jns
mov
test
movs
mov
pop
ror
xor
les
rcl
sbb
xchg
idiv
mov
sahf
rcl
int3
add
jl
mov
xchg
scas
jl
nop
fistp
mov
icebp
mov
mov
dec
mov
sar
xor
mov
xlat
ds
pop
inc
mov
addr16
lea
sbb
scas
sbb
adc
mov
(bad)
pushaw
pushf
add
xchg
rol
sub
jae
adc
xor
xor
sbb
dec
push
xchg
dec
sub
pop
xor
fisttp
xchg
mov
fcomp
mov
sub
and
sti
les
fcom
pop
xchg
push
and
fidivr
sub
in
cdq
push
adc
lds
cmp
sub
cmp
sub
into
stos
mov
rcr
ret
pusha
fiadd
jne
sub
or
lods
or
adc
pop
mov
les
pushf
test
xlat
not
adc
mov
mov
mov
pop
idiv
hlt
arpl
inc
(bad)
ja
aaa
bound
(bad)
icebp
enter
xchg
js
cmc
sub
sub
scas
adc
lds
inc
mov
mov
ror
retf
sub
scas
inc
sbb
add
pusha
or
shl
out
push
pop
mov
pop
xor
rcl
test
pop
xchg
add
jae
in
mov
jno
clc
pop
jbe
cmp
sub
mov
adc
push
jg
jnp
fistp
aad
dec
inc
leave
add
adc
ror
inc
orps
xchg
lods
and
add
push
xchg
sbb
(bad)
inc
or
in
pop
inc
daa
lea
lods
dec
and
(bad)
rol
popa
popf
dec
dec
adc
ret
push
cli
sbb
xor
and
fimul
fisubr
pop
adc
push
leave
mov
adc
(bad)
or
mov
outs
(bad)
repz
popa
add
dec
pop
pop
jmp
pop
adc
out
or
pop
pop
adc
scas
test
in
neg
mov
add
dec
mov
xchg
fisttp
inc
popf
or
xor
(bad)
or
cwde
pop
sahf
ja
loop
ja
test
into
(bad)
ror
mov
dec
jl
test
in
jbe
jns
(bad)
sbb
mov
xor
mov
in
scas
ins
aaa
mov
inc
mov
inc
iret
pop
cli
(bad)
xlat
xor
fist
jns
jo
inc
pop
xor
js
dec
fistp
xchg
add
rcr
and
into
sbb
lahf
push
push
rcl
cld
sub
and
dec
int
jae
sbb
and
imul
loope
mov
xchg
test
push
rcr
xchg
dec
xchg
out
in
mov
ror
mov
and
mov
div
xchg
adc
dec
test
std
inc
dec
iret
pop
push
icebp
jbe
jnp
ja
xor
mov
arpl
cmp
test
fsubr
(bad)
mov
push
ds
adc
mov
iret
lds
div
jb
add
dec
xor
nop
scas
add
mov
pop
sbb
adc
out
movs
jmp
pop
es
cwde
cli
in
mov
sub
jno
sbb
cmps
mov
push
push
test
fisub
cmps
in
jge
repz
jmp
xor
jp
inc
dec
gs
jo
std
inc
int
jge
sub
lea
sti
adc
pop
jg
jecxz
out
or
xlat
pop
test
stos
push
mov
xor
lahf
pop
mov
inc
icebp
call
xor
movs
sub
(bad)
cwde
xchg
jp
fcmovne
and
jmp
pop
mov
ins
push
xlat
sahf
jae
(bad)
aad
ins
retf
mov
fdiv
inc
xor
jbe
cmp
xchg
cmp
repz
sub
les
fldcw
iret
cmps
aad
add
pop
loopne
pop
movd
in
inc
sub
stc
pop
dec
(bad)
test
push
rol
sub
mov
jle
mov
out
mov
repnz
pop
jne
dec
ret
add
cld
imul
icebp
ficom
xor
xchg
cmc
jb
mov
cld
les
mov
repz
add
push
shl
adc
mov
and
cdq
addr16
inc
test
mov
fistp
jmp
mov
dec
test
sub
pop
mov
inc
aaa
fcmovnu
push
rcl
jmp
in
pop
pop
je
mov
push
or
mov
or
outs
jmp
call
ror
xchg
mov
jl
movs
cli
pop
sub
adc
aad
out
xchg
or
pop
aam
repnz
mov
js
or
mov
jnp
aam
inc
push
enter
(bad)
lock
ficomp
sbb
or
jle
int
sbb
sub
call
adc
fs
fmul
xchg
inc
gs
pop
nop
shl
mov
push
aas
in
mov
outs
popf
push
push
sbb
sub
mov
xchg
fwait
(bad)
push
cmp
mov
inc
add
sub
xor
ins
jbe
sbb
jp
adc
xchg
pop
ror
mov
xchg
sub
inc
inc
sub
pop
test
cs
cmp
cmp
das
lods
loop
push
push
inc
loop
or
mov
pop
xor
loopne
or
sbb
in
cmp
sbb
fmul
sub
xor
mov
sbb
push
pop
lds
fwait
xchg
inc
mov
in
jb
dec
jb
xlat
cmp
rcr
dec
pop
(bad)
push
scas
mov
fsubrp
mov
es
lds
mov
cmp
mov
mov
or
pop
(bad)
xor
out
mov
int3
jmp
in
pop
test
les
add
out
jmp
inc
stc
ins
shl
mov
xchg
add
mov
stos
mov
lahf
aam
iret
jae
repz
add
mov
sbb
sar
or
cmps
shr
es
ficom
mov
xchg
sub
ins
pop
hlt
inc
test
jae
cmc
inc
mov
jl
outs
fs
movs
call
enter
and
gs
xchg
js
sbb
in
xchg
nop
mov
mov
xchg
or
pusha
and
adc
into
jbe
jae
repnz
sub
rol
lock
aaa
retf
mov
retf
dec
daa
test
mov
rcr
test
add
ins
cmp
push
cld
adc
gs
jp
xor
out
rol
and
ins
xor
xor
jae
jmp
xchg
push
xor
xchg
mov
cmp
and
cmps
mov
sub
loop
jl
xor
sub
shr
and
call
repz
xor
jecxz
pop
fist
xchg
mov
dec
int3
mov
loopne
pop
fidiv
and
repz
or
aaa
xor
test
inc
cmp
pop
and
inc
in
fcmovbe
jns
inc
add
stos
push
or
push
aam
retf
ret
int3
scas
pop
xchg
movs
push
mov
pop
sub
clc
jecxz
sub
add
out
jle
push
mov
mov
jae
neg
mov
fwait
sar
pusha
and
adc
adc
dec
call
xchg
xchg
fcomp
add
pushf
ins
inc
xchg
and
pop
das
push
jne
push
sub
and
add
sahf
lods
pop
clc
scas
test
fldenv
pop
(bad)
(bad)
cmp
inc
xchg
cs
scas
cmp
jecxz
cmps
push
and
or
push
out
out
test
push
loopne
sub
gs
add
pop
or
addr16
das
pop
push
movs
adc
stc
mov
icebp
jne
xchg
mov
push
push
lock
push
xchg
lods
xchg
xor
add
push
call
mov
adc
(bad)
movs
cmp
jecxz
sar
(bad)
jno
and
mov
shl
pop
sbb
shl
xchg
mov
in
popa
test
pusha
dec
iret
in
xchg
inc
mov
lds
rcr
xchg
(bad)
(bad)
xchg
mov
fnsave
out
mov
aaa
add
mov
inc
jle
jmp
fwait
in
adc
js
fdiv
xor
test
push
icebp
xor
jne
cwde
sbb
mov
leave
add
mov
pop
dec
loopne
push
or
cmp
adc
nop
into
push
enter
stos
sub
mov
mov
xchg
rcl
pop
jb
out
and
mov
inc
out
aam
mov
into
xlat
iret
cmps
or
rcr
out
xor
clc
clc
sti
rcr
dec
pop
sub
mov
sub
out
adc
jmp
out
shr
and
retf
adc
pop
scas
and
push
hlt
ror
adc
fist
retf
push
imul
fldenv
mov
pop
add
fs
or
pushf
fidiv
fs
ficom
test
add
inc
out
or
popa
or
out
xchg
inc
xor
inc
es
repnz
repz
call
adc
push
xchg
sub
jle
(bad)
fist
repz
lock
add
inc
cwde
mov
lods
push
mov
jg
sub
xchg
and
in
pop
les
sbb
mov
test
inc
sub
fcom
jle
retf
xor
dec
push
fist
lods
lds
mov
aaa
add
jle
mov
or
enter
xor
popa
cmc
cmc
push
pop
push
push
mov
leave
idiv
ss
inc
mov
jg
js
ja
cmp
add
push
out
in
mov
ficomp
jae
hlt
mov
or
jnp
stc
imul
test
mov
push
cmp
pop
lods
pop
lods
movs
pop
je
jnp
jae
and
or
es
xchg
dec
mov
cwde
jno
mov
push
jp
jnp
and
or
or
call
xchg
dec
pop
(bad)
out
loop
xor
inc
jns
retf
mov
test
ret
inc
inc
push
push
sbb
mov
and
(bad)
cmps
jge
dec
cmps
push
test
push
push
imul
xor
(bad)
stc
mov
jb
dec
jg
retf
ds
mov
ret
stos
cld
out
stos
add
push
es
stos
(bad)
or
(bad)
xor
dec
gs
lods
push
enter
pop
xchg
loope
jns
inc
sbb
mov
shl
mov
int3
es
mov
mov
(bad)
rep
xchg
cmp
imul
cmp
or
gs
push
cmp
jae
push
(bad)
(bad)
ja
icebp
push
sub
sub
test
sub
and
mov
aaa
stos
mov
into
out
out
mov
test
adc
stos
jbe
lahf
das
mov
cmp
adc
and
jle
mov
rcr
fild
test
jge
movs
xchg
mov
adc
pop
add
aad
push
ins
(bad)
stos
das
and
dec
mov
mov
imul
jg
stos
icebp
sbb
jo
push
mov
rcr
stos
or
cmp
sahf
cwde
aad
imul
lds
repnz
adc
ins
mov
mov
add
jnp
jnp
inc
xor
jmp
test
imul
fstp
cmp
ja
in
xor
in
mov
clc
test
outs
or
sbb
add
retf
sbb
sbb
jns
sbb
ja
dec
jnp
and
push
std
mov
sbb
mov
cmc
data16
mov
cmps
ins
xchg
inc
mov
or
or
adc
push
mov
mov
pop
nop
lahf
push
les
ret
nop
call
xor
clc
jg
xor
add
xchg
dec
cwde
mov
inc
dec
dec
mov
xchg
test
mov
pop
push
ja
aaa
ror
fwait
push
not
repnz
fs
dec
lock
adc
cmp
stos
jbe
push
movs
mov
mov
sbb
out
cld
lods
fsubr
sbb
mov
cmova
(bad)
dec
pop
(bad)
push
int3
js
xchg
das
cld
repz
mov
xor
cs
int3
add
xor
dec
jp
stos
arpl
push
and
push
mov
fstp
adc
inc
jo
inc
out
movs
cmc
inc
rcr
sub
inc
cmps
add
dec
scas
lock
or
ror
sub
sub
in
div
xor
outs
mov
or
dec
jecxz
(bad)
sbb
sub
mov
popa
lahf
and
(bad)
sub
mov
sahf
mov
nop
or
loope
out
pop
ret
sbb
fisttp
test
cmp
arpl
pop
fidiv
repz
(bad)
in
mov
sub
loop
enter
mov
dec
sbb
pop
repnz
adc
add
test
cdq
ins
rcl
out
(bad)
pop
xor
push
jecxz
ret
dec
shl
dec
and
loopne
inc
aam
jle
mov
dec
jge
ds
mov
push
xchg
into
sti
sub
loop
mov
sbb
es
xchg
xchg
imul
sub
ins
pop
or
data16
and
push
clc
loop
jge
loope
rol
push
mov
sub
lods
xchg
int3
inc
push
pop
adc
and
mov
ret
pop
sub
mov
not
or
cmps
lock
pusha
mov
mov
test
sbb
push
adc
jmp
mov
pop
jbe
xchg
mov
stc
scas
mov
or
or
mov
sub
cli
mov
mov
xlat
(bad)
in
xchg
dec
sub
xor
in
mov
dec
cli
in
movs
mov
mov
std
in
(bad)
xchg
sbb
or
jmp
fcmovb
nop
fcom
(bad)
and
sub
mov
pop
or
sub
fsub
or
ret
mov
jmp
lds
dec
stos
jbe
ja
xor
xor
mov
in
sub
sub
pop
test
lods
mov
jmp
shl
add
ja
iret
pop
jns
xchg
popa
mov
lahf
push
push
(bad)
out
xor
jo
push
mov
fistp
mov
gs
sbb
mov
dec
or
jg
xchg
sahf
fmul
int3
jno
jns
ds
(bad)
ss
stc
or
loopne
cmp
sub
mov
les
dec
dec
jo
pop
push
jmp
movs
jbe
lock
xor
mov
cld
pop
enter
js
mov
enter
data16
pop
mov
cmp
out
bound
mov
xchg
pop
mov
cmp
fwait
jae
ss
fld
vfrczps
xchg
cmp
and
mov
(bad)
test
loop
lock
mov
fwait
xchg
out
sub
push
stos
pop
xchg
xor
mov
clc
mov
add
jmp
shl
stos
(bad)
xlat
(bad)
and
(bad)
inc
arpl
or
(bad)
cmps
pop
scas
cpuid
pop
(bad)
and
add
and
iret
mov
jg
pop
jmp
cmp
shl
pop
popf
icebp
lea
jbe
repnz
xchg
xchg
ds
xchg
imul
aas
and
ret
loope
dec
or
aas
div
mov
loope
cmp
dec
enter
pop
cmps
xor
icebp
mov
pop
aam
retf
ret
adc
or
push
adc
jmp
cmps
imul
or
out
icebp
fldcw
adc
ins
mov
push
mov
(bad)
fstp
mov
xchg
mov
mov
xor
outs
fs
jl
inc
inc
sar
xor
fwait
or
stos
and
sbb
jmp
sbb
neg
xchg
inc
mov
mov
fsubr
fisubr
sbb
cdq
sbb
das
add
dec
and
push
cmp
jge
jmp
pop
adc
(bad)
std
setge
imul
fucomi
or
aam
jb
ret
scas
pop
xor
ror
gs
ins
inc
outs
pop
pushf
pop
cmps
rcr
jl
out
jb
mov
mov
mov
sub
push
pop
les
mov
(bad)
aam
pop
sbb
and
jecxz
add
(bad)
cld
mov
clc
outs
cmp
out
cwde
adc
stos
imul
jmp
mov
or
daa
adc
test
mov
adc
in
sub
rcr
cmp
fsubr
push
or
aad
push
sbb
outs
jmp
es
retf
retf
cmps
ficom
call
and
adc
cmp
add
rcr
jmp
cmp
lods
call
cmp
int
call
lods
jg
jmp
mov
arpl
js
fstp
jne
js
and
jg
xchg
mov
or
push
xor
ret
aaa
dec
cmps
je
jnp
xchg
dec
lods
add
stos
cmp
nop
mov
jo
loope
lahf
mul
into
pusha
shl
out
mov
(bad)
pop
ja
aas
sub
add
inc
mov
jg
mov
pop
retf
cmps
pop
or
ret
jo
fs
cld
adc
loopne
mov
in
sbb
dec
fsub
add
in
mov
repz
lahf
pop
dec
das
jmp
jge
ret
das
fmul
leave
adc
cmp
mov
or
xor
dec
les
popf
jae
lds
dec
or
(bad)
jmp
lahf
mov
shl
pop
mov
or
les
mov
pop
pop
hlt
iret
(bad)
aad
dec
cli
popf
sbb
pop
hlt
mov
cli
cs
inc
data16
mov
sar
pop
(bad)
neg
mov
neg
mov
sbb
mov
(bad)
mov
fimul
or
dec
aam
clc
imul
test
fisub
(bad)
sbb
mov
inc
lock
xor
push
push
adc
repz
inc
adc
hlt
jmp
lahf
xlat
in
xlat
clc
push
pop
xchg
cmps
out
sbb
mov
mov
push
test
shr
cli
xchg
sub
cmc
(bad)
mov
test
adc
aam
inc
retf
jno
movs
popa
in
push
call
hlt
shl
(bad)
ja
pop
push
pop
cmp
mov
fadd
mov
sub
ret
iret
lods
and
pop
or
mov
div
sti
xchg
imul
push
ja
aas
clc
xchg
push
imul
cdq
dec
and
out
mov
call
jge
je
push
pop
stos
es
add
jp
push
gs
nop
call
sti
ret
and
sub
cmc
fsub
push
pop
nop
sti
mov
shr
xlat
and
retf
mov
lock
jnp
xchg
push
mov
adc
jp
int3
xor
sub
mov
mov
mov
stc
sub
push
jne
(bad)
xchg
jns
loop
call
ja
push
inc
jb
push
ret
mov
inc
loope
inc
mov
xchg
rcr
ins
mov
pop
mov
push
mov
cmp
inc
ds
movs
sub
test
push
jle
(bad)
ins
or
jae
adc
jmp
xchg
jmp
ret
inc
inc
add
and
cmp
mov
stos
cmc
rcl
push
call
aas
test
inc
leave
test
xchg
icebp
pop
cdq
imul
scas
jp
pusha
clc
clc
idiv
fld
bound
ja
pop
xchg
add
mov
js
das
sbb
push
jg
(bad)
pop
test
fbld
sti
clc
cmp
cmp
ds
js
cmp
xchg
sbb
sbb
pop
push
xchg
jmp
ss
fnsave
inc
adc
loop
mov
les
xchg
loopne
movs
cmp
cmps
cmc
scas
xor
les
cmc
mov
cmp
inc
xor
fmul
stos
imul
(bad)
inc
push
(bad)
fsub
add
inc
jmp
dec
add
jg
scas
icebp
dec
test
popf
mov
test
pushf
fs
cmp
mov
sbb
loop
addr16
bnd
cwde
jbe
enter
mov
fs
ficomp
add
cmp
call
push
push
mov
mov
rol
lods
jae
xchg
cdq
push
(bad)
shl
pop
cmc
xchg
pop
sbb
aad
push
out
shl
and
adc
xchg
out
fmul
jmp
(bad)
jo
(bad)
push
inc
call
adc
mov
fist
sub
mov
std
cmp
or
stos
nop
push
jmp
cmp
mov
ret
out
loopne
inc
addr16
repz
(bad)
test
ror
retf
movs
nop
inc
jp
xor
cmc
fst
loop
inc
jae
push
and
enter
(bad)
add
mov
jo
sbb
test
inc
xor
sbb
int
sub
or
call
lods
mov
or
dec
add
xor
jecxz
and
cs
sbb
loopne
ss
cmp
adc
xor
(bad)
icebp
rcr
push
mul
inc
fadd
(bad)
in
out
ins
xor
lds
ins
jns
jmp
push
test
bound
outs
mov
gs
xchg
push
or
jmp
inc
push
ret
inc
pop
test
push
outs
dec
push
pop
adc
stos
jns
xchg
jecxz
adc
cmp
cmc
inc
jb
dec
cmp
call
outs
aad
test
inc
ds
and
out
push
jmp
or
push
ficomp
dec
adc
sbb
sub
cmp
push
push
pushf
fldenv
dec
shr
enter
add
pop
mov
dec
test
ret
je
out
idiv
lods
jb
pop
and
shl
call
test
lods
les
mov
pop
and
jle
add
mov
mov
cmp
dec
cli
outs
mov
lock
shl
lahf
(bad)
xchg
loopne
or
pop
call
push
mov
popa
mov
push
fcom
std
in
addr16
inc
pusha
or
jnp
jmp
cmp
loopne
adc
push
jnp
mov
shl
jns
sar
nop
cmp
sub
scas
cmp
push
out
mov
pop
repz
xchg
adc
daa
not
cmps
jns
mov
push
push
pop
sub
inc
cmps
push
aam
sti
aad
mov
sbb
dec
fbld
and
or
test
scas
ror
in
xchg
retf
sub
dec
sahf
push
cld
and
xchg
mov
pop
add
jb
shl
add
inc
inc
ret
sbb
cmp
out
sbb
sbb
pop
push
movs
xchg
shl
and
aaa
jae
adc
fisub
adc
or
or
adc
ja
xor
out
cmps
mov
inc
lahf
inc
out
xchg
adc
(bad)
mov
loope
lock
xor
push
cdq
or
fistp
test
scas
sbb
jns
data16
gs
stos
lods
mov
fldcw
cmp
mov
and
or
outs
cwde
push
or
pop
int3
and
add
adc
repz
or
repz
adc
and
add
test
mov
shl
push
(bad)
mov
mov
sbb
inc
add
inc
shr
adc
jp
jmp
les
(bad)
stc
cmp
gs
scas
add
fnstenv
push
add
jo
xchg
call
or
push
jl
in
mov
push
fadd
xchg
rol
pushf
call
mov
xchg
add
popf
mov
stc
xchg
and
pxor
dec
cmc
mov
gs
leave
or
out
xchg
adc
xchg
gs
(bad)
xlat
iret
push
sub
add
pushf
out
push
ret
xor
stos
pop
not
ins
clc
mov
jnp
pop
dec
mov
neg
inc
dec
mov
inc
daa
movs
cmps
mov
xchg
or
jno
fs
clc
jecxz
icebp
int3
adc
das
jo
push
or
push
ins
loopne
stc
mov
das
xor
adc
popa
and
iret
adc
(bad)
mov
pop
and
or
outs
test
mov
mov
or
ds
and
(bad)
daa
loopne
mov
mov
aas
sbb
jmp
xor
jp
sahf
mov
leave
(bad)
jnp
push
inc
ja
jle
sub
xchg
push
icebp
test
jmp
xchg
ja
retf
mov
adc
jbe
mov
nop
adc
mov
adc
pop
fld
aas
push
and
sbb
pop
das
test
iret
ins
imul
sub
cld
iret
jb
aas
adc
xchg
jns
jg
sub
in
sar
cmp
push
jo
sbb
and
test
or
cmp
out
push
inc
cmps
pop
push
int
jg
or
lds
mov
loop
pop
cmp
int3
scas
das
dec
retf
ss
adc
jmp
hlt
pop
imul
addr16
aad
fcom
inc
pop
sahf
xor
div
mov
mov
and
or
and
cli
or
push
in
or
ror
call
inc
mov
fist
xor
fmul
dec
jne
out
dec
mov
std
stc
mov
cmp
or
je
outs
xor
pop
jle
test
dec
loopne
mov
out
jle
hlt
mov
scas
cmc
js
aas
jne
cs
cmp
sti
push
leave
call
mov
jno
push
pop
push
int3
mov
cmp
gs
lock
xchg
mov
psubsw
popa
jle
sbb
push
dec
jo
pop
mov
jl
je
adc
sub
xchg
cs
cs
push
lahf
icebp
adc
into
mov
adc
pop
inc
mov
push
lods
xlat
addr16
cmc
loop
add
and
leave
(bad)
(bad)
adc
push
mov
and
(bad)
ds
jl
bswap
mov
leave
cmps
dec
jns
xchg
test
ret
(bad)
push
fbld
int3
addr16
or
mov
inc
add
enter
push
fwait
loope
bound
mov
mov
adc
int3
lods
dec
adc
push
int
sbb
mov
inc
repnz
nop
ret
pop
add
inc
cmp
jecxz
xlat
xor
and
lock
push
adc
jg
stos
int3
stos
push
add
add
mov
aam
test
jae
jno
(bad)
je
dec
xchg
inc
leave
xchg
xlat
adc
inc
(bad)
push
push
mov
(bad)
out
push
ror
enter
sub
or
iret
imul
(bad)
popa
adc
cmp
mov
sbb
lods
in
push
mov
xor
sub
xchg
in
mov
mov
push
jbe
pusha
add
movs
and
xchg
push
jl
lods
cdq
test
sub
push
adc
scas
inc
out
push
push
jg
push
adc
out
inc
mov
jb
jmp
add
test
je
scas
in
add
int
xor
mov
imul
mov
aam
or
or
jp
or
popf
and
aas
(bad)
sbb
pop
or
xchg
fwait
test
out
daa
and
fwait
cmp
xchg
fist
pop
mov
sbb
adc
(bad)
clc
repz
sahf
mov
not
cmp
adc
nop
dec
repnz
icebp
std
enter
fstp
cmp
loop
popf
jnp
jge
xchg
push
xor
in
cmp
or
push
dec
fcomip
mov
xchg
sub
adc
mov
dec
adc
cld
fidivr
aam
ret
mov
lods
mov
lods
add
shr
dec
lock
add
jle
rcr
add
xchg
hlt
and
test
fmul
in
mov
mov
xchg
out
icebp
mov
cmp
push
cmps
out
pop
sahf
in
rcl
mov
mov
inc
or
div
pop
mov
inc
or
fwait
xchg
xchg
sbb
sbb
jg
jb
mov
inc
iret
das
and
or
mov
pop
(bad)
mov
xor
in
and
add
test
jmp
and
js
inc
dec
in
lock
sbb
or
outs
push
test
sbb
in
fnstenv
inc
fsubr
mov
aam
dec
sar
stc
and
dec
xchg
jno
cmp
in
xlat
scas
pop
sub
push
jmp
xchg
in
outs
(bad)
cmp
adc
and
add
icebp
dec
mov
sub
xchg
std
pop
lods
jae
fstp
or
jnp
mov
ins
pop
mov
or
stos
call
dec
mov
ins
std
jno
cmp
les
or
sub
or
mov
inc
add
aad
fsub
xchg
scas
mov
push
xchg
and
addr16
xor
sub
movs
test
ins
jmp
(bad)
sti
(bad)
fisub
leave
imul
mov
sub
pop
xor
mov
sub
push
adc
(bad)
hlt
dec
shr
rol
(bad)
stc
(bad)
sahf
and
mov
adc
mov
xor
(bad)
int3
fwait
sub
in
shr
loopne
retf
cmps
mov
sbb
int3
mov
repz
cmp
push
cmp
xor
(bad)
jnp
mov
dec
xor
cmp
push
sub
cs
repz
xor
psadbw
inc
nop
sbb
cmp
mov
shl
or
jns
jle
fs
iret
mov
mov
popa
sub
mov
and
xchg
xchg
in
or
push
dec
ret
jge
xchg
xchg
cmp
arpl
cli
mov
adc
fild
movs
inc
das
sub
mov
stc
mov
call
mov
idiv
or
jl
sbb
out
out
jne
std
or
xchg
mov
cmp
sti
inc
xadd
ins
push
inc
xor
ja
mov
cmp
jge
sub
hlt
push
or
jo
pop
in
mov
jmp
jg
push
test
push
in
imul
mov
ds
cld
call
sahf
and
add
fwait
pop
mov
cs
ins
xchg
mov
mov
fstp
push
jmp
xor
xchg
push
xor
sar
adc
es
sahf
push
aad
adc
sbb
adc
popa
data16
cmps
and
mov
push
cld
jnp
std
push
mov
inc
pop
(bad)
in
jns
retf
mov
or
sub
pop
or
mov
fcom
sbb
arpl
xor
pushf
jl
jl
les
cld
dec
popf
xchg
fimul
mov
push
xor
int
out
popa
adc
mov
sub
dec
fdiv
adc
or
push
sbb
xchg
popf
inc
add
dec
push
gs
pop
push
fisubr
or
cmp
mov
scas
test
adc
dec
sub
or
out
and
rcr
mov
jo
(bad)
loopne
push
mov
stc
cmps
imul
pop
sub
idiv
xchg
xor
xchg
ins
mov
scas
xor
xchg
out
dec
movs
fdiv
cmp
aas
ret
mov
call
sbb
lds
adc
push
jo
fcom
adc
pop
clc
mov
(bad)
rcr
icebp
jns
mov
(bad)
mov
cmps
mov
lock
push
xchg
jmp
ror
mov
aam
out
mov
sahf
sbb
mov
adc
mov
mov
(bad)
retf
mov
iret
mov
and
cmp
inc
(bad)
adc
mov
sbb
shl
in
test
inc
popa
pushf
scas
jg
(bad)
mov
mov
fbstp
xchg
aas
lea
outs
push
lods
repz
pop
sbb
jmp
rcl
fild
test
and
rcl
xor
(bad)
icebp
out
push
pop
leave
sar
lock
sbb
pusha
loope
and
fild
push
retf
xchg
jge
sub
daa
cwde
or
mov
xchg
stos
call
in
and
mov
xchg
or
mov
sbb
hlt
scas
stc
jg
add
aam
mov
fwait
repz
adc
dec
jbe
jle
lods
in
ins
pop
push
inc
scas
or
sub
aad
ficom
sbb
add
xor
aas
loopne
lea
test
cmp
lods
psllw
fcmovb
pop
sub
inc
rcr
js
sar
nop
lods
and
push
jg
mov
leave
dec
cmp
adc
push
dec
cwde
cmc
movlps
dec
test
mov
das
cmc
xor
fadd
mov
repnz
popa
sar
cwde
(bad)
mov
scas
or
cmp
push
fsubr
add
(bad)
sub
(bad)
push
(bad)
xchg
ret
mov
popa
sub
mov
fwait
inc
std
dec
pop
or
and
cmp
xchg
shl
addr16
clc
cmps
push
sbb
or
loop
sbb
aas
(bad)
pop
adc
leave
mov
sbb
sbb
retf
jmp
or
mov
jns
mov
push
pushf
sbb
dec
cmp
xchg
mov
clc
and
mov
cmp
inc
jmp
rol
aaa
pop
movs
or
lods
loop
fs
mov
cdq
outs
test
pop
into
adc
mov
aad
cmp
push
mov
jnp
push
ins
test
shld
nop
in
outs
mov
xor
loop
dec
stos
xor
or
sbb
xor
retf
in
xor
mov
pop
push
mov
iret
jecxz
ror
add
cld
and
int3
inc
mov
adc
push
xchg
push
not
fst
mov
daa
in
lods
(bad)
mov
imul
clc
ret
jge
jbe
inc
add
pop
push
or
or
test
sub
stc
test
sub
pusha
cmp
inc
movs
imul
daa
es
xchg
fadd
cmp
jle
pop
xor
clc
xchg
icebp
sub
or
inc
inc
jne
ins
out
arpl
pop
mov
addr16
in
enter
fcom
loop
movs
(bad)
fsub
add
xor
xchg
push
fisttp
fbstp
les
pop
push
lahf
inc
mov
pop
sub
sbb
xor
ffreep
(bad)
push
jecxz
inc
sahf
push
ror
fwait
les
in
into
add
cmps
sbb
enter
div
xchg
push
sahf
fcomp
adc
and
mov
cmp
fnstenv
dec
adc
or
rcl
adc
mov
xlat
inc
retf
inc
pop
test
jg
add
fsub
fsubr
mov
pop
data16
pop
(bad)
loopne
aam
test
add
sub
adc
movsx
add
sbb
neg
xchg
retf
adc
out
psllw
or
cmp
mov
and
xor
xor
xchg
adc
faddp
sbb
int3
and
sub
push
std
mov
ins
adc
push
adc
ds
jns
jge
inc
mov
sub
add
push
and
xchg
xlat
sub
mov
jecxz
dec
fucom
ror
stos
push
sub
dec
js
je
aas
test
loop
add
sub
push
mov
pusha
popa
in
dec
(bad)
nop
dec
dec
xchg
retf
aad
pop
and
es
data16
inc
cdq
jg
ja
jmp
push
sbb
test
pop
pop
ficom
mov
mov
and
jmp
int3
dec
xlat
sub
enter
pop
add
out
imul
pop
push
call
fidivr
adc
jmp
mov
mov
cmps
xchg
adc
mov
mov
shr
jecxz
jl
fcom
adc
ins
je
clc
in
dec
out
mov
xchg
xchg
mov
gs
add
call
inc
out
stc
push
stos
test
jp
pop
dec
es
call
cmps
in
xor
fnstcw
xchg
call
or
sub
cmp
in
xor
stos
loope
aaa
mov
inc
adc
cmp
mov
inc
ins
dec
inc
sub
pop
adc
les
jg
adc
sub
sbb
call
lahf
ficom
and
add
ss
jne
iret
xchg
bswap
adc
push
jl
add
(bad)
aas
sub
inc
addr16
mov
and
sub
add
or
les
(bad)
xor
rcr
xchg
(bad)
xlat
imul
jg
(bad)
jecxz
popf
mov
cmp
clc
call
sbb
jge
lods
movs
lods
(bad)
fs
cmp
sbb
jge
inc
stc
(bad)
sbb
and
mov
dec
sub
aam
mov
xor
sbb
repnz
inc
into
xor
mov
inc
fwait
sub
(bad)
mov
movs
lahf
bound
pop
adc
sub
(bad)
or
fdiv
(bad)
fsub
(bad)
mov
mov
call
into
cmps
(bad)
push
ins
lods
pop
idiv
sbb
loope
test
jne
xchg
cld
pop
push
(bad)
rcl
loope
ins
cmp
ret
jo
jmp
or
out
push
xchg
in
hlt
adc
sub
mov
ins
sbb
imul
dec
cs
mov
in
imul
scas
daa
call
cmps
not
xor
inc
(bad)
test
push
pusha
pop
mov
pop
pop
inc
test
aaa
vpor
push
aad
pop
mov
jge
leave
gs
fcmovne
mov
and
add
inc
sub
mov
test
loop
cdq
mov
rol
test
jae
sbb
ss
mov
pop
jl
daa
jmp
mov
mov
pop
jl
xor
xchg
cs
push
ret
mov
lock
mov
push
pop
cmc
sbb
or
push
clc
adc
cmp
mov
cmp
mov
idiv
ss
or
adc
outs
push
out
dec
mov
stc
mov
rol
dec
push
mov
mov
addr16
xchg
hlt
pop
jmp
cdq
push
outs
jle
fidiv
mov
pop
jecxz
pop
xchg
popf
and
jg
imul
aad
and
mov
cmc
mov
lea
inc
fs
push
push
mov
ret
mov
mov
dec
sahf
inc
sub
add
xor
add
ds
popa
fstp
shr
inc
test
shl
les
jb
es
xor
dec
push
adc
clc
push
fnsave
scas
fdivr
lds
call
adc
cmc
js
fucomp
les
test
(bad)
in
and
sbb
bswap
adc
pop
mov
pop
rol
retf
ret
lods
add
xor
imul
fdivr
jae
jg
fld
push
cmps
aas
mov
(bad)
gs
mov
cmp
pop
and
xchg
jb
pop
push
adc
push
hlt
movs
cmp
push
mov
test
sti
scas
dec
dec
bnd
enter
sub
iret
sbb
or
or
cmps
mov
retf
loop
(bad)
cdq
and
cmp
pop
push
enter
loop
adc
mov
sbb
std
arpl
xor
inc
shl
xchg
or
sbb
(bad)
cs
ins
add
sti
daa
mov
add
mov
repz
mov
popf
push
push
aas
fidivr
mov
stc
lea
test
sub
sub
dec
aad
sbb
xor
nop
push
push
xorps
icebp
dec
mov
hlt
xor
aam
movs
push
add
and
push
xchg
movs
ret
ficomp
push
and
retf
fsubp
(bad)
test
aad
dec
jle
int
fstp
and
mov
jns
test
(bad)
push
rcl
cmova
imul
pop
test
inc
pop
mov
xchg
cmps
push
fwait
jns
fcomp
test
in
jae
sbb
std
cmp
pop
lea
pop
xchg
cmp
vmptrst
mov
push
jmp
scas
pop
fidivr
xor
pop
mov
call
loope
dec
hlt
jae
jb
mov
fcmove
pop
hlt
or
push
dec
push
sub
test
inc
adc
and
test
add
scas
dec
cmp
enter
stos
mov
fsubr
mov
wrmsr
ds
(bad)
xchg
popa
in
cmp
dec
lea
push
xchg
inc
sub
ss
rol
mov
pop
and
std
(bad)
loopne
inc
ins
mov
lds
push
imul
stos
jecxz
fisttp
pop
adc
outs
data16
push
int3
dec
out
ror
(bad)
mov
pop
cli
pop
push
dec
retf
xchg
fist
inc
xchg
lods
sub
lahf
xchg
out
daa
and
out
push
dec
scas
pushf
add
xor
sbb
scas
push
and
ins
adc
mov
div
(bad)
push
ins
idiv
pushf
shl
jge
inc
jno
or
aam
mov
xchg
into
dec
int3
ins
pop
arpl
(bad)
pop
push
outs
inc
daa
sub
mov
jne
adc
in
xchg
out
jae
popa
inc
fmul
add
add
rcl
aam
push
xor
and
xor
pop
adc
mov
test
xchg
loopne
cmp
icebp
cmp
(bad)
mov
movs
ins
outs
sub
pop
mov
aaa
add
into
sub
out
into
pop
xor
(bad)
scas
add
mov
ror
in
(bad)
pop
ins
inc
jne
cmp
in
outs
or
out
ins
sbb
pop
test
pop
outs
mov
or
xchg
les
aas
inc
out
retf
xchg
cmp
mov
test
and
xchg
dec
jg
and
cmp
cmps
xchg
sbb
je
lods
ret
xor
push
add
inc
cdq
scas
dec
and
push
in
das
adc
jb
aas
sbb
mov
mov
xchg
dec
hlt
add
jmp
dec
int3
shl
push
push
pop
or
inc
xor
movs
sbb
rol
jns
adc
pop
rol
adc
inc
xor
xor
adc
pushf
(bad)
test
sar
fistp
(bad)
out
cwd
pop
xchg
ins
cmc
mov
push
lods
mov
cmovge
push
inc
xor
adc
push
jmp
aaa
repz
jmp
jecxz
push
repz
(bad)
mov
or
inc
mov
inc
add
xchg
test
jmp
daa
mov
je
mov
sbb
mov
sub
jge
out
lods
sbb
lods
cmp
sub
pop
pop
cmp
cli
or
mov
add
rcr
xor
mov
out
sub
shl
sub
xchg
push
mov
add
xchg
sbb
sbb
mov
xchg
pop
or
fstp
pusha
pop
xor
dec
xor
ds
lahf
inc
jns
cmp
mov
cdq
je
mov
push
fistp
mov
push
xchg
jl
aad
int
repz
jnp
push
pop
ja
lds
in
sub
mov
fiadd
(bad)
dec
push
cmp
cmp
retf
cmps
cmps
mov
inc
out
or
outs
(bad)
adc
(bad)
out
mov
ja
cmp
sti
lea
cmp
xor
shl
imul
cmps
movs
pop
dec
mov
fwait
ja
add
xor
mov
mov
icebp
jnp
jecxz
stos
and
mov
pause
push
jne
fstp
popf
xlat
imul
imul
xor
loop
outs
(bad)
fs
fisubr
push
add
loopne
jb
dec
lods
in
xchg
push
cld
neg
mov
jp
push
call
std
movs
pop
das
stc
mov
xor
jmp
(bad)
fisubr
lods
loop
aam
mov
pop
xor
mov
sbb
and
xchg
and
das
dec
sub
pop
clc
test
ins
sti
dec
adc
cmp
sbb
xor
test
cmp
push
and
cs
cmp
pusha
sbb
xchg
push
mov
jl
fld
imul
mov
movs
dec
es
outs
jmp
out
inc
adc
cdq
or
push
and
mov
mov
push
inc
fld
(bad)
fisubr
pop
add
dec
dec
mov
loope
je
xor
je
and
scas
push
mov
es
jbe
jp
cmp
xchg
inc
test
ja
movs
retf
scas
lahf
out
retf
xchg
and
mov
mov
push
sti
pop
dec
dec
prefetchnta
(bad)
clc
inc
pop
and
gs
outs
lahf
mov
mov
xchg
popf
call
clc
pop
mov
adc
xchg
jmp
adc
push
sub
push
jl
sti
stos
ja
push
and
test
cwde
test
jae
scas
jmp
fcom
les
enter
sbb
hlt
in
movs
rol
das
in
cmp
jle
test
daa
cmps
icebp
retf
sbb
call
sbb
into
leave
dec
addr16
nop
dec
(bad)
dec
pop
outs
xchg
dec
xor
scas
lock
clc
pop
in
int3
dec
cmc
ss
stos
jb
cld
popf
mov
inc
imul
loope
xor
fcomp
retf
pop
adc
(bad)
lods
outs
js
adc
shl
ret
out
or
mov
enter
ds
or
pop
pop
mov
push
cmps
mov
jge
(bad)
loopne
pop
xor
mov
sbb
push
aad
nop
jbe
out
adc
adc
jnp
fs
mov
fwait
gs
push
in
popa
sbb
nop
aam
pop
inc
std
daa
or
cdq
test
rcr
add
sbb
shl
add
pushf
int3
ror
and
sti
dec
sub
into
xchg
int3
add
xchg
mov
ss
shr
jnp
cmp
hlt
lea
test
push
loop
push
mov
mov
and
inc
test
dec
or
sbb
push
sbb
scas
inc
xchg
and
and
stos
out
add
out
xchg
or
out
cmp
pop
imul
sub
push
xchg
dec
addr16
ins
cwde
or
call
mov
push
jb
fstp
enter
and
mov
and
(bad)
pusha
nop
cmp
inc
in
loope
inc
mov
daa
enter
and
movs
sbb
jbe
aaa
mov
aad
arpl
mov
popa
jo
js
mov
jecxz
or
les
sub
adc
xor
loope
aaa
pop
push
xlat
shl
mov
sbb
sbb
shl
dec
or
scas
lahf
mov
int3
das
(bad)
adc
adc
movs
fs
adc
sbb
push
jae
test
(bad)
dec
addr16
adc
dec
movs
out
iret
xchg
dec
and
and
cmp
jno
out
int
mov
nop
jno
int
into
(bad)
adc
mov
test
jp
mov
add
out
mov
pop
or
nop
sbb
push
out
mov
lock
enter
xchg
je
pop
or
call
mov
xchg
scas
mov
xchg
idiv
fist
xchg
jecxz
sub
cwde
fisub
lods
jmp
jmp
xchg
pop
cmp
push
es
push
(bad)
clc
adc
in
test
jle
in
xor
cmp
or
aas
fs
popf
aas
nop
mov
xchg
out
push
ret
in
hlt
outs
push
cmc
inc
lods
out
popf
(bad)
push
mov
adc
ret
enter
cmp
mov
rol
loop
rcr
mov
daa
test
cmp
pop
jmp
ret
adc
inc
jp
mov
cdq
add
pop
pop
and
cdq
fdiv
lds
nop
xchg
cmp
sbb
mov
mov
das
fdivr
sti
dec
out
pop
adc
push
mov
lea
nop
mov
sbb
(bad)
nop
jecxz
sahf
add
aas
xor
and
retf
test
sbb
push
les
movs
cmp
cdq
stos
(bad)
jmp
mov
mov
adc
fs
dec
xchg
sub
jo
movs
xchg
xchg
sbb
inc
and
inc
mov
lds
ud0
adc
pusha
pop
jne
push
mov
mov
into
xchg
(bad)
xor
cmp
add
ret
into
jg
mov
leave
out
out
and
call
inc
test
cdq
sahf
xor
(bad)
ja
cmp
scas
xchg
test
xchg
in
sbb
inc
add
cmp
mov
add
fisubr
cs
jmp
cmps
scas
sahf
and
xchg
mov
(bad)
(bad)
jnp
cld
mov
fidivr
or
movs
jno
fucomp
push
cs
pop
and
ds
fst
or
or
std
in
rol
dec
xchg
stc
xlat
or
sub
jl
std
xchg
pop
sbb
ret
ds
xchg
ja
ins
and
mov
dec
mov
sahf
les
mov
cmps
sub
ror
cmp
outs
sbb
dec
mov
cmps
mov
test
pop
xchg
aad
es
jge
jl
loop
jmp
xchg
push
in
inc
cmp
retf
stc
add
adc
xor
mov
mov
in
retf
mov
jmp
sub
jmp
cmp
pop
adc
jns
mov
ret
movs
or
push
dec
xlat
add
arpl
outs
loopne
push
jbe
rcl
cmp
push
inc
inc
dec
sbb
xlat
jp
imul
int3
or
sbb
jg
and
das
push
add
jb
jnp
pop
and
add
pop
mov
pop
push
sbb
lds
jae
int
pop
xor
sahf
mov
xor
loopne
ins
pop
in
je
adc
dec
sbb
cmps
aaa
jmp
mov
push
bound
push
push
add
mov
adc
int3
pop
dec
cmps
les
mov
cdq
cmps
mov
xchg
(bad)
test
pop
xor
fisubr
cmp
dec
xchg
mov
out
and
xchg
ret
sti
fldcw
dec
jne
loopne
in
pop
pusha
in
mov
jne
int
and
cmp
adc
or
(bad)
movzx
cmp
xchg
sbb
(bad)
inc
cld
xor
inc
xchg
push
sub
push
pop
aam
lods
es
xor
cmc
xor
cmps
movs
shl
xchg
add
mov
inc
out
cmp
cmp
data16
or
cmp
mov
out
neg
daa
mov
das
jne
js
cmp
mov
mov
sbb
dec
inc
push
push
pop
mov
(bad)
int3
in
mov
or
push
mov
std
jecxz
out
(bad)
jle
mov
jnp
call
scas
sub
and
xor
shr
mov
and
nop
lods
fs
or
fcom
dec
hlt
fidivr
out
fisttp
je
in
(bad)
out
loope
and
fisubr
dec
mov
fst
dec
sub
out
mov
fdiv
in
sbb
loope
jp
or
sbb
dec
cmp
into
adc
stos
inc
add
mov
mov
mov
loop
push
stos
(bad)
sub
jb
cmps
(bad)
add
outs
xor
dec
pop
or
sbb
das
fistp
pop
add
xor
pop
(bad)
mov
pop
sub
sub
clc
(bad)
push
scas
pop
dec
xchg
pop
fdiv
xchg
cmc
mov
(bad)
fild
inc
pop
dec
pop
sub
mov
(bad)
or
cld
imul
stos
ja
pop
(bad)
enter
ss
addr16
inc
movs
iret
rcr
mov
cdq
xchg
lea
jg
fnsave
std
shl
stos
sub
test
aad
xor
cdq
and
sahf
div
scas
shr
push
and
sbb
repz
push
(bad)
imul
leave
cli
dec
ja
xchg
add
hlt
loope
mov
mov
mov
and
lods
mov
sbb
add
fist
pop
dec
pop
cmp
aaa
mov
sbb
mov
(bad)
aam
add
xor
out
cmpxchg
enter
jmp
sub
nop
sti
xor
(bad)
ins
xchg
in
das
(bad)
call
nop
dec
xchg
test
add
in
ds
sbb
pop
mov
xchg
mov
inc
js
shr
dec
xor
sub
ja
int
test
mov
and
or
ror
je
cmp
mov
sub
mov
(bad)
push
xor
sbb
add
mov
jne
repnz
leave
and
xor
leave
dec
jmp
xor
enter
scas
mov
stos
jecxz
jb
mov
mov
push
icebp
dec
push
push
xor
or
aas
cmps
enter
and
pop
adc
adc
xchg
outs
dec
into
mov
add
jge
push
lds
(bad)
leave
ins
ja
xor
xor
cmp
imul
out
inc
xchg
inc
jge
jnp
xchg
xor
xor
lds
jns
lock
loope
fidiv
nop
cdq
arpl
call
lds
adc
les
test
lds
push
add
in
loope
jnp
fisubr
in
inc
inc
pop
fs
mov
sub
cdq
mov
ret
dec
test
stos
mov
dec
fcmovne
sbb
or
jbe
imul
jo
dec
std
dec
push
mov
repnz
xchg
pop
mov
int3
fdivr
cld
fwait
ins
out
adc
or
mov
jo
retf
stc
pop
int
or
pop
scas
out
inc
ins
or
sti
xor
ds
imul
out
popf
xor
shl
in
adc
int
les
and
adc
xor
push
jo
movd
jg
into
leave
sti
mov
mov
test
add
das
and
push
test
add
mov
mov
prefetchwt1
or
xchg
movs
and
jo
inc
sub
jbe
add
dec
test
test
mov
mov
cmp
cmp
mov
(bad)
jmp
jbe
sub
cmp
pop
out
or
cld
xlat
mov
outs
call
imul
fstsw
sti
(bad)
sti
mov
cmp
je
jbe
aas
mov
mov
aas
sbb
mov
inc
hlt
sahf
stc
and
lahf
lahf
inc
movs
pop
and
jmp
lods
inc
stc
and
pavgb
aaa
cmp
xor
fs
stc
cdq
push
xlat
dec
in
adc
xor
and
xchg
xlat
mov
(bad)
or
(bad)
mov
sub
fidivr
js
dec
and
clc
inc
idiv
xor
mov
retf
outs
cmp
jecxz
test
xchg
daa
mov
test
jnp
push
push
xor
xchg
sbb
fwait
mov
ja
cld
push
movs
sbb
cmp
arpl
and
pop
ss
dec
fistp
jns
inc
pushf
popa
sub
ss
add
cmps
push
int3
xlat
lods
adc
xchg
into
jg
cmp
aas
pop
int3
jge
add
js
inc
push
cmc
sbb
or
sbb
mov
std
test
into
pop
xlat
retf
sbb
jb
sub
and
icebp
in
xchg
jno
dec
aaa
ins
mov
push
ins
test
sub
aam
rcl
(bad)
or
xchg
push
ret
xchg
fldcw
inc
inc
xchg
dec
clc
inc
add
push
add
pop
enter
mov
fwait
inc
test
mov
sbb
cmp
out
pop
mov
add
xchg
sti
repz
mov
test
aam
movs
mov
push
inc
sub
sub
icebp
sbb
mov
fdivr
ret
fwait
push
lods
pop
mov
test
sbb
(bad)
pop
push
lahf
push
pop
in
loop
fwait
push
mov
lahf
cmp
or
add
pop
ss
adc
sub
cmp
sub
int
dec
mov
push
mov
jle
aas
outs
retf
mov
or
fild
gs
shr
xchg
(bad)
mov
iret
mov
jnp
inc
std
jb
xor
jno
stos
push
mov
ret
mov
and
(bad)
(bad)
cwde
in
jmp
retf
mov
ja
add
sbb
std
ins
out
mov
jno
std
cli
pop
jb
(bad)
lods
sub
addr16
jle
jmp
sbb
dec
or
inc
jbe
rcl
mov
mov
mov
mov
push
js
add
data16
jbe
mov
jns
stos
not
dec
mov
push
retf
mov
xor
add
xor
jle
lock
xchg
nop
in
leave
mov
inc
fld
fdiv
out
mov
ror
jbe
(bad)
mov
leave
gs
dec
dec
mov
mov
cmps
and
leave
inc
xor
aaa
adc
cmps
dec
jnp
aas
xchg
cwde
outs
and
out
rol
gs
cmp
test
xchg
or
pop
push
jb
or
fsubr
xor
imul
jg
ret
mov
lds
pop
pop
pop
push
clc
daa
add
(bad)
imul
pop
mov
out
shr
js
loopne
inc
in
fwait
scas
adc
shr
(bad)
and
ss
retf
pop
jle
lds
and
ss
(bad)
jmp
call
mov
push
sub
xor
jecxz
jl
lods
ds
dec
cmp
adc
pshufw
inc
js
mov
sbb
fimul
mov
dec
adc
cmp
(bad)
mov
mov
add
and
push
inc
jne
(bad)
adc
xor
dec
iret
pop
std
ins
iret
fldcw
jb
cmp
dec
adc
mov
add
xchg
add
cdq
fmul
outs
pop
fdiv
inc
jmp
cs
das
dec
push
outs
ins
repz
ror
(bad)
pop
dec
movs
icebp
ror
dec
not
clc
cs
jae
lods
xor
xchg
inc
add
inc
add
out
push
cli
shr
mov
mov
sbb
mov
jne
cwde
inc
aam
les
push
adc
shr
jp
arpl
mov
pop
jns
jno
and
mov
mov
push
test
(bad)
mov
mov
mov
jp
icebp
inc
pop
dec
int
inc
xchg
fwait
jne
pop
fdiv
adc
ja
or
dec
in
cmp
cmp
push
pop
cwde
ins
mov
lods
sbb
inc
cmps
in
jge
ret
jmp
sbb
pop
jbe
add
lods
ret
fistp
mov
test
xor
pop
and
push
cmps
dec
pushf
xor
outs
mov
stc
stos
sar
in
sahf
mov
xor
mov
jnp
xlat
in
enter
dec
gs
dec
cmp
and
jb
retf
popf
xchg
leave
dec
xchg
aam
lea
ins
or
mov
es
je
pop
aaa
imul
add
xchg
dec
push
test
call
push
jmp
inc
ret
fld
clc
jp
and
gs
jo
stc
push
dec
xor
sti
pop
or
add
retf
fidiv
aas
test
jmp
mov
cmps
jp
or
pop
ss
popa
dec
retf
es
retf
pop
adc
stc
test
pushf
dec
fnstsw
repz
mov
fwait
das
lea
cmps
rcl
or
gs
push
sahf
bnd
mov
ds
jbe
je
jg
xchg
repnz
dec
mov
and
ja
mov
inc
not
outs
std
xchg
or
mov
pop
lock
dec
imul
fs
mov
lods
and
cdq
in
xchg
iret
inc
xchg
dec
mov
scas
cmc
int
mov
ret
es
xor
inc
ret
cs
mov
dec
test
xchg
aaa
dec
push
shl
or
bound
add
or
popa
stos
das
adc
push
and
pop
rcl
jmp
out
idiv
shr
jno
xor
je
lahf
xor
sub
out
inc
cli
add
cmp
mov
cmps
mov
mov
outs
fld
ins
add
or
hlt
shr
pop
mov
sbb
fwait
test
and
sub
mov
mov
mov
aas
loopne
iret
push
nop
cmps
push
cld
xchg
cmp
jbe
jb
cmp
adc
ret
inc
out
out
iret
(bad)
outs
push
fucom
in
(bad)
xchg
dec
imul
hlt
dec
not
jnp
out
stos
and
inc
pop
enter
imul
push
repz
pop
stos
fcomp
xchg
mov
in
jne
mov
out
dec
ja
js
fcmovb
xor
scas
push
neg
scas
in
idiv
xor
sub
loopne
dec
in
fild
int3
out
iret
movs
aas
sub
push
gs
loopne
cs
dec
es
mov
sub
ds
pop
movs
xor
outs
mov
into
cmp
and
jae
retf
leave
jb
sahf
cmp
xchg
inc
call
in
and
js
mov
les
or
jae
call
add
test
pop
or
lock
stos
in
in
sar
jb
inc
dec
jmp
stos
mov
inc
imul
push
dec
retf
out
movs
cs
add
ja
push
mov
sub
mov
mov
icebp
(bad)
in
je
pop
dec
mov
loope
or
mov
out
lea
jp
sti
hlt
jp
mov
push
int3
inc
fstp
pop
mov
mov
xchg
imul
retf
bound
std
add
sub
pop
push
mov
jns
mov
jae
icebp
jo
fbstp
push
imul
push
xor
das
lods
jno
test
mov
std
lahf
pop
fnstenv
ds
mov
cmp
fld
bound
push
out
adc
std
jl
movs
fist
mov
xchg
jl
sbb
in
in
sub
fistp
aad
rcl
xchg
sub
mov
jne
call
daa
repnz
aaa
jg
std
outs
mov
loopne
add
mov
push
inc
hlt
push
aam
fist
in
ret
test
pushf
fcom
mov
pop
int3
pop
and
fistp
jecxz
mov
ds
sbb
cmp
out
push
sub
pusha
sbb
aaa
iret
mov
stc
sbb
test
sbb
mul
jnp
aaa
inc
stos
sub
lahf
and
in
jle
pusha
pushf
sbb
movd
dec
jns
adc
dec
cdq
rcl
cmp
inc
cmp
mov
xor
pop
or
adc
pop
sbb
(bad)
xor
inc
push
pop
mov
aas
push
adc
(bad)
jno
jge
fstp
enter
outs
add
push
push
adc
lds
retf
bound
fs
es
fwait
xchg
adc
add
repnz
mov
inc
mov
push
cwde
adc
push
es
div
fistp
jmp
ins
jmp
pop
outs
push
je
push
push
sbb
leave
rol
xchg
push
mov
or
jo
and
mov
test
pop
pop
push
iret
repz
fdiv
mov
iret
stc
cli
or
loope
pop
sub
cld
bound
out
stc
lods
dec
inc
and
push
mov
lea
cdq
or
cmp
fs
xor
sbb
in
scas
add
aas
inc
xchg
stos
jbe
mov
mov
xchg
inc
fs
shl
pop
mov
pop
lods
ins
cld
fidivr
rol
jnp
inc
and
clc
cdq
adc
add
arpl
add
adc
je
push
mov
jl
ja
mov
call
lock
shr
mov
inc
adc
cwde
(bad)
jg
push
add
cmp
dec
jmp
addr16
cmc
das
xchg
pop
and
dec
or
inc
test
xor
cmp
outs
push
xchg
dec
add
push
std
aaa
push
add
es
nop
inc
mov
test
pop
sub
out
je
aad
test
mov
cmp
ins
iret
push
xchg
xchg
xchg
in
mov
cs
sub
sti
jmp
sbb
add
aam
pop
loop
dec
retf
jecxz
and
xchg
aaa
aaa
push
lock
pop
aad
xchg
jns
mov
rol
ins
sub
mov
add
pop
mov
xchg
in
ins
ret
ds
lock
not
dec
cmp
or
(bad)
fld
or
pop
icebp
cmp
dec
xchg
repnz
mov
xor
or
pop
hlt
ins
and
ins
sub
or
dec
push
mov
mov
xchg
sub
add
dec
mov
mov
add
js
retf
jg
ficom
sbb
fild
sbb
dec
xor
(bad)
push
sub
movs
test
add
push
(bad)
(bad)
stc
dec
leave
push
and
pop
add
in
clc
jl
pop
or
xchg
cmp
fadd
(bad)
not
xor
sbb
aaa
outs
in
or
pop
jp
js
mov
add
push
mov
int
test
jg
sub
(bad)
fnstsw
loopne
pop
movs
popa
dec
push
sbb
std
ficom
aaa
xchg
xor
stos
mov
and
(bad)
xor
outs
or
ja
arpl
and
imul
cmp
xchg
mov
aas
sub
scas
and
sub
test
add
(bad)
shr
or
mov
fnsave
adc
ins
sub
(bad)
adc
inc
mov
inc
in
xchg
movs
mov
ret
xchg
cmp
adc
push
fbstp
fimul
xchg
adc
add
pusha
fcmove
jecxz
xor
in
dec
push
xor
loop
lea
push
icebp
dec
(bad)
out
fsub
dec
mov
pop
cld
dec
sub
(bad)
div
(bad)
pop
loop
sub
jp
xlat
mov
daa
int3
pop
and
jns
das
mov
xchg
imul
push
in
pop
adc
loope
mov
(bad)
push
fs
arpl
loopne
adc
es
dec
test
sub
int3
cmc
aam
xlat
jbe
inc
fmul
adc
xchg
jecxz
jno
test
fisub
bswap
sub
lods
outs
into
imul
xchg
fsubr
cmp
xor
add
inc
in
pushf
inc
add
pop
push
lahf
or
mov
xchg
mov
imul
(bad)
cmp
mov
retf
mov
cmp
fs
sbb
sar
in
int
call
push
inc
push
enter
pusha
or
xchg
adc
mov
and
dec
cmp
pop
add
aaa
pusha
leave
repnz
mov
enter
and
out
and
out
sub
and
push
inc
retf
xor
or
in
sbb
adc
jmp
cs
mov
(bad)
cs
fwait
sub
in
sub
jae
inc
jmp
or
xor
test
icebp
pusha
not
sahf
(bad)
ins
dec
mov
stos
xlat
jl
sti
fdivrp
bound
sti
jno
dec
outs
fmul
jns
pop
cdq
add
mov
fistp
cs
xor
(bad)
stos
pop
mov
div
push
mov
loope
jbe
call
push
push
push
push
add
and
fstp
mov
loope
out
(bad)
in
add
lea
pop
mov
jmp
and
mov
daa
in
xchg
add
mov
add
inc
sbb
outs
xor
test
fmul
adc
push
cmp
mov
stos
stos
jmp
jno
int3
push
add
mov
call
fistp
std
out
nop
mul
dec
dec
sbb
push
add
aad
idiv
mov
iret
or
mov
adc
into
ss
not
push
inc
xchg
js
mov
imul
mov
pop
mov
repnz
fwait
dec
jns
sar
push
pop
cdq
mov
test
sbb
les
fs
adc
fcom
mov
dec
movups
xchg
push
loope
xchg
pop
arpl
ret
(bad)
fmul
pop
retf
xchg
movs
mov
lds
out
dec
cdq
stos
xchg
pop
inc
mov
or
ds
retf
cmps
xchg
retf
pop
icebp
xor
test
cmp
add
sub
and
retf
jns
rcr
outs
push
push
movs
mul
scas
jmp
inc
sbb
gs
fucompp
jae
movs
cli
popa
movs
push
push
fcomp
pushf
and
add
xor
jmp
dec
or
je
inc
inc
aas
pop
(bad)
adc
out
adc
int
pop
rol
xor
ins
add
sar
shr
cmp
sbb
cs
mov
cmp
addr16
in
dec
inc
xchg
call
push
mov
psubsb
(bad)
mov
lock
dec
add
jbe
push
adc
movs
aaa
and
cmps
outs
push
je
mov
shr
push
and
mov
rcr
sub
(bad)
push
mov
inc
adc
ja
and
mov
or
inc
out
dec
mov
rcl
mov
sub
ins
ss
mov
int
push
data16
fsubr
fdivr
mov
fldenv
(bad)
stc
adc
add
sbb
iret
test
(bad)
jl
cmps
cmp
push
bound
xchg
fwait
ins
std
pop
sbb
pop
icebp
lea
inc
xchg
iret
imul
call
not
mov
js
push
adc
addr16
jl
pop
sbb
add
test
dec
inc
fldenv
inc
mov
and
or
pop
fisubr
cdq
out
dec
fisubr
call
mov
dec
gs
jle
mov
jp
fdiv
cmp
int
movs
rcr
push
mov
jae
adc
rcl
sahf
enter
pop
dec
xor
iret
pop
cmp
popf
out
out
and
dec
mov
in
push
ret
jno
adc
aas
cwde
jbe
neg
mov
xchg
aas
mov
xor
jg
mov
data16
mov
adc
sbb
inc
int3
jnp
sub
shr
cmc
dec
stos
add
popf
cmps
jmp
pushf
mov
mov
fidivr
dec
push
rcr
in
mov
call
sahf
jmp
jmp
dec
pop
jb
mov
cmp
or
ins
aad
outs
inc
push
cli
add
jmp
jl
aas
sub
xor
fst
rcr
fwait
inc
out
adc
push
mov
push
cmc
mov
inc
repnz
loop
xor
inc
jbe
rcl
ret
ins
sti
clc
aam
push
xchg
call
jmp
arpl
add
mov
out
push
shr
retf
(bad)
mov
adc
cmps
fwait
pop
loopne
(bad)
jo
inc
or
stc
mov
jb
jne
in
sbb
ror
adc
jno
push
inc
sub
jb
xchg
stc
retf
push
mov
addr16
jecxz
add
jmp
and
dec
stos
mov
cdq
mov
xchg
js
mov
inc
fsubr
push
pusha
stos
sub
cmc
fisttp
mov
xchg
push
repz
mov
cli
(bad)
loop
lds
or
xchg
pop
loope
not
ins
pop
jae
test
cmp
fcom
cmp
sbb
xor
mov
ins
pusha
push
mov
mov
dec
mov
leave
retf
ins
mov
retf
push
xchg
aas
push
cmp
(bad)
inc
push
pop
pop
cmp
addr16
adc
mov
xchg
jge
daa
daa
mov
inc
ficomp
adc
mov
sub
push
adc
loope
jae
cli
retf
ror
inc
fnstcw
imul
sar
jmp
fisttp
push
fcom
sub
sub
cmp
pusha
pop
xor
hlt
push
aam
mov
loopne
in
cli
daa
fwait
add
scas
dec
dec
jge
jg
enter
test
xchg
(bad)
stc
sub
jmp
test
push
sbb
pop
and
fstp
popf
hlt
fst
out
dec
test
sub
fistp
xlat
and
(bad)
in
dec
sub
test
pop
mov
and
or
inc
dec
cmc
out
mov
test
daa
fisttp
movs
sar
(bad)
add
stos
jge
cwde
imul
cmps
out
enter
xor
arpl
jnp
ja
stc
cld
inc
xor
push
popf
mov
jo
repz
loope
ret
pushf
dec
jecxz
test
cmps
push
mov
inc
jne
mov
sbb
sbb
out
ds
ret
mov
mov
inc
dec
movs
and
cmp
les
sbb
loopne
mov
jo
or
cmp
aad
fsubr
jmp
and
aam
mov
push
test
and
shr
push
jecxz
daa
mov
mov
inc
or
pop
lahf
je
test
xor
inc
push
lock
adc
sahf
mov
icebp
fld
pop
retf
mov
jmp
cld
in
stos
cdq
push
adc
arpl
mov
or
enter
lock
pop
pop
(bad)
mov
adc
inc
mov
cmc
lods
sub
das
dec
in
sub
ins
jmp
cmps
xchg
sar
mov
sahf
pop
mov
ja
test
cmp
mov
inc
repnz
ja
and
adc
xchg
movs
push
mov
xchg
clc
dec
or
or
addr16
cmp
lea
fcomp
or
lock
(bad)
test
add
jo
popf
nop
dec
std
dec
mov
or
push
inc
call
cmc
out
mov
pop
sbb
inc
lahf
cld
dec
loop
cmc
pop
adc
fwait
dec
push
(bad)
xlat
movs
test
fld
and
stos
sbb
dec
call
bound
jno
and
ds
lds
xor
cmps
xlat
adc
test
movs
cmp
sub
adc
sbb
cmps
or
fs
push
nop
addr16
add
jnp
dec
cwde
adc
mov
test
jns
int
stc
movs
xchg
inc
sbb
out
adc
bound
sahf
iret
push
cmc
jge
dec
xor
xchg
mov
(bad)
loope
mov
idiv
pop
sbb
adc
and
je
mov
sbb
cwde
sub
std
adc
loopne
jbe
jbe
add
in
icebp
xor
fiadd
rol
gs
xchg
std
je
ret
ret
ss
mov
pushf
push
gs
mov
(bad)
dec
mov
jno
jnp
push
(bad)
sbb
stc
xor
mov
and
pop
test
retf
dec
repnz
mov
pushf
xor
(bad)
lock
fimul
jmp
mov
das
sbb
sub
jle
stc
adc
mov
sbb
dec
mov
mov
aas
scas
test
sbb
mov
mov
fadd
int
mov
fcmovu
sub
call
cmp
pop
xor
cmp
xor
ins
jmp
push
call
data16
pop
cmps
mov
cmp
mov
jmp
retf
sub
icebp
jp
mov
rcl
ds
add
mov
daa
mov
sub
paddw
int3
jns
mov
fmul
lock
fsubr
fwait
pop
pop
movs
mov
adc
movs
inc
bound
mov
icebp
and
std
(bad)
mov
ret
scas
iret
cmps
ja
cmp
test
xchg
fidiv
ins
bound
cmp
mov
or
mov
clc
adc
mov
and
sbb
add
xchg
not
dec
or
push
shl
add
je
int
jns
mov
mov
mov
mov
jmp
inc
add
inc
add
jg
xor
std
sbb
repnz
xchg
or
into
sub
icebp
jl
fmul
mov
cmp
and
sbb
in
mov
mov
jp
outs
inc
pop
stos
add
inc
pop
fsubr
and
push
mov
cmp
jns
push
aam
cld
mov
test
(bad)
jb
fmul
gs
mov
mov
(bad)
push
sub
push
or
fist
push
sbb
fwait
dec
add
lea
mov
ror
repnz
ror
inc
push
js
pop
cmp
mov
pop
aas
sahf
or
stos
xchg
xchg
es
dec
mov
aam
or
(bad)
scas
mov
or
ss
fwait
rcr
hlt
scas
(bad)
or
dec
cmps
push
cmps
mov
and
sbb
aad
or
shl
in
and
cli
mov
mov
mov
mov
lock
cmps
loop
bound
dec
mov
cmp
les
jle
cld
movs
xor
out
dec
mov
pusha
stos
daa
sbb
lock
xchg
cwde
cmp
inc
cs
repnz
popw
push
xchg
jl
push
out
sbb
jp
cmc
call
shl
add
xchg
sti
mov
adc
addr16
jmp
adc
fs
aaa
mov
inc
dec
ret
cmps
shr
sub
daa
fucompp
repnz
pop
adc
mov
and
or
xchg
adc
and
stos
jmp
mov
sub
outs
fwait
imul
add
cli
cld
(bad)
xchg
jl
xchg
adc
jnp
movs
cld
ins
mov
xor
jle
mov
mov
dec
jmp
xchg
xchg
in
add
xlat
jnp
mov
sbb
sbb
mov
pop
mov
aas
push
pop
aad
sbb
leave
adc
call
fs
lods
cmps
data16
cmp
fidiv
jno
mov
xor
and
sar
inc
xor
mov
not
enter
mov
xlat
xchg
jmp
push
lea
pop
pop
sbb
inc
cmps
pop
push
mov
mov
sbb
cmp
aam
push
ds
add
sub
popa
pop
in
(bad)
push
sbb
sub
dec
imul
add
sbb
mov
aam
sub
fcomi
adc
mov
(bad)
jl
fisubr
test
inc
mov
sbb
inc
cdq
jmp
mov
cmp
mov
jle
pushf
inc
sti
(bad)
cmp
or
in
xor
popf
test
in
inc
push
mov
ret
xlat
aas
and
stos
push
adc
movs
mov
jno
js
pop
in
and
retf
xchg
mov
mov
jo
(bad)
xor
mov
push
cdq
leave
dec
mov
(bad)
fldenv
aam
bound
push
and
push
adc
enter
push
ret
stos
daa
je
dec
sub
sti
pop
jae
pop
xor
jg
cmp
not
dec
in
cmps
xchg
test
xor
sub
cwde
stos
xchg
jmp
sub
xchg
loop
ja
fisttp
and
ss
xor
jbe
adc
or
les
(bad)
ficom
mov
js
lea
fimul
ss
ja
sub
outs
mov
(bad)
stc
pop
test
scas
mov
pop
inc
xor
push
retf
dec
mov
xchg
and
push
inc
pop
ins
bound
and
dec
sub
es
add
adc
loop
loopne
mov
nop
pusha
sub
xchg
xchg
sbb
add
aam
(bad)
fldcw
call
push
dec
movs
push
sub
mov
and
jmp
lods
jge
mov
or
daa
push
(bad)
outs
in
xchg
sbb
cmp
ds
stos
std
inc
jecxz
(bad)
loope
mov
xchg
pop
enter
repz
into
jl
cmovp
and
xor
stos
xchg
shr
mov
or
push
or
aad
mov
or
test
cmp
out
push
popa
test
inc
ss
mul
sub
jae
ret
pushf
or
xchg
int3
imul
adc
cld
das
fs
mov
rcr
iret
cld
ins
cmp
(bad)
adc
iret
ss
mov
push
push
loopne
mov
mov
xchg
das
mov
sbb
loop
jae
mov
xchg
in
fisttp
jo
test
mov
fmul
pop
sbb
mov
add
outs
adc
sbb
xchg
cmp
and
dec
in
inc
fldcw
in
das
cmc
popa
pop
out
sbb
sub
mov
adc
nop
lods
or
push
ss
inc
test
mov
nop
xor
scas
push
mov
jnp
ss
pop
push
pop
jle
fwait
xchg
cs
jo
mov
dec
sahf
fcmovne
xchg
add
lahf
sub
and
and
mov
in
cdq
push
stc
pop
mov
fstp
idiv
pushf
mov
pop
not
xor
pop
or
mov
cmp
push
jns
xor
int3
pop
mov
pop
mov
das
out
(bad)
mov
xlat
jg
xchg
push
sbb
das
mov
xlat
(bad)
push
inc
pop
or
retf
pop
aaa
outs
fsubr
mov
push
call
push
aas
(bad)
std
aad
mov
mov
dec
in
xor
ds
or
out
(bad)
aas
mov
jo
stc
test
mov
xchg
sub
aaa
pop
or
stos
loope
add
lahf
jbe
mul
scas
mov
push
je
xchg
addr16
scas
mov
adc
sub
mov
cld
jns
push
leave
shl
call
mov
popw
pop
xchg
pop
js
xchg
out
pop
jne
mov
pop
loop
std
pop
cdq
cdq
pop
stos
fpatan
cmp
aaa
leave
inc
jg
add
inc
jae
add
pop
sbb
shr
stos
leave
out
cmp
jo
pop
fiadd
cmps
movs
mov
shl
bound
(bad)
adc
addr16
push
in
and
out
xchg
cld
pop
fwait
xor
cmp
imul
and
jge
hlt
and
jp
bound
fcom
cmc
sub
arpl
rol
dec
mov
inc
inc
ret
bound
sbb
jg
xlat
pop
gs
cli
call
movs
outs
shl
call
jmp
into
sub
or
mov
push
xchg
jecxz
xchg
push
sbb
popf
xor
repz
into
push
aas
sub
mov
xchg
mov
adc
mov
iret
fmul
stos
and
out
lock
data16
xchg
jmp
retf
test
push
fldz
mov
jo
lahf
rcl
das
(bad)
ds
xchg
add
pop
xor
mov
xor
jp
sub
and
inc
or
mov
fldcw
jmp
jp
ror
int
idiv
add
fistp
dec
imul
push
imul
in
or
cmp
jle
nop
push
pop
test
xchg
adc
lods
xchg
push
rcr
push
sub
sbb
cmp
inc
imul
test
jle
lea
(bad)
and
enter
adc
mov
(bad)
push
mov
and
mov
inc
mov
or
or
pushf
xor
dec
test
sub
xchg
sti
sub
and
push
inc
fwait
aam
outs
scas
out
pop
out
mov
pop
test
and
repz
mov
jne
mov
mov
inc
cdq
dec
rcl
add
cmp
int3
pop
push
shr
sbb
aaa
arpl
and
js
add
and
inc
mov
pop
pop
push
sbb
cmps
mov
jmp
mov
mov
add
cmps
inc
shl
ret
mov
sbb
fwait
test
pop
inc
xchg
imul
jmp
lods
push
out
dec
cld
sub
sub
dec
jge
les
or
sbb
lahf
test
xor
loope
mov
repnz
enter
out
fcmovnu
prefetch
or
jecxz
jg
push
sahf
inc
pop
mov
lock
sbb
dec
dec
push
loopne
cwde
pusha
cmp
push
stos
sbb
jp
or
mov
pop
sub
pop
out
dec
jnp
xchg
mov
pusha
adc
shl
loope
inc
(bad)
mov
jecxz
enter
push
ja
enter
jnp
es
adc
or
test
das
dec
cmc
dec
inc
icebp
das
adc
push
mov
ins
pop
aas
loop
sbb
fild
add
mov
mov
mov
sub
out
dec
popa
icebp
mov
push
ins
push
xor
mov
ror
div
pop
adc
(bad)
xor
add
int
mov
sub
jns
sbb
and
(bad)
pop
movs
or
loopne
clc
stc
push
jge
or
and
lea
cmp
loope
mov
dec
dec
adc
mov
mov
mov
aam
jno
mov
jle
mov
fsubr
dec
shl
mov
mov
ins
sahf
mov
push
aad
inc
movs
repz
test
jo
cmp
in
leave
xchg
xor
adc
mov
push
mov
xor
nop
sahf
scas
cmp
sub
mov
rcr
mov
mov
pusha
pushf
push
inc
pop
shr
xchg
add
icebp
jmp
mov
div
pop
cmp
sub
push
add
sbb
out
es
ret
pop
pop
lods
inc
mov
xor
mov
ss
xchg
lea
(bad)
or
xor
(bad)
cmp
sbb
pop
retf
ds
pop
scas
xor
sbb
dec
aas
fnstcw
fisttp
pop
fwait
pop
jbe
pop
(bad)
dec
or
das
(bad)
pop
rol
xor
rcl
sahf
adc
cs
rcr
shl
movs
mov
sbb
aam
std
std
inc
add
jmp
mov
pop
outs
ss
lods
bnd
(bad)
ffreep
cmp
cld
xchg
jae
or
movs
out
fld
push
jb
inc
mov
int3
sti
icebp
daa
push
fst
mov
fsub
push
out
jno
clc
retf
sub
ret
out
pop
retf
sub
aam
fwait
je
aas
int
ja
ins
add
cmp
xor
ins
xchg
addr16
cmp
jb
fcomp
mov
inc
fild
jnp
pushf
fs
lea
test
adc
outs
daa
dec
cmp
inc
jb
mov
dec
in
sbb
stc
fs
fwait
mov
push
add
retf
fsubr
cmp
test
in
(bad)
leave
adc
imul
out
enter
xchg
fcomp
jle
cmps
outs
or
and
adc
cmp
cmps
jp
fidivr
outs
cmp
xor
in
ret
hlt
dec
int
aam
sub
mov
hlt
xor
les
jge
imul
mov
sub
push
mov
dec
in
sbb
add
nop
inc
(bad)
cmc
cmp
xchg
lods
mov
and
inc
cmp
sub
push
pop
mov
xchg
daa
dec
mov
pop
or
pop
lahf
sub
xor
iret
cmp
repnz
stos
xchg
jne
mov
popf
xor
movs
add
shl
mov
popa
jbe
gs
out
jne
rcl
add
loopne
out
pop
rcr
pop
or
movs
adc
mov
and
shr
call
cmps
inc
in
xlat
cmps
adc
pop
sbb
cwde
jecxz
push
adc
add
push
push
mov
(bad)
jne
popa
cmps
cmps
sub
retf
lods
scas
cld
into
mov
adc
pop
aam
repz
cmps
pop
xchg
and
jmp
mov
cmps
add
mov
outs
ja
jnp
mov
fwait
xchg
push
mov
sbb
and
loopne
out
sbb
je
cs
xlat
or
sbb
add
fisttp
out
and
lock
jmp
xor
popf
and
jnp
loopne
sbb
js
fs
xchg
outs
push
icebp
adc
push
xor
in
(bad)
loope
scas
in
mov
sub
sbb
dec
or
retf
ret
movs
clc
fwait
mov
imul
pushf
int3
adc
fst
mov
xchg
popf
add
repz
test
jl
idiv
imul
push
or
imul
cs
jbe
js
fbld
gs
stos
test
enter
and
xchg
sbb
add
ret
aad
pop
and
jle
push
and
fs
nop
out
pop
dec
mov
shl
jge
push
or
dec
dec
mov
or
mov
sub
ret
jbe
sbb
cmp
add
fnsave
xor
jb
scas
mov
addr16
cld
mov
or
and
(bad)
mov
fldcw
sub
cdq
imul
jle
add
xor
ret
add
sbb
or
adc
jbe
sub
dec
in
or
jmp
call
inc
xchg
mul
sbb
and
outs
dec
jge
pop
es
jb
sbb
mov
imul
popf
and
push
cwde
ret
dec
mov
sti
xchg
ror
adc
stc
mov
xor
mov
xor
(bad)
or
pop
add
sub
mov
cli
push
push
call
or
sbb
pop
xchg
into
add
jno
aad
mov
mov
xchg
rcl
xchg
jbe
scas
add
mov
inc
stos
dec
sbb
arpl
mov
dec
popf
outs
inc
(bad)
movs
cmps
cmp
push
xor
das
jo
repz
cli
dec
and
stos
outs
xchg
mov
sahf
mov
xor
fnstsw
mov
stos
sar
xchg
cdq
or
arpl
mov
and
data16
jecxz
push
outs
cmovo
in
push
push
push
fild
sbb
rcr
call
mov
inc
cmp
stc
mov
xchg
and
imul
xor
mov
jnp
sahf
xor
int
outs
adc
leave
enter
push
fcom
jae
stos
ds
scas
retf
cmp
dec
cmp
xchg
cdq
inc
std
rol
fisubr
add
sbb
out
aad
idiv
and
jl
arpl
inc
dec
cwde
sbb
mov
and
push
jge
mov
xchg
xor
or
mov
(bad)
inc
xchg
inc
xor
imul
hlt
mov
add
inc
xor
shl
jge
repz
sbb
mov
mov
jl
mov
daa
fnstcw
sbb
inc
add
sbb
ret
sub
add
push
mov
push
push
xchg
mov
inc
cmp
mov
push
shr
sub
or
retf
dec
sbb
xor
adc
jno
movs
sbb
cmp
das
ror
pop
or
dec
in
fdivr
cmps
and
nop
adc
in
dec
pop
adc
popa
cdq
das
(bad)
mov
push
pop
pop
outs
xchg
sub
xchg
lods
pop
mov
fdiv
pop
sbb
not
or
jo
adc
ins
outs
enter
jno
pushf
add
enter
xor
mov
add
enter
xor
xchg
cmps
popf
in
test
cwde
fld
shl
retf
test
pop
mov
inc
daa
clc
popf
pushw
enter
(bad)
fstp
(bad)
xchg
(bad)
fsubrp
jmp
dec
mov
mov
mov
das
or
ins
add
int
(bad)
sti
jge
ins
lds
or
adc
add
icebp
cmp
cld
dec
ret
test
stos
mov
sbb
xchg
pop
rol
and
xor
stc
ror
adc
dec
xor
data16
es
jbe
xor
push
mov
cmp
ret
push
mov
mov
sub
sub
mov
daa
bound
scas
in
leave
jo
mov
aam
pop
movs
cmc
and
sbb
jbe
push
jne
dec
loopne
enter
mov
or
iret
aad
(bad)
sub
cwde
imul
pop
sti
adc
retf
imul
ja
cmps
sub
out
addr16
pop
push
aad
xchg
popf
ds
not
mov
out
retf
push
int3
aad
imul
inc
adc
jp
(bad)
push
imul
push
jnp
cli
sub
fisub
push
aaa
imul
inc
call
sub
repz
cmp
mov
xlat
into
cmps
xchg
out
fistp
ret
push
adc
mov
mov
jmp
pusha
dec
movs
pusha
jne
sti
movs
pushf
pop
xchg
pushf
xchg
cmp
mov
xchg
sbb
shl
sub
mov
fisttp
xor
scas
cwde
iret
adc
es
push
test
push
addr16
aad
int3
mov
das
jns
hlt
jne
loope
test
aad
xor
jns
push
pop
mov
or
push
sbb
imul
dec
add
inc
push
es
std
push
mov
jno
fwait
imul
xchg
fcomip
sub
cmps
pop
ret
mov
mov
std
lds
jp
ss
sub
dec
icebp
inc
pop
(bad)
mov
sar
push
or
xor
aas
cmp
sub
jb
jne
mov
sar
inc
je
aas
ins
push
pop
clc
sbb
dec
mov
sbb
push
sti
sti
adc
mov
sbb
sahf
pop
imul
push
cmp
mov
stc
mov
gs
inc
les
push
push
add
ss
jbe
sub
pop
fcmovne
jne
cli
(bad)
addr16
loope
not
xor
sub
mov
stos
ja
sbb
clc
pop
mov
les
mov
add
mov
inc
dec
and
push
scas
cmc
xor
pop
pop
xchg
jae
(bad)
adc
mov
push
cmp
out
or
sti
sub
or
push
repz
sbb
mov
push
xor
jnp
and
mov
mov
dec
imul
mov
(bad)
out
inc
and
pop
frstor
inc
sbb
jmp
std
call
mov
fwait
xlat
idiv
(bad)
jmp
jno
push
movs
ins
frstor
cwde
scas
xchg
gs
movs
add
xchg
imul
push
mov
stc
xchg
inc
push
add
cmp
gs
lds
adc
pop
lods
fwait
mul
ins
push
pusha
pushf
lea
aam
sti
jg
push
push
pop
xchg
lods
jo
push
repz
inc
sub
bound
clc
xchg
xcrypt-cfb
cmps
addr16
fcomp
fwait
ss
mov
xchg
imul
sub
movs
sbb
jge
outs
mov
push
jmp
jle
mov
outs
inc
or
(bad)
mov
dec
ds
popf
lahf
ja
bound
pop
adc
cwde
das
mov
dec
retf
add
pop
out
dec
pop
xor
popa
mov
movs
inc
sub
ins
frstor
push
in
into
out
mov
movs
sub
xor
push
dec
in
and
dec
ja
ss
test
inc
jmp
mov
arpl
mov
mov
cld
jne
in
adc
inc
inc
arpl
pop
xchg
test
(bad)
xlat
and
xor
sub
mov
cmp
inc
adc
mov
retf
jns
pop
lock
sbb
fsubp
in
xor
fist
es
mov
sub
test
inc
je
std
inc
loop
aam
fwait
ss
cmp
fs
fdivr
dec
mov
retf
mov
jge
movs
scas
int3
popf
fs
sti
aaa
inc
cld
jl
test
nop
or
out
(bad)
mov
cmp
and
into
stos
frstor
adc
or
call
cmps
(bad)
jb
add
mov
scas
cmp
sub
sub
sub
aam
or
or
(bad)
shl
sbb
mov
and
inc
add
inc
xchg
and
test
shr
pop
sti
cmps
mov
jmp
cmp
push
mov
and
in
push
ins
fsub
lods
xchg
add
xor
pop
push
cli
mov
in
in
stc
in
push
out
in
je
xchg
and
stos
sub
(bad)
xor
add
and
pop
dec
mov
sub
push
retf
mov
sub
add
ret
and
fdiv
or
xor
inc
cmp
pop
and
rcl
les
pop
jecxz
in
daa
mov
fidivr
mov
clc
jnp
in
inc
pop
pushf
xchg
aas
es
mov
movs
retf
sbb
and
repz
sub
cs
and
xchg
xchg
dec
sar
dec
cmp
push
add
outs
out
pop
in
inc
aas
xchg
sahf
push
push
add
ds
jae
rol
fstp
inc
cmp
push
dec
in
xchg
inc
xor
or
cli
popf
mov
clc
movs
vpcmpgtw
outs
push
retf
js
sbb
cmps
imul
pop
cwde
mov
loope
scas
push
adc
cli
pusha
jae
jge
xor
sub
and
lahf
movs
sti
icebp
or
into
loopne
out
adc
js
jmp
jne
push
ins
sbb
and
dec
cmps
pushf
dec
test
and
pop
jns
xor
xchg
pop
out
sbb
add
mov
sub
cdq
enter
sub
pop
loopne
cmp
scas
stc
jl
(bad)
xchg
push
push
fdivr
mov
sahf
movs
pop
(bad)
pop
das
loopne
push
fmul
loope
add
daa
in
push
cmc
jne
(bad)
sub
rcr
into
xchg
mov
outs
repz
lea
pop
cwde
add
jo
or
mov
mov
fucomip
test
add
inc
cmps
bnd
mov
add
push
nop
push
jle
movhps
sub
or
cmps
in
and
loope
fidiv
out
push
xor
enter
sti
popa
jae
xchg
std
addr16
leave
iret
push
(bad)
test
aas
stos
push
jns
mov
es
hlt
xor
sbb
iret
cli
jle
ins
cwde
clc
lods
sub
lahf
into
aad
fadd
xor
cmc
gs
mov
pusha
sbb
push
mov
push
sbb
aad
cmp
xchg
inc
add
cmp
daa
mov
jmp
aam
mov
pop
jmp
pusha
and
push
add
sub
cmp
push
ret
sbb
cmp
pop
and
and
or
dec
or
mov
and
xor
push
dec
test
jmp
push
lods
push
ret
sub
retf
xchg
pop
mov
std
mov
arpl
jne
test
and
inc
mov
rcl
out
pop
add
and
adc
inc
fimul
push
int3
mov
ins
add
fistp
add
mov
dec
xchg
cmps
or
or
loop
or
mov
and
mov
dec
xor
lods
push
addr16
dec
push
test
lahf
popf
in
shl
sbb
jns
jmp
repz
popf
mov
pushf
add
in
das
mov
and
inc
and
mov
je
fisttp
dec
dec
es
ret
jl
lods
xchg
inc
ds
outs
mov
xor
jmp
jnp
and
stos
clts
sbb
stc
retf
call
sbb
pop
sub
icebp
movs
icebp
fistp
dec
add
fs
cmp
and
cmp
mov
icebp
ins
mov
dec
mov
cmp
cs
mov
gs
fisub
jge
mov
pop
dec
std
inc
das
adc
jo
or
sub
dec
cmc
mov
mov
out
adc
cmp
push
fwait
or
js
and
leave
sti
and
pop
test
popa
sbb
sbb
ret
in
push
pop
popa
cdq
test
mov
fimul
jp
js
or
mov
inc
jns
repnz
and
sub
sbb
and
mov
pop
ss
enter
sub
cmp
dec
(bad)
sub
cmps
sbb
sbb
aas
inc
out
jnp
mov
into
jo
cwde
enter
retf
imul
jp
adc
pop
dec
sub
popa
sahf
aad
cmc
addr16
sub
neg
push
mov
sub
add
push
popa
sbb
movs
sub
scas
std
popf
aas
cdq
pop
int3
add
xchg
pop
fs
jmp
mov
push
(bad)
out
sbb
fwait
jns
lock
popa
and
or
xor
mov
repz
push
inc
adc
lods
mov
jmp
mov
sbb
cmp
jne
push
out
lea
cmp
ins
push
mov
pop
test
xor
dec
cmc
dec
and
lahf
push
pop
push
pop
ds
int
mov
ja
xor
rcr
sub
jmp
data16
ret
js
ds
aas
mov
jns
inc
(bad)
push
shl
push
add
mov
leave
leave
mov
lods
sub
sbb
mov
and
call
das
mov
adc
adc
repnz
(bad)
lods
adc
and
jg
push
mov
fs
into
or
test
or
aad
mov
cld
jae
adc
aad
xor
xchg
mov
enter
in
xchg
(bad)
loope
mov
cld
retf
das
sub
jae
xchg
cmps
ds
pop
call
in
sub
ja
bound
lds
repz
mov
pushf
inc
dec
leave
sbb
xchg
mov
mov
jns
mov
xor
mov
push
pop
adc
daa
retf
mov
je
jbe
out
and
je
div
jmp
or
popa
repnz
and
sar
or
js
mov
addr16
js
ret
shr
or
ret
and
or
pop
sub
push
xor
cmps
cli
cmps
sbb
or
pop
stos
outs
fs
or
in
es
js
jmp
and
sub
ret
jbe
inc
inc
or
pop
clc
jp
and
mov
mov
add
xchg
pusha
xchg
push
aas
in
jmp
lods
pop
add
jg
xchg
inc
outs
and
sbb
in
lods
pop
test
fadd
and
sbb
mov
add
(bad)
fistp
jnp
stos
cmp
xor
sbb
jnp
ins
mov
in
inc
pop
mov
inc
pop
into
add
out
das
mov
add
push
cmps
pop
xchg
dec
dec
rcr
dec
lods
cmp
mov
sbb
inc
cmc
and
fld
bound
rcr
mov
jl
inc
jmp
sub
popf
(bad)
fst
(bad)
sbb
jbe
push
mov
and
xchg
icebp
sbb
or
mov
iret
add
cmps
aam
popf
inc
out
mov
arpl
call
pop
jg
jno
dec
popf
inc
movs
icebp
out
(bad)
push
sbb
in
loope
dec
dec
aas
in
neg
or
add
adc
pop
inc
pop
sbb
jl
sahf
in
enter
xchg
mov
inc
dec
adc
repnz
in
mov
jns
(bad)
fisubr
mov
lods
dec
fadd
push
xor
test
cld
imul
loope
sahf
pop
into
push
ret
push
shl
mov
pop
ss
sar
fisttp
inc
mov
and
(bad)
push
add
mov
hlt
(bad)
in
dec
sub
ins
sbb
inc
in
adc
push
pop
test
ret
in
jbe
rcl
mov
cmp
mov
fs
add
xor
mov
iret
pop
hlt
xchg
add
xchg
lods
mov
adc
cmp
in
jns
ficom
xchg
and
fcom
mov
cwde
add
sub
xor
xor
jae
or
dec
in
dec
je
jp
mov
inc
movs
test
push
push
pop
fstp
ret
not
icebp
outs
mov
mov
sub
jo
xor
mov
call
outs
xor
mov
rcr
sub
mov
fimul
pop
or
fnstenv
jo
std
jns
popf
xlat
sbb
pusha
mov
pop
call
cmc
sbb
sbb
(bad)
and
inc
ret
mov
cmp
aam
test
shr
(bad)
sbb
mov
(bad)
popf
and
pushf
cs
xchg
jp
jo
out
mov
jne
push
cwde
outs
jmp
lds
scas
pop
sbb
addr16
xchg
aaa
aad
mov
ret
push
popf
iret
mov
xchg
add
pushf
int3
xchg
mov
mov
mov
xor
jle
ret
xor
(bad)
lahf
enter
cli
test
fisubr
lahf
sub
inc
sbb
test
(bad)
(bad)
pop
add
gs
ja
jae
test
adc
lea
sar
mov
scas
mov
add
sbb
mov
or
pop
neg
fadd
cmps
mov
xlat
push
add
test
mov
pop
retf
jnp
cwde
sub
dec
ins
or
pop
push
jno
rcl
ins
pop
push
outs
push
cli
pop
adc
and
or
cmc
stos
popf
xchg
dec
mov
mov
jo
xchg
xlat
cmp
scas
jl
imul
test
jmp
fsub
stos
ja
add
mov
mov
shl
xchg
leave
dec
(bad)
(bad)
sbb
repnz
fdivr
pop
jno
sbb
ds
cwde
push
pop
mov
sbb
inc
fldenv
cld
mov
push
scas
arpl
pop
jb
imul
pop
mov
ror
xlat
jno
or
sahf
test
ja
adc
xchg
jo
fld
ds
in
cmp
cmp
rol
and
xlat
sbb
int
lahf
cli
sbb
in
jne
icebp
inc
xchg
gs
(bad)
es
sbb
shl
xlat
das
xchg
outs
jl
mov
sahf
xchg
and
sahf
jle
push
xor
shr
out
je
scas
ror
add
lds
sub
mov
popf
ins
jne
repnz
in
mov
or
and
fmulp
dec
dec
jp
pop
leave
push
imul
adc
adc
and
mov
cmp
fiadd
dec
arpl
(bad)
in
stos
xchg
popf
fwait
sar
jno
add
xor
cmc
push
sbb
ret
adc
jg
mov
popf
dec
inc
pop
sub
arpl
jb
shl
xchg
icebp
xchg
inc
jge
popa
mov
jmp
stos
or
push
pop
or
mov
mov
xor
imul
pop
sbb
ins
int3
lds
mov
(bad)
shl
mov
sub
pushf
out
sbb
jnp
ss
add
sbb
or
lods
popa
dec
pop
sbb
aad
(bad)
outs
loop
jo
inc
xchg
cmp
fcmovnu
into
je
movs
cmp
add
xchg
xchg
div
lds
mov
out
fdivr
fsub
xchg
popa
cdq
iret
xor
enter
in
sar
nop
xchg
or
outs
cmp
inc
and
xor
stos
js
mov
cld
pop
or
iret
es
cli
pushf
mov
ror
loopne
xchg
pusha
mov
inc
or
xchg
int3
(bad)
jo
push
xchg
lods
push
or
pop
push
enter
adc
and
or
xchg
add
test
aas
pop
or
(bad)
mov
(bad)
xor
jno
fcmove
adc
and
cmp
pop
in
mov
pop
inc
outs
mov
mov
movs
mov
mov
xor
adc
sbb
jecxz
ror
movs
add
mov
and
lods
jne
xchg
push
scas
out
sti
leave
lea
in
test
sub
and
repnz
fidiv
out
call
ins
cmp
dec
jb
adc
cmc
fimul
mov
es
mov
daa
mov
into
mov
jmp
pusha
inc
push
and
scas
mov
call
iret
push
pop
repz
stos
and
inc
xor
int3
pop
fs
(bad)
and
pop
push
push
jl
sub
jge
xchg
xor
enter
ds
xor
jmp
daa
movs
xchg
mov
daa
mov
inc
mov
clc
xchg
mov
mov
rol
shl
xchg
out
mov
ins
sub
pushf
push
jmp
(bad)
sbb
lods
hlt
test
jle
hlt
jl
je
aas
(bad)
in
add
pushf
or
out
sub
push
jnp
(bad)
mov
cmp
inc
aad
xchg
movs
cmp
sar
sahf
mov
push
adc
outs
lea
and
imul
movs
into
dec
sub
retf
push
(bad)
mov
rol
shl
dec
xchg
push
rol
cwde
mov
test
add
shr
dec
bound
(bad)
call
xor
jp
cmps
sub
xchg
sar
shl
jg
fs
adc
and
fidivr
mov
and
pop
inc
stos
std
add
int3
stc
cmp
jb
mov
or
mov
dec
mov
cmps
addr16
or
lahf
mov
sahf
neg
pop
pushf
adc
les
push
xor
push
das
pop
in
into
arpl
popf
pop
push
popa
fidivr
stos
dec
dec
sar
xor
pop
jmp
movs
pop
cmp
imul
lea
out
dec
push
mov
cmp
jmp
ds
repnz
jecxz
fisttp
push
aas
rcl
sbb
add
xor
cs
or
das
sets
retfw
das
mov
jecxz
xor
neg
out
mov
dec
fwait
xchg
sbb
out
jmp
stos
gs
daa
push
adc
ret
push
xchg
sub
pop
ins
add
outs
sahf
and
pop
or
ficom
pop
push
push
and
jae
push
add
xchg
inc
push
sub
sbb
inc
fiadd
out
pop
or
lods
dec
mov
imul
sub
jns
std
dec
pop
loopne
fisttp
add
mov
daa
ins
xor
pushf
fisub
adc
fsubr
mov
cdq
aad
(bad)
dec
sub
cmp
mov
inc
or
mov
add
adc
push
and
jecxz
pop
mov
int3
jmp
cwde
mov
rol
inc
mov
jbe
cmp
call
pop
xchg
and
sbb
push
push
mov
ret
inc
cmc
and
jmp
push
mov
add
in
cli
aas
ror
pop
loopne
jle
ffree
outs
scas
or
xchg
sbb
mov
fsin
xor
test
adc
mov
pop
enter
pop
sub
add
dec
pop
jne
bound
sbb
ss
in
je
mov
popa
pushf
mov
push
push
outs
cmp
es
mov
push
and
mov
repz
mov
loopne
adc
mov
pop
and
adc
std
and
mov
and
inc
leave
cmp
ins
jo
fs
repz
imul
and
inc
cdq
fimul
push
mov
sub
jnp
inc
ret
jbe
std
lods
push
jo
add
jns
aas
sub
xor
dec
or
ret
add
ror
dec
dec
add
loop
(bad)
cmps
push
jp
jns
imul
sub
cmc
int3
mov
and
pop
icebp
dec
cmp
inc
aad
and
ret
inc
push
fwait
out
inc
rdtsc
imul
lahf
xor
sbb
mov
loope
mov
pop
jo
xor
lds
mov
in
push
push
jmp
(bad)
and
or
scas
sbb
fs
loope
(bad)
fstp
xchg
cmp
push
push
cld
movs
fdiv
mov
out
and
inc
mov
or
adc
jmp
jns
add
out
nop
out
mov
loope
int
mov
mov
dec
or
dec
test
mov
sbb
xchg
stos
(bad)
in
add
jae
add
(bad)
jge
int3
pop
retf
std
jno
test
loope
sub
cmp
xor
push
(bad)
std
inc
xlat
aam
dec
mov
jbe
imul
xor
jns
sub
mov
mov
sub
push
loope
daa
inc
mov
das
and
xor
jl
mov
mov
ins
jae
sbb
lods
add
jge
fwait
xor
popf
xlat
push
shl
cmp
(bad)
fdivr
out
shl
fucomip
ins
enter
or
daa
lea
movs
into
cmp
leave
adc
or
lds
stos
push
mov
call
fisubr
cmc
iret
lods
loope
jae
adc
and
xor
sti
cli
fs
xchg
(bad)
push
cmc
addr16
cmp
imul
jnp
ja
mov
stos
in
mov
xlat
cs
and
adc
jns
push
mov
cmp
es
jmp
out
mov
ret
pop
push
call
jle
mov
pop
repz
dec
inc
sbb
rcr
fdiv
and
mov
pop
int3
(bad)
out
leave
and
lods
sbb
clc
stc
(bad)
jnp
adc
push
lods
jne
sti
addr16
mov
retf
mov
sahf
pop
sahf
adc
add
std
mov
rcr
std
add
add
and
aaa
cld
or
sub
adc
add
in
push
pop
dec
push
adc
scas
movs
rcl
sub
jmp
add
inc
sub
aad
retf
loopne
inc
repz
mov
mov
dec
jg
mov
inc
sbb
lock
inc
mov
idiv
ds
mov
push
lahf
pushf
mov
and
hlt
ss
xor
ficomp
jmp
or
jne
adc
mov
xchg
sbb
(bad)
scas
xchg
bound
cmp
jle
cmp
jmp
mov
ss
mov
loope
pop
cmp
xchg
mov
daa
daa
jbe
pop
aad
cmps
inc
push
xchg
pushf
ret
lods
aaa
push
fsub
mov
pushf
cmc
push
outs
ja
pop
fwait
jl
cmp
jnp
jb
test
fwait
mov
out
mov
pop
ja
sub
fidivr
das
push
or
shl
cmp
jle
ffreep
mov
mov
dec
es
pop
enter
or
sub
xor
fucom
fcompp
lea
into
and
rcl
fisub
fld
adc
add
sbb
mov
xchg
inc
(bad)
mov
or
jl
xchg
mov
(bad)
mov
mov
sbb
xor
rcl
dec
mov
call
inc
adc
lock
inc
mov
xchg
jbe
push
test
mov
(bad)
test
std
push
in
dec
cmc
push
cmp
jno
push
mov
sub
add
jne
psrld
dec
test
add
cs
adc
sub
mov
rsm
mov
xor
std
iret
adc
push
xchg
out
jmp
(bad)
test
(bad)
shl
inc
sub
mov
cmp
(bad)
inc
repnz
rol
(bad)
jno
cli
cli
out
mov
add
xchg
jbe
lods
sti
mov
shr
fisub
inc
or
shl
or
add
call
int3
xchg
jb
push
xchg
push
jbe
pop
out
test
push
fdivr
mov
fdiv
jno
es
dec
stos
(bad)
inc
cmps
push
pop
pop
retf
bound
add
cli
ja
mov
int3
fwait
int3
dec
pop
lods
out
and
adc
mov
mov
retf
fdivr
pop
repnz
push
push
mov
mov
arpl
aaa
es
in
lods
fdiv
sub
inc
call
pop
imul
daa
std
fldcw
and
mov
jmp
jmp
imul
xchg
shl
iret
xor
test
cmc
ins
out
jne
ror
and
cmp
je
aaa
(bad)
sar
ins
mov
test
fcom
hlt
leave
or
aaa
and
mov
dec
jae
loopne
push
pusha
mov
mov
and
enter
jle
sub
pop
sub
or
cli
pop
cmp
fiadd
call
mov
dec
cmp
mov
and
cmc
cwde
ins
cli
inc
mov
cmp
adc
fimul
pop
jae
mov
sahf
hlt
aam
adc
pop
inc
adc
jnp
jae
push
sub
xchg
xor
cmp
fld
shl
cmps
cmp
cmps
jecxz
jns
fcomp
fdivr
in
fsub
clc
xor
adc
or
cli
jns
jmp
inc
xor
adc
push
cwde
test
test
pop
xchg
pop
mov
cmp
or
push
push
adc
dec
outs
dec
loop
jno
out
pop
xor
push
jne
sub
xchg
fldcw
inc
retf
mov
pop
pop
cmp
ins
cld
sti
sub
mov
cmc
mov
xchg
fimul
stc
sub
test
repnz
clc
popa
push
dec
add
nop
call
rcr
push
mov
adc
mov
dec
jmp
jmp
aam
cli
lods
sub
xor
mov
push
jge
or
xchg
jns
ror
or
pop
mov
xchg
xchg
int
adc
add
pop
mov
div
xchg
push
loopne
cli
daa
jns
dec
pop
xor
les
adc
ins
sbb
mov
push
std
mov
(bad)
add
or
mov
xor
xchg
mov
push
scas
(bad)
out
dec
mov
mov
icebp
ret
xlat
cmp
lock
das
inc
pop
or
sbb
inc
dec
test
mov
pop
cs
popf
movs
xchg
scas
ret
scas
popa
add
stos
mov
mov
(bad)
inc
lds
xor
inc
xor
xchg
jge
cdq
add
or
je
call
inc
inc
(bad)
retf
fldenv
mov
clc
add
inc
xchg
inc
nop
call
xor
cdq
shl
cmp
dec
(bad)
jno
popf
jp
imul
cmps
mov
or
icebp
(bad)
sbb
outs
popf
push
and
into
lock
mov
add
cli
data16
js
adc
aaa
call
cmc
sbb
(bad)
out
sbb
pop
call
add
shl
sub
inc
(bad)
repz
dec
mov
sbb
push
mov
mov
dec
popa
(bad)
cmc
or
into
in
mov
mov
xchg
jge
cmp
sub
das
loop
int3
xchg
cwde
sub
(bad)
pop
(bad)
and
add
fstp
push
jmp
rol
popf
and
xchg
cs
pop
fwait
in
dec
mov
mov
imul
sub
cmps
(bad)
pop
push
push
push
mov
mov
lods
lods
jmp
movs
push
mov
bound
loop
pusha
mul
mov
cmp
pop
jp
and
(bad)
mov
add
out
dec
xchg
mov
fidiv
adc
sti
mov
and
cdq
xor
sbb
push
loope
jns
or
test
out
shl
jmp
adc
es
or
cmp
or
sbb
aaa
lahf
ja
push
test
sub
sti
mov
mov
(bad)
xor
mov
pop
cmp
repz
clc
or
pop
inc
lock
rcl
lea
mov
and
scas
arpl
inc
sti
xchg
dec
leave
mov
push
jns
jne
sub
jae
and
retf
push
pop
bnd
xchg
in
mov
push
sbb
jmp
and
and
cmp
js
xor
and
or
mov
sti
cmps
cvtps2pd
cwde
imul
dec
call
jno
(bad)
jp
cmp
sti
jle
les
leave
add
daa
je
fidiv
and
ficomp
xlat
std
jno
add
pop
clc
arpl
loope
sbb
into
mov
mov
mov
pop
sbb
popf
sbb
sub
test
and
ficomp
push
pextrw
xor
test
sub
retf
test
ds
push
mov
push
cmp
pop
xchg
ror
lods
out
sbb
std
cwde
mov
call
inc
arpl
addr16
retf
lods
jmp
idiv
xchg
cmp
popf
daa
adc
mov
cld
ror
xor
(bad)
push
xor
imul
fsubr
dec
xlat
cmp
in
sub
cmp
add
stc
nop
sbb
pop
lods
nop
out
pop
idiv
je
std
gs
or
adc
cmp
and
add
push
cdq
xchg
(bad)
loopne
loope
mov
sbb
cmp
dec
inc
cwde
mov
jge
(bad)
mov
sbb
ja
fwait
pop
cdq
mov
stos
mov
test
and
xor
mov
pop
sar
pop
or
jb
out
iret
inc
lock
frstor
mov
pop
jl
mov
movs
mov
jb
ss
aad
inc
jo
xor
jo
mov
pop
mov
pop
out
dec
fisubr
inc
movs
cwde
jae
xor
add
dec
mov
dec
aam
andps
fist
movs
in
in
inc
cmps
(bad)
mov
ja
mov
retf
fistp
cli
jl
push
jo
push
adc
jmp
jp
push
in
popa
jno
aad
pop
mov
sbb
out
repz
pusha
inc
(bad)
addr16
fsub
(bad)
stc
jns
inc
xchg
xchg
sbb
shr
scas
add
pop
pop
outs
mov
jnp
push
pushf
xchg
push
fnstenv
sbb
dec
jmp
scas
icebp
test
in
jns
jo
inc
sbb
push
out
xchg
ret
sti
pop
push
pop
in
out
xchg
jg
push
and
outs
aas
push
or
pop
aam
test
repnz
outs
dec
xlat
in
hlt
arpl
jb
retf
add
mov
out
jnp
pop
mov
cdq
cmp
xchg
dec
pop
cmp
leave
jle
imul
icebp
xchg
dec
add
(bad)
push
loope
jecxz
popa
push
test
sbb
mov
jns
pop
call
and
leave
loopne
sub
nop
in
jnp
mov
jle
inc
mov
mov
nop
cmp
fldcw
and
xchg
mov
mov
ins
aaa
mov
dec
popa
aaa
push
xor
pop
retf
xor
xor
and
mov
int3
add
xchg
sbb
arpl
or
mov
mov
push
cmp
push
cmc
iret
repz
inc
mov
shr
es
stos
movs
and
shl
fadd
pop
xchg
pusha
mov
and
jbe
pusha
jge
sbb
cmps
and
retf
stc
jno
sbb
data16
out
mov
ficomp
mov
add
xchg
pop
sub
jbe
dec
cdq
jns
mov
inc
outs
cdq
jo
les
clc
add
ficom
mov
pop
cmp
out
(bad)
je
mov
pop
mov
jl
adc
shl
fld
lds
outs
xchg
cmps
jge
push
lahf
xchg
leave
scas
xlat
jbe
inc
mov
fcomp
xor
popf
outs
in
idiv
xor
(bad)
out
jnp
jbe
push
retf
idiv
jo
mov
xchg
lock
sub
adc
in
mov
inc
jmp
daa
and
mov
mov
dec
clc
cmps
into
in
lahf
pop
pop
xor
scas
mov
sbb
pop
adc
push
xchg
jp
or
(bad)
scas
cmp
sbb
jle
idiv
push
jmp
xor
sub
mov
dec
in
xor
vmread
imul
adc
xor
nop
test
mov
sub
js
dec
jg
xchg
aaa
fstp
xchg
and
(bad)
sbb
push
popf
xlat
int
ficomp
add
dec
xor
popa
in
sbb
pop
icebp
xor
shl
mov
xor
leave
test
fistp
mov
xchg
sub
in
sbb
pushf
mov
pop
cmps
cmp
ja
inc
adc
push
push
in
shr
push
retf
or
call
dec
addps
aaa
out
and
(bad)
or
jbe
fwait
cmp
data16
bound
cmps
push
mov
(bad)
pop
lahf
jns
ins
rcr
es
push
jno
mov
or
mov
test
mov
inc
mov
lock
mov
fadd
lods
imul
push
push
retf
jbe
pop
gs
mov
loop
xchg
sbb
or
es
or
mov
leave
out
test
leave
xchg
cld
daa
push
add
adc
pop
jbe
mov
mov
xchg
cld
mov
adc
xor
dec
xchg
popf
aaa
add
jnp
icebp
hlt
jl
jg
cmp
inc
or
cmp
push
jnp
nop
mov
ret
adc
inc
sahf
test
add
fldcw
or
and
scas
add
or
dec
xchg
movs
lock
push
mov
jmp
xchg
push
std
(bad)
scas
fsubrp
sbb
mov
fadd
xor
daa
mov
fdiv
inc
dec
adc
cld
(bad)
push
pop
adc
mul
add
lods
pusha
(bad)
or
rcl
int3
popa
pop
and
mov
or
inc
into
out
dec
out
add
popa
xor
mov
out
mov
mov
mov
test
push
dec
cmp
ins
dec
imul
xchg
xchg
and
cmp
add
mov
sti
jb
aad
and
stos
jo
arpl
std
imul
pop
jnp
jnp
push
arpl
dec
movs
mov
daa
repz
not
or
lock
sbb
imul
and
fldcw
fmul
xor
nop
mov
leave
jns
mov
xchg
div
and
ror
fs
neg
inc
mov
cmp
dec
mov
int
xor
pop
shl
xabort
shl
movs
pusha
sar
xchg
cli
jmp
daa
leave
cmps
pop
loope
repnz
add
xchg
fwait
fwait
aas
mov
scas
or
jle
mov
adc
ret
or
and
nop
out
or
(bad)
mov
cdq
icebp
mov
call
gs
mov
mov
mov
retf
retf
pop
retf
lock
xlat
mov
pop
xchg
clc
mov
jecxz
pusha
mov
sub
out
push
xor
and
xor
push
in
jno
inc
push
jp
and
movs
mov
push
imul
stos
adc
test
inc
out
mov
aaa
movs
fbstp
mov
mov
les
mov
sar
pop
add
dec
jne
repz
jb
and
imul
xor
inc
cld
mov
mov
mov
add
adc
ret
xchg
cmp
rcl
dec
mov
stc
ret
mov
(bad)
xor
pop
int
jle
adc
mov
or
movs
in
aaa
bound
in
aaa
push
cmps
inc
sbb
pop
jne
outs
(bad)
push
test
add
mov
dec
sub
pop
add
push
imul
ins
(bad)
mov
icebp
xor
add
loop
nop
jge
popa
fnstsw
cwde
clc
mov
fyl2x
add
push
mov
or
loopne
mov
fsubr
and
mov
inc
loopne
jo
sahf
or
out
xor
popf
ret
jge
inc
data16
and
and
or
mov
or
mov
pop
add
fwait
inc
pop
jne
add
sbb
cmp
(bad)
outs
stc
ja
les
mov
imul
sub
sub
(bad)
sti
inc
mov
or
into
es
ins
mov
mov
(bad)
sub
bound
jne
dec
cmp
in
pusha
push
into
and
enter
xor
cmp
mov
dec
dec
loope
sub
(bad)
dec
jne
jle
jo
stos
push
adc
retf
pop
enter
adc
dec
fidiv
fild
fldenv
in
push
xor
mov
jns
movs
cdq
cli
dec
mov
push
xchg
test
cmc
les
mov
or
repnz
call
pop
movs
xor
cmp
mov
sub
cli
stos
rcr
cmp
inc
inc
xor
cwde
sbb
into
pusha
cwde
jp
ins
cmp
ror
sbb
and
push
mov
cdq
mov
xchg
mov
fsub
lea
sbb
inc
xchg
fistp
push
nop
jg
cmp
xor
pop
sub
popf
out
lds
(bad)
and
lock
adc
out
arpl
xchg
fs
jb
add
fdiv
and
sti
cmps
or
test
pusha
stos
pop
mov
out
push
push
xchg
pop
mov
sbb
dec
pop
xor
cmc
pop
mov
pop
push
out
out
ins
push
push
repnz
jmp
mov
rcr
inc
(bad)
sahf
mov
adc
leave
mov
pop
push
and
in
xor
cmp
(bad)
loopne
ret
adc
lock
adc
std
stos
dec
test
jb
bound
lods
or
in
cmp
cmp
mov
cmp
fwait
inc
(bad)
and
sub
jmp
movs
mov
inc
retf
xchg
adc
mov
lds
fisttp
ins
loopne
cmps
cmp
sbb
popa
pop
inc
jbe
jns
or
gs
dec
dec
lea
sbb
fdiv
jp
push
sub
in
(bad)
std
lds
sub
mov
mov
shl
inc
(bad)
xchg
stos
inc
fnsave
xchg
mov
or
push
outs
pop
js
or
cwde
shr
adc
cs
adc
pop
mov
imul
pop
or
in
xor
mov
fist
xchg
outs
test
cmp
inc
inc
(bad)
aam
out
scas
xor
add
out
scas
pop
jmp
pop
pop
sbb
stos
mov
outs
cmp
leave
xlat
add
sub
inc
and
xor
lods
inc
aam
(bad)
dec
mov
sbb
stc
adc
(bad)
fistp
mov
xchg
fs
cwde
mov
hlt
(bad)
xor
or
push
add
shl
pop
ja
iret
mov
mov
or
pusha
push
or
cmc
int
(bad)
or
xchg
pop
dec
mov
xor
adc
mov
xlat
add
inc
push
push
sub
sbb
cmp
jge
mov
jecxz
sti
mov
out
int3
ja
loope
test
clc
mov
jnp
mov
push
call
in
xor
das
pop
inc
adc
cmp
stc
sbb
mov
iret
push
adc
adc
nop
sub
xchg
and
fsubr
sbb
leave
inc
retf
cli
mov
(bad)
neg
xchg
aad
in
in
adc
inc
cwde
mov
inc
dec
inc
xchg
(bad)
sahf
jnp
jo
sbb
jge
cmp
repnz
mov
ds
add
adc
aad
jns
pop
add
adc
add
(bad)
loop
dec
jmp
das
iret
inc
rol
inc
enter
mov
inc
popf
sub
jns
out
push
mov
xchg
(bad)
vpslld
nop
and
sahf
stos
pop
add
sti
xchg
pop
add
(bad)
sti
shr
int
adc
imul
mov
mov
imul
sub
test
inc
icebp
xchg
sbb
jmp
lods
imul
and
add
jns
outs
fld
pop
dec
inc
mov
add
lock
repz
pop
xchg
sti
dec
aam
push
scas
mov
adc
imul
jecxz
add
add
enter
add
push
fs
jnp
inc
sbb
inc
stc
test
or
xor
sbb
stos
pop
imul
stos
in
inc
xor
sti
jb
push
sub
lock
cmc
jmp
mov
pop
cmps
dec
mov
lahf
pop
mov
cs
je
xor
adc
ja
nop
inc
and
je
cmp
call
fistp
(bad)
aam
lods
fsubr
enter
pop
jo
mov
enter
mov
fsubrp
scas
cdq
hlt
dec
popa
sbb
bound
es
pop
adc
jmp
mov
adc
(bad)
sub
or
icebp
ins
pop
dec
cmps
enter
daa
gs
retf
jnp
mov
pop
lock
int
pop
adc
pop
or
fcmovnu
ds
fmul
mov
shl
sub
adc
jo
ja
ss
adc
inc
out
mov
je
adc
inc
test
popa
fwait
add
bound
popa
xchg
cmp
rol
loopne
ja
mov
dec
or
fwait
jb
and
mov
push
aam
or
nop
jmp
pop
int
cmp
lock
imul
ins
sbb
call
inc
arpl
les
arpl
sahf
in
ins
fwait
(bad)
cmp
add
mov
jp
or
scas
in
pop
retf
repnz
aaa
jmp
jl
xchg
lea
dec
(bad)
fsubr
pop
in
clc
fwait
adc
and
add
fs
popf
adc
add
loop
cmp
shl
test
push
or
or
mov
int3
mov
mov
sbb
add
out
xchg
inc
sar
add
jmp
sbb
jecxz
outs
cld
push
jnp
stos
xor
iret
test
jae
je
mov
ins
call
jne
sbb
pushf
xor
sbb
and
inc
mov
push
test
in
or
(bad)
cmp
xor
aad
dec
jb
and
clc
jge
scas
cld
out
cmps
xor
clc
xchg
shr
inc
push
xchg
aam
test
popa
jae
push
fsubr
repnz
mov
rol
js
into
data16
ja
mov
outs
lahf
dec
sar
add
cs
dec
mov
mov
push
cmp
in
ss
loopne
jmp
adc
jl
jle
(bad)
ror
movs
xor
movs
sub
cli
mov
xchg
pushf
mov
xchg
repz
std
cwde
(bad)
cmp
inc
sti
jns
jg
push
mov
inc
dec
pop
lea
dec
mov
sub
not
hlt
mov
out
and
je
fs
jbe
js
mov
push
sub
call
retf
mov
jbe
rol
inc
addr16
mov
fild
cld
or
sbb
movs
or
call
inc
push
xlat
jecxz
ds
repnz
mov
cmp
xor
push
push
in
jle
jns
sub
cmp
mov
xchg
ja
test
pop
cmp
ss
or
lods
repnz
fstp
and
test
jmp
lods
pop
and
xchg
cmp
push
sahf
hlt
add
xchg
mov
dec
ins
je
mov
cmps
mov
xchg
call
cmp
scas
out
cs
lea
movs
push
scas
mov
sub
add
daa
movs
sti
rol
fst
cmc
adc
gs
(bad)
ss
mov
popa
mov
dec
mov
call
repnz
sub
test
jnp
sub
xchg
test
inc
sbb
mov
mov
(bad)
sub
in
xor
xchg
pop
jno
cld
neg
les
(bad)
adc
add
sub
jbe
add
bound
mov
xchg
inc
mov
mov
and
in
(bad)
cmp
pop
in
movs
cmp
cmc
neg
imul
jb
(bad)
imul
pop
xor
ja
mov
fsubr
jp
cmp
daa
imul
int
test
pshufw
sti
shr
mov
jno
push
add
mov
pop
xor
or
popa
dec
adc
mov
out
push
repz
ret
in
pop
ins
jmp
repz
mov
sub
inc
leave
mov
push
push
outs
jmp
mov
lea
into
ja
lds
fsubr
fnsave
cli
inc
add
push
add
movs
push
into
repnz
ror
mov
add
imul
adc
es
and
jmp
dec
jnp
out
xor
inc
and
push
ret
add
add
push
mov
adc
stos
shl
or
(bad)
jle
cmp
shl
or
dec
cmps
enter
fisubr
push
xchg
clc
aas
out
dec
shl
(bad)
fcmovbe
mov
in
inc
jmp
xchg
ins
pop
xchg
out
call
mov
mov
fs
lods
xor
mov
dec
and
mov
xchg
cmp
sbb
popf
int3
pop
cmc
pusha
cmp
out
jbe
xchg
ja
cmps
jno
mov
not
push
xor
dec
xor
retf
lods
fwait
sar
test
sti
loopne
fld
lods
pop
ror
mov
xor
js
ins
cmp
dec
or
(bad)
push
arpl
mov
(bad)
xchg
cmp
cmp
lahf
cmp
sahf
sub
aam
push
ffree
call
xchg
leave
jmp
clc
iret
outs
jb
lods
cmp
pushf
(bad)
mov
shl
imul
hlt
or
shl
popf
add
mov
jne
cmp
xchg
repnz
xchg
inc
cmps
outs
inc
xor
ins
push
jp
out
pusha
xlat
mov
test
fistp
fild
test
mov
adc
jb
jmp
cmp
pusha
xor
lods
pop
lods
xchg
mov
mov
adc
aas
and
xchg
dec
pop
mov
xchg
or
cwde
xor
(bad)
mov
(bad)
(bad)
rcl
inc
push
sub
jg
push
jne
sub
push
cli
outs
mov
je
inc
fcom
cmp
add
jnp
stc
add
jge
jge
cdq
or
loopne
(bad)
addr16
ficomp
mov
mov
lahf
push
sub
mov
lock
ret
gs
std
push
mov
ret
(bad)
ds
jle
push
in
(bad)
cs
sub
fimul
test
cmps
add
dec
test
mov
lock
div
adc
xchg
(bad)
out
loopne
pop
sub
pushf
jle
add
add
imul
cmp
push
xchg
dec
(bad)
xor
data16
pop
stos
dec
jns
inc
mov
pop
mov
sar
inc
shr
lahf
xor
out
into
cmp
mov
arpl
inc
in
stos
shr
pop
dec
leave
popf
or
mov
mov
loopne
fs
xor
repnz
push
pop
and
fs
cmp
imul
mov
cmp
lods
shl
pop
(bad)
and
rcr
cld
imul
icebp
ss
sbb
fst
xor
xor
push
adc
pop
pusha
jge
xor
shr
pop
push
cmp
jmp
cmp
test
dec
cmc
retf
lods
hlt
(bad)
sbb
repz
xchg
sub
pop
sbb
mov
retf
(bad)
mov
fdiv
shl
js
xchg
lock
add
cmps
jle
push
inc
popa
xlat
rcl
sbb
jno
push
jns
or
dec
dec
stos
sbb
cmp
mov
punpckldq
cwde
xchg
cmps
sahf
mov
dec
or
jb
movs
loopne
popf
sahf
mul
loop
arpl
rcr
xchg
pop
inc
(bad)
jne
mov
lahf
fcmovnb
mov
arpl
(bad)
daa
or
jno
sub
mov
jbe
dec
xor
pop
mov
pop
mov
ins
hlt
outs
add
out
xchg
mov
mov
inc
and
lea
jmp
pop
jl
(bad)
xchg
ficom
jnp
push
xchg
mov
push
inc
cld
in
in
cmp
in
cdq
sbb
xchg
adc
loop
sahf
xchg
ds
pop
add
ja
push
xor
push
movs
popa
stos
inc
pop
mov
jle
test
jbe
ds
out
and
push
mov
jae
cdq
sbb
stos
or
mov
adc
aas
push
pushf
inc
inc
inc
dec
clc
call
call
fisttp
fiadd
rol
ror
shl
rol
xchg
xlat
movs
mov
call
sbb
jne
ins
in
cmc
jb
or
sbb
retf
mov
sar
les
mov
in
pop
aas
xor
jecxz
and
test
push
pushf
add
mov
scas
cli
int
mov
in
retf
outs
(bad)
cli
test
ss
fdivrp
aam
sub
fstp
iret
adc
retf
mov
in
and
icebp
mov
jecxz
(bad)
jmp
dec
adc
(bad)
daa
sbb
in
data16
sub
das
lods
inc
adc
in
inc
mov
pop
adc
stos
add
sub
mov
leave
xchg
and
or
jb
sub
repz
test
or
in
out
pop
mov
mov
test
fmul
jnp
iret
xchg
mov
retf
aam
lds
mov
push
xchg
dec
ins
inc
ins
test
push
pop
mov
sbb
xor
ror
mov
in
shl
fs
dec
xor
fs
cwde
or
push
mov
sbb
mov
mov
xor
jbe
scas
cmp
adc
xchg
jne
pop
or
into
pop
adc
jmp
scas
add
mov
sub
jp
pop
jle
xor
jl
sub
xor
mov
cmp
iret
jns
sti
xchg
addr16
mov
test
mov
outs
inc
add
test
pop
sub
lea
cwde
sbb
fst
add
(bad)
imul
cmp
aaa
mov
call
jnp
sahf
add
out
cmps
pause
sub
fdivrp
loope
pop
loope
clc
rcr
sub
sub
lods
jmp
dec
retf
pop
mov
sbb
mov
dec
or
ss
pop
cmc
nop
retf
mov
data16
adc
aad
je
push
ins
adc
repnz
inc
mov
or
int
mov
loopne
cwde
data16
push
leave
mov
ror
loop
xor
mov
sbb
movs
ja
cmps
pop
aas
adc
adc
xor
jns
pop
sub
stc
retf
arpl
push
repz
int3
sar
mov
sub
xor
outs
mov
popa
dec
jo
(bad)
loopne
out
sahf
rsqrtps
lahf
lock
retf
dec
hlt
and
adc
inc
ins
add
add
fsub
adc
std
mov
stc
pop
scas
inc
retf
mov
sub
das
push
or
jae
jmp
nop
out
popa
sahf
mov
xor
and
jns
add
adc
push
std
mov
popa
cmp
cmp
(bad)
cmp
dec
cmp
pop
rcl
std
ja
mov
cmp
outs
lods
mov
push
bound
call
cmps
mov
jp
or
loop
inc
or
gs
lods
or
lahf
sub
retf
sbb
js
ins
mov
out
adc
xchg
lods
outs
outs
icebp
in
jne
sub
push
or
aad
jbe
retf
fsubr
pop
sub
leave
mov
adc
fdivr
hlt
cwde
stos
aad
pushf
push
shr
xchg
adc
dec
clc
cmp
cmp
(bad)
out
xor
push
shl
pop
fldenv
aas
mov
mov
add
mov
mov
pop
cmpxchg
(bad)
stos
loop
loopne
leave
std
jb
xor
xor
imul
sub
inc
iret
jnp
into
repnz
pop
or
scas
shl
lods
mov
ficomp
dec
shl
and
or
xchg
call
test
mov
add
and
scas
dec
xor
and
pop
mov
push
push
xor
les
out
dec
pop
sbb
push
pushf
retf
adc
dec
test
movs
je
dec
das
mov
push
adc
(bad)
xchg
cmp
(bad)
imul
dec
ficom
mov
or
cmp
mov
fcmovb
fs
lds
loopne
in
jo
imul
mov
call
or
mov
mov
jno
mov
inc
or
sub
(bad)
mov
dec
stos
dec
mov
ret
shr
xor
inc
adc
addr16
jae
ins
icebp
frstor
js
cs
and
cmp
pop
xchg
jne
adc
or
(bad)
repnz
icebp
xor
ins
sbb
lock
mov
push
lds
shl
sub
das
cmp
out
push
jecxz
pop
adc
or
jecxz
dec
inc
cmc
jns
mov
sbb
daa
xor
or
popa
clc
push
test
aad
hlt
sbb
repnz
add
pop
push
add
pop
out
adc
push
addr16
pop
fs
adc
js
call
inc
rcr
into
fnstenv
lahf
mov
cmp
xchg
in
iret
and
rcl
ret
idiv
retf
mov
dec
and
mov
and
sub
into
push
loope
xor
mov
push
xor
cmp
pushf
(bad)
jg
cdq
mov
lea
mov
xchg
push
cmp
stc
sbb
xchg
mov
sbb
adc
pop
cs
call
inc
inc
and
cdq
push
cmp
mov
movs
mov
test
sub
lods
xchg
sub
or
push
stos
fist
push
lea
inc
xchg
xchg
pop
test
inc
bound
sbb
add
sbb
push
dec
mov
dec
mov
sahf
push
ja
add
ja
jecxz
jo
jno
mov
inc
cmp
movs
push
mov
sbb
mov
dec
fisub
pop
adc
in
out
inc
sbb
sbb
dec
cmp
cmp
add
mov
out
xchg
push
adc
icebp
lods
mov
inc
jmp
imul
mov
mov
ss
inc
outs
dec
loop
in
outs
push
dec
and
pop
out
sub
pop
pop
cmps
cwde
adc
or
pop
int3
loope
icebp
dec
les
dec
inc
mov
test
fucom
int
xchg
push
jo
(bad)
stos
ror
jnp
cmp
xchg
out
sub
mov
push
jb
adc
movq
cdq
xchg
enter
cwde
enter
movs
xor
push
sub
test
xchg
cmp
mov
push
mov
movs
cmp
popf
push
outs
enter
dec
push
adc
imul
fld
repnz
loopne
xchg
aaa
fbstp
loop
sub
loope
sub
mov
lds
xchg
aad
outs
mov
or
push
cs
sub
mov
imul
aad
xchg
retf
imul
aas
stos
jo
ja
daa
or
stos
iret
mov
mov
loopne
retf
and
xchg
xchg
pop
arpl
ficomp
jne
ins
sub
sub
shr
push
adc
pop
mov
mov
inc
xchg
and
jae
cli
or
push
repz
adc
outs
bound
add
jne
add
out
sahf
sbb
xchg
stc
loopne
sub
xchg
arpl
enter
xor
mov
cmp
sbb
sub
jne
dec
ror
call
ficom
xchg
(bad)
adc
mov
stc
(bad)
fadd
es
jno
aaa
fimul
fidivr
jge
shl
(bad)
jmp
(bad)
xchg
fwait
out
adc
retf
out
fimul
mov
sub
addr16
or
and
cmps
sbb
or
mov
mov
adc
push
ds
cmp
push
or
add
out
int
cmp
pop
and
neg
rcr
stos
(bad)
aas
fstp
jp
pop
push
push
test
inc
cmp
jmp
cdq
cwde
inc
ins
push
cmps
jle
pop
add
ja
sub
inc
cmp
mov
cmp
and
(bad)
in
bound
jo
push
out
push
cmp
addr16
icebp
adc
loop
or
inc
mov
div
mov
push
jo
or
xor
push
ss
push
push
jmp
sub
in
jae
aaa
jns
xchg
push
fcom
push
sahf
fwait
shl
in
cld
pop
mov
bound
mov
mov
mov
ret
inc
cld
xchg
fisttp
xchg
rol
push
pop
sub
inc
in
sbb
icebp
hlt
test
push
jnp
lahf
xor
push
int
jno
ss
aam
mov
cmp
push
inc
xchg
and
dec
add
ins
sbb
popf
mov
mov
inc
xchg
lods
and
inc
add
ds
pop
jb
adc
xor
jb
adc
pop
frstor
dec
ror
in
and
xchg
add
lea
ss
nop
aas
repz
xor
test
and
push
bound
outs
lahf
push
pop
add
xchg
jmp
test
cmp
inc
cmp
retf
addr16
inc
test
push
adc
xlat
pop
test
jg
aam
cwde
ret
leave
pop
test
or
xchg
jae
sub
sub
sub
stos
pop
xor
int3
lods
inc
sub
cwde
popf
in
shl
jo
xchg
ins
clc
jl
jl
test
leave
test
adc
test
cwde
xor
push
retf
fdivr
or
into
push
je
sbb
push
jno
aam
pop
dec
sub
clc
cmps
loope
cmp
mov
fstp
xchg
mov
shl
cmps
imul
sub
adc
(bad)
(bad)
arpl
inc
xor
cmc
mov
jle
push
pop
push
adc
push
mov
ins
push
hlt
jge
xor
das
leave
aas
cli
mov
inc
pop
jnp
xchg
push
mov
or
xchg
jmp
add
(bad)
push
push
adc
jb
ins
sbb
push
in
jo
push
sub
xchg
jmp
popa
(bad)
nop
cmc
js
cmp
rol
(bad)
cmp
cwde
adc
sub
mov
ret
xor
dec
mov
aam
pop
jbe
jae
sub
loop
popa
int3
pusha
cmp
push
fisttp
push
aaa
ror
outs
out
loope
and
and
mov
push
push
or
dec
rcl
jle
xor
fwait
dec
push
xor
xor
gs
xchg
cmps
push
sbb
in
fist
jge
iret
fild
pop
and
or
fidivr
mov
and
mov
or
push
xor
fwait
mov
addr16
xor
or
mov
ja
dec
mov
in
or
push
jae
dec
into
adc
into
cdq
test
stmxcsr
call
je
aas
xor
test
ins
scas
(bad)
xlat
outs
or
mov
cmc
jno
mov
je
loop
in
neg
aas
inc
addr16
leave
xchg
imul
pop
push
dec
push
push
fcmove
ret
test
cmc
out
pop
les
xchg
adc
cmp
mov
cli
into
push
icebp
mov
add
jmp
jbe
shl
or
add
in
add
dec
mov
pop
push
out
xchg
fdiv
xlat
adc
cmp
mov
inc
in
(bad)
cmp
mov
scas
js
sar
mov
dec
outs
cmovnp
pop
push
fxch
mov
retf
pop
mov
mov
je
cli
lock
data16
xchg
popf
ins
movs
mov
pop
add
daa
adc
add
pop
sahf
inc
or
mov
push
pusha
and
jmp
call
arpl
test
lods
jle
mov
mov
cmp
jl
(bad)
in
or
cmp
arpl
jecxz
xor
push
test
dec
xchg
test
add
pop
xor
movs
fld
mov
stos
jle
rol
ffree
stc
std
mov
xor
js
popf
loop
enter
(bad)
cli
push
(bad)
mov
retf
and
clc
push
xor
lahf
jno
cli
dec
xor
adc
das
shr
mov
inc
ins
mov
ins
imul
pop
cwde
inc
stos
fmul
or
imul
hlt
fxch
pop
cmp
hlt
pop
adc
popa
xchg
or
pop
xchg
jp
mov
(bad)
ror
mov
adc
scas
push
sub
add
fnstenv
aaa
sub
mov
arpl
and
data16
fwait
adc
push
push
push
mov
das
in
cmps
add
arpl
fcomp
sub
cmp
jae
jp
aam
addr16
fwait
and
cdq
mov
(bad)
jns
fdivrp
xchg
and
scas
out
scas
mov
lods
add
rcr
cld
stos
mov
cmp
cmp
fs
or
add
cmp
and
ror
xor
jb
(bad)
cld
test
les
adc
aad
inc
mov
pop
test
mov
popf
and
xchg
fs
stos
das
add
sbb
stos
inc
cli
mov
mov
mov
xchg
dec
ret
jb
out
call
push
lods
pop
test
or
(bad)
pop
jns
mov
xor
mov
push
repnz
sbb
dec
sub
mov
aas
mov
adc
int3
jle
jl
cmp
or
jmp
or
mov
fsub
jbe
sub
loop
adc
out
imul
div
loope
scas
arpl
idiv
mov
gs
lea
or
adc
stos
xchg
mov
push
int
cmc
arpl
aaa
mov
dec
popa
std
ds
mov
jp
fsubr
lds
push
std
in
sbb
movq
clc
cmp
sbb
leave
push
xchg
sti
dec
cmp
jb
es
or
cwde
inc
fcmovne
ins
cli
mov
jmp
cmp
mov
add
ins
mov
daa
icebp
push
pop
fbld
xadd
sub
xchg
out
jl
mov
scas
inc
sub
mov
test
call
or
ds
mov
xchg
pop
aad
cmp
pop
xchg
xor
push
in
xor
mov
adc
or
movs
mov
xlat
cmps
aaa
inc
push
mov
cmc
cmp
push
adc
add
data16
pop
loop
lods
lock
out
cmp
dec
imul
cli
inc
dec
jmp
loopne
pushf
or
cmp
or
xlat
sbb
jb
lock
pop
push
scas
mov
hlt
aas
loop
jne
sub
stc
xchg
sub
out
xor
jns
jecxz
xor
retf
pop
stos
repz
ret
lahf
jecxz
lds
nop
sbb
sub
dec
xchg
jecxz
fstp
pusha
js
ror
inc
and
popf
imul
fistp
jge
jne
fistp
movs
jecxz
push
push
inc
or
xor
jmp
scas
xor
in
inc
(bad)
sti
mov
repnz
pop
inc
add
jmp
jge
adc
dec
in
ss
xchg
out
pop
dec
mov
in
daa
(bad)
xchg
sub
out
mov
jmp
(bad)
lock
daa
mov
lods
das
popa
into
clc
mov
in
xor
and
xchg
test
arpl
push
mov
daa
aas
in
mov
ds
imul
xor
ret
adc
rcl
(bad)
fsub
test
or
les
pop
ja
neg
(bad)
mov
jmp
mov
mov
inc
lea
mov
rcl
sub
mov
cmp
mov
(bad)
rcl
das
into
lock
pop
pushf
das
in
cmps
dec
iret
push
push
dec
inc
dec
mov
and
(bad)
out
shr
daa
test
icebp
daa
jcxz
adc
adc
pop
shl
adc
loop
jo
pop
mov
sub
mov
test
retf
or
pop
movs
add
dec
xchg
xor
inc
icebp
inc
es
mov
jg
sub
scas
xlat
jl
ins
sub
out
cmps
jb
mov
mov
sbb
cmps
dec
mov
mov
cmp
test
(bad)
xor
mov
pmaxsw
(bad)
ins
shr
push
jp
mov
lock
add
bound
dec
test
xchg
test
push
inc
mov
pop
lds
pop
sbb
jg
fisubr
mov
jbe
inc
xlat
ds
shl
mov
daa
pop
mov
(bad)
in
imul
mov
popa
imul
out
or
ins
loopne
fstp
cmps
and
mov
fwait
adc
xor
ret
and
jl
fs
sbb
dec
ret
sbb
fldcw
loop
aaa
sbb
sub
outs
clc
adc
movs
cmp
add
push
xchg
xor
pop
mov
ja
fwait
xlat
jle
test
(bad)
jb
xchg
or
cmps
pop
pop
(bad)
cmp
rol
inc
cmp
push
stc
gs
mov
jns
cmp
and
gs
jbe
enter
inc
mov
std
sbb
mov
xor
fimul
jp
cmc
xchg
test
lock
jns
pop
(bad)
adc
push
loope
mov
imul
xor
dec
movs
les
or
push
mov
pop
jl
jge
pop
inc
push
mov
inc
test
jb
lock
test
xchg
lds
or
push
outs
jmp
cmps
jmp
clc
jnp
xlat
push
popf
daa
sub
mov
pop
pop
mov
push
pushf
sti
es
mov
call
repnz
call
es
sbb
and
push
push
push
mov
fwait
or
mov
adc
mov
mov
push
mov
rol
dec
aas
rcr
pop
or
fisttp
fadd
sub
pop
rcl
mov
sub
jnp
inc
cmp
fs
mov
inc
xlat
mov
sbb
pop
test
les
cld
mov
repnz
test
xor
mov
mov
loopne
ds
call
cmp
and
ret
pusha
call
lds
mov
and
cmp
mov
inc
or
xor
mov
movs
stos
inc
cmp
or
jp
ins
and
fcomi
mov
cdq
bound
loopne
push
rcr
sti
nop
test
sub
jl
pop
mov
enter
sub
dec
popa
jl
inc
int
test
clc
les
jmp
les
mul
adc
cmp
fnsave
in
pop
(bad)
xor
add
mov
ja
jbe
mov
inc
gs
in
int
enter
push
and
fs
add
pop
outs
shl
cs
pushf
adc
cmp
sahf
pop
dec
mov
in
fnstcw
inc
xchg
xor
sub
jp
add
js
pop
neg
ret
jb
loop
sub
enter
xchg
rdtsc
jp
fwait
push
cmp
or
into
(bad)
cmp
pop
out
mov
sub
pop
push
xor
(bad)
out
adc
pusha
sbb
xchg
ins
add
je
lea
out
push
mov
xchg
push
pusha
scas
mov
mov
das
(bad)
cmp
imul
xchg
mov
std
jae
push
cmp
pop
mov
retf
scas
aas
xor
or
(bad)
retf
in
aam
add
jb
movs
cld
outs
mov
fimul
sub
int3
xchg
aaa
test
ret
xchg
test
cs
stos
movs
ds
sbb
mov
jne
push
cmp
and
mov
mov
arpl
fiadd
and
in
fild
cmp
add
dec
daa
xor
in
arpl
cmp
arpl
xlat
pop
in
fidiv
mov
jnp
or
mov
je
mov
(bad)
or
hlt
push
xchg
mov
in
mov
add
jg
mov
pop
es
in
lea
pop
adc
ror
xlat
rol
jg
aas
outs
shl
cmp
cmp
aas
retf
dec
push
int3
xchg
cmps
jb
rcl
mov
pop
xlat
or
out
push
jg
sub
retf
sub
pop
push
mov
push
fnstenv
jmp
lock
not
ss
mov
push
int3
outs
in
movs
sbb
mov
mov
or
adc
mov
retf
nop
push
lahf
pop
and
push
mov
out
jl
jno
pop
ja
(bad)
dec
sub
shr
mov
xor
loopne
add
loopne
cld
test
ss
mov
dec
test
repz
cmp
inc
push
pop
mov
inc
shl
fistp
scas
sbb
pop
lods
aad
and
inc
mov
clc
or
stos
(bad)
adc
nop
jno
cmc
push
or
cmp
and
inc
fs
add
test
stos
ret
inc
push
push
gs
outs
sahf
imul
pandn
pop
test
adc
ins
inc
push
or
and
sub
test
fdiv
lds
popa
jg
mov
rcr
call
fbld
push
jp
loope
dec
cld
test
push
cmp
pop
shl
or
xor
cmps
adc
ins
adc
pop
jb
push
outs
out
lahf
adc
int3
into
mov
or
ins
lahf
add
sti
mov
push
test
pushf
in
fs
adc
(bad)
call
lahf
dec
sub
and
or
enter
mov
mov
xchg
inc
in
inc
mov
fdiv
add
mov
mov
adc
jle
sub
or
inc
fnstenv
or
ret
sub
cmp
rcl
pop
test
aam
push
pushf
fbld
xor
cmp
out
xor
jno
push
cs
rcr
lock
mov
adc
aad
add
mov
xor
cmp
icebp
out
dec
je
mov
add
cs
or
inc
push
fisub
call
push
adc
or
jle
nop
inc
mov
xor
or
sub
retf
aaa
mov
pop
lods
fs
mov
adc
cmp
outs
out
hlt
jne
mov
dec
(bad)
xchg
sub
test
test
and
push
adc
stos
sub
mov
ret
jl
je
addr16
jge
mov
(bad)
mov
shr
inc
xor
adc
jg
ficom
mov
sbb
fisttp
outs
test
lods
pop
rcr
mov
(bad)
in
adc
jle
or
cwde
pop
sbb
dec
or
xchg
sub
cmp
ds
dec
sbb
cmc
mov
int3
nop
fld
adc
push
scas
mov
dec
mov
adc
dec
mul
out
out
pop
sbb
adc
push
mov
lods
in
dec
scas
jg
cmps
pop
adc
xor
mov
aas
mov
out
xchg
outs
loop
inc
test
mov
cmp
jo
comiss
xor
xlat
hlt
jno
cli
add
popa
add
fstp
out
js
ss
scas
div
loop
mov
xor
or
or
loope
cmps
mov
add
mov
adc
test
js
or
jge
enter
cmp
xor
xchg
push
sbb
int3
xchg
hlt
ret
scas
movs
jmp
aam
pop
lock
jmp
std
out
sbb
mov
or
arpl
and
(bad)
fistp
out
data16
aas
xor
and
adc
outs
add
mov
popa
adc
test
std
sar
push
xchg
adc
fild
sbb
in
ins
rcr
mov
or
test
add
inc
das
xor
and
inc
cli
fistp
popf
xchg
test
retf
(bad)
and
bound
sub
je
rol
inc
imul
repnz
xor
inc
cmps
lods
sbb
cld
sub
and
adc
and
xchg
mov
fmulp
mov
mov
add
outs
and
rcr
sbb
sub
fsubrp
fs
(bad)
and
xor
dec
cmp
inc
jbe
mov
outs
pop
cld
inc
jae
(bad)
fst
pop
iret
dec
fmul
popf
nop
cmp
out
nop
shl
sub
mul
add
lods
(bad)
cwde
shl
mov
popa
test
add
neg
jp
inc
push
loop
sahf
cmp
mul
mov
ror
(bad)
jle
adc
cld
fidivr
mov
fucomp
sbb
xchg
pop
les
mov
push
or
pop
stc
mov
xchg
inc
push
cmp
ror
push
jb
xlat
xchg
mov
test
or
add
in
sub
inc
pop
push
sbb
mov
add
rol
mov
sub
pop
push
mov
addr16
mov
sub
push
call
mov
jp
(bad)
mov
div
pop
jp
xor
fsub
sub
adc
and
cmp
rcr
test
inc
inc
nop
js
inc
mov
or
cmp
adc
hlt
pop
mov
out
out
leave
mov
xor
adc
jae
clc
aad
or
bound
ror
sbb
pop
inc
sub
jmp
aam
jne
mov
lods
gs
mov
cmp
stc
xor
mov
sub
jmp
mov
sahf
mov
inc
(bad)
mov
lds
in
fsubr
(bad)
jb
jne
imul
mov
dec
es
pop
lea
cmp
and
stos
cmc
and
add
xchg
sbb
sub
ss
sbb
xchg
sub
bound
xchg
and
sub
pop
int3
cld
repz
adc
std
mov
int3
fld
shr
std
pop
loop
cmp
sub
mov
xchg
addr16
cld
shl
xchg
push
pop
shl
lahf
sub
pushf
xchg
call
fmul
lock
icebp
push
pop
or
mov
mov
sub
ret
addr16
mov
push
shr
cmp
outs
popf
outs
cld
jns
xor
xchg
ret
xchg
push
in
pop
sbb
sar
jns
test
inc
sub
mov
aaa
dec
mov
sbb
pop
pop
xchg
mov
pop
push
pop
jp
(bad)
rol
mov
inc
fdiv
int3
jbe
out
pop
pop
adc
pop
pop
inc
in
jge
imul
adc
(bad)
lahf
mov
push
out
inc
scas
dec
retf
hlt
call
or
xlat
dec
pushf
mov
fsub
test
arpl
push
xchg
jg
(bad)
cmp
in
inc
jmp
dec
sbb
sbb
cs
aam
repnz
loopne
pop
loopne
pop
xchg
cs
jl
fisttp
cmp
mov
in
idiv
adc
inc
adc
inc
cld
sub
or
push
dec
popa
push
ror
push
cmp
ret
push
jnp
pop
jae
mov
or
push
add
xchg
(bad)
xchg
mov
xchg
in
std
dec
in
sub
stos
fbstp
icebp
push
mov
push
data16
mov
push
dec
pushf
mov
sub
mov
je
adc
adc
loop
add
stos
inc
cmp
sub
(bad)
jl
into
aas
outs
push
adc
loope
push
xchg
lea
dec
push
adc
int3
dec
je
(bad)
shl
scas
xor
in
xor
je
xor
or
mov
out
ror
dec
sub
loop
lock
cmp
cmps
mov
movs
push
mov
lods
stos
aam
dec
enter
test
dec
sbb
retf
iret
pop
popa
or
mov
xchg
sbb
lods
arpl
mov
push
(bad)
div
sub
fstp
xor
cli
movs
xor
or
mov
or
or
mov
sbb
cwde
jp
call
jbe
dec
ret
mov
scas
cmp
mov
sub
push
fdiv
push
jecxz
pop
rcl
clc
sbb
mov
lods
in
pop
sub
ins
lea
mov
push
popa
pop
inc
mov
xchg
push
retf
add
mov
inc
cs
popf
dec
dec
int
and
mov
mov
pop
and
(bad)
call
(bad)
dec
mov
xchg
and
fcomp
mov
mov
xlat
cmp
cwde
int
std
push
dec
pop
cmp
dec
jmp
pop
or
cmove
in
mov
or
mov
cld
cld
mov
jne
ins
or
xor
enter
or
jle
popf
in
movs
mov
cmp
(bad)
in
sti
pop
cmp
jle
(bad)
add
push
es
mov
fs
rcr
pop
xchg
push
cdq
iret
adc
icebp
pop
xor
movs
pop
sbb
out
and
pop
aaa
sub
push
mov
ret
mov
sub
cmp
and
mov
mov
inc
adc
inc
fdiv
jmp
dec
sub
pop
addr16
cmp
jg
xor
jmp
test
sub
inc
loopne
xchg
inc
clc
lea
push
inc
xchg
pop
clc
repz
xchg
fwait
pop
sbb
sbb
xor
mov
push
enter
repz
mov
and
jae
(bad)
retf
imul
pop
icebp
ret
push
inc
mov
cmps
inc
cdq
add
add
mov
mov
imul
lock
jp
xlat
sbb
xchg
es
test
or
sub
ins
in
lea
inc
push
jp
std
inc
xor
and
sub
cmps
clc
repnz
dec
lock
adc
mov
popf
cmps
jp
fs
cmp
mov
inc
sub
xchg
sub
div
bound
or
xor
out
fwait
mov
dec
mov
jnp
xchg
ds
retf
aad
sbb
inc
call
push
adc
in
pop
dec
fist
jno
lock
mov
mov
ins
jl
and
inc
hlt
ins
push
(bad)
aam
(bad)
fild
sub
dec
test
add
outs
lea
adc
mov
adc
push
push
pop
pushf
lock
jb
out
sub
(bad)
sub
mov
xchg
jae
fs
shl
jl
aas
jmp
adc
jl
inc
mov
adc
popa
nop
jae
sbb
fwait
sub
movs
cmp
or
xor
or
mov
iret
in
mov
xor
ja
xor
xchg
ficomp
iret
in
cs
data16
ror
sbb
(bad)
push
jg
fsub
inc
aam
aaa
mov
stos
std
mov
stc
pop
outs
js
fst
sbb
ret
aaa
pop
mov
int
les
mov
xchg
lahf
lods
stos
paddb
aad
mov
popf
inc
pop
fcomp
mov
inc
xchg
jp
add
xchg
jbe
sbb
out
dec
mov
mov
mov
push
test
adc
mov
cmp
(bad)
push
outs
fidivr
loopne
mov
rcl
dec
and
nop
pusha
or
sbb
adc
jg
mov
inc
data16
repz
dec
or
inc
and
aam
(bad)
test
pop
je
jne
cmp
adc
out
leave
jno
mov
sahf
jp
addr16
stos
repnz
jns
inc
xchg
jb
dec
loopne
aaa
fnstsw
cli
pop
hlt
dec
in
push
cmp
ret
push
cmp
sub
adc
sub
xor
je
mov
jp
adc
push
cld
inc
jmp
daa
jo
mov
inc
sub
push
dec
sbb
daa
xor
cwde
imul
pop
rol
ss
lahf
pop
jb
into
cmc
mov
pop
push
sbb
repz
cmps
push
xor
xchg
mov
cs
es
idiv
add
inc
mov
cmp
sbb
scas
or
sub
or
mov
mov
ds
pcmpgtd
int3
out
out
jge
push
jmp
pushf
mov
ret
test
or
pop
fstp
mov
mov
loop
jmp
push
adc
fcomi
jno
movs
sub
cmp
test
test
in
mov
add
xor
pusha
lea
fisub
pop
push
pop
adc
fld
push
aaa
or
scas
add
iret
mov
hlt
xor
ins
jg
jp
sbb
mov
jno
xchg
or
sub
push
or
fwait
mov
fisubr
push
cmps
pop
test
jne
retf
movs
mov
ss
mul
push
jle
loope
sub
fsub
cld
std
inc
push
inc
aad
fwait
xor
test
mov
adc
rcr
jno
les
sbb
out
cs
shl
push
jnp
or
fnstsw
stos
shl
push
mov
cmp
push
and
and
mov
out
cmp
fstp
inc
mov
mov
ret
sti
in
repz
ja
push
add
rcr
mov
pop
outs
lahf
repnz
dec
dec
(bad)
inc
in
leave
sbb
jae
push
push
in
sub
movs
dec
pop
xchg
or
fild
dec
(bad)
jg
push
in
mov
sbb
sub
jmp
mov
mov
push
loop
in
ja
leave
jmp
data16
sub
jl
aad
pop
cwde
int
jo
fld
or
pop
push
stc
fbstp
inc
jle
sub
inc
aad
lods
pop
fsubr
ja
fld
fs
sub
sbb
daa
repz
(bad)
aad
fs
sbb
mov
dec
mov
push
stos
pop
ficom
rcl
sub
push
cli
scas
and
xchg
imul
dec
out
xchg
cmps
outs
or
add
ja
and
ret
mov
add
mov
sub
and
jle
js
mov
into
retf
fs
aas
test
movs
mov
out
and
inc
std
in
addr16
or
mov
jne
push
add
pop
popa
cmp
mov
cwde
(bad)
and
push
pop
lea
adc
out
jmp
imul
(bad)
jp
popf
mov
mov
lds
rcr
fwait
outs
popa
inc
popa
push
push
imul
por
scas
jmp
pusha
jno
mov
mov
and
repnz
inc
mov
jl
lds
in
mov
popa
jl
out
mov
and
les
dec
lods
or
mov
pop
cwde
and
add
jecxz
aam
scas
mov
xor
xor
inc
fmul
data16
cld
fwait
pop
enter
sbb
cmp
cmp
xor
call
shr
mov
mov
clc
jns
out
cmp
popf
stos
popa
test
stos
inc
stos
cld
daa
push
clc
fnsave
lahf
mov
rcl
mov
adc
ja
stos
movs
sbb
jg
pop
sbb
jbe
cmps
sti
cs
cs
retf
push
adc
imul
sbb
sbb
int
cmp
fcomp
xor
xchg
ins
adc
and
loopne
mov
retf
xchg
cmp
jmp
int3
icebp
adc
pop
xchg
jp
xchg
mov
not
push
movnti
(bad)
or
jne
mov
xor
das
stc
mov
pop
outs
or
and
mov
ret
xchg
std
push
inc
mov
in
and
fwait
in
xor
scas
dec
push
inc
xor
loop
dec
movs
lock
push
mov
push
cmp
aas
das
xor
mov
adc
dec
dec
loopne
pop
test
clc
fs
add
in
inc
cmp
repz
or
sar
mov
(bad)
xchg
push
push
cdq
int3
add
mov
out
xchg
sbb
dec
mov
xchg
cld
inc
add
out
mov
cmp
outs
or
aam
lea
jae
enter
loop
jge
inc
mov
xor
cmp
mov
fwait
cmp
jl
cmc
and
push
jae
sub
icebp
cwde
daa
inc
hlt
vpavgw
add
popf
cmp
push
add
jecxz
mov
inc
or
jmp
ror
hlt
sub
fwait
stc
in
popf
scas
(bad)
cdq
(bad)
xor
jle
pop
pop
inc
scas
jmp
cmp
(bad)
not
std
imul
mov
ds
sub
fidivr
data16
xor
cmp
pop
sahf
imul
retf
sar
call
dec
jo
cmp
pushf
xchg
fldcw
ja
dec
sbb
fucomp
outs
aam
test
push
stos
pop
std
or
inc
ret
add
test
mov
inc
lock
sbb
pusha
loopne
retf
cmp
fisttp
stos
scas
es
mov
idiv
je
ins
adc
in
and
bnd
shl
cld
xchg
fwait
mov
cmp
dec
and
addr16
and
(bad)
or
(bad)
add
outs
push
xchg
ds
push
inc
jmp
mov
or
mov
adc
adc
fcom
inc
int3
or
push
xchg
or
mul
pusha
push
xor
ret
cmps
jne
clc
das
pusha
int3
xor
les
lock
ret
icebp
loopne
call
sub
cli
push
mov
cli
mov
ins
mov
pop
aad
clc
in
cmp
push
sar
out
call
out
mov
(bad)
inc
push
outs
pop
sbb
in
adc
ins
or
in
sbb
jge
cmps
xchg
sbb
daa
scas
test
sbb
(bad)
out
and
repnz
or
sub
test
mov
daa
adc
xchg
pop
xor
xchg
or
mov
int
scas
fld
out
push
push
fidiv
icebp
mov
(bad)
ret
pop
test
xor
sahf
pushf
fild
add
sbb
mov
cwde
sbb
cs
outs
imul
test
dec
lahf
inc
mov
fmulp
iret
lea
in
push
nop
push
lea
out
jmp
in
retf
cmps
scas
aas
inc
fdivr
jbe
dec
rcl
shl
sub
xchg
mov
aaa
fisttp
(bad)
hlt
sbb
aas
rcr
inc
mov
mov
add
push
adc
lea
out
ss
xor
stos
pop
test
cmp
cmp
jno
dec
fdivr
mov
loopne
ficomp
scas
inc
xchg
loope
cld
pop
fisttp
or
push
cld
xchg
mov
fmul
pop
dec
sahf
and
inc
jp
dec
jmp
pop
xor
cli
aam
fucomp
pop
mov
imul
ss
xor
ss
dec
mov
xor
inc
adc
adc
push
pop
dec
sbb
sub
stos
or
dec
xlat
push
lds
(bad)
out
push
int3
sub
push
clc
dec
dec
push
imul
test
lods
dec
mov
mov
(bad)
aas
push
fstp
cmp
ds
test
and
mov
xlat
mov
(bad)
pop
xchg
pop
sar
mov
push
(bad)
lods
cs
call
dec
arpl
mov
nop
clc
push
adc
or
sbb
push
repz
test
mov
mov
pop
cwde
or
js
xor
inc
adc
loop
fwait
inc
push
scas
dec
dec
test
sbb
iret
fiadd
dec
mov
fidiv
ss
and
gs
jne
adc
jno
add
iret
xor
mov
adc
inc
jmp
sub
jb
pop
cmp
ins
pop
fs
stos
(bad)
push
in
(bad)
js
arpl
xchg
aas
mov
cli
(bad)
fstp
push
repnz
test
pop
cmp
retf
pop
popf
and
sub
fucomi
nop
adc
(bad)
outs
ss
jno
jno
push
mov
and
jge
mov
ss
mov
pop
sbb
dec
push
(bad)
js
je
dec
push
cmc
ds
sub
xchg
repnz
in
(bad)
test
test
push
or
sbb
or
aad
cli
mov
dec
mov
inc
xor
fs
mov
push
ret
pop
sbb
xchg
stc
lock
(bad)
movzx
rol
(bad)
jae
pop
sub
dec
loopne
add
dec
test
mov
and
aaa
or
loopne
push
cmps
cmp
pop
jns
cdq
cmp
dec
cmp
fistp
or
jbe
bound
xchg
or
push
and
out
cmc
inc
sub
loope
pop
cs
and
jbe
retf
pusha
fsubr
or
repz
fidivr
inc
pop
xor
add
jns
(bad)
xor
das
cmp
xlat
dec
push
leave
in
inc
ins
mov
test
loopne
js
sub
gs
sahf
sbb
in
inc
movs
inc
hlt
sub
jo
fisubr
pushf
sti
lahf
pop
push
dec
in
pop
adc
rcl
pusha
cmp
jb
jmp
mov
ja
add
xor
inc
and
pop
cmps
(bad)
in
lods
lds
in
jbe
adc
arpl
sub
sbb
stos
pop
stc
mov
push
push
fucomip
xor
int
aas
popf
pop
gs
scas
mov
pop
or
loopne
sti
popa
mov
xor
adc
pop
test
and
pop
pop
loopne
mov
adc
sbb
retf
out
lahf
adc
sahf
sbb
js
mov
loope
loope
pop
das
ins
nop
pusha
pop
out
data16
cmp
mov
imul
fxch
pop
mov
repnz
cmp
imul
gs
push
ret
push
xchg
out
pushf
test
test
fsub
adc
mov
or
ret
push
xchg
mov
sbb
not
adc
mov
inc
sbb
scas
adc
out
cmp
cmp
fdivr
push
xchg
jae
mov
in
fwait
leave
xchg
faddp
cmp
mov
or
lods
pop
lods
int3
push
jns
and
dec
lahf
mov
jne
cwde
movs
call
add
fdivr
and
pushf
or
(bad)
and
mov
push
jbe
sti
cmps
clc
hlt
jbe
gs
xor
jnp
pop
dec
mov
mov
fild
mov
out
test
xchg
mov
repnz
cwde
adc
push
aas
stos
jo
mov
dec
xchg
and
inc
mov
push
push
call
test
cmp
outs
sbb
je
inc
push
ret
xchg
stos
add
test
pop
imul
sbb
ds
mov
bsf
into
cmps
aam
lods
inc
push
stos
push
push
xchg
xchg
fidivr
popa
sbb
scas
hlt
movs
mov
lock
ret
xlat
pushf
and
cwde
sub
ins
fwait
push
hlt
and
sub
leave
add
je
and
ror
adc
push
cdq
mov
lods
or
repnz
in
mov
cmp
jnp
movs
movs
movs
leave
ins
xchg
(bad)
xchg
sub
dec
stos
out
push
out
out
mov
aad
and
scas
and
ins
cmp
pop
xor
popf
jle
ret
(bad)
jmp
xor
mov
cmp
or
xchg
adc
test
jl
cwde
push
fdivr
movntq
jns
pushf
inc
lahf
dec
pop
imul
xchg
jl
lahf
lods
or
xchg
ret
xchg
sub
xchg
ret
rol
pop
push
daa
xchg
push
adc
outs
sti
aam
mov
stos
cwde
call
or
nop
rcr
mov
lds
jb
adc
or
xchg
jge
loop
in
push
ror
push
or
pop
inc
and
popa
sub
mov
xchg
sbb
pop
shl
nop
sub
dec
and
loope
push
sub
dec
and
pop
and
and
dec
mov
test
call
sbb
pop
repz
popa
repz
pop
test
loopne
or
pop
dec
inc
(bad)
nop
ret
xor
or
in
jns
pusha
mov
icebp
mov
(bad)
push
jae
pusha
sbb
scas
fmul
mov
cs
adc
(bad)
loope
test
add
aam
mov
and
push
fmul
or
mov
sub
inc
enter
leave
pop
and
fstp
xlat
adc
loope
dec
in
pop
(bad)
fld
adc
adc
inc
and
test
and
jmp
add
sbb
call
mov
and
dec
mov
push
pop
jne
rcl
inc
and
int
cld
repz
jns
jl
dec
jge
dec
das
imul
aaa
add
add
sar
neg
cld
jmp
movs
add
pop
or
mov
mov
aaa
sti
jb
mov
pop
xor
xor
imul
test
out
jmp
or
push
sti
mov
push
imul
scas
call
or
loop
and
xor
pop
cmp
jge
and
add
push
xchg
sbb
pop
dec
repnz
movs
jge
mov
popa
ds
mov
shl
jnp
xchg
fnstsw
jno
push
inc
jg
imul
test
add
xchg
and
iret
ins
sbb
ficomp
ja
lods
pop
jecxz
mov
jl
fimul
xchg
xchg
jle
imul
sub
xchg
cmp
sub
imul
xchg
lock
ret
call
jge
push
test
xchg
loopne
jecxz
push
mov
imul
jnp
cmp
and
mov
dec
frstor
xor
retf
and
fstp
cmp
inc
cwde
mov
not
sub
and
leave
push
add
cmp
pop
xchg
xchg
movs
jmp
nop
icebp
mov
dec
and
ins
repz
xchg
fcmovbe
jo
adc
repnz
ret
jnp
mov
jb
mov
(bad)
shr
pop
cdq
outs
inc
leave
sub
jb
pushf
jae
stos
movs
fld
imul
ret
fbld
stos
mov
div
mov
mov
jno
fucomi
add
inc
pop
xchg
shl
jmp
loopne
jo
mov
in
jns
xchg
retf
jecxz
fistp
aaa
fistp
mov
mov
aas
adc
push
sbb
fisttp
scas
out
test
cmp
call
or
iret
inc
cmp
lea
adc
mov
dec
sahf
leave
in
shr
add
or
fwait
jns
hlt
ret
loope
push
pop
arpl
xor
fcomp
mov
loope
add
sub
mov
adc
inc
mov
aad
pop
add
daa
clc
inc
mov
aad
mov
loop
xchg
(bad)
adc
pop
rol
lahf
mov
mov
in
bnd
sahf
jb
mov
ret
jne
sub
cmps
fs
in
in
mov
nop
cs
inc
sub
fs
sub
push
dec
fs
movs
cmp
dec
es
sub
ret
aaa
icebp
leave
fcmovbe
movs
aam
add
imul
fwait
mov
mov
inc
je
dec
push
sub
cmps
sbb
shr
xor
bound
xchg
xor
cmp
std
cmp
movs
mov
mov
or
adc
popa
imul
and
mov
sbb
push
xor
out
push
cmp
mov
jmp
xchg
fimul
inc
mov
xchg
retf
bound
add
cmp
xor
jo
fisub
lea
sub
sbb
inc
push
sub
movs
pop
xchg
xor
dec
cs
mov
xchg
lods
dec
scas
adc
mov
repz
mov
cmps
aam
sar
outs
test
not
or
xchg
xchg
test
mov
popf
adc
and
jg
cs
pop
cmp
sub
fwait
enter
adc
movs
push
push
(bad)
push
xchg
std
xor
sbb
std
pusha
ret
loopne
cmp
cmps
sbb
ds
adc
pop
int
push
js
push
sti
movs
outs
icebp
es
adc
sbb
(bad)
aam
dec
arpl
dec
jns
add
mov
or
and
cmp
lea
test
mov
in
pop
mov
popf
repz
sbb
jmp
xchg
les
ja
pusha
leave
dec
in
int3
mov
push
push
xchg
push
scas
sbb
push
adc
stos
add
inc
in
mov
cmps
jno
fstp
dec
js
out
pop
sub
inc
repnz
sub
jmp
imul
cld
cmpxchg
stc
dec
xchg
jo
ins
prefetcht2
ins
or
or
pusha
loope
cdq
xor
push
jmp
loop
mov
pop
fsubp
jg
mov
sub
out
push
dec
imul
sbb
jp
fld
retf
cmp
ret
push
ja
std
or
pop
ret
aas
mov
fist
les
ret
js
push
aaa
mov
sub
shr
and
xchg
pusha
dec
into
test
mov
(bad)
add
call
hlt
or
ins
mov
jp
adc
push
les
fcom
test
das
xor
push
pop
cmp
mov
in
iret
jmp
mov
inc
lods
push
je
test
stos
pusha
addr16
mov
and
pop
fwait
popa
pop
sbb
jnp
adc
das
ds
push
imul
scas
pop
adc
adc
sub
outs
cmp
cmps
jne
loop
jmp
dec
test
and
ja
xchg
push
jne
sbb
push
or
repnz
loope
jecxz
jne
pop
pop
xchg
aam
sub
cmps
mov
pop
fldenv
ins
mov
aas
xchg
mov
add
imul
(bad)
adc
hlt
cmps
fisttp
adc
jl
bound
add
scas
and
push
sub
jp
cmp
push
pop
imul
mov
js
xor
mov
dec
pop
pop
pop
mov
js
mov
or
inc
adc
cmps
mov
xchg
or
imul
out
(bad)
jmp
and
test
pop
cmps
mov
lods
test
mov
push
adc
ret
or
push
dec
adc
pusha
xor
and
dec
pop
mov
in
scas
loop
popf
pop
xchg
loope
clc
pop
jbe
xor
xor
adc
out
jmp
push
scas
and
ja
(bad)
mov
push
xor
mov
test
add
mov
mov
cmps
(bad)
jmp
(bad)
push
not
(bad)
(bad)
js
push
pop
test
mov
sub
mov
and
test
pop
in
lds
mov
mov
mov
fisubr
mov
icebp
cli
pusha
repz
shr
ret
dec
adc
xor
and
pusha
pop
pop
and
xor
add
jae
call
stos
leave
adc
and
sub
ins
sbb
mov
or
jmp
sbb
sti
imul
rol
xor
add
adc
mov
je
nop
mov
popa
mov
stos
stos
popa
push
push
ss
adc
push
inc
xor
xchg
jl
ins
es
pusha
fisubr
imul
mov
scas
(bad)
xchg
inc
adc
pop
xor
mov
mov
jp
mov
mov
and
xor
mov
mov
push
pop
mov
push
push
repnz
mov
mov
add
pop
mov
ficomp
ja
pushf
cld
nop
adc
push
and
pop
int3
push
cli
xor
inc
cmps
inc
pop
ins
push
ins
xchg
mov
retf
jno
fld
sub
cmp
cmp
into
pop
mov
sub
mov
mov
jmp
dec
sbb
and
mov
adc
nop
sbb
test
xor
pop
scas
sub
mov
jb
sbb
mov
pop
int
mov
mov
push
ja
daa
xor
fsubr
rol
xor
outs
dec
sahf
ja
fsubr
or
retf
dec
jae
or
pop
lock
jmp
xchg
or
ins
and
sbb
int3
das
clc
je
in
mov
jae
push
xchg
cmp
jle
ret
in
sub
ret
(bad)
push
xor
aad
out
pop
pop
gs
mov
mov
mov
xchg
or
inc
inc
inc
push
jbe
or
jmp
add
jle
xchg
dec
pop
xchg
inc
(bad)
aaa
les
mov
(bad)
out
and
xor
mov
mov
fisubr
push
cli
(bad)
test
ds
pop
xchg
mov
pop
shl
jne
into
addr16
inc
cvttps2pi
scas
je
lea
ror
push
xchg
cmp
add
outs
push
in
rcl
ret
sbb
jle
push
int3
xor
adc
out
or
cmp
inc
outs
inc
outs
in
cmps
jle
aas
inc
loop
sbb
lea
pop
jnp
fstp
imul
int3
bound
out
or
nop
je
sar
cdq
retf
xor
cld
dec
sub
lahf
push
cmps
cmp
xchg
stos
retf
scas
sbb
loope
shl
dec
dec
and
jo
cdq
sub
call
call
sub
mov
ins
test
imul
retf
jmp
std
cli
pop
cmp
pop
jg
pop
mov
inc
inc
sub
mov
pop
and
xchg
pop
add
shl
out
push
jl
int
cli
jg
cmp
ds
loope
add
push
mov
stc
mov
xchg
fldenv
mov
(bad)
sbb
pop
and
jl
dec
stos
mov
retf
inc
sbb
add
inc
test
(bad)
push
adc
push
push
dec
and
dec
mov
je
sub
mov
xor
push
into
jg
pop
fwait
jns
ret
call
inc
outs
pushf
xchg
mov
je
inc
or
fiadd
aaa
in
push
and
pop
cmp
shr
std
clc
jecxz
and
retf
cmc
dec
mov
aaa
cld
push
cmp
mov
inc
stos
cmp
retf
jno
ins
add
mov
xchg
es
in
ins
icebp
or
fmul
push
cmp
and
dec
and
pop
mov
jns
cmp
push
scas
test
dec
(bad)
imul
jnp
cvtps2pd
mov
inc
outs
mov
inc
cli
mov
aam
gs
pop
aaa
mov
cmp
mov
fnstcw
dec
test
mov
dec
add
sbb
xor
cmp
inc
jne
inc
in
jecxz
xor
jg
popa
and
test
cmp
test
cmp
push
aam
rol
cmpps
mul
xchg
xor
xor
cmp
sbb
lds
jns
adc
jl
jle
int
adc
inc
push
pop
nop
shr
or
sbb
jnp
inc
mov
push
stos
leave
into
dec
pop
es
jns
mov
aaa
cwde
mov
or
sbb
dec
rcl
cwde
(bad)
test
fnstcw
addr16
sub
mov
add
out
or
cmp
ret
aad
sar
xor
cld
outs
and
sbb
xor
xchg
loop
lods
clc
sub
inc
cdq
xor
mov
jmp
push
or
add
cmp
fcom
aaa
cmc
(bad)
(bad)
mov
xor
hlt
jmp
mov
(bad)
pusha
sub
jmp
add
jbe
ja
cmp
mov
inc
ss
sar
cmps
(bad)
(bad)
pop
aam
gs
pop
iret
test
pmulhuw
cmp
mov
loop
push
jmp
and
mov
fidivr
(bad)
into
sub
cmp
sti
dec
sahf
sbb
and
xlat
arpl
push
arpl
add
loope
repnz
mov
jmp
jmp
aas
or
xor
fs
adc
jbe
lods
cmp
fwait
add
fisubr
cmp
dec
pop
ins
nop
xchg
push
push
int3
xor
pop
pcmpeqb
test
or
outs
mov
js
sub
rol
stc
sbb
sub
jge
dec
stos
xchg
pop
jns
rol
xchg
cmp
(bad)
and
lock
pop
xchg
jae
push
sub
sub
rcr
mov
mov
xchg
fsub
xchg
pop
xor
cmps
push
(bad)
cmc
inc
shl
or
(bad)
imul
movs
pushf
icebp
add
mov
and
pop
scas
imul
or
sub
fstp
xor
xchg
jb
mov
xor
xchg
mov
ss
inc
dec
pop
shl
mov
(bad)
inc
sub
mov
ins
aad
push
loopne
sti
stos
sti
fisttp
mov
xlat
ror
sub
pop
popf
and
cmc
pop
fimul
dec
outs
bound
call
pop
xor
das
inc
shl
rol
rol
push
cmp
(bad)
mov
rcl
scas
push
push
mov
cmps
dec
pop
(bad)
sar
dec
rol
dec
inc
add
lock
mov
fwait
xor
jmp
(bad)
stos
mov
lea
in
mul
aad
test
pop
jne
call
add
inc
push
mov
jno
cmp
shr
sub
mov
nop
push
les
out
cmp
sahf
xchg
fstp
push
push
movs
xor
jg
test
or
frstor
std
jb
sbb
push
push
sub
and
mov
or
adc
rcl
retf
js
popa
idiv
aam
mov
jae
push
data16
call
cmp
call
call
daa
in
push
jecxz
dec
lds
cmps
dec
push
sahf
xchg
sbb
imul
loope
sbb
xchg
push
aaa
movs
adc
dec
cdq
imul
jns
frstor
in
xchg
addr16
xor
xor
sub
add
jmp
xchg
push
pop
arpl
ss
fs
es
push
inc
call
or
xchg
add
psllq
sub
adc
loope
pop
mov
pushf
jae
mov
sti
sbb
test
or
popf
jbe
pop
ret
pop
imul
or
mov
xlat
mov
dec
dec
and
dec
jae
ss
sub
add
aaa
jae
push
test
in
data16
gs
ja
mov
lahf
xor
fisub
sahf
aas
outs
pop
mov
mov
cmp
mov
dec
and
jecxz
gs
jo
daa
adc
xlat
ins
pop
pop
mov
mov
test
add
outs
xor
or
push
xchg
and
mov
mov
retf
sahf
push
xor
jb
mov
xchg
das
push
in
mov
jl
mov
sub
pop
std
cmp
fnstenv
in
(bad)
jge
mov
outs
aaa
xor
cmp
sahf
mov
mov
into
ror
mov
push
leave
retf
mov
(bad)
cmp
das
mov
es
xor
retw
in
cld
add
dec
aad
mov
in
mov
loopne
int
bound
or
sub
add
sub
addr16
aad
push
lods
mov
mov
cmp
fwait
xchg
cmp
aad
or
movs
push
dec
call
xchg
adc
jecxz
jg
xor
adc
sahf
adc
repnz
or
clc
and
adc
pop
retf
iret
loopne
std
das
test
nop
movs
das
sub
sbb
inc
add
enter
popa
imul
mov
jns
leave
(bad)
(bad)
cmps
xchg
das
and
mov
sbb
add
or
dec
sahf
stos
(bad)
xor
xor
xchg
je
mov
mov
sbb
mov
pop
pop
xlat
push
bound
outs
or
inc
cmp
cmps
idiv
cld
jp
adc
ficomp
dec
and
mov
and
dec
xor
xor
jle
mov
cmp
cmp
test
mov
pop
inc
add
or
int3
pop
iret
or
jecxz
repz
adc
fbstp
inc
addr16
cmp
sbb
sbb
adc
mov
dec
fadd
mov
pop
pop
cdq
or
xor
or
cmps
scas
popf
push
xor
repnz
in
jnp
push
jo
mov
test
inc
and
jo
mov
or
pop
aam
xchg
sbb
mov
and
add
inc
out
adc
mov
xchg
jl
mov
dec
add
repz
jbe
popa
fwait
arpl
jmp
fisub
rol
clc
retf
add
mov
aas
pop
add
jmp
and
mov
adc
out
dec
xchg
out
xor
push
in
pop
stos
shr
fist
jae
sbb
mov
push
loopne
lds
push
cmp
ret
imul
test
jge
and
sbb
inc
popf
cli
or
mov
and
xor
pop
xchg
sahf
or
in
cmp
pop
pop
leave
sbb
and
jmp
sbb
movs
fwait
jp
fsub
mov
sub
clc
adc
push
aam
scas
jnp
pop
inc
cdq
and
out
test
push
cmp
rol
outs
push
leave
leave
adc
mov
comiss
mov
mov
aas
fcomi
push
xchg
mov
jae
inc
jge
(bad)
cld
pop
rcl
in
clc
jb
mov
mov
fsin
sub
pop
pop
mov
fs
nop
mov
adc
in
rcr
add
ja
popa
inc
in
adc
fist
adc
call
sbb
or
push
cwde
stc
push
pop
les
loopne
inc
mov
sub
leave
test
and
test
jmp
pushf
dec
pop
or
cvtps2pi
mov
pop
and
(bad)
out
stos
adc
jge
stos
mov
push
outs
and
xor
ins
jmp
fisub
mov
cdq
pop
pusha
jl
xchg
iret
sub
sub
test
sub
scas
push
fmul
mov
cmp
cmps
idiv
pop
pop
mov
icebp
fs
add
mov
loope
or
(bad)
in
cmp
popa
in
and
daa
xor
pop
jl
jb
mov
push
or
adc
jecxz
pop
(bad)
or
sub
xor
mov
xor
pop
xchg
or
mov
mov
mov
out
les
loope
pop
fdiv
mov
in
mov
sbb
sbb
cmps
rol
into
xor
add
push
and
movs
dec
mov
mov
(bad)
xchg
(bad)
dec
std
call
outs
(bad)
adc
fld
add
imul
std
mov
pop
mov
jp
sbb
test
mov
or
xchg
pop
mov
mov
iret
in
jp
mov
xor
repnz
(bad)
into
test
or
inc
mov
aad
xor
mov
clc
ret
out
mov
jbe
fcmovne
sbb
pop
sbb
or
xor
imul
scas
mov
fdivr
pop
daa
push
adc
cmp
hlt
jae
mov
push
jbe
xor
adc
push
mov
pop
in
leave
push
dec
sar
push
and
ins
jge
repz
(bad)
mov
and
mov
js
xchg
sub
pushf
rcl
fstp
outs
lds
mov
dec
(bad)
movs
pop
dec
mov
jno
jno
outs
pop
dec
or
push
out
sbb
add
push
push
cmc
push
cmp
ss
xchg
pop
add
addr16
(bad)
out
mov
sub
inc
bound
sbb
add
xchg
mov
push
addr16
imul
adc
mov
shl
add
out
js
mov
sbb
cmp
xchg
xchg
or
inc
xor
cmc
dec
cld
fnstsw
int
pop
dec
lods
cmp
mov
inc
aaa
mov
test
fistp
movs
xchg
cmp
outs
fcom
cmps
stos
jae
xchg
outs
test
dec
cwde
sub
sbb
pop
mov
inc
mov
iret
imul
mov
inc
xchg
ror
pusha
xchg
mov
dec
xor
pop
ds
or
call
xchg
jl
outs
cli
cmc
mov
fwait
jecxz
fmul
pop
cwde
and
mov
mov
jmp
push
mov
jecxz
cmp
cmp
push
xchg
(bad)
enter
add
pop
cld
loop
mov
scas
push
loope
xchg
add
movs
ret
pop
xchg
lock
bound
xchg
jno
jecxz
mov
cdq
out
jge
shr
retf
dec
add
xchg
(bad)
mov
sub
mov
fimul
jmp
std
dec
ret
out
pop
int
jmp
out
mov
imul
cwde
dec
popa
xchg
mov
or
popa
cmp
fld
scas
pusha
xchg
les
cmc
sar
adc
inc
aaa
es
xchg
fisttp
repz
mov
push
mov
mov
nop
shl
movs
inc
stos
xchg
pop
cmp
jle
popf
dec
lahf
cmp
arpl
cmp
mov
push
and
lds
imul
mov
cmp
xchg
xchg
arpl
inc
ins
push
push
ss
pop
addr16
pop
adc
inc
sbb
jg
inc
jo
and
mov
mov
shl
dec
lea
fwait
nop
push
pop
fadd
cmp
sahf
in
xor
sbb
in
scas
xchg
adc
sbb
pusha
jp
jnp
inc
and
xor
push
add
in
fst
repz
sub
jg
fdivrp
imul
iret
loope
imul
sbb
xor
xor
sbb
or
jge
std
push
aas
pop
mov
sahf
push
jmp
or
int
cmps
mov
test
out
and
nop
push
pop
mov
pusha
fisttp
mov
mov
outs
retf
dec
lods
cli
inc
clc
retf
sub
inc
xchg
popf
push
cli
lock
push
jns
retf
jnp
inc
cli
xchg
jne
bound
pop
and
or
jo
xor
dec
lock
mov
lods
les
mov
and
sub
mov
rol
push
clc
lea
or
sub
dec
add
jg
call
rcl
mov
fadd
push
add
ins
jge
cwde
mov
sub
pop
or
mov
pushf
mul
imul
mov
lds
jmp
xchg
cmovl
mov
pop
jae
pop
(bad)
xchg
das
adc
sbb
popa
ror
mov
lock
mov
je
xor
daa
movs
inc
jno
inc
fld
pop
imul
xchg
mov
imul
xor
je
test
xchg
add
dec
xchg
inc
lock
sbb
xlat
jmp
retf
adc
ret
js
jb
ret
adc
dec
dec
repnz
out
fwait
hlt
sub
adc
lods
mov
loope
inc
jp
fld
test
shl
pop
xchg
jno
or
or
xchg
push
cmp
pop
dec
add
inc
pushf
push
adc
(bad)
sub
jo
add
clc
mov
pop
outs
pop
push
pop
mov
iret
adc
hlt
out
jmp
arpl
fwait
aad
sbb
mov
cdq
loopne
pop
and
and
fimul
(bad)
ror
leave
jle
sbb
mov
and
adc
lea
adc
jae
fdivr
and
mov
inc
lods
jmp
ficom
jb
cmp
mov
fs
adc
mov
test
scas
jecxz
mov
jg
ins
xor
mov
jmp
fmul
stos
int
xchg
adc
(bad)
cmp
sbb
aas
addr16
nop
test
je
pop
lods
icebp
bound
ins
fadd
rcr
xor
or
hlt
adc
test
mov
out
(bad)
clc
sub
ret
cmps
pop
jecxz
sub
push
add
lods
xchg
les
addr16
aas
mov
add
xchg
add
mov
outs
loope
sbb
pop
xchg
mov
es
movs
in
cs
inc
retf
test
ins
daa
ins
movs
cmc
stos
(bad)
aad
xchg
aam
cwde
xchg
jmp
outs
lods
sbb
ror
inc
stc
pusha
dec
xor
repnz
xlat
out
fld
in
aad
call
add
dec
je
add
mov
mov
mov
std
or
neg
push
loopne
or
fsubr
jb
jne
pop
mov
cmp
or
inc
jmp
test
(bad)
mov
push
add
dec
xchg
push
cmp
std
xor
das
xor
xchg
sbb
dec
(bad)
mov
das
in
call
cmp
mov
mov
jecxz
loopne
int3
cmp
mov
xchg
movs
adc
ins
(bad)
lock
jne
nop
jae
jne
retf
xchg
add
lods
nop
inc
dec
jns
stos
inc
movs
sub
movs
in
mov
std
in
push
jmp
sbb
ins
mov
pushf
lods
imul
sub
mov
sub
out
rcr
or
pop
cmp
push
retf
mov
cmp
mov
sub
addr16
jle
or
mov
mov
inc
sbb
add
cmp
inc
mov
stc
pop
pop
fnstcw
cmp
mov
push
inc
dec
movs
xor
mov
inc
xor
mov
aam
imul
lahf
pop
cld
xchg
jns
mov
push
pop
jmp
or
(bad)
outs
and
mov
out
clc
stos
test
push
xor
mov
push
shr
dec
mov
lods
xlat
push
inc
cmp
leave
lods
mov
int
cmp
pop
test
sub
push
mov
int
sbb
add
dec
mov
jg
ret
add
inc
call
fs
fstp
das
push
loope
int3
jae
sahf
in
cs
xor
mov
jbe
sbb
mov
sbb
cmps
aaa
jmp
in
xlat
pop
(bad)
add
dec
inc
scas
fwait
or
sub
and
ror
cwde
ret
cdq
ror
stos
sahf
ins
sbb
punpckhbw
jns
push
sub
mov
and
pop
aad
les
nop
mov
call
xlat
test
push
in
dec
xor
setnp
jns
and
xchg
mov
push
pop
test
xor
inc
sbb
or
dec
or
fs
xchg
jnp
dec
sub
or
ja
ds
stos
or
inc
loop
out
adc
aad
in
inc
scas
mov
out
add
std
mov
cli
jno
pop
cmp
loop
or
cmc
fsub
lahf
leave
leave
adc
jmp
ins
mov
cmps
cmc
or
lods
mov
jge
outs
jne
cld
cmps
rol
pop
jns
mov
cmp
aas
jge
nop
mov
clc
mov
mov
adc
jno
xchg
les
dec
pop
mov
dec
arpl
mov
out
and
mov
push
retf
ret
lock
hlt
fwait
add
mov
retf
outs
adc
cli
sub
jecxz
mov
in
mov
mov
push
popf
mov
cmp
ret
ret
jle
push
sbb
fimul
sbb
push
arpl
jecxz
mov
ds
mov
inc
or
test
(bad)
je
(bad)
test
inc
push
mov
dec
out
scas
ins
iret
sub
cs
mov
mov
lods
in
jmp
dec
inc
dec
cmp
pop
mov
sbb
(bad)
adc
mov
movs
int3
out
pop
test
push
addr16
push
mov
sbb
bound
inc
mov
lahf
aam
dec
or
pop
xor
lahf
fcom
cwde
push
fst
ror
mov
jns
movs
imul
int
movs
xchg
stos
mov
lds
push
xor
push
push
push
rcr
cwde
add
enter
lock
sub
cmp
push
fld
leave
push
idiv
mov
inc
pop
cmp
mov
sbb
fisub
icebp
push
inc
ret
push
pusha
adc
cmc
add
stos
or
pushf
and
call
push
ror
mov
shr
sbb
pop
hlt
(bad)
and
xchg
jbe
xor
lock
xchg
outs
ficomp
cli
add
lods
mov
gs
imul
fst
cmp
test
movs
fsubr
fld
fcomp
out
stc
or
repz
mov
push
sbb
cwde
sub
adc
and
or
mov
lods
in
aas
fld
int
aad
pop
pop
loope
jl
cwde
adc
jmp
pop
inc
mov
inc
or
mov
mov
in
aad
lock
jo
sar
pusha
inc
push
in
push
(bad)
jmp
cmps
test
es
pop
xor
sub
(bad)
stc
adc
addr16
out
dec
stos
mov
pop
push
or
and
imul
pavgw
aaa
pop
cli
je
cmp
cs
in
lds
xchg
sti
and
pop
mov
jnp
jecxz
jnp
stos
add
mov
cmp
ds
rol
mov
out
(bad)
data16
mov
xchg
ds
mov
and
push
push
mov
fwait
push
xchg
jle
sbb
fsubr
int
push
push
outs
cmc
dec
xchg
pusha
xor
ficomp
iret
push
mov
loope
adc
and
pop
mov
(bad)
stc
jns
jb
sub
inc
mov
mov
lahf
add
pusha
sbb
ins
data16
xchg
push
mov
adc
xchg
popf
inc
xor
push
popa
cmps
cmp
push
daa
inc
and
dec
loop
pop
pop
icebp
xchg
mov
xchg
fwait
cmps
or
jge
ficom
xchg
mov
or
and
mov
aaa
sub
test
jmp
add
scas
xchg
cmps
mov
hlt
sub
cmps
sub
rol
xchg
push
mov
aad
jmp
xor
xchg
popa
ja
das
pop
rcr
(bad)
aam
scas
repnz
fwait
cli
dec
outs
aad
and
data16
in
mov
xchg
lahf
mov
pop
adc
shl
cmps
jnp
sub
or
xor
jb
mov
jns
xchg
cli
xor
mov
into
push
pop
lods
xor
movs
dec
(bad)
jmp
data16
and
dec
push
mov
outs
gs
push
mov
popf
mov
aam
fwait
xor
ret
(bad)
sar
push
out
ins
mov
push
in
or
mov
adc
dec
maskmovq
imul
xchg
xor
xor
pop
clc
gs
add
pop
mov
jb
das
shr
sbb
dec
lods
stos
sbb
push
jmp
shl
loope
add
and
cmp
xlat
iret
mov
or
mov
mov
jo
imul
push
popf
jmp
rol
lods
cs
inc
and
les
xor
jbe
xor
dec
xor
cwde
movs
jmp
test
fst
pop
fcomp
test
or
inc
sbb
pusha
jb
imul
test
fimul
xor
fwait
xchg
lock
dec
int3
test
adc
stos
jmp
or
mov
movs
xchg
sar
rcl
push
inc
movs
xchg
add
jns
fwait
adc
and
push
add
int
sub
ins
jbe
xchg
(bad)
sbb
add
es
cwde
cmps
mov
mov
gs
imul
pusha
fbld
inc
ds
ret
push
cdq
in
sbb
test
adc
jecxz
pop
fstp
xchg
mov
add
out
daa
repz
push
jg
fdiv
and
shl
cmp
(bad)
and
not
scas
xor
mov
ins
xor
ret
les
ror
es
mov
push
or
and
push
movs
push
mov
test
mov
sbb
test
xlat
fs
cmp
repz
aad
outs
stos
int
ja
pop
jne
fistp
fild
inc
push
mov
push
dec
jmp
repz
fsubr
or
popa
enter
daa
pop
in
mov
fld
and
lock
shl
sub
dec
jns
sub
nop
inc
and
mov
xlat
ret
xor
in
rcr
pop
pop
pushf
pushf
mov
mov
jbe
lods
jmp
out
and
pop
call
ins
mov
push
jne
jecxz
and
and
sti
mov
jecxz
sbb
in
xor
dec
sbb
mov
jl
mov
mov
xchg
mov
int
and
inc
jle
and
pop
inc
inc
es
ror
ds
outs
rol
jl
imul
pop
dec
sti
dec
aam
xor
cmp
xchg
leave
repnz
xabort
inc
call
int3
test
es
dec
mov
fisttp
mov
add
movs
inc
inc
test
sbb
xor
bound
sub
cmp
add
or
adc
popa
mov
add
int
pop
and
stos
ins
sbb
mov
cmps
xor
inc
repnz
enter
sub
cmp
inc
inc
sbb
sub
test
lds
test
add
in
mov
shl
mov
loop
rcr
jmp
ficom
clc
leave
arpl
ficom
imul
test
ins
mov
dec
jl
iret
jmp
sbb
into
xor
jg
jle
jge
cmps
mov
movs
lods
or
cmp
mov
push
imul
mov
cmp
lods
pop
jl
mov
sbb
repnz
mov
lods
add
(bad)
sbb
outs
enter
out
inc
lds
ss
test
mov
test
icebp
jp
add
cmp
dec
test
lea
and
fmul
sahf
hlt
stc
stos
leave
sbb
outs
cli
pop
fstp
fisttp
adc
fiadd
out
stos
push
pop
and
xchg
and
stos
mov
sub
imul
sub
retf
fmulp
aas
nop
faddp
lods
jge
or
sub
shl
in
call
into
jp
pop
sbb
cwde
push
push
int3
sbb
pop
pop
fimul
inc
in
mov
jbe
pop
sub
jbe
and
pop
scas
mov
cmc
and
pop
adc
shr
inc
call
lods
in
ret
ret
and
mov
push
imul
adc
mov
ds
dec
push
mov
mov
das
dec
inc
xlat
ret
icebp
sub
cmove
stos
sub
in
stos
inc
ror
in
loope
mov
(bad)
test
out
mov
lds
add
xchg
popf
mov
and
xor
xor
jp
xchg
push
clc
cmps
out
lock
pop
aas
cmp
pop
iret
sbb
lds
cmp
dec
mov
ja
into
add
jmp
(bad)
les
and
pop
mov
rcr
xor
repz
xor
sar
sbb
adc
repnz
(bad)
pushf
pop
call
leave
mov
xor
or
rcr
(bad)
mov
jp
mov
dec
or
repnz
dec
rcl
cmc
(bad)
in
and
hlt
test
shl
lahf
push
xchg
(bad)
sub
idiv
call
ins
mov
mov
lea
outs
add
adc
shr
fild
xchg
movs
jle
xor
out
sub
repz
inc
cld
mov
stc
(bad)
push
cmp
stc
out
loopne
lds
jecxz
ins
int
sbb
pop
out
or
jae
adc
call
shr
not
jp
cmc
or
cmp
cmp
sub
sub
in
pop
mov
rol
js
shr
xor
test
mov
inc
sub
fdivr
jecxz
iret
xchg
adc
call
outs
out
es
daa
inc
pushf
inc
aam
in
stc
sub
dec
call
les
push
jns
into
mov
jecxz
push
sub
popa
jae
adc
mov
retf
inc
ss
cmp
inc
mov
clc
icebp
adc
pop
cmp
les
inc
jg
lods
int
stos
in
adc
or
fucom
add
and
sub
jp
and
add
out
cmp
je
add
mov
sbb
or
mov
push
push
xchg
fiadd
pop
fld
add
cmc
push
push
mov
loopne
jmp
(bad)
in
mov
adc
sbb
push
and
call
cmp
loop
retf
push
xor
push
mov
fs
test
inc
je
das
ror
dec
shl
xchg
ror
pop
gs
add
cwde
cmp
popa
fstp
daa
xlat
loopne
sti
sbb
int3
and
or
mov
rol
daa
imul
and
push
ins
inc
test
xor
cdq
mov
xor
fdiv
jp
mov
gs
fidiv
ins
sti
push
add
cmp
cmp
and
mov
jmp
fist
shl
add
in
sub
jb
xor
hlt
pushf
inc
cmc
lods
or
push
adc
sub
inc
and
xor
pop
jle
jp
sbb
call
add
xor
movs
inc
xor
jbe
fldenv
leave
test
and
jnp
jmp
fldcw
inc
adc
rcl
aas
stos
sub
pop
mov
aas
push
add
sub
in
je
or
jno
or
push
cmp
jmp
aaa
xchg
adc
or
int3
jo
cld
mov
loope
stc
lods
nop
jg
jge
fcomp
xor
nop
(bad)
hlt
cli
rcr
loope
xchg
sar
cld
cmps
mov
imul
or
loop
call
xchg
adc
ja
pop
das
dec
mov
fimul
xlat
mov
fldcw
test
in
lds
inc
mov
mov
xlat
push
call
call
xchg
neg
adc
adc
dec
or
mov
cwde
adc
cdq
add
cmps
jle
pop
enter
sub
fsubr
xchg
lds
mov
push
nop
mov
jne
std
xchg
xchg
mov
in
rep
(bad)
sub
mov
retf
repz
add
test
fbstp
adc
adc
outs
and
cli
outs
dec
ret
pop
mov
fcmovnbe
loopne
add
je
or
(bad)
out
fnstcw
test
clc
shl
lea
(bad)
(bad)
mov
push
cmp
sbb
pushf
rcr
leave
push
loopne
ret
mov
add
aam
jns
test
add
mov
mov
mov
sbb
stos
push
enter
stos
std
push
iret
sub
push
push
mov
test
xchg
mov
sbb
sbb
aas
in
sub
div
pop
sahf
int3
test
in
imul
in
mov
test
xchg
movq
inc
xor
in
add
mov
mov
jns
ficomp
push
pop
jge
imul
xor
or
mov
outs
pushf
xor
sbb
call
fldcw
movs
(bad)
adc
add
mov
gs
lods
or
test
push
movs
and
in
lods
adc
or
(bad)
lea
bound
ret
fisttp
mov
cmp
xchg
imul
mov
xor
dec
xchg
jmp
push
aaa
inc
inc
das
stos
fidiv
pop
xor
mov
or
fcmovb
gs
sub
adc
push
sbb
pop
push
sti
inc
call
mov
retf
push
jmp
sbb
mov
imul
std
mov
jne
xor
shl
add
fistp
movs
enter
cmps
mov
jmp
add
fcom
mov
in
pop
jg
movs
push
in
(bad)
pop
sbb
sub
add
cli
push
add
dec
nop
lahf
jno
push
ds
shr
aas
mov
pop
lock
cs
daa
fidivr
or
rep
mov
sbb
(bad)
cdq
test
and
inc
jno
dec
mov
sbb
loop
jle
xchg
xchg
pusha
cmc
add
adc
jbe
dec
mov
cs
aaa
xchg
repz
fdiv
cmp
aaa
adc
jns
xchg
jae
jmp
sub
mov
dec
ret
loope
fs
cld
ficomp
xchg
and
stos
mov
in
(bad)
hlt
inc
xchg
lock
pop
or
lahf
push
mov
ja
or
lock
push
sti
stc
xor
push
pop
cmp
jge
jne
dec
rol
pop
adc
int3
hlt
or
dec
sar
test
xor
jmp
repz
cmp
mov
adc
mov
add
cmps
ins
(bad)
data16
(bad)
mov
push
out
fstp
in
aaa
loopne
mov
dec
sbb
das
fdiv
xor
scas
jae
mov
loop
imul
aam
fmul
ret
cmp
add
lods
loope
gs
out
fisubr
cs
bound
ja
icebp
sbb
mov
arpl
dec
lahf
add
mov
cmp
and
or
mov
cwde
or
dec
movs
in
pop
mov
(bad)
retf
into
pusha
scas
mov
ss
xor
imul
mov
addr16
jns
jnp
jnp
scas
jecxz
dec
mov
aad
std
sub
arpl
mov
bound
mov
(bad)
cld
push
fcomp
gs
mov
jo
sbb
icebp
jg
xor
mov
ss
push
or
fadd
sub
loop
dec
xor
jmp
xor
aam
push
cmps
inc
(bad)
lock
xchg
cmp
sbb
and
lea
push
clc
jecxz
push
shl
(bad)
retf
xchg
test
mov
pop
retf
xor
in
mov
mov
jle
imul
sbb
adc
lahf
aam
xchg
push
inc
pop
rcr
(bad)
xchg
adc
mov
pop
mov
push
and
bound
inc
mov
(bad)
and
sub
(bad)
fsubr
aad
xor
aaa
mov
or
inc
nop
mov
ds
and
jnp
dec
xchg
xchg
or
js
inc
cdq
iret
jmp
lahf
scas
or
nop
rcr
jne
scas
add
xchg
inc
mov
add
push
lock
int
cs
jbe
jle
adc
jne
(bad)
pushf
jl
mov
mov
lock
push
mov
je
mov
cs
(bad)
pop
pop
mov
jg
nop
xlat
pop
push
in
test
into
iret
jo
bound
jle
xor
jns
outs
jp
pop
int3
fdiv
daa
push
and
xchg
imul
dec
add
inc
je
in
stc
sahf
outs
xor
adc
push
adc
xchg
push
test
fadd
stos
int
repnz
cwde
mov
or
imul
sub
ret
jecxz
das
data16
mov
push
inc
push
repz
test
sub
sbb
movs
adc
inc
cmps
sbb
dec
sbb
add
xchg
or
push
push
jmp
or
jmp
adc
call
pop
imul
retf
jl
cs
popa
ins
test
(bad)
arpl
push
cdq
outs
addr16
imul
jmp
push
push
imul
mov
dec
in
mov
jmp
je
push
sbb
xchg
daa
psubusw
loop
dec
addr16
dec
popa
adc
ins
ror
sbb
add
push
and
xor
imul
pop
xor
pop
fnsave
adc
mov
fld
aaa
stc
sbb
jb
cmps
(bad)
xor
bound
xchg
pop
stc
sbb
loopne
in
jg
test
mov
fucomi
(bad)
ss
sbb
fdivp
addr16
jle
loop
shl
pop
retf
ds
dec
sub
or
es
or
jl
sbb
or
jmp
jp
push
mov
xchg
dec
nop
xor
push
cmp
mov
xchg
cmp
retf
out
in
inc
rol
adc
xchg
sub
stc
lods
add
adc
fs
or
div
out
mov
popa
inc
(bad)
adc
mov
shr
outs
fsub
scas
inc
stos
shr
sbb
push
iret
imul
repnz
push
imul
push
xor
bound
test
mov
mov
cdq
mov
jmp
push
(bad)
sbb
cwde
push
and
fisub
int
arpl
and
fwait
jb
lods
sub
mov
jo
mov
cmc
lock
xor
or
mov
mov
(bad)
retf
jl
fnstsw
adc
and
call
sti
sar
sbb
pop
push
pop
sbb
sbb
pop
(bad)
out
fistp
push
pushf
fld
inc
ds
int3
lods
jnp
jp
jl
jle
pop
or
xlat
and
loop
icebp
test
xor
push
fnstenv
xchg
inc
call
out
rcr
idiv
inc
push
xlat
inc
mov
aas
test
inc
outs
cmp
pop
adc
sbb
ret
pop
push
(bad)
xlat
push
mov
outs
sub
ja
rol
hlt
xchg
dec
jl
cwde
push
inc
loop
imul
int3
push
adc
jmp
rcr
push
js
inc
push
lods
mov
rcr
dec
and
jo
scas
cmp
fdiv
inc
push
inc
or
test
cs
sub
mov
inc
mov
ret
test
(bad)
jmp
cmp
pop
jne
retf
(bad)
sub
jmp
add
sbb
dec
rol
call
mov
jge
mov
push
mov
into
and
lea
adc
xor
movs
adc
fwait
test
enter
xchg
std
pop
mov
icebp
dec
add
(bad)
sbb
in
jle
jnp
mov
retf
loope
xchg
xor
(bad)
iret
cli
retf
lahf
mov
aad
addr16
xchg
inc
das
and
xchg
jmp
mov
ror
push
loope
add
adc
add
les
icebp
and
iret
shl
fld
mul
mov
mov
ror
int
and
cmp
ins
cdq
xchg
jo
fwait
sbb
inc
fs
enter
cmc
dec
xchg
int3
mov
jle
nop
jne
inc
ss
mov
loop
(bad)
mov
sti
push
adc
xchg
int
xchg
icebp
aad
cmp
mov
inc
lahf
dec
inc
enter
pop
fld
push
popf
mov
rcl
(bad)
mov
mov
out
pusha
add
pop
cdq
loope
push
sbb
push
pop
mov
aas
sbb
fwait
sahf
mov
ins
push
pop
or
push
mov
adc
aas
sbb
ins
pop
dec
dec
push
out
(bad)
fadd
inc
xchg
sub
cmps
sub
bound
dec
and
pop
cmp
stc
sbb
sub
sahf
ficomp
loop
call
mov
dec
mov
inc
(bad)
mov
pop
scas
push
aaa
inc
xlat
sbb
sub
cmp
(bad)
cmp
out
hlt
addr16
cld
(bad)
jb
push
aam
loopne
sub
call
sbb
mov
sub
dec
fst
popa
popa
sub
out
adc
enter
fbstp
in
xor
push
mov
call
loop
call
bnd
xchg
lock
push
sbb
cmp
test
call
xchg
and
mov
xchg
mov
js
dec
add
cld
sbb
pop
pop
and
mov
les
call
das
xchg
xchg
stos
xchg
scas
aam
jbe
popa
je
ret
xchg
jns
lods
icebp
adc
sub
(bad)
pop
sahf
mov
sub
adc
lds
cmp
(bad)
xchg
dec
scas
stos
addr16
or
sbb
mov
pop
loop
pop
xor
test
icebp
in
sub
jb
call
repnz
xor
imul
stc
popf
test
sti
popa
mov
sahf
or
mov
sub
push
gs
loop
sbb
movs
mov
cmps
mov
pop
test
je
add
movs
adc
adc
aam
ds
xchg
mov
(bad)
rcr
enter
fmul
inc
dec
mov
stos
push
pop
sub
xlat
mov
mov
push
test
xchg
fidiv
xchg
sbb
cmp
xor
test
fsub
test
push
and
fwait
push
(bad)
daa
mov
mov
dec
aad
jp
push
les
je
mov
ds
mov
fisttp
cmp
xor
adc
leave
cmp
js
xchg
mov
test
pop
push
mov
xchg
ret
call
addr16
jno
xor
mov
daa
xor
enter
test
xor
sar
xor
mov
not
sub
mov
call
and
movs
jb
xchg
adc
stos
add
push
and
and
push
idiv
lds
(bad)
xchg
and
(bad)
cli
mov
or
daa
cmp
push
fisub
mov
test
xor
xchg
mov
ins
jns
retf
pop
and
mov
xor
cld
cmc
push
movs
pop
sbb
jnp
lahf
mov
aas
xor
xchg
imul
movs
xchg
repz
mov
xor
ins
push
jno
add
xor
mov
ret
push
cmp
into
lea
jge
push
push
int
pop
pop
fldcw
push
jbe
ret
xchg
sbb
sbb
pop
or
pop
pushf
test
pop
mov
ss
mov
in
and
dec
mov
imul
fdivr
and
ins
inc
add
inc
mov
mov
iret
jb
fs
push
ins
mov
das
jl
xor
add
jmp
in
fwait
and
mov
cmp
outs
and
xor
cmp
jne
inc
push
icebp
lods
xor
sub
dec
mov
in
mov
pop
loop
inc
jmp
test
(bad)
rcr
sbb
bound
sub
jne
and
cmp
sub
xor
push
xchg
outs
enter
jne
mov
into
arpl
push
pop
lods
inc
pop
inc
lock
aaa
fwait
sub
ds
adc
inc
jae
call
inc
push
push
jns
in
cmp
push
cdq
sub
outs
retf
jmp
rcl
iret
adc
or
push
std
pop
mov
xor
adc
cmp
pusha
scas
add
sti
dec
popa
scas
pop
xor
xchg
pop
popa
cld
xchg
cmp
sbb
neg
shl
push
sub
dec
out
outs
xor
lahf
shr
push
repnz
std
jns
out
push
mov
sub
mov
sbb
xlat
cdq
fs
and
pop
add
mov
outs
mov
xor
pop
pop
push
add
imul
jecxz
jle
shl
jo
rcl
lds
xor
retf
imul
push
femms
mov
push
and
jmp
jnp
out
(bad)
jle
mov
jo
mov
sub
cwde
rcl
enter
int3
or
(bad)
neg
adc
pop
jb
jl
fs
and
sub
mov
inc
push
pop
pop
cmps
in
scas
out
push
or
or
cmc
ins
xchg
or
pop
adc
mov
ins
push
cmp
call
std
retf
and
(bad)
cdq
dec
fcomip
cmps
out
adc
stos
ror
icebp
pop
push
mov
mov
push
fisttp
ins
mov
xchg
adc
shl
mov
inc
and
or
fs
ins
gs
xchg
fdivp
aad
std
in
out
xor
push
into
add
aam
mov
lds
xor
adc
repz
pop
sub
mov
ret
pause
dec
mov
and
pusha
cmc
pop
test
or
out
hlt
mov
syscall
lock
loop
lea
push
mov
push
leave
mov
sbb
xor
lea
and
inc
sub
aad
sbb
jecxz
dec
and
int
jb
jmp
mov
push
test
xchg
arpl
add
mov
(bad)
cmc
call
(bad)
adc
shl
xlat
mov
and
cs
or
jmp
mov
(bad)
and
cmps
mov
gs
jbe
fwait
mov
es
cmp
xor
(bad)
jmp
fimul
jae
cmp
inc
enter
movs
cmps
adc
xor
inc
dec
mov
pop
xchg
push
pop
out
arpl
xchg
out
add
xchg
sbb
jg
ror
mov
retf
push
cmp
dec
mov
mov
xchg
mov
inc
jmp
shl
xor
ins
sbb
xor
leave
sub
aas
mov
push
lods
cmp
sub
mov
mov
xlat
bnd
call
sbb
outs
retf
adc
jnp
lahf
gs
sub
or
data16
call
mov
push
aad
mov
pushf
push
xor
pop
cmp
adc
repnz
xchg
mov
dec
shl
jp
jecxz
sub
sub
cdq
push
cwde
aas
and
or
(bad)
fs
add
test
xor
sbb
and
hlt
scas
outs
inc
xchg
sub
pop
lahf
jecxz
mov
ret
add
push
cwde
fidiv
stos
std
xor
call
(bad)
push
sbb
xchg
pusha
and
xchg
jnp
and
xchg
ja
mov
sub
mov
fcomip
jl
push
jnp
call
ret
adc
or
push
mov
daa
add
pushf
test
adc
retf
fcom
ret
fst
cmp
cmp
or
and
mov
sbb
adc
cli
xlat
and
pop
adc
dec
fs
add
sub
sub
push
or
cmp
mov
mov
pop
mov
arpl
call
in
(bad)
and
bound
aad
arpl
mov
ror
out
pop
stc
fcomp
mov
inc
pop
test
push
sub
sahf
mov
or
cmp
icebp
xchg
mov
push
sub
add
je
imul
bound
test
pop
jmp
test
fdivr
dec
cs
cs
loop
cmp
fwait
or
sub
sbb
sub
add
out
loop
mov
or
pop
mov
repnz
mov
jp
std
cmps
cmps
ficom
retf
push
iret
jns
jbe
sub
cmp
xor
mov
mov
push
add
test
add
mov
test
and
dec
dec
iret
je
sar
sub
das
push
sahf
fs
fimul
jge
mov
fistp
sbb
pusha
repz
adc
jl
fmul
fadd
pop
adc
push
cs
xor
add
jns
aaa
imul
lahf
std
or
push
mov
addr16
or
inc
push
outs
jno
(bad)
hlt
mov
and
(bad)
sbb
into
mov
out
push
fidivr
xchg
gs
dec
ror
sbb
mov
push
es
xchg
retf
sti
stos
in
and
test
mov
out
push
push
push
mov
dec
add
into
dec
cmc
mov
sub
push
xchg
cmp
gs
outs
push
xlat
test
lock
mov
retf
xor
aam
cdq
adc
sti
popa
fnstenv
cmps
stos
sub
mov
ja
and
mov
fcomp
out
out
cli
out
pop
lods
ja
add
ror
push
js
mov
mov
xor
movs
stos
add
cmp
sbb
out
and
mov
std
and
jmp
add
and
into
inc
call
lahf
test
into
push
ins
retf
adc
aas
inc
in
push
hlt
std
sbb
jl
aam
mov
push
scas
xor
mov
inc
jle
repnz
fsubp
xchg
pushf
inc
sub
cmps
mov
test
mov
lock
or
in
cmc
cld
push
mov
mov
add
sbb
pusha
mov
jecxz
xchg
getsec
or
lods
repz
add
(bad)
retf
mov
movq
inc
je
pop
fimul
xchg
xor
mov
stos
aad
cli
cwde
nop
movs
xlat
pop
imul
push
jb
xor
pop
pop
inc
jo
inc
fmul
in
or
fild
iret
dec
int
out
loopne
cmp
mov
adc
push
pop
push
movs
dec
jb
xchg
scas
push
cs
pop
sub
lods
cwde
push
jmp
in
sub
mov
xor
cmps
cmp
call
movs
xchg
push
stos
cmp
and
movs
push
dec
popf
jnp
mov
xor
mov
retf
and
call
and
or
or
jnp
and
sub
pop
ret
mov
sbb
add
xlat
ret
jmp
mov
outs
popa
in
movs
mov
sbb
fs
fwait
pop
neg
fisub
cmps
mov
mov
fstp
cmps
add
(bad)
ja
or
popa
or
loop
push
pop
pop
imul
daa
in
xchg
pop
xor
jmp
mov
sub
scas
inc
pop
mov
inc
lea
mov
or
scas
es
or
ins
adc
out
xchg
lahf
sbb
ja
inc
out
popf
mov
sub
sti
cmp
loope
xchg
xor
es
jl
retf
mov
int3
push
aad
or
mov
jecxz
neg
push
addr16
mov
add
adc
mov
cmp
cmps
push
test
mov
(bad)
ror
gs
shr
call
(bad)
sub
push
cwde
out
fmul
retf
ja
dec
cmps
or
mov
fwait
adc
mov
dec
test
addr16
popf
push
addr16
arpl
or
test
icebp
sbb
pop
cld
cli
cmps
mov
push
mov
sti
enter
call
or
(bad)
fwait
js
xor
test
xchg
sub
idiv
mov
dec
mov
iret
(bad)
pop
xchg
lea
scas
dec
jb
sub
sbb
cmp
xor
adc
cmp
mov
sub
in
push
in
or
sbb
lock
add
dec
xor
adc
add
call
ss
cmp
dec
imul
fsub
cmp
cmps
push
pop
sbb
mov
scas
aad
shr
popf
cmps
cdq
adc
fcom
fcmove
jl
xor
xchg
movs
jle
sbb
xchg
fimul
rol
pop
cld
cmp
inc
dec
push
(bad)
hlt
add
push
adc
mov
hlt
cmps
scas
sub
or
das
add
aad
pop
std
in
cdq
mov
or
daa
je
mov
cmps
cmp
fucomi
cld
cmp
cld
(bad)
sbb
sbb
in
movs
xor
push
mov
pushf
std
push
call
mov
pop
in
(bad)
push
inc
fs
loope
dec
addr16
cmp
mov
fbstp
jbe
sub
inc
nop
inc
(bad)
xlat
movs
dec
dec
nop
pop
mov
cli
call
cld
inc
cli
jl
xchg
cwde
sub
add
mov
xor
int3
rol
gs
sub
(bad)
push
jae
cmps
outs
sbb
lea
mov
repz
mov
adc
jnp
arpl
pop
rcr
add
cmp
enter
cmp
add
ja
fsub
aas
mov
cmp
(bad)
imul
dec
test
inc
fsub
inc
stos
call
pop
cmp
call
fsubr
sbb
stc
or
mov
mov
sub
push
ds
xchg
add
sbb
data16
xor
inc
lock
and
jecxz
ss
jb
aam
xchg
scas
xchg
hlt
iret
mov
or
loope
mov
sti
push
clc
sbb
inc
inc
or
jmp
xor
cdq
jae
pop
pop
pusha
add
aam
push
and
inc
adc
mov
and
push
cmp
xchg
mov
cmp
xchg
push
int3
jbe
dec
(bad)
cmp
in
mov
cmp
scas
mov
cld
icebp
das
data16
dec
lds
jno
adc
add
fsubr
bound
push
push
xchg
or
pop
shr
jge
retf
(bad)
pusha
lahf
stc
fcom
outs
es
daa
add
fmul
popa
xor
mov
push
xchg
ja
pop
aas
(bad)
in
lock
mov
dec
scas
mov
mov
xor
fidiv
clc
lods
push
mov
pop
aas
pop
pop
adc
sub
jo
test
inc
cdq
and
sub
aaa
ss
mov
sar
pop
outs
and
inc
sbb
in
in
mov
aas
add
jecxz
movs
call
ss
test
(bad)
push
int3
and
fcomp
push
sub
dec
ror
xor
das
adc
pop
(bad)
sti
fld
push
mov
jno
into
data16
inc
cmp
sub
clc
inc
dec
ins
push
push
or
(bad)
adc
xor
into
jle
cmp
popa
xchg
outs
mov
mov
mov
dec
cmp
lahf
ss
(bad)
rcl
add
(bad)
popa
xor
ror
nop
mov
jbe
cmp
daa
mov
or
and
cdq
dec
(bad)
mov
out
leave
sub
inc
cmp
push
pusha
jnp
std
inc
ds
mov
daa
(bad)
fnstsw
jg
movntq
retf
inc
mov
mov
mov
xor
mov
pop
hlt
dec
pop
push
xor
jae
mov
cli
dec
mov
add
ds
sbb
(bad)
pop
test
das
movs
scas
lds
aaa
(bad)
cmp
fimul
dec
sti
jg
mov
and
xor
xor
and
push
pop
mov
setl
sti
mov
in
jnp
loopne
pop
xchg
popf
stos
imul
ror
pop
out
imul
imul
xor
push
ror
xor
push
xor
add
sahf
adc
push
cs
jns
test
imul
(bad)
cld
pop
xor
or
adc
cld
shr
mov
and
xchg
jmp
inc
fwait
lods
dec
cs
pop
test
addr16
test
cmp
jne
jge
mov
xchg
ss
repz
sbb
rcr
lea
or
and
push
mov
int
lds
dec
inc
push
mov
cmp
mov
inc
test
inc
push
mov
int
das
fs
adc
fidivr
out
or
xchg
sti
dec
add
(bad)
lock
mov
out
cmps
or
leave
mov
outs
movs
addr16
pushf
mov
jns
fsubr
xchg
cmp
mov
adc
jmp
mov
sbb
push
bts
and
popf
mov
out
cmp
popa
pop
jge
(bad)
int
add
cmps
mov
cmp
nop
cs
inc
xor
hlt
(bad)
or
call
dec
test
sbb
cli
in
and
mov
xchg
dec
add
pop
scas
dec
loop
mov
dec
sub
or
jmp
aas
xchg
pop
push
mov
repz
rol
bound
or
out
fistp
fimul
out
stos
cdq
loop
jmp
adc
mov
pop
jno
ret
pushf
movs
pop
nop
pop
sbb
not
fbstp
bound
inc
dec
push
and
iret
push
in
sahf
call
and
ja
sub
les
sbb
sbb
mov
mov
jnp
sub
mov
or
(bad)
mov
test
adc
in
xor
ret
fisttp
jno
mov
mov
scas
out
sbb
or
loopne
dec
lds
mov
push
jge
sbb
push
aad
iret
dec
imul
or
fmul
xchg
mov
cmp
ins
adc
xchg
sti
inc
and
and
repnz
cmp
jnp
ret
repnz
dec
int3
pop
sub
test
xchg
cmp
lock
addr16
mov
sub
or
(bad)
mov
les
jne
not
push
sub
push
fidiv
push
lods
fwait
jge
(bad)
jns
xor
repnz
mov
outs
jne
mov
retf
sbb
cmp
bound
repnz
dec
add
inc
push
dec
and
jmp
mov
mov
cmp
sub
je
rcr
repz
pop
adc
pop
(bad)
mov
data16
dec
sti
add
out
pushf
popa
jo
nop
push
pop
jns
in
in
xchg
ficomp
pushf
mov
inc
sti
mov
popf
jp
xchg
sahf
(bad)
dec
and
pop
fdivr
jns
test
lods
lds
jecxz
lods
jl
add
ins
jns
shl
jo
push
fadd
nop
xlat
gs
mov
cmp
out
aas
stc
loope
shl
cld
ret
xchg
push
daa
mov
loope
fcomp
sub
std
sti
clc
cmp
jno
sti
pop
dec
add
leave
xchg
dec
inc
stc
sbb
push
adc
call
stc
ror
ret
cld
xor
std
cmp
daa
out
call
into
es
dec
repnz
dec
xor
inc
stos
xchg
je
cmp
cmp
pop
and
push
sbb
fucomip
jp
add
repnz
js
sub
paddd
inc
imul
inc
jp
in
shr
and
in
test
pop
pusha
sbb
loope
xlat
ror
not
sub
ds
inc
fmul
dec
or
sbb
add
and
(bad)
adc
icebp
or
test
popf
jp
hlt
or
jb
enter
dec
cli
jne
sub
push
push
imul
stos
loope
test
out
(bad)
jmp
and
pop
nop
dec
fcomp
mov
bound
test
jb
add
and
lods
(bad)
stos
sbb
mov
int3
(bad)
push
lahf
inc
mov
and
call
rcl
and
or
dec
add
or
cmp
in
cs
mov
inc
imul
xchg
mov
sahf
hlt
scas
adc
xchg
and
inc
daa
(bad)
cmp
in
aam
cmps
jbe
cmp
push
pop
test
inc
fadd
cmps
push
push
mov
xor
mov
xor
cmp
rcl
out
pusha
shl
push
dec
jnp
and
xor
dec
pop
and
sub
lods
or
pop
js
sbb
pop
and
gs
jns
(bad)
jnp
fs
jle
inc
cdq
sar
sbb
mov
sbb
sti
sbb
push
mov
ret
add
mov
pop
sbb
int3
sbb
(bad)
jge
mov
sti
inc
mov
sti
jo
rcl
ins
das
cmp
data16
sbb
je
xor
mov
xor
fcom
mov
test
jmp
js
stc
or
xlat
pushf
test
pusha
mov
test
adc
mov
cmp
repnz
lods
cmps
(bad)
(bad)
mov
xor
push
cdq
mov
lods
imul
(bad)
rcr
aad
dec
mov
aad
loopne
fidivr
xor
push
mov
push
sbb
clc
fstp
cmp
xor
and
repnz
dec
(bad)
cmp
sbb
imul
aad
add
push
je
sbb
popf
dec
loope
outs
sahf
mov
clc
mov
neg
sub
add
jo
inc
stc
ss
cmp
cld
xor
(bad)
mov
sar
mov
pop
jecxz
scas
xor
pusha
shl
and
sub
xor
pushf
retf
hlt
stc
jbe
xchg
add
rol
aam
fild
push
clc
push
clc
rcl
push
xchg
dec
inc
scas
stc
jo
or
call
cmp
jg
dec
in
lods
add
popf
nop
dec
pop
mov
jecxz
adc
xchg
xchg
mov
sbb
push
cmp
push
setns
mov
cmps
jno
ins
sbb
repz
sub
stc
cli
sub
xor
cdq
jnp
das
inc
cmp
cmp
ret
(bad)
pop
out
into
add
inc
dec
retf
adc
and
or
pop
xor
ja
bound
xor
push
test
(bad)
sbb
je
call
and
jnp
clc
je
pop
scas
cmc
les
sbb
ret
gs
sbb
(bad)
xor
sbb
jne
and
ficomp
(bad)
loop
mov
jb
jmp
xchg
mov
int3
sub
call
inc
jge
mov
arpl
rcl
xor
push
adc
test
stc
stos
retf
or
inc
imul
ds
add
xchg
mov
xor
inc
mov
mov
in
cmp
lea
adc
loopne
sbb
add
and
cmc
addr16
je
dec
es
aad
xchg
jno
shl
out
sbb
sbb
push
adc
xchg
mov
ds
jne
adc
ins
xchg
xchg
inc
(bad)
js
lods
push
movaps
and
inc
and
in
add
mov
ins
cs
js
xchg
mov
sub
cld
adc
icebp
adc
pop
push
cmp
sbb
fistp
jl
stos
and
push
rcr
daa
call
out
push
adc
sbb
mov
push
retf
sub
shl
lea
(bad)
repz
jnp
rcr
cld
xor
mov
pop
pop
push
pop
fucomip
xor
sub
or
xchg
pop
adc
mov
call
pop
pop
aaa
xor
fs
jp
lds
pop
popa
jle
mov
mov
sar
jae
push
fcom
xchg
stos
dec
push
outs
cdq
(bad)
nop
push
cmc
retf
mov
push
or
pop
push
sub
xor
mov
mov
adc
mov
and
dec
xor
retf
mov
and
daa
xlat
add
pop
jge
ret
scas
cmc
iret
stc
adc
test
pusha
fidivr
pop
xchg
jae
add
push
(bad)
dec
(bad)
and
sub
outs
pop
cli
lock
lods
add
cdq
pop
aaa
mov
outs
push
std
out
jnp
adc
or
std
push
lea
aaa
sbb
fstp
daa
add
dec
add
sbb
lods
dec
not
test
outs
add
cdq
call
je
aam
icebp
inc
test
dec
adc
ss
adc
ins
mov
xor
dec
rcl
ins
pop
mov
lock
(bad)
shr
add
mov
jae
add
int
pop
js
mov
or
pop
inc
ror
(bad)
mov
call
lock
(bad)
arpl
mov
xor
inc
sub
sub
sub
in
xor
mov
outs
sbb
add
std
fild
cwde
mov
fmul
sub
lahf
mov
mov
mov
jb
outs
(bad)
mov
into
lds
jmp
xchg
xor
icebp
or
test
sbb
xchg
icebp
and
mov
ret
loop
lods
fcomi
lss
adc
ins
inc
mov
out
xor
imul
jp
fiadd
bound
push
jb
rcl
push
pop
adc
lds
inc
stos
or
push
xchg
xlat
lods
shl
lea
daa
sub
jmp
pop
push
das
add
mov
in
mov
push
cmp
mov
xchg
inc
mov
xor
push
pop
mov
jle
mov
sub
pop
cli
mov
cdq
ja
out
fs
inc
arpl
mov
pop
(bad)
out
adc
test
inc
pop
inc
pop
xlat
loope
jno
adc
fs
xchg
icebp
and
int
pop
div
arpl
jle
outs
dec
mov
ret
push
call
bound
je
cmps
jecxz
jl
in
jl
jne
stos
adc
mov
outs
cmp
adc
out
pop
cmps
add
pop
arpl
rcr
fldenv
push
push
retf
dec
into
mov
or
cld
mov
xchg
imul
js
test
push
rcl
out
retf
in
aad
mov
jne
(bad)
sbb
xor
repz
push
and
push
adc
mov
pushf
call
or
jle
jae
ficom
in
popa
adc
pop
xchg
adc
ds
mov
mov
and
iret
scas
jge
int
push
push
fldcw
sub
mov
movs
jle
mov
in
or
rol
push
(bad)
mov
cli
jae
test
rcl
adc
adc
inc
jle
xor
iret
cmps
sar
lds
in
xchg
add
jmp
mov
pop
add
xchg
adc
lahf
in
mov
in
outs
fs
fistp
lods
pop
add
fnstsw
pushf
dec
out
pop
dec
mov
clc
in
jg
xor
hlt
clc
enter
jmp
push
adc
ret
aad
xchg
add
lahf
add
pop
xchg
std
cmp
add
inc
push
cmp
leave
ss
or
bound
mov
clc
pop
add
adc
sub
push
addr16
clc
cmp
mov
das
retf
xchg
sbb
sbb
loopne
outs
cmp
cmc
aas
rcl
(bad)
aas
push
out
bound
and
out
leave
cmp
xor
cli
xor
nop
nop
sbb
adc
pop
inc
pop
add
imul
sbb
lods
(bad)
je
rcr
loope
adc
(bad)
cmp
(bad)
out
pop
(bad)
repnz
or
retf
inc
fidiv
sbb
push
sbb
dec
lods
xor
sahf
pop
js
xchg
ins
fdivr
xor
mov
mov
jno
(bad)
in
add
inc
jle
add
pop
jno
shl
repz
push
or
mov
fiadd
push
sahf
cld
popa
movs
das
mov
ins
fisub
ret
cmc
cmc
popf
dec
leave
ins
add
sbb
stos
mov
sub
scas
push
sub
addr16
fidiv
sbb
loope
rcr
ins
or
pop
cmp
push
jl
jecxz
xchg
ja
js
add
fidiv
mov
out
mov
(bad)
dec
mov
jb
cdq
mov
movs
mov
xchg
(bad)
lds
imul
jge
js
rcl
daa
jae
callw
lods
(bad)
mov
jmp
sar
pusha
mov
mov
inc
call
out
jecxz
(bad)
and
xor
mov
mov
out
sbb
pop
shl
and
adc
pop
mov
dec
sub
ins
fisub
xor
push
cld
pop
stc
sub
xchg
sub
sub
pop
mov
jmp
inc
jns
mov
das
pop
and
shl
jae
mov
push
dec
xchg
xchg
lods
push
ins
mov
sub
adc
arpl
(bad)
pop
(bad)
jne
pop
pushf
pop
mov
mov
dec
jbe
xchg
out
shl
(bad)
adc
arpl
jo
aaa
push
mov
mov
mov
mov
jno
aad
mov
mov
or
shl
add
xor
test
or
hlt
push
dec
mov
xor
sbb
nop
retf
inc
xchg
xchg
jg
add
jno
std
imul
xchg
push
mov
test
cmp
jbe
mov
es
lock
or
outs
cmp
lea
test
movs
into
push
inc
pop
mov
mov
mov
mov
mov
mov
das
xchg
pop
push
lods
(bad)
push
and
sbb
pop
push
jbe
ror
and
in
imul
dec
push
clc
adc
retf
or
fs
test
sti
ret
jl
jo
dec
dec
jl
loope
shl
push
mov
retf
pop
add
jp
gs
cmp
mov
pop
push
mov
xor
(bad)
push
xor
repz
les
pop
jg
mov
xchg
inc
fs
fwait
sbb
out
cmp
mov
mov
mov
pop
js
and
cmps
cld
pusha
outs
sub
and
jge
in
jmp
fldcw
pop
add
sub
mov
push
imul
xchg
xor
sub
push
jnp
and
inc
push
or
and
out
lahf
ret
movs
retf
test
cli
pop
mov
pop
jmp
(bad)
jmp
jecxz
mov
scas
in
fwait
scas
icebp
xor
(bad)
jbe
std
lods
mov
sub
dec
mov
dec
loopne
repz
lock
loope
adc
xchg
fsub
(bad)
retf
and
sub
push
in
inc
sub
or
addr16
nop
adc
mov
sub
xor
sub
addr16
jmp
mov
retf
fist
je
sbb
lods
inc
int
cmp
outs
xor
sbb
xlat
gs
imul
movs
xchg
in
sbb
push
cmp
sbb
mov
fimul
out
scas
retfw
sbb
repnz
mov
adc
pop
cmc
xor
jl
gs
xchg
mov
fwait
push
inc
dec
mov
pop
mov
cmp
xor
sbb
mov
out
dec
pusha
popf
mov
xor
fmul
fwait
cld
xor
shr
push
ins
ret
mov
mov
sub
jbe
pop
jno
and
jmp
jl
sub
adc
pop
xchg
loop
jge
mov
fistp
mov
dec
add
mov
mov
pop
dec
popa
mov
pop
outs
cmps
test
dec
pop
cmp
xchg
retf
imul
xchg
and
push
inc
push
arpl
in
jl
daa
repz
sbb
pop
cmp
aad
lods
bound
data16
cmp
ds
aas
and
and
fidiv
cmp
mov
pop
dec
mov
std
imul
(bad)
push
push
xor
scas
jne
cmps
pop
add
das
push
movs
add
adc
cdq
mov
jge
leave
adc
stos
movlps
arpl
cmp
sub
dec
dec
and
sar
test
mov
jns
add
cmc
cmp
dec
cs
push
call
mov
fistp
jbe
loope
sbb
sbb
(bad)
mov
inc
dec
leave
ins
call
sub
inc
out
mul
rep
cli
std
adc
or
push
mov
or
cmps
jg
mov
lea
addr16
es
mov
ins
jb
add
cmovnp
adc
pop
xchg
mov
mov
bound
out
jo
or
loopne
sbb
xchg
xor
std
inc
cdq
popf
fisubr
xchg
xchg
ficomp
call
test
fst
pop
cmp
or
in
arpl
dec
movs
iret
lahf
mov
icebp
cdq
inc
mov
popf
fistp
mov
arpl
jp
mov
push
scas
icebp
mov
cmp
outs
(bad)
retf
push
aaa
push
(bad)
neg
sahf
(bad)
adc
loopne
add
push
sar
mov
repz
loop
rcl
and
push
in
loop
(bad)
mov
xchg
or
in
sahf
stos
mov
stos
arpl
sub
(bad)
jbe
sbb
hlt
mov
call
enter
inc
fldenv
xchg
jne
or
and
xor
dec
(bad)
int3
adc
ficom
push
daa
lds
push
push
and
dec
js
mov
jnp
mov
fadd
dec
daa
in
xchg
pusha
je
xlat
scas
paddsb
push
adc
arpl
out
jno
pop
pop
scas
ret
mov
xchg
mov
retf
test
mov
and
hlt
mov
xchg
pop
loop
adc
mul
fs
dec
das
push
js
retf
or
xlat
push
mov
lock
sar
add
cmps
fisub
push
pop
push
jbe
retf
jmp
cmps
popa
mov
int
(bad)
and
push
jns
call
fs
imul
test
fdivr
xor
add
popf
das
sahf
ror
mul
out
(bad)
pop
pop
mov
out
enter
adc
repz
out
mov
fist
loopne
shl
jl
cld
jge
ret
adc
push
push
xchg
mov
add
jnp
aaa
ins
mov
icebp
in
popa
daa
int
lods
cld
popa
in
gs
mov
mov
pop
xor
pop
mov
xchg
xchg
xchg
sbb
inc
into
loop
(bad)
xchg
add
push
scas
(bad)
test
xchg
mov
cdq
cmp
dec
add
ins
adc
mov
add
enter
and
or
clc
mov
mov
in
push
inc
aad
mov
in
cdq
(bad)
sbb
lods
push
rcl
sub
stos
mov
pop
out
xor
int
and
adc
fcom
push
push
cmps
sub
aas
test
retf
dec
jg
mov
push
mov
arpl
cld
and
test
adc
pop
dec
mov
arpl
aaa
and
std
popw
mov
mov
xchg
pop
jl
cli
out
or
adc
add
pop
or
das
inc
ficomp
loope
icebp
mov
imul
pushf
cmp
xor
out
ror
jb
imul
pop
xchg
mov
sub
int3
dec
shr
or
(bad)
pop
or
(bad)
retf
sub
pop
dec
push
leave
outs
imul
push
mov
push
push
sbb
or
fs
(bad)
mov
and
imul
div
shl
pusha
cmc
adc
jnp
cmps
loopne
sub
or
push
xchg
call
aaa
rcl
pushf
cmp
out
fsubr
sub
push
jg
add
lock
adc
cmps
adc
js
je
dec
push
push
into
xor
mov
pop
mov
pop
push
sub
or
js
xlat
movs
xchg
into
popf
push
xor
mov
int3
xchg
add
push
daa
xchg
imul
cwde
div
out
fld
sahf
mov
cmps
xchg
cmps
adc
add
test
push
pop
jecxz
mov
cmp
adc
jne
in
adc
xchg
imul
lds
das
out
sbb
xchg
rcr
arpl
mov
pusha
mov
clc
ja
or
push
jne
xchg
mov
ficomp
ret
jmp
pop
test
xchg
and
sub
ds
add
fdivr
lea
stc
mov
dec
in
iret
or
ret
lods
pop
imul
sbb
lods
out
js
pop
das
adc
push
mov
xchg
mov
mov
jo
inc
fisttp
ss
lds
mov
inc
mov
mov
xchg
pop
nop
sub
sbb
jo
sbb
mov
pop
ins
mov
sub
jg
ds
inc
xchg
scas
es
xchg
pop
jp
jl
add
out
out
add
pop
or
sahf
arpl
sub
lahf
mov
les
pop
push
xrelease
mov
sti
test
mov
inc
test
(bad)
sbb
(bad)
mov
shr
int3
imul
xchg
push
pop
push
es
lahf
mov
lea
inc
sbb
imul
mul
mov
stos
pop
sbb
test
adc
push
fnstcw
cmp
jg
fwait
jnp
(bad)
rcr
mov
leave
jnp
int3
mov
hlt
sahf
pop
imul
xchg
and
iret
push
pop
xor
std
or
cli
ins
test
addr16
push
clc
sub
mov
(bad)
push
add
mov
fwait
ja
adc
jg
jne
out
cmps
fdivr
or
cmps
and
or
adc
jp
out
mov
fcmovnb
jmp
jp
ins
and
cmc
fwait
xchg
sbb
mov
setb
imul
or
lds
mov
push
adc
shr
xor
(bad)
aas
xchg
dec
cmp
xor
cs
iret
repnz
jo
aad
rcl
xor
pop
inc
xor
fcmovnbe
stos
(bad)
pminsw
aam
shr
shr
sbb
mov
xor
dec
xor
push
dec
fadd
jge
xchg
lock
mov
and
lock
jmp
adc
arpl
ins
mov
jl
lahf
inc
jl
inc
xlat
(bad)
cmps
inc
je
push
add
bound
sahf
repz
jne
pop
xchg
loopne
inc
jbe
dec
cmp
addr16
bound
or
xchg
or
cli
in
or
xor
std
mov
mov
jmp
clc
or
mov
scas
cmp
aam
xchg
xchg
and
pop
xor
push
hlt
daa
pop
ss
mov
push
pop
test
jg
push
mov
fdivp
jg
jecxz
fdiv
arpl
retf
push
mov
test
mov
adc
jmp
call
pop
outs
push
or
or
pusha
lea
push
and
test
mov
push
cmc
jge
scas
out
push
cli
shr
js
mov
fild
ss
outs
das
(bad)
or
f2xm1
stos
mov
inc
cmp
mov
test
xchg
push
jmp
imul
lahf
push
call
je
je
ret
mov
add
je
add
outs
pop
jo
(bad)
pop
jno
imul
xlat
xchg
xchg
jl
inc
xchg
cmp
in
jbe
pop
sahf
mov
cld
add
cli
(bad)
es
sti
xor
inc
clc
aas
jmp
(bad)
cmc
(bad)
imul
push
into
mov
pop
push
stos
mov
xchg
stos
adc
(bad)
cmp
call
mov
or
mov
mov
setb
inc
jae
lea
inc
cmps
adc
imul
inc
xchg
stc
xchg
je
xor
push
jge
iret
ret
imul
data16
dec
scas
push
mov
ds
scas
es
int3
add
es
(bad)
popa
add
aas
pop
jp
imul
iret
repnz
xchg
fisttp
jb
loope
outs
lods
test
movs
cmc
shl
adc
adc
rep
inc
push
pop
int
and
gs
push
or
xor
push
add
test
shl
sbb
xchg
mov
rol
push
inc
mov
fcomp
mov
inc
ret
sbb
aas
fwait
sub
xlat
nop
jge
ja
cmp
out
fstp
xlat
dec
xor
sub
push
stos
and
nop
adc
inc
das
outs
(bad)
xchg
xor
add
jle
and
xor
out
repz
sahf
outs
out
add
and
mov
adc
inc
or
loope
cli
jno
xor
std
mov
sub
jno
and
int3
xchg
sub
jb
test
test
xchg
js
lock
mov
aam
mov
nop
inc
pushf
push
jbe
mov
xchg
(bad)
fcmovu
out
cmp
arpl
shl
shl
enter
cmc
leave
mov
dec
or
sbb
fidiv
(bad)
sti
inc
sub
shl
inc
push
inc
pop
nop
ss
call
es
and
push
mov
sbb
pop
sub
jns
xor
mov
sahf
fimul
retf
cli
lods
fisttp
(bad)
adc
out
and
xor
out
mov
fs
call
cmp
inc
aas
dec
and
xchg
lea
xchg
mov
outs
std
dec
jge
loopne
das
push
movs
fdiv
ss
mov
mov
push
mov
ret
or
add
and
mov
and
clc
in
sar
jg
sub
leave
loop
cmp
(bad)
pushf
retf
fs
fstp
mov
fwait
retf
pop
movs
xchg
mov
dec
(bad)
mov
out
push
stc
ja
retf
ret
or
test
cmc
(bad)
pop
aaa
call
jmp
out
and
or
push
shl
xchg
les
push
inc
pop
xchg
jl
retf
add
addr16
jmp
push
and
mov
sub
jmp
jl
mov
or
jae
les
ins
mov
loope
lods
aad
sbb
ss
lods
cdq
test
sbb
cmc
xchg
dec
ins
jno
mov
adc
mov
adc
data16
(bad)
cmp
js
js
adc
xor
rcr
rcr
test
sbb
inc
add
repz
pop
cmp
push
sbb
popf
out
push
add
fimul
fnstsw
inc
mov
jecxz
sub
and
sbb
jbe
xchg
retf
dec
mov
cmps
fisttp
bound
xchg
xchg
xchg
stos
mov
aas
and
mov
bound
jmp
test
inc
cmp
sbb
xchg
rcr
and
jle
mov
mov
add
stos
bound
mov
mov
jecxz
jp
mov
in
add
pop
aas
div
enter
mov
add
out
fs
sbb
mov
pop
push
mov
repz
out
pop
stc
xchg
sub
adc
sub
loope
clc
es
jg
popa
(bad)
cmp
popf
(bad)
fild
mov
movs
imul
jmp
out
aas
or
dec
sbb
mov
sbb
or
ins
xor
inc
xor
stos
fstp
mov
mov
sbb
inc
push
sub
sar
hlt
pop
ins
outs
movs
sub
in
mov
inc
cmps
fwait
pop
jp
sub
inc
xlat
je
jne
and
or
jae
pop
xor
push
push
sbb
jo
xor
retf
dec
retf
es
mov
iret
popf
or
cmps
sbb
test
adc
mov
dec
dec
inc
int3
repnz
xor
daa
dec
leave
fsub
aas
sub
jae
int3
mov
jae
and
inc
adc
mov
xchg
push
or
js
inc
das
stos
dec
pushf
movs
cmp
sete
(bad)
cwde
inc
das
fistp
and
repnz
(bad)
lods
(bad)
push
dec
je
in
call
adc
movs
not
push
mov
adc
addr16
in
mov
adc
xor
retf
push
shl
fist
shr
xchg
arpl
arpl
iret
je
cmp
rcl
aas
push
xor
mov
call
test
xchg
mov
mov
inc
mov
mov
test
fsubrp
pop
fstp
into
mov
(bad)
cmps
popa
mov
mov
outs
scas
xor
shl
call
test
push
cmps
push
sbb
aam
imul
dec
loope
inc
push
(bad)
adc
outs
(bad)
call
adc
and
sub
sub
aaa
aam
jge
out
jbe
ss
sub
mov
loope
jl
cld
jo
je
sbb
jne
pop
and
cdq
mov
pop
call
xchg
(bad)
cmp
dec
mov
into
repz
call
jns
mov
lea
adc
or
push
lahf
inc
gs
pop
call
aad
jbe
cmp
ss
stos
loop
dec
inc
pushf
fild
and
xchg
inc
fldenv
cwde
cmp
fbstp
push
jp
sahf
or
xchg
mov
cdq
push
pusha
push
xor
or
ret
push
and
mov
push
(bad)
mov
mov
loopne
push
xor
test
fwait
inc
lea
(bad)
cmc
es
mov
inc
fxch
repnz
and
addr16
das
outs
mov
add
rcr
je
stos
(bad)
dec
push
mov
push
jb
mov
scas
pop
cmp
(bad)
hlt
pop
mov
retf
aas
pop
xchg
jo
pop
cmps
inc
jmp
shl
js
push
fwait
stc
xchg
inc
jne
inc
test
fist
scas
mov
fild
test
shl
dec
dec
jmp
dec
arpl
ins
and
mov
and
sahf
outs
js
jnp
lds
stos
push
dec
push
mov
sbb
adc
inc
lds
fld
mov
pop
mov
or
std
xchg
out
in
clc
loopne
mov
ins
js
jmp
dec
sub
fsub
jp
outs
or
es
(bad)
push
ja
out
in
or
and
pop
push
retf
mov
das
in
mov
xchg
std
xchg
call
mov
cmp
push
aam
xlat
adc
mov
fwait
mov
call
ffree
stc
gs
lahf
ret
push
jl
adc
sbb
scas
in
adc
adc
(bad)
adc
sbb
aam
push
aas
inc
add
push
cmp
movs
or
outs
inc
fbld
mov
pop
and
add
repnz
xchg
or
xchg
int
mov
push
in
clc
cmps
fcom
dec
dec
ja
imul
cmp
retf
xchg
lock
xchg
dec
loope
int
xor
mov
jns
mov
or
dec
dec
fdiv
add
sub
loopne
(bad)
xor
imul
mov
adc
xor
retf
mov
test
test
fnstsw
push
daa
inc
in
mov
ins
imul
fs
ins
sub
pop
sar
mov
imul
cmp
adc
mov
pop
jmp
scas
xchg
daa
out
mov
and
pop
in
add
inc
push
(bad)
or
imul
popf
enter
fcom
push
out
push
loope
push
and
sub
stc
dec
xor
push
jge
in
dec
dec
mov
sbb
sub
add
xor
push
pop
mov
loope
mov
aam
push
and
dec
repnz
sub
and
out
shl
add
sub
xlat
out
clc
call
ret
das
sbb
push
xchg
and
cmp
movs
movs
aaa
sar
xor
cmc
mov
outs
call
or
(bad)
in
in
sub
cs
movs
or
push
retf
or
cmp
imul
mov
mov
ror
adc
ret
repnz
cmp
rol
sbb
js
mov
pop
push
mov
retf
mov
mov
out
inc
test
jle
sub
adc
push
pop
push
lea
cmp
stc
mov
cmp
cmc
icebp
repnz
mov
call
sub
mov
nop
xor
add
pop
cld
xchg
jge
xor
dec
cmp
aad
dec
pushf
mov
push
jo
test
mov
sub
fist
fs
(bad)
js
xchg
jg
dec
mov
lods
mov
cli
in
mov
inc
(bad)
jne
cmp
movs
ins
out
pop
scas
mov
aad
push
add
xor
aad
mul
push
xor
xor
in
out
cld
add
push
mov
jae
push
aas
nop
pop
fimul
into
xchg
xchg
je
jnp
adc
or
aaa
enter
rol
pop
or
popa
jge
jecxz
ins
(bad)
fwait
pusha
sti
jle
sub
dec
or
mov
pop
out
outs
pop
push
jle
cmp
mov
ins
and
test
add
mov
out
cmp
jae
inc
mov
(bad)
out
shr
jne
jg
adc
mov
dec
sbb
or
fwait
and
lea
test
(bad)
mov
pop
out
test
jbe
mov
js
inc
movs
sub
and
out
pop
fwait
mov
(bad)
jnp
sbb
jno
or
out
push
jmp
and
int3
sti
mov
imul
frstor
mov
clc
pop
rcl
repnz
pushf
jno
repz
mov
push
fdiv
xor
(bad)
test
or
or
jae
cmp
adc
mov
retf
dec
push
pop
test
and
pop
mov
lods
fld
iret
inc
das
sub
jmp
cmps
xchg
ds
cmp
cld
and
or
pop
xchg
sahf
cmp
sahf
imul
xchg
fdivr
outs
loopne
mov
lods
call
xchg
sbb
push
sahf
jbe
aad
mov
jg
xchg
imul
rol
inc
ja
aaa
inc
sub
or
cld
lods
or
pop
add
mov
out
fbstp
pop
adc
nop
pop
hlt
dec
(bad)
out
adc
pop
repz
shl
inc
ins
sub
shr
push
jb
cmp
hlt
jb
mov
and
push
add
cld
lods
or
rcl
mov
or
adc
push
dec
(bad)
dec
push
xor
inc
(bad)
push
inc
inc
add
sti
in
cld
inc
out
lods
(bad)
mov
jmp
add
jo
add
mov
xor
pop
xor
imul
arpl
fcomp
cdq
ficom
cmp
xor
retf
sub
sti
mov
push
xor
mov
jno
mov
add
outs
pop
sti
ins
test
pop
dec
(bad)
or
(bad)
xchg
(bad)
xchg
aad
add
xchg
in
imul
mov
mov
dec
imul
push
cmp
and
cmp
(bad)
(bad)
test
mov
jge
jmp
jmp
pop
mov
pop
dec
inc
push
enter
ror
mov
add
dec
mov
mov
push
loop
mov
enter
dec
mov
fimul
push
and
dec
xor
call
inc
daa
or
mov
(bad)
mov
xchg
xor
pop
js
dec
dec
jno
fucomi
and
mov
pushf
div
pop
clc
addr16
xchg
ret
mov
enter
pop
movs
call
outs
imul
cdq
lods
pop
lds
cmp
std
mov
xchg
daa
(bad)
sub
rol
push
stos
nop
jmp
(bad)
bound
inc
sbb
and
dec
jmp
es
ficom
jns
lds
ror
inc
outs
fnstcw
sbb
cmp
or
fistp
sub
aad
xchg
imul
lods
sbb
clc
(bad)
and
xchg
ss
lods
sbb
dec
loop
sub
cmp
retf
or
cmps
push
imul
push
push
jno
ret
clc
add
addr16
jbe
test
les
sub
pop
loop
outs
stos
cli
mov
scas
pop
and
arpl
cli
pop
adc
inc
add
jno
mov
mov
inc
add
sub
adc
sub
out
push
call
rcr
sahf
xlat
add
jmp
xchg
imul
ja
aaa
iret
cmp
inc
es
dec
call
sub
aam
lods
test
ins
jg
mov
cwde
std
out
in
pop
adc
ss
pop
call
mov
mov
pusha
gs
repz
and
shl
call
stos
retf
xchg
inc
gs
stos
sti
movs
mov
mov
inc
adc
cli
push
(bad)
repz
mov
es
push
mov
call
inc
mov
sub
cld
into
imul
lods
ins
sbb
xchg
repz
or
dec
cli
lahf
mov
adc
cmp
aam
adc
cmp
icebp
sbb
mov
or
mov
imul
(bad)
aas
sti
in
pop
dec
fisub
dec
fbld
inc
jb
sbb
loop
retf
cmp
out
add
mov
xlat
pop
push
inc
cmp
data16
mov
fs
inc
dec
(bad)
push
mov
js
or
inc
aaa
(bad)
pop
push
fcmovnbe
fwait
sub
jbe
push
enter
fs
dec
xor
xor
movs
push
mov
std
fsub
mov
dec
pop
xor
shl
call
clc
dec
test
mov
lods
or
jae
sub
idiv
inc
pop
sbb
mov
pusha
cdq
jecxz
pop
adc
jle
add
leave
int3
adc
ins
push
movsx
or
sub
ds
mov
ins
cmp
sbb
xchg
retf
dec
jecxz
pop
jno
jae
mov
fadd
cmp
icebp
and
sub
mov
push
sbb
imul
addr16
mov
fiadd
fmul
sbb
pop
push
fwait
mov
cld
pop
xor
test
push
adc
or
jbe
pop
push
xchg
mov
push
in
xchg
lods
cmp
jecxz
add
(bad)
call
test
lds
sahf
inc
ror
ret
mov
cmp
jns
xchg
pushf
movs
xor
pop
adc
jge
jbe
loop
rcl
or
dec
jbe
dec
mov
ds
test
faddp
jecxz
mov
in
xchg
ret
lods
jmp
(bad)
in
mov
mov
cmp
inc
ret
mov
arpl
popa
pusha
xchg
jmp
mov
push
mov
push
xlat
ret
sbb
nop
mov
cmps
(bad)
xor
daa
out
mov
sbb
inc
sub
or
mov
and
xor
scas
fdivr
rol
outs
inc
xor
mov
mov
test
mov
inc
mov
xchg
sub
xchg
and
(bad)
pop
mov
push
jmp
xchg
push
loope
adc
ror
(bad)
push
mov
xchg
inc
mov
into
sahf
(bad)
sub
sub
mov
lock
xor
neg
scas
jbe
test
add
pop
les
int3
fdivr
jle
in
retf
and
sar
outs
nop
fnsave
repnz
fmul
dec
push
mov
mov
adc
aaa
mov
out
sub
adc
and
into
inc
sbb
rcl
adc
mov
or
lea
push
xor
sub
push
adc
jecxz
mov
push
movlps
jb
cmc
pop
fld
jns
jns
fstp
fsub
dec
push
or
mul
clc
int3
dec
ret
pop
bound
adc
xor
sbb
fsubr
jmp
ins
out
mov
mov
pop
xor
jmpw
and
pop
push
or
jbe
push
in
sbb
frstor
cmp
mov
inc
ret
stos
mov
jl
call
xchg
aad
ss
pop
dec
fidivr
jno
mov
push
xlat
add
push
jne
out
(bad)
jae
out
ficomp
rcr
jno
clc
leave
xchg
jp
jle
or
xchg
sbb
mov
aam
cmp
shl
or
pusha
cwde
push
xchg
es
and
mov
jb
adc
fwait
inc
daa
test
pop
push
call
ins
jno
sar
fldcw
dec
popa
out
mov
sbb
cmp
test
jne
leave
js
and
pop
jno
dec
test
setns
xor
push
and
xchg
dec
xchg
mov
push
mov
dec
xor
dec
jp
idiv
sti
push
adc
pop
xlat
add
test
xchg
push
mov
data16
xchg
in
jp
(bad)
frndint
dec
xchg
lods
pop
cli
mov
jo
movs
repnz
mov
out
xchg
mov
push
adc
add
jbe
jb
push
retf
push
push
pop
out
mov
pop
mov
icebp
imul
cmp
xchg
imul
add
cmp
pop
jp
jnp
jp
add
rol
cmp
icebp
in
mov
sub
inc
cmp
data16
adc
pop
push
rcr
add
fcomp
out
pop
jo
mov
push
out
and
adc
movs
addr16
fisttp
cli
sysenter
mov
xchg
popa
into
int
mov
xlat
faddp
nop
test
pop
fndisi(8087
mov
push
add
jl
mov
cmc
jnp
in
pusha
les
ins
adc
dec
repz
outs
stc
mov
sub
push
inc
pop
cli
xchg
ret
dec
inc
pusha
push
push
xchg
ss
mov
aaa
stc
cmp
adc
and
jno
test
inc
or
add
jo
jg
ror
cmps
sbb
out
xlat
loopne
ins
or
sub
scas
adc
(bad)
stos
int3
popa
jge
xor
pop
inc
les
cmps
test
(bad)
push
imul
jp
push
es
fs
das
test
jb
and
mov
icebp
or
gs
jae
add
mov
inc
xor
adc
test
cmp
int
repz
jae
stos
lahf
das
bound
or
mov
imul
(bad)
cwde
and
arpl
pop
adc
push
inc
sbb
jmp
stos
outs
sub
lods
aaa
jle
push
mov
idiv
call
xchg
movs
cwde
ret
fsub
ret
mov
fistp
sub
push
(bad)
xor
sbb
jo
cmps
cld
pop
adc
rcl
dec
and
retf
popa
test
add
adc
jecxz
retf
push
mov
imul
add
jbe
and
xor
mov
data16
dec
clc
and
fcmovnb
fs
fadd
mov
inc
inc
sbb
sar
gs
dec
dec
and
int3
mov
aaa
imul
jge
cmp
int3
inc
stc
xchg
je
(bad)
out
mul
mov
stc
popf
enter
mov
out
sar
ins
fs
sbb
aas
jmp
lea
mov
loop
ja
or
rcr
mov
pop
mov
ja
push
sahf
mov
int3
and
dec
xchg
ins
xchg
mov
jmp
inc
stc
cmc
fcmovne
or
fsubr
iret
xchg
mov
push
cmp
inc
outs
iret
nop
popa
sahf
ds
mov
sub
dec
push
test
jb
jle
cmp
pusha
adc
inc
retf
lock
out
jbe
psubq
jg
xor
ror
pop
add
(bad)
sbb
cmps
pop
cld
test
mov
and
push
cmp
cmp
cmps
pushf
pop
xor
xchg
mov
mov
cli
stos
ds
imul
pandn
sti
(bad)
scas
jae
mov
inc
(bad)
jmp
ja
(bad)
sub
(bad)
pop
add
pusha
jecxz
and
or
lea
or
dec
dec
ret
call
(bad)
out
xchg
or
pop
out
xor
mov
rcl
mov
leave
clc
xor
dec
iret
sub
jns
arpl
mov
fs
es
out
enter
jb
adc
pop
ds
inc
or
xchg
in
push
das
xchg
pop
sbb
cmp
inc
outs
xor
push
adc
es
inc
jmp
call
xor
call
es
xlat
aas
or
push
pop
mov
xchg
xchg
imul
js
mov
push
mov
add
xchg
mov
popf
or
lds
and
mov
(bad)
xchg
inc
and
jp
movs
(bad)
mov
ffree
push
and
jne
adc
add
ds
adc
xchg
sub
sbb
enter
mov
mov
sub
pop
sub
jnp
ret
enter
and
fwait
maxps
lock
mov
lds
adc
push
gs
cmp
jecxz
push
pop
xchg
inc
mov
int
jl
cmp
retf
(bad)
xchg
aas
bound
pop
dec
mov
int3
xchg
mov
dec
daa
nop
mov
lahf
and
addr16
jp
jl
dec
xlat
ret
scas
std
mov
and
jle
lods
xlat
lods
icebp
jnp
mov
or
sbb
call
cmps
movs
ror
xchg
aaa
adc
mov
sub
push
loopne
jp
inc
jge
call
sub
(bad)
iret
pop
xor
call
mov
dec
xor
not
out
ss
movs
popf
les
mov
xor
popf
mov
jne
xor
dec
pop
or
push
cmps
dec
aad
cmp
repz
push
(bad)
(bad)
mov
push
dec
rol
hlt
addr16
outs
xor
dec
and
sar
cmp
aad
xor
pop
xchg
jae
sbb
in
bound
outs
out
das
mov
jbe
clc
pop
and
lds
sar
das
movs
arpl
ret
es
pusha
fsub
jge
xchg
lods
pop
inc
xchg
mov
mov
mov
sti
mov
adc
sub
outs
jp
dec
push
mov
push
(bad)
out
imul
xchg
inc
out
enter
sar
fbld
lahf
push
mov
jg
sub
mov
add
sub
test
jne
daa
mov
aas
lods
adc
jmp
cli
cdq
imul
sbb
push
mov
mov
cmps
xchg
ret
mov
mov
mov
movs
pop
inc
pop
xchg
xchg
fst
movs
dec
shr
into
xchg
clc
repz
or
push
add
mov
call
pop
mov
in
(bad)
xchg
mov
(bad)
ror
inc
psubw
jl
lods
cdq
ret
ret
in
push
lods
std
or
or
cs
and
pusha
mov
ret
inc
dec
ror
ins
push
jbe
or
sbb
in
clc
pushf
(bad)
loope
aam
add
mov
adc
ins
cld
xor
(bad)
adc
xor
test
add
mov
inc
das
xchg
cmp
xor
clc
stos
shl
sub
jl
(bad)
cld
push
loope
pop
adc
mov
ficomp
push
ins
xor
or
mov
xor
xchg
stos
push
adc
ret
dec
push
sub
imul
into
xlat
call
arpl
jle
adc
jno
pop
in
pop
dec
gs
push
loopne
sahf
xchg
dec
pop
xor
jno
pop
addr16
(bad)
jmp
and
mov
push
jmp
mov
ins
dec
xchg
inc
jns
jno
jg
lahf
inc
fnstsw
out
mov
or
jnp
adc
(bad)
jmp
pop
fistp
jl
das
add
retf
aam
test
int
test
mov
in
nop
rol
mov
jg
js
push
jne
jmp
outs
or
ds
in
scas
cld
xchg
sub
(bad)
in
xor
dec
mov
jae
adc
add
or
add
hlt
cs
loope
and
mov
iret
rcl
retf
add
out
xchg
xchg
xor
sbb
(bad)
mov
cwde
or
pop
xchg
shr
pop
in
dec
mov
mov
sub
scas
ss
sahf
cmp
and
sub
cmp
mov
cmc
test
out
mov
shr
adc
jle
enter
and
imul
ret
push
sti
lods
retf
jno
push
(bad)
in
push
pop
test
iret
mov
repnz
sub
cwde
imul
inc
fist
push
dec
jecxz
push
jbe
rcl
(bad)
mov
test
jge
add
inc
pop
popf
push
lock
jg
mov
mov
movs
pop
mov
inc
lahf
xlat
ds
cmp
push
das
fnstenv
pushf
jno
add
jp
ret
lds
xchg
push
dec
pop
addr16
adc
in
sub
jmp
mov
sbb
push
jl
les
outs
shl
loopne
push
and
xor
(bad)
test
test
or
fisttp
int
inc
xor
outs
sub
retf
call
in
push
icebp
scas
aas
push
pop
jmp
push
xchg
adc
jp
loopne
lock
push
das
pop
call
or
js
cmps
jle
int3
push
loopne
jl
pop
aaa
push
ds
or
xchg
bound
cmc
in
rcl
jp
adc
ja
ret
xor
div
pop
jae
inc
or
or
and
pop
popf
popf
sahf
jbe
dec
xchg
sub
(bad)
adc
pop
fcomip
adc
or
jno
xlat
lds
push
mov
cmp
dec
in
rol
xchg
push
and
push
sahf
pop
mov
mov
jne
mov
cmps
int3
mov
cdq
lea
cmp
shl
(bad)
call
inc
repz
rcl
pop
mov
push
in
add
adc
ret
aam
jle
push
cdq
arpl
push
pusha
adc
xchg
xchg
daa
pop
mov
dec
je
(bad)
retf
push
in
jmp
(bad)
cld
xchg
fsubr
dec
(bad)
retf
cmp
jno
mov
pop
or
or
scas
xchg
adc
cli
pop
ds
sub
inc
fild
addr16
das
ins
fistp
ficomp
dec
or
and
mov
mov
mov
into
xchg
add
call
fsub
sub
push
arpl
add
cmp
inc
icebp
gs
imul
jb
lods
sub
ret
js
mov
lock
mov
(bad)
push
mov
push
mov
ja
mov
push
dec
and
popf
dec
loope
pop
sbb
mov
out
int
sub
pop
adc
push
jmp
shl
fidivr
(bad)
mov
sub
les
jb
cli
xchg
sbb
sub
retf
mov
hlt
sti
sub
test
mov
out
or
sbb
sbb
mov
sub
scas
dec
pop
xlat
sub
dec
xchg
xchg
cmp
popa
sub
mov
mov
test
scas
jmp
xchg
cwde
in
rol
add
mov
xor
(bad)
std
aad
enter
into
add
call
pop
(bad)
outs
mov
imul
sub
xchg
test
cmp
mov
lods
add
mov
jl
jl
popa
hlt
cs
(bad)
es
fcmovnbe
(bad)
mov
lds
xor
aas
test
es
sbb
pop
push
int3
clc
loop
fdivrp
mov
inc
lods
and
stos
pushf
js
ret
xchg
pop
out
or
jg
and
cmp
push
imul
inc
jge
popf
xor
loopne
pop
loope
sub
pop
stc
jnp
lods
and
popf
xor
pop
fcomp
push
pop
inc
pop
call
mov
cmp
shl
sub
jmp
fwait
cld
cmp
inc
mov
xor
sbb
int3
repz
jns
xchg
ficomp
sub
in
mov
xchg
push
rcl
xchg
test
xor
fsub
cmc
pusha
es
call
into
mov
dec
ss
cmp
mov
adc
imul
retf
lock
int3
inc
aas
sbb
es
xchg
xchg
sbb
pop
sbb
xchg
mov
fdivr
loop
loop
xor
jl
aas
loop
or
popa
or
mov
mov
clc
retf
adc
call
mov
xchg
fdivr
mov
or
xor
push
pop
(bad)
xor
cmp
call
cld
je
add
or
mov
inc
jl
xchg
cdq
or
or
xchg
mov
pop
in
jae
arpl
inc
add
jno
fwait
pop
jnp
out
sbb
pop
xrelease
xchg
lods
bound
sub
jnp
xor
stos
rcl
daa
push
inc
test
inc
mov
int
xchg
dec
ins
xchg
bound
cmp
add
call
mov
shr
out
jne
ds
fiadd
cli
dec
jae
inc
fidiv
rcr
sub
mov
dec
xchg
jmp
sbb
pop
xchg
mov
push
mov
je
mov
ins
inc
and
dec
mov
leave
int3
hlt
(bad)
loope
mov
(bad)
fdivr
dec
and
pop
aaa
ja
pushf
jmp
int3
dec
push
sub
movs
inc
loop
dec
leave
inc
and
test
popf
in
add
mov
adc
outs
cmp
push
mov
into
jp
popa
(bad)
jmp
and
push
test
lds
dec
pop
ja
rol
paddsw
jnp
inc
xchg
push
adc
mov
loop
mov
hlt
sub
in
ds
cmps
adc
fst
inc
dec
pop
bound
outs
push
and
stos
push
add
lods
std
lods
fld
jb
inc
shl
sub
ss
jmp
cmp
mov
pop
pop
dec
popf
(bad)
repnz
xor
xchg
shl
mov
or
cdq
lds
clc
out
mov
and
and
hlt
out
test
fst
loope
pop
inc
mov
dec
mov
test
adc
xor
les
mov
jns
stos
mov
pop
xlat
in
push
mov
pop
jo
xchg
out
inc
pop
mov
xor
inc
rol
push
neg
xlat
je
std
add
imul
std
or
popa
sbb
and
sbb
inc
dec
xor
cwde
dec
imul
clc
or
cli
addr16
mov
mov
or
jb
xchg
and
and
xor
ds
stos
xchg
xchg
cmp
daa
cmps
mov
xchg
loop
rcl
out
fisttp
or
and
dec
cmc
mov
inc
sar
xlat
scas
ret
dec
jecxz
js
pushf
rol
ret
cwde
out
mov
sub
cs
inc
inc
jns
bound
mov
dec
daa
lahf
jo
adc
inc
(bad)
pop
mov
mov
outs
test
outs
mov
dec
imul
shr
jne
xchg
cmp
bnd
icebp
mov
jnp
je
(bad)
jns
fild
mov
sbb
in
popa
stos
or
rcl
js
(bad)
mov
pop
scas
stos
and
xchg
cdq
ror
jo
aaa
imul
mov
iret
and
cmp
mov
xor
mov
dec
push
out
fmul
jne
dec
retf
push
add
pop
jge
jmp
or
cmp
pop
push
hlt
cmp
dec
iret
jmp
sub
adc
(bad)
test
pop
scas
outs
mov
dec
or
xchg
xor
mov
mov
daa
sbb
mov
push
retf
adc
inc
add
add
nop
jo
cmp
(bad)
dec
xchg
mov
fnstenv
jle
(bad)
into
outs
(bad)
fdivrp
clc
xchg
ret
aaa
into
jbe
pop
mov
addr16
sbb
push
sahf
inc
loop
cmps
iret
mov
pop
cmp
scas
mov
inc
dec
retf
shl
inc
xchg
popa
cmp
mov
cmp
sub
arpl
sub
jge
jmp
xor
dec
movs
mov
lds
xor
mov
push
mov
mov
rcl
dec
xchg
clc
push
mul
(bad)
jecxz
mov
test
in
jbe
test
pop
cmp
mov
inc
jae
inc
retf
fist
(bad)
jmp
mov
loope
mov
add
iret
cmp
call
mov
popa
inc
mov
lds
mov
(bad)
adc
sbb
inc
cld
(bad)
dec
popf
mov
inc
push
bound
inc
lods
sub
jl
call
ins
dec
jge
dec
int
push
test
fst
jmp
lods
sub
ins
sub
dec
lods
(bad)
mov
pop
mov
fist
adc
inc
rcl
mov
mov
mov
das
pop
(bad)
popa
je
lods
clc
gs
gs
cs
dec
sbb
pushf
or
mov
lds
mov
mov
jns
sbb
xchg
xor
xor
aad
aad
mov
lods
adc
shl
add
push
sub
call
add
xor
adc
sbb
or
int
dec
fst
mov
clc
adc
cmp
cmp
ins
test
mov
or
adc
sbb
dec
cmp
jle
fmul
outs
aam
in
push
ret
and
mov
fistp
dec
imul
jno
or
sub
fidivr
repz
push
sub
div
aas
pop
lds
mov
hlt
inc
jmp
aaa
and
adc
ja
mov
sbb
(bad)
retf
les
daa
xor
ficom
imul
mov
movs
out
add
mov
into
test
outs
sub
rcl
les
fst
loop
retf
xchg
sbb
in
xchg
cmps
pop
push
cld
imul
call
push
xor
inc
cld
inc
lahf
pop
int
xchg
xchg
mov
push
pop
cwde
mov
mov
sbb
enter
call
ret
(bad)
pop
add
pop
stc
mov
add
pop
pop
js
and
jge
mov
push
mov
out
mov
(bad)
and
loope
inc
call
xor
fidiv
jbe
xor
or
add
mov
popa
adc
cmp
or
push
pop
jecxz
adc
jmp
dec
je
inc
lds
lea
xchg
push
arpl
cwde
retf
and
xor
push
aad
cmps
sbb
xor
sbb
std
pop
sub
cmp
jo
and
add
stos
loopne
ret
scas
cmp
jmp
test
mov
(bad)
dec
cmp
inc
cmp
shl
mov
in
sub
(bad)
aas
mov
or
mov
popf
arpl
adc
xchg
lds
jns
cmp
sbb
out
inc
xlat
iret
mov
add
mov
cmps
mov
imul
jne
sbb
fwait
mov
fwait
and
pop
pusha
xchg
adc
mov
in
shl
aas
add
mov
xchg
ss
out
or
cmc
mov
(bad)
mov
adc
sub
popf
retf
jns
(bad)
dec
mov
inc
inc
mov
fwait
cdq
daa
add
add
jae
mov
ror
dec
clc
pushf
stc
inc
loop
and
sub
cmc
jge
dec
cmp
out
outs
enter
push
test
cmp
rcr
push
cmp
jno
in
xlat
sub
out
lahf
sub
mov
pop
push
mov
iret
loopne
ss
cmps
jnp
cmp
repnz
or
or
cmp
test
pop
mov
lahf
movs
inc
repnz
mul
xchg
popf
sbb
loopne
push
mov
fcmovu
cmps
(bad)
aad
cmps
mov
test
pop
int3
ficom
lds
sbb
adc
shl
jge
xchg
daa
aam
add
mov
cmp
inc
fadd
mov
sbb
icebp
xor
dec
xchg
inc
mov
cmps
test
fiadd
xchg
outs
popa
cmp
jl
cmps
mov
pop
aas
rcl
clc
and
icebp
ds
mov
pusha
out
fisub
adc
stc
out
mov
cmps
jmp
mov
jno
repnz
adc
or
icebp
mov
xchg
cmp
xlat
jge
in
jo
push
lds
sbb
adc
mov
inc
push
ffree
pop
pop
aam
push
mov
push
xchg
movs
daa
into
sub
sbb
add
mov
jb
adc
dec
out
call
dec
(bad)
pop
pop
rol
jmp
push
nop
xchg
aas
cmp
repnz
and
or
dec
popf
xor
push
jmp
mov
inc
pxor
popf
neg
movs
xlat
aam
shr
dec
sbb
sahf
inc
mov
retf
push
sbb
mov
hlt
mov
jmp
jne
inc
stos
shl
es
pop
call
into
ja
ret
jmp
xchg
rcl
mov
repnz
das
push
cli
fcmovbe
mov
cmps
cdq
addr16
daa
and
push
clc
add
ret
(bad)
aas
add
ins
mov
jmp
loope
push
mov
mov
mov
test
movs
test
pop
adc
aam
cmp
mov
fst
ret
nop
xchg
xchg
sahf
pop
push
fidivr
xchg
mov
jns
int3
imul
arpl
std
(bad)
scas
lea
sbb
push
dec
mov
call
sub
lds
hlt
fist
je
pop
mov
xor
cmp
cs
mov
mov
xchg
iret
(bad)
arpl
int
inc
dec
or
not
(bad)
outs
cld
lods
out
out
sti
repz
addr16
mov
push
xlat
inc
jle
ret
mov
ds
pop
xchg
push
dec
pusha
xchg
stos
les
shl
repz
jle
mov
and
in
fimul
stc
push
and
mov
pop
arpl
jns
jae
call
(bad)
mov
sub
call
dec
les
cmp
movs
loope
rcr
adc
pop
out
test
fidivr
mov
pop
sbb
jo
xor
add
mov
popa
test
int3
repnz
sub
in
and
repnz
test
sbb
add
sub
lds
lea
jmp
xlat
loopne
xchg
retf
xlat
mov
scas
xor
or
inc
pop
sub
sar
cli
ret
mov
test
repnz
scas
mov
hlt
sbb
aas
sub
and
or
outs
cmps
lods
sub
into
pop
scas
aad
inc
not
jns
in
mov
add
fdivrp
mov
push
movs
lahf
cmp
add
imul
pop
lods
sub
clc
dec
jp
imul
sub
daa
jmp
add
push
fwait
es
scas
mov
mov
sbb
jge
push
add
fadd
sub
sub
movs
sbb
add
xchg
js
imul
std
xlat
inc
mov
out
cmp
push
int
out
ins
arpl
(bad)
cmp
in
bound
inc
jno
aas
mov
stos
push
mov
and
test
jne
icebp
or
mov
inc
imul
and
and
popf
das
je
(bad)
adc
mov
pop
and
jae
mov
fld
adc
dec
mov
adc
jl
jmp
sti
push
int3
push
repnz
pop
xor
pop
xor
and
xchg
imul
jbe
push
into
add
and
mov
jae
push
in
stos
ret
jnp
outs
test
xor
clc
(bad)
jns
mov
push
int3
into
loop
push
add
jns
and
cli
out
xor
out
fdivp
dec
push
sbb
mov
cmp
stc
sbb
jbe
loopne
into
ret
stos
inc
das
mov
jmp
cmp
or
cmp
call
jb
lock
or
jg
add
jle
inc
cwde
stos
inc
std
fidiv
retf
cmps
lods
(bad)
xlat
xchg
mov
jo
push
jge
xchg
movs
iret
mov
mov
outs
fst
out
retf
dec
rcr
ror
pop
xchg
icebp
pop
ss
add
inc
int
test
xchg
pop
fistp
jnp
into
mov
push
pop
mov
out
aam
xchg
adc
imul
enter
jae
call
jo
push
add
jns
cmp
adc
aas
xchg
add
mov
div
and
add
push
push
or
cmp
cmp
in
jle
mov
mov
jbe
movs
stos
mov
mov
test
adc
mov
fndisi(8087
mov
pusha
mov
xor
mov
xor
lock
sbb
shr
das
xchg
sub
mov
lock
cmp
pop
pusha
retf
xchg
xor
or
and
shl
mov
movs
fisttp
shl
inc
sbb
dec
push
repnz
retf
mov
jl
lods
pop
xor
cmps
inc
call
jbe
pop
jg
mov
fwait
in
loopne
push
mov
mov
in
(bad)
cmps
fidivr
sbb
loop
jbe
ror
xchg
scas
jp
mov
mov
repz
es
daa
ficomp
scas
mov
add
ins
dec
xchg
ror
imul
stc
(bad)
dec
es
aas
sub
xchg
or
dec
pushf
push
icebp
div
out
aad
data16
dec
adc
sub
lods
cmp
jne
adc
hlt
push
inc
xchg
in
and
mov
psubsw
pop
jmp
loop
ret
sub
jge
or
sbb
mov
xchg
imul
fsubr
in
out
outs
imul
xor
xor
jne
addr16
jmp
xchg
fcomp
ins
(bad)
xor
pop
xchg
cmp
mov
mov
mov
ficom
mov
(bad)
push
jae
and
lock
mov
lods
loop
inc
in
sahf
xchg
push
mov
ficomp
sub
push
xchg
dec
pushf
pop
(bad)
out
sti
push
sub
mov
push
push
cdq
adc
sub
cmps
ss
push
jecxz
imul
adc
pop
mov
sti
out
adc
stos
or
inc
pop
sbb
sbb
lock
cmp
stc
pop
call
not
sbb
mov
pop
gs
fsub
mov
cmps
int
pushf
(bad)
jo
shl
stc
mov
cmp
mov
aam
jns
fst
mov
mov
call
sub
push
push
inc
xor
clc
mov
sbb
dec
sti
xchg
sbb
fs
aad
pop
pusha
lea
pop
retf
mov
ret
lock
dec
mov
mov
lea
jae
cmc
cmps
jnp
sbb
movs
cmp
fidivr
out
scas
outs
icebp
clc
(bad)
push
lahf
mov
movs
je
xchg
xchg
inc
int3
and
jmp
ds
nop
(bad)
out
sub
arpl
out
cmp
and
fsub
ss
push
inc
data16
push
inc
imul
push
cmp
fcomp
stc
adc
mov
add
push
mov
jmp
jbe
cs
gs
or
jno
lea
cs
bound
in
(bad)
sti
stos
inc
nop
dec
cmp
sbb
add
(bad)
movs
xchg
imul
push
adc
enter
xchg
push
dec
icebp
ret
fimul
pop
xor
cwde
jb
sbb
sbb
push
stc
dec
pop
clc
sbb
mov
aad
push
repz
outs
add
adc
jg
pushf
push
imul
push
jp
cmps
mov
ret
out
rol
sbb
adc
mov
jle
xchg
and
inc
enter
xchg
cmp
or
sar
sub
jmp
xchg
mov
push
push
fwait
pop
push
jb
mov
ret
xchg
retf
jmp
hlt
add
pusha
jns
jecxz
test
jmp
xlat
ja
mov
daa
faddp
push
ror
mov
cwde
ret
call
mov
sub
inc
or
sbb
test
sub
add
(bad)
adc
out
out
repz
push
lea
xor
cmps
lods
xchg
stos
test
xor
pop
sub
mov
dec
call
dec
cmc
retf
mov
add
paddq
jle
mov
fdivr
imul
daa
(bad)
xchg
add
sub
jbe
into
xor
inc
outs
xchg
mov
mov
or
lea
lahf
inc
pop
xchg
sub
sub
repz
ins
es
loopne
mov
icebp
int3
mov
and
push
test
adc
repz
(bad)
and
jae
test
xchg
mov
add
mov
cli
rcl
cmp
(bad)
push
addr16
cdq
std
mov
popf
shr
pop
cs
scas
test
aam
(bad)
aas
sahf
cli
and
jno
cmp
jae
sbb
std
mov
rol
call
push
jno
xchg
jb
leave
sub
test
xor
mov
add
call
jmp
mov
int
mov
dec
cmp
das
pop
mov
jmp
jb
xchg
xor
ins
rcr
jns
iret
cmps
push
je
jnp
sub
cmp
jne
and
call
stos
and
xchg
or
data16
xchg
pop
inc
(bad)
push
push
xor
mov
loope
aaa
retf
shr
(bad)
adc
dec
loop
push
pusha
mov
and
imul
(bad)
(bad)
cmp
push
iret
add
xchg
ja
push
dec
jge
ins
xchg
rcl
or
pop
stc
jge
lea
mov
sti
pop
cmps
sub
(bad)
mov
xor
dec
mov
inc
add
hlt
retf
ins
sub
into
xlat
mov
in
in
xchg
mov
shr
pop
jle
xchg
retf
shl
call
(bad)
xchg
mov
adc
mov
neg
retf
fs
cmp
add
lods
and
push
leave
sbb
or
sub
imul
out
and
mov
sbb
inc
xor
mov
or
adc
sub
mov
xchg
pop
jb
push
mov
xchg
or
ins
sub
in
mov
dec
int
(bad)
sub
mov
mov
jmp
mov
ins
pop
shl
xor
push
dec
jo
sbb
lock
xor
sbb
pop
xchg
pop
xor
pop
xor
jb
xchg
leave
mov
(bad)
call
adc
fwait
sbb
mov
push
fwait
jno
div
xchg
mov
jnp
outs
mov
jl
lea
dec
repz
cwde
jae
and
mov
repz
push
out
cmp
push
mov
cmc
adc
out
ret
inc
mov
cmp
mov
add
js
and
in
stc
out
call
repz
inc
or
push
inc
ror
in
cmp
adc
xor
setbe
iret
dec
es
jp
lock
scas
movs
add
pop
stos
pop
push
test
or
cs
dec
pop
stc
in
xor
cmps
xchg
das
lods
dec
lods
xor
sbb
jbe
lock
mov
jae
test
imul
lods
cmps
stc
cmp
pop
repz
fsub
dec
test
aam
xchg
xchg
movs
mov
cmove
pusha
nop
cs
les
gs
dec
push
cld
out
adc
push
test
das
sub
dec
fwait
popf
or
jl
ds
or
aad
jle
fiadd
sahf
ret
js
xchg
dec
xchg
mov
inc
popf
xor
jbe
lahf
int3
popf
jp
dec
loope
(bad)
(bad)
adc
jl
push
dec
fsubr
(bad)
cwde
dec
js
dec
imul
xlat
pusha
hlt
popf
adc
xor
test
mov
ficomp
addr16
mov
das
(bad)
aas
(bad)
iret
jne
jecxz
push
sub
nop
idiv
dec
jns
imul
xor
rcl
jne
arpl
push
jge
int
mov
and
sub
popa
ret
jnp
daa
mov
and
adc
mov
scas
fstp
pop
movs
push
sub
ins
inc
sbb
lahf
push
imul
movs
fs
fst
push
and
in
out
nop
push
cmp
or
mov
add
adc
xor
popa
mov
(bad)
or
mov
out
scas
push
leave
mov
dec
push
push
dec
cmp
and
push
inc
mov
push
icebp
sub
std
push
cmps
adc
mov
jmp
test
in
popa
in
stos
xchg
into
jmp
or
push
jne
mov
(bad)
outs
ret
cmps
shl
adc
jmp
mov
add
add
fisttp
pop
mov
popf
cmp
xor
mov
add
jno
pop
out
(bad)
test
es
(bad)
scas
push
in
jge
jae
stc
and
xchg
push
pop
jecxz
lods
mov
ret
add
(bad)
dec
fadd
add
push
xchg
xchg
xchg
inc
in
jle
sahf
stos
loop
mov
jmp
push
cmp
mov
shl
or
je
sub
sub
aaa
sbb
pop
sbb
test
rol
sub
fwait
dec
fild
test
mov
cwde
or
dec
sub
mov
cmc
mov
fldcw
ja
in
shr
test
outs
lds
xchg
int3
and
popf
push
out
dec
jne
arpl
push
add
lahf
retf
or
lods
(bad)
ins
add
jb
push
adc
pop
sub
xchg
nop
inc
pushf
xchg
repz
mov
movs
(bad)
hlt
fwait
leave
int
pop
and
adc
sbb
cmp
push
cmp
lahf
(bad)
and
cmps
loop
idiv
xor
outs
popa
ret
xor
stos
add
and
aaa
dec
lods
sbb
cmp
jle
dec
cmc
and
add
xchg
push
jle
add
(bad)
cdq
mov
in
xchg
nop
ficomp
add
mov
or
in
push
in
jnp
sbb
adc
sti
sub
in
lods
ins
dec
lods
cmp
add
loope
inc
out
es
repnz
rol
push
mov
retf
cmp
jb
sub
push
cld
and
clc
xlat
dec
repnz
scas
sbb
pop
clc
mov
lock
fild
rcr
or
cmp
stos
cli
dec
adc
out
pop
test
jmp
mov
sub
fcmove
jns
rcr
fwait
xlat
out
sub
xchg
add
jbe
add
test
daa
sub
pop
fwait
(bad)
cld
sub
mov
je
adc
jne
hlt
out
mov
imul
retf
pop
fwait
inc
and
push
lock
xchg
push
mov
dec
les
iret
imul
fist
loopne
pop
lods
leave
cwde
int
add
dec
jmp
push
nop
int3
mov
fldenv
rcl
sub
(bad)
jmp
mov
(bad)
cs
rcr
adc
sub
ins
bound
test
hlt
rcl
mov
jns
fs
sbb
(bad)
aam
xor
jnp
jecxz
bound
adc
lds
mov
and
or
loopne
jecxz
imul
sbb
xor
push
(bad)
fdivr
rol
mov
mov
mov
out
jno
cmps
and
daa
dec
inc
mov
cld
pop
add
repz
adc
pop
adc
lea
add
js
dec
cmp
fs
adc
scas
pop
xor
clc
adc
movs
adc
xchg
adc
push
hlt
lods
int
mov
jecxz
scas
mov
cld
add
daa
shl
sbb
xchg
aam
mov
lahf
and
stos
and
daa
add
xor
inc
sub
movs
xchg
(bad)
js
mov
add
mov
inc
aam
or
jo
xor
xchg
int3
outs
int3
jbe
push
pop
clc
adc
call
pusha
lods
sar
mov
adc
push
mov
jle
cmps
cmps
das
and
jge
mov
rol
or
sub
and
retf
cmp
cmp
outs
xor
pop
add
or
push
sbb
fucomip
xor
js
ret
jp
icebp
jle
ror
lods
and
push
adc
aam
in
fwait
out
add
jne
mov
xchg
pop
push
fisttp
ja
xlat
mov
inc
in
push
(bad)
je
or
sub
sbb
fst
fnstsw
rcr
mov
or
push
sub
lds
das
icebp
lock
ret
mov
mov
int
xchg
jnp
lock
(bad)
mov
mov
iret
push
pusha
fcom
mov
push
sbb
mov
cmps
adc
push
jne
lahf
jl
lods
add
xor
push
jp
add
sub
add
pushf
xor
xor
cmp
mov
jnp
mov
imul
movs
mov
int3
inc
mov
ret
pop
std
dec
push
out
push
or
out
sub
dec
mov
mov
inc
popf
inc
aad
xor
std
(bad)
sbb
dec
jne
loop
cmp
push
ret
ss
jp
xchg
pusha
les
xor
sbb
dec
jge
sub
cli
test
gs
xor
retf
retf
cmp
pushf
js
or
push
dec
inc
mov
sbb
mov
ds
or
imul
fwait
bound
pushf
in
nop
data16
(bad)
mov
add
ss
push
fild
sbb
rol
push
sub
idiv
mov
mov
mov
mov
fsubr
dec
pop
ror
pop
mov
sub
adc
dec
(bad)
ja
fdiv
push
dec
push
xchg
js
(bad)
mov
cmp
dec
cli
imul
lahf
scas
or
jge
cmp
mov
xor
push
lods
sub
jmp
fisubr
mov
in
push
mov
in
fst
in
ja
es
jae
pop
sahf
mov
pop
loop
jl
rcr
xor
inc
add
sbb
jecxz
xchg
jnp
not
lahf
sub
push
or
add
dec
neg
sbb
or
dec
jns
repnz
sub
mov
xor
and
inc
cmps
add
fbstp
add
(bad)
rcl
mov
push
cs
sar
jb
push
movs
and
mov
mov
or
(bad)
loopne
add
push
adc
xchg
add
jns
mov
jle
or
xchg
sbb
fs
retf
inc
mov
inc
je
cdq
dec
movs
xchg
jmp
dec
fs
dec
ror
cmp
fisubr
mov
imul
mov
inc
adc
lock
cli
in
mov
mov
sti
cmps
enter
push
mov
mov
sub
jo
frstor
and
arpl
icebp
js
add
inc
inc
push
pop
pop
bound
shl
jecxz
(bad)
frstor
ret
sbb
jnp
add
or
jmp
xchg
mov
sbb
inc
mov
call
(bad)
fist
adc
mov
jmp
inc
or
xor
lods
fdivr
aad
into
aas
add
or
scas
int
cmps
push
pop
leave
xor
sbb
mov
dec
sub
into
enter
loop
fisub
and
test
bound
add
adc
ror
sbb
fadd
lea
push
sbb
xchg
pop
sub
repz
push
popa
sub
push
(bad)
xor
dec
imul
mov
sti
sbb
xchg
cmp
and
sbb
cdq
or
inc
sub
loopne
xchg
icebp
mov
jle
pop
mov
call
outs
sbb
cmp
dec
xchg
jns
lock
push
cmp
adc
mov
(bad)
js
mov
bnd
add
jl
outs
movs
xchg
jmp
push
cdq
mov
rcr
dec
cmp
jecxz
cmps
mov
mov
adc
daa
mov
bound
inc
sti
test
lods
(bad)
bound
(bad)
cmp
cs
push
mov
xor
xchg
mov
sti
push
mov
je
xchg
fistp
std
and
add
mov
fsubr
inc
das
out
jb
dec
adc
or
repz
outs
inc
dec
sub
popa
and
or
pop
mov
aaa
cmp
stos
arpl
sub
jmp
stos
aas
pop
and
or
mov
jo
cmp
mov
ret
imul
or
out
sahf
or
push
jmp
xor
pop
xor
int
in
jle
mov
aad
cwde
push
mov
adc
pop
xchg
mov
xchg
retf
arpl
movs
aas
(bad)
jecxz
sbb
jno
xchg
fwait
dec
cmp
mov
loop
pop
cli
sbb
rcl
mov
neg
adc
mov
add
lods
pusha
cmp
mov
mov
adc
and
push
adc
aam
mov
stos
mov
shr
bound
fisubr
xor
inc
(bad)
into
mov
adc
mov
sub
lds
(bad)
(bad)
jg
and
or
pop
and
fld
push
add
push
call
lods
sahf
push
mov
movlps
mov
in
cmp
fld
xchg
xor
clc
daa
pushf
int3
arpl
add
push
mov
clc
(bad)
pop
aaa
dec
shl
jae
dec
std
add
cwde
in
cwde
out
xor
mov
push
leave
aaa
adc
inc
and
or
ss
pushf
xor
jmp
sbb
mov
and
in
mov
inc
leave
push
in
or
enter
cmp
mov
std
lock
jecxz
and
dec
xchg
dec
inc
fstp
adc
cmp
or
adc
sbb
pop
xlat
mov
fsubr
cmp
rcr
mov
ds
test
and
add
pop
popf
into
mov
jbe
mov
mov
inc
popa
mov
sahf
add
mov
retf
mov
xor
mov
es
int3
push
leave
repnz
jae
dec
jnp
std
adc
aas
inc
xor
aaa
sub
add
xor
pop
inc
test
outs
sahf
push
dec
mov
add
inc
std
jmp
or
jno
sub
ja
cmc
imul
leave
loop
(bad)
mov
or
or
clc
xor
jle
data16
std
loopne
pop
pushf
test
(bad)
xor
fnsave
jno
xchg
in
dec
mov
div
push
add
xor
bswap
dec
stc
pop
enter
fldenv
lock
mov
xchg
repz
or
stos
xor
(bad)
dec
test
cmps
loop
pop
cmp
int3
pop
adc
ss
or
repnz
cmp
lahf
jbe
jl
push
and
add
jne
cmp
mov
add
(bad)
pop
dec
fld
xor
outs
repnz
jmp
or
jno
cmp
clc
adc
sahf
stos
push
mov
adc
xor
pusha
cmc
out
ret
ret
mov
test
cmps
js
xor
addr16
inc
xlat
jae
xchg
movs
xchg
stos
mov
and
push
adc
push
sti
and
movs
jns
scas
test
jl
mov
call
add
mov
cld
push
jns
mov
test
shl
cmp
or
lock
jle
jb
lods
test
das
xor
imul
sub
fnsave
add
imul
or
cli
inc
inc
or
inc
in
mov
inc
and
inc
gs
ja
(bad)
jmp
pop
ror
sahf
ror
pop
cmp
out
cmps
dec
out
push
mov
dec
retf
das
cmp
push
jb
mov
inc
pop
sbb
and
shl
cmp
std
mov
cmp
cmp
xor
sub
mov
ret
arpl
sbb
(bad)
aaa
mov
call
inc
mov
in
sub
xchg
pop
retf
xchg
test
adc
adc
cwde
cmp
pop
js
in
dec
stos
sub
pusha
adc
sbb
push
inc
test
or
popf
lock
sbb
daa
xor
hlt
repnz
mov
jne
xchg
mov
stc
daa
adc
jmp
pop
sbb
aas
sub
sbb
stos
dec
dec
les
xchg
leave
jle
sub
mov
es
stos
hlt
jle
in
or
sti
or
push
jecxz
out
in
and
bound
iret
clc
test
pop
test
test
sub
mov
add
jae
scas
movs
sbb
lea
push
push
mov
jo
clc
cli
pop
sbb
in
not
mov
mov
push
push
aas
stos
jbe
inc
clc
inc
mov
inc
int
push
dec
mov
cdq
cmp
push
mov
retf
pop
push
pushf
jmp
mov
cmc
jo
cmp
rsqrtps
pop
jno
das
movs
pushf
das
sbb
nop
cmp
in
mov
in
aam
pushw
out
lods
add
cmp
xchg
jg
push
and
test
or
mov
div
iret
push
cmps
push
xchg
call
cmp
jns
ins
call
pop
and
aas
xor
rol
pop
or
cmc
adc
push
out
dec
fdiv
jo
loope
cmp
xor
cmps
xor
jno
dec
arpl
aam
pop
mov
movs
mov
and
(bad)
lods
pop
fdiv
dec
add
mov
jecxz
mov
fidiv
and
shr
(bad)
retf
sub
or
mov
repz
inc
xlat
arpl
push
inc
idiv
out
mov
int
sbb
mov
enter
pushf
rsm
mov
sub
fsubr
sub
imul
mov
xor
sub
leave
adc
dec
rol
pop
cmps
jno
adc
ret
inc
mov
push
lods
loop
dec
imul
outs
popa
inc
bound
sbb
imul
jns
hlt
mov
xchg
push
mov
addr16
das
(bad)
push
mov
and
fwait
push
adc
and
mov
sub
scas
sbb
pop
lock
fbld
or
mov
or
adc
inc
out
cmc
fld
idiv
push
xor
loop
(bad)
push
mov
bnd
push
std
dec
or
in
jbe
dec
push
fmul
xchg
adc
je
sahf
mov
lea
mov
div
rcl
mov
retf
cmp
in
sbb
psubsb
mov
pop
shr
popf
push
sbb
into
cmc
jl
add
mov
sub
cmp
inc
(bad)
push
int
dec
mov
add
mov
cdq
sub
push
pop
in
ja
push
cmp
(bad)
fistp
mov
ss
pop
mov
lea
les
popf
es
movs
ins
daa
dec
cmps
push
dec
cmps
push
xor
ror
pusha
jb
and
les
scas
mov
mov
ins
imul
sbb
aam
jge
movs
stos
mov
dec
out
adc
and
adc
out
jae
popa
inc
rcl
inc
inc
adc
mov
xchg
and
push
arpl
fwait
mov
dec
lock
xchg
pop
stos
stc
push
xchg
or
xchg
fsub
sub
sub
cld
adc
mov
daa
call
in
dec
mov
fs
sbb
outs
xor
loope
cmp
ss
and
xchg
aas
mov
or
sub
js
jmp
ins
and
int
or
lods
into
cmp
cmp
pusha
(bad)
pop
movs
fwait
sti
lds
jmp
xchg
mov
pop
(bad)
out
iret
fmul
icebp
hlt
add
cwde
das
mov
inc
(bad)
fild
(bad)
cmp
inc
pminsw
(bad)
ins
out
clc
fs
jecxz
mov
mov
cmps
aam
sbb
jno
mov
xor
daa
rcr
addr16
shr
adc
dec
into
cmc
push
fcomp
stc
popa
test
mov
or
add
add
lock
lods
add
gs
xchg
xchg
xor
outs
xchg
out
mov
popa
cwde
not
mov
xor
fmul
push
sub
ja
clc
dec
out
in
mov
inc
ds
div
push
xchg
mov
dec
imul
adc
cmp
sub
xor
mov
jne
movs
out
pop
out
push
out
cmp
daa
ins
sbb
call
mov
jno
fld
scas
mov
pop
add
dec
xchg
pop
inc
daa
addr16
push
pop
jle
sbb
rol
fisttp
fsubr
jae
inc
cwde
clc
pop
push
js
cmps
mov
push
dec
inc
sti
sub
inc
fisub
push
jg
das
popf
mov
add
and
sub
mov
push
cli
imul
xlat
pop
xchg
fdivr
cmovae
or
cmps
lock
(bad)
dec
dec
add
mov
xchg
dec
sub
jmp
cmp
xor
jecxz
fdiv
outs
icebp
adc
jne
cmp
pushf
xor
and
es
dec
mov
loopne
call
fdivp
inc
fstp
scas
push
cmc
rcr
dec
cwde
ins
and
and
mov
mov
and
and
mov
mov
sahf
cmp
xor
addr16
add
dec
mov
mov
lods
xchg
das
dec
jno
jge
inc
mov
mov
mov
push
and
add
adc
add
pusha
scas
jo
outs
call
and
jnp
bound
call
sub
jbe
retf
push
les
out
sbb
or
icebp
push
sbb
sub
fcom
xchg
adc
call
pop
jo
xor
mov
sbb
adc
and
fst
leave
mov
addr16
mov
xbegin
js
cmps
mov
pop
stc
add
mov
dec
sbb
js
push
and
mov
retf
xor
xor
shl
or
ret
mov
aad
jae
out
cs
mov
aas
cmc
in
sub
or
sbb
mov
xor
pushf
mov
(bad)
xor
pop
adc
dec
xchg
adc
mov
jmp
fmul
jmp
lock
dec
rcl
(bad)
cmp
pop
hlt
popa
mov
es
pop
dec
cmc
and
icebp
mov
push
outs
jp
call
in
xlat
scas
loop
sub
aas
scas
test
pop
xor
or
mov
pop
push
pop
and
inc
push
in
cmp
repnz
mov
out
retf
in
shl
and
xor
std
call
push
(bad)
ret
mov
(bad)
and
push
add
adc
inc
sar
add
clc
ds
int3
lahf
pop
shr
daa
inc
mov
or
pushf
lds
leave
mov
jmp
popa
aaa
mov
dec
pop
ret
cmp
pop
imul
dec
fist
push
jl
or
xchg
mov
outs
clc
imul
sbb
inc
mov
mov
fwait
bound
call
cmps
cdq
mov
inc
xlat
loop
addr16
call
add
cmp
inc
lods
rol
add
sub
xchg
movs
mov
aaa
daa
jmp
fadd
mov
ja
icebp
gs
push
lea
cmp
repz
push
(bad)
cmp
fdivp
mov
sub
sar
faddp
in
mov
call
pusha
dec
push
ret
and
xor
mov
pop
xor
xchg
pop
neg
lods
fst
aas
pop
add
push
jnp
dec
mov
sbb
(bad)
or
mov
xchg
dec
push
push
dec
ds
xor
dec
ins
push
xchg
test
ins
fidivr
jnp
inc
xor
add
inc
(bad)
aam
add
out
cmc
adc
je
out
outs
ins
xor
adc
into
sub
jge
push
out
ins
xor
movs
or
out
loopne
pop
sbb
push
add
adc
sbb
xchg
mov
sub
xchg
lock
or
or
xchg
clc
clc
or
sbb
xor
shr
xor
int3
cmp
push
xchg
inc
push
push
popa
test
lods
cmps
cmps
or
cld
out
fcompp
cmp
arpl
dec
pop
outs
retf
fcomp
imul
jmp
pusha
xchg
into
fsub
cmp
stos
fstp
popa
jl
hlt
push
adc
add
je
add
and
cmps
fst
cwde
(bad)
loopne
and
sti
xor
inc
ja
dec
push
push
int
sbb
popf
je
add
(bad)
or
or
addr16
jo
xchg
mov
cdq
jns
dec
xor
(bad)
out
mov
mov
dec
retf
sub
xchg
ret
xor
outs
call
int3
dec
call
(bad)
push
clc
pusha
cmp
fistp
jmp
fsubr
repnz
pop
imul
push
mov
adc
daa
popa
inc
outs
aaa
bound
lds
or
out
push
rol
jb
jbe
sub
sbb
push
push
adc
ror
sti
sbb
and
arpl
out
das
sub
retf
adc
push
imul
out
popf
test
mov
loopne
push
loopne
je
inc
movs
push
stc
cmp
dec
loop
retf
loope
mov
ins
jg
fdivr
xchg
(bad)
icebp
and
xor
repz
test
je
and
push
push
mov
aas
lahf
jmp
cdq
aaa
jecxz
cmp
addr16
push
mov
fcmovu
rcr
xor
repz
mov
(bad)
mov
xchg
comiss
inc
adc
add
pusha
pop
idiv
inc
int
sub
outs
repz
push
ficom
xor
lods
mov
cmps
cmp
sub
mov
pushf
mov
movs
mov
cmp
mov
inc
loopne
icebp
adc
jne
shrd
pop
adc
adc
and
add
dec
ds
and
adc
int
dec
add
(bad)
fild
xchg
mov
retf
and
push
movs
cli
and
mov
cmp
xor
gs
ins
stc
into
jne
aam
je
adc
sbb
inc
jne
retf
(bad)
(bad)
jl
idiv
push
mov
sub
(bad)
loop
(bad)
inc
xor
sbb
jmp
aad
jne
inc
cmp
cli
jo
push
inc
mov
xchg
mov
retf
les
(bad)
sub
mov
into
jno
xor
pop
dec
jp
cdq
movs
mov
shl
ret
fcos
stos
jp
inc
les
std
mov
in
ins
adc
fcom
mov
pop
hlt
mov
fwait
jmp
cmc
dec
inc
mov
sbb
std
inc
into
jnp
loopne
fdiv
adc
(bad)
lds
not
and
fldenv
iret
ja
mov
jl
bound
aaa
cmps
lahf
push
outs
jne
loope
jbe
cli
pop
scas
add
div
lods
sub
adc
inc
dec
not
add
ret
out
jmp
call
sub
pop
push
retf
or
xor
paddq
enter
xchg
test
mov
dec
cmp
clc
(bad)
cdq
popf
mov
sbb
mov
imul
xchg
push
mov
stos
mov
rcr
ret
inc
nop
pop
push
cmp
cli
test
mov
inc
mov
(bad)
adc
sbb
ins
(bad)
xchg
inc
outs
or
cmp
shl
pushf
cmp
lock
and
shl
les
or
mov
xor
ds
sbb
dec
dec
nop
dec
(bad)
inc
sar
mov
push
fnstsw
mov
aaa
jo
(bad)
into
hlt
sahf
xor
ret
push
mov
or
push
dec
mov
out
dec
shl
xor
loope
out
sahf
in
pop
test
xchg
jbe
icebp
xor
jmp
sbb
in
mov
push
jp
jmp
cli
dec
bnd
inc
xor
inc
mov
inc
int3
loop
dec
or
xor
call
stos
inc
and
fwait
cmps
(bad)
push
cmc
adc
in
not
push
loope
inc
int3
lods
in
fbstp
pop
ret
lds
addr16
addr16
sbb
mov
inc
pop
mov
imul
mov
lds
pop
iret
into
sub
push
pop
xlat
out
outs
jb
sub
mov
ins
ss
mov
add
sbb
sub
cld
cmps
test
push
lods
jl
lock
adc
or
test
or
jle
xor
test
mov
adc
lsl
mov
(bad)
mov
mov
push
xor
or
ss
sar
mov
(bad)
pop
inc
cld
pop
push
hlt
(bad)
(bad)
push
and
stos
pop
add
xor
sahf
jbe
cmc
pop
mov
inc
jmp
ret
push
out
pop
mov
xor
fimul
sub
aas
push
xchg
call
or
jns
enter
in
jno
push
nop
jae
mov
or
and
mov
xchg
add
jl
push
xchg
push
pand
push
mov
stos
pop
xor
icebp
ins
cmps
ror
xor
jg
xchg
xor
push
and
push
push
fnstsw
out
and
cmp
int
adc
add
dec
mov
sbb
add
fiadd
cli
fnstcw
rol
mov
push
(bad)
and
int3
mov
mov
sbb
push
inc
stc
mov
cmps
inc
cli
inc
jle
inc
jp
push
gs
adc
xor
dec
scas
outs
icebp
lds
in
sbb
jns
scas
hlt
movmskps
pop
pop
les
push
mov
cmp
push
jne
jae
sbb
ins
ss
leave
sar
mov
int
xchg
sbb
aas
push
dec
clc
mov
sbb
int3
movs
mov
adc
xchg
jne
std
outs
test
fldenv
xchg
and
aaa
call
shl
lods
push
mov
inc
sbb
dec
pop
pop
mov
jg
cmp
xchg
nop
dec
xchg
mov
jns
sub
inc
sub
outs
ins
jle
pop
addr16
mov
jmp
add
mov
xor
jnp
jle
inc
push
icebp
and
mov
mov
pop
dec
into
push
lahf
adc
cmc
dec
popf
mov
xor
cmps
aam
fsubr
inc
movs
adc
test
pop
xchg
aad
pop
dec
push
rcr
hlt
int
jge
cmp
sub
jge
mov
rcl
push
test
sub
inc
push
sbb
jns
pop
xchg
inc
leave
gs
mov
fs
cmp
mov
shl
aad
jmp
lods
mov
xchg
jmp
mov
or
push
aam
aam
data16
arpl
sbb
push
daa
adc
retf
fdiv
xor
jb
push
inc
jns
inc
jbe
jbe
ret
repnz
outs
fisttp
sbb
push
fdivr
js
out
scas
push
in
jmp
aaa
inc
pop
sub
inc
or
mov
aam
dec
stos
add
cmp
arpl
movs
ja
xchg
inc
retf
cmp
mov
inc
or
xchg
in
leave
enter
(bad)
retf
fs
ror
fisttp
jnp
mov
jne
push
xchg
aas
and
or
inc
jb
pop
cmps
fst
pusha
stos
ret
clc
(bad)
cmp
pop
adc
sahf
xchg
ret
ss
dec
(bad)
pop
lods
(bad)
add
push
fcomp
fwait
pop
inc
out
xor
mov
push
sbb
mov
test
aam
jmp
or
pop
cmps
fnsave
popa
mov
inc
xor
pushf
fbld
call
call
dec
add
jns
aam
retf
dec
cmp
pop
lea
push
jae
jle
int3
cs
in
and
scas
inc
imul
mov
mov
bound
lahf
ja
or
lods
inc
jl
inc
mov
jbe
sbb
pop
jno
inc
adc
inc
sub
jae
xchg
pop
push
sbb
pop
rcl
arpl
mov
xchg
add
xchg
sub
neg
and
lock
dec
mov
fnstcw
aas
(bad)
fidiv
xchg
int3
jge
inc
fidivr
mov
jmp
int
ret
js
cmp
fsubr
sbb
imul
icebp
fs
dec
xchg
mov
fwait
(bad)
fcompp
rol
mov
dec
add
sub
lock
mov
fwait
outs
jg
(bad)
in
out
add
jle
outs
scas
iret
mov
cmps
(bad)
or
adc
sub
dec
push
sub
mov
movs
loope
inc
dec
test
push
push
call
cmp
das
mov
mov
ds
dec
data16
jecxz
add
jmp
dec
mov
je
mov
xor
daa
pop
(bad)
push
and
ret
xchg
jle
mov
and
ds
push
outs
dec
test
jecxz
adc
cmp
imul
setnp
pop
and
popa
xchg
test
ins
out
pop
das
repz
add
push
ds
inc
pop
stc
adc
and
mov
xchg
xor
xchg
into
adc
or
add
cs
in
loop
fild
cmp
or
mov
cmps
or
repnz
das
cmp
mov
pop
xor
xchg
sbb
sbb
cld
stc
xchg
imul
and
sub
test
sahf
add
xchg
sahf
xchg
inc
shl
js
sbb
(bad)
push
jne
add
les
retf
adc
es
jbe
shr
iret
mov
test
pop
test
addr16
loop
xor
inc
jl
add
(bad)
xchg
fadd
pop
hlt
pop
loop
xlat
test
loopne
(bad)
cmp
mov
fdivr
xchg
jmp
push
lods
rol
or
mov
rep
repz
stos
jecxz
or
add
loope
mov
stc
add
mov
xor
push
call
inc
call
jecxz
retf
sar
fmul
fcom
enter
cmp
jmp
jmp
pop
repz
inc
out
sti
icebp
and
clc
ret
les
sbb
add
movs
xor
sub
icebp
fwait
bound
pop
fcmovnu
ins
fimul
cmp
dec
mov
sahf
imul
lahf
ret
jbe
mov
and
(bad)
cmp
sbb
cmps
les
mov
push
cmps
aam
addr16
dec
or
mov
aad
pop
cld
shl
jp
jecxz
jne
inc
test
nop
enter
pop
not
loope
dec
cmc
neg
or
mov
jns
add
inc
and
sub
pop
fisub
add
mov
mov
adc
pop
sar
enter
(bad)
loope
pop
jmp
xchg
int3
sbb
mov
movs
mov
jecxz
pop
sar
das
mov
sahf
jb
test
out
mov
jecxz
xchg
cli
cmp
bound
fisubr
mov
stos
or
xor
stos
add
inc
xchg
lahf
aam
fdivp
mov
(bad)
jge
sub
xchg
std
push
(bad)
stos
dec
push
test
sbb
mov
mov
adc
sub
sar
retf
push
ins
or
cld
mov
icebp
sar
fiadd
fistp
cmp
sub
js
out
xor
out
test
cmps
xchg
add
jae
in
jbe
ds
fild
xchg
inc
stc
mov
push
daa
imul
mov
xchg
xor
outs
(bad)
out
ins
cmp
out
imul
rcr
int
into
add
xor
mov
push
sbb
sbb
ret
and
push
pop
lahf
or
movs
mov
test
mov
test
and
mov
test
adc
lds
mov
movs
(bad)
mov
inc
lods
dec
and
cwde
or
and
test
daa
sbb
cs
xchg
mov
test
adc
call
lock
xsavec
aaa
out
dec
(bad)
cmp
fild
push
lds
cmp
out
scas
das
mov
ret
xor
mov
stc
cmp
(bad)
sub
leave
jnp
fbstp
mov
adc
inc
mov
push
mov
pop
mov
add
mov
and
jns
aam
jb
repnz
rcr
in
loope
icebp
sti
mov
lea
jp
mov
jmp
jo
(bad)
pusha
stc
icebp
jns
movs
retf
push
mov
je
sub
pusha
fbstp
add
xor
and
sbb
adc
mov
dec
sub
sub
add
jnp
jo
pushf
mov
pop
fwait
out
mov
hlt
sub
dec
in
outs
(bad)
or
je
test
popa
dec
ror
test
je
test
dec
dec
sub
mov
dec
sub
mov
cld
push
sub
fwait
mov
sbb
into
ins
pop
pop
xor
mov
and
xchg
aaa
scas
stc
std
mov
cmc
pop
pop
aam
mov
push
loop
cld
pop
mov
fisubr
aas
gs
call
scas
into
cmp
retf
mov
aad
into
adc
aas
dec
pop
aam
jne
push
sub
xor
and
add
pop
test
lods
(bad)
sub
fsub
push
aam
inc
push
jp
sbb
push
iret
int
inc
and
or
jo
(bad)
xor
ret
stos
and
lahf
lods
dec
cmc
(bad)
rol
mov
jae
jg
cmp
xchg
ficomp
ss
mov
or
neg
push
mov
xlat
das
sbb
add
fnstsw
sbb
pop
push
add
or
dec
cmp
mov
test
imul
push
mov
stos
not
not
das
add
imul
pop
nop
data16
bound
lods
or
es
test
mov
adc
pop
in
test
push
bnd
je
iret
xor
mov
mov
fist
mov
mov
ins
dec
cmp
mov
xor
lahf
mov
push
sub
pop
or
jl
daa
stos
dec
xchg
scas
out
sub
pop
and
fcom
sahf
arpl
mov
jecxz
and
ficomp
inc
cld
xchg
(bad)
rol
stc
mov
call
(bad)
std
xor
lock
sbb
push
call
pop
mov
lahf
cmc
add
mov
lds
jmp
(bad)
ret
in
rdtsc
xor
lss
jo
jbe
xor
not
cmp
pop
sbb
or
imul
lods
pop
pop
push
stc
cmc
(bad)
js
sbb
stos
fbstp
fwait
xchg
shl
enter
or
aad
or
sbb
cmp
leave
xor
fisttp
xchg
(bad)
das
jb
push
icebp
lods
mov
cld
mov
ins
sub
cmp
xlat
loopne
shl
sbb
sub
mov
xchg
cmps
shl
xacquire
fwait
das
mov
les
xor
rcl
retf
sub
adc
and
(bad)
push
jmp
or
jb
xchg
jbe
pop
ins
outs
loop
int
shl
dec
clc
sti
fxch
addr16
mov
jp
push
dec
(bad)
xlat
sbb
cdq
or
pop
iret
stos
inc
inc
or
cmc
stos
sbb
or
cmp
xchg
mov
push
lds
and
mov
aaa
push
pop
daa
push
retf
pop
rol
add
icebp
repz
and
lahf
or
fs
mov
pop
and
inc
aas
mov
mov
jmp
adc
dec
mov
lock
mov
and
mov
fcmovbe
push
xchg
jle
and
or
ins
fisttp
shl
fidivr
jg
push
cmp
imul
dec
dec
in
jae
loop
mov
fdivr
pop
mov
addr16
stos
mov
or
jl
sbb
std
sti
and
jecxz
cmp
cmps
pop
mov
(bad)
call
lea
hlt
pop
loope
(bad)
mov
out
repz
or
pop
cmp
test
push
rol
repz
out
mov
cld
jmp
lods
leave
sub
add
and
jmp
jg
xlat
mov
lods
push
leave
out
(bad)
mov
xchg
xchg
pop
test
fstp
test
mov
xchg
mov
mov
popf
rcr
add
push
xchg
mov
lea
mov
sbb
icebp
sahf
push
ja
cwde
mov
das
call
leave
mov
jle
out
fwait
jl
add
(bad)
btr
sbb
inc
bnd
cmps
cmps
lock
push
lock
sahf
mov
dec
ss
mov
sbb
scas
sub
pop
dec
push
pop
and
mov
inc
dec
ins
pop
pop
mov
imul
push
sbb
mov
cs
dec
cld
stos
out
ret
xchg
cwde
out
int3
mov
in
push
imul
add
dec
mov
fs
push
call
(bad)
sti
cld
push
xor
ja
sbb
call
pushf
rcl
xor
fldenv
add
outs
lods
dec
mov
and
aam
hlt
xchg
sbb
or
retf
inc
rol
imul
push
inc
pop
shl
lds
jno
in
jbe
jo
inc
out
mov
push
fld
adc
imul
xchg
or
adc
push
mov
mov
dec
jecxz
pop
aad
adc
out
mov
inc
call
sbb
push
fnsave
lock
jl
sub
clc
add
out
jmp
idiv
add
cs
out
jns
out
mov
shl
cld
lods
fcmovu
xchg
out
fdivr
mov
lods
sbb
shl
push
repnz
mov
xchg
push
out
(bad)
ss
je
inc
sbb
pop
outs
loopne
mov
test
ds
xor
adc
adc
ins
mov
sub
dec
jl
and
idiv
sbb
sti
push
fs
ins
sbb
popf
sti
mov
int
les
mov
in
adc
cmc
xor
outs
fwait
(bad)
inc
sahf
push
fdiv
test
mov
(bad)
repz
pop
jbe
mov
dec
in
and
pop
inc
and
push
sbb
int3
aaa
xor
push
and
mov
movs
inc
push
jae
jne
mov
frstor
mov
sbb
(bad)
pop
mov
xor
inc
push
sbb
sbb
jmp
stos
addr16
test
adc
in
out
pop
cmp
sbb
jmp
leave
mov
aam
jl
ds
inc
sbb
(bad)
pop
pusha
push
mov
inc
data16
imul
dec
xlat
std
lea
inc
std
push
idiv
jb
test
push
fcomp
pop
pop
push
jle
push
test
icebp
repnz
cwde
(bad)
in
inc
or
popa
stos
out
(bad)
jno
xchg
inc
sub
xor
sar
mov
push
(bad)
dec
mov
jae
int
enter
cmc
push
push
popf
jecxz
outs
jecxz
inc
sub
(bad)
js
jp
adc
aad
ucomiss
jno
scas
xor
setb
leave
lods
lock
add
dec
push
xor
mov
pop
cmc
jmp
pop
cld
ds
mov
jmp
push
dec
and
mov
sub
adc
aas
mov
or
outs
mov
xchg
inc
inc
xchg
cs
cld
loope
xor
and
cmp
ins
outs
mov
ret
ret
test
sbb
iret
ins
add
and
repnz
sbb
jae
inc
je
pop
scas
jp
jo
push
stc
out
pop
inc
je
loopne
arpl
and
and
into
fsub
inc
jp
imul
gs
add
cdq
adc
mov
(bad)
dec
loop
paddq
iret
add
dec
sub
jbe
or
pop
adc
and
push
dec
ins
aad
call
addr16
popa
dec
ins
(bad)
cli
repz
dec
pop
adc
imul
xchg
lods
lock
cli
and
add
aam
xchg
mov
and
(bad)
movs
push
stos
std
(bad)
mov
in
mov
pop
ja
mov
sub
es
(bad)
jecxz
addr16
add
sub
cmp
mov
sub
jbe
sbb
pop
cmps
imul
lea
or
jne
imul
dec
push
xor
fistp
mov
imul
jae
aas
ret
and
ins
int
inc
test
add
sbb
jo
mov
(bad)
fiadd
sub
cdq
rcl
cmp
(bad)
fst
mov
idiv
cld
into
icebp
retf
xchg
scas
sar
and
call
adc
dec
addr16
fdivr
sbb
cmp
sbb
(bad)
push
ss
jbe
xor
pop
dec
aad
cmp
add
add
cwde
rdtsc
call
fsubr
xor
fld
movs
and
mov
mov
inc
imul
mov
je
xor
dec
xor
das
sti
pop
fnsave
jnp
mov
pop
jns
jmp
lock
mov
fdecstp
lea
ds
call
shl
sub
jl
inc
pop
movs
mov
pop
jmp
and
pop
in
sbb
adc
ss
into
stos
jb
test
push
mov
dec
aas
dec
mov
retf
inc
add
push
into
dec
jo
jns
xor
add
adc
int3
inc
and
or
jno
push
mov
mov
add
inc
idiv
cmp
xchg
out
sahf
hlt
call
scas
movs
sbb
mov
lock
mov
mov
adc
jle
ss
fisub
out
push
cmp
push
mov
cmp
test
sbb
cwde
popa
cmc
inc
push
mov
neg
xor
sub
xor
xor
fwait
jle
fstp
movs
les
test
btr
push
adc
and
fistp
add
dec
adc
push
test
pop
ror
fidiv
popa
jle
mov
sbb
repnz
std
push
xchg
and
cmp
ja
pop
sbb
lahf
aas
mov
sub
mov
fwait
lods
lea
mov
jnp
fidivr
jmp
dec
xor
mov
pop
movs
fadd
cmp
inc
cdq
in
pop
xchg
xchg
jns
cmp
push
ins
mov
ins
sbb
inc
jns
sahf
outs
cmps
std
movs
pop
push
lods
int
icebp
cs
jge
stos
ins
sbb
test
xchg
adc
sub
push
cmps
dec
xor
retf
into
adc
movs
xchg
or
fdivp
pop
xchg
fs
sub
gs
xor
pop
scas
movs
nop
in
xor
mov
and
int3
mov
add
add
adc
outs
or
mov
add
in
ins
mov
outs
lods
sub
fucomi
pop
add
inc
sub
test
out
jl
test
cdq
loopne
pop
cdq
inc
ret
imul
adc
xor
jb
test
add
aaa
push
cli
pop
sbb
and
or
push
(bad)
enter
pop
or
shr
repnz
jae
inc
mov
shr
pop
xor
xchg
aas
fdiv
ror
sbb
push
in
loop
and
xor
inc
xlat
fmul
xor
sahf
movs
pop
pusha
shl
or
mov
inc
pop
cli
jg
fmul
dec
dec
jmp
ds
add
xchg
xchg
mov
inc
adc
pushf
out
adc
scas
daa
jmp
inc
jp
fsub
and
dec
cld
mov
(bad)
out
test
mov
and
enter
jo
(bad)
cld
shr
js
cmp
in
pop
stos
(bad)
cmp
int
adc
sub
(bad)
mov
repz
sub
retf
pop
sbb
(bad)
lods
(bad)
pop
inc
in
not
push
push
mov
xchg
push
in
mov
mov
in
test
mov
ss
retf
inc
mov
pop
dec
mov
pop
mov
cmp
pop
xchg
inc
adc
jno
push
push
stos
rol
dec
jmp
ins
pop
es
stc
add
ja
push
fidiv
cmp
test
adc
push
dec
xor
fwait
test
mov
and
sbb
inc
rol
add
sbb
jg
cmp
es
inc
add
fisub
in
loopne
ins
xor
clc
jne
ds
cld
mov
loop
aas
int3
push
sub
pop
(bad)
scas
mov
or
lea
jecxz
sbb
sub
sub
jbe
aas
adc
(bad)
icebp
add
inc
or
retf
fisubr
retf
jae
jbe
add
or
not
push
xchg
ds
ret
addr16
ins
mov
in
out
(bad)
mov
dec
mov
xor
pushf
dec
std
pop
ror
jmp
inc
pop
mov
adc
fs
jo
xor
mov
xor
push
(bad)
addr16
mov
sbb
jmp
mov
popf
pop
sahf
call
or
xchg
aas
lods
xor
add
jbe
xor
bswap
inc
mov
lds
sub
pop
mov
mov
pop
adc
push
sbb
out
mov
sub
xor
push
add
mov
jns
aaa
js
cs
ins
stos
cld
outs
cmps
jmp
push
push
imul
inc
sub
and
jno
(bad)
mov
adc
dec
aad
pop
cli
jnp
lahf
push
xchg
outs
inc
cmp
out
cld
mov
lahf
pop
sahf
mov
arpl
cmp
mov
mov
push
out
fwait
push
xchg
fdivr
or
adc
int
mov
lahf
scas
data16
sbb
ret
leave
in
in
sti
sub
stos
cmp
mov
jo
add
dec
pop
sub
stc
pop
jb
sub
push
pop
sbb
mov
int3
iret
scas
xor
cmc
xor
call
inc
or
adc
rcr
lock
daa
retf
inc
mov
xchg
cmp
and
mov
xor
shl
mov
pop
or
add
outs
into
xor
pop
push
or
pushf
mov
push
pop
movs
push
adc
movs
test
mov
mov
or
shl
dec
in
mov
aam
fstp
pushf
leave
and
xchg
mov
add
push
dec
scas
jl
push
into
dec
dec
xchg
mov
push
gs
sbb
jae
data16
mov
nop
and
adc
add
mov
mov
add
jmp
mov
pushf
mov
or
mov
and
std
mov
js
es
call
adc
test
dec
fbstp
repz
jle
enter
mov
in
shr
(bad)
repnz
add
bnd
hlt
or
sub
sub
call
icebp
fdivr
mov
mov
aas
mov
paddsb
inc
lds
and
mov
sub
xor
mov
test
cmps
sbb
cmps
dec
xor
add
in
dec
pop
popf
dec
jle
jmp
mov
enter
mov
iret
mov
ret
dec
out
adc
pop
or
int
mov
fnstsw
fwait
jg
mov
push
adc
in
scas
sbb
sahf
mov
test
adc
scas
repz
movs
pop
out
mov
sbb
icebp
fild
push
xchg
(bad)
std
cmps
and
sti
mov
leave
mov
bound
neg
or
sub
pop
es
xor
sbb
pop
out
jge
aas
out
mov
sbb
mov
mov
sub
dec
mov
es
outs
mov
lods
retf
push
sbb
push
cmp
(bad)
lds
fwait
stos
mov
mov
add
jmp
and
mov
iret
add
sbb
stc
push
js
mov
pushf
inc
(bad)
push
js
jnp
add
in
sub
data16
out
nop
pop
xchg
dec
ret
loop
outs
out
or
add
addr16
mov
xor
es
lock
jp
mov
hlt
inc
cmps
popf
inc
mov
sbb
cmps
dec
mov
sub
iret
push
mov
push
leave
mov
mov
fcomp
ds
xor
push
(bad)
pop
cmp
pusha
xchg
jae
jg
xor
dec
loop
in
push
jl
add
das
test
icebp
adc
shr
xor
add
add
mov
pop
dec
jg
adc
pop
aaa
inc
in
ficomp
ja
je
test
add
cmp
sbb
(bad)
adc
dec
dec
mov
jbe
mov
js
enter
daa
repz
nop
add
aad
sub
add
rcl
or
push
adc
jl
sbb
idiv
out
mov
add
scas
arpl
mov
xor
mov
out
retf
fcom
push
pop
retf
sbb
sbb
(bad)
repnz
mov
fcomip
sub
stos
or
movs
lods
push
push
test
xchg
dec
shl
div
xchg
adc
and
xchg
mov
movs
mov
gs
push
xchg
movs
jmp
ss
xchg
xchg
mov
xchg
or
xlat
mov
cmp
repz
and
sbb
clc
loop
imul
pop
xlat
jmp
(bad)
loop
or
jno
and
jbe
(bad)
in
repnz
popf
in
lods
mov
add
push
outs
cmp
mov
out
fcom
cld
leave
adc
fdiv
iret
pop
ror
jb
adc
div
arpl
test
jp
nop
inc
fmul
mov
jae
arpl
push
std
pusha
stc
test
fwait
fs
rcl
fwait
mov
add
pop
xchg
push
push
push
mov
mov
ficom
cmp
mov
push
loop
push
mov
cld
jmp
out
nop
out
js
lods
or
(bad)
ins
xor
push
or
sbb
leave
or
mov
xchg
stc
iret
shl
adc
imul
cmp
inc
arpl
xchg
movs
add
ds
add
stc
call
clc
push
lahf
mov
fadd
cmps
in
outs
adc
mov
lahf
cmp
daa
cmp
add
pop
je
jnp
cdq
and
arpl
idiv
std
loopne
ss
add
test
repz
fcmovb
imul
in
aad
(bad)
pop
cs
fldcw
or
or
and
dec
ds
mov
fisubr
pop
mov
cld
jl
mov
or
jmp
dec
sbb
adc
pop
push
pop
xchg
xchg
jae
pop
loopne
cmc
fld
dec
pop
(bad)
sub
jmp
jmp
mov
scas
in
xchg
gs
icebp
(bad)
fxch
push
cmp
fnstsw
ins
(bad)
ins
iret
sub
ins
xchg
aam
adc
mov
adc
loop
push
jns
ror
pop
mov
mov
hlt
test
rol
hlt
jp
shl
fild
push
gs
cmps
push
repnz
pop
add
out
aaa
inc
xor
mov
inc
add
mov
inc
pop
jne
out
xchg
cmps
mov
outs
push
mov
lea
iret
xor
jne
fwait
xor
or
add
sub
test
in
pop
fstp
out
test
out
outs
push
jle
out
push
jmp
inc
and
popf
xor
sub
and
movs
jmp
mov
std
push
sbb
push
adc
cmps
push
adc
and
stos
movs
mov
dec
xchg
fist
add
dec
imul
cmc
or
mov
out
and
repnz
jns
rcr
xlat
or
ins
sahf
push
cdq
xor
out
xchg
imul
mov
lods
mov
mov
cmp
std
fld
and
push
cmp
ror
dec
adc
push
data16
push
sti
iret
arpl
jecxz
pop
dec
(bad)
cmps
fld
jecxz
push
or
ffreep
xchg
pusha
jbe
push
fst
iret
jecxz
cmps
daa
dec
fs
gs
fbld
sub
pop
xchg
jno
sub
mov
inc
ret
data16
cwde
ret
cld
add
xchg
pop
mov
pop
pop
ror
push
mov
in
adc
hlt
add
fisub
les
and
aaa
xor
popw
adc
add
cmp
daa
cmp
scas
xor
xchg
mov
push
jl
push
xchg
stos
xchg
les
ror
xchg
dec
scas
jle
or
add
add
add
repnz
or
fwait
fwait
cmp
jb
mov
dec
or
stos
mov
fst
stos
and
test
loopne
xchg
push
mov
sub
test
jmp
push
pop
xor
cmp
ds
hlt
daa
loopne
push
(bad)
mov
les
aam
sub
inc
mov
test
sbb
popf
mov
add
ret
inc
cmc
add
pushfw
xor
call
outs
cmp
leave
pop
mov
push
mov
adc
sub
sub
pop
(bad)
xchg
jle
jne
jo
sti
mov
xor
xchg
movs
cwde
repz
fisub
cmp
adc
js
sbb
xchg
retf
dec
out
inc
cdq
mov
pop
pop
in
mov
jae
sbb
xchg
ds
not
sub
scas
aas
ja
out
dec
scas
or
test
jae
outs
ins
pop
mov
add
mov
pusha
mov
mov
call
xor
jmp
retf
mov
es
mov
sbb
mov
add
out
cli
loope
and
cmp
push
(bad)
cmc
pop
mov
rcl
int3
es
scas
or
and
imul
and
pop
push
jae
lea
fidiv
xor
sub
maskmovq
std
pop
cld
inc
outs
lahf
sub
int
jno
cwde
das
mov
adc
push
adc
retf
mov
cmps
retf
push
cs
mov
mov
mov
cdq
ins
pop
ror
sub
scas
inc
retf
ret
scas
jl
into
cli
add
leave
cdq
int3
(bad)
(bad)
jno
fisttp
xchg
mov
out
popf
test
push
pop
jo
and
shr
inc
sub
ds
sbb
sub
inc
push
out
inc
dec
loop
xchg
pop
cmp
add
push
nop
mov
fisttp
sub
stc
pop
dec
mov
sub
dec
mov
jbe
jecxz
jb
sub
sub
das
xchg
and
bound
mov
je
dec
cmps
stc
push
out
mov
sub
pop
sub
test
(bad)
repnz
mov
push
aad
pop
cwde
add
test
adc
call
lds
push
rcl
xor
sub
dec
mov
div
mov
mov
mul
pusha
inc
push
pop
shl
cmp
test
jecxz
out
add
ja
mov
sub
push
(bad)
bound
fs
cwde
pop
nop
in
jge
mov
test
call
lahf
and
jp
test
les
data16
xchg
xchg
xchg
mov
dec
mov
inc
sbb
scas
inc
xchg
cmps
xchg
jmp
out
fstp
cli
dec
push
out
ds
or
xchg
aaa
sbb
mov
call
dec
mov
ret
sti
jmp
jb
sbb
sub
std
push
mov
mov
test
xlat
inc
or
retf
clts
xor
or
dec
sbb
sar
jae
mov
sub
inc
imul
or
fs
mov
fdiv
cmp
inc
sbb
rcl
sub
jp
xchg
xlat
pop
and
jecxz
cmp
scas
jp
adc
mov
and
dec
enter
xchg
xor
sbb
inc
inc
rcl
icebp
jle
stos
movs
mov
popa
cmp
aam
or
pop
cmp
mov
popf
mov
lea
arpl
adc
mov
jo
mov
sub
inc
repnz
jmp
nop
pop
cwde
inc
pop
fdiv
shl
fwait
push
ds
jae
mov
repnz
add
stos
jle
ror
shr
sahf
mov
xchg
test
sub
mov
xchg
stc
mov
loopne
dec
jmp
xchg
dec
mov
lea
add
fsub
test
std
pop
push
jno
adc
fld
lds
mov
xchg
enter
mov
mov
sbb
pop
add
mov
pusha
xor
das
daa
pusha
add
mov
or
icebp
mov
shl
(bad)
(bad)
adc
add
jno
ja
dec
and
retf
sbb
enter
dec
xchg
sbb
popa
(bad)
(bad)
cmp
xlat
mov
jo
cmp
ss
cmps
stos
jecxz
ja
(bad)
fild
gs
or
push
cli
ror
rdtsc
xor
clc
add
dec
test
sub
lock
retf
sbb
int3
aaa
sar
dec
leave
push
test
imul
add
mov
xchg
dec
jb
or
or
loopne
lock
jmp
push
lods
jae
mov
adc
dec
repz
out
inc
and
in
repnz
shl
adc
push
test
in
add
nop
ja
in
xor
mov
adc
xchg
dec
xor
movs
push
or
lods
in
jg
pop
adc
fucomip
xchg
push
lds
mov
inc
adc
push
lock
test
xlat
call
scas
sub
dec
sbb
aam
xchg
aas
iret
cwde
retf
inc
pop
stc
lds
repz
pop
test
int
mov
adc
gs
cmp
pmaxsw
lods
push
mov
jmp
scas
and
out
out
fwait
mov
xchg
arpl
lahf
lahf
adc
dec
xchg
pop
pop
(bad)
jle
adc
cmp
push
dec
test
xchg
push
ins
pop
inc
in
xor
mov
push
retf
pop
pop
test
js
mov
cmp
ja
jbe
fbstp
cmp
test
push
lods
add
rcr
adc
outs
fiadd
sbb
mov
dec
push
dec
or
cli
jmp
jb
xor
add
clc
fild
jo
adc
pop
in
dec
push
add
xchg
imul
xor
inc
aam
cmp
xor
cdq
cmp
push
jp
lea
idiv
fdivr
dec
jnp
fisttp
aad
push
inc
adc
dec
add
arpl
or
push
jg
mov
pop
mov
ror
sti
and
mov
adc
adc
sbb
mov
loop
mov
or
es
ret
data16
retf
mov
lock
retf
test
fst
lds
fcom
and
cs
lds
clc
pop
xchg
int
arpl
push
pop
dec
aas
cmp
inc
sub
sub
push
cs
icebp
mov
add
cmps
mov
cmp
cmps
(bad)
cmp
in
lahf
mov
or
xor
jp
pop
push
and
cmp
push
sub
inc
jp
mov
pushf
popa
pop
xchg
popf
mov
cli
(bad)
sti
sub
adc
mov
inc
ficomp
xchg
popa
push
lahf
fisub
sub
and
ins
sbb
dec
out
adc
inc
cmp
inc
inc
xchg
sbb
nop
mov
lods
in
jne
out
stc
cmc
imul
sub
xchg
pop
call
icebp
mov
inc
mov
mov
sub
in
adc
(bad)
stc
fwait
mov
outs
xor
fild
mov
mov
pop
rcl
add
call
push
push
cli
test
(bad)
inc
inc
mov
mov
hlt
sub
cdq
add
stc
ins
ficom
neg
inc
jp
inc
jbe
pop
dec
dec
nop
or
icebp
loopne
lds
daa
push
(bad)
ins
cmp
sbb
scas
jl
imul
jp
dec
pop
mov
test
mov
enter
dec
mov
int3
or
test
mov
sbb
cs
data16
cmp
shl
or
xchg
sub
retf
mov
jl
push
das
in
jmp
aas
push
loop
push
inc
push
mov
aaa
popa
cli
push
lods
push
cmps
cmps
mov
lahf
xchg
shr
dec
out
adc
xchg
mov
cmp
fcomi
retf
inc
out
sbb
test
xlat
jbe
fld
add
xor
movs
sub
cmps
push
or
add
sub
and
cmp
push
dec
pop
popf
(bad)
call
js
mov
pop
mov
jns
add
sub
xor
lods
pop
(bad)
retf
push
mov
popa
iret
add
mov
mov
retf
and
adc
adc
cmp
pop
mov
xchg
fsub
lds
xlat
fsub
in
scas
jo
cwde
test
ret
jno
int3
jno
or
ins
cmp
mov
cwde
mov
(bad)
into
and
push
lock
jmp
dec
in
and
or
les
pop
mov
leave
pop
add
xchg
retf
pop
pop
dec
inc
push
add
and
cwde
pushf
mov
dec
xor
cmp
ins
fst
sbb
arpl
cmp
cmp
xlat
mov
jg
data16
and
loop
stos
mov
popf
std
xor
nop
bnd
test
outs
retf
lahf
add
cdq
cmps
push
inc
cmp
sbb
imul
and
fdiv
cmp
adc
pop
je
push
mov
xor
fldenv
std
fcom
dec
mov
sub
sbb
fmulp
rcr
shr
sub
ins
xor
lods
sub
dec
(bad)
mov
mov
fmul
ficomp
dec
xchg
add
xor
ss
(bad)
push
(bad)
fst
and
loope
mov
ret
dec
dec
jl
dec
push
inc
inc
and
xor
ret
mov
sub
mov
jbe
pop
and
inc
(bad)
or
mov
neg
ror
int3
inc
sub
lods
lds
or
mov
imul
or
(bad)
sbb
cmps
add
or
inc
in
pop
push
pop
sbb
cmps
lods
jge
movs
pop
inc
and
and
mov
gs
pushf
jp
fbld
or
fcmovnbe
pop
push
sahf
adc
push
in
cli
mov
aaa
or
out
dec
fst
pop
mov
mov
sub
cmp
sub
arpl
xchg
pop
test
call
imul
or
sub
les
adc
sub
jp
mov
sti
imul
mov
cmps
das
clc
mov
push
dec
jecxz
xor
cmp
ds
mov
in
inc
and
imul
inc
add
dec
or
push
adc
pop
push
and
stos
add
les
jns
xchg
mul
inc
xor
dec
jge
cli
in
xchg
cmp
es
push
movs
(bad)
cmp
dec
aaa
push
push
ins
mov
dec
es
mov
loope
or
scas
dec
cmp
rcr
push
push
mov
jbe
mov
shl
mov
and
mov
jle
sub
(bad)
and
lea
or
repz
add
jmp
xchg
ss
or
mov
pop
ja
dec
mov
cmps
pop
inc
push
push
and
mov
xor
inc
jne
inc
fdivp
retf
push
sar
test
aas
mov
cld
cmp
sub
mov
lods
enter
and
arpl
dec
xchg
shr
sub
aad
mov
mov
in
sub
(bad)
adc
(bad)
imul
xor
sub
dec
vphaddudq
mov
jg
jb
into
mov
pop
push
adc
inc
outs
cmp
inc
jp
rcl
mov
dec
jno
repnz
pop
mov
mov
pop
imul
std
fidiv
outs
jo
or
out
mov
ds
sahf
ins
pop
mov
jge
mov
fwait
adc
outs
ret
(bad)
pushf
cs
into
call
mov
mov
stos
dec
stos
stos
push
lahf
cdq
mov
pop
or
test
or
or
push
jg
test
(bad)
movs
cmc
pushf
jecxz
cmps
inc
mov
scas
sbb
mov
mov
xor
cdq
imul
mov
add
cli
and
nop
call
add
add
repz
cmp
outs
lods
jmp
mov
nop
rcr
jl
mov
ins
pusha
jne
xchg
push
js
fadd
bound
inc
daa
mov
cli
call
push
xchg
gs
and
fs
cdq
call
aaa
vpsubd
sbb
cwde
into
mov
push
popf
add
cli
push
dec
mov
inc
rcr
pop
pop
pusha
retf
hlt
mov
push
jmp
hlt
dec
mov
sar
mov
mov
in
js
lahf
scas
test
cmps
imul
aam
sub
jns
jmp
dec
mov
push
ror
stc
jecxz
stos
int3
bound
in
scas
ins
mov
js
push
sti
mov
leave
frndint
sbb
fprem
movs
rcr
cmp
mov
push
sub
or
mov
(bad)
push
jecxz
pop
js
mov
sub
test
adc
mov
imul
sbb
les
adc
push
iret
ins
jb
int
sbb
ja
and
pop
(bad)
pop
mov
pop
and
push
cs
sbb
add
jl
jmp
and
shl
shr
(bad)
jge
call
cmp
mov
mov
(bad)
sub
repnz
cmp
outs
dec
or
dec
cdq
rcr
mov
sbb
repz
inc
mov
mov
lods
shr
and
out
cwde
ficom
ret
pop
out
ret
inc
ror
jmp
push
cdq
clc
out
mov
pusha
mov
inc
cmps
pop
loopne
or
xor
mov
ficomp
mov
xlat
jo
in
pop
jle
stos
xor
aas
lock
aas
mov
lahf
retf
pop
or
xor
sbb
loope
fcomp
jmp
sbb
popf
stc
pop
into
(bad)
lds
popw
into
aas
xor
mov
dec
loopne
dec
in
cmp
pushf
mov
adc
rol
(bad)
adc
aaa
mov
xchg
pop
mov
xor
inc
cli
add
push
movs
loope
pop
sbb
xor
hlt
inc
inc
in
ss
push
push
push
ja
lock
cmp
inc
push
arpl
in
mov
dec
mov
scas
sbb
xor
and
(bad)
stos
xchg
outs
jmp
daa
movs
out
cmp
sbb
or
xchg
sbb
add
test
adc
jge
add
mov
adc
jae
cmp
xor
adc
fsubr
fistp
test
push
xchg
mov
aaa
jge
cs
cmp
xchg
nop
mov
pop
cmp
or
sbb
xor
clc
out
mov
mov
sub
js
mov
fdiv
sahf
test
add
cli
inc
xchg
inc
out
push
in
cmp
aaa
fistp
pop
push
bound
int
sbb
std
cld
and
loopne
ds
pop
xchg
inc
mov
out
stos
xchg
mov
out
jle
lods
xor
movs
out
add
or
or
retf
sub
inc
push
adc
add
movs
jno
inc
xchg
lods
and
xchg
sub
cmp
xor
mul
push
jne
dec
xlat
lods
stc
dec
in
mov
test
push
mov
jg
jl
jge
pusha
into
lds
ficomp
pusha
push
jmp
pusha
(bad)
movs
cmp
test
xchg
or
lods
clc
shl
xor
mov
sub
in
sbb
xor
sbb
popf
jns
pop
daa
add
inc
cmps
mov
loop
mov
mov
adc
dec
xchg
xor
jns
ret
popa
out
jmp
inc
scas
push
loopne
mov
jge
iret
es
fimul
test
gs
cmp
adc
loopne
cmps
jmp
aas
dec
outs
jle
fld
jae
cmp
imul
xchg
lds
mov
ret
mov
push
push
addr16
sbb
cmp
and
xor
gs
add
bound
or
xor
ds
hlt
adc
es
pusha
test
jg
jle
jo
cmp
mov
aad
pushf
mov
mov
rep
mov
bswap
pop
shl
pushf
or
jmp
dec
mov
inc
add
(bad)
test
rcl
enter
jmp
test
xchg
mul
pop
pop
sbb
adc
repnz
or
pop
push
inc
loopne
sbb
sbb
sahf
push
fidiv
add
xor
add
jne
cmp
jg
mov
xchg
scas
enter
mov
jae
add
(bad)
fbld
lahf
inc
fild
jmp
mov
aam
pop
mov
ds
sti
or
inc
jnp
cdq
sub
pop
aam
sti
push
fisub
mov
cdq
jmp
fbld
fild
lahf
or
cmp
in
imul
or
dec
test
or
and
dec
mov
test
and
jp
and
fidiv
rol
jmp
jae
mov
mov
lods
in
mov
mov
jns
pop
popf
inc
fdivr
mov
ja
stos
sub
mov
or
adc
addr16
add
pop
repz
scas
xchg
cmp
shl
pop
or
je
xchg
mov
mov
push
mov
rcl
ins
pop
mov
mov
xchg
dec
int3
cdq
mov
mov
sub
cli
add
lock
xchg
push
into
shl
lea
or
sub
mov
hlt
cmp
pop
xor
mov
cdq
inc
adc
pusha
mov
imul
ss
cmp
std
stos
(bad)
jmp
xor
push
sbb
xor
jmp
daa
pop
and
mov
sahf
pop
xchg
jnp
cmp
ds
xchg
fcom
mov
mov
xchg
dec
sbb
inc
mov
mul
(bad)
mov
pop
call
aaa
sub
mov
cmp
clc
ret
bound
pop
xor
(bad)
ja
loope
dec
jmp
mov
in
sti
dec
ins
dec
jmp
in
ror
mov
xor
add
mov
fucomp
inc
addr16
or
movs
sub
popa
jo
scas
bound
mov
movs
jmp
and
mov
sbb
mov
push
leave
pop
lds
xor
cld
sub
into
rcr
fisub
dec
je
inc
xor
int3
popa
xchg
(bad)
fwait
mov
adc
adc
or
nop
xor
enter
leave
scas
test
and
out
iret
daa
out
or
pop
inc
mov
add
sub
(bad)
(bad)
retf
xor
lods
pop
ins
shr
pop
into
js
sub
inc
jns
fnstsw
lds
xor
cmp
dec
popf
stc
jp
shr
or
inc
push
cmp
mov
pop
ret
sbb
icebp
int3
repz
push
add
mov
pop
imul
dec
cs
xchg
lds
stos
adc
push
xor
fdivr
sub
adc
or
pop
push
mov
jo
add
mov
enter
dec
loop
sbb
jmp
mov
cwde
gs
loope
loop
mov
call
mov
out
sub
xor
mov
pop
mov
jnp
shl
push
dec
dec
test
stc
imul
mov
push
pop
int
lds
shl
dec
jmp
ds
int3
icebp
push
mov
xor
jp
xor
xchg
dec
jp
fild
sub
xlat
and
outs
mov
ja
call
jno
lods
cmp
bound
and
inc
(bad)
repz
loop
mov
push
pop
out
adc
loope
test
ret
(bad)
stos
mov
inc
or
shl
xchg
cmp
sbb
xchg
iret
adc
add
and
jp
bound
sbb
push
outs
adc
jle
mov
xchg
lock
inc
test
imul
push
das
imul
fcom
mov
test
push
push
test
rcr
fdivr
dec
sub
cmps
leave
iret
les
add
mov
jle
or
es
add
sti
add
icebp
adc
add
mov
dec
loope
ror
pop
push
sbb
inc
and
and
fmulp
xchg
rcl
es
stos
xadd
arpl
scas
fst
cmp
out
ficomp
inc
cld
mov
mov
inc
mov
fstp
pusha
or
or
jle
xor
mov
fsubrp
repnz
mov
retf
xchg
lods
push
pop
pop
sub
jp
xor
add
xor
adc
imul
sbb
sub
jo
mov
psubsb
dec
lods
pop
sbb
jle
sbb
lahf
dec
cwde
jbe
jbe
mov
loop
rol
add
xchg
or
push
fisttp
movs
dec
sub
outs
mov
ss
fadd
xchg
and
xor
sub
leave
test
jge
in
fist
pop
daa
lahf
popa
fbld
jns
movs
popf
and
int3
add
xor
cmps
daa
fldenv
adc
push
out
fcmovne
jae
imul
sub
int3
out
jne
dec
inc
test
and
fcom
pop
movs
int3
mov
je
mov
xchg
sti
and
stos
mov
and
test
lds
out
xor
adc
or
inc
(bad)
call
dec
pop
inc
bnd
int
adc
or
fdiv
jmp
xchg
repz
sbb
xchg
pop
scas
xor
mov
cmp
dec
and
xchg
dec
in
xlat
int3
fs
inc
(bad)
push
(bad)
ja
shr
ret
add
sbb
push
inc
ins
out
lock
jmp
add
or
mov
mov
iret
adc
(bad)
std
sub
cmp
mov
dec
cmc
push
data16
mov
pushf
jae
jle
cmp
xchg
fs
pop
imul
loope
mov
lock
mov
stos
jb
std
stos
dec
nop
inc
cmp
mov
xchg
mov
xchg
ret
in
push
xchg
(bad)
cs
xchg
mov
ins
shr
cmp
cmp
movs
addr16
(bad)
fisubr
(bad)
push
aad
adc
mov
push
lock
shl
lods
and
ja
icebp
repz
mov
popa
push
test
pop
pop
sahf
fisub
stos
push
xchg
xor
sub
and
mov
fild
ja
ins
cmp
and
dec
xlat
dec
lods
(bad)
or
and
fldenv
inc
pop
les
movs
cld
sbb
jno
mov
jle
adc
lods
xchg
dec
and
push
les
cmp
sbb
mov
fst
fs
es
ret
cmp
int
dec
push
mov
aam
push
dec
jnp
push
sub
js
jb
cmp
inc
jno
mov
test
add
outs
ja
pop
sbb
cli
mov
leave
push
or
pop
xor
push
enter
push
or
cs
(bad)
or
in
pop
mov
out
cmp
cmp
data16
adc
cmps
addr16
push
sbb
mov
and
rol
xor
jo
xchg
mov
call
fidivr
je
movs
cmps
jge
push
or
(bad)
cmc
sub
jmp
mov
cs
dec
xchg
stos
mov
aad
xor
hlt
push
jg
push
push
adc
dec
lahf
(bad)
call
xchg
aaa
popf
push
fnstsw
cmps
sti
xor
dec
sti
pop
rcr
push
dec
rol
xchg
mov
inc
lock
call
add
sub
add
push
(bad)
and
imul
jmp
stos
xor
mov
in
inc
dec
cmp
push
cmp
adc
pop
in
push
cmp
adc
jmp
sub
repnz
test
leave
scas
ds
sbb
cmc
outs
jmp
adc
outs
pabsd
xchg
adc
sbb
adc
mov
aad
int3
jne
inc
xchg
xlat
add
push
in
mov
(bad)
cmps
sub
pop
mov
inc
fs
fldcw
lds
aas
data16
inc
mov
mov
into
pop
mov
fist
mov
push
sub
jae
cmp
mov
mov
inc
js
rcr
leave
daa
cmp
dec
mov
cli
push
cmp
dec
(bad)
loopne
xchg
pop
not
push
dec
je
(bad)
cs
jmp
in
data16
aad
jg
out
pop
jb
add
scas
fwait
or
push
or
mov
sub
mov
xchg
addr16
loop
stos
sbb
retf
adc
jnp
sub
mov
jmp
dec
pop
push
sahf
in
aad
fwait
test
lods
and
pushf
fs
movs
sub
sbb
xlat
jae
outs
out
xchg
sbb
jl
clc
lea
movs
or
and
je
(bad)
pop
mov
shl
xchg
lock
mov
xchg
aaa
jns
aaa
pushf
inc
aas
push
push
mov
adc
fadd
dec
ret
cmp
inc
cmps
pop
dec
and
mov
mov
dec
add
jmp
or
xor
(bad)
and
dec
mov
mov
or
sar
fist
sbb
les
pmaxub
jo
outs
jmp
jnp
jp
lea
repnz
std
retf
pop
out
xor
imul
mov
inc
xor
xchg
rcl
jmp
fwait
mov
sub
mov
pop
lahf
cmp
add
mul
ins
dec
or
mov
clc
mov
pop
rol
xchg
push
int3
pop
sahf
and
call
jmp
xchg
adc
or
adc
stc
jnp
cdq
(bad)
jns
pop
sbb
mov
icebp
sub
je
pusha
scas
nop
pop
in
cmps
js
in
mov
ficom
sti
dec
pusha
push
loopne
xchg
les
push
or
stos
and
call
xchg
sahf
push
cdq
jnp
inc
loope
(bad)
mov
int3
not
jns
mov
mov
mov
lock
loope
push
stos
cmp
addr16
bound
inc
inc
add
cmp
or
repz
loop
icebp
loopne
inc
inc
mov
cmp
gs
cld
mov
sahf
movs
xchg
xchg
xchg
js
(bad)
pop
and
jae
dec
push
add
fadd
inc
loopne
or
and
jp
fisubr
call
push
cmp
sti
and
and
jg
mov
mov
add
adc
push
mov
(bad)
lods
jo
(bad)
fmul
inc
stos
je
ret
dec
push
pop
pop
and
pop
pop
ret
ins
pop
sub
sbb
mov
sbb
push
popa
mov
cmp
in
dec
mov
xor
add
and
lods
icebp
pusha
out
(bad)
cmp
scas
xchg
jnp
xor
nop
sbb
pop
in
je
sub
xor
loope
and
inc
mov
jmp
jmp
outs
retf
sbb
stos
cmp
sbb
push
sub
sbb
jle
or
sub
mov
mov
shl
lods
pop
scas
fwait
jg
fmul
pop
adc
mov
pop
cmps
ret
dec
xchg
stos
stos
cmps
ja
xor
pop
xchg
les
icebp
movs
in
call
inc
sbb
hlt
xchg
lds
sbb
out
mov
aas
adc
and
or
mov
add
mov
mov
cmp
adc
push
dec
mov
jbe
enter
aaa
xchg
(bad)
(bad)
cmp
fsub
sbb
pop
xor
scas
pop
inc
inc
inc
aas
push
retf
lahf
mov
cmp
and
push
cmps
dec
cmp
push
jns
pop
js
es
sub
dec
aas
mov
call
jmp
xor
xchg
inc
mov
mov
sbb
das
mov
pop
lods
mov
out
loopne
jg
and
inc
inc
mov
loopne
ss
sub
xor
xchg
shr
test
sar
outs
cmp
push
test
push
out
xlat
jne
call
rol
(bad)
sti
mov
(bad)
mov
je
out
push
sub
(bad)
push
jp
gs
mov
ror
hlt
xor
cmps
mov
and
cmp
pop
daa
imul
xchg
ret
sti
push
sbb
push
sbb
sub
fiadd
sbb
leave
sbb
fidivr
repnz
sub
mov
lock
fwait
retf
sti
out
lds
cli
sbb
jbe
push
in
sbb
js
inc
repz
jmp
mov
dec
outs
test
rcl
adc
pop
jbe
loope
(bad)
je
adc
call
dec
inc
xchg
mov
sbb
fsub
inc
(bad)
fist
xchg
mov
scas
adc
or
ror
jb
scas
shl
xor
imul
sub
jl
stos
xchg
jmp
mov
fs
jbe
add
adc
jb
push
push
sub
in
lds
out
cmp
xlat
inc
cld
mov
sbb
retf
out
xlat
aas
(bad)
push
pusha
nop
sub
xchg
cmc
(bad)
jmp
sbb
jnp
popa
mov
xchg
xchg
or
adc
dec
cmp
jp
sub
(bad)
shl
sbb
ficomp
push
mov
xor
mov
jnp
mov
push
daa
lea
or
mov
jmp
call
loop
add
xor
fstp
adc
pop
xor
pop
sbb
(bad)
stos
pop
or
(bad)
push
dec
pushf
inc
popa
pop
cmps
test
fisttp
mov
aam
sub
add
mov
iret
iret
push
push
iret
(bad)
mov
xor
push
mov
sti
push
cmps
xchg
jmp
mov
push
retf
and
fcomi
push
iret
mov
or
int
adc
pushf
xchg
sbb
or
push
mov
and
imul
sbb
(bad)
adc
inc
adc
movs
pushf
or
cmc
test
adc
leave
scas
mov
(bad)
push
lahf
pop
cld
push
dec
loop
fild
daa
jmp
sub
ins
pop
and
xchg
dec
imul
inc
out
cmp
iret
pop
in
push
test
lahf
dec
movs
jl
bound
or
jmp
mov
mov
cmp
jns
mov
jle
pop
int3
xchg
jg
fcomp
sub
mov
sbb
push
stos
cld
jge
test
sub
call
inc
fsubr
cmp
call
scas
leave
pop
scas
pop
dec
pop
ja
sbb
adc
add
call
mov
leave
and
dec
mov
sbb
pop
mov
jb
outs
xor
cwde
stos
xor
dec
aad
jne
call
push
rcl
loop
popf
xor
test
ret
sub
mov
cmp
out
mov
inc
retf
cld
mov
mov
(bad)
push
fwait
mov
inc
ret
inc
out
jns
add
or
je
fs
inc
out
add
loop
into
fcomp
xor
sbb
push
not
push
cwde
rol
add
jmp
or
mov
fst
xchg
xchg
sub
sub
cmps
loop
dec
je
xor
clc
sbb
je
int
jns
cmp
ins
sub
jmp
and
adc
movs
jb
js
add
(bad)
jg
leave
stos
jmp
movs
sti
imul
movs
arpl
mov
mul
addr16
mov
adc
std
test
push
sti
icebp
sbb
pop
lahf
mov
test
inc
cmp
lahf
es
pop
fldenv
dec
popa
loope
xor
xlat
pusha
ficomp
fist
inc
mov
cmp
cmc
xchg
fbld
add
imul
jb
sahf
nop
js
xor
dec
or
clc
or
enter
cdq
dec
mov
loope
daa
or
pushf
imul
or
into
push
jmp
imul
rol
fwait
daa
dec
pop
sub
loope
inc
mov
xchg
pop
repz
and
cvtdq2ps
outs
and
or
je
pop
rol
xchg
sahf
subps
retf
cmp
sbb
and
mov
dec
adc
cld
call
mov
les
dec
and
jo
sbb
push
xchg
pushf
xor
jecxz
mov
int
cli
pop
enter
sbb
or
and
mov
rcr
pop
mov
mov
out
xchg
enter
push
add
mov
movs
mov
std
lock
pop
sti
xchg
fld
movs
jecxz
(bad)
nop
rcr
sar
mov
pop
xor
ret
pusha
and
popf
in
ret
stc
movs
inc
push
pop
jnp
mov
sbb
xchg
mov
mov
add
jle
jle
sbb
jae
test
sub
mov
xor
and
out
stos
dec
rcr
fild
jae
mov
and
imul
ret
int3
adc
or
jg
cwde
adc
sub
inc
mov
call
add
inc
inc
mov
mov
loope
std
ins
js
cs
mov
xchg
xchg
stos
not
cmc
fs
adc
out
xchg
retf
sub
push
pop
or
jnp
dec
sbb
sub
retf
lods
and
push
aad
xchg
inc
mov
ret
xchg
sbb
fsubr
inc
pusha
je
jo
or
lahf
jmp
mov
pop
add
dec
jno
in
inc
or
imul
retf
sbb
je
jmp
outs
lock
ret
cmps
(bad)
ss
add
nop
retf
mov
sub
dec
je
mov
xchg
aaa
and
out
jns
stos
out
jnp
xchg
and
jno
pop
mov
les
dec
aaa
in
adc
loop
cmovns
out
bound
xchg
(bad)
adc
pop
imul
cmps
push
out
add
cmp
jge
out
int3
aaa
cmp
and
cmp
mov
loop
push
push
jne
add
shr
dec
sbb
(bad)
test
mov
xor
fwait
and
inc
jnp
lahf
in
cmp
test
mov
aam
mov
mov
xchg
daa
data16
mov
lods
jle
mov
add
cmp
repnz
daa
mov
test
out
push
push
add
push
pop
xchg
add
and
fstp
xchg
fisubr
imul
mov
pop
retf
enter
jns
sub
mov
fs
sar
scas
shr
jmp
xlat
mov
call
fsubr
mov
mov
sub
loope
cmp
adc
and
dec
inc
call
popf
xchg
mov
je
sahf
popa
mov
cmp
cmp
mov
fwait
mov
cmp
sub
lock
sbb
xchg
xor
ret
stc
push
hlt
test
cmp
das
outs
fild
dec
pop
push
int
movs
mov
mov
lods
or
or
fst
inc
lods
push
cld
cmps
fwait
nop
in
jbe
aam
add
ins
add
cmp
sbb
test
sar
dec
mov
sub
inc
and
mov
cdq
out
push
fisttp
nop
pusha
out
xchg
aas
lea
pop
lods
pushf
imul
jbe
push
jbe
mov
and
dec
ret
push
shr
sbb
mov
in
nop
xchg
shl
ins
push
cld
jle
retf
repz
sbb
bound
stos
jmp
jge
cld
(bad)
(bad)
(bad)
retf
mov
inc
mov
pop
popa
sbb
jge
xchg
cwde
(bad)
mov
adc
int3
out
mov
jg
cmps
imul
or
in
shl
int
fwait
xchg
leave
(bad)
mov
stos
add
(bad)
xchg
(bad)
call
dec
aam
adc
adc
mov
movs
in
or
mov
loopne
lods
push
adc
dec
cmp
loope
retf
(bad)
cmp
test
or
mov
in
add
aam
dec
outs
fs
or
sub
sahf
adc
stos
ret
mov
xchg
cmp
sbb
pop
dec
xor
(bad)
sbb
sbb
mov
shl
and
dec
out
ret
cdq
or
pushf
xor
call
mov
dec
add
nop
cdq
cdq
push
dec
mov
or
arpl
pop
push
out
shl
mov
lods
sub
and
jbe
cs
xor
and
jmp
jp
jns
stos
mov
in
pushf
call
inc
stos
dec
push
sahf
stc
arpl
lods
xor
fst
daa
xor
push
and
xchg
(bad)
jne
or
fs
jge
adc
mov
(bad)
mov
lods
mov
lods
cmp
(bad)
shl
sbb
sub
pop
jo
inc
mov
int3
mov
dec
dec
rcl
jmp
push
(bad)
pop
iret
and
add
pop
pop
fsub
cmps
aam
cmp
shl
sbb
jno
mov
or
sub
stos
rcr
inc
mov
push
sub
dec
retf
popa
(bad)
sub
inc
lea
pop
mov
jb
mov
xchg
retf
push
mov
es
sbb
arpl
rcr
popf
push
call
pop
jle
sbb
push
pop
pop
in
aaa
mov
jecxz
dec
loopne
leave
retf
in
test
mov
sub
push
adc
dec
outs
pop
fimul
int3
ret
push
mov
xor
xor
out
loopne
jb
jo
imul
std
(bad)
mov
nop
shr
pop
test
sub
push
inc
sub
bnd
jge
loopne
nop
retf
scas
xor
(bad)
mov
xchg
repnz
and
mov
or
fimul
mov
xchg
push
pop
int3
and
daa
ss
in
rol
lahf
cli
mov
jb
jg
add
jecxz
rcr
outs
aad
add
push
and
ss
aam
les
cs
cld
sbb
sbb
std
lahf
xor
test
mov
xchg
push
iret
arpl
ffree
push
push
mov
and
scas
sbb
mov
sbb
lea
or
sbb
dec
mov
add
fcomp
test
cdq
xchg
icebp
stos
movs
int3
mov
xchg
adc
push
loopne
jg
xor
inc
push
hlt
loopne
movs
mov
ins
ins
xchg
or
or
dec
sbb
sti
mov
or
in
sahf
adc
test
outs
xchg
clc
leave
push
or
sbb
cwde
pusha
dec
pop
ins
mov
imul
pusha
cdq
add
mov
scas
(bad)
fld
aad
adc
cmp
add
jb
xor
iret
movs
in
inc
(bad)
pop
xchg
bound
nop
je
cmc
loop
xor
jne
mov
xchg
mov
sbb
sub
mov
adc
call
mov
loop
xchg
inc
shr
jle
xor
jle
stos
ror
push
shl
aas
push
test
cmp
xor
mov
rol
in
out
jecxz
aas
dec
push
and
push
js
and
inc
xchg
scas
out
dec
aas
imul
ja
lods
and
xchg
cmp
mov
mov
(bad)
scas
cmps
dec
pop
push
pop
pop
jecxz
fstp
sub
jmp
mov
mov
sbb
sar
sub
int3
imul
pop
(bad)
(bad)
into
fs
sub
(bad)
data16
pop
pop
ret
sbb
mov
cmp
lahf
push
loopne
pop
inc
xchg
fs
mov
rol
jp
outs
jmp
sbb
pop
fist
sbb
cmp
test
xchg
jae
test
test
les
sbb
xchg
jl
call
enter
movs
fwait
pop
sahf
add
cmp
push
pop
mov
xchg
xchg
iret
dec
div
mov
sub
rcr
js
pop
jae
cmp
xchg
cmp
aam
push
cld
xchg
sbb
fwait
xor
leave
mov
mov
xlat
push
pusha
adc
mov
iret
hlt
call
aas
push
cli
pop
popa
(bad)
in
sub
lahf
jo
adc
inc
shl
pusha
xor
in
xchg
jae
cdq
xor
aad
es
fisttp
jo
rol
pushf
push
shr
mov
loop
jb
adc
xchg
(bad)
fbstp
pop
mov
sub
test
arpl
pop
sbb
mov
leave
pop
mov
popf
jecxz
aad
cmp
cwde
shl
xchg
cdq
add
fistp
in
mov
es
jle
mov
pop
(bad)
popf
inc
ret
aas
add
rcl
dec
lea
inc
int3
and
ficomp
movs
sub
aam
add
pop
test
scas
jp
cmp
imul
push
dec
dec
pop
pop
mov
mov
test
add
enter
cmp
fisub
push
adc
mov
fbstp
xor
mov
inc
iret
arpl
out
xchg
and
iret
dec
jo
rol
sbb
sbb
in
nop
inc
xchg
cmp
xor
add
cmp
jne
loop
ins
cmps
push
xor
pop
ret
jo
add
push
cmp
rcl
inc
xor
shl
adc
imul
call
inc
mov
aas
mov
stos
sete
mov
scas
xor
mov
test
mov
push
(bad)
cmp
cmp
push
mov
or
dec
adc
inc
sub
sub
pop
xchg
or
out
sub
or
add
or
and
aam
jb
xchg
add
adc
test
push
loope
fwait
test
adc
xor
pop
sub
adc
(bad)
in
ss
push
xchg
es
stos
fwait
xor
mov
adc
add
fdiv
stos
jae
cs
mov
clc
repnz
dec
sbb
outs
push
test
sub
mov
push
inc
or
imul
scas
imul
sar
xor
fwait
ins
shr
push
fcomp
inc
dec
stos
daa
jnp
jo
dec
test
lock
es
scas
mulps
shr
xor
pop
inc
ins
je
cld
scas
add
jmp
addr16
adc
lods
cmps
and
ja
(bad)
lahf
mov
xchg
mov
xchg
add
scas
fstp
mov
mov
pop
and
sar
push
(bad)
xchg
test
dec
pop
xor
cs
nop
aam
out
jmp
pop
adc
mul
xchg
inc
arpl
sub
das
jle
stos
sbb
or
data16
push
int3
or
cdq
sub
popf
sbb
sti
or
jbe
cld
pop
push
adc
sahf
sbb
dec
shr
mov
push
fcomip
jae
stc
cli
ss
inc
fnstsw
aaa
pop
mov
jbe
adc
stc
jmp
cmp
rol
gs
and
imul
gs
call
loopne
or
push
adc
cmp
xor
sub
int
push
cmc
popf
test
aad
xor
clc
push
sbb
mov
adc
mov
sahf
mov
xchg
call
sub
nop
inc
sbb
jmp
dec
and
and
(bad)
(bad)
mov
fs
or
bound
push
fincstp
fcomi
xor
stos
aad
or
out
aam
or
push
aad
daa
or
mov
stos
sbb
pop
mov
mov
push
loopne
scas
or
ja
and
dec
jb
pop
jp
enter
inc
out
arpl
cmps
(bad)
sti
sbb
xchg
in
aam
imul
rcr
xchg
dec
xchg
ret
and
xchg
add
pop
push
sub
adc
pop
pop
xchg
push
cli
push
shl
dec
pop
data16
cmp
scas
mov
dec
xchg
(bad)
lods
push
jmp
gs
mov
je
ins
sub
loop
cli
(bad)
retf
inc
pop
push
mov
jnp
rcr
xchg
push
outs
test
xchg
icebp
xor
pop
mov
mov
push
mov
dec
cmp
aas
add
sub
mov
ja
aad
and
sub
rep
sub
mov
les
jmp
aas
ja
jle
popf
cmc
push
push
in
fnstcw
stc
cli
and
cmps
mov
clc
cmps
push
stos
std
xor
push
test
push
inc
test
gs
test
retf
out
push
aam
push
lea
or
lds
out
push
and
adc
or
xchg
jae
pop
sbb
pop
(bad)
out
call
or
adc
popa
push
(bad)
and
int3
mov
pop
push
lods
test
ds
mov
inc
cwde
push
test
sub
fisubr
popa
cmc
ds
sbb
inc
fsubr
cli
retf
mov
push
fidiv
mov
jmp
xor
jno
mov
imul
jp
sbb
rcr
and
xor
mov
dec
adc
pop
mov
jp
sbb
les
mov
pop
mov
adc
add
xchg
stc
and
fmulp
stos
jns
dec
iret
pop
jno
movs
int3
frstor
jno
sub
adc
ins
xor
xchg
dec
adc
scas
mov
dec
lahf
cli
mov
hlt
bound
mov
imul
shl
sahf
sub
scas
and
sar
or
ror
mov
jge
inc
xor
xchg
in
jl
aad
jp
lock
fiadd
mul
(bad)
jno
ret
in
outs
jmp
jbe
mov
xor
cmp
dec
pop
or
or
movs
test
jmp
sbb
dec
stos
pusha
or
sti
sub
cmp
cmp
ror
test
aad
jle
push
jnp
aas
or
or
fsub
mov
shl
mov
aad
icebp
mov
sub
mov
ret
outs
mov
add
imul
cdq
pop
sti
cld
cmp
xchg
adc
imul
lock
jmp
movs
adc
lock
or
cmp
(bad)
es
ret
cmp
cli
push
pusha
or
jns
mov
jecxz
les
push
cli
pop
clc
xor
sub
xor
pop
ins
push
imul
rcl
sbb
xor
je
or
adc
lods
pop
xchg
jbe
icebp
inc
xchg
stc
cmps
push
mov
imul
push
scas
loop
mov
adc
add
out
div
xchg
in
mov
push
push
addr16
loope
jb
and
cmp
dec
jb
jge
in
loope
sbb
xchg
or
jae
icebp
gs
movsx
call
in
imul
xchg
ret
mov
shl
lea
jecxz
push
gs
adc
mov
outs
push
dec
in
fyl2x
sbb
cmps
mov
pop
or
retf
in
imul
inc
cmp
repnz
test
dec
xor
or
sbb
imul
inc
cmp
mov
pop
pop
cwde
jp
ds
or
call
and
int
sub
jb
and
jno
stos
(bad)
xor
add
inc
or
int3
add
cmps
push
mov
and
inc
add
lahf
int3
jbe
aas
add
cdq
mov
add
xor
dec
or
fisubr
cdq
pop
aaa
into
mov
loopne
sbb
sub
ja
pand
into
fcom
push
add
pop
and
aam
int
mov
xchg
aad
std
xlat
jmp
jns
push
ins
loopne
and
scas
jmp
(bad)
cmp
in
xor
mov
push
adc
add
mov
or
push
test
sbb
xchg
(bad)
cmp
test
mov
lea
mov
(bad)
mov
outs
leave
jg
sub
jo
fld
and
es
mul
retf
push
push
dec
popa
sub
add
cs
rcr
push
add
cmp
add
dec
sbb
sub
mov
xor
stos
cmp
mov
jg
imul
out
fistp
jmp
icebp
(bad)
cmp
xor
xchg
out
aad
std
loopne
jne
popf
xor
fwait
or
mov
inc
out
popa
(bad)
cmp
mov
outs
dec
mov
sbb
mov
pop
fcomp
dec
adc
stos
push
movs
(bad)
ins
je
pop
push
call
ins
ret
mov
or
mov
inc
ds
std
cmp
push
mov
mov
and
fs
inc
sub
mov
lods
cmp
pop
dec
dec
jno
xchg
mov
or
mov
int3
sub
adc
jnp
mov
ret
popf
jp
pop
stc
scas
imul
pushf
sbb
adc
xchg
(bad)
pop
xchg
inc
icebp
daa
cmp
call
gs
or
popf
das
popa
and
and
mov
mov
lock
inc
les
inc
and
(bad)
jne
ds
pop
add
cmp
or
test
sbb
xchg
mov
pop
(bad)
add
pop
mov
es
popa
sub
xchg
pop
mov
mov
cld
pusha
(bad)
in
int
dec
mov
or
push
(bad)
imul
jecxz
push
pop
and
xchg
in
push
iret
xor
jmp
dec
mov
ffree
mul
cli
mov
jp
pushf
or
pop
jmp
inc
xchg
addr16
ret
add
pextrw
pushf
pop
sub
push
and
adc
fcomp
cmc
cmps
test
xor
test
lock
push
inc
mov
dec
ja
dec
sbb
mov
or
mov
adc
popa
push
cli
ds
inc
add
fisub
sub
mov
movs
push
adc
vcvtsi2ss
pop
or
rcr
push
(bad)
hlt
add
rcr
inc
push
daa
ds
pusha
je
retf
int3
push
pop
sbb
mov
inc
jne
and
icebp
cs
test
outs
inc
xor
xor
cmp
inc
cmp
call
jge
test
inc
cmp
aad
cmp
pop
sub
test
sbb
lods
outs
push
int3
mov
add
mov
rol
cmp
inc
fwait
pop
int
cld
cdq
adc
cmps
jecxz
dec
shl
stos
xchg
push
hlt
mov
inc
sbb
dec
inc
xor
dec
sbb
adc
mov
adc
xchg
mov
xor
push
cmp
pop
jmp
xor
pop
sbb
pop
sub
data16
rol
inc
inc
ror
shl
ins
xor
jecxz
(bad)
push
mov
mov
mov
push
popa
add
push
mov
add
inc
outs
outs
popa
mov
cwde
sub
outs
jnp
sub
and
cmps
lods
cmp
not
int
cmps
sar
out
cdq
sbb
stc
out
lods
add
push
(bad)
xor
enter
sub
jle
outs
mov
push
out
es
fwait
aaa
inc
fild
jns
push
xchg
mov
nop
mov
fisttp
jl
test
jmp
daa
mov
xchg
lods
sbb
bound
test
js
aaa
cmp
(bad)
cmovnp
int3
in
fnsave
ins
stos
(bad)
fs
mov
lahf
mov
mov
mov
fcom
loope
ins
fwait
aas
jnp
lea
ror
cld
push
inc
add
fimul
xor
fs
mov
lea
mov
test
cmc
dec
jno
jns
push
fchs
(bad)
mov
inc
xchg
pusha
imul
mov
lock
mov
in
stc
fcomp
push
test
test
or
retf
inc
fwait
out
in
das
mov
inc
sti
xchg
push
(bad)
mov
push
dec
out
or
pop
sbb
cs
xchg
sub
or
addr16
shl
fdiv
mov
aaa
pop
mov
inc
sbb
mov
cmp
push
pop
push
(bad)
sbb
and
fnsave
xlat
lds
inc
or
pop
adc
mov
retf
ret
stos
push
out
retf
add
dec
jmp
mov
lahf
scas
stos
ins
adc
xor
lods
out
inc
dec
sbb
rcl
push
ja
add
xchg
xchg
or
pop
dec
retf
pop
xor
push
rcr
sub
mov
adc
jge
inc
sub
pop
xor
lds
cwde
call
stos
outs
and
ja
sub
dec
nop
test
ins
or
or
push
popf
cmp
repnz
aas
cmp
into
pop
xlat
sub
push
test
test
lods
jns
test
push
daa
lods
and
cmp
cmp
out
iret
pop
fs
shl
jecxz
lock
movs
sbb
xor
fs
hlt
xor
cdq
cmp
xor
ficom
xor
push
nop
fsub
xchg
push
inc
(bad)
aad
mov
xor
(bad)
das
dec
mov
imul
mov
sub
mov
(bad)
aad
stos
jae
mov
sub
adc
clc
fcmovb
shl
and
lea
add
inc
jmp
nop
shld
mov
std
stos
adc
ins
data16
ss
loope
or
(bad)
sti
xchg
outs
jmpw
mov
cmps
inc
mov
xor
pop
mov
xor
aam
sub
add
lahf
dec
mov
inc
dec
pusha
add
jno
inc
int
pop
test
jnp
jle
dec
in
pushf
icebp
add
nop
xchg
mov
jno
out
ins
in
popa
fisubr
cmps
das
pop
je
pop
mov
ins
dec
sbb
je
or
push
fldcw
int
jno
and
or
and
(bad)
fld
xor
push
xchg
sub
mov
jge
push
(bad)
adc
mov
pop
adc
repnz
sbb
push
pop
mov
jmp
push
aam
xchg
and
sub
ds
xchg
fwait
cmp
cdq
jmp
push
icebp
lds
fdivr
mov
jmp
xchg
cmps
fidivr
and
xor
add
xor
outs
mov
mov
movs
shr
popa
cmp
pop
sub
jno
xchg
aam
jle
pop
daa
(bad)
add
mov
js
mov
mov
xchg
jb
mov
cld
das
movs
or
rcl
push
push
mov
sbb
or
adc
mov
cmp
mov
jmp
hlt
cmps
rol
inc
les
scas
pop
loope
pop
sbb
stos
jmp
add
push
outs
sbb
dec
mov
mov
ret
inc
push
push
cmp
out
cmp
inc
out
xchg
mov
aam
outs
jmp
cdq
jge
mov
lods
in
test
xchg
out
lds
(bad)
mov
xchg
arpl
sbb
ja
jno
mov
ins
sub
ret
mov
dec
sti
mov
mov
stc
or
loope
pop
hlt
aaa
mov
lds
rcl
sbb
(bad)
out
nop
mov
pop
mov
shr
mov
jg
jne
(bad)
fist
xor
int
(bad)
add
add
mov
enter
push
popf
pop
push
add
cs
push
clc
shl
fnstsw
loop
push
and
dec
push
or
jae
add
dec
ins
and
in
mov
cmc
stos
movs
cmps
jbe
dec
mov
adc
inc
stc
out
imul
daa
sbb
test
test
cmp
clc
jbe
ds
adc
mov
test
sub
pop
jae
nop
dec
jnp
jmp
imul
add
pop
pusha
jns
movs
push
in
cmp
jbe
and
sbb
je
xchg
ret
mov
sbb
ss
shl
pop
leave
or
jle
stos
pop
pop
pop
stc
das
jno
ins
and
push
lds
test
pop
cmp
push
jmp
jmp
outs
stc
mov
sub
loop
jb
mov
mov
aad
xchg
in
mov
lods
lfs
ret
je
add
aad
nop
(bad)
sub
sub
std
jae
sbb
fisttp
es
xor
sub
dec
push
repnz
mov
push
std
mov
mov
(bad)
fdiv
add
push
repz
(bad)
add
aas
sub
push
mov
ins
test
add
or
inc
dec
cmp
jae
jmp
nop
stc
pushf
out
mov
(bad)
jo
pop
push
popa
mov
aas
enter
fwait
(bad)
les
fnstenv
je
or
dec
inc
push
adc
sub
cmp
rol
ss
lldt
pop
fs
gs
cmp
pushf
add
mov
sbb
fs
or
cmps
into
fnstenv
into
jge
div
fldcw
push
jl
cwde
hlt
mov
fcomp
cmp
aaa
jmp
xchg
sub
mov
daa
xor
mov
inc
repz
call
rol
jle
xchg
cdq
outs
dec
xchg
jne
jno
and
fild
adc
and
xlat
popa
mov
lods
call
ret
xchg
inc
push
sub
push
dec
aas
and
sub
dec
jns
rol
call
fisubr
int3
xchg
pop
in
push
repnz
cmps
iret
sbb
test
xor
mov
retf
imul
fisttp
stc
enter
jne
mov
cmp
inc
push
push
sbb
ss
sahf
push
xlat
dec
or
ffree
dec
das
pop
push
sub
aaa
sbb
mov
xlat
les
lods
aad
sub
test
out
xor
fistp
inc
pop
mov
jge
into
ins
ds
inc
and
mov
xor
xor
xchg
jp
add
push
dec
lock
mov
cwde
inc
stc
or
leave
xchg
mov
mov
sbb
mov
cwde
fs
xlat
mov
ins
dec
or
sbb
push
ret
push
arpl
push
in
xor
dec
push
mov
fcomp
aaa
fsubr
ret
adc
xchg
inc
or
out
shl
out
fsub
add
adc
pop
rcr
int3
adc
jp
xchg
sbb
jnp
popf
aad
sbb
mov
cmps
xchg
add
daa
push
pop
mov
mov
add
test
xlat
aas
inc
sbb
repz
mov
mov
test
mov
jno
pushf
pushf
pop
dec
cwde
and
loop
shr
add
mov
lods
outs
sbb
fcom
dec
dec
dec
repnz
mov
hlt
in
push
jecxz
adc
and
dec
inc
inc
rcl
or
jmp
retf
push
lods
mov
mov
mov
or
push
xchg
xchg
fucomp
adc
adc
push
sbb
cmps
in
adc
inc
es
pushf
in
(bad)
cwde
add
dec
push
sbb
test
jae
or
mov
dec
jge
aam
repz
fldcw
in
lock
cmps
stos
scas
and
loopne
test
sub
aam
ficom
or
push
popf
mov
mov
jb
(bad)
jmp
push
jg
outs
outs
test
push
mov
cmps
pop
loopne
stos
adc
fs
dec
or
xchg
xor
xchg
stos
repnz
inc
hlt
mov
sbb
mov
mov
jg
or
mov
out
add
into
cmp
movs
adc
ins
(bad)
adc
mov
mov
adc
repnz
push
mov
add
xor
and
cli
xchg
or
pushf
outs
sbb
call
shl
mov
mov
xchg
out
xor
jb
aam
xchg
push
or
inc
loope
mov
int
sahf
pop
into
inc
call
push
inc
jle
out
enter
adc
popf
push
sar
data16
jb
test
arpl
iret
add
add
or
push
std
add
mov
cmp
js
mov
cmp
push
mov
(bad)
pop
out
mov
ret
cwde
push
mov
jb
or
std
lahf
outs
mov
inc
fldcw
inc
pop
daa
adc
mov
pop
out
jo
add
pop
test
or
push
mov
mov
cs
in
sub
push
lods
pop
jb
xchg
loope
ss
or
cld
jae
sbb
movs
sub
cmp
fidiv
push
adc
xor
dec
or
clc
in
cmp
lods
jns
sbb
cmp
mov
call
jge
aas
enter
pushf
add
cmp
sahf
ja
fnsave
imul
ret
ds
push
dec
sub
dec
sub
push
cmp
clc
stos
fmulp
sub
ja
std
push
cs
or
adc
outs
loopne
je
lods
sbb
cwde
loopne
and
lds
mov
clc
retf
cmp
mov
aaa
or
pop
in
sub
mov
xor
xchg
jp
inc
fldcw
xor
rep
cld
jmp
pop
mov
push
and
jmp
daa
adc
sti
mov
ss
movs
mul
jo
cmps
loopne
sub
jmp
rcl
dec
in
pop
or
test
xor
leave
lock
jmp
stos
inc
ffree
out
stc
mov
in
scas
pop
rol
aad
cmps
popf
mov
test
sbb
inc
mov
push
retf
sub
call
aam
and
out
js
test
std
sahf
mov
int
push
cdq
push
retf
mov
inc
out
inc
out
fnstcw
or
lock
dec
jb
out
sbb
movs
test
or
push
inc
or
push
jne
cmc
and
ja
add
dec
bnd
mov
js
xchg
cld
xor
in
dec
imul
or
out
cmp
or
dec
sub
int3
and
adc
call
pop
stos
sbb
sbb
dec
inc
in
dec
rol
xchg
dec
xchg
(bad)
xor
std
retf
xchg
ins
sub
lahf
jno
xor
lahf
dec
in
xacquire
inc
icebp
push
xor
mov
push
push
movs
push
in
(bad)
pushf
xor
xor
cmc
mov
xlat
or
push
or
ret
pop
inc
(bad)
cld
popa
cmp
aaa
mov
retf
movs
sahf
inc
scas
push
xchg
mov
sbb
xchg
lods
pop
cli
mov
es
inc
jne
mov
jmp
imul
daa
outs
adc
sbb
and
pop
pushf
bnd
ret
out
int
das
stos
mov
xor
push
pop
cmp
test
popa
hlt
dec
cmp
lock
pop
sub
xchg
pop
fmul
mov
scas
and
cmp
push
sub
dec
dec
and
push
xchg
or
sbb
cs
sub
cld
xlat
sbb
add
xlat
dec
cmp
fwait
mov
retf
sub
cld
and
add
inc
add
fisttp
sbb
mov
pop
in
test
(bad)
mov
int3
stc
out
movs
cmp
push
(bad)
push
into
mov
pusha
cmp
stos
movs
in
cmps
sahf
mov
sbb
xchg
les
(bad)
pop
nop
dec
int
pop
ss
mov
pop
jecxz
pop
pop
jp
mov
dec
or
xchg
mov
jge
inc
inc
cmp
popa
pop
outs
sar
jle
scas
mov
in
outs
sub
pop
imul
shr
imul
(bad)
xchg
ins
sub
jle
rol
out
xchg
outs
sar
mov
cld
cmp
jle
ins
dec
test
cld
int3
jle
push
sbb
mov
(bad)
or
and
sub
cmp
(bad)
aam
push
jmp
sub
sub
(bad)
clc
inc
and
out
push
sti
popf
inc
mov
int3
push
push
xor
cld
loop
or
iret
jge
in
scas
(bad)
hlt
ss
adc
add
fistp
scas
push
jo
dec
in
scas
data16
mov
inc
mov
stc
ins
sub
or
aaa
inc
push
inc
mov
or
push
sbb
sbb
setns
pusha
test
shl
stos
daa
loopne
and
cli
jns
jne
add
in
or
sbb
inc
dec
test
imul
sub
fisub
xor
sub
pop
daa
fcomip
mov
or
adc
jge
jg
repz
inc
or
xor
mov
int3
cmp
push
lods
rep
push
and
and
jb
scas
pop
arpl
sub
add
pop
pop
gs
jb
test
sti
inc
or
xchg
nop
(bad)
xchg
push
test
test
fldcw
pop
mov
pop
scas
add
push
lods
sub
out
jns
push
lahf
cmps
jl
fild
rol
xchg
shr
(bad)
jg
adc
push
push
sahf
sbb
in
jno
xor
sbb
sub
ja
xchg
ds
call
stos
xlat
sub
fwait
(bad)
jle
jge
sub
xchg
mov
out
adc
sti
and
out
pop
xor
repz
mov
addr16
jl
xlat
cmp
ja
jb
jae
or
and
sbb
push
ins
adc
mov
dec
jne
in
mov
clc
cmp
into
mov
lods
pop
clc
dec
mov
mov
bts
mov
xchg
xchg
mov
call
xor
push
jne
or
add
push
pop
(bad)
sub
jae
stos
pop
loop
sbb
test
iret
data16
ret
cmps
inc
cmp
rcr
mov
sub
imul
jg
mov
ret
leave
push
call
pop
push
nop
fucomp
ins
sbb
ins
lahf
pop
mov
into
sbb
sub
pusha
jecxz
jle
out
xor
or
ret
in
retf
ret
cmps
stos
xchg
sub
sub
enter
sbb
fild
and
jecxz
cwde
sti
lock
shr
xchg
cmp
xchg
jno
or
sar
outs
leave
mov
(bad)
mov
sbb
imul
jo
or
push
cld
mov
pop
jl
add
cmp
push
or
popw
xchg
clc
xchg
jp
mov
pop
gs
pop
pusha
xor
dec
out
add
and
xor
addr16
test
sub
scas
addr16
sbb
clc
std
sbb
rcr
xor
iret
leave
or
xchg
or
or
fwait
inc
out
rol
inc
jns
jp
mov
daa
mov
(bad)
lods
jae
fldln2
push
cmp
outs
(bad)
adc
je
cmp
push
icebp
cmps
std
cmp
int
dec
mov
std
xor
sub
mov
inc
inc
or
push
jecxz
and
outs
les
shl
(bad)
jle
mov
jo
cmps
inc
clc
adc
inc
rcr
movs
out
sbb
cmp
inc
or
dec
(bad)
int
sbb
loopne
or
mov
jmp
jno
sbb
mov
fbld
pop
sbb
xor
jbe
sbb
cmp
(bad)
mul
mov
xor
pop
stos
xchg
imul
cmc
pop
mov
(bad)
rol
dec
adc
aaa
mov
bound
lds
pusha
ja
jo
ss
dec
fwait
(bad)
sti
jne
xor
mov
and
add
dec
inc
ins
fnstsw
fidivr
cmp
imul
pop
cmps
mov
jl
xchg
adc
in
jge
sub
fisttp
add
push
jmp
popf
movs
mov
enter
inc
pop
out
cmp
jnp
(bad)
rcr
ret
cwde
imul
and
cmp
je
jl
and
cmp
fcmovnbe
cdq
sar
cmp
xor
dec
add
mov
mov
nop
xchg
mov
adc
pusha
mov
pop
loopne
xor
sbb
dec
cld
dec
or
and
inc
dec
sbb
popa
fisub
xor
mov
jnp
xor
jb
mov
pop
or
(bad)
scas
gs
mov
js
fstp
xor
inc
add
neg
loop
hlt
xor
not
dec
aas
lods
into
xchg
or
mov
movs
xchg
ins
cmp
cmp
icebp
call
and
mov
xor
fist
and
jecxz
dec
ds
test
test
xchg
and
sub
inc
sbb
or
mov
or
inc
test
or
pushf
aad
test
xchg
retf
xor
jecxz
inc
gs
mov
add
pusha
nop
mov
mov
sbb
xchg
xor
cmp
popa
mov
pop
call
mov
pop
fwait
hlt
out
add
xchg
retf
aam
adc
mov
gs
pop
jmp
xchg
repz
retf
mov
sub
xor
xchg
inc
(bad)
fdivp
rol
aam
xchg
inc
ret
jnp
or
dec
sbb
punpckhbw
pop
sub
loopne
cwde
or
mov
in
daa
xchg
ins
xor
das
jmp
dec
retf
das
arpl
dec
xstore-rng
cmps
inc
fisub
pop
cmp
sub
clc
enter
icebp
or
dec
adc
imul
jae
adc
(bad)
bound
or
jno
pushf
inc
mov
es
scas
mov
cmps
inc
push
push
cmps
xchg
rol
adc
mov
das
pop
pop
inc
inc
xor
xchg
mov
dec
rcr
popf
dec
rcl
add
imul
or
hlt
xor
ja
pop
call
xchg
ret
clc
ror
ds
jp
pushf
imul
xor
jno
aam
lods
pop
aad
(bad)
xchg
fild
sbb
mov
sub
mov
jne
test
pop
int
mov
bound
outs
iret
xlat
std
les
aam
sub
lods
jb
mov
and
shl
jae
and
inc
in
rol
repnz
iret
dec
sub
(bad)
(bad)
shr
movs
mov
imul
fdivr
dec
jno
xchg
test
imul
or
mov
mov
pop
push
push
push
pusha
es
lea
add
and
xchg
xor
inc
mov
adc
mov
or
mov
stos
icebp
inc
call
dec
movs
test
dec
jb
jg
sbb
pop
loop
in
cmps
bound
rol
shl
dec
shl
lods
lds
mov
ds
and
stc
adc
push
cli
(bad)
or
pop
jbe
mov
jle
dec
fwait
test
xor
popa
jp
out
inc
sub
scas
pop
mov
jmp
out
pop
push
xchg
cs
jecxz
inc
lock
aas
cmp
mov
mov
sbb
test
push
cmp
loope
call
inc
cmp
mov
cmp
mov
cmps
imul
mov
jmp
test
jne
sbb
push
fs
add
mov
sahf
bnd
jp
jne
aaa
test
mov
sbb
lahf
sbb
mov
add
das
movs
pop
stos
jns
adc
(bad)
(bad)
mov
sar
mov
aad
xor
cmp
add
push
push
movs
into
fisttp
mul
pop
cmp
test
or
add
sbb
mov
adc
and
jns
and
xor
lock
lods
in
in
fcomp
push
lea
cmp
retf
sar
outs
xchg
or
cwde
std
pop
movs
ret
xchg
add
outs
or
fdiv
xchg
test
mov
test
gs
imul
(bad)
xchg
inc
popf
inc
cld
aam
mov
fisubr
mov
jl
iret
push
ret
mov
popf
pop
xchg
inc
xlat
cwde
push
jmp
push
enter
dec
stos
xlat
cmp
sub
xchg
or
and
jmp
stc
stc
cdq
nop
xchg
idiv
sub
mov
repz
inc
add
and
loop
mov
vpcmpeqw
inc
inc
pop
sti
xor
(bad)
(bad)
mov
retf
mov
and
fsub
in
and
and
clc
fidiv
jbe
and
mov
mov
xchg
(bad)
aas
shl
add
and
sub
mov
addr16
inc
(bad)
push
clc
aam
rcr
dec
leave
and
sbb
add
iret
inc
push
ja
in
pop
sub
arpl
or
loope
and
inc
jg
push
dec
push
add
shr
and
cli
repnz
imul
cmp
xchg
hlt
push
out
mov
or
dec
ins
mov
stos
or
int
out
neg
enter
out
add
pop
mov
das
mov
sub
sub
dec
jae
xor
cmp
inc
fadd
push
and
sbb
dec
fcomp
arpl
add
repnz
sub
add
add
mov
pop
cmp
out
or
pop
sub
inc
add
clc
dec
push
shl
mov
cmp
es
xchg
and
mov
mov
pop
imul
add
pop
ss
mov
mov
bound
push
add
aas
lods
mul
mov
lods
rcr
xchg
pop
mov
lahf
and
enter
shr
mov
cwde
mov
(bad)
mov
mov
cs
and
mul
shrd
or
out
js
lds
stos
in
in
bound
and
popf
push
bound
fwait
xchg
fimul
(bad)
mov
dec
lock
add
sbb
xchg
fcmovnbe
add
ret
mov
pusha
dec
cmps
jno
xchg
rol
jge
test
dec
ins
and
aas
mov
add
ja
jb
rcr
(bad)
ins
fsubp
xacquire
popa
sub
or
popa
add
pop
lods
fidiv
inc
in
xchg
cmp
outs
mov
and
loope
popa
(bad)
jge
add
outs
or
shr
sbb
in
clc
lods
jp
int
je
ins
je
push
not
loopne
ds
add
xchg
push
dec
mov
jb
in
pop
mov
mov
outs
push
and
cmps
aas
(bad)
icebp
add
mov
call
not
in
sub
cmp
gs
(bad)
(bad)
jmp
loopne
adc
mov
mov
ins
or
push
(bad)
mov
retf
or
pop
ss
outs
iret
push
and
fucom
jae
mov
stc
mov
mov
add
xchg
stos
mov
dec
cmp
xchg
and
icebp
jb
push
(bad)
test
push
cmps
and
pop
in
imul
fsubp
aas
and
fiadd
jecxz
cmp
aas
cs
jmp
rcl
xchg
mov
out
rcl
and
xchg
mov
pop
sbb
repz
stc
adc
dec
(bad)
int
frstor
ret
xor
xchg
stc
sahf
shr
lds
in
mov
outs
(bad)
push
mov
ins
jo
cmp
lea
xor
dec
mov
outs
stos
jmp
jg
jmp
int3
jge
xchg
cdq
imul
jg
xchg
inc
icebp
sar
(bad)
in
cmovge
xchg
xlat
push
cmp
jl
outs
mov
dec
jmp
fisub
inc
jge
repnz
inc
ss
stos
push
dec
ins
dec
ds
mov
adc
mov
lods
sub
sub
out
dec
popa
pcmpeqb
ins
push
mov
dec
mov
data16
mov
std
out
stos
in
or
dec
add
and
sub
cmps
sbb
arpl
mov
pop
cmp
shl
cmp
jl
mov
fst
(bad)
(bad)
fld
xchg
test
mov
(bad)
xchg
inc
repnz
jl
xor
int3
cmc
jbe
and
dec
leave
fadd
loop
icebp
sbb
jmp
int
cdq
mov
or
aaa
xchg
test
inc
fwait
ret
sbb
jnp
or
sbb
dec
and
sbb
movs
mov
repz
push
mov
(bad)
jno
push
(bad)
(bad)
mov
jmp
std
xchg
shl
es
inc
int
add
scas
jg
pop
sbb
stos
sbb
scas
inc
out
lods
addr16
adc
das
add
xchg
lock
div
mov
or
sbb
mov
xor
lea
out
out
pusha
aad
fidiv
sbb
mov
xor
sar
in
fistp
ds
daa
ja
aaa
fsub
shl
jmp
enter
push
mov
jbe
dec
dec
scas
data16
call
stc
mov
pop
sbb
or
jge
paddb
jnp
inc
or
fdivr
cmp
imul
jmp
adc
fisttp
repnz
dec
jmp
mov
xor
pop
outs
mov
dec
idiv
retf
and
push
jecxz
xchg
mov
fsubr
xor
mov
xor
(bad)
not
or
cli
std
push
ins
push
imul
and
(bad)
sbb
(bad)
popa
add
cmps
fst
mov
dec
test
(bad)
clc
in
inc
mov
ret
std
mov
dec
xor
add
fdiv
(bad)
pinsrw
repnz
cmp
sub
jo
outs
pop
repz
xchg
xor
or
imul
aaa
jmp
mov
ins
js
imul
adc
sub
in
and
enter
jmp
shr
loopne
sbb
sub
mov
xchg
pop
mov
push
sbb
aad
in
cld
mov
(bad)
pop
push
dec
inc
adc
shr
out
push
or
int3
movs
push
in
push
mov
cmps
fndisi(8087
or
or
test
mov
in
mov
cmps
enter
mov
(bad)
aaa
sbb
add
sub
or
xchg
or
scas
icebp
xchg
pop
xchg
mov
idiv
ins
sbb
imul
clc
push
inc
xor
cmp
mov
mov
ja
shl
jmp
mov
push
dec
imul
sub
push
mov
hlt
xlat
dec
and
push
fdivp
movs
jmp
mov
push
int
cmp
sub
push
xchg
(bad)
lea
xchg
fisttp
mov
xor
push
out
pop
dec
dec
es
jmp
repz
inc
jp
ja
nop
sbb
lds
ins
and
pusha
retf
mov
fcomp
cmp
mov
stos
add
fcom
cs
add
shr
sub
mov
aam
(bad)
mov
dec
add
inc
mov
or
jmp
cmp
das
das
pop
jns
sub
je
mov
adc
xor
fdivr
out
and
ins
data16
inc
mov
int
outs
cmp
outs
add
pop
popa
push
mov
and
jnp
xor
sbb
mov
movs
call
cmp
dec
popa
fndisi(8087
pop
xchg
cmp
(bad)
pop
stos
out
mov
sahf
pop
pushf
int3
(bad)
shr
jno
mov
lea
js
aam
xchg
adc
ret
popa
fldcw
out
test
add
into
xchg
add
cmp
or
add
div
popa
xor
dec
gs
xchg
sbb
es
outs
cli
jae
dec
push
lahf
das
test
jae
sti
mov
shl
xchg
loope
bound
add
jge
mov
mov
pop
lahf
rcr
cmp
stos
daa
daa
stc
add
je
shl
inc
mov
adc
adc
les
test
(bad)
in
in
arpl
pop
inc
push
sub
pop
dec
rol
xchg
sub
daa
fist
push
mov
ret
sub
or
xchg
sti
addr16
(bad)
cmp
inc
jg
sbb
ret
adc
jg
mov
or
cmps
mov
ror
cwde
xchg
pushf
mov
inc
add
test
jp
out
enter
adc
sub
xor
push
mov
or
cmp
lods
popa
ds
dec
pop
xor
or
das
jmp
ds
sub
in
add
xor
add
movs
sub
movs
jg
les
adc
inc
and
add
js
pop
fdivr
xor
xchg
push
adc
add
cmc
adc
mov
pop
pop
adc
repz
jae
gs
sub
mov
fld
aam
cmp
xor
aam
pop
mov
scas
sbb
or
push
jmp
mov
ins
inc
mov
adc
sbb
xor
jmp
xor
push
js
sbb
(bad)
repz
sbb
dec
cli
mov
sahf
bound
das
dec
xchg
jne
push
cwde
xchg
jno
sub
pushf
iret
icebp
mov
xchg
ret
xchg
mov
and
popa
out
in
(bad)
push
scas
inc
xor
lahf
hlt
push
mov
xchg
push
or
cmp
sub
xor
mov
push
lods
mov
inc
or
sbb
test
push
xchg
mov
pmaxsw
cmp
adc
std
test
shl
ja
loope
iret
or
mov
jne
inc
mov
and
add
sbb
inc
xchg
cmc
jle
stos
pop
dec
xchg
push
cld
jnp
jp
dec
mov
cmps
sbb
lods
jae
xchg
lock
fistp
and
out
jl
sbb
fmulp
xor
test
jg
call
lods
xor
push
aad
das
sbb
shl
imul
xor
retf
das
jb
hlt
jmp
push
int
sub
mov
repnz
int3
out
cld
pushf
push
ins
adc
xchg
adc
stc
fcom
and
push
ret
(bad)
xor
lods
mov
sub
dec
std
jno
mov
retf
xchg
mov
inc
or
icebp
mov
cwde
mov
lock
mov
test
inc
in
cmp
dec
repz
mov
call
jae
aad
lods
push
clc
sbb
pop
sti
les
pop
mov
daa
lods
cmp
push
mov
ss
sahf
out
stos
sbb
inc
xchg
movs
sar
push
dec
inc
xlat
bound
(bad)
pushf
dec
push
lds
xor
cmc
mov
lods
xor
clc
je
xor
and
jecxz
lock
dec
mov
xchg
repnz
or
rol
fabs
cmps
retf
fsubr
fst
pop
enter
mov
ja
ins
add
inc
ffreep
lea
push
out
pop
jg
pop
add
add
xor
and
daa
cld
mov
and
and
pop
xchg
fcomip
sub
cmp
xlat
inc
scas
test
and
(bad)
out
sbb
sub
add
push
fld
call
or
out
lahf
xchg
lock
jmp
cdq
ret
push
aaa
xor
mov
mov
daa
inc
fcmovu
jmp
or
lock
dec
and
mov
gs
mov
lods
je
in
inc
addr16
jnp
xlat
js
xlat
ja
xchg
add
add
jo
fst
ret
ins
push
sbb
mov
jb
cmp
aas
dec
inc
mov
mov
popa
push
and
and
or
fild
and
push
movs
adc
jo
stc
jae
xchg
push
ror
out
pushf
scas
pop
pop
lds
adc
clc
cmp
or
jl
cmps
cmp
xor
fisubr
ja
pop
sbb
jnp
lods
jmp
push
movs
in
fild
add
loopne
and
mov
or
mov
mov
scas
or
cmp
xchg
popa
jecxz
retf
test
sar
push
movs
sbb
cmps
mov
popa
sar
fdivrp
jge
cmp
in
pop
mov
mov
inc
pop
call
icebp
pop
ret
adc
cld
and
or
mov
mov
push
dec
addr16
sub
in
js
test
test
mov
or
sub
lods
sahf
push
push
gs
popf
mov
aas
mov
in
pushf
xchg
push
or
inc
mov
mov
dec
mov
sar
das
sub
out
cmp
ret
fidiv
arpl
mov
cmc
aas
outs
aad
jbe
cmp
jle
pop
sar
sti
je
repz
add
outs
mov
test
in
cdq
add
pop
sub
out
inc
jg
mov
dec
pop
jg
shl
jo
sti
fisub
sub
mov
inc
nop
mov
cmc
cmc
mov
push
aaa
pop
dec
cmp
cdq
or
pop
cmp
enter
es
aas
jle
xchg
push
comiss
push
and
mov
add
ficom
mov
or
push
fptan
sti
std
iret
sbb
xchg
popf
inc
adc
push
in
push
xor
gs
outs
es
and
bnd
jp
cmp
mov
scas
cmp
sub
sub
mov
pop
sub
es
xchg
(bad)
into
dec
and
adc
fsubr
jp
push
inc
and
hlt
bound
addr16
xchg
pop
cwde
sub
cmps
out
int
fwait
(bad)
aaa
xchg
mov
sbb
sub
cmc
adc
retf
cld
cli
cmp
or
(bad)
rcr
sub
xchg
add
movs
cdq
outs
mov
mov
sbb
add
inc
pop
or
fnstsw
(bad)
adc
xchg
jne
inc
das
iret
inc
sub
les
sub
mov
fisubr
xchg
adc
cmp
xchg
and
iret
rol
cli
shr
rol
cs
add
mov
dec
xlat
or
xchg
jns
add
arpl
and
daa
stos
in
mov
out
lods
pop
je
mov
mov
inc
es
jecxz
sbb
pop
int
retf
pop
fisttp
sti
retf
js
cdq
inc
mov
mov
test
mov
add
pusha
inc
add
ins
fstp
pop
cmp
jp
fmul
in
popf
jl
lock
std
(bad)
mov
dec
int
in
in
popa
and
cmp
sbb
fwait
xchg
sub
(bad)
mov
sub
(bad)
std
ficom
dec
jg
ds
cmps
push
push
(bad)
iret
out
rol
and
mov
xchg
fidiv
mov
int
(bad)
psubsw
call
or
adc
repz
in
fsubp
mov
ret
sar
push
push
push
and
cmp
js
jae
push
and
cmp
in
mov
mov
ficom
inc
loope
push
je
call
popa
das
inc
push
mul
pop
pop
out
push
hlt
cmp
push
rcr
neg
mov
mov
mov
mov
test
inc
cmps
lds
neg
imul
inc
fnstcw
xor
in
in
inc
shl
jbe
ja
imul
mov
fbstp
scas
in
mov
xor
daa
mov
movs
in
jle
push
and
ins
jb
dec
mov
jp
jmp
cmp
fist
loopne
ja
add
aas
jno
wrmsr
cmps
ins
mov
mov
and
xlat
jae
lods
int
sub
mov
inc
es
mov
cmp
adc
or
jg
call
out
jge
and
inc
mov
dec
test
sub
dec
jle
push
cli
adc
sbb
ret
arpl
rcl
arpl
push
pop
cmp
push
mov
mov
xor
mov
bound
popa
fnstsw
mov
pop
push
mov
fwait
leave
(bad)
out
add
mov
ins
adc
in
cvtpi2ps
aad
jg
ror
pusha
in
test
jnp
jl
retf
mov
xchg
clc
std
inc
dec
retf
gs
pop
inc
call
daa
jb
mov
jo
push
repnz
ds
(bad)
mov
pop
and
loopne
mov
pop
xchg
mov
mov
add
js
pop
out
rol
or
retf
div
adc
aas
or
dec
out
sub
or
cs
pcmpeqd
je
not
and
rcpps
scas
lods
sub
pop
or
jmp
jb
(bad)
pusha
jecxz
popa
retf
sbb
rcl
das
mov
gs
stc
stc
call
movs
lock
retf
dec
fdivr
(bad)
in
fsubr
jns
jmp
mov
xchg
mov
pop
(bad)
loopne
pop
xchg
and
mov
das
mov
int
add
stc
dec
(bad)
jp
call
loope
lds
push
xchg
xor
pop
int3
or
mov
div
mul
or
adc
pushf
sbb
fnsave
lods
ja
shr
push
dec
ins
dec
stos
xchg
cmp
ss
pushf
and
pop
mov
adc
cmp
or
shl
pop
fsubrp
jp
mov
clc
adc
add
xchg
mov
xlat
or
jne
push
test
stos
or
ins
call
shr
dec
mov
daa
inc
add
and
cld
adc
iret
or
movs
push
dec
popa
or
scas
dec
dec
cmp
xchg
and
or
pop
mov
ret
outs
or
pushf
out
sub
mov
daa
std
mov
popf
jae
mov
int
aaa
outs
push
repz
mov
shl
pushf
out
jae
sbb
lea
mov
out
sub
pop
mov
xchg
(bad)
js
popf
cmps
test
cdq
xchg
lods
outs
lock
lea
jae
sub
xchg
mov
jmp
retf
in
cld
pop
dec
xor
and
xchg
or
xlat
and
mov
pusha
loope
jecxz
sub
fdivr
add
pop
sub
jb
jle
mov
(bad)
add
hlt
lock
jl
jp
aas
stc
jns
jae
push
imul
pop
int3
cs
test
imul
in
mov
cmp
jge
pop
imul
mov
dec
pop
pop
in
push
fsub
scas
dec
std
movs
sbb
js
dec
lods
mov
out
jmp
fwait
jl
push
stos
inc
in
or
add
pop
call
(bad)
pop
mov
dec
ss
rol
retf
sub
iret
cli
push
fisttp
mov
fwait
xor
test
add
and
imul
mov
push
mov
sbb
test
retf
add
cmp
push
std
(bad)
repz
mov
inc
jbe
adc
pop
xor
add
jl
popf
outs
dec
and
inc
sub
jg
gs
adc
and
dec
pop
std
push
outs
jmp
fldenv
popa
sub
mov
cmc
push
add
inc
aas
daa
xor
mov
out
or
xchg
adc
loop
push
test
cmp
test
aaa
inc
and
mov
out
sub
jb
hlt
loope
push
(bad)
mov
loope
call
dec
push
fdiv
push
fld
das
pop
movs
neg
retf
cmps
or
add
call
or
fstp
fmul
imul
pop
inc
adc
or
cli
xor
push
and
xor
mov
jecxz
daa
jno
repz
(bad)
nop
out
lahf
mov
repnz
push
jbe
scas
push
call
push
adc
lock
fs
mov
sti
imul
sub
pop
(bad)
and
push
inc
mov
dec
mov
sbb
add
or
add
imul
adc
stos
fidiv
mov
ss
sti
mov
add
push
aam
mov
cmp
mov
movs
mov
inc
sub
aaa
shl
mov
sahf
mov
pop
into
xor
jae
sbb
and
movs
mov
bsr
ds
cmc
sbb
(bad)
cmc
jnp
xchg
sbb
jp
pop
cmp
mov
lods
cwde
iret
xchg
xchg
out
ret
rcl
dec
or
nop
fimul
mov
jae
ret
lock
pop
mov
in
push
xor
add
push
sub
push
add
cdq
out
jb
push
cmp
retf
leave
xchg
mov
test
in
loope
or
or
ret
sbb
sbb
out
test
mov
(bad)
int3
pusha
push
data16
rcl
jae
sti
iret
jge
mov
js
jl
sbb
addr16
pop
or
dec
cmp
inc
pop
lods
mov
pop
in
sbb
or
adc
je
retf
gs
cmps
int
jp
cwde
mov
mov
add
rcr
bound
dec
sar
pusha
fwait
outs
jo
xchg
shl
scas
add
mov
(bad)
repz
fmul
fstp
test
cdq
add
xchg
aaa
pop
xchg
pop
and
jo
sub
jb
pop
int
adc
popf
mov
mov
push
mov
test
mov
dec
cmp
sub
xchg
jae
or
sub
stc
retf
scas
jecxz
retf
leave
adc
imul
inc
sub
sbb
sub
jg
je
ret
mov
fucomi
sbb
scas
jns
sub
in
call
jno
fcom
xchg
xchg
and
add
sar
(bad)
mov
inc
jmp
mov
retf
xor
js
xchg
xor
cmp
pop
or
shr
outs
jmp
scas
into
dec
dec
mov
int
std
pop
adc
jge
jb
jns
popf
fld
test
mov
and
jmp
or
movs
jno
pop
jg
adc
xchg
fdiv
and
sbb
sbb
and
mov
lea
jne
and
dec
push
xchg
pop
lea
jb
aas
dec
jmp
jp
cdq
adc
jmp
push
fdivp
mov
or
cmp
in
mov
dec
add
pushf
xchg
mov
outs
pop
and
mov
repz
ds
sbb
call
cmp
mov
cmp
mov
sub
inc
loop
or
inc
sbb
add
int3
push
xchg
imul
daa
adc
cwde
add
dec
jns
mov
sahf
mov
mov
inc
stos
js
pushf
sbb
cmp
sub
call
and
out
mov
inc
pop
fisub
fs
mov
xchg
jae
push
mov
push
dec
lock
cmc
icebp
jb
sbb
(bad)
mov
mov
addr16
test
rcl
int
stc
idiv
push
adc
fs
dec
cmp
in
jmp
nop
xchg
enter
lea
pop
es
jmp
loop
js
dec
jg
imul
push
pop
sbb
cdq
bound
xchg
pop
daa
and
push
add
test
je
js
cmp
adc
js
inc
cli
dec
mov
and
popf
stos
imul
cmp
inc
fsubr
jmp
sbb
pop
dec
(bad)
cli
sub
push
mov
mov
(bad)
fisubr
popa
lahf
lods
es
lds
push
sti
or
mul
jle
xchg
pop
jmp
ret
cmc
stos
loop
xlat
rol
int3
jmp
fiadd
outs
inc
test
in
loop
push
mov
xchg
jnp
mov
pop
add
jae
test
js
mov
stos
fiadd
repz
mov
addr16
ja
cmp
in
in
jecxz
pop
cmps
shr
(bad)
push
xor
mov
cmp
push
add
or
adc
outs
mov
xor
stos
scas
xchg
adc
xchg
xor
ins
shl
xchg
ins
jb
cmp
fist
ins
sbb
test
out
test
adc
push
pop
ss
ret
ins
mov
cmp
stos
outs
push
js
mov
add
aam
push
xor
dec
mov
fistp
add
sub
xor
dec
mov
jae
dec
dec
xchg
sti
push
sbb
hlt
and
loope
(bad)
hlt
daa
lea
or
pushf
aad
pop
jne
jge
aas
js
test
pop
addr16
(bad)
nop
cmc
add
dec
sub
and
lods
or
dec
hlt
mov
adc
mov
je
push
sar
sbb
add
sbb
and
jnp
and
adc
ret
movs
mov
cmc
jns
rcr
(bad)
inc
outs
sbb
and
sub
cmp
xlat
jp
dec
sub
(bad)
stc
cmp
enter
scas
xchg
out
repnz
call
out
test
(bad)
xor
dec
mov
mov
fwait
sbb
movs
sbb
cwde
data16
xlat
out
fadd
inc
dec
mov
in
into
inc
(bad)
jge
jp
iret
mov
pusha
push
test
movs
cld
pop
jecxz
dec
xor
and
xchg
xor
jg
jmp
fwait
xchg
and
fnstsw
fld
xchg
xchg
test
push
add
(bad)
inc
call
mov
pop
fucomp
mov
leave
test
stos
mov
adc
jle
adc
adc
pop
jne
mov
xlat
xchg
push
adc
pop
mov
in
mov
fsubr
arpl
xor
mov
xor
pop
xchg
retf
lea
fdivr
loope
into
fwait
hlt
daa
mov
mov
xor
dec
add
hlt
sbb
or
movs
cmp
jne
or
shr
add
jmp
inc
gs
or
push
and
cld
shl
call
cmp
repz
and
xor
fist
shr
sub
or
pop
pop
dec
in
cmp
push
daa
xor
cmps
neg
push
mov
aas
ret
mov
and
out
fisub
cmp
ficom
les
mov
popa
test
aad
mov
push
jecxz
test
pop
push
jp
mov
jo
(bad)
mov
fs
iret
std
xchg
call
call
xchg
loopne
sub
inc
sbb
cdq
sbb
push
sub
out
mov
movs
mov
stos
push
adc
and
repnz
sti
mov
mov
mov
icebp
or
push
or
imul
mov
xchg
or
shr
in
fcom
cmc
out
sub
xchg
mov
ret
cmp
es
lock
callw
sub
mov
aam
mov
fbld
jb
push
les
inc
sub
pusha
test
pop
push
xor
mov
iret
or
gs
shr
pushf
xor
(bad)
sbb
sub
xchg
mov
arpl
jae
std
cmps
dec
sbb
or
in
aad
or
cmp
ffree
inc
adc
in
sub
xor
retf
push
push
mov
mov
sub
outs
imul
cld
push
pop
call
sar
ret
push
cs
pop
push
add
pop
das
xor
sbb
sub
inc
lahf
mov
in
mov
outs
mov
xor
mov
ret
push
in
adc
aas
ins
ins
jge
loop
in
arpl
ins
pop
pushf
mov
and
add
call
add
scas
js
xchg
mov
fistp
mov
ins
ror
aam
cmp
lods
stc
cld
mov
or
sub
ins
xor
cmp
in
mov
shl
or
mov
pop
aad
cdq
int
data16
fwait
and
lea
iret
enter
inc
or
daa
aam
jb
pop
outs
jns
(bad)
adc
pop
dec
pop
sub
ja
jmp
out
aaa
mov
xor
fmul
rol
inc
push
sbb
mov
mov
adc
mov
es
cs
fistp
out
test
(bad)
fdiv
inc
dec
sub
dec
repnz
cmp
pop
(bad)
mov
scas
lods
xor
ds
mov
inc
adc
movs
jl
mov
es
ror
cmp
mov
mov
sbb
pop
xor
mov
jo
pop
bnd
ficomp
gs
cli
rol
es
rol
es
pop
test
push
mov
(bad)
les
jno
inc
add
jns
push
push
dec
and
test
xor
push
push
inc
push
out
pop
add
ret
iret
mov
sbb
cmc
icebp
ins
shr
dec
xor
add
idiv
push
pop
jge
test
pop
pop
xchg
push
push
bound
sbb
sahf
mov
dec
(bad)
imul
adc
add
imul
jl
outs
jno
xchg
and
out
outs
mov
daa
into
xchg
pop
test
loope
mov
sbb
lods
adc
dec
adc
inc
lock
enter
push
lock
dec
and
into
and
or
mov
cmp
cdq
mov
repnz
jp
or
jmp
out
(bad)
xchg
(bad)
pop
movs
in
jl
jb
clc
push
or
nop
loop
sub
mov
sub
cmp
icebp
retf
icebp
outs
sub
movs
push
stos
mov
pop
in
sub
sahf
sub
icebp
add
pop
cmp
xor
push
cmp
shl
into
out
rcl
(bad)
(bad)
adc
and
push
xor
pop
dec
push
and
outs
mov
sub
loope
and
sub
or
stos
mov
xchg
out
lods
jg
sbb
mov
cwde
std
lock
pushf
sub
pusha
add
daa
lock
mov
push
(bad)
mul
jg
stos
js
mov
sti
xor
in
fbstp
pop
addr16
jp
add
daa
xor
dec
xlat
shl
dec
rcr
push
mov
sahf
out
mov
dec
cmp
std
cmp
mov
int
aas
sub
mov
jmp
call
mov
or
je
or
mov
inc
fnstsw
ja
mov
dec
add
jb
sub
loope
aad
push
xlat
outs
cmps
push
pop
lods
xchg
cmc
int3
mov
cmp
iret
push
stos
call
push
adc
push
jecxz
scas
xchg
ficom
inc
mov
push
cmp
jle
cwde
sbb
mov
aas
pop
out
jge
scas
xor
das
mov
and
mov
sub
sbb
pop
std
mov
inc
inc
or
lahf
adc
push
popa
div
or
movs
cs
add
test
rol
sti
add
xchg
in
sbb
ss
(bad)
sbb
lahf
xor
out
adc
sbb
inc
pop
or
in
fimul
imul
sbb
jp
inc
xor
or
(bad)
iret
idiv
sub
xor
dec
repnz
push
adc
ds
movs
int3
mov
mov
scas
outs
jne
mov
xor
lock
stos
cmc
mov
stc
xor
inc
sub
lock
xor
aas
test
fimul
pop
movs
fimul
add
in
int3
test
pushf
dec
mov
aaa
in
mov
add
sbb
mov
mov
push
adc
jbe
cmp
ret
aaa
rcl
adc
ja
push
lock
mov
loope
cmps
mov
mov
push
sbb
sbb
out
neg
std
pop
or
jecxz
arpl
ror
sub
dec
lods
and
mov
imul
cld
je
cmp
sbb
sub
dec
mov
cmps
fild
ja
add
lds
int
stos
mov
xor
das
and
push
and
popa
jne
mov
mov
test
fidiv
jge
xchg
stc
jecxz
js
jmp
jecxz
ja
iret
xchg
aam
fsub
sub
or
push
xchg
cli
inc
or
mov
ficomp
push
push
std
push
add
pusha
mov
fidivr
mov
push
dec
repz
jnp
mov
jae
in
aad
add
jae
ja
in
xor
cmp
adc
push
fld
stos
aam
mov
mov
dec
fwait
or
adc
push
xor
imul
fwait
lods
outs
movs
mov
add
repz
mov
or
inc
call
cmc
xor
cmps
retf
mov
xor
and
dec
xor
or
ja
xchg
mov
pushf
(bad)
lock
ret
ret
adc
xchg
lods
in
mov
imul
mov
add
add
pop
ins
cmp
mov
retf
rcl
dec
sahf
sub
ja
stos
leave
xor
fcmovbe
cmp
add
mov
hlt
add
cmp
inc
adc
sbb
fld
fadd
mov
nop
daa
xor
pop
add
scas
into
fcomp
xchg
inc
mov
pop
mov
out
test
scas
fwait
adc
jb
mov
(bad)
xchg
inc
mov
cmc
jmp
push
(bad)
data16
imul
add
sbb
xchg
xlat
or
movs
das
push
sbb
imul
pop
mov
ret
push
inc
(bad)
stc
(bad)
mov
pop
xor
push
adc
mov
cmp
cmp
xor
mov
addr16
call
jp
mov
add
fcomp
rol
cmps
push
stos
cli
call
cmp
xor
outs
pop
mov
fdiv
push
and
outs
outs
icebp
cmp
push
jge
jl
sbb
jg
dec
xor
pop
lods
sbb
lahf
bound
mov
rol
dec
cld
sahf
inc
or
arpl
and
fisub
push
and
loopne
pop
push
jnp
add
mov
test
pop
push
aas
idiv
mov
aam
sbb
push
pop
mov
sti
inc
daa
ss
rcl
mov
mov
fld
pop
in
cs
push
int3
stos
fld
sub
jmp
inc
sub
sbb
icebp
ss
dec
sbb
ss
cmp
sbb
into
xchg
mov
xor
nop
cmps
pop
loop
inc
movs
cmp
or
jno
clc
push
adc
cmp
(bad)
test
pop
or
ds
repnz
in
pusha
inc
push
xchg
jae
aad
mov
add
push
cmp
fnstcw
std
and
or
es
(bad)
fincstp
add
add
fldenv
(bad)
xchg
(bad)
push
push
mov
cmp
js
jae
stos
jmp
cmp
fs
pop
mov
in
jmp
scas
mov
test
lea
mov
in
dec
dec
retf
out
test
push
push
out
call
push
mov
xchg
fidivr
push
cmps
repnz
repnz
adc
dec
sub
dec
stos
add
inc
sahf
sbb
jle
icebp
ds
daa
fnstenv
add
pop
pop
fcom
xchg
sbb
mov
and
add
sub
cdq
inc
push
xchg
sbb
xor
push
dec
or
adc
jecxz
test
fistp
jne
repz
jmp
ret
sub
and
push
sahf
cmps
sbb
push
mov
add
(bad)
cdq
jl
lock
ins
sub
xchg
jmp
sub
dec
cmp
popa
fldenv
inc
push
sbb
out
xor
xchg
sub
ins
jl
mov
outs
int3
xor
jg
fdivr
pop
mov
ss
lock
lods
lods
mov
inc
dec
into
dec
jb
pop
inc
enter
shl
mov
outs
jbe
and
aam
loopne
xor
adc
loope
outs
inc
into
fwait
jnp
add
or
retf
sti
sub
inc
jnp
out
pop
pop
xlat
shr
mov
add
pop
(bad)
stos
or
gs
fwait
in
dec
mov
xor
ja
call
sub
fs
jbe
and
add
dec
int
out
out
jle
aam
stos
pop
pop
pop
xor
adc
popa
fisub
into
xchg
xchg
arpl
cld
jnp
mov
fidiv
mov
ds
je
push
js
mov
xor
mov
xor
les
adc
xchg
dec
dec
cmps
test
push
ret
lea
push
sub
inc
stc
das
retf
mov
push
cmps
xchg
sahf
sub
jmp
rcr
test
bswap
out
inc
movq
xchg
inc
neg
dec
iret
enter
jmp
xchg
movs
fwait
and
push
inc
cmp
ret
sbb
pop
and
mov
xor
jns
movs
lahf
jne
push
cmps
imul
push
xchg
cwde
mov
pop
fdivr
adc
or
cmc
xor
sbb
out
cli
push
lds
mov
inc
and
test
sub
pop
sub
or
sbb
popa
inc
(bad)
icebp
push
(bad)
std
and
je
lock
mov
and
cli
inc
jnp
add
mov
adc
movs
(bad)
lahf
mov
inc
std
les
mov
push
cdq
jge
lods
cmp
arpl
dec
and
add
popf
sub
sbb
inc
in
out
fs
mov
adc
test
jno
int3
inc
rcr
xchg
sbb
ss
imul
in
push
pop
inc
pop
mov
ss
retf
inc
call
or
dec
mov
mov
inc
ss
test
ret
stc
or
inc
mov
out
inc
out
jmp
aad
add
pop
(bad)
push
mov
or
movs
jns
call
and
push
aaa
ror
fisttp
sbb
imul
das
jb
int3
popa
sub
sub
ss
int
stos
push
adc
inc
jae
arpl
pop
jbe
push
xor
add
scas
sbb
popa
iret
movs
cmp
(bad)
xchg
popf
call
pop
jne
cdq
scas
mov
in
sahf
add
lds
bound
in
ja
movs
add
repnz
dec
push
sub
stos
into
fnstenv
cld
hlt
imul
or
adc
mov
fist
xlat
xor
dec
in
push
lods
pop
dec
pop
aad
sbb
pop
and
hlt
aad
pop
cdq
push
pop
jns
rol
popf
pop
cmp
fsubrp
test
dec
add
mul
test
dec
je
int3
(bad)
int
cli
rcl
enter
xor
mov
mov
or
cmp
scas
xor
push
sbb
ds
mov
aaa
and
stc
ret
cdq
dec
lock
popf
mov
pop
sub
ss
cdq
scas
loop
jle
xor
addr16
data16
xchg
mov
jge
add
aaa
lock
leave
nop
daa
ins
jne
or
add
push
ret
repz
dec
icebp
adc
sbb
int3
push
jmp
mov
out
call
adc
outs
mov
lods
mov
stos
push
bound
push
movs
mov
iret
(bad)
adc
lea
iret
dec
js
add
xchg
mov
mov
xor
dec
fsub
aaa
push
and
cli
mov
ss
pusha
mov
mov
(bad)
jg
adc
out
dec
xchg
pop
xor
add
mov
adc
cmp
in
div
data16
hlt
dec
call
aaa
xor
clc
push
imul
xchg
ja
repnz
icebp
out
sub
jmp
pop
arpl
adc
jg
inc
(bad)
repnz
pop
mov
leave
jl
scas
inc
jmp
and
mov
mov
jae
ins
xor
cdq
adc
xchg
or
xor
push
pop
out
pushf
(bad)
int
inc
xchg
add
inc
fnstcw
cwde
movs
pop
outs
call
push
and
sub
or
in
mov
fdiv
leave
popf
test
inc
xor
shl
lods
je
mov
sbb
loope
mov
push
ja
mov
jmp
xor
jle
ret
jg
lods
inc
loop
call
and
icebp
daa
fbld
or
sbb
mov
pop
sti
pop
mov
sbb
xchg
jne
ror
push
cmp
push
ja
cmp
hlt
cmp
fild
mov
or
jne
mov
enter
in
aaa
inc
sub
mov
scas
or
inc
neg
sbb
lock
arpl
sub
adc
shr
adc
xchg
xchg
xor
mov
mov
cmp
aad
cs
int3
mov
inc
and
addr16
sub
mov
cmp
xor
cdq
std
and
jmp
jbe
and
das
adc
out
loop
sbb
mov
nop
mov
retf
lods
ds
mov
dec
stc
sub
jl
aad
repnz
test
sahf
test
jl
pop
jecxz
aad
mov
sar
mov
inc
and
jl
mov
cmp
clc
ret
xor
adc
or
xchg
push
imul
jb
ja
mov
sub
or
mov
xor
jg
sub
leave
dec
stos
es
pop
cmc
bound
xor
unpckhps
pop
adc
push
test
pop
bnd
sub
and
pop
(bad)
mov
mov
mov
jnp
xor
mov
sbb
mov
jl
fcmovnbe
sub
mov
xchg
cmp
dec
imul
ins
pop
ret
pop
movs
stos
add
retf
push
ds
test
or
rdmsr
jg
fbstp
and
ins
add
shl
leave
pop
in
dec
xchg
mov
xor
sub
rcl
jne
sub
out
dec
mov
jo
fstp
inc
mov
movs
pop
int3
push
add
push
inc
sbb
(bad)
and
jbe
xchg
dec
xor
shl
mov
(bad)
xor
cs
add
imul
adc
dec
(bad)
(bad)
push
add
neg
lahf
lds
aaa
mov
xchg
jle
mov
ins
shr
fistp
pop
pop
push
sti
not
fstp
pop
xchg
js
pop
pop
jecxz
jae
push
push
scas
sub
adc
mov
mov
lahf
stos
outs
lock
sbb
lahf
mov
sbb
xor
shr
xchg
lods
out
enter
out
lahf
ret
xor
js
and
xor
pop
das
mov
xchg
loop
mov
imul
cmp
inc
pop
int
and
push
jnp
jp
std
ss
sahf
test
cmp
xchg
pop
nop
sbb
loop
dec
or
dec
mov
in
sti
cli
mov
imul
sar
push
or
(bad)
mov
jp
shl
inc
out
mov
lds
push
push
test
cmp
or
jne
xchg
jnp
mov
pop
and
ror
xor
or
mov
push
cmc
sub
hlt
test
mov
mov
aad
imul
mov
movsx
enter
fbstp
sti
mov
xchg
mov
fs
inc
mov
lock
jl
(bad)
jne
out
movs
mov
(bad)
call
movs
scas
xor
dec
call
mov
imul
inc
movs
sub
jmp
mov
mov
shl
lods
xchg
in
push
enter
pushf
mov
sbb
cld
rcl
lock
daa
fld
mov
test
push
adc
aas
add
movs
mov
outs
cmp
mov
sbb
shl
je
ret
cli
ficomp
and
jge
mov
scas
movs
sub
cmp
or
jmp
(bad)
fcmovne
mov
fsubr
pop
movs
jo
adc
(bad)
dec
jmp
sub
loope
pop
mov
popf
sub
fst
out
jle
(bad)
lods
(bad)
mov
ret
xor
jmp
(bad)
fs
cld
in
inc
mov
mov
imul
sbb
cmc
test
or
lds
dec
pop
adc
(bad)
aad
scas
int3
xlat
fxch
xor
push
xchg
xor
jmp
ret
das
xlat
xor
pop
das
cmps
bound
pop
ja
test
inc
cmp
xchg
ja
icebp
push
mov
mov
xchg
mov
outs
ror
sub
inc
push
js
dec
xor
dec
mov
sbb
inc
mov
(bad)
cdq
mov
cmp
or
mov
add
movs
inc
fstp
fnstcw
loopne
pop
sub
xrelease
aas
or
popf
mov
ds
retf
or
out
fdivr
sbb
dec
pop
mov
xchg
dec
call
or
into
push
cmc
mov
inc
sbb
cmc
inc
lods
fild
or
out
mov
arpl
adc
ret
jbe
ja
pop
out
(bad)
cmp
or
fiadd
les
movs
test
retf
push
add
jb
sub
and
call
(bad)
push
mov
jmp
test
lock
inc
jmp
sbb
shl
add
div
jmp
jno
call
inc
xor
and
ret
adc
jmp
fs
dec
push
sub
ds
mov
mov
inc
cs
mov
pop
mov
pop
popa
sbb
inc
jno
or
call
stos
pop
mov
pop
or
cmps
push
mov
and
mov
retf
into
xchg
dec
xor
xchg
pop
cmps
and
jbe
fucom
inc
mov
jmp
call
sub
fisub
inc
pop
mov
fcom
pop
pop
out
scas
lods
jge
sub
int3
add
dec
rol
mov
popa
in
jae
outs
scas
jnp
pop
xor
mov
dec
and
jg
call
adc
jnp
sub
iret
(bad)
dec
push
xlat
cmp
push
xchg
mov
mov
xchg
inc
cmp
repnz
and
fisubr
aam
cwde
jl
(bad)
push
inc
cmc
jmp
push
cld
imul
sbb
aas
inc
and
xchg
sbb
imul
mov
or
inc
xchg
xlat
pop
cmps
fbstp
ror
cmps
xor
repnz
xor
sahf
jle
pop
ds
inc
fcom
cli
sub
jae
retf
pop
(bad)
shr
jb
jge
xor
push
cdq
and
out
cmp
dec
add
jnp
int
(bad)
dec
push
repnz
out
jo
dec
int3
or
hlt
cmp
dec
sub
sahf
pusha
jmp
xor
mov
cmp
test
bound
arpl
xchg
jns
test
mov
push
js
xchg
test
xchg
dec
imul
mov
jl
jb
add
sub
(bad)
daa
jb
xchg
and
push
sbb
mov
(bad)
cmc
stos
mov
adc
inc
mov
jbe
mov
fisttp
or
mov
clc
and
push
mov
and
pop
jae
fld
push
cmp
mov
mov
adc
dec
jo
call
adc
popf
(bad)
data16
in
mov
cld
mov
movs
add
lods
xchg
test
scas
neg
adc
or
test
into
mov
ja
data16
or
jmp
adc
dec
and
mov
icebp
xchg
shl
or
adc
pop
xchg
mov
fidiv
sbb
call
cli
pop
loope
push
dec
jo
dec
ret
mov
xchg
mov
pop
ds
loopne
repz
xor
imul
clc
jmp
addr16
mov
daa
into
or
mov
mov
jmp
pop
or
mov
lahf
xlat
(bad)
dec
mov
fistp
test
and
mov
ds
push
imul
jne
fs
add
or
je
xchg
push
push
retf
mov
push
mov
xchg
sub
fldenv
call
adc
mov
movs
or
rol
inc
inc
mov
(bad)
js
jns
mov
adc
shl
fstp
jns
push
repz
mov
sub
mov
inc
mov
add
and
xor
and
retf
or
scas
sti
cmp
dec
ds
pop
std
cmps
xor
mov
cmp
adc
or
pop
aad
xchg
sub
sub
jnp
sbb
mov
ror
aas
push
push
dec
pop
pop
sahf
lahf
and
scas
fild
adc
mov
in
sub
in
push
mov
rol
dec
aad
fnstenv
ins
ficom
sub
cmp
pusha
rcl
xchg
adc
fs
mov
bound
mov
adc
push
shr
jg
inc
cdq
es
xchg
out
pop
call
div
mov
push
cmp
mov
jno
(bad)
cmps
xchg
inc
pop
fist
sar
and
mov
leave
xchg
mov
mov
test
push
aam
cwde
sbb
sbb
stos
cmp
scas
(bad)
mov
div
dec
ds
int3
push
inc
add
(bad)
mov
mov
int3
mov
inc
adc
mov
xor
int3
test
pop
mov
mov
inc
test
adc
xor
sbb
push
loope
sub
push
imul
jmp
push
cdq
loope
ds
inc
enter
call
xchg
sub
jb
dec
(bad)
nop
and
push
iret
pop
push
ret
inc
dec
bound
retf
std
in
and
mov
jle
xor
sbb
mov
jmp
or
sub
fwait
dec
pop
movs
scas
popa
nop
dec
fadd
ror
mov
cmc
cmps
popf
in
pop
push
nop
xchg
push
xor
div
cld
cmp
push
ficomp
xchg
iret
dec
adc
mov
pushf
pop
sub
xchg
mov
sbb
scas
into
jae
cmp
stos
xlat
mov
jg
call
into
sbb
aad
xlat
retf
add
push
outs
cmp
cmp
mov
pop
int3
add
fisttp
inc
jne
in
out
aad
xor
xor
ret
data16
jmp
in
jl
xor
cmp
imul
jmp
call
fs
dec
sbb
add
push
into
addr16
dec
sahf
jecxz
out
jg
mov
aam
repz
adc
scas
inc
dec
dec
sub
jns
inc
mov
xchg
adc
pop
scas
push
add
jae
out
outs
cmp
(bad)
jmp
mov
mov
add
jge
mov
mov
push
dec
ins
cmp
(bad)
xor
jmp
jmp
pop
sbb
test
fimul
or
push
cs
mov
xchg
pop
mov
mov
mov
rol
push
jno
scas
je
push
pop
jp
xor
dec
loope
inc
jo
sbb
(bad)
inc
cmc
mov
in
jbe
push
idiv
jg
push
jb
bound
jbe
sub
popf
arpl
push
or
test
add
mov
xchg
fldl2t
jns
fisub
lea
jno
(bad)
retf
mov
gs
and
ret
sbb
imul
xor
xor
rol
mov
shl
ja
fist
fiadd
pop
xor
aaa
push
add
and
enter
stos
mov
and
cmp
pusha
sub
mov
cmp
loop
dec
sti
dec
add
inc
retf
sub
(bad)
mov
jno
loope
movs
fimul
imul
icebp
xchg
clc
sub
popa
jl
jmp
sbb
adc
adc
pusha
and
xchg
or
xchg
pop
fidivr
int3
dec
adc
jae
mov
(bad)
mov
call
cwde
sbb
aam
or
xchg
sbb
lds
enter
fs
jecxz
adc
out
add
(bad)
scas
std
dec
cli
adc
and
xor
pop
inc
mov
sub
ds
nop
popa
xchg
mov
and
mul
sub
aad
sbb
add
dec
leave
imul
pushf
data16
scas
outs
repnz
(bad)
aas
sub
cs
clc
stos
inc
xchg
rcr
push
inc
sub
or
cmp
mov
mov
dec
push
xchg
or
out
jecxz
pop
and
push
dec
mov
dec
cmp
cmp
in
mov
dec
mov
in
or
add
pop
adc
gs
jmp
jecxz
clc
out
mov
mov
ds
scas
into
pusha
or
lods
loop
mov
mov
movs
dec
cmc
test
mov
fnstenv
ins
mov
jg
and
sbb
gs
add
mov
stos
fimul
jbe
inc
aam
inc
aam
lods
jo
cmps
(bad)
pop
mov
movs
inc
pop
out
fist
sub
popf
sbb
push
mov
xchg
addr16
mov
xchg
jns
call
pop
outs
into
fimul
push
sahf
fidiv
cmp
out
inc
or
sbb
out
out
imul
sahf
push
test
add
out
loopne
and
pop
shr
fbstp
movs
mov
add
sub
jns
push
and
mov
xchg
(bad)
fisubr
adc
xchg
mov
hlt
push
rol
sub
pop
repz
jl
inc
mov
mov
daa
inc
lahf
xchg
fdivrp
or
pop
in
ins
cmps
not
imul
xor
mov
and
(bad)
in
rcl
scas
int
pop
stc
or
scas
xor
aaa
sbb
(bad)
push
sub
data16
(bad)
push
imul
(bad)
inc
fild
mov
and
out
fidivr
ins
push
mov
add
push
adc
(bad)
jmp
mov
xchg
jae
xchg
pop
outs
fs
sub
push
ror
jo
daa
jp
cmp
js
(bad)
les
inc
and
call
push
mov
cmc
cdq
cmps
int3
fwait
mov
cmp
inc
loope
dec
push
xchg
and
push
dec
xcrypt-ctr
cmps
pop
test
cmp
xchg
fst
pop
(bad)
js
mov
add
cmps
dec
movs
push
push
xor
(bad)
out
sub
inc
adc
adc
inc
cmp
ret
jne
imul
mov
xor
test
out
mov
dec
dec
into
adc
clc
call
dec
imul
jno
pop
jecxz
pop
xor
das
aas
arpl
fdiv
fs
sti
sti
inc
mov
pop
out
mov
jle
push
mov
pushf
xchg
jb
mul
jns
xor
aam
lods
jmp
mov
and
(bad)
out
or
push
inc
in
jecxz
mov
push
xor
int3
test
dec
inc
add
scas
push
mov
mov
push
repnz
xchg
ret
sbb
fucom
(bad)
aam
cmp
inc
sbb
clc
dec
jbe
mov
ss
jp
retf
mul
les
dec
and
int3
mov
pop
push
pusha
test
nop
jg
mov
enter
mov
pop
ret
inc
ins
movs
cld
out
add
adc
or
add
lods
inc
mov
(bad)
hlt
cs
enter
add
int
mov
jle
lods
aad
outs
scas
shl
test
jecxz
in
pop
loope
shr
outs
xor
cld
mov
adc
(bad)
(bad)
lods
(bad)
in
outs
or
cmp
(bad)
jmp
fwait
mov
js
fsubr
cld
dec
je
sbb
gs
shl
in
sub
xchg
mov
(bad)
call
push
test
mov
je
add
mov
ret
jb
call
mov
xchg
lods
push
adc
popa
in
inc
pop
or
and
sub
data16
mov
push
pop
ror
outs
fldcw
hlt
adc
push
cmp
push
sub
test
jno
xchg
(bad)
fldenv
test
repnz
sbb
jmp
repnz
inc
jnp
stos
pop
les
adc
fiadd
xor
les
sub
xchg
mov
jmp
sub
xchg
inc
lds
in
and
inc
push
int
push
daa
fbld
rol
adc
rsm
mov
cwde
jb
xchg
ja
mov
aas
jmp
cwde
les
pop
mov
call
ja
mov
mov
aam
dec
xlat
sub
(bad)
test
or
lock
cmps
(bad)
pop
ins
inc
clc
push
jo
mov
sbb
jge
mov
push
jne
and
mov
cdq
(bad)
dec
cmp
adc
call
mov
int3
outs
mov
jno
adc
out
pop
push
pop
xor
jb
pushf
bound
pop
sbb
sub
push
iret
(bad)
pop
xlat
ret
or
fisttp
mov
(bad)
imul
xchg
jmp
xlat
jns
and
add
rol
sbb
sub
and
or
imul
and
les
les
(bad)
sub
push
mov
push
mov
jno
push
sbb
in
and
sbb
pop
neg
jmp
sbb
xchg
sub
sbb
mov
cdq
and
lds
cmc
sub
dec
sbb
not
xchg
or
push
mov
push
in
xlat
dec
xchg
ss
stc
xor
xor
fisttp
das
xchg
or
cld
mov
push
inc
xor
(bad)
push
add
jnp
jno
jmp
sbb
inc
or
xor
lods
loope
dec
fistp
and
push
je
loopne
mov
fistp
js
adc
or
dec
fild
aad
in
pop
das
jecxz
(bad)
pop
repz
inc
(bad)
sbb
mov
inc
sahf
inc
aad
fdiv
xor
(bad)
xchg
sub
sbb
cld
std
inc
jbe
int
shl
aas
jb
arpl
(bad)
push
sub
sub
mov
jg
inc
fmul
or
mov
addr16
mov
xor
leave
into
shl
sbb
ja
jo
(bad)
out
(bad)
retf
dec
jg
add
call
test
lds
loop
inc
or
sbb
in
cdq
mov
jns
ret
lahf
pushf
js
gs
or
imul
addr16
das
cmp
jo
test
mov
adc
inc
faddp
lods
rcl
fdiv
movs
sahf
or
stos
(bad)
jbe
dec
cmp
das
cmp
int
out
ins
rcr
cmp
js
push
or
mov
ret
xor
idiv
push
mov
mov
sub
mov
inc
sbb
bound
jmp
lods
icebp
(bad)
adc
data16
imul
pushf
adc
popf
inc
pop
mov
jbe
arpl
mov
inc
xchg
ret
xchg
lock
mov
(bad)
xchg
dec
jne
fwait
jp
mov
push
pop
cmp
xor
xchg
mov
ins
or
jmp
push
xor
stc
stc
and
fidivr
and
lahf
sub
(bad)
outs
add
inc
mov
sub
push
dec
aaa
jno
iret
and
mov
push
mov
enter
xchg
fidivr
int3
push
les
rol
mov
mov
arpl
rcr
cmp
int
dec
es
in
dec
mov
mov
push
sub
fnstcw
dec
xor
call
sbb
pop
mov
lods
addr16
(bad)
mov
sbb
mov
mov
xor
fisubr
(bad)
xlat
dec
jmp
jmp
lahf
adc
inc
mov
aam
movzx
ror
jae
dec
call
dec
push
jecxz
pop
jbe
jno
aas
ins
pop
aad
push
jns
jns
xchg
retf
jmp
pop
fs
push
push
sbb
outs
fld
dec
out
push
push
sbb
and
imul
mov
jno
inc
xor
std
push
mov
mov
pop
sbb
push
or
sub
jle
mov
pop
or
clc
sbb
aad
enter
aas
leave
sti
add
add
mov
jg
xchg
mov
fldl2e
retf
adc
cmps
retf
fwait
rcr
xlat
jne
in
mov
xchg
pop
arpl
dec
mov
push
imul
mov
ret
and
adc
out
cmc
stc
mov
enter
and
cs
mov
into
xlat
or
sbb
inc
adc
rol
retf
jl
inc
cmp
stos
cs
and
fwait
js
add
pushf
out
sahf
test
pop
imul
cli
leave
fidiv
mov
jecxz
lahf
or
cmp
jno
xchg
sub
dec
jne
shr
int3
jp
ficom
mov
add
sar
rcl
pop
jmp
inc
das
mov
pop
fldlg2
(bad)
mov
and
(bad)
dec
dec
scas
outs
sub
pop
rol
xor
xor
jecxz
je
add
sbb
mov
(bad)
add
movlps
adc
jl
mov
xchg
mov
inc
sub
imul
out
data16
xchg
jns
mov
js
enter
and
add
or
dec
sub
dec
sahf
popf
mov
inc
push
dec
xor
cmp
and
shl
mov
(bad)
das
fistp
cmc
iret
iret
cdq
in
sbb
mov
pop
xchg
shl
sub
gs
sbb
inc
jbe
or
adc
fld
cmp
adc
or
jmp
mov
sbb
jp
mov
xchg
aaa
and
xchg
icebp
in
std
ret
jb
push
lahf
sahf
mov
into
imul
jg
cmp
or
pop
call
int3
retf
inc
jl
adc
push
add
inc
add
ins
or
pop
inc
or
sti
call
mov
retf
add
or
mov
aad
sub
xor
cmc
push
sar
int
cmp
or
mov
cmp
xchg
mov
stc
xchg
xchg
or
cmps
pop
xlat
jbe
sahf
rol
call
dec
iret
lods
inc
dec
add
sub
inc
dec
jp
clc
pop
fst
jge
or
jne
inc
add
jne
js
fist
adc
or
lahf
adc
(bad)
stos
pop
or
mov
mov
pushf
test
and
add
fld
pop
sub
or
lahf
pushf
inc
adc
in
rcl
fmul
jl
or
sbb
xchg
into
loop
xlat
mov
sub
hlt
pop
add
add
cli
jae
sub
in
hlt
push
(bad)
inc
in
sbb
adc
cmp
cld
xor
and
leave
jae
add
mov
mov
call
xchg
les
sti
stos
xchg
fiadd
lds
cdq
jo
mov
sbb
clc
dec
inc
cmps
push
sub
fistp
xor
and
test
jle
add
jno
lea
pop
fcomi
mov
ficomp
xchg
ja
ss
inc
repz
jge
cmps
iret
adc
icebp
int
leave
gs
inc
inc
or
outs
ins
xor
and
(bad)
inc
dec
mov
pusha
pop
loope
cdq
je
inc
dec
ficomp
icebp
(bad)
arpl
pusha
icebp
sub
or
nop
(bad)
rcl
aas
cmp
nop
jne
cmps
call
icebp
retf
aad
mov
in
jg
pusha
in
call
mov
mov
inc
xchg
mov
ficom
test
adc
sub
cmp
in
in
dec
retf
jnp
pop
push
mov
inc
mov
fwait
pushf
xchg
cld
sbb
stos
mov
sub
(bad)
fist
(bad)
xor
push
in
mov
popa
sbb
(bad)
(bad)
dec
shl
fsubrp
and
push
rol
fs
stos
xchg
dec
push
(bad)
out
jno
inc
xor
shl
push
pop
add
fidivr
and
fsub
ins
or
cld
stc
sub
push
push
adc
sub
test
clc
xchg
lods
adc
ret
popf
adc
es
fucomip
add
fwait
sbb
ror
or
mov
cmovae
cmp
inc
fcom
cmc
sub
mov
cmp
fadd
or
pop
jo
mov
lahf
jbe
and
ins
jno
pop
pop
bound
stos
aad
pushf
jl
cmp
xchg
pop
xchg
jmp
xchg
sahf
mul
dec
out
mov
push
or
xor
gs
jb
in
sar
and
push
and
push
in
in
ins
sti
mov
retf
mov
in
paddusw
jmp
icebp
fadd
inc
push
loop
jne
(bad)
fwait
(bad)
daa
aam
scas
cmps
mov
mov
jle
std
jns
sbb
or
mov
mov
in
(bad)
shl
out
xor
mov
xor
adc
push
xchg
out
out
cmps
outs
or
pop
sub
adc
push
iret
call
ds
ins
frstor
ins
(bad)
aam
mov
and
es
dec
inc
dec
and
and
cdq
xor
mov
pop
pop
sahf
fbstp
(bad)
mov
pusha
(bad)
mov
cli
js
into
pop
mov
lods
xor
mov
xor
outs
jne
shl
arpl
pop
ret
mov
and
ins
cwde
pavgb
das
jmp
dec
pop
loopne
xchg
ret
out
push
ret
dec
(bad)
fist
jp
push
stos
mov
stos
ror
mov
and
shl
pop
mov
iret
adc
and
xor
je
mov
(bad)
(bad)
xchg
adc
(bad)
enter
stos
out
cmc
mov
inc
out
pusha
imul
fld
out
popa
dec
ja
sahf
sub
cmp
outs
jge
vucomiss
retf
add
imul
mov
mov
jp
sti
cld
add
int3
call
ret
fnstsw
sbb
mov
or
xor
fucom
mov
xchg
jmp
push
mov
jno
xor
jmp
lock
mov
mov
lock
scas
lahf
into
loopne
dec
ret
fisttp
mov
lea
pop
aaa
aas
sub
add
xchg
adc
and
imul
rcr
cmp
outs
fisttp
(bad)
sti
mov
mov
call
add
sbb
sbb
sub
sub
fmul
out
adc
mov
mov
mov
add
and
cmp
repnz
popa
pop
or
mov
mov
outs
dec
leave
add
mov
stos
(bad)
adc
hlt
add
dec
mov
test
les
jbe
push
xchg
cs
cdq
xchg
pop
retf
sub
sbb
hlt
fist
fdivr
lea
cdq
icebp
xor
minps
pop
(bad)
fisub
push
jge
pop
xchg
xor
mov
sub
ins
push
retf
adc
xor
pop
test
stc
mov
cwde
fist
or
popa
inc
mov
shl
add
ja
(bad)
mov
push
popf
add
mov
cmp
std
mul
dec
gs
push
or
in
mov
xchg
or
mov
push
cmp
(bad)
in
lods
sti
lfs
xchg
mov
mov
das
jl
into
cmp
pop
add
xchg
sti
inc
sub
jmp
jmp
pop
xor
push
sbb
test
mov
mov
icebp
mov
sbb
and
or
loopne
or
sbb
daa
or
xor
dec
inc
mov
mov
loopne
popf
dec
cli
repnz
xor
cmps
pop
out
hlt
dec
shl
push
mov
pop
cmps
xor
pop
mov
in
cmp
xchg
or
jge
outs
add
and
into
loope
mov
(bad)
pop
cmp
inc
xchg
in
adc
in
jp
loopne
leave
je
jp
cmp
loop
mov
and
jbe
mov
push
(bad)
int3
adc
jmp
lods
add
xor
fisubr
inc
loope
clc
mov
loopne
add
jo
push
sbb
js
jecxz
ret
sbb
and
mov
push
loope
dec
imul
daa
pop
es
lods
cdq
in
inc
leave
je
ja
xor
sar
std
adc
out
xchg
sub
xchg
inc
les
icebp
ss
ins
popf
xor
and
xchg
iret
cdq
push
or
mov
mov
pusha
push
or
stos
inc
repz
arpl
fistp
frstor
xor
int
cmp
sti
shl
cmp
sahf
mov
sti
add
jns
push
jmp
xor
jne
push
mov
les
sbb
sahf
push
aaa
pop
sbb
cmc
lods
jg
shl
out
dec
xor
mov
sub
inc
pop
test
imul
mov
dec
mov
push
loop
nop
xchg
fucomi
mov
mov
in
pop
cmp
cmps
int3
out
js
pop
retf
stc
pop
dec
mov
movs
xchg
xchg
jno
int3
call
add
jbe
mov
jg
into
push
movhps
leave
or
retf
gs
inc
and
jb
mov
xor
lds
push
inc
mov
xchg
mov
jbe
pop
(bad)
mov
test
pop
jl
gs
sub
xchg
daa
leave
and
fidiv
sub
in
dec
test
pop
je
and
xchg
ja
test
cwde
xor
stc
loop
shl
out
sar
fdivr
(bad)
push
inc
es
ds
or
add
imul
cmp
daa
adc
not
sbb
push
lds
std
in
ror
cs
retf
gs
dec
lea
(bad)
cmp
sub
pop
pop
daa
lds
cmp
jae
push
das
and
ss
jno
ret
dec
sub
or
and
dec
jmp
cmp
shl
cs
rol
sbb
test
test
add
add
or
jns
test
imul
cmps
or
jl
and
bound
sbb
push
mov
ins
push
das
cdq
or
mov
sar
fcomp
js
mov
test
ins
add
idiv
stos
push
repz
cmp
xchg
jmp
mov
add
inc
enter
movs
into
fidiv
sub
jns
jae
lea
mov
mov
pop
out
mov
les
and
(bad)
adc
sub
repz
daa
je
lds
daa
and
test
and
jmp
into
es
movs
cmp
imul
push
mov
or
push
xor
mov
push
cmp
xchg
cmp
repz
popa
or
cli
add
push
inc
push
add
sub
out
call
repz
sbb
cli
fisubr
fisub
mov
jbe
pop
push
jbe
repnz
mov
mov
mov
mov
inc
lea
jecxz
mov
arpl
add
or
mov
add
push
xchg
(bad)
jno
adc
xor
test
int
push
rcr
add
and
add
sbb
mov
outs
loope
xchg
cmps
jg
ins
push
push
push
jno
pushf
and
dec
fld
push
mov
cli
adc
rcl
or
daa
push
and
mov
jo
adc
icebp
retf
lods
pop
mov
sbb
dec
hlt
inc
cmc
or
or
ror
mov
clc
ins
clc
adc
lock
inc
stos
int3
addr16
ja
xchg
pop
sub
and
mov
cmps
push
test
ficomp
xor
mov
push
mov
cmp
push
push
mov
add
or
cli
test
push
repnz
mov
pop
pop
add
cdq
(bad)
(bad)
pushf
std
test
mov
nop
cmp
call
dec
and
fisubr
pop
jmp
es
iret
pushf
shl
shl
xor
jno
mov
sahf
add
xchg
in
and
ds
mov
push
sar
sbb
jbe
or
jle
daa
(bad)
pop
sbb
mov
inc
xchg
jmp
cli
arpl
jle
rcl
inc
pop
fistp
in
test
sbb
lock
shr
cmp
movs
or
movs
lea
ret
xchg
sub
or
pop
and
rcl
enter
nop
xor
inc
sub
cmc
(bad)
in
mov
xchg
call
nop
mov
inc
test
(bad)
pusha
and
pop
mov
retf
aam
inc
and
or
fnstsw
and
ret
jnp
jp
add
xchg
and
dec
jbe
retf
(bad)
rcr
es
mov
and
cdq
jl
and
fstp
and
fndisi(8087
mov
sub
enter
push
inc
ins
ins
(bad)
retf
adc
inc
adc
mov
ins
fidivr
xchg
sbb
rcl
jno
sbb
aad
pop
adc
cmp
push
cli
jg
fadd
nop
mov
xchg
cld
fsub
das
jno
xchg
jle
mov
push
adc
and
jne
inc
mov
inc
push
retf
pop
mov
mov
mov
lods
int
movsx
cmc
xchg
daa
xor
mov
sub
dec
and
ficomp
mov
and
(bad)
xor
jle
into
jo
ins
imul
in
loop
xor
icebp
pop
add
sbb
jb
mov
sub
sub
inc
xlat
aas
push
or
je
add
sahf
pop
data16
xchg
pop
bound
sti
nop
ins
dec
mov
(bad)
movs
xor
xlat
fwait
aad
mov
movs
cmp
jmp
inc
test
es
leave
mov
push
inc
rol
adc
push
xchg
xor
pop
lock
jmp
sbb
stos
cmp
or
cmp
in
(bad)
bound
and
dec
push
dec
pop
repz
mov
cmps
push
test
pop
(bad)
mov
jno
and
lods
(bad)
(bad)
cmps
fisub
loop
mov
shl
push
mov
cdq
faddp
(bad)
leave
fs
pop
iret
call
add
cdq
jecxz
mov
sahf
nop
jle
scas
sar
jmp
pop
(bad)
arpl
out
cs
push
vorpd
xchg
and
push
inc
dec
fist
and
clc
bound
or
mov
loopne
fwait
xor
inc
add
test
xor
mov
push
stc
or
je
es
mov
add
out
les
ss
mov
mov
cmps
arpl
mov
lods
adc
mov
inc
dec
xor
jecxz
and
jle
fs
loop
jns
adc
and
jno
dec
sub
scas
rcr
inc
jecxz
and
bound
xchg
loop
ss
ror
cmp
std
xchg
dec
into
lea
dec
out
pop
jno
icebp
cmp
add
mov
dec
fs
inc
mov
mov
inc
cmp
loop
adc
std
adc
xchg
fstp
mov
scas
lock
xor
push
sub
add
fwait
loope
arpl
xchg
leave
mov
jno
scas
mov
outs
(bad)
in
fbstp
fsub
ficom
aaa
hlt
gs
ss
mov
adc
lahf
pop
icebp
add
xchg
and
xor
mov
xor
mov
xchg
dec
mov
mov
in
test
pop
aas
dec
and
mov
sub
adc
aam
mov
jne
mov
pop
retf
mov
sub
sub
(bad)
stos
dec
call
or
div
add
lahf
pop
xor
out
xlat
jo
iret
dec
mov
xchg
adc
or
jp
je
mul
mov
ins
dec
das
adc
xchg
pop
push
inc
in
sahf
cmps
jge
mov
popa
out
clc
sbb
cmp
mov
mov
add
mov
push
jge
arpl
xlat
mov
and
sti
xchg
(bad)
arpl
(bad)
fbld
xchg
shr
test
ret
fs
pop
pop
xor
push
mov
xchg
hlt
cmp
retf
pusha
or
icebp
(bad)
je
cmp
dec
adc
sbb
es
mov
xlat
ret
(bad)
mov
and
(bad)
mov
jg
push
call
and
xor
xor
in
mov
(bad)
out
adc
cld
adc
mov
cs
jo
das
mov
scas
dec
clc
push
aad
pop
or
sti
cs
test
int3
push
fild
add
sar
jmp
bound
pop
mov
jmp
lods
push
mov
dec
mov
add
(bad)
xor
in
inc
icebp
daa
mov
jmp
cmps
mov
scas
mov
in
aaa
rol
jl
inc
fild
fwait
xor
sbb
mov
sub
adc
dec
fsub
pop
dec
sbb
inc
adc
inc
jmp
pop
pop
fwait
std
mov
add
cmp
enter
fs
mov
cli
xor
movs
cmp
(bad)
mov
sbb
pop
mov
mov
popf
popa
or
inc
mov
shl
movs
add
hlt
mov
cdq
repnz
xor
stc
sbb
adc
sbb
loopne
(bad)
fnstsw
fiadd
jl
rol
inc
xchg
call
lock
and
push
xchg
sub
in
mov
and
and
push
mov
das
neg
push
ficomp
dec
lods
cmp
fisttp
cwde
adc
lds
mov
int3
inc
cmps
das
retf
ds
ins
lock
ret
mov
inc
cmp
adc
inc
call
ficomp
and
or
fucom
jae
outs
retf
jmp
sbb
xlat
mov
mov
ret
int
sbb
xor
pusha
stc
repnz
inc
mov
in
add
xor
mov
pop
stc
jl
cmps
xor
xchg
dec
(bad)
fnstsw
sbb
and
inc
int
stos
cs
stos
add
dec
ret
fadd
ss
movs
and
shr
dec
sub
daa
sbb
or
pop
out
cmp
outs
dec
push
outs
jns
cwde
pop
add
inc
add
mov
js
movs
and
xor
sar
popa
imul
(bad)
hlt
and
mov
mov
xor
ss
cmp
cmp
push
or
int3
imul
add
inc
lods
aad
jmp
xchg
out
movs
movs
movs
mov
adc
xchg
mov
dec
daa
mov
xchg
or
and
enter
sbb
xchg
and
sti
xchg
(bad)
sub
fisttp
xor
jmp
jecxz
xor
jne
mov
mov
push
xchg
xor
adc
rcr
lds
mul
xchg
int3
hlt
push
stc
and
jl
and
dec
mov
sbb
ja
ret
fcomip
or
inc
inc
sti
mov
shl
cmp
jne
cs
cmps
test
xor
push
add
mov
jl
imul
sub
inc
repz
addr16
sub
push
adc
mov
inc
pop
cdq
bound
cmp
mov
lods
xor
xor
mov
mov
test
scas
imul
adc
pop
popf
mov
push
push
or
(bad)
or
dec
std
cmp
ins
push
cmp
mov
jns
sbb
push
and
mov
jecxz
push
lods
xor
imul
pushf
dec
add
sub
outs
mov
sbb
pop
xor
mov
aas
lahf
pop
and
sbb
ret
sahf
lea
jmp
js
es
and
mov
div
retf
mov
xchg
push
std
xchg
sub
call
pop
outs
or
and
dec
mov
add
cmp
aas
xchg
int3
pop
pop
dec
jp
jmp
push
clc
dec
jmp
jbe
call
cmp
mov
mov
cmp
in
mov
sub
pop
pop
xor
shl
xchg
nop
dec
mov
ins
xchg
xchg
xor
cmp
or
cmps
sub
mov
aas
scas
rol
xchg
cld
cdq
mov
ins
ror
mov
push
jo
mov
xor
outs
movs
or
mov
sbb
or
or
cmc
jno
jecxz
mov
mov
idiv
repnz
xchg
mov
in
sbb
jp
push
inc
mov
faddp
mov
sub
fmul
fxch
lahf
mov
dec
mov
mov
mov
cs
out
idiv
mov
jne
outs
repnz
cmp
jmp
inc
inc
call
iret
cld
or
scas
retf
mov
push
not
push
jecxz
lods
and
mov
mov
push
hlt
loopne
inc
fist
ins
les
inc
xor
push
adc
and
inc
outs
daa
mov
xor
cmovp
pop
jbe
pop
ds
sbb
or
out
mov
in
sub
nop
into
xor
or
add
cmc
dec
leave
push
dec
fcmovu
popf
clc
test
add
sub
jae
add
push
(bad)
fistp
inc
sub
xor
fiadd
mov
mov
popa
mov
fidivr
push
adc
mov
push
addr16
jne
mov
fidiv
hlt
xor
nop
dec
adc
lahf
shr
xchg
ret
lahf
mov
dec
stos
mov
fisub
popa
xor
arpl
cmc
push
pop
or
jecxz
sbb
dec
loop
pop
jno
push
adc
mov
jno
mov
out
pop
or
hlt
loope
rcl
ss
fs
test
dec
fwait
mov
outs
xchg
inc
dec
add
aas
push
cwde
rol
push
xchg
sub
adc
pop
sub
jns
mov
aad
rcl
in
ja
jmp
jecxz
clc
fwait
xchg
out
mov
lds
fs
or
repz
xor
dec
popa
int
js
mov
xchg
mov
mov
xchg
dec
ret
ret
jl
mov
scas
(bad)
sbb
sti
xor
jae
dec
jb
idiv
push
cdq
sti
add
pop
sbb
mov
daa
sub
xchg
jle
retf
or
mov
scas
or
pop
aad
repz
push
into
dec
mov
jne
cld
inc
or
mov
rep
icebp
mov
enter
xor
mov
in
mov
das
mov
pop
jge
sbb
lods
shl
inc
sub
add
or
scas
jmp
xor
out
scas
dec
dec
out
out
jns
add
jge
pop
or
xchg
mov
pusha
mov
push
and
dec
add
xlat
(bad)
gs
pop
in
lods
dec
(bad)
mov
cmp
(bad)
cmp
xor
stos
mov
mov
cli
lahf
adc
test
call
mov
mov
stos
xchg
in
inc
sar
push
daa
cmp
iret
mov
sar
stos
stos
enter
in
ins
fmul
sub
xchg
sub
and
xchg
aas
sub
mov
mov
(bad)
push
pop
mov
fistp
fsubr
cmp
mov
lea
addr16
and
sahf
pop
jge
inc
sbb
xor
ja
retf
shl
mov
out
fmul
sbb
push
xchg
mov
mov
fidivr
mov
iret
addr16
pop
in
lods
(bad)
(bad)
mov
ins
sar
inc
add
add
mov
pop
dec
dec
fsub
(bad)
out
sbb
xor
xor
xchg
push
test
mov
outs
jmp
or
ror
int
ret
bound
pop
mov
xor
push
pusha
jo
fidiv
inc
mov
xlat
add
jnp
mov
test
aas
jl
pop
scas
fucomip
or
test
fs
outs
adc
push
gs
callw
sub
mov
repnz
nop
jg
loope
xor
(bad)
mov
or
mov
jl
xchg
int
jo
adc
mov
cmp
jecxz
and
sub
fstp
mov
loope
and
ja
mov
inc
mov
aam
leave
lea
mov
push
(bad)
pop
pop
cmc
or
pop
or
and
push
adc
repz
jle
lds
inc
xor
into
push
dec
movs
sbb
dec
push
adc
lods
rcr
pushf
inc
dec
sahf
pop
repz
push
pop
(bad)
lock
test
std
dec
mov
xchg
inc
push
and
mov
xchg
in
lahf
cld
sub
div
je
fnstsw
jmp
inc
push
(bad)
mov
sub
int
mov
stc
pop
aad
in
stc
rcl
ds
std
sub
out
mov
popf
add
cmp
in
ss
xchg
fist
mov
add
jo
cmovge
test
or
xor
stc
stc
xchg
ds
and
cdq
jb
aaa
lock
scas
mov
(bad)
out
pop
push
xor
pop
js
cmps
clc
int3
(bad)
arpl
inc
jle
sub
(bad)
pop
fbld
das
shl
fnstsw
push
mov
cmp
retf
call
sub
push
or
xor
xor
ret
clc
jmp
dec
xchg
cli
sbb
je
jge
out
mov
(bad)
stos
mov
lahf
mov
adc
mov
outs
bound
push
jae
add
retf
push
repnz
add
js
in
lds
mov
ret
ret
test
fs
add
and
stos
dec
cmp
lods
ins
and
xchg
rcl
fxch
bound
leave
and
jge
lods
pop
out
xor
loopne
sbb
lods
inc
addr16
lds
movs
add
shl
jmp
retf
cmp
xor
pop
jns
adc
mov
cli
jae
cs
in
and
data16
push
scas
pop
sub
ret
xor
mov
mov
push
sbb
sub
add
push
mov
ror
lahf
mov
and
addr16
movs
loope
dec
lods
cmp
daa
adc
mov
lahf
jo
mov
int3
mov
retf
xor
mov
jle
ds
jno
cmc
ret
daa
mov
jb
icebp
mov
sbb
loopne
pop
fs
add
jae
inc
cmp
std
popf
(bad)
push
sbb
ds
sbb
cdq
in
push
pusha
(bad)
stc
sub
ins
int
movs
jns
mov
imul
sub
adc
shl
dec
fisttp
retf
dec
ja
shl
out
mov
xor
inc
dec
or
mov
adc
or
cmps
sub
(bad)
fisttp
add
test
mov
pushf
and
pop
dec
add
pop
mov
pop
les
push
push
or
(bad)
sbb
(bad)
mov
mov
lods
ftst
and
stos
call
mov
gs
adc
inc
(bad)
pop
and
mov
sbb
vsqrtsd
pusha
popf
les
cdq
imul
push
data16
cmp
inc
(bad)
ins
popa
mov
or
adc
js
and
sbb
jle
cli
in
jnp
push
aas
or
(bad)
mov
es
push
movs
jne
in
xchg
sub
xor
jne
in
es
inc
stos
xor
mov
and
shl
pushf
ret
jle
and
pop
aaa
jo
xchg
and
dec
movs
jecxz
add
cmp
ds
rcr
add
icebp
or
call
pop
in
adc
sub
lds
ins
xchg
(bad)
fs
pop
out
das
mov
sbb
test
fmul
xchg
sub
call
xchg
mov
sub
ret
jnp
adc
es
push
lods
cmps
cwde
out
sbb
inc
mov
ds
in
lahf
xchg
fsub
mov
dec
add
hlt
mov
xor
bound
pusha
mov
adc
sbb
and
stos
mov
push
das
out
icebp
leave
sub
add
mov
dec
jle
mov
aaa
xor
push
pusha
xchg
repnz
xchg
aad
sub
mov
sbb
cmp
mov
fcmove
cmp
test
jle
scas
int
mov
dec
ret
xchg
cdq
jl
xchg
sub
sar
imul
push
cmp
xchg
push
xchg
cwde
cmps
jno
call
xor
out
out
jns
addr16
dec
clc
mov
add
repz
aas
outs
dec
or
jmp
xor
ss
jb
cdq
lods
test
or
jno
jo
xchg
cmp
int
out
mov
fcomi
push
push
test
stc
cmc
mov
sbb
xchg
mov
call
xchg
icebp
add
imul
repz
retf
(bad)
mov
test
rcl
sbb
push
(bad)
cmc
clc
jns
cmp
pop
inc
mov
mov
fwait
xlat
sub
test
loop
int
sub
leave
xor
xchg
ret
push
fbstp
push
call
inc
inc
pop
mov
pop
sbb
retf
inc
mov
sahf
dec
sub
dec
icebp
mov
cli
and
arpl
lods
adc
ret
xchg
dec
push
jge
and
xchg
popf
les
and
or
mov
adc
mov
in
mov
push
call
push
dec
imul
je
push
movs
sub
stos
dec
mov
xor
pusha
mov
mul
sbb
mov
retf
pop
inc
push
push
sub
mov
fist
sbb
aam
sti
les
sbb
movs
mov
data16
push
dec
dec
outs
pop
(bad)
mov
popa
mov
xor
push
or
addr16
loop
retf
mov
ins
sahf
and
dec
(bad)
mov
lods
test
jecxz
into
lock
cld
add
fmul
ss
mov
pop
sub
mov
ja
or
hlt
adc
popf
(bad)
fnstenv
into
pop
sbb
dec
bound
sub
mov
ret
xchg
into
and
loop
repnz
enter
popf
std
add
dec
into
xor
sbb
mov
dec
scas
xlat
add
pop
mov
inc
je
cmp
mov
ffreep
pop
mov
ret
fimul
sahf
and
div
enter
mov
xchg
push
pop
jmp
jo
cdq
xchg
push
push
fdivr
xor
add
and
js
push
std
dec
and
inc
div
sbb
js
mov
ret
retf
push
nop
loop
dec
(bad)
fisub
scas
imul
inc
and
xchg
xchg
dec
mov
sbb
xchg
bound
push
test
lock
stos
pop
(bad)
xchg
xor
adc
inc
dec
ret
sub
cmp
or
jmp
lods
nop
leave
jg
in
clc
push
inc
bound
pop
and
jp
out
out
push
(bad)
and
sub
xor
inc
call
aad
inc
mov
or
push
in
scas
dec
fcomp
xor
xor
mov
xchg
(bad)
mov
dec
shl
dec
ins
in
mov
rcr
jnp
jb
loop
and
jge
mov
stos
jge
fsubr
nop
int3
and
gs
fbld
xlat
xlat
aad
rcr
inc
pop
enter
xchg
pop
ret
xchg
adc
and
and
clc
sbb
fldenv
pop
jecxz
mov
adc
ins
or
or
ins
mov
pop
loop
and
jmp
and
cmp
mov
pop
or
fs
out
or
sub
add
popa
add
inc
loopne
jle
sbb
mov
add
scas
xchg
repnz
test
dec
inc
cmps
loop
mov
lea
cs
add
test
jns
sub
jl
into
js
jno
out
mov
ds
repz
xor
fmul
call
retf
call
sbb
fwait
pop
cmp
sti
cmc
les
mov
ja
mov
push
pop
lahf
std
retf
mov
cmp
add
jbe
mov
jmp
mov
dec
push
mov
mov
adc
mov
add
push
jecxz
or
and
enter
movs
mov
inc
xor
shl
mov
xchg
sbb
lea
movd
jmp
into
icebp
inc
icebp
mov
dec
enter
mov
push
adc
push
add
lods
pop
jns
cmc
nop
jge
iret
pop
lods
pop
push
repnz
or
sub
push
push
pop
sbb
ss
cdq
mov
xor
test
sbb
in
xor
cmps
pop
cmp
neg
jge
xor
lock
imul
pop
(bad)
pop
cmps
pop
cmp
(bad)
ficomp
pop
push
out
idiv
pusha
retf
sbb
sub
dec
and
scas
call
push
ja
(bad)
and
xchg
ret
add
push
scas
addr16
sbb
add
lods
xchg
mov
xchg
jno
bound
daa
leave
cmp
adc
fdivrp
mov
inc
ins
sub
popf
cmp
repz
cmc
pop
jne
push
mov
fild
xor
push
test
cmp
or
jmp
mov
fcmovbe
stos
adc
jnp
mov
add
xchg
lods
jb
sub
mov
arpl
loopne
nop
dec
cmps
mov
test
xor
pop
imul
into
fbld
ret
cmc
cli
mov
or
sbb
out
or
sti
test
mov
lahf
test
or
xchg
xor
jno
mov
lds
push
test
repnz
sub
add
adc
icebp
mov
ja
test
cmp
retf
imul
ret
jg
loope
sbb
add
pop
push
loope
jb
sub
ins
cmp
mov
aaa
test
push
add
test
dec
jmp
pop
ins
shr
or
test
dec
cmp
cmp
pop
sti
dec
fmul
and
cld
aad
fld
inc
mov
sahf
jbe
xchg
in
cmp
adc
ror
push
shr
in
push
sar
push
xchg
repz
pop
xlat
and
inc
movs
sbb
add
xchg
mov
int3
cmps
adc
or
mov
or
pop
idiv
mov
push
xchg
cmps
inc
mov
fwait
and
push
fld
(bad)
ror
jg
out
inc
push
icebp
pushf
ret
and
stos
mov
test
xchg
sub
and
es
cmp
mov
scas
rcl
in
enter
sub
nop
ret
inc
test
inc
dec
or
out
sbb
and
push
dec
xor
add
cmp
push
call
mov
adc
xchg
pusha
inc
adc
xor
aas
pop
mov
xor
dec
aam
cmp
cdq
nop
sbb
cmp
outs
mov
out
imul
push
(bad)
pop
inc
push
hlt
or
(bad)
loop
pop
lock
test
mov
in
mov
les
mov
mov
mov
pusha
faddp
push
pop
or
mov
std
in
add
das
xor
inc
ffree
inc
fcmovnbe
leave
ins
mov
push
sbb
pushf
xchg
push
or
jmp
mov
imul
adc
add
fmulp
mov
hlt
(bad)
imul
mov
shl
pop
jle
fcom
stos
dec
or
sbb
pop
mov
enter
arpl
pop
dec
leave
cmp
push
std
pop
adc
and
pop
sbb
mov
or
bound
mov
hlt
es
call
dec
ret
push
mul
je
bound
dec
sbb
push
inc
pop
hlt
retf
push
jmp
adc
xchg
push
fld
test
daa
jne
pop
sbb
or
dec
pushf
jae
test
xchg
jne
sbb
adc
das
aaa
ds
push
push
push
pop
out
test
mov
fistp
fiadd
loop
arpl
out
dec
adc
cs
repnz
sbb
inc
out
sub
sub
mov
pop
mov
imul
mov
sub
js
mov
mov
repnz
inc
scas
mov
das
rcr
movs
(bad)
test
adc
ins
stos
adc
icebp
mov
retf
cmp
sbb
pop
imul
inc
adc
xchg
stc
and
mov
mov
out
jae
jl
push
ret
rcr
dec
gs
push
arpl
aad
adc
mov
mov
in
sbb
and
aas
push
enter
ins
jp
std
inc
shl
imul
jne
mov
xchg
pop
cdq
(bad)
pop
icebp
fmul
enter
or
cld
out
mov
lahf
jno
dec
sbb
mov
push
movs
pop
ret
fs
xchg
adc
sub
neg
pushf
adc
jge
loopne
scas
ins
mov
lea
and
fsub
lods
add
retf
dec
enter
jp
addr16
add
add
cmps
inc
ja
gs
jg
stos
cmp
mov
or
cmps
sub
pop
xchg
ins
mov
mov
(bad)
imul
and
xchg
scas
ds
or
sbb
in
es
repz
and
mov
jbe
pop
retf
jnp
sbb
jmp
shr
xor
mov
adc
iret
and
add
xor
cmp
(bad)
lea
pop
xor
or
gs
xchg
mov
mov
fabs
inc
push
mov
lds
or
jl
dec
cmp
and
adc
sbb
pop
xlat
out
loop
sub
mov
mov
sbb
mov
js
or
call
dec
cmp
xor
sbb
fwait
gs
mov
enter
sub
lods
out
popa
test
jmp
stos
(bad)
cmc
pop
lock
sub
mov
mov
fiadd
cmp
std
pushf
mov
sub
fs
push
imul
addr16
scas
mov
inc
int3
mov
xlat
retf
fbstp
inc
dec
rcr
inc
test
dec
outs
add
sbb
cmp
inc
push
loop
xor
neg
jl
iret
out
in
xchg
in
mov
xchg
call
pop
add
jmp
cmps
or
mov
fidivr
(bad)
mov
cmp
bnd
adc
inc
sbb
cwde
sbb
outs
add
hlt
shr
dec
sub
repnz
pop
mov
adc
xchg
pop
icebp
repz
hlt
test
scas
into
iret
test
mov
(bad)
or
cmp
mov
mov
lock
pusha
dec
aad
xchg
jno
fidiv
(bad)
out
(bad)
das
fldcw
shl
daa
(bad)
adc
mov
pop
scas
mov
jnp
and
xor
repz
xor
mov
data16
cmp
loop
in
add
jno
add
xchg
fisttp
ss
enter
cmp
ds
xor
pop
daa
pop
call
inc
mov
jb
test
mov
fnstcw
sub
mov
sub
mov
shl
push
xchg
(bad)
in
cmp
stos
xor
cwde
cmps
(bad)
aaa
lahf
and
inc
add
push
ret
sbb
xor
out
iret
(bad)
test
push
rol
push
jecxz
add
outs
push
call
xchg
sub
fs
mov
int
mov
cmps
ss
push
adc
xchg
pop
xchg
add
adc
jno
push
cdq
arpl
dec
xchg
jmp
fdivr
(bad)
out
loope
add
and
in
(bad)
in
cli
mov
enter
mov
pushf
pop
pop
loope
xchg
mov
xchg
cdq
pop
cmps
xor
les
lods
cmc
pop
ror
inc
cli
call
call
and
mov
sbb
ret
dec
add
aam
cs
cs
inc
scas
pop
fldcw
and
mov
pop
push
mov
mov
inc
fild
rcl
ds
les
inc
push
scas
mov
adc
or
in
adc
rcl
scas
imul
lock
xor
sar
xchg
mov
sub
js
sub
cmp
out
pop
adc
mov
fadd
jb
pop
sub
mov
sbb
cmc
retf
dec
stos
push
repz
aaa
inc
aam
jns
lea
adc
stc
or
fwait
push
jo
jne
adc
mov
xchg
sub
hlt
mov
aas
sub
retf
adc
aas
mov
lock
adc
fcomp
in
jp
fdivr
pop
push
loopne
cpuid
int3
mov
or
ins
daa
fist
pop
dec
out
adc
fisubr
pusha
mov
mov
or
cmp
mov
mov
div
aad
jp
dec
outs
xor
mov
stos
repz
mov
dec
push
outs
sti
scas
(bad)
aam
cmps
cmp
ins
add
sub
xchg
sbb
outs
sar
and
mov
jg
xchg
mov
sbb
fnsave
cmp
or
(bad)
pop
push
pop
sbb
ins
out
pop
pop
(bad)
xchg
mov
psubsw
cmc
xchg
adc
pop
or
ror
mov
and
and
ds
out
ss
push
jae
jnp
call
clc
movs
fisttp
(bad)
test
js
retf
mov
inc
icebp
loopne
jae
fstp
xlat
loop
push
xchg
hlt
aaa
xchg
rol
out
aad
in
fcom
mov
movd
aas
dec
rcl
js
nop
cmp
lods
pop
shl
shr
aas
add
inc
mov
and
pop
icebp
mov
movs
inc
scas
adc
popf
cmp
xor
movs
jae
xor
out
ror
call
retf
outs
adc
out
lods
test
cmp
pop
aad
lods
addr16
fadd
jbe
imul
icebp
xchg
push
(bad)
out
pop
call
cmp
cwde
shl
shr
jne
(bad)
sbb
mov
(bad)
lds
inc
cmp
push
aas
movs
ret
jb
sub
cmp
ret
(bad)
js
lods
les
push
pop
xor
(bad)
ins
xchg
adc
int
addr16
loop
add
cli
xor
or
out
push
leave
push
imul
scas
push
jnp
xchg
mov
pop
addr16
pop
push
xchg
jnp
mov
fdiv
xchg
xchg
mov
fdivr
mov
jle
add
sbb
cmp
xchg
int
adc
js
xor
adc
ret
fwait
je
and
dec
mov
sbb
or
mov
mov
mov
adc
sti
jg
adc
push
cs
push
stos
iret
das
cmp
xchg
xchg
aam
mov
ins
stos
pop
lock
mov
sahf
aam
adc
loopne
inc
xor
mov
push
and
ror
dec
or
leave
dec
cmp
cmp
sahf
push
in
lahf
cmps
loop
dec
or
sub
push
and
mov
jg
inc
ffree
scas
pop
jno
inc
jg
pop
xchg
sar
lea
sbb
mov
xlat
inc
sbb
cmp
sbb
int
and
ins
cmc
push
stos
jae
push
(bad)
popf
mov
cwde
gs
ret
xchg
int3
push
imul
hlt
push
cmp
push
inc
out
mov
push
loopne
pop
mov
aad
adc
mov
adc
dec
or
lea
lods
jnp
les
pop
rcr
cmp
sub
and
cmp
aad
fnstsw
out
aaa
sti
loopne
call
cmc
das
cmc
pop
cmp
jne
sub
out
push
inc
mov
popf
sub
or
cmp
fist
and
stos
fdivr
dec
ins
mov
push
retf
stc
mov
adc
sub
nop
(bad)
cs
out
mov
aas
int
mov
sbb
mov
rcr
ret
mov
lods
es
in
fistp
dec
jl
fucomip
push
in
aaa
pop
jne
push
in
loopne
mov
fsubr
shl
out
lea
daa
add
lds
jo
sbb
jmp
lds
lea
sbb
cmps
add
test
movs
or
mov
mov
mov
mov
inc
or
int3
scas
iret
(bad)
in
mov
mov
adc
adc
imul
mov
mov
test
dec
outs
mov
sbb
retf
cli
nop
cwde
mov
adc
or
cmp
sbb
fs
dec
xchg
mov
inc
out
inc
mov
sub
jmp
inc
cli
sbb
aam
dec
shr
mov
sub
pushf
jp
jno
sahf
mov
jno
jle
jmp
pop
push
push
test
fidiv
inc
pop
pop
in
sbb
lods
icebp
push
xchg
inc
xor
iret
sub
xor
call
ficomp
aaa
dec
sub
movs
daa
adc
loopne
push
jl
out
mov
xchg
aas
leave
idiv
(bad)
dec
movs
mov
push
jno
rol
ds
pop
push
or
push
push
aas
mov
scas
aaa
popa
stos
rcr
loopne
jae
loopne
push
add
add
cmp
fsubr
sub
test
ja
mov
cwde
jo
ret
fs
add
and
push
ins
mov
push
pop
mov
cmc
aad
dec
movs
push
sub
push
ret
mov
inc
push
pop
mov
dec
loop
push
mov
cdq
mov
inc
gs
retf
imul
call
jl
loop
dec
movs
ret
(bad)
call
xor
pop
popf
retf
jbe
fst
push
cmp
and
pop
and
shl
push
and
mov
out
daa
jnp
jmp
mov
xchg
repnz
cld
mul
or
mov
sbb
inc
ins
(bad)
adc
pop
xchg
inc
inc
out
int
cmp
or
jns
sbb
ror
in
add
jne
sbb
scas
jo
cmp
adc
sbb
cmp
retf
add
neg
movs
jge
mov
(bad)
sub
test
daa
or
mul
cmp
and
rcr
cmps
cld
ja
jl
lea
jnp
loopne
out
inc
jnp
inc
jmp
stos
jle
movs
xchg
bound
fadd
ror
mov
fwait
test
push
dec
js
push
pop
(bad)
pop
sbb
xor
pop
cmp
fs
enter
adc
scas
jnp
dec
ret
pop
cmp
cmps
aam
call
xor
jg
inc
les
sub
test
push
and
stos
jge
xchg
repz
into
push
or
push
test
adc
test
push
adc
ficom
add
(bad)
rcr
pop
ja
adc
dec
fs
bsf
(bad)
pop
cmp
jae
jg
retf
jp
fisubr
mov
(bad)
pushf
ss
pusha
xchg
add
(bad)
popa
das
sbb
or
fcom
push
jne
push
xchg
sub
cwde
mov
aaa
sub
add
stos
fld
xlat
les
xor
lock
enter
popa
jbe
or
pop
(bad)
mov
daa
movs
(bad)
ret
push
sahf
inc
aaa
pusha
jae
jmp
sub
in
xchg
jecxz
xor
push
cmp
dec
mov
sub
pop
ret
fxch
adc
in
jp
(bad)
sbb
or
adc
adc
std
cs
cmp
and
aas
and
jl
cwde
ja
scas
cmps
ins
jo
xchg
das
mov
adc
nop
cmp
xchg
dec
(bad)
dec
sbb
sub
xchg
rcr
ret
icebp
add
xchg
in
pop
repnz
hlt
aaa
sti
adc
mov
sbb
or
push
stos
xchg
mov
cli
sub
mov
push
out
bound
jnp
aad
and
lock
xchg
iret
(bad)
cld
dec
retf
stos
xor
inc
add
inc
inc
sahf
jg
xchg
pop
outs
sub
pop
cmps
jle
mov
inc
loopne
movs
rcl
ja
pop
mov
mov
jg
arpl
popa
sub
vmovdqu
je
xor
jg
clc
imul
ja
icebp
jo
cs
ret
adc
xchg
icebp
push
sub
out
iret
and
dec
int3
sub
iret
bound
mov
retf
xchg
xlat
dec
cdq
cmp
push
daa
sbb
dec
stos
push
dec
stos
sbb
cmps
aad
xchg
xchg
iret
rcr
pusha
clc
sar
sub
add
mov
push
cmp
shr
mov
mov
push
sbb
jle
sub
rol
mov
dec
sub
add
sar
sub
push
adc
test
enter
arpl
pop
cmp
dec
fisttp
sti
unpcklps
xor
fs
add
add
cmps
pusha
and
jmp
push
cmp
iret
popa
xor
jae
cld
pop
addr16
jge
jmp
pop
add
loop
xlat
adc
lods
je
inc
adc
pushf
in
or
and
fst
jg
pusha
loopne
lahf
bnd
adc
shl
sub
jge
out
and
inc
ins
rcr
out
dec
pusha
sbb
push
out
jg
rcr
push
ins
push
fisubr
(bad)
lock
mov
repz
lahf
mov
jne
jo
cld
mov
(bad)
aas
arpl
and
shl
cmp
sub
imul
cmp
xchg
mov
stc
data16
pop
push
sbb
xchg
fidiv
sub
stos
xchg
mov
inc
rcl
popa
in
mov
and
mov
or
mov
pop
std
sbb
dec
aam
mov
std
or
ret
xchg
pusha
jg
stos
jno
xchg
into
repnz
or
js
sbb
ins
xchg
outs
mov
into
(bad)
dec
(bad)
jmp
outs
rcr
or
sub
mov
sbb
mov
movs
xchg
retf
fcmovne
cwde
mov
les
test
mov
cmps
shr
mov
dec
mov
fneni(8087
mov
js
daa
cmp
mov
leave
xchg
gs
ja
and
hlt
jle
xor
aaa
(bad)
ins
mov
inc
js
mov
lahf
cs
test
stc
xor
test
in
fnstenv
in
and
dec
leave
and
pushf
add
xchg
pop
xchg
dec
call
cld
cmp
jns
jo
push
xlat
(bad)
fwait
jge
xor
scas
daa
jo
ja
adc
or
fmulp
ficom
dec
jecxz
jo
stos
adc
sbb
cld
xchg
(bad)
jg
sbb
lahf
sbb
push
add
aad
pop
inc
ins
jb
popa
jo
popa
out
push
adc
xchg
xchg
cmps
out
adc
dec
in
and
outs
or
sub
int3
int3
or
jo
xor
and
lods
add
jmp
cmps
dec
stos
leave
js
xchg
jge
push
nop
sub
movmskps
push
pop
in
repz
aad
and
neg
test
xchg
adc
or
iret
in
addr16
dec
mov
gs
shl
sbb
xchg
jp
xor
leave
jno
jecxz
push
pop
push
pop
jae
push
jo
xchg
imul
jmp
aam
mov
xchg
dec
push
stos
sbb
jns
gs
nop
add
ror
mov
push
xchg
loopne
push
sti
aas
call
push
(bad)
jne
pusha
adc
fs
inc
lock
sahf
aad
retf
daa
in
sub
cmps
aam
loop
loopne
xlat
fild
movs
or
pushf
add
aam
call
imul
je
or
pop
add
inc
xor
push
mov
outs
and
jae
mov
mov
addr16
dec
add
nop
cs
add
es
stos
xchg
outs
inc
ss
xchg
dec
adc
in
add
mov
sbb
push
popf
jg
jns
and
fsubp
cmc
(bad)
sub
div
and
cmp
ja
(bad)
psrad
(bad)
cli
push
pop
cwde
ins
ss
mov
pop
shl
ret
mov
cdq
mov
inc
mov
leave
jb
imul
imul
jne
and
ret
dec
or
(bad)
(bad)
test
es
add
pop
mov
loopne
or
sub
js
sar
mov
lds
sbb
jmp
sahf
and
lahf
and
and
jo
xlat
add
shl
pop
cmc
loope
lods
neg
push
retf
shl
or
dec
retf
leave
jle
dec
int
cmp
les
xor
loope
mov
sub
pushf
into
mov
nop
jns
push
shr
out
sbb
mov
pop
movs
shl
pop
inc
test
cmp
adc
rcl
fistp
and
jo
movs
xchg
jg
mov
jp
bound
popa
(bad)
ret
fcomp
jne
xchg
sbb
push
add
push
(bad)
dec
enter
ins
add
ins
or
inc
lock
pop
mov
dec
arpl
(bad)
pop
fisubr
jbe
jmp
test
xchg
cli
add
nop
or
shr
out
outs
xor
push
xor
dec
mov
pop
out
pop
sbb
jp
sub
inc
sbb
pop
sbb
sbb
mov
or
jecxz
cwde
sub
mov
mov
sar
call
mov
xchg
dec
dec
lods
add
sahf
outs
dec
xor
sbb
outs
(bad)
(bad)
arpl
adc
push
jmp
loope
ss
ret
pop
xchg
add
ds
xor
jae
push
mov
jno
pop
out
jge
aaa
cli
fist
sub
mov
cmp
sbb
shl
ret
cmp
les
adc
push
xchg
dec
popf
pop
pop
adc
adc
inc
jb
test
mov
adc
repz
xor
shr
imul
aas
xchg
xor
fsubr
or
fild
std
mov
or
out
sar
jbe
into
inc
dec
or
(bad)
lods
daa
jmp
pop
sbb
jecxz
test
jb
mov
pop
xor
jg
cdq
nop
lahf
mov
sbb
ret
add
xchg
stos
repnz
xchg
pop
mul
xor
lock
jns
cdq
fisttp
pop
xor
inc
repnz
(bad)
and
xchg
sbb
and
retf
ret
dec
and
(bad)
mov
outs
fnsave
scas
xchg
jbe
dec
loopne
cmp
clc
cli
sbb
add
and
fidiv
xchg
popf
out
imul
jno
push
mov
sbb
cmp
(bad)
scas
fxch
int3
xchg
inc
sub
gs
fisubr
jle
cmp
jmp
repz
mov
jle
ins
sub
jecxz
icebp
fmul
lea
or
and
lds
pop
arpl
push
pop
jmp
in
mul
sub
mov
dec
mov
js
jbe
je
shl
or
ins
inc
cmp
popa
js
adc
mov
jno
cmp
xchg
ds
jmp
in
xchg
sub
inc
(bad)
cld
out
and
sub
and
jp
lahf
push
inc
int
cs
inc
call
xlat
jne
add
cmp
dec
xchg
xchg
in
cmp
sub
and
fs
jne
(bad)
xor
inc
xor
and
push
pop
or
cdq
sub
or
call
sub
ret
cmp
repz
pop
js
pop
in
xor
mov
push
hlt
push
ds
inc
call
mov
push
mov
call
inc
pushf
scas
jae
pushf
js
mov
inc
ss
adc
push
and
(bad)
call
imul
xchg
imul
push
mul
sub
int
sub
inc
cs
enter
add
ins
fdivr
push
or
inc
push
add
test
loopne
xor
dec
and
and
(bad)
ficomp
jbe
dec
fsub
ins
rol
ret
and
sbb
push
loope
retf
xchg
icebp
dec
pop
xor
mov
inc
mov
cmp
cmp
loope
mov
rcl
gs
mov
sbb
inc
aam
or
aam
push
cmp
dec
sub
clc
mov
gs
jmp
jp
daa
in
mov
inc
loop
sbb
jns
repz
adc
and
inc
pusha
scas
and
jnp
jnp
push
jnp
adc
(bad)
mov
cmp
and
retf
rcl
jge
js
mov
nop
(bad)
sub
movs
xor
jne
adc
jmp
ret
idiv
mov
add
and
adc
ds
fwait
xchg
mov
push
retf
mov
cmp
adc
or
mov
gs
inc
fnsave
dec
out
je
sub
adc
mov
pop
jae
ds
(bad)
fsubr
ja
inc
jae
adc
int
inc
mov
(bad)
jg
mov
push
mov
(bad)
movs
mov
xor
inc
adc
push
jae
xor
(bad)
mov
out
daa
and
and
fcomp
or
sbb
mov
shl
xor
sub
cmp
add
adc
cmp
dec
dec
xchg
vfmaddsub132ps
mov
outs
(bad)
push
adc
inc
aam
and
add
mov
jo
adc
cmp
jmp
pop
fisubr
mov
pop
fstp
ja
faddp
and
or
adc
inc
xchg
sub
push
mov
xor
lea
xchg
inc
fidivr
retf
xchg
in
pusha
push
ror
pusha
adc
ins
(bad)
mov
jmp
mov
pop
xor
and
shr
mov
pop
sbb
mov
je
lods
cwde
or
cmp
aaa
loop
scas
xor
test
xchg
jb
push
mov
clc
adc
push
movs
mov
or
rcr
jb
dec
gs
cmp
and
cld
test
sub
test
call
sbb
das
out
or
or
data16
iret
mov
cmp
jbe
imul
mov
push
(bad)
mov
ret
aas
add
ret
les
mov
popf
ror
jmp
sar
jmp
out
sub
inc
add
cmp
jg
lea
jns
jbe
jecxz
popf
stos
fbld
mov
std
fnstenv
mov
cmp
push
push
jae
bnd
xlat
push
sbb
daa
sbb
add
fist
push
fnstenv
out
cmps
mov
ds
pop
fmul
sahf
adc
(bad)
xchg
test
(bad)
pusha
leave
adc
jge
adc
sub
jecxz
mov
push
or
(bad)
xchg
cmps
adc
mov
in
xor
das
fwait
inc
into
xlat
sbb
mov
out
jp
popa
(bad)
sub
aam
loopne
push
inc
out
fcomip
jp
stos
fcompp
or
lea
mov
inc
inc
ret
adc
sbb
loopne
scas
int3
lock
mov
imul
iret
sub
shl
adc
sbb
jecxz
inc
sub
and
(bad)
bound
aaa
jb
outs
loope
aad
scas
daa
dec
stc
sbb
dec
adc
int3
or
mov
cmc
add
sub
dec
loope
sbb
and
pop
and
pop
lahf
(bad)
data16
jns
cwde
ja
shr
cmp
push
movs
inc
push
jo
ss
sbb
push
inc
sub
pop
mov
mov
sahf
fs
xor
pusha
push
adc
mov
test
js
dec
pop
mov
pop
sbb
xlat
pop
(bad)
fidiv
data16
xor
add
out
out
aam
popf
mov
lea
and
jns
lahf
mov
and
jl
add
rol
int
mov
cmp
test
mov
cs
lods
jecxz
xor
add
sbb
aam
lods
jbe
rol
mov
adc
popf
sub
pop
jp
aas
repz
test
es
stos
(bad)
jp
push
dec
outs
add
lods
gs
ret
jnp
xor
xchg
dec
lods
pop
mov
xchg
inc
(bad)
jmp
inc
int
shl
pop
pusha
dec
movs
or
push
pop
add
inc
loope
cmp
push
cli
popf
jb
cmp
xchg
call
pop
pop
ds
sbb
xchg
mov
lea
cmp
sti
and
cmp
adc
add
and
out
and
mov
cmp
test
push
and
push
icebp
sub
ds
sub
call
jno
mov
push
data16
pop
cmps
das
adc
cmp
sti
mov
and
sti
sbb
mul
dec
xchg
xor
dec
ja
jmp
sbb
push
add
pop
das
arpl
pusha
imul
sub
mov
in
sub
xchg
inc
adc
sti
fld
outs
dec
sub
mov
jmp
adc
in
in
sub
mov
in
cli
xchg
std
stc
push
add
bndldx
xor
pop
out
test
pop
fcom
jo
test
dec
iret
in
fucomp
ds
imul
movs
popf
and
sbb
stc
call
add
inc
aam
mov
xor
std
jl
and
dec
call
mov
jp
rcr
nop
mov
sar
push
mov
pop
xor
scas
or
or
fstp
(bad)
fs
push
in
imul
cmp
push
add
movs
pop
xor
fcom
mov
iret
xchg
dec
ja
push
dec
stos
(bad)
jmp
sbb
idiv
push
pop
daa
sbb
stc
push
jp
xchg
popf
aad
sub
stc
mov
ret
cmps
ret
stos
dec
adc
test
inc
adc
cmp
std
xor
ins
push
jno
pop
inc
ret
adc
test
mov
or
and
jecxz
dec
jnp
pop
(bad)
mov
lock
into
add
cmps
sub
or
xor
lds
fs
test
push
add
pop
loope
das
data16
les
adc
xor
sbb
add
data16
and
jl
adc
stos
pop
test
adc
(bad)
pop
add
jle
adc
ret
adc
fisubr
xchg
mov
jl
mov
mov
lods
fcmovu
inc
push
test
lds
in
xor
xchg
push
xlat
lods
sbb
addr16
and
ds
pusha
shr
push
enter
mov
and
out
lods
cmp
jg
out
xchg
cwde
test
scas
icebp
inc
repz
jnp
sub
(bad)
push
aam
add
es
xlat
cmp
cmc
jle
ror
pop
loop
rcl
dec
add
mov
jnp
jne
cmps
movs
cld
dec
js
jle
push
lds
les
mov
shl
sub
cmp
mov
ds
ins
add
jae
cld
imul
test
ins
inc
icebp
sub
jo
sub
push
icebp
sub
es
lds
cs
inc
setnp
les
jmp
(bad)
sbb
sub
(bad)
(bad)
jne
adc
mov
mov
les
sar
jb
lods
pushf
sbb
in
xchg
fld
mov
xor
add
adc
jb
push
adc
jne
jg
rol
jmp
aaa
sbb
aam
xlat
lock
xchg
mov
test
lods
jb
ficom
in
movs
and
xchg
retf
push
lea
or
jl
push
out
push
add
(bad)
push
pop
lahf
test
xor
adc
sbb
lock
xchg
jp
popa
daa
jo
mov
and
fcom
xchg
jae
sbb
mov
nop
xchg
cs
pop
or
leave
xchg
sbb
mov
xor
stc
ins
mov
imul
leave
popf
or
outs
pop
xchg
cmp
pop
push
(bad)
loop
pop
adc
mov
push
div
push
jg
mov
mov
inc
add
pop
ds
je
dec
je
sbb
rcr
enter
out
fs
xchg
xor
inc
call
rcr
inc
add
lahf
and
and
scas
push
or
jg
add
inc
rcr
mov
push
imul
sahf
mov
dec
inc
xchg
and
pop
and
into
mov
sub
and
repnz
nop
mov
cwde
inc
call
int3
dec
and
les
jecxz
fld
(bad)
cmp
fdiv
nop
ret
popf
or
jbe
and
and
std
and
lahf
xstore-rng
cmps
adc
dec
cmp
shr
xchg
inc
push
aad
and
(bad)
or
test
dec
push
mov
lds
push
mov
test
or
sahf
xor
out
scas
rcl
mov
lds
std
mov
call
or
retf
sub
dec
(bad)
ins
lds
(bad)
jge
pop
out
retf
mov
inc
xchg
pusha
mov
and
mov
mov
mov
jne
dec
mov
mov
xor
sub
clc
sti
retf
dec
xchg
jae
pop
jge
loopne
aad
mov
inc
shl
mov
mul
(bad)
fmul
cmp
mov
mov
cld
xchg
loopne
js
mov
outs
fwait
stos
popf
pushf
inc
call
xchg
xor
mov
sub
mov
and
sbb
pop
xchg
adc
gs
sub
mov
xchg
rol
mov
mov
cdq
push
pop
inc
(bad)
push
mov
fsqrt
(bad)
(bad)
(bad)
sahf
(bad)
loop
cmp
daa
or
mov
dec
add
lahf
push
(bad)
popa
pushf
hlt
shr
push
cmp
scas
push
and
outs
pop
mov
outs
mov
ja
std
mov
pop
iret
lock
lods
xchg
iret
into
in
daa
or
daa
lods
cmp
pusha
outs
gs
and
jecxz
das
das
les
or
test
les
sar
and
pop
push
outs
ins
mov
out
and
sub
or
adc
mov
jo
adc
icebp
inc
xchg
int3
jmp
ret
sbb
imul
and
cdq
mov
add
cmp
cdq
test
cld
icebp
mul
scas
mov
cmp
pop
fcom
test
movs
pop
push
push
mov
out
icebp
jg
mov
push
inc
test
adc
ins
(bad)
les
sbb
rol
pop
and
and
movs
cmp
lock
pop
je
mov
xchg
mov
push
pusha
daa
cld
sub
mov
lahf
pop
bswap
fs
inc
repz
mov
das
jle
pop
pushf
push
lods
popa
in
mov
sub
lods
retf
iret
(bad)
mov
enter
and
xchg
sbb
inc
mov
jae
loope
dec
jno
pop
shl
imul
mov
fnstsw
sub
mov
movzx
cdq
and
gs
out
mov
sbb
push
jg
adc
pop
je
in
pusha
arpl
scas
fnstcw
xchg
call
adc
not
lods
fld
mov
jmp
mov
es
mov
pshufw
test
xlat
xor
adc
inc
fisubr
xchg
or
popa
adc
jnp
repnz
pop
cmp
ficomp
mov
sub
addr16
jbe
mov
adc
leave
push
inc
mov
(bad)
js
jne
sub
push
push
ss
add
mov
fwait
cs
div
jg
mov
jmp
cmp
bound
(bad)
std
test
add
call
paddsb
mov
enter
outs
ja
out
movs
idiv
cmp
aad
into
push
mov
push
(bad)
pop
inc
out
mov
jp
jle
test
xchg
cmc
sub
inc
adc
cmc
pop
sub
inc
(bad)
es
iret
cmp
jnp
ins
scas
nop
gs
xor
aam
add
xor
xchg
xlat
mov
iret
rcl
fcom
lods
sti
or
and
ss
and
out
out
sbb
outs
and
pop
cld
test
jnp
jg
mov
dec
aad
push
cmp
ja
xor
(bad)
in
int
mov
outs
pop
dec
fwait
add
aas
mov
xchg
push
adc
iret
or
loope
pop
cmp
mov
and
xor
psrlq
ins
data16
sub
jp
loop
jp
mov
iret
repz
dec
ret
ret
xchg
arpl
xchg
xchg
or
push
dec
pop
fst
pop
sub
xlat
dec
mov
movs
rol
jmp
pop
add
ret
mov
push
or
movs
sahf
ins
faddp
push
mov
and
mov
(bad)
into
(bad)
repnz
cmp
pop
cld
retf
mov
(bad)
outs
jecxz
mov
ja
dec
(bad)
xchg
mov
(bad)
int
jg
aad
arpl
xchg
in
sub
cmp
repz
lock
cmp
adc
add
mov
jnp
jmp
ret
bound
(bad)
pop
push
sub
(bad)
adc
inc
cmp
xor
loope
nop
(bad)
es
jmp
mov
ins
push
test
mov
cmp
call
clc
mov
(bad)
out
call
push
add
xor
loopne
mov
dec
test
xchg
dec
bound
aam
and
jns
sbb
js
and
dec
xor
mov
mov
imul
lahf
pop
lea
lock
xor
mov
jbe
jl
daa
(bad)
icebp
icebp
pop
pop
inc
call
push
and
jbe
jmp
stos
rep
pop
jle
mov
xor
push
xlat
pusha
cdq
mov
jns
call
lods
fs
jnp
in
sbb
push
inc
jae
and
xchg
sub
sub
push
cli
mov
loope
pop
std
and
or
mov
out
cmp
fst
mov
cmp
or
push
cwde
out
outs
and
imul
(bad)
xchg
in
dec
sub
cmps
test
dec
retf
pop
cmps
push
mov
shr
test
ja
call
nop
inc
rcr
popf
lds
pop
xchg
cwde
les
cmp
mov
push
imul
fwait
xchg
test
cwde
nop
fwait
stos
or
js
inc
dec
shl
out
test
inc
and
xor
mov
xchg
icebp
imul
ror
adc
adc
clc
retf
mov
sbb
add
ins
movs
pusha
xchg
pop
mov
jecxz
es
or
xor
enter
push
xchg
cli
pop
and
in
mov
fisubr
jecxz
sub
dec
mov
mov
xlat
pop
sbb
xchg
out
mov
or
mov
jb
lahf
fucompp
mov
stc
lods
stos
or
pop
or
lahf
jnp
add
cmp
(bad)
mov
loop
cmps
pop
adc
ja
xchg
or
or
lahf
jmp
nop
lods
xchg
call
inc
cmp
sbb
ins
dec
cwde
mov
inc
pop
hlt
neg
dec
aam
push
cs
jmp
je
or
nop
jb
mov
xor
(bad)
mov
loop
or
push
and
jns
mov
cmps
sub
dec
ins
mov
pop
ja
mov
retf
pavgb
pop
ins
mov
rcr
rcr
mov
cmp
jb
cmp
stos
cmp
push
and
mov
or
add
scas
dec
shr
jg
enter
pop
ret
movs
sbb
jne
jnp
cli
or
pop
mov
ins
dec
std
push
mov
addr16
and
stos
or
sub
je
inc
push
cmp
hlt
dec
xchg
sahf
iret
mov
dec
cmp
sahf
pop
mov
aam
sbb
in
cmc
adc
loopne
pop
fwait
push
sub
jge
mov
xor
sub
inc
in
cmp
jecxz
dec
in
imul
mov
rcl
jmp
dec
adc
out
jbe
adc
push
outs
adc
push
das
loop
clc
imul
cli
and
das
fild
add
jbe
retf
sub
test
jecxz
jl
or
in
outs
sbb
push
iret
pop
xchg
jecxz
adc
cwde
inc
fs
in
ret
and
add
jecxz
loop
mov
cmp
or
fnsave
adc
and
cmps
xor
pop
mov
mul
lods
or
push
in
push
push
pop
jno
sub
and
or
repnz
push
jne
rcl
icebp
jbe
or
adc
ret
jmp
hlt
outs
repnz
and
xor
and
es
data16
arpl
cmps
push
pusha
pop
pop
out
mov
push
icebp
call
pop
xchg
adc
outs
mov
sub
and
mov
ins
sub
fadd
push
add
mov
sbb
sub
iret
(bad)
std
xlat
xor
loopne
pop
xchg
push
sbb
jmp
ret
cmc
retf
pop
sbb
bound
and
dec
(bad)
cmp
push
mov
popf
xor
cmps
adc
(bad)
cli
int
inc
adc
push
test
inc
mov
mov
pop
mov
mov
sbb
gs
jg
outs
push
sbb
rep
sub
daa
mov
jp
fld
rcl
idiv
push
iret
ins
daa
pop
and
retf
aad
imul
cwde
clc
js
push
nop
outs
sar
sbb
sti
jnp
and
outs
test
fisttp
shr
push
inc
mov
xchg
cmp
push
push
aas
pop
push
jg
inc
or
hlt
mov
mov
push
and
ds
shl
call
pop
and
out
mov
add
or
push
mov
pop
(bad)
jp
xor
ja
push
loopne
cmps
mov
fild
sbb
add
cmp
or
punpcklbw
test
pushf
cmp
or
push
les
add
pop
daa
mov
adc
mov
jnp
mov
fsub
cdq
out
sbb
fsub
arpl
jb
push
mov
xchg
mov
add
mov
jbe
int
arpl
dec
mov
sbb
cmp
xchg
popa
pcmpgtw
ret
addr16
cli
pusha
jb
and
ret
sahf
les
xor
adc
push
xchg
xchg
xchg
out
dec
push
xor
push
aas
(bad)
jns
and
icebp
dec
and
cmp
outs
les
(bad)
mov
and
inc
loope
fistp
pushf
ins
jmp
cmp
sbb
lods
test
sub
jmp
jne
cmp
(bad)
in
push
fnstcw
xchg
mov
call
cld
inc
xor
or
sbb
std
in
(bad)
movs
(bad)
cmp
iret
into
inc
test
(bad)
stc
jnp
xor
and
in
scas
(bad)
addr16
(bad)
jg
repz
xchg
jl
inc
sub
pop
push
or
ret
mov
inc
xor
mov
adc
jne
repz
pop
jno
inc
mov
mov
clc
cli
xor
xchg
icebp
cmps
jno
jp
xor
jo
pop
dec
pop
out
stc
pusha
movs
(bad)
leave
shl
or
hlt
call
adc
xchg
adc
leave
or
cmp
int3
mov
in
and
ja
fs
ret
adc
sbb
inc
cdq
ror
cmps
outs
inc
xor
call
cli
sbb
cdq
and
bound
je
and
mov
idiv
jecxz
mov
or
mov
push
xor
(bad)
ss
jmp
cld
je
push
xchg
jns
adc
sbb
popf
add
mov
aad
cld
in
leave
and
xchg
push
sar
mov
sub
jns
pop
cmp
xor
cmp
call
call
clc
sub
sbb
cmp
xlat
xchg
rol
adc
pop
adc
push
mov
and
stos
mov
fld
jecxz
lahf
aaa
xchg
pusha
pusha
movs
in
and
imul
mov
movs
aam
push
in
xchg
shl
hlt
mov
mov
call
sub
pop
or
push
movnti
es
sbb
ja
pop
pop
adc
and
lock
aam
add
and
daa
mov
imul
or
pop
or
int3
xor
leave
inc
sub
fcomp
push
in
sbb
dec
jno
(bad)
mov
pop
(bad)
jmp
fsub
and
and
mov
pop
outs
jae
add
(bad)
retf
mov
xchg
mov
inc
(bad)
int3
or
mov
mov
out
jp
aaa
adc
inc
int3
jp
shl
and
xor
fscale
mov
fldcw
sub
lods
lods
lods
push
mov
cmps
ror
(bad)
inc
and
cmc
in
mov
or
xchg
pop
(bad)
and
int
mov
mov
sbb
fidivr
(bad)
clc
lahf
aad
loop
push
push
dec
mov
adc
or
fmul
mov
pop
push
inc
in
aas
push
and
mov
bnd
pop
mov
inc
push
gs
in
mov
(bad)
push
into
cmps
mov
std
cs
stos
(bad)
pop
cmp
jnp
shr
popa
or
cli
(bad)
lock
fs
sub
or
cli
loope
ficomp
ret
pop
or
sbb
test
adc
jp
adc
rol
pop
pop
shr
outs
js
mov
sub
xor
push
pop
movs
lock
pushf
mov
jge
test
cld
shl
or
pop
popa
cld
sti
sbb
push
fld
pop
retf
int
jno
adc
into
dec
hlt
adc
mov
mov
dec
push
test
es
popa
fdiv
mov
adc
cmps
aad
test
inc
lock
(bad)
adc
xor
dec
mov
fst
(bad)
shl
icebp
push
imul
adc
inc
das
push
xchg
jae
pusha
xchg
fcmove
arpl
sub
xchg
ret
adc
shr
mov
dec
(bad)
aaa
lods
inc
mov
xchg
xchg
cwde
cs
mov
cli
loopne
inc
mov
addr16
aad
sbb
not
out
mov
cmp
cmps
repnz
hlt
lea
(bad)
fstp
imul
mov
imul
repnz
sbb
scas
push
scas
dec
jl
adc
add
mov
add
ret
mov
mov
in
add
mov
mov
add
push
and
cmp
jecxz
add
hlt
mov
or
dec
and
fcmovu
jmp
daa
dec
xor
daa
inc
push
jp
dec
cli
fsubr
mov
dec
jmp
(bad)
adc
retf
lods
jmp
loope
out
jge
test
mov
enter
jmp
mov
dec
mov
sahf
ins
cdq
or
or
xchg
pop
lahf
mov
imul
pop
cmp
pop
xor
push
pop
cmp
cli
jl
mov
add
mov
pushf
or
(bad)
ds
stos
cmp
movs
(bad)
iret
push
mov
inc
mov
sbb
aam
shr
imul
mov
or
arpl
adc
cmp
(bad)
xor
and
or
xchg
mov
(bad)
je
jl
aad
movs
adc
ds
cmc
rcl
test
out
inc
cs
inc
sti
mov
jmp
out
adc
mov
and
pop
xlat
imul
inc
enter
ror
inc
push
fst
popf
mov
xchg
cli
and
xchg
and
mov
mov
push
or
or
add
stc
inc
or
int3
test
mov
mov
jp
bound
add
scas
mov
shr
sub
das
pop
sub
dec
xchg
sub
add
ins
fdiv
jo
mov
dec
mov
cli
aas
mov
es
int3
outs
add
dec
mov
inc
jnp
aam
jo
cli
frstor
dec
jno
mov
nop
stos
shr
rcr
inc
mov
inc
cld
icebp
out
xchg
pop
mov
mov
test
dec
push
add
pop
out
or
mov
gs
cdq
stc
out
push
dec
mov
test
mov
mov
cs
push
in
xor
(bad)
outs
add
cdq
js
(bad)
cmp
jge
cmp
aad
popa
or
jecxz
fsubr
sbb
inc
hlt
cs
scas
imul
cvtps2pd
into
fst
mov
repz
scas
xor
cmc
(bad)
inc
frstor
xchg
rcr
ss
mov
inc
pop
xchg
mov
aaa
dec
clc
loope
shl
(bad)
(bad)
test
nop
sbb
test
jmp
call
ret
sub
iret
sbb
ret
xchg
add
aaa
fsub
push
mov
(bad)
rol
mov
test
inc
(bad)
fisttp
(bad)
enter
sbb
not
lods
xchg
fwait
repz
mov
mov
xor
add
gs
cmps
jmp
pop
repnz
sub
ficomp
sahf
stos
jnp
mov
and
into
pushf
and
or
test
cmp
inc
pop
loope
psrlq
mov
les
or
inc
add
sbb
or
sar
addr16
mov
js
cmp
je
sbb
cmp
push
mov
dec
lods
dec
je
dec
int
and
pop
mov
mov
and
lock
dec
mov
inc
add
cmc
pusha
popa
jno
cmp
inc
(bad)
jp
icebp
icebp
cmp
mov
sub
sbb
test
xor
xor
(bad)
cdq
xchg
fcomp
iret
lds
dec
icebp
les
out
call
pusha
push
mov
in
and
adc
cli
cmp
xor
cli
cld
mov
pop
pop
pop
aad
dec
call
xchg
and
sar
jb
daa
(bad)
jge
pop
retf
iret
mov
(bad)
adc
mov
jmp
fsub
nop
movs
loopne
(bad)
sub
dec
iret
or
pop
dec
xor
push
jne
or
xchg
jo
cmps
sub
mov
mov
iret
das
sbb
pop
xchg
cmps
adc
mov
mov
cmc
jecxz
add
xor
and
pushf
sbb
mov
iret
pop
(bad)
jmp
sub
mov
xor
sub
mov
push
or
pop
push
mov
(bad)
push
jmp
push
adc
cmp
stc
pop
stc
mov
js
xchg
stc
mov
xchg
jg
sti
fwait
push
dec
jns
xchg
push
jecxz
pop
mov
daa
xor
sbb
mov
cs
(bad)
out
nop
gs
and
cmp
xor
lea
mov
cwde
out
jns
ret
pop
dec
(bad)
mov
outs
push
std
std
push
adc
aad
cli
sahf
and
cmps
test
(bad)
mov
mov
imul
out
arpl
dec
jecxz
test
loopne
sub
in
sbb
jnp
in
int
leave
(bad)
and
mov
inc
jge
ins
inc
push
cmp
(bad)
sub
fstp
fwait
cld
dec
mov
sub
movs
retf
outs
or
rcr
call
shl
mov
in
in
cmp
into
add
loopne
lods
ret
sbb
and
into
xchg
mov
jo
push
xor
and
out
test
cwde
inc
mov
cli
cmps
pop
mov
leave
xor
frstor
pop
and
in
mov
jle
jmp
test
and
mov
imul
cli
js
dec
pushf
leave
push
les
or
ds
icebp
xchg
retf
int3
and
pop
dec
adc
sbb
mov
(bad)
pushf
ret
xor
or
sbb
cmp
(bad)
mov
leave
mov
xor
push
jge
mov
cmc
inc
inc
inc
push
sahf
xchg
mov
xchg
mov
loopne
cmp
sub
mov
cmp
fistp
sar
add
out
movs
cmps
add
mov
je
push
stos
and
aas
sub
dec
mov
fs
pushf
cmova
and
dec
mov
push
mov
in
popf
push
inc
jle
(bad)
enter
xchg
repnz
bound
xchg
jne
fmul
icebp
lods
sar
mov
jo
dec
xor
jb
push
icebp
ror
pop
neg
pop
inc
xor
rcl
sub
adc
pushf
sub
out
xchg
fs
jl
sti
in
or
daa
sub
pop
jno
mov
daa
(bad)
mov
mov
sub
inc
mov
out
fcmovu
jmp
leave
in
mov
fdiv
mov
popa
cwde
(bad)
rcl
push
lock
repnz
aam
int
inc
cmp
mov
jnp
push
(bad)
mov
rcl
adc
adc
jno
mov
push
cmp
test
and
jne
scas
jb
dec
lahf
out
jmp
sub
arpl
mov
inc
jne
or
push
push
retf
add
mov
outs
cmps
daa
call
scas
mov
hlt
cmc
mov
test
pop
inc
push
cmp
imul
sub
or
sub
ds
popf
inc
std
push
cmc
or
in
es
les
jl
sub
inc
(bad)
(bad)
mov
inc
(bad)
fimul
and
sbb
lods
pushf
mov
lds
stos
dec
pushf
xchg
ss
ds
in
sbb
rol
out
arpl
jns
xchg
push
sub
fcomp
and
gs
adc
ret
bound
sbb
jg
lods
mov
fistp
dec
adc
lock
xor
jmp
inc
xchg
push
xlat
je
mov
jmp
rcl
rol
fdivr
and
ret
je
jnp
adc
add
jb
mov
inc
loopne
hlt
mov
(bad)
bound
loopne
icebp
push
lock
popa
push
scas
xor
loop
mov
push
test
cmp
jmp
sub
in
lods
xchg
arpl
in
jge
popf
jns
pop
sbb
sub
mov
adc
mov
and
xchg
sub
adc
sub
push
xchg
pusha
push
pop
pop
rol
out
pop
cmps
sub
(bad)
and
inc
inc
jg
in
pusha
das
cs
jno
cmp
clc
dec
jle
cmp
mov
lods
(bad)
or
inc
sbb
mov
jmp
pop
aam
stc
bound
mov
cmps
movs
and
daa
dec
cmp
pop
adc
in
out
sub
dec
mov
fstp
jg
addr16
hlt
fcom
sub
call
imul
ins
pop
into
xchg
dec
cld
jmp
gs
cmps
bound
cmp
mov
scas
fwait
mov
lock
mov
cmc
mov
dec
not
(bad)
cmp
(bad)
adc
mov
enter
and
add
sbb
pop
cmp
mov
sub
enter
(bad)
pushf
sub
xchg
je
nop
mov
and
call
mov
data16
retf
mov
lods
bound
sar
out
sub
fstp
jbe
push
cmp
xchg
mov
je
mov
bound
shl
not
out
loop
inc
into
scas
loop
test
pusha
call
ss
add
(bad)
pop
or
mov
les
imul
push
adc
int3
lock
rcl
ins
add
nop
sub
into
jge
neg
aas
ja
jae
iret
cli
xchg
mov
retf
gs
or
repnz
outs
dec
cmp
pop
jne
push
cmp
pop
adc
mov
mov
jne
ret
mov
fistp
leave
scas
and
sbb
cdq
sub
cmp
mov
nop
xor
out
jl
enter
stc
mov
(bad)
in
mov
daa
sbb
retf
cmp
dec
rcr
adc
cs
fistp
hlt
cmp
nop
mov
sub
push
enter
mov
xor
shl
push
fadd
out
push
sbb
inc
shl
inc
addr16
dec
jecxz
dec
pop
push
jns
popa
sub
enter
call
push
fmul
jecxz
cmp
sti
jmp
adc
clc
out
cli
xchg
pop
push
dec
gs
mov
out
xchg
lods
data16
inc
mov
pusha
inc
adc
lea
shl
inc
aaa
push
and
sbb
icebp
pop
repz
js
mov
push
cs
jno
jecxz
nop
mov
inc
ins
dec
test
mov
cli
outs
arpl
fiadd
pop
mov
add
push
cs
and
pop
icebp
retf
popf
fist
inc
cmp
sub
scas
cmps
test
mov
sti
gs
sub
out
sbb
jb
xchg
inc
test
xchg
clc
sub
jmp
jo
xor
outs
clc
sub
adc
jecxz
jbe
pop
lock
movs
int3
jl
and
ins
adc
adc
push
dec
xor
pushf
imul
repnz
out
xor
inc
jg
aas
dec
xchg
jg
push
fistp
(bad)
in
add
jae
sub
xchg
sub
into
mov
mov
inc
sbb
test
pop
pop
dec
jns
xchg
mov
push
pusha
ret
add
fbstp
push
(bad)
call
sahf
mov
pop
or
xchg
or
dec
rcr
leave
jecxz
pop
pop
fcmovu
fwait
arpl
(bad)
xor
jns
mov
inc
sbb
xchg
mov
aam
pop
add
sub
jnp
jecxz
sub
jne
(bad)
mov
test
nop
pop
mov
push
int3
shl
sbb
push
aad
inc
stc
stc
cmp
xchg
sub
cmp
sub
mov
fild
mov
jl
add
daa
xor
xchg
mov
pop
pop
sub
ret
int3
fs
push
scas
adc
jl
cmp
leave
imul
add
pop
jl
cmp
cmp
shr
imul
js
int3
pop
push
jne
std
push
or
std
xor
pusha
sbb
div
cmp
push
mov
mov
pop
jmp
add
xchg
hlt
nop
pop
cmp
icebp
in
sbb
or
rcr
mov
and
iret
mov
mov
(bad)
call
jg
dec
jns
scas
xchg
xchg
ret
dec
icebp
mov
sub
or
or
sub
push
or
and
arpl
nop
out
mov
aas
cmp
jge
mov
sbb
rcr
call
xor
ds
imul
outs
ss
fnstsw
cmp
movhps
cmps
inc
mov
sahf
cmp
jp
loop
out
clc
lea
ins
std
retf
test
and
nop
es
ret
sub
ja
imul
neg
shr
jae
xchg
adc
stc
pop
mov
jne
mov
cdq
cmp
add
pop
xor
add
or
pop
cmc
int
push
mov
xor
xchg
sbb
cmp
imul
out
xor
mov
sbb
push
inc
pop
test
ss
dec
push
sub
sbb
sahf
imul
mov
loope
lea
inc
mov
imul
cli
aam
pop
nop
test
xchg
mov
or
add
jl
addr16
aas
ret
test
inc
pop
mov
add
jge
imul
push
jo
push
mov
ret
(bad)
lods
dec
sbb
lock
test
add
sbb
and
push
add
push
(bad)
mov
das
pop
jno
sbb
aam
pusha
fidivr
sbb
inc
in
push
test
push
icebp
pop
daa
dec
and
fsub
sbb
enter
retf
rcr
mov
cmp
shl
bound
cmp
je
(bad)
movs
xlat
push
push
mov
inc
jnp
jl
loope
icebp
cmp
adc
and
repnz
inc
jae
retf
adc
pop
jnp
add
jge
stos
lods
pop
and
in
(bad)
sub
pop
dec
pushf
cmp
xchg
ins
xchg
inc
cs
mov
and
(bad)
shl
mov
leave
mov
and
sbb
cmp
and
jge
sahf
push
fcom
mov
leave
cmps
inc
fbstp
sbb
jmp
xchg
leave
movs
jb
inc
jge
mov
mov
push
add
hlt
js
enter
addr16
lahf
jno
cs
imul
sub
mov
mov
jecxz
dec
jo
and
enter
in
jo
xor
sbb
fstp
fwait
ret
xor
inc
dec
push
xor
xlat
and
inc
mov
cmp
lock
jmp
xchg
jb
add
mov
fcomp
movs
nop
imul
fnclex
pop
int
push
mov
call
mov
mov
xlat
out
aas
xchg
pop
pop
mov
pop
imul
pop
pop
fild
mov
pusha
cs
(bad)
cmc
cmp
test
popa
lods
mov
ins
rcl
out
bound
jp
xor
lods
pop
rdtsc
cli
adc
iret
pop
cli
pop
inc
cdq
cmps
jmp
sub
lods
pop
fstp
call
jbe
add
xchg
sub
inc
mov
fisttp
mov
sbb
or
test
mov
inc
xchg
mov
mov
test
lds
enter
cld
jl
mov
sub
stos
loop
rcr
or
cld
fwait
ins
daa
out
lods
push
inc
cld
jno
jecxz
push
jge
repnz
loopne
push
ret
pop
cwde
ds
sbb
cmp
imul
dec
clc
fwait
mov
sti
xchg
cwde
push
imul
jmp
jb
into
les
add
jp
int
retf
int3
mov
or
push
nop
sahf
sbb
out
icebp
add
jl
push
sbb
lock
sti
arpl
xchg
ret
cmp
sbb
xor
aad
jns
hlt
inc
or
push
nop
imul
ja
jb
jg
sub
mov
mov
push
or
xor
cld
or
call
xor
icebp
sbb
dec
mov
sti
out
dec
popa
into
test
in
push
mov
jns
mov
arpl
(bad)
mov
idiv
cmps
cmovle
je
or
call
std
retf
fld
retf
inc
push
mov
mov
sar
(bad)
ss
shr
mov
test
xor
push
mov
lahf
add
(bad)
cmp
cdq
jnp
jae
xchg
pushf
addr16
cmc
jbe
cwde
push
or
shl
jno
mov
adc
sbb
add
or
dec
sbb
pop
rol
sub
test
sbb
xchg
sub
mov
push
push
pusha
mov
daa
jmp
push
sti
into
mov
shr
cdq
sub
add
enter
pop
popf
push
rcr
test
clc
fbld
lods
push
loopne
pop
xor
push
ret
fisubr
pusha
inc
push
jnp
cdq
out
xchg
and
ds
pushf
fsubr
mov
call
movs
pop
xor
ja
adc
and
sbb
lock
mov
jbe
gs
push
test
aaa
outs
jecxz
sub
add
cmc
cmp
lea
outs
int
mov
jbe
sub
ret
das
adc
fwait
add
pop
retf
push
xor
repz
jae
xchg
sub
mov
sub
xchg
jbe
stos
test
pop
retf
test
push
or
sbb
lea
retf
ja
push
and
cmp
add
iret
(bad)
adc
cdq
or
xchg
lds
ins
dec
sbb
int3
(bad)
call
push
es
pop
outs
sub
cmp
xor
add
and
cmp
test
sub
mov
xor
mov
mov
jnp
fnstcw
or
in
dec
adc
mov
scas
das
inc
jno
dec
xchg
loopne
and
push
jl
add
or
fisub
and
xor
mov
and
int
mov
xor
es
and
push
cmps
or
xchg
(bad)
test
(bad)
fld
jle
inc
dec
inc
out
push
ja
pop
cmp
js
add
dec
outs
mov
in
dec
sub
ja
xchg
cmps
fldcw
inc
fidiv
clc
xlat
movs
mov
rcpps
xchg
scas
call
jg
dec
xor
cmc
mov
call
or
hlt
or
and
push
mov
bound
movs
pop
xchg
outs
adc
mul
out
xor
leave
push
mov
lds
sub
jb
lahf
jecxz
mov
xchg
and
aad
stos
dec
push
cmp
test
outs
inc
inc
fadd
push
leave
pushf
or
lods
test
pop
or
push
int3
jns
pop
aam
std
push
icebp
jnp
sbb
ins
inc
mov
inc
inc
sub
sub
into
outs
mov
retf
inc
ja
sub
icebp
jg
push
jecxz
out
loope
push
or
ins
jl
jle
mov
inc
mov
cmp
push
inc
add
rol
test
fiadd
add
push
popf
sbb
out
jle
in
and
stos
mov
xchg
mov
sub
adc
and
mov
pop
std
cmp
(bad)
sbb
inc
sti
sahf
aam
sbb
or
data16
fldenv
pushf
cmovbe
into
inc
xchg
jg
in
mov
inc
je
imul
xlat
xor
mov
or
sti
mov
push
or
sub
or
ins
arpl
or
mov
xor
xchg
enter
push
out
or
cmp
adc
pop
aaa
lahf
repnz
pop
icebp
es
or
jmp
jns
xchg
inc
cwde
(bad)
pop
cmpxchg
push
icebp
jnp
sbb
cmp
daa
push
xchg
dec
push
sbb
mov
test
jo
(bad)
mov
dec
add
int
xor
fsubr
enter
rcr
imul
pusha
mov
inc
icebp
push
loopne
sti
jmp
pop
lahf
push
test
mov
shr
cwde
aad
xchg
sub
jae
sub
lock
lods
pop
pushf
jae
mov
push
clc
sbb
jbe
scas
sahf
push
pop
bound
xchg
cmp
push
pop
ret
out
cli
inc
cli
jmp
or
in
jbe
pop
pop
ret
adc
test
mov
pop
jmp
and
mov
jge
mov
add
inc
sbb
outs
mov
stos
and
xchg
dec
push
mov
sbb
push
test
or
aaa
rol
add
jb
cdq
or
push
xchg
xor
dec
add
cmp
xor
out
jmp
test
dec
mov
adc
cmp
add
mov
mov
movs
aaa
xor
shr
xor
cs
cmp
sbb
sub
xchg
adc
cmp
in
cld
xor
call
adc
cdq
inc
sar
repnz
jmp
int3
cmps
stc
and
shr
xchg
push
mov
inc
cs
jo
retf
xchg
add
add
xchg
loope
out
dec
dec
xchg
mov
jl
loop
cmc
scas
mov
out
xchg
cld
push
sahf
cmp
xor
cmps
out
mov
clc
icebp
ds
pop
adc
fdivr
add
pusha
xchg
ins
pop
and
mov
lahf
rcr
mov
mov
mov
pop
add
and
mov
cs
add
mul
xor
fdivr
or
jnp
push
adc
das
inc
xchg
rol
xor
mov
pusha
adc
loop
daa
loop
add
arpl
xchg
adc
sub
or
pop
xchg
fadd
sbb
stc
idiv
xor
ds
sub
rcr
mov
and
test
ret
sbb
sub
jecxz
shl
add
push
push
sub
rcr
pop
add
jb
jg
sub
mov
sbb
sub
dec
or
jbe
mov
les
fwait
int
push
cmc
mov
mov
inc
inc
pushf
sbb
pop
xlat
xchg
add
ss
add
mov
mov
inc
add
dec
adc
iret
call
jg
js
int
push
pop
mov
xor
and
sub
repnz
test
pusha
imul
adc
rol
fwait
popf
rcl
mov
jb
scas
ret
jg
push
ret
add
hlt
popf
dec
lds
adc
dec
aas
in
push
add
mov
ret
ins
and
add
cmps
pop
bound
movs
or
jecxz
mov
shl
add
inc
xor
jae
ja
rcr
jnp
fadd
lods
in
add
int3
inc
sbb
pop
in
xor
mov
outs
push
lock
in
adc
jmp
rcr
cmp
ret
add
dec
(bad)
xchg
stc
pop
pop
fsubr
shl
int
cdq
xlat
outs
push
dec
scas
sbb
adc
test
lods
cmp
xchg
or
idiv
and
mul
add
mov
sub
nop
and
cmps
stos
jne
mov
mov
xchg
into
xchg
(bad)
pop
xchg
xchg
jecxz
(bad)
dec
mov
jbe
xor
or
gs
xor
scas
icebp
adc
xchg
pop
inc
rcl
or
enter
and
cmp
mov
cmp
jnp
shl
jae
bound
pop
ds
mov
lods
sub
call
(bad)
fsub
jge
mov
mov
or
mul
imul
or
out
bound
es
cmp
adc
stos
outs
or
adc
gs
imul
add
rcr
pop
or
out
push
push
mov
xchg
cmp
push
pop
pushf
cmp
sbb
and
leave
mov
pop
(bad)
in
mov
push
nop
js
call
in
xor
cmp
or
mov
xchg
add
lods
movs
jp
in
push
aas
push
mov
mov
sub
js
inc
jle
and
jmp
sub
xchg
imul
xor
mov
inc
ins
dec
repz
enter
fistp
jmp
push
add
sbb
cmps
gs
mov
stc
and
repz
jb
ror
jl
or
mov
ins
cld
std
mov
xor
repnz
mov
push
jbe
gs
and
sbb
sar
pusha
xchg
mov
or
mov
jns
je
cmp
cli
into
sbb
dec
scas
fwait
jp
dec
push
push
cwde
sbb
nop
jle
mov
fiadd
pop
les
retf
pusha
mov
enter
mov
mov
shl
push
aas
xchg
or
push
add
pop
js
test
mov
xchg
test
push
call
mov
sbb
push
jnp
fwait
jmp
nop
jge
int
pop
add
cmp
les
jnp
imul
mov
das
mov
loope
or
sub
(bad)
outs
lock
sbb
sti
ficom
test
jbe
lea
push
cmp
mov
lea
lock
into
in
pop
pop
dec
sbb
sub
clc
mov
stc
add
popf
sub
and
je
and
icebp
cli
jnp
push
sub
xchg
sub
mov
xchg
retf
mov
xchg
sub
mov
(bad)
xor
push
cmp
push
adc
or
je
das
pop
mov
bound
xor
mov
jmp
addr16
xchg
mov
fmul
pop
mov
fcmovu
pushf
adc
sbb
cdq
imul
push
pop
in
sbb
jle
stos
push
repz
fldcw
movs
xchg
mov
lahf
das
xchg
mov
pop
cmp
stos
fdiv
into
inc
push
cmps
(bad)
mov
cmps
daa
mov
sbb
xchg
jecxz
(bad)
movs
cwde
fst
mov
mov
cmp
push
push
xor
ins
(bad)
cmp
into
pop
sub
mov
enter
addr16
push
pop
xchg
dec
xor
xor
xor
cmp
in
mov
push
sti
and
fwait
push
in
aam
ss
out
loopne
fadd
and
push
mov
mov
inc
dec
dec
and
aas
repz
pop
dec
dec
popf
jno
pop
jae
add
push
cmp
add
mov
xchg
fs
xor
xchg
sub
cmp
std
xor
stos
daa
xor
imul
ret
popa
dec
pop
xchg
mov
jl
(bad)
retf
add
call
mov
xor
into
scas
jo
push
fwait
div
js
adc
out
add
(bad)
jge
sub
test
cmp
out
inc
rcr
arpl
test
lock
add
rcr
and
mul
fdivr
xor
mov
cmp
mov
dec
jge
popa
or
(bad)
mov
add
int3
inc
in
adc
push
xor
retf
pop
or
in
cmp
shl
int
push
das
adc
enter
ss
in
popf
fnstenv
sub
jb
inc
sahf
and
fucom
dec
scas
ja
std
call
or
jp
mov
(bad)
mov
mov
faddp
jo
jmp
xchg
jp
pop
ret
jnp
pop
enter
cwde
and
sbb
in
test
adc
mov
gs
or
sub
daa
stos
fwait
add
sub
(bad)
cmp
sub
mov
mov
inc
mov
inc
in
mov
das
aaa
jb
inc
rcl
lods
(bad)
inc
push
stc
push
icebp
mov
arpl
enter
mul
cmp
pop
xor
lods
lahf
inc
fwait
stc
add
leave
mov
mov
aas
xor
enter
inc
cld
cmp
test
jge
sbb
push
adc
inc
shr
push
(bad)
(bad)
jg
sahf
dec
mov
push
adc
cmc
shl
les
pushf
push
aaa
push
lock
das
or
mov
lahf
ins
aaa
call
push
inc
push
cdq
adc
xchg
addr16
pop
aam
push
jle
cmp
push
mov
xor
mov
das
add
sbb
mov
out
push
jb
and
dec
repnz
mov
inc
xchg
xchg
mov
movs
adc
pop
push
fs
mov
sub
add
dec
add
mov
mov
scas
mov
xchg
popf
mov
mov
push
pop
icebp
dec
xor
aas
outs
ja
std
jnp
push
jmp
hlt
outs
fadd
imul
push
rcr
xor
or
stc
pop
pusha
in
sti
push
sub
xor
pop
adc
sbb
cwde
sbb
(bad)
xor
add
(bad)
data16
sti
xor
mov
pcmpeqw
xor
mov
mov
jl
xor
aas
pop
xchg
stc
paddb
clc
loope
(bad)
push
int
push
inc
adc
ja
mov
cmps
(bad)
nop
fnsave
xchg
(bad)
mov
xchg
ss
dec
ret
mov
outs
loope
repnz
out
mov
or
ror
or
(bad)
std
rcl
push
outs
cmp
dec
ret
pop
repnz
addr16
repnz
add
popa
xor
stc
scas
test
in
cmps
sbb
pop
jge
push
adc
add
psllq
mov
cmp
jge
rol
loope
daa
sub
mov
int
jge
mov
(bad)
in
shl
shl
xchg
out
mov
add
and
int3
cmp
(bad)
into
jg
push
ror
ja
outs
enter
fiadd
sbb
lods
cmc
mov
jns
adc
arpl
jbe
dec
and
sbb
inc
add
popa
addr16
std
dec
je
mov
xor
inc
sub
test
xor
dec
test
xlat
outs
dec
add
iret
xchg
std
aad
ins
push
ror
cmp
push
adc
jb
dec
ins
std
push
ds
leave
cmp
ss
cmp
mov
(bad)
jb
mov
mov
inc
jnp
mov
sub
lahf
mov
sub
ret
imul
and
mov
pop
aas
mov
xchg
shl
lock
pop
jmp
aam
cdq
and
or
add
sbb
push
call
cmp
mov
xchg
mov
add
jge
cmc
(bad)
es
(bad)
add
push
lds
inc
(bad)
cdq
cmp
call
fwait
mov
aam
int3
retf
dec
data16
outs
xchg
(bad)
fnstenv
sbb
jo
dec
cld
jo
cmp
leave
sti
or
int
jae
or
sbb
mov
mov
inc
mov
cmp
and
rcr
fstp
loop
push
xor
adc
faddp
std
jmp
and
ins
or
out
add
pop
xchg
in
jns
aad
test
xchg
jne
sbb
mov
leave
lods
or
cmp
sbb
fldcw
loopne
(bad)
daa
push
(bad)
mov
jbe
dec
xchg
mov
fiadd
in
adc
sub
xor
lods
cmp
mov
(bad)
push
sub
cwde
leave
adc
cmp
jl
mov
dec
in
and
adc
sbb
jecxz
or
les
nop
sub
add
cmp
je
push
lock
or
sahf
mov
push
fild
dec
or
and
xchg
les
xchg
cmp
cwde
xor
jl
sub
cmp
push
(bad)
je
push
push
gs
nop
inc
add
xor
rol
mov
out
gs
cs
ds
fidiv
int3
jne
icebp
stc
loopne
movs
out
lods
retf
cmovns
ins
ins
pop
jge
mov
retf
cmovbe
push
stc
cld
das
mov
add
popa
xchg
inc
(bad)
mov
add
dec
ret
stos
and
lods
sar
rcr
cmp
pusha
mov
rol
aas
aam
ret
mov
in
mov
push
mov
push
xchg
div
fmul
dec
xchg
mov
je
pop
cs
xor
cwde
mov
loope
jle
nop
xchg
ds
adc
imul
and
test
mov
and
push
xchg
pop
mov
xchg
xor
mov
repnz
sti
call
mov
icebp
cmp
(bad)
mov
jb
sbb
movs
mov
cwde
mov
inc
push
xor
jmp
mov
in
adc
inc
gs
sti
pop
iret
lock
or
jae
(bad)
(bad)
jno
xchg
(bad)
and
jl
in
(bad)
cmp
int3
call
pop
cs
xor
lds
int
jnp
push
push
rcr
in
xchg
mov
or
in
pop
jecxz
jecxz
iret
ins
js
xchg
xor
dec
adc
fidiv
into
push
inc
iret
scas
inc
push
ret
aam
fidivr
push
sti
ret
inc
lock
inc
and
ss
pop
mov
inc
retf
adc
mov
addr16
mov
mov
or
inc
mov
je
mov
fild
call
sub
pop
cmc
mov
or
mov
and
xor
loopne
mov
dec
sbb
sahf
loopne
add
fs
out
inc
dec
jb
mov
adc
aam
stc
sti
dec
addr16
push
push
pop
adc
cli
push
ficomp
mov
inc
jbe
inc
(bad)
mov
ret
fwait
cs
out
in
xchg
dec
mov
leave
faddp
repnz
jmp
xchg
ror
inc
loop
enter
mov
or
inc
lds
or
ja
out
or
rcl
fwait
mov
jmp
daa
pop
or
pop
mov
test
popf
inc
pop
xor
fist
sbb
repnz
cmp
or
xor
push
das
jge
aaa
out
add
pop
dec
jecxz
xchg
aad
or
and
(bad)
shl
dec
inc
pop
and
jl
aas
ret
push
jo
cwde
lock
adc
lahf
je
ret
test
popf
mov
in
stc
imul
retf
mov
mov
daa
sbb
xchg
sub
adc
inc
mov
pop
xchg
jg
and
gs
pop
pop
mov
call
les
jo
outs
lods
fs
xchg
nop
push
dec
add
daa
stc
mov
dec
(bad)
xlat
inc
mov
xchg
lock
xor
outs
outs
or
std
into
xor
xlat
lahf
fisubr
mov
sahf
dec
or
mov
ror
fcomp
or
add
pop
adc
push
outs
cmps
mov
out
jmp
jmp
daa
mov
repnz
clc
push
pop
rol
(bad)
push
mov
jp
mov
jl
xor
div
(bad)
test
adc
das
inc
popa
sbb
or
hlt
es
cmc
jno
mov
xchg
aaa
iret
fdivp
int
pop
cld
inc
jne
ret
mov
mov
(bad)
inc
inc
pop
das
and
adc
mov
xchg
sti
push
or
stc
push
sub
popa
mov
jmp
mov
les
(bad)
cmp
xchg
xchg
shr
ss
shl
sahf
mov
in
sbb
pusha
int3
jae
add
pop
pop
xchg
mov
fwait
imul
inc
fld
fmul
ret
jo
imul
mov
xor
fistp
aas
xchg
ror
call
add
jmp
xchg
icebp
xchg
xor
(bad)
shl
mov
call
push
xor
adc
push
adc
xchg
sub
pop
adc
(bad)
sbb
adc
dec
pop
test
pop
popa
repnz
xchg
sub
mov
xchg
sub
loopne
fmulp
inc
icebp
hlt
mov
popf
ins
xchg
(bad)
mov
cmp
push
push
mov
push
sbb
xchg
add
push
cdq
stos
xchg
xchg
jb
mov
jmp
nop
push
imul
xchg
xchg
data16
sbb
mov
xor
xchg
adc
mov
xchg
in
mov
xor
stos
mov
pop
xchg
mov
pop
out
retf
mov
mov
mov
test
jmp
fsubr
and
ins
nop
imul
fucomp
jo
mov
push
lea
push
push
(bad)
ss
pushf
xor
inc
in
inc
push
hlt
push
int
push
je
das
leave
inc
and
pop
cld
adc
test
inc
pusha
int
mov
ss
int3
sti
mov
xor
mov
in
mov
aas
inc
jns
stos
(bad)
xchg
inc
or
clc
add
add
jmp
test
cs
mov
xchg
mov
imul
out
push
lds
or
ret
jae
adc
xlat
test
ss
repz
xchg
out
jmp
cmp
or
in
xchg
cmp
xlat
popa
mov
xchg
clc
js
daa
push
sbb
mov
push
in
add
cmp
call
dec
jp
adc
pusha
pop
repnz
mov
ret
mov
pushf
dec
movs
adc
xlat
mov
mov
cld
(bad)
repz
in
stc
pop
pop
dec
mov
cmp
dec
cmps
dec
pushf
inc
ret
pop
xor
sbb
and
adc
movs
xor
pushf
bound
int
mov
dec
pop
ins
pop
add
or
lods
sub
add
sbb
sbb
mov
in
cs
lods
cli
sahf
push
lods
inc
mov
inc
jnp
jbe
jb
lods
sar
or
jns
dec
mov
imul
dec
inc
lahf
sub
adc
jmp
mov
jmp
mov
mov
(bad)
outs
inc
scas
aad
aam
push
arpl
loop
inc
stos
(bad)
mov
imul
data16
pop
retf
inc
sub
cdq
out
push
add
pop
fiadd
(bad)
pop
and
outs
retf
mov
xlat
mov
js
clc
jge
inc
retf
pusha
xor
mov
push
in
rcl
pop
pusha
and
jne
outs
pop
jg
mov
xlat
sub
js
push
dec
sahf
push
sahf
jnp
jno
pop
aas
aad
push
push
jg
leave
mov
lods
dec
lahf
bound
sbb
pop
pop
or
xchg
mov
xlat
push
cmp
add
aaa
fldcw
add
retf
mov
xor
ja
mov
adc
ins
in
(bad)
loop
pop
fadd
lahf
pop
outs
mov
repnz
out
popa
dec
rcl
cdq
push
not
cmp
popa
call
in
mov
sbb
jmp
jb
inc
mov
into
and
lods
adc
outs
repnz
retf
mov
xlat
jne
mov
or
je
jmp
ds
push
popf
iret
outs
inc
push
or
push
push
cdq
mov
or
jnp
add
xchg
cs
xchg
shl
repz
daa
popf
push
inc
mov
jo
push
inc
retf
int
adc
sbb
imul
(bad)
call
xchg
and
aas
sub
out
xchg
cdq
xchg
stc
test
mov
jle
aas
ins
fldcw
jg
or
xchg
call
jae
lods
jae
sahf
dec
sbb
data16
pop
mov
push
rcl
loopne
mov
repz
bound
sbb
mov
mov
xor
jb
outs
in
mov
fwait
push
push
dec
inc
jge
movs
cmp
mov
xchg
mov
sub
and
mov
push
xchg
push
xchg
jl
ds
lock
outs
sub
cwde
xchg
fmul
mov
adc
out
cmp
push
jmp
xor
cmps
in
jbe
add
retf
add
in
sahf
rol
int
aas
or
sbb
xchg
mov
lea
fdivr
jns
jecxz
loop
js
and
(bad)
cld
adc
add
cmp
cdq
retf
mov
mov
jb
ja
popf
push
cmp
cmc
scas
sub
jge
div
sub
push
and
(bad)
mov
inc
std
adc
cmps
push
add
or
push
call
inc
adc
push
test
sahf
shr
push
mov
mov
sbb
int
push
or
inc
retf
mov
mov
sbb
dec
pop
pusha
ss
adc
(bad)
xchg
cmps
out
ds
je
cmp
inc
mov
inc
(bad)
jge
arpl
pop
sub
xchg
sub
gs
(bad)
cs
xchg
retf
enter
dec
xor
mov
pop
adc
jmp
daa
mov
mov
sub
repz
xor
jo
imul
aam
pop
ins
clc
in
outs
jecxz
call
rol
std
and
stos
push
jo
pusha
xchg
dec
sar
cmp
aas
and
shr
shl
push
fstp
mov
push
cld
adc
ss
jns
push
jge
mov
scas
jns
adc
imul
sub
pop
pop
add
(bad)
push
cmp
sub
(bad)
out
bound
dec
mov
rol
inc
das
lock
shr
es
sbb
(bad)
in
add
sbb
pusha
xor
add
push
sub
mov
fldenv
jmp
fnstcw
and
ret
pop
push
mov
push
jmp
fcmovnbe
cmps
daa
push
sub
rdpmc
cmp
jge
adc
mov
adc
jnp
gs
sbb
popf
cmps
adc
scas
ja
xchg
movs
(bad)
mov
jecxz
add
(bad)
xchg
aas
pop
leave
inc
xchg
jbe
aaa
push
dec
mov
cmp
ja
in
loope
pop
sbb
ror
pop
adc
mov
sub
jmp
(bad)
sbb
in
retf
shr
leave
jnp
cmp
or
rcr
mov
fnsave
mov
lahf
jbe
jb
mov
push
mov
and
mov
mov
pop
xchg
sub
jno
or
shl
mov
cld
stos
repnz
(bad)
out
imul
fistp
cmps
mov
mov
loopne
ret
push
mov
retf
lea
not
or
adc
cdq
out
jp
lahf
jmp
jmp
popa
sub
gs
cdq
xor
addr16
adc
cmp
inc
ror
aam
fwait
and
xlat
fdiv
sti
push
pop
loope
mov
out
in
das
pop
retf
cld
jge
dec
sti
xchg
mov
dec
movs
aas
pop
xchg
lds
ret
sub
jnp
scas
xor
xor
jmp
push
pop
fidiv
xor
enter
jnp
cld
push
sub
ss
test
icebp
les
push
mov
addr16
lds
ja
mov
outs
ins
in
sar
jo
pop
daa
xchg
fiadd
mov
scas
mov
stos
mov
fdiv
popa
arpl
mov
xchg
xor
mov
ss
fs
dec
or
gs
xor
(bad)
lds
pop
inc
and
cmp
mov
lods
por
popa
enter
adc
dec
adc
dec
repz
adc
inc
rcl
inc
in
jnp
stc
add
std
cld
jns
sbb
pop
mov
test
in
fucomp
xlat
jp
xchg
ins
fild
pop
rcr
dec
pusha
rcr
icebp
push
jge
and
dec
pusha
loop
sbb
(bad)
sahf
jno
cmp
adc
fwait
into
push
dec
data16
pop
xor
enter
je
rol
mov
out
xor
ins
cmp
xchg
div
cmp
in
sahf
fimul
mov
into
jne
sub
pop
mov
inc
loope
mov
dec
inc
daa
mov
jmp
movs
inc
push
das
pop
pop
xchg
fwait
or
push
loop
mov
(bad)
dec
cld
mov
mov
popf
push
xchg
sbb
push
lahf
mov
mov
push
adc
cmp
(bad)
es
adc
loop
jbe
fild
mov
sub
ret
fs
aam
pop
mov
mov
iret
aam
aas
adc
push
in
(bad)
sbb
mov
test
mov
inc
(bad)
ret
jle
xchg
or
sub
mov
xor
(bad)
inc
outs
push
or
add
outs
out
call
mov
scas
xor
mov
xor
xchg
(bad)
sub
mov
cmps
repnz
cmp
addr16
push
and
sub
and
not
dec
mov
(bad)
leave
push
add
cwde
popf
inc
pop
jns
pop
cmp
sahf
push
mov
dec
ins
cmp
dec
mov
inc
call
jnp
mov
sahf
mov
call
(bad)
cmp
mov
xchg
mov
addr16
mov
into
test
pop
bound
jmp
or
loop
jmp
inc
mov
lock
xchg
xchg
lds
repz
sti
out
xchg
not
popf
retf
mov
and
dec
cmp
jle
inc
test
mov
aad
(bad)
test
inc
sbb
xor
add
sar
add
sbb
or
ret
sub
add
jmp
fs
jns
sbb
shr
push
xor
cwde
outs
sbb
cmp
ins
cmp
cmps
xchg
outs
ins
xor
loop
mov
mov
iret
xor
adc
test
es
cmp
sub
add
stos
mov
fdiv
into
pop
aaa
dec
ins
fsub
cmps
cwde
xchg
fldenv
and
mov
aaa
xchg
mov
or
dec
sbb
cmps
test
out
xchg
push
jecxz
in
cmps
lock
or
(bad)
jle
adc
xor
imul
fwait
xor
jmp
add
ins
das
call
movs
sub
adc
pushf
js
sahf
pop
adc
ror
pop
in
scas
clc
mov
cmp
in
ds
aam
mov
xchg
retf
aaa
pop
xor
(bad)
(bad)
or
or
ret
ds
mov
inc
xchg
xchg
mov
cmp
mov
adc
or
mov
mov
push
loop
dec
pop
enter
aaa
push
out
inc
push
call
fcomp
jmp
push
dec
and
mov
mov
pop
pop
scas
cmc
popa
push
call
int
hlt
push
cmp
inc
dec
inc
cmp
test
push
pop
fwait
sbb
push
je
mov
sbb
inc
ss
mov
add
dec
xchg
fldenv
mov
dec
adc
and
mov
add
icebp
ss
dec
out
xlat
mov
pop
or
mov
(bad)
jg
cdq
fcomp
punpckhbw
xchg
cmps
sbb
inc
xlat
test
dec
dec
fnstenv
addr16
xor
cli
push
mov
leave
ja
repnz
mov
movs
mov
add
test
fnstsw
lock
jmp
mov
fldcw
jmp
and
pop
das
pop
aad
cmc
push
xchg
and
mov
xor
aad
(bad)
sbb
int
xor
ja
push
jnp
leave
pop
pusha
lods
jmp
js
pop
aas
jl
xor
rcl
xchg
jl
loop
adc
jo
xchg
out
rcl
imul
sbb
sub
or
shl
jo
(bad)
adc
in
pushf
or
in
movs
pop
fdivr
inc
mov
ss
in
fstp
arpl
add
pop
add
imul
pop
mov
xlat
xchg
add
(bad)
nop
jne
retf
imul
push
iret
add
add
div
pop
mov
xor
adc
xchg
adc
xchg
js
adc
retf
retf
in
jl
popa
lods
call
xchg
loopne
es
cdq
sahf
adc
xchg
jno
(bad)
inc
add
movs
dec
xor
jae
sbb
cmp
sub
mov
and
inc
ffreep
or
scas
imul
adc
loope
scas
xchg
sub
scas
push
xchg
cmps
sar
xor
jbe
mov
lods
jecxz
or
(bad)
or
fst
inc
push
fs
xor
mov
jp
enter
lock
or
push
mov
sbb
js
div
cmp
hlt
in
test
imul
ss
aam
pop
push
outs
rcr
xor
mov
pop
call
jmp
xor
xor
xor
add
call
or
imul
pop
mov
jg
lods
(bad)
xchg
mov
jne
int
adc
xchg
mov
adc
ins
cmp
imul
cs
sti
or
sbb
in
retf
sbb
sbb
or
dec
outs
ds
jle
in
loopne
mov
fnstenv
xor
imul
jmp
and
adc
scas
cmps
and
lods
clc
mov
fdivr
aam
movs
inc
mov
push
in
dec
xchg
out
xchg
cmc
adc
or
aas
stc
cmp
xchg
adc
jbe
stos
fwait
sub
outs
jnp
xchg
mov
lods
push
and
fsubrp
jo
pop
dec
repnz
cmp
mov
dec
imul
jmp
sub
jns
popf
mov
sbb
out
adc
sub
fcmovnbe
jg
xchg
shr
jmp
jle
xlat
(bad)
loopne
js
mov
xor
mov
sar
mov
(bad)
and
call
ins
aaa
mov
aam
push
xchg
and
fsub
cmps
(bad)
shl
dec
pop
jle
nop
push
inc
in
inc
push
jns
popf
and
mov
jnp
mov
(bad)
out
fcmovnu
xor
cmp
jns
test
jmp
xchg
pop
arpl
fs
das
push
xor
mov
dec
mov
iret
jbe
inc
cli
or
push
repnz
push
cmc
sub
cld
jmp
dec
inc
push
push
cmps
mov
mov
sbb
mov
leave
int3
xchg
cld
adc
jg
(bad)
and
and
aam
jmp
mov
outs
mov
repz
into
movs
and
cmc
jl
inc
mov
mov
std
sbb
imul
xor
jmp
lods
mov
push
adc
mov
jle
jne
sbb
jns
mov
mov
aaa
pop
dec
push
or
outs
cld
hlt
icebp
(bad)
inc
(bad)
out
xchg
fadd
xor
neg
pop
imul
cmps
(bad)
into
sbb
imul
hlt
int
push
add
cwde
pusha
and
fsubr
xor
popf
cli
jle
test
(bad)
jbe
ins
mov
push
dec
xor
push
call
cmp
das
mov
retf
sti
xchg
cld
enter
stc
clc
shl
test
pop
dec
pop
mov
cmp
jmp
in
fsubr
pop
hlt
jae
les
xchg
mov
jbe
(bad)
cli
ss
cmps
(bad)
push
pop
call
push
js
rol
sbb
loopne
mov
fbld
or
cs
call
xlat
jo
xor
pop
inc
sub
cmp
addr16
mov
int
pop
and
lock
add
idiv
add
lds
jns
lods
pop
inc
hlt
push
icebp
arpl
mov
fucomp
(bad)
and
bound
mov
dec
daa
xchg
fstp
addr16
rcl
arpl
(bad)
mov
sbb
popa
pop
dec
push
push
loop
cmp
push
xor
jp
mov
jnp
mov
cmp
xchg
or
jg
jl
gs
sti
imul
mov
inc
jns
add
gs
cmps
mov
xor
and
out
cmp
adc
ds
jmp
stc
int
push
sbb
add
mov
les
cdq
pop
jmp
inc
fistp
mov
cmp
aas
in
mov
arpl
cwde
(bad)
cdq
bsf
in
je
mov
xchg
fld
and
out
jle
neg
lea
adc
xor
pop
sar
xor
cld
mov
push
movs
push
and
sub
retf
cmp
jle
or
sub
sbb
sub
cmc
iret
popf
sub
cwde
pop
loopne
push
loopne
jo
mov
out
push
or
mov
and
and
pop
mov
ins
and
sub
cmps
ss
mov
mov
loope
(bad)
mov
jo
dec
out
and
popf
cmp
mov
jb
leave
pop
(bad)
mov
adc
psubb
pop
sbb
popa
mov
inc
fsubr
cmp
mov
or
aad
pop
ja
fldenv
out
lock
add
out
pop
fiadd
inc
xor
sub
xchg
pop
fdiv
push
vmwrite
adc
es
or
in
jle
jnp
jge
mov
sub
(bad)
pop
jg
rcr
movs
xchg
push
cmp
in
sbb
jmp
mov
ins
gs
sub
dec
xchg
add
sar
call
pop
je
iret
xchg
fsubrp
imul
cli
loop
and
xchg
out
in
rol
dec
jl
ficom
jl
iret
dec
jp
mov
dec
and
jb
adc
inc
sub
jnp
xor
or
jg
cwde
mov
clc
jg
inc
jl
inc
sub
push
dec
xor
sar
out
xor
jl
mov
fcmovb
mov
or
cwde
je
test
cmc
call
iret
or
xor
jo
out
or
push
dec
sub
(bad)
(bad)
sub
cmp
mov
ins
adc
imul
stos
xchg
jns
es
push
repnz
mov
mov
out
jno
addr16
inc
push
inc
jmp
cmps
cmps
jae
mov
push
and
push
ret
cmc
call
cld
add
out
cmp
cdq
mul
popf
mov
daa
add
das
sub
dec
ret
add
push
adc
div
lods
ins
mov
or
mov
inc
push
jbe
push
into
jnp
cmc
retf
sbb
push
and
retf
xchg
in
xor
cmp
adc
sub
xchg
imul
pop
cdq
fcomi
sbb
out
push
fisttp
mov
cdq
retf
mov
hlt
mov
push
iret
hlt
nop
pop
lods
push
push
aas
gs
pop
add
dec
aam
lods
inc
cmc
cdq
mov
inc
sbb
ds
loope
cmp
adc
or
mov
lods
lods
mov
es
cmp
mov
das
loope
push
jbe
ins
xor
ss
cmp
dec
xchg
imul
mov
jno
repz
fwait
unpcklps
jle
shl
or
sub
out
jns
jno
in
xchg
cmp
sbb
popa
jl
sub
sbb
or
jmp
sti
xchg
repnz
scas
stos
data16
ret
mov
stos
add
xchg
ret
cmc
xor
aam
das
test
inc
mov
daa
xor
jae
pop
fs
daa
cmps
lea
and
and
sbb
mov
inc
mov
mov
shr
add
lea
aam
add
inc
mov
cmp
fwait
sbb
call
call
xchg
push
adc
adc
push
push
xchg
xor
pop
jbe
out
rol
mov
retf
aam
jge
lea
xchg
inc
add
rcl
mov
stos
push
leave
cdq
sub
pop
clc
jnp
or
adc
push
aam
fcomp
nop
rcl
inc
jmp
sar
xchg
xchg
xor
sbb
dec
movs
xchg
mov
jae
and
sub
aam
cmp
loopne
xchg
fild
sub
jo
fidivr
lods
cmp
call
or
jmp
jmp
std
in
mov
(bad)
in
dec
sbb
pop
cmps
stos
fcomip
jo
repz
mov
and
retf
xchg
inc
jg
pop
pop
out
ss
jnp
hlt
xchg
out
mov
mov
dec
mov
out
shr
sbb
and
jle
int3
mov
mov
sbb
adc
cmp
or
pop
or
or
leave
(bad)
mov
cld
pop
inc
test
int
aaa
xlat
aas
adc
and
std
(bad)
imul
cdq
lds
loop
cmp
mov
inc
dec
mov
aad
bound
repnz
sub
cmp
cld
inc
jbe
int
sub
inc
fldenv
shl
jnp
scas
fdivr
dec
xor
jg
or
xor
xchg
jp
bound
movs
add
gs
(bad)
jbe
add
je
ins
jg
(bad)
jp
xor
lea
fimul
mov
push
pop
std
mov
jbe
adc
jae
sbb
call
fistp
outs
je
and
jns
xor
sub
(bad)
out
push
inc
mov
and
push
pushf
mov
les
mov
(bad)
sbb
xchg
push
cmc
push
jmp
mov
int3
cmps
out
jg
xchg
add
sti
and
bound
jge
fdivr
fldcw
xor
dec
add
cld
pop
call
es
push
popf
gs
shrd
push
dec
inc
mov
scas
cmp
cmp
ins
stc
or
add
in
mov
cmp
cmps
and
sub
rcl
outs
cmp
mov
push
or
lds
repz
aad
imul
aaa
mov
in
mov
repz
sub
cli
add
scas
cmps
mov
fs
sar
shl
movs
es
adc
jl
mov
mov
aaa
retf
aaa
jno
aaa
mov
fmulp
mov
in
sub
mov
inc
pop
call
xchg
mov
imul
mov
mov
std
adc
pushf
cdq
push
add
sub
pop
aad
cmp
repz
sti
js
gs
and
sub
jmp
xchg
in
and
fstp
imul
fwait
repnz
call
add
icebp
mov
and
xchg
sub
cmp
gs
pop
mov
pop
es
add
aam
cld
add
mov
retf
das
daa
add
iret
mov
das
and
outs
int3
and
inc
mov
inc
pop
daa
and
dec
aam
push
and
aaa
pop
cmp
in
sahf
mov
sbb
aad
call
xchg
enter
loope
pop
pop
ins
ret
adc
and
adc
mov
pop
add
mov
push
mov
xchg
jecxz
outs
addr16
push
test
sti
movs
jnp
mov
rcl
mov
xchg
outs
mov
mul
(bad)
shl
fwait
pop
jmp
int3
lods
mov
mov
mov
sti
mov
pop
push
sub
fist
jbe
movntps
hlt
sbb
cmp
xor
jmp
sub
rcl
cmc
xlat
cs
pop
mov
cmp
movs
imul
push
jecxz
inc
mov
pusha
jne
cmp
(bad)
pop
ret
jge
aas
nop
fmul
jbe
pop
push
repz
in
inc
sbb
pop
dec
ja
mov
clc
sbb
cmp
xor
mov
mov
xor
sahf
lock
pop
cdq
or
mov
ss
ror
iret
inc
sbb
aam
cs
dec
and
out
dec
dec
aad
push
jmp
add
call
xchg
dec
sbb
dec
sbb
add
mov
sub
(bad)
push
inc
cli
data16
push
jmp
sbb
into
mov
sub
sar
neg
inc
ror
cld
push
jb
(bad)
mov
sbb
std
cmp
aam
fld
push
ds
sbb
pop
mov
dec
or
aad
mov
bound
in
push
pop
test
movs
clc
sub
sub
sub
int3
sbb
sbb
mov
or
(bad)
shr
mov
(bad)
call
mov
(bad)
(bad)
pop
fs
sbb
sub
mul
in
mov
jnp
add
scas
(bad)
das
adc
hlt
cs
aad
add
ror
mov
and
or
movs
and
bound
mov
sahf
repz
sub
mov
xchg
adc
mov
out
xlat
mov
pop
sti
dec
iret
repz
dec
inc
fsub
sub
lahf
test
mov
and
js
sub
sbb
shr
mov
xor
cmp
xchg
push
mov
xor
mov
test
in
jmp
pop
pushf
fstp
xor
mov
outs
outs
call
(bad)
loope
sub
sub
sbb
add
out
loope
add
push
mov
mov
loopne
scas
icebp
lds
pop
push
fsubr
out
stc
(bad)
call
(bad)
rol
test
mov
adc
pop
sub
imul
daa
add
and
iret
push
sti
sub
dec
sbb
mov
sbb
daa
cwde
add
sbb
cld
adc
sbb
sti
jp
into
imul
inc
jp
scas
movs
jne
pusha
or
outs
pop
sti
outs
xchg
jmp
(bad)
rol
sar
inc
call
pop
mov
dec
fst
sub
out
mov
mov
cmp
mov
push
mov
fldcw
outs
push
sub
mov
leave
inc
addr16
sub
cmc
int
jbe
and
fwait
sbb
sbb
leave
dec
sti
call
loop
sbb
in
dec
dec
xor
lock
and
es
sbb
sub
dec
fwait
xchg
mov
cs
inc
(bad)
jb
or
xchg
movs
retf
inc
mov
pop
pop
fldenv
loop
lods
cld
adc
mov
pop
(bad)
jmp
cs
sub
or
stc
ins
ja
push
and
xor
adc
ins
int3
push
push
das
push
cs
addr16
mov
mov
xor
out
aad
xor
inc
mov
adc
dec
xor
js
and
add
mov
push
retf
adc
imul
fldcw
pop
cli
push
stos
jae
test
sub
jle
aad
movs
jecxz
dec
jge
rcl
(bad)
fstp
jno
adc
out
into
and
cli
mov
dec
into
fnsave
mov
and
rol
dec
jo
or
fbstp
sbb
xchg
aam
movs
aam
(bad)
inc
int3
mov
fsubr
jbe
push
sbb
cld
xor
push
hlt
mul
(bad)
fimul
sbb
lea
out
add
sbb
shr
mov
cdq
loop
scas
repz
leave
push
adc
mov
scas
add
ds
mov
loopne
retf
xchg
push
add
dec
xchg
inc
push
xchg
mov
sbb
loopne
mov
sub
jne
cmp
cmps
ja
push
mov
mov
(bad)
add
repnz
test
fs
arpl
mov
in
in
push
std
mov
cmps
sub
scas
dec
mov
jbe
mov
hlt
cli
aam
mov
imul
js
mov
and
or
push
icebp
fstp
not
push
outs
shl
mov
and
(bad)
jo
dec
cmc
fs
sub
dec
pop
aas
push
pop
cmp
jle
sub
jle
in
push
xchg
in
push
jge
xchg
fbstp
test
mov
cmc
fst
test
pop
(bad)
mov
push
jns
add
je
scas
mov
js
sti
fwait
out
adc
retf
test
test
ret
jnp
jns
imul
mov
loop
call
push
fstp
outs
dec
fnstenv
je
cs
dec
icebp
sti
(bad)
or
ins
jne
rol
fisttp
jae
test
rcl
mov
jmp
dec
sti
mov
mov
inc
cmp
xor
aam
xchg
std
jb
push
outs
sub
ins
jmp
pop
int3
and
pop
shl
mov
jmp
cmc
sbb
nop
inc
stos
fdivr
call
and
popa
pop
test
shl
push
test
and
cmps
and
push
jle
and
xor
dec
sub
mov
iret
fcmovnu
ror
mov
mov
popa
xchg
push
cmp
in
js
ret
add
lea
std
dec
jo
mov
iret
mov
loop
into
push
fidiv
lods
in
(bad)
jns
mov
pushf
jmp
ins
mov
nop
and
dec
adc
adc
iret
test
pop
xor
dec
pop
addr16
popf
inc
sar
jecxz
sbb
js
or
pusha
fbstp
mov
mov
sbb
icebp
xor
push
xchg
cmp
mov
cdq
in
push
xor
mov
iret
jmp
inc
push
pop
adc
cmp
or
jmp
mov
ds
push
sar
nop
ins
add
inc
icebp
or
mov
inc
sbb
retf
mov
sub
(bad)
mov
mov
jmp
jne
xchg
mov
mov
aad
stos
stc
cmps
xor
mov
xchg
test
xor
sub
pop
sub
lds
dec
push
(bad)
sub
fstp
xor
int3
sbb
mul
loop
ss
xor
adc
sub
pop
lods
jecxz
pop
push
imul
dec
mov
cmps
ins
icebp
(bad)
repnz
jecxz
les
inc
push
(bad)
loopne
cwde
inc
lea
jmp
retf
div
pop
mov
outs
addr16
call
mov
(bad)
jno
push
inc
jb
add
enter
sti
sub
add
imul
ret
rcr
inc
mov
inc
adc
les
dec
mov
stos
leave
cmp
mov
retf
lea
fld
cmps
fnstsw
push
outs
jg
pop
sub
xor
call
cld
pop
js
mul
scas
or
dec
imul
aas
int3
jae
inc
cmp
xor
mov
enter
xor
pop
push
gs
jecxz
(bad)
mov
ret
scas
sbb
clc
fmul
or
int3
xchg
stos
dec
cdq
clc
cmp
pop
iret
cmps
pop
lahf
(bad)
mov
cmp
cmp
sbb
add
sbb
movs
fadd
push
loopne
cmps
mov
mov
mov
xchg
(bad)
inc
or
lahf
xchg
fcmovbe
adc
add
sub
fsubr
icebp
movs
xor
jne
into
iret
sbb
sub
dec
outs
(bad)
sbb
fcomp
test
cmp
add
js
std
inc
ins
dec
lea
aaa
leave
sub
push
xchg
xchg
push
repz
aas
mov
int
dec
loopne
push
and
std
adc
stos
in
ds
int3
aam
sub
pop
das
push
or
add
pop
cmp
pusha
stc
xchg
push
adc
jmp
int3
rol
test
pop
inc
(bad)
stos
outs
fsubr
mov
leave
dec
jge
cmp
pop
hlt
(bad)
outs
cmps
pushf
ds
movs
mov
xor
arpl
xor
or
jle
shr
add
add
push
neg
adc
mov
jno
leave
aad
lock
xor
inc
loope
sub
retf
lock
fisttp
xchg
(bad)
loope
xor
fisubr
xor
adc
stos
xor
mov
cmp
inc
mov
pop
or
push
pop
int
sub
in
les
out
lods
push
pop
js
mov
(bad)
adc
scas
in
pop
sub
or
call
ret
enter
mov
loop
mov
jl
push
cmc
pushf
in
popf
adc
pop
add
or
mov
dec
cwde
(bad)
push
mov
dec
push
imul
loop
arpl
pop
test
cld
or
sbb
jmp
lods
ret
lds
in
lock
je
pop
dec
sub
fld
adc
and
sbb
and
jle
cli
out
les
pop
add
xchg
adc
(bad)
adc
enter
mov
adc
mov
in
arpl
pushf
xchg
xor
stos
xchg
mov
push
jne
jno
mov
call
jl
xor
mov
test
xchg
iret
pusha
or
jnp
cmp
add
or
adc
clc
(bad)
sbb
adc
and
sahf
mov
data16
aas
cmps
mov
cmp
(bad)
int3
or
inc
push
add
xchg
je
js
ret
xchg
out
inc
fisttp
pop
repz
push
xor
push
sti
(bad)
mov
dec
fnstenv
mov
push
aaa
or
ds
gs
jne
dec
dec
dec
mov
int3
jb
test
jle
push
mov
mov
popa
inc
ror
or
cmp
jo
stos
sbb
mov
movs
pop
mov
inc
gs
aam
das
(bad)
gs
sbb
jecxz
pop
sub
mov
out
js
cs
in
sub
mov
sbb
les
cmps
stos
lahf
jns
sub
xor
adc
jp
mov
jp
mov
stc
fdivp
repz
aas
push
ja
xchg
fldenv
or
cmp
and
jl
mov
repnz
cmp
out
lea
xchg
inc
into
xor
cmc
(bad)
vmovups
inc
test
ror
jecxz
(bad)
fistp
inc
sub
mov
(bad)
jmp
and
mov
sub
clc
loope
(bad)
jne
ret
les
push
loop
cmp
mov
(bad)
hlt
sbb
sbb
inc
mov
pop
fdiv
or
dec
sbb
es
sbb
push
sbb
mov
inc
add
fidivr
jg
cdq
fisttp
mov
sbb
(bad)
and
scas
imul
leave
scas
fsubr
add
or
mov
sbb
test
inc
xlat
icebp
push
push
dec
pop
call
mov
sbb
lahf
inc
gs
or
fdiv
jbe
cwde
pop
data16
retf
xchg
in
adc
add
jno
addr16
outs
pop
addr16
scas
inc
aas
and
cmps
sub
loope
imul
(bad)
out
fimul
popf
hlt
sahf
mov
ret
iret
sub
popf
pop
sti
into
add
(bad)
test
mov
pop
sbb
and
shl
out
dec
fsubrp
xor
add
call
adc
jbe
inc
fldcw
stos
xchg
sbb
jmp
or
adc
and
jge
adc
push
dec
call
or
mov
stos
std
neg
adc
movs
(bad)
lods
sub
sub
test
xchg
retf
adc
add
pop
xor
pop
dec
cdq
sti
in
jecxz
jns
xchg
popa
pop
cli
mov
and
or
xchg
in
clc
das
mov
test
outs
adc
ror
loope
test
jo
loope
mov
pop
(bad)
jle
xchg
clc
rcl
int
or
das
xchg
adc
call
sub
jecxz
sbb
int
push
pop
arpl
cmp
mov
stos
test
push
add
xchg
dec
pop
icebp
push
inc
das
test
sahf
add
xchg
daa
cmp
loopne
mov
xchg
icebp
or
push
ficomp
retf
push
fwait
inc
mov
je
iret
scas
cmp
div
cmp
retf
cmp
adc
cmps
aad
scas
xchg
xchg
push
mov
repnz
mov
lods
ds
mov
outs
dec
dec
or
adc
test
daa
or
push
jp
jp
call
push
out
cld
aas
sub
ja
ss
push
nop
aam
sub
jo
cmp
fild
jle
imul
das
push
retf
je
push
fnsave
rcl
retf
jmp
xor
jmp
mov
xor
out
lea
mov
jmp
(bad)
lahf
xlat
repz
dec
(bad)
push
mov
mov
pop
xor
pushf
add
and
lahf
andps
(bad)
ss
mov
pop
or
sbb
lahf
jnp
push
call
cmp
stc
mov
cwde
mov
jbe
cli
mov
cli
sbb
retf
sti
dec
and
das
inc
mov
add
mov
sub
popa
aad
jne
popf
cmp
pop
int
and
iret
out
adc
movs
mov
fs
fnsave
mov
sbb
lods
mov
data16
sbb
jnp
pop
push
je
nop
jmp
jne
sbb
sub
scas
inc
xchg
outs
mov
lea
fnstsw
aam
nop
push
dec
pop
xor
repnz
and
mov
jb
sub
fsubr
imul
mov
stos
adc
loop
ja
xor
sbb
dec
mov
or
mov
mov
int
adc
mov
repz
push
pop
jl
adc
push
std
sub
(bad)
out
jnp
xor
add
jbe
sub
adc
mov
xor
popf
outs
int
popf
fwait
and
fsub
sub
cmp
inc
mov
mov
sahf
push
ret
(bad)
(bad)
mov
into
push
clc
cmp
sbb
mov
or
out
scas
fcom
fisttp
int
dec
nop
pop
or
and
sar
mov
add
pop
out
ja
jmp
fwait
mov
popa
xchg
fwait
imul
jmp
cmc
push
addr16
int3
cmp
adc
(bad)
fcmovu
inc
or
inc
sub
repz
dec
push
or
aaa
or
cmp
movs
fidivr
fs
and
fcomp
adc
fistp
hlt
rcr
xor
shr
mov
push
jbe
xor
enter
das
jnp
out
sub
xor
loopne
ror
or
jg
sbb
js
mov
ficomp
or
test
ss
movs
cdq
repz
mov
fmul
imul
stos
hlt
jge
jge
fstp
pop
cdq
sbb
mov
fs
aad
scas
scas
pop
or
and
xchg
test
(bad)
out
dec
or
inc
xchg
aad
lds
(bad)
in
bound
stc
inc
xlat
shr
jns
cmp
and
sti
cmp
add
sbb
jmp
pushf
xchg
lahf
inc
movs
hlt
and
add
or
jne
cvtdq2ps
mov
mov
loope
or
(bad)
int3
pop
data16
shl
call
daa
loope
ror
repz
sbb
fs
popa
push
(bad)
xor
ret
inc
(bad)
adc
(bad)
jp
cmps
test
scas
pop
stc
iret
add
push
nop
or
addr16
fst
and
aaa
jmp
push
or
cmp
call
sbb
and
xchg
mov
mov
xchg
add
and
mov
lahf
cmps
mov
sub
mov
(bad)
jmp
sti
sahf
out
add
aad
xor
in
or
dec
jno
out
mov
and
test
pop
or
out
push
adc
lds
dec
loopne
push
push
repnz
shl
mov
add
jae
push
imul
icebp
cmp
loopne
add
inc
mov
mov
or
sbb
in
push
sar
(bad)
sbb
and
retf
xchg
inc
outs
outs
jno
or
bound
aam
(bad)
out
jg
push
push
outs
call
or
scas
and
cwde
(bad)
not
movs
nop
push
push
lock
or
call
or
test
sub
cli
mov
in
inc
pop
push
pop
shl
or
nop
sar
push
xor
jl
in
sub
je
jmp
sub
sar
mov
mov
ret
gs
sub
sahf
gs
cli
popa
sbb
mul
adc
jp
fnop
dec
shl
add
cmp
scas
mov
dec
adc
jo
mov
sub
and
dec
or
sbb
sub
int3
xchg
sbb
jp
aaa
iret
lahf
retf
pop
adc
pop
fisttp
rcr
mov
gs
xor
int3
mov
ins
ror
push
fidiv
test
pop
or
mov
(bad)
clc
xchg
mov
fisttp
pop
aad
icebp
pop
les
dec
pop
and
in
lds
dec
mov
in
rol
aam
push
pusha
lods
push
shr
shl
daa
add
mov
mov
hlt
and
cdq
dec
mov
mov
daa
cmc
jb
pop
cli
icebp
mov
sub
mov
mov
add
fdivr
dec
scas
aas
icebp
inc
out
std
into
sti
sub
xlat
(bad)
and
pop
arpl
cmps
xor
adc
not
adc
dec
inc
sub
ja
cmp
sti
fcmovne
fbld
adc
adc
adc
push
scas
out
fs
clc
out
(bad)
pop
mov
xor
scas
or
mov
in
cwde
xchg
xchg
push
and
add
push
repnz
sub
lea
fwait
loope
push
fsubr
scas
stos
iret
xchg
(bad)
mov
cmp
mov
leave
and
jle
xlat
test
adc
pusha
daa
cmp
pusha
pop
inc
aas
icebp
push
icebp
aam
xor
loop
or
in
es
and
inc
dec
mov
push
dec
sbb
and
dec
out
imul
iret
shl
jno
pop
loopne
cmp
mov
cmp
retf
xchg
and
iret
add
mov
or
(bad)
inc
inc
and
cmp
and
push
xchg
lds
call
adc
xchg
inc
imul
push
(bad)
in
dec
cwde
es
inc
sbb
and
(bad)
jecxz
xor
ins
dec
popf
xor
xor
pop
dec
push
call
jbe
stc
push
and
lods
lds
gs
out
repz
and
call
mov
add
add
ja
outs
jge
out
xchg
xor
xchg
scas
jge
fcmovb
test
pop
inc
mov
scas
push
cmps
sub
jl
sub
jnp
nop
and
add
hlt
sub
jmp
repnz
jo
dec
fwait
pusha
pop
adc
enter
xchg
test
dec
mov
loope
push
jle
ret
jmp
xor
adc
cmp
mov
outs
jae
mov
and
hlt
sbb
mov
or
and
cdq
test
and
cli
rcr
add
imul
out
inc
push
(bad)
mov
mov
mov
aas
dec
clc
pop
and
mov
cmp
xor
and
lods
inc
cmp
push
les
add
cmps
or
lds
dec
jns
or
aam
cmp
xchg
dec
xchg
vpcmov
mov
mov
out
movs
test
pop
or
imul
push
or
fist
loope
repnz
hlt
cdq
and
call
sub
xor
or
cmp
jl
rcl
sbb
neg
mov
pop
lds
inc
pop
aam
cwde
loope
stc
inc
pop
jg
cwde
out
ret
lock
aas
aad
xor
dec
lods
push
inc
mov
xor
std
nop
mov
xchg
jl
jecxz
mov
mov
pop
leave
or
xor
into
sbb
dec
in
xchg
rcr
push
and
aaa
(bad)
mov
retf
and
lahf
mov
adc
pop
test
jmp
lods
dec
push
cli
ja
inc
sub
xor
addr16
push
or
cmp
into
leave
out
adc
add
jae
out
mov
pushf
and
inc
ret
cmp
push
addr16
adc
stos
rcl
xlat
gs
sub
xor
dec
into
test
jno
pop
popf
xchg
jp
pop
fs
dec
aaa
push
retf
sti
jns
pop
cs
movs
fild
shl
rol
lods
push
xchg
jno
xchg
push
aad
dec
push
jge
add
dec
cld
movs
and
xchg
adc
pop
mov
jb
adc
or
cmp
nop
and
xchg
adc
fidivr
mov
or
mov
pop
xor
ret
dec
dec
dec
jle
inc
jmp
add
outs
add
daa
cmp
mov
(bad)
fwait
push
(bad)
clc
add
xor
aaa
fs
inc
cdq
mov
mov
fnstcw
fbstp
ins
mov
popa
push
mov
test
and
xor
les
pushf
mov
sub
movs
and
inc
sbb
push
xchg
or
stc
sahf
sbb
dec
mov
mov
or
sbb
adc
cmp
fild
mov
push
mov
push
or
push
cmp
push
jne
pop
not
imul
frstor
and
mov
pushf
scas
fwait
shr
jp
lahf
push
test
inc
adc
pop
and
cmp
inc
in
push
adc
daa
xchg
imul
cmp
ds
pusha
gs
inc
inc
jne
xchg
dec
test
mov
cmp
hlt
mov
cmp
xor
pop
mov
cmps
mov
and
and
loopne
ins
cmc
lsl
cmp
cmp
fdivp
xchg
fs
jb
into
aas
pop
pop
jp
repz
mov
pushf
cmps
mov
adc
fist
(bad)
or
xchg
rol
pop
jbe
int
loopne
sar
les
loopne
adc
xor
mov
loop
or
dec
call
adc
retf
push
movs
xchg
adc
stos
lods
mov
sub
cmp
mov
test
clc
xor
pop
(bad)
push
cmps
inc
and
cli
and
mov
shl
pop
dec
fst
sub
cmp
daa
adc
cmps
int
cmp
mov
retf
and
test
pop
fmul
and
repz
shl
test
dec
stos
fisttp
in
xchg
fbld
les
mov
out
and
mov
push
sub
mov
out
test
mov
in
mov
les
mov
mov
inc
movs
je
mov
dec
test
sbb
lock
pop
adc
sbb
add
loopne
sub
dec
jns
adc
imul
push
rol
data16
not
pusha
outs
addr16
and
push
xor
dec
out
jmp
test
ja
pop
(bad)
ror
rol
outs
sbb
sti
stc
cmp
inc
mov
xchg
les
xor
mov
push
imul
mov
ficom
es
or
add
xchg
sbb
push
cmp
and
xor
retf
sbb
and
popa
in
sub
addr16
stos
movs
and
div
xchg
push
loopne
retf
rcr
add
cmp
push
push
sbb
sahf
dec
cmp
cmp
jb
into
int3
lea
mov
out
ds
aad
int3
push
and
mov
pop
addr16
out
inc
hlt
sbb
mov
push
cdq
xor
rcl
sbb
lock
mul
or
test
loop
or
sbb
movs
inc
inc
aaa
ja
inc
dec
sar
aad
aaa
cld
retf
ror
cdq
movs
cmp
sub
shl
adc
push
rol
addr16
ja
ret
clc
pop
mov
add
mov
inc
fwait
test
push
jnp
arpl
adc
(bad)
(bad)
icebp
and
mov
movs
into
jae
retf
add
adc
dec
pop
inc
shr
neg
js
addr16
repz
pop
addr16
(bad)
es
loope
mov
xor
push
pusha
shl
adc
iret
test
retf
adc
mov
xchg
fstp
out
stos
mov
mov
and
bswap
je
adc
xchg
icebp
adc
mov
aad
add
push
icebp
xor
cmp
and
repz
stos
add
jmp
cmp
push
retf
inc
in
inc
icebp
xor
and
leave
out
xchg
int
cmp
das
push
mov
dec
test
xchg
mov
jb
cli
hlt
fwait
jno
ss
adc
leave
jge
mov
sbb
or
xlat
mov
sub
xor
mov
inc
cld
and
addr16
std
fsubr
call
mov
mov
xchg
bts
repnz
pop
push
mov
push
pop
mov
pusha
mov
or
ret
movs
or
cli
jno
fsub
rcr
mov
jp
cmp
dec
jno
jle
lds
ss
jle
xor
test
leave
mov
cmp
cli
adc
jae
push
loope
shl
add
not
movs
push
push
clc
cmp
mov
scas
xchg
icebp
xor
pop
sbb
sub
sub
and
outs
call
inc
sti
repnz
aad
push
std
(bad)
jl
lock
repnz
iret
inc
cmp
and
or
shl
mov
(bad)
mov
xor
xor
and
std
mov
push
loop
rcl
push
sub
loop
rcl
es
pop
jae
pushf
inc
jbe
mov
dec
and
out
or
mov
loope
adc
pusha
cmp
dec
and
mov
aas
dec
clc
mov
sub
or
ins
adc
jmp
push
and
scas
mov
dec
xor
rcr
fimul
xchg
int3
outs
test
cld
sub
push
jno
and
jl
(bad)
sub
imul
push
ins
leave
add
shr
inc
lea
in
and
outs
dec
cmp
inc
out
bound
enter
dec
shl
push
jl
gs
jg
fidivr
jno
mov
jecxz
push
mov
lahf
(bad)
push
mov
or
sbb
jns
sahf
repnz
jp
imul
and
mov
adc
test
sub
adc
(bad)
pop
push
xor
or
test
mov
sbb
mov
in
adc
xchg
es
rcl
push
shl
stos
xlat
shl
arpl
lock
mov
push
ins
movs
or
mov
out
rcr
mov
rol
add
mov
mov
outs
lods
or
pop
sbb
in
sub
inc
mov
adc
mov
cmp
div
aam
jo
ret
or
dec
jle
sub
(bad)
cwde
ja
repz
mov
push
cmp
jo
retf
sbb
call
outs
aas
dec
pop
cmp
pop
xchg
clc
ficom
mov
fadd
loope
or
stos
data16
test
outs
jnp
lods
sbb
jmp
adc
xor
daa
frstor
xchg
imul
add
push
into
lock
imul
mov
sar
adc
out
xor
and
mov
inc
fnstenv
inc
rol
push
mov
enter
adc
lods
stos
cmps
adc
jecxz
xor
(bad)
xor
mov
jmp
push
push
sahf
es
xor
ficomp
test
enter
or
jae
ja
pop
pop
and
adc
sbb
mov
mov
mov
xchg
inc
push
push
movs
mov
jmp
dec
test
nop
pop
das
loop
cmp
icebp
scas
jne
xor
xor
fist
push
stc
sti
rcl
inc
or
fcom
lea
repnz
daa
gs
adc
daa
xchg
stos
idiv
add
push
dec
mov
jle
jmp
ins
mov
fs
in
add
jo
jp
out
or
stos
or
int3
dec
mov
pop
adc
in
in
dec
cmp
push
cmp
lods
or
jmp
push
adc
and
dec
in
or
in
in
into
loop
sub
cmp
inc
add
push
push
lock
mov
mov
pop
inc
push
int3
data16
test
xchg
push
sbb
sahf
retf
push
push
pushf
xor
mov
jmp
dec
movs
(bad)
mov
cwde
or
fidiv
sti
sub
add
movs
daa
jl
jg
hlt
outs
pop
daa
test
add
movs
aaa
sbb
and
cmp
enter
imul
jg
xchg
in
into
sub
xchg
bound
push
add
add
push
(bad)
retf
push
jb
jne
sahf
(bad)
dec
ffreep
sub
mov
retf
lods
adc
adc
or
sub
cmp
mov
add
(bad)
int
fsub
pop
lds
push
or
mov
pop
in
loop
call
ror
imul
popa
sub
mov
adc
jae
xor
psrlq
imul
fmul
js
adc
aad
fwait
pop
cmp
scas
in
sbb
xlat
int
mov
adc
mov
mov
fcomi
mov
fidivr
cmp
bound
loope
scas
ret
push
xor
fmul
and
pop
call
cmp
test
fmul
sub
(bad)
mov
(bad)
pushf
xor
dec
add
lea
ins
mov
scas
mov
push
out
xor
test
push
mov
das
dec
sbb
or
pop
inc
frstor
outs
clc
sub
jnp
(bad)
int
adc
mov
jmp
idiv
cmp
rcr
rdmsr
inc
out
mov
mov
rol
(bad)
test
lods
jge
cmp
or
mov
cmp
or
les
or
and
mov
mov
jle
fsub
aas
jle
adc
scas
mov
adc
sub
dec
and
std
jo
pop
stos
daa
push
jle
std
in
pop
or
inc
fist
or
pop
push
ret
pop
pop
jb
xchg
or
data16
(bad)
sti
jne
mov
mov
mov
sub
cld
enter
push
cwde
fiadd
sahf
adc
div
ror
and
idiv
and
outs
cmc
mov
daa
in
push
loope
jnp
lds
mov
in
or
pop
rcl
add
sbb
icebp
mov
or
out
fsubr
or
retf
cmp
inc
mov
mov
cmp
dec
call
push
push
stc
shl
adc
inc
lods
jne
xor
(bad)
daa
neg
pop
fistp
adc
cmp
dec
sbb
mov
sub
inc
sahf
dec
out
adc
mov
aas
jg
out
or
loop
or
mov
icebp
ret
mov
movs
add
repz
data16
out
mov
shl
add
xor
add
inc
sub
add
sub
(bad)
pop
(bad)
adc
pushaw
push
xchg
inc
cld
fistp
fidiv
mov
mov
dec
loope
xor
jbe
repnz
dec
out
cmps
bound
icebp
sbb
dec
fs
(bad)
fwait
mov
mov
(bad)
sbb
out
mov
movs
aad
loop
cli
mov
out
icebp
sahf
cwde
pushf
pop
pop
cmp
mov
xchg
dec
test
cs
pop
cmp
mov
jbe
cmps
or
and
scas
push
scas
ret
xor
xlat
out
sub
iret
or
fcom
dec
or
adc
aam
ds
pop
mov
inc
int3
ror
pusha
aas
sbb
cmp
call
jg
jge
ins
inc
pusha
cwde
adc
das
jl
stc
jb
jae
gs
cmp
cmp
lea
push
xor
inc
jbe
test
xchg
mov
(bad)
fstp
(bad)
and
sbb
cmps
mov
cmp
push
das
mov
cs
leave
repnz
rcl
test
jecxz
pop
pop
jmp
mov
inc
hlt
nop
push
test
inc
sub
dec
movs
fxch
xchg
sub
repnz
jg
loopne
std
xor
ror
outs
js
cmp
adc
or
inc
sub
dec
fisub
sub
dec
dec
pop
or
mov
mov
fnsave
out
jns
mul
lock
sbb
push
cdq
sub
nop
bound
push
pop
dec
adc
neg
lahf
mul
jmp
dec
hlt
fnstcw
jae
fistp
repz
pop
out
cmps
int3
(bad)
jl
loop
pop
and
push
pop
das
inc
pop
xor
sub
xor
mov
fistp
pop
icebp
xchg
ins
fxch
add
movs
sub
pop
mov
add
lods
adc
leave
xchg
mov
mov
inc
aam
imul
pop
mov
mov
rcr
shr
cwde
xlat
outs
push
pop
pushf
in
add
xlat
add
lahf
add
lock
mov
jmp
rcr
lods
mov
fdivr
and
push
ret
mov
pop
(bad)
pop
adc
clc
mov
lea
je
xchg
ret
dec
pop
fsub
pop
scas
inc
add
les
mov
fisttp
icebp
out
dec
out
mov
dec
sti
jmp
push
xchg
inc
sahf
ror
pop
sub
mov
mov
rol
aam
or
rcr
fadd
and
sbb
stos
dec
adc
lods
lods
xor
imul
sbb
ins
xchg
pop
jno
mov
(bad)
mov
rol
mov
ffreep
mov
jl
mov
push
repnz
sub
shl
inc
xor
jp
lds
rol
dec
sti
pushf
sahf
push
and
push
xor
mov
sbb
inc
fwait
sbb
push
js
aad
cmp
sub
aad
das
xchg
sahf
clc
xchg
popf
mov
cmp
cld
xor
mov
sbb
pop
je
mov
les
hlt
mov
mov
iret
jmp
fwait
mov
jno
ins
fmul
dec
lods
pop
pop
cmp
mov
test
scas
aaa
jae
call
leave
sbb
jge
jns
imul
hlt
cmp
stos
test
xchg
sub
or
sub
push
or
or
movups
or
out
pop
fidiv
outs
fistp
mov
add
inc
cmp
mov
lds
rol
pop
loope
push
inc
ds
jno
aaa
xchg
push
xchg
and
xor
sbb
imul
inc
mov
and
sub
sbb
jbe
out
ds
retf
fcmovnu
shr
xor
or
fidiv
mov
pop
fdivr
or
gs
and
dec
push
outs
(bad)
mov
popa
pop
mov
shl
aad
shr
hlt
or
xchg
fld
stc
or
cmp
mov
xchg
je
jl
icebp
mov
inc
das
mov
popf
cmp
cdq
fdiv
sub
push
lea
push
dec
pop
pop
icebp
loop
iret
jmp
js
xor
adc
jge
dec
cmps
mov
dec
xrelease
fdivr
data16
sbb
sbb
aam
mov
xchg
pushf
pop
pop
rcr
mov
icebp
jle
mov
iret
leave
fucomi
leave
and
ins
cdq
test
jb
popf
ds
js
xchg
std
xor
mov
xchg
mov
jp
push
jbe
mov
test
mov
or
inc
xchg
loop
push
(bad)
push
jge
jg
adc
adc
cmc
push
jge
(bad)
fwait
push
dec
ds
test
scas
push
call
cmps
inc
mov
sub
movs
xchg
and
dec
mov
hlt
sub
jmp
adc
pop
hlt
test
lea
loope
gs
xor
popa
add
push
mov
push
movs
xchg
outs
pop
movs
mov
xor
xchg
gs
inc
out
std
cmc
and
add
xchg
shl
leave
jecxz
dec
xor
push
mov
or
mov
ja
adc
and
inc
add
jne
js
das
and
enter
imul
test
pushf
xchg
std
cmp
(bad)
xchg
ja
mov
js
xchg
ja
dec
push
mov
js
mov
sar
scas
ret
shr
xchg
cmps
jae
pop
sti
loop
add
movs
push
in
mov
movs
inc
or
fwait
test
outs
idiv
xchg
aam
sbb
adc
(bad)
ror
aad
stos
inc
pop
mov
das
fwait
or
js
pop
lods
enter
(bad)
or
jecxz
outs
pop
mul
out
fs
ret
xor
mov
xor
scas
dec
xchg
(bad)
imul
xor
in
test
push
jno
rol
sub
cld
lods
or
sub
nop
fisttp
pop
pusha
pop
addr16
pop
jae
scas
pusha
mov
daa
(bad)
mov
sar
inc
jnp
dec
fwait
mov
cmps
inc
repz
pop
(bad)
out
in
ins
sbb
fld
cmp
jmp
fdivr
push
fdivr
cmp
aad
test
div
mov
push
or
jne
cmp
test
inc
jnp
sbb
repz
push
rol
mov
(bad)
lods
test
push
imul
dec
clc
in
fidivr
adc
sub
push
adc
mov
jge
and
fldenv
dec
xadd
adc
cmp
dec
and
mov
pop
bound
int3
cli
sbb
aas
or
inc
xchg
pop
mov
or
inc
lods
xchg
das
push
addr16
into
lahf
call
mov
sub
xchg
jl
xchg
test
push
jl
cmc
rcl
loopne
in
inc
lods
and
adc
jb
mov
jge
mov
imul
cmp
gs
mov
dec
into
out
cmp
leave
push
fnop
stos
xchg
dec
fnstenv
lods
loop
es
in
test
js
mov
aas
inc
sub
push
fwait
xor
rcl
mov
mov
xchg
mov
repnz
stos
xchg
push
cmp
jo
sbb
or
cmps
lods
hlt
call
sbb
mov
out
jns
test
in
mov
mov
icebp
adc
sub
jmp
hlt
lea
(bad)
sub
loopne
or
push
push
xchg
jne
jg
lds
dec
push
repz
hlt
in
cs
cmp
push
loope
mov
daa
pop
int
push
cmp
lea
and
lea
out
jge
loop
cmc
(bad)
and
imul
jo
mov
lods
push
add
int
inc
inc
aad
scas
add
ja
fucom
leave
xor
pop
mov
xchg
jbe
sub
xor
lds
jmp
sar
fs
xor
sbb
mov
icebp
cmp
ss
iret
popa
je
add
add
cmps
cmps
push
in
adc
call
mov
idiv
je
leave
dec
popf
mov
mov
into
ret
outs
enter
retf
push
mov
mov
cmp
sbb
jge
or
add
mov
outs
cwde
xchg
mul
push
ffree
stc
cmps
ds
mov
mov
mov
jnp
mov
xor
jl
nop
scas
stos
gs
stc
dec
loopne
xor
mov
add
pop
scas
jmp
sub
add
cdq
inc
dec
mov
jge
pop
sbb
out
into
div
xchg
scas
test
dec
dec
test
sti
cmp
scas
je
retf
(bad)
in
scas
fiadd
aam
push
mov
mov
sbb
hlt
scas
or
aad
adc
popa
inc
jns
push
fcom
cmc
mov
das
push
xchg
xor
dec
ret
jae
push
and
ss
das
cmps
jle
mov
fimul
sbb
cli
dec
mov
stc
mov
cmp
pop
xlat
push
data16
jne
loope
push
ficomp
sbb
mov
mov
add
shl
out
mov
in
mov
inc
cmp
imul
sub
std
jp
arpl
loop
pop
mov
pop
mov
push
sti
adc
test
xchg
xchg
mov
jne
or
mov
arpl
ret
(bad)
sbb
sub
cdq
sahf
jbe
and
xchg
je
fimul
mov
pop
lahf
adc
mov
xchg
pop
aad
sub
sub
add
sub
not
sbb
mov
les
add
imul
adc
repz
mov
out
lds
add
(bad)
pop
inc
daa
and
cmp
fldenv
inc
repnz
inc
aam
or
addr16
mov
ins
pushf
les
js
stc
ds
add
bound
ret
or
mov
fcmovbe
dec
out
scas
pop
call
xor
fs
fmul
sbb
mov
cmps
xchg
mov
cwde
loopne
test
je
adc
stc
in
je
or
test
int
adc
add
mov
rol
out
mov
mov
adc
dec
pop
mov
in
xlat
cmp
cmp
fcmove
sub
jmp
(bad)
clc
ret
test
inc
sar
sub
push
aas
movs
adc
or
inc
neg
mov
cmp
jl
cmc
ret
scas
shr
cmp
xchg
inc
mov
test
(bad)
or
nop
sbb
clc
cmc
outs
mov
gs
arpl
das
jge
dec
pop
pushf
aam
mov
loopne
xor
cmp
int3
cmp
add
ret
imul
shl
cmc
xlat
mov
movs
jne
std
mov
sbb
imul
sbb
push
mov
sub
loope
mov
je
and
ss
ret
(bad)
fwait
xor
cmp
ror
or
mov
mov
push
cmps
pop
(bad)
fisub
adc
dec
repz
adc
pop
cmp
and
je
mov
or
mov
xchg
fcomip
popa
push
push
adc
std
es
jmp
fisttp
sbb
jl
pop
(bad)
out
xchg
or
push
xor
jo
daa
xor
cmps
sub
mov
(bad)
adc
ja
dec
push
loope
(bad)
jb
pop
add
shl
mov
sbb
into
push
lods
jb
dec
push
and
gs
int3
cs
cld
or
mov
add
push
dec
ds
cmp
jecxz
pushf
sbb
call
mov
stc
push
xor
repnz
inc
mov
pop
jb
lds
sti
test
adc
add
push
dec
iret
stc
stc
ins
mov
lods
or
rcr
cmp
pop
mov
fs
shl
cld
push
sub
dec
aad
bound
bswap
dec
gs
mov
cmp
push
sub
out
fld
test
pop
(bad)
int3
ret
mov
data16
pop
test
or
add
repnz
add
dec
mov
cld
fwait
push
sbb
ret
scas
sbb
mov
xor
pop
pop
jecxz
int3
xchg
push
cmp
lahf
mov
ss
xor
mov
jmp
push
icebp
mov
sbb
js
mov
ror
adc
icebp
out
clc
shr
and
stos
repnz
dec
(bad)
ss
mov
arpl
out
test
push
data16
icebp
test
clc
int
out
pop
mov
jnp
fs
cmp
clc
push
shl
pop
pop
rol
clc
out
fimul
leave
cmp
push
pop
cwde
sahf
cmp
int3
push
add
mov
push
addr16
sub
mov
repz
mov
mov
jl
std
pop
pop
not
in
sbb
scas
adc
in
pop
dec
cwde
test
inc
js
aam
mov
jbe
pop
pop
jnp
inc
push
scas
movs
iret
cmp
push
outs
retf
(bad)
xor
or
sub
mov
loop
add
xchg
mov
daa
repnz
xchg
sub
jg
push
inc
jl
outs
mov
jecxz
mov
add
imul
loop
(bad)
push
pop
test
icebp
stc
jle
xchg
cmp
data16
or
sbb
jno
push
sub
add
mov
mov
out
stos
test
push
pop
and
pop
pop
in
test
in
mov
jmp
mov
arpl
xor
mov
adc
sti
ins
mov
dec
or
cmps
cs
xchg
inc
and
dec
add
and
dec
sbb
cmc
loope
lea
lock
cmp
jecxz
fldcw
scas
aad
and
cmp
data16
cli
aas
and
xor
xchg
stos
sbb
xchg
outs
pushw
mov
adc
rol
ins
shl
adc
inc
jae
and
xlat
sti
pop
or
test
cli
inc
sub
jp
xlat
retf
hlt
push
xor
and
and
ret
fistp
lods
xadd
xchg
ds
arpl
and
and
dec
sub
fsubr
cdq
mov
dec
push
push
cmps
mov
jnp
les
aas
inc
fst
or
call
xchg
stos
dec
cmp
mov
popa
pop
ret
(bad)
cli
nop
rcl
jo
mov
clc
push
sub
popa
pop
bound
lock
fld
pop
sbb
test
pop
dec
in
and
xchg
outs
mov
pop
cmp
adc
cmp
add
cld
jmp
test
mov
scas
pop
sbb
mov
xchg
dec
cmp
fidivr
pop
ins
clc
lock
or
jmp
jae
int
push
out
lock
adc
sub
inc
dec
rol
popf
sbb
fidiv
xchg
cld
leave
jmp
or
mov
out
push
push
adc
jg
gs
push
xor
jne
sbb
mov
and
jle
in
outs
loopne
mov
test
push
imul
std
jp
in
jbe
push
in
pop
push
push
aad
xor
mov
and
fdiv
pop
out
and
in
sub
fsubr
mov
xchg
or
inc
test
or
sbb
aad
(bad)
in
fild
out
jle
int3
mov
mov
cmp
lods
or
mov
mov
xor
call
dec
arpl
jbe
pushf
into
and
(bad)
ss
dec
bound
pop
in
mov
imul
idiv
nop
xor
jnp
mov
shl
(bad)
xor
dec
jle
inc
imul
retf
sub
jle
sti
lock
mov
mov
mov
inc
and
aam
mov
retf
inc
push
sub
ins
pop
mov
jg
imul
popa
popa
cmps
dec
mov
pop
or
jb
(bad)
movzx
outs
push
dec
xchg
(bad)
xor
sub
sti
mov
push
dec
inc
xchg
movs
retf
dec
sahf
mov
jecxz
jae
adc
mov
jmp
stos
add
in
mov
push
sub
nop
adc
push
ins
sub
and
rcr
mov
dec
movs
jg
adc
aad
ins
jb
test
mov
and
sbb
pop
ds
jl
or
sti
push
push
lods
pop
mov
sub
repz
push
into
xor
outs
cmp
adc
cwde
mov
fst
int3
je
int
loopne
push
ja
sub
popa
daa
mov
pushf
jmp
pop
push
movs
icebp
jmp
sahf
ret
jmp
js
inc
test
inc
ja
scas
sub
iret
sbb
hlt
fdiv
iret
pop
pusha
fst
jecxz
daa
rcr
ret
lods
(bad)
clc
shl
pop
xor
cs
mov
mov
sahf
dec
jmp
mov
mov
out
test
cmps
adc
jg
dec
inc
mov
mov
imul
add
test
mov
push
or
(bad)
pop
push
out
xor
jge
push
mov
fidivr
cs
push
cli
jnp
out
neg
stos
inc
test
sub
push
je
rcl
cmps
aam
movs
cli
and
jns
adc
sti
(bad)
movs
and
xor
in
mov
fwait
dec
ja
mov
out
nop
aad
dec
pop
in
mov
mov
adc
nop
ret
scas
cmp
mov
cmp
hlt
dec
call
movs
sbb
xchg
inc
sti
cld
mov
lds
sti
cmp
or
stos
jo
icebp
sahf
gs
mov
inc
call
xor
push
mov
push
outs
sub
outs
cmp
cmp
push
std
cmp
nop
iret
in
enter
retf
clc
imul
retf
or
(bad)
jns
leave
fnstsw
clc
adc
mov
mov
test
jne
test
and
and
(bad)
retf
add
iret
inc
out
push
inc
xchg
jbe
loope
or
fist
in
add
mov
mov
pop
xchg
enter
sub
dec
pop
pop
pop
mov
add
mov
xchg
das
dec
(bad)
push
bound
push
push
sbb
sbb
add
push
push
neg
pusha
mov
vunpckhpd
cmp
sbb
(bad)
stos
je
inc
push
ret
sbb
arpl
cmp
jae
inc
fst
test
mov
sub
les
pop
mov
into
sbb
cmp
aad
cmps
popa
xor
shl
mov
or
inc
adc
sub
mov
xchg
cmp
shl
cmp
xor
mov
dec
into
inc
fcmovb
xchg
lods
mov
cmp
imul
pop
jmp
xchg
add
jnp
mov
push
cmp
or
call
xor
call
push
inc
sbb
jle
add
xor
jo
loope
js
inc
test
icebp
add
jecxz
xchg
pop
pop
xor
push
adc
stc
idiv
jns
out
sub
or
mov
cld
lods
inc
js
sar
inc
jmp
cdq
and
nop
cmp
popa
push
ins
and
fdivp
aas
mov
sub
sbb
mov
popf
mov
fnstenv
popf
aam
adc
retf
jg
fstp
sub
push
mov
call
xor
and
loopne
ror
cdq
fistp
out
es
dec
inc
hlt
mov
aaa
loop
stos
jmp
and
dec
sbb
push
cmp
jb
shr
adc
(bad)
mov
push
lods
cmp
mov
dec
aam
sti
push
pop
cwde
inc
outs
adc
and
mov
cmp
xor
cmps
sbb
cwde
sub
ins
mov
fst
adc
jnp
pop
xchg
mov
loope
mov
popa
dec
(bad)
shl
pusha
std
ret
mov
leave
inc
sbb
mov
mov
ficomp
jp
int
sub
add
xchg
test
dec
push
jecxz
dec
pop
pop
jge
nop
mov
idiv
sub
jecxz
inc
(bad)
pusha
scas
jbe
retf
fwait
sbb
cmps
loope
fstp
xor
pop
fwait
jb
jp
cmp
sub
rol
mulps
or
dec
or
adc
call
daa
pop
in
add
sbb
xchg
inc
push
jecxz
cmps
fdivrp
mov
mov
jnp
clc
call
mov
pop
ror
fdiv
mov
int3
enter
push
stos
aam
mov
(bad)
adc
adc
add
imul
cmp
mov
fidivr
aas
sub
out
enter
push
call
push
fcmovne
pop
lods
pop
dec
mov
rcr
inc
stos
add
jle
pop
repnz
sbb
mov
stos
mov
(bad)
in
pop
mov
pop
jecxz
jle
data16
add
outs
inc
in
sub
mul
cmc
xor
mov
ja
daa
dec
int3
or
enter
sbb
sahf
mov
pop
int3
lea
dec
adc
push
push
(bad)
cmc
inc
jge
add
add
std
in
mov
mov
mov
xchg
push
xor
popf
mov
adc
scas
loope
lahf
push
into
push
cmp
int3
rcr
cmp
pushf
popa
mov
ins
inc
mov
add
or
(bad)
std
enter
