jmp
mov
ret
lea
jmp
mov
ret
push
mov
add
mov
mov
mov
push
call
test
jne
xchg
mov
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
push
call
mov
and
mov
mov
mov
mov
mov
mov
push
mov
push
call
test
jne
mov
cmp
jl
mov
jmp
add
mov
mov
mov
cmp
jl
add
add
lea
add
mov
mov
add
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
test
je
mov
mov
sub
cmp
jge
xchg
mov
mov
mov
jmp
mov
lea
sub
sub
cmp
jle
mov
mov
sub
mov
mov
mov
push
call
test
jne
and
mov
cmp
jg
mov
mov
mov
mov
mov
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
add
mov
xchg
cmp
jg
mov
jmp
mov
mov
mov
mov
mov
test
je
add
sub
sub
jmp
mov
mov
mov
sub
cmp
jle
mov
mov
lea
and
mov
mov
xchg
mov
mov
mov
mov
mov
mov
push
mov
push
call
test
jne
cmp
jle
mov
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
mov
mov
dec
lea
mov
inc
cmp
jne
mov
pop
ret
add
jbe
jne
imul
jno
ins
aaa
push
imul
xor
jb
je
jbe
je
xor
jbe
ins
add
jo
imul
add
push
add
add
ss
imul
xor
aaa
data16
cmp
add
ins
sub
js
imul
and
jbe
add
jne
outs
add
add
add
jns
xor
imul
add
add
add
and
ja
ja
jp
arpl
xor
add
jno
imul
xor
add
add
data16
jbe
xor
add
ss
jb
addr16
aaa
outs
jo
jbe
jns
cmp
add
jns
ja
js
xor
fs
data16
add
in
add
mov
mov
sub
mov
xchg
push
push
call
mov
mov
mov
mov
mov
push
push
mov
call
mov
pop
ret
lea
adc
push
mov
daa
movs
add
inc
sub
mov
mov
sub
mov
xchg
call
mov
dec
xchg
mov
jmp
push
mov
mov
add
stc
outs
add
mov
and
ret
lea
push
mov
add
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
lea
and
mov
and
xchg
mov
mov
dec
xchg
mov
push
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
add
mov
mov
push
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
pop
ret
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
dec
xchg
mov
push
call
inc
cmp
jne
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
call
mov
call
mov
mov
sub
mov
xchg
mov
pop
ret
mov
jmp
mov
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
dec
mov
mov
inc
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
mov
mov
pop
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
mov
mov
and
mov
jmp
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
xor
mov
mov
mov
xor
mov
mov
cmp
jne
mov
dec
mov
mov
inc
inc
xor
mov
mov
cmp
jne
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
mov
mov
mov
sub
mov
xchg
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
and
lea
mov
test
jbe
mov
mov
mov
add
mov
dec
shl
add
mov
mov
mov
mov
push
call
mov
mov
add
mov
call
cmp
jne
mov
dec
xchg
mov
mov
add
mov
dec
add
add
mov
mov
movzx
mov
jmp
inc
dec
jne
mov
and
lea
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
push
call
add
mov
add
add
mov
mov
mov
mov
lea
and
mov
and
xchg
mov
mov
add
add
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
add
mov
mov
add
mov
cmp
jg
lea
and
call
jmp
push
call
mov
mov
mov
cmp
jne
mov
mov
add
mov
mov
add
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
sub
mov
xchg
mov
add
add
mov
mov
mov
mov
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
mov
call
mov
mov
add
mov
mov
add
add
mov
mov
mov
mov
xor
mov
mov
cmp
jbe
mov
mov
add
mov
mov
mov
mov
call
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
push
call
test
jne
mov
mov
mov
mov
mov
inc
test
je
mov
lea
mov
mov
add
lea
sub
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
dec
mov
mov
inc
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
sub
mov
xchg
call
mov
mov
mov
push
call
test
jne
sub
mov
xchg
mov
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
call
mov
mov
mov
push
call
test
jne
mov
cmp
jl
mov
mov
mov
and
mov
xchg
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
call
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
cmp
jl
mov
mov
mov
mov
mov
mov
xchg
sub
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
push
push
call
mov
add
mov
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
xchg
xchg
mov
cmp
jle
mov
mov
mov
mov
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
inc
cmp
jne
mov
dec
xchg
mov
call
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
lea
mov
add
add
mov
cmp
jne
mov
jmp
mov
mov
mov
cmp
jle
mov
mov
jmp
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
test
je
mov
sub
xchg
mov
call
mov
mov
mov
mov
mov
mov
push
call
test
jne
mov
jmp
and
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
je
add
mov
and
add
call
and
mov
mov
add
mov
mov
mov
mov
push
mov
push
call
test
jne
sub
cmp
jle
mov
mov
xchg
mov
inc
mov
mov
dec
mov
mov
inc
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
add
mov
mov
cmp
jge
lea
sub
lea
add
mov
add
sub
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
and
test
jne
mov
and
mov
mov
xchg
mov
mov
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
push
push
call
mov
mov
xchg
mov
mov
mov
mov
push
mov
push
call
test
jne
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
push
mov
push
call
test
je
dec
mov
mov
sub
mov
call
inc
cmp
jne
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
mov
xchg
and
add
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
cmp
jle
mov
mov
sub
add
mov
add
inc
mov
pop
ret
add
push
and
cmp
jns
pop
jae
and
sub
cmp
sub
add
add
aaa
ja
pop
jb
sub
add
je
imul
outs
ja
add
add
jne
ins
add
xor
outs
add
jae
jae
add
add
imul
xor
jo
cmp
js
xor
add
je
imul
add
add
add
jp
jno
arpl
imul
add
jbe
jne
add
add
jbe
cmp
xor
jae
add
popa
add
add
add
jo
jae
push
ins
add
xor
sub
ja
arpl
sub
pop
add
jbe
imul
outs
add
je
ja
sub
ja
add
add
add
add
xor
xor
sub
sub
add
add
jno
je
push
add
push
jb
pop
add
outs
add
jb
xor
add
arpl
add
jb
popa
add
add
cmp
add
and
bound
and
xor
add
data16
add
xor
js
jbe
add
add
imul
popa
xor
cmp
jb
xor
add
in
add
mov
lea
and
mov
and
xchg
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jbe
mov
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
je
mov
mov
mov
mov
mov
mov
push
call
test
jne
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
mov
push
call
test
je
mov
mov
jmp
mov
dec
xchg
mov
mov
dec
mov
mov
inc
mov
push
call
test
je
mov
mov
mov
jmp
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
jmp
push
mov
mov
in
mov
add
add
retf
add
rol
xchg
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
pop
ret
lea
mov
mov
and
mov
add
mov
add
mov
add
lea
and
mov
and
xchg
mov
call
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
mov
mov
sub
mov
xchg
call
inc
mov
mov
lea
push
mov
push
mov
push
lea
push
call
cmp
jne
lea
mov
mov
add
mov
ret
push
mov
add
mov
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
and
inc
inc
cmp
jne
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
and
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
inc
mov
mov
inc
cmp
jne
mov
cmp
jg
xchg
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
sub
mov
mov
mov
mov
cmp
jne
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
dec
mov
mov
inc
inc
cmp
jne
mov
dec
xchg
mov
call
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
je
sub
xchg
and
call
mov
dec
xchg
mov
mov
dec
xchg
mov
push
mov
call
mov
lea
sub
mov
mov
mov
mov
mov
push
mov
push
call
test
jne
add
mov
xchg
mov
mov
mov
mov
mov
push
call
mov
xchg
mov
mov
mov
mov
push
call
test
jne
mov
inc
mov
xchg
lea
add
mov
mov
mov
mov
mov
push
mov
push
call
test
jne
and
mov
xchg
mov
cmp
jne
mov
inc
and
sub
inc
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
xchg
mov
mov
mov
and
inc
cmp
jne
mov
mov
mov
push
call
test
jne
xchg
and
lea
and
mov
mov
mov
mov
mov
mov
mov
pop
ret
add
add
jb
imul
js
xor
imul
add
and
xor
sub
outs
add
imul
add
add
jae
ja
xor
xor
add
add
add
js
jb
jno
add
add
add
add
imul
add
add
add
bound
jae
jo
and
jne
je
and
je
and
imul
xor
data16
add
add
ss
cmp
ja
ins
imul
add
imul
arpl
push
push
ss
jno
outs
add
add
jns
data16
bound
add
add
and
aaa
and
xor
xor
add
sub
popa
bound
add
pop
mov
jae
inc
(bad)
pop
call
adc
sub
xchg
test
add
add
xchg
lahf
mov
out
dec
add
push
jl
inc
mov
or
pop
add
lahf
(bad)
mov
add
add
cmp
in
pop
pop
add
jle
add
test
cmp
rol
add
ins
mov
jmp
hlt
add
add
add
add
repz
add
mov
mov
add
push
mov
in
or
or
jmp
hlt
cld
add
inc
pop
out
nop
pusha
scas
mov
retf
push
push
add
add
lods
xchg
sub
sbb
adc
push
xor
ss
add
jg
mov
add
sbb
add
fcomp
and
mov
dec
add
add
lods
dec
add
jl
push
stc
add
add
push
pop
retf
add
jbe
mov
add
loope
inc
enter
lahf
sbb
add
inc
and
rol
add
add
add
jnp
imul
pop
test
mov
or
pop
dec
jecxz
xchg
add
add
int
mov
add
push
fstp
sahf
or
add
aas
push
aad
pop
(bad)
pop
lds
push
inc
inc
xlat
xchg
mov
pop
mov
mov
cmc
mov
retf
jecxz
add
push
cmp
outs
ffreep
ret
add
add
imul
jge
and
fst
into
bndstx
fs
and
shl
test
nop
pop
imul
add
add
jp
add
add
jo
xchg
dec
stos
push
stos
add
add
add
inc
pusha
add
mov
mov
add
iret
movs
mov
adc
mov
sub
pop
icebp
add
dec
cmps
fist
pop
inc
add
add
mov
add
xor
push
inc
js
out
mov
add
push
popa
dec
mov
add
outs
add
pop
jg
mov
sbb
mov
ror
push
in
push
add
call
add
mov
add
bound
mov
xchg
push
loop
repz
cmc
add
(bad)
loop
add
add
add
add
in
mov
add
cmp
mov
add
(bad)
adc
rol
add
sub
sahf
add
add
aad
mov
lldt
stos
mov
add
jno
sar
or
add
mov
jmp
and
add
imul
push
test
fld
sub
mov
(bad)
inc
add
push
add
mov
addr16
xlat
fcomp
xchg
mov
add
call
call
add
jl
add
loopne
mov
in
add
add
je
inc
cmp
jmp
fmulp
add
fld
push
mov
add
rol
adc
add
arpl
add
push
xchg
aas
aaa
cmp
nop
add
rol
loope
sub
add
adc
dec
or
add
aam
or
aaa
test
out
add
sbb
inc
dec
mov
not
dec
stos
dec
add
add
sbb
add
mov
mov
add
add
xchg
ret
inc
add
ins
imul
add
xor
xchg
xor
xchg
cld
lds
imul
dec
jb
fiadd
dec
add
or
add
xchg
dec
cmp
pop
stos
xor
fs
add
jmp
xor
add
or
add
add
xor
scas
fwait
and
into
add
add
stos
aas
add
add
cmps
fninit
add
add
into
shl
add
sbb
repnz
and
inc
pop
dec
inc
mov
dec
inc
xor
jmp
fadd
jmp
fwait
push
inc
add
or
jl
sub
xor
sbb
movs
fs
or
jg
out
or
sbb
jl
add
sbb
jbe
and
ins
dec
cdq
adc
add
ror
or
hlt
pop
dec
in
add
pusha
add
fnsave
jnp
fwait
scas
mov
push
xor
fs
cmp
movs
js
es
loop
pop
icebp
mov
leave
sti
xor
add
add
imul
popf
imul
int
rol
add
imul
add
xor
add
mov
inc
or
ds
add
lahf
sub
add
add
add
sbb
add
add
ficomp
movs
ins
int
rcl
or
add
add
dec
cli
cdq
shl
ret
and
add
add
add
mov
lock
add
inc
mov
jecxz
fcmovu
rcr
or
push
retf
in
add
add
out
sahf
(bad)
aas
lods
retf
add
push
jae
je
sub
add
and
cmp
push
iret
shl
push
add
aad
das
or
cwde
or
(bad)
lods
add
or
xor
cdq
add
std
sbb
out
push
add
xlat
add
or
add
pop
jecxz
lods
jb
(bad)
daa
ins
adc
add
and
cli
jbe
add
add
dec
pushf
cmp
add
add
add
add
mov
jge
in
add
aas
add
add
jl
add
movs
adc
add
adc
nop
dec
mov
add
aad
add
push
add
add
nop
cld
pop
push
lahf
jmp
sbb
dec
(bad)
xchg
dec
sbb
add
add
int3
in
fidivr
sbb
mov
add
call
rcl
inc
dec
mov
sbb
add
or
fstp
sub
fist
pop
loopne
fsub
sbb
mov
aad
lods
sbb
inc
inc
add
add
sub
frstor
add
call
pop
push
push
jae
inc
ins
(bad)
jmp
lds
push
cmp
push
add
add
cld
jb
sub
inc
fisttp
mov
hlt
je
mov
sub
add
cmp
out
xchg
and
add
add
lods
sub
add
add
mov
dec
in
aam
dec
pop
add
or
xchg
stos
cmp
add
and
cmc
cdq
sti
cdq
jb
dec
scas
add
test
sti
sub
imul
mov
(bad)
pop
popf
dec
out
dec
int
add
cmp
int3
add
add
sbb
sldt
cmp
push
pop
adc
pop
cmp
ror
push
add
das
add
add
inc
push
push
add
add
pop
es
daa
xor
mov
out
test
push
adc
xchg
push
cmp
push
add
hlt
add
inc
mov
jle
jae
arpl
icebp
in
cmp
clc
dec
mov
mov
mov
data16
jmp
lods
cmp
mov
rcl
push
jbe
pusha
pop
js
add
and
pusha
aaa
repz
push
dec
outs
and
daa
sbb
add
movs
add
cmp
pop
or
push
mov
aad
add
and
retf
xor
add
lods
shr
or
clc
xor
jmp
and
hlt
inc
into
jge
add
loopne
add
push
dec
inc
add
xchg
arpl
js
add
add
movntps
mov
pop
dec
cmps
or
rol
xchg
and
adc
push
push
sub
push
add
xchg
or
aad
xor
add
in
ret
add
pop
lahf
mov
adc
aad
xchg
add
add
cmp
dec
add
mov
dec
add
add
not
sbb
in
jns
sti
add
mov
add
aad
add
add
add
add
mov
shr
xor
add
lds
pop
add
retf
aaa
xchg
sub
jnp
add
gs
add
add
add
scas
add
lahf
cmps
mov
retf
jnp
add
lea
test
ja
lock
adc
dec
int
jmp
cmp
add
mov
loope
mov
(bad)
out
(bad)
xchg
popa
sbb
cwde
jmp
ret
add
mov
loop
xor
adc
add
inc
adc
cmp
dec
push
cdq
mov
(bad)
push
add
add
add
lods
xchg
outs
and
leave
add
mov
add
add
das
mov
inc
mov
int3
dec
xor
and
add
stc
lea
into
push
push
mov
lods
sbb
(bad)
pop
add
add
popf
add
ret
inc
jno
add
add
sbb
dec
add
and
push
xchg
add
push
inc
pop
xchg
push
jo
std
inc
jmp
and
stc
dec
or
add
dec
add
pop
inc
aaa
ficomp
popa
outs
out
sbb
stc
scas
gs
add
add
aad
xor
add
or
pop
push
call
stc
add
sub
cmp
loope
add
mov
push
push
std
into
lea
sub
sub
or
cmp
cld
mov
mov
dec
and
pusha
add
add
mov
mov
add
cli
add
add
jae
mov
cmc
add
add
dec
mov
mov
out
call
add
add
cld
rol
outs
repnz
es
adc
dec
jl
stos
test
jle
daa
test
add
rcl
sub
pop
lods
dec
add
xor
sub
arpl
or
clc
pop
fidivr
and
or
sub
add
jae
es
jmp
movs
fwait
pop
leave
cmc
ss
inc
arpl
add
cmps
pminsw
outs
add
add
rcl
cmp
test
pop
jo
add
xor
or
lea
lea
fwait
movs
sub
inc
adc
ins
or
add
mov
add
adc
(bad)
add
mov
idiv
mov
inc
sti
repz
pop
mov
imul
retf
inc
add
inc
stc
dec
xor
jnp
jnp
add
mov
(bad)
pop
jge
out
movs
shr
pop
aam
hlt
mov
add
push
or
and
sub
or
add
add
sub
add
xor
push
sbb
ret
mov
sbb
xor
add
xchg
mov
adc
iret
add
add
clc
sahf
rcl
(bad)
imul
add
jo
add
lods
test
movs
push
pop
add
add
xchg
hlt
aas
inc
test
mov
add
or
in
ror
add
dec
sub
jae
fild
iret
add
jmp
cli
push
jl
pop
fcom
add
mov
add
add
pusha
dec
lahf
or
mov
pop
pop
mov
add
add
sub
addr16
add
sub
add
add
imul
add
add
add
pushf
xchg
out
pop
inc
popf
add
add
jno
cs
aaa
add
add
sahf
jb
repnz
add
and
adc
pop
push
pop
mov
dec
and
mov
daa
sub
(bad)
jge
or
mov
int
pop
mov
imul
add
add
jb
movs
jb
add
lahf
pop
pop
mov
add
sub
fidivr
add
add
mov
sub
add
cs
xor
mov
mov
add
rol
cmp
add
add
cmp
mov
add
add
call
repz
xor
aas
xchg
mov
add
or
add
xchg
push
pushf
add
xchg
pop
cmc
loopne
or
jl
leave
(bad)
fild
push
sbb
mov
cmps
and
cmp
add
xor
lds
add
mov
out
add
and
iret
add
add
in
ja
mov
mov
sbb
fadd
add
pop
push
in
div
mov
add
add
daa
inc
jb
pop
es
add
xchg
mov
ret
add
nop
ins
add
mov
add
mov
test
adc
add
mov
add
pop
mov
mov
xchg
add
add
adc
mov
add
mov
call
outs
xlat
xchg
dec
inc
ss
xlat
int
sbb
xchg
clc
or
inc
pop
je
add
push
fsubr
mov
add
retf
add
out
add
scas
add
call
add
add
jb
dec
xor
sub
add
bound
je
and
scas
and
add
or
add
mov
loope
outs
lahf
cmp
dec
sub
sub
pop
add
add
xchg
neg
aaa
jl
out
add
push
add
add
adc
cwde
fild
add
and
arpl
in
add
scas
jle
xchg
push
iret
mov
pop
test
in
(bad)
xchg
inc
add
add
add
inc
mov
add
add
pop
aas
lea
mov
pop
sahf
xchg
out
push
add
add
add
mov
stc
jge
add
aam
outs
add
(bad)
jno
mov
add
xchg
add
ja
out
rcl
sbb
sub
fsub
imul
add
adc
clc
add
adc
add
add
add
hlt
ret
adc
add
dec
pop
cmps
or
jle
lods
fiadd
sbb
imul
adc
jne
add
std
imul
add
add
jge
push
retf
pop
shl
add
mov
cmps
sub
jne
add
add
aas
mov
add
add
add
dec
dec
xchg
or
push
bound
jg
jbe
jnp
movs
imul
or
inc
cdq
cmc
push
imul
add
add
dec
cdq
dec
cmp
add
mov
adc
xchg
mov
adc
push
fadd
repz
outs
ret
cmp
add
pop
add
or
add
pop
data16
jle
add
and
or
enter
add
mov
add
jp
add
mov
mov
jno
dec
xchg
and
mov
add
int3
das
je
add
or
jbe
ds
add
add
pop
push
adc
add
sub
add
adc
mov
jne
add
inc
cwde
mov
jge
ss
add
add
sub
add
call
test
add
icebp
xlat
xchg
cmp
xlat
add
or
out
gs
add
add
loope
cmp
mov
aas
sub
sbb
gs
dec
add
sbb
or
dec
push
inc
out
bound
mov
nop
xchg
adc
dec
dec
js
lock
push
push
sub
pop
push
stos
pop
add
add
pop
mov
stos
clc
lea
add
dec
mov
dec
add
add
xor
add
dec
add
xchg
mov
add
add
adc
fild
add
add
add
add
xchg
add
cmp
xchg
mov
add
push
add
add
add
xchg
cmp
mov
mov
imul
xchg
call
fs
dec
inc
pop
jecxz
ins
mov
imul
jnp
das
push
dec
mov
stc
mov
add
add
lods
fnsave
pop
repz
pop
sahf
sub
aas
fmul
push
aas
add
leave
inc
jns
rol
jg
aas
mov
push
lods
stos
push
adc
add
dec
pop
into
ja
pushf
add
add
add
add
push
inc
bound
scas
cli
mov
add
inc
aaa
clc
rol
jl
mov
add
(bad)
js
mov
cmps
inc
out
addr16
pushf
jg
sub
and
push
test
xor
add
pop
clc
les
pusha
mov
(bad)
std
mov
add
add
add
movs
push
xchg
cli
jo
xchg
xchg
push
mov
xlat
add
sbb
rol
lahf
add
mov
not
add
add
add
adc
bound
mov
icebp
mov
and
ficomp
pop
add
inc
js
sbb
xchg
add
(bad)
fimul
mov
(bad)
mov
out
push
dec
xchg
rcr
mov
add
fnstsw
pop
jnp
and
add
add
loop
dec
mov
add
(bad)
pop
mov
and
inc
mov
xchg
mov
sbb
leave
mov
outs
sub
paddb
aaa
add
pop
jle
dec
retf
add
add
mov
fs
push
add
push
ror
loopne
dec
add
add
mov
add
add
dec
shl
add
test
pop
add
dec
cli
mov
pop
mov
leave
fisub
xor
cmp
mov
into
add
add
cmps
pop
and
aad
lahf
cmp
push
aas
xchg
jge
test
add
pop
push
xchg
retf
scas
add
mov
add
aad
pop
cmps
ret
sbb
add
add
scas
push
imul
add
out
jmp
or
add
dec
mov
imul
inc
jne
add
jb
sahf
cmp
add
pop
add
jg
fdiv
int3
push
stc
das
add
sbb
loopne
sub
add
or
add
in
sbb
aas
loope
call
pop
stos
fld
out
loope
and
add
jb
imul
add
add
add
push
add
loopne
out
xor
add
mov
cmc
add
sbb
imul
cmp
icebp
lods
ret
jne
inc
add
add
imul
add
push
movs
mov
outs
int
inc
sub
movs
movzx
push
cmp
dec
mov
and
(bad)
out
add
sub
add
push
leave
add
add
push
mov
sub
add
add
cli
jns
test
add
daa
std
(bad)
iret
sub
sti
add
add
add
fadd
daa
mov
repz
jae
sysret
xchg
enter
and
pop
add
not
cwde
push
rol
add
lods
and
rcr
repnz
add
fwait
int3
xor
daa
call
xchg
lods
mov
add
outs
shr
pop
jae
fsub
xchg
add
jg
(bad)
jge
test
movs
xor
push
push
add
jne
add
push
dec
add
add
add
bound
cmp
add
out
push
xchg
cmp
add
mov
xchg
add
add
and
add
jb
add
fiadd
add
add
push
or
popa
test
repnz
adc
leave
mov
add
adc
int
mov
cld
jnp
add
outs
pop
push
enter
(bad)
iret
data16
sahf
paddb
add
add
imul
(bad)
arpl
add
fiadd
add
fs
or
imul
stos
mov
xchg
enter
cmp
push
dec
cmp
add
add
xchg
data16
mov
popa
cmp
sbb
adc
sbb
add
add
push
jl
cld
into
fisub
in
shr
mov
jmp
xchg
push
inc
or
dec
pushf
cli
mov
inc
add
dec
sub
xchg
xchg
mov
adc
das
add
add
out
outs
xor
movs
or
rol
add
nop
jl
add
xchg
mov
add
add
cmps
std
mov
xlat
or
xchg
sbb
loope
mov
daa
add
add
fdiv
popf
pop
mov
push
stos
or
cdq
ja
jle
add
add
or
add
and
xor
(bad)
and
add
ins
add
add
push
adc
add
icebp
xchg
push
xor
add
add
fs
mov
sub
mov
xor
sbb
loopne
mov
or
add
add
imul
fistp
mov
ins
movs
add
loop
push
xor
lods
mov
add
add
sar
pop
(bad)
sub
pop
pop
xchg
add
add
wrmsr
adc
xor
add
ds
int
jmp
jmp
add
sar
sub
mov
sbb
push
out
call
add
add
add
jns
xor
add
call
jno
xchg
mov
push
ret
test
add
les
ja
xchg
add
dec
jno
xchg
ret
add
dec
add
add
add
add
mov
imul
push
xchg
ja
test
or
das
add
add
in
add
cdq
outs
add
cmps
jle
add
jl
aaa
mov
daa
popa
out
inc
and
(bad)
rol
add
xchg
imul
or
popa
arpl
stc
add
aad
arpl
add
add
xchg
add
add
xchg
pop
test
mov
pop
shl
add
add
loope
push
push
cmp
adc
add
ins
or
add
sbb
add
(bad)
push
mov
cli
mov
stc
add
add
lahf
jns
or
add
aam
xchg
pop
test
adc
in
add
add
mov
add
add
add
xor
inc
mov
dec
and
add
add
pop
add
add
jmp
lods
popf
sbb
jle
add
push
pop
hlt
fcomp
test
add
add
sbb
cmp
lds
add
sbb
add
and
add
gs
shr
add
in
xchg
add
pop
add
add
add
in
mov
xor
add
bound
cmp
fst
call
inc
or
inc
xlat
add
add
add
(bad)
cmp
add
add
sbb
ss
add
fcos
add
cdq
das
add
dec
out
hlt
repnz
cmc
imul
loopne
fld
add
push
push
push
lods
mov
xchg
add
add
add
cmovp
mov
addr16
add
dec
add
add
add
or
add
push
sub
and
add
add
ret
mov
add
add
lods
enter
adc
add
adc
add
ja
das
xor
add
imul
jmp
add
add
add
jnp
xor
arpl
lock
add
add
add
xchg
mov
jno
add
or
ret
add
retf
xchg
pop
add
add
idiv
add
sub
pop
add
add
push
sbb
push
popf
test
add
xor
add
add
repz
test
or
add
add
rol
add
jecxz
sbb
enter
test
fstp
pop
add
(bad)
ins
push
add
add
add
adc
jle
outs
add
add
outs
mov
pop
mov
add
add
les
add
aam
add
add
das
in
jp
sub
sbb
add
les
add
add
sar
mov
sti
cmp
add
add
add
scas
push
ret
add
cmps
adc
jnp
pop
add
mov
add
rol
add
jge
scas
pop
mov
lds
or
pop
add
mov
sub
fld
push
dec
mov
add
add
push
fstp
adc
adc
pusha
lds
push
stos
nop
dec
sub
add
pushf
add
add
pop
push
in
add
stc
add
dec
bound
add
add
adc
xlat
add
fidiv
rcl
and
add
add
add
test
aad
out
dec
inc
jno
cmc
add
add
fisub
lahf
and
add
pop
outs
(bad)
(bad)
push
push
jge
cli
add
stos
add
dec
lods
arpl
ins
xchg
outs
cmp
mov
sar
into
mov
xor
pop
add
cmc
call
xchg
and
add
das
repnz
test
rol
jns
call
pop
mov
ins
add
adc
aaa
mov
add
outs
and
repnz
add
loop
xchg
add
add
add
add
adc
add
call
jb
add
pop
sbb
mov
sub
mov
aaa
inc
add
add
add
lods
push
fcmove
add
add
cwde
add
das
push
inc
add
mov
mov
rol
in
or
mov
call
daa
add
mov
sbb
add
xchg
ds
or
jae
xchg
outs
xlat
sub
dec
push
jb
dec
sbb
test
das
into
aaa
pop
xchg
mov
loop
and
dec
sbb
fcomp
rcr
test
add
int3
aas
and
mov
jp
dec
xor
add
add
add
xor
test
loopne
cmp
add
test
jb
mov
jmp
add
add
add
add
add
das
ud1
out
paddusb
add
call
fadd
aaa
dec
add
mov
lods
jg
and
add
mov
arpl
add
add
dec
cs
loop
movs
fsubr
add
inc
imul
push
mov
adc
mov
pop
cmp
ffreep
jl
repnz
icebp
or
stos
or
aam
adc
lea
add
mov
add
add
mov
stos
add
int3
movs
mov
cdq
xor
adc
jnp
call
push
outs
retf
iret
cmp
(bad)
pop
(bad)
mov
add
ins
xchg
loope
loopne
push
jne
and
add
mov
idiv
jecxz
pushf
add
add
add
add
or
cmp
add
dec
retf
add
add
add
xchg
pop
add
retf
aad
add
scas
or
adc
add
jg
cmp
inc
inc
push
xor
rcr
outs
or
cmp
(bad)
rcr
inc
add
add
nop
add
ins
ins
push
push
inc
sbb
outs
shl
mov
push
xor
into
and
mov
add
add
adc
lods
pop
arpl
inc
add
inc
fcomp
mov
mov
in
add
add
fs
out
xlat
pushf
sbb
push
push
mov
or
inc
clc
mov
add
add
add
arpl
push
mov
loopne
rol
jg
gs
cmp
add
add
fs
xor
mov
add
repnz
sbb
push
add
imul
fsub
mov
pop
cmp
jmp
mov
add
jecxz
jg
jno
cdq
pusha
mov
add
inc
daa
pop
pop
dec
(bad)
mov
(bad)
loopne
int3
add
add
(bad)
ret
enter
xchg
add
fcom
mov
or
add
add
cdq
pop
rol
outs
inc
into
or
cld
add
add
(bad)
jl
in
push
add
add
add
outs
daa
ins
sub
pop
jne
mov
add
mov
add
mov
dec
(bad)
push
xor
popa
add
add
add
inc
mov
xor
das
rol
add
jns
and
hlt
add
or
enter
and
add
add
add
add
and
cld
hlt
in
add
jecxz
add
adc
dec
gs
jno
add
hlt
add
(bad)
mov
ror
push
mov
aas
test
pop
add
mov
add
fimul
add
cmc
fs
cmp
mov
add
sbb
pop
je
cmps
add
popf
add
iret
inc
jg
add
inc
jg
add
test
cwde
xchg
add
arpl
add
inc
repnz
aaa
cmp
(bad)
add
add
add
das
es
aam
cdq
add
scas
jbe
shr
push
test
add
unpckhps
cwde
dec
add
cwde
add
add
add
mov
(bad)
aam
mov
add
adc
or
pop
popa
jg
mov
jb
pop
int3
dec
or
push
add
add
iret
jnp
add
sub
add
jle
mov
sbb
nop
and
cli
add
jne
sbb
lock
add
dec
icebp
jae
add
mov
add
popf
jecxz
mov
nop
gs
fndisi(8087
scas
inc
jmp
aam
mov
jmp
in
add
out
xlat
jge
add
dec
cmp
add
dec
inc
outs
mov
add
add
jmp
lds
mov
(bad)
enter
std
sub
lds
add
pushf
aaa
add
xor
xchg
lods
dec
add
add
test
fiadd
add
scas
add
add
cs
jnp
add
add
out
in
or
les
add
imul
xchg
add
add
jo
ret
cmp
adc
cwde
frstor
lea
push
add
inc
add
fld
add
aam
popa
dec
add
add
or
inc
(bad)
sub
jno
sahf
add
test
add
jno
or
add
add
add
test
(bad)
add
clc
mov
and
sar
add
and
add
add
add
fsub
add
add
fdiv
add
add
mov
(bad)
mov
sbb
mov
add
sbb
repz
fmul
push
xor
add
add
add
mov
dec
add
nop
add
add
cld
add
rol
add
lahf
je
leave
out
dec
add
add
jnp
and
and
lea
lahf
aas
fcom
les
add
inc
adc
add
add
fild
dec
fld
mov
test
add
push
rol
add
rcr
add
add
dec
xor
add
inc
pop
xchg
cmp
add
lds
mov
icebp
popf
mov
in
enter
add
mov
inc
ds
popf
sbb
push
cld
mov
jle
mov
mov
cli
mov
jne
ins
add
mov
push
jecxz
test
add
scas
and
retf
add
adc
lea
add
paddq
ds
add
add
pop
movs
mov
fxch
sar
mov
jns
call
inc
dec
xchg
out
push
mov
add
pop
adc
xchg
mov
add
add
aam
pop
add
add
add
(bad)
sub
out
xchg
fnsave
int3
out
add
add
ficom
(bad)
scas
cmps
add
jno
in
in
add
add
mov
inc
add
jae
add
test
cli
add
adc
test
pop
jns
jo
fadd
in
lods
mov
add
pop
add
push
popf
dec
dec
(bad)
ja
mov
add
and
scas
mov
push
mov
dec
add
rcr
inc
add
add
inc
ds
ins
adc
scas
imul
or
inc
add
test
add
or
sub
pushf
inc
inc
ins
and
push
pop
test
mov
push
jns
aas
lods
dec
mov
add
mov
mov
out
or
add
and
in
mov
pop
in
inc
mov
xor
inc
mov
add
add
sub
or
clc
cs
cmp
push
popa
adc
push
add
add
xor
lods
pop
add
sbb
ret
loopne
add
xchg
pusha
push
pop
add
or
inc
clc
clc
add
add
es
inc
pop
mov
mov
cmp
sub
add
cmp
fbld
add
ins
js
jns
add
mov
(bad)
data16
add
inc
aaa
add
and
add
adc
add
adc
add
fdivr
xchg
inc
test
mov
add
pop
sbb
add
inc
add
add
add
add
je
add
add
push
add
hlt
mov
jp
inc
sub
pop
(bad)
pop
(bad)
dec
movs
adc
inc
add
push
cwde
pop
dec
dec
leave
xchg
inc
mov
adc
lods
add
dec
pop
add
add
push
add
js
or
(bad)
lods
add
add
dec
sbb
fld
add
add
or
add
add
xor
jno
mov
dec
pop
push
push
xchg
add
fiadd
add
xchg
sub
add
inc
xor
repnz
jmp
jb
sbb
stc
pop
dec
mov
add
add
add
add
xchg
cli
and
std
add
cdq
xchg
jge
adc
ja
jge
add
(bad)
dec
xor
add
pop
sbb
add
ins
xor
retf
add
mov
add
add
cdq
cdq
add
add
inc
jb
add
add
add
add
cmp
dec
rcr
xchg
mov
add
pop
and
adc
push
add
add
enter
adc
add
add
sbb
add
lods
lods
xor
add
xlat
fldenv
push
push
imul
cs
enter
jl
xchg
ins
xchg
iret
loopne
cmp
add
adc
add
push
add
aad
push
push
(bad)
sbb
inc
adc
cdq
add
push
push
popf
inc
and
and
adc
add
add
add
add
push
das
fwait
mov
fld
add
stc
dec
dec
sub
jecxz
inc
add
push
or
stos
add
mov
std
call
add
jecxz
loopne
adc
add
inc
in
or
add
mov
jecxz
fbstp
add
add
rcl
mov
inc
fcomp
add
popa
aam
add
mov
add
cmp
pushf
add
into
scas
jge
add
add
xlat
add
add
add
xchg
dec
xlat
sub
dec
xchg
pop
nop
sbb
cmp
stos
int3
dec
sub
xchg
aam
add
add
add
test
jp
fisttp
add
clc
push
aad
add
clc
mov
add
popf
jo
jae
xchg
add
add
sub
lds
popf
add
sbb
and
in
add
cmp
xchg
nop
in
stos
add
mov
pop
rcr
loop
inc
sahf
ror
outs
or
add
add
ss
dec
push
cdq
loop
add
lea
fstp
add
loopne
stc
add
add
add
add
add
cs
add
push
retf
or
idiv
xchg
stos
mov
add
add
fst
xor
add
fs
and
pop
lods
add
mov
add
add
xor
fdivr
jns
inc
dec
add
add
sub
add
mov
and
push
imul
inc
mov
call
push
mov
sbb
add
sbb
aam
xchg
(bad)
outs
push
rol
lds
icebp
jle
xor
rol
call
int
add
call
push
push
add
add
mov
add
add
pop
add
add
popa
add
add
and
add
iret
add
ss
xor
jl
push
add
add
mov
adc
dec
push
add
pop
les
dec
or
add
mov
push
add
add
mov
loope
inc
add
fimul
jae
mov
sbb
in
adc
or
adc
add
sahf
inc
fwait
pushf
imul
mov
je
inc
rol
mov
inc
cmc
cmp
lea
add
clc
aad
or
add
les
mov
mov
push
ret
scas
pop
xor
cld
and
push
jno
xor
out
dec
inc
add
push
xor
add
cld
loope
je
add
leave
add
add
push
add
add
add
sub
out
add
mov
into
imul
push
adc
add
add
out
add
outs
mov
add
add
or
les
xlat
and
pop
mov
sahf
popf
add
fisubr
or
mov
add
xchg
inc
mov
adc
and
ins
or
or
nop
pop
ja
jmp
xchg
adc
jo
add
cdq
push
mov
xchg
mov
lds
xor
add
sub
test
add
add
dec
les
jle
stc
pop
leave
xor
scas
dec
sbb
test
mov
xchg
inc
add
icebp
and
jo
add
add
adc
add
or
shl
jb
add
neg
add
add
mov
ins
add
rcl
fadd
add
dec
cli
pop
add
add
add
rol
add
popa
pop
inc
push
pop
add
xchg
add
and
(bad)
sub
cmp
(bad)
aad
add
add
lea
(bad)
xlat
aam
pop
mov
add
add
sbb
and
jp
jb
mov
add
add
add
mov
add
add
sldt
add
and
sbb
int3
dec
mov
xchg
add
fld
add
fcmovne
dec
rol
add
add
es
add
add
popf
push
fisttp
add
add
jmp
mov
add
add
iret
fcomp
sub
movs
jg
or
out
jmp
mov
mov
outs
aam
cmp
add
sbb
add
push
xchg
add
xor
out
inc
sbb
cmp
shl
mov
aam
or
add
loop
(bad)
xchg
xchg
hlt
xchg
loope
and
add
mov
rol
add
jmp
xor
jmp
jns
add
add
add
(bad)
popf
leave
add
shr
add
js
pop
inc
lods
lahf
test
addr16
add
add
add
icebp
dec
mov
add
add
xchg
out
popa
add
add
add
add
jp
sahf
icebp
xor
add
add
add
lea
in
cld
pusha
pushf
gs
push
add
add
add
add
sti
push
xor
add
ja
add
mov
add
mov
sub
adc
inc
rol
xchg
jge
nop
std
sbb
rcr
xor
add
add
mov
and
dec
and
add
xchg
adc
add
cmc
add
add
add
icebp
add
sahf
sbb
add
add
jge
add
add
push
nop
fs
outs
jmp
mov
lods
cwde
cmp
out
test
add
add
(bad)
das
icebp
scas
cmp
pop
mov
lea
aas
add
test
xlat
jmp
leave
jnp
ins
add
test
jge
inc
add
add
push
add
add
mov
sbb
xor
add
push
or
in
add
add
pop
shr
xor
add
cdq
stc
(bad)
pop
lods
add
add
cmp
xor
bound
push
sbb
sub
add
mov
imul
clc
icebp
mov
cmps
push
stos
mov
add
add
cmp
not
sahf
frstor
sti
bound
push
add
add
add
in
sbb
inc
add
xchg
jne
xor
add
pop
out
add
add
and
cwde
(bad)
and
add
add
adc
push
(bad)
lds
xor
xchg
add
pop
add
add
loop
or
pop
fcomip
and
push
add
add
popa
je
mov
fistp
sub
rol
test
mov
mov
add
xor
scas
scas
or
add
or
jle
ins
sbb
xor
and
mov
add
and
ins
inc
add
add
or
push
mov
(bad)
push
jl
adc
and
add
and
or
inc
je
push
push
cmp
push
in
add
cld
pop
pop
data16
xchg
push
pop
add
add
cmc
stc
cld
add
adc
outs
add
add
or
sti
fcom
dec
enter
aad
mov
rol
xor
dec
mov
jne
push
sub
jle
add
bound
mov
in
add
int
shl
add
add
add
inc
mov
dec
cmc
loope
add
mov
hlt
push
jo
sahf
push
add
jnp
(bad)
aad
add
test
adc
cwde
xchg
lods
fsubr
popa
add
add
aas
or
add
add
add
mov
add
mov
add
mov
fmul
popf
push
inc
pop
addr16
shr
and
add
sar
(bad)
int3
push
int3
add
add
push
xchg
inc
jl
and
stos
add
add
add
dec
add
lods
cmp
stos
add
je
stc
cmc
add
cmps
rcl
jle
add
loopne
add
mov
cld
add
mov
xor
dec
add
add
(bad)
mov
pop
ds
stos
imul
mov
dec
imul
sub
std
inc
xchg
and
stos
xor
add
sbb
add
sub
inc
push
inc
pop
inc
shl
lldt
inc
sbb
xchg
(bad)
and
rcl
icebp
xchg
mov
out
fs
inc
jp
jecxz
mov
cmp
add
add
lds
add
in
push
add
add
(bad)
add
mov
movs
ret
mov
mov
ret
push
or
add
add
pop
inc
mov
add
test
add
add
jmp
sar
sbb
add
push
mov
outs
cwde
add
add
fld
enter
pusha
jmp
mov
xor
xchg
mov
ret
or
loop
retf
push
arpl
add
mov
repz
stc
add
add
pop
cmps
outs
aad
or
add
add
add
add
add
mov
add
mov
add
jno
test
inc
test
inc
add
cli
aas
fnstsw
adc
add
add
jmp
add
in
sub
add
cmc
add
shr
movs
add
sbb
add
xchg
lods
sub
add
mov
push
push
in
cmp
or
mov
add
enter
add
mov
fiadd
add
jnp
cli
xor
add
pop
add
add
add
adc
sbb
in
stc
rol
sbb
sbb
fbstp
xor
std
mov
xchg
ja
cmp
mov
leave
sar
xor
sub
jmp
add
add
add
add
xchg
push
jmp
cli
dec
int
dec
jo
in
in
in
mov
ret
add
add
ret
inc
shl
xchg
add
icebp
ror
sub
test
add
add
es
ror
cmp
adc
inc
in
add
cld
add
add
add
stc
mov
add
or
add
ja
and
push
push
cmp
add
into
imul
add
add
add
rcl
sub
mov
fstp
add
ins
push
add
sbb
xor
inc
add
add
add
add
dec
fadd
add
aad
popa
imul
xchg
add
add
and
add
or
add
cmp
and
clc
std
mov
inc
add
jecxz
xor
add
push
jl
add
aam
je
sub
js
sub
mov
add
push
loop
sbb
loopne
jg
jbe
mov
jle
add
adc
jg
and
sbb
add
add
add
mov
add
lock
add
jg
aad
cmps
add
sbb
pop
(bad)
jp
sbb
in
add
retf
cmp
mov
pop
push
(bad)
test
lea
pop
jbe
dec
lods
fsubp
mov
cld
pop
stos
out
mov
mov
add
add
outs
dec
out
add
jge
inc
or
aam
cmp
add
add
add
jge
mov
(bad)
add
adc
dec
inc
ss
enter
add
cdq
add
add
dec
add
mov
rol
xchg
add
dec
inc
or
(bad)
xor
jg
push
add
loope
xchg
shr
pop
add
push
pop
add
push
adc
add
push
test
outs
mov
xor
mov
pop
out
push
add
and
sahf
inc
ss
push
pop
push
mov
lods
cld
push
sub
add
jmp
pop
add
adc
sbb
add
data16
or
xchg
sbb
add
jmp
sbb
ret
sub
mov
ror
adc
jle
push
cmp
push
add
add
data16
push
push
xor
mov
(bad)
jo
les
add
pop
lahf
adc
add
add
imul
ror
jmp
(bad)
adc
add
ds
add
xor
adc
pop
and
jno
test
add
jl
out
add
movs
adc
cmp
in
jg
inc
add
add
add
add
add
pop
pop
cmp
in
mov
mov
jp
inc
out
jg
push
repz
jl
mov
mov
jmp
push
test
add
cdq
rol
add
leave
mov
add
dec
jmp
call
pop
or
add
(bad)
pop
mov
sti
es
ds
lock
or
add
add
add
pop
cmp
ja
add
add
rcl
mov
add
test
rol
add
mov
add
add
ret
add
and
add
push
cmp
sahf
xchg
add
add
das
and
or
add
xchg
adc
data16
add
in
mov
jp
je
add
add
add
aam
scas
add
add
jne
mov
aad
popa
add
add
add
pop
inc
sub
xchg
mov
add
into
mov
add
add
add
add
sub
add
(bad)
pop
lea
add
shl
fstp
add
movsx
add
out
iret
add
push
inc
add
add
je
add
add
ins
je
mov
add
xchg
retf
add
add
pop
and
retf
(bad)
or
add
test
sub
push
cmp
mov
cmp
add
sub
ret
push
push
pop
dec
jmp
dec
inc
sub
sbb
add
bound
or
add
imul
shl
(bad)
retf
retf
add
cmp
test
add
add
push
fmul
into
rcr
adc
mov
add
and
popf
add
add
add
pop
fxch
add
add
push
add
repz
xchg
push
add
add
in
add
xor
add
mov
push
std
pop
into
sbb
xor
add
pop
add
imul
mov
scas
sub
sub
or
jge
fistp
add
mov
imul
adc
push
add
in
icebp
cmp
add
add
add
clc
add
add
imul
pop
add
test
add
xchg
inc
add
mov
mov
mov
add
int3
cmps
dec
sub
mov
loop
out
add
add
dec
or
mov
aaa
popa
lds
add
add
xor
add
sbb
add
shr
out
add
mov
(bad)
addr16
inc
cmp
add
test
add
add
xchg
jns
push
mov
or
add
dec
add
inc
push
les
inc
sub
push
aam
cmp
jge
xor
mov
inc
mov
sub
rol
inc
mov
xor
(bad)
fcmovnbe
outs
aam
call
mov
bound
repz
add
push
push
mov
mov
add
leave
xlat
mov
add
hlt
lock
inc
lea
aas
fld
add
mov
lock
aaa
and
add
enter
iret
add
add
and
pop
add
add
add
jns
inc
add
add
mov
test
xchg
add
jmp
int3
ja
add
adc
add
pop
jle
out
mov
push
cdq
add
add
push
cli
add
add
fidivr
fld
add
push
add
add
test
add
int
jecxz
inc
popfw
fdivr
icebp
add
xchg
fwait
icebp
dec
pop
ret
cld
test
mov
pop
dec
sub
add
add
mov
sbb
xchg
or
test
add
rol
add
jg
add
and
add
push
adc
movs
add
inc
pop
add
add
add
mov
ds
ja
xchg
mov
js
mov
or
inc
popa
add
add
les
sbb
pop
push
movs
add
mov
arpl
dec
add
add
jge
mov
add
add
jo
add
cwde
mov
sub
add
repnz
pusha
push
pushf
add
add
sbb
sbb
pop
mov
dec
push
xchg
adc
add
test
daa
nop
push
aad
jge
into
add
call
jnp
stc
mov
add
scas
popf
jmp
jo
add
add
not
sub
add
popf
add
pushf
add
enter
stc
cmps
test
xor
add
or
loop
imul
out
add
pop
sub
adc
data16
in
add
add
loopne
add
jnp
add
mov
push
repnz
hlt
pop
pop
imul
add
call
mov
in
das
fadd
add
cmp
sbb
add
add
add
add
adc
add
mov
add
add
or
add
xlat
ja
cmp
xchg
add
add
add
ins
mov
and
sbb
mov
in
xchg
sub
out
mov
add
mov
lods
mov
mov
add
lock
push
dec
add
add
ret
and
popa
test
fisttp
push
sbb
fiadd
add
les
add
invd
pop
add
add
in
jmp
(bad)
call
add
cld
(bad)
mov
test
add
add
and
lea
add
add
je
add
add
add
cmp
hlt
popa
add
add
add
mov
popa
cmp
hlt
jmp
test
cli
leave
pop
add
push
sub
inc
cmc
mov
mov
out
out
adc
fstp
cmp
cdq
sbb
(bad)
popf
cs
xchg
xlat
add
add
add
add
jae
or
pop
mov
outs
or
pop
add
in
inc
add
fsubp
fcomp
aad
ins
sub
add
and
sbb
add
add
(bad)
aam
add
lock
xchg
mov
aam
xchg
push
pop
ins
leave
pop
xor
pop
fstp
cli
add
push
push
je
pusha
add
cdq
add
retf
sub
and
ins
inc
outs
or
jp
nop
scas
sub
mov
jnp
sub
add
add
pop
add
mov
and
mov
add
xor
jle
xchg
popf
add
add
js
add
add
add
dec
fwait
movs
adc
add
mov
clc
xchg
add
xor
add
nop
add
repz
pop
test
aaa
mov
mov
imul
push
in
add
add
and
pop
dec
add
push
xchg
aas
xlat
add
sub
add
add
add
dec
jmp
and
daa
add
adc
mov
pop
add
add
jle
(bad)
or
mov
add
cli
cmp
add
add
mov
or
xchg
add
enter
stos
call
jl
add
add
ins
out
add
std
in
mov
push
xor
dec
stos
scas
call
add
add
jns
cmp
add
sub
jnp
cmp
add
mov
add
and
mov
add
xor
mov
sbb
(bad)
cmc
pop
and
mov
push
retf
cmp
or
(bad)
fld
add
ins
mov
sbb
fstp
push
add
or
push
inc
push
jle
adc
add
mov
add
sbb
adc
movs
icebp
mov
rol
add
fdiv
add
ja
add
out
jecxz
lods
ror
add
cwde
fldenv
mov
iret
inc
or
div
ror
lods
pop
pop
movs
stc
and
add
mov
jmp
add
jb
add
add
inc
jbe
add
add
stos
gs
add
add
mov
or
add
out
add
add
and
add
inc
sti
jmp
(bad)
out
movs
mov
gs
xchg
int
ror
and
pop
je
and
ret
xlat
push
add
gs
add
sub
clc
sub
inc
mov
stos
sub
dec
retf
(bad)
add
jl
call
add
cmp
add
cmc
jl
add
dec
add
adc
gs
mov
(bad)
and
add
sti
push
add
loopne
mov
or
in
mov
retf
add
add
xchg
jl
out
sub
pop
rcl
in
sub
inc
aas
add
scas
dec
cwde
add
lods
xchg
ficomp
adc
retf
rol
lock
add
jge
sbb
aaa
call
sub
add
or
fist
in
mov
or
stos
movs
add
adc
xor
or
ins
and
jge
out
add
je
idiv
inc
add
mov
add
xchg
popf
sbb
add
int
add
add
or
mov
adc
add
(bad)
pop
mov
add
jae
pop
add
and
xchg
dec
jge
add
add
scas
mov
rol
add
(bad)
sub
add
cld
arpl
xchg
add
(bad)
repnz
out
and
cmc
or
retf
icebp
jns
in
mov
cmp
and
mov
sub
jg
and
xchg
xchg
mov
test
adc
mov
dec
pop
cmp
sti
inc
mov
cld
dec
aaa
cmps
adc
push
sbb
mov
test
cs
jecxz
mov
mov
add
add
pop
pop
mov
add
and
inc
jecxz
das
scas
mov
add
pop
jnp
add
jl
jg
add
jmp
and
(bad)
xor
add
pop
bound
cmp
xor
pop
add
mov
pushf
add
and
add
shl
sar
jecxz
out
ins
arpl
fisttp
cdq
inc
adc
jge
inc
add
inc
int3
aam
(bad)
xchg
mov
fisub
mov
mov
adc
lea
test
add
stc
cmp
add
mov
dec
pop
add
add
mov
jp
xor
xchg
mov
rol
add
test
retf
(bad)
xchg
out
(bad)
adc
or
xor
fs
pop
mov
add
add
lods
add
or
add
iret
mov
repz
push
sar
data16
dec
fcomp
loopne
add
mov
mul
add
iret
push
add
add
in
popf
mov
popa
retf
pop
mov
add
or
mov
xor
sbb
out
nop
xor
inc
xor
js
popf
and
sbb
xor
retf
add
jecxz
push
loop
pushf
add
mov
xchg
stos
xor
mov
or
add
add
add
add
add
dec
add
cmp
add
call
push
or
add
xchg
add
add
and
mov
sbb
pop
cwde
or
ret
es
daa
xor
or
inc
add
add
arpl
mov
add
cmps
xor
add
arpl
jmp
xor
popa
rol
add
add
add
push
xor
add
cmp
push
or
sub
add
inc
and
pop
test
popf
inc
ins
fsub
xchg
out
pusha
cmp
repnz
xor
add
push
add
add
mov
jle
add
and
sub
pushf
cmp
add
add
push
sub
add
add
add
retf
add
test
mov
add
cs
add
jmp
pusha
add
sub
loopne
shl
ins
add
add
mov
mov
in
adc
lahf
cmp
test
sub
add
xchg
jne
add
add
call
sub
add
or
mov
sbb
pop
add
movs
and
push
dec
pusha
dec
sbb
aaa
je
fstp
add
cmp
mov
xchg
add
movs
ret
add
add
fs
jle
lods
add
or
movs
jmp
mov
fdiv
pop
dec
jbe
mov
add
add
add
add
add
inc
addr16
add
jp
adc
add
cmps
add
adc
add
fldcw
mov
and
add
stos
add
add
add
xchg
sbb
pshufw
add
push
and
add
add
xor
pop
fst
int3
fimul
jecxz
mov
add
add
clc
mov
add
out
and
dec
add
add
add
xor
aas
repnz
inc
add
add
lods
cmps
inc
shl
dec
pushf
and
out
mov
add
add
add
dec
push
stc
jl
and
add
hlt
bnd
add
scas
mov
imul
pop
inc
add
push
imul
(bad)
mov
movs
add
push
(bad)
jle
add
lods
adc
add
dec
sbb
cmc
and
or
add
mov
add
fadd
inc
or
cmps
or
inc
push
add
in
fmul
add
add
add
data16
add
mov
mov
add
pop
or
popf
mov
ins
int3
fs
add
ins
sbb
aas
sbb
add
and
dec
(bad)
(bad)
add
repnz
aas
and
xchg
mov
dec
add
add
cmp
xchg
scas
jns
add
outs
dec
fwait
lea
add
push
mov
fmul
aad
cmp
pop
push
add
add
dec
inc
ret
test
add
mov
aam
add
add
int
or
add
cld
mov
add
iret
cmp
adc
add
mov
mov
add
add
push
in
ror
add
xchg
add
and
mov
inc
les
add
add
outs
push
add
lods
aam
adc
retf
and
add
hlt
mov
jae
or
jl
cmp
push
loopne
mov
addr16
xchg
sar
ja
add
das
add
push
mov
add
add
mov
mov
mov
inc
sbb
add
add
in
(bad)
aaa
ins
add
dec
es
push
fwait
call
push
mov
xchg
push
push
outs
in
push
add
pop
xor
add
sti
dec
jl
pop
add
cmovl
add
sub
mov
mov
pop
add
cmp
xor
mov
popa
push
pop
mov
add
inc
repz
or
mov
add
ss
aam
out
(bad)
stos
xchg
movs
ja
out
add
add
sbb
add
add
icebp
add
inc
add
mov
inc
lock
(bad)
add
and
cmp
mov
shr
daa
imul
cmp
mov
add
les
cmp
cmp
in
jl
sti
(bad)
mov
add
add
sub
out
add
add
fdiv
jmp
mov
nop
inc
mov
xor
add
add
aad
dec
add
cmp
or
push
add
add
add
add
add
adc
leave
paddusw
loope
jnp
push
add
add
imul
dec
push
push
add
sub
and
xchg
add
lock
jne
hlt
mov
hlt
and
stos
test
aad
add
add
cmps
push
dec
aam
jbe
and
add
jnp
add
lods
(bad)
jg
cmp
add
add
add
add
aam
stc
add
xor
ja
jno
push
(bad)
stos
add
mov
jmp
mov
inc
cld
rol
inc
cmps
shr
sbb
retf
sub
add
cld
shl
push
cli
adc
push
add
push
xor
add
pop
cdq
nop
add
push
add
sub
xor
mov
sahf
inc
add
cmp
add
jb
push
sti
add
xchg
daa
sub
add
inc
push
call
add
pop
push
add
aaa
mov
pusha
loopne
add
add
leave
cmps
cli
or
sub
add
sbb
mov
stos
lahf
add
inc
stos
or
(bad)
outs
push
add
add
fs
in
add
or
sub
stos
mov
ror
sbb
add
adc
jne
ins
dec
bound
add
add
add
scas
rol
inc
mov
call
call
pop
sbb
add
cmps
pavgw
add
add
cmp
mov
sbb
(bad)
je
ins
pop
mov
pushf
retf
add
inc
cld
test
inc
test
cmp
sbb
add
in
add
mov
nop
popa
sbb
cmp
add
rcl
push
add
add
cmps
(bad)
pop
(bad)
lods
arpl
xlat
es
adc
addr16
shl
add
sbb
pop
iret
hlt
push
or
xor
xchg
ret
dec
add
loop
jle
sub
dec
add
add
movs
add
add
jae
add
add
mov
sbb
xchg
dec
cmps
push
pop
in
xlat
(bad)
mov
jg
or
mov
add
jp
add
loopne
add
mov
cmp
add
stos
cwde
push
jne
pop
fld
fisttp
add
add
(bad)
dec
iret
dec
int3
dec
fsub
xlat
leave
data16
add
add
add
movs
sub
add
add
add
mov
aas
out
add
jo
mov
add
add
add
add
xchg
in
rol
add
add
add
sti
xchg
shr
add
and
add
sbb
sbb
add
mov
cmps
push
cmp
add
fld
add
fwait
out
add
add
jbe
mov
adc
sbb
ds
fadd
dec
inc
ins
ror
and
xchg
cld
mov
add
cmps
loope
aas
aaa
(bad)
setne
retf
inc
cmps
mov
pop
xlat
add
imul
fdivr
ror
sbb
mov
test
loop
and
mov
and
dec
int3
mov
mov
sub
add
rol
xor
scas
mov
hlt
sbb
je
mov
jle
add
xor
pop
cmp
add
inc
add
add
mov
lods
mov
add
add
dec
out
push
loopne
fsub
mov
mov
enter
leave
mov
add
in
pop
aas
jl
fimul
popf
add
xor
add
xchg
clc
mov
out
add
add
leave
push
outs
add
es
add
add
pushf
(bad)
mov
leave
add
add
pop
add
add
mov
add
adc
add
add
stc
jge
jge
add
mov
out
fld
push
out
mov
add
mov
das
imul
cmp
add
add
enter
adc
rol
imul
nop
pushf
fcomp
add
cmp
jae
xchg
sahf
outs
shl
add
fnstcw
cmp
push
add
push
add
add
mov
inc
in
add
dec
add
bnd
sub
mov
in
cmp
pop
push
add
add
cmps
lea
xor
stos
push
pop
add
add
add
push
add
pop
xchg
xchg
fcomp
das
add
add
pop
rcl
push
xor
mov
add
add
rol
add
dec
jp
aaa
cmps
test
out
jbe
xchg
jp
js
out
and
xor
div
pop
fwait
stos
adc
xor
es
add
cdq
jnp
jp
add
retf
imul
outs
lods
les
aaa
add
jmp
add
add
and
pop
push
mov
add
add
add
scas
add
sub
add
add
add
xor
imul
mov
clc
dec
dec
jae
add
and
fdivr
add
push
sbb
sub
data16
add
imul
and
dec
mov
in
psubw
retf
add
aaa
push
xchg
add
add
and
mov
lock
scas
jle
add
sub
jmp
inc
add
add
add
stos
leave
pop
fcomi
add
dec
inc
fcmovu
add
js
sar
sub
add
inc
test
and
mov
add
xlat
xor
add
add
mov
xchg
mov
add
or
push
fwait
sar
loop
add
out
xor
jnp
aas
das
xor
arpl
add
mov
pop
loopne
aas
jbe
add
push
cs
add
push
and
jl
sbb
mov
dec
add
add
rol
add
mov
rcr
int
xchg
sbb
or
sar
add
xchg
jmp
outs
add
pushf
add
add
mov
imul
fwait
sub
add
jne
xor
jns
add
int
add
ficom
xchg
add
lock
scas
push
xchg
dec
scas
outs
jge
add
sbb
out
inc
and
add
ja
lds
sbb
add
adc
add
shl
xchg
call
add
pop
shl
add
data16
test
test
xor
out
add
ror
mov
add
mov
sub
sbb
push
add
es
add
mov
sub
push
pop
in
stos
xchg
push
inc
dec
and
pop
cmp
jnp
fcmove
xlat
add
add
or
add
xlat
add
mov
dec
out
add
loopne
sub
add
add
and
imul
mov
jbe
pop
add
stc
push
retf
cmpxchg
adc
inc
jmp
stc
retf
add
dec
sbb
add
dec
daa
iret
rol
xchg
into
xchg
nop
jecxz
out
movs
add
add
cmps
xor
add
fiadd
add
pop
pop
sbb
add
or
and
mov
pop
(bad)
cwde
(bad)
test
add
xchg
add
outs
or
xchg
and
(bad)
out
add
(bad)
data16
add
cmp
retf
out
add
ds
gs
out
add
dec
add
add
dec
add
sti
and
pop
popf
add
add
inc
mov
(bad)
(bad)
out
pop
add
jmp
jbe
add
xchg
add
push
inc
fldenv
out
add
in
add
ja
fidiv
xchg
mov
add
add
je
mov
dec
rol
add
pop
mov
add
or
xchg
push
ja
inc
aam
jge
add
add
mov
icebp
cmp
add
out
add
add
add
add
cdq
inc
pop
sbb
dec
or
iret
or
mov
add
add
xchg
sub
mov
ss
add
sub
cmps
sti
lahf
hlt
adc
test
aad
add
rcl
sub
jle
add
sahf
(bad)
aam
mov
xchg
shl
inc
mov
push
sub
add
push
sti
pop
popf
ins
xor
sbb
inc
out
pushf
jo
popa
icebp
pop
add
pop
verw
add
push
cld
add
add
not
mov
jmp
pop
inc
mov
ffree
push
sub
xchg
shl
retf
pop
add
add
push
mov
(bad)
enter
imul
iret
inc
add
add
push
jb
or
sbb
add
pop
dec
into
ret
cs
stc
nop
sub
adc
add
sub
mov
inc
cmp
pushf
lods
mov
add
push
xlat
or
push
push
add
add
in
out
retf
loopne
mov
mov
outs
mov
cmp
in
add
add
pusha
mov
cmove
call
adc
dec
add
and
add
push
jno
popf
xor
out
xchg
fxch
xor
lock
daa
rcr
sub
inc
add
xchg
mov
xchg
movs
mov
add
xchg
fild
add
(bad)
mov
in
rcl
cmp
push
cli
adc
pop
inc
push
xchg
push
popa
mov
add
mov
dec
loope
lods
add
pushf
add
inc
push
out
nop
push
in
add
fstp
jg
add
add
xor
cmp
les
mov
mov
xchg
push
sbb
inc
icebp
add
add
jo
add
cmps
jge
add
add
outs
add
add
bound
adc
popa
adc
mov
mov
cwde
xor
pavgw
push
pop
add
push
cli
ss
inc
mov
in
push
retf
xor
nop
add
inc
(bad)
push
mov
dec
and
inc
dec
and
add
pop
jo
sub
jmp
inc
add
add
aam
add
lds
fs
sbb
inc
adc
sti
add
add
ss
add
push
add
jecxz
add
(bad)
aaa
inc
and
into
add
ins
out
pop
cs
into
leave
pop
leave
nop
lock
push
add
ret
and
inc
pop
sub
imul
(bad)
in
add
leave
out
retf
fldcw
dec
fst
add
pop
xchg
iret
dec
test
mov
add
ds
add
add
ret
stc
jle
test
push
add
call
scas
add
add
(bad)
call
test
add
add
and
add
lock
std
cli
add
clc
cmc
aad
cmp
add
mov
loop
fnstsw
enter
movs
mov
stos
xchg
xor
push
das
idiv
lock
add
sub
popa
pusha
push
(bad)
fcomp
add
add
add
das
dec
push
add
hlt
sub
daa
and
mov
inc
ja
les
add
cmp
mov
add
add
or
retf
add
add
cmp
cmc
cmp
pop
push
jecxz
jne
pop
es
mov
add
add
inc
jnp
mov
or
int3
pop
pushf
fstp
add
mov
xor
pop
fild
add
or
push
stos
mov
add
lahf
or
aam
add
adc
pushf
add
push
or
pusha
pop
jg
cmp
add
leave
cmp
fcom
into
test
int3
imul
add
(bad)
push
hlt
add
add
fadd
stos
test
test
lock
icebp
xchg
enter
mov
out
add
add
pop
mov
(bad)
dec
cmps
mov
jne
inc
outs
xchg
add
fild
mov
inc
int
add
inc
scas
xor
cli
adc
sbb
xchg
pop
add
sahf
mov
or
xor
lods
repnz
jb
inc
je
jno
je
popa
add
add
sti
addr16
test
cdq
or
aaa
xor
add
add
or
pop
imul
fadd
add
jb
test
ret
add
in
pop
and
aaa
test
mov
and
add
add
cmp
pop
sar
aad
add
add
inc
jmp
inc
fidiv
add
inc
xor
add
ins
inc
out
fld
pop
fld
add
sbb
add
cmp
adc
dec
stos
addr16
fnstenv
push
aam
mov
ins
add
test
fwait
jp
add
out
cmps
loope
mov
add
repnz
add
add
add
dec
xor
ss
pop
or
pop
(bad)
mov
outs
(bad)
ins
add
add
and
fidivr
add
mov
mov
adc
sbb
sbb
add
dec
pop
pop
add
test
dec
or
add
fnstenv
loopne
retf
pop
add
ret
shl
in
sub
add
es
popa
sahf
inc
add
add
add
in
add
add
sub
add
iret
mov
cdq
add
enter
add
shl
dec
loopne
sub
add
cmc
add
add
add
sbb
gs
add
mov
add
xchg
pop
add
add
mov
add
out
out
dec
jmp
sar
cmp
sbb
shr
movs
jg
ss
add
push
fcom
mov
or
gs
enter
(bad)
lods
test
and
add
add
add
and
sub
add
fnstcw
or
sub
xlat
mov
stc
cmp
and
cmps
add
call
push
in
fcomp
js
add
jmp
test
xchg
add
adc
add
imul
add
add
sbb
add
add
fild
add
sub
mov
mov
push
add
fmul
(bad)
rol
add
dec
mov
jbe
pushf
loopne
stos
arpl
fild
clc
cli
lea
clc
add
add
push
daa
add
sub
imul
mov
mov
add
jmp
adc
adc
test
retf
and
mov
rcl
adc
add
fild
add
jle
(bad)
loopne
inc
jno
fsub
ret
add
add
rcr
add
push
mov
add
rcr
push
or
sub
mov
jns
or
jg
push
xor
add
test
(bad)
arpl
mov
add
enter
data16
jp
add
aaa
push
add
add
adc
add
pusha
add
jo
fimul
dec
loop
jl
add
sbb
or
push
and
popa
add
add
add
aam
mov
leave
pop
test
mov
out
in
movs
mov
ins
inc
and
iret
fdivr
pop
adc
xchg
and
cdq
repz
mov
add
add
add
add
es
and
xor
cwde
and
daa
fdiv
cmp
xchg
cli
enter
sub
cmp
add
add
jmp
add
sub
add
(bad)
test
retf
inc
out
outs
adc
mov
adc
xor
and
add
add
cmps
adc
fmul
inc
and
add
add
sahf
jbe
sbb
stos
rol
movs
jle
add
ret
pop
push
mov
clc
dec
jb
add
add
retf
and
add
test
mov
js
into
pop
inc
sub
add
mov
jne
rol
int
(bad)
sahf
outs
fmul
in
ins
lods
add
pushf
jge
(bad)
icebp
cmps
repnz
add
or
or
cld
jnp
add
iret
add
add
add
push
ins
add
add
sbb
mov
add
add
sbb
popa
add
(bad)
mov
add
adc
mov
leave
add
add
mov
add
xor
add
add
pop
pushf
add
xchg
cwde
add
add
add
out
ret
add
das
(bad)
jmp
add
add
movs
add
cmp
add
mov
xchg
add
je
mov
add
add
add
xchg
mov
push
bound
sbb
pop
jecxz
es
mov
jb
pop
pop
or
sub
arpl
cdq
add
add
add
adc
out
inc
mov
jns
xor
aam
add
sub
inc
add
mov
add
xchg
aaa
xlat
xor
rcl
mov
lods
rcr
add
ficomp
add
add
inc
ins
out
mov
mov
pop
psadbw
fdiv
mov
xor
nop
cmps
dec
(bad)
ja
mov
jae
or
ret
add
ret
(bad)
push
jae
sbb
cwde
outs
lock
jge
lahf
fld
add
add
add
add
in
jo
jecxz
adc
test
movs
add
add
adc
ret
xchg
jge
add
add
ja
cmp
add
or
add
sub
push
add
add
shl
std
cld
jl
add
cwde
popf
cmp
add
movs
add
(bad)
jnp
add
xchg
add
adc
imul
fistp
add
dec
inc
pop
cmc
jl
mov
lods
fist
add
jge
les
sub
retf
pusha
xor
mov
fmul
and
imul
dec
add
pop
add
jl
sbb
pushf
jmp
mov
push
stos
shr
ds
jne
hlt
push
imul
add
add
jecxz
xchg
add
jmp
xchg
loopne
xchg
mov
pop
cwde
add
mov
shr
rcl
fstp
cld
inc
add
add
sbb
mov
add
and
shl
add
mov
push
cmps
out
sahf
aad
cmc
int
lahf
adc
mov
inc
inc
add
sbb
add
jl
pusha
loopne
mov
add
add
add
add
push
dec
xchg
add
in
add
repnz
rcr
and
add
jg
(bad)
add
add
bound
add
add
in
add
outs
pushf
push
add
fwait
mov
rol
sub
jns
jnp
add
add
mov
aaa
adc
add
inc
add
push
pop
dec
shl
add
out
mov
pop
mov
popa
mov
add
xchg
imul
xchg
sti
jmp
mov
pextrw
sbb
test
xrelease
add
xchg
push
mov
add
add
add
add
add
and
add
icebp
pop
cmp
pop
sub
jmp
ss
add
add
mov
shl
test
inc
add
dec
add
push
pop
mov
add
add
xchg
shr
ins
test
push
cmc
andnps
scas
xchg
pop
enter
cmc
sub
leave
ret
add
pop
pop
add
add
xchg
push
popf
call
sbb
bound
add
add
add
pop
add
mov
pop
inc
add
add
add
sub
add
add
inc
xchg
ds
mov
fwait
jns
add
mov
inc
xor
adc
add
icebp
mov
in
and
scas
cmps
xchg
add
add
stos
add
pop
retf
cdq
pop
add
fwait
mov
arpl
in
mov
add
in
pop
fwait
sbb
mov
pop
inc
fisttp
pop
add
hlt
or
push
jp
or
loope
in
add
inc
loopne
pop
xchg
outs
(bad)
mov
jmp
add
xlat
inc
add
aam
test
add
mov
xor
fimul
jle
aad
add
sbb
movs
mov
sbb
add
add
dec
push
mov
jae
inc
aas
cmps
dec
or
jecxz
out
xor
add
sub
loopne
sahf
push
repz
frstor
test
add
jmp
mov
lds
add
adc
or
xchg
dec
add
test
xor
add
icebp
dec
sti
inc
scas
out
cmp
pop
scas
add
into
lods
xchg
arpl
add
add
aam
in
add
inc
pusha
xchg
mov
jns
mov
pop
int3
xor
scas
les
or
mov
(bad)
mov
(bad)
add
push
test
pushf
pushf
rcr
add
(bad)
mov
jmp
add
inc
inc
add
add
out
add
add
inc
pop
popa
add
jb
jno
out
and
mov
in
(bad)
mov
xor
pop
add
mov
add
push
pop
add
fcomp
add
xor
fistp
and
pop
mov
das
xchg
xchg
add
and
add
lea
cmp
add
repz
(bad)
out
add
add
jmp
or
jae
lods
pop
pop
add
or
mov
jo
add
sbb
movs
add
add
ins
mov
lea
xchg
push
in
bound
scas
sbb
cdq
popf
jne
lock
push
fwait
cld
add
add
scas
(bad)
xchg
not
push
inc
sbb
cmp
add
add
add
dec
inc
add
(bad)
ret
mov
push
add
add
dec
ja
in
add
and
lock
inc
add
fdiv
xchg
add
cld
out
add
ins
sub
add
(bad)
push
xor
sub
je
sbb
add
movs
jecxz
add
stos
and
(bad)
xchg
cmp
xor
add
add
push
fisub
add
arpl
fdivr
(bad)
dec
lea
pop
add
jnp
add
ins
sub
pop
clc
inc
shr
add
add
add
add
stc
add
dec
dec
inc
les
loope
ins
sub
add
add
rcl
xchg
add
fisttp
add
or
push
loopne
jmp
pushf
xor
addr16
pop
jne
and
add
add
imul
add
xchg
(bad)
add
sbb
cmp
cld
add
add
inc
xchg
or
aam
pop
test
add
enter
cmp
add
sub
add
stos
xchg
add
es
add
inc
xchg
add
add
arpl
cli
(bad)
rol
add
sbb
dec
mov
push
out
add
inc
adc
add
add
fadd
or
add
sub
stc
add
mov
add
ins
xor
mov
xchg
hlt
add
scas
add
fild
add
jmp
movs
sub
add
call
clc
sbb
outs
push
add
in
add
pop
cmp
mov
add
add
and
add
mov
loope
ror
sbb
add
in
sub
cmp
add
popf
jmp
add
add
cmp
add
test
inc
ins
loopne
adc
sbb
mov
add
add
add
inc
add
add
add
inc
inc
(bad)
fmul
mov
jno
add
xor
push
add
add
and
int
aad
aam
adc
sbb
sub
test
mov
shr
mov
add
sti
out
cmps
test
add
test
fbstp
push
adc
in
xor
add
lock
cmp
xchg
lea
jae
jne
mov
stos
inc
jg
cmp
add
adc
aas
mov
add
add
inc
add
out
sub
das
add
add
xchg
and
std
test
outs
mov
retf
add
and
and
retf
mov
adc
(bad)
xchg
add
add
mov
iret
cmp
aaa
sub
cmc
sub
add
sahf
and
movs
and
add
pop
gs
repnz
jno
pop
test
iret
add
xchg
or
push
add
sbb
jne
add
pop
mov
mov
add
mov
cmp
add
add
loope
int3
rcr
xchg
jge
in
adc
bound
push
mov
mov
or
sbb
enter
add
add
add
loope
ss
sbb
ror
add
add
inc
sti
dec
pop
leave
cmps
add
add
add
jmp
cmc
sti
fistp
add
mov
mov
add
add
jmp
push
add
add
addr16
push
dec
aas
popa
push
call
add
add
lock
test
add
lea
cmc
in
or
pushf
add
add
lock
pushf
mov
sti
leave
leave
test
cmps
add
add
add
add
adc
enter
push
das
inc
sbb
add
add
cmp
mov
add
scas
mov
cmp
pusha
dec
int3
add
or
mov
or
add
and
cmp
and
pop
scas
xchg
push
ror
adc
jbe
push
pop
pop
clc
std
add
add
add
add
add
add
out
push
(bad)
mov
push
lods
mov
add
add
(bad)
add
add
jnp
rol
add
pop
pop
repnz
xor
icebp
add
add
add
lahf
out
add
loope
retf
das
clc
dec
jmp
xchg
stos
xchg
ins
sbb
pop
mov
and
add
add
mov
add
sub
cmp
xor
add
repz
xchg
add
add
fiadd
add
adc
sbb
cmp
das
call
xchg
dec
add
imul
enter
add
add
add
addr16
iret
nop
clc
sbb
cdq
xor
inc
loop
cs
add
add
mov
add
addr16
mul
or
add
add
aaa
push
mov
sub
pop
pop
sub
repnz
test
add
add
int3
push
jge
adc
pop
iret
and
cwd
jo
inc
mov
stos
cs
lds
sub
add
mov
pop
add
(bad)
mov
test
xlat
add
arpl
add
jmp
adc
mov
add
jne
add
test
ds
ror
pop
or
push
dec
mov
add
arpl
add
mov
mov
mov
jo
pop
aad
add
outs
mov
add
jle
add
outs
(bad)
(bad)
mov
inc
dec
stos
inc
add
mov
in
cmp
and
sub
add
mov
inc
mov
add
cmp
xchg
add
add
lock
add
adc
or
test
pushf
xchg
push
outs
xor
mov
in
add
shr
test
retf
lea
add
rcl
mov
push
add
inc
addr16
enter
jns
scas
ss
or
(bad)
and
popf
sub
add
mov
sbb
jns
add
add
add
inc
xchg
jnp
add
sub
cmps
and
jmp
add
iret
add
add
add
add
add
push
enter
add
add
xor
fist
add
fld
int3
inc
std
xchg
cdq
and
xchg
mov
pop
mov
in
stos
inc
into
push
dec
jne
mov
add
out
dec
jo
jg
fadd
add
jmp
adc
out
fisub
add
add
ja
add
add
sbb
pop
xchg
pop
add
cmc
cmp
dec
je
stc
test
and
call
add
(bad)
shl
sar
inc
add
add
ror
mov
mov
dec
push
inc
inc
add
add
lahf
or
add
(bad)
(bad)
add
and
shl
neg
nop
fcmovne
and
stos
outs
add
sahf
add
(bad)
mov
xor
add
(bad)
outs
rol
add
repnz
and
add
add
ja
sub
add
sti
add
fwait
sbb
pop
in
add
jno
outs
mov
add
ss
call
add
cmp
inc
add
and
mov
pop
aaa
pushf
pop
add
add
jbe
lds
and
add
adc
or
add
dec
outs
push
sti
test
fadd
scas
pop
(bad)
xchg
aas
mov
pushf
out
add
nop
add
inc
cwde
cwde
mov
add
adc
adc
ret
xchg
push
lods
test
daa
add
sbb
shl
cmp
gs
xchg
fwait
jmp
or
pop
mov
add
test
scas
or
dec
adc
add
add
push
jge
jne
add
pop
jae
lods
add
repz
sbb
add
cld
push
inc
add
add
xchg
icebp
sbb
test
adc
add
add
add
add
add
add
cdq
add
mov
add
sahf
fld
add
shl
push
add
imul
cmp
add
inc
and
xchg
xchg
iret
add
add
push
dec
cmc
add
add
add
ret
dec
xlat
lds
cld
add
add
add
add
dec
add
add
mov
add
in
and
add
in
lods
add
add
iret
(bad)
xor
add
or
(bad)
jg
add
add
test
xchg
push
xor
rol
add
pop
hlt
add
add
aas
add
fs
lods
clc
(bad)
not
jmp
add
test
pusha
push
adc
jbe
add
cmp
push
js
mov
add
mov
push
mov
sbb
adc
mov
dec
cmp
add
pop
cwde
mov
in
and
xor
add
mov
retf
cmps
push
out
dec
scas
add
inc
dec
xchg
hlt
fcom
cwde
ffree
push
sub
add
jle
js
push
push
add
push
xor
fcmovbe
pop
dec
dec
pop
loopne
frstor
ins
lods
sub
mov
add
mov
enter
jns
mov
cld
add
add
push
lea
pop
inc
lea
xor
in
add
fiadd
jge
add
in
add
loopne
add
sbb
ja
xor
or
add
adc
add
add
and
mov
sbb
add
mov
mov
iret
push
add
add
dec
pop
addr16
out
mov
pop
add
sbb
rol
add
(bad)
and
loop
or
inc
adc
add
jmp
arpl
add
out
nop
sbb
add
cmc
xchg
add
add
hlt
sbb
call
add
add
sub
cmps
sbb
and
add
les
add
inc
sub
add
jno
add
xchg
(bad)
(bad)
test
dec
sub
imul
arpl
rcr
xor
jecxz
pop
or
movs
dec
jg
mov
lea
fcomp
xchg
pushf
clc
rol
push
lods
add
and
inc
add
mov
sar
out
add
add
icebp
imul
sub
add
add
mov
add
jg
(bad)
enter
inc
add
sbb
or
shr
add
sbb
cmp
outs
ret
lds
xchg
je
xchg
mov
std
xchg
pop
(bad)
xchg
add
sub
add
jb
retf
mov
adc
jns
call
inc
nop
add
adc
pop
test
add
cmp
add
jno
lods
mov
add
loop
cmp
dec
ins
sbb
loop
fwait
dec
inc
nop
xchg
mov
dec
add
add
dec
xor
mov
js
inc
pushf
call
(bad)
add
mov
cwde
sub
pop
repz
mov
add
xor
mov
test
lods
mov
add
inc
aas
add
add
das
enter
add
je
lds
add
xchg
mov
mov
add
pop
add
add
add
push
push
cmp
repz
xchg
cmp
mov
add
aaa
(bad)
scas
shl
in
add
xchg
mov
and
aaa
arpl
mov
add
jl
push
push
add
dec
add
adc
add
fstp
pop
mov
adc
add
add
pop
lods
sub
adc
add
add
int3
cmp
add
stos
call
int3
add
daa
add
(bad)
jmp
inc
call
pop
push
ret
xor
and
mov
lds
jge
cmp
inc
jnp
mov
ja
xor
mov
add
mov
push
add
add
mov
leave
xchg
add
dec
dec
cmp
gs
push
jle
add
jl
xlat
and
add
add
push
cld
repnz
data16
adc
add
scas
xchg
add
mov
ds
nop
add
mov
cmp
sub
retf
add
inc
div
xor
jmp
mov
(bad)
jns
cmp
(bad)
xchg
add
add
add
pop
xchg
xchg
into
mov
nop
(bad)
aad
pop
or
add
mov
or
add
add
cmp
add
fwait
in
jmp
fsub
imul
stos
adc
jmp
add
je
add
push
pop
aam
rol
out
push
out
add
dec
push
mov
sti
inc
add
dec
loope
xor
add
push
cdq
in
sbb
jp
std
(bad)
mov
enter
add
or
add
add
add
pop
add
sub
add
fsubr
nop
add
lock
add
add
scas
jbe
pop
cmp
add
mov
xchg
or
repnz
outs
icebp
call
ins
bound
xor
add
and
test
cwde
popf
gs
adc
vmovaps
scas
add
add
sub
retf
cmps
mov
or
add
push
test
sbb
mov
mov
pop
stos
stos
add
cmps
sbb
nop
add
rol
add
mov
(bad)
(bad)
add
add
sub
shr
jle
cwde
jbe
ficomp
dec
adc
ror
jns
add
push
rcr
mov
add
add
push
xchg
xchg
jbe
pop
pop
cmps
add
add
cwde
add
sti
pop
xor
test
push
popf
sub
add
shr
push
ss
adc
xor
inc
(bad)
fisttp
jmp
or
push
mov
add
add
js
mov
add
rol
fild
test
add
test
push
add
add
inc
repnz
push
xchg
add
mov
mov
sub
repz
jnp
add
ret
outs
adc
sbb
lds
add
cmp
add
retf
xchg
nop
dec
add
add
xor
test
sbb
sub
lds
or
add
cld
fbstp
cmps
ret
sbb
lock
jle
lds
add
and
jp
popf
add
add
pop
xlat
add
add
add
add
sbb
sbb
add
lock
mov
out
arpl
cmp
test
add
add
add
stc
sub
mov
imul
mov
pop
sub
mov
mov
add
dec
xchg
adc
add
dec
retf
test
(bad)
mov
mov
ffreep
mov
inc
add
fstp
repnz
add
add
movs
arpl
pushf
bound
iret
dec
add
add
ja
add
bound
sbb
mov
mov
aad
test
lds
mov
add
or
add
jle
out
movs
pop
pop
(bad)
lods
dec
imul
or
cmp
hlt
sub
(bad)
add
add
neg
mov
loop
add
add
add
fild
add
add
add
jp
add
mov
adc
mov
add
add
xchg
iret
stos
pop
pop
xor
adc
movs
add
xor
mov
adc
xor
into
dec
repnz
and
mov
js
mov
sbb
add
icebp
cmp
mov
add
popa
fcmovb
dec
ins
enter
fadd
leave
out
push
push
shr
lahf
add
test
retf
push
fwait
xchg
add
add
xchg
imul
mov
add
out
call
jb
add
add
add
add
sub
rcr
sbb
xor
add
jmp
sbb
sub
cmp
pushf
daa
inc
xchg
inc
or
rol
add
call
pop
mov
stos
add
add
dec
shl
sub
test
ret
push
pop
cmps
mov
mov
cwde
movs
push
inc
into
mov
out
stc
mov
pop
scas
add
mov
in
jmp
mov
add
add
add
xor
ret
fadd
jmp
arpl
jns
in
and
pop
je
aam
add
sub
add
add
icebp
lahf
jnp
test
mov
clc
jmp
xchg
out
sti
and
and
ror
inc
pop
xchg
stos
hlt
cs
fwait
and
mov
xchg
add
add
or
jle
add
test
loope
mov
add
sub
add
mov
add
fsubr
mov
add
mov
add
xchg
inc
and
add
add
add
sub
add
cmp
push
add
sbb
add
adc
jp
lods
cmp
add
popa
xchg
add
add
xchg
xchg
cmc
pop
nop
or
sti
add
add
cwde
cmps
lds
add
js
mov
and
add
mov
add
lahf
leave
(bad)
push
add
add
int
loopne
adc
mov
lock
aad
(bad)
mov
push
xchg
arpl
out
aad
jmp
loop
cmp
add
cmp
xchg
adc
enter
add
adc
add
or
add
fild
add
(bad)
mul
push
pop
sbb
sbb
mov
add
add
add
cmps
inc
mov
fdivr
add
lds
mov
add
es
push
jmp
jae
add
jnp
mov
jns
xor
add
pop
add
add
add
add
sbb
nop
push
(bad)
in
add
add
ins
xchg
fnsave
shl
xchg
add
add
add
jb
fild
outs
out
dec
add
add
jp
add
loope
inc
jo
add
test
add
mov
add
js
cmp
fadd
mov
fwait
or
add
or
adc
add
cmc
add
pop
sbb
add
add
xor
add
je
sub
push
cmps
xchg
inc
scas
xchg
jo
aas
pop
pop
xchg
add
add
adc
add
mov
(bad)
in
add
add
adc
test
push
add
inc
mov
(bad)
mov
jge
mov
add
pop
jno
add
popf
add
add
add
add
imul
inc
adc
mov
outs
or
add
aad
cs
add
add
(bad)
rcr
add
mov
(bad)
call
push
add
shr
xor
add
in
jl
jecxz
add
test
dec
add
sub
sbb
xchg
dec
add
out
xlat
add
add
add
popa
sub
icebp
stos
icebp
add
dec
rol
add
ja
out
mov
(bad)
sbb
dec
xchg
xchg
push
(bad)
cmp
add
mov
push
stos
push
pop
push
pushf
push
movs
add
or
add
push
xlat
jecxz
lods
test
sti
popf
pop
add
jmp
cmp
xchg
add
add
xchg
pusha
add
in
jl
jns
add
add
test
add
add
add
mov
nop
push
sar
je
mov
add
pop
add
dec
jl
stc
push
add
call
arpl
add
lock
xchg
adc
cmp
jb
inc
mov
sub
lock
add
add
add
pop
inc
int3
loop
add
clc
add
imul
xchg
cld
addr16
add
cs
add
data16
lea
into
mov
add
add
inc
inc
mov
leave
xor
mov
xabort
cmp
movs
inc
add
cmc
fstp
add
outs
mov
dec
sbb
popa
dec
mov
popa
cmp
sbb
or
or
sub
xor
adc
cmp
or
inc
xchg
inc
mov
add
sar
add
mov
sub
(bad)
std
mov
xor
add
jl
fsub
imul
ja
repz
call
add
add
add
pop
sub
add
add
lahf
iret
add
xchg
mov
push
add
aam
add
add
call
jns
out
loop
pop
push
add
pop
add
add
or
add
add
loopne
add
and
add
mov
sbb
push
push
int3
add
add
mov
adc
out
xor
add
scas
add
add
inc
call
sub
popa
pop
lea
sub
add
adc
nop
dec
add
cmp
jl
add
add
add
add
and
add
iret
add
add
xor
loopne
(bad)
fmul
in
mov
push
dec
lahf
push
aam
and
lea
add
xor
push
pop
out
lock
add
in
add
add
add
add
add
add
mov
pop
out
(bad)
clc
dec
add
mov
fistp
or
add
pop
in
out
add
add
sbb
or
push
mov
movs
xchg
mov
push
xor
int
pmulhw
add
cmp
push
xchg
not
xchg
add
add
cmp
sar
and
add
xor
fadd
add
add
aaa
mov
mov
add
mov
arpl
add
lock
rol
add
push
clc
test
out
add
mov
add
add
fiadd
adc
leave
sbb
add
ss
std
cmps
jno
(bad)
mov
pusha
fcmovnbe
add
scas
pop
sub
loop
mov
inc
push
fadd
add
fiadd
sbb
jae
pop
pusha
loop
dec
in
add
inc
jg
lea
push
mov
cld
arpl
add
outs
ds
add
int
jp
cwde
add
add
jns
xchg
mov
xor
add
mov
mov
dec
inc
retw
add
sub
add
add
popf
add
add
jmp
add
movs
and
jbe
int3
das
mov
sbb
jg
add
adc
dec
aaa
aam
add
mov
inc
test
mov
in
add
fcomp
mov
jp
dec
into
pop
mov
add
scas
xchg
inc
or
add
int
js
add
push
js
inc
mov
mov
push
add
xchg
add
xchg
test
jmp
pop
add
add
and
iret
call
or
out
mov
call
add
xchg
bound
fiadd
enter
imul
jno
imul
es
add
lods
xchg
jno
adc
add
sbb
das
cmp
add
out
add
add
mov
into
out
(bad)
mov
and
fiadd
add
ins
test
add
jle
call
bound
add
mov
adc
sti
jmp
add
add
add
imul
ret
jl
mov
inc
fadd
pop
sub
retf
adc
xchg
add
cmp
add
mov
mov
cmp
add
add
stc
xor
jno
in
pop
jp
pop
mov
cwde
inc
push
add
add
sbb
cdq
add
add
add
add
add
jmp
imul
ins
cdq
mov
rcl
add
inc
jge
xor
jmp
pop
pop
mov
add
adc
std
fs
add
imul
dec
cmp
pop
mov
call
xchg
adc
sahf
js
adc
add
add
repnz
mov
jle
sti
aas
test
out
js
add
aad
into
scas
xchg
shl
sub
xor
add
sub
mov
repz
and
add
dec
push
mov
sub
add
jge
icebp
xor
out
sbb
retf
add
jp
cs
add
add
add
imul
mov
add
and
in
add
add
stc
(bad)
cmp
int3
movs
fisttp
push
push
int
pop
bound
mov
mov
int
out
xor
add
inc
push
clc
inc
mov
push
or
in
push
xchg
movs
and
push
add
dec
es
add
add
aas
add
stc
lea
sub
(bad)
add
add
xchg
fbstp
cmps
sub
and
add
inc
imul
pop
adc
inc
mov
add
add
test
push
add
(bad)
ror
fwait
add
add
cmps
add
push
add
add
xor
add
add
arpl
fs
loopne
pop
push
fnstenv
loop
add
dec
mov
sbb
add
out
jno
lods
or
dec
jl
add
daa
shr
sbb
add
aam
sti
lea
or
retf
add
out
leave
add
fsub
and
add
add
add
push
pop
add
add
sbb
mov
inc
xchg
add
cmp
or
mov
scas
and
enter
mov
add
fld
add
pop
retw
jecxz
retf
sub
xchg
xor
cmc
inc
or
inc
sub
outs
add
add
mov
mov
inc
out
add
add
add
add
(bad)
add
lahf
gs
add
add
push
sub
add
inc
mov
add
lea
(bad)
xchg
xchg
add
add
push
loope
fiadd
add
call
add
add
ja
dec
add
add
icebp
sbb
push
add
mov
jmp
repnz
repz
inc
jmp
cmp
inc
inc
adc
sbb
lea
pusha
add
add
push
mov
add
adc
dec
mov
dec
shl
or
ins
es
ins
pop
popf
add
ins
and
add
add
add
add
in
int
dec
add
cmp
xor
add
add
and
mov
cwde
test
inc
add
add
rcr
add
pop
fs
inc
cld
xor
add
jno
push
push
add
add
add
ror
add
nop
test
push
(bad)
xchg
stos
add
daa
push
mov
mov
mov
sub
add
test
stos
xor
hlt
(bad)
lock
jge
add
test
lods
call
aam
add
fwait
push
jmp
add
mov
mov
rcl
add
outs
lock
and
pop
dec
adc
mov
push
lahf
add
ret
add
repnz
add
jp
add
add
arpl
sbb
add
ds
sahf
or
fnop
lock
pop
das
add
add
add
add
jo
push
add
sub
push
mov
adc
sub
fsub
jmp
add
add
popf
add
add
fdiv
cwde
xchg
ja
stos
mov
cld
xor
punpcklbw
add
add
and
xchg
gs
xchg
add
xchg
inc
mov
add
push
leave
sbb
mov
add
sub
add
add
cmp
jno
pop
lea
add
dec
test
mov
cdq
add
push
jbe
push
dec
dec
jg
cmps
into
mov
add
add
dec
loope
dec
dec
pushf
and
or
add
xchg
add
rol
add
int
sbb
(bad)
xchg
rcl
loop
add
or
add
retf
in
jp
jmp
pop
add
add
fsubr
xchg
add
pop
add
sub
cmc
mov
jmp
pop
cmp
adc
mov
mov
add
push
lock
fld
add
aam
test
add
add
xor
repnz
cld
add
lods
sub
add
jne
add
and
sub
sub
add
add
repnz
add
mov
mov
add
add
add
pop
add
add
add
inc
push
fld
in
jge
test
fs
cmp
mov
mov
mov
fadd
add
inc
sbb
add
mov
mov
stos
sbb
mov
add
push
and
nop
mov
jmp
retf
dec
xor
adc
push
fisubr
pop
fadd
add
cmp
inc
test
loope
in
mov
cmp
out
hlt
xchg
fimul
in
xlat
cmc
dec
adc
adc
test
rol
sub
ficom
out
mov
mov
dec
push
fs
sub
pop
add
out
cmp
and
fstp
mov
push
pushf
add
add
add
add
add
out
aas
loopne
add
stos
std
popa
in
mov
xchg
add
sar
jns
shl
add
jecxz
cmc
aas
out
dec
test
ins
sbb
mov
add
cwde
add
push
and
add
aaa
cmp
xchg
add
push
sub
add
add
add
add
movs
mov
imul
pop
lock
shr
pop
cmp
in
loop
je
mov
lock
add
sub
mov
fbstp
xor
iret
jo
jl
add
cmp
dec
push
add
add
pop
add
enter
jae
and
shl
lods
test
dec
add
push
fisttp
inc
or
movs
push
es
shl
add
mov
add
add
or
xor
add
mov
inc
xchg
add
scas
cs
or
pop
aam
add
push
movs
fisubr
xlat
push
cs
inc
xchg
xchg
leave
jo
add
ja
add
pusha
inc
jp
add
out
add
xchg
xor
add
add
add
nop
add
lods
repnz
sahf
add
inc
add
add
cmps
(bad)
push
xchg
xor
stc
inc
push
arpl
push
mov
add
jnp
movs
jbe
add
mov
mov
loope
mov
inc
add
test
add
jmp
in
add
add
rol
mov
scas
mov
inc
jo
mov
(bad)
jnp
rcl
add
inc
pop
and
push
pop
cwde
add
jnp
add
in
ds
add
(bad)
push
add
repz
(bad)
sub
add
mov
arpl
fwait
mov
out
add
bound
cmps
add
add
cmp
xchg
mov
add
iret
add
push
add
neg
lock
rcl
push
(bad)
jo
add
int
mov
mov
in
test
add
pop
bound
add
lods
cmp
add
add
push
movs
adc
add
mov
cmps
cmp
hlt
inc
mov
add
pop
aam
dec
(bad)
loopne
and
cmp
jb
add
or
int
add
add
fsub
mov
pop
xchg
mov
add
retf
add
sbb
cmps
in
cmp
test
dec
xchg
in
pusha
jl
add
add
push
add
add
and
add
jle
add
rcr
add
arpl
add
int
add
add
mov
add
popa
clc
dec
sahf
and
xor
inc
push
add
nop
inc
out
dec
xor
add
adc
xor
add
inc
add
adc
aas
add
add
retf
retf
mov
add
xor
jle
pop
or
xchg
je
rcr
xlat
cmp
cmp
ret
cs
inc
and
add
add
cmp
add
add
and
jmp
ret
fadd
add
add
cmps
dec
fiadd
add
adc
add
leave
ds
fs
inc
aam
popa
aas
jle
and
xor
add
add
cmp
add
xchg
add
add
mov
add
lds
rcl
inc
lahf
pop
cwde
leave
add
aas
daa
test
js
add
mov
cmp
pop
cmp
iret
sbb
shl
add
jg
outs
scas
adc
cld
aas
addr16
add
add
mov
add
(bad)
cmp
or
icebp
(bad)
xor
aad
call
adc
add
add
add
add
xchg
mov
rol
add
push
add
xchg
mov
xor
push
add
add
add
mov
add
ins
mov
add
in
mov
add
add
inc
popf
inc
inc
or
jo
jns
lods
pop
cli
jmp
push
mov
add
push
mov
cld
and
sub
add
add
mov
cdq
nop
jmp
cmp
leave
add
add
rcr
mov
retf
dec
stc
mov
add
add
imul
pushf
test
push
push
push
shr
mov
add
pop
pop
xchg
mov
add
inc
rcr
pusha
add
arpl
inc
(bad)
imul
les
shr
lock
add
add
adc
icebp
test
mov
mov
sbb
out
jno
test
sub
add
rol
add
cmps
mov
jle
pushw
add
stc
lods
mov
movs
push
push
out
and
xchg
clc
iret
push
enter
imul
cli
into
add
pop
add
add
or
jge
mov
mov
inc
adc
imul
dec
sbb
push
aad
add
(bad)
sti
add
sub
push
pushf
cmp
out
add
add
out
retf
stos
shl
cmp
mov
mov
jbe
add
add
in
aaa
outs
add
inc
adc
rol
add
es
idiv
ja
cli
dec
icebp
out
js
shl
xchg
add
xchg
mov
mov
call
and
lahf
sbb
add
add
cmp
retf
adc
add
add
mov
add
(bad)
aad
pop
push
add
sub
jl
mov
sub
mov
add
add
cmp
bound
les
pop
sbb
add
lock
ret
jmp
add
add
in
add
rcl
sub
add
je
add
cmp
add
popa
sbb
mov
lds
mul
mov
fwait
add
push
out
mov
(bad)
aad
push
xlat
and
outs
mov
shl
add
mov
add
loopne
repz
in
ret
clc
cmps
ja
inc
out
ror
int
(bad)
push
jle
xchg
adc
pop
add
add
iret
repz
mov
fild
dec
add
add
add
retf
jns
add
ins
add
pop
int
or
cs
aad
fnstsw
jecxz
outs
jmp
cld
xchg
cmp
add
jo
pop
cmps
or
repz
add
clc
add
sub
xchg
popa
pop
dec
push
cmps
ror
push
popf
pop
add
add
pop
fiadd
fldenv
xchg
push
xchg
add
ror
jns
aam
mov
add
stc
mov
xchg
inc
add
push
mov
xchg
push
add
adc
mov
mov
adc
sahf
les
add
inc
xlat
mov
xor
push
shl
adc
add
ret
loop
les
cmc
cmps
rol
pop
ds
in
add
add
je
add
ret
sub
aam
pop
dec
(bad)
push
in
pop
(bad)
jno
out
add
and
xchg
mov
push
xchg
and
jle
push
js
pop
xchg
add
add
fs
add
in
add
pop
arpl
das
add
add
hlt
cdq
add
add
add
repz
add
jne
add
push
add
inc
cld
xchg
add
repnz
xor
out
aam
stc
dec
lds
push
add
mov
add
pop
push
or
test
push
dec
push
pop
inc
mov
(bad)
scas
add
add
sbb
ror
int
fcmovb
sub
cmp
jno
or
lods
add
test
add
mov
fwait
add
add
add
pop
ret
jne
add
adc
push
sbb
and
push
mov
xchg
int
push
int3
imul
add
dec
cmp
jmp
sub
push
sti
mov
mov
dec
add
add
mov
mov
add
cdq
movq
loop
add
add
add
add
dec
je
icebp
dec
mov
mov
add
lods
add
std
jmp
out
add
inc
jb
les
push
retf
hlt
mov
add
test
add
sbb
add
add
push
scas
xor
xchg
inc
add
dec
or
add
inc
idiv
lahf
or
dec
imul
xor
add
(bad)
push
outs
repnz
dec
add
(bad)
or
add
add
xchg
add
lahf
pop
add
data16
jnp
mov
add
cmp
ins
add
(bad)
int
aad
out
scas
cmp
retf
add
add
push
(bad)
mov
call
js
jmp
add
add
dec
xor
add
addr16
icebp
mov
mov
loopne
inc
enter
ins
inc
jae
xchg
and
mov
mov
rol
popa
add
add
nop
xor
add
call
gs
repz
cdq
sbb
imul
adc
cdq
mov
movs
sbb
call
ins
lea
add
add
inc
mov
and
pop
xor
add
or
fstp
cmp
add
add
sar
cmc
add
add
pop
mov
add
into
add
add
cwde
(bad)
adc
or
xchg
xchg
mov
xchg
add
dec
sbb
sub
add
mov
jp
add
adc
mov
jns
ja
xchg
add
scas
add
jno
push
mov
cmp
add
add
inc
movs
add
scas
add
add
sar
add
or
call
and
mov
ja
mov
aad
adc
push
aaa
mov
pop
and
ins
enter
add
(bad)
xchg
add
mov
add
std
push
sbb
loope
add
sbb
fs
in
out
add
ds
add
inc
and
add
add
cmp
add
dec
xchg
neg
je
les
std
(bad)
and
add
push
inc
lods
pushw
sub
loop
in
add
add
xchg
ins
push
inc
mov
sub
in
mov
ds
adc
sub
mov
lock
add
daa
add
add
mov
add
add
mov
mov
mov
repnz
lds
xchg
pop
mov
add
add
add
cmp
add
and
ins
(bad)
xchg
test
add
push
xor
sub
mov
xchg
mov
sbb
retf
dec
dec
add
add
loop
test
add
add
add
verw
addr16
into
dec
and
add
inc
and
aaa
mov
xor
push
lods
pop
outs
in
jp
mov
add
pop
sbb
mov
mov
pop
cmp
cli
add
add
add
repnz
mov
aad
add
add
gs
outs
add
add
add
add
in
add
sbb
dec
xor
xchg
add
add
add
add
sar
sub
mov
add
add
push
pop
pop
add
add
push
add
fnsave
add
(bad)
idiv
dec
add
lods
cmps
and
pop
(bad)
outs
pop
push
adc
aam
add
adc
xchg
scas
and
data16
cmps
or
and
add
add
xchg
add
rcl
repz
jnp
cmp
add
add
mov
outs
mov
ds
pop
ss
sub
outs
stos
add
aaa
add
jae
sar
push
add
xchg
stc
add
adc
sbb
add
inc
or
add
add
imul
or
add
mov
add
push
mov
add
sub
xchg
cmps
retf
rcr
fnstcw
add
not
pop
add
ins
adc
add
out
idiv
cmp
cmp
push
push
xchg
add
repz
jp
or
add
pop
add
sub
loope
push
adc
in
adc
inc
add
add
cmc
jmp
icebp
inc
outs
xchg
nop
(bad)
lods
int
cli
push
jo
test
pusha
cmps
mov
das
add
jmp
hlt
and
xor
std
pushf
xor
ja
xor
add
imul
add
adc
out
or
adc
mov
cmp
sahf
mov
sub
leave
lahf
daa
jle
popf
fdivr
dec
stos
(bad)
add
add
sti
and
add
cmps
add
add
movs
push
sub
mov
add
mov
popa
inc
push
ins
loopne
cmp
add
add
sbb
in
push
cmp
jae
add
(bad)
push
add
add
add
push
sbb
sub
mov
cmps
push
pop
shr
cmps
ss
adc
dec
mov
add
xchg
cmps
inc
add
add
xchg
dec
add
add
push
and
add
stc
add
mov
shl
cmp
add
or
xchg
add
add
add
add
cdq
popa
mov
(bad)
adc
or
adc
enter
je
and
add
add
and
add
enter
add
mov
or
add
pop
add
inc
xchg
sahf
dec
jbe
fadd
add
cmp
add
xchg
ret
add
add
imul
and
xchg
add
or
xchg
add
add
cmp
add
retf
add
xchg
aaa
nop
pop
rcr
cmp
add
sub
add
pop
imul
iret
rol
add
xchg
movs
add
add
sbb
std
add
add
mov
cdq
jbe
mov
jg
add
jns
push
fwait
add
add
add
fmul
add
add
frstor
mov
jmp
in
inc
rol
add
cmc
outs
mov
jnp
fcomp
movs
arpl
add
xchg
stos
and
sub
pop
nop
add
add
jnp
rol
icebp
mov
add
add
aas
dec
(bad)
or
shl
inc
mov
(bad)
pop
jl
pushf
push
ins
lds
repz
add
int3
add
add
push
jbe
add
add
cmp
xchg
loopne
push
shr
aas
addr16
out
or
add
add
sub
add
fistp
add
arpl
add
jl
add
add
lods
sbb
mov
push
add
pop
fnstcw
xchg
add
xchg
icebp
bound
lods
mov
inc
add
pusha
cmc
mov
leave
add
add
add
jbe
cmp
dec
imul
or
pop
and
iret
cmps
aam
add
add
ficom
das
(bad)
mov
scas
test
or
jno
(bad)
ss
pop
outs
inc
das
push
inc
xchg
imul
popa
add
pop
fs
or
ins
mov
stos
push
fild
add
sldt
lds
add
ins
add
add
add
add
add
add
add
repnz
add
push
push
xor
stc
mov
dec
pop
add
pop
add
ds
add
aam
daa
or
and
and
fdivr
jle
pop
jecxz
outs
addr16
pop
xchg
sub
mov
mov
xchg
ficom
mov
pop
add
add
sbb
push
imul
add
jmp
mov
cmc
das
aas
call
add
add
push
aad
jle
daa
test
pop
add
jnp
pop
dec
add
add
add
repnz
nop
inc
push
nop
gs
retf
les
int3
add
add
aam
add
add
lods
cmp
push
xchg
ins
add
add
adc
sbb
pop
mov
mov
cmp
imul
mov
add
lahf
add
fidivr
add
add
fld
add
outs
je
loopne
mov
clc
mov
push
add
lods
add
add
xor
add
pop
cmps
push
add
cmp
mov
fiadd
add
xchg
add
add
mov
add
retf
lahf
xchg
mov
add
add
cmps
add
cld
shr
and
jmp
ss
ja
mov
call
jne
and
stc
xchg
lds
cmps
add
adc
add
mov
dec
inc
retf
stos
leave
into
push
test
jg
xor
out
rcr
mov
(bad)
sub
lods
fwait
dec
jo
pusha
repz
mov
add
repz
xchg
fcom
push
lods
add
add
add
adc
add
adc
and
add
sbb
lahf
add
repz
add
mov
push
add
add
mov
ins
pop
out
mov
sti
sub
add
add
dec
iret
add
xor
add
xchg
pop
mov
lods
or
aam
cmp
cmp
jbe
jne
sub
inc
add
add
mov
xchg
add
add
xor
mov
aas
lods
xlat
pop
loop
add
or
cmc
lahf
xchg
add
mov
add
add
(bad)
ins
mov
jmp
fadd
call
repnz
retf
push
or
fdivr
ret
jae
mov
push
xchg
fst
add
pusha
dec
daa
xchg
xor
add
add
pop
movs
dec
outs
cld
inc
leave
sbb
pop
xor
pop
inc
add
ins
inc
out
in
jp
cmps
add
add
add
and
movs
mov
mov
ja
add
dec
add
and
lock
mov
les
jle
add
add
fwait
adc
call
popa
addr16
ss
rol
test
pop
lock
jge
push
add
add
sub
push
rol
jns
pop
push
cdq
lds
add
addr16
retf
add
sbb
push
cmc
and
jbe
neg
push
jns
add
xchg
add
add
in
add
push
mov
add
jmp
mov
jp
pushf
jnp
ja
stos
cmps
add
sti
xor
pusha
ins
outs
outs
and
add
add
mov
dec
sbb
leave
and
add
mov
add
ds
xchg
add
mov
push
leave
sub
sbb
pop
sti
fist
inc
push
arpl
add
cmp
mov
fadd
sbb
imul
add
add
add
(bad)
add
aas
mov
push
(bad)
jp
add
add
add
add
dec
test
or
cmp
cmp
jns
mov
call
sbb
sbb
std
cmp
aaa
adc
popf
call
add
add
add
add
add
add
add
add
push
mov
mov
fld
pop
je
or
dec
pusha
add
add
dec
or
sbb
pop
(bad)
aad
fsubr
popa
jl
adc
dec
add
add
pushf
add
add
and
fnsave
test
nop
adc
adc
xchg
pushf
xor
lods
ins
push
add
add
add
adc
or
repnz
stos
outs
push
rcl
xor
repnz
xlat
pop
add
add
jp
and
add
shl
add
rcl
jo
fadd
outs
bound
adc
in
pop
push
test
xchg
jnp
pushf
pushf
xchg
adc
movs
push
cmp
add
call
jne
push
add
retf
add
or
aaa
mov
in
fsub
hlt
add
adc
test
inc
xlat
cli
repz
mov
sub
inc
test
ins
jecxz
cli
sbb
jne
adc
add
push
add
ja
sahf
addr16
(bad)
cmps
fidiv
adc
add
stos
sub
add
adc
cdq
xor
xchg
push
mov
add
or
jae
add
not
fiadd
out
es
xchg
shr
sub
arpl
add
sar
add
lods
push
jns
bound
out
mov
add
int3
adc
add
mov
xor
cmp
add
or
add
ret
aam
add
add
dec
fcomp
add
retf
fiadd
add
and
sbb
inc
mov
hlt
in
mov
jp
pminub
add
add
add
push
sbb
cmp
add
add
test
add
push
retf
out
add
enter
in
popf
or
add
add
add
add
sub
add
mov
xor
add
and
sti
sldt
add
sbb
add
push
add
fdiv
rol
add
add
add
mov
sub
popf
add
test
mov
fadd
repnz
add
mov
add
loopne
pop
scas
ficom
das
mov
adc
cmps
xor
pusha
add
sbb
xchg
add
clc
jle
add
bound
pop
in
mov
add
cmp
(bad)
add
jg
and
add
add
jae
inc
aam
out
cdq
pop
add
mov
push
and
out
mov
ret
inc
add
add
add
pop
lds
add
sub
lea
test
call
sti
(bad)
dec
gs
add
adc
push
inc
add
add
add
cwde
(bad)
cmp
lea
mov
fs
push
or
dec
sbb
mov
sub
stos
xor
inc
imul
cmp
add
or
fisttp
outs
add
add
sbb
add
add
imul
push
inc
mov
mov
dec
inc
xlat
xchg
fisttp
mov
hlt
jnp
adc
fdiv
xchg
push
inc
(bad)
mov
add
cdq
pop
mov
iret
add
add
pop
mov
add
adc
fpatan
fld
add
leave
cmp
add
pop
in
icebp
or
sub
add
add
dec
add
pop
jb
or
jae
sbb
sar
pop
pop
fst
pop
ja
xchg
sahf
ins
outs
adc
leave
or
add
push
add
pop
push
add
and
retf
mov
add
add
add
add
std
fdivr
ins
sti
gs
add
pop
xchg
xchg
fsub
push
jnp
mov
ss
into
xor
add
add
mov
and
or
add
cmps
lds
add
add
test
sahf
lods
add
pop
push
loopne
add
add
bound
mov
jo
add
sbb
sbb
stos
lea
add
fimul
adc
fild
mov
jecxz
add
add
(bad)
jecxz
bound
scas
enter
jae
test
rdpmc
sti
push
mov
shl
add
add
jne
enter
add
add
sti
nop
(bad)
stc
add
inc
rol
add
and
add
(bad)
sti
add
push
mov
cli
sub
cs
adc
ja
add
scas
jge
push
pusha
lds
add
lods
jge
rol
cmp
push
and
inc
adc
and
push
into
mov
inc
jl
cmp
jno
add
inc
pusha
fistp
push
out
hlt
sbb
add
and
xor
bound
and
add
jne
(bad)
add
cmp
add
ja
out
xchg
add
push
cmp
in
add
xchg
add
add
movs
add
add
add
stc
add
inc
jle
add
fiadd
add
add
jno
add
adc
add
add
retf
(bad)
xor
add
sbb
xchg
xor
lods
cs
add
popf
add
add
adc
sbb
and
ja
in
mov
out
ret
add
jb
in
ja
cmp
dec
int3
or
add
inc
dec
mov
call
xchg
add
div
sub
mov
add
sti
add
test
jge
add
add
add
mov
dec
add
add
mov
pop
mov
xchg
or
mov
fiadd
aas
fs
fiadd
push
push
push
xchg
sbb
lds
aam
cdq
add
aas
add
mov
repnz
es
adc
inc
sub
retf
add
pusha
repnz
add
ret
add
pushf
inc
cmp
add
jbe
add
add
xor
jge
add
and
js
loope
aaa
jo
jb
jbe
add
dec
add
aad
add
mov
add
in
push
and
add
adc
add
test
add
jae
adc
test
add
out
add
std
leave
add
and
xchg
and
xor
es
iret
mov
add
cdq
clc
mov
add
enter
and
mov
orps
pop
mov
cmp
and
push
add
das
fwait
outs
cli
lds
mov
adc
je
add
add
and
fld
or
add
sub
aas
cmova
add
inc
push
lds
ja
add
je
test
out
pop
add
push
in
mov
add
cmp
add
call
add
dec
inc
add
fisttp
inc
rol
add
sbb
icebp
add
std
add
call
test
add
mov
or
outs
xlat
ja
aad
or
adc
add
xor
push
add
ret
daa
repz
lds
dec
jg
cmps
add
add
mov
add
out
test
add
add
enter
push
je
add
sti
popf
add
adc
sar
je
test
adc
add
add
pop
loopne
gs
sbb
or
ins
movs
adc
add
add
data16
jge
add
out
add
inc
add
cmp
jg
enter
iret
mov
add
mov
ja
add
jg
add
adc
sub
pop
or
adc
add
add
jae
mov
add
add
mov
lock
mov
add
add
addr16
cld
add
aaa
add
jecxz
add
add
add
add
adc
add
add
xchg
add
pop
out
repnz
or
add
mov
(bad)
(bad)
add
mov
mov
jns
and
in
pop
xchg
add
xchg
out
add
jg
fisub
inc
mov
sub
add
mov
xor
add
test
mov
mul
add
add
aad
ins
push
data16
mov
xchg
jb
aam
or
test
add
jbe
and
out
xchg
pop
ss
add
add
mov
add
add
ds
add
neg
add
add
jbe
popf
int3
push
mov
adc
mov
pop
xchg
fsubr
rcl
add
(bad)
and
ja
cs
xor
rol
shr
add
add
outs
sub
add
and
add
add
push
call
push
or
add
inc
scas
(bad)
sbb
out
add
sar
and
cmc
sar
push
and
loopne
add
imul
daa
add
cld
add
add
add
jo
jb
or
cmp
add
mov
push
imul
jg
add
fdiv
add
pop
jg
add
and
lea
add
dec
lock
add
int3
push
mov
add
xor
push
pop
jae
ins
jg
add
add
ret
add
retf
add
add
sbb
cdq
sbb
push
fsub
push
arpl
add
cmc
enter
ret
add
push
add
inc
add
aad
mov
push
(bad)
add
pop
out
ja
jl
add
inc
push
add
cli
adc
add
jnp
and
add
adc
repz
sub
cmp
mov
jecxz
add
add
and
rol
push
push
xor
pop
pop
dec
add
cmps
mov
add
add
popa
add
cmps
arpl
add
rol
add
adc
rol
das
mov
out
ja
mov
add
jae
mov
add
je
cdq
js
add
data16
sbb
popf
fist
lods
jmp
add
mov
cmp
int3
mov
adc
fiadd
add
add
xchg
pop
sub
xor
inc
bound
fs
push
mov
jno
aad
sti
adc
add
push
add
mov
push
ret
add
dec
jae
scas
adc
add
dec
add
mov
sbb
mov
add
mov
inc
aaa
add
add
fiadd
push
sahf
sub
inc
aam
sbb
ss
or
mov
jmp
add
xor
sub
hlt
mov
add
aam
ret
cmp
jnp
out
xchg
inc
jg
adc
dec
mov
sbb
int
sar
pop
add
add
mov
cmp
jp
mov
test
movs
pop
js
adc
rcr
mov
mov
add
add
add
leave
xchg
or
add
push
add
pop
nop
inc
add
sahf
push
outs
mov
dec
jp
push
ficom
add
inc
xor
add
lods
and
add
add
out
dec
ret
(bad)
cli
sbb
or
lock
fdivr
aam
add
add
pop
add
inc
add
inc
sub
cmp
fild
jl
mov
inc
div
mov
popf
push
outs
imul
ss
pop
and
push
ficomp
shl
call
nop
daa
mov
xchg
add
pop
and
xchg
mov
fisttp
inc
in
mov
add
xlat
add
(bad)
pop
fwait
dec
out
out
rcr
leave
push
inc
add
ins
add
pop
je
adc
dec
mov
dec
sbb
mov
cmp
add
gs
xor
mov
cwde
stc
jg
(bad)
into
add
xor
add
push
ins
lock
adc
or
or
pusha
into
test
jnp
xchg
mov
mov
add
mov
jno
add
fstp
add
push
xchg
pop
add
xor
push
jle
out
pop
sbb
xchg
add
cwde
(bad)
xchg
jecxz
xchg
or
xor
popa
cld
or
pop
pop
add
add
inc
add
repz
cmps
add
fmulp
push
mov
jne
add
jle
imul
popf
int
adc
dec
je
pushf
add
scas
add
add
lea
call
enter
cmp
rol
add
and
and
xchg
inc
dec
dec
popa
sar
or
push
adc
mov
mov
jle
add
mov
fwait
cmp
sbb
ins
push
mov
dec
out
mov
fiadd
add
sub
fs
test
add
add
cmp
and
mov
std
push
dec
es
push
jmp
(bad)
imul
mov
jno
inc
add
inc
xor
or
movs
je
push
add
stc
jns
cmp
add
xor
es
push
cmps
add
add
enter
add
xchg
xor
sub
add
sub
not
push
push
mov
add
sahf
rol
(bad)
add
imul
sar
rol
jb
add
dec
add
repnz
add
cs
sub
mov
sti
pop
xlat
push
push
xor
add
add
pop
cmp
add
jno
and
add
lods
test
lahf
mov
test
(bad)
pushf
mov
xor
xor
push
in
mov
cld
push
loopne
add
imul
add
mov
xchg
into
adc
adc
sub
add
mov
add
fmul
pop
add
xchg
aad
jae
add
push
sbb
not
push
add
fwait
add
dec
xor
xor
fcomp
pop
jae
sub
add
add
and
fdivrp
clc
add
or
stc
push
add
add
je
add
xchg
add
sub
lock
add
xchg
out
or
hlt
sub
mov
rol
mov
pop
pop
sub
fs
fisubr
pop
pop
arpl
hlt
mov
add
sbb
xchg
add
dec
mov
mov
loop
add
push
(bad)
mov
jmp
dec
add
push
add
jae
add
sbb
add
jb
pop
fwait
pop
addr16
add
sub
add
push
addr16
popf
add
push
pop
cli
mov
lock
xor
add
inc
ror
dec
jmp
mov
inc
pop
mov
add
loope
es
push
mov
mov
add
inc
aad
add
fist
ret
icebp
fiadd
jl
add
icebp
stc
add
fstp
sub
add
and
fiadd
xchg
add
or
stc
nop
in
add
popaw
js
pop
ins
inc
add
mov
clc
jge
add
fst
fadd
add
and
les
call
add
add
test
add
sbb
push
add
stc
pop
pop
outs
add
rcr
adc
mov
sub
sti
fidiv
adc
mov
cmp
xor
inc
push
les
sub
add
add
add
xchg
or
jae
add
and
xchg
mov
add
fnsave
ret
cmps
mov
mov
das
adc
mov
jecxz
push
add
lods
cmp
or
jecxz
test
sbb
pop
pop
pop
add
movs
add
pop
shr
stos
pop
xchg
shl
add
cmp
cdq
clc
mov
dec
loopne
and
gs
pusha
mov
fcom
add
les
lock
verw
sbb
loopne
dec
pop
cwde
mov
and
jle
and
out
pop
xchg
fwait
dec
cmps
inc
loope
sbb
movs
pop
mov
jp
add
push
jle
data16
mov
xlat
pop
mov
(bad)
jo
mov
scas
or
sub
mov
ret
dec
pop
(bad)
fiadd
add
add
out
inc
add
aam
sbb
add
dec
out
add
push
mov
push
or
es
add
inc
add
popa
or
jecxz
js
xchg
fnstenv
popf
pop
sti
add
push
sbb
aas
add
push
bound
repnz
add
jp
pop
aam
add
jae
add
and
in
(bad)
shr
add
xlat
adc
fstp
in
jnp
push
jmp
mov
add
add
add
adc
push
in
push
mov
stos
xor
jo
popf
add
jnp
add
cmp
push
add
pop
or
xchg
out
pop
inc
and
cmc
inc
fbld
ja
mov
fimul
add
fs
jge
push
adc
cmps
imul
add
jle
and
ins
jg
dec
xor
dec
mov
cmp
fst
sub
add
inc
fisub
daa
dec
add
ins
repnz
dec
cwde
lods
out
sbb
bound
pop
fistp
out
push
add
rol
inc
add
js
add
stos
imul
iret
mov
pusha
pop
(bad)
xchg
add
xchg
add
adc
sbb
sub
sub
jnp
pop
mov
and
and
mov
add
sub
aas
add
xchg
aaa
aad
(bad)
jmp
imul
add
mov
add
(bad)
hlt
popf
xchg
add
shr
arpl
fwait
mov
sbb
call
sub
lahf
jae
add
lea
mov
xchg
add
std
rcr
jp
pop
test
pop
add
mov
push
add
mov
add
xchg
add
imul
push
pushf
aad
test
and
add
add
push
pop
ret
sub
add
add
call
imul
out
nop
cmc
xchg
rol
push
sub
add
xor
inc
imul
jecxz
sti
sbb
(bad)
cmps
cmps
push
add
jne
repz
push
sub
add
fist
and
mov
mov
loop
add
repz
sbb
pushf
(bad)
aas
pop
cmp
adc
mov
test
and
sub
pop
mov
and
pushf
aaa
xor
push
add
adc
pop
std
and
xor
dec
sti
fiadd
add
add
(bad)
add
arpl
inc
hlt
ds
mov
repz
aas
add
xchg
repz
lds
test
pop
sub
push
push
cmps
or
stos
ficom
cmp
mov
(bad)
sub
add
dec
add
push
add
mov
adc
add
sbb
sub
cdq
pop
add
shr
jg
in
push
addr16
push
leave
add
pusha
push
xchg
ss
ins
in
mov
enter
div
add
pop
add
cmp
aam
add
push
add
scas
xor
inc
add
push
inc
mov
jmp
stos
ins
add
add
push
arpl
add
add
in
popf
push
wrmsr
lods
cmc
xchg
xchg
mov
add
add
frstor
sub
mov
add
scas
xchg
shl
mov
lds
add
or
add
lea
add
sbb
add
adc
sbb
add
jecxz
add
movs
js
jmp
fwait
push
retf
xor
or
fst
and
ss
dec
js
call
shr
call
add
shl
add
aaa
retf
add
sbb
fwait
add
push
cmp
fld
pusha
cmp
out
adc
inc
std
inc
xchg
add
pop
fwait
mov
sbb
mov
(bad)
jmp
cmp
xchg
aam
fild
loope
adc
ins
xlat
pop
test
cdq
int3
add
add
add
jbe
mov
push
test
xor
sahf
ret
sbb
xlat
imul
sahf
sbb
add
xchg
das
pusha
sbb
sbb
inc
jp
inc
fild
add
mov
pop
call
popa
add
hlt
adc
dec
data16
add
push
fld
test
cmp
mov
shl
fld
or
jno
push
xor
add
push
ror
(bad)
fbld
stc
sub
xlat
fisttp
add
pop
data16
in
adc
ja
fisubr
add
test
inc
cmp
add
int
adc
push
dec
add
test
(bad)
int
add
add
out
sbb
add
ret
xor
arpl
jne
(bad)
jmp
add
dec
dec
shl
cli
ror
add
push
or
add
rcr
push
add
int3
out
test
(bad)
add
mov
out
pushf
add
jle
or
pop
aaa
or
add
mov
or
jb
add
push
add
scas
add
(bad)
in
inc
ja
add
clc
(bad)
or
mov
(bad)
fsubr
fcomp
add
mov
sub
out
add
aad
inc
pop
mov
mov
jne
or
nop
lahf
or
js
sbb
shl
adc
ret
(bad)
lods
(bad)
mov
mov
inc
add
aam
pop
hlt
add
add
cmp
add
ins
out
add
push
add
dec
add
rcl
test
fs
and
add
xor
into
push
es
add
pusha
call
ins
(bad)
push
sub
ret
popf
and
test
sub
unpckhps
add
mov
pop
rol
movs
repnz
or
xor
xlat
dec
lock
les
ds
add
inc
stc
jno
lds
ror
and
sbb
add
add
jo
arpl
jo
dec
addr16
fisttp
add
aam
add
lock
jge
cmp
fistp
fisttp
inc
shr
dec
inc
add
jae
mov
pop
repz
xchg
cmovnp
sbb
xchg
aad
push
arpl
mov
add
fld
add
dec
inc
rol
add
fdiv
push
jns
jp
inc
(bad)
xchg
add
lea
xor
ja
add
xor
add
adc
cmp
fidiv
push
mov
inc
hlt
add
test
mov
sbb
retf
and
add
test
add
sbb
add
pop
dec
add
cmc
adc
sub
mov
out
in
ror
sbb
add
sahf
(bad)
mov
xor
inc
mov
out
adc
popa
ja
fwait
jge
fwait
xor
add
iret
jge
mov
arpl
mov
std
jmp
es
add
fcmovnb
xor
add
in
rol
add
or
add
jne
push
inc
push
mov
cld
jge
cli
repnz
mov
sbb
arpl
ins
arpl
add
ds
add
addr16
lea
jmp
sub
xchg
cmp
push
and
add
cmp
scas
inc
adc
xchg
cld
mov
xchg
mov
xor
add
add
add
sbb
lods
call
xor
xchg
add
idiv
aam
aaa
adc
add
jecxz
push
cmp
loop
or
arpl
test
into
push
jno
mov
xor
addr16
mov
and
mov
ficom
pop
fiadd
mov
add
xlat
mov
gs
inc
ja
scas
xchg
aaa
pusha
adc
pop
push
xchg
out
les
ins
loop
add
add
stos
int3
lea
and
add
and
xor
jns
and
lods
out
test
xchg
stc
and
inc
repnz
cmp
add
cmp
ins
sub
mov
movs
daa
into
add
add
cld
dec
inc
ss
ret
(bad)
jge
add
sub
mov
add
xor
add
loope
xchg
dec
add
cwde
stos
add
cmps
pop
jnp
add
bound
add
add
xor
add
aam
addr16
add
repz
cdq
or
add
xchg
lods
add
add
add
push
aas
popf
pop
test
imul
jge
cmp
add
les
sahf
aam
cmp
add
xchg
sbb
in
add
cmps
cdq
jg
arpl
add
int
add
sar
push
cmp
dec
mov
sub
(bad)
add
sbb
push
add
dec
or
dec
sahf
lock
sub
push
or
jmp
js
shr
dec
mov
add
mov
add
xor
add
add
mov
and
xor
out
test
clc
std
add
inc
pop
add
and
leave
in
loopne
add
add
(bad)
ficom
in
add
loope
mov
test
adc
rol
outs
mov
add
fst
cmps
fist
mov
mov
sbb
add
imul
movs
stc
aad
or
jecxz
inc
add
jecxz
jecxz
outs
add
mov
xchg
adc
add
push
add
xor
cmp
js
add
repz
add
add
sbb
add
mov
fcmovb
adc
scas
add
aam
cmp
inc
repnz
pop
or
in
retf
and
push
mov
push
and
pop
pop
ror
add
pop
sub
ss
clc
(bad)
gs
es
shl
dec
sbb
aaa
add
in
test
sub
rol
add
pop
cmp
add
add
lods
xor
add
lock
push
mov
mov
lods
stc
mov
das
xchg
test
dec
fsub
add
sub
jb
sti
stc
add
add
pusha
sub
aam
jnp
add
jg
hlt
mov
adc
outs
add
sub
add
sbb
mov
and
inc
add
pusha
stos
or
gs
push
movs
push
or
dec
and
pop
add
popa
add
dec
jg
jno
adc
cmp
add
aas
xchg
jecxz
aam
(bad)
jno
add
cmp
add
inc
movs
call
add
mov
(bad)
sub
add
lds
sbb
jp
mov
push
add
fistp
add
xchg
pop
fs
outs
mov
sub
add
add
push
cmps
xchg
scas
add
ins
push
add
out
add
add
mov
sub
call
mov
add
cmp
stc
movs
mov
and
add
outs
rcr
fnsave
test
xchg
fs
nop
in
pusha
cmp
lods
xor
fwait
inc
dec
addr16
fild
jle
in
add
mov
add
mov
lods
add
dec
jno
stos
fbstp
add
call
daa
popf
mov
push
add
addr16
cmps
aaa
push
call
pop
add
loope
add
mov
aad
out
push
xchg
pop
push
add
add
stos
fstp
call
mov
or
add
adc
lods
and
cdq
jmp
cs
in
add
stos
loopne
add
loop
xlat
inc
or
add
add
xor
push
scas
or
hlt
mov
mov
dec
add
cld
jl
or
pop
cmp
es
sbb
add
inc
cmp
cwde
xchg
out
pusha
aam
and
add
stos
inc
(bad)
xor
add
push
(bad)
lock
add
push
dec
rol
pop
aam
push
sub
ror
cmc
or
mov
add
sahf
pop
xor
cmp
jo
ss
add
mov
add
jb
xor
xor
add
inc
dec
daa
lods
jbe
add
cmp
daa
add
test
add
bound
fidiv
xlat
jbe
add
add
add
add
cmp
add
mov
add
add
add
and
test
adc
push
dec
add
call
pop
ins
push
popf
cmps
jo
arpl
adc
add
add
cmp
add
cmp
pop
scas
ss
stos
and
jne
mov
add
imul
sar
(bad)
into
hlt
sub
into
push
jp
mov
jle
ins
(bad)
pop
push
jl
into
dec
movs
push
push
jae
lahf
pop
add
daa
lods
add
sub
adc
jg
add
shr
scas
icebp
outs
cli
mov
jno
add
movs
icebp
test
mov
xor
dec
and
nop
xor
add
add
mov
inc
add
stos
cmps
mov
add
jne
data16
(bad)
pop
pop
call
add
ja
add
daa
or
test
fcmovbe
add
xlat
or
mov
add
inc
mov
mov
fld
add
jns
add
mov
(bad)
inc
add
out
cmp
cmp
xchg
or
test
pop
push
(bad)
and
ret
inc
aad
dec
pop
ins
sbb
add
mov
add
iret
dec
jno
xchg
sbb
mov
lds
add
popf
sbb
add
retf
and
add
or
xchg
cmp
popa
aam
sbb
add
mov
push
out
inc
push
retf
in
popf
sti
add
adc
xor
mov
add
xor
ret
pusha
add
xor
popa
sbb
icebp
cmps
add
ins
ja
add
add
xchg
xor
add
jg
add
std
adc
adc
stos
cld
cmps
jbe
jmp
add
shl
mov
and
ins
imul
daa
outs
adc
cmp
stos
pop
dec
or
icebp
fs
jecxz
add
out
dec
addr16
cs
add
(bad)
xor
add
inc
mov
mov
xchg
add
sub
inc
test
out
sub
mov
in
add
int
add
jnp
mov
adc
sub
hlt
scas
add
add
out
mov
jmp
sub
mov
das
and
push
cmp
mov
sub
addr16
adc
(bad)
enter
fistp
add
sub
(bad)
jo
icebp
cmps
(bad)
jnp
add
jns
lds
sti
jmp
movs
add
mov
cmp
add
push
add
cld
inc
add
pop
test
add
sahf
pop
sbb
sbb
idiv
jle
in
fbld
pop
or
jge
mov
inc
xor
iret
and
add
dec
enter
xor
outs
inc
add
test
or
xor
add
leave
pop
jo
add
jne
add
add
adc
lock
push
mov
and
add
outs
(bad)
jo
mov
add
jb
jge
out
stos
scas
and
pop
or
pop
push
push
xchg
jno
add
add
or
cmps
jno
repnz
sub
fdivp
dec
add
add
sbb
add
in
ror
loope
(bad)
pop
fwait
and
add
leave
xlat
add
stos
not
dec
dec
dec
xor
sbb
sbb
imul
add
iret
adc
add
cmp
or
popa
add
in
add
mov
add
pop
and
ret
add
pop
ins
dec
test
xchg
ins
mov
xchg
test
mov
or
add
fwait
add
mov
add
and
out
sbb
popf
lock
add
add
jne
or
mov
cmp
mov
dec
add
inc
add
add
cmps
push
cmp
xor
add
iret
arpl
inc
jle
inc
xor
arpl
and
popf
push
ins
rol
push
(bad)
mov
mov
cmp
ss
sbb
add
add
out
shr
loope
add
sahf
sub
sub
or
ja
sbb
mov
rol
add
lods
cmp
add
test
sbb
lds
dec
mov
and
fiadd
test
pop
repnz
ja
cdq
pushf
add
cmps
iret
lds
add
sub
cmp
or
add
add
push
imul
push
inc
add
dec
shl
add
adc
scas
fsub
inc
xor
add
scas
aas
xchg
jg
adc
add
dec
push
push
mov
pop
clc
sub
add
push
retf
arpl
add
daa
dec
add
loop
pop
xchg
stos
mov
add
add
or
in
je
add
rol
les
pop
add
cmp
add
add
and
add
repnz
sub
add
push
xor
pop
jmp
pusha
xor
add
pop
out
inc
lahf
xor
pop
xchg
add
mov
int
mov
add
movs
mov
pop
mov
sbb
popf
mov
inc
mov
pop
(bad)
out
mov
push
mov
sar
add
stc
shl
das
mov
fidiv
dec
xor
lock
retf
add
push
xchg
mov
sub
fs
dec
imul
fadd
add
add
and
(bad)
add
test
jae
push
icebp
inc
jns
add
lea
pop
fidivr
add
arpl
dec
cmp
jmp
push
in
push
out
and
mov
rol
inc
in
jle
adc
add
add
inc
add
jbe
add
xor
inc
cdq
jb
lods
icebp
pop
add
daa
mov
or
clc
mov
movs
xor
icebp
arpl
test
inc
jbe
jmp
fmul
add
mov
add
mov
cmp
jge
mov
imul
lods
jecxz
sbb
add
push
(bad)
jo
add
cmp
cmp
mov
xlat
pop
hlt
or
cmp
add
pop
leave
add
dec
add
add
jp
shl
add
mov
sbb
add
loope
jb
add
pushf
arpl
and
add
stos
fdiv
aas
sub
xchg
pop
mov
add
lahf
pop
les
bnd
call
add
rol
add
pushf
cmp
retf
imul
daa
xchg
pop
xchg
jg
push
sub
popa
or
retf
cld
ficomp
add
xlat
dec
out
sub
jge
add
sub
cmps
add
mov
mov
frstor
sbb
fdivr
add
add
add
data16
mov
(bad)
call
jge
add
loope
add
dec
bound
cmp
xor
mov
mov
add
add
mov
push
ja
dec
sub
adc
movs
in
adc
cmp
add
sub
das
jmp
add
mov
jo
add
test
xchg
add
jo
cmp
nop
loopne
(bad)
xchg
shl
pop
(bad)
mov
add
shl
add
iret
adc
ret
add
mov
ret
xchg
stc
inc
mov
jp
mov
add
add
repz
push
ins
push
inc
sbb
sbb
pop
inc
add
fild
ret
repz
add
inc
add
mov
mov
les
add
add
call
xor
mov
add
xchg
es
xchg
or
add
fcmovu
ins
pusha
mov
adc
add
jl
add
pop
mov
imul
cwde
adc
mov
arpl
cs
add
out
stc
mov
add
or
sti
movs
jmp
inc
std
cmp
dec
shl
test
add
push
repz
add
jecxz
add
sbb
add
pop
ja
jl
xchg
add
scas
int3
jmp
inc
lock
add
dec
add
cdq
xor
inc
dec
mov
mov
jge
enter
xlat
xor
(bad)
(bad)
ja
scas
les
fiadd
test
push
add
pop
out
stos
sub
lea
inc
xchg
test
leave
mov
and
add
add
retf
(bad)
movs
imul
inc
sub
fimul
mov
dec
sbb
mov
add
aaa
dec
sub
enter
cs
add
mov
sbb
jp
add
adc
add
retf
dec
inc
xor
ror
add
add
jbe
fcom
jge
sar
add
push
and
xchg
mov
stc
inc
pop
out
and
add
inc
xchg
mov
aad
inc
cmp
(bad)
mov
pop
stos
xchg
inc
pop
jmp
ror
xchg
add
add
xor
pop
xchg
es
add
popa
push
add
fidivr
sbb
out
add
pop
mov
xchg
add
mov
add
xchg
and
add
fmul
add
shl
mov
add
adc
jne
add
(bad)
jle
cs
enter
or
call
rcr
add
push
loopne
test
pop
add
popa
dec
add
mov
pop
adc
lahf
ds
sbb
movs
adc
ja
push
fcomp
in
xor
lods
jg
(bad)
add
xor
add
add
in
retf
adc
and
add
ret
(bad)
je
inc
jl
test
sub
mov
and
add
push
add
in
imul
mov
in
in
mov
lods
(bad)
stc
aad
outs
xchg
aam
jnp
add
out
mov
inc
adc
add
cvtps2pd
add
cmps
aas
mul
outs
out
or
jae
add
jne
stc
push
push
xor
add
mov
cmp
push
xor
jb
jns
or
fiadd
jmp
ss
fsub
sldt
movs
call
xor
cmp
push
fdiv
add
xchg
add
adc
mov
cwde
xchg
add
sub
arpl
addr16
and
out
xchg
test
add
and
add
sahf
aam
adc
add
fs
mov
add
push
imul
ins
daa
ss
add
add
mov
add
add
std
push
sub
add
add
arpl
ret
push
mov
jns
mov
push
add
aas
add
ins
add
and
ja
add
mov
add
aad
icebp
div
std
sub
pushf
fdiv
js
outs
call
jno
adc
add
and
add
mov
mov
add
pop
cmc
(bad)
push
inc
in
sbb
inc
pushf
add
or
add
in
add
and
div
push
add
xchg
lock
add
test
add
repnz
mov
mov
mov
add
jno
sahf
add
in
fisubr
ins
add
imul
add
pop
push
mov
fisubr
jae
data16
jns
add
adc
fld
add
adc
add
add
add
aaa
fldenv
add
mov
and
push
add
aad
test
add
xlat
and
dec
and
pusha
xor
mov
sub
popf
add
rol
int
sub
mov
adc
inc
es
push
add
jo
push
rcr
add
pushf
add
addr16
jmp
sahf
add
or
mov
dec
xchg
into
add
aam
data16
mov
(bad)
sub
sub
cs
add
movs
push
adc
add
or
mov
adc
mov
push
mov
add
add
sub
adc
add
pop
xor
sbb
push
aas
add
push
inc
xchg
mov
fs
push
add
loope
add
retf
dec
mov
mov
lods
pop
mov
jecxz
add
xlat
pop
xor
stos
dec
add
jmp
mov
cmp
call
test
xchg
into
add
sahf
add
xchg
into
test
add
imul
push
inc
pop
sbb
inc
retf
std
leave
mov
mov
fisubr
outs
xchg
xor
mov
xlat
mul
push
jp
sbb
add
icebp
push
or
push
call
add
(bad)
jmp
and
jmp
add
(bad)
jge
jo
stos
mov
pop
adc
mov
push
and
mov
add
aas
dec
add
ret
add
sub
add
sar
adc
cld
mov
addr16
mov
add
cwde
shr
aad
add
add
add
(bad)
jmp
add
xchg
pop
jmp
arpl
pop
jge
jp
fidivr
ins
gs
test
stos
ds
push
pop
in
ss
xor
add
or
inc
pop
ja
(bad)
push
enter
shl
adc
add
adc
pop
add
aaa
test
sar
xchg
arpl
rcr
xchg
or
pop
sub
mov
mov
xchg
gs
sbb
mov
add
xchg
fst
ins
daa
mov
push
mov
push
or
add
ja
cli
mov
lea
lds
xor
jbe
in
fcmovnbe
jmp
inc
scas
test
add
pop
popf
sbb
rcr
add
repnz
xor
jle
add
jb
or
xchg
addr16
add
sub
add
nop
std
fbstp
add
clc
push
add
pop
into
push
mov
or
(bad)
cmp
mov
icebp
or
xchg
add
pop
xchg
gs
pop
call
add
or
xor
xor
pop
rol
pop
adc
lds
and
add
(bad)
imul
ja
mov
add
add
mov
add
xor
(bad)
imul
hlt
out
mov
les
mov
retf
jmp
add
gs
ret
das
sub
push
(bad)
div
lods
jp
movs
adc
fucompp
shl
stos
cmp
mov
fst
mov
mov
add
add
cmp
add
sbb
aad
add
pop
ins
xchg
lahf
xchg
fisub
out
cs
mov
or
mov
jae
adc
retf
xor
cwde
div
jge
add
ret
stos
xor
jo
add
cmp
inc
outs
retf
dec
dec
add
(bad)
ss
rcl
arpl
pop
jg
pop
add
add
loop
mov
mov
test
mov
and
(bad)
daa
mov
mov
jnp
push
retf
ja
cmp
xchg
jl
std
in
add
push
sub
aas
add
add
add
jmp
ins
add
movzx
add
push
add
or
imul
stc
addr16
jle
xchg
les
and
aas
sbb
and
gs
cmp
pusha
or
push
pop
in
xor
dec
push
jmp
add
jge
add
push
sbb
adc
or
mov
mov
ins
push
cmp
(bad)
outs
ja
loopne
out
adc
shr
add
lods
xlat
jo
xchg
jl
add
jnp
outs
add
cdq
pop
add
daa
add
add
mov
push
repnz
cmp
mov
xor
sbb
xchg
add
dec
fdivr
adc
jg
enter
mov
bound
mov
xor
loop
in
mov
xchg
jp
mov
add
xor
popa
xchg
das
into
add
test
add
aam
sbb
jle
add
push
cmp
jns
dec
mov
lahf
adc
ja
sub
xlat
push
push
add
xchg
fs
or
add
adc
mov
jnp
cli
and
arpl
add
sub
or
add
sub
xor
add
retf
add
add
push
out
mov
test
clc
add
clc
test
sbb
addr16
lahf
inc
sub
iret
add
add
fs
nop
dec
mov
icebp
cmp
retf
int
add
(bad)
test
add
loope
and
ins
push
xor
jnp
and
xor
add
icebp
or
push
sub
xlat
push
mov
sbb
inc
and
add
mov
movs
sub
push
add
push
push
sbb
(bad)
and
cwde
dec
mov
sahf
inc
pop
std
aaa
lea
add
popa
cmp
popa
pop
xchg
xchg
and
retf
mov
icebp
adc
jns
add
adc
adc
push
add
sbb
add
add
adc
mov
retf
and
js
add
pop
add
fwait
fwait
push
xor
not
add
add
fidiv
xchg
into
add
outs
mov
pop
jnp
xchg
add
xchg
lods
fld
or
cmps
pop
mov
add
xchg
pop
stc
test
rol
or
xchg
xchg
mov
dec
dec
push
and
add
stc
dec
call
jp
add
add
ret
sub
or
add
inc
leave
shl
add
sub
add
ins
sbb
add
scas
add
xchg
imul
add
or
add
in
gs
sbb
sub
aaa
sub
fs
xchg
aaa
pop
test
les
inc
ss
mov
data16
push
add
add
add
in
add
outs
jp
jnp
add
mov
cmp
mov
add
sbb
add
scas
or
add
in
stos
fsubr
mov
pop
int
mov
push
cmps
add
jbe
adc
iret
and
sbb
adc
mov
scas
push
cs
ror
add
clc
scas
mov
add
and
pop
das
mov
add
leave
retf
add
dec
pop
push
out
les
rcr
std
jmp
mov
lods
es
aas
jo
movs
sbb
dec
pusha
(bad)
adc
outs
and
add
add
test
pop
add
or
div
loopne
add
cmps
mov
fldenv
lds
in
adc
cmps
addr16
pop
add
imul
add
(bad)
cmp
jnp
shl
push
or
sub
imul
add
mov
xchg
add
jg
cs
cmps
add
add
dec
cmc
pop
out
ds
out
add
cmps
add
xor
xlat
shl
div
pop
retf
xchg
rol
add
mov
add
mov
popa
add
pop
add
cmps
outs
lea
int
add
sbb
test
push
inc
xor
add
inc
add
jno
pop
mov
out
cld
(bad)
add
jmp
add
pop
stos
rcr
or
add
or
sbb
xor
xchg
dec
push
add
sub
adc
mov
inc
dec
lea
dec
push
add
test
jne
not
cdq
add
cmp
bound
mov
imul
add
add
xchg
loope
mov
cdq
or
pop
dec
add
pop
loop
xor
test
and
push
xchg
lahf
into
and
push
dec
pop
inc
xchg
test
sub
add
aas
(bad)
imul
iret
add
jle
add
push
add
inc
and
imul
arpl
mov
stos
cld
clc
dec
test
pop
scas
sbb
adc
and
ds
(bad)
scas
pop
add
inc
cmp
in
icebp
push
sbb
xchg
or
test
fsub
sbb
lds
mov
jno
mov
pusha
lahf
mov
push
rcl
xor
repnz
add
pop
cmps
add
les
xchg
or
adc
lea
sub
enter
dec
add
cld
daa
and
data16
pop
add
pop
inc
movs
add
pop
xor
push
mov
popa
aas
add
xchg
pop
das
stos
adc
cmc
push
shl
xchg
pop
mov
cwde
outs
test
inc
add
add
and
lods
popa
add
add
mov
rol
add
(bad)
leave
xor
stc
les
xor
xchg
sub
ds
jg
js
loop
cmp
dec
sub
mov
movs
xor
fadd
stc
adc
add
xor
(bad)
sub
add
add
and
out
bound
repz
lods
mov
retf
adc
add
add
add
lods
xlat
xchg
clc
add
push
or
mov
scas
jg
jle
aas
add
dec
sti
outs
dec
push
jnp
(bad)
jb
add
ds
pop
mov
sbb
xchg
add
mov
das
xchg
adc
jl
(bad)
cmc
add
ins
add
call
mov
jb
mov
add
sbb
add
imul
push
xchg
add
push
xchg
inc
adc
add
pusha
add
retf
add
jecxz
add
popf
ret
push
inc
ss
jmp
add
and
mov
stos
add
sub
pop
jg
out
add
sub
add
add
rcr
retf
nop
push
xchg
daa
pusha
add
mov
xor
cs
ror
add
push
sub
and
add
jmp
add
jno
dec
sbb
inc
sub
outs
lds
daa
add
lahf
lahf
add
xlat
mov
cmp
add
dec
rol
cli
add
cmp
jb
leave
pushf
add
push
mov
add
dec
add
pop
add
add
popf
fnstcw
and
retf
mov
fbld
cdq
inc
add
add
mov
add
pop
cli
mov
pushf
lods
aaa
fild
icebp
cmp
daa
dec
mov
lea
add
mov
pop
mov
dec
(bad)
add
cmps
dec
push
aad
push
cdq
inc
daa
xor
lods
ret
inc
mov
inc
jg
push
retf
mov
add
aaa
add
add
rcr
push
add
leave
jp
jns
push
xlat
movs
cmp
inc
jae
test
adc
xor
loop
scas
outs
add
sbb
xor
add
add
fwait
and
ins
add
addr16
std
mov
cs
cmp
add
jnp
sbb
dec
sti
add
pop
scas
xor
nop
sbb
bound
push
sbb
xor
or
add
mov
fsub
add
xor
into
call
pop
add
pop
xchg
mov
sub
add
test
sub
add
cdq
mov
jle
movs
cmc
test
jnp
or
add
add
test
inc
push
add
dec
dec
fld
add
jmp
out
cmp
icebp
std
jmp
(bad)
ds
add
xchg
sbb
jmp
into
call
add
into
sub
add
sub
popf
xor
lahf
mov
retf
add
in
add
mov
push
dec
icebp
ffree
add
xor
push
shl
add
jmp
movs
inc
dec
add
push
aas
add
rcr
add
outs
add
add
dec
add
mov
fs
pusha
mov
xlat
dec
add
loopne
lahf
sub
push
add
pushf
fwait
or
inc
add
mov
mov
xor
daa
dec
stos
mov
enter
jp
inc
add
lods
push
je
sbb
add
dec
add
add
pop
mov
add
cs
dec
add
add
scas
int
call
jmp
xchg
xor
int
shl
or
pushf
test
outs
fmul
xlat
or
mov
fcmovb
fild
add
(bad)
(bad)
jne
or
push
jmp
and
lock
jge
jp
fisub
aam
aaa
cs
add
cmp
sbb
fst
idiv
pop
test
add
pcmpeqb
pop
mov
daa
inc
push
add
add
imul
fistp
out
add
dec
sub
mov
stc
in
adc
and
sbb
or
sub
and
push
add
fcmovne
xor
add
dec
push
add
cmps
and
pop
xor
add
(bad)
popf
add
add
sbb
cmp
adc
into
xchg
push
jecxz
lahf
stc
out
mov
add
bound
call
das
cmp
rcr
cli
adc
mov
add
fcomp
dec
mov
test
or
xor
jl
add
jmp
mov
add
inc
test
call
stos
pop
push
clc
mov
movs
retf
mov
bound
mov
mov
cmp
add
out
push
mov
ins
add
add
ror
imul
out
add
mov
test
cmp
add
out
xchg
mov
enter
data16
imul
adc
cmps
add
nop
popa
add
jmp
icebp
push
aaa
mov
dec
pop
xor
add
mov
adc
mov
(bad)
loope
jne
mov
add
xor
add
push
dec
test
loopne
add
pop
cwde
hlt
imul
dec
ins
add
push
je
jle
leave
dec
fild
add
add
jecxz
ja
sub
inc
pop
mul
cs
mov
add
cmp
push
lahf
ret
popa
enter
fisubr
jno
ins
les
add
sahf
scas
add
pop
sub
or
add
sbb
add
add
add
sahf
adc
jg
ret
add
jne
jecxz
add
in
scas
fwait
out
in
popa
add
int
cmp
and
mov
or
lea
add
add
xor
imul
add
(bad)
jo
cmp
mov
adc
xor
daa
sti
adc
mov
jl
sar
jnp
lds
aad
outs
add
sbb
loope
add
jne
test
add
add
leave
add
add
inc
adc
pop
add
push
imul
fild
mov
add
add
stos
jnp
add
push
push
or
repnz
in
gs
pusha
jmp
or
std
out
outs
sub
add
data16
and
cld
cmps
scas
and
xchg
add
sbb
mov
or
scas
scas
repnz
add
sub
add
or
inc
add
mov
pop
popa
jg
add
xchg
ret
lock
aas
pop
call
rcr
add
adc
pop
ds
shr
sub
test
ins
add
ja
inc
retf
add
xchg
add
mov
scas
scas
inc
dec
inc
iret
cmp
pop
sbb
cmp
xor
imul
imul
add
sti
cmp
jmp
mov
xor
fbstp
dec
cmp
pusha
xchg
adc
pop
push
add
js
inc
mov
xchg
in
out
ja
pop
(bad)
out
dec
xor
add
push
dec
retf
inc
stos
call
mov
fbstp
mov
sub
sub
pop
jbe
(bad)
leave
or
sub
enter
idiv
xchg
popf
jp
jmp
mov
pop
and
sub
push
xor
cmp
add
jno
stc
add
add
push
add
rol
add
(bad)
dec
loop
add
xchg
add
ja
mov
lahf
adc
fiadd
popf
add
outs
sbb
jle
xor
or
inc
pop
or
js
pop
aad
lock
and
fcmovnbe
and
adc
add
jge
add
lock
hlt
or
je
inc
(bad)
out
add
push
daa
das
sti
std
add
ins
pop
test
push
dec
scas
add
xor
call
stos
cmp
sti
movs
pop
add
mul
dec
mov
mov
add
or
add
scas
add
ins
xchg
push
add
dec
loope
add
dec
add
les
pop
add
shl
fild
pop
inc
in
adc
dec
dec
out
dec
or
sub
add
std
adc
add
add
and
push
or
cmp
leave
add
pop
ror
in
add
nop
xchg
pusha
or
inc
sub
add
mov
sbb
xchg
iret
xchg
pop
add
add
mov
inc
nop
fdiv
cmp
in
xchg
add
mov
ss
inc
adc
pop
or
add
stos
jo
iret
add
in
cmps
mov
cmc
add
xchg
add
mov
dec
add
and
mov
add
cmp
loop
adc
pop
jg
std
jmp
add
adc
sub
es
mov
sbb
jmp
fchs
inc
push
loopne
push
popf
pop
js
dec
(bad)
fucomip
mov
cmp
fldcw
addr16
lahf
imul
mov
xor
inc
sub
or
add
stos
add
outs
add
add
add
lahf
lods
add
cwde
scas
push
mov
leave
pop
lods
add
lods
add
inc
mov
add
ror
scas
mov
fs
or
(bad)
add
add
loop
arpl
mov
(bad)
mov
loopne
clc
shr
xor
outs
add
add
cwde
mov
in
add
imul
add
sbb
sbb
add
lds
jmp
call
(bad)
xor
imul
add
xchg
add
or
mov
and
mov
fld
xchg
mov
add
sbb
add
xor
in
cmps
cmp
lods
movs
inc
sub
test
cmp
add
cmps
sbb
pop
sldt
loop
add
test
add
cmps
inc
inc
ins
arpl
pop
pop
jno
ret
in
cmps
mov
jne
jmp
ss
sbb
pop
adc
cmp
in
xor
mov
fdiv
xor
jg
add
add
add
mov
sets
sti
add
sbb
push
add
or
add
mov
fdiv
inc
outs
push
push
add
sbb
aad
and
and
dec
dec
xchg
retf
jl
add
lds
fs
add
fwait
cmp
adc
cmp
xchg
add
push
xor
add
add
cmp
xchg
adc
sbb
(bad)
inc
movs
jns
add
bound
add
or
add
into
mov
adc
add
loope
fstp
imul
call
add
or
xchg
add
loope
imul
mul
stc
scas
ficom
xlat
rcl
xor
stos
dec
nop
and
les
scas
or
add
add
inc
sbb
add
add
jmp
retf
fild
add
rol
add
pop
add
loope
test
push
test
mov
add
sbb
add
push
dec
add
lea
jp
sub
pop
jo
repz
add
xchg
scas
push
rcr
call
inc
add
dec
add
xchg
mov
add
and
adc
ins
inc
mov
add
xchg
je
jmp
pop
add
jo
add
mov
mov
fcmovnb
and
cmc
inc
daa
scas
and
in
jmp
mov
shr
push
test
lea
rol
(bad)
popf
xchg
gs
fwait
push
xor
dec
or
push
add
jge
add
enter
push
cmp
sbb
add
movs
add
add
jecxz
mov
(bad)
add
jmp
add
jns
not
pop
xchg
std
ret
xor
add
add
xor
xor
add
(bad)
cmc
sub
add
add
inc
scas
ja
add
sub
jecxz
sbb
add
xchg
inc
xor
add
sbb
out
add
fcomp
add
sbb
mov
ret
add
(bad)
sub
add
cwde
in
mov
add
dec
xchg
add
dec
mov
lahf
lahf
fist
jge
lods
out
sub
mov
or
data16
retf
jns
mov
add
add
(bad)
frstor
test
in
adc
add
add
mov
cmc
cld
imul
sub
xchg
arpl
iret
inc
add
inc
add
ds
add
pop
fisubr
xchg
add
xchg
jge
add
js
or
cmc
cld
retf
cmp
sbb
mov
sub
dec
cwde
dec
add
movs
push
gs
enter
aam
popf
add
add
shl
mov
or
pop
dec
loop
add
add
pop
das
mov
fxch
and
inc
mov
div
out
sti
dec
add
test
fcmovne
out
push
sbb
sbb
pop
cmc
icebp
add
out
add
gs
scas
popa
mov
in
push
xchg
lods
or
iret
add
xchg
add
popa
cmp
(bad)
fs
jmp
outs
sbb
ds
and
fbstp
add
enter
xchg
loop
sub
out
(bad)
imul
add
adc
loopne
mov
shl
movs
sar
sahf
dec
fnstcw
add
shl
(bad)
ins
add
repz
push
lods
fisttp
pop
xchg
pop
mov
addr16
pusha
add
xchg
push
add
sub
mov
pop
xor
and
add
xchg
fldcw
dec
sbb
add
lahf
add
mov
loopne
xchg
imul
sbb
add
retf
add
je
test
in
add
lahf
pop
cmps
add
mul
pop
out
mov
lahf
or
rcl
aaa
push
add
add
mov
nop
or
jg
adc
jb
add
test
jge
add
pop
out
jp
xor
dec
in
mov
or
clc
add
shl
add
outs
lods
add
sbb
add
cmp
out
int
in
call
push
cli
and
movs
xor
xchg
rcl
mov
outs
out
shl
aad
jp
add
fxtract
xor
sbb
das
sbb
and
je
call
jge
jbe
mov
pop
hlt
and
imul
popf
and
or
add
cs
popf
xchg
push
add
pop
dec
bound
int3
xor
add
adc
add
retf
fiadd
mov
mov
outs
cmc
inc
add
push
add
scas
mov
add
add
mov
mov
addr16
test
mov
jnp
stc
cdq
add
xor
adc
and
cmp
add
rcr
add
cmps
in
add
sub
sbb
sbb
pop
sub
arpl
mov
sub
aaa
add
add
dec
fldenv
mov
add
arpl
add
aas
jle
add
and
aas
mov
xor
cmps
jne
add
mov
aad
test
int3
pop
in
leave
xchg
cli
les
add
add
js
adc
test
pop
pop
ja
or
jbe
cdq
inc
sub
xchg
xor
enter
xchg
or
add
mov
or
imul
call
add
adc
inc
and
data16
add
retf
jo
add
outs
stc
pop
add
add
adc
mov
pop
add
xchg
jecxz
xor
test
out
add
push
neg
js
add
fadd
(bad)
mov
add
add
add
inc
dec
test
test
mov
add
add
lea
sub
outs
push
inc
hlt
xor
add
aad
and
add
fbstp
dec
add
dec
(bad)
xor
rep
xor
or
jns
add
dec
and
and
add
repnz
jp
add
inc
test
mov
push
loopne
or
inc
mov
pop
inc
mov
pop
mov
xchg
jmp
xchg
push
fadd
push
add
add
xchg
mov
pop
jle
mov
imul
ret
loopne
enter
jmp
jnp
test
lds
pop
cdq
aad
dec
nop
inc
pop
sub
stc
int3
(bad)
shl
add
sbb
sar
push
add
rol
lea
ds
fcomp
add
adc
sti
js
fidiv
sbb
loopne
rol
xor
xor
ret
inc
push
push
cmp
mov
xor
sbb
add
out
sti
or
add
push
mov
sub
mov
popf
lock
add
fwait
popa
push
cmp
and
add
add
enter
add
fadd
add
mov
call
xor
inc
(bad)
xchg
pushf
cdq
add
add
jbe
mov
fwait
pop
imul
add
lds
mov
aam
retf
das
das
xchg
fwait
push
push
sbb
or
imul
cmps
mov
fstp
mov
mov
adc
and
mov
mov
add
cmp
je
ret
add
repnz
scas
into
and
mov
sub
sub
nop
aaa
scas
in
ret
add
repnz
push
add
sub
add
jae
dec
add
ins
add
xchg
fdivrp
rol
(bad)
lods
loope
mov
add
add
add
popa
add
inc
lahf
movs
adc
or
and
add
ss
add
xor
sbb
jnp
add
shl
or
jecxz
xor
add
mov
or
mov
xchg
jmp
add
add
cmp
add
or
add
sbb
aaa
add
repz
jno
cmc
dec
rcl
push
sti
mov
imul
cs
xchg
(bad)
aam
and
jp
add
pop
cmc
bound
inc
test
or
repnz
add
mov
nop
pop
sbb
xchg
jge
add
rcl
push
add
jecxz
gs
sti
inc
repnz
add
add
test
inc
add
add
lock
loope
xchg
je
or
cmp
outs
lods
or
mov
sub
(bad)
push
dec
imul
add
or
dec
dec
add
popa
sub
out
jp
mov
gs
loope
adc
dec
push
push
mov
test
add
ins
mov
push
scas
es
ret
mov
movs
or
mov
es
popf
and
sub
add
inc
jnp
inc
add
xchg
je
arpl
inc
or
in
sub
fwait
jae
test
xchg
adc
adc
push
add
(bad)
js
xchg
add
jecxz
in
test
in
or
scas
add
sub
in
(bad)
xchg
call
test
into
mov
or
inc
out
daa
cmp
nop
add
cld
xchg
cmp
add
loope
mov
mov
inc
adc
jae
add
loopne
mov
xor
add
cmp
push
imul
jnp
retf
add
pop
add
adc
call
adc
ret
jno
cmp
adc
fistp
mov
popf
fisubr
add
popa
push
or
stc
stos
jp
(bad)
scas
popa
jecxz
add
add
nop
sub
pop
add
scas
add
add
rol
dec
inc
cmp
xor
add
pop
dec
arpl
sar
or
aad
pop
ror
add
cmc
and
xor
jp
add
add
jecxz
jmp
out
add
pusha
mov
pop
add
jae
mov
inc
das
or
popa
add
adc
mov
cmp
push
sbb
add
push
sub
add
aad
(bad)
sbb
and
fucomp
push
out
xchg
add
add
cli
fwait
outs
dec
jge
add
outs
nop
ins
xor
jb
out
inc
add
rol
repz
cmc
mov
mov
outs
jno
inc
mov
lahf
sub
sub
adc
int3
add
add
(bad)
and
jp
(bad)
mov
aad
add
add
loopne
pop
aaa
add
test
mov
and
ins
push
jle
add
gs
shr
lods
les
sub
add
lods
iret
sub
xor
call
add
iret
sub
jp
jbe
jns
add
test
fsubr
add
add
adc
out
in
adc
out
push
adc
stc
sub
and
add
leave
inc
push
mov
arpl
stos
sub
mov
mov
aad
push
pop
sbb
js
add
mov
jp
xor
mov
sbb
fnstsw
ss
das
les
mov
dec
jns
add
mov
pminsw
mov
inc
sbb
add
rcr
jmp
movaps
add
lahf
in
inc
sbb
mov
dec
retf
push
push
mov
cli
jl
pop
add
or
mov
mov
add
push
inc
adc
movs
and
add
mov
(bad)
(bad)
add
fadd
test
mov
fild
add
sub
call
test
add
adc
call
fs
xchg
add
outs
push
push
test
add
add
out
and
(bad)
lds
lahf
stos
movs
mov
inc
fiadd
jns
sub
inc
loope
jecxz
mov
add
add
sldt
sbb
add
sub
add
cli
sub
pop
mov
or
and
fld
fs
lock
ss
aas
popf
cmp
jmp
pop
arpl
or
inc
mov
clc
jecxz
push
fadd
std
stos
cmps
jns
add
stos
inc
sbb
add
add
sub
xor
aad
cmp
add
(bad)
(bad)
sub
add
mov
xchg
add
push
in
xchg
xchg
mov
push
add
pop
stos
add
inc
push
(bad)
mov
(bad)
add
lods
test
cli
int3
add
jo
xchg
jmp
bound
jae
add
add
test
pop
movs
add
mov
jae
pop
jae
daa
cs
add
imul
xchg
scas
dec
add
aas
xor
icebp
arpl
(bad)
pop
or
push
add
mov
(bad)
test
dec
leave
pop
add
dec
add
aam
jl
iret
in
xor
or
jns
sub
cmp
aaa
mov
add
jne
cmps
pop
mov
inc
mov
lock
add
and
add
scas
add
or
ja
dec
add
lods
lock
fdiv
inc
jl
sub
pop
rol
sub
shl
dec
add
test
cmp
cdq
aam
pop
add
jg
adc
and
mov
out
mov
(bad)
ins
int3
adc
repnz
dec
cwde
adc
add
icebp
add
add
push
add
jb
add
mov
cmps
jae
ret
add
mov
add
xor
cmp
dec
add
pushf
dec
xor
mov
sub
cmps
adc
push
je
outs
sub
or
and
xchg
add
xor
add
add
add
hlt
add
mov
mov
sbb
jns
into
mov
adc
icebp
jmp
lods
xchg
aas
retf
cdq
or
popa
mov
cld
into
sbb
in
add
xor
add
jne
sbb
add
xlat
mov
dec
jge
call
add
or
add
add
xor
ja
inc
dec
mov
(bad)
movs
jbe
retf
cdq
xchg
fmul
add
call
data16
shr
add
mov
loopne
test
add
or
adc
add
ins
fdivr
add
lea
stos
xor
ret
push
ds
xor
add
inc
inc
jmp
pop
ins
or
push
pop
mov
jmp
or
and
ret
out
in
test
jo
in
jp
enter
ins
add
dec
and
add
dec
mov
adc
jbe
arpl
sub
mov
aas
add
enter
pop
adc
pop
adc
add
push
sbb
xchg
cmps
cmp
fwait
jmp
sbb
lods
icebp
inc
in
dec
fisub
sub
out
xchg
add
add
inc
mov
add
out
add
int3
retf
rol
test
add
adc
or
cmp
and
fwait
cdq
dec
push
js
enter
xchg
pop
mov
mov
cmp
test
add
aaa
js
add
xor
call
dec
jp
rol
lds
xchg
es
xor
add
xchg
xchg
add
scas
rol
in
jg
add
pop
js
add
push
xor
pop
aad
jb
jge
jle
in
add
out
mov
sar
shl
fisttp
jecxz
push
add
or
mov
cmp
inc
ret
aad
add
(bad)
out
call
ins
push
(bad)
fld
add
xor
int
(bad)
jbe
cs
pop
jg
leave
stc
add
xchg
clc
hlt
add
cmp
cmp
add
sbb
jnp
ds
aam
pop
(bad)
ror
inc
add
pop
pop
jmp
jp
mov
enter
or
mov
sub
cmc
loop
and
add
add
or
adc
out
adc
push
add
les
add
jno
mov
add
inc
add
and
fcom
xchg
rol
mov
popf
inc
out
cli
into
and
sbb
mov
add
mov
or
(bad)
scas
imul
outs
inc
add
add
dec
mov
jg
mov
push
fwait
pop
test
shr
add
and
daa
and
add
pop
shl
dec
out
add
sbb
mov
out
mov
retf
jmp
jno
jnp
dec
add
imul
add
push
(bad)
pop
sbb
arpl
dec
add
imul
add
in
inc
pop
jb
dec
leave
jmp
mov
sub
es
jmp
imul
add
mov
sub
ss
pop
out
and
es
(bad)
fild
cmp
test
aaa
add
mov
retf
sti
push
add
sahf
les
add
add
cmps
push
rcl
pop
push
mov
push
stos
rcr
inc
xor
pop
sbb
mov
jo
add
jo
icebp
push
mov
dec
test
pop
inc
(bad)
cmovno
rcr
jecxz
repnz
int
push
ret
sub
pushf
scas
lock
int3
add
pop
ret
cmp
xor
imul
div
repnz
add
jne
mov
add
pushf
add
addr16
out
or
leave
xchg
mov
mov
cdq
lods
in
into
sbb
loope
fist
bound
push
add
xchg
push
add
add
or
add
adc
add
call
add
jo
loope
cmp
clc
mov
add
(bad)
outs
inc
cwde
add
add
test
push
or
loope
dec
xchg
xor
add
add
pop
cmc
push
inc
add
js
add
mov
add
xchg
pushf
ins
repnz
adc
inc
push
jmp
jge
stos
or
add
add
aad
(bad)
add
push
add
add
rol
mov
sub
test
add
add
movs
or
add
adc
add
(bad)
inc
and
adc
add
pop
xchg
sbb
mov
fcomp
pop
ins
and
add
add
inc
mov
xchg
add
in
inc
gs
dec
adc
test
mov
jns
add
adc
scas
jecxz
fild
sub
jmp
add
popa
cmps
arpl
xor
pop
adc
and
arpl
xchg
ret
dec
or
pop
in
add
add
sbb
add
xchg
nop
mov
call
cmp
lahf
out
add
add
add
add
ror
xor
jecxz
add
les
fbstp
sbb
lock
lods
data16
cmps
jl
mov
retf
rcl
outs
sbb
sbb
sub
add
jae
pop
movs
add
add
in
add
es
mov
push
add
add
arpl
add
add
aad
adc
add
add
sldt
dec
jl
arpl
cmp
daa
icebp
leave
movs
cmp
mov
jo
add
movs
xor
add
add
add
xchg
movs
sub
rol
inc
dec
dec
retf
fld
ror
out
dec
jmp
jp
dec
inc
sbb
mov
push
pop
aas
push
push
loopne
loope
add
jmp
xlat
jl
xchg
dec
mov
mov
add
cmp
xchg
into
add
add
pop
adc
scas
add
adc
mov
mov
test
mov
xchg
stc
mov
xchg
cs
sbb
pushf
nop
add
mov
cmp
add
scas
cdq
cmp
pop
dec
aam
ss
inc
loopne
retf
in
inc
add
mov
add
mov
mov
add
aas
add
shr
scas
(bad)
jns
jae
imul
aas
int
push
xchg
add
pop
(bad)
lahf
xchg
outs
add
mov
xor
ins
sub
mov
int3
popf
pop
cs
stos
add
add
data16
aas
cmp
nop
push
out
fadd
add
jno
pushf
movs
and
push
pop
or
lahf
mov
adc
mov
dec
xor
and
cld
ins
xchg
xor
ja
xor
add
es
pop
push
iret
test
xor
je
mov
(bad)
adc
add
add
scas
pop
lock
test
outs
or
add
pushw
mov
(bad)
lds
test
add
lds
adc
push
pushf
push
sbb
addr16
(bad)
repz
adc
cwde
idiv
mov
es
add
js
add
loopne
mov
add
pop
hlt
add
out
add
add
ror
add
outs
dec
loope
lea
(bad)
sbb
das
js
fs
add
pushf
mov
add
pop
push
pusha
mov
retf
imul
dec
and
sub
add
or
fnstenv
lods
dec
and
and
sub
sub
xor
sub
aaa
xchg
mov
test
jo
push
add
mov
rol
add
pusha
stos
add
mov
add
sub
add
add
xor
ja
xor
pop
in
(bad)
jne
mov
out
mov
mov
shl
in
inc
jae
shr
arpl
dec
add
verr
test
sar
dec
cli
sub
ret
add
jbe
cmp
add
push
or
inc
test
shl
add
shl
mov
add
add
es
scas
push
popa
cmp
ins
(bad)
icebp
adc
add
cmp
add
cmp
xor
out
cmps
push
fadd
add
cmp
sub
add
inc
mov
and
add
or
(bad)
cli
dec
sub
scas
jns
xor
xor
add
outs
cmp
leave
inc
ret
dec
add
xchg
xchg
pop
sbb
or
dec
push
lods
xor
xor
add
psubq
add
add
mov
sub
add
adc
jbe
movs
push
inc
xor
dec
jb
dec
add
cli
retf
fstp
pop
push
mov
mov
mov
test
sub
mov
add
inc
aaa
mov
add
imul
mov
add
add
das
xchg
mov
aam
mov
das
push
ins
lods
scas
add
mov
cmps
add
call
popa
sub
movs
stos
das
rol
jno
into
jo
add
jae
in
jo
pop
or
retf
add
jecxz
fild
add
in
dec
jp
loope
jle
or
(bad)
mov
call
push
pop
js
repnz
cli
leave
pop
add
rol
add
out
push
outs
in
lds
hlt
add
cmp
ins
test
pop
sub
push
mov
xor
add
add
jl
nop
push
dec
add
hlt
sub
jp
(bad)
int3
and
mov
mov
ins
mov
add
add
imul
sub
add
cwde
je
add
bound
cmp
and
retf
sub
add
adc
adc
add
and
push
out
pop
add
adc
add
pop
imul
imul
ja
pop
aaa
adc
xchg
dec
add
jo
mov
adc
(bad)
pop
adc
add
cmp
sbb
mov
pop
adc
lea
add
jge
mov
add
aad
pop
scas
cmps
add
jecxz
dec
sbb
add
mov
add
jo
aaa
adc
aaa
cmp
(bad)
inc
add
fistp
pop
mov
adc
jge
or
push
adc
aas
jg
add
repnz
or
add
dec
sbb
add
into
clc
hlt
dec
or
hlt
stc
call
jno
jae
add
movs
add
stos
mov
jbe
add
loope
sbb
and
rol
lods
jbe
cmp
ret
sub
push
repnz
and
dec
jl
pop
out
add
iretw
mov
or
add
add
scas
push
inc
add
retf
cmp
jl
gs
add
pop
nop
xlat
cmp
pushf
outs
jo
cmp
fidiv
sti
jmp
imul
dec
ret
mov
outs
ficom
or
mov
int3
xchg
add
sbb
out
inc
fwait
inc
mov
adc
or
imul
cmp
xchg
and
add
mov
arpl
mov
add
add
cmp
pop
xor
scas
loopne
leave
add
add
ins
xchg
push
adc
add
aam
inc
add
inc
dec
out
add
add
add
sbb
add
and
sbb
jns
push
jle
add
add
ins
clc
or
add
sbb
clc
add
dec
mov
jb
repz
add
fs
call
cmc
sar
test
fisub
fild
add
add
xor
in
hlt
add
stc
sub
pop
add
shl
enter
loope
add
pop
sahf
movs
aas
int3
and
jg
jno
mov
add
cmp
add
dec
add
imul
pop
add
xchg
sub
popa
adc
adc
inc
add
pop
stos
(bad)
fld
or
add
sbb
add
add
adc
sub
jae
retf
mov
retf
xchg
sub
push
in
pop
sub
loope
add
ss
out
cli
sbb
pop
cmps
neg
add
inc
mov
or
xchg
int3
in
add
mov
das
mov
push
pop
mov
add
pop
loopne
out
enter
mov
sbb
stc
add
rcr
jecxz
sub
mov
(bad)
stos
mov
push
add
mov
add
jge
push
imul
mov
cmps
inc
add
std
shl
scas
jmp
aaa
dec
add
es
repnz
sbb
xchg
(bad)
jl
or
fs
adc
pop
add
dec
nop
add
jl
add
cmp
add
aad
adc
ja
cmc
rcr
in
sbb
jne
add
push
gs
add
jp
daa
cmp
add
movs
add
adc
mov
and
add
add
repnz
or
fiadd
add
add
pop
mov
inc
xchg
in
mov
add
ret
mov
dec
jp
jb
fcom
jns
test
mov
add
and
test
add
push
call
cwde
popa
cld
dec
out
jecxz
xchg
mov
ret
adc
test
enter
xchg
mov
adc
sar
jge
and
add
dec
push
(bad)
leave
add
push
cmc
add
les
sub
add
inc
add
push
fist
or
or
popf
add
add
add
ss
adc
imul
fwait
push
cmp
dec
adc
movs
cmp
jg
xor
hlt
pusha
ins
push
mov
add
xchg
call
jl
mov
mov
add
xchg
sti
outs
xchg
ror
fidiv
cmc
fisubr
in
push
add
loopne
adc
mov
repz
xor
pop
std
push
add
inc
int3
out
dec
lahf
dec
sub
fsub
aam
aas
cwde
add
retf
lds
push
out
xchg
add
add
test
add
mov
push
daa
add
mov
add
add
add
lods
mov
push
add
retf
xchg
cld
xchg
dec
add
enter
add
cmc
sub
cmp
push
aaa
add
mov
inc
xor
sbb
add
sub
add
jg
add
mov
add
je
fwait
mov
inc
arpl
jle
add
xchg
sbb
add
pop
aas
cmc
jle
sbb
aaa
push
retf
popf
push
xchg
mov
mov
xor
add
add
jne
push
repnz
or
pop
dec
add
ins
ret
out
jmp
cmp
sub
pushf
adc
aaa
xchg
aas
test
add
mov
mov
arpl
xor
dec
mov
in
add
push
mov
iret
in
pop
cmp
push
jae
je
icebp
jge
cld
scas
sbb
add
push
cwde
add
add
test
movs
retf
and
scas
add
cwde
add
xchg
add
dec
in
pushf
mov
add
je
stc
add
dec
mov
add
cld
rol
add
test
jl
adc
add
jns
es
test
add
int
add
in
add
add
add
cmp
add
add
pop
(bad)
or
je
push
push
inc
mov
add
or
test
call
push
lods
outs
pop
fsub
ret
enter
or
xor
(bad)
std
mov
jns
add
shl
mov
repz
jmp
pop
mov
ss
ja
xchg
aaa
add
add
push
repz
lods
data16
add
mov
movs
or
dec
leave
inc
inc
lahf
pusha
mov
lods
outs
and
xchg
inc
push
add
repnz
xchg
add
fmul
cmp
jmp
jae
in
pop
test
icebp
fistp
clc
test
fcom
sahf
sbb
mov
cmp
es
enter
cmp
inc
add
test
loop
ds
adc
lea
mov
add
lock
dec
call
icebp
mov
imul
add
mov
fcom
add
shr
add
xor
hlt
leave
add
jnp
add
add
dec
lahf
mov
mov
and
cmp
mov
test
mov
push
lahf
add
test
daa
jp
add
add
jmp
sub
sbb
push
cmp
inc
cmps
xor
jns
enter
scas
je
aaa
add
inc
add
movs
scas
test
xchg
mov
cli
aam
mov
dec
add
retf
cvtpi2ps
jle
add
push
fwait
fwait
cmp
add
mov
maskmovq
imul
xchg
add
xor
out
xor
xor
sub
inc
(bad)
addr16
bsf
lds
and
adc
dec
add
ja
sub
pushf
cmp
add
xchg
(bad)
dec
ins
cmp
add
shl
jns
or
jo
jmp
add
arpl
mov
and
add
adc
add
lods
clc
add
mov
cmp
add
push
mov
cmp
and
add
sbb
call
push
std
add
pop
fld
add
add
rcr
int
stc
(bad)
sar
popf
ret
mov
mov
add
(bad)
pop
data16
rcl
add
dec
das
pop
in
add
sahf
add
add
rol
popf
fist
sub
add
rol
sub
xor
dec
in
(bad)
and
jp
dec
repz
xor
test
rol
dec
cmc
add
cmc
add
add
add
xchg
add
sbb
lods
and
add
retf
test
xor
jmp
xchg
add
out
or
mov
test
add
add
pop
xor
jmp
(bad)
add
push
push
or
aas
xchg
icebp
mov
add
aam
outs
add
add
sldt
xchg
xchg
add
sub
mov
ins
push
adc
sbb
add
mov
test
jg
add
imul
push
jno
out
call
aad
add
in
mov
push
out
xor
dec
ja
add
jo
push
xor
outs
or
add
push
mov
add
add
or
dec
rcl
sti
test
ds
add
mov
aas
push
repnz
sbb
mov
xchg
sub
and
ret
test
push
mov
scas
mov
in
mov
jmp
mov
mov
test
add
pop
add
inc
add
cmp
cdq
pop
not
call
sub
xchg
mov
add
jnp
push
sbb
add
jl
and
or
nop
mov
add
ficom
add
add
je
(bad)
shr
int3
(bad)
mov
jno
outs
push
and
lods
add
add
dec
jmp
add
sub
push
cmps
add
in
mov
fwait
sub
inc
cdq
aas
cli
dec
jmp
push
add
cwde
adc
or
sar
daa
cmps
sbb
lods
lock
add
mov
and
add
pop
ss
in
add
adc
sbb
push
push
add
add
pop
push
mov
cmp
jle
add
jge
or
bound
add
aas
repnz
mov
add
in
add
add
or
adc
pop
add
pop
xchg
pop
add
push
cli
add
lahf
dec
iret
pop
(bad)
jg
pop
xor
rcl
fsubr
imul
and
add
fwait
jo
jnp
fs
cmp
movs
adc
add
xor
les
add
and
pusha
mov
xor
daa
mov
adc
dec
popf
das
or
or
les
daa
jno
lods
and
xchg
jo
cld
and
push
sbb
jmp
sbb
add
inc
or
lahf
inc
imul
jne
or
adc
jns
sahf
jne
inc
add
xchg
and
dec
adc
stos
pop
call
sar
push
add
sbb
cmps
leave
push
ins
add
jp
mov
jmp
mov
inc
add
imul
pop
add
inc
jl
jecxz
add
mov
sahf
xor
or
jo
js
xlat
cmp
add
or
leave
add
sbb
call
cmp
add
fwait
sbb
add
jmp
xlat
(bad)
jmp
mov
fist
add
xchg
mov
daa
jb
arpl
pop
int
add
add
mov
inc
mov
adc
inc
adc
lahf
add
push
add
or
pop
addr16
push
mov
dec
retf
iret
jp
add
push
add
jno
into
out
inc
xor
or
mov
pop
mov
int
jecxz
js
push
add
mov
add
cs
and
sti
inc
inc
sar
stos
or
add
add
mov
add
pop
or
das
xchg
add
arpl
and
mov
shl
xor
push
push
mov
call
add
pop
movs
pop
jp
mov
std
repz
xchg
mov
xchg
pop
add
mov
sti
xchg
hlt
fimul
leave
xor
xchg
sar
ficomp
mov
and
add
add
dec
add
adc
xor
add
lds
add
adc
add
jne
add
(bad)
pop
data16
iret
inc
dec
add
jmp
mov
test
cwde
add
jnp
xchg
mov
adc
and
stos
sbb
push
aaa
mov
add
mov
fsub
or
inc
test
outs
mov
add
fsubr
dec
or
add
inc
add
jecxz
inc
adc
lahf
inc
add
(bad)
retf
rol
mov
lea
mov
pop
and
ss
mov
in
in
mov
lahf
cmps
add
clc
out
outs
push
adc
add
cmp
push
pop
fs
sub
or
inc
cmp
or
aas
dec
cmp
xchg
ds
call
add
add
fwait
lahf
stc
push
xchg
daa
cmp
or
sub
mov
jmp
sub
mov
add
or
add
out
jl
jae
jge
add
mov
hlt
adc
jns
dec
xchg
dec
inc
inc
lea
and
sbb
jns
xor
mov
pop
test
lds
add
das
das
mov
mov
popf
pop
push
cmc
sbb
or
popf
add
add
add
mov
shr
add
push
or
add
jl
int3
sti
sbb
push
enter
add
add
je
add
cmp
add
ss
mov
imul
add
outs
add
nop
mov
inc
pushf
add
add
xchg
call
jp
ds
adc
mov
add
not
push
add
arpl
out
mov
adc
sbb
or
sar
mov
push
xadd
add
outs
dec
movs
mov
mov
jnp
add
stos
sub
xor
rol
push
add
and
jmp
mov
in
ror
add
ins
sbb
add
aad
pop
jb
add
mov
mov
adc
add
or
pop
(bad)
mov
mov
icebp
push
push
cmp
add
inc
add
ds
icebp
add
in
pop
pusha
imul
loopne
dec
jbe
in
leave
test
adc
and
mov
xchg
out
pop
mov
pop
gs
outs
xor
mov
lds
and
add
fucomi
xor
xchg
xlat
sbb
(bad)
out
mov
mov
mov
iret
cli
jl
push
lods
lds
add
out
mov
xor
xor
nop
xchg
shr
add
call
cwde
mov
add
mov
(bad)
(bad)
shr
loope
mov
add
out
mov
mov
jl
add
mov
(bad)
icebp
add
push
jb
ret
add
and
fadd
pop
call
in
out
add
add
sub
xchg
fistp
add
mov
lea
sahf
mov
xor
icebp
sub
aaa
fcom
ror
jae
add
push
in
es
add
mov
fiadd
add
pop
or
mov
aam
sbb
std
shr
sub
add
fiadd
call
inc
add
lods
dec
sbb
dec
bound
xor
pop
dec
add
push
sbb
ror
pop
lds
fneni(8087
fcomp
outs
dec
mov
repz
(bad)
add
into
add
scas
push
xor
in
pushf
mov
jnp
mov
cmp
sahf
stc
xchg
sbb
mov
cmp
add
add
push
and
retf
das
bound
or
add
push
add
mov
clc
add
add
sbb
add
scas
add
ins
adc
jbe
(bad)
out
pop
test
es
(bad)
aas
enter
fisttp
out
add
and
jg
cld
add
ins
jb
daa
push
inc
call
sbb
add
adc
add
fsubr
jmp
cli
pop
sbb
or
add
push
hlt
push
add
mov
je
mov
add
push
sti
stc
add
mov
xchg
mov
int
sub
cwde
fld
inc
inc
pop
retf
inc
inc
add
aaa
add
or
pop
add
clc
push
mov
imul
adc
(bad)
add
add
pop
inc
mov
int
sbb
sub
push
and
add
add
fbld
hlt
add
hlt
dec
popf
cmps
mov
add
scas
cld
jmp
xchg
add
ror
push
sbb
rol
scas
add
cmp
mov
pop
stos
mov
add
add
sub
mov
movs
add
xchg
add
xchg
retf
sub
mov
cmp
mov
add
mov
dec
jnp
mov
mov
test
div
add
loop
add
mul
ins
daa
add
add
add
in
enter
push
xor
aad
aam
gs
add
std
inc
popa
push
std
jb
add
xor
xchg
push
jb
pop
push
add
inc
pop
add
mov
push
add
add
mov
loop
out
cmp
out
and
inc
push
adc
icebp
sub
es
jl
add
jne
add
mov
xor
les
stos
iret
add
add
add
outs
mov
add
sbb
add
call
inc
adc
idiv
jg
ins
and
in
scas
cld
adc
ret
add
test
or
outs
add
add
push
adc
retf
icebp
aas
enter
mov
bound
pop
add
mov
call
shr
mov
mov
xchg
fldenv
push
xchg
add
addr16
pop
jge
jle
cwde
call
add
fldcw
out
or
add
stc
je
dec
daa
pop
jmp
mov
mov
retf
or
repz
icebp
clc
rol
adc
add
jmp
sbb
xor
outs
fcomp
and
add
sbb
and
mov
xchg
sahf
and
add
cmp
push
rol
add
add
in
inc
lahf
add
movs
popf
pop
cmp
cmp
pop
and
fwait
iret
add
and
lods
add
sbb
and
or
add
cmps
aad
jecxz
dec
push
add
jnp
or
lods
ja
call
or
daa
stos
add
cmc
inc
jecxz
mov
mov
cmp
icebp
add
or
fisttp
(bad)
fld
stos
pop
ficomp
in
repnz
push
add
push
xor
mov
add
std
xchg
icebp
(bad)
fadd
ret
ss
add
xchg
add
pop
add
add
cmp
add
add
xor
add
add
add
imul
loopne
mov
ins
imul
scas
(bad)
popf
cli
xor
add
cs
add
xor
cmp
or
or
je
xor
add
mov
repnz
jg
sbb
add
loopne
add
movs
out
mov
add
out
pop
adc
adc
push
movs
inc
push
jg
cmp
add
mov
adc
add
inc
lock
jp
inc
add
mov
ins
std
clc
dec
add
jg
add
add
sub
xor
add
fstp
add
daa
jge
add
in
add
aaa
push
clc
shl
push
cmps
sldt
xchg
dec
add
aad
cmps
clc
add
stos
xchg
xor
mov
jne
ja
mov
outs
fcompp
dec
xor
mov
sbb
fisubr
push
sar
add
dec
loopne
in
jbe
push
cdq
repz
into
cmp
inc
lea
add
jl
xchg
add
fs
add
add
repz
out
retf
xchg
mov
or
inc
repz
jno
add
cdq
mov
dec
pop
xchg
add
pop
xchg
test
add
imul
cmp
adc
add
add
lea
adc
sbb
mov
jg
add
inc
std
loopne
clc
xor
jmp
ficomp
push
add
add
imul
neg
test
fadd
add
push
add
and
cmps
loop
sbb
sbb
push
dec
xchg
sub
ror
add
das
add
add
addr16
popa
stos
out
je
add
out
cmps
loope
push
ins
add
mov
and
sub
push
clc
cmp
dec
jle
aam
inc
add
(bad)
xchg
add
add
add
pop
add
loope
or
push
clc
mov
sahf
mov
sbb
adc
sbb
das
mov
add
add
retf
pop
mov
jno
inc
dec
enter
add
stc
ss
jbe
pop
mov
add
or
and
daa
sub
add
push
scas
(bad)
loop
mov
add
xchg
xor
push
adc
sub
das
add
fs
sub
pop
dec
push
popa
mov
jl
add
in
aaa
jp
adc
nop
add
inc
add
mov
push
mov
add
mov
std
pusha
jge
stc
add
cmp
add
add
ins
jbe
loope
dec
add
cmp
add
dec
add
jle
sub
iret
add
mov
add
mov
jno
mul
add
in
cmp
int3
out
add
add
sbb
or
adc
push
sti
xlat
jmp
add
add
clc
movs
xchg
dec
xor
or
add
jne
add
xchg
scas
shl
jmp
jg
jne
test
push
add
push
in
and
add
mov
xchg
add
pop
add
mov
add
push
cmp
out
popf
push
jmp
and
xlat
add
add
aam
mov
add
jecxz
add
add
js
mov
mov
and
scas
es
ins
sub
fwait
or
scas
inc
add
and
retf
das
sbb
xor
imul
mov
in
out
push
jno
add
add
cmps
mov
mov
dec
push
sub
jnp
nop
add
movs
adc
(bad)
movs
cdq
lods
inc
xchg
mov
mov
pop
(bad)
fiadd
rep
in
add
scas
pop
add
cld
pop
add
daa
cli
push
lea
mov
add
cmc
lods
pop
jbe
and
in
mov
fild
(bad)
arpl
add
int
add
inc
lock
jmp
pop
add
arpl
push
or
test
push
add
sbb
(bad)
not
jnp
je
outs
mov
pop
and
lock
add
mov
jg
mov
inc
fidivr
jae
call
sub
mov
popf
pop
push
adc
add
push
push
pusha
imul
add
fst
add
aas
mov
popf
add
jmp
popa
int3
outs
jno
push
pop
push
sub
add
repz
into
add
pop
mov
out
add
pop
inc
call
add
mov
or
add
les
shl
sahf
mov
fwait
(bad)
imul
sbb
sti
hlt
cmp
rcr
idiv
add
add
pop
add
add
jge
test
xor
push
push
pop
dec
adc
jecxz
fmul
xchg
ret
and
(bad)
and
aaa
js
in
dec
mov
clc
xor
add
add
push
jo
sbb
leave
sahf
data16
pop
iret
loopne
pop
mov
pop
es
ss
inc
add
lahf
cmp
add
push
mov
das
add
add
cmp
data16
(bad)
loope
gs
push
cmc
int3
mov
add
cmp
or
add
cmp
in
pop
pop
fist
add
jo
jp
add
jb
sbb
(bad)
movs
sbb
jge
pop
add
mov
mov
jae
add
jne
fcom
and
rol
mov
inc
mov
push
xchg
add
mov
add
adc
fistp
pushf
push
mov
xor
and
daa
test
ffreep
jo
out
and
fcomp
pop
pop
add
jmp
or
cmps
inc
pop
cmp
js
sub
adc
and
add
sub
add
xchg
cs
and
add
sub
or
leave
cmp
ret
mov
xchg
mov
xor
add
add
pop
test
add
xchg
push
xor
fmul
test
add
ins
jne
setno
iret
daa
mov
xor
xor
lock
push
jecxz
fdivr
and
fidivr
jl
cmps
mov
add
add
push
or
xchg
push
cmps
mov
xchg
push
out
jo
mov
add
add
xor
out
add
mov
jecxz
add
add
add
dec
mov
scas
sbb
scas
(bad)
push
in
mov
test
jo
sub
jle
jp
pop
rsm
icebp
pop
add
loop
add
inc
sbb
mov
add
aaa
jae
nop
xor
add
add
mov
add
data16
add
pop
push
out
inc
mov
out
jecxz
add
mov
jns
add
add
ret
lahf
add
iret
cmp
sahf
lahf
add
fmulp
dec
scas
add
dec
push
fcmovb
inc
pop
inc
lds
ret
mov
(bad)
in
call
push
loop
loope
lds
add
jmp
enter
add
mov
lods
add
sub
(bad)
shl
add
in
add
jno
pop
inc
add
jo
xchg
mov
add
push
dec
add
imul
add
jbe
rcr
aas
add
shl
mov
mov
adc
in
imul
outs
cs
fisub
add
retf
mov
xchg
ds
sbb
add
stc
sub
sbb
movs
inc
daa
add
js
add
add
(bad)
mov
sub
int
adc
sbb
(bad)
jle
outs
dec
cdq
sub
or
add
ins
push
inc
inc
and
add
xchg
xchg
add
add
add
test
add
std
sub
push
js
sbb
aad
icebp
retf
xchg
(bad)
iret
add
jno
(bad)
add
sbb
lahf
cli
(bad)
add
add
cwde
into
shl
bound
outs
lods
push
add
(bad)
jno
les
mov
add
add
sub
mov
add
xchg
or
add
cmp
mov
or
add
cli
add
std
jecxz
xchg
mov
add
xchg
dec
mov
cmp
push
jmp
pop
std
ins
arpl
ins
fsubr
and
popf
dec
bound
stos
in
mov
cmc
xchg
add
add
fdivr
and
dec
add
add
pop
mov
inc
or
push
fs
inc
sbb
lods
add
mov
mov
sub
mov
add
add
call
popa
and
inc
add
add
mov
pop
cmps
add
add
ja
add
ins
jmp
sti
sub
mov
aaa
cmp
add
aam
shl
inc
sub
sub
into
add
add
fstp
and
add
aas
inc
add
sbb
stc
int3
add
(bad)
adc
push
sti
mov
fwait
sub
pop
test
rol
lds
pop
ja
popa
pop
xor
mov
outs
add
pop
and
sti
test
fisubr
add
add
dec
mov
cdq
xchg
or
mov
sub
sahf
repnz
xchg
sub
popf
adc
mov
test
add
shl
add
pop
out
je
sub
loop
xor
add
add
or
sub
mov
dec
aad
add
xor
loope
and
add
shr
add
pushf
sub
dec
sbb
out
add
ret
sbb
popa
mov
fwait
add
jno
subps
add
lods
inc
dec
dec
mov
cwd
sub
sbb
sub
jmp
add
add
sbb
out
xor
pop
sub
seta
push
lds
rol
dec
mov
add
aam
lea
mov
push
and
sbb
jo
add
jae
add
or
adc
sub
idiv
pop
adc
fcomp
cmp
outs
dec
(bad)
call
inc
inc
xchg
mov
mov
sbb
js
or
es
xor
inc
dec
add
jno
pop
push
mov
mov
ret
aam
push
std
pop
pop
icebp
mov
jns
movs
push
std
ror
es
leave
test
cmp
mov
add
or
add
cmp
mov
add
cmc
xor
jae
sbb
add
push
push
add
cmps
xchg
xor
push
mov
dec
inc
add
inc
pop
add
add
mov
add
into
add
ins
popa
in
js
rcl
pop
xor
das
dec
adc
sbb
add
add
lods
add
xchg
mov
add
pop
test
add
daa
add
jecxz
and
sub
jne
mov
aas
jg
or
jmp
xchg
mov
ret
dec
xchg
mov
add
shl
add
frstorw
adc
je
shl
add
add
add
loopne
jp
add
out
bound
sbb
lea
outs
ins
add
add
pop
add
jbe
sbb
aam
add
cmp
aad
int3
mov
popf
outs
add
pop
test
or
or
add
push
add
push
ds
iret
in
mov
out
nop
fisubr
adc
(bad)
or
or
add
cmc
daa
int3
movs
imul
fisub
or
xchg
(bad)
push
retf
fisub
retf
in
test
rcr
xchg
sbb
add
dec
xchg
ret
into
lock
push
push
cwde
leave
int3
mov
and
push
stc
ins
add
jno
fucomip
add
jge
add
pop
clc
retf
add
jo
push
test
fdivr
std
add
std
mov
fs
rcl
cmp
mov
loopne
mov
pusha
add
(bad)
int
xor
fld
popa
add
add
scas
jbe
dec
cmc
xchg
nop
sub
jb
jne
stc
out
add
add
jmp
mov
dec
sbb
out
mov
mov
or
data16
add
fs
add
add
inc
pop
fidivr
cld
add
add
inc
xor
pop
push
or
mov
pop
call
retf
push
add
ret
xchg
retf
mov
sub
dec
cmp
popa
add
sbb
push
xor
jo
popa
mov
mov
lea
mov
adc
jge
dec
inc
mov
repz
sbb
icebp
sbb
iret
mov
fisubr
mov
jne
js
repz
loope
ret
dec
mov
xchg
add
add
inc
in
xchg
mov
xor
sub
add
add
push
ss
add
fcomp
mov
aad
add
fsub
in
int3
and
movs
lahf
lock
imul
std
(bad)
jmp
add
nop
aam
add
js
popa
lods
mov
xchg
add
inc
mov
add
sub
mov
dec
neg
add
int3
push
inc
cmp
add
sbb
pop
xchg
cmp
inc
pop
add
(bad)
pop
jae
push
sahf
mov
cmp
mov
loop
jns
loopne
xlat
or
add
add
inc
test
es
(bad)
add
cmp
cmp
adc
sub
inc
add
and
in
jo
mov
add
leave
push
push
out
sahf
int3
add
lds
push
jno
aam
add
pop
add
mov
add
dec
or
jae
add
cmp
add
and
jmp
and
xchg
pop
xor
xor
sub
pmullw
outs
mov
in
jb
(bad)
and
pop
xchg
xrelease
aaa
fiadd
dec
inc
jl
in
and
jp
leave
in
xor
dec
add
jge
add
movs
mov
xchg
xchg
cmp
sub
or
add
jne
push
and
cmps
mov
stc
outs
add
psubw
mov
inc
add
jle
dec
sbb
mov
add
add
dec
jbe
lock
fild
std
mov
iret
add
add
cmp
fistp
add
movs
cs
cmps
add
aad
add
inc
add
outs
pusha
push
push
sub
add
int3
arpl
sub
out
fldenv
in
sub
lds
cwde
push
xchg
add
ds
mov
mov
pop
add
fs
add
inc
xchg
add
stos
ds
xchg
sub
fwait
jnp
add
fidivr
data16
sub
add
sub
jae
loop
fs
push
mov
jg
add
mov
add
stos
ret
ja
xchg
mov
pop
push
call
mov
sbb
jle
test
and
add
dec
sbb
rcr
add
sbb
sub
pop
add
mov
popf
add
sub
sub
rol
jae
js
add
pop
add
mov
add
repnz
movs
mov
mov
add
jne
xor
ret
into
inc
mov
adc
stos
leave
loope
mov
call
lock
add
pop
add
adc
add
cli
add
repnz
icebp
fidivr
add
add
stos
mov
mov
movs
cmp
fld
xor
push
in
and
xchg
sbb
ret
add
mov
add
out
jno
add
dec
add
fcomp
inc
imul
loop
adc
inc
mov
ins
daa
pop
push
jl
add
inc
lds
add
mov
sub
mov
add
jecxz
adc
bound
sahf
pop
sub
fs
sub
int
mov
fst
pop
xchg
and
add
aad
fs
mov
std
cwde
ds
sbb
mov
or
dec
out
jno
test
add
add
gs
add
pop
lds
and
add
(bad)
enter
mov
pop
add
add
and
jl
add
(bad)
fstp
add
retf
fistp
pop
fs
or
add
dec
mov
add
arpl
repz
stos
jg
adc
rol
pop
push
mov
cmc
neg
test
fisub
clc
sbb
and
cwde
mov
cdq
add
pop
add
adc
scas
sub
repnz
leave
enter
add
pusha
lea
lds
mov
(bad)
mov
fiadd
fdivr
retf
xor
sub
add
xlat
add
out
add
aaa
jnp
in
sbb
js
and
add
je
add
cmc
aas
hlt
add
add
pop
test
stc
add
stos
pushf
xor
inc
add
xor
mov
cmp
cmps
jp
imul
mov
sbb
inc
aad
es
and
fstp
push
push
adc
xchg
ins
xor
add
add
add
add
in
inc
add
jmp
add
xchg
and
or
cmps
add
xchg
add
jmp
cmp
cmp
mov
add
shl
cmp
add
add
pop
mov
add
add
add
in
add
sub
ins
add
fnstenv
jge
mov
lea
daa
cmp
aad
xchg
mov
movs
leave
in
and
mov
mov
ret
test
jbe
dec
pop
inc
fild
mov
shl
jmp
cli
sbb
je
push
out
mov
jno
shr
or
add
pop
ret
add
add
dec
push
add
jae
add
sbb
das
cmp
and
fadd
add
xchg
xlat
push
add
out
add
push
inc
gs
mov
dec
or
and
cmp
sub
add
mov
inc
add
icebp
push
and
cmp
es
add
add
add
jmp
push
popf
es
add
cmp
dec
jl
and
sbb
add
ins
or
mov
cmps
inc
add
iret
sti
cdq
add
add
ret
stc
dec
push
int3
sub
add
js
mov
retf
push
push
xor
or
in
xor
cwde
outs
pop
push
cmc
nop
add
sbb
add
gs
jnp
daa
das
wrmsr
push
outs
add
and
add
stos
xor
mov
movs
popf
push
push
add
jae
push
lds
xlat
inc
dec
xor
cmp
ret
outs
or
add
test
dec
adc
push
dec
aaa
ret
sbb
jge
sbb
lock
mov
je
dec
je
pop
jns
bound
test
cmp
push
fld
dec
(bad)
cmp
add
sti
add
jne
sub
aad
jnp
add
and
fist
es
aam
int3
add
adc
pusha
shl
loopne
mov
mov
or
push
add
inc
lock
mov
xchg
jne
add
lahf
add
std
scas
ret
cli
dec
add
inc
or
xor
mov
add
add
pop
push
in
and
add
mov
xchg
add
lahf
fwait
das
adc
lahf
mov
test
add
ret
je
add
add
aas
mov
ss
ret
add
dec
dec
dec
movs
mov
cmp
pop
and
movs
pop
adc
fcom
adc
add
punpckhbw
dec
push
add
out
add
jno
ds
adc
add
shr
cdq
stos
and
add
test
xor
add
push
cmp
in
add
cmp
enter
xor
icebp
and
mov
adc
add
jne
add
fcomp
lods
gs
hlt
test
add
mov
sub
retf
jg
pop
xchg
sub
inc
(bad)
and
add
dec
or
lock
je
add
sub
call
fs
cmp
and
enter
mov
pop
jp
add
add
add
xor
sub
xor
stos
daa
push
das
dec
add
jmp
sbb
push
daa
add
scas
and
inc
sub
add
popa
push
imul
mov
jmp
mov
add
sub
icebp
ins
bound
imul
dec
mov
push
mov
add
sbb
sbb
sub
add
or
dec
mov
pop
inc
sti
jnp
add
mov
cdq
arpl
xor
retf
xor
mov
(bad)
pop
ins
add
into
lods
xchg
add
inc
add
jmp
add
movs
int3
je
cwde
rol
xchg
jno
mov
add
std
aad
add
fbld
pop
xchg
sub
daa
add
add
add
popa
out
add
sub
fld
dec
lahf
sub
inc
dec
push
or
add
xchg
(bad)
into
in
adc
jge
xor
add
outs
or
jmp
ret
push
add
retf
shr
fsubr
repz
adc
ror
fwait
loopne
add
pop
fist
and
add
enter
and
inc
call
out
add
jge
xchg
out
add
add
xchg
add
dec
add
add
dec
mov
mov
push
in
(bad)
xor
cmp
popf
dec
jns
add
and
test
add
add
cli
add
scas
arpl
js
add
(bad)
xor
add
cwde
ret
jnp
(bad)
ss
xor
test
loope
add
and
jge
xchg
cmps
dec
dec
(bad)
pop
sahf
add
retf
pop
mov
add
ja
pop
mov
(bad)
add
in
cmp
add
xor
clc
(bad)
(bad)
in
add
je
test
cwde
add
add
ja
add
push
outs
add
lods
jne
sbb
add
mov
rol
add
dec
cdq
pop
or
and
mov
add
fs
ins
es
ror
(bad)
stc
lods
aaa
add
rcr
push
call
inc
imul
add
enter
popa
mov
test
rol
add
or
xchg
test
add
adc
pop
sub
out
dec
adc
add
xor
repnz
cmp
adc
or
xchg
fimul
add
add
add
mov
iret
jecxz
add
jne
xchg
std
xchg
add
and
daa
int
and
cmp
in
lods
add
in
push
push
arpl
pop
sub
add
push
add
cli
add
mov
add
jle
fadd
in
cmp
int3
fadd
add
push
je
inc
mov
push
out
and
xor
add
adc
mov
add
movs
ins
cdq
add
add
cmps
popa
leave
cmp
xor
ds
sbb
xor
inc
add
rcl
icebp
add
inc
stc
add
mov
mov
ins
int3
push
outs
add
pop
rcl
add
sub
sti
inc
mov
lock
cmps
sar
cs
mov
jge
in
dec
inc
sbb
add
mov
add
sbb
les
cwde
frstor
ror
mov
cdq
add
jae
push
add
mov
add
bnd
sub
inc
adc
xchg
sbb
jmp
ret
push
pop
inc
push
or
sub
imul
loopne
mov
int3
in
add
int
ror
out
leave
add
add
xchg
cmps
aaa
(bad)
scas
(bad)
ror
and
cmps
add
pusha
add
popf
add
sub
into
icebp
and
mov
jl
test
pop
test
mov
add
pop
std
add
add
inc
lahf
mov
jecxz
add
add
les
scas
add
jecxz
sahf
dec
hlt
mov
imul
xor
fs
lea
inc
push
(bad)
xchg
movs
mov
mov
pop
jge
cmp
outs
pop
int3
cmps
add
sub
add
les
ja
pusha
add
pop
pop
xor
push
sahf
dec
add
sub
fucomi
loop
(bad)
or
rcr
cmp
mov
test
mov
add
std
add
inc
stc
add
cs
push
stos
add
xor
out
rcl
mov
fidiv
xchg
cli
sbb
add
(bad)
fadd
xchg
or
das
add
out
or
xor
imul
fwait
in
and
fmul
sub
add
sbb
xor
inc
popa
mov
nop
xchg
xchg
xchg
sub
and
sub
cld
or
lods
mov
retf
idiv
mov
es
sti
sub
sbb
pop
and
lods
add
ins
loop
mov
outs
enter
pop
lock
xor
sahf
add
add
lahf
stos
mov
repnz
push
adc
xchg
push
xor
mov
fcomp
pop
pop
xor
add
nop
enter
jo
add
retf
mov
aaa
fucomi
fsub
mov
or
pushf
fld
add
add
js
dec
repnz
ret
fwait
mov
(bad)
fcom
pusha
add
lods
imul
es
add
push
sbb
fnstsw
cmp
fcmovu
ffreep
jne
stc
movs
add
cmp
add
mov
(bad)
cmp
popf
stos
inc
mov
neg
sbb
inc
loop
add
mov
(bad)
ja
test
rcr
add
cs
das
scas
leave
jge
push
inc
fstp
ins
mov
test
scas
push
outs
cwde
je
pop
sbb
mov
in
xor
xchg
add
(bad)
popf
add
dec
lldt
lock
test
scas
sahf
pop
ror
add
xor
arpl
sub
push
scas
sbb
pusha
add
rol
fsubr
pop
(bad)
pop
add
data16
adc
lods
cld
xor
inc
sbb
inc
mov
or
adc
add
fbld
bound
add
cmps
(bad)
fadd
call
add
fldenv
mov
outs
(bad)
dec
enter
xchg
sub
pop
xchg
xchg
adc
sbb
add
add
rol
sbb
xchg
inc
add
lea
fidivr
in
xor
jbe
sar
(bad)
mov
mov
add
mov
cwde
mov
daa
add
cmp
jge
push
push
outs
add
outs
pusha
enter
fistp
adc
xor
nop
add
(bad)
mov
mov
arpl
add
add
or
cs
out
pushf
dec
sbb
add
mov
add
and
lods
push
repnz
(bad)
retf
xor
fnsave
and
inc
xchg
fadd
adc
movs
sub
mov
std
jg
add
push
add
rol
add
add
and
add
pushf
sub
movs
xchg
add
or
pop
dec
pusha
inc
and
rol
je
add
add
pop
and
ror
pusha
add
or
mov
repz
popa
fiadd
aam
enter
ja
lods
add
(bad)
fstp
mov
je
xchg
sar
pop
fmul
dec
and
lea
loopne
pop
test
push
retf
add
push
add
add
inc
and
mov
add
sub
mul
mov
mov
mov
adc
out
jbe
mov
push
mov
pop
mov
jae
adc
mov
xor
cmp
cmp
sub
aas
aam
add
push
sar
pop
or
movs
dec
fld
sub
fbstp
ins
shl
fwait
rol
or
push
int
add
add
xchg
push
icebp
xor
sbb
add
add
add
add
add
or
or
jge
add
jle
add
pop
jne
add
sar
(bad)
and
sub
add
fwait
push
pusha
xor
fld
xchg
das
add
shl
xchg
mov
sub
inc
add
stos
xchg
cs
(bad)
test
adc
add
aaa
or
jmp
aad
cmp
and
pusha
mov
add
or
add
(bad)
xor
popa
add
xchg
jg
movs
jbe
add
lods
shr
jp
add
add
ror
lea
add
adc
mov
rcl
add
mov
xlat
std
test
aas
pop
dec
iret
lods
fimul
daa
mov
xchg
add
mov
add
jl
fld
add
stos
sub
mov
or
(bad)
out
(bad)
jp
adc
add
scas
and
and
jge
add
fdiv
mov
loope
push
add
xchg
cmp
add
add
pop
es
daa
add
imul
rcl
ss
and
add
ds
stos
add
inc
test
xchg
inc
add
or
cmp
jmp
inc
add
mov
inc
sbb
add
ret
retf
add
or
in
push
in
test
pop
shl
add
cmps
push
aas
(bad)
sub
xor
add
inc
fs
or
add
fiadd
inc
and
add
scas
jns
arpl
out
arpl
fisttp
jbe
stos
stc
das
push
mov
dec
int
in
fs
mov
mov
pop
(bad)
sbb
pop
xor
add
mov
retf
(bad)
dec
add
xchg
(bad)
adc
mov
pop
xchg
sbb
jnp
scas
add
daa
jg
adc
mov
dec
sub
into
pop
scas
add
imul
(bad)
mov
and
arpl
pop
mov
jnp
sub
inc
add
mov
cs
test
jo
and
(bad)
cmps
les
repz
cmp
and
xchg
fld
add
fldcw
add
inc
pop
stc
add
rol
add
enter
add
inc
out
add
cmp
jge
mov
mov
iret
out
sbb
mov
das
lds
inc
jg
add
sahf
add
jp
jl
sbb
add
pop
and
add
outs
jmp
add
mov
add
or
gs
add
push
outs
fwait
cs
xor
mov
js
jne
add
bound
out
add
sub
lods
out
xchg
and
dec
js
add
mov
add
sti
and
mov
ret
or
xor
add
lahf
cdq
pop
add
mov
jbe
repz
das
adc
mov
(bad)
call
pusha
aam
mov
dec
aad
add
mov
jl
sub
fld
aam
std
mov
xor
push
cmc
ins
ret
shl
pusha
add
xchg
add
call
enter
je
lds
mov
jnp
pop
add
mov
pop
inc
jb
scas
aas
push
push
shr
add
sbb
dec
sbb
fld
gs
das
inc
jmp
push
jae
mov
add
cdq
add
add
pop
arpl
add
je
mov
jbe
in
add
add
xchg
cmps
add
ins
or
mov
popa
adc
jns
sbb
add
mov
popf
add
jns
retf
es
sbb
cmp
xchg
push
(bad)
cdq
cmc
retf
daa
push
push
aad
fcomi
mov
pop
or
add
pushf
test
add
xchg
daa
add
jne
pop
add
mov
js
xchg
jl
js
popa
add
cmp
sbb
inc
add
icebp
test
inc
stos
add
dec
add
add
add
add
pop
add
lds
jno
scas
dec
movs
cs
idiv
inc
add
sub
adc
add
inc
(bad)
(bad)
fild
or
add
mov
mov
xor
and
add
jecxz
add
and
add
shr
sub
stc
sbb
and
push
in
or
mov
pop
and
or
jo
jbe
cld
and
mov
add
mov
dec
add
xor
push
int3
xor
clc
add
mov
mov
(bad)
fisub
outs
dec
data16
loope
add
jecxz
mov
(bad)
loop
cli
rol
pop
add
mov
add
mov
xlat
adc
fiadd
xor
add
mov
add
mov
call
push
dec
push
call
mov
add
xchg
jle
mov
add
add
add
xchg
add
cmc
xchg
repnz
add
fiadd
add
and
add
add
add
test
mov
add
adc
(bad)
jle
test
mov
out
inc
jb
(bad)
in
jo
sub
call
and
dec
pop
retf
or
mov
inc
loopne
sub
and
add
adc
pop
movs
and
pop
outs
sbb
add
stos
push
mov
dec
out
mov
ret
les
add
mov
add
mov
outs
sbb
pop
fsub
pop
lods
fadd
addr16
int3
mov
cmp
dec
jl
add
inc
xor
add
lock
je
in
cmp
jle
movs
dec
add
inc
js
and
fisttp
xchg
add
loopne
jmp
mov
add
aad
jae
add
in
iret
pop
popf
in
add
push
pop
jmp
pop
inc
push
add
sub
add
retf
icebp
mov
push
jp
cmps
test
and
xchg
(bad)
pusha
mov
ins
add
(bad)
add
mov
mov
add
lahf
das
mov
out
add
stos
add
push
or
xchg
add
fst
mov
add
cmp
add
cwde
popa
rcl
mov
add
fidiv
add
call
fbld
sub
sbb
adc
jge
retf
add
add
add
add
add
and
mov
push
repz
dec
and
push
or
add
add
jo
pop
inc
ret
jge
retf
pop
add
xor
das
add
jno
jb
or
add
xor
xchg
test
sbb
mov
xor
movs
or
add
xchg
pop
nop
iret
popf
xor
add
add
(bad)
jno
push
movs
jp
add
std
call
jle
cdq
cmp
add
push
add
add
(bad)
and
add
and
add
neg
data16
scas
or
outs
add
std
add
add
pushf
or
add
call
daa
fistp
lahf
push
dec
shl
push
aaa
stos
sti
xor
add
dec
into
add
aas
add
je
push
hlt
or
cmp
and
add
xchg
scas
inc
not
and
add
inc
add
das
jno
add
pop
add
adc
outs
add
rol
mov
adc
jnp
lea
icebp
test
fld
mov
inc
addr16
fcmovb
add
xchg
add
sbb
sbb
dec
fadd
add
lods
int
add
dec
(bad)
mov
add
add
xchg
jg
ror
dec
sub
push
mov
pop
aaa
mov
pusha
fisttp
add
stos
mov
pop
dec
xchg
cmp
add
mov
aaa
mov
add
mov
xchg
dec
in
add
icebp
imul
xchg
jbe
sbb
add
inc
dec
jns
fwait
movs
mov
mov
fild
add
push
and
cmp
les
out
mov
add
pop
xor
push
or
pop
in
push
mov
fiadd
push
call
cmc
div
stc
lods
inc
dec
mov
add
cld
sbb
lds
add
outs
xchg
add
repz
mov
rcr
ret
jl
sub
int3
sub
add
add
lock
ins
xchg
rol
add
push
das
ret
pusha
pop
cld
dec
ins
mov
cmp
push
inc
sbb
sbb
aaa
sub
add
add
xchg
outs
adc
fcmovnu
inc
cmp
dec
sub
retf
push
mov
lock
in
inc
pop
add
adc
jnp
not
add
cmp
loop
pop
cmp
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
ret
mov
push
mov
add
mov
and
lea
mov
jmp
push
mov
mov
in
mov
cmp
mov
cmp
jg
lea
and
call
jmp
push
call
mov
mov
mov
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
xor
mov
sub
add
inc
inc
sbb
xor
cmp
jne
call
jne
jmp
add
add
mov
mov
mov
inc
mov
dec
add
cmp
jne
mov
xor
cmp
jne
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
jne
mov
dec
xchg
mov
mov
sub
mov
mov
push
call
sub
mov
add
mov
mov
mov
and
lea
mov
jmp
mov
dec
mov
and
mov
mov
mov
lea
push
mov
push
mov
push
lea
push
call
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
push
call
mov
pop
ret
lea
push
mov
add
sub
mov
mov
jmp
push
mov
mov
add
push
mov
and
xchg
mov
call
test
jne
mov
jmp
mov
mov
lea
push
mov
push
mov
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
xor
push
call
xor
mov
mov
mov
lea
push
mov
push
mov
push
lea
push
call
cmp
je
add
mov
cmp
jg
lea
and
call
jmp
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
and
lea
mov
mov
push
mov
push
call
mov
dec
mov
and
cmp
je
mov
mov
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
dec
xchg
mov
push
call
inc
cmp
jne
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
call
mov
call
mov
call
test
je
add
mov
mov
mov
mov
mov
add
mov
mov
dec
xchg
mov
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
mov
mov
pop
ret
lea
push
mov
add
sub
mov
mov
push
push
mov
sub
push
mov
push
call
mov
mov
dec
mov
and
xor
mov
mov
pop
ret
push
mov
add
add
mov
cmp
jg
lea
and
call
jmp
push
call
mov
mov
mov
mov
add
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
mov
push
lea
push
call
mov
mov
add
mov
call
mov
mov
mov
mov
mov
xor
mov
call
mov
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
mov
pop
ret
lea
push
mov
add
add
mov
cmp
jg
lea
and
call
jmp
push
call
mov
mov
lea
and
mov
and
xchg
mov
mov
xor
mov
xor
add
mov
sub
mov
mov
add
add
mov
mov
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
mov
mov
mov
mov
xor
mov
call
mov
mov
mov
add
mov
mov
pop
ret
lea
push
mov
add
mov
dec
mov
and
mov
cmp
jne
call
mov
mov
add
mov
call
sub
mov
mov
mov
call
mov
mov
mov
call
add
add
mov
cmp
jg
lea
and
call
jmp
push
call
mov
mov
mov
cmp
je
mov
mov
dec
xchg
mov
push
call
inc
cmp
jne
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
call
mov
call
call
test
jne
mov
mov
and
push
mov
cmp
jne
add
mov
dec
mov
mov
inc
inc
inc
inc
mov
cmp
jne
sub
mov
mov
mov
push
mov
cmp
je
mov
lea
call
mov
mov
lea
push
mov
push
mov
push
lea
push
call
push
mov
push
mov
push
cmp
jne
mov
dec
mov
and
mov
pop
ret
nop
push
mov
add
add
mov
cmp
jg
lea
and
call
jmp
push
call
mov
mov
mov
xor
div
cmp
jne
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
xor
mov
add
dec
jmp
mov
mov
mov
mov
mov
xor
mov
sub
inc
cmp
jbe
mov
add
mov
cmp
jg
lea
and
call
jmp
push
call
mov
mov
mov
xor
cmp
jne
dec
mov
sub
sub
xor
mov
mov
add
xor
mov
mov
mov
sub
mov
mov
mov
push
cmp
je
xor
xor
mov
add
pop
xor
mov
cmp
jbe
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
xor
mov
mov
xor
mov
add
jmp
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
sub
mov
dec
xchg
mov
jmp
push
mov
mov
in
mov
rol
jl
fmul
add
add
push
mov
add
mov
lea
and
sub
xchg
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
sub
mov
inc
cmp
jne
mov
mov
mov
mov
push
mov
push
call
and
cmp
jge
mov
mov
mov
mov
mov
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
call
mov
dec
mov
mov
inc
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
and
mov
mov
mov
call
inc
cmp
jne
call
mov
cmp
jle
mov
jmp
mov
sub
add
xchg
and
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
sub
mov
mov
mov
call
inc
cmp
jl
mov
mov
jmp
mov
lea
sub
cmp
jge
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
call
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
mov
push
mov
call
mov
mov
mov
mov
push
mov
push
call
test
jne
mov
xchg
mov
and
cmp
jge
mov
mov
add
mov
jmp
inc
mov
and
mov
mov
mov
mov
push
call
test
je
sub
lea
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
cmp
jg
mov
mov
mov
mov
dec
mov
mov
inc
cmp
jne
mov
mov
and
call
mov
mov
xor
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
add
mov
add
cmp
jle
mov
mov
mov
call
mov
mov
and
mov
mov
mov
xor
mov
mov
xor
mov
mov
push
lea
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
mov
pop
ret
add
add
add
add
xor
pop
sub
jns
xor
add
bound
jne
add
add
cmp
jno
outs
add
add
sub
add
add
ins
add
ja
jp
imul
add
jno
pop
cmp
jbe
add
jbe
bound
outs
pop
sub
add
add
je
cmp
add
fs
add
add
xor
fs
ins
jne
jno
je
add
add
add
add
add
sub
imul
xor
add
push
add
add
add
add
add
add
jne
cmp
push
add
add
add
jb
bound
outs
jb
push
jno
add
push
mov
add
mov
mov
lea
push
mov
push
mov
push
lea
push
call
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
xchg
mov
pop
ret
lea
push
mov
add
xor
mov
mov
mov
mov
mov
push
mov
push
call
test
je
mov
lea
mov
mov
mov
inc
cmp
jne
call
mov
mov
sub
mov
xchg
push
push
mov
call
mov
mov
xor
mov
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
and
and
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
dec
mov
mov
inc
call
mov
mov
xor
mov
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
xor
mov
mov
mov
mov
push
call
test
je
mov
mov
mov
mov
mov
call
mov
dec
xchg
mov
inc
cmp
jne
mov
mov
xor
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
dec
mov
mov
mov
mov
mov
push
call
test
jne
mov
mov
mov
mov
dec
xchg
mov
push
push
call
mov
mov
lea
and
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
mov
mov
test
jne
mov
sub
inc
mov
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
mov
mov
mov
push
push
call
xor
mov
mov
lea
add
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
xchg
mov
mov
mov
lea
and
lea
and
mov
and
xchg
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
call
cmp
jg
lea
mov
sub
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
mov
push
call
test
jne
mov
xchg
mov
add
mov
mov
mov
push
call
cmp
jl
mov
mov
jmp
mov
mov
mov
mov
call
call
mov
mov
xor
mov
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
mov
mov
cmp
jge
mov
mov
xchg
mov
mov
xor
mov
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
mov
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
and
lea
mov
mov
mov
mov
mov
mov
push
call
sub
mov
add
add
mov
cmp
jg
lea
and
call
jmp
push
call
mov
mov
mov
pop
ret
add
add
ins
jo
xor
push
cmp
jbe
add
je
and
jo
sub
outs
add
add
pop
add
add
add
imul
add
add
add
jo
js
ins
add
ja
xor
pop
add
jbe
add
add
ja
add
add
xor
add
add
and
and
ins
sub
jne
data16
jns
sub
sub
add
jns
add
add
jbe
push
imul
je
jo
ins
add
add
add
ins
add
add
js
xor
push
add
add
and
add
jno
pop
jo
bound
pop
fs
add
xor
popa
add
add
add
add
add
add
add
add
jp
sub
jns
bound
popa
js
js
jno
add
add
add
sub
add
aaa
add
add
add
add
add
ja
jbe
ja
jno
and
add
mov
mov
mov
ret
mov
push
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
and
lea
mov
mov
mov
pop
ret
nop
mov
call
ret
nop
push
mov
add
mov
mov
dec
xchg
mov
push
call
inc
cmp
jne
mov
xchg
cmp
jge
sub
lea
mov
mov
mov
call
mov
call
call
lea
and
mov
and
xchg
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
cmp
je
mov
and
lea
mov
mov
pop
ret
push
sbb
ret
ret
jne
gs
outs
in
mov
outs
sub
and
rol
or
rol
mov
pop
nop
mov
inc
add
inc
add
dec
sbb
clc
(bad)
(bad)
fidiv
rol
aad
jmp
add
inc
test
int
repz
dec
inc
hlt
stos
(bad)
jmp
stos
dec
out
(bad)
popa
jle
stc
xchg
aaa
mov
loopne
mov
out
push
(bad)
cwde
push
mov
mov
into
into
pop
imul
jmp
jne
imul
fucomi
call
icebp
stc
inc
iret
enter
mov
dec
ds
cld
jnp
inc
(bad)
pop
repz
dec
sbb
das
mov
sub
call
cmp
and
jp
jg
xchg
add
adc
jnp
jns
dec
movs
movs
cmc
cmc
call
jb
push
jge
add
cmp
pop
cli
inc
dec
lods
xor
jb
mov
out
sbb
std
shl
out
scas
push
scas
xchg
adc
cmp
in
std
dec
ror
nop
movs
push
or
mov
ins
xchg
cld
xchg
sub
int
xchg
mov
and
dec
scas
push
test
mov
inc
add
add
dec
pop
mov
mov
mov
fiadd
ror
inc
clc
arpl
int3
lods
mov
lds
js
dec
rol
cmp
pushf
cmp
inc
add
mov
div
dec
xchg
add
xor
int3
cmp
or
inc
add
call
add
movs
nop
xlat
inc
adc
rol
inc
pop
push
out
popa
push
outs
mov
stos
jle
xchg
add
jg
js
rol
xchg
inc
mov
rol
adc
js
aaa
inc
aas
scas
or
cdq
push
fisubr
(bad)
sbb
fcomi
jle
lea
sbb
mov
mul
jb
cmovns
daa
rol
lods
sub
xchg
xchg
sbb
test
add
jg
cmp
xor
stos
lahf
sub
shl
(bad)
(bad)
inc
add
sub
sub
fild
in
sbb
fmulp
addr16
movs
xor
mov
ror
daa
rol
mov
sub
dec
rol
pop
jno
pop
(bad)
(bad)
xchg
adc
aaa
mov
dec
movs
nop
mov
cmps
mov
dec
push
dec
ret
inc
add
jnp
inc
add
xor
lea
sub
pop
mov
mov
sbb
wrmsr
xor
jmp
in
sbb
jne
add
mov
mov
mov
popf
mov
loopne
(bad)
enter
cmps
ja
dec
inc
idiv
mov
out
lea
mov
mov
sti
sti
pop
cli
neg
mov
retf
ins
rcl
or
(bad)
mov
add
dec
rol
int3
pop
daa
in
pop
or
retf
cld
je
ret
rol
das
in
jp
cmp
xor
pop
rol
into
fdivr
mov
lods
idiv
repnz
mov
popa
mov
rcr
out
popa
es
js
dec
div
loope
adc
retf
mov
and
add
adc
push
xchg
xchg
pushf
dec
inc
xchg
daa
lahf
jmp
mov
test
jbe
js
jmp
pop
movs
jmp
cmp
add
(bad)
stos
push
das
mov
shr
js
xchg
jbe
cli
inc
repz
in
push
(bad)
test
or
not
sti
ins
test
in
lds
aas
sbb
test
xor
ja
xor
and
mov
bound
rcr
xchg
les
js
js
jmp
gs
jmp
test
jnp
aaa
jno
pop
jmp
jae
das
stc
movs
cmp
mov
mov
pop
xchg
push
fdiv
(bad)
out
cmc
cmp
xor
jo
ret
pop
xchg
jl
ret
mov
jae
xchg
cmp
push
jo
and
cmp
loopne
int3
push
cmp
mov
pop
int
imul
das
xchg
or
cmps
lds
mov
sbb
imul
jmp
into
gs
loopne
dec
movs
add
sbb
xchg
int3
cmp
test
rol
push
add
movs
rol
test
add
jno
jp
rol
fistp
cmc
cmc
rol
rol
add
pop
sub
add
cdq
push
push
ds
movs
mov
outs
cmp
das
imul
sti
aas
pusha
hlt
int
movs
jmp
ins
ret
cmc
jecxz
inc
arpl
xlat
inc
add
fwait
cmp
inc
(bad)
pop
jne
xor
or
or
pop
pop
fldenv
iret
inc
or
mov
dec
retf
jmp
xchg
ret
mov
add
xchg
out
push
inc
in
add
pop
push
int
das
neg
adc
xchg
cmp
push
mov
int3
enter
sub
add
cmps
movs
test
jp
cmps
retf
into
in
loope
pushf
repnz
leave
int3
mov
mov
sti
lods
inc
cli
neg
repnz
inc
sbb
push
stos
inc
mov
icebp
inc
add
mov
shl
add
inc
add
dec
rol
inc
add
nop
fs
icebp
inc
add
pop
dec
push
or
shl
add
inc
add
add
cld
jnp
jmp
mov
add
or
icebp
inc
add
dec
(bad)
icebp
inc
add
sbb
shl
add
or
movs
xchg
(bad)
icebp
inc
add
mov
cli
adc
icebp
inc
add
icebp
inc
add
fsubr
(bad)
icebp
inc
add
mov
push
mov
(bad)
icebp
inc
add
jecxz
and
add
stos
div
or
inc
cmp
dec
aad
xor
idiv
ror
xchg
(bad)
sub
dec
push
dec
mov
cld
push
inc
cmp
jno
sar
adc
movs
loop
mov
jecxz
cmp
test
aad
out
fsubr
sti
inc
pop
(bad)
(bad)
mov
push
mov
test
fldenv
lods
loope
jmp
js
mov
repnz
popf
add
pop
push
sbb
clc
or
pushf
fild
and
mov
idiv
adc
mov
cmp
pop
xor
xor
pop
lods
loop
in
mov
adc
add
mov
addr16
fld
addr16
dec
(bad)
mov
test
sbb
jl
adc
lods
jbe
mov
mov
jne
and
ret
stos
sti
pop
dec
add
fwait
sub
lods
sub
(bad)
xor
dec
xchg
cdq
mov
mov
sbb
je
pop
out
push
cmp
inc
xlat
gs
iret
or
jae
push
and
xor
jmp
inc
add
pop
ds
stos
xchg
fistp
xchg
(bad)
frstor
(bad)
jbe
jg
add
or
push
xlat
inc
add
xlat
xor
xlat
rcl
mov
jle
mov
outs
call
jl
and
inc
add
adc
packuswb
jp
xchg
inc
add
xchg
aas
push
stc
cmp
xlat
inc
out
adc
inc
add
sbb
jmp
je
push
inc
div
sbb
inc
add
cs
rol
add
inc
add
cmp
lock
pop
loope
xchg
pop
cwde
out
xor
inc
add
test
jl
jmp
xlat
inc
add
jge
jae
bnd
and
inc
add
and
and
jmp
inc
add
ins
mov
push
xlat
inc
add
and
push
cli
call
sbb
inc
add
popf
cld
ja
repnz
sub
inc
add
cli
out
in
add
xlat
inc
add
pop
or
jns
repnz
fld
inc
add
stos
push
xor
jb
addr16
cmps
pop
ror
ja
mov
outs
and
sbb
sub
rol
sub
mov
rol
mov
jns
inc
add
inc
xor
push
rol
pop
xlat
inc
add
xchg
ins
xlat
inc
add
ds
add
xchg
adc
ins
scas
in
xor
(bad)
xor
test
mov
inc
add
popa
aam
rol
lock
rol
loopne
mov
ret
out
lock
mov
fisub
mov
add
inc
add
out
and
outs
dec
shr
pop
repz
inc
add
xor
adc
cmc
jne
jo
inc
add
or
sbb
cmps
cmps
rcr
jle
js
cli
mov
inc
add
push
rol
jbe
rol
jo
inc
add
iret
sub
imul
pop
xlat
inc
add
mov
pop
enter
pop
rol
add
inc
add
pop
shl
add
inc
pop
mov
fild
xchg
sar
je
arpl
fistp
into
fisttp
fdiv
cld
mov
in
jmp
inc
add
add
inc
ret
mov
rol
cmp
mov
mov
std
inc
mov
into
or
inc
add
pop
rol
jmp
lods
and
xchg
jg
xlat
inc
add
mov
dec
ss
add
jg
or
rol
add
xchg
push
test
loope
dec
rol
call
cmps
sub
lahf
inc
icebp
push
iret
pop
adc
jnp
shl
pop
add
mov
js
add
jae
iret
mov
xchg
mov
or
cli
xor
and
push
les
sub
jmp
add
inc
add
out
lahf
rol
gs
dec
enter
fadd
adc
cmp
mov
(bad)
mov
fsub
mov
arpl
xchg
loope
pop
rol
and
retf
xor
jns
sbb
iret
xor
test
mov
push
xor
add
lds
push
mov
stos
call
mov
adc
stc
mov
sub
(bad)
loope
mov
ret
(bad)
out
add
pop
or
das
scas
mov
hlt
add
mov
pop
aad
adc
mov
jns
in
jl
mov
fldcw
pop
leave
pop
xchg
mov
scas
out
icebp
int
outs
mov
dec
test
outs
pop
fwait
xchg
inc
and
xor
dec
mov
in
popf
push
int
mov
cwde
xor
outs
in
ficomp
xchg
fnstcw
and
dec
jno
and
das
mov
mov
int3
jbe
movs
gs
fsub
mov
mov
sbb
ret
add
cmp
daa
adc
test
inc
sbb
ss
neg
mov
sar
stc
jle
inc
out
popf
push
stos
adc
sbb
sub
(bad)
mov
xlat
pop
xchg
popa
adc
pop
mov
test
aad
mov
dec
mov
push
sbb
(bad)
mov
out
xor
sbb
cmps
rcr
inc
(bad)
fidiv
data16
sti
fisub
xchg
xchg
out
sub
and
adc
push
lods
jae
outs
aad
lock
xor
add
sbb
sar
stos
imul
push
scas
in
push
dec
movs
outs
adc
ss
adc
repz
xor
gs
or
arpl
jbe
rcl
xchg
in
adc
inc
pop
adc
pcmpgtw
jl
mov
lods
dec
(bad)
int
lock
inc
sbb
add
jnp
mov
pop
inc
pop
sub
cmp
std
xor
call
adc
xlat
test
add
fbstp
scas
add
popf
pop
dec
add
repnz
push
pop
mov
in
popa
jb
adc
add
call
jecxz
mov
or
cmps
mov
xchg
sbb
test
push
or
jmp
popa
std
pop
pop
out
out
cwde
mov
jecxz
ficomp
test
and
cs
mov
mov
lock
mov
push
xchg
dec
jns
cs
mov
pop
xchg
mov
es
imul
inc
fwait
out
jne
int3
push
fidivr
push
xor
lods
inc
jne
jno
aad
data16
mov
cmp
ins
ret
repnz
push
xchg
sub
(bad)
mov
pushf
sbb
sbb
cmp
jbe
pop
xchg
out
test
rcr
and
or
iret
mov
ret
data16
dec
add
mov
into
test
iret
cwde
movs
push
inc
icebp
call
(bad)
xchg
cmp
scas
fstp
mov
push
mov
jbe
popa
ror
pop
test
mov
clc
test
pop
movs
adc
mov
jle
xor
in
mov
dec
es
out
cld
jge
cmps
jp
xchg
loop
jbe
fadd
ret
cdq
cmc
ficomp
repz
enter
fisubr
and
inc
sub
adc
test
int3
and
or
mov
push
js
push
mov
loop
sub
arpl
test
adc
dec
(bad)
shl
fwait
popa
das
push
iret
push
loopne
hlt
outs
pusha
mov
cmp
repz
dec
and
(bad)
adc
sbb
xor
pop
data16
push
pop
sti
pop
loop
inc
fs
je
mov
retf
push
ds
and
sbb
movs
(bad)
test
leave
adc
mov
mov
sbb
xchg
ds
lds
and
push
cmp
mov
add
mov
fisubr
add
(bad)
test
sbb
test
jno
adc
jl
inc
add
outs
(bad)
(bad)
inc
add
jecxz
movs
movs
and
xlat
inc
add
mov
inc
add
rol
aaa
dec
rol
sub
push
stc
mov
mov
rol
pop
xor
inc
add
inc
imul
xlat
mov
inc
fsub
push
xchg
push
mov
add
(bad)
dec
popa
adc
sbb
and
sbb
jecxz
arpl
stos
and
jmp
add
xchg
push
shl
add
inc
movs
dec
push
out
movs
imul
mov
(bad)
icebp
inc
add
jbe
sbb
mov
inc
sbb
or
test
shr
push
adc
xlat
or
xchg
ins
stos
data16
mov
jl
retf
jl
stos
nop
ss
mov
loopne
mov
jns
cmps
ret
cli
add
mov
movs
xor
adc
cmps
jb
outs
adc
fwait
mov
mov
movs
mov
xchg
into
fnstsw
dec
mov
jnp
dec
ret
ss
icebp
inc
add
jno
jg
inc
jg
or
icebp
inc
add
sbb
and
out
mov
icebp
inc
add
sbb
fist
hlt
mul
scas
dec
push
call
add
add
pushf
adc
icebp
rol
xchg
jge
inc
add
sub
js
inc
add
fcmovb
in
test
xchg
test
je
pop
pop
and
retf
js
inc
add
mov
mov
dec
cmps
xlat
faddp
inc
add
sti
dec
out
jl
out
enter
sbb
inc
add
add
fdivr
add
jg
imul
rol
loop
rol
pop
aas
rol
push
cwde
jbe
and
sti
cwde
sbb
in
push
mov
adc
add
(bad)
inc
add
je
inc
add
imul
xor
inc
pop
jl
inc
add
push
fld
mov
in
jle
dec
rol
inc
xor
scas
(bad)
push
rol
jae
rol
inc
je
inc
add
xchg
inc
add
push
aad
mov
sub
push
push
nop
sub
movs
mov
mov
or
rol
fs
mov
inc
add
das
rol
cmp
rol
xchg
cmps
loop
xchg
mov
stc
jg
movs
push
shl
out
data16
mov
jle
mov
mov
dec
ds
lahf
mov
and
xor
jmp
or
cmps
add
outs
icebp
ins
outs
pop
not
sub
dec
fadd
mov
mov
inc
add
rol
ror
add
cmps
call
xchg
ds
fstp
push
mov
hlt
call
add
mov
jmp
out
ja
imul
scas
xchg
sbb
dec
and
jbe
lahf
xchg
ss
in
mov
xchg
(bad)
cmp
ins
stc
jno
xlat
in
or
cli
cmp
push
inc
mov
rcl
or
retf
cld
xor
neg
or
retf
(bad)
push
mov
call
aaa
jecxz
pop
pop
pop
les
sbb
idiv
jo
in
cld
cmc
sbb
push
sub
pop
xor
adc
pop
mov
sub
(bad)
mov
iret
jbe
cmp
jmp
mov
lea
inc
push
cmps
scas
add
mov
cs
sub
dec
xor
(bad)
sub
jnp
rol
add
push
leave
in
rol
or
jns
sar
push
xor
iret
cmp
sub
shl
lods
outs
cld
and
cmp
pop
adc
or
rcl
fadd
(bad)
cmp
repnz
leave
test
adc
and
adc
fwait
and
or
jmp
mov
addr16
cmp
xor
neg
jmp
mov
rcl
xor
mov
fldenv
push
cmc
sbb
shr
xchg
push
jo
push
mov
pop
mov
pop
xor
lods
mov
cmp
movs
(bad)
jmp
cmp
gs
xor
adc
sub
rcr
outs
or
mov
(bad)
inc
add
mov
jns
cdq
xor
inc
add
sub
es
and
fbstp
push
adc
imul
sahf
xchg
xor
shl
lods
push
cmp
and
das
dec
push
or
enter
in
pushf
jmp
cld
aas
jge
lods
dec
jmp
jmp
loop
dec
sub
dec
in
jns
cmp
xchg
ins
pop
leave
add
das
(bad)
sbb
adc
cmp
jne
fst
cmp
inc
add
sbb
and
add
mov
push
addr16
rol
in
sub
inc
add
jb
rol
fadd
inc
add
int3
inc
test
jl
sub
xchg
fwait
cmp
dec
mov
test
lea
mov
mov
and
cmp
jne
mov
inc
add
and
popf
xchg
inc
add
sbb
mov
sub
mov
xchg
cmp
je
call
mov
cmp
jle
mov
mov
mov
lea
mov
xchg
mov
mov
mov
cmp
je
mov
push
mov
ret
mov
sub
mov
mov
mov
mov
mov
jmp
ret
mov
