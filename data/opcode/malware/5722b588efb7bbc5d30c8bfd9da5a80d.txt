or
add
push
push
je
imul
repz
or
sbb
sbb
fistp
adc
sub
or
push
mov
mul
je
popw
sbb
loop
jae
in
std
(bad)
adc
and
mov
push
cmp
in
in
xor
push
sub
in
in
sub
in
in
sbb
adc
in
in
or
add
jb
repnz
cld
lock
hlt
fcmovne
in
jbe
aas
pusha
subps
aas
xchg
xchg
xchg
xchg
je
ins
in
mov
rcpps
and
or
test
popf
je
push
mov
and
mov
ss
pop
ret
addr16
cmp
cmp
rcr
ds
int3
(bad)
enter
in
cmp
jne
(bad)
iret
out
inc
push
push
add
jne
xor
pop
enter
push
inc
mov
mov
ret
lea
mov
mov
mov
inc
cmp
fnstsw
mov
mov
mov
push
nop
mov
add
scas
mov
mov
jnp
fucomip
xchg
loopne
rcl
mov
or
adc
pop
pop
adc
add
or
jg
call
ret
mov
push
mov
mov
mov
mov
add
rcr
mov
(bad)
out
push
or
push
or
ret
and
add
inc
mov
mov
int
or
inc
add
adc
or
fnstsw
fistp
jmp
loopne
mov
sub
test
push
pop
pop
pop
push
fbstp
je
sti
mov
xchg
cmp
jb
mov
add
call
(bad)
and
mov
or
mov
mov
or
dec
ret
jmp
pop
mov
add
pop
adc
outs
add
sub
jbe
lods
loope
adc
sub
mov
sub
mov
aam
sti
(bad)
lock
or
jmp
sbb
sti
jne
sbb
and
mov
cmp
sti
adc
jge
mov
(bad)
call
and
dec
outs
xchg
add
add
push
push
jg
mov
fidiv
test
je
mov
mov
dec
and
sub
dec
mov
mov
fldenv
add
mov
push
lods
push
movs
jne
icebp
push
push
add
xchg
dec
pushf
cmp
in
mov
popa
clc
ret
fucomip
mov
(bad)
mov
or
add
mov
call
fadd
lds
mov
push
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
rcr
addr16
sub
sbb
xlat
sar
imul
ror
add
fild
mov
jmp
jl
jle
sbb
pusha
je
loop
pusha
sbb
pop
inc
dec
hlt
outs
mov
mov
and
xor
add
add
sbb
out
xchg
sub
mov
hlt
idiv
pop
cmp
add
and
mov
cmp
or
sbb
(bad)
jbe
scas
adc
sti
push
ss
adc
dec
jmp
xchg
add
ss
mov
popf
pushf
out
jb
inc
cwde
sub
xor
out
cmp
add
dec
jne
nop
out
sub
or
sbb
jae
mov
cmp
jae
inc
xchg
add
or
ror
ins
mov
push
ja
clc
mov
(bad)
aas
sub
out
shl
shl
cmp
jg
std
jmp
cmp
add
mov
nop
inc
ds
inc
ds
adc
jne
push
(bad)
pop
add
in
inc
jne
cmp
movs
and
push
and
popa
xchg
aad
pusha
xchg
ins
pop
add
cli
jl
sub
add
je
cmp
inc
push
shl
jle
push
sub
push
stos
(bad)
call
mov
nop
or
ror
fst
fcom
gs
mov
push
pop
xlat
fwait
lea
cmp
test
xchg
jo
xlat
adc
int3
imul
jne
push
fcmovb
loopne
cmp
js
sti
inc
cmp
sub
inc
popf
adc
or
mov
pop
sahf
push
(bad)
inc
mov
cwde
aaa
jecxz
add
add
ret
jg
cmp
jae
mov
out
ror
jge
xor
push
test
je
aad
rcl
ret
addr16
or
js
add
adc
jmp
jecxz
lock
lock
pop
sbb
add
ss
push
mul
push
mov
push
cmp
and
enter
adc
lock
and
push
sbb
fidiv
or
adc
fwait
add
cmp
mov
adc
add
mov
pop
ds
pop
pop
push
adc
sub
push
fstp
rol
mov
mov
outs
test
test
shl
nop
sbb
lods
add
in
adc
jo
out
gs
add
add
push
push
dec
xor
outs
push
test
bound
jmp
mov
sbb
sbb
fistp
push
cmp
ja
or
cmp
pop
jg
adc
test
jns
add
sar
jle
add
cwde
mov
jmp
sub
mov
sub
mov
pop
adc
sti
inc
inc
push
pop
add
or
mov
cmp
das
jne
or
sbb
add
sbb
cmp
jl
mov
push
adc
shl
js
es
or
or
add
mov
mov
and
xchg
rol
push
hlt
test
cld
(bad)
jg
add
lods
sahf
jle
jbe
or
push
or
push
rol
sbb
dec
mov
ret
dec
call
xor
adc
je
dec
iret
or
add
cmps
(bad)
sub
xor
test
test
je
not
mov
or
(bad)
cmp
cmp
ret
add
(bad)
adc
fisubr
ja
fdiv
add
mov
clc
add
and
add
mov
(bad)
bound
and
mov
pop
cmovs
pop
adc
add
dec
xchg
retf
je
jo
or
jo
mov
into
push
lea
mov
loopne
sub
cld
jg
clc
sub
sub
cmp
jge
and
mov
sti
jge
jge
loopne
adc
xlat
cld
lea
and
mov
pusha
test
mov
aad
(bad)
lds
clc
add
adc
shl
clc
(bad)
add
add
add
iret
mov
mov
mov
add
sub
jo
(bad)
imul
test
mov
repz
adc
adc
mov
mov
sbb
cmp
inc
adc
cmp
add
sub
cmp
or
in
or
test
adc
scas
add
inc
adc
or
mov
adc
mov
or
adc
mov
xchg
sbb
cmp
lea
movs
push
rol
movs
mov
dec
or
dec
sub
pusha
cdq
or
pop
lds
xor
pop
cmp
pusha
push
and
pop
add
or
jg
adc
repz
(bad)
sub
lds
jmp
nop
sub
fsub
pop
jbe
mov
movs
sub
add
cmp
mov
cld
adc
leave
aam
loopne
push
sub
push
arpl
call
in
or
fsub
pop
inc
stos
pop
int3
inc
dec
xlat
test
int
(bad)
cmc
mov
clc
stc
mov
or
push
or
or
jmp
lock
or
stos
jo
jle
sub
movd
lods
cs
mov
mov
pop
je
pop
jmp
sub
test
sbb
fcom
jle
jb
pusha
mov
sub
cmp
adc
ret
pop
cmp
inc
add
xor
jae
loope
sub
xor
or
pop
mov
and
leave
jmp
inc
add
jne
js
mov
or
pop
rcl
adc
test
xor
movs
pusha
or
push
scas
push
int3
sti
clc
stos
jle
inc
cld
jbe
cld
add
adc
xor
push
push
mov
push
pop
in
cli
add
or
sti
mov
mov
fadd
test
jg
loop
xchg
or
mov
loopne
aaa
xor
inc
scas
shl
push
or
jns
mov
jmp
mov
jge
ret
lods
inc
(bad)
pushf
or
pop
lea
or
mov
in
add
add
sbb
mov
sbb
punpckldq
cmp
add
cdq
xor
inc
and
or
push
fs
and
mov
or
pop
pop
test
pop
pop
push
push
sbb
mov
or
jne
out
or
nop
xchg
pop
into
jo
xor
cmp
pop
lock
test
jne
test
sbb
fisttp
ja
dec
lock
add
add
add
mov
mov
add
push
or
test
(bad)
jge
xor
cmp
das
add
pop
mov
mov
cmp
mov
js
stos
in
and
jle
sbb
js
jg
dec
mov
adc
ret
sbb
scas
or
inc
cli
test
mov
mov
mov
dec
add
inc
adc
rcl
shl
pop
mov
sbb
std
lea
(bad)
test
lock
call
scas
add
mov
loope
add
mov
(bad)
lock
inc
sbb
adc
adc
add
sbb
pushf
(bad)
into
not
cmp
mov
cli
add
ins
sub
dec
das
neg
add
ror
add
sbb
mov
push
pop
mov
mov
and
xor
mov
data16
sub
(bad)
clc
jp
cmp
mov
adc
xor
dec
ds
xor
adc
push
mov
lock
icebp
test
in
and
sbb
cmp
mov
mov
cmp
push
mov
or
add
popa
loopne
or
cmp
xchg
ret
and
jmp
add
ret
xor
add
inc
pop
push
mov
dec
sbb
inc
mov
or
add
cmc
adc
xor
add
adc
mov
or
mov
adc
mov
jmp
out
addps
cli
(bad)
mov
(bad)
add
out
(bad)
retf
xchg
dec
push
mov
and
jge
and
cmp
adc
call
popf
loopne
push
or
xor
mov
leave
repz
ds
je
pop
cmp
je
sbb
enter
ror
pop
or
add
push
jmp
push
xor
add
stc
pop
repz
shl
arpl
push
push
arpl
adc
cwde
dec
mov
and
and
cmp
push
sub
sbb
cwde
add
test
sti
sbb
mov
mov
mov
das
ds
adc
jg
pop
fisttp
jge
ret
push
push
push
jne
mov
div
sar
or
das
iret
call
sub
mov
outs
inc
or
je
jb
sbb
ret
sub
inc
hlt
jl
push
(bad)
call
sar
(bad)
mov
inc
rep
jmp
mov
leave
jmp
mov
jmp
lock
jecxz
mov
push
ret
pop
out
mov
sbb
jbe
mov
push
cmp
ja
je
pusha
js
div
mov
rep
xchg
inc
je
cld
lea
xor
imul
add
ds
inc
pusha
addr16
cmp
mov
aas
mov
movs
pop
data16
sub
call
je
dec
sub
xchg
push
outs
stos
push
mov
pop
pop
loop
pop
cmp
popa
jno
add
add
xor
mov
inc
jbe
sbb
adc
in
div
push
mov
ja
and
adc
jne
call
pop
push
test
je
(bad)
lahf
jmp
scas
(bad)
lock
mov
fwait
sbb
dec
or
mov
shl
data16
push
fisttp
rep
adc
stos
pop
mov
push
push
sub
fstp
mov
inc
clc
and
add
je
push
scas
xor
js
pop
pop
je
xor
test
cmps
xor
and
jle
and
add
jmp
or
or
cmp
ja
lea
add
add
push
(bad)
fistp
out
int
sar
jmp
inc
jmp
neg
jle
js
mov
sub
jmp
inc
inc
jmp
mov
fistp
popa
jb
xchg
and
add
not
add
scas
leave
pushf
add
aad
sahf
mov
mov
cwde
pop
xor
mov
mov
and
pop
push
repz
sub
jbe
int3
(bad)
out
or
add
dec
je
adc
(bad)
fild
or
lods
push
sub
faddp
push
cmp
jns
pcmpeqb
mov
aas
pop
mov
dec
sub
push
cli
xchg
jge
dec
dec
gs
ret
std
das
test
fstp
fld
or
ss
out
mov
and
arpl
dec
adc
mov
push
repnz
inc
pushf
or
pop
stc
in
ret
mov
adc
in
mov
mov
sbb
xchg
and
(bad)
das
call
inc
mov
mov
call
fnstsw
xchg
and
mov
adc
xor
stc
xchg
pop
add
leave
sbb
mov
cmp
ficomp
call
mov
bound
cmp
(bad)
pop
mov
xlat
fadd
outs
xor
xchg
push
or
push
push
push
mov
ret
inc
mov
push
pop
test
enter
mov
(bad)
(bad)
call
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
(bad)
(bad)
fisttp
add
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
(bad)
(bad)
jg
iret
dec
js
inc
mov
stos
mov
cmp
or
mov
pop
clc
(bad)
(bad)
jmp
jg
mov
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
jmp
jle
push
inc
mov
push
sbb
sar
repnz
test
(bad)
(bad)
jmp
nop
fstp
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
(bad)
(bad)
inc
repz
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
(bad)
(bad)
(bad)
dec
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
and
push
movs
mov
popa
mov
and
addr16
repz
mov
sub
(bad)
call
push
pusha
les
outs
bound
xor
and
adc
mov
cmp
inc
push
pop
and
push
enter
jl
outs
and
hlt
movzx
and
cld
push
push
popa
test
push
call
xor
push
push
mov
mov
hlt
pop
hlt
push
data16
add
test
sahf
mov
xchg
fs
lea
xor
out
mov
add
push
clc
pop
aas
or
dec
xchg
ret
sub
inc
push
push
inc
push
inc
pop
(bad)
(bad)
(bad)
inc
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
ins
jne
jg
fcom
jecxz
fldcw
mov
test
cld
aam
leave
mov
inc
jmp
clc
std
sbb
sub
rcr
sbb
push
push
aaa
sbb
xor
mov
es
push
pop
lods
test
dec
pop
xchg
rcr
shr
pop
mov
or
push
cld
add
mov
aam
mov
xor
push
shr
dec
rep
pop
loopne
rcr
ror
movs
add
pop
fadd
add
sbb
in
cmp
je
pop
mov
add
jae
add
mov
mov
push
sbb
jne
jne
iret
(bad)
sub
mov
mov
shl
clc
das
data16
push
inc
xchg
loop
call
add
paddd
femms
add
and
loope
add
rcl
adc
cmp
rcr
clc
mov
loop
mov
xchg
push
cs
mov
push
pop
inc
xor
rcr
adc
clc
mov
stc
push
push
mov
push
fcom
hlt
add
pop
(bad)
lock
sbb
lea
setne
out
je
cmp
sub
push
in
int
or
mov
cmp
cwde
pop
mov
cmp
jne
dec
jae
(bad)
jb
cmp
jne
push
or
jne
or
cmps
loope
add
inc
inc
fcom
sbb
mov
mov
hlt
test
aaa
mov
push
xchg
jmp
xchg
jle
loope
mov
sqrtps
scas
je
pop
cmp
call
mov
in
pop
add
sub
mov
pop
neg
scas
pop
sti
add
shl
cmp
mov
xor
pop
push
sub
mov
xor
test
data16
call
les
icebp
pop
mov
mul
lock
push
push
jp
add
dec
ins
hlt
xor
ficom
mov
mov
mov
mov
ret
dec
dec
inc
or
or
pop
inc
repz
sub
or
push
cs
icebp
jno
adc
mov
adc
push
clc
addr16
popf
adc
lods
test
enter
and
retf
fistp
out
cmp
sub
(bad)
in
push
call
cmp
pusha
push
push
cmp
push
or
and
add
add
mul
popa
scas
pop
push
push
bound
cld
daa
int3
cs
mov
sbb
jmp
jne
movsx
inc
inc
jmp
adc
push
mov
sbb
popa
and
push
mov
jbe
adc
loop
shl
sbb
mov
adc
cmp
or
(bad)
je
inc
add
jne
adc
fiadd
push
cmps
dec
adc
outs
outs
mov
mov
je
pushf
jg
adc
jbe
or
cmp
je
or
fmul
jbe
pop
outs
add
and
push
xor
clc
add
pushf
pop
call
jmp
cmp
loopne
adc
adc
ror
cli
push
jns
xchg
adc
fidiv
dec
add
cs
jo
fsubr
sbb
push
sub
jno
sbb
sub
scas
mov
add
mov
frstor
mov
test
fbld
(bad)
aas
mov
mov
jo
or
loopne
aaa
sub
pop
je
mov
inc
add
xor
scas
jmp
cmps
dec
call
(bad)
fisttp
pop
inc
outs
out
or
icebp
shl
pop
push
push
push
push
push
add
add
imul
xor
mov
sahf
sbb
loop
loopne
pop
sub
and
cmp
jp
aas
je
or
ror
lods
sbb
adc
or
adc
jae
jp
jmp
jb
je
push
push
cmps
aaa
ins
jo
loop
fisub
mov
or
fild
jl
pusha
add
sub
pop
sbb
mov
adc
push
sub
jmp
jmp
add
call
xor
push
cmp
mov
ins
ss
adc
jmp
sub
(bad)
jmp
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
cmp
push
pusha
call
jecxz
and
mov
jge
push
dec
push
cmp
stos
push
mov
mov
push
adc
inc
sbb
fwait
push
mov
stc
out
push
ret
jmp
mov
mov
pusha
cmps
sbb
push
sbb
add
jmp
fiadd
movs
fsub
std
mov
push
aas
mov
adc
enter
sti
fbstp
repnz
cmp
jne
and
loopne
inc
inc
push
(bad)
mov
mov
pop
dec
mov
loopne
jmp
cmps
xor
fstp
dec
mov
inc
fiadd
add
sub
imul
pop
or
pop
xchg
mov
mov
loope
jle
int3
js
push
xor
(bad)
cmp
inc
mov
jg
mov
mov
sbb
outs
xchg
inc
xchg
inc
stos
mov
out
or
xor
pop
mov
shr
mov
lea
cs
lock
adc
add
add
dec
jne
pop
pop
mov
ror
add
dec
or
jecxz
shr
sar
cli
mov
add
mov
push
cli
idiv
add
add
adc
es
jmp
sbb
add
rol
mov
fst
inc
adc
shl
pop
jmp
cmps
neg
sbb
inc
pop
pop
sbb
fisubr
in
fidiv
add
mov
mov
leave
out
movs
mov
inc
adc
leave
movs
sbb
mov
cmp
daa
jge
or
inc
sbb
dec
bound
push
mov
jle
mov
add
ss
and
les
je
jmp
pusha
adc
cmp
add
(bad)
push
mov
cmp
add
cmp
adc
js
mov
call
and
dec
and
xchg
and
cwde
daa
pop
test
loopne
add
mov
icebp
mov
jecxz
add
xor
scas
xor
jp
sub
in
or
cmp
cmp
or
push
ins
int3
popa
xor
fisubr
adc
shr
ror
cmp
lock
and
jo
push
(bad)
adc
lock
mov
pop
or
arpl
popf
jge
nop
pop
in
test
sbb
sbb
pop
jo
pop
pusha
dec
dec
jl
lock
push
lea
scas
fistp
(bad)
mov
push
sbb
inc
fsub
nop
add
or
not
cs
dec
jne
inc
dec
and
inc
jg
imul
loope
je
ret
dec
jmp
fst
in
jmp
jbe
xchg
adc
test
mov
push
sbb
lods
push
fimul
loopne
or
pop
mov
mov
mov
in
and
sub
clc
das
push
push
xor
stc
mov
stos
or
mov
cmp
add
int3
push
mov
cmp
popa
sti
pop
adc
push
push
mov
push
push
adc
xor
aaa
pop
jnp
push
sub
add
mov
clc
fdivr
pop
cli
jg
or
jmp
lea
cmp
sub
fiadd
pusha
push
aaa
ror
bndldx
mov
and
fstp
loop
sbb
sub
fadd
sbb
test
clc
iret
loope
xchg
test
push
mov
mov
ret
inc
out
xor
ret
cmp
je
cmp
jle
je
aaa
or
je
add
xor
(bad)
mov
rcr
shr
pop
cmps
pop
sub
sar
pop
pop
or
or
iret
pop
(bad)
out
addr16
in
add
mov
in
xchg
or
or
nop
push
push
mov
das
sti
xchg
pop
adc
scas
adc
pop
add
pop
pop
xor
add
add
inc
ret
pop
sar
je
add
outs
js
jns
push
cld
add
cmp
adc
loopne
fimul
adc
lea
sub
sub
inc
lock
scas
popa
and
je
cmp
jbe
sti
inc
pop
das
sub
loop
push
scas
ror
scas
cwde
inc
cld
add
(bad)
sub
mov
fwait
std
dec
ins
mov
lds
push
sbb
mov
ds
clc
mov
mov
jmp
in
or
xor
adc
push
inc
xchg
adc
or
cmp
aaa
ret
out
repnz
dec
jmp
push
sub
add
cmp
sub
dec
dec
jne
mov
daa
js
ja
jge
and
aaa
add
dec
jmp
and
push
mov
sbb
add
dec
test
pop
pop
dec
jne
mov
or
or
int3
add
hlt
aaa
cli
lea
jmp
mov
clc
inc
lahf
jo
sbb
sbb
add
mov
call
xor
xchg
inc
stos
gs
push
imul
cdq
retf
dec
inc
jg
int3
mov
sub
mov
add
es
jl
cmp
jge
sub
push
aas
shl
jle
cmp
jg
add
or
in
inc
shl
mov
jmp
and
mov
sbb
xlat
and
mov
dec
cld
push
int3
dec
js
mov
inc
test
adc
lahf
popa
lods
not
mov
cmp
pop
movs
sub
scas
pop
sbb
cmp
(bad)
clc
sub
shl
mov
dec
mov
sbb
sub
inc
or
pusha
and
clc
inc
mov
jo
(bad)
jl
sub
push
arpl
cli
clc
cmp
jl
add
mov
ror
popf
ret
push
push
ja
add
push
cmp
in
pop
rol
scas
sti
mov
pop
xlat
push
push
loopne
in
push
sub
psubb
or
push
cmp
call
inc
xchg
into
icebp
mov
mov
mov
dec
je
fild
push
inc
es
lock
cs
aad
stos
sub
fld
sar
cmp
call
or
push
ret
ja
sbb
int3
jb
push
mov
and
dec
shl
(bad)
pop
add
add
jl
mov
cmc
lahf
add
jmp
stc
or
cs
clc
adc
cmp
jge
pop
dec
cmp
push
je
sbb
sub
cmp
push
test
sar
loopne
add
push
sbb
mov
daa
cdq
sub
mov
stos
sahf
std
daa
shl
adc
xchg
dec
and
mov
add
lea
jl
push
and
mov
adc
das
cmps
loopne
mov
jg
ret
ja
or
mov
call
call
xlat
cmp
loopne
jg
sub
mov
cmp
je
fsubr
sar
or
or
push
cmp
ret
je
cmp
pop
xchg
sub
adc
mov
mov
cmp
and
mov
adc
aam
pop
pop
sbb
sub
sbb
das
dec
add
repz
push
mov
mov
sub
pop
cs
dec
jbe
mov
cmp
pop
jmp
cmp
xor
sub
sub
jmp
aad
add
test
cmp
add
mov
jmp
pop
movs
popa
loope
ins
adc
sbb
mov
ins
clc
inc
add
cld
pushf
dec
clc
push
push
add
sbb
lock
jle
jb
lock
add
pop
cmp
rcr
xor
inc
cmp
push
lods
rcr
push
or
or
loopne
ret
sub
dec
mov
mov
mov
dec
ret
ss
sbb
pop
jmp
and
pop
ins
lea
dec
mov
rol
dec
add
out
push
jbe
cs
loopne
inc
(bad)
pop
jmp
aas
mov
add
push
xchg
xor
sbb
and
ds
mov
outs
add
dec
jne
ins
and
sar
sbb
outs
and
mov
push
mov
mov
in
inc
push
sbb
push
test
loop
or
call
jnp
inc
xor
imul
shl
sub
adc
les
cmp
fistp
mov
push
sti
add
add
inc
jmp
das
mov
icebp
mov
pop
lock
idiv
add
je
cmp
or
or
and
or
and
clc
add
ret
sub
pop
fs
mov
popf
test
pop
movups
cdq
lock
hlt
and
mov
and
rcl
retf
ret
cmps
xchg
xor
test
push
cmp
inc
pop
mov
push
sbb
cmps
add
loopne
repnz
inc
(bad)
lods
mov
sbb
mov
push
push
mov
mov
mov
push
sbb
pop
div
(bad)
lods
enter
push
lock
and
pop
outs
rcr
inc
add
(bad)
pop
push
add
mov
xor
call
stos
inc
adc
call
pop
in
in
cmp
je
cmp
test
(bad)
enter
xor
sub
cmp
sbb
sbb
scas
xchg
add
jbe
lock
jo
sub
add
lea
mov
ror
jmp
dec
stos
xchg
adc
in
xchg
jge
or
lock
mov
push
in
test
pop
add
mov
adc
into
stos
sub
cmp
mov
push
(bad)
push
dec
rcr
popa
cmp
fld
xrelease
jnp
mov
or
lock
sar
add
cmps
cmp
jle
cwde
add
add
xchg
dec
jo
and
cdq
jns
push
ficom
scas
sub
jne
push
das
mov
int3
mov
cmp
push
cmp
xor
and
dec
xchg
lock
jne
push
sub
into
je
test
in
lea
adc
fwait
mul
mov
adc
dec
push
push
push
inc
les
fdivr
inc
clc
out
pop
pop
mov
(bad)
push
add
clc
fidiv
mov
push
cmc
xchg
sub
cmp
mov
xor
sub
mov
aaa
sbb
loop
pusha
stos
cmp
push
test
mov
mov
mov
aaa
rcl
or
push
or
fucomp
and
jecxz
jmp
outs
(bad)
pop
mov
cli
pop
jne
sbb
mov
push
clc
add
cmp
inc
rol
push
fnstsw
clc
push
push
and
cld
add
or
stos
das
pop
test
sbb
call
hlt
fs
iret
mov
sbb
ficomp
cmp
xlat
jne
loopne
vmread
pop
les
int
cld
add
xor
mul
mov
in
mov
jne
mov
fisubr
cmp
inc
sbb
mov
add
fsub
aaa
lods
enter
rol
rol
cli
dec
jg
or
imul
(bad)
out
and
xlat
daa
fild
loop
and
push
mov
inc
cmp
test
sub
dec
push
jno
sbb
jg
sbb
inc
xor
neg
shr
dec
inc
adc
imul
(bad)
call
jmp
xor
cs
ins
inc
je
outs
outs
addr16
popa
je
dec
popa
ins
gs
mov
mov
(bad)
data16
pop
sbb
fucomp
in
inc
out
and
xor
add
dec
add
cmp
lods
test
and
xor
xor
or
adc
or
push
pop
pop
sub
or
sub
out
push
jmp
int
aas
push
add
(bad)
js
add
mov
or
add
dec
inc
sbb
stos
push
addr16
and
popf
push
lods
repz
loope
std
dec
cdq
fdiv
test
xlat
call
or
push
sar
test
sbb
mov
cs
xor
lock
jae
push
shr
rcr
pop
lahf
push
or
push
or
(bad)
imul
(bad)
nop
dec
repz
cmc
add
in
adc
and
(bad)
outs
data16
popa
jb
outs
mov
mul
gs
aaa
cmps
(bad)
test
mov
pop
fcmovb
or
mov
push
fldenv
dec
mov
add
cwde
inc
sub
cmp
loop
or
mov
jno
mov
pop
jg
test
inc
ret
outs
repnz
stos
cmp
js
cmp
sti
out
push
cmp
cmp
loopne
loope
mov
pop
mov
adc
push
cld
jne
mov
fs
(bad)
jmp
jmp
add
sti
add
call
fimul
rcr
(bad)
adc
and
cwde
mov
push
inc
mov
sahf
je
sbb
add
dec
add
jge
push
add
das
adc
adc
enter
cmp
(bad)
popa
or
xor
outs
sub
xchg
stos
inc
push
sub
and
and
call
push
cmc
push
push
icebp
jne
lock
sub
in
mov
fsub
push
cld
fnsave
sbb
popa
nop
mov
(bad)
bound
(bad)
lds
out
mov
inc
sbb
dec
fimul
inc
fs
fstp
test
xor
xor
sub
cmp
add
loopne
add
inc
loopne
inc
cwde
out
add
js
js
mov
adc
mov
retf
mov
adc
loop
jecxz
add
loopne
mov
mov
and
inc
sbb
sub
inc
retf
clc
add
inc
fidivr
lahf
je
xor
and
lock
ins
xor
(bad)
jmp
mov
in
test
cmp
push
lahf
inc
cmp
xchg
mov
das
and
cwde
or
es
and
jne
jbe
aas
lods
inc
or
jmp
push
mov
(bad)
aaa
movs
sub
cmp
and
fs
retf
pop
je
idiv
push
pushf
add
push
push
and
ret
mov
fwait
adc
dec
out
add
mov
mov
cmp
mov
sqrtps
dec
leave
jecxz
dec
fs
les
sar
outs
dec
push
in
cmc
ins
cld
mov
xchg
ins
into
in
paddusb
daa
daa
daa
fcom
ror
daa
daa
daa
daa
enter
daa
daa
daa
daa
mov
daa
daa
daa
test
mov
daa
cwde
xchg
nop
hlt
xchg
daa
daa
daa
lock
or
mov
add
cld
dec
pop
fs
aaa
dec
sbb
test
xor
mov
daa
daa
daa
(bad)
psllw
repz
daa
daa
daa
daa
cmc
div
clc
daa
daa
daa
daa
stc
cli
sti
cld
daa
daa
daa
daa
std
(bad)
jmp
daa
daa
daa
daa
loope
jecxz
daa
daa
daa
daa
in
out
daa
daa
daa
daa
jmp
daa
daa
daa
in
out
out
shl
daa
daa
daa
rcl
rcl
daa
daa
daa
daa
aad
xlat
fsub
daa
daa
daa
(bad)
fcmovnu
daa
daa
daa
daa
fstp
ffreep
daa
daa
daa
daa
rol
les
daa
daa
daa
(bad)
enter
daa
leave
retf
daa
daa
daa
daa
int
iret
mov
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
movs
cmps
cmps
push
enter
adc
test
gs
je
add
mov
mov
or
inc
push
arpl
or
iret
sub
gs
imul
bnd
aas
adc
sub
arpl
cmp
popa
jo
nop
cmp
scas
xchg
out
adc
mov
or
mov
jne
dec
dec
gs
outs
jb
pop
xchg
mov
dec
adc
(bad)
jle
ja
inc
dec
outs
mov
in
scas
sbb
nop
in
retf
mov
ins
scas
inc
push
scas
nop
test
mov
dec
ret
xlat
movs
mov
or
push
sbb
xchg
mov
shr
push
or
imul
nop
push
push
scas
scas
dec
shr
jle
popa
outs
add
lods
scas
lods
(bad)
or
or
dec
jbe
data16
outs
ja
inc
popa
mov
or
xchg
dec
push
push
dec
adc
nop
inc
sahf
pop
mov
scas
pusha
mov
add
jbe
imul
push
and
mov
pop
ins
jle
adc
loopne
inc
pusha
ds
(bad)
jb
cmp
rcl
scas
push
mov
nop
shr
psadbw
xchg
ret
movsx
imul
pop
je
aas
or
ja
jl
test
je
js
or
mov
inc
rol
scas
aam
lock
inc
inc
arpl
pop
or
jae
push
adc
xchg
and
pop
ds
push
std
cmp
push
jb
ins
gs
nop
mov
jb
scas
mov
inc
push
je
fsubr
shl
add
sbb
or
je
leave
xchg
inc
pop
popa
xchg
add
(bad)
push
popa
ficom
sbb
pushf
mov
mov
mov
lock
add
fs
mov
cld
push
bound
add
mov
pop
pop
push
xor
ds
push
xchg
fucomi
add
jo
mov
scas
inc
cs
dec
popa
data16
test
jle
add
sbb
cs
xor
lods
dec
invd
fs
mov
rcl
ins
jae
lock
cmp
xor
mov
mov
div
add
mov
mov
add
int
aas
movs
cs
xor
retf
mov
mov
pop
jnp
and
mov
dec
or
les
cmp
aaa
pop
adc
push
cmp
ja
sub
mov
inc
cmps
pusha
inc
les
pusha
jmp
inc
sbb
xchg
pop
repz
test
pop
ret
les
push
cwde
adc
ds
loope
xchg
test
sub
es
ror
shl
jmp
lock
repz
cmp
jbe
adc
sti
pop
js
or
sub
clc
dec
clc
add
push
sub
inc
call
pop
loope
outs
leave
jne
or
jns
imul
dec
xchg
ret
mov
add
div
shl
icebp
jle
xor
pop
mov
or
(bad)
jg
mov
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
lods
ja
jmp
mov
sub
xor
push
outs
cdq
jo
repnz
mov
or
xor
fcom
push
push
mov
neg
sub
aas
int
(bad)
mov
jmp
mov
(bad)
fnstcw
fnstcw
or
sub
movs
(bad)
(bad)
and
aas
in
and
fild
fcomip
in
pop
mov
rol
add
sub
add
ror
(bad)
or
xchg
rcr
stc
cld
add
cmp
fs
sti
outs
add
rcr
loope
push
add
out
ffree
ffree
ffree
ffree
pop
aad
adc
lods
out
frstor
push
add
loopne
or
fsub
pop
pop
pop
ret
pop
jb
scas
test
pop
or
pushf
push
push
mov
dec
clc
imul
sub
rol
lock
mov
push
adc
daa
xchg
push
outs
mov
cmp
mov
test
cmps
sub
mov
enter
mov
mov
and
sbb
ins
sbb
test
nop
or
xlat
dec
out
(bad)
jns
jb
pop
inc
shl
test
add
scas
add
mov
repnz
jl
jl
xor
pop
fiadd
aam
ins
sub
call
cmp
pop
adc
pop
pop
test
cmp
lds
mov
adc
ins
lock
das
add
dec
setne
jmp
ss
xor
lahf
bound
dec
ins
addr16
mov
and
jnp
or
add
xchg
and
xor
scas
mov
xor
push
icebp
bound
pop
add
sahf
adc
out
xchg
aaa
jmp
and
(bad)
xor
mov
adc
sub
in
sub
pop
lods
jmp
sub
mov
inc
pop
ds
mov
cmp
imul
add
test
or
loop
or
pushf
sar
in
cmp
lea
mov
cmps
add
cmps
pop
cmp
call
push
cmp
add
shl
push
hlt
vcmpss
cld
cmp
pop
add
cld
imul
inc
inc
call
push
or
mov
call
lock
jl
dec
or
push
add
sub
shl
lock
ret
or
and
xor
ret
enter
in
xchg
push
sbb
loope
pop
int3
push
or
sbb
inc
out
pop
inc
ins
add
retf
mov
mov
sbb
movs
sbb
out
ret
div
pop
addr16
(bad)
xor
or
fwait
in
cdq
das
pusha
fldenv
cli
repz
je
mov
loopne
and
fsubr
sbb
sbb
jmp
inc
add
push
or
add
sub
mov
ret
inc
mov
cmp
jne
scas
enter
loopne
push
clc
inc
mul
cmp
cs
mov
pop
pop
jbe
ror
outs
sbb
pop
dec
adc
clc
cmp
ror
inc
call
push
push
aaa
fadd
dec
dec
clc
cmp
jbe
mov
iret
inc
ret
je
add
dec
mov
mov
lahf
mov
push
sti
push
clc
mov
les
or
mov
push
cmp
out
mov
push
je
test
sbb
ror
neg
add
mov
daa
mov
xchg
push
sub
les
(bad)
into
mov
icebp
and
inc
jb
clc
adc
adc
call
stos
dec
jne
mov
sub
cmp
(bad)
lods
mov
lock
sub
daa
lock
sub
push
cmp
jne
cs
and
lods
jmp
add
mov
push
jns
mov
test
add
jmp
pop
fild
sub
jae
add
mov
fst
mov
rep
sbb
cmp
xchg
es
in
fs
cld
push
call
cmp
je
cmp
jb
cmp
ja
imul
add
movzx
add
and
in
dec
fdiv
stos
scas
cmp
jg
ror
cmp
ret
je
out
cld
adc
xor
imul
xor
mov
call
es
lds
push
or
int
mov
data16
pop
ja
sahf
out
sti
push
cs
xlat
push
xor
xchg
mov
sbb
outs
nop
dec
fsubr
shl
adc
sbb
and
mov
je
inc
jb
rcr
xor
call
in
jmp
push
pop
outs
adc
inc
push
enter
jmp
push
add
test
xchg
repz
das
ret
sbb
add
mov
aad
int3
mov
jmp
xor
inc
inc
jbe
mov
enter
fdivr
mov
dec
jne
aas
and
jge
fsubr
in
mov
add
shl
cmp
ja
or
ror
cli
es
dec
mov
loopne
ds
leave
sub
sub
push
lods
out
adc
daa
retf
in
add
stc
out
pop
dec
inc
je
mov
or
je
mov
inc
je
mov
loope
mov
dec
je
dec
jl
mov
mov
add
pop
cmp
jbe
mov
xchg
adc
add
adc
mov
mov
lss
cmps
push
repnz
iret
dec
pop
inc
sar
(bad)
xchg
ret
xor
and
jne
int3
lahf
ds
jo
(bad)
icebp
jo
stos
adc
cld
daa
push
and
push
loopne
push
inc
add
push
jb
xlat
cld
push
jo
lock
sbb
dec
mov
into
fadd
mov
push
cmp
and
push
push
xchg
loop
pop
dec
cmp
lock
test
cmp
(bad)
clc
ins
xchg
dec
cld
lea
out
jg
scas
mov
dec
pop
xor
ret
jmp
push
cmp
addr16
pop
sub
std
imul
jmp
lea
iret
mov
adc
mov
jmp
or
jge
mov
neg
jmp
mov
jg
or
dec
mov
stos
xchg
push
mov
push
mov
mov
bound
and
adc
sbb
or
jg
dec
mov
stos
cmp
jne
pop
pop
scas
aam
push
or
adc
mov
mov
ja
mov
js
hlt
mov
push
mov
in
adc
cmp
mov
(bad)
sub
add
inc
lds
in
daa
mov
add
fidivr
(bad)
pop
adc
jge
movzx
sub
xor
cs
aas
lea
jns
hlt
mov
xor
sti
in
mov
ror
sub
adc
add
(bad)
dec
add
or
mov
add
sbb
and
sub
call
enter
sti
cmp
or
loopne
push
outs
clc
aaa
dec
dec
inc
dec
inc
dec
lods
or
mov
dec
push
jge
fiadd
ret
(bad)
add
ret
std
mov
aam
loope
fs
cmp
jl
pop
sbb
or
cmp
sbb
stos
ja
out
aad
sbb
inc
mov
loop
movlps
imul
stos
pop
pop
inc
clc
dec
add
mov
push
mov
mov
(bad)
jnp
dec
jbe
sub
(bad)
add
mov
mov
mov
mov
cld
js
gs
enter
mov
mov
sub
aaa
sub
scas
je
mov
dec
xor
repz
inc
in
inc
rcr
jne
sbb
je
stos
fistp
call
add
je
pop
test
or
jne
pop
xor
ret
xchg
repnz
fdivr
cmp
and
sbb
mov
push
cmp
cs
xchg
lea
cmp
js
cmp
je
push
push
cmp
(bad)
iret
xchg
fcomp
clc
dec
sbb
inc
loop
push
mov
or
repz
sbb
add
and
and
adc
and
jbe
fld
sub
inc
sub
sub
addr16
es
sbb
and
sub
cmp
sahf
adc
xor
cdq
sub
sti
sub
xor
pop
cmps
loopne
movs
xchg
les
sbb
fstp
pop
arpl
adc
push
(bad)
in
inc
data16
cli
pop
and
adc
inc
jg
call
sub
xor
xor
inc
inc
push
inc
fld
sub
in
rcl
or
clc
adc
dec
sub
push
xchg
sbb
pop
fstp
rcr
cld
rcr
scas
cmp
fcomp
fstsw
fwait
mov
not
fistp
add
or
mov
call
call
clc
fcomip
lahf
jmp
shr
and
add
test
pop
loope
cmp
xor
stos
mov
add
jns
(bad)
in
hlt
sub
jge
pushf
or
cmp
fnstsw
xor
or
dec
js
dec
and
pop
data16
mov
xor
jmp
mov
in
add
xor
push
or
shr
mov
ret
push
out
mov
add
jp
(bad)
std
dec
add
ror
je
jecxz
add
into
neg
sbb
add
or
(bad)
jge
adc
idiv
fndisi(8087
jl
mov
cmps
sbb
jae
dec
add
retf
loopne
push
in
ins
or
(bad)
mov
or
mov
push
ins
ret
inc
xor
mov
sbb
adc
jne
pushf
and
jne
adc
pop
dec
sub
cmp
jmp
or
jmp
enter
add
div
pop
or
mov
iret
icebp
sbb
cmps
hlt
fild
jns
cld
xchg
lock
fldcw
cmps
pop
mul
ds
lods
or
mov
add
pusha
jne
inc
sbb
cmp
icebp
je
and
fistp
sub
pop
add
add
cld
jmp
cwde
jne
mov
sahf
pop
cmp
test
mov
(bad)
loopne
adc
aas
jmp
fstp
les
and
mov
pop
push
mov
hlt
test
ins
and
push
int
cmp
mov
test
or
fimul
cmps
(bad)
fiadd
jmp
aaa
mov
aas
adc
es
push
inc
mov
ror
push
cmp
aaa
movs
arpl
sub
add
mov
(bad)
or
add
lea
ins
adc
mov
sbb
sbb
cmp
sub
mov
call
push
bound
mov
inc
aaa
lahf
xor
fcomp
adc
mov
and
push
fwait
or
in
pusha
mov
out
out
pop
in
lods
push
xor
ret
or
leave
shr
jle
sub
jb
fwait
pop
pop
(bad)
adc
mov
xor
push
adc
adc
jno
pop
mov
(bad)
clc
outs
push
push
cmp
or
mov
jae
inc
test
cmp
inc
stc
inc
add
fdivp
dec
sahf
jae
movzx
data16
add
shr
pusha
jmp
adc
cmp
(bad)
or
outs
scas
ror
call
pop
pop
pop
lods
inc
pop
loopne
push
retf
movs
dec
outs
cmp
inc
xchg
sbb
jne
les
xor
pop
inc
rol
mov
sbb
or
addr16
retf
loopne
cmp
es
cdq
xlat
in
iret
and
mul
out
or
enter
loopne
icebp
pop
or
fldcw
xor
div
inc
xchg
pop
xor
sbb
nop
add
pop
adc
mov
outs
push
fsub
sbb
test
inc
pusha
push
xor
cli
inc
lea
inc
jb
or
dec
or
shl
or
jb
std
pop
rcl
sti
ins
cli
(bad)
cmp
ja
adc
out
test
push
mul
pop
dec
inc
jne
sub
dec
mov
aas
cdq
idiv
imul
push
not
std
add
sub
ds
pop
popa
ds
add
pusha
ret
or
shl
rol
std
std
push
xor
mov
mov
adc
hlt
or
and
shr
in
test
jg
mov
push
push
clc
hlt
or
add
pop
bound
add
shr
push
cmp
jl
add
inc
mov
xor
dec
lock
loope
lods
mov
mov
dec
pop
inc
fld
imul
fcom
(bad)
ret
repnz
pop
sbb
mov
cmp
sub
int3
cmp
dec
(bad)
mov
pop
ret
sbb
jp
enter
ins
pusha
shr
and
cmp
jb
adc
sub
mov
fbstp
mov
jnp
mov
mov
movs
adc
add
adc
add
inc
mov
pop
lods
popa
pop
sahf
out
sbb
sub
clc
jge
mov
mov
xchg
inc
icebp
fcom
add
dec
rcl
adc
or
sub
adc
rol
lahf
sti
xchg
mov
and
xchg
imul
out
cwde
xor
push
loopne
jmp
jp
jnp
repz
pop
aas
sahf
fcmovbe
icebp
in
or
jb
pusha
in
push
xchg
push
js
push
cld
mov
mov
enter
mov
jo
and
pop
xchg
xchg
add
call
cmp
push
dec
fdivr
je
call
hlt
enter
out
push
cmp
jne
daa
icebp
jbe
mov
jo
add
push
lea
or
xchg
ret
in
out
cmps
and
adc
inc
in
add
jecxz
mov
xor
push
in
jge
sahf
retf
out
call
nop
push
mov
push
push
test
cld
mov
cld
cmps
jne
es
jmp
call
addr16
out
repnz
loop
out
mov
push
add
pushf
aad
mov
stos
mov
mov
popa
jge
cmps
test
pop
adc
push
mov
sub
jle
mov
and
sbb
or
mov
imul
sbb
inc
pop
add
push
fdiv
sub
adc
pop
fidiv
push
add
or
sub
adc
fwait
xor
test
sbb
ret
popaw
test
inc
sbb
xchg
jecxz
mov
imul
jns
xchg
in
ret
sahf
jbe
xchg
cmp
jg
int
jbe
or
jmp
jbe
xor
xchg
aaa
mov
cmp
jne
push
or
cmpnltps
movs
fdivr
inc
cs
jns
add
mov
sbb
jno
test
add
fidiv
dec
jle
lea
mov
cmp
pop
mov
inc
add
sub
inc
xor
loop
add
icebp
inc
outs
adc
call
scas
bt
pop
jmp
pop
mov
adc
mov
nop
jns
mov
lahf
sub
jae
movs
xor
push
pop
mov
pop
cmp
cmps
out
dec
jne
mov
xor
xchg
fisub
cmp
xchg
add
ja
jmp
das
sbb
or
or
mov
or
or
or
push
inc
ds
inc
push
or
or
or
imul
mov
jns
data16
jnp
jo
lock
repz
jb
mov
call
mov
or
push
and
sub
popf
sub
fs
std
inc
mov
mov
popf
dec
push
lea
cmp
fs
fcomp
nop
out
adc
scas
pop
push
scas
hlt
dec
test
sbb
xor
or
(bad)
push
hlt
inc
rcr
test
aam
int3
leave
mov
or
add
jmp
out
aad
add
jo
push
mov
xchg
xchg
cmps
(bad)
les
push
leave
add
out
test
les
mov
fs
aam
mov
call
cmp
and
inc
push
fdiv
jl
push
add
adc
mov
je
or
push
jmp
or
je
dec
(bad)
mov
or
je
jmp
cmp
dec
mov
(bad)
iret
mov
mov
push
stc
inc
adc
xchg
add
adc
loope
add
call
mov
imul
push
jmp
mov
jmp
fwait
add
or
inc
rol
jle
push
out
xchg
fcom
fistp
pop
inc
call
adc
mov
jne
mov
pushf
and
add
in
sbb
cs
ins
dec
xlat
jne
add
dec
sbb
xchg
pop
js
dec
mov
pop
cmp
sub
(bad)
daa
xor
xchg
imul
add
out
stos
dec
ja
jns
adc
xchg
nop
mov
mov
rcl
xor
pop
stos
push
shl
test
(bad)
repnz
fwait
sti
out
push
rol
ret
add
jns
push
sub
jmp
adc
pop
rol
into
jge
js
jo
or
cmp
ja
push
stc
push
outs
dec
mov
mov
popa
sbb
push
test
fucomi
add
out
add
fst
mov
mov
mov
popa
ss
jmp
adc
push
mov
sbb
ins
push
inc
test
inc
mov
into
inc
scas
lock
fst
pop
jmp
push
dec
xchg
or
fcmovnu
cmp
adc
and
adc
dec
(bad)
ins
mov
sahf
movntps
cmp
jne
or
mov
xchg
adc
out
(bad)
adc
mov
fisttp
mov
pop
sub
(bad)
outs
js
pop
pop
imul
cmp
cmp
je
mov
xchg
xor
adc
daa
xchg
clc
mov
test
call
lahf
xor
jmp
mov
in
adc
dec
add
loopne
pop
nop
push
or
data16
mov
jnp
mov
shr
jae
jnp
int
dec
lock
jnp
xchg
pusha
sub
js
add
sbb
xor
mov
xor
lods
xor
test
mov
loopne
mov
nop
inc
(bad)
mov
push
sub
sub
mov
sbb
mov
std
xchg
(bad)
repnz
cmp
adc
inc
pop
xchg
jo
cmp
sub
pop
in
(bad)
cmp
jne
inc
lock
pop
mov
mov
jmp
sub
std
scas
mov
enter
scas
sub
je
jmp
mov
jmp
btc
es
push
inc
mov
jle
out
mov
js
ret
mov
add
loope
jb
or
xchg
les
add
jg
jl
pop
cdq
ror
(bad)
lahf
jl
shl
call
mov
es
or
sub
lds
mov
daa
jmp
push
(bad)
jmp
add
push
or
dec
jne
xchg
(bad)
cld
mov
cmp
cmp
jg
dec
shl
xchg
dec
call
add
sahf
(bad)
imul
(bad)
shl
cmp
jle
adc
pop
and
jecxz
(bad)
dec
cld
gs
xchg
xor
mov
psubusb
loopne
xor
push
arpl
mov
test
add
or
test
xchg
popf
add
push
rcr
test
ds
loopne
popf
dec
lea
mov
dec
xchg
aam
jbe
and
jo
fistp
adc
jge
loopne
dec
mov
xchg
xchg
lods
pusha
jnp
jp
or
test
jo
mov
cmc
fld
inc
push
in
add
nop
cmps
sbb
sar
cmp
xor
xchg
sub
jb
and
cmp
jmp
jge
and
in
call
call
jmp
aaa
xor
in
repnz
sbb
jmp
sbb
test
mov
push
push
movs
out
jno
pop
push
jmp
cmp
xor
or
ja
(bad)
ror
(bad)
push
fstp
fdivr
shl
aaa
add
xor
jle
and
fs
jne
mov
add
or
ds
adc
daa
sbb
mov
out
mov
mov
in
sub
cs
movs
and
fwait
pop
push
dec
scas
inc
icebp
and
jmp
sbb
jl
jne
sar
sub
add
(bad)
fcmovnbe
imul
sub
(bad)
das
fiadd
push
fcom
das
xor
inc
repnz
out
dec
jb
push
icebp
pusha
nop
add
sti
into
test
push
sub
add
ret
mov
gs
or
retf
push
mov
pop
cmp
or
mov
dec
fadd
in
and
aam
inc
and
jmp
push
icebp
inc
mov
sbb
pop
lds
or
push
stos
pop
cmp
inc
add
and
cdq
xor
outs
sti
push
mov
iret
je
add
or
inc
push
enter
add
sbb
inc
sbb
daa
mov
sub
enterw
dec
inc
(bad)
ja
or
ret
pop
add
movs
and
dec
add
js
cmp
push
add
pop
sub
or
push
or
mov
ret
mov
sbb
icebp
mul
bnd
cmps
and
into
call
je
add
xchg
cmp
in
adc
mov
jno
rol
dec
mov
test
adc
outs
push
cmp
ret
jne
dec
pop
in
adc
loopne
daa
fst
fcomp
mov
fsubr
or
fs
loopne
jle
(bad)
fstp
push
outs
stos
fstp
repz
add
je
xor
mov
push
add
sub
jb
or
or
xor
inc
test
mov
xor
push
mov
inc
test
jno
jle
jmp
pop
add
jle
pop
adc
les
mov
sbb
add
popa
lods
test
cmp
add
lods
xor
movs
ja
scas
(bad)
jno
cmp
add
ret
cmp
ins
pop
and
imul
dec
push
add
mov
xlat
shl
ins
dec
sbb
or
loopne
push
push
mov
outs
adc
lea
dec
push
js
pop
mov
jl
and
add
lock
or
inc
inc
and
push
push
in
sar
jne
rol
sbb
add
test
mov
je
shl
in
dec
leave
mov
call
mov
invd
jne
xlat
mov
(bad)
(bad)
xlat
pop
shr
cmp
lock
sub
pop
je
xchg
cmp
add
mov
adc
addr16
stc
jo
lods
push
jp
mov
pusha
push
push
fnclex
inc
(bad)
pop
mov
pop
out
mov
cmp
pop
mov
jmp
cmps
out
mov
in
jnp
das
cmps
mov
or
mov
idiv
or
js
jbe
adc
push
push
fcomp
les
sbb
test
repnz
cmp
hlt
push
push
add
loope
mov
inc
out
or
xor
nop
or
repnz
inc
mov
and
xchg
clc
or
lahf
and
cvtps2pd
repz
adc
call
jmp
mov
sub
je
sub
je
scas
ret
mov
sbb
cwde
call
cdq
jle
jl
mov
popa
ficom
xor
int3
dec
lea
sub
sbb
lods
add
jg
mov
sub
mov
mov
jo
add
jle
sbb
add
aas
enter
add
jmp
mov
dec
xchg
jmp
ret
and
push
xor
jmp
in
mov
test
sbb
push
stc
mov
xor
adc
dec
xor
push
sbb
out
add
add
sub
and
xor
sub
mov
bound
adc
in
out
sbb
movs
cmp
inc
fucomip
add
cmp
aaa
mov
xor
(bad)
xor
nop
jnp
fsubr
or
popf
gs
movs
mov
ja
pop
xor
rol
repz
jl
ret
add
mov
sbb
inc
or
jmp
les
jbe
and
mov
rol
xchg
add
mov
sub
loopne
pop
rol
cmp
inc
add
sbb
test
add
in
xchg
out
popf
ins
inc
adc
pop
sbb
pop
out
mov
mov
std
mov
push
mov
sar
mov
mov
stc
pop
add
lods
push
lea
cmp
and
cmp
cs
or
dec
and
addr16
mov
xchg
(bad)
sub
pop
mov
mov
retf
cmp
and
out
inc
push
add
aam
dec
mov
adc
hlt
cmp
pcmpgtd
lea
and
xchg
(bad)
push
pop
add
retf
dec
push
mov
(bad)
das
sar
ins
inc
pop
xchg
adc
cmp
ret
xchg
sbb
jl
pop
inc
pop
mov
mov
add
loopne
xchg
popa
adc
sysexit
pushf
pop
stc
jb
das
xor
daa
add
xchg
mov
popf
push
dec
(bad)
mov
test
mov
ja
add
adc
ja
int
add
adc
add
stos
xchg
xchg
add
cmp
pop
xchg
mov
fwait
add
and
cmp
mov
call
or
or
arpl
mov
mov
fstp
lock
cmp
jg
cmp
sbb
or
clc
xchg
dec
push
jg
jmp
lock
scas
(bad)
and
inc
out
xor
add
cmp
or
pop
jl
mov
or
std
jo
add
sar
retf
rol
adc
jmp
test
push
nop
and
add
cmp
vunpcklpd
or
cdq
bound
pop
aam
mov
jmp
mov
jl
xchg
cld
xchg
lods
and
push
in
push
popf
add
fcomp
test
push
cmp
in
or
jne
or
jge
clc
push
in
push
bnd
push
loopne
add
dec
loopne
push
pop
jmp
fcmovnbe
pop
stos
inc
adc
loopne
xor
(bad)
mov
clc
and
add
push
xor
rol
loopne
ss
pop
into
sbb
imul
xor
xchg
pop
push
add
mov
je
push
cs
aas
pop
xchg
xor
inc
xor
push
push
jmp
and
add
mov
add
cmps
imul
cmps
imul
and
pusha
imul
xchg
dec
jae
outs
adc
mov
mov
in
sub
xchg
inc
mov
cmp
movaps
ret
or
jae
jno
aas
and
push
arpl
jmp
mov
and
in
adc
xchg
cmps
(bad)
xlat
jge
sub
add
pop
mov
sub
or
xor
jnp
jae
or
retf
push
push
enter
shr
aam
sub
loope
hlt
ja
pop
outs
mov
jnp
nop
pop
jmp
sub
ds
mov
jae
xchg
add
fs
daa
or
and
adc
dec
aam
dec
(bad)
aam
dec
das
pop
lds
gs
xchg
cld
std
rol
cmc
std
sub
mov
jae
jae
outs
mov
mov
pop
adc
and
cmps
aaa
push
(bad)
cmp
movs
aad
lock
xchg
clc
push
loopne
mov
mov
inc
or
(bad)
(bad)
sbb
loopne
dec
mov
push
mov
jmp
je
add
aam
and
jno
push
ss
(bad)
pop
fisubr
cld
fcomip
fisttp
gs
mov
cmp
pmaxsw
and
addr16
fstp
(bad)
aad
in
fidivr
shufps
adc
push
add
aad
pop
inc
nop
outs
add
nop
adc
daa
or
cmp
ja
jge
xor
cld
and
adc
popa
xor
cmp
push
ins
call
fistp
mov
enter
add
mov
clc
or
add
jnp
xor
hlt
mov
std
dec
sbb
adc
adc
or
mov
add
les
cmp
pusha
ror
add
dec
hlt
loopne
dec
jmp
dec
sub
mov
and
cmc
pop
pop
test
jns
dec
or
inc
ins
test
pop
add
add
cmp
add
add
add
enter
sub
pop
mov
daa
sbb
sub
shl
jle
adc
in
das
mov
leave
inc
jge
sti
mov
pop
jg
mov
scas
das
sti
jns
cld
fwait
inc
sub
push
add
and
add
hlt
inc
inc
inc
test
fdivr
add
shl
and
and
jp
and
fistp
je
xor
hlt
jge
cmp
jl
or
in
nop
mov
or
push
push
dec
add
sbb
push
xor
mov
test
dec
jae
sbb
adc
jle
fild
push
sub
inc
mov
dec
cmp
push
mov
jg
xchg
or
or
mov
sar
adc
(bad)
jnp
mov
mov
es
jge
pop
push
mov
mov
out
int3
sub
sub
(bad)
daa
imul
mov
xor
add
dec
add
xchg
or
xor
jae
push
cmp
add
sub
vpandn
mov
sti
sub
inc
mov
mov
inc
pop
jmp
je
ins
sbb
and
js
jge
jb
js
enter
adc
dec
not
pop
push
(bad)
std
mov
adc
fild
scas
push
push
mov
aas
clc
sub
aaa
add
add
sar
sub
cmp
jbe
xchg
into
dec
cmps
daa
mov
mov
mov
fidiv
xchg
repnz
or
push
mul
push
add
add
enter
je
add
inc
(bad)
jne
push
lods
les
hlt
test
xor
lock
stos
or
pop
mov
jo
scas
pushf
hlt
adc
jecxz
xchg
jge
add
rcr
push
dec
inc
fwait
xor
neg
aaa
push
mov
sub
jb
inc
mov
mov
adc
outs
xchg
stos
(bad)
sbb
retf
jne
hlt
jmp
or
push
pop
jne
push
jg
pop
xor
clc
pop
ja
pop
fdiv
mov
mov
xchg
das
push
fst
mov
cmp
dec
mov
add
test
lock
enter
outs
mov
adc
or
fadd
sahf
sub
mov
js
cmc
add
test
int3
call
add
pop
ja
pop
sub
pop
mov
push
push
add
sbb
pop
mov
outs
popa
mov
push
lea
inc
cmp
cmps
xor
push
inc
mul
inc
or
scas
movs
jl
lods
jnp
fnstsw
xchg
ror
push
pop
ss
jne
jmp
push
mov
mov
push
pop
xor
arpl
mov
aam
add
out
cld
retf
js
xor
stc
push
std
nop
es
or
lea
pushf
icebp
mov
push
cmc
sub
mov
retf
pushf
mov
adc
or
mov
push
lock
lock
sbb
dec
add
sub
ins
ins
inc
call
or
movs
mov
mov
leave
ja
frstor
push
jg
in
or
in
ins
das
mov
and
jns
rol
and
shl
mov
pop
mov
push
aam
fdivr
div
mov
jle
sub
and
or
sar
dec
repnz
xchg
adc
jmp
leave
sbb
add
shl
test
dec
sahf
mov
aas
ret
adc
ds
shl
call
sbb
add
jbe
push
mov
push
push
hlt
mov
mov
adc
movs
shl
add
mov
inc
mov
mov
mov
das
mov
fs
push
shr
pop
popa
ins
pop
jmp
rcl
jo
push
test
xchg
push
and
cmps
inc
call
aaa
cmp
xchg
iret
int3
pop
push
cmp
outs
mov
sub
inc
add
add
push
dec
test
(bad)
jmp
push
inc
pop
adc
fs
push
ret
je
arpl
or
mov
mov
call
inc
imul
push
push
arpl
rcl
js
sub
repnz
push
cmp
ror
push
enter
iret
repz
imul
sbb
pop
jnp
repz
test
push
jo
push
iret
repz
test
repz
ds
inc
push
inc
push
iret
pusha
lods
pop
push
cwde
push
aas
mov
dec
push
sub
cs
cmp
sbb
repz
div
push
and
(bad)
adc
in
repz
xchg
adc
aam
imul
dec
pop
add
push
(bad)
mov
or
(bad)
xor
aad
(bad)
das
in
dec
fmulp
mov
lock
iret
leave
cmp
jbe
aam
rcr
leave
cmp
test
inc
hlt
enter
jle
dec
les
repnz
fmulp
loopne
push
mov
cmps
cmp
iret
leave
jae
sub
cmp
fsubr
in
jns
mov
dec
sahf
xchg
out
je
xor
mov
cs
and
in
cmp
test
mov
or
shl
repnz
jo
dec
ins
inc
fsubr
in
push
inc
pusha
sahf
xchg
ja
jbe
pop
xor
pop
push
repnz
xor
adc
aad
sbb
in
cmps
mov
test
push
mov
or
xchg
mov
cmps
or
push
mov
cs
mov
imul
add
arpl
bswap
pop
in
jecxz
jnp
imul
sbb
dec
out
jge
enter
sub
shr
mov
nop
and
inc
push
cmp
xor
js
adc
sub
scas
xacquire
pusha
cmps
daa
rcl
sub
test
and
add
cmp
jo
lea
xchg
push
xchg
in
mov
nop
cmps
das
xor
dec
or
xor
sub
sub
into
jge
jl
test
daa
inc
mov
pop
call
push
jp
adc
ficom
mov
ror
pop
dec
(bad)
pop
or
or
movs
add
enter
cmp
sub
mov
adc
adc
sbb
in
jae
xor
cmp
cld
mov
ror
mov
xchg
cmp
pop
cld
mov
push
test
nop
push
and
leave
xor
dec
push
test
pop
sub
mov
(bad)
mov
clc
imul
jl
out
clc
clc
lea
dec
jno
icebp
pop
cmp
cmc
sbb
je
mov
pop
loop
dec
in
stos
clc
pop
lods
mov
push
ret
pop
shl
pusha
or
adc
rcr
mov
cmp
xchg
jb
cs
sub
(bad)
add
aam
scas
xchg
adc
adc
jno
jo
stos
leave
pop
scas
sti
push
mov
inc
lea
push
cwde
out
inc
xchg
adc
xchg
xchg
cs
jp
nop
xchg
sbb
inc
inc
mov
cld
aam
or
loope
mov
(bad)
adc
iret
in
push
push
and
cwde
data16
mov
clc
pop
mov
leave
and
enter
dec
push
mov
movs
xor
and
pop
test
leave
and
dec
lods
ins
mov
xchg
dec
xor
xchg
dec
xor
mov
xor
and
xchg
les
pushf
enter
dec
push
movs
int3
pop
test
dec
push
mov
aam
dec
repnz
pushf
repnz
or
dec
loopne
add
in
es
push
jns
in
push
outs
ins
aam
test
gs
jne
push
fld
or
inc
push
pop
xchg
das
mov
add
outs
je
fs
adc
bound
ins
pusha
enter
cmovns
outs
fs
outs
aas
repnz
dec
jb
pop
outs
jb
inc
ins
jo
inc
jb
ins
and
fst
sub
push
cmp
fstp
inc
popa
je
and
(bad)
rol
inc
push
pusha
outs
mov
pop
dec
add
(bad)
pop
in
add
pop
scas
mov
out
scas
lock
push
pop
mov
pushf
and
int3
xor
aad
clc
cmp
jmp
sbb
mov
adc
add
test
aas
rol
or
fidiv
mov
and
dec
jp
test
iret
repz
push
inc
and
out
imul
inc
clc
es
jo
(bad)
sahf
jnp
push
aas
es
push
adc
dec
jnp
in
xor
cmp
das
adc
jmp
inc
pop
or
loopne
fsubr
adc
sub
bnd
pop
push
inc
mov
add
xor
xor
and
(bad)
adc
inc
test
adc
mov
(bad)
or
ds
inc
sti
mov
addr16
ins
(bad)
pop
test
fidivr
jb
je
rcl
jo
or
xchg
fs
xchg
dec
ficom
mov
mov
mov
jns
mov
xchg
mov
jle
iret
add
pushf
inc
jb
sbb
adc
popa
iret
add
or
sbb
test
ins
(bad)
push
or
leave
mov
ins
iret
rcl
icebp
mov
(bad)
push
outs
sub
inc
idiv
mov
pop
stos
test
mov
sahf
fdiv
arpl
cmps
inc
popa
repnz
xchg
mov
ret
push
aam
cld
js
xchg
aad
hlt
mov
aam
sbb
xchg
popf
mov
mov
ror
mov
jnp
shl
iret
das
mov
in
dec
retf
ins
add
ror
pop
sbb
mov
es
daa
call
test
cld
out
add
and
mov
inc
mov
retf
add
nop
inc
xor
xchg
or
xchg
inc
pop
mov
(bad)
cmp
pop
mov
mov
fs
dec
jbe
pop
push
mov
inc
push
and
shr
add
mov
lds
jnp
or
or
inc
push
mov
ficomp
add
(bad)
mov
aam
push
scas
test
jno
inc
aas
dec
je
sbb
clc
add
fs
xor
xor
std
add
call
adc
test
pop
cmps
cmp
xchg
arpl
clc
mov
pop
xchg
out
mov
hlt
mov
outs
fidiv
lock
call
in
mov
mov
dec
call
mov
nop
mov
adc
and
jae
loopne
xchg
mov
enter
jmp
mov
sahf
and
fcmove
int3
or
jmp
mov
adc
fcomp
enter
ffree
shl
or
mov
and
loopne
or
mul
outs
pusha
call
push
or
mov
sub
xchg
jbe
je
in
popf
inc
je
ret
pushf
jmp
adc
cmps
mov
addr16
iret
jns
pop
in
mov
test
repnz
clc
or
cmp
adc
loop
mov
sub
ret
or
dec
mov
jge
sti
cdq
add
fucomip
retf
test
test
mov
mov
add
xchg
jne
pushf
xchg
(bad)
test
aad
mov
mov
mov
xchg
(bad)
clc
stos
xchg
mov
aaa
cld
das
test
mov
test
mov
push
add
and
sub
hlt
push
test
push
or
test
test
fild
in
xchg
pop
les
adc
jge
cdq
ds
xchg
clc
jmp
and
and
lock
das
adc
inc
xor
lea
inc
jecxz
call
inc
add
into
divps
sbb
hlt
mov
call
sub
or
and
or
jne
jmp
inc
mov
mov
pushf
jp
dec
repz
dec
pop
stos
ja
sbb
sub
in
test
outs
xor
in
lock
in
sti
int3
ins
xchg
jne
push
cld
xchg
jl
inc
sub
aaa
xor
xor
push
aas
jmp
cmps
jle
ret
psubsw
adc
or
push
sbb
not
and
lock
call
movs
shr
dec
lods
jge
push
jmp
mov
dec
jb
mov
(bad)
jnp
ins
push
push
jne
aas
xchg
or
lods
xor
or
fimul
and
add
fisubr
je
mov
aaa
jmp
sbb
adc
loopne
and
enter
and
pop
xor
loopne
mov
xchg
or
sub
je
fcomp
add
xchg
jecxz
jae
adc
in
or
adc
jb
lods
add
call
in
cmp
push
bound
shl
mov
inc
call
pop
aad
aam
jmp
push
and
adc
inc
jl
mov
pop
or
nop
dec
xchg
push
add
call
dec
push
adc
in
jns
pop
add
sub
or
jnp
ror
pop
cmp
jns
mov
adc
cmp
xor
inc
loop
push
inc
(bad)
adc
in
cmps
(bad)
inc
lods
nop
jmp
(bad)
adc
mov
stc
sbb
sub
or
pop
outs
lock
clc
loopne
je
pop
jne
push
inc
ret
xor
(bad)
add
or
or
pop
out
outs
loope
jg
xchg
pop
add
pop
ret
pop
push
dec
jl
and
imul
mov
jo
mov
cmc
push
mov
imul
(bad)
outs
jl
add
(bad)
jns
jle
enter
popf
push
mov
dec
and
mov
je
add
add
and
inc
rcl
ja
add
cld
push
dec
xchg
popf
dec
jae
jnp
push
lock
in
inc
call
push
add
test
lock
call
ror
jp
ja
inc
mov
or
test
clc
mov
loope
cmp
mov
clc
pop
cs
mov
jg
adc
and
test
test
shl
xchg
cmp
mov
cdq
cmp
adc
and
mov
cmp
push
test
pop
dec
pushf
or
or
jb
pop
mov
dec
pop
add
fwait
xor
and
jl
jge
xchg
add
push
add
xor
xchg
fadd
or
jmp
and
pop
sbb
adc
jo
dec
cmp
sbb
test
push
inc
xchg
imul
ja
adc
pop
inc
sbb
mov
cmp
ja
add
fpatan
cmp
repz
sbb
push
js
imul
lds
outs
xchg
lds
std
sbb
dec
enter
ins
dec
inc
add
and
cmp
mov
(bad)
or
sar
mov
ror
inc
cmp
movsx
dec
mov
in
sub
xor
fld
sub
sub
fstp
cs
push
inc
pop
in
xchg
(bad)
lock
cld
sbb
clc
mov
inc
call
hlt
push
add
push
or
cmp
adc
jbe
pcmpeqd
pop
push
fsub
mov
xor
or
mov
cmps
es
aaa
aam
arpl
rol
sbb
int3
ins
add
dec
test
enter
mov
enter
inc
fcmovu
fmul
jno
mov
stc
scas
test
in
test
pop
dec
je
jmp
stc
dec
rol
push
call
xor
test
stos
ret
add
and
fwait
ins
scas
cmp
in
test
popa
push
mov
push
call
mov
fwait
pop
das
fcomp
pop
dec
jo
out
imul
mov
add
or
cmp
mov
fld
mov
pop
fnsave
pop
push
shr
cmp
xor
test
mov
adc
fdiv
jno
movs
and
movs
push
imul
mov
pushf
cmp
es
mov
xor
sbb
xchg
jno
sbb
loopne
push
dec
inc
cmp
sbb
jmp
pushf
mov
outs
xlat
mov
inc
sub
gs
mov
es
add
jle
mov
shl
pop
xor
or
pushf
xor
mov
and
mov
dec
test
push
in
out
jmp
cs
adc
or
loope
or
adc
xlat
in
dec
iret
sbb
js
fwait
inc
xor
and
leave
inc
dec
and
and
pop
loopne
xor
inc
ret
xor
nop
test
jne
add
mov
out
mov
sbb
retf
ret
xchg
push
dec
nop
push
adc
jns
push
push
push
mov
dec
xor
add
out
sahf
cmps
sub
and
(bad)
cmps
int3
iret
repz
pop
sbb
imul
dec
cmp
ins
push
pop
dec
js
cs
sub
les
jnp
test
push
sub
xor
and
mov
aaa
loopne
or
(bad)
es
cwde
fdiv
fdiv
aam
or
or
aaa
rcl
iret
or
xchg
loopne
fmul
enter
or
add
ins
enter
ja
cmp
les
sub
fs
cmp
jnp
iret
pop
jge
call
mov
sbb
cmp
inc
dec
push
clc
lahf
out
outs
pop
push
mov
in
ss
add
dec
cwde
mov
inc
push
es
mov
pusha
ret
inc
and
cmp
mov
or
mov
cmp
fadd
jno
dec
aaa
test
movs
inc
and
cwde
aaa
movs
aad
(bad)
xchg
je
mov
jno
mov
movs
mov
aaa
call
aaa
jo
imul
aaa
dec
mov
ss
popf
nop
into
test
(bad)
ja
aaa
mov
pop
mov
add
loope
sbb
into
fmul
ins
ret
push
test
mov
loope
sbb
or
test
sbb
clc
add
jb
ins
jmp
retf
mov
mov
iret
test
sub
pop
inc
mov
add
pusha
push
or
daa
aam
sbb
in
sbb
inc
push
ds
push
stc
mov
pop
inc
outs
jne
xchg
jb
outs
arpl
xor
cdq
adc
mov
dec
pusha
pusha
xor
jbe
addr16
jo
push
push
or
verr
outs
pop
stc
(bad)
push
add
aas
push
outs
imul
mov
imul
push
ins
jb
inc
inc
jns
push
inc
mul
(bad)
(bad)
sbb
add
adc
and
pop
pop
or
call
and
sti
inc
out
call
push
or
xlat
push
cld
sub
dec
test
ret
sti
(bad)
jae
pop
add
mov
push
cmc
and
cwde
jmp
lea
xchg
mov
movs
mov
xchg
(bad)
nop
xor
shl
and
jae
push
(bad)
adc
popa
shl
lods
sbb
dec
lock
inc
pusha
add
dec
add
hlt
cwde
test
mov
movs
cwde
sbb
add
out
jns
cld
(bad)
daa
mov
(bad)
in
inc
lahf
jl
xchg
jns
je
or
inc
push
mov
mov
push
push
movs
add
add
jo
jae
clc
jle
sbb
hlt
ds
in
out
xor
mov
inc
in
dec
out
xor
mov
mov
push
fcmovb
and
push
rol
icebp
fisttp
xor
sbb
add
cmp
pusha
push
push
add
jb
pushf
in
loop
shr
(bad)
xor
xchg
rcr
lds
dec
mov
aam
lds
mov
sbb
pop
sbb
es
lds
scas
icebp
dec
mov
dec
and
jnp
je
push
pop
mov
xchg
xchg
pop
push
xlat
inc
jmp
sbb
imul
inc
pop
(bad)
dec
mov
push
mov
inc
shl
add
add
jne
out
sub
push
or
adc
ret
xchg
adc
repz
or
loop
push
sti
cmps
std
(bad)
mov
call
xchg
rcl
ret
mov
(bad)
pusha
hlt
repz
mov
and
mov
ss
adc
inc
outs
pop
xchg
pop
cmc
or
rcl
mov
mov
push
add
push
ret
xor
ror
pop
mov
fld
addr16
shr
or
data16
pop
push
push
mov
push
push
push
int
enter
jmp
sbb
pop
mov
cmp
fcomp
jb
or
jbe
adc
ror
call
out
in
(bad)
mov
mov
and
pop
xchg
cmp
setg
and
push
jg
mov
xchg
mov
mov
fnstenv
or
(bad)
nop
loope
(bad)
jmp
outs
dec
jbe
mov
pop
jne
ret
jno
test
popf
or
jmp
(bad)
cld
mov
adc
and
hlt
inc
dec
push
adc
lods
cld
jmp
(bad)
fst
xlat
out
add
jle
jae
jne
sar
sub
cmp
clc
adc
dec
mov
movs
xchg
add
xor
add
mov
int3
aad
shl
cmp
xor
inc
ret
dec
xor
push
fidiv
lds
adc
xlat
inc
rol
xor
mov
or
cmp
test
popf
and
sub
or
or
add
cmp
int
xor
imul
dec
cdq
idiv
clc
mov
js
jp
jmp
or
cmp
jb
mov
push
mov
ret
jmp
cmp
and
adc
and
inc
dec
pop
add
add
aam
push
repz
jne
jne
adc
dec
push
jbe
push
adc
cdq
lock
adc
xlat
adc
bound
arpl
xor
add
ss
out
xor
sub
push
xor
inc
adc
push
aas
aaa
inc
outs
dec
inc
jl
pop
cmp
inc
inc
pop
push
dec
popa
xor
(bad)
(bad)
jg
xor
jno
outs
xor
inc
cmp
push
xor
dec
dec
(bad)
in
push
pop
bound
xor
pusha
push
xor
xor
push
addr16
ss
in
out
push
imul
push
push
push
dec
xor
ss
push
xor
aaa
inc
jne
(bad)
(bad)
fadd
mov
bound
push
push
jl
gs
pop
inc
jo
xor
outs
pop
dec
pop
inc
adc
cmps
mov
push
xor
jl
inc
ja
inc
inc
inc
ds
int
inc
sub
je
jge
outs
push
je
dec
ja
imul
pushw
jae
ds
jg
pop
retf
mov
lahf
addr16
push
inc
push
outs
popa
je
div
dec
ss
pop
mov
mov
dec
pop
push
pop
imul
fistp
inc
add
inc
push
xor
adc
push
push
cs
popa
div
popa
xor
icebp
popa
xor
lds
add
test
lock
mov
inc
push
xor
(bad)
pop
daa
add
jbe
retf
inc
sbb
sbb
mov
mov
add
mov
jne
dec
pop
sbb
mov
outs
arpl
inc
sub
xor
dec
pop
push
xor
icebp
jno
fild
inc
jge
pop
inc
imul
cmp
jne
and
xor
dec
dec
jle
imul
jo
push
leave
cmp
and
pop
push
push
pop
aaa
push
fcmovne
pop
outs
mov
aas
dec
ins
push
ja
xor
xchg
add
shr
aas
imul
data16
push
and
cmps
aas
jecxz
int
inc
pop
push
addr16
pop
fiadd
dec
mov
xor
adc
test
push
inc
pop
cmp
nop
test
sbb
jbe
ret
inc
jo
jne
inc
int
and
inc
aas
dec
pop
out
aas
jbe
dec
inc
gs
xor
imul
dec
inc
xor
dec
inc
push
loope
frstor
xlat
cmp
repnz
xor
push
cmp
jle
call
dec
inc
jl
inc
ins
aaa
xor
sub
jbe
dec
inc
pop
lock
pop
pop
dec
jo
jae
push
jo
ss
bound
pop
jo
jmp
push
pop
jne
jl
xor
aaa
aaa
outs
cmp
xor
(bad)
(bad)
out
(bad)
xchg
xor
aas
xor
inc
xor
imul
pop
dec
pop
dec
dec
jno
xchg
sub
dec
es
dec
xor
sbb
xchg
jae
cmp
ins
jl
inc
push
outs
cld
jbe
mov
movq
push
push
(bad)
aas
sbb
jbe
push
pop
pop
dec
push
imul
sub
push
das
shr
dec
xor
xor
inc
movs
inc
sub
inc
out
data16
jne
les
dec
sahf
inc
out
vmaxss
dec
jge
jge
dec
cmp
inc
inc
push
dec
dec
sahf
push
ins
inc
pop
ins
push
jge
cmp
mov
fucomip
call
cmp
pop
dec
imul
xor
imul
jno
add
imul
sub
dec
xor
imul
push
xchg
inc
mov
push
push
cmp
std
xor
dec
jl
add
add
imul
push
xor
push
bound
xor
xchg
sar
outs
inc
jge
je
jb
cs
or
jle
inc
push
arpl
imul
dec
ja
sub
pop
nop
dec
data16
dec
pop
test
jp
xor
mov
pop
dec
loopne
popa
xor
mov
inc
push
inc
dec
dec
push
push
xor
test
pop
fmul
inc
pop
dec
out
and
sub
stos
clc
add
ds
mov
dec
rcr
jle
push
ds
dec
dec
(bad)
dec
je
inc
jle
mov
push
xor
push
inc
sbb
push
dec
ins
jle
inc
and
jbe
into
dec
xor
inc
icebp
mov
jne
jge
inc
pop
xor
sahf
cmp
int
push
inc
inc
inc
push
pop
dec
inc
push
inc
dec
pop
sub
xlat
aaa
ss
pop
inc
pop
imul
dec
ins
cmp
lock
push
xor
sbb
push
cmp
xor
push
xlat
jo
sub
pop
je
inc
popa
push
ins
aad
and
jle
(bad)
dec
push
dec
xor
sub
es
xor
jle
aaa
in
push
dec
dec
xor
mov
xchg
popa
push
and
inc
aaa
xor
iret
push
movzx
cmp
in
dec
outs
push
ins
ins
push
pop
jbe
movs
jl
cmp
es
(bad)
jl
xor
dec
pop
cld
out
dec
pop
push
xor
rcl
inc
jno
pushf
push
mov
outs
xchg
ss
data16
dec
push
fwait
lods
jmp
jo
mov
push
pop
shr
dec
dec
ja
dec
call
jl
mov
ss
inc
pop
dec
aaa
jle
mov
sbb
or
xor
imul
cdq
loope
jb
jno
jge
xchg
or
popa
inc
xor
xor
xor
cmps
dec
mov
into
or
lahf
in
jmp
pop
imul
imul
ja
ss
sbb
cli
je
jle
(bad)
jge
dec
dec
push
je
ins
inc
sahf
push
shr
xchg
call
loopne
pop
push
fdiv
jle
dec
xor
pop
push
xor
movs
jge
addr16
jne
cmc
scas
mov
cld
inc
outs
dec
xor
imul
pop
push
dec
push
inc
inc
addr16
mov
dec
jbe
jne
lods
mov
mov
jno
push
fidiv
sbb
push
inc
call
mov
rcl
inc
cli
fdivrp
cmp
push
dec
xor
dec
cmp
xor
stos
jecxz
jge
push
ins
xor
pop
lock
xor
xor
pop
fistp
ins
mov
arpl
aaa
xor
xchg
ror
xor
inc
jmp
shr
ss
sbb
push
xor
pop
cdq
push
loopne
push
popa
shr
dec
inc
xchg
aad
jnp
dec
push
xchg
xor
(bad)
dec
pop
mov
jno
pushaw
xor
stos
dec
push
or
(bad)
popa
inc
cmp
push
jge
(bad)
jge
jae
pop
pop
jae
imul
lods
pop
xlat
dec
popa
outs
add
inc
ja
addr16
hlt
sub
inc
dec
daa
cs
pop
add
jae
dec
dec
pop
sub
xchg
dec
cmp
pusha
in
bound
push
jb
jge
mov
add
cs
push
adc
or
mov
cmovg
addr16
es
sbb
or
xor
push
xchg
cmp
adc
dec
mul
iret
push
ds
mov
ins
ins
mov
jmp
js
push
aas
jb
cmovl
sti
sbb
cmp
jle
das
fsub
lds
mov
aaa
sar
xor
xchg
hlt
fistp
je
push
inc
inc
jo
push
xor
inc
pushf
inc
out
push
dec
dec
inc
stc
fidivr
cli
scas
(bad)
out
data16
jne
push
inc
(bad)
push
inc
jae
imul
fidiv
ss
es
addr16
imul
imul
out
push
aaa
mov
dec
sub
cs
pop
ja
push
pusha
retf
fs
call
aaa
push
lahf
ins
sub
popa
xor
jno
sahf
xor
ss
lods
popa
xor
ins
pusha
push
mov
hlt
inc
jbe
push
adc
mov
ins
pop
jge
pop
push
daa
adc
pop
cmp
or
mov
dec
fmulp
cmp
mov
mov
jbe
pop
lock
std
or
cmp
push
dec
xchg
bnd
jge
xor
dec
fmulp
mov
xor
push
dec
jmp
push
mov
and
aas
push
inc
popa
dec
push
jno
fbstp
sbb
scas
aaa
push
aas
pop
pop
cs
stc
lock
pop
jge
push
xor
aaa
lock
cs
dec
mov
jl
sub
aad
inc
popa
inc
push
das
test
dec
dec
jle
sub
(bad)
lahf
inc
add
add
outs
out
dec
dec
inc
dec
mov
ins
push
jb
retf
xor
adc
ins
aaa
sub
rol
jg
arpl
jle
je
jle
push
inc
jl
into
gs
inc
aaa
xor
pop
mov
out
push
pop
test
data16
push
fimul
je
cmc
xor
dec
daa
inc
daa
lock
dec
mov
inc
cli
or
inc
out
xor
xor
outs
adc
out
mov
jae
sahf
mov
aas
ins
pop
dec
outs
inc
dec
dec
push
push
xchg
dec
dec
inc
dec
push
cld
inc
aaa
dec
xor
jo
jo
push
aaa
xor
in
or
ja
push
ss
cmp
jo
aaa
jl
ja
(bad)
in
inc
(bad)
rol
push
dec
mov
jo
mov
push
(bad)
push
pop
inc
push
cs
adc
pop
push
loop
jmp
cmp
je
dec
push
imul
rcr
out
pop
push
aas
cs
popa
xor
popa
mov
xor
out
push
cmp
out
fiadd
push
imul
aaa
push
cmp
inc
shl
rcr
add
mov
jne
add
dec
push
je
adc
dec
push
scas
pop
inc
push
loope
cwde
dec
xlat
jl
imul
cmps
mov
outs
inc
jge
xlat
cmps
fsub
aaa
rsqrtps
outs
pop
sub
ss
repz
nop
inc
ja
adc
das
push
je
loopne
lock
out
pop
pop
aaa
ins
xor
inc
and
pop
jle
out
gs
cmp
inc
scas
pop
sub
cmp
pop
dec
dec
add
xchg
loope
popf
lock
cmps
xor
push
mov
ins
int3
imul
or
(bad)
cmp
inc
xor
mov
aaa
push
rcr
cmp
dec
inc
out
cdq
cmp
into
push
xchg
dec
pop
call
aaa
mov
lods
mov
jge
cdq
push
hlt
lahf
aaa
push
pop
push
jle
jmp
imul
imul
inc
push
pop
push
test
scas
push
iret
push
enter
xor
jg
dec
ret
je
dec
xor
jo
jg
add
sbb
xlat
mov
outs
js
xor
pop
jne
imul
repnz
cmp
pop
mov
dec
dec
adc
shl
pop
dec
loop
push
xor
xchg
push
imul
jae
pusha
jae
sahf
dec
or
outs
dec
cmps
jl
inc
ja
cmp
push
inc
outs
(bad)
test
shl
pop
dec
dec
xor
imul
inc
iret
jg
mov
popa
stos
mov
jp
cmp
xchg
aas
dec
xor
inc
pop
jae
into
inc
inc
loop
xor
cmp
xor
daa
xor
sub
sti
ja
dec
mov
data16
pop
mov
dec
inc
push
mov
or
dec
je
cmps
add
jbe
imul
mov
adc
pop
imul
inc
push
das
aaa
push
push
inc
cmc
and
repnz
dec
dec
jle
aaa
aaa
pop
ja
js
inc
pop
xor
push
inc
push
aaa
ins
and
sub
(bad)
inc
jg
push
mov
inc
jno
inc
sub
sbb
mov
cs
ss
ss
inc
(bad)
pop
push
and
mov
call
inc
dec
or
pusha
mov
pop
push
mov
imul
inc
xchg
shr
cmp
inc
ins
push
not
xchg
out
pop
add
cmp
addr16
pop
add
add
xchg
or
xchg
push
lahf
clc
inc
inc
push
dec
data16
push
pop
ret
jns
pop
inc
push
cmp
jg
jae
dec
pop
pop
dec
push
pop
dec
sbb
lea
dec
inc
iret
inc
inc
and
dec
bound
mov
pop
xchg
pop
das
push
dec
jae
jg
pop
xchg
sahf
jne
mov
dec
push
xchg
inc
pop
xor
aaa
inc
dec
ins
(bad)
add
(bad)
xor
dec
inc
push
xor
mov
lods
loop
inc
push
div
push
push
jno
add
outs
xor
adc
jle
pop
jno
stos
jo
add
jl
xor
test
inc
push
dec
aad
sbb
popa
fdivrp
mov
fadd
push
push
faddp
dec
or
or
xchg
add
sbb
cmp
out
js
cmovb
push
inc
dec
jge
adc
mov
dec
dec
aaa
sub
or
push
sbb
call
pop
or
call
dec
jl
popa
dec
xor
outs
out
dec
std
mov
div
push
jae
xor
scas
mov
and
dec
pop
out
jno
jb
bound
dec
mov
imul
xlat
jg
xchg
rcr
pop
jle
sub
xchg
xchg
xor
aaa
inc
bsf
pop
dec
pop
dec
aaa
dec
mul
mov
shr
push
xor
dec
sbb
cmp
sub
jo
aaa
dec
xor
out
bound
(bad)
jne
je
push
pop
sub
xor
push
retf
into
sbb
(bad)
jle
dec
data16
dec
test
inc
fsub
inc
pop
pusha
xchg
cmp
mov
push
inc
xor
mov
inc
aaa
dec
inc
clc
es
pusha
(bad)
pop
sbb
push
cli
sub
jb
push
bound
ja
mov
dec
lahf
inc
adc
xor
outs
cld
lds
inc
ja
dec
push
push
(bad)
xor
fcmovne
es
stos
loopne
inc
pop
jno
out
inc
dec
xor
clc
pop
loope
inc
imul
jno
cmps
ja
lahf
ds
mov
jle
inc
pop
xor
dec
popa
adc
mov
fcomip
and
mov
xchg
inc
push
dec
jbe
stos
push
fs
into
imul
popa
(bad)
(bad)
jb
aaa
pop
inc
outs
jne
push
xor
mov
cmp
out
xor
push
push
pop
pop
ins
dec
xchg
cmp
cdq
out
inc
dec
ficomp
iret
add
inc
xor
nop
add
push
push
xlat
sbb
test
push
and
pop
popa
sahf
jno
dec
pop
sahf
dec
pop
xor
inc
sbb
pop
push
ins
inc
lock
sub
pop
into
xor
jno
dec
rol
daa
cmps
out
daa
nop
mov
inc
into
imul
in
cmp
mov
jmp
pusha
mov
retf
repnz
pop
xor
push
push
mov
jbe
push
hlt
adc
into
pop
push
xor
jge
mov
push
dec
mul
sbb
cs
int3
inc
sub
xlat
sahf
mov
js
xchg
cmovbe
loopne
dec
aas
es
xor
pop
jae
daa
ds
dec
out
(bad)
inc
push
fisub
jbe
lock
push
popa
xor
cmps
xor
mov
imul
cmps
pop
addr16
cmp
dec
inc
fmul
dec
out
ja
jno
cmp
pop
jg
dec
out
xor
inc
jbe
pop
out
(bad)
pop
test
or
push
jge
dec
mov
aad
dec
push
pop
fisttp
ficomp
jecxz
aaa
push
xor
sub
stos
and
push
jbe
adc
push
mov
loop
cmp
ds
pop
inc
xchg
bound
push
dec
dec
(bad)
push
inc
ja
pop
mov
pop
xor
dec
or
xchg
push
fidiv
out
add
lods
mov
ja
shr
(bad)
cmps
dec
xlat
push
mov
xchg
mov
sub
outs
or
das
jle
dec
push
inc
pop
mov
ss
shl
jp
ins
push
(bad)
inc
pop
inc
data16
jae
dec
pop
mov
test
xor
cmp
inc
dec
inc
pop
scas
inc
es
adc
jmp
dec
fadd
xchg
jg
loope
jmp
cmovl
inc
outs
out
pop
mov
std
mov
imul
xor
jne
arpl
mov
fild
aaa
dec
(bad)
mov
mov
inc
pop
push
push
mov
pusha
push
ds
mov
(bad)
dec
aas
pop
push
in
mov
sub
dec
add
dec
cmp
xor
repnz
pop
xor
jnp
(bad)
sub
data16
jbe
ret
add
das
cmp
cwde
push
xor
push
inc
imul
shl
outs
dec
dec
inc
xchg
jbe
xchg
inc
xor
dec
aas
mov
das
cmp
push
cld
dec
xor
dec
dec
push
(bad)
push
xor
cmps
pop
scas
push
dec
fstp
push
(bad)
cwde
xor
push
jne
xor
call
push
xor
pop
fmulp
je
add
jae
push
dec
mov
adc
jecxz
dec
out
movs
addr16
dec
dec
inc
or
pop
pusha
add
shr
dec
dec
push
dec
dec
mov
xchg
pop
jo
add
jb
jo
rol
mov
dec
je
popa
ins
inc
push
pop
ins
pop
and
das
cld
jb
inc
jle
jne
ds
push
fisttp
cmc
add
push
inc
pop
adc
push
inc
dec
aaa
pushf
sub
mov
push
adc
cmp
stos
push
je
aaa
push
test
popa
stos
sbb
cs
dec
scas
sub
dec
inc
dec
femms
data16
shld
pop
jmp
mov
push
mov
outs
xor
jo
push
inc
ins
dec
sbb
js
add
dec
xor
lock
(bad)
xor
jne
dec
gs
inc
xor
xor
dec
push
jne
rcr
mov
cmp
ret
xor
ds
popa
inc
jge
aam
or
pop
push
inc
ds
jb
xor
push
(bad)
sbb
xor
xchg
push
sbb
fidiv
push
outs
xor
push
mov
xor
loopne
aaa
push
jno
imul
mov
inc
inc
inc
xchg
sbb
push
jmp
hlt
mov
sub
and
imul
inc
jge
add
inc
shr
gs
js
rcl
pop
xor
inc
cmp
mov
dec
outs
gs
pop
push
out
push
(bad)
(bad)
jne
jl
cmp
gs
inc
cld
jno
xor
outs
xor
push
dec
dec
fldcw
jo
xor
hlt
cdq
or
jae
ja
xchg
imul
mov
(bad)
outs
push
inc
inc
outs
push
push
xchg
cmp
dec
push
push
arpl
mov
imul
xchg
dec
jne
push
lods
outs
adc
xor
dec
jb
jp
xlat
xor
pop
aaa
arpl
jne
sahf
les
pop
inc
adc
push
or
or
daa
dec
dec
jae
cmp
js
lahf
scas
outs
dec
mov
loopne
push
call
lods
sar
xor
jle
push
inc
and
adc
inc
dec
xor
ror
mov
stos
mov
movntps
mov
mov
ins
mov
cmp
outs
xor
pop
sub
ss
xchg
xor
add
mov
(bad)
xor
inc
xor
outs
xor
in
xor
jne
xlat
inc
outs
add
add
outs
push
sub
inc
inc
push
imul
scas
xchg
mov
dec
add
pop
in
dec
inc
ret
loop
cs
dec
cs
dec
cmps
add
xor
dec
push
call
xor
and
dec
fisttp
push
inc
dec
xchg
xchg
lahf
xchg
inc
push
inc
xchg
jb
sbb
push
aas
xchg
loopne
sub
call
push
out
neg
lods
or
pusha
dec
lahf
fbstp
data16
pop
fadd
inc
out
inc
mov
es
add
jb
pop
ins
inc
outs
out
sub
cmp
jle
out
add
xor
add
cmp
fldenv
xor
dec
into
ins
push
dec
scas
dec
cmp
loop
sub
aaa
inc
test
scas
fidiv
arpl
cmps
aaa
loopne
sbb
adc
idiv
sbb
rcl
push
dec
cmp
inc
add
dec
pushf
data16
push
dec
addr16
arpl
or
mov
push
mov
xchg
inc
mov
ds
dec
mov
popa
or
xchg
push
xchg
inc
pop
out
add
aas
cmp
(bad)
pusha
call
dec
push
push
loopne
add
sub
xchg
jne
or
idiv
scas
inc
scas
inc
popa
outs
div
mov
cmp
outs
cmp
ss
dec
inc
dec
aaa
push
pop
xor
daa
div
pop
jbe
sub
pusha
jbe
push
and
adc
shr
dec
cmc
or
(bad)
xor
es
(bad)
pop
outs
dec
imul
push
dec
push
pop
dec
aas
dec
add
lock
daa
bound
ins
or
push
(bad)
loopne
sbb
jbe
dec
aaa
mov
pop
jge
stos
xor
pop
cmps
dec
call
mov
mov
push
daa
ss
dec
sbb
imul
dec
cmps
push
dec
aaa
pop
ins
or
inc
scas
inc
aas
js
fsub
jbe
cmps
xor
into
pop
xor
scas
xchg
aaa
xor
add
sbb
push
lods
out
add
fiadd
cs
inc
dec
das
fdivr
lock
ds
es
push
mov
nop
dec
jmp
pusha
fidiv
pop
dec
xor
add
scas
or
ret
imul
adc
push
in
lock
pop
sbb
jne
shl
jle
out
pop
jo
clc
push
dec
cwde
popa
es
push
jbe
mov
aas
je
pop
push
jp
stos
dec
jle
inc
popa
dec
xor
pop
mov
inc
inc
dec
dec
mov
push
push
push
ss
mov
inc
mov
add
jg
mov
je
(bad)
push
out
(bad)
in
sub
(bad)
push
jle
pop
or
pop
xor
sub
shl
cmps
push
es
jl
gs
cld
push
xor
jae
mov
addr16
xor
aaa
cwde
fs
es
push
aas
jge
mov
dec
push
inc
movs
jae
adc
dec
mov
inc
and
dec
imul
and
pop
cmp
cmp
adc
jbe
inc
jno
ds
jae
or
push
sub
inc
sar
pusha
xor
movs
dec
mov
inc
shr
repz
sub
push
ss
bound
dec
imul
dec
push
pop
mov
mov
jmp
dec
mov
jg
sbb
or
xor
sahf
retf
inc
xchg
(bad)
ja
sbb
test
push
test
adc
data16
rcl
pop
test
jbe
xlat
xchg
xchg
loope
sub
jbe
sahf
gs
mov
enter
jp
xchg
out
dec
popa
(bad)
or
pop
ds
call
dec
pop
inc
cmp
cmp
dec
xor
or
clc
lahf
dec
es
scas
or
pop
icebp
dec
push
jb
into
outs
pushw
call
jbe
jbe
mov
or
imul
xchg
xlat
inc
(bad)
out
ss
sub
add
pop
add
pop
mov
shufps
pop
popf
bound
inc
pop
loope
es
jle
inc
pop
pop
inc
dec
jno
mov
xor
push
pop
push
cs
test
loope
pop
nop
mov
xchg
inc
lock
or
dec
cmp
bound
mov
inc
jno
mov
pusha
dec
pusha
popa
push
dec
sbb
mov
mov
jo
xor
push
sub
arpl
cmp
mov
mov
aaa
call
shr
data16
std
pop
test
scas
mov
dec
add
test
jg
sub
ror
fidivr
fisubr
push
push
dec
int3
push
pop
push
push
push
mov
rcr
dec
(bad)
popa
imul
inc
inc
jle
inc
pop
js
inc
mov
push
jo
gs
jne
ja
addr16
addr16
outs
push
dec
push
loop
push
push
inc
cmp
dec
xor
js
sbb
dec
fisub
test
mov
push
pop
pop
ins
aaa
dec
jle
and
sbb
or
(bad)
pop
cmps
inc
aaa
inc
push
inc
xor
cmp
imul
imul
pop
ja
jle
inc
jae
dec
or
(bad)
shl
push
cmp
dec
inc
push
xor
loopne
outs
je
jge
test
ss
(bad)
outs
sub
push
xchg
rcl
xlat
nop
xchg
sbb
outs
imul
xchg
push
inc
jo
pop
jbe
and
jle
(bad)
(bad)
jbe
push
mov
xor
jge
outs
pop
jle
pop
cld
xchg
dec
push
cmps
inc
jge
cmp
dec
dec
out
out
push
(bad)
mov
outs
push
(bad)
aaa
cmp
add
arpl
inc
gs
daa
or
aaa
sbb
sbb
dec
mov
imul
clc
daa
dec
jne
pop
push
dec
lahf
push
je
pop
jne
jle
popa
cs
dec
push
cdq
cmc
sub
dec
imul
mov
sbb
mov
push
(bad)
into
pop
loopne
int
sar
data16
outs
dec
dec
mov
les
inc
dec
rol
cmp
cs
jae
cmp
fimul
popa
gs
(bad)
pop
shr
ss
inc
jae
test
mov
adc
push
or
xor
repz
push
es
jbe
push
pop
dec
dec
cmp
test
inc
imul
ja
jo
(bad)
dec
inc
jae
push
ds
jne
push
ss
inc
inc
sbb
fiadd
clc
add
push
scas
push
jne
lock
ins
push
gs
jo
fadd
mov
dec
push
inc
std
push
adc
popa
jbe
xor
pop
aaa
xor
sbb
jno
xor
or
jge
mov
jno
push
stos
sub
dec
pop
push
xor
push
les
jne
jne
push
dec
mov
div
dec
ja
mov
(bad)
mov
es
pop
inc
dec
outs
push
push
jl
mov
fbstp
push
add
jo
jp
ss
cmps
push
pop
(bad)
add
add
jle
push
push
push
adc
aas
mov
div
aaa
pop
push
pop
mov
and
cmps
push
popa
jo
fsubr
push
push
pop
inc
push
inc
mov
js
and
push
xor
jle
rcl
mov
pop
aaa
mov
pop
inc
idiv
cmc
pop
inc
inc
jno
dec
dec
out
shl
sub
push
imul
sbb
jl
scas
xor
hlt
and
push
xor
je
jbe
pop
jb
dec
out
xor
iret
dec
hlt
shl
mov
out
inc
iret
(bad)
popa
pop
xchg
push
jg
mov
sti
push
popa
addr16
xor
jle
mov
shl
dec
adc
ficomp
mov
jg
mov
es
mov
pop
ins
(bad)
push
je
dec
lods
cmps
xor
bound
pushf
jge
cmps
pop
bnd
adc
fisub
cmp
lods
xlat
js
fidiv
arpl
push
pop
enter
push
inc
pop
inc
data16
dec
dec
pop
(bad)
aad
sahf
into
push
ds
push
inc
mov
je
xchg
sbb
cmp
imul
cmovb
dec
dec
pop
and
scas
adc
mov
xor
(bad)
scas
xor
sbb
(bad)
out
outs
push
add
push
dec
dec
popa
push
mov
out
inc
test
add
sahf
inc
xchg
(bad)
das
jo
ror
dec
dec
bound
xchg
push
(bad)
(bad)
jbe
inc
sub
pop
aas
dec
in
es
xchg
sbb
(bad)
mov
mov
scas
jl
mov
loopne
sub
xchg
mov
pop
push
nop
inc
getsec
fisttp
inc
adc
push
addr16
ins
stos
ret
mov
dec
jno
icebp
ror
ins
inc
jg
dec
addr16
push
outs
xor
out
aaa
xchg
outs
dec
inc
mov
pop
add
aaa
dec
jbe
push
js
adc
dec
pop
inc
(bad)
xor
or
sbb
dec
pop
add
(bad)
cs
pop
adc
xor
test
loop
pop
out
out
ss
mov
push
push
das
pop
arpl
mov
ror
loopne
xchg
xchg
mov
dec
gs
les
mov
xchg
pop
inc
jbe
out
cmps
popf
ds
dec
dec
dec
jmp
dec
jbe
inc
or
out
push
out
xchg
inc
jb
ficom
mov
ss
jg
ins
xor
fimul
and
(bad)
(bad)
bound
push
mov
pusha
mov
repnz
ss
dec
pop
cmps
inc
xlat
mov
ds
dec
(bad)
add
xor
gs
pop
push
pop
test
cmp
or
xchg
mov
jmp
dec
aaa
cmp
xor
outs
dec
addr16
inc
xor
push
data16
add
mov
sbb
adc
add
ret
xchg
xor
xchg
dec
jno
inc
push
xchg
popa
push
push
(bad)
mov
sbb
push
xlat
push
out
mov
push
dec
inc
inc
das
xchg
xor
lahf
inc
push
or
sahf
sbb
xchg
(bad)
pop
je
add
emms
ds
inc
dec
sub
enter
fiadd
push
sub
push
out
cmps
mov
dec
outs
aaa
inc
mov
add
jbe
daa
icebp
xchg
jnp
daa
neg
jp
fidiv
out
idiv
dec
rcr
es
iret
jo
xchg
cmps
es
jge
(bad)
das
pop
xchg
lahf
xor
pusha
clts
xor
xor
xor
dec
mov
outs
jmp
mov
dec
xchg
into
les
mov
sbb
push
fmul
mov
mov
jecxz
addr16
aaa
inc
pop
mov
or
add
cmp
popa
ins
cmp
mov
dec
dec
cs
mov
cmp
sub
(bad)
not
or
dec
xchg
aaa
sbb
je
iret
cmp
dec
out
aaa
jo
dec
inc
dec
gs
inc
cmp
inc
loop
imul
aaa
inc
fucomip
sbb
into
ss
add
sub
(bad)
(bad)
ds
pusha
adc
aaa
push
push
(bad)
arpl
inc
gs
push
stc
test
push
jle
mov
or
pop
pop
mov
imul
push
cmovg
adc
or
push
mov
inc
xor
xchg
mov
cmp
mov
jp
ficom
push
mov
ds
pop
push
pop
cmp
mov
dec
test
add
(bad)
pop
or
pop
cmp
mov
rcl
pop
inc
xlat
jmp
push
dec
scas
jb
sbb
mov
xchg
mov
ja
ss
outs
outs
inc
xor
mov
push
inc
outs
pop
out
lock
pop
sahf
imul
jo
or
imul
dec
push
ds
push
xchg
sub
xor
push
mov
pop
mov
and
popa
and
push
inc
jecxz
bound
inc
and
in
dec
aaa
fcomp
or
inc
aaa
addr16
mov
aaa
out
out
inc
cmc
pusha
push
into
xor
dec
push
or
cmp
jmp
ja
dec
scas
xor
sahf
(bad)
dec
jl
ss
dec
icebp
xor
pop
push
push
scas
dec
jge
mov
nop
lahf
pop
xor
xor
sbb
scas
sub
imul
sbb
ja
and
addr16
aaa
jae
nop
(bad)
push
push
jle
ss
cmp
inc
mul
dec
xchg
dec
fsub
jae
jle
test
push
xor
push
dec
add
jno
pop
xor
pop
inc
shl
loopne
cmp
iret
(bad)
push
push
inc
push
jbe
addr16
jl
jo
dec
push
popa
outs
inc
push
dec
out
push
pusha
dec
nop
jbe
push
xor
aaa
jo
hlt
les
pop
dec
pop
gs
mov
adc
mov
xlat
pop
jb
xor
(bad)
pop
xor
rol
out
cmp
call
xchg
xor
js
or
push
push
scas
ror
daa
push
sub
cli
loop
pushw
(bad)
scas
cmp
scas
push
pop
push
pop
pop
outs
push
inc
and
adc
xlat
push
inc
(bad)
(bad)
in
fdiv
ja
nop
sub
and
les
jo
push
adc
jb
xor
cmp
addr16
jg
push
rcl
inc
rcl
jbe
cs
add
cmp
(bad)
dec
gs
ret
test
push
fsubr
cmp
xor
aam
inc
push
jge
dec
dec
push
cmp
jb
and
push
pop
cmp
pop
push
dec
dec
xor
push
ss
inc
ret
push
dec
jl
or
sahf
pop
push
mov
shr
mov
inc
dec
je
cmp
push
cmps
pop
push
push
or
popa
mov
lock
add
jl
push
xor
push
push
ss
lahf
sbb
xor
dec
dec
ret
or
mov
push
push
mov
cmp
add
sahf
adc
test
inc
outs
jbe
pmuludq
or
jbe
jle
jb
dec
dec
jno
jbe
push
jl
xchg
pop
xchg
leave
mov
pop
push
inc
sbb
ds
push
push
xor
inc
inc
inc
(bad)
xchg
pop
fcomp
push
adc
push
push
jo
shl
adc
sbb
xchg
push
jb
test
push
inc
cmp
cmps
dec
(bad)
sub
pop
je
inc
test
inc
iret
imul
mov
imul
icebp
cmp
popa
mov
push
dec
push
jg
inc
lahf
inc
(bad)
ret
cs
ja
ja
push
jbe
test
cmps
cmp
add
addr16
repnz
or
pop
push
imul
pop
inc
push
ss
jg
jge
ss
into
xsha1
cmps
dec
mov
into
out
cs
scas
mov
daa
mov
rol
mov
adc
dec
xor
jbe
inc
cmc
add
xchg
test
inc
push
dec
imul
or
xor
pop
outs
push
dec
add
mov
out
mov
mov
push
es
push
xchg
(bad)
cmp
jae
jne
jge
push
(bad)
je
cmps
add
push
xchg
xor
push
jno
push
add
xchg
les
out
leave
xor
ss
push
ret
test
jg
outs
mov
push
pop
lock
xor
push
ins
adc
sub
sub
push
lock
jne
or
xchg
jge
(bad)
dec
jle
rol
dec
or
cmp
daa
inc
outs
or
outs
out
jp
mov
(bad)
inc
arpl
fidiv
xor
mov
inc
inc
jge
imul
pop
pop
push
pop
jg
pop
dec
sub
nop
sub
push
dec
jbe
aaa
dec
ror
xor
inc
mov
addr16
sbb
push
dec
pop
test
pusha
inc
ds
outs
push
mov
cmp
dec
xor
dec
adc
jbe
inc
pop
pop
retf
push
imul
sub
ja
dec
loop
mov
shld
pop
inc
imul
inc
xchg
inc
sbb
pop
jl
push
pop
inc
push
add
push
enter
push
xor
rdtsc
mov
aaa
pop
out
push
inc
pushf
jmp
dec
mov
adc
jg
out
push
push
mov
aam
dec
cs
inc
ds
inc
sbb
adc
jl
call
jno
inc
sub
cmp
xchg
push
dec
pop
add
das
popf
das
dec
xor
xchg
mov
pop
ins
mov
gs
or
cmps
imul
push
leave
push
movs
cli
xchg
aaa
loop
jl
and
xor
push
cmp
lods
xor
push
sar
ds
in
inc
data16
jle
aas
hlt
jno
(bad)
push
xor
aaa
lock
xchg
(bad)
jo
mov
jle
jo
ret
test
popa
push
data16
or
pop
pop
into
out
xchg
jp
or
push
push
(bad)
seta
(bad)
dec
inc
xchg
outs
inc
jo
adc
push
out
xchg
leave
movs
aaa
icebp
inc
pop
inc
das
inc
dec
mov
cs
fdivrp
in
cs
dec
(bad)
xor
jp
popa
and
jle
addr16
arpl
call
dec
loopne
mov
xchg
push
into
xchg
sub
jmp
inc
sbb
(bad)
imul
dec
out
es
enter
daa
dec
xor
sbb
pop
aaa
jno
fwait
cmovp
pop
mov
push
push
cmovnp
or
ja
in
sub
dec
push
jl
and
(bad)
je
push
lahf
mov
call
ins
lahf
das
call
jge
mov
mov
retf
dec
data16
pop
in
fs
push
jno
dec
push
int
or
out
add
inc
pop
push
aaa
jle
cmps
sub
ja
scas
xlat
push
aaa
or
inc
aaa
sub
mov
ins
pop
test
ss
and
iret
dec
ins
out
cmps
sbb
pop
sub
push
test
mov
push
pop
jb
cmps
dec
mov
sbb
aas
jne
stos
rol
out
aaa
jg
inc
or
outs
adc
scas
mov
(bad)
push
inc
test
gs
cmp
add
cmps
pop
rol
and
popa
daa
cmps
mov
mov
xchg
fisubr
inc
scas
jne
inc
ss
ss
ja
xlat
pop
cmp
mov
dec
or
jp
jle
jle
pop
das
mov
daa
dec
outs
dec
in
add
inc
xor
aam
div
push
sbb
pop
pop
sahf
inc
cvtps2pd
inc
pop
mov
jbe
push
popa
sub
out
push
push
dec
dec
jbe
(bad)
gs
mov
pop
mov
ds
lock
or
pop
jbe
adc
inc
inc
add
call
pop
sbb
scas
inc
xadd
inc
or
mov
add
dec
scas
ins
movs
inc
push
pop
jg
loop
jb
call
jl
outs
icebp
push
jle
inc
das
dec
ja
jge
dec
scas
sbb
scas
push
xchg
push
(bad)
das
lods
fiadd
pusha
inc
out
inc
dec
mov
mov
xor
ja
dec
xchg
jp
push
addr16
imul
out
rdtsc
sbb
inc
imul
push
dec
bound
inc
out
dec
dec
cmp
pop
dec
dec
pop
inc
ror
cmps
adc
push
push
push
sub
jl
dec
xor
retf
cmp
dec
push
ret
neg
(bad)
jbe
bound
add
outs
inc
aaa
dec
or
inc
sub
call
xchg
addr16
cmp
jle
jo
dec
dec
data16
add
sar
pop
scas
(bad)
inc
jl
jbe
or
jl
dec
xchg
inc
call
(bad)
and
mov
cs
adc
cmps
mov
imul
push
(bad)
cmps
sub
imul
cmp
dec
pop
xor
dec
mul
jb
inc
aaa
daa
lock
sub
dec
inc
test
outs
sub
pop
jg
imul
jg
jl
js
jbe
or
and
xchg
(bad)
xor
imul
jg
cdq
nop
retf
pop
push
inc
jae
imul
pushf
xor
push
push
sbb
inc
push
xor
push
inc
nop
xchg
cmp
or
mov
jno
pop
inc
mov
inc
outs
dec
cmp
nop
xor
dec
inc
mov
inc
jle
gs
xor
or
scas
imul
cmp
mov
push
aas
xor
xor
dec
sbb
pop
bound
jg
pop
shr
dec
xchg
outs
ss
cmp
push
loopne
sub
push
test
pop
in
sbb
in
ja
cs
jl
xchg
push
add
ja
pop
sbb
push
ja
push
pop
cmp
mov
push
pop
dec
and
mov
dec
add
outs
scas
push
push
push
shr
ficom
xor
pop
mov
inc
push
push
pop
clc
popf
mov
jl
xor
imul
mov
inc
jle
xor
ja
push
aaa
ins
xor
mov
loope
shl
push
lahf
outs
jle
mov
dec
dec
outs
jle
imul
xor
dec
daa
cmp
dec
push
ins
push
dec
xchg
aam
popa
inc
inc
in
dec
dec
daa
lods
test
mov
les
mov
(bad)
push
xchg
xor
mov
jbe
stos
inc
push
and
inc
addr16
scas
es
stos
das
xchg
xor
sub
inc
dec
fidivr
jno
pusha
(bad)
jbe
loopne
sbb
mov
cdq
and
jne
popa
xor
sbb
add
inc
sbb
adc
mov
or
inc
ja
jbe
dec
sub
mov
push
xor
scas
inc
pusha
les
jg
push
aas
imul
gs
sub
xor
push
push
dec
je
out
outs
test
push
out
jne
inc
sub
dec
sahf
xor
iret
inc
ds
xchg
add
mov
push
daa
imul
push
stc
jmp
bound
gs
mov
inc
push
scas
popa
jge
jge
cmp
ds
pop
lahf
fsub
aaa
outs
pop
xor
outs
imul
ss
addr16
cmp
mov
ja
xor
fdiv
imul
pop
xor
outs
push
aaa
nop
out
iret
mov
imul
repnz
cmp
inc
jne
int3
pop
pop
mov
xlat
xor
jbe
jb
inc
push
outs
imul
outs
jne
push
addr16
xor
ja
sahf
xor
cmp
xor
ins
cmps
aaa
in
jbe
cmp
cmps
xor
call
mov
mov
test
(bad)
push
push
es
lahf
arpl
xchg
fisubr
dec
lods
(bad)
push
aaa
jecxz
push
out
pop
(bad)
dec
jg
lock
inc
addr16
xchg
or
int3
aas
dec
push
rcr
outs
cmp
loopne
(bad)
cmc
lods
xchg
fdiv
xor
push
dec
dec
(bad)
dec
addr16
push
or
imul
xchg
(bad)
outs
inc
cmps
xor
lea
mov
das
inc
adc
inc
fdiv
fwait
mov
sub
fild
outs
dec
test
xor
das
pop
or
outs
push
lea
pusha
call
not
jmp
lea
fdivr
icebp
xor
cmps
jle
dec
dec
cmp
or
inc
je
data16
xchg
addr16
(bad)
ins
aaa
jne
pop
xor
adc
xlat
or
out
imul
sbb
outs
cmps
push
dec
push
mov
aas
sahf
cmp
clc
push
push
call
pop
jne
xor
(bad)
jbe
inc
aaa
(bad)
es
push
inc
sub
jge
jno
aas
dec
push
fnclex
(bad)
(bad)
xor
push
dec
mov
add
(bad)
pop
cs
mov
outs
outs
cmp
mov
cld
cmp
fsubr
sub
inc
dec
cld
jae
inc
push
xchg
arpl
push
inc
aas
repnz
push
(bad)
ds
dec
out
mov
sbb
cmps
pop
push
ins
fst
push
xor
(bad)
cmp
mov
pusha
push
adc
adc
push
sub
adc
jmp
xor
rcr
loope
into
imul
push
ficom
pop
or
dec
jo
stos
push
outs
popa
test
inc
push
aas
dec
xchg
rcr
push
xchg
jl
inc
sysexit
xor
push
dec
jge
push
pop
mov
addr16
(bad)
dec
es
inc
or
(bad)
ds
gs
jne
pushf
aas
(bad)
xchg
cdq
add
pusha
cmps
into
mov
cmp
push
add
sub
xor
pop
xlat
push
push
add
lods
test
test
enter
cmp
inc
push
push
push
cs
push
dec
push
fsub
jno
inc
ss
gs
xchg
jb
ja
sbb
push
xchg
jge
dec
je
push
imul
arpl
xor
push
add
or
jp
xor
loopne
cmps
aaa
jge
scas
dec
and
popw
dec
scas
jbe
sbb
out
push
xchg
push
push
mov
jae
jnp
(bad)
inc
jle
data16
jl
sub
jno
(bad)
push
fidivr
lock
test
jbe
imul
adc
push
dec
push
cs
inc
cmps
dec
ficom
loopne
data16
mov
out
aam
add
inc
sub
fsub
pusha
xor
idiv
dec
scas
push
sub
pop
or
adc
push
hlt
out
push
sbb
push
inc
mov
fist
hlt
xor
dec
lods
add
inc
sub
or
out
push
adc
push
ss
inc
shr
cwde
jno
outs
les
loopne
out
sub
jae
je
add
dec
cs
xor
hlt
repnz
fimul
jle
dec
inc
add
adc
sbb
or
push
add
into
jl
push
dec
das
ds
xor
into
push
ss
mov
(bad)
je
fild
lahf
jo
dec
push
pop
inc
cmp
pop
je
cmovge
mov
push
arpl
dec
(bad)
lds
out
ss
pop
fild
daa
cmc
bound
jbe
xor
mov
cmps
inc
idiv
aas
popa
dec
std
pop
inc
dec
imul
fbld
out
dec
push
inc
inc
sub
pushf
aaa
inc
ss
test
jmp
push
inc
(bad)
sub
jg
jl
and
dec
cmp
push
push
ja
dec
(bad)
adc
or
mov
inc
cmps
popa
mov
cmp
aas
jbe
pushf
mul
pop
aas
push
cmp
jne
push
mov
ss
imul
call
(bad)
ffreep
(bad)
addr16
call
lock
jl
jnp
punpcklwd
jge
pushw
(bad)
xor
inc
(bad)
cmp
jge
into
inc
imul
retf
and
mov
dec
push
push
push
dec
xor
add
outs
pop
out
sbb
movs
add
(bad)
cmp
mov
cmps
jmp
mov
cmps
push
push
ja
jne
iret
popa
sub
(bad)
xchg
cmps
popa
jecxz
xchg
pop
addr16
push
dec
jae
xor
jno
daa
push
shl
ja
dec
jno
mov
push
push
jno
pop
xor
and
pop
(bad)
data16
ins
in
jg
ja
aaa
je
out
jb
adc
pop
inc
dec
jbe
and
test
push
xor
nop
push
sbb
dec
push
inc
pop
(bad)
pop
test
push
jb
sub
dec
xchg
ja
into
ds
cld
(bad)
les
dec
imul
xor
adc
outs
dec
inc
hlt
ror
das
jge
test
or
pop
data16
xor
pop
ss
inc
outs
iret
aaa
(bad)
(bad)
lea
jle
inc
dec
movs
into
scas
dec
lahf
aaa
sahf
xor
pop
xor
inc
sar
xchg
in
pop
pop
push
pop
sbb
inc
stos
fist
mov
push
aaa
sub
(bad)
cmp
or
out
push
mov
inc
dec
(bad)
btc
ja
daa
xor
jle
push
(bad)
lea
outs
pop
push
adc
jne
jle
cmp
imul
cli
test
(bad)
push
dec
cmp
mov
es
inc
inc
jg
pusha
icebp
lods
push
ds
inc
pop
jle
loop
inc
(bad)
cmp
test
iret
je
sub
push
adc
jne
mov
push
out
out
movd
iret
or
mov
adc
mov
xlat
mov
push
push
adc
inc
ret
lahf
inc
jbe
call
mov
xchg
loopne
inc
ss
sbb
sub
out
es
sbb
add
push
sub
(bad)
(bad)
outs
mov
inc
jno
test
inc
call
cmp
ins
push
scas
cmps
xor
dec
aas
aas
das
movs
xchg
js
push
sub
xor
adc
xchg
popa
jle
dec
push
outs
mov
ins
push
stos
push
jb
dec
dec
xor
mov
xchg
jo
dec
pop
into
(bad)
sub
push
or
ja
push
xor
mov
dec
cmc
xor
ss
dec
outs
outs
mov
inc
dec
push
imul
ins
imul
pop
pop
push
mov
adc
jno
gs
mov
jl
push
push
jle
inc
jne
push
pusha
push
sbb
inc
inc
out
imul
cmp
push
out
bound
jge
mov
fcomp
inc
shr
gs
mov
lods
push
ror
pop
dec
pop
dec
cld
ror
ja
mov
xchg
aas
sbb
dec
push
push
ja
pop
dec
jbe
and
imul
cli
add
imul
movs
or
shl
cli
mov
cmovbe
dec
push
xor
sti
out
fisttp
js
push
dec
jge
sub
jae
inc
push
sub
imul
aaa
dec
ja
mov
outs
pop
xor
ret
sbb
mov
dec
inc
push
retf
gs
jbe
fmulp
(bad)
test
addr16
ss
mov
push
mov
outs
push
mov
imul
ss
jmp
jo
into
dec
add
ja
dec
jno
xchg
into
(bad)
aas
push
mov
adc
jno
inc
xor
adc
cmc
enter
xor
(bad)
xor
dec
jbe
push
daa
call
ja
sbb
mov
imul
dec
xlat
dec
ret
push
pop
pop
mov
inc
push
jecxz
xchg
outs
scas
ins
jne
sbb
and
push
jle
je
jmp
inc
inc
inc
sahf
inc
adc
(bad)
add
scas
pop
lea
ja
out
or
push
outs
or
mov
div
push
outs
pop
mov
or
(bad)
loopne
fs
lods
inc
sbb
into
jle
arpl
dec
xor
cmp
push
lahf
bound
repz
add
push
push
inc
pop
dec
pop
repnz
xchg
fiadd
or
xchg
xchg
xchg
cmps
adc
inc
inc
dec
inc
ror
jbe
ss
cmp
aaa
mov
jecxz
and
push
push
push
imul
mov
mov
add
push
gs
xchg
xchg
adc
jle
leave
jo
and
pop
jle
dec
nop
add
gs
imul
push
pop
mov
pop
cmps
cs
mov
dec
ins
pop
mov
push
xchg
out
jno
pop
pop
and
sbb
aaa
pop
in
loopne
out
outs
jbe
inc
xchg
shl
jbe
xlat
rcr
enter
(bad)
cmp
ret
push
jo
aaa
(bad)
mov
push
xor
dec
das
inc
jge
xor
xchg
call
dec
test
scas
inc
dec
mov
sub
adc
(bad)
scas
jmp
mov
ins
push
pop
jg
ror
dec
push
mov
jg
xchg
or
mov
sub
dec
or
mov
gs
(bad)
jg
or
dec
xchg
je
add
add
push
dec
shr
cmp
push
jo
xlat
jle
loope
sub
xor
and
xchg
das
into
xor
ins
pop
xchg
add
xchg
pop
dec
fwait
push
cmp
push
ds
ss
jge
cld
add
dec
pusha
fist
inc
jl
ss
push
xchg
mov
pop
mov
mov
dec
push
pop
jle
pop
mov
sub
inc
xor
push
add
gs
daa
(bad)
shl
cs
xor
out
push
xor
fcomp
push
imul
stos
mov
ss
adc
les
ja
dec
adc
pop
push
cs
pop
cmp
add
mov
out
pop
sub
mov
shl
out
xchg
or
push
popa
jo
push
xchg
or
mov
arpl
add
shl
push
lods
add
pop
dec
popa
out
les
push
cs
movzx
jl
inc
push
mov
and
out
call
push
dec
dec
push
test
test
jmp
jae
jbe
mov
add
mov
adc
push
sbb
outs
inc
xor
cmp
adc
add
aaa
mov
(bad)
dec
mov
pop
xor
shl
arpl
pusha
test
jbe
inc
inc
ins
dec
in
loopne
addr16
jbe
dec
(bad)
mov
mov
sbb
out
jo
aas
mov
data16
lods
jbe
jae
xor
add
push
out
xor
enter
mov
(bad)
cli
mov
sub
push
or
xchg
adc
push
ds
mov
push
sub
imul
xor
add
xor
aaa
jne
push
lahf
push
jne
inc
pop
adc
mov
add
sub
pusha
xchg
(bad)
push
pop
(bad)
icebp
rcl
data16
out
push
test
(bad)
das
ficomp
xchg
out
jmp
xor
sub
dec
out
add
outs
sbb
jno
xor
push
or
xor
push
add
test
xor
push
xor
sub
nop
dec
cmp
mov
(bad)
push
dec
(bad)
mov
call
jecxz
cmp
mov
outs
fldenv
jmp
pop
out
inc
(bad)
mov
(bad)
scas
inc
mov
push
pop
sbb
pop
dec
imul
xor
xor
push
mov
bound
inc
jno
and
push
xchg
dec
cmp
clc
call
push
pop
dec
xor
jae
dec
cmp
inc
dec
xor
pop
push
scas
jb
aas
cmp
sub
addr16
xchg
lock
cmps
mov
js
pop
clc
scas
inc
mov
js
out
outs
push
push
outs
lods
add
sahf
dec
dec
fild
ins
inc
imul
dec
add
cmp
imul
dec
push
pop
outs
ins
jle
and
popa
popf
xor
jbe
out
jmp
dec
sub
dec
or
push
dec
xor
daa
pop
mov
push
scas
push
(bad)
dec
push
test
and
outs
(bad)
jne
and
es
dec
push
pop
jg
xchg
fadd
pop
pop
arpl
cdq
inc
or
cmovb
xor
addr16
aaa
jb
push
movs
add
mov
jle
mov
rcl
sub
sbb
xor
loopne
inc
mov
pop
(bad)
cmp
cmp
jle
mov
ret
sub
dec
mov
aaa
imul
dec
push
push
mov
jle
cmps
and
js
dec
shl
dec
repnz
xor
inc
push
cmp
ror
push
lods
inc
push
mov
gs
loop
push
out
pop
cli
outs
jno
(bad)
mov
jo
cmps
sub
push
dec
inc
stos
movs
mov
scas
repnz
inc
icebp
das
les
xor
dec
xor
test
push
js
ss
inc
lds
jo
sbb
xor
jae
lods
pop
jle
jbe
lock
jl
jg
adc
aaa
or
je
ss
inc
stos
sbb
pop
jge
push
dec
cs
pop
jno
add
push
imul
inc
(bad)
pop
and
pushf
or
dec
pop
cmp
add
mov
pop
inc
push
sub
icebp
adc
les
popa
pop
mov
add
aam
jle
ss
dec
fld
mul
pop
daa
outs
dec
xor
lahf
or
inc
inc
push
mov
imul
jno
dec
cmp
nop
pop
dec
pop
jo
dec
cmp
nop
pop
dec
pop
push
inc
inc
es
push
sub
jns
js
jne
imul
es
mov
inc
jbe
push
pop
pop
pop
mov
mov
fld
(bad)
push
dec
mov
dec
xor
inc
imul
outs
jbe
(bad)
adc
mov
(bad)
arpl
xor
(bad)
jl
add
push
mul
inc
add
jg
repnz
call
ss
add
push
dec
push
pop
pop
pop
inc
dec
push
push
push
and
popf
jle
dec
dec
aaa
cs
ret
pop
arpl
inc
xor
inc
rcl
js
das
xor
inc
dec
mov
add
mov
es
jg
inc
xor
inc
push
movntps
dec
in
test
jge
ins
aaa
pop
data16
pop
aaa
pop
pop
dec
aas
mov
push
ds
fstp
or
sbb
jg
add
mov
mov
jmp
(bad)
pop
idiv
outs
neg
retf
loop
fisub
sbb
stos
iret
daa
inc
test
ss
ret
xchg
push
xor
in
adc
jg
jge
mov
inc
cmp
ss
dec
inc
xchg
jp
sub
jb
pop
pop
push
ret
(bad)
mov
push
inc
jne
dec
test
jae
push
ds
and
icebp
jle
(bad)
packuswb
push
jbe
xchg
or
jne
xchg
stos
push
es
(bad)
pop
je
or
aaa
fidiv
retf
aaa
xchg
push
aaa
pop
cs
cmp
inc
ins
outs
dec
xchg
lods
and
cs
push
push
nop
inc
xchg
xchg
xchg
xchg
test
ins
jno
jg
ss
pop
add
inc
pop
push
fs
or
jno
or
(bad)
pop
es
jo
jge
popa
ss
inc
xchg
out
sub
ret
aaa
jge
jle
ss
push
retf
jl
push
push
outs
xor
sub
fdiv
dec
into
jle
das
retf
call
xor
call
test
xchg
jo
dec
pushf
dec
sahf
in
xor
ret
dec
jmp
jg
lahf
xor
pop
xor
push
push
xor
xor
dec
jp
scas
adc
push
mov
iret
push
push
daa
sbb
mov
mov
inc
mov
push
jb
adc
mov
xor
xchg
(bad)
inc
jge
sub
jg
push
pop
jge
or
push
push
push
inc
cmp
push
mov
js
mov
test
jbe
dec
pop
sbb
sub
jno
mov
jg
pop
xor
add
xchg
jo
pop
pop
sub
and
push
push
dec
(bad)
call
push
sbb
mov
test
xlat
xor
or
xor
(bad)
xor
mov
test
mov
sub
xor
adc
inc
jl
js
test
(bad)
cmp
pop
pop
pusha
not
xor
outs
jle
mov
outs
das
aaa
push
pop
data16
fcom
(bad)
jb
adc
pop
inc
scas
add
jno
xchg
dec
jl
sub
(bad)
int3
das
xor
push
jl
pusha
mov
(bad)
push
inc
add
inc
ss
adc
sub
pop
je
dec
aaa
jae
jo
out
add
dec
and
pop
call
dec
cs
enter
or
push
push
pusha
add
ss
iret
gs
lock
mov
push
xor
daa
shl
lahf
fcomp
inc
mov
xor
repnz
push
xor
push
push
bound
out
lods
enter
cmp
push
jno
std
(bad)
jle
pop
outs
ja
inc
jae
xor
jo
push
pop
aaa
outs
outs
pusha
or
push
dec
out
lahf
mov
xor
dec
dec
jae
inc
inc
ins
dec
popa
add
mov
es
jae
dec
push
ins
cld
(bad)
jle
cld
es
ins
jae
jae
dec
pusha
ins
inc
sahf
xor
ins
mov
aas
jg
jae
push
je
cmp
push
es
cld
cld
sahf
push
jae
push
sub
inc
ins
inc
pop
jae
cs
push
mul
push
aad
mov
xor
int3
test
movs
(bad)
xor
xchg
inc
dec
ja
push
or
sbb
fiadd
es
push
inc
ss
jl
lea
dec
push
cs
cmps
push
xchg
push
xor
(bad)
push
jmp
aaa
push
push
push
jne
xchg
in
les
bound
push
mov
ja
test
add
into
data16
jl
not
inc
inc
sub
outs
popa
sti
int
mov
dec
xor
xor
mov
jo
inc
xor
dec
dec
pop
jle
mov
push
mov
ins
inc
pop
push
sbb
dec
mov
ret
push
popa
add
aaa
xor
add
push
xor
scas
imul
sub
jp
mov
sti
add
push
jle
xor
add
xor
cmp
gs
xor
pop
outs
inc
xchg
dec
in
repnz
xor
push
dec
push
stc
push
jbe
xor
pop
push
shr
sub
xor
push
jg
test
mov
lods
je
dec
pusha
pop
push
jg
inc
push
sub
dec
xlat
pop
ins
jg
inc
dec
pop
jae
dec
sbb
ins
push
xor
mov
and
ss
and
or
xor
dec
test
push
loopne
mov
fs
mov
inc
xor
pop
cmp
inc
push
inc
imul
aaa
jo
push
bound
out
dec
fcomp
mov
cmp
push
test
or
es
add
int3
dec
xlat
hlt
pop
ins
out
je
sti
jae
jb
adc
mov
scas
pop
xlat
adc
outs
jbe
cmp
icebp
lods
xchg
sub
adc
pop
adc
lea
dec
aaa
into
inc
push
pusha
fidiv
ins
cmps
inc
mov
in
call
mov
dec
inc
push
neg
popf
jmp
out
jbe
aas
inc
dec
cmp
sbb
call
cmp
push
lods
out
add
idiv
cmp
pop
inc
add
arpl
and
lea
sub
mov
sub
stos
test
pop
aaa
push
xor
stos
aaa
pusha
cmps
outs
fs
out
dec
push
popa
push
add
in
nop
call
jno
gs
mov
jg
inc
mov
lods
pop
out
jne
daa
imul
adc
pop
dec
xadd
mov
jg
lahf
xlat
pop
sub
inc
jg
dec
or
ss
dec
jno
push
jmp
xor
dec
xchg
(bad)
dec
push
dec
addr16
(bad)
pop
fs
fbstp
and
push
inc
dec
int3
jb
cmp
out
addr16
pusha
mov
movs
imul
ja
or
les
push
out
lds
jge
xor
dec
js
xor
mul
inc
inc
pop
inc
jecxz
add
es
xchg
outs
mov
mov
sti
je
xor
inc
pop
pop
cli
add
dec
(bad)
adc
xchg
or
daa
lea
cmc
xlat
dec
into
push
gs
sahf
call
xor
add
xor
jecxz
xchg
and
cmc
push
dec
push
out
push
je
add
aaa
ins
xor
inc
inc
inc
jne
dec
je
rol
push
xor
pop
push
outs
out
ror
mov
mov
push
jl
bound
cmp
push
mov
arpl
xchg
ja
inc
lahf
and
sar
ucomiss
fisubr
out
(bad)
adc
(bad)
pop
aaa
bound
sub
dec
dec
enter
push
xor
cli
inc
test
push
jno
inc
pop
add
aaa
dec
ss
pop
and
cmp
xor
call
dec
les
aaa
ins
dec
or
cmp
or
xchg
push
addr16
bound
aas
daa
lea
aas
outs
dec
imul
xor
or
mov
fidivr
push
in
push
(bad)
aas
push
dec
sub
test
scas
outs
addr16
loopne
xor
loop
mov
dec
inc
dec
mov
inc
into
ja
scas
add
sahf
xor
xor
mov
sbb
mov
imul
ja
xchg
push
cmp
cs
sub
(bad)
inc
pop
cmp
ss
sahf
sub
and
sahf
popa
inc
xlat
xchg
push
inc
arpl
dec
jbe
inc
inc
pusha
test
xor
push
mov
sub
(bad)
pop
ja
shl
pop
inc
pop
outs
inc
mov
mov
imul
push
imul
sbb
neg
aas
stos
or
xchg
inc
xor
add
out
inc
stos
mov
repnz
push
push
into
mov
pusha
mov
inc
loop
fmul
and
dec
popa
fidiv
dec
data16
pop
mov
pop
add
jne
outs
popa
jne
imul
dec
popf
xlat
outs
ss
pop
js
loopne
jbe
popa
pusha
pop
pop
lds
push
data16
cmps
push
gs
or
movs
sub
jno
dec
dec
sub
imul
inc
lahf
outs
sub
dec
add
inc
jae
addr16
mov
imul
push
inc
mov
out
inc
popa
std
dec
fidiv
push
outs
dec
inc
inc
add
(bad)
out
mov
lods
cmp
xor
pop
dec
jp
sbb
lods
shl
sbb
shl
leave
and
ror
fdivr
inc
cwde
push
dec
dec
inc
inc
jle
fadd
push
push
cmps
dec
jl
(bad)
data16
push
rol
push
adc
xchg
xor
mov
cwde
xor
dec
shl
mov
xor
js
dec
shr
int
(bad)
jne
dec
jge
dec
je
xchg
add
ss
inc
inc
mov
mov
scas
dec
gs
cli
loopne
add
ja
dec
pop
xor
jg
lock
mov
dec
addr16
push
inc
call
adc
xchg
ror
inc
addr16
xlat
sahf
sbb
push
stos
sti
cmps
adc
inc
xor
scas
push
sbb
aam
fwait
outs
pop
sub
inc
cmp
push
dec
out
daa
arpl
add
ret
(bad)
add
test
daa
daa
mov
(bad)
xor
adc
add
jle
pop
push
and
dec
dec
outs
and
push
xchg
jne
mov
out
push
inc
cmp
dec
mov
mov
xor
add
mov
dec
inc
out
pop
jo
jbe
dec
pop
dec
push
aas
mov
mov
push
mov
mov
xor
jle
inc
mov
pusha
arpl
es
dec
in
fnstenv
pop
jle
ins
dec
data16
cmp
into
xchg
mov
and
aam
aaa
je
xchg
push
inc
ror
jns
movs
not
cs
mov
dec
sahf
dec
xor
jno
add
dec
dec
inc
push
fistp
rcl
sbb
push
arpl
cmps
inc
int
push
jbe
mov
or
push
dec
pop
mov
popa
jge
inc
mov
inc
adc
nop
loopne
out
adc
into
pop
add
pop
sub
pusha
sbb
test
or
dec
push
push
push
test
add
add
xchg
addr16
inc
div
mul
jmp
mov
adc
cmp
mul
fadd
pop
mov
bound
mov
cmps
push
adc
loope
mov
xor
loopne
movs
sbb
inc
dec
fistp
pop
push
pop
pusha
jle
push
(bad)
jg
pop
push
add
aam
mul
movs
data16
push
add
push
dec
arpl
inc
dec
inc
dec
outs
adc
mov
xchg
jge
push
xor
inc
ins
push
jo
xchg
or
inc
test
ret
or
int3
lahf
dec
inc
ins
daa
dec
cmp
ja
push
aaa
push
push
dec
mov
push
ss
push
pop
iret
dec
dec
mov
(bad)
dec
or
push
xchg
test
pop
inc
mov
test
inc
aaa
push
pop
jns
inc
daa
push
jl
push
loopne
jae
ins
pop
push
sub
push
add
inc
push
dec
jle
and
imul
mov
add
cmp
dec
cmps
adc
pop
(bad)
cmps
xor
pop
adc
push
mov
dec
add
dec
daa
out
push
xchg
or
sub
xchg
ret
jmp
add
dec
(bad)
and
or
add
push
cmps
push
mov
je
add
fld
jle
push
sub
dec
dec
pop
lahf
or
fidivr
sub
outs
jo
xchg
or
push
and
jl
jle
outs
ja
sub
lock
inc
adc
mov
div
nop
or
(bad)
dec
push
and
adc
or
mov
test
les
add
scas
ja
cmp
push
dec
jge
cs
pop
inc
xor
out
mov
mov
pop
out
xor
call
dec
inc
xor
into
jl
cmp
mov
push
jge
mov
out
fidiv
adc
xchg
inc
popa
xor
lahf
xor
xor
mov
inc
pop
ja
ds
jbe
jg
popa
sub
push
jbe
jle
loope
pop
ret
push
dec
aam
inc
jbe
jl
leave
push
test
inc
pop
ja
xor
xchg
ja
popa
mov
les
pop
sahf
xor
mov
jl
dec
aaa
push
pusha
mov
cmp
pop
mov
mov
mov
jg
das
adc
adc
add
push
xor
add
dec
out
ss
call
(bad)
cmps
add
jle
add
loopne
dec
push
das
push
xor
push
inc
pusha
push
inc
dec
cmp
scas
and
xchg
stos
and
xor
jl
lods
adc
push
add
cmps
push
aaa
or
clc
ss
inc
clc
popa
inc
popa
jae
fld
xor
add
idiv
inc
push
sbb
gs
add
test
mov
add
dec
pop
push
jo
adc
pop
adc
aad
inc
push
rcl
stos
test
fiadd
pop
xchg
jnp
and
sbb
dec
push
push
inc
fiadd
jecxz
pop
jg
loop
int3
into
out
(bad)
test
push
pop
ffreep
dec
sub
(bad)
out
popa
push
aaa
test
mov
cmp
scas
test
push
jbe
push
sbb
mov
int
pop
dec
xor
scas
adc
dec
push
ja
and
ret
dec
shr
xor
iret
push
pop
bound
loopne
ss
push
dec
daa
xor
call
not
cmps
pop
inc
ds
mov
sbb
enter
sub
push
dec
out
sub
xchg
(bad)
jg
mov
pop
fiadd
xor
add
dec
cmp
adc
dec
mov
pop
dec
and
jle
dec
sbb
pop
jbe
in
sbb
jo
iret
mov
dec
push
mov
jle
(bad)
(bad)
or
mov
jo
dec
dec
push
inc
inc
push
xchg
and
push
cmps
push
dec
or
imul
push
ret
aaa
push
dec
sahf
bound
icebp
cmp
cmc
aas
jbe
xor
inc
ja
xor
dec
outs
dec
mov
lahf
sub
cmp
aaa
aad
sub
sub
test
or
pop
out
push
pop
push
mov
push
jne
dec
push
je
loopne
adc
pop
jae
sbb
cmp
jmp
jle
cmc
pop
jo
je
pop
xor
jbe
ins
sub
dec
js
mov
push
sbb
pop
dec
xchg
dec
add
gs
jne
pop
pop
mov
jo
ins
xor
jle
push
xor
xor
pop
xor
sbb
int
ror
sub
adc
jle
cs
pop
imul
mov
arpl
xor
(bad)
fsub
jl
push
push
data16
ret
iret
xchg
(bad)
aad
ror
dec
jge
outs
inc
or
test
push
push
call
sub
dec
sbb
das
push
shr
test
dec
iret
jb
sbb
jne
dec
push
je
ss
push
inc
inc
stos
jns
jp
xchg
dec
icebp
mov
xor
jmp
sub
shr
je
sub
test
mov
dec
mov
(bad)
lahf
pop
xor
int3
data16
nop
jo
dec
xor
inc
js
sbb
pop
sahf
dec
pop
cmp
xchg
test
movs
xchg
inc
dec
stos
xor
addr16
sbb
jle
fdiv
cmp
(bad)
je
or
je
je
push
ss
push
xchg
push
dec
jno
les
mov
dec
xor
(bad)
sbb
and
xor
mov
rcl
ret
dec
push
loopne
into
xor
inc
mov
dec
pop
and
xor
nop
mov
popf
ins
loop
dec
or
fisubr
pusha
mov
jae
lds
jb
rcr
and
xor
ins
call
outs
xor
adc
dec
jg
inc
dec
add
aad
loopne
out
pusha
aaa
imul
sbb
xor
dec
aaa
or
cmps
sahf
pop
xor
mov
data16
inc
jo
push
jo
adc
adc
pop
push
gs
push
or
pop
xor
add
adc
mov
dec
dec
arpl
jl
dec
add
push
dec
sar
add
add
push
js
sub
fisubr
push
dec
jl
xlat
mov
pop
mov
push
xchg
sub
sar
mov
out
inc
sbb
int3
add
xor
mov
cmovs
mov
cmps
jge
outs
popa
dec
imul
sbb
or
push
xor
cmp
xor
pusha
jno
movs
fisubr
idiv
add
daa
xor
daa
xor
add
xchg
ror
dec
cmps
imul
das
mov
imul
movs
or
addr16
addr16
xchg
push
repnz
loopne
sub
cmps
xchg
pusha
and
lods
push
aad
pop
inc
mov
adc
pop
popa
push
xor
dec
xor
pop
mov
push
push
mov
mov
loopne
push
jb
mov
popa
xor
jmp
addr16
aas
fst
rol
pop
addr16
pop
inc
jno
ds
mov
mul
adc
ins
scas
mov
cmp
fidiv
add
inc
push
cmps
popa
sahf
idiv
sub
pop
push
pop
(bad)
pop
outs
pop
push
cmp
dec
mov
pop
pop
nop
push
sub
rol
fidiv
outs
inc
cwde
(bad)
pop
ins
or
dec
xor
jle
popa
add
xchg
icebp
push
push
mov
aaa
popa
inc
xor
bound
cmp
push
cmp
shl
mov
aam
xor
jae
aaa
jg
or
test
jg
adc
mov
mov
xlat
sub
repnz
jle
jle
aaa
jo
rcl
pop
inc
jg
add
sar
mov
dec
inc
dec
mov
movs
ds
cmps
push
(bad)
xchg
add
dec
xor
data16
dec
imul
mov
outs
test
jl
xor
outs
jo
cmps
pop
setl
push
push
out
popa
mov
loop
pop
out
dec
sub
push
ss
push
(bad)
ss
push
cmp
jbe
jle
movs
sahf
adc
jle
scas
imul
add
jbe
add
sbb
jne
aaa
in
cmp
or
aas
dec
scas
add
push
aaa
cmp
mov
scas
gs
pop
aas
dec
push
dec
cmc
add
dec
sahf
pop
push
cmp
inc
(bad)
inc
xor
jl
sbb
xor
adc
jmp
pop
xor
add
add
pop
push
ret
dec
hlt
shl
push
stos
nop
ret
inc
addr16
xor
ret
add
or
adc
mov
fiadd
test
sbb
mov
daa
sahf
call
cmps
pop
push
loopne
gs
(bad)
sahf
add
dec
enterw
cs
dec
jae
or
cmps
stos
xchg
lock
(bad)
adc
(bad)
movs
arpl
cmp
jno
out
sub
jae
ins
pop
pop
xor
(bad)
js
push
xor
aaa
inc
dec
jb
les
gs
cmp
inc
jle
jne
mov
popa
push
mov
dec
ss
scas
cmp
mov
pop
or
jmp
mov
adc
test
cmp
out
es
mov
test
dec
pop
(bad)
and
add
jg
sub
xchg
push
loop
inc
xchg
adc
pop
into
inc
jle
mov
add
inc
inc
xor
cmps
push
loopne
xor
or
push
loope
clc
aaa
xchg
push
push
xor
jg
ja
sbb
inc
pop
inc
out
jle
bound
pop
add
xor
xchg
outs
cmp
dec
lock
stos
stos
outs
or
dec
js
dec
es
adc
jle
push
pop
jle
hlt
scas
clc
mov
dec
aaa
imul
ja
inc
push
cs
push
and
in
nop
xor
imul
mov
daa
jg
nop
add
sbb
cmp
ja
cwde
inc
inc
dec
xor
cmp
push
test
arpl
sub
mul
xor
ins
test
xor
ds
pusha
(bad)
pop
mov
ins
pop
ins
jae
ins
push
ins
inc
push
push
retf
or
inc
outs
xor
adc
mov
lods
les
rol
pop
sub
cmp
dec
inc
daa
pop
or
test
out
xor
ja
push
mov
xor
cmps
pop
jg
das
outs
aad
ds
jbe
punpckhdq
mov
cmps
movs
and
aas
jle
imul
jle
dec
dec
dec
popa
and
adc
adc
push
xlat
push
fiadd
(bad)
popa
verw
je
test
ret
jmp
scas
inc
xor
gs
push
ds
outs
add
es
dec
mov
pop
lock
dec
test
xor
pop
xchg
jle
test
jb
ja
enter
sahf
jle
jle
dec
sub
xlat
jmp
(bad)
call
inc
dec
or
pop
push
gs
add
xchg
(bad)
xchg
popa
jle
ds
hlt
xchg
daa
jae
push
cmps
sbb
mov
cmp
dec
sar
dec
xor
push
dec
add
pop
jno
in
push
jne
mov
outs
xor
jno
dec
pop
dec
push
out
dec
dec
sar
or
rol
xor
inc
push
inc
pop
inc
fadd
xchg
addr16
jo
imul
pop
and
imul
add
ss
pop
ss
push
dec
and
out
xor
gs
adc
gs
pop
shl
xor
push
pop
lock
enter
push
inc
and
dec
xchg
iret
ret
inc
dec
xor
outs
dec
ins
push
xor
in
mov
push
xor
or
sub
add
pop
fadd
jo
inc
jae
jg
dec
scas
sar
not
push
jge
sub
pop
cwde
cmp
mov
jbe
dec
bound
retf
inc
daa
xor
jl
ret
mov
mov
dec
movs
cmps
dec
inc
pop
xor
mov
lods
dec
iret
call
addr16
sahf
dec
xchg
push
cmps
es
dec
cmp
cmps
addr16
push
imul
pop
imul
jg
retfw
repz
outs
push
xchg
out
jbe
jno
imul
inc
popa
push
dec
inc
out
mov
clc
fist
inc
pop
push
aaa
mov
jle
push
push
js
cmc
xlat
xor
dec
iret
fdivr
cmp
cs
xor
push
dec
pop
dec
adc
inc
xchg
xor
add
push
and
xchg
and
jg
push
xor
push
dec
jle
dec
push
sahf
out
sahf
jno
jae
jge
add
dec
jne
pop
inc
shl
enter
mov
inc
ss
push
add
hlt
dec
cmps
fdivr
pop
xor
popa
mov
stos
pusha
add
mov
jno
inc
xchg
xlat
inc
outs
ja
jae
fs
xchg
jge
pop
dec
pop
push
jmp
xor
ins
jae
nop
xchg
inc
xor
push
sbb
fs
cmp
inc
pop
popf
inc
inc
inc
inc
out
ins
mov
pop
pop
push
dec
addr16
push
pop
cli
jo
dec
popa
(bad)
outs
push
cmp
sub
scas
dec
dec
imul
add
add
outs
arpl
push
mov
loopne
ds
xor
xchg
push
xchg
test
mov
mov
push
fimul
daa
data16
les
imul
addr16
xchg
jbe
test
adc
popa
cs
wbinvd
pop
hlt
mov
sahf
icebp
mov
addr16
add
pop
mov
ret
inc
jbe
scas
push
or
push
test
xchg
pop
mov
ss
dec
xor
sub
push
cmp
pop
inc
inc
inc
call
jbe
ret
(bad)
push
pop
dec
jno
inc
jle
pop
pop
xchg
push
div
test
outs
js
pop
pop
sub
jbe
gs
outs
push
jle
outs
sbb
jle
imul
out
jae
out
jno
xor
sub
imul
pop
add
pop
push
mov
jno
out
mov
inc
out
xlat
inc
mov
dec
adc
rcl
xchg
dec
popa
inc
scas
dec
stos
mov
sub
push
jo
add
and
lock
into
push
push
jmp
sbb
push
cmps
xchg
and
lahf
dec
dec
aaa
outs
push
shl
test
add
inc
or
xchg
das
cld
lahf
adc
imul
test
mov
push
dec
push
xchg
sbb
bound
arpl
inc
xor
add
push
xchg
(bad)
xor
push
sub
iret
jg
xchg
cmps
test
outs
xchg
add
sbb
loopne
lock
ins
out
pop
adc
adc
cs
pop
cmp
out
(bad)
pop
pop
test
push
cmps
xchg
push
push
lods
(bad)
js
movs
mov
aaa
jle
mov
inc
(bad)
into
dec
dec
ss
adc
outs
inc
shl
inc
jge
aaa
jecxz
add
dec
inc
ret
pop
add
imul
xchg
pop
push
push
dec
xor
retf
and
cmp
cmps
adc
mov
jne
jbe
pop
sbb
lahf
ds
push
aaa
jae
jb
push
ins
cmp
adc
cmps
ficomp
setp
push
xchg
addr16
arpl
nop
arpl
sbb
sbb
js
add
push
cmps
push
and
sub
dec
aaa
ins
data16
add
pop
mov
das
imul
lods
xor
dec
dec
jne
aaa
outs
push
pop
sbb
add
inc
sbb
add
or
sub
dec
adc
push
es
aad
push
cmps
push
push
adc
inc
and
inc
inc
lock
cmp
jo
lahf
xor
in
mov
pusha
and
jmp
dec
sub
dec
jge
data16
and
and
dec
inc
push
inc
dec
cs
(bad)
ss
jo
pop
ret
sbb
cdq
rol
jle
(bad)
dec
(bad)
mov
mov
cmp
xor
sbb
pop
adc
add
and
xlat
mov
loope
and
jle
xchg
mov
push
pop
or
jg
push
test
into
jg
sub
movs
dec
jb
jbe
pop
or
iret
pop
test
inc
jg
push
adc
jg
mov
or
aas
mov
jne
outs
pop
inc
mov
iret
pop
xchg
jl
jo
xchg
inc
inc
pop
push
int3
ret
ds
jo
movs
ja
jg
push
and
jmp
inc
xor
fist
push
pop
mov
out
std
and
pusha
push
test
aaa
jge
shl
das
out
pop
inc
jae
dec
dec
in
pop
push
sahf
jle
inc
ja
push
retf
aaa
(bad)
loopne
xchg
xor
pop
pusha
arpl
sub
cmps
xchg
mov
mov
cmps
jno
inc
push
stos
xor
push
inc
mov
push
aam
ja
stos
test
inc
cs
xchg
ss
lahf
xchg
cs
jge
dec
dec
popa
lds
out
dec
jge
mov
ins
aaa
je
push
loope
loopne
mov
(bad)
sub
jno
xor
loop
jle
xlat
popa
and
mov
pop
inc
fbstp
sub
addr16
imul
sub
aaa
clc
push
dec
ds
push
hlt
(bad)
fmul
xor
jle
or
mov
push
cs
sbb
test
push
xchg
push
push
je
cdq
push
push
ret
inc
inc
dec
or
imul
or
xor
jne
jne
outs
shl
push
sub
(bad)
aad
cmps
jle
push
outs
imul
cli
adc
mov
or
pop
(bad)
dec
clc
add
push
sahf
xor
(bad)
push
xchg
ins
mov
push
dec
pop
pop
push
sbb
adc
aaa
push
test
pop
pop
push
dec
je
ror
(bad)
out
sub
mov
jae
test
push
mov
sub
xor
inc
fs
arpl
mov
das
movs
inc
inc
push
push
jmp
mov
xor
ins
aam
xchg
pop
test
dec
les
adc
scas
xchg
add
mov
xchg
lock
dec
xor
add
push
inc
movs
call
mov
inc
xchg
jno
aaa
inc
inc
sti
mov
dec
add
or
scas
push
xchg
cmc
push
inc
fcomp
push
pop
cdq
or
gs
mov
dec
inc
pusha
scas
hlt
pop
add
add
push
aas
rcl
sub
dec
xor
dec
dec
test
sub
pop
xor
shr
inc
jbe
nop
bound
loopne
cmp
push
mov
lock
inc
jnp
inc
mov
push
call
xor
mov
aad
outs
xor
inc
dec
adc
pop
push
push
div
xchg
push
pop
xor
jbe
sahf
and
or
sahf
push
adc
mov
es
or
push
out
aaa
pop
push
inc
enter
jo
call
pop
add
inc
adc
add
cs
push
mov
push
xor
pop
push
cmp
push
push
dec
enter
push
inc
adc
mov
dec
cmps
and
push
xchg
and
xchg
push
jbe
cmp
data16
gs
loope
push
pop
xchg
mov
sbb
(bad)
dec
xchg
xchg
test
pop
xor
or
popa
ja
add
stos
pop
push
dec
xlat
(bad)
push
sub
push
pop
adc
mov
cmp
les
push
inc
outs
sub
push
into
bound
jle
(bad)
add
ja
shl
addr16
inc
pop
adc
rol
inc
pop
cmp
xor
je
inc
popa
hlt
dec
aas
aaa
add
sbb
call
mov
imul
jmp
sub
jbe
das
dec
scas
add
bound
ret
or
push
pop
xor
add
mov
dec
daa
loopne
add
rcl
bound
inc
xlat
inc
(bad)
xor
push
push
je
outs
push
(bad)
div
dec
test
jae
add
in
cmp
inc
into
push
sahf
inc
jl
add
inc
cmp
pop
sub
outs
add
dec
addr16
inc
sub
imul
add
adc
pop
(bad)
sbb
push
mov
inc
or
aam
push
push
push
xor
add
out
ret
xor
(bad)
cmp
and
ins
clc
sub
push
aas
dec
xor
inc
loopne
cmps
push
ffreep
pop
test
out
pop
ror
xchg
xchg
(bad)
push
outs
cmp
mov
iret
mov
and
xchg
scas
test
adc
shl
(bad)
inc
inc
dec
xchg
sbb
inc
xchg
push
daa
or
sub
(bad)
push
mov
sbb
es
scas
xor
mov
imul
push
xor
or
sahf
dec
pusha
mov
sub
mov
(bad)
and
and
dec
test
inc
mov
push
cmps
xchg
sub
push
arpl
add
xchg
inc
push
xor
jmp
dec
inc
mov
sbb
into
jb
or
dec
lods
cs
inc
ss
inc
movs
jecxz
push
adc
inc
push
mov
ss
aas
xchg
cmp
push
jno
inc
bound
popa
pop
dec
mov
mov
mov
dec
jle
cmps
shr
push
dec
scas
jle
cmp
(bad)
pop
dec
inc
jl
jle
mov
popa
add
inc
inc
inc
nop
jne
xor
dec
addr16
pop
scas
jle
cmp
pop
inc
ss
adc
xlat
push
outs
push
push
xor
jbe
ins
call
jle
adc
xor
xor
and
rcr
pop
push
or
ds
jae
jne
mov
mov
inc
inc
xor
inc
xchg
push
dec
and
lock
cmp
add
mov
mov
or
inc
call
inc
ja
pop
shl
es
cwde
dec
gs
inc
popa
in
jbe
xchg
xor
arpl
test
xor
sub
push
or
add
les
(bad)
push
(bad)
into
iret
add
fcmovnb
xor
push
rol
xor
sbb
fild
pop
push
dec
mov
xchg
xor
out
jae
cmps
outs
pmaxub
dec
imul
fisubr
jo
pop
xor
mov
sub
jbe
add
pusha
jl
sbb
or
push
(bad)
pop
dec
xchg
add
(bad)
data16
adc
push
push
mov
inc
jg
add
push
lock
push
cs
cmp
mov
xchg
jno
inc
jle
test
jle
nop
inc
ins
inc
push
sbb
push
xor
jmp
outs
divps
(bad)
dec
xor
and
xchg
push
inc
xor
lsl
movhps
lahf
stos
sub
je
sbb
push
out
inc
adc
ds
add
jle
push
imul
pusha
adc
push
pop
xchg
push
fild
outs
jne
xchg
loope
dec
push
jae
mov
xlat
iret
aaa
push
outs
add
push
jb
push
jno
jne
add
int
dec
xlat
sahf
es
stos
and
inc
jle
aaa
mov
mov
cs
imul
dec
jne
pop
fldenv
dec
imul
popa
and
jle
call
push
xchg
mov
imul
inc
mov
dec
ins
mov
xor
(bad)
cmp
(bad)
ret
inc
xor
aam
rol
push
inc
jbe
daa
add
(bad)
push
dec
push
outs
lahf
cmps
add
aaa
pcmpgtw
sub
push
retf
xchg
in
dec
dec
dec
xchg
dec
adc
sub
push
pop
push
mov
dec
dec
pop
test
scas
addr16
cmp
lods
sbb
jae
pcmpeqd
inc
pop
push
out
xor
jae
(bad)
push
arpl
pop
jg
inc
xor
push
or
push
dec
outs
addr16
(bad)
aas
inc
dec
xor
(bad)
xor
jge
or
xchg
push
sbb
or
test
es
add
xchg
mov
add
cmp
gs
push
sub
xchg
data16
pushf
mov
out
pop
dec
inc
xor
push
mov
pusha
xor
dec
sahf
push
xor
mov
mov
das
test
push
push
jbe
xchg
push
inc
push
ss
xor
fnstenv
pop
inc
dec
sub
cmp
cmp
push
ins
pop
pop
inc
cld
sahf
aas
mov
xor
pusha
jl
dec
xor
test
inc
jbe
or
inc
xor
sbb
jle
cmp
cmp
jl
dec
arpl
out
dec
cs
dec
push
xchg
jae
retf
xor
out
xchg
retf
pop
cs
cmp
jae
xor
into
ss
pop
xor
xchg
dec
inc
jno
je
iret
ficomp
mov
pcmpgtw
popa
ja
pop
push
ins
xlat
inc
ins
pop
inc
xor
xchg
dec
inc
pushf
mov
mov
pop
je
inc
in
aaa
inc
mov
add
into
push
push
dec
cs
in
inc
jge
inc
xlat
push
sahf
inc
jno
push
xor
jg
(bad)
push
inc
fiadd
dec
sub
clc
cmps
mov
popf
in
push
jne
aaa
pop
inc
lock
call
inc
je
push
ss
dec
mov
xor
mov
aam
gs
outs
int3
imul
xor
retf
cmp
ss
sub
xchg
mov
mul
inc
jne
push
jge
xchg
dec
ins
fwait
mov
inc
pop
mov
xor
mov
inc
mov
inc
cmps
ds
xchg
pop
imul
inc
mov
ss
push
test
in
cmp
pop
mov
mov
ret
aaa
ja
imul
jo
(bad)
inc
mov
cmps
or
inc
jge
jle
xchg
(bad)
cmps
clc
adc
aaa
dec
jp
inc
outs
je
ss
cmp
sahf
inc
iret
sar
push
aaa
fisub
push
add
inc
or
or
mov
ss
(bad)
jle
push
cs
pop
xor
push
xor
ret
jo
or
lahf
dec
imul
sahf
push
push
mov
push
cs
ss
xchg
push
(bad)
xor
pop
mov
pop
ja
push
iret
jge
pop
xor
dec
push
out
imul
(bad)
jle
clc
xchg
out
jno
inc
ja
pop
xor
dec
push
or
push
movs
push
jo
jno
rcr
jge
fmulp
push
loop
and
stos
push
pop
retf
shl
dec
mov
es
inc
xchg
mov
fistp
pop
xchg
add
out
xchg
push
ss
dec
idiv
xor
dec
push
jle
mov
ss
cmova
lods
add
cmps
inc
or
jo
test
pop
pop
push
sbb
je
ins
push
xor
imul
cmp
pop
jle
jno
pushf
out
cmp
ja
daa
jle
repz
(bad)
vmovntpd
inc
jb
popa
dec
pop
bound
imul
mov
(bad)
addr16
ja
pop
pop
sbb
pop
jl
or
push
or
xor
pushf
(bad)
and
scas
retf
push
or
ss
adc
mov
daa
pop
pop
dec
dec
data16
cmps
jne
xchg
popa
repnz
mov
xchg
cmp
jae
xor
inc
imul
out
dec
cwde
jbe
inc
push
(bad)
ins
push
pop
es
ficomp
shl
jo
mov
test
push
lahf
dec
xor
inc
ss
mov
push
lahf
es
xor
mov
xor
adc
jg
pop
jl
pop
push
dec
sbb
pop
or
ins
jo
cmp
mov
mov
xor
add
dec
jno
fcmovnbe
repnz
jge
pop
imul
cmp
cmps
push
imul
cmp
and
das
inc
cmps
out
push
or
push
sub
pop
sahf
pop
jno
bound
addr16
dec
jecxz
cmp
idiv
mov
ds
jno
pop
sub
push
in
jb
dec
dec
cmp
inc
cmp
cmps
dec
add
inc
jbe
sbb
imul
jecxz
pusha
in
dec
ss
ins
mov
aas
dec
popa
push
xchg
sbb
push
es
rol
xor
sub
je
cmp
ja
dec
sahf
mov
aaa
dec
dec
ss
pop
scas
clc
in
dec
push
jbe
out
ret
shl
inc
rol
xchg
jb
jb
ja
pushf
fimul
push
pop
add
xlat
dec
inc
arpl
cmp
add
addr16
mov
jle
inc
out
pop
ret
mov
loopne
cmps
scas
push
jno
cmp
xchg
(bad)
dec
dec
xor
jle
scas
aas
iret
ret
push
inc
imul
pop
pop
cmp
cld
pop
xor
ins
popa
outs
jle
or
fild
inc
popa
pusha
popa
push
ins
addr16
adc
iret
sub
inc
dec
pop
outs
rol
cmp
xchg
je
out
(bad)
pop
push
xor
xchg
js
ins
xor
inc
out
sbb
or
mov
xor
dec
outs
push
cmc
or
data16
xor
outs
(bad)
push
sbb
push
inc
cmp
cmps
aaa
pop
push
inc
push
push
dec
push
ins
push
jmp
push
fidiv
loope
push
movs
ss
pop
xor
pusha
push
sbb
hlt
pop
pusha
out
daa
xchg
mov
mul
mov
sub
aaa
sub
es
scas
div
lock
pop
gs
out
dec
pusha
cmp
mov
shl
inc
(bad)
cmps
jle
dec
and
rol
scas
aaa
jo
push
clc
inc
push
ss
sub
imul
inc
neg
add
adc
jo
cmps
or
push
push
ja
loopne
bound
pop
outs
jg
stos
sbb
cmp
scas
das
sbb
ja
jbe
and
sub
aad
jb
mov
mov
mov
out
mov
or
dec
dec
xor
dec
repz
push
inc
jge
push
push
or
push
imul
data16
cmp
rol
dec
and
rcl
dec
xor
fadd
aas
push
cs
stc
dec
jne
sub
pop
jle
and
mov
ficom
push
push
xor
scas
sub
sbb
inc
jo
push
scas
push
popa
dec
and
adc
ins
cmps
imul
push
cmp
cld
rol
pop
ss
data16
xor
cdq
clc
inc
je
adc
imul
ja
xor
imul
dec
lock
mov
inc
imul
loope
int3
push
shr
jne
push
arpl
jo
sub
or
xor
imul
int
data16
mov
dec
pop
outs
push
xor
push
dec
test
xor
mov
dec
xor
pop
pop
gs
and
dec
scas
add
pusha
outs
mov
(bad)
xlat
xchg
or
push
inc
cmp
ins
or
into
dec
jno
ror
jl
cmps
push
jge
movs
push
or
inc
pop
je
ss
loopne
ss
icebp
ror
dec
inc
or
pusha
adc
dec
add
mov
dec
outs
pop
dec
dec
dec
mov
push
loope
test
mov
and
adc
outs
jg
gs
sub
pop
pusha
push
push
inc
cmp
mov
cs
outs
or
dec
pop
dec
adc
call
mov
add
mov
pshufw
hlt
sahf
dec
push
into
inc
or
int
cmp
das
movs
pop
shr
aaa
cs
xor
popa
ins
popf
add
test
sbb
mov
bound
push
push
xchg
repnz
jle
call
jb
xchg
inc
xor
sub
(bad)
cmp
dec
pop
inc
cmp
cmc
dec
rol
jnp
test
push
into
pop
inc
fsubr
ins
dec
inc
push
out
push
jo
jbe
xor
(bad)
xchg
inc
outs
sub
ret
jp
movs
or
rcl
dec
jg
les
pop
cld
test
and
inc
sub
in
imul
xor
mov
outs
mov
(bad)
push
test
mov
and
add
xchg
push
push
aaa
iret
inc
push
ds
rol
pushf
aas
pop
pop
dec
jae
dec
jne
mov
ins
dec
dec
xor
sbb
cmp
push
cwde
add
add
sahf
inc
jo
ins
or
aaa
push
pop
mov
popa
push
or
out
push
push
aaa
ret
mov
pop
add
ins
push
dec
xlat
cs
ss
mov
dec
cmp
xor
das
popa
mov
nop
js
sbb
push
cs
xor
push
cmp
inc
xor
xor
pop
push
scas
lahf
inc
dec
repnz
cmp
cmp
ins
push
dec
sahf
cmps
dec
inc
dec
inc
xor
cdq
shl
add
add
jbe
aaa
int
inc
cmp
push
jbe
test
outs
popa
loopne
jno
scas
gs
mov
xchg
loop
cmp
outs
mov
inc
xor
lahf
cmp
dec
pop
test
std
movs
sahf
loop
inc
das
ins
je
sub
dec
xor
hlt
inc
arpl
out
push
inc
repnz
(bad)
imul
scas
mov
test
push
push
mov
ss
mov
fmul
(bad)
(bad)
jbe
push
dec
push
jle
jne
add
push
retf
es
push
xor
push
add
adc
es
push
aas
es
sti
adc
inc
or
push
clc
mov
inc
gs
lahf
cs
in
mov
sub
jl
call
inc
mov
mov
das
push
cld
ret
cmp
(bad)
jne
pop
sbb
ss
xchg
inc
popa
sub
add
add
inc
pop
inc
fdivr
push
mov
or
fist
dec
test
ds
mov
jge
(bad)
lock
jno
xor
cmp
repnz
or
pusha
inc
sbb
mov
jne
push
add
push
inc
popa
test
pop
push
sbb
inc
inc
imul
je
lds
jle
add
push
lods
fisubr
outs
pop
push
lahf
pop
pop
ss
or
popa
dec
ss
dec
and
add
mov
lods
sub
jle
xchg
push
lahf
ss
bound
movs
(bad)
push
push
inc
jle
imul
jno
xor
push
je
cs
pop
scas
dec
push
push
dec
into
dec
mov
rcl
addr16
mov
pop
dec
(bad)
cmc
or
sub
pop
sahf
xor
xchg
sbb
xlat
ja
mov
out
xor
ror
jle
add
pop
rcl
das
dec
scas
popa
push
mov
jno
xor
movs
iret
jg
data16
idiv
xor
push
jle
dec
or
ss
pop
adc
cmps
push
cs
sub
out
ror
cli
es
xchg
(bad)
je
inc
adc
inc
cmp
xor
mov
jae
jg
add
sahf
jne
test
rol
mov
cmp
jo
cmps
dec
nop
sbb
xchg
inc
leave
cmp
or
fs
or
shr
add
sub
pop
xor
xor
adc
jl
inc
(bad)
aam
and
es
and
fisubr
jo
push
dec
inc
or
mov
data16
cmp
jg
outs
dec
xchg
jne
cs
adc
imul
aad
inc
call
not
dec
fbstp
add
pop
popf
sbb
push
inc
in
loopne
iret
scas
or
push
pop
inc
dec
popa
imul
push
xor
mov
inc
dec
fadd
lods
xor
inc
xor
outs
jne
es
push
push
imul
nop
inc
jb
das
inc
imul
outs
xor
aad
inc
push
aaa
push
pop
or
pop
fiadd
inc
dec
es
jb
sbb
push
jne
pop
push
inc
pop
pop
gs
dec
push
ss
stos
adc
ret
mov
aaa
daa
mov
push
xor
inc
ja
ror
sub
xor
inc
bound
xchg
mov
pop
pop
call
mov
sub
imul
push
(bad)
push
(bad)
mov
int3
push
mov
push
inc
sub
mov
test
aaa
jo
jge
xor
aam
mov
jbe
cmp
out
ja
add
outs
inc
outs
inc
lds
jle
pop
inc
xchg
outs
inc
push
add
pop
mov
cmps
aaa
add
lock
push
pop
aad
xor
pop
pop
mov
xor
and
adc
fbld
add
sbb
out
dec
mov
push
push
pushw
popf
in
push
call
cs
push
(bad)
dec
out
push
push
aaa
inc
xchg
pushf
push
and
adc
cmp
xchg
les
push
punpckhdq
cmp
add
cmps
aaa
ss
inc
and
imul
xor
xchg
push
sub
rcl
adc
dec
or
inc
mov
cmp
dec
addr16
pop
das
pop
je
stos
mov
mov
aaa
xor
sub
dec
cli
push
ret
ja
mov
sub
pop
jg
inc
sbb
mov
jmp
mov
push
or
push
aaa
jbe
and
dec
je
cs
dec
inc
sbb
xor
addr16
pop
cmps
daa
ja
into
aam
inc
push
cmp
and
fs
push
cmp
push
xor
jle
or
fimul
push
(bad)
dec
out
das
fsubr
push
aaa
and
mov
call
mov
dec
cmp
mov
xlat
dec
pop
add
arpl
push
mov
push
add
inc
jle
rol
inc
or
ret
jbe
test
scas
out
out
sbb
sub
cs
test
dec
xor
and
adc
or
lock
mov
ret
mov
xlat
inc
xlat
dec
xchg
dec
les
test
xchg
sbb
inc
dec
(bad)
jle
ret
popa
das
cmp
sub
xchg
xor
jo
jno
mov
or
test
mov
inc
add
mov
pop
daa
push
mov
inc
pop
inc
add
xor
xor
cmp
xlat
sub
dec
fisub
mov
or
cs
inc
jle
add
push
push
stos
inc
fs
xchg
push
dec
xor
adc
dec
add
out
jle
push
xor
test
lds
(bad)
lock
scas
es
xor
outs
(bad)
inc
mov
cmps
ins
inc
inc
pop
stos
or
xor
in
xor
inc
push
ja
xor
and
dec
adc
pusha
inc
xor
arpl
data16
ja
xlat
push
add
dec
mov
xor
or
mov
inc
pop
xchg
das
pop
or
xchg
out
jbe
xchg
cmp
inc
ss
mov
push
je
jne
dec
shr
jl
xor
pop
mov
popf
pushf
daa
inc
jg
adc
pop
or
cmp
mov
sahf
inc
push
(bad)
imul
jl
ret
inc
mov
and
dec
mov
cmp
scas
push
dec
xlat
not
popa
push
mov
inc
(bad)
dec
push
outs
call
jb
sub
shl
push
xor
es
inc
push
outs
mov
out
adc
sbb
push
adc
(bad)
fcmovbe
sub
xor
ret
xor
call
fild
bound
xor
ss
or
push
inc
pop
ja
into
xchg
push
cmps
and
cmp
adc
inc
ss
daa
faddp
add
pop
push
ins
xor
mov
sbb
mov
cmp
jle
jno
or
or
xchg
jno
push
not
add
pop
jbe
arpl
dec
fadd
cmp
add
xchg
test
inc
xor
ret
int3
ins
push
xor
test
jo
(bad)
mov
leave
js
xor
rcr
enter
push
add
xor
gs
xlat
xchg
pusha
sub
repnz
add
push
pop
push
test
into
mov
push
dec
mov
addr16
(bad)
mov
mov
mov
ds
sar
inc
outs
loop
inc
movs
(bad)
outs
inc
gs
adc
(bad)
xor
jae
lods
mov
dec
inc
dec
push
pusha
mov
sub
lds
dec
cmps
lea
pop
inc
push
push
arpl
inc
scas
movs
xchg
je
pop
dec
neg
xor
push
daa
inc
add
imul
pop
cwde
jecxz
test
push
cld
jne
sbb
ins
aas
jg
dec
mov
loop
inc
(bad)
aaa
push
adc
cmp
dec
dec
lods
movs
add
pop
into
and
xor
(bad)
call
adc
dec
pusha
addr16
jmp
sub
push
and
push
add
dec
cmc
in
outs
push
jno
inc
or
aaa
or
dec
push
pop
inc
sbb
jg
(bad)
popa
aaa
inc
pop
jae
ja
test
test
cmps
clc
xor
ss
sub
inc
inc
dec
or
xchg
idiv
and
aam
add
adc
cmovns
dec
outs
add
push
outs
dec
sbb
dec
dec
jl
mov
jno
scas
add
or
mov
add
ret
pop
imul
add
jle
dec
outs
out
stos
jmp
and
or
push
adc
jne
data16
xchg
push
mov
imul
inc
push
jmp
rol
xor
lock
ss
mov
(bad)
jp
cmp
jl
xchg
inc
loope
sar
fidiv
ja
mov
and
adc
out
mov
push
hlt
(bad)
xchg
jb
dec
outs
out
push
add
push
cs
jae
xor
data16
jne
push
push
xchg
jle
xor
pop
jg
test
data16
jno
or
xor
pop
cmp
fcomip
ja
sbb
scas
pop
push
nop
pusha
sub
movs
or
aaa
xlat
or
shl
clc
add
pop
inc
pop
xchg
imul
(bad)
or
arpl
data16
out
sar
inc
aaa
jle
push
fmul
add
xor
mov
push
jae
jg
outs
lahf
jle
pop
pop
call
jae
or
push
xchg
mov
fisub
out
in
in
cmp
jle
or
ds
pop
add
add
push
jbe
ins
js
les
aaa
addr16
pop
das
mov
sub
inc
jb
jo
inc
add
aaa
outs
dec
aaa
je
pop
cmp
(bad)
jne
(bad)
jno
cmp
mov
jbe
pop
push
sub
jecxz
mov
xor
pusha
push
mov
xor
jge
pop
popa
jbe
(bad)
nop
sbb
into
(bad)
push
lods
shr
push
jno
inc
xor
jbe
inc
add
push
mov
cs
outs
loop
and
push
pop
sbb
shl
inc
ss
cs
je
push
mov
and
jle
dec
sub
inc
jb
push
jbe
inc
xlat
sbb
je
jg
xchg
xchg
push
pusha
addr16
push
xchg
jp
inc
pop
push
loope
jg
cmps
dec
popa
cmp
loopne
mov
addr16
add
push
iret
cmp
jmp
fiadd
test
icebp
pop
push
xor
add
into
jbe
inc
mov
pushw
jno
fst
ins
inc
ficom
pop
lods
and
xchg
xor
mov
jle
dec
xor
jb
mov
ds
das
or
data16
push
hlt
pusha
(bad)
ss
cmp
xchg
ins
xor
adc
inc
out
je
add
pop
(bad)
popa
dec
jns
sar
push
ins
sti
inc
inc
outs
push
dec
xchg
aaa
pop
jne
mov
ja
xor
cmp
mov
pop
push
xchg
pop
ret
inc
push
xor
add
scas
(bad)
popa
cmps
mov
push
xchg
xchg
je
shl
cmps
xchg
xor
xor
push
xchg
xchg
adc
fidivr
mov
out
xchg
out
ins
xlat
push
outs
cmp
jbe
daa
xor
cwde
fs
(bad)
cmps
mov
push
push
sbb
outs
jmp
add
fadd
dec
pushw
pop
sub
mov
cmps
xor
inc
cmp
dec
cmps
js
scas
inc
dec
xor
gs
xchg
aas
mov
add
in
es
jo
xchg
sub
dec
div
ss
xor
test
xor
push
int
pop
cmp
scas
pop
push
add
mov
push
push
dec
jmp
push
mov
jne
cmc
jo
jmp
jl
sahf
cs
leave
push
mov
pop
inc
jge
data16
xchg
mov
dec
call
push
outs
arpl
sub
pop
cwde
adc
and
arpl
pop
dec
pushf
out
and
leave
xor
in
(bad)
fimul
pop
dec
cmp
iret
inc
xor
iret
dec
test
push
inc
add
cmps
mov
mov
mov
dec
cmp
ins
aaa
ss
push
adc
pop
adc
push
push
popa
daa
fst
push
pop
inc
jle
sub
mov
ja
xchg
ins
das
(bad)
(bad)
loopne
jmp
jae
out
ret
adc
cli
and
xchg
push
jge
mov
push
imul
push
fist
inc
jecxz
(bad)
xchg
(bad)
and
ss
jle
cmp
xchg
pop
aas
xchg
cli
add
push
ret
jecxz
out
dec
fild
mov
dec
sbb
or
xchg
rcl
mov
dec
jmp
aaa
inc
aaa
inc
es
icebp
sti
fstp
pop
daa
jae
jle
call
inc
xchg
jl
add
sub
push
stos
dec
push
cmp
xor
(bad)
sahf
(bad)
push
aaa
pop
(bad)
push
push
ss
xor
add
dec
jle
jp
sbb
test
xor
gs
sub
daa
mov
es
data16
lea
mov
inc
inc
jno
jne
adc
int
push
cmp
aaa
inc
jl
push
sub
inc
xor
fild
inc
outs
cmovg
or
push
pop
add
scas
push
bound
fild
lds
mov
stos
sbb
push
mov
dec
dec
sahf
idiv
aas
scas
xchg
push
arpl
outs
mov
movs
or
cmps
popa
push
push
jle
outs
imul
mov
inc
in
out
add
or
imul
adc
pop
(bad)
jo
or
sub
xor
dec
jmp
push
fst
jg
inc
jno
dec
dec
mov
push
sbb
aas
inc
xor
add
jnp
aas
cmp
xchg
mov
ret
jae
xlat
xor
mov
loop
retf
and
inc
mov
cmp
cmps
into
push
loopne
xchg
pop
outs
pop
rcr
call
cs
jmp
dec
xchg
movs
add
dec
outs
push
dec
xor
pop
pop
ss
or
jb
in
xor
xor
push
inc
inc
pop
pusha
leave
fwait
push
call
aaa
inc
cld
hlt
clc
stos
xchg
inc
xor
dec
(bad)
(bad)
imul
(bad)
fistp
pop
ins
cld
push
dec
mov
dec
push
movs
call
jne
cdq
push
cmps
pop
push
inc
(bad)
xor
es
pop
inc
mov
out
ins
ds
cmp
mov
push
test
ins
mov
xor
xor
push
js
cmp
push
iret
(bad)
add
inc
or
int
and
ss
cmp
push
aaa
and
xlat
inc
ins
cmp
mov
add
idiv
xchg
aaa
mov
hlt
popa
dec
xchg
es
fild
scas
mov
mov
int3
mov
xor
xor
rcr
pop
es
push
xchg
xor
or
ins
sahf
ds
jo
add
dec
imul
fidiv
aaa
jl
into
jecxz
push
push
xchg
daa
inc
inc
xor
bound
xor
push
mov
ret
push
iret
fild
dec
xor
cmp
cmp
repz
dec
dec
push
push
repz
repz
ins
imul
jge
xor
push
push
addr16
ins
je
push
dec
(bad)
push
xchg
cs
sbb
xchg
and
dec
ss
pop
adc
push
sub
rol
xlat
jne
push
movs
push
push
dec
daa
cmp
dec
mov
adc
inc
clts
inc
push
xchg
push
fiadd
dec
leave
mov
fs
je
sbb
inc
push
adc
add
test
adc
out
xchg
add
outs
dec
pop
xor
ss
stos
je
push
push
retf
mov
push
pop
jno
jg
mov
pop
pusha
mov
xor
add
pusha
lahf
jo
and
out
lock
into
xchg
pop
inc
sbb
mov
or
enter
inc
outs
pop
jbe
adc
das
adc
add
dec
jg
xor
sbb
xchg
or
cmp
or
pop
cmp
cmp
addr16
push
test
sub
xchg
xchg
dec
fild
push
or
ds
push
xchg
inc
xor
jle
xor
outs
or
dec
daa
dec
pop
add
jo
pop
shl
ins
jl
ds
xor
addr16
dec
lahf
push
pusha
dec
arpl
inc
xchg
dec
dec
mov
inc
inc
mov
ret
dec
dec
scas
call
dec
inc
ins
pop
pop
sar
je
push
aaa
push
inc
imul
jle
aaa
sbb
cmps
and
or
scas
ja
fadd
dec
test
aaa
(bad)
bound
lock
dec
arpl
xor
aaa
pop
mov
popa
aam
xor
cdq
into
mov
fs
cs
dec
mov
test
mov
popa
mov
dec
push
xor
inc
or
push
cli
cmp
gs
push
and
js
inc
(bad)
gs
or
mov
div
dec
scas
push
cmp
shl
pop
mov
mov
push
add
outs
push
push
jno
aaa
jp
mov
fstp
sub
push
jne
outs
push
inc
test
xor
mov
mov
and
imul
inc
loope
scas
jno
ss
push
add
mov
sbb
dec
inc
pop
imul
test
fidiv
inc
imul
add
scas
ficom
and
push
mov
jno
jle
pusha
jae
adc
mov
arpl
cld
push
xchg
jg
xor
jns
jl
dec
outs
xor
jbe
mov
jle
push
outs
aaa
push
or
push
push
pop
ins
arpl
and
mov
push
pop
inc
inc
pop
sbb
dec
xor
dec
dec
gs
jmp
sbb
push
cs
clc
xchg
dec
jno
push
push
jbe
adc
dec
pop
das
or
jae
mov
push
(bad)
into
fistp
pop
jl
jns
push
out
jno
enter
(bad)
neg
adc
inc
ret
xlat
outs
rol
das
jmp
dec
cmp
imul
dec
push
xor
and
dec
ins
movs
dec
add
jae
sahf
dec
xchg
push
push
cmp
dec
jmp
xchg
shl
ret
fwait
mov
cmp
inc
test
and
out
dec
xchg
adc
push
jo
(bad)
cmp
es
ins
push
cs
call
and
inc
sub
adc
xor
std
add
mov
push
dec
call
loop
pop
jle
shl
js
cwde
aaa
outs
push
inc
push
inc
mov
push
sbb
push
xchg
call
bound
mov
repz
ficomp
(bad)
cmp
add
sub
div
inc
xchg
push
mov
xchg
push
dec
ja
add
movs
daa
jg
daa
gs
mov
xor
aam
ja
jge
push
jle
sub
addr16
aaa
pop
iret
lock
pusha
lock
(bad)
(bad)
jge
add
test
aaa
test
jle
ss
je
rol
dec
xor
pop
dec
inc
sbb
jl
push
mov
or
mov
jne
(bad)
mov
inc
sahf
push
lahf
ins
mov
push
and
addr16
dec
jge
dec
dec
xor
xchg
(bad)
jle
dec
pop
pop
xchg
cmps
(bad)
or
jg
inc
adc
inc
push
xchg
jbe
add
jmp
or
adc
dec
pop
out
dec
add
push
or
jne
addr16
xor
shl
jb
popa
mov
xor
es
xor
pcmpgtb
rcr
xor
jno
inc
push
sahf
push
(bad)
(bad)
sbb
jbe
outs
(bad)
jo
dec
push
inc
gs
imul
sbb
or
mov
xchg
dec
push
scas
ja
mov
inc
push
mov
sahf
fiadd
ins
inc
cmps
ret
test
loop
push
push
test
cmp
outs
dec
xor
mov
dec
xor
inc
daa
mov
push
inc
push
imul
aad
add
jae
call
cmps
ss
xlat
cwde
push
dec
mov
sbb
(bad)
mov
sbb
daa
(bad)
push
out
adc
test
mov
jle
dec
sub
into
gs
jl
ret
and
ins
ret
scas
add
(bad)
(bad)
push
ror
ja
jmp
dec
push
pop
cmp
or
cmp
test
fsubr
jg
call
sbb
mov
xchg
push
out
mov
mov
ins
sbb
pop
dec
iret
loop
movs
das
pop
dec
imul
pop
outs
or
pop
push
xchg
push
(bad)
dec
call
push
pop
inc
push
push
jo
out
xor
lea
js
cmps
mov
(bad)
mov
mov
ins
xor
or
and
jne
and
mov
addr16
pop
call
inc
dec
sbb
fld
iret
adc
or
jl
imul
pop
cmp
ficomp
xor
daa
push
xor
xor
inc
addr16
cmps
dec
(bad)
punpcklbw
xor
dec
ds
lds
(bad)
pop
jno
push
js
xor
pop
jmp
fisub
dec
xchg
inc
mov
mov
dec
push
outs
push
push
mov
push
push
sub
sbb
ss
cmp
pop
fild
div
scas
mov
je
imul
in
push
aam
in
push
push
cmp
ficom
dec
cmps
sahf
jle
pusha
loop
jbe
psubusb
sbb
xchg
cmp
mov
lahf
and
test
push
test
add
fiadd
xor
dec
addr16
xor
pop
push
push
scas
jne
dec
and
movs
push
add
(bad)
call
packssdw
push
pop
push
inc
out
xchg
push
mov
cs
jl
and
dec
xor
popa
mov
jae
xchg
cs
cmp
mul
pop
adc
push
push
push
std
xor
inc
xchg
imul
xor
push
inc
pop
bound
jno
or
ss
imul
clc
test
or
imul
loop
xchg
inc
xchg
push
inc
jge
sbb
daa
out
aas
push
jno
inc
cs
fisttp
or
sub
aaa
lock
push
push
push
dec
xchg
outs
pop
adc
push
push
push
and
add
addr16
xchg
push
dec
shufps
ds
mov
inc
rcl
dec
adc
pushw
or
outs
and
sbb
mov
add
popa
mov
shl
imul
std
cmp
inc
ins
in
ins
scas
scas
sub
mov
push
pop
or
xor
ins
arpl
pushw
sbb
mov
jo
outs
pop
inc
scas
sbb
and
idiv
pusha
and
cmp
ss
sub
jae
in
sub
xchg
dec
loopne
dec
xor
and
ret
xchg
xchg
retf
bnd
hlt
dec
push
ja
dec
popa
dec
dec
mov
lahf
into
mov
add
jbe
dec
push
jle
inc
mov
data16
pop
shl
push
dec
pop
inc
cmps
es
dec
inc
dec
dec
or
or
jmp
sub
dec
inc
dec
jle
mov
jge
dec
xchg
sub
mov
pop
test
inc
(bad)
dec
inc
ss
mov
clc
jne
outs
imul
(bad)
dec
mov
sbb
dec
inc
jmp
and
inc
inc
xor
xchg
dec
pop
push
mov
imul
or
inc
dec
push
popa
arpl
xor
test
mul
mov
push
cmp
lahf
or
add
push
dec
push
addr16
ret
(bad)
jle
push
mov
add
inc
pusha
push
das
sub
and
xchg
ds
lods
add
dec
mov
idiv
ins
xchg
adc
mov
out
movs
adc
pop
cmps
(bad)
pop
add
push
cmp
jbe
cld
lock
(bad)
pop
xchg
pop
dec
dec
add
mov
outs
sahf
xchg
aad
dec
dec
test
add
push
pop
jb
push
and
inc
cli
inc
jae
xor
jb
ss
push
dec
cmp
xor
push
pop
ins
cmp
xor
dec
push
and
nop
daa
loop
push
add
sbb
add
dec
scas
inc
(bad)
div
dec
ror
aaa
ss
xor
call
pop
dec
xor
clc
dec
out
aaa
dec
imul
ret
bound
repnz
jle
data16
push
xor
push
ins
test
shl
cmp
mov
sbb
adc
imul
pop
inc
test
dec
dec
dec
nop
xor
add
inc
push
push
dec
mov
pop
ds
fiadd
dec
mov
push
mov
xrelease
je
iret
shl
xchg
push
inc
pop
dec
pop
sub
dec
push
push
dec
imul
add
mov
dec
mov
inc
mov
mov
imul
pop
mov
mov
mov
iret
daa
into
(bad)
fst
(bad)
adc
aad
outs
dec
cmps
pop
pushf
add
xchg
dec
dec
push
xchg
gs
stos
cmps
cmp
pusha
cmps
outs
sub
or
lock
add
pop
sub
mov
mov
ins
imul
sahf
int3
or
push
jl
inc
add
adc
pushf
xchg
shl
hlt
dec
and
addr16
or
push
xor
cmc
aaa
lahf
jle
lahf
adc
stos
dec
pop
pop
cmps
into
mov
pop
out
(bad)
adc
fwait
xlat
inc
xchg
sub
inc
pop
xchg
pop
inc
xor
hlt
sar
inc
push
dec
xchg
out
dec
add
push
mov
sahf
(bad)
fidiv
mov
fisub
jle
cmp
and
not
adc
add
jne
not
push
xor
dec
cwde
sbb
sbb
dec
add
jne
mov
mov
mov
jo
shl
xor
inc
inc
inc
pop
xchg
mov
fild
pop
push
fiadd
bound
shl
inc
and
(bad)
xor
into
out
mov
xchg
mov
sbb
fs
out
out
inc
inc
pusha
push
or
cmp
and
outs
aaa
and
jle
cmp
mov
das
mov
xor
fistp
or
adc
in
inc
adc
ja
dec
jecxz
daa
ja
out
fistp
je
and
pop
xor
imul
dec
inc
inc
out
mov
push
push
je
fbld
add
push
mov
sub
ret
ss
add
pop
cmc
mov
add
pop
fdivr
pop
sar
aam
cmps
outs
imul
pop
push
outs
add
xor
jge
pop
cmp
repnz
pop
and
les
jle
push
adc
adc
push
sbb
push
mov
fs
sahf
add
sahf
sbb
pusha
push
add
lods
dec
or
sahf
dec
es
mov
daa
xor
dec
and
mov
pop
je
gs
sub
inc
add
sahf
cmp
daa
pushf
jbe
xor
mov
je
inc
pop
out
xor
add
xor
or
adc
xor
add
dec
and
mov
push
xor
lahf
adc
into
es
jbe
pop
cmp
inc
ss
inc
xor
out
inc
mov
mov
xchg
clc
dec
jl
pop
outs
imul
jg
cmps
movs
imul
push
push
jle
sbb
clc
rcl
popa
xor
and
aaa
inc
daa
and
pusha
aaa
jg
fs
mov
imul
push
ror
idiv
popa
xchg
inc
mov
add
add
or
retf
imul
(bad)
aaa
dec
rcr
mov
pop
imul
popa
(bad)
or
push
sbb
data16
retf
mov
cld
cmp
retf
into
out
and
cmps
call
outs
jo
sbb
pop
pop
xor
or
xchg
sub
dec
sub
mov
(bad)
adc
(bad)
pop
mov
test
push
inc
cmps
mov
nop
xor
jle
ja
push
adc
stos
jno
je
cmp
aaa
jne
push
pusha
sbb
fdiv
pushf
inc
and
inc
jne
dec
push
dec
or
cs
cmps
test
es
or
add
mov
movs
add
adc
ja
inc
dec
data16
cmp
test
inc
push
adc
test
test
cmps
add
mov
cmps
sar
mov
pop
ss
scas
dec
xchg
push
push
arpl
push
pop
fisttp
add
pop
mov
jb
inc
movs
pop
test
jno
into
dec
cmp
pop
add
stos
or
es
push
push
test
inc
or
pop
aas
fild
dec
inc
addr16
ss
ins
dec
xchg
sub
jbe
xor
shl
imul
dec
dec
es
dec
dec
jle
sub
push
xor
aaa
pop
shl
ja
pop
ja
ss
xor
addr16
mov
mov
cmps
je
push
pop
lea
xchg
xchg
xchg
push
push
and
aaa
push
xor
cmps
push
xchg
pop
cmp
inc
dec
dec
inc
xor
or
pop
sbb
mov
push
lods
add
push
push
inc
adc
pop
data16
xor
push
dec
xor
lahf
lods
add
aaa
inc
xor
push
push
xor
imul
aaa
arpl
push
dec
push
inc
dec
imul
cdq
stos
je
dec
inc
lahf
xor
xor
aaa
push
add
scas
push
ss
nop
out
ds
add
sub
xor
(bad)
jae
pop
inc
inc
push
inc
imul
mov
sub
popa
ss
push
in
in
out
push
jle
push
pop
inc
push
ds
scas
jg
cmps
dec
ds
int
push
push
inc
push
ss
data16
and
push
test
inc
jg
popa
push
loope
pop
inc
push
inc
push
inc
jp
pop
jle
pop
push
inc
xor
xor
xlat
ss
sbb
inc
push
ret
retf
jae
push
in
outs
push
sbb
push
xor
jl
push
jge
xchg
xchg
addr16
push
cmp
jl
ss
inc
aaa
push
push
inc
in
sahf
jle
je
scas
xor
or
(bad)
in
adc
xchg
retf
xor
movs
pop
cmp
inc
outs
jo
lahf
aaa
aaa
inc
jo
jg
sbb
mov
push
mov
push
dec
xor
aas
pop
stc
lods
jl
cmp
xor
push
xor
movs
repnz
gs
fs
jbe
fwait
cmp
dec
mov
sbb
jbe
push
push
xchg
inc
popa
xor
xor
jno
test
dec
cmps
fcomp
ds
fnstcw
or
dec
push
stc
xor
repz
popa
xor
jo
xor
jnp
aaa
push
jbe
push
ss
ror
jae
imul
ss
pop
pop
jg
jge
adc
push
jl
in
add
or
inc
push
dec
fwait
sub
inc
es
add
cmp
push
adc
dec
inc
div
scas
inc
pop
xor
cmp
aaa
pop
pushf
dec
addr16
inc
sub
dec
push
in
mov
pop
arpl
leave
mov
push
mov
aaa
dec
les
mov
fstp
inc
aaa
jae
inc
or
pop
leave
pop
ss
jne
in
xor
jle
pop
jge
mov
dec
and
inc
aas
addr16
dec
pop
ss
fidivr
popf
dec
xlat
pop
addr16
push
xor
sbb
movs
pop
inc
dec
inc
cs
daa
(bad)
jl
pop
inc
sbb
out
(bad)
ins
xor
imul
xchg
push
xchg
inc
xor
ss
popa
fcomp
mov
lahf
push
mov
aas
push
fisub
xor
push
inc
push
dec
js
sub
shl
(bad)
mov
cmp
nop
pop
xor
push
push
movs
xor
das
pushf
jne
push
and
jle
pop
push
loopne
cdq
cs
maxpd
xor
jmp
sub
mov
xlat
jne
dec
mov
xor
push
jg
outs
fwait
test
scas
je
fidiv
cmp
into
out
push
(bad)
ds
jle
gs
xor
or
aaa
dec
pop
xor
sbb
jle
add
xor
mov
dec
scas
sub
sub
sahf
call
xchg
pop
dec
cmp
push
push
imul
clc
push
cs
dec
inc
sahf
xor
cmp
fdivr
dec
xor
scas
mov
dec
dec
inc
jle
lahf
pop
pop
xchg
retf
jg
push
inc
push
imul
mov
cli
add
scas
ror
xchg
xchg
cmp
pop
xor
dec
inc
pop
push
xor
imul
(bad)
jg
sub
out
jmp
push
into
fisttp
imul
(bad)
sahf
pop
push
mov
scas
btc
dec
iret
scas
push
stos
xor
inc
outs
pop
cmp
aaa
jge
pop
pop
lods
sub
cmp
sahf
imul
pop
jb
outs
and
je
shl
push
pop
push
dec
scas
jno
or
outs
aas
cmova
xchg
xlat
jmp
into
outs
jmp
and
push
(bad)
fisttp
mov
aas
pop
mov
arpl
pop
pop
lock
and
aas
push
outs
lahf
mov
mov
je
jle
push
inc
inc
ins
sahf
(bad)
(bad)
(bad)
jg
jo
ss
dec
jae
gs
dec
push
dec
dec
xor
inc
dec
jge
inc
je
arpl
xor
gs
imul
dec
mov
(bad)
fimul
pop
push
jb
ret
cmp
dec
imul
inc
dec
jge
jo
ins
jae
call
mov
pop
pop
data16
aaa
jb
clc
sub
jno
inc
outs
addr16
test
inc
inc
jb
cmp
fcomip
dec
popa
push
pop
push
jl
jno
inc
cmp
push
jno
push
jb
out
mov
jle
push
arpl
outs
or
(bad)
dec
inc
ja
push
push
push
bound
xor
retf
xchg
icebp
push
jne
inc
and
inc
mov
dec
push
add
push
dec
sahf
jge
inc
xchg
(bad)
(bad)
(bad)
inc
xor
inc
push
jne
ja
push
arpl
jge
ins
xor
pop
out
js
das
fidiv
cmp
xor
push
je
pop
ins
inc
and
or
push
dec
ins
jb
jbe
jmp
mov
je
inc
jl
push
outs
or
inc
outs
jae
xor
xor
xor
pusha
popa
mov
dec
retf
pusha
push
push
push
bound
clc
scas
push
xchg
inc
pusha
cwde
dec
dec
jb
push
cld
idiv
outs
cli
inc
inc
push
push
push
dec
outs
inc
push
ins
push
or
dec
xor
mov
clc
push
jb
pop
push
push
xor
jmp
gs
dec
arpl
imul
xchg
cmp
outs
inc
jno
popa
bound
push
cmp
bound
aam
push
cmp
jg
loopne
sub
add
data16
push
jae
or
dec
jl
fisub
movs
ins
in
push
stos
or
push
js
movs
adc
or
push
inc
inc
(bad)
outs
mov
ss
jae
dec
inc
xor
ror
outs
cmp
cmp
loopne
fidiv
addr16
nop
push
call
pop
jbe
push
loopne
push
inc
push
clc
addr16
push
ins
adc
xor
cli
fistp
outs
push
jbe
and
inc
jbe
dec
push
jb
sub
inc
mov
add
jle
inc
jmp
dec
pop
fidiv
push
aaa
pop
push
jbe
mov
aaa
jb
inc
gs
adc
pusha
dec
jbe
inc
push
push
or
mov
jle
lods
clc
ja
mov
je
jl
dec
push
push
ss
call
data16
pusha
xor
dec
push
jge
push
jno
push
dec
xor
xor
retf
cmp
push
inc
dec
adc
jg
inc
push
push
inc
outs
xor
imul
popa
push
inc
jb
dec
jge
jne
push
pop
dec
dec
dec
dec
aam
xchg
pusha
push
dec
in
mov
pop
jb
jp
dec
jne
xor
loopne
ss
bound
cli
outs
fcomip
(bad)
push
push
addr16
jne
gs
xchg
inc
mov
inc
imul
ins
aaa
jae
cli
xor
clc
or
xchg
jge
push
dec
dec
test
adc
stos
arpl
pop
and
jae
push
je
ret
push
call
popa
ss
sub
push
jl
addr16
gs
cs
inc
pusha
xor
jbe
jbe
sbb
pusha
mov
or
push
pop
cmp
jecxz
nop
jae
outs
inc
cmp
push
gs
push
in
retf
add
pop
jl
mov
fcom
add
or
mov
pop
inc
ins
loop
cmp
jl
mov
mov
push
imul
aam
mov
push
addr16
adc
pop
test
jmp
dec
fadd
xor
dec
push
ss
adc
and
out
push
or
inc
cmp
gs
push
jp
push
sub
sti
jb
outs
aaa
pop
sub
jg
jle
inc
in
or
or
inc
cmp
data16
mov
dec
xchg
xchg
fsubr
imul
icebp
mov
dec
lods
add
test
xor
push
mov
cdq
ret
dec
out
jle
sbb
into
add
int3
jo
je
cs
out
ret
pop
jmp
aam
push
jne
int
push
sahf
jmp
fwait
jmp
push
pop
pop
ds
push
shr
push
xor
xor
xchg
dec
(bad)
dec
push
or
inc
sub
dec
mov
jl
push
outs
outs
pop
xor
mov
inc
les
inc
dec
lahf
adc
sahf
push
aaa
ins
xor
pop
push
dec
aas
inc
dec
mov
add
dec
mov
pop
inc
popa
into
or
jle
mov
ror
jno
aaa
lods
jg
adc
les
ss
jno
push
fadd
inc
into
mov
ret
aas
je
mov
dec
push
dec
movs
or
(bad)
xor
jbe
push
jo
or
into
push
fsub
ret
nop
imul
mov
jp
cs
dec
(bad)
xor
cmp
and
ds
add
inc
inc
dec
data16
dec
pushf
xor
mov
mov
retf
jb
je
push
adc
je
retf
cmp
push
fs
cs
push
add
data16
mul
add
xchg
xor
push
aaa
dec
outs
inc
jbe
adc
ss
add
dec
xor
hlt
sahf
push
dec
ficomp
sub
push
add
push
out
mov
inc
dec
push
pop
push
out
dec
pop
add
mov
shl
push
push
jne
ror
enter
loopne
push
mov
jo
push
pop
dec
ja
ja
lods
scas
push
pushw
aaa
push
dec
ds
or
jle
mov
fwait
jecxz
hlt
pushw
push
push
ins
outs
xchg
push
dec
push
cmp
(bad)
push
mov
xchg
push
das
pop
in
xchg
bound
pop
inc
jno
jne
js
stos
ins
push
xchg
mov
inc
dec
gs
jne
test
(bad)
push
sti
add
xchg
sahf
mov
inc
dec
xor
dec
xor
push
sahf
outs
cmps
inc
jno
stos
push
pop
inc
pop
jbe
push
jne
mov
xchg
mov
push
data16
push
cmp
push
lds
test
(bad)
out
jmp
je
push
shl
cmp
cmp
mov
mov
cwde
or
push
fs
(bad)
jno
mov
sub
add
cmp
push
pop
adc
push
adc
popa
dec
ins
scas
adc
and
xor
dec
ins
js
jmp
scas
outs
and
xchg
scas
loop
scas
cli
add
push
cmps
(bad)
ds
dec
ja
outs
push
ret
out
(bad)
push
push
dec
jo
bound
push
lods
sbb
(bad)
push
jg
test
jo
gs
dec
jbe
sbb
adc
aaa
dec
xor
outs
push
ss
push
xor
xor
add
jbe
xor
push
imul
push
dec
scas
push
mov
call
mov
push
dec
inc
and
cmps
mov
cmp
xor
adc
jo
dec
bound
add
inc
pop
or
ja
cmps
pop
push
xor
push
jl
dec
jb
dec
cmp
xchg
ds
cmps
add
dec
bound
xchg
or
dec
mov
ss
jo
dec
jle
dec
loopne
data16
dec
inc
addr16
dec
lahf
add
dec
pop
dec
ja
bound
dec
inc
ja
inc
push
jo
mov
aaa
push
push
ins
dec
jo
or
inc
mov
inc
add
(bad)
adc
ss
mul
adc
sahf
into
pop
push
pop
mov
add
dec
xor
inc
into
push
mov
outs
ja
stos
cli
push
pop
push
addr16
outs
cmps
dec
dec
inc
sub
adc
dec
inc
pop
sub
pusha
imul
sahf
dec
push
ret
or
fmul
pusha
cmps
aas
outs
push
shl
mov
xor
gs
jge
dec
dec
aad
fdivrp
and
imul
dec
mov
lahf
aad
push
dec
push
inc
push
outs
into
push
jle
dec
mov
test
(bad)
loopne
pop
jbe
dec
dec
push
inc
fist
dec
dec
aaa
push
ja
push
ins
sub
dec
into
xchg
push
pop
dec
push
es
dec
dec
inc
jbe
sbb
push
imul
xor
push
bound
test
fs
or
mov
jne
shl
fisub
xchg
push
test
scas
je
arpl
jbe
push
div
add
xor
data16
push
dec
ss
push
add
jne
dec
push
push
ds
mov
mov
inc
cmp
cli
mov
or
pop
dec
xor
and
mov
pop
add
dec
push
dec
pusha
pop
pop
sbb
push
pusha
mov
adc
xor
mov
xor
xor
dec
ds
jmp
mov
outs
dec
dec
push
out
je
pop
mov
xchg
stos
outs
ficom
push
fisttp
dec
or
jbe
xor
mov
add
push
and
adc
mov
inc
test
push
je
dec
sbb
outs
mov
idiv
cmps
and
xor
ja
push
and
test
ror
imul
pop
(bad)
xor
dec
pop
add
mov
pop
inc
push
and
pop
ret
fmul
dec
pop
dec
cmp
cmc
mov
data16
loopne
sub
cmps
jbe
dec
push
push
cmc
jmp
out
jbe
data16
dec
inc
or
inc
push
mov
cs
dec
addr16
test
test
out
push
mov
sub
ja
inc
aas
add
mov
js
fist
jecxz
xor
xor
add
daa
pop
jmp
jo
(bad)
daa
and
mov
lahf
xlat
mov
aas
lds
cmp
inc
or
xor
inc
scas
push
cmp
or
push
push
imul
test
ds
push
jbe
jecxz
pop
cmc
pop
xor
data16
push
stos
mov
dec
xchg
pop
out
ficom
xchg
cmp
ss
pop
mov
jg
adc
xor
or
pusha
dec
jnp
add
push
dec
pop
pop
inc
data16
push
push
ja
push
xor
scas
push
add
sub
pop
imul
dec
xor
xor
lds
icebp
stos
inc
pop
push
jg
inc
or
push
ds
mov
dec
popf
and
push
add
dec
dec
pop
gs
sub
scas
sahf
dec
push
xor
xchg
xor
jno
xchg
push
arpl
xor
inc
pop
bound
sub
xor
test
adc
pop
add
dec
dec
jb
scas
aad
jns
add
sub
jl
sti
ins
push
inc
lock
imul
inc
xor
mov
bound
psubw
sbb
bound
gs
je
test
xor
jg
mov
inc
pop
gs
mov
mov
aas
jl
push
ds
ret
adc
jle
lods
outs
and
pop
push
inc
xchg
pop
mov
test
inc
jne
inc
gs
pop
gs
dec
dec
jne
jnp
outs
or
fist
ds
cmp
lahf
mov
jge
lahf
inc
inc
dec
dec
mov
ins
sahf
cmp
sti
fisubr
xor
push
(bad)
xor
pop
in
xor
div
pusha
inc
aaa
jmp
mov
adc
or
adc
pop
jae
or
and
fidivr
push
inc
das
sub
xor
inc
je
push
loopne
outs
cmp
aas
sub
cs
fidivr
inc
arpl
cmp
enter
inc
popa
xor
add
dec
mov
lods
jle
xor
rol
cmp
inc
(bad)
mov
cmp
jo
lea
popa
dec
sahf
push
sub
push
pop
xor
dec
je
xor
pop
ins
lahf
xor
aam
aaa
dec
xlat
fldcw
jne
mov
dec
pop
ins
fcom
sbb
xor
sub
jno
xor
ret
inc
jecxz
pushw
jl
(bad)
stc
xor
lea
push
xor
popf
jle
scas
jle
aas
mov
repnz
xor
push
jo
jns
sbb
inc
dec
xor
popa
cmp
inc
imul
dec
xor
dec
xor
popa
mov
ins
inc
jle
cmp
out
dec
xor
sahf
(bad)
xchg
cmp
outs
inc
lea
arpl
pop
sub
fnstcw
dec
inc
push
mov
xor
sub
pop
ss
inc
test
sub
xlat
jmp
hlt
push
sbb
xor
xor
(bad)
push
jmp
out
leave
dec
pushf
imul
call
out
nop
or
xor
xchg
iret
retf
pusha
push
inc
popa
jge
ja
out
test
ds
pop
xor
adc
push
mov
sbb
xchg
imul
mov
push
popa
xor
push
push
cmp
iret
mov
ja
dec
pop
xor
stc
cmp
(bad)
push
xor
cmps
repnz
inc
ss
dec
aaa
xor
test
imul
lods
jb
mov
fdivr
dec
jns
pop
ss
aas
inc
dec
iret
inc
sub
test
xor
xor
arpl
push
xor
ss
push
je
mov
mov
pop
ficomp
and
pop
push
xchg
push
ftst
imul
add
popf
loopne
test
add
mov
mov
xor
mov
xor
jge
ins
(bad)
xchg
outs
jns
adc
xor
xor
pop
sahf
imul
cmp
ds
xchg
retf
bound
aaa
lahf
dec
daa
push
sahf
ficomp
ffreep
in
(bad)
fidiv
jne
mov
inc
call
xor
mov
xor
xor
xor
out
push
xor
xor
pop
dec
pop
lds
movs
cmp
test
jb
(bad)
mov
ins
pop
push
xor
add
xor
xor
cmps
inc
and
sahf
dec
sbb
sbb
xor
into
mov
ss
out
ins
push
jle
fisttp
xor
xchg
dec
data16
cmp
or
dec
dec
dec
ins
out
xor
test
xor
cdq
mov
std
add
(bad)
dec
dec
dec
popw
inc
cs
dec
push
sub
cmp
movs
fisttp
outs
(bad)
xor
je
push
jo
sbb
outs
(bad)
dec
inc
dec
cld
int3
sbb
into
jne
dec
xchg
push
lea
out
test
and
pusha
data16
pop
test
mov
push
pop
push
pop
mov
xchg
aam
dec
dec
pusha
inc
pusha
outs
pop
xchg
push
icebp
mov
push
dec
into
xor
aaa
test
inc
dec
popa
shr
(bad)
xor
xchg
sbb
ins
es
dec
loopne
outs
mov
dec
ins
mov
dec
out
dec
pop
jne
fidiv
mov
xor
push
and
cmp
data16
cmp
in
ss
(bad)
in
pusha
ss
mov
scas
push
cs
data16
push
mov
and
aaa
dec
out
pop
inc
cs
dec
jb
dec
gs
dec
lods
inc
test
idiv
jle
adc
or
into
cmps
scas
inc
(bad)
pop
push
cmps
inc
call
or
jg
outs
fwait
rcl
neg
push
mov
mov
sar
jne
push
imul
dec
addr16
push
in
add
dec
push
addr16
push
data16
rol
inc
cmp
ds
sbb
pop
(bad)
push
ds
push
pop
pusha
je
fsubr
test
mov
addr16
jne
test
pusha
push
push
pop
or
test
scas
inc
jae
ds
cmps
jno
(bad)
outs
push
jo
jle
ror
into
push
(bad)
push
scas
test
outs
sahf
jb
jge
add
scas
mov
push
inc
ret
cs
xor
(bad)
jne
scas
push
push
xor
dec
jne
div
jl
push
xor
cmp
xor
aaa
addr16
and
or
js
jle
push
sbb
outs
push
outs
push
pop
call
push
xor
test
xor
hlt
dec
adc
inc
xor
in
movs
imul
xor
pop
sbb
jmp
pop
cmps
cmp
mov
imul
inc
stos
jo
xlat
and
ja
dec
leave
js
inc
push
inc
push
pop
fdiv
xor
imul
xor
or
push
out
adc
test
fdiv
out
jo
cmp
add
and
ins
mov
xor
push
pop
push
dec
ret
inc
and
xchg
gs
push
push
push
ret
lods
sbb
pusha
mov
pop
fs
dec
push
jbe
adc
dec
dec
inc
pop
stos
adc
imul
ds
xor
xor
xor
pop
sahf
ds
les
cmps
out
push
push
jbe
xor
jg
xor
adc
pop
jle
clc
fcomp
pop
ss
pusha
push
inc
xor
mov
or
ret
mov
addr16
out
inc
mov
jp
ss
loop
pop
cs
jo
sbb
in
and
scas
inc
fisub
pop
(bad)
popa
scas
mov
add
inc
ds
jno
xor
imul
adc
mov
pop
mov
inc
xor
mov
dec
es
push
push
jne
mov
rcr
xchg
and
or
outs
xchg
(bad)
daa
ret
dec
push
fimul
mov
xchg
add
dec
iret
jbe
dec
shr
(bad)
out
scas
gs
fnstcw
dec
out
inc
push
js
xor
jle
pop
(bad)
enter
inc
imul
ficomp
push
pop
push
xor
push
cmp
fidivr
pusha
push
inc
dec
bound
sbb
dec
jbe
add
comiss
dec
dec
sahf
inc
xor
xchg
enter
mov
(bad)
cmp
out
mov
outs
scas
daa
push
inc
jo
jmp
sbb
imul
mov
mov
bound
and
dec
out
add
inc
inc
cs
outs
(bad)
xchg
into
push
idiv
in
jbe
dec
pop
inc
dec
repz
retf
add
inc
dec
hlt
add
ss
sbb
ja
mov
jo
aas
jg
inc
mov
pop
ins
xchg
or
imul
pusha
or
push
pop
mov
enter
ins
(bad)
xlat
sbb
push
(bad)
data16
add
dec
(bad)
jle
imul
outs
ja
mov
inc
imul
add
js
aad
xor
ja
xor
ds
imul
xlat
inc
push
and
pop
pop
xchg
pop
out
jne
outs
push
jle
sbb
inc
or
test
mov
dec
push
ret
push
sbb
fistp
pusha
in
dec
div
pop
(bad)
sub
gs
xor
jbe
jo
xchg
je
ds
sub
outs
push
addr16
inc
dec
inc
test
dec
dec
gs
cmp
inc
xchg
sub
push
fsub
addr16
out
fist
das
inc
scas
adc
xor
pop
jne
push
xchg
outs
mov
dec
ja
arpl
or
cmp
arpl
inc
enter
sahf
jne
imul
add
adc
fbld
mov
fmul
iret
aam
fiadd
ss
xchg
cld
xor
push
daa
scas
xor
rol
sar
into
push
xor
into
mov
xlat
hlt
(bad)
xor
dec
mov
addr16
jecxz
xor
dec
push
or
sahf
outs
mov
es
ss
neg
pushf
mov
into
jbe
ins
push
push
dec
pusha
or
pop
daa
mov
popa
xlat
xor
jb
imul
adc
pop
daa
xor
sub
das
jle
scas
pop
inc
inc
aas
ja
adc
pop
mov
mov
mov
pop
aaa
cmp
or
jmp
loop
xor
ss
mov
xor
cmp
call
mov
aas
cmps
pop
ins
pop
mov
outs
outs
xchg
pop
les
stos
or
add
push
outs
fs
loopne
push
dec
inc
bound
gs
and
pop
xor
inc
jg
add
jp
jne
and
dec
es
cmp
or
or
inc
pop
or
popa
mov
adc
xor
push
jbe
push
or
out
outs
out
ja
dec
add
inc
stos
scas
dec
(bad)
icebp
js
mov
ss
scas
es
inc
or
add
cmp
inc
push
and
(bad)
sahf
xor
mov
push
(bad)
dec
test
pop
pop
(bad)
mul
adc
out
arpl
mov
jbe
xchg
aaa
sub
inc
inc
gs
jbe
ss
jo
inc
cmp
push
and
pusha
cs
push
sbb
cs
inc
jle
push
dec
dec
add
pusha
xchg
pop
data16
loopne
outs
out
(bad)
mov
sbb
nop
xor
jbe
adc
dec
(bad)
xlat
and
ja
push
out
out
jne
lahf
cmp
pop
je
arpl
(bad)
pop
inc
dec
out
push
pusha
icebp
bound
and
out
or
in
mov
cmp
scas
pop
jecxz
cdq
mov
push
jno
pop
(bad)
or
sbb
jle
push
xchg
push
(bad)
cmp
dec
inc
stos
inc
(bad)
not
dec
out
loop
or
retf
mov
clc
sbb
jle
push
(bad)
dec
or
enter
xchg
inc
inc
loope
pop
adc
lahf
sbb
xor
push
dec
es
mov
pushf
outs
jl
push
push
xchg
push
pop
xchg
data16
(bad)
data16
outs
jo
mov
mov
mov
xor
push
clc
sahf
add
push
dec
dec
outs
gs
jne
cld
mov
ja
data16
jae
xor
sbb
push
aaa
cmp
ficomp
cmp
jg
mov
aaa
xlat
mov
inc
pop
add
inc
fist
mov
jbe
or
mov
lahf
rol
or
xor
outs
xchg
adc
pop
xchg
inc
(bad)
(bad)
(bad)
popa
ds
(bad)
pushw
push
pop
pop
mov
ret
bound
pop
js
mov
mov
jp
jbe
cmps
into
push
sub
ss
or
push
push
ss
inc
xor
adc
push
mov
push
imul
fcomp
dec
mov
add
test
dec
push
or
cmp
daa
dec
mul
and
ds
dec
addr16
mov
jecxz
dec
out
push
mov
cmp
cmp
mov
dec
pusha
test
lds
cmps
dec
pusha
sbb
dec
daa
aaa
inc
xlat
dec
inc
jne
(bad)
mov
aaa
into
ja
scas
jecxz
xchg
jl
cmovs
aaa
outs
out
cmps
dec
sub
inc
cwde
mov
outs
sbb
out
push
jne
fcom
inc
mov
jle
jno
pop
aaa
push
shl
xor
inc
xchg
shr
outs
xor
dec
je
or
dec
xchg
and
iret
xor
and
das
outs
xchg
jb
addr16
pop
mov
fcomp
push
xchg
and
mov
ret
(bad)
(bad)
cmps
arpl
adc
repnz
push
ds
jge
stos
jle
pop
xor
je
fmul
inc
iret
add
jp
es
and
into
cs
sbb
rdtsc
es
ins
push
jl
pop
push
add
inc
cs
jne
ins
dec
xchg
lods
xlat
adc
cmps
mov
into
inc
jnp
push
jne
ss
xchg
and
fisub
mov
jne
dec
inc
ficom
lods
loopne
iret
jno
dec
dec
ret
aas
mov
mov
pop
mov
out
jb
adc
mov
data16
inc
mov
rcl
mov
push
pop
(bad)
fild
cwde
xlat
fs
daa
cmp
and
dec
icebp
and
outs
dec
xor
or
fs
push
xchg
pop
das
mov
push
(bad)
fisubr
pop
out
push
das
dec
push
cmc
dec
hlt
movs
inc
push
pop
push
dec
ja
push
add
(bad)
pop
mov
pop
add
and
add
bound
xchg
pop
outs
test
fst
xor
movs
fwait
std
(bad)
push
jbe
inc
push
push
jbe
inc
dec
adc
outs
inc
(bad)
(bad)
outs
ds
ins
push
aaa
inc
cmp
sub
je
push
push
popa
pop
push
adc
add
popa
pop
push
dec
inc
fwait
cmc
popf
mov
push
push
outs
ins
xchg
ins
xor
or
outs
push
dec
addr16
push
jl
add
outs
ja
je
adc
shl
jl
jo
jo
outs
jb
push
dec
mov
inc
outs
mov
inc
adc
call
les
(bad)
push
inc
outs
push
jle
jbe
outs
cli
jg
into
or
outs
inc
push
jb
push
inc
jo
ja
jge
push
pop
pop
fs
push
inc
push
jne
jge
ins
out
push
push
test
push
adc
adc
inc
dec
out
mov
arpl
ins
dec
pop
dec
jl
sub
jmp
pop
inc
jge
jo
jl
pusha
sub
loope
jle
jl
pop
addr16
ja
dec
push
push
dec
push
ja
jge
dec
test
fild
arpl
arpl
inc
enter
pop
cmc
inc
jle
pop
mov
dec
jno
inc
je
xor
dec
push
inc
call
xor
ja
dec
dec
or
xchg
outs
fdiv
outs
push
bound
jle
ins
in
and
dec
popa
xor
imul
pop
arpl
data16
cli
push
jl
test
jb
addr16
outs
push
jge
imul
ja
xor
dec
out
adc
ja
cs
push
arpl
add
loopne
in
xor
mov
push
xor
dec
aaa
or
pop
mov
dec
jge
imul
pop
ja
jo
inc
jp
inc
cmp
and
ins
dec
push
push
out
dec
or
mov
dec
and
push
sar
jne
dec
xor
je
pop
push
mov
push
xor
pop
push
cmp
push
xor
pop
push
jno
add
dec
push
nop
jle
or
fistp
cs
add
sub
aam
mov
xor
mov
sub
cld
push
cmp
bound
dec
outs
jo
inc
sub
ss
inc
mov
push
jmp
ins
jb
or
push
ins
jbe
xor
mov
jo
dec
inc
jle
bound
mov
popa
dec
pusha
xor
es
aaa
xor
aaa
outs
inc
bound
push
gs
mov
adc
inc
cmp
popa
clc
jmp
inc
imul
bound
arpl
push
cs
imul
adc
jbe
ins
dec
imul
sbb
ja
jbe
jne
push
dec
pop
ret
push
inc
out
xor
push
cs
test
gs
in
or
test
call
inc
add
dec
ins
arpl
sub
push
jge
je
adc
cmp
sub
mov
xor
jne
dec
push
xor
add
dec
pop
push
jo
and
push
lock
xor
arpl
ins
mov
outs
cmp
cmp
call
dec
xor
mov
push
push
xor
and
pop
mov
dec
gs
arpl
push
pop
loop
push
arpl
inc
dec
cmp
cmp
xor
or
addr16
add
outs
jbe
xchg
pusha
dec
jl
gs
dec
push
ret
xor
dec
ins
ins
push
add
add
sbb
xchg
in
push
dec
popa
adc
es
jg
loopne
push
mov
cmp
pop
inc
inc
imul
jl
ja
and
sub
pusha
into
sub
push
pop
add
mov
push
jne
adc
dec
jbe
push
jmp
sbb
inc
bound
ss
mov
pop
push
call
sub
popa
retf
je
push
add
addr16
mov
inc
pop
sub
mov
dec
sub
dec
push
or
dec
pusha
jno
outs
aad
hlt
push
ins
inc
push
aaa
xor
arpl
in
push
jno
repnz
sar
imul
lock
xor
pop
dec
pop
inc
(bad)
cmc
mov
and
jo
ss
push
jl
sub
push
dec
xor
pushf
inc
push
pop
jno
jl
outs
mov
mov
inc
(bad)
jle
pop
jl
push
es
outs
cmp
scas
mov
push
dec
outs
dec
pop
push
inc
outs
push
cmp
push
push
push
mov
xchg
jae
aaa
ja
adc
or
dec
push
aaa
ins
gs
and
pop
push
outs
pop
test
xor
sub
ds
fcmovnb
pop
and
outs
outs
xor
jbe
or
jl
sbb
mov
push
mov
cmp
jnp
add
mov
inc
cmp
inc
or
aaa
loop
adc
pop
jno
add
pop
xor
push
adc
dec
push
movs
push
jge
inc
inc
jbe
jp
out
stos
and
pop
hlt
push
in
pop
pusha
xor
lock
ds
inc
cli
outs
dec
je
dec
jo
ss
mov
dec
inc
dec
push
(bad)
fmul
rol
dec
lock
(bad)
jl
push
gs
cs
dec
rcr
dec
add
lock
pop
and
push
data16
cmp
mov
push
jae
mov
shl
pusha
dec
imul
rol
and
inc
int3
icebp
or
push
push
jge
imul
push
add
aas
sar
xor
gs
data16
test
daa
push
add
inc
shl
cmp
push
push
dec
bound
jne
dec
xor
dec
imul
cmp
aaa
sub
fiadd
xlat
jbe
hlt
xchg
pushw
or
pusha
and
outs
cmps
je
outs
xor
aaa
(bad)
dec
inc
sub
jne
addr16
jae
test
adc
imul
js
sbb
inc
pusha
cmps
jne
mov
inc
mov
ret
shl
mov
dec
jae
inc
jb
imul
pop
mov
jbe
add
dec
inc
nop
inc
ins
jge
ja
jo
adc
dec
pop
rol
xor
gs
cmp
mov
jmp
lock
pop
imul
xor
test
xor
xor
push
(bad)
fs
dec
jb
push
mov
jae
lahf
ret
jo
push
inc
pop
and
pop
shl
outs
xor
mov
xor
dec
xor
xchg
fsub
xchg
dec
ss
pop
jge
xor
cmps
addr16
dec
imul
push
xor
ja
sub
jg
dec
inc
addr16
outs
arpl
dec
adc
ret
add
dec
cmps
add
push
inc
inc
inc
daa
sbb
and
fstp
popa
pop
cmp
jle
bound
stos
adc
inc
jbe
cmp
fisttp
push
js
data16
sub
sub
push
push
pop
out
xor
pop
ja
jb
push
mov
(bad)
jnp
cmp
daa
arpl
jge
jne
mov
data16
sub
mov
jae
scas
or
stos
inc
mov
xchg
inc
xor
inc
dec
xor
xor
je
pop
inc
jb
data16
imul
ins
inc
mov
jbe
inc
push
fmul
pop
scas
push
inc
sbb
push
(bad)
push
inc
ret
push
fidivr
jmp
pop
sub
ins
dec
inc
push
ror
push
pop
dec
push
mov
das
pop
jmp
ss
sahf
cmps
sub
push
mov
addr16
mov
jge
jb
push
inc
xchg
inc
es
push
dec
cmps
xor
push
lods
mov
push
mov
push
shl
xchg
push
xor
xchg
pusha
xchg
in
mov
es
addr16
div
popaw
add
movs
shl
push
pusha
inc
scas
and
inc
xor
or
jle
dec
cmps
popa
push
dec
adc
pop
pusha
ins
(bad)
es
(bad)
jne
jo
inc
fiadd
mov
imul
add
cmps
mov
xchg
popa
aaa
mov
pushf
xor
sub
xchg
push
xor
inc
pop
inc
ins
adc
xor
data16
call
xchg
push
bound
sub
mov
stos
fwait
ret
in
or
nop
xor
mov
bound
push
ins
inc
push
push
imul
xor
cmp
adc
loopne
push
dec
enter
js
outs
push
ins
pusha
inc
les
or
inc
bound
(bad)
dec
mov
es
dec
outs
xor
mov
dec
dec
jae
inc
outs
inc
jl
sub
mov
dec
cmp
jg
cmp
dec
data16
pop
sub
movs
ja
adc
leave
dec
or
inc
outs
or
rcr
aad
dec
pop
es
push
je
push
pop
push
aaa
dec
xor
push
push
pop
push
(bad)
out
jo
sub
push
push
push
stos
(bad)
cmp
jb
imul
pusha
addr16
inc
push
daa
test
xchg
push
ja
xchg
jp
cmp
popa
mov
pop
dec
cmp
imul
dec
xor
jae
xchg
dec
dec
push
bound
outs
jo
jb
call
sub
dec
test
or
es
jo
jae
arpl
inc
jbe
jle
mov
ins
cli
inc
xchg
add
(bad)
mov
ins
inc
inc
dec
lods
rol
inc
mov
pop
mov
push
dec
data16
sub
test
pop
xchg
pop
inc
dec
push
mov
mov
outs
xchg
pop
cmps
add
and
dec
pop
pop
repnz
pusha
inc
push
inc
hlt
pop
sti
mov
jne
pop
dec
add
dec
add
lock
loope
shl
imul
xchg
dec
out
or
push
xchg
pop
and
inc
push
shl
jbe
dec
loop
or
(bad)
dec
xor
push
push
in
loop
jae
out
cwde
mov
fs
dec
dec
xchg
fcom
adc
jg
cs
mov
push
cmps
pop
jne
add
das
jmp
dec
outs
repnz
add
adc
xchg
in
cli
out
xor
dec
addr16
test
(bad)
push
imul
(bad)
cmp
xor
sahf
mov
sbb
ss
pop
xchg
(bad)
(bad)
out
lahf
dec
inc
jle
xchg
movs
in
push
je
outs
or
mov
push
rol
sbb
ss
outs
dec
push
push
jo
adc
xchg
xor
add
lods
xchg
xor
stos
mov
inc
xor
dec
fstp
mov
jno
into
add
sbb
in
mov
dec
jge
js
cmp
mov
push
dec
push
jns
inc
imul
inc
xchg
call
push
push
dec
psubsw
push
or
ds
pop
data16
data16
dec
mov
bound
ins
push
xor
push
add
enter
xchg
push
pop
outs
inc
mov
ss
scas
dec
fiadd
push
fimul
fiadd
ss
imul
inc
add
push
dec
je
pop
and
dec
dec
cs
jp
or
jbe
dec
push
push
hlt
scas
mov
cli
add
pop
mov
xor
aaa
mov
push
ss
imul
(bad)
out
(bad)
and
je
xor
push
xor
push
in
test
sbb
push
push
add
mov
imul
pusha
dec
cmp
dec
jne
cmp
clc
or
dec
jb
(bad)
dec
jbe
cs
mov
dec
stos
pop
ja
sahf
dec
pusha
dec
arpl
in
scas
mov
sahf
cli
pop
push
mov
out
ja
pop
jb
pop
out
pop
inc
mov
mov
mov
lock
out
fisttp
mov
or
dec
push
pop
stos
loop
into
push
out
xor
inc
sbb
mov
dec
inc
and
loopne
cmp
jne
ffreep
sbb
dec
inc
adc
mov
push
das
xor
fcmovb
repnz
out
mov
push
lahf
push
sub
mov
inc
test
(bad)
test
sbb
sbb
push
dec
imul
dec
aad
iret
inc
ins
ret
add
aaa
cs
aad
xchg
inc
fcomp
fadd
lods
jb
push
cmp
xor
inc
ds
push
enter
sbb
sbb
push
ds
or
imul
outs
jle
adc
xor
out
pop
jae
addr16
or
es
pop
sub
js
out
popa
pop
inc
mov
sbb
(bad)
iret
outs
pop
pop
arpl
jg
retf
call
add
stos
adc
sahf
sbb
outs
push
imul
dec
out
xor
int3
cmp
out
(bad)
clc
xor
sahf
jo
xor
(bad)
ret
shl
popa
scas
mov
gs
push
adc
xor
mov
add
pop
mov
sahf
je
ds
add
mov
out
xor
mov
sbb
cmp
rcr
add
push
xor
push
ja
cld
xchg
pop
jge
xor
sbb
clc
push
das
or
into
add
nop
ret
(bad)
xor
cs
xor
add
push
movhps
fisttp
into
jge
pop
imul
jbe
fdivr
outs
addr16
adc
into
xor
dec
sar
rcr
mov
scas
scas
aas
loopne
repnz
sahf
imul
fiadd
je
xchg
xor
bound
mov
es
xchg
inc
(bad)
inc
lahf
data16
outs
inc
cmc
scas
call
popa
iret
mov
aad
bound
pop
jbe
sahf
popa
dec
js
xor
dec
dec
inc
cmp
xor
jl
loopne
add
es
adc
inc
push
mov
data16
inc
dec
adc
push
fidiv
mov
push
ss
xchg
add
loopne
in
push
cmp
cs
jno
and
pop
lods
out
addr16
lahf
ret
stos
pusha
jbe
jbe
imul
push
aas
or
cs
pop
or
cmp
jbe
call
push
adc
test
test
add
jp
enter
push
mov
xor
push
push
xor
loopne
mov
outs
(bad)
push
shl
jne
cli
into
or
bound
ss
jbe
jge
inc
idiv
mov
inc
je
inc
gs
xor
inc
or
inc
je
pusha
add
mov
add
outs
aas
out
push
lahf
cs
add
loope
(bad)
out
outs
out
popa
sbb
aas
into
inc
scas
add
sub
ds
stos
cmp
pushw
mov
loope
pusha
mov
es
dec
sbb
mov
dec
inc
fdiv
sub
nop
jo
pop
push
push
sahf
mov
push
mov
xor
mov
jne
push
outs
mov
mov
ret
dec
gs
pop
and
mov
jl
dec
push
pop
mov
pop
dec
(bad)
gs
or
adc
mov
outs
outs
push
aas
or
mov
push
aaa
xor
es
ins
stos
loope
inc
push
push
aas
leave
inc
push
in
ins
dec
dec
dec
dec
dec
xchg
adc
cs
mov
das
out
jo
mov
push
pop
loopne
push
dec
push
cs
xchg
imul
cli
retf
xor
scas
jno
scas
push
or
cmp
xor
inc
cmps
aas
mov
aas
inc
gs
ja
push
mov
inc
mov
mov
mov
fidiv
inc
es
addr16
aaa
aaa
add
jle
jo
cmp
push
outs
add
add
loop
mov
push
pusha
dec
cmp
int
(bad)
ficomp
xlat
pop
imul
out
pop
pop
pop
inc
icebp
les
pop
push
(bad)
cdq
lods
les
xlat
ss
pop
inc
jae
popa
dec
aas
add
in
dec
xor
dec
pop
xlat
ja
mov
sahf
(bad)
fld
xor
test
mov
inc
jbe
dec
jbe
das
test
jno
ds
xlat
adc
push
test
cmp
xor
pop
pop
jle
test
inc
data16
jecxz
xchg
aaa
jg
jo
push
jecxz
ds
mov
mov
ins
push
das
pop
aas
xor
cmp
xor
push
cmp
rcl
sahf
lahf
jle
pop
add
xchg
dec
fbstp
push
push
mov
xor
scas
mov
stc
add
fidiv
jno
dec
fadd
loopne
fbstp
cmp
xor
cs
or
xchg
(bad)
scas
xor
icebp
into
mov
dec
inc
or
push
jle
cs
fs
outs
inc
outs
mov
xor
les
jbe
dec
mov
cmp
push
les
pusha
sub
gs
pop
imul
add
jl
ins
nop
dec
jg
inc
dec
pop
adc
enter
out
jnp
(bad)
mov
push
dec
(bad)
mov
jge
scas
inc
dec
jb
gs
loopne
das
or
push
sahf
outs
add
inc
mov
bound
mov
mov
dec
push
aaa
xor
sti
rcr
xor
pop
xchg
jge
xchg
adc
jbe
xor
outs
jne
lea
sti
mov
dec
xlat
adc
ins
iret
pop
push
pop
aaa
iret
push
pop
(bad)
jmp
gs
dec
fild
out
or
xor
dec
out
(bad)
and
jae
(bad)
dec
mov
pusha
pop
ss
outs
es
ret
push
das
fimul
inc
fmul
inc
jbe
into
outs
push
sbb
jo
lahf
inc
push
outs
xchg
dec
jb
dec
jle
pop
adc
fimul
jne
pop
cmp
sub
adc
push
inc
aaa
outs
cmp
fcmovnu
xor
pop
xor
adc
xchg
retf
push
pop
test
or
aas
out
push
xchg
movs
mov
inc
dec
dec
pop
in
mov
cs
sahf
inc
dec
jbe
and
xchg
push
add
ja
pusha
scas
shl
inc
cmp
sbb
mov
mov
gs
jne
adc
loop
out
rcr
xchg
lock
push
pop
daa
push
xor
aas
lahf
push
dec
pop
leave
test
pop
mov
push
add
scas
push
sbb
aaa
and
add
jmp
xor
(bad)
das
cmp
pop
pop
push
imul
jg
aad
sahf
add
les
outs
int
xor
push
(bad)
aam
mov
jne
jb
xor
test
inc
pusha
dec
aaa
xor
lds
ss
les
or
rcl
minps
cmps
mov
pop
popa
push
nop
add
add
(bad)
arpl
sub
test
xor
(bad)
cmps
mov
push
cmp
inc
lahf
inc
sub
add
push
add
rol
imul
and
xor
fimul
jo
and
add
push
push
call
pop
mov
dec
pop
dec
int3
ret
push
fisubr
inc
jp
sahf
data16
push
adc
xor
into
add
and
loop
jo
fisubr
call
mov
cmps
(bad)
data16
sahf
dec
out
dec
inc
(bad)
xchg
inc
jbe
popa
inc
cmps
adc
push
inc
push
xor
sub
push
add
fistp
mov
add
add
test
imul
add
cmp
pop
xor
dec
pop
add
inc
inc
adc
lahf
dec
mov
xchg
out
sahf
push
(bad)
js
rcr
add
scas
xor
and
je
outs
push
stos
(bad)
aam
es
dec
outs
xor
sub
or
imul
add
test
or
or
out
add
pusha
cmp
push
or
dec
jbe
inc
sub
test
push
add
clc
or
inc
dec
xchg
shr
iret
jno
add
scas
cmp
add
inc
inc
cwde
jbe
mov
push
xchg
add
xchg
div
push
inc
cmp
and
loope
cmp
pop
adc
push
xchg
pusha
cmp
mov
add
sbb
inc
inc
sub
add
xor
loop
loopne
mov
push
inc
add
jae
pop
shl
adc
inc
or
and
out
pop
clc
ss
ror
dec
add
pop
pop
xor
shr
(bad)
jbe
dec
test
sbb
jb
test
inc
lea
mov
xor
dec
icebp
nop
sub
push
pop
out
pushf
(bad)
adc
push
mov
push
data16
stos
sub
dec
addr16
or
dec
pop
arpl
outs
(bad)
dec
xor
test
xchg
inc
cmp
aas
fidivr
inc
data16
push
pop
xor
ss
xchg
addr16
enter
fs
and
imul
in
xor
mov
xchg
push
nop
jp
pop
outs
ss
test
cmps
out
mul
mov
pop
imul
test
mov
cmps
inc
ss
dec
cmp
cmp
bound
dec
fiadd
cmp
xor
xor
or
lods
and
jecxz
shl
inc
push
cmp
lock
dec
lock
dec
push
js
in
xchg
lahf
dec
push
inc
das
ins
loopne
cmp
sahf
push
push
bound
mov
fld
jg
xor
(bad)
mov
fisubr
or
fbld
imul
(bad)
xchg
push
outs
outs
push
pop
add
scas
or
pusha
out
push
push
pusha
dec
es
ror
sbb
dec
outs
jbe
add
push
push
sahf
adc
out
sub
xor
add
pusha
fbld
pusha
imul
xor
scas
pop
xor
imul
pop
push
dec
xor
movs
(bad)
push
dec
dec
jle
dec
jne
xor
inc
dec
inc
cmp
xor
add
pop
push
int3
(bad)
adc
into
out
add
(bad)
xchg
je
sub
mov
fild
adc
add
outs
jo
push
or
jle
xor
inc
jae
adc
(bad)
push
aam
sbb
xor
(bad)
cmps
jle
mov
ficom
outs
addr16
popa
add
mov
outs
into
adc
fisub
jne
push
jbe
pop
push
push
add
ror
jo
push
pop
cmp
jne
out
test
das
dec
scas
xor
jo
loopne
ror
mov
(bad)
(bad)
jg
adc
out
mov
add
inc
push
jbe
mov
sahf
jno
pop
test
xor
ds
mul
pop
scas
cs
fisttp
outs
out
jbe
test
scas
xor
mov
push
out
mov
loopne
push
dec
mov
push
adc
push
fisub
mov
lahf
pop
push
aas
xor
cmp
xlat
test
into
sahf
inc
mov
adc
pop
dec
xor
pop
sbb
(bad)
pshufw
fnsave
aaa
scas
into
jg
lahf
xor
js
and
dec
xor
outs
push
sbb
cs
push
push
xchg
pop
outs
mov
push
mov
ins
add
into
dec
dec
jle
rol
(bad)
inc
cmp
popa
add
push
sbb
out
jo
sti
or
out
mov
or
inc
imul
sbb
dec
pop
es
xchg
mov
dec
scas
push
(bad)
fisubr
ret
repnz
femms
pusha
daa
hlt
jle
jne
mov
xor
sahf
push
outs
scas
inc
iret
inc
loopne
sbb
cs
outs
adc
or
dec
push
test
push
inc
call
rol
push
imul
push
inc
jb
(bad)
daa
bound
pop
mov
dec
dec
inc
dec
xor
inc
add
movs
jne
xor
mov
nop
dec
rcl
pop
fwait
add
or
cmps
push
push
dec
cmp
js
pop
iret
xor
jo
(bad)
fild
dec
or
lods
and
fimul
div
dec
jbe
pop
pop
(bad)
sbb
rcr
jae
data16
test
int
cmps
sahf
popa
push
mov
ins
dec
(bad)
push
addr16
ss
push
out
pop
dec
ss
pop
jb
mov
xor
ja
shl
js
push
inc
and
xchg
into
xor
adc
and
out
or
inc
data16
and
push
xor
dec
out
push
dec
loop
ficom
pop
aam
pop
popa
adc
ds
dec
dec
ja
or
cdq
push
and
dec
dec
daa
je
fdivr
push
into
outs
loopne
mov
dec
mov
inc
jmp
in
sub
push
aaa
cmp
xchg
scas
inc
pop
mov
push
dec
cmp
lahf
movs
addr16
sahf
push
dec
add
mov
mov
gs
sahf
dec
jbe
test
ss
jg
icebp
(bad)
or
dec
xor
push
ficomp
call
inc
imul
push
or
dec
inc
sbb
xchg
data16
xor
sub
lahf
outs
xchg
sahf
or
popa
movs
push
mov
xor
inc
and
xor
es
dec
das
add
push
pop
mov
data16
add
imul
and
push
(bad)
pop
push
add
cmp
jle
aaa
int
(bad)
aam
pusha
inc
or
test
pop
pusha
push
pop
lea
jge
cmp
movs
inc
cld
ss
push
dec
outs
mov
push
xor
je
pop
mov
xor
xchg
es
lahf
push
pop
xor
push
les
jle
jo
sub
sbb
push
add
dec
xor
add
outs
mov
sahf
xor
xor
imul
or
xchg
loope
inc
ss
sahf
dec
push
xchg
xchg
shr
inc
xor
sahf
call
adc
test
pusha
dec
cmp
imul
push
mov
aam
inc
inc
in
dec
outs
mov
or
neg
add
inc
pop
xchg
and
pop
add
icebp
push
arpl
push
jne
(bad)
push
dec
pusha
sbb
push
ss
sbb
mov
push
imul
jmp
in
sub
sti
adc
sbb
inc
outs
dec
dec
outs
add
mov
sub
push
pop
into
ins
call
push
xor
cmp
mov
es
dec
imul
mov
cmp
gs
cs
adc
mov
dec
pop
sbb
adc
sahf
imul
rol
pop
adc
xchg
(bad)
pushw
out
(bad)
outs
sub
add
xchg
and
push
out
call
dec
inc
pop
inc
pop
ds
xor
xchg
aaa
xor
dec
dec
loop
int3
dec
aas
push
imul
mov
je
or
push
cs
lahf
call
imul
sbb
test
jbe
xor
into
fiadd
mov
pop
inc
ret
scas
cs
je
inc
mov
pop
dec
inc
out
gs
mov
sbb
push
into
cs
movs
(bad)
loopne
into
ja
push
test
ja
and
ins
sbb
inc
(bad)
pop
js
scas
out
pop
add
imul
outs
cmp
mov
or
stos
inc
xchg
add
adc
js
and
cli
ds
imul
cmp
push
jne
xlat
lods
rol
gs
xor
push
stos
push
push
push
mul
xlat
aam
retf
pop
pop
sahf
fcomip
adc
pop
inc
je
(bad)
mov
(bad)
jno
cmp
dec
je
add
es
repz
lahf
scas
mov
jle
push
outs
ja
adc
imul
scas
in
inc
mov
dec
inc
pop
popa
push
and
push
adc
arpl
(bad)
xor
mov
dec
dec
pop
inc
jo
inc
push
mov
ins
ds
scas
push
and
test
outs
ss
pusha
mov
mov
adc
pop
bound
push
int3
les
add
mov
xchg
pop
adc
test
(bad)
mov
(bad)
(bad)
push
add
and
aaa
mov
push
xor
setbe
xor
cmovbe
xor
push
cmp
mov
or
push
cs
jae
out
das
addr16
xchg
pop
pop
pop
push
not
inc
cmps
inc
daa
dec
cmps
pop
out
test
dec
xlat
mov
outs
outs
push
jbe
pop
sar
add
xchg
and
inc
and
in
ss
lods
shl
outs
inc
inc
imul
mov
ud0
push
sub
inc
addr16
outs
pop
inc
scas
outs
neg
sbb
out
push
sbb
pop
cmp
mov
outs
outs
mov
xor
sub
inc
push
fistp
push
popa
sbb
aaa
push
inc
addr16
xchg
mov
pop
push
das
xor
scas
push
aam
ins
push
das
dec
fcom
push
xchg
push
pop
jno
pop
aam
dec
xchg
add
rol
popa
jae
adc
mov
popa
push
lahf
lahf
cmp
add
adc
pop
ja
dec
mov
movzx
rcpps
das
dec
outs
imul
(bad)
adc
push
cmp
daa
std
jo
inc
sbb
dec
fst
je
sub
pop
into
daa
push
outs
sahf
jbe
pop
jo
daa
cmps
push
inc
(bad)
into
jne
pop
div
jge
jbe
jno
fstp
mov
pop
int3
xchg
mov
cmps
mov
lds
push
mov
sbb
xor
xlat
xchg
push
imul
pop
test
mov
imul
es
push
cmc
mov
cmp
jo
ss
icebp
rol
je
bound
loop
fld
push
push
push
add
sub
jne
movs
or
test
xchg
ret
aaa
xchg
jbe
ret
cs
pusha
(bad)
adc
cmp
push
imul
push
xlat
add
inc
iret
jle
inc
and
shr
je
add
push
(bad)
dec
jnp
add
dec
(bad)
sbb
mov
sub
ss
push
sub
into
push
sbb
pop
or
cmp
dec
sbb
dec
cmps
ds
add
inc
pop
push
pop
iret
jge
jbe
mov
xchg
push
push
ss
and
(bad)
loopne
into
pushf
push
pop
pop
jb
pop
inc
inc
or
xchg
push
dec
xchg
pop
outs
pop
cs
mov
dec
stos
dec
jbe
sbb
mov
xor
or
xor
(bad)
xor
or
cmp
ror
aaa
dec
dec
outs
dec
fisubr
dec
or
dec
bound
mov
mov
popaw
mov
aaa
cmp
dec
push
push
dec
je
push
ss
jb
lea
dec
ss
bound
dec
sar
repnz
scas
dec
dec
cmp
int3
dec
fadd
inc
jle
dec
mov
dec
cli
daa
(bad)
mov
add
add
jge
mov
inc
gs
sub
cmp
test
imul
gs
test
outs
jb
xor
inc
fs
dec
mov
dec
dec
inc
and
(bad)
push
gs
cmp
or
ss
movs
mov
inc
addr16
dec
aaa
xor
ins
adc
xor
pop
or
dec
jbe
cmp
xor
je
push
je
mov
rol
es
outs
mov
mov
mov
xor
sahf
sub
push
into
arpl
jae
push
cmps
and
xor
inc
and
ds
bound
push
pop
das
push
jb
pusha
xchg
inc
(bad)
dec
push
dec
jo
shl
in
or
outs
cmp
call
aam
push
gs
fadd
rcl
stos
ror
ret
outs
push
jl
call
addr16
cmp
dec
xor
mov
dec
data16
and
inc
outs
arpl
popa
push
adc
jle
dec
pop
(bad)
frstor
xchg
jno
gs
xor
pop
or
push
data16
shl
pop
xlat
jbe
jbe
xor
loop
outs
dec
sar
xchg
mov
fmul
addr16
test
push
jb
xor
or
inc
inc
sar
xchg
xor
dec
xor
inc
adc
push
into
bound
push
jbe
sub
bound
push
add
cs
faddp
mov
retf
push
lods
pop
mov
dec
imul
push
xchg
lods
jb
adc
jbe
cli
xchg
arpl
xor
jbe
daa
ja
je
jbe
jb
mov
mov
xchg
aaa
jle
adc
dec
(bad)
push
xor
xchg
xor
jle
into
ret
loope
add
call
push
pop
aaa
ficom
push
inc
stos
sub
loope
jle
cmps
xchg
dec
cdq
pop
xchg
mov
data16
std
fidivr
ss
inc
lahf
push
inc
mov
push
add
sub
pop
dec
mov
push
mov
sub
shl
push
mov
adc
(bad)
(bad)
dec
(bad)
pop
xchg
mov
into
and
push
xor
push
xor
sbb
nop
push
dec
xor
inc
xor
lahf
inc
pop
adc
inc
jo
fwait
adc
pop
in
psrlw
push
xor
mov
jl
loop
mov
mov
int3
faddp
das
fisub
mov
bound
jmp
sbb
adc
sar
jb
cmp
dec
push
mov
aaa
lahf
xor
xchg
add
icebp
adc
dec
sub
xor
jo
mov
adc
jo
pop
push
xchg
clc
out
jbe
aam
jg
rcr
mov
dec
add
push
push
ror
xchg
xchg
(bad)
gs
cmps
xchg
dec
xlat
test
js
push
ja
ss
test
inc
inc
pop
xchg
aam
fisttp
into
outs
push
push
scas
ins
cmp
imul
outs
aas
push
bound
dec
iret
add
dec
adc
lahf
test
je
pop
cs
bound
fwait
addr16
popf
and
ror
push
add
outs
pusha
sbb
das
xchg
popa
add
call
pop
inc
lock
push
pop
pop
out
or
loopne
scas
inc
dec
ins
inc
inc
push
and
pusha
je
ins
mov
cmp
rdmsr
push
je
rol
ret
shr
pop
push
scas
push
jle
add
xor
nop
mov
push
seto
adc
scas
jg
inc
push
xchg
data16
pop
jmp
pop
mov
call
out
rol
mov
loopne
pop
sbb
sahf
ja
xchg
shr
fistp
movs
jge
push
aaa
xor
outs
push
jne
sahf
xor
shl
push
jle
lea
pusha
rol
cs
fidivr
lods
dec
das
out
outs
out
adc
fimul
cs
(bad)
dec
outs
outs
idiv
pop
aas
xor
(bad)
dec
xor
movs
inc
sar
and
jg
cmp
pushf
dec
push
fild
js
nop
or
js
dec
ja
sbb
out
ds
cmp
dec
jbe
jg
fadd
ins
inc
call
jl
sahf
inc
ficomp
sahf
cmp
out
jne
dec
pmaxsw
jbe
cmp
ja
pop
aas
(bad)
jo
imul
fiadd
iret
ja
ins
icebp
add
mov
xor
mov
sbb
inc
xchg
cmp
pop
(bad)
jg
fiadd
call
pop
imul
jg
push
push
shl
outs
pop
dec
or
push
(bad)
outs
mov
ja
mov
outs
pusha
or
jg
cmp
cs
into
(bad)
pop
jnp
ror
pop
mov
scas
jge
aas
ss
data16
xor
movs
cmp
(bad)
jno
cmp
pop
xor
mov
jg
inc
pop
and
nop
fwait
cmp
add
cs
sbb
lods
sbb
jo
scas
add
sbb
out
lahf
jmp
add
jb
inc
bound
inc
push
iret
bound
test
push
push
sahf
pop
and
add
xchg
(bad)
pop
ds
jmp
jo
shr
iret
dec
aas
sbb
mov
aas
outs
gs
cmp
pop
dec
aad
(bad)
cmp
push
sbb
jne
shr
out
pop
sar
add
lahf
idiv
das
add
push
ret
punpcklwd
xchg
mov
mov
aas
aas
pop
mov
push
mov
mov
int3
call
in
add
push
mov
pop
scas
dec
out
loopne
dec
sub
xor
mov
pop
pop
dec
pop
and
pcmpeqb
imul
dec
push
or
es
pop
imul
fistp
outs
xchg
fisttp
lahf
ins
dec
sbb
xchg
pop
jo
pusha
push
fistp
rol
clc
push
dec
dec
mov
pop
dec
aas
or
mov
mov
dec
(bad)
jle
out
rol
ror
(bad)
fist
cmp
add
mov
mov
aam
push
mov
xchg
(bad)
mov
iret
mov
push
js
cmps
or
adc
jo
sub
scas
imul
outs
mov
sub
cmp
(bad)
imul
bound
mov
inc
imul
sbb
imul
push
out
xor
pop
push
aaa
adc
push
jbe
jmp
lds
outs
out
xor
pop
loopne
dec
nop
mov
pop
push
cmp
ffreep
dec
lods
mov
dec
lahf
ss
add
push
or
lahf
xchg
mov
adc
add
scas
addr16
adc
js
jo
(bad)
jecxz
sar
jle
mov
adc
aaa
cmp
idiv
sbb
xor
and
pop
and
xchg
push
dec
add
xchg
imul
es
scas
sbb
sub
data16
push
push
dec
and
add
push
(bad)
push
pop
or
xchg
mov
clc
out
push
outs
inc
push
jno
inc
ss
inc
shl
pop
dec
inc
pop
or
gs
add
dec
xor
inc
fisttp
push
push
add
nop
test
bound
shl
mov
jo
lock
xor
mov
pop
aam
je
aad
pusha
sti
pop
push
cmp
inc
dec
daa
pop
lock
add
test
xor
pop
or
(bad)
jg
push
ss
imul
xor
lahf
sahf
and
jne
dec
inc
pop
mov
mov
jmp
xor
sbb
inc
pop
stos
mov
push
imul
mov
fisttp
fnclex
pop
xchg
xor
push
fisub
inc
lahf
shr
adc
mov
add
fisttp
sub
xchg
push
ja
dec
adc
push
nop
push
pop
push
gs
clc
and
sar
cmp
sar
clc
pop
dec
add
mov
(bad)
call
jl
fldlg2
inc
jg
push
inc
push
das
sub
adc
lahf
ins
loopne
popf
mov
push
cmc
push
add
aas
sti
test
xor
lahf
xor
das
mov
jmp
repnz
ss
not
xor
(bad)
aam
aas
inc
enter
push
xor
mov
scas
rcr
adc
arpl
ret
pusha
sbb
inc
pop
xor
jb
std
dec
xor
aaa
and
aas
call
inc
sub
jo
dec
pop
sbb
xor
mov
pop
xchg
push
cs
adc
jbe
sbb
xlat
inc
jb
stc
jle
outs
sub
xchg
es
pop
xchg
mov
add
out
dec
cmp
fs
mov
jbe
pop
xor
retf
push
dec
xor
(bad)
aaa
mov
rcr
shl
pop
inc
aam
iret
jle
enter
inc
push
inc
xor
pop
push
aam
pop
outs
xor
call
pop
imul
add
ret
xor
and
adc
gs
ins
cmp
push
sahf
imul
cmps
inc
xor
and
in
aaa
push
dec
scas
jge
stos
push
or
dec
ins
xor
idiv
push
cmps
push
jo
xor
xchg
mov
push
sub
ss
push
rcl
ins
push
dec
out
sbb
fimul
mov
pop
adc
dec
es
fiadd
lods
push
cmp
push
mov
inc
inc
outs
inc
xor
adc
cmps
jp
jbe
dec
xor
mov
xor
or
ret
mov
pop
add
pop
inc
sbb
sbb
(bad)
imul
outs
(bad)
arpl
data16
and
mov
into
jbe
inc
push
sti
(bad)
inc
jmp
dec
mov
cmp
dec
inc
dec
inc
xchg
adc
push
push
xor
xchg
cs
inc
xor
or
xor
gs
cld
jl
inc
sub
inc
jne
pop
retf
xchg
xor
sahf
inc
and
pop
jb
jg
or
xchg
dec
cmp
xor
stos
push
cmp
cmp
add
div
sbb
sub
dec
push
ret
push
xor
push
ret
add
jge
int3
mov
ror
and
add
adc
ss
or
out
or
gs
dec
jge
pop
je
lds
cli
bound
dec
push
je
xor
jl
push
ret
push
fistp
je
push
inc
aaa
inc
and
pop
ret
xor
fiadd
inc
ss
dec
dec
(bad)
in
mov
pop
ss
data16
jmp
push
sub
pop
push
ins
pop
push
ins
pop
jl
imul
out
clc
xor
jne
scas
ins
jno
into
bound
sub
push
sub
inc
gs
jg
jmp
dec
dec
dec
dec
pop
arpl
mov
pop
inc
inc
inc
imul
push
push
push
push
jno
push
outs
xor
push
inc
dec
cmps
mov
adc
dec
sbb
inc
scas
ins
adc
push
push
outs
out
push
mov
jle
ja
sub
jb
call
push
pusha
jo
sub
pop
addr16
je
outs
inc
push
push
pusha
push
dec
imul
ret
xchg
enter
out
push
or
push
inc
leave
clc
jg
mov
pop
push
jo
dec
push
push
ins
push
cs
pop
or
cli
push
inc
push
jo
leave
clc
popa
dec
jae
imul
fwait
dec
push
sub
arpl
push
push
arpl
sbb
cmp
sti
jmp
add
jno
dec
push
xor
pop
jo
inc
or
push
cmp
adc
outs
ss
dec
push
ins
jge
xor
push
dec
inc
push
push
or
add
xor
dec
dec
dec
jle
jb
sub
push
dec
push
push
inc
jae
je
popa
push
cmc
xor
inc
cmp
xor
outs
xor
sub
shr
(bad)
add
pusha
push
jbe
push
jo
pushf
dec
push
bound
inc
xchg
and
or
inc
xor
pusha
ins
int3
mov
inc
mov
jecxz
jno
adc
mov
and
xor
call
push
adc
sbb
dec
inc
push
clc
add
add
inc
outs
ja
inc
jno
je
aaa
fsubr
inc
cmp
lock
adc
gs
idiv
push
xor
aaa
dec
push
push
dec
jae
outs
push
addr16
idiv
or
bound
jl
gs
cmp
push
retf
fcompp
imul
ins
jne
jne
jl
ins
cmps
call
arpl
inc
call
inc
push
cdq
rcr
scas
push
pop
arpl
pop
pusha
inc
jo
ja
outs
dec
into
bound
pop
data16
ins
push
add
push
ret
jbe
scas
xchg
add
xor
cmps
test
dec
pop
push
popa
push
cmp
or
jne
push
imul
jle
pusha
jne
push
je
es
push
jl
or
xchg
imul
jb
loopne
je
ins
mov
outs
outs
jle
fdiv
ja
xor
push
ins
push
cmp
jb
ss
adc
out
sub
pop
outs
dec
push
jb
push
push
pop
les
pop
in
aaa
dec
outs
xor
scas
out
xor
ret
adc
push
movs
jo
daa
je
bound
inc
les
inc
add
ins
jl
xor
cld
jmp
push
xor
cmp
jae
jge
xor
jge
push
add
mov
dec
push
mov
jle
out
push
jne
outs
push
jl
movs
outs
or
outs
les
jno
inc
push
hlt
cmp
loop
fisttp
cmp
push
push
push
push
lods
mov
push
mov
je
cli
dec
xor
mov
sub
imul
aad
jl
imul
outs
or
push
je
mov
shl
inc
jb
(bad)
outs
push
(bad)
jne
data16
into
jmp
shr
repz
sub
jo
stos
add
pop
dec
inc
in
add
mov
inc
sbb
gs
sbb
jo
xor
mov
jbe
xor
xchg
add
cmp
dec
sub
mov
or
dec
cmp
imul
push
outs
xor
push
dec
mov
gs
xchg
ret
ins
dec
pop
retf
add
inc
pop
and
inc
std
mov
or
push
je
jae
cmp
sub
push
inc
add
stos
jae
inc
push
sub
daa
test
add
imul
dec
ja
adc
test
fist
jl
jl
dec
bound
jne
jge
mov
mov
pop
push
jge
outs
adc
jl
push
inc
inc
push
dec
pop
stos
jo
ret
xchg
sbb
fbstp
gs
push
call
call
aaa
dec
jno
add
push
jle
adc
inc
or
dec
dec
data16
push
jle
add
adc
or
sub
inc
ret
out
and
ins
push
ja
shl
fs
jne
add
adc
shr
arpl
jae
cld
pop
rcr
jne
inc
gs
cmp
push
add
jo
dec
push
adc
push
jmp
outs
sub
push
arpl
call
and
jle
jle
gs
ins
jno
inc
push
ja
hlt
pop
xchg
add
push
xor
sbb
ret
bound
push
push
push
push
push
push
movs
mov
jle
ja
out
pop
mov
jge
jne
cwde
aaa
outs
les
inc
add
cmp
push
outs
imul
shl
ror
pusha
xor
jle
sbb
adc
push
in
bound
sub
push
pop
push
outs
pop
inc
push
call
shl
pusha
dec
inc
xor
xchg
cmp
push
xor
(bad)
jne
inc
bound
or
inc
jle
jmp
cmp
xor
sar
scas
retf
out
dec
dec
stos
scas
clc
pop
shl
xor
ins
imul
and
dec
xor
dec
push
data16
push
xchg
retf
xchg
ss
push
mov
inc
xor
mov
lock
sbb
stos
dec
sbb
mov
lods
jp
scas
int3
push
outs
hlt
dec
jl
addr16
jno
aaa
pop
sbb
adc
jb
push
(bad)
enter
inc
xchg
mov
ins
mov
cmp
repnz
outs
push
inc
mov
jb
jl
fld
sub
mov
xor
movs
inc
push
ja
add
pop
sub
and
inc
arpl
xchg
(bad)
js
retf
arpl
outs
scas
xor
cld
pusha
jno
xchg
pop
mov
imul
xor
push
inc
cmp
pop
and
cwde
ins
or
or
pusha
outs
dec
mov
idiv
or
ja
pusha
inc
push
pop
dec
je
dec
dec
les
lods
mov
inc
dec
inc
sub
xor
inc
add
adc
jne
or
movs
mov
and
pop
js
lea
mov
(bad)
push
fidiv
inc
xor
in
push
jno
popa
add
pop
arpl
dec
(bad)
jmp
outs
mov
inc
inc
dec
dec
push
inc
(bad)
xor
xor
dec
jae
dec
div
fsub
stos
mov
fwait
call
sub
inc
je
jbe
ins
sbb
pop
sahf
push
repnz
inc
jl
xor
jl
pusha
push
push
sub
and
dec
jae
mov
gs
pop
inc
bound
jb
pusha
(bad)
mov
push
fisubr
add
and
pop
loopne
sub
cmc
sub
mov
inc
ret
xor
adc
mov
or
es
pop
pop
pop
adc
cmp
pushf
inc
push
gs
push
push
aaa
imul
xor
dec
jno
xor
aad
fdivr
sub
jo
add
outs
push
shr
adc
inc
arpl
inc
jge
mov
popa
dec
fidiv
pop
(bad)
pop
push
loopne
push
xor
dec
push
xchg
dec
imul
data16
pop
sbb
push
dec
arpl
push
inc
imul
push
push
add
enter
dec
loope
call
jne
dec
mov
scas
sbb
mov
push
sub
inc
outs
bound
push
inc
outs
push
fcom
inc
jae
dec
dec
sub
push
push
sub
js
xor
es
inc
push
sub
adc
lods
jae
push
add
add
je
pop
addr16
inc
dec
dec
adc
pop
bound
push
bound
ins
popa
cmp
inc
data16
sar
sar
arpl
out
push
mov
push
stos
add
push
mov
mov
mov
mov
ja
jnp
gs
dec
imul
jb
push
sbb
pop
mov
pop
pop
jae
sub
push
imul
imul
xchg
mov
cmp
cmp
pusha
imul
dec
cmps
push
sub
mov
and
xchg
add
retf
push
sub
outs
outs
aam
call
mov
inc
push
jae
push
dec
jle
push
dec
jle
add
js
cmps
push
jle
sub
push
out
xor
adc
and
in
adc
sub
push
push
jb
adc
adc
dec
test
adc
je
out
inc
jae
arpl
and
inc
jbe
mov
dec
shl
push
push
xor
push
das
test
lock
pop
push
dec
stos
jle
jmp
popa
data16
bound
dec
ins
ins
dec
dec
dec
dec
aaa
inc
imul
lds
cwde
ins
jmp
push
repnz
xor
push
je
outs
dec
dec
xor
xchg
cmp
inc
dec
inc
jle
in
push
test
jb
(bad)
les
bound
inc
push
inc
movs
ret
in
outs
jle
imul
popa
mov
outs
adc
sahf
push
inc
jae
push
jne
or
loopne
popa
dec
push
in
xor
sub
or
jno
outs
dec
add
push
push
ins
inc
shl
pusha
test
xchg
jae
pop
dec
adc
ret
mov
pop
mov
sbb
push
popa
cmp
push
xor
sbb
pusha
push
jo
push
push
test
mov
cmp
mov
cmp
imul
push
push
inc
ja
or
cmp
dec
or
push
je
fs
enter
push
cmc
pop
je
js
push
imul
ja
dec
mov
cmc
dec
ficom
jo
cmp
in
ss
sub
push
stos
pop
call
hlt
push
or
push
dec
jl
inc
xor
add
or
popa
outs
dec
mov
rol
push
jo
dec
inc
je
mov
xor
ja
push
hlt
jbe
sub
repnz
inc
das
stos
gs
dec
cmp
jmp
std
cli
arpl
push
pop
mov
push
out
push
cld
or
ins
jle
jo
ins
inc
pusha
retf
mov
lods
push
and
add
and
dec
add
push
jle
or
test
int3
dec
imul
dec
ja
cli
mov
push
dec
popa
jp
ja
cmp
mov
sub
jge
pusha
dec
aaa
push
ja
imul
jo
push
dec
dec
xor
std
das
clc
pop
push
push
jae
pop
outs
pusha
jge
jge
or
push
dec
jo
add
mov
je
sub
scas
test
push
addr16
popf
mov
adc
gs
push
adc
jmp
popa
jno
cmp
jbe
pusha
push
ja
inc
sbb
jae
fsubr
add
add
jne
pop
push
inc
test
arpl
ss
fsub
ficomp
std
scas
xchg
lock
push
je
imul
mov
pop
bound
push
inc
arpl
xor
jae
popa
pop
xor
dec
add
adc
push
mov
inc
mov
inc
es
xchg
dec
jle
xor
pop
pop
ja
or
ins
outs
cmp
imul
mov
aam
dec
push
inc
(bad)
pop
mov
mov
pop
push
bound
inc
dec
dec
das
inc
push
lds
mov
dec
xor
jb
cs
push
jle
inc
and
das
stos
add
outs
gs
push
pusha
hlt
push
dec
push
aas
push
push
rol
test
inc
inc
lods
pop
pop
pop
inc
cld
popf
mov
xor
inc
inc
push
dec
push
dec
inc
stos
and
inc
add
jmp
dec
into
ss
mov
cs
(bad)
addr16
xor
scas
xor
push
ins
dec
dec
inc
out
js
push
or
dec
xchg
jbe
pop
xor
adc
ins
push
add
fsub
jl
jle
jb
pop
xor
inc
cmps
mov
xor
xchg
push
cmps
push
and
pop
test
jb
jbe
xor
mov
sub
pop
shl
push
jno
pop
sub
jo
jge
xor
add
dec
cli
push
push
xor
aaa
sub
pusha
pop
ds
push
xor
dec
movs
dec
jne
dec
pop
xor
xor
jne
push
cld
mov
dec
in
push
arpl
cmp
sub
inc
ins
jle
xor
dec
mov
imul
inc
jle
inc
sbb
dec
cmps
sbb
cs
or
ins
dec
cmp
jecxz
pop
xor
ror
inc
inc
addr16
jle
inc
inc
cwde
inc
sbb
inc
dec
pop
xor
jge
push
dec
pop
inc
jno
xor
sub
fwait
push
inc
push
gs
add
popa
or
imul
push
add
fidiv
pusha
sub
outs
jp
dec
fwait
inc
mov
arpl
add
cwde
inc
add
inc
inc
dec
imul
or
mov
dec
in
mov
pop
inc
inc
adc
sbb
pop
or
dec
sub
shr
ror
inc
dec
nop
bound
inc
cmc
fbstp
retf
add
aaa
jo
push
jge
cmp
fild
push
inc
ss
xor
ja
pop
pop
or
pushf
push
(bad)
test
arpl
push
pusha
adc
push
clc
pop
ins
bound
(bad)
push
dec
add
and
jbe
push
je
call
fld
mov
push
pop
outs
jb
xor
outs
ins
pop
adc
push
add
jl
mov
scas
arpl
dec
push
jae
arpl
cmp
or
shl
movs
es
dec
ins
xor
jbe
sbb
and
je
jb
loop
jo
fadd
gs
gs
push
push
ret
sub
fimul
push
jb
or
aaa
fsubr
jl
outs
jno
cmp
mov
mov
arpl
sbb
mov
outs
test
pop
ins
lods
add
sub
inc
inc
rcr
dec
lea
mov
push
arpl
lds
bound
push
pop
sbb
es
inc
dec
in
pop
dec
push
ins
or
mov
sub
push
inc
dec
push
mov
or
pushf
test
shr
jbe
pushf
jbe
push
push
push
mov
xchg
add
push
addr16
jle
mov
jl
push
push
outs
sub
dec
rcr
inc
push
pushf
inc
(bad)
(bad)
mov
jl
push
jno
outs
bound
jae
dec
inc
xor
inc
imul
inc
pop
pop
cmp
imul
pop
cmp
into
or
fisub
push
imul
push
mov
bound
jae
pop
jno
jl
xor
inc
fsubr
push
jge
sbb
rcl
out
adc
pusha
push
jle
pop
push
dec
cmp
jo
rol
nop
xchg
push
cmp
adc
xor
cmp
xchg
jmp
push
pop
imul
movs
test
ins
outs
push
cmp
xor
shr
inc
outs
data16
bound
and
outs
sbb
jb
ins
push
jne
dec
push
inc
mov
push
dec
mov
jne
arpl
es
push
je
jle
push
push
bound
push
bound
cli
imul
xor
push
jle
dec
jbe
imul
dec
push
fcom
push
xor
mov
dec
je
sub
ins
sub
jl
dec
mov
pop
js
jo
outs
xor
sahf
inc
pop
dec
imul
xor
jne
push
pop
outs
lods
sub
mul
xor
repnz
outs
add
inc
xchg
dec
outs
mov
jbe
rol
add
mov
ja
icebp
ja
jbe
inc
ja
push
pop
inc
out
int
and
cmp
mul
push
pop
jb
jo
jb
push
cmp
push
jl
stos
clc
outs
pusha
jne
inc
inc
push
jo
jae
je
fs
ss
push
ins
imul
sub
stos
pusha
jl
mov
mov
fisubr
pop
in
pop
add
xor
dec
cmove
inc
push
ds
mov
mov
test
dec
int
sub
dec
jo
inc
lods
pushf
xor
lods
push
push
pop
push
push
imul
dec
cmp
fmul
(bad)
xor
nop
dec
je
outs
mov
mov
ins
xor
inc
push
push
adc
call
cmps
mov
push
sub
dec
popa
dec
push
imul
pushf
cmp
push
push
dec
cs
mov
imul
xor
imul
fwait
adc
retf
fsub
push
push
sbb
inc
xor
inc
int3
nop
ja
push
mov
or
push
fld
ins
dec
inc
bound
push
push
jbe
(bad)
pop
add
push
ins
push
inc
jae
dec
nop
mov
pusha
xor
ja
xchg
add
mov
pop
cs
outs
cmp
addr16
xor
loop
mov
mov
imul
dec
or
mov
xchg
ss
inc
xor
fild
or
in
outs
jbe
gs
dec
xor
dec
fadd
ins
inc
cwde
push
fidiv
xchg
ja
dec
pop
mov
pop
aam
push
mov
push
push
pusha
jne
movs
(bad)
out
mov
push
arpl
push
cmp
inc
jbe
inc
adc
xor
inc
outs
fsub
outs
aaa
inc
lods
lahf
jbe
adc
je
inc
ins
sub
arpl
and
mov
push
push
out
ja
and
loope
bound
addr16
xor
xor
push
out
jbe
push
pop
test
adc
outs
ret
dec
dec
push
dec
mov
xor
add
dec
ins
dec
(bad)
mov
jae
xor
inc
xor
jne
outs
xor
inc
fwait
mov
cmp
add
out
adc
mov
ret
cmp
mov
inc
or
push
lock
inc
xchg
mov
pop
add
dec
ins
push
sub
call
and
dec
in
fisubr
ins
outs
xor
bound
scas
and
data16
call
stos
push
xor
jae
dec
ss
mov
(bad)
jbe
arpl
bound
xchg
and
pop
dec
xor
jb
xor
push
imul
cmp
push
and
dec
mov
push
push
aaa
mul
push
push
hlt
ja
xor
inc
imul
push
bound
push
je
jmp
jle
pushf
jbe
sub
pop
pop
mov
jl
xor
push
cmp
xchg
push
(bad)
arpl
jge
cmp
outs
sub
and
and
jl
push
xor
dec
gs
add
dec
push
jne
and
push
pop
xor
inc
cmp
imul
push
enter
in
mov
mov
fsubr
dec
ins
imul
push
ins
cli
imul
lods
out
cmp
xor
outs
sbb
inc
cmp
jl
lods
xchg
pop
test
ins
into
ins
jp
je
sub
outs
push
inc
out
inc
dec
dec
dec
pusha
pusha
in
mov
xor
sub
mov
xor
dec
adc
aaa
adc
bound
cli
fisttp
add
cld
push
lods
(bad)
jle
push
adc
xchg
jl
xor
ins
imul
xchg
outs
dec
mov
idiv
push
outs
sbb
clc
bound
jle
stos
jmp
inc
mov
push
push
push
mov
push
mov
outs
xor
pop
outs
dec
push
jle
push
sub
cmp
cs
mov
je
and
inc
dec
adc
loopne
mov
dec
fisubr
jge
pop
pop
ror
jl
push
test
or
icebp
mov
pop
jbe
bound
xor
fadd
dec
bound
ss
into
xor
sbb
push
or
dec
mov
int3
jge
xor
adc
popa
nop
in
bound
and
xor
data16
sub
imul
or
outs
pusha
sub
and
sub
rcl
jmp
and
pop
cmp
data16
cmps
or
add
inc
(bad)
imul
inc
popa
inc
push
push
loopne
pop
fcom
lock
and
inc
pushw
aam
cld
es
fadd
pop
xor
pop
jne
xor
push
mov
je
sbb
arpl
add
scas
mov
jno
push
push
jae
xchg
cli
add
test
fbstp
jle
ins
jne
call
pusha
retf
(bad)
jae
dec
ins
inc
jno
mov
pop
xor
fcom
jne
inc
sub
je
inc
je
jl
pushaw
dec
ja
sub
imul
jae
ror
fs
ss
ret
inc
and
push
inc
jno
(bad)
fiadd
ins
xor
xor
adc
xor
xchg
add
in
lock
xor
sub
sub
inc
into
syscall
in
inc
enter
or
push
mov
inc
ins
jb
sbb
outs
xor
pop
(bad)
pop
pusha
ins
inc
fs
pushf
jo
adc
add
popa
inc
je
pop
jp
fiadd
dec
outs
jbe
push
ins
mov
xor
pop
xor
mov
dec
clc
sub
add
and
and
sbb
pop
mov
sbb
cmp
xor
push
mov
dec
ss
adc
pop
xor
outs
push
fsubrp
xor
outs
inc
inc
dec
dec
push
jno
jne
(bad)
jbe
add
outs
sahf
xor
jl
outs
jle
mov
cdq
les
xor
push
sub
push
inc
jge
(bad)
add
push
pop
shl
jbe
push
mov
stos
dec
push
ins
inc
sub
or
push
cli
ja
xor
jo
rol
sahf
imul
fild
pop
jle
dec
push
mov
fild
arpl
pop
jo
mov
or
scas
jne
dec
push
lock
inc
hlt
(bad)
mov
test
bound
dec
outs
dec
outs
inc
cmp
outs
push
push
push
inc
jle
sbb
pop
mov
pop
push
jle
ins
in
(bad)
mov
pop
xor
jb
ins
pop
dec
cmp
xor
xor
push
dec
mov
jbe
push
fidiv
jae
inc
outs
sub
mov
addr16
adc
test
jb
ins
adc
lods
or
dec
sar
outs
xor
push
dec
jl
push
outs
ja
imul
outs
ins
inc
jle
dec
mov
retf
mov
ss
outs
dec
and
dec
pop
push
push
pop
jp
push
push
xor
push
push
jle
mov
xor
xor
jo
dec
jl
push
(bad)
cmp
inc
imul
test
xchg
or
aam
push
or
das
mov
gs
outs
inc
rol
je
pop
aad
in
push
jo
jo
movs
fcmovnbe
sub
cmp
cmp
mov
bound
pusha
ss
inc
push
push
pop
call
push
jae
clc
xor
mov
dec
jle
imul
fild
dec
pusha
imul
mov
pop
jge
push
imul
or
ds
outs
sub
(bad)
fisubr
mov
popa
inc
arpl
dec
push
pop
inc
xchg
call
int3
js
push
push
push
jae
imul
or
jmp
or
ins
dec
push
or
cmc
jbe
inc
push
ss
push
and
imul
arpl
jb
dec
addr16
or
mov
push
dec
inc
movs
out
inc
jl
push
push
jl
inc
in
push
pop
rcr
push
je
clc
add
les
push
xor
push
inc
push
push
std
jl
inc
inc
xor
dec
mov
ss
inc
dec
xor
jl
push
push
jl
cmps
xor
jp
movs
pusha
cmps
dec
xor
push
cmp
push
inc
dec
gs
clc
jge
jb
sub
push
ror
sbb
fsubr
push
dec
call
arpl
push
inc
dec
aaa
sbb
inc
gs
loop
or
sub
jle
test
jo
fsubr
mov
addr16
push
dec
pusha
in
data16
sub
and
push
imul
repnz
outs
jge
out
xchg
or
dec
jbe
imul
rcl
inc
jl
push
push
and
cmps
jl
call
shl
xor
mov
arpl
inc
jbe
jbe
jno
fimul
adc
ins
mov
adc
call
inc
push
inc
xor
inc
dec
inc
cmp
arpl
and
jae
inc
inc
jno
outs
cmp
cmps
dec
or
popa
(bad)
push
push
push
inc
pop
xor
mov
lock
mov
ins
dec
pusha
inc
push
or
dec
js
inc
cmps
ss
xchg
mov
sbb
inc
bound
jle
lods
gs
popa
mov
(bad)
addr16
inc
push
push
inc
inc
imul
mov
add
mov
push
or
cmp
inc
ins
imul
sub
add
push
dec
hlt
cmps
add
arpl
je
shl
or
sbb
jl
loope
hlt
inc
xor
gs
push
push
dec
inc
adc
popa
outs
dec
pusha
mov
push
mov
xor
movs
xor
mov
jae
and
(bad)
mov
push
jmp
test
jae
mov
outs
inc
dec
jo
outs
jae
dec
fdiv
pusha
cmp
jp
fbld
add
inc
and
push
jne
inc
push
arpl
popa
mov
add
sub
sub
data16
ins
mov
ins
pop
jbe
pop
fs
ins
add
(bad)
cmp
aaa
outs
ss
inc
pusha
pusha
inc
ss
call
push
outs
jo
inc
mul
call
inc
pop
dec
xor
mov
je
inc
mov
popa
imul
inc
inc
jb
push
bound
adc
(bad)
ficom
ret
push
push
dec
push
jl
je
stos
add
xchg
sub
dec
sub
ins
fisttp
push
add
inc
and
inc
test
test
dec
outs
xor
pop
into
dec
inc
push
pusha
push
push
and
call
inc
sbb
pop
push
inc
add
pushf
pop
outs
mov
jae
movs
dec
outs
inc
inc
cmp
in
jp
add
scas
push
stos
pop
pop
pusha
jb
push
mov
sub
push
mov
and
inc
xor
mov
fwait
pusha
ja
call
push
push
ss
jo
add
lods
jle
or
dec
mov
retf
cli
ja
loop
bound
push
outs
inc
jbe
(bad)
mov
sub
ss
(bad)
stos
aam
xchg
arpl
xor
ins
bound
jl
mov
mov
sub
and
fsub
dec
xor
mov
adc
or
xor
bound
outs
loopne
xor
movs
aaa
sub
sbb
push
ins
adc
jb
pop
push
inc
xchg
pop
bound
cmc
bound
inc
inc
pusha
arpl
add
div
aaa
mov
jne
ret
sub
sub
jp
jae
push
mov
or
and
daa
mov
inc
or
push
inc
inc
adc
or
jb
push
adc
ror
sub
lods
jbe
or
push
stos
and
pop
push
pop
jb
dec
adc
mov
dec
pop
add
jno
dec
cmps
jo
pop
dec
sbb
int3
mov
pop
ror
xchg
ins
push
xor
dec
pop
popa
inc
push
sbb
into
push
stos
mov
(bad)
ja
aaa
jge
inc
bound
xchg
ss
adc
dec
push
addr16
jbe
mov
nop
xor
ret
jae
aaa
mov
or
dec
or
(bad)
push
mov
ficom
inc
arpl
aaa
bound
clc
dec
push
push
pop
ja
dec
jbe
push
push
and
push
xor
push
jb
fdiv
xor
pusha
dec
bound
push
outs
sbb
out
inc
push
pop
xor
inc
data16
inc
outs
jbe
mov
pop
sub
addr16
pop
xchg
sbb
or
pop
bound
cmp
test
dec
or
jb
(bad)
push
(bad)
push
inc
add
mov
cld
inc
jbe
sbb
dec
xor
scas
jo
in
inc
pop
dec
cwde
xor
sbb
dec
push
nop
dec
push
mov
mov
int3
ror
mov
mov
push
ins
add
sbb
dec
jae
inc
cmp
jae
(bad)
outs
cli
(bad)
mov
pop
push
jne
ja
pop
inc
pop
jae
loope
test
jne
ins
out
clc
outs
xor
push
mov
inc
jbe
xor
icebp
or
dec
push
xchg
pop
inc
ja
inc
data16
sub
sbb
jae
ret
xor
xchg
push
ss
inc
pusha
xor
push
cwde
mov
cdq
idiv
dec
add
shl
push
or
push
mov
lock
imul
cmp
nop
mov
xchg
outs
push
mov
pusha
dec
mov
popa
mov
push
sbb
push
fild
pop
add
dec
inc
and
in
sub
addr16
or
pop
into
xchg
pop
push
in
pop
xor
jo
pop
ss
cmp
imul
ins
push
inc
sbb
aaa
adc
pop
sbb
xor
outs
cmps
push
mov
push
push
jo
jo
mov
push
shr
jle
push
fs
leave
push
ja
sub
add
popa
adc
dec
pushf
xor
and
xor
js
mov
je
cmp
push
jno
ja
pop
cdq
add
fs
xor
cmp
push
outs
pop
gs
addr16
or
push
inc
arpl
inc
inc
mov
dec
icebp
push
add
mov
ins
jmp
aaa
retf
call
dec
sub
xlat
not
jl
mov
mov
cs
jnp
jl
jae
push
sub
ins
pop
es
ins
(bad)
jg
cmp
outs
je
inc
push
dec
sahf
aaa
push
push
adc
pop
gs
mov
je
inc
inc
std
ins
add
jae
cmp
jp
pop
and
stos
pop
ins
inc
outs
inc
push
push
pop
push
hlt
add
dec
push
push
dec
push
std
sub
push
push
mov
ins
ja
xor
(bad)
sub
jp
xor
imul
jle
imul
ins
push
pop
rcr
mov
dec
jno
jl
pop
inc
loopne
arpl
out
dec
pop
xor
sar
adc
inc
add
rcl
jne
inc
push
cmp
test
adc
jge
mov
inc
jb
push
sbb
ins
jbe
pop
inc
call
cmps
push
dec
inc
xchg
inc
push
xor
push
pop
or
jbe
jmp
test
(bad)
push
pop
lock
inc
fdivr
inc
push
pop
inc
xor
push
mov
cmp
dec
outs
mov
es
ins
push
pop
mov
ins
xor
and
pop
dec
push
or
dec
xor
sbb
jmp
(bad)
ja
push
adc
jmp
test
push
dec
hlt
cmp
loope
retf
mov
gs
push
imul
pusha
push
inc
data16
ja
aaa
outs
bound
pusha
data16
add
test
rcr
push
pop
sbb
pusha
shl
outs
mov
jle
jbe
test
pop
mov
push
push
push
cmp
in
and
jle
dec
out
xor
cld
jb
jl
in
call
fadd
dec
push
je
mov
push
(bad)
outs
test
je
mov
inc
push
dec
mov
fadd
and
push
or
dec
gs
into
and
popa
mov
sub
dec
jno
pusha
popa
mov
inc
js
lock
cli
inc
push
inc
popa
jne
jl
imul
cmp
push
dec
jno
ins
sbb
enter
aaa
sub
adc
sub
outs
mov
jno
(bad)
dec
push
push
push
retf
jno
xor
cmp
(bad)
mov
xor
je
sahf
pop
inc
fadd
cmp
sbb
imul
adc
fadd
push
push
ror
push
je
pop
inc
clc
imul
mov
add
or
pusha
je
ins
hlt
dec
push
dec
xchg
loopne
fldenv
sbb
jle
mov
in
mov
jo
dec
push
add
(bad)
ins
outs
cmp
outs
push
and
pusha
or
xor
je
push
test
dec
dec
fdiv
mov
push
and
aaa
push
mov
shr
arpl
data16
dec
gs
mov
pop
jo
dec
xor
pop
or
scas
nop
mov
dec
dec
xor
icebp
dec
dec
push
outs
gs
push
int3
inc
jbe
jl
xchg
outs
nop
dec
cmp
mov
push
cmp
or
aaa
cmp
jno
push
lods
xchg
in
cmp
inc
push
sahf
mov
clc
fwait
mov
jbe
pusha
inc
push
dec
pop
dec
dec
imul
and
data16
mov
cs
hlt
inc
bound
pop
add
sub
jae
nop
mov
lods
sbb
bound
mov
daa
(bad)
jae
xor
je
fimul
jo
jo
loope
push
push
push
inc
test
in
adc
arpl
jne
pop
jle
add
jbe
out
imul
push
cmp
cli
popa
jb
test
bound
dec
inc
rcl
push
ins
push
inc
dec
dec
cs
jo
bound
jo
sub
test
sub
push
xchg
sub
cli
adc
jae
mov
jb
push
arpl
gs
inc
inc
int
xchg
adc
cli
adc
dec
bound
push
jle
in
push
xor
dec
sar
add
bound
dec
inc
bound
bound
mov
inc
inc
xor
fnsave
push
push
pusha
ins
jmp
mov
push
mov
outs
outs
pop
outs
jle
ins
pop
rol
pop
push
popa
push
sub
push
xor
jae
nop
jbe
jp
pop
pop
dec
sub
je
xchg
mov
mov
ins
push
pop
clc
jmp
ins
imul
(bad)
jo
arpl
add
inc
xor
retf
dec
xor
push
jg
adc
jp
push
jge
ja
cmps
fistp
test
gs
gs
jno
js
push
pop
icebp
bound
jbe
pop
inc
jb
jb
push
clc
push
outs
outs
popa
arpl
in
aaa
add
mov
inc
fisubr
add
outs
push
je
push
push
sub
push
std
or
dec
arpl
mov
jae
std
mov
pop
dec
ja
pop
push
dec
fs
add
sub
push
inc
js
xchg
shr
sbb
dec
inc
push
sub
inc
add
xor
mov
push
mov
hlt
jb
dec
mov
clc
ins
inc
adc
xor
adc
popa
sahf
pop
xchg
add
pop
in
push
cmp
outs
or
push
mov
sub
jno
pushf
mov
or
jbe
jbe
bound
loopne
pop
inc
mov
push
xor
inc
addr16
inc
dec
mov
adc
dec
dec
pop
pop
jp
xor
inc
addr16
outs
pop
push
les
ins
(bad)
ins
dec
inc
sub
push
mov
dec
push
jno
add
inc
cmps
dec
(bad)
push
jl
dec
and
test
cmp
mov
adc
fisubr
loop
pusha
push
jne
xor
mov
sub
aaa
mov
inc
pop
jae
sub
and
mov
inc
xor
mov
pusha
sbb
sbb
fdiv
add
ret
sub
inc
jo
mov
add
test
push
dec
arpl
outs
adc
mul
and
xchg
mov
movs
dec
sub
push
adc
push
push
mov
sub
dec
dec
jne
int
outs
jae
out
jl
inc
je
dec
sub
outs
je
push
add
add
je
sub
mov
sub
inc
ja
ja
inc
imul
mov
xchg
pop
fs
repnz
bound
bound
dec
hlt
inc
pushf
dec
aaa
jb
xor
or
dec
adc
mov
nop
sbb
dec
dec
adc
dec
inc
xor
jne
inc
jo
push
jge
(bad)
add
xor
adc
or
mov
pop
mov
cld
rcl
mov
out
dec
dec
bound
pop
xchg
sub
cld
jae
cmp
pop
lods
push
dec
pusha
inc
xor
inc
and
mov
push
ret
into
(bad)
aam
push
inc
inc
popa
adc
jbe
imul
push
mov
jle
dec
pusha
aaa
aaa
dec
test
fidiv
inc
arpl
imul
sbb
jp
scas
into
inc
mov
outs
inc
nop
jae
inc
cmp
jl
pushf
xor
arpl
push
inc
mov
pop
push
jo
push
les
xchg
(bad)
jecxz
adc
nop
ins
mov
jbe
outs
xchg
adc
dec
and
mov
mov
xchg
xor
or
mov
pusha
inc
jno
xor
or
push
enter
jne
push
or
les
sbb
mov
push
arpl
imul
adc
ret
popf
xchg
ret
mov
dec
aaa
sub
cld
xor
std
pop
push
xor
pop
pop
bound
push
xor
xor
mov
pop
and
in
dec
inc
cmp
cwde
bound
dec
and
adc
inc
xor
and
mov
jle
scas
sub
jbe
pusha
inc
fimul
jge
push
jbe
add
push
xor
dec
cmp
ss
fild
jbe
dec
(bad)
outs
jno
jge
mov
mov
arpl
retf
and
xor
push
scas
push
jb
push
ins
imul
popa
je
lods
add
jle
inc
push
dec
xchg
out
imul
pushf
push
add
or
pusha
xor
shl
loopne
pop
fwait
adc
data16
jl
jno
imul
push
inc
bound
xor
adc
inc
(bad)
dec
loopne
mov
jae
mov
outs
add
sub
mov
ss
mov
add
ror
bound
movs
imul
push
call
out
dec
cdq
ss
les
dec
jbe
xor
push
ficom
in
fwait
pop
enter
push
ins
adc
adc
mov
popa
dec
lods
mov
or
sbb
jb
push
or
clc
mov
aaa
clc
jmp
jo
pop
sbb
movs
aaa
push
sbb
cli
dec
inc
sbb
nop
imul
push
mov
(bad)
fwait
mov
pop
jne
xor
outs
movs
rol
(bad)
xor
(bad)
not
add
fsubp
inc
pop
adc
dec
fidiv
call
fdivr
dec
(bad)
outs
in
in
mov
jbe
je
aaa
jno
inc
inc
dec
sbb
outs
addr16
push
add
dec
gs
ins
jl
shl
xor
dec
dec
dec
push
fdiv
inc
xchg
dec
jbe
inc
popa
push
dec
dec
aaa
xchg
sub
xor
xor
stos
lods
imul
or
sub
outs
ins
mov
mov
dec
xor
mov
dec
ins
adc
push
loope
push
cli
inc
sub
mov
adc
stos
or
cmp
and
arpl
test
shl
pop
dec
push
inc
outs
dec
sbb
inc
cmp
dec
js
sub
dec
imul
xchg
mov
xor
inc
jbe
xchg
out
push
xor
popa
aaa
push
push
push
es
xor
imul
fld
es
jne
fmul
pop
pusha
scas
jle
and
ins
jp
imul
xor
inc
call
(bad)
pop
inc
push
pop
inc
xchg
enter
ins
arpl
(bad)
cs
jp
dec
aaa
pop
retf
xor
push
jbe
mov
clc
mov
ss
je
imul
adc
mov
loopne
pusha
sbb
add
mov
dec
(bad)
push
xor
inc
cmp
ds
imul
inc
cmp
dec
arpl
inc
push
inc
mov
cs
mov
dec
push
mov
rol
outs
ins
ins
push
dec
inc
xor
sub
add
mov
push
push
es
pop
stos
or
ja
push
push
jne
push
xchg
push
adc
mov
jle
jg
je
jge
inc
ins
je
addr16
dec
inc
pop
push
mov
pop
jb
jle
jle
bound
or
inc
pop
dec
push
sub
push
inc
push
imul
pop
lea
inc
xor
dec
xor
xor
push
dec
ins
data16
add
ins
inc
push
clc
bound
add
gs
(bad)
cmp
rcl
sub
jge
jno
inc
shl
jae
push
fmul
mov
push
les
ins
xchg
aaa
or
test
sbb
add
nop
jle
pop
fiadd
outs
or
nop
cmp
xchg
jmp
inc
aam
mov
inc
jae
lods
pop
dec
dec
cmp
clc
pop
xor
inc
xchg
dec
dec
push
inc
xor
add
je
mov
mov
call
fadd
xchg
jmp
fisub
addr16
enter
pusha
hlt
mov
or
push
sub
jle
and
scas
inc
test
inc
sub
mov
outs
bnd
push
mov
clc
push
cld
dec
outs
dec
push
aaa
ins
popa
dec
mov
dec
je
or
or
ja
dec
dec
push
adc
cmp
xchg
fsubr
sbb
imul
out
data16
pop
xchg
mov
jo
dec
dec
inc
imul
ja
inc
scas
popa
mov
push
popa
leave
shr
push
xchg
or
add
mov
push
adc
data16
and
sub
jo
ss
adc
push
jae
push
shl
inc
push
xor
push
call
aaa
ror
inc
pusha
xor
jne
push
push
pop
je
cmp
cmps
ins
xor
test
push
push
outs
out
pusha
pop
inc
jae
dec
jp
or
push
clc
int3
(bad)
jg
retf
jl
push
xor
dec
je
arpl
mov
mov
pop
pop
pop
cmp
pop
cdq
mov
pop
jb
xor
mov
pop
inc
shl
xor
mov
dec
inc
rol
aam
inc
mov
inc
movs
jb
cld
push
xchg
jo
ret
mov
dec
xor
push
add
push
cld
adc
pop
clc
xor
add
sahf
add
push
int
xchg
je
push
dec
adc
data16
xchg
pop
inc
or
in
pop
test
fdiv
pop
sub
xor
push
ins
push
fisubr
push
int
jp
cld
jo
ja
ins
stos
test
ins
pop
add
(bad)
inc
xor
data16
cmps
outs
sbb
push
pop
xor
cwde
mov
pop
inc
jl
sbb
jle
mov
and
jbe
pop
inc
or
stos
jo
xchg
mov
pop
add
arpl
dec
jo
pop
outs
outs
dec
pusha
add
mov
pop
xor
xor
ret
mov
xor
cmps
in
add
idiv
cmp
push
adc
dec
stos
aaa
stos
jb
cmp
fmul
pop
push
sub
js
stos
add
into
pop
push
add
mov
ins
inc
cmp
imul
cmps
shl
mov
dec
pop
jno
pushf
sub
aad
inc
push
push
cmp
arpl
inc
xchg
or
outs
ins
jne
sub
je
or
aam
dec
inc
dec
lea
push
xor
push
sub
mov
pop
clc
inc
cs
bound
(bad)
jo
leave
sar
jb
xor
jl
or
pusha
in
mov
pusha
xchg
mov
inc
jge
xor
ins
dec
into
adc
push
jle
pop
shl
outs
popa
adc
dec
cmps
mov
les
dec
jbe
mov
retf
jle
imul
xchg
addr16
push
dec
jle
lock
xor
push
shl
pop
add
out
xchg
(bad)
dec
dec
pusha
add
xchg
ret
xchg
imul
dec
push
ins
sub
dec
add
aam
xchg
loope
je
inc
push
stos
pop
inc
inc
inc
push
pop
cmp
mov
push
outs
xor
push
push
sbb
fnstcw
cli
in
dec
dec
dec
ret
and
or
jae
data16
inc
or
outs
aaa
and
push
ins
cmp
cmp
add
xchg
nop
(bad)
mov
lock
ss
clc
cmp
pusha
jbe
jno
push
xor
adc
and
sar
adc
dec
xor
dec
fs
mov
jl
push
fs
mov
mov
xor
jge
hlt
pop
pop
addr16
pop
push
push
jae
jp
call
pusha
dec
push
jl
jl
xchg
arpl
jae
jbe
or
lea
dec
outs
push
pusha
pusha
je
jne
into
mov
sub
and
push
pop
div
push
ret
add
cmp
cmp
stos
mov
outs
test
pusha
dec
jo
and
call
mov
push
je
push
popa
push
imul
jbe
add
push
mov
dec
popf
nop
(bad)
ins
bound
inc
dec
push
loope
push
js
in
mov
fisubr
sbb
jae
outs
call
data16
cmp
ins
scas
inc
stos
push
pop
sub
pop
out
ins
dec
bound
xor
sub
dec
imul
pop
push
cwde
mov
jb
mov
lods
jno
inc
imul
movs
jo
popa
or
add
mov
push
dec
inc
adc
gs
jbe
imul
fdiv
add
dec
gs
push
test
xor
inc
retf
xor
push
aaa
add
dec
add
shr
mov
outs
dec
dec
jbe
ror
add
push
ins
outs
jle
ins
xor
push
ins
jge
dec
bound
pop
ins
xchg
xor
inc
adc
jbe
jb
dec
pop
adc
mov
cmp
imul
call
inc
into
cmps
ja
clc
push
cdq
cwde
fisubr
push
fwait
or
inc
jbe
sub
inc
jo
inc
push
std
outs
jb
bound
outs
pop
outs
bound
ins
dec
outs
mov
jle
push
push
std
pop
sbb
push
arpl
inc
outs
jl
dec
cmp
test
cmp
addr16
retf
jbe
sbb
xor
sbb
inc
sub
push
lods
push
xor
dec
je
mov
jbe
cwde
inc
mov
xor
dec
cmp
mov
outs
push
pop
ins
push
outs
jno
xor
mov
push
js
neg
ret
xor
inc
sub
ins
shl
cmp
push
xor
inc
dec
in
dec
ins
or
add
fimul
int3
popa
inc
sub
scas
add
xor
cmp
jg
loope
jl
jb
jb
das
add
or
adc
mov
hlt
fist
dec
pop
dec
test
jno
je
dec
ins
pusha
bound
ret
popa
and
(bad)
jle
xor
dec
pop
or
icebp
xor
ins
jb
inc
push
pop
pusha
push
and
inc
cmp
gs
cmp
pusha
inc
add
push
and
dec
jae
outs
xor
jb
pop
add
dec
add
scas
stos
or
push
xor
mov
xor
pusha
xor
outs
or
push
pop
sub
ds
mov
sub
outs
cmp
jno
push
dec
and
ja
push
pusha
adc
sub
push
pop
inc
inc
push
fidiv
dec
arpl
push
loop
xor
pop
sub
jo
data16
xor
sbb
imul
clc
sbb
dec
inc
ins
pop
ins
inc
xor
(bad)
adc
arpl
push
jb
dec
sbb
dec
jle
push
xchg
or
sbb
lods
outs
push
mov
push
out
cli
push
add
xor
test
scas
mov
outs
inc
jb
push
jl
lods
push
shr
push
bound
cld
push
ins
pop
xchg
sub
cs
cmp
push
xor
cmp
aaa
inc
jae
mov
rcr
data16
pop
ja
push
push
sbb
xor
push
sub
xor
xchg
jge
fwait
sbb
(bad)
xor
inc
pop
sub
pop
or
push
call
add
call
mov
jb
xor
push
inc
and
pop
movs
fisttp
shl
xor
cmp
add
mov
bound
std
das
in
push
inc
inc
inc
jl
inc
dec
dec
scas
or
push
mov
inc
inc
jae
xor
dec
fwait
stos
nop
inc
and
xor
or
mov
add
cmp
cmp
test
fmul
pusha
outs
push
push
xor
div
dec
pop
mov
xor
push
ds
shl
jo
fidiv
retf
jmp
jb
je
call
retf
dec
inc
pusha
inc
cmp
popa
jle
jl
pop
push
dec
add
pop
out
xor
xchg
add
addr16
and
jbe
push
fsub
movs
push
jne
xor
pop
stos
dec
rcr
dec
int3
call
dec
push
loop
push
out
inc
(bad)
imul
push
jbe
mov
mov
xor
mov
imul
inc
inc
pop
cmp
and
xor
or
push
sub
push
dec
push
in
xor
outs
clc
pushw
xchg
fidiv
mov
jne
jbe
es
pop
rol
pop
push
add
push
int3
pop
xor
jb
jbe
jno
adc
fs
xchg
fucom
(bad)
stos
dec
sub
popa
pop
xor
pop
ret
cwde
push
jo
dec
and
sbb
xor
jge
push
xchg
cmp
outs
dec
cmp
pop
or
jge
pop
xor
test
mov
push
inc
push
xor
fs
pop
dec
dec
push
adc
sub
xchg
xchg
bound
mov
dec
cmp
out
add
in
pop
cmp
nop
push
bound
jp
dec
pop
jl
jb
bound
mov
xchg
enter
outs
fwait
and
ins
addr16
gs
jle
sub
or
ss
push
dec
inc
loopne
sbb
adc
(bad)
shl
enter
push
(bad)
dec
jmp
pusha
jne
call
push
mov
xchg
retf
ins
shl
pop
je
jl
rcl
push
dec
clc
mov
sbb
mov
out
mov
daa
fsub
push
inc
cmp
pushf
ins
dec
lock
arpl
add
xor
gs
adc
cmp
xor
imul
neg
inc
(bad)
push
dec
aam
mov
sbb
and
outs
fcomp
inc
jbe
cld
fcom
mov
xor
inc
ins
inc
aad
pop
add
inc
push
inc
cmc
scas
xchg
bound
dec
dec
jle
xor
xlat
data16
pop
inc
push
mov
adc
add
and
sbb
mov
mov
sub
cmps
pop
dec
inc
mov
push
xor
inc
sbb
loopne
jae
ret
sbb
mov
outs
push
popa
inc
inc
jge
add
sbb
add
or
add
push
mov
push
mov
ins
jb
ins
jo
jo
fadd
and
jae
ja
ficomp
dec
dec
adc
shl
inc
inc
hlt
jl
inc
or
mov
pop
dec
std
mov
pop
xor
jne
shl
push
push
gs
addr16
out
jb
cwde
gs
push
lods
inc
or
ror
dec
push
int3
xor
cli
bound
jbe
sbb
inc
xor
xor
loopne
arpl
pop
(bad)
int3
mov
pusha
xchg
push
push
js
pop
pop
push
inc
push
push
test
xchg
and
cs
je
push
in
sub
xchg
arpl
(bad)
pop
out
xor
inc
push
inc
jno
dec
imul
dec
cld
fsub
pusha
inc
aam
dec
push
xor
rol
inc
pop
mov
xor
cdq
dec
fsub
cld
jb
ss
ds
add
push
stos
mov
aaa
push
mov
retf
mov
push
jno
cmp
cmps
push
xor
mov
inc
test
push
or
inc
movs
loopne
push
and
mov
jb
hlt
inc
bound
xor
dec
inc
clc
and
pop
jp
dec
xor
or
push
push
aaa
push
jb
push
pop
push
pop
jo
xor
pop
xor
pop
jae
mov
xor
inc
mov
pop
and
ins
mov
and
add
adc
outs
(bad)
jle
int
inc
cwde
push
cli
popa
jl
inc
and
rol
dec
out
out
xchg
pusha
xchg
push
push
rol
sbb
aam
lods
jb
jae
aaa
aaa
inc
xor
shl
inc
ss
test
scas
adc
test
ins
bnd
inc
pop
mov
push
jae
adc
inc
pop
pushf
push
outs
jge
ds
adc
lods
xor
push
popa
fmul
xchg
test
push
push
or
mov
inc
bound
ins
xchg
dec
add
jae
std
fild
(bad)
dec
addr16
push
imul
mov
test
pusha
je
dec
outs
xor
push
push
int3
shr
inc
cmp
mov
cwde
pop
inc
in
push
aad
shl
mov
pop
add
inc
jle
jl
jo
sbb
jno
pusha
inc
imul
dec
mov
popa
push
ins
fsubr
push
inc
jno
clc
jb
pop
shr
ror
jge
dec
inc
jne
xor
not
retf
pop
je
mov
inc
dec
imul
push
dec
jp
sub
imul
and
mov
arpl
addr16
xchg
dec
push
imul
imul
mov
add
shl
arpl
in
mov
bound
mov
test
shl
dec
xor
movs
dec
sbb
gs
adc
push
jge
arpl
inc
arpl
dec
sub
sbb
jecxz
jb
mov
xor
adc
loope
xor
dec
sub
js
ds
push
inc
inc
dec
cwde
mov
mov
push
ror
add
outs
inc
mov
gs
mov
outs
add
(bad)
ins
push
mov
or
inc
jb
pusha
(bad)
dec
sbb
mov
loopne
push
cmps
mov
mov
arpl
pop
ja
push
add
bound
jb
lds
inc
ror
ins
add
outs
aaa
into
mov
pop
dec
jno
push
xor
or
and
ret
and
je
ins
jne
push
mov
dec
shl
mov
aad
xor
pushw
outs
shr
loop
push
data16
add
cmp
movs
mov
push
inc
out
push
outs
xchg
xchg
call
ficom
add
jno
dec
popa
cmp
lods
xor
ja
inc
pop
push
push
mov
push
inc
xor
jmp
rcr
adc
nop
xchg
outs
dec
mov
push
and
inc
push
ins
push
or
and
outs
xchg
(bad)
mov
xor
pop
addr16
xor
push
retf
cmp
cmp
cli
add
add
push
pop
test
lods
mov
pop
ins
xor
dec
push
je
jne
ret
or
ins
dec
jl
imul
xchg
push
push
xor
cmp
inc
pop
in
clc
das
sub
bound
jl
inc
inc
dec
push
imul
call
xchg
cmp
sub
dec
outs
outs
imul
lods
xchg
push
jp
inc
mov
outs
xor
pusha
adc
sbb
dec
in
fisub
cmp
pop
hlt
push
dec
xor
pop
mov
jge
mov
inc
shr
xor
push
jne
loop
adc
and
mov
bound
dec
push
or
inc
xchg
out
movs
dec
sub
dec
ja
xchg
cmp
ins
xor
or
sub
sahf
cs
sub
dec
sbb
push
xor
xchg
pop
retf
enter
push
and
sub
sbb
add
dec
test
push
jl
sub
popa
and
ins
sbb
loop
push
aam
stos
movs
aaa
jl
into
sub
fs
ins
xor
cmp
icebp
aaa
mov
cmp
outs
or
push
push
or
or
push
sub
mov
and
dec
jbe
outs
ins
fcom
fwait
mov
xor
pop
and
arpl
loop
push
outs
push
bound
push
adc
jbe
or
mov
xlat
inc
push
fwait
hlt
inc
push
clc
jne
aam
mov
jp
xor
dec
inc
push
pusha
bound
cs
xor
or
data16
pop
ins
aaa
ins
inc
or
add
inc
push
fdiv
sbb
stos
pop
cwde
dec
aam
cmps
xor
dec
inc
push
gs
add
and
jno
and
pop
ja
sahf
lock
jle
mov
or
ins
xor
cmps
inc
push
jno
mov
inc
lea
xor
enter
fild
and
(bad)
push
cmp
pusha
outs
gs
les
outs
in
in
in
pop
mov
jl
push
jge
ins
addr16
out
xor
jl
or
jb
push
inc
test
(bad)
mov
and
bound
inc
xchg
leave
mov
jbe
inc
push
push
jle
and
pusha
xor
or
push
sub
sbb
repnz
cmp
dec
imul
and
and
pop
xchg
xchg
es
pop
inc
pop
add
inc
inc
pop
les
dec
push
xor
mov
movs
(bad)
or
int3
mov
into
or
pop
adc
arpl
fadd
inc
cdq
outs
adc
pusha
inc
outs
or
rcr
jl
add
mov
inc
pop
data16
dec
outs
ret
stos
or
fidiv
jge
jno
pusha
add
dec
jne
aaa
cmp
and
and
shl
xor
dec
pop
sbb
xor
bound
jno
ja
ficomp
dec
inc
xor
xor
push
cs
dec
hlt
dec
dec
inc
imul
mov
mov
outs
imul
jle
fst
push
imul
pop
dec
outs
sub
loop
outs
retf
cs
into
ins
push
dec
adc
inc
rcr
push
dec
out
call
sbb
mov
sub
sbb
push
mov
test
dec
inc
push
inc
jae
xor
add
sbb
rcl
pop
cmp
shl
push
out
dec
mov
lock
jo
les
xor
jne
jbe
inc
push
inc
bound
lock
xchg
mov
cli
dec
sbb
jecxz
fisubr
int3
push
xor
ss
ss
mov
pusha
pop
gs
add
test
dec
xchg
or
inc
hlt
cmp
push
aaa
call
movs
ins
hlt
jl
bound
mov
pop
inc
pop
bound
dec
push
jno
push
or
nop
adc
push
add
outs
or
mov
push
clc
popa
add
inc
mov
arpl
ret
push
dec
push
jo
mov
jo
lods
push
push
push
mov
push
push
pop
cmc
or
inc
inc
ins
outs
test
dec
imul
and
loopne
aam
mov
pusha
jb
push
xor
inc
mov
mov
xchg
xchg
xor
shl
fs
jae
or
mov
retf
cmp
push
ins
push
outs
push
dec
dec
inc
ins
arpl
aaa
jle
imul
ret
mov
xor
aam
mov
sbb
xchg
dec
jne
push
add
adc
pop
and
dec
je
dec
ror
add
sbb
push
ss
fs
pusha
pop
sub
xor
and
xchg
mov
mov
jp
xor
sar
mov
pop
add
mov
out
sub
mov
push
pop
push
aaa
xor
sub
xor
push
mov
movs
xchg
inc
xor
jae
mov
xor
xor
mov
js
cmp
popa
sub
jae
cmp
arpl
sub
mov
inc
dec
inc
inc
push
pusha
cs
adc
push
sub
sub
add
outs
xor
jo
imul
adc
jne
pop
ins
inc
sub
sub
add
into
push
push
or
push
popa
or
ins
push
add
jg
push
push
and
ss
inc
imul
mov
dec
(bad)
out
mov
push
or
add
jle
aad
test
push
add
inc
popa
mov
xchg
inc
inc
(bad)
jl
mov
(bad)
imul
mov
or
ins
(bad)
push
push
jo
aaa
movs
gs
push
popa
xor
inc
push
xor
push
push
(bad)
hlt
push
icebp
sub
xor
adc
int3
push
into
movs
sub
inc
xor
pop
push
xor
sub
dec
ret
jbe
jae
push
and
fdivr
cli
aad
ja
dec
jle
cmp
pop
or
nop
outs
outs
jl
sub
je
push
xchg
inc
inc
jbe
ror
sub
les
outs
scas
pop
dec
jle
fiadd
jge
(bad)
outs
pop
xor
fs
inc
dec
inc
pusha
bound
xor
ja
push
push
push
ins
mov
(bad)
test
push
aam
inc
pop
dec
js
je
outs
jmp
push
arpl
dec
retf
rol
inc
outs
xor
test
(bad)
ja
fsub
dec
ins
fisub
push
push
jb
push
inc
fisubr
arpl
int3
push
cmp
pop
arpl
cmp
push
dec
test
jno
cmp
dec
jb
imul
pop
das
ret
inc
je
xchg
dec
popa
scas
xor
ins
test
adc
adc
sbb
jbe
cs
outs
xor
jge
xor
mov
inc
or
int3
call
xchg
push
cdq
inc
scas
pop
inc
cmp
addr16
and
ins
lock
xor
sbb
cmps
and
jb
mov
xor
js
dec
pop
push
push
jle
jge
jno
shr
add
scas
les
and
push
arpl
mov
jne
test
mov
and
cli
(bad)
push
jae
inc
pusha
push
push
lds
add
jae
jb
xor
mov
pop
pusha
call
jb
inc
push
or
test
inc
push
xor
and
jbe
jo
jo
jp
gs
jo
xchg
movs
pop
push
jge
add
outs
gs
outs
push
xchg
loop
lock
xor
cmp
mov
inc
push
je
dec
outs
cmp
sub
and
and
jbe
and
jge
mov
ins
sbb
xchg
xchg
mov
out
cmp
push
je
movs
ja
popa
mov
sub
push
pop
dec
push
int3
clc
sbb
popa
xor
inc
nop
or
cs
aaa
outs
dec
outs
pop
call
inc
xor
retf
add
xor
pop
ret
push
inc
or
fwait
in
addr16
pusha
pop
push
jno
xor
dec
gs
push
push
imul
dec
les
push
jb
dec
outs
dec
fisttp
dec
push
data16
je
aam
jge
loopne
sbb
fadd
gs
movs
outs
outs
adc
push
jge
ins
inc
dec
test
sub
mov
test
jle
inc
push
(bad)
push
jp
xor
sub
es
mov
cmp
xor
sub
bound
sub
jl
jne
dec
call
push
mov
dec
adc
or
xor
add
jmp
mov
mov
inc
and
ins
sahf
cmp
add
fidivr
push
inc
xor
(bad)
shl
add
xor
cmp
or
inc
xor
loopne
imul
imul
add
shr
dec
push
pop
add
shr
scas
push
xchg
ins
dec
je
js
mov
arpl
loopne
ficomp
adc
dec
cmps
bound
or
test
pop
xor
gs
bound
ds
mov
xchg
lock
jl
push
jb
dec
inc
inc
and
(bad)
xor
sbb
sub
dec
inc
sub
je
push
cdq
or
jbe
call
jb
aaa
and
sbb
mov
pop
jo
xor
outs
xor
inc
nop
add
push
call
push
fmul
pop
jl
xor
mov
jne
and
add
sbb
out
push
pusha
pusha
add
jbe
cmp
and
jge
xor
shr
shr
push
aad
pop
mov
ss
push
mov
pop
jbe
cmps
jo
test
test
push
inc
inc
clc
pushf
ret
sbb
or
jl
xor
cmp
push
lea
or
pop
pop
jo
jo
jl
adc
pop
cmp
pop
dec
lea
adc
adc
cmc
(bad)
push
add
inc
ja
data16
pop
add
dec
xor
fsubr
popa
outs
mov
push
inc
sbb
inc
mov
fiadd
mov
arpl
mov
jne
inc
cmp
xor
call
hlt
cmp
imul
mov
xor
loopne
jbe
dec
jle
popa
push
pop
pop
ins
cmps
push
dec
arpl
push
xchg
ror
dec
bound
adc
pop
mov
pop
xchg
push
clc
inc
bound
pusha
cwde
fimul
add
push
add
ret
out
rol
inc
jae
and
jbe
pusha
xor
push
and
jae
push
sub
ins
inc
bound
pusha
pop
shl
dec
call
pop
data16
cmp
dec
push
mov
stos
xor
gs
sub
mov
fs
imul
test
or
inc
fcom
fld
or
shr
test
lock
xor
push
jl
jb
add
jne
shr
cld
pop
jmp
jmp
mov
aaa
xor
adc
test
inc
repnz
bound
and
or
mov
jge
ja
(bad)
push
dec
jo
dec
xor
ins
test
xor
xor
jp
dec
fnstenv
mov
dec
bound
rcl
ret
into
dec
adc
inc
bound
adc
gs
inc
add
loopne
ret
pop
imul
cli
ins
add
xor
inc
mul
pop
mov
pop
or
xor
gs
pop
push
jmp
xor
dec
push
cmp
push
hlt
pop
aaa
mov
repnz
xor
push
adc
and
ss
inc
addr16
inc
ss
lods
inc
jmp
mov
aaa
dec
inc
dec
pop
ins
out
xchg
rcl
or
test
mov
dec
add
jo
mov
ins
dec
jle
xor
xchg
dec
push
xor
or
aad
adc
rol
push
add
test
push
ins
inc
dec
je
pop
push
mov
mov
xor
mov
jmp
aaa
xor
xor
arpl
xor
sar
aaa
jno
(bad)
xchg
je
add
cmp
and
push
push
mov
test
int3
add
icebp
ins
push
xchg
addr16
into
cmp
sahf
mov
dec
xor
xor
xor
add
or
adc
dec
and
sub
sub
test
shr
pop
pop
xchg
test
inc
push
xchg
fwait
test
jle
pusha
imul
sub
cmp
pop
push
dec
dec
in
enter
push
dec
adc
pop
add
jne
mov
mov
cli
dec
jl
inc
push
push
sbb
data16
pusha
inc
mov
jne
outs
push
in
sub
push
xor
dec
push
sbb
data16
xor
pusha
pop
xor
jle
dec
inc
xor
dec
cli
xor
es
jne
adc
rol
push
jae
dec
jno
xchg
push
push
loopne
dec
jo
dec
aaa
inc
push
in
pop
outs
arpl
ret
push
fwait
or
pop
jo
dec
cmp
xor
adc
cmps
xor
ins
ins
and
push
inc
outs
cli
mov
ja
dec
dec
push
push
pop
inc
dec
dec
es
popa
dec
leave
inc
je
push
inc
jp
sub
mov
jbe
outs
addr16
push
add
fs
dec
ins
jge
dec
inc
add
jg
sub
inc
pusha
data16
push
imul
dec
inc
loop
mov
arpl
imul
out
inc
cmp
xor
sbb
xor
je
inc
loop
xchg
pusha
dec
jb
jle
dec
ins
frstor
inc
test
ins
xlat
ja
jae
sub
jmp
mov
or
jl
inc
adc
or
rcr
addr16
inc
jg
stos
adc
shr
outs
push
sbb
sbb
inc
push
xchg
dec
sahf
fdiv
mov
imul
pusha
dec
ss
call
arpl
fimul
pop
push
es
mov
test
push
jle
mov
cmp
dec
cmp
mov
jbe
inc
ins
ins
inc
les
jne
or
inc
dec
mov
or
sar
dec
hlt
add
jl
push
ins
jb
push
outs
inc
push
xor
add
add
outs
mov
out
inc
outs
inc
ins
bound
push
add
(bad)
repnz
cs
jno
stos
stos
mov
mov
add
xor
sbb
or
call
rcl
mov
or
adc
in
adc
push
dec
xchg
ss
push
ja
fstp
jbe
xor
adc
aaa
outs
outs
sub
lods
out
je
data16
cmc
ja
inc
jne
inc
inc
outs
imul
pop
push
imul
fwait
jmp
or
xor
ja
cmp
(bad)
sbb
popa
addr16
dec
ins
outs
bound
test
sub
cs
sbb
adc
ins
je
xor
bound
enter
jmp
jmp
cmp
sbb
cmp
lods
mov
xor
or
popa
enter
call
jbe
jl
bound
imul
or
lock
popa
ja
jge
and
sub
cmp
xchg
mov
xchg
enter
xchg
loope
add
bound
call
mov
push
sbb
test
popa
mov
clc
inc
push
arpl
imul
pop
mov
loop
rol
pop
push
push
xchg
mov
inc
push
addr16
sahf
xor
daa
or
ds
or
push
imul
cwde
pop
and
inc
xor
scas
pop
lods
sub
jle
push
xor
cmc
inc
je
dec
fidivr
jbe
mov
les
rcr
jo
inc
dec
dec
inc
jno
sub
ret
xor
dec
sub
inc
dec
pop
xor
pop
aaa
fisttp
lock
inc
ins
pop
xor
or
movs
ss
xor
cwde
jbe
mov
dec
popaw
xor
scas
xchg
(bad)
gs
mov
outs
sahf
jb
arpl
mov
push
push
inc
push
popa
push
inc
mov
pop
xor
push
dec
test
shl
add
test
mov
mov
inc
popa
cmp
sub
mov
loope
inc
and
popa
jg
and
jl
jno
jo
popa
pop
push
(bad)
adc
push
push
inc
ins
ss
jae
ja
inc
and
adc
stos
mul
pop
dec
push
push
ret
fisub
(bad)
pop
mov
cli
push
inc
outs
jo
push
mov
data16
dec
xor
push
aaa
xor
mov
xchg
dec
inc
in
inc
sub
fisubr
dec
sub
mov
bound
sbb
or
push
jo
pop
push
adc
mov
cmp
adc
or
test
inc
adc
ins
push
push
dec
xor
cmp
jg
xor
dec
xor
sub
pop
or
fiadd
and
ins
add
pop
outs
push
ins
je
ins
push
pop
pop
imul
xor
fisttp
bound
jae
ins
jge
push
fwait
sub
push
xchg
loopne
and
push
xor
push
dec
popa
in
mov
imul
fcom
sub
pop
xor
inc
xor
sbb
push
push
add
jae
xchg
outs
dec
pop
jmp
xor
xor
xor
outs
jae
mov
or
fisub
repnz
dec
mov
ins
ins
jae
pop
test
scas
push
dec
cs
sub
add
inc
stos
aad
hlt
mov
mov
inc
stos
mov
outs
inc
push
adc
jb
ins
dec
inc
jge
inc
dec
dec
test
push
fmul
ss
sub
or
mov
mov
push
and
jne
outs
push
callw
int3
xor
dec
and
aad
bound
add
pop
lods
outs
push
jb
pushw
xor
jl
xor
(bad)
fs
push
jecxz
fistp
adc
bound
jge
jl
aas
ficom
cld
jae
pop
pop
jno
push
(bad)
push
jo
push
data16
xor
bound
jo
js
sub
inc
jl
pop
pop
inc
xor
mov
push
dec
pop
jae
adc
stos
dec
sub
add
xchg
mov
cld
xor
jbe
xchg
xor
movs
xor
adc
lods
mov
jbe
cli
idiv
bound
jb
jne
dec
outs
jne
or
mov
pop
jb
and
hlt
inc
jbe
xchg
popa
xor
push
lock
push
jne
cmp
dec
imul
xchg
retf
aam
ja
jae
add
xor
cmp
aam
sbb
enter
mov
sbb
push
mov
mov
push
or
inc
mov
(bad)
and
push
inc
mov
dec
mov
pusha
or
jno
xor
mov
jo
retf
add
xor
or
mov
popa
lds
cmp
mov
xor
test
outs
inc
dec
jae
dec
push
pop
dec
push
push
cld
xor
mov
data16
dec
jb
stos
add
sbb
bound
movs
cmc
frstor
dec
inc
arpl
jp
or
add
mov
jl
inc
or
mov
jo
cmp
fsub
outs
cmp
popa
push
push
dec
pusha
icebp
mov
jge
push
fs
xor
call
ret
jbe
mov
mov
in
dec
cmp
xchg
xor
push
inc
fsubr
cli
xchg
xor
inc
data16
outs
dec
fadd
xor
je
jbe
dec
int3
inc
pop
or
ss
outs
jo
push
push
(bad)
loop
dec
push
add
push
pop
js
add
lock
push
dec
addr16
bound
jl
or
add
push
xor
sub
out
loop
push
xor
movs
sub
add
je
sti
outs
fcomp
pop
bound
jbe
inc
inc
sahf
and
push
add
cmp
dec
mov
pop
xor
jo
loopne
pop
and
jmp
sahf
cmp
mov
push
rcr
add
(bad)
imul
bound
pusha
inc
dec
mov
jbe
fild
es
gs
inc
out
dec
ss
cmp
sbb
int3
dec
pop
je
fsub
mov
cmps
hlt
or
push
fist
push
dec
jo
jle
sub
sub
jl
dec
jge
cs
or
add
addr16
or
in
add
sub
pop
inc
imul
dec
pop
mov
inc
xor
or
adc
test
cmp
xchg
xor
pop
xor
imul
imul
mov
dec
aam
sar
push
mov
push
push
inc
add
ja
sub
push
xor
ss
inc
or
sbb
call
bound
mov
out
imul
ins
add
sahf
or
xor
pop
pop
push
push
push
sub
mov
lock
push
cmp
pop
or
or
cmp
outs
inc
sub
push
jb
call
gs
push
addr16
add
push
mov
xor
mul
push
adc
scas
push
or
lock
mov
inc
push
mov
adc
or
xor
mov
pusha
pop
icebp
push
jo
jb
pop
jno
stos
test
inc
inc
or
cld
test
push
jo
cmp
inc
ror
out
dec
in
pop
jo
sbb
dec
ja
rcl
es
mov
push
int3
outs
and
inc
xlat
bound
dec
arpl
mov
pusha
cmp
jl
popa
jno
sbb
push
dec
push
dec
mov
pop
or
popa
sbb
mov
cmp
jno
(bad)
sbb
inc
ja
arpl
dec
mov
adc
pop
dec
outs
dec
inc
xor
shr
push
repnz
mov
mov
out
adc
ss
or
adc
popa
inc
jo
xor
pop
jl
inc
push
ins
push
inc
xor
pop
(bad)
mov
sbb
test
mov
lds
aam
dec
sbb
push
pop
adc
les
stos
imul
inc
push
ret
cmp
mov
in
add
mov
adc
dec
std
stos
nop
fsub
push
ss
pop
cmp
popa
aad
or
aam
sbb
fstp
pop
dec
and
jle
cmp
es
outs
dec
mov
gs
(bad)
lock
inc
pop
imul
ins
xlat
add
rcl
mov
dec
xor
je
cli
inc
xor
inc
push
xchg
and
adc
adc
mov
mov
push
sub
mov
outs
dec
(bad)
cli
popa
dec
test
sbb
push
sub
push
and
add
dec
push
sbb
add
imul
or
gs
sub
dec
imul
arpl
dec
xor
mov
inc
dec
popf
mov
inc
dec
fisubr
sbb
push
jge
add
dec
pop
or
inc
push
pusha
adc
ins
mov
jo
mov
mov
test
mov
cli
stos
or
pop
lock
xor
test
sub
jno
je
mov
sbb
mov
sbb
les
push
jbe
cs
xchg
dec
ins
dec
cmp
mov
push
jb
sub
dec
push
cmp
push
pop
mov
cmp
push
inc
ret
sub
(bad)
in
jb
xor
jl
imul
inc
inc
aaa
sbb
and
xor
and
xor
cmp
sub
int3
jge
je
(bad)
int3
les
lock
movs
add
xor
push
push
pusha
dec
dec
push
ins
gs
data16
pusha
jo
retf
lods
dec
dec
adc
pop
add
outs
ret
mov
inc
(bad)
xor
inc
pusha
je
mov
or
xchg
into
push
sub
aam
xor
jae
and
inc
cmp
lock
push
push
push
inc
jl
(bad)
ja
xor
jo
arpl
push
cmp
sbb
dec
je
ins
adc
jbe
pop
test
inc
inc
inc
(bad)
jmp
or
dec
pop
and
inc
shr
xor
push
push
sub
loopne
data16
and
inc
add
adc
ret
pop
inc
test
jle
push
ins
outs
jne
xchg
mov
inc
jl
cmp
stos
js
push
jae
mov
sar
inc
dec
bound
dec
sbb
pushf
mov
(bad)
je
pusha
lea
mov
in
push
aam
jb
js
(bad)
or
mov
jb
inc
gs
push
pop
xor
adc
cli
and
aad
ja
dec
jno
imul
inc
mov
jbe
sahf
push
and
push
imul
mov
aaa
outs
jle
cmp
inc
push
ds
popa
xor
nop
push
push
outs
mov
add
push
test
ins
xor
ret
sub
call
push
sbb
inc
mov
sub
mov
jbe
xor
or
mov
ins
dec
sbb
fmul
and
xor
pusha
mov
dec
mov
pop
addr16
push
ins
or
add
inc
cmp
jb
clc
sub
jae
es
test
fcom
add
test
push
outs
push
popa
dec
pushf
fs
scas
scas
wbinvd
xor
gs
add
push
jo
jne
jle
sub
push
in
push
dec
hlt
outs
cld
call
jno
jge
jl
pop
test
je
cmp
cmp
mov
ja
adc
popa
inc
imul
xor
inc
push
push
push
ins
xor
adc
pop
addr16
push
cmp
xor
jbe
jmp
lods
out
or
ja
ins
pop
mov
jno
pop
dec
jmp
jo
mov
jge
push
lods
ins
xor
jno
push
dec
pop
int
sbb
mov
mov
jno
dec
push
arpl
aad
jmp
cmp
getsec
xor
inc
pop
cmp
dec
add
or
cmps
addr16
jle
pop
cmp
push
pop
cmp
push
inc
and
imul
je
pop
call
jno
xor
sub
lock
push
ss
imul
xor
pop
cmp
push
sbb
imul
jl
je
sar
sbb
add
outs
mov
lock
xor
push
jbe
adc
retf
mov
dec
cld
jp
sub
call
push
pop
sahf
xor
mov
fidiv
sub
mov
xor
push
push
inc
or
sti
stos
enter
dec
push
jbe
iret
imul
adc
jb
pop
inc
jae
test
xchg
cwde
retf
cwde
or
inc
pop
sub
add
cmp
mov
dec
rol
inc
pop
imul
jecxz
loop
jo
clc
jno
pusha
mov
inc
push
cmp
sub
push
xor
inc
repnz
movs
pop
adc
jge
jl
cld
xor
outs
push
pop
and
mov
mov
jbe
pop
push
push
inc
dec
push
cwde
or
cmc
ja
popa
adc
xor
inc
bound
inc
inc
sub
push
retf
push
aam
pop
fild
or
push
loop
mov
sbb
jne
dec
es
dec
mov
outs
out
aaa
retf
push
aaa
bound
push
sub
dec
sbb
loope
inc
jl
jae
outs
xchg
clc
cmps
sub
pushw
pusha
cmp
bound
addr16
sbb
cmps
pop
or
fwait
and
xor
adc
ss
push
fisttp
or
(bad)
jle
push
mov
cwde
lock
mov
sub
sub
inc
mov
push
jb
sub
sar
jle
addr16
add
pusha
dec
pusha
dec
int3
inc
ins
ins
add
inc
push
jae
jmp
ins
jno
mov
es
inc
je
pusha
dec
ins
jno
or
pusha
dec
nop
adc
cmps
sub
dec
push
pusha
data16
xchg
movs
repnz
mov
pop
nop
pop
lock
data16
dec
jl
dec
mov
and
je
fdiv
mov
sbb
pushaw
push
popa
test
adc
test
stos
inc
mov
jge
sub
ins
jp
and
adc
shr
inc
cwde
sbb
inc
test
movs
adc
fist
arpl
mov
jl
aaa
push
shr
push
jne
xchg
jb
inc
xor
out
and
lock
jb
dec
nop
mov
dec
push
jb
cs
fwait
add
jo
add
push
imul
push
mov
dec
jb
mov
pusha
sbb
movs
or
rcr
xor
and
sbb
xor
in
ins
ja
pop
jb
sets
push
sub
pop
push
adc
pop
jo
ins
enter
mov
cmps
sub
gs
inc
enter
ins
push
outs
dec
jge
inc
push
test
add
jo
inc
mov
add
push
jnp
stos
jmp
or
js
test
cmp
push
push
sub
dec
or
outs
dec
jb
or
popa
push
xchg
jl
scas
inc
or
js
shl
xchg
mov
xor
inc
inc
jb
pop
add
pop
cmc
(bad)
push
pusha
xor
jle
inc
and
jne
pusha
dec
jo
dec
call
inc
push
shr
xor
daa
mov
push
ss
xor
or
(bad)
test
dec
inc
ss
mov
ds
pop
pop
add
dec
int3
outs
jbe
fiadd
rcr
adc
dec
sbb
ins
mov
sub
sub
or
dec
mov
fst
push
pop
dec
push
inc
and
push
ret
fsubr
hlt
fmul
cli
pop
fsub
outs
mov
xor
inc
sbb
dec
gs
mov
rcr
cmps
push
es
and
push
push
ja
ja
xor
xchg
or
push
ins
push
mov
push
pop
fimul
adc
in
mov
fbstp
inc
bnd
sub
test
inc
and
gs
sub
mov
adc
nop
cmps
sub
pusha
bound
jae
ficom
sub
fsubr
xor
mov
mov
cmp
or
push
adc
sub
lods
mov
shl
mov
inc
arpl
loopne
cdq
mov
ins
push
inc
adc
pop
test
inc
leave
mov
and
pop
dec
dec
mov
(bad)
and
jge
jae
dec
push
push
ja
inc
sub
imul
add
xchg
jo
sub
push
dec
or
push
sbb
xor
push
jle
int
adc
xchg
push
sub
cmc
ja
shl
jbe
jl
imul
stos
or
ds
push
mov
aad
fild
jle
sub
jb
inc
xor
cmps
call
cmc
and
push
data16
or
and
dec
mov
push
push
push
cld
xor
mov
push
mov
sub
add
sub
or
lds
push
cld
cs
and
push
push
xchg
push
xor
xor
movs
push
push
pusha
cmp
ins
push
or
call
pop
dec
cwde
xchg
pushf
sub
jge
dec
inc
pop
lods
ret
outs
fs
push
sbb
jp
dec
xor
mov
enter
jbe
mov
in
retf
mov
inc
inc
ins
or
adc
sbb
jno
ss
je
bound
aad
stos
and
push
pop
add
sbb
sbb
retf
or
es
or
dec
and
scas
mov
or
aam
dec
inc
(bad)
icebp
lea
aaa
pop
xor
jb
jge
jo
mov
adc
cmp
pop
inc
push
push
dec
push
xor
in
dec
add
stos
inc
je
cmp
sub
jno
test
sbb
aaa
das
rcr
add
dec
inc
jb
in
loopne
out
fsubr
add
cs
inc
bound
sub
hlt
out
xor
inc
bound
dec
dec
dec
or
cs
outs
ja
xor
mov
push
sbb
mov
jle
push
dec
push
ror
xchg
aam
and
mov
pop
dec
cmp
aaa
mov
jae
ss
add
cmp
cmp
jo
cdq
push
push
push
or
sub
inc
xor
lahf
push
gs
das
mov
ja
outs
xor
pop
imul
inc
inc
push
aam
aaa
cld
dec
sar
ins
pop
jo
out
aaa
xor
inc
outs
popa
iret
pusha
outs
popa
cmp
and
xchg
jne
imul
or
inc
push
jno
push
cmp
add
mov
dec
inc
fdiv
push
adc
gs
gs
es
jno
add
ds
push
fwait
sbb
loop
mov
dec
loopne
lock
push
push
mul
mov
mov
arpl
cmp
bound
repnz
jmp
ror
sti
or
push
arpl
popa
dec
cwde
inc
or
(bad)
aam
jge
mov
dec
inc
outs
inc
xchg
or
aam
pop
push
cmp
ins
rol
scas
popa
pop
push
push
and
xor
and
pop
dec
fs
inc
outs
cmp
mov
dec
push
cmp
mov
inc
push
pop
push
sub
push
sbb
outs
dec
dec
data16
pop
hlt
push
dec
jl
add
dec
outs
cli
xor
cld
lds
bound
clc
push
test
push
cwde
push
push
push
dec
data16
cld
dec
mov
mov
jle
mov
aaa
dec
add
jle
scas
add
xor
dec
je
or
into
popa
inc
outs
xor
and
mov
arpl
dec
jbe
sub
dec
sbb
dec
mov
add
inc
xchg
stos
sbb
push
add
inc
push
imul
or
outs
fild
jmp
cmp
imul
dec
xor
mov
pop
ins
fidiv
ins
test
dec
mov
push
push
jbe
pop
or
adc
imul
fdiv
adc
jne
imul
test
push
js
inc
push
or
bound
jb
test
dec
dec
ins
jp
mov
test
mov
out
mov
inc
dec
mov
pop
dec
inc
dec
add
test
fdiv
pop
cs
add
xor
dec
xor
xchg
dec
and
shr
push
bound
mov
cmps
mov
dec
ja
jmp
cs
dec
xor
push
dec
dec
mul
inc
push
xor
xor
pusha
pop
das
sub
xchg
push
push
push
cmp
cmp
mov
arpl
jb
push
mov
xchg
adc
addr16
jmp
jle
push
jl
inc
inc
outs
jb
imul
mov
sub
cli
pop
push
push
add
push
ins
push
addr16
adc
mov
adc
bound
ja
cmp
add
mov
push
leave
and
jb
add
jmp
add
jne
xor
jae
cmp
mov
jo
push
xor
imul
adc
jge
pusha
cwde
ss
xor
sub
pop
dec
mov
push
inc
mov
sub
xor
aaa
or
xchg
push
loop
and
add
pop
bound
xchg
mov
add
xor
pop
pop
cmp
loop
pop
sti
cmp
inc
adc
push
push
sub
and
or
mov
jl
or
jne
and
mov
imul
sbb
cmp
or
or
xor
fsub
int3
gs
mov
pop
and
jae
xor
inc
test
add
inc
or
jl
adc
dec
push
mov
xor
dec
pusha
in
push
jge
or
pop
xor
pusha
xor
xor
pop
push
sub
xchg
je
aaa
mov
xchg
(bad)
outs
jo
jae
push
pop
add
push
arpl
ins
popa
aaa
inc
sub
dec
lods
jl
addr16
push
sbb
(bad)
pop
push
dec
rcr
mov
pop
and
imul
movs
push
retf
xor
jo
gs
inc
sub
push
xchg
nop
dec
inc
dec
dec
jbe
retf
sub
call
jo
sub
push
outs
dec
fwait
(bad)
dec
mov
bound
sub
mov
ins
push
xor
stos
sub
es
addr16
push
icebp
sbb
outs
dec
ror
mov
and
sub
sub
push
mov
cmp
jp
xchg
pop
sbb
lods
xor
xor
xor
(bad)
jg
push
cli
dec
data16
push
push
pop
inc
push
bound
loop
je
ror
mov
jae
adc
pushf
movs
fcomp
push
push
inc
jl
sub
mov
push
jp
mov
icebp
xor
push
cmp
ins
into
jo
js
test
hlt
aaa
shl
pop
sub
dec
cmp
push
into
arpl
jo
jno
imul
sub
mov
imul
push
bound
jb
ret
sbb
mov
add
push
xor
clc
imul
pop
pop
inc
inc
jge
pusha
jno
mov
mov
jne
inc
pop
add
dec
call
jno
sub
inc
stos
aam
cli
lea
jo
lock
cmp
cmc
int
xor
pop
arpl
push
sti
int3
cmp
data16
imul
sub
outs
mov
pop
ins
retf
call
mov
and
push
mov
jge
jo
dec
xor
fmul
inc
jae
mov
and
enter
lods
cdq
jl
imul
cli
xchg
xor
dec
jge
sub
aaa
or
jmp
mov
retf
lods
jno
dec
inc
arpl
jbe
add
mov
mov
cmp
imul
shr
jmp
xor
jbe
mov
pop
inc
push
jge
push
aaa
and
dec
pop
push
push
pop
test
fs
rcl
xor
fiadd
and
(bad)
mov
xor
cmp
hlt
sbb
xchg
call
dec
ss
mov
add
dec
jge
push
xor
jb
test
jb
cmp
jno
push
icebp
add
popf
loop
jae
add
dec
inc
pop
sub
inc
popa
imul
add
add
mov
aaa
push
dec
das
add
dec
push
sbb
popa
in
push
dec
dec
push
ja
inc
mov
dec
push
outs
enter
in
popa
xor
xor
xor
stos
push
jae
popa
mov
jo
mov
inc
xor
jbe
jge
push
add
cmps
push
dec
or
sub
ror
mov
pop
adc
cli
aaa
ja
inc
add
xchg
jl
push
lods
cwde
ret
sub
or
cwde
or
rol
and
lock
stos
jle
or
push
dec
jle
xor
call
cmp
xchg
adc
stos
jo
push
adc
jo
push
test
(bad)
lods
mov
lock
aaa
test
rol
xchg
add
adc
jge
ja
xor
mov
arpl
sbb
and
mov
or
mov
jne
bound
push
dec
imul
imul
int3
pop
sub
clc
arpl
mov
mov
jo
je
pop
jno
loopne
dec
inc
xor
call
mov
mov
je
add
sub
fidiv
jbe
mov
shr
pop
loopne
pop
mov
sub
(bad)
pop
aaa
push
or
outs
push
in
outs
push
push
jo
add
mov
(bad)
loope
ret
je
aam
xor
sbb
jo
push
mov
dec
test
mov
inc
mov
cmp
dec
ins
cmp
dec
mov
sbb
outs
dec
push
or
sbb
jle
jo
cmc
dec
add
pop
es
cmp
pop
mov
ins
dec
ins
popa
imul
xor
cmps
or
dec
outs
popa
mov
mov
mov
push
nop
cmp
or
push
jmp
sbb
lds
enter
inc
hlt
push
push
mov
dec
fiadd
mov
(bad)
push
xor
ja
(bad)
add
jbe
test
or
xor
push
movs
dec
push
mov
sub
lds
int
push
(bad)
xor
push
dec
jb
ja
pop
adc
sbb
pop
add
inc
pop
fmul
inc
xor
inc
aaa
es
or
or
or
and
dec
xor
dec
ror
aam
pop
ins
mov
dec
push
pop
inc
imul
dec
push
dec
test
sub
and
jo
sub
out
push
jge
ja
cmp
nop
or
cli
push
sub
int3
dec
mov
adc
imul
pop
aaa
xor
push
inc
pop
je
push
clc
pop
xor
gs
cmp
repnz
mov
xchg
push
add
xor
mov
call
jo
add
sub
jo
dec
xchg
dec
dec
fcom
pop
and
sahf
jo
imul
dec
ret
dec
push
fcomp
xor
pusha
inc
clc
es
jl
lods
gs
push
push
xchg
fisubr
cmps
ins
push
dec
or
xor
or
jne
mov
cli
pop
add
fisub
mov
pusha
xor
xor
dec
sub
inc
push
inc
inc
ss
xor
pusha
pop
gs
cmp
xchg
pop
dec
adc
adc
data16
dec
dec
jp
or
sub
rcl
or
xor
dec
scas
stos
fisubr
loopne
jno
addr16
mov
aaa
inc
inc
jae
addr16
push
mov
repnz
and
inc
lods
adc
fild
xor
dec
jo
inc
inc
jle
push
add
ins
xor
pop
cli
add
imul
arpl
outs
inc
adc
ins
adc
bound
push
dec
dec
inc
mov
or
jne
push
cmp
ficom
mov
push
and
js
ins
je
jb
jo
push
fsub
push
addr16
push
jne
push
push
imul
adc
imul
push
jbe
xor
push
xor
xor
aam
add
imul
mov
inc
pop
ja
pusha
dec
pop
ret
cwde
dec
loopne
jmp
and
push
pusha
jle
mov
adc
dec
addr16
adc
mov
sbb
push
add
jb
sub
inc
jbe
jge
outs
inc
fcom
nop
dec
and
dec
push
mov
into
inc
or
test
call
addr16
push
ins
cmps
sub
es
inc
or
pushf
jb
push
cmp
sub
inc
jbe
jb
jb
cli
ror
loop
mov
pop
inc
sub
ss
ss
jae
jl
add
jo
push
push
jno
add
mov
pop
xor
inc
aaa
xor
ret
mov
inc
jl
js
(bad)
xchg
and
inc
outs
push
cmp
icebp
push
xchg
xchg
shr
push
enter
inc
sub
inc
mov
xor
mov
cmp
add
aam
gs
push
jbe
pop
ja
or
pop
mov
sub
lock
arpl
es
xor
xor
mov
add
xchg
test
add
cmps
(bad)
mov
push
jno
inc
bound
pop
lock
mov
jle
adc
push
shr
xor
inc
or
xchg
or
mov
fsubr
adc
ins
cs
adc
inc
mov
jne
and
cmp
(bad)
xor
outs
inc
pop
inc
ins
push
mov
pop
push
add
pop
gs
popa
xor
cmp
adc
stos
and
cld
add
xor
push
inc
inc
inc
xor
pop
movs
mov
push
lock
mov
cld
pop
inc
mov
xor
outs
jne
jbe
inc
inc
push
jno
jbe
ret
mov
push
push
out
inc
mov
cmp
cmps
call
retf
pop
pushf
push
outs
dec
fidiv
stos
xor
(bad)
in
arpl
movs
fadd
inc
jno
mov
fsubr
inc
push
inc
in
push
dec
dec
bound
sub
enter
push
test
outs
push
cmp
ss
cmp
jle
pop
dec
dec
or
lock
or
cmp
inc
add
(bad)
(bad)
enter
add
inc
xor
and
xor
push
arpl
cmps
in
ffreep
dec
jbe
aaa
push
outs
push
dec
(bad)
retf
add
pop
mov
add
popa
popa
(bad)
bound
mov
mov
outs
xchg
bound
or
ss
push
pop
movs
sbb
pop
imul
or
xchg
pop
xchg
cwde
pop
lods
nop
inc
popa
mov
sub
or
test
sbb
loop
or
and
push
cld
or
hlt
(bad)
inc
pop
popa
push
imul
dec
jbe
aaa
pop
or
ja
pop
push
dec
xor
movs
adc
js
dec
or
add
add
call
mov
push
addr16
movs
mov
stos
call
inc
inc
push
push
daa
push
popa
push
jb
fs
adc
cmp
movs
pop
shl
sub
ss
loopne
ss
xor
ja
jl
dec
xor
pusha
xor
xor
ja
dec
cmp
sub
pop
sub
adc
push
push
sbb
repnz
imul
outs
inc
ins
sub
ss
clc
cmp
jl
dec
push
nop
push
jp
inc
jge
adc
outs
inc
dec
cmp
gs
cs
ss
addr16
sbb
clc
add
xor
adc
jo
and
mov
adc
or
lock
popa
inc
cmp
add
push
popa
xor
ins
fiadd
push
inc
xor
push
dec
adc
gs
push
in
sbb
inc
xor
idiv
jbe
or
call
pusha
dec
xor
push
jle
cmp
jae
dec
ins
push
ins
imul
arpl
loopne
lock
pop
jb
ja
ins
mov
push
fisub
jne
jbe
test
rcl
bound
inc
cmp
movs
adc
dec
call
lods
xor
mov
bound
xor
add
pusha
imul
xor
ss
and
jg
and
bound
bound
dec
jbe
and
push
outs
push
dec
pusha
jo
or
pop
xor
mov
je
mov
aaa
mov
or
repnz
dec
sub
ins
daa
and
ss
call
pusha
(bad)
pop
pop
xchg
ja
and
xor
push
push
pop
loop
les
ret
push
retf
push
xor
push
ins
dec
xor
mov
jl
outs
jge
fiadd
pushf
inc
push
or
push
fmul
ss
dec
push
scas
aaa
or
cmp
je
xchg
loop
arpl
jl
jne
pop
jne
fcom
inc
scas
jl
jl
rol
mov
sub
arpl
cmp
jle
or
or
pop
or
or
mov
lods
inc
sbb
or
sub
sub
fcmove
retf
clc
adc
imul
cmps
and
or
ja
fild
dec
ins
dec
xor
int3
inc
ss
mov
stos
dec
ror
movs
jo
ins
mov
gs
xor
pop
push
push
aam
pop
aam
les
fdiv
xor
push
clc
es
clc
lea
push
jle
lods
inc
push
adc
dec
addr16
xor
lods
add
xor
cs
outs
jmp
into
aaa
ins
push
(bad)
ins
popa
mov
stos
inc
xor
dec
pusha
sbb
adc
mov
retf
pop
jle
cmp
cmps
sbb
hlt
pop
movs
and
xchg
inc
inc
imul
setno
mov
pusha
loop
pop
cwde
jno
gs
push
push
push
xchg
ds
push
inc
add
pop
int3
push
inc
push
inc
mov
xchg
push
dec
clc
or
arpl
pop
popf
or
push
jmp
xchg
outs
pop
dec
add
and
pushf
retf
push
lea
pusha
add
scas
add
push
test
mov
or
arpl
bound
pop
push
test
inc
dec
cld
es
dec
and
xor
or
xor
fisub
push
cwde
mov
gs
pop
dec
popa
sbb
cmp
out
inc
and
sbb
mov
add
push
sub
jno
push
add
stos
inc
popf
sub
shr
fist
scas
push
cmp
xor
dec
leave
fisubr
xor
push
scas
js
push
inc
fdiv
pop
outs
jno
xchg
outs
data16
push
add
aam
sub
adc
sub
(bad)
jno
jbe
lds
test
aaa
jb
ss
aam
inc
push
xor
jge
test
sub
cmp
push
xor
add
push
dec
ins
jne
push
xor
and
mov
mov
popa
stos
in
push
dec
jbe
aaa
(bad)
jae
dec
dec
sbb
add
push
(bad)
xor
push
stos
and
push
dec
jp
adc
xor
pop
ins
sub
add
mov
pop
xor
xchg
fwait
sub
or
inc
inc
dec
inc
mov
pop
cwde
xchg
ror
jp
xor
push
mov
sub
ins
push
xor
xor
into
dec
jb
mov
push
sub
push
inc
mov
ja
push
jne
dec
imul
xor
inc
pop
sbb
dec
jne
sar
xor
dec
outs
out
push
outs
mov
lock
bound
mov
push
or
inc
dec
popa
xor
adc
adc
jb
pop
ds
jl
aaa
jle
popa
call
aam
cmp
pop
push
clc
xor
dec
xchg
sbb
xor
xchg
sub
add
and
push
pop
add
xor
lds
aaa
adc
dec
xor
jle
fsubr
imul
data16
or
lea
mov
cld
cmp
or
push
push
les
push
jl
mov
inc
dec
jbe
push
inc
dec
dec
mov
dec
mov
push
gs
cmc
int
or
dec
ja
jl
sbb
jl
push
in
jg
or
pop
outs
xor
sub
inc
dec
adc
adc
es
fwait
test
dec
adc
sbb
mov
popa
jl
xchg
ss
cmp
cli
cmp
je
xor
imul
data16
(bad)
pop
push
jle
dec
jb
fwait
or
sbb
lock
push
inc
adc
xchg
dec
mov
mov
imul
inc
jle
sub
xchg
xchg
pusha
pop
ins
sub
adc
les
mov
or
inc
push
jno
inc
stos
push
fwait
and
jl
push
adc
and
out
xchg
xor
jo
in
fs
mul
out
imul
mov
inc
push
test
shr
push
dec
retf
sub
jae
push
add
pop
ret
xor
pop
mov
lods
gs
popa
dec
cmps
arpl
fisub
push
jae
hlt
dec
pop
aaa
inc
inc
dec
pop
mov
cmp
jbe
aaa
cmp
rol
pop
ja
push
pop
dec
push
jo
xchg
shr
bound
sub
push
mov
xor
sub
pop
cmp
mov
adc
pop
loop
or
pop
popa
xor
sub
jecxz
pop
dec
or
gs
into
inc
test
enter
dec
or
and
jbe
fild
outs
ss
xchg
add
outs
dec
xor
jb
movs
push
cld
imul
mov
outs
xor
scas
ja
imul
mov
addr16
imul
jmp
mov
push
je
xor
inc
arpl
adc
pusha
or
pusha
dec
push
adc
ins
ret
adc
pop
xchg
cmp
mov
inc
push
dec
pusha
push
lods
inc
jmp
cmp
mov
je
push
and
lods
aaa
pop
jl
popa
aaa
fimul
inc
xor
cmps
stos
fwait
ds
inc
cmp
loopne
push
xor
sub
je
cmp
xor
dec
push
xchg
loopne
inc
mov
test
xor
add
mov
dec
retf
les
in
xor
add
sbb
cli
pop
sbb
jo
in
mov
ja
cld
or
push
ins
push
dec
pop
cmp
pusha
mov
addr16
jne
adc
or
push
stos
mov
adc
clc
xor
movs
sub
jbe
ins
jbe
(bad)
dec
xor
push
sub
push
ss
push
and
outs
sbb
inc
push
inc
cmp
inc
push
pop
test
pusha
dec
push
lds
imul
fmul
or
mov
imul
push
dec
ds
push
mov
push
inc
mov
jne
dec
inc
jne
fdiv
jle
mov
dec
xor
jne
test
push
mov
imul
ret
pop
loopne
ds
jle
je
imul
popa
or
mov
jo
int3
mov
ret
add
ins
inc
jle
fwait
test
pop
cmp
outs
inc
xor
push
pop
jb
daa
jno
test
push
popa
movs
and
dec
jne
outs
pop
rol
dec
sub
add
inc
dec
imul
and
xor
jo
inc
or
adc
ficom
jge
pop
clc
scas
ja
adc
sbb
(bad)
cli
pop
movs
js
jae
outs
or
dec
push
push
jl
dec
push
sub
ins
jp
dec
inc
dec
add
aaa
in
sbb
imul
sbb
pop
dec
ins
xor
in
xor
fdiv
pop
mov
dec
fiadd
adc
mov
mov
sbb
outs
inc
ror
dec
sub
dec
push
push
pop
or
imul
jp
adc
rcl
fmul
dec
test
cmp
mov
mov
mov
popa
pop
test
jo
or
push
jle
leave
fdiv
push
inc
aam
outs
push
outs
dec
cmp
push
loop
cmp
nop
and
les
mov
pop
push
inc
bound
sbb
pop
mov
xor
in
imul
push
outs
inc
ss
test
retf
je
adc
mov
pusha
pop
rol
mov
xor
fs
jl
jno
add
adc
dec
ja
test
cs
add
ins
cld
jge
xor
mov
push
rol
imul
push
nop
and
inc
mov
popa
inc
sbb
fdiv
push
jl
sub
inc
js
jne
cmp
push
xor
out
jbe
push
push
mov
mov
dec
arpl
cli
imul
push
and
jno
inc
push
push
sub
mov
xchg
inc
loopne
(bad)
push
jbe
fldcw
push
cmp
push
bound
xchg
ins
ins
sub
jo
push
push
mov
xor
and
mov
sub
xchg
imul
dec
dec
push
xchg
push
push
jne
xchg
sti
imul
push
(bad)
into
dec
or
ret
xlat
inc
jl
gs
jle
shl
pop
dec
or
scas
sub
push
mov
imul
ja
cmp
push
xchg
imul
jb
(bad)
xor
push
push
inc
imul
push
ins
imul
pop
xor
dec
add
jae
pushf
push
mov
shl
mov
pusha
inc
ins
dec
pop
xor
add
enter
aad
shr
xor
mov
jle
movs
dec
jl
dec
dec
dec
data16
hlt
imul
push
push
push
dec
jae
ins
aaa
sbb
inc
ins
push
push
dec
push
inc
ret
xor
mov
adc
mov
ss
movs
xlat
(bad)
or
inc
inc
outs
pop
jae
dec
inc
push
xor
pusha
xor
ss
add
jbe
adc
inc
and
fs
add
outs
add
(bad)
xchg
xchg
and
and
inc
ja
jl
mov
push
pop
fs
je
loopne
and
push
push
les
push
dec
cmp
inc
add
pop
and
dec
bound
xchg
imul
inc
sub
into
cmp
adc
nop
pop
arpl
xchg
xor
inc
jge
dec
push
push
dec
loop
jo
xor
push
ins
jl
xor
xchg
pop
in
imul
ret
cmc
mov
adc
dec
jno
adc
call
xor
je
mov
ja
ins
inc
dec
fs
inc
shl
add
jno
cwde
or
in
outs
push
aaa
jne
inc
outs
call
dec
and
push
sub
mov
push
push
imul
adc
sub
mov
xchg
cli
xor
jno
xchg
ret
push
inc
dec
jno
jbe
outs
push
inc
sub
add
dec
push
fisubr
dec
std
jb
push
inc
push
pusha
xor
jo
and
or
or
fidiv
sbb
cmp
mov
and
test
ss
xor
mov
push
and
inc
xor
sub
jl
ss
mov
add
data16
pop
xlat
cmp
push
call
sub
pusha
inc
xor
dec
arpl
push
add
dec
in
mov
push
aaa
mov
outs
cmp
ds
pusha
pop
jp
fisubr
jo
pusha
aaa
cmp
fisub
push
outs
pusha
xor
xor
(bad)
add
outs
ins
leave
jmp
arpl
dec
add
push
xchg
adc
inc
push
push
dec
or
loop
rcr
jle
push
jmp
ja
ja
xchg
arpl
aaa
bound
ja
push
ja
pushf
or
fwait
mov
pop
jb
dec
pusha
popa
push
adc
xor
jbe
cli
dec
or
cs
inc
je
push
inc
fcomp
xchg
stos
push
aaa
arpl
dec
mov
in
pop
inc
push
inc
outs
ins
xor
push
ins
rol
and
push
inc
inc
dec
push
or
and
dec
mov
nop
aaa
sub
ins
adc
add
sbb
(bad)
lock
outs
add
push
sub
fsub
ss
xor
add
inc
adc
aaa
jle
jae
inc
cdq
call
push
dec
jmp
and
imul
call
sub
adc
mov
mov
cld
jb
jno
inc
jo
addr16
adc
jbe
outs
pushf
xor
push
pop
xor
ins
pop
mov
xchg
and
dec
call
and
clc
pop
inc
push
and
loopne
fisub
lods
aaa
mov
push
and
add
cmp
sub
or
inc
test
jl
dec
push
test
push
push
adc
add
aaa
inc
fiadd
push
and
adc
out
dec
shl
sub
sbb
jae
ss
inc
dec
add
xor
cdq
dec
shl
and
jb
inc
add
mov
inc
scas
inc
aad
loopne
adc
jge
call
sub
inc
xchg
fnsave
sub
fistp
push
jle
or
xor
es
ja
aaa
sub
or
inc
adc
clc
pop
addr16
sub
inc
xor
pop
shl
jne
inc
sub
sbb
mov
cmp
push
std
pop
dec
imul
inc
push
dec
and
xor
push
sbb
pop
cmp
pusha
inc
nop
ins
ins
jb
jae
in
add
dec
xchg
pop
add
inc
push
push
sbb
out
inc
pop
push
sub
scas
dec
fcomp
aaa
sbb
push
ins
pop
les
adc
and
jge
add
jge
ja
adc
imul
daa
call
stos
mov
jb
jae
jl
popa
xor
data16
sub
cmp
cmp
inc
add
push
arpl
inc
push
inc
push
pop
aad
push
xchg
mov
sub
jae
mov
dec
mov
push
adc
dec
scas
inc
bound
jno
mov
ret
cs
mov
add
add
mov
xor
xor
xor
ja
or
test
pop
cmp
adc
xor
stc
and
outs
or
imul
dec
inc
jae
jge
jnp
and
inc
inc
push
dec
arpl
and
ins
or
cmp
ins
mov
mov
sbb
jae
fisubr
rol
xor
ss
pushf
xor
inc
push
fbld
(bad)
or
jle
inc
push
xor
scas
add
mov
outs
inc
pop
les
ins
xor
in
add
sahf
mov
scas
pop
inc
dec
jne
jno
in
mov
dec
data16
jbe
pusha
push
push
aaa
pop
arpl
inc
dec
aaa
inc
adc
pusha
sub
test
sub
push
inc
jle
les
mov
inc
adc
dec
outs
imul
add
dec
or
dec
push
ja
dec
pop
imul
add
stos
pop
pusha
inc
jl
jo
inc
or
imul
loop
xchg
dec
ror
inc
xchg
inc
xor
or
ss
je
in
add
les
cli
fs
or
aad
jno
inc
sub
push
add
lods
dec
mov
in
lods
jbe
stos
and
fsub
ja
in
push
ret
sub
and
pop
gs
xchg
or
daa
and
dec
xor
push
jge
mov
sbb
fmul
inc
jno
xor
mov
aaa
sub
out
cli
popf
adc
call
jbe
cmp
lock
ins
pop
inc
jl
ins
shl
jge
test
adc
ins
imul
inc
and
push
sub
push
dec
ss
jae
mov
mov
jb
data16
dec
inc
pop
mov
aam
cdq
ret
repnz
pop
pop
ja
xor
js
js
or
sbb
les
jbe
or
push
push
pop
xor
pop
and
addr16
xor
adc
movs
xchg
adc
jno
xchg
fwait
xor
xor
sub
ins
test
fnstenv
push
fcom
retf
fimul
pop
jg
xor
ds
inc
cs
les
fld
fstp
xor
retw
push
cwde
cmp
(bad)
out
xor
fimul
mov
into
xor
push
mov
inc
push
sbb
sahf
push
pop
xor
xchg
scas
ds
jne
xor
xor
sbb
lahf
mov
outs
leave
inc
outs
gs
push
loope
nop
(bad)
dec
test
xor
jbe
cmp
cmp
pop
xor
xchg
sub
add
sahf
inc
and
sbb
inc
adc
xchg
stc
out
inc
fild
add
das
dec
pop
outs
out
push
mov
sahf
or
ret
in
scas
iret
imul
xchg
fistp
je
xor
outs
sub
ins
xor
repz
or
loopne
fist
inc
pop
outs
sub
and
pop
xchg
push
gs
mov
imul
sar
lahf
in
lock
jb
(bad)
ins
outs
fsub
scas
cdq
mov
mov
mov
dec
fcmove
cdq
outs
push
mov
push
imul
jb
out
inc
(bad)
pop
push
(bad)
pop
mov
int
(bad)
das
jno
sbb
cmp
add
xor
inc
jae
adc
pop
das
pusha
(bad)
out
imul
ds
pandn
scas
jge
mov
adc
or
cmp
retf
sti
jl
push
dec
adc
retf
pop
fimul
iret
mov
jp
nop
sub
jns
xor
inc
ss
inc
imul
pop
loopne
gs
add
mov
push
inc
pop
jge
push
je
aaa
test
ins
pushw
gs
cmp
push
jbe
cld
outs
xchg
dec
inc
push
jo
je
pop
inc
daa
mov
bnd
jb
inc
pop
dec
ret
jne
dec
gs
ds
dec
inc
dec
cmp
xchg
push
push
mov
xchg
inc
jne
or
or
mov
jb
cmp
pop
pop
dec
and
add
inc
(bad)
scas
ss
shl
push
ins
mov
arpl
outs
push
jae
popa
inc
inc
outs
inc
add
retf
xor
dec
pusha
ret
ins
je
dec
ret
je
ja
dec
ins
jle
ins
xor
jle
add
pop
dec
jo
inc
inc
aaa
and
inc
jl
inc
jmp
or
inc
aaa
jle
mov
call
mov
ins
test
imul
mov
cli
addr16
ss
add
test
adc
inc
or
push
int3
inc
and
sub
xchg
add
(bad)
xchg
pop
xor
mov
nop
hlt
dec
inc
aaa
ins
gs
cld
dec
shr
inc
bound
ins
je
or
fbld
imul
cmp
inc
popa
add
pop
add
inc
mov
jne
inc
sbb
add
lds
inc
(bad)
jne
fisub
je
jb
jne
je
int3
test
call
dec
dec
fmul
jbe
push
aaa
dec
push
retf
cmp
sub
dec
jbe
dec
jl
ja
adc
or
bound
push
add
xchg
xor
inc
jmp
inc
ja
je
xor
xchg
les
jl
jo
or
call
or
call
push
jno
dec
push
xor
jae
pusha
imul
pop
or
jae
cld
jae
inc
inc
imul
cli
push
pop
bound
cmp
adc
clc
mov
add
and
xor
pop
xor
jno
inc
pusha
jge
pop
aaa
jae
mov
mov
je
jl
jb
add
cmp
mov
(bad)
cmps
dec
hlt
in
and
fild
jge
xor
pusha
fidiv
push
imul
dec
inc
inc
cwde
sub
rol
sub
xor
jno
je
push
dec
xor
or
clc
fdivrp
dec
jle
and
push
gs
dec
xor
cs
xor
imul
inc
xor
mov
mov
jno
dec
inc
mov
imul
sub
movs
push
push
call
push
data16
inc
dec
fimul
mov
dec
mov
or
mov
pop
dec
push
jbe
dec
dec
push
dec
aaa
push
push
pushf
pop
sbb
out
gs
mov
jo
test
push
imul
push
push
pop
jbe
jo
sbb
shr
push
test
inc
jle
cmps
mov
aaa
push
pop
ins
lahf
repnz
fisubr
imul
(bad)
cld
jb
lock
js
xchg
bound
push
inc
push
mov
jl
adc
fisubr
inc
je
jle
inc
inc
xchg
fs
inc
outs
(bad)
jno
xor
ds
push
xor
push
pop
pop
sub
mov
xor
xor
adc
rol
fcom
inc
nop
imul
dec
or
stos
mov
cs
in
ins
sub
mov
push
jle
ja
inc
ins
dec
outs
pop
mov
outs
test
ins
cmps
push
jb
push
or
pop
jle
jo
out
ret
push
stos
nop
enter
sub
repz
push
pop
cmp
dec
xor
shl
rcl
push
cli
add
jmp
cwde
call
mov
or
and
pop
xor
pop
push
or
jno
je
pop
dec
push
outs
mov
inc
pop
mov
push
push
push
xor
push
pop
(bad)
movs
push
push
push
bound
sub
push
add
jle
sub
ss
xor
ins
lods
retf
jle
push
dec
cmp
je
sub
data16
or
dec
imul
mov
or
mov
mov
push
and
jle
push
push
xchg
inc
retf
pop
dec
pop
inc
aad
or
je
inc
int3
pop
sub
lods
xchg
jne
dec
jp
xor
pop
cmp
js
je
gs
sbb
mov
xor
imul
inc
pop
jae
pushf
inc
popa
jne
loopne
or
ds
dec
push
outs
dec
dec
shr
dec
dec
clc
in
inc
mov
sbb
push
and
push
int3
xor
inc
xchg
fcom
dec
cmp
test
push
sahf
sbb
jbe
ins
xor
jbe
xor
ja
cmps
push
push
dec
pusha
rcr
mov
sbb
out
outs
(bad)
out
push
or
jno
pop
xor
test
dec
inc
push
inc
jb
addr16
pushf
cmp
sub
push
mov
pop
ins
loop
mov
gs
rcr
imul
stos
(bad)
mov
inc
ss
cli
outs
jl
sahf
jmp
sahf
push
sbb
xor
inc
into
imul
dec
outs
stos
stos
jne
push
mov
outs
xor
aaa
imul
push
push
push
cmps
jb
sub
shl
dec
xor
pop
mov
test
sub
icebp
sbb
out
pop
pop
jnp
or
inc
jle
jo
inc
push
dec
xor
push
inc
cmp
add
pop
out
(bad)
jle
sub
adc
jp
jae
push
cmp
sahf
stos
pcmpeqb
scas
xor
bound
adc
fs
mov
sahf
cs
cmp
sar
dec
sub
shl
jle
add
movs
fwait
ds
pop
sbb
(bad)
inc
xor
cmp
scas
mov
xor
adc
sbb
call
sbb
push
push
push
sub
mov
imul
ss
or
sahf
mov
xor
pop
nop
pop
xor
aaa
adc
push
std
addr16
out
pusha
jne
push
ins
jb
bound
aad
adc
outs
or
aad
or
xor
xor
dec
mov
push
dec
push
sub
ds
imul
cmps
test
push
push
sahf
out
and
jle
aam
adc
sbb
popa
cmp
jle
ret
and
stos
jmp
mov
pop
popa
push
push
ins
aaa
push
sub
shr
adc
and
(bad)
sbb
jle
jbe
ret
add
imul
jl
dec
ds
stos
into
mov
jge
je
dec
mov
and
jl
mov
scas
xor
push
push
adc
ins
imul
ss
nop
mov
add
xchg
dec
mov
jb
dec
push
into
jmp
xor
jo
xor
cmp
push
dec
in
adc
xchg
retf
and
fimul
xchg
cmp
and
jl
mov
mov
(bad)
aaa
inc
ins
xor
dec
fiadd
and
inc
mov
retf
xor
adc
sub
jbe
xchg
or
ja
outs
push
mov
push
je
ins
cmps
cmc
ja
je
inc
inc
jo
push
push
inc
ret
test
aam
jle
es
and
push
aaa
inc
cmp
add
add
in
add
cs
dec
push
je
icebp
dec
jb
je
data16
bound
ins
rcl
ins
push
imul
pop
add
stos
cli
push
jbe
cmp
inc
inc
xor
ret
jo
mov
inc
jle
xor
ror
adc
push
jo
inc
push
sahf
sub
cmp
pop
push
xchg
mov
xchg
jle
jbe
inc
mov
jno
sahf
push
das
push
cmp
xor
inc
jno
dec
pusha
xor
mov
and
outs
push
pop
sub
push
fiadd
mov
xchg
and
mov
adc
mov
push
sbb
mov
inc
push
dec
cmp
gs
inc
cmp
push
pop
jo
pop
test
add
jle
(bad)
adc
in
mov
mov
adc
ds
fcom
mov
mov
dec
jae
jge
into
dec
fisub
push
je
xchg
int3
or
jle
push
out
inc
les
fist
lods
pop
clc
xor
gs
sahf
push
pop
sub
fisubr
cmp
lock
pop
inc
push
aad
xor
mov
push
xor
adc
outs
mov
outs
ins
jle
pushf
push
stos
sub
sub
sbb
pop
pop
stos
mov
fidiv
imul
pop
push
dec
scas
xchg
add
jno
pop
jb
jno
inc
inc
stos
adc
ja
pop
dec
xor
pop
shl
pop
push
popa
xchg
cs
jl
sub
repnz
xchg
xchg
xor
push
pop
sub
add
sub
call
ins
scas
je
cmps
jmp
pop
jge
push
imul
push
push
mov
push
push
mov
push
arpl
mov
pop
push
jb
sub
test
pop
imul
cmp
sub
xor
sbb
xor
imul
jl
xor
shl
push
pop
inc
adc
inc
rol
lock
test
push
push
cs
adc
ss
cmp
cli
pop
outs
inc
outs
jae
sub
inc
clc
scas
push
iret
push
mov
jbe
dec
mov
dec
imul
push
outs
inc
imul
ins
shr
xor
push
jne
push
popa
test
scas
inc
aam
pop
ss
inc
mov
push
shl
push
dec
and
dec
push
xor
fucom
clc
mov
ins
jne
jo
push
push
push
pop
and
jo
dec
mov
pop
push
xor
je
push
fistp
and
aaa
push
dec
fdivp
dec
push
ja
aaa
lds
inc
xor
pop
and
or
add
clc
adc
jo
scas
outs
call
and
add
arpl
inc
push
cs
sbb
jg
push
xchg
gs
jae
je
jl
popa
and
xchg
fwait
push
clc
jle
add
push
dec
ins
dec
inc
imul
sub
out
jle
or
cs
inc
add
sbb
movs
push
out
in
shr
lods
push
icebp
cs
jbe
dec
jl
push
out
mov
into
or
push
outs
arpl
push
inc
imul
pop
dec
out
pusha
push
push
mov
aaa
jbe
pop
jle
mov
rol
outs
out
jae
mov
popa
xor
xor
adc
test
push
call
and
dec
xor
outs
sub
pusha
adc
mov
push
popa
push
or
dec
cmp
xor
dec
inc
imul
mov
xchg
and
push
xor
mov
inc
cmps
test
pop
popa
into
push
jb
je
scas
jle
mov
js
inc
je
mov
call
inc
popa
jbe
sahf
or
add
outs
jle
jle
pop
popa
cmps
dec
inc
ret
push
adc
add
dec
loopne
or
repnz
out
adc
push
or
xor
bound
outs
push
push
jl
mov
inc
into
push
bound
ja
and
scas
push
push
jl
rol
or
adc
jno
push
push
push
mov
dec
dec
push
push
mov
push
cmps
ret
scas
push
cs
sbb
imul
pop
push
xor
cs
ins
je
inc
out
pop
gs
adc
add
sbb
adc
fidiv
ins
jno
mov
ins
jb
jge
inc
jg
dec
add
xor
loop
jmp
bound
add
ror
sub
dec
pop
push
jl
into
call
dec
cs
ins
dec
push
jne
dec
and
push
push
cmp
ins
enter
lock
sub
aaa
inc
dec
jmp
mov
xchg
inc
push
dec
xchg
add
or
push
cmps
sbb
cmp
jle
push
mov
bound
ss
push
addr16
fiadd
sahf
jl
outs
xchg
stos
jbe
xor
popa
sub
imul
outs
mov
cs
sbb
pop
scas
sub
pop
sbb
xchg
inc
xor
cmps
jbe
push
mov
xor
data16
aaa
xor
sbb
push
cmp
imul
popa
fdiv
dec
popa
imul
pusha
xor
data16
addr16
ds
xor
jno
xor
aaa
add
inc
stos
inc
xor
push
dec
sub
or
outs
mov
jge
pop
imul
outs
movs
and
inc
inc
and
arpl
in
faddp
popa
dec
add
add
outs
mov
mov
push
out
jo
push
or
sbb
push
push
jl
xor
test
push
xor
pop
sahf
jp
add
arpl
ins
cmp
enter
ds
bound
adc
jl
push
add
dec
mov
dec
jle
push
(bad)
jne
jl
pop
gs
or
pop
inc
jae
bound
jo
jge
sub
push
mov
inc
adc
in
popa
pop
fimul
(bad)
ja
mov
adc
test
inc
push
push
pop
je
push
inc
test
out
(bad)
(bad)
aaa
jmp
ja
into
jl
xchg
aaa
mov
je
adc
hlt
sahf
push
push
aaa
xor
dec
push
xchg
add
imul
pusha
cli
lock
dec
jle
inc
call
push
pusha
inc
add
(bad)
test
pop
mov
out
add
outs
(bad)
shl
lods
(bad)
push
inc
push
cwde
out
inc
push
cs
int
mov
mov
push
cs
or
inc
rol
call
dec
fimul
push
inc
cmp
imul
push
push
outs
(bad)
imul
push
inc
xor
dec
xchg
inc
or
ret
add
mov
pop
inc
xor
sub
dec
(bad)
ror
or
adc
rcr
mov
xor
pop
jae
push
inc
and
rol
or
jp
test
jne
je
pop
mov
pusha
jne
lods
mov
pop
inc
data16
sbb
sbb
mov
inc
inc
popa
(bad)
xor
pop
inc
dec
lea
mov
mov
bound
imul
dec
je
and
xor
aas
xor
jo
aas
dec
outs
sub
xor
pop
cmp
jbe
imul
jl
pop
push
jle
inc
imul
add
mov
dec
sbb
push
scas
xchg
fldcw
sub
add
leave
xchg
fdiv
inc
push
xor
out
add
or
fcmovnu
mov
jne
mov
inc
xor
mov
lds
cmp
inc
or
(bad)
movs
addr16
add
adc
jmp
pop
ret
add
popa
inc
sbb
inc
test
xor
lahf
shr
ja
xor
dec
cmp
sbb
sbb
mov
push
adc
cmp
and
add
clc
jecxz
mov
push
(bad)
push
dec
imul
add
push
inc
and
dec
sbb
and
pop
retf
push
xor
ror
or
imul
dec
imul
xor
inc
cmp
pop
pop
ss
dec
jle
push
pusha
es
xchg
pop
shr
loopne
inc
push
es
sub
lea
mov
xor
inc
jg
dec
dec
push
dec
gs
pcmpeqw
jle
and
adc
push
inc
mov
xor
xchg
xor
imul
sub
ins
push
dec
ja
inc
push
xchg
xchg
mov
jbe
sbb
dec
xor
xor
or
add
rcl
cmp
add
dec
mov
loopne
add
adc
xor
ja
dec
ret
les
sbb
add
sub
mov
pop
cmp
enter
adc
cmc
add
add
push
out
pop
dec
sahf
pop
xchg
or
inc
mov
dec
aam
push
nop
(bad)
jle
push
xor
pop
cmps
fidiv
xchg
dec
popa
aam
or
mov
jne
imul
mov
fnstcw
scas
and
pop
mov
mov
jbe
sbb
push
ins
xchg
mov
pop
dec
pop
mov
xor
inc
mov
mov
dec
in
into
or
pushf
loope
dec
mov
sbb
sbb
dec
mov
cmp
dec
adc
cld
lahf
jne
or
adc
mov
push
ins
or
jns
cmp
add
inc
sub
push
sbb
push
shl
and
xor
dec
or
nop
(bad)
dec
inc
ins
push
xchg
lock
cmp
pop
rcr
outs
push
sahf
push
je
dec
pushw
xor
or
xor
pop
push
leave
mov
push
push
inc
dec
pop
fldcw
adc
jne
sub
sbb
add
dec
nop
sahf
outs
pop
xchg
adc
bound
push
jne
je
fs
outs
mov
and
xor
loopne
inc
lahf
inc
test
pop
and
mov
xor
aaa
sub
fstp
xor
jne
mov
xchg
push
mov
inc
cmps
pop
leave
xchg
push
cmp
or
scas
dec
dec
mov
cmp
adc
ins
xchg
add
sbb
inc
cmp
pusha
test
(bad)
idiv
dec
jno
into
mul
les
ds
add
sub
aas
fistp
add
pop
inc
jle
jno
arpl
jne
sbb
dec
je
jmp
mov
dec
jg
popa
push
ret
scas
xor
mov
adc
fmul
push
mov
adc
test
neg
addr16
arpl
pop
or
push
pushf
mov
popa
jo
add
sub
inc
mov
pop
out
or
mov
ret
push
dec
jbe
adc
dec
xor
xor
loop
adc
pop
sar
(bad)
gs
xor
imul
push
inc
jge
jge
fimul
or
outs
bound
pop
sub
and
les
sub
nop
jmp
push
mov
hlt
ret
div
xor
push
aas
push
cmp
add
lock
xor
push
add
loopne
push
sbb
pop
push
fst
push
mov
cmps
push
pop
xor
xchg
sbb
mov
dec
rcl
pop
push
jo
push
mov
mov
xchg
es
push
mov
mov
and
(bad)
mov
mov
jbe
xor
imul
mov
cld
mov
inc
jno
dec
jo
cwde
jo
das
stos
or
push
mov
push
dec
ret
adc
das
push
(bad)
xlat
pop
sbb
ins
jle
or
dec
pushf
ins
xchg
in
ins
mov
aaa
jb
and
inc
xor
jno
pop
nop
hlt
std
jo
(bad)
xor
outs
sbb
pusha
(bad)
cmps
outs
xchg
mov
sub
(bad)
xor
jo
imul
rcr
scas
shr
push
lods
cs
pop
mov
add
push
or
nop
cdq
addr16
dec
push
push
push
pop
jne
xchg
lock
pop
cdq
add
jle
sahf
dec
sub
scas
inc
cdq
ret
das
in
arpl
(bad)
out
(bad)
xlat
jne
pop
jo
inc
ins
cmp
pop
cmps
jb
and
sbb
push
pop
inc
(bad)
jne
sbb
loopne
les
or
adc
ins
xchg
cwde
into
adc
out
pop
inc
push
lahf
stos
add
or
scas
xor
push
fwait
es
inc
cmps
pop
jbe
icebp
in
leave
lea
dec
dec
inc
push
sub
shl
jl
push
dec
jl
ss
push
fcomp
pusha
dec
iret
jle
jo
jae
(bad)
adc
and
daa
imul
sub
xchg
add
clc
inc
push
out
xor
addr16
inc
pusha
je
aaa
inc
pop
cmp
xlat
ror
jae
test
xchg
mov
mov
inc
test
js
pop
pop
dec
dec
out
outs
xchg
dec
popa
push
shl
jp
inc
ror
push
jbe
fist
push
ins
scas
inc
jle
push
and
clc
shl
(bad)
js
loopne
call
pop
jno
daa
push
jge
xchg
sahf
push
and
jle
or
push
push
push
push
cmps
pusha
push
movs
pop
push
imul
(bad)
jl
pop
push
pop
push
cld
adc
aas
add
pop
pop
or
pop
sbb
popf
ret
pusha
mov
pop
pop
pop
push
(bad)
xor
push
daa
push
into
xchg
dec
arpl
not
push
xor
inc
xor
je
(bad)
lahf
std
push
mov
push
xor
out
jb
jne
xor
in
push
dec
dec
aaa
(bad)
aas
fs
push
outs
mov
dec
inc
cmp
mov
mov
adc
pop
inc
inc
dec
inc
mov
sti
(bad)
jne
ss
fcomip
mov
scas
add
jl
pop
in
loopne
jo
jno
inc
mov
inc
push
dec
aas
xor
mov
push
dec
and
stos
xchg
lock
xchg
xchg
inc
push
ss
in
cwde
dec
cmp
inc
ror
push
aaa
out
je
mov
jge
inc
arpl
pop
push
movs
loopne
inc
mov
pusha
or
mov
out
xchg
jl
jle
mov
and
xor
in
fst
push
(bad)
pusha
fisub
push
lock
lea
jne
jge
loopne
dec
pop
lahf
stos
mov
fs
xchg
or
loope
out
mul
pop
and
dec
jle
es
jbe
xor
xor
les
dec
cmp
(bad)
cmp
inc
inc
jle
jae
rol
iret
dec
inc
mov
inc
loopne
jae
bound
test
inc
adc
test
inc
jmp
jg
jmp
movs
push
dec
sub
sbb
mov
arpl
rcr
shl
pop
ins
inc
(bad)
addr16
imul
xor
xor
bound
retf
add
inc
outs
jb
ins
dec
pop
xor
rol
aas
jge
jne
sub
cmp
push
jbe
int3
gs
sbb
or
or
(bad)
push
xor
aaa
pop
dec
cmp
imul
retf
inc
cld
sub
or
ds
fmul
xlat
dec
push
jo
scas
jbe
int
jno
outs
pop
dec
je
fsubr
inc
adc
inc
icebp
gs
push
xor
dec
mov
sbb
jno
dec
adc
aas
jb
bound
neg
push
push
cmps
ss
pusha
mov
and
inc
push
or
inc
cmps
push
dec
addr16
gs
jp
mov
xchg
inc
scas
jne
ins
mov
shr
dec
xor
mov
pop
sub
dec
or
pop
mov
jle
ds
dec
outs
xor
ja
js
sbb
adc
adc
push
ret
cmp
add
ins
outs
movd
dec
push
outs
inc
xchg
mov
push
dec
icebp
inc
add
ins
aaa
cmc
aam
jmp
ja
aad
sar
inc
ins
pusha
outs
push
inc
das
push
je
mov
jle
data16
or
sbb
jb
div
imul
inc
jl
pop
jl
and
pop
push
imul
pop
ins
jge
mov
pop
sub
or
xchg
and
cmp
mov
jb
scas
into
sub
aaa
jl
inc
xchg
popa
mov
xchg
fistp
das
inc
or
cmc
outs
mov
imul
outs
push
mov
dec
sub
jmp
pop
cmp
mov
xchg
xchg
test
or
fsubr
xlat
enter
add
mov
mov
pop
jmp
cdq
sbb
inc
xor
pop
ja
cmp
dec
das
jbe
outs
addr16
inc
ins
dec
rol
rcr
jle
jo
push
addr16
mov
push
imul
xor
push
daa
push
inc
and
mov
pusha
pop
pop
xchg
rol
dec
hlt
mov
ins
dec
jbe
cmp
pusha
fdiv
adc
cwde
jb
push
push
adc
into
cs
mov
mov
popa
cs
dec
inc
idiv
stos
adc
jle
jbe
xchg
push
dec
ins
push
adc
push
mov
push
and
aad
(bad)
dec
inc
mov
aas
mov
or
fdivr
mov
ficom
daa
inc
pop
push
pop
out
xchg
or
cmps
xchg
pop
mov
addr16
add
mov
jno
addr16
push
(bad)
xchg
push
pop
pop
pop
rcl
nop
push
pop
push
push
pop
jb
pop
inc
mov
jbe
data16
push
or
mov
loop
or
cmps
add
push
scas
cmp
std
rcl
jl
(bad)
imul
xor
dec
arpl
inc
jnp
push
pop
imul
dec
(bad)
cmp
shr
inc
jb
jb
cmps
push
ret
jae
xchg
mov
pushf
xchg
push
push
pop
pushf
js
mov
xor
jle
cmp
push
dec
push
outs
loop
ja
mov
jbe
dec
dec
das
lock
push
cwde
out
dec
ins
inc
scas
adc
mov
push
push
mov
std
or
dec
dec
or
mov
outs
jbe
add
inc
adc
pop
cmp
sub
push
rcl
mov
mov
addr16
xchg
in
clc
ror
loop
inc
pop
lds
push
xor
pop
add
cli
mov
xchg
imul
not
xor
mul
jo
ins
xchg
mov
xchg
push
sbb
or
push
push
test
pop
jle
test
push
pop
or
sbb
add
lock
dec
popa
mov
dec
xlat
jbe
push
mov
ins
xchg
jbe
scas
push
cmp
rcl
push
pusha
xor
xchg
mov
push
(bad)
push
aaa
jae
lds
sub
cmp
mov
jl
mov
ret
push
or
shl
call
icebp
xchg
adc
push
pop
push
arpl
pop
cmp
pusha
push
rcr
sub
inc
jno
lods
mov
(bad)
jmp
add
pusha
mov
add
pop
dec
xor
clc
push
in
ds
dec
pop
dec
inc
data16
gs
xchg
adc
push
dec
ins
push
xchg
sub
push
aaa
xor
shl
push
mov
addr16
pop
xor
mov
jle
(bad)
pusha
inc
dec
not
dec
jp
push
xor
push
push
and
adc
push
ins
push
push
or
mov
js
push
enter
imul
dec
push
sub
mov
out
push
push
jle
out
inc
ss
xor
add
inc
popa
push
data16
mov
cmp
data16
inc
arpl
push
push
jle
popa
mov
movs
test
pusha
outs
aaa
adc
pop
sub
inc
cmp
xor
ss
lods
pop
mov
sub
imul
mov
xor
push
std
push
inc
addr16
adc
sub
loopne
sahf
inc
xchg
es
inc
mov
inc
mov
inc
stos
mov
lods
push
ss
inc
imul
or
ret
ins
push
pop
pop
test
push
inc
(bad)
mov
aaa
xor
movs
mov
xor
jbe
data16
cwde
rol
pushw
shl
jne
idiv
pop
xchg
push
imul
push
scas
dec
push
push
add
xor
jge
cmp
out
test
dec
out
push
outs
inc
pop
mov
dec
dec
bound
inc
adc
add
pop
push
add
mov
pop
push
cmp
ds
sub
ins
mov
jmp
push
lock
inc
(bad)
fcomp
outs
sti
out
test
push
inc
jl
push
inc
xor
push
inc
popa
push
sbb
outs
out
popa
pop
shr
pop
cmps
xor
shl
outs
mov
push
push
inc
lods
loope
mov
push
cmps
pop
inc
jno
jae
dec
sub
jo
dec
ss
shr
xor
pop
xor
sub
clc
lds
pop
ss
cmp
outs
gs
push
ins
or
sbb
jno
push
shl
jecxz
jbe
mov
xor
data16
cmp
fmul
xchg
xchg
dec
outs
(bad)
push
and
sbb
addr16
out
and
push
cmp
push
pusha
xchg
ss
gs
push
push
jge
aaa
xchg
dec
xchg
jge
dec
sub
or
cs
push
mov
sub
add
push
jo
test
dec
idiv
sbb
out
je
ins
pushw
sub
ds
out
cmp
cmps
aaa
xor
sub
popa
and
push
(bad)
cmp
push
cmp
scas
sahf
push
xor
(bad)
cs
inc
jb
inc
cmp
dec
pop
es
sub
data16
inc
xor
cmp
es
dec
ret
inc
pusha
int3
xchg
and
popa
addr16
push
mov
dec
push
sub
and
ror
jo
inc
test
xor
popa
or
xchg
bound
into
ja
test
into
dec
jge
cwde
mov
jb
idiv
fmul
mov
dec
dec
pop
xor
push
xchg
sahf
dec
dec
xchg
fadd
inc
xchg
jno
jmp
sar
pop
cmps
jge
xor
je
int
dec
cs
dec
jle
gs
shl
mov
cmps
xor
es
adc
inc
xor
jbe
or
xor
dec
and
pop
dec
icebp
out
push
jno
cmps
push
jbe
pusha
add
xor
call
cmps
add
jno
mov
gs
(bad)
cmps
add
pop
data16
ss
inc
xchg
shl
mov
push
outs
xchg
adc
data16
into
pop
dec
xor
sub
push
jo
sahf
popa
push
or
out
je
inc
push
cs
mov
or
push
xor
dec
dec
inc
inc
popa
xor
gs
into
ss
adc
pop
outs
imul
ficom
adc
jbe
push
outs
aad
test
push
adc
sub
xor
mov
jb
jp
inc
push
and
es
inc
(bad)
mov
inc
mov
inc
inc
dec
adc
sbb
lods
add
xchg
pop
add
xor
mov
shl
jbe
mov
fnsave
push
jl
adc
mov
dec
clc
dec
imul
call
push
inc
sub
dec
push
jo
jbe
pop
mov
shl
sbb
rcr
popa
std
(bad)
dec
pop
int3
out
(bad)
popa
gs
push
pop
in
scas
dec
jae
add
mov
add
cmp
mov
mov
popa
pop
push
jle
ins
je
inc
pusha
lock
mov
add
dec
ss
out
imul
pop
xor
sbb
adc
ficomp
cs
jo
out
outs
data16
jle
out
sbb
in
push
pop
inc
data16
out
je
mov
into
xor
pop
xchg
push
cmps
sahf
dec
imul
or
inc
out
mov
ins
or
outs
pop
addr16
pop
add
sahf
and
fdiv
add
mov
inc
push
push
inc
push
aad
dec
outs
movs
ret
or
int
inc
jge
ss
cs
movs
push
dec
fidiv
pop
sub
dec
mov
out
sbb
es
scas
xchg
inc
fs
ja
(bad)
push
dec
xchg
dec
gs
cmp
jle
pop
and
fsubp
mov
inc
mov
push
cmp
sbb
jbe
mov
dec
xchg
mov
dec
je
and
dec
mov
and
push
push
out
adc
imul
jo
out
data16
xchg
fst
cmps
mov
loopne
data16
(bad)
cs
(bad)
add
sub
fiadd
jb
push
dec
pop
jae
add
cmp
(bad)
xchg
ja
dec
adc
push
push
je
mov
loope
call
pop
sub
pushf
xor
xor
and
dec
shl
mov
pop
xor
pop
push
push
sahf
gs
xor
push
cmp
adc
js
clc
push
push
inc
add
(bad)
scas
lods
push
sub
dec
dec
out
push
add
sub
mov
bound
cmp
push
xor
mov
add
xchg
jle
xchg
inc
sahf
ss
or
inc
mov
ss
add
sub
rcl
int3
adc
jge
sbb
(bad)
fiadd
adc
dec
dec
pop
test
and
jle
push
or
add
data16
push
data16
xchg
out
ficom
push
dec
or
push
push
shl
push
sub
sub
jae
push
add
adc
or
sahf
popa
cs
(bad)
rcl
or
inc
cs
popa
jb
inc
outs
add
xchg
jbe
dec
sub
pop
ss
push
xor
inc
push
push
cmp
jo
iret
js
dec
(bad)
jno
sub
inc
fld
mov
imul
adc
ins
push
pop
push
divps
jle
inc
sbb
pop
dec
cmps
data16
push
es
mov
adc
or
cmp
ficomp
bound
push
push
popa
sub
call
(bad)
inc
jbe
daa
mov
cmp
or
xchg
xor
sub
inc
xor
xor
(bad)
mov
scas
push
xor
add
or
pop
push
jbe
and
cmp
mov
data16
add
push
push
div
loopne
jbe
mov
or
test
cs
push
push
ss
inc
xchg
xor
(bad)
loopne
xchg
xchg
jge
aaa
pop
xor
not
outs
dec
jle
pop
push
mov
adc
test
jbe
push
sbb
(bad)
data16
(bad)
xchg
xchg
in
outs
xchg
les
and
out
mov
sub
cmp
bound
inc
addr16
inc
xchg
inc
ss
mov
mov
outs
jge
mov
push
dec
not
fisub
inc
push
ds
inc
je
and
jle
inc
push
cmps
shl
xor
push
dec
inc
and
xchg
push
xor
xor
add
test
rcl
mov
jno
mov
inc
jo
inc
outs
data16
or
add
mov
and
push
sbb
cmp
sbb
lock
add
ds
fmul
test
test
push
inc
jno
xlat
retf
imul
outs
inc
mov
xor
dec
into
ror
test
or
sub
add
inc
or
or
push
mov
or
add
add
xchg
cmp
fidivr
push
fisub
fsubr
push
fidiv
das
push
and
scas
adc
push
aad
out
ja
imul
xor
xor
push
mov
dec
sub
out
xor
and
test
(bad)
rcl
push
inc
movs
adc
mov
ret
mov
push
push
(bad)
push
popa
(bad)
push
adc
scas
jo
add
or
gs
push
pop
scas
push
inc
aad
adc
mov
pop
sbb
push
ficomp
xchg
inc
sahf
test
inc
leavew
push
icebp
and
into
sub
gs
rcl
jo
(bad)
cmps
dec
or
cs
push
push
aam
push
inc
and
inc
xor
dec
inc
jo
outs
repnz
and
test
dec
and
outs
out
and
sbb
es
push
(bad)
popa
inc
adc
leave
inc
rol
push
(bad)
mov
and
xchg
dec
mov
sahf
sbb
or
out
xchg
out
jae
adc
xlat
inc
dec
sub
or
dec
ret
and
out
gs
sbb
pop
or
push
cmp
pop
inc
(bad)
push
push
dec
pop
add
inc
push
pop
sub
adc
sahf
inc
sbb
into
push
xchg
mov
jbe
or
pusha
dec
push
push
ins
push
push
es
push
jl
add
inc
not
(bad)
xor
ins
xor
pop
addr16
jae
pop
sub
push
ds
and
sbb
sbb
ret
shl
data16
push
(bad)
and
adc
test
and
jno
jle
dec
mov
je
xor
push
mov
inc
mov
add
push
sub
and
add
sahf
ins
adc
or
sub
fisubr
imul
ins
ror
push
ss
push
sub
cwde
mov
scas
popa
push
mov
cs
pop
out
aam
mov
inc
dec
data16
into
inc
push
jge
adc
adc
push
ins
push
mov
push
sub
in
or
cmp
pop
xor
add
outs
ss
sbb
es
call
data16
data16
adc
push
into
xchg
push
pop
or
add
outs
(bad)
bound
and
or
out
or
mov
or
pop
outs
or
sbb
hlt
div
loope
sbb
mov
ss
and
xor
pop
mov
in
pusha
xor
(bad)
inc
jnp
test
jbe
xchg
imul
push
and
fidivr
loopne
xor
pushf
xor
sub
pop
inc
dec
jo
xchg
pop
pop
jge
(bad)
inc
out
xchg
call
ja
pop
push
inc
or
into
push
and
les
ins
scas
out
shr
scas
inc
jbe
dec
sub
dec
mov
sahf
data16
push
push
cs
nop
inc
push
push
cmp
pushw
dec
(bad)
pop
inc
addr16
call
out
dec
cwde
scas
mov
fucomp
dec
pop
ss
inc
shl
xor
adc
push
cmp
inc
add
out
sub
pushf
shr
push
fisubr
pop
retf
inc
cmp
jbe
push
mov
xor
pop
cmp
into
gs
sbb
icebp
(bad)
mov
add
mov
xchg
adc
push
cdq
cdq
retf
ds
neg
sbb
clc
mov
call
inc
jae
cwde
push
pop
xchg
pop
test
push
push
pop
test
test
retf
sbb
xor
pop
jle
data16
data16
push
sbb
jbe
dec
pop
(bad)
jbe
out
outs
data16
adc
sub
mov
sub
gs
inc
cs
cmp
test
dec
push
jle
ins
push
sub
pusha
pop
cs
fmul
out
push
into
xor
push
and
adc
pushw
pop
ins
test
jno
inc
push
(bad)
jge
jle
(bad)
push
dec
adc
push
inc
mov
ds
mov
inc
cs
add
mov
ds
pop
push
sub
test
pop
push
xor
push
mov
in
(bad)
pop
sub
lea
into
je
push
add
add
xor
or
dec
fidivr
dec
cmp
adc
jbe
and
xlat
test
ja
dec
loopne
push
jbe
push
mov
cmp
xor
add
rcr
inc
cwde
dec
mov
mov
push
mov
inc
push
inc
iret
cmp
mov
out
imul
sbb
xor
or
movs
adc
scas
lock
je
(bad)
push
fcomp
xor
cmps
inc
xor
sahf
fiadd
mov
mov
pop
(bad)
data16
mov
mov
je
inc
sbb
sahf
push
dec
jb
adc
inc
jo
push
sbb
xchg
inc
dec
dec
inc
ins
inc
add
mov
(bad)
xchg
add
inc
enter
popf
pop
xor
ror
pushw
sbb
add
cmps
gs
jbe
cmps
imul
(bad)
push
es
or
push
push
or
stos
mov
and
push
dec
pop
xchg
sbb
fs
mov
popa
dec
cs
outs
inc
ja
adc
push
gs
femms
shr
push
mov
xor
xchg
out
cmp
adc
ss
inc
inc
push
mov
pop
cmp
dec
dec
inc
ss
jae
stos
inc
xchg
inc
xchg
ret
scas
dec
(bad)
xchg
pop
fld
push
dec
push
push
cmps
push
ficomp
sub
inc
(bad)
(bad)
retf
mov
(bad)
es
jle
imul
push
mov
cmp
ds
cmp
xor
cmp
inc
dec
pop
pop
push
in
xor
jle
push
push
mov
pop
out
jbe
xor
inc
cmp
inc
fs
mov
(bad)
mov
popa
in
inc
bound
ins
call
sahf
mov
inc
jge
addr16
dec
inc
pop
outs
xchg
push
or
inc
scas
inc
xchg
or
pop
fisubr
push
dec
and
data16
push
or
fcomp
(bad)
(bad)
fiadd
sbb
out
jle
pop
sbb
push
cmp
es
dec
dec
shl
inc
jno
inc
mov
push
mov
xor
mov
stos
add
fsubr
es
es
xor
mov
or
push
push
sbb
inc
cmps
dec
push
pop
sbb
loopne
ss
outs
jle
sub
inc
fsubr
dec
fisubr
or
nop
push
ss
out
jne
and
xor
jbe
or
or
cmps
inc
xor
movs
push
xor
cmps
inc
loopne
movs
test
mov
pop
(bad)
ins
dec
outs
inc
pop
xor
bound
sub
push
movs
or
sbb
(bad)
inc
(bad)
push
xor
in
mov
outs
xchg
add
daa
ret
cld
cs
mov
into
data16
imul
rol
adc
xchg
mov
cs
(bad)
call
add
jae
xchg
(bad)
mov
xor
leave
imul
dec
dec
inc
cmps
stos
push
pop
sub
pop
outs
push
scas
inc
inc
mov
xchg
cmps
push
xchg
sub
out
data16
ficom
data16
push
inc
out
mov
and
dec
add
sbb
jbe
dec
fsubp
mov
cmps
mov
push
cwde
inc
xchg
pop
out
pop
push
lods
xor
sahf
push
mov
je
or
fs
dec
out
xchg
into
xchg
enter
push
aam
xchg
jp
add
pop
out
jge
ss
inc
ss
sbb
scas
jge
popa
cwde
sbb
jo
daa
dec
and
push
xchg
push
aaa
ds
sub
pop
rcr
mov
pop
xchg
ins
mov
sbb
push
mov
jbe
push
or
sbb
into
mov
pop
sub
push
push
jo
xor
call
je
je
pop
in
pop
inc
xchg
pop
cmps
inc
mov
dec
es
sub
and
push
cmps
(bad)
push
push
adc
push
outs
xor
fimul
sbb
xor
stos
or
mov
cmps
jo
add
or
push
inc
push
jae
je
adc
xor
popa
popf
call
jo
dec
dec
popa
cmp
xchg
adc
cmps
adc
push
ss
mov
mov
push
dec
out
cmps
sahf
inc
push
outs
push
jo
inc
out
jo
push
xchg
adc
inc
xor
cdq
inc
push
jle
outs
adc
sahf
ins
dec
xchg
or
jmp
mov
(bad)
pop
push
xchg
leave
and
xchg
sahf
mov
mov
ror
or
xchg
or
dec
data16
pop
pop
ss
xor
scas
xchg
inc
xchg
inc
or
bound
dec
cmp
pushf
dec
sahf
xor
movs
ins
pop
dec
out
xor
dec
jbe
in
sub
push
test
inc
xchg
out
push
mov
cs
push
bnd
mov
push
ins
inc
xor
mov
outs
div
test
and
cmps
add
sbb
push
dec
ss
xor
(bad)
in
xchg
out
mov
(bad)
push
js
push
inc
rol
sahf
xor
mov
int3
jne
test
je
sbb
fidivr
dec
xor
out
push
inc
push
pop
inc
xor
neg
fnstsw
add
cs
imul
imul
add
loop
jae
pop
icebp
cmps
lahf
sub
aaa
push
push
inc
outs
push
push
push
dec
push
dec
sub
push
sbb
cmp
ins
bound
push
dec
adc
aad
inc
mov
ins
(bad)
es
adc
je
dec
data16
in
cmp
(bad)
outs
stos
mov
inc
cmps
imul
sbb
pop
dec
pusha
pop
call
sub
mov
cmp
xchg
or
fidiv
inc
inc
je
data16
push
add
jmp
out
dec
dec
mov
pusha
add
cwde
cdq
add
lods
xchg
(bad)
cs
ret
add
or
push
shl
add
imul
dec
add
ss
sub
push
gs
adc
xchg
aam
push
adc
xor
inc
push
mov
inc
pop
xor
push
js
push
dec
cmps
push
test
push
jl
or
aam
call
(bad)
push
or
and
add
jge
cs
adc
scas
imul
inc
popa
mov
fimul
mov
sbb
dec
mov
push
sahf
lods
cmps
cmps
sahf
add
bound
mov
lock
jo
mov
xor
push
pop
sahf
cmp
es
adc
dec
xor
push
outs
xor
inc
dec
pop
(bad)
cmps
dec
mov
mov
xchg
(bad)
xor
dec
sbb
xor
sbb
out
pusha
mov
inc
mov
mov
add
pusha
(bad)
cmp
popa
imul
mov
mov
xchg
jbe
sbb
and
mov
push
mov
fsub
jbe
push
es
mov
jle
push
dec
mov
es
jmp
cmps
xor
cs
jae
mov
jbe
xchg
inc
aam
ret
dec
push
add
xchg
sbb
int3
(bad)
inc
inc
sbb
loopne
mov
scas
inc
jb
inc
xor
mov
inc
je
xchg
inc
xchg
int3
aam
pop
cs
test
sub
enter
push
push
push
push
movs
xchg
cmps
pop
xor
es
test
adc
push
jle
rol
out
pop
mov
inc
jle
add
test
into
jbe
sub
xor
inc
fmul
xor
mov
push
xchg
push
gs
push
adc
jge
into
sub
xor
cs
push
mov
push
movs
push
add
shl
pop
outs
mov
outs
cmps
add
xor
(bad)
adc
adc
rol
xchg
sbb
fidivr
mov
jp
and
push
push
cmps
outs
jle
xchg
fisub
cmp
or
icebp
jbe
mov
mov
jle
mov
lods
inc
and
push
sub
adc
(bad)
mov
inc
mov
popa
inc
outs
sbb
push
push
ins
fisubr
inc
inc
add
out
les
sub
fisub
test
sub
outs
out
scas
push
mov
push
push
dec
pop
inc
mov
add
cmp
xchg
mov
fmul
dec
neg
pusha
xchg
adc
jo
jno
or
scas
sbb
add
sbb
bound
inc
(bad)
bound
dec
push
sub
push
inc
mov
cmp
push
sbb
push
inc
sub
inc
test
data16
inc
or
ret
dec
push
add
adc
(bad)
push
push
xor
inc
xor
and
push
loop
ret
into
hlt
xchg
dec
jno
pop
out
mov
daa
pusha
xchg
jle
mov
push
wrmsr
jb
scas
add
inc
fiadd
(bad)
pop
mov
cmps
cmp
adc
jbe
gs
or
inc
rcr
sbb
ficomp
push
call
jbe
(bad)
xchg
pop
cdq
test
cs
mov
push
into
inc
addr16
push
mov
xor
xchg
adc
aam
ss
dec
loope
(bad)
dec
fidiv
(bad)
sbb
aam
or
(bad)
push
push
inc
fisttp
es
data16
push
movs
or
xchg
jae
push
push
loope
cwde
inc
push
mov
test
and
cmp
call
adc
inc
loopne
inc
out
add
inc
(bad)
(bad)
ss
push
pop
mov
push
dec
data16
push
test
mov
(bad)
push
push
imul
xchg
inc
adc
popa
test
mov
aaa
push
ja
lods
sbb
adc
xor
mov
xchg
dec
or
div
fs
cmps
mov
push
in
pop
jge
pop
or
and
bound
jle
fistp
push
xchg
adc
push
inc
xchg
dec
add
fimul
pusha
es
fisub
jno
push
sbb
dec
dec
push
outs
jl
sub
ds
aam
stos
cmp
call
stos
ds
scas
push
xor
rol
mov
pop
inc
inc
shl
add
push
sub
adc
sahf
jbe
dec
push
inc
add
int
xchg
jo
pop
je
adc
outs
outs
xchg
push
add
ss
ss
push
pop
and
hlt
imul
pcmpeqd
pop
pop
into
ds
sbb
push
in
stos
shl
dec
scas
inc
(bad)
xor
and
bnd
or
dec
jge
mov
mov
mov
or
sbb
add
div
adc
inc
rcr
retf
add
mul
pop
dec
dec
aam
jo
pusha
(bad)
retf
push
outs
adc
loopne
push
outs
inc
inc
sub
push
dec
pusha
mov
push
push
dec
sbb
outs
dec
push
out
push
push
jbe
push
push
jbe
xor
scas
cmp
add
imul
or
mov
mov
ss
(bad)
xor
(bad)
pop
(bad)
jbe
ins
jbe
adc
xor
es
dec
into
push
add
div
je
push
(bad)
pop
and
push
mov
dec
push
inc
es
hlt
ds
xchg
push
retf
pop
push
popa
adc
mov
cs
pop
ins
inc
mov
xor
nop
sub
dec
sub
repnz
inc
and
or
sbb
push
lods
add
pushw
je
test
mov
add
add
dec
(bad)
sbb
bound
mov
inc
xchg
(bad)
push
adc
pop
mov
adc
mov
jbe
jbe
cmps
xchg
push
push
test
xor
push
out
adc
ins
xchg
push
sub
adc
push
test
sub
into
mov
pusha
jle
dec
jo
mov
cmp
xchg
jo
test
inc
gs
dec
aam
adc
jne
xor
push
push
or
or
push
pop
out
dec
pusha
push
data16
fisubr
push
ss
push
jbe
cmps
push
adc
push
outs
xor
ficom
pop
jbe
stos
cli
dec
(bad)
jae
pop
cs
push
sub
or
outs
sub
inc
push
fisubr
cmp
out
mov
adc
fs
outs
sub
out
addr16
mov
pop
bound
data16
hlt
ret
inc
not
imul
dec
fdivp
push
(bad)
fsub
push
dec
(bad)
sub
movs
mov
push
and
or
mov
xchg
les
xor
xor
xchg
inc
sub
int3
jp
inc
inc
bound
jae
or
mov
xor
adc
sbb
add
push
out
jle
enter
xor
sbb
push
sub
xchg
popa
xor
out
jp
inc
in
into
push
mov
adc
in
push
push
cdq
pusha
xchg
(bad)
data16
push
ss
push
sub
push
push
mov
or
add
movs
les
mov
sbb
push
cs
mov
dec
pop
bound
push
sub
push
xchg
dec
pusha
sbb
retf
adc
sub
pop
outs
xchg
add
ror
push
cmp
(bad)
outs
mov
movs
push
push
mov
not
ret
and
enter
push
ins
ins
inc
(bad)
(bad)
push
shl
in
jbe
push
stos
shl
into
dec
inc
push
inc
xchg
stos
and
(bad)
out
add
into
pop
mov
jmp
adc
(bad)
cmps
or
dec
out
(bad)
into
dec
lods
or
push
dec
outs
xchg
push
push
xchg
push
gs
or
jbe
(bad)
cmp
add
(bad)
popa
mov
push
cmp
fld
sbb
xchg
ins
push
dec
or
push
dec
or
and
cs
push
adc
sub
int3
push
add
adc
dec
xchg
or
cmp
and
pop
cmps
push
mov
xchg
inc
loopne
adc
out
data16
imul
push
mov
push
dec
push
and
add
dec
sub
test
or
inc
mov
enter
data16
test
xor
dec
push
dec
jl
pop
mov
cmps
inc
mov
ja
dec
fcomp
(bad)
fidiv
cmps
xchg
inc
jo
mov
xor
mov
push
or
inc
cmps
xchg
lods
push
xchg
sbb
(bad)
push
pop
add
pusha
cs
ss
test
inc
cmp
push
ret
(bad)
jbe
mov
aaa
dec
xor
jle
inc
jo
cs
push
popf
and
data16
cmp
(bad)
fs
ret
sbb
xchg
aaa
pop
push
or
cmps
xchg
(bad)
scas
jle
push
jae
ds
cmp
imul
outs
fisub
add
(bad)
jle
(bad)
jo
aam
rol
cmp
adc
out
je
dec
mov
sub
xor
jbe
int3
push
dec
pushw
popf
pop
or
mov
mov
ins
fimul
dec
xor
mov
pop
push
dec
out
mov
jno
inc
outs
dec
es
leave
(bad)
into
(bad)
mov
mov
rol
xor
lods
call
inc
mov
clc
adc
div
ss
adc
add
lock
lods
mov
adc
or
neg
xchg
out
or
mov
and
mov
adc
pop
and
xor
mov
xchg
xchg
dec
cs
outs
push
xor
(bad)
leave
mov
xchg
add
ret
and
mov
add
mov
dec
jo
test
jbe
(bad)
ds
inc
pop
jo
and
push
(bad)
xchg
jmp
gs
inc
sub
mov
push
dec
sub
dec
data16
and
xchg
inc
dec
inc
add
inc
mov
add
(bad)
or
not
js
sbb
sub
add
ds
outs
and
add
push
out
xchg
jo
adc
pop
inc
xchg
es
xor
ds
scas
push
adc
test
data16
pop
mov
xor
push
inc
inc
and
adc
jle
dec
pop
pop
push
data16
pop
mov
push
xor
sub
(bad)
cmps
xchg
loope
add
add
pusha
add
push
pop
pop
scas
add
cmp
mov
ds
jbe
jge
pop
or
xor
xchg
pop
inc
jne
xor
jne
test
outs
jo
or
data16
inc
or
bound
es
push
out
mov
mov
push
dec
cmps
jl
dec
pop
push
not
push
test
xchg
test
(bad)
mov
pop
inc
scas
jo
ret
mov
inc
or
mov
div
xor
sub
push
sahf
pop
mov
out
fsubp
out
rol
dec
in
push
cs
sbb
and
(bad)
dec
adc
popa
cmps
inc
jae
push
push
cld
push
push
gs
xor
push
add
sub
pop
pop
add
xchg
mov
retf
sub
sahf
and
out
push
add
mov
jnp
dec
jbe
jno
mov
push
cmps
movs
mov
add
sub
outs
mov
mov
sub
dec
dec
call
dec
push
jbe
push
pusha
mov
xor
ds
mov
push
test
leave
mov
out
into
(bad)
push
push
ss
push
sbb
test
ds
mov
(bad)
and
push
or
cmps
(bad)
ins
pop
jbe
mov
push
inc
xor
(bad)
inc
sbb
cmp
int3
cs
or
cmp
push
push
push
wrmsr
pop
(bad)
ins
dec
inc
xor
je
mov
push
imul
xor
cmps
push
push
rol
or
ds
pop
inc
mov
sub
dec
inc
dec
inc
aaa
add
jo
popa
test
mov
push
ds
fs
dec
test
cmp
dec
ret
test
inc
push
dec
imul
or
jbe
mov
loop
cmp
inc
and
inc
scas
push
inc
mov
cmp
push
dec
data16
inc
sub
popa
cmps
into
inc
test
xor
push
push
dec
test
cwde
(bad)
outs
jbe
aad
rol
ins
inc
xchg
adc
inc
sbb
mov
test
pop
ss
sub
sbb
dec
mov
leave
lods
cmps
mov
push
test
jbe
push
push
inc
or
ss
jne
jle
es
add
(bad)
mov
jmp
inc
scas
xor
mov
into
push
les
into
dec
or
pusha
push
mov
loope
stos
jbe
outs
clc
iret
push
je
shl
xchg
xor
imul
mov
cs
test
jb
mov
les
sahf
push
popa
push
mov
xor
loopne
xchg
mov
popa
xor
ds
mov
push
inc
push
adc
and
add
dec
rcl
and
fcom
(bad)
into
dec
xor
adc
sub
out
out
mov
stos
dec
xor
xor
fadd
lods
lods
adc
xor
es
popa
pushw
inc
xchg
mov
bound
sbb
or
adc
ficom
push
mov
push
jae
push
push
xchg
scas
imul
fcomp
add
dec
jbe
jbe
push
les
push
push
cs
xor
gs
xor
ss
data16
push
inc
ins
mov
data16
jae
inc
and
push
inc
call
(bad)
push
ss
push
push
loop
(bad)
dec
xchg
out
push
xor
rol
sub
aam
(bad)
push
cwde
or
outs
push
fistp
adc
mov
aam
test
outs
xor
push
xor
popa
and
es
jle
aam
add
fiadd
push
neg
jbe
push
cmp
add
into
not
push
jo
mov
inc
sub
jno
mov
pop
test
sbb
out
gs
scas
xchg
inc
pop
push
xor
cmp
push
scas
jbe
cmps
push
cmp
mov
sahf
cmp
push
stos
push
ror
cmp
data16
add
test
adc
into
sahf
push
mov
push
jg
dec
push
aam
or
push
jge
je
add
xchg
fimul
cmps
xchg
add
ss
jle
push
test
outs
cmp
(bad)
popa
sbb
dec
sub
ret
es
dec
push
hlt
dec
push
lods
push
pop
mov
adc
(bad)
push
and
and
mov
and
sahf
in
mov
dec
inc
push
inc
es
pop
cmps
xchg
push
sub
inc
push
je
push
or
mov
sbb
scas
push
push
or
nop
xchg
jecxz
into
push
push
scas
ret
mov
and
xchg
rcr
rcr
dec
div
push
jmp
cmps
cmps
scas
inc
bound
pop
or
push
jbe
mov
push
xchg
xchg
push
inc
popa
dec
pop
xor
inc
and
out
ds
dec
popa
inc
ret
cmps
inc
adc
mov
push
or
sbb
aam
adc
scas
dec
push
ss
fs
int3
pushf
mov
push
inc
push
push
and
push
ret
pop
cli
xor
sahf
out
(bad)
adc
cdq
(bad)
xor
int
sbb
xchg
dec
scas
xor
sahf
div
xchg
sbb
out
sahf
dec
adc
pop
jle
outs
add
es
push
cmp
inc
mov
rol
push
mov
inc
loopne
mov
push
(bad)
dec
push
inc
and
or
(bad)
pushf
add
cmp
cmp
outs
into
les
sub
dec
or
xor
mov
push
cmp
jge
sub
inc
mov
es
push
push
dec
cs
dec
loope
xor
outs
or
adc
inc
add
jle
xchg
adc
test
ret
inc
je
mov
pop
bound
jno
cmp
pop
pop
inc
inc
xchg
add
mov
inc
mov
es
push
inc
daa
inc
adc
rcl
push
adc
es
pop
add
xchg
jmp
test
push
dec
push
dec
ds
xchg
push
pop
push
outs
mov
mov
(bad)
push
(bad)
dec
adc
mov
cdq
sbb
ds
xchg
(bad)
add
aam
jbe
sub
mov
push
lds
push
dec
pop
jbe
idiv
ss
push
push
stos
mov
cdq
mov
push
push
cmp
xor
cmps
add
outs
inc
stos
les
mov
push
push
inc
dec
inc
inc
sbb
test
dec
push
ret
stos
inc
cmp
xor
dec
sub
push
push
(bad)
ds
sahf
xor
dec
cs
and
mov
sbb
dec
push
cdq
and
ins
popf
pop
sar
inc
es
and
push
test
or
cdq
sbb
pop
mov
adc
push
xchg
push
xchg
gs
or
push
push
pop
push
scas
adc
mov
mov
adc
jbe
or
stos
add
jne
loopne
xchg
ret
push
mov
mov
outs
jle
xor
or
push
not
or
call
xchg
(bad)
mov
xchg
inc
add
nop
push
mov
push
cmp
sub
adc
ret
dec
mov
dec
push
ins
data16
cmp
push
push
ds
fbstp
cmps
sahf
dec
xchg
inc
inc
mov
or
or
cs
xor
int3
pop
jl
sahf
pop
mov
cmp
bound
add
pop
test
or
adc
outs
faddp
push
dec
ss
inc
mov
popa
adc
or
out
or
pop
loopne
xchg
jp
inc
inc
data16
rol
inc
xchg
ss
outs
jbe
pop
sub
mov
outs
xor
xchg
dec
mov
inc
into
mov
sub
add
mov
es
lock
mov
dec
loopne
call
scas
jle
das
sub
pop
es
bound
adc
inc
push
mov
es
mov
call
sbb
pushf
push
ja
push
push
bound
push
pop
mov
add
popa
test
inc
or
loopne
inc
push
push
adc
scas
test
push
push
leave
adc
push
jb
loop
stos
jmp
jno
retf
ins
pop
test
or
ss
inc
popa
or
dec
mov
pop
inc
xor
(bad)
push
ds
ficomp
push
outs
jne
inc
bound
int3
cmp
xchg
add
xchg
or
inc
pop
push
ss
or
aam
push
pop
xor
push
xchg
push
and
xchg
mov
or
movs
push
push
pop
lock
popa
test
and
mov
mov
dec
push
shr
mov
rcl
xchg
sub
inc
pop
add
or
cs
push
xor
adc
jle
xor
sub
and
push
out
adc
jo
dec
data16
jb
pop
out
test
push
pop
cmp
push
pop
add
push
pop
aam
xor
cmps
push
int3
jge
dec
mov
ins
addr16
ss
inc
or
pusha
aad
inc
dec
jle
add
cmp
xchg
cmp
inc
inc
mov
data16
inc
adc
push
gs
cmp
push
fidivr
js
pop
stos
push
dec
(bad)
dec
mov
ret
push
call
push
bound
pusha
adc
pop
xchg
les
add
es
mov
clc
dec
popa
cmps
and
test
pop
pop
xchg
mov
or
jo
test
xchg
sub
scas
xor
xchg
ret
add
je
mov
and
pusha
test
inc
sub
cmp
push
push
pop
adc
or
push
imul
and
fdiv
or
outs
xor
mov
popa
rcr
fimul
mov
jge
ss
xor
push
out
pusha
mov
xchg
push
adc
sbb
sbb
xchg
push
mov
mov
sbb
pop
xchg
xchg
pop
int3
xor
push
into
pop
xor
out
xchg
or
dec
dec
inc
out
sahf
or
jle
ins
(bad)
nop
or
sbb
es
jo
clc
clc
add
ficomp
or
scas
sahf
mov
es
out
sbb
divps
ds
test
mov
push
ds
into
pop
xchg
or
js
ss
es
arpl
push
dec
cmps
xchg
pop
or
pushw
mov
aaa
push
data16
push
test
sub
mov
push
fdivrp
or
inc
outs
jge
xchg
adc
out
mov
test
loopne
jmp
gs
pop
sub
cs
push
bound
data16
ss
sub
jae
(bad)
dec
inc
inc
dec
or
inc
cmps
jbe
data16
sbb
push
(bad)
cmp
and
es
jno
xor
push
sub
xor
out
data16
xor
mov
mov
sub
xchg
push
mov
inc
inc
outs
inc
adc
int3
jno
sar
push
mov
push
ss
ins
inc
adc
or
out
pop
jbe
and
aam
retf
data16
ss
cmps
ficom
mov
gs
cmps
xor
xor
xor
inc
mov
cld
or
adc
jne
jbe
push
push
dec
sahf
je
jbe
cmp
dec
idiv
xchg
push
cs
ret
push
cs
inc
jb
mov
(bad)
add
sub
mov
and
jle
and
xor
mov
mov
pusha
xchg
sub
out
cmps
push
adc
pusha
push
(bad)
push
mov
xor
sahf
out
pop
push
and
mov
lds
in
ss
out
dec
mov
jle
sub
and
pop
ss
(bad)
sub
fadd
add
pushf
mov
pushf
ret
jl
jno
pop
ds
jbe
pop
xor
ins
inc
mov
dec
dec
mov
pop
push
push
sub
or
push
call
das
sbb
xor
out
cs
add
dec
cs
cmp
push
mov
xchg
push
add
push
(bad)
es
sbb
call
ret
in
out
out
ins
push
xchg
lock
push
xchg
loopne
fsubr
(bad)
pop
push
out
cmp
add
or
mov
into
jno
or
jbe
rol
cs
cmps
mov
call
pop
rol
xchg
loope
popa
out
ss
xor
icebp
mul
out
adc
outs
or
out
add
add
sbb
pushw
call
idiv
jbe
pop
sub
cmps
sbb
mov
mov
and
and
dec
or
inc
pushw
xor
rol
in
xchg
xchg
fidiv
les
ds
test
popa
and
dec
xchg
cmp
sbb
mov
or
popa
add
mov
cs
xchg
cmp
dec
mov
movs
sub
lods
dec
adc
data16
inc
sub
jle
push
sbb
jbe
inc
mov
dec
inc
pop
or
push
jecxz
adc
xor
ss
sub
js
push
mov
push
mov
es
inc
popa
xor
inc
jle
sbb
aas
dec
jo
push
inc
(bad)
xor
out
sbb
pop
outs
data16
dec
mov
out
int3
test
and
mov
add
push
or
add
push
cmps
inc
push
add
inc
xchg
scas
and
cs
cmp
mov
mov
inc
out
inc
(bad)
mov
xchg
out
addr16
ss
push
and
outs
imul
jmp
push
cmps
gs
inc
xor
mov
add
cmps
out
push
cmp
call
or
add
jmp
cmp
push
push
(bad)
outs
push
xor
pusha
gs
les
or
or
enter
popa
lea
mov
sub
call
sbb
jno
(bad)
femms
sbb
push
cmps
out
pop
push
bound
push
pop
sbb
inc
or
push
cmp
(bad)
fidiv
outs
pop
mov
fdiv
into
inc
out
sbb
mov
sub
push
push
pop
mov
add
mov
jo
xchg
inc
ds
popf
imul
out
xor
xchg
push
pop
jb
pusha
xchg
push
jb
data16
and
test
into
pop
(bad)
xchg
sbb
inc
data16
(bad)
push
cwd
mov
cmps
div
mov
into
push
outs
fiadd
add
xchg
outs
pop
inc
call
out
dec
out
inc
sbb
pop
imul
cmp
aaa
popa
push
sahf
cmps
cli
es
push
(bad)
jbe
inc
scas
dec
inc
sub
dec
xchg
pop
push
data16
adc
out
xchg
mov
out
push
dec
shl
out
cmps
out
dec
or
jae
mov
pop
outs
push
dec
push
data16
and
xchg
mov
push
add
(bad)
adc
push
push
nop
enter
jno
stos
add
movs
mov
dec
ss
add
cmp
sub
dec
xor
push
dec
icebp
test
lods
loopne
mov
bound
adc
mov
cmp
mov
outs
mov
jbe
xchg
loope
jae
mov
es
mov
test
(bad)
pushf
cmps
push
push
sbb
xchg
add
arpl
cmps
cmps
inc
xor
jne
out
popa
scas
push
mov
cmps
out
dec
mov
sbb
or
es
push
cmps
pop
push
ret
inc
add
inc
xor
xor
mov
ficomp
sbb
push
inc
(bad)
scas
je
xor
cs
push
mov
(bad)
(bad)
out
inc
mov
outs
out
jle
rcl
mov
add
xchg
push
add
pop
xor
(bad)
mov
jo
jle
(bad)
push
cs
sbb
push
cmps
es
hlt
push
jb
(bad)
mov
cs
inc
popa
adc
and
js
(bad)
push
pop
push
jle
xchg
inc
or
ss
mov
mov
es
push
mov
into
pop
(bad)
(bad)
inc
push
sub
out
sub
pusha
add
dec
outs
push
pop
xor
add
sbb
test
(bad)
(bad)
in
inc
adc
(bad)
dec
xor
mov
adc
out
rol
loopne
dec
mov
test
push
es
inc
sbb
data16
or
test
and
ret
scas
mov
test
jmp
add
dec
dec
(bad)
mov
push
push
jle
push
(bad)
xor
fsub
es
inc
add
das
mov
data16
(bad)
cs
je
xor
aam
cs
mov
push
call
cwde
push
data16
and
xchg
in
stos
lea
cmps
cmps
addr16
(bad)
ss
inc
push
sahf
add
push
xchg
test
push
mov
push
push
dec
je
dec
dec
ds
pop
ins
ins
enter
into
and
ds
and
dec
scas
(bad)
cmp
xor
inc
dec
cmp
sub
mov
add
inc
ds
test
jp
cmps
outs
outs
or
int
jo
(bad)
pop
cs
out
adc
push
imul
push
lock
ss
pop
test
pop
mov
ror
cmp
cmp
in
ins
push
push
mov
mov
pop
inc
jecxz
jl
fiadd
sbb
dec
sbb
test
nop
ret
push
scas
hlt
xor
xchg
xor
push
and
dec
cmp
push
push
push
dec
jmp
(bad)
mov
push
mov
dec
outs
into
jbe
jae
jo
mov
dec
pusha
or
dec
(bad)
mov
outs
push
push
sub
ret
test
bound
pusha
push
inc
shl
push
add
push
data16
ret
test
ret
sahf
test
ds
add
adc
mov
es
mov
cmp
popa
outs
mov
pusha
xor
sbb
push
gs
jl
inc
or
xchg
xchg
push
cs
(bad)
xchg
dec
or
adc
or
push
jl
push
mov
imul
add
mov
adc
data16
pop
(bad)
mov
sahf
push
in
pushf
ret
out
dec
sbb
and
pop
inc
pop
push
add
div
inc
adc
jge
pop
inc
ins
js
add
es
push
pop
adc
jle
(bad)
add
test
push
pop
xor
sahf
jo
xchg
adc
cmp
mov
or
dec
daa
add
dec
scas
es
jo
jle
jo
and
pop
out
mov
xchg
adc
mov
jno
xchg
into
pusha
push
fs
push
dec
pop
push
inc
(bad)
cmp
fcomp
jae
(bad)
fisub
dec
bound
pop
sbb
adc
out
(bad)
mov
ds
dec
js
test
es
es
cmc
ss
mov
inc
mov
mov
inc
cmps
and
or
cs
aaa
mov
xor
add
and
test
push
test
xor
hlt
dec
xor
xchg
scas
mov
scas
dec
inc
sub
inc
push
je
imul
push
int3
sub
ret
popa
sbb
test
bound
nop
xchg
pop
inc
out
dec
inc
xchg
es
data16
and
add
mov
xor
push
mov
mov
cs
xor
scas
or
add
jo
sbb
ret
jle
jb
xchg
es
(bad)
xchg
add
or
sbb
out
pusha
(bad)
mov
push
retf
xchg
pop
push
push
es
sbb
inc
or
shl
dec
fimul
or
mov
jle
or
lods
push
bound
inc
xor
ds
dec
gs
xchg
push
dec
test
sbb
sbb
nop
pop
jle
xchg
into
xor
push
jo
mov
inc
adc
xor
dec
out
inc
sbb
mov
push
dec
aam
pusha
adc
mov
scas
fisubr
pop
mov
fld
(bad)
inc
ds
(bad)
push
push
push
xchg
inc
outs
ret
pusha
cmps
pop
out
(bad)
inc
fiadd
push
inc
push
inc
movs
loope
jecxz
push
or
test
int3
dec
xchg
cld
scas
add
pusha
xor
mov
push
xchg
push
jl
sbb
push
out
xor
add
push
rol
sbb
cs
sahf
jo
in
into
(bad)
into
ss
add
push
call
(bad)
jge
ins
xchg
adc
mov
add
push
mov
mov
push
je
or
sub
mov
adc
rcl
inc
sahf
pusha
xchg
dec
and
xchg
push
adc
cdq
mov
stos
bound
dec
jbe
xor
movs
pop
ja
sahf
(bad)
push
xor
dec
es
xchg
jne
(bad)
jb
push
adc
es
ss
or
xchg
sbb
jbe
xchg
jecxz
mov
push
xor
aaa
scas
pop
mov
xchg
mov
and
xor
mov
push
pop
cmps
push
(bad)
pop
inc
adc
xchg
cmp
dec
xchg
and
sub
sbb
pop
scas
jbe
push
or
push
dec
cmp
test
xchg
push
mov
jne
or
(bad)
mov
fidiv
sbb
ins
adc
xor
imul
daa
push
(bad)
scas
pop
out
inc
daa
and
mov
ss
inc
sub
aaa
cs
pop
xchg
xchg
inc
xchg
into
adc
add
mov
and
or
push
xchg
jb
sbb
(bad)
jbe
sub
adc
mov
rol
jo
sub
push
sbb
xor
out
(bad)
cs
fiadd
jbe
add
xor
mov
cld
scas
push
sahf
add
inc
(bad)
ror
inc
ins
inc
es
or
xor
fidivr
pop
lods
cmps
es
outs
scas
ins
dec
xor
add
push
push
sahf
ss
pop
dec
xor
test
xchg
xchg
mov
out
jae
xor
push
aaa
inc
nop
or
(bad)
in
mov
jle
es
inc
push
outs
add
sahf
es
jbe
data16
xlat
and
dec
(bad)
xor
adc
dec
aam
cmp
ds
into
xor
jle
adc
sbb
fimul
aam
pushf
xchg
jmp
push
sbb
ret
push
push
xchg
(bad)
call
push
call
jl
inc
jecxz
jbe
jbe
fiadd
in
add
cmp
dec
inc
push
adc
ds
push
or
pop
inc
(bad)
cmps
jbe
adc
lea
fisubr
pop
mov
mov
enter
ss
and
ss
sub
inc
stos
dec
(bad)
xchg
bound
pop
(bad)
mov
pop
jle
add
test
(bad)
popa
mov
adc
pop
push
inc
mov
cmp
or
jbe
imul
pop
adc
sbb
cmps
mov
jmp
outs
pop
inc
sbb
add
ret
mov
jle
aaa
dec
nop
test
sub
sbb
out
call
push
adc
push
pusha
es
dec
into
add
mov
je
pushw
mov
imul
adc
jle
xor
push
mov
jo
pop
out
sub
push
push
test
scas
pop
arpl
push
dec
out
or
sbb
ins
xor
cs
and
push
and
inc
or
adc
dec
movs
xor
aad
xchg
cs
addr16
push
dec
mov
inc
into
xchg
inc
cwde
pop
push
lods
ss
adc
cwde
jle
test
mov
xchg
mov
xor
jb
loopne
or
push
push
fsubr
push
adc
push
js
scas
dec
inc
and
test
push
bound
inc
push
push
mov
xchg
add
cmps
out
lea
mov
xchg
into
shr
es
lock
test
sub
mov
es
dec
and
inc
(bad)
push
or
xor
jo
cs
cs
adc
retf
ins
push
push
pop
xor
xor
(bad)
(bad)
cmp
push
push
dec
push
mov
adc
mov
mov
jmp
dec
(bad)
sbb
rcr
and
sub
outs
push
inc
push
push
jp
sub
xchg
push
adc
mov
pusha
add
loope
(bad)
out
and
test
xchg
dec
xor
dec
cmps
mov
cmp
shl
push
jle
(bad)
or
inc
sbb
mov
adc
xor
les
jle
jbe
inc
xchg
push
fimul
pop
enter
xchg
or
adc
and
into
dec
xchg
adc
dec
ret
cmps
retf
add
push
cmps
xchg
movs
jo
test
pop
push
push
or
movs
int3
test
push
push
jbe
(bad)
jb
sub
out
push
mov
ss
shl
jo
cmp
push
sahf
(bad)
fidiv
sub
jge
pusha
and
les
push
scas
dec
adc
push
mov
sahf
push
movs
outs
sub
outs
xor
push
or
inc
sbb
inc
inc
xchg
and
sbb
js
xchg
imul
mov
inc
push
push
push
sub
lea
mul
sub
xchg
push
push
dec
xchg
xlat
dec
dec
xor
es
not
xchg
push
cmp
push
push
mov
or
into
xchg
data16
into
adc
out
jbe
push
and
inc
data16
scas
mov
adc
data16
and
xor
jbe
out
add
cdq
xchg
cmp
data16
sbb
cwde
cmc
cmps
stos
test
dec
es
cmps
not
mov
push
sahf
mov
xchg
ret
push
jle
or
rcl
xor
dec
xchg
div
and
sahf
inc
dec
cs
sub
push
jmp
jbe
ss
inc
sub
jp
pop
mov
push
(bad)
dec
inc
or
aam
test
leave
dec
push
scas
loop
dec
mov
mov
int3
mov
xor
mov
and
test
jne
out
add
stos
into
xchg
pop
push
or
rcr
push
data16
hlt
and
into
dec
cs
push
jnp
mov
push
test
les
neg
push
ins
cmps
xor
push
dec
loopne
shl
data16
push
xchg
(bad)
mov
sbb
adc
xchg
enter
push
ds
add
fs
(bad)
test
(bad)
sbb
sbb
adc
push
add
pop
scas
idiv
mov
push
jge
cs
cmp
xchg
dec
push
scas
dec
sbb
out
dec
dec
cs
or
cwde
jbe
push
push
stos
rol
inc
into
into
jno
imul
mov
dec
and
out
push
cmp
pop
xchg
push
pop
dec
and
push
js
cs
mov
in
and
out
(bad)
ds
adc
inc
and
sahf
jbe
add
test
xchg
data16
addr16
ss
sbb
imul
mov
fs
out
mov
add
loopne
xchg
outs
inc
scas
xchg
mov
(bad)
cs
xchg
dec
xor
push
push
popa
dec
push
(bad)
lea
test
std
mov
pop
bound
test
adc
jo
add
sbb
test
loopne
sahf
push
or
enter
adc
and
push
pop
cmps
inc
xor
aad
popa
ss
and
add
out
and
push
data16
nop
push
inc
push
fidiv
pushf
sbb
cmps
xchg
jbe
ss
cmps
jb
cmps
jbe
adc
test
push
ss
and
adc
test
sub
push
data16
add
push
shr
adc
rcr
data16
add
push
push
pop
je
dec
(bad)
mov
ja
inc
jle
mov
jbe
sbb
scas
test
movs
test
sbb
es
and
push
ins
dec
pusha
lahf
sbb
dec
push
mov
out
ss
loopne
adc
jle
xor
cmps
je
push
inc
dec
jecxz
call
(bad)
popa
push
add
mov
and
out
div
rcl
or
push
ss
adc
mov
test
cmp
dec
push
mov
add
push
or
cmp
test
arpl
sahf
ds
mov
lock
pop
jle
push
pusha
push
xor
xor
xchg
push
inc
neg
push
sbb
xchg
jle
ss
rcl
mov
ss
add
xor
mov
mov
movs
xchg
xchg
loopne
sub
xchg
and
push
ret
dec
test
data16
jbe
adc
jbe
adc
inc
into
(bad)
ja
push
data16
push
pop
dec
outs
sub
out
dec
aam
jb
jbe
push
xor
mov
sahf
push
xchg
push
or
into
lds
or
sbb
add
jmp
jo
sub
push
xchg
xor
xor
push
mov
(bad)
and
or
cs
data16
add
out
push
into
inc
cs
ficom
(bad)
mov
add
ds
or
add
jle
add
or
(bad)
(bad)
jnp
aam
jbe
scas
xor
cwde
test
scas
ds
test
scas
push
imul
(bad)
mov
jbe
jecxz
mov
call
(bad)
push
test
bound
adc
jle
out
les
pop
xor
cs
ds
cs
inc
scas
popa
push
scas
inc
pusha
or
push
mov
inc
add
and
ja
push
cmps
push
push
push
push
jbe
dec
sbb
dec
sub
dec
jb
xchg
cs
sahf
mov
inc
inc
push
fcom
call
sahf
add
fidivr
push
imul
inc
cli
out
add
push
push
(bad)
cmp
je
mov
es
dec
add
data16
inc
dec
loopne
mov
jp
push
into
pop
xchg
mov
mov
adc
(bad)
push
dec
push
add
and
jne
add
cmp
mov
div
sbb
push
pop
push
es
ret
sub
or
push
push
cmps
mov
dec
popa
(bad)
push
push
fidiv
mov
(bad)
sub
inc
push
xor
popa
xchg
inc
popa
test
push
(bad)
(bad)
ror
mov
pop
je
add
sbb
xchg
(bad)
xchg
push
or
mov
sub
cs
mov
inc
inc
pop
xchg
jno
call
xchg
ret
and
push
or
dec
dec
push
and
outs
mov
dec
pop
pop
xor
ins
pop
push
push
push
xor
cmp
outs
or
and
push
jbe
int3
sar
xchg
into
push
je
or
into
jb
push
out
(bad)
xchg
inc
inc
test
pop
xchg
test
adc
jge
das
inc
mov
(bad)
xchg
fist
outs
push
pop
xor
fcomp
outs
jbe
and
add
adc
dec
push
into
div
or
mov
jb
test
dec
fiadd
ins
(bad)
neg
dec
push
dec
ss
xchg
push
inc
cmps
jbe
push
sub
jo
out
(bad)
js
and
push
dec
inc
xchg
push
jo
nop
sub
push
es
jg
and
xchg
ss
push
add
cmp
fiadd
xchg
adc
dec
popa
cmps
add
push
xchg
mov
or
push
ds
(bad)
into
inc
push
jo
cmps
add
rcr
fidivr
add
dec
mov
mov
test
mov
and
mov
(bad)
dec
pop
(bad)
dec
icebp
inc
movs
dec
push
inc
inc
push
ds
in
push
sub
jo
neg
retf
ins
into
fiadd
or
push
push
sub
xor
push
dec
dec
into
pop
je
cmps
pop
dec
bound
mov
or
dec
ss
push
pop
xchg
fsubp
sbb
and
dec
jle
mov
cmp
jge
add
ins
(bad)
fiadd
xchg
mov
cmps
dec
je
cmc
test
push
push
push
dec
addr16
sbb
mov
(bad)
es
sbb
adc
(bad)
outs
test
call
les
xchg
out
mov
ss
and
adc
push
outs
sbb
jbe
xor
xchg
mov
ss
outs
or
cwde
les
inc
imul
xchg
outs
ss
stos
adc
fild
mov
mov
dec
jbe
out
pop
jno
jp
(bad)
mov
adc
test
loope
sahf
push
es
imul
jbe
add
sub
outs
test
or
inc
shl
mov
adc
mov
and
or
dec
ss
and
jecxz
inc
xchg
xchg
xor
fisub
push
imul
push
cmp
adc
scas
jl
out
or
jmp
inc
push
ret
pop
idiv
dec
push
xor
push
mov
cli
mov
and
mov
mov
leave
and
dec
push
outs
or
push
xchg
jne
sub
mov
outs
outs
cmp
xchg
sahf
outs
xor
inc
jo
or
mov
pop
push
jl
push
retf
sub
mov
mov
data16
push
and
scas
push
xchg
mov
add
push
clc
outs
jno
out
push
out
mov
out
es
mov
xchg
jb
ds
cmp
mov
and
and
ficom
(bad)
sbb
outs
imul
loope
push
add
ds
add
inc
fdiv
popa
push
or
pop
or
scas
push
ins
xor
dec
fidiv
ins
sahf
jbe
xchg
pop
sbb
(bad)
enter
(bad)
sub
or
ins
xchg
mov
dec
dec
xchg
sub
mov
scas
xchg
xchg
xchg
mov
bndldx
add
not
sub
lods
and
push
cs
ins
xchg
out
cs
fimul
push
xor
inc
sahf
mov
mov
movs
les
hlt
push
sbb
adc
into
les
pop
retf
out
mov
sbb
inc
mov
mov
xor
jbe
adc
ss
inc
adc
scas
gs
add
inc
ss
scas
mov
cwde
ss
dec
pop
dec
and
cmp
cmps
cmps
xchg
adc
jb
cmps
ficom
shl
and
mov
or
xor
xor
ret
add
and
je
push
xchg
imul
sbb
xor
into
push
xor
xchg
(bad)
dec
shr
pop
out
jp
push
inc
(bad)
push
cmps
xor
mov
push
sahf
xor
popf
sbb
dec
push
(bad)
push
movs
push
rol
pushw
dec
add
adc
mov
into
add
jo
pusha
(bad)
das
adc
into
inc
inc
jo
mov
lods
sub
(bad)
nop
add
sub
jge
mov
shl
push
pop
popa
inc
sahf
xchg
cli
inc
xchg
push
push
(bad)
jo
or
sub
mov
fbstp
es
dec
lds
popa
mov
(bad)
add
xchg
sahf
add
sub
ds
push
xor
mov
jbe
sub
pop
push
xchg
adc
or
push
jo
loopne
pop
loopne
push
sahf
xchg
pop
mov
ss
ja
xor
xor
mov
int3
push
imul
push
dec
mov
icebp
es
dec
cs
ret
cs
push
scas
fsubp
inc
and
dec
lgs
dec
xchg
fadd
mov
cmp
dec
inc
lea
out
mov
cwde
loopne
dec
out
out
or
mov
scas
inc
add
nop
push
xor
xchg
dec
mov
dec
ret
ds
les
adc
and
test
cdq
mov
xchg
rcl
push
cmp
pop
data16
cmps
pop
outs
loop
pop
ss
add
push
data16
and
cmp
xor
xor
push
mul
xchg
call
je
push
or
jle
push
inc
(bad)
mov
out
popa
aam
sbb
dec
out
mov
into
jle
add
adc
out
cmps
add
lea
dec
data16
sbb
ror
dec
push
mov
gs
xchg
enter
(bad)
sahf
sbb
fdiv
pop
outs
push
push
cmp
xor
dec
add
sahf
retf
pop
jbe
mov
push
cmp
and
and
jle
push
ret
ret
xor
jo
es
aaa
outs
mov
es
adc
push
adc
dec
movs
push
cmp
add
and
xchg
xor
mov
push
xchg
mov
pop
xor
daa
pop
pushw
mov
push
jbe
es
xchg
xchg
push
jne
xchg
push
test
ret
inc
pop
mov
into
ds
mov
ins
dec
mov
mov
inc
daa
call
cmp
push
(bad)
jle
or
pop
daa
or
xchg
push
push
push
inc
dec
popa
aam
push
push
mov
cmp
fidiv
push
mul
add
out
jle
xchg
pop
cmp
push
push
data16
push
push
adc
or
mov
push
cmp
mov
push
inc
jle
sub
or
inc
out
sbb
jle
sbb
jb
(bad)
jge
dec
or
add
sub
push
push
ficomp
push
inc
out
push
adc
scas
or
outs
sub
data16
scas
es
push
push
(bad)
cmps
inc
in
fst
sbb
pop
dec
inc
xor
sub
xchg
ss
xchg
(bad)
cmps
popa
pop
and
dec
(bad)
push
test
into
enter
fisub
push
ins
scas
push
data16
inc
ret
sahf
mov
sbb
sahf
jo
push
sub
(bad)
into
les
lods
pop
icebp
push
outs
mov
je
pop
xchg
xor
shl
outs
mov
dec
jbe
push
adc
push
fidiv
call
inc
add
cmp
shr
dec
push
jbe
push
or
cmp
sahf
adc
loopne
dec
push
(bad)
xchg
daa
dec
pusha
add
outs
pop
cmps
stos
push
test
div
inc
or
test
push
ss
test
pop
jle
add
stos
jle
outs
ficomp
xor
fimul
pop
dec
cmp
ss
call
xor
sbb
mov
cs
pop
push
popa
cmps
dec
and
dec
data16
dec
sbb
push
mov
or
jle
dec
ds
cmp
gs
inc
pop
jo
mov
dec
push
test
xor
test
aad
sbb
pop
push
ins
retf
cmp
es
jl
cwde
loopne
mov
scas
and
push
daa
xchg
cmp
rol
rcl
xor
push
push
neg
push
mov
push
inc
mov
dec
xchg
aam
mov
and
gs
je
call
jbe
mov
push
inc
push
cdq
and
jecxz
pop
je
push
jp
rol
push
push
sub
loopne
jae
pop
jo
and
dec
and
jbe
dec
dec
into
mov
add
dec
mov
dec
out
dec
xchg
out
es
imul
push
pop
or
sub
mov
push
mov
push
xor
push
push
lods
xchg
jp
cmps
ds
push
push
jbe
push
popa
mov
sub
pop
or
pop
inc
out
mov
sbb
scas
push
cmps
push
fimul
and
sub
mov
inc
sahf
(bad)
xor
xchg
jb
data16
dec
popf
dec
inc
es
xchg
loopne
add
mov
adc
lods
jge
cmp
xor
out
push
push
sub
out
inc
xchg
dec
mov
adc
xor
or
inc
(bad)
ins
pop
adc
ss
xor
jbe
mov
cmp
dec
data16
ja
push
or
fiadd
dec
jo
out
(bad)
scas
push
dec
leave
add
(bad)
push
and
ds
jo
dec
outs
leave
imul
ins
inc
jmp
push
push
aaa
push
(bad)
cmp
push
xchg
ds
into
jo
sub
(bad)
aaa
and
push
or
cwde
icebp
xor
cmps
push
ds
push
ret
into
out
jb
xor
xor
adc
and
mov
push
pop
bound
and
inc
(bad)
out
pop
aaa
and
xor
movs
push
inc
data16
cmp
xor
mov
mov
aad
retf
adc
movs
cmp
xchg
scas
jle
adc
scas
scas
inc
add
hlt
mov
or
dec
test
(bad)
mov
inc
and
xor
push
or
(bad)
xor
inc
cwde
push
out
pop
xchg
imul
into
sbb
ins
test
pop
dec
out
sub
pop
jo
mov
cmp
inc
inc
pop
sbb
dec
jle
or
vmovq
jbe
(bad)
add
cs
sub
push
dec
push
jae
push
xchg
dec
mov
jbe
mov
xchg
outs
(bad)
and
out
popa
push
xchg
mov
push
es
adc
add
jbe
out
cld
adc
pushf
jle
ss
dec
push
popf
mov
push
rol
jle
sub
jle
pop
les
xchg
push
xchg
mov
xchg
or
mov
sahf
push
push
outs
ins
sbb
or
and
shl
daa
popa
and
xchg
mov
imul
dec
push
xchg
mov
pop
or
loope
sahf
mov
mov
push
dec
and
and
cmp
retf
mov
xchg
retf
outs
popa
push
mov
enter
add
xchg
outs
and
enter
push
cmc
mov
push
ss
jge
into
push
mov
push
xchg
hlt
add
clc
push
pop
ds
push
test
mov
xchg
xchg
inc
popa
push
cmps
fisub
mov
popa
bound
cmp
pop
sahf
xchg
pop
sub
jg
push
dec
pop
test
xchg
xor
es
popa
ficomp
push
adc
mov
test
popa
pusha
cdq
inc
dec
jle
popa
mov
arpl
mov
inc
dec
pop
fidivr
xchg
fs
sbb
rol
inc
push
add
shl
imul
iret
add
idiv
cmovb
lods
inc
pop
push
dec
jle
or
pop
pop
ds
xor
add
ret
inc
rol
dec
enter
push
test
(bad)
or
mov
pushf
es
sbb
sub
dec
es
mov
aad
cmp
push
push
inc
ins
rcl
scas
scas
push
and
adc
out
xchg
aad
mov
xlat
inc
fs
push
pop
mov
lods
add
mov
xchg
xchg
cmp
xchg
cmp
ins
retfw
popa
mul
adc
out
jle
mov
cmp
test
aaa
mov
add
inc
popf
mov
test
push
call
dec
xchg
xchg
inc
ins
push
loope
rol
push
inc
jo
(bad)
rcr
mov
cmp
pop
inc
push
out
ss
pop
add
sub
adc
div
push
push
push
data16
or
ss
sbb
add
ret
push
rol
xchg
jbe
push
or
inc
dec
loop
xchg
data16
adc
mov
xor
sub
imul
ss
cs
pusha
test
nop
ds
mov
inc
out
(bad)
test
jmp
push
and
int3
push
push
pop
xchg
xor
inc
push
mov
scas
cs
push
push
add
or
xchg
cmp
dec
scas
daa
pop
sahf
inc
pop
pop
addr16
or
into
pop
push
inc
jbe
enter
pop
push
push
add
push
(bad)
inc
out
test
xor
add
cmp
test
mov
and
mov
inc
add
cwde
inc
cmps
push
or
adc
dec
push
push
pop
test
out
data16
xor
dec
mov
add
xchg
test
dec
jbe
ss
jo
push
dec
push
das
dec
sbb
push
pop
dec
inc
test
add
hlt
mov
jle
push
mov
sahf
add
inc
or
cmp
adc
xchg
push
les
dec
inc
push
(bad)
into
in
ds
push
ss
push
inc
sbb
push
push
dec
push
inc
mov
jle
jo
ret
push
es
cmps
or
and
outs
dec
out
(bad)
jbe
push
mov
mov
out
and
jbe
jle
add
sbb
dec
xchg
je
or
pop
push
sbb
sub
test
cs
push
push
mov
pop
inc
outs
push
push
xchg
pop
es
and
loopne
push
push
mov
scas
mov
ret
int3
popa
add
into
push
rol
cmp
inc
mov
(bad)
fidivr
loop
push
out
dec
mov
pushw
xchg
xchg
push
cmp
push
inc
or
movs
mov
push
xchg
inc
xchg
ds
pop
dec
ret
xor
cdq
in
mov
cmps
clc
or
inc
mov
push
push
push
push
mov
dec
adc
sub
outs
xor
cmp
jl
dec
out
inc
or
inc
push
dec
je
mov
es
push
sbb
mov
push
lods
push
pop
add
sbb
push
inc
xchg
mov
jno
fs
cmp
push
cs
ss
or
movs
movs
out
or
(bad)
pop
scas
aad
outs
leave
into
not
inc
sbb
shl
push
test
adc
jle
data16
adc
ss
dec
(bad)
sbb
fsubrp
push
inc
or
mov
(bad)
xchg
and
dec
jbe
adc
cmp
adc
sahf
data16
(bad)
push
scas
pop
mov
not
adc
push
push
cmps
pushf
sbb
add
add
push
push
or
and
out
add
mov
mov
jle
ss
or
adc
add
shl
cs
add
ss
leave
push
add
mov
rol
inc
icebp
xor
inc
inc
adc
out
cs
push
sbb
es
push
mov
sahf
cs
mov
xchg
xchg
sub
dec
push
or
mov
mov
mov
(bad)
mov
push
cmp
mov
dec
or
(bad)
into
ss
ss
lods
dec
xor
and
pop
outs
leave
mov
cwde
push
js
ss
test
scas
mul
jmp
push
mov
adc
inc
pop
jo
jge
test
mov
xor
fs
pop
(bad)
mov
xchg
ss
(bad)
out
inc
mov
push
jbe
mov
push
push
pop
and
or
push
jo
cmps
or
ret
scas
push
pusha
cs
pusha
sbb
or
inc
outs
scas
dec
(bad)
aad
and
push
xchg
push
add
aam
push
data16
sbb
push
jo
aad
ins
fisttp
sub
leave
sub
pop
out
xchg
inc
dec
popa
mov
xchg
or
pop
cs
test
add
push
mov
push
ins
push
pop
mov
js
jle
scas
int3
or
sbb
lods
xchg
add
test
xchg
push
(bad)
inc
push
dec
das
jmp
cmp
mov
aaa
mov
ret
fdivrp
push
movs
nop
inc
add
sahf
xchg
jo
or
je
push
inc
mov
jbe
add
xor
ss
mov
xchg
pop
inc
or
jbe
xchg
xor
sub
out
push
push
inc
push
rol
jbe
jbe
fcom
sbb
(bad)
add
xchg
cmps
es
test
pop
xchg
jmp
out
and
inc
(bad)
fdivrp
outs
lea
inc
out
inc
out
push
mov
cdq
ficomp
xchg
push
xchg
xchg
xor
cs
add
pop
popf
into
jb
inc
js
inc
inc
or
cs
adc
daa
jle
mov
xor
ss
adc
outs
(bad)
jle
shl
nop
dec
mov
jb
(bad)
jmp
add
(bad)
sbb
push
scas
aad
jne
data16
dec
dec
push
dec
mov
arpl
(bad)
dec
dec
ret
mov
(bad)
pusha
sub
(bad)
xchg
push
icebp
add
or
dec
outs
push
add
sahf
xchg
inc
not
ja
sbb
mov
daa
jo
push
mov
ficom
cmp
inc
xchg
push
sbb
add
xchg
inc
fadd
div
inc
xor
jo
push
xchg
bound
out
mov
test
into
imul
pop
xor
or
mov
cmps
out
push
push
shr
sub
cmps
bound
push
push
pop
add
xchg
jg
(bad)
xor
je
push
popa
fisubr
cs
mov
push
ficom
inc
add
pusha
and
out
inc
mov
scas
xor
test
inc
xchg
pop
add
dec
dec
sub
pop
add
test
pushf
sub
cs
loopne
(bad)
out
pushf
ror
sub
out
inc
adc
(bad)
loopne
mov
in
push
es
ror
idiv
push
pop
mov
sbb
out
jno
inc
js
pusha
pop
cs
pop
push
mov
into
push
mov
lds
outs
test
dec
ins
dec
or
or
shl
add
push
dec
inc
(bad)
jbe
sub
pop
test
xor
add
xchg
push
test
dec
add
add
mov
add
neg
push
cs
xor
test
(bad)
or
jbe
dec
or
jbe
pop
pop
cdq
push
jbe
xor
test
test
pop
pop
sbb
data16
adc
sub
push
into
xchg
pushf
xchg
dec
mov
sub
or
js
popw
lock
inc
(bad)
ficom
loop
or
mov
xor
add
pushf
retf
(bad)
dec
add
out
clc
adc
sbb
bound
xchg
shl
lds
jbe
pop
inc
adc
mov
dec
mov
outs
adc
mov
cdq
push
or
xchg
xchg
xchg
ror
cmp
inc
mov
and
add
(bad)
loopne
sub
mov
inc
xchg
xor
cs
xor
out
faddp
pop
jbe
idiv
dec
jmp
dec
out
leave
sub
xchg
bound
mov
out
mov
sbb
scas
xchg
and
ins
mov
ret
imul
pop
mov
sbb
sub
pusha
add
pop
push
mov
lods
and
xor
cmp
push
add
jle
sahf
jmp
lods
mov
jle
cs
rcl
or
or
push
fdiv
ror
es
push
pushf
push
idiv
push
xchg
jp
sbb
jo
int3
ret
dec
inc
out
push
dec
lods
xchg
add
sub
xlat
mov
cmp
cdq
movs
push
(bad)
ds
data16
push
pop
push
cmps
popa
mov
dec
cmp
out
mov
add
push
xchg
(bad)
xor
push
cdq
xor
(bad)
out
cdq
sbb
inc
mov
sahf
into
push
mov
pusha
and
jle
fs
sub
push
test
cdq
adc
push
rol
cli
sub
and
outs
xchg
(bad)
lods
popf
sub
jbe
jmp
loopne
loopne
out
dec
(bad)
push
adc
cmps
jbe
xchg
jb
add
loopne
jmp
sahf
push
outs
bound
dec
mov
push
jo
idiv
inc
push
sub
sub
data16
jno
add
add
push
push
mov
push
push
inc
pop
push
into
dec
mov
mov
and
ins
sub
dec
sahf
mov
test
inc
pusha
cmps
dec
adc
and
scas
push
jbe
push
(bad)
(bad)
out
xor
or
push
out
inc
scas
xor
(bad)
push
enter
push
inc
push
pop
mov
xchg
or
pop
pushw
gs
sub
cdq
cmc
mov
mul
xchg
xor
adc
out
mov
dec
xor
ss
outs
scas
inc
push
cmps
adc
enter
scas
dec
inc
mov
push
dec
loopne
push
outs
jle
xchg
dec
sbb
or
inc
xchg
cmp
inc
ds
mov
movs
xchg
jp
inc
push
(bad)
mov
inc
push
fimul
xor
daa
es
out
adc
les
mul
pop
in
jae
ins
push
into
into
ins
xchg
mov
hlt
es
movs
rcl
push
sahf
idiv
xor
and
and
mul
int3
and
and
ret
jmp
lods
ss
jbe
inc
popa
sbb
pop
add
adc
or
push
int3
jle
shr
(bad)
jo
jne
xchg
jecxz
jp
cmps
push
pop
push
(bad)
(bad)
es
mov
into
scas
sub
xor
or
inc
cmp
pop
or
add
pusha
je
sub
dec
xchg
adc
cmps
mov
mov
(bad)
xchg
clc
outs
or
xor
pop
ds
xchg
(bad)
mov
xor
adc
push
into
ss
test
push
pop
mov
(bad)
(bad)
mov
push
jo
ins
adc
pushf
inc
ss
aad
push
not
imul
push
out
jp
loope
data16
(bad)
cmps
push
call
cmp
es
or
popa
aam
gs
hlt
dec
inc
shr
inc
add
stos
mov
jbe
xchg
pushf
xchg
fdiv
mul
scas
(bad)
push
mov
test
retf
ins
push
xchg
or
add
ds
sub
xor
ins
add
add
inc
jo
pop
idiv
jle
bound
push
jle
sub
xchg
scas
jbe
jne
pusha
aad
jle
push
dec
add
sahf
push
or
push
sub
loope
ds
xchg
dec
inc
sub
gs
scas
popa
cmp
push
dec
jne
pusha
adc
mov
xchg
out
data16
add
add
push
inc
je
pop
xchg
ficomp
ss
fadd
sahf
inc
inc
mov
mov
xor
inc
stos
(bad)
push
(bad)
mov
sbb
ficom
call
mov
add
jbe
push
dec
retf
sub
pop
ficomp
inc
or
push
shr
outs
pushf
or
push
inc
mov
into
dec
and
nop
cmp
inc
cmp
pusha
add
push
out
shr
fisubr
(bad)
inc
jne
test
(bad)
xchg
jno
pop
inc
sub
push
jo
dec
mov
outs
inc
(bad)
into
xor
dec
push
dec
ficom
inc
mov
cmp
adc
push
(bad)
or
ss
(bad)
push
pop
add
fist
push
dec
cs
jo
push
push
mov
cmp
inc
and
push
ins
out
dec
cmps
add
(bad)
pop
(bad)
adc
in
xchg
and
fiadd
movs
mov
mov
daa
pushf
add
push
mov
add
jno
push
push
cmps
xchg
loope
inc
push
dec
inc
mov
adc
dec
add
mov
sub
sbb
jnp
add
(bad)
ds
dec
ins
adc
pusha
inc
es
add
jcxz
aaa
fimul
cmp
daa
pop
pop
into
push
pop
rol
or
add
xchg
pusha
jbe
test
scas
int3
inc
mov
popa
inc
mul
jmp
sbb
push
(bad)
je
or
ror
mov
inc
popa
mov
push
push
or
cmps
fidiv
daa
adc
out
scas
jmp
inc
popa
sbb
es
sbb
rcr
dec
sahf
scas
es
adc
scas
push
dec
sahf
xchg
dec
verr
adc
dec
inc
or
outs
out
sahf
mov
inc
out
inc
test
mov
or
xchg
jo
data16
(bad)
bound
xor
xlat
xor
out
out
or
jl
xchg
popa
push
ds
mov
aaa
bound
push
sub
dec
adc
into
xchg
jle
pop
data16
inc
push
outs
dec
push
sub
sbb
jmp
jne
popa
mov
sbb
push
(bad)
inc
es
sbb
push
xor
jb
out
ins
test
pop
jo
ds
dec
add
push
pusha
push
and
jle
es
and
cs
and
pushw
out
or
test
test
dec
push
inc
sub
cwde
xor
and
shr
add
cmps
es
dec
or
data16
xchg
addr16
pusha
mov
push
push
ss
bound
add
mov
push
add
(bad)
pop
cmps
enter
out
mov
out
ficom
mov
push
push
push
sbb
sahf
pop
(bad)
leave
add
(bad)
or
xor
push
outs
inc
or
cmp
push
or
sub
dec
mov
popa
out
scas
inc
add
jbe
push
loopne
mov
sbb
ret
push
call
push
fisub
push
pop
adc
sub
addr16
jge
retf
mov
mov
imul
das
pop
pusha
and
(bad)
mov
or
popa
push
out
cmps
push
push
add
pusha
pop
push
ds
(bad)
push
sub
(bad)
push
sbb
out
sub
cmps
idiv
mov
pop
cld
cs
push
fs
dec
push
push
push
inc
push
dec
and
sbb
cs
les
xor
sub
call
inc
cmp
or
out
push
add
out
push
into
hlt
or
push
in
data16
movs
sbb
adc
dec
mov
and
inc
dec
arpl
es
data16
inc
pusha
pusha
pop
clc
es
cmps
add
pusha
test
mov
push
call
dec
xchg
sbb
mov
es
outs
xchg
xor
pop
jle
and
pop
add
push
and
mov
add
add
fadd
out
adc
xchg
pusha
push
(bad)
out
pop
icebp
adc
add
mov
into
ins
daa
rol
or
mov
xchg
pop
xchg
(bad)
sub
idiv
pop
push
inc
push
xor
mov
xchg
inc
ror
leave
movs
and
sahf
es
nop
mov
sub
not
sub
(bad)
fisubr
add
cs
and
xchg
inc
arpl
push
mov
in
mov
mov
inc
mov
mov
inc
sbb
test
(bad)
dec
xchg
push
inc
outs
ss
dec
push
sbb
pop
stos
and
xchg
into
xchg
out
xor
sub
(bad)
cs
sub
sub
and
gs
(bad)
xor
arpl
jbe
sbb
fadd
idiv
dec
sub
sub
xchg
xchg
fadd
leave
nop
xchg
cmps
add
fiadd
push
into
data16
inc
shr
dec
nop
mov
xchg
sub
xchg
mov
rcr
mov
ss
or
pop
dec
inc
add
js
ret
or
outs
jo
loopne
dec
icebp
test
mov
data16
cmps
add
(bad)
push
rcr
add
push
add
fs
push
and
cwde
icebp
push
jle
pop
adc
mov
sahf
mov
push
out
mov
out
sahf
ss
ins
je
push
pop
pop
and
(bad)
xchg
test
fimul
xchg
dec
test
pop
and
jbe
mov
js
lods
scas
sub
pop
push
mov
fidiv
mov
xor
jge
js
mov
sahf
push
inc
(bad)
int3
fstp
or
js
push
xchg
push
inc
mov
push
ss
lods
or
dec
imul
push
out
cmps
mov
push
push
bound
xchg
outs
dec
(bad)
pop
cmp
fisub
sub
xchg
test
es
push
push
cmps
xchg
xchg
dec
gs
push
into
pusha
inc
sub
jne
jae
push
pop
inc
shl
fimul
loope
sahf
nop
xor
outs
ror
push
cmps
jbe
push
adc
add
xor
add
add
and
(bad)
mov
(bad)
loopne
dec
setle
xor
adc
and
xor
mov
outs
arpl
xchg
or
es
callw
add
je
xor
movs
and
inc
out
adc
mov
add
mov
into
push
loope
sbb
push
xor
inc
out
push
xchg
xor
aad
pushf
add
sub
xor
jbe
into
mov
dec
inc
xchg
(bad)
xor
pop
mov
sbb
dec
es
inc
shr
mov
dec
add
pushw
into
sbb
or
into
es
push
push
ret
xor
adc
mov
(bad)
(bad)
pop
mov
scas
push
xchg
shr
jne
add
push
xchg
out
jo
sub
add
test
pop
pop
jno
lock
inc
sub
jle
ss
inc
je
and
mov
dec
ret
into
cli
pop
jbe
out
jo
push
sub
mov
xchg
stos
xchg
jb
bound
or
cs
inc
add
xchg
xchg
nop
pop
jb
jle
pusha
into
sar
and
push
push
push
cmp
push
push
dec
dec
push
pop
xor
adc
xchg
scas
xchg
xchg
add
push
(bad)
mov
sbb
xchg
xchg
add
outs
pop
ds
sbb
dec
scas
cmp
adc
push
outs
cmps
inc
sbb
jle
(bad)
xchg
xor
sbb
jle
mov
mov
push
lds
push
(bad)
test
jl
clc
repnz
push
pop
inc
xchg
xchg
inc
popf
ss
div
pop
imul
push
xor
mov
push
xchg
pop
out
add
jo
and
in
out
into
call
pop
push
xor
xchg
(bad)
push
imul
xchg
sbb
push
test
mov
sub
inc
fidiv
mov
dec
sbb
or
int
dec
scas
gs
adc
pusha
add
add
cwde
rcl
xchg
dec
pop
sahf
mov
push
pop
ss
les
add
xchg
rcr
outs
add
(bad)
(bad)
ds
pop
push
xor
or
adc
outs
loopne
adc
cmps
leave
push
inc
cmps
(bad)
inc
retf
add
jmp
sub
push
mov
retf
dec
or
mov
push
(bad)
mov
xchg
cmps
cwde
jmp
out
adc
ficomp
push
pushf
retf
push
push
pop
adc
pop
mov
and
scas
dec
push
dec
and
out
out
sbb
rcr
push
or
sbb
cmps
cs
and
or
outs
sahf
xor
xchg
jne
mov
push
(bad)
popa
and
or
jo
cmp
and
out
fisub
mov
movs
adc
add
inc
out
dec
sbb
inc
mov
push
inc
pop
popa
add
inc
jge
inc
popa
sbb
xchg
adc
imul
xchg
xor
dec
jbe
ds
push
ins
nop
inc
lea
(bad)
dec
xor
push
mov
push
outs
push
rol
inc
xor
add
into
jmp
push
push
loop
out
jge
pushf
mov
cmps
fimul
push
rcl
sbb
add
push
push
add
outs
ss
mov
sbb
push
adc
add
xor
push
push
fidiv
dec
test
inc
es
into
dec
and
xor
out
push
mov
ret
push
jmp
dec
xchg
adc
add
push
or
push
into
xor
mov
pop
ss
dec
xchg
xor
and
push
out
pusha
and
ss
data16
aam
ds
mov
xor
push
(bad)
jmp
sub
pop
leave
sbb
and
push
xchg
mov
js
in
xor
jo
add
sbb
addr16
outs
push
dec
push
sbb
aaa
push
push
push
pusha
jb
dec
ds
imul
gs
pop
pop
rcr
mov
rcr
ficom
add
(bad)
aam
push
xor
lods
push
push
xor
mov
(bad)
ficom
or
mov
pop
and
into
pop
xchg
cmp
in
mov
data16
jbe
sub
dec
inc
fs
cs
and
push
jle
imul
add
daa
call
add
(bad)
jae
cwde
and
dec
call
add
xchg
sbb
xchg
scas
inc
lods
cs
and
adc
popf
scas
out
xor
jo
xor
mov
cwde
xchg
outs
xchg
je
push
add
data16
push
mov
dec
dec
adc
nop
outs
jge
inc
inc
loope
dec
out
outs
cmps
lods
mov
add
push
and
xchg
(bad)
pop
mov
mov
in
mov
ss
cmp
dec
das
xor
shl
jle
js
mov
inc
push
mov
push
cdq
or
dec
ds
adc
pushf
cmp
cs
jo
push
mov
mov
push
cs
outs
sahf
sub
xchg
(bad)
scas
jge
inc
test
cmc
push
ins
ins
cmps
cs
dec
jns
sbb
(bad)
mov
push
or
push
pop
xor
add
mov
dec
cmp
out
mov
pop
push
mov
and
xchg
js
add
lods
or
sahf
dec
inc
scas
test
jno
cs
jmp
enter
cmps
dec
cmp
or
test
push
jbe
xchg
xchg
adc
push
push
xchg
adc
movs
(bad)
push
fisub
out
loopne
sub
sahf
adc
pop
xchg
push
ds
(bad)
loop
test
icebp
push
(bad)
data16
pop
into
push
xor
xchg
mov
pop
add
ss
lock
push
pop
ss
ins
mov
ins
cs
mov
add
(bad)
pop
mov
mov
dec
ret
and
pop
cmp
pop
cmp
cmp
xor
mov
sub
inc
cmp
or
xchg
idiv
push
mov
xchg
xchg
mov
adc
into
lds
xor
out
inc
sub
inc
(bad)
popa
jne
xor
pop
dec
ds
push
loop
(bad)
out
je
les
xor
pop
test
xchg
lea
push
mov
add
add
cmp
and
jbe
push
mov
bound
mov
dec
or
inc
inc
and
sahf
jbe
inc
rcr
push
dec
retf
mov
xchg
aam
ficomp
sbb
pop
xchg
(bad)
aam
or
or
inc
ror
scas
ss
inc
xchg
sbb
push
pop
(bad)
test
mov
jb
dec
mov
dec
or
(bad)
test
inc
or
xor
push
(bad)
imul
pop
loopne
mul
ss
mov
or
pop
xchg
push
jo
inc
mov
ss
add
mov
push
inc
push
jg
je
test
mov
xor
push
push
in
out
inc
nop
pop
das
cs
aaa
mov
leave
and
inc
push
(bad)
ficom
or
mov
push
es
ja
test
retf
jmp
rol
dec
cmp
(bad)
or
adc
dec
lods
mov
enter
push
push
test
mov
test
inc
dec
nop
sbb
xchg
or
xchg
clc
dec
ret
sbb
jle
scas
outs
ror
inc
test
push
adc
pop
pop
data16
inc
mov
mov
dec
mov
data16
add
cs
add
inc
pop
inc
ins
cwde
test
and
xchg
add
out
xchg
sbb
out
xor
xor
out
jle
jno
push
jo
adc
push
cdq
mov
push
pop
or
inc
pusha
les
push
and
xor
jle
ss
pop
movd
jge
dec
jo
xor
push
push
not
push
ror
dec
(bad)
mov
into
jle
lds
sahf
push
mov
jecxz
pop
push
jbe
xchg
or
inc
push
ss
or
jmp
sbb
shl
cmps
out
jne
mov
ror
inc
retf
dec
sbb
push
data16
(bad)
sub
adc
es
inc
ret
xor
add
add
(bad)
xchg
and
push
mov
outs
xchg
cmp
sahf
add
add
jmp
outs
icebp
lock
push
push
dec
pop
cmp
xor
adc
sbb
dec
inc
mov
hlt
stos
rcl
jge
dec
sub
inc
(bad)
ins
ret
lods
data16
inc
or
push
push
xchg
jle
into
push
push
add
add
and
jbe
jle
inc
data16
push
mov
pop
ds
jle
cmp
xor
pop
test
dec
jge
mov
adc
adc
(bad)
push
pop
icebp
add
xchg
or
sbb
sub
jo
cmp
or
xchg
and
scas
pop
add
shl
data16
sbb
pushw
fsub
or
(bad)
sub
in
push
into
jbe
jbe
in
push
push
(bad)
xchg
test
mov
push
add
cmps
in
and
cmp
push
(bad)
inc
pop
push
pop
test
push
not
or
jb
rol
cmp
aam
mov
rol
xchg
push
out
mov
pop
ins
jp
add
push
adc
sahf
push
int
jo
das
adc
nop
dec
jne
push
bound
shl
neg
lock
loopne
into
out
push
push
inc
scas
out
jg
xchg
adc
ss
jbe
xor
(bad)
outs
push
ficomp
inc
out
push
mov
and
dec
inc
push
inc
add
inc
outs
jp
lea
add
mov
add
out
not
inc
sub
dec
out
mov
pop
pop
xchg
push
out
fidivr
or
jno
ret
(bad)
outs
ss
mov
xor
inc
or
mov
dec
inc
rcl
ss
push
outs
push
rol
cmp
dec
scas
inc
xchg
call
pop
call
inc
sbb
and
(bad)
ss
cmps
sbb
pop
and
(bad)
add
mov
add
daa
xchg
dec
ds
mov
pop
pop
ficom
cmps
dec
inc
cdq
mov
adc
pusha
jne
push
out
jbe
movs
xchg
add
(bad)
into
into
push
inc
push
xchg
sbb
push
push
xchg
mov
sbb
ss
push
out
es
inc
push
fiadd
jp
outs
jecxz
(bad)
(bad)
xchg
and
add
js
add
mov
loopne
or
sbb
sbb
scas
(bad)
cmps
inc
lds
sub
dec
mov
add
and
inc
xchg
push
dec
sub
mov
inc
pusha
test
mov
sbb
cs
push
bound
(bad)
and
sub
sbb
add
pop
scas
xchg
mov
sub
push
cwde
imul
inc
je
inc
sub
dec
lods
mov
jae
adc
fs
fdivr
xchg
sbb
and
ficom
(bad)
jmp
inc
lods
movs
and
rcl
mov
sub
out
out
lods
add
sbb
dec
ror
movs
push
add
mov
sbb
xchg
sbb
push
mov
nop
dec
xchg
rcr
push
push
xchg
les
cmps
push
add
or
push
cmp
test
push
out
stos
push
inc
shl
xor
xor
dec
pop
cmp
nop
loope
push
inc
mov
movs
push
add
inc
scas
(bad)
scas
add
and
inc
xor
xlat
(bad)
ss
shl
into
gs
or
data16
and
jbe
push
(bad)
xchg
pop
dec
mov
fdivr
xchg
outs
out
mov
pushf
(bad)
dec
sub
jbe
mov
outs
adc
adc
(bad)
xchg
xor
mov
fisubr
test
or
sub
adc
es
aaa
mov
mov
ror
jl
mov
jecxz
push
push
cmps
(bad)
popw
and
scas
pusha
mov
jo
ds
adc
adc
mov
pusha
adc
push
xchg
or
pop
cmps
dec
inc
or
scas
cmc
sbb
push
mov
test
sub
dec
xor
dec
inc
neg
fsubp
les
add
xchg
cli
mov
push
(bad)
shl
push
(bad)
out
add
pop
push
xchg
push
jbe
shl
add
data16
sahf
jle
jg
mov
cwde
lods
rcr
scas
mov
push
sub
outs
xchg
jp
je
xor
mov
xchg
loop
jle
dec
cs
push
inc
cmp
(bad)
ss
sbb
into
inc
jge
sbb
sub
mov
adc
push
push
loopne
pop
dec
xchg
inc
cmps
or
push
fidivr
test
xchg
or
push
cmp
adc
inc
sahf
cmps
and
inc
dec
js
in
ss
dec
pop
add
push
dec
dec
loope
inc
fidivr
push
ret
outs
into
jge
sbb
xor
push
movsx
fimul
rcl
dec
jno
sub
pop
ins
or
jbe
add
push
xchg
sahf
push
mov
xor
inc
jo
push
pop
dec
div
push
dec
scas
xchg
cmp
jbe
ficom
adc
push
push
mov
inc
les
data16
dec
icebp
adc
cmps
jp
or
or
icebp
or
mov
xchg
cs
push
shl
aam
cmps
pushf
pop
adc
outs
inc
or
leave
xchg
pop
cdq
add
push
ds
inc
adc
inc
mov
add
sahf
out
xchg
mov
mov
shr
cmps
push
push
add
pusha
scas
xchg
out
ss
je
xchg
xchg
and
push
jb
cs
mov
or
inc
dec
jbe
add
js
cs
xchg
dec
es
sahf
data16
mov
out
pop
xchg
adc
push
ss
jb
or
nop
inc
rol
int
data16
ins
into
push
test
aam
ficom
dec
or
dec
adc
out
pop
test
xlat
(bad)
dec
jo
or
mov
inc
push
dec
add
je
dec
push
push
or
push
pop
sbb
mov
dec
scas
add
push
xchg
push
mov
adc
xor
scas
xor
sub
push
nop
ins
fimul
fcom
pop
mov
xchg
cmp
or
xor
ss
inc
push
add
push
dec
(bad)
(bad)
not
and
cmovp
push
pop
add
fild
sub
push
clc
outs
add
xchg
push
cmps
rcr
ret
ds
or
les
inc
jo
or
jge
out
push
push
leave
add
cmps
das
jo
push
shl
push
cs
push
arpl
ss
(bad)
dec
adc
not
and
push
inc
or
test
retf
nop
cs
jmp
cs
test
push
nop
dec
inc
or
push
jle
and
scas
(bad)
or
fs
test
leave
dec
sahf
inc
mov
pushw
ins
mov
rcl
ss
jle
aaa
push
(bad)
pop
add
pop
inc
es
imul
ss
sbb
inc
add
push
xlat
jmp
stos
inc
lea
aam
sbb
add
lods
inc
xor
cs
sub
xchg
jbe
xchg
add
or
mov
push
push
cs
cs
pop
jb
jo
sahf
in
add
inc
and
push
xor
add
inc
xchg
xlat
or
ss
push
pop
into
inc
add
shl
mov
mov
xchg
push
(bad)
es
sbb
xchg
push
push
inc
dec
retf
or
(bad)
pushf
add
bound
pop
adc
and
scas
sahf
xchg
fdivr
add
push
mov
and
mov
push
xchg
pop
daa
dec
or
push
fld
push
inc
out
dec
add
(bad)
push
into
dec
mov
outs
xor
das
jmp
dec
cmp
mov
xor
xchg
sub
aam
ss
sbb
push
push
push
xor
mov
and
inc
xchg
mov
(bad)
scas
jbe
movs
add
jbe
xor
and
into
inc
enter
push
ds
push
arpl
ins
dec
or
push
xor
fcom
inc
cwde
das
or
push
stos
sbb
inc
(bad)
jbe
add
and
or
add
and
out
xchg
test
push
xchg
add
push
out
add
loopne
rcr
dec
ret
push
add
or
or
push
mov
rcl
ss
jbe
call
pop
ss
mov
mov
push
in
push
jle
inc
xor
sub
dec
dec
into
mov
add
push
push
inc
scas
mov
nop
adc
dec
(bad)
outs
dec
fs
stos
outs
xchg
into
inc
xor
xor
or
inc
rol
scas
mov
sub
ss
je
push
test
cmp
mov
popa
sbb
xchg
or
mov
out
mov
out
and
mov
and
add
dec
outs
push
add
push
mov
or
push
loope
les
ret
mov
cs
mov
xchg
xchg
(bad)
xchg
push
inc
test
and
xchg
ds
push
inc
xor
inc
sahf
ret
adc
push
out
test
mov
xchg
or
or
out
mov
shr
neg
push
mov
dec
inc
ret
outs
out
in
retf
xor
inc
es
mov
ss
pop
data16
aas
mov
test
shr
push
mov
pop
xor
push
xor
iret
pop
push
pop
inc
aaa
xor
mov
les
sahf
es
adc
push
sub
scas
lods
bound
sbb
ficom
jbe
sub
xchg
mov
pop
inc
lea
push
sahf
pushf
sub
test
sub
xchg
push
adc
mov
sbb
push
pop
and
imul
or
cmp
jbe
dec
sbb
or
push
into
sub
add
push
cmp
jbe
push
jo
push
push
movs
add
outs
(bad)
outs
and
push
loope
shl
mov
inc
mov
ds
jp
ds
push
ss
dec
inc
ins
or
test
xchg
push
outs
push
pop
push
sbb
ror
xor
push
data16
mov
rol
push
dec
popf
mov
es
cmp
mov
add
push
gs
push
xor
inc
dec
sahf
mov
es
aaa
xor
inc
jecxz
inc
ficom
push
xor
mov
lods
or
add
sub
jle
xchg
add
inc
push
xor
leave
ds
cmps
add
test
push
add
(bad)
mov
push
xchg
sbb
fisub
pusha
rcr
lea
mov
out
dec
loope
push
push
jbe
and
add
ss
and
dec
nop
and
cmp
shl
cmp
push
xchg
outs
leave
adc
mov
retf
pushw
out
mov
sbb
mov
and
sbb
add
ss
push
pop
rcr
mov
sbb
push
(bad)
push
movs
xchg
movs
(bad)
outs
cmps
inc
dec
cmp
aam
addr16
jbe
ret
sbb
pop
cmp
cs
ror
inc
xchg
push
loope
jbe
mov
dec
jle
inc
in
xor
je
inc
adc
test
data16
push
pop
xor
div
mov
mov
push
mov
push
pop
sbb
(bad)
out
cdq
and
push
add
push
mov
jl
or
ss
inc
mov
es
movs
jle
je
ss
dec
cs
push
inc
data16
adc
dec
push
mov
lods
or
mov
inc
push
dec
shr
sub
cmps
mov
xor
cs
push
adc
jno
cmps
xchg
xor
test
call
dec
(bad)
pop
(bad)
push
adc
adc
sahf
push
mov
and
pusha
popa
and
xlat
aaa
or
outs
cwde
lods
cs
pop
push
dec
test
imul
mov
add
jle
or
jmp
or
inc
add
(bad)
sahf
xchg
je
outs
dec
loope
ss
test
sbb
and
push
ds
push
sbb
jbe
pop
xchg
shl
xchg
dec
js
and
(bad)
push
mov
add
pop
push
xor
xor
data16
sbb
scas
push
dec
or
add
lock
push
add
movs
xor
lock
fisubr
ds
into
ret
cdq
es
loope
pop
push
cs
dec
pop
push
(bad)
imul
push
adc
(bad)
out
sub
inc
bound
(bad)
bound
(bad)
(bad)
inc
or
data16
dec
sbb
push
retf
sub
sbb
mov
pusha
xchg
fwait
mov
xchg
test
es
xchg
xor
mov
jle
xchg
xor
(bad)
lods
or
je
inc
rcr
jo
add
push
or
enter
or
mov
cmc
and
pop
jbe
ds
inc
add
(bad)
ret
and
push
out
jno
add
jbe
cmps
loop
cmp
cs
mov
imul
or
inc
mov
cmps
(bad)
test
dec
xor
pop
mov
push
data16
es
pushw
push
xchg
pop
ds
inc
inc
and
fisubr
sub
and
xchg
cmps
cs
and
dec
sbb
inc
add
mov
dec
out
scas
sahf
cmp
xor
inc
pop
mov
xchg
ds
dec
push
cdq
and
ds
loopne
(bad)
out
test
shl
cmps
es
add
push
cs
cmps
(bad)
jbe
dec
and
pop
pop
sbb
inc
out
ret
mov
dec
mov
outs
data16
cmps
push
gs
es
mov
inc
test
ficomp
mov
sahf
push
cs
mov
loopne
inc
movs
xchg
ss
out
loop
adc
dec
push
sub
add
mov
push
lea
or
scas
inc
or
into
into
dec
or
dec
lods
add
gs
mov
shl
adc
cmp
out
jae
xor
fdivrp
push
cmp
mov
cmps
push
adc
div
xchg
pop
lahf
shr
sahf
push
mov
test
(bad)
push
push
or
test
dec
dec
push
je
inc
or
inc
adc
popa
mov
loope
xchg
push
test
(bad)
pop
push
jle
sahf
out
ror
stos
cmp
dec
xor
push
xchg
out
inc
mov
imul
cmps
sbb
mov
loop
inc
push
inc
push
sub
bound
loope
pop
cmps
push
pop
sahf
sbb
test
xchg
mov
or
cs
inc
pop
(bad)
mov
sub
jecxz
out
ss
add
loope
pop
scas
data16
inc
out
test
push
push
retfw
cmps
mov
and
inc
not
add
push
push
jno
push
mov
(bad)
fdivp
out
pop
mov
push
pop
pop
ret
adc
pushf
(bad)
scas
mov
sub
add
cs
sahf
push
add
mov
out
pop
mov
and
xchg
push
cmp
adc
xor
jbe
pusha
lods
sar
or
push
ds
xchg
scas
daa
add
xor
sahf
push
pop
cmps
xor
push
push
outs
add
(bad)
jle
push
push
xchg
adc
out
jmp
push
hlt
out
cld
(bad)
es
outs
pop
push
pop
cmp
pushf
add
xor
push
pusha
cmps
dec
pop
push
dec
popa
mov
push
je
scas
test
adc
sub
inc
push
and
pop
movs
cmps
adc
mov
dec
push
cmp
push
xchg
jb
sub
mov
push
push
xor
scas
inc
push
(bad)
push
xchg
jle
(bad)
adc
xchg
mov
popa
push
arpl
adc
adc
loopne
(bad)
sbb
dec
loope
js
push
mov
inc
push
push
mov
pop
xor
push
mov
pop
and
mov
addr16
ss
inc
sahf
ins
jo
test
cmc
dec
inc
sub
or
push
inc
xchg
dec
pop
adc
(bad)
(bad)
ror
ret
mov
add
mov
outs
mov
inc
add
imul
arpl
ins
fsubrp
add
icebp
and
jo
jbe
xchg
xor
push
xor
push
and
xor
push
push
adc
add
into
cs
adc
(bad)
out
push
(bad)
ret
adc
dec
pop
mov
cs
pushf
mov
into
push
imul
sbb
scas
dec
push
push
cmps
rol
inc
jl
jbe
ss
push
out
push
ins
mov
inc
push
cs
jo
add
ficom
push
push
inc
es
outs
add
push
push
mov
data16
push
xchg
or
mov
mov
cli
xor
push
sahf
or
mov
outs
into
out
or
inc
sub
xchg
push
xor
add
js
into
pop
push
push
dec
inc
xor
mov
scas
push
mov
jge
mov
cmp
in
jmp
push
inc
add
das
mov
adc
out
sahf
pop
adc
adc
mov
ds
jo
(bad)
or
(bad)
mov
add
push
sbb
xchg
xchg
sbb
es
cmps
loope
into
(bad)
bound
add
xchg
out
push
jo
xor
inc
mov
jle
pop
pusha
adc
push
push
xchg
jbe
or
test
xchg
loope
xor
mov
push
mov
dec
inc
or
cmps
adc
or
dec
adc
fidivr
pop
push
bound
xchg
adc
ss
jle
add
add
dec
call
push
xchg
bound
add
push
xchg
pop
push
adc
outs
(bad)
sbb
ficomp
dec
sbb
data16
mov
sbb
rcl
sahf
ficomp
inc
into
push
add
mov
jo
in
cmps
dec
xchg
jle
pop
xchg
sahf
xor
cmps
xor
mov
push
jle
push
cs
jle
xchg
mov
cdq
dec
mul
cs
mov
ds
add
ss
dec
test
pop
adc
fiadd
push
mov
push
es
fimul
or
push
scas
into
dec
inc
sbb
jno
push
imul
je
push
dec
test
shr
enter
mov
mov
into
add
or
cmps
(bad)
rol
add
push
pop
jo
sbb
mov
aaa
push
dec
fisubr
(bad)
add
adc
neg
xor
pop
out
mov
es
xchg
xor
out
outs
push
adc
jo
push
and
inc
add
loopne
ss
dec
and
test
xchg
push
or
cs
or
sbb
inc
rcl
outs
mov
(bad)
retf
xchg
jbe
mov
add
cmps
idiv
inc
dec
(bad)
sbb
pop
push
(bad)
ins
sub
movs
(bad)
out
(bad)
leave
push
inc
cmps
pop
xchg
ss
xchg
jo
inc
ins
cmp
adc
(bad)
mov
inc
push
jo
popf
mov
push
sub
add
xchg
inc
or
jle
mov
xchg
lock
xchg
push
xlat
push
and
into
mov
add
cmps
dec
rcr
outs
dec
cmp
add
fst
mov
les
into
add
xchg
xchg
push
loope
cmp
dec
add
add
mov
adc
into
jle
xchg
xchg
cmp
inc
out
nop
pop
mov
or
imul
cmps
push
call
dec
out
or
pop
dec
sub
cmp
mov
sub
dec
(bad)
aaa
jp
mov
data16
ss
pop
push
xor
adc
adc
push
push
mov
mov
xchg
sub
or
cmp
outs
fimul
dec
into
xor
outs
dec
out
xchg
adc
inc
pop
cs
jo
test
rol
cmps
jmp
mov
cmp
or
pop
dec
(bad)
cmps
movs
jo
ds
or
inc
pop
cmps
(bad)
push
rcl
or
(bad)
push
or
jbe
sbb
xchg
popa
adc
dec
lods
push
rcl
dec
into
push
fisub
mov
adc
mov
push
ds
lods
mov
jbe
jbe
and
inc
ss
jle
pop
sbb
dec
outs
mov
mov
adc
or
mov
xor
pushf
outs
(bad)
jle
ss
daa
jno
jle
jle
or
jne
push
(bad)
add
add
sbb
xchg
pop
nop
push
dec
inc
add
enter
add
je
mov
outs
pop
scas
cmps
inc
and
out
dec
mov
sub
dec
sar
scas
add
jno
pushw
rol
xor
out
jae
jae
push
inc
icebp
adc
pop
dec
inc
outs
or
out
pushf
dec
sbb
test
jle
xchg
mov
jbe
push
outs
int3
test
(bad)
adc
sbb
movs
mov
sahf
es
push
cmp
inc
add
add
adc
cmps
sub
outs
mov
outs
push
jbe
(bad)
sbb
dec
push
xchg
out
rcl
stos
push
dec
out
test
add
pop
adc
push
push
or
pop
add
cs
jno
cmp
(bad)
push
mov
push
(bad)
pop
sub
movs
fadd
adc
dec
setl
pop
stos
push
xchg
jge
jo
mov
or
(bad)
push
out
inc
push
mov
scas
sbb
or
scas
(bad)
sub
loopne
inc
push
push
push
jbe
lds
jle
xor
pop
lods
dec
mov
lea
outs
out
push
jo
jbe
push
xor
cmp
data16
out
je
or
sbb
cmp
mov
daa
cmps
es
test
outs
jge
(bad)
adc
out
add
sub
pop
ds
push
es
mov
push
push
outs
test
ds
push
xor
(bad)
sbb
mov
push
stos
add
popa
mov
out
jle
inc
ins
popf
lods
data16
and
add
and
neg
mov
xchg
cld
mov
push
xor
adc
enter
fadd
push
add
fldenv
dec
or
ds
jbe
xor
add
mov
rol
scas
ret
and
push
add
xchg
push
cdq
ss
bound
pop
dec
dec
push
or
push
xchg
jo
cmp
xchg
push
ror
lods
dec
ds
cmps
lds
dec
jle
inc
mov
jle
push
add
mov
adc
in
mov
pop
push
in
cs
(bad)
adc
add
rol
pushw
xor
xchg
dec
xlat
add
push
(bad)
not
rdtsc
sub
push
xchg
ret
xor
out
dec
rcl
lock
add
adc
inc
jbe
xchg
xchg
cmp
push
mov
(bad)
push
cmp
mov
int3
test
xchg
stos
ret
out
jo
inc
jmp
ss
test
cmps
or
dec
dec
fidivr
jbe
sbb
jp
xor
ds
test
add
cmp
pop
jbe
mov
add
out
add
jo
imul
outs
xchg
xor
shr
dec
push
dec
dec
and
shr
pop
mov
sub
mov
loopne
mov
mov
xchg
pop
add
push
sub
test
into
sbb
movs
or
xor
bound
sbb
sahf
int3
shl
jo
xchg
dec
xor
test
pop
call
pop
push
push
sahf
push
sahf
(bad)
mov
data16
jmp
push
cs
ins
cmps
test
test
dec
pop
push
ror
dec
inc
and
pop
je
ins
and
call
(bad)
push
xchg
inc
inc
(bad)
inc
push
aad
mov
sub
or
mov
inc
mov
inc
sub
ret
ds
and
sahf
mov
outs
mov
pop
or
push
aaa
(bad)
xchg
inc
(bad)
inc
shl
sbb
inc
and
xor
(bad)
xor
and
inc
add
rcr
sbb
je
daa
enter
dec
dec
sbb
outs
pop
cs
push
add
pop
push
adc
rol
xchg
add
or
ficomp
add
mov
push
inc
cmp
push
adc
into
dec
push
inc
loop
mov
xchg
mov
ss
push
mov
xchg
mov
and
push
xor
popa
add
jns
adc
jle
aaa
mov
inc
ins
fdivrp
xchg
jp
cmp
call
cs
add
adc
mov
ds
push
xor
mov
cmps
dec
ror
dec
push
(bad)
not
ds
les
pop
jb
lods
dec
ss
test
(bad)
inc
inc
adc
cmp
into
pusha
cmp
jbe
(bad)
popf
pop
ror
ds
mov
ss
push
inc
inc
or
(bad)
rcr
(bad)
push
xor
push
ss
or
sar
xor
out
(bad)
xor
lea
pop
xchg
push
inc
outs
push
ss
pop
add
outs
mov
cld
pushf
jmp
out
add
sbb
or
mov
inc
push
dec
sbb
push
imul
or
outs
or
adc
imul
push
push
retf
sub
xchg
rol
dec
mov
xor
outs
test
push
data16
and
xchg
sar
sbb
add
push
pop
push
(bad)
pop
add
or
mov
stos
adc
push
inc
push
out
adc
xchg
retf
imul
mov
push
(bad)
dec
adc
jno
mov
popa
or
pop
adc
ficom
sbb
dec
ds
loope
and
pop
test
inc
dec
adc
and
cdq
enter
jp
cs
outs
pop
or
out
inc
ret
sbb
pop
addr16
push
inc
xchg
inc
test
mov
add
bound
xchg
sbb
cmps
adc
push
fidiv
out
add
push
popa
push
out
gs
loope
adc
sub
inc
jbe
push
ficomp
imul
shl
dec
aad
xor
dec
mov
inc
pop
push
data16
push
add
or
es
xchg
add
loope
inc
scas
xor
xchg
nop
bound
retf
(bad)
outs
jbe
out
rcl
js
xchg
je
sahf
je
test
ss
data16
into
into
pop
(bad)
aam
test
(bad)
out
jo
fcomp
inc
sbb
mov
pop
enter
cs
cmp
push
cs
add
mov
mov
mov
loope
dec
push
mov
mov
pusha
jbe
add
add
or
mov
jo
push
add
push
sar
es
aad
jb
outs
push
xchg
jae
arpl
inc
xchg
xchg
jno
sbb
dec
xchg
jmp
sbb
xchg
es
mov
call
push
push
and
or
mov
jle
and
push
cmp
mov
out
push
outs
push
add
out
dec
mov
add
pushf
adc
inc
jle
cmps
adc
lods
dec
out
push
inc
inc
mov
out
icebp
clc
sbb
ds
mov
mov
(bad)
xor
cs
cs
sbb
test
cmps
div
xor
add
jp
cmp
push
inc
pop
ss
into
inc
xor
into
rol
outs
call
(bad)
lahf
or
push
push
xchg
dec
or
dec
push
xor
inc
adc
ret
out
and
or
bound
or
dec
cmp
push
outs
jne
push
xchg
push
bound
or
es
dec
cmp
lea
xor
sbb
test
cs
test
xchg
rol
mov
inc
je
popa
(bad)
xchg
sbb
pushf
fs
data16
inc
or
es
add
mov
jmp
adc
inc
cs
(bad)
cmp
add
sbb
outs
(bad)
and
jno
mov
push
loopne
out
sahf
inc
and
add
inc
xor
inc
inc
mov
add
outs
pop
test
into
enter
push
daa
push
or
or
xchg
ror
pop
jge
mov
and
inc
jg
push
inc
push
cmp
data16
out
xchg
add
push
outs
daa
add
fidivr
push
add
pop
movs
mov
out
call
and
ret
push
data16
adc
jbe
inc
push
inc
or
out
popa
out
mov
cmp
leave
dec
mov
dec
(bad)
lods
mov
xor
jbe
retf
test
push
xchg
scas
cs
out
xchg
or
outs
mov
mov
xor
ss
les
mov
push
mov
xchg
ret
xor
or
mov
imul
mov
add
push
push
popa
mov
out
push
cmps
xor
adc
mov
sahf
pop
pusha
xchg
adc
(bad)
jo
dec
or
jbe
ds
sahf
mov
pop
jge
xor
(bad)
push
dec
out
mov
add
inc
sbb
or
int3
push
cmps
xchg
push
cmp
inc
scas
add
or
push
dec
fisubr
or
jmp
cs
pop
push
xchg
adc
sub
lock
sbb
jle
ror
mov
cmp
dec
lock
daa
ret
out
ss
inc
loop
pusha
dec
mov
push
pop
add
jb
sub
push
sbb
daa
imul
push
sbb
xor
xchg
inc
adc
inc
stos
ss
test
inc
xchg
push
add
jbe
rol
jbe
pop
mov
push
(bad)
jbe
sbb
ds
sbb
sub
pop
xchg
rcl
addr16
push
mov
mov
pusha
test
push
sub
and
and
scas
pop
into
cs
pop
push
cmp
ss
es
(bad)
int
adc
jbe
dec
cdq
add
mov
or
sahf
mov
cmps
test
(bad)
xchg
(bad)
mov
sub
jbe
es
push
and
dec
js
and
jl
test
push
sbb
or
es
add
ins
jae
sbb
ds
icebp
es
mov
mov
and
xor
scas
xchg
xchg
xor
call
xchg
adc
dec
pop
dec
add
and
inc
sbb
js
xchg
inc
pop
xor
pop
jp
push
pop
pop
inc
cdq
cdq
adc
mov
add
outs
out
es
ret
inc
push
nop
adc
sbb
push
jle
cs
push
movs
jno
push
fidiv
push
inc
inc
push
inc
mov
dec
push
adc
popf
push
int3
pop
jle
inc
xor
mov
jbe
sub
loope
push
dec
mov
xchg
(bad)
sahf
adc
hlt
adc
xor
lods
push
mul
xor
ja
dec
out
sbb
outs
sbb
dec
sub
pop
sub
add
mov
cmps
ss
loopne
push
push
popa
dec
mov
mov
jbe
movs
mov
nop
mov
les
pop
inc
ss
inc
ret
outs
ins
outs
push
xchg
sbb
imul
pusha
dec
xchg
push
out
xchg
jo
test
inc
mov
or
and
push
sub
pop
not
cwde
imul
dec
push
pop
pop
dec
pop
inc
popa
sahf
xchg
or
and
scas
pop
ds
or
and
xor
(bad)
jle
add
push
inc
xor
movs
cld
mov
arpl
outs
addr16
data16
sbb
xor
push
add
add
mov
sbb
lods
pop
jbe
test
push
sar
xchg
inc
(bad)
push
xchg
mov
ss
movs
adc
xor
dec
jle
lock
or
mov
shl
push
xor
xor
(bad)
cs
ds
inc
xor
xchg
sahf
int3
mov
push
les
loopne
movs
xor
push
dec
mov
adc
or
and
pop
es
mov
sbb
mov
mov
xchg
mov
cmp
aaa
push
push
push
and
into
out
xchg
pop
and
xchg
pop
hlt
adc
not
mov
mov
(bad)
mov
out
add
inc
es
xchg
js
mov
push
xchg
out
out
mov
xor
(bad)
dec
test
inc
push
cs
outs
ret
pushf
test
mov
or
jle
sbb
or
sahf
int3
and
out
push
dec
cmp
push
add
data16
pop
es
(bad)
mov
push
enterw
into
jle
or
(bad)
cs
add
mov
xor
gs
dec
xor
out
(bad)
and
lea
push
jle
dec
push
cwde
mov
into
sub
push
xor
(bad)
sahf
cmps
add
pop
push
sub
sahf
push
xchg
ror
and
ja
dec
xor
jbe
mov
mov
mov
(bad)
dec
(bad)
scas
popa
frstorw
push
dec
push
push
pop
mov
xchg
push
fs
dec
rol
dec
sub
push
xor
test
jb
mov
daa
outs
out
mov
dec
adc
test
xchg
xchg
push
and
outs
test
xor
mov
add
xor
add
xchg
ins
ja
jp
dec
out
(bad)
mov
mov
aaa
pop
push
push
sub
pusha
and
into
pusha
and
out
jbe
je
dec
cmps
push
pop
push
bound
mov
add
dec
xchg
push
push
sbb
(bad)
outs
push
test
ds
or
aam
ss
retf
and
ss
lods
add
ds
adc
mov
out
push
data16
pusha
adc
push
xor
push
jbe
mov
test
mov
xor
jbe
push
mov
pop
ds
sahf
xchg
jb
sub
mov
add
xchg
jno
lock
xchg
cmps
dec
adc
test
add
dec
ss
dec
or
cmp
test
sub
add
xchg
mov
outs
jle
test
ret
push
pusha
pop
or
out
out
sbb
cli
add
test
and
out
ds
dec
adc
push
xor
dec
out
pop
or
and
into
cs
mov
test
sub
ds
ficom
xchg
inc
adc
push
add
(bad)
into
push
es
or
or
add
out
pop
push
call
push
loope
xchg
xor
aaa
in
xchg
xchg
nop
cmp
pop
cmps
and
push
movs
add
fimul
push
pop
push
add
pop
dec
outs
inc
push
inc
es
out
cmc
xchg
cs
icebp
xor
sar
fidivr
cmp
sub
pop
aad
test
inc
add
add
arpl
out
adc
add
xchg
push
jno
push
or
clc
dec
popf
lods
addr16
push
push
out
add
cmps
jmp
push
cs
push
jo
mov
cs
(bad)
sar
push
test
and
push
cmp
les
push
add
push
pop
cs
out
dec
cdq
mov
dec
cmps
mov
sub
push
push
cli
dec
cs
jge
inc
cmp
jle
adc
cmp
add
and
inc
ret
xor
ret
pop
mov
push
push
push
and
scas
pop
dec
sub
mov
(bad)
popa
cmp
out
pop
cmp
mov
pop
and
and
dec
pusha
push
mov
dec
or
sbb
adc
cwde
or
div
add
and
cmps
add
xchg
sbb
mov
psrld
sub
pop
mov
push
add
push
out
(bad)
push
scas
mov
cs
jo
retf
xchg
psraw
mov
cmps
push
popa
mov
xor
out
push
dec
and
xchg
push
pop
cmps
(bad)
lock
inc
dec
test
add
dec
mov
outs
push
pop
loopne
pusha
dec
(bad)
cmps
or
lock
inc
sbb
sub
and
jle
shl
or
push
and
dec
push
push
push
adc
inc
mov
and
push
add
dec
sbb
jo
and
cmps
test
pop
mov
and
mov
loopne
mov
into
push
fst
inc
pop
mov
mov
outs
dec
jle
leave
and
jbe
adc
mov
aad
xchg
jbe
into
push
xor
(bad)
dec
popa
add
dec
scas
jno
out
jmp
inc
inc
stos
mov
stos
jb
xchg
push
movs
adc
mov
sahf
(bad)
cdq
push
data16
sbb
es
into
cwde
mov
(bad)
jp
xchg
rol
push
aas
push
out
dec
add
adc
push
inc
pop
cmp
cwde
in
dec
scas
out
imul
and
fiadd
jo
xor
push
mov
(bad)
jbe
inc
mov
xor
outs
pop
push
ins
xor
movs
adc
add
inc
jb
jle
and
inc
xchg
test
scas
(bad)
pop
inc
cs
and
xchg
ss
xor
fiadd
push
ror
out
jle
or
jmp
mov
pushw
pop
cmp
nop
ds
dec
dec
add
jmp
popa
adc
push
mov
push
out
adc
ss
into
adc
and
(bad)
push
outs
add
je
sbb
dec
push
dec
mov
daa
pop
sbb
push
xchg
in
push
xor
xchg
outs
(bad)
adc
dec
fs
fisub
adc
(bad)
sahf
ds
or
pop
push
out
jle
mov
push
es
dec
or
les
push
push
scas
retf
dec
les
add
push
lods
or
popa
add
mov
mov
or
pop
cmps
or
push
push
jbe
mov
mov
inc
cmp
cmp
push
cmps
bound
clc
cmp
push
cmps
xor
xor
xchg
sbb
add
jbe
xor
rol
imul
and
jmp
sbb
pop
pop
arpl
xchg
cmps
rol
shl
ss
push
cmp
push
adc
push
push
sbb
(bad)
fcomi
adc
pop
xchg
add
xchg
data16
add
enter
aam
test
jbe
push
sbb
xchg
xor
add
push
jbe
nop
adc
push
adc
xchg
xor
fs
xchg
sub
cwde
or
push
outs
data16
ss
loope
push
xchg
cmp
enter
ss
sahf
and
dec
(bad)
outs
inc
xor
add
jbe
xor
mov
inc
xchg
push
dec
into
cmp
xchg
push
push
push
bound
fiadd
dec
cli
xor
(bad)
addr16
dec
sub
sub
add
push
push
(bad)
adc
pop
push
push
push
jge
jo
sahf
sahf
scas
push
inc
loopne
test
adc
push
jle
inc
xor
add
test
xchg
jo
retf
xchg
(bad)
or
sahf
push
cdq
loopne
loopne
push
push
push
xchg
add
ss
sub
dec
sahf
dec
jp
outs
add
pop
jle
mov
les
(bad)
cmps
sar
es
js
pop
sbb
and
inc
sbb
(bad)
sub
or
out
push
dec
cwde
ds
push
out
int3
adc
pop
data16
popa
push
mov
xchg
add
xchg
es
dec
icebp
movs
sahf
sbb
jbe
rol
mov
(bad)
mov
mov
mov
pop
(bad)
mov
sub
aaa
sub
add
jne
loopne
iret
scas
mov
and
push
es
push
push
sahf
mul
mov
das
sbb
(bad)
mov
outs
inc
sub
jbe
pop
aam
mov
and
inc
(bad)
mov
call
or
mov
add
inc
xchg
add
mov
adc
and
mov
jbe
xor
xchg
ffreep
push
data16
add
loope
sub
ss
jo
adc
push
dec
ret
xchg
mov
add
adc
imul
inc
jbe
push
push
or
mov
pushf
adc
test
add
or
leave
sahf
neg
add
cmp
jo
pop
push
movs
push
dec
push
adc
(bad)
pushf
inc
mov
cmp
inc
mov
add
push
mul
inc
inc
retf
mov
sahf
mov
and
jge
xchg
jo
mov
fs
xchg
(bad)
push
(bad)
mov
les
data16
cs
and
push
mov
bound
ss
xor
mov
jno
push
outs
inc
push
jb
ror
(bad)
(bad)
inc
sub
dec
ds
call
dec
cmps
inc
je
mov
push
bound
add
outs
push
mov
mov
dec
add
xchg
push
add
pop
data16
es
dec
cmp
outs
cdq
pusha
pop
sbb
push
add
loop
push
out
mov
sbb
xor
fisubr
int3
(bad)
push
out
xor
sahf
xor
fisub
and
adc
or
mov
movs
sbb
add
into
jle
lods
sub
push
scas
push
jno
or
sbb
sub
or
mov
push
bound
es
cs
add
inc
into
popa
xor
xor
(bad)
push
xor
jo
sbb
out
jbe
loope
stos
les
push
xor
jle
ror
adc
test
daa
(bad)
(bad)
pushw
xor
adc
(bad)
test
dec
push
into
pop
dec
ret
xor
inc
push
outs
or
inc
outs
dec
inc
lea
outs
add
xchg
push
ss
jno
cmp
mov
pop
popa
xchg
bound
(bad)
adc
retw
and
out
sbb
sbb
mov
jbe
or
ins
inc
ds
cs
adc
or
cmps
pop
push
cmps
jo
sahf
es
je
es
inc
scas
inc
les
(bad)
or
push
adc
les
rol
and
inc
loopne
push
mov
loopne
rcr
pop
xchg
adc
(bad)
push
jno
or
mov
and
mov
xor
xchg
jle
or
pushf
cmps
xchg
(bad)
and
popf
sub
mov
push
add
outs
pusha
push
or
push
mul
mov
jo
dec
push
mov
mov
jle
test
mov
es
inc
out
dec
sub
or
pusha
mov
push
aam
cmps
aad
or
out
ret
adc
push
add
sbb
(bad)
pop
push
hlt
and
xor
cs
ret
inc
mov
inc
(bad)
es
push
fdiv
ds
dec
inc
and
xchg
(bad)
mov
pusha
mov
add
cmp
out
(bad)
pop
sub
pusha
(bad)
je
mov
dec
inc
sahf
mov
xor
loope
push
pushf
add
jbe
cwde
sub
mov
ds
and
aam
sub
test
xchg
(bad)
xor
jmp
adc
mov
lds
loop
inc
cs
sub
xchg
dec
nop
push
mul
xchg
or
add
adc
jo
lea
out
data16
push
xor
xchg
pop
push
sub
mov
ret
jbe
out
les
adc
cdq
add
sub
or
adc
mov
scas
inc
xchg
sar
xchg
jbe
sub
add
(bad)
push
push
add
pop
(bad)
push
ficomp
pusha
pusha
loope
cmps
div
gs
jo
add
(bad)
(bad)
je
pop
push
add
add
xchg
push
cmp
pushf
pop
pop
mov
push
sub
cmc
out
push
pusha
jo
mov
sub
test
cs
xchg
push
mov
add
xchg
mov
inc
mov
push
pop
push
rcr
push
test
outs
call
bound
and
pop
inc
mov
dec
jae
and
out
and
mov
inc
cmps
add
hlt
add
inc
arpl
mov
(bad)
into
push
dec
mov
mov
cmp
out
pop
push
rcl
ds
inc
and
es
pop
or
ss
and
sbb
push
movs
dec
mov
inc
xor
out
adc
mov
movs
out
sahf
out
dec
add
pop
dec
dec
push
rol
lds
bound
bound
rcr
xchg
mov
jo
loope
push
(bad)
ds
sbb
and
dec
push
push
add
adc
sahf
dec
test
mov
div
inc
xchg
rcl
clc
scas
lods
cmp
mov
dec
inc
loopne
jecxz
scas
(bad)
push
push
fimul
shr
push
mov
xor
dec
mul
and
cmps
or
xchg
aam
dec
cmps
xor
(bad)
jbe
pop
add
sahf
mov
cmp
cs
loope
ret
scas
add
push
jbe
pop
cmp
cmp
push
out
mov
sub
dec
sbb
jg
dec
or
or
push
or
push
push
es
dec
dec
(bad)
out
adc
dec
sub
push
outs
jle
es
jle
mov
push
mov
call
(bad)
pop
cmp
test
into
add
jo
xchg
mov
jle
jo
and
sahf
adc
adc
push
cmps
out
dec
pop
inc
data16
and
popa
mov
test
xchg
retf
inc
xchg
xor
or
(bad)
pop
adc
dec
clc
(bad)
dec
push
inc
inc
dec
xchg
mov
adc
fisub
es
add
fxch
dec
push
outs
aas
jo
adc
adc
out
fiadd
cmp
mov
loope
inc
mov
outs
sahf
(bad)
or
push
jo
xchg
loopne
repnz
jbe
arpl
mov
ret
mov
push
ins
push
sbb
jmp
dec
cmps
xor
cmps
push
push
inc
movlps
push
or
add
pop
leave
jo
dec
push
mul
movs
adc
jg
(bad)
push
add
mov
jg
and
inc
mov
ss
xor
or
sbb
loope
push
adc
pop
out
mov
nop
inc
push
je
es
mov
scas
outs
cld
and
into
push
lods
adc
in
adc
push
xor
push
push
push
into
scas
or
(bad)
aaa
xchg
sbb
inc
ficomp
and
dec
cmps
push
push
mov
push
mov
xchg
mov
xchg
mov
mov
mov
add
pop
jmp
xchg
sahf
xchg
mov
mov
xchg
cmps
int3
inc
xchg
mov
mov
leave
sub
xchg
or
xchg
cmps
inc
imul
data16
and
add
pop
out
mov
and
add
jle
push
sti
inc
ss
xor
push
test
rol
test
dec
les
push
(bad)
inc
test
push
(bad)
movs
cmps
addr16
(bad)
sahf
push
jle
ret
cs
mov
add
pop
inc
outs
scas
push
add
xchg
popa
mov
inc
push
(bad)
rcl
push
data16
xor
adc
cmp
cs
or
or
into
jmp
push
pusha
adc
dec
xchg
push
push
push
ret
xchg
inc
cmp
dec
sahf
cmp
xor
dec
pushf
and
imul
lods
sub
dec
into
sbb
push
fcmovb
dec
jb
xchg
add
sub
ins
push
ds
les
pop
add
adc
aam
or
xor
xchg
mov
ja
mov
pop
pop
adc
xchg
xor
(bad)
and
pop
push
ss
add
cs
and
outs
jbe
enter
mov
shl
pop
out
mov
(bad)
cmp
dec
mov
(bad)
(bad)
push
pop
push
pop
ss
or
push
push
xor
rcl
xchg
outs
imul
push
push
inc
js
or
arpl
mov
jo
ds
mov
push
retf
xchg
and
push
and
add
add
jle
cmp
mov
dec
push
push
push
(bad)
int3
or
outs
mov
adc
call
push
or
add
ss
xchg
mov
jle
data16
dec
jmp
and
ss
pop
out
enter
push
outs
loop
ret
add
mov
mov
pusha
lods
and
adc
push
mov
rcl
cmp
dec
mov
test
fisub
push
pmullw
push
out
adc
xor
aaa
inc
fwait
and
inc
inc
mov
xor
mov
data16
jecxz
ret
adc
loop
out
pop
pop
rol
jne
jle
dec
dec
add
sahf
mov
outs
inc
or
sbb
dec
push
sbb
bound
lds
hlt
cld
add
mov
inc
rol
bound
cmp
mov
fimul
fidiv
scas
or
popa
into
inc
es
mov
adc
sahf
inc
or
inc
jo
add
ins
sub
out
adc
nop
retf
jbe
fwait
ret
push
jge
push
in
mov
pop
outs
sub
out
inc
add
mov
adc
xor
lahf
xor
inc
out
push
jmp
xchg
popa
and
sahf
mov
lock
or
xchg
or
outs
dec
test
mov
out
inc
pushw
es
push
adc
sub
out
xchg
adc
iret
push
push
(bad)
test
rol
cmp
enter
xchg
fwait
pop
add
add
and
cmps
es
test
sbb
push
mov
test
xor
adc
adc
(bad)
sub
and
inc
sahf
es
xor
inc
pop
(bad)
out
adc
fidiv
in
mov
sahf
inc
out
(bad)
push
cmps
push
ss
je
loope
sbb
push
mov
push
ror
test
cmp
call
jno
mov
scas
xor
add
xchg
push
scas
pop
outs
rcl
sub
sbb
into
mov
add
or
cmp
inc
or
movs
sbb
add
outs
adc
data16
outs
push
adc
xchg
mov
jb
fisubr
adc
jbe
pop
bound
push
cmp
inc
dec
push
push
or
das
adc
outs
push
enter
jle
cmps
pop
jmp
test
add
je
mov
xor
ss
push
mov
or
mov
(bad)
inc
les
out
xor
add
inc
rol
ins
cwde
loop
ss
cmp
scas
jo
push
jle
push
into
icebp
xor
ss
push
add
xchg
cmps
dec
out
or
aaa
pop
dec
push
fisub
push
or
pop
into
(bad)
xchg
mov
gs
dec
dec
jbe
xchg
inc
pop
(bad)
push
out
dec
mov
add
jbe
and
into
jmp
xor
sahf
scas
outs
push
and
mov
push
out
out
push
jecxz
fs
push
ds
push
push
sbb
(bad)
outs
and
and
movs
mov
push
pop
inc
push
dec
cs
mov
adc
mov
dec
push
outs
sub
xor
and
jbe
jne
inc
push
push
cld
out
xchg
jge
push
mov
out
pop
jecxz
push
adc
sahf
ds
xchg
jmp
jbe
mov
jo
mov
jo
or
xor
xchg
sahf
push
outs
inc
dec
mov
call
rcr
push
xchg
enter
into
xor
dec
outs
stos
nop
push
nop
dec
into
jo
and
mov
es
inc
scas
imul
ds
mov
int3
pop
xchg
pop
inc
jo
je
push
dec
popa
mov
dec
dec
pop
dec
or
cmp
pop
mov
jmp
inc
inc
ds
out
test
dec
inc
jmp
mov
and
push
inc
inc
imul
adc
inc
xor
out
and
xor
enter
jbe
jbe
sbb
mov
call
sub
scas
inc
dec
scas
cmp
mov
push
push
push
mov
ds
hlt
and
pop
fidiv
push
xchg
xlat
adc
or
es
rol
xor
inc
ss
xchg
sub
dec
into
pop
jnp
cmp
xchg
jge
inc
pop
sahf
fisubr
out
or
pop
mov
je
inc
or
push
dec
push
ins
pusha
xchg
gs
push
push
ror
(bad)
popa
mul
ds
push
jmpw
dec
pop
push
sahf
pop
dec
xchg
(bad)
data16
sub
cmp
sbb
test
lock
mov
pusha
push
aaa
ds
xchg
push
test
xor
mov
inc
js
pop
push
fiadd
jmp
data16
dec
xor
jbe
sbb
jbe
dec
out
or
(bad)
dec
ss
add
fidiv
push
pushf
inc
jb
ss
(bad)
rcr
adc
sahf
xor
test
sbb
(bad)
jbe
pop
xchg
leave
xor
mov
sahf
push
inc
dec
daa
aaa
and
test
out
iret
mov
adc
xchg
dec
push
push
movs
xchg
jno
mov
xchg
scas
test
or
in
pusha
mov
cs
das
loope
dec
outs
into
leave
add
or
ret
clc
pop
push
inc
inc
add
icebp
ins
push
sub
daa
jo
out
imul
inc
lods
xchg
dec
ds
loope
pop
mov
add
mov
out
jl
sbb
data16
outs
bound
or
into
push
data16
mov
sahf
or
and
inc
sub
imul
inc
push
outs
into
and
fisub
fidivr
inc
out
inc
sbb
mov
jb
into
push
or
rcl
or
or
mov
pop
push
push
inc
push
fisub
daa
adc
inc
mov
cmp
jo
bound
out
dec
nop
adc
and
pop
jmp
xor
mov
and
rcl
es
je
ret
popa
inc
and
xchg
inc
sub
jbe
cmp
jl
(bad)
push
adc
xor
out
js
push
add
inc
rcl
pop
ss
int3
push
adc
add
push
inc
or
xor
es
dec
xor
mov
or
xor
mov
inc
inc
(bad)
es
add
jbe
or
leave
loopne
es
sub
dec
sbb
jo
dec
mov
imul
jle
aad
xor
fbstp
inc
inc
inc
inc
jb
xor
icebp
xor
ss
push
sub
outs
jle
xor
push
inc
xchg
mov
push
push
push
pop
push
sbb
fisubr
out
push
sub
push
pop
xor
cdq
inc
rcr
inc
pop
and
pushaw
rcl
pop
jle
call
(bad)
inc
add
dec
push
jle
push
inc
fisubr
push
jo
pop
add
cs
es
(bad)
js
inc
(bad)
into
push
mov
pop
inc
or
mov
data16
ret
jge
mov
pop
sbb
jb
jo
ds
shr
and
scas
xchg
dec
mov
mov
out
mov
fisubr
dec
retf
jl
xchg
push
or
jb
mov
add
(bad)
(bad)
inc
or
sbb
jbe
dec
push
mov
movups
push
dec
(bad)
cmp
mov
xchg
add
cs
dec
jbe
or
cmps
(bad)
xor
and
mov
pop
mov
jge
gs
add
loopne
push
cs
(bad)
pop
push
cmp
js
mov
mov
out
jbe
dec
xor
push
data16
(bad)
fimul
or
sub
ret
sub
inc
jne
outs
outs
xchg
push
enter
cs
jge
xchg
adc
mov
add
mov
cmp
(bad)
es
mov
or
(bad)
es
out
retf
sahf
adc
push
xchg
(bad)
dec
adc
inc
mov
push
sbb
outs
add
cmp
js
push
jle
cmps
sbb
(bad)
cmp
mov
es
cwde
jl
js
jbe
dec
mov
add
fimul
adc
cmps
cs
push
mov
dec
ss
xor
dec
into
cmps
(bad)
push
js
push
dec
dec
xchg
dec
adc
pop
xor
test
pop
mov
jle
ror
not
out
sbb
jno
push
push
cs
add
mov
xor
push
push
inc
mul
inc
xor
fisubr
inc
inc
push
sbb
jle
mov
mov
jne
push
jbe
inc
aaa
sbb
xchg
mov
bound
xor
inc
add
mov
pop
push
dec
mov
push
xchg
and
mov
lea
push
or
jle
cmp
shr
pop
fimul
jp
mov
scas
jg
adc
bound
(bad)
data16
adc
(bad)
ds
push
loope
push
ss
xor
mov
sub
nop
out
push
cmp
jle
push
enter
inc
ss
push
sahf
inc
xchg
pushf
inc
sbb
scas
adc
cs
adc
push
or
pop
jbe
mov
faddp
dec
mov
pop
fcomip
xchg
mov
push
inc
pushf
hlt
mov
(bad)
into
out
test
dec
sub
jbe
ss
inc
in
mov
outs
ss
cmps
scas
pop
fcom
sahf
sahf
xchg
cmp
mov
or
ds
sub
popa
push
push
inc
adc
scas
ds
xchg
cmps
test
cmp
jle
inc
add
scas
fsub
sub
retf
jle
jmp
cs
jmp
inc
add
xor
sub
ss
mov
add
mov
push
mov
add
mov
push
adc
mov
dec
jle
add
mov
pop
push
or
sahf
shl
inc
ret
dec
je
xchg
push
ret
add
loope
xchg
sahf
ss
pop
mov
scas
push
mov
jge
bound
cs
es
sahf
cmps
ror
pop
mov
pop
push
mov
push
xchg
mov
jo
(bad)
push
into
cmps
inc
lds
es
scas
xor
(bad)
(bad)
inc
inc
xchg
int3
xor
xchg
push
jbe
ret
inc
push
push
pop
sbb
add
pop
push
push
jle
cwde
popf
add
push
(bad)
mov
push
mov
mov
sbb
mov
ss
adc
xchg
mov
sbb
(bad)
ds
shr
pop
dec
test
push
cmp
xchg
rol
sahf
push
pop
add
pop
out
ins
pop
popa
add
add
(bad)
xor
pop
push
and
js
mov
outs
outs
bound
test
push
je
inc
gs
ss
jne
sbb
es
push
push
fimul
sbb
dec
rcl
scas
sbb
shr
mov
dec
xchg
push
and
stos
add
mov
sbb
inc
inc
jle
xor
add
jbe
mov
push
addr16
outs
cs
out
dec
arpl
or
cmps
or
xchg
dec
or
push
ss
cmp
movups
and
test
xchg
jbe
jbe
and
add
push
xchg
ficomp
sbb
sar
dec
popa
sub
adc
or
fild
inc
push
outs
xchg
or
rcl
push
xchg
push
jbe
jb
xchg
fidiv
push
mov
mul
lds
jo
push
xchg
(bad)
(bad)
add
inc
cmp
push
push
jbe
loopne
fidiv
dec
adc
add
inc
add
loopne
mov
js
pusha
jo
fidivr
rol
push
es
and
loopne
(bad)
jbe
and
adc
xchg
sahf
(bad)
outs
mov
inc
out
mov
add
dec
add
mov
dec
stos
add
pop
dec
js
push
fisub
mov
pusha
fisubr
or
sbb
cs
(bad)
imul
push
mov
sub
adc
and
ds
dec
push
and
ds
add
xor
stos
jne
xchg
ss
push
and
cs
add
loope
dec
fiadd
pusha
ins
jbe
es
add
out
fimul
sbb
sahf
not
xor
push
(bad)
and
xor
pop
scas
(bad)
data16
sbb
(bad)
dec
ds
sbb
ss
jmp
data16
inc
fsubp
add
mov
sub
push
mov
sbb
ds
cmps
dec
cli
ret
int3
sub
mov
je
mov
jo
jle
es
adc
and
xchg
dec
inc
nop
sub
mov
cmps
sbb
sub
shl
inc
jbe
add
inc
jbe
push
mul
ins
cmp
(bad)
data16
push
jae
push
(bad)
scas
pusha
mov
fs
push
xchg
jmp
fst
inc
out
lock
push
adc
sbb
not
dec
je
mov
push
jmp
es
popa
jbe
fwait
pop
mov
in
dec
add
and
xchg
inc
jecxz
popa
inc
pop
adc
jecxz
jbe
and
(bad)
jmp
or
push
cs
add
call
sub
scas
push
pushf
xor
pushw
sahf
fiadd
add
and
ss
dec
inc
dec
mov
test
data16
pop
push
adc
neg
inc
rol
mov
sub
test
jbe
push
sub
cmc
(bad)
dec
push
xchg
cmp
lea
cmp
pusha
and
scas
mov
jbe
push
cmp
inc
mov
enter
pop
(bad)
push
test
xchg
xor
mov
gs
fidiv
lods
or
xchg
xchg
dec
data16
dec
mov
mov
dec
outs
dec
outs
jle
xchg
push
adc
mov
fistp
add
out
or
scas
push
pop
jmp
mov
jmp
(bad)
push
daa
or
data16
inc
(bad)
xchg
mov
fisubr
sub
adc
loope
out
pusha
mov
enter
push
(bad)
mov
lea
into
sub
ss
or
pusha
xor
ss
sub
(bad)
sbb
sbb
outs
mov
test
js
(bad)
cmps
and
loope
inc
xchg
mov
es
cmp
inc
pushw
xchg
inc
test
jle
ret
in
add
scas
mov
push
data16
xchg
jb
ss
lock
(bad)
jge
into
ret
popa
cmps
out
push
adc
dec
push
sahf
gs
into
into
dec
test
mov
push
dec
sub
or
mov
dec
push
retf
push
pop
stos
ror
(bad)
jle
mov
pop
neg
dec
bound
inc
push
sbb
js
push
sub
sbb
fidiv
jo
dec
ds
xor
push
daa
xor
and
cs
sub
fs
data16
jle
adc
cs
(bad)
arpl
sub
add
or
outs
mov
data16
fimul
sub
adc
sbb
les
pop
mov
push
arpl
pop
push
xchg
xor
mov
jle
or
outs
ss
mov
push
pop
push
aam
or
xor
dec
push
out
sbb
mov
cmp
nop
sahf
push
pop
adc
mov
out
adc
jle
mov
mov
bound
fs
out
lock
and
pop
ins
arpl
add
dec
outs
xchg
jle
outs
add
into
sub
mov
mov
cmps
movs
push
or
es
popa
test
or
ror
push
data16
add
es
pop
xchg
xor
and
int3
pop
fs
dec
mov
sub
pusha
ss
out
or
xchg
(bad)
lods
out
sub
and
mov
cs
inc
shl
xchg
ret
hlt
mov
dec
push
add
push
and
cmp
xchg
call
cs
scas
test
retf
xchg
pop
push
inc
(bad)
and
push
xchg
cmp
pop
jne
pusha
nop
fiadd
daa
mov
outs
call
cmp
sbb
mov
adc
pop
sbb
lods
shr
mov
hlt
out
push
cmp
adc
into
inc
push
pop
mov
(bad)
fisubr
or
dec
popa
jbe
into
jge
xchg
mov
adc
inc
push
adc
out
push
js
cmps
adc
mov
data16
mov
cs
bound
(bad)
mov
out
(bad)
sub
push
or
push
inc
test
inc
and
and
push
jo
or
jle
adc
out
jno
mov
ins
icebp
xor
and
nop
xchg
scas
out
test
pusha
push
(bad)
(bad)
mov
dec
out
jno
test
daa
and
nop
out
cmps
dec
into
rcl
xor
xor
dec
pop
js
dec
cli
outs
push
push
xchg
mov
xchg
mov
data16
xor
push
push
xor
ror
mov
xor
dec
inc
icebp
ss
xor
add
push
out
push
pop
pop
adc
xchg
shr
into
mov
push
daa
fidivr
cwde
ss
outs
arpl
mov
xchg
sbb
add
and
or
adc
mov
stos
cwde
js
fiadd
pop
push
test
dec
(bad)
pop
mov
adc
sbb
pop
lea
jne
sbb
ss
dec
and
or
xor
pop
mov
(bad)
inc
jle
movs
lods
sub
cmp
pop
add
sar
xchg
ss
push
inc
sub
das
dec
(bad)
enter
popa
ds
rcr
adc
outs
adc
(bad)
loope
pop
cmps
es
pop
mov
(bad)
mov
push
or
jecxz
push
mov
not
mov
or
or
ja
adc
(bad)
push
adc
loope
dec
xor
(bad)
dec
ss
and
inc
mov
ret
(bad)
dec
inc
ins
ins
pop
cmc
xor
cmps
sub
mov
hlt
push
push
mov
mov
and
push
aad
inc
jbe
les
push
push
fisub
jle
mov
(bad)
adc
cmp
mov
arpl
add
push
push
out
inc
sub
jbe
cmp
or
push
cmp
cmp
data16
call
xchg
loope
adc
and
popa
dec
sbb
xchg
mov
es
sahf
jo
adc
int3
ds
inc
inc
scas
dec
or
adc
rcl
inc
xor
into
dec
pop
adc
outs
and
jle
push
push
jmp
je
or
xchg
into
push
inc
push
daa
div
jle
jo
test
imul
pop
test
dec
mov
pop
ficom
push
(bad)
pusha
sbb
add
cmp
lahf
not
inc
xchg
jno
into
cmps
push
dec
sbb
fst
popa
mov
xor
loope
xchg
push
cmp
mov
(bad)
outs
test
loop
push
or
inc
daa
inc
out
sbb
xor
sub
pusha
and
pop
jbe
and
bound
das
xchg
add
mov
dec
out
mov
and
sahf
pop
loope
loope
fiadd
out
push
cs
push
push
jle
je
stos
push
data16
push
(bad)
adc
(bad)
(bad)
push
(bad)
and
adc
outs
out
inc
mov
es
sub
js
into
add
sbb
or
push
and
cmp
sub
ins
dec
push
in
ror
mov
add
pop
pop
dec
imul
dec
adc
adc
jbe
cs
and
outs
mov
jbe
js
cmp
sahf
or
cdq
ds
or
pop
fimul
adc
and
and
pusha
mov
(bad)
adc
inc
add
push
sbb
push
mov
or
(bad)
adc
je
mov
fidivr
add
and
sahf
xchg
inc
jp
es
xor
mov
sbb
mov
into
push
push
loopne
dec
mov
enter
xor
inc
es
add
mov
mov
es
jle
adc
adc
and
sbb
xchg
xor
(bad)
mov
pop
(bad)
sar
stos
into
dec
scas
sbb
sub
stos
leave
mov
push
gs
inc
jne
xchg
add
dec
enter
xor
sub
pop
(bad)
xchg
into
and
ficom
dec
push
cmp
push
xor
xchg
push
cmp
push
js
sub
outs
adc
or
fdivr
xchg
mov
xchg
dec
mov
popa
loop
xchg
scas
adc
jmp
sbb
push
inc
icebp
adc
cmp
fiadd
sub
push
jbe
retf
xor
sahf
mov
cwde
or
sub
inc
sub
mov
mov
inc
pop
add
sahf
adc
add
jp
cdq
es
mov
push
scas
push
push
lock
mov
ret
hlt
push
data16
dec
cs
cmp
xchg
mov
push
mov
jo
push
rcl
les
fimul
mov
loopne
push
xlat
mov
dec
push
ss
sbb
test
jae
push
es
add
or
popa
dec
inc
inc
pop
mov
fisub
add
sahf
(bad)
outs
aaa
aam
popa
and
xchg
in
(bad)
scas
xchg
xor
cmps
popa
push
popf
xchg
sar
xor
cmps
inc
inc
sbb
adc
jle
test
inc
outs
push
and
mov
push
jb
or
ss
xchg
out
jns
test
push
imul
xor
or
mov
mov
ss
inc
(bad)
test
cmp
mov
popa
ficomp
add
or
test
sbb
xchg
into
cmp
xchg
xor
dec
push
fidiv
add
ds
stos
lea
data16
shl
xchg
or
mov
repnz
mov
push
push
mov
mov
out
nop
(bad)
xor
stos
outs
xor
jle
mov
add
jb
or
ds
fiadd
sub
(bad)
jae
ret
push
loopne
xor
add
push
mov
je
jle
dec
sub
push
aad
push
push
push
and
rcl
mov
adc
add
rcr
test
push
dec
pop
(bad)
mov
outs
(bad)
cmps
mov
xor
push
rcl
mov
(bad)
inc
sub
xchg
out
push
inc
inc
adc
adc
(bad)
xchg
sbb
mov
ret
mov
adc
fsubr
and
xor
add
xchg
push
cmps
pop
test
push
iret
mov
bound
adc
rol
(bad)
out
dec
rcr
(bad)
je
(bad)
xchg
in
outs
push
push
ins
and
cs
push
push
add
xor
pushf
dec
jle
es
outs
cmp
inc
push
push
inc
mov
add
inc
push
ret
jno
add
push
mov
(bad)
pop
outs
push
test
or
sahf
dec
sbb
sbb
sahf
js
mov
pusha
push
pop
(bad)
mov
push
jle
mov
mov
push
test
imul
fisubr
test
xor
jno
cs
push
test
dec
sub
sub
xchg
mov
add
or
push
push
push
dec
rcr
jp
push
cmps
pop
in
and
sub
sbb
adc
jbe
xor
cmp
rol
ret
push
mov
mov
inc
out
and
mul
into
push
push
dec
jo
lock
imul
adc
and
mov
xchg
push
adc
sbb
out
out
jo
mov
mov
mov
or
and
hlt
pop
es
sbb
(bad)
xchg
cs
(bad)
mov
out
(bad)
ss
out
loopne
call
push
and
gs
push
jo
xor
jbe
inc
inc
cmp
push
push
and
push
neg
or
and
pop
cs
push
add
xor
out
pop
pop
inc
push
or
xchg
push
push
inc
push
push
dec
out
dec
push
or
mov
ror
pop
mov
inc
xor
dec
jbe
inc
pop
and
mov
mov
ret
dec
inc
push
add
and
and
mov
push
ss
dec
or
xchg
stos
adc
push
inc
aam
ret
xchg
add
and
inc
mov
ret
jo
fmulp
jbe
jmp
push
pop
lds
push
movs
or
cs
test
lea
or
add
pushf
les
sahf
push
mov
xor
inc
es
push
dec
cmps
sahf
test
xchg
xchg
pop
or
test
push
(bad)
push
sbb
imul
scas
push
push
mov
mov
arpl
add
imul
scas
push
cmp
das
pop
push
pop
cmp
jle
test
(bad)
(bad)
mov
dec
mov
inc
scas
into
(bad)
and
test
dec
ss
inc
push
pushw
push
dec
or
dec
push
push
mov
xchg
cs
adc
es
test
adc
neg
es
loope
cmp
(bad)
pop
or
add
push
pop
bound
or
push
cmp
fs
pop
xor
add
push
call
cmp
leave
and
and
(bad)
push
scas
pop
jo
add
leave
dec
push
inc
adc
push
(bad)
add
jo
pop
pop
out
sub
popa
xchg
dec
call
pop
ds
test
sbb
mov
push
xchg
outs
and
push
dec
push
into
add
or
push
jle
inc
add
outs
es
push
outs
xchg
fidiv
jb
dec
dec
cmp
xor
mov
out
outs
mov
adc
sbb
into
adc
inc
(bad)
sahf
dec
xor
mov
add
xor
out
push
add
cmc
mov
(bad)
push
aaa
test
sahf
push
push
sahf
xchg
push
mov
int3
inc
sub
add
test
out
adc
add
mov
sub
adc
(bad)
sahf
xor
nop
mov
loope
jle
jle
push
adc
scas
pop
inc
xor
es
xor
cmps
push
xchg
adc
jle
scas
sbb
adc
es
mul
retf
jl
xchg
push
bound
cmp
mov
jbe
sbb
outs
xchg
(bad)
or
inc
xor
js
scas
xor
loope
idiv
xor
pop
sahf
jle
inc
and
or
sahf
push
data16
mov
outs
jo
mov
adc
sbb
jmp
mov
fs
fiadd
jle
dec
sub
sbb
dec
loope
mov
mov
pusha
or
push
xchg
cli
and
into
jle
mov
inc
dec
xchg
dec
adc
cs
push
adc
push
mov
add
and
add
cmp
bound
pop
push
retf
xor
(bad)
cmp
lock
jae
jle
add
js
cs
xor
and
out
pop
cmps
pop
add
sbb
fiadd
cs
(bad)
dec
or
sbb
(bad)
lods
mov
push
inc
into
push
xor
es
es
sbb
pop
into
xor
add
xor
mov
dec
and
pop
dec
adc
and
les
ss
nop
icebp
(bad)
(bad)
jle
sbb
or
xchg
inc
mov
pop
or
movq
pop
mov
xor
scas
jae
push
rol
ja
inc
mov
push
add
mov
test
es
dec
pop
cmp
out
inc
addr16
sub
and
and
push
sub
push
mov
or
push
fisubr
mov
(bad)
out
popa
ins
jecxz
(bad)
dec
sub
push
xchg
push
inc
mov
sahf
mov
inc
test
add
jle
test
push
js
and
push
cmp
xchg
adc
test
bound
dec
add
test
xor
add
cmp
push
jle
push
push
sbb
pop
push
or
push
scas
mul
mov
push
mov
mov
sbb
cs
xchg
and
lock
sahf
cmps
js
sub
out
outs
or
cdq
or
mov
sub
inc
xchg
rcr
fs
sbb
xchg
ret
mov
add
(bad)
push
pop
test
or
pop
fimul
jb
add
cmp
adc
aas
jecxz
arpl
mov
adc
and
push
xchg
sbb
push
sub
pop
pop
add
cmp
dec
cmps
push
sub
inc
lea
(bad)
jno
lods
add
gs
jle
icebp
(bad)
xchg
adc
cmps
je
push
add
into
xor
fdiv
dec
(bad)
push
or
out
into
in
shr
jg
je
inc
mov
nop
add
outs
ficomp
xor
scas
lahf
xchg
adc
and
movs
add
cmp
push
adc
push
push
(bad)
cwde
and
and
xchg
inc
pop
cmp
(bad)
jle
cmp
push
(bad)
in
adc
into
pop
inc
sbb
xchg
cmp
sahf
inc
ds
pop
fimul
loope
push
ds
mov
jb
(bad)
adc
ss
ds
push
ror
cmp
cmp
cmps
(bad)
ss
inc
or
fidiv
push
add
dec
inc
or
dec
dec
xor
or
mov
sub
(bad)
pop
add
inc
add
lahf
or
jle
rol
into
push
jo
fs
inc
out
ss
daa
jge
dec
dec
inc
outs
xchg
and
jbe
push
mov
push
xor
retf
push
outs
push
push
retf
cmp
inc
add
scas
data16
push
add
add
and
dec
push
es
or
mov
cmps
out
pop
test
mov
pop
inc
fidivr
test
imul
ds
mov
adc
push
or
push
mov
(bad)
push
dec
and
fidivr
packssdw
xor
cmp
(bad)
movs
xor
loopne
sbb
ficom
scas
cmps
pop
and
cmps
ficom
mov
mov
add
es
xchg
ret
(bad)
ds
push
push
xchg
fs
xchg
pushf
xor
data16
adc
xchg
jno
and
pop
(bad)
data16
adc
and
sub
push
and
pusha
xchg
jle
mov
dec
xor
pop
cmp
push
into
jge
cmp
(bad)
(bad)
adc
and
inc
mov
adc
cs
pop
dec
les
bound
out
outs
push
shl
icebp
test
dec
outs
je
adc
fstp
movs
je
test
mov
lea
cmp
into
cs
push
xor
cmps
data16
je
dec
lods
add
(bad)
out
cmps
xchg
out
adc
push
sbb
push
and
cwde
or
push
sub
adc
mov
lds
es
add
sar
mul
daa
stos
loopne
pop
push
test
add
push
inc
mov
(bad)
dec
je
jae
inc
sub
and
fs
bound
dec
add
mov
dec
mov
imul
adc
arpl
xor
sahf
imul
int3
pop
add
into
dec
cmc
xor
jle
sbb
xor
fidiv
jo
push
adc
sahf
xchg
int3
nop
add
push
mov
lods
sahf
aam
leave
inc
mov
add
and
test
popa
push
push
jle
mov
push
xor
dec
cmp
xchg
mov
xor
push
jle
jo
mov
or
push
xchg
scas
dec
push
push
mov
inc
mov
outs
push
cmp
sbb
dec
or
or
jbe
mov
cmp
out
outs
sub
inc
inc
(bad)
lea
(bad)
mov
adc
adc
dec
push
mov
add
push
push
or
into
rcr
dec
or
jle
xchg
loopne
and
pop
inc
loope
adc
ds
pop
add
mov
jno
jecxz
lock
dec
xor
or
push
into
into
into
and
add
push
pop
jbe
adc
and
jbe
outs
sbb
(bad)
dec
scas
or
into
inc
push
jbe
out
inc
sub
je
xor
(bad)
js
dec
data16
ds
xchg
lods
add
mov
xchg
ss
cmps
nop
add
mov
add
adc
mov
pusha
inc
in
cwde
mov
es
loopne
(bad)
mov
inc
adc
aad
test
push
cs
dec
sub
test
test
push
scas
outs
cmp
(bad)
cmps
outs
(bad)
adc
xor
into
(bad)
dec
push
push
sub
inc
into
test
into
add
dec
inc
outs
cs
pcmpeqd
xchg
(bad)
js
jecxz
xchg
cs
sbb
mov
daa
ss
(bad)
(bad)
xor
es
loopne
push
cmp
pushf
adc
cs
sahf
jmp
enter
into
add
and
sahf
test
ds
sbb
push
and
push
sub
stos
adc
sub
add
pushf
test
push
(bad)
cmps
mov
push
sbb
cmp
or
cwde
mov
push
inc
dec
inc
xchg
sbb
ret
push
idiv
and
push
lods
or
outs
jle
(bad)
mov
xor
or
dec
outs
mov
or
push
test
push
or
cmp
fidiv
sub
faddp
mov
test
mov
inc
scas
dec
es
sahf
push
pop
add
outs
xor
push
out
adc
push
test
jmp
fs
push
push
es
nop
push
out
scas
add
inc
or
out
aam
pop
and
mov
scas
dec
sbb
mov
push
out
dec
inc
or
mul
(bad)
xor
inc
dec
imul
push
xchg
push
or
outs
mov
or
dec
push
push
ss
or
out
sbb
push
xchg
push
rcr
ss
cmp
ds
push
sbb
jbe
cmps
sub
out
pop
sbb
pop
out
popa
imul
push
push
cmp
nop
cmp
xor
outs
adc
xchg
mov
jge
(bad)
lods
scas
xor
xor
jle
jle
and
push
outs
out
add
push
cmp
loopne
ret
into
xchg
mov
jmp
rol
pop
scas
out
push
sbb
mov
out
sbb
pop
fadd
push
outs
add
es
adc
adc
fsubp
and
or
ds
push
push
pop
cs
neg
cwde
mov
out
ds
out
add
cmp
movs
cmp
pop
test
pop
sbb
mov
(bad)
push
push
mov
or
and
outs
in
add
mov
fisub
sbb
inc
outs
mov
or
fimul
inc
or
push
pop
or
es
add
mov
push
jae
jo
push
jne
fbstp
mov
push
sub
sbb
dec
sub
xor
(bad)
pop
inc
inc
popf
mov
cwde
inc
xchg
xchg
nop
pop
push
push
(bad)
xchg
bound
mov
dec
add
sbb
(bad)
inc
xor
and
outs
sahf
mov
inc
mov
pop
pop
adc
cmc
es
into
mov
outs
or
push
cs
mov
jbe
imul
mov
out
mov
(bad)
mov
xor
fsub
cmps
fdiv
add
jno
push
inc
cmp
cmps
into
xor
les
sahf
adc
push
mov
push
dec
jge
or
sahf
es
mov
sbb
dec
das
or
into
inc
push
and
jbe
(bad)
movs
daa
ss
push
adc
mov
(bad)
ds
or
stos
outs
pop
dec
mov
mov
add
ror
xor
xor
ss
aam
ja
out
and
ss
es
rol
sbb
xchg
cmp
js
jle
je
mov
data16
out
push
and
inc
xchg
add
shr
out
pop
add
scas
dec
sbb
xchg
or
xchg
or
mov
mov
mov
and
data16
xor
sbb
and
(bad)
push
into
jne
test
ficom
clc
cmps
jae
pop
dec
push
pop
add
and
push
imul
stos
mov
mov
push
ins
cwde
add
fisub
retf
neg
movnti
and
push
xchg
xchg
push
loopne
pop
neg
adc
cmps
sahf
pop
sub
movlhps
into
or
push
cmps
out
test
push
push
dec
enter
push
mov
jecxz
loope
ss
add
or
sbb
xchg
xchg
into
hlt
cmp
mov
inc
pop
pop
data16
push
sbb
push
out
inc
sbb
fiadd
sub
cdq
push
mov
xor
pop
outs
cmp
xor
mov
icebp
(bad)
pop
outs
pop
cmc
xchg
fcom
or
lock
(bad)
out
cmc
clc
push
pusha
out
push
(bad)
mov
data16
loopne
add
imul
adc
ss
out
xor
gs
popa
out
mov
out
data16
dec
pmaxub
dec
ret
imul
cmps
sbb
mov
test
push
into
inc
jge
mov
xchg
inc
or
add
outs
out
test
push
div
ss
js
cmps
mov
pusha
push
inc
(bad)
jo
dec
sbb
daa
add
mov
into
dec
push
pop
adc
out
jno
push
inc
push
into
adc
xor
into
aam
mov
(bad)
(bad)
cmps
popa
mov
test
xor
inc
dec
pop
pop
inc
jle
jmp
ss
inc
push
xchg
not
cmp
(bad)
mul
jle
adc
outs
pop
or
aam
ficomp
adc
mov
movs
ss
xor
push
xor
out
fcom
sbb
push
jno
xchg
int3
ret
pushf
sahf
(bad)
push
addr16
mov
xchg
mov
(bad)
ja
pop
cmp
sahf
mov
inc
cmps
out
movs
and
es
ror
cmp
sbb
pushw
sbb
(bad)
push
ds
dec
and
mov
add
pop
xor
cmp
jle
or
xchg
sub
push
into
ss
jge
neg
scas
or
popa
scas
addr16
cmp
xchg
mov
loopne
sahf
test
ret
push
out
(bad)
test
out
sub
bound
add
or
xchg
scas
enter
push
out
sub
jecxz
xchg
push
push
jle
push
lods
push
data16
rol
out
dec
es
sub
xor
je
push
adc
mov
outs
inc
push
sub
push
pop
mov
loope
mov
push
push
or
inc
fs
test
outs
(bad)
add
mov
cmp
push
push
push
push
ds
inc
hlt
add
adc
xchg
dec
jo
cs
inc
jbe
xchg
dec
rcr
adc
push
invd
and
inc
jne
and
pop
or
dec
push
ins
mov
xor
imul
adc
cmc
imul
xchg
ds
push
mov
loope
sahf
dec
xor
xor
fcomp
test
mov
adc
nop
outs
cmps
sbb
push
add
or
fdivp
mov
sbb
mov
push
dec
xchg
add
dec
gs
sahf
inc
or
inc
jle
ss
add
inc
es
push
popa
push
inc
or
push
xor
lea
or
mov
or
sahf
mov
push
(bad)
ja
gs
pop
out
loopne
mov
loop
sbb
and
scas
es
les
sbb
push
inc
nop
jecxz
and
mov
jae
jmp
and
call
popa
dec
test
add
add
push
cmps
inc
bound
sbb
xchg
xchg
mov
into
pop
add
outs
ss
add
jle
lock
push
push
cmp
add
xchg
ss
rcl
push
mov
push
jbe
or
push
mov
loopne
inc
inc
adc
cmp
into
jo
mov
mov
shl
hlt
les
mov
pusha
add
pop
sub
sub
inc
inc
add
xchg
int3
push
into
dec
xor
dec
call
scas
dec
outs
inc
inc
push
inc
pop
xchg
dec
xor
dec
cmovb
out
add
sbb
and
adc
sahf
push
sbb
out
cmps
scas
jge
push
xchg
sub
push
test
ss
mov
push
into
sar
dec
ss
dec
test
sahf
out
inc
mov
nop
jo
or
lahf
xchg
dec
out
scas
push
sbb
(bad)
jmp
dec
mov
(bad)
and
rcl
or
dec
scas
xor
fbld
in
movs
jge
out
aas
xchg
inc
add
(bad)
data16
xor
ss
sahf
not
sahf
sbb
mov
jb
ficom
and
xchg
cmps
jae
adc
ret
pusha
into
data16
dec
push
ins
jecxz
mov
jl
adc
or
jle
ret
xchg
xchg
add
mov
push
push
dec
mov
fs
cmps
lahf
push
lea
pop
sbb
xor
out
inc
add
imul
es
add
(bad)
cdq
adc
mul
scas
push
scas
sbb
xchg
jle
(bad)
push
xor
xor
scas
sbb
cmp
push
mov
add
test
arpl
mov
jnp
test
cmp
xchg
ins
sbb
push
and
out
inc
ret
xchg
mov
data16
rcr
add
je
inc
mov
mov
out
sbb
sub
inc
mov
popa
jno
data16
push
mov
inc
pop
add
xchg
icebp
xor
push
mov
jge
dec
sub
pushf
push
ss
push
rol
pop
mov
xor
push
or
push
or
adc
dec
xor
ficomp
mov
nop
ror
or
and
popa
out
into
callw
cmps
pop
mov
addr16
xchg
xor
(bad)
out
jmp
into
push
and
pop
nop
dec
out
pop
adc
or
imul
adc
push
push
addr16
push
into
out
xchg
ss
inc
data16
je
mov
scas
inc
cmp
inc
lahf
push
rcr
or
ss
adc
and
adc
push
data16
movs
add
inc
inc
or
or
scas
mov
pop
dec
or
xor
jo
(bad)
mov
jne
xchg
mov
out
push
neg
xchg
push
js
test
dec
push
pop
mov
add
(bad)
push
sahf
mov
xor
jbe
cs
push
loop
rol
jle
sbb
sbb
dec
mov
or
push
mov
sbb
push
mov
and
jbe
sahf
mov
test
in
xor
inc
dec
sbb
inc
push
cmps
inc
into
adc
test
ins
xchg
push
xchg
add
dec
sub
in
es
mov
scas
pop
jb
inc
leave
outs
dec
(bad)
xor
xor
outs
add
jle
ror
push
push
outs
add
scas
(bad)
mov
xchg
dec
jle
xor
push
out
es
retf
add
outs
ds
push
mov
imul
popa
xor
dec
jbe
pop
popf
imul
push
cmps
cmps
dec
outs
out
xor
ss
les
ret
cs
adc
pop
sahf
mov
xchg
movs
xor
rcl
inc
scas
push
daa
aam
shl
fidivr
jbe
rol
test
add
jmp
test
inc
adc
push
dec
push
jmp
test
shufps
scas
xor
mov
cmp
mov
inc
cwde
adc
(bad)
inc
push
push
jo
or
scas
xchg
jl
xor
mov
(bad)
sahf
stos
xchg
mov
jbe
jle
arpl
test
into
mov
inc
mov
add
xchg
xchg
push
je
cmp
test
push
out
inc
in
dec
cmp
or
inc
(bad)
push
xchg
inc
ja
rol
push
mov
push
(bad)
or
rcl
retf
cmps
scas
call
cmp
sub
scas
cmp
add
icebp
fidiv
pop
scas
or
add
push
push
or
out
movs
mov
int3
dec
adc
inc
enter
lock
inc
data16
pop
add
push
mov
pop
sub
mov
fidiv
out
xor
mov
cmps
test
xor
or
or
cmps
push
jge
retf
sbb
xor
cmps
mov
or
dec
push
popa
or
mov
inc
fdiv
mov
mov
arpl
dec
sbb
xor
ss
test
mov
push
dec
jno
inc
mov
push
add
inc
mov
jmp
loope
push
xchg
push
push
sbb
inc
push
ss
fsubp
push
test
xchg
ins
out
pop
mov
and
pop
or
add
jne
les
(bad)
adc
xor
cmps
pushf
xor
push
push
sbb
pop
cmps
jbe
sbb
or
inc
push
aam
xor
ss
test
mov
outs
inc
out
cmps
dec
pop
inc
pop
es
test
ss
push
jbe
cmc
sub
out
ss
jns
inc
and
(bad)
pop
pop
pop
or
jno
lods
mov
mov
cmp
idiv
or
test
add
jne
pop
sub
ret
sub
test
xor
xchg
xchg
inc
push
pop
jo
nop
adc
out
xchg
and
(bad)
mov
mov
cmp
sbb
push
inc
(bad)
mov
and
jl
and
ror
push
inc
pop
(bad)
dec
or
jle
ret
(bad)
push
pop
xor
push
push
xchg
push
xchg
push
or
push
loopne
xchg
push
fisubr
cmp
into
push
test
ss
outs
dec
pop
push
push
out
mov
cs
into
xor
rol
adc
into
dec
cmp
sub
inc
and
push
pop
(bad)
push
jo
retf
out
mov
adc
mov
or
fmul
inc
xchg
fs
pop
jp
outs
and
push
push
pop
inc
jmp
xor
push
out
xor
dec
mov
and
inc
cmp
out
xor
dec
cs
cs
xchg
or
sub
push
xor
dec
ds
push
test
add
jle
es
inc
ret
xchg
(bad)
movs
nop
push
sbb
(bad)
outs
inc
ret
mov
jo
push
js
(bad)
es
cmp
fisub
out
sub
adc
push
inc
cmp
ret
push
jbe
push
mov
adc
cs
jge
inc
cmps
add
popa
es
daa
cmp
ss
addr16
cmp
pop
mov
es
inc
out
xchg
ins
cmp
jle
push
nop
lods
fs
cmps
pop
fimul
les
cmps
(bad)
fsubp
and
pusha
mov
or
cmp
push
xchg
inc
add
lock
or
sbb
add
xchg
push
push
dec
es
pop
dec
es
xchg
enter
jbe
inc
add
push
xor
xchg
inc
mov
nop
sar
dec
cmps
push
xor
mov
pop
nop
ret
xchg
xchg
xchg
adc
jle
or
cmp
pusha
xchg
pushf
add
push
mov
xchg
adc
pop
pop
mov
out
and
mov
shl
not
pop
dec
push
and
outs
dec
push
data16
mov
scas
fimul
mov
dec
adc
lea
ror
dec
(bad)
mov
rol
gs
xchg
dec
pop
out
push
lea
and
jl
inc
or
pop
adc
push
and
push
test
sahf
xchg
dec
dec
and
or
ficom
(bad)
xchg
int3
xor
out
into
and
sub
ds
xor
aam
dec
push
sub
xor
mov
pop
push
push
retf
or
mov
jp
pop
ss
push
js
js
fidivr
ss
ss
sbb
outs
leave
jle
data16
adc
or
push
scas
mov
popa
jbe
xor
and
add
adc
out
inc
xchg
add
test
cmp
ret
cmp
loop
cs
xchg
(bad)
ss
xchg
js
outs
out
jbe
cmp
fsubp
cmp
je
sahf
jo
and
push
inc
push
push
mov
pop
xor
dec
scas
push
push
mov
inc
inc
or
dec
push
xor
jmp
sbb
push
push
inc
leave
or
pop
push
(bad)
jp
daa
add
or
es
les
popa
push
or
out
ss
pop
add
leave
and
ss
inc
pop
fwait
sub
cmps
dec
mov
or
dec
fs
xchg
inc
rol
push
add
dec
mov
xchg
out
xor
sub
jo
xchg
jle
test
test
push
jp
sbb
mov
mov
and
adc
push
retf
cs
data16
push
dec
dec
and
ror
mov
and
sbb
push
xchg
xor
adc
dec
jle
dec
and
pop
(bad)
push
out
fstp
dec
ds
pop
inc
cmp
ret
dec
cwde
sahf
(bad)
mov
lock
es
xor
jo
xor
test
and
and
pushw
push
and
xor
pushf
add
xchg
and
add
cmps
xchg
xor
mov
addr16
es
inc
and
js
test
or
dec
push
add
pop
ss
add
ss
or
push
scas
push
xchg
loop
rcl
xchg
cmps
shl
mov
add
mov
push
push
ret
and
stos
pushf
add
add
mov
inc
pop
fnstcw
test
(bad)
xlat
and
or
into
or
sbb
or
pop
(bad)
push
pop
xchg
into
ds
fist
dec
cs
add
or
pop
(bad)
into
sahf
push
dec
sub
pop
ds
jo
xor
sbb
push
sbb
cs
pop
push
dec
lods
lods
add
pop
adc
retf
push
push
pop
and
mov
sbb
shl
neg
rol
xchg
out
movs
sbb
pop
cs
popa
sbb
xchg
mov
xor
jle
jb
and
ret
mov
arpl
lea
data16
push
add
inc
and
pop
pop
inc
outs
dec
pop
(bad)
adc
push
inc
out
push
sahf
xor
pusha
xchg
outs
(bad)
and
dec
cwde
jne
mov
mov
aam
sub
out
mov
push
jle
and
imul
test
imul
arpl
xchg
ds
pusha
inc
sub
jo
sub
push
cmp
xor
push
xchg
push
test
sbb
xchg
xchg
add
xchg
div
outs
adc
dec
push
pop
movs
in
dec
(bad)
push
push
push
cmps
popa
or
pop
ss
mul
pop
ss
cwde
add
scas
scas
(bad)
push
pusha
add
cmp
mov
loop
sbb
shl
xchg
xor
movs
xchg
jb
mov
xchg
or
jle
ficom
icebp
xchg
(bad)
xor
je
jno
push
cmps
sub
inc
inc
inc
dec
cmp
dec
mov
into
xchg
jle
inc
xchg
outs
push
movs
int3
aam
ficomp
push
add
jbe
imul
das
jno
fs
jbe
mov
(bad)
lahf
pop
ret
and
mov
push
inc
(bad)
xchg
mov
push
xor
push
movs
mov
and
out
push
movs
or
movs
dec
loopne
push
push
and
outs
push
dec
sbb
pusha
sub
(bad)
push
(bad)
mov
add
es
push
shl
push
pop
xchg
fadd
call
sub
jmp
dec
push
and
out
xor
mov
fidiv
sub
(bad)
rol
daa
sbb
out
jae
pop
xchg
cdq
pop
pop
out
sahf
(bad)
(bad)
inc
xchg
push
jbe
lock
and
(bad)
movs
push
push
and
dec
push
add
imul
cmp
mov
jbe
call
xchg
push
adc
xchg
ss
adc
jo
data16
adc
inc
(bad)
or
les
bound
test
adc
(bad)
bound
push
xchg
out
push
sbb
push
inc
xchg
mov
data16
pushw
(bad)
jp
out
cmps
shr
inc
sldt
cmp
cmps
out
lock
mov
jge
or
mov
mov
test
ds
jae
les
push
jb
int3
sub
push
and
inc
adc
mov
test
push
xor
inc
(bad)
(bad)
(bad)
xor
sbb
into
(bad)
jne
and
mov
sub
dec
mov
shl
push
ss
push
inc
cmp
push
dec
mov
jbe
add
mov
mov
sbb
out
test
dec
pop
and
dec
push
inc
adc
xchg
adc
mov
scas
sub
pop
jmp
or
dec
and
out
jae
test
mov
cmp
mov
mov
movs
movs
(bad)
ds
es
inc
dec
push
jp
xor
(bad)
cmp
mov
(bad)
jno
and
lahf
outs
push
push
bound
dec
sbb
out
jmp
mov
dec
or
adc
inc
mov
xchg
inc
jo
dec
pop
ret
and
cmp
push
arpl
xor
(bad)
mov
rcl
mov
push
xor
and
(bad)
xchg
mov
mov
adc
fild
dec
adc
outs
imul
xchg
sub
inc
xor
imul
xchg
adc
pushw
out
add
or
inc
add
sub
into
cli
adc
(bad)
inc
dec
sahf
popa
cmp
pop
push
dec
xor
xor
cmp
or
idiv
xchg
ror
mov
adc
push
sbb
push
(bad)
cmp
into
push
pop
out
inc
pushw
and
inc
xchg
mov
adc
xchg
adc
mov
xchg
xchg
pop
pop
dec
(bad)
out
mov
mov
sahf
push
dec
adc
add
push
cmp
dec
or
pushw
(bad)
pop
sbb
mov
or
sbb
out
mov
cmovo
add
jle
jbe
pop
gs
daa
push
cmps
xor
pop
adc
dec
jbe
daa
inc
or
inc
mov
sahf
outs
adc
mov
dec
loop
push
dec
xchg
mov
push
mov
ins
mov
add
call
add
jbe
inc
pusha
or
es
jb
das
ds
rol
test
cmps
es
or
out
mov
pop
push
inc
inc
ret
mov
dec
mov
xor
mov
or
mov
mov
hlt
(bad)
jle
jno
dec
and
inc
into
sub
cbw
pusha
mov
dec
nop
or
xchg
mov
dec
push
dec
add
xor
mov
sbb
inc
outs
popa
push
push
and
jo
add
push
jne
jbe
push
inc
cmps
sub
add
(bad)
sahf
mov
data16
adc
mov
pop
adc
mov
cmp
sbb
xchg
jle
loopne
inc
sbb
pop
push
push
jmp
movs
xor
xchg
into
das
inc
inc
aas
mov
scas
inc
ror
pop
mov
sahf
(bad)
es
push
jle
(bad)
xor
and
push
outs
push
jb
and
lea
and
mov
sub
mov
push
ds
or
push
jo
and
xchg
out
jl
ret
mov
push
es
add
xchg
je
sahf
push
test
push
push
or
fisub
ds
push
or
push
cmps
rcr
fwait
out
push
rcr
xchg
inc
(bad)
inc
push
jbe
(bad)
xor
gs
add
xor
cwde
bound
add
adc
dec
xchg
daa
xchg
ds
mov
jbe
dec
push
mov
pop
pop
cmps
inc
push
dec
or
(bad)
jp
jo
scas
cmps
sbb
in
ret
jbe
out
or
add
push
test
dec
cmp
pusha
or
test
mov
xchg
int3
fimul
push
jbe
cmp
fcom
mov
popa
sub
cmp
sahf
ror
into
and
gs
cdq
add
loopne
push
add
inc
pop
movs
mov
sbb
test
sbb
xchg
push
pushw
pusha
xchg
or
sbb
pop
ss
adc
adc
jbe
push
outs
and
nop
sar
add
pusha
mov
inc
pop
or
shl
jne
push
push
push
jp
mov
pop
mov
sbb
push
push
dec
add
ficomp
cmps
mov
xchg
or
loope
ret
data16
xor
(bad)
xor
pop
sahf
and
inc
adc
mov
and
int3
ja
push
(bad)
nop
xchg
bound
cmp
mov
fsubr
scas
cmp
push
and
sahf
push
mov
lea
sahf
cmp
cmps
inc
inc
push
xor
add
addr16
test
sbb
fidivr
scas
cmps
aaa
xor
mov
shr
cmps
je
aad
(bad)
cmps
outs
add
and
(bad)
inc
pop
push
enter
inc
(bad)
add
or
xor
stos
mov
push
imul
and
into
inc
shr
mov
push
(bad)
adc
outs
mov
cmps
ds
add
(bad)
out
push
es
data16
(bad)
sub
or
mov
cmps
lock
sbb
imul
cmps
out
scas
jo
dec
(bad)
mov
ror
into
ds
mov
test
dec
add
inc
pop
es
or
enter
dec
sbb
fs
inc
push
es
data16
and
outs
inc
push
xchg
or
data16
push
xor
clc
xlat
push
mov
mov
cmp
cmps
pop
das
pusha
add
outs
out
clc
mov
xor
fisubr
pop
sbb
jb
xchg
mov
mov
pushf
ss
push
loope
mov
addr16
inc
pop
xchg
xchg
outs
(bad)
(bad)
pop
jle
mov
mov
out
popa
cmp
ss
push
push
aaa
in
pushf
out
xchg
pop
mov
into
and
mov
mov
dec
mov
push
rol
push
inc
ror
les
and
xchg
xchg
inc
inc
push
(bad)
jge
rcr
push
ss
(bad)
pop
bndstx
sahf
inc
popa
cmc
pusha
xor
push
push
push
aaa
sub
sbb
movs
cs
xor
mov
mov
mov
popa
sub
dec
pop
adc
out
out
sbb
push
sub
push
jbe
or
arpl
push
ret
xor
adc
test
push
(bad)
adc
ss
test
test
mov
inc
ds
cmp
or
pop
fst
out
xor
adc
test
xchg
movs
lahf
sahf
dec
xor
add
xor
or
(bad)
mov
inc
movs
dec
push
mov
(bad)
rol
dec
push
xchg
or
mov
mov
mov
push
aad
xor
xor
(bad)
outs
add
rcr
inc
dec
rcr
add
setle
lods
inc
push
dec
xor
xor
ret
inc
dec
(bad)
mov
pop
dec
inc
and
jb
mov
aam
(bad)
dec
(bad)
jbe
mov
pop
neg
mov
cmp
mov
add
xor
outs
or
jo
jecxz
xchg
pop
ss
sub
cdq
cmps
cmps
sbb
imul
adc
push
xchg
cmp
mov
jle
or
dec
jl
sub
pop
bound
inc
jbe
push
int
adc
xchg
push
rcl
adc
out
xor
adc
jbe
je
(bad)
pop
push
popa
add
loope
dec
out
xchg
pop
sbb
add
inc
out
mov
mov
cs
mov
mov
out
ret
add
(bad)
sbb
test
dec
xchg
mov
push
add
jp
cs
mov
or
out
gs
and
jmp
mov
scas
cs
pop
cmp
mov
add
sahf
cmps
xor
loop
sub
(bad)
out
sbb
push
pop
dec
and
cmp
ds
jno
lea
sub
or
cmps
out
dec
imul
push
pop
out
inc
pop
sub
sub
(bad)
pop
or
movs
test
cmp
dec
in
(bad)
cs
xchg
add
stos
adc
add
jbe
mov
not
add
arpl
inc
sub
pushf
jle
imul
cmp
pop
jbe
add
jno
jo
pop
sbb
xrstor
inc
dec
sub
popa
mov
jbe
adc
cmps
push
sbb
jle
pop
add
(bad)
push
push
push
xlat
dec
xor
or
inc
scas
movs
mov
es
xchg
sbb
out
(bad)
push
cmp
or
pushf
(bad)
inc
xchg
xchg
xchg
pop
push
push
inc
inc
and
dec
xchg
(bad)
cmps
popa
push
sbb
sub
adc
stos
cmc
adc
push
int3
or
mov
xchg
ss
push
mov
cmp
xor
and
sahf
cwde
push
adc
and
out
outs
add
inc
sbb
xor
jle
or
out
daa
add
push
bound
sub
into
jno
inc
out
popa
fs
outs
pop
ds
cmp
xor
push
xchg
lods
inc
xor
and
push
xchg
sahf
push
dec
sbb
ficomp
xchg
cmc
push
xchg
mov
dec
scas
cdq
cmp
cmp
adc
dec
add
and
xor
and
leave
loope
jl
bound
call
inc
cs
(bad)
jae
adc
test
add
mov
or
retf
sahf
das
push
out
or
jl
jbe
pusha
test
(bad)
jne
imul
xor
ins
fisubr
pop
add
sub
xchg
fdivr
mov
inc
ds
and
and
push
add
or
ds
ins
mov
sbb
cs
add
xor
ss
push
cmps
mov
mov
rcr
add
mov
or
cs
call
jbe
test
test
push
push
into
jmp
inc
jge
mov
jo
cs
movs
xor
xor
mov
jbe
inc
sahf
push
ret
mov
ss
and
push
ret
aam
mov
push
scas
rcl
js
out
sahf
jbe
xor
data16
inc
nop
jle
cs
push
adc
push
ds
retf
add
jle
cmc
or
inc
mov
mov
sbb
sbb
(bad)
inc
and
jbe
cmps
shl
inc
hlt
(bad)
les
jbe
pop
inc
movs
add
ds
(bad)
pop
adc
cmps
mov
pop
jle
aaa
imul
(bad)
div
outs
dec
xchg
pop
add
pop
ss
push
(bad)
and
xor
add
ror
jae
xor
mov
mov
push
jno
xchg
or
fwait
js
xor
add
rol
xor
cs
cs
and
adc
jne
cdq
add
sahf
dec
add
jle
fisub
mov
sahf
push
dec
mov
cs
sbb
aaa
js
ret
or
fwait
(bad)
jle
cmps
cmp
or
inc
out
dec
and
inc
outs
dec
neg
inc
arpl
imul
out
add
outs
jbe
add
push
out
push
mov
cmp
cwde
add
sbb
outs
sahf
inc
add
push
out
mov
data16
leave
jp
(bad)
and
fld
ds
scas
cmps
(bad)
enter
push
add
jecxz
inc
inc
scas
xor
out
inc
cmps
cs
les
out
dec
into
mov
jb
xchg
xchg
into
push
sbb
xor
ss
cs
push
sahf
mov
adc
mov
inc
out
cs
adc
jle
data16
cdq
icebp
out
scas
sahf
jge
call
push
data16
or
scas
(bad)
sub
mul
(bad)
pop
mov
jl
push
mov
out
outs
mov
es
or
push
movs
pop
bound
push
dec
rcr
fld
out
loopne
push
pushw
movs
xor
push
outs
cs
inc
sub
add
or
or
and
call
jbe
jo
mov
mov
push
push
inc
mov
cmps
xor
jle
or
dec
push
scas
dec
pop
call
or
fist
inc
jne
pop
xchg
into
loope
or
inc
es
dec
dec
push
je
rcr
xchg
jle
xchg
push
outs
imul
dec
(bad)
push
sahf
pusha
je
inc
dec
mov
xchg
scas
outs
and
cmps
scas
sahf
jle
and
push
(bad)
imul
push
stos
pop
pusha
xchg
pop
retf
(bad)
dec
mov
or
imul
cmp
inc
adc
xor
into
push
jle
sub
add
ret
bound
test
inc
push
push
(bad)
cmps
imul
data16
and
inc
push
ror
xchg
out
mov
add
enter
neg
inc
mov
or
mul
mov
mov
and
push
push
out
aas
ss
adc
mov
add
xchg
push
push
or
push
mov
pop
pop
into
es
add
loope
xor
push
js
sbb
sahf
push
js
cmp
push
dec
or
push
data16
jmp
retf
add
mov
jae
jle
adc
mov
push
inc
xlat
ret
pop
cmps
inc
dec
sub
or
inc
bound
fiadd
es
mov
dec
push
jbe
push
popa
gs
sahf
cmps
movs
pop
adc
es
xor
jo
inc
gs
addr16
or
(bad)
jo
add
sbb
cs
mov
(bad)
data16
(bad)
sub
fisubr
sbb
or
out
add
inc
dec
jle
push
xchg
jmp
push
lods
pop
outs
(bad)
cmp
cmp
pop
dec
xchg
imul
(bad)
es
sub
idiv
sbb
lea
push
imul
sub
std
add
outs
inc
xor
in
pushf
xchg
push
sbb
icebp
out
push
and
data16
(bad)
push
add
adc
or
(bad)
outs
inc
mov
mov
ins
dec
inc
pop
push
fiadd
mov
push
mov
nop
mov
jg
ds
enter
jo
(bad)
nop
jle
ins
dec
inc
jno
jno
outs
mov
sbb
outs
out
push
add
dec
jbe
xchg
or
(bad)
push
and
push
dec
outs
mov
sub
cli
cmp
(bad)
push
mov
adc
push
dec
push
lods
cmps
or
push
out
xor
and
xchg
scas
(bad)
push
(bad)
adc
inc
xchg
out
pop
xchg
int3
inc
pop
push
mov
dec
dec
aam
nop
push
and
retf
xchg
in
push
pop
push
jo
xor
xor
jle
(bad)
rcr
mov
imul
sbb
dec
mov
movs
mov
and
inc
xor
mov
cli
and
pushf
ins
dec
dec
push
and
xchg
push
mov
dec
sbb
lods
(bad)
cmps
and
(bad)
js
dec
sbb
(bad)
into
xor
xchg
(bad)
mov
push
ins
push
mov
fldcw
popa
sub
push
jmp
imul
(bad)
xor
(bad)
es
inc
dec
or
inc
push
inc
neg
push
pop
dec
loop
fmul
sahf
bound
adc
scas
dec
dec
test
inc
nop
mov
mov
adc
scas
test
lock
jle
(bad)
mov
jbe
outs
or
dec
fisub
scas
add
mov
xchg
dec
je
(bad)
jae
pop
add
mov
or
push
or
xchg
jp
add
aam
push
xchg
jo
pop
dec
push
push
(bad)
not
loop
sbb
pop
out
or
dec
push
push
mov
test
sub
adc
dec
leave
daa
jbe
sbb
test
out
mov
(bad)
into
popa
push
or
xchg
xchg
adc
out
push
ret
push
aam
test
rcl
xchg
add
push
sbb
(bad)
cmp
or
push
push
test
bound
adc
inc
pushf
sahf
pop
(bad)
out
push
add
(bad)
cmps
pop
add
pop
ds
mov
fisubr
data16
sub
cmp
jle
dec
cwde
and
inc
cmps
jge
pop
call
cmps
cwde
sbb
lea
movs
sbb
push
imul
xchg
mov
(bad)
jle
test
and
cs
mov
loope
jg
adc
lea
jns
out
jle
xchg
cmps
mov
push
and
xor
cs
dec
inc
sub
cbw
int3
inc
xchg
mov
(bad)
pop
xchg
pop
and
jb
data16
into
and
and
push
inc
inc
call
push
lea
pop
xor
xor
xor
push
(bad)
xor
xchg
cmp
push
test
push
ret
jbe
rcl
rol
xor
loopne
(bad)
mov
adc
dec
das
lods
xchg
sbb
push
sahf
jle
inc
or
inc
pop
call
jle
shr
dec
ret
(bad)
fimul
xchg
retf
sbb
sbb
div
and
inc
and
mov
push
inc
outs
mov
(bad)
into
fcomp
adc
out
push
mov
sub
out
cmps
movs
adc
dec
xor
ss
push
cdq
jecxz
inc
cs
popa
inc
lea
mov
mov
cmc
and
push
push
xchg
ds
mov
xchg
and
push
out
adc
and
push
dec
mov
jle
xchg
xor
adc
scas
add
push
sub
sub
es
out
es
sbb
push
jbe
cmp
out
out
pushaw
or
sub
ss
xchg
call
dec
mov
pop
dec
pop
sbb
es
mov
mov
cmp
ss
(bad)
xchg
and
cs
xchg
icebp
push
dec
mov
cmps
mov
fcmovnbe
data16
xor
outs
or
pop
clc
xor
pop
mov
fcmove
(bad)
push
mov
cs
js
out
add
pop
popf
lea
ror
mov
inc
dec
or
es
sar
pop
(bad)
add
add
sub
pop
dec
sbb
push
add
or
or
mov
dec
xor
sar
sahf
cmp
lock
outs
sahf
jg
test
xchg
push
push
(bad)
cmp
xchg
jo
xchg
movs
push
dec
push
xchg
movs
add
xor
es
hlt
cs
data16
inc
test
ss
cs
rol
sahf
xchg
xchg
inc
sahf
out
stos
xchg
xchg
out
rol
sahf
push
mov
inc
pusha
xor
call
jbe
xchg
xchg
push
test
push
jno
xor
into
fnstcw
stos
push
jle
sbb
xchg
pop
adc
(bad)
jle
adc
jp
into
mov
test
push
cmps
push
icebp
inc
jmp
pushw
cmps
mov
ret
sub
fimul
xchg
rcl
out
pop
inc
and
sbb
imul
pop
cs
mov
dec
pushw
xchg
test
(bad)
pop
je
jbe
dec
ins
sbb
cmp
push
xchg
and
fisubr
cmps
lock
adc
ss
xchg
xor
push
and
sbb
mov
push
dec
ror
ret
adc
adc
popa
(bad)
mov
xchg
sbb
dec
es
push
inc
adc
pop
rol
and
(bad)
cld
xor
pop
test
inc
push
pop
inc
xchg
sahf
xor
xor
mov
enter
pop
push
and
dec
lahf
push
inc
test
push
pop
dec
movs
and
mov
and
pop
cmp
cmp
sahf
xchg
adc
out
mov
pushw
data16
adc
xchg
xchg
sub
or
jbe
sub
not
or
push
mov
movs
xchg
out
mov
es
fisub
and
pusha
sbb
fimul
dec
inc
cdq
mov
test
xchg
(bad)
dec
(bad)
out
rol
(bad)
mov
cmps
xchg
xchg
cmps
mov
xor
lods
outs
je
jbe
jge
popa
por
pushf
ins
or
mov
shl
sub
inc
jl
xor
jmp
push
or
ins
sahf
ficom
pop
mov
out
cmp
push
mov
pop
push
test
add
inc
into
cwde
sbb
fwait
out
bound
sete
scas
ss
push
rol
push
jle
sbb
mov
es
not
xor
sahf
xor
xor
or
xchg
mov
and
push
div
adc
mov
or
dec
outs
dec
pop
test
push
sbb
(bad)
gs
retf
cs
pop
icebp
xor
push
out
sahf
xor
das
push
adc
popf
lods
mov
sub
adc
dec
popa
inc
ss
bound
cmp
dec
into
cmp
sahf
shl
daa
loop
jle
inc
push
sbb
outs
xchg
push
or
ror
mov
push
popf
and
mov
inc
jle
ficomp
xor
(bad)
or
jge
inc
mov
mov
imul
pop
xor
add
mov
ss
dec
test
test
push
outs
push
outs
add
test
ss
(bad)
dec
mov
push
push
sub
pop
popa
pushw
xchg
ror
push
call
sbb
add
push
popa
push
inc
jb
or
out
dec
loopne
cmps
and
push
scas
adc
jecxz
cs
cwde
sub
scas
jle
aam
loopne
neg
cwde
jle
and
push
(bad)
push
xor
add
psubsb
jle
push
add
mov
(bad)
sub
pop
or
scas
ret
fs
(bad)
movs
xor
cs
push
add
add
and
push
pushf
or
push
rcr
mov
enter
inc
aaa
mov
add
fs
data16
push
push
and
cmp
adc
sub
push
mul
leave
xchg
adc
mov
mov
add
or
ret
adc
pop
mov
inc
mov
mov
inc
xchg
ss
pop
pop
push
bound
sub
cdq
idiv
(bad)
adc
loopne
enter
xchg
adc
jbe
add
and
xor
mov
dec
mov
data16
add
ss
ret
or
ss
or
push
sti
xor
push
out
jle
outs
fadd
mov
pop
push
pushf
push
adc
push
sub
(bad)
dec
inc
xchg
xor
icebp
dec
mov
pop
retf
icebp
(bad)
jle
call
jle
test
jle
(bad)
jo
adc
dec
pop
jo
push
xor
out
sahf
mov
push
adc
xchg
xor
outs
jle
sbb
xchg
(bad)
(bad)
or
loopne
push
(bad)
push
mov
cmps
imul
dec
fimul
pop
xor
inc
sbb
pop
ins
or
push
jb
mov
ins
sbb
mov
dec
sub
pop
push
rol
or
or
jmp
dec
pop
ret
dec
fwait
cmp
int3
js
inc
mov
mov
(bad)
bound
pop
push
popa
mov
scas
dec
mov
jo
fiadd
sub
out
fidivr
sub
xor
not
xchg
adc
into
into
mov
mov
popf
or
out
inc
xchg
mov
push
ds
mov
inc
push
jbe
dec
sbb
popa
cs
adc
or
(bad)
mov
or
and
add
inc
jbe
or
or
out
retf
ds
cmp
xchg
push
(bad)
jle
ret
and
push
mov
sbb
adc
jle
mov
inc
sub
scas
push
xchg
sub
adc
rcr
retf
push
ror
mov
xchg
push
cmps
mov
push
sbb
pop
es
xchg
or
add
dec
outs
cs
mul
loope
test
xor
(bad)
mov
push
ficom
sahf
ds
and
ss
or
and
mov
adc
aaa
data16
mov
cmp
das
sbb
mov
es
push
popa
inc
enter
shr
push
mov
imul
add
fidiv
push
dec
or
xor
nop
rcr
push
(bad)
xor
mov
sbb
out
mov
inc
mov
inc
dec
or
xchg
mov
not
mov
scas
pusha
and
in
dec
div
jle
sub
xor
jo
inc
xchg
xchg
pop
cmp
popf
or
or
push
scas
push
test
aam
scas
pop
xor
popa
es
(bad)
and
test
xchg
test
xor
push
inc
push
push
sahf
xchg
mov
push
pop
add
xchg
hlt
xchg
jno
push
dec
mul
dec
rol
not
xchg
aam
(bad)
dec
out
adc
xchg
push
ds
and
sbb
sub
mov
imul
pop
xchg
jae
daa
jecxz
sub
jge
pop
xchg
test
mov
mov
sahf
ins
push
or
out
popa
add
and
scas
pop
dec
adc
data16
inc
pushf
ss
out
movs
push
xchg
pop
cs
bound
pusha
fs
cs
push
push
cs
mov
xor
push
or
sub
movs
hlt
mul
lea
sub
push
inc
cmps
cmp
xchg
addr16
push
sbb
push
cmps
fisub
push
adc
mov
lock
pop
and
mov
cs
mov
push
cs
mov
js
jb
out
adc
push
or
jne
and
or
cmc
and
out
dec
and
sbb
pop
out
push
inc
das
inc
cmps
outs
stos
add
push
inc
cs
push
cmp
mov
xor
leave
push
mov
out
xchg
mov
add
mov
pop
pop
mov
add
dec
xor
add
(bad)
sub
ja
popa
dec
or
xchg
add
data16
ror
pushf
shr
push
xchg
and
add
xchg
and
adc
push
inc
sbb
addr16
mov
jge
push
imul
daa
mov
xor
out
or
and
scas
(bad)
jmp
(bad)
jbe
test
push
into
imul
cwde
push
data16
daa
pop
(bad)
scas
mov
adc
cs
(bad)
sbb
sub
xor
push
xchg
xchg
add
xor
adc
outs
cmps
out
call
(bad)
test
popa
xchg
and
push
dec
(bad)
push
xchg
xor
mov
icebp
jbe
into
lock
and
daa
mov
or
inc
push
or
push
dec
push
inc
cmps
mov
push
or
cmp
or
cmps
dec
cwde
xor
mov
movups
test
adc
fdiv
xchg
dec
jle
pushf
adc
xchg
jo
in
(bad)
push
dec
movs
xchg
jle
ss
jae
or
push
jle
mov
jbe
gs
test
push
push
jle
loopne
inc
out
inc
mov
cmps
push
pushf
test
test
add
xor
xchg
cld
loope
mov
sbb
pop
dec
sub
fiadd
mov
lods
or
lea
out
sbb
cwde
and
mov
sub
inc
ss
jno
loopne
push
push
out
xor
cmps
mov
aas
jo
loopne
dec
push
dec
ror
adc
fsubp
pop
add
(bad)
fisub
or
xchg
inc
dec
popa
cs
shl
test
jbe
mov
dec
es
push
add
mov
popaw
xchg
out
inc
sbb
mov
into
and
adc
dec
mov
pop
push
pop
push
data16
xchg
inc
pusha
inc
mov
mov
xor
cdq
adc
push
adc
mov
dec
dec
xchg
mov
push
dec
cmp
jb
mov
sub
faddp
sbb
mov
and
rol
mov
enter
xchg
pop
shl
dec
xor
pop
sbb
es
push
aaa
ds
(bad)
mul
data16
dec
sub
or
push
push
xchg
imul
push
jbe
xchg
mov
mov
out
adc
lea
or
pop
bound
lods
out
ss
pushf
sbb
daa
push
test
sub
cmps
mov
cmps
mov
pushf
or
push
ds
(bad)
push
es
ror
xchg
neg
mov
lock
pop
sub
(bad)
fcom
pop
add
xor
push
(bad)
mov
rsqrtps
xor
jbe
data16
pop
xor
mov
inc
movs
(bad)
push
out
test
add
jno
and
inc
enter
push
and
push
outs
into
pusha
mov
jbe
movs
(bad)
mov
add
mov
outs
js
aad
push
push
dec
inc
outs
mov
movs
mov
push
outs
inc
and
mov
nop
xchg
call
les
push
pop
mov
add
push
scas
jne
cmp
xchg
mov
xor
sbb
ss
in
and
jp
xor
dec
mov
push
xchg
mov
push
or
push
or
pop
arpl
mov
sahf
sahf
scas
push
jmp
aaa
es
push
cmp
inc
dec
fisub
scas
push
add
ret
jle
lods
xor
daa
test
jle
mov
fiadd
pop
mov
adc
inc
xchg
xor
jg
adc
push
cs
pop
pop
mov
into
push
sub
mov
mov
jae
ss
push
mov
daa
pop
mov
fiadd
dec
(bad)
mov
pop
xlat
cmps
dec
ds
test
(bad)
pop
sahf
dec
sahf
ss
push
sub
sbb
push
scas
mov
add
push
jo
cmp
sub
out
sub
or
dec
push
inc
push
pop
pop
fcmovbe
ret
jle
into
xchg
xchg
out
sahf
pop
mov
imul
mov
test
pop
add
js
mov
popa
inc
cmp
data16
out
inc
push
add
dec
jno
mov
push
push
dec
popf
dec
ss
sub
xor
es
outs
inc
mov
movs
add
inc
ficomp
retf
add
fcom
push
add
sahf
sahf
inc
je
and
cmps
into
cmps
je
adc
imul
xor
inc
mov
pop
mov
ss
and
test
dec
es
mov
pushf
or
inc
dec
je
push
dec
imul
push
gs
push
ret
imul
imul
cs
neg
inc
add
cs
add
add
and
xor
stos
ror
dec
bound
xchg
push
dec
adc
push
push
mov
inc
pop
out
xor
(bad)
mov
add
jne
or
pop
mov
ds
inc
ss
bound
mov
cmp
push
xor
sub
add
sub
mov
inc
outs
inc
mov
and
dec
xchg
mov
test
test
test
test
sbb
fisub
sbb
xchg
popf
lea
into
and
data16
sbb
pop
jbe
or
jbe
dec
adc
cmps
cmp
add
xchg
inc
inc
sbb
jbe
add
xchg
outs
xor
xchg
adc
lahf
xor
(bad)
(bad)
ds
dec
outs
sub
mov
inc
pop
and
ss
out
push
mov
push
adc
and
enter
xchg
scas
pop
stos
test
out
mov
add
jno
mov
test
jo
test
sbb
push
fmul
(bad)
push
inc
data16
data16
gs
or
or
xor
xor
ds
sbb
mov
idiv
out
xor
loope
dec
out
mov
push
jp
(bad)
imul
mov
xor
mov
mov
or
add
cmc
fs
scas
test
movs
add
add
(bad)
xchg
dec
shl
cmp
ja
sbb
push
jl
inc
sbb
lahf
pop
dec
mov
es
dec
push
mov
add
add
jne
inc
cmps
outs
xor
dec
(bad)
fs
or
or
mov
xor
push
(bad)
sbb
dec
push
mov
(bad)
push
ret
cmps
test
(bad)
xchg
data16
(bad)
outs
pop
hlt
xor
push
xchg
sbb
add
fisub
dec
into
rol
ss
dec
test
jle
(bad)
sahf
and
(bad)
test
push
push
iret
and
cmps
(bad)
jle
inc
dec
push
and
xchg
mov
dec
mov
inc
popa
(bad)
lods
add
sub
cmp
add
loope
ss
add
and
inc
out
xchg
mov
mov
sub
cmp
xor
inc
inc
add
inc
mov
aaa
xchg
ror
(bad)
jle
outs
inc
xor
push
(bad)
daa
mov
ds
cmps
imul
push
push
and
push
and
(bad)
dec
add
mov
sbb
popa
outs
dec
(bad)
cmps
ret
cmp
dec
(bad)
retf
xlat
pop
xchg
push
dec
mov
pusha
dec
stos
or
jge
pushf
psrad
outs
out
cmp
dec
es
andps
cmp
add
rol
pop
cmp
or
scas
dec
pop
add
dec
and
sbb
cmp
into
add
push
test
pop
sub
(bad)
sub
push
mov
push
fiadd
loopne
jecxz
inc
adc
and
or
popa
out
pop
nop
push
lea
sbb
push
fimul
daa
dec
test
xchg
add
add
xchg
into
ss
jge
sbb
dec
inc
sub
movs
out
push
mov
jle
sub
(bad)
addr16
jno
sbb
or
daa
push
(bad)
icebp
xchg
shl
cmps
inc
ret
ret
je
xchg
ret
(bad)
pop
push
inc
jbe
aam
push
data16
iret
(bad)
sub
pushw
dec
ror
push
out
and
mov
inc
mov
xchg
pop
cs
mov
es
(bad)
pop
add
and
and
mov
xchg
ss
movs
inc
adc
sub
push
mov
xor
fs
adc
and
out
or
push
dec
push
movs
add
mov
into
inc
rol
adc
mov
inc
imul
and
push
out
mov
push
dec
push
repnz
test
js
ficomp
arpl
into
je
pop
xchg
loope
xchg
push
or
add
sbb
rol
sub
into
cmps
dec
xchg
mov
fiadd
out
adc
adc
xchg
pop
(bad)
adc
xchg
push
cs
xchg
inc
mov
adc
xchg
scas
jbe
push
mov
faddp
inc
cmp
push
dec
mov
rol
xchg
ss
mov
inc
cmp
cmp
jbe
mov
xchg
push
add
xchg
icebp
or
nop
sbb
and
pushf
cmp
mov
int3
push
dec
jg
enter
push
ins
fidiv
jo
hlt
mov
xchg
out
faddp
push
enter
or
into
push
and
scas
dec
cmp
enter
xor
das
inc
and
(bad)
pusha
ss
pop
mov
lea
ss
push
sub
(bad)
leave
or
shl
push
dec
ss
inc
adc
inc
fimul
sbb
mov
push
movs
scas
inc
xlat
ror
(bad)
pop
dec
ret
das
jbe
mov
rol
dec
neg
call
enter
fisub
(bad)
loopne
or
(bad)
ficomp
cmp
out
xor
outs
ret
and
pushaw
gs
test
lods
imul
dec
sub
xchg
lock
dec
das
inc
adc
js
test
jno
pusha
test
add
dec
jbe
inc
add
inc
ins
pusha
push
rdpmc
add
adc
imul
outs
out
test
sbb
push
push
adc
or
xchg
adc
jbe
xor
mov
into
les
xchg
push
test
cdq
jbe
test
enter
push
push
rcl
push
push
jno
rol
cmp
cs
adc
das
jle
sbb
pop
imul
test
mov
adc
pop
push
inc
dec
and
(bad)
daa
pop
and
sub
pop
nop
es
xor
pusha
push
sahf
scas
(bad)
dec
aam
(bad)
push
and
(bad)
mov
xor
xor
ss
dec
outs
data16
push
jle
xchg
sub
xchg
jle
adc
jb
stos
mov
push
ds
pusha
and
push
dec
es
push
fidiv
pop
inc
pop
ja
sbb
or
imul
inc
cs
nop
sbb
fs
mov
dec
inc
jbe
sbb
jecxz
les
push
fmulp
les
add
push
scas
dec
sbb
es
(bad)
or
out
pop
jl
pop
push
dec
push
cmps
adc
sub
push
or
pop
outs
jbe
or
mov
out
sbb
or
xchg
push
push
repnz
gs
out
push
inc
out
xor
dec
(bad)
sbb
or
xor
sub
jmp
imul
push
out
jno
and
push
dec
push
scas
cmp
jle
pop
cmp
fisubr
mov
pop
or
push
mov
inc
inc
mov
imul
(bad)
bound
imul
xchg
mov
adc
test
push
jno
jmp
dec
es
push
dec
dec
add
xor
out
xchg
pop
jle
pop
xchg
add
pop
(bad)
adc
push
sbb
ficom
(bad)
adc
adc
xchg
mul
push
mov
inc
push
sahf
ds
sbb
sub
and
jbe
and
jo
movs
jo
sahf
mov
daa
das
loope
or
(bad)
jle
add
inc
or
es
cwde
jmp
popa
inc
jle
ss
sub
outs
xchg
push
push
inc
push
push
fiadd
fst
neg
and
test
or
(bad)
dec
inc
push
dec
push
pop
sbb
outs
test
cmp
sahf
dec
shl
push
js
or
into
dec
mov
cmps
sbb
outs
leave
inc
or
outs
push
sbb
lods
dec
outs
mov
dec
ss
jecxz
mov
cwde
pop
jo
ret
mov
mov
sahf
xor
jbe
aaa
movs
add
add
sub
jp
arpl
(bad)
dec
push
sub
or
test
dec
or
push
or
mov
bound
mov
xchg
test
cmc
xor
mov
mov
sbb
outs
push
mov
pop
mov
outs
cli
mov
ds
in
fs
pmaxub
dec
and
fwait
xor
mov
pop
add
xchg
mov
dec
mov
push
ss
inc
xchg
pop
js
cmps
rcl
in
sahf
dec
or
and
mov
push
cs
cmp
mov
add
or
and
mov
add
ror
into
rcl
rcr
pop
mov
push
outs
dec
test
(bad)
mov
push
push
data16
ds
push
(bad)
and
or
loopne
es
inc
(bad)
dec
or
aad
inc
ss
(bad)
mov
add
pop
es
rol
jle
sahf
or
mov
cmp
adc
stos
add
(bad)
push
mov
xor
add
test
ss
mov
adc
jle
xor
add
xchg
push
pop
adc
and
(bad)
jbe
inc
nop
cmp
fidiv
add
test
push
lods
xchg
mov
jge
adc
push
into
(bad)
adc
(bad)
cs
push
rcr
aam
mul
xchg
dec
cs
add
ss
dec
imul
cs
sbb
jle
jno
and
fsubrp
sbb
cmps
jle
es
adc
sahf
sbb
(bad)
push
bound
into
xchg
scas
retf
inc
into
mov
js
xchg
daa
test
xchg
push
into
ss
mov
ss
sbb
outs
push
mov
sahf
push
xchg
xor
test
or
push
lea
test
add
aad
mov
or
test
icebp
pop
rcl
cmps
sub
loope
inc
pop
das
dec
sub
ins
popf
test
ror
(bad)
mov
push
ja
(bad)
frstor
test
sub
push
outs
(bad)
push
push
push
loope
ret
jle
push
shrd
(bad)
dec
ret
push
addr16
pushw
(bad)
mov
(bad)
scas
ror
jp
push
xor
rol
dec
push
inc
jecxz
jbe
push
cmp
add
jle
adc
(bad)
scas
sub
icebp
sbb
inc
jbe
loop
lods
outs
ss
and
addr16
mov
dec
out
push
popa
ror
cmp
dec
mov
outs
mov
loope
shl
fistp
inc
cmp
xchg
mov
add
(bad)
movs
push
xchg
(bad)
mov
mov
ds
pop
and
or
push
push
popa
dec
loope
cmp
cs
add
cmps
xchg
inc
rol
inc
push
into
data16
(bad)
mov
rol
cs
mov
mov
add
inc
je
inc
inc
jbe
jp
add
fiadd
inc
sbb
into
sahf
ss
pop
inc
jp
jbe
cmp
outs
inc
popa
cwde
mov
call
loope
dec
cs
cmps
mov
sahf
dec
test
inc
jo
cmp
dec
scas
mov
and
add
push
dec
or
(bad)
data16
loope
shr
dec
jmp
push
dec
pusha
(bad)
(bad)
scas
adc
adc
or
in
into
and
int3
mov
inc
ret
jbe
adc
xor
push
mov
xchg
not
and
dec
sbb
add
ds
adc
ss
aaa
mov
or
push
mov
cmps
or
out
jg
push
xor
jo
xchg
push
(bad)
xchg
data16
push
dec
out
into
xchg
pop
add
inc
test
dec
xor
xor
push
push
enter
test
cdq
lods
mov
jg
bound
pop
sbb
mov
push
imul
ins
and
dec
push
dec
mov
xchg
push
xchg
or
adc
pop
xchg
jb
mov
out
je
cmp
dec
jb
or
shr
rcr
scas
push
aam
xor
xchg
and
mov
push
xchg
bound
sbb
inc
inc
dec
cs
and
neg
xchg
int3
ret
jbe
xor
xchg
pop
test
cmp
sub
dec
cmp
(bad)
push
es
cdq
sbb
cmps
push
out
imul
jbe
(bad)
jg
outs
xor
mov
jbe
add
add
mov
mov
es
xchg
or
pop
cs
cmp
je
xor
and
or
push
push
or
pop
ds
push
test
dec
paddd
sbb
rol
sahf
push
pop
sahf
mov
popa
add
iret
mov
xchg
adc
loope
xor
dec
and
cs
jle
dec
add
fcom
data16
xchg
inc
push
cmps
cmps
adc
sub
es
sbb
cmp
inc
or
shl
xchg
bound
or
(bad)
push
bound
(bad)
push
sbb
add
xchg
fisub
xor
(bad)
out
jp
mov
pop
bound
(bad)
dec
mov
pop
pop
ffreep
bound
outs
dec
push
test
pop
pop
mov
mov
sbb
enter
add
sub
and
xor
(bad)
mul
not
add
sahf
jae
xchg
loopne
jmp
adc
in
xchg
inc
test
cmp
scas
jmp
push
pop
cmp
or
mov
outs
(bad)
or
sbb
xchg
cmovb
es
or
add
xchg
add
cs
jo
outs
or
xchg
mul
push
add
call
scas
mov
mov
push
sahf
push
ds
pushf
or
push
xchg
and
scas
and
push
pusha
sbb
and
dec
enter
mov
(bad)
cs
push
fisub
xchg
dec
dec
ds
sbb
adc
pop
xchg
ret
mov
(bad)
push
jle
(bad)
fadd
test
pop
pop
idiv
sbb
(bad)
cmps
imul
inc
sbb
popa
add
sahf
nop
push
imul
xlat
push
cdq
(bad)
push
out
mov
outs
mul
sub
push
cwde
sbb
inc
pop
scas
push
inc
push
shl
cmps
test
mov
push
push
jbe
dec
push
(bad)
ins
sbb
push
ficom
sbb
mov
add
ficomp
mov
pop
and
xchg
add
inc
or
sahf
dec
add
xchg
push
jle
mov
pusha
sub
mov
(bad)
mov
or
dec
cmps
xor
push
dec
ret
fisub
inc
xor
data16
pusha
or
mov
inc
sahf
ss
dec
jecxz
push
not
fnstsw
push
inc
jle
push
cmp
js
inc
mov
jg
pop
add
outs
xchg
push
outs
mov
ss
lods
adc
mov
and
lods
push
add
imul
lea
xchg
inc
mov
int3
xchg
cmp
(bad)
push
push
pop
adc
add
ins
cmp
inc
cmp
lods
out
jle
and
pop
ds
cmp
sub
dec
pop
xchg
inc
adc
data16
xchg
sub
scas
xor
out
jno
mov
pop
es
jmp
and
dec
seta
mov
data16
push
mov
lods
jno
push
pop
cmp
fisub
xchg
push
sub
fsubrp
or
cwde
mov
(bad)
sub
add
mov
dec
inc
dec
xchg
inc
pop
(bad)
out
xchg
adc
mov
adc
out
push
retf
or
fadd
cs
sub
out
js
call
push
add
add
push
es
dec
pop
das
daa
dec
into
xchg
dec
push
dec
jmp
sub
cmp
inc
inc
scas
push
add
inc
jb
out
jle
mov
faddp
popa
mov
add
scas
lea
dec
or
mov
popa
mov
cmp
xor
jge
outs
push
inc
jge
inc
push
data16
add
loopne
ss
nop
cmp
ss
or
push
xor
enterw
add
add
sahf
and
add
popf
xchg
push
pop
sar
(bad)
sahf
lock
pop
or
bt
or
cmps
(bad)
rcl
ret
ds
neg
(bad)
inc
into
scas
adc
add
movs
pop
push
cmps
push
push
dec
jecxz
sub
xor
push
es
or
je
dec
cmp
ds
push
dec
push
inc
imul
cmp
jle
xor
mov
xlat
adc
shl
jbe
data16
(bad)
mov
mov
xchg
je
(bad)
loopne
sbb
adc
xor
push
scas
popa
push
sbb
outs
ds
inc
xchg
cmp
or
(bad)
aam
retf
jp
push
ficom
dec
push
add
and
(bad)
push
push
inc
cmc
mov
mov
daa
leave
push
pop
jg
jo
sub
ds
sbb
imul
jecxz
outs
dec
shl
adc
or
or
ds
inc
xor
or
push
(bad)
xchg
pop
sbb
das
push
outs
push
ss
arpl
push
jle
sbb
sahf
pop
leave
nop
pop
cmp
push
pop
inc
push
inc
add
(bad)
js
enter
(bad)
ins
rol
push
jmp
popa
inc
(bad)
jecxz
jmp
imul
xor
out
or
xor
es
push
(bad)
push
pop
push
ffree
dec
test
xor
movs
lds
mov
cmp
ror
push
jle
sahf
(bad)
and
sbb
jbe
mov
popw
dec
add
scas
jge
xchg
sbb
push
xor
outs
outs
loop
les
push
pop
adc
or
dec
call
daa
mov
loope
dec
cmp
out
pop
sub
(bad)
xchg
loop
add
ds
and
xchg
push
jbe
rcr
into
scas
xor
adc
add
push
mov
mov
jae
inc
add
mov
and
add
es
xor
mov
xchg
pusha
pop
jae
idiv
cmps
push
outs
js
jp
pop
xchg
sahf
jp
js
ds
jp
jp
out
xor
sbb
or
cs
xor
ds
pop
mov
into
ds
cwde
sbb
mov
jnp
ds
dec
sbb
stos
rcr
mov
push
fchs
and
cmps
arpl
inc
dec
dec
iret
test
add
and
or
inc
aaa
xchg
call
loope
xor
mov
scas
mov
push
mov
fisub
inc
xor
into
mov
mov
xor
and
pop
xchg
dec
xor
popa
gs
ss
fldenv
data16
add
xchg
enter
mov
aam
add
sahf
or
call
bound
inc
fisubr
sbb
cs
jnp
dec
out
jle
test
cmc
push
mov
shl
add
sbb
push
(bad)
leave
mov
push
inc
push
push
xor
and
ss
outs
cmp
or
push
out
xchg
adc
sbb
push
inc
out
push
dec
daa
push
pop
ss
test
nop
mov
inc
addr16
add
jbe
imul
inc
inc
jae
mov
cmps
jl
rol
push
(bad)
xchg
jno
or
daa
or
es
and
es
xor
mov
mov
pop
xor
mov
mov
cmp
push
adc
pusha
pop
mul
popa
or
pop
sbb
mov
xchg
jmp
push
pusha
fs
xor
aam
xor
jle
xchg
jno
push
sahf
retf
mov
(bad)
not
or
fisubr
outs
je
gs
sub
push
push
xchg
xor
cmp
dec
(bad)
and
jo
push
test
retf
push
or
push
outs
ds
test
xchg
cs
mov
mov
test
fidiv
and
mov
mov
mov
ret
and
(bad)
retf
pop
scas
push
iret
mov
push
es
daa
add
or
sub
xchg
sbb
and
push
xor
sbb
imul
cmps
adc
ja
movs
adc
or
in
push
jle
and
push
es
sbb
fimul
nop
es
push
inc
push
scas
jo
xchg
add
je
push
(bad)
mov
xchg
xchg
push
pop
xchg
push
push
(bad)
pop
push
xchg
push
(bad)
push
push
fistp
push
(bad)
mov
cmps
jle
pop
sbb
add
gs
pusha
outs
lahf
out
and
xchg
cdq
sar
xchg
lods
xchg
xor
push
push
fsubr
gs
data16
mov
lahf
arpl
mov
dec
sahf
sbb
push
add
adc
or
mov
xor
mov
pop
push
clc
sbb
push
xor
out
mov
sbb
sahf
cli
out
ds
mov
hlt
mov
add
inc
(bad)
cs
shl
data16
mov
xor
sub
pusha
(bad)
dec
clc
scas
xor
mov
xchg
or
outs
ret
pop
dec
ja
out
(bad)
popa
(bad)
dec
(bad)
adc
dec
adc
sub
or
sahf
sub
out
ja
ret
or
mov
adc
cmp
pavgb
xor
cmp
into
bound
inc
add
lods
ins
sub
jo
lock
es
mov
out
into
cwde
js
inc
mul
sbb
pop
jle
sbb
ss
daa
aam
push
sahf
pop
gs
cmp
pop
imul
xchg
cmp
cs
mov
jbe
out
daa
sbb
sbb
jbe
es
mov
cmp
push
mov
cs
inc
jmp
jno
jno
mov
dec
arpl
out
pop
adc
sub
push
xor
ss
fidivr
(bad)
(bad)
scas
idiv
push
add
adc
jp
pop
xor
fwait
inc
and
add
les
mov
mov
aam
inc
inc
fiadd
rol
and
push
push
(bad)
push
popa
in
popa
aas
cmps
push
add
es
or
mov
xchg
and
retf
dec
inc
dec
imul
add
push
ret
sbb
pop
push
xchg
pop
fstp
outs
dec
ins
or
sbb
sahf
outs
inc
push
cmps
dec
or
and
mov
out
dec
rol
not
into
inc
or
dec
add
push
inc
push
jbe
mov
sbb
push
jle
add
jle
test
aam
jle
and
push
xchg
out
or
xchg
pop
adc
rol
sub
inc
cs
push
inc
out
es
mov
ret
inc
cs
push
mov
fbstp
xchg
xor
or
mov
mov
div
xchg
gs
(bad)
xor
mov
xor
xchg
dec
loop
dec
bound
les
sahf
mov
mov
lahf
xor
movlps
pop
outs
jbe
dec
cwde
pop
mov
enter
jle
dec
add
pop
ror
dec
push
jecxz
call
dec
outs
sbb
neg
ficomp
add
out
pusha
fs
cmps
dec
call
scas
or
cmps
push
inc
dec
dec
sbb
pop
adc
dec
inc
icebp
sub
inc
and
mov
scas
xchg
xchg
shl
data16
push
loope
push
(bad)
xchg
push
push
jge
jo
mov
add
ss
push
fimul
cwde
lods
jbe
gs
and
outs
push
cwde
add
in
push
push
xchg
xchg
js
ss
and
push
push
jbe
(bad)
rol
or
mov
test
xchg
xchg
hlt
mov
fidivr
test
xor
push
mov
and
sub
push
shl
dec
push
scas
pop
xor
push
or
push
mov
push
imul
pop
xor
ror
cs
add
leave
js
inc
or
push
inc
mov
out
cmps
loope
iret
push
or
mov
push
out
jo
sub
dec
jbe
dec
test
cmpxchg8b
in
inc
mov
cmp
idiv
cwde
mov
push
adc
jle
rol
xchg
dec
pop
inc
das
shr
push
adc
sbb
or
hlt
dec
cs
fimul
inc
mov
inc
mov
or
out
div
test
pop
push
(bad)
cmps
dec
and
mov
ds
mov
daa
lock
out
cs
inc
inc
xor
es
push
add
cmps
imul
inc
push
imul
push
inc
and
pop
push
(bad)
push
sub
popf
or
push
push
pop
mov
gs
ficom
lea
dec
sahf
push
dec
inc
xchg
sbb
es
pop
inc
cmp
loope
daa
push
push
push
mov
and
or
(bad)
scas
push
mov
mov
xor
and
xchg
into
out
jbe
dec
outs
pop
pop
push
mov
(bad)
xchg
scas
mul
add
mov
scas
outs
dec
and
ficom
mov
or
test
jno
xchg
inc
(bad)
or
sub
mov
out
scas
inc
push
inc
add
jle
inc
or
inc
(bad)
outs
xchg
xor
pop
push
and
and
test
jle
xor
dec
dec
es
pop
jb
inc
pop
je
adc
pop
(bad)
push
es
push
pop
(bad)
out
push
test
je
mov
jecxz
popa
das
(bad)
push
(bad)
push
sub
pusha
push
(bad)
nop
es
data16
mov
inc
js
movs
data16
add
cmps
lods
adc
mov
push
outs
(bad)
popa
and
xchg
pop
cmp
ret
cmp
sub
mov
clc
add
cmps
es
pop
push
dec
add
dec
xchg
xor
or
(bad)
out
dec
push
or
out
and
sub
out
daa
mov
push
push
inc
or
xchg
jbe
es
rcr
or
fdivr
cmps
pusha
popa
retf
fiadd
or
add
dec
jle
stos
adc
add
es
adc
push
mov
add
adc
ss
neg
and
push
or
out
int3
and
inc
mov
mov
popa
daa
into
jbe
or
pop
adc
push
push
push
sbb
sbb
sub
mul
cmp
xor
jle
es
mov
jp
push
inc
push
test
push
popf
ins
push
inc
out
das
push
xchg
les
inc
mov
inc
pusha
cmps
hlt
outs
ss
out
fstp
arpl
scas
or
fiadd
scas
push
dec
push
data16
mov
shr
(bad)
cdq
into
cmp
xchg
mov
(bad)
leave
xchg
push
sahf
xor
mov
mov
mov
push
mov
cmps
into
push
sbb
push
jge
add
aad
(bad)
jbe
fidiv
push
cmp
push
inc
or
icebp
adc
push
out
(bad)
movs
mov
(bad)
(bad)
scas
out
and
dec
pop
ss
xchg
test
push
scas
aad
sbb
es
xchg
adc
pop
push
cmps
mov
rcr
(bad)
data16
push
into
push
div
into
nop
dec
xchg
out
xchg
mov
neg
adc
popf
out
mov
lods
add
out
movs
add
faddp
punpckhdq
scas
jle
add
adc
es
add
sub
out
ss
rcr
or
and
(bad)
push
ficomp
add
pop
es
jecxz
mov
popa
jecxz
enter
push
movs
movs
rol
xor
push
add
dec
cdq
pop
mov
es
jo
and
xor
or
inc
outs
inc
xchg
xchg
sub
adc
pop
pusha
hlt
adc
into
cmp
rcl
sahf
ucomiss
mov
ss
ficom
xchg
jmp
inc
ret
loopne
dec
mov
push
dec
push
into
pop
xchg
cmp
es
sbb
cmp
pop
lods
popf
and
push
inc
out
xchg
rol
xor
dec
push
es
cwde
(bad)
rcl
sub
sar
enter
dec
push
cs
jge
inc
not
xor
mov
pop
ds
inc
or
or
mov
test
jbe
fs
nop
inc
bound
dec
dec
push
adc
jbe
fimul
add
(bad)
xor
xchg
pop
lods
test
mov
xor
out
cmps
adc
mov
and
int
cmp
cwde
mov
outs
or
bound
add
sub
pop
js
fs
cwde
arpl
mov
dec
mov
push
mov
push
push
fcom
jmp
inc
cmps
test
pop
es
(bad)
(bad)
icebp
and
jbe
shl
daa
mov
push
not
mov
or
mov
ss
adc
xor
outs
outs
add
add
jle
mov
push
xor
jle
loop
mov
push
xchg
out
and
add
jbe
mov
data16
bound
jmp
fwait
aam
les
adc
sbb
(bad)
mov
mul
iret
add
mov
or
dec
cs
arpl
xor
sbb
xchg
push
inc
push
push
pushf
push
(bad)
pop
fimul
jp
or
(bad)
adc
push
inc
or
push
rcr
xchg
push
gs
jno
popa
lahf
push
sbb
push
dec
neg
and
sahf
(bad)
imul
imul
test
xchg
mov
cs
and
aaa
pusha
sahf
ds
popf
xchg
outs
jo
lods
test
xor
lds
inc
mov
add
mov
dec
sub
xchg
dec
mov
lock
shl
pop
addr16
mov
mov
mov
add
cmps
mov
mov
ins
jl
xor
enter
dec
inc
mov
mov
jbe
xchg
xchg
adc
mov
(bad)
inc
adc
mov
jmp
les
add
out
into
mul
push
xchg
push
ret
out
cs
aam
rcr
scas
xchg
movs
ret
retf
push
push
rcl
aam
test
ss
cmps
xchg
add
add
pusha
mov
sahf
push
(bad)
scas
xchg
scas
push
mov
mov
sahf
push
xchg
mov
sahf
jle
pop
jp
push
push
jb
and
imul
mov
lea
mov
or
xor
add
add
mov
mov
es
push
push
ds
mov
xor
and
dec
mov
mov
mul
and
add
cdq
cdq
mov
data16
add
in
pop
not
arpl
xor
dec
data16
or
popa
push
(bad)
test
xchg
xor
movs
push
push
(bad)
data16
mov
adc
xchg
push
and
sub
scas
es
mov
loopne
outs
or
dec
push
cs
or
(bad)
push
into
shl
daa
sbb
jle
cdq
xor
(bad)
push
loope
pop
mov
jne
es
into
ret
mov
push
cmp
dec
xor
cmp
cs
pop
mov
ror
dec
sahf
es
arpl
dec
push
(bad)
das
arpl
popa
push
ds
fidivr
mov
movs
or
lea
jmp
xchg
dec
pop
xchg
pushf
add
mov
dec
iret
and
push
push
cmp
jp
ficomp
imul
cmps
dec
outs
inc
and
xchg
mov
ds
outs
or
sbb
xchg
cmp
inc
inc
mov
es
xor
xchg
ins
lods
cmps
mov
(bad)
xchg
push
xchg
add
loop
ss
cmp
sahf
neg
gs
dec
inc
xchg
out
or
ss
or
loopne
push
xor
scas
dec
sbb
adc
sbb
mov
xchg
sahf
jo
scas
mov
push
add
(bad)
scas
inc
das
rol
stos
add
cs
ror
jo
bound
push
adc
(bad)
into
scas
xchg
dec
(bad)
neg
es
je
je
inc
es
bound
sub
clc
nop
add
mov
sar
imul
mov
jo
xchg
retf
dec
loopne
(bad)
jle
sub
cmps
popa
add
outs
data16
xor
mov
xor
outs
ficomp
ret
sbb
push
add
xchg
repnz
add
inc
mov
test
cmps
(bad)
xor
retf
out
push
faddp
xor
dec
mov
jmp
xor
into
mov
mov
js
add
mov
leave
sbb
js
es
test
(bad)
ss
dec
scas
inc
mov
test
pop
es
pop
outs
push
add
and
and
xchg
mov
xchg
ins
dec
jmp
xchg
xchg
fisub
jmp
in
into
add
nop
hlt
add
or
sar
dec
xchg
or
out
push
inc
sub
cmp
(bad)
test
pushf
out
dec
mov
mov
sub
(bad)
adc
bound
out
(bad)
es
inc
cmps
jle
sbb
mov
mov
xchg
xchg
(bad)
ret
xchg
into
xchg
jbe
add
fsub
(bad)
cmp
sahf
xor
or
cld
cmps
mov
and
push
sbb
test
cdq
fcom
sahf
idiv
mov
imul
dec
sub
add
mov
xchg
popa
xchg
mov
pushfw
ss
push
push
lea
cmp
mov
xor
sub
push
add
sub
(bad)
es
mov
loopne
data16
push
outs
add
sbb
sahf
mov
add
jo
push
cmps
(bad)
mov
dec
and
cmps
or
lods
inc
xchg
retf
or
inc
out
scas
xchg
or
scas
in
cs
add
or
jo
xchg
outs
add
inc
pop
out
idiv
inc
inc
or
push
mov
sbb
push
popa
test
ss
out
(bad)
push
mov
fisub
idiv
ficom
push
jne
out
push
pop
adc
sub
push
mov
adc
cs
icebp
push
and
out
add
mov
jo
mov
push
dec
out
dec
inc
dec
add
xor
pop
inc
ds
cmp
adc
cs
sub
ins
xchg
jno
add
(bad)
fidivr
pop
push
daa
add
or
cmp
xor
jbe
inc
movs
push
sahf
cs
xchg
ss
mov
jp
into
dec
jle
add
or
sahf
dec
inc
jl
sahf
(bad)
pop
push
(bad)
or
jo
xchg
dec
push
inc
mov
adc
cwde
and
fimul
sub
popa
pusha
leave
scas
(bad)
into
inc
lods
daa
or
dec
ficom
inc
pop
jbe
pop
rol
ss
xchg
out
jne
and
adc
dec
mov
pushf
and
jle
dec
adc
(bad)
dec
and
xchg
pop
push
(bad)
into
xor
sbb
inc
push
(bad)
sub
jb
out
xchg
dec
push
inc
push
cmp
inc
fstp
out
data16
push
mov
das
push
inc
push
push
dec
das
inc
sbb
inc
sub
inc
cs
xchg
ret
ss
out
repz
gs
into
adc
sub
ds
push
mov
jbe
fwait
push
cwde
and
adc
ss
add
cmps
dec
mov
test
dec
mov
inc
sbb
shl
mov
xlat
push
retf
add
aam
pusha
xchg
xchg
pop
(bad)
data16
dec
es
sub
cmps
stos
outs
mov
push
sbb
push
sub
push
cmp
scas
les
inc
pop
ds
cmp
outs
bound
outs
mov
(bad)
cdq
jb
add
mov
cmp
jo
xchg
add
retf
movs
pusha
loop
dec
imul
scas
mov
sub
and
push
mov
test
xchg
push
sahf
and
ret
pop
es
mov
adc
sbb
xchg
jbe
or
mov
dec
add
pop
sbb
bound
dec
inc
inc
inc
imul
sbb
or
loopne
jno
out
imul
sub
xor
cmp
push
adc
push
test
daa
(bad)
xor
out
nop
inc
xchg
push
movs
and
add
jo
xor
add
out
(bad)
jge
jp
js
mov
ret
cwde
pop
inc
jle
push
jge
dec
daa
adc
mov
sahf
jle
xor
inc
inc
inc
push
ss
sbb
xor
mov
test
add
cmps
imul
pusha
cmps
(bad)
nop
xor
sbb
outs
xchg
and
mov
mov
test
cmps
pop
sbb
and
sub
daa
test
out
imul
push
add
cmps
popa
xor
(bad)
xor
xchg
jge
into
jno
xor
inc
xor
(bad)
(bad)
xor
into
(bad)
or
shl
add
dec
mov
xor
sbb
mov
jle
gs
add
dec
pop
int
cmp
(bad)
daa
add
cmps
scas
(bad)
inc
push
imul
scas
cwde
cmp
(bad)
inc
adc
push
out
popa
or
inc
(bad)
dec
mov
xchg
sahf
and
and
sbb
add
cmp
pop
add
push
or
pushf
add
pop
or
nop
inc
jbe
cmp
inc
pop
inc
(bad)
push
push
cmp
pop
fidivr
mov
call
pop
cs
inc
das
push
jbe
add
mov
movs
push
(bad)
push
push
jno
jge
cmp
and
(bad)
push
sahf
pop
sbb
mul
and
pop
sahf
push
out
call
bound
jno
xchg
xor
(bad)
jle
jle
dec
sbb
jbe
mov
xchg
dec
push
pushf
or
sub
lods
add
add
inc
and
pop
push
mov
fidiv
xor
outs
dec
push
or
(bad)
mov
push
inc
jo
out
push
push
dec
or
xchg
push
fiadd
rol
xchg
or
mov
jle
scas
xor
(bad)
(bad)
mov
xor
cmps
push
adc
inc
xchg
outs
data16
into
add
xchg
(bad)
ficomp
sbb
sahf
dec
push
xchg
dec
dec
fimul
test
sub
lahf
mov
(bad)
pop
add
dec
adc
push
sub
dec
inc
mov
out
xor
out
daa
add
inc
scas
add
add
pop
xor
fdivr
cmp
pop
data16
mov
aam
jp
push
(bad)
nop
mov
movs
mov
test
cmp
mov
push
sbb
mov
outs
or
fiadd
add
call
or
mov
or
ret
das
outs
mov
fwait
sbb
test
test
fs
pop
pop
jecxz
xchg
push
sbb
mul
lea
leave
inc
out
fnstcw
inc
jbe
mov
outs
adc
sub
push
out
adc
ret
outs
xor
outs
call
test
sub
addr16
sbb
adc
sbb
(bad)
mov
and
popa
popa
inc
loope
xchg
mov
cdq
or
cdq
mov
sbb
cmps
out
popa
fs
and
xchg
inc
(bad)
test
add
push
cmp
or
mov
lea
mov
movs
xor
mov
popa
(bad)
mov
shl
into
xchg
push
call
xchg
and
sub
inc
dec
(bad)
ds
sbb
push
outs
sub
push
mov
sahf
xor
push
rcl
lods
dec
xor
inc
data16
div
jle
dec
mov
jae
push
es
dec
sbb
inc
and
add
or
pop
les
outs
xor
aam
push
xor
inc
les
inc
cmps
fdivr
jne
pop
mov
(bad)
cmp
clc
push
cs
push
cmp
push
data16
pusha
test
adc
dec
mov
push
push
push
popa
pusha
sar
test
pushf
push
pop
inc
ja
push
dec
cmp
fdivr
push
xchg
add
xor
mov
push
(bad)
retf
ss
(bad)
movs
outs
inc
(bad)
push
push
dec
adc
mov
cmps
xor
test
test
imul
pop
imul
add
add
das
push
test
lods
mov
into
and
outs
lods
out
outs
sbb
dec
pop
into
push
cmps
or
pop
mov
mov
inc
xchg
call
push
out
add
xchg
(bad)
neg
xchg
rol
cmp
out
adc
adc
cmp
xor
ss
rcr
rcr
adc
ficomp
ror
les
rol
push
ret
xchg
out
das
ss
xor
lahf
pop
adc
rol
or
push
sahf
inc
pop
push
cmp
or
push
mov
cs
dec
xchg
cmps
outs
push
xor
cdq
adc
out
scas
lods
inc
sbb
data16
(bad)
dec
adc
popa
push
mov
sbb
sbb
cs
or
push
scas
mov
add
cmps
push
jmp
out
cmp
out
mov
push
jno
(bad)
dec
mov
mov
inc
dec
out
inc
inc
sub
mov
(bad)
cmps
loope
dec
push
xchg
inc
mov
ss
xor
cmp
ds
and
push
out
out
jle
shl
push
xchg
mov
dec
adc
pop
ss
adc
xor
lahf
push
loop
dec
push
xchg
dec
add
xchg
pop
add
and
cmps
bound
inc
out
push
fst
pop
push
pop
mov
push
mov
sbb
fldenv
xchg
(bad)
gs
push
mov
adc
jbe
adc
mov
push
add
outs
fs
mov
add
data16
xchg
add
fisttp
into
dec
bound
or
pop
sbb
sbb
dec
or
scas
mov
jbe
pushf
add
xchg
mov
(bad)
inc
inc
push
mov
pop
jo
add
mov
ds
addr16
imul
out
push
pop
lea
lods
movs
xor
and
cmp
mov
jbe
mov
mov
inc
dec
scas
push
xor
movs
xor
pop
pop
dec
mov
lock
sahf
push
jp
jp
xchg
sub
xchg
pushf
test
gs
sub
push
pop
dec
scas
mov
xchg
add
(bad)
(bad)
push
mov
test
outs
movs
add
cmp
sbb
mov
popa
mov
es
cs
and
sub
loopne
mov
or
mov
and
xor
sahf
pop
jp
adc
jb
xchg
inc
adc
(bad)
adc
ds
xor
mov
cmps
mov
add
ss
and
mov
xchg
pushf
sub
call
ss
sub
or
push
push
icebp
es
cmps
xchg
push
stos
add
push
test
xor
scas
(bad)
push
cmp
cmp
neg
mov
icebp
nop
pop
pop
xor
xor
mov
cmps
nop
shr
jle
cli
sub
and
cmps
dec
or
inc
or
movs
pop
inc
jbe
mov
(bad)
inc
(bad)
adc
mov
cmps
jle
dec
dec
adc
mov
scas
xor
xor
(bad)
mov
sbb
adc
push
test
es
out
push
push
mov
xchg
adc
push
(bad)
push
or
or
or
mov
cs
(bad)
xor
sbb
scas
ins
mov
cs
outs
adc
inc
data16
push
test
add
push
scas
push
push
dec
inc
sahf
push
(bad)
test
mov
push
adc
xchg
cmps
push
hlt
hlt
sbb
(bad)
bound
adc
icebp
xchg
fiadd
xchg
or
jne
add
or
or
inc
push
adc
inc
xor
push
into
pop
fcom
dec
jae
ja
inc
(bad)
mov
push
div
and
push
ds
inc
movs
or
push
push
jbe
dec
mov
inc
data16
ret
jp
push
push
inc
mov
or
fdiv
push
inc
loop
xchg
call
pusha
add
mov
ins
mov
arpl
xchg
push
out
imul
jle
adc
adc
and
scas
mov
pop
cs
xchg
pop
xor
imul
push
dec
add
xor
xchg
arpl
ret
xchg
ss
push
push
xor
xor
push
fcomp
inc
js
not
icebp
nop
push
and
add
jno
pop
into
fs
popa
aam
ss
into
mov
xchg
bound
(bad)
out
dec
and
jbe
ss
dec
dec
push
loop
les
nop
loop
(bad)
xchg
dec
jp
jp
push
test
push
inc
mov
movs
outs
jge
(bad)
pop
and
sub
scas
cmps
push
mov
test
add
inc
leave
ins
fcomp
fidivr
into
hlt
and
es
dec
xor
sbb
(bad)
jbe
jnp
push
out
push
mov
out
(bad)
fmulp
mov
dec
ins
mov
das
or
sub
into
retf
imul
in
iret
test
mov
jbe
arpl
push
sbb
add
mov
dec
jmp
jo
pop
or
adc
rcr
not
mov
inc
div
arpl
call
inc
adc
adc
mov
dec
push
scas
cs
inc
sub
mov
jmp
fmulp
xchg
scas
(bad)
add
je
movs
push
mov
aam
icebp
push
ficomp
or
fwait
outs
xchg
push
mov
cmps
inc
adc
arpl
cmp
ins
inc
cmp
adc
inc
push
rcl
dec
jbe
pop
rcl
jge
add
cmp
data16
(bad)
dec
ds
or
ret
out
mov
rol
add
push
(bad)
aam
and
cs
pop
sbb
not
aad
aaa
mov
push
dec
dec
popa
out
xchg
into
and
(bad)
sub
addr16
mov
data16
push
adc
mov
(bad)
pop
pop
or
inc
adc
push
push
out
push
xchg
push
out
mov
ret
ss
xchg
nop
add
scas
push
movs
outs
test
sahf
inc
popa
dec
gs
loopne
(bad)
ss
mov
mov
xor
push
push
cs
out
mov
bound
sbb
and
sahf
add
cmp
sbb
add
movs
push
cmps
push
mov
pop
and
jne
xchg
fiadd
or
cmc
xor
xchg
xor
es
movs
into
push
sahf
xchg
xor
shl
gs
iret
dec
pop
ds
dec
ss
mov
xchg
sub
jg
add
and
add
(bad)
add
xchg
sbb
mov
xchg
popa
push
ss
sub
addr16
dec
pop
mov
out
mov
es
mov
adc
(bad)
xchg
sbb
add
add
add
dec
pop
add
mov
fdivrp
sahf
jno
dec
mov
add
sahf
push
pop
pop
out
sbb
es
push
lds
inc
(bad)
aaa
pop
jle
mov
mov
push
idiv
fdiv
dec
inc
xchg
pop
mov
xor
push
xchg
adc
xor
mov
inc
push
ret
or
fisubr
pusha
cmp
loope
and
fbstp
push
bound
rcr
lods
pusha
mov
dec
pushf
sbb
ss
or
mov
mov
(bad)
movs
push
dec
push
push
cmps
call
add
ds
aad
xor
data16
and
rcr
ret
push
aam
mov
into
adc
inc
pop
push
shr
inc
push
in
push
data16
stos
jle
or
pop
mov
outs
outs
cs
es
jne
jne
(bad)
dec
pop
not
pop
cmps
and
es
add
pop
jbe
push
jne
xor
scas
mov
movs
inc
mov
hlt
add
dec
(bad)
push
scas
push
jmp
dec
call
loopne
dec
and
lods
or
fs
xor
jno
adc
add
loope
or
test
cmps
dec
pop
push
loop
push
sub
mov
sbb
cmps
push
sbb
push
inc
jmp
inc
sbb
cs
adc
mov
out
add
sahf
(bad)
mov
pop
push
push
bound
cmps
pop
dec
xchg
pop
and
pop
add
jne
push
push
inc
jle
lock
cmps
mov
sub
cmp
lods
mov
ret
jo
jae
add
mul
mov
ror
not
xchg
and
adc
inc
cs
xchg
mov
pop
aam
xchg
xchg
lods
lea
popa
dec
lea
push
xlat
dec
loopne
mov
dec
inc
push
add
(bad)
es
push
inc
jmp
push
inc
mov
je
into
inc
xchg
pop
dec
cmc
push
fimul
jb
add
(bad)
leave
inc
mov
addr16
mov
cs
sub
loope
push
ss
and
or
mov
inc
jno
jo
xchg
adc
out
push
scas
enter
outs
out
bndldx
xchg
nop
add
out
inc
mov
movs
rcl
(bad)
jbe
loopne
pusha
dec
xchg
cmp
retf
mov
ret
sahf
or
inc
and
add
into
scas
inc
(bad)
ins
mov
es
xchg
inc
(bad)
push
xchg
pop
daa
jmp
jle
lds
add
push
xchg
sahf
ds
pop
push
jle
inc
lods
int3
inc
sub
sahf
rcl
outs
sub
out
test
retf
adc
fld
out
(bad)
cdq
les
or
es
push
dec
es
push
inc
mov
add
push
das
shr
xchg
sbb
push
pop
cmps
jbe
mov
outs
push
scas
push
sar
xor
outs
fsub
jge
push
push
(bad)
mov
imul
cmps
push
cwde
dec
pop
push
push
inc
les
xchg
push
xchg
mov
into
xor
pop
les
mov
fidiv
scas
cli
into
mov
or
cmp
out
inc
into
pop
sbb
sub
or
push
scas
inc
call
gs
push
inc
scas
mul
sub
add
mov
cs
data16
nop
or
ins
push
ss
(bad)
or
xchg
mov
add
inc
inc
jle
sbb
mov
inc
into
div
inc
sbb
push
xor
inc
inc
cmp
inc
mov
inc
data16
arpl
out
mov
retf
add
dec
xor
es
xor
mov
jle
cs
or
sbb
push
cmps
adc
sahf
(bad)
dec
imul
cmps
cs
inc
mov
push
outs
push
test
sub
adc
lea
add
(bad)
daa
mov
cs
xor
and
push
and
push
scas
push
add
xor
ficomp
mov
popa
mov
dec
dec
or
cdq
ss
and
xchg
xchg
cmp
add
pop
sbb
push
(bad)
out
jle
lods
inc
mov
pop
mov
(bad)
test
popa
es
inc
sbb
push
mul
movs
es
je
hlt
xchg
(bad)
jbe
arpl
add
dec
ins
test
dec
adc
push
ss
adc
or
xchg
xchg
pop
dec
push
cdq
(bad)
adc
xor
scas
cmp
jle
xor
adc
push
ss
ror
sbb
mov
xchg
fmul
sahf
outs
dec
pop
adc
xchg
jo
push
sbb
scas
pop
push
pop
add
inc
call
cwde
(bad)
hlt
push
dec
push
inc
inc
jne
xor
mov
icebp
xchg
dec
(bad)
loopne
mov
adc
int3
add
cs
adc
add
sub
cwde
sub
add
or
mov
test
add
pop
adc
inc
sub
xchg
call
jo
nop
icebp
push
dec
fimul
jbe
or
jle
leave
pop
mov
jbe
or
es
add
or
jle
pop
sbb
dec
sahf
xchg
sbb
(bad)
out
sub
and
outs
push
push
pop
mov
xchg
push
inc
(bad)
inc
inc
rcr
mov
loope
dec
pusha
xchg
jno
popa
sub
jle
and
or
mov
cmp
xchg
xchg
push
inc
das
push
push
imul
loopne
loopne
jle
mov
xchg
or
lahf
mov
(bad)
xor
jo
mov
mov
dec
idiv
(bad)
scas
out
data16
mov
and
mov
inc
xor
cdq
push
xor
fisubr
sar
sbb
outs
cs
add
popa
ss
(bad)
sbb
add
add
mov
jb
mov
(bad)
mov
into
xchg
sbb
test
and
pusha
(bad)
ss
fs
add
test
ds
jnp
push
add
dec
mov
dec
fidiv
or
adc
dec
dec
jle
imul
adc
lock
sub
(bad)
xor
ret
jle
add
out
push
mov
cs
xchg
les
(bad)
ds
cs
push
das
pop
dec
(bad)
mul
pop
leave
inc
cmp
or
pusha
add
in
sub
ins
cmp
test
add
add
xor
push
dec
push
sub
or
out
push
add
outs
out
mov
int3
js
push
data16
nop
sbb
retf
data16
or
ds
pusha
cmp
push
test
dec
cmps
dec
(bad)
adc
outs
(bad)
push
and
out
add
movs
jb
(bad)
push
jbe
arpl
(bad)
test
push
jle
push
sbb
rol
ret
push
push
into
and
sahf
xchg
inc
xor
xchg
push
es
enter
les
popa
cmps
out
(bad)
adc
(bad)
or
rcr
jbe
rol
push
imul
push
and
mov
xchg
(bad)
or
jb
jbe
adc
pop
push
pop
push
test
push
inc
fisub
inc
nop
es
bound
jmp
or
xchg
lods
xchg
or
dec
sbb
nop
push
mov
dec
push
or
xor
sub
inc
adc
push
inc
test
sbb
push
ins
push
gs
loope
imul
adc
and
jbe
add
pop
fiadd
and
mov
test
sub
inc
push
xchg
and
rol
dec
(bad)
out
pop
pop
cmp
(bad)
pop
adc
push
jbe
cmp
inc
out
arpl
fcomp
xor
add
add
inc
inc
push
cs
je
hlt
inc
ss
and
scas
popaw
inc
or
xor
inc
and
pop
push
xor
icebp
mov
ds
js
mov
inc
(bad)
dec
lods
mov
mov
scas
out
sbb
ss
jbe
cwde
push
test
xor
das
imul
pushf
inc
mov
xchg
rcr
pop
out
push
push
rcr
xchg
jge
or
pop
xchg
or
jecxz
push
dec
arpl
add
pop
(bad)
sahf
sbb
pop
mov
ss
aas
cs
mov
nop
fadd
callw
inc
xchg
xor
gs
sub
push
xor
or
push
add
dec
xor
adc
sbb
add
inc
push
push
xchg
add
xchg
cmps
jbe
adc
adc
inc
pop
sbb
repnz
jbe
dec
cmp
sbb
cmp
gs
xchg
enter
or
ss
pop
inc
dec
mov
outs
adc
imul
and
adc
cmps
cmps
inc
ror
mov
xchg
xor
mov
xchg
mov
sub
hlt
out
pop
outs
out
pop
sbb
lods
out
(bad)
add
dec
stos
ret
cmps
push
ds
jmp
add
add
mov
pop
sahf
or
xchg
xor
pop
push
xor
(bad)
scas
out
es
ror
dec
inc
popa
jno
jo
pop
jle
into
push
pop
or
inc
pop
sahf
es
cmps
dec
ss
data16
and
mov
les
outs
out
adc
inc
jle
push
daa
dec
data16
mov
or
push
(bad)
into
add
dec
mov
and
push
cs
pop
sahf
adc
push
push
mov
outs
sbb
add
jle
ret
inc
inc
out
cmp
dec
(bad)
call
add
sahf
dec
xchg
(bad)
rol
jle
add
dec
nop
inc
mov
mov
movs
and
ss
push
push
dec
sbb
lea
out
mov
aad
mov
sub
xchg
mov
lods
out
xchg
xchg
mov
mov
xor
call
adc
(bad)
push
push
mov
rcr
lock
dec
scas
push
pop
dec
fisub
dec
add
xchg
push
or
mov
cs
push
mov
gs
jle
pop
xchg
cmps
inc
xchg
enterw
(bad)
test
and
ss
sbb
cmps
aam
jle
test
pop
add
outs
rcr
push
xchg
add
pusha
or
dec
inc
pusha
inc
ret
test
into
inc
and
rol
mov
loope
xchg
push
js
fidiv
(bad)
out
jle
sub
cmps
scas
add
imul
jo
into
xor
or
(bad)
retf
xlat
and
pop
and
push
pushf
and
sbb
out
adc
push
and
outs
lea
push
add
inc
rdtsc
cmc
mov
ss
pop
sub
bound
dec
push
push
adc
mov
xor
mov
xor
inc
add
sub
leavew
push
movs
push
(bad)
popa
jle
adc
sub
pop
pop
(bad)
adc
inc
inc
push
add
inc
aaa
out
ss
inc
inc
add
sub
push
push
or
sub
inc
cmps
in
fild
inc
sbb
ds
mov
and
es
data16
mov
mov
add
xchg
movs
push
or
xchg
test
adc
cmps
push
dec
mov
cmp
ss
push
outs
push
test
(bad)
mov
xchg
daa
jo
push
addr16
inc
jbe
popa
inc
lea
into
(bad)
add
ins
bound
fisubr
sbb
xchg
loope
es
inc
push
add
add
mov
adc
add
pop
adc
cmps
outs
into
popa
mov
outs
je
ret
push
nop
xor
pop
mov
xchg
(bad)
sahf
xchg
sub
inc
cmp
jbe
adc
inc
data16
sbb
data16
ss
xor
cmp
dec
cs
add
push
pop
inc
push
or
xor
(bad)
pusha
ror
test
inc
cmp
cmps
inc
out
aam
mov
out
cmp
mov
mov
es
and
or
dec
push
fidiv
pop
(bad)
sub
adc
cmp
mov
rcl
cmps
scas
or
jbe
dec
in
cmp
cmp
jle
es
test
es
retf
mov
adc
pop
dec
xchg
ds
xchg
adc
cmps
xchg
(bad)
data16
pop
jp
xor
xchg
icebp
sbb
into
out
xor
push
push
lock
cmps
push
push
xor
xor
jbe
xchg
dec
ins
cwde
pop
jbe
icebp
push
je
add
test
das
pop
inc
out
fld
add
sahf
(bad)
xor
vaddss
push
xor
mov
inc
scas
retf
js
inc
inc
mov
fimul
inc
xchg
add
xchg
(bad)
pusha
adc
cmp
pop
dec
out
inc
push
lods
mov
mov
lods
xchg
xor
ror
add
sahf
mov
adc
add
(bad)
retf
fimul
push
and
sahf
add
dec
lea
lods
test
popa
out
popa
out
add
or
inc
xchg
sub
inc
inc
or
es
lds
jl
push
pushf
cmp
test
idiv
sbb
adc
ds
xchg
dec
iret
test
out
add
cmp
inc
xor
add
js
shl
or
sub
bound
add
mov
jo
push
add
xchg
inc
call
js
sbb
push
add
push
rol
int3
mov
es
add
icebp
xchg
and
icebp
xor
je
dec
imul
mov
adc
dec
arpl
rcl
loopne
push
loopne
mov
adc
cmp
popa
adc
popa
add
inc
sbb
or
sbb
jmp
add
pusha
sbb
leave
nop
cdq
js
test
dec
clc
fsubr
or
adc
pusha
icebp
jne
mov
rcl
test
js
add
sub
pop
(bad)
fmul
jp
adc
sbb
xchg
adc
and
movs
add
fmul
push
call
icebp
or
pusha
cwde
lods
dec
sub
cmp
test
adc
rol
dec
pop
pop
outs
jecxz
or
cmp
jo
mov
mov
loopne
push
cwde
xchg
repnz
add
pop
test
adc
xor
lock
js
in
push
ins
pop
pop
into
dec
xor
add
nop
jno
adc
ss
inc
or
push
pop
xchg
lods
outs
xor
clc
imul
sbb
mov
ins
loopne
enter
push
daa
loopne
xor
sbb
mov
mov
call
arpl
mov
inc
aaa
mov
push
xor
mov
les
and
int3
and
leave
gs
movs
and
fadd
pusha
xor
cmp
dec
add
mov
rol
and
arpl
jo
push
push
mov
sub
sub
adc
nop
mov
movs
test
add
or
loope
cmp
shl
adc
mov
or
cmp
dec
or
rcl
add
or
rcl
inc
pop
and
xchg
lock
fdiv
mov
push
add
cwde
pop
rcr
test
inc
pop
add
js
push
add
xor
add
aad
add
call
popa
sub
xchg
(bad)
and
sbb
jb
jo
loopne
dec
jbe
add
neg
xor
mov
mov
nop
adc
inc
xchg
stos
and
push
add
pushf
add
adc
sub
rol
loopne
mov
dec
mov
clc
jp
lock
add
adc
or
imul
or
pusha
or
mov
xchg
sub
loopne
ret
pop
xchg
and
adc
test
push
mov
adc
ret
mov
and
cmc
inc
jl
scas
inc
push
ss
add
cmps
data16
ins
mov
adc
dec
add
pusha
clc
leave
inc
jmp
push
ins
call
push
mov
inc
pop
push
fcomp
pop
pop
mov
cmp
loope
add
loopne
adc
mov
pop
and
leave
mov
xor
sbb
sub
pop
cmp
lock
leave
and
add
add
jp
sub
cwde
or
sar
fidiv
in
mov
sub
or
xor
add
add
cmp
jmp
pop
fdiv
ss
jmp
xchg
int3
shl
inc
mov
ror
inc
add
nop
test
outs
adc
pop
sbb
test
es
adc
inc
jmp
pop
dec
sub
in
xchg
sub
add
dec
sahf
inc
call
sbb
cwde
cmp
xchg
test
cwde
ror
fld
mov
cmp
dec
enter
inc
test
data16
xor
sub
cmp
popa
xadd
lock
loopne
call
xor
push
sbb
adc
inc
add
mov
loopne
dec
movs
and
rcr
sar
fiadd
sahf
movs
mov
sub
pop
add
je
adc
add
xor
adc
add
xchg
jo
jo
xor
and
sbb
mov
js
scas
or
dec
dec
test
xchg
pop
cmps
xlat
jo
inc
js
mov
mov
enter
shl
dec
dec
aaa
nop
mov
cmp
dec
(bad)
loopne
xchg
push
push
add
dec
or
ret
push
sub
add
mov
xchg
gs
adc
ins
xchg
jne
pusha
xchg
push
or
clc
imul
bound
lock
sahf
pusha
rcr
pusha
dec
test
out
jb
add
pop
(bad)
mov
xor
hlt
xor
loope
clc
dec
inc
rol
rol
sub
and
or
gs
bound
cwde
cs
push
jmp
push
adc
pusha
push
loopne
adc
nop
cmps
add
push
mov
fcom
push
mov
adc
and
add
inc
inc
lock
enter
cmp
sub
push
mov
mov
mov
ss
scas
or
inc
shl
test
pop
inc
lock
addr16
sbb
adc
sbb
in
cwde
jl
out
adc
xor
inc
dec
pusha
push
dec
mov
lods
jae
mov
sub
jno
adc
sub
push
and
push
sbb
xor
cmp
push
clc
ins
mov
rol
js
jo
jo
dec
xchg
(bad)
js
xchg
fcom
sbb
jp
cmp
mov
enter
js
sub
pusha
sub
pushf
and
mov
cwde
pop
les
and
push
xor
test
dec
adc
loopne
pop
push
daa
push
dec
arpl
call
test
mov
cmp
pushf
gs
pop
or
shl
shl
pusha
dec
sbb
dec
sub
arpl
lods
add
enter
or
js
dec
add
fsubr
loopne
sar
push
mov
xchg
or
mov
jo
add
and
adc
enter
pop
cmp
inc
fucomi
rol
push
bound
mov
sbb
out
push
into
in
lock
jo
mov
mov
inc
jmp
add
ret
push
and
mov
rcl
jecxz
ror
xchg
and
call
fadd
pop
mov
sbb
dec
ins
jne
pusha
inc
pop
je
jmp
loopne
push
add
adc
or
nop
pop
add
movs
xor
mov
adc
sbb
das
add
inc
mov
mov
push
test
mov
sbb
mov
push
and
test
pop
fist
sbb
sub
jge
data16
das
jmp
jmp
and
jmp
or
sbb
out
sbb
test
outs
inc
dec
mov
inc
xchg
rcr
ror
and
inc
sub
pop
test
adc
test
nop
jle
or
or
add
push
add
es
pusha
pop
js
sahf
push
sbb
adc
lock
pop
mov
or
dec
xor
pop
and
mov
stos
adc
cdq
jmp
xor
sbb
or
sbb
mov
xor
inc
mov
movs
mov
add
fadd
sbb
cmp
add
jo
adc
mov
pop
and
sahf
jle
inc
and
clc
data16
sbb
xor
fidivr
daa
inc
sub
xor
shl
cs
jo
inc
cmp
sbb
imul
sub
je
fcom
xchg
test
cmp
pop
mov
push
dec
mov
push
mov
mov
adc
push
add
(bad)
jo
push
and
xor
or
dec
nop
(bad)
call
sbb
mov
aad
inc
js
shl
and
sbb
into
mov
sub
and
call
push
lds
js
js
out
xor
jo
jo
es
mov
mov
and
cmc
ss
mov
sbb
int3
push
(bad)
call
or
cmp
mov
jbe
push
dec
inc
sbb
adc
add
lock
inc
cs
sub
nop
xor
sbb
add
test
gs
inc
js
xchg
and
sbb
rcl
push
dec
outs
push
das
mov
sbb
sub
mov
push
inc
sub
test
push
arpl
add
xor
cmp
cmp
dec
clc
dec
jbe
mov
and
mov
mov
mov
dec
push
shr
dec
lods
sub
loopne
xchg
movs
shl
cmp
xchg
mov
fdiv
scas
mov
scas
ss
nop
adc
and
cmc
add
(bad)
or
js
sub
rcr
xor
push
mov
dec
mov
push
xor
dec
cmp
add
cmps
mov
nop
mov
aam
xor
and
adc
inc
shr
or
push
test
mov
dec
cwde
cwde
sub
pusha
bound
inc
cmp
test
shr
lea
mov
rcl
inc
loopne
push
cmp
sub
dec
and
and
ds
and
push
adc
rol
add
cmps
fimul
or
sbb
xchg
aam
retf
clc
loopne
add
cmp
dec
push
jmp
(bad)
scas
inc
xchg
mov
loopne
pop
out
dec
adc
sbb
or
mov
sbb
rcl
addr16
xor
dec
inc
fist
push
(bad)
push
xchg
and
sbb
dec
sub
es
pop
out
aam
cs
pusha
dec
out
mov
dec
rol
xor
and
loopne
les
cmp
or
sub
sub
push
retf
mov
mov
inc
test
sahf
aam
pusha
pop
pusha
push
sbb
mov
into
dec
out
or
pop
jo
xor
inc
push
xor
cwde
jb
push
loopne
lock
jo
and
inc
mov
mov
jne
xor
or
fsub
lods
xchg
inc
xor
cmp
rol
push
dec
and
ret
sbb
pop
adc
fcomp
dec
dec
sbb
pop
stos
or
lock
movs
out
xor
dec
push
shl
mov
fcom
dec
xchg
xor
adc
lock
(bad)
xor
test
test
sahf
sub
inc
xor
xor
jo
inc
movs
push
shl
nop
cmp
add
ror
sbb
sar
or
fidivr
push
nop
mov
nop
add
pop
add
sbb
and
push
aam
push
push
inc
push
out
retf
test
xchg
sub
dec
adc
and
pop
add
push
push
popa
or
test
pop
test
neg
test
or
mov
adc
imul
loopne
jle
adc
js
cmp
xor
sar
dec
dec
enter
shl
push
xchg
pop
adc
nop
inc
(bad)
xchg
push
jp
push
xor
jp
pop
inc
or
pop
sbb
cwde
xchg
sbb
cwde
scas
mov
ror
pop
inc
push
pop
ja
pop
cmp
cmp
add
add
test
outs
sub
add
inc
sbb
or
nop
imul
nop
js
xchg
add
adc
outs
and
sbb
xchg
enter
nop
sbb
imul
movs
push
push
inc
test
add
or
nop
cs
fidiv
add
add
and
ret
rcr
test
fcom
cmp
pop
xor
add
rcl
icebp
push
xchg
mov
int3
and
lea
into
mov
in
stos
enter
sub
jo
or
jle
mov
je
adc
(bad)
mov
dec
enter
mov
adc
mov
out
adc
inc
not
es
mov
(bad)
xchg
add
loopne
push
push
es
push
and
dec
jbe
or
sbb
xchg
fmul
scas
ret
xchg
test
popa
ins
or
out
or
dec
loopne
push
mov
outs
loope
pusha
cmp
push
cdq
cmp
ins
clc
mov
lods
int3
enter
mov
out
push
push
cwde
enter
adc
mov
mov
lods
cwde
pusha
xor
out
mov
push
mov
jge
movs
pop
loope
dec
nop
(bad)
scas
inc
push
push
mov
sbb
daa
inc
test
and
inc
add
dec
xor
cmp
jge
dec
jmp
jb
add
dec
push
outs
or
mov
add
enter
js
mov
js
sub
xchg
fiadd
ficomp
sbb
sub
ins
push
test
adc
sbb
add
imul
js
xchg
arpl
push
loopne
pop
xchg
add
jae
rol
lea
pop
jo
sbb
rcl
xor
ror
enter
and
rcr
leave
adc
les
adc
or
sbb
ror
xchg
sbb
dec
rol
ret
lea
and
out
nop
pop
push
sub
jge
int
adc
dec
jmp
jle
cmp
mov
xchg
pop
(bad)
gs
rol
add
inc
adc
xor
inc
pop
push
xor
xor
or
xchg
and
inc
or
adc
sbb
sbb
mov
sbb
or
inc
mov
das
test
jo
mov
push
dec
mov
or
adc
dec
xchg
jle
mov
inc
or
inc
sub
adc
push
mov
add
outs
cmps
mov
rcr
xchg
jb
clc
pop
adc
mov
aaa
and
pop
dec
or
inc
dec
inc
jmp
pop
shl
push
sbb
nop
push
bound
jo
and
data16
lods
pusha
mov
add
and
pusha
mov
mov
pusha
cs
mov
test
push
inc
loopne
jecxz
jo
adc
xchg
popa
adc
test
inc
mov
js
xchg
jbe
xchg
inc
push
loopne
leave
jp
inc
outs
jmp
push
pusha
xor
ss
sahf
sub
js
mov
ins
cdq
add
add
mov
inc
bound
jmp
nop
in
fs
mov
adc
ror
inc
sub
es
ficom
fsub
dec
ds
gs
ds
imul
or
fcom
mov
ss
inc
adc
and
and
add
xchg
inc
sahf
test
xor
and
mov
push
adc
loope
push
add
dec
cmp
xchg
add
or
data16
push
add
and
nop
cmp
popa
clc
mov
mov
outs
dec
and
push
(bad)
lock
push
lock
jp
pop
pop
je
in
loope
push
loopne
pop
cmp
jbe
mov
pop
sub
or
or
sbb
xor
push
mov
add
movs
xor
inc
push
sub
pop
cmps
adc
and
mov
test
pop
ror
add
push
sbb
push
jbe
ss
js
and
inc
push
adc
and
add
xchg
fs
test
ret
test
pusha
leave
imul
adc
dec
mov
test
or
clc
push
mov
dec
das
adc
and
pop
pop
test
test
sahf
ins
pop
add
push
xor
imul
aam
arpl
pop
add
js
and
out
xor
pop
lds
mov
xor
xchg
xchg
push
into
test
add
xor
call
add
mov
mov
cmps
dec
xor
sub
add
cwde
push
push
test
or
daa
test
xchg
stos
xchg
add
dec
dec
pop
jbe
test
jne
mov
or
sub
test
test
cmp
and
or
adc
out
sbb
call
xchg
js
mov
(bad)
adc
js
idiv
jo
dec
mov
fwait
xchg
sbb
or
mov
mov
ins
mov
xchg
js
xchg
jle
pop
push
inc
cs
inc
mov
out
cwde
jge
(bad)
cdq
add
data16
mov
lock
xchg
jb
add
out
cmp
test
test
or
or
mov
dec
jle
(bad)
es
(bad)
pop
mov
loopne
loop
dec
ds
dec
inc
sub
inc
shr
loopne
call
push
pop
push
(bad)
and
ror
inc
pusha
inc
pusha
enter
or
jno
call
ret
xchg
and
jne
inc
es
movs
jbe
push
(bad)
ja
adc
push
push
out
rol
push
xor
inc
sbb
push
addr16
jp
test
outs
sub
dec
cmp
add
ror
dec
inc
add
(bad)
cmp
rol
adc
jbe
push
cmps
add
aam
mov
pop
sbb
mov
and
mov
movs
(bad)
aad
(bad)
ins
ds
and
lods
xchg
push
mov
scas
xor
push
xchg
or
hlt
cmps
mov
mov
push
dec
inc
(bad)
cmp
push
adc
lock
sbb
jb
cs
pop
rol
mul
push
bound
or
pop
imul
sub
ds
sub
imul
jo
add
inc
retf
imul
pusha
pusha
mov
sub
or
sbb
cs
or
or
nop
int3
push
jae
mov
loopne
or
mov
and
loopne
rol
data16
and
xchg
pop
inc
mov
sub
sbb
js
popf
imul
sbb
cmp
and
jmp
fimul
data16
hlt
and
jno
(bad)
jbe
pop
not
xor
and
xchg
or
mov
pop
push
aaa
mov
and
fsubr
es
jne
add
mov
adc
retf
add
push
cmp
sbb
daa
sub
dec
pop
sbb
rcl
lods
mov
inc
cs
test
xor
xchg
jne
in
push
pushf
popa
sub
fcom
or
sbb
daa
or
cmps
add
shl
fidivr
cmp
enter
or
pop
loopne
int3
adc
rol
xchg
dec
cmp
cmps
xchg
add
xchg
jo
inc
mov
mov
add
and
push
adc
sub
call
sub
or
dec
mov
dec
push
arpl
pop
nop
jo
sbb
push
fisub
inc
adc
dec
outs
and
movlps
nop
pusha
scas
jecxz
and
test
and
fmul
es
sbb
add
mov
retf
add
pop
lock
hlt
nop
loopne
cmp
xchg
push
or
ds
cwde
push
imul
jns
push
data16
mov
push
out
nop
ficom
pop
(bad)
adc
push
adc
mov
sbb
push
pusha
cmp
adc
ret
adc
dec
ror
mov
test
push
dec
or
xchg
dec
(bad)
call
mov
adc
stos
xchg
add
cmp
cs
adc
add
out
dec
and
pop
dec
jbe
push
outs
add
call
cmp
cmp
push
enter
sbb
pop
and
sbb
sub
add
imul
mul
es
pop
adc
xsha1
cmps
into
pop
test
xchg
jle
xchg
es
mov
data16
mov
or
adc
mov
pop
push
pop
xchg
adc
call
fcom
rcr
rol
cmps
inc
les
clc
inc
or
cdq
pop
cmp
arpl
cdq
xor
add
add
add
rcl
cmp
ret
mov
inc
push
ds
popa
or
inc
mov
sahf
nop
jbe
sub
xchg
data16
(bad)
and
xchg
and
lea
cmp
xor
js
pusha
imul
arpl
dec
push
mov
xor
jle
jo
gs
inc
inc
xor
inc
lods
adc
xor
ss
or
adc
inc
lods
add
push
(bad)
gs
inc
lods
daa
movs
jo
or
or
or
loopne
jmp
jo
xor
push
or
out
iret
sbb
jmp
or
push
sahf
or
mov
js
js
cwde
and
push
push
push
cmp
inc
sub
mov
and
sbb
or
adc
inc
jmp
popa
xchg
(bad)
sbb
push
jo
xor
inc
xchg
pop
jo
and
push
cmp
inc
mov
push
lock
call
cmp
loopne
xor
sub
sub
xor
adc
add
add
add
cmp
add
fiadd
inc
sub
ficomp
arpl
inc
cwde
adc
pusha
ins
sbb
or
dec
cmp
pop
lods
ins
js
jo
dec
mov
pop
and
add
shr
sub
inc
push
lods
call
enter
out
dec
pop
push
adc
adc
cdq
add
mov
in
mov
pop
inc
pop
cmps
mov
ret
jo
inc
in
add
pop
sar
lock
(bad)
nop
rcl
or
xor
dec
mov
pop
dec
or
adc
mov
push
js
ret
xchg
add
xlat
pop
sbb
jne
pop
add
xchg
adc
mov
or
dec
cmp
pusha
(bad)
cmp
ret
mov
sbb
hlt
nop
aad
call
retf
xchg
mov
test
outs
mov
sub
sahf
enter
add
mov
mov
adc
not
and
add
add
mov
dec
jo
sahf
call
sbb
and
adc
mov
cmps
cwde
dec
mul
push
xchg
mov
push
xchg
xchg
adc
add
push
mov
adc
sub
rcr
loopne
xor
sbb
or
rcl
sbb
add
(bad)
mov
mov
mov
xchg
mov
data16
dec
jp
cmp
jo
sbb
jbe
mov
or
shl
outs
jo
sbb
lea
mov
sub
inc
inc
rol
inc
add
xor
mov
pop
xchg
dec
jno
sub
xchg
jo
and
dec
or
inc
sar
jne
shl
iret
cmp
mov
mov
or
mov
or
jmp
clc
popa
imul
xor
lock
inc
and
pop
loopne
das
dec
cmps
xor
mov
mov
and
sbb
inc
gs
rol
ret
(bad)
js
rol
in
adc
clc
test
rcr
push
retf
sbb
rcr
xor
dec
jle
ret
lods
push
test
mov
popa
pop
sahf
dec
xchg
arpl
push
call
mov
cmps
inc
js
adc
lock
adc
jbe
push
into
shl
leave
pop
sbb
dec
dec
jne
js
test
push
fstp
rcr
and
or
sbb
add
and
push
mov
cmps
push
xchg
mov
push
nop
add
sahf
inc
ss
sar
xor
mov
mov
sub
cmps
ins
(bad)
fsubr
add
dec
push
inc
push
cli
push
lock
rcr
push
pop
add
test
cmp
mov
push
sbb
mov
ret
pop
and
dec
les
jmp
xor
mov
sbb
pop
sahf
jp
inc
pop
cmps
inc
cmp
and
mov
(bad)
push
call
pop
loopne
and
cmp
mov
loopne
cld
mov
je
rol
dec
jo
js
or
add
shl
pushf
test
sub
sbb
adc
dec
push
icebp
adc
dec
xor
pop
outs
cmp
inc
cmps
ds
inc
popa
mov
iret
cli
in
mov
jo
and
pushf
inc
push
fcom
pop
ss
outs
add
fs
pop
addr16
xor
xor
mov
aam
shl
fmul
mov
or
cwde
inc
sub
or
and
xor
mov
mov
add
sbb
push
inc
scas
aaa
xchg
add
lock
add
xchg
jo
add
test
js
mov
pop
or
lea
loopne
push
out
rcr
xchg
inc
mov
and
test
add
dec
push
je
xchg
(bad)
push
sub
and
out
xor
xor
test
adc
xor
add
in
loope
xor
scas
add
enter
sbb
adc
lods
arpl
cmps
inc
bound
dec
call
pop
iret
and
inc
lock
leave
enter
pop
(bad)
pusha
sbb
daa
inc
cmp
loopne
loope
and
popa
sub
and
sub
and
(bad)
push
rol
mov
dec
push
push
bound
jbe
imul
les
es
jecxz
or
(bad)
and
dec
or
je
jo
dec
jle
rcl
scas
add
sbb
out
mov
fwait
call
sbb
fisubr
outs
jle
and
add
lods
and
sub
and
pop
cmp
mov
scas
pop
jne
enter
nop
jp
rcr
adc
pop
test
pop
sbb
scas
outs
and
mov
mov
out
popf
addr16
js
jle
bound
jmp
outs
adc
sbb
test
test
sar
push
shr
(bad)
add
sub
sub
lock
pusha
inc
ret
dec
and
xchg
enter
mov
lds
pop
loopne
and
push
dec
push
dec
push
or
push
or
(bad)
adc
xchg
out
cs
dec
call
and
sbb
sbb
iret
mov
push
and
add
inc
leave
push
sub
int3
ins
jb
out
add
xor
push
or
jo
and
gs
push
lock
js
ins
jo
loopne
push
push
add
nop
push
inc
data16
ds
xchg
push
cs
xor
test
dec
out
or
in
lods
ja
outs
add
cmp
enter
pop
cmp
jno
ds
or
jle
jle
push
rcr
inc
push
sahf
push
and
push
enter
add
mov
or
push
nop
adc
sahf
dec
(bad)
lock
cmps
inc
push
and
xchg
or
mov
push
or
das
daa
sub
add
or
rcl
cld
push
pop
loopne
ror
(bad)
adc
mov
dec
les
dec
fstp
enter
sub
je
popa
sub
or
mov
addr16
xchg
xchg
pop
enter
test
sub
add
call
sbb
mov
push
cmps
mov
jmp
xor
test
and
les
outs
inc
sbb
sub
xchg
cmp
or
aaa
and
ins
xchg
and
ss
mov
xchg
inc
sahf
pusha
aaa
rcl
pop
pop
sub
inc
jo
mov
mov
inc
fist
rol
xchg
jo
(bad)
adc
mov
cmp
(bad)
sub
enter
xor
fsub
pop
or
adc
sbb
adc
mov
mov
sbb
cmp
inc
push
mov
lock
imul
popa
cmp
xchg
dec
xchg
jmp
inc
ret
push
jo
pop
js
clc
into
into
cmp
out
icebp
and
xor
and
push
xchg
lock
mov
ret
push
push
mov
add
lods
test
push
push
pop
push
dec
pop
cdq
sbb
test
add
jo
cmp
test
rol
test
cwde
ror
adc
dec
je
add
sbb
sbb
outs
outs
push
adc
sbb
push
pop
loope
shr
test
pushf
or
add
add
pop
cdq
faddp
jno
in
push
out
adc
push
rcl
add
sbb
pop
pop
lock
pop
pop
mov
mov
mov
and
xchg
sub
mov
movs
mov
cs
xchg
adc
ficom
lea
fadd
mov
push
cmp
sbb
imul
js
ins
sub
add
push
into
push
sbb
add
sbb
daa
sahf
div
(bad)
push
inc
inc
nop
loopne
fdivr
pop
push
fidiv
xchg
jo
test
je
in
pusha
push
nop
sub
cmps
aam
add
cs
lods
dec
mov
out
inc
jp
mov
cmp
jno
adc
xor
(bad)
popa
dec
loop
add
mov
mov
push
push
xor
add
cmp
ds
sahf
adc
and
push
dec
mov
scas
push
pushf
clc
mov
add
outs
scas
popf
or
jge
push
rol
dec
(bad)
mov
adc
nop
mov
loopne
push
xor
ret
call
cmps
jno
sar
add
test
dec
jl
ficomp
loopne
push
ins
neg
sbb
dec
inc
xchg
faddp
or
cmp
add
mov
mov
push
inc
jne
add
push
sub
loop
fsub
movs
mov
(bad)
pusha
dec
or
xchg
fdiv
add
sbb
popf
into
push
xor
nop
cmps
xchg
xor
scas
(bad)
out
or
mov
out
pop
sahf
nop
retf
stc
(bad)
loopne
mov
pop
pop
mov
mov
inc
jb
enter
les
pop
sbb
(bad)
fdiv
cs
es
adc
mov
mov
fadd
dec
mov
inc
or
into
xchg
and
add
and
push
js
push
mov
push
and
ror
push
cdq
push
cdq
cmp
xchg
or
cmps
xor
push
test
xor
and
and
scas
adc
pushf
stc
cmps
mov
dec
and
jp
das
push
add
dec
xchg
ror
loope
jbe
xchg
push
xor
cwde
push
mov
arpl
lock
ret
xchg
sbb
push
cs
das
add
xchg
int3
xchg
in
or
dec
(bad)
fisub
dec
clc
xor
xor
ror
or
(bad)
je
mov
outs
cmp
loopne
mov
mov
inc
jnp
ret
jno
ss
sub
test
test
inc
adc
adc
lock
sbb
(bad)
loope
pop
add
les
and
dec
nop
ins
push
sub
aam
fldcw
jle
mov
inc
adc
pusha
add
adc
or
push
and
ficom
jo
adc
ror
data16
xor
push
or
pop
mov
sub
shl
cmps
jno
sbb
out
and
mov
mov
pusha
add
mov
call
popa
fsubr
jbe
xor
jno
inc
inc
inc
dec
cwde
sahf
ds
lods
gs
and
adc
jge
push
add
mov
imul
and
mov
sbb
retf
xchg
js
or
je
fisubr
add
out
xor
popa
push
add
lods
push
movs
mov
or
or
lods
loopne
pusha
enter
dec
xor
cwde
mov
sbb
push
ds
clc
mov
push
lods
pop
push
xor
inc
jo
dec
xor
push
cmps
xor
sbb
outs
(bad)
call
je
or
jmp
loopne
push
loopne
mov
out
and
mov
enter
cmp
xchg
push
push
add
adc
push
pop
or
ret
mov
les
or
or
adc
push
add
(bad)
clc
sbb
js
ins
pop
dec
add
xor
cmp
push
dec
enter
sub
mov
pushf
inc
or
sub
inc
cs
mov
mov
lock
outs
or
push
push
sub
mov
das
dec
mov
es
cmp
mov
inc
rcr
cmps
add
jb
enter
pop
nop
outs
jle
add
inc
push
xchg
and
push
cmp
or
adc
cmp
hlt
mov
push
movs
xor
ss
pusha
adc
and
mov
sbb
dec
jg
mov
rcr
out
pop
(bad)
pop
pop
xchg
rol
dec
add
sahf
and
push
mov
add
popa
xor
mov
jno
pusha
push
xchg
imul
push
sub
mov
out
out
mov
dec
mov
ds
call
fist
xchg
dec
dec
rcr
xchg
adc
push
cmp
cwde
push
sub
nop
jo
mov
inc
cmp
cmps
xchg
add
mov
sbb
neg
push
mov
dec
sahf
push
(bad)
xor
test
dec
ss
into
xor
jmp
push
push
cmp
les
cmp
push
mov
adc
cmp
mov
lock
cmps
or
add
pusha
hlt
xchg
lock
leave
mov
inc
pop
mov
dec
push
movs
dec
nop
xchg
pop
cwde
rol
int
pusha
jle
push
out
mov
(bad)
xor
ficomp
fiadd
mov
je
xor
inc
(bad)
mov
jge
pusha
rol
nop
push
mov
call
loope
dec
inc
inc
sbb
adc
sbb
mov
fistp
inc
into
loope
js
xor
retf
outs
and
(bad)
dec
sub
adc
xchg
inc
xchg
adc
scas
int
ret
clc
dec
dec
lea
push
dec
mov
sbb
pop
inc
cli
and
dec
cmp
xor
jo
lock
test
es
pop
or
xor
xor
jbe
mov
dec
mov
(bad)
mov
xor
pop
add
pop
popf
scas
push
push
sahf
out
or
mov
adc
imul
test
xchg
cmp
and
mov
cmc
aam
dec
scas
inc
jo
add
xor
mov
inc
or
outs
(bad)
nop
push
cmp
or
mov
cs
movs
add
mov
dec
ins
push
push
xchg
dec
push
or
or
mov
or
adc
mov
cwde
nop
xor
push
cmps
add
enter
fidivr
push
(bad)
shr
js
or
mov
add
add
popa
add
test
cdq
push
cmp
mov
mov
xor
sub
loope
add
lock
xor
mov
add
add
sub
lods
push
neg
je
outs
adc
(bad)
loopne
push
(bad)
test
ret
xor
jno
sub
xchg
sbb
clc
xchg
dec
addr16
pop
sub
aad
ret
inc
icebp
adc
dec
out
(bad)
jbe
or
mov
or
enter
sub
cwde
inc
sbb
pop
sahf
inc
sbb
push
adc
inc
js
and
into
out
dec
inc
dec
loope
xor
mov
das
or
add
mov
das
dec
push
shl
jno
stos
mov
ds
add
test
dec
adc
xor
push
xor
inc
test
data16
fcom
test
inc
sbb
loopne
inc
and
dec
and
and
xchg
ret
pop
push
fdivr
sar
pop
dec
push
mov
push
push
inc
jge
mov
jo
sbb
push
and
push
int3
adc
sar
push
push
xchg
jmp
ss
push
add
xchg
clc
adc
test
adc
sbb
cmp
mov
inc
das
xor
add
or
into
ds
cwde
jno
pushf
into
es
jbe
xchg
icebp
sub
inc
(bad)
test
mov
and
arpl
mov
xor
push
add
ds
mov
pop
mov
sbb
push
cmps
js
das
loope
jge
xor
pop
mov
mov
xchg
push
ficom
fsub
inc
daa
or
push
push
adc
xchg
sub
sbb
inc
test
xchg
inc
push
mov
into
inc
enter
imul
cli
es
or
fsubr
and
push
call
xor
pop
out
xor
or
xchg
jle
add
add
cmp
fisub
xor
inc
add
mov
mov
jo
push
add
jle
push
es
or
push
ret
pop
xor
movs
mov
push
dec
pop
dec
nop
adc
adc
popa
rcr
into
nop
or
pop
push
mov
(bad)
or
pop
or
popf
test
pop
inc
enter
sbb
add
push
pop
outs
lea
sbb
dec
or
or
mov
es
test
mov
xchg
push
xchg
add
inc
outs
push
inc
or
cmp
push
dec
dec
xchg
les
mov
push
xor
add
mov
sahf
push
fdivp
mov
or
mov
and
cmp
add
lods
add
or
and
(bad)
mov
pop
fcomp
nop
xchg
add
pop
cmps
adc
mov
or
pop
push
dec
sbb
cs
push
dec
or
retf
and
inc
pop
xchg
xor
push
xchg
popa
or
mov
pusha
(bad)
test
dec
pop
or
add
(bad)
xor
inc
imul
sbb
pop
es
cmp
shl
pushw
or
xor
dec
gs
push
cmps
enter
jne
add
cs
and
adc
pop
aam
push
push
sub
sub
pop
enter
popf
jo
and
and
sbb
pusha
push
inc
mov
inc
sbb
inc
fdiv
movs
push
pop
pop
dec
cmps
xor
ss
push
fcom
test
cmc
cmp
into
out
fs
mov
nop
dec
pop
sub
(bad)
push
add
mov
out
lock
(bad)
mov
push
pusha
sub
ins
cwde
(bad)
push
lea
sbb
mov
mov
js
push
cmps
add
fadd
push
cmp
adc
xchg
add
and
loopne
imul
xor
mov
cmp
test
mov
inc
xchg
hlt
mov
adc
xchg
pop
sbb
xor
or
imul
call
mov
mov
dec
add
test
inc
pop
jo
pop
add
cmp
sbb
mov
add
inc
add
push
or
retf
mov
stc
and
ja
cmp
stos
inc
mov
xchg
fs
nop
dec
es
loopne
mov
cmp
dec
xor
push
mov
adc
nop
push
dec
loope
outs
sahf
and
push
sbb
mov
and
mov
push
push
push
es
inc
dec
sbb
adc
cwde
dec
sbb
cmps
mov
imul
ins
pusha
add
push
and
leave
push
cmp
data16
and
mov
xor
call
xchg
jo
cmp
ror
xchg
test
sbb
mov
dec
(bad)
or
mov
and
dec
call
js
cmps
rcl
lea
out
adc
loopne
sub
shl
push
into
add
add
push
scas
pop
or
mov
adc
mov
movs
xor
push
jmp
push
xor
or
pop
push
xor
sub
test
pusha
or
test
loope
test
fmul
jecxz
call
(bad)
jmp
jmp
ret
rcl
inc
(bad)
retf
sbb
dec
or
jo
push
adc
push
jo
mov
push
and
(bad)
sbb
sub
push
mov
push
or
pop
push
sbb
imul
cmp
push
mov
mov
or
scas
ret
xor
into
jle
cmp
push
adc
cdq
fiadd
pusha
dec
cmp
mov
and
mov
push
cwde
or
mov
or
xor
xor
into
fsubr
xchg
jge
out
xchg
xor
adc
aad
mov
cwde
push
aam
aam
test
cwde
movs
xchg
(bad)
or
ss
dec
or
xchg
or
add
cmps
push
push
inc
push
push
xchg
rol
jp
cmp
out
jle
adc
push
sbb
sbb
adc
xchg
push
xor
scas
(bad)
xor
inc
das
sub
ins
mov
mov
data16
push
push
pusha
js
sub
cmp
cmp
cmps
dec
xchg
push
stos
rcl
or
dec
out
add
inc
dec
pusha
or
add
mov
xchg
data16
fmul
fiadd
push
(bad)
and
rcr
or
cmp
pop
adc
stos
cmp
sahf
xor
rcl
dec
cmp
sbb
jo
add
inc
cmps
sahf
mov
adc
sbb
daa
mov
add
out
push
inc
(bad)
rcr
(bad)
xchg
mov
pop
push
aas
jbe
add
mov
pop
push
push
sub
cmps
out
mov
xor
mov
sub
xchg
cmp
test
es
and
pop
add
cmps
cmps
push
(bad)
pusha
dec
ret
ds
mov
jae
test
pop
push
sbb
add
push
cmp
sbb
mov
hlt
loopne
dec
and
cmp
out
(bad)
adc
leave
lea
jbe
out
dec
jo
bound
xor
push
orps
(bad)
push
xchg
xchg
xchg
push
mov
mov
sahf
jge
bound
and
sbb
cmps
ror
pop
fisub
or
mov
nop
int3
xchg
arpl
mov
add
add
cmp
sub
mov
cmp
jmp
pop
loopne
into
push
inc
jns
inc
inc
mov
pop
outs
mov
stos
add
test
test
scas
fisub
shl
inc
cmp
push
inc
push
adc
nop
popa
inc
push
cmp
pop
sub
mul
sbb
rol
fldenv
js
and
lea
test
nop
add
xor
pop
cmps
dec
xchg
cmps
data16
xchg
push
pop
dec
push
add
mov
mov
mov
adc
jle
nop
sbb
sub
out
into
add
and
bound
imul
and
jo
adc
neg
outs
lods
and
test
pushaw
add
adc
xchg
(bad)
pushf
adc
dec
mov
pop
adc
or
xchg
adc
jp
jo
sub
popa
add
mov
mov
add
xchg
rol
push
inc
sub
je
fiadd
(bad)
mov
xchg
mov
pop
daa
or
pop
cwde
imul
cmp
test
cmps
push
and
dec
jbe
lea
push
outs
dec
loopne
test
push
cs
xchg
mov
cmp
pop
sbb
ret
inc
add
gs
shl
push
add
push
jle
mov
data16
jae
ds
add
inc
mov
mov
inc
push
pop
xchg
jp
pop
pop
add
rcl
lods
push
(bad)
pop
inc
sub
outs
scas
test
push
or
fsubr
or
pushf
test
jge
movs
push
js
sub
sahf
ss
inc
imul
push
and
push
or
or
sahf
pop
mov
enter
dec
push
mov
stos
out
push
push
scas
push
ds
or
inc
push
mov
scas
push
out
mov
add
mov
sbb
or
fmul
mov
imul
sbb
hlt
or
out
mov
rcl
mov
push
or
pop
inc
push
and
dec
js
mov
sbb
xchg
jno
shl
gs
jb
inc
cmp
mov
into
inc
jmp
sahf
or
inc
pusha
cmp
lock
and
inc
jmp
dec
mov
adc
add
out
into
and
fiadd
xchg
pop
push
push
ret
pop
jno
mov
cwde
xlat
add
push
xor
jle
stos
and
daa
inc
push
xchg
push
test
es
add
and
xchg
rcr
xor
dec
mov
add
sbb
mov
adc
mov
rcr
mov
pop
and
xor
data16
rol
movs
dec
data16
dec
movs
push
jle
into
nop
(bad)
xor
push
test
and
jp
inc
dec
(bad)
pop
inc
mov
popa
dec
retf
fild
add
cli
adc
aam
fcom
test
nop
mov
out
jbe
mov
xchg
sbb
clc
xor
inc
add
sub
dec
shl
sar
je
(bad)
call
push
(bad)
rol
pop
adc
jl
xor
mov
aam
(bad)
push
push
push
mov
mov
and
inc
call
or
xor
pop
sub
mov
movs
push
nop
shl
jbe
test
mov
lock
mov
mov
rol
add
push
mov
neg
jo
jle
into
neg
pushf
and
popa
and
lock
or
or
mov
fmul
xchg
sbb
jle
xor
add
(bad)
sahf
and
(bad)
rcl
pushf
jle
mov
and
xchg
and
repnz
sbb
pop
adc
jp
out
mov
mov
pop
or
ins
pusha
into
cmp
mov
jle
dec
js
adc
xchg
cmp
shl
rcl
xor
shl
rcr
xchg
inc
or
pop
sbb
loope
jo
pusha
sub
xor
push
push
pop
adc
or
xor
and
js
add
xor
sbb
inc
sub
loope
inc
outs
add
js
sbb
sbb
mov
and
push
mov
dec
inc
add
jp
cmp
pusha
push
movs
(bad)
rcl
es
jne
inc
xchg
or
add
jae
imul
jbe
cmps
in
and
pusha
leave
out
jo
add
dec
add
inc
lock
cmp
add
imul
ins
mov
sbb
push
mov
inc
inc
scas
inc
aam
pushf
ds
sahf
(bad)
call
xchg
test
dec
add
es
shl
retf
mov
mov
and
or
add
xchg
movs
lock
or
jle
and
hlt
jo
outs
add
mov
cmp
loopne
mov
ins
sub
push
(bad)
sar
add
enter
rol
jle
(bad)
cdq
cmp
out
mov
push
js
dec
mov
dec
or
dec
sbb
cmp
add
rcr
jle
das
sbb
ss
imul
xchg
lods
cmp
mov
inc
mov
xchg
mul
sub
and
ss
fwait
jmp
push
add
add
fisub
aam
push
(bad)
sub
sub
adc
cmp
or
mov
push
outs
jle
addr16
scas
mov
cmp
cs
mov
outs
ds
push
inc
cmp
loope
pop
ss
jmp
mov
push
and
xchg
dec
sbb
or
xor
rol
cs
(bad)
popa
add
cwde
push
jbe
iret
inc
cmp
and
push
mov
test
rcl
dec
shl
inc
inc
jo
mov
hlt
ror
es
mov
mov
push
jle
jb
hlt
and
or
xchg
loopne
or
push
enter
movs
add
jle
or
sbb
sbb
pop
rcr
jbe
inc
cmp
pop
add
(bad)
ret
jle
(bad)
rcl
or
xor
sub
pusha
inc
nop
loopne
leave
leave
sbb
(bad)
fsubr
push
jo
and
not
adc
add
push
pop
mov
mov
mov
(bad)
jo
push
mov
es
inc
add
rol
icebp
mov
rol
push
cmp
sahf
inc
cmc
adc
add
add
jo
adc
mov
push
outs
mov
dec
ds
(bad)
cwde
add
push
and
or
pusha
dec
jno
jo
mov
sbb
add
sbb
or
cmp
mov
out
sbb
sbb
add
call
add
push
arpl
fisttp
popa
dec
loopne
call
jbe
lods
and
add
sbb
(bad)
and
dec
xchg
test
dec
mov
sub
jb
and
push
(bad)
rcl
sub
les
push
inc
jbe
or
loopne
data16
rcr
loopne
sbb
cmc
and
jb
scas
fmul
pop
mov
adc
push
cwde
push
inc
inc
call
ret
js
bswap
add
inc
pop
fadd
jno
mov
push
data16
mov
rcl
push
cmp
mov
lods
push
push
xor
adc
movs
and
popa
test
sub
sahf
xor
shl
and
sahf
mov
test
arpl
add
dec
or
add
jo
pusha
sbb
nop
mov
sub
pop
adc
pusha
sub
scas
pop
pop
test
test
test
sbb
push
(bad)
fimul
daa
lea
or
jo
pop
clc
sub
jbe
pop
dec
loopne
mov
sbb
push
inc
nop
mov
sub
test
push
xor
mov
sbb
(bad)
jbe
data16
sub
push
xlat
mov
sbb
call
and
imul
cmp
mov
jle
or
scas
adc
push
sbb
mov
arpl
js
push
push
push
and
mov
cmp
xor
push
push
js
sub
push
inc
ss
or
push
pushw
es
xor
rcr
pop
mov
adc
and
and
aam
push
es
add
js
mov
jno
fild
push
inc
sbb
sbb
xor
push
sub
js
cmp
mov
fadd
mov
sbb
dec
jecxz
ret
sub
add
inc
mov
xor
add
adc
inc
dec
das
inc
(bad)
shr
sahf
dec
or
or
adc
bound
mov
rcr
push
pop
stos
add
jbe
loop
xchg
adc
enter
adc
scas
xchg
sub
clc
dec
mov
cmps
xor
mov
dec
loopne
or
inc
xor
daa
or
mov
sbb
xor
scas
and
jno
sbb
cmc
mov
xchg
adc
add
push
mov
adc
cwde
push
inc
push
add
mov
pop
mov
mov
mov
ret
jo
out
scas
dec
pop
add
push
push
data16
and
push
mov
mov
mov
mov
pop
add
or
or
lea
sub
lods
sub
jo
outs
fsubrp
or
push
jno
sbb
pop
and
rol
add
push
and
lock
mov
xchg
pop
inc
bound
movs
xchg
push
(bad)
into
push
xor
sbb
cwde
jbe
or
ds
inc
shl
and
mov
test
xor
mov
ss
shr
cmps
inc
cs
or
inc
push
pop
sub
(bad)
(bad)
les
push
sbb
sub
mov
or
push
pop
(bad)
movs
sub
ss
jo
iret
xor
cmp
pusha
rcl
add
add
test
mov
inc
push
cmps
mov
adc
push
add
cmp
pop
add
mov
addr16
push
ss
xchg
push
pop
push
loopne
jecxz
inc
push
inc
dec
(bad)
xor
push
fcmovb
js
dec
test
mov
(bad)
add
push
and
js
into
popa
inc
cwde
nop
rcr
or
xor
jle
mov
sub
push
xor
cmps
sub
loop
pop
neg
out
add
mov
pop
(bad)
inc
inc
add
into
(bad)
dec
call
add
adc
sahf
mov
cwde
cs
adc
adc
(bad)
mov
xchg
push
mov
(bad)
pusha
scas
inc
rol
(bad)
mov
xor
jmp
call
cmp
pop
js
jge
popa
sahf
aam
add
push
jno
icebp
aam
out
lds
xor
outs
or
push
sub
mov
test
pop
enter
dec
mov
daa
mov
push
cmps
sub
or
mov
mov
add
popa
fsub
hlt
mov
xor
mov
addr16
push
into
ss
cwde
mov
into
push
push
xor
adc
xchg
inc
nop
fstp
les
(bad)
push
dec
and
add
add
xor
add
mov
js
jle
or
add
jbe
retf
gs
push
inc
fdiv
jbe
mov
xchg
nop
lods
xor
popa
imul
out
scas
add
inc
ficom
jo
mov
jne
xor
enter
sub
lock
dec
lods
mov
push
and
enter
cli
or
mov
mov
push
inc
and
adc
enter
inc
js
cmp
jnp
aam
jbe
and
inc
ficom
js
add
mov
retf
inc
data16
sbb
push
into
add
cmc
mov
mov
inc
popf
add
jmp
inc
cmp
cdq
outs
mov
fidivr
sub
cmp
jo
add
cmc
xor
adc
or
sbb
inc
sub
js
cmp
pop
mov
mov
cs
das
dec
lock
pop
popa
xchg
into
mov
imul
movs
jb
push
mov
mov
pusha
mov
add
push
add
shl
mov
ss
mov
loopne
or
inc
ins
pushf
ins
cwde
cmps
(bad)
clc
rcr
out
mov
jo
push
mov
and
and
(bad)
(bad)
and
or
and
xor
xchg
test
dec
and
push
cmp
inc
(bad)
out
push
xor
adc
imul
dec
push
xor
sub
cdq
xor
sbb
adc
cli
scas
inc
enter
cmp
sbb
xchg
jno
or
stc
outs
xchg
xor
(bad)
pop
inc
movs
hlt
imul
push
cmps
mov
and
shr
mov
cmp
push
cwde
push
pushfw
mov
outs
sbb
dec
add
pop
nop
pushf
cs
jle
div
inc
push
inc
inc
sbb
sbb
cmc
mov
sub
enter
dec
sub
xor
enter
fnsave
lods
es
dec
enter
jb
add
jbe
adc
jnp
inc
inc
push
nop
push
pop
xchg
or
das
jmp
les
xor
fld
sbb
(bad)
sbb
or
loopne
imul
rcl
pop
sahf
push
fs
movs
and
loope
push
push
dec
push
or
push
imul
inc
dec
pop
mov
xor
xchg
xchg
ss
push
or
into
ja
jle
mov
adc
pop
neg
xchg
int3
jle
xor
push
push
ss
pop
movs
push
shr
pop
mov
cmc
test
lock
push
es
and
jo
cmc
pusha
cwde
push
test
add
rcr
cmp
sbb
adc
sub
inc
imul
loopne
jle
sbb
xor
push
adc
pusha
cmp
or
add
mov
rcl
push
rol
push
xchg
ret
cmp
enter
idiv
daa
adc
rol
add
mov
test
push
inc
rcr
xor
mov
pop
into
and
push
and
mov
pusha
mov
add
into
rcl
pop
es
or
sub
xor
(bad)
mov
cmps
pop
out
xor
sbb
cmp
jb
and
push
inc
sbb
cwde
cmp
pusha
jle
aam
add
and
ret
or
mov
(bad)
xor
adc
xchg
pop
mov
jbe
inc
cwde
fsub
imul
nop
push
inc
loopne
push
sahf
test
sub
push
adc
xor
xor
push
nop
mov
jbe
add
movs
push
push
js
xchg
add
shl
nop
inc
or
mov
pusha
pusha
ret
lock
mov
dec
cmp
data16
pushf
cmp
cdq
inc
xchg
scas
test
pop
ret
dec
xchg
sbb
mov
and
and
ds
(bad)
or
and
and
or
xchg
add
outs
push
daa
arpl
or
pushf
sbb
scas
fisubr
js
jmp
cwde
pusha
add
outs
mov
nop
sub
mov
inc
rol
xchg
add
push
(bad)
sbb
jbe
inc
loopne
jle
cmps
jno
pusha
test
js
lods
add
jbe
ins
dec
jne
inc
nop
mov
cwde
into
inc
sub
xchg
xor
fnsave
inc
push
cmp
xchg
sub
push
xchg
cli
add
test
movs
movs
and
into
fisubr
(bad)
push
pusha
mov
(bad)
inc
dec
inc
lods
inc
push
daa
push
enter
mov
mov
inc
das
adc
lods
daa
dec
pusha
push
(bad)
out
jb
add
sbb
scas
aam
popf
and
inc
pop
dec
push
or
adc
xchg
push
ss
lock
mov
nop
inc
pop
outs
sub
add
pop
(bad)
mov
in
or
in
xlat
and
sub
jne
daa
push
lock
xor
xor
sbb
pop
or
(bad)
sub
ret
cmp
cdq
add
clc
inc
mov
jle
add
and
and
sbb
and
call
adc
ss
push
mov
ss
ins
imul
dec
in
and
dec
(bad)
mov
xchg
mov
aaa
imul
push
mov
xchg
dec
ficom
and
push
sub
outs
pop
pop
push
pusha
(bad)
dec
xor
ret
mov
xchg
jnp
loope
push
inc
or
dec
loope
mov
mov
ins
cmp
pusha
push
nop
jo
mov
adc
cs
pop
add
xor
out
into
add
mov
sub
mov
lock
rcr
sbb
test
xor
lock
sbb
outs
out
movs
xor
pusha
(bad)
inc
dec
fsub
mov
mov
sbb
inc
(bad)
push
ret
add
ret
inc
xor
es
cmp
ret
adc
jo
cmps
out
sbb
inc
add
mov
push
into
call
pop
jle
adc
push
inc
mov
adc
pop
ror
adc
arpl
push
les
popa
push
and
adc
dec
mov
or
(bad)
div
test
or
nop
sbb
dec
push
or
jo
sub
bound
mov
out
out
mul
and
ds
aam
ror
add
call
and
cmps
(bad)
jle
add
fwait
mov
popf
push
arpl
mov
pop
adc
sub
inc
cmp
ret
lock
jno
test
or
adc
pop
and
push
xchg
test
cmps
lea
call
add
ss
sub
and
add
lahf
inc
cdq
xchg
ret
sub
jo
mov
out
jno
outs
jno
and
pop
lods
fadd
add
dec
mov
cmp
dec
sar
xchg
push
mov
xchg
mov
inc
and
and
shl
sbb
xchg
test
dec
(bad)
(bad)
inc
add
push
shl
pop
push
mov
dec
fs
out
push
sbb
pop
inc
dec
ds
(bad)
pop
push
pop
mov
mov
(bad)
ss
cli
es
push
sbb
dec
js
cmp
sub
(bad)
xor
sbb
outs
and
add
clc
sar
repnz
pop
push
cmps
add
or
enter
sbb
shl
into
xchg
xchg
mov
ss
cs
inc
push
outs
lock
cmps
hlt
cli
xor
xor
or
mov
test
pop
(bad)
pop
into
call
(bad)
mov
inc
pop
(bad)
pop
jbe
inc
add
or
push
not
imul
push
inc
ss
mov
or
outs
sbb
push
mov
add
pop
add
mov
push
add
aam
and
jbe
dec
aam
xor
test
inc
aam
test
push
lahf
and
add
adc
xor
or
ficom
int3
pop
add
push
into
inc
js
jb
ror
inc
loope
sahf
(bad)
cmp
pop
or
ds
xchg
sub
and
xor
fisubr
je
enter
addr16
out
push
xor
pop
or
test
mov
js
shl
mov
test
cmps
cwde
rol
push
sub
enter
int3
pop
push
xor
xor
js
sub
inc
clc
test
mov
nop
xchg
cmps
push
xchg
add
dec
movs
xor
pop
dec
mul
push
sbb
dec
push
sub
jb
add
mov
cs
rcl
aam
(bad)
cmp
enter
xchg
and
fdivp
xchg
into
add
xchg
cdq
mov
rcr
inc
scas
sbb
movs
cmp
inc
inc
test
and
xor
push
call
out
push
sub
loopne
push
(bad)
pop
xor
dec
dec
and
test
test
outs
jmp
xor
push
bound
push
jle
and
scas
push
dec
loopne
rol
adc
sbb
enter
lods
jne
nop
push
push
arpl
sbb
ret
cmps
clc
dec
mov
pop
sbb
lods
cwde
mov
inc
aas
outs
push
push
scas
sahf
movs
mov
imul
add
test
push
jle
push
cmps
mov
add
add
outs
inc
outs
dec
xchg
into
fcomp
push
jbe
mov
cmp
inc
dec
mov
dec
inc
ror
(bad)
out
cmp
ret
into
xchg
test
sahf
nop
or
loope
mov
inc
or
sahf
addr16
and
test
push
outs
imul
dec
lods
imul
mov
xor
push
inc
and
mov
shl
movs
adc
push
or
dec
mov
mov
ins
sub
inc
push
cmp
ret
adc
pop
inc
rol
aad
iret
loopne
xor
xchg
pop
inc
pop
daa
sbb
sub
dec
lods
sub
jecxz
loope
shl
sbb
pusha
cs
cmps
add
xchg
sar
or
(bad)
cmp
outs
scas
xchg
js
or
jle
enter
ss
or
icebp
cwde
dec
sahf
sub
mov
cwde
pop
rcl
inc
inc
push
xor
pop
inc
inc
or
(bad)
mov
popa
or
mov
jno
xor
xor
add
inc
push
test
mov
push
mov
xor
js
dec
cmp
adc
pop
sbb
leave
pop
scas
mov
or
mov
and
test
sahf
ins
cmp
dec
pusha
sahf
(bad)
push
outs
pop
test
test
jo
ss
les
mov
add
adc
fidiv
enter
cmps
cmps
push
push
jbe
mov
pop
jmp
test
add
pop
push
leave
dec
popf
lods
dec
mov
adc
cmps
test
test
daa
into
mov
cmps
mov
push
or
mov
into
pusha
cdq
jno
mov
fsubr
popf
test
enter
dec
adc
outs
mov
xor
push
and
dec
je
inc
arpl
inc
push
clc
popa
or
bound
jo
inc
ss
es
sbb
adc
clc
or
pusha
adc
ss
cmp
pop
(bad)
je
ss
cmp
sub
xchg
dec
call
mov
sub
adc
fiadd
push
(bad)
xor
dec
inc
xchg
dec
inc
cmp
mov
xchg
shl
(bad)
imul
add
test
clc
je
cwde
mov
das
sbb
sub
(bad)
rol
add
rcr
push
sub
imul
xchg
outs
loop
(bad)
add
xor
sub
push
mov
push
jno
icebp
adc
and
test
push
rcl
outs
xor
test
inc
xor
xchg
cmp
add
xor
xchg
shl
loope
jp
inc
addr16
push
dec
mov
push
jne
popa
test
loopne
mov
scas
xor
loop
lods
or
movs
es
jo
sub
jle
sbb
adc
mov
dec
xchg
les
pop
cmp
bound
ret
call
data16
lahf
lock
ret
pop
dec
push
push
add
dec
sub
xchg
inc
or
cs
add
pusha
mov
popf
mov
sahf
pushf
dec
das
inc
mov
adc
mov
xchg
jo
inc
loope
pop
sahf
push
(bad)
jp
push
clc
es
add
cs
adc
ret
dec
sar
mov
(bad)
not
xchg
fiadd
push
sahf
sbb
xchg
cdq
ss
jne
xor
mov
(bad)
pop
dec
mul
add
pop
clc
out
mov
add
and
clc
pop
test
lock
adc
(bad)
xchg
jo
popa
pusha
lods
xchg
cmps
inc
mov
add
dec
fsub
and
push
or
into
push
sub
(bad)
ror
jo
mov
fdiv
push
push
jge
sahf
repnz
icebp
jbe
sbb
ss
ds
cmp
lods
ins
cmp
outs
mov
into
sub
lods
data16
push
call
scas
js
or
(bad)
data16
push
add
fmul
push
cmp
mov
dec
dec
mov
(bad)
xchg
xor
test
rol
sbb
xor
sbb
sbb
push
cmp
xchg
cmp
nop/reserved
gs
mov
cwde
loopne
xchg
cwde
cmps
cmps
pop
adc
sub
push
ret
(bad)
ds
adc
hlt
popf
sub
outs
cs
cmp
popf
sub
push
or
inc
je
imul
cmp
enter
mov
pop
test
loope
daa
inc
outs
outs
xor
add
adc
jbe
test
sar
cmps
enter
mov
call
push
inc
jne
cmp
push
fld
mov
aad
push
xor
fimul
push
jbe
je
dec
mov
mov
dec
into
and
inc
ret
bound
loopne
inc
xor
sbb
cmp
jle
xchg
and
jle
cmp
dec
pop
outs
mov
mov
enter
into
push
out
test
push
pop
cs
jle
mov
xchg
shr
xchg
jle
xchg
cwde
xchg
dec
fadd
out
and
push
mov
mov
sbb
jae
push
les
mov
push
adc
out
jbe
les
pop
mov
add
sahf
or
xchg
xchg
(bad)
out
aam
add
add
xor
sbb
push
ret
cmp
je
nop
add
xor
sbb
test
ror
mov
inc
mov
dec
sub
sbb
push
adc
aaa
or
and
jne
nop
mov
xor
add
xchg
mov
inc
jo
push
je
xor
js
add
push
mov
or
enter
inc
es
retf
add
outs
js
retf
mov
retf
cmp
and
xor
pusha
lods
dec
cwde
cmps
inc
and
xchg
ror
lods
out
sahf
dec
or
mov
rcl
enter
scas
scas
ss
hlt
and
mov
js
xor
loop
popa
add
pop
xchg
je
jo
cmc
jo
(bad)
out
push
or
mov
mov
or
ss
push
sub
inc
sar
out
jle
push
dec
or
mov
xchg
jbe
adc
mov
outs
push
mov
sub
imul
mov
mov
inc
sub
mov
adc
mov
nop
shr
ins
add
mov
dec
xchg
mov
adc
not
or
sub
ins
or
jae
sbb
sub
jbe
mov
mov
xchg
jo
inc
jle
popf
test
add
sub
push
push
popf
and
outs
inc
or
dec
xor
mov
js
cdq
(bad)
dec
lock
fiadd
rcr
mov
retf
dec
dec
mov
push
mov
inc
xchg
add
adc
push
sub
lock
xor
pusha
pop
shr
add
and
push
or
adc
ja
push
and
sbb
sahf
inc
push
sub
test
sbb
or
sbb
popa
xor
sbb
ins
outs
adc
cmp
sbb
(bad)
js
add
push
push
add
test
pop
push
pop
scas
mov
scas
push
call
cmps
mov
mov
sbb
jo
or
out
jo
arpl
mov
push
jle
dec
outs
push
lds
sbb
adc
sbb
sub
into
vshufpd
mov
and
ds
sbb
adc
push
inc
ins
push
jo
adc
daa
or
push
sahf
retf
adc
pusha
add
or
pop
push
pop
push
push
pop
adc
adc
or
(bad)
pop
cmps
sbb
js
pop
scas
pop
pop
pushf
in
adc
out
adc
sbb
or
test
inc
arpl
adc
push
push
push
inc
aas
ins
add
add
push
push
into
add
push
jo
sub
xchg
mov
inc
push
xchg
xchg
sahf
lea
jo
xor
rcl
ins
and
(bad)
push
mov
(bad)
adc
push
push
sbb
push
push
and
or
(bad)
ss
rcr
xchg
loopne
shl
push
and
push
adc
(bad)
and
adc
test
mul
push
cmp
ds
jb
pusha
dec
jns
mov
dec
push
enter
xchg
xor
das
loope
js
push
sub
push
imul
push
push
xor
adc
mov
sbb
cmp
cmp
sbb
dec
js
clc
jbe
or
add
add
push
inc
test
ins
cdq
cwde
push
idiv
push
pusha
add
dec
add
lods
aaa
test
gs
nop
scas
shl
inc
sbb
xchg
sub
mov
data16
sbb
js
clc
push
mov
push
xchg
push
xor
dec
mov
jbe
loopne
xchg
cmp
mov
shl
dec
dec
(bad)
push
inc
imul
push
les
retf
or
xchg
test
add
fidivr
jb
push
push
cmp
iret
push
add
fmul
jno
inc
add
cs
and
jg
dec
dec
rcl
push
(bad)
cwde
cmps
es
dec
nop
add
lods
jo
xchg
jmp
adc
pushf
xchg
sbb
(bad)
dec
into
dec
lods
dec
mov
and
sub
jns
sbb
mov
mov
adc
test
test
movs
shl
pusha
adc
leave
cmp
sub
push
pusha
or
cmps
xchg
cmp
shr
test
test
sub
aaa
mov
shl
adc
cmp
or
rcr
adc
mov
mov
mov
lock
xchg
mov
pop
or
and
add
adc
inc
(bad)
mov
(bad)
add
adc
(bad)
out
outs
cmp
in
pop
fiadd
adc
(bad)
test
xchg
leave
rol
and
adc
push
or
js
shl
imul
xchg
pusha
movlps
ds
mov
out
ret
and
jo
ret
dec
clc
ds
imul
sbb
or
in
adc
jbe
push
aam
sub
popa
fimul
mov
push
pop
(bad)
(bad)
mov
xor
jo
xchg
and
add
xor
mov
imul
or
cs
dec
inc
mov
into
es
and
inc
sbb
pop
(bad)
clc
popw
push
les
add
mov
clc
dec
add
xor
push
push
xchg
fidivr
mov
in
hlt
add
fiadd
pusha
jo
xor
cmp
(bad)
mov
pop
lahf
add
lock
ficomp
jle
mov
and
inc
jle
inc
sbb
pop
inc
fidiv
outs
dec
xchg
or
outs
and
push
push
enter
cmp
dec
sahf
scas
mov
sbb
dec
inc
out
rcr
or
(bad)
popa
gs
mov
cmp
sbb
cmp
outs
scas
(bad)
xchg
add
loop
dec
fcomp
enter
add
mov
mov
push
xor
xchg
or
mov
(bad)
data16
rol
mov
dec
and
pop
rcl
je
cmps
jne
mov
not
sbb
pop
ins
pusha
popa
xor
inc
mov
mov
dec
out
adc
fcmovb
xor
ss
mov
int3
add
add
mov
pop
adc
loope
jecxz
ins
adc
sbb
popa
xor
pushf
pop
push
mov
lock
pop
dec
(bad)
inc
xor
inc
call
aam
inc
lea
xor
sbb
xchg
mov
adc
inc
daa
sbb
call
push
mov
mov
xor
pop
test
rcr
or
or
rcr
add
mov
push
dec
inc
mov
outs
push
mov
sbb
pop
test
or
popa
adc
scas
gs
mov
lock
jmp
mov
cs
jmp
mov
mov
mov
add
jo
pusha
pushf
push
outs
dec
fisub
cmps
les
inc
lock
mov
aam
lods
push
mov
lock
push
ss
and
fwait
cmp
dec
adc
jne
or
rcl
dec
test
pop
test
pop
push
ss
mov
test
sbb
mov
xor
sbb
add
shl
dec
(bad)
call
mov
call
nop
sahf
ltr
pusha
outs
cs
fisubr
xor
into
or
pusha
or
mov
add
lods
clc
rcr
sbb
sub
and
je
push
(bad)
into
ss
mov
cmp
mov
mov
pusha
js
ds
dec
rcl
sub
mov
jo
mov
and
inc
test
cmc
mov
xchg
mov
push
sbb
sub
fiadd
sbb
and
sbb
(bad)
or
mov
push
cmp
pop
push
pop
add
pop
sbb
in
mov
mov
data16
and
sub
js
jo
gs
push
(bad)
push
es
dec
ss
push
xchg
adc
adc
mov
push
mov
push
movs
pop
pop
and
push
aas
and
outs
mov
pusha
sub
add
ror
sub
mov
mov
ins
push
and
cmps
xchg
data16
dec
inc
cmp
sahf
inc
pop
sahf
fiadd
push
into
adc
add
or
mov
dec
pop
xchg
inc
out
add
push
enter
jmp
jecxz
mov
ins
pusha
push
popa
pusha
dec
sub
clc
xor
rol
jbe
sahf
aaa
and
lods
mov
ror
lea
dec
scas
and
dec
push
lds
cmp
xchg
dec
(bad)
adc
push
pop
sub
push
adc
cmp
push
test
fiadd
test
add
push
push
loop
dec
data16
cwde
pop
sub
pop
mov
sub
out
add
das
cmps
jbe
or
addr16
push
adc
push
adc
lds
test
cs
cwde
xor
test
inc
push
add
add
nop
outs
mov
hlt
sbb
(bad)
push
xor
add
rcr
push
push
and
pusha
pusha
inc
popa
fsub
imul
imul
pop
(bad)
outs
push
push
fiadd
sub
adc
and
dec
adc
cmp
mov
xchg
nop
xor
(bad)
mov
fstp
(bad)
inc
jge
outs
cmp
mov
daa
sbb
inc
xchg
dec
cmp
ins
jbe
or
mov
mov
push
add
(bad)
xor
push
push
adc
xchg
dec
add
xchg
add
add
cmp
test
jbe
jno
or
adc
xchg
ficom
mov
push
mov
das
push
add
and
pop
into
push
and
dec
mov
nop
dec
dec
pusha
clc
xchg
pop
pop
mov
pop
rol
inc
adc
xor
call
jo
inc
add
ret
js
enter
add
inc
push
inc
imul
outs
push
adc
js
sbb
popa
popa
push
outs
mov
or
mov
js
(bad)
pop
push
sar
shl
loop
sbb
retf
int3
(bad)
mov
test
push
pusha
or
or
push
imul
adc
xchg
push
imul
mov
jno
adc
cmps
cmp
ins
lock
cmp
mov
popa
pop
pop
and
adc
xor
cmps
cs
pop
xchg
push
dec
ins
imul
jge
mov
push
(bad)
jle
or
cmp
add
pusha
loop
ret
cmps
js
loop
arpl
clc
(bad)
jo
push
test
xor
lock
ret
dec
mov
outs
push
push
dec
push
out
sbb
lock
pop
js
js
or
xchg
mov
jle
sbb
xchg
xchg
xor
sub
mov
push
and
imul
sub
ret
call
adc
mov
add
gs
mov
add
adc
loope
call
and
push
pusha
pop
loope
jb
(bad)
xor
js
adc
lock
mov
int3
cmp
sub
into
test
ds
push
les
push
pop
mov
mov
loopne
or
add
fiadd
retf
add
pop
add
je
push
adc
sahf
or
movs
mov
data16
jo
js
mov
pop
adc
xchg
aam
add
add
sub
rcr
jae
cmp
inc
push
xor
sub
push
div
rcl
mov
jne
das
test
ret
mov
lock
imul
push
sub
pop
xchg
sub
inc
cmps
mov
add
inc
(bad)
clc
clc
pop
xchg
shr
js
dec
jp
mov
add
adc
push
push
jo
sub
mov
out
stos
inc
jl
scas
xor
cs
inc
sub
mov
cmp
sbb
push
push
fdiv
jno
push
and
and
or
inc
dec
lods
and
out
inc
and
mov
data16
xchg
mov
test
or
xor
popf
in
into
mov
(bad)
dec
jno
imul
inc
loopne
xchg
mov
add
loopne
fld
nop
push
les
(bad)
or
ss
jae
jbe
sbb
mov
retf
dec
pop
dec
xchg
les
push
stos
fs
xchg
mov
xor
push
es
scas
add
gs
sub
jbe
xor
fidivr
fistp
push
sbb
inc
shl
inc
add
into
into
sbb
adc
jle
(bad)
mov
add
test
dec
dec
adc
push
push
ss
pusha
push
scas
jbe
xor
push
pop
jbe
shl
add
jle
jmp
cmp
adc
inc
mov
jo
xor
dec
mov
xor
loopne
cs
cmps
or
add
mov
popa
dec
imul
jmp
and
cmps
and
sahf
pushw
rol
xchg
data16
sub
imul
cmp
mov
mov
adc
ret
sbb
pusha
scas
movs
cmp
pusha
pop
xchg
inc
xor
adc
adc
push
xor
or
or
test
and
cmp
cwde
or
or
push
and
(bad)
push
xor
rol
loopne
lods
dec
fcom
or
and
push
jo
adc
mov
mov
imul
data16
test
dec
popf
fnstenv
stos
add
jo
push
mov
mov
add
cmps
pop
or
xor
and
jbe
or
or
pusha
or
stos
es
inc
clc
xor
cmp
xchg
lock
push
inc
pop
add
pusha
mov
dec
pushf
inc
sbb
add
mov
xchg
js
pusha
mov
pop
outs
popa
dec
push
sub
add
xor
mov
sbb
push
sbb
xlat
xchg
cdq
adc
push
and
push
push
daa
add
adc
cmp
sbb
es
and
and
push
call
add
dec
sub
into
mov
push
(bad)
call
pop
das
sbb
lock
jno
add
clc
movs
test
(bad)
pop
adc
or
jb
mov
xchg
inc
xor
pop
out
sahf
xor
or
push
sbb
mov
mov
sbb
inc
mov
ss
push
(bad)
mov
xor
dec
dec
mov
xchg
mov
mov
fimul
sub
add
call
push
rcl
xchg
add
lds
dec
adc
sub
dec
xchg
jae
dec
jo
in
js
push
jle
add
aad
xchg
push
push
mov
pop
fiadd
xchg
aam
ds
xchg
jno
popa
add
xchg
jns
(bad)
mov
ret
pop
inc
pusha
rcl
out
pop
sahf
into
pop
sbb
cmp
fcomp
pusha
add
popa
sub
sub
xor
push
jo
test
loope
push
inc
push
and
(bad)
adc
sahf
mov
and
and
push
dec
nop
add
mov
ret
inc
pop
xchg
aam
les
outs
sbb
pop
shl
inc
(bad)
push
mov
ss
jo
test
sbb
jle
pop
or
xchg
adc
xor
(bad)
ds
sbb
leave
lods
cmps
inc
ror
sbb
loopne
mov
popa
cmps
(bad)
xor
push
push
sahf
push
scas
ret
and
adc
data16
sub
jb
dec
push
scas
or
mov
fisub
bound
inc
pushw
dec
mov
call
sbb
xchg
pop
push
test
add
mov
pop
push
mov
mov
das
or
add
push
xchg
jo
add
scas
and
stc
mov
inc
fiadd
out
mov
es
sub
adc
dec
adc
ins
cmp
mov
push
or
pop
sbb
fmul
rol
inc
add
xor
push
push
test
ins
imul
lea
xor
shl
fdivr
inc
es
cmp
mov
cwde
push
pop
inc
outs
cmp
cmp
push
xchg
(bad)
outs
nop
inc
sahf
sbb
pop
push
sbb
(bad)
out
xor
push
ss
out
inc
loop
add
jmp
loop
nop
rcl
jbe
mov
les
jo
imul
or
and
adc
cmp
sub
loope
lods
js
scas
pop
fdivr
mov
call
sub
lock
pop
or
ds
popf
mov
outs
push
mov
sbb
mov
push
loopne
sbb
xor
push
jo
cdq
push
(bad)
sahf
fidiv
addr16
pop
and
add
jno
in
push
push
sub
lock
data16
fcmovnb
cmps
push
ins
add
xchg
dec
and
out
jmp
push
ja
xchg
(bad)
push
bound
out
test
cmp
test
dec
push
xor
mov
xor
sub
add
test
pop
into
out
daa
retf
fidiv
mov
adc
adc
xor
adc
sar
cmp
lea
pusha
inc
sub
or
rol
dec
xchg
pop
mov
faddp
or
lods
popf
data16
retf
aam
je
mov
or
inc
enter
loopne
dec
ss
imul
xor
push
add
sbb
push
inc
out
data16
rol
jne
jle
push
loope
loopne
pusha
inc
(bad)
xor
mov
out
sub
cmp
test
js
xor
sbb
inc
push
test
test
xchg
int3
pop
mov
into
outs
xor
ss
xor
adc
je
cwde
ficomp
div
bound
(bad)
sar
xchg
jp
pusha
ret
pop
dec
dec
or
inc
cmp
cmp
mov
pop
sub
push
ret
pop
sbb
mov
pop
cmp
sbb
cmp
data16
sub
mov
inc
adc
shl
(bad)
xor
test
and
push
pop
pop
ret
sub
dec
mov
scas
cmps
mov
dec
(bad)
ror
sbb
xor
das
sbb
push
mov
pop
fiadd
adc
xchg
xchg
pop
inc
dec
jle
xchg
xchg
mov
pushf
ins
or
xchg
or
pop
cmp
sub
sahf
mov
gs
into
adc
add
pop
dec
adc
or
pop
adc
mov
ror
clc
xor
rol
ds
inc
rcr
xchg
fdivr
mov
jb
movs
add
call
test
sub
js
data16
add
or
inc
jmp
loopne
mov
mov
ds
out
jle
cmp
out
lea
add
mov
mov
inc
and
call
adc
mov
push
mov
dec
iret
(bad)
inc
pusha
outs
push
enter
ss
xchg
inc
(bad)
mov
xlat
ret
retw
or
xor
popa
or
dec
test
xchg
fsub
ficom
test
sub
imul
imul
arpl
push
scas
pop
jo
jmp
dec
call
out
add
mov
rol
or
(bad)
push
(bad)
test
into
and
inc
ds
mov
dec
sbb
pop
jo
dec
mov
inc
mov
push
scas
lods
mov
outs
push
and
pop
push
mov
mov
cmp
lock
out
push
movs
mov
add
(bad)
lock
addr16
stc
push
jbe
sub
mov
and
push
xchg
cmp
or
push
cmps
add
add
loop
ror
stos
add
bound
and
sahf
(bad)
test
inc
and
cmp
cs
push
sub
invd
(bad)
push
sub
push
js
add
mov
jo
add
cmp
mov
push
jle
les
add
push
and
jno
push
cmps
xor
inc
xor
mov
xsha1
cmps
dec
push
das
test
sub
dec
out
xor
push
ins
popa
inc
add
mov
scas
sahf
dec
push
xchg
test
inc
cmps
rsqrtps
mov
push
cmp
mov
icebp
leave
(bad)
push
push
out
test
xor
inc
fadd
rol
outs
and
sub
outs
out
xchg
and
inc
les
cmc
sub
pop
rol
jo
push
pushf
rol
add
adc
(bad)
or
daa
or
mov
sbb
ret
push
mov
enter
or
xchg
mov
mov
(bad)
mov
mov
inc
shl
push
xchg
data16
inc
std
sbb
ss
and
movs
daa
out
push
and
or
pop
or
and
sub
sub
mov
cmp
mov
sbb
push
push
inc
inc
ret
mov
es
pop
sbb
ds
pushf
push
dec
xor
mov
js
js
xchg
xchg
xchg
adc
push
test
(bad)
and
push
scas
add
add
addr16
push
aam
lea
cmps
push
dec
xchg
mov
lock
mov
sbb
pushf
lods
adc
dec
adc
ds
(bad)
and
jbe
push
mov
inc
sar
inc
xchg
jo
ins
xor
dec
test
xchg
and
add
popa
dec
lods
movs
push
jbe
sub
dec
ins
mov
xchg
pusha
das
pushw
jle
popa
fs
popa
(bad)
add
mov
xor
imul
jbe
inc
dec
add
push
cmp
sub
outs
es
ins
test
mov
sbb
mov
or
dec
sbb
inc
mov
push
xchg
sahf
out
pusha
rcl
xor
fisubr
push
ss
dec
sub
clc
cs
sub
xor
shl
sbb
pusha
push
mov
sahf
mov
pusha
out
mov
clc
ins
mov
dec
jecxz
dec
out
ficomp
or
sbb
pop
xchg
push
adc
data16
push
cmp
dec
ss
sub
ins
mov
fs
push
add
scas
adc
sub
sbb
cmp
sbb
loop
add
jo
mov
mov
add
das
call
or
addr16
loopne
jmp
mov
mov
mov
push
sbb
jmp
inc
pop
es
out
push
enter
mov
push
loope
xchg
adc
mov
and
sub
(bad)
jo
loopne
sbb
mov
mov
(bad)
dec
ss
scas
sahf
or
iret
dec
(bad)
push
inc
sub
xchg
(bad)
lods
aam
sub
mov
dec
mov
jp
pop
(bad)
xchg
fs
push
jle
inc
(bad)
ss
rol
xchg
jle
ss
nop
xor
push
jbe
loopne
dec
mov
scas
sbb
into
jb
test
xor
cmc
scas
or
mov
jo
mov
jbe
and
into
mov
dec
push
bound
dec
inc
push
scas
dec
stos
add
not
inc
mov
(bad)
outs
sbb
cmps
push
push
mov
cmovns
push
mov
loopne
push
jno
push
mov
mov
push
mov
das
jmp
add
pushf
push
pusha
and
xchg
xchg
(bad)
ds
and
or
sahf
test
push
sbb
dec
mov
sub
or
cs
sub
mov
inc
es
adc
push
pop
inc
jo
popa
sbb
cmps
push
loopne
loope
push
dec
and
(bad)
(bad)
ins
loopne
sbb
jle
sub
push
add
push
xchg
inc
dec
(bad)
add
call
pop
das
adc
jecxz
sbb
outs
push
push
into
pop
call
loope
inc
jbe
jae
pop
push
add
and
xchg
or
shl
movs
rcr
mov
jo
mov
test
cmps
cmps
mov
popa
inc
or
inc
out
in
sahf
shl
sahf
call
fadd
add
ins
pop
fisub
sbb
xchg
cmp
mov
mov
aam
(bad)
(bad)
add
dec
pop
pop
arpl
test
lds
clc
inc
push
add
out
popaw
data16
sbb
fisubr
dec
out
xchg
and
lods
xchg
cmp
das
push
pusha
lea
es
or
lock
scas
jbe
sbb
ret
xchg
and
addr16
pusha
or
add
add
mov
sub
sub
dec
sar
mov
or
mov
scas
sub
outs
(bad)
push
(bad)
daa
or
pop
xchg
push
gs
push
sub
bound
(bad)
xor
(bad)
test
mov
adc
push
fmul
push
pop
mov
sahf
xchg
jle
xchg
mov
aaa
xor
jle
lods
mov
lock
xor
inc
lock
pop
mov
out
ds
push
dec
adc
push
rcr
or
push
pop
adc
inc
sbb
dec
ror
into
clc
xor
leave
ficom
lea
or
faddp
sub
and
mov
add
or
mov
out
push
and
ret
adc
add
mov
fsubr
inc
inc
ret
out
dec
sub
inc
add
mov
neg
mov
test
pop
fiadd
dec
add
inc
mov
scas
or
sub
push
test
cwde
enter
jle
not
scas
add
rcr
pop
or
loope
loopne
call
popa
and
and
hlt
dec
call
pushf
sub
(bad)
xchg
xchg
inc
xor
sub
inc
or
push
loope
and
push
cwde
inc
popf
lock
push
push
push
into
fstp
pushf
or
sub
xchg
jo
jbe
xor
add
and
ss
inc
mov
gs
inc
inc
cmps
pop
nop
mov
xchg
inc
xchg
add
pop
add
mov
xor
push
sbb
call
fcomp
mov
xchg
push
sbb
and
mov
test
pop
aam
fcmovnbe
sahf
loope
adc
mov
(bad)
inc
push
(bad)
pop
pop
sar
jbe
sbb
and
jbe
xchg
mov
daa
outs
push
out
ins
test
xchg
outs
pushw
xchg
test
ins
cmps
popa
ret
and
jb
es
out
mov
cmps
xchg
cmps
mov
sbb
push
out
xor
add
mov
push
push
bound
cmp
ss
(bad)
fbld
mov
loop
or
or
add
inc
mov
adc
(bad)
jbe
sahf
add
push
add
xor
(bad)
add
iret
aaa
es
adc
jo
mul
mov
or
mov
test
pop
mov
rcl
dec
fisub
push
xor
mov
rol
jecxz
cmp
dec
or
out
(bad)
jge
xchg
or
pop
outs
outs
icebp
dec
jp
add
push
shl
out
inc
push
scas
mov
jno
mov
data16
loopne
dec
pop
dec
out
dec
or
mov
data16
or
push
pop
mov
add
inc
or
xchg
push
dec
jecxz
scas
push
xchg
test
add
shr
jl
int3
cmp
push
push
xor
cmps
adc
fiadd
pop
xchg
jle
out
jle
or
dec
sbb
or
adc
into
pop
fiadd
rcr
mov
mov
es
fisub
jo
xor
js
into
xor
(bad)
add
adc
jo
sbb
add
push
inc
xor
xchg
xchg
pop
sub
push
mov
scas
ret
xor
mov
adc
mov
mov
inc
mov
mov
sbb
scas
push
xchg
mov
sbb
jmp
push
push
push
push
add
into
xchg
jo
mov
sub
add
pop
les
adc
mov
cwde
pop
ret
or
cmp
jmp
adc
scas
popa
faddp
daa
test
dec
jle
ss
nop
or
dec
fxch
cmps
shl
sub
cmps
out
jle
jo
sbb
js
xchg
push
(bad)
push
dec
and
dec
mov
into
sbb
push
and
push
out
add
and
pusha
cmps
(bad)
push
addr16
or
sbb
sbb
not
mul
xchg
xor
(bad)
data16
push
js
xchg
into
inc
pushf
add
push
push
retf
add
ror
lahf
pop
outs
mov
xchg
enter
or
xor
dec
dec
sbb
dec
mov
lods
xor
mov
mov
js
scas
scas
xchg
add
loope
or
bound
test
lock
or
or
or
add
call
jbe
xchg
add
dec
outs
out
ror
pop
cdq
cmps
dec
push
jmp
test
jp
push
ss
sbb
sbb
outs
inc
pushw
lsl
js
into
xor
add
clc
push
adc
arpl
ss
leave
les
loopne
add
call
push
sbb
cs
push
mov
cmp
dec
mov
jecxz
adc
push
fisubr
xchg
dec
sbb
jo
es
pop
enter
and
dec
cmp
jb
inc
cmp
push
jge
jb
shl
or
or
mov
pusha
inc
push
add
pushf
gs
or
mov
mov
adc
mov
and
popa
outs
ss
shr
pop
outs
or
fiadd
out
sbb
adc
inc
outs
mov
push
fmul
and
jno
outs
inc
xchg
pop
pop
dec
sub
pop
bound
push
and
push
adc
jbe
add
fadd
push
(bad)
popa
sub
cmp
(bad)
or
stos
pop
inc
nop
jbe
dec
add
out
out
mov
xor
test
das
adc
add
fwait
or
push
and
js
cmp
mov
adc
pop
outs
jge
adc
or
mov
test
or
leave
shr
add
lea
xchg
add
adc
jle
test
dec
cwde
cmps
popa
fiadd
jbe
mov
adc
and
hlt
nop
or
mov
push
pop
fs
xor
mov
or
outs
xor
pop
cmp
(bad)
imul
xchg
and
jo
pop
dec
push
ret
push
scas
test
and
xchg
inc
sbb
push
fnsave
sbb
fwait
stos
imul
add
pop
sub
ins
mov
pop
cs
es
xor
lods
add
sbb
and
push
stos
pop
movs
xchg
push
and
adc
adc
ins
xor
mov
js
rcl
jp
dec
dec
mov
adc
loope
adc
push
mov
es
lock
jbe
xor
cmps
and
pop
out
push
xor
ret
retf
scas
call
loope
sub
es
test
ins
(bad)
mov
add
into
xor
pop
call
cmp
inc
mov
adc
xchg
js
jle
push
imul
or
inc
mov
inc
retf
rcl
sub
ss
add
enter
mov
and
or
inc
adc
test
or
pop
outs
add
jle
ret
and
scas
pushw
adc
add
push
xor
push
dec
jle
loopne
sub
daa
or
cwde
ficom
jecxz
jmp
imul
jbe
loope
push
ds
shr
mov
push
jge
fwait
inc
add
shl
sbb
pop
icebp
cmp
lea
sub
cmp
xchg
fst
mov
cmc
add
xchg
mov
jno
or
adc
add
dec
xor
xchg
je
xor
add
push
(bad)
rol
mov
inc
es
inc
arpl
call
test
xchg
es
js
add
xor
push
clc
(bad)
out
gs
and
or
dec
out
gs
xchg
outs
sub
into
or
xchg
out
push
(bad)
xor
xchg
pusha
sbb
push
adc
nop
in
push
mov
nop
and
jle
or
hlt
and
les
sbb
rcr
xchg
or
mov
or
pop
or
rcl
test
ss
add
test
or
xchg
(bad)
(bad)
xor
popf
(bad)
jbe
add
test
push
cdq
cdq
test
cmp
(bad)
push
add
mov
cmp
jp
push
sbb
push
fdivr
adc
imul
adc
jo
adc
sahf
pop
les
add
fadd
inc
gs
push
dec
inc
test
test
mov
pop
pop
not
out
ss
fnstenv
or
cmp
cmp
cmp
dec
jo
rcr
js
push
jp
fidivr
nop
jo
out
leave
pusha
hlt
vpmacsdd
mov
dec
mov
imul
add
arpl
cwde
imul
ins
lock
or
xchg
inc
fisub
adc
sbb
bound
sub
(bad)
push
pop
out
leave
xchg
add
cwde
adc
bound
or
or
add
js
popa
into
push
inc
outs
adc
cmp
(bad)
adc
xchg
jbe
retf
add
fmulp
xchg
sbb
adc
movs
inc
adc
dec
out
je
movs
nop
data16
mov
inc
out
xor
sub
lods
and
xchg
jle
dec
push
and
dec
pusha
gs
push
or
add
add
adc
sbb
(bad)
sahf
sbb
pop
or
sub
int3
and
ror
je
mov
cmp
mov
enter
jno
push
pop
mov
add
sub
add
and
and
aas
js
clc
mov
xchg
bound
or
or
and
sahf
and
or
or
retf
(bad)
add
add
cmps
into
mov
pusha
add
sahf
test
ins
pushf
mov
test
test
push
and
and
mov
dec
rol
inc
jmp
inc
call
jae
and
inc
jns
sub
outs
adc
add
(bad)
jne
int3
sbb
out
rol
inc
adc
pop
xchg
xchg
es
xor
lock
and
nop
mov
jae
popa
inc
or
xchg
and
push
pop
les
ret
test
rol
push
xor
cmp
mov
sbb
push
es
lahf
jp
mov
sbb
imul
data16
xor
mov
enter
dec
sbb
imul
jp
inc
mov
push
dec
ss
sub
xchg
adc
add
pusha
dec
movs
out
ds
push
ror
xchg
popa
mov
mov
test
sbb
mov
push
mov
or
xchg
movs
mov
push
xchg
nop
rcl
xchg
or
add
pop
and
xor
push
push
iret
cmps
xor
jecxz
push
mov
adc
retf
push
and
(bad)
loopne
push
adc
into
inc
inc
sub
dec
lea
jbe
ret
mov
mov
pop
pop
adc
sbb
jb
cs
adc
pop
mov
mov
(bad)
retf
and
(bad)
enter
js
inc
xchg
adc
dec
ss
test
les
je
add
pop
(bad)
cmps
push
adc
fcmovnb
mov
push
xor
out
inc
test
adc
sub
mov
outs
sub
push
mov
test
ret
mov
cwde
imul
sbb
sbb
into
out
aaa
inc
ret
or
mov
push
pop
push
and
into
push
ficomp
and
jle
mov
inc
ss
icebp
sahf
into
(bad)
dec
inc
sub
xchg
inc
adc
outs
pop
or
fwait
out
sub
sbb
sbb
ins
sbb
js
loope
dec
inc
popa
push
mov
add
outs
jle
cmp
sub
xchg
jp
dec
push
rcr
add
call
scas
outs
push
and
jno
jge
push
js
ret
shl
adc
and
or
mov
cmp
scas
data16
icebp
cmps
mov
or
inc
mov
data16
push
es
hlt
push
je
jo
dec
ret
inc
mov
or
and
add
lds
add
into
adc
mov
jb
sub
out
test
ds
push
xor
sbb
js
ins
inc
and
loope
sbb
div
sub
and
mov
xchg
cmp
ds
es
pusha
scas
sbb
aaa
pop
mov
les
dec
add
pop
sub
fs
es
pop
lock
ret
sub
iret
mov
cwde
ss
ds
and
xor
sub
(bad)
clc
call
add
dec
js
ret
cmp
jns
jbe
and
dec
pop
cwde
sbb
xor
mov
adc
dec
dec
mov
call
outs
xor
or
call
jno
jae
cmps
or
push
test
jo
xchg
call
ret
pop
xor
xor
pop
jo
xor
cmp
sbb
cs
cmps
xor
(bad)
cwde
dec
mov
(bad)
inc
sub
(bad)
sti
add
loopne
xchg
adc
push
mov
sahf
cmp
or
push
push
dec
inc
and
push
scas
outs
addr16
bound
pop
mov
adc
mov
and
push
fisub
test
mov
add
fstp
inc
or
js
dec
pop
push
arpl
push
test
pop
mov
or
pushf
dec
out
push
ins
xchg
aaa
and
(bad)
mov
inc
into
(bad)
movs
sbb
push
push
xor
xlat
jmp
pusha
imul
mov
or
jo
ss
inc
enter
add
xchg
mov
out
jmp
loope
imul
adc
js
push
cmps
push
dec
mov
add
cmps
xor
inc
and
push
push
push
es
add
pop
or
mov
cmp
inc
loopne
or
call
push
inc
xchg
xchg
pop
fst
and
push
sahf
add
inc
movd
adc
push
dec
test
cmp
fnstenv
adc
mov
push
or
jp
xor
add
xor
and
and
xchg
add
or
or
sahf
mov
push
add
xor
jbe
ficom
inc
mov
dec
push
pop
xchg
cs
jle
test
(bad)
xchg
out
gs
scas
inc
gs
sbb
ret
scas
push
push
shl
push
popa
add
adc
xor
sub
add
loopne
cmps
movs
xchg
or
and
add
lock
push
dec
mov
test
mov
add
add
(bad)
xor
xor
movs
and
hlt
add
xor
movs
call
leave
add
push
adc
push
inc
or
rcl
pusha
fcom
mov
add
mov
inc
dec
sub
xchg
xor
jno
(bad)
inc
into
inc
inc
sbb
push
sahf
data16
sbb
jmp
push
test
and
movs
pop
xchg
jp
pop
dec
cmp
push
xor
ret
ror
arpl
sbb
inc
test
adc
push
ss
aam
shl
push
xor
cmp
(bad)
xchg
push
push
or
sbb
inc
jo
mov
inc
mov
es
pop
cdq
ret
lock
lods
inc
cmc
jg
and
inc
sub
cmp
sub
and
or
fcmove
loope
call
sahf
or
(bad)
shr
adc
inc
sbb
add
into
jo
push
rcr
jo
or
cmp
into
push
sub
ss
and
mov
sub
fiadd
arpl
xchg
(bad)
jmp
cs
inc
and
out
bound
shl
and
or
cmps
ja
sub
(bad)
or
jo
dec
dec
outs
out
js
pusha
imul
push
das
call
out
push
lock
xchg
sbb
xchg
sahf
dec
inc
or
rol
xchg
sub
xor
pop
push
pushf
or
mov
mov
data16
data16
and
push
xchg
fcom
aaa
mov
or
push
push
push
xchg
sahf
pop
lock
and
cs
cmp
jecxz
loop
mov
ss
xchg
xor
xor
push
scas
push
pop
mov
inc
into
dec
push
test
pop
mov
inc
cdq
aam
push
dec
add
jbe
and
push
(bad)
and
jge
push
add
adc
inc
(bad)
jle
(bad)
xchg
push
or
cmps
mov
inc
and
daa
mov
inc
pop
xchg
out
cmps
cmp
dec
pusha
or
loopne
dec
inc
push
aaa
and
xor
(bad)
mov
ret
inc
adc
imul
out
loopne
aas
ficomp
or
ficom
cs
inc
mov
ret
inc
data16
loopne
sub
adc
mov
mov
sub
mov
push
inc
test
dec
and
sar
adc
outs
fmulp
xchg
ror
out
push
shl
push
leave
call
ins
mov
(bad)
adc
adc
pop
into
mov
ret
jo
sbb
xchg
call
lock
cdq
xchg
jo
mov
mov
push
inc
into
dec
scas
xor
outs
or
js
mov
or
ret
inc
add
loop
push
xor
rcl
sbb
ficom
jmp
jmp
popa
pusha
test
xor
adc
test
outs
js
out
jmp
dec
push
pop
neg
push
jg
aam
pop
mov
dec
xchg
mov
aam
mov
xor
mov
and
or
ss
rol
into
es
mov
cmp
dec
test
adc
cmps
call
push
(bad)
shr
add
loopne
sbb
jbe
loop
sbb
call
pop
or
into
sub
out
mov
movs
pop
sahf
push
bound
jp
jle
cs
or
dec
and
pop
jp
cwde
mov
sbb
out
cmp
data16
mov
xchg
data16
pop
or
sub
add
retf
add
jo
inc
idiv
mov
pop
xchg
outs
inc
jo
xor
(bad)
sbb
or
mov
(bad)
rcl
sub
cmp
dec
push
ret
sbb
mov
dec
es
rcl
add
push
sbb
cmp
ds
js
push
(bad)
sar
(bad)
es
jo
push
es
push
xor
hlt
sahf
data16
push
xchg
test
out
dec
ror
jo
inc
inc
js
cwde
push
pop
aam
mov
bound
sub
push
jbe
push
daa
add
out
push
rcr
xchg
xor
xor
dec
push
test
into
sbb
sbb
scas
lods
dec
pushf
fwait
imul
fstp
dec
jbe
add
sub
inc
(bad)
out
sub
popa
mov
daa
add
sahf
xor
jbe
pop
jp
cmp
dec
loope
(bad)
dec
sub
data16
add
sbb
add
push
jmp
punpckhdq
(bad)
add
push
daa
pop
inc
add
shr
pop
adc
test
sbb
jle
cs
push
rcl
outs
jo
dec
pop
xchg
pusha
xor
sbb
dec
push
and
jp
cmp
mov
popa
and
loopne
inc
inc
popf
push
and
inc
push
push
and
jmp
push
shr
rcr
mov
(bad)
into
pop
mov
add
rol
adc
pop
xchg
xor
sub
in
push
xor
sbb
add
mov
rol
test
jle
dec
cmps
mov
imul
data16
ss
(bad)
fcom
call
sbb
pusha
call
push
dec
sbb
xor
fisttp
adc
aas
(bad)
jo
jle
popa
dec
dec
addr16
imul
ds
ins
rcl
pop
push
pop
imul
es
sub
scas
mov
adc
nop
pusha
dec
popf
xchg
mov
outs
ss
push
icebp
dec
(bad)
ins
fisubr
push
mov
test
mov
mov
jo
xchg
call
jp
scas
outs
mov
cmps
add
nop
into
rcl
outs
mov
mov
xchg
fst
aam
adc
(bad)
push
mov
mov
xor
xchg
sahf
jo
xchg
mul
add
dec
jle
jmp
es
push
lods
add
or
cmps
les
imul
push
xor
xor
(bad)
or
mov
leave
and
addr16
rcl
mov
mov
and
movs
outs
ret
pop
mov
xor
scas
push
or
pop
push
jo
cmc
cmps
pop
push
push
in
cmp
test
sbb
adc
ret
push
pop
stos
imul
dec
push
cmp
dec
or
adc
adc
xchg
data16
mov
test
js
sub
outs
jmp
dec
sbb
dec
push
jle
push
adc
sub
fst
aam
scas
mov
pop
jmp
add
loopne
ret
adc
test
fbstp
jae
inc
sub
and
push
jl
(bad)
add
add
into
push
push
dec
jne
add
cwde
push
out
popa
shr
push
cmp
sbb
mov
js
xor
jle
push
sbb
push
iret
les
inc
popa
sub
retf
(bad)
inc
pop
nop
dec
push
jo
mov
push
inc
and
out
ds
push
inc
adc
lock
iret
test
mov
jo
not
xor
add
clc
and
mov
cmps
popa
ret
ret
and
inc
sbb
cmp
dec
ds
cmc
and
push
add
or
(bad)
(bad)
pop
(bad)
push
or
sbb
xchg
sahf
mov
nop
xchg
inc
dec
xchg
cmp
(bad)
and
outs
adc
ds
nop
or
push
push
cmp
add
mov
inc
pop
cmp
push
sub
bound
xor
adc
xor
dec
pusha
xor
xchg
jbe
pop
xor
nop
jno
inc
or
pop
cmp
ficom
adc
push
ror
test
inc
mov
loop
dec
add
and
cmps
out
inc
add
add
mov
sbb
pop
mov
outs
inc
test
push
mov
adc
fcomp
mov
mov
aam
sahf
cmp
(bad)
mov
mov
cmp
sbb
cmp
pop
(bad)
loopne
mov
jno
lock
into
es
and
xchg
nop
loope
adc
(bad)
adc
inc
leave
ss
out
mov
movs
out
mov
fdiv
or
xchg
mov
sbb
push
sbb
(bad)
out
ficom
js
nop
or
or
mov
push
movs
mov
js
sbb
mov
push
cmp
jp
cs
ins
cmp
cs
mov
jne
xor
scas
movs
addr16
mov
(bad)
es
adc
mov
lods
or
push
push
outs
jo
xor
mov
sbb
sahf
push
adc
inc
push
out
xor
add
mov
ficomp
into
cwde
add
test
xor
pop
mov
mov
cmps
pushf
jp
jmp
push
push
push
push
xchg
xor
je
loopne
xchg
push
mov
(bad)
jmp
ja
push
div
(bad)
push
movs
add
dec
nop
xchg
sar
jmp
mov
loopne
xchg
add
pop
mov
pushw
push
jbe
call
rol
es
inc
pop
mov
test
mov
inc
push
push
loopne
fst
inc
das
pop
test
fidiv
jo
dec
sbb
xchg
sbb
cmp
push
cmp
push
push
push
les
xchg
jno
into
scas
fild
push
sar
in
add
sbb
outs
inc
add
inc
cwde
in
cmps
es
ret
xchg
sbb
dec
(bad)
push
xchg
sbb
shr
out
sub
inc
mov
inc
jbe
sub
sub
loope
cdq
mov
cmp
xchg
test
mov
sahf
clc
imul
(bad)
push
push
inc
and
outs
aam
or
push
jo
(bad)
sub
add
inc
call
outs
dec
or
adc
movs
ret
jle
mov
push
push
(bad)
xor
lock
push
or
and
mov
adc
out
or
or
js
adc
or
push
cmps
mov
cmps
push
dec
fcom
(bad)
mov
add
das
dec
push
mov
or
pop
mov
and
add
sub
jne
out
(bad)
and
pop
xchg
mov
mov
or
xchg
sub
inc
add
add
dec
sub
hlt
add
adc
nop
sahf
(bad)
dec
sub
xor
fidivr
adc
mov
push
jmp
inc
inc
cmps
les
rcl
pusha
add
les
lods
and
jo
and
lds
push
jle
add
and
scas
mov
call
jnp
(bad)
jbe
jmp
sub
shr
adc
test
fimul
add
popa
(bad)
dec
loopne
add
into
adc
push
(bad)
fidivr
push
mov
ds
(bad)
sbb
xchg
mov
push
mov
retf
popa
add
sahf
xchg
data16
jle
jmp
inc
call
mov
sbb
xor
adc
xor
gs
enter
xchg
add
or
dec
jbe
movs
mul
jmp
adc
pop
pop
add
xchg
js
mov
xor
ss
sub
or
pop
mov
sub
pusha
imul
shl
and
fiadd
pop
outs
xor
mov
or
inc
test
mov
aam
adc
into
dec
push
sbb
mov
data16
push
pop
push
shl
pop
cmps
(bad)
add
inc
mov
add
and
mov
push
xchg
sbb
add
sbb
xchg
dec
jo
mov
mov
xchg
ficom
call
push
pusha
sahf
push
pop
and
leave
les
sub
push
out
add
sbb
push
adc
popa
adc
dec
or
mov
mov
dec
out
fisub
(bad)
(bad)
sbb
xchg
dec
mov
(bad)
sbb
scas
out
sbb
pop
(bad)
pop
adc
and
jecxz
(bad)
sbb
push
js
and
xchg
test
rcl
arpl
adc
pop
data16
ss
xor
adc
sub
es
test
pushf
add
fs
push
test
xor
dec
(bad)
push
add
call
(bad)
xchg
pop
pop
add
xchg
pop
push
stos
loopne
mov
out
push
dec
push
sbb
loopne
test
addr16
xchg
mov
pusha
call
or
sbb
pusha
pusha
jg
movs
ror
mov
xor
xor
xchg
lods
dec
cmp
rcl
or
pop
sahf
sub
data16
lock
push
(bad)
jle
icebp
mov
enter
aaa
lea
movs
rcr
inc
inc
mov
sbb
call
pop
imul
add
clc
in
imul
es
xchg
push
xchg
jo
enter
enter
add
mov
sbb
or
pushf
pop
outs
out
inc
push
retf
push
ja
add
mov
dec
js
cwde
push
adc
mov
xchg
and
mov
out
xchg
push
push
push
es
mov
push
pop
dec
adc
rcl
push
mov
les
daa
adc
(bad)
sbb
nop
adc
sub
mov
inc
out
sahf
pop
add
push
popa
push
dec
out
je
or
xor
and
dec
sbb
jle
scas
aam
pop
pop
inc
(bad)
test
dec
loopne
ret
out
fs
dec
cmc
out
mov
pop
out
cli
and
ins
enter
push
xchg
xchg
push
(bad)
push
mov
ins
leave
icebp
adc
add
xor
call
ror
ss
mov
mov
sbb
adc
jbe
sbb
daa
jle
sahf
mov
jnp
lock
scas
xchg
inc
rol
inc
sahf
mov
pushf
rcr
pop
sbb
jmp
(bad)
adc
retf
ror
rcr
sbb
push
or
mov
mov
ins
jle
or
sub
pushf
add
pop
xor
pop
adc
sub
sahf
sub
mov
push
sub
lock
add
icebp
and
push
xor
xor
test
mov
sbb
sub
sbb
sbb
scas
outs
adc
inc
dec
dec
xlat
push
and
sahf
sub
mov
(bad)
mov
inc
cmp
imul
sbb
into
es
pushf
add
jle
pop
mov
mov
sub
push
and
jo
or
retf
mov
call
pop
push
pop
out
dec
js
pop
push
outs
xlat
test
add
adc
mov
push
adc
and
jno
call
add
or
out
push
sbb
bound
test
sub
dec
ss
rol
arpl
or
mov
loopne
ja
cs
ins
xchg
or
add
das
dec
test
mov
mov
mov
inc
inc
mov
fdivr
punpckhbw
(bad)
adc
shl
add
mov
adc
mov
outs
push
test
dec
fisub
je
jmp
clc
xor
retf
mov
scas
push
sbb
sahf
xchg
push
dec
ss
popf
dec
mov
es
inc
sbb
sbb
xor
ficomp
bound
add
add
scas
(bad)
sbb
imul
jge
dec
sbb
jle
push
jle
push
lock
gs
inc
fidiv
pop
sub
sbb
(bad)
mov
cmps
ds
pop
xchg
mov
into
mov
push
dec
popa
icebp
add
xchg
test
adc
dec
and
xchg
push
cmps
xor
loopne
dec
movs
inc
icebp
and
and
cmp
jae
or
cmps
fwait
js
sub
(bad)
mov
out
out
js
hlt
xor
inc
pop
adc
rcl
add
(bad)
or
pop
addr16
mov
mov
imul
aaa
out
data16
xor
cmp
or
(bad)
idiv
lods
popa
loopne
outs
loopne
cmp
sbb
xchg
push
rcl
or
nop
push
cwde
les
les
scas
push
fsubrp
or
push
and
dec
pop
scas
cmps
push
movs
scas
or
jbe
cmps
and
push
clc
div
mov
movs
mov
sahf
sub
ret
mov
nop
add
mov
push
into
and
fnstcw
jo
mov
add
cmps
xchg
fcom
sub
xchg
loopne
ret
sar
sub
xchg
mov
popa
inc
mov
fdiv
mov
cdq
jbe
test
xor
push
ja
pusha
hlt
add
cwde
out
push
nop
inc
outs
xor
push
add
pop
shl
into
pop
xchg
rcr
cmp
jbe
dec
push
lock
dec
push
rcr
inc
sbb
(bad)
xchg
(bad)
push
loopne
xor
and
unpckhps
(bad)
dec
jbe
ret
out
inc
push
add
xor
test
push
xchg
dec
inc
psubsb
xor
fsubrp
add
outs
(bad)
add
push
push
jle
mov
cmp
xchg
add
jle
inc
je
xor
pop
test
sbb
sahf
ja
loopne
add
jnp
es
mov
xor
icebp
inc
or
out
movs
mov
inc
pusha
add
mov
lods
jno
pop
xor
add
pop
push
out
inc
push
imul
and
mov
fs
and
ds
call
jno
add
cmps
push
outs
jge
popa
push
ficom
add
push
cs
xor
add
js
mov
push
inc
in
and
inc
xchg
push
test
cmp
push
push
inc
stos
mov
(bad)
push
sbb
inc
xor
jp
push
sub
add
and
inc
xor
mov
lock
test
mov
je
inc
sbb
mov
xor
cs
adc
pop
popf
test
xor
cmp
inc
(bad)
jle
add
dec
add
or
mov
xchg
xor
and
hlt
and
inc
jbe
sahf
add
adc
dec
adc
and
sbb
mov
fcomp
test
dec
jo
in
push
(bad)
lock
nop
push
pop
jle
ret
fmulp
lock
add
icebp
pop
mov
adc
jno
mov
(bad)
mov
scas
push
adc
ss
ss
sbb
mov
cmc
aam
(bad)
pop
inc
pop
inc
push
movs
ds
lea
and
push
call
mov
mov
or
in
push
pop
jle
add
xchg
xor
inc
cmps
ds
ret
or
popa
rcr
cmp
xchg
mov
or
into
adc
mov
and
add
mov
xchg
sub
or
cwde
movs
and
xor
ss
out
sub
jb
push
jbe
psadbw
mov
cmps
clc
and
pop
dec
sbb
outs
sbb
or
pop
les
ret
inc
lock
push
jo
xlat
mov
dec
mov
push
popa
data16
mov
mov
jo
mov
dec
inc
scas
or
mov
adc
sub
into
xchg
push
mov
enter
jle
pop
adc
mov
push
(bad)
fiadd
push
add
clc
pushf
sub
push
push
xor
sub
(bad)
push
jecxz
ret
retf
test
loopne
add
and
fisub
push
ret
scas
push
jle
(bad)
jp
outs
ret
mov
inc
mov
push
out
pop
movups
xchg
jle
push
inc
jp
dec
push
add
add
loope
enter
push
ror
test
enter
xor
xor
sbb
or
xor
dec
dec
inc
(bad)
adc
cmp
jl
(bad)
ficom
jbe
sub
test
mov
ins
add
rcr
sub
scas
push
fs
cmps
push
mov
xor
add
sub
push
pop
ds
and
ror
xor
fdiv
pop
leave
and
sub
faddp
pop
jbe
and
and
dec
test
pushf
or
rcl
dec
and
inc
sbb
push
cmps
xchg
and
scas
es
push
sbb
mov
retf
pusha
add
or
cwde
cmp
(bad)
popa
jbe
add
mov
ror
aam
add
adc
jo
pop
daa
push
test
icebp
test
(bad)
mov
and
cmp
js
dec
xchg
inc
pop
mov
scas
test
dec
sbb
ss
pop
add
xor
and
push
and
data16
dec
or
ds
xor
jo
and
scas
(bad)
mov
ret
out
out
xchg
jo
mov
push
mov
inc
add
das
mov
inc
sahf
call
xor
xchg
or
div
push
add
push
lock
xchg
add
loop
ret
push
imul
out
pop
adc
xchg
out
ss
push
jo
pop
push
push
inc
xor
lahf
xor
and
or
jp
pusha
fidiv
push
adc
or
ret
jns
dec
push
mul
push
push
test
cmps
xor
xchg
add
and
push
jle
arpl
push
fmul
sbb
mov
or
mov
xchg
sub
daa
jo
pop
or
and
and
nop
sub
push
(bad)
xchg
or
dec
mov
cs
clc
outs
mov
push
push
and
adc
push
cs
sbb
test
into
dec
inc
dec
es
inc
sahf
mov
gs
out
push
prefetchnta
call
jo
sbb
mov
pop
or
call
pop
ds
scas
xor
nop
aas
out
push
cs
xor
sub
push
mul
or
(bad)
push
dec
xchg
mov
mov
jge
push
mov
mov
add
inc
xchg
push
xchg
repnz
xor
push
mov
mov
push
inc
jge
inc
add
pop
push
add
pop
bound
sbb
sub
fimul
sbb
into
ds
pusha
and
(bad)
js
push
or
(bad)
fiadd
push
push
inc
and
sahf
(bad)
jb
popa
das
call
xchg
jmp
mov
mov
ret
movs
and
add
mov
mov
dec
push
adc
push
mov
pop
pushf
fadd
dec
dec
dec
outs
adc
or
ins
je
adc
add
or
xchg
pusha
cmps
push
mov
add
or
clc
aaa
xor
mov
(bad)
inc
xor
scas
sbb
ja
(bad)
les
cmps
outs
and
dec
push
out
ss
cmp
sbb
(bad)
adc
and
into
fcmovb
xchg
(bad)
push
nop
das
and
fsub
xchg
outs
sbb
sahf
pushw
add
xchg
jns
or
dec
pmaxsw
inc
push
or
push
inc
pop
push
or
out
xor
inc
dec
xchg
push
pop
or
mov
push
sub
sahf
pushaw
and
adc
adc
ret
push
pushf
xor
push
mov
mov
cbw
imul
arpl
neg
adc
or
mov
adc
and
js
ret
cmps
sahf
dec
jno
cmp
push
xor
add
ret
xchg
(bad)
adc
xchg
gs
rcl
mov
(bad)
in
rol
loope
push
ss
pop
and
pop
dec
inc
(bad)
pop
pop
pop
retf
and
enter
mov
push
movups
add
into
inc
xchg
out
(bad)
sbb
sbb
ja
sbb
mov
inc
dec
sub
jle
sub
das
inc
mov
and
add
inc
cmps
jle
icebp
jle
add
or
add
sub
mov
test
adc
arpl
add
sub
data16
das
add
or
dec
(bad)
dec
add
mov
xlat
(bad)
ret
data16
dec
jp
das
adc
xor
(bad)
movs
mov
mov
cmps
push
sub
or
cmps
pop
test
jne
es
push
pop
adc
and
fnstcw
push
ds
dec
cmp
cmps
xor
ror
push
xchg
pop
cdq
sbb
addr16
data16
dec
mov
xchg
loopne
mov
movs
enter
mov
ds
cmp
xor
mov
or
inc
ficom
inc
and
or
pop
es
sbb
sbb
ds
cmp
clc
test
inc
icebp
pop
imul
es
mov
sar
mov
ret
adc
imul
aad
es
(bad)
adc
add
pop
push
aaa
sbb
scas
xchg
test
test
(bad)
outs
inc
inc
inc
jle
movs
cmc
adc
lods
data16
ins
cmp
push
mov
inc
or
movs
in
xchg
xchg
pop
ss
inc
xchg
loopne
dec
xchg
push
into
pop
ss
mov
inc
mov
xor
mov
add
dec
test
mov
inc
in
lock
(bad)
mov
adc
(bad)
cmps
xor
push
mov
xchg
cs
push
(bad)
mov
fs
adc
cmps
mov
loopne
rol
es
enter
xor
and
inc
mul
data16
xor
inc
push
(bad)
jae
sbb
sbb
jp
cs
dec
xor
xor
add
out
stos
sbb
inc
xchg
fbld
clc
adc
push
loopne
test
outs
xor
mov
outs
add
push
inc
push
dec
ret
dec
lock
retf
mov
dec
ja
push
cmps
(bad)
xor
enter
add
aaa
jno
ins
cmps
outs
push
xchg
xor
ror
mov
add
adc
mov
cs
inc
pop
mov
xchg
push
nop
add
mov
mov
and
jl
test
sahf
xor
dec
dec
push
(bad)
xor
ret
push
push
xor
push
(bad)
jle
outs
mov
xchg
pop
mov
or
cmps
sbb
jmp
bound
push
push
out
cmp
adc
push
mov
push
lea
outs
inc
mov
rol
push
daa
xor
sahf
out
cs
ret
and
dec
push
es
or
add
pop
mov
or
pop
movs
xchg
lods
adc
ret
mov
mov
mov
ret
xchg
test
push
cmp
mov
add
in
shl
push
rcl
adc
dec
add
setle
fidiv
jne
push
push
jo
push
(bad)
rol
jp
aam
cmps
sahf
inc
rcl
nop
xor
scas
xor
pop
xchg
loopne
add
sub
sbb
scas
out
ja
imul
test
mov
xchg
adc
stc
cs
js
mov
sysenter
movups
fsub
push
push
outs
xchg
jo
mov
push
cmps
test
and
je
jmp
shl
sub
ss
(bad)
daa
call
inc
add
rcr
retf
push
int3
nop
inc
cmp
mov
adc
mov
loopne
int3
cs
test
xabort
sbb
push
(bad)
call
in
xchg
push
mov
or
es
fsubrp
sbb
outs
inc
cmp
jp
shl
dec
sub
(bad)
push
xchg
sbb
(bad)
jo
test
jo
and
ss
fiadd
mov
push
or
inc
bound
nop
pop
pop
or
mov
bound
test
cmp
cmp
movs
lds
add
inc
sahf
fcmovb
add
inc
lock
and
jo
jo
loope
push
movs
pop
movs
je
cmps
xor
(bad)
into
mov
fs
sub
loope
rol
add
inc
cmp
mov
nop
ror
jo
inc
clc
dec
mov
jno
(bad)
push
cs
jb
sahf
xor
(bad)
xor
xchg
push
(bad)
adc
add
out
mov
mov
xor
sub
dec
cwde
inc
push
push
outs
mov
mov
pusha
push
add
fmul
or
mov
fs
mov
mov
add
or
and
xor
xchg
sub
add
and
or
inc
and
jno
movs
and
cmp
mov
mov
inc
pushf
adc
inc
(bad)
cmp
inc
or
or
dec
das
into
sahf
or
out
add
or
xchg
jle
(bad)
retf
push
mov
adc
mov
and
ret
out
cmp
dec
sub
(bad)
sahf
ins
mov
adc
and
or
push
mov
mov
push
out
push
sbb
call
cmp
imul
cmp
nop
add
dec
push
sbb
sbb
mov
rol
dec
mov
fisubr
inc
ret
push
or
inc
push
add
mov
(bad)
add
inc
test
or
shl
adc
lods
mov
rcl
into
inc
nop
ret
add
xchg
push
adc
es
inc
dec
add
mov
sub
and
pop
lea
lea
xor
into
(bad)
push
scas
sahf
xchg
rcl
icebp
sub
jbe
xor
shl
jp
mov
push
xchg
and
xchg
inc
sbb
pop
inc
(bad)
add
push
das
pusha
mov
test
sub
data16
adc
cs
jp
loope
push
inc
jle
jmp
test
out
push
rcr
cmps
push
xchg
sbb
mov
push
mov
into
es
cmps
fdivr
push
cmps
pop
and
jle
fst
push
pop
fwait
cmp
outs
mov
(bad)
mov
xchg
dec
daa
loop
push
push
ss
pop
xor
ds
inc
push
sbb
adc
mul
sahf
test
mov
sahf
rcl
push
xchg
out
adc
mov
or
inc
(bad)
xor
mov
cmp
pop
inc
sub
push
inc
mov
dec
sahf
inc
loope
shl
add
mov
out
popf
test
and
pop
jo
add
xor
(bad)
push
sub
aaa
outs
ss
inc
or
add
mov
pushf
sub
lods
dec
loopne
cmp
pop
ret
hlt
xchg
or
dec
add
adc
(bad)
retf
ds
dec
and
push
push
mov
sub
sbb
jle
adc
mov
and
loopne
rol
(bad)
rcl
mov
pop
ret
mov
cs
into
xchg
test
xchg
xchg
or
dec
mov
and
and
xchg
pop
xchg
sbb
xor
mov
add
(bad)
adc
xor
xchg
mov
rol
fst
fmul
test
sub
inc
push
dec
lea
xchg
lds
mov
les
dec
inc
mov
sbb
xor
les
xchg
jbe
cmp
(bad)
jne
sahf
dec
loopne
outs
pop
add
inc
jo
nop
out
inc
rcl
push
fimul
dec
mov
mov
xor
xor
idiv
cmp
ficomp
mov
retf
not
push
stos
and
cmp
add
ds
icebp
sub
cmp
dec
inc
rcr
js
inc
out
rol
rol
test
xor
and
ds
or
outs
push
jbe
dec
cmp
popa
pusha
or
jl
data16
loop
mov
and
pop
sbb
imul
add
sar
adc
jbe
ins
sub
ins
sahf
(bad)
add
inc
test
add
or
ds
add
add
inc
push
adc
mov
xchg
(bad)
mov
add
mov
add
add
add
sahf
out
push
dec
test
sub
cmps
add
add
sub
inc
outs
jo
icebp
and
or
mov
push
add
imul
jbe
sahf
sub
pop
add
xchg
push
fsubp
jbe
sbb
push
leave
dec
mov
adc
lds
dec
fimul
inc
or
jle
push
sbb
mov
inc
add
pop
loopne
sub
ror
mov
sub
and
pusha
cmp
push
add
push
arpl
fidiv
inc
or
dec
xor
loopne
cwde
push
jo
push
lea
test
push
inc
lods
test
push
dec
and
das
pop
push
arpl
mov
sbb
push
pmaxsw
popa
and
addr16
jo
(bad)
add
scas
cdq
xor
and
pop
cmp
cmp
xchg
leave
dec
or
inc
and
xor
dec
lock
nop
es
push
loope
xchg
out
dec
ret
add
retf
imul
mov
rol
rol
into
xor
adc
or
les
fiadd
gs
test
ins
inc
or
nop
jo
push
test
or
cmc
adc
dec
lods
mov
mov
(bad)
xchg
xor
xchg
add
ficom
add
mov
add
(bad)
ss
mov
dec
sbb
pop
push
push
push
jbe
xchg
inc
pop
add
ror
push
jmp
mov
push
into
pusha
imul
sub
test
inc
push
adc
into
xchg
jo
push
pop
adc
rol
(bad)
and
stc
adc
inc
ror
add
or
add
add
sbb
jo
inc
rcr
sahf
mov
xor
push
es
jbe
and
xchg
mov
(bad)
ss
stos
inc
dec
test
sub
push
aam
cmp
or
inc
inc
imul
mov
mov
nop
xchg
(bad)
lock
inc
or
gs
cmps
les
(bad)
bound
push
rcr
aam
outs
lock
add
cmps
(bad)
(bad)
push
sar
pusha
ds
mov
into
push
mov
cwde
(bad)
rcl
pop
mov
xchg
and
movs
(bad)
push
and
jbe
inc
xor
dec
push
cs
xchg
or
mov
sub
mov
mov
es
add
out
xor
mov
mul
mov
(bad)
arpl
push
dec
imul
add
js
push
cmp
mov
ss
adc
xor
xchg
enter
div
lods
inc
or
push
bound
dec
sub
lods
mov
push
or
xlat
enter
mov
push
mov
nop
inc
or
ss
cmp
push
and
push
jmp
xor
mov
sbb
cmp
inc
pop
mov
out
bound
movs
rol
test
push
es
ret
push
inc
sbb
mov
sbb
cdq
gs
mov
lods
bound
dec
mov
mov
or
inc
popa
push
aaa
inc
rcr
push
dec
or
fst
add
push
dec
rol
and
xchg
pop
push
retf
adc
scas
pusha
push
mov
or
mov
push
jne
scas
jo
jbe
pusha
or
mov
sbb
pusha
mov
push
adc
lods
sub
jo
(bad)
add
dec
dec
test
mov
arpl
xor
dec
jle
icebp
adc
js
sahf
push
xor
adc
jle
aaa
jo
scas
out
icebp
test
out
jo
adc
jne
(bad)
pop
jle
xchg
cmc
add
(bad)
jne
jb
leave
mov
or
and
ficomp
dec
xor
inc
rcl
mov
inc
add
outs
ret
push
xchg
mov
adc
(bad)
sub
fisub
pop
or
ret
adc
rol
xor
inc
into
ficom
mov
inc
xor
pop
push
and
lea
outs
clc
out
je
sbb
test
push
clc
out
xchg
outs
test
mov
pop
outs
or
test
scas
test
enter
push
aam
jbe
into
mov
test
pushf
sub
cs
nop
adc
sbb
jne
cs
jo
or
or
add
ds
cmp
mov
(bad)
push
sbb
push
cli
sbb
(bad)
xor
clc
cmp
into
adc
cmp
push
cmp
mov
not
ret
cmc
inc
ss
inc
or
cmp
fmulp
call
add
dec
(bad)
push
(bad)
leave
dec
sbb
add
dec
lods
and
xor
pop
jo
jmp
jmp
xchg
adc
push
push
add
mov
add
sbb
sahf
out
ins
or
add
out
push
cmps
test
xchg
push
lock
push
inc
ret
jle
cmps
xchg
movs
test
adc
add
div
fidiv
inc
dec
mov
dec
(bad)
enter
and
push
mov
mov
pop
push
cwde
ss
data16
into
(bad)
imul
(bad)
movups
pop
sbb
mov
cmp
daa
adc
xchg
sbb
inc
xor
jo
rol
(bad)
push
sub
xor
dec
push
and
inc
sbb
ss
pusha
cmp
jbe
push
outs
es
add
call
loopne
adc
ja
je
jbe
xor
push
mov
jno
cs
dec
retf
sbb
jecxz
test
push
les
jo
sahf
inc
rcl
push
ror
adc
push
xor
inc
jp
rcr
push
sub
ficom
add
and
daa
dec
inc
sahf
jne
sub
mov
push
int3
retfw
xor
retf
xchg
inc
inc
arpl
cmps
mov
sub
test
inc
dec
jle
popa
je
mov
pop
jae
add
push
pop
sahf
adc
imul
and
cmps
pop
mov
js
inc
or
cmp
mov
ss
mov
scas
mov
cmp
test
pusha
cs
out
pop
add
sbb
push
jge
and
jmp
and
push
xchg
or
in
push
out
cmps
adc
jle
pop
mov
xor
and
pop
pop
or
add
mov
popa
xor
xchg
adc
xchg
sbb
mov
jle
push
(bad)
inc
or
push
dec
out
rcl
jo
inc
xchg
into
add
jns
jp
and
push
out
mov
jne
mov
push
es
and
sbb
mov
push
mov
les
xchg
xchg
gs
mov
mov
dec
sahf
mov
ins
pop
out
and
dec
es
jno
mov
inc
test
xchg
inc
and
pop
rol
pusha
push
xor
pop
push
mov
mov
or
cmp
sbb
pop
sahf
inc
mov
mov
jbe
push
xor
cwde
nop
add
dec
push
or
jle
rcl
ret
push
pop
dec
js
ss
sub
daa
sub
inc
popa
add
enter
out
loope
loopne
cwde
push
ret
ins
mov
aam
test
(bad)
mov
outs
inc
and
sub
xchg
jbe
leave
dec
js
and
in
out
push
ds
push
push
xchg
pusha
mul
push
push
add
push
sub
add
inc
retf
ror
xchg
or
ret
jmp
ret
sahf
cs
pop
rol
les
(bad)
rcr
sahf
jmp
sub
(bad)
(bad)
je
mov
jo
sahf
call
outs
daa
pop
outs
adc
xor
jae
sbb
dec
xchg
lea
es
dec
jle
and
scas
push
jmp
neg
lock
fwait
ss
outs
popa
push
push
cwde
dec
dec
fiadd
inc
arpl
or
(bad)
ret
push
mov
pop
sub
pop
push
mov
mov
adc
pop
(bad)
jae
call
push
gs
je
nop
jno
sbb
inc
loope
dec
bound
ins
or
mov
push
sbb
mov
popa
or
or
pop
jno
ss
test
retf
out
fisub
add
inc
inc
mov
or
inc
inc
lock
mov
add
scas
ins
mov
outs
jp
(bad)
jmp
outs
jns
cs
and
push
sahf
out
pop
dec
or
(bad)
and
into
cmps
or
cmp
out
dec
sub
mov
dec
mov
mov
ins
inc
cmp
fiadd
xor
pop
push
adc
push
bndldx
or
dec
mov
or
loop
test
sbb
cmp
cmps
and
popf
test
adc
popa
adc
pusha
xor
pusha
dec
add
outs
pop
inc
mov
adc
xlat
sar
push
push
mov
push
scas
cmc
mov
mov
popa
ret
pop
fidivr
cmps
jo
pop
inc
data16
mov
and
dec
js
ss
xchg
mov
adc
push
data16
or
or
jp
cmps
sahf
fisub
push
jle
xor
dec
adc
jno
inc
es
or
data16
ret
push
and
retf
add
push
pop
les
push
adc
xor
cs
dec
xchg
xor
nop
add
mul
sub
and
mov
imul
mov
mov
add
or
mov
push
xchg
iret
test
gs
scas
add
mov
add
mov
lock
clc
mov
mov
sbb
into
ss
jbe
add
scas
es
or
push
inc
out
push
mov
add
jbe
scas
xchg
test
ja
loope
nop
inc
dec
addr16
loope
mov
adc
adc
sbb
loope
js
cs
dec
mov
add
cs
mov
inc
sahf
or
popa
inc
popa
into
push
push
pop
addr16
cdq
imul
or
fisub
jbe
inc
push
addr16
jmp
jo
cs
add
ins
sahf
inc
push
mov
aaa
test
icebp
lea
mov
nop
idiv
call
ficomp
push
cmp
xor
or
push
ins
pushf
inc
nop
mov
repnz
popa
sbb
pop
xchg
cmps
push
sub
sbb
mul
sub
adc
or
xchg
inc
movs
push
jbe
push
mov
es
xor
bound
dec
jp
jne
iret
lock
leave
hlt
mov
jle
scas
sub
mov
dec
mov
cmps
mov
sub
sbb
xchg
or
cmp
sahf
or
or
add
add
jbe
and
(bad)
or
adc
and
lods
dec
fimul
jle
es
call
and
ss
lods
imul
push
or
xor
gs
sbb
popf
sub
cmp
nop
push
daa
in
inc
ss
mov
sahf
scas
mov
retf
inc
data16
mov
dec
lods
imul
push
sbb
outs
xchg
in
mov
mov
dec
add
or
nop
add
mov
push
scas
xor
scas
lock
inc
dec
xor
daa
ret
xchg
pop
inc
out
adc
sub
push
push
adc
add
(bad)
push
dec
mov
outs
xor
into
fimul
call
xor
sub
out
adc
pop
cs
into
xor
loopne
shl
pop
push
rcr
xchg
pop
out
ss
xchg
xchg
or
mov
and
push
(bad)
xor
xchg
inc
das
test
push
xchg
sbb
adc
es
adc
sbb
aad
xor
xchg
cmps
sub
out
sbb
xchg
push
sbb
add
es
mov
add
or
inc
sbb
out
add
xor
and
test
es
inc
test
pusha
sbb
adc
push
mov
(bad)
cwde
add
test
push
fcmovb
xchg
movs
add
ret
shr
push
nop
rol
sbb
and
out
pop
dec
js
out
cs
ret
push
(bad)
or
mov
mov
push
add
lock
and
outs
jmp
ins
ds
dec
xor
add
xor
xor
add
xchg
ss
movs
add
xchg
xor
adc
push
adc
and
rcr
adc
xor
ret
ss
mov
jle
out
imul
cdq
pop
mov
lock
dec
dec
nop
inc
mulps
push
clc
sub
outs
push
sbb
addr16
xor
jle
es
sbb
into
jbe
out
add
leave
ficom
adc
mov
push
dec
adc
or
ds
ds
dec
sbb
xchg
sub
ss
push
sub
lds
and
imul
dec
scas
xchg
push
inc
call
mov
add
push
add
cmp
sbb
scas
pop
ficom
out
jmp
mov
(bad)
xchg
jle
dec
mov
push
inc
into
je
add
push
xor
add
dec
mov
ss
test
adc
sbb
mov
mov
jle
jle
xchg
mov
ss
xchg
add
adc
inc
out
xor
rol
mov
lock
(bad)
cs
aaa
lea
dec
or
movs
neg
data16
push
adc
add
ds
sahf
mov
xor
dec
mov
into
movs
pusha
dec
lock
aam
sahf
mov
call
fcom
pop
pop
xor
invlpg
loopne
pop
ins
cmp
sub
push
loop
mov
push
or
or
push
ss
xchg
cmps
add
and
dec
jle
jo
loop
xchg
out
push
xchg
xchg
es
add
dec
pusha
ds
push
push
mov
test
mov
enter
retf
cli
add
scas
dec
inc
fadd
rol
mov
and
jbe
push
scas
mov
and
jb
mov
mov
out
push
push
pop
mov
and
sahf
(bad)
jo
inc
adc
es
xchg
jp
adc
test
inc
mul
add
sbb
add
or
cdq
ss
in
enter
jle
or
push
das
or
inc
pop
fidivr
shl
dec
popa
cs
inc
jle
sub
imul
and
xchg
cs
mov
cwde
push
and
es
or
fld
add
xchg
jle
xlat
adc
nop
mov
stos
push
pop
dec
and
fadd
sub
ret
jns
jnp
call
lods
mov
pop
push
es
arpl
js
mov
jbe
inc
scas
sub
sub
adc
pop
xor
cwde
inc
inc
aam
push
xor
add
lods
and
mov
loope
jmp
cmp
pop
push
es
push
cmp
rol
jo
sbb
or
jo
(bad)
imul
inc
ror
pushf
test
push
mov
xchg
add
or
push
push
adc
lock
adc
rcl
sub
push
sbb
cli
and
push
add
push
(bad)
xchg
inc
add
imul
push
rcr
ds
mov
jle
xor
nop
call
add
pop
adc
(bad)
data16
arpl
inc
cs
icebp
adc
or
xchg
and
sub
xor
dec
(bad)
mov
pop
and
pop
scas
mov
mov
inc
jle
xlat
push
imul
sbb
inc
es
fs
push
or
add
bswap
ret
(bad)
pusha
test
sbb
gs
mov
loope
cmps
mov
push
inc
inc
xchg
pop
daa
loopne
ja
inc
test
pop
mov
sub
je
mov
sahf
scas
inc
jle
push
nop
pushf
push
mov
and
xchg
add
xchg
or
test
loope
sahf
out
sbb
inc
fisub
cs
test
dec
adc
push
or
push
(bad)
push
dec
sbb
call
xor
add
call
ror
jmp
popf
add
fisub
xchg
or
(bad)
imul
inc
push
dec
adc
(bad)
ds
sbb
stc
xchg
aam
ret
dec
dec
sbb
pop
rol
out
das
adc
sar
add
cmc
ds
add
inc
or
mov
lods
outs
add
arpl
and
lods
dec
adc
fst
and
push
push
repnz
sub
bound
ret
shr
jmp
js
adc
xchg
sub
dec
mov
adc
fcomp
aas
inc
cmp
aaa
push
xor
inc
pop
adc
dec
sbb
sbb
retf
and
popa
adc
xchg
imul
pop
jo
popf
inc
sub
push
data16
test
cmp
inc
cdq
and
leave
nop
cmp
pop
push
xchg
sub
jbe
mov
add
scas
(bad)
xor
xor
xchg
mov
sub
sbb
dec
idiv
push
push
push
pop
xchg
xor
sub
cmp
push
push
rcr
xor
inc
mov
jge
sbb
daa
cmp
cmp
push
push
or
fiadd
pop
mov
rol
push
mov
mov
out
faddp
or
into
pop
dec
ins
shl
dec
xchg
ret
mov
jbe
dec
sbb
mov
into
mov
or
mov
or
push
data16
bound
or
clc
push
push
js
clc
imul
cmp
push
xchg
mov
or
mov
push
and
xchg
inc
js
pop
dec
cmps
lea
dec
scas
push
push
ins
sub
add
rcl
(bad)
dec
popa
(bad)
sbb
nop
fwait
xor
jle
pop
ins
cmp
or
or
jmp
push
call
mov
dec
xchg
add
loopne
push
into
sbb
call
dec
sbb
mov
inc
(bad)
xchg
pop
xchg
push
jbe
adc
adc
loop
jbe
ds
push
xor
retf
cmps
pushf
div
movs
xchg
mov
test
ret
shl
je
push
mov
out
push
out
test
lods
sahf
or
or
movs
cmps
add
ds
pop
es
add
fldcw
std
jmp
fadd
sbb
mov
ss
ror
adc
pop
pop
jne
dec
call
or
loopne
jmp
lock
mov
cmps
ss
lods
int3
or
call
outs
outs
and
adc
sub
sub
push
sahf
fisubr
mov
adc
or
(bad)
inc
mov
rcl
jmp
xor
mov
add
mov
jo
cmps
sbb
sbb
cmp
rol
(bad)
push
inc
xor
jbe
cmp
ret
fisubr
push
pusha
and
fld
enter
mov
jbe
sbb
call
cmp
sbb
inc
setge
cmp
sub
jnp
sub
ss
dec
add
mov
(bad)
push
inc
or
shl
mov
hlt
and
rcr
cld
data16
xor
xor
fs
dec
out
jge
popa
and
scas
jle
add
add
out
ins
dec
fstp
sub
popa
xchg
push
scas
push
dec
sub
push
pop
inc
(bad)
jge
jge
lea
push
movs
push
scas
dec
mov
push
inc
or
xchg
inc
sub
add
add
dec
ficom
adc
loop
inc
(bad)
retf
fisub
push
add
sub
jmp
or
lea
or
push
jmp
fcomp
sbb
push
je
or
jo
add
inc
rcl
sahf
dec
mov
mov
add
push
or
jno
add
dec
mov
mov
in
dec
push
mov
xor
add
outs
xor
inc
addr16
dec
xchg
ss
or
mov
fidiv
je
push
fcomp
mov
sub
push
dec
sbb
jo
adc
inc
xchg
jp
push
push
mov
das
sbb
jle
mov
shl
xor
imul
fiadd
push
jbe
mov
ficom
add
(bad)
ss
push
mov
adc
and
pop
ss
imul
dec
push
cmp
and
xchg
pusha
mov
push
xchg
push
mov
and
das
movs
xchg
jle
xor
add
das
out
aam
retf
(bad)
popa
inc
mov
inc
rcr
xor
push
test
xchg
adc
dec
or
xchg
add
sub
dec
mov
push
into
push
jle
sub
inc
fild
lods
(bad)
(bad)
(bad)
loopne
mov
imul
outs
adc
or
ud2
imul
push
pusha
or
test
push
or
mov
adc
cs
and
call
mov
mov
and
adc
cs
jle
cmp
and
jo
scas
fcom
adc
stos
mov
les
push
mov
add
jle
add
mov
mov
xor
add
xchg
(bad)
and
xchg
adc
(bad)
sub
bound
mov
push
mov
mov
je
cwde
pop
mov
cmps
or
mov
mov
test
push
out
xchg
pushf
add
test
inc
sbb
adc
mov
push
into
dec
inc
xor
and
cmps
adc
dec
sub
cs
rcl
inc
mov
sbb
or
add
jb
dec
mov
aaa
sub
lods
mov
or
dec
mov
aad
imul
sub
push
fcmovbe
or
push
(bad)
and
add
fisub
mov
(bad)
cmp
cdq
mov
out
dec
les
dec
jle
jp
cmp
call
add
sar
call
inc
pop
inc
adc
jbe
push
and
push
call
jge
out
dec
mov
ret
pop
push
push
movs
xor
test
popf
add
inc
cmp
neg
adc
sbb
adc
pusha
jbe
adc
mov
push
add
push
mov
add
dec
rcr
call
shl
imul
jp
sbb
cmps
push
sbb
sbb
adc
mov
xor
bound
jbe
(bad)
aaa
popa
and
push
xor
or
pusha
or
movs
mov
cmp
cs
jge
dec
pop
fcomp
add
sub
xchg
call
(bad)
dec
xor
sbb
das
push
xchg
or
addr16
(bad)
stos
sbb
jbe
inc
and
push
sbb
jb
(bad)
(bad)
ds
dec
ror
mov
mov
adc
push
push
fiadd
or
loope
shl
mov
xchg
or
inc
xor
mov
inc
lods
lea
rol
jo
and
dec
dec
mov
test
and
pusha
add
data16
loopne
fs
dec
xor
cmc
es
xchg
hlt
mov
add
cs
lods
pop
test
iret
fidiv
cmp
test
push
sbb
add
mov
je
loopne
scas
pop
xor
nop
xor
mul
js
cli
into
jae
pop
jbe
mov
push
push
push
mov
ja
outs
arpl
popa
data16
dec
es
outs
push
sbb
sbb
cs
add
mov
adc
jbe
loop
stos
es
pushw
faddp
add
mov
ds
mov
cmps
xchg
cs
int3
push
jbe
scas
fisubr
mov
push
mov
jo
sub
pop
xchg
push
mov
or
dec
or
push
outs
fidivr
test
push
inc
jne
adc
outs
mov
loopne
enter
inc
or
cmp
(bad)
mov
out
jl
mov
es
lods
daa
cmp
mov
imul
pop
push
xchg
popa
push
ss
xor
ins
add
adc
xor
cmps
adc
and
call
popa
das
(bad)
ss
jo
mov
sbb
push
jp
pop
inc
test
sub
push
push
gs
and
cmps
ss
push
cmp
mov
xor
aam
jg
xchg
adc
or
mov
sub
mov
push
(bad)
mov
(bad)
xor
add
pop
ret
push
jo
icebp
es
dec
inc
push
popa
inc
add
sbb
mov
rol
ret
rcl
xor
retf
jbe
push
test
sub
sub
loopne
arpl
div
or
loopne
push
addr16
shr
push
inc
adc
xchg
into
push
push
push
add
adc
outs
dec
imul
push
inc
rcr
add
cs
add
xor
mov
jle
leave
dec
inc
mov
out
cs
add
push
neg
and
inc
or
or
xchg
cmp
jbe
jmp
xor
outs
popa
adc
scas
js
or
and
push
inc
fdivr
or
mov
mov
mov
popa
imul
ret
inc
jbe
xchg
and
mov
pusha
loopne
movs
mov
in
add
sbb
outs
sub
inc
ror
adc
jle
rol
and
test
in
xor
dec
mov
xchg
push
inc
mov
push
(bad)
sbb
xchg
les
adc
aam
xchg
jle
ds
pop
or
imul
add
or
hlt
xor
add
inc
cdq
(bad)
(bad)
cmps
add
cmp
push
aam
je
sbb
and
ds
add
mov
add
push
jns
add
fnstenv
imul
fnstcw
int3
or
dec
push
xchg
add
jo
outs
push
xchg
adc
test
test
es
sahf
cmps
jmp
push
gs
pushf
or
xor
lock
dec
push
int
and
adc
cmp
push
dec
inc
cmp
cmp
xchg
add
lock
jmp
dec
push
(bad)
xor
les
mov
push
add
xor
mov
es
test
pop
push
inc
dec
inc
(bad)
mov
push
pushw
add
ss
shr
mov
and
pop
push
gs
daa
mov
fs
adc
xchg
pop
jge
and
or
sbb
dec
cmp
jge
add
or
adc
or
push
pop
jo
int3
push
mov
xchg
jb
adc
push
movs
loopne
out
ss
cs
ss
dec
call
ret
xchg
sahf
xchg
push
test
data16
shl
push
mov
lock
add
dec
imul
pop
push
dec
(bad)
adc
repnz
aaa
mov
inc
push
cwde
idiv
add
rcl
aam
out
adc
inc
xor
push
fidiv
xor
pop
cs
mov
(bad)
xor
sahf
xor
mov
jle
cld
adc
outs
jbe
and
ins
cmp
xchg
push
pop
inc
imul
push
push
adc
(bad)
dec
jecxz
mov
add
imul
lock
xchg
and
or
or
cmps
push
ret
leave
jns
into
(bad)
sbb
sbb
push
jecxz
ret
(bad)
or
out
jne
hlt
mov
inc
or
(bad)
rol
loopne
pop
shl
xor
dec
add
mov
inc
inc
sahf
dec
(bad)
add
jne
sbb
sub
jmp
sub
or
lods
and
xchg
jbe
xchg
adc
dec
outs
into
mov
ret
(bad)
sbb
bound
aam
push
mov
dec
cmps
mov
add
fld
sbb
es
push
pop
js
pop
(bad)
(bad)
leave
rcr
sbb
xchg
rol
(bad)
data16
inc
or
ins
das
push
push
inc
mov
dec
mov
sahf
mov
or
jbe
lods
add
popa
xchg
jle
mov
xor
and
jbe
xor
pusha
nop
jo
xchg
and
mov
pop
jp
push
out
push
ror
adc
cmp
push
inc
pop
xor
lea
push
mov
outs
mul
or
add
outs
or
or
inc
jle
dec
add
add
mov
scas
test
adc
(bad)
xor
pusha
cdq
test
loope
(bad)
into
into
push
mov
enter
(bad)
cmp
mov
inc
lock
retf
jle
dec
adc
inc
jle
(bad)
and
add
xchg
jo
test
jne
mov
out
sahf
inc
test
aam
xchg
xor
or
or
push
adc
push
jbe
js
cmp
out
rol
test
jno
ds
(bad)
(bad)
adc
mov
and
pusha
(bad)
sahf
fidiv
neg
adc
test
add
xchg
cmp
data16
and
cmp
push
push
(bad)
cmps
stos
mov
(bad)
fcom
add
js
ret
and
ret
test
inc
cmp
(bad)
pop
inc
mov
cmp
push
mov
or
nop
(bad)
pop
jb
test
sub
inc
nop
inc
(bad)
push
scas
sub
or
push
mov
movs
and
mov
or
push
cmp
movups
das
addr16
call
jmp
imul
dec
and
push
out
imul
outs
or
jno
ret
bound
mov
mov
jle
jp
inc
push
dec
push
and
(bad)
xchg
jne
pusha
push
mov
cmps
rol
inc
push
(bad)
xor
adc
movs
imul
in
inc
daa
push
cmp
inc
jle
xlat
leave
in
sbb
int3
xchg
cmp
inc
jne
clc
idiv
jle
push
imul
fs
lods
xchg
add
adc
cmps
into
and
inc
xchg
movs
dec
mov
add
out
sbb
xor
pop
push
sar
xor
into
push
fwait
add
mov
(bad)
sub
push
pusha
pusha
rol
mov
cmp
and
inc
inc
cs
cs
cmp
adc
lods
movs
fsub
dec
mov
mov
push
jmp
jmp
push
faddp
fist
ret
xor
out
adc
pusha
dec
inc
cmp
or
mov
pop
shl
push
xor
cmps
cld
outs
mov
scas
jo
dec
cmp
stos
and
pop
pop
cmp
inc
cmp
sbb
(bad)
mov
and
mov
(bad)
xor
dec
out
mov
xor
(bad)
test
test
imul
xor
xchg
pop
mov
jmp
inc
(bad)
push
(bad)
test
mov
mov
push
test
or
into
pop
test
push
or
mov
sbb
xor
inc
add
inc
push
and
js
add
inc
cmps
pop
test
add
outs
add
jno
xor
jbe
dec
add
nop
and
jle
daa
xor
popa
outs
outs
cmps
adc
or
xchg
fidiv
add
nop
push
das
sbb
lds
xchg
pop
inc
jge
(bad)
push
fiadd
mov
xchg
push
pop
sbb
into
push
inc
sbb
ss
loopne
and
imul
sbb
rol
ret
sbb
push
cmp
mov
inc
xchg
jo
movs
setbe
into
add
bound
adc
add
lods
lea
mov
gs
test
test
or
mov
push
adc
div
icebp
xchg
stos
mov
push
add
aam
mov
fcom
rcl
dec
iret
and
loope
inc
aam
jecxz
and
or
(bad)
cmps
out
jno
mov
inc
cwde
xchg
jbe
inc
inc
or
mov
out
data16
cmps
je
mov
mul
or
mov
cmps
adc
inc
xchg
cmp
dec
or
movs
sbb
and
cmps
adc
mov
call
add
into
push
test
or
push
inc
or
sbb
dec
(bad)
(bad)
xchg
xor
mov
push
inc
jae
adc
dec
ins
xchg
adc
rcr
aaa
hlt
(bad)
ds
pop
les
sub
popa
push
or
sub
or
es
mov
pop
adc
xchg
outs
jo
inc
push
mov
into
loop
pop
cwde
or
jo
ror
push
daa
mov
cli
clc
jo
(bad)
and
fadd
push
out
retf
mov
pop
aaa
rol
out
xchg
loopne
imul
movs
pusha
xchg
ds
jo
and
or
outs
cmps
push
push
and
mov
(bad)
sbb
or
xor
inc
arpl
ds
add
push
rcl
pop
pop
enter
xchg
or
clc
xchg
sub
jne
pop
jno
add
pop
jle
(bad)
rcl
jbe
inc
inc
pop
dec
add
sbb
call
mov
test
xor
ss
rol
rcr
movs
les
adc
pop
pop
xchg
into
mov
dec
jmp
adc
xchg
inc
scas
scas
ret
popa
ret
shr
out
cmp
outs
idiv
xor
push
pop
or
sbb
or
into
cmp
dec
or
out
mov
or
mov
or
pop
mov
mov
cmps
fdivr
xor
ss
ss
inc
ds
es
jno
mov
adc
into
leave
jno
push
jno
movs
nop
cmps
xor
data16
and
cs
rcl
push
enter
mov
sbb
xlat
push
and
push
or
ss
jne
popa
or
out
mov
cmps
ds
ss
pop
mov
and
out
jle
imul
or
popa
enter
dec
sbb
pop
mov
xchg
push
mov
ss
adc
xchg
stos
push
shr
cmps
mov
test
push
push
nop
les
lods
xlat
cmps
push
fisub
jle
loope
pop
mov
add
mov
and
adc
xor
cmps
es
xchg
data16
sbb
mov
mov
jo
into
push
add
xchg
aaa
popa
mov
xor
push
or
clc
inc
imul
or
outs
rol
mov
jl
icebp
test
outs
push
sbb
pushw
inc
or
adc
es
or
push
mov
mov
fiadd
(bad)
adc
nop
cmps
sub
or
inc
adc
xchg
rcl
mov
pop
add
add
(bad)
dec
xor
je
xchg
sbb
adc
add
cmp
mov
or
daa
out
ss
mov
push
or
data16
ds
stc
dec
push
and
adc
mov
rol
ret
pop
adc
popa
dec
mov
inc
xor
test
das
adc
scas
push
inc
nop
xchg
sbb
dec
xchg
retf
les
out
push
mov
test
inc
jne
jbe
push
js
(bad)
fdivr
jle
add
sar
ds
dec
pusha
inc
leave
cmps
dec
xchg
pop
nop
or
inc
cdq
dec
(bad)
scas
push
movs
nop
push
lock
inc
push
xor
pop
ret
ror
loope
call
(bad)
push
and
add
or
mov
pop
or
scas
stos
add
mov
(bad)
inc
enterw
fadd
cmc
cmp
scas
push
push
xchg
inc
bound
(bad)
cwde
sahf
push
and
fisub
dec
inc
xor
dec
pop
addr16
(bad)
(bad)
test
(bad)
mov
adc
mov
push
push
test
push
mov
or
(bad)
mov
adc
rol
out
(bad)
outs
or
pop
daa
pop
int
mov
xchg
push
xchg
xlat
or
add
mov
inc
push
and
push
and
js
enter
push
add
and
push
add
xor
push
bound
push
dec
jbe
mov
dec
gs
mov
mov
xor
mov
shr
lods
gs
and
(bad)
hlt
adc
add
xchg
xor
xchg
popa
or
add
or
mov
push
ret
test
pop
ficomp
inc
inc
mov
adc
stc
cmp
lods
shr
out
inc
mov
clc
or
ss
or
test
sub
mov
push
cwde
dec
add
shr
push
and
inc
cmps
or
jo
and
add
add
push
pop
sbb
out
cmp
inc
lea
scas
inc
arpl
enter
or
scas
es
popa
mov
nop
xchg
add
movs
xchg
out
push
ror
push
pop
rol
or
movs
push
push
pushf
ss
xor
call
imul
mov
popa
(bad)
lock
xchg
xchg
and
mov
rol
es
pop
add
add
clc
test
inc
push
sub
xor
pusha
and
jbe
xchg
xchg
mov
dec
loopne
lods
or
push
outs
pusha
or
sub
mov
add
or
mov
out
push
add
(bad)
into
add
pop
arpl
loope
fs
(bad)
popa
cs
loope
inc
ss
inc
fild
push
inc
lods
dec
pop
mov
xchg
push
mov
or
add
mov
push
adc
loopne
xor
es
rol
pop
xchg
scas
dec
lds
data16
je
xchg
rcl
data16
scas
pop
arpl
pop
mov
or
neg
fwait
pop
mov
mov
pop
add
test
or
xchg
mov
lock
bound
dec
cmps
xor
jle
jbe
push
dec
add
adc
mov
jbe
mov
dec
mov
xor
ret
ss
pusha
fiadd
adc
mov
and
rcl
and
pusha
cmps
into
xchg
inc
inc
push
inc
push
js
les
jmp
mov
cmp
ret
inc
lea
push
not
cmp
test
xor
adc
into
push
mov
ja
add
mov
jno
fiadd
xor
sub
div
dec
ror
dec
inc
imul
(bad)
push
es
push
dec
popa
dec
add
push
jo
hlt
dec
out
ret
dec
je
ds
xchg
push
dec
(bad)
pop
rol
pop
leave
pop
fisttp
or
jbe
sbb
and
inc
push
push
(bad)
bound
or
(bad)
add
pop
es
add
sbb
into
cs
fdiv
loopne
or
into
clc
cmp
push
ss
cmps
sahf
movs
push
and
push
sbb
(bad)
dec
imul
test
inc
stc
(bad)
push
loope
sbb
(bad)
ss
inc
jmp
mov
pop
retf
ret
sbb
sbb
cmp
and
xchg
jp
or
adc
fsub
or
loopne
loopne
sbb
push
mov
sub
popf
dec
cwde
cmp
ds
inc
cs
jle
arpl
add
inc
mov
(bad)
enter
stc
dec
jp
sub
adc
ror
add
test
dec
test
loop
add
dec
xor
popa
out
pop
(bad)
cmp
sbb
push
and
dec
dec
xor
sub
cmp
cdq
lock
xchg
data16
ror
(bad)
cmps
mov
inc
jle
outs
mov
lea
and
mov
dec
pusha
mov
mov
jle
inc
mov
push
inc
scas
jle
sar
adc
out
outs
ss
and
mov
dec
(bad)
pop
add
add
lds
ss
mov
mov
mov
cmps
mov
cmp
mov
xchg
ss
imul
jmp
or
sub
cs
das
or
inc
cwde
mov
into
mov
or
fimul
(bad)
mov
inc
jmp
add
xchg
and
and
push
data16
imul
and
pop
and
inc
test
or
cmps
(bad)
out
cmps
push
sbb
mov
sub
jo
mov
out
rcl
jmp
push
les
adc
scas
inc
mov
lds
mov
ret
jae
push
inc
fistp
xchg
test
inc
push
test
mov
or
or
lahf
inc
or
or
or
nop
nop
add
inc
xchg
inc
lods
int3
sahf
data16
adc
not
test
xchg
sahf
pop
add
ret
push
xchg
pop
loopne
mov
pop
cmps
out
rcl
je
mov
mov
push
and
mov
inc
js
cmp
(bad)
aaa
lods
pop
mov
mov
dec
inc
xchg
daa
sub
xor
push
add
out
ins
ins
pusha
and
sbb
jle
adc
gs
mov
mov
mov
sub
outs
cdq
dec
jo
cmp
push
xchg
pop
pushw
ins
mov
sub
and
imul
jle
fbld
push
push
jne
xchg
dec
clts
inc
sub
scas
mov
into
retf
xor
adc
or
mov
push
or
or
jbe
dec
(bad)
daa
sbb
add
bound
xchg
add
ss
test
mov
cmp
adc
inc
sub
xchg
cmps
jmp
xchg
add
sub
xor
into
div
(bad)
add
xor
add
jge
cmps
add
(bad)
js
js
test
je
out
sbb
ss
inc
dec
imul
add
cmp
pop
adc
pop
sahf
xor
mov
nop
enter
ds
add
jo
lock
xchg
les
xchg
sahf
or
ss
pop
popf
add
sahf
dec
stos
add
mov
push
inc
inc
das
mov
push
push
lahf
sahf
inc
shr
call
fsubr
sub
mov
dec
imul
scas
neg
xor
xlat
fsubrp
xor
adc
(bad)
sbb
inc
xchg
sub
js
gs
or
aaa
loope
iret
push
add
cs
sbb
mov
(bad)
jo
adc
dec
cdq
cs
(bad)
dec
jo
add
fiadd
leave
sbb
pop
ins
into
push
shl
out
push
xchg
or
sub
(bad)
inc
fimul
pushw
push
push
test
jle
xor
les
and
mov
loopne
dec
pop
mov
fimul
push
sub
sbb
pusha
or
xchg
sbb
inc
sub
popa
mov
into
xor
jnp
icebp
xor
inc
push
lea
mov
movs
xchg
mov
aaa
add
xchg
mov
xor
sub
pop
into
push
rcr
push
push
mov
inc
mov
jle
ror
sub
(bad)
retf
ins
fst
pusha
jo
mov
es
js
(bad)
or
shr
fdiv
mov
out
push
(bad)
dec
ret
or
rol
fcomp
push
jle
nop
add
jo
jno
sahf
test
fst
sbb
cwde
lods
sahf
xor
fidivr
sbb
loopne
out
scas
es
cs
xor
mov
and
sub
push
imul
add
cmp
dec
xchg
adc
pop
loopne
movs
scas
push
cmps
cmp
adc
cmp
data16
out
or
cmps
mov
push
sbb
inc
jle
adc
xchg
es
arpl
adc
(bad)
sahf
ret
ss
push
dec
outs
cs
inc
push
push
test
into
and
push
rol
mov
es
rcr
push
push
push
mov
jbe
adc
cmp
inc
mov
ds
xchg
push
call
cmp
rol
mov
call
(bad)
ins
push
sbb
es
sub
fimul
add
out
cmps
shl
sbb
(bad)
xor
add
mov
test
imul
movs
dec
sbb
and
dec
push
jo
add
pop
adc
or
dec
sbb
sub
sub
dec
ss
lea
pusha
inc
or
jmp
add
inc
cmp
test
xor
lods
pop
sbb
lods
xchg
retf
xchg
cmps
pop
mov
push
jae
push
adc
outs
adc
inc
sub
or
out
add
loope
cs
inc
sbb
sbb
inc
or
add
inc
xchg
mov
jmp
jo
sub
push
sub
sub
cs
(bad)
push
popa
sub
data16
es
push
adc
mov
mov
xor
add
push
mov
adc
pusha
add
xchg
jle
lea
add
loop
outs
(bad)
pop
ret
data16
pop
adc
push
cmp
adc
loop
mov
add
nop
bound
cmp
sub
jle
mov
and
les
dec
(bad)
out
mov
mov
loopne
(bad)
cmc
xchg
xchg
add
nop
fcmovb
outs
cmps
push
mov
dec
and
pusha
and
dec
jo
shr
clc
mov
cmps
dec
adc
lea
push
and
push
idiv
or
push
xchg
jbe
test
dec
push
push
or
leave
xor
dec
jp
sbb
pop
neg
(bad)
js
sbb
(bad)
mov
dec
mov
mov
lods
xor
pusha
ret
test
sub
out
mov
popa
adc
sub
dec
(bad)
rcl
dec
mov
sbb
ds
pop
xchg
mov
(bad)
and
dec
cs
pop
push
mov
push
jbe
(bad)
aaa
sub
iret
fadd
xchg
xor
je
push
push
xchg
js
jo
cmps
(bad)
movs
dec
dec
xchg
sbb
ins
dec
or
inc
push
push
es
data16
ror
sub
or
fiadd
sub
dec
les
push
xchg
pop
mov
pusha
ret
xchg
push
add
out
test
xchg
mov
pop
test
into
dec
sbb
test
mov
sar
enter
inc
push
pop
(bad)
ins
inc
or
sar
xor
inc
dec
fisttp
and
or
fsub
jbe
add
imul
gs
stos
loope
push
push
ss
xor
and
push
cs
inc
imul
xchg
and
pusha
mov
pop
and
push
into
shr
ror
push
xor
(bad)
into
fimul
stos
adc
xor
inc
sub
pop
adc
lahf
test
inc
push
add
push
hlt
add
and
cwde
xor
gs
push
inc
push
push
sbb
mov
cmps
mov
jle
push
pushf
cmp
push
push
push
dec
cs
or
or
or
cs
add
shl
xor
adc
lods
xchg
mov
jle
mov
and
add
and
xor
mov
ss
sub
adc
(bad)
mov
dec
loopne
push
inc
loopne
cwde
(bad)
mov
js
popa
dec
jbe
sub
cwde
xchg
mov
push
mov
sahf
ss
ror
rcr
(bad)
mov
movs
jp
sub
and
pop
mov
push
push
and
cwde
ss
and
leave
push
into
ds
lods
xchg
or
dec
sbb
js
sbb
cmp
pop
pop
leave
mov
fstp
adc
dec
ds
push
ins
and
cs
or
enter
push
cmps
push
call
into
jle
ret
nop
out
xor
cmp
push
push
(bad)
pop
call
mov
push
jne
sub
mov
and
dec
popa
ins
jmp
push
xchg
xchg
pop
dec
addr16
(bad)
pop
js
pop
mov
cmp
cmp
pusha
xor
ror
mov
ror
sub
pop
mov
push
and
scas
pop
ss
add
mov
xor
jo
xchg
(bad)
xchg
js
and
mov
(bad)
mov
cmp
mov
pop
fdivp
xchg
push
inc
jo
xchg
mov
add
pop
xor
xchg
sahf
dec
add
adc
xchg
add
shr
dec
nop
(bad)
out
out
pop
nop
fimul
cs
les
sub
outs
push
sbb
push
pop
pushf
gs
into
push
ds
add
cmp
push
add
(bad)
out
ficom
pusha
dec
sbb
sbb
fdivr
push
div
push
iret
add
mov
push
jo
cdq
pop
or
test
mov
and
push
ds
jp
cmps
xchg
inc
mov
imul
jbe
cmps
pop
inc
sbb
wrmsr
pusha
xor
xor
sbb
inc
dec
inc
or
scas
push
mov
push
(bad)
xchg
add
sub
ret
fst
jmp
mov
(bad)
scas
rol
dec
jle
pop
retf
cmp
pop
ret
rcl
popa
ds
xor
lock
fiadd
cmc
xor
scas
pop
inc
and
jbe
rcr
and
dec
xor
push
push
sahf
scas
adc
xor
loopne
add
stc
es
pop
adc
push
xor
movs
adc
pop
outs
adc
cdq
mov
jbe
pop
mov
lock
push
jmp
xchg
loope
arpl
dec
or
pusha
ins
mov
xchg
sub
out
cmp
mov
test
jo
xchg
out
add
nop
pop
cmp
out
sub
js
pop
loopne
or
cmp
inc
add
shl
inc
shr
push
(bad)
push
loopne
leave
or
lods
xchg
scas
push
inc
imul
lods
and
ret
add
xchg
xchg
dec
(bad)
fmulp
xchg
adc
lea
pusha
mov
or
jo
push
add
mov
jge
mov
xor
out
and
scas
xchg
mov
push
pop
sahf
add
adc
pusha
ins
mov
mov
iret
push
xchg
sbb
dec
(bad)
pushw
xchg
push
add
(bad)
cs
out
xchg
bound
data16
shl
dec
dec
popa
push
loop
fwait
sub
outs
pop
movs
pop
ret
fdiv
scas
xchg
adc
or
push
ss
ds
addr16
mov
loopne
test
mov
outs
pusha
cmp
call
adc
pop
rol
sar
mov
pop
jns
pop
push
xchg
inc
sub
xlat
jo
mov
pusha
add
push
xchg
sub
out
pop
mov
test
inc
(bad)
mov
mov
inc
and
mov
add
mov
sbb
push
push
or
(bad)
retf
(bad)
and
xchg
xchg
js
mov
pop
mov
xor
les
call
mov
sub
clc
js
lea
xor
pushf
out
xor
jo
enter
dec
add
das
into
sbb
cmp
fdiv
out
push
add
(bad)
cmps
rol
shr
into
mov
or
outs
push
push
push
and
rol
push
add
arpl
es
psraw
ret
and
scas
push
inc
sbb
outs
jo
xor
dec
scas
push
xchg
shl
push
cmp
inc
mov
or
popa
jbe
mov
mov
sbb
xor
fisubr
les
add
shl
jle
pop
adc
jbe
sahf
and
cmp
mov
jns
out
xor
inc
jge
cmp
dec
fld
add
adc
sub
xchg
or
jle
fsub
es
xchg
ss
xor
fisubr
push
jae
xchg
pop
cmp
pusha
arpl
cmp
sbb
dec
(bad)
es
or
dec
jno
adc
inc
and
imul
cmp
xchg
xchg
and
dec
jbe
mov
inc
push
pop
(bad)
fst
adc
inc
sub
popa
(bad)
cmp
ror
je
retf
pop
outs
xlat
mov
xor
mov
push
push
push
lods
data16
sbb
xlat
out
dec
push
or
mov
inc
inc
adc
add
icebp
xchg
push
(bad)
or
and
and
pop
jno
gs
sub
adc
add
scas
xor
test
rcr
pop
push
adc
adc
idiv
push
push
and
scas
push
mov
adc
test
mov
sahf
scas
push
outs
lea
and
sub
and
imul
push
dec
pop
add
push
cmps
es
popaw
push
or
dec
sub
cmps
sahf
push
jmp
inc
or
cwde
imul
push
pusha
or
dec
adc
sbb
xor
mov
inc
jno
dec
pop
xchg
jle
xchg
fisub
dec
rol
and
mov
ret
or
add
mov
gs
sbb
jb
inc
(bad)
scas
or
out
sbb
imul
(bad)
push
aam
scas
xchg
lock
jbe
dec
mov
or
ds
and
clflush
mov
ss
xchg
rcr
adc
jecxz
jmp
rol
pop
dec
or
fidivr
mov
jle
popa
popa
or
inc
arpl
ds
jle
sbb
cs
es
adc
into
(bad)
outs
mov
push
push
sbb
mul
push
add
rcr
jns
sahf
mov
xor
aaa
inc
mov
ss
test
mov
out
xchg
ss
and
adc
dec
loop
push
dec
ret
inc
cs
push
les
ror
loope
inc
pop
inc
dec
outs
icebp
inc
lods
and
dec
dec
retf
xor
add
push
loopne
test
ds
bound
add
pusha
add
inc
js
cdq
dec
les
mov
jns
sub
test
or
test
push
popw
ror
scas
push
(bad)
sahf
mov
add
push
pop
outs
rcr
loope
pop
add
add
into
inc
sbb
pusha
imul
mov
xchg
and
add
bound
pushf
(bad)
xchg
sbb
out
add
mov
adc
mov
add
sub
ja
(bad)
xor
scas
ret
dec
nop
add
out
popa
xor
xor
ficom
push
sahf
push
mov
fidiv
dec
pop
xor
nop
fiadd
xchg
xchg
push
xchg
call
outs
ss
test
pushw
and
add
data16
mov
xor
and
pop
cli
inc
or
je
rcr
pop
div
or
fcmovne
xor
push
ss
nop
(bad)
imul
outs
push
test
pop
jle
rcr
ret
sar
cwde
xor
jo
cmc
xchg
pop
inc
or
mov
movs
(bad)
outs
xchg
dec
push
mov
push
scas
mov
ds
or
pop
sub
test
dec
dec
inc
mov
sub
mov
cmp
adc
and
add
and
push
je
icebp
xchg
dec
scas
sub
mov
es
rcr
xchg
mov
dec
imul
pusha
stos
or
fdivrp
push
xor
cmps
ficomp
or
push
cs
and
cmp
test
enter
xchg
fadd
jbe
dec
lea
sahf
mov
mov
cmp
or
mov
movs
mov
add
sbb
rcl
inc
test
pop
jle
sahf
sbb
bound
mov
cmps
loopne
bound
lahf
xchg
adc
and
xor
mov
cs
cmp
lods
mov
mov
dec
adc
push
xchg
dec
pop
xor
pop
jbe
data16
mov
push
cmps
or
mov
ficom
retf
xor
sub
xchg
mov
outs
push
sahf
inc
ss
ret
xchg
pop
sub
mov
out
xor
js
push
xor
xchg
mov
js
push
es
(bad)
ss
ret
inc
and
nop
call
loop
dec
xchg
sub
fadd
out
mov
adc
jo
push
test
xor
pop
dec
push
mov
add
fiadd
sahf
xor
xchg
das
xchg
xor
xchg
xchg
dec
push
push
cmp
xchg
jo
jmp
xchg
inc
out
mov
test
mov
inc
mov
arpl
dec
mov
mov
push
or
iretw
ret
inc
(bad)
out
dec
add
inc
mov
xor
xchg
dec
mov
(bad)
and
cwde
add
push
or
push
add
mov
cvtdq2ps
jle
xor
call
xchg
xchg
loope
out
shl
add
outs
les
fimul
clc
adc
mov
xor
out
add
cwde
je
push
rol
inc
les
add
out
sbb
jb
out
mov
push
ss
sub
or
(bad)
(bad)
loope
or
push
ss
and
jo
out
jmp
sahf
dec
bound
dec
push
push
and
push
sbb
(bad)
push
into
jle
ror
push
es
fisub
dec
inc
sbb
inc
js
movd
adc
or
xchg
push
xor
dec
inc
inc
pop
sub
adc
lock
push
ret
cs
shl
cs
sbb
cmp
inc
inc
sub
dec
lock
mov
xchg
loope
sahf
xchg
sbb
cmp
push
inc
push
push
out
push
imul
dec
add
repz
imul
jle
test
inc
push
xchg
out
or
je
and
add
and
xor
js
fst
popa
push
mov
aaa
sahf
fimul
or
push
dec
xor
mov
es
push
or
dec
daa
add
sahf
or
js
ins
pop
lods
inc
or
outs
out
jo
add
dec
mov
(bad)
mov
push
jl
or
nop
cmps
or
mov
push
pop
out
xchg
xor
adc
mov
dec
jl
pop
push
es
cmps
adc
xchg
push
mov
inc
dec
jmp
pop
jo
dec
into
push
mov
inc
shl
add
xchg
fild
arpl
push
or
fiadd
sbb
mov
adc
ss
mov
mov
popa
mov
and
cs
xor
call
shr
movs
push
call
xchg
pusha
sbb
cs
les
add
push
and
rcr
pop
stos
inc
adc
push
xchg
je
push
and
mov
add
xchg
cmp
js
pop
pop
cmp
dec
sahf
push
dec
ins
mov
mov
add
add
shr
into
pushw
(bad)
push
xchg
mov
push
mov
mov
es
data16
pop
shl
movs
rcl
xchg
icebp
xor
ds
adc
add
into
sbb
lock
je
bound
xchg
aaa
pushf
sub
and
push
sahf
addr16
dec
and
(bad)
xchg
jb
daa
add
jbe
mov
pop
adc
sahf
ds
mov
cs
sub
inc
add
sahf
xchg
inc
scas
imul
(bad)
call
sahf
clc
add
pop
adc
mov
inc
inc
jmp
ret
inc
cs
shr
clc
sahf
test
xchg
mov
push
into
jb
jle
test
xor
inc
(bad)
scas
pushw
adc
mov
dec
xchg
shl
mov
es
cmps
jo
mov
mov
add
push
nop
adc
(bad)
out
xlat
adc
data16
wbinvd
(bad)
mov
or
xchg
pop
bound
xchg
(bad)
imul
dec
push
push
dec
xchg
push
ins
(bad)
mov
cs
(bad)
ss
pop
dec
mov
and
add
mov
out
bound
and
in
leave
enter
dec
out
or
pop
jle
dec
ds
dec
ret
mov
es
es
dec
loop
jae
dec
pop
adc
adc
dec
jbe
push
aaa
jp
dec
sbb
(bad)
xchg
sub
or
mov
div
push
push
scas
add
imul
movs
xor
into
mov
xor
adc
(bad)
xchg
into
xchg
dec
dec
adc
mov
and
xchg
add
push
nop
inc
and
or
xchg
inc
pop
push
push
push
push
(bad)
or
pushf
(bad)
pusha
mov
scas
push
adc
inc
sbb
loopne
movups
(bad)
into
loope
add
jle
pusha
sub
push
or
cmps
pop
push
inc
test
push
push
sahf
and
lea
jbe
mov
and
jns
es
lahf
retfw
inc
movs
(bad)
push
mov
add
mov
sbb
jle
mov
push
mov
pop
push
push
push
mov
dec
pusha
rol
cmp
pop
push
adc
sbb
mov
mov
rol
or
xchg
xor
loopne
into
loopne
les
dec
jle
push
retf
jle
xor
dec
mov
(bad)
and
out
adc
lock
sahf
mov
gs
movs
and
sub
push
xchg
dec
sub
adc
and
jo
xor
data16
push
xor
cmp
add
push
push
lock
ret
aas
inc
or
lock
adc
bound
sbb
sub
(bad)
mov
push
jbe
add
icebp
inc
dec
ss
dec
mov
or
cmps
test
mov
dec
pop
pop
mov
popf
mov
jae
cs
(bad)
mov
retf
add
jle
jge
(bad)
or
push
add
cwde
into
(bad)
outs
pop
pop
add
(bad)
out
dec
cmp
cmps
xchg
mov
and
mov
popa
xchg
add
pop
leavew
pop
add
push
ds
dec
mov
je
ss
gs
test
and
nop
or
pushf
add
jne
mov
test
(bad)
and
es
(bad)
adc
xchg
pop
mov
inc
mov
not
enter
leave
and
cs
(bad)
and
lea
and
and
push
xchg
dec
loope
push
aaa
not
add
push
lock
(bad)
data16
and
inc
outs
xchg
sub
add
mov
push
push
add
test
jne
js
ja
rcl
lock
cmps
out
pop
repnz
rol
cdq
out
bound
add
shl
xor
dec
ret
push
jbe
pop
imul
into
pop
nop
push
data16
inc
pusha
and
inc
xchg
push
fiadd
cmp
movs
xor
adc
out
sahf
inc
pusha
add
nop
pop
sub
cmps
loope
adc
and
outs
aas
aam
shr
dec
outs
es
lds
inc
test
sahf
ss
scas
popa
sbb
scas
jo
adc
jno
out
and
retf
stos
stos
sub
push
mov
push
and
xor
pop
fsubp
cmps
push
mov
push
jle
dec
adc
pop
adc
push
adc
mov
arpl
fidiv
das
retf
les
push
or
out
pop
shl
jo
scas
mov
cdq
aam
ds
pop
cdq
sbb
dec
xor
into
sar
mov
cmp
xor
add
sub
(bad)
and
clc
xor
fidivr
push
adc
and
mov
mov
pop
test
(bad)
dec
cs
push
sub
adc
int3
push
pop
push
inc
xchg
push
inc
es
enter
(bad)
push
es
mov
push
add
scas
fdivr
nop
xchg
or
or
sbb
mul
inc
dec
push
daa
inc
test
outs
or
cmps
sub
test
inc
mov
jbe
xchg
xchg
pop
adc
daa
(bad)
dec
scas
inc
popa
jno
add
adc
mul
push
cmps
out
nop
mov
mov
adc
mov
out
jb
dec
inc
outs
pop
ror
dec
outs
inc
mov
or
ins
push
dec
lods
in
data16
fmulp
inc
sbb
jle
popf
mov
add
add
or
icebp
arpl
adc
inc
dec
mov
imul
outs
loop
enter
adc
or
movs
mov
aaa
inc
cmps
ins
mov
dec
jle
inc
inc
and
dec
push
mov
sub
dec
pusha
pop
push
pusha
pop
outs
mov
fs
jle
bound
xchg
add
movs
and
test
mov
dec
adc
jge
push
lods
inc
fwait
inc
mov
pop
ss
les
imul
mov
ins
jne
(bad)
push
dec
test
ins
in
pusha
push
div
dec
jb
ja
or
dec
xor
inc
push
dec
cs
sti
(bad)
cwde
dec
inc
pop
dec
pusha
xor
imul
xchg
and
push
outs
push
bound
ss
xor
outs
dec
outs
sar
cmp
cwde
and
aad
xchg
test
cmp
adc
push
dec
jb
rol
adc
xor
pop
jbe
retf
ins
pop
sub
call
fcom
or
sbb
jmp
jo
push
jl
inc
arpl
pop
mov
push
jle
ja
jp
arpl
fs
int3
ins
(bad)
sub
or
inc
pop
lods
je
xchg
add
jle
adc
inc
jb
pop
pop
adc
dec
jl
arpl
adc
gs
push
push
ja
inc
or
ins
in
push
adc
dec
xor
push
mov
push
cmps
nop
pusha
mov
test
inc
and
cmps
xchg
ins
push
(bad)
push
pop
inc
mov
bound
pop
push
inc
jne
ret
add
pop
mov
bound
jb
fs
movs
dec
into
xor
es
shl
xchg
xchg
ds
add
inc
dec
dec
xor
sub
sbb
cwde
push
(bad)
dec
push
xor
inc
ins
push
add
rcl
add
inc
fadd
in
fisub
push
ret
sub
jbe
rcl
sbb
adc
xor
inc
adc
(bad)
and
push
mov
loopne
push
mov
ss
push
mov
sub
add
sbb
or
push
xchg
dec
cwde
push
push
inc
fidiv
cmp
and
adc
ja
sbb
(bad)
popf
adc
jae
jle
pusha
popa
bound
xchg
test
mov
xor
data16
jae
jae
push
out
mov
or
cmp
aaa
in
and
ds
xchg
or
sub
jne
add
outs
push
bound
mov
aaa
mov
ja
ins
dec
lock
fs
dec
dec
pop
xor
dec
mov
dec
ret
fcom
dec
pop
gs
sbb
pusha
gs
inc
pusha
outs
xor
je
nop
loopne
dec
popa
pop
or
das
push
jo
jo
ins
pusha
rcl
push
mov
push
or
add
pop
jb
sub
dec
inc
cmp
xor
mov
shl
push
add
push
je
dec
std
das
stos
(bad)
push
jge
push
dec
xor
xor
inc
push
push
ja
pusha
dec
push
mov
add
inc
dec
jl
mov
mov
inc
test
xor
pop
jle
arpl
jne
xor
sbb
ss
ins
push
ret
xor
jle
jge
pop
aad
popa
cwde
jge
popa
arpl
addr16
gs
jbe
xor
arpl
ror
inc
inc
jno
call
gs
mov
or
popf
add
mov
call
mov
jl
dec
pusha
jge
or
aaa
dec
bound
inc
cmp
test
pop
mov
push
jl
outs
pop
push
cwde
xchg
push
push
or
rcl
push
sub
dec
jle
pop
inc
aaa
cs
push
add
shl
pop
push
jae
sbb
pop
push
ins
fdivp
or
outs
inc
push
push
mov
dec
lods
(bad)
lahf
push
jne
cmp
adc
push
ins
or
xor
jg
push
or
inc
push
dec
pop
outs
data16
sub
and
jl
inc
push
add
sbb
jb
push
pop
sub
push
cli
call
mov
dec
jo
push
dec
popf
xchg
mov
arpl
sub
imul
sub
test
js
jbe
aaa
arpl
inc
jne
add
imul
sub
adc
dec
inc
inc
ins
jae
js
jl
arpl
jbe
int3
inc
add
and
inc
outs
ja
push
add
mov
add
int3
sub
test
imul
adc
inc
inc
dec
mov
dec
push
push
(bad)
jae
imul
popa
push
arpl
inc
je
mov
adc
bound
pusha
ss
sbb
jno
inc
push
cmp
pusha
fisubr
and
outs
aaa
cld
rcl
cdq
dec
mov
or
and
inc
and
cli
jne
xor
adc
add
sbb
stos
test
addr16
push
outs
inc
call
into
arpl
or
inc
ins
js
test
pop
pop
inc
xor
inc
jb
jb
inc
inc
add
push
adc
clc
pop
ss
add
stos
retf
je
imul
push
ja
ins
gs
push
cmp
push
pusha
outs
loop
jo
aad
cwde
imul
pop
xor
dec
loopne
push
inc
jb
pop
dec
mov
outs
shl
adc
fs
arpl
and
adc
jl
xchg
ss
and
in
add
dec
jo
inc
imul
outs
inc
ret
and
jmp
push
inc
sar
and
idiv
push
add
push
push
mov
push
xor
xor
or
push
cmp
loopne
mov
jl
ret
lock
xchg
adc
addr16
sub
mov
pop
sub
or
push
jb
push
cmp
cmp
mov
(bad)
les
add
aam
xchg
jle
je
pop
call
jle
dec
jle
bound
xor
adc
out
sub
lea
call
aaa
mov
je
mov
repnz
sub
dec
pop
dec
arpl
arpl
pusha
call
jb
lods
ret
aam
arpl
dec
push
jo
test
add
jae
pop
pop
jo
sub
pop
push
inc
push
ins
bound
push
je
sub
adc
outs
push
bound
jo
jl
dec
push
and
sub
add
push
dec
mov
jl
ins
ss
push
pop
stos
cmp
dec
xor
adc
mov
adc
mov
push
test
jle
mov
or
or
push
mov
xor
jbe
retfw
call
push
push
dec
cmp
xor
rol
outs
dec
xor
es
and
push
sbb
mov
fs
call
push
jne
js
lods
outs
jp
mov
or
sbb
add
adc
jae
dec
jb
mov
sub
push
pusha
je
push
imul
test
push
and
push
xor
push
sbb
sbb
and
adc
outs
rcl
pop
popa
push
sub
xor
xchg
xchg
jl
add
xor
add
add
push
ins
arpl
and
dec
mov
gs
outs
xor
fidiv
cwde
push
addr16
add
add
push
dec
or
jo
mov
push
jne
sbb
cmp
into
cs
add
xchg
inc
jae
xor
movs
push
cmps
sub
xor
ins
pop
jo
mov
mov
jbe
add
xor
in
and
mov
add
push
push
inc
addr16
inc
mov
pop
dec
xor
inc
xor
sbb
mov
pop
sub
addr16
sub
adc
inc
out
and
outs
test
push
inc
inc
push
add
shr
pop
(bad)
fimul
inc
sub
outs
scas
inc
or
dec
je
dec
xor
or
fcomp
test
push
ins
xor
dec
inc
push
outs
and
aaa
ins
pop
dec
dec
push
stos
ret
ret
stos
sahf
push
adc
mov
popa
xor
cli
lods
sbb
retf
(bad)
cmp
or
push
inc
dec
push
fs
ins
or
push
popa
push
mov
push
cmps
mov
ins
cmp
jo
dec
and
lock
inc
jb
sub
mov
je
jbe
dec
sub
mov
je
sub
inc
dec
dec
dec
movs
push
int3
imul
retf
jo
dec
jle
pusha
or
aam
fimul
mov
jo
inc
pop
mov
fdiv
dec
je
xchg
inc
adc
sub
mov
dec
push
pop
xor
cmp
jecxz
push
bound
popa
addr16
dec
jne
xor
inc
outs
test
pusha
arpl
add
mov
sub
test
xor
xor
movs
ficomp
or
call
inc
arpl
cli
inc
or
add
adc
pop
jo
or
ficomp
(bad)
test
jb
inc
fnsave
inc
add
mov
push
repnz
push
call
inc
mov
jb
xor
add
inc
mov
mov
push
je
scas
xor
ja
push
dec
jbe
adc
push
and
xor
movs
xor
or
add
mov
(bad)
inc
and
jl
pop
shl
xor
retf
mov
inc
dec
pop
adc
jbe
test
adc
call
push
jno
push
mov
inc
dec
and
aaa
imul
xor
push
ror
outs
es
pop
and
pop
cmp
ss
sub
outs
jmp
ss
xor
or
or
push
adc
loop
pop
ins
adc
shr
inc
push
aaa
dec
sbb
xor
ins
adc
inc
out
xor
ins
pop
imul
into
push
sub
jb
push
test
push
ins
sub
jno
(bad)
call
add
fcom
or
or
fs
and
add
inc
jbe
pop
(bad)
cmp
jle
xor
stos
es
ret
pop
shl
pop
xor
inc
in
pop
je
ins
sub
inc
jne
push
cmp
inc
sbb
push
fiadd
int3
push
int3
dec
dec
inc
add
jb
mov
or
pop
cmp
jb
sub
(bad)
xchg
rcr
ins
push
pop
pusha
imul
pusha
sub
clc
add
fs
pushf
je
fcomp
adc
push
cli
jo
inc
mov
std
pop
scas
push
xor
jo
inc
inc
in
pusha
xchg
arpl
pusha
mov
imul
je
fadd
sbb
ins
jae
and
ja
into
ss
sub
jbe
xchg
test
push
rcr
push
mov
jge
xchg
retf
nop
xchg
mov
cmp
jmp
aaa
shr
sub
aaa
ss
inc
dec
fidiv
sub
mov
mov
dec
arpl
mov
jo
jbe
inc
popa
xor
mov
sub
sub
add
xor
xor
sbb
clc
push
add
jl
pop
outs
push
outs
ss
movs
xor
mov
ss
push
ja
jbe
mov
and
sub
test
mov
xor
shr
push
dec
sub
add
mov
mov
sbb
or
cwde
addr16
inc
push
sbb
push
aam
ss
cmp
and
fs
mov
cmp
sbb
scas
sub
cwde
push
pop
jb
out
jbe
and
inc
xor
cbw
mov
dec
data16
push
cmp
inc
xor
or
mov
pop
push
popa
imul
add
or
inc
addr16
dec
mov
push
inc
push
cmp
mov
inc
sbb
push
ins
xchg
inc
inc
movs
int3
inc
pusha
call
test
fadd
push
movs
mov
data16
xor
mov
outs
sub
xchg
push
aam
dec
jo
pop
push
jl
loope
dec
xchg
dec
sub
xchg
stos
add
adc
jo
push
push
call
stos
mov
in
sbb
les
test
dec
aaa
pop
arpl
sub
xchg
fsub
jl
retf
jne
push
jae
inc
jp
cwde
imul
and
aam
inc
inc
outs
loop
(bad)
push
xor
inc
pop
mov
imul
(bad)
xor
bound
fcom
push
sub
push
or
inc
ror
loopne
ja
push
adc
cli
mov
cmp
xor
dec
int3
inc
add
retf
clc
sub
clc
jno
push
dec
sub
xor
or
stos
je
add
xor
test
and
inc
dec
addr16
test
dec
or
stos
fadd
jbe
jae
out
js
shl
xor
add
pushf
mov
arpl
pusha
push
pop
(bad)
fisttp
sub
outs
arpl
into
imul
push
xor
adc
jae
add
movs
xchg
push
cmp
mov
inc
into
and
pusha
add
pop
jmp
adc
es
fcom
push
push
push
loop
ins
stos
or
inc
push
sub
dec
pusha
inc
jge
xor
or
sar
aaa
xor
repnz
push
inc
push
xor
or
dec
add
mov
xor
inc
aad
or
xor
cmp
cs
add
push
je
push
mov
mov
xchg
popa
dec
pop
push
ins
adc
push
sub
(bad)
push
jo
pop
dec
push
hlt
(bad)
pop
sbb
lock
cmp
xor
dec
mov
mov
or
inc
imul
inc
push
adc
inc
xchg
les
xor
and
jo
adc
xchg
pushf
cmp
(bad)
repnz
ss
adc
outs
dec
adc
imul
outs
mov
fisub
and
sub
call
ja
test
or
jbe
cdq
fisub
addr16
and
outs
jo
push
stos
mov
ins
outs
rol
push
loope
and
outs
ficomp
push
ins
jbe
mov
or
inc
adc
mov
jb
(bad)
jl
add
mov
pusha
(bad)
ja
xor
dec
jb
dec
outs
outs
push
inc
arpl
dec
js
and
jle
sub
add
call
push
dec
loop
lock
test
popf
sbb
add
data16
jo
push
imul
aaa
pusha
mov
ja
pop
(bad)
bound
jle
xor
push
inc
pop
cmp
stos
ins
arpl
xchg
popa
push
mov
inc
xor
cmps
dec
inc
or
push
call
(bad)
fsubr
pop
call
outs
jl
jo
call
adc
arpl
pop
les
les
and
push
xor
imul
xchg
fsub
cmp
ins
jne
or
push
popa
sbb
cmc
stos
dec
(bad)
retf
mov
pop
inc
cmp
sub
sbb
mov
dec
ins
pop
je
inc
je
xchg
mov
cmp
fs
fadd
loope
outs
int3
push
xor
mov
outs
dec
push
ins
retf
push
xchg
cmp
dec
adc
sub
adc
jo
inc
imul
out
push
fist
adc
push
cmp
mov
ja
mov
push
cdq
mov
xor
jle
or
and
pop
mov
inc
mov
test
rcl
loopne
xchg
xor
addr16
popa
popa
sub
into
(bad)
outs
sbb
sub
cmp
hlt
xor
push
and
call
scas
add
pop
push
inc
dec
js
jl
sub
test
pop
bound
mov
mov
imul
xor
inc
adc
dec
aam
add
xor
jge
push
lea
push
dec
inc
dec
inc
adc
hlt
dec
push
push
scas
push
shr
pusha
dec
sub
push
or
sub
xor
xchg
inc
push
pop
or
jb
loope
push
ins
mov
push
xor
mov
jmp
cmp
xchg
or
test
movs
mov
popa
pop
mov
popa
aaa
xor
and
push
sar
push
xor
inc
pusha
arpl
jo
adc
push
pop
push
push
add
inc
and
sbb
test
inc
push
inc
mov
xor
imul
mov
inc
call
jl
jne
jle
push
adc
bound
ja
push
xor
mov
fisubr
push
mov
stos
test
push
push
hlt
push
xor
mov
adc
mov
mov
int
add
sub
call
xor
pop
xor
ins
xchg
je
gs
sbb
test
inc
mov
call
dec
push
mov
test
push
pop
popa
push
fs
inc
ins
rcr
and
push
or
add
jg
sbb
aaa
aaa
inc
xor
inc
push
mov
inc
push
push
jae
push
out
push
inc
imul
mov
outs
inc
sub
jge
push
inc
test
pop
cmp
(bad)
fsub
imul
sub
pop
not
ins
call
stos
call
cmp
inc
push
push
(bad)
dec
outs
les
inc
xor
push
les
ins
dec
adc
ins
sub
adc
pop
xor
ss
movs
mov
mov
jae
mov
add
inc
(bad)
sub
ins
inc
sub
push
xor
add
dec
or
add
jp
jae
dec
pop
je
daa
call
dec
pusha
imul
fnstenv
cld
aam
cmp
inc
jg
arpl
push
bound
dec
nop
fwait
mov
bound
(bad)
pop
add
push
jle
xor
sahf
retf
jg
jbe
outs
xor
in
push
dec
or
add
jge
fsubr
das
out
outs
lods
inc
push
stos
out
add
nop
pusha
push
imul
jmp
ss
int
inc
sub
push
outs
inc
push
dec
popf
xor
retf
xchg
mov
sub
push
lds
movs
mov
in
pusha
(bad)
je
push
push
or
push
sub
(bad)
imul
ror
cmp
pop
imul
or
je
aad
ss
inc
jbe
data16
scas
in
pop
push
push
push
push
inc
dec
xor
jle
outs
push
dec
imul
mov
inc
inc
xor
adc
mov
sahf
ins
imul
adc
jl
arpl
leave
int3
push
js
push
jae
ja
data16
dec
push
dec
jne
pusha
xor
adc
xor
add
and
xchg
pushf
repnz
adc
xor
fidivr
aaa
fadd
cmps
push
inc
xor
xor
inc
les
xor
imul
pusha
outs
loopne
dec
inc
add
dec
and
sbb
outs
xchg
push
sub
cmp
and
push
outs
push
jb
dec
je
mov
xor
retf
or
fcmovnu
bound
push
add
push
je
je
push
dec
push
pusha
push
jb
push
mov
loop
call
aaa
or
mov
adc
dec
push
cmp
dec
xor
je
xor
xor
pusha
adc
jne
xchg
push
popa
ins
push
and
mov
dec
jo
mov
pusha
jle
test
add
cmp
jno
jo
push
data16
ins
add
not
push
es
arpl
push
sbb
dec
mov
xchg
add
or
je
test
ss
scas
dec
xor
outs
repnz
add
adc
inc
in
fcomip
or
xor
dec
ror
inc
dec
inc
sbb
or
dec
outs
pop
mov
ja
push
mov
push
jno
push
stos
mov
xor
dec
mov
jle
xor
pop
mov
inc
push
dec
inc
aaa
xor
push
xor
inc
inc
adc
adc
outs
bound
push
push
mov
int3
pop
and
or
dec
ja
push
nop
add
shr
fcomp
les
inc
dec
push
ja
arpl
push
xlat
sbb
adc
push
aaa
mov
cmp
xor
add
bound
push
fsubr
adc
xor
xor
xchg
inc
clc
inc
inc
enter
inc
xor
pop
adc
jl
loopne
and
gs
mov
bound
pop
je
dec
arpl
gs
cld
inc
jle
ss
ins
xor
addr16
ins
fbld
je
cmp
and
add
pusha
es
sub
mov
sub
inc
pop
push
pop
push
pusha
inc
cmp
popa
(bad)
in
nop
jno
sub
xor
push
jl
adc
inc
dec
or
cs
in
jle
adc
imul
ins
in
cli
xor
mov
adc
ins
inc
push
push
mov
push
inc
push
xor
rol
imul
push
cmp
cld
dec
jl
dec
or
dec
enter
dec
pop
add
lods
outs
xor
mov
gs
ins
push
test
sub
gs
and
clc
adc
dec
sub
add
int3
je
jbe
pop
ror
scas
stos
pop
pop
outs
repnz
inc
inc
push
nop
xor
xor
pusha
xor
addr16
mov
ret
mov
cmp
push
les
add
inc
aaa
adc
mov
inc
mov
inc
mov
imul
and
rol
inc
mov
fs
jb
bound
inc
xor
push
enter
cld
add
pusha
je
bound
dec
lds
jl
outs
bound
or
inc
inc
dec
add
jge
push
add
bound
sub
dec
dec
dec
jo
xor
pusha
ins
popa
push
xor
fmul
mov
pop
dec
xor
sbb
inc
inc
jae
inc
ins
sbb
retf
stos
or
in
mov
mov
dec
jo
add
add
test
or
and
jne
cmps
push
ret
mov
sbb
and
or
push
scas
outs
arpl
mov
test
add
ja
push
mov
shl
imul
cmp
jmp
pop
ror
adc
ss
dec
jle
push
mov
or
ret
aam
dec
bound
push
inc
pop
sub
or
outs
icebp
div
add
xor
arpl
cmp
xor
xchg
mov
add
xor
push
mov
dec
arpl
mov
scas
and
push
dec
je
pop
inc
hlt
pop
cmps
push
inc
pusha
jo
pushf
jmp
and
pop
inc
inc
mov
inc
push
xor
nop
lea
bound
lea
dec
push
push
push
mov
ins
addr16
mov
dec
xor
pop
stos
sub
or
sub
ret
aam
inc
inc
or
xchg
mov
movs
xchg
jbe
inc
fnsave
and
push
mov
cld
mov
push
dec
outs
pop
sub
xor
push
or
jmp
cmp
inc
push
jo
ins
aam
xor
mov
imul
cmp
mov
or
xor
mov
pusha
push
hlt
add
adc
outs
je
shr
pop
in
arpl
in
and
loopne
or
sub
mov
jno
into
cmps
sbb
rcl
ins
pop
pusha
mov
ret
ins
push
pop
dec
push
cld
and
arpl
jno
mov
imul
data16
dec
jl
cs
ret
mov
xor
in
adc
sub
jne
push
addr16
xor
xchg
add
xor
inc
add
push
je
fwait
(bad)
imul
mov
xor
bound
xchg
test
enter
push
retf
and
push
or
cld
jl
pop
fcomp
mov
ins
jne
dec
push
pop
inc
inc
jne
mov
add
nop
mov
clc
sub
ins
shl
enter
gs
jno
mov
inc
jo
repnz
clc
rcl
addr16
cli
je
inc
sub
dec
je
nop
fs
push
test
aam
push
jl
shl
xor
leave
test
cmp
mov
push
pusha
mov
or
inc
xor
jle
xchg
sub
push
adc
ds
sub
test
and
pop
cmp
test
rol
dec
inc
inc
sbb
sub
pop
or
bound
inc
dec
loop
inc
inc
jno
inc
shr
adc
shl
and
shl
int
push
jne
push
jno
repnz
ret
sub
pusha
mov
inc
add
dec
xor
push
or
outs
mov
jne
inc
sub
pusha
mov
mov
adc
mov
add
rol
pop
ins
int3
call
jbe
pusha
jne
dec
lock
push
jne
ins
xor
imul
add
in
jmp
popa
(bad)
fmul
adc
lods
pop
push
inc
dec
inc
ins
inc
rcl
dec
dec
mov
dec
out
add
jb
dec
arpl
shl
inc
pop
or
mov
inc
out
movs
cs
jp
arpl
imul
jbe
outs
mov
push
mov
xor
inc
add
cwde
call
adc
sbb
call
sub
push
and
xchg
retf
mov
sub
stos
xor
dec
sbb
push
cld
mov
jl
ins
arpl
mov
call
and
jbe
ror
aaa
movs
bound
add
mov
xchg
fld1
inc
ins
xor
dec
fwait
stos
inc
push
adc
sub
or
movs
xor
mov
dec
add
inc
or
jo
jl
push
fisub
scas
push
inc
xor
inc
inc
push
or
pop
mov
dec
icebp
dec
inc
inc
push
push
mov
mov
push
mov
add
or
xchg
sbb
ret
popa
inc
pop
mov
ret
pop
sub
inc
cmp
adc
xchg
cli
mov
mov
arpl
dec
adc
loopne
push
ja
dec
dec
test
dec
mov
aam
push
jne
mov
push
or
mov
ins
fadd
jge
and
pop
mov
enter
clc
dec
inc
inc
push
and
ins
bound
imul
cmp
add
dec
outs
dec
(bad)
add
push
call
or
pop
and
xor
ins
xor
sbb
or
ds
jne
lods
pushw
scas
mov
mov
xor
je
pushf
ins
stos
(bad)
mov
jb
xor
lods
dec
jno
test
push
ss
xchg
pop
ror
pop
test
xor
jl
inc
add
mov
push
stos
aaa
inc
adc
nop
movs
in
adc
arpl
push
push
sahf
popa
jl
adc
fisub
sub
push
data16
into
pop
inc
inc
or
pusha
pop
dec
or
les
push
aam
inc
push
jb
push
dec
jmp
dec
ds
lods
push
or
jo
cs
jl
adc
cmps
lea
xor
pop
pop
dec
jl
es
ins
fdiv
dec
bound
mov
dec
movs
push
mov
rcl
call
pop
dec
imul
sbb
popa
rol
jbe
add
add
ja
xchg
pop
inc
fimul
(bad)
xlat
ss
inc
push
imul
ss
dec
nop
pop
mov
stos
dec
test
xor
sub
ror
pop
sbb
add
push
int3
pusha
outs
jle
jge
sub
fwait
(bad)
push
jno
mov
in
data16
cmp
push
xlat
imul
pop
xor
push
jbe
and
adc
mov
dec
push
jl
test
add
jne
pop
pop
ins
inc
push
jno
jle
xor
cs
ins
in
xchg
scas
or
push
inc
xor
rol
test
sub
das
push
xor
ss
addr16
inc
aad
cli
push
push
push
mov
ins
es
test
mov
ins
pop
(bad)
mov
adc
jge
pop
ins
addr16
and
dec
or
scas
dec
push
sub
sub
ret
ins
mov
adc
cmp
imul
outs
jl
push
inc
inc
add
enter
push
and
and
dec
xor
and
out
dec
mov
push
push
imul
dec
bound
outs
xor
sbb
push
bound
outs
imul
in
inc
test
sub
or
inc
ja
push
add
ret
cmp
sub
sbb
pop
ins
imul
ss
dec
push
inc
dec
outs
pop
stos
inc
mov
movs
adc
jb
leave
and
sar
pop
mov
fidiv
jge
xor
inc
adc
inc
test
ss
cmp
rcl
inc
cmps
adc
and
inc
pusha
mov
xor
inc
ins
inc
xor
test
ins
push
ja
dec
mov
xor
jb
xor
sbb
jne
push
outs
pop
scas
sub
mov
pop
push
pop
sbb
xchg
div
jl
dec
aam
xchg
dec
not
dec
mov
ret
je
ins
cmps
in
call
pusha
inc
call
push
ss
loopne
adc
ja
jle
ss
push
add
or
jle
outs
sub
test
ja
dec
sbb
adc
push
rol
js
(bad)
mov
je
enter
push
fcom
dec
outs
xor
push
outs
ins
aaa
icebp
pop
into
inc
jne
imul
xor
push
mov
hlt
pop
inc
pusha
aad
not
mov
push
bound
mov
and
push
cmps
inc
or
cs
imul
adc
mov
imul
pop
and
xor
ins
jl
push
sbb
or
cli
imul
inc
fisub
inc
imul
mov
jo
imul
ss
push
rcl
mov
dec
ins
shl
dec
adc
inc
and
push
data16
imul
push
out
mov
stos
je
pop
jno
pop
icebp
popf
adc
je
addr16
xor
pop
inc
ja
push
and
push
imul
xor
mov
or
xchg
and
mov
and
enter
and
dec
ja
mov
imul
push
push
add
movs
xchg
stos
mov
(bad)
outs
cmp
loop
in
stos
push
pop
jo
xor
push
push
mov
inc
push
push
mov
jbe
stos
xor
je
push
sub
loopne
add
jbe
push
add
and
push
dec
sub
inc
dec
pop
xchg
les
adc
mov
(bad)
dec
mov
cwde
dec
mov
sub
sbb
push
adc
mov
or
sbb
lods
jb
data16
pop
push
pop
xor
sbb
or
outs
je
or
in
inc
xor
fs
dec
dec
jp
dec
xor
movs
mov
sbb
push
jg
and
fsubr
push
inc
push
ss
enter
fs
or
push
jl
pop
jo
add
mov
jo
in
push
push
fwait
or
outs
int3
je
push
adc
sbb
test
sbb
dec
sbb
sbb
ins
push
adc
push
or
push
jno
dec
dec
push
and
adc
lea
popa
sar
gs
xor
out
les
ja
int3
nop
sub
aam
and
inc
fsub
or
in
cmps
arpl
aam
loope
xchg
dec
dec
(bad)
fisub
ror
push
sbb
dec
les
xchg
outs
add
xchg
inc
jno
inc
enter
aaa
xchg
dec
dec
ja
jo
push
fcmovbe
imul
je
or
add
cli
jae
test
data16
push
bound
and
cwde
mov
or
repnz
lock
pop
or
mov
mov
push
jge
repnz
je
push
outs
bnd
xchg
(bad)
xchg
sub
dec
inc
ins
jno
jp
pusha
xchg
shl
mov
xchg
add
(bad)
push
push
push
gs
aaa
dec
push
ror
adc
pop
xchg
and
inc
push
movs
and
jbe
pop
inc
cli
add
je
js
or
push
push
jl
inc
add
inc
xlat
sbb
xor
mov
(bad)
mov
xor
push
shr
push
popa
arpl
xor
mov
pusha
jae
add
xchg
sub
ds
ss
cdq
push
outs
xor
push
test
mov
dec
outs
ror
jb
adc
sbb
add
push
std
sub
mov
jge
addr16
push
xor
popa
jo
dec
push
push
sub
and
push
nop
xor
imul
fwait
add
xchg
push
mov
aaa
adc
int
ins
xor
ins
fsubr
inc
in
fadd
ds
jno
iret
ss
jne
inc
push
push
lock
add
jae
ds
cmps
xor
xchg
jp
es
push
inc
dec
or
outs
sbb
stos
and
inc
inc
inc
inc
xor
mov
xchg
sub
push
jmp
pop
data16
push
lock
push
and
dec
mov
es
je
mov
sbb
xor
mov
dec
pushf
xor
imul
adc
lock
or
sub
and
scas
sar
ja
pop
bound
mov
imul
std
into
stos
push
add
popa
mov
retf
ss
inc
inc
daa
shl
push
push
sub
ss
xor
rol
lods
xor
pop
mov
inc
jb
inc
inc
lock
add
aaa
cs
inc
inc
mov
test
nop
inc
xchg
dec
xor
and
and
(bad)
mov
aam
sub
push
mov
jno
sub
lahf
dec
pushw
nop
dec
push
enter
push
repnz
cmp
inc
ins
sbb
daa
inc
ss
test
pop
jmp
or
push
ss
cmps
lock
sbb
jo
stos
and
add
je
mov
arpl
nop
jle
ins
or
inc
push
outs
dec
jae
sbb
jo
jb
jle
clc
pop
xchg
nop
ja
outs
push
es
dec
sbb
nop
imul
push
in
push
mov
sub
push
jb
and
cmps
data16
pop
rol
pop
ins
pop
pop
mov
gs
jle
cmp
inc
ins
or
push
add
jo
sbb
ins
xor
inc
test
or
or
ud1
daa
xor
push
dec
jo
sbb
mov
jle
cmp
and
fdivr
push
loop
movs
and
push
push
ror
xchg
add
cdq
xor
push
sub
bound
dec
test
lock
imul
jb
sub
mov
setns
push
popa
dec
call
jo
sti
dec
push
xchg
sub
inc
push
dec
mov
inc
jb
pop
inc
dec
out
inc
popa
enter
jge
cmps
jecxz
les
pop
dec
aaa
imul
dec
sbb
data16
sub
jge
jbe
cmp
adc
rcl
sbb
push
jne
ret
sub
cmp
push
xor
outs
dec
bound
call
arpl
jae
inc
outs
ins
ins
dec
cmp
arpl
fnstenv
pop
adc
imul
sub
outs
sub
mov
sub
xor
pop
pop
push
enter
rol
xchg
push
jl
fdiv
mov
sbb
aaa
addr16
es
adc
dec
dec
bound
inc
xor
jb
mov
cmp
inc
jl
inc
sbb
aaa
push
arpl
push
add
ss
or
push
add
pusha
dec
adc
je
pop
fmul
push
sub
push
xor
add
jge
fbld
nop
iret
int
dec
xor
push
push
ins
xor
push
iret
int
sub
push
inc
jl
inc
push
jno
pop
test
inc
ss
pusha
push
(bad)
ficom
nop
fwait
or
inc
push
xor
push
test
add
jp
inc
push
sbb
add
cwde
mov
pop
push
mov
xchg
inc
jbe
imul
xchg
jmp
push
push
imul
shl
xor
imul
in
call
push
into
adc
adc
cli
sub
push
dec
rcr
jo
imul
add
push
ja
outs
push
inc
shr
jl
push
cmp
add
inc
dec
pusha
ins
push
(bad)
imul
jo
aaa
dec
jne
inc
push
push
imul
test
push
add
jmp
jle
xor
add
test
outs
inc
push
dec
scas
xchg
jp
pop
jb
dec
jno
ins
ss
and
mov
push
ins
add
add
scas
imul
xchg
fwait
fwait
pop
scas
ss
push
jle
push
fnsave
cs
fwait
lahf
mov
scas
jno
push
inc
push
jl
push
pop
add
push
pusha
scas
aam
scas
xor
xor
sbb
mov
dec
inc
push
inc
imul
push
addr16
cmovb
dec
pushf
scas
jo
dec
xor
dec
bound
dec
xor
je
ds
inc
pop
inc
popa
pop
xor
ds
and
xor
push
dec
push
jp
push
retf
(bad)
ds
xor
add
mov
mov
sbb
cmp
test
dec
(bad)
dec
outs
dec
push
push
imul
in
push
mov
jb
ja
inc
add
rcr
sbb
repz
dec
inc
sahf
cmp
mov
xor
aaa
ss
mov
inc
jbe
inc
push
loop
leave
fwait
movsx
inc
cmp
stc
shl
mov
push
add
hlt
inc
outs
pop
cmp
iret
out
jo
outs
ss
mov
ds
sbb
js
arpl
and
outs
bound
mov
mov
xchg
ja
test
mov
movs
repnz
pop
inc
inc
jno
xchg
dec
movs
bnd
ins
ja
push
jae
push
and
dec
sub
imul
ds
push
leave
hlt
mov
int
leave
int
inc
jle
dec
push
imul
int
jge
dec
inc
ss
xor
inc
adc
inc
jg
bound
in
iret
int
xor
gs
imul
mov
add
outs
popa
xor
add
jo
jp
test
cs
test
inc
xchg
sub
addr16
inc
or
jl
push
ret
(bad)
mov
inc
push
push
jl
cmp
je
mov
retf
push
loopne
imul
push
test
dec
inc
dec
pop
call
aam
mov
into
jb
je
mov
xor
dec
jno
push
mov
inc
inc
dec
jle
test
fild
push
push
je
jbe
jg
iret
iret
addr16
xor
push
xor
je
push
imul
popa
movs
mov
je
inc
pop
scas
rol
bound
mov
mov
dec
inc
dec
imul
and
scas
jb
and
jl
js
jne
push
mov
jle
pop
scas
inc
cmp
loopne
test
dec
inc
sub
pop
or
scas
cmp
inc
jae
es
int3
into
ins
scas
push
inc
inc
out
dec
nop
outs
pop
push
sub
dec
push
pop
xor
dec
fs
clc
retf
retf
js
push
jae
fisubr
adc
mov
push
in
add
popa
cmp
bound
les
xor
arpl
dec
out
daa
pop
pushf
pusha
push
jno
pop
xor
push
jecxz
cmp
bound
or
jp
push
popa
xor
sub
push
arpl
sbb
mov
and
es
iret
data16
push
ins
jne
jo
pusha
mov
das
ds
dec
xor
xor
mov
jae
outs
push
xor
int
inc
dec
dec
inc
jl
aaa
ins
pop
ret
pop
dec
sub
push
mov
mov
call
dec
test
outs
inc
xor
leave
xor
mov
inc
dec
in
imul
jle
inc
adc
iret
xchg
inc
je
xor
inc
ds
dec
popa
imul
xor
push
fisubr
scas
jle
ins
outs
dec
and
popa
addr16
sbb
push
popa
mov
adc
jl
xor
pop
bound
add
jg
and
xchg
iret
outs
jne
dec
imul
sub
gs
pusha
and
js
dec
imul
imul
mov
je
cmps
mov
push
pop
push
inc
inc
or
and
fisubr
div
out
mov
mov
shl
jbe
inc
mov
inc
imul
pop
ins
jge
test
inc
push
push
push
ins
movs
mov
jl
outs
je
jb
test
jae
sub
dec
in
inc
jne
ds
enter
inc
xor
stc
mov
je
outs
jge
sbb
aas
rcl
outs
xor
dec
out
push
fisubr
jbe
add
xchg
jl
sub
pop
out
ret
pop
cwde
lahf
pop
int3
mov
arpl
pushf
iret
ins
ficom
inc
ds
and
pop
push
jb
pop
repnz
lods
pushf
xor
push
nop
int
mov
pop
fidiv
and
iret
daa
dec
fisubr
dec
pop
cld
fidivr
jae
cld
ds
pop
outs
dec
jno
inc
(bad)
mov
jl
jl
xchg
inc
lahf
xchg
xchg
dec
in
push
sub
push
outs
dec
and
xor
jl
shl
dec
or
repz
jo
jb
ja
pop
cmp
adc
pop
dec
push
inc
pop
or
fcomp
pop
pop
and
push
inc
test
jae
jle
lahf
fld
push
ins
xor
test
xor
pop
push
xor
test
aaa
je
push
iret
cmps
xchg
jb
dec
push
push
ins
xor
sub
push
lahf
push
movs
push
pop
test
inc
movs
repnz
lods
fbstp
inc
inc
mov
retf
cmp
pop
outs
stc
jl
push
inc
imul
xor
rcl
inc
outs
push
sbb
outs
dec
dec
dec
or
or
je
pop
pop
and
push
dec
ficom
dec
jae
inc
jb
push
mov
jb
ds
sub
xor
mov
add
inc
mov
jne
push
push
out
push
es
iret
inc
sub
sub
push
retf
mov
pop
stc
mov
xor
imul
mov
xor
lahf
dec
nop
or
sbb
fimul
js
xor
inc
jae
ins
ins
outs
xor
xchg
(bad)
arpl
inc
data16
adc
inc
out
push
push
dec
outs
xor
adc
cmps
mov
ins
push
retf
mov
cmp
push
xchg
ja
shr
xor
ins
push
add
dec
outs
sahf
jbe
or
test
outs
loop
lock
retf
sub
add
and
add
sbb
push
arpl
jbe
(bad)
adc
pop
ja
gs
call
mov
adc
dec
add
xor
imul
mov
inc
mov
pop
push
popa
push
(bad)
arpl
fs
push
mov
mov
pop
sbb
mov
pusha
test
enter
js
je
ins
xchg
inc
dec
dec
adc
push
add
xchg
jne
lahf
push
pop
ss
dec
sub
in
inc
ss
mov
mov
sub
clc
pop
bound
cmp
dec
add
clc
dec
addr16
scas
mov
dec
cmp
dec
cmp
scas
push
xor
push
popa
cmp
rcr
fidiv
jae
outs
pop
addr16
mov
inc
jecxz
arpl
inc
inc
push
scas
dec
pop
jle
daa
or
xor
sub
dec
pop
inc
sbb
jae
push
or
gs
pop
arpl
cs
cmp
mov
inc
xchg
cmp
mov
clc
push
mov
xor
shl
mov
xor
mov
push
or
mov
out
mov
jae
pop
fnstsw
adc
lock
xchg
dec
push
call
mov
pop
mov
loopne
mov
jae
jae
imul
cdq
es
dec
pop
sub
xchg
or
push
pop
arpl
push
test
bound
mov
cmp
dec
push
sub
mov
dec
jo
call
div
outs
mov
inc
inc
dec
ss
stc
jl
dec
xor
outs
jle
addr16
ja
mov
stc
dec
addr16
arpl
mov
loopne
ret
ds
inc
scas
mov
or
ds
xchg
pop
mov
outs
push
ja
xor
push
dec
pop
inc
popa
out
jmp
push
aas
lahf
pop
mov
scas
push
imul
push
dec
push
jl
jae
push
gs
push
push
pop
loope
jo
push
ss
mov
pop
mov
cmps
repz
pop
push
add
sub
addr16
push
sub
xor
add
iret
add
aaa
pop
jl
cmp
cld
jo
inc
loop
inc
pop
inc
ins
jae
cmp
push
syscall
movs
fsubr
jle
sahf
pop
inc
dec
scas
inc
inc
je
lahf
pop
add
ss
xor
inc
jns
push
sub
mov
test
adc
outs
push
or
jle
lahf
aas
scas
push
arpl
outs
jae
dec
dec
inc
sar
jl
jge
pop
jo
xor
pop
mov
push
xor
addr16
bound
sbb
mov
scas
outs
adc
scas
jl
cmp
adc
push
pop
bound
cdq
cmp
dec
iret
out
mov
jb
outs
ja
cmps
repz
cmp
das
push
push
pop
push
push
outs
sub
stc
ins
and
pop
inc
ins
xor
push
or
pop
outs
inc
xor
sub
push
pop
pop
push
movs
cli
jne
inc
push
inc
add
inc
jb
stos
stos
xchg
inc
outs
dec
arpl
fcomp
call
inc
jo
inc
and
push
push
adc
ins
xor
ins
sahf
push
pop
(bad)
mov
push
ss
dec
test
xor
inc
das
clc
push
xor
dec
outs
pop
call
sub
mov
pop
bound
pop
xor
pop
addr16
push
pop
cmp
inc
jo
pusha
cld
push
add
adc
inc
xor
and
and
push
enter
aaa
dec
scas
dec
and
inc
xor
and
sub
dec
push
xor
inc
mov
movs
jns
inc
xor
push
inc
push
or
imul
inc
and
and
pusha
sub
or
jbe
loop
data16
xor
adc
push
jge
push
xor
inc
dec
outs
pop
dec
pop
leave
je
fsub
mov
push
ds
bound
aas
pop
push
dec
ret
ss
outs
ins
jl
hlt
(bad)
scas
scas
cs
aas
arpl
ja
xor
add
inc
jg
outs
jecxz
pop
aas
inc
pop
dec
aas
push
imul
cmp
pop
adc
icebp
push
cmp
into
inc
dec
push
push
gs
xor
pop
fcomp
inc
sbb
(bad)
ret
mov
adc
sahf
int
mov
xor
dec
push
xchg
ja
imul
mov
mov
fild
jg
jnp
add
sar
cmp
dec
ret
pushf
xor
sbb
push
add
and
xchg
imul
jo
lahf
imul
nop
fld
pushf
cmp
pop
pop
imul
test
inc
xchg
fidiv
fbld
les
push
test
cmp
or
(bad)
cmp
jne
push
xor
dec
stos
ret
xor
push
pop
dec
dec
daa
inc
sti
leave
scas
sub
inc
dec
dec
test
xchg
mov
pop
dec
jne
mov
dec
jmp
inc
inc
or
shl
pop
ror
xchg
cmp
jb
stos
and
xchg
inc
mov
push
pop
cmp
push
dec
dec
sbb
or
fldenv
movs
inc
xchg
cmp
and
cs
dec
imul
bound
sbb
pusha
xor
jno
adc
jl
pushf
add
mov
in
jne
inc
pop
push
xor
mov
fistp
outs
inc
dec
jp
bnd
pop
dec
push
sbb
add
jae
cs
mov
push
fcomp
ins
jmp
aaa
bound
add
mov
adc
dec
dec
push
push
pop
daa
cmps
add
cs
xor
jne
cwde
pusha
cmp
daa
arpl
adc
jbe
dec
mov
jg
pop
inc
ins
push
lahf
push
push
xor
and
and
jle
(bad)
sbb
push
data16
inc
sbb
push
fimul
and
xchg
in
cmp
pop
sub
bound
pusha
es
push
pop
mov
mov
inc
dec
jge
dec
jo
test
xor
xor
dec
fidiv
push
aaa
mov
xor
xor
jle
inc
outs
jae
jno
jo
js
test
addr16
mov
inc
push
sub
dec
aaa
dec
jbe
adc
movs
js
dec
push
adc
outs
dec
push
bound
push
and
bound
sub
data16
inc
cmc
fdiv
cmp
ss
adc
push
jno
sub
xor
ss
mov
dec
push
aaa
inc
inc
dec
data16
xchg
sahf
sub
jle
push
bound
pop
imul
gs
out
cwde
dec
call
and
push
mov
push
push
dec
fisttp
sub
xor
sbb
jle
out
scas
jbe
pop
dec
push
vaddsd
dec
push
outs
dec
cmps
fnstenv
xor
jbe
cs
mov
mov
adc
dec
sbb
xchg
adc
fidiv
push
out
pusha
imul
ds
ja
pop
xchg
rcl
lahf
push
cdq
fbstp
or
iret
sub
es
jo
sub
push
pop
pop
(bad)
sub
push
sahf
jae
add
popa
(bad)
pop
push
pop
dec
push
jle
adc
retf
cmps
out
adc
or
push
pop
imul
(bad)
xor
bound
sbb
adc
loope
mov
imul
outs
cld
(bad)
pop
xor
neg
(bad)
push
push
jg
sbb
out
dec
aaa
ds
sub
jae
addr16
xor
repnz
dec
popa
jmp
inc
ss
rol
shr
mov
mov
inc
jge
xor
sqrtps
ja
push
xor
dec
out
mov
push
bound
dec
jbe
and
ret
ins
xor
outs
outs
inc
push
outs
stos
(bad)
jmp
repnz
push
aaa
xchg
mov
sbb
add
push
mov
or
imul
xchg
mov
rol
push
dec
xor
das
inc
pop
push
sbb
push
dec
jle
push
inc
outs
xchg
add
mov
jle
push
mov
inc
pop
xchg
pusha
sub
imul
dec
dec
inc
dec
gs
jmp
out
ds
stos
jbe
push
jno
punpckldq
movs
xchg
call
and
fisubr
cs
ss
push
jbe
push
mov
movs
xchg
mov
outs
daa
push
mov
cmp
pusha
inc
addr16
jno
popf
mov
push
add
movs
cmp
ror
xor
xor
inc
dec
cmp
inc
push
lea
push
addr16
pop
or
(bad)
aaa
clc
jl
xchg
inc
ins
leave
scas
inc
push
dec
push
out
fstp
outs
outs
dec
mov
jp
add
push
push
inc
dec
rcr
mov
xchg
outs
push
mov
cs
dec
int
fs
out
mov
cld
jno
jge
ja
dec
push
dec
bound
jne
mov
es
push
mov
pop
pop
ins
dec
gs
add
out
xchg
dec
inc
dec
ja
(bad)
pop
imul
mov
bound
xor
cdq
jb
mov
or
sub
es
or
aam
add
cmp
inc
mov
sub
lahf
inc
jge
xor
in
sbb
out
gs
sub
sbb
mov
popa
enter
jle
jbe
lahf
cmp
ds
jne
xor
inc
pop
sub
xlat
cmp
dec
cld
mov
lods
cmp
out
add
sar
data16
xor
pop
jge
cmps
out
push
movs
pop
outs
ds
push
lods
shl
inc
push
sub
jbe
dec
dec
lahf
ss
push
adc
ret
gs
push
push
je
sub
push
xchg
nop
mov
cwde
xchg
inc
inc
jmp
shl
out
dec
data16
jbe
mov
rcr
ja
ja
pop
and
mov
dec
jo
daa
int3
jno
cmovb
out
push
in
xor
xchg
pop
fbstp
inc
mov
out
push
push
sahf
add
ret
aaa
pop
dec
xor
or
jbe
repz
test
dec
cs
gs
imul
pop
ds
and
jb
push
push
(bad)
dec
mov
push
jb
dec
xor
push
cdq
addr16
push
cmps
inc
push
jle
daa
pop
out
add
ret
adc
idiv
push
xchg
jge
jae
bound
xor
int3
iret
outs
mov
out
ss
arpl
push
mov
cmps
lds
push
mov
and
jo
push
mov
inc
jne
mov
xchg
scas
or
(bad)
jbe
loopne
retf
xor
outs
jo
es
sbb
push
scas
push
push
jo
xchg
push
gs
mov
sub
ds
out
jecxz
aas
jne
push
jno
es
dec
jb
xchg
or
addr16
inc
das
pop
in
mov
pop
xchg
or
push
push
jo
arpl
pop
xor
inc
adc
jb
jb
or
(bad)
jecxz
ss
dec
mov
fadd
adc
ins
push
sub
mov
push
ss
ja
push
pusha
dec
mov
dec
jmp
push
push
xor
pop
fidiv
loopne
push
jo
(bad)
fsub
leave
gs
push
push
data16
xchg
jns
and
cdq
pop
mov
pusha
(bad)
stos
mov
inc
dec
pop
fdivr
or
push
gs
pop
dec
sub
push
add
add
inc
imul
retf
dec
push
out
mov
cmp
(bad)
or
and
cmps
in
imul
pusha
or
pop
das
or
dec
inc
jo
js
in
fidiv
outs
inc
sahf
push
push
xchg
stos
sub
ja
(bad)
adc
dec
out
scas
xchg
inc
clc
xor
jg
ds
fst
pop
jb
jno
stos
mov
jle
cmp
gs
repnz
inc
mov
dec
repnz
popf
stos
add
dec
cs
int
jb
sahf
jl
push
dec
pop
pop
pusha
or
ror
push
ds
mov
ins
in
inc
dec
iret
sbb
jb
pusha
cmp
push
aas
inc
ins
and
outs
push
addr16
push
cmp
dec
fbstp
dec
mov
xor
cmp
inc
xchg
jae
aad
push
xor
jo
mov
dec
sbb
sub
ins
xor
int3
adc
mov
jle
mov
push
test
push
ss
hlt
lock
(bad)
in
js
enter
retf
push
aaa
int3
and
fcomp
fdivr
in
pusha
xchg
push
mov
inc
cs
or
push
push
ss
sbb
jbe
dec
sub
pop
out
idiv
cmps
outs
aas
out
outs
push
arpl
bound
jne
inc
inc
xor
dec
push
addr16
pop
rcl
test
mov
jae
pop
nop
or
es
idiv
inc
lds
dec
xor
shl
push
adc
les
(bad)
fiadd
leavew
bound
xor
dec
jle
movs
push
jae
sbb
rcr
push
data16
shl
cmp
xchg
jae
jl
das
fisubr
xchg
nop
sbb
add
shl
(bad)
dec
es
cmps
sbb
scas
inc
iret
dec
cmps
inc
push
add
or
(bad)
retf
outs
cmp
cmps
or
xor
scas
dec
mov
in
xchg
xor
cs
xchg
add
cmps
out
pop
fbld
pop
push
add
aas
dec
ss
imul
xor
std
sbb
push
push
inc
inc
fidivr
outs
xlat
add
das
xchg
dec
add
dec
push
(bad)
jg
movs
inc
out
dec
xor
dec
inc
pop
xchg
sub
dec
mov
out
ret
je
(bad)
aaa
cmp
out
mov
push
clc
(bad)
es
mul
mov
outs
mov
in
xlat
outs
push
add
iret
lock
jb
outs
xchg
jb
pop
(bad)
cmp
pop
jge
sbb
pop
test
outs
cmp
sub
cld
jmp
xor
shl
leave
jo
push
das
push
imul
pop
push
or
push
cmp
outs
sub
dec
jne
rcr
cmps
or
imul
mov
aaa
cmp
js
and
outs
dec
inc
outs
mov
xchg
sbb
jne
bound
div
mov
imul
inc
dec
jbe
or
fdiv
je
outs
mov
mov
xor
push
dec
fst
pop
push
inc
mov
test
mov
dec
push
xor
dec
push
push
popa
aam
and
push
ja
addr16
jmp
xor
push
mov
ins
push
jmp
sbb
xchg
sub
or
mov
push
es
push
dec
xor
sbb
fld
(bad)
outs
outs
mov
xchg
mov
sub
outs
cmps
addr16
dec
adc
adc
xor
pusha
xor
push
in
add
adc
xor
push
sbb
cmp
aaa
gs
dec
enter
ja
or
mov
test
sbb
outs
pop
jb
push
es
adc
xchg
cmc
xor
jne
push
inc
mov
stos
ins
push
xor
add
add
cli
xor
jle
xor
jb
cmp
dec
into
jl
jl
push
fdiv
in
push
add
xchg
addr16
dec
dec
cmp
push
pop
loopne
xor
outs
lods
sbb
ss
jb
jl
dec
push
pop
int
jb
sub
jbe
je
and
lock
es
push
xor
xor
sub
xor
pop
inc
xor
push
or
xor
dec
sbb
mov
ds
pop
dec
pop
or
xchg
lods
add
dec
stos
popa
xor
jl
ins
push
jle
fisttp
jbe
xor
addr16
jl
jb
pop
push
addr16
jbe
push
ins
imul
fiadd
xor
stos
int
enter
cmp
dec
lods
adc
cmp
and
and
xor
xor
add
je
xchg
mov
push
pop
sar
cmps
cmp
mov
out
cmp
push
jb
dec
xchg
push
mov
mov
jo
and
mov
shl
scas
lods
adc
push
fiadd
or
(bad)
(bad)
push
xchg
aam
mov
pop
into
inc
inc
inc
jno
push
jmp
pop
outs
pop
jp
inc
mov
xor
push
add
inc
and
push
push
movs
sahf
cs
push
add
ror
push
mov
dec
sbb
shr
inc
movs
inc
jo
in
ss
and
mov
sbb
jb
(bad)
xor
call
bound
pop
data16
and
call
xchg
xchg
xor
pop
pusha
sahf
dec
push
dec
xor
xor
pop
and
push
data16
outs
or
push
mov
dec
pop
xchg
push
ins
cwde
dec
les
ss
push
adc
es
pusha
mov
pcmpgtd
xor
addr16
jmp
ds
xor
outs
inc
or
xor
aaa
jp
fisubr
add
dec
xor
dec
xor
xchg
add
dec
xor
push
xor
stos
inc
add
mov
pop
xor
mov
dec
inc
mov
je
pop
enter
in
or
push
dec
mov
jmp
sbb
outs
xor
push
pop
jae
dec
sub
dec
adc
outs
xor
dec
dec
mov
ds
inc
bound
adc
cs
dec
rol
loopne
dec
mov
repnz
push
mov
xor
pop
pop
ret
ja
xchg
inc
add
sub
test
lods
cs
repnz
mov
(bad)
stos
loope
jb
push
pop
inc
add
push
cwde
jle
mov
add
pusha
sbb
jns
add
ins
fs
add
not
(bad)
mov
push
out
out
data16
pop
pushf
add
stos
xor
sbb
push
hlt
dec
push
xor
data16
dec
call
push
push
dec
sbb
pop
adc
sbb
test
arpl
adc
xor
outs
dec
pop
shl
sub
pop
mov
pusha
enter
ret
and
sub
xor
out
inc
mov
inc
mov
imul
sbb
ret
into
ds
jmp
push
sub
pop
push
sbb
jbe
mov
ins
jmp
jb
sub
xor
jb
sbb
ds
pusha
push
xchg
cmps
pusha
xchg
mov
xchg
out
into
ror
outs
xchg
jbe
outs
ins
rcl
ja
add
dec
mov
dec
out
push
test
inc
cs
int3
push
adc
dec
push
test
shl
pusha
sbb
inc
cmps
les
push
jge
add
push
test
add
call
adc
outs
scas
ins
cmp
push
inc
jo
xchg
jbe
cs
js
jbe
shr
xchg
movs
push
inc
(bad)
dec
mov
out
pop
push
mov
les
inc
sub
dec
loope
sub
inc
cmps
bound
dec
xchg
pop
pop
arpl
push
inc
lods
xchg
cmps
inc
imul
add
mov
outs
(bad)
mov
scas
stos
mov
ins
push
je
push
es
inc
mov
jne
jle
push
mov
sub
movs
outs
mov
adc
(bad)
imul
cmp
inc
cs
in
retf
fisubr
ins
test
into
dec
or
scas
es
repnz
xchg
adc
jp
add
jle
sub
fs
jno
sub
pop
xchg
mov
stos
xor
popa
call
jb
xchg
jo
add
imul
imul
xchg
xchg
push
inc
cmps
dec
push
or
jle
scas
pop
aad
jmp
lock
mov
popf
cmps
in
mov
push
pop
pop
mov
push
or
inc
sub
jle
es
neg
xor
xchg
idiv
pop
pop
or
push
or
dec
push
pop
or
xchg
and
pop
push
adc
aas
add
ficomp
dec
data16
popa
es
(bad)
push
dec
push
ret
push
and
push
jle
je
fld
sub
jl
xor
int3
jmp
xor
push
stos
mov
sub
ss
hlt
push
test
add
push
sub
push
mov
inc
mov
scas
popa
mov
dec
mov
sbb
bswap
push
sbb
data16
pusha
or
cs
sub
and
mov
mov
js
shr
dec
push
mov
sahf
gs
stos
jmp
outs
mov
ror
push
(bad)
xchg
sahf
jbe
mov
inc
push
inc
xchg
mov
jo
inc
add
test
mov
gs
dec
push
jbe
es
xor
or
retf
xor
sbb
inc
mov
sub
sub
push
cwde
dec
xchg
out
mov
dec
or
push
pusha
push
pop
adc
xor
push
adc
popa
push
sub
pop
push
push
gs
data16
pop
inc
push
fs
or
mov
cwde
add
into
mov
pop
mov
fidiv
xchg
xchg
push
push
inc
mov
add
sub
push
xchg
dec
shl
jb
inc
push
inc
(bad)
dec
(bad)
outs
mov
mov
bound
ss
inc
and
and
pusha
dec
mov
xchg
(bad)
jp
ror
jbe
and
jle
cmp
add
jbe
push
mov
sub
lds
dec
(bad)
bound
ss
out
mov
and
sahf
add
adc
dec
dec
add
seto
cmp
push
jae
push
scas
xor
imul
push
mov
cmp
mov
mov
out
inc
jle
and
pushf
xchg
mov
mov
sub
push
shl
cmc
into
not
in
shr
inc
sbb
push
rol
xor
jbe
jp
ret
adc
xchg
and
ror
push
out
(bad)
jb
push
xor
sub
pop
ins
cs
(bad)
dec
xchg
jno
inc
inc
inc
cmp
add
mov
loopne
loop
out
out
sbb
pop
bound
jbe
aaa
xchg
push
push
sbb
dec
push
test
jbe
lock
push
outs
push
dec
es
xor
jle
imul
stos
push
mov
push
scas
add
and
fisubr
out
loope
clc
mov
push
sub
push
push
ds
fidiv
dec
add
mov
outs
adc
push
neg
cs
inc
cmp
add
add
test
or
mov
into
fidivr
pop
push
and
fimul
jbe
push
cmps
(bad)
out
inc
mov
inc
cmps
sahf
mov
add
inc
push
imul
(bad)
push
mov
adc
add
mov
pop
gs
pop
jne
inc
xor
fidiv
div
or
nop
push
xor
push
add
adc
ins
imul
dec
mov
popaw
ss
dec
xchg
add
aas
xor
add
cmp
pop
or
push
lods
inc
sbb
(bad)
jb
addr16
loope
dec
and
(bad)
pop
mov
mov
mov
push
push
mov
push
out
fidivr
(bad)
out
ret
add
xor
addr16
jl
adc
inc
push
push
mov
push
pop
push
inc
xchg
outs
inc
(bad)
dec
xor
cmps
push
push
dec
push
push
cmp
xor
ret
push
push
xor
mov
inc
add
or
out
jbe
push
daa
ret
nop
mov
fdivp
and
jbe
dec
xor
lock
jmp
ins
es
scas
push
push
popa
push
arpl
inc
pop
sbb
push
into
inc
and
sahf
inc
xlat
jmp
dec
out
dec
(bad)
xor
in
dec
add
into
pop
mov
pusha
jbe
add
lock
push
xor
push
test
fwait
rol
inc
out
scas
sbb
push
and
push
inc
ret
scas
(bad)
push
sbb
pusha
hlt
sub
repnz
data16
xchg
mov
scas
(bad)
xchg
xor
inc
mov
in
idiv
add
xchg
push
sahf
mov
and
dec
outs
xchg
bound
outs
iret
push
add
dec
xchg
js
stos
mov
jne
sub
sub
imul
pop
xor
ss
push
mov
into
push
adc
pop
pop
mov
bound
jecxz
test
sub
sbb
sbb
test
sahf
scas
into
xor
mov
adc
dec
out
xor
scas
cmp
xchg
out
outs
pop
out
jno
push
sbb
into
push
xor
rol
add
test
add
call
pusha
jbe
cmp
arpl
out
cmps
or
xor
test
mov
and
call
push
push
into
out
pop
xor
push
cmp
outs
mov
jl
rol
and
stos
inc
add
ror
mov
cli
jno
out
mov
test
sub
push
sbb
dec
push
push
add
cwde
dec
xchg
ds
xchg
mov
mov
into
dec
addr16
jb
jo
mov
push
pusha
adc
sahf
push
test
stos
loopne
inc
push
scas
cs
in
dec
jl
cmp
pop
push
sub
jmp
sub
pusha
xchg
push
in
mov
inc
xor
adc
out
dec
jb
mov
retf
in
out
jb
div
and
dec
adc
gs
loopne
adc
sub
addr16
cwde
lock
jne
mov
jne
or
push
cs
xor
dec
test
push
add
rcl
jl
cmp
jl
inc
je
inc
lds
or
ds
outs
add
pop
xor
xor
jae
xchg
addr16
sub
xchg
cmps
xor
mov
push
adc
sbb
imul
mov
mov
xchg
push
push
inc
adc
dec
imul
push
mov
test
inc
push
ja
sub
add
push
pop
enter
mov
aaa
out
jbe
(bad)
sbb
ins
in
out
mov
adc
fidiv
imul
and
mov
jb
inc
mov
adc
scas
xor
mov
inc
outs
dec
dec
mov
mov
mov
xchg
or
sahf
xor
test
inc
out
jb
pop
mov
test
inc
add
xchg
cs
mov
dec
mov
inc
(bad)
jne
jle
shl
jle
sub
push
movs
cmp
push
out
sub
xchg
add
jp
push
inc
inc
or
push
and
inc
das
jbe
push
add
adc
cmp
nop
pop
cs
mov
push
outs
mov
xchg
jle
push
popa
sbb
push
push
sbb
push
es
sub
cmp
inc
je
push
adc
push
and
mov
xchg
pop
sub
push
test
sbb
push
mov
data16
add
outs
out
inc
xchg
cmp
ds
lea
lock
inc
xor
dec
(bad)
outs
test
inc
xor
sbb
sub
pop
ja
sub
sahf
push
out
push
dec
push
test
imul
jne
push
(bad)
ss
or
test
jne
imul
out
push
jbe
out
imul
add
push
sbb
xchg
(bad)
xor
rcr
ds
popa
xor
xchg
push
add
scas
jbe
inc
outs
xor
sub
outs
out
data16
loopne
push
into
cs
jo
pusha
les
adc
(bad)
jmp
loopne
push
rcl
cmps
call
ror
xor
sbb
jbe
push
pop
gs
pop
(bad)
jo
lock
cmp
(bad)
dec
pop
es
sbb
es
push
push
sahf
push
inc
adc
cmps
push
push
sbb
add
(bad)
dec
push
ss
mov
(bad)
dec
jb
mov
dec
repnz
xor
sbb
adc
rol
add
shr
xchg
test
dec
inc
pop
stos
(bad)
adc
bound
retf
mov
mov
inc
cmps
test
push
outs
fisub
aad
ror
inc
pop
jb
or
xchg
jbe
xchg
xchg
popa
xor
mov
pop
jl
push
es
dec
inc
cmp
pop
out
dec
ds
xchg
sub
ficom
jl
inc
fdiv
dec
push
test
pop
pop
scas
xor
push
mov
push
mov
xor
push
outs
jne
pop
jge
push
sub
stos
neg
ds
push
and
mov
es
xchg
div
rcl
out
push
scas
cs
sub
dec
outs
inc
push
sar
jle
sahf
dec
shl
call
fiadd
adc
xchg
popa
(bad)
fadd
dec
and
sub
mov
inc
jo
jb
ret
ins
inc
shl
push
fisubr
aam
xor
outs
and
xchg
sub
push
sahf
or
cmps
mov
dec
cmp
imul
sahf
je
xchg
push
xor
js
or
xchg
inc
or
push
mov
dec
(bad)
inc
jae
jo
xor
or
sahf
cmp
add
xchg
push
popa
and
push
mov
cs
jle
push
cs
inc
icebp
sahf
dec
outs
mov
inc
xchg
dec
push
loopne
xor
mov
inc
dec
dec
cmp
push
lds
mov
pop
not
push
inc
ds
scas
inc
daa
or
xor
into
mov
inc
aad
jle
into
push
je
sbb
fisubr
adc
movs
pop
push
inc
jl
mov
je
xor
aam
mov
push
je
dec
jbe
out
dec
dec
push
add
mov
pop
jmp
push
jne
in
(bad)
enter
ds
push
push
adc
jle
xchg
sub
inc
add
jbe
and
push
out
push
mov
and
mov
or
shr
cmps
sahf
add
push
jbe
dec
imul
popa
movzx
jmp
cmps
cmp
data16
lds
mov
loop
jbe
mov
adc
outs
jl
xor
push
mov
dec
sahf
sbb
outs
sbb
push
ret
inc
or
sub
loop
imul
data16
push
lods
sub
jb
inc
data16
call
cmp
pop
adc
cwde
rol
push
or
scas
xchg
xor
push
ret
cmps
push
push
dec
push
daa
sbb
push
adc
bound
jae
outs
cs
mov
xor
push
inc
shl
and
(bad)
outs
ret
mov
mov
out
jne
xchg
es
mov
dec
or
push
sar
pop
(bad)
ja
mov
push
cmps
mov
push
add
cmp
push
sahf
cmp
stos
push
ins
push
xor
push
sar
adc
and
out
js
ss
mov
push
jle
call
push
cmps
mov
cmc
gs
data16
push
sub
or
push
mov
mov
aad
data16
inc
outs
es
dec
aam
pop
outs
cmps
ss
cmp
mov
retf
add
sub
pop
or
outs
dec
jl
sbb
add
(bad)
cmp
scas
outs
lods
mov
mov
sbb
popa
sar
cmps
adc
scas
fiadd
aas
sbb
cmps
inc
lahf
inc
bound
adc
mov
dec
cmps
sahf
sahf
(bad)
push
jbe
push
push
es
or
(bad)
jo
es
cbw
mov
scas
data16
cmc
push
mov
inc
cmps
xor
push
mov
(bad)
nop
xchg
push
cmp
inc
pop
inc
test
xchg
punpckldq
push
jbe
sbb
push
mov
push
cs
test
je
add
(bad)
jbe
imul
nop
push
or
xor
fisub
xlat
add
cmp
sbb
jle
mov
mov
pusha
push
cmps
dec
push
je
inc
leave
mov
jbe
cmps
dec
mul
xchg
and
aas
ins
xchg
push
push
push
jb
pop
out
inc
xor
call
ja
pop
ret
add
adc
fdiv
mov
xor
cli
pusha
push
or
jae
push
jmp
dec
push
cmps
inc
add
mov
xor
push
jmp
cwde
push
push
fs
es
push
retf
mov
(bad)
jbe
cli
push
les
xchg
mov
pop
mov
inc
xchg
jo
(bad)
mov
in
(bad)
data16
cwde
popa
fcom
test
stos
add
sbb
pop
xchg
data16
sbb
mov
xor
cs
mov
and
inc
jno
stos
or
into
cs
stos
xchg
xor
xor
fidiv
mov
push
jle
add
(bad)
outs
and
outs
das
xchg
add
inc
mov
cmp
inc
and
lods
pop
xchg
es
inc
push
dec
inc
pop
xor
add
into
push
or
cmp
add
fistp
inc
imul
rcr
pop
imul
dec
je
cmps
push
xchg
inc
mov
push
cs
mov
adc
(bad)
sub
popa
dec
and
jbe
outs
retf
rcl
ss
jo
sub
pop
into
dec
or
sub
mov
sahf
ins
outs
xchg
jmp
push
scas
mov
xchg
ss
(bad)
inc
xor
mov
push
outs
cs
inc
loope
stos
inc
jb
into
pop
xchg
test
sbb
out
pop
(bad)
adc
add
cwde
add
je
dec
ss
cdq
sbb
fisubr
and
sub
pop
lea
mov
sub
or
jo
push
data16
inc
cmp
sub
add
faddp
(bad)
leave
lea
gs
es
sub
xchg
push
inc
into
push
es
(bad)
sbb
(bad)
dec
mov
js
xor
mov
cmps
inc
push
and
rcl
loopne
jle
xchg
xor
xchg
retf
ror
jbe
arpl
pusha
dec
inc
pop
cmp
and
mov
push
mov
xor
push
push
push
mov
fadd
mov
sub
jbe
or
xchg
inc
scas
jp
xor
dec
dec
add
and
push
pop
mov
push
fidiv
ret
xor
cmp
test
jnp
ficomp
data16
inc
movs
mov
sub
jbe
nop
jp
outs
mov
pusha
push
fisub
cmp
mov
fadd
push
arpl
pop
xor
mov
aad
jbe
jo
dec
retf
les
inc
inc
ds
bound
ror
xor
data16
retf
sbb
push
push
jb
outs
jle
and
retf
or
rcl
xor
add
xlat
xor
xchg
mov
movs
add
mov
push
shr
cwde
loop
jle
(bad)
jge
addr16
data16
jp
dec
mov
mov
arpl
out
xchg
push
pop
push
sub
ror
mov
push
jle
push
sub
adc
xchg
push
or
pop
imul
pop
xchg
out
jb
xor
pop
inc
dec
mov
push
pop
ret
or
bound
push
push
jl
cmps
jne
add
ins
mov
test
es
and
fiadd
or
movs
aam
push
ds
xchg
jl
out
sbb
pop
cmps
jb
push
sar
jno
jl
int3
test
mov
sub
jb
add
fidiv
jb
xchg
outs
jne
push
inc
inc
dec
push
push
push
push
pop
ins
cvtpi2pd
push
jae
jle
push
jl
shr
push
xor
dec
or
out
outs
xchg
fimul
inc
dec
inc
pop
inc
into
xchg
ss
out
pop
call
xchg
loop
(bad)
scas
movs
nop
push
cmp
cmp
fimul
push
pusha
adc
push
cmps
cmp
sub
pushw
ss
gs
data16
jge
push
and
jb
xchg
mov
je
scas
push
dec
mov
add
cmps
add
scas
(bad)
xchg
add
pushf
fidivr
fidiv
imul
(bad)
mov
pop
push
and
inc
inc
jne
gs
inc
push
movs
sar
dec
loopne
inc
xchg
cmp
pop
fisub
out
and
pusha
pop
jle
data16
cmps
jl
push
sub
cmps
icebp
push
dec
je
lods
data16
push
fs
push
push
add
repnz
dec
mov
mov
jo
xor
nop
sbb
neg
ret
add
(bad)
push
cmp
xchg
mov
xchg
out
pop
add
dec
jo
sahf
outs
or
cmp
xor
cmp
or
xchg
sub
inc
adc
mov
test
mul
scas
and
int3
(bad)
out
push
xchg
dec
jp
rcl
push
es
rol
or
add
outs
push
or
test
(bad)
cmps
jle
sbb
and
out
push
outs
or
scas
push
mov
jb
xor
ror
data16
inc
mov
adc
jb
imul
ins
adc
scas
dec
out
ins
or
xchg
push
push
rcl
out
jle
xchg
inc
sub
pusha
test
dec
push
in
xor
xor
push
sbb
push
push
fidiv
mov
jmp
push
dec
inc
cmp
(bad)
call
dec
push
pop
mov
dec
sbb
(bad)
push
push
mov
sbb
dec
cmp
mov
push
ds
dec
mov
xchg
xchg
cmps
jno
pop
mov
push
dec
inc
dec
push
adc
stos
push
sub
out
and
xchg
ds
dec
stos
adc
pushw
into
push
popa
mov
shr
imul
push
xchg
out
les
or
push
(bad)
mul
mov
ds
add
push
and
pop
add
ret
scas
push
inc
ds
push
xchg
push
ja
mov
aam
imul
mov
dec
jbe
add
and
mov
fs
inc
xor
sahf
into
stos
adc
test
add
retf
lahf
sbb
push
js
scas
inc
push
xor
add
push
out
push
jp
mov
push
(bad)
jae
push
inc
mov
cmp
jae
(bad)
sbb
movs
(bad)
mov
add
push
sahf
xor
push
or
hlt
je
cmps
(bad)
out
add
sbb
mov
pop
(bad)
retf
cmp
sahf
ss
sub
or
test
mov
out
cmp
jo
shl
ds
es
xor
ss
test
inc
adc
loope
dec
cld
es
and
inc
call
mov
jb
ja
inc
out
xor
xor
and
xchg
ja
mov
into
inc
sub
mov
pop
dec
mov
mov
dec
push
xchg
test
xchg
add
out
xor
es
cmp
(bad)
ss
je
dec
movs
(bad)
sahf
adc
ds
xchg
xchg
dec
jo
mov
push
ins
push
out
push
and
xor
inc
and
dec
scas
and
push
mov
fisubr
sub
call
pop
fidiv
pop
xor
xor
pop
add
cmp
dec
mov
xor
xchg
dec
mov
test
pop
dec
(bad)
push
xchg
xor
fdivrp
or
nop
sbb
add
data16
push
out
inc
xchg
and
or
jb
inc
ins
mov
inc
inc
and
pusha
nop
ds
pop
dec
add
sbb
xor
add
or
push
pusha
dec
sub
scas
data16
(bad)
adc
add
inc
(bad)
dec
fmul
or
ds
pop
add
data16
or
dec
push
or
sub
jo
push
mov
xor
ret
add
fcomp
ins
ins
add
imul
sbb
pusha
rol
out
sahf
inc
xor
div
mul
xchg
popa
test
shr
inc
xchg
sahf
and
push
into
loopne
stos
add
jb
dec
sbb
fcom
(bad)
repnz
adc
cmp
ss
push
add
dec
mov
mov
mov
dec
mov
test
test
push
xor
inc
jo
xchg
retf
push
inc
push
add
sbb
addr16
xor
fadd
push
mov
jno
xor
adc
test
les
xchg
imul
mov
popa
ins
dec
imul
sub
add
scas
pop
shl
mov
idiv
xor
inc
mov
push
mov
cmp
into
inc
or
dec
sbb
xor
into
outs
jecxz
push
ss
ret
or
cmp
jbe
scas
add
mov
xchg
adc
scas
push
or
into
or
outs
dec
push
fst
dec
ret
inc
ds
outs
inc
mov
or
outs
out
jle
pusha
mov
ss
cmps
or
push
adc
xchg
push
jbe
test
add
mul
mov
sub
push
push
loope
(bad)
mov
sbb
push
dec
mov
cwde
div
cdq
test
pop
neg
push
(bad)
push
xor
mov
xchg
fsub
xor
xor
test
imul
xor
out
mov
cmps
shl
cs
xadd
and
xchg
adc
dec
jbe
mov
jg
bound
mov
js
(bad)
xchg
cmc
cs
jge
pop
xor
mov
(bad)
push
sub
push
int3
xor
outs
popa
in
sbb
not
push
mov
inc
test
es
add
push
pop
push
jb
(bad)
pop
rol
inc
jbe
or
push
out
not
test
pop
jae
jbe
jne
movs
dec
imul
xchg
popa
add
lods
sub
add
xor
or
inc
inc
pop
xor
call
jle
dec
ds
or
sbb
cs
xor
and
into
out
fisubr
pop
xchg
pusha
outs
xchg
jo
test
lock
push
(bad)
popa
mov
inc
mov
jo
loopne
sahf
cs
dec
dec
pop
add
mov
pop
dec
pop
push
bound
xchg
xchg
outs
vpmullw
ss
push
inc
inc
dec
mov
push
xchg
ss
push
dec
adc
pop
dec
fsubrp
pop
push
sbb
out
mov
or
rcr
shl
mov
sub
add
mov
pop
pop
sbb
outs
push
push
outs
addr16
test
(bad)
push
fisub
push
into
or
popa
xchg
(bad)
out
or
popa
xchg
mov
pop
pop
jne
xor
push
rol
inc
push
not
test
movs
mov
popa
outs
push
cmp
gs
into
push
inc
push
bound
mov
jo
pop
mov
xor
(bad)
arpl
scas
cs
inc
lock
or
je
jle
les
push
cs
inc
pop
push
pushf
and
or
test
jle
test
test
mov
test
pop
or
pusha
loopne
cwde
mov
mov
mul
sahf
jle
mov
mov
pop
adc
pop
cmps
mov
pop
inc
mov
dec
jo
push
cwde
jbe
jle
push
and
mov
faddp
test
cmp
add
mov
xchg
call
push
jo
xchg
push
pop
fisub
es
hlt
push
add
ss
and
adc
jb
out
outs
adc
or
not
test
dec
ss
inc
push
xor
in
dec
push
mov
mov
(bad)
aaa
ds
ds
and
or
pop
(bad)
test
sahf
mov
xor
nop
sub
lock
dec
push
inc
and
push
ins
mov
mov
adc
push
xor
scas
dec
test
aam
ss
ss
cs
test
into
push
es
sbb
dec
test
mov
into
jb
lods
jp
xlat
inc
inc
pop
ficom
inc
dec
push
es
pop
adc
sub
cmp
jb
fisub
inc
es
test
addr16
push
(bad)
cmp
ins
push
jne
stos
xor
push
sub
xchg
push
neg
scas
inc
sbb
test
sbb
cmp
mov
jl
xor
push
es
mov
ins
popf
adc
mov
dec
xchg
push
mov
mov
adc
or
ret
add
push
adc
addr16
cwde
mov
cmps
push
popa
out
push
cmps
and
xor
dec
popw
sbb
ret
dec
xchg
inc
inc
and
cmps
outs
adc
movs
or
dec
es
cmps
pop
loope
and
mov
mov
aaa
neg
sahf
push
xchg
sbb
push
xor
das
mov
(bad)
push
cs
dec
inc
mov
and
scas
jo
inc
jne
into
cmps
and
retf
push
sbb
mov
scas
push
dec
sbb
div
xor
cmc
and
arpl
dec
sahf
addr16
push
and
gs
ss
es
adc
lock
arpl
jb
test
fadd
mov
push
(bad)
jbe
or
dec
xchg
mov
shl
xor
inc
int3
into
xor
cs
(bad)
into
push
(bad)
sub
add
inc
cmps
cmp
pop
out
add
jb
jb
cmp
jb
push
xchg
push
fld
ins
dec
cmps
push
xchg
pop
nop
jp
outs
push
dec
add
popa
mov
mov
xor
loope
dec
cmps
outs
scas
xchg
xor
rcl
adc
test
adc
xor
inc
inc
div
push
stos
push
push
out
cmp
xor
push
mov
dec
adc
out
popa
and
dec
xor
mov
ret
mov
(bad)
push
out
cmps
dec
or
inc
inc
push
mov
outs
dec
adc
cmps
push
mov
xchg
sub
xchg
xchg
pop
push
into
sti
adc
adc
and
sbb
jbe
inc
adc
xchg
jae
mov
jb
inc
xchg
mov
inc
jnp
ins
dec
inc
push
(bad)
popa
dec
inc
push
ds
sub
icebp
scas
es
or
loopne
push
pop
mov
push
mul
adc
scas
fidiv
adc
bound
(bad)
(bad)
jb
push
mov
mov
dec
or
mov
outs
xchg
sbb
xor
cmp
or
scas
int3
xchg
cmp
push
sahf
bound
mov
inc
scas
jae
stos
ret
dec
outs
pop
mov
loopne
sbb
sahf
mov
push
add
adc
ret
pop
imul
mov
rcl
jae
inc
addr16
inc
jae
add
rol
xor
out
cmp
dec
mov
xor
sbb
inc
scas
inc
adc
adc
retf
gs
cmps
dec
gs
(bad)
pop
scas
data16
push
push
add
or
push
scas
push
jbe
push
fidivr
inc
ss
cdq
lock
mov
mov
ja
gs
mov
adc
test
dec
adc
or
xchg
mov
mov
out
mov
push
int3
sbb
neg
xchg
inc
dec
mov
cmp
and
adc
and
pusha
jbe
jl
xchg
sub
push
dec
(bad)
dec
ror
pop
mov
pop
inc
pop
test
sub
jb
(bad)
pop
xor
(bad)
enter
jle
sub
or
add
xor
lock
gs
ds
push
adc
cmp
pop
jb
test
or
scas
(bad)
sub
push
xchg
fiadd
ret
sbb
add
cmp
jb
push
rol
es
xor
xor
in
ss
adc
adc
(bad)
mov
test
cmp
dec
pop
or
jne
cmp
push
xchg
jbe
and
out
popa
jb
loope
add
mov
inc
push
add
cli
adc
mov
dec
mov
popa
hlt
icebp
ret
into
jae
add
xchg
pop
ss
dec
cmps
push
xchg
xchg
xchg
iret
xor
ins
dec
mov
mov
test
pusha
(bad)
test
ss
ds
or
push
aad
movs
pop
mov
xchg
sbb
ficom
(bad)
dec
or
sar
adc
cmp
(bad)
jbe
or
pop
fsub
mov
add
push
dec
ins
out
add
test
jle
ja
xchg
sub
ds
mov
pop
cs
stos
dec
xchg
(bad)
addr16
push
dec
pop
ss
in
xchg
add
movs
mov
mov
ret
fiadd
inc
loopne
pop
(bad)
dec
and
shr
mov
jb
dec
jle
loop
call
cs
inc
mov
(bad)
mov
push
dec
dec
(bad)
pop
call
sub
inc
mov
push
popa
push
xor
scas
sub
es
pop
je
(bad)
xchg
mov
test
mov
add
dec
xchg
cli
out
xor
(bad)
out
sub
cmp
ss
fidivr
adc
pop
push
xor
inc
(bad)
inc
xor
or
jno
cs
lock
or
mov
inc
daa
push
push
xchg
inc
into
cmp
out
dec
dec
add
call
mov
push
inc
sbb
test
ss
iret
cmps
aaa
inc
push
push
sub
and
dec
push
sbb
push
call
arpl
fidivr
mov
xchg
jbe
pop
call
pusha
dec
inc
mov
push
mov
mov
or
ss
mov
xor
mov
xor
adc
pop
scas
mov
pop
mov
add
push
mov
xor
jbe
imul
jmp
jo
out
loop
add
mov
push
jb
push
lock
inc
cmps
push
jne
ins
test
sbb
addr16
ss
test
push
push
push
add
xor
ret
lea
pop
outs
dec
(bad)
sub
into
(bad)
jge
fs
cmp
data16
jle
arpl
add
xor
lea
sbb
dec
inc
xor
push
out
jne
mov
xor
push
inc
or
cmps
ds
dec
out
in
add
scas
xchg
or
mov
jb
dec
push
add
mov
js
pusha
push
out
mov
push
dec
loopne
outs
jb
(bad)
loopne
add
sbb
sub
xchg
mov
jmp
jl
adc
or
dec
loopne
add
push
sbb
fisubr
add
shl
xchg
(bad)
shl
outs
dec
push
or
cmps
ds
push
and
(bad)
xor
push
xor
lods
cs
xchg
fisub
adc
not
sub
ds
pop
sub
jle
push
push
jp
dec
pop
es
pop
push
dec
cmps
jo
dec
into
dec
push
cmp
push
mov
push
push
or
add
jl
ins
dec
(bad)
adc
jle
push
push
or
mov
push
xchg
aaa
or
or
(bad)
(bad)
xor
test
dec
xchg
cmps
and
xor
pop
sbb
jbe
add
jbe
int
ds
clc
push
(bad)
or
inc
jle
dec
or
push
push
sahf
push
jle
push
sbb
gs
or
xor
sbb
outs
push
scas
and
cs
into
and
or
(bad)
dec
mov
imul
outs
mov
rol
enter
dec
pop
xor
call
ins
imul
scas
dec
or
out
fld
or
jle
bound
add
inc
and
cmps
xchg
outs
outs
mov
and
scas
dec
fadd
xchg
ret
(bad)
pop
jle
or
and
scas
push
shl
add
xlat
loopne
push
push
push
out
adc
adc
into
pop
imul
push
jle
lods
push
call
xchg
adc
inc
add
xchg
aam
add
xchg
inc
(bad)
arpl
adc
jle
push
cmps
or
cmp
xor
addr16
ficom
pusha
adc
jb
sbb
pop
dec
xchg
or
retf
add
test
inc
ror
inc
ss
lock
xchg
test
inc
mov
inc
outs
inc
rcr
call
clc
imul
cmp
dec
xor
or
pop
neg
(bad)
lea
ins
jle
pushf
xchg
call
sub
dec
push
(bad)
popa
sub
xchg
push
push
and
pop
jne
jb
push
sbb
scas
cmp
data16
data16
xor
jbe
inc
push
mov
into
xor
inc
movs
push
out
jbe
push
xor
pop
push
add
xchg
pop
sahf
push
push
in
add
inc
arpl
jb
xchg
add
sbb
jb
outs
sub
dec
test
retf
inc
data16
ds
pop
aaa
jle
nop
inc
test
dec
dec
pop
jl
adc
pop
into
dec
out
push
fiadd
ret
inc
jb
xor
into
loopne
jmp
sub
inc
sahf
into
jbe
xor
out
fdivp
stos
adc
ds
push
dec
ds
push
mov
lods
push
push
(bad)
out
jne
loope
sbb
(bad)
push
xchg
call
push
jb
bound
call
push
or
ja
mov
sysexit
add
mov
xchg
movs
xor
mov
out
inc
int3
jb
or
imul
shl
pop
jl
inc
sbb
xchg
mov
data16
adc
jbe
mov
xchg
xor
push
push
addr16
inc
popa
stos
push
cmp
es
pop
or
fisubr
data16
add
mov
jl
dec
es
icebp
push
fsubr
test
in
sahf
out
push
adc
sub
daa
xchg
adc
xchg
pusha
ficom
jge
mov
add
pop
and
dec
mov
cmp
pop
mov
pop
test
pop
pop
inc
pusha
outs
fidiv
sbb
ds
mov
ds
jb
jl
xor
rcr
ja
mov
dec
push
xor
dec
pop
(bad)
into
imul
add
ret
into
ss
sub
sbb
data16
jbe
and
add
(bad)
adc
ins
xor
mov
dec
mov
xchg
into
push
mov
push
sbb
mov
sbb
test
xor
push
dec
push
shl
mov
and
inc
jae
inc
cmp
(bad)
es
inc
ja
or
push
push
xor
out
push
xchg
imul
ds
mov
sbb
mov
pop
mov
push
sub
add
out
(bad)
out
test
mov
jbe
xchg
call
addr16
test
xor
mov
inc
xchg
inc
sbb
push
dec
sahf
mov
add
outs
out
inc
popf
test
mov
sbb
test
ds
adc
inc
or
es
aam
pop
les
out
xor
dec
jl
es
sbb
pop
jbe
jl
or
out
inc
push
xor
test
(bad)
js
cs
imul
sahf
mov
adc
push
(bad)
xor
jne
icebp
push
xchg
dec
test
shr
div
mul
push
add
push
add
(bad)
(bad)
push
(bad)
mov
push
add
mov
mov
or
mov
push
inc
and
fiadd
pop
and
(bad)
push
push
hlt
xchg
or
cmp
popa
cmp
sbb
push
ds
cdq
pop
test
jle
mov
push
test
xor
mov
out
inc
mov
inc
cmp
sahf
es
xchg
mov
add
push
pop
xor
cwde
scas
mov
outs
xchg
cmp
mov
popf
cli
sub
jo
popa
adc
adc
rcr
out
jp
push
cmp
mov
gs
or
pop
outs
pusha
fidivr
adc
mov
push
(bad)
rcr
sub
ds
inc
and
push
xor
dec
cs
mov
test
or
ss
pop
cmp
cs
leave
sub
pop
push
push
jbe
mov
mov
or
xor
mov
sahf
xor
das
out
(bad)
fld
sub
pusha
into
jbe
add
xchg
cmps
mov
icebp
sub
or
mov
ins
push
and
(bad)
xor
add
loopne
fiadd
(bad)
push
and
outs
(bad)
add
mov
shr
call
xchg
dec
and
not
xor
xor
push
add
mov
adc
mov
jbe
jle
jp
in
push
sahf
cs
(bad)
push
xor
dec
push
mov
imul
jb
push
or
add
dec
mov
test
dec
(bad)
sub
jbe
pop
mov
push
jle
sub
jae
push
(bad)
(bad)
push
(bad)
xchg
mov
dec
int3
mov
retf
cmps
push
mov
rcl
push
mov
test
mov
imul
dec
and
mov
xchg
(bad)
test
out
push
xchg
jo
enter
inc
out
add
jmp
cmc
rol
inc
xor
jmp
cwde
mov
xchg
or
into
push
ss
dec
inc
cwde
or
dec
fimul
inc
xor
idiv
les
push
inc
popa
jne
jle
rol
push
xchg
ret
sub
mov
sbb
ins
jbe
add
cmc
and
lock
push
clc
ins
out
aad
dec
jle
(bad)
into
rcl
pop
jbe
jno
sub
push
push
mov
dec
imul
mov
inc
or
out
mov
in
or
pop
adc
add
fbstp
inc
hlt
addr16
dec
outs
dec
scas
(bad)
outs
(bad)
fcom
mov
or
data16
sub
outs
inc
fimul
in
ins
inc
push
push
push
add
in
out
inc
sub
inc
sbb
push
not
dec
inc
inc
adc
jne
dec
xor
xor
inc
iret
dec
adc
loop
fisub
pop
cmps
ins
mov
and
(bad)
(bad)
push
jl
mov
mov
scas
dec
xor
pop
cmp
popa
or
outs
out
and
inc
xchg
xor
or
jo
push
dec
add
popa
inc
pusha
mov
pop
data16
loopne
inc
ficom
outs
rol
cmp
rol
or
pusha
es
add
xchg
jo
inc
scas
mov
xor
xor
test
jne
ss
mov
mov
data16
outs
test
add
sub
neg
js
jle
imul
xchg
or
pop
or
xor
lds
dec
ficom
movs
mov
scas
sahf
mov
sub
cmps
mov
mov
push
shr
pushw
ss
mov
sub
xchg
jbe
add
les
adc
movs
outs
push
jne
pusha
push
call
out
test
repnz
jo
xor
pop
cs
sahf
outs
test
sub
jae
je
inc
mov
jbe
or
cmp
inc
jl
xchg
jmp
xchg
outs
push
inc
inc
add
push
add
push
jbe
push
movs
xchg
stos
dec
inc
shr
test
mov
fs
ds
xor
and
or
dec
loop
and
push
or
dec
ds
gs
in
data16
add
dec
bound
or
xor
or
cmps
pop
xchg
add
push
push
inc
scas
or
push
dec
popa
into
popa
push
pushf
jbe
(bad)
xor
adc
mov
pusha
cmp
pushf
test
ds
mov
jb
(bad)
call
je
push
ds
xor
add
push
inc
ds
pop
inc
xchg
push
fsubrp
sbb
and
shr
ret
sbb
push
push
out
cmp
dec
scas
outs
je
or
cwde
retf
out
pop
sbb
ss
mov
dec
push
shl
xchg
xchg
aam
cmp
pop
out
or
ret
es
cmp
add
call
es
pop
outs
je
push
add
cmps
cmp
dec
inc
xchg
outs
push
inc
and
call
mov
ins
inc
mov
push
xor
inc
and
push
ret
or
je
adc
cmps
inc
movs
xor
push
push
push
dec
sahf
pop
inc
xchg
xor
es
pop
dec
adc
push
ds
add
xor
pop
clc
sahf
xor
dec
pop
into
clc
inc
cs
mov
addr16
and
ret
push
into
(bad)
call
mov
pop
push
fisub
pop
mul
push
cs
(bad)
cs
xchg
jno
push
push
data16
xor
push
xor
pusha
(bad)
dec
mov
jo
jle
or
dec
ss
es
inc
inc
sahf
add
cmps
mov
add
jae
(bad)
bound
mov
pop
inc
inc
jecxz
into
daa
bound
dec
sar
dec
jno
xchg
pop
sbb
xchg
inc
jp
dec
or
xor
mov
adc
es
jae
push
push
pop
ja
jle
push
add
lods
push
test
cmp
outs
(bad)
pop
jle
mov
jbe
xor
add
sub
or
push
sbb
pop
inc
adc
out
inc
(bad)
or
dec
push
adc
and
fimul
or
sbb
add
pushf
adc
ss
or
jae
push
into
pushw
adc
adc
(bad)
lods
mov
push
push
inc
dec
loopne
movs
outs
push
bound
sbb
mov
sbb
sbb
and
xchg
scas
pop
add
inc
ja
sahf
(bad)
ins
add
ins
adc
add
stos
jo
jae
xor
inc
xchg
mov
jge
mov
sahf
xchg
mov
sbb
jle
popf
add
xchg
xchg
into
(bad)
gs
xchg
xor
inc
xor
or
outs
data16
or
inc
dec
jbe
xor
push
inc
cs
cmp
leave
outs
ss
jo
lea
xor
or
cmp
push
pop
aam
xchg
inc
shl
(bad)
push
(bad)
and
sahf
cmp
cmps
xor
outs
loopne
ss
mov
push
(bad)
sub
add
push
dec
hlt
xor
out
or
xchg
push
ds
adc
jno
jl
sub
test
psrad
fiadd
gs
and
es
or
add
inc
xchg
adc
sub
out
and
test
and
imul
es
dec
or
outs
data16
(bad)
and
out
enter
outs
add
dec
cmp
loope
enter
jbe
sbb
inc
(bad)
xchg
stos
leave
push
xchg
ins
push
lods
rol
pop
push
data16
imul
sub
iret
data16
inc
pop
push
out
xor
mov
mov
popa
lds
test
mov
xchg
pop
pushw
ss
scas
adc
cmp
and
pusha
cs
jbe
cmp
inc
test
push
push
cmp
imul
xor
out
dec
ror
push
imul
int3
(bad)
ret
push
pop
inc
and
ins
sahf
addr16
(bad)
es
add
adc
out
lods
mov
pusha
mov
xor
xor
xchg
ret
or
(bad)
sub
mul
push
dec
dec
out
jae
inc
inc
adc
dec
mov
inc
leave
pop
cmp
xor
cmp
adc
aam
xor
mov
ret
xor
into
sub
gs
add
push
and
ret
mov
enter
ss
in
and
xor
xor
xor
jbe
mov
dec
inc
test
or
es
mov
sbb
ds
cli
into
push
outs
push
push
mov
pop
sahf
inc
cmp
pop
sahf
push
jle
cwde
rcl
mov
dec
(bad)
push
push
and
xor
outs
dec
bound
or
sbb
push
or
sub
or
adc
push
sub
adc
mov
retf
xchg
pop
pop
add
push
xor
(bad)
pop
jb
pusha
cs
adc
mov
mov
ss
in
inc
inc
push
fidiv
into
mov
pop
jle
adc
push
xor
out
mov
xchg
inc
mov
xchg
dec
mul
pop
pushw
or
fisub
xchg
xchg
(bad)
or
(bad)
aad
add
mov
mov
inc
push
(bad)
es
ror
cmp
mov
cmp
loopne
add
and
lahf
adc
cmp
fimul
out
out
add
push
sbb
mov
pusha
jo
adc
push
jl
push
xchg
sbb
rol
push
cs
cs
ss
add
push
lock
jo
pusha
cmps
mov
inc
dec
data16
xchg
xor
xchg
(bad)
cdq
shr
ds
push
shl
cmps
xchg
jno
loop
or
push
dec
out
dec
test
out
scas
add
inc
sahf
cmp
mov
jne
dec
push
imul
cmps
cli
test
xchg
fidiv
dec
out
jmp
xor
out
ins
aad
es
mov
mov
cmp
mov
push
xlat
mov
inc
into
xor
mov
call
out
inc
test
dec
xchg
scas
pop
or
cs
out
xor
push
adc
mov
lock
jne
inc
xor
xchg
data16
popa
mov
sub
dec
or
cmp
bound
cmps
into
pop
scas
adc
dec
movs
ss
(bad)
div
jmp
sub
enter
mov
push
sbb
push
jecxz
or
jo
data16
adc
push
les
xor
push
add
adc
xchg
data16
jb
fcom
es
jle
xor
adc
pop
xchg
add
dec
push
pusha
sub
inc
pop
sub
dec
outs
mov
(bad)
push
test
test
push
mov
push
sahf
mov
jle
stos
dec
add
push
popa
jmp
push
jp
mov
push
loopne
cmp
dec
jle
loopne
mov
scas
addr16
inc
jbe
sbb
call
mov
outs
(bad)
push
xchg
sbb
xchg
(bad)
push
mov
push
jb
lods
dec
adc
fisub
xor
or
into
add
into
inc
cmp
xchg
sahf
xchg
dec
out
call
(bad)
xor
stos
outs
ret
ds
cmp
dec
leave
xchg
sbb
push
pop
and
adc
dec
(bad)
int
adc
out
dec
inc
push
test
outs
xor
inc
test
push
into
pop
out
stos
inc
pop
mov
cmps
dec
ins
ds
and
in
cmps
inc
dec
dec
jl
jmp
push
mov
cmp
jbe
retf
inc
popa
add
jb
mov
sub
push
cmps
adc
push
jae
popa
hlt
dec
(bad)
out
xor
pop
mov
dec
scas
sub
xchg
cmp
dec
pop
(bad)
mov
test
jo
sub
mov
add
hlt
cs
fcom
jle
adc
push
je
lods
push
mov
sahf
outs
mov
mov
sbb
push
out
bound
adc
inc
js
jae
push
xchg
mov
and
call
stos
and
cdq
or
es
mov
jbe
xchg
arpl
pop
mov
push
jo
and
push
cmp
mov
mov
xchg
push
push
cmp
push
dec
retf
lock
mov
dec
dec
inc
jbe
adc
mov
push
inc
xchg
add
or
inc
mov
push
xchg
push
sbb
mov
push
out
mov
test
es
push
cmps
data16
adc
add
push
xchg
sub
xchg
jo
out
jb
xor
fidiv
into
dec
mov
fisub
out
push
imul
sub
pop
sbb
scas
inc
jbe
push
ror
les
data16
push
into
cmp
and
inc
scas
or
xchg
es
retf
xchg
inc
test
mov
mov
test
mov
add
mov
inc
xchg
sub
mul
test
enter
push
xchg
cdq
dec
add
sbb
mov
outs
enter
dec
into
cmp
dec
xchg
stos
sbb
(bad)
(bad)
imul
les
dec
inc
inc
cmps
out
sbb
push
push
test
mov
dec
inc
mov
mov
scas
sub
sbb
xchg
(bad)
pop
pusha
and
push
jle
pop
jae
inc
mov
cs
outs
push
(bad)
adc
dec
xchg
data16
xchg
ins
hlt
mov
and
xchg
dec
mov
jp
xchg
and
sahf
push
scas
ds
add
sbb
xor
jbe
popf
sahf
mov
push
pop
xor
je
add
(bad)
fistp
retf
cmp
mov
mov
lods
push
(bad)
jbe
push
sub
adc
inc
test
ins
data16
dec
dec
sub
inc
xchg
jbe
push
dec
mov
adc
sbb
outs
xchg
pusha
ret
bound
sbb
(bad)
push
dec
inc
lea
loope
xchg
push
mul
push
mov
jbe
fiadd
dec
jb
test
inc
cmps
push
ja
dec
mov
(bad)
(bad)
mov
jp
push
(bad)
dec
add
and
dec
test
inc
mov
adc
scas
push
(bad)
cmp
test
inc
out
sbb
and
xchg
ficom
(bad)
(bad)
mov
into
aaa
dec
inc
xor
mov
xchg
ret
xor
push
dec
or
movs
push
push
outs
test
push
ja
jl
jo
sub
(bad)
nop
or
rcl
cli
dec
sbb
mov
ins
aaa
xor
fist
inc
mov
sbb
retf
rcr
xor
pop
or
test
jbe
push
jo
pusha
push
dec
xchg
pushf
pop
push
outs
mov
mov
xor
inc
scas
ds
mov
jle
ss
add
(bad)
(bad)
push
adc
bound
jbe
mov
mov
inc
add
pop
outs
inc
aad
nop
fdivr
push
pop
fidiv
mov
adc
push
add
mov
popa
and
xchg
push
mov
inc
fcom
bound
pop
ffree
dec
outs
jle
push
mov
scas
scas
or
inc
imul
popa
das
test
xchg
xchg
adc
add
xchg
pop
ss
jne
xor
jl
(bad)
xchg
adc
mov
stos
add
or
push
push
mov
adc
xor
test
fs
stos
jo
outs
jecxz
pop
sbb
out
jb
xor
sub
inc
inc
mov
js
adc
(bad)
(bad)
mov
or
shl
pop
mov
fisubr
(bad)
sar
pop
and
sbb
lods
and
(bad)
jle
adc
push
ds
dec
ror
sub
and
ss
inc
jb
push
jbe
add
xchg
ds
mov
push
test
into
mov
pop
sahf
cmps
add
cwde
shl
(bad)
outs
cmps
mov
add
call
pop
push
rcl
add
jl
xchg
adc
stos
sahf
dec
push
cmps
or
fidiv
jne
sbb
pushw
mov
adc
and
mov
(bad)
sbb
adc
(bad)
jle
das
sbb
or
push
xchg
inc
sub
mov
retf
inc
dec
add
cs
enter
push
outs
in
adc
pop
ja
add
xor
ds
mov
xchg
jmp
out
loope
add
mov
and
addr16
outs
popa
jne
test
es
dec
add
xor
mov
push
scas
sub
and
push
push
inc
inc
push
outs
lods
pop
xor
inc
(bad)
jb
test
mov
ror
fisubr
add
sahf
push
push
mov
dec
fmulp
(bad)
cs
mov
stos
and
xor
dec
sub
(bad)
jle
push
push
mov
adc
popf
push
inc
sahf
or
out
or
or
test
dec
dec
pusha
add
sahf
dec
and
mov
xchg
stos
mov
scas
jb
xor
(bad)
xchg
mov
cs
add
ds
mov
(bad)
mov
push
ss
out
imul
xchg
nop
or
push
push
push
push
sbb
push
sub
nop
scas
jle
push
test
add
pop
xor
mov
outs
mov
xor
add
dec
or
mov
inc
pop
imul
jb
pop
xor
cmp
bound
mov
(bad)
jmp
mov
xor
push
mov
mov
sub
adc
es
in
sbb
jle
and
and
push
push
or
add
jb
sbb
push
xor
cmp
sub
cs
mov
into
imul
lea
cmps
es
mov
jle
fiadd
lock
pushw
push
push
jmp
inc
push
mov
(bad)
push
aas
add
pushf
nop
(bad)
(bad)
bound
mov
adc
ins
jo
xchg
sbb
jbe
cmps
icebp
or
(bad)
ja
push
pop
mov
adc
sahf
out
fisubr
shl
lods
inc
pop
push
cmps
or
xchg
mov
jno
lea
push
add
test
dec
dec
ficom
les
push
push
retf
adc
fisub
addr16
or
inc
push
stos
call
scas
outs
sbb
into
(bad)
sahf
rol
in
xchg
mov
xchg
pop
cmp
pusha
outs
in
mov
add
sub
xor
and
fbstp
dec
scas
add
xor
lock
pop
adc
out
jbe
sbb
push
data16
adc
pushw
ja
push
push
adc
jb
mov
fiadd
sbb
and
dec
or
push
fadd
mov
push
sbb
xchg
sahf
dec
pop
fisub
loop
dec
jecxz
mov
jbe
sbb
mov
push
mov
push
sub
push
scas
enterw
data16
dec
mov
inc
xchg
xchg
ror
or
mov
jae
inc
or
or
mov
lahf
outs
push
dec
xor
cli
(bad)
ds
and
in
fidiv
adc
dec
out
ret
fdivr
ds
ss
push
or
imul
(bad)
outs
push
push
push
pop
rol
add
push
pop
push
dec
es
and
dec
add
mov
into
lods
dec
sbb
mov
mov
aam
add
es
mov
add
sahf
(bad)
inc
mov
dec
inc
dec
dec
mov
inc
sbb
bound
or
into
push
cmps
cs
or
xchg
pop
fldenv
sub
xchg
faddp
bound
xor
sahf
add
mov
push
inc
or
(bad)
xchg
or
and
or
inc
xor
(bad)
test
pop
sbb
mov
es
add
push
pop
xor
sbb
fisub
push
div
pop
push
push
dec
sbb
outs
outs
enter
inc
ds
push
stos
ins
cmp
xor
jbe
push
pop
add
xchg
cmps
fcomp
sahf
ds
ret
dec
out
push
push
mov
scas
lods
add
and
daa
popa
mov
dec
mov
adc
and
(bad)
mov
sbb
into
xor
test
push
jle
scas
imul
push
sbb
dec
push
sahf
ret
cmps
jle
push
inc
out
ror
jmp
push
pushf
mov
xchg
fidiv
add
lods
pop
mov
inc
inc
xor
cmp
push
outs
addr16
jb
add
xchg
adc
data16
jo
(bad)
mov
xchg
xchg
lea
fidivr
push
adc
push
mov
pop
lods
fnsavew
bound
push
push
enter
mov
xchg
jbe
or
jbe
push
ins
inc
loop
cli
xchg
dec
sub
cmps
popa
(bad)
(bad)
sub
mov
es
adc
sub
push
add
jle
imul
jle
push
out
inc
dec
xor
or
aaa
pop
cmps
push
xor
push
loope
stos
out
outs
jle
pop
cs
push
inc
xchg
xchg
push
mov
push
idiv
xor
es
cmp
pop
sbb
dec
inc
sbb
outs
sub
or
xor
mov
mov
aad
jae
inc
pop
loop
push
adc
jbe
ret
popa
push
dec
jle
inc
mov
mov
mov
sahf
push
jae
push
jne
data16
ins
cwde
push
sub
outs
inc
nop
add
jbe
ss
push
les
add
or
adc
sub
jbe
push
pop
add
push
and
jb
(bad)
outs
push
mov
(bad)
xor
push
jmp
outs
pop
push
mov
xchg
(bad)
mov
out
push
into
out
push
test
push
dec
out
gs
sbb
xor
pop
sbb
(bad)
outs
or
push
mov
test
xchg
outs
xchg
popa
rcl
push
mov
and
stos
xchg
xor
inc
push
leave
sbb
xor
push
js
pop
jp
es
cmp
icebp
clc
out
xchg
xchg
popa
mov
and
mov
add
push
cs
test
ss
ins
cmp
mov
pop
jl
xor
out
dec
push
pop
inc
shr
mov
sub
dec
popa
xchg
xchg
xor
cmp
jle
(bad)
sbb
pusha
out
inc
jno
sahf
mov
ss
inc
imul
(bad)
pop
jbe
xchg
cmp
push
rol
or
inc
pop
sub
mov
push
or
or
push
loopne
xor
mul
add
test
dec
inc
movs
and
jb
pushw
sbb
xor
test
or
mov
dec
neg
cs
test
bound
jle
shr
call
dec
inc
dec
cmp
popf
es
push
jp
jmp
inc
pop
(bad)
loop
data16
cmps
xor
inc
idiv
shr
xor
and
xor
push
cs
leave
xchg
xchg
(bad)
(bad)
pop
push
xchg
loop
sbb
scas
jle
jb
and
out
mov
push
imul
push
jbe
add
dec
es
outs
data16
out
pushw
pop
cs
enter
into
xor
fidivr
cmc
add
sahf
ja
es
sub
ss
xchg
and
adc
repnz
mov
jle
fwait
jo
sahf
cmps
and
popa
out
imul
xchg
jne
or
lds
xor
(bad)
push
push
je
xchg
mov
push
inc
push
push
push
xchg
adc
push
es
daa
sbb
dec
sub
dec
jmp
outs
ds
inc
xchg
inc
mov
jl
push
or
ror
mov
(bad)
xchg
or
es
xchg
dec
ficom
inc
jg
and
mov
push
xchg
jmp
jle
xor
leave
push
push
xchg
out
pop
(bad)
dec
sahf
test
sbb
dec
push
xchg
sahf
add
in
push
sbb
movs
adc
push
push
stos
lock
mov
sub
neg
mov
ds
xor
(bad)
cmp
inc
mov
out
xor
xor
mov
js
movs
pop
data16
push
jecxz
push
into
pop
jle
push
xor
add
mov
je
or
dec
pop
mov
push
mov
cmp
xor
inc
hlt
ret
and
sahf
and
adc
xor
add
ss
bound
out
dec
add
jbe
inc
pusha
dec
ds
data16
mov
(bad)
jle
outs
enter
push
mov
mov
dec
push
jbe
dec
test
add
out
test
data16
push
call
inc
dec
sub
pop
xchg
dec
mov
xor
sub
(bad)
out
or
sbb
cdq
stos
push
cmp
(bad)
xchg
adc
dec
pop
ss
pop
(bad)
xchg
adc
test
fidiv
xchg
pop
push
ds
dec
shl
sub
add
mov
push
push
push
mov
xchg
cmp
or
push
xchg
xor
xchg
adc
adc
rcl
dec
es
mov
or
xor
inc
jmp
push
ds
sbb
pop
jbe
ficomp
inc
or
push
add
add
xchg
mov
enter
test
jae
mov
xchg
jle
or
push
push
cmp
adc
xchg
(bad)
inc
gs
into
pop
bound
add
out
inc
mov
sub
pop
loope
mov
data16
out
outs
test
mov
cmp
jle
and
cmp
ins
push
imul
dec
mov
xchg
mov
push
push
test
neg
sbb
jmp
aam
pop
pop
out
cs
clc
loope
cmps
xor
inc
loopne
or
jp
outs
push
fxch
or
xchg
pop
push
jo
mov
xchg
xchg
inc
or
dec
jbe
and
pop
mov
cmps
popa
movs
cmp
call
fisubr
sub
(bad)
pop
xchg
add
loope
not
add
xor
inc
imul
inc
push
cmp
mov
push
(bad)
in
arpl
xchg
push
scas
rcl
inc
mov
xor
lock
into
xor
xor
or
push
jle
or
out
dec
push
cmp
push
push
es
fnstcw
es
sbb
add
stos
sub
and
push
push
sub
dec
and
scas
xchg
push
les
(bad)
and
test
push
or
add
js
test
dec
inc
(bad)
jle
pop
and
xchg
mov
outs
pop
or
mov
add
inc
add
dec
dec
xchg
mov
push
mov
jmp
outs
cmp
pop
sbb
dec
xor
push
(bad)
inc
pop
xchg
jmp
addr16
push
nop
or
inc
xchg
sub
inc
jno
inc
jbe
xor
sbb
mov
mov
dec
into
mov
and
inc
sahf
inc
dec
test
fiadd
and
inc
or
cmps
sub
sahf
les
test
push
fld
and
(bad)
mov
data16
shr
(bad)
sar
mov
stos
add
sub
sahf
add
cmps
ds
xchg
dec
xchg
mov
call
sbb
mov
xor
add
lock
into
scas
add
inc
push
mov
test
lods
test
push
xor
inc
pop
add
pop
mov
out
test
inc
or
cs
div
push
push
push
add
dec
daa
outs
push
inc
add
out
push
neg
add
daa
(bad)
aas
jp
rol
push
inc
jle
xor
sub
les
mov
cmp
pop
mov
rol
mov
popa
xor
idiv
out
test
sbb
xor
and
shl
call
push
into
add
cmp
jbe
(bad)
mov
dec
xchg
push
jle
push
cli
push
ret
fisubr
jle
daa
jbe
mov
les
mov
pop
dec
out
pop
hlt
jle
inc
push
sbb
loopne
or
sbb
adc
mov
xor
or
out
ds
arpl
push
push
sub
and
pop
fisubr
(bad)
fimul
ret
inc
xor
es
dec
sbb
pop
inc
jle
inc
addr16
sbb
cmp
dec
scas
xchg
dec
cwde
or
sbb
daa
cwde
jmp
pop
inc
sub
cmp
scas
push
mov
inc
je
push
adc
sbb
xchg
sbb
sub
aad
data16
inc
inc
inc
daa
mov
inc
pop
retf
or
into
push
inc
or
push
adc
cmp
dec
(bad)
cmps
bound
inc
pop
lahf
outs
inc
jo
inc
add
shl
out
pusha
lock
xchg
inc
je
inc
dec
pop
or
ficomp
ins
test
outs
mov
fisub
movs
mov
mov
xchg
inc
fcomp
sub
push
ss
cmp
inc
clc
push
push
push
pop
inc
cs
ins
push
mov
pop
mov
out
in
sbb
es
sbb
mov
sbb
jne
(bad)
div
mov
ficomp
jbe
sub
test
sahf
push
xor
add
pop
mov
cmps
xor
xor
and
aam
movs
int3
mov
jb
in
sub
add
pop
jo
ds
push
arpl
int3
fs
(bad)
scas
scas
or
test
dec
sahf
push
jbe
mov
pop
test
push
push
push
mov
jae
dec
sbb
jle
xor
dec
mov
mov
pop
xor
repnz
push
sbb
popf
test
cmps
push
and
dec
jbe
mov
mov
mov
add
call
xchg
les
sub
mov
and
faddp
xchg
xor
pusha
movs
pop
bound
push
pop
popf
nop
push
movsx
es
data16
xchg
dec
out
xchg
sbb
addr16
adc
xchg
popa
jne
mov
enter
dec
and
or
xlat
mov
cs
inc
in
(bad)
scas
(bad)
xor
mov
sub
push
push
aaa
push
mov
dec
adc
xor
add
scas
aam
data16
into
cmp
pop
or
sahf
cmp
add
(bad)
xor
(bad)
push
pusha
push
(bad)
pop
xor
sahf
xchg
push
mov
mov
loop
adc
jle
into
sub
cmp
idiv
sub
push
xor
mov
es
or
mov
jmp
cwde
sub
dec
xor
es
xchg
nop
inc
and
jle
ds
adc
push
push
push
push
mov
xchg
outs
push
icebp
pusha
cmps
push
mov
(bad)
jne
cmp
arpl
or
dec
out
les
xchg
inc
(bad)
mov
dec
sbb
sahf
cs
daa
push
jbe
out
inc
adc
inc
inc
jbe
mov
rcl
cs
jl
push
movs
push
mov
cmp
push
and
inc
dec
ins
inc
and
mov
inc
ins
(bad)
leave
push
leave
pusha
push
or
sbb
jae
(bad)
sub
icebp
clc
dec
pop
mov
int
sahf
push
push
push
jbe
and
fidivr
dec
out
xchg
inc
adc
into
(bad)
fimul
outs
in
outs
inc
xor
data16
test
inc
mov
push
jle
popaw
lea
into
mov
adc
data16
jb
bound
mov
es
push
push
mov
adc
dec
xchg
imul
xor
push
add
pop
es
or
jle
push
ss
push
or
sub
pop
inc
or
sbb
jb
pavgb
pop
mov
push
(bad)
cmps
sub
pusha
adc
push
sbb
es
es
dec
xor
mov
mov
push
inc
adc
mov
out
xor
ret
mov
jmp
push
imul
les
mov
push
(bad)
push
cmps
mov
out
inc
gs
and
push
je
lahf
xchg
add
into
xor
dec
cs
sub
gs
pop
sub
popa
mov
cmps
push
inc
add
dec
inc
daa
xchg
jb
xchg
ins
test
xchg
test
mov
ss
pusha
jo
jle
and
aad
sub
mov
and
or
out
push
xor
xor
xchg
cmp
mov
(bad)
xor
inc
test
or
rcr
movs
adc
inc
test
popa
push
or
mov
or
dec
test
mov
add
push
inc
and
and
mov
inc
mov
push
push
mov
into
scas
(bad)
jecxz
mov
or
xchg
ret
(bad)
fsubp
cmps
cmp
and
jae
mov
mov
repnz
jmp
dec
xchg
or
dec
adc
outs
add
in
les
jbe
dec
add
or
mul
dec
int3
add
adc
cmp
pop
es
and
push
cdq
jo
es
(bad)
push
add
mov
pop
(bad)
xor
adc
test
push
mov
dec
out
xchg
retf
adc
xor
dec
cmp
fs
xchg
in
push
push
cmp
add
(bad)
cs
mov
sub
loop
(bad)
aaa
jne
ret
push
mov
(bad)
rcl
mov
push
ret
out
push
retf
(bad)
bound
push
jo
call
dec
cs
and
xor
inc
push
bound
add
inc
and
mov
pop
je
mov
pusha
push
xchg
test
(bad)
ins
pop
sbb
hlt
push
cmp
push
clc
inc
pop
(bad)
scas
ret
adc
pop
xor
aam
es
push
or
(bad)
jbe
mov
popa
dec
outs
sbb
rol
scas
(bad)
into
mov
(bad)
out
pop
int
ss
outs
xchg
xor
test
retfw
leave
ret
or
push
sahf
out
sub
and
pusha
xchg
pop
push
mov
sahf
push
sahf
cmps
xor
aam
lea
pop
push
nop
shr
jle
out
sbb
and
or
inc
imul
ficom
inc
xor
inc
(bad)
cs
ins
xor
pop
pusha
dec
xchg
push
inc
sub
bound
add
mov
add
call
jle
mov
xchg
push
push
pop
or
xchg
jbe
outs
and
jecxz
dec
ficom
inc
add
cs
push
push
loop
jne
sub
mov
inc
enter
call
xchg
pop
cs
dec
jbe
pop
and
(bad)
sahf
mov
mov
mov
out
pop
movs
retw
and
push
cmp
jle
ds
push
movs
ror
inc
shl
test
adc
fimul
sbb
sub
outs
dec
add
ret
or
idiv
enter
jle
ror
pop
(bad)
scas
add
sub
repnz
xchg
ret
xchg
data16
jle
fwait
push
cmps
pop
(bad)
jo
outs
loop
cmp
mov
adc
scas
push
leave
gs
or
inc
loopne
cs
or
sahf
sahf
mov
inc
push
or
into
int3
inc
fs
(bad)
test
push
xchg
xor
(bad)
xchg
into
loopne
sbb
out
push
jae
pop
bound
test
js
pop
sbb
xor
imul
xchg
dec
jle
mov
jge
ds
fs
dec
ss
(bad)
pop
loopne
or
cmps
sahf
inc
or
xchg
push
mov
dec
loope
push
jbe
cmp
loopne
scas
pusha
lea
inc
xor
and
xchg
imul
mov
mov
pusha
jbe
ss
outs
mov
loope
or
arpl
add
mov
ds
jo
xor
(bad)
push
cwde
test
scas
push
add
inc
sub
movs
push
add
xchg
xor
inc
and
inc
mov
jmp
adc
cmp
outs
jle
inc
xor
(bad)
pop
out
xchg
and
arpl
hlt
and
das
or
adc
sub
push
ss
add
mov
pop
push
cdq
pusha
data16
dec
dec
mov
leave
dec
inc
(bad)
push
add
ds
xor
push
es
aam
push
test
push
cmp
push
(bad)
jp
pop
sbb
push
mov
xchg
(bad)
add
in
dec
xchg
or
push
pop
sbb
xchg
dec
cmp
xor
pusha
add
push
push
push
test
push
inc
outs
(bad)
push
add
test
push
gs
(bad)
into
pusha
and
sub
inc
or
into
dec
xor
push
(bad)
xchg
cmps
or
dec
mov
jbe
pop
sbb
fisubr
mov
add
or
loopne
test
push
ficomp
pop
jmp
xor
add
push
inc
in
mov
jbe
xchg
aam
push
sahf
ss
push
add
pushw
xor
mov
imul
lods
add
mov
cs
mov
pop
mov
inc
xor
cmps
fisubr
dec
gs
pop
sahf
dec
mov
loop
add
mov
mov
data16
xchg
inc
or
mov
addr16
push
inc
fstp
bound
inc
add
xchg
imul
mov
xchg
dec
dec
cmps
data16
jle
add
adc
dec
mov
xor
push
pop
inc
sub
or
jbe
sahf
inc
mov
lock
dec
push
mov
or
adc
(bad)
mov
in
shl
push
push
mov
add
or
and
test
gs
mov
into
inc
test
jbe
jmp
sahf
outs
add
dec
shr
dec
jmp
les
sub
cs
out
inc
mov
or
sahf
pushw
add
and
ret
and
mov
into
scas
pop
xchg
ficom
fidiv
pop
push
or
and
sahf
xchg
dec
cmp
push
gs
add
mov
inc
rcr
mov
push
pop
dec
cmps
call
inc
js
and
out
xchg
popf
xchg
pop
out
dec
jb
in
push
mov
add
mov
stos
add
(bad)
push
inc
push
xor
inc
xor
sub
jbe
adc
jo
cmps
(bad)
push
(bad)
call
outs
test
xchg
data16
push
xchg
jecxz
bound
cmps
cs
mov
jo
fidivr
mov
lods
push
(bad)
into
sub
inc
shl
(bad)
mov
push
ss
or
sahf
inc
dec
cmp
daa
mov
push
mov
push
push
ficomp
push
ret
xchg
outs
es
push
pusha
add
cmps
movs
adc
out
loop
sub
dec
mov
fidiv
int3
pop
or
cs
inc
dec
es
push
or
(bad)
push
push
inc
dec
mov
cmp
cmp
addr16
mov
xchg
push
xchg
ss
or
and
scas
or
xchg
jb
fbld
pop
adc
outs
jle
xchg
mov
pop
add
add
imul
dec
lea
xchg
push
(bad)
data16
bound
pop
adc
ret
data16
add
(bad)
mov
not
dec
pop
pop
cmp
rcr
inc
mov
push
inc
inc
(bad)
inc
shl
popa
fidivr
aam
push
test
xor
and
xor
push
mov
sub
jne
sahf
jb
sub
sti
xor
jbe
sub
cmp
clc
into
push
mov
inc
fwait
or
pop
jbe
jcxz
pusha
nop
jle
es
and
inc
push
scas
add
ds
xchg
rcl
jle
into
aam
mov
push
mov
pop
pop
out
ss
push
and
jle
mov
jbe
inc
cmc
add
jle
dec
mov
or
and
shl
xor
aad
(bad)
cmps
mov
pop
xchg
pop
mov
data16
shl
push
jbe
adc
dec
xor
popa
movs
(bad)
es
xor
adc
dec
add
xor
push
adc
mov
xor
dec
es
es
push
and
jne
dec
xchg
or
xchg
jp
test
jae
jle
je
sbb
sahf
xor
or
je
cmps
xor
xor
sub
add
fisubr
and
push
jbe
sbb
cmps
out
xor
mov
push
and
es
push
sbb
mov
inc
jmp
mov
loop
xor
lods
push
scas
ja
div
push
add
data16
inc
lea
cmp
bound
adc
mov
es
lahf
sbb
dec
movs
into
mov
es
dec
push
pop
(bad)
je
xchg
ss
jbe
push
das
push
sbb
(bad)
pop
ret
ror
stos
in
aam
fisubr
and
(bad)
(bad)
mov
xor
adc
sbb
xchg
push
rcl
dec
mov
js
push
fistp
(bad)
push
xchg
jle
popa
mov
scas
fidivr
pop
or
leave
pop
push
es
inc
pusha
add
push
push
sbb
xor
(bad)
cmps
test
jbe
jmp
push
mov
push
xor
dec
lods
xchg
(bad)
leave
popa
push
or
push
lods
shl
push
adc
scas
ss
xor
into
mov
scas
ret
push
test
pop
fidiv
outs
js
pop
inc
xor
dec
fiadd
push
dec
cmps
movs
inc
aam
cmps
(bad)
(bad)
inc
mov
and
ficom
xchg
jecxz
dec
dec
and
out
imul
jl
ret
and
mul
add
inc
out
jle
(bad)
into
adc
out
loope
or
es
mov
scas
mov
out
mov
dec
sub
adc
(bad)
imul
cmps
sahf
or
add
pop
xor
xor
sub
pusha
jle
jae
add
ss
pop
push
push
push
loopne
jle
dec
xor
sbb
mov
sahf
fimul
add
(bad)
fs
add
sahf
cmp
popa
and
xlat
jle
mov
sub
mov
sbb
scas
cmps
test
dec
inc
sub
fimul
sub
inc
inc
outs
xchg
sbb
push
into
adc
(bad)
xchg
dec
sub
xchg
ds
mov
inc
jo
pusha
mov
stos
scas
ins
es
addr16
push
mov
je
push
stos
mov
dec
mov
xchg
inc
adc
dec
ret
push
les
dec
mov
stos
pop
pop
push
push
cs
aad
xor
push
push
outs
test
inc
out
ss
and
imul
pop
pop
add
test
fild
int3
sbb
push
les
push
cmp
adc
push
xor
add
ror
cmp
je
inc
test
mov
push
sbb
inc
add
lock
add
sub
and
mov
pop
pop
inc
cmp
jo
outs
push
xor
es
or
ins
mov
xchg
jmp
inc
sbb
push
stos
adc
adc
and
inc
ror
adc
stos
add
fst
jo
xor
cmp
xchg
xor
pop
lock
addr16
ror
aaa
mov
xor
push
jmp
xor
add
dec
add
mov
sbb
adc
sub
sbb
push
mov
or
push
cli
adc
sbb
pop
call
push
(bad)
dec
sub
pop
sahf
xor
test
ret
rcr
jge
js
shr
inc
fst
test
sub
aam
inc
sbb
loop
add
add
shr
push
push
loope
cmp
clc
addr16
shl
cmp
xchg
sahf
adc
mov
inc
sub
adc
pop
sbb
mov
test
and
and
and
add
rol
xor
ret
sub
cwde
test
mov
push
adc
popa
movs
xor
loopne
fcom
mov
xor
js
and
add
add
rol
pop
cmp
sbb
and
pop
mov
cs
ss
adc
rol
inc
test
and
lea
test
int3
add
inc
sbb
mov
ins
mov
sub
xor
sahf
inc
fs
or
movs
dec
or
xchg
and
add
dec
lock
sub
mov
pop
push
lods
dec
mov
shl
or
lock
xor
enter
xchg
clc
mov
push
push
loope
enter
mov
es
add
mov
sbb
xchg
xor
sub
test
dec
es
or
inc
data16
mov
test
cmp
mov
(bad)
dec
and
mov
pop
call
push
xor
push
bound
pop
inc
add
pop
push
jp
int3
mov
sbb
dec
add
inc
cdq
and
shl
or
mov
pop
mov
mov
sub
ror
mov
out
dec
and
jbe
lock
xor
cmp
push
rcl
test
push
xor
rcr
xor
jbe
enter
les
inc
test
add
add
cmp
cs
js
dec
cwde
xor
cwde
clc
push
les
and
mov
les
dec
pusha
xchg
dec
ret
cmps
loopne
cmp
jb
mov
loopne
or
loope
mov
or
or
xor
gs
add
pushf
adc
push
enter
aad
push
add
inc
test
pusha
nop
ss
jl
ins
stc
js
mov
pusha
test
ins
clc
dec
push
adc
cmp
adc
inc
or
push
push
cmp
dec
add
xor
push
mov
xor
dec
pop
mov
dec
and
push
mov
jo
dec
pop
push
mov
pop
cmp
cmp
enter
xchg
inc
pushw
loope
xor
push
or
jb
loopne
push
dec
sbb
clc
mov
lea
adc
loop
dec
data16
sbb
movs
adc
add
mov
cmp
mov
dec
adc
fsub
ret
push
and
inc
adc
cmps
adc
dec
inc
push
push
add
dec
mov
add
call
mov
rcl
jbe
ins
ficom
lock
loopne
leave
adc
push
push
add
add
sub
sbb
adc
xor
dec
mov
pushf
and
(bad)
imul
hlt
loopne
mov
fld
xor
lock
clc
mov
push
js
data16
xor
add
and
clc
sub
jl
xchg
push
pop
inc
ret
cwde
add
sbb
loopne
in
sahf
push
pusha
add
inc
sub
push
sar
dec
add
xor
lock
push
cwde
push
inc
js
push
push
or
cli
adc
clc
gs
test
push
test
shr
xor
adc
jne
call
mov
mov
(bad)
fsub
sahf
addr16
add
push
xor
dec
test
ja
inc
inc
rol
in
jbe
ret
or
inc
ins
xor
inc
stos
xor
mov
mov
mov
and
rol
mov
pop
js
shl
add
test
inc
int3
stos
je
movs
call
(bad)
push
mov
mov
into
pop
and
mov
push
push
sbb
push
dec
mov
jl
dec
mov
sbb
dec
jmp
lods
and
cmp
js
xchg
retf
shl
push
mov
dec
aaa
xor
mov
push
add
dec
clc
and
nop
pop
add
xchg
jo
cli
add
sub
mov
imul
adc
sahf
ds
push
mov
push
(bad)
retf
and
test
loopne
mov
dec
test
push
dec
enter
cmp
add
test
rcr
inc
pusha
lock
mov
xchg
fwait
adc
sbb
pop
call
mov
es
leave
dec
sub
pusha
push
push
add
push
xchg
retf
jo
pusha
sbb
stos
push
dec
ror
adc
ret
jbe
fcom
or
or
call
lock
sbb
loopne
rol
add
mov
call
popa
cmps
test
jb
lods
pop
cmp
xchg
xor
push
test
inc
xor
clc
gs
inc
ret
cs
sub
out
add
ds
add
sbb
pusha
cmp
(bad)
dec
adc
out
mov
dec
loope
mov
inc
pushf
push
sbb
inc
lock
xor
imul
dec
mov
into
fs
mov
cmp
cmp
mov
rol
popa
mov
mov
mov
lock
inc
dec
jae
sbb
ret
imul
sbb
xor
sub
enter
loop
xor
xor
push
pusha
or
sbb
or
pop
ret
mov
push
sbb
bound
and
loopne
mov
inc
dec
push
push
(bad)
cs
push
cmp
test
sbb
pop
ss
fidiv
and
clc
push
push
cmp
movs
xor
(bad)
fidiv
bound
stos
xchg
adc
rcl
push
dec
std
dec
inc
imul
add
add
je
call
mov
nop
inc
dec
jb
lds
mov
stos
les
push
pusha
jp
xchg
dec
je
pop
jne
lea
jae
sbb
xchg
pop
mov
test
lods
push
add
int3
xchg
add
add
sbb
shl
inc
push
xor
push
or
inc
outs
es
sub
cs
push
jge
jbe
jae
scas
push
faddp
(bad)
jb
sbb
mov
js
cmp
addr16
sbb
fcom
push
aad
cmp
mov
fcomp
mov
xchg
pop
mov
and
pop
rsm
mov
or
cmp
adc
dec
je
mov
inc
or
mov
and
cmps
(bad)
or
js
aam
dec
fwait
data16
pop
dec
clc
rcl
inc
or
add
bound
push
sbb
jbe
pushf
ret
inc
inc
dec
inc
daa
xor
cmps
sbb
pop
pop
ror
clc
outs
add
cmps
mov
(bad)
fsubr
push
and
sbb
sahf
fmul
push
or
fisubr
pop
ror
out
dec
(bad)
sbb
adc
adc
sub
inc
rcl
push
adc
das
call
dec
dec
aad
test
push
outs
icebp
xchg
dec
test
inc
scas
pop
add
xor
mov
inc
jb
push
dec
inc
sub
mov
sub
jbe
sbb
xchg
dec
pop
push
or
loopne
pop
jle
sub
test
push
clc
add
bound
cwde
das
pop
rcl
adc
inc
nop
rcl
call
push
jo
pop
inc
or
and
fs
sbb
out
lock
inc
sub
jb
fcomp
push
mul
jo
das
inc
xor
add
dec
cwde
xchg
cmp
add
rcl
inc
retf
add
dec
dec
outs
sbb
lods
mov
aam
je
ja
clc
add
cs
add
inc
push
or
out
scas
ss
dec
test
nop
es
and
pusha
cmp
mov
test
jl
dec
outs
nop
nop
cmp
mov
jbe
mov
outs
cdq
test
out
data16
xchg
hlt
xchg
sbb
lahf
ror
inc
test
xchg
sbb
pop
add
adc
fs
loopne
loopne
cmp
dec
js
imul
mov
inc
sbb
xor
mov
pusha
push
add
xor
pop
adc
scas
dec
sub
pusha
xor
js
sbb
daa
popa
enter
and
movs
pop
push
push
and
cmps
test
adc
fisubr
pusha
adc
or
xor
test
or
push
data16
pushw
mov
outs
and
inc
xchg
jno
jbe
imul
cmps
loopne
imul
mov
sbb
add
mov
adc
or
adc
jno
mov
leave
push
adc
ss
test
add
sub
inc
dec
sbb
enter
scas
push
data16
add
adc
sub
push
fsubr
xchg
sahf
mov
or
and
call
push
push
pusha
xor
mov
push
and
out
push
arpl
or
nop
loopne
ror
or
clc
mov
test
dec
jo
add
in
js
and
or
pop
add
and
lea
loope
nop
jo
call
out
push
sub
mov
dec
push
cmovo
dec
cmps
cdq
xchg
adc
mov
pop
retf
push
or
mov
push
dec
inc
cmp
aam
push
fimul
pop
sbb
movs
addr16
pop
shl
inc
dec
push
cmp
cmps
adc
push
inc
jne
test
and
add
and
outs
loopne
mov
(bad)
outs
dec
test
push
inc
or
popa
imul
adc
mov
sub
jle
adc
(bad)
pop
push
mov
sub
js
sbb
mov
jne
call
sub
xor
inc
popf
(bad)
push
div
xor
xchg
(bad)
push
and
mov
loope
or
mov
xchg
dec
mov
(bad)
pop
sbb
add
mov
sub
pop
nop
bts
pop
adc
inc
cwde
cmc
and
cmp
movs
adc
push
sbb
and
shr
add
pop
pop
movs
cwde
add
push
loopne
lods
mov
pusha
xchg
and
in
mov
lahf
nop
xor
dec
adc
or
test
cwde
push
jecxz
dec
dec
cs
inc
or
das
js
sar
jbe
pop
(bad)
loope
push
inc
and
or
push
cmp
pop
push
cli
jb
or
mov
sbb
mov
pop
adc
(bad)
or
xor
xchg
and
push
or
add
js
pusha
and
pop
adc
pusha
jbe
and
loopne
xor
call
push
sub
mov
and
push
push
dec
inc
mov
inc
shl
xchg
dec
and
jo
and
dec
push
ror
add
push
xchg
add
xor
gs
sahf
shl
pusha
sub
dec
mov
xor
fs
xor
mov
lock
add
add
jmp
xor
adc
inc
push
add
mov
push
inc
inc
sbb
cmp
add
xor
xor
push
jo
inc
push
sbb
push
sub
lea
mov
(bad)
dec
dec
ins
and
dec
jo
xchg
enter
inc
cmp
mov
(bad)
pusha
xchg
push
adc
call
(bad)
shl
sbb
enter
add
inc
rcr
xchg
jne
sbb
adc
or
scas
ds
inc
cmp
clc
cmp
pop
sbb
add
dec
xchg
push
pop
scas
xchg
xor
push
and
mov
and
rcr
inc
dec
loopne
add
jae
xchg
scas
xchg
cwde
cmp
sbb
xor
pop
dec
nop
mov
or
das
xlat
or
adc
adc
cmps
inc
(bad)
inc
push
(bad)
cdq
jne
xchg
or
pusha
push
inc
add
mov
shr
mov
jbe
adc
adc
cmp
inc
dec
or
pop
ficom
leave
clc
add
sbb
dec
call
inc
adc
jae
pop
xor
sub
ja
push
push
sbb
mov
js
mov
push
xchg
(bad)
out
add
and
mov
pop
scas
pop
stos
or
cmps
test
pop
add
sub
push
cmp
arpl
cwde
push
jb
cmp
icebp
jo
out
mov
dec
test
or
callw
rcl
push
sub
xor
push
mov
push
mov
push
lahf
cmps
and
add
(bad)
daa
pushf
add
cmp
sbb
cwde
add
inc
daa
leave
sub
jmp
fs
test
adc
scas
mov
add
fmul
clc
add
add
dec
cmp
or
xor
xchg
dec
data16
ss
or
ins
pop
push
addr16
or
add
jle
ror
jbe
mov
jo
mov
js
shl
mov
jmp
cmp
mov
ret
add
sar
xchg
pushf
xchg
lock
or
out
lahf
dec
fmul
push
jae
push
jle
data16
xchg
add
sub
sahf
adc
mov
ins
rol
test
(bad)
sub
push
xor
push
ds
push
sbb
pop
xchg
aaa
mov
nop
shl
pop
loopne
mov
sub
mov
push
ins
push
test
ret
sub
bound
clc
imul
dec
xor
or
push
dec
pop
or
lock
push
js
jle
lock
mov
dec
dec
sbb
and
add
push
push
dec
popa
ror
cmp
mov
loop
fs
push
adc
or
xor
add
cmp
je
ret
inc
cs
push
sbb
add
fcom
xchg
jo
call
push
adc
nop
xor
inc
push
mov
loopne
ds
test
xor
retf
pop
shl
add
pop
pop
push
push
(bad)
into
mov
or
inc
test
jo
es
jo
push
out
scas
xchg
inc
push
ss
push
dec
dec
js
sbb
out
mov
dec
fldcw
outs
mov
dec
ins
mov
sbb
xor
or
push
add
add
test
ds
cmp
add
cmp
cmp
enter
mov
or
jo
(bad)
and
sub
xor
das
dec
mov
mov
dec
pushw
xchg
sbb
jle
add
push
dec
or
nop
push
sub
push
mov
push
cs
adc
adc
add
(bad)
dec
xchg
add
arpl
add
adc
mov
mov
and
cmp
shl
ds
mov
adc
sub
cmp
pop
scas
or
cmps
dec
repnz
sub
mov
popa
or
cmps
(bad)
push
lea
push
push
add
out
and
xor
pusha
push
imul
jbe
xchg
adc
xor
dec
mov
push
mov
out
into
push
xor
push
add
sub
push
test
clc
push
es
sbb
adc
ja
add
nop
bound
xor
mov
mov
js
lock
add
and
push
and
push
add
clc
enter
sbb
fs
push
pushw
push
stos
add
jle
mov
xchg
ins
loope
xor
outs
xchg
push
ins
and
nop
xchg
inc
pusha
retf
enter
xchg
sub
push
test
adc
(bad)
xor
out
pop
xor
sub
sub
push
mov
sub
fdivr
jbe
xor
stos
dec
push
sub
jl
call
push
adc
js
add
add
push
add
pushf
fmul
clc
add
inc
dec
inc
test
sub
sbb
push
enter
pop
mov
(bad)
push
adc
and
xchg
fcomp
dec
push
jo
ret
inc
pop
push
int3
push
pop
adc
mov
rol
xor
inc
jo
pushf
xchg
sub
mov
or
add
jne
pminsw
pop
ror
push
outs
mov
push
ret
dec
push
push
jle
and
push
and
xor
fisubr
call
add
dec
push
inc
mov
or
cwde
rol
or
imul
mov
test
bound
inc
popf
sub
mov
xor
dec
enter
mov
movs
sbb
cmp
push
or
push
or
cmps
fimul
mov
mov
and
xlat
add
test
jb
(bad)
adc
mov
or
adc
push
data16
cmps
mov
cmp
cwde
sahf
sbb
dec
dec
mov
cmp
add
test
scas
jl
xchg
rcl
sub
and
cmps
cs
jmp
pusha
jo
loopne
enter
fs
clc
jle
bound
sbb
push
fnstenv
push
push
push
jb
xchg
js
es
ja
loopne
mov
int3
aam
inc
jbe
shl
int3
push
outs
push
retf
inc
ret
add
cwde
retf
and
inc
cld
cmp
stos
data16
adc
add
ret
cwde
jne
push
add
xor
mov
xor
mov
or
add
push
inc
sbb
push
es
push
ror
loop
add
test
sub
pusha
dec
xchg
inc
jne
test
(bad)
loop
cwde
hlt
into
cs
ja
xor
and
rcl
pop
sub
or
pusha
xchg
(bad)
push
sub
jae
dec
xor
xchg
ins
cwde
ror
inc
inc
out
add
inc
call
mov
es
retf
xor
(bad)
and
dec
add
lea
xor
xchg
into
xor
and
xor
(bad)
cs
mov
push
dec
push
test
cdq
push
dec
pusha
cmp
and
sub
enter
adc
jo
xor
pop
mov
push
outs
sub
mov
push
cwde
push
add
dec
mov
push
into
add
(bad)
inc
sbb
xchg
xor
ins
loopne
adc
push
dec
sbb
pop
xchg
test
pop
cmp
push
jle
test
sahf
sbb
adc
inc
mov
xor
add
mov
push
push
dec
cwde
out
push
push
mov
test
push
and
mov
add
aam
mov
mov
add
rcl
mov
mov
gs
jl
data16
xchg
daa
jb
add
lock
mov
fwait
and
and
clc
(bad)
lock
mov
sub
ficom
push
and
add
cwde
dec
das
add
mov
push
push
ins
nop
ss
xchg
adc
mov
or
dec
mov
xchg
out
add
clc
out
or
and
inc
je
enter
xchg
lock
ins
push
add
sahf
(bad)
dec
or
repnz
pop
pop
cwde
mov
add
jno
sbb
mov
inc
mov
and
push
sbb
sbb
jb
sub
pop
mov
movs
add
fsub
(bad)
rcl
push
shl
pop
jae
lea
fs
ror
add
retf
out
dec
or
xor
sbb
cwde
data16
push
xchg
out
cwde
add
xchg
cs
shl
pop
push
out
xor
adc
inc
outs
ret
mov
ss
scas
cs
mov
jbe
(bad)
fadd
push
push
push
(bad)
jl
and
dec
pop
(bad)
test
mul
rol
and
dec
xor
test
ret
push
xchg
sahf
js
and
out
dec
js
dec
nop
push
push
ret
sbb
push
xor
adc
cmp
inc
or
nop
js
sub
das
shl
xchg
cwde
jne
pop
enter
add
cdq
add
pop
jle
jbe
call
xor
or
ret
mov
add
sub
adc
mov
add
xor
retf
inc
add
js
aam
call
rol
test
arpl
mov
test
rcl
pop
xchg
sbb
cwde
call
cwde
push
sahf
inc
pusha
and
mov
dec
jle
(bad)
jle
push
mov
test
cs
and
dec
push
ds
fsubr
dec
and
and
pop
inc
imul
(bad)
adc
loopne
inc
outs
cmps
push
dec
cmps
inc
mov
or
bound
pop
pusha
sub
loope
or
les
pusha
outs
push
inc
add
into
pop
xchg
or
push
pushf
add
pusha
cmp
outs
dec
gs
sub
push
js
popa
pop
add
dec
call
ss
mov
sbb
adc
or
push
jo
mov
sub
dec
loop
test
clc
test
nop
les
cmps
push
ss
add
leave
mov
jle
push
inc
sub
add
push
inc
outs
push
or
adc
(bad)
push
dec
add
dec
adc
test
pop
jb
fimul
xor
mov
pusha
gs
mov
shr
inc
mov
push
mov
pop
push
sbb
push
cmp
sub
outs
es
test
shl
xor
jbe
push
jbe
loopne
mov
adc
push
and
nop
cmp
or
js
shl
or
ss
ins
sbb
ss
clc
and
and
push
(bad)
jbe
xchg
ficomp
dec
push
ss
dec
xchg
pminsw
pop
dec
pop
mov
dec
loopne
(bad)
pop
ss
out
cmps
inc
xor
je
lock
or
test
jbe
or
arpl
or
sbb
pop
pop
cwde
out
jle
mov
nop
add
sub
adc
jb
test
rcl
jb
pop
dec
or
push
push
xchg
sub
ret
mov
pusha
pop
into
dec
daa
enter
cs
inc
xor
fs
inc
leave
lock
ins
mov
and
push
cmp
jl
sub
inc
sub
push
push
mov
cmp
add
ret
mov
mov
dec
inc
add
rol
inc
pop
fcomp
push
pop
add
ds
xchg
enter
mov
adc
or
out
xchg
and
add
xchg
xchg
adc
cmp
aam
or
pusha
push
jp
cmp
or
mov
daa
and
push
dec
add
inc
add
ror
imul
xor
lock
add
jo
outs
(bad)
addr16
mov
push
pop
pop
mov
cbw
or
push
push
into
pop
mov
pusha
test
popa
es
fisubr
loope
mov
xchg
sbb
jmp
add
push
outs
push
mov
lock
mov
add
shr
stos
lea
add
xchg
cmps
inc
mov
(bad)
xchg
test
ins
retf
xchg
xchg
jo
movs
add
cmc
nop
out
pop
pusha
add
mov
push
mov
sbb
cmp
and
or
int3
pop
xor
pop
call
adc
inc
push
adc
mov
in
fsubr
dec
ds
dec
movs
pop
test
mov
mov
pusha
fcomp
xor
cmp
nop
adc
outs
or
(bad)
pusha
xor
es
scas
or
int
mov
imul
fcomp
push
jbe
dec
dec
mov
xchg
push
loope
xchg
mov
inc
inc
or
mov
inc
add
es
es
and
push
sub
dec
pop
xchg
sbb
and
dec
dec
arpl
call
test
push
mov
sub
nop
sbb
sub
push
add
inc
(bad)
adc
cli
xchg
mov
loopne
and
push
adc
add
xor
cwde
sbb
add
rol
push
xchg
neg
jo
test
push
dec
faddp
mov
cmps
mov
dec
dec
rcr
popa
inc
mov
dec
sbb
fdiv
clc
scas
mov
jle
es
sahf
iret
popa
lock
xor
pushf
ins
retf
pop
cmp
cdq
sahf
sub
add
jmp
fadd
and
mov
sahf
add
aam
mov
mov
nop
jo
or
loopne
xor
pop
scas
xor
pop
push
push
inc
and
sub
test
inc
xchg
fimul
cmp
push
mov
push
push
int3
ds
xor
outs
jne
add
jbe
xor
popa
ds
or
xchg
inc
scas
dec
sahf
jle
xor
sbb
or
rol
loope
ror
imul
inc
rol
call
dec
sub
or
xchg
mov
add
test
cmps
pop
pop
add
mov
push
push
fsubr
pushf
xchg
ror
cwde
out
dec
mov
js
xchg
add
and
xor
pop
fdivr
xor
mov
cs
pop
push
idiv
mov
icebp
ins
push
xor
push
push
je
daa
test
lock
sub
neg
mov
nop
inc
sahf
sub
mov
in
add
imul
test
and
clc
xor
dec
dec
outs
nop
pop
cmps
fcomp
push
mov
mov
shl
rol
xchg
cs
enter
push
inc
rcr
sbb
and
push
dec
aam
test
mov
cmp
cwde
or
imul
add
test
sbb
adc
mov
mov
push
sbb
add
push
sbb
rcr
mov
jbe
inc
xchg
jno
add
push
xchg
cmp
jo
les
out
ficomp
add
sub
push
jb
not
add
imul
inc
icebp
adc
cs
and
(bad)
dec
pop
es
sbb
jae
outs
sbb
inc
ror
pusha
add
or
scas
or
loopne
mov
mov
fcom
xchg
inc
mov
data16
int3
or
lock
outs
pushf
push
push
scas
dec
xor
jae
inc
push
cs
push
mov
push
or
(bad)
clc
mov
xor
and
sahf
cmp
into
or
mov
xor
xchg
sbb
xor
sbb
(bad)
dec
or
ins
or
push
or
lock
dec
call
cmp
inc
push
push
(bad)
adc
pop
dec
dec
push
cmp
add
das
push
push
push
into
sub
add
dec
dec
push
jbe
imul
cmps
aad
loope
enter
add
push
dec
sub
(bad)
xchg
add
add
nop
xor
xor
mov
loopne
dec
into
or
mov
dec
adc
out
inc
dec
pusha
add
rcl
push
fdiv
mov
cmps
out
xor
inc
cmp
pop
push
and
loopne
shl
mov
scas
xor
xchg
add
dec
xchg
test
(bad)
cwde
push
retf
mov
ss
es
adc
test
adc
mov
hlt
lock
mov
sub
push
data16
jno
jb
into
inc
lods
inc
jge
jae
pop
outs
adc
fs
test
mov
dec
iret
mov
les
push
data16
enter
icebp
mov
inc
inc
inc
ds
jo
cmps
push
xor
cwde
xor
ins
mov
aad
adc
pop
(bad)
add
addr16
fst
out
pop
add
push
push
fiadd
fidiv
xchg
test
adc
mov
push
shl
adc
push
mul
sub
push
js
cmp
jbe
dec
shl
fidiv
dec
shr
xchg
inc
jo
out
jle
dec
loopne
clc
cwde
jp
mov
xor
cmp
(bad)
inc
pop
jle
or
inc
ds
and
ss
movs
test
mov
push
push
mov
daa
add
push
inc
sbb
popa
out
sbb
xor
cli
sbb
sbb
sahf
mov
xchg
aam
mov
push
call
test
or
or
cmp
push
xchg
lods
or
pop
xor
inc
call
push
shl
sub
in
sahf
div
mov
xchg
inc
dec
mov
mov
mov
jl
out
mov
mov
popa
inc
and
add
into
enter
call
xor
ret
add
retf
push
into
xchg
push
inc
sub
es
mov
sub
push
out
sub
jno
(bad)
rol
push
cs
(bad)
push
jae
inc
inc
dec
test
ins
adc
push
mov
fcom
add
bnd
test
pusha
adc
pop
jle
dec
ror
cwde
div
xchg
cmp
jbe
scas
dec
(bad)
ficom
sub
xchg
add
xchg
shr
outs
enter
or
jb
arpl
test
mov
jo
pop
test
jne
out
mov
pusha
ds
jo
and
push
inc
or
xchg
inc
inc
adc
loope
inc
sbb
push
mov
push
sbb
sub
add
test
sbb
rol
mov
dec
push
jo
mov
(bad)
retf
or
cmps
ss
push
jle
jne
and
mov
dec
and
div
adc
mov
xor
mov
add
div
add
or
scas
pop
sub
ja
mov
add
add
out
add
dec
loopne
pop
inc
iret
push
cdq
sub
je
add
add
enter
add
inc
jbe
bt
bound
xchg
bound
(bad)
xor
adc
cmps
dec
pop
or
cmp
pop
adc
mov
loopne
scas
cmp
and
push
xchg
mul
push
inc
jbe
push
xchg
mov
push
inc
xor
push
or
adc
inc
imul
pop
pushaw
sub
mov
mov
mov
xor
lods
and
scas
out
out
or
dec
data16
shl
or
and
in
and
fidiv
xlat
ret
cmp
push
mov
ret
cmps
outs
sub
mov
cmp
dec
jle
out
add
adc
xor
inc
add
mov
fisubr
ss
(bad)
es
and
mov
dec
mov
or
xchg
out
cli
mov
xor
aam
enter
or
jmp
mov
dec
cmp
dec
ds
adc
loop
jbe
data16
jmp
ficomp
push
jb
dec
mov
enter
adc
mov
push
shl
dec
sahf
loopne
and
add
mov
or
das
adc
dec
cmp
jbe
bound
dec
fimul
shr
or
les
clc
xor
mov
push
test
dec
call
or
xor
es
mov
pop
push
call
pop
(bad)
(bad)
jb
dec
jp
xchg
inc
out
jae
pop
xchg
push
xchg
nop
jle
(bad)
test
popa
sbb
js
cmps
shl
mov
pop
lahf
jno
and
add
sbb
inc
rcr
jbe
adc
pop
and
and
loopne
mov
inc
pop
outs
or
or
fadd
sbb
dec
fadd
loope
mov
push
jb
dec
mov
outs
sbb
push
add
jle
cwde
push
sbb
call
push
push
js
or
add
data16
jbe
jb
daa
aaa
push
sahf
jle
sub
dec
lock
pop
sbb
mov
xchg
or
mov
imul
push
push
and
repnz
pusha
cld
and
mov
and
inc
add
(bad)
pop
add
and
lods
push
push
mov
popa
mov
dec
js
add
adc
or
fs
es
mov
shl
pop
jmp
lock
xchg
inc
jbe
data16
mov
test
ins
shl
push
mov
and
mov
pusha
icebp
xor
(bad)
add
xchg
add
add
clc
pop
and
xchg
xor
xchg
lock
sub
sbb
jbe
or
pop
ret
outs
xor
xor
add
adc
push
push
jbe
outs
add
pop
pop
sahf
add
fs
xchg
and
js
stc
dec
(bad)
shr
gs
(bad)
popa
add
push
push
pop
nop
dec
and
shl
sbb
not
push
add
pusha
data16
pop
jae
xchg
lock
inc
fidiv
push
inc
pushf
xor
mov
out
xor
and
scas
inc
aaa
dec
jbe
dec
adc
sbb
xor
xchg
arpl
or
out
dec
lods
and
outs
shl
adc
shl
outs
mov
or
(bad)
fsub
js
mov
or
jl
leave
inc
test
cmps
mov
or
mov
test
mov
test
loop
xchg
adc
push
ins
sub
push
dec
dec
test
push
jo
mov
clc
stos
push
jb
cmp
jl
dec
or
add
add
loopne
cmp
mov
inc
sub
sbb
cmps
ds
xchg
dec
adc
shl
push
dec
mov
outs
rol
or
mov
fdiv
or
push
dec
dec
movs
adc
(bad)
or
push
clc
cmps
push
pop
sahf
(bad)
jl
nop
or
dec
data16
sbb
inc
pusha
mov
adc
hlt
push
and
jbe
movhps
push
xchg
sbb
adc
ret
dec
scas
sbb
push
sub
jb
test
sbb
dec
fs
push
adc
fcomp
dec
inc
dec
mov
adc
jle
jecxz
adc
outs
pop
enter
les
fimul
push
adc
ja
mov
mov
jne
dec
cmp
push
pop
mov
push
or
adc
jb
sbb
or
xchg
inc
inc
push
cmps
push
and
outs
sbb
hlt
jbe
jge
out
rcl
stos
rcl
xchg
js
pop
aam
cwde
mov
adc
dec
ins
lock
scas
sahf
shr
sbb
(bad)
jmp
gs
inc
adc
ins
sbb
rcl
mov
or
fst
push
push
out
into
xor
push
jbe
adc
pop
(bad)
call
mov
mov
ret
ins
dec
dec
pop
mov
inc
mov
out
jne
mov
sahf
xor
mov
sbb
jle
jmp
push
cs
inc
jp
or
dec
fsubp
cmps
pushf
mov
pusha
pop
jae
(bad)
lods
imul
(bad)
xor
inc
adc
inc
push
cmps
adc
cmp
pop
sahf
adc
xchg
xchg
sbb
mov
xchg
xor
ss
xchg
or
and
xchg
shr
(bad)
fst
push
sar
push
dec
ins
xor
dec
and
dec
dec
sbb
jp
mov
jl
enter
mov
sub
data16
xor
push
jno
add
and
push
adc
pushf
(bad)
xchg
out
pop
or
add
push
add
sub
loopne
dec
xor
(bad)
xchg
push
dec
push
and
cmp
push
pop
les
xor
dec
arpl
js
xchg
adc
mov
push
dec
test
or
jl
push
jo
loopne
mov
mov
pop
(bad)
cmp
jno
push
pop
push
jbe
add
rol
popa
xor
xchg
ins
imul
cmp
outs
adc
sbb
dec
es
das
jle
nop
data16
mov
cmp
int3
or
pop
outs
data16
pusha
mov
push
ds
add
loopne
dec
out
imul
xor
dec
sub
jp
and
jb
xor
(bad)
dec
pop
fstp
xchg
xchg
mov
pop
mov
inc
pop
sub
xchg
shr
push
shr
cmps
mov
scas
and
inc
mov
push
sub
mov
(bad)
adc
adc
jle
xor
sub
xor
push
sub
push
call
lods
dec
adc
push
test
adc
xchg
dec
call
add
(bad)
push
cmps
data16
inc
inc
xchg
dec
ds
test
out
push
sub
inc
imul
into
out
xor
sub
sbb
mov
mov
cmp
cwde
nop
push
lock
fcom
xchg
out
dec
mov
xchg
push
mov
nop
sahf
imul
xchg
push
ss
xor
dec
js
xor
inc
or
test
test
and
leave
movs
xchg
stos
(bad)
pop
inc
pop
ret
mov
xchg
push
loopne
shl
xchg
(bad)
cmp
retf
ficom
push
xchg
mov
jae
cdq
adc
xchg
cmps
sahf
sub
cmp
mov
shl
and
jbe
push
xchg
xor
cwd
and
xor
enter
push
bound
cmp
mov
cmp
cmp
scas
ds
cmp
push
dec
inc
or
mov
test
push
jo
into
mov
dec
cwde
sbb
dec
not
popf
stos
ins
(bad)
gs
xchg
jbe
idiv
cmp
adc
dec
cmp
jle
test
inc
loopne
es
test
cmp
(bad)
jb
js
sub
into
lock
dec
(bad)
jle
test
(bad)
xor
add
sub
rol
and
ret
xor
icebp
lock
(bad)
sub
or
dec
inc
int3
aam
dec
mov
mov
mov
mov
inc
sub
icebp
adc
outs
mov
push
mov
je
dec
out
out
outs
jle
add
lea
imul
push
inc
test
mov
jb
lock
push
test
sub
(bad)
xor
(bad)
(bad)
cs
add
jbe
mov
fs
sahf
scas
and
sub
pop
pop
adc
cmp
mov
push
mov
div
pop
and
out
ds
inc
push
pop
push
xor
xchg
retf
gs
push
dec
cwde
lock
mov
and
sub
cmps
inc
cmp
int3
push
sub
adc
xor
es
daa
push
test
ds
xchg
dec
inc
or
dec
inc
dec
test
pop
ficom
push
inc
push
add
ror
sub
ss
inc
and
fcomp
nop
pop
jmp
sahf
inc
and
add
fidivr
sbb
sbb
pop
js
add
mov
mov
mov
test
es
ss
push
mov
dec
mov
cmp
cmp
inc
and
shl
inc
test
ror
sbb
sbb
(bad)
out
pushf
cmp
sbb
xchg
nop
jbe
and
mov
push
bound
xchg
xchg
add
mov
data16
mov
aaa
push
add
shr
icebp
adc
jo
xchg
cmp
jb
shr
nop
xchg
mov
dec
(bad)
sahf
adc
or
mov
and
pop
ds
sbb
inc
push
or
test
ret
dec
cmp
or
dec
xchg
xchg
mov
out
pop
mov
cmc
and
sbb
and
sub
push
add
cwde
mov
mov
es
aad
adc
in
dec
xor
ror
and
outs
outs
sbb
add
sbb
and
push
mov
pusha
push
mov
or
(bad)
out
daa
loopne
xor
and
or
cmp
movs
add
cs
mov
pop
je
push
mov
inc
xor
scas
dec
inc
fidiv
retf
call
and
or
cs
cmps
sahf
ds
fisub
sbb
sub
into
pop
or
xor
push
xchg
out
je
and
pop
mov
push
dec
js
add
mov
jbe
jo
hlt
out
(bad)
lods
jo
pop
mov
adc
pop
sbb
jb
sub
adc
pop
pop
ret
dec
imul
lock
imul
data16
pop
mov
mov
pop
add
jbe
inc
or
xchg
out
push
xor
and
pop
mov
jl
add
fisubr
jmp
inc
or
add
test
adc
xchg
jle
pop
add
and
ret
sbb
pop
sub
inc
add
xor
push
add
inc
push
mov
inc
data16
cmp
xchg
jbe
add
push
inc
outs
push
bound
mov
sahf
(bad)
scas
cs
add
out
cs
cwde
xor
push
inc
adc
or
ret
(bad)
outs
imul
aam
ficomp
sbb
adc
cmp
xchg
mov
(bad)
cmp
(bad)
fadd
dec
cmps
or
or
js
dec
mov
xor
cs
jbe
mov
mov
inc
mov
adc
movs
push
rcr
(bad)
cs
gs
mov
push
pop
out
dec
ds
xor
push
inc
xor
dec
inc
psraw
out
xchg
inc
mov
popa
xor
or
mov
push
pop
push
push
sbb
out
xor
jb
cmp
add
and
ss
pop
adc
call
das
test
xor
outs
nop
inc
cs
dec
cmps
jle
gs
dec
sahf
out
outs
and
fs
into
push
ds
loope
ror
xor
popaw
mov
push
test
cwde
shl
jle
nop
pusha
jo
popa
dec
data16
cmp
mov
mov
mov
pop
loopne
lahf
dec
mov
inc
sahf
push
add
dec
push
pop
ds
xchg
jge
sbb
mov
push
push
fdivrp
movs
adc
or
inc
inc
and
test
adc
sub
or
fidiv
jo
fs
cmp
rcl
ret
movs
fsubr
sbb
add
jbe
push
sbb
cmp
outs
xchg
push
dec
mov
loop
and
pop
xor
sahf
inc
shl
inc
inc
and
push
xor
sub
(bad)
rol
ds
add
inc
jl
and
je
sub
sbb
and
cdq
fimul
push
outs
cmps
data16
je
test
int3
ss
push
popf
rol
dec
data16
mov
jb
xchg
dec
pop
dec
shr
xor
retf
imul
cmp
(bad)
push
cmps
bound
mov
es
or
pop
mov
pop
push
adc
dec
push
aaa
mov
inc
dec
cmp
adc
dec
push
xchg
mov
or
or
cmps
xchg
xor
shr
xor
pop
arpl
inc
ds
push
or
mov
push
rol
dec
push
fwait
mov
dec
enter
outs
mov
xchg
les
rol
jo
xor
push
arpl
push
(bad)
sbb
icebp
push
(bad)
cs
lods
or
les
dec
or
imul
and
out
sub
adc
dec
push
sbb
xchg
add
jo
mov
mov
sahf
mov
dec
pusha
dec
retf
adc
es
fidivr
int3
jb
pop
xchg
jle
inc
sub
data16
ret
dec
cwde
dec
out
(bad)
push
gs
push
fisubr
jno
in
mov
and
add
push
adc
mov
inc
js
cmps
add
xor
sahf
ins
add
mov
(bad)
leave
mov
jb
and
scas
fadd
adc
(bad)
mov
dec
push
mov
xchg
fld
pusha
into
dec
mov
outs
pop
sub
outs
pop
cmps
push
ret
add
or
and
jp
dec
or
push
mov
or
out
out
push
push
into
jle
adc
push
out
(bad)
jo
push
xor
pop
cmps
push
ds
dec
push
adc
jbe
xor
sbb
dec
lods
punpckhbw
cs
dec
push
loop
xor
pop
push
jae
xchg
loopne
add
mov
or
lock
mov
sbb
sub
xchg
ret
add
mov
mov
jle
xor
push
push
ins
jbe
jb
add
push
mov
sbb
dec
into
jb
dec
push
es
add
enter
add
mov
sub
push
or
sub
push
cmps
xor
or
dec
rol
dec
push
ins
or
cwde
push
inc
add
out
add
mov
loopne
dec
push
shl
xlat
dec
and
add
ins
dec
dec
test
add
fisubr
cmc
or
sahf
js
push
dec
xor
mov
test
xor
ins
pop
jg
(bad)
mov
nop
add
(bad)
push
xchg
jo
jbe
mov
outs
cmps
es
mov
push
mul
mov
(bad)
(bad)
ins
jge
js
push
cmp
dec
shl
push
inc
hlt
shl
jbe
(bad)
jbe
mov
sbb
xchg
loop
xchg
add
dec
push
mov
(bad)
push
mov
sub
out
adc
add
fdiv
mov
sbb
div
pop
pushw
(bad)
or
add
(bad)
rol
add
add
ror
and
add
shl
mov
test
pusha
sbb
sub
sbb
dec
mov
or
sbb
push
inc
pop
push
iret
dec
test
sahf
and
jo
or
and
adc
push
jl
shl
(bad)
fild
je
push
mov
xor
add
cmp
add
xchg
(bad)
dec
sahf
call
loope
ret
cmp
dec
fadd
rol
test
loopne
lds
pop
dec
ss
xchg
leave
adc
and
xchg
push
test
push
push
test
dec
jle
dec
and
mov
inc
or
and
cmp
add
xchg
pop
mov
cmp
push
jle
xor
(bad)
push
test
(bad)
push
sahf
xor
cmp
sbb
mov
jo
push
sbb
out
push
push
pop
adc
dec
ins
mov
inc
xchg
jl
es
sbb
push
cwde
or
sbb
movs
cmp
(bad)
out
xchg
jo
and
xor
xor
rcr
add
add
xor
or
mov
pusha
push
add
enter
fcom
dec
xchg
sahf
lods
es
cmc
nop
mov
cmp
loopne
mov
jne
test
adc
ds
pop
cmp
push
dec
push
out
dec
or
call
clc
sahf
(bad)
adc
dec
push
pop
push
outs
add
jmp
add
push
test
push
sub
imul
daa
adc
push
dec
jno
imul
rcl
aam
inc
jb
mov
icebp
xchg
add
cmps
scas
(bad)
sbb
push
fidiv
push
add
add
adc
mov
dec
dec
inc
or
in
cmps
xchg
dec
push
push
xchg
pop
add
mov
es
and
jbe
and
push
and
sbb
lock
xchg
(bad)
xor
sub
jp
pop
test
rol
(bad)
mov
jae
adc
and
pop
es
jnp
dec
inc
mov
add
bound
(bad)
xchg
add
scas
jae
test
or
xchg
pusha
out
jo
sbb
es
adc
sbb
add
pop
dec
xor
nop
jbe
fisub
movs
js
jle
(bad)
or
dec
inc
push
jb
adc
or
cs
add
jbe
es
sbb
mov
inc
sub
mov
xchg
adc
dec
mov
ror
jb
dec
mov
test
cmps
or
jo
mov
movs
and
sahf
add
mov
dec
push
dec
sub
test
adc
and
js
js
call
adc
cmps
mov
dec
push
and
mov
cmp
daa
adc
cmp
or
fadd
pusha
or
xchg
bound
and
lock
jae
cs
push
rcr
xor
jle
adc
jle
add
push
jno
push
enter
outs
push
dec
or
or
adc
xor
mov
xchg
adc
sbb
dec
popa
mov
cs
and
jne
pop
data16
push
data16
cmp
sbb
es
add
js
stos
pusha
ins
or
mov
fs
xchg
and
cmps
push
popa
and
enter
or
pop
dec
jle
xor
sub
inc
pusha
pop
call
sub
cmp
push
cmp
gs
or
push
loopne
pop
aad
movs
sbb
mov
enter
ret
xor
dec
push
xor
or
fwait
aam
push
je
pusha
push
retf
push
sbb
add
and
dec
mov
xchg
mov
cmp
and
movs
jbe
ins
jle
xor
and
ret
pop
push
imul
or
int3
ins
fisub
xor
dec
pop
cmp
cmps
in
data16
adc
dec
xor
dec
sub
push
mov
mov
push
jle
int3
xor
outs
imul
xor
fnsave
push
in
gs
sbb
test
inc
retf
inc
ins
or
lock
arpl
loopne
enter
cmps
sub
push
mov
add
cli
push
dec
push
xor
sub
inc
bound
retw
push
mov
adc
pusha
sbb
ret
pop
jno
jae
push
ss
test
pop
test
jle
in
add
adc
pop
jbe
push
fiadd
arpl
ss
inc
pop
pop
popa
inc
(bad)
jno
xor
es
ins
jbe
pop
xchg
inc
add
mov
pop
jae
popa
xor
mov
dec
mov
xchg
outs
xchg
push
inc
popa
add
ret
and
push
stos
out
js
arpl
jle
imul
sti
and
les
jmp
xor
sub
pop
xchg
push
xor
pop
stos
push
fnstenv
jle
sub
dec
push
leave
rol
and
fs
shl
inc
je
(bad)
adc
je
push
jne
push
ins
jno
fimul
jmp
or
call
fwait
dec
dec
xor
push
pop
dec
xor
cwde
aaa
or
push
add
pop
push
int3
inc
push
cmp
cmps
xchg
dec
xchg
imul
inc
(bad)
xor
aaa
ins
shr
ss
dec
dec
popa
jae
inc
jle
inc
aaa
movs
dec
adc
dec
dec
loopne
jb
and
test
jmp
inc
mov
jbe
push
lds
(bad)
push
ins
imul
sub
and
xor
sub
or
push
mov
dec
inc
sub
add
dec
je
and
inc
mov
or
xor
inc
adc
inc
mov
pop
inc
in
movs
and
dec
outs
je
inc
stos
mov
cli
cmp
imul
sbb
ror
jne
ja
push
xchg
mov
nop
xor
arpl
cli
add
jle
inc
dec
les
mov
je
dec
push
add
pop
jne
pusha
dec
ins
xor
ss
jo
or
aaa
push
or
pop
fiadd
inc
repnz
push
mov
push
mov
or
push
dec
push
imul
int
or
pop
addr16
ss
xor
xchg
push
pop
xchg
and
xchg
popa
ret
push
cli
inc
dec
sahf
push
gs
xchg
xor
push
loope
add
sahf
sbb
adc
xor
jl
test
xchg
jmp
mov
add
dec
(bad)
jo
inc
scas
pop
ins
gs
jo
push
outs
addr16
movs
xchg
outs
mov
jl
cmps
push
aaa
push
call
jle
dec
bound
rol
xor
call
(bad)
or
fidiv
inc
jb
push
jl
pop
jo
add
out
xor
gs
bound
dec
pusha
mov
xor
xor
push
cmp
inc
mov
imul
jl
inc
jbe
retf
jmp
dec
mov
rol
mov
ins
pop
push
push
cli
inc
gs
loope
push
push
sbb
pop
movs
sub
cmp
push
or
inc
jne
ins
push
pop
xor
pusha
xor
adc
fcom
inc
inc
aam
push
sbb
inc
mov
push
stos
push
jae
dec
push
adc
xor
aam
sub
or
movs
stos
dec
leave
fadd
sub
and
or
inc
pop
scas
push
inc
dec
sbb
xchg
pop
mov
push
sbb
jne
data16
xchg
xor
and
jb
add
jo
lods
scas
inc
retf
add
add
gs
push
jle
cmp
into
popa
inc
jge
jl
jmp
push
push
cmp
imul
pop
mov
test
pop
mov
cmp
dec
test
push
mov
mov
and
dec
mov
xor
test
lea
inc
es
test
test
xor
push
xlat
xchg
push
push
pusha
inc
push
dec
js
adc
push
adc
adc
or
push
inc
adc
dec
mov
push
rol
call
inc
push
and
and
add
hlt
call
lods
bound
push
inc
push
imul
sub
dec
dec
call
ja
cmp
pop
jle
callw
pop
push
mov
xor
outs
xor
xchg
retf
push
mov
jb
and
in
inc
cmp
nop
int
push
add
xor
mov
jne
inc
add
sbb
mov
fisubr
pop
les
dec
sub
addr16
loopne
popa
dec
mov
and
mov
outs
push
sub
adc
xor
add
pop
mov
fsubr
xor
mov
lods
les
inc
push
sahf
imul
or
shl
mov
push
aad
outs
repnz
mov
mov
or
push
inc
dec
fs
xor
push
outs
div
mov
sub
imul
inc
pop
movs
bound
aaa
inc
ins
pop
and
jl
jge
pusha
push
fbld
add
mov
jno
aaa
dec
dec
adc
loop
dec
xor
ins
push
ds
sub
data16
dec
or
adc
add
jbe
(bad)
xor
outs
dec
cmps
nop
ds
inc
inc
push
add
jle
xor
xchg
bound
push
hlt
push
fdiv
pop
shr
stos
xchg
mov
dec
(bad)
popa
push
xchg
push
cli
loop
loop
inc
or
rol
push
mov
mov
add
pusha
jne
mov
ss
pop
push
pusha
push
fbld
(bad)
js
inc
pop
push
and
push
push
mov
inc
rcl
test
cmp
cmp
dec
imul
push
(bad)
aaa
jo
sbb
fsub
inc
jae
jl
fcom
push
add
inc
xor
fld
nop
jmp
push
jno
(bad)
(bad)
adc
dec
mov
xor
es
mov
(bad)
ins
pop
and
clc
push
push
ja
pop
push
dec
sub
ins
dec
jl
inc
sub
dec
push
push
adc
ins
jo
test
xchg
push
dec
ret
data16
mov
and
and
cli
xor
(bad)
loop
adc
push
xor
or
push
push
mov
inc
arpl
sbb
or
xor
cmp
push
bound
ja
sbb
jb
test
cwde
outs
int
push
cwde
outs
xor
scas
outs
mov
ret
imul
inc
add
add
dec
and
popa
cdq
scas
add
mov
xchg
call
xor
adc
ror
mov
nop
push
imul
xor
xchg
push
or
push
inc
pusha
mov
and
jne
or
fs
es
pop
adc
test
jne
inc
movs
push
mov
push
mov
push
dec
outs
imul
adc
push
ret
sub
cmp
xor
inc
dec
mov
aas
xchg
mov
cmp
jo
inc
dec
mov
jnp
mov
(bad)
push
jno
jno
inc
jo
xor
xor
dec
xchg
movs
scas
xor
addr16
ror
or
mov
pusha
dec
mov
je
aam
ret
inc
inc
push
outs
cs
xor
lods
je
jge
pop
jne
mov
pop
jb
jl
and
test
push
pop
lock
pop
push
xchg
imul
jle
popa
mov
or
mov
loop
xor
mov
mov
push
and
pop
cmps
or
pop
mov
nop
inc
aam
and
les
jb
rol
ss
add
inc
shr
push
lods
dec
cmp
mov
mov
adc
ins
mov
aam
push
xchg
outs
adc
jb
dec
push
dec
std
lock
ins
arpl
push
inc
push
mov
push
scas
imul
rol
aam
mov
jb
push
pop
jb
nop
or
pop
test
retf
jae
leave
les
pushf
inc
xchg
hlt
push
ret
ins
inc
jl
dec
xor
and
es
gs
ss
jb
call
xor
pop
outs
mov
(bad)
inc
jl
pushf
cs
enter
and
adc
push
inc
inc
ds
jle
dec
fmul
(bad)
in
dec
ins
and
inc
outs
nop
dec
push
cs
inc
rcl
test
outs
dec
sub
mov
pop
dec
cmp
shl
and
and
movs
adc
adc
xor
sbb
dec
pop
xor
sub
dec
push
or
in
xor
jbe
or
stos
adc
and
ss
arpl
jle
push
dec
jo
adc
pop
push
mov
loopne
mov
pop
ja
mov
mov
xor
cmp
dec
cmp
sbb
sbb
pusha
mov
repnz
xchg
inc
into
and
push
hlt
in
(bad)
fisubr
mov
xor
xor
sub
dec
xchg
bound
jb
push
xchg
add
mov
test
cmp
and
inc
xlat
mov
inc
inc
jo
jp
je
sub
inc
mov
jge
dec
call
adc
and
jl
cmp
cwde
push
add
fmul
and
ss
jmp
movs
xor
cmp
es
imul
push
or
inc
mov
pop
cmp
add
fcmovnu
mov
outs
xor
dec
cmp
popa
dec
out
outs
push
aaa
fimul
dec
jbe
cmp
push
mov
popa
jl
ss
inc
aad
gs
dec
cmps
dec
push
jo
dec
cmps
int
jp
inc
cmp
or
dec
push
es
push
xchg
jle
pop
pusha
xor
xor
add
push
push
je
jo
adc
lods
push
and
pusha
retf
jb
push
inc
push
jp
inc
dec
inc
cmp
lods
jp
xor
sub
push
sahf
fnstenv
jge
mov
push
cmp
outs
lods
adc
test
push
sar
aaa
xor
loope
adc
xor
push
dec
xor
pop
jle
cs
cmps
xor
pusha
ds
xor
outs
dec
ins
imul
addr16
jle
mov
xor
pusha
jbe
pop
dec
dec
aas
ret
add
jne
push
or
mov
mov
and
mov
sbb
sar
test
add
js
push
add
dec
dec
lods
arpl
sub
mov
mov
push
jbe
fst
mov
out
dec
sub
sub
push
cs
leave
loope
sub
cdq
rol
dec
hlt
sub
ss
pop
push
jo
mov
xchg
addr16
dec
lock
adc
jne
push
(bad)
aam
add
imul
adc
fwait
push
mov
mov
adc
or
sbb
sbb
cwde
mov
mov
and
jno
mov
xchg
stos
sub
dec
jno
mov
dec
mov
push
xor
dec
xor
push
imul
push
mov
outs
inc
and
push
adc
bound
jo
fcom
data16
mov
inc
dec
cmp
adc
pop
(bad)
dec
inc
lock
fst
jb
xchg
loope
mov
fimul
call
ja
dec
inc
dec
mov
and
jge
ret
adc
ds
rol
jne
add
(bad)
out
fs
and
leave
or
xor
leave
loopne
xor
retf
inc
pop
or
dec
fwait
dec
dec
fs
gs
mov
cmp
jne
mov
xor
shl
adc
xor
jle
aaa
dec
jb
and
test
xor
or
dec
mov
add
xchg
jle
adc
push
inc
pop
sub
push
dec
ins
xor
dec
ins
push
sub
mov
jge
ins
adc
push
aam
cmc
push
push
push
add
push
pop
pop
xor
outs
dec
stos
pop
cmp
jb
dec
sbb
je
dec
push
inc
outs
dec
dec
ss
jbe
sbb
adc
inc
adc
inc
cmp
outs
cmp
push
pop
mov
test
popa
jl
bound
and
mov
push
pop
movs
add
adc
mov
sbb
push
mov
or
call
and
dec
cwde
dec
xchg
or
push
(bad)
or
pop
push
push
xor
imul
mov
mov
inc
push
cli
mov
inc
push
dec
or
and
dec
and
and
adc
xchg
imul
movs
sbb
mov
(bad)
push
ins
je
jle
pop
movs
adc
add
push
xchg
xchg
fisubr
sbb
rol
push
mov
fisub
ss
fs
push
push
jae
pop
jo
push
dec
test
sub
or
mov
jg
cs
sub
bnd
enter
add
xor
add
dec
jmp
and
inc
imul
pushw
rol
cmp
or
jle
inc
outs
dec
aaa
adc
sub
out
push
sbb
xchg
dec
pusha
sar
data16
jae
mov
or
shl
mov
test
push
cmp
dec
and
jp
ins
jno
ins
dec
pushf
push
xchg
or
cs
imul
arpl
mov
je
cwde
imul
pop
je
mov
push
mov
int3
jle
adc
pusha
cmp
scas
jge
pop
dec
mov
or
mov
jle
cdq
nop
push
sti
ficom
push
cld
mov
jb
pop
sbb
fs
push
cmp
cmp
jmp
sub
inc
inc
add
push
sbb
popa
inc
push
xor
or
data16
pushf
ins
into
popf
xor
mov
inc
shl
jl
jo
or
push
cld
test
clc
push
daa
cmp
je
jno
pop
push
add
pop
adc
movs
es
lock
or
sub
push
inc
xlat
dec
add
(bad)
sbb
outs
ins
push
outs
cmps
mov
ins
pop
inc
clc
xchg
mov
or
inc
push
push
add
xor
push
jl
mov
cmps
push
int3
jb
add
and
jge
push
jecxz
push
add
ficom
dec
cmp
mov
jno
inc
aaa
fidiv
ins
cmp
inc
arpl
sub
mov
shr
fcmove
push
rol
push
pusha
shr
in
retf
rcr
sub
sub
jo
pusha
sbb
or
sub
ins
mov
xor
jge
mov
push
arpl
test
sub
arpl
imul
sahf
add
xchg
and
or
cmp
jne
push
mov
push
lods
push
jno
cmc
outs
fild
cmp
mov
ins
outs
pusha
push
and
pusha
inc
into
les
ret
mov
push
je
adc
mov
lock
dec
dec
jge
outs
gs
popa
stos
test
pusha
mov
jle
adc
jo
jbe
xchg
add
inc
imul
inc
fisttp
bound
into
push
sub
push
push
shr
fidiv
adc
push
ret
(bad)
dec
xor
sub
sbb
dec
jle
dec
fs
inc
dec
or
cld
imul
fs
repnz
ss
pop
xor
push
cmp
rcl
pop
shr
or
enter
inc
push
pop
and
pusha
add
inc
pop
aad
add
dec
inc
inc
push
mov
loopne
test
jno
xor
aam
dec
or
push
push
aam
inc
push
inc
loop
fwait
xchg
push
push
inc
add
xor
fldcw
(bad)
sub
jae
xchg
add
jbe
test
mov
pusha
push
dec
sub
xor
not
jne
ja
dec
in
push
pushf
fidiv
pusha
push
add
push
icebp
aas
dec
push
dec
cmp
push
add
clc
dec
inc
(bad)
pop
sub
jo
inc
lods
and
fs
test
dec
pop
jno
push
mov
xor
push
xchg
in
in
sahf
push
push
and
cmp
neg
fwait
add
inc
cmp
or
hlt
adc
pop
sub
shl
repnz
pop
xor
sbb
stos
jl
ja
xor
outs
imul
add
push
out
push
pop
pop
and
jge
mov
jno
dec
xor
sub
or
inc
ret
popa
test
pop
pop
ss
adc
and
jne
call
test
push
cmc
push
or
sbb
adc
pcmpeqd
xor
ins
dec
inc
nop
mov
inc
rcr
xor
test
imul
and
lods
push
inc
adc
inc
mov
push
adc
pusha
mov
inc
jne
fisubr
js
or
shl
movs
shr
xor
test
dec
in
xor
jp
lock
data16
mov
add
enter
enter
sbb
outs
jno
popa
or
outs
dec
or
xor
scas
les
add
jle
mov
mov
push
mov
mov
mov
push
test
inc
call
pop
push
dec
sub
dec
dec
push
push
mov
lock
jle
push
enter
rol
push
lods
inc
dec
ror
fidiv
ficom
aaa
cmp
pop
rcr
push
jo
gs
push
push
pop
push
cmp
mov
pop
cwde
bound
xchg
dec
fidiv
call
dec
inc
shr
test
bound
sub
loope
pusha
add
jmp
enter
push
fisubr
ja
xchg
mov
jo
cmp
mov
push
xlat
inc
sub
inc
mov
inc
es
sub
or
nop
pop
inc
scas
push
ret
sub
ss
sbb
dec
(bad)
xor
xor
pop
jae
dec
pusha
ins
push
inc
imul
jmp
adc
cmp
or
dec
bnd
push
adc
sbb
push
ins
iret
mov
jle
fidiv
inc
xor
xor
push
les
dec
dec
aas
adc
dec
inc
xor
pop
push
push
aam
dec
dec
sbb
push
pop
adc
push
or
outs
test
dec
repnz
push
add
lods
dec
push
push
dec
xchg
sbb
ss
gs
es
movs
les
ins
push
jp
inc
mov
pop
(bad)
aam
pusha
sub
cmp
lock
mov
push
xor
xor
in
dec
add
dec
je
mov
inc
xor
or
cs
fisubr
stos
jbe
sub
inc
mov
pop
dec
out
sub
shl
mov
sbb
fimul
push
mov
push
xchg
mov
ins
pop
push
push
loope
ins
sbb
mov
dec
retf
(bad)
cmp
cwde
or
add
xor
sbb
push
in
inc
scas
inc
or
push
push
push
fs
test
mov
data16
arpl
jb
pop
dec
inc
popa
mov
dec
push
push
aaa
inc
gs
dec
pop
jmp
push
outs
inc
mov
push
retf
mov
dec
push
inc
or
jl
or
test
push
add
inc
outs
sub
or
mov
mov
jmp
cs
ja
pop
pusha
stos
and
xchg
dec
adc
push
cdq
mov
sub
cmp
xchg
pop
in
sub
stos
and
inc
adc
cmp
add
jbe
mov
fdiv
lods
ins
xor
repnz
aaa
jmp
outs
xor
dec
retf
dec
mov
cdq
mov
or
jno
xor
push
outs
push
bound
or
dec
mov
push
leave
es
aaa
xchg
jmp
push
inc
inc
push
ins
dec
mov
push
shr
pop
aaa
xor
jo
jge
mov
pop
cs
jbe
add
ja
xor
xchg
test
or
imul
mov
sub
inc
je
push
mov
push
dec
mov
dec
ds
je
cwde
push
or
jle
(bad)
jne
sar
aaa
jb
cmp
push
sahf
add
push
or
or
and
sub
jno
and
jbe
rcr
popa
lock
xor
test
xor
mov
aam
call
sar
and
push
jmp
pop
pop
cs
inc
data16
xchg
sbb
inc
imul
pop
or
call
jle
inc
add
push
dec
arpl
push
cmp
in
adc
inc
sbb
adc
push
push
loopne
and
jne
or
movs
inc
inc
dec
push
(bad)
cmp
adc
add
inc
arpl
dec
rcl
test
push
loop
push
bound
jmp
pusha
cmp
je
dec
dec
pusha
adc
xchg
stos
or
repnz
xchg
mov
and
nop
clc
jo
outs
pop
mov
push
jne
inc
push
popa
js
mov
inc
dec
push
add
icebp
dec
nop
push
jb
xor
add
pop
push
push
enter
jbe
push
cmp
jb
fiadd
inc
ja
xchg
in
clc
inc
sar
push
jno
inc
xor
xchg
adc
pusha
dec
push
dec
dec
lock
push
mov
cmp
mov
outs
push
enter
pop
jle
jle
outs
jae
xor
push
ins
adc
add
xor
inc
pop
and
cli
dec
inc
pop
mov
adc
shl
ss
rcl
stos
aaa
mov
(bad)
out
aam
or
pop
adc
dec
mov
add
bound
inc
cli
cmp
pop
inc
jl
inc
xor
push
push
outs
ret
add
xchg
add
push
shl
mov
int3
dec
gs
outs
inc
push
call
xchg
inc
push
mov
jno
jl
(bad)
(bad)
shl
pusha
and
pop
xor
or
push
popa
popf
loopne
jp
inc
pop
or
call
addr16
inc
xor
add
adc
sbb
mov
outs
push
dec
xlat
outs
outs
aaa
jno
inc
xor
div
xor
add
or
ins
inc
rol
mov
jle
dec
fs
outs
popa
or
and
or
jae
popa
stos
ficom
dec
jo
dec
repnz
imul
xor
dec
xor
push
push
mov
mov
push
ret
xchg
ret
ja
push
pop
or
inc
imul
dec
adc
dec
not
sbb
push
jae
jle
cmp
jb
and
nop
add
jnp
ret
inc
inc
sub
push
adc
and
lods
mov
xchg
and
fld
jp
ret
aad
inc
pop
imul
fist
or
inc
jbe
jl
cmp
cmp
dec
je
push
jno
ret
sub
adc
mov
imul
push
ja
or
sub
mov
jl
ss
ret
mov
jbe
push
jle
push
ss
fstp
xor
mov
mov
cmp
push
test
add
dec
inc
push
xor
out
fsubp
mov
loop
pop
jne
add
jbe
cmp
and
pop
sub
mov
push
cmps
xchg
push
and
mov
fwait
and
push
inc
xor
add
test
xor
inc
xor
pusha
sahf
cmp
push
xchg
test
jno
push
push
xor
test
test
push
add
jno
jmp
aaa
dec
retf
aaa
ss
outs
xchg
je
inc
inc
je
imul
add
stos
xor
ins
shr
push
dec
adc
mov
xor
push
mov
movs
sbb
pop
je
imul
aam
fcom
push
lods
pop
cmps
popa
jae
push
ins
push
inc
ins
inc
imul
cdq
inc
jno
push
or
or
add
in
inc
cmp
sbb
dec
jl
adc
arpl
fdiv
fs
or
mov
cmps
push
inc
adc
pop
adc
pop
in
sbb
or
cli
test
adc
call
push
sub
push
fisubr
mov
stos
ss
mov
mov
dec
sub
inc
aam
popa
add
ins
dec
jle
arpl
pop
mov
add
nop
push
ficom
sub
sbb
pop
js
pusha
sub
dec
sub
sbb
mov
jbe
sbb
jbe
aam
shr
push
jae
pop
adc
cmp
dec
push
enter
pop
arpl
push
jle
aaa
cs
stos
push
or
pop
add
ret
or
movs
ss
dec
je
inc
mov
push
je
imul
xor
or
dec
clc
push
mov
mov
ins
dec
lods
jne
adc
imul
sub
push
sub
inc
call
(bad)
cli
pop
pop
bound
jne
inc
ins
inc
push
bound
jb
push
data16
mov
push
push
jae
dec
sub
jo
pop
cs
dec
imul
sub
push
inc
imul
xor
sbb
cs
shl
adc
sub
hlt
imul
movs
outs
add
push
jbe
mov
adc
pop
inc
bound
mov
data16
pusha
add
add
enter
dec
fidiv
dec
push
mov
ficomp
xor
xor
xor
pop
mov
push
xchg
mov
push
jno
popa
popa
mov
cwde
push
push
inc
dec
inc
dec
or
and
or
pop
dec
pop
and
jbe
cmp
enter
dec
push
ins
jb
dec
xor
pop
adc
xor
pop
or
dec
push
stos
movs
aad
xor
lock
pusha
jl
push
xor
add
rol
ins
pusha
sub
or
jb
jl
ja
push
adc
dec
pushf
dec
and
adc
inc
jge
add
int3
cmc
inc
or
dec
jbe
push
xchg
xchg
cmps
enter
pusha
inc
scas
inc
push
xor
push
xor
shl
outs
jmp
pusha
push
dec
jo
mov
inc
jb
mov
and
repnz
imul
movs
xor
add
ret
sbb
scas
dec
xor
mov
xor
jle
dec
mov
rcl
dec
push
sar
push
xor
pop
sbb
fcmovne
je
add
mov
test
popa
inc
test
inc
ror
jo
jbe
retf
mov
inc
xchg
sbb
xor
and
and
cmp
pop
xor
stos
add
mov
mov
inc
pop
inc
push
cs
xor
and
push
bound
adc
pop
je
dec
inc
mov
push
or
sub
sub
inc
mov
adc
dec
data16
lea
cmp
add
and
sbb
inc
adc
stos
add
dec
rcl
aam
ret
push
push
sub
pusha
pop
cmp
jb
ins
sbb
push
push
mov
fisub
mov
outs
fidivr
xor
jge
pop
dec
mov
push
mov
outs
cmps
movs
test
inc
dec
cmp
fisub
add
data16
cwde
mov
jmp
or
or
mov
push
dec
add
dec
dec
push
mov
inc
and
jo
adc
push
cmp
ds
cmp
cmp
js
test
jae
sbb
push
xor
cdq
jbe
push
outs
fisub
or
dec
xor
mov
imul
pop
mov
mov
jo
retf
mov
inc
arpl
push
adc
(bad)
adc
push
jp
ins
or
dec
cdq
add
dec
or
dec
fdiv
add
retf
ins
dec
test
xor
mov
adc
or
xor
jp
xor
inc
push
or
dec
adc
push
mov
jo
mov
data16
push
xor
sub
push
push
aam
pop
xchg
loope
add
movs
push
enter
or
push
dec
ins
test
add
and
add
ss
inc
and
inc
inc
sbb
xor
jp
xchg
cmp
imul
outs
sub
push
mov
stos
mov
call
and
test
sub
movs
pop
dec
push
mov
jne
arpl
push
add
push
movs
sub
jb
test
or
dec
gs
push
or
cdq
jb
xor
fadd
gs
stos
dec
push
xchg
rcl
jbe
push
inc
xchg
pop
mov
xchg
inc
add
sub
dec
pop
add
inc
mov
jbe
lock
push
and
sub
xlat
adc
pusha
xor
push
mov
xchg
push
jle
ins
push
cmp
add
and
gs
test
inc
push
daa
mov
stos
xor
adc
adc
fmulp
dec
inc
push
push
mov
jge
inc
aam
dec
dec
push
or
pop
loop
add
xor
adc
lds
sub
add
push
adc
dec
dec
outs
xor
and
adc
ins
push
jbe
or
dec
inc
push
inc
push
cs
dec
sub
xor
and
sbb
ja
dec
mov
sub
pop
inc
add
cs
add
push
or
xchg
dec
sub
dec
and
ret
or
and
(bad)
les
data16
cmps
add
scas
movs
bound
xor
mov
push
pusha
cmp
outs
pop
push
sbb
inc
jne
xchg
jle
jne
and
or
dec
xor
test
sbb
or
push
adc
push
cmp
or
and
cs
cmp
push
sbb
push
push
cli
dec
mov
mov
inc
je
cmp
xor
jb
test
add
and
imul
add
jbe
xor
dec
push
push
pop
add
movs
test
je
jge
adc
(bad)
popa
inc
bound
stos
or
mov
mov
pop
dec
sbb
and
push
shl
cmp
push
pop
ins
test
mov
movs
xor
pushf
dec
clc
inc
imul
dec
sub
pop
cmps
xor
add
cld
mov
aaa
jae
dec
int3
push
dec
shl
hlt
push
xor
fdivr
clc
je
and
stos
and
adc
out
mov
ins
jp
addr16
jne
sub
es
and
arpl
xor
and
imul
jo
cwde
sbb
sub
inc
push
or
in
mov
xor
push
jle
pop
mov
sbb
push
push
cmps
pusha
mov
push
(bad)
cs
test
and
xor
sub
adc
mov
jl
dec
cwde
pusha
stos
mov
cmc
aad
fcomp
dec
dec
jbe
adc
sub
push
sub
adc
aaa
push
imul
xor
aaa
ror
push
or
fcom
cwde
rol
inc
jl
clc
xor
ss
bound
jl
movs
inc
or
or
pusha
pop
add
push
ss
push
inc
push
popa
adc
bnd
inc
bound
sbb
mov
outs
loopne
jo
sub
inc
push
inc
mov
sbb
enter
mov
cli
pop
xor
dec
mov
mov
jae
dec
nop
pusha
movs
or
inc
xchg
jne
pop
inc
ja
addr16
aaa
xchg
dec
je
cmp
js
add
sahf
imul
xor
mov
mov
cmp
and
sub
jl
push
cmp
adc
dec
or
and
mov
movs
test
xchg
inc
inc
sub
adc
ins
cmp
mov
push
imul
push
and
inc
or
movs
adc
add
imul
jmp
pushaw
add
inc
loopne
xor
adc
inc
mov
push
retf
xlat
mov
movs
xor
add
add
dec
cmp
xor
xor
ins
xchg
adc
xor
shl
vminsd
pop
pop
inc
jle
ja
nop
push
or
and
lock
ja
push
and
dec
jmp
mov
inc
and
sbb
test
gs
push
(bad)
jmp
test
dec
popa
bound
arpl
inc
imul
mov
xchg
pop
hlt
popa
jne
sub
jno
push
mov
mov
inc
add
mov
aam
sub
pushf
retf
loopne
in
jo
sbb
popa
push
outs
xchg
inc
mov
dec
stos
or
int3
addr16
and
popa
inc
push
aad
push
sahf
sbb
mov
xchg
push
inc
les
mov
cdq
dec
scas
jl
mov
and
xchg
data16
mov
dec
push
fs
adc
aaa
mov
adc
dec
push
ins
imul
adc
jb
adc
aaa
dec
or
es
call
push
jl
cli
xor
push
stos
adc
mov
popa
push
dec
jl
push
sub
dec
pop
push
ins
ja
add
dec
dec
jno
je
and
sub
(bad)
and
sub
xchg
jle
in
test
or
pop
test
ror
mov
inc
dec
cmps
loopne
shr
mov
pusha
xchg
test
aam
movs
aad
sbb
cwde
pop
push
and
data16
test
push
and
sub
cmp
sub
loop
inc
ret
push
mov
mov
or
sbb
xchg
xchg
popa
inc
imul
int3
inc
addr16
or
and
mov
shr
dec
outs
sbb
pop
dec
lods
push
push
jno
outs
xor
add
xor
jo
retf
gs
jb
push
jge
jge
call
add
pop
push
jl
retf
es
bound
dec
cmp
inc
jp
aam
or
cmp
pop
pop
arpl
gs
mov
int
cmp
add
pop
dec
jbe
outs
inc
push
jbe
push
push
dec
push
add
push
cs
mov
stos
mov
inc
xor
sub
cmp
add
and
inc
jne
mov
jae
rol
mov
arpl
in
xchg
dec
sub
or
ss
sbb
pop
lds
xor
ficom
mov
jbe
inc
inc
loop
dec
mov
push
fadd
fdiv
cmp
dec
push
inc
nop
mov
push
push
test
in
inc
jle
pop
mov
push
adc
dec
outs
pop
je
xchg
jp
jle
pusha
xor
mov
movs
repnz
mov
imul
icebp
push
outs
je
data16
push
cmp
sub
mov
jl
push
xor
sbb
xor
loopne
jae
dec
mov
and
xchg
jl
push
sbb
add
push
mov
sbb
mov
jb
fadd
push
imul
push
mov
add
jne
outs
imul
mov
mov
ds
cmp
jle
adc
mov
sub
call
pusha
jb
pusha
enter
test
fdivr
lods
cmp
pop
push
push
je
pop
mov
pop
mov
dec
aaa
pop
ins
popa
add
sub
add
add
call
inc
je
jl
stos
push
movs
xor
inc
inc
lods
mov
stos
dec
mov
and
xchg
bound
call
cmps
jge
data16
inc
pop
add
mov
arpl
in
popa
xor
push
push
in
push
inc
xor
ds
push
ret
xchg
mov
ss
pop
inc
dec
inc
mov
outs
xchg
arpl
mov
pop
dec
test
push
cmps
cmp
and
mov
xor
outs
test
ja
repnz
cwde
ins
inc
add
(bad)
loop
push
mov
dec
xchg
mov
sbb
mov
jne
dec
adc
arpl
cmp
push
xor
sub
test
and
inc
add
outs
dec
outs
push
jl
jo
(bad)
and
into
dec
dec
cmp
inc
mov
ja
sub
sbb
xor
aaa
jle
push
jmp
xor
push
aaa
ins
cmp
mov
cdq
inc
stos
inc
jne
dec
ror
imul
mov
loopne
jge
and
data16
je
js
jmp
arpl
push
popa
xchg
add
or
push
push
call
push
into
inc
and
cmp
nop
ror
test
xchg
shl
jle
or
leave
sbb
aam
in
jo
cmps
aaa
xor
aam
mov
dec
push
push
js
sub
out
outs
fisub
jo
dec
dec
jb
ret
and
xchg
xor
adc
xor
add
nop
pop
stos
add
(bad)
in
jne
jmp
jmp
push
into
cmp
movs
mov
(bad)
pop
dec
jge
mov
call
mov
fisub
xor
dec
push
ss
rcl
pop
and
jae
xor
inc
inc
(bad)
(bad)
cmp
imul
push
jp
jo
dec
sub
mov
jl
push
push
add
xchg
push
xor
jl
adc
ins
push
pop
movs
cmp
push
pushf
mov
retf
inc
ins
and
adc
inc
aam
jmp
pop
cld
sub
ja
pop
jmp
inc
inc
inc
loop
jge
add
push
bound
mov
les
arpl
out
jae
inc
xor
push
je
js
pop
pop
outs
inc
push
xor
push
(bad)
(bad)
outs
dec
imul
xchg
jo
mov
test
jp
or
nop
push
xor
addr16
dec
je
dec
xchg
xor
or
jne
jbe
dec
add
and
push
push
push
outs
pusha
sub
pop
imul
jne
push
push
push
adc
mov
cli
mov
cmp
push
jl
rcr
in
movs
inc
mov
sbb
xor
jo
and
push
rol
pop
call
clc
je
inc
stos
xor
jae
hlt
data16
or
outs
pusha
add
dec
push
mov
pop
shl
dec
mov
jno
ins
push
mov
pusha
test
adc
repnz
adc
push
jbe
cmp
data16
and
xor
cs
push
enter
sbb
lea
inc
mov
mov
ins
push
mov
inc
mov
add
xor
xchg
adc
mov
push
inc
mov
xor
pop
mov
inc
dec
inc
outs
mov
imul
ins
imul
xchg
dec
pop
push
jo
dec
test
xchg
mov
je
or
fild
push
jae
pusha
dec
inc
jne
xor
pop
pop
add
ja
add
pop
leave
shr
pop
gs
pop
mov
inc
mov
cmc
cmps
mov
ins
mul
pop
push
or
xchg
dec
ds
push
sub
sahf
jb
and
push
add
es
jmp
cmp
aaa
adc
mov
pop
add
or
mov
sub
and
inc
inc
add
hlt
or
dec
movs
sar
dec
test
and
xor
inc
xchg
imul
cmp
and
and
data16
xor
mov
bound
inc
push
es
int
cmc
xor
xor
add
aas
jno
call
adc
inc
mov
inc
push
arpl
popa
jno
mov
and
add
mov
mov
ss
push
imul
fwait
xchg
mov
mov
sbb
inc
test
aad
inc
ins
jge
push
pop
inc
push
xchg
sar
ss
add
xor
push
shl
adc
gs
jae
ins
outs
inc
mov
push
add
sub
dec
lods
add
hlt
push
pop
and
or
dec
sub
push
and
int3
and
push
push
xchg
sbb
icebp
dec
retf
fiadd
jl
ins
popa
jl
dec
adc
jbe
ss
push
mov
add
adc
push
add
add
mov
adc
(bad)
dec
push
popa
and
into
ds
adc
jge
xor
mov
and
dec
mov
out
mov
pop
dec
ss
push
mov
js
push
sub
hlt
outs
mov
mov
push
add
pop
push
pop
push
push
pusha
jo
jmp
mov
shr
inc
fist
movs
aaa
dec
and
cwde
push
mov
js
inc
inc
mov
lahf
ja
outs
lods
call
push
mov
fisttp
pop
add
pushf
popa
pop
dec
ror
inc
(bad)
ss
call
(bad)
jmp
clc
rol
arpl
imul
cli
xor
aaa
push
mov
mov
and
dec
adc
aam
xor
sbb
push
mov
or
shl
xchg
mov
xor
xchg
mov
inc
add
arpl
and
dec
xchg
les
lds
mov
pop
inc
(bad)
loope
and
pop
push
nop
push
in
mov
(bad)
mov
inc
pop
hlt
ds
mov
xchg
loope
(bad)
addr16
pushf
or
shr
pop
push
push
pop
jmp
xor
stos
add
mov
add
add
or
or
popa
xchg
dec
push
pop
sbb
test
dec
jne
and
inc
cmp
jp
pop
push
cmp
push
jmp
xchg
in
stos
dec
xchg
and
xor
ret
inc
xor
adc
jg
mov
lds
or
ds
jnp
adc
push
push
lods
fldcw
inc
idiv
jge
or
sbb
push
push
sub
sub
push
and
idiv
fsub
ins
mov
call
imul
xor
rcl
dec
push
jg
pop
xchg
rcr
je
ja
cmps
push
mov
test
add
aam
inc
retf
outs
leave
clc
xchg
(bad)
mov
or
pop
mov
fisubr
and
pop
scas
jle
add
dec
dec
addr16
popa
push
shl
loop
lea
fdiv
or
nop
mov
ds
jno
repnz
lahf
not
cmp
test
xor
push
mov
fistp
fcomp
xchg
shr
pop
xor
xor
pop
or
(bad)
loop
pop
xor
add
mov
popa
ficom
in
jo
inc
xchg
sub
cmp
dec
imul
sub
xchg
inc
dec
fsub
dec
jle
dec
loopne
fs
call
inc
sub
jno
pusha
push
aad
mov
adc
cmp
push
mov
xor
xor
es
push
retf
pop
div
push
xor
or
inc
mov
imul
dec
ins
retf
js
sbb
sahf
pop
pop
arpl
clc
xor
xchg
push
xor
stos
(bad)
push
pop
pop
ins
mov
adc
pop
pop
sahf
lods
xchg
jb
or
(bad)
(bad)
data16
imul
sbb
push
push
outs
es
outs
cwde
popa
adc
sub
cmp
dec
rcl
in
sar
inc
inc
inc
cmp
adc
push
bound
dec
sahf
outs
fist
call
mov
les
sub
xchg
add
xchg
pop
test
ds
xor
mov
test
push
test
push
jle
bound
pop
xor
stos
xor
fdiv
inc
xor
add
sbb
or
or
jo
mov
pop
push
mov
mov
fld
and
push
sub
add
lahf
inc
mov
shl
dec
enter
pop
add
and
cmc
fwait
or
and
push
sbb
in
inc
pop
push
sbb
ss
popa
lahf
jae
add
pop
outs
loopne
loope
movs
xor
dec
mul
lock
sar
xchg
push
mov
lods
lods
imul
jl
dec
mov
push
outs
jno
nop
and
ss
imul
push
push
xchg
fs
or
inc
test
xor
or
cmp
loopne
je
(bad)
cld
inc
mov
fmul
cld
pop
jo
inc
rcl
out
add
push
sbb
mov
pop
dec
and
aam
mov
sub
in
and
cmp
call
inc
ficom
xor
add
ficomp
sahf
dec
ss
add
pop
ins
push
xor
add
(bad)
push
mov
pushf
pusha
and
mov
enter
addr16
sub
jmp
mov
shl
leave
imul
inc
je
inc
cmps
movs
add
scas
inc
jle
jle
push
pushf
call
xchg
xlat
mov
dec
add
scas
jmp
xor
ds
fiadd
xchg
test
(bad)
aaa
fisubr
int3
ror
call
xchg
xchg
sub
clc
jle
push
mov
push
xor
pusha
cmps
pop
test
test
fadd
jnp
jo
inc
outs
push
sahf
int3
jle
pop
dec
adc
(bad)
adc
sub
into
fimul
mov
(bad)
push
mov
pop
push
dec
jo
push
pop
and
push
push
mov
gs
aas
ds
ss
test
adc
push
jle
inc
xor
sub
aam
in
add
inc
aas
sub
fisub
stos
cs
jl
ja
fisub
and
shl
icebp
sub
add
add
out
ds
imul
jp
mov
push
push
xor
dec
push
pusha
dec
or
mov
sahf
sbb
popa
ds
dec
data16
test
aas
push
inc
call
sbb
cmp
push
fmul
enter
push
push
popa
jbe
push
mov
out
sub
push
ds
les
push
or
pop
push
jl
es
adc
mov
imul
mov
mov
xchg
add
or
sahf
push
dec
push
movs
push
pop
mov
into
push
sbb
push
cwde
stos
mov
add
rcr
jne
inc
call
adc
push
popa
pusha
dec
pop
push
cmp
inc
add
(bad)
xor
adc
cmp
inc
push
stos
imul
push
mov
xor
pushf
ins
pop
jle
push
push
or
pop
mov
cmp
sahf
es
add
xlat
pop
pusha
push
imul
movs
dec
pushf
mov
push
imul
fisubr
and
mov
daa
or
fisub
add
inc
ds
jbe
jle
push
add
out
out
dec
repnz
imul
sub
push
addr16
imul
and
inc
dec
mov
clc
sbb
ja
pop
inc
ss
pop
inc
add
pushf
adc
aas
jle
loop
xchg
pusha
mov
cmp
or
jb
push
test
cmp
shl
int
loopne
jl
cli
inc
inc
pusha
sub
inc
out
popf
mov
xor
cmp
jo
mov
push
(bad)
sub
test
and
je
add
sub
int3
pop
mov
and
add
push
add
pop
xchg
mov
fimul
xchg
inc
sub
dec
sub
popa
dec
push
push
push
inc
test
jne
jbe
stos
les
sub
test
cs
push
dec
jne
push
ror
pusha
fisubr
sahf
hlt
daa
push
ins
mov
outs
pop
or
dec
mov
mov
sub
out
dec
into
cdq
adc
or
dec
repnz
jle
pop
mov
mov
cmp
add
dec
arpl
sar
and
push
pusha
inc
inc
sub
push
popa
xor
push
add
jle
jl
inc
dec
ficomp
pop
pushf
ds
aaa
(bad)
push
mov
adc
xor
lock
imul
popa
cmp
fisttp
sahf
neg
imul
xor
sbb
(bad)
sub
mov
sub
push
imul
outs
dec
dec
cmps
dec
push
je
sub
xor
adc
jo
(bad)
ds
pop
arpl
ror
xchg
jo
jbe
xor
dec
je
inc
inc
mov
mov
jo
jg
outs
ins
push
and
pop
gs
dec
mov
or
jno
push
sub
push
cmp
mov
push
jle
(bad)
jae
push
and
pop
push
pop
mov
ins
mov
popf
inc
push
mov
stos
outs
xor
int3
dec
mov
pop
dec
mov
dec
fcomp
pop
fistp
push
pop
je
pop
ds
add
adc
fs
(bad)
xor
cmp
push
adc
push
ret
bound
jmp
inc
jge
mov
or
aas
mov
je
addr16
fimul
pop
add
into
pop
ins
xor
xor
lock
aaa
jne
push
cmp
or
pop
pushf
xor
jne
push
dec
jle
push
sub
push
push
pop
cmp
dec
xor
not
xor
push
ins
jle
pop
shl
xchg
dec
or
or
and
shl
mov
inc
outs
jae
fs
or
outs
dec
inc
(bad)
xor
mov
push
hlt
jp
xchg
inc
xor
ja
mov
add
mov
call
shr
jno
sub
call
pop
push
stos
lock
and
pop
dec
lods
fsubr
inc
jl
popa
fidivr
inc
test
dec
ds
jg
dec
sbb
sbb
sub
sahf
ja
pop
fimul
push
cmp
add
push
dec
je
xor
xor
pop
sahf
push
bound
push
adc
push
push
lods
jb
push
pop
ds
jbe
cdq
push
fisubr
cmp
sub
pushf
pop
and
je
jbe
pusha
or
xchg
or
addr16
inc
sub
fmul
jge
inc
jle
(bad)
xor
out
jbe
push
dec
sahf
push
push
test
or
lods
call
jge
adc
ds
sub
push
xor
inc
inc
sbb
push
inc
notrack
mov
push
push
dec
gs
xor
fisubr
and
(bad)
sahf
outs
imul
mov
imul
and
or
aaa
ds
push
push
fisubr
xor
dec
call
or
xor
jle
add
test
inc
inc
adc
dec
test
pop
mov
call
out
ja
pusha
sub
shl
mov
lahf
sar
push
shl
push
ins
xor
pop
scas
adc
je
addr16
popa
dec
push
inc
push
xor
ret
sbb
call
sahf
ins
(bad)
cmp
mov
xor
es
mov
cmp
sub
push
sahf
inc
push
mov
adc
xor
pusha
push
dec
add
ds
fs
call
mov
push
(bad)
push
jbe
push
shl
ins
jmp
sahf
shl
or
pop
cmp
pusha
jno
adc
xchg
sub
lahf
pop
jl
and
mov
daa
(bad)
inc
pop
(bad)
jb
or
jle
addr16
xchg
sub
mov
jle
lahf
push
mov
stc
pop
sub
pop
xor
xor
or
sahf
inc
adc
mov
mov
dec
ss
test
sub
push
inc
xor
sbb
mov
pusha
inc
ds
xchg
mov
jo
xor
(bad)
and
push
shr
pop
push
jbe
jle
inc
or
pop
adc
fmul
sub
movs
push
or
enter
cmp
lahf
cmp
aas
jmp
aam
(bad)
pop
aas
imul
pop
or
jge
and
and
mov
or
fiadd
xchg
pop
fidiv
inc
je
ins
push
int3
pop
pop
ret
test
rol
data16
inc
stos
clc
push
inc
push
sub
ret
push
repnz
push
mov
push
or
into
push
jno
adc
test
aas
xor
cs
loope
(bad)
hlt
push
test
push
push
aas
mov
dec
jbe
or
loopne
aaa
push
call
jmp
call
data16
mov
push
and
sbb
jge
gs
xor
adc
outs
mov
fisubr
ficom
push
sub
sub
xor
inc
leave
push
xchg
xchg
outs
add
sahf
add
jae
jne
inc
aaa
push
pop
dec
pop
mov
xor
inc
fmul
test
sbb
jno
cwde
pusha
lds
adc
jle
mov
inc
dec
pop
dec
arpl
push
adc
sahf
or
xor
jle
inc
dec
push
dec
mov
jne
retf
jno
movs
cs
lahf
sub
adc
push
jle
push
and
js
ds
inc
push
dec
in
and
dec
dec
fisubr
pop
xsaveopt
push
popa
jle
push
jp
jno
jl
mov
repnz
push
addr16
sub
hlt
sub
gs
scas
jle
loope
call
pop
inc
cmps
lods
jge
aad
mov
dec
push
dec
mov
xchg
xchg
pusha
dec
jo
sub
daa
popa
test
push
xor
or
push
dec
int3
push
inc
lods
sahf
push
dec
test
enter
jmp
imul
jl
imul
xlat
cmp
aas
xor
add
pop
jg
test
sub
push
inc
jle
or
ds
pusha
jne
test
xchg
xchg
sbb
pop
push
adc
inc
ja
cmp
pop
jge
(bad)
adc
out
loopne
(bad)
push
pop
popa
pop
push
pop
in
dec
hlt
arpl
(bad)
adc
push
ins
pusha
push
push
push
je
pop
push
addr16
rcl
inc
sbb
and
aam
aas
shl
inc
adc
push
adc
and
aas
push
add
dec
imul
imul
je
ins
sbb
xor
push
les
xlat
xchg
enter
xchg
push
inc
je
sub
(bad)
loopne
add
pop
dec
push
jle
aaa
je
cmp
pop
mov
xor
adc
pop
jmp
push
icebp
sub
rcr
ss
jle
mov
jne
push
sbb
(bad)
je
mov
push
push
sub
push
mov
push
push
stc
push
pop
aaa
outs
push
arpl
fsubr
cmp
push
push
push
data16
or
push
pop
sub
inc
push
mov
fisubr
pop
dec
push
bound
aas
pop
es
adc
cld
nop
imul
xor
push
aas
ins
xor
fs
sub
jbe
xor
call
mov
jne
nop
retf
repz
push
push
push
jmp
mov
xor
sahf
or
adc
retf
stos
jb
ret
adc
push
adc
ins
push
cmp
push
mov
aas
push
pusha
push
dec
pusha
imul
outs
push
mov
cmp
or
push
outs
popa
adc
pusha
push
test
pop
dec
addr16
addr16
(bad)
or
sahf
or
pop
mov
dec
jo
pop
mov
outs
outs
jno
sub
cmp
jle
pop
and
clc
inc
faddp
push
adc
leave
cmps
dec
mov
xor
or
dec
mov
push
cmp
mov
push
imul
or
ds
inc
pop
lds
mov
xor
adc
hlt
loopne
push
ins
pop
mov
and
push
and
je
(bad)
imul
jle
sub
sub
xchg
inc
add
dec
ror
push
fidiv
xor
push
in
sahf
ins
jge
jne
je
mov
hlt
pop
xor
pop
popf
add
add
xor
rol
xor
cmp
jne
je
ss
js
mov
jbe
dec
outs
push
or
cmps
mov
inc
push
and
dec
cmp
or
ss
push
les
adc
outs
popa
jle
ss
lds
push
xor
aaa
pop
popa
pop
sub
ret
(bad)
pusha
dec
hlt
jae
xchg
xchg
lods
mov
push
ror
adc
push
adc
jge
push
jne
push
aam
jl
ret
je
inc
imul
jge
dec
push
sub
add
adc
or
fwait
jp
pop
cs
lea
ins
bound
mov
test
jb
jle
push
or
(bad)
pop
xchg
or
cmp
and
inc
add
inc
mov
sar
fidiv
push
push
(bad)
jb
inc
xor
jle
mov
dec
inc
push
jmp
xor
dec
cmp
pushf
pop
jno
mov
add
push
inc
push
mov
ja
ins
arpl
push
shl
pusha
push
or
icebp
popa
outs
fidiv
push
(bad)
jae
xor
jns
dec
aaa
push
ins
push
cmp
xchg
adc
mov
xor
int
xchg
sahf
xor
push
outs
cmps
movs
scas
push
sahf
jne
pop
xchg
ds
out
outs
jne
xor
addr16
xor
push
test
dec
fisubr
push
jne
stos
call
jp
sbb
hlt
dec
cmp
dec
jae
fisttp
inc
push
bound
jae
adc
jl
dec
int3
add
ins
inc
sbb
and
ficomp
dec
jno
jle
(bad)
push
push
sub
nop
dec
dec
pop
sbb
pop
add
int
pusha
mov
pusha
(bad)
inc
add
push
jb
or
pop
outs
lods
scas
fisubr
sbb
lock
and
popa
cmps
movs
xor
push
add
cld
clc
ja
imul
sub
(bad)
push
ja
push
mov
inc
pusha
in
inc
or
add
push
lock
mov
add
mov
add
pop
ds
xchg
rol
mov
mov
aad
imul
rcl
or
stos
pop
mov
pop
nop
mov
add
fsub
dec
dec
xchg
inc
pop
sub
lock
ins
inc
shl
lods
cmp
lahf
mov
inc
ficom
or
dec
sbb
loop
fisubr
scas
add
popa
inc
jle
sub
inc
push
mov
sbb
add
lods
adc
or
sub
bound
mov
jl
mov
jo
and
ret
push
xor
pop
add
push
mov
loop
jne
adc
mov
push
aas
mov
mov
adc
test
inc
mov
push
ds
outs
in
sbb
inc
mov
ins
fcom
xor
inc
aas
and
inc
pop
dec
jb
inc
push
xor
xchg
jno
adc
out
aas
aas
inc
cmps
ins
cmp
aas
aas
jge
cmp
pop
cmc
aas
jno
neg
ja
aas
pop
adc
add
sub
sub
les
add
cmc
push
sbb
lods
mov
sar
jge
(bad)
push
mov
nop
pop
push
pop
push
aam
xor
push
jae
mov
mov
pop
aas
outs
lods
(bad)
and
xor
mov
popf
and
and
add
repnz
cwde
cmp
div
jne
add
dec
gs
or
jnp
mov
inc
add
into
mov
mov
cmp
inc
pop
push
add
push
(bad)
stos
retf
stos
outs
cdq
or
sbb
fidiv
xchg
adc
js
cmc
dec
dec
xor
sub
aad
sbb
push
jno
imul
or
mov
push
sub
cs
sbb
loopne
lahf
xchg
inc
imul
pop
inc
pop
inc
inc
dec
push
xor
pop
shr
pop
jbe
dec
gs
dec
(bad)
(bad)
jle
dec
pop
dec
add
push
in
sub
push
dec
dec
pop
push
jecxz
cmps
xor
push
in
xor
jle
ss
inc
dec
clc
mov
cwde
dec
xor
adc
xor
movs
fcomp
xor
add
popa
inc
std
adc
cli
dec
cmp
dec
pop
cmp
pop
pop
inc
push
lods
clc
xor
push
push
inc
pop
cmp
(bad)
fwait
and
xor
pop
inc
mov
push
xchg
xchg
or
into
xor
mov
push
sub
ss
shl
(bad)
adc
jle
push
add
sub
pop
push
adc
inc
pop
jo
dec
push
ins
loope
mov
pusha
sub
(bad)
pop
jae
jbe
push
mov
lock
xor
aaa
xor
push
mov
jl
push
outs
adc
pop
hlt
pop
jbe
inc
jge
dec
dec
jb
aas
xchg
and
jl
dec
jge
dec
or
outs
push
out
jne
or
sub
add
pusha
jl
pusha
pop
xchg
push
in
push
inc
adc
daa
add
int
cmp
(bad)
jle
jne
lock
jo
dec
push
dec
outs
sub
sbb
pop
bound
push
or
push
mov
mov
xor
pusha
dec
push
stos
mov
jbe
push
xor
jmp
adc
xchg
dec
ins
push
test
sub
pop
outs
xor
iret
add
pop
dec
mov
or
push
dec
inc
mov
adc
dec
inc
push
mul
mov
ins
inc
xor
ins
xor
add
retf
aaa
and
pop
pushf
repnz
inc
mov
hlt
mov
inc
outs
retf
mov
jne
xchg
add
dec
es
cmp
inc
adc
rol
inc
mov
shr
shr
inc
pop
adc
fbld
loop
jae
gs
gs
push
cmp
mov
mov
xor
sub
inc
dec
hlt
sbb
adc
inc
sbb
js
test
pop
icebp
xor
outs
push
aam
pop
jmp
mov
push
fimul
mov
xor
or
inc
xor
cmp
jmp
movs
add
push
pop
mov
dec
add
movs
pop
dec
call
inc
int3
dec
je
inc
sub
sub
add
and
call
stos
push
jl
pop
and
mov
test
and
inc
stos
dec
jmp
out
mov
cwde
sub
adc
pop
dec
add
pop
ss
cmp
or
outs
xor
sbb
xor
cwde
push
es
outs
adc
dec
ins
ss
mov
ss
clc
dec
pusha
xor
icebp
cs
and
jle
out
enter
outs
mov
cld
dec
push
inc
xchg
pusha
movs
push
or
dec
adc
movs
or
retf
jmp
es
pop
sub
imul
rsqrtps
sbb
pushf
mov
loopne
popa
add
movs
aaa
push
pop
push
mov
cmp
imul
mov
jmp
bound
xor
dec
mov
inc
jmp
jb
inc
jb
push
sub
push
aaa
enter
dec
push
imul
jo
lods
or
push
push
mov
jno
jno
test
pusha
mov
bound
and
out
and
sub
mov
mov
lods
sub
jbe
cmp
mov
cwde
int3
adc
push
call
aad
or
imul
je
imul
add
addr16
arpl
pusha
sahf
sub
test
bound
jno
or
test
test
outs
xchg
jo
inc
push
test
dec
sub
dec
inc
movs
jbe
xchg
or
popa
call
scas
add
mov
fidiv
jno
dec
adc
dec
fcomp
or
adc
scas
dec
jno
and
cmp
sub
adc
jge
mov
mov
ret
inc
cli
xchg
push
ret
mov
add
cmp
pop
fs
mov
pusha
adc
add
stos
jbe
mov
es
je
xor
jo
shl
xchg
imul
test
cmps
push
dec
ins
popa
cli
push
es
adc
ficom
sub
cmps
xor
inc
bound
inc
xor
outs
cmp
ret
mov
cwde
sbb
stos
js
xor
aam
repnz
and
stos
jb
ss
pop
lea
push
aam
jo
or
adc
dec
popa
and
pusha
fisub
push
ja
and
pop
dec
inc
dec
xor
jae
xchg
gs
(bad)
retf
push
int3
and
call
dec
jo
jle
ins
ja
add
pusha
fcom
ss
push
xor
outs
jne
data16
push
sbb
jae
xor
push
mov
addr16
dec
sub
push
dec
call
enter
add
or
movs
mov
imul
outs
aaa
sub
ja
push
pop
pusha
inc
inc
int3
int
arpl
loop
push
sub
jae
inc
add
jb
xchg
jbe
jge
fnsave
dec
push
jl
sub
dec
adc
mov
cmp
sub
jne
jbe
or
mov
loope
jl
dec
jge
pop
dec
push
ror
test
dec
loopne
xchg
test
jo
movs
jo
mov
outs
push
inc
add
xchg
jle
aaa
mov
xchg
jle
jmp
bound
ds
adc
fisttp
arpl
push
ss
sbb
jmp
add
addr16
lock
xor
jge
xchg
push
jmp
sbb
sub
inc
mov
jg
dec
xor
and
cwde
push
push
and
sub
pop
xor
add
dec
sub
ins
imul
shl
jo
cmp
stos
aaa
aaa
mov
scas
jo
dec
jl
dec
cli
fisubr
push
test
ret
or
push
push
sbb
xor
rcr
push
add
mov
mov
enter
xor
cmp
cdq
pop
popa
imul
inc
test
mov
fdiv
cmp
dec
adc
sub
xor
outs
ins
push
mov
outs
push
inc
fimul
adc
inc
gs
mov
pop
fdivr
add
mov
repnz
dec
inc
retf
mov
push
add
bound
loope
popa
add
push
test
test
ss
inc
and
cwde
mov
xor
mov
add
pushw
inc
inc
xor
push
adc
xchg
push
jno
test
inc
not
clc
shl
cs
pusha
xlat
movzx
push
xor
ss
retf
shl
push
dec
mov
add
adc
lea
test
cmp
mov
ret
lods
sub
push
ins
aaa
clc
ins
ja
push
aad
ss
dec
jne
inc
add
inc
cmps
inc
dec
nop
hlt
or
popa
jbe
push
dec
push
dec
bound
out
push
push
pop
outs
mov
pop
jge
push
cmp
mov
ficom
xchg
(bad)
imul
adc
push
push
dec
inc
mov
add
dec
dec
dec
cmp
mov
je
inc
cmp
xor
ins
cmp
das
or
dec
js
rol
fwait
in
rcl
call
sub
outs
movs
add
jae
or
or
xor
pop
jo
push
movs
and
xchg
movs
push
sbb
push
mov
call
inc
inc
push
movs
pop
inc
dec
ins
ins
outs
xchg
mov
ss
adc
adc
jne
outs
inc
dec
inc
xor
push
add
imul
inc
dec
pusha
dec
mov
cmp
cmp
push
push
or
mov
sbb
inc
pusha
dec
outs
mov
push
icebp
mov
dec
xor
arpl
sub
sub
inc
dec
test
pusha
into
add
sbb
or
pop
push
inc
ret
pop
xor
cli
xor
cmp
data16
ins
lds
pop
dec
repnz
mov
sbb
jb
ins
add
push
int3
bound
inc
aaa
push
fstp
aad
pop
cmps
push
xor
mov
push
inc
in
mov
lods
xchg
add
pop
inc
push
cli
inc
pusha
inc
inc
outs
call
gs
xor
and
movs
dec
inc
loope
mov
cmp
sbb
pop
loop
or
adc
je
dec
dec
out
loopne
sbb
pop
dec
imul
jmp
lds
sub
inc
cmp
outs
inc
pop
jno
mov
sub
mov
out
push
mov
es
pop
xor
jb
adc
inc
arpl
jb
data16
dec
loopne
push
adc
jbe
adc
adc
inc
xor
arpl
je
ds
bound
or
retf
les
and
xchg
xor
cmps
ins
loop
mov
cmp
xor
sbb
pop
dec
hlt
cmp
add
mov
call
jle
jne
inc
ins
cmp
add
add
xchg
dec
pusha
dec
push
xchg
pop
ret
pusha
push
bound
pusha
and
xor
cmp
cli
cmp
jo
pop
inc
mov
sub
adc
lods
mov
je
jae
xor
sbb
and
inc
inc
ins
push
xor
cli
push
or
xchg
xor
add
pusha
cld
jo
dec
outs
jbe
enter
inc
pop
pop
mov
outs
addr16
sbb
inc
push
xlat
cs
pushf
pop
bound
xor
les
mov
out
dec
add
ror
push
aad
cmp
sbb
pusha
ins
and
retf
dec
and
rcr
(bad)
jle
push
pop
pop
push
or
or
popa
dec
push
or
push
mov
add
call
loop
mov
outs
sub
inc
sbb
mov
ss
jl
fcomp
jp
push
pop
sbb
outs
push
push
gs
sub
xor
jb
inc
bound
cmp
fld
push
inc
push
push
jne
jmp
outs
dec
pop
pop
ficom
jne
mov
test
in
pusha
popa
mov
mov
sub
xor
ja
dec
(bad)
jo
dec
jb
outs
inc
jbe
xor
push
popa
bound
or
and
and
push
xchg
cwde
enter
inc
pushf
stos
jle
dec
adc
xchg
or
xchg
jle
dec
add
jl
ja
mov
inc
call
xchg
jmp
or
push
arpl
xchg
push
inc
add
enter
gs
rcl
test
dec
ins
adc
cmp
mov
push
inc
jo
call
jne
inc
out
pop
pop
add
xor
outs
ins
outs
rol
push
push
je
dec
ja
jle
ss
pop
dec
aaa
jle
ja
or
aam
sub
or
in
sbb
fmul
pop
inc
fidiv
imul
inc
jno
or
enter
sub
ss
adc
jo
nop
jp
dec
sub
inc
pop
into
into
sub
ja
jb
pop
neg
loope
das
add
pop
xor
inc
jp
inc
push
adc
sub
pop
xchg
and
add
dec
cmp
mov
add
xor
cli
aaa
or
or
push
es
add
jle
xor
pop
xor
push
or
neg
dec
pop
inc
ja
pop
xchg
xchg
mov
dec
inc
xor
adc
push
push
imul
mov
rol
dec
rcl
mov
test
fidiv
bound
sahf
ja
sub
aaa
mov
jle
arpl
and
sub
adc
aam
push
jo
inc
imul
sbb
fcomp
mov
push
aaa
push
sub
dec
jno
arpl
inc
add
jle
mov
or
add
fistp
es
aaa
imul
inc
xor
aaa
xor
dec
test
dec
pop
mov
add
dec
cmps
push
push
xor
pop
sub
sub
add
or
ins
jne
adc
push
jl
dec
mov
mov
push
push
jae
pop
clc
push
xchg
rcl
ja
ins
jno
mov
push
popa
xor
ins
mov
cdq
mov
cmp
inc
aaa
cmp
pop
unpcklps
dec
adc
sar
inc
xor
xor
push
dec
cmps
push
adc
pusha
push
add
movs
push
ds
jl
and
inc
loopne
xor
push
(bad)
imul
xchg
ficom
fsubr
push
cmp
jle
cmp
or
jno
test
jge
or
inc
cmp
imul
jle
or
rol
pop
jo
xor
adc
push
ror
push
and
inc
jmp
mov
ja
mov
dec
pusha
push
inc
xchg
add
pusha
add
dec
dec
jbe
push
adc
pop
jae
push
push
add
je
lods
jl
mov
mov
add
or
inc
dec
imul
sbb
ret
sub
or
sbb
jge
bound
mov
mov
ins
dec
mov
loop
xor
inc
pop
mov
add
call
push
push
mov
dec
pop
dec
push
data16
inc
add
popa
mov
test
or
mov
in
push
xor
mov
and
sbb
mov
sub
push
sahf
rcr
cmp
jmp
add
sub
arpl
mov
push
xchg
nop
outs
jo
inc
jl
sahf
cmp
(bad)
leave
adc
dec
imul
add
addr16
pop
push
xchg
gs
add
movs
push
je
push
dec
js
jle
inc
inc
xor
movs
push
mov
ins
fidiv
in
pop
and
lock
ins
sbb
(bad)
cmps
test
aaa
popa
mov
nop
inc
xor
inc
mov
inc
push
inc
pop
add
add
popa
lods
nop
sub
sbb
add
bound
push
xchg
mov
adc
jge
shl
push
add
add
push
mov
sub
shl
mov
inc
stos
or
je
push
or
push
test
bound
xor
push
xchg
mov
jle
mov
ja
cmp
adc
cmp
cmp
xor
push
aaa
pop
or
dec
arpl
js
arpl
jo
xor
cmps
cmp
jb
mov
or
fs
mov
fs
je
push
shr
shl
jge
and
mov
fs
enter
add
pop
enter
push
adc
cmp
push
push
inc
push
shl
xchg
inc
aam
and
cmp
inc
inc
and
or
lods
imul
and
(bad)
push
pop
push
push
or
mov
dec
lods
inc
les
push
xor
and
test
ins
add
sub
adc
sub
ss
fmulp
rol
call
in
xchg
and
and
popf
or
dec
jbe
and
es
push
push
inc
nop
bound
and
pop
loop
adc
or
sub
pushf
dec
jne
(bad)
dec
jb
je
es
daa
mov
push
xchg
push
sbb
ins
fsub
jge
imul
xchg
loop
dec
pusha
cld
mov
fisub
bound
enter
(bad)
inc
jge
int3
dec
popa
xor
pusha
sub
add
sub
mov
jmp
popa
sbb
inc
add
dec
add
or
je
or
push
dec
loop
test
ss
sub
jle
add
pop
adc
sub
and
dec
or
xchg
xor
scas
outs
or
sub
push
jae
js
dec
and
dec
dec
push
je
pop
(bad)
dec
adc
les
mov
mov
or
call
inc
inc
je
push
imul
cdq
jb
and
popf
xor
je
inc
scas
outs
xor
adc
into
push
cli
je
and
pushf
dec
cwde
loopne
push
mov
push
scas
add
mov
jo
add
push
push
bound
add
mov
cs
movs
mov
pop
arpl
inc
push
mov
inc
mov
icebp
mov
test
gs
aaa
pop
aam
inc
test
jl
xor
cmp
dec
inc
dec
push
add
pushf
and
mov
outs
jle
inc
dec
mov
inc
outs
push
push
ja
lock
add
bound
jle
cmps
cmp
sub
(bad)
arpl
jno
sub
push
fdiv
mov
and
adc
xor
fs
call
outs
je
jge
nop
arpl
xor
xor
inc
movs
dec
xor
push
jo
sahf
and
or
outs
dec
pop
dec
dec
xor
add
jbe
dec
push
jmp
(bad)
jl
pop
sub
push
mov
cmp
mov
test
hlt
mov
ror
inc
ja
add
mov
jmp
or
dec
bound
dec
ins
xor
loopne
pop
mov
adc
inc
ja
leave
push
add
adc
mov
aaa
dec
push
or
loop
push
inc
pop
xchg
rol
pop
sub
jo
data16
push
sub
push
imul
push
xchg
jmp
pop
cmp
or
es
xor
jmp
cmp
je
popa
push
sbb
cmps
(bad)
daa
mov
sub
inc
cmp
add
aam
and
jge
push
ss
imul
push
jo
ins
dec
ins
outs
ss
xor
jb
ja
push
ss
add
inc
dec
pop
add
adc
out
es
push
je
or
call
adc
push
ret
arpl
mov
inc
push
test
push
dec
inc
jmp
addr16
jne
inc
ins
pushf
mov
popa
adc
xor
pop
mov
leave
inc
inc
adc
pop
add
ja
and
xor
call
cs
sub
fs
je
add
cmc
add
bound
jb
add
and
push
test
mov
push
and
loopne
xchg
cmps
cli
sub
test
push
shl
dec
cmp
push
inc
test
les
or
inc
jo
mov
push
push
mov
in
arpl
push
fist
pop
xor
pop
mov
push
pop
push
dec
xor
arpl
add
(bad)
and
and
jl
xor
nop
mov
push
cmp
mov
bnd
or
int3
sahf
xchg
fadd
stos
xor
mov
dec
ss
dec
push
jbe
js
mov
add
push
imul
mov
mov
mov
inc
add
and
jle
push
popa
mov
pop
pop
outs
lods
push
add
jle
mov
push
imul
push
outs
retf
xor
xor
mov
outs
and
dec
push
shr
push
inc
ror
test
cmp
js
xor
ret
and
pop
inc
pushf
push
add
push
arpl
inc
xchg
popa
add
imul
ffreep
inc
bnd
outs
mov
push
cs
mov
ss
pop
inc
xor
mov
jge
ins
(bad)
dec
push
stos
outs
mov
xor
and
inc
mov
sbb
mov
dec
pop
(bad)
lock
jno
mov
(bad)
jl
popa
cmp
jbe
dec
and
int3
or
cmc
stos
and
dec
pop
mov
push
adc
push
call
or
xor
retf
add
sar
dec
xor
pop
and
add
dec
test
in
push
push
and
adc
push
sub
bound
xchg
test
lock
inc
sub
sub
cld
or
pop
xor
push
dec
inc
adc
dec
push
mov
push
inc
sub
mov
(bad)
pop
inc
jle
mov
pop
bound
and
or
xchg
enter
imul
loope
fs
push
pop
sub
xor
push
sub
push
and
aam
pop
mov
jae
mov
push
pop
dec
dec
jge
adc
xchg
stos
ins
adc
sbb
retf
mov
xor
jbe
push
cmp
sub
push
pop
dec
ins
outs
mov
jl
adc
mov
adc
jecxz
es
xor
xor
jle
out
cmp
test
enter
sbb
and
je
div
xor
pop
outs
outs
mov
jae
add
dec
retf
ret
mov
test
jo
imul
add
sub
inc
cs
aam
ss
and
mov
test
popa
jp
mov
cwde
bound
jae
jmp
daa
push
aam
inc
pop
push
push
pop
or
inc
jl
loop
adc
movs
or
xor
test
call
push
mov
mov
addr16
push
outs
push
inc
enter
add
(bad)
sub
ja
ins
inc
adc
fcom
mov
jge
pusha
ja
stos
and
xor
out
xor
push
adc
xor
adc
xor
test
es
push
stos
xor
pusha
push
inc
stos
dec
dec
jae
into
jne
sbb
push
cmp
je
jge
adc
test
dec
push
dec
mov
shl
inc
jb
loope
push
dec
mov
mov
jno
mov
add
or
jne
pop
ret
lods
sbb
push
dec
jle
imul
arpl
in
jbe
aaa
mov
jne
push
xor
inc
jmp
rcr
push
dec
loope
inc
sbb
or
cmp
push
cwde
(bad)
int
stos
add
adc
movs
lea
dec
adc
xor
xor
mov
xor
pushf
scas
inc
push
or
cmp
cmps
and
adc
in
pusha
xor
add
shl
dec
sbb
adc
data16
arpl
mov
ja
je
adc
add
and
dec
aaa
cmps
and
mov
jbe
dec
hlt
rcl
pusha
jmp
fdiv
push
inc
xor
arpl
lods
or
pusha
add
inc
shr
fisubr
push
and
mov
rcr
test
push
aaa
ss
push
sbb
test
xor
cmp
add
push
fiadd
pop
push
je
rcr
daa
push
jae
mov
or
pop
sbb
jg
push
jne
push
dec
je
arpl
fwait
loope
cmp
inc
lock
dec
lock
jl
dec
push
es
ss
inc
retf
dec
push
adc
xchg
push
test
je
push
and
add
mov
sbb
rol
mov
arpl
push
fcom
mov
aas
jo
popa
pop
pusha
call
fs
dec
arpl
jb
mov
push
jo
dec
dec
jo
cmp
sahf
aam
aaa
pusha
lds
xchg
cdq
add
dec
push
or
jno
mov
push
sub
jle
cmp
push
imul
(bad)
xchg
ret
pop
inc
arpl
inc
ret
pop
shr
cmps
scas
pop
push
dec
bound
push
jae
bound
mov
je
push
loop
and
arpl
es
push
(bad)
out
dec
imul
add
push
ret
adc
imul
(bad)
aad
mov
ja
retf
call
sbb
addr16
ins
shr
pusha
push
xor
push
add
and
ja
inc
jo
lock
outs
mov
mov
mov
inc
xor
push
sub
cmp
mov
jle
outs
fs
imul
test
push
jl
mov
ins
pop
dec
outs
inc
pop
xchg
mov
cmps
jb
cmp
(bad)
cld
lock
jle
inc
ror
ret
.byte
push
.byte
