sbb
adc
sub
sub
adc
push
push
call
cmp
jne
add
and
sub
or
add
mov
call
sub
sbb
adc
mov
add
add
add
add
sbb
add
mov
add
sub
sub
adc
lea
push
call
sub
xor
adc
xor
lea
push
call
adc
adc
and
mov
adc
add
sub
mov
call
sub
add
sub
sub
sbb
mov
add
sub
adc
sub
add
sbb
push
push
call
cmp
jne
adc
sbb
mov
adc
add
adc
mov
call
sub
sbb
and
mov
add
mov
pop
ret
or
adc
sbb
mov
adc
and
adc
lea
push
call
adc
adc
mov
adc
sub
lea
push
call
xor
sub
adc
adc
mov
add
mov
call
sub
add
sbb
mov
add
add
add
jnp
jmp
pop
and
push
mov
shl
push
mov
shl
push
mov
shl
push
call
pop
cmp
je
xor
xor
push
sub
sbb
xor
add
or
sub
xor
sub
neg
or
add
adc
sub
sub
adc
sub
xor
mov
sub
not
add
xor
xor
adc
add
sub
sub
adc
sbb
add
or
ror
sbb
and
adc
sbb
xor
adc
and
add
xor
adc
or
clc
adc
sub
sbb
adc
xor
xor
dec
and
adc
adc
adc
xor
sub
adc
rol
and
sub
add
add
adc
sub
rol
and
add
sub
adc
adc
or
push
pop
or
sub
adc
sub
mov
clc
sbb
add
sub
add
and
or
add
sub
sub
add
or
sbb
or
or
cmp
jne
pop
mov
push
and
or
xor
sbb
adc
sub
push
sub
add
adc
adc
xor
sbb
jmp
mov
add
sbb
sub
xor
push
push
push
push
call
cmp
jne
sub
or
add
add
or
sub
lea
push
call
sub
and
or
add
add
add
mov
call
mov
add
sub
sbb
adc
adc
add
xor
mov
adc
adc
adc
add
push
push
push
push
call
test
jne
or
mov
add
or
adc
sub
mov
call
sub
adc
adc
adc
xor
or
add
xor
add
and
xor
add
push
push
call
and
add
mov
add
xor
adc
mov
call
and
mov
adc
xor
adc
add
and
adc
and
or
and
mov
add
push
push
call
adc
mov
add
or
sub
or
xor
lea
push
call
sub
adc
mov
add
mov
call
xor
sub
sub
sbb
add
add
adc
add
xor
xor
adc
push
push
call
mov
add
or
sbb
sub
mov
call
sub
sub
sbb
or
or
mov
add
add
add
add
mov
add
lea
push
call
or
sbb
adc
mov
add
mov
call
sub
sbb
xor
sub
add
and
xor
adc
sbb
mov
add
push
push
call
mov
add
adc
sbb
mov
add
push
push
call
cmp
jne
mov
add
adc
sub
xor
adc
adc
mov
call
mov
adc
adc
sbb
sbb
sub
adc
xor
adc
sub
add
or
push
push
call
add
adc
mov
add
and
push
push
call
cmp
jne
adc
sub
adc
add
mov
add
mov
call
adc
adc
or
sbb
sub
adc
add
add
sbb
xor
xor
sub
sbb
lea
push
call
sub
and
xor
sub
and
mov
add
push
push
call
xor
sub
sbb
sbb
adc
add
mov
call
mov
add
xor
mov
adc
add
adc
and
add
in
les
(bad)
push
xor
mov
add
mov
adc
mov
add
mov
add
sub
sub
xor
or
sub
lea
push
call
mov
add
or
mov
adc
mov
add
mov
call
xor
and
xor
adc
or
adc
add
add
add
add
mov
add
mov
adc
or
push
push
call
cmp
jne
sub
adc
add
and
xor
mov
call
adc
adc
mov
adc
mov
add
add
add
fisttp
adc
or
lea
push
call
add
mov
or
mov
add
and
push
push
call
test
jne
sub
or
adc
mov
add
mov
call
add
adc
adc
adc
adc
adc
add
add
or
adc
or
sub
push
sub
add
sbb
xor
and
sub
push
push
call
add
sub
add
mov
add
dec
jne
sub
or
add
sub
and
add
add
or
adc
or
xor
adc
lea
adc
adc
xor
and
push
adc
adc
adc
adc
call
or
sbb
adc
or
xor
xor
push
or
and
add
sub
adc
push
adc
add
sub
add
adc
sbb
push
or
sub
adc
adc
push
add
xor
add
adc
sub
add
push
add
adc
or
sub
add
push
adc
or
and
or
sub
adc
call
add
adc
add
add
adc
mov
add
adc
sub
sbb
sub
call
adc
adc
adc
sbb
add
mov
xor
adc
and
or
add
or
call
adc
adc
sbb
sub
add
mov
and
mov
sub
adc
xor
push
add
add
adc
sbb
adc
call
adc
sub
and
or
mov
or
push
push
push
push
call
cmp
jne
pop
push
push
push
call
pop
push
lea
push
call
pop
push
adc
and
xor
and
pop
mov
add
xor
sub
or
add
and
sub
adc
adc
add
or
adc
sbb
xor
or
and
push
push
push
push
push
call
sbb
add
add
sbb
cmp
jb
sub
sbb
adc
add
adc
push
adc
add
add
xor
ds
add
popa
cmp
popa
mov
cmp
test
test
inc
popa
vpunpcklwd
test
vpunpcklwd
test
vpunpcklwd
test
vpunpcklwd
test
vpunpcklwd
jecxz
jle
push
ja
jecxz
dec
iret
daa
dec
fwait
imul
mov
sbb
scas
sub
or
push
jae
inc
ins
ins
inc
and
and
and
add
inc
and
add
inc
sub
ror
sub
xchg
inc
inc
xchg
pop
rol
mov
inc
neg
rcr
inc
out
rol
out
inc
out
rol
out
inc
out
rol
xlat
inc
inc
xlat
pop
rol
xlat
inc
inc
xlat
pop
ret
xlat
inc
inc
xlat
pop
ret
xlat
inc
inc
xlat
pop
ret
xlat
inc
inc
xlat
pop
rcl
pop
xlat
inc
inc
xlat
pop
rcl
pop
test
pop
test
pop
test
pop
test
pop
test
pop
test
pop
test
pop
test
pop
test
pop
test
pop
test
pop
xlat
call
xlat
call
xlat
call
xlat
call
mov
into
into
cmp
sub
mov
mov
mov
into
into
das
mov
out
(bad)
dec
sar
sti
shr
sti
sti
sub
scas
scas
xlat
or
sti
or
scas
scas
rol
sti
sti
push
shr
sti
push
shr
mov
rol
mov
out
rol
mov
out
rol
mov
out
rol
mov
out
rol
mov
out
rol
mov
out
rol
mov
out
rol
mov
out
rol
mov
out
rol
mov
iret
or
cmps
push
cmp
das
lods
and
jmp
test
into
inc
in
bound
(bad)
cmp
mov
jle
rcr
cmc
inc
ror
mov
ret
sbb
ja
or
imul
cmp
ret
dec
push
xor
mov
sub
dec
ret
retf
mov
fisttp
add
add
into
std
xchg
scas
dec
out
idiv
add
test
xor
or
js
inc
and
in
imul
xchg
push
xchg
data16
push
popa
cmp
popa
fwait
je
cs
cmp
xchg
mov
outs
(bad)
outs
mov
inc
ins
mov
jb
or
cwde
addr16
repz
pusha
stos
cwde
in
lock
xor
mov
push
push
cs
pop
mov
js
pop
push
aas
ds
fs
paddq
mov
xchg
lds
xchg
out
test
adc
xor
(bad)
mov
adc
je
add
inc
mov
cmp
into
adc
aas
adc
and
and
push
call
xor
lahf
xor
int3
cdq
cmp
retf
mov
pop
pop
inc
jle
mov
xchg
repnz
add
push
adc
add
inc
fs
aad
jmp
adc
pop
stc
out
sub
retf
dec
inc
loopne
es
dec
test
shl
jnp
(bad)
jnp
inc
(bad)
mov
and
dec
dec
in
shl
js
inc
mov
out
fisttp
push
(bad)
out
(bad)
cmc
outs
in
cmp
retf
sub
fmul
mov
jae
js
sbb
jge
fxch
lods
aad
(bad)
outs
mov
(bad)
cmp
adc
es
aas
mov
loop
lea
enter
inc
inc
rol
cmc
push
in
pop
pop
mov
pop
xor
inc
stos
lahf
mov
inc
push
xor
scas
xor
xchg
fnstenv
loopne
sahf
lock
mov
or
mov
mov
adc
mov
in
sar
sbb
mov
xchg
xchg
jl
out
je
sbb
push
mov
and
jmp
inc
inc
hlt
stc
test
repnz
xchg
loop
mov
mov
and
mov
mov
mov
scas
jae
or
jmp
ss
or
ins
jns
pushf
xchg
retf
cdq
pop
movs
leave
out
scas
scas
(bad)
cmp
scas
(bad)
and
enter
add
or
fsub
repz
push
pop
dec
jb
dec
pop
jmp
loope
pop
add
xchg
inc
lahf
xchg
not
push
cmp
test
aas
inc
popf
outs
cld
bound
mov
das
(bad)
jmp
stos
inc
add
xor
sub
mov
data16
call
aas
xchg
pop
test
pop
inc
jp
mov
arpl
pop
cs
cs
into
je
sahf
(bad)
jb
(bad)
jb
(bad)
pop
add
gs
aam
movs
out
inc
stos
or
(bad)
enter
dec
mov
mov
inc
inc
repnz
rcl
cld
repnz
inc
cwde
cld
mov
fldln2
add
jmp
sti
fucomip
in
pushf
jg
lods
neg
es
sub
enter
div
mov
sbb
or
add
xlat
ror
mov
and
les
xchg
xchg
pop
les
pop
xor
outs
sahf
pop
iret
pop
pop
iret
pop
daa
fwait
or
pop
cmps
xor
retf
ja
xor
retf
or
xchg
test
adc
xchg
sbb
clc
push
jb
push
xor
je
xchg
mov
iret
retf
add
fbld
fbstp
popa
fsub
das
cmp
fcmovnu
pop
sbb
out
aaa
mov
out
out
daa
push
mov
into
mov
rcl
movs
mov
sub
sub
mov
jle
es
jae
jle
jl
call
ret
lods
scas
inc
inc
xchg
inc
scas
push
mov
sti
fcomp
sti
jbe
repnz
out
popf
push
mov
ins
int3
mov
sbb
mov
dec
mov
or
addr16
rol
loop
mov
jle
mov
dec
(bad)
mov
adc
fmulp
add
jg
inc
push
dec
mov
cmp
dec
repnz
jne
repz
repz
xor
mov
in
inc
imul
mov
cmp
add
or
lds
scas
bnd
or
sbb
mov
xor
inc
xchg
int3
inc
in
mov
call
xchg
(bad)
cmc
xchg
ficom
sbb
mov
fidiv
(bad)
shl
inc
fcomp
in
popa
fadd
xchg
xor
mov
les
mov
xchg
xchg
add
scas
dec
jo
sub
xchg
fcmovnu
xchg
sahf
add
pop
adc
xor
adc
or
jl
int3
inc
ret
jl
pop
sub
add
dec
cmps
or
dec
cmp
adc
enter
mov
lahf
xchg
fnstcw
fisub
push
xchg
in
aas
push
test
adc
xchg
rcl
test
inc
adc
iret
test
inc
mov
xchg
cmc
xor
pop
jno
test
mov
ds
mov
inc
jecxz
dec
fcom
add
pushf
(bad)
into
outs
jmp
sub
repz
sbb
cmp
sub
and
or
and
retf
inc
lahf
pop
jbe
sti
xor
aas
enter
shl
lock
cli
and
mov
add
xchg
pop
cmp
shr
add
push
fmulp
push
xchg
add
push
mov
adc
mov
in
add
stos
and
ins
test
aam
xor
out
imul
ins
ficomp
pop
pop
loopne
add
xchg
mov
jne
imul
in
push
into
in
movs
cmp
push
leave
je
mov
add
repz
fs
fnstenv
lods
and
dec
ins
lds
inc
push
out
inc
sbb
movs
pop
cwde
scas
jecxz
movs
out
pop
loopne
cmps
sub
mov
mov
add
loop
ss
xchg
mov
pop
pop
rcr
out
stos
push
nop
pop
mov
outs
push
mul
out
pop
sbb
out
xor
jns
aad
dec
xrelease
dec
xor
and
xor
jmp
cli
lods
mov
js
mov
add
int3
mov
jmp
sar
int
inc
add
mov
inc
jg
inc
and
pop
cmp
in
iret
in
xlat
imul
pop
in
cmp
pmaddwd
(bad)
mov
(bad)
dec
dec
or
push
cmp
push
sub
dec
shl
lods
scas
xchg
cwde
or
push
(bad)
outs
xchg
pop
xchg
popf
and
in
std
jbe
sbb
and
push
sbb
mov
inc
add
ret
pop
out
sub
pop
movs
in
outs
inc
mov
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
ds
sub
ds
adc
test
out
xchg
mov
out
mov
and
test
loopne
xchg
test
loopne
xchg
mov
mov
mov
mov
fdiv
aam
xchg
mov
cmc
mov
cmc
cmc
mov
cmc
cmc
mov
mov
mov
xchg
clc
clc
xchg
stos
push
push
stos
mov
pusha
mov
in
mov
xor
stos
mov
cmp
xchg
cmp
xchg
test
leave
test
and
mov
in
in
mov
in
mov
lea
xchg
mov
or
test
cmps
test
lods
lods
mov
imul
test
sub
add
mov
(bad)
test
scas
test
or
mov
aaa
aaa
mov
mov
mov
ins
ins
mov
ins
ins
stos
mov
nop
mov
jne
mov
pop
pop
stos
xchg
mov
xchg
mov
pop
mov
arpl
xchg
push
push
xchg
mov
sti
mov
sti
sti
mov
sti
sti
mov
sti
sti
stos
mov
mov
stos
sti
mov
xchg
mov
mov
shl
xchg
jecxz
lds
lds
mov
mov
mov
mov
int
ror
mov
mov
repz
sti
mov
std
(bad)
sti
xchg
jecxz
(bad)
xchg
cli
mov
movs
in
mov
test
movs
leave
mov
movs
fild
stos
mov
xchg
mov
loop
call
mov
xchg
cld
clc
lods
sti
(bad)
int
mov
test
dec
mov
cwde
in
lea
into
repz
in
stos
(bad)
stos
ror
lahf
iret
repz
xchg
xchg
mov
xchg
idiv
mov
cwde
jmp
mov
lahf
lahf
mov
in
sbb
lahf
fcmovb
mov
mov
repnz
(bad)
sahf
sti
mov
ror
lahf
call
call
and
lods
mov
stc
mov
xchg
lock
(bad)
call
fsub
cdq
cdq
in
cdq
test
cmps
xor
loop
xchg
mov
xchg
clc
iret
mov
cld
(bad)
stos
mov
jmp
xchg
loopne
xchg
clc
out
add
scas
mov
sahf
sti
(bad)
in
xchg
and
shl
mov
rcl
lods
shl
out
fdiv
loope
faddp
sahf
lods
test
xchg
test
repz
pushf
fxch
mov
fwait
dec
int
(bad)
shl
in
xlat
xlat
inc
mov
xlat
leave
out
mov
xlat
leave
out
mov
mov
pushf
xchg
shl
in
lock
icebp
sub
repz
fcom
xchg
jecxz
mov
xchg
fcmovb
loop
(bad)
mov
out
fcomp
mov
test
jmp
cdq
jmp
test
fsin
stos
scas
scas
(bad)
xchg
mov
hlt
fimul
xchg
cld
aad
scas
fstp
fsubr
retf
ret
stos
(bad)
stos
in
in
or
ret
stos
retf
fwait
movs
retf
stos
ret
neg
scas
retf
sti
cwde
in
retf
mov
fdivr
mov
jmp
neg
(bad)
cdq
cld
jmp
mov
dec
(bad)
jmp
(bad)
out
clc
into
mov
scas
lock
mov
xchg
rcl
mov
mov
mov
loop
lods
lods
add
rcl
xchg
lods
clc
rcr
(bad)
(bad)
cmps
rcl
cmps
(bad)
in
dec
jne
adc
push
jg
adc
push
imul
push
dec
dec
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
inc
push
ja
sbb
inc
