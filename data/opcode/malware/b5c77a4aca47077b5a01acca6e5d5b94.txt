push
(bad)
call
in
cmp
jne
call
push
push
jmp
retf
(bad)
(bad)
push
xadd
dec
test
jg
mov
mov
push
mov
call
ret
mov
(bad)
std
inc
lea
mov
push
mov
push
and
and
mov
std
std
inc
dec
hlt
mov
pop
mov
add
jno
dec
or
das
in
lock
pop
push
ret
lock
sbb
push
imul
push
lods
loopne
jge
jmp
mov
adc
adc
fistp
xor
pop
add
add
pop
ret
aaa
(bad)
call
sar
cmp
jg
mov
fdivr
add
mov
scas
push
(bad)
(bad)
(bad)
out
(bad)
int3
push
adc
rcl
or
xor
adc
cmp
ins
fild
rcr
jmp
push
mov
fdiv
pop
jl
push
push
shl
pop
hlt
sub
adc
mov
loope
or
pop
adc
adc
xchg
inc
sub
clc
test
sub
add
cmp
jge
mov
inc
imul
push
or
push
xor
loop
jle
std
mov
mov
push
add
clc
pop
pop
mov
pop
fstp
inc
nop
mov
sub
cmp
or
xchg
ficom
jle
push
mov
enter
or
or
adc
mov
(bad)
push
je
mov
or
(bad)
adc
sub
cli
pop
jo
fcmovnbe
cmp
mov
enter
jbe
mov
ss
ja
fsubr
inc
lds
dec
leave
push
ins
xor
sbb
icebp
cmp
jae
push
(bad)
aam
(bad)
(bad)
jle
push
xor
jb
cmp
scas
xchg
jae
add
jne
and
in
jb
pop
out
call
inc
add
shr
movs
pushf
or
cmp
jmp
push
adc
pop
push
sbb
cmp
je
ret
or
jge
push
mov
jmp
xor
test
inc
cmp
hlt
xchg
jle
push
(bad)
jle
ja
cld
repnz
jle
test
and
inc
sub
jge
fild
sbb
cmp
jle
add
ss
call
push
jge
push
dec
fmul
mov
call
add
push
jg
hlt
xchg
ror
xor
jbe
sbb
add
or
add
out
adc
adc
(bad)
push
mov
push
std
jns
xor
mov
jb
push
movs
fmul
jmp
add
mov
push
or
aad
pop
add
dec
pop
pop
pop
xor
xchg
pop
push
mov
shl
lock
dec
ins
push
aas
pop
inc
mov
push
aad
imul
push
push
push
mov
jecxz
push
xchg
aas
push
inc
inc
sub
or
sub
enter
jg
mov
daa
mov
sbb
cmp
mov
dec
or
push
repz
stos
sub
push
push
add
push
popa
pop
sub
mov
retf
jmp
shr
or
xchg
cmp
jae
jmp
adc
(bad)
cmp
movs
dec
icebp
cmp
sbb
add
jmp
dec
sbb
adc
fild
pop
or
push
pop
ja
std
sub
push
add
push
jmp
sub
lea
pop
pop
retf
fdiv
cmps
xor
mov
mov
mov
or
or
sahf
(bad)
jbe
adc
and
in
mov
ins
in
outs
pop
push
pop
div
jle
cmp
jae
push
shr
(bad)
pop
sub
cmp
ja
lea
sbb
add
iret
jo
adc
lock
call
adc
add
and
xor
in
sbb
and
cld
mov
mov
cmp
loopne
mov
cmp
xchg
push
in
lea
push
push
mov
call
adc
iret
add
mov
inc
sub
mov
dec
cmc
rcl
call
loopne
xor
push
pop
icebp
pusha
push
fnsave
cdq
stos
push
stos
push
lea
cmp
mov
cmp
add
cld
lea
or
add
ret
jle
mov
jge
cmp
sti
aaa
ret
enter
push
jmp
bound
(bad)
std
cwde
mov
lock
loop
test
jbe
imul
and
je
cmp
je
mov
ss
aad
(bad)
mov
in
mov
stos
adc
or
fcomp
lea
add
pop
aaa
pop
xor
imul
lahf
jecxz
mov
jg
xchg
adc
fiadd
push
scas
push
sbb
arpl
mov
push
test
push
or
daa
adc
fs
push
inc
cmp
add
mov
pop
test
test
loop
fdiv
psubd
daa
xchg
pop
xchg
loopne
add
or
push
xchg
push
dec
jmp
pause
mov
bnd
cmp
or
mov
mov
xor
push
mov
sub
sar
outs
jnp
retf
cmp
pop
and
lea
cmps
xchg
jno
or
jmp
repnz
ret
mov
dec
pop
pop
xchg
jmp
jbe
call
push
jnp
mov
popa
jmp
and
sbb
push
jge
adc
dec
cmp
jae
(bad)
push
push
into
add
jmp
test
push
ins
clc
cmp
jo
(bad)
sbb
pop
neg
push
rcl
and
pop
fnstcw
inc
ja
cmp
call
or
cmp
jne
push
loop
div
xor
cmps
repnz
retf
cs
jmp
adc
mov
jmp
sub
aad
xlat
(bad)
scas
dec
sbb
pop
gs
or
add
push
push
xchg
push
adc
jno
mov
loop
rcr
pop
push
jnp
add
or
push
inc
in
xor
pmulhuw
pop
rol
clc
test
imul
sbb
sbb
inc
sub
ins
sub
and
or
and
mov
add
ror
into
cmp
add
sbb
retf
push
xchg
mov
dec
push
lods
adc
sub
add
aam
cmp
scas
inc
cs
cmp
je
jne
fst
(bad)
je
imul
xor
sbb
or
cmp
or
lahf
rcr
callw
cs
cs
sbb
add
hlt
scas
inc
push
and
ins
mov
sub
test
mov
mov
sub
dec
call
lock
fdivrp
in
ror
das
add
lock
mov
xchg
fwait
push
sar
test
cmp
xor
ss
ds
jb
add
or
cmps
jbe
mov
ret
inc
inc
add
inc
call
cmp
outs
das
sub
jmp
lock
xor
sbb
dec
inc
or
mov
add
sub
ss
in
cmps
fldenv
ret
inc
fucomp
adc
inc
mov
call
add
lock
add
add
movs
cmp
and
(bad)
imul
(bad)
sub
pop
push
lea
mov
popa
pusha
pop
ja
dec
call
int
stos
push
pop
fs
icebp
popf
mov
push
adc
or
mov
mov
in
jb
out
push
das
mov
jmp
mov
pop
dec
add
cmp
inc
pop
cmp
cmp
lds
popf
jge
sub
push
(bad)
mov
leave
mov
and
push
adc
jmp
ficom
call
aam
inc
or
fmul
mov
pop
in
fcmove
je
mov
push
dec
or
inc
cmp
xor
clc
fcom
nop
lock
clc
fisub
lods
sub
inc
xlat
push
mov
add
ret
retf
and
sbb
call
or
inc
fcom
add
cmp
sbb
or
or
mov
add
mov
and
movsx
or
fcomp
shl
test
dec
outs
js
jne
shr
cdq
pop
idiv
xor
mov
ds
clc
loopne
or
sub
adc
inc
inc
mov
(bad)
add
mov
push
sub
loop
jecxz
xor
or
inc
cmp
aaa
in
sbb
inc
sub
les
jnp
mov
or
cli
push
mov
stos
mov
out
inc
(bad)
pop
add
test
ds
pop
add
adc
jo
jp
cmps
add
add
inc
or
push
(bad)
push
push
or
leave
push
setne
xchg
push
pop
mov
and
pop
test
test
mov
jle
retf
pusha
push
push
out
or
das
mov
inc
or
xor
sbb
sbb
shl
mov
ror
fcom
sbb
loopne
in
push
dec
fld
mov
push
aad
or
jle
mov
cmp
push
inc
hlt
cdq
fcomp
or
adc
mov
mov
ror
cmps
jae
into
adc
cmp
ss
aam
add
sbb
push
lods
push
cmc
inc
loope
xchg
xor
sub
cwde
push
pop
or
inc
out
sbb
and
pop
jmp
mov
or
dec
or
pusha
pop
or
xchg
sub
xchg
stos
movs
lahf
pop
leave
and
inc
out
dec
lods
(bad)
xchg
dec
sar
jne
mov
adc
cs
sub
dec
ret
push
and
dec
ja
ret
mov
test
jne
adc
sub
xchg
and
mov
aas
adc
and
clc
es
xchg
sbb
mov
shr
or
rol
push
pop
push
add
call
in
shl
push
and
sbb
sub
call
push
sub
xor
fisttp
mov
inc
and
xor
test
xor
or
and
xor
(bad)
push
shl
sub
js
push
shl
jbe
push
push
jg
xchg
aad
dec
jp
push
or
dec
or
in
outs
cmp
ja
pop
popf
mov
push
test
cli
adc
mov
xchg
or
shl
xor
retf
mov
xchg
mov
jp
or
das
pop
rcr
fdiv
push
xchg
push
jmp
cmp
inc
(bad)
gs
pop
icebp
xor
mul
inc
push
fld
push
add
loopne
shl
pop
cmp
jne
in
push
in
xor
jp
or
sbb
mov
push
and
push
pop
mov
(bad)
(bad)
fwait
xchg
inc
cmp
jae
ror
adc
es
inc
add
or
inc
stos
ja
neg
sbb
not
and
mov
inc
adc
mov
and
shl
cmp
jecxz
or
adc
adc
xor
(bad)
mov
pop
rcl
and
outs
test
ret
popa
xlat
(bad)
out
test
jae
inc
add
mov
std
jbe
xchg
sbb
scas
je
ret
cmp
int
sar
inc
imul
(bad)
movs
mov
enter
inc
mov
dec
jb
xor
add
add
mov
push
pop
inc
push
dec
jb
add
pop
push
push
or
cmp
push
xchg
cld
inc
sar
not
add
lock
addr16
mov
or
mov
and
push
adc
add
stos
inc
push
xchg
jle
sbb
ss
pop
orps
daa
sbb
inc
push
inc
or
dec
int3
aas
push
push
es
aam
sahf
xchg
push
or
jle
clc
fsub
in
sti
(bad)
cmp
or
mov
push
ss
mov
adc
dec
hlt
pop
inc
hlt
in
fstp
dec
inc
or
sbb
stos
jno
cmp
ins
in
pop
cmps
or
mov
arpl
inc
les
int
mov
inc
sahf
or
fiadd
loopne
xor
or
dec
movs
push
jmp
xor
in
xchg
test
push
cmp
adc
neg
test
lahf
lock
push
inc
dec
or
adc
push
and
aas
retf
add
les
push
jne
xchg
cs
lods
or
fisttp
loope
mov
cmp
je
sbb
mov
jecxz
sub
pop
xchg
mov
mov
sbb
pop
idiv
push
movs
add
or
push
xor
cmp
ror
mov
push
out
inc
neg
add
cmp
ja
xor
jmp
ficomp
and
cdq
inc
add
scas
add
adc
aas
(bad)
leave
inc
mov
mov
jmp
xor
sub
enter
and
add
jl
stc
fwait
dec
cmps
sub
jge
add
out
add
add
add
lock
in
loopne
push
inc
enter
add
out
js
add
push
mov
push
cld
add
or
sbb
pop
or
cwde
dec
inc
xchg
adc
xchg
mov
neg
cmp
push
push
adc
xchg
sub
or
xchg
pop
adc
movs
in
call
inc
adc
scas
adc
pop
jge
pop
ins
test
mov
loop
je
dec
push
jmp
je
addr16
adc
push
lea
inc
dec
aas
mov
inc
inc
cs
sbb
test
sbb
add
icebp
sbb
or
sub
add
fidivr
(bad)
ins
pop
and
cmp
xchg
fisub
add
add
and
sub
lods
sbb
and
adc
sbb
or
sbb
pusha
test
and
mov
sub
sbb
js
adc
add
cmp
adc
pop
add
push
add
cmp
add
pop
out
call
icebp
or
cmp
dec
mov
mov
ret
cmp
push
das
xchg
add
pusha
adc
div
test
adc
or
pop
sub
dec
or
inc
sti
and
lea
mov
push
add
fbld
push
or
push
cmps
fadd
cmp
adc
inc
push
adc
in
xchg
xchg
sbb
sar
(bad)
rcr
ret
loopne
add
cmp
adc
jle
or
retf
add
add
rol
pop
xchg
or
cmp
push
jecxz
sbb
push
sub
dec
push
js
mov
push
call
mov
out
sahf
not
sbb
mov
xchg
not
pop
and
xor
jno
sbb
add
and
inc
jbe
mov
or
mov
push
ds
imul
sbb
jl
cmp
xor
clc
fistp
cmp
je
cmp
push
test
jne
imul
push
arpl
pop
dec
sbb
cmp
(bad)
clc
fiadd
ret
enter
push
adc
dec
repz
pop
jmp
call
(bad)
mov
je
cmp
ja
cmp
jbe
cmp
loopne
jle
pusha
or
inc
cmp
(bad)
mov
ret
mov
or
pop
dec
push
ins
add
push
jae
int
inc
pop
or
adc
ficomp
test
mov
mov
test
cmp
push
and
inc
push
call
mov
imul
jmp
xor
cwde
repnz
mov
jo
sub
hlt
push
arpl
jo
(bad)
sub
add
imul
nop
sbb
test
test
add
mov
mov
ins
xor
fsubrp
ins
test
arpl
shl
xchg
dec
push
sub
pop
pop
shl
sbb
std
mov
out
xor
dec
and
cmp
lods
ret
jmp
xor
mov
pop
jecxz
or
push
adc
add
rcl
or
xchg
repnz
or
pop
inc
(bad)
jo
mov
sbb
push
test
adc
xor
lock
and
jb
xchg
xchg
pop
mov
pop
jns
mov
jge
push
fisttp
push
jb
jmp
push
pop
mov
cmp
jae
out
loopne
xor
ret
div
fisttp
pop
cmp
push
ds
stos
jmp
fidivr
shl
dec
cld
mov
jo
jmp
push
dec
mov
inc
scas
(bad)
pop
ja
data16
or
dec
mov
sub
add
hlt
mov
mov
pop
jmp
adc
sub
enter
add
jne
bound
test
ror
push
push
mov
xchg
inc
mov
(bad)
mov
aaa
in
mov
clc
dec
jbe
push
repnz
push
ss
lods
and
jne
scas
jge
add
mov
mov
adc
or
out
push
out
xor
or
add
and
or
push
jecxz
(bad)
jmp
cmps
mov
rol
inc
jo
jnp
cmp
sahf
fist
sub
add
sub
add
add
xor
adc
outs
jmp
outs
mov
pop
or
mov
mov
outs
mov
inc
inc
outs
mov
push
xchg
or
pop
push
stos
sub
inc
adc
mov
and
repnz
adc
pop
ds
cmp
or
cmp
push
push
(bad)
jmp
or
data16
mov
call
sub
jl
loopne
cmp
je
push
int3
push
inc
xchg
int3
jp
pop
sub
sbb
xor
mov
cmp
js
int3
jne
test
ins
(bad)
jp
inc
ret
adc
sar
cmp
push
jo
into
add
icebp
jb
(bad)
push
imul
mov
dec
or
mov
add
cwde
and
mov
out
call
cli
pop
or
mov
sbb
jg
fnstenv
mov
mov
pop
xchg
test
or
imul
sbb
imul
xchg
and
out
adc
mov
pop
imul
and
ret
and
add
inc
adc
and
jne
aam
or
inc
push
sub
jbe
mov
inc
mov
add
js
fiadd
jne
mov
jmp
cmp
popa
jmp
jbe
mov
xchg
ret
adc
mov
inc
outs
pop
sub
mov
ret
adc
and
add
loop
ss
hlt
loope
jge
repnz
cmp
jmp
push
or
push
es
add
shl
not
and
or
cwde
add
jbe
in
jge
push
adc
pusha
cwde
push
mov
rcl
clc
out
js
lock
push
mov
pop
dec
imul
ja
xchg
je
call
inc
jmp
cmp
inc
and
add
xchg
ret
adc
push
inc
xchg
enter
in
mov
or
adc
inc
in
call
push
or
imul
hlt
aaa
push
and
adc
xchg
leave
stos
and
mov
pop
outs
aad
lods
dec
sbb
and
ja
mov
xor
data16
sub
in
ins
push
pop
shl
mov
or
jg
nop
or
jecxz
inc
push
popf
inc
inc
cmc
pop
sti
int3
pop
mov
into
and
inc
or
pop
and
push
or
mov
loopne
jns
pop
sar
mov
dec
sub
and
push
mov
mov
pop
mov
adc
or
inc
inc
call
xor
inc
xlat
arpl
inc
pusha
shl
or
fadd
(bad)
imul
lea
shl
loope
arpl
rol
in
mov
test
xor
cmps
xor
adc
push
jle
(bad)
jge
mov
sahf
push
add
scas
pop
rcl
xchg
add
add
sub
call
adc
fidiv
add
inc
mov
dec
adc
jg
(bad)
pop
pop
dec
shr
xchg
sahf
lahf
dec
xor
or
test
dec
fcmove
int
cmp
call
xor
shl
and
pop
fimul
push
inc
push
stc
cld
push
add
stc
xchg
cmp
push
mov
push
stos
cmp
and
and
and
xchg
jne
cmps
inc
push
sub
and
out
adc
jno
aaa
ins
inc
sbb
adc
lods
int3
lea
imul
js
or
pop
sub
mov
and
adc
and
shl
and
push
xor
clc
(bad)
into
dec
clc
xor
pushf
xor
imul
movs
in
dec
add
mov
and
or
xchg
sub
dec
push
push
test
adc
imul
sbb
xor
pop
call
adc
addr16
shr
sbb
push
inc
add
enter
push
or
sbb
addr16
adc
push
sub
(bad)
and
(bad)
(bad)
clc
push
xchg
add
adc
popf
or
mov
add
sub
cld
je
cmp
add
frstor
clc
pop
jo
xor
pop
rol
dec
fmul
jle
inc
dec
jmp
mov
and
test
dec
(bad)
rcr
jmp
add
repz
or
jmp
xadd
mov
fs
es
lods
sub
repz
pop
or
in
inc
inc
push
cmps
sub
bound
dec
cmp
or
dec
popa
je
xchg
and
pop
add
gs
add
or
les
shr
inc
adc
ret
ja
mov
sub
ja
mov
pushw
sub
sahf
adc
inc
loop
or
or
pop
pop
jne
sub
xchg
and
pop
adc
push
cmp
rcl
mov
xor
into
adc
sub
rcr
sbb
inc
mov
sub
inc
sub
adc
iret
add
push
push
mov
int3
mov
les
xor
or
cwde
jg
or
inc
adc
ret
mov
aaa
mov
mov
ret
ret
jbe
pop
aaa
out
sbb
or
cmp
jae
pop
and
or
inc
xor
int
adc
inc
out
retf
cwde
repnz
or
(bad)
inc
sti
sub
push
push
add
push
mov
sub
inc
test
mov
fstp
or
sub
sbb
lock
dec
or
add
push
inc
mov
ret
lea
aas
ja
(bad)
das
icebp
cld
nop
mov
jmp
mov
mov
in
push
imul
cmp
ret
imul
mov
out
jge
pop
pop
ret
(bad)
pop
adc
pop
lahf
jae
add
stos
cmps
pop
fstp
cmp
and
sub
pushf
push
sbb
dec
jmp
cld
pusha
sbb
sti
push
mov
pop
push
pop
pop
pop
push
and
xchg
sbb
sbb
and
jl
push
cmp
div
jl
push
push
add
pop
jmp
add
mov
push
xchg
jge
sahf
ficomp
add
enter
pop
mov
ret
xor
and
bound
into
neg
cli
jmp
mov
mov
inc
mov
sti
push
xchg
popf
inc
shr
push
cwde
dec
mov
mov
inc
aaa
pop
adc
retf
push
and
sbb
add
add
adc
fidiv
add
lock
pop
js
ret
scas
sbb
push
push
aaa
push
or
add
lock
push
pop
push
sbb
fsub
mov
or
jmp
jno
sar
and
lock
push
test
adc
add
push
cmp
je
and
pop
cmp
adc
ret
or
out
lea
xchg
and
test
dec
fstp
stos
aam
push
jmp
jbe
jne
cmp
add
cmp
je
in
push
add
fst
sub
cwde
mov
out
mov
(bad)
lock
push
jge
test
dec
lds
leave
or
test
and
call
sbb
out
clc
add
lock
sbb
mov
sbb
clc
clc
xchg
mov
xor
std
mov
cdq
push
ficomp
rcr
fsub
test
push
int3
lods
push
cmp
retf
(bad)
adc
lea
cli
mov
adc
int
adc
adc
mov
mov
sbb
adc
xchg
sbb
lea
xchg
pmulhuw
test
js
jle
xchg
outs
repnz
ins
sbb
adc
movs
push
jnp
or
push
add
aad
xor
xchg
call
daa
xchg
and
pop
leave
add
stos
add
(bad)
pop
adc
dec
add
mov
ss
sub
dec
cmps
push
cmp
push
loopne
cmp
xor
cmp
sub
and
jne
imul
add
cmp
or
adc
cmp
lahf
jbe
pusha
jns
ins
outs
lock
xor
adc
outs
out
sbb
jle
mov
pushf
mul
je
cmps
cmp
push
je
adc
jmp
adc
adc
push
hlt
sbb
and
cmp
xchg
ss
and
dec
es
and
pop
add
xlat
xor
inc
sahf
add
in
sub
xor
mov
adc
sbb
mov
in
jmp
je
mov
rcr
in
loopne
push
in
retf
stc
push
push
stos
mov
inc
loopne
dec
or
cmp
mov
pop
sub
mov
dec
jmp
hlt
clc
add
dec
jb
retf
cmp
rol
aad
in
add
push
(bad)
pop
dec
pop
mov
mov
adc
and
cmps
xchg
inc
cmp
dec
pop
outs
pusha
fdivr
adc
pop
pop
inc
xlat
dec
pop
cdq
and
add
dec
sub
push
sbb
adc
mov
pop
sbb
mov
inc
es
fild
or
mov
enter
lea
and
mov
mov
pop
inc
stos
xor
mov
inc
mov
cmp
into
out
add
aad
ret
pop
push
call
xor
adc
or
test
in
or
xchg
push
cmps
inc
je
and
smsw
aaa
cs
loop
sbb
rol
or
xor
pop
dec
adc
inc
stos
call
jg
cmp
loopne
mov
add
fmul
mov
arpl
push
loopne
enter
rol
lahf
add
dec
xchg
pop
xor
rol
cmc
repz
clc
movs
mov
lahf
ins
lods
add
jne
jg
push
jmp
push
pop
test
dec
je
popa
jl
das
and
mov
jmp
cmp
cmp
xchg
or
dec
ds
and
jg
xor
push
adc
dec
(bad)
jle
add
rol
add
lods
cdq
vunpcklps
and
add
and
scas
and
icebp
sub
(bad)
xor
aas
pop
mov
pop
in
sub
js
rcr
adc
in
and
sbb
sahf
sub
ficomp
(bad)
cmp
xlat
pop
add
mov
clc
popa
rcr
push
dec
sbb
add
rol
push
or
and
sub
rcl
pop
add
add
jmp
jne
xor
jmp
cmp
dec
cld
ds
mov
dec
lea
pop
push
pop
mov
mov
lea
stos
stos
stos
or
cs
imul
add
pop
push
or
adc
xchg
xchg
pop
shr
push
jae
jmp
mov
test
ss
(bad)
ret
cmp
sbb
sub
cmp
jae
add
jmp
mov
sub
cmp
in
imul
jae
dec
jmp
add
lods
mov
icebp
in
sub
sbb
test
jbe
pop
mov
rol
stos
dec
hlt
xor
pop
int
ins
in
jbe
sub
cmp
mov
sti
adc
cmp
aad
push
inc
repnz
jl
pop
push
push
lahf
jae
xchg
mov
cmp
rol
ss
ins
and
sub
loop
cmps
lock
push
mov
shl
push
cwde
add
push
push
push
frstor
cmp
pop
sub
sub
push
mov
add
dec
sub
inc
xchg
cmp
jne
jmp
jmp
adc
jge
enter
call
push
pushf
dec
pop
inc
and
jge
add
adc
mov
adc
mov
adc
or
les
and
sub
adc
inc
enter
loopne
xchg
cmp
enter
mov
jl
add
imul
rcl
popa
enter
or
jecxz
adc
es
inc
or
out
or
dec
and
imul
clc
adc
je
int3
cmp
inc
mov
dec
jmp
out
push
dec
in
push
push
jp
or
mov
add
enter
rol
imul
fwait
cmp
fld
aas
aaa
push
sub
dec
mov
inc
jmp
(bad)
jmp
push
push
pop
ins
test
mov
push
or
sbb
popa
push
iret
mov
push
ja
ret
push
movs
push
in
in
fdivr
inc
sahf
or
xor
mov
and
mov
adc
cmc
xchg
add
mov
sbb
int
inc
dec
jns
xlat
hlt
pop
cmp
in
inc
push
nop
pop
mov
stc
push
adc
pop
sbb
or
sti
mov
iret
sub
ja
push
push
push
jo
lods
gs
push
push
call
and
ret
jle
cmp
jbe
sub
call
and
push
inc
je
into
sbb
or
and
or
fs
mov
jmp
jae
into
sub
popf
xchg
sti
fst
cwde
imul
mov
mov
nop
xor
outs
dec
int3
cmp
pop
push
pop
sub
add
inc
pushf
mov
shrd
or
rcl
push
(bad)
ja
popf
mov
imul
loopne
mov
cs
mov
pusha
sar
scas
jb
shl
mov
cmp
je
cmps
in
cmp
jne
push
in
(bad)
into
xor
inc
call
push
mov
gs
repnz
hlt
movsx
mov
and
jne
mov
std
xchg
cmps
jbe
movs
movs
cmp
je
cmp
add
mov
mov
adc
push
dec
cmp
jne
push
and
or
sbb
and
daa
and
outs
rcr
pop
and
sub
push
and
push
xchg
imul
ficomp
test
mov
add
mov
pushf
and
(bad)
aas
loopne
xor
fiadd
inc
pop
pop
pop
jbe
xchg
pop
clc
sub
fisttp
cli
sbb
cmp
jae
push
sub
xchg
(bad)
outs
imul
push
cmp
jne
xchg
ret
mov
push
push
and
push
sbb
rol
sub
dec
push
es
sbb
cmp
jle
cmp
inc
movs
and
loop
sbb
inc
sbb
dec
pop
cmp
xor
in
jbe
loopne
in
js
dec
call
popf
(bad)
sbb
inc
dec
cmps
inc
and
mov
sbb
dec
cmp
adc
mov
imul
or
cmp
adc
lds
in
mov
(bad)
pusha
clc
push
push
jl
xchg
mov
add
and
call
pusha
aam
test
xor
sbb
push
and
push
cwde
sub
mov
push
imul
pop
xor
fmulp
inc
xor
or
xor
int
cmp
and
aas
cmp
push
inc
adc
rcr
test
or
sbb
inc
cmp
sbb
or
scas
mov
sub
mov
fisttp
push
mov
dec
add
movs
mov
mov
retf
or
cs
xor
adc
sub
xchg
(bad)
test
rcl
leave
inc
loopne
ret
movs
les
and
push
cmp
add
lods
mov
cmp
je
cmp
jne
nop
jge
inc
xor
lock
bound
fdivr
mov
in
cmp
popa
out
je
and
sbb
repz
inc
mov
lock
mov
sub
inc
push
add
sbb
sub
daa
dec
ret
pop
add
fdiv
add
mov
sbb
mov
sub
push
ror
fist
in
je
push
adc
in
inc
or
out
pop
stos
push
push
jne
add
arpl
jns
and
jbe
jle
dec
and
jg
test
jb
mov
xchg
mov
lock
fsub
and
(bad)
ins
adc
mov
bound
add
or
inc
in
movs
xor
shl
adc
push
lea
mov
fld
push
ss
fsubr
mov
cmp
add
test
or
and
pop
or
mov
outs
pop
add
dec
pop
push
sbb
ins
and
inc
inc
and
sub
sbb
icebp
and
add
push
adc
jle
les
and
add
cwde
sub
aad
pop
cmp
mov
movs
or
adc
repnz
and
xor
xor
ss
dec
sub
enter
retf
xor
jo
or
std
inc
inc
xor
bound
sar
sbb
lock
iret
(bad)
push
jecxz
(bad)
test
daa
jecxz
in
mov
mov
adc
js
out
sbb
rol
jmp
xor
inc
dec
test
and
(bad)
mov
inc
or
jne
sbb
mov
push
imul
out
inc
xchg
add
jne
movs
jp
jo
loopne
(bad)
sbb
lea
sbb
jo
cmp
test
out
xchg
adc
sub
hlt
out
mov
sub
mov
adc
(bad)
add
clc
mov
retf
pop
imul
mov
jl
mov
inc
addr16
pop
push
test
hlt
mov
clc
addr16
and
dec
into
add
dec
jne
pop
mov
(bad)
jmp
jnp
xor
cmp
sbb
jbe
adc
add
dec
push
ret
rol
pushf
cmp
imul
pop
add
sbb
mov
adc
je
mov
lock
(bad)
into
push
stos
lahf
hlt
cmp
dec
lods
adc
adc
adc
dec
test
mov
xor
sete
mov
mov
push
mov
cld
rep
or
adc
out
or
popf
mov
xchg
inc
adc
call
sub
inc
xchg
pop
cmp
adc
push
pusha
xchg
sub
retf
push
ret
cld
(bad)
mov
in
inc
xor
adc
jae
and
push
adc
mov
push
jmp
dec
jecxz
pop
or
jp
xor
push
test
std
and
mov
mov
gs
add
and
xor
sbb
fs
and
dec
sbb
shl
xor
rol
ja
js
mov
mov
in
pop
push
mov
(bad)
jmp
pop
das
add
stc
push
pop
cmp
stos
push
rol
jg
cmp
fucom
pop
mov
rol
pop
fwait
popf
mov
mov
fmul
fucomp
fnstsw
test
mul
loopne
jnp
rcr
leave
mov
mov
pop
add
loopne
add
pop
fsubr
ds
inc
and
ror
fstp
jmp
cmp
jg
pop
pop
jae
fdivr
add
push
fcom
mov
fstp
fxch
add
mov
out
sbb
jl
jne
and
inc
sub
adc
(bad)
fld
je
loopne
je
out
fcomp
sbb
pusha
push
es
hlt
jae
mov
les
daa
push
push
mov
jge
aad
mov
inc
jmp
pushf
loope
jo
xor
test
hlt
je
popa
ret
aad
push
clc
add
loopne
lock
or
loope
sub
push
sub
pop
add
push
or
dec
xchg
dec
add
cld
leave
cmp
jae
pop
clc
test
xor
and
push
push
enter
sbb
pop
adc
add
pop
repnz
outs
arpl
dec
lock
push
pop
xchg
popa
test
lock
mov
rol
popa
adc
push
rcl
icebp
cs
test
adc
add
and
dec
xor
add
sbb
je
add
and
mov
push
or
into
add
pop
pusha
shr
push
xor
inc
xlat
sbb
call
mov
or
fscale
add
mov
sub
mov
sbb
xor
xor
xor
sbb
mov
mov
sbb
je
sbb
ret
pop
dec
sti
call
rol
mov
xchg
add
xchg
jo
imul
sar
dec
jne
icebp
jle
add
xchg
xchg
lock
or
lock
neg
push
(bad)
push
std
or
jecxz
pavgb
push
dec
adc
add
jge
hlt
fistp
and
bnd
jns
cwde
push
dec
push
adc
or
xchg
test
call
or
dec
cmp
pop
fmul
test
mov
enter
add
test
inc
sbb
inc
out
cmps
(bad)
(bad)
das
loopne
mov
mov
adc
inc
rcr
jmp
rol
adc
cmp
adc
loopne
mov
daa
shl
add
lods
lods
sub
sub
inc
xchg
mov
(bad)
or
mov
xor
lods
dec
aaa
mov
fsubr
retf
(bad)
mov
fdiv
stos
stos
icebp
push
inc
inc
dec
cmp
sbb
or
xchg
stos
pop
cld
mov
cmp
inc
inc
ds
lea
mov
push
dec
sub
push
cdq
int3
mov
in
dec
xor
xor
test
cmps
call
fcom
rcl
lds
add
cmp
xchg
mov
sub
test
add
mov
movs
xor
out
and
push
jg
scas
or
push
shr
or
repz
jb
cmp
mov
cmp
mov
cmp
push
outs
or
ret
pop
test
fldcw
inc
out
call
sbb
test
in
call
inc
or
and
cmp
dec
adc
jle
sub
mov
test
xchg
loopne
and
int3
popa
add
mov
add
and
mov
les
dec
ret
and
popf
xor
mov
sbb
mov
mov
sbb
mov
movs
pop
mov
(bad)
(bad)
jmp
mov
xchg
push
jmp
pop
sar
sahf
dec
sub
stos
inc
add
mov
loope
enter
loop
xchg
(bad)
f2xm1
call
lahf
mov
xor
add
cmp
scas
imul
es
inc
ins
or
pop
idiv
mov
adc
ja
or
ja
add
mov
ror
inc
or
ins
xor
or
fistp
cld
(bad)
pop
push
add
push
push
jg
push
jmp
push
ret
adc
mov
loopne
loope
cdq
cmp
lea
pop
xchg
xlat
and
inc
daa
xchg
push
inc
add
div
sbb
xor
leave
push
(bad)
push
int
adc
repnz
(bad)
jno
cmp
movs
add
adc
and
sbb
jl
xor
sbb
jns
mov
add
sub
push
or
mov
fcomp
pop
adc
pop
retf
add
call
pop
mov
icebp
adc
jbe
je
not
cmp
sbb
jecxz
loopne
ins
xor
mov
push
dec
sbb
mov
and
xor
sbb
ror
rcr
xor
jae
add
fcmovb
sub
xchg
add
push
and
push
cmp
aaa
stc
mov
cmp
push
int3
sbb
dec
pop
clc
sub
cmps
inc
fsub
pop
clc
dec
push
je
call
int3
inc
sub
mov
in
push
stos
ins
and
call
xchg
dec
or
mov
push
sar
dec
or
push
cmp
jle
mov
ret
cmp
or
push
inc
pop
inc
add
lds
int
inc
icebp
and
or
dec
les
push
jmp
rcr
and
add
(bad)
fiadd
inc
mov
pop
movzx
bound
fnsave
imul
push
dec
cmp
mov
cs
add
or
ret
sahf
dec
pop
adc
add
sar
cwde
aaa
add
js
mov
adc
dec
js
and
adc
mov
sub
aad
adc
test
mov
or
sbb
cmc
sub
xchg
and
push
mov
jle
push
add
and
movs
out
pop
cwde
add
je
jns
pusha
hlt
mov
cmp
rol
push
adc
cmp
push
jne
xchg
retf
and
pop
inc
(bad)
inc
mov
add
sar
sar
adc
sub
jo
retf
loopne
add
out
outs
mov
aam
inc
mov
(bad)
sbb
mov
add
cmc
adc
adc
sahf
lds
adc
pusha
jb
adc
cmp
xchg
dec
push
bound
sbb
nop
retf
stc
bound
xor
push
adc
cmp
bound
push
(bad)
cli
enter
rcl
sub
leave
and
add
ret
sub
mov
xchg
add
add
(bad)
sbb
jnp
sub
(bad)
aad
daa
arpl
sub
aas
rcr
arpl
xchg
add
sbb
cmp
gs
nop
add
sbb
sbb
(bad)
cli
sbb
and
cmp
push
std
sbb
xchg
inc
pop
arpl
enter
and
aad
pusha
xadd
cli
fs
sbb
mov
das
enter
xchg
adc
push
inc
and
sub
sbb
sbb
adc
cmp
and
in
adc
xchg
add
es
loop
and
enter
mov
mov
sbb
or
pusha
and
add
add
jnp
pop
add
daa
mov
jmp
xchg
or
fcom
dec
and
add
inc
dec
out
addr16
pop
fcomp
cmp
jle
fild
fdiv
movs
add
pop
mov
cmp
inc
or
out
add
in
pop
leave
pusha
xchg
xchg
add
mov
mov
sbb
or
shr
pusha
inc
sub
dec
loopne
out
ficomp
hlt
jb
push
add
sub
jp
lahf
in
pop
sbb
mov
sub
push
or
xor
sbb
int
and
aas
cmp
jb
xor
loope
xor
outs
loopne
push
push
fs
mov
cmp
adc
and
inc
shl
je
clc
js
pop
div
add
or
int3
push
aad
fisub
aam
rcr
es
jns
cwde
push
sbb
dec
movs
data16
inc
in
pushf
or
or
push
lods
fsubr
(bad)
mov
and
(bad)
or
add
jge
xchg
jns
add
loopne
sub
fs
jge
fadd
adc
or
mov
in
jno
jmp
popa
ror
dec
push
sub
stc
ins
stos
test
pop
and
jmp
xlat
push
dec
call
xchg
int
xor
loop
fs
sub
or
jg
cld
jo
push
setae
inc
aam
xor
inc
adc
mov
sub
mov
cmp
test
mov
into
int
pop
or
push
adc
cmp
pop
inc
xor
and
jns
jnp
adc
xchg
dec
in
cdq
sub
add
xor
mov
jmp
or
push
mov
push
dec
adc
je
add
mov
add
lods
mov
imul
stos
ins
(bad)
shl
in
add
xchg
popa
out
ins
movs
test
shr
and
inc
dec
jne
retf
out
push
enter
into
mov
lock
ror
dec
rol
push
cmp
lods
mov
cld
dec
std
add
aad
inc
and
loope
xchg
cmps
or
or
sub
jmp
scas
shr
push
or
ret
hlt
pop
pop
je
add
mov
ret
lock
cmp
sbb
add
adc
cld
adc
adc
ret
jl
popa
xchg
mov
add
dec
iret
iret
inc
ja
retf
shl
call
les
sbb
xchg
inc
clc
xor
adc
das
push
sti
xor
stos
sbb
sbb
xchg
rcl
mov
rol
cli
add
push
and
enter
cli
or
inc
(bad)
jge
sub
adc
push
shr
sbb
mov
inc
ret
xchg
retf
rcl
and
outs
add
add
mov
adc
and
add
mov
adc
movs
lock
sahf
and
rol
in
push
add
pop
pop
sbb
lock
jbe
shl
push
jno
das
outs
push
data16
test
ret
jge
push
mov
es
jmp
or
inc
xor
inc
inc
cmp
jne
mov
rol
sbb
and
shl
retf
shr
mov
lods
shr
sub
mov
and
add
push
ins
imul
inc
out
repnz
push
out
fimul
mov
in
cmc
and
mov
aam
mov
pusha
jle
or
mov
jl
push
push
pop
sub
xchg
xchg
jmp
push
pop
sub
push
lea
push
mov
pop
add
outs
push
mov
fsub
adc
and
push
adc
loopne
push
call
cmp
sbb
mov
and
lea
dec
daa
xchg
out
push
sbb
adc
add
sti
inc
cmp
jl
in
pop
or
adc
dec
in
cmp
scas
sbb
mov
cmp
inc
inc
arpl
int3
test
lea
mov
sub
add
mov
cmps
inc
jmp
and
push
push
cmp
jno
mov
push
mov
push
xor
jb
inc
and
add
jne
mov
dec
call
cmp
mov
jo
pushf
and
inc
in
mov
push
sbb
enter
fadd
jnp
pusha
rol
(bad)
jno
ret
lahf
es
push
shl
dec
add
and
push
sub
in
and
sub
dec
mov
mov
sub
and
fmul
cdq
push
popa
ret
loopne
jg
or
jo
mov
push
shl
cmp
jecxz
push
push
popf
inc
and
test
data16
pop
pusha
sub
daa
and
fsubr
mov
shl
push
jo
mov
xchg
sub
and
add
add
and
mov
push
push
rcl
lock
imul
jbe
mov
shr
mov
add
push
sub
pop
xlat
dec
leave
rol
movs
leave
mov
mov
shl
ins
retf
and
lock
mov
and
(bad)
stos
rcr
fld
retf
add
mov
xchg
enter
lock
movs
sbb
add
(bad)
inc
jg
push
push
ror
jo
jmp
leave
jg
push
dec
sbb
retf
movs
sub
push
and
mov
add
cwde
jl
and
mov
pop
aad
nop
sub
push
pop
mul
seto
neg
or
push
popa
fstp
stos
popf
xor
or
adc
add
in
cmp
popf
jo
or
daa
jge
jne
popf
sbb
das
dec
push
jne
popf
adc
es
and
cmps
ret
xor
or
mov
sar
ror
test
jo
push
or
aam
lahf
xor
rcl
call
fdiv
adc
test
arpl
sbb
xor
xchg
mov
push
xchg
jbe
fadd
fs
sub
cmp
push
nop
call
add
and
daa
(bad)
pop
pushw
test
pusha
inc
ja
loope
push
xor
(bad)
mov
test
jmp
mov
inc
mov
jnp
retf
out
sbb
push
jle
mov
popa
adc
adc
ror
lods
xor
and
lea
push
mov
dec
stc
pop
dec
popa
jae
jae
cmp
je
or
push
cs
jle
dec
add
push
jmp
call
jle
sar
push
lea
and
pop
popf
ja
push
jnp
push
icebp
sbb
jmp
add
(bad)
mul
mov
push
inc
pop
pop
xchg
adc
mov
sbb
stos
push
cmp
cwde
mov
cmp
push
cmp
mov
mov
add
(bad)
in
or
cli
sub
fimul
adc
push
xor
jl
or
outs
das
test
add
aam
cmp
xor
jmp
pushf
pop
xor
push
xor
shl
clc
xchg
scas
and
push
std
or
test
(bad)
int
add
(bad)
jp
xor
or
inc
dec
dec
popf
xor
or
add
inc
add
rol
inc
inc
dec
jl
cmp
dec
sbb
mov
popf
test
adc
das
and
and
mov
in
or
cmp
lea
test
add
cmp
in
cmps
lds
jno
enter
or
add
xor
push
add
iret
xor
mov
mov
loope
stc
pusha
or
sbb
arpl
inc
cmp
add
add
sti
or
add
cmp
jb
adc
cmp
scas
(bad)
mov
add
dec
cld
je
inc
adc
imul
jno
push
cmp
jae
jo
(bad)
ja
ja
xor
inc
sub
add
cmps
pushf
std
add
push
rol
jmp
adc
xor
sbb
sbb
call
es
lea
lea
stos
dec
xor
aad
push
ror
pop
xadd
daa
or
cld
push
pop
sbb
(bad)
sbb
sbb
test
fadd
fadd
jmp
test
pop
inc
xchg
sub
adc
loop
int3
add
add
sbb
sub
add
mov
sbb
push
push
cmp
addr16
leave
jl
or
jge
sbb
ror
jae
or
in
popf
pop
movs
inc
mov
int
inc
leave
fs
sub
shr
and
imul
fimul
jecxz
sbb
push
inc
push
fbstp
aad
inc
loopne
mov
dec
leave
pop
mov
pop
pushf
adc
cld
inc
inc
dec
add
mov
or
test
xor
pop
sbb
jmp
and
ret
push
push
retf
cmp
xor
add
push
call
js
mov
or
dec
pop
jge
leave
aad
add
jmp
enter
daa
push
(bad)
mov
sub
inc
push
and
sub
push
dec
pop
and
or
mov
push
leave
jge
jge
pusha
lahf
or
push
push
popf
push
adc
shl
call
or
push
jo
ret
or
lods
add
pop
push
dec
adc
jbe
xor
lock
mov
lea
push
push
les
stos
sub
jmp
cmps
mov
out
ret
add
enter
jg
or
xchg
push
jge
jge
sbb
xor
add
add
push
js
xor
test
jge
dec
jle
je
cli
cmp
maskmovq
test
and
xlat
mov
push
xchg
inc
or
add
mov
push
vprotq
pushf
test
lea
test
xor
lods
add
sbb
jne
aaa
add
or
and
icebp
movs
imul
and
or
jb
sbb
inc
dec
and
dec
daa
mov
mov
adc
imul
xor
sbb
pushf
in
or
jnp
jge
sub
in
add
movs
mov
jns
movs
xor
xor
(bad)
(bad)
ror
ins
popf
imul
xchg
and
xor
pop
add
test
xor
adc
add
stos
cs
int3
sbb
imul
adc
dec
mov
les
lods
add
xchg
in
pushf
mov
icebp
lock
movs
push
inc
pop
pop
test
push
pop
je
scas
mov
aam
dec
cmp
push
cmp
ffreep
push
test
cwde
movs
jb
retf
call
cwde
call
mov
test
xchg
pop
mov
shl
mov
sbb
jge
mov
xchg
sbb
pusha
adc
pop
or
jnp
fiadd
xor
test
call
ret
mov
retf
cmc
sbb
jl
cld
mov
mov
loopne
femms
and
adc
push
inc
push
xor
push
or
pop
push
or
call
xchg
or
cmp
or
jge
jne
cmp
loopne
jb
sub
sar
call
add
test
sbb
sbb
cmp
movs
inc
dec
mov
jae
pushf
or
test
push
test
jmp
mov
or
pop
dec
and
fistp
inc
jae
ror
jo
mov
aad
xchg
mov
xor
dec
pop
jmp
sub
adc
es
add
aad
xor
adc
add
leave
loopne
cmp
add
stc
xchg
cmps
dec
fild
xchg
add
inc
fucomp
mov
sbb
adc
aas
jecxz
push
pop
push
ds
ja
fdiv
adc
cmp
dec
ret
sbb
or
mov
or
sar
mov
or
mov
ret
les
xchg
cmp
je
push
cmp
add
jl
xor
pop
jne
xchg
xchg
mov
dec
loop
int
sbb
sbb
mov
fbld
jae
mov
mov
repz
push
mov
mov
daa
push
push
test
jno
fistp
or
push
hlt
add
jbe
sahf
push
cmp
sbb
sub
(bad)
outs
lock
icebp
loope
out
cmp
je
inc
hlt
cmp
fwait
mov
push
clc
nop
jl
xor
dec
xor
and
cld
jl
jo
mov
movs
mov
jp
lock
push
(bad)
cld
xor
or
inc
fcmovbe
inc
jae
mov
jb
in
(bad)
jmp
jb
inc
push
cmp
push
into
mov
movs
push
pop
mov
fsub
fsub
add
sbb
fsub
dec
(bad)
dec
hlt
push
inc
fldenv
lods
cli
xor
cmp
jne
push
jne
or
fldcw
loope
loopne
pusha
mov
inc
dec
add
int3
scas
jne
lock
stos
add
int3
inc
mov
mov
mov
call
mov
xchg
push
add
inc
loopne
ja
push
mov
pop
daa
retf
rol
aaa
dec
ret
inc
jae
std
test
mov
sbb
inc
das
push
push
rol
xor
in
test
pop
dec
in
in
push
leave
or
shr
jl
ss
xor
leave
mov
mov
cdq
cmp
test
sbb
cld
cld
test
test
add
hlt
bound
jo
call
or
xor
or
inc
and
dec
mov
inc
cmovge
adc
inc
in
bound
push
mov
adc
cmovs
xor
ds
xchg
and
aam
shr
push
call
popf
ss
pop
mov
mov
pop
rol
inc
or
push
mov
fnstenv
mov
push
inc
add
js
or
or
cmps
inc
or
xchg
or
or
add
stos
or
in
or
xchg
add
add
inc
push
add
pushf
les
adc
or
or
or
xor
and
or
jle
cli
lea
dec
push
mov
adc
icebp
aaa
pop
clc
jle
cmc
ret
shr
sbb
sub
sbb
jbe
cmp
addr16
iret
je
in
pop
es
add
jbe
es
sbb
mov
mov
int3
call
stos
test
dec
push
dec
dec
stos
jno
out
lock
hlt
and
je
mov
rol
or
jb
outs
cmp
scas
sub
fsub
or
add
call
push
add
lock
inc
jb
or
or
and
or
call
movs
imul
movs
inc
es
aam
or
(bad)
in
call
add
lods
mov
add
leave
push
jl
sbb
mov
(bad)
xor
sbb
xor
inc
cld
add
or
inc
repnz
cld
push
cld
jb
mov
aad
movs
mov
neg
ins
mov
cld
pop
mov
mov
add
mov
xor
pop
mov
(bad)
or
xchg
dec
jns
int3
sub
inc
or
add
or
dec
push
adc
jnp
clc
xchg
jns
add
mov
push
cwde
sbb
popa
fs
ja
pusha
stos
(bad)
inc
jno
daa
test
and
int3
imul
add
pushf
or
push
push
add
mov
test
push
lea
mov
test
adc
and
inc
xor
cmp
jl
mov
mov
add
mov
or
push
push
lea
push
dec
dec
popf
or
ror
sbb
cmp
pslld
and
push
sahf
add
pop
mov
pop
mov
test
movs
movs
cmp
iret
inc
js
rol
xchg
xchg
pop
sub
or
and
mov
data16
std
das
xchg
fcom
movs
or
loopne
loopne
movs
cmp
pop
(bad)
ror
push
shr
sub
and
into
or
jne
sub
movs
and
jns
addr16
test
inc
push
add
dec
pop
jnp
sub
xchg
sbb
fcom
pushf
int3
aaa
sbb
and
fs
inc
cmp
jp
pop
(bad)
(bad)
adc
je
pop
sub
fild
push
in
mov
mov
test
sub
fwait
inc
mov
out
push
ret
dec
and
cwde
sbb
pop
xchg
nop
sub
cmp
push
dec
es
lock
loope
dec
and
cmp
jmp
sub
lock
sbb
mov
dec
mov
sbb
xchg
movs
pop
pop
push
push
jg
je
test
movs
jnp
(bad)
out
psraw
icebp
sbb
outs
mov
dec
mov
daa
loopne
outs
xchg
xlat
loopne
sbb
aam
fs
push
inc
inc
aaa
sbb
cwde
test
repnz
add
xchg
in
mov
nop
retf
fadd
add
lods
add
mov
shr
nop
adc
loope
js
sbb
push
ins
or
jmp
imul
jmp
ret
xchg
add
jge
push
das
mov
dec
sub
test
imul
push
mov
fisttp
push
cmp
mov
xor
cmovnp
mov
fdiv
pushf
aam
jl
cdq
js
sub
inc
and
fsub
dec
inc
shl
call
ret
xchg
ret
rol
mov
cli
add
enter
add
imul
ficom
push
mov
or
cld
or
scas
outs
stos
cmp
adc
or
std
fadd
out
sbb
movs
push
adc
sub
pop
xor
lods
add
scas
inc
mov
pop
cmp
push
and
pop
xor
jmp
idiv
stc
push
mov
ds
jle
jle
cmp
fld
mov
mov
es
pop
sub
add
out
sub
sbb
mov
in
dec
mov
rol
mov
pop
call
pushf
push
pop
mov
jae
or
push
and
add
push
mov
push
or
pushf
adc
cmp
stc
sbb
or
pop
mov
push
sub
(bad)
adc
mov
push
or
xchg
(bad)
mov
hlt
or
jne
test
add
vorpd
add
sbb
pop
sbb
enter
sbb
call
push
push
(bad)
pop
push
push
mov
jmp
add
inc
fisubr
push
push
shr
cld
cmps
lahf
sbb
stc
sbb
sbb
push
and
sbb
sbb
or
cwde
inc
pushw
mov
cmps
out
push
(bad)
push
add
jge
ins
jne
push
aad
test
mov
punpcklwd
mov
stc
cmp
pop
mov
and
or
sbb
aad
imul
mov
push
aas
nop
dec
mov
mov
or
adc
and
add
sbb
(bad)
nop
dec
add
mov
fist
cwde
and
add
pop
(bad)
aaa
mov
enter
lock
or
xor
push
lock
push
out
xor
or
(bad)
es
jmp
ret
jmp
or
loope
mov
pop
ret
mov
inc
jnp
outs
movs
hlt
frndint
add
jle
loopne
je
fcmovnbe
or
inc
rcl
movs
mov
or
mov
cmp
push
imul
movs
sahf
clc
out
aas
(bad)
loopne
or
test
sub
dec
or
or
inc
test
mov
retf
push
and
add
ret
mov
imul
es
mov
inc
data16
add
push
hlt
test
into
jmp
add
pop
dec
dec
push
inc
xlat
jp
hlt
or
push
test
in
sub
push
xor
arpl
mov
xchg
push
test
add
sub
and
inc
out
xchg
outs
in
rcl
add
mov
and
add
and
and
mov
mov
mov
jp
or
adc
push
cmovo
mov
and
in
mov
sbb
daa
dec
in
push
xchg
iret
test
ds
popa
scas
dec
repnz
call
imul
dec
or
vdivps
les
ror
mov
sub
and
bound
cld
fisub
push
sbb
test
int
or
je
adc
je
push
jmp
outs
in
push
or
jecxz
outs
sub
sbb
cmp
jge
mov
push
add
inc
push
or
sbb
push
je
shl
sub
jns
js
dec
adc
and
adc
int3
ja
mov
sbb
mov
mov
test
add
test
adc
lock
aas
push
mov
push
cmp
jae
dec
movzx
lea
jne
sbb
pop
adc
and
and
les
cs
cwde
jg
shr
inc
mov
push
push
popa
and
ret
leave
pop
retf
jns
fnsetpm(287
add
stos
pop
shl
or
push
dec
inc
mov
es
pop
aaa
(bad)
cmp
les
or
inc
push
les
out
add
add
jns
nop
repz
inc
test
push
pop
xchg
or
mov
lahf
dec
xor
and
loope
push
push
pop
push
outs
shl
sti
and
test
popf
mov
mov
shl
and
add
js
jmp
mov
call
(bad)
sub
push
jmp
pop
pop
or
xor
ins
or
inc
cld
ins
sub
test
sbb
or
jno
(bad)
xor
lods
xor
aad
pop
lock
es
pop
je
fild
mov
adc
pop
sub
jle
or
dec
les
rcl
jmp
movs
mov
cmp
test
jmp
test
fld1
inc
dec
push
jmp
das
movs
(bad)
xchg
mov
shl
int3
pop
outs
sub
mov
cli
dec
cmps
and
shl
inc
repnz
ret
fsub
sahf
dec
push
sar
ror
xor
jns
cwde
add
loop
sbb
ror
sub
fwait
add
xchg
hlt
bound
fwait
arpl
sbb
fadd
std
and
cmps
scas
push
push
lods
pop
mov
inc
push
(bad)
(bad)
push
shl
push
push
out
push
add
dec
sbb
fwait
dec
daa
sar
je
je
jg
jp
sub
sub
inc
push
rcl
int3
xor
es
scas
sub
mov
add
test
jb
mov
or
jmp
dec
shl
adc
cmp
jb
jnp
ror
sbb
sbb
in
dec
repz
jg
in
xchg
or
jl
fadd
xchg
stc
xchg
add
stc
push
jb
cmps
pop
sub
sbb
fadd
sub
cmps
cmps
rcl
loop
inc
ss
xchg
sbb
icebp
adc
pop
add
jge
not
sub
mov
or
int
push
pop
retf
mov
hlt
and
or
sub
addr16
ret
jnp
add
repnz
int
cdq
and
sbb
push
sub
mov
retf
adc
outs
shl
jmp
dec
sbb
aam
(bad)
inc
in
ja
je
push
dec
sub
dec
sbb
and
sbb
cmp
cmc
and
xlat
mov
cld
(bad)
movs
lea
(bad)
jle
and
cmp
mov
mov
mov
outs
jle
test
push
popf
icebp
and
ins
push
add
imul
pop
mov
adc
adc
pop
push
pop
popf
add
test
adc
add
aas
add
aam
sub
ss
cwde
pusha
dec
push
mov
and
out
test
stos
add
cmp
sub
call
in
xor
cmp
jne
push
push
fiadd
jae
lea
lods
fcomp
pop
mov
or
repz
mov
jno
test
xchg
lock
xor
lods
jns
test
pushf
pop
rol
imul
or
sub
adc
xor
sub
cmp
xlat
cmp
cmps
lds
loope
xchg
and
dec
add
out
jbe
adc
jle
sbb
inc
push
adc
and
add
(bad)
sbb
adc
fldcw
cmp
rol
cdq
cmps
enter
loopne
push
aad
pop
imul
dec
cmps
inc
ret
ret
dec
test
repnz
xchg
mov
xchg
push
push
mov
add
push
add
test
dec
(bad)
mov
pop
and
push
cld
rcr
ficom
sub
inc
jl
jno
in
fisubr
(bad)
dec
push
add
fild
shr
pop
dec
sbb
mov
enter
icebp
push
jns
call
sbb
cmp
or
jae
in
in
or
xchg
out
loopne
or
mov
out
test
inc
push
add
xor
adc
adc
and
call
sub
dec
mov
cli
inc
mov
mov
iret
cs
jle
sbb
cmc
inc
sub
mov
jge
aam
push
not
add
rcr
repnz
ss
dec
sti
lea
cli
mov
or
stos
fsub
xchg
sti
dec
xchg
xor
or
inc
aaa
iret
cmp
inc
inc
rcr
add
dec
fiadd
xor
add
mov
and
inc
shl
or
jecxz
sbb
push
lea
(bad)
(bad)
pushf
add
lods
add
cmp
add
pusha
mov
mov
sahf
into
dec
sbb
rcl
or
sub
mov
adc
mov
or
stos
data16
cld
jl
add
xchg
adc
push
clc
dec
sbb
cmp
(bad)
jne
inc
aam
into
je
dec
push
add
dec
jne
push
push
adc
and
pusha
push
popa
shl
in
fild
mov
jmp
cmp
push
push
popa
and
adc
ret
stos
loopne
cmp
xchg
mov
add
add
inc
xchg
stos
inc
pop
inc
add
jne
jb
aaa
punpcklwd
push
or
cmp
and
fcom
mov
stos
xor
pop
inc
sbb
mov
xchg
inc
mov
sti
js
rol
mov
or
hlt
imul
test
mov
hlt
lea
add
les
or
jo
push
arpl
add
push
pop
cmps
inc
or
lods
push
test
and
mov
push
jo
ins
(bad)
leave
xor
pop
push
call
shl
dec
add
mov
ret
xor
xchg
pushf
xor
mov
icebp
inc
dec
cld
xchg
nop
mov
push
mov
mov
jne
pop
jo
ret
sbb
add
xchg
push
sbb
pop
xor
jne
xchg
jns
push
bound
nop
sub
adc
add
mov
pop
mov
arpl
cmp
or
mov
sahf
test
fdivr
push
push
dec
cmp
or
xchg
loopne
push
or
adc
inc
push
inc
ror
inc
dec
add
inc
cdq
sub
sar
and
aam
(bad)
pop
sar
push
(bad)
mov
je
dec
pop
js
les
stos
jle
cmp
movs
je
xchg
add
mov
push
nop
in
mov
add
sbb
xchg
aam
lods
sbb
sbb
adc
mov
stc
stos
in
add
fmul
jb
push
popa
jmp
mov
sbb
in
mov
and
xchg
lods
pusha
cmp
enter
xor
(bad)
xchg
and
(bad)
je
mov
or
pop
xchg
cwde
push
pop
mov
dec
push
sbb
jns
adc
push
in
lods
xor
add
sub
and
xchg
mov
jne
mov
push
push
rcr
int
fcom
add
test
adc
xchg
dec
cmp
add
je
movs
dec
cwde
push
jbe
push
and
cmp
fnstcw
sub
cwde
fsincos
xchg
cmps
lea
cmp
sbb
xor
xchg
rol
or
sub
mov
shr
add
sub
data16
shr
idiv
push
enter
in
mov
dec
dec
and
mov
dec
ins
call
add
mov
pop
bswap
dec
xchg
push
fmul
push
lea
rcr
cmp
je
cmp
call
adc
push
sub
inc
sbb
pop
(bad)
push
cwde
scas
and
cwde
inc
repnz
jmp
mov
rcr
scas
aam
out
loopne
jp
push
outs
jmp
or
ret
ds
rol
mov
dec
sbb
push
xchg
ret
repz
dec
repnz
sub
jb
xchg
int
pop
inc
outs
les
push
jne
mov
push
push
ror
mov
and
jo
mov
fst
add
or
mov
les
rcr
in
dec
loopne
cmp
dec
push
loop
inc
or
outs
add
and
add
aaa
sbb
pusha
add
mov
fisubr
ficomp
jo
push
xchg
inc
or
mov
hlt
inc
ins
call
test
or
nop
push
pop
and
push
add
push
adc
fcomp
sbb
inc
mov
hlt
dec
sub
pop
sbb
in
gs
sbb
mov
loope
sbb
and
push
fs
jg
adc
fs
inc
or
iret
or
or
inc
push
cs
popa
push
xchg
push
(bad)
sbb
fwait
pusha
pop
add
push
sti
sub
or
mov
xor
jmp
or
dec
xor
sbb
icebp
cmp
je
push
scas
sti
adc
sub
je
mov
jmp
push
adc
lea
push
or
hlt
imul
and
mov
jle
add
lods
movs
mov
loopne
call
and
push
push
xchg
test
enter
(bad)
jns
mov
xor
xchg
in
push
les
and
jmp
jmp
mov
pop
test
and
mov
sbb
pushf
sbb
adc
add
sbb
daa
add
loop
jne
add
shr
scas
and
xlat
mov
(bad)
imul
lgs
call
in
xchg
pop
out
jecxz
mov
fld
cmp
lods
push
mov
pushf
ret
pop
fisubr
shr
(bad)
push
or
fs
adc
sbb
push
and
mov
lods
leave
(bad)
mov
out
fisttp
mov
cdq
mov
sbb
push
adc
and
scas
pop
dec
imul
push
iret
test
or
or
and
sbb
jae
mov
aad
xor
push
leave
mov
sbb
lahf
and
add
add
imul
push
or
add
fiadd
or
repnz
add
in
and
enter
sbb
cmps
and
mov
xchg
mov
fimul
xchg
mov
mov
jmp
xchg
push
mov
mov
pusha
sub
aam
and
dec
ins
imul
inc
xor
les
mov
inc
hlt
mov
shl
je
test
ret
fnstsw
fcomp
and
sub
and
les
lock
sbb
dec
leave
jne
je
xchg
xor
test
ins
mov
ret
inc
add
mov
pop
pusha
aad
pop
push
ja
pop
and
imul
sbb
sub
cmp
add
cli
(bad)
mov
pop
xchg
xor
pop
xor
call
adc
sub
or
shr
push
fild
ret
pop
rol
inc
aaa
and
ja
adc
loopne
push
sbb
repnz
mov
push
in
aam
mov
test
pop
cmp
stos
mov
jle
cmc
inc
cmps
add
dec
aad
pop
or
sbb
test
or
popf
sbb
dec
sahf
or
or
out
(bad)
adc
scas
les
mov
adc
nop
xchg
xor
mov
push
add
jb
ja
adc
jg
and
inc
jmp
add
rcr
pop
jo
sub
jmp
and
xchg
push
movs
xor
test
or
jns
mov
sub
rcl
push
push
pop
shr
add
pop
jb
dec
dec
mov
and
cmp
add
arpl
rol
pop
inc
sub
movs
add
inc
sub
inc
xchg
and
mov
gs
cmp
data16
outs
dec
shl
push
inc
dec
pop
call
repz
ficomp
rcl
push
cdq
sar
mov
push
adc
mov
aam
popf
xor
and
inc
in
mov
mov
sub
push
or
clc
and
xchg
xchg
fcomp
loope
pushf
jmp
cld
mov
add
push
sbb
add
stos
xor
scas
outs
or
or
ret
push
adc
adc
ret
jge
ret
inc
push
movs
dec
or
cmp
push
and
loopne
mov
or
inc
mov
mov
cdq
inc
dec
pop
add
and
dec
jb
push
add
push
test
mov
or
and
mov
lahf
or
mov
dec
or
mov
iret
or
sbb
ror
add
push
cmp
xor
scas
in
pop
jb
ror
sub
push
sbb
retf
adc
out
adc
sti
shl
int
and
push
push
in
push
sahf
push
pop
mov
push
push
and
cs
adc
jge
loop
xor
mov
lea
dec
cmp
scas
test
jbe
xchg
call
inc
add
push
ds
mov
bound
add
jbe
mov
clc
sbb
adc
scas
fwait
or
push
je
xchg
mov
mov
cs
adc
dec
ins
inc
sti
in
pop
in
pop
js
or
sti
out
rol
or
xor
cmp
test
add
mov
cmps
adc
pop
add
ret
sbb
movs
sub
popa
in
dec
cmp
xchg
add
inc
in
out
scas
xor
pop
add
xor
dec
push
faddp
xor
inc
xchg
in
inc
mov
xor
add
scas
lods
or
mov
cmps
and
mov
test
call
or
and
add
mov
pop
das
into
fwait
out
jmp
mov
in
arpl
jecxz
add
imul
and
not
imul
xchg
fwait
clc
mov
cmp
cmc
and
sub
mov
mov
pop
adc
fmul
or
xor
fidiv
inc
cld
sbb
mov
push
mov
sub
jo
pop
icebp
cmp
jne
pop
scas
imul
pusha
in
mov
sub
jbe
sti
and
and
enter
in
sbb
or
rcl
jecxz
pushf
xchg
fs
cwde
not
inc
adc
or
add
cdq
hlt
mov
inc
loopne
in
pop
daa
adc
xor
js
or
mov
mov
add
inc
lods
scas
test
cld
ret
jne
repz
mov
mov
imul
sbb
loope
push
scas
out
bound
cmp
xchg
je
inc
enter
jmp
xor
repnz
dec
lods
xchg
jmp
nop
or
sbb
jno
xchg
or
add
add
xchg
imul
pop
rcr
xor
add
and
rcl
xor
or
push
sbb
mov
pop
add
leave
pop
pop
mov
into
inc
xchg
lods
pop
movs
dec
or
mov
mov
loopne
fisub
call
out
rcl
lods
sbb
and
shl
stc
mov
xchg
inc
les
or
into
shl
pop
nop
addr16
push
or
jne
aad
and
sbb
popa
add
je
or
or
jo
jmp
add
and
out
mov
sti
fdivr
pop
out
(bad)
nop
rol
(bad)
fiadd
jo
fbstp
push
loopne
imul
repz
push
scas
dec
dec
mov
mov
cmp
xor
jp
mov
inc
fild
mov
and
xor
fmul
and
ud2
xor
js
aad
ins
or
or
add
imul
aam
jne
test
pop
and
js
mov
pop
leave
sub
mov
dec
push
jmp
or
xor
lock
xor
rol
pushf
jne
add
dec
xor
outs
(bad)
out
push
push
adc
in
in
or
add
adc
cmp
mov
mov
pop
mov
sub
or
js
inc
mov
push
or
or
adc
adc
mov
(bad)
and
and
das
cmc
je
loopne
mov
mov
jle
(bad)
(bad)
push
or
inc
xchg
mov
mov
rol
push
xor
push
test
iret
and
movs
clc
inc
pushf
pop
lock
jnp
cmp
(bad)
push
sub
cmp
in
xlat
inc
ds
or
add
push
ror
jns
(bad)
and
and
gs
xor
push
fadd
add
cmp
frstor
cmp
jge
push
div
(bad)
sbb
ret
sbb
int3
cmc
xor
outs
lahf
or
ja
or
enter
adc
clc
lea
sti
fdivr
cmc
addr16
cwde
mov
aam
and
mov
push
int
fsubr
cmp
push
lea
push
inc
pop
outs
loopne
push
bound
mov
mov
add
in
fst
popa
(bad)
pop
dec
adc
add
pop
cmp
mov
jno
stc
xlat
pop
xchg
pushf
ins
mov
ror
les
rol
pop
test
xor
leave
inc
mov
cld
mov
test
leave
shl
adc
aad
xchg
add
mov
loopne
and
ins
cmp
dec
(bad)
mov
es
add
mov
je
push
pop
nop
dec
mov
add
mov
pop
movs
sbb
jb
jne
mov
movs
add
jno
pop
js
sub
mov
add
scas
call
cdq
lods
div
aam
fist
jo
aam
imul
jge
pop
sub
or
xor
mov
xor
inc
je
enter
call
std
sub
xor
movs
add
(bad)
push
iret
adc
pop
ret
and
push
add
jg
sar
fcomp
loope
add
fisubr
scas
cwde
lods
or
cmp
out
push
add
mov
lods
jecxz
pop
int3
push
loope
fst
push
arpl
push
loopne
fmul
scas
int3
adc
push
scas
rcr
mov
mov
nop
in
or
ds
inc
add
adc
pop
outs
fcom
and
xchg
movs
sub
dec
dec
inc
imul
push
clc
inc
das
xor
add
loope
pop
pop
fisubr
push
xchg
loopne
jmp
cmps
pop
push
retf
fcmove
cmp
push
pop
jp
rol
frstor
pop
jmp
in
in
jo
jne
push
push
inc
cmp
call
or
cmp
scas
xor
adc
mov
out
adc
cmps
xchg
add
ret
sbb
test
mov
test
xor
jo
mov
cld
faddp
mov
cmp
mov
enter
cmp
shl
mov
mov
add
cdq
adc
lds
mov
and
add
or
pop
(bad)
stos
cmp
int3
cs
addr16
inc
xor
pop
dec
stos
or
push
imul
jne
frstor
jb
push
sub
or
test
inc
mov
jmp
rol
or
mov
xchg
or
movs
mov
push
pushf
dec
cmp
sub
mov
mov
add
lds
inc
pop
adc
in
dec
in
in
sahf
inc
dec
es
adc
jl
hlt
inc
fistp
jmp
mov
out
cmp
jmp
and
jne
movs
fs
cmp
jne
das
add
pop
and
push
add
movs
repz
mov
adc
xchg
add
loopne
or
mov
ds
call
add
dec
pop
mov
dec
(bad)
lock
mov
pusha
adc
dec
das
arpl
repnz
test
jb
nop
(bad)
mov
fstp
mov
sub
pop
adc
xor
scas
or
inc
and
xchg
loop
push
leave
int3
rcr
rol
leave
and
add
pop
jmp
xor
pusha
dec
adc
into
mov
pushaw
add
mov
cmps
ret
ss
dec
mov
push
mov
xchg
push
imul
imul
push
shr
adc
add
fidiv
and
cmp
fidiv
push
push
xor
push
call
cli
rcr
push
xor
push
and
inc
fidivr
inc
out
or
push
nop
mov
in
in
jno
sbb
in
jge
dec
popa
leave
sbb
or
test
xchg
inc
sub
and
ret
xor
or
loopne
ret
adc
mov
sub
mov
(bad)
xor
fidiv
add
xor
lea
push
test
in
push
push
js
cmp
ds
pop
scas
cmp
and
sahf
test
call
loop
xor
push
push
xchg
push
adc
imul
js
lds
sbb
jle
je
mov
add
int
mov
mov
mov
mov
mov
jecxz
sbb
and
sbb
and
or
xor
inc
aam
adc
rcpps
push
xchg
sbb
movs
sbb
in
jmp
cmps
in
nop
xchg
call
jb
rcl
cmp
push
mov
sub
sbb
mov
mov
sbb
cmp
push
inc
sahf
add
fcom
adc
sub
xchg
dec
and
dec
and
push
imul
in
add
jge
fcom
cmp
lahf
shl
push
add
loopne
xor
xor
sbb
loopne
(bad)
outs
push
pop
sbb
ins
jne
add
jmp
pop
inc
pop
in
test
std
mov
pop
or
dec
hlt
xor
sub
shr
daa
cmp
push
inc
jne
and
fimul
cmps
stos
xor
add
mov
clc
sub
xchg
arpl
push
and
mov
rcl
pushf
int
dec
test
jmp
add
jmp
movs
or
xor
call
sbb
nop
fidivr
push
and
les
sbb
push
lea
inc
mov
loopne
fwait
and
push
mov
or
or
dec
(bad)
or
or
push
inc
daa
mov
ja
jmp
pop
sbb
dec
pop
popa
pop
push
mov
jmp
and
xchg
fwait
sbb
nop
xchg
adc
adc
sbb
adc
ds
movs
adc
imul
sbb
cmp
dec
add
call
mov
pop
fwait
sahf
sub
cld
mov
push
lds
add
mov
xor
mov
les
inc
xchg
inc
sub
jo
mov
or
xchg
pop
lods
pushf
cmps
push
or
inc
inc
pusha
and
adc
fisubr
stc
dec
repnz
jge
and
push
xchg
mov
push
mov
lock
xor
push
rcl
push
push
jl
ret
in
adc
and
xchg
adc
sub
add
pushf
mov
aas
and
ins
sbb
test
mov
fucomp
add
movs
enter
pmulhw
xchg
add
adc
or
in
fadd
inc
jo
mov
adc
adc
xchg
pop
in
add
add
aam
inc
data16
or
mov
add
int3
mov
dec
dec
cs
xchg
inc
or
sti
add
push
jmp
xor
stos
cli
sbb
rcl
enter
in
sahf
fwait
pop
add
cmp
pop
call
push
pusha
xor
mov
fwait
pop
sbb
or
mov
xchg
or
xchg
scas
je
and
push
lea
mov
dec
out
(bad)
dec
or
imul
add
inc
imul
sbb
mov
loope
push
mov
sub
jb
or
or
and
and
sub
add
lods
xchg
ja
dec
jmp
cmp
rcr
ja
je
addr16
mov
mov
fiadd
ins
pop
sub
inc
in
sti
xchg
mov
xor
dec
push
aaa
into
loopne
mov
xor
dec
test
add
fcom
ds
adc
lock
cs
rcr
or
and
and
jno
(bad)
pop
inc
cmp
sbb
dec
sar
add
mov
xlat
add
fwait
pop
jns
xchg
frstor
ret
and
sub
pop
sub
inc
push
hlt
mov
movs
and
lock
cld
ret
adc
inc
inc
popa
or
mov
mov
jae
data16
sahf
je
push
sbb
pop
add
push
adc
push
push
lea
into
xlat
jecxz
sub
imul
push
xchg
je
cmp
and
mov
jmp
jmp
cmp
mov
add
push
test
or
nop
cdq
ret
add
fucomip
add
pop
mov
and
repnz
or
clc
call
(bad)
leave
adc
and
or
xor
or
lods
clc
lods
and
(bad)
pusha
push
xchg
nop
scas
sub
inc
add
fdivr
fsub
xchg
sub
(bad)
test
cmps
ret
or
repz
mov
call
mov
push
nop
fcomp
loope
ret
xchg
or
adc
adc
jle
retf
rcl
and
mul
xlat
inc
xchg
mov
push
push
push
sub
aam
push
jmp
cli
or
adc
cmp
rcr
push
or
dec
xchg
push
push
outs
add
xor
dec
mov
repz
les
mov
leave
add
mov
clc
adc
pop
lock
aad
push
adc
xchg
xchg
mov
hlt
cdq
sub
ret
inc
test
xor
dec
and
xchg
mov
dec
lds
test
sbb
or
adc
pop
test
inc
test
mov
movs
mov
xor
jo
jo
stos
push
mov
cwde
sbb
rcr
mov
shr
cmc
push
mov
adc
sub
popa
inc
pop
adc
lds
adc
aad
push
sub
push
loopne
call
add
repnz
mov
je
and
sbb
stc
mov
fwait
stos
mul
dec
xchg
fisttp
push
in
add
or
or
mov
das
xlat
or
and
lahf
xor
je
arpl
jg
xor
call
pop
in
lods
call
cmp
push
fdiv
mov
adc
sahf
invlpg
adc
fld
sti
cmp
in
mov
cmc
cli
pop
add
in
fwait
in
cmp
ret
or
or
call
movups
xchg
iret
ret
mov
and
in
inc
inc
push
push
and
add
nop
dec
pop
sbb
dec
das
mov
dec
push
rcl
mov
inc
push
dec
test
repz
aam
xor
shl
adc
dec
popa
and
xchg
and
ret
push
pop
mov
int3
lea
rep
push
les
pop
push
pop
or
inc
mov
mul
dec
push
sbb
inc
into
(bad)
push
loop
test
paddq
mov
rcl
mov
add
out
adc
into
imul
or
xor
(bad)
in
xchg
sub
int
cmp
loopne
mov
sti
cmp
add
retf
add
or
jo
aam
test
stos
adc
add
xor
(bad)
sbb
push
stos
scas
rcl
pop
add
adc
cmps
dec
das
mov
adc
dec
add
xor
out
mov
adc
lea
jl
lea
shl
cmps
movs
xor
outs
rcr
pushf
imul
and
wbinvd
xor
sub
sar
pop
ss
lods
add
cmp
ins
dec
xchg
test
bsr
movs
and
sub
or
xchg
(bad)
push
xchg
in
movs
scas
fmul
retf
jmp
mov
dec
adc
mov
jo
or
dec
xor
and
push
push
push
enter
inc
or
push
add
mov
mov
jge
sahf
bt
push
ret
jbe
loop
pop
test
mov
inc
and
xchg
arpl
cmp
mov
pop
sub
icebp
adc
mov
pop
in
retf
cwde
nop
jb
adc
inc
stos
adc
movs
lds
fadd
and
lods
xor
outs
mov
pop
nop
mov
mov
movzx
mov
pop
lock
dec
pushf
js
push
mov
loopne
pop
xchg
call
jne
es
pop
inc
jne
fisub
mov
ins
pop
sti
jae
pop
sbb
adc
ja
in
sbb
sbb
add
or
sbb
and
das
cmp
dec
add
test
lea
in
ret
sbb
jg
sbb
test
popa
sub
mov
lds
pop
push
add
adc
xor
stc
push
xor
cld
sti
pop
or
lods
and
lea
sbb
cmp
fsub
sbb
and
test
repz
retf
jae
xor
add
mov
dec
and
or
add
and
push
scas
lds
enter
and
pop
jb
nop
and
xchg
dec
sub
nop
and
cmp
int3
sti
enter
imul
cmp
je
movs
or
lods
jne
mov
inc
xor
sbb
fcom
mov
pop
add
fisubr
loopne
dec
aaa
jge
adc
adc
cdq
bswap
pushf
push
adc
sbb
add
dec
lds
iret
enter
and
and
xchg
and
les
enter
xchg
lods
aas
sub
mul
or
movs
ins
sbb
sub
or
ret
call
shl
call
cdq
mov
repz
inc
mov
cmps
adc
loopne
(bad)
pop
loopne
das
icebp
dec
adc
mov
cmp
jg
pushf
in
stos
add
shl
mov
rcl
inc
mov
test
sbb
and
in
dec
gs
xor
jno
sbb
xor
sbb
in
adc
dec
test
xor
jo
fwait
push
xor
and
stc
and
inc
xor
sbb
push
add
xor
dec
dec
cmp
lds
test
cmp
jne
pop
in
or
mov
or
xchg
in
jmp
jp
mov
mov
les
imul
jp
stos
test
mov
adc
mov
dec
cmp
idiv
arpl
test
add
in
add
sbb
mov
inc
lea
cmp
mov
inc
ret
mov
xor
jge
xchg
add
and
cmp
enter
mov
rol
inc
ds
mov
sbb
cli
push
cmp
cmp
sbb
test
push
adc
jmp
inc
stc
jl
jb
inc
dec
enter
adc
dec
and
xchg
or
inc
inc
gs
repz
dec
or
sahf
xor
leave
inc
test
stos
mov
xchg
and
push
scas
push
push
xchg
or
pop
call
test
xor
inc
sete
test
outs
pushf
stos
retf
loopne
mov
shl
xor
inc
push
jp
hlt
dec
xchg
xchg
adc
push
fisub
mov
jne
or
pop
sbb
es
mov
xchg
dec
adc
dec
add
adc
dec
dec
lea
and
in
add
dec
jns
pop
ds
add
dec
cmp
xchg
ficomp
or
mov
ins
dec
mov
push
(bad)
arpl
jo
adc
out
xlat
aam
jno
add
push
push
push
push
cmp
ins
outs
ficomp
jo
cmc
adc
nop
cmps
dec
mov
and
je
cmp
adc
test
jb
or
cmp
xor
jbe
cld
jmp
fsub
sbb
int
stc
xor
jmp
xchg
sbb
adc
inc
jns
push
cmp
sbb
je
mov
jp
std
jg
push
push
enter
push
iret
inc
repz
sub
neg
mov
jo
pop
jecxz
lods
pop
dec
repz
ret
enter
clc
enter
gs
daa
inc
gs
enter
sub
sub
dec
nop
sub
out
sub
mov
mov
adc
push
mov
std
and
fwait
dec
imul
inc
(bad)
nop
cmp
jne
ins
pop
outs
sbb
mov
xor
jb
ins
ins
cmp
jo
cmp
aam
jb
sub
aam
sti
popa
mov
mov
sti
adc
inc
sti
mov
mov
push
es
sar
pushf
std
or
nop
dec
dec
pushf
adc
mov
shl
jmp
mov
js
cmps
in
pop
dec
dec
repnz
sbb
dec
ret
cmp
mov
xor
mov
movs
sbb
test
mov
push
cdq
inc
cs
push
fs
add
mov
jnp
sbb
or
inc
cs
xchg
adc
mov
mov
or
add
es
mov
neg
and
test
pushf
hlt
push
(bad)
pop
(bad)
mov
xor
push
jb
pop
pop
nop
inc
push
xor
pop
leave
xchg
or
ret
pop
jns
add
jmp
lock
inc
es
pusha
lock
push
push
movs
mov
fimul
cwde
cmc
jecxz
test
jnp
or
mov
gs
mov
lods
bound
push
outs
dec
cmps
inc
push
xor
inc
push
cli
movs
add
mov
push
fs
ret
fdivr
fs
inc
les
xor
imul
icebp
inc
sub
or
pusha
rcl
dec
mov
adc
add
sub
and
inc
inc
pop
dec
(bad)
xor
fmul
add
xchg
pop
dec
call
cwde
aam
jecxz
aad
je
fld
push
cdq
adc
mov
je
cmp
sbb
lods
mov
mov
popa
push
or
or
add
mov
xor
inc
lods
xor
jae
and
mov
leave
mov
add
call
cmp
pop
add
outs
imul
(bad)
out
es
push
clc
jne
or
or
(bad)
add
sbb
pop
xchg
mov
sar
cmp
inc
adc
dec
popa
js
out
daa
shr
mov
loopne
push
pop
fadd
or
outs
test
push
pop
test
enter
mov
xchg
fwait
or
jle
outs
sbb
push
xchg
or
sbb
sbb
in
mov
lds
xchg
sub
add
ror
pop
dec
xor
das
cmp
cs
xchg
add
or
and
stos
adc
shl
test
and
call
ss
stos
sub
jne
push
shl
test
inc
pop
(bad)
test
push
lea
mov
cmc
pop
adc
or
lods
sub
cmp
ins
inc
lock
fisttp
dec
sub
add
rcr
pusha
sub
xor
shr
fild
jecxz
sbb
test
inc
dec
sub
dec
ja
jo
xor
mov
jbe
cmp
jmp
dec
push
sub
or
enter
mov
and
jne
xchg
stos
mov
ror
imul
and
xor
inc
inc
pop
stos
loopne
push
cmp
cmp
ret
ret
jmp
sbb
push
and
jmp
(bad)
adc
lea
xchg
sub
imul
mov
mov
adc
repnz
lds
arpl
sbb
inc
xor
adc
sub
sbb
retf
xor
and
sbb
aaa
xchg
sbb
inc
adc
sbb
pop
sub
xor
sbb
sbb
sbb
mov
ret
sbb
ins
sbb
loope
sbb
add
or
retf
sbb
add
xchg
aaa
aad
and
cmp
mov
(bad)
xchg
cmp
or
test
fwait
(bad)
dec
adc
ds
ins
adc
push
inc
sti
or
pop
inc
adc
push
je
mov
les
ins
push
je
add
ret
xor
push
dec
xchg
and
jmp
mov
push
mov
adc
in
and
cmc
or
dec
sub
int
mov
dec
and
add
std
(bad)
mov
sbb
sbb
in
add
cwde
enter
push
push
daa
mov
jne
repz
sub
sub
mov
mov
sahf
cmp
movs
mov
gs
in
mov
nop
xchg
shr
sbb
fwait
ret
imul
es
cmp
push
mov
int3
les
aaa
dec
fwait
bound
add
sbb
(bad)
sbb
pop
and
xor
pop
inc
adc
or
add
xchg
or
adc
mov
or
pop
push
pusha
cmp
(bad)
or
push
cmp
sbb
mov
add
cmc
xchg
mov
inc
mov
sbb
add
push
scas
mov
adc
add
inc
pusha
mov
add
cs
xor
cs
bound
sub
and
sti
dec
ror
sub
push
fdiv
popf
jmp
cmp
jne
push
jmp
push
mov
push
sbb
out
ss
sbb
test
mov
mov
inc
dec
add
in
stos
adc
fcom
cmp
das
or
fsub
pop
inc
(bad)
fadd
aaa
cmp
aad
or
push
(bad)
test
sbb
cmp
nop
out
lods
cmp
jmp
adc
mov
jge
adc
enter
dec
mov
(bad)
in
rol
loope
adc
sbb
sbb
inc
jne
or
lods
jl
inc
fcmovne
and
scas
fld
loopne
sub
aad
in
sbb
cmps
add
scas
inc
push
inc
inc
scas
fs
dec
inc
dec
dec
and
(bad)
rol
jno
inc
inc
inc
stc
and
mov
sbb
cmp
inc
push
or
fldcw
mov
jnp
les
dec
cmp
movs
sub
xor
push
pop
fild
imul
mov
add
sbb
dec
arpl
out
leave
mov
add
lods
and
and
nop
pop
sbb
or
xchg
je
adc
fwait
xchg
mov
aad
push
fst
mov
scas
fs
mov
jo
loop
pop
sub
imul
mov
rcl
push
shl
dec
or
xor
inc
push
push
jb
pop
in
jae
pop
jb
sbb
pop
ret
pusha
add
and
ret
jecxz
retf
sbb
pop
sbb
mov
sub
mov
lock
or
or
les
cmp
(bad)
xor
(bad)
ror
or
cli
dec
adc
es
enter
mov
add
push
xchg
lock
mov
cmps
das
popa
pxor
lds
inc
add
test
dec
dec
xor
or
jp
add
jecxz
hlt
mov
mov
(bad)
sbb
and
sub
test
fstp
jns
test
sub
and
add
call
push
dec
dec
cmp
sbb
daa
dec
pop
loop
sbb
mov
scas
bound
xchg
or
push
leave
fdivr
pop
mov
xor
cmp
jp
iret
or
cmp
xchg
test
or
inc
adc
push
and
test
mov
dec
dec
enter
aad
dec
and
fsub
sub
cmp
xor
enter
(bad)
call
and
adc
gs
adc
and
sbb
mov
mov
shl
pop
add
sbb
or
enter
push
xchg
and
lock
and
push
add
jg
or
xor
mov
push
pop
mov
enter
jmp
add
lods
fsubr
or
or
xchg
sbb
and
pop
jb
add
or
int
dec
jne
jle
in
add
sub
inc
or
movs
jb
enter
and
push
push
iret
dec
test
add
retf
cwde
xor
call
cs
push
push
adc
add
mov
or
enter
add
in
jns
mov
dec
cmp
sbb
stc
and
adc
xor
pop
mov
cmp
das
ds
sbb
shl
adc
(bad)
mov
jmp
data16
or
mov
repnz
cmps
in
fld
push
or
lahf
xchg
push
or
sbb
in
jns
mov
adc
push
pop
cmp
dec
aas
pop
mov
js
pop
(bad)
or
mov
(bad)
xchg
and
and
lahf
mov
punpckhdq
pop
push
mov
mov
fdivr
call
add
not
and
aas
dec
movs
pop
(bad)
inc
or
pop
sub
call
xchg
xor
push
int3
ret
jno
add
repnz
push
sub
scas
sbb
and
add
and
ja
add
and
or
nop
outs
scas
and
fidiv
mov
dec
sbb
mov
adc
push
add
add
dec
add
or
movs
out
mov
mov
inc
add
fcomp
pusha
rcr
mov
jns
cmc
mov
adc
daa
neg
push
adc
adc
mov
enter
dec
adc
inc
bound
sbb
mov
xor
xchg
push
push
cmp
or
mov
test
cmp
icebp
adc
jmp
xor
mov
neg
inc
sub
retf
xor
xchg
test
xchg
enter
stc
add
hlt
pop
add
into
xor
xchg
jo
es
pop
fs
jbe
mov
repz
iret
push
mov
test
das
je
pusha
and
jae
ds
push
out
(bad)
add
mov
div
add
ds
mov
test
lea
aas
mov
cs
sbb
jle
shl
inc
dec
bnd
sub
int
and
or
jnp
sbb
jmp
xor
or
or
call
add
es
xchg
imul
(bad)
and
dec
jne
fild
repz
xchg
push
ss
cwde
mov
aad
sub
mov
cmps
cmp
add
addr16
jne
dec
push
jmp
fwait
loope
push
mov
add
std
nop
or
adc
mov
les
inc
jmp
pop
xchg
dec
pop
je
xchg
ret
pop
pop
dec
lahf
rcl
jmp
pusha
js
clc
rol
jp
sub
lods
lods
and
loope
aam
leave
in
retf
mov
mov
adc
sbb
or
or
outs
dec
push
pop
cmp
add
loopne
xor
or
and
daa
ret
leave
sub
pop
rcr
add
neg
mov
sbb
adc
push
or
add
cmps
je
or
test
fcmovbe
stos
sub
xchg
dec
sbb
dec
sbb
adc
icebp
push
mov
mov
mov
xor
push
adc
add
inc
jo
mov
push
call
cmp
mov
pop
adc
fiadd
adc
xor
cmp
add
ret
jne
pop
sub
pop
jmp
and
mov
and
or
retw
mov
fwait
dec
mov
out
popf
adc
adc
lahf
mov
inc
jbe
(bad)
jecxz
and
repnz
push
sbb
imul
das
dec
mov
and
inc
bound
pop
jnp
inc
push
pop
mov
test
lea
push
popa
scas
js
jg
mov
mov
(bad)
call
mov
pop
cmp
(bad)
je
xor
inc
es
aam
test
(bad)
xchg
(bad)
lock
daa
mov
or
mov
test
mov
stos
test
and
outs
stos
test
xor
cmps
inc
sub
adc
adc
push
mov
popa
out
lock
inc
nop
mov
sub
inc
mov
inc
fcmovbe
cs
mov
(bad)
mov
or
pop
dec
mov
cmp
jne
test
loopne
push
or
xchg
cmp
inc
aas
arpl
mov
stos
test
push
test
pop
dec
enter
push
lahf
xchg
pusha
test
pop
cs
pop
mov
out
in
pop
cmp
fisttp
mov
push
mov
addr16
mov
ss
mov
pop
mov
nop
pop
mov
test
call
bound
retf
adc
or
mov
mov
adc
fnstsw
sub
shl
cwde
fisub
ror
pop
xlat
icebp
add
inc
mov
leave
lea
jno
mov
ret
push
lods
dec
jmp
cmps
cmp
mov
jno
push
stos
jmp
add
pop
popf
test
adc
and
and
add
cmp
or
cwde
mov
repz
fisubr
ret
or
ret
hlt
hlt
add
xor
sbb
push
lea
pusha
adc
dec
sub
test
mov
sub
sub
dec
mov
push
add
sub
not
lea
push
in
pop
xor
and
mov
outs
out
add
scas
scas
js
add
cmp
mov
pusha
jg
sbb
js
ins
mov
push
fdiv
loopne
cdq
sahf
pop
les
push
enter
mov
loopne
fs
ins
jmp
gs
test
sub
cmp
clc
sub
sub
js
mov
repnz
(bad)
push
out
aaa
add
adc
pop
pop
push
add
inc
ret
mov
dec
cmp
retf
xchg
loopne
sub
sub
call
mov
inc
add
dec
mov
jno
sub
les
xor
jmp
adc
mov
and
in
idiv
push
xchg
movs
mov
mov
push
xor
shl
add
lock
stos
sbb
clc
fisttp
xor
scas
sub
lea
push
pusha
popa
jbe
mov
push
dec
or
mov
pop
push
and
popf
inc
jmp
xchg
js
lock
cmp
push
mov
ret
sbb
ins
aas
retf
add
push
and
add
pop
out
push
jmp
xchg
fs
fucomi
jmp
mov
je
pop
outs
jo
ins
push
out
add
popf
imul
sbb
sub
push
out
add
or
xchg
xlat
pusha
retf
push
mov
xor
cmc
adc
aas
push
es
mov
mov
push
dec
mov
mov
ja
dec
cmp
and
xchg
push
mov
xor
xchg
push
cmp
ror
cmp
ds
sbb
mov
outs
mov
sbb
add
ja
add
sub
test
inc
das
xor
ret
in
adc
pop
jno
xor
push
inc
cmp
sub
rol
xor
sub
adc
inc
mov
mov
lock
xor
mov
and
and
or
in
sar
or
push
cwde
jp
or
xchg
push
popa
jmp
dec
cmp
dec
lods
xor
jns
in
inc
popf
cmp
inc
sbb
dec
cmc
mov
aad
rol
shl
and
je
sbb
mov
cmc
xlat
ja
cs
inc
jne
cld
or
cmp
xor
sub
inc
rcr
sub
sub
add
cmp
ss
inc
mov
(bad)
xchg
sbb
aaa
adc
xchg
je
jo
call
mov
mov
cmp
jne
inc
inc
mov
(bad)
ds
xor
cmps
lock
fnstsw
pop
jno
and
std
movs
jno
bound
xchg
sub
jnp
and
sahf
mov
inc
sbb
iret
call
inc
call
mov
add
jmp
inc
js
add
inc
jp
adc
addr16
jl
pop
xor
cmp
loopne
ret
push
push
pop
fs
in
xlat
int3
ror
cdq
mov
jmp
xor
stos
push
sbb
adc
and
inc
enter
jb
fstp
es
add
xor
push
test
and
add
push
jge
imul
mov
imul
ja
cmp
je
push
or
inc
in
pop
repz
sar
xor
pop
daa
mov
neg
sbb
inc
jae
add
pusha
xchg
movs
lds
mov
popf
lods
push
pusha
les
repnz
mov
xor
fstp
js
imul
push
imul
or
scas
jg
mov
xchg
adc
int
ret
sub
addr16
and
jl
data16
mov
pushf
pop
jae
inc
jmp
ret
pop
aad
fst
sub
push
in
dec
xor
dec
movs
jnp
cmp
add
cmp
test
jb
cdq
inc
push
fld
xor
add
in
mov
loopne
adc
pop
popa
adc
sbb
jnp
inc
sbb
jecxz
fdivrp
cs
jne
mov
adc
mov
push
aaa
xor
sub
push
dec
jmp
popa
xor
les
out
jmp
in
aam
push
push
add
or
mov
cmp
aaa
cmp
dec
and
or
mov
mov
xor
add
cmp
xchg
mov
js
jmp
mov
ins
jne
mov
adc
mov
adc
sbb
or
std
into
sub
xor
rcl
sub
jns
cmp
inc
jge
cmp
add
aas
(bad)
jno
movs
adc
lea
loop
je
inc
jmp
or
lods
lods
or
inc
shr
sub
cld
inc
inc
add
sbb
and
(bad)
or
dec
adc
movs
mov
cmp
add
cmp
jp
jae
js
cs
push
jmp
cmp
out
aas
idiv
cwde
push
call
pop
xchg
jmp
xor
add
enter
add
jnp
fisttp
movs
adc
inc
fidiv
rol
mov
cmp
sbb
pop
inc
mov
push
mov
cmp
pop
or
jns
cmp
add
cmp
or
adc
add
pop
sbb
repz
mov
test
popf
std
js
and
mov
js
jno
fdiv
inc
add
fucom
ret
push
mov
or
push
pop
ss
mov
push
add
mov
adc
hlt
mov
jne
xor
push
ror
mov
push
jmp
push
adc
push
sahf
inc
and
push
scas
movs
jmp
rcl
mov
ret
mov
lods
pop
loope
pop
mov
pop
sbb
mov
add
aas
ins
jmp
mov
mov
cmp
xchg
sti
fdiv
mov
(bad)
pop
cmp
push
add
adc
(bad)
call
add
adc
test
add
adc
add
inc
jmp
bound
inc
pop
inc
jns
je
test
and
inc
sbb
pop
leave
movs
or
push
movs
je
clc
setl
mov
fidiv
xchg
into
push
dec
aas
in
push
js
lock
int3
outs
leave
xor
ret
push
mov
lods
leave
or
mov
addr16
dec
and
ret
cs
add
inc
int3
dec
push
hlt
dec
xchg
mov
div
pop
jb
sub
xlat
or
push
dec
sbb
fld
inc
ss
dec
das
js
xor
add
enter
push
je
add
push
shl
ds
pop
or
aad
pop
inc
jmp
push
ror
stos
gs
add
adc
adc
inc
mov
jmp
ds
sbb
ja
dec
loopne
inc
mov
and
cwde
inc
dec
or
pop
cmp
mov
(bad)
aam
push
pop
inc
jecxz
mov
out
mov
or
ins
pop
dec
imul
imul
adc
mov
aaa
add
js
xor
jge
inc
jl
mov
add
jmp
jmp
addr16
pop
in
outs
lock
test
mov
push
xchg
or
aam
mov
in
push
movs
pop
add
push
jmp
and
std
jmp
add
jae
sub
inc
iret
cmp
das
lock
inc
add
pop
add
es
daa
sbb
sub
lock
loope
fadd
inc
push
sub
dec
aas
adc
fbld
add
icebp
test
pop
jne
push
dec
xchg
sahf
inc
sbb
xor
idiv
and
and
ror
pop
cdq
adc
ja
or
repz
jmp
cmp
jne
mov
jmp
sbb
fmul
sbb
mov
aam
inc
and
pushf
push
pop
cmp
stos
push
das
inc
dec
sbb
or
dec
enter
or
jno
or
push
push
in
inc
sbb
dec
pop
gs
mov
neg
mov
js
adc
add
pop
push
dec
lock
cdq
ss
or
xlat
in
inc
pushf
push
or
xchg
add
mov
test
sbb
adc
fwait
pop
sbb
je
xor
sbb
test
ja
add
and
add
or
in
push
loopne
pop
sub
les
imul
lock
(bad)
sub
dec
loopne
mov
pop
cs
jns
aaa
cmp
add
int3
inc
pusha
cmp
(bad)
jp
je
and
stos
clc
add
das
je
enter
je
and
stos
clc
sbb
dec
sub
outs
in
mov
or
loope
je
daa
into
or
rcl
xor
ret
cmp
pop
setne
adc
jmp
in
and
imul
pop
or
call
push
jbe
cmp
xor
pop
(bad)
fdiv
mov
cmp
jne
into
and
jl
popf
retf
or
adc
je
sub
and
mov
and
mov
popa
ss
xchg
mov
test
mov
scas
or
rep
lods
mov
mov
jge
repnz
es
mov
inc
pop
mov
fdiv
enter
push
stc
xchg
fs
enter
mov
pop
cmp
cmp
jle
in
sar
outs
sbb
pop
push
mov
cmp
fist
shl
push
adc
and
mov
xlat
jo
add
cmp
dec
add
in
cmp
(bad)
pop
cmp
dec
(bad)
fimul
cmp
and
xchg
icebp
jne
push
cdq
iret
add
push
inc
pop
cmp
lods
jl
xchg
push
inc
repnz
jge
call
call
aas
push
xor
out
sbb
push
or
inc
mov
addr16
clc
lahf
and
shl
push
mov
arpl
or
pop
push
shr
mov
jne
call
movntps
gs
xor
add
fdivr
sbb
(bad)
ret
or
movs
fdiv
enter
(bad)
mov
or
adc
xchg
xor
or
add
pop
jge
mov
inc
cdq
or
movs
xor
ss
sahf
push
jo
call
jo
scas
sub
mov
fisub
into
push
loop
addr16
aam
sbb
mov
and
sbb
xchg
or
je
sti
loopne
add
(bad)
cmp
in
shr
or
fst
sbb
movs
jne
adc
pushf
inc
(bad)
in
test
mov
repnz
dec
xor
xchg
or
ret
jle
or
mov
or
dec
movs
cmps
push
je
push
sbb
add
into
inc
inc
iret
pop
add
sbb
rcr
cmp
adc
inc
push
mov
or
mov
pop
dec
lock
inc
outs
retf
sub
aam
test
or
hlt
dec
xchg
xlat
or
sub
pop
jb
and
pusha
cwde
enter
retf
jp
dec
popf
push
xor
pop
inc
add
fisubr
xor
js
or
jo
stos
add
sub
loopne
int3
int3
push
into
cmp
or
add
psubw
push
f2xm1
add
lods
imul
outs
adc
mov
dec
jg
rcr
add
into
shl
xchg
daa
in
es
push
repnz
mov
pop
and
inc
push
mov
jb
sti
ja
lock
sbb
mov
dec
mov
or
inc
lock
or
cli
and
retf
push
test
aaa
sub
dec
mov
pop
mov
and
scas
shl
jecxz
mov
xchg
rol
add
test
lock
sub
mov
int3
lea
xor
lods
imul
pop
xchg
jb
or
sub
scas
jp
imul
adc
or
push
sbb
add
enter
adc
adc
fdiv
mov
pop
xchg
and
or
pop
mov
hlt
dec
adc
adc
add
dec
and
mov
pop
pop
dec
inc
enter
out
mov
das
xchg
and
arpl
or
add
mov
sbb
dec
popa
icebp
jmp
daa
int
sub
push
push
dec
aaa
adc
inc
shl
div
pop
add
jb
pop
pop
lods
fld
sub
and
sbb
and
and
dec
test
cmp
pop
in
inc
and
xchg
fld
fst
mov
clc
inc
xor
adc
movs
stc
push
jnp
dec
mov
and
clc
xor
lock
(bad)
(bad)
cmc
sub
rcl
inc
pop
and
xor
cmp
or
and
stos
dec
or
xchg
je
fisubr
sub
in
add
dec
add
push
nop
and
push
enter
int
jb
push
jb
jne
test
in
pop
inc
daa
and
mov
fwait
pop
sbb
add
aam
retf
cmovp
mov
clc
fiadd
sub
push
imul
add
aam
loope
iret
inc
jb
mov
mov
or
repz
pop
push
(bad)
data16
sbb
sbb
and
and
daa
hlt
xor
repnz
ret
sbb
add
loopne
cmp
loopne
inc
bound
pusha
push
add
or
mov
(bad)
stc
(bad)
jb
push
pop
mov
gs
cmp
jne
xchg
movs
aam
push
movzx
push
test
out
nop
xor
or
test
sbb
pop
mov
in
pop
push
data16
jo
pop
iret
aam
rol
xchg
push
cdq
imul
dec
inc
and
push
test
rol
lods
jmp
sahf
sub
cmps
fadd
push
add
gs
mov
or
xor
jne
mov
and
mov
xchg
jae
iret
mov
dec
mov
test
adc
inc
mov
jp
sub
and
sbb
jmp
adc
dec
(bad)
jp
dec
cli
ss
jmp
sbb
mov
aad
cmp
add
pop
movs
in
repnz
inc
lahf
mov
int
adc
pop
and
push
rol
loopne
test
aaa
add
daa
cmp
jne
add
jecxz
mov
xchg
and
lds
rol
add
pop
(bad)
enter
lahf
xor
xor
add
outs
test
(bad)
adc
sbb
daa
jle
xchg
mov
sbb
cmp
push
je
xchg
push
pop
imul
mov
scas
inc
pop
add
lea
div
xchg
or
sar
mov
test
adc
data16
or
push
dec
popa
jb
(bad)
enter
dec
movs
sub
add
cmp
pop
cmps
mov
pop
cmp
xor
or
jno
call
mov
shl
pop
sbb
sub
xchg
jmp
test
ror
call
dec
push
pop
or
jmp
push
(bad)
in
xor
aas
movs
xchg
aad
sbb
pushf
movs
cmps
leave
movs
popf
lods
fadd
and
shl
mov
dec
jb
retf
test
cmp
(bad)
retf
cdq
loope
nop
(bad)
cmp
push
rdtsc
cmp
mov
in
push
jae
cwde
and
adc
push
fcomp
inc
mov
retf
and
dec
dec
shl
stc
retf
jo
inc
adc
or
mov
pop
repz
cld
mov
or
out
in
jae
and
add
sub
les
pop
cwde
out
bound
stos
in
pop
and
add
and
aad
aaa
call
adc
pop
inc
ret
clc
lods
push
dec
and
je
ins
jbe
jle
(bad)
mov
(bad)
inc
xchg
sub
rcr
add
push
dec
or
dec
xchg
scas
push
add
pop
sub
test
adc
int3
clc
int3
mov
push
in
je
add
adc
adc
inc
ret
bound
xchg
mov
pop
and
xor
call
sbb
mov
loop
clc
add
fwait
inc
lea
ror
or
jo
dec
or
push
sbb
push
adc
test
hlt
lock
jg
loop
lea
push
jnp
pop
mov
ficomp
dec
sbb
xor
(bad)
neg
xchg
(bad)
mov
dec
and
dec
fsub
add
and
jne
lods
push
push
sbb
sub
jle
outs
enter
add
je
fisub
out
and
sub
push
nop
ja
push
jns
push
sub
stos
xchg
cld
std
push
fs
and
xor
aam
out
add
sbb
enter
sar
pop
cmp
or
nop
adc
or
loop
xor
aam
or
cmps
scas
mov
jnp
test
mov
add
fdiv
in
and
int
add
std
push
ja
js
xchg
mov
es
pop
add
push
lock
adc
ret
rcl
pushf
leave
dec
dec
popf
mov
gs
lock
pop
pop
dec
sub
mov
cmp
dec
dec
push
lahf
xchg
xor
mov
clc
mov
adc
loope
add
cmp
ret
in
add
scas
sub
inc
pusha
in
push
or
movs
add
xor
cmp
shr
sbb
retf
ja
in
enter
pushf
int
in
pop
and
outs
cmp
xchg
inc
int
jl
pop
out
push
cmp
dec
push
je
add
test
xor
xchg
and
pushf
pop
sub
nop
(bad)
adc
sub
lahf
aas
cs
mov
xchg
adc
and
and
pop
pop
in
or
xor
test
jbe
sub
adc
xchg
(bad)
mov
int
jp
jns
int
add
lods
xor
sub
add
gs
jne
js
stos
jno
push
sahf
xchg
data16
mov
repz
or
fadd
pop
sbb
jno
into
and
popa
push
rcr
dec
loopne
sbb
push
add
jl
inc
push
test
jl
cmp
adc
push
imul
cwde
cmp
xchg
add
push
dec
cmp
mov
cwde
add
pop
cmp
shl
sbb
inc
das
mov
mov
das
push
je
pop
jns
push
bswap
ficom
stos
adc
xor
sbb
add
and
ins
outs
test
(bad)
pusha
dec
pop
test
les
push
add
add
loop
into
lock
aas
in
pusha
push
leave
and
add
add
add
push
mov
ins
inc
sub
imul
ss
lods
inc
stc
pushf
push
popa
add
add
adc
outs
ficomp
mov
std
outs
pop
mov
mov
cmp
pop
or
xchg
cmp
leave
ficomp
add
adc
std
sbb
daa
add
scas
and
xchg
adc
aam
lods
or
fcom
mov
dec
rol
jb
inc
test
xchg
and
sbb
push
inc
in
pusha
sar
dec
(bad)
jae
pop
cmps
test
pusha
jne
fidiv
sbb
push
add
jge
bound
cmp
or
nop
sub
outs
jne
pop
lds
and
cmp
add
sbb
mov
mov
sbb
xor
push
push
in
ret
test
xchg
add
mov
jo
lea
icebp
addr16
jne
and
shl
rol
aam
fisttp
inc
jmp
imul
add
mov
cmp
mov
sahf
jmp
dec
out
xchg
push
inc
add
jno
dec
add
mov
or
jb
mov
nop
inc
jne
fs
push
leave
ja
mov
adc
lods
xchg
sbb
and
jns
adc
dec
int
mov
mov
mov
sub
shl
es
push
arpl
adc
arpl
mov
fcomp
push
and
mov
sbb
mov
pop
sahf
gs
outs
fisubr
jbe
cmp
push
inc
les
xor
push
cmp
mov
inc
cmp
test
jecxz
(bad)
push
mov
push
int3
jo
daa
lea
cmc
add
inc
dec
(bad)
push
dec
cmps
and
into
jle
shr
pop
jns
jbe
xchg
jle
push
push
add
test
and
push
shl
aam
or
es
test
pop
or
jge
xchg
out
cld
sub
fadd
jmp
cmp
mov
cmp
cmp
inc
clc
push
(bad)
jmp
ror
inc
fwait
jmp
sbb
add
imul
out
pusha
iret
or
and
adc
mov
pushf
cdq
pop
mov
and
test
add
(bad)
jmp
mov
adc
out
pop
inc
push
push
pushf
pop
sub
add
nop
inc
adc
cmc
push
imul
je
push
or
xor
inc
call
push
xor
add
cmp
pop
leave
xchg
xor
cmp
mov
cmp
inc
in
and
sbb
mov
jge
adc
jno
ss
mov
add
test
sub
rol
adc
rcl
shl
(bad)
xor
(bad)
inc
mov
sub
enter
dec
dec
adc
jbe
inc
sub
mov
push
cmp
pop
shr
jno
pop
inc
and
jg
add
add
xchg
adc
adc
loope
pop
sbb
mov
dec
sub
outs
call
nop
mov
retf
pop
xchg
mov
xor
xchg
cmp
pavgb
xor
imul
and
xchg
push
mov
mov
or
int
cs
addr16
push
jge
pop
mov
es
pop
fst
add
or
dec
call
test
jnp
enter
ror
jns
dec
call
sbb
inc
es
repz
ss
pop
cmps
and
pop
(bad)
nop
call
lock
push
cmp
dec
test
sub
call
rcr
xor
in
or
dec
push
add
sbb
inc
cmp
and
rcl
fwait
(bad)
into
movs
in
and
loope
push
xor
adc
pop
push
sbb
xor
or
shr
and
in
bound
sbb
call
test
std
std
shl
pop
and
pop
sub
pusha
loope
sbb
fld
fcom
mov
inc
gs
or
push
dec
cmp
adc
dec
test
cmp
or
dec
add
mov
and
xchg
inc
mov
push
loope
test
dec
cmove
(bad)
push
sub
pop
les
cdq
cmp
add
pop
sbb
mov
fistp
movs
loop
mov
mov
in
icebp
test
push
cmp
cmp
or
add
fld1
xchg
mov
sbb
imul
dec
shr
stos
xchg
sub
int
sbb
outs
ret
mov
xchg
add
sbb
or
dec
xchg
or
xlat
ins
adc
gs
add
push
je
jg
mov
in
nop
dec
and
shl
adc
lahf
add
or
inc
movs
inc
fwait
fs
jl
or
and
pop
or
dec
xor
sbb
stos
adc
adc
xchg
add
imul
cs
sbb
pop
push
pop
enter
mov
mov
add
in
pusha
in
mov
call
cs
pop
enter
xor
and
dec
leave
leave
iret
cwde
or
add
fmul
inc
sbb
pop
or
nop
arpl
aam
push
shl
arpl
mov
ror
sbb
imul
shr
fs
inc
(bad)
hlt
adc
enter
sbb
sbb
push
xor
adc
push
xor
xchg
add
and
in
into
call
pop
sbb
xchg
or
and
inc
enter
push
rol
fnop
dec
add
or
out
cmps
mov
inc
xchg
sbb
add
or
pusha
add
ret
int3
cmp
out
lock
pusha
shl
xor
ss
dec
push
jnp
inc
jb
adc
inc
inc
retf
push
jb
in
or
shr
call
mov
inc
or
jns
mov
and
and
and
repz
and
sbb
push
sbb
ja
pop
push
dec
mov
sbb
mov
(bad)
mov
cs
pop
lea
dec
push
outs
jmp
and
aam
out
cmp
add
cmp
cmp
and
push
push
xchg
add
sbb
mov
loopne
shl
push
dec
xchg
inc
jbe
ror
push
xchg
jns
mov
stc
je
sub
push
pop
sub
sub
rcr
cmp
pop
loope
ficom
xchg
and
adc
cmp
in
nop
out
ret
retf
loop
enter
mov
sbb
jle
adc
rcl
out
mov
aam
adc
ret
ja
jle
push
push
sahf
cmp
cwde
sbb
mov
aam
pop
inc
and
xchg
mov
push
push
aam
shl
add
inc
mov
jmp
call
fimul
rcl
es
sbb
push
sahf
test
dec
sbb
popa
test
(bad)
int3
or
push
enter
mov
rcl
ret
push
ror
inc
sub
aad
(bad)
aad
cmp
pop
retf
jne
dec
inc
and
xlat
nop
xchg
aam
dec
dec
mov
fistp
and
pop
cmp
adc
dec
mov
sub
cmp
imul
jle
adc
or
push
popf
adc
fcmovbe
pop
inc
mov
push
pop
(bad)
hlt
xchg
push
call
sbb
mov
push
iret
je
int3
jmp
sbb
les
test
nop
addr16
ficomp
nop
jo
sbb
push
push
int
sub
sbb
adc
and
lahf
adc
shl
adc
pop
rcl
and
and
adc
mov
xchg
imul
cmp
pusha
icebp
push
push
xchg
shl
mov
and
jne
add
scas
in
jmp
lds
inc
movs
stos
jge
aam
jmp
mov
adc
push
add
and
out
ret
(bad)
push
or
cmp
(bad)
test
fcomp
adc
xchg
lods
es
jmp
push
mov
sbb
nop
xchg
fsub
rcr
or
xchg
add
(bad)
sub
or
sub
jmp
add
sub
and
mov
jecxz
in
push
push
xchg
fwait
inc
fild
push
mov
ret
enter
push
add
xchg
ret
pop
sbb
cmp
mov
push
push
jo
dec
fstp
pop
pop
inc
push
out
jb
and
in
pop
sub
adc
add
add
inc
dec
ror
mov
mov
cmp
rcr
rol
adc
leave
sub
push
lea
(bad)
adc
add
jbe
mov
push
sub
add
outs
push
push
popa
sub
xor
pop
push
push
sti
bound
inc
jp
cmp
pop
retf
call
or
inc
jmp
sbb
pop
add
ds
jl
jmp
adc
add
push
fs
jmp
pop
add
(bad)
fdivr
loopne
mov
pop
pop
pop
sub
mov
shr
push
mov
push
or
push
add
mov
sub
jle
lea
pop
add
push
add
mov
jo
push
jb
add
or
cmovno
sbb
imul
(bad)
add
test
or
(bad)
outs
push
xor
jmp
mov
test
cmp
je
cmp
lods
inc
call
aaa
sub
push
outs
je
push
cs
add
ror
push
or
sbb
mov
cmp
inc
jl
adc
or
add
push
pop
inc
cli
cmp
rcl
cmp
retf
call
inc
mov
adc
and
loopne
xchg
or
xor
add
dec
adc
leave
jge
add
sbb
in
call
jle
neg
cmp
je
in
jl
jmp
into
push
rcl
icebp
mov
outs
mov
pop
outs
add
lea
push
adc
and
test
fnstenv
cmc
ins
add
xchg
mov
add
int3
pop
pop
xor
inc
pop
inc
xchg
push
scas
test
cld
push
add
cmc
ret
ins
cmp
inc
jae
scas
add
jb
push
cli
test
jne
adc
add
pushf
mov
daa
dec
sub
adc
lods
dec
cmp
dec
shr
mov
xor
cmp
adc
push
adc
and
adc
test
push
mov
mov
jne
push
clc
call
bound
jno
jmp
jbe
dec
inc
mov
pop
cwde
xor
jno
ret
call
clc
das
sbb
rol
xchg
or
pop
pop
and
xchg
or
mov
(bad)
mov
sub
fcmove
dec
or
dec
fdiv
ins
push
adc
cmp
xchg
push
fld
mov
add
movs
mov
sahf
add
fadd
mov
jb
add
lock
jne
pop
ins
pop
sub
cmc
rcl
push
fsubr
iret
cmps
push
pop
or
call
push
rol
out
pusha
or
add
sbb
mov
fidivr
pop
push
add
jne
cmc
nop
mov
pop
add
xlat
sub
fist
fisttp
mov
xlat
push
mov
adc
dec
mov
cmp
push
sbb
sbb
das
sti
fbstp
aam
and
int3
add
lods
xchg
in
jae
bound
add
sub
inc
add
pop
xchg
add
add
pop
shr
enter
data16
shl
je
xor
push
add
(bad)
sbb
mov
inc
xor
push
cdq
jl
ss
dec
and
in
or
nop
fldenv
push
or
mov
sbb
dec
outs
adc
mov
mov
add
sub
and
push
fsub
test
lahf
and
je
out
inc
or
push
mov
or
push
or
fwait
jecxz
call
inc
inc
inc
inc
jmp
lea
fldenv
js
mov
mov
mov
sub
sar
push
call
xor
add
in
outs
add
push
push
das
push
jle
imul
lea
inc
nop
int3
xchg
hlt
add
and
inc
inc
add
std
outs
adc
scas
mov
and
dec
sub
xor
ins
jmp
adc
xchg
mov
ret
and
pop
fiadd
mov
fild
adc
sbb
add
adc
imul
in
sahf
and
aam
jo
mov
adc
xchg
fadd
clc
imul
xor
mov
pushf
xchg
ror
movs
cwde
(bad)
sbb
jne
inc
add
loop
or
fcmove
test
xlat
xor
jle
fnsetpm(287
(bad)
cmp
call
jl
sub
inc
mov
mov
das
je
inc
imul
mov
jle
je
sub
ret
das
xchg
add
add
push
dec
dec
push
push
inc
dec
add
out
xchg
or
es
jo
add
jb
(bad)
aas
add
aas
push
pushf
(bad)
jmp
mov
add
inc
inc
adc
dec
dec
sbb
jne
jmp
push
pop
loop
pop
jge
and
mul
add
or
add
cmps
popf
jecxz
(bad)
and
mov
inc
rol
mov
add
retf
sbb
xlat
sbb
adc
sub
sbb
rol
stc
nop
sub
scas
test
pop
or
xchg
add
add
xchg
in
pop
mov
add
arpl
push
push
movs
cld
(bad)
cld
cmp
sbb
mov
or
cld
pop
adc
jbe
inc
sub
fcmovnu
dec
jmp
jbe
mov
sub
stos
ud2
adc
jo
dec
add
xchg
inc
popf
add
lahf
movs
adc
loope
sub
mov
jecxz
xor
add
lods
push
and
out
jo
or
es
mov
in
dec
push
rol
loope
jg
mov
aaa
mov
sub
out
dec
inc
lock
jmp
test
jmp
pop
sub
stos
xor
pop
fs
add
pop
les
loopne
and
retf
rol
mov
push
test
xchg
pop
xchg
mov
push
inc
(bad)
push
call
add
and
cdq
add
cmp
je
pop
jmp
and
test
dec
lods
enter
mov
xor
fisubr
mov
and
gs
fwait
cmp
mov
mov
rol
lock
leave
inc
ror
pop
push
test
push
cmp
imul
test
sbb
dec
les
enter
sbb
add
add
das
mov
inc
and
push
jecxz
add
lods
dec
xor
mov
retf
setbe
push
pop
mov
adc
xchg
add
xor
jb
push
sbb
mov
sbb
cwde
nop
push
lock
xor
ret
xchg
out
add
rcr
repz
mov
cwde
adc
inc
pop
out
nop
fdiv
xor
dec
mov
push
fistp
sub
add
jbe
mov
add
push
push
dec
(bad)
scas
outs
and
jo
push
iret
xlat
sub
push
mov
mov
xor
(bad)
in
pop
les
enter
xchg
or
and
and
ss
or
or
not
enter
sti
xor
dec
xchg
or
cmp
leave
adc
cmps
je
xor
or
xchg
or
dec
push
jns
in
push
nop
mov
mov
add
pop
stos
push
ja
movs
imul
mov
dec
xlat
call
inc
sahf
xchg
or
or
adc
fmul
adc
and
into
inc
into
sbb
dec
push
or
test
sub
and
enter
(bad)
leave
inc
or
imul
rcl
out
xor
(bad)
fst
fistp
ss
in
icebp
jne
xor
dec
cmp
mov
rol
nop
inc
pushf
inc
add
fdivr
fs
push
adc
out
add
adc
sar
add
in
ds
repnz
mov
mov
jmp
shr
inc
sub
push
jmp
xchg
retf
lods
pop
jmp
movs
nop
out
xor
push
stos
bound
pushf
in
push
cmp
nop
or
nop
add
test
js
cmp
je
and
cmp
or
xchg
push
adc
sbb
adc
and
jb
adc
and
jb
sbb
and
pop
fcomi
sbb
cmp
add
in
sbb
inc
push
in
sbb
nop
lods
sbb
in
test
nop
inc
push
in
and
push
cmp
fs
nop
add
push
and
inc
push
and
and
xor
fsubr
mov
add
sub
sbb
daa
adc
sub
mov
add
jnp
clc
sub
dec
shl
mov
xor
dec
sub
inc
in
add
and
pop
add
in
das
dec
inc
push
in
xor
inc
push
cmp
add
in
adc
or
push
in
cmp
mov
push
xor
or
ins
sub
jle
cmp
add
stos
or
in
push
push
cmps
xchg
loopne
clc
push
rol
sahf
push
fsub
dec
loopne
stc
xchg
adc
fnstsw
mov
add
js
movs
pop
(bad)
stos
mov
inc
add
loop
xchg
shl
xchg
inc
addr16
and
les
call
or
cwde
nop
push
ja
adc
sbb
into
xchg
sbb
sub
cmp
inc
scas
shr
mov
icebp
cmc
xchg
nop
add
mov
sbb
ror
mov
call
arpl
pop
push
and
or
lods
stos
dec
(bad)
mov
push
add
lods
add
mov
cmp
retf
adc
add
loopne
add
sbb
fwait
or
xchg
lods
fstp
add
lds
imul
in
loopne
push
jo
xor
not
in
sub
pop
adc
or
xor
jge
adc
mov
inc
out
nop
mov
inc
popf
nop
and
fimul
call
cdq
or
jb
test
jae
cmp
mov
push
push
jle
xor
cmps
push
mov
pusha
(bad)
pop
fs
cli
fnsave
cmp
shl
add
sub
or
add
sub
pop
inc
mov
pop
cmp
je
dec
pushf
xchg
retf
push
sub
xor
sub
mov
sbb
addr16
ret
cmp
mov
pop
sbb
mov
in
inc
sbb
adc
adc
inc
dec
adc
mov
jmp
inc
fstp
xchg
popf
loopne
pop
mov
call
push
mov
pop
clc
nop
sbb
dec
pop
push
or
adc
fwait
or
lods
or
jp
in
xchg
add
rol
adc
sub
rol
fadd
sbb
cmp
fst
adc
retf
icebp
or
test
adc
adc
loope
in
ret
sub
ins
cmp
jecxz
mov
ins
mov
enter
xor
invd
enter
jmp
bound
sbb
xchg
push
sub
and
enter
in
jb
fdivr
or
and
ss
or
xchg
test
movs
sub
and
lds
loopne
push
call
icebp
and
mov
pop
paddq
cmc
add
pop
ret
adc
aaa
movs
adc
xchg
jl
(bad)
add
sub
aam
loopne
jbe
dec
jo
mov
fbstp
fdiv
cmp
xor
adc
mov
xor
jne
cmp
movs
pusha
inc
push
sbb
and
add
cmp
mov
add
jmp
fwait
popa
dec
and
xchg
dec
push
cmp
sub
mov
sbb
xchg
mov
popa
pusha
sub
sub
or
call
imul
dec
cmp
bswap
jno
loop
xchg
stos
call
add
sbb
push
dec
cs
pop
mov
push
mov
mov
dec
ficom
push
sub
inc
ss
sub
or
xchg
lods
movs
sbb
add
popa
mov
je
and
dec
push
(bad)
add
retf
sbb
lock
fist
pop
jb
fld
das
ins
jne
lods
jmp
lahf
sbb
mov
out
cmp
cmp
inc
or
adc
mov
or
movs
sub
push
movs
fdivr
aam
or
imul
mov
and
or
adc
inc
rcl
or
out
ror
iret
scas
mov
test
icebp
push
xor
sbb
lock
jmp
and
push
add
jmp
pop
jecxz
jno
dec
aas
mov
adc
popf
ins
sbb
cdq
or
jp
aad
test
mov
xchg
daa
mov
mov
adc
push
or
sbb
cmc
aam
mov
lods
adc
add
add
adc
or
add
fst
or
sbb
adc
dec
mov
les
sbb
push
adc
xchg
rcr
or
add
or
repnz
test
or
or
add
and
data16
sub
xor
or
sbb
adc
xor
mov
jmp
je
ja
jne
je
scas
dec
stos
push
push
test
xor
popa
mov
call
or
and
outs
pop
lock
mov
in
push
push
imul
and
inc
jb
pusha
and
ficom
ins
hlt
cmp
pop
mov
jle
push
rcr
ffree
xchg
cmp
ds
ret
or
mov
fidiv
add
arpl
jbe
add
imul
lea
cmp
push
xlat
int3
and
adc
jl
pop
(bad)
(bad)
fldenv
ror
or
loopne
mov
add
add
push
nop
(bad)
and
xor
inc
es
jae
shl
push
add
xor
inc
or
or
inc
push
mov
cmp
fisubr
ret
mov
xchg
test
repnz
test
jae
adc
iret
movs
hlt
in
mov
push
clc
jge
mov
inc
push
add
(bad)
loopne
retf
adc
(bad)
shl
repnz
into
loope
and
inc
sbb
adc
jmp
test
scas
push
test
sub
movs
bound
dec
push
mov
inc
or
xchg
xor
call
mov
(bad)
in
addr16
adc
clc
push
push
mov
aam
ins
shl
add
std
sub
add
fs
push
pop
sub
ret
dec
cmps
out
xchg
and
or
dec
add
mov
cmp
add
fstp
pop
mov
mov
cmps
bound
ja
cmps
lods
push
ins
mov
xchg
outs
adc
stos
(bad)
pop
cdq
mov
stc
push
call
add
push
xchg
add
test
push
xor
pop
push
mov
int3
fiadd
dec
xchg
adc
add
out
lahf
in
test
sbb
stc
je
inc
or
in
popa
inc
xchg
push
inc
outs
movs
repnz
and
das
inc
imul
and
and
push
sbb
call
add
(bad)
movsx
push
call
xor
push
adc
mov
inc
inc
mov
prefetchnta
retf
call
dec
mov
(bad)
cmp
cmp
(bad)
xor
push
(bad)
sub
div
mov
sbb
cmp
jne
inc
inc
cmp
jb
mov
pop
xor
dec
je
add
cwde
sub
shl
mov
jmp
mov
adc
mov
dec
sub
mov
push
adc
push
xor
call
sub
mov
pop
add
mov
mov
push
add
cmp
fcomp
mov
inc
movs
ds
clc
mov
mov
and
add
dec
mov
cmp
pushf
inc
push
fdiv
lock
mov
ret
jge
in
cmp
inc
mov
or
mov
fnstcw
mov
lds
mov
in
dec
(bad)
sti
cmp
je
inc
sbb
xor
ins
add
int3
mov
movs
cmp
out
and
push
or
and
xor
xor
int3
mov
pushf
mov
pop
int
mov
mov
sbb
or
pop
inc
inc
or
sbb
icebp
sbb
or
xor
push
inc
scas
add
or
fadd
aad
push
xchg
ins
popa
scas
clc
mov
xchg
cvtdq2ps
call
add
fidivr
fcmovnbe
or
sbb
data16
push
cmp
push
or
push
cmp
pop
out
jb
jmp
cmp
or
(bad)
cmp
jne
push
pop
data16
dec
(bad)
sbb
lods
add
imul
bound
mov
fwait
push
inc
and
and
push
sub
and
sbb
push
aad
add
add
repnz
movs
fsub
inc
xor
jl
retf
xor
fbld
loope
and
and
adc
mov
sub
cmp
ja
test
add
and
pop
cs
dec
sub
por
loop
ret
pusha
push
popf
jno
rol
enter
mov
call
sbb
test
pop
jbe
test
aaa
gs
and
mov
adc
out
fidivr
adc
mov
mov
pop
adc
xor
inc
shl
adc
push
js
scas
pop
mov
cwde
mov
rol
xor
push
sbb
fsub
mov
les
(bad)
retf
push
cmc
and
ret
xor
outs
dec
sbb
movs
push
pop
lds
dec
scas
test
retf
ds
adc
aad
or
cmp
fbld
push
or
fsubr
push
adc
xchg
cmove
mov
movs
push
add
test
adc
and
ror
sub
push
push
push
adc
sbb
jge
pop
es
push
aaa
ja
jmp
sbb
push
pop
inc
sub
pop
addr16
mov
mov
movzx
fstp
leave
ficomp
sub
out
adc
pop
sbb
and
and
or
out
adc
mov
adc
cmp
mov
js
and
or
adc
adc
fnstenv
mov
lea
dec
adc
push
mov
outs
pusha
xchg
or
pop
fmul
rcr
mov
pand
inc
adc
nop
jb
pop
and
pop
pop
popa
and
inc
push
cmps
jmp
add
adc
mov
mov
test
inc
or
sub
es
and
pop
cmp
pop
and
dec
adc
pop
ret
push
ror
(bad)
mov
and
and
and
cdq
xchg
cmp
rol
lds
xchg
adc
push
mov
leave
(bad)
(bad)
arpl
jge
ins
adc
in
inc
and
add
fcmovnu
xchg
inc
pop
and
and
inc
xchg
adc
sub
sub
rcr
adc
jns
shr
add
call
clc
(bad)
fild
push
iret
xchg
mov
stc
xchg
mov
push
imul
jle
or
jle
leave
cmp
sub
loopne
mov
pop
inc
inc
push
or
xor
inc
add
add
mov
add
(bad)
sar
in
inc
push
es
add
add
add
cmp
pop
ja
xor
popa
loopne
shl
push
rol
mov
pop
jl
dec
(bad)
mov
mov
add
imul
add
or
in
les
sbb
shr
push
fld
aas
arpl
cmp
loop
jne
mov
ret
push
test
out
test
add
call
loope
not
cs
mov
sbb
scas
scas
sub
mov
jmp
pop
out
jmp
xchg
stos
inc
mov
or
inc
imul
adc
fdivp
jmp
mov
nop
sub
fadd
push
mov
inc
pop
push
add
xor
jmp
cmps
jns
int3
test
and
fs
inc
les
ins
iret
xchg
mov
cmp
jg
jae
sbb
in
fwait
cmp
inc
inc
cmp
fdiv
sar
clc
sbb
cs
sar
dec
fnstsw
(bad)
mov
jae
sbb
push
fcom
sahf
pop
mov
push
push
jne
test
add
test
push
push
push
fst
or
jne
pop
jnp
mov
push
and
jne
cmp
mov
or
bound
or
pop
rcr
and
outs
inc
inc
ds
adc
dec
dec
fistp
clc
retf
or
push
jo
add
adc
hlt
mov
pop
or
mov
mov
or
imul
mov
out
mov
jo
mov
test
bnd
cmp
adc
push
jecxz
xchg
(bad)
int3
loopne
and
adc
retf
ret
sub
mov
cmps
mov
adc
sub
pop
sbb
fcomp
sub
call
jge
add
add
ret
jmp
shr
sbb
add
adc
shr
movs
add
mov
gs
xchg
or
dec
rcl
add
push
clc
sbb
adc
xchg
imul
sub
or
daa
aam
neg
in
and
stos
adc
rol
dec
call
push
jb
push
lock
pop
cli
dec
mov
push
add
pop
cdq
fild
sub
push
and
inc
xor
loopne
or
and
sub
dec
pop
mov
jp
leave
lds
popf
cmp
push
into
mov
push
xchg
sub
das
adc
je
sbb
mov
and
sub
cmc
cmc
inc
pop
mov
or
mov
ret
test
imul
mov
aaa
push
adc
fisub
mov
imul
lods
mov
ret
nop
pop
sbb
cmp
inc
(bad)
ficomp
pop
call
sbb
add
mov
ds
enter
push
test
adc
dec
or
stos
call
pop
jle
add
sub
sub
imul
test
stc
xchg
mov
lds
sbb
jo
lahf
mov
fild
push
lods
add
mov
xchg
stos
mov
loop
jecxz
sbb
add
or
jmp
dec
pop
mov
ret
rcr
add
fisttp
mov
cli
add
ret
sbb
sbb
sbb
das
nop
push
inc
push
jns
dec
add
add
mov
or
mov
add
lds
leave
mov
das
add
add
repz
aad
iret
sub
in
or
mov
or
jno
push
mov
mov
mov
mov
clc
outs
jns
imul
scas
sub
inc
push
push
popa
(bad)
call
jmp
pop
inc
pop
push
pop
lock
dec
shl
cmp
sub
cmp
xchg
mov
sub
or
sbb
xor
mov
sbb
lea
rcl
and
add
out
and
add
js
rcr
jmp
bound
xchg
jnp
cmp
jle
xor
and
dec
sbb
sbb
or
xchg
gs
data16
xchg
sub
and
rol
sahf
push
das
es
ret
mov
mov
add
ins
pop
mov
xchg
jbe
add
dec
lock
mov
or
dec
dec
push
xlat
fs
xchg
mov
add
and
leave
dec
sbb
fnstcw
sar
push
mov
cld
rol
add
inc
call
add
rcl
jl
inc
out
imul
(bad)
jns
push
mov
(bad)
clc
or
adc
call
loopne
(bad)
stos
mov
or
xor
cmp
je
sbb
repnz
sub
adc
jnp
or
jge
dec
out
mov
mov
out
mul
inc
cmps
jle
lea
loopne
ss
or
sbb
adc
call
adc
add
xor
add
dec
aam
xchg
iret
mov
push
pop
xchg
inc
jp
(bad)
adc
sub
xor
dec
sub
dec
sbb
shl
xchg
out
mov
or
shr
rol
fnstsw
adc
adc
in
mov
pop
inc
pop
xchg
andnps
int
xlat
mov
pop
push
push
xchg
or
push
test
jl
pop
test
pop
outs
sub
add
jl
push
fnstenv
xor
or
push
dec
cli
cmps
cmc
loopne
push
sub
sbb
div
pop
iret
and
and
fsub
pop
or
neg
mov
mov
mov
clc
push
lahf
lock
mov
adc
and
or
cmp
or
dec
cwde
(bad)
sbb
dec
outs
and
shr
test
add
adc
xchg
mov
imul
xor
mov
dec
inc
cld
or
shl
sub
or
or
pop
ins
(bad)
out
jmp
hlt
ficom
loope
and
push
adc
nop
mov
and
jmp
dec
sahf
push
push
push
scas
outs
jae
push
inc
sbb
pop
and
test
les
daa
xchg
test
je
or
movs
xchg
js
sub
into
iret
push
int
repz
push
stc
stos
rol
add
aas
pop
sbb
adc
daa
push
ret
sar
ja
rcl
dec
cmp
push
add
inc
pop
mov
and
dec
inc
leave
adc
fld
add
sbb
xor
mov
loop
inc
sbb
fdivrp
movs
sub
imul
or
and
fild
sub
ror
inc
cld
push
add
push
pushf
test
or
aam
test
data16
mov
shr
push
movs
nop
sti
aaa
jmp
lock
jae
cmp
je
mov
jmp
adc
mov
lock
ret
or
mov
fld
pop
push
sbb
pop
outs
stos
dec
push
or
ror
xor
add
das
sbb
dec
je
das
dec
loopne
mov
adc
shr
sbb
and
gs
adc
mov
adc
call
adc
adc
inc
sub
mov
sbb
push
adc
pop
inc
cmp
dec
loop
ds
xor
sbb
pop
les
or
push
push
mov
in
ins
popa
inc
sbb
out
test
mov
ins
mov
sti
or
and
in
dec
cmp
pushf
pushf
call
aad
pop
int3
sub
inc
dec
add
sub
push
ret
mov
shl
(bad)
lea
fs
adc
fimul
push
cmp
inc
stos
sbb
rcl
pop
leave
mov
out
mov
rcr
pop
outs
sub
push
mov
fisttp
or
dec
dec
inc
inc
dec
(bad)
jmp
inc
imul
in
sbb
stos
pop
daa
push
jnp
pusha
sub
fstp
mov
mov
inc
es
fsubp
sub
xor
adc
mov
aam
adc
sub
xchg
sbb
jle
fstp
xor
je
inc
sub
test
sahf
jne
jo
push
test
scas
shl
scas
and
dec
adc
(bad)
xor
int
or
pop
shl
pop
dec
jmp
clc
dec
sub
pop
or
ds
cmp
jmp
pushf
add
jbe
pop
sbb
jno
add
jg
je
lds
call
dec
je
adc
fimul
or
push
enter
add
and
je
cmp
call
mov
add
ins
dec
ror
add
jo
inc
xor
mov
loopne
outs
loopne
pop
mov
arpl
mov
fwait
sub
adc
fstp
inc
pop
sub
inc
or
pop
or
or
push
jecxz
aad
lods
pop
pop
sbb
push
outs
shr
or
pop
add
pop
adc
xor
pop
push
pop
movs
pop
add
lds
jmp
push
test
scas
bound
or
jne
ins
mov
neg
adc
cmp
inc
push
jmp
adc
inc
aas
adc
jne
push
add
push
mov
addr16
cmp
jmp
push
imul
adc
add
loope
movs
add
test
call
push
xchg
ret
inc
dec
jmp
movzx
and
and
add
adc
data16
imul
call
push
into
dec
sub
stos
lods
sbb
adc
jmp
push
add
push
dec
xor
inc
mov
dec
pop
sbb
lods
mov
cld
inc
push
push
ret
sbb
lea
add
ja
xor
daa
add
pop
cmp
mov
mov
mov
mov
inc
xor
test
(bad)
aaa
fstp
push
dec
and
cmp
and
movs
inc
fwait
xchg
xchg
inc
inc
sbb
push
dec
fs
sahf
nop
adc
add
and
adc
ret
jl
add
in
xor
pusha
cmp
push
and
ret
fst
leave
rol
adc
imul
push
stos
adc
das
or
aam
dec
out
shl
dec
out
ds
xchg
push
dec
retf
sub
(bad)
push
sti
adc
fidivr
xor
xor
lahf
adc
dec
mov
dec
dec
or
les
push
les
or
mov
mov
adc
outs
add
or
ret
xchg
push
mov
shr
add
inc
add
mov
inc
scas
inc
adc
cld
xor
imul
add
add
fdivrp
mov
mov
inc
adc
or
sub
fwait
add
and
and
add
mov
sti
pop
ja
(bad)
push
mov
push
xchg
add
shl
pusha
mov
mov
add
retf
(bad)
cmp
mov
sbb
pop
push
dec
add
test
and
add
outs
nop
add
in
in
jmp
mov
push
xchg
xchg
js
push
jmp
(bad)
out
add
pop
invd
js
mov
mov
jnp
push
je
dec
cmp
rol
pop
push
(bad)
inc
dec
jae
add
xchg
outs
dec
xor
dec
ror
jo
or
daa
add
pop
fnstenv
push
mov
sbb
dec
mov
test
out
jle
jne
mov
(bad)
add
mov
idiv
mov
lods
out
push
jmp
scas
and
inc
or
sub
add
push
mov
push
sbb
xor
pop
mov
adc
cs
add
mov
cs
sub
xchg
dec
cmp
inc
call
icebp
hlt
out
xchg
and
jbe
loope
inc
cmp
jl
or
clc
xor
ins
xchg
imul
push
fwait
sbb
cmps
mov
cvttps2pi
aaa
and
mov
pop
cmp
dec
in
sub
rcl
cmp
jmp
mov
movs
movs
(bad)
jae
inc
mov
leave
xchg
icebp
pop
rcr
clc
stos
icebp
dec
loopne
jl
dec
movsx
xlat
xor
jmp
xor
mov
push
add
pop
and
pop
cld
(bad)
loop
push
inc
or
push
or
add
pushf
pop
das
and
pop
or
cdq
push
sub
mov
push
push
xchg
mov
out
sbb
es
je
jb
xor
popa
add
dec
call
pop
xchg
xchg
jbe
aam
add
je
test
adc
or
xor
movs
lods
je
or
lds
test
(bad)
fstp
int
sub
cmp
rol
jmp
jecxz
in
sub
enter
addr16
add
add
mov
jae
das
in
imul
mov
sbb
in
push
cmp
xchg
xchg
mov
xor
jmp
repz
adc
lock
and
xchg
shl
jmp
pusha
jb
add
call
imul
jne
in
push
loop
loopne
cmps
in
mov
rol
sbb
cmp
cmp
sub
stos
push
or
shl
fiadd
js
ds
pop
adc
retf
lds
and
and
ret
jo
pop
mov
int
jnp
push
sub
adc
add
adc
adc
aas
pop
movs
mov
popf
call
mov
xchg
push
inc
mov
pop
inc
jp
cld
cld
pop
cmp
enter
dec
and
cmp
xchg
fiadd
out
lahf
pop
mov
and
or
or
cs
push
adc
add
pop
jmp
or
loopne
cli
jl
fst
push
and
push
push
icebp
lock
nop
pop
cli
popa
xchg
push
fs
loopne
(bad)
and
dec
push
inc
adc
shl
sbb
popa
sbb
cwde
test
hlt
fild
rcl
mov
add
cmp
inc
or
or
pop
cli
add
loop
add
push
dec
je
jmp
je
imul
push
inc
je
pop
(bad)
xchg
in
jmp
rol
cdq
(bad)
dec
imul
js
sbb
or
cmp
dec
int
inc
sbb
je
into
xor
inc
cmp
in
or
lock
sbb
dec
int
lea
pop
add
adc
jecxz
push
mov
inc
bsf
push
xchg
pop
je
retf
sub
jl
jns
push
movs
hlt
xor
push
push
inc
call
or
push
or
mov
sbb
sbb
sbb
jmp
jp
rcr
sbb
into
mov
add
(bad)
aam
sbb
add
sub
cmp
lods
and
cli
dec
dec
push
shl
in
or
nop
push
stc
loope
mov
in
in
and
add
sub
daa
dec
cmp
jmp
test
(bad)
out
outs
or
mov
or
push
dec
adc
sbb
cmps
sub
and
inc
fidiv
mov
and
stos
inc
or
add
lods
and
mov
out
out
add
and
sbb
int3
cmp
jns
rol
adc
ret
mov
stc
call
rcl
out
mov
js
lock
pop
jae
jge
repnz
in
add
mov
stc
or
in
inc
add
mul
add
push
mov
inc
xchg
data16
add
pop
sar
mov
enter
inc
jle
test
setne
xlat
xor
aam
ins
mov
mov
sub
mov
(bad)
xchg
sar
adc
add
push
leave
ror
or
movs
inc
add
inc
mov
(bad)
cmc
jge
pusha
adc
sbb
adc
shr
or
pop
idiv
mov
fld
adc
movs
sbb
test
jg
jmp
int
fwait
cs
(bad)
stc
cmp
clc
push
push
rcl
or
mov
pusha
xchg
cmps
push
loopne
mov
out
ret
mov
jne
or
hlt
gs
mov
or
cmp
shl
fwait
dec
or
sahf
lahf
retf
or
mov
sahf
cmp
pusha
or
mov
dec
je
(bad)
imul
inc
jp
or
mov
pop
add
cwde
mov
cmps
adc
push
inc
pop
neg
inc
or
fdivr
(bad)
mov
pop
jbe
pop
js
adc
(bad)
or
shl
jnp
and
mov
inc
cld
push
jmp
arpl
jmp
sar
sbb
add
cmp
stos
cmp
jl
pminub
push
dec
jmp
push
push
fs
fsubr
adc
std
fdivp
cmp
sub
inc
rcl
xchg
cwde
sub
push
or
imul
sub
jp
add
jnp
fdivr
xchg
add
dec
dec
test
sbb
sbb
mov
jo
jne
xor
iret
jne
ret
push
dec
cmp
je
pop
je
cmp
je
cmp
je
cmp
lods
jg
test
and
ss
dec
sub
sub
pop
add
out
pop
cmp
and
jnp
pop
cmp
rol
je
inc
add
je
and
das
jne
cbw
mov
push
dec
cld
or
pop
arpl
(bad)
loope
in
js
mov
sub
mov
xor
add
or
inc
loop
cmps
inc
cmp
push
pusha
xlat
popa
and
sar
push
jecxz
call
mov
lahf
cmp
rol
sahf
push
lock
jo
inc
cmp
add
mov
dec
ret
icebp
pop
xchg
rcr
fldcw
inc
sbb
cmp
popa
fdivr
(bad)
icebp
mov
adc
ret
test
add
pop
sub
or
retf
out
imul
retf
xor
or
pop
mov
push
cmp
(bad)
mov
jnp
mov
les
les
icebp
retf
dec
push
push
sbb
mov
and
pop
xor
(bad)
loopne
cmp
jp
mov
adc
and
xchg
and
push
adc
and
inc
ret
pop
xchg
mov
jb
outs
mov
dec
ret
xchg
cdq
retf
ror
repz
fcomp
push
repnz
fsubr
ret
pusha
push
jb
push
mov
push
adc
sub
xlat
inc
adc
add
sub
or
dec
rol
xchg
ret
push
mov
push
repnz
cmp
out
jbe
leave
or
mov
test
popa
cs
add
fisub
push
in
add
push
xchg
sbb
(bad)
cld
xchg
or
xor
sbb
ins
adc
and
add
push
pusha
xor
push
and
ret
into
push
dec
pop
xlat
mov
ins
xor
js
push
scas
ja
addr16
xchg
jae
mov
sbb
out
fist
enter
push
push
adc
or
push
cmp
lods
popa
and
add
popf
jg
rol
test
jp
add
xor
xchg
lea
aad
loope
jge
arpl
enter
jns
clc
in
in
cli
push
in
fldenv
sbb
inc
mov
cs
jbe
(bad)
xlat
and
jo
add
xchg
and
aas
sti
leave
push
or
imul
cmp
pop
out
xchg
jo
(bad)
push
mov
out
mov
addr16
stc
es
addr16
add
mov
sbb
add
cmp
leave
sub
add
lock
(bad)
(bad)
xor
arpl
add
pop
xor
or
fstp
loopne
cbw
pop
jne
pop
cmp
div
mov
je
dec
shl
jne
das
or
jle
mov
and
jp
popa
div
and
not
inc
mov
cmp
jae
adc
and
inc
ss
lods
xor
js
mov
das
push
call
add
or
pop
mov
out
sbb
xor
add
pop
imul
iret
inc
pop
lods
inc
cmp
mov
pop
loop
sub
je
mov
mov
mov
push
test
or
js
inc
and
inc
inc
add
sbb
add
mov
add
psubw
push
in
inc
adc
and
es
sub
mov
xchg
adc
and
ins
lds
xchg
add
in
inc
jno
pop
icebp
fstp
or
mov
dec
mov
add
shl
or
popf
aam
or
or
addr16
mov
stc
test
out
fbstp
sub
mov
lock
or
push
or
add
rol
int
mov
add
movs
sub
jge
pop
add
mov
andps
dec
in
pop
sbb
rol
(bad)
and
iret
out
test
add
int
or
xchg
pop
in
iret
xor
rol
fsub
ins
mov
aad
hlt
xchg
mov
bound
stc
jmp
gs
dec
xchg
push
push
pusha
or
(bad)
aam
fwait
cmp
mov
enter
and
push
pushf
dec
jne
cmps
mov
int3
mov
inc
mov
sub
add
in
xchg
push
jnp
sbb
lods
mov
clc
push
fisubr
push
mov
and
xor
ret
out
int
pop
jb
mov
push
sbb
push
and
(bad)
fidivr
fs
push
pop
mov
add
pop
aam
inc
inc
add
add
xor
loopne
jne
or
add
imul
inc
test
in
xchg
movs
mov
in
or
mov
inc
push
xor
jo
xchg
and
cmps
mov
xchg
push
jne
cmp
je
inc
daa
xchg
test
mov
xchg
mov
lahf
push
inc
xor
add
arpl
pop
in
and
adc
jg
into
cmp
xor
mov
ficom
xchg
enter
and
dec
into
add
ffreep
xchg
inc
sbb
cs
jne
mov
sahf
mov
push
push
(bad)
inc
ror
loope
jne
add
iret
enter
rol
mov
add
ja
or
lods
inc
pop
nop
jp
jmp
lea
xor
cmp
mov
push
int3
push
jmp
test
ds
sbb
sbb
mov
and
cmp
jbe
sbb
scas
xchg
and
sub
jmp
lahf
leave
push
and
push
or
fcmovnbe
iret
test
or
rcr
mov
add
sub
int
inc
dec
shl
xor
cmp
or
inc
xor
dec
mov
pusha
and
and
stos
dec
or
cdq
push
and
dec
fsubr
inc
mov
inc
jmp
in
jne
xchg
not
jmp
adc
test
inc
in
cs
push
fs
mov
dec
fcmovu
jmp
or
sub
pop
pop
or
mov
loop
pop
dec
cmp
push
xor
or
fistp
push
sub
add
ss
or
sbb
mov
movs
dec
and
call
add
push
or
dec
arpl
adc
and
sub
xor
cmp
test
sahf
clc
dec
ret
add
adc
or
loop
aas
adc
mov
scas
sub
mov
cmp
sar
imul
add
cmp
sub
pop
mov
mov
xor
test
lea
adc
stos
jo
sub
mov
ds
je
jmp
std
pop
rcl
test
aaa
xchg
ror
inc
push
cmovno
or
scas
rcr
mov
dec
xchg
or
daa
mov
dec
mov
mov
and
and
imul
dec
js
mov
imul
movs
inc
shl
mov
jmp
or
xor
aaa
or
xor
push
inc
repz
xchg
add
jge
pop
adc
stc
in
ins
jge
mov
aaa
or
xchg
aas
pop
test
add
sub
jb
mov
pop
pushf
lahf
mov
ret
aaa
or
xor
ret
stos
adc
sbb
sbb
adc
sbb
cmp
enter
cmp
sbb
xor
loopne
mov
mov
jmp
dec
inc
rol
cmc
lea
adc
jnp
cmp
mov
cli
sub
push
icebp
inc
int3
sbb
push
cmp
xchg
push
ins
pop
loopne
sub
mov
cmp
or
(bad)
push
mov
fnsave
jp
pop
fcomp
ftst
leave
and
and
add
adc
leave
call
or
fsub
xor
dec
inc
sbb
pop
add
dec
test
test
imul
and
sub
retf
(bad)
outs
xchg
xor
cmp
in
scas
loop
pop
cmp
jb
dec
enter
jb
or
push
test
je
push
in
pushf
pop
ret
push
xor
mov
loop
(bad)
inc
cmp
scas
outs
shl
push
leave
mov
mov
std
xchg
pushf
je
pop
test
and
call
push
adc
in
adc
leave
xor
aam
js
movs
loope
in
cmp
xchg
dec
push
or
or
arpl
or
push
pop
jb
nop
adc
or
in
jo
or
dec
rcl
adc
gs
movs
lods
add
xchg
pop
and
mov
adc
movs
adc
jp
adc
ss
add
mov
mov
sbb
pop
cmps
or
or
jg
mov
push
call
repnz
add
in
sbb
ja
inc
mov
aaa
add
jbe
mov
int
jecxz
mov
sbb
xor
jl
mov
outs
inc
sbb
xor
add
lods
jo
(bad)
or
daa
(bad)
mov
mov
mov
xor
lds
add
loopne
jb
cmps
push
push
mov
cs
in
cmp
(bad)
je
or
mov
inc
fisubr
xor
adc
mov
movs
mov
lea
hlt
and
dec
enter
in
pop
sub
jae
jg
mov
jbe
mov
into
jmp
mov
sbb
push
sbb
icebp
mov
sub
push
cld
push
mov
movs
dec
add
add
shl
inc
and
imul
call
cmp
sub
sbb
push
inc
cmp
data16
push
push
shl
push
repnz
stos
and
add
ror
mov
mov
push
or
jne
hlt
imul
sub
pop
mov
mov
jo
jle
ret
push
out
pop
and
jbe
dec
mov
adc
loop
jno
mov
(bad)
dec
cmp
sbb
mov
sbb
imul
das
add
retf
cld
mov
sub
jne
cwde
xor
jg
push
pop
cmp
jge
add
cmps
or
xor
cwde
inc
mov
mov
mov
add
je
(bad)
aas
xchg
imul
inc
dec
je
adc
scas
bnd
sbb
push
(bad)
xchg
pop
(bad)
jle
or
sbb
sbb
dec
push
ret
add
sub
ins
cli
push
jmp
push
add
cmp
jmp
jb
pop
add
push
push
jmp
(bad)
int3
into
sub
call
cmp
jns
fisub
lea
add
and
repnz
cmp
sub
je
jb
stc
movs
jp
cmp
inc
clc
add
mov
les
inc
inc
push
sbb
adc
repz
cmp
xor
jo
in
dec
inc
leave
(bad)
push
mov
sbb
fsubr
dec
lea
repz
mov
(bad)
shl
(bad)
stc
lea
push
push
push
ins
int3
lea
jae
fldenv
popw
add
lods
jne
inc
in
mov
dec
test
jne
xor
mov
repz
jne
jecxz
in
jne
add
ret
jg
inc
sub
int3
mov
icebp
push
sub
sbb
add
lods
adc
mov
jecxz
or
sub
(bad)
or
jno
mov
mov
add
inc
xchg
cmp
ja
js
and
push
and
push
cmps
in
popa
push
dec
stc
add
and
adc
imul
es
cmp
jns
jle
stos
sahf
and
dec
adc
cdq
mov
data16
add
test
or
dec
pop
test
mov
call
and
ficomp
(bad)
shl
fmul
sbb
mov
mov
jge
xchg
mov
mov
or
or
and
lods
jle
add
js
ins
push
xor
dec
loop
adc
mov
popf
sbb
add
push
cwde
or
mov
mov
inc
movs
movs
pop
fcmovnu
dec
aam
inc
movs
adc
sub
mov
ins
add
mov
fimul
sub
ret
or
cmp
mov
imul
adc
pop
fld
shl
push
or
pop
or
(bad)
(bad)
dec
adc
in
cmp
cdq
cli
retf
lea
mov
cmp
je
mov
add
shl
rcl
push
repz
pop
cmp
inc
icebp
fcomp
fild
(bad)
aaa
push
addr16
xchg
sub
cmp
sub
and
jmp
shr
sbb
ror
ror
sub
mov
cs
mov
adc
add
and
mov
(bad)
ror
cmps
loopne
push
cmp
xchg
pop
xchg
mov
push
imul
xor
or
dec
jmp
pushf
push
lea
(bad)
pop
mov
rep
mov
sbb
fsubr
stos
push
rol
nop
sub
iret
xor
pop
cmp
fdivr
shl
lods
mov
sbb
add
cmps
out
sahf
sbb
nop
pop
inc
push
pop
cmp
and
push
call
cmps
sub
and
cmp
in
out
xchg
aas
push
stos
shr
xor
mov
(bad)
and
jae
push
fst
arpl
cdq
enter
or
cmp
loopne
pop
sbb
retf
dec
es
adc
or
cmc
call
mov
jp
movs
pop
add
mov
shl
scas
xor
or
pop
(bad)
int3
sbb
pop
mov
cmp
sub
int3
mov
int
cmps
test
add
mov
inc
test
aaa
sbb
xchg
push
push
push
cmp
ins
mov
retf
ins
scas
add
test
aam
je
cdq
adc
aam
xchg
outs
add
lea
loope
(bad)
mov
and
cdq
xchg
pop
add
or
paddd
push
add
or
cld
(bad)
in
jmp
mov
and
sub
cs
cmp
push
cmp
dec
and
add
add
push
push
push
xchg
mov
fnstenv
push
push
rcr
cmp
cmp
cld
cld
and
gs
jmp
xor
jne
(bad)
pop
lock
out
inc
cmp
push
in
xlat
test
js
clc
xchg
mov
sar
push
lock
xor
mov
xor
stos
adc
or
fs
sbb
pop
xchg
loopne
or
pop
pushf
movs
ja
inc
add
daa
pop
or
std
jb
das
stos
push
push
test
xchg
sub
xor
xchg
sbb
or
jmp
push
rcr
pop
sbb
and
sahf
loopne
shl
cmp
jb
mov
pop
mov
xchg
mov
mov
jae
pop
shr
and
adc
inc
sub
cmp
dec
sub
add
pop
fisttp
cmp
lds
pop
jne
test
stos
cwde
loope
js
pop
lea
in
mov
push
xchg
sub
je
mov
pop
aas
jmp
int3
pop
jne
xor
mov
ret
mov
or
outs
jg
cmp
add
pop
jmp
imul
jge
xlat
sub
jmp
xchg
mov
add
data16
push
adc
retf
mov
pop
cmp
push
push
nop
and
das
xchg
xor
mov
push
mov
jno
adc
push
jnp
fs
add
push
cmp
sub
and
test
test
and
(bad)
fild
mov
or
outs
ror
jb
push
jno
dec
jmp
sti
lock
pop
bound
mov
ds
pop
add
fs
add
pusha
dec
xchg
adc
pop
or
mov
test
cmp
cmp
and
xchg
(bad)
cmps
sub
inc
das
loope
sbb
or
jo
les
(bad)
jge
hlt
xor
pop
sub
and
dec
dec
sub
idiv
push
fwait
and
push
add
push
xchg
or
jg
xchg
int
mov
jmp
and
cdq
retf
fwait
repnz
jne
mov
add
push
and
sub
rcl
das
sbb
cdq
push
cwde
mov
pop
sub
ins
xlat
outs
mov
(bad)
pop
inc
dec
add
out
pop
and
retf
rcr
or
dec
pop
mov
mov
jno
shl
sbb
popa
jmp
adc
(bad)
jne
and
adc
add
mov
add
adc
in
jl
xor
rcr
and
mov
add
inc
mov
imul
mov
mov
ja
jne
jne
jl
repnz
inc
sub
pop
or
cs
push
push
xor
dec
sbb
pop
push
push
sub
push
and
sub
sub
mov
cmp
xor
adc
xor
mov
pop
add
lods
(bad)
xlat
sbb
or
fcomp
push
(bad)
lock
fidiv
xchg
xchg
loope
add
(bad)
pop
sub
pop
cmp
pop
sub
je
jne
aad
dec
pop
push
mov
jge
movs
mov
and
xlat
popa
mov
or
aad
sbb
xchg
int3
or
xchg
aas
fisub
(bad)
loop
scas
mov
test
add
mov
or
xlat
adc
in
push
and
(bad)
pop
not
adc
sbb
pop
jmp
and
sbb
or
cmps
push
xchg
and
mov
adc
add
in
cdq
sbb
ja
loop
xor
mov
dec
cmp
push
mov
arpl
mov
call
imul
adc
lea
sub
push
shr
rcl
test
sub
cmp
cmp
xchg
(bad)
and
enter
ins
call
or
retf
bound
test
and
or
jp
outs
add
int
or
or
dec
pop
imul
lock
dec
jbe
jo
dec
adc
push
and
jecxz
pop
dec
das
mov
sub
xchg
mov
push
aas
scas
inc
cmp
ret
sub
sbb
imul
lea
or
push
ud1
idiv
in
dec
enter
in
sbb
in
add
or
in
add
in
es
or
in
es
or
adc
in
es
adc
es
adc
adc
in
sub
in
es
adc
es
es
in
cmp
in
es
sbb
inc
sbb
and
adc
pusha
and
bound
push
cmp
inc
push
fs
sbb
push
and
fs
push
push
fs
push
pop
dec
mov
gs
in
mov
pop
xor
mov
je
inc
cs
and
(bad)
lea
stos
push
ret
add
repz
inc
jne
push
inc
cmp
dec
sar
mov
sub
push
add
rol
mov
xchg
add
pop
adc
sub
ror
push
and
sbb
push
mov
aam
stos
sub
nop
add
ja
popf
cwde
push
sar
add
repnz
dec
cmps
add
adc
les
adc
popf
popf
pop
or
bound
jne
add
sub
push
dec
stos
movs
lods
pop
adc
fimul
ret
aam
inc
call
lods
stos
mov
inc
sbb
or
pusha
xchg
mov
add
enter
sub
adc
push
repnz
add
fmul
mov
(bad)
mov
xor
aas
fdivr
cmp
data16
or
es
push
add
sti
cmp
mov
xor
leave
wrmsr
inc
mov
sub
push
stos
mov
mov
lea
or
nop
pmaxub
mov
pushf
mov
mov
mov
xlat
push
pop
jb
or
repz
repz
cmp
call
or
shr
in
in
outs
jb
or
imul
out
lea
lods
jae
sbb
loope
cmps
aas
adc
jmp
jno
cmc
ret
push
add
or
adc
in
outs
adc
jne
jo
mov
xchg
mov
aas
pop
into
jmp
sbb
inc
ret
pushf
pop
xchg
out
ja
or
mov
ins
xchg
mov
repnz
or
xor
loopne
dec
or
sub
pop
cmp
mov
dec
cli
xchg
and
push
cmp
sbb
xor
test
lock
mov
and
jmp
mov
not
stc
bound
mov
jne
push
sub
push
or
fldenv
push
add
jb
stc
mov
add
dec
xchg
pushf
add
loop
xchg
or
dec
fsub
sub
cdq
mov
sub
mov
icebp
xor
mov
retf
stc
pop
movs
loopne
adc
adc
leave
stos
lea
xchg
and
sbb
loopne
scas
pusha
jb
ins
sub
pushf
dec
dec
ins
mov
adc
jne
dec
out
shr
call
ror
add
push
mov
outs
sub
sbb
xor
mov
dec
push
xor
dec
pop
pop
rcl
pop
jo
sub
aaa
lods
stos
mov
imul
ds
push
std
xor
pusha
xor
pop
popa
jb
xor
jne
and
xor
pop
sub
xchg
and
ret
and
ss
mov
push
xor
cmp
mov
cmp
xchg
dec
repnz
lds
ss
xor
sbb
(bad)
and
add
and
xor
inc
xor
inc
inc
xchg
dec
leave
aam
inc
inc
or
sbb
inc
lahf
and
test
repz
mov
in
push
leave
add
push
aam
add
xor
sbb
pop
aaa
inc
xor
sbb
call
sbb
add
cmp
add
test
mov
push
mov
dec
dec
pop
and
and
aam
jge
dec
and
dec
push
loopne
in
push
les
dec
cs
jmp
shl
test
inc
inc
or
or
dec
fcom
pop
aad
pop
jecxz
jge
iret
or
pop
push
and
push
fldenv
and
sbb
xchg
push
mov
jo
or
fdiv
and
dec
and
add
sbb
(bad)
loopne
xor
push
(bad)
movs
push
add
loopne
mov
mov
dec
push
fwait
mov
and
add
(bad)
lock
or
inc
or
imul
imul
pop
imul
add
inc
sub
nop
add
repnz
outs
pop
(bad)
jbe
ja
sub
and
fmul
sbb
fs
jne
and
loope
sbb
pop
out
add
jne
rol
inc
and
popa
push
ss
popa
loope
cmp
sbb
mov
push
stos
adc
cmps
xor
lea
sbb
pusha
push
push
jo
out
mov
lds
mov
out
and
arpl
dec
loopne
addr16
lahf
shr
inc
xor
into
outs
leave
test
mov
dec
pop
adc
icebp
cmc
es
mov
popf
clc
(bad)
imul
jne
in
adc
sbb
retf
sbb
or
iret
popf
mov
jle
pop
push
or
or
or
add
inc
mov
add
sbb
jl
fild
jb
jo
sbb
or
and
out
jmp
adc
mov
and
ds
loop
ret
je
add
sub
adc
sub
mov
pushw
(bad)
jl
and
inc
inc
ja
pop
ret
lock
popa
lea
clc
mov
inc
add
stos
cwde
adc
jno
add
movs
lock
aas
adc
add
push
dec
in
push
test
add
popa
test
add
push
stc
fmul
push
add
lea
xchg
mov
dec
adc
(bad)
cmps
push
mov
lea
das
xor
mov
stc
pop
jmp
inc
push
nop
adc
lahf
les
popa
sahf
and
xchg
sbb
pusha
cmp
xchg
seta
jne
aaa
in
movs
push
xor
push
jae
fadd
dec
lock
inc
xchg
call
sbb
add
adc
ja
je
int3
call
sbb
je
and
add
dec
adc
jne
jbe
dec
push
pop
pop
jg
loop
jmp
test
jno
jb
mov
adc
or
jle
xor
jmp
and
mov
aaa
mov
adc
fstp
xchg
je
add
jmp
push
loope
jmp
or
retf
cwde
jmp
pop
jmp
or
int3
adc
push
int
popa
add
ret
cmps
popa
shl
sar
push
xchg
dec
fsub
es
test
pop
ror
cmp
ja
jmp
dec
xchg
cmp
sbb
jmp
or
jmp
cwde
jmp
ins
push
scas
pop
mov
aam
jmp
pop
(bad)
push
push
or
iret
fisttp
inc
mov
iret
repz
fucom
jmp
push
xor
scas
cmps
dec
inc
mov
arpl
es
xor
pop
inc
lods
push
add
jg
and
inc
jmp
aad
sub
sbb
and
pop
into
inc
(bad)
les
add
jae
cmp
mov
or
adc
daa
cld
or
sar
fs
push
imul
ja
clc
push
mov
push
add
push
push
push
fild
xor
jl
cmp
and
pop
popf
inc
lds
jle
rcl
inc
push
outs
mov
xor
mov
adc
jae
pop
add
retf
or
and
push
pop
dec
add
(bad)
lds
test
rcr
dec
cld
popf
push
dec
jle
add
or
inc
cmps
dec
call
and
inc
jb
call
das
mov
std
call
and
imul
bound
ror
inc
out
dec
or
adc
add
add
adc
scas
cmp
adc
test
ror
leave
and
jb
adc
push
rol
push
sub
mov
xchg
lods
jne
sub
bound
in
or
cmp
sbb
sbb
xchg
push
pop
xor
mov
adc
dec
or
push
push
packssdw
pop
dec
in
(bad)
test
xor
js
test
call
jecxz
mul
in
sub
test
and
enter
retf
or
push
fs
xor
add
push
jmp
inc
or
imul
push
adc
sbb
dec
mov
add
int3
sbb
or
imul
or
adc
loopne
std
push
mov
cmp
dec
imul
add
shl
aas
mov
dec
inc
push
add
dec
jne
fild
fdivr
add
outs
adc
mov
pop
test
mov
xor
les
lahf
cmp
add
sub
shl
dec
shl
fiadd
(bad)
add
stos
cmp
mov
jg
jbe
mov
pop
sar
in
xlat
inc
xor
or
dec
out
movs
push
xchg
or
popf
xor
sbb
mov
xlat
or
repnz
fmul
mov
scas
call
add
mov
or
sbb
pushf
cmp
push
iret
psubw
jl
sub
loopne
add
in
jl
jnp
out
push
cmps
mov
iret
test
mov
sti
xor
out
and
aam
adc
call
or
ins
mov
xor
ret
cmp
xor
or
cmc
add
inc
aam
sbb
jle
pop
sbb
push
les
mov
sub
jecxz
fidiv
or
jl
ror
jmp
mov
pop
push
push
mov
pop
adc
push
test
jecxz
adc
add
ins
mov
add
mov
cmc
push
pop
das
pop
out
and
call
call
pop
ins
jo
(bad)
dec
mov
pop
in
push
mov
adc
cmp
es
jmp
add
jbe
mov
stc
(bad)
(bad)
sti
jg
jo
push
stc
jo
jp
mov
jmp
ins
add
sub
dec
push
xchg
add
xor
aas
add
out
and
mov
ret
jmp
int3
cmp
sbb
out
xor
add
ret
jecxz
xor
mov
jo
push
adc
push
add
sbb
jl
push
ins
push
adc
pop
mov
jg
mov
push
rol
inc
cmc
and
xor
dec
inc
sbb
das
jne
fisub
inc
and
adc
sub
dec
es
inc
mov
call
push
push
mov
rcr
xchg
add
test
pushf
fld
xchg
mov
add
movs
xor
icebp
int3
xor
push
(bad)
ins
test
mov
add
lock
inc
add
stos
es
pushf
les
fmul
inc
repnz
cmp
lds
stos
cld
rol
pop
daa
dec
pop
fucomp
int3
add
sbb
enter
enter
and
pmaxub
in
in
test
and
fimul
out
fimul
cmp
call
or
sub
or
mov
or
adc
push
popf
cmp
shl
add
or
pusha
sub
or
aam
imul
pusha
mov
(bad)
cmp
imul
xchg
pop
dec
mov
out
imul
lahf
mov
cmps
out
push
mov
lea
inc
jecxz
loopne
mov
dec
loopne
jl
jnp
enter
enter
arpl
sbb
xor
or
mov
or
push
push
rcr
dec
add
mov
ss
dec
and
lods
add
sub
adc
hlt
imul
and
adc
icebp
adc
adc
adc
cmp
adc
add
or
add
add
nop
or
sahf
in
add
dec
xchg
xchg
or
add
icebp
mov
xlat
sar
add
jmp
and
and
or
adc
adc
adc
mov
ret
sbb
test
pop
pop
cdq
mov
cmp
lea
ins
pop
enter
sbb
jmp
in
shr
mov
adc
push
add
inc
es
jecxz
in
fmul
test
jecxz
sbb
push
push
hlt
xor
cld
lock
add
push
int3
loop
loopne
pop
xchg
jb
ret
sub
fcmovnbe
adc
and
push
mov
mov
push
adc
(bad)
sti
js
mov
inc
mov
popf
mov
in
push
je
icebp
jmp
in
push
and
lea
sub
leave
add
dec
fdiv
test
or
pop
cs
mov
cld
xor
aaa
dec
push
mov
xchg
push
test
sbb
ins
adc
pop
jecxz
jns
xchg
and
aam
dec
cs
jge
fsub
push
xchg
in
shl
or
inc
call
adc
(bad)
out
adc
push
mov
push
sbb
inc
dec
mov
or
and
mov
popa
add
xchg
cmp
aam
add
enter
pop
aam
les
lds
adc
scas
mov
pop
jmp
addr16
fcom
nop
sbb
dec
xor
mov
mov
dec
jl
ret
or
cwde
pop
popa
push
adc
dec
call
mov
test
cld
cli
fdivr
fdivr
mov
mov
mov
test
xor
mov
add
clc
mov
call
mov
inc
repnz
mov
sbb
push
dec
gs
pop
push
mov
mov
std
rcr
push
pop
test
sbb
(bad)
in
adc
out
mov
inc
mov
sbb
cdq
fs
push
ins
push
and
mov
test
mov
les
add
leave
and
shl
frstor
cdq
or
mov
in
ja
and
push
jo
sbb
sbb
sbb
nop
dec
mov
in
pop
or
push
int3
push
test
test
cmp
sbb
call
inc
mov
out
dec
ins
loopne
add
cmp
inc
mov
pop
sub
pop
cmp
je
bsf
into
mov
dec
aad
bound
inc
test
test
call
enter
aam
adc
sbb
adc
inc
adc
imul
push
pop
dec
sbb
fdiv
movs
mov
add
adc
mov
and
lods
jnp
sub
icebp
mov
repnz
mov
pop
jb
pop
pop
pop
pop
or
iret
sub
push
dec
scas
add
call
cdq
fs
arpl
daa
cmp
mov
rcr
and
mov
mov
addr16
sbb
jge
sahf
xchg
push
arpl
rol
aam
int3
xchg
(bad)
enter
stos
ror
or
mov
lds
sbb
sub
inc
inc
push
adc
loopne
adc
and
add
sbb
aaa
sti
pop
xor
xchg
or
cmp
xor
jb
cmc
adc
inc
cs
fucomp
in
dec
pop
mov
cmp
push
and
or
test
sbb
xor
push
fbld
hlt
clc
cmp
jb
and
cmp
add
dec
adc
int3
jbe
inc
mov
rol
xor
std
sub
mov
pop
xchg
cwde
aam
rcl
push
shr
lods
xchg
add
jbe
or
jae
adc
cmp
clc
fld
mov
add
push
mov
or
shl
pop
sbb
push
fs
adc
div
or
cmp
loopne
rcl
mov
add
sub
sub
adc
xchg
ss
loop
imul
adc
push
xchg
popf
lods
push
and
fdiv
pop
or
push
push
lock
adc
cli
push
in
cmp
mov
push
push
fdiv
jo
sbb
cmp
ja
daa
mov
je
cmp
repz
jbe
inc
push
xchg
xchg
or
adc
stc
lock
pop
sbb
sub
push
idiv
xor
je
out
loopne
jns
adc
cmc
push
inc
ror
adc
xchg
or
lea
pusha
jns
dec
push
jb
xchg
xchg
lock
mov
add
arpl
or
leave
mov
retf
mov
rcl
adc
adc
cdq
push
adc
sbb
popa
jmp
cwde
cdq
gs
cmp
pop
add
jno
push
ss
inc
add
add
cmp
shl
mov
push
and
and
xlat
rcr
pop
or
add
sar
test
test
cs
push
ja
mov
les
movs
or
jecxz
xor
js
push
or
jnp
arpl
test
add
xchg
xchg
add
out
pop
mov
in
pop
cdq
mov
or
add
and
mov
shl
push
dec
mov
and
fsubr
lock
add
pop
jae
mov
mov
sbb
ret
inc
clc
imul
jo
ins
mov
call
test
daa
das
cdq
jg
fs
cwde
(bad)
pusha
in
sub
in
add
and
sbb
push
cmps
inc
imul
js
sbb
lock
cmp
inc
cmps
or
cmp
mov
adc
sbb
xchg
leave
sti
push
fcom
push
xchg
in
(bad)
jne
inc
inc
push
add
push
mov
mov
out
fisub
je
add
add
cmp
mov
imul
pop
and
xchg
or
add
cmp
sbb
sub
mov
inc
adc
mov
or
ret
inc
cmps
scas
dec
jne
pop
xchg
pop
pop
shl
xor
pop
lock
pop
jno
push
push
and
ret
or
mov
xor
lea
push
mov
out
add
out
and
loop
outs
std
inc
cmp
jb
pop
dec
dec
mov
cdq
je
ret
add
data16
jmp
nop
daa
cwde
push
test
out
push
push
leave
mov
sub
dec
and
mov
dec
sbb
mov
sub
out
movs
daa
xor
std
push
lea
dec
pop
dec
fcom
push
test
jns
add
hlt
xchg
lods
mov
or
sub
or
lahf
dec
jbe
dec
mov
in
pop
aam
dec
push
fimul
stos
jl
dec
adc
xlat
or
loopne
clc
cld
sbb
add
cs
ins
gs
sbb
dec
aam
pusha
adc
push
in
test
dec
in
(bad)
push
enter
dec
xor
rol
or
std
sbb
add
mov
rol
lock
fcmove
or
(bad)
jg
enter
nop
push
xor
ror
ins
and
je
test
fsubr
stc
push
push
and
(bad)
and
and
cmp
pop
xchg
dec
lea
push
cdq
fs
and
cld
and
ins
push
xor
and
xchg
sbb
dec
aaa
leave
mov
sbb
mov
inc
mov
jb
push
test
dec
adc
sub
call
push
adc
xchg
out
xchg
out
adc
ja
out
push
and
push
cdq
or
or
push
or
hlt
std
in
retf
mov
dec
test
dec
add
adc
push
sbb
xor
mov
add
xchg
sub
test
test
pop
fdiv
imul
not
gs
or
xchg
in
mov
rcl
jnp
xchg
shl
inc
ret
or
mov
add
xchg
cmp
fild
rcr
mov
ja
cwde
fld
or
pop
call
or
cli
dec
lods
mov
rol
movs
sar
xor
xor
repz
xor
push
call
and
inc
ss
or
cmp
jb
add
mov
and
aam
add
and
aam
jns
and
jmp
jecxz
je
mov
aam
stc
adc
outs
cmp
add
(bad)
aaa
and
stos
and
adc
mov
jo
loopne
xlat
dec
add
add
xor
adc
mov
rol
es
add
ins
stos
inc
movs
push
mov
inc
sbb
fwait
push
pop
and
push
ror
and
or
fcom
jns
push
fistp
(bad)
std
ins
imul
push
cmp
loopne
ins
or
clc
test
inc
and
jne
and
pop
push
mov
out
sbb
or
cmp
adc
inc
shl
sub
push
or
jae
std
in
pop
push
mov
jl
add
in
rol
push
in
or
inc
adc
cwde
sub
mul
mov
push
jmp
push
jnp
retf
and
adc
jge
mov
push
div
or
in
dec
outs
repnz
push
cwde
add
adc
mov
hlt
mov
repnz
adc
xchg
dec
xor
test
adc
xor
add
pushf
mov
fdiv
in
push
mov
hlt
add
xchg
xor
test
xchg
jbe
lahf
adc
adc
push
mov
shr
sahf
push
and
push
xor
stos
push
leave
shl
or
push
sub
jmp
push
dec
push
dec
or
inc
sub
sbb
add
or
inc
adc
pop
push
add
add
mov
or
and
pop
dec
inc
mov
inc
in
mov
lock
jl
setp
adc
out
es
push
add
add
retf
fild
out
in
add
mov
or
and
cmps
add
popa
shr
sti
rol
add
fcomip
and
loopne
pop
mov
pop
push
loopne
mov
jae
stc
push
or
sbb
jb
add
vmovaps
mov
fcomp
or
pop
inc
aas
repnz
mov
add
jge
push
pop
cld
push
and
repnz
jae
sub
adc
cmp
cld
outs
leave
ret
or
sbb
sbb
and
jnp
sbb
mov
sbb
in
and
cmp
pop
pop
adc
(bad)
mov
and
or
fwait
or
and
cmp
xchg
pop
or
add
inc
sub
xor
add
jno
dec
sbb
jge
sub
mov
sub
sbb
inc
mov
inc
inc
(bad)
enter
add
aaa
add
sub
push
cwde
push
jae
push
sub
xchg
sub
inc
shl
ret
loope
aas
in
add
add
push
hlt
mov
and
stos
imul
sub
adc
push
loopne
les
or
outs
mov
jg
dec
mov
add
movs
ja
addr16
pop
push
mov
adc
in
adc
sub
neg
leave
or
inc
or
add
add
fist
mov
aad
sbb
fiadd
(bad)
jb
aam
ror
iret
ror
push
ror
jl
jmp
push
or
cmps
sub
cmc
sbb
push
ins
pusha
pop
retf
adc
jb
adc
pushf
add
or
jl
jl
lea
ins
loope
sbb
and
neg
test
ret
sub
ins
popa
adc
mov
and
cdq
into
imul
push
cmp
dec
xor
lds
and
add
add
inc
or
cmp
add
out
mov
mov
cmp
icebp
or
push
and
mov
iret
xchg
sub
add
sub
cmp
push
push
std
es
dec
xchg
lods
mov
or
or
jg
add
push
mov
fld
pop
sub
add
sub
add
shr
mul
add
call
inc
and
jne
dec
xchg
add
adc
add
(bad)
cmp
pop
test
adc
call
mov
pop
push
and
add
jmp
or
fisubr
pop
shr
push
sub
sub
add
inc
and
xchg
inc
add
jl
sub
add
add
sub
mov
adc
pop
jl
inc
and
cmp
and
les
test
sub
stos
or
add
in
xor
call
nop
xchg
cwd
push
cmp
push
addr16
xchg
add
pop
ror
mov
sbb
dec
pop
rol
pop
shl
in
mov
and
xchg
mov
sub
cmp
xor
add
adc
mov
outs
push
and
pop
out
jae
leave
dec
pop
bnd
push
dec
cmp
pusha
lods
adc
dec
and
stos
or
sbb
sbb
imul
sahf
xchg
cmps
push
push
add
sub
xchg
mov
add
adc
(bad)
fld
test
jnp
daa
add
pop
or
dec
jg
nop
pop
add
cmp
xchg
add
enter
jl
cmp
repz
xchg
cmp
test
add
pop
sub
maskmovq
test
add
in
add
cmp
add
nop
das
add
and
add
leave
xchg
and
in
enter
cmp
test
sbb
std
adc
arpl
or
loopne
mov
daa
in
add
sbb
cmp
ret
dec
and
add
cmp
jnp
cmp
cmp
add
xchg
pushf
jl
add
cmp
test
add
mov
movzx
les
mov
or
push
(bad)
mov
or
jmp
shl
pushf
not
clc
and
or
loopne
push
in
jmp
lds
add
and
xchg
add
pop
xlat
and
jnp
frstor
add
(bad)
add
pop
or
xor
jmp
sar
mov
xchg
add
and
adc
sbb
or
adc
fild
inc
dec
jmp
outs
out
and
mov
jo
test
dec
push
mov
jl
ror
push
and
mov
dec
mov
mul
lea
cmp
test
sahf
or
xlat
or
mov
xchg
add
push
xor
push
pusha
loopne
push
sub
ror
mov
adc
sub
or
jne
fcomp
fsub
inc
add
push
ins
rcr
xchg
mov
je
call
inc
add
xor
add
pop
ret
imul
adc
pop
sti
loop
push
call
retf
push
inc
fimul
mov
pusha
adc
sbb
test
push
ja
add
mov
inc
aas
int3
mov
push
lock
imul
sbb
dec
xor
movs
lea
mov
adc
jmp
xor
push
push
fbstp
jmp
test
xchg
sub
inc
inc
xor
sti
fmul
sbb
inc
cmps
aam
dec
or
add
jo
add
add
pop
das
pop
sahf
push
mov
add
push
lahf
int
lea
xchg
push
cmovge
mov
aaa
pcmpgtd
loop
jbe
xchg
xchg
arpl
or
and
push
retf
sub
jp
(bad)
in
pushf
test
nop
or
test
jmp
jno
fld
push
sti
out
inc
ins
jns
shl
fstp
jmp
add
add
dec
pop
sub
xor
addr16
sub
retf
push
push
xor
mov
push
pusha
sub
push
push
push
nop
sti
jae
inc
xor
push
jp
push
add
adc
inc
fs
mov
aaa
and
cdq
les
xchg
retf
mov
sub
pop
lds
nop
dec
mov
inc
mov
push
iret
les
popa
sbb
pop
dec
xor
push
xchg
addr16
jnp
and
sbb
push
sbb
enter
rcpps
loope
inc
ins
iret
in
cs
mov
ins
push
sahf
cmp
in
rol
xchg
cmp
and
pushf
bound
in
jae
add
mov
cmp
push
add
ins
or
rol
pop
inc
fist
lods
inc
push
mov
jecxz
or
in
add
pop
dec
push
xor
push
enter
jge
inc
adc
lods
xchg
das
xor
adc
adc
in
xchg
adc
lea
adc
rol
jle
(bad)
ror
mov
inc
je
adc
push
jmp
xchg
jle
loope
loopne
xlat
inc
mov
pop
jo
outs
imul
lea
ins
in
pop
xchg
std
fild
mov
pop
adc
lea
cmp
add
push
movs
cmp
adc
push
push
and
xor
jecxz
neg
enter
xchg
pop
add
jmp
or
dec
sbb
xor
imul
pushf
scas
popf
rcl
mov
mov
pop
adc
jecxz
aaa
add
or
push
sbb
sbb
dec
push
outs
out
add
adc
pop
jns
mov
xchg
fmul
std
mov
xchg
add
pushf
bound
fst
fdiv
xchg
and
xor
rol
sbb
dec
pop
push
sbb
sbb
sub
ret
and
sub
mov
jmp
dec
adc
add
xchg
dec
or
adc
jae
push
push
rol
mov
adc
jl
ror
pop
test
add
movs
jns
cmps
xchg
in
shl
inc
cmps
rol
imul
shl
cmp
in
sbb
mov
test
sub
and
inc
call
cmp
enter
dec
or
daa
mov
mov
call
sub
add
mov
mov
cmp
add
cwde
imul
ret
mov
or
xchg
inc
sbb
fld
and
add
push
add
mov
(bad)
fbstp
xchg
xor
pop
push
dec
jmp
pop
sbb
push
shl
movs
xchg
ss
xchg
add
cmp
adc
xor
outs
mov
xchg
adc
or
sub
mov
jbe
push
mov
add
lea
pusha
dec
push
cmp
adc
nop
aaa
repnz
jns
ins
mov
int
jmp
add
adc
mov
push
add
sbb
jmp
lods
inc
jl
lea
push
push
and
in
cmp
mov
jne
jle
(bad)
or
xor
out
inc
mov
rol
lods
push
scas
mov
dec
test
cmp
cmp
ret
retf
aam
dec
pop
ror
or
adc
mov
enter
sub
call
ins
call
xchg
xchg
dec
shl
add
aad
and
mov
push
pop
pop
int3
add
mov
or
and
add
mov
retf
repz
dec
shl
pop
push
fs
or
dec
jp
sub
cmp
aaa
sar
or
ins
loopne
es
fwait
cmp
sar
and
push
cmp
xchg
mov
inc
lahf
cmp
fnstenv
push
add
test
mov
call
pushf
in
mov
into
fwait
(bad)
mov
or
or
mov
arpl
(bad)
push
lods
jbe
ins
xchg
mov
test
dec
xabort
jp
test
mov
push
xchg
mov
or
sbb
pop
jo
dec
movs
in
sbb
mov
neg
push
mov
sbb
sbb
pop
(bad)
inc
jbe
in
dec
and
lahf
push
dec
or
xchg
pushf
fs
xchg
and
into
sbb
sub
lea
add
push
or
data16
add
ss
mov
fbld
mov
pop
xchg
push
test
(bad)
call
fild
and
outs
sub
enter
test
adc
test
or
add
dec
fsubr
mov
cmp
pop
push
in
xchg
push
add
cdq
sub
mov
aad
mov
jnp
pop
idiv
sbb
add
lock
dec
jo
lea
add
pop
inc
out
inc
inc
test
add
lods
test
in
add
out
out
sub
aam
mov
bound
xor
jge
jo
xchg
int
add
xchg
mov
(bad)
movhps
xchg
test
call
pusha
call
pushf
mov
sbb
mov
xor
xchg
and
mov
mov
cld
dec
fidiv
mov
add
add
cmps
mov
dec
sbb
or
dec
add
cmp
jae
fimul
mov
(bad)
sbb
and
pop
in
std
push
mov
lea
or
in
sldt
cs
cmp
je
stos
dec
mov
mov
pop
push
inc
pop
shl
aas
adc
movs
out
loopne
fild
rol
push
push
mov
xor
lds
sbb
sub
add
ss
jne
and
loopne
push
bound
xor
push
dec
xchg
lea
mov
add
repnz
cmp
(bad)
shl
imul
cwde
test
mov
fs
je
push
outs
fistp
and
shl
or
add
retf
adc
enter
mov
push
xor
movs
xor
lods
jecxz
call
jmp
adc
loopne
(bad)
lds
dec
or
icebp
inc
ret
jne
test
push
pop
ins
xchg
push
or
push
cmps
dec
jl
adc
shl
retf
stos
enter
xchg
stos
loopne
cwde
jle
pop
adc
(bad)
in
push
cmp
jne
je
adc
mov
mov
jb
loopne
loope
out
push
cdq
or
jmp
or
or
jmp
mov
popa
in
xchg
cs
mov
movs
jo
push
dec
movs
mov
dec
jmp
outs
das
or
push
popf
frstor
shl
mov
push
push
mov
push
sbb
cmp
pusha
and
dec
stos
lock
cmc
fnsave
or
scas
leave
or
add
jbe
lock
stos
pusha
ret
in
jl
mov
cmp
push
push
sbb
int
xchg
xor
dec
dec
mov
sti
and
jmp
test
and
popa
and
loope
mov
xlat
jmp
popa
mov
push
(bad)
jno
jl
test
pop
pop
lahf
cwde
or
sub
je
(bad)
jo
sub
push
pop
push
mov
ret
arpl
push
rcl
mov
or
ret
mov
pop
and
or
mov
mov
leave
movs
aas
ret
(bad)
sbb
sub
lea
push
and
add
mov
loopne
aaa
mov
add
cwde
in
dec
jmp
inc
add
or
loop
into
out
call
or
or
or
xchg
ret
add
xchg
sub
cmp
inc
sub
test
sbb
or
les
cmp
je
sub
movs
adc
dec
dec
dec
cmp
movs
push
ins
push
mov
(bad)
sbb
add
sbb
mov
or
cmps
cmps
mov
repnz
jb
movs
add
or
arpl
inc
cmps
cmp
add
xor
sub
ror
sub
add
je
cmps
mov
pusha
ins
dec
xchg
adc
or
and
test
mov
push
fadd
add
pop
js
aad
add
sti
add
sub
push
mov
inc
dec
call
popa
inc
push
sub
adc
fld
icebp
mov
sub
xor
or
popf
mov
lock
rcl
pop
dec
xor
data16
adc
movs
mov
ret
xchg
ret
mov
sub
jp
and
popa
inc
ds
adc
inc
cmps
in
sbb
mov
adc
xchg
in
adc
pop
(bad)
jnp
pop
or
pop
xchg
rep
jae
mov
out
fld
xor
push
or
pop
loopne
xchg
jp
inc
push
ror
js
jmp
mov
(bad)
fst
int3
add
pushf
popf
mov
mov
mov
into
pop
test
jbe
add
pop
pop
leave
movs
out
aaa
in
leave
dec
xor
inc
test
add
inc
and
stos
sbb
adc
push
or
push
dec
ja
add
dec
dec
pop
xor
sbb
cmp
push
lock
cmps
and
lock
and
test
push
hlt
push
inc
and
je
inc
inc
dec
jne
es
xor
hlt
jl
and
movnti
cmp
sti
addr16
add
dec
dec
adc
push
push
inc
lods
pop
dec
push
imul
or
test
(bad)
sbb
mov
data16
adc
inc
inc
dec
inc
idiv
push
push
dec
dec
mov
cmp
xchg
xchg
in
mov
adc
dec
and
inc
and
sbb
push
mov
sub
push
(bad)
cld
loop
inc
add
xor
fiadd
jb
cmp
jle
stc
pop
pop
gs
push
push
inc
loope
xchg
and
adc
mov
add
push
jp
addr16
or
nop
xor
and
test
cmp
pop
push
rcl
es
mov
jns
mov
xchg
push
test
(bad)
call
lahf
xchg
outs
inc
(bad)
sub
(bad)
arpl
push
je
jmp
add
dec
pop
ret
cmp
jmp
fadd
(bad)
lods
cwde
cmc
push
jb
xchg
mov
dec
pop
repnz
or
sub
mov
mov
movs
and
arpl
xchg
add
pop
outs
cs
cmovs
mov
pop
and
adc
outs
cmp
inc
mov
sub
add
inc
enter
enter
test
js
xchg
cmp
fstp
or
inc
xor
cmp
stos
add
xchg
aam
and
pop
in
inc
iret
or
dec
outs
add
pop
mov
fldpi
enter
add
jbe
xor
push
popa
and
xor
test
je
cli
scas
or
jo
call
or
call
jmp
pop
sub
adc
sub
sbb
in
(bad)
xchg
add
call
or
dec
jae
shl
pop
out
imul
adc
add
dec
aad
push
cmps
xchg
jo
test
xor
loopne
cmps
daa
or
inc
or
or
push
sub
inc
ins
or
test
inc
nop
dec
mov
jge
retf
mov
adc
dec
sbb
sub
jne
inc
add
cmps
xchg
dec
fld
test
jno
enter
cdq
sub
adc
jne
adc
push
jmp
adc
push
push
push
mov
pop
stos
and
inc
loope
out
push
aas
out
pop
inc
inc
ds
in
rol
(bad)
ins
or
and
nop
pop
or
xor
push
dec
xchg
push
mov
je
(bad)
test
outs
pop
int3
adc
or
and
inc
push
sbb
aaa
fadd
xor
cmp
ins
sub
fcom
sub
xor
or
jmp
add
push
xchg
in
push
movs
push
or
daa
aas
inc
ret
mov
push
out
mov
cmp
push
shl
dec
or
mov
mov
ss
sar
xchg
movs
fsub
mov
sar
sbb
add
lods
call
nop
cdq
or
sub
imul
xchg
adc
adc
fbld
and
mov
and
mov
fsubr
inc
and
loopne
cmps
shl
push
call
adc
jb
sub
stos
adc
or
mov
rol
add
mov
(bad)
cmps
call
shl
out
jnp
and
movs
popf
in
aas
dec
mov
fcomp
loopne
stc
or
inc
int3
pop
xor
cdq
xor
cmps
add
cmp
mov
or
jae
in
es
rol
hlt
movs
nop
cmp
xor
xor
add
add
jmp
test
jnp
push
enter
and
pusha
add
loop
movs
(bad)
pop
mov
inc
push
shr
in
jno
movs
inc
mov
mov
cmp
or
test
(bad)
nop
push
cmp
xor
nop
jmp
dec
or
pop
call
ficom
ret
sub
rol
cwde
lock
inc
inc
(bad)
and
add
ds
xor
push
mov
sbb
sbb
sub
ins
mov
push
imul
mov
sub
movs
lahf
scas
outs
xchg
mov
mov
push
aaa
fcom
test
push
imul
inc
test
test
jge
sbb
leave
or
ja
or
aaa
loope
xor
clc
mov
lods
pop
loope
pop
dec
and
xchg
sub
jl
fcom
mov
pop
mov
push
sub
mov
arpl
stos
adc
inc
jb
fdiv
pop
push
adc
cmp
push
jne
dec
mov
in
in
movs
adc
daa
cmp
in
adc
test
adc
or
aam
mov
push
out
lock
cmp
lock
or
movs
inc
shl
xchg
xchg
in
mov
inc
or
iret
add
mov
mov
mov
push
mov
mov
pop
or
cmp
pop
or
inc
daa
pop
mov
jmp
ret
mov
rol
mov
push
hlt
add
loope
and
mov
stos
addr16
ror
add
lock
sub
mov
mov
pop
or
xor
mov
add
mov
jmp
rcl
push
aas
add
repnz
jbe
inc
add
lock
shr
lock
mov
dec
rol
jmp
inc
dec
mov
jae
jl
xchg
ins
in
sub
or
push
cs
jb
sub
in
icebp
xchg
das
mov
dec
jbe
iret
rol
inc
movs
loopne
mov
push
or
or
xchg
ins
test
ret
dec
ds
adc
adc
and
push
lock
call
mov
fsubr
add
and
repnz
adc
xchg
jmp
sbb
or
jns
stos
pop
mov
adc
bound
adc
enter
and
repz
inc
add
pop
xchg
cli
cli
mov
add
cmp
fadd
sub
mov
mov
mov
cwde
adc
dec
push
or
cwde
jno
jae
and
pop
adc
fucomip
in
test
sbb
add
das
and
mov
int
sar
inc
xchg
test
pop
jg
xor
cld
imul
iret
inc
or
sar
cmp
sbb
xor
je
xor
or
cmp
daa
mov
sbb
js
push
daa
or
mov
rcl
and
mov
(bad)
cmp
or
xchg
add
jmp
add
jnp
ja
jmp
dec
inc
mov
sub
or
popa
cmp
fisub
mov
adc
fadd
cmp
ret
js
mov
cli
cmp
pushf
add
push
dec
adc
pop
inc
add
pop
ret
cmp
cmp
sbb
cmp
mov
test
fistp
cmp
push
dec
lock
push
and
inc
and
lahf
enter
sbb
sub
xchg
hlt
jmp
sahf
es
xchg
sub
aad
push
or
lods
js
or
jne
das
jbe
push
mov
in
lods
push
sar
push
cmp
adc
fldenv
(bad)
jl
shl
pusha
xchg
enter
mov
fstp
add
inc
pop
frstor
sar
test
clc
ret
pop
push
xor
aam
cmp
or
sar
push
in
add
pushf
or
mov
jo
not
jp
xchg
sub
push
nop
push
push
stc
in
mov
mov
and
xchg
ss
xchg
and
icebp
mov
lea
mov
mov
rcr
(bad)
lea
loopne
push
add
sub
jge
dec
ins
xor
add
and
xchg
cmp
pop
retf
mov
rcl
mov
repnz
jne
jno
jmp
int
jp
sub
and
or
sbb
cmp
sub
rol
inc
imul
inc
pop
mov
dec
pop
call
fwait
(bad)
dec
push
gs
fsub
pusha
into
mov
mov
jmp
daa
sbb
lea
pop
mov
sahf
push
xor
jne
pop
stos
out
dec
dec
mov
adc
xchg
mov
js
or
std
sub
and
cmp
inc
xchg
pop
sar
retf
dec
cdq
xor
add
fcomp
or
popa
loope
add
sub
xor
out
inc
and
dec
sub
stos
ret
push
shr
mov
sub
push
sub
add
rcl
or
jo
jmp
sbb
mov
ror
rcl
add
jae
or
and
or
shl
data16
jne
xchg
and
mov
jnp
retf
adc
pop
adc
lods
out
jmp
push
adc
dec
je
sub
mov
add
pop
jae
add
sub
push
push
dec
stos
dec
inc
outs
push
in
sbb
add
je
test
sbb
nop
lock
push
dec
fwait
xchg
fmul
popf
inc
push
or
mov
or
fwait
lahf
mov
pop
(bad)
sub
and
js
add
je
pop
push
dec
sahf
bound
add
sub
test
push
inc
popf
(bad)
sti
push
adc
push
or
pop
add
jmp
fiadd
sbb
or
fmulp
ins
push
push
push
or
dec
loop
(bad)
hlt
jo
fadd
out
adc
sbb
jns
add
push
das
shl
jl
enter
add
dec
jl
stos
fiadd
sbb
outs
test
sub
cmp
xchg
push
stc
jle
retf
jno
(bad)
aam
pop
ficom
pop
fmulp
gs
rol
or
sbb
mov
jecxz
mov
xor
sbb
xchg
enter
in
data16
jnp
adc
loopne
dec
and
retf
retf
and
and
add
inc
enter
jbe
sbb
dec
and
leave
xchg
add
das
jae
dec
ds
add
mov
push
repnz
adc
dec
push
push
jecxz
adc
and
popa
dec
sbb
push
pushf
lea
in
pop
dec
int3
inc
jge
push
loopne
lods
add
xchg
dec
addr16
inc
into
inc
int3
ins
cmp
inc
(bad)
jmp
shr
stos
sub
sub
cmp
push
sub
jne
sbb
int
int3
rol
pop
add
ja
add
push
ins
(bad)
int
and
add
es
pushf
push
aaa
push
pop
aam
out
push
and
or
sub
xchg
xchg
shl
sbb
in
imul
push
add
aam
pop
push
inc
add
push
ficomp
sbb
jae
inc
add
(bad)
dec
loopne
inc
jecxz
jb
test
iret
daa
push
enter
shl
pop
and
in
and
adc
pop
enter
sub
add
pop
rcl
sub
daa
cmp
dec
hlt
in
xor
pop
loopne
dec
das
pushf
push
sbb
xor
xor
call
clc
xchg
add
scas
fcom
cmp
ret
icebp
mov
cmp
xchg
push
mov
in
and
test
or
stos
push
jb
inc
mov
push
movs
hlt
inc
data16
mov
jecxz
sbb
aad
xor
push
and
repz
xor
inc
repnz
add
scas
fsub
xchg
daa
leave
leave
sub
sub
lds
pop
or
sub
dec
outs
push
sub
stc
add
push
addr16
fiadd
sub
nop
or
mov
add
push
cmp
add
sbb
push
push
lahf
setns
imul
in
add
push
inc
jo
mov
aas
push
cmp
xchg
add
xchg
inc
push
push
ret
xchg
or
stos
pusha
add
les
ror
mov
jmp
or
jp
pop
or
aas
std
movs
sti
cmp
je
mov
adc
and
js
sub
aas
pusha
fld
leave
pushf
sub
add
add
int3
aad
xchg
loope
enter
shr
or
mov
ret
test
or
xor
idiv
out
dec
mov
pop
mov
xchg
adc
call
jp
push
sub
mov
sbb
jne
pushf
(bad)
fdivr
mov
loope
mov
xor
inc
loope
and
int3
jb
or
adc
cmps
fnsave
rcr
mov
stos
movs
adc
push
(bad)
and
xchg
pop
jmp
fsub
pop
enter
dec
xlat
push
ret
add
cwde
movs
pop
nop
push
or
add
lods
xor
fdiv
or
(bad)
call
cwde
js
pop
push
rcl
adc
enter
xchg
pop
fimul
loope
iret
push
fcom
leave
xchg
mov
or
or
mov
or
lods
arpl
rcr
lahf
add
das
add
nop
mov
in
and
cmp
xchg
pushf
adc
and
test
push
add
or
call
xor
mov
mov
cmp
push
xor
cwde
es
mov
cli
xchg
(bad)
rol
test
adc
adc
jp
sbb
and
aaa
jmp
xor
or
push
dec
ror
call
push
xchg
mov
sbb
and
push
push
sub
dec
sbb
jge
or
add
lea
addr16
mov
sub
enter
test
fnstcw
in
push
jne
inc
or
push
test
call
adc
sub
jno
leave
xor
or
pop
iret
enter
aam
or
add
sbb
or
dec
or
fidivr
popa
je
jmp
ja
loope
clc
jge
mov
or
cwde
inc
xlat
jae
dec
aam
loop
xchg
xchg
pop
push
and
add
push
cmp
aaa
lods
push
aad
repnz
push
mov
xchg
(bad)
test
ret
mov
mov
sub
mov
cmps
cmp
sbb
lahf
xchg
fcmovne
jmp
dec
pop
push
adc
jb
gs
mov
push
xor
shl
cdq
aam
lods
add
pop
xchg
mov
mov
fs
add
jmp
jmp
xor
cmp
fs
inc
iret
sbb
or
and
sbb
xor
or
cmp
jmp
scas
or
hlt
lock
popf
(bad)
push
xor
and
xor
adc
adc
or
test
adc
adc
sbb
add
lea
stos
ss
dec
lea
mov
and
bound
push
es
or
dec
lds
or
repnz
push
outs
arpl
nop
call
es
lock
cmp
jecxz
push
and
test
pop
lea
fcomp
sbb
xchg
xchg
and
push
lock
out
sahf
outs
in
test
fadd
pop
mov
pop
pop
adc
in
loope
cmp
jl
mov
test
pop
push
and
out
mov
add
inc
mov
xor
or
cs
loope
cmp
js
or
adc
and
push
mov
or
push
cmp
and
inc
add
push
ss
test
adc
pop
inc
cs
scas
adc
jns
sub
mov
and
leave
xor
pop
add
xor
dec
sbb
movups
jo
cmp
dec
add
aad
fwait
rcl
mov
xchg
adc
add
in
mov
jo
test
shl
push
mov
(bad)
imul
adc
mov
push
mov
xchg
iret
imul
outs
push
xchg
out
sar
daa
push
lea
bswap
adc
push
mov
add
ret
and
sub
movs
stos
sbb
inc
mov
or
inc
adc
pop
in
ins
xor
pop
call
add
out
je
jne
mov
sub
rcl
jmp
ja
imul
in
or
add
push
dec
bound
stc
dec
enter
sbb
push
leave
enter
fs
test
gs
push
int3
je
dec
int3
push
jecxz
xchg
pusha
jo
ins
test
pop
cmp
arpl
or
inc
sbb
shl
sbb
shl
outs
add
xchg
iret
in
movntps
cmp
adc
xor
push
adc
adc
ins
ror
pop
mov
mov
fwait
ds
dec
or
loop
jge
aam
nop
out
imul
add
fmulp
int
fbld
aam
cs
enter
jb
cmps
nop
adc
and
call
fcom
push
pop
fadd
nop
inc
push
fcom
fadd
cmp
sbb
sbb
test
fcomp
fdivr
or
loopne
jns
test
mov
sub
sbb
inc
jb
popf
loopne
aam
stos
(bad)
fsub
push
test
push
cmps
mov
jge
adc
test
into
push
enter
and
xor
jne
or
mov
mov
or
mov
cld
sub
imul
inc
xor
pop
or
inc
in
xchg
lods
ins
test
sub
fdiv
dec
xchg
sbb
inc
xchg
or
in
cs
(bad)
rol
movs
cmp
es
pop
rol
loope
sbb
mov
addr16
sbb
and
xor
pop
dec
add
movs
mov
jmp
xor
lods
add
adc
je
data16
push
dec
inc
dec
xor
fdiv
push
sbb
adc
ficomp
ret
sub
add
popf
clc
jno
lods
mov
addr16
mov
aaa
scas
or
push
jmp
mov
adc
xchg
mov
xchg
fidiv
pop
pop
jmp
lock
adc
sub
jbe
fadd
inc
mov
es
das
in
test
add
mov
popa
mov
adc
shr
xor
leave
pop
test
and
pop
js
cmp
popf
cmp
in
enter
jns
push
adc
call
cmp
daa
out
cmp
dec
cmp
dec
lods
adc
mov
pop
nop
pop
inc
test
inc
cmp
lods
adc
and
lahf
hlt
jle
jno
push
adc
or
xchg
data16
pop
ret
inc
pop
shr
ret
test
pop
aad
cwde
sbb
or
inc
pop
mov
sub
rol
repz
nop/reserved
ret
das
adc
dec
aam
(bad)
sub
outs
and
data16
pop
cmp
mov
(bad)
cmp
stc
push
mov
adc
adc
jle
(bad)
std
nop
fdivp
adc
adc
je
mov
xor
movs
xor
xchg
clc
movs
cdq
pop
add
cld
jb
add
jo
stc
mov
lahf
fs
sar
cmc
add
mov
push
mov
adc
cmp
rcr
xor
sar
mov
or
(bad)
mov
add
lods
sub
mov
loopne
or
mov
mov
clc
sbb
js
dec
pop
jmp
or
stos
xlat
aaa
mov
xchg
mov
fmul
jl
push
fild
rol
in
inc
mov
cwde
push
push
cmp
mov
xchg
ss
jnp
or
xor
mov
leave
cmp
mov
aam
jo
cmp
fucomi
pop
imul
adc
jo
sub
add
loop
add
imul
arpl
xor
pop
ins
sub
mov
jb
jb
pop
sub
mov
add
xor
ret
cli
out
push
pop
xchg
pop
lea
ret
jbe
int3
cmp
add
mov
jmp
and
clc
mov
mov
mov
dec
(bad)
fnsave
popa
inc
pop
add
in
push
mov
stos
inc
loope
jmp
add
sbb
leave
(bad)
jmp
in
jmp
popa
js
pop
mov
push
mov
test
sub
dec
jge
or
in
pushf
xchg
sbb
jge
test
pop
jecxz
pop
xor
or
cmp
lock
jne
repnz
jmp
mov
out
inc
inc
inc
adc
jp
jo
dec
pushw
adc
xor
adc
or
adc
push
sbb
xor
sub
out
out
push
sub
std
ss
mov
xor
mov
mov
js
hlt
in
les
clc
sub
xor
fidivr
sahf
(bad)
in
loope
shl
cmp
or
xor
push
test
mov
cmps
movs
sub
jnp
jecxz
inc
xlat
add
or
adc
sub
das
dec
outs
test
jb
inc
sub
std
ret
push
aas
mov
cli
in
div
sbb
xor
sub
and
imul
mov
adc
dec
add
and
aas
xchg
pusha
pushf
adc
test
movs
hlt
jne
add
adc
xchg
mov
mov
sub
push
cmp
hlt
mov
xchg
mov
sbb
push
pop
push
inc
mov
test
in
lock
lock
pop
ins
dec
pop
cmp
jge
fwait
jmp
mov
mov
jmp
mov
out
mov
adc
(bad)
jne
push
sub
jecxz
add
mov
xchg
jmp
out
sahf
mov
and
push
xor
test
loopne
lea
mov
dec
mov
inc
adc
cld
xor
pop
push
es
pusha
in
sbb
sub
out
pop
push
xlat
rcl
scas
test
popf
adc
(bad)
push
mov
mov
sbb
cmps
fcomp
prefetcht2
mov
cli
repnz
je
aam
jmp
sub
sbb
jne
jne
lea
or
test
dec
mov
mov
loop
jns
daa
push
js
shl
shl
not
in
ss
adc
test
sbb
inc
adc
add
(bad)
mov
dec
idiv
cmp
dec
or
mov
ja
adc
jmp
inc
ret
mov
pop
pop
(bad)
push
mov
or
pop
out
in
sub
shl
or
push
push
fdivr
or
jno
arpl
fcmovnbe
jmp
dec
push
clc
hlt
push
mov
ja
pop
cld
aas
sub
sbb
xchg
add
mov
les
mov
fisttp
mov
jmp
not
and
out
add
mov
icebp
(bad)
lods
scas
ret
movs
(bad)
add
cmp
mov
shr
ins
std
rol
into
push
cmp
jne
loop
pop
adc
adc
retf
mov
mov
sub
ins
pop
push
or
jo
xor
test
sub
add
push
add
or
and
imul
mov
cmp
push
je
adc
cmp
shl
sub
(bad)
jmp
add
jle
or
adc
and
and
(bad)
out
mov
int3
adc
lds
cmp
push
push
mov
inc
xor
pop
jmp
and
add
rol
je
inc
inc
shl
push
dec
je
sub
je
mov
adc
sub
pop
or
fst
sbb
outs
mov
mov
or
push
add
std
push
push
xor
enter
push
adc
imul
inc
jge
inc
rcr
adc
push
cmp
xor
or
pop
add
pop
dec
hlt
dec
mov
sub
sbb
adc
add
mov
sbb
pushf
shl
mov
es
(bad)
out
sbb
push
xchg
rcl
ins
mov
test
iret
mov
mov
pop
inc
jo
adc
dec
fwait
add
aaa
cmp
mov
inc
ss
dec
cmp
dec
mov
add
shr
jne
xor
es
retf
out
nop
ret
add
push
sub
lea
ret
xchg
enter
adc
xchg
pop
or
(bad)
lods
ret
pcmpeqb
popa
mov
cld
add
int3
sub
loop
movs
inc
hlt
jne
ret
sub
sar
and
mov
or
jp
pop
fidiv
add
adc
jge
mov
test
sbb
loope
mov
adc
add
ret
retf
pop
push
mov
imul
add
mov
mov
jp
retf
jae
iret
pop
xchg
lods
es
mov
push
and
cmps
(bad)
ins
inc
push
pusha
aaa
mov
dec
shl
cmps
loopne
sub
push
sbb
in
add
rcr
push
push
jmp
or
(bad)
js
(bad)
retf
pop
mov
pop
mov
shl
lock
repnz
shr
(bad)
in
push
mov
push
mov
scas
sbb
adc
loopne
test
or
add
out
inc
movs
xor
jp
mov
outs
in
inc
ss
hlt
push
xchg
add
mov
mov
call
cmps
(bad)
cmp
jge
fsubr
enter
pop
arpl
jl
cmp
xor
test
pop
arpl
or
repnz
loope
jno
mov
pusha
add
aam
xor
add
rcl
cwde
repnz
stos
push
fbstp
mov
(bad)
lods
push
(bad)
or
xor
enter
jae
push
pushf
movs
les
js
cmp
enter
mov
sbb
loopne
and
and
sub
shl
lods
pop
jbe
mov
mov
and
adc
jno
mov
xor
xchg
int3
test
scas
rcr
mov
mov
mov
dec
sar
lds
pop
xchg
mov
fmul
pop
aas
dec
mov
js
push
aad
and
add
jle
je
cmps
aad
(bad)
loope
jecxz
mov
ficom
in
jle
jl
or
test
mov
jle
inc
inc
out
push
in
push
pop
xor
push
lock
mov
mov
and
add
mov
xchg
rcl
cmp
push
imul
xchg
sbb
pop
cwde
lods
popf
ficom
pop
cld
int
aam
dec
adc
jmp
out
popf
loopne
jle
push
sub
fmul
imul
or
fldenv
push
push
sub
xor
out
cli
mov
adc
mov
sub
inc
repz
or
xor
and
mov
inc
lock
mov
sti
ins
lea
movs
add
movs
addr16
xchg
xlat
outs
movs
(bad)
adc
mov
jg
pushf
sar
inc
add
jge
mov
cdq
mov
mov
xor
mov
pop
add
mov
je
clc
cli
jl
jge
xchg
push
je
sub
js
mov
add
xchg
les
mov
fs
push
pusha
sti
cs
or
cmp
sbb
retf
movs
and
loope
daa
fistp
cmp
push
xchg
loopne
add
mov
es
test
movs
mov
aaa
mov
mov
sti
and
leave
cmp
jne
mov
pop
or
mov
jb
and
ret
sbb
cmps
and
repz
jns
or
and
iret
jo
add
dec
adc
dec
cmp
dec
push
data16
add
les
push
pusha
fs
mov
pusha
ror
movs
mov
ds
outs
loopne
pop
mov
adc
push
cwde
(bad)
gs
int3
pop
(bad)
in
pop
pop
test
jmp
xchg
push
push
popf
mov
repz
jo
mov
or
or
fadd
bound
lea
mov
xor
sbb
add
pop
dec
mov
mov
add
bound
push
or
pop
mov
call
popa
test
mov
xor
mov
test
inc
add
add
div
pop
jne
push
enter
loopne
add
je
push
(bad)
ret
cmp
adc
arpl
pusha
dec
add
out
mov
adc
ret
mov
pushf
add
push
pop
sbb
xor
jmp
cmp
pop
mul
and
or
aas
mov
loopne
cmps
add
add
cmp
scas
push
mov
je
pop
sbb
repnz
cmp
ds
jne
sub
and
cmp
movs
or
add
loopne
or
je
jmp
lea
popf
dec
and
pop
sbb
loop
push
pop
push
adc
lds
or
test
and
push
out
icebp
or
ja
std
sbb
cmp
pop
pop
loopne
fcmovnb
mov
cmp
ja
fdecstp
add
lahf
pop
out
ror
mov
es
inc
dec
cdq
mov
and
idiv
jle
dec
mov
or
pop
pop
add
add
loop
push
sahf
jne
ss
xor
adc
and
jbe
add
xchg
int3
and
mov
inc
cmp
pop
outs
movs
cld
push
dec
sub
sub
stc
push
push
test
jne
icebp
xor
sbb
ret
js
fadd
adc
pop
mov
or
or
lock
js
adc
jbe
xor
mov
xor
data16
or
jmp
test
daa
inc
popa
sbb
call
inc
data16
or
jne
push
inc
fcmovnbe
lods
aas
cmp
push
push
shr
inc
sbb
(bad)
xchg
dec
in
or
push
test
scas
fwait
test
sbb
dec
sub
mov
sti
cmps
sbb
cmps
(bad)
mov
adc
xchg
pop
xor
inc
fistp
mov
je
je
stc
retf
fadd
pop
xchg
jbe
sahf
xchg
and
adc
jmp
and
lods
and
enter
lea
jae
les
push
dec
inc
cmp
pop
inc
mov
or
add
shl
jl
imul
pop
mov
add
or
mov
cmp
and
ret
mov
pop
je
mov
jle
scas
or
adc
ins
shl
jo
dec
mov
push
mov
cmp
jo
xor
fs
cwde
and
add
(bad)
loopne
xor
inc
loopne
xor
xor
xor
adc
idiv
adc
dec
je
dec
sub
mov
push
or
or
adc
mov
add
inc
mov
inc
mov
add
jmp
xor
adc
xor
push
ja
pop
fsubr
jmp
add
pop
push
cmp
addr16
mov
pop
(bad)
out
xchg
inc
sbb
mov
shl
mov
arpl
mov
rol
sbb
mov
cmps
mov
mov
or
jl
xchg
je
jb
and
ds
and
mov
or
data16
add
xor
fistp
repnz
xchg
or
pop
es
inc
test
mov
and
adc
pop
outs
add
pushf
or
es
add
inc
adc
loop
mov
jbe
add
fs
pop
adc
ret
movs
pop
cdq
and
add
sub
add
loopne
pop
sub
jp
(bad)
or
sbb
je
jbe
and
lods
jne
fwait
add
clc
test
mov
sub
fldenv
push
cmc
sub
cmp
imul
add
loope
fadd
(bad)
test
loopne
or
add
or
mov
or
add
add
add
mov
or
or
pop
inc
adc
xor
add
cmp
sbb
loop
es
jnp
dec
adc
les
movs
push
adc
cmp
push
add
or
push
mov
add
or
mov
jne
les
test
sub
pusha
and
add
(bad)
adc
mov
jb
mov
cmp
pushf
cmp
cmp
jl
push
add
and
cwde
dec
sub
es
and
mov
aas
inc
cmps
rcr
femms
add
mov
outs
loope
sbb
push
inc
sub
add
je
add
sar
jp
movs
sub
xchg
push
xor
(bad)
bnd
xor
adc
push
or
rol
mov
or
or
nop
mov
je
mov
push
loopne
les
pop
inc
and
jo
(bad)
sub
cs
icebp
mov
jmp
ja
inc
push
cs
cmp
pop
ficom
cld
adc
or
sbb
jb
movs
inc
push
mov
mov
and
push
xor
ds
dec
push
jnp
sbb
ror
mov
push
nop
jp
inc
mov
sbb
hlt
nop
and
add
sbb
jb
or
imul
rol
add
dec
push
inc
or
add
inc
loopne
je
bound
mov
dec
and
dec
xchg
das
xor
pop
pop
jmp
dec
inc
adc
inc
shl
test
push
ds
loope
mov
push
ins
xchg
sbb
enter
adc
shl
sub
pop
push
mov
(bad)
lock
pop
mov
aam
aaa
or
push
xor
imul
js
les
mov
data16
in
and
mov
and
loopne
out
movs
or
daa
xor
or
pop
div
fild
sbb
sahf
push
add
xor
or
test
push
push
movzx
lea
js
dec
pop
loope
inc
hlt
inc
cmp
mov
je
int3
xor
pop
inc
fsub
push
test
mov
jne
cmp
jmp
xor
pop
aam
lock
nop
gs
rol
stos
xchg
rcr
adc
jo
jmp
lods
dec
mov
test
retf
dec
daa
inc
jno
enter
(bad)
not
clc
je
shl
adc
cmp
test
adc
xlat
and
dec
xor
push
sub
push
jo
out
cmp
xor
adc
ins
and
add
inc
dec
mov
out
(bad)
dec
sub
jne
xchg
or
cld
cli
cmp
sahf
or
cmc
xor
ror
dec
jmp
fs
(bad)
cld
dec
sbb
push
adc
jo
or
lea
test
lock
mov
mov
ret
sub
or
retf
cmp
(bad)
fisttp
lods
sti
add
jmp
es
mov
mov
or
sbb
dec
mov
pop
je
out
add
push
in
repnz
nop
data16
jecxz
movs
pop
cmp
sub
imul
xchg
cdq
mov
add
or
cs
add
ins
and
hlt
test
ret
xor
inc
cmps
dec
(bad)
rol
push
scas
fsub
jg
(bad)
cli
and
aas
movhps
adc
jge
pop
jge
fdiv
lds
scas
jno
and
(bad)
mov
in
add
nop
adc
js
repz
sahf
es
mov
loopne
cmc
rcr
mov
js
dec
push
cmp
xchg
jno
xchg
push
lods
adc
dec
mov
pushf
xchg
xchg
xchg
cmovge
push
sub
shl
jp
jb
ud2
ror
sub
jmp
repnz
jecxz
sbb
cmc
xchg
xchg
pusha
mov
dec
mov
call
pusha
or
sbb
daa
sub
mov
push
xchg
jmp
sbb
ja
lods
enter
mov
jle
std
fprem1
mov
and
les
mov
leave
mov
push
inc
sub
imul
xlat
jne
inc
loope
cmp
(bad)
and
inc
ds
bndldx
in
scas
aam
lds
or
adc
xchg
jbe
cmp
hlt
std
cmp
push
pushf
xchg
xchg
and
jmp
outs
or
lods
mov
and
push
test
sub
(bad)
inc
(bad)
pop
inc
cmp
sub
cwde
jne
clc
adc
dec
pop
mov
xor
push
hlt
sub
pusha
cli
jne
push
pop
hlt
hlt
add
or
mov
pusha
lea
adc
pop
add
adc
iret
mov
dec
mov
cmp
cmp
pop
fistp
sub
and
dec
push
cmp
aam
or
imul
push
cs
leave
inc
add
jmp
ins
aad
add
je
mov
mov
jl
or
push
iret
lea
inc
mov
mov
sub
sbb
not
jmp
das
sub
mov
mov
sub
jae
push
js
mov
mov
stos
stc
and
inc
fwait
sbb
dec
jge
and
sub
daa
add
sub
jo
sahf
pop
xor
mov
adc
inc
sbb
or
sub
out
xlat
mov
rol
sbb
pop
outs
jmp
mov
pop
and
fucomip
lods
inc
sub
push
mov
dec
adc
jge
sub
push
test
xchg
daa
repz
(bad)
push
push
add
and
and
retf
jle
jbe
ja
xchg
or
mov
aas
add
shl
push
mov
mov
leave
mov
cmp
sub
adc
xchg
fidiv
int
pop
rol
sbb
adc
and
dec
or
jmp
mov
daa
aas
mov
in
inc
push
pop
jo
sbb
push
pop
push
mov
pop
pop
bound
jno
call
rol
scas
and
ins
inc
jl
test
adc
dec
xchg
daa
clc
mov
fadd
jl
xor
pop
(bad)
jne
cmp
add
push
mov
ins
or
ret
arpl
cmp
setne
and
setne
loopne
mov
pop
mov
jmp
stos
aam
sbb
pop
test
(bad)
inc
push
push
or
loope
sti
or
sbb
push
mov
fs
or
inc
sti
test
adc
mov
pop
push
push
add
data16
jg
je
add
or
pop
cmp
sub
xchg
and
xor
dec
lock
dec
sbb
loop
and
cmp
bound
(bad)
adc
pusha
mov
sub
sbb
jbe
sub
inc
mov
aas
cmp
aas
loop
mov
jmp
and
pusha
xor
pop
daa
or
add
push
xchg
jle
sahf
jno
and
jne
push
push
sbb
inc
push
pop
pop
push
or
je
push
or
jnp
or
xchg
jo
cmp
js
ror
js
cmp
jmp
std
or
and
add
push
dec
push
xchg
mov
imul
cmp
cs
dec
mov
jle
push
and
add
in
jmp
push
xor
rol
mov
dec
cmp
sbb
adc
loopne
push
sub
or
fsub
int3
adc
xor
call
mov
xchg
inc
gs
je
dec
je
sub
(bad)
and
fdivr
jle
fiadd
xor
rcr
cmp
add
sub
dec
sti
div
jae
sub
add
jmp
idiv
adc
cmp
jb
enter
inc
mov
sub
leave
dec
cld
rol
popa
adc
test
fisttp
pop
add
adc
lds
push
xor
jl
rcr
inc
push
cmps
add
jno
push
fiadd
push
cmps
sbb
mov
fadd
in
push
fchs
daa
ds
sbb
fiadd
aaa
dec
les
lds
sbb
fistp
push
jp
or
dec
(bad)
pop
push
aam
call
dec
cmp
test
das
sbb
jmp
inc
inc
adc
jne
jl
cld
or
add
sub
out
push
int3
(bad)
fdiv
scas
pop
(bad)
lea
xor
push
and
inc
push
test
pusha
or
jae
and
push
popa
sub
gs
dec
test
adc
mov
add
push
push
mov
les
push
cmp
sub
gs
cmp
sbb
push
arpl
std
pop
daa
lea
or
mov
popa
sbb
ss
call
call
cmps
mov
sbb
loope
xor
call
dec
add
push
add
inc
mov
add
stc
scas
test
pop
and
not
jns
sub
jne
dec
shr
xchg
rcr
inc
adc
dec
je
add
js
aam
pushf
mov
add
mov
or
sbb
fnstsw
adc
mov
popf
sbb
xor
call
xchg
jns
xor
mov
dec
pop
add
cmp
jl
adc
mov
inc
pop
sbb
jb
adc
and
movs
adc
cmp
int
shl
pop
dec
jae
sub
jle
sub
ret
mov
cmp
ficom
lea
mov
sub
sub
cmp
ja
sbb
cli
pop
shr
adc
inc
loopne
fwait
out
jo
cmp
in
inc
push
inc
or
ds
push
mov
xchg
sbb
add
push
mov
sbb
mov
and
nop
jg
add
xor
shl
rcr
cmp
add
sbb
inc
sbb
out
sub
aaa
daa
test
dec
adc
adc
jns
sar
int3
or
mov
or
push
fstp
mov
dec
lds
jmp
jne
add
fld
pop
add
fdiv
jno
xchg
mov
ror
pusha
xchg
(bad)
test
lods
xlat
adc
sbb
or
int3
xchg
loop
lea
mov
pop
push
push
and
pop
xor
inc
sar
sub
test
and
push
bound
fcom
mov
psubusw
fistp
pop
(bad)
out
test
mov
ror
leave
jl
and
or
stos
stos
jne
imul
push
xor
dec
adc
sbb
outs
inc
mov
push
or
lock
div
mov
xor
int3
jmp
dec
dec
sahf
outs
and
inc
aam
xrelease
push
add
push
or
iret
or
mov
imul
jg
xchg
cld
inc
das
mov
inc
push
fstp
dec
ret
adc
gs
rcl
pushf
fild
out
add
jae
inc
xor
cmp
les
ficom
push
jnp
test
repz
push
das
jmp
pusha
sbb
fnsave
jg
mov
(bad)
and
je
jecxz
push
pop
sahf
push
fmul
lock
pop
or
mov
push
aaa
pop
inc
sbb
add
loopne
jns
pop
call
push
xchg
xor
dec
and
js
adc
add
add
xchg
add
and
(bad)
sbb
jmp
and
shr
mov
(bad)
jmp
adc
add
out
push
dec
cmp
shl
pop
retf
jmp
inc
rcl
or
aas
mov
inc
inc
out
les
sbb
mov
lods
add
push
nop
and
adc
dec
fmul
aad
push
push
adc
add
(bad)
test
or
sub
push
jg
cvtps2pd
cmc
sbb
dec
stc
adc
sbb
addr16
mov
push
enter
cmp
add
aaa
bound
sbb
dec
(bad)
xor
xor
push
or
mov
add
outs
ins
adc
sub
push
mov
js
cmp
jae
mov
mov
out
jmp
inc
fisubr
call
push
and
add
cld
test
mov
dec
loopne
je
sbb
adc
scas
shr
bound
ins
popa
add
or
js
adc
mov
adc
push
cmp
pop
sub
aaa
jae
or
adc
pop
inc
or
js
fiadd
mov
push
outs
adc
xchg
xor
and
hlt
rol
push
inc
or
jns
dec
sub
les
sub
inc
jl
cmp
in
or
nop
inc
pushf
shl
inc
test
(bad)
xchg
test
sub
popa
and
cld
loopne
xchg
cmp
hlt
iret
dec
test
stc
in
or
and
leave
dec
push
das
inc
test
daa
in
lock
test
push
lea
mov
ds
adc
sub
sbb
pop
in
inc
and
and
jl
fld
or
cmp
push
push
pop
js
add
sub
mov
(bad)
call
push
or
mov
popf
addr16
dec
adc
call
or
ret
(bad)
sbb
fadd
inc
popa
mov
loopne
aad
dec
xor
(bad)
in
adc
or
sub
or
mov
cmc
(bad)
call
ret
cmp
sub
jo
ret
dec
and
add
push
add
add
js
and
mov
pop
int3
mov
outs
pop
rcl
push
jnp
jne
mov
mov
pop
mov
je
into
lahf
rcr
push
sub
movs
push
pop
clc
daa
mov
pop
sbb
into
mov
sbb
mov
(bad)
cmp
jp
aam
sub
pop
pop
cmp
push
sub
xor
sbb
sub
mov
and
leave
xor
xor
pusha
mov
or
scas
lods
(bad)
xor
aam
and
add
cld
call
(bad)
push
dec
or
(bad)
aaa
in
xchg
imul
sbb
jecxz
bound
inc
hlt
sub
add
call
pop
xor
test
jns
and
xchg
int
add
lds
or
enter
rcr
iret
push
div
inc
arpl
mov
or
fistp
fild
lods
adc
jecxz
adc
mov
daa
xor
sub
add
pusha
test
int3
mov
xor
inc
sbb
shr
mov
mov
adc
test
aam
mov
in
(bad)
sbb
(bad)
xor
and
sub
test
add
add
and
xchg
xor
add
(bad)
call
push
iret
jmp
jne
pop
pop
cmp
lock
in
xor
in
sub
scas
je
push
clc
sub
js
dec
or
jno
stc
or
lds
inc
inc
cs
add
jmp
mov
cmp
jmp
sub
aam
add
loop
sub
xor
and
sahf
cmp
inc
bound
xor
mov
push
not
jmp
xchg
pop
jae
mov
cwde
or
pusha
xchg
nop
ror
dec
xor
retf
mov
daa
jmp
or
in
pop
cmove
aam
xor
mov
sbb
dec
repnz
fdiv
mov
push
push
out
ins
jg
add
mov
dec
sar
jmp
inc
clc
jne
add
ss
add
cld
push
mov
and
jle
adc
test
sub
cdq
pop
hlt
push
jo
gs
mov
or
add
mov
sbb
sbb
cdq
shl
xchg
mov
ret
jp
rcl
jmp
ror
test
dec
(bad)
mov
pop
pop
mov
adc
mov
add
cmp
movmskps
dec
or
rol
adc
lock
xchg
(bad)
jle
adc
loop
es
jge
and
xchg
sbb
pop
sar
xchg
jne
clc
xchg
mov
push
sub
mov
and
out
cmp
add
ss
add
or
cmp
sbb
dec
xor
sub
movs
cmp
or
hlt
push
iret
fisubr
pop
mov
dec
hlt
(bad)
add
mov
jecxz
mul
mov
test
pop
pop
pusha
movs
repnz
mov
mov
or
pop
loopne
jno
cs
inc
adc
aam
shl
sti
and
or
loopne
es
and
daa
and
and
jne
sub
jmp
test
adc
inc
loopne
jmp
sbb
sbb
or
inc
push
sbb
pop
loope
or
mov
push
push
mov
cmp
inc
or
mov
jne
jo
push
jo
(bad)
jmp
and
call
push
add
and
in
xor
or
sahf
das
jl
pop
dec
clc
cmp
(bad)
push
dec
inc
jmp
stc
push
and
push
retf
gs
push
jns
push
add
mov
test
jns
jno
mov
jns
lods
sbb
pop
xchg
(bad)
dec
jae
sbb
jno
mov
in
in
adc
imul
jno
inc
mov
fmul
sbb
push
xchg
adc
adc
sti
mov
mov
(bad)
mov
aas
adc
adc
fs
test
or
dec
adc
ret
push
or
push
dec
lock
cmp
or
(bad)
repz
or
or
rcr
and
addr16
jecxz
imul
mov
inc
pop
mov
(bad)
push
fcom
push
push
add
inc
add
and
jmp
mov
push
ret
pop
icebp
inc
push
cmp
xor
in
nop
push
dec
inc
sub
out
clc
push
mov
jmp
xor
sub
pop
pop
imul
sub
sub
inc
int
push
and
repz
sub
call
push
add
scas
ficomp
xchg
dec
js
(bad)
cwde
dec
push
outs
out
out
dec
(bad)
sbb
daa
popa
sbb
test
xchg
clc
sub
jb
dec
sbb
imul
or
sub
fimul
sbb
sbb
ror
popa
or
xor
and
pop
fs
jp
or
dec
push
push
movs
enter
push
sbb
cmp
ja
js
je
pop
cmc
cld
jmp
jbe
js
arpl
pop
data16
and
add
enter
mov
test
(bad)
mul
add
mov
lds
scas
inc
sub
jne
or
pop
adc
dec
ss
adc
xchg
mov
cmp
and
push
iret
xchg
into
nop
ret
sahf
pusha
adc
(bad)
shr
mov
test
add
dec
ins
cmp
aas
pop
clc
push
cli
pmulhuw
xor
cmp
clc
jge
rol
push
push
mov
mul
sbb
test
test
in
lock
pop
push
shl
add
dec
and
add
xchg
stos
adc
or
retf
shl
scas
mov
retf
jg
es
xor
aas
fnsave
ret
hlt
dec
push
mov
mov
ss
adc
setl
dec
loope
(bad)
aad
adc
ret
js
xor
cmp
sbb
repnz
or
sar
call
out
pop
test
inc
push
push
mov
push
stc
rcr
sub
pop
and
sub
ret
cmp
pop
add
lods
mov
dec
or
sbb
jge
mov
inc
outs
jo
pop
outs
das
push
or
int
mov
sbb
das
fwait
and
or
push
fidiv
xchg
push
add
retf
pop
push
xor
dec
xor
mov
pusha
adc
nop
mov
cli
les
add
jmp
xchg
(bad)
retf
xor
dec
icebp
push
push
daa
jnp
in
adc
sbb
jb
xor
cwde
xor
pop
lahf
push
retf
mov
xor
adc
iret
add
push
add
adc
cmc
adc
fimul
bound
inc
adc
inc
dec
jmp
mov
(bad)
sub
add
or
cmp
mov
adc
ror
mov
pop
xor
arpl
dec
push
mov
jo
fdiv
retf
inc
inc
pop
push
dec
lds
mov
in
leave
inc
pushf
or
mov
neg
push
sub
icebp
test
mov
mov
cmp
popf
loop
push
and
xor
aas
mov
pop
fdivp
push
mov
(bad)
clc
iret
aaa
add
cmc
inc
or
in
fdivr
shl
aaa
and
add
jb
loopne
mov
adc
jbe
or
xor
rol
inc
sub
(bad)
cs
and
xor
or
leave
mov
pop
push
inc
pushf
cmp
xchg
and
int
test
fs
mul
bound
cmp
push
jp
addr16
clc
je
or
or
pop
fisttp
sbb
mov
adc
les
cmp
jb
push
cmp
jae
add
push
xor
sar
and
jne
out
das
add
xchg
xchg
mov
mov
mov
addr16
or
rcl
inc
lods
frstor
push
inc
(bad)
aam
and
push
cmp
test
jle
sar
in
push
fistp
cwde
or
add
bound
pop
pop
xor
test
ins
out
lods
inc
mov
outs
ds
shl
rol
repz
fdiv
rcr
xor
cmp
(bad)
leave
push
pop
or
xor
adc
and
out
xor
xor
sbb
loop
inc
cld
mov
mov
mov
mov
rol
push
fcmove
nop
xchg
aad
sub
ins
test
adc
cmc
rsm
mov
mov
sub
ret
mov
outs
and
inc
sub
out
mov
pop
pop
aas
mov
jo
shl
inc
push
and
in
add
pop
sbb
xchg
ret
mov
aaa
push
fsubr
imul
mov
xchg
push
data16
iret
imul
push
bound
jg
cmp
repz
call
repz
cmp
sub
cmp
(bad)
jne
lea
cmp
lea
xchg
dec
js
inc
cmp
test
shr
cmp
push
push
(bad)
mov
movs
jb
cmp
pop
jne
cmp
sub
push
cmp
popa
imul
out
jl
and
das
mov
mov
in
inc
aam
xor
(bad)
mov
push
inc
or
xchg
inc
ins
ins
(bad)
jnp
and
dec
jne
mov
xchg
gs
push
movs
push
xchg
and
test
sahf
lock
mov
mov
adc
add
pop
sbb
and
scas
xor
in
mov
popf
mov
dec
movs
adc
mov
outs
dec
push
xor
fistp
loop
xchg
fld
push
xor
adc
or
xor
xchg
cdq
add
scas
xor
mov
or
call
adc
rcl
std
xor
and
and
sbb
and
mov
dec
(bad)
pop
push
bound
dec
inc
push
push
leave
inc
push
pop
sub
adc
aad
sbb
pop
cmp
pop
jp
push
add
add
je
clc
add
or
loope
xor
add
or
cmp
or
sbb
sub
dec
dec
ins
add
das
xchg
ror
mov
add
call
mov
shl
sbb
sub
adc
pusha
call
(bad)
push
add
adc
push
sub
ret
sbb
mov
xor
mov
pushf
push
inc
push
sub
jns
setno
popa
mov
lods
cs
jne
mov
xchg
test
jb
neg
sbb
and
add
std
or
rol
cmp
fs
je
sub
add
sbb
test
xor
or
add
pop
imul
inc
inc
cmp
push
ins
add
sbb
or
and
neg
cwde
and
or
jns
ss
cmp
syscall
call
sub
xlat
mov
ret
adc
xor
mov
jb
int
cmp
mov
sidtd
push
mov
(bad)
out
and
neg
sbb
jl
or
pop
push
push
jo
test
dec
fidiv
mov
into
les
dec
or
nop
add
xchg
fmul
mov
out
xchg
add
adc
lea
popf
js
add
cwde
jg
cmp
jle
push
pop
aas
cld
mov
inc
cld
push
lea
sar
xchg
lea
inc
pusha
mov
xchg
cmc
jg
add
clc
sub
cmp
jle
sbb
mov
xchg
arpl
retf
lahf
(bad)
sti
gs
cli
lea
shl
scas
(bad)
mov
mov
mov
push
scas
add
mov
shl
inc
not
icebp
fld
jmp
jmp
in
dec
jne
scas
push
inc
mov
fucomi
mov
clc
pop
jmp
dec
scas
xchg
loopne
and
movs
shl
and
mov
lods
jmp
inc
inc
or
inc
mov
cmp
add
jecxz
cmp
je
icebp
lock
xor
aad
test
ds
jo
popf
push
mov
in
sub
int3
adc
jge
shl
add
add
adc
pcmpeqw
xor
or
pop
stos
sub
fild
inc
ins
and
xchg
inc
cli
ds
push
pop
test
les
enter
loopne
aaa
nop
popf
push
test
adc
adc
push
ins
mov
dec
add
dec
lods
xchg
xchg
xchg
or
shl
fsub
dec
jmp
nop
jbe
cmp
xchg
ds
ret
sbb
xchg
jmp
out
in
jae
xor
aaa
fdivr
add
sub
adc
not
dec
js
add
dec
xor
retf
cs
add
inc
sub
mov
test
add
je
sub
pop
dec
pop
inc
xor
scas
cmps
add
xchg
or
cmp
adc
call
jecxz
fild
pop
mov
je
lods
and
sub
add
xchg
cmc
add
push
ficom
or
add
pusha
popf
inc
fldenv
sub
sbb
or
popf
retf
inc
inc
bound
and
or
dec
push
pop
stos
je
push
add
xchg
push
rcl
mov
shl
cmp
jae
push
popa
call
bound
pop
call
adc
sub
jo
adc
sub
mov
cmp
outs
mov
xor
(bad)
sbb
imul
adc
test
mov
pop
or
js
add
mov
adc
add
fwait
push
push
cmp
mov
sub
pop
imul
loope
pusha
mov
sbb
or
fidiv
dec
sbb
cdq
inc
push
dec
inc
xchg
inc
or
ret
ds
mov
and
mov
aaa
jmp
jp
test
(bad)
and
icebp
or
push
popa
pusha
stmxcsr
lea
pop
mov
fcmovb
xor
inc
cmp
rcr
imul
int
pop
(bad)
cmp
aas
push
push
popa
movs
test
fdiv
or
jnp
adc
enter
test
inc
push
loope
int3
xor
sbb
push
add
call
sbb
dec
jmp
imul
dec
dec
stos
repz
addr16
pminsw
sar
mov
test
pop
popf
inc
shl
pushf
cmps
pushf
push
mov
repnz
xor
outs
push
sub
sub
bound
loope
stos
add
mov
int3
mov
enter
stos
add
and
js
lods
rol
adc
(bad)
loope
dec
push
or
add
arpl
mov
sahf
popf
pusha
and
cmp
data16
stos
pop
jl
cmp
lods
loope
test
add
pop
out
inc
jp
nop
jle
pop
and
and
push
inc
or
or
add
movs
test
jo
sub
push
and
stos
fwait
retf
call
and
dec
pusha
rcr
xor
sub
push
je
mov
or
cld
or
jp
xchg
xor
lahf
xchg
ja
je
popa
ret
xchg
rol
je
push
add
nop
js
inc
fimul
cmp
js
push
push
xchg
icebp
cmp
push
ja
aam
xchg
test
jns
inc
sub
outs
push
xor
push
cmp
dec
inc
inc
movs
mov
jge
jb
add
stos
sbb
loopne
pop
jns
(bad)
in
xor
or
push
rol
or
lods
js
push
div
adc
inc
fisubr
adc
sar
mov
out
dec
movs
push
jg
mov
call
and
es
and
and
shl
sbb
ror
jmp
mov
arpl
adc
pop
jnp
(bad)
stos
and
or
mov
jl
adc
test
les
mov
sahf
pusha
mov
fsub
mov
and
bound
or
enter
mov
push
jne
lods
pop
jnp
pusha
push
jns
and
in
add
popa
xchg
sqrtps
sbb
sub
in
push
stos
mov
ds
mov
outs
fwait
clc
imul
push
and
cmp
loopne
call
int3
jge
dec
lods
xor
sbb
xor
and
inc
add
fldcw
or
xchg
mov
or
xor
fsub
ins
call
fstp
or
ins
fisub
push
jmp
fst
push
adc
mov
and
inc
jp
sub
inc
mov
sub
xor
jae
dec
adc
mov
cmps
sub
and
sbb
sti
hlt
add
cmp
inc
pop
jo
ja
fldln2
popa
adc
mov
in
fcmovb
or
xchg
clc
inc
clc
pop
add
dec
xor
sbb
or
dec
inc
mov
mov
fst
hlt
mov
(bad)
mov
fisub
neg
mov
loop
cdq
xchg
add
and
leave
ja
add
pop
sar
je
push
jbe
xchg
mov
data16
xchg
add
scas
push
cmps
adc
adc
das
xlat
mov
inc
jb
mov
push
inc
lock
sub
call
cmps
inc
aam
(bad)
or
mov
pop
inc
mov
repnz
sbb
pop
jl
mov
pop
inc
in
sar
js
mov
dec
icebp
push
or
sub
das
cmp
mov
js
ret
sub
pop
or
fdiv
adc
iret
mov
push
mov
imul
(bad)
shl
fisubr
std
lock
xchg
clc
pop
add
addr16
add
shr
jle
and
dec
mov
inc
imul
aam
cmc
and
or
outs
xor
pop
inc
scas
pushf
dec
js
fcomp
dec
data16
adc
adc
mov
ret
and
test
jnp
in
shl
jmp
inc
inc
(bad)
jnp
xor
rcr
sbb
bound
repnz
dec
(bad)
adc
repz
add
out
hlt
sbb
lods
xor
mov
mov
xchg
pop
cmp
ss
(bad)
in
dec
push
sub
and
adc
inc
mov
cmp
jle
adc
ss
sub
lds
jmp
nop
sub
lock
pusha
call
popa
mov
push
cmps
and
inc
dec
(bad)
fdivr
dec
movs
add
jge
add
test
lahf
adc
jb
in
cmp
lock
mov
sub
adc
add
scas
or
mov
push
imul
jae
imul
test
mov
repnz
mov
xchg
fisub
cmp
dec
fnstenv
jle
xor
sbb
fiadd
mov
test
jmp
dec
(bad)
shr
xor
xchg
adc
addr16
stos
jae
xchg
pop
xor
daa
and
ins
xlat
add
and
inc
addr16
adc
(bad)
push
or
xchg
xor
fwait
cmp
inc
or
or
dec
cmc
xchg
xor
adc
and
push
jmp
inc
fist
push
mov
mov
loopne
xor
push
mov
jns
add
push
aas
add
out
mov
(bad)
mov
scas
mov
xchg
outs
mov
or
jmp
cli
xor
pop
clc
and
sub
lods
ret
adc
push
push
push
gs
adc
xchg
add
add
dec
ret
xor
test
sub
fs
push
pop
xchg
les
and
test
scas
neg
js
push
stos
dec
xchg
imul
sbb
loope
mov
push
ss
or
iret
or
and
idiv
ret
mov
dec
les
ss
fisttp
sbb
sub
adc
jo
fcomp
push
mov
stos
xor
add
add
or
(bad)
repnz
or
sub
mov
popa
push
and
and
dec
xor
popf
jbe
shr
popf
sub
push
in
mov
jno
mov
sbb
(bad)
or
adc
aam
mov
fwait
jbe
or
std
sub
pop
pushf
add
mov
pusha
cmp
shr
dec
mov
xchg
inc
adc
dec
or
loopne
je
sub
push
ja
adc
imul
data16
cmps
pusha
sub
rcr
and
add
ret
pop
push
cmp
pop
inc
je
dec
loopne
test
out
pusha
cmp
sbb
adc
psadbw
pusha
cmp
dec
test
imul
mov
inc
sbb
dec
dec
xchg
mov
push
push
fisttp
fdivr
push
xor
lahf
jp
inc
add
push
xchg
inc
push
test
jbe
sub
pop
or
cmp
dec
push
add
push
rol
jns
push
cwde
test
mov
(bad)
aaa
(bad)
or
popf
push
add
shl
add
xlat
mov
sbb
ret
adc
or
ret
aad
or
mov
add
cmp
cdq
jmp
xor
fadd
out
or
and
push
jo
push
pop
cmp
xchg
out
inc
dec
dec
xor
fnstsw
push
aaa
push
mov
aas
sub
shl
adc
pop
div
popa
xor
xor
loopne
mov
dec
ror
in
sbb
test
outs
jg
ins
jne
dec
cmp
jle
or
push
mov
push
and
push
xchg
push
jge
dec
std
dec
test
inc
add
dec
inc
(bad)
jecxz
cmps
mov
push
or
sbb
jmp
mov
push
div
into
pop
jmp
das
pop
loop
mov
xchg
mov
or
pop
aas
mov
(bad)
hlt
aam
dec
mov
popa
pop
inc
push
fnsave
mov
push
cs
stc
je
pop
sub
jne
push
mov
out
mov
push
push
imul
jle
push
jne
js
es
pop
mov
jb
push
out
rcr
sub
dec
xchg
jp
or
or
loopne
push
movs
adc
jnp
xor
pop
dec
and
jb
mov
repz
jb
fadd
int3
mov
inc
pop
fwait
in
pop
(bad)
adc
add
inc
mov
sub
aam
xor
loopne
cmp
push
mov
shr
add
jl
cli
and
add
js
add
sub
adc
push
or
sub
xor
sub
(bad)
aaa
adc
call
ds
dec
je
mov
mov
frstor
jle
mov
jae
adc
sub
sub
lea
add
aam
jne
cmp
mov
xchg
mov
mov
fwait
xor
adc
mov
adc
xchg
outs
out
mov
mov
push
pop
cmps
mov
sub
mov
popa
stos
mov
pusha
jnp
(bad)
mov
pop
fld
adc
int
cmovne
add
rcr
clc
int
cld
jl
rcr
sub
ror
mov
xchg
add
push
mov
repnz
cmp
fldenv
outs
jle
adc
pusha
or
inc
jne
lea
inc
push
or
jb
pop
add
jbe
test
test
sbb
je
or
popa
xor
add
mov
xchg
retf
adc
or
dec
dec
stos
sahf
data16
and
ret
loop
push
clc
hlt
mov
pop
outs
jmp
add
xchg
es
call
sbb
push
mov
shl
mov
ss
fld
lahf
push
ja
clc
or
jge
inc
pop
or
add
icebp
clc
clc
or
adc
mov
pop
shl
inc
mov
jae
fdivr
leave
or
shr
mov
cmps
xor
jae
dec
inc
scas
dec
inc
xchg
loopne
push
mov
clc
mov
add
inc
mov
add
jl
enter
add
push
pusha
inc
shl
mov
(bad)
cmp
inc
inc
xor
das
push
in
and
xor
sub
enter
shr
clc
js
add
jge
and
inc
push
jl
push
push
dec
adc
sbb
out
ins
jmp
clc
and
jle
sub
jne
jmp
mov
scas
adc
jae
push
add
mov
jmp
cmp
and
xor
sbb
and
and
nop
aam
out
or
sub
sub
movs
mov
dec
dec
push
rcl
cmp
out
mov
push
inc
jne
jns
int
xchg
mov
dec
jbe
fnstcw
out
out
arpl
pop
or
pop
test
mov
nop
cmp
cmps
nop
or
js
aaa
pop
scas
xchg
mov
cmp
inc
add
das
and
mov
pop
dec
jmp
dec
jb
sbb
pusha
push
pop
repnz
pop
mov
pop
xchg
call
mov
cwde
xchg
mov
ins
cmps
imul
lods
fwait
push
sub
mov
add
not
and
ins
mov
adc
mov
push
inc
adc
hlt
cli
cwde
mov
adc
adc
pusha
add
or
lock
add
sbb
dec
adc
xor
lock
mov
jns
adc
push
inc
(bad)
pusha
pusha
jmp
cmp
push
ror
test
pop
enter
ret
rcr
xor
daa
dec
and
or
dec
sub
ret
push
xchg
rcl
mov
jmp
shr
add
push
dec
dec
push
aad
mov
div
and
popf
push
ds
das
fiadd
adc
test
and
dec
push
mov
jle
mov
mov
add
adc
inc
nop
shl
pop
or
test
daa
lock
dec
push
xor
dec
pop
push
cwde
mov
jnp
out
outs
(bad)
fisttp
add
jmp
cmp
jne
cmp
jb
dec
or
in
cmps
icebp
and
dec
add
mov
ins
test
fs
int3
rol
nop
adc
push
sub
xor
lahf
mov
dec
fld
enter
mov
fwait
inc
loopne
lahf
cdq
adc
inc
aas
pop
movs
loope
mov
xor
jns
or
jne
push
or
int3
sub
ins
pop
gs
xor
dec
sub
and
adc
es
jp
and
rcl
(bad)
fidivr
push
sub
push
adc
sub
push
mov
data16
pop
aaa
dec
mov
push
dec
hlt
mov
jmp
mov
mov
and
cmc
xchg
popf
sub
push
xor
inc
add
fcomp
cmps
lock
lahf
or
cmps
dec
pop
in
mov
xchg
retf
cmp
sub
cmp
cmp
pushf
push
push
adc
adc
int
mov
pop
jnp
cdq
retf
sub
mov
mov
mov
dec
ins
and
add
inc
ror
sub
enter
xor
enter
cmp
retf
pop
enter
scas
ins
cmp
inc
pop
jb
push
sbb
nop
imul
dec
inc
pusha
or
movs
sub
popf
jge
sub
adc
frstor
and
mov
sub
pusha
push
js
pop
adc
dec
adc
xchg
sbb
pop
fwait
ret
in
lods
int3
and
pop
jbe
sbb
pop
jne
cdq
(bad)
ja
push
in
pusha
cwde
xor
(bad)
pop
int
and
push
adc
adc
or
or
fwait
movs
shl
leave
test
stos
out
dec
xor
mov
mov
inc
or
cwde
adc
pop
test
or
add
pop
inc
mov
test
ret
movs
add
and
sbb
sub
pop
jnp
shl
jmp
fstp
mov
mov
arpl
inc
aas
dec
lea
enter
pop
pop
xchg
xor
or
fs
pusha
nop
setbe
push
sbb
cdq
rcr
dec
clc
inc
dec
add
push
mov
pop
or
addr16
dec
mov
add
sub
mov
pusha
add
adc
jg
cmp
je
cmp
int
xor
pusha
daa
ds
retf
inc
loopne
mov
cmp
lea
outs
mov
add
jge
xlat
cmp
out
xchg
pop
or
dec
adc
bound
sub
dec
popa
pop
mov
sub
shl
mov
lea
mov
mov
sbb
pop
and
inc
das
or
outs
xor
or
inc
adc
sub
push
pop
push
push
pusha
fs
xor
mov
popa
ins
xchg
and
mov
rcr
cdq
xchg
rcl
add
call
or
lock
enter
pop
inc
dec
cmp
mov
push
arpl
add
inc
jbe
loope
movs
pop
les
cwde
push
enter
verw
dec
movs
inc
dec
cld
or
pop
je
adc
sbb
and
je
js
inc
adc
pop
dec
rol
js
ja
xchg
jge
out
add
xchg
jne
call
lahf
rcr
dec
ficom
dec
dec
adc
repz
popa
lahf
clc
cld
cmp
je
push
outs
pop
jmp
adc
ss
push
inc
cmp
data16
call
jmp
(bad)
dec
lods
inc
sbb
inc
or
mov
dec
push
pop
add
pop
call
jne
push
mov
xchg
lds
jg
xchg
mov
test
xor
iret
jae
nop
sbb
leave
dec
adc
add
mov
pop
xor
mov
(bad)
sbb
ins
and
lods
jne
add
data16
in
retf
or
dec
or
in
mov
add
dec
push
cmp
xchg
or
(bad)
mov
ins
or
inc
repnz
mov
pop
xchg
sub
adc
int3
push
and
mov
and
ins
xor
inc
and
pop
jae
sub
ret
sbb
add
push
sar
jp
retf
movs
mov
inc
enter
mov
movs
test
adc
inc
lods
mov
push
jb
mov
sbb
mov
sbb
enter
xchg
rcr
adc
enter
xchg
push
int3
mov
or
add
aas
push
call
rcl
dec
xchg
sbb
and
xor
dec
sbb
mov
xlat
xor
fcomp
and
inc
test
fnsave
int3
jecxz
or
aad
stos
jecxz
std
call
popa
in
int
mov
popf
daa
push
mov
lahf
xchg
adc
jge
in
mov
pop
mov
sbb
clc
dec
push
mov
push
or
cs
enter
add
icebp
push
aam
jge
loopne
loopne
ret
inc
or
mov
pusha
jl
xchg
sub
xor
out
aam
and
push
xchg
nop
retf
sar
jmp
xchg
mov
call
jmp
jmp
cmps
push
gs
sub
out
jno
sar
aad
pusha
mov
clc
aas
sub
pop
dec
jmp
neg
inc
pop
or
sbb
jmp
push
sbb
ins
nop
cmps
mov
imul
pushf
sub
mov
pop
rcl
ret
sti
pop
add
dec
add
or
xor
inc
jne
dec
(bad)
aaa
mov
xchg
lock
push
xchg
cdq
or
and
add
xor
dec
jae
adc
jmp
and
lea
push
imul
std
sub
mov
mov
sbb
cwde
adc
sahf
test
or
cdq
mov
enter
(bad)
popf
leave
inc
sub
push
in
clc
sar
sub
daa
loopne
nop
(bad)
add
xor
add
aaa
test
(bad)
mov
cmp
jle
sub
add
ss
(bad)
retf
cmp
jge
xor
push
hlt
jle
aad
mov
fwait
sbb
sbb
jl
or
xor
leave
add
ret
aaa
test
inc
outs
rol
hlt
shl
popf
mov
add
mov
fs
repnz
mov
imul
add
adc
pop
fwait
es
lock
adc
dec
ror
clc
imul
or
jne
cs
push
das
(bad)
jp
inc
add
adc
cs
je
mov
add
jo
jne
mov
test
(bad)
iret
and
lods
or
sbb
push
xor
in
xor
pop
enter
call
vprotb
xchg
jmp
push
sub
push
pop
push
out
inc
aad
imul
add
loopne
sbb
fidiv
ss
dec
pop
test
push
add
daa
cwde
das
movs
imul
jnp
add
sti
push
adc
nop
sub
add
fdiv
jmp
pop
(bad)
loopne
push
ret
ret
fsub
and
pop
mov
jb
adc
and
(bad)
jecxz
(bad)
stos
ja
inc
loopne
test
xchg
or
cdq
add
sbb
test
adc
(bad)
xchg
or
pushf
push
pusha
cmp
add
mov
loop
xor
xlat
pusha
or
and
rcr
xor
pop
inc
sar
mov
lock
loop
int3
jmp
xchg
ror
mov
ror
jo
in
out
or
fdivr
les
mov
or
into
pop
call
jns
add
movs
pop
mov
ss
cmp
jae
sbb
add
push
fsubr
cmp
dec
push
or
ins
inc
sub
jbe
(bad)
hlt
push
push
(bad)
jns
sbb
ret
lock
pop
jb
(bad)
pop
add
dec
lock
into
popa
(bad)
push
lock
out
pop
stos
add
and
aad
dec
test
shl
push
mov
xor
dec
popf
fcmovne
inc
test
ret
push
pop
fild
mov
les
sbb
pop
push
sbb
loop
and
imul
rol
push
and
inc
dec
sub
inc
jp
sub
or
inc
mov
or
mov
add
push
cdq
push
sbb
cmp
xor
pop
ds
push
add
push
je
cmp
jne
(bad)
outs
cmp
sbb
cmp
pop
push
pushf
cmp
push
xlat
mov
push
and
pop
and
and
push
push
nop
(bad)
loopne
pop
dec
es
sbb
sub
dec
aas
or
cmp
inc
push
sbb
xchg
mov
mov
add
leave
pushf
les
xor
add
sub
les
pop
aam
push
adc
rcl
sub
mov
loopne
shr
sub
pop
and
in
je
dec
inc
pop
loope
dec
hlt
pop
js
add
outs
lahf
push
ror
mov
fwait
imul
test
push
mov
mov
je
sub
or
or
imul
rcr
mov
movs
daa
add
shl
les
fnstenv
je
xor
cmps
add
jl
sbb
sub
adc
(bad)
fisub
sub
(bad)
lods
push
cmp
fstp
cmp
cmc
jne
jae
fs
jmp
in
loopne
dec
add
mov
rdtsc
and
pop
and
sbb
(bad)
test
mov
push
pop
nop
jmp
call
inc
jae
adc
xchg
jg
test
data16
loopne
dec
loopne
push
je
jmp
add
mov
inc
fwait
xor
enter
inc
sbb
out
cmp
adc
jb
or
adc
add
or
popa
dec
sub
daa
and
pop
ins
push
jge
je
adc
jnp
ds
hlt
mov
xchg
fld
pop
ins
cmp
je
adc
push
fs
in
(bad)
(bad)
sub
push
pop
or
dec
repz
in
inc
dec
add
in
sub
or
jge
push
xor
sbb
adc
adc
xlat
cld
stos
pop
dec
push
cmp
js
or
fdivr
arpl
or
call
mov
(bad)
dec
push
cmp
cmp
cs
sbb
inc
aad
mov
mov
cmp
sub
or
jno
sub
lods
outs
add
movd
xor
pop
nop
pop
push
jp
xor
dec
fst
jne
test
xchg
cmp
sahf
std
add
adc
push
and
add
ins
add
retf
(bad)
pop
daa
test
cmp
test
sbb
push
push
push
and
jecxz
push
fdivr
push
jge
jmp
and
push
jmp
add
popf
movs
pop
mov
sbb
sbb
mov
or
cmp
in
xlat
jle
push
or
push
cmps
xchg
aam
or
mul
push
cmp
or
movs
imul
and
js
loop
mov
cld
call
push
lock
in
outs
adc
jbe
mov
push
pop
add
push
pop
popa
icebp
imul
pop
dec
enter
inc
call
dec
mov
cld
push
push
push
sbb
and
push
jb
sbb
rcl
dec
push
cmp
xchg
arpl
jp
mov
sub
push
add
push
sti
mov
lods
ins
loop
dec
rcr
outs
cmp
hlt
fadd
or
lods
rcr
jae
jecxz
in
pop
inc
push
bound
cs
out
or
mov
(bad)
in
mov
and
sub
mov
in
in
xor
mov
jmp
push
(bad)
je
mov
retf
shl
inc
inc
xchg
sub
push
enter
or
leave
inc
push
adc
add
leave
push
xchg
cmp
sub
(bad)
adc
out
sbb
nop
dec
adc
pop
pop
and
ret
sub
and
mov
sbb
dec
adc
(bad)
or
mov
adc
jne
inc
ret
adc
xlat
inc
jmp
ds
les
gs
or
test
pop
or
and
sub
or
jnp
cmp
jae
sbb
mov
adc
fild
inc
ds
lea
sar
mov
call
jl
or
xor
popa
xor
push
add
ret
and
xchg
rol
pop
sbb
pop
aaa
dec
add
das
push
pop
xchg
test
add
push
dec
retf
and
jae
push
push
cmp
sbb
fcmovbe
add
mov
pop
clc
int
inc
pop
push
push
je
push
movs
bound
scas
inc
test
rol
or
jnp
adc
pop
xor
jne
aad
push
dec
dec
out
push
cmp
mov
pop
cmp
pop
sub
gs
xchg
push
xchg
push
cmp
icebp
mul
xchg
sub
call
sbb
ins
pop
in
pop
cmp
lock
cmp
mov
jnp
adc
jne
scas
test
sub
adc
setnp
aad
xchg
stos
es
(bad)
push
xor
ss
jnp
adc
mov
sub
icebp
sub
xchg
(bad)
mov
cmp
add
mov
xchg
push
push
adc
fwait
jl
aad
pop
sbb
push
or
sub
pop
or
jl
and
aas
jbe
add
(bad)
and
dec
xchg
dec
je
dec
repnz
jo
sbb
fs
mov
popf
adc
mov
jl
adc
add
and
xchg
mov
mov
shl
cmp
jae
sub
mov
xor
callw
adc
inc
dec
sub
mov
neg
jb
out
push
scas
jo
push
ins
test
xor
cmp
adc
adc
cmp
add
mov
push
cmc
and
test
add
out
movs
mov
cmp
jmp
sbb
test
inc
sub
xchg
ret
popf
add
jo
mov
xchg
(bad)
dec
loopne
popa
push
mov
and
push
mov
lea
daa
rol
dec
sub
pop
test
and
add
add
xor
mov
call
dec
dec
inc
test
loop
js
pop
mov
aad
enter
cmp
jmp
ja
icebp
dec
pop
mov
dec
jp
sub
popf
lea
(bad)
jne
cmps
les
mov
add
xor
pop
out
cmps
cmps
add
or
add
mov
imul
jnp
push
mov
gs
xor
add
push
cmps
call
or
cmp
test
sbb
pop
retf
dec
outs
jmp
or
clc
jne
cmp
push
test
test
or
lods
mov
jno
push
jle
test
(bad)
imul
test
loopne
add
push
mov
pop
jnp
shr
mov
and
mov
xchg
ror
rcr
pop
add
je
push
in
push
pop
and
add
test
fadd
adc
and
js
mov
fbstp
stos
loop
add
ds
lea
lock
ja
pop
inc
inc
or
shl
xchg
popa
fucomi
mov
(bad)
push
add
jmp
add
push
jne
xchg
jo
mov
jecxz
dec
lods
add
inc
loope
aaa
add
(bad)
fld
nop
mov
mov
adc
add
daa
add
aaa
scas
mov
cmp
(bad)
mov
add
inc
or
sub
mov
mov
adc
pop
std
jmp
sub
cmp
das
add
push
jbe
mov
inc
add
adc
mov
(bad)
push
aas
push
mov
and
pushf
adc
adc
mov
mov
sub
cmps
cdq
repnz
or
pop
mov
xchg
mov
rcr
cmc
call
cmp
aad
fs
(bad)
jo
mov
or
or
adc
jmp
mov
add
adc
xor
lea
rcr
sti
or
adc
leave
push
pop
movs
cwde
pop
or
mov
ss
fadd
push
cs
sub
iret
enter
ret
cs
ret
les
push
add
(bad)
dec
lahf
test
inc
fisttp
sub
pop
mov
push
push
outs
or
jp
jl
fild
or
sub
xor
adc
mov
pop
or
leave
dec
dec
add
push
popa
add
or
pop
or
stos
mov
daa
jmp
test
fimul
test
add
mov
sbb
and
hlt
push
pop
pop
ret
mov
(bad)
retf
sub
ds
adc
add
retf
jb
mov
and
call
add
lods
les
scas
inc
mov
clc
ins
(bad)
pop
push
sbb
mov
arpl
add
pop
adc
fisub
push
push
je
push
dec
mov
jnp
mov
push
or
jo
xchg
sub
adc
or
xchg
xor
xchg
mov
add
xchg
pop
mov
dec
ror
pop
popf
or
sbb
rcl
jecxz
test
js
xchg
push
add
pop
mov
fadd
add
sbb
and
pop
cs
adc
add
popa
imul
sbb
push
jne
cmp
sbb
adc
or
fiadd
lahf
sbb
pop
(bad)
fdivr
imul
jno
jae
daa
je
and
inc
inc
fs
jo
or
outs
(bad)
push
inc
(bad)
(bad)
enter
or
or
inc
mov
push
add
pusha
add
xchg
jbe
jnp
xchg
call
in
jbe
adc
je
or
push
sub
lock
ror
lods
add
icebp
lea
sbb
push
mov
je
add
inc
inc
pop
ins
pop
lock
or
adc
jo
aas
(bad)
pusha
push
dec
or
mov
es
xchg
mov
icebp
out
ret
jmp
out
inc
xchg
lock
cs
jle
mov
daa
and
mov
pop
mov
mov
adc
in
in
in
rol
xchg
rol
dec
jmp
mov
not
add
push
bound
(bad)
push
je
xor
movs
call
sar
ja
adc
daa
mov
call
pop
mov
data16
int3
ins
cmp
cmp
ret
call
movbe
sbb
mov
sbb
mov
adc
xchg
push
push
es
std
in
sti
xchg
pop
cmp
push
cmps
sbb
adc
loop
sub
mov
or
ret
inc
adc
add
inc
sbb
add
or
aam
sbb
stc
loop
ret
rcr
add
das
push
in
add
cwde
pop
je
loop
out
and
mov
add
popa
addr16
push
mov
in
loop
mov
std
ins
push
jg
xor
push
pop
push
mov
outs
call
add
sub
loopne
jo
xor
inc
or
int
clc
sub
and
sub
popa
cmp
daa
xchg
imul
xor
adc
push
push
pop
push
mov
clc
movs
lock
rcr
or
in
shl
sub
and
les
jns
aam
adc
mov
inc
rcl
mov
cmp
xchg
movs
cmp
xor
or
in
fidiv
xor
sbb
leave
leave
jmp
pusha
push
clc
arpl
nop
imul
add
out
test
mov
sub
(bad)
out
ins
(bad)
loopne
pop
lods
(bad)
stos
sbb
retf
jae
sbb
or
sub
popa
add
fcmovbe
int3
push
push
and
dec
sub
mov
sbb
sub
repnz
lds
fadd
cmps
cmp
mov
lock
jno
aad
cs
sti
mov
pop
js
inc
mov
ror
pop
dec
dec
imul
iret
push
mov
xchg
add
push
or
add
jo
js
test
and
(bad)
cli
push
test
movs
pop
mov
xchg
mov
dec
cmp
imul
or
iret
xchg
div
push
add
add
lea
or
clc
adc
mov
adc
push
push
adc
pop
fldcw
jmp
dec
loop
and
pop
sar
mov
ret
cmp
pop
or
jne
ror
mov
fild
pop
adc
out
dec
mov
push
jb
daa
rol
fcomp
cmp
add
xchg
cmp
pop
jno
lahf
mov
nop
sub
fadd
stos
dec
int3
jns
or
in
xor
xchg
jge
jmp
jp
push
jmp
mov
in
adc
cmp
lock
push
hlt
and
sbb
adc
mov
mov
mov
or
sbb
adc
push
dec
pop
sbb
jo
bound
shr
or
push
push
scas
imul
loopne
pop
std
jo
mov
and
jmp
sbb
pop
fst
xchg
std
mov
dec
and
mov
pop
aad
shrd
inc
add
mov
jbe
jecxz
mov
mov
xchg
and
aas
fnsave
push
das
out
sahf
push
ss
pop
int3
rol
push
jae
sbb
movs
add
dec
adc
popf
push
imul
repnz
fcmove
es
pusha
lock
popf
shr
stos
shr
fldenv
fst
jmp
or
iret
retf
xchg
lods
lods
popa
mov
imul
mov
cmp
ja
movs
test
adc
sbb
imul
ror
int
out
idiv
jmp
clc
inc
jno
fucomi
jmp
mov
jmp
aam
rol
jmp
leave
inc
sbb
sub
fild
js
add
retf
xchg
out
push
xchg
lds
cdq
call
lods
repz
std
in
mov
and
lods
pop
enter
pop
movs
cwde
cld
hlt
test
pop
popa
fmul
hlt
push
inc
aad
add
data16
test
js
add
mov
addr16
int
and
into
das
xlat
jmp
sbb
xchg
adc
jmp
adc
mov
stos
mov
stos
rol
test
dec
fiadd
cmps
fwait
xchg
push
test
fidivr
in
pushf
push
cmps
in
iret
mov
cs
div
sahf
ja
rcl
fild
in
clc
mov
mov
inc
popf
push
push
sub
sahf
out
ds
pop
pusha
je
daa
out
in
adc
push
mov
pop
ror
pop
sahf
xchg
popf
in
mov
mov
aas
popf
std
and
lahf
add
cmp
ficom
aaa
jnp
mov
jns
call
pop
(bad)
fistp
mov
add
ins
je
jp
je
mov
jbe
or
je
dec
jne
jb
mov
test
or
pop
aam
adc
or
xchg
clc
pop
cmp
xchg
scas
xchg
rcl
adc
test
ficomp
inc
shl
ins
loop
push
aaa
adc
cmc
imul
mov
arpl
cdq
pop
jmp
lea
mov
sub
adc
cdq
inc
dec
and
aad
dec
in
fsubr
push
jp
cmp
aaa
pop
jne
iret
and
scas
sub
push
or
push
mov
xchg
mov
imul
cwde
cld
mov
movs
mov
push
mov
xchg
mov
jne
es
and
jl
sub
pop
jg
dec
push
bound
jb
call
xor
mov
aaa
ds
and
push
push
mov
jbe
push
cld
cmp
dec
or
adc
xchg
inc
mov
enter
imul
mov
cmp
push
pop
xchg
add
fimul
stc
or
test
jae
popa
retf
inc
dec
jl
push
pop
pop
or
or
frstor
push
leave
fs
cmp
ss
or
sbb
addr16
xchg
mov
mov
stos
aas
fbstp
(bad)
in
add
sbb
push
push
and
add
mov
push
cli
push
jns
(bad)
(bad)
push
pop
ja
add
sbb
lods
jo
sub
imul
dec
mov
mov
xor
push
add
ins
push
adc
je
(bad)
pop
jne
out
mov
out
sar
popa
xor
mov
gs
jo
and
pop
sbb
xor
adc
inc
or
mov
dec
(bad)
jnp
add
mov
mov
add
mov
ret
(bad)
int
jne
or
jne
adc
sub
das
loop
inc
adc
cmp
or
push
sub
xor
mov
or
pop
arpl
call
cmp
sbb
or
push
jae
mov
push
inc
xchg
and
fs
mov
cmp
jecxz
mov
add
add
repz
test
xchg
add
icebp
inc
push
mov
sub
add
in
inc
inc
push
inc
sbb
outs
fstp
push
mov
push
hlt
mov
add
lock
mov
mov
mov
pop
add
daa
add
jb
mov
sbb
adc
stos
pop
aam
add
stc
fisttp
aaa
fcmovb
push
add
inc
sbb
nop
sbb
add
sbb
ret
rcr
push
sub
mov
mov
adc
imul
pop
xchg
in
xchg
inc
or
jo
push
push
dec
or
pop
adc
cmp
mov
loope
sbb
sahf
hlt
push
dec
stos
xor
inc
inc
add
mov
dec
data16
mov
push
call
pop
imul
xchg
imul
rcl
push
cwde
hlt
jbe
or
loopne
pushf
in
in
pop
pusha
je
push
mov
out
sub
add
and
pop
outs
stos
xchg
cmp
icebp
inc
mov
into
and
mov
and
jle
aas
dec
inc
test
js
add
dec
add
xchg
xlat
push
nop
inc
je
pop
int3
pushw
xlat
sub
dec
test
cwde
lods
loopne
jle
dec
xchg
aaa
movs
dec
out
cmps
dec
pop
cmps
add
repz
into
cmps
popf
mov
dec
hlt
clc
call
dec
icebp
inc
xchg
or
and
inc
mov
inc
inc
adc
je
jb
cmp
push
push
scas
leave
push
mov
push
cmp
and
and
xor
adc
and
sahf
idiv
push
add
add
jge
fild
add
cmp
push
enter
push
inc
jge
nop
adc
(bad)
fild
and
add
cmps
cmp
aad
in
add
xor
inc
mov
cs
mov
jno
sbb
inc
clc
and
xor
or
or
jae
and
test
bound
sbb
daa
inc
pop
xor
aad
jg
cmp
inc
loopne
dec
mov
mov
popa
test
mov
ret
sub
xchg
pop
cmp
dec
pop
movs
push
stc
and
outs
sbb
jl
sbb
(bad)
movs
retf
ss
cmc
gs
imul
add
pop
or
retf
test
mov
fptan
or
push
or
mov
ret
mov
xor
cmps
adc
inc
cmps
fstp
push
adc
loopne
push
or
dec
add
fstp
adc
sub
sub
loope
xor
mov
ror
pop
push
out
fbstp
(bad)
push
js
in
loop
jo
jl
push
pop
(bad)
cmp
or
add
dec
test
test
icebp
test
cld
push
and
cmp
je
test
xor
jns
and
adc
push
pop
nop
nop
aas
sbb
pop
sbb
movs
ja
xor
xchg
pop
fwait
in
and
jg
fmul
shr
mov
nop
or
or
jno
add
cwde
or
(bad)
mov
push
inc
imul
loopne
fadd
pusha
pop
ret
loope
mov
rol
cmp
pop
loope
fs
or
mov
das
out
or
adc
push
sbb
loope
loopne
int
arpl
in
add
xchg
mov
adc
(bad)
ss
sub
call
mov
ficomp
xlat
cmp
leave
lods
call
or
xchg
adc
clc
shr
test
push
das
jbe
bnd
jne
fiadd
icebp
add
jne
add
push
sbb
test
fadd
call
sub
mov
movs
scas
and
adc
adc
lea
scas
or
mov
cmp
cmp
mov
cmp
and
push
push
add
add
or
pop
popa
das
bound
mov
dec
and
dec
test
movs
jmp
add
sbb
rol
cmp
and
mov
pop
fnstcw
and
jbe
fnsave
push
cmc
in
scas
push
js
adc
mov
cmp
jne
cmpxchg
in
mov
les
push
xchg
jmp
test
sbb
shr
pop
adc
sbb
je
js
adc
and
ret
push
pop
mov
data16
xchg
jmp
rol
sub
and
inc
es
pop
mov
push
and
daa
clc
or
in
dec
popf
add
adc
pop
and
fcomp
int3
or
fcom
aaa
or
inc
jo
push
jp
mov
sub
(bad)
out
fwait
add
inc
and
fldenv
cmp
mov
(bad)
adc
lods
sbb
adc
mov
rol
cdq
push
pop
es
jae
fstp
inc
xor
add
sbb
fisubr
call
sub
mov
dec
dec
push
repz
sbb
out
push
pop
outs
add
(bad)
jmp
sub
or
push
and
les
add
inc
mov
inc
cmp
adc
sbb
mov
mov
scas
mov
cmp
mov
sbb
xlat
test
mov
jmp
in
icebp
test
movs
fwait
sub
loope
fs
sbb
inc
mov
cmp
xor
sub
dec
adc
or
or
adc
stos
rcl
int3
shr
aaa
cmp
push
mov
or
dec
mov
and
cs
or
sub
(bad)
adc
push
inc
mov
pusha
mov
mov
mov
scas
cmps
inc
or
sub
fistp
mov
mov
mov
fsubr
inc
ss
inc
jne
inc
jne
xchg
cli
sar
pop
sar
int3
push
test
out
int3
or
or
cmp
jmp
and
cmp
shl
xlat
push
fs
and
(bad)
or
push
shr
fadd
pop
push
push
lea
sahf
in
lods
inc
movs
add
dec
xor
and
and
and
push
jno
and
cmp
ret
jg
fistp
(bad)
rcl
(bad)
jmp
(bad)
pop
mov
push
pop
push
js
inc
fsub
pop
inc
jl
push
enter
and
mov
(bad)
and
pusha
mov
retf
lds
lahf
js
test
fwait
xchg
jmp
rep
jo
pop
lock
clc
lods
jmp
inc
mov
jmp
pop
fsub
push
jl
push
arpl
call
pop
pusha
pop
and
test
xchg
out
lock
push
xchg
es
adc
adc
lods
pop
push
xchg
ret
adc
xchg
push
push
iret
test
sub
dec
push
or
fwait
add
je
loope
fld
add
je
push
sub
faddp
mov
iret
or
sahf
push
lods
xor
dec
pop
mov
push
or
stc
dec
pop
or
leave
shl
mov
jl
push
adc
inc
sub
inc
cmp
jmp
push
nop
push
dec
or
stos
mov
push
int
mov
adc
movs
adc
jne
addr16
xchg
jno
loope
adc
cmc
nop
lock
dec
and
daa
in
xlat
pop
fnstenv
xor
adc
and
add
mov
nop
cs
or
push
adc
mul
adc
rcr
or
and
mov
ret
fwait
mov
mov
adc
cmps
test
inc
push
adc
arpl
out
ins
cmp
cmp
cmp
into
jl
retf
neg
adc
rol
cmps
cmps
adc
ret
inc
call
sbb
or
cmp
(bad)
pop
mov
lea
loopne
pop
mov
adc
sahf
rcr
(bad)
shr
(bad)
adc
in
mov
adc
or
dec
pushf
sub
adc
in
jbe
inc
push
add
lea
inc
sbb
and
inc
xor
mov
xor
test
xchg
mov
lea
add
or
fldcw
int3
cmps
icebp
xor
adc
push
call
test
ret
test
xor
pop
add
cdq
push
add
outs
fsubr
pop
xor
movs
retf
shl
inc
or
dec
or
cwde
lods
pop
into
xor
or
push
xchg
adc
hlt
test
scas
add
adc
adc
adc
data16
(bad)
dec
xadd
push
or
or
movs
sub
lea
mov
push
adc
jl
and
stc
or
or
and
hlt
or
sub
add
nop
(bad)
hlt
jbe
mov
in
xor
stos
jg
mov
and
push
popf
adc
push
dec
add
nop
aaa
sub
sub
or
add
inc
clc
sbb
test
movs
xor
lock
mov
lock
mov
or
xchg
pop
push
mov
push
scas
or
cld
dec
(bad)
jne
jno
push
push
or
cmp
pop
xor
sbb
clc
xchg
mov
mul
test
adc
xor
sub
lock
loopne
dec
mov
mov
push
sbb
imul
sub
inc
cmp
or
xor
cmp
jmp
jl
mul
dec
inc
add
mov
xchg
shl
add
adc
ret
jmp
sub
or
nop
push
or
mov
loopne
sbb
push
jmp
cmp
mov
(bad)
xchg
cdq
sub
mov
adc
add
mov
push
sbb
dec
adc
aaa
add
cmps
push
add
mov
push
mov
test
xor
or
mov
push
fdiv
or
or
test
and
mov
or
into
cmps
push
or
inc
popa
add
movs
sar
fst
imul
push
int3
inc
pop
add
test
ror
ss
pusha
add
mov
dec
cmp
adc
out
sbb
jmp
and
or
add
leave
(bad)
or
loopne
xor
pop
sub
inc
inc
(bad)
and
ja
push
adc
ins
sbb
push
cmp
add
push
cmp
inc
or
cmps
cli
push
sbb
stos
or
xor
sbb
retf
mov
dec
mov
pop
shl
fs
push
push
push
out
dec
mov
sbb
sub
or
xor
mov
iret
and
rol
mov
xor
out
sahf
adc
push
cmp
nop
rcl
sbb
jo
pop
sub
or
mov
test
fs
or
pop
sub
mov
cmp
rol
push
dec
sbb
xchg
push
div
ins
mov
call
jnp
mov
sbb
mov
jo
adc
xchg
sar
and
pusha
add
test
jmp
mov
inc
lods
pusha
pusha
jp
lea
xor
xchg
xor
mov
xchg
or
and
push
sbb
in
enter
or
jo
dec
jl
test
inc
fst
sub
dec
push
stc
scas
push
fisubr
xor
js
popa
aam
mov
pop
mov
push
cmp
pop
pusha
loopne
and
pushf
xor
cdq
cmps
inc
das
mov
or
or
es
ins
xor
or
jmp
sahf
adc
sub
ins
push
inc
mov
and
sbb
lea
ret
jge
sbb
push
or
inc
push
dec
add
fstp
dec
adc
nop
cmps
adc
adc
les
or
mov
int3
push
and
pop
mov
es
js
sub
call
dec
cwde
add
add
sub
add
push
pushf
int3
push
enter
xor
xor
mov
add
cmps
add
mov
leave
sbb
inc
or
and
push
hlt
call
jbe
jnp
enter
push
inc
inc
lods
cmp
ret
jne
mov
cmp
dec
sbb
or
icebp
jg
out
pop
sub
add
lea
enter
or
push
mov
or
lods
ins
add
cmp
in
cli
inc
enter
ja
xchg
test
inc
and
add
jb
aam
shl
out
xchg
(bad)
retf
cld
mov
xchg
push
or
pop
sub
fidivr
push
sbb
js
data16
icebp
cli
dec
jmp
cli
pop
and
(bad)
adc
or
push
pop
jb
mov
std
jb
lods
call
int3
jo
adc
loopne
lods
adc
push
test
fiadd
pop
test
aaa
ret
jl
mov
rcl
mov
arpl
ins
das
mov
mov
adc
push
push
sahf
cmc
movs
add
jo
fwait
mov
in
sub
mov
retf
push
fcom
jne
data16
shl
mov
push
mov
cmp
adc
mov
xchg
les
xchg
mov
or
inc
inc
arpl
pushf
sub
neg
pop
and
mov
or
retf
add
mov
push
mov
pop
clc
dec
and
add
adc
sub
add
adc
push
ins
mov
pusha
push
dec
aas
jo
inc
inc
fimul
add
push
or
xor
fst
cld
pushw
dec
repnz
cmovb
mov
js
test
sbb
and
sbb
or
int3
call
adc
inc
sbb
mov
hlt
add
call
hlt
cmp
hlt
rol
push
jno
and
pusha
cmp
cmp
fild
cli
jae
cdq
cmp
jne
mov
or
adc
daa
je
jmp
pop
mov
pushf
mov
imul
mov
add
push
push
popa
and
adc
retf
es
inc
popa
cmp
mov
loope
test
fmul
popf
pop
dec
ret
jns
dec
add
sqrtps
lock
jae
lds
sbb
and
icebp
push
ret
xchg
enter
cli
lods
js
jmp
jo
sub
fstp
(bad)
repz
mov
push
fisubr
pop
mov
jecxz
and
ins
add
cmp
mov
cmp
pop
or
cld
push
je
sub
push
icebp
or
shl
ret
scas
xor
addr16
lea
and
cmps
mov
inc
ss
push
push
mov
je
cwde
pop
iret
or
add
into
movs
mov
xor
adc
std
lods
arpl
pop
adc
mov
jne
movs
jle
sbb
in
jmp
data16
sub
or
movs
xor
mul
repnz
xchg
jl
push
imul
stos
lock
push
imul
ins
pop
mov
into
or
arpl
ret
movs
mov
sbb
loopne
pop
xchg
jo
jo
fmul
rcr
clc
ss
xor
sbb
out
push
pop
xchg
push
hlt
jae
retf
pop
push
and
ins
dec
(bad)
loopne
cmps
sbb
cwde
clc
dec
adc
out
push
push
dec
adc
inc
je
jb
aaa
dec
jo
xchg
jbe
adc
loope
or
inc
lds
fist
sbb
and
jns
xchg
inc
stos
inc
cmp
icebp
mov
sar
push
mov
fisubr
mov
and
inc
push
xchg
loope
movs
cdq
icebp
push
pop
retf
cmc
xchg
dec
inc
hlt
xchg
stos
push
push
or
dec
jmp
pop
ret
lods
(bad)
repz
adc
sbb
scas
cwde
push
add
sub
hlt
adc
push
cmp
dec
mov
syscall
movs
jmp
add
cmp
jnp
(bad)
enter
jae
je
pop
imul
cmp
enter
adc
mov
retf
add
and
xchg
push
jno
add
xchg
retf
adc
iret
and
pop
dec
pop
popf
or
pop
fldenv
lods
push
inc
cmp
adc
jge
pop
cmp
and
leave
sbb
push
mul
ror
pop
adc
push
push
ins
push
xchg
mov
sahf
add
addr16
push
dec
adc
push
js
or
mov
xor
and
mov
lahf
(bad)
and
sbb
sub
or
call
adc
inc
aas
hlt
inc
cmp
lea
call
jl
xor
call
pop
or
rol
inc
clc
leave
popa
test
dec
mov
cmc
sahf
pop
imul
cmp
shr
adc
xor
and
inc
cli
(bad)
cmp
sbb
cmc
mov
mov
cmc
(bad)
sbb
mov
mov
cmc
push
xchg
in
lock
push
mov
mov
jp
xlat
cmp
sbb
sbb
jno
ins
ror
cmp
sbb
les
test
shl
je
cmp
inc
js
jae
in
or
dec
cmp
jmp
out
sub
dec
cmp
mov
inc
add
sbb
(bad)
call
outs
or
xchg
jecxz
retf
push
out
adc
movs
sub
div
ds
push
rcr
sbb
inc
jo
pop
je
push
scas
add
cmp
(bad)
scas
push
pop
int3
push
push
(bad)
add
lods
xor
scas
enter
push
and
mov
or
bswap
or
rcr
add
call
add
adc
add
mov
iret
cmp
or
pop
cli
add
push
movs
out
or
jle
int
inc
aam
xor
pop
(bad)
aam
ja
in
push
inc
or
or
push
or
test
iret
(bad)
int3
dec
seto
aad
adc
or
xchg
ret
movs
and
push
arpl
movs
inc
mov
loop
mov
and
xor
adc
cmp
add
iret
cmp
add
mov
call
add
aaa
daa
and
adc
or
or
scas
sub
cmp
or
test
repnz
add
sbb
cmp
adc
jne
cmp
sub
mov
add
add
cmp
addr16
dec
ss
stos
dec
add
add
mov
es
jg
or
add
(bad)
loopne
lahf
sbb
cmp
test
es
stc
or
xor
sbb
jne
adc
sti
pop
cmp
dec
cmp
sbb
cmc
loop
dec
in
(bad)
fcom
xor
(bad)
cmp
mov
or
adc
mov
stos
test
xchg
jne
mov
addr16
mov
(bad)
les
or
test
in
add
or
sbb
stc
cdq
popf
enter
pusha
mov
ins
or
aam
gs
and
dec
xor
push
retf
lods
mov
test
sbb
and
adc
xor
jl
fild
and
mov
jg
dec
inc
jmp
je
add
sbb
into
(bad)
adc
jmp
sub
adc
repnz
dec
xchg
pusha
jo
retf
adc
jg
and
fidiv
add
es
imul
mov
jne
or
or
or
pop
add
push
sbb
fsubr
dec
call
mov
or
sub
mov
lea
loopne
ds
fwait
push
fnstcw
pop
mov
movs
fisttp
rcr
pushf
add
mov
arpl
retf
lods
jl
push
sbb
adc
adc
fidivr
jmp
bound
pop
sub
imul
or
cwde
push
inc
mov
push
sbb
clc
sub
jo
call
popa
mov
cmps
nop
popf
dec
aad
mov
lds
pop
movs
lods
daa
inc
mov
xor
pavgw
cmp
inc
sbb
test
ins
xchg
ret
dec
xchg
dec
(bad)
inc
loopne
and
sbb
lods
sbb
add
and
or
daa
cmp
ret
jle
ss
inc
mov
shr
icebp
js
jge
and
mov
pusha
imul
adc
and
or
jb
imul
push
retf
or
or
dec
jo
adc
xor
or
or
popa
xor
fist
mov
cmp
and
mul
and
inc
jne
xor
mov
jno
or
inc
sub
cwde
push
js
imul
movs
lea
sbb
jmp
lods
imul
pop
push
in
fist
loop
loopne
push
and
mov
iret
ret
int3
or
pusha
adc
xchg
out
add
add
xchg
pop
cmp
inc
test
mov
test
(bad)
outs
loope
push
jb
jle
es
outs
daa
mov
sahf
or
dec
jl
push
dec
iret
dec
es
repz
stos
add
cli
push
mov
fbld
jmp
int
mov
clc
and
push
ret
popa
in
mov
cli
les
mov
push
push
imul
add
sub
cld
inc
shr
rol
loop
push
mov
add
add
clc
pushf
add
push
jbe
adc
aam
dec
mov
ret
cmp
add
or
add
cdq
xor
shl
retf
or
jo
and
ins
push
loope
cmp
mov
inc
out
sbb
fnstenv
add
rcl
xor
cmp
jnp
mov
xor
pusha
jae
jle
pop
mov
mov
aaa
push
sub
ds
out
jne
mov
and
jmp
adc
pop
inc
sar
push
clc
mov
sti
push
push
movs
repnz
aaa
shl
cmps
sub
adc
or
pop
ret
inc
test
pop
push
dec
mov
dec
jmp
loop
add
add
dec
clc
add
or
or
add
aad
test
mov
mov
jmp
xor
adc
sbb
pop
or
rcl
(bad)
lods
ss
pop
sbb
adc
lods
inc
or
outs
pop
xchg
add
sub
out
sub
xchg
rcr
adc
mov
dec
fwait
xlat
rol
pop
push
inc
dec
jle
js
(bad)
outs
aaa
dec
adc
inc
fld
inc
cmp
cmp
xor
fnsave
cwde
cmp
cmp
mov
pop
fisttp
pusha
gs
xchg
sub
and
add
js
or
jo
inc
or
pop
sub
ret
(bad)
por
or
fld
shr
mov
cli
push
in
push
imul
jo
lods
push
shl
dec
rcr
jne
xor
add
sbb
xchg
add
mov
inc
inc
loop
rol
add
aaa
cmp
sar
sbb
icebp
adc
daa
sbb
cmp
fadd
jne
mov
jo
imul
bound
div
dec
imul
cmps
or
adc
je
fsub
pop
hlt
loope
pop
arpl
call
add
adc
or
sub
pop
and
(bad)
pop
jecxz
xlat
lds
sub
cmp
jne
cmp
push
neg
push
and
test
jb
data16
push
les
xchg
push
ret
sahf
push
xor
mov
push
enter
jmp
push
ret
dec
enter
rol
adc
fsubr
add
mov
imul
repnz
add
and
std
ret
push
mov
push
in
push
stos
call
mov
call
inc
inc
xchg
inc
mov
retf
shl
dec
pop
jne
inc
sbb
stos
pop
rol
fimul
adc
mov
sbb
mov
into
int
xor
or
pop
out
imul
fisubr
into
inc
je
dec
pop
pop
pop
in
sahf
ins
cmp
mov
mov
inc
adc
repz
and
loopne
adc
fmul
adc
xor
xor
sbb
and
in
push
and
adc
sbb
icebp
push
loope
dec
cmp
mov
pop
xor
shr
call
sbb
sub
or
dec
push
or
fcmovnb
jns
pop
push
and
xchg
test
jle
xor
jo
retf
sub
pop
sub
pop
sbb
dec
jmp
cld
mov
add
add
bnd
iret
iret
repz
div
or
jne
or
jne
or
test
mov
add
dec
in
and
pop
mov
dec
cmp
out
ins
aaa
and
or
push
xor
hlt
and
cmp
xor
mov
and
(bad)
ins
xor
js
loop
ret
shl
xchg
add
add
in
hlt
and
out
in
das
mov
stc
dec
jg
je
sbb
jnp
mov
pop
out
fstp
pushf
int3
sub
sbb
fisubr
adc
add
jmp
mov
fidiv
pop
mov
and
xchg
pusha
inc
xchg
mov
sub
jg
xchg
push
and
push
inc
or
test
adc
in
mov
adc
add
cmp
stos
cmp
push
push
adc
push
nop
repnz
xchg
mov
scas
push
xchg
xor
adc
xchg
fiadd
stc
sbb
fnstsw
mov
and
loopne
sub
jge
jl
and
dec
cld
mov
xor
and
(bad)
aam
fbld
push
fadd
test
pop
xchg
fsubr
adc
lea
sub
adc
cmp
sbb
push
jo
and
or
xchg
jne
int
ret
or
add
movs
bound
add
xor
dec
or
sbb
pop
dec
js
jae
add
fsub
out
in
aaa
(bad)
mov
cs
cmp
jne
mov
fdiv
les
sub
inc
jge
cld
aad
pop
call
push
add
adc
jge
test
mov
daa
ret
inc
push
dec
jbe
sbb
sbb
clc
and
into
mov
sbb
icebp
pop
ror
push
les
fsub
add
push
retf
lock
sbb
lea
jl
xchg
and
aaa
sbb
in
fidiv
cmps
iret
or
test
scas
clc
fadd
jmp
cmp
jbe
mov
int3
inc
inc
cmp
es
test
cld
adc
mov
push
xor
xor
sub
imul
loope
mov
sbb
fst
fistp
rcl
xadd
and
push
sub
movs
add
sbb
pop
jbe
push
push
sub
jecxz
mov
sbb
cmp
fsubr
int
fwait
dec
push
add
adc
pop
add
sbb
ret
push
jl
fistp
outs
jmp
mov
xor
mov
adc
cmp
jae
jmp
dec
in
xchg
jbe
push
or
and
jb
ja
cmps
fucomp
pop
push
dec
loopne
clc
and
pop
sbb
cmp
call
clc
call
jo
and
das
fcomp
xchg
mov
sub
and
imul
pop
pop
clc
dec
inc
sub
adc
xchg
sbb
cli
clc
mov
jno
adc
cmp
shl
out
mov
push
adc
push
lock
test
and
mov
popa
mov
add
das
adc
cmp
sbb
xchg
imul
jmp
mov
push
mov
les
mov
test
stos
mov
rol
icebp
jbe
inc
fild
xchg
jp
sbb
dec
ret
add
js
push
std
and
popa
rcl
movs
xchg
push
push
pop
scas
js
add
dec
jl
jmp
rcr
pop
push
xchg
cld
pop
pop
adc
inc
mov
jo
ja
or
cmp
(bad)
push
aaa
jl
dec
pop
jbe
call
repz
das
add
ins
inc
ins
dec
imul
jp
pop
mov
(bad)
std
(bad)
dec
push
mov
ss
and
add
push
inc
and
or
(bad)
xchg
push
add
cmp
jo
loope
clc
ins
aaa
cmp
add
lock
or
inc
loope
inc
or
clc
sahf
jge
add
pop
(bad)
ja
inc
aaa
push
jne
sbb
ins
outs
imul
xchg
push
cli
aam
add
push
das
jg
inc
dec
cmp
mov
and
cmp
mov
mov
add
cld
push
jl
mov
inc
retf
adc
jmp
sbb
lock
push
sti
in
cmp
int
or
clc
pusha
loop
inc
mov
xor
and
loopne
adc
adc
imul
or
pushf
mov
inc
js
bound
push
or
adc
or
lock
mov
(bad)
cmp
(bad)
add
movs
idiv
adc
mov
aas
and
adc
imul
mov
in
(bad)
in
mov
jns
sbb
mov
test
pop
in
cmp
jne
add
and
xlat
cmps
pusha
lods
jne
cs
sub
or
ret
mov
in
in
mov
or
and
jmp
and
sar
jecxz
push
mov
rol
and
push
xchg
cld
add
arpl
std
push
push
ins
sbb
mov
in
fdiv
mov
shl
jecxz
ret
test
mov
jnp
pop
push
test
loopne
mov
mov
cmp
in
add
cmp
in
inc
sbb
shl
dec
les
ins
sti
push
or
adc
push
mov
push
pop
xchg
fdivr
jo
mov
not
and
push
aam
scas
or
jo
mov
xor
pusha
add
push
popf
jb
pop
add
jg
cld
and
or
xor
rcr
and
and
push
addr16
dec
add
clc
std
cmps
xchg
into
or
push
mov
sbb
jmp
mov
xor
dec
mov
ja
mov
push
cmps
bound
sub
inc
mov
outs
pop
(bad)
and
xor
mov
dec
push
pop
pop
jle
mov
add
mov
cmp
out
sub
jno
shr
push
sub
icebp
cmp
xchg
dec
enter
mov
or
jle
add
jg
ins
add
pop
xor
pusha
ret
aad
ins
push
cmp
or
sub
mov
(bad)
stos
or
cs
lahf
cmc
xor
xlat
xor
xchg
call
call
out
sub
cmp
jnp
push
jge
sbb
jl
sub
cmps
loope
hlt
push
int
jo
fdiv
or
push
call
ja
jno
jecxz
ins
into
sti
xor
jle
es
jmp
push
(bad)
fwait
sbb
test
xor
add
popa
loopne
ins
xor
cmp
aas
adc
push
loopne
pop
mov
and
xchg
outs
fmul
xchg
lds
push
inc
push
xor
add
sub
jo
clc
out
pusha
cmp
sahf
popf
or
imul
outs
or
inc
mov
gs
add
addr16
sub
add
cli
leave
inc
repnz
mov
sub
dec
add
and
cmp
dec
lea
cmp
or
imul
jnp
add
je
xchg
or
dec
push
sbb
int
or
or
xor
mov
sbb
shl
cmp
inc
leave
push
shl
dec
push
pushf
movs
or
pop
pop
pop
sub
dec
pop
ror
and
xchg
rcr
pushw
xor
mov
push
or
bound
xchg
mov
xor
or
xor
repnz
push
in
jge
sub
jmp
adc
(bad)
cdq
ds
call
pop
mov
jmp
inc
stc
pop
or
dec
adc
jmp
pop
push
adc
clc
arpl
inc
pop
and
mov
loope
lahf
push
pop
out
push
push
mov
xchg
mov
sbb
inc
div
std
and
push
adc
push
lods
mov
sbb
jbe
lea
or
or
(bad)
loopne
and
ins
and
mov
push
cmp
hlt
cdq
xor
jecxz
add
or
pop
mov
cmp
fld
pop
jmp
xchg
dec
test
das
jecxz
mov
push
or
mov
mov
add
xor
cdq
adc
push
sbb
(bad)
fisubr
mov
mov
push
cli
lea
or
inc
sar
push
cmp
les
push
mov
or
mov
and
imul
test
enter
xor
cld
pop
inc
pop
and
or
das
xor
mov
add
jno
sar
movs
movs
pop
pop
dec
shr
inc
inc
add
cmp
mov
xchg
aam
data16
int
push
inc
inc
in
in
fld
fstp
ja
mov
add
test
dec
popf
jl
or
mov
mov
inc
xchg
das
xchg
or
xor
add
call
bound
adc
movs
adc
leave
add
out
loope
test
push
or
adc
out
not
sbb
pop
adc
(bad)
pop
add
xchg
jmp
pop
adc
lock
das
xor
push
push
inc
sub
push
push
shr
and
sti
add
bound
add
scas
jbe
sub
mov
adc
test
test
and
pop
dec
jl
cld
shr
and
imul
and
adc
add
ret
xor
sub
dec
push
dec
add
xchg
pushf
push
add
popa
dec
push
cmp
xchg
mul
pop
adc
xor
sbb
fimul
cwde
fcmovb
and
jo
hlt
xchg
dec
or
adc
mov
or
xchg
add
mov
ins
add
retf
mov
push
push
and
inc
sbb
and
adc
test
or
daa
imul
push
mov
xchg
(bad)
cmp
adc
test
dec
cmp
int3
push
fadd
mov
push
jmp
adc
push
int
adc
and
xchg
lea
inc
aaa
xor
fwait
imul
dec
cli
xchg
xor
sbb
ficom
lock
dec
popf
fwait
lods
(bad)
sahf
dec
mov
cmps
xchg
gs
ds
rol
xor
push
or
pop
call
or
mov
imul
loopne
jno
sahf
push
jecxz
xchg
fdivr
push
hlt
sub
and
(bad)
shl
xchg
adc
jnp
(bad)
(bad)
push
mov
pop
push
mov
and
dec
lods
adc
jmp
xor
outs
test
into
add
lahf
ror
or
mov
loope
adc
or
add
jl
mov
lea
(bad)
fild
sub
imul
and
push
lock
fistp
xchg
shl
daa
pop
retf
mov
inc
clc
sub
shl
jnp
les
mov
xchg
mul
push
inc
dec
sbb
les
jnp
mov
add
add
loopne
lods
gs
dec
push
inc
xchg
jle
ins
je
lea
adc
cmp
sub
sub
pop
dec
sahf
xor
sub
sbb
lock
mov
mov
lds
push
or
cmps
or
pop
pushf
jge
popa
cwde
imul
call
inc
xchg
sti
inc
rcl
pop
jmp
mov
fs
sbb
mov
cmp
aas
jbe
in
add
and
xor
jbe
jb
add
jnp
push
or
jl
and
xlat
cmp
cmp
pop
sbb
mov
pusha
in
adc
jae
in
and
fs
iret
pusha
jbe
sbb
sbb
fldenv
mov
bound
mov
push
jae
and
mov
rcr
push
or
push
mov
aas
jmp
js
retf
ja
push
push
cs
adc
sub
xchg
mov
mov
and
movs
jbe
inc
and
loop
sbb
xor
movs
pop
cdq
clc
or
pop
inc
fcomp
and
mov
push
fisubr
fidiv
xor
jecxz
xchg
je
adc
inc
pop
xor
enter
(bad)
call
jo
nop
inc
in
ret
(bad)
retf
pusha
sbb
int3
repnz
imul
outs
loopne
xchg
xchg
add
ret
je
lea
(bad)
hlt
mov
fcom
xchg
add
test
pop
mov
add
cmps
mov
test
icebp
jle
xchg
mov
cwde
loop
lea
and
pop
jo
in
add
mov
adc
add
mov
sub
inc
cwde
dec
cmp
jb
ins
test
rcr
inc
xor
pop
cmp
(bad)
pushf
inc
in
and
mov
mov
inc
xor
dec
movs
push
ins
jge
(bad)
ss
xor
sub
js
shl
inc
les
gs
xchg
test
and
sub
rcl
aam
push
push
mov
adc
inc
out
in
push
and
sbb
pop
add
mov
cld
push
fnstsw
data16
imul
mov
into
push
or
mov
in
adc
and
push
adc
mov
push
or
dec
rcl
pop
add
push
sbb
add
jno
stos
aas
and
jne
push
inc
arpl
cs
or
push
dec
dec
es
add
jmp
xchg
je
fimul
imul
xchg
call
adc
lods
xchg
mov
rcr
jg
gs
jb
jge
jmp
push
or
xchg
push
movs
push
mov
sbb
cmp
push
jle
gs
lahf
pop
mov
loopne
jmp
pop
call
mov
popa
ss
sub
je
cmps
xchg
in
pop
adc
fidivr
hlt
dec
ficomp
or
hlt
pop
push
xchg
pop
cld
jnp
xor
stc
add
adc
dec
sub
xchg
push
lock
mov
lds
add
imul
ret
xor
cmp
ja
jb
xchg
clc
jae
scas
xor
dec
ja
adc
xchg
test
inc
iret
ret
xor
push
adc
or
imul
je
outs
in
mov
test
ins
jl
jo
inc
cs
rcl
(bad)
in
hlt
push
aam
push
xchg
and
loope
cmps
fucom
jmp
int3
push
(bad)
scas
adc
fwait
xor
or
enter
inc
mov
jle
xor
add
or
jge
scas
adc
loop
retf
inc
sbb
pop
cli
xor
cwde
je
lods
xlat
pop
and
das
add
inc
sti
sub
or
add
push
cmp
push
nop
mov
push
scas
mov
add
outs
sub
push
and
and
stos
cmc
rcr
add
xor
jge
inc
pop
inc
dec
(bad)
add
add
sar
cmp
inc
ss
popf
pop
imul
xor
lock
gs
or
add
scas
push
mov
add
mov
sub
or
lods
jae
nop
sbb
push
js
fstp
adc
ret
and
mov
adc
jo
adc
and
xchg
aam
mov
rol
ja
adc
xor
dec
ss
jb
jbe
mov
test
dec
pop
push
call
pop
cs
or
add
enter
bound
xchg
jbe
int3
xchg
xchg
and
sbb
je
xor
cmp
ret
push
stos
mov
shr
cld
mov
jg
jo
(bad)
ficomp
cdq
mov
xor
jbe
pop
push
pop
mov
mov
pop
and
imul
sub
das
xor
test
addr16
push
cli
and
pop
outs
mov
cmps
mov
mov
mov
push
fcomp
inc
sbb
adc
push
add
or
cmps
cs
loopne
outs
fsubr
xor
push
cld
xchg
jae
jle
inc
fmul
xor
mov
ret
ins
xchg
mov
mov
dec
out
stos
cmp
mov
xchg
sbb
push
cwde
dec
inc
xchg
lods
push
cmp
or
sub
bound
push
adc
mov
dec
pop
test
pop
xchg
and
jne
loope
lods
addr16
mov
pop
jnp
arpl
ror
std
sbb
xor
lock
cmp
push
cs
cmp
sub
dec
inc
loopne
cmps
or
jle
or
add
pop
jbe
jg
clc
jg
add
cmp
xchg
shl
and
das
sub
xor
mov
jmp
push
push
push
ffreep
and
je
rol
add
pop
jecxz
add
pop
loop
cs
or
pop
add
sub
xor
push
sub
sbb
xchg
jnp
adc
daa
push
xchg
rol
lea
jno
pop
mov
mov
into
add
or
mov
jmp
test
iret
adc
and
push
nop
pushf
mov
push
inc
jo
pop
cmp
push
cwde
ror
(bad)
push
and
dec
jecxz
stc
ret
and
movs
jns
cmp
fisttp
mov
stos
add
cmp
pop
aam
and
daa
inc
movs
arpl
into
push
test
fs
add
test
mov
sbb
mov
jnp
fadd
pop
jl
mov
sub
pop
(bad)
xor
jnp
in
sub
mov
add
and
in
mov
adc
imul
jbe
cmp
xlat
xchg
clc
pop
cmp
push
cmp
add
pushf
pop
sbb
jg
call
icebp
ins
cmc
or
bound
add
aad
lds
outs
jecxz
fmul
add
and
pop
xor
icebp
dec
push
es
mov
push
xchg
out
xchg
and
jg
mov
dec
add
pop
adc
or
cmp
inc
imul
adc
add
fild
push
and
sbb
mov
pop
add
jns
adc
or
outs
(bad)
fstp
push
cld
fstp
or
in
jge
mov
fld
popa
int3
fld
popf
int3
fcmovnbe
dec
cdq
movs
jb
sbb
addr16
inc
imul
push
pop
xchg
jmp
mov
cli
test
mov
stc
xor
jmp
data16
and
cmc
sbb
das
push
cmp
add
and
jp
adc
mul
xchg
fiadd
xchg
retf
retf
(bad)
sub
xor
mov
cmp
dec
ss
xor
inc
or
not
retf
pop
iret
(bad)
or
leave
les
mov
add
rcl
ss
xchg
sbb
les
lahf
pushf
aaa
call
or
int
add
in
mov
or
and
stos
in
imul
jl
push
in
push
jne
fstp
hlt
ret
movs
jae
jae
mov
(bad)
mov
ret
mov
push
sbb
mov
ds
sub
jo
rcl
int3
int3
sar
inc
popf
test
jl
mov
sbb
es
xchg
jns
in
iret
xabort
cmp
jne
push
nop
inc
adc
add
(bad)
or
and
movs
xor
xlat
sub
movs
and
adc
adc
or
mov
and
pop
arpl
movs
adc
and
dec
rol
cmps
push
mov
icebp
pop
adc
movs
xor
adc
sbb
add
pop
or
xchg
inc
lock
and
jmp
xchg
sbb
bound
jg
movs
push
sub
cli
mov
call
push
pusha
push
push
dec
test
fdiv
mov
call
mov
nop
pop
mov
cmp
imul
out
pop
jb
mov
cmp
add
loope
(bad)
push
cmp
popf
jge
and
mov
fst
mov
popa
xchg
outs
(bad)
sub
and
sub
and
sbb
add
add
mov
pop
sbb
fsub
lods
add
clc
push
ja
fcmovnb
pop
and
lods
pop
fucomi
or
inc
jb
inc
jb
add
pop
mov
or
adc
mov
sub
push
add
add
aad
xor
lock
aaa
xchg
clc
ds
add
js
scas
mov
inc
repz
repz
cmp
ins
jnp
daa
jb
pop
pop
add
add
push
pop
pop
add
add
mov
test
shl
inc
cwde
or
add
clc
mov
and
adc
(bad)
fadd
push
daa
out
push
xor
pop
mov
jl
fisttp
sbb
daa
loope
adc
and
sbb
inc
cmp
lea
xlat
and
or
adc
add
or
mov
and
pusha
mul
jge
iret
xor
add
inc
gs
into
call
adc
mov
and
adc
jb
pop
push
jne
adc
adc
inc
int
stc
movs
xchg
mov
ffree
stos
hlt
add
test
sub
or
imul
add
arpl
xchg
popa
call
aam
xor
push
call
or
inc
mov
gs
push
cs
push
push
rol
enter
pop
sub
inc
mov
mov
aad
(bad)
and
icebp
sbb
jle
daa
out
icebp
sti
call
sbb
add
sbb
dec
sub
pushf
pushf
mov
repnz
mov
pop
add
xlat
mov
add
pop
or
and
xor
mov
loop
call
pop
adc
ins
adc
pop
(bad)
ss
(bad)
out
xchg
add
adc
push
loopne
pop
dec
adc
clc
add
sub
shl
add
xchg
cmp
dec
inc
mov
fiadd
jmp
test
cmp
or
(bad)
push
sbb
outs
mov
add
push
es
cmp
dec
cmps
or
mov
cmps
and
in
inc
mov
cwde
cmps
adc
and
or
push
cmp
pop
and
add
fdiv
or
cmp
push
in
aaa
sbb
push
ret
push
aas
cmp
je
or
add
je
dec
or
movs
xor
test
mov
or
or
pop
cld
sbb
clc
add
movs
shl
(bad)
lahf
dec
push
xchg
jo
jne
dec
scas
sbb
mov
mov
add
xchg
ss
add
rol
xor
push
or
mov
mov
add
mov
push
mov
lods
cmp
out
je
cmp
jne
jb
je
xchg
sub
and
in
inc
sbb
inc
inc
jb
ror
js
push
inc
leave
pop
add
js
and
cli
pop
add
inc
pop
call
mov
or
adc
(bad)
sahf
inc
push
jae
rol
push
retf
mov
stos
sbb
and
sub
mov
test
xor
and
dec
mov
rol
pop
mov
and
dec
clc
imul
pop
jmp
adc
dec
call
ret
test
rcl
ror
outs
inc
xor
push
push
xchg
jns
mov
and
or
ret
xor
ror
sbb
mov
sub
sbb
pop
je
xor
cmps
sub
fld
(bad)
adc
or
sub
dec
cmc
adc
sbb
ret
add
inc
xchg
and
inc
mov
call
or
adc
in
adc
inc
add
fsubr
xor
and
(bad)
fsubr
or
xchg
jne
pusha
stos
cmc
adc
aam
cmp
rcl
or
push
jne
cmp
lods
sub
ret
fisubr
movs
and
movs
push
les
(bad)
mov
bound
xor
repnz
icebp
or
call
push
call
jns
jge
hlt
and
les
(bad)
cdq
jb
sbb
xor
aad
and
or
dec
inc
add
mov
into
inc
or
dec
dec
mov
mov
lea
lods
pop
test
lods
jmp
pop
inc
push
test
es
lods
inc
push
add
outs
call
lea
aam
adc
or
cmp
pop
call
and
or
popf
inc
(bad)
and
sbb
mov
or
out
div
or
adc
and
es
push
outs
aad
mov
xchg
movs
or
adc
push
cmp
cmp
sbb
inc
mov
ret
xchg
push
or
mov
pop
add
or
push
fisttp
pop
cmp
jae
mov
data16
push
fldcw
jmp
ds
inc
adc
rcl
or
adc
push
rcl
arpl
das
rol
jne
arpl
push
jnp
jb
mov
jmp
aad
add
cmp
inc
movs
mov
push
pop
mov
mov
dec
lock
or
sbb
ficom
jle
cmp
es
inc
add
sub
adc
test
test
cmp
gs
cmp
js
test
nop
cs
cmp
adc
sub
inc
bound
push
dec
inc
xor
cmp
push
adc
jb
sbb
xchg
adc
xor
jp
and
das
or
mov
push
and
sub
pop
dec
lock
out
and
mov
clc
imul
sub
inc
xchg
in
sbb
add
or
into
sub
and
outs
mov
clc
shl
inc
cmovo
enter
fs
cmp
dec
pop
and
and
push
mov
dec
(bad)
xor
inc
xor
mov
mov
call
inc
hlt
into
sbb
js
ret
adc
mov
mov
and
add
shl
push
sbb
push
push
jl
adc
je
sbb
es
ds
jne
or
div
adc
dec
jl
lea
add
mov
in
popa
inc
popf
and
inc
mov
clc
mov
xchg
sbb
or
std
inc
adc
stos
or
push
popa
dec
jns
inc
mov
push
cmp
mov
in
jnp
fsubrp
mov
or
ret
sbb
loop
es
imul
movs
push
mov
xlat
out
cdq
push
push
fcom
push
and
pop
retf
adc
stos
adc
sub
loope
je
imul
push
rcl
and
ror
out
and
and
add
xor
jmp
rol
cmp
jmp
xor
aam
adc
inc
cmp
retf
jb
or
push
call
test
and
dec
ins
jl
push
or
fdivr
or
xor
movs
dec
inc
nop
mov
dec
sahf
add
push
test
les
and
pop
mov
dec
out
jne
out
lahf
aam
pop
cmps
mov
dec
or
adc
aam
and
adc
push
fcomp
push
rcl
pop
or
cmp
jl
or
and
add
scas
push
sbb
or
mov
addr16
aad
jns
adc
jnp
push
jmp
stos
or
or
popf
add
add
push
cmps
dec
xchg
jge
add
test
push
mov
cmp
xor
pusha
ins
add
dec
ret
add
(bad)
in
ror
jbe
push
lahf
jb
inc
inc
inc
adc
cmp
cwde
and
cmp
dec
jnp
fdiv
and
pop
xor
jmp
call
dec
dec
sbb
push
adc
push
or
jp
inc
adc
cld
cmps
add
ror
xchg
add
adc
xor
inc
push
push
pop
mov
add
dec
push
or
and
mov
jnp
pop
xor
mov
mov
mov
pop
imul
or
arpl
fidivr
or
mov
push
push
movs
xor
pop
cmp
xchg
dec
or
adc
enter
inc
add
cmp
add
dec
mov
add
dec
push
lea
add
xor
or
aaa
xor
xor
push
and
rcr
jl
jge
ss
in
xchg
(bad)
outs
pop
mov
adc
shl
mov
or
mov
jne
pop
ins
aas
arpl
inc
cmp
pop
aad
or
in
push
lods
inc
in
pop
cmp
mov
cmp
mov
jb
xchg
pop
inc
rcl
cmp
cmp
enter
movs
xor
call
adc
jne
and
pop
pop
mov
lea
sub
fcom
fmul
xchg
sub
cmp
dec
cmp
ret
mov
inc
jae
scas
sar
xchg
cmps
fnstcw
data16
xor
xor
inc
jle
push
jo
pop
adc
pushf
inc
adc
or
mov
sub
inc
push
nop
and
or
and
mov
pop
into
sbb
sbb
mov
add
add
inc
adc
sar
and
add
xchg
mov
and
jns
jl
push
fidivr
adc
sbb
jo
icebp
call
cmp
or
bound
pop
es
add
fst
xchg
jge
mov
aaa
inc
adc
pop
push
test
ss
out
leave
movs
test
mov
and
mov
xacquire
sbb
dec
or
rol
sbb
pop
out
rcl
pop
test
and
or
shl
jnp
adc
push
sub
dec
sbb
jmp
xor
add
sbb
push
je
dec
imul
pop
out
xchg
test
ins
adc
or
inc
or
cmc
addr16
cmp
dec
(bad)
mov
sub
pop
push
sar
push
pushf
push
jl
dec
jmp
ror
test
and
cmp
mov
xor
xor
sbb
add
enter
enter
fxch
mov
pop
jp
mov
adc
jbe
sbb
call
mov
jo
and
xor
push
jno
mov
inc
outs
mov
fs
push
push
push
pop
add
popf
sbb
pop
lods
outs
adc
and
adc
cmp
outs
add
jbe
sub
sub
and
and
aas
fimul
push
inc
sub
inc
sub
sub
loop
add
xchg
int
(bad)
adc
loop
sbb
test
jo
daa
mov
mov
fisttp
sbb
daa
cmp
ins
je
outs
test
jmp
xchg
ror
lods
movs
mov
frstor
mov
test
call
xchg
xchg
sbb
dec
loop
sbb
call
cwde
push
sbb
xchg
out
ret
cmp
pusha
cmps
or
cs
mov
add
mov
sbb
ret
push
mov
push
mov
mov
push
sbb
mov
out
(bad)
test
pop
mov
push
test
push
sti
mov
push
nop
scas
test
fiadd
jle
stos
push
xor
fadd
xchg
test
push
call
and
mov
add
pusha
cld
xor
enter
xor
and
jnp
jge
jle
sub
cmp
icebp
mov
jmp
bndstx
ror
cmp
mov
and
ret
lea
pop
bound
mov
cwde
test
movs
ret
nop
cmp
and
mov
jne
pop
jb
cmp
ins
pop
xchg
loopne
imul
cmps
inc
loop
dec
pop
mov
jo
dec
rol
adc
(bad)
inc
cmp
scas
dec
enter
sbb
lea
fsubr
sti
popf
es
fcom
add
aam
jp
xor
push
pop
shl
iret
and
pusha
ds
dec
add
inc
enter
push
inc
rol
and
repz
pop
test
add
inc
sbb
sub
shl
mov
dec
cwde
test
pushf
mov
xchg
es
ficomp
ja
adc
add
and
push
xor
clc
cmp
in
lods
sar
xchg
inc
adc
or
scas
or
sbb
test
xor
les
cmp
mov
(bad)
sbb
mov
nop
test
mov
sbb
add
dec
jns
pop
ret
je
and
cmps
imul
push
sbb
or
add
lds
dec
xor
js
dec
xor
outs
dec
add
pop
les
test
or
sub
dec
call
xor
xor
mov
cmps
ins
out
mov
sub
xchg
push
mov
xchg
retf
sbb
push
sbb
es
mov
push
cmp
cmp
(bad)
cwde
adc
ss
xor
or
jmp
dec
ds
or
clc
jecxz
loopne
je
adc
nop
je
mov
cmp
sub
jno
push
fxch
mov
dec
test
adc
jmp
pusha
(bad)
jbe
pop
jmp
add
pop
cmp
and
pop
es
inc
add
lea
mov
and
aam
xchg
call
jmp
bound
mov
ds
retf
das
nop
mov
sbb
dec
pushf
ror
push
xchg
adc
(bad)
fsubr
push
cmp
xchg
adc
shl
rcr
ror
stos
mov
shl
push
(bad)
repnz
mov
fidiv
dec
or
sub
xchg
mov
push
out
sub
dec
nop
pop
cmps
repnz
gs
cld
adc
xchg
sub
dec
stos
push
jl
push
and
int3
push
sub
lock
cmp
or
clc
push
sbb
jbe
in
add
movs
ins
shl
call
lods
pop
not
or
or
adc
push
mov
hlt
int3
xchg
inc
(bad)
fcos
ror
popa
in
xor
cld
(bad)
fcomp
fst
out
mov
sbb
xchg
ficom
cmp
adc
mov
cmp
je
rcr
js
push
mov
jne
loope
push
jno
imul
das
retf
in
push
mov
xor
jne
sbb
sbb
icebp
inc
mov
(bad)
jl
dec
icebp
pop
scas
hlt
pop
push
jno
lock
pminsw
jge
or
xchg
mov
cdq
sub
sub
push
add
imul
bound
popa
(bad)
or
xor
jae
cmps
jo
dec
int
pop
test
(bad)
out
fsubr
adc
je
loopne
jns
and
shr
adc
xchg
les
ret
sub
test
dec
outs
sti
pop
push
out
and
xlat
xor
and
test
out
cmp
dec
add
jmp
xor
push
mov
inc
sub
and
add
mov
ficom
pop
cmp
push
mov
hlt
int3
push
sbb
adc
push
lahf
pusha
sub
sbb
cdq
add
jae
jnp
pop
cmp
cmps
add
jle
push
or
xchg
into
xor
dec
ins
cld
xchg
ret
(bad)
or
and
clc
fdivp
(bad)
mov
test
test
es
stos
in
enter
in
sbb
(bad)
jle
ss
xlat
je
sub
out
adc
cmp
rcr
push
inc
and
lock
xor
test
push
cs
stos
lea
clc
adc
xchg
aaa
add
cdq
dec
cmp
push
pop
(bad)
outs
movs
clc
inc
adc
repz
push
xchg
in
dec
push
or
call
adc
mov
popf
or
fmul
xchg
jle
jle
retf
out
xor
imul
mov
ret
add
shl
inc
imul
mov
rcr
xchg
pop
and
int3
or
inc
call
fcom
lods
push
push
loopne
lea
fwait
and
loopne
adc
mov
ds
sub
in
xchg
loope
pop
xchg
scas
and
stos
lea
lods
or
pop
or
mov
adc
jae
xor
pop
shr
das
xchg
pop
or
mov
in
imul
cld
sbb
enter
movs
mov
test
jae
cmp
neg
or
lock
pop
ja
dec
ror
jns
mov
stos
mov
and
jo
mov
popa
pop
les
push
mov
mov
aam
cmp
js
enter
movs
jo
jge
ror
mov
sar
pop
inc
aas
call
mov
movs
cmc
add
mov
cmp
and
push
cmp
jno
rol
sti
ins
ret
adc
addr16
push
sub
test
shl
(bad)
rcl
fidiv
pop
rcl
and
fsubr
pop
test
mov
inc
outs
jmp
icebp
je
push
mov
mov
mov
lock
inc
cmp
mov
cmp
pop
sub
inc
adc
dec
jecxz
cmp
outs
add
inc
xor
rdtsc
mov
scas
ror
scas
fadd
xor
mov
sub
sub
aam
pushf
jmp
push
xchg
cmps
iret
add
fisttp
sbb
jmp
adc
dec
call
add
mov
and
pop
lea
aas
dec
imul
adc
pop
cmp
sub
mov
sub
cli
cs
mov
mov
xor
in
ja
mov
hlt
cwde
xchg
pop
mov
jne
cmps
mov
retf
mov
lock
movs
cmp
dec
or
or
jno
sub
cwde
add
mov
push
lahf
pop
leave
sbb
pop
idiv
inc
cmp
mov
pop
or
push
add
test
test
outs
add
sbb
pop
ins
fs
jae
lods
ret
xchg
sbb
xchg
adc
xor
pushf
dec
jbe
cmp
fiadd
push
retf
imul
mov
push
mov
jnp
adc
xor
xchg
nop
pop
and
jle
lds
scas
int3
cmps
sub
lock
test
loopne
(bad)
add
mov
xchg
lock
adc
mov
cmovbe
mov
inc
or
jmp
sbb
push
add
and
or
mov
mov
mov
and
and
adc
les
add
or
test
out
mov
lods
cmps
or
sub
mov
test
lods
jmp
push
mov
dec
mov
xchg
and
jge
fcom
(bad)
ins
fild
pop
mov
sub
push
cld
add
and
add
outs
lahf
fdiv
gs
stc
pop
cmp
inc
fimul
pop
call
out
mov
and
pop
dec
push
sub
xchg
scas
hlt
iret
or
jne
or
push
mov
dec
aam
(bad)
mov
cmp
mov
imul
movs
ins
jl
fcom
mov
sahf
cmp
jg
add
sbb
push
sbb
mov
sub
cmp
inc
mov
popf
adc
pop
sbb
popa
aad
jg
enter
add
gs
aam
stos
ss
push
test
mov
mov
ins
or
repz
fiadd
fs
push
call
push
(bad)
adc
dec
pop
dec
dec
or
cs
adc
(bad)
jle
dec
add
jle
or
je
adc
cmp
dec
adc
rcl
fld
in
or
push
jb
es
leave
enter
fs
mov
mov
mov
popf
dec
inc
jle
mov
fwait
in
push
ins
cmp
sub
mov
push
push
add
push
call
and
test
cmp
clc
arpl
repz
xbegin
cmp
mov
fdivr
xchg
xchg
out
leave
iret
jbe
cdq
add
fst
aaa
xchg
(bad)
jmp
cmp
shl
in
repnz
jbe
test
ds
pop
(bad)
jp
sbb
inc
mov
(bad)
cmps
out
or
loop
cmp
dec
fidivr
aas
push
(bad)
jmp
jle
pop
xor
xchg
pop
adc
test
mov
out
pop
rcr
push
fstp
sar
mov
or
mov
(bad)
pop
mov
dec
pushf
inc
dec
adc
add
enter
neg
outs
mov
mov
xchg
fdiv
ins
fistp
shl
pop
call
jbe
dec
fcom
or
jne
push
fidiv
jle
adc
pop
sbb
leave
inc
xchg
pop
js
jnp
push
sub
enter
and
or
cld
pop
cld
or
mov
nop
int
add
ins
outs
xlat
xchg
or
cmc
inc
adc
inc
cmps
movs
inc
hlt
mov
fcom
cmp
push
cmp
mov
fld
pop
shl
test
pop
sbb
cmc
mov
mov
sub
popa
or
les
xor
sahf
dec
pop
nop
xor
jo
cs
les
jp
push
or
mov
fld
adc
and
adc
sub
jg
jb
push
cld
jl
in
push
and
xor
enter
xchg
js
pop
mov
jno
inc
out
in
and
push
sbb
sbb
xchg
inc
or
jns
xor
ins
or
test
push
add
fisttp
mov
dec
dec
cdq
mov
fwait
jno
outs
es
xchg
sbb
jmp
or
ins
xchg
and
mov
sub
or
sbb
mov
mov
inc
dec
sub
fcmovb
sub
test
pop
pop
push
jge
ret
out
movs
rcr
push
push
pop
and
dec
push
push
not
addr16
sbb
adc
inc
mov
loop
cmc
cmp
sub
movs
aaa
les
outs
inc
jcxz
cmp
pushf
lds
pop
cmp
rcr
add
test
pop
inc
push
xor
push
pop
in
or
test
jb
push
mov
xchg
nop
jl
add
(bad)
outs
jns
lock
enter
lock
outs
dec
dec
repnz
fwait
in
and
ret
xacquire
int3
es
(bad)
and
sub
adc
sbb
test
repnz
or
ss
dec
sbb
pop
mov
pop
imul
test
mov
jb
push
pcmpgtb
shl
or
movs
fsub
es
adc
pop
push
adc
mov
xor
cmp
dec
les
add
jmp
jo
or
ins
adc
outs
jle
add
outs
or
mov
pop
xchg
lods
pop
jmp
dec
jp
xchg
and
test
loope
inc
sub
jb
inc
adc
sbb
adc
add
cmp
sub
out
ret
rcr
(bad)
subps
pop
push
movs
ss
push
jg
mov
clc
nop
mov
mov
xor
dec
sbb
loopne
dec
adc
cmp
mov
ret
jmp
jp
rcl
sub
or
movs
ss
push
aaa
jmp
push
out
popa
loope
ret
sub
cmp
call
adc
pusha
sub
rcl
push
aaa
xchg
bound
test
movlps
mov
fcom
sub
xor
mov
repz
and
xchg
or
dec
ja
test
in
push
lea
clc
cli
xchg
lods
dec
pop
mov
outs
sbb
fstp
dec
jo
mov
inc
ins
mov
jg
int3
and
lds
add
push
imul
int
es
imul
xor
dec
call
sar
pop
out
xor
sub
shl
cmp
push
and
or
adc
and
sbb
sbb
scas
sub
popf
jbe
aas
and
loope
dec
lds
mov
dec
push
shl
or
ret
retf
cmp
lods
mov
pop
inc
push
xchg
repnz
push
xor
es
jmp
cwde
mov
shl
fs
movs
retf
pop
scas
push
sbb
arpl
or
out
jmp
call
xchg
cs
adc
inc
cmp
push
scas
inc
add
retf
cmp
pop
test
pop
mov
je
inc
arpl
adc
stos
mov
pop
push
sub
cmp
mov
cld
lods
inc
or
pop
mov
loope
add
and
sub
push
dec
adc
adc
dec
lahf
add
sbb
or
jge
sbb
je
je
and
sbb
or
xor
adc
pop
lods
out
sub
sub
sub
shl
cmp
outs
jle
arpl
xor
pop
test
sahf
sub
cmp
add
xchg
jmp
xchg
xor
or
(bad)
mov
ins
sub
add
mov
(bad)
iret
push
in
adc
mov
bound
sbb
push
loop
and
out
mov
fcomp
(bad)
xchg
ret
je
std
xor
fadd
sahf
adc
out
out
mov
std
push
and
push
out
cld
paddsb
mov
inc
and
cmp
retf
js
push
lods
dec
dec
movs
cmp
outs
add
movs
cmp
sbb
push
mov
dec
aam
inc
add
or
shr
mov
cli
fadd
(bad)
mov
rcr
or
mov
push
and
sbb
out
cmps
pop
push
or
push
push
fsub
sub
retf
adc
xor
jne
and
movs
cdq
into
cmp
push
call
js
pop
push
inc
(bad)
and
push
call
clc
or
mov
dec
cwde
or
add
pop
pop
inc
in
adc
(bad)
(bad)
and
cwde
fmul
mov
xchg
cmp
loopne
inc
test
repz
int3
xchg
call
les
pop
xor
in
xor
inc
pop
sbb
fst
xchg
bound
xchg
mov
out
pop
sub
fdiv
jg
ss
and
push
add
add
pop
push
and
pop
popa
je
mov
aas
aaa
(bad)
push
scas
and
movs
mov
inc
add
cmp
add
outs
leave
ret
cmp
jnp
retf
enter
push
ror
mov
fwait
test
inc
movs
call
ins
xlat
arpl
push
das
or
and
push
sbb
push
pop
add
dec
popa
stc
loope
add
outs
inc
xor
iret
xor
aam
ins
xor
(bad)
pop
pop
or
movs
dec
inc
rcl
or
scas
inc
push
pop
adc
push
pop
push
scas
sub
cmps
inc
dec
nop
adc
sti
scas
arpl
out
(bad)
push
add
sbb
pop
add
jecxz
pusha
sbb
movs
xor
mov
jmp
push
push
sbb
fiadd
push
adc
push
cmps
les
jo
add
sbb
pop
mov
or
pop
dec
push
mov
out
pop
shl
dec
sub
nop
add
xor
data16
jge
cld
jno
div
cmc
sbb
add
pop
lock
mov
leave
retf
lea
mov
mov
dec
push
xchg
hlt
retfw
jo
or
sti
xchg
and
in
sub
je
xor
mov
pop
cld
scas
sub
sbb
add
xor
mov
je
inc
sbb
pusha
jmp
push
sub
ret
inc
xchg
push
mov
mov
xchg
imul
mov
and
(bad)
mov
(bad)
push
jne
in
push
dec
retf
(bad)
ins
(bad)
xchg
and
ins
pop
clc
cmp
mov
jl
pop
lds
lea
stos
not
sub
jmp
push
outs
sbb
xchg
cdq
mov
add
in
and
sub
icebp
add
jo
mov
test
popa
(bad)
adc
jnp
add
test
mov
inc
jecxz
or
add
mov
xchg
nop
inc
cmp
mov
shl
cli
into
push
add
lock
push
bnd
mov
in
fnsave
or
mov
add
mov
pushf
pop
sub
xor
mov
xchg
test
pop
add
xor
repz
and
test
xlat
adc
mov
stc
push
idiv
or
test
movs
ret
push
and
or
cmp
pop
xlat
cmc
pusha
add
in
adc
imul
cmps
pushf
int3
outs
repnz
jne
mov
repnz
or
lock
stc
(bad)
lock
retf
sbb
jmp
and
jecxz
ins
jo
in
lea
sub
pop
sbb
sub
and
xchg
xor
cs
imul
test
into
xor
pop
or
dec
mov
mov
pushf
add
loop
cmp
dec
cmp
cmp
add
pop
inc
dec
adc
mov
push
ret
cmps
mov
or
and
push
push
xchg
ror
mov
(bad)
mov
mul
sub
out
sub
mov
(bad)
shl
loope
jbe
retf
arpl
stc
xor
shl
pop
jecxz
xor
sbb
cmp
cmp
shr
loopne
adc
mov
or
repz
push
add
dec
mov
inc
stc
ret
dec
retf
stos
add
add
pop
sti
pop
rcr
adc
cmps
fs
das
sbb
adc
js
and
jecxz
or
fsubr
js
js
cld
jo
es
sbb
gs
xchg
pop
(bad)
mov
or
jg
sbb
sub
aam
and
bound
fs
xor
shl
or
lea
push
dec
pop
ret
jb
call
and
sbb
add
jo
dec
xchg
fcmovnbe
jle
into
jl
jo
push
movs
push
push
mov
cwde
sbb
sbb
dec
fld
cmp
jbe
imul
sub
dec
imul
rcl
js
data16
imul
ret
ret
push
stc
and
adc
aaa
fsub
push
inc
lds
sbb
adc
ret
enter
push
arpl
pop
add
aaa
mov
test
cmp
adc
pop
push
cli
lock
xchg
lods
dec
or
loop
retf
rol
xchg
into
pop
(bad)
iret
xor
push
rol
dec
imul
add
mov
or
pop
pop
dec
bound
fs
lea
test
add
(bad)
or
je
nop
mov
aam
(bad)
bound
mov
test
and
rol
ins
stos
or
push
adc
test
jg
push
mov
pop
inc
mov
retf
adc
mov
and
sbb
jne
xor
in
push
inc
add
or
or
mov
ds
pop
lahf
clc
dec
mov
out
aam
lea
ins
mov
loope
test
add
adc
lods
mov
mov
punpckhdq
ret
add
sub
mov
(bad)
loopne
xor
mov
adc
push
or
pop
dec
clc
aaa
sti
and
cmc
movs
adc
mov
jne
inc
scas
xchg
sub
sbb
pop
sub
add
push
and
sub
sbb
movs
or
push
adc
cwde
inc
in
sub
mov
test
shl
jo
test
ret
pop
rol
in
xor
cld
scas
xchg
mov
add
div
push
jne
sahf
mov
pop
jne
sbb
xchg
lock
mov
mov
movs
into
cmp
stos
jg
fsubp
mov
xchg
fmul
ret
inc
mov
cmps
pop
and
shl
pusha
add
fwait
adc
lds
xor
and
imul
ja
push
or
mov
jbe
mov
push
je
and
add
push
add
jns
pop
push
cmp
inc
data16
ins
out
rcl
test
(bad)
mov
lahf
cmps
iret
xchg
ja
xchg
pusha
test
cmp
mov
call
setle
retf
or
dec
pusha
push
pop
or
or
push
push
lea
dec
pop
fbld
pushf
and
fmul
push
inc
mov
test
jp
xchg
ror
scas
pop
xchg
push
aam
ins
dec
inc
jnp
test
push
cwde
adc
mov
sub
inc
mov
cmp
je
mov
pop
cld
or
and
xchg
leave
dec
shl
push
push
inc
push
push
lahf
push
jl
sbb
cs
pushf
mov
nop
pop
fdivr
cmps
xchg
cli
adc
fnstcw
(bad)
cmp
inc
inc
push
(bad)
in
lea
adc
xor
leave
dec
adc
xor
cmp
push
pusha
rol
imul
fnstsw
push
jo
cmp
jne
outs
dec
cmp
and
push
popf
sbb
inc
jnp
push
popf
call
sar
jbe
shl
dec
adc
add
stos
ret
jnp
or
js
ror
clc
cli
pop
clc
jb
push
dec
xchg
sub
test
adc
xor
fcomp
xor
push
xchg
enter
shl
add
push
fldenv
dec
and
pop
bound
sub
je
pop
ins
mov
lock
mov
or
adc
lock
sbb
dec
xor
loope
or
add
dec
js
test
fnsave
fistp
lods
xchg
pop
add
sub
pushf
add
sub
inc
je
inc
sar
add
xchg
add
xor
pop
dec
add
or
into
pop
clc
adc
les
(bad)
lods
mov
mov
dec
addr16
mov
jmp
push
and
sbb
mov
jmp
cmp
pop
adc
jmp
or
mov
push
rol
push
cs
fs
in
jl
shr
push
sub
adc
or
and
and
or
jecxz
adc
dec
add
movs
sbb
mov
xor
lahf
dec
cld
adc
jns
jae
push
dec
dec
pusha
and
aaa
jo
rcr
adc
pop
sar
sub
dec
mov
add
lea
jle
dec
mov
mov
das
movs
add
jno
mov
cmp
in
jge
lea
jle
add
inc
cmp
mov
fisubr
sbb
mov
or
sub
push
push
mov
movs
push
test
js
and
ret
data16
adc
adc
imul
jl
add
and
xchg
and
in
or
mov
jo
aam
lock
loope
or
pop
inc
mov
add
inc
push
lock
mov
mov
and
sub
mov
pop
js
out
scas
sub
cmp
js
push
jbe
mov
call
add
sbb
sub
mov
sub
dec
or
jns
inc
xor
ret
xchg
out
ja
sub
pop
or
cwde
or
pop
sti
and
rol
gs
hlt
dec
xlat
sub
add
(bad)
adc
jo
sub
sbb
mov
loopne
sub
add
test
xchg
adc
nop
pushw
pusha
xchg
sub
lods
mov
cwde
and
sbb
pop
sub
pusha
aam
mov
cmp
jb
loop
dec
sub
sub
dec
(bad)
mov
or
sub
rol
dec
sub
imul
sti
loopne
rcl
pushf
sbb
fstp
les
inc
cmp
xor
xchg
mov
inc
or
dec
ret
sbb
lds
outs
cmp
pop
push
mov
adc
xlat
jmp
div
pop
mov
out
iret
pop
push
xchg
mov
mov
mov
add
add
add
or
add
push
pop
or
xchg
or
mov
jmp
fimul
std
imul
inc
push
retf
push
pop
or
jno
mov
ret
sub
movs
adc
xchg
cs
or
std
in
ret
addr16
out
fst
pop
push
and
(bad)
dec
push
jecxz
dec
pop
lods
fwait
add
jns
add
cmp
sub
fld
lods
and
sbb
sub
push
bound
inc
sbb
out
mov
fisttp
outs
push
jle
add
or
jg
mov
jg
add
sub
les
jmp
jle
push
xchg
test
(bad)
push
push
mov
inc
add
mov
in
bound
add
push
sub
inc
add
out
add
ret
cmp
out
dec
push
in
jge
jl
shl
push
and
mov
and
xchg
retf
mov
add
or
bound
push
loop
addr16
push
ret
push
mov
jg
push
push
inc
andps
lea
lods
ret
mov
jbe
test
push
or
adc
jb
jl
sbb
hlt
add
in
pandn
inc
add
leave
inc
in
adc
dec
int
mov
or
stos
push
pop
lods
mov
push
dec
or
mov
sub
or
movs
mov
imul
int
in
push
or
push
pop
inc
push
enter
jno
test
out
or
mov
outs
call
push
jo
pop
push
dec
popfw
cmp
xor
sub
xchg
xchg
adc
adc
sbb
int
pop
mov
loopne
(bad)
imul
adc
es
fwait
sub
sub
popf
adc
dec
xor
loope
mov
leave
pop
push
fild
dec
fchs
add
adc
adc
xchg
jnp
mov
add
sbb
push
inc
mov
sub
test
adc
dec
push
pusha
jmp
push
iret
pop
loope
ins
add
or
cs
aam
in
rol
inc
mov
dec
and
shl
ds
imul
or
movs
mov
add
mov
add
(bad)
jge
sub
inc
and
mov
pop
inc
sbb
movs
sub
and
call
sub
popa
lahf
add
sahf
shl
add
push
or
cmp
jecxz
out
xchg
test
test
push
inc
sub
js
xchg
test
fwait
mov
cmp
into
add
popa
mov
push
js
dec
adc
push
test
pushf
pop
ret
add
inc
cmp
dec
sbb
dec
cs
xchg
inc
dec
push
sbb
cmp
push
lods
sub
mov
add
add
inc
push
sbb
mov
pop
fneni(8087
and
mov
aaa
lock
push
mov
adc
sahf
ins
xchg
sbb
fucomp
inc
sub
clc
sbb
mov
stc
or
pop
add
push
dec
adc
jo
sub
sub
pop
xchg
jmp
sbb
movs
popa
cmp
(bad)
adc
lock
dec
push
cli
or
mov
or
dec
je
loope
mov
add
dec
movs
mov
ins
jecxz
or
add
(bad)
mov
retf
int3
pop
shl
push
inc
mov
sbb
mov
ins
xor
dec
dec
add
mov
mov
dec
jge
add
sub
arpl
das
or
jns
enter
and
movaps
das
mov
inc
rcl
aaa
push
add
jl
mov
and
and
mov
ror
xchg
jmp
mov
or
call
pop
lock
clc
cld
cs
dec
in
add
or
in
mov
and
retf
and
sub
xor
in
mov
mov
dec
push
push
pop
xchg
retf
in
pop
pusha
fs
cs
js
sbb
test
sub
xchg
lock
xchg
or
in
inc
push
add
adc
pusha
push
adc
lock
fistp
cmp
adc
enter
shl
cmp
test
lea
retf
inc
dec
call
xchg
mov
push
mov
sub
add
inc
sub
mov
cdq
and
adc
add
adc
xchg
xor
jnp
lea
inc
jmp
call
push
imul
sbb
sbb
data16
mov
and
int
add
add
loopne
mov
pop
add
jle
xor
sub
js
add
or
ret
dec
push
mov
add
push
inc
ret
stos
xor
inc
sar
jno
mov
bound
xor
xor
mov
addr16
or
nop
jne
loope
adc
add
outs
mov
xor
je
and
jns
fsub
fs
or
xor
or
and
add
cmp
cli
add
cdq
fsub
xor
push
sbb
pop
and
ret
or
stos
inc
jle
add
mov
aaa
dec
adc
fcomp
ret
je
sbb
retf
inc
push
enter
dec
cdq
sub
mov
shl
lock
mov
inc
xchg
lods
outs
push
jnp
mov
xor
cdq
fldcw
push
jnp
mov
or
ss
test
aam
cmp
mov
mov
retf
in
jb
adc
sbb
mov
jo
test
cwde
cmp
or
dec
call
addr16
inc
dec
push
or
ins
push
ret
sbb
pop
addr16
jl
js
cmp
mov
or
ins
(bad)
sub
xchg
sbb
sbb
rcr
cmp
aam
ins
mov
sbb
mov
fmul
xlat
sub
mov
inc
cmp
push
dec
push
stos
push
dec
xchg
repnz
adc
fild
and
in
xchg
mov
inc
push
sbb
mov
mov
nop
lods
es
jg
ins
shl
dec
xchg
test
add
jge
xchg
mov
sub
push
adc
shl
adc
xchg
mov
outs
sbb
fst
mov
out
mul
lods
push
push
sub
push
pavgb
das
cmp
scas
jnp
xchg
lods
xchg
lods
add
fsubr
cmp
push
add
push
popf
sub
int3
in
cdq
adc
push
xchg
or
dec
ret
push
cmp
sbb
pop
push
xor
adc
xchg
mov
cmps
inc
(bad)
pop
pop
jbe
xlat
mov
outs
daa
popa
dec
hlt
mov
cmp
or
mov
aad
clc
mov
lds
pop
ror
or
inc
inc
pop
das
or
adc
outs
mov
imul
stos
(bad)
cmp
xor
push
add
adc
add
adc
sbb
dec
mov
adc
jo
cwde
xor
shl
rcr
cmp
jbe
cmp
inc
push
mov
sub
sbb
and
pusha
jecxz
add
pop
jns
sub
arpl
jb
sub
add
rcl
repnz
pop
dec
mov
add
push
inc
mov
popa
retf
ins
pushf
mov
ret
and
dec
add
dec
test
out
lea
inc
cmp
imul
test
test
push
jb
adc
or
xchg
adc
cmp
and
clc
sbb
add
ja
xchg
iret
and
push
enter
and
jae
mov
and
sbb
inc
or
inc
arpl
push
aam
or
sub
sbb
rol
xchg
pop
adc
rol
mov
inc
sbb
jge
jmp
jno
mov
test
retf
stos
cmp
dec
loopne
add
nop
cdq
mov
movs
adc
jnp
jns
cmp
enter
in
and
and
or
or
xor
push
sbb
sti
and
xchg
imul
push
nop
cmovp
aad
std
sub
jge
fstp
imul
add
call
test
push
aam
pushf
mov
push
clc
push
sub
xlat
add
aam
nop
cs
xlat
ret
add
push
add
not
sub
jg
add
pop
ret
sbb
mov
in
scas
push
push
push
lods
je
sub
push
fsub
inc
rcr
cs
pushf
inc
ja
sub
int
es
xchg
sbb
jae
popf
es
add
cs
lock
cmc
ins
add
inc
mov
stos
add
mov
bound
push
dec
dec
and
add
arpl
imul
xor
je
mov
xchg
sbb
sar
mov
inc
in
and
pop
mov
or
pusha
sub
or
or
(bad)
fisub
and
jo
sbb
adc
jns
aam
movs
fcmovnb
leave
repnz
inc
loope
xchg
adc
out
or
shl
ret
cmp
add
lods
lods
jecxz
xchg
jo
(bad)
addr16
mov
xor
mov
and
mov
push
mov
in
jl
sub
jb
cmps
retf
mov
shl
mov
(bad)
mov
sahf
push
and
into
fidivr
cli
daa
in
push
mov
in
sbb
sahf
sbb
lods
cmp
add
pop
push
nop
inc
mov
xor
mov
pop
mov
fist
out
mov
(bad)
in
and
inc
cmp
add
pop
sub
icebp
shr
cmp
adc
clc
pop
inc
mov
or
jmp
fcomp
jne
cmp
ror
data16
add
jmp
mov
pop
rcr
sbb
test
pop
mov
xchg
xchg
dec
inc
ja
sub
or
adc
push
sbb
cmp
mov
inc
push
fs
nop
push
rol
cmp
enter
cmp
sbb
dec
push
jnp
add
sub
jns
push
jnp
sbb
xor
xchg
cld
popa
mov
test
mov
push
push
jns
dec
or
dec
push
or
add
ret
xor
xchg
or
jae
or
cs
lods
jne
dec
rcl
pop
push
rol
pop
movs
inc
mov
pop
repz
dec
push
pop
mov
inc
inc
push
sub
es
lea
scas
xchg
add
xor
xor
popf
fwait
mov
and
add
cmp
or
shl
jle
loopne
add
jnp
popa
jno
fsubr
push
inc
inc
cmp
std
add
pop
xor
(bad)
ret
lods
inc
pop
mov
and
adc
mov
xchg
cmp
xor
adc
mov
mov
cmp
bswap
cmp
or
lds
xor
and
push
inc
in
sbb
and
xchg
sbb
mov
hlt
or
icebp
sbb
daa
cdq
pop
mov
dec
xor
push
xchg
add
es
push
(bad)
clc
bound
(bad)
shr
test
and
sbb
jp
jne
dec
inc
mov
icebp
add
in
xchg
inc
pop
cmp
(bad)
int3
(bad)
adc
fwait
mov
sbb
add
sbb
sub
push
add
add
mov
lea
mov
(bad)
adc
xor
pop
cmp
rcl
xchg
test
inc
neg
xchg
outs
push
imul
scas
sbb
sar
sub
dec
xchg
movs
aad
enter
inc
fsubr
cs
adc
mov
sub
mov
push
pushf
push
xor
les
adc
jmp
or
xchg
sub
pop
in
leave
cdq
jmp
cmps
fisttp
cmp
add
xor
lods
cmp
test
and
or
push
push
sbb
cmps
test
lock
lock
dec
inc
sub
rcr
icebp
fisubr
or
inc
adc
pushf
mov
sub
jns
ds
retf
inc
fmul
push
dec
mov
pop
push
sbb
mov
je
jae
jne
nop
call
ror
pop
lock
adc
cmps
inc
push
inc
test
xchg
loopne
push
jb
into
sub
(bad)
loopne
or
pop
dec
dec
sub
add
popa
add
xor
push
xor
xor
xor
pmulhuw
xchg
sub
mov
mov
mov
adc
gs
jl
aas
imul
xor
jge
push
or
sbb
inc
xchg
rol
pop
les
or
or
jae
(bad)
mov
or
add
push
sbb
xchg
xchg
int3
cmps
movs
inc
push
adc
sbb
or
jg
mov
jp
add
(bad)
shr
add
jne
mov
je
fdivr
mov
sar
js
push
sbb
cmc
popa
mov
sub
repnz
mov
rcr
adc
loopne
adc
(bad)
cwde
or
in
leave
and
imul
nop
sub
jae
cwde
nop
sub
mov
lds
xchg
(bad)
enter
inc
imul
sbb
sbb
pop
pop
mov
mov
mov
push
add
adc
mov
mov
jne
pop
mov
retf
cmovns
or
aaa
hlt
sub
lds
mov
outs
stc
and
fs
or
bound
or
add
mov
push
push
push
jmp
je
out
adc
pop
jmp
sbb
jmp
adc
dec
cld
adc
add
add
push
clc
xchg
scas
or
or
fdivr
add
add
dec
lahf
dec
repz
fiadd
add
(bad)
push
inc
mov
rcr
jl
jbe
les
enter
add
add
test
dec
jb
sbb
pop
idiv
or
push
or
add
test
sahf
or
pop
and
mov
add
mov
lods
in
test
iret
adc
outs
jp
ins
ret
inc
push
(bad)
test
dec
retf
les
pop
retf
adc
push
adc
or
ret
sub
neg
pop
and
add
add
adc
outs
inc
neg
dec
cmp
pop
add
add
add
or
mov
pop
jmp
jo
inc
or
dec
add
nop
pop
or
cli
push
mov
dec
clc
adc
adc
inc
adc
retf
dec
cwde
cdq
ficom
inc
popf
shr
pop
inc
add
adc
pop
es
add
or
dec
(bad)
rol
or
xchg
or
lds
call
inc
mov
ja
push
stos
mov
sub
add
iret
mov
or
push
jne
sbb
nop
jns
pop
fwait
or
sbb
std
or
or
and
jp
and
jae
div
and
test
push
sub
dec
ret
mov
xor
shr
pusha
push
rcr
cmp
sbb
jg
or
or
add
xchg
sub
enter
(bad)
ins
and
in
dec
jecxz
or
dec
push
test
adc
add
bsr
cmp
(bad)
mov
adc
mov
sub
sbb
jge
jmp
pop
xchg
mov
rcl
test
fisttp
xchg
adc
lea
and
and
and
xor
sub
jl
xlat
adc
xor
mov
xor
xor
aaa
push
adc
ror
sbb
imul
sbb
dec
sbb
in
pop
mov
adc
or
pop
lea
dec
retf
mov
pop
test
mov
and
pop
mov
sub
xor
leave
shr
adc
shr
das
jl
ja
pop
call
inc
and
mov
lods
jno
mov
or
mov
pop
mov
jo
sub
push
sbb
lods
test
movs
jns
push
and
push
add
inc
and
pop
scas
nop
push
loopne
xor
call
push
cmp
push
cmp
sbb
adc
or
jne
or
jne
test
jbe
ret
cmp
rcl
aas
sub
dec
inc
sbb
jmp
popa
scas
jmp
and
cmp
cs
mov
dec
xchg
mov
inc
je
push
fwait
cmp
rol
sub
sub
retf
jecxz
mov
pop
dec
clc
inc
leave
mov
xlat
les
clc
lea
sub
add
iret
xchg
fwait
push
fdivr
add
cli
pop
ds
lds
adc
dec
xor
dec
pop
lahf
sbb
daa
test
dec
ret
cmc
icebp
popf
add
stc
mov
aaa
test
movs
daa
and
lods
or
adc
adc
lahf
mov
ret
lods
loope
pop
dec
dec
or
jmp
outs
inc
jle
mov
or
iret
inc
shl
sbb
aaa
in
pop
add
mov
mov
dec
xlat
cmp
mov
pop
in
jmp
mov
pcmpeqd
in
lock
fimul
add
movs
adc
fsub
enter
and
and
mov
nop
push
dec
and
add
jae
cmps
jb
or
inc
xor
dec
add
push
(bad)
sub
or
pop
push
dec
adc
fstp
les
xchg
push
or
or
mov
and
adc
or
push
xchg
or
inc
add
sub
pusha
popf
cwde
xchg
mov
es
loopne
rol
jge
daa
sub
(bad)
in
cs
adc
mov
mov
mov
cmp
gs
ret
pusha
jnp
adc
movs
cmp
add
jae
pop
hlt
or
mov
push
jmp
das
pop
mov
daa
inc
fsubr
push
push
dec
bound
mov
test
mov
xchg
add
shl
dec
je
add
sub
sub
jne
push
adc
inc
dec
xor
add
add
xchg
adc
add
add
pcmpeqb
call
or
mov
push
push
inc
pushf
pop
mov
(bad)
inc
(bad)
test
aaa
ins
sbb
fiadd
arpl
aaa
test
sbb
iret
rcl
js
and
or
jmp
pop
jmp
add
xor
lods
push
or
push
adc
fst
add
pop
mov
enter
pop
prefetch
cmps
pop
scas
push
jge
inc
gs
movs
push
adc
and
pop
js
add
push
test
adc
and
ins
pop
jge
jmp
outs
sti
push
add
ja
test
movs
jmp
sub
jg
(bad)
fisub
pop
ja
mov
jg
mov
cmp
mov
jmp
(bad)
out
or
je
push
inc
imul
stos
dec
mov
push
(bad)
ins
pop
imul
add
pop
mov
sub
mov
fmul
inc
sub
mov
xor
jae
fs
dec
(bad)
xor
test
ficom
push
push
or
or
mov
push
cld
rol
lahf
add
push
bound
adc
ins
push
es
mov
fist
inc
adc
ret
frstor
push
bnd
and
lock
push
cmps
lahf
imul
xchg
xor
movs
rcl
lock
and
out
sub
dec
xor
jp
xor
(bad)
aad
jle
pop
rcr
nop
pushf
sub
cmp
rcr
inc
add
popf
test
imul
mov
pop
jno
ins
sbb
imul
lahf
enter
pop
gs
and
mov
stc
loopne
mov
and
xchg
cmp
pop
sbb
int3
(bad)
inc
jge
or
jae
or
gs
sub
add
arpl
repnz
jmp
(bad)
loopne
daa
ror
sbb
sbb
jp
adc
bound
ret
pop
add
in
adc
ins
mov
int3
or
pop
mov
pop
jnp
mov
xchg
mov
inc
or
aam
fwait
dec
shl
hlt
pop
add
inc
lea
pop
push
adc
pop
inc
sub
and
cmps
nop
clc
je
sar
iret
jbe
and
es
dec
sbb
cmp
test
cmp
movs
xorps
jmp
xor
xchg
mov
scas
fsub
add
retf
or
sbb
pushf
mov
pushf
inc
sub
push
popa
xor
je
cmp
mov
movs
dec
pushf
inc
push
daa
je
fadd
add
adc
rcl
xchg
or
sbb
xchg
mov
xor
ds
and
inc
sbb
cmps
gs
or
add
xchg
add
pop
mov
add
mov
sbb
adc
cwde
mov
ins
push
enter
aam
les
rcr
xor
or
and
add
push
outs
dec
mov
cld
inc
mov
cmp
xor
jne
mov
into
les
ins
mov
jno
(bad)
mov
rol
inc
fwait
xor
(bad)
push
(bad)
pop
push
pop
push
sbb
or
nop
hlt
push
fild
lods
xchg
outs
inc
xchg
(bad)
jmp
sbb
adc
push
movs
mov
cld
(bad)
or
fnstenv
pusha
aaa
push
sub
or
movs
cmp
test
xchg
loop
mov
dec
sbb
pusha
jbe
inc
sub
or
xchg
and
jp
fstp
lea
xor
or
pop
add
cmp
cmps
ss
sub
adc
cvttps2pi
dec
adc
xor
push
xchg
(bad)
dec
sti
jge
(bad)
ror
xchg
nop
or
xchg
cmp
mov
or
test
mov
mov
jo
pop
sub
ss
jno
mov
xchg
pop
sbb
pop
fsub
jne
sbb
push
add
dec
aam
dec
lods
retf
es
(bad)
mov
jl
je
and
inc
lahf
and
sub
je
dec
add
pop
sahf
fimul
mov
mov
inc
jle
sbb
fmul
mov
push
ja
jle
push
dec
imul
add
scas
mov
pop
cdq
arpl
pop
lock
jmp
mov
push
pop
xchg
dec
add
push
pop
pop
pop
sbb
jmp
add
mov
add
or
xor
sub
or
mov
push
or
mov
mov
test
ror
adc
push
add
xchg
jl
inc
shl
stos
push
call
dec
jno
jb
movs
arpl
pop
sub
jns
or
sub
mov
xchg
dec
cs
loope
or
imul
push
je
add
push
add
push
imul
call
lea
cmp
jb
sub
popf
push
call
fisubr
cdq
xchg
xor
int
add
test
or
dec
jo
inc
inc
add
dec
mov
fisub
jo
jmp
jle
ss
mov
jle
lods
fidiv
fcomp
test
loope
adc
ja
icebp
jo
jbe
inc
mov
movs
add
sbb
or
jle
inc
jmp
outs
lea
enter
mov
adc
ror
pop
sbb
or
xor
lahf
aaa
mov
inc
imul
sbb
cmp
shl
cmp
je
or
jl
aad
shl
sub
add
sub
in
dec
jecxz
retf
jp
push
cmp
fwait
(bad)
dec
test
inc
and
out
lahf
jecxz
and
pop
movs
arpl
cmp
xor
in
dec
clc
pop
jl
(bad)
jmp
movs
dec
inc
jb
xchg
inc
jne
inc
xor
and
pop
sbb
or
call
mov
rcl
dec
inc
inc
sub
add
inc
call
pop
pop
fwait
repnz
ret
sub
add
ror
pcmpgtb
mov
popa
sub
movs
sbb
sub
aaa
enter
in
add
mov
or
inc
jl
fmul
mov
outs
xchg
inc
xchg
cwde
in
retf
bound
jl
add
push
scas
adc
sbb
adc
out
jmp
(bad)
cmc
adc
xchg
dec
jo
push
jb
outs
stos
cmp
jecxz
push
pop
mov
jle
outs
push
xor
test
mov
pop
dec
jne
mov
and
inc
cmp
into
mov
mov
push
and
mov
int
push
or
add
xor
mov
ins
push
aam
pop
xor
(bad)
mov
jnp
cwde
push
and
and
mov
mov
inc
popf
pop
sbb
popa
test
call
jae
push
dec
adc
xchg
(bad)
xchg
fst
xor
fist
rol
jmp
gs
clc
je
sub
inc
sbb
loope
jge
lahf
mov
jmp
xor
jns
or
inc
ja
lock
xchg
stc
jns
add
and
test
sub
push
fimul
mov
and
and
push
call
sbb
and
retf
ror
loope
jbe
add
ret
push
dec
push
mov
pushf
sbb
or
sbb
mov
fldenv
jmp
gs
std
fistp
ds
jp
aam
or
sub
loop
cmp
js
or
mov
sbb
mov
adc
add
test
stos
adc
push
xor
or
add
sbb
aaa
rcr
call
mov
cmp
fdiv
or
inc
hlt
lea
nop
jmp
imul
push
mov
sbb
stos
movs
or
lea
sahf
cmp
jne
xor
add
gs
test
add
add
cmp
dec
pop
pop
lds
xor
add
imul
mov
push
add
ret
fst
in
mov
push
adc
and
test
leavew
dec
stc
add
xchg
shl
inc
xchg
mov
imul
jp
ficomp
mov
lahf
add
xchg
fbstp
je
inc
push
jg
add
cld
push
cwde
movs
gs
data16
or
jbe
push
push
jmp
cdq
hlt
dec
sbb
repnz
sbb
adc
inc
ret
fadd
scas
(bad)
and
sbb
dec
mov
movs
mov
mov
int
xchg
xor
sbb
push
(bad)
pop
fsub
movs
and
add
mov
mov
gs
jle
sar
pop
sti
sti
fisttp
out
je
aaa
jl
pop
loopne
mov
pop
test
mov
sbb
lods
ret
push
and
adc
mov
nop
add
jbe
and
(bad)
dec
mov
pop
test
push
sbb
xchg
pop
fstp
popf
mov
sbb
les
jmp
hlt
mov
sahf
sbb
adc
int3
inc
mov
pop
xchg
add
xchg
add
ret
jbe
and
rol
or
or
mov
sub
and
mov
pop
stos
add
push
cdq
add
lods
rol
pop
cmps
push
je
xor
aas
or
retf
xchg
je
push
jmp
or
inc
jmp
(bad)
or
dec
add
icebp
mov
mov
dec
sbb
sub
xor
and
rol
rcl
in
jo
enter
out
popf
shr
in
cwde
je
add
mov
(bad)
in
add
push
mov
inc
lods
mov
push
test
push
shr
fild
sub
fidivr
pop
xchg
rcr
dec
pop
sub
add
sti
push
pop
or
(bad)
je
cmps
sbb
mov
(bad)
cmp
and
mov
cmps
enter
jo
fcom
sbb
or
inc
or
cli
sbb
pop
xchg
les
jle
adc
mov
inc
in
jmp
inc
test
ja
cmps
mov
pusha
jle
mov
ja
xor
ds
add
sbb
je
or
dec
int3
ja
ins
ins
jmp
push
or
stc
das
and
cmp
ja
je
and
xchg
or
pusha
push
mov
ins
(bad)
xor
or
sub
outs
push
cmp
or
and
fimul
inc
pop
push
or
dec
rcr
ror
or
xchg
fwait
(bad)
scas
jmp
jbe
adc
in
jns
or
retf
int
popf
push
ja
dec
dec
(bad)
cli
add
cmc
add
mov
inc
stos
dec
jnp
push
push
in
scas
out
xchg
daa
mov
or
pop
push
and
ja
je
aam
ja
dec
imul
ins
hlt
pop
push
push
or
push
or
(bad)
jbe
push
ins
test
jnp
xchg
dec
sub
std
cmp
cmps
mov
mov
xor
fsubr
pop
repz
stos
or
inc
cli
mov
xor
cmp
sub
in
loope
and
sub
inc
imul
cmp
sub
and
or
xor
mov
jl
inc
push
xor
mov
add
ins
jnp
test
aaa
pop
pop
xchg
shld
jo
sar
jb
inc
inc
ja
pop
lods
mov
inc
fmul
xchg
and
mov
inc
and
mov
pop
dec
out
cli
ins
imul
cld
sbb
mov
push
push
out
cmp
loopne
xor
cld
push
dec
adc
push
mov
sbb
lock
retf
cmp
(bad)
jmp
sbb
xor
xlat
jno
push
mov
(bad)
repnz
mov
aaa
xor
add
daa
js
fsub
pop
aas
sbb
rol
ds
aas
or
ja
shr
jo
ret
mov
or
jmp
das
pop
adc
popa
jmp
outs
or
jne
and
popa
fwait
popf
inc
les
aaa
jg
jnp
test
pop
add
or
inc
cmp
add
test
mov
xchg
jge
retf
mov
or
sbb
imul
ret
xlat
mov
push
rol
cld
inc
icebp
movs
lods
mov
cld
sub
out
xchg
or
mov
es
clc
ror
inc
add
xor
rol
or
sub
dec
lods
popa
and
or
add
cs
pop
stc
adc
push
mov
es
ja
pop
cmp
sbb
mov
push
(bad)
mov
xchg
or
movs
fsub
and
mov
dec
psllw
xor
mov
movs
pop
repnz
pusha
test
push
or
add
xchg
repnz
aam
jmp
clc
neg
sbb
inc
out
call
or
ja
sub
shr
sahf
jns
xor
adc
popa
sub
and
inc
popa
pop
fnstenv
popf
push
push
(bad)
mov
fnstenv
test
and
jo
jno
(bad)
xor
icebp
adc
push
in
pop
adc
adc
and
cs
add
jb
loope
loope
ror
enter
imul
test
dec
sub
fs
xchg
adc
clc
dec
scas
xchg
or
cmps
rol
and
test
adc
in
sub
or
adc
mov
xchg
ficom
outs
sbb
and
sub
shl
mov
scas
inc
loop
push
or
add
mov
pop
cmp
sub
cmp
test
shl
loop
add
adc
sbb
popa
nop
sti
je
dec
xchg
std
add
movs
adc
test
imul
arpl
mov
stos
lea
jo
push
icebp
xchg
test
adc
dec
add
jmp
xor
xor
rcr
sbb
dec
rcl
mov
test
dec
push
push
dec
xchg
jp
js
rcr
mov
and
add
test
jne
retf
xchg
imul
xchg
nop
pop
add
mul
aam
in
dec
pop
call
sub
mov
pop
int3
sub
dec
sub
sar
add
in
xor
scas
xchg
mov
xor
sub
shr
mov
sbb
push
add
inc
cmps
adc
fstp
xchg
in
push
test
push
and
adc
add
imul
imul
(bad)
mov
fidivr
loopne
inc
sbb
mov
bound
xchg
inc
dec
and
and
or
or
mov
scas
inc
cs
sbb
push
ret
pop
and
sub
out
xbegin
mov
sbb
fadd
inc
loop
push
pop
inc
jmp
dec
pop
xor
add
pop
jae
sbb
adc
and
xchg
add
inc
or
ret
shr
mov
and
or
test
repz
sbb
sbb
pop
inc
les
ret
aad
loopne
jmp
xor
rcl
sbb
add
or
retf
ret
or
push
mov
rcr
push
xor
pop
xor
cmc
loopne
adc
icebp
mov
gs
jmp
pop
ins
add
fisttp
loop
dec
or
inc
jmp
popa
ins
xor
ins
ja
lods
and
es
retf
adc
and
adc
jle
test
inc
in
ins
xor
push
rol
jp
add
cwde
dec
sbb
ret
or
loope
jl
push
test
jmp
xor
ds
mov
sbb
ins
adc
rol
mov
sub
pop
push
dec
int3
lock
sbb
data16
and
rol
push
sar
sub
xor
sar
xor
mov
adc
aaa
and
in
push
daa
inc
aaa
test
mov
or
mov
cwde
add
inc
cli
mov
out
add
gs
mov
fsubr
push
pop
push
pop
sbb
scas
cdq
push
push
sbb
xor
add
add
popa
in
pop
and
cmp
inc
add
push
add
xor
call
in
aaa
and
add
fimul
loopne
xchg
sub
add
loopne
pop
xor
lock
add
cmp
add
les
inc
retf
mov
xchg
retf
fimul
sbb
pop
add
or
loopne
dec
in
push
jmp
mov
jo
icebp
mov
mov
inc
sbb
and
dec
cmp
adc
es
mov
jge
repz
fmul
dec
jb
adc
push
mul
or
jge
add
add
xor
and
cli
dec
mov
es
sbb
jno
add
inc
clc
int
lods
mov
push
sbb
add
pop
dec
loope
fild
inc
pop
add
inc
or
inc
mov
fdiv
mov
jp
fbstp
(bad)
mov
es
add
mov
mov
fdiv
push
leave
sub
out
xlat
sub
pop
push
push
adc
or
pop
or
pop
mov
dec
cmps
mov
add
push
cmp
xor
inc
lock
(bad)
push
sub
btr
sub
cdq
int
pusha
retf
sub
fimul
jg
inc
rcl
mov
push
jne
pop
xor
cli
xor
je
sub
cmp
daa
and
cmp
shl
dec
xabort
add
pusha
jo
cmps
cmp
sub
push
fadd
sti
push
sub
(bad)
sub
push
fadd
(bad)
cmc
inc
shl
cmp
jae
cmp
or
aas
rol
(bad)
jle
push
push
sub
fbld
inc
outs
and
(bad)
(bad)
pusha
or
dec
jne
test
shr
sub
(bad)
nop
call
mov
add
or
cmp
sbb
jb
repnz
add
inc
adc
cmp
sub
xor
push
bound
xchg
or
xchg
es
adc
test
sbb
inc
ror
push
push
mov
ret
xchg
rol
mov
pop
xor
inc
mov
sub
daa
add
and
pop
push
inc
xor
xor
dec
pop
daa
pop
stc
pop
sahf
dec
je
movs
and
xchg
dec
adc
cmp
cwde
jbe
add
mov
cmps
cld
mov
xchg
fld
aam
cmp
jae
xor
cld
sahf
fcmovnu
inc
push
(bad)
cmp
sub
jae
sbb
gs
adc
test
or
ror
sbb
(bad)
popa
mov
sbb
sub
adc
adc
adc
aaa
xchg
xor
jg
in
inc
sbb
data16
cmp
mov
js
mov
and
add
jae
cs
push
sub
fidivr
adc
int
pop
shr
leave
and
add
sahf
dec
and
mov
and
iret
jnp
push
push
add
jo
fs
pusha
scas
clc
push
add
push
je
mov
int3
pop
dec
jge
pusha
and
pop
lods
or
dec
dec
arpl
ja
call
pop
scas
dec
pop
inc
jno
sbb
add
ja
sub
sbb
jecxz
out
cmp
fisub
adc
xor
mov
mov
je
mov
mov
into
pop
sub
and
xor
(bad)
dec
nop
push
clc
add
leave
mov
sbb
dec
or
(bad)
jmp
push
mov
ja
jae
stos
retf
or
add
push
call
or
mov
adc
pop
xchg
fadd
(bad)
xor
xor
dec
icebp
(bad)
pusha
add
daa
pop
stos
inc
inc
shr
add
dec
sub
hlt
xor
pop
push
enter
test
inc
push
cs
jge
lock
rcr
sub
mov
stc
inc
mov
jo
aam
or
(bad)
int3
xchg
rcl
es
and
xor
and
adc
push
dec
fs
fldenv
rcl
outs
and
out
and
xor
retf
lods
mov
mov
js
rcr
ror
dec
mov
aam
add
pop
(bad)
fnsave
jp
popf
push
dec
dec
mov
cmp
jge
or
and
add
and
xchg
add
push
push
xchg
pushf
in
(bad)
mov
pop
ret
mov
fisub
enter
dec
aam
push
sbb
and
jmp
dec
mov
add
sbb
cdq
adc
test
sbb
test
xor
clc
or
lock
ins
ja
jge
js
xor
push
(bad)
aaa
xchg
aaa
add
jae
in
add
cmp
hlt
mov
xchg
sub
jo
ss
xchg
sbb
lds
and
push
(bad)
adc
clc
xor
movs
mov
sbb
sub
add
push
ss
and
dec
cwde
jge
rol
adc
or
call
movs
add
mov
sbb
cmps
mov
mov
or
pop
pop
cli
clc
movs
inc
adc
fstp
sub
loopne
daa
fimul
push
mov
push
mov
in
loope
inc
push
scas
loope
xor
pop
or
sub
retf
and
(bad)
cld
rcl
nop
(bad)
das
fnstenv
cld
and
cmp
sub
cdq
imul
and
dec
push
test
push
rcl
cmp
inc
adc
pusha
test
push
jo
out
sar
mov
nop
xchg
scas
push
adc
repnz
les
add
push
adc
lea
aam
pusha
adc
adc
cmp
mov
paddq
add
daa
xchg
jle
sbb
mov
fs
fst
adc
dec
pop
inc
jmp
cs
and
call
add
bound
xchg
aam
pop
dec
mov
xchg
sbb
inc
xchg
(bad)
in
outs
jbe
push
mov
test
inc
add
fisttp
ins
lods
pop
jl
dec
jmp
and
xor
call
xor
mov
inc
mov
and
mov
js
push
xlat
nop
adc
mov
add
in
es
push
pop
push
xor
cmps
ret
sub
dec
(bad)
inc
ss
xchg
xor
and
adc
jmp
adc
push
shl
lods
adc
dec
add
aad
dec
sub
add
sbb
or
jge
arpl
xchg
mov
pop
pushf
es
clc
js
add
lea
sbb
adc
add
pusha
pusha
or
push
push
fwait
icebp
pop
icebp
mov
mov
xchg
inc
adc
mov
ins
sub
cmp
push
dec
mov
dec
xchg
mov
add
cmp
mov
adc
mov
je
xchg
inc
mov
mov
add
hlt
push
add
push
pusha
lds
fs
cmps
cli
scas
push
cmp
popf
add
xor
mov
jae
mov
and
push
mov
xor
mov
sub
shl
or
jl
dec
cmp
cdq
inc
mov
loop
mov
mov
dec
das
or
fcomp
aaa
cld
adc
jge
cmp
sbb
xchg
jl
mov
(bad)
pop
sub
or
add
pop
mov
rcr
xor
cdq
jmp
je
and
mov
jge
add
call
mov
add
sbb
mov
inc
cmps
add
stc
movs
xchg
push
arpl
xchg
fild
xor
cmps
sbb
cmps
add
test
ret
add
mov
dec
and
aaa
(bad)
enter
xchg
mov
mov
shl
push
push
stos
or
imul
and
push
sub
pop
jb
repnz
(bad)
gs
add
pop
and
add
add
add
xchg
pop
adc
nop
and
cmp
into
xor
push
cmp
out
mov
jmp
(bad)
xchg
adc
or
in
in
out
cmp
jne
ins
add
or
jge
jmp
imul
or
daa
push
xchg
sahf
mov
mov
inc
or
into
scas
and
xlat
icebp
mov
movs
nop
daa
or
adc
pop
sbb
sbb
dec
sbb
lock
dec
(bad)
adc
cmc
mov
add
cdq
sub
dec
fld
and
and
ss
fistp
in
and
fidivr
mov
push
push
iret
ret
push
es
jmp
and
dec
push
aam
jmp
mov
inc
push
push
or
cmp
push
retf
aad
pusha
and
dec
and
leave
adc
ss
imul
hlt
pop
or
fimul
mov
adc
imul
(bad)
push
xchg
dec
cmp
cmp
clc
and
inc
jge
out
sbb
outs
add
sti
rcl
jmp
imul
adc
xlat
push
or
adc
sbb
mov
inc
lahf
push
mov
dec
pop
sbb
mov
in
add
outs
cld
repz
sar
call
and
pop
movlps
and
(bad)
pop
add
xchg
jns
sub
ins
cmp
sub
add
add
push
pop
cmp
add
lock
adc
cmc
push
int3
xor
(bad)
push
push
pop
jnp
or
daa
add
mov
je
add
push
div
push
fsub
cs
push
ficom
add
aaa
sbb
and
fist
pop
dec
dec
dec
loope
sahf
sbb
xchg
push
mov
add
sar
fnstsw
adc
mov
push
jns
cmps
ffree
push
fild
jae
or
push
rol
pop
mov
das
mov
xchg
mov
rcr
mov
pusha
rol
sub
push
cmp
mov
shl
push
call
add
lds
or
in
mov
lock
rol
mov
adc
sti
or
cwde
mov
sbb
or
loop
cmc
and
mov
pop
clc
or
xor
push
cmp
(bad)
jno
sub
inc
jl
pop
movs
push
ror
xor
adc
mov
iret
enter
sbb
or
fild
adc
inc
jb
pop
inc
cmp
outs
fiadd
(bad)
cmp
pop
nop
ss
xchg
fdivr
and
jae
inc
adc
and
js
inc
call
push
mov
xor
push
aad
add
pop
(bad)
lods
lea
outs
jmp
cmp
pop
cbw
mov
adc
or
cdq
aam
adc
or
sbb
sbb
push
xchg
pop
daa
inc
or
push
mov
or
fisttp
pop
out
push
idiv
ins
fiadd
sbb
cmp
cld
stos
and
add
mov
jmp
aaa
mov
add
inc
xor
rol
pop
adc
sbb
cmps
cmp
add
pop
xchg
(bad)
push
outs
daa
adc
shl
cmp
(bad)
and
test
repnz
outs
inc
dec
mov
aaa
xchg
pop
movs
mov
out
adc
sub
inc
loopne
add
mov
test
into
pop
adc
aam
in
cmp
inc
movs
and
loop
ror
loopne
sbb
loopne
pusha
cmp
jb
sar
or
pop
les
dec
jb
sbb
push
into
addr16
sub
sbb
test
push
inc
imul
cmp
cs
sbb
shl
cmp
imul
adc
push
inc
mov
les
xchg
aad
test
cwde
out
jae
cmp
mov
fcomp
pop
push
adc
push
or
inc
adc
movs
pop
push
inc
add
add
retf
xchg
cmc
jmp
sti
(bad)
fist
push
cmp
adc
mov
cmp
dec
pop
pop
xchg
dec
jae
sub
add
int
adc
js
adc
sahf
sub
pushf
add
enter
push
sub
popa
mov
or
push
daa
xchg
inc
fsubr
hlt
jge
and
retf
cwde
fimul
mov
stos
inc
push
iret
test
nop
pop
lods
inc
fistp
int
add
pop
pushf
cmp
and
sub
jg
adc
inc
test
push
lahf
shr
pop
jo
sti
lods
ror
stc
inc
dec
pop
xchg
sahf
fs
cmp
call
or
push
test
pop
pop
inc
sub
add
aam
sub
je
and
and
addr16
lods
or
into
push
out
(bad)
mov
and
ss
and
stc
repnz
mov
sbb
out
and
repz
jle
outs
stos
gs
add
pop
in
leave
and
pop
lea
mov
cmp
shr
sbb
dec
repz
xchg
stos
sbb
inc
jmp
mov
xchg
xor
and
mov
cmp
add
push
lock
jne
add
jne
inc
fdivrp
jb
cmp
loopne
mov
jl
mov
inc
xor
and
and
push
inc
arpl
pop
arpl
pop
test
cmc
xchg
test
test
pop
adc
push
push
jne
sahf
pop
xor
inc
or
push
add
sbb
sub
or
adc
cmps
dec
jmp
push
sub
mov
stos
test
dec
aaa
mov
push
or
stc
ins
dec
pop
mov
or
mov
jmp
sub
dec
ret
adc
mov
cli
xchg
adc
imul
inc
dec
(bad)
mov
adc
or
jmp
pop
inc
retf
call
pop
dec
xchg
sub
movs
shl
dec
mov
jne
push
and
es
and
or
aad
dec
and
and
fnstenv
shr
sbb
aas
sub
idiv
and
stos
mov
xor
in
into
call
add
aas
xlat
mov
xchg
xchg
in
fidiv
xor
mov
cmps
pop
mov
jecxz
adc
or
jp
adc
cdq
mov
ret
push
add
jl
adc
dec
leave
inc
ret
or
fmul
imul
lahf
nop
mov
adc
mov
test
sbb
lock
push
sbb
ror
cmp
add
xlat
adc
outs
mov
push
dec
add
dec
and
rcr
pop
shr
sub
rol
lods
inc
or
mov
ror
jecxz
les
aad
adc
add
and
loopne
jl
cmp
jo
shl
sub
add
shr
sbb
jo
cmp
(bad)
jnp
sub
xchg
pop
add
nop
mov
das
mov
idiv
adc
xchg
mov
int3
test
xchg
in
loop
inc
pop
(bad)
data16
icebp
push
in
add
push
(bad)
rol
sbb
adc
push
pop
fcmovnb
mov
je
shl
pop
js
mov
inc
ret
jmp
and
fiadd
inc
iret
inc
mov
les
ja
or
aaa
popf
inc
adc
sub
out
and
imul
pop
sub
sbb
dec
popa
jb
xchg
adc
sub
push
bound
xor
pusha
xor
mov
loope
sbb
jecxz
xchg
arpl
or
mov
pop
xor
push
dec
clc
mov
jl
pop
out
cs
or
add
cmp
sbb
jg
sahf
and
mov
sub
and
test
and
jmp
or
pusha
in
dec
lahf
adc
xor
stos
add
fwait
xor
push
sub
cmp
pop
xor
push
outs
adc
cmp
or
xor
pop
add
jb
mov
inc
fldpi
or
xlat
jmp
mov
mov
xchg
dec
and
adc
jmp
and
std
add
add
repnz
enter
adc
je
add
pop
add
jg
jl
cmp
jb
cmp
cmp
inc
jmp
xor
or
mov
popa
lods
cmp
cmp
pusha
and
cdq
sbb
xor
movs
or
lds
add
aam
(bad)
stos
add
fst
jmp
(bad)
cli
add
pop
dec
cmp
fstp
push
adc
jle
bound
cmp
je
sub
jb
cdq
or
add
mov
add
inc
add
faddp
rcl
or
sub
push
push
pop
nop
div
sub
dec
sbb
mov
sub
inc
cmp
pop
inc
ror
fcom
dec
ret
lds
or
add
cmc
fcom
popa
add
jo
dec
push
push
or
mov
push
or
pushf
cmp
push
rcl
or
movs
mov
test
in
pop
aaa
or
add
xor
mov
xor
ror
cmp
jnp
rcr
test
push
lods
or
loopne
push
add
arpl
sub
push
pop
fisttp
or
mov
je
xor
ror
js
sbb
(bad)
pop
daa
ficomp
push
push
jmp
add
loopne
pop
(bad)
xchg
outs
rcl
cmps
movs
add
scas
inc
xor
pop
daa
fisub
cmps
out
push
loope
or
call
mov
call
int
aam
mov
movs
mov
inc
fadd
les
adc
fcmovu
sub
adc
sbb
ja
jecxz
mov
add
dec
outs
(bad)
mov
add
jl
lods
je
loopne
dec
jmp
sar
sub
push
add
mov
inc
mov
xchg
push
(bad)
push
ficom
or
mov
ret
shl
into
sbb
xchg
xor
add
fisttp
and
xor
mov
adc
test
and
ret
adc
xor
mov
(bad)
mov
inc
xor
mov
xlat
fisubr
push
icebp
cld
mov
rcl
clc
stc
sar
xchg
mov
cmp
fcomip
imul
(bad)
fsub
add
test
push
add
outs
sbb
jmp
shr
jp
or
and
xchg
call
push
in
ins
cld
cmp
outs
sbb
mov
adc
ret
or
dec
(bad)
loope
jmp
mov
pinsrw
dec
pop
repnz
or
loope
outs
or
and
mov
scas
mov
or
cmps
rol
and
pop
shr
retf
(bad)
sahf
sub
sbb
sbb
shl
int3
les
pop
fst
xchg
or
mov
jmp
lods
arpl
or
push
dec
xor
loop
xchg
fld
outs
jnp
fdivr
ror
or
loopne
cmp
neg
add
test
jp
and
mov
jge
jge
sbb
or
push
pusha
inc
inc
jecxz
mov
fs
push
add
pop
mov
and
mov
pushf
pop
ins
inc
sbb
mov
mov
and
dec
cmp
scas
dec
pop
mov
dec
ds
aaa
dec
xchg
mov
and
adc
cmp
cli
lock
lods
rcr
jne
test
rol
pop
je
jle
ret
fmul
and
test
data16
test
cs
cmp
shl
popa
fdivr
fdivr
icebp
xchg
popa
int3
add
sbb
loop
xchg
jnp
std
mov
jge
add
mov
mov
inc
sbb
mov
jmp
in
into
fidivr
sub
loope
add
or
xor
push
outs
das
in
shl
ret
(bad)
js
ret
mov
pop
and
sub
push
rol
sub
jmp
stos
push
lock
or
dec
les
inc
fwait
call
ins
jmp
sub
push
adc
fsub
mov
jno
hlt
loop
sbb
pop
pcmpgtd
rcl
scas
pusha
adc
push
cmp
int3
fsub
add
je
stos
push
mov
jbe
mov
ins
lock
test
adc
cmp
add
and
mov
dec
xor
arpl
call
loopne
sub
adc
leave
jnp
push
add
or
adc
cmp
and
movs
lea
xor
das
fwait
(bad)
xchg
add
mov
adc
sbb
push
nop
xchg
push
retf
stos
pop
bnd
cmovnp
ins
(bad)
sbb
lea
dec
sub
jle
sbb
pop
xchg
call
push
xchg
ins
div
adc
mov
clc
sub
or
sbb
pop
push
adc
addr16
dec
ud2
and
dec
shl
test
sbb
xor
ror
int
fld
dec
sbb
or
or
ins
xor
sahf
add
cli
adc
and
push
cmp
test
(bad)
xor
retf
mov
xor
push
sub
xchg
icebp
(bad)
out
(bad)
pop
(bad)
scas
add
and
ja
call
enter
add
or
push
ret
pop
aas
xchg
sub
sbb
int3
dec
fld
or
cli
inc
fst
fisttp
push
pop
pop
js
cli
mov
jmp
out
loopne
pop
fmulp
or
jmp
pushf
mov
lea
out
sub
or
stos
add
jg
xchg
ds
hlt
dec
or
push
in
push
addr16
jp
pop
jbe
push
lea
shl
ins
cmp
inc
pop
in
jg
pop
xchg
mov
jb
ds
stc
repz
not
ja
xor
ins
daa
iret
cmp
inc
das
pop
pop
push
(bad)
mov
imul
jg
mov
mov
ja
arpl
cmp
and
pop
dec
repz
add
and
or
mov
xor
adc
sbb
ror
and
aam
repz
in
or
push
sbb
or
mov
rol
inc
mov
pop
add
mov
add
fcmovnb
cmp
pusha
adc
mov
not
adc
mov
cdq
sbb
adc
js
hlt
add
nop
aam
cdq
dec
mov
aaa
push
(bad)
rol
(bad)
pusha
leave
sar
(bad)
aaa
inc
and
scas
and
fistp
mov
jg
jmp
push
mov
jle
jne
or
push
push
mov
cmp
xchg
or
jb
jne
pusha
adc
xor
ret
test
pushf
sbb
inc
ins
dec
inc
push
adc
movs
cld
or
add
movs
sub
add
sbb
push
inc
jae
mov
pop
fstp
pop
mov
ret
pmulhw
pop
dec
call
and
xor
(bad)
xchg
adc
sub
dec
popa
pop
push
ds
push
adc
jo
add
ret
call
mov
bound
test
add
cmp
int3
shl
push
sub
sbb
push
test
mov
mov
aam
pop
les
dec
shr
test
(bad)
jne
mul
mov
add
loopne
rcl
and
ins
push
mov
sub
push
in
dec
lea
push
dec
mov
sbb
cmp
add
fwait
jnp
stos
ss
push
add
add
xor
rcl
push
jns
sar
addr16
clc
or
xor
add
ret
test
or
inc
or
(bad)
xor
clc
mov
pop
rcr
push
add
lea
sbb
xchg
add
iret
cmp
int
push
pop
ins
add
mov
mov
pop
cdq
mov
ds
loopne
mov
leave
mov
shl
les
dec
or
add
lea
fmul
jno
push
push
cli
movs
adc
in
push
add
adc
dec
push
shr
hlt
lods
dec
ss
push
jp
xor
mov
(bad)
sbb
mov
adc
outs
ins
cmps
mov
jnp
or
xchg
add
add
mov
or
das
cs
lds
dec
or
xchg
or
das
mov
push
push
and
dec
pop
mov
hlt
jl
push
and
aad
pop
dec
fdivr
cld
je
lea
pop
add
mov
xor
test
sbb
out
mov
rol
in
push
or
je
ds
adc
adc
retf
cmp
or
dec
dec
in
push
push
push
push
js
jne
xchg
data16
cdq
sub
push
out
aas
mov
fnstenv
js
jne
inc
push
pop
sub
or
jo
addr16
pop
mov
dec
adc
push
out
dec
aaa
sbb
dec
pushf
mov
adc
sub
or
inc
dec
xchg
jbe
jbe
stos
pop
mov
jecxz
mov
mov
nop
cs
push
dec
pushf
sar
add
xchg
mov
shl
movs
xor
stc
ins
or
in
mov
add
pushf
seto
test
xchg
mov
inc
outs
and
and
sbb
lods
sbb
add
loopne
shl
xor
clc
pop
inc
add
adc
fisttp
sbb
add
push
add
adc
and
and
(bad)
xor
(bad)
cmp
push
(bad)
and
inc
sub
cmp
sbb
adc
mov
push
inc
push
mov
fadd
mov
sub
leave
(bad)
les
mov
stos
or
nop
mov
out
jmp
std
dec
sub
dec
xor
add
scas
rol
push
sub
push
leave
inc
dec
pop
jnp
inc
sub
test
jle
xchg
cdq
and
cld
enter
sbb
and
jne
adc
cmp
mov
push
fst
add
jmp
xor
movs
out
inc
jle
push
loopne
push
ret
ins
movs
sub
bound
jl
faddp
inc
push
xchg
setno
xchg
or
pop
or
cmp
sbb
pop
scas
and
inc
sbb
adc
jns
fcmovb
pop
hlt
jge
repz
je
shl
push
scas
sbb
in
and
hlt
inc
mov
dec
nop
pop
mov
jl
lahf
mov
add
xchg
test
cmp
int
ja
push
or
ret
and
mov
adc
xor
imul
or
repnz
ret
(bad)
js
fild
mov
or
add
push
push
in
inc
(bad)
xchg
aad
xor
cdq
add
js
dec
sub
ret
mov
jns
cmp
aas
jb
rol
push
jae
retf
and
movs
add
adc
icebp
push
jle
sub
stc
sbb
push
jl
lea
hlt
cmps
(bad)
dec
push
add
add
dec
dec
push
je
or
adc
bound
retf
dec
mov
data16
(bad)
mov
pushf
inc
inc
fstp
outs
(bad)
xor
inc
push
push
cmps
adc
jo
dec
int3
in
jbe
and
or
push
jb
and
fadd
test
sbb
inc
jbe
and
pop
push
jae
pop
jne
lea
loop
sub
loopne
lods
inc
pop
les
or
clc
and
fist
jno
sbb
lods
fsubrp
enter
push
(bad)
fcomp
push
das
adc
pop
pop
mov
xchg
fs
sysexit
mov
push
hlt
outs
ficom
or
hlt
(bad)
push
inc
push
fadd
add
pop
or
add
ja
add
jp
mov
fcomi
rol
test
je
cmp
mov
inc
out
lods
iret
inc
or
addr16
stos
mov
inc
ds
pop
fucom
pop
(bad)
sub
clc
loopne
movs
push
repz
hlt
and
jns
and
test
push
mov
iret
or
in
and
sbb
int
push
push
iret
push
push
fistp
inc
loope
cmp
jo
mov
push
fnstenv
dec
pop
in
or
push
adc
outs
cmps
xor
or
loopne
jno
and
xor
sbb
ins
xor
jmp
add
in
pop
mov
imul
pop
add
jnp
xor
push
jnp
fprem1
pop
or
or
cmp
sub
fnstenv
mov
lds
push
les
dec
stos
mov
cmp
add
and
lds
dec
or
ret
xchg
mov
add
inc
lock
mov
push
sub
cmp
push
daa
je
cmp
xor
je
or
adc
and
inc
mov
sbb
test
jne
or
cmp
and
mov
call
add
in
mov
push
fistp
lahf
inc
neg
mov
clc
je
pushf
pop
xchg
pop
mov
adc
xor
adc
inc
test
mov
adc
inc
out
sbb
fnsave
jns
and
and
cmps
dec
ja
shr
cmp
test
ja
hlt
call
int3
lahf
cmc
mov
push
dec
adc
imul
xor
fsub
cmps
xchg
es
ret
mov
int
imul
sbb
push
pop
jg
inc
(bad)
sbb
scas
add
mov
xlat
dec
inc
lods
sbb
in
mov
bound
mov
and
sbb
in
dec
xor
sar
fadd
and
or
adc
or
or
not
push
loopne
test
push
adc
dec
add
sub
outs
call
js
add
loope
stos
out
mov
jbe
leave
mov
push
popf
pop
xchg
retf
ins
adc
dec
cdq
gs
add
icebp
push
sub
je
and
bound
aaa
and
jns
shl
scas
popa
or
xor
sbb
push
mov
or
or
mov
bndldx
sub
(bad)
xchg
cs
xor
call
inc
cli
mov
into
pop
adc
mov
xor
mov
(bad)
or
sbb
and
xchg
add
sbb
mov
xchg
dec
jl
pop
or
movs
rcl
jmp
pop
sahf
jnp
jns
stc
and
add
pop
out
push
dec
xchg
sbb
out
frstor
ins
fsub
add
mov
sub
sbb
adc
out
retf
dec
rcr
ja
mov
or
xchg
shl
(bad)
mov
mov
je
cmp
nop
test
sub
stos
xchg
xor
add
inc
cld
jg
rol
cmp
inc
leave
stos
xor
cmp
cmp
test
push
push
ja
ins
jb
or
add
or
adc
adc
mov
mov
shl
dec
mov
or
or
add
push
pop
xchg
js
je
inc
fwait
dec
popf
xor
xchg
das
mov
ins
int
push
test
mov
or
or
push
push
imul
sub
jne
jmp
(bad)
xor
shl
jns
ficomp
mov
imul
sub
push
mov
outs
int
int3
adc
cld
and
inc
cmp
xchg
sbb
push
jp
xor
push
je
push
ds
out
lods
fadd
adc
xor
or
jbe
inc
jb
and
(bad)
fst
xchg
das
add
test
clc
rdtsc
push
xchg
mov
jge
mov
adc
add
inc
aas
imul
or
add
jne
iret
leave
adc
inc
adc
pop
cmps
movs
imul
jb
ret
pop
jl
push
add
das
pop
stos
jmp
dec
push
pop
paddq
push
adc
inc
dec
jne
sub
fs
and
frstor
sub
xor
mov
or
ret
les
push
inc
imul
outs
xchg
(bad)
fnstsw
in
sub
sar
pop
rcr
push
cwde
ror
stos
xchg
xchg
call
sar
jmp
jne
cli
cmp
in
xchg
adc
into
xor
dec
(bad)
cmp
sub
sar
sub
or
(bad)
int3
mov
cmc
push
lods
inc
in
test
sub
je
(bad)
std
push
or
mov
and
or
retf
shr
movs
dec
pusha
cmp
or
or
ror
popa
inc
mov
je
mov
or
pop
mov
lea
mov
mov
std
push
lods
jmp
dec
ja
xlat
push
into
adc
adc
mov
sar
je
dec
adc
js
mov
ret
or
and
mov
imul
inc
mov
(bad)
or
push
mov
add
retf
scas
dec
sti
scas
mov
loope
xchg
cli
or
(bad)
fcom
add
xchg
add
dec
cld
daa
call
cdq
adc
push
jge
jo
mov
push
bound
or
adc
fs
inc
outs
jge
jg
add
pop
xor
fwait
cmp
xchg
inc
pushf
div
push
int3
or
jne
sbb
add
pop
jmp
leave
sub
jne
aad
inc
pop
mov
fmul
movs
mov
pop
cmp
imul
add
add
sbb
or
sbb
and
xchg
lods
pop
sub
cld
imul
adc
ja
js
les
ss
xchg
and
retf
xchg
xchg
or
test
xor
push
adc
retf
and
iret
push
cmp
(bad)
por
push
xchg
pusha
mov
(bad)
rcr
push
cdq
pop
call
mov
push
dec
clc
dec
ret
daa
lds
fnstenv
ret
push
scas
adc
and
ja
adc
cmp
dec
add
pop
and
and
repnz
cmps
lahf
cdq
mov
jp
add
add
adc
nop
int
pop
add
fsubr
add
and
cmp
jmp
and
push
dec
xor
iret
daa
mov
les
push
cmps
push
(bad)
push
and
cmp
outs
jl
rol
cmp
xchg
push
fwait
jmp
jmp
mov
dec
jae
push
cs
push
out
iret
movlps
push
or
cwde
ret
xor
xor
push
sbb
push
push
sbb
and
adc
add
xchg
adc
jns
xlat
mov
into
movs
mov
dec
push
mov
mov
pop
lea
mov
in
mov
push
or
xchg
sbb
inc
movs
shl
ret
or
ins
xchg
mov
xor
push
and
jbe
jnp
test
or
mov
sub
add
fidiv
or
mov
or
cmp
add
(bad)
in
cs
popa
sub
and
nop
mov
jo
cdq
cmp
push
mov
stc
nop
imul
sar
mov
icebp
cld
push
jg
push
retf
xchg
jb
and
pop
add
jmp
dec
enter
adc
dec
and
mov
cmp
xor
cmps
push
sbb
cmc
xchg
push
loope
pop
or
jae
movs
jb
call
sub
adc
(bad)
(bad)
and
rcr
adc
adc
loopne
dec
pop
in
or
mov
or
add
add
adc
or
pop
jl
test
adc
es
add
imul
jnp
lea
rol
outs
outs
pop
xor
mov
retf
xlat
sub
or
int3
rcl
dec
aam
pop
fmul
inc
xchg
test
fiadd
jl
cmc
arpl
cmps
mov
daa
icebp
jmp
loopne
in
sub
add
cwde
xchg
mov
or
pop
or
aam
fsub
pop
inc
cmp
dec
or
cmps
fisttp
jecxz
xor
pusha
(bad)
cld
inc
or
inc
cwde
dec
or
rol
or
sbb
adc
xchg
rcr
mov
or
or
inc
sub
inc
or
nop
jo
cmp
mov
call
lea
jo
rcr
ins
pop
lds
mov
dec
ins
mov
fist
lea
mov
or
xchg
dec
and
jge
ss
(bad)
add
jp
(bad)
mov
or
hlt
pop
nop
sbb
(bad)
inc
adc
and
jmp
or
les
mov
cmp
sbb
and
xor
lods
mov
jno
jns
jge
mov
mov
or
xchg
mov
movs
test
pop
jo
sub
fild
xor
(bad)
or
xor
movs
icebp
push
js
jo
pop
mov
daa
test
sbb
test
pop
dec
dec
inc
mov
and
pop
adc
or
adc
jmp
or
cmp
push
sub
jb
sub
mov
mov
mov
or
mov
lea
pop
xchg
mov
push
ret
and
sub
lea
fadd
(bad)
shr
rcl
sbb
aam
ret
sub
add
mov
mov
outs
add
jbe
bnd
jge
inc
push
or
adc
add
aaa
dec
jg
sar
stc
add
mov
ja
cmps
ins
ins
adc
pop
pop
(bad)
jecxz
mov
ror
and
adc
shr
mov
inc
sub
rcr
and
push
shl
add
push
pop
movs
sub
je
sub
rcr
adc
jo
inc
in
adc
lea
sub
jno
or
sub
popa
cmp
arpl
ja
and
iret
sub
sub
mov
push
mov
stos
lea
cwde
test
(bad)
out
mov
mov
and
cmp
jae
sti
adc
pop
add
inc
push
bound
xchg
dec
sub
jmp
inc
mov
mov
jo
sub
inc
jecxz
stos
ror
jp
cmp
push
inc
sbb
call
jecxz
sub
outs
or
pushf
gs
cwde
outs
popf
cmp
mov
lea
ins
je
push
push
bound
cwde
jno
add
or
sbb
pop
aaa
loope
fild
xchg
or
cmp
mov
adc
rcl
sbb
rcl
cdq
sbb
adc
jmp
push
mov
rcl
cmps
aad
sub
pop
icebp
inc
rcl
or
loope
push
pop
sub
jb
add
dec
ret
or
xor
dec
adc
test
push
push
ret
fdivr
xor
adc
mov
or
mov
push
adc
fsub
and
ror
adc
mov
outs
xor
je
call
or
call
push
xchg
outs
push
cmp
or
das
ficomp
jmp
xor
xor
sbb
lock
pop
lea
test
push
movs
adc
inc
mov
shld
or
add
xor
sbb
rcl
inc
ins
mov
and
adc
mov
std
popa
(bad)
and
scas
ficom
and
xchg
xchg
mov
out
shl
add
mov
add
aad
ss
and
aaa
jmp
sar
lods
jp
dec
push
aas
ret
jbe
movsx
jmp
mov
cmp
mov
mov
sub
pop
cwde
cmps
jge
jne
(bad)
push
and
fstp
jmp
fisttp
in
inc
inc
or
mov
cmp
arpl
mov
jle
jge
stos
shl
sbb
adc
sbb
ds
jmp
mov
mov
jns
loopne
and
mov
jno
dec
fidiv
jg
xor
pop
dec
cs
pop
outs
popa
push
rcl
sahf
dec
clc
inc
xchg
cli
jp
mov
rcr
mov
xchg
call
pop
ret
pop
call
adc
add
sub
lea
push
jo
add
mov
(bad)
stos
adc
mov
cmc
adc
push
cmps
movs
cmp
add
(bad)
js
dec
push
mov
dec
mov
(bad)
push
int
mov
pop
sbb
xor
je
jp
sti
test
mov
(bad)
mov
add
sar
pop
(bad)
ret
icebp
enter
adc
add
add
jae
push
es
inc
popf
inc
lods
sahf
adc
adc
pop
push
mov
dec
fwait
mov
imul
loopne
call
arpl
mov
pusha
aam
lea
adc
sub
les
xor
and
pop
out
pop
push
cmp
in
fimul
push
dec
call
call
data16
fstp
jmp
fstp
fld
push
loop
fsubr
adc
popf
mov
push
adc
sbb
jb
in
jmp
add
sbb
xchg
add
or
add
hlt
shr
push
shr
mov
stc
test
inc
mov
call
pop
les
dec
call
push
rol
mov
les
fidiv
fstp
pop
fisttp
ffree
fiadd
xor
lods
(bad)
dec
jmp
jne
clc
add
mov
jns
jg
inc
dec
xlat
js
dec
rol
jle
dec
pop
adc
mov
pop
jp
or
nop
shl
test
out
ret
adc
push
in
in
fidivr
mov
ja
push
mov
pop
ja
add
fstp
mov
pusha
or
adc
sbb
sbb
sub
and
mov
xchg
les
inc
loopne
iret
fsub
or
dec
and
adc
pop
pop
add
retf
dec
sbb
xchg
cmps
push
sub
mov
mov
mov
mov
add
mov
jns
movs
cdq
push
scas
das
data16
xchg
int3
add
or
sbb
lea
cmp
ret
xor
sub
loopne
pusha
adc
xor
cmp
add
cmp
push
mov
sub
mov
fimul
add
sub
sbb
xor
std
lea
jecxz
or
sub
push
loopne
sub
in
mov
loope
(bad)
clc
xchg
mov
ss
pop
or
xchg
add
xor
lea
fsubr
pop
push
push
or
adc
or
and
fsubp
lea
push
cs
add
mov
push
cmps
or
jmp
sub
inc
popa
fcomp
lea
rol
dec
or
jne
dec
add
data16
gs
fwait
xchg
mov
push
inc
add
mov
les
cs
add
test
imul
add
mov
lods
in
adc
adc
xor
push
sub
and
pop
movs
sub
test
sub
leave
adc
mov
lods
stos
xor
adc
call
jno
outs
jmp
inc
and
push
and
adc
push
lds
xor
stc
xchg
sbb
pop
xor
xchg
add
add
sbb
retf
(bad)
aam
and
lar
aam
es
sub
adc
rol
inc
sbb
cmp
cmp
stos
test
dec
pop
xchg
scas
add
adc
aam
xlat
mov
xchg
je
adc
adc
test
leave
ror
cmp
mov
jmp
and
int3
test
rol
pop
xor
mov
jne
dec
jbe
inc
xor
or
sub
int3
data16
add
leave
push
push
and
lea
inc
fdiv
jno
sbb
pop
scas
jno
jo
mov
sbb
sahf
dec
add
cmp
push
push
test
and
dec
add
mov
sbb
pop
test
test
push
les
inc
fst
jbe
add
jb
inc
cwde
retf
push
xchg
and
xlat
sbb
ret
jbe
jl
mov
sahf
cmps
push
xor
aas
dec
iret
cmps
inc
pop
inc
xor
adc
mov
add
dec
pop
xchg
lock
mov
ror
push
bound
and
shl
push
sub
jbe
mov
gs
inc
cmps
push
ins
add
adc
iret
push
mov
repnz
stos
idiv
fadd
jmp
adc
jmp
ss
push
js
mov
das
and
add
ins
dec
adc
pop
or
test
sbb
fmul
sbb
shl
or
xor
retf
clc
popa
mov
cmp
or
adc
push
inc
imul
inc
pop
xor
dec
adc
or
push
dec
or
or
pop
mov
nop
ret
or
ret
pop
pop
pop
add
mov
sub
mov
pop
push
js
adc
cs
pop
dec
mov
and
mov
mov
lahf
inc
enter
cmp
pop
mov
sbb
push
loope
nop
inc
dec
fwait
xor
mov
add
aas
je
(bad)
nop
icebp
adc
pop
jecxz
test
and
inc
mov
or
jmp
adc
add
jle
sub
cmps
cli
and
sub
xchg
sar
gs
mov
inc
add
sub
mov
xchg
or
dec
jecxz
es
adc
dec
cld
ja
inc
pop
and
inc
js
mov
cli
push
jmp
sub
add
je
js
sub
mov
aam
fisubr
push
xchg
jmp
pop
je
sub
mov
inc
add
add
add
out
push
test
in
and
dec
adc
adc
pop
mov
sti
adc
test
int3
add
or
pop
cmp
dec
adc
adc
cld
rcl
stos
pop
int3
pop
movs
xor
add
mov
sbb
out
add
mov
push
xor
cmp
lock
pop
mov
in
loopne
push
pop
xchg
sbb
pop
push
jmp
and
test
jl
out
mov
movs
int
sbb
dec
frstor
lods
movs
(bad)
xchg
sub
adc
and
movs
ret
xchg
and
or
or
dec
out
pop
push
cli
sar
mov
inc
dec
test
ror
jmp
pusha
lds
movs
jbe
sub
ds
jl
cmp
push
pop
push
mov
or
je
dec
sub
mov
pop
and
shl
cmp
gs
xchg
fist
push
fwait
pop
sub
and
popa
sub
call
xor
das
push
adc
cmp
jne
push
pop
xchg
(bad)
enter
clc
and
push
loopne
push
xor
add
aaa
lods
(bad)
xlat
inc
and
jmp
mov
vcvtps2dq
inc
or
push
add
je
hlt
daa
add
sbb
clc
inc
push
inc
retf
ret
sub
or
inc
xlat
fld
ss
(bad)
push
sub
jns
and
add
or
pop
sub
mov
adc
nop
outs
je
cmp
dec
mov
pop
mov
fcom
mov
sbb
and
mov
mov
fisttp
test
dec
inc
mov
fsub
cld
mov
loopne
sti
sahf
add
pop
pop
xchg
push
jno
xchg
and
fs
jge
and
repz
nop
call
dec
leave
scas
ss
push
(bad)
imul
cmp
dec
and
(bad)
movs
test
jl
inc
les
pushf
cmp
and
xor
and
(bad)
pop
mov
add
into
dec
adc
pop
mov
int3
add
adc
lds
mov
sbb
add
rol
and
push
ret
adc
out
(bad)
imul
and
push
jmp
mov
mov
mov
loope
ror
(bad)
add
daa
mov
enter
sub
push
addr16
lods
rcr
je
in
push
push
aam
je
pop
add
ins
pop
shl
xchg
push
mov
add
pop
mov
imul
call
std
data16
xor
inc
and
(bad)
and
add
push
push
js
sbb
adc
adc
imul
jne
test
rcl
add
ds
and
adc
stc
arpl
imul
cmp
fwait
les
fsubrp
ror
mov
sub
(bad)
dec
adc
mov
mov
push
jge
cmp
or
inc
ss
xchg
mov
retf
loop
cmp
xor
daa
test
lods
and
jbe
sbb
leave
out
rcl
or
ss
retf
addr16
lods
add
mov
push
or
rol
xor
push
dec
test
jg
adc
arpl
jl
add
mov
jne
adc
sbb
mov
icebp
cmp
push
pop
inc
add
dec
pusha
sar
mov
fmul
shl
fadd
and
lea
jecxz
mov
inc
bound
scas
adc
mov
mov
in
cld
mov
jne
xchg
arpl
jnp
adc
cmp
mov
mov
call
es
shl
inc
adc
ror
jb
(bad)
inc
scas
push
xor
add
ret
dec
and
test
add
fwait
push
addr16
dec
and
ss
movs
push
call
(bad)
(bad)
(bad)
jle
rol
pop
add
adc
or
(bad)
test
mov
push
je
jb
mov
inc
dec
sub
ret
adc
std
mov
dec
adc
psrad
mov
(bad)
jg
push
pop
mov
push
add
push
pop
shl
sbb
inc
lods
movs
pop
out
adc
mov
shl
cmps
dec
mov
push
mov
push
popf
loope
push
loopne
pop
mov
pop
mov
nop
push
aad
icebp
jo
out
sub
push
in
popf
inc
or
outs
push
aaa
cmp
sbb
clc
dec
fxch
fwait
mov
add
or
call
dec
pop
or
and
add
shl
mov
test
inc
cdq
mov
lock
and
movs
dec
or
nop
push
sbb
mov
dec
ret
in
jmp
fs
dec
mov
mov
out
cld
pop
aam
icebp
aas
loopne
cmp
jl
js
add
add
sub
je
sahf
setg
icebp
push
lods
inc
pop
sbb
adc
imul
ss
push
pop
add
mov
iret
add
daa
add
sbb
repz
push
cmps
pop
push
dec
add
imul
add
pop
push
and
add
xchg
add
sbb
xchg
pop
push
pop
cmp
cmps
bnd
or
or
enter
dec
or
cmp
sub
or
xor
or
loop
mov
or
call
add
addr16
push
push
ja
inc
push
inc
nop
push
rcr
jae
adc
pusha
adc
sub
adc
inc
or
push
inc
adc
adc
add
and
mov
add
pop
call
cmp
enter
push
push
push
push
mov
pop
xor
cmp
movs
sbb
call
sbb
call
cmp
sbb
adc
sbb
and
je
pop
sbb
xor
cmp
and
push
push
inc
push
pop
xchg
clc
add
add
fsubr
push
inc
pop
jae
sub
cmp
xchg
fsub
(bad)
jge
add
inc
sub
sub
in
jno
repnz
mov
movs
cmp
ds
sbb
repz
cmp
mov
out
fwait
out
ss
out
and
add
call
imul
dec
cwde
jmp
inc
jmp
mov
or
sbb
dec
push
jns
out
in
in
mov
cdq
mov
enter
sahf
out
out
and
and
jge
sbb
sbb
lock
addr16
xor
icebp
add
push
pslld
(bad)
nop
out
out
std
repz
std
cmp
hlt
ror
pusha
hlt
mov
in
fwait
mov
repnz
div
inc
enter
idiv
cmp
xor
std
clc
clc
clc
cdq
pop
enter
stc
inc
stc
lock
cmp
cld
cli
cli
iret
in
jb
sti
sbb
stos
cld
dec
fmulp
dec
cld
cld
je
cld
push
(bad)
out
adc
std
xor
cmp
adc
test
ret
inc
(bad)
rol
dec
sbb
ins
and
ficomp
retf
xchg
cmps
and
jecxz
repnz
std
sti
in
in
mov
fdiv
or
xchg
stos
inc
mov
xchg
inc
xchg
sti
out
out
inc
push
fsub
cdq
outs
call
(bad)
dec
sti
sub
imul
jmp
jne
rol
cdq
(bad)
in
repnz
add
sbb
pop
sbb
add
movs
out
out
cdq
push
mov
adc
lock
cli
jb
pusha
leave
push
cli
sbb
nop
cmps
repz
sar
push
stc
les
scas
dec
push
cmp
div
neg
jno
sbb
fwait
xor
add
stc
out
clc
imul
clc
sti
sti
aaa
jb
push
sti
cdq
mov
push
nop
cld
or
jno
mov
and
jo
or
mov
push
popa
mov
cs
(bad)
mul
pop
dec
pop
and
shl
scas
test
out
push
fsub
out
(bad)
out
and
mov
not
sti
imul
xchg
shl
dec
push
jno
pop
mov
xchg
xchg
mov
loop
rcr
jno
les
and
and
and
neg
(bad)
repnz
les
cmc
pop
mov
inc
repnz
cmc
jae
dec
push
cmp
pop
dec
cmc
div
jmp
xor
and
in
mov
clc
xor
push
jecxz
stc
popa
cmp
mov
mov
loop
xchg
hlt
pop
pop
repnz
hlt
push
hlt
mov
sbb
sbb
data16
mov
hlt
idiv
jo
mov
sti
lahf
pusha
dec
ret
xchg
adc
xor
cdq
mov
push
and
jne
sub
mov
test
movs
test
mov
inc
repz
inc
mov
inc
push
sbb
(bad)
jmp
mov
mov
xchg
repnz
mov
sbb
sbb
in
jmp
jb
cmc
and
add
and
mov
arpl
test
mov
and
je
jo
icebp
sub
shl
icebp
test
rcl
cmp
xchg
sbb
(bad)
cmc
add
cmps
cs
jecxz
ffree
lock
and
fcomp
stc
stc
cmc
jne
pop
daa
xchg
lock
lock
adc
xchg
lock
jl
mov
das
cmp
ret
jne
or
mov
adc
sub
out
jb
mov
inc
jb
mov
push
add
and
enter
stos
add
and
dec
add
add
sub
lods
loopne
dec
adc
or
dec
add
jmp
(bad)
sbb
dec
add
cmp
sahf
pusha
pop
add
and
fld
add
sub
xor
dec
push
cmp
int
xor
cmp
and
out
xor
or
int
fnstenv
jl
popf
add
loope
in
mov
fnstcw
cs
pop
push
cmp
sahf
out
sub
lock
pusha
inc
pusha
lahf
push
and
sub
mov
sahf
sub
xor
fmul
push
cmp
std
push
sbb
rcl
ret
cli
add
neg
mov
cwde
ror
add
mov
inc
cmp
xchg
std
not
or
or
add
stos
mov
dec
es
retf
pop
ret
or
imul
pop
ret
pop
stc
sub
and
push
dec
mov
rcl
add
mov
cmp
stos
(bad)
fsub
out
(bad)
xchg
fcomp
imul
retf
retf
retf
popf
enter
shr
test
pop
inc
add
rol
xor
call
(bad)
dec
cld
adc
cmp
pop
add
rol
mov
in
sbb
out
mov
adc
lea
mov
test
dec
mov
add
pop
dec
adc
cmps
pop
push
inc
inc
test
hlt
push
jo
push
or
gs
jge
fadd
sbb
xchg
loopne
push
jo
fadd
mov
mov
sub
mov
(bad)
mov
add
jmp
clc
scas
and
adc
pop
mov
or
lds
mov
sbb
or
js
add
push
pop
pushf
mov
hlt
popa
and
mov
sbb
lock
adc
cmp
sub
fadd
ret
push
sbb
dec
fnstenv
test
mov
xor
fs
aas
inc
ret
(bad)
rcl
mov
ret
outs
or
push
mov
add
xor
je
or
sub
sbb
mov
shl
fisttp
ins
jmp
push
push
arpl
mov
repnz
ret
push
in
or
retf
mov
inc
mov
add
loope
push
cmp
dec
jo
cld
pop
and
jmp
sbb
jns
call
movs
fisttp
jp
(bad)
pop
or
popa
or
cld
pop
movs
shl
mov
add
mov
bts
jmp
jl
cmp
mov
xor
shl
mov
and
add
push
and
mov
stc
mul
cmps
cmp
mov
neg
xchg
cmp
inc
xor
fcomip
mov
outs
xor
push
test
pop
ss
mov
aas
jne
clc
push
mov
cmp
or
aaa
fnclex
pop
rep
dec
(bad)
ds
clc
pop
mov
inc
sbb
adc
push
cld
(bad)
mov
jnp
cmp
adc
and
xlat
push
pop
std
mov
add
pop
jl
imul
(bad)
mov
pop
mov
dec
pop
cmp
stos
in
push
test
push
add
add
add
inc
test
das
(bad)
daa
call
or
fsub
inc
mov
mov
jae
rol
std
cwde
push
loop
idiv
add
fisub
in
and
add
inc
inc
dec
in
or
(bad)
and
repz
push
add
add
arpl
dec
shr
sbb
or
jp
imul
je
dec
fs
lods
pop
js
in
or
call
jmp
xchg
and
pop
cmp
(bad)
out
ins
mov
cmpps
and
inc
jle
push
dec
dec
inc
repnz
pop
daa
iret
adc
cmp
pop
stos
(bad)
xchg
inc
(bad)
fptan
and
dec
jmp
pop
lahf
sbb
or
inc
push
rcr
and
jge
emms
outs
setbe
imul
mov
ins
nop
adc
cmp
imul
mov
push
cs
and
popf
sbb
add
xor
ss
or
adc
xor
xor
or
xchg
inc
adc
cmps
or
xor
jne
mov
retf
rcr
push
push
sbb
jmp
arpl
push
push
adc
pop
jge
push
jmp
push
sbb
pusha
cmp
dec
pop
les
adc
out
and
ror
cmp
inc
inc
inc
int
outs
mov
dec
or
add
arpl
aad
xor
or
mov
sbb
xchg
pop
mov
ficom
fimul
movs
pop
inc
xchg
call
jo
add
ret
les
inc
sub
mov
add
adc
dec
cmc
add
pop
sub
cmps
sbb
arpl
mul
push
sbb
adc
and
dec
popa
add
in
pop
xchg
pop
cmp
std
pminsw
ret
adc
popf
adc
dec
push
ja
out
lods
iret
cmps
add
push
add
sbb
add
or
pop
xor
nop
or
inc
cdq
dec
dec
dec
and
sbb
mov
add
or
mov
adc
adc
mov
leave
fisubr
sar
cld
pop
push
or
pop
mov
or
inc
add
or
inc
movs
jb
push
lahf
dec
retf
in
push
ds
jae
repnz
or
sbb
popa
orps
jb
push
jbe
mov
sbb
add
inc
mov
ror
je
sar
xor
ror
jo
pop
mov
imul
mov
or
and
fldcw
dec
popa
push
test
xchg
js
nop
cdq
ss
inc
sbb
cli
rcr
push
pop
mov
fs
nop
out
push
repnz
pop
push
add
stos
or
or
inc
cld
popa
inc
pop
dec
add
push
sbb
std
outs
adc
std
inc
add
add
cmp
shl
adc
mov
ja
dec
sbb
sub
das
cld
imul
xchg
cwde
ins
shl
dec
(bad)
(bad)
push
dec
cmp
jl
jg
out
test
inc
xchg
jbe
mov
fmul
and
std
xchg
inc
mov
(bad)
jmp
data16
adc
xor
inc
inc
adc
add
fs
jmp
inc
jle
sbb
ja
jg
dec
loopne
push
adc
ins
xor
pop
cmp
shr
shl
shl
(bad)
fcomp
lock
sbb
shr
fimul
inc
inc
cmp
jne
cmp
pop
pop
sub
or
cmp
test
loop
jmp
aas
popa
push
movs
rcr
gs
push
cmp
cmp
adc
cmp
xchg
adc
cmp
(bad)
jmp
sub
xor
pop
div
in
mov
movs
jae
mov
nop
mov
call
leave
and
add
mov
popf
xchg
dec
push
ret
sub
scas
aaa
mov
jo
and
(bad)
push
adc
dec
push
(bad)
js
push
xor
inc
loope
or
and
jns
aas
fwait
jp
rol
loopne
(bad)
adc
and
push
arpl
push
sbb
loopne
in
rcl
add
pop
rcr
or
jbe
out
popa
rcl
mov
add
push
mov
add
sbb
aam
mov
add
mov
xor
bnd
(bad)
movs
call
popf
mov
js
aaa
(bad)
in
xchg
inc
mov
call
xor
gs
adc
int3
mov
add
dec
loop
mov
sub
push
sbb
adc
es
int
ins
mov
push
mov
daa
lock
in
inc
add
add
jl
dec
or
in
add
push
cwde
jmp
sbb
rcr
cld
ror
jno
retf
repz
cli
or
or
cwde
in
pop
sub
retf
shr
cli
and
xchg
xor
and
mov
call
dec
loope
imul
adc
or
sub
sahf
js
(bad)
cmps
sub
xchg
outs
mov
mov
pop
lods
aam
push
test
mov
sub
test
add
fadd
sub
dec
add
sbb
adc
sub
push
inc
mov
xor
push
out
sbb
ss
jp
lods
fstp
loop
test
xchg
pop
xchg
ss
sub
cmps
fmul
lahf
sbb
sbb
adc
sub
and
pop
js
add
mov
sub
mov
cmp
shr
mov
xlat
jae
and
mov
add
mul
cmp
dec
add
lea
and
or
xchg
mov
jge
pop
or
retf
cmp
mov
sbb
mov
xor
push
mov
push
cs
sub
pop
jmp
push
fmul
out
movs
pop
pop
dec
jl
out
push
rcl
es
mov
sub
movs
lock
mov
(bad)
mov
or
sbb
inc
xor
pop
inc
xor
push
(bad)
adc
lods
push
daa
jno
inc
pop
not
dec
ret
fisttp
xor
mov
ss
cwde
push
pop
mov
daa
dec
add
xchg
xor
mov
inc
or
cs
cs
push
sbb
imul
pop
div
cmp
mov
mov
retf
mov
push
mov
mov
sbb
xor
pop
mov
mov
sbb
pop
push
cmp
inc
cli
or
(bad)
(bad)
or
jmp
pop
sub
adc
add
push
push
push
sbb
gs
pop
adc
addr16
sbb
fwait
mov
das
sub
cdq
das
or
dec
push
push
push
enter
push
mov
mov
sbb
sub
mov
test
cmp
jb
pop
jl
jg
cmp
or
or
cmp
xor
mov
cs
inc
sub
xchg
xor
jmp
cld
xor
sbb
add
mov
jl
clc
inc
popa
jecxz
jbe
pushf
cdq
sub
ror
cmp
xor
xor
and
imul
adc
sub
mov
xor
sub
sbb
in
mov
push
pop
imul
pusha
dec
sub
inc
push
cmp
add
daa
jb
inc
inc
(bad)
cld
xor
ret
adc
es
int3
push
mov
outs
xchg
jmp
sub
ficom
add
push
fstp
pop
mov
jge
add
add
into
sar
aaa
push
test
adc
add
clc
sub
in
fcom
fisub
data16
mov
or
or
call
mov
sub
test
jl
jg
jmp
sub
pop
jl
in
add
add
stc
stc
fdiv
dec
jg
jl
out
lea
jae
cdq
dec
dec
push
push
ret
add
sbb
data16
dec
jae
mov
add
ss
xchg
mov
sub
pop
into
inc
(bad)
es
and
sbb
movs
xor
cli
stc
pop
xor
icebp
cmps
jno
sahf
mov
adc
dec
je
ins
(bad)
imul
sub
icebp
test
je
jle
(bad)
add
dec
adc
es
jge
or
mov
and
cmp
sub
jmp
add
mov
or
je
inc
mov
cdq
mov
lds
mov
cmps
stos
in
fs
das
sbb
lock
add
lds
or
shl
or
adc
nop
inc
or
fprem
mov
push
push
pop
sub
sbb
inc
dec
cmp
xor
or
fcomp
hlt
fucomp
lods
push
push
and
adc
push
nop
retf
sub
add
sbb
dec
mov
push
(bad)
in
fcmovne
data16
mov
dec
adc
pop
push
sub
aam
add
inc
add
(bad)
push
sti
push
test
push
call
and
sub
xchg
sub
lock
pop
pop
dec
jg
jmp
add
inc
cdq
test
adc
cmp
(bad)
mov
out
mov
pushf
jg
jge
retf
sub
out
add
push
clc
jmp
and
out
iret
and
or
inc
xchg
or
lahf
push
sbb
or
lods
or
and
fadd
jo
scas
das
push
mov
mov
mov
js
add
add
pop
jnp
cmps
mov
and
ret
bound
lock
cmp
fstp
xchg
mov
cmp
mov
imul
mov
imul
pop
mov
push
stos
cmp
jb
retf
jmp
popa
arpl
cmp
xor
mov
cmp
je
push
stc
inc
or
ja
and
push
push
dec
sub
add
loopne
cmp
dec
clc
push
push
adc
aaa
gs
jnp
cmp
xchg
pop
mov
scas
ror
outs
push
sbb
or
repz
sub
pusha
jp
xchg
push
pusha
xor
or
fimul
adc
lods
adc
(bad)
adc
out
es
and
cmp
sub
daa
in
(bad)
clc
cmp
push
pop
fnstsw
retf
push
inc
clc
arpl
aam
sbb
fdiv
sub
aas
(bad)
in
push
or
pop
ins
mov
cmp
in
dec
inc
les
inc
ror
pop
or
mov
xor
repnz
push
or
pop
pushf
ins
movs
or
mov
shr
push
inc
mov
add
push
movs
in
popa
fmul
rcr
push
pop
and
pusha
xor
push
call
push
cmp
(bad)
mov
sbb
or
sub
mov
jmp
push
and
lea
nop
cvtdq2ps
nop
or
add
(bad)
sar
imul
or
scas
adc
ins
mov
or
dec
add
xchg
push
push
push
mov
pop
nop
dec
push
xchg
mov
sahf
out
pop
push
dec
push
inc
cmp
sub
jmp
and
mov
mov
call
out
in
lock
add
jns
hlt
clc
clc
cld
push
jp
inc
inc
nop
or
(bad)
add
fstp
jmp
push
jl
pushf
cld
add
nop
inc
pop
sti
popa
xor
and
pop
jno
fcomp
lea
jl
cld
or
mov
(bad)
cld
out
pop
add
fst
pop
mov
daa
stc
fisubr
xchg
sub
pop
nop
push
adc
cmp
xor
jnp
fiadd
jl
add
xchg
push
jbe
out
add
cmps
and
push
add
nop
dec
dec
addr16
add
jno
add
jmp
push
mov
mov
cmp
aam
in
cmp
repz
ss
sbb
adc
cmp
repz
adc
inc
repnz
or
add
js
neg
or
push
sbb
cmp
xor
popa
(bad)
push
add
and
daa
nop
and
lods
ja
jno
push
shl
sub
cmc
add
inc
cmp
and
inc
pusha
fldz
jmp
and
add
add
add
pusha
in
fst
sub
fidiv
xor
cmp
adc
inc
pop
xchg
dec
repnz
cdq
pop
push
scas
add
xor
rcl
mov
hlt
ret
and
pusha
out
clc
sti
cmps
add
add
and
les
scas
xchg
sub
cs
adc
inc
adc
xchg
test
mov
sbb
push
sub
or
mov
and
push
inc
sub
mov
pop
cmps
adc
xor
fisubr
(bad)
pop
das
or
adc
push
sti
popf
adc
adc
jno
push
pop
push
test
mov
push
jne
jp
add
fadd
push
sub
fild
or
(bad)
ja
pop
jbe
lea
ins
sbb
mov
mov
adc
pop
call
xchg
push
sahf
add
shl
lods
cmp
push
clc
jbe
add
dec
dec
mov
sbb
test
pop
leave
inc
dec
xchg
call
stos
ficom
loopne
cmp
jmp
shl
or
test
mov
cmp
push
loop
fmul
pusha
ja
sub
jbe
add
sar
mov
jg
(bad)
mov
adc
js
iret
ss
int3
mov
xor
jb
jmp
dec
mov
inc
gs
jne
cmp
add
fcmovb
fs
and
add
pop
lock
movs
dec
aaa
(bad)
popa
push
push
or
pop
clc
push
pop
push
inc
adc
mov
pop
sbb
mov
and
mov
jle
mov
pop
xchg
clc
add
ret
sub
lahf
and
dec
mov
popa
or
adc
mov
adc
add
push
(bad)
call
jmp
mov
mov
inc
push
popa
ja
cld
sub
mov
or
dec
add
and
adc
mov
xchg
loopne
and
jo
jnp
pop
adc
push
xchg
int
and
jns
les
test
(bad)
sbb
mov
push
and
jb
pop
sbb
in
loopne
xchg
mov
mov
lods
adc
sub
lods
xor
xor
hlt
lods
ja
push
xor
mov
in
xor
in
adc
xchg
js
cld
mov
mov
jp
lock
pushf
jnp
lea
inc
dec
scas
push
pop
sub
mov
lock
jl
push
push
adc
and
cdq
adc
imul
loopne
adc
test
and
push
add
in
push
jp
mov
sbb
adc
(bad)
sub
and
test
mov
sar
jne
sub
dec
add
ja
sbb
mov
dec
je
fucomp
jno
sahf
shl
shl
in
lds
pop
sbb
pop
mov
scas
and
xchg
add
test
ret
shl
ror
push
xchg
fmulp
sub
add
and
scas
cmp
je
scas
push
inc
inc
loopne
pop
jmp
fdiv
add
mov
(bad)
mov
ret
div
retf
and
mov
xor
loope
test
jnp
sbb
or
add
fisttp
dec
xor
push
test
cld
cmp
xchg
jecxz
cmp
dec
jb
(bad)
cmp
push
ins
and
fadd
aam
xchg
pop
xchg
ja
push
cmp
std
push
in
xor
scas
add
sub
and
or
cmp
call
jae
mov
inc
sbb
sub
jb
fmul
loope
shl
add
xchg
xor
out
mov
inc
and
jne
push
pop
mov
stc
add
rcl
add
mov
sbb
pop
sbb
adc
aaa
neg
dec
call
inc
mov
enter
sbb
xor
jbe
cdq
nop
sbb
jns
pop
pop
push
or
cmp
retf
push
mov
call
or
xor
pop
or
sbb
xchg
push
jne
cdq
mov
adc
inc
mov
es
xor
add
mov
ror
xchg
pop
fmul
aaa
dec
mov
add
cmp
add
mov
cs
sbb
xor
jl
ins
nop
cmp
pop
shl
or
sub
push
ficom
or
mov
sub
dec
loopne
and
mov
fwait
loope
mov
cmp
(bad)
(bad)
jne
mov
mov
in
or
mov
or
mov
or
popa
lds
mov
enter
xor
cmp
test
or
jns
sub
add
push
push
add
movd
(bad)
xchg
not
or
mov
inc
addr16
gs
add
or
push
push
jbe
imul
xor
xchg
pop
test
pop
call
adc
rcl
and
cmp
fwait
mov
inc
inc
add
adc
cwde
lea
push
or
mov
or
je
push
mov
mov
xchg
inc
mov
das
cmp
lahf
mov
mov
imul
and
sbb
loope
sub
inc
(bad)
sub
push
inc
jmp
cli
popf
test
mov
sub
dec
push
cmp
cmp
dec
push
jo
jns
test
mov
pop
scas
dec
daa
ror
adc
xchg
or
mov
scas
dec
or
test
rcr
adc
imul
ret
ror
rcr
pop
push
adc
iret
jle
mov
inc
(bad)
cmp
and
jmp
sbb
out
aam
add
ins
or
sub
sbb
and
jne
arpl
cmps
mov
inc
inc
cmps
add
loopne
or
hlt
sbb
dec
js
sbb
sbb
or
xchg
sbb
pop
mov
pop
leave
imul
nop
outs
push
xor
je
fsub
test
inc
cmc
icebp
sar
fwait
inc
outs
sbb
fimul
mov
mov
mov
scas
test
test
mov
les
xchg
or
pushf
cs
fiadd
sti
daa
adc
sub
mov
xchg
ins
stos
ss
aaa
cmc
shr
mov
fild
cmp
rcl
dec
cmp
jb
push
push
loop
pusha
sbb
data16
jb
fmulp
test
fwait
jne
sub
jge
inc
mov
or
pop
mov
(bad)
ja
les
fnstenv
push
outs
hlt
mov
adc
jmp
es
pop
sub
jg
test
jae
cs
mov
or
push
fidiv
cmps
jmp
inc
jae
nop
clc
les
cmp
xchg
xor
adc
mov
imul
imul
in
rcl
(bad)
movs
(bad)
addr16
and
mov
es
pop
mov
test
or
pop
inc
inc
call
or
jl
adc
stos
(bad)
je
cmp
aaa
jbe
push
fs
jmp
or
pusha
or
cld
add
fild
aaa
dec
mov
mov
xor
or
sub
pop
inc
bnd
cmp
jae
dec
lea
test
jae
jmp
mov
dec
js
add
xchg
ret
sub
mov
mov
gs
xor
mov
pop
and
jg
sar
test
dec
sbb
fadd
sub
fst
test
je
or
add
pop
test
test
xor
add
xor
add
jo
jle
neg
mov
lods
dec
push
xor
and
not
inc
jb
sbb
push
mov
push
imul
xchg
xchg
push
xor
xchg
xor
add
int
or
push
push
pop
add
fld
dec
imul
test
mov
and
push
fidiv
pop
xchg
mov
stos
icebp
pop
aam
jae
mov
in
add
pop
cmp
and
sbb
ja
add
clc
(bad)
aas
jge
(bad)
loopne
(bad)
pop
sbb
dec
inc
ins
cwde
add
ret
xor
xor
xchg
inc
out
cmp
sbb
jge
outs
mov
clc
or
push
cmp
mov
jmp
enter
daa
jno
mov
add
pushf
adc
fs
jbe
ins
dec
pop
mov
call
pop
xor
pop
sar
mov
pop
movs
loope
adc
repnz
pop
sub
cmp
inc
inc
inc
ds
inc
fisubr
inc
jns
adc
popa
fs
retf
cmp
xlat
rcl
sti
add
jo
aad
sub
pusha
lock
movs
shr
cmp
push
adc
icebp
shl
hlt
ins
pushf
push
xor
push
pop
xchg
push
daa
fbstp
jl
inc
push
jmp
jl
xor
(bad)
pop
je
sbb
jl
lds
jno
push
cdq
ins
mov
outs
mov
mov
in
pop
je
add
pop
jne
add
or
pop
ins
inc
adc
imul
ss
mov
ret
(bad)
pop
pop
(bad)
call
lods
call
push
call
out
(bad)
in
mov
push
aaa
adc
out
dec
inc
popf
cmp
pop
stc
pop
(bad)
movsx
adc
call
(bad)
push
push
pushf
xchg
adc
mov
inc
and
xchg
add
cwde
add
adc
sbb
dec
mov
dec
xchg
mov
or
lock
inc
mov
pop
xchg
cmp
push
(bad)
aas
or
movbe
push
adc
out
inc
test
fs
adc
adc
jnp
out
or
out
call
or
push
clc
cwde
rcl
mov
xlat
add
addr16
dec
jmp
ja
xchg
sar
inc
xor
jg
ret
imul
dec
push
pop
sub
sahf
dec
out
fcom
mov
dec
xor
mov
js
mov
and
add
push
adc
popa
mov
aam
fmul
and
std
mov
inc
jg
ret
push
or
je
gs
(bad)
mov
mov
mov
rol
and
mov
and
add
cli
xchg
mov
inc
fs
or
adc
add
fidivr
dec
stos
mov
popa
xchg
xor
cmp
mov
add
mov
adc
push
call
and
fdivr
mov
mov
push
inc
sbb
ret
or
inc
imul
sbb
dec
js
mov
mov
jbe
mov
or
out
mov
sbb
or
xchg
dec
sbb
ins
push
movs
jnp
mov
push
out
call
in
adc
push
aam
mov
and
add
retf
pusha
jle
adc
test
(bad)
cmp
cmp
je
mov
jl
mov
mov
jne
int3
xor
jno
add
ror
mov
int
and
xor
rol
pop
add
inc
fdivr
frstor
sahf
xor
lods
mov
jb
mov
pop
jns
js
xor
retf
mov
movs
adc
and
mov
sbb
iret
add
scas
mov
ror
shl
pop
bound
jne
jl
push
(bad)
dec
or
jae
nop
psubusb
dec
jmp
or
push
dec
sbb
arpl
outs
push
pop
sub
leave
ret
or
xchg
push
imul
jae
mov
mov
add
push
inc
inc
add
dec
in
call
js
push
push
mov
add
cmp
dec
cmp
in
or
add
sar
scas
push
xchg
cmp
je
push
adc
(bad)
push
fstp
jb
movs
stos
jle
call
les
jo
push
or
retf
aam
sub
fcmovbe
scas
or
sbb
push
jmp
cmp
test
and
sbb
and
inc
inc
xchg
sbb
mov
add
adc
or
sbb
sbb
jge
(bad)
adc
fcomp
jmp
push
dec
cmp
xor
cmp
sar
jmp
ja
or
sbb
jmp
aas
les
test
and
dec
jbe
int3
or
or
cmps
in
test
push
jmp
lahf
and
pop
fwait
adc
and
push
adc
es
jo
cmp
mov
xor
(bad)
adc
push
add
mov
test
jle
add
inc
inc
add
cmp
rcr
or
adc
jg
pop
dec
sar
inc
sbb
cmp
add
inc
pop
rcl
mov
push
leave
and
mov
sbb
ds
add
inc
add
je
pop
xchg
mov
adc
mov
retf
jns
dec
add
movhps
adc
add
inc
fbld
lods
loop
push
and
adc
popa
cs
or
dec
inc
sbb
push
pop
inc
or
jmp
push
xor
jmp
btc
push
(bad)
cmp
adc
adc
(bad)
cmps
fdivr
dec
or
cmp
push
cmp
push
add
(bad)
adc
jge
cwde
sub
or
aas
jge
push
add
or
or
aad
bound
xchg
dec
sub
sbb
and
and
ins
iret
dec
pop
nop
es
or
pop
jne
cmp
je
xchg
ret
inc
adc
and
in
xor
movs
daa
dec
jp
rcl
ret
int
hlt
jmp
inc
cmp
cmp
mov
int3
xchg
cs
inc
mov
jl
daa
inc
add
sub
adc
dec
les
jg
into
jl
cmp
jb
and
(bad)
rcr
sub
cwde
adc
xchg
xor
or
sub
mov
sub
ret
sub
cmp
(bad)
ja
cmp
add
xor
gs
imul
clc
dec
add
jmp
xor
pop
or
test
dec
fcomp
rol
xor
push
and
adc
push
loopne
loopne
xchg
push
adc
mov
jne
mov
adc
fsub
cmp
mov
pop
aad
aad
pusha
mov
in
or
loopne
inc
mov
retf
dec
nop
mov
xor
sbb
sbb
xor
push
hlt
cmp
sub
push
idiv
ins
into
push
pop
sar
ins
push
jno
sbb
movs
bnd
or
jns
fcomp
sub
das
lea
js
lahf
inc
push
loopne
sahf
and
iret
scas
adc
movsx
sbb
ds
mov
push
loopne
test
sahf
add
jecxz
jle
jmp
or
test
in
leave
dec
sub
ja
out
lods
xor
adc
ins
ins
sbb
xor
xchg
mov
push
pop
or
ret
(bad)
xor
(bad)
xchg
xor
hlt
outs
mov
mov
sub
hlt
test
dec
dec
dec
add
ins
adc
and
dec
lock
inc
xor
xchg
ror
push
adc
add
pop
inc
pop
or
cs
pop
icebp
mov
sbb
movs
sub
sar
mov
aas
sbb
pop
test
pop
push
(bad)
cmp
aaa
xor
and
fld
sar
add
jmp
push
add
xor
sbb
jns
dec
popf
inc
mov
js
mov
or
adc
jb
not
ss
mov
arpl
imul
cmp
mov
or
test
push
sbb
sbb
sub
push
into
movs
sbb
or
sub
mov
nop
test
push
jb
mov
mov
add
inc
cmps
sbb
call
xchg
sti
je
je
outs
mov
cmp
adc
rol
cmc
sbb
loopne
pop
leave
or
push
ja
(bad)
mov
(bad)
mov
jmp
push
das
push
mov
push
dec
push
sbb
bound
cdq
sub
scas
jmp
push
and
test
adc
fsubr
dec
je
pop
add
(bad)
mov
aam
outs
push
xor
inc
add
add
retf
or
imul
or
add
xor
sbb
enter
sbb
and
xor
or
stos
test
jp
cmp
clc
nop
adc
mov
xor
in
loope
mov
push
das
mov
das
or
pop
sub
lock
pop
push
rcr
fcomp
ret
daa
in
cmps
mov
xor
ror
adc
or
loop
jle
adc
cli
std
mov
mov
in
push
lahf
xor
sub
std
add
lock
clc
push
push
push
loopne
(bad)
and
fsub
imul
or
loop
inc
movs
mov
stc
shl
or
rcl
dec
sub
lock
or
jl
dec
push
mov
sbb
loopne
aad
xchg
aad
rol
clc
mov
sub
jo
jmp
and
jmp
push
imul
or
xchg
mov
iret
sbb
sbb
mov
data16
add
cli
add
add
mov
add
mov
rcl
sahf
pop
adc
je
adc
dec
cli
pop
add
sbb
lods
mov
in
sahf
add
stos
jno
pop
add
ins
loop
test
xchg
inc
inc
xchg
and
xchg
test
mov
imul
mov
ret
or
iret
add
push
sbb
std
push
in
pop
pop
inc
das
add
mov
or
or
push
int3
adc
dec
sbb
inc
sbb
jne
scas
mov
or
inc
xchg
aas
pop
stos
push
lock
and
ins
inc
pop
fist
stos
adc
jl
movs
sbb
jmp
popa
and
sbb
sbb
mov
xchg
inc
int3
rol
cmp
sahf
fldenv
cld
inc
fst
retf
jnp
or
and
cmp
xchg
xchg
sub
or
sub
fldcw
cmp
cmp
inc
pusha
inc
test
lea
and
ret
mov
call
or
mov
lock
cmp
aad
xor
or
cmp
inc
cs
adc
sub
and
xor
cld
xor
jmp
pop
adc
or
shl
fsubr
pop
pop
ins
or
xlat
enter
mov
loope
retf
movs
(bad)
aaa
xor
aam
retf
dec
mov
inc
inc
inc
inc
or
dec
jne
xor
jne
cmp
cmp
sub
or
(bad)
or
and
push
pop
cmp
vpmullw
mov
sbb
adc
je
or
add
inc
and
je
jmp
adc
mov
daa
or
dec
mov
stos
cmp
jmp
xchg
lea
mov
mov
dec
(bad)
pop
or
and
lahf
daa
push
outs
popa
jno
push
fs
xchg
shl
sub
mov
mov
push
mov
sbb
gs
add
imul
adc
pop
push
hlt
dec
jb
das
call
add
hlt
mov
sbb
xor
xchg
ss
inc
movs
inc
mov
rol
push
xchg
cmc
pop
add
(bad)
and
jg
dec
je
inc
cmp
jb
in
push
sbb
std
adc
push
pop
dec
aaa
dec
adc
push
and
adc
mov
and
jne
mov
leave
loop
mov
es
aad
xchg
mul
inc
loope
xor
cmp
dec
mov
adc
xor
cdq
jg
push
mov
push
jb
add
inc
ds
pop
and
jl
dec
cs
mov
jbe
jmp
push
push
repz
push
xor
mov
xchg
hlt
fadd
out
in
push
and
inc
jne
xchg
mov
in
mov
or
mov
jno
and
jne
or
dec
clc
(bad)
(bad)
or
sar
sbb
mov
pop
lds
jns
in
xor
js
dec
inc
sub
adc
push
or
icebp
iret
xor
xlat
sbb
pop
push
add
dec
or
pop
popf
cmp
mov
and
xor
sbb
pusha
xchg
lea
dec
xchg
xchg
jge
shl
sub
jl
jg
call
into
and
pop
fimul
je
cdq
push
cmp
(bad)
sub
movs
arpl
cmp
adc
mov
mov
push
les
or
add
cs
or
sbb
cmps
pusha
or
adc
mov
and
ins
sub
and
cmp
jno
or
mov
or
(bad)
dec
or
push
jp
stos
push
pop
push
adc
add
jge
neg
mov
outs
sub
xor
cvttps2pi
jg
test
ret
aaa
adc
add
cmp
pop
and
cld
aaa
fist
pop
and
fld
fst
fistp
div
mov
xchg
call
(bad)
fsubrp
test
jns
fstp
icebp
adc
cmps
adc
adc
cdq
ins
or
fcomp
loopne
(bad)
sub
fstp
outs
pop
mov
pop
push
inc
sub
in
cld
or
inc
pushw
add
inc
adc
dec
loop
or
jmp
inc
ret
pop
and
push
xchg
call
xor
inc
fdiv
dec
add
and
mov
retf
xchg
push
jmp
or
pop
inc
je
mov
ins
gs
xor
ror
and
or
int3
and
out
xchg
pop
adc
pop
dec
inc
inc
cmp
jb
dec
xchg
add
test
mov
push
add
jl
loopne
adc
mov
shl
int3
add
and
or
mov
retf
cli
or
into
push
or
lods
popa
and
mul
adc
add
pop
xor
fidivr
mov
push
push
push
sar
popa
cmp
sar
jns
cs
cs
js
mov
sbb
sahf
dec
push
sbb
cs
in
idiv
push
fcomp
jg
icebp
loope
push
shr
inc
push
idiv
into
je
push
daa
shr
rcr
shr
rcr
or
jne
sbb
xor
sbb
enter
sbb
xor
cmp
ins
cmp
fst
cwde
mov
loopne
cmps
rcr
pop
pop
pop
jno
pusha
jmp
xor
push
mov
and
loope
test
int
xor
and
pop
adc
in
and
or
sub
sar
push
mov
sbb
add
(bad)
add
sub
mov
inc
pop
add
enter
sbb
xchg
sbb
cmp
or
lahf
loop
xchg
jno
add
sbb
or
bound
and
xchg
sub
inc
xchg
bound
and
xchg
xor
sbb
sub
inc
mov
enter
cmps
push
mov
cmp
mov
call
int3
lock
(bad)
lea
adc
mov
cmp
mov
cld
sub
adc
repnz
rol
or
pushf
loopne
or
cmc
add
jecxz
mov
ret
sub
sbb
add
mov
cmp
je
adc
out
test
in
mov
mov
(bad)
lods
sar
pop
imul
mov
inc
xchg
je
(bad)
sti
xchg
or
inc
adc
pop
xor
pushf
into
inc
inc
js
arpl
pop
jne
mov
inc
mov
adc
inc
sbb
and
repnz
test
sub
mov
call
imul
fld
adc
sub
jae
repz
add
hlt
out
lea
jbe
mov
loopne
cmp
xor
ror
or
into
jne
push
adc
adc
rcr
scas
ret
or
cmc
jmp
idiv
ins
push
mov
ins
sbb
cmp
push
adc
push
or
mov
pop
add
mov
jl
mov
pop
push
mov
sar
add
pop
xlat
add
cmp
arpl
adc
xor
adc
and
retf
or
add
push
shr
mov
shl
sub
pop
push
push
xor
sub
and
loopne
movq
rcr
cmp
mov
and
push
pop
push
jnp
icebp
push
pop
pop
sbb
not
xor
rol
jne
fs
pop
and
test
push
mov
and
movs
mov
sti
mov
clc
outs
sbb
test
add
inc
cmp
pop
shl
mov
aad
add
sub
sbb
xor
fnstcw
call
or
adc
xchg
mov
ror
sub
daa
push
cmp
and
adc
mov
cmc
imul
jmp
lock
scas
sub
xchg
sub
mov
push
popa
push
mov
daa
sbb
add
fcom
sbb
bound
sti
inc
fcom
std
fldcw
sar
test
add
jmp
or
inc
inc
jb
add
popa
out
dec
xor
imul
or
inc
call
(bad)
or
push
xchg
cli
jnp
cld
and
mov
xor
ret
mov
test
add
fistp
adc
add
push
or
ins
cmps
pop
iret
adc
lds
lods
popa
mov
push
push
or
add
push
in
(bad)
rcl
retf
jecxz
dec
xor
add
pop
bound
je
add
not
cli
push
retf
add
stos
jnp
adc
xor
sar
pop
mov
inc
rcl
push
inc
mov
sub
inc
pop
push
in
jo
sub
sbb
jmp
loop
sbb
pop
xchg
jecxz
add
xor
mov
mov
or
and
push
fcmovne
adc
jg
cwde
mov
pop
xchg
lods
pop
imul
pusha
cwde
adc
xchg
xlat
sbb
adc
fimul
lods
mov
add
or
sahf
dec
or
call
popf
or
or
loopne
jae
jb
mov
push
sbb
movsx
outs
and
and
je
jmp
ins
sbb
jg
and
add
je
cmp
je
cmp
adc
add
mov
sbb
jmp
push
mov
imul
lods
cmp
das
bound
or
or
sti
je
dec
je
sbb
adc
test
cli
pop
sub
mov
das
neg
push
pushf
not
les
sbb
adc
adc
popa
pusha
xor
or
cld
and
or
add
inc
adc
es
rol
lock
xchg
sub
icebp
aam
and
xlat
das
jmp
loopne
jno
push
mov
ret
call
or
and
add
add
add
adc
test
daa
lods
stc
or
push
test
adc
aas
and
push
sub
stc
(bad)
je
sub
add
pop
push
mov
or
xor
push
inc
enter
sbb
cmp
mov
int3
and
inc
ss
add
or
pusha
cmp
pop
or
popa
bound
jmp
sub
aad
jne
ret
mov
ins
retf
(bad)
out
dec
or
push
inc
jae
add
sub
sbb
sbb
call
rol
(bad)
(bad)
(bad)
addr16
movs
imul
xchg
mov
push
call
loopne
fidiv
popf
fmul
int3
xchg
push
jno
test
retf
mov
int
lock
mov
dec
sub
xor
movs
je
and
or
adc
adc
push
jecxz
into
cs
or
stos
push
jg
or
leave
popf
or
cmp
jae
les
or
and
ret
inc
lea
(bad)
inc
cs
shl
cld
mov
ret
sub
push
jae
pop
and
fcmovbe
dec
or
push
push
mov
rcr
enter
movs
cmps
mov
adc
xor
loope
sbb
imul
inc
fist
add
and
pop
inc
shr
fwait
adc
push
sub
mov
clc
cmp
pop
inc
loopne
(bad)
je
add
lock
jnp
inc
mov
(bad)
and
or
loop
dec
dec
sub
retf
js
hlt
mov
inc
pop
push
jmp
push
es
add
lea
shr
cs
dec
mov
sub
or
jmp
sar
int3
lsl
sbb
or
pop
or
xor
shl
popf
pop
dec
pop
dec
inc
js
add
inc
adc
ja
and
and
or
invd
sub
cmp
dec
sbb
push
call
ins
inc
mov
or
mov
std
mov
push
xchg
push
push
inc
sbb
pop
clc
in
hlt
jb
or
xor
test
subps
pop
lods
xor
and
xchg
shl
sbb
jg
fs
scas
aaa
dec
mov
lods
nop
mov
in
push
out
mov
push
xor
call
or
cmps
ja
push
push
dec
popa
mov
mov
pop
ret
inc
inc
cmp
cmp
sub
inc
fnsave
sahf
paddq
and
inc
pop
test
repnz
inc
mov
ror
std
ja
push
mov
and
push
test
rcl
pop
popa
jbe
(bad)
xor
fs
pushf
and
pop
and
dec
lea
jne
dec
inc
adc
bound
out
loopne
outs
pop
pop
pop
push
push
and
add
and
sbb
rcr
push
jp
test
push
mov
add
mov
and
lods
lds
out
push
pop
xor
and
and
daa
jp
mov
ret
add
mov
je
pop
fcmovne
int
and
fidiv
pusha
or
(bad)
xchg
ret
push
clc
out
neg
js
cmp
pop
push
sbb
cmp
jge
mov
inc
test
push
and
cmp
sbb
sar
in
in
sub
jle
cmp
std
pop
inc
sbb
sbb
pop
and
cmp
xchg
sub
cmp
cmps
jb
nop
pop
inc
stos
adc
pushf
pop
sub
pop
leave
push
sbb
ret
cmp
xor
cmp
add
inc
jmp
add
aad
inc
sbb
ret
enter
push
dec
ror
ret
movs
scas
cld
fild
imul
adc
adc
clc
shl
je
inc
test
in
cmps
cmps
popf
out
inc
push
call
call
sub
je
jmp
outs
push
mov
pop
loope
and
add
pusha
inc
cmc
sub
jmp
or
sub
mov
syscall
mov
adc
dec
loopne
sub
cmp
loop
add
stc
dec
cwde
cwde
or
sub
dec
imul
imul
shl
mov
xchg
xor
inc
push
push
pop
pop
(bad)
adc
inc
jp
mov
and
jmp
cmp
adc
mov
lahf
adc
ds
dec
adc
ret
out
mov
jl
in
dec
dec
jmp
aas
sbb
ud0
ins
jp
add
es
je
inc
pop
gs
cmp
jne
in
shl
or
lea
cmp
das
or
ret
pop
shl
cld
shr
jmp
dec
pop
push
pop
js
push
sub
dec
in
iret
fdiv
or
sbb
not
push
xor
xchg
fiadd
sbb
ds
inc
and
or
cmp
jle
add
add
fcom
cld
mov
pushf
push
push
loopne
push
(bad)
mov
mov
hlt
pop
or
push
sub
cmp
mov
lea
sbb
mov
cmp
or
cmps
jae
js
stc
jbe
or
lea
add
add
(bad)
xor
icebp
sbb
sub
int
mov
mov
push
xchg
outs
outs
int
pop
loope
or
sub
adc
fnstenv
cwde
icebp
pop
mov
push
in
push
cld
lods
pop
jo
or
push
in
push
push
pop
cdq
xor
int3
inc
rol
jne
jo
mov
popa
out
and
dec
or
cmp
test
jl
adc
pop
hlt
jp
push
out
test
pop
inc
mov
enter
push
movs
inc
jb
xor
ins
fwait
sub
or
outs
adc
outs
or
into
add
jg
mov
jbe
shl
pop
add
lock
stc
in
push
(bad)
jl
imul
pop
fwait
xor
push
xchg
lea
nop
and
lock
pusha
and
and
or
inc
daa
adc
(bad)
cmp
inc
or
mov
cmp
adc
mov
cmps
adc
mov
je
mov
ror
or
or
cmp
push
retf
dec
mov
js
test
rol
add
or
mov
push
hlt
inc
sbb
cli
mov
xchg
(bad)
repz
inc
xor
add
jmp
add
inc
xchg
out
push
push
pop
xor
rol
sub
cmc
push
sub
shl
xor
ds
sub
inc
mov
inc
sub
inc
add
or
jp
dec
pusha
dec
and
xchg
enter
addr16
mov
inc
adc
adc
add
mov
cmp
cmp
cmp
add
mov
dec
cmps
cli
or
mov
push
mov
or
int3
cmp
or
mov
adc
enter
cmp
lea
sub
daa
sub
push
scas
and
add
aaa
loopne
in
in
lods
jbe
cmp
je
add
cmc
enter
cld
cmp
sub
jp
jl
mov
stc
sbb
sti
and
ret
inc
or
adc
inc
fistp
fs
xchg
add
cmp
test
lock
(bad)
aas
int3
iret
xchg
sbb
test
retf
popf
jl
stos
leave
inc
mov
sti
popa
or
mov
push
adc
sbb
mov
mov
inc
sub
cld
(bad)
inc
add
inc
or
inc
retf
add
addr16
push
jbe
dec
jo
mov
stos
out
stos
adc
ins
in
xlat
out
jge
mov
ins
cmp
push
arpl
adc
push
mov
pop
adc
mov
enter
xor
std
inc
std
dec
and
lds
mov
push
mov
lahf
mov
ret
dec
jns
and
push
(bad)
mul
mov
addr16
cmp
xor
enter
or
mov
sub
push
movs
sub
in
push
in
inc
inc
data16
inc
push
dec
pop
cmp
push
xor
into
push
push
push
jns
dec
mov
jno
dec
jnp
sbb
ja
ins
and
stc
pop
cmp
inc
adc
fld
fistp
mov
cmp
push
les
sub
mov
pop
mov
stos
rcl
mov
mov
pusha
xchg
cmp
cmp
shl
sub
sbb
add
out
and
shl
xor
and
call
outs
pusha
test
sub
lock
scas
stc
mov
add
and
sar
adc
pop
out
pusha
shl
pop
mov
mov
test
int3
aam
inc
in
sbb
mov
pop
push
jmp
das
mov
pop
lahf
call
xor
ret
scas
xchg
push
enter
(bad)
mov
loopne
or
xor
or
sbb
xchg
add
add
adc
lahf
pusha
sub
mov
push
mov
pop
push
adc
xchg
xchg
push
push
mov
push
push
or
test
mul
(bad)
pusha
int
adc
xor
fs
vmread
xor
and
div
pop
dec
mov
test
adc
sub
lock
div
(bad)
add
icebp
(bad)
xchg
ror
enter
xchg
mov
icebp
inc
lods
cmps
mov
or
add
mov
add
jmp
sbb
loopne
lock
sub
cmp
cmp
pop
enter
inc
push
dec
jmp
test
aam
mov
rol
test
pusha
adc
push
or
ret
or
test
test
je
mov
test
xor
ret
in
sbb
in
sub
inc
lods
mov
into
cmp
loop
inc
loopne
ret
cli
aam
inc
sub
mov
mov
mov
sbb
push
imul
cmps
jl
or
popa
int3
repz
jg
mov
imul
imul
loopne
inc
ins
add
lea
das
cmp
test
and
inc
test
add
nop
xor
mov
inc
adc
cmps
mov
into
mov
fiadd
add
add
repz
xchg
aaa
and
and
out
adc
mov
jmp
sahf
mov
dec
cmp
mov
sbb
(bad)
cmp
push
push
jne
inc
sbb
adc
jbe
push
mov
test
inc
jle
push
(bad)
jmp
sbb
jge
jp
or
sbb
aas
dec
pop
and
jnp
imul
jl
push
mov
inc
les
shr
movs
mov
add
push
jl
call
cmps
xor
mov
sub
or
loopne
adc
push
and
mov
sbb
and
imul
xor
add
sbb
adc
sub
or
or
jns
mov
(bad)
dec
out
sbb
mov
sbb
idiv
jmp
sbb
mov
pop
jl
bound
enter
push
xor
xor
ss
xchg
dec
into
popa
test
add
je
push
xchg
call
test
push
inc
xchg
push
jae
int
test
inc
dec
or
sbb
adc
lock
mov
mov
or
nop
fsubr
jb
cmps
pop
mov
mov
aaa
dec
into
outs
retf
loope
fdiv
dec
add
mov
int3
nop
mov
add
mov
push
lods
ficom
repnz
mov
mov
mov
add
cmp
dec
or
sbb
mov
fadd
jae
in
je
jo
sub
jle
push
lahf
add
ins
jg
or
data16
add
fnstenv
(bad)
cmp
aam
or
jnp
nop
dec
adc
jl
test
pop
jo
rol
and
add
rcl
cmp
leave
inc
cmp
inc
push
pop
mov
and
jge
push
fwait
call
ret
ret
cmp
bound
mov
pop
push
and
mov
add
xchg
rol
push
or
dec
(bad)
mov
mov
ins
jl
xchg
cmp
mov
push
add
(bad)
xor
pop
fst
add
inc
inc
jae
mov
inc
repnz
imul
and
push
cmp
cmc
add
push
repz
push
nop
mov
ja
add
xchg
dec
sbb
je
(bad)
clc
adc
push
cmp
adc
and
sub
jmp
mov
cmp
popa
xchg
je
(bad)
cs
xchg
sbb
jmp
or
mov
outs
sub
cs
lods
inc
test
js
sahf
dec
jecxz
syscall
ins
in
push
daa
xchg
mov
fmul
and
sbb
mov
pop
add
cld
dec
pop
adc
adc
xchg
into
push
pop
mov
xchg
inc
mov
adc
jno
push
das
jmp
mov
arpl
push
pop
add
or
xchg
nop
push
adc
cmps
(bad)
add
sbb
add
dec
push
mov
xchg
push
dec
xor
sti
inc
dec
fst
cmp
or
mov
sub
(bad)
or
pop
pop
sub
test
mov
add
cmp
lea
mov
je
pop
sbb
or
add
cmp
mov
or
and
jnp
sub
ja
inc
jb
and
jmp
jmp
pop
push
cmp
jl
add
inc
fdivr
sahf
and
xchg
add
cmps
sti
jmp
lock
jne
clc
push
outs
pusha
xor
or
mov
adc
pushf
add
sysenter
dec
ret
jb
pop
jg
aam
shr
or
sub
in
dec
dec
and
dec
jl
aad
inc
test
mov
icebp
aad
pop
and
pusha
std
daa
push
int
mov
int3
jne
or
pop
rcl
xor
loopne
loope
(bad)
cmc
adc
dec
push
mov
shl
xchg
or
xchg
xlat
jns
jne
fadd
cmc
jle
and
in
rcl
arpl
lods
inc
cmp
mov
inc
loop
xchg
cli
dec
in
mov
sbb
xlat
cmp
xor
inc
mov
sub
inc
rcr
(bad)
aaa
or
js
dec
mov
(bad)
add
dec
xchg
add
add
push
and
push
inc
bound
ret
daa
(bad)
icebp
dec
mov
sar
jp
ss
shr
enter
(bad)
adc
jo
jl
mov
mov
(bad)
imul
aam
call
in
and
jbe
add
ds
mov
sbb
aam
add
dec
jg
jecxz
daa
fist
or
sub
mov
fxch
pop
hlt
dec
jne
aad
cmp
lock
push
rol
pop
xchg
retf
or
sbb
scas
add
dec
jge
sub
std
jb
lahf
jg
push
or
adc
mov
out
mov
xchg
bound
sub
and
shl
adc
dec
or
lock
push
inc
scas
pop
or
es
push
push
adc
clc
push
mov
add
xchg
sub
inc
cmps
jns
cmp
mov
and
les
addr16
test
add
in
sbb
mov
and
aas
xor
or
and
xchg
test
movups
add
imul
test
push
jmp
inc
(bad)
loopne
adc
sbb
jecxz
dec
xor
cmp
jbe
mov
mov
mov
ins
adc
test
shr
jmp
das
xor
lock
fnsave
in
lea
cmp
or
hlt
pop
add
outs
shr
pop
mov
outs
pop
pop
sbb
jecxz
jl
fidivr
add
xchg
inc
pop
adc
lahf
dec
xor
and
or
cdq
push
adc
cmp
dec
add
test
jmp
jge
call
shr
adc
fstp
pop
jmp
call
mov
sar
inc
pop
pop
cmp
cmp
push
sbb
nop
jno
mov
rol
add
inc
adc
mov
ins
sub
dec
add
xchg
cmp
sub
add
test
mov
lds
adc
adc
int3
add
les
add
mov
cmp
and
pop
ret
or
sub
add
data16
jl
pop
and
call
(bad)
rcl
add
xchg
fisubr
cmp
mov
push
add
add
ja
mov
dec
mov
jmp
cdq
pop
mov
enter
mov
fdivrp
sti
and
movsx
mov
rcl
and
or
jns
imul
clc
push
lock
add
sbb
ins
fadd
aam
sahf
cmp
and
jns
mov
pusha
shl
nop
push
les
call
daa
stos
pop
shl
mov
or
push
ins
jns
out
je
test
cmps
pop
js
neg
or
push
enter
add
pop
mov
or
lods
les
loopne
xor
shr
sub
scas
int
nop
sbb
jg
adc
and
mov
push
pusha
jo
mov
mov
test
adc
mov
and
sub
ss
call
jg
cmp
add
adc
retf
mov
push
mov
fstp
add
fist
(bad)
outs
adc
hlt
rep
ss
neg
inc
sahf
push
call
lock
push
pusha
cmp
jp
push
pushf
out
sub
mov
mov
jb
or
shl
(bad)
push
pop
call
or
cmp
add
ins
adc
adc
sbb
aaa
push
pushf
pop
mov
xor
pop
sub
je
push
popf
add
mov
cmp
xchg
add
and
and
ret
add
sbb
sbb
std
or
or
mov
mov
mov
sub
add
loopne
cmp
ss
cmc
into
rol
mov
adc
pop
add
xor
push
add
jbe
or
or
and
sar
and
cmp
icebp
xchg
push
add
ja
push
and
daa
and
mov
inc
or
(bad)
ins
sar
xchg
jl
bound
jl
push
pop
mov
ror
das
push
jne
push
aas
out
push
push
dec
add
pop
or
jbe
jge
mov
and
xlat
in
hlt
cmps
inc
outs
adc
or
mov
dec
les
push
add
push
pop
add
dec
jmp
clc
call
sbb
add
popa
dec
pop
pop
add
ss
imul
mov
jmp
ss
xchg
lds
and
push
lea
cdq
push
add
test
inc
or
jp
dec
movs
cmps
test
leave
adc
add
inc
pusha
adc
jmp
push
mov
jp
nop
dec
push
(bad)
test
loopne
sub
cld
shr
mov
imul
pusha
lea
imul
rcr
inc
and
xor
lahf
cmps
mov
mov
or
(bad)
mov
cli
add
cmp
jbe
push
pop
cs
mov
fs
mov
lock
jae
mov
shr
(bad)
jecxz
inc
push
not
and
dec
jne
add
sbb
arpl
xor
mov
push
pop
mov
mov
adc
add
pop
and
test
mov
sub
and
clc
sub
clc
and
mov
test
sar
xor
pop
add
fidiv
fimul
mov
and
cmp
je
mov
jno
mov
sti
pop
mov
shr
not
and
ins
rcr
jne
sub
jmp
lea
das
sahf
sub
shl
(bad)
cwde
xchg
mov
add
or
cmps
sbb
aam
mov
out
cmovae
pop
lock
mov
out
imul
pop
dec
or
adc
neg
ss
mov
mov
inc
mov
mov
mov
and
addr16
push
or
pop
mov
add
adc
dec
(bad)
push
mov
mov
add
dec
dec
js
cmc
test
adc
clc
popa
ds
stos
mov
dec
test
shl
fld
or
jp
(bad)
sti
div
or
sbb
fidivr
and
or
icebp
mov
adc
inc
mov
pop
adc
stos
gs
fidiv
das
pop
lds
inc
adc
int
add
mov
test
dec
dec
scas
dec
cmp
call
cmp
or
or
scas
add
mov
mov
jnp
out
and
and
xor
adc
mov
stos
cdq
xor
js
add
imul
stc
neg
adc
inc
ret
loopne
mov
adc
dec
push
pop
lea
xor
jecxz
jp
retf
jle
outs
pop
int
jmp
or
scas
nop
nop
jbe
call
movs
jp
mov
jmp
ret
mov
add
jnp
jno
cwde
add
inc
in
scas
xchg
mov
imul
xchg
std
and
inc
clc
pop
mov
add
sbb
out
jne
fdivr
mov
adc
jns
push
ins
iret
retf
add
sub
push
push
cli
ja
mov
mov
jge
loopne
outs
inc
or
or
or
adc
xor
lock
jmp
mov
sub
sbb
push
push
mov
imul
cmp
lea
inc
fs
loopne
inc
add
sahf
pop
mov
inc
mov
lock
fimul
mov
js
lds
not
and
and
ins
add
int
mov
mov
test
pusha
jb
cld
push
dec
cmp
add
in
daa
mov
and
sbb
mov
test
inc
adc
fld
(bad)
cmp
hlt
sar
mov
stc
int3
push
pop
and
push
enter
inc
stc
dec
add
xor
add
and
shl
jae
test
nop
dec
or
add
jg
jns
cmp
sub
rcl
ins
dec
loopne
fiadd
mov
dec
fstp
jno
dec
js
hlt
stos
cdq
mov
adc
jle
cmps
imul
rcl
adc
call
add
sub
js
movs
jmp
and
and
js
test
sub
adc
stos
cmc
xor
ins
xor
mov
hlt
mov
sub
cmp
(bad)
clc
jl
xor
or
mov
sub
pop
xor
add
mov
cs
inc
mov
movs
(bad)
pop
mul
xor
js
cmp
cmp
or
dec
mov
or
fistp
jo
mov
stos
fidiv
data16
cld
mov
ja
lea
mov
mov
dec
add
push
adc
mov
push
cmp
shl
lods
dec
into
mov
out
cmp
(bad)
(bad)
jo
xor
jns
dec
add
sbb
cld
fadd
and
pop
jnp
ins
(bad)
jmp
dec
sbb
lock
and
push
push
push
push
pop
pop
or
int3
jmp
pusha
sbb
cmp
cmp
imul
dec
or
inc
push
ficom
nop
cmp
and
dec
xlat
sub
adc
sahf
call
push
jne
push
mov
fnstenv
cmps
aas
fnstenv
jmp
jnp
add
cmp
fcmove
xor
aaa
arpl
add
std
adc
mov
sbb
or
rcr
leave
push
pop
and
movs
dec
push
add
cmc
jne
or
mov
in
xchg
mov
jl
gs
mov
and
iret
jne
inc
shl
ret
jno
mov
pusha
jl
es
or
mov
out
repz
test
enter
mov
push
mov
iret
mov
leave
inc
push
pushf
mov
push
and
icebp
sbb
inc
enter
xchg
dec
jmp
xchg
sbb
adc
test
cmp
ret
fistp
push
dec
jne
jbe
rcl
repnz
jmp
jp
dec
xchg
cmp
and
jo
sti
bound
dec
push
and
(bad)
into
xor
dec
jp
push
and
mov
or
jns
inc
mov
or
lea
mov
cmp
jge
and
or
ret
out
or
pop
adc
cld
or
or
or
mov
mov
out
or
nop
sub
add
adc
dec
shr
and
sbb
mov
lea
jno
loope
into
sbb
sbb
das
sbb
pop
add
cwde
adc
int3
and
push
inc
bound
fcos
add
leave
fsub
je
shl
push
xor
and
pop
sbb
jp
or
xor
out
sbb
mov
inc
sbb
sub
inc
cmp
(bad)
and
rcr
cwde
rol
loopne
jp
aam
mov
mov
inc
adc
sub
ins
test
xchg
push
out
std
push
mov
mov
int3
or
shl
jl
jno
add
push
cmp
xchg
push
fild
add
inc
add
and
jne
xchg
imul
nop
pop
into
push
sub
test
jp
xchg
retf
add
add
and
lea
jnp
push
ins
dec
sbb
(bad)
or
add
mov
out
jo
sbb
adc
pop
jo
xor
sbb
hlt
jle
std
sbb
clc
popa
rcl
ss
movs
xor
enter
ja
inc
xor
push
sub
xor
and
fistp
pop
cmps
xor
sbb
popa
fmul
ret
sub
mov
das
inc
jo
jle
dec
sub
lods
pop
sbb
jo
dec
and
icebp
mov
mov
mov
add
sub
sbb
adc
imul
pushf
nop
dec
inc
fcom
js
fist
xchg
or
dec
push
or
sahf
xor
call
fs
sahf
aas
imul
lods
mov
repnz
addr16
(bad)
std
add
adc
mov
adc
cmp
test
ins
les
(bad)
push
hlt
and
push
adc
and
mov
inc
shl
ret
pop
js
or
mov
ret
lea
retf
std
mov
in
faddp
dec
fldenv
stc
dec
jne
pop
pop
lods
xchg
sub
push
mov
nop
aas
cwde
push
fdivr
out
or
push
jb
xchg
aad
pop
or
in
cs
add
rcl
cmps
adc
and
lahf
push
mov
cmp
add
test
(bad)
cdq
fidiv
pop
fisttp
lea
mov
jne
inc
jae
xchg
or
cs
adc
mov
daa
sub
cmp
inc
jae
cmp
jb
mov
or
add
adc
and
ds
push
bound
sbb
call
sbb
daa
loop
push
pop
ins
xor
xor
ror
dec
dec
push
mov
dec
cmps
lods
adc
pop
or
mov
out
shl
dec
inc
push
push
mov
fldenv
cmp
lahf
test
pop
mov
jg
add
push
add
lock
loopne
pop
ja
push
cmps
xchg
js
mov
sbb
clc
lea
jmp
and
push
pop
fsub
invlpg
mov
cmp
push
js
mov
into
dec
cdq
shr
fisub
(bad)
sar
js
dec
and
out
stos
push
push
jo
sbb
neg
and
in
adc
sbb
lock
div
popf
fs
cmp
dec
(bad)
cmp
mov
adc
ror
int3
test
sub
dec
test
and
dec
test
pusha
push
cmp
dec
cmp
aaa
and
cmps
xlat
sub
push
push
mov
dec
mov
mov
jbe
loop
add
adc
out
xchg
or
mov
mov
les
(bad)
fwait
cmps
dec
jecxz
sub
pop
and
out
das
cmc
adc
retf
dec
jmp
add
sbb
adc
jmp
mov
push
inc
jl
mov
rol
cmp
cmps
cmp
sbb
fwait
add
add
add
daa
cld
dec
or
push
jnp
(bad)
or
mov
xor
scas
cwde
push
push
inc
(bad)
jae
mov
mov
mov
in
pop
call
mov
repz
sar
in
push
jecxz
push
jle
push
mov
xchg
add
fisub
sub
jne
push
jmp
push
in
cmp
or
daa
jb
adc
push
test
fs
mov
pop
mov
cmps
aam
dec
cmp
stos
(bad)
out
adc
test
push
sbb
sub
cmp
int
inc
and
sbb
movs
add
adc
es
into
adc
mov
out
dec
sar
mov
adc
(bad)
shl
sbb
out
aam
fsubr
mov
lea
test
rol
pop
sbb
or
jo
out
(bad)
aas
in
popa
call
mov
rol
leave
push
xchg
add
pop
add
ins
cmovp
jns
fs
cmp
sub
retf
push
jl
in
sub
mov
cld
jne
pusha
inc
fwait
arpl
jge
sahf
mov
push
je
push
mov
or
pop
or
sbb
sub
mov
dec
cmp
mov
in
loopne
inc
inc
and
pop
xchg
sub
dec
and
sub
jb
ja
dec
sbb
lea
mov
add
sub
or
lods
xor
inc
add
loopne
cmp
mov
sbb
push
test
(bad)
es
popa
push
add
jbe
xor
ficom
adc
fnstcw
adc
sar
xor
xchg
sub
repz
and
push
inc
xor
in
jl
sub
ret
jnp
adc
dec
test
iret
xor
jb
and
sbb
add
push
sub
inc
push
daa
ins
dec
loope
sbb
shl
pop
xchg
push
mov
sti
mov
test
cmp
push
scas
push
and
ins
mov
retf
arpl
loope
or
fsub
and
pop
add
cwde
inc
push
push
gs
add
xor
mov
pop
dec
cli
call
stos
and
adc
sbb
push
and
pop
in
lds
call
cmp
cmp
jns
inc
adc
push
jo
out
pop
sbb
stc
dec
cmp
mov
cmc
push
je
jb
mov
stos
cmp
adc
enter
adc
or
dec
sbb
lahf
ret
jmp
adc
cmp
push
dec
add
sbb
mov
inc
pop
sub
imul
cmps
call
(bad)
mov
jg
push
push
dec
and
adc
jmp
mov
gs
cmp
push
sti
push
add
into
or
cmc
push
(bad)
mov
add
nop
xor
and
jne
shl
(bad)
adc
or
inc
inc
data16
in
push
or
pop
mov
push
xor
pop
or
add
push
jle
lock
in
sub
add
(bad)
push
cmp
jg
loop
lock
mov
clc
xor
loopne
stos
test
lock
mov
jo
test
jecxz
rcl
xor
out
in
jne
test
jne
ins
push
loopne
rcr
add
jge
mov
adc
sbb
xor
or
adc
add
mov
push
pop
xor
inc
push
sbb
test
mov
push
imul
add
push
enter
shr
and
les
mov
ret
ds
sbb
jmp
pop
call
loope
pop
es
pop
out
add
mov
or
cmc
rcl
or
loope
cwde
or
scas
nop
mov
add
mov
arpl
js
leave
outs
cmp
push
inc
cdq
jp
rcl
pop
add
test
cs
mov
fisttp
inc
cmps
or
inc
(bad)
push
adc
sti
div
cmp
pusha
sbb
mov
outs
inc
out
into
sbb
clc
dec
cmps
inc
ss
enter
cmp
jmp
inc
jge
cmps
jmp
scas
adc
sar
and
add
add
outs
xchg
add
je
jmp
ds
push
and
add
(bad)
cld
scas
and
into
pop
jmp
mov
(bad)
les
or
dec
jmp
sbb
fmul
xor
test
and
and
dec
add
or
mov
sub
jmp
sub
rol
or
test
sbb
push
ret
inc
daa
sub
int
xor
ds
or
jg
dec
sub
scas
js
loop
ret
clc
pop
inc
arpl
ins
movs
retf
gs
or
lock
call
leave
dec
rcr
push
add
add
fdivr
adc
test
push
push
in
mov
jl
or
pop
mov
sar
xchg
add
mov
or
and
push
mov
mov
jae
dec
pop
or
mov
pop
or
inc
jmp
pusha
les
mov
es
sub
cmp
ja
aad
push
cmp
movlps
sub
push
add
outs
test
and
push
cmp
hlt
or
(bad)
lods
cmp
addr16
dec
in
retf
or
add
ds
push
xor
sbb
dec
jmp
leave
(bad)
ss
and
je
sbb
pushf
jb
in
jne
or
add
retf
xor
xor
jmp
add
mov
ror
jg
jge
neg
popa
sbb
std
add
mov
cs
sbb
or
lods
es
mov
call
mov
push
or
inc
ins
sub
je
aam
jl
mov
cmp
jne
inc
sub
add
scas
pop
rcl
pop
and
add
ss
cmp
ins
inc
jne
retf
or
(bad)
xor
fs
rcl
aad
cmp
push
int
lds
mov
adc
pop
cmp
add
dec
lahf
add
sti
test
test
pop
jl
mov
sub
xchg
push
in
fcomp
sbb
pusha
sub
jo
adc
add
xor
xchg
jns
push
fsub
mov
inc
je
pop
rol
push
add
movs
ret
jne
into
nop
push
cmp
mov
fisttp
iret
mov
clc
sbb
jb
push
mov
push
test
add
push
cmp
jne
xor
cmp
or
(bad)
push
jb
mov
adc
idiv
xor
jne
fimul
inc
inc
in
sub
mov
inc
lock
or
(bad)
cs
shl
fiadd
sub
sbb
out
add
lods
dec
dec
test
inc
cmp
and
add
or
cmps
pop
in
cmp
fucomip
adc
es
mov
pop
mov
loopne
pop
inc
sbb
or
pop
push
cmp
loope
xor
and
mov
mov
or
dec
sub
pop
sub
dec
jo
jecxz
gs
ins
add
outs
mov
mov
adc
sahf
mov
je
or
sub
outs
jne
cwde
lods
adc
mov
jmp
mov
rol
in
add
sbb
ins
adc
imul
ja
mov
lods
or
fisttp
mov
add
add
not
(bad)
pushf
test
call
mov
in
mov
jne
popf
mov
jbe
jle
icebp
jns
fistp
test
jle
mov
push
imul
ins
fdivr
adc
mov
jge
imul
jmp
push
xor
daa
neg
ret
jnp
inc
or
lea
rcl
fimul
and
or
mov
aam
aam
rol
jne
enter
mov
test
mov
sbb
dec
sub
cdq
push
cmp
pop
dec
or
push
push
call
adc
pop
push
ins
cmps
jo
jae
mov
test
out
mov
push
inc
daa
jnp
mov
out
and
mov
sbb
cli
add
(bad)
jecxz
sahf
aad
je
pop
ror
loope
push
repz
test
test
sbb
or
dec
test
cmps
add
cdq
mov
add
sbb
sbb
(bad)
jg
fimul
loopne
outs
(bad)
jae
push
add
(bad)
jno
or
mov
add
xchg
outs
fisttp
jge
sbb
inc
jno
sysexit
mov
or
jne
and
and
pop
imul
clc
test
push
aas
adc
cdq
push
push
pop
jb
mov
loop
call
in
xchg
add
or
mov
mov
aad
jno
call
popa
(bad)
into
cmp
je
fdivrp
rol
out
dec
mov
inc
jmp
dec
cs
inc
inc
add
jne
adc
sub
test
sub
rol
xor
jmp
dec
adc
xchg
out
push
add
rol
mov
dec
test
movlps
xor
data16
jmp
test
sub
or
sbb
sbb
or
push
cs
pop
xchg
jb
ficom
jg
sub
lahf
adc
(bad)
in
add
push
jns
(bad)
pusha
sbb
jbe
or
mov
dec
cmp
lods
movs
data16
bound
cmp
sbb
adc
loopne
sub
cli
js
inc
push
inc
daa
mov
xor
call
xchg
rcl
mov
pop
sbb
xchg
mov
push
dec
pop
dec
or
and
pop
arpl
adc
rcl
sub
cld
push
xor
daa
add
cmp
ds
xchg
aaa
fsubr
inc
cmp
jg
and
pusha
and
inc
and
(bad)
push
idiv
data16
in
gs
and
fwait
add
xor
adc
dec
repnz
mov
sbb
jmp
sub
sub
movs
and
inc
repz
sbb
add
mov
and
stos
jb
dec
int
mov
adc
retf
aaa
or
xchg
adc
pop
call
aam
pop
cli
inc
(bad)
leave
xor
xchg
test
loop
pop
mov
out
add
bnd
push
adc
loope
nop
xchg
push
inc
movs
mov
push
jmp
inc
ins
xor
div
cmp
adc
jo
js
inc
inc
fild
xchg
or
push
nop
fstp
mov
in
sub
(bad)
repz
cmp
leave
in
mov
jnp
push
pop
jnp
(bad)
stos
and
xchg
adc
inc
cs
or
stos
pop
inc
ss
or
rol
dec
out
mov
aas
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
cli
push
add
fldz
call
sub
xchg
jl
push
(bad)
mov
mov
push
lock
outs
or
mov
test
xor
movs
xchg
fcmovne
adc
adc
and
pop
lock
cmp
popa
outs
movs
push
adc
shr
mov
push
push
add
pop
in
fs
pop
dec
out
cmp
fisub
push
or
fadd
fidiv
or
sbb
add
(bad)
mov
jecxz
push
cmp
jle
ficomp
rcr
(bad)
push
sbb
mov
jl
push
xchg
jmp
inc
pop
lahf
test
and
clc
mov
cmps
aas
sub
test
aas
sub
xchg
inc
mov
lea
mov
add
push
in
jb
mov
mov
mov
sbb
add
and
mov
sub
sub
add
cmp
or
add
je
mov
push
inc
out
adc
add
xchg
mov
fwait
xchg
es
(bad)
loope
pop
sbb
ret
adc
inc
xor
or
movs
or
mov
xor
xchg
adc
dec
sub
dec
imul
shl
mov
push
int3
xor
cmp
mov
push
push
dec
test
test
sub
xor
loope
jo
adc
jge
mov
or
sub
lods
outs
loope
push
add
xor
shl
lods
rcl
mov
pop
jmp
cld
cmp
popa
aam
push
sub
in
add
inc
xchg
cmp
or
ja
and
fsubr
mov
arpl
sbb
les
int3
cld
xor
je
rol
or
mov
pop
push
add
call
jmp
mov
sbb
cli
ror
add
sbb
fcom
adc
test
adc
adc
call
retf
mov
nop
rol
and
loopne
ror
rcl
ret
popf
ss
add
repz
sar
add
xchg
xor
or
daa
sbb
add
pop
push
cmp
push
mov
push
hlt
and
add
inc
inc
pop
mov
pop
ror
cmp
shl
and
stos
and
je
mov
xor
mov
mov
dec
xor
call
jne
push
rol
cmp
xor
bndstx
ret
out
sbb
out
jmp
xor
inc
inc
add
adc
add
or
and
add
jg
ja
mov
mov
sub
sub
and
push
push
pop
outs
inc
(bad)
movsx
les
adc
data16
andps
fiadd
pop
push
ins
cld
add
dec
shrd
push
push
adc
adc
(bad)
pop
js
ss
jl
cmps
add
push
clc
mov
lea
jbe
(bad)
cmps
data16
inc
add
in
dec
jmp
sub
mov
push
ins
nop
je
inc
push
xchg
mov
xor
cmp
or
mov
xchg
adc
rcr
jo
inc
out
aaa
dec
mov
shr
xchg
pop
sbb
lds
jg
jb
push
sub
or
inc
adc
neg
cmp
mov
lock
mov
xor
jb
loop
sub
nop
test
add
inc
nop
dec
dec
dec
shl
adc
jg
lods
jb
mov
jbe
ror
dec
xor
jb
or
sbb
push
xchg
adc
adc
mov
(bad)
cwde
test
dec
es
jmp
scas
(bad)
div
or
rol
add
adc
push
call
das
cmp
pop
sub
loop
lea
cmp
mov
rcl
sbb
sub
sar
mov
shl
(bad)
and
fsub
add
adc
pop
xor
mov
rol
ficomp
mov
or
xchg
ins
mov
repz
inc
push
push
retf
mov
pop
enter
pop
push
xchg
jl
and
repz
add
push
and
stc
pop
xor
fcmovnu
push
retf
jbe
xchg
aam
xor
or
cmp
mov
leave
and
enter
push
and
push
jmp
ins
cmp
pop
loopne
in
cld
cld
jl
loope
push
mov
jl
mov
inc
and
lock
js
mov
inc
push
adc
adc
mov
sbb
jns
or
jo
jge
ins
jmp
idiv
gs
or
pop
data16
sub
push
mov
ss
inc
popa
je
inc
je
dec
clc
jno
mov
repz
jmp
js
adc
test
push
inc
xchg
stc
imul
mov
xchg
dec
aas
dec
push
ins
xor
movs
cmc
add
jb
fild
or
jmp
out
sbb
call
stc
push
push
sar
adc
sahf
adc
call
jne
int3
outs
in
lock
ins
push
pop
clc
fstp
or
or
xchg
leave
movs
mov
les
cmp
cmp
mov
cmps
push
icebp
sbb
bound
aas
add
inc
or
sbb
daa
pop
in
hlt
cld
hlt
cmp
add
pop
sub
mov
dec
mov
add
add
lock
ja
call
cwde
inc
adc
inc
pop
cmp
(bad)
jmp
cmp
movs
and
loop
shl
pushf
loopne
sub
add
or
adc
inc
adc
push
mov
cmp
int3
cmp
push
jns
mov
adc
and
jge
jl
pop
jne
dec
add
mov
mov
push
mov
aaa
add
(bad)
mov
cmp
jmp
je
xor
retf
sub
mov
add
cmp
jae
pop
adc
movs
mov
sbb
cdq
pmulhuw
and
pop
mov
add
sub
out
inc
xor
in
pop
rcl
xor
jno
push
jno
sbb
leave
ret
adc
cmp
dec
inc
icebp
test
or
mov
push
ficomp
rcr
icebp
push
test
sbb
push
push
inc
inc
or
inc
mov
int3
mov
je
adc
mov
or
test
gs
inc
or
cs
retf
clc
aam
fadd
fdivr
mov
pusha
adc
dec
jb
mov
mov
push
or
imul
loopne
iret
retf
or
mov
mov
push
sbb
or
sar
add
loop
inc
loopne
ja
mov
jo
mov
xchg
ret
shl
pop
movs
sti
cmc
push
or
je
xor
sti
or
into
in
mov
adc
jo
popa
mov
jmp
xchg
(bad)
popf
pop
or
add
in
add
add
or
adc
push
mov
cld
adc
out
mov
cmp
imul
jb
sbb
arpl
xor
movs
mov
mov
popf
repnz
hlt
out
sbb
hlt
hlt
stc
push
add
idiv
dec
je
or
inc
rol
imul
xlat
cmps
pusha
sub
fsubr
mov
retf
pop
or
xor
pusha
inc
fiadd
jg
dec
xor
fcomp
push
inc
movs
out
mov
or
adc
dec
jae
inc
outs
cmc
jne
ror
xlat
icebp
dec
xchg
xchg
and
jecxz
shl
(bad)
rol
rcl
jb
pop
mov
dec
sahf
add
sbb
jle
mov
pop
push
or
xchg
ficom
hlt
jl
mov
fdivr
sti
mov
in
in
sti
nop
hlt
sti
push
add
test
add
test
das
mov
jge
mov
sub
loopne
icebp
dec
and
in
or
into
adc
imul
mov
mov
xlat
imul
xor
push
pop
add
mov
cmp
adc
loope
sub
xor
pop
call
push
dec
retf
add
or
or
mov
mov
xor
rcr
jl
mov
mov
xor
popf
mov
mov
xor
or
jbe
inc
loope
test
out
sahf
(bad)
jmp
aaa
inc
rol
retf
mov
das
adc
sbb
rol
stos
pop
lock
xchg
sbb
or
jae
pop
jne
sbb
loop
pop
sbb
clc
sti
shl
pop
call
gs
pushaw
sbb
pop
cmp
sbb
les
pop
je
jae
xchg
lds
cwde
into
rol
add
cs
ret
jo
push
inc
add
jne
das
jl
(bad)
xor
push
cmp
hlt
sti
ror
mov
jmp
add
adc
sbb
lock
mov
xchg
sti
inc
cwde
xor
mov
fstp
dec
sub
in
lds
popf
clc
sti
jecxz
stc
and
addr16
sbb
push
jbe
inc
push
sbb
dec
sbb
dec
aad
push
arpl
inc
adc
push
ds
add
rol
cld
out
test
jb
sti
in
js
sbb
push
xor
sbb
push
js
dec
push
sub
retf
ror
ret
in
push
cdq
inc
fbstp
inc
push
xor
inc
inc
pop
fisub
mov
int3
cmp
enter
rol
pushf
clc
sti
clc
sti
hlt
sti
cmp
(bad)
hlt
sti
clc
sti
pop
fsub
nop
inc
mov
inc
add
sbb
pop
leave
imul
call
mov
xchg
sar
push
clc
sti
in
sti
lock
pop
mov
(bad)
lock
lock
ss
not
xchg
push
sahf
jmp
dec
mov
xchg
dec
repz
dec
xor
sti
gs
sti
mul
mov
mov
sub
push
mov
data16
jmp
sub
push
stos
mov
fcom
cdq
pusha
lds
je
fcom
jns
jae
aaa
sar
loopne
push
or
push
ficomp
sti
cmp
inc
(bad)
mov
cmp
popa
cs
clc
sti
dec
sbb
fild
in
das
jne
idiv
nop
aaa
cmp
loop
shl
call
stos
or
nop
popa
mov
movs
loopne
sub
pushf
test
imul
mov
cmps
adc
inc
ds
ins
and
sbb
and
add
dec
call
daa
xchg
inc
sti
ins
mov
mov
in
sub
movs
cmp
sbb
add
pusha
(bad)
pop
pop
sub
cmovs
push
xchg
push
add
iret
out
jmp
dec
xchg
mov
add
dec
test
(bad)
rcl
es
add
xchg
pop
mov
call
sbb
adc
fsub
or
gs
loopne
fisubr
fnstenv
push
xor
pop
pop
mov
mov
sbb
(bad)
jne
inc
jns
lods
leave
add
jl
push
aas
xor
and
xor
or
popa
dec
inc
cmp
mov
sahf
jbe
popf
call
rcr
cmps
hlt
mov
cmp
mov
enter
or
adc
jmp
outs
adc
loopne
or
jns
aaa
cs
(bad)
in
je
pop
pop
add
cmp
mov
jns
inc
ror
push
or
sbb
or
xor
sub
shl
and
call
xor
dec
gs
ja
adc
fistp
int3
dec
xor
add
ret
jp
ds
xchg
fisubr
pop
add
sbb
(bad)
leave
sbb
xchg
arpl
test
mov
push
sbb
cdq
in
(bad)
adc
leave
sbb
ins
enter
and
pushf
faddp
mov
pop
hlt
icebp
les
push
jb
inc
pushf
fistp
ins
jne
imul
adc
lds
out
(bad)
(bad)
pop
mov
in
and
adc
fadd
lea
lods
cmp
mov
xchg
inc
push
sbb
jmp
int3
pusha
add
les
and
mov
dec
jae
ret
test
shl
lea
cs
scas
leave
push
sahf
and
add
sbb
sub
adc
push
xchg
inc
loop
aaa
sbb
or
nop
dec
sub
mov
xchg
inc
dec
test
pop
adc
sub
fmulp
push
jns
dec
call
pop
push
sbb
add
push
cli
(bad)
call
adc
in
frndint
daa
add
mov
mov
adc
stc
xchg
inc
mov
inc
adc
popf
mov
pop
xchg
pushf
push
shr
test
in
out
aad
emms
push
hlt
xchg
popf
push
lods
push
cmps
in
in
lods
inc
mov
rcl
inc
push
call
sub
lods
and
and
ret
push
and
les
xchg
pop
(bad)
shl
(bad)
lds
jb
pop
rcr
inc
les
test
popa
mov
cs
mov
mov
or
cmp
or
bound
dec
cmc
or
pop
ins
lods
mov
sub
cmp
mov
or
push
lods
stc
or
sub
dec
sub
rol
or
cmp
repz
push
jns
or
push
or
mov
mov
lock
pop
push
dec
xor
bound
inc
jle
aam
dec
pop
shl
adc
stos
add
mov
mov
aad
adc
jne
lea
mov
or
xor
add
(bad)
call
lea
mov
loope
test
nop
inc
fdivp
mov
mov
pushf
lea
inc
xor
add
jge
add
mov
or
aas
push
push
mov
neg
enter
dec
(bad)
cli
dec
push
mov
dec
jnp
jmp
push
cmp
push
push
fs
inc
cld
fisttp
loope
mov
int
jbe
xlat
inc
push
or
mov
add
mov
test
push
jo
outs
addr16
test
add
mov
adc
mov
mov
scas
sub
mov
cmp
and
mov
push
rcl
clc
push
pop
xor
and
and
and
lods
mov
cs
push
inc
mov
and
fld
push
clc
inc
jo
mov
xchg
jp
ins
loop
push
cmp
fadd
lahf
or
rol
sbb
push
pop
call
out
repnz
inc
push
mov
push
sbb
sub
nop
pop
ins
std
cmp
rcr
aam
push
adc
(bad)
jne
xor
xchg
cmp
or
pop
mov
push
jmp
inc
ret
in
jne
nop
jmp
sub
mov
mov
cmp
les
and
sub
and
iret
push
ins
jecxz
push
ds
adc
ret
and
mov
pop
cmp
rcl
jl
xor
or
test
fs
inc
cwde
call
iret
pop
aam
test
mov
sbb
inc
rol
mov
imul
jae
call
aam
clc
sub
jno
pushf
sub
xchg
mov
mov
jp
cmp
ror
cmp
adc
push
sar
and
div
push
jnp
add
mov
loopne
cmp
or
call
add
xor
jbe
add
cmps
shr
inc
loop
popa
add
loopne
xor
cwde
sub
xor
lahf
inc
sub
je
push
test
out
adc
mov
inc
adc
inc
inc
inc
dec
in
repz
jp
inc
push
pop
ds
jl
sbb
popf
fdiv
mov
mov
pop
clc
or
mov
inc
dec
jne
inc
outs
jmp
xor
movs
and
pusha
add
sub
push
jnp
test
xor
add
inc
xor
clc
adc
pushw
or
bound
pop
push
sub
or
and
not
ds
inc
sub
sti
ja
sti
ret
stos
xchg
and
pop
pop
cld
mov
stos
mov
jecxz
mov
int3
cmp
sub
xlat
ins
ins
jmp
(bad)
imul
nop
push
or
or
adc
jbe
ins
xor
dec
loopne
or
sub
inc
jmp
(bad)
out
icebp
xor
dec
sbb
mov
pop
push
inc
add
ret
adc
aaa
fisttp
jb
rcl
xchg
jno
daa
mov
sbb
loope
sbb
xchg
jmp
neg
mov
in
and
in
inc
loopne
and
ins
fucomi
cld
movs
and
lahf
pop
add
xchg
pop
and
mov
cmp
ja
mov
xor
jmp
imul
pop
clc
mov
mov
sub
and
clc
mov
add
add
lods
jae
aad
push
sbb
inc
sub
fwait
mov
in
push
and
and
add
cmps
lods
sti
inc
fisttp
repz
cmp
scas
fist
add
sub
xor
jnp
mov
mov
xchg
clc
xchg
ret
add
or
dec
sub
fwait
push
and
shl
jmp
xor
adc
mov
ret
data16
push
pop
and
pop
sbb
cmp
or
xchg
mov
or
enter
sbb
aad
ror
xor
sti
cmp
adc
aaa
stc
mov
mov
mov
cmp
cmp
adc
and
mov
inc
xchg
int3
or
sub
jb
test
and
(bad)
repz
adc
mov
add
inc
imul
and
je
inc
push
push
jmp
loopne
int3
add
and
inc
push
pop
adc
les
in
jge
stos
push
jbe
outs
or
sbb
lea
and
fldcw
and
xchg
add
push
push
sbb
and
jl
sbb
cs
stc
jb
ss
or
inc
add
jb
ins
mov
call
enter
xor
xchg
cdq
imul
into
add
pop
(bad)
ins
push
mov
sub
or
and
call
push
cmp
iret
inc
pop
pop
pop
or
add
lahf
add
cmc
adc
arpl
pushf
mov
or
out
and
test
push
cmp
mov
push
nop
cmc
mov
pop
(bad)
jb
stos
inc
inc
icebp
call
add
mov
mov
mov
cs
jg
fdiv
or
aam
add
mov
or
mov
daa
jne
push
jmp
and
mov
js
and
ja
mov
psrlq
jge
xlat
mov
or
adc
test
cmp
sbb
outs
or
je
mov
mov
scas
xchg
test
jmp
test
scas
je
movs
movs
jmp
lods
lods
ret
or
sub
test
daa
imul
lock
push
in
shr
add
test
scas
and
or
imul
aam
inc
pusha
cs
sbb
sbb
mov
out
scas
sub
adc
sbb
jge
jecxz
and
pop
mov
sbb
iret
ins
call
(bad)
mov
sbb
push
cmps
sub
push
push
dec
jmp
xchg
rol
xchg
or
push
add
xor
loopne
(bad)
sub
adc
cmp
mov
jb
cmc
mov
movs
xchg
popa
mov
test
xor
xor
mov
fdivr
or
mov
sbb
jns
mov
rol
mov
push
outs
mov
inc
mov
mov
push
push
sbb
pop
mov
mov
jle
and
enter
fadd
rcl
push
test
test
pop
inc
popf
es
mov
or
sar
or
ja
mov
xchg
jne
push
push
mov
popa
sub
lea
call
push
mov
call
inc
inc
cmps
mov
dec
mov
mov
imul
add
sub
inc
cwde
push
add
fild
mov
jl
jmp
sbb
pop
sub
push
adc
mov
arpl
xchg
das
rol
inc
sub
add
mov
sbb
aas
adc
mov
and
aad
jb
or
stos
dec
push
cmp
adc
arpl
jno
or
sub
js
sbb
xchg
hlt
outs
pop
push
and
mov
push
pop
retf
fiadd
cmp
push
dec
cld
xor
pop
mov
adc
jle
int3
sub
and
adc
les
xchg
inc
or
mov
mov
jmp
push
pop
shl
add
xor
fimul
add
mov
adc
mov
cmp
push
cmp
cld
aaa
jbe
lea
mov
mov
inc
nop
push
add
ficomp
loopne
mov
fs
adc
ins
icebp
lahf
call
dec
xor
adc
xchg
push
aam
xchg
sbb
xor
sub
pop
push
mov
push
mov
xchg
add
adc
lock
imul
ret
xor
dec
je
push
je
movs
punpcklbw
call
mov
or
lea
add
test
sub
sbb
push
int3
es
xchg
clc
je
cmp
pop
test
jg
(bad)
mov
fsubrp
sbb
loope
mov
sub
popa
lock
pop
push
or
add
push
jle
pop
ret
mov
jo
sbb
and
inc
pop
adc
push
pushf
and
mov
les
adc
shr
ror
pop
movs
loopne
shl
cmp
jb
or
enter
fdivr
imul
and
pop
mov
cmp
jae
aaa
add
mov
loop
or
pop
(bad)
clc
cmp
test
jb
lock
mov
call
stos
cmp
fistp
sbb
sbb
mov
mov
mov
fsub
sbb
cld
xlat
add
xchg
leave
es
ficom
sub
push
mov
pop
adc
jecxz
out
cmps
mov
add
mov
xchg
lock
sti
dec
lock
or
lea
jl
sub
stos
or
out
bnd
push
mov
fcom
inc
jge
pop
adc
inc
mov
jge
cli
retf
mov
adc
cmps
fwait
dec
or
jno
lds
adc
cli
add
sub
sub
cmp
push
add
mov
dec
inc
dec
loope
push
push
shl
jo
cmp
jl
call
push
lods
inc
mov
nop
jp
push
adc
fwait
je
xchg
dec
stos
cs
dec
loop
dec
adc
inc
push
imul
sub
jp
pop
aad
jmp
pop
mov
(bad)
out
sub
dec
xchg
jnp
mov
xchg
adc
inc
jbe
jp
dec
nop
or
cmc
push
dec
call
adc
push
loopne
sub
jg
loope
push
sbb
sub
jg
push
out
les
and
push
and
js
push
in
and
std
enter
jne
scas
outs
push
adc
mov
jmp
mov
rcl
xor
or
cmp
sub
mov
popa
nop
aad
xchg
addr16
dec
xor
add
enter
inc
loopne
es
push
jp
jmp
dec
test
ss
cmp
rol
add
fcom
fsubr
test
push
mov
test
jl
hlt
cmps
xor
pushf
or
jb
scas
mov
aas
mov
js
xchg
sub
adc
cwde
inc
cmp
xor
pop
ret
enter
cmp
or
pop
cmp
cs
shr
adc
add
jmp
sub
mov
aad
and
adc
or
in
xor
xchg
ss
test
imul
ds
dec
adc
push
lods
imul
add
sub
add
mov
add
push
and
or
inc
adc
je
popa
mov
dec
xor
pop
push
(bad)
pop
loope
vmread
xlat
cmp
pop
shl
xlat
data16
jmp
adc
outs
jo
stc
xchg
out
add
push
adc
or
or
inc
inc
cmp
mov
xchg
fsub
dec
das
sub
addr16
in
out
sub
push
aam
test
mov
mov
aaa
movs
mov
rcl
sbb
dec
jg
mov
cmp
xchg
aam
add
adc
out
arpl
mov
jbe
jne
imul
mov
inc
jo
jge
aas
sbb
sub
sub
push
movs
rcr
fsub
sub
xchg
cmp
pop
lods
ret
ss
adc
mov
cwde
dec
sti
leave
adc
xor
fcomp
adc
xor
inc
arpl
add
and
add
cld
inc
dec
(bad)
push
adc
ret
mov
pop
lea
outs
cdq
mov
add
or
push
jmp
push
in
jmp
sbb
or
sub
mov
pop
(bad)
mov
pop
test
push
cmps
je
mov
fimul
inc
or
ret
mov
imul
cwde
or
add
js
mov
js
sub
add
sbb
jl
jne
hlt
stc
pop
adc
adc
mov
dec
push
sbb
popa
invlpg
jmp
adc
cld
shr
jmp
inc
jb
inc
icebp
xchg
sbb
xchg
cmp
jecxz
adc
inc
jge
or
and
leave
sahf
adc
cli
jmp
xchg
(bad)
cmp
jne
push
cwde
jmp
mov
enter
mov
ins
adc
add
mov
add
push
jmp
mov
sti
std
sub
inc
push
adc
lock
cld
stc
add
adc
dec
add
push
xor
adc
setl
xor
xor
fwait
jge
sub
dec
(bad)
sti
jmp
xor
hlt
push
xor
xchg
jmp
pop
push
push
push
push
and
cs
stos
stos
movs
jb
push
add
or
jbe
mov
cmp
and
fcomip
sahf
push
pushf
jmp
cmp
sahf
pop
or
(bad)
or
clc
jge
mov
inc
hlt
or
add
mov
push
push
jnp
inc
js
into
daa
mov
sub
fist
stos
dec
push
(bad)
mov
sti
cmp
jle
jge
cmp
and
sar
push
jle
jge
clc
mov
mov
cmp
jl
jg
push
jle
dec
mov
or
jge
fiadd
jle
pop
sub
ss
mov
cwde
or
rol
movs
xchg
mov
imul
mov
lock
sub
int3
sub
(bad)
and
pop
scas
rol
adc
rol
add
daa
adc
dec
xor
nop
pop
xor
sti
xor
pushf
and
add
nop
es
lods
jb
push
test
or
mov
inc
and
aas
or
mov
gs
jg
jl
inc
shl
jae
loope
mov
sbb
jg
xor
es
xchg
ja
push
push
push
and
push
imul
add
jns
pusha
loopne
inc
dec
pop
or
xor
les
sbb
sbb
(bad)
ror
out
add
mov
mov
(bad)
sbb
ret
rol
and
mov
std
jg
pop
xchg
lods
rcl
mov
inc
ror
div
add
inc
mov
mov
idiv
retf
out
xchg
pop
mov
sti
outs
jmp
and
jns
or
mov
data16
ret
cmp
mov
adc
cdq
xor
add
int3
outs
imul
or
xor
inc
mov
jge
ss
sbb
jl
mov
inc
cmp
add
test
jl
push
or
push
jae
pop
test
sbb
bound
popf
lock
cld
jmp
icebp
dec
in
push
dec
inc
inc
fldcw
mov
call
mov
outs
and
scas
dec
rol
mov
adc
jno
pop
ds
test
sti
or
lods
loopne
lahf
push
inc
dec
sbb
adc
mov
sbb
sbb
xor
sbb
or
jl
adc
dec
jmp
and
or
sbb
xchg
or
or
sub
and
push
or
call
xor
or
gs
xor
mov
shl
mul
inc
or
push
add
and
pop
gs
jae
movzx
jg
pop
in
mov
data16
add
sub
inc
push
mov
in
shl
aam
adc
dec
in
lods
sub
sbb
dec
bound
aam
and
fadd
dec
or
in
cmps
loopne
adc
or
sub
inc
xlat
sbb
int
and
enter
inc
add
adc
pop
jmp
push
pop
add
push
aam
imul
je
mov
or
dec
repz
adc
xchg
jl
dec
inc
xchg
mov
adc
or
mov
bound
and
adc
movq
push
inc
clc
jl
cmp
push
and
sti
stc
jl
fwait
dec
and
push
jg
outs
inc
or
push
jbe
jle
ret
cmp
outs
ja
jo
mov
shr
clc
cmp
aaa
sub
test
xchg
mov
rol
sub
dec
loopne
shr
dec
xchg
pop
push
mov
scas
mov
mov
add
aaa
mov
shl
pusha
mov
scas
xchg
rol
sub
mov
in
mov
rep
push
fisub
xor
push
sar
jno
inc
and
or
push
push
ret
inc
xor
and
dec
inc
add
jmp
js
mov
outs
xor
push
push
or
jge
xchg
push
push
add
daa
jl
fcmovne
nop
rol
aam
iret
movs
in
add
popf
lods
or
adc
xchg
jmp
iret
arpl
test
pop
jne
sub
mov
xchg
dec
test
adc
and
inc
pop
test
dec
ja
and
sbb
mov
jae
test
and
add
out
mov
test
imul
pushf
or
shl
cwde
mov
cmp
jne
push
dec
arpl
(bad)
push
lods
pop
retf
loopne
stos
and
dec
daa
mov
mov
add
jmp
scas
pop
inc
adc
test
xchg
adc
add
fimul
out
jb
ja
ins
push
fld
test
movs
adc
(bad)
jmp
mov
add
call
call
les
lods
cmp
iret
jmp
mov
(bad)
sub
sahf
mov
test
add
adc
test
dec
inc
js
shr
mov
or
adc
mov
inc
push
fcomp
xchg
in
and
movhps
or
cmp
push
ins
sub
sbb
xor
pop
das
ds
pop
lods
outs
cmp
push
jmp
dec
ja
(bad)
int
cs
jae
test
inc
mov
bound
sub
or
pushf
or
jae
scas
dec
xor
outs
sub
mov
mov
xchg
jne
jmp
aas
cmps
add
cdq
je
jmp
in
and
out
in
dec
bnd
fcmove
jmp
in
rol
sub
inc
mov
dec
mov
mov
dec
lods
push
or
bound
and
packsswb
dec
or
jnp
ins
adc
pop
pop
addr16
and
ror
aam
iret
mov
jl
jbe
sub
sti
mov
add
inc
mov
enter
aad
inc
xor
adc
movs
in
out
xchg
clc
mov
jbe
cmp
jl
inc
jnp
popa
daa
std
test
call
pop
test
or
jne
adc
push
sbb
sbb
cmp
adc
or
fidivr
push
and
cwde
jmp
pop
imul
adc
aas
in
mov
push
xchg
adc
sbb
hlt
add
movs
imul
fist
cwde
xor
sbb
retf
pushf
push
add
mov
cdq
cmps
push
sbb
or
and
aam
lock
push
add
xchg
mov
test
add
or
mov
loopne
xor
les
inc
(bad)
int
lods
rol
dec
mov
or
jge
jbe
adc
sbb
ror
jb
mov
sub
lock
es
mov
into
sahf
das
dec
jl
les
cmps
xchg
add
adc
dec
jne
mov
and
shl
rol
or
mov
adc
and
sti
imul
mov
ja
cld
mov
or
scas
push
loopne
dec
mul
(bad)
enter
int3
ds
mov
adc
push
fmul
les
stos
into
dec
mov
jne
inc
xor
gs
or
cmp
cmp
movs
sbb
inc
push
adc
fimul
movs
add
ret
pushf
xchg
movs
add
test
jle
mov
or
and
imul
sub
jecxz
loopne
dec
push
cld
lea
add
mov
outs
dec
mov
popa
fistp
ins
mov
inc
and
ins
mov
or
pop
mov
sbb
movd
add
leave
jle
mov
test
js
mov
aam
gs
icebp
pop
and
mov
add
or
shr
inc
lock
pop
aam
mov
into
or
adc
jmp
lock
inc
mov
mov
shr
shr
shl
push
sti
pop
shr
or
mov
sahf
dec
cmp
test
aam
sar
pop
dec
push
in
push
es
adc
fwait
and
sub
jo
(bad)
shl
(bad)
add
ficomp
enter
add
cdq
loopne
in
fiadd
push
call
je
stos
add
(bad)
mov
shr
nop
and
cmp
mov
nop
popa
imul
dec
and
fs
ror
jmp
mov
push
sub
xchg
mov
jmp
test
imul
cmc
cmps
mov
add
jno
(bad)
ror
xchg
cmp
adc
xor
retf
mov
das
sub
add
imul
out
fwait
jp
mov
and
add
adc
lods
mov
bound
add
adc
xchg
add
add
push
addr16
aad
xor
cmp
sahf
out
sahf
xchg
loopne
xchg
or
cmps
xchg
sahf
cs
sar
xor
mov
lds
cmp
sbb
add
adc
push
pop
adc
pop
xor
jge
sub
pop
lock
dec
sahf
in
or
pop
leave
mov
mov
pop
mov
sub
xor
fwait
cmp
or
sti
add
jb
and
cmps
ss
dec
mov
ret
outs
sub
xchg
sbb
adc
sbb
cmc
(bad)
shl
mov
add
das
frstor
sub
pop
stc
in
mov
lds
inc
enter
(bad)
lods
loopne
sub
jl
xor
sbb
jno
or
popf
jbe
inc
and
test
inc
lods
aam
inc
mov
and
push
xor
clc
cmps
dec
jge
mov
pop
mov
test
mov
pushf
mov
cmp
jns
aad
adc
scas
test
cmp
jg
push
add
or
jmp
jmp
xchg
das
dec
jns
adc
and
adc
dec
jmp
mov
add
(bad)
push
mov
jmp
mov
scas
int
sti
into
dec
xchg
mov
mov
lods
jbe
mov
or
and
mov
cmp
cmp
inc
jle
cmp
push
xor
dec
mov
mov
push
push
mov
scas
or
lods
jmp
movs
jle
inc
cmp
jmp
mov
or
and
push
push
into
shl
pop
cmp
mov
jnp
out
leave
pusha
nop
sbb
pop
fcom
jne
fs
jmp
or
jb
mov
or
dec
and
mov
outs
and
push
das
xchg
daa
dec
pushf
sbb
and
iret
mov
leave
cmp
dec
cwde
inc
xor
and
fiadd
ins
xchg
enter
test
mov
sbb
mov
push
jns
dec
sbb
adc
and
fistp
dec
and
mov
cli
and
add
jg
mov
or
jecxz
sub
mov
push
cwde
pop
mov
xor
dec
cmp
leave
enter
movs
xor
test
mov
repnz
dec
add
sbb
enter
and
das
cwde
mov
pushf
movs
xchg
sub
stc
mov
mov
sbb
enter
cmp
sbb
mov
cli
repz
and
and
nop
nop
and
pop
enter
adc
xor
jns
adc
cli
dec
push
lahf
cmc
iret
out
iret
inc
sub
movs
mov
and
jle
jae
outs
test
test
adc
mov
push
pop
icebp
adc
dec
(bad)
fild
cmp
mov
push
xor
not
cwde
dec
push
and
mov
dec
push
ficomp
rcr
xor
scas
jb
sub
pop
test
(bad)
stc
sub
sub
adc
pop
inc
mov
sbb
ror
mov
rcl
or
out
adc
xor
loope
jl
pop
icebp
push
rol
and
sbb
xchg
pop
mov
mov
nop
add
push
jb
xor
cli
fisub
jecxz
ja
sub
and
sbb
and
fs
out
add
push
jg
dec
sbb
clc
adc
push
add
and
pop
xchg
ins
inc
dec
pop
inc
sbb
imul
repz
pop
cmp
or
adc
and
mov
fisttp
adc
fadd
imul
pop
push
fisttp
shl
mov
addr16
clts
adc
add
lar
inc
scas
or
push
or
je
enter
cmp
mov
ss
adc
mov
rol
fwait
and
add
dec
cmps
cmp
add
and
pop
fmul
and
pop
test
in
dec
and
cmp
pop
sub
rcr
stos
int3
jle
jne
mov
adc
nop
adc
xor
dec
adc
ret
add
mov
dec
push
fdiv
or
pop
ja
or
sti
sti
test
sbb
out
mov
or
mov
xchg
xchg
sub
xor
inc
or
test
inc
dec
out
push
or
hlt
fisub
sbb
rcr
push
lahf
mov
sub
and
add
mov
add
sar
mov
sti
mov
add
rcr
das
mov
shl
aad
add
(bad)
loope
adc
dec
pop
mov
adc
pusha
mov
add
cld
imul
and
test
dec
aad
not
add
sbb
push
inc
mov
xor
mov
jns
cmps
lods
jp
dec
sub
dec
js
jg
test
popf
pop
cmp
cmp
push
inc
add
sbb
mov
shl
mov
mov
or
lods
mov
pop
adc
sub
xor
push
hlt
mov
push
and
xchg
pusha
test
inc
and
cmp
dec
(bad)
ret
pop
das
imul
pop
cmp
or
fsub
adc
inc
add
(bad)
loopne
call
jmp
fimul
xor
inc
lea
in
hlt
push
pop
retf
push
inc
movs
push
dec
popa
xor
dec
and
xchg
mov
push
xchg
cmp
inc
mov
mov
dec
sub
aas
add
xor
sar
cmp
iret
scas
adc
cmp
ins
cmps
int
push
test
(bad)
push
or
push
add
jo
inc
mov
ss
rcr
add
add
xor
sub
movs
cmp
inc
int
hlt
loope
push
push
jmp
sub
pop
out
push
pushf
xchg
push
js
add
sub
jae
sbb
or
sbb
xchg
cmp
push
loop
cmp
mov
inc
mov
sbb
cmp
dec
add
rol
pushf
sub
xchg
and
ret
mov
and
jnp
sbb
cmp
lds
push
std
mov
inc
cmp
call
nop
mov
adc
xchg
push
addr16
rcr
mov
fsubr
sub
rcl
and
inc
pop
dec
add
fld
mov
push
mov
jmp
fmul
inc
dec
dec
lods
in
movs
inc
cs
dec
add
sub
rcl
sub
lods
push
or
pop
dec
fist
sbb
or
jns
mov
retf
bound
pop
add
add
aas
mov
push
stos
xchg
dec
dec
stc
dec
jbe
and
mov
add
dec
stc
add
xchg
push
xchg
mov
or
(bad)
test
mov
cmp
or
cdq
jmp
scas
or
dec
nop
lds
mov
xor
jl
add
and
(bad)
push
lea
fadd
je
add
jmp
xchg
sub
inc
repz
jge
mov
pop
or
sbb
lea
cmp
sbb
inc
push
lods
adc
xchg
pop
cmps
ja
fdivr
push
loopne
mov
ins
jmp
xchg
mov
xor
enter
jnp
jmp
push
pusha
sbb
cmp
enter
retf
pop
sbb
push
and
add
and
xor
inc
or
or
pop
cmp
cld
push
int
xor
and
or
ret
adc
cmps
mov
sbb
lock
movsx
call
je
push
xchg
add
and
jecxz
shr
dec
xlat
enter
mov
jne
xor
xchg
pop
cmp
pop
or
and
cmps
push
scas
(bad)
mov
lock
sbb
adc
and
sar
retf
xor
femms
(bad)
daa
js
pop
pop
push
xor
xchg
jmp
or
fsub
cmp
pusha
add
or
lods
in
mov
push
mov
cmp
add
je
ins
nop
test
in
ror
or
idiv
sbb
add
movs
int
add
add
lods
mov
addr16
jb
or
jmp
xor
xchg
call
pop
jmp
lea
and
pop
sub
sbb
cli
or
add
push
jns
cli
cmps
jno
jne
push
cmp
test
addr16
push
pop
add
sbb
sub
mov
push
inc
or
leave
dec
int3
mov
test
dec
pushf
mov
pop
add
and
sbb
xor
xlat
xor
pop
sbb
adc
inc
pop
dec
push
int3
push
push
push
xchg
pop
jecxz
push
sub
and
adc
add
xchg
mov
fcom
add
ret
jmp
out
cmps
jge
xchg
test
inc
inc
pop
push
adc
imul
pop
mov
pop
or
lahf
jb
mov
scas
and
sub
cmps
xor
shl
add
mov
add
sar
inc
mov
sti
xor
pop
push
lea
mov
and
clc
xchg
(bad)
imul
or
lahf
nop
and
xchg
push
and
push
xor
or
mov
push
shr
push
loopne
push
sbb
shl
sbb
or
clc
add
sub
pop
pusha
es
mov
ins
and
mov
xor
add
adc
movs
not
push
ficomp
cli
push
cld
stos
scas
mov
pop
add
int
fcomp
test
push
jl
fcom
aam
mov
mov
sbb
dec
popf
xchg
mov
aaa
add
dec
adc
push
retf
and
mov
and
mov
pop
mov
jle
xchg
sbb
mov
add
inc
outs
xor
push
sbb
(bad)
adc
mov
lods
jmp
sub
mov
inc
inc
dec
in
xchg
aaa
or
jne
lods
mov
addr16
pop
nop
inc
jecxz
pop
lods
test
or
or
xchg
mov
and
retf
(bad)
imul
call
jne
cmp
sbb
inc
add
jl
pop
lahf
add
cmp
inc
ss
not
pop
xchg
xchg
std
pusha
pusha
add
push
mov
nop
shl
pop
push
arpl
sbb
inc
mov
ja
push
dec
sub
sbb
jo
mov
adc
dec
mov
imul
sar
js
push
lea
push
out
fild
call
call
repnz
jmp
dec
ins
ret
sub
and
add
adc
add
lea
and
lock
in
sbb
out
push
push
dec
mov
test
xor
(bad)
ss
jne
push
pop
push
or
push
outs
inc
push
jo
fist
and
adc
retf
cmp
xchg
xor
adc
push
adc
pop
adc
or
pop
pop
jl
sbb
jns
je
mov
dec
mov
sbb
test
in
sbb
inc
sar
push
inc
mov
dec
add
addr16
cwde
rol
xchg
adc
add
add
pop
(bad)
jp
xchg
movs
inc
jo
push
sbb
xor
loope
push
ins
pop
and
syscall
jb
adc
cwde
mov
cmp
in
cmp
test
gs
test
stos
xor
daa
int
inc
xor
call
dec
add
fcmovnu
movs
cmp
fucomp
push
and
rcr
sti
adc
and
rcl
push
cli
pop
dec
pop
retf
add
add
sar
sub
mov
in
or
push
sub
(bad)
cwde
cmc
test
sti
xor
and
ins
call
push
ror
sub
sub
adc
cmps
pop
lods
or
cmp
inc
xor
jno
inc
push
pusha
pop
cmp
push
push
sub
mov
inc
add
je
mov
ins
aas
sbb
pusha
ins
inc
mov
xor
jg
rcl
add
je
pop
test
dec
push
and
jge
ds
push
pop
add
movs
cmp
movs
sbb
or
addr16
sar
push
aad
inc
push
(bad)
jo
xchg
push
mov
adc
pop
add
stos
mul
xor
xor
add
push
loope
pop
(bad)
das
xchg
push
pop
sub
nop
or
adc
sbb
inc
test
mov
(bad)
rol
xor
mov
fwait
cli
inc
push
cmp
mov
inc
inc
sub
jge
mov
dec
lahf
mov
mov
or
test
xor
add
jmp
out
jmp
dec
push
shl
mov
inc
jg
shl
aas
add
shl
or
fild
(bad)
jmp
xor
cmp
ret
jl
xchg
(bad)
mov
sahf
jge
jl
adc
cwde
sti
inc
(bad)
js
adc
mov
sahf
pop
add
ret
outs
sbb
enter
test
js
inc
mov
ins
fwait
sub
int3
xchg
cwde
clc
clc
add
mov
jb
dec
push
or
mov
mov
sbb
xlat
test
ret
dec
xchg
sub
mov
fsubr
inc
popa
and
int
add
or
mov
jge
add
es
sub
pop
lods
and
popa
gs
neg
test
sbb
xor
fnsave
pop
mov
pop
add
or
in
inc
xchg
dec
cmp
leave
mov
cmp
pop
pop
iret
(bad)
jg
rol
nop
mov
jmp
sub
xchg
or
(bad)
xor
pop
loop
and
test
inc
inc
inc
and
fist
dec
out
mov
stos
or
mov
call
xlat
and
push
add
jb
xor
pop
push
adc
and
mov
cmp
add
ins
call
push
jmp
dec
jle
jp
pop
pop
test
in
inc
mov
inc
test
or
jle
mov
lea
push
add
sub
xchg
mov
cmp
or
add
pop
sbb
inc
popf
add
xchg
push
pop
inc
xor
cmp
mov
sahf
sbb
add
sbb
or
sbb
cmp
push
dec
pop
xor
push
mov
mov
jge
aas
dec
add
(bad)
adc
addr16
or
inc
cld
clc
mov
xchg
or
push
pop
(bad)
cmp
ja
or
lea
imul
adc
jmp
and
add
sbb
adc
pop
ficomp
push
jg
cmp
adc
or
mov
jno
call
push
stos
jge
jmp
mov
or
movs
mov
cmp
fnstcw
nop
daa
adc
std
or
lsl
xor
inc
and
push
cmp
inc
jbe
sub
(bad)
adc
xchg
push
dec
ror
ret
retf
daa
out
jne
ret
jne
push
je
inc
popa
mov
inc
xor
xchg
lea
sbb
mov
or
fisubr
sbb
cli
cmp
gs
jbe
hlt
popa
ret
pop
ja
sub
cmp
and
addr16
sub
adc
scas
push
cmp
ins
icebp
loope
sbb
retf
lock
xchg
test
leave
cwde
test
mov
mov
mov
repnz
outs
mov
cmp
pop
mov
lds
out
adc
pop
sar
or
nop
or
int
push
outs
and
pushf
push
pop
or
daa
pop
sbb
cmps
inc
sbb
add
lahf
popa
mov
test
cmps
fs
add
or
lahf
mov
test
test
dec
adc
jo
enter
icebp
out
adc
xchg
sbb
xchg
pop
lock
ror
test
dec
test
out
inc
lea
dec
adc
push
pop
add
xchg
xchg
adc
shr
dec
pop
dec
sub
retfw
test
popf
inc
jmp
call
fisubr
das
fisubr
popa
or
add
repnz
mov
and
cld
mov
cmp
dec
retf
clc
mov
ret
add
sub
xchg
js
jmp
addr16
add
pop
or
dec
adc
push
and
fs
aaa
(bad)
sbb
sbb
mov
push
pop
inc
xor
push
jbe
inc
mov
mov
add
sub
sbb
je
xchg
cli
(bad)
mov
test
outs
bnd
pop
lea
or
jne
pop
jnp
int3
sbb
test
push
mov
add
pop
push
out
mov
push
adc
sbb
lock
inc
mov
or
rcr
pop
cmps
add
sub
sbb
jmp
rol
and
sar
push
xor
xor
out
push
jmp
jns
retf
cs
adc
mov
je
push
mov
jl
ror
cmp
gs
ja
cmp
(bad)
xchg
jne
xor
adc
xor
push
div
push
pop
and
dec
jp
xor
and
lds
add
add
adc
mov
adc
add
inc
nop
sub
jne
add
add
daa
fcom
rcr
or
(bad)
out
in
call
jne
inc
addr16
pop
lea
cmp
push
movs
mov
cmp
sbb
mov
jmp
add
outs
movs
icebp
js
les
repnz
jle
aaa
fdivr
inc
call
or
jne
rcl
mov
sub
dec
mov
add
add
lods
mov
sub
int3
fidiv
and
sub
dec
outs
sbb
push
and
rcl
sub
dec
add
and
int
dec
lahf
(bad)
jle
shl
jb
cld
test
aaa
lea
ja
icebp
add
hlt
and
cmp
ds
hlt
adc
dec
push
xlat
add
ret
add
xor
and
inc
jae
jo
adc
add
fadd
xchg
sbb
into
test
mov
(bad)
cmps
sub
jae
outs
cwde
nop
jmp
inc
push
cmp
in
loopne
jge
cmp
je
mov
jo
sbb
pop
push
inc
and
push
and
or
pop
or
push
adc
or
mov
or
fs
jbe
sbb
jp
ret
sub
ss
cmp
or
push
xor
hlt
push
mov
hlt
imul
stos
loop
jl
clc
dec
fcom
fwait
or
ds
aam
mov
push
sub
cmc
mov
outs
fistp
or
mov
pop
clc
loopne
cmp
sub
cmp
push
and
bnd
mov
iret
mov
bound
ret
hlt
jecxz
popa
add
stos
add
ds
inc
and
outs
jmp
dec
add
and
push
mov
addr16
xchg
mov
push
cmp
sbb
sbb
xchg
ss
ret
pop
adc
mov
or
adc
push
adc
adc
mov
aas
aas
aas
aas
sub
and
(bad)
cdq
cmps
jne
dec
or
cmp
sbb
lahf
out
sahf
add
or
dec
sti
add
pop
lods
xor
add
or
inc
or
loope
or
sbb
cmc
jnp
pop
mov
sub
pop
popa
aaa
xor
adc
and
push
adc
adc
add
bound
sbb
mov
adc
add
pop
enter
leave
aas
add
xchg
pop
in
sbb
sub
add
or
xchg
push
and
adc
jp
movs
add
or
shl
movs
rcl
imul
push
popf
cmps
cs
fcom
jmp
xor
xchg
(bad)
imul
sub
push
addr16
sti
in
push
movs
mov
fs
mov
pusha
sbb
push
or
enter
retf
mov
sar
fcom
adc
dec
int
or
sub
mov
enter
shr
inc
push
pop
push
push
test
std
mov
adc
cmp
or
rcl
adc
movs
out
push
adc
or
and
push
scas
ror
dec
push
loope
adc
lock
push
jne
mov
xor
dec
mov
mov
clc
call
mov
add
scas
xchg
retf
pop
pop
mov
shr
add
imul
pop
xor
mov
xor
push
dec
bound
dec
cmp
mov
inc
and
adc
jnp
inc
cmp
shl
inc
add
js
pop
sbb
push
add
or
add
push
enter
mov
xchg
push
cmc
or
test
test
add
pusha
je
pop
push
inc
xchg
lahf
stos
loopne
rol
aad
jbe
dec
mov
push
je
xor
scas
push
push
inc
add
sbb
pusha
pop
inc
xchg
inc
sbb
inc
jbe
cmp
mov
shr
mov
mov
dec
inc
loopne
add
std
pop
push
out
jne
mov
pop
cmp
mov
shl
or
stos
mov
mov
retf
bound
adc
pusha
or
or
ds
push
or
lods
cmp
imul
add
test
or
lea
or
clc
push
mov
xchg
sub
mov
sbb
push
in
test
das
pop
mov
call
push
shl
add
sbb
and
pop
jge
xchg
sbb
scas
ins
jmp
ret
ret
push
neg
dec
sub
lods
cmp
push
xor
fidiv
and
adc
pop
adc
xchg
adc
ret
adc
inc
das
sbb
xor
mov
inc
ret
cmp
fbld
lock
sar
sbb
dec
jne
out
pop
lea
or
mov
retf
sbb
inc
call
dec
adc
sbb
jo
add
mov
rcl
sbb
jp
mov
jmp
sbb
std
xor
outs
out
gs
mov
pop
push
push
mov
cwde
ja
add
mov
dec
into
jl
sti
aaa
mov
call
jne
or
jmp
or
pusha
sbb
pop
popa
rol
movs
mov
cmps
call
push
xchg
push
test
movs
adc
xor
int
shl
push
push
inc
add
(bad)
mov
test
mov
xchg
add
sbb
push
push
(bad)
add
adc
out
add
dec
lods
sub
xor
sub
xchg
xor
or
adc
scas
pusha
and
adc
jge
in
dec
sbb
ss
push
inc
call
sub
mov
sub
xchg
xor
sub
xor
xor
sbb
call
push
nop
out
inc
inc
inc
out
call
cmp
out
call
movs
cmp
pop
dec
cmp
and
movs
dec
push
call
imul
jl
pop
dec
repz
ds
xchg
dec
test
mov
pop
cmps
fst
das
mov
in
xchg
outs
nop
xchg
inc
xchg
das
inc
fist
pushf
lds
dec
repz
clc
sub
dec
movs
das
and
call
add
mov
(bad)
sbb
push
lods
aad
lods
adc
mov
and
or
leave
leave
leave
or
adc
daa
daa
mov
ss
sub
daa
daa
daa
xor
cmp
adc
cmp
inc
and
dec
dec
outs
daa
inc
cmovs
or
pop
dec
inc
and
enter
jo
js
movs
cmp
adc
xchg
dec
es
mov
xchg
cwde
pushf
aaa
cdq
fs
mov
adc
(bad)
mov
xor
mov
aad
les
jnp
push
stos
mov
ret
mov
xchg
jbe
(bad)
adc
inc
pop
push
sub
add
dec
mov
aaa
mov
sbb
push
lods
aam
jnp
dec
repnz
add
cmp
cmp
add
repz
ins
inc
aaa
sti
or
(bad)
in
cmp
mov
jne
sbb
dec
mov
xor
mov
xor
adc
add
scas
mov
push
repz
sbb
push
rep
(bad)
movs
pop
xor
cmp
xchg
jmp
addr16
ss
ror
dec
mov
idiv
dec
pop
clc
mov
test
lock
movs
mov
push
push
adc
pop
mov
sub
or
cmp
cmp
cmps
cmp
xor
ins
loop
inc
push
mov
dec
dec
sar
outs
pop
adc
jl
or
jg
loopne
add
jle
inc
jmp
loopne
mov
dec
add
cmps
mov
mov
outs
repnz
mov
dec
je
cmp
cmp
add
lds
adc
cmp
fs
test
push
and
or
mov
jnp
pusha
leave
mov
jge
aas
pushf
mov
inc
sbb
and
in
out
xchg
inc
adc
inc
adc
in
leave
dec
sbb
cs
cld
scas
push
and
and
push
pusha
sbb
test
jno
jle
adc
sub
dec
mov
ffree
and
xor
stos
adc
cmp
sar
ret
inc
repz
loopne
cmp
lods
inc
cld
adc
push
shr
add
dec
xchg
js
push
push
dec
shl
loop
add
adc
dec
repz
adc
sbb
pop
rcl
cmp
xchg
cs
xor
sub
add
sbb
lock
sub
dec
repz
sub
movs
push
imul
cs
dec
dec
call
ss
(bad)
je
push
push
lods
ins
ss
inc
sub
cmps
cwde
or
dec
add
hlt
mov
push
mov
and
mov
and
cmps
mov
call
dec
add
pop
push
or
cwde
add
pop
adc
fcmovnb
add
mov
and
aas
lods
mov
mov
xchg
jno
sahf
cmps
lahf
cmps
xchg
push
stos
dec
ja
jb
adc
fcomp
or
lods
pop
adc
or
push
jne
inc
ins
in
or
inc
xor
xchg
push
xor
loope
xchg
adc
jl
imul
inc
leave
jae
sbb
adc
xor
pusha
xor
lds
jne
lods
mov
and
aam
pusha
shr
in
add
jae
fild
loopne
(bad)
fcomp
jg
clc
inc
ret
sbb
mov
sub
jl
dec
mov
aam
repnz
xchg
push
sar
cmp
adc
ds
(bad)
enter
add
js
js
add
xchg
stos
jle
adc
xor
in
push
retf
jnp
add
push
mov
and
dec
add
rcr
pop
mov
fsubrp
add
inc
outs
dec
adc
push
mov
mov
push
push
push
jp
add
push
add
push
inc
shl
hlt
jmp
jg
les
jg
pop
add
and
cmps
adc
sbb
jecxz
lea
cs
std
push
jl
adc
shl
aad
retf
add
(bad)
jg
and
lea
and
xchg
js
ds
push
or
or
loop
and
or
adc
push
jge
add
adc
lea
fsubp
sbb
jne
jo
leave
sahf
adc
adc
les
push
repz
movs
mov
rcl
(bad)
les
enter
mov
and
xchg
stc
leave
in
movs
jmp
jmp
and
in
loopne
std
dec
retf
fsub
jmp
inc
xor
pop
bound
fist
sub
int3
inc
mov
dec
inc
es
xor
out
inc
mov
dec
or
pop
and
xor
adc
mov
lahf
ds
and
pop
adc
lea
fnsave
scas
and
xor
push
(bad)
rcl
std
repnz
data16
dec
mov
call
jle
jmp
mov
add
dec
fs
dec
and
les
loop
ins
and
scas
mov
push
sub
scas
add
mov
add
push
lock
inc
pop
das
sbb
cmc
jne
xor
dec
imul
mov
or
cmp
and
in
nop
push
hlt
loop
in
(bad)
out
inc
sbb
jmp
mov
sub
inc
cmp
ja
and
hlt
sbb
add
icebp
push
inc
mov
shl
push
ror
add
xlat
xchg
outs
push
outs
and
push
inc
cmp
jl
pop
jle
xor
jecxz
add
jmp
ret
in
xlat
add
cmps
and
inc
add
fldenv
mov
lds
and
popf
mov
xchg
dec
adc
xlat
test
adc
or
add
pop
add
lock
call
or
and
(bad)
add
mov
lock
cmp
icebp
mov
cs
mov
or
bound
rcr
je
movs
(bad)
sub
push
dec
clc
ja
clc
pop
je
cmps
sbb
push
sbb
shl
cmps
sbb
lods
test
pop
mov
mov
call
idiv
addr16
ror
push
idiv
jne
ret
ret
push
push
int3
nop
sar
stos
sbb
(bad)
add
loope
mov
jno
xchg
test
sub
or
mov
dec
ret
push
mov
ret
or
adc
inc
push
sub
test
cmp
adc
xor
jmp
sbb
inc
sbb
je
pop
daa
frstor
push
sbb
xchg
and
jne
xor
add
into
mov
xor
test
mov
mov
cwde
mov
int
pop
rol
sub
cmp
xor
shl
jmp
sbb
sbb
xchg
ds
mov
sub
and
inc
xchg
enter
adc
mov
fist
inc
push
cmp
or
mov
xor
inc
ret
int
xchg
jbe
pusha
mov
xor
loope
inc
mov
stos
test
and
call
(bad)
mov
pop
lea
jno
cmc
mov
add
and
or
push
inc
retf
push
dec
mov
push
mov
sub
dec
mov
pop
inc
mov
jmp
or
inc
cmp
pop
nop
dec
sub
dec
cmp
ficomp
pop
push
xchg
push
jmp
xor
sub
xor
sbb
sbb
mov
shr
sbb
adc
inc
xor
test
inc
sub
cmp
push
mul
retf
mov
or
inc
xor
repnz
pop
mov
cmps
call
cwde
and
and
xor
cdq
retf
es
int3
sbb
aam
add
and
sar
test
push
add
and
and
jp
inc
test
adc
push
int3
stos
xlat
imul
and
ds
gs
clc
adc
or
shl
cmc
cmps
lock
js
pushf
mov
inc
mov
hlt
push
push
add
jmp
jmp
test
(bad)
mov
inc
pop
neg
add
add
add
jns
test
adc
sbb
or
stos
add
loope
push
push
pop
rol
sub
inc
ret
ds
out
ss
mov
in
outs
ret
pushf
xchg
loopne
lea
popa
and
adc
shl
mov
adc
xchg
loopne
push
or
cdq
cmps
lock
test
data16
adc
cdq
cmp
nop
pop
and
xchg
nop
or
adc
sub
loopne
pop
jae
cld
push
fadd
lea
and
pop
cmp
les
and
out
lock
or
xchg
jbe
adc
mov
lea
clc
jbe
(bad)
xchg
push
jle
mov
mov
ins
push
cmp
jne
repz
out
mov
push
cmp
jne
(bad)
es
xor
(bad)
jne
call
out
or
add
jb
jmp
stc
jns
adc
jmp
adc
(bad)
jmp
inc
popf
out
std
std
jmp
cld
sbb
pmaxub
mov
dec
rol
add
addr16
mov
jmp
int3
add
mov
and
push
sub
icebp
push
mov
push
sub
jge
jmp
call
sbb
fisub
mov
or
jmp
mov
lahf
clc
repz
adc
push
sbb
sbb
jmp
in
and
outs
pop
arpl
pop
retf
call
push
sbb
lods
xor
pop
inc
jnp
sbb
jne
add
xor
sbb
xchg
int3
aad
mov
jmp
pop
push
(bad)
or
fdivr
sub
cmps
jo
inc
(bad)
add
adc
adc
xor
sub
push
dec
test
mov
add
inc
sbb
and
mov
add
adc
ins
int3
jle
or
add
sub
push
bound
sbb
xchg
sbb
fcom
push
mov
sbb
test
shl
adc
cli
daa
push
shr
push
add
repz
ss
and
and
aam
enter
and
in
rol
push
lods
inc
and
xchg
repnz
push
mov
xchg
jmp
add
add
adc
jo
mov
jecxz
lods
dec
mov
push
mov
fld
psubq
xchg
push
sub
lods
or
lea
into
push
test
push
pop
sub
dec
inc
loope
mov
add
aas
xor
movs
test
stos
add
inc
xor
mov
sar
add
cmp
test
add
mov
push
cmp
push
adc
outs
outs
xor
and
cmp
pusha
mov
ja
lea
mov
mov
or
shl
inc
jmp
inc
mov
pop
int3
(bad)
lock
or
push
mov
dec
xor
sub
push
lock
sbb
mov
rcl
add
mov
shl
add
xor
rol
mov
or
xchg
fs
call
nop
fistp
or
jbe
or
push
mov
rol
arpl
nop
jl
mov
aam
xor
xor
les
xor
or
lea
push
sbb
mov
mov
pushf
push
ds
ja
dec
dec
es
xchg
rol
dec
jmp
fistp
push
sahf
mov
dec
ss
lods
test
push
mov
push
aad
call
mov
and
xor
fstp
pop
pop
or
push
mov
sub
loope
xor
repnz
fwait
mov
aad
xchg
cmp
push
test
mov
xor
clc
call
and
test
inc
jb
xor
push
fstp
repz
nop
add
xor
cmps
and
addr16
inc
and
mov
dec
rol
sbb
popf
test
cmp
nop
retf
mov
imul
xor
jl
xchg
test
test
leave
add
adc
mov
add
movs
bound
or
nop
aas
dec
cmp
or
pop
repnz
inc
push
and
and
nop
nop
nop
pushf
dec
add
pushf
lods
lods
pusha
sbb
xchg
mov
std
mov
shr
pop
je
int
push
and
inc
add
sahf
addr16
(bad)
fwait
inc
push
cdq
inc
jae
xchg
fdivp
ins
call
cmp
sub
or
or
xlat
and
test
add
xor
mov
out
mov
lods
(bad)
sub
xchg
cmp
push
mov
xchg
pop
mov
movs
lods
test
dec
push
push
movs
mov
mov
push
or
mov
dec
adc
pop
push
stc
sub
rcl
or
mov
push
(bad)
pop
add
shr
lods
push
rol
addr16
loopne
popa
call
add
inc
es
cmps
adc
pop
call
and
sub
jne
shr
call
ss
inc
sub
add
dec
test
stos
mov
stc
mov
mov
(bad)
mov
adc
frstor
mov
inc
xchg
or
inc
cdq
mov
sub
les
loopne
shl
adc
mov
cmp
or
leave
inc
xor
js
jne
dec
cmp
lock
(bad)
rol
or
cmp
xor
xor
inc
xchg
data16
inc
adc
ret
push
pop
mov
dec
sub
sbb
push
cmps
clc
lods
popf
dec
test
ins
and
mov
mov
jmp
fbstp
mov
dec
je
aam
sti
(bad)
and
push
jne
into
pop
xchg
loope
inc
js
and
call
jmp
lock
cmp
imul
fwait
push
add
inc
popf
test
lods
push
aas
jnp
adc
or
dec
shl
jle
or
retf
add
add
rol
leave
add
pop
jle
(bad)
je
xchg
or
cwd
js
add
add
jg
lock
push
or
stc
jmp
adc
test
sbb
inc
cld
ficomp
mov
rol
ret
push
hlt
(bad)
mov
movsx
add
or
adc
lods
fld
jmp
enter
cs
lahf
push
iret
add
mov
sub
push
movs
sub
sbb
rol
in
aam
sbb
jmp
add
sub
or
xchg
xchg
pop
pop
lods
rcl
jmp
ret
call
ror
jmp
fs
and
push
mul
cld
lock
je
or
or
push
int
arpl
fmul
pop
and
and
and
mov
icebp
lods
lods
outs
aad
dec
sub
push
add
pop
mov
jp
call
push
adc
lods
(bad)
cmp
and
dec
pop
(bad)
jne
dec
cmp
push
dec
sti
cs
pop
mov
test
mov
ds
push
jl
push
pop
or
or
xchg
outs
xlat
jo
pop
add
gs
cmp
jne
jmp
test
movs
add
jmp
xlat
cmp
adc
lock
add
adc
(bad)
(bad)
adc
xchg
lods
cs
push
test
(bad)
add
jno
stos
ret
mov
xor
jmp
inc
test
push
sub
rcl
inc
daa
mov
jmp
lods
test
sub
push
mov
loopne
pop
and
dec
loopne
ror
test
sbb
sub
mov
or
jb
xor
(bad)
je
(bad)
sbb
lods
adc
sar
in
rol
jmp
aaa
push
mov
(bad)
outs
add
sbb
cmp
mov
lds
jns
stos
add
gs
add
dec
or
movs
hlt
sub
add
nop
pop
pop
add
arpl
cmp
cwde
add
js
je
fsub
adc
cmp
or
inc
dec
pop
fisub
rol
rcr
xchg
sub
sub
xor
adc
pop
push
jo
pushf
dec
fadd
jge
iret
into
ret
rol
sub
add
hlt
xchg
adc
(bad)
aam
(bad)
sub
test
xor
xor
inc
nop
rcr
or
add
add
je
(bad)
cli
int3
jmp
aas
jg
lods
sahf
iret
push
jge
sti
add
test
daa
mov
icebp
(bad)
int
jne
cld
add
mov
outs
(bad)
(bad)
xor
loopne
stos
mov
call
movs
adc
push
popa
xor
sbb
or
pop
add
xchg
mov
aaa
loopne
inc
mov
inc
lea
pop
call
ret
and
test
test
inc
ds
not
test
add
add
push
in
or
jmp
or
pop
cdq
ins
pop
and
mov
out
mov
inc
pop
mov
and
into
xchg
cmc
ins
lea
xor
repnz
cmp
jb
jae
fimul
jmp
jl
dec
cmp
adc
(bad)
inc
aaa
je
test
dec
ds
inc
lock
sub
push
adc
pop
adc
and
add
pop
sbb
bound
enter
inc
or
push
sub
outs
mov
dec
dec
stos
inc
mov
and
mov
in
xor
aam
xor
cmp
ror
cmp
adc
adc
sub
not
movs
pop
popf
je
xor
iret
and
out
push
shl
xor
shl
inc
movs
call
lock
rcl
mov
sub
inc
and
adc
xchg
bound
and
out
jge
jno
inc
mov
lahf
cdq
inc
dec
mov
hlt
test
xchg
sub
adc
adc
call
lea
xor
cli
add
add
icebp
cmp
fs
push
pop
jl
pop
mov
xor
nop
inc
inc
sub
inc
or
mov
add
loope
adc
leave
mov
cmp
or
jo
mov
xchg
lods
and
gs
lock
dec
lea
out
push
pop
mov
sub
loopne
sub
pop
fcom
das
sub
(bad)
pusha
jl
test
rol
out
and
push
and
and
and
adc
mov
jge
pop
and
adc
pop
scas
adc
or
shl
mov
cmp
mov
jg
(bad)
or
outs
push
in
lods
push
adc
ror
mov
push
enter
mov
mov
push
test
dec
jo
add
mov
xor
jo
sub
push
inc
push
cmp
add
inc
js
fiadd
jmp
fwait
mov
rcr
sub
or
popf
inc
sbb
dec
add
dec
cmp
frstor
shr
adc
adc
or
pop
repz
leave
or
rol
into
sbb
jl
jmp
shr
or
int3
mov
add
add
or
bound
scas
push
bound
cmp
lahf
pop
sti
in
add
ins
adc
rcr
and
cmps
jmp
or
int3
shr
mov
xchg
fcomp
fnstenv
fiadd
inc
outs
pop
outs
ret
mov
pop
add
sub
fcomip
lea
mov
fidivr
jmp
jo
test
sub
retf
js
push
jp
adc
pop
cmp
cmp
adc
imul
in
push
sub
dec
add
mov
mov
inc
jbe
dec
mov
xchg
out
cmp
add
push
cmps
adc
and
mov
adc
iret
shl
add
lock
xchg
xchg
jns
push
mov
mov
addr16
push
push
shl
jo
mov
test
test
or
lock
(bad)
stos
inc
ror
xor
add
dec
adc
push
jge
imul
jo
mov
cmp
push
jmp
into
call
sub
gs
inc
and
inc
jmp
fstp
jb
(bad)
or
cmp
cmp
push
inc
(bad)
ss
mov
call
imul
scas
stc
fiadd
xchg
aam
imul
fisubr
sbb
and
add
jmp
mov
fsub
xchg
mov
out
add
or
jecxz
and
ins
cmp
mov
adc
mov
push
call
je
xor
pop
sbb
mov
or
lods
cmp
xchg
mov
mov
cmp
dec
adc
lock
add
mov
mov
jp
and
cmp
ret
mov
pop
adc
out
icebp
and
je
add
fwait
push
(bad)
jp
add
dec
jle
iret
scas
xchg
test
icebp
mov
xchg
enter
jno
add
aaa
push
sub
push
push
dec
xor
leave
lock
mov
adc
loopne
mov
pusha
and
jo
jnp
enter
cmp
or
mov
into
ds
pushf
movs
push
adc
ja
(bad)
mov
adc
xchg
add
iret
sbb
(bad)
xchg
not
push
pusha
cmp
pusha
psubsw
call
mov
cmp
push
dec
sbb
push
dec
add
ror
hlt
adc
or
cmp
mov
test
dec
imul
lods
shl
cmps
test
or
adc
mov
fwait
sbb
pop
xchg
pop
cdq
push
mov
jge
dec
add
push
jp
sub
jne
mov
pusha
push
ja
mov
ins
cs
cmp
jne
cmp
push
mov
push
jno
add
mov
mov
retf
dec
inc
add
cmp
xor
retf
mov
push
jnp
jne
sbb
mov
mov
aaa
mov
leave
dec
call
pop
ss
xchg
mov
out
pop
and
jbe
hlt
call
add
aas
jmp
lea
add
mov
and
xchg
call
pop
push
adc
push
test
je
push
pop
sub
int
call
add
cmp
mov
dec
cmp
and
jo
inc
movs
mov
test
inc
sbb
call
jle
fld
bound
push
mov
inc
aas
lods
aad
outs
mov
jge
movs
fidivr
test
and
add
dec
push
in
or
sbb
div
mov
and
jbe
xchg
xchg
add
add
or
aad
shl
add
pop
fild
add
retf
fimul
wbinvd
add
dec
mov
or
push
and
mov
mov
nop
rol
add
loop
adc
jns
and
out
push
jbe
or
xor
xchg
lods
(bad)
xor
js
xchg
cs
es
sbb
sbb
or
ins
xor
adc
mov
lds
ret
push
and
mov
adc
mov
repz
lds
jne
inc
cmp
inc
or
out
mov
pop
shr
lds
dec
rol
adc
cld
adc
xchg
add
push
stc
push
sub
or
mov
pop
mov
add
int
sbb
cmp
les
pop
test
cmp
pop
inc
adc
cdq
cmp
push
or
and
adc
sbb
mov
jg
test
mov
jg
jmp
dec
(bad)
xchg
adc
and
xor
inc
or
jg
test
shl
and
or
mov
call
jne
add
add
adc
xchg
dec
push
add
enter
in
mov
jl
mov
lods
pop
stos
add
xchg
push
daa
push
and
mov
iret
sahf
outs
cmc
sbb
xchg
fs
ret
add
dec
fwait
inc
sub
test
mov
adc
push
adc
adc
jecxz
and
je
bnd
adc
jg
rcl
lods
loope
ret
and
aaa
stos
pusha
nop
outs
addr16
jno
cmc
mov
mov
stos
inc
sbb
push
or
push
test
lods
xchg
dec
sbb
stos
pop
adc
mov
imul
jmp
pop
xchg
mov
add
mov
push
lds
xchg
es
pop
jno
or
mov
lock
pop
es
xchg
call
sub
imul
add
arpl
mov
cli
imul
leave
push
shl
inc
add
mov
imul
pop
clc
pop
sbb
mov
jge
xchg
repnz
out
outs
mov
jne
cmp
pop
shl
shl
retf
(bad)
fimul
mov
jo
jb
or
stc
stc
jge
mov
and
jb
sbb
out
add
sbb
and
jb
add
inc
fldenv
lea
iret
cmps
loopne
jmp
or
xchg
sub
mov
inc
inc
cld
je
clc
mov
jmp
mov
xchg
pop
or
movs
or
dec
add
enter
dec
dec
dec
dec
stos
xor
cld
cld
(bad)
into
xor
movs
or
imul
or
or
call
out
and
cmp
sub
loopne
inc
popf
(bad)
pop
push
xor
inc
mov
jbe
jae
sahf
push
ss
ret
cld
test
scas
loopne
jo
ins
add
cmp
jmp
enter
mov
and
je
test
xor
jnp
arpl
jmp
gs
cmps
ins
in
es
ror
inc
movs
cmp
sbb
xchg
and
mov
cmps
adc
cmps
mov
cs
push
fadd
inc
push
sub
jne
retf
je
pusha
out
mov
cld
je
sar
xchg
clc
add
arpl
push
cmp
hlt
and
push
les
leave
or
test
pushf
mov
sbb
or
movs
xchg
push
mov
cmps
jne
or
mov
int3
fcmovnbe
inc
stos
inc
sub
pop
cmc
and
mov
inc
or
pop
ret
je
mov
adc
mov
clc
scas
das
dec
and
adc
fadd
and
add
add
cmp
ss
pushf
test
(bad)
je
sub
sub
shl
ret
leave
ffree
inc
or
mov
ins
and
cmp
fmul
jle
mov
push
popf
inc
xchg
imul
scas
xchg
in
sbb
sahf
and
mov
mov
fstp
aam
movs
icebp
rcr
dec
pop
je
outs
cmp
mov
inc
cmp
mov
stc
pop
test
and
push
ror
add
je
sar
aad
inc
push
sbb
(bad)
lds
retf
loope
and
pusha
and
inc
repnz
mov
or
sbb
or
sub
push
jmp
xchg
add
retf
hlt
dec
mov
inc
call
leave
test
push
adc
dec
pop
retf
sub
mov
(bad)
jmp
pushf
or
sti
and
mov
rcl
push
loope
adc
inc
inc
clc
lock
xchg
leave
xchg
loop
ja
cwde
mov
add
or
pop
adc
mov
pop
mov
pminub
adc
pop
push
add
out
test
mov
retf
mov
nop
cld
jbe
jge
pushf
inc
xchg
aam
arpl
fistp
daa
pminsw
loope
(bad)
add
mov
dec
add
mov
or
and
dec
daa
sbb
or
sbb
ss
imul
xchg
ins
lahf
retf
sahf
in
icebp
shl
(bad)
push
int
or
mov
xor
sub
mov
sbb
push
pushf
cmps
add
cmc
or
cli
mul
ja
jmp
mov
dec
adc
jmp
mov
dec
add
adc
inc
sub
and
fisubr
jb
inc
cmp
mov
dec
mov
mov
dec
dec
mov
mov
xchg
or
push
jne
dec
loopne
dec
hlt
shl
aam
or
and
jno
push
out
lods
je
shl
jo
sbb
lea
dec
push
lahf
fcom
push
inc
and
mov
adc
mov
mov
repz
ror
push
rcl
rcl
aad
iret
repz
xlat
fcomp
(bad)
dec
jmp
and
mov
jmp
or
adc
pusha
xchg
jo
sbb
mov
dec
mov
enter
and
push
push
add
push
add
add
addr16
or
inc
ja
sahf
mov
(bad)
fs
or
mov
add
push
arpl
out
sahf
or
xchg
jmp
stos
mov
mul
sbb
mov
dec
adc
or
repnz
rol
push
test
loope
xchg
mov
imul
push
sbb
test
inc
imul
sbb
dec
lea
lods
adc
lds
lds
jnp
adc
or
div
add
in
mov
xor
iret
jge
mov
sub
xchg
adc
out
enter
loope
sar
test
es
mov
lea
mov
jb
mov
gs
les
cmp
mov
test
sub
xchg
add
sub
mov
and
and
ja
js
outs
inc
(bad)
xor
movs
jns
or
into
jae
psubw
ja
sub
pop
test
repnz
jl
rol
test
mov
jmp
retf
mov
and
cld
out
inc
popa
inc
rcr
lods
mov
add
mov
test
adc
push
lea
pop
dec
nop
mov
mov
inc
int
push
or
pop
test
or
cmp
(bad)
retf
shl
inc
nop
xor
dec
xchg
mov
jge
sub
mov
sbb
and
ror
mov
loope
xor
cmp
mov
rcl
pop
leave
inc
rol
rcl
pop
and
mov
neg
push
push
retf
xchg
cs
(bad)
inc
xchg
add
test
nop
aaa
mov
hlt
shr
loope
shr
or
mov
call
mov
mov
inc
mov
aas
enter
lock
lock
imul
mov
test
div
mov
into
xchg
mov
out
icebp
test
inc
in
test
or
mov
push
out
adc
xchg
aaa
or
pop
mov
scas
mov
shl
or
div
enter
and
scas
and
mov
ror
dec
imul
iret
dec
rol
mov
xor
xor
loop
sub
fbld
mov
and
repnz
pushw
rcl
xor
sub
loop
out
jge
shl
inc
xchg
div
rol
lea
inc
cmp
dec
cld
test
aaa
psrlw
inc
push
cmp
mov
mov
das
aad
inc
shl
fdivr
sbb
cmp
in
jae
xchg
dec
cmp
dec
rcr
adc
mov
clc
and
sub
ret
push
mov
or
sbb
cmp
(bad)
inc
jle
mov
ins
test
cmps
enter
mov
adc
mov
mov
clc
pop
jge
ret
dec
or
sbb
jg
and
enter
(bad)
test
stc
xchg
retf
jge
or
add
jge
cs
add
inc
lock
adc
cmp
jne
push
ds
cmp
add
int
loopne
loop
aaa
outs
add
mov
add
sub
jbe
pop
sub
clc
mov
mov
test
aas
inc
add
ss
and
popa
nop
cmp
stos
cmp
sbb
cli
es
pop
adc
adc
xchg
sbb
or
pop
in
xor
shr
jp
sbb
inc
add
or
push
rcr
push
jne
aas
pop
ret
xor
ficomp
lock
imul
jmp
cs
call
xchg
fsubr
mov
add
add
div
push
ins
xchg
les
inc
sti
and
mov
xchg
mov
mov
ss
ror
(bad)
mov
add
sub
cli
ja
xor
les
cmp
adc
xor
ret
xabort
push
imul
mov
cmps
mov
jae
dec
and
and
dec
int3
lea
js
test
test
aas
sbb
test
ror
pop
add
push
sub
aad
jmp
dec
nop
adc
dec
dec
add
xor
inc
cmp
ins
(bad)
scas
sub
cmp
(bad)
inc
dec
(bad)
adc
sub
cmp
mov
(bad)
sbb
inc
js
hlt
xchg
jp
jne
dec
mov
jb
int
sbb
pushfw
adc
mov
dec
and
add
push
add
dec
jbe
xor
jnp
add
and
add
add
add
add
or
push
mov
nop
mov
and
push
and
inc
je
sub
pop
xor
or
or
xor
add
xchg
mov
push
add
or
dec
push
and
add
adc
aam
ret
sbb
add
lea
xchg
or
adc
or
sbb
sub
jae
test
inc
pop
(bad)
mov
mov
iret
xor
push
xor
into
pusha
inc
(bad)
and
ror
rcr
test
xchg
push
mov
ret
pop
mov
lock
out
ret
or
pop
pop
cli
fstcw
(bad)
sbb
lock
pushf
jae
rcl
or
or
add
loopne
xchg
and
mov
jl
sahf
inc
dec
rol
mov
push
je
xchg
or
or
les
or
dec
jmp
add
into
cmp
call
or
div
and
aad
rol
inc
jge
(bad)
lock
retw
or
adc
adc
(bad)
xlat
sbb
fldcw
dec
xchg
xor
mov
cld
and
push
leave
pushf
sub
or
add
push
inc
stos
jg
add
mov
ins
jge
ret
dec
and
(bad)
sahf
in
xsaveopt
xchg
lock
pop
and
xor
add
xor
mov
add
add
jbe
jle
out
push
mov
mov
xor
leave
repz
inc
jg
into
into
push
popa
(bad)
pop
and
xchg
aaa
js
outs
pop
sub
push
pop
nop
pop
xor
(bad)
cwde
pop
mov
mov
sbb
(bad)
or
and
daa
ret
popf
fstp
add
and
pop
call
test
lahf
pop
test
addr16
add
or
adc
jbe
inc
add
test
and
dec
repz
sbb
je
and
shl
in
jne
or
sub
pop
mov
sub
sbb
loopne
jmp
retf
ret
or
out
xchg
add
(bad)
push
scas
sub
mov
jo
jmp
push
jmp
fadd
mov
inc
gs
int
ins
mov
xor
hlt
adc
push
xchg
(bad)
cli
daa
in
fcomp
xchg
mov
cmc
push
or
jo
pop
cmc
mov
inc
mov
les
pusha
adc
call
gs
sub
cmp
pop
lods
or
fucomip
outs
gs
adc
and
addr16
rcr
add
test
mov
stc
cld
and
cli
(bad)
pop
rcr
adc
ss
(bad)
out
imul
adc
cmps
je
cld
and
sahf
mov
dec
mov
js
inc
mov
inc
jmp
cmp
add
pusha
or
push
mov
pop
ret
and
retf
dec
or
add
imul
or
sahf
sub
pop
or
movs
popf
jl
add
push
and
jne
dec
inc
pop
pusha
aam
(bad)
adc
lock
js
loopne
es
call
adc
loope
and
pusha
enter
lds
out
jmp
cli
call
add
mov
movs
ss
push
push
jmp
xor
ss
sti
js
jg
div
mov
xchg
add
cli
jmp
shl
or
div
jmp
call
icebp
jae
push
cmp
pop
adc
aam
push
lock
dec
lock
cdq
add
xor
outs
int
dec
mov
add
or
add
fisubr
fwait
xchg
out
and
cmp
jmp
mov
repnz
push
adc
mov
inc
addr16
mov
push
(bad)
jg
out
jns
sub
clc
cmp
out
push
push
add
es
and
(bad)
cmp
or
bound
stos
and
ins
movs
dec
or
jmp
sub
add
call
jmp
xor
xor
pop
mov
mov
sar
add
xor
aam
push
mov
add
or
je
or
mov
push
push
cmc
mov
mov
out
es
mov
je
inc
leave
je
and
out
push
cmp
ja
or
add
cmp
adc
(bad)
cmp
pop
mov
shl
leave
adc
or
inc
adc
mov
xchg
das
push
xor
cmp
je
test
enter
scas
mov
adc
mov
jbe
sar
or
shr
or
xchg
push
and
dec
push
add
mov
and
les
fidivr
fdivr
in
jne
jb
mov
shl
cwde
push
push
lods
pop
mov
idiv
push
cmp
sbb
sbb
jle
enter
test
iret
repnz
xlat
jle
mov
scas
sbb
push
daa
mov
sub
adc
mov
loop
in
jb
fsubr
hlt
push
lods
sbb
lods
iret
push
icebp
sub
(bad)
es
sub
in
fs
stos
adc
inc
xchg
sbb
sbb
push
enter
out
push
adc
(bad)
int3
ror
ins
(bad)
ins
add
inc
or
jmp
sti
jne
je
dec
sub
sbb
add
and
out
je
mov
inc
(bad)
push
add
mov
cmp
cmp
jbe
aad
shl
sbb
cmp
inc
xchg
call
or
add
push
iret
jns
jmp
sub
sbb
xchg
or
bound
fadd
mov
(bad)
jns
mov
xor
mov
and
test
loopne
or
mov
and
test
jecxz
test
jp
scas
xchg
or
in
leave
mov
pop
popf
jnp
inc
push
inc
repnz
mov
pop
test
push
xor
mov
out
je
and
and
nop
popf
dec
xchg
lock
test
adc
and
mov
or
or
jge
sbb
cmp
mov
dec
jle
mov
add
pop
in
dec
(bad)
dec
inc
fdiv
xchg
xor
xor
inc
sbb
clc
jp
and
loope
or
pop
jge
lea
mov
pop
push
imul
or
int3
xchg
sub
and
pop
xor
mov
loopne
mov
in
cmp
in
xor
(bad)
dec
push
mov
aas
adc
loopne
push
inc
push
mov
dec
jo
cs
xor
mov
push
xor
mov
loope
and
push
test
xor
cmp
and
fst
popa
dec
xchg
les
inc
fwait
sub
pop
call
mov
dec
inc
push
cmp
push
inc
or
and
mov
push
inc
or
fadd
and
enter
xor
nop
iret
mov
sub
add
push
push
push
movs
adc
adc
inc
outs
je
add
cmp
adc
xchg
sbb
ss
pop
add
and
fcomp
sbb
cwde
and
xchg
xchg
jnp
fisub
and
rcl
mov
cmp
push
cmp
push
ror
pushf
scas
cwde
sbb
outs
jmp
mov
jg
fs
shl
clc
adc
lock
loope
add
add
dec
sbb
lea
or
int3
jne
dec
pop
jbe
js
out
int3
(bad)
mov
lock
dec
mov
cli
pop
pop
jae
push
sbb
jnp
out
stos
loopne
jmp
dec
das
adc
out
add
add
add
push
or
js
mov
adc
clc
add
xor
jp
push
and
js
js
adc
mov
adc
push
das
and
mov
mov
xchg
add
inc
push
inc
in
mov
inc
rol
rol
sbb
loopne
dec
hlt
xlat
sbb
push
jo
fmul
sub
stos
(bad)
mul
sub
inc
inc
or
sbb
dec
add
outs
cmp
dec
jns
adc
aad
add
je
hlt
jmp
mov
inc
or
pop
call
inc
mov
inc
add
pop
ds
into
or
push
mov
jmp
and
or
inc
out
retf
pop
adc
in
in
call
push
jmp
mov
call
pop
loopne
ret
or
xchg
hlt
mov
xchg
mov
mov
xchg
and
push
adc
push
shl
sbb
xor
sbb
ins
cmp
cwde
(bad)
adc
cmc
daa
ret
sbb
adc
xor
cmp
or
jge
xchg
pop
sbb
bound
sbb
or
xchg
pop
cmps
call
inc
stos
inc
clc
inc
dec
loop
std
mov
add
add
sbb
and
sar
jns
adc
ins
(bad)
into
add
mov
ret
mov
pminsw
dec
and
mov
cdq
cmps
xor
add
push
or
jmp
fs
and
inc
mov
jle
cmc
mov
adc
or
cld
std
(bad)
cmp
xchg
ror
or
push
jecxz
fild
rol
adc
ret
dec
dec
inc
xor
or
out
not
scas
mov
sub
push
loopne
(bad)
fwait
cld
out
mov
lea
js
ficom
sar
dec
xor
adc
push
push
dec
repz
push
mov
or
xchg
mov
add
jge
sub
sbb
pop
push
rcr
ret
inc
cmp
mov
inc
push
or
dec
xor
push
push
pop
xor
pusha
xor
addr16
les
stc
push
in
mov
sar
adc
sub
xor
jge
je
les
pop
mov
and
cmp
shl
add
mov
fisub
sbb
(bad)
add
mov
sti
push
ret
adc
jb
lock
mov
mov
cmp
test
sbb
fwait
xchg
jbe
popa
sub
loop
je
test
jne
sbb
mov
mov
sbb
add
xor
pop
sub
mov
jae
add
cmps
mov
popf
lods
js
add
or
dec
outs
or
inc
sbb
jae
fbld
cmc
fiadd
add
inc
push
inc
movs
inc
cld
inc
dec
or
clc
mov
jne
sub
inc
adc
and
push
jge
push
push
push
test
and
repnz
pop
pop
inc
cmp
out
test
xchg
cmp
or
jnp
push
daa
pusha
add
xor
sub
test
sar
push
mov
pmaxsw
and
aas
dec
jnp
cmp
cmp
jle
outs
into
mov
mov
xor
mov
mov
and
push
test
aam
or
ins
add
push
je
(bad)
mov
inc
ret
mov
ffree
jne
mov
mov
and
add
in
pop
pop
and
inc
pop
push
clc
daa
mov
push
out
fldenv
test
push
push
mov
and
xor
loope
movs
rcl
cmp
cmp
lock
push
cwde
or
inc
cmps
sbb
or
hlt
ss
stc
xor
add
inc
lea
fist
sub
mov
push
push
add
xor
imul
sbb
push
cmp
push
fsubp
push
in
mov
das
jge
mov
iret
push
fcom
loopne
xor
dec
cmps
jb
adc
sbb
mov
or
aas
adc
pop
add
add
add
movs
mov
dec
inc
xchg
nop
and
mov
imul
je
aas
sbb
imul
js
call
pop
mov
loopne
push
popf
gs
or
cs
sti
js
adc
sbb
mov
xchg
sub
sbb
adc
cwde
dec
add
push
xchg
cmp
mov
adc
aad
mov
icebp
(bad)
sub
js
sub
pushf
add
or
leave
dec
nop
scas
enter
dec
nop
fmulp
sub
mov
jle
xchg
and
push
jne
mov
cs
sub
cdq
sbb
fdivr
xor
daa
or
adc
and
xor
bound
ss
push
mov
pop
push
es
cs
les
push
adc
(bad)
jmp
cmp
mov
add
out
rol
mov
add
(bad)
sbb
mov
cmps
in
adc
adc
fimul
add
mov
(bad)
jmp
movs
fs
enter
mov
inc
push
ret
cmp
push
pop
sub
and
push
jb
movs
cwde
clc
add
mov
add
bts
ins
xlat
inc
arpl
clc
(bad)
loope
adc
dec
pop
adc
push
or
push
fwait
mov
jb
pop
xor
sub
mov
xadd
push
push
sti
adc
aaa
jne
pop
ror
mov
adc
jns
pop
adc
(bad)
ja
and
adc
push
daa
jbe
jg
es
jmp
in
and
dec
pop
cmc
mov
arpl
cmovs
or
jne
dec
cvtdq2ps
push
in
or
shl
aas
or
ins
adc
xor
xchg
jbe
imul
add
rol
dec
sub
aad
add
xor
and
xor
add
pop
pop
sbb
pushf
cmp
push
push
xchg
(bad)
cmova
push
sub
jg
inc
mov
inc
cmp
pop
jne
pop
and
pop
enter
add
inc
mov
inc
dec
inc
push
lods
xor
imul
arpl
loopne
add
pushf
xchg
push
mov
gs
fmul
(bad)
push
nop
ds
loopne
jne
mov
rol
add
adc
in
sbb
out
aad
cmp
movs
push
or
push
imul
cmp
(bad)
sub
lock
xor
dec
loop
sub
scas
in
jb
ja
cmp
jb
jo
mov
fmul
mov
sub
mov
je
cwde
pop
mov
xchg
scas
in
adc
rcl
std
sub
or
jp
das
outs
cmps
and
sbb
lds
mov
pop
cld
fst
pop
int3
add
std
daa
xor
xchg
(bad)
pop
pop
add
pop
out
fwait
adc
add
mov
or
or
(bad)
adc
ret
fst
fisttp
or
mov
dec
and
icebp
and
fstp
push
shl
add
arpl
in
mov
mov
mov
dec
push
or
clc
dec
cmp
les
add
mov
cmp
ss
jge
or
or
fcmove
pop
cwde
cdq
jmp
(bad)
pop
nop
call
dec
rcr
aam
jb
and
dec
xchg
mov
mov
cmp
jmp
sbb
in
pop
cmps
out
push
jg
out
das
sbb
pop
pop
add
iret
jmp
inc
add
or
cmp
push
call
(bad)
and
dec
xchg
mov
imul
setge
rcl
pusha
(bad)
jmp
retf
call
popf
pop
and
sbb
leave
pcmpeqw
cdq
rol
aas
sbb
arpl
ret
(bad)
push
adc
sub
adc
fstp
add
inc
or
ret
mov
cmp
push
adc
prefetch
fcomp
xor
lock
or
adc
cmp
xor
jg
mov
push
dec
and
sbb
leave
les
dec
clc
xor
test
mov
push
or
and
cmp
inc
and
or
xchg
out
and
test
loop
add
push
xor
push
mov
cmc
mov
adc
cmp
jmp
cdq
mov
add
push
mov
push
inc
pop
adc
je
jl
pop
and
fadd
rcl
imul
rol
mov
xor
sbb
inc
adc
je
inc
imul
in
mov
add
xor
dec
mov
adc
push
or
jo
sti
push
sub
mov
enter
sbb
dec
xchg
pop
and
sbb
fild
dec
dec
mov
mov
pop
or
add
adc
inc
jmp
cmp
ret
xchg
lods
jo
jmp
cs
push
inc
jge
or
dec
add
push
icebp
(bad)
dec
add
hlt
lock
lahf
cs
lods
aad
cmps
ret
add
lea
push
data16
mov
data16
push
sub
sbb
add
sbb
adc
prefetch
xor
cmp
fidiv
adc
add
sub
mov
or
sub
loopne
add
leave
int3
jge
dec
push
xor
and
mov
cmps
fadd
and
dec
iret
or
pop
lods
pop
sub
push
inc
sub
aad
sar
pop
mov
add
nop
adc
in
mov
jbe
push
lea
mov
sub
lahf
ret
mov
add
push
add
xchg
add
clc
dec
add
ret
xchg
ror
mov
rcr
leave
jg
add
push
dec
adc
xor
ror
and
dec
and
js
xchg
pop
add
je
or
jae
add
xchg
enter
push
inc
push
inc
fsub
mov
pop
shl
sbb
fwait
xchg
ror
out
cmp
inc
rol
fidivr
dec
jl
popa
cld
jno
cmp
test
cmp
je
and
test
ins
mov
cmp
mov
test
scas
es
add
xchg
test
xor
sub
push
mov
nop
push
pop
xlat
lods
sbb
or
xor
into
fdivr
mov
mul
mov
scas
push
sar
lods
or
inc
push
inc
xchg
das
or
cwde
ret
cld
xor
lods
add
jg
push
icebp
sub
mov
mov
sbb
xchg
cmps
adc
ins
sub
lock
dec
arpl
adc
sub
test
mov
jmp
adc
rol
test
call
adc
daa
in
enter
adc
add
push
xor
ds
je
scas
pop
aad
jo
cs
adc
sub
dec
fcom
mov
adc
or
add
loop
sub
push
inc
and
pop
dec
pop
add
jb
or
push
test
bound
add
xchg
or
(bad)
xchg
sbb
cmp
pop
retf
nop
and
test
ror
test
and
add
mov
sbb
inc
test
daa
lds
xor
stos
jb
ret
push
push
adc
mov
loope
test
push
sub
jb
sub
icebp
add
mov
iret
or
xchg
(bad)
mov
leave
inc
jno
lods
inc
mov
iret
je
xchg
mov
xor
or
jne
inc
sub
dec
pop
cmp
pop
dec
cdq
sti
xchg
adc
add
sbb
cmp
adc
inc
stos
aaa
inc
leave
mov
retf
push
xchg
sti
lods
jecxz
push
and
add
retf
add
adc
sti
mov
jmp
mov
sub
lahf
pop
inc
dec
je
adc
cmp
ret
dec
inc
or
jmp
fwait
test
sbb
cmp
xchg
and
arpl
pop
cmp
mov
fcomp
ret
lods
inc
scas
add
fcomp
mov
adc
and
push
rcl
scas
pop
dec
mov
mov
add
pop
dec
in
jne
ror
cmp
bound
and
pop
push
mov
fadd
or
or
rcl
(bad)
or
outs
sub
and
xchg
pushw
(bad)
std
inc
push
add
les
fidivr
ss
xor
dec
mov
int3
adc
sbb
test
mov
movs
inc
or
gs
cmps
jg
int3
rcl
repnz
daa
aam
or
pop
pop
jp
loopne
add
or
add
or
cmps
xchg
xchg
xchg
xor
jns
mov
sub
fadd
ret
add
lea
dec
cs
or
jns
in
pop
or
or
mov
repnz
xchg
int3
xchg
loopne
xchg
jl
pop
pop
jns
xor
add
pop
or
mov
sub
or
xor
add
ins
jecxz
xchg
xor
and
retf
sub
imul
pop
je
adc
les
push
sbb
dec
xor
pop
jge
in
setnp
inc
inc
push
pop
arpl
imul
lods
icebp
inc
test
cmp
ss
xchg
fnstcw
jl
pop
pop
push
sub
dec
mov
add
inc
adc
(bad)
sub
sub
mov
push
cmp
or
jb
xchg
cmps
pop
adc
pusha
adc
je
pop
in
dec
add
jae
adc
inc
inc
aas
cmp
enter
sub
and
jl
mov
imul
add
mov
xchg
xor
xchg
movs
or
ror
ins
and
addr16
pop
adc
loope
push
add
fsubr
int
add
lods
jp
pop
add
iret
(bad)
adc
je
(bad)
mov
int3
and
pop
popa
sub
adc
xchg
out
mov
aaa
and
or
cld
mov
inc
hlt
shl
cmp
cmps
adc
and
dec
sbb
and
jns
jmp
aad
outs
mov
and
or
or
es
xor
adc
jl
test
inc
push
mov
stc
sbb
pop
das
out
add
push
rol
pause
push
sub
mov
stos
dec
repnz
adc
dec
jmp
je
(bad)
aad
jl
and
cmp
xor
mov
and
xor
std
aam
inc
sub
or
fdiv
cmp
jno
inc
psrld
cmp
icebp
and
push
pop
xor
in
test
stos
loope
stos
loopne
mov
test
sub
fdivr
imul
mov
cmp
jmp
mov
jb
fsub
shl
or
and
sub
shr
push
xor
mov
inc
add
ret
dec
push
jmp
jo
mov
xchg
adc
icebp
sbb
push
fcom
mov
mov
push
mov
and
lds
movs
cmp
movq
and
sub
mov
push
mov
dec
cmps
pop
je
push
or
jo
mov
outs
call
repz
hlt
xrelease
sub
adc
shl
daa
pop
mov
shl
cwde
push
jecxz
mov
inc
pushf
jmp
loopne
ins
imul
sub
jbe
jle
daa
inc
pop
jge
mov
mov
mov
adc
mov
je
cmp
arpl
nop
arpl
int3
add
lods
ja
xchg
(bad)
mov
inc
retf
call
or
inc
xlat
dec
push
mov
in
in
in
nop
retf
leave
in
cs
in
loopne
dec
scas
popf
je
mov
fistp
adc
mov
push
leave
or
jle
jle
mov
push
rcl
ins
fsub
mov
xchg
cld
mov
dec
sub
mov
jo
movs
dec
sub
or
imul
jecxz
cmp
jo
in
out
push
out
sub
adc
mov
xchg
sub
nop
add
cmp
mov
out
adc
jne
xchg
mov
aam
mov
lds
pusha
jae
cmp
fmul
inc
sub
test
xchg
jp
movs
add
mov
sub
adc
in
fist
add
dec
pushf
mov
mov
imul
mov
xor
sbb
push
aas
dec
call
lock
pop
and
cmp
mov
mov
pmulhuw
std
pop
rcl
pop
ret
fdivr
mov
mov
or
mov
add
pop
in
sbb
lods
mov
lgs
mov
cmp
jo
add
or
inc
dec
ja
(bad)
push
pop
mov
mov
and
ins
aas
and
inc
call
into
leave
dec
les
cmp
adc
stc
fidiv
or
or
cmp
cmp
call
pop
in
add
adc
bound
loopne
fcomi
ins
(bad)
das
xchg
cwde
jmp
inc
movs
cli
rcr
inc
push
test
inc
and
fiadd
popa
sbb
and
sbb
es
adc
jmp
xchg
in
imul
(bad)
shl
xchg
jae
gs
mov
inc
mov
push
int3
lds
stos
and
pop
es
xor
pfcmpge
lea
xor
pop
xor
mov
sbb
inc
mov
in
lea
sub
or
mov
mov
ret
in
mov
add
pusha
mov
sar
jno
jns
jmp
cmps
xchg
or
fisubr
leave
sar
cmp
adc
gs
(bad)
xchg
dec
ret
aas
lock
xor
jo
loopne
or
mov
sub
ret
xchg
dec
cmps
fwait
dec
mov
enter
sub
int3
push
adc
int3
cwde
jmp
and
sub
add
arpl
fist
retf
mov
push
or
mov
xor
or
cmps
mov
nop
sub
outs
mov
into
cmp
cld
mov
shl
fwait
cwde
jne
je
adc
adc
in
sbb
mov
call
xor
push
pop
(bad)
loopne
mov
mov
push
push
mov
in
fdiv
and
loopne
enter
test
xchg
push
dec
ret
paddusw
daa
retf
(bad)
clc
(bad)
dec
pop
les
pop
add
(bad)
(bad)
out
ror
fchs
bswap
outs
sub
dec
or
mov
xchg
daa
aam
(bad)
outs
sub
dec
enter
cdq
in
cmp
sub
mov
push
ins
xor
inc
(bad)
in
aam
inc
and
(bad)
fsub
(bad)
mov
mov
or
pop
xor
xchg
cmp
sbb
(bad)
or
and
inc
jb
pop
in
xlat
xchg
sbb
xor
add
stc
sbb
psubw
loop
mov
fisttp
nop
fimul
fdiv
fdiv
push
jno
shr
cs
xchg
mov
sbb
push
mov
movs
fnstcw
mov
bound
sbb
sub
popa
fisub
jne
xor
cmps
je
add
int
stos
pop
icebp
add
shl
xchg
and
loopne
sahf
inc
div
jb
mov
or
daa
sbb
jns
retf
pusha
xchg
imul
nop
push
in
cmp
ret
and
enter
adc
fwait
(bad)
sub
(bad)
loopne
lock
push
sub
xor
pop
addr16
and
movntq
out
mov
sub
push
adc
push
lods
dec
pop
jnp
test
and
lods
arpl
lds
fld
adc
cmc
and
repz
cmp
scas
ficomp
out
test
xchg
ficom
and
jo
fistp
leave
dec
sub
push
and
or
scas
mov
rcl
pop
jle
xor
in
push
test
ins
sbb
jle
loope
leave
leave
dec
add
add
adc
cld
arpl
sub
mov
dec
nop
loop
cmp
mov
pusha
adc
pop
push
test
sbb
cmps
enter
enter
cli
lds
pop
xor
jns
std
test
and
and
loope
cli
mov
adc
add
or
out
dec
add
in
adc
add
adc
pushf
jbe
enter
push
mov
not
fmul
sbb
sub
push
in
nop
hlt
adc
ficomp
jge
inc
sti
aam
xor
pushf
std
xchg
arpl
sub
cmp
clc
sub
iret
dec
xchg
sbb
test
hlt
mov
ret
lock
cmc
mov
adc
test
adc
enter
rcl
test
push
push
aam
jo
xlat
mov
inc
jo
loop
xor
jmp
int3
enter
fcomp
push
add
sbb
(bad)
rcr
jl
mov
nop
dec
lods
mov
and
adc
add
adc
xchg
ss
out
faddp
add
xchg
outs
or
sub
ret
xor
xchg
nop
add
dec
ret
xchg
push
or
mov
mov
sti
ret
or
push
inc
push
test
pop
inc
ins
mov
or
xchg
jne
push
lods
jg
jbe
mov
dec
push
stc
not
out
jno
sbb
add
adc
in
call
cmps
push
and
sbb
pusha
stos
imul
mov
mov
or
and
adc
jl
leave
and
add
jmp
inc
mov
xor
inc
enter
and
pop
movs
repnz
jmp
xchg
daa
test
add
ret
lock
sub
pop
adc
lds
in
pop
jecxz
or
push
outs
gs
push
pushf
xchg
xor
outs
adc
(bad)
in
call
add
and
in
and
in
inc
and
je
aaa
cmp
inc
fdivr
int3
ret
push
push
xor
sub
pop
and
xchg
js
push
out
pop
in
lods
add
pop
xor
test
sbb
lods
add
lea
lock
mov
arpl
(bad)
out
sti
sbb
loopne
das
nop
fld
out
je
add
lds
in
xor
addr16
push
aam
and
fadd
jo
and
push
pop
lock
lock
nop
add
lock
add
nop
lock
movs
inc
xor
cmp
add
icebp
js
dec
mov
shl
xchg
cld
repnz
and
sub
add
and
fcmovbe
inc
nop
and
ss
inc
and
xchg
and
push
repnz
dec
cmc
and
push
sbb
inc
movs
fdiv
jl
add
sbb
mov
ret
movs
outs
push
dec
cmps
ret
or
push
push
xchg
fcmovnb
sbb
push
sub
add
not
mov
outs
rol
shl
or
xchg
and
sub
(bad)
add
das
lods
clc
push
nop
mov
ins
xor
int3
xor
inc
arpl
in
dec
mov
mov
movs
fadd
add
shl
sti
adc
mov
mov
mov
cld
or
outs
inc
mov
sbb
sub
pop
cmp
movs
cwde
in
les
inc
adc
sub
jg
fs
adc
or
adc
ror
adc
inc
cs
sbb
sub
add
call
test
pop
jnp
add
test
and
les
fwait
rol
cmp
pop
sbb
adc
inc
lods
dec
sub
rol
and
or
lahf
aam
pushf
xchg
in
in
inc
mov
das
cmp
mov
call
mov
sbb
fsub
int3
or
dec
loope
aam
or
ins
cdq
xor
push
push
mov
mov
cmp
pop
in
mov
je
outs
leave
xor
push
cmp
stos
mov
wbinvd
add
and
cmp
cmp
mov
push
fld
cwde
adc
lods
xor
loopne
jmp
sbb
jle
clc
and
push
ror
add
daa
pop
adc
mov
sbb
fisttp
daa
nop
icebp
and
bound
xor
pop
out
int3
scas
mov
mov
mov
aas
stc
xor
fdiv
unpcklps
das
adc
retf
pop
scas
jne
repnz
push
and
and
retf
jno
jl
retw
inc
test
je
inc
mov
test
xchg
pop
add
cmp
les
push
sub
call
repnz
push
iret
or
adc
xchg
push
sub
addr16
or
mov
or
and
shl
cwde
int3
dec
rol
add
mov
aaa
push
mov
sbb
xchg
mov
jo
popf
sub
iret
push
sub
movs
jb
push
or
xchg
mov
lock
mov
(bad)
popa
pop
sub
shr
push
call
adc
or
inc
inc
(bad)
mov
mov
call
xor
fcom
jecxz
push
inc
gs
sub
jp
jmp
jmp
imul
adc
test
or
mov
fistp
adc
push
shl
sbb
ins
lds
cdq
cdq
cmp
cmc
outs
push
test
add
xlat
xchg
jne
xchg
inc
jbe
adc
in
inc
mov
stos
mov
lods
sub
sbb
gs
aam
xchg
outs
cmp
pop
inc
mov
stc
je
jecxz
pusha
in
push
ficom
push
push
loopne
retf
adc
outs
in
sbb
ss
adc
fst
inc
out
xchg
sbb
inc
and
enter
stc
adc
js
movs
adc
out
inc
test
repz
mov
test
push
aad
adc
push
inc
aaa
and
dec
call
lock
push
adc
retf
pop
and
jl
outs
sbb
sbb
and
jg
cmp
retf
loopne
adc
cmp
movs
enter
ja
push
mov
movs
xchg
in
in
or
sbb
add
mov
mov
ror
fdivr
push
xor
cmp
cmp
test
in
or
mov
xor
jne
push
cmp
sub
les
dec
mov
rcl
addr16
dec
add
fist
and
fnstsw
mov
mov
inc
addr16
ins
and
cmp
in
add
in
xchg
jbe
jg
das
test
les
cmps
outs
dec
ss
pop
das
psubsb
test
lods
in
mov
inc
ror
aam
pop
mov
pop
pop
sbb
adc
and
pop
bound
(bad)
push
mov
(bad)
outs
jbe
add
fcomp
mov
jg
push
sbb
dec
lahf
mov
inc
nop
movq
push
movs
ret
sbb
xchg
cwde
sbb
jecxz
jb
and
lods
cmp
inc
add
loopne
adc
(bad)
aam
dec
pushf
and
and
add
sti
adc
cmp
adc
mov
call
jb
mov
lods
and
xchg
cmp
add
mov
fs
int3
pop
enter
push
mov
mov
shl
mov
int
mov
pop
fmul
in
mov
cmp
mov
or
sub
pop
shl
pop
push
loopne
es
add
xor
sub
sar
mov
and
push
cmp
add
in
add
xchg
mov
fdivr
leave
pusha
jmp
or
data16
das
adc
test
gs
mov
sub
add
jbe
xchg
aam
xor
sbb
aad
xchg
aaa
pushf
hlt
inc
sub
sub
jmp
cmp
dec
ror
mov
(bad)
xchg
sub
adc
test
icebp
adc
test
sub
fs
xchg
sbb
xchg
aam
inc
ss
mov
scas
fcom
fidiv
dec
scas
rcl
sbb
cmp
mov
mov
mov
nop
push
adc
xchg
fcomp
dec
dec
xchg
add
fld
xor
mov
(bad)
stos
push
push
mov
pop
sbb
cmps
dec
inc
daa
cmp
and
mov
mov
sub
sub
cmp
push
pop
cmps
test
les
out
pusha
in
jmp
nop
add
test
je
(bad)
xchg
mov
add
and
sub
xchg
popf
sub
jne
cs
jl
mov
enter
ror
test
mov
test
jmp
test
movs
or
rdpmc
int3
adc
jl
jb
inc
aam
sub
cmp
and
jb
inc
push
in
cmp
pop
or
pushf
xchg
enter
and
dec
cld
xor
jb
ss
mov
pop
cmp
nop
or
mov
enter
cmp
daa
sbb
mov
call
inc
cmp
clc
add
nop
out
dec
out
add
cmp
adc
cmp
sbb
cmp
nop
outs
push
pop
sub
xchg
xor
add
cmp
in
fs
ficomp
mov
mov
cmps
dec
enter
aas
fadd
push
add
jno
xor
xchg
cmps
(bad)
xchg
loopne
xchg
sub
clc
inc
inc
ins
and
stos
add
and
cwde
push
mov
in
mov
or
cmps
xchg
mov
xor
cs
outs
lock
sub
loopne
mov
push
mov
inc
mov
cmp
test
inc
mov
jmp
add
or
sub
mov
and
sbb
sbb
and
xchg
xchg
dec
mov
inc
adc
push
leave
push
xor
rcl
in
jns
xor
cmp
xor
and
push
inc
or
or
mov
pop
movs
lock
push
push
or
jmp
adc
aam
mov
sub
adc
(bad)
ret
aas
dec
xchg
add
sub
data16
push
mov
ja
mov
dec
or
push
dec
pop
mov
mov
inc
xchg
nop
fdiv
fmul
inc
ret
shl
adc
pushf
dec
pop
nop
cwde
or
pop
add
inc
and
xchg
or
outs
das
cmp
sub
movsx
call
in
(bad)
sbb
sub
and
and
inc
dec
test
xchg
outs
jae
adc
fmul
sar
stc
push
gs
std
mov
lods
(bad)
and
inc
in
mov
pop
dec
es
dec
fdivr
sar
push
stc
cs
call
inc
ds
xlat
inc
ins
fcomp
aaa
ins
or
xchg
fcom
popf
mov
leave
stos
mov
mov
sub
mov
mov
xor
or
xor
dec
pusha
adc
scas
xor
test
or
fisub
pushf
adc
and
pop
dec
in
lock
push
or
loopne
test
leave
push
or
pop
shr
cmps
mov
and
aaa
mov
adc
(bad)
mov
repz
push
les
inc
mov
jl
pop
imul
xchg
push
mov
dec
loopne
push
adc
push
sbb
nop
out
push
adc
mov
rol
jmp
enter
xchg
dec
es
int3
fcom
dec
es
imul
sub
sub
xor
loope
add
ret
xor
or
xlat
es
and
scas
dec
pushf
inc
cld
leave
in
daa
cdq
neg
fcom
or
xor
ret
or
test
je
leave
push
loopne
js
in
fsub
pop
fcom
test
fild
push
and
fbld
push
push
sbb
cmp
mov
mov
or
fadd
rcr
cmps
sbb
jb
daa
ins
dec
pusha
in
call
cmp
push
and
push
sub
(bad)
loope
pushf
mov
inc
dec
fwait
or
xor
mov
pop
add
or
push
rcr
jb
inc
push
pop
xor
xor
adc
sub
add
dec
fcomp
mov
xor
shl
les
cmp
inc
aam
mov
mov
fdiv
cmp
sbb
imul
mov
xchg
xchg
xchg
pop
sbb
push
fcom
fisubr
or
dec
mov
pop
push
add
inc
xor
pop
pop
push
pop
(bad)
or
movs
cmps
lds
loopne
mov
or
leave
add
in
jb
stos
loop
mov
fild
test
xor
fs
push
jl
sub
ss
nop
clc
jns
outs
shl
cdq
pop
dec
iret
mov
dec
mov
and
retf
mov
mov
test
jb
popa
xor
call
jmp
mov
adc
jg
xor
add
inc
cwde
cmp
lods
dec
cmp
je
in
out
and
add
inc
inc
sti
(bad)
retf
es
jne
out
jmp
inc
enter
arpl
loopne
xlat
and
ins
arpl
adc
push
adc
push
xlat
xchg
in
inc
and
add
loopne
dec
xchg
mov
fs
daa
or
pop
push
cmps
leave
sahf
scas
push
rol
sub
lods
jecxz
aas
push
mov
nop
inc
mov
gs
rcr
or
test
gs
in
cmp
rol
xor
mov
stc
pop
mov
sub
in
add
cdq
in
inc
and
inc
or
xlat
jno
je
jno
addr16
pop
aaa
jmp
mov
sbb
jecxz
ror
std
dec
push
pop
add
push
fdiv
lea
mov
int3
test
jmp
pop
mov
xchg
xchg
mov
dec
and
pop
test
cmc
fsubrp
adc
bnd
lock
jmp
or
and
test
popf
test
xchg
push
test
loope
or
sub
xchg
sbb
inc
push
add
cli
in
dec
pop
sub
leave
dec
scas
lods
adc
(bad)
push
test
push
xchg
jo
daa
push
sbb
dec
enter
movs
sub
pop
add
and
inc
enter
mov
imul
idiv
pushf
mov
xchg
nop
sub
pop
inc
fsub
imul
pop
ins
and
bound
cwde
push
adc
adc
sub
and
lock
lock
loopne
loop
fmul
out
rol
ins
mov
adc
ret
mov
jmp
outs
or
outs
ins
dec
or
push
dec
adc
cwde
xor
push
or
pop
int3
sbb
fadd
adc
outs
pusha
shl
inc
pushf
test
adc
dec
or
mov
stos
add
add
loopne
or
push
lods
fdivr
jno
sub
jno
das
jno
mov
push
rcl
js
stos
mov
fild
push
sbb
jge
cmps
test
jb
xor
sub
fisubr
lods
xchg
cmp
or
cmp
in
lods
inc
cmp
aam
xchg
xchg
dec
cwde
call
inc
dec
je
jne
mov
scas
and
call
movs
push
pop
push
jne
add
sub
dec
js
jo
lock
mov
push
xchg
sub
push
sar
fist
add
inc
jmp
pop
and
xor
add
(bad)
push
lods
loopne
inc
movs
push
lods
fcomp
jmp
jbe
je
pop
mov
inc
cmp
ja
dec
daa
inc
mov
rcr
dec
out
push
inc
push
adc
add
add
jge
std
inc
or
in
adc
rol
push
mov
add
inc
ins
enter
dec
out
mov
pop
lds
aam
test
add
add
inc
sbb
xchg
xchg
xor
or
mov
sub
xchg
sub
or
test
mov
nop
mov
sub
lods
push
jb
not
cdq
cmp
mov
popa
jb
dec
ror
(bad)
or
adc
and
adc
sbb
rol
je
call
sub
jb
fld
add
dec
lea
mov
sub
fistp
add
add
xchg
sbb
sub
pop
(bad)
mov
xchg
push
dec
mov
imul
pop
jb
mov
jg
jb
and
enter
pushf
popf
enter
mov
pop
jb
test
xchg
lods
lds
es
jno
addr16
inc
fnstcw
imul
push
sub
or
xchg
sub
inc
sub
in
in
dec
fdiv
xor
in
fnstenv
add
mov
add
lods
sub
imul
jb
adc
mov
les
sub
adc
enter
push
test
sbb
mov
mov
pop
leave
and
gs
sub
imul
sub
clc
xor
and
and
xor
push
dec
jb
fstp
and
daa
cmp
push
out
xchg
inc
sub
mov
dec
mov
xchg
sbb
lods
movs
push
sbb
cmp
shl
xchg
xor
and
push
imul
je
sbb
pusha
sti
pusha
xor
or
pop
jb
test
and
cmp
les
push
js
jmp
pop
xchg
inc
mov
mov
mov
in
shr
cmp
xchg
dec
les
cmp
xchg
inc
pop
int3
imul
jae
xchg
inc
cmp
xchg
cmp
fcom
xchg
fwait
in
pop
lods
pop
jb
scas
mov
clc
sub
out
ins
jns
or
in
cmp
or
xchg
mov
fcmovb
add
inc
push
adc
cmp
xchg
sub
mov
movs
push
jns
cwde
pushf
mov
movs
test
mov
iret
cmp
jb
mov
(bad)
push
push
in
adc
(bad)
in
lock
xchg
retf
clc
cld
push
add
data16
imul
adc
jmp
out
cmp
inc
push
push
adc
inc
push
inc
test
mov
or
sub
rcr
pusha
in
or
clc
lds
push
push
cmp
je
xor
(bad)
xchg
dec
movs
test
mov
in
test
add
or
aam
xor
loope
out
retf
push
aas
adc
dec
add
cmps
addr16
or
adc
add
mov
sub
pop
xor
in
inc
and
xchg
xchg
jae
dec
or
mov
xchg
pop
xor
add
pop
and
and
inc
pop
imul
sub
fdivr
and
shl
mov
inc
push
sbb
shl
add
pop
push
inc
mov
call
nop
loope
ins
inc
cmp
fst
out
xor
in
mov
repnz
(bad)
sbb
xlat
cmp
imul
xor
mov
loopne
xchg
jmp
clc
pop
xchg
ret
int3
ss
(bad)
push
jecxz
cmps
inc
sbb
jo
xchg
and
cmp
enter
mov
and
pop
cmp
add
mov
mov
sbb
fwait
sbb
mov
push
cmp
mov
nop
inc
cwde
pushf
mov
movs
test
nop
inc
push
cmp
cmp
aam
cld
xchg
enter
or
jb
and
adc
jb
and
and
and
cmp
sbb
enter
dec
sbb
enter
pop
jb
and
and
adc
js
mov
es
enter
in
rcl
push
cmp
nop
fcomp
loopne
movs
push
ficomp
mov
dec
es
adc
adc
cmp
or
shr
cmp
pop
adc
nop
adc
arpl
les
xlat
mov
int
fild
rcr
jae
cmp
fcom
mov
mov
mov
fidivr
inc
test
cmp
daa
mov
xlat
push
inc
rcl
lods
cmps
ins
pop
mov
adc
push
cld
push
int3
add
call
push
(bad)
aas
jmp
mov
pop
test
pop
xchg
jns
int
push
push
out
mov
es
mov
outs
test
xchg
push
loop
pushf
repz
out
mov
mov
jns
int
jle
sub
ins
fwait
out
sahf
xchg
cmps
enter
or
repz
ss
bound
cmp
repz
sahf
int
sbb
inc
pop
sahf
out
sahf
jb
test
fdivrp
cmp
rep
adc
cmp
repz
mov
in
add
jns
out
cmp
out
sahf
test
adc
cmp
sbb
inc
out
push
ins
sbb
(bad)
(bad)
cld
test
ss
repz
sub
mov
out
jp
repz
repz
lods
ret
fcmovnb
lea
add
inc
add
out
int
aaa
ret
popf
add
sbb
dec
scas
sti
xchg
push
sahf
inc
push
fstp
push
dec
pusha
test
or
push
xchg
add
and
push
push
jnp
adc
push
js
jo
fbstp
fdiv
pop
push
andnps
outs
outs
ja
and
arpl
(bad)
push
je
outs
outs
nop
inc
imul
jne
inc
popa
ins
ins
bound
imul
outs
scas
xor
push
jb
addr16
jae
push
add
ins
outs
add
or
jae
pusha
or
adc
cmp
push
inc
mov
fldcw
out
and
inc
xor
imul
push
or
push
sub
sbb
add
push
shl
push
dec
add
jp
cmc
push
lods
push
leave
inc
jmp
(bad)
mov
jbe
sbb
push
sbb
mov
or
imul
pop
movs
out
(bad)
and
pop
jp
cmps
in
lds
and
pop
ins
ss
lock
push
push
push
push
and
fdivr
xchg
inc
je
ret
lahf
push
ss
gs
jb
gs
ins
sahf
mov
fs
lods
push
outs
jb
dec
out
fdivp
jle
mov
sub
(bad)
xor
xor
gs
mov
leave
xor
data16
or
sub
popa
jae
aad
idiv
mov
push
jbe
arpl
cmp
and
bound
jb
jo
std
sub
daa
or
and
pop
outs
jae
in
mov
cmp
bound
pop
gs
das
xchg
xchg
mov
call
stc
mov
inc
ins
fs
dec
jg
out
cmp
add
jp
mov
xchg
stos
cmp
pop
mov
inc
dec
(bad)
jb
inc
xor
loopne
and
fbstp
xor
push
sub
mov
add
jae
loope
add
jb
or
push
add
add
pusha
add
lods
add
and
sub
outs
add
mov
loopne
icebp
pop
xor
sub
dec
mov
jne
ins
inc
jb
inc
inc
ins
addr16
(bad)
mov
dec
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
lods
xor
jbe
(bad)
cmp
pop
pop
popa
bound
gs
imul
jno
call
mov
jns
xor
xor
xor
ss
cmp
sub
(bad)
pop
neg
xchg
jbe
mov
call
pop
neg
bound
xchg
mov
pop
hlt
push
lds
add
pop
mov
(bad)
jg
push
dec
push
pop
stc
shr
or
out
jne
mov
cmp
push
xchg
push
aad
mov
ss
stos
cdq
popa
loope
pop
int
jnp
adc
sub
cwde
add
ins
mov
sahf
icebp
jns
add
push
popf
pop
js
int
ins
out
mov
fistp
push
jbe
pop
sahf
out
sahf
or
aas
push
jns
cmp
out
ret
call
repz
repz
mov
sahf
addr16
sbb
mov
shr
mov
pop
push
ins
aaa
in
add
and
add
(bad)
(bad)
ds
ror
mov
pop
bound
(bad)
mov
sub
aaa
das
xor
mov
ins
jle
call
fsub
fnstcw
add
push
add
sub
sbb
or
out
(bad)
loop
add
ficom
or
fld
mov
inc
add
inc
ss
cmp
movs
xchg
mov
cmp
int
add
adc
inc
ins
push
hlt
(bad)
aas
add
repz
sahf
idiv
ds
arpl
aas
scas
pop
cmp
dec
call
in
jg
jnp
ror
push
jle
pop
cs
xor
mov
mov
cmps
pop
div
(bad)
push
sub
pop
push
mov
push
fwait
addr16
js
mov
xor
sub
fsub
mov
pop
pop
push
pop
xchg
div
out
mov
cmp
mov
iret
jnp
push
cli
xchg
push
sti
popa
pmaxub
iret
bound
mov
pop
cmp
ins
pop
scas
push
add
ds
imul
push
mov
cmp
cmps
inc
add
xor
pop
enter
test
fdiv
fldcw
fdivr
pop
jecxz
in
lahf
idiv
xchg
mov
in
sahf
in
add
out
push
pop
stc
out
xchg
cli
out
mov
push
lock
cld
jnp
std
outs
std
xchg
add
add
pop
dec
lahf
data16
not
adc
ficom
xor
out
setl
push
jb
arpl
bound
je
or
ins
push
imul
imul
mov
imul
xchg
and
addr16
pop
inc
inc
push
push
dec
dec
dec
pop
adc
psadbw
inc
push
push
inc
pop
dec
inc
dec
inc
dec
inc
push
aaa
inc
inc
adc
pop
push
ret
ins
push
dec
inc
and
inc
inc
inc
cld
pop
mov
gs
outs
push
jb
inc
xchg
sub
cwde
add
sub
cs
jb
je
gs
cld
mov
cs
dec
outs
imul
bound
inc
jb
outs
jb
inc
outs
dec
outs
fs
ins
or
sub
jb
push
jo
arpl
scas
adc
and
xlat
outs
jb
push
arpl
jne
mov
inc
dec
mov
inc
inc
mov
dec
dec
push
and
push
in
fs
push
cs
cmp
pop
js
call
imul
arpl
addr16
jo
loopne
popa
fs
(bad)
daa
jg
inc
dec
je
push
push
sub
mov
outs
movs
outs
push
sub
in
arpl
pop
addr16
imul
sbb
repz
push
push
outs
push
mov
xor
mov
outs
mul
(bad)
dec
inc
pop
pop
dec
dec
inc
inc
dec
pop
dec
inc
inc
dec
dec
dec
inc
outs
data16
cmp
mov
popa
js
clc
test
stos
das
push
push
aas
outs
cmp
push
stos
push
(bad)
push
loopne
popf
pop
arpl
push
add
imul
dec
das
xor
and
adc
arpl
imul
aaa
push
xor
add
jbe
jo
xor
cs
outs
push
mov
retf
je
add
outs
cmps
and
add
montmul
cmps
inc
or
ins
push
imul
jbe
xlat
add
add
loopne
sbb
sbb
and
xor
xor
push
nop
and
inc
cld
inc
loop
mov
inc
xchg
sub
ror
in
fs
xchg
dec
stos
sub
jbe
fadd
lahf
test
nop
jge
dec
jl
std
mov
dec
adc
or
dec
or
(bad)
xlat
cld
mov
mov
rcl
add
int3
add
sub
mov
add
add
stos
es
aas
inc
repnz
ds
jnp
stos
xor
cs
sub
imul
push
pop
push
sar
adc
add
cli
pop
aas
add
clc
ss
outs
out
pop
or
push
inc
rol
add
xor
into
lock
xchg
xchg
ds
nop
xchg
fidivr
add
lods
add
int
and
invd
stc
or
add
jl
or
jg
jnp
dec
bound
popa
stc
push
mov
loopne
jmp
test
xlat
add
jb
jns
loopne
jecxz
addr16
js
ins
dec
jb
pop
and
mov
into
jb
add
inc
fmulp
add
fs
mov
xchg
ins
push
sub
jnp
cmp
mov
xor
mov
ds
fst
xor
push
push
mov
movs
fwait
int
push
dec
mov
pop
sub
pop
imul
fs
inc
loope
xor
outs
js
pop
stos
ss
test
adc
ins
repz
mov
add
je
inc
or
or
fidiv
je
addr16
inc
movs
mov
outs
dec
push
popa
clc
jmp
arpl
mov
mov
outs
adc
push
pop
push
jns
fidiv
push
enter
(bad)
push
dec
jae
popf
jo
cmp
pop
xor
pop
popa
imul
outs
jne
imul
arpl
je
push
and
mov
ins
dec
out
mov
jbe
pop
pop
neg
cmp
push
pop
sti
neg
arpl
inc
gs
mov
mul
popaw
loope
and
pop
inc
sti
xchg
out
out
inc
sbb
jg
jmp
jnp
sbb
rcl
out
pop
inc
gs
mov
and
ja
xchg
cmp
jnp
push
scas
fs
aas
imul
das
xor
inc
inc
pop
push
fsub
sbb
pop
push
mov
fdivr
shl
mov
xor
mov
(bad)
jecxz
adc
addr16
je
loope
test
fs
xchg
out
gs
jae
js
jb
je
ds
cmp
add
imul
imul
inc
mov
mov
pop
jl
inc
ja
(bad)
adc
push
jb
xor
sbb
je
out
mov
pop
push
pop
fadd
push
push
out
call
inc
fbstp
or
rcr
push
pop
add
sti
sahf
out
pop
push
push
addr16
jns
and
mov
mov
inc
lock
daa
inc
jb
je
pop
pop
jnp
jns
dec
daa
(bad)
jbe
jp
outs
push
dec
iret
arpl
push
xor
neg
imul
fild
dec
pop
pop
pop
(bad)
icebp
bound
add
inc
jecxz
out
loop
jl
je
jae
call
pop
mov
pop
cmp
aam
out
sbb
sbb
inc
mov
push
je
loopne
jp
xlat
cmps
push
je
arpl
rcr
mov
pop
push
frstor
mov
xchg
jae
xlat
and
and
jae
ja
je
jbe
jbe
bound
fstp
cmc
push
psadbw
push
push
cs
aad
addr16
(bad)
jne
xchg
jne
out
shl
inc
and
push
js
jbe
dec
je
mov
sbb
scas
repz
push
jb
test
xchg
data16
popa
nop
add
daa
outs
pop
scas
inc
cmp
pop
sub
ins
inc
outs
sub
push
ins
or
mov
xchg
sub
push
mul
mov
ja
pop
push
enter
cmp
or
and
jbe
addr16
xchg
push
stos
xor
jbe
push
rol
scas
call
call
out
jns
int
mov
imul
das
jb
arpl
ins
sar
mov
dec
gs
xor
push
ja
xor
popa
jo
or
add
add
aaa
imul
or
hlt
mov
jae
daa
out
retf
xor
and
loop
mov
aaa
data16
scas
pop
pop
cmps
imul
sub
mov
test
push
ret
out
repnz
xor
jb
out
es
jae
inc
ja
scas
jp
fist
jae
pop
xchg
jo
pop
jp
mov
adc
aas
or
mov
or
fadd
sysret
pop
loopne
lahf
dec
jle
xchg
mov
lock
xchg
jp
xor
scas
and
or
and
and
mov
retf
pop
(bad)
inc
ins
outs
jbe
leave
add
pop
push
pop
jg
push
jo
jae
ins
and
mov
iret
xor
stos
adc
test
es
cs
das
mov
mov
outs
jae
pop
(bad)
mov
and
push
xchg
(bad)
imul
cmp
outs
jmp
fdivrp
outs
add
and
jmp
mov
ss
das
fwait
pop
add
jbe
fsub
scas
ja
shr
lds
outs
jge
xor
add
cmp
data16
icebp
or
fdiv
xlat
pop
dec
mov
daa
adc
or
cwde
gs
inc
cmps
rol
mov
fwait
gs
or
adc
imul
dec
xor
(bad)
not
call
loop
add
sbb
outs
pusha
sbb
add
test
add
xor
mov
std
push
in
cld
adc
push
or
add
aaa
mov
stos
sbb
jge
ficom
mov
cmp
adc
lds
pusha
mov
or
mov
pop
inc
lahf
js
loopne
ins
push
bound
add
rcr
inc
jne
arpl
stos
add
ret
adc
add
ret
sub
xchg
clc
ret
push
push
jo
jl
into
add
jl
js
add
cmp
daa
mov
mov
pop
adc
rcr
xchg
pop
dec
add
inc
adc
inc
inc
jne
(bad)
or
and
add
jle
or
daa
pop
ins
in
nop
cmp
pop
pop
mov
xor
adc
inc
cmp
repnz
add
retf
call
imul
out
xchg
add
xor
jns
das
(bad)
fisubr
pop
jbe
add
jl
addr16
xor
jecxz
jae
cmp
pop
mov
fdivr
jno
daa
push
and
nop
das
ds
cmp
adc
jl
pushf
shl
and
sahf
aas
je
pop
mov
pop
popa
fwait
outs
imul
ins
xor
sbb
cmp
imul
ror
inc
ins
cmps
out
rcr
mov
daa
mul
inc
outs
loopne
jne
jae
dec
or
push
jecxz
jp
sbb
in
sbb
jne
aad
loop
adc
jae
and
out
rcl
mov
cmp
ss
pop
xchg
out
loop
cs
js
push
sbb
jg
stos
cmp
cmp
xchg
call
inc
xlat
outs
aas
sub
xchg
test
movs
sub
outs
jnp
jnp
addr16
push
jle
jo
hlt
xor
mov
jno
outs
sub
push
cmp
call
jg
xchg
xchg
cmp
bnd
jne
adc
cmp
jbe
test
dec
push
add
and
int3
call
mov
sahf
add
mov
ret
mov
inc
or
sub
xchg
or
ficomp
fiadd
adc
jbe
sbb
push
cmp
fs
adc
or
or
iret
fs
outs
inc
pop
test
dec
outs
inc
cli
sahf
adc
inc
out
dec
and
das
mov
xor
adc
xor
xor
ds
dec
push
and
rcl
xor
mov
outs
inc
and
sbb
das
ja
or
outs
in
or
jnp
das
xchg
push
or
xor
fmul
sub
or
outs
sbb
js
mov
add
pop
cmp
ins
or
add
(bad)
cmps
loope
mov
arpl
sbb
outs
and
mov
jp
ja
pop
scas
inc
jg
ja
ret
shl
cs
sub
push
dec
imul
mov
jae
jo
push
lods
xchg
jns
lods
or
cs
ret
je
push
xchg
rol
das
push
xchg
loope
inc
aaa
lahf
inc
or
je
jo
das
das
xlat
dec
adc
xor
fild
xchg
mov
pop
daa
inc
das
ror
sub
gs
push
outs
add
inc
or
outs
cmp
inc
outs
inc
xchg
mov
stos
jmp
jo
add
cmp
adc
or
inc
sub
mov
xor
adc
and
imul
aas
pop
fcomp
(bad)
xor
xor
inc
fist
sub
out
dec
mov
push
dec
(bad)
pop
aaa
ds
stos
dec
(bad)
push
sbb
hlt
and
push
sbb
jl
rcl
jle
dec
lahf
pop
ret
jecxz
arpl
mov
inc
sbb
mov
dec
inc
xor
in
cmp
inc
inc
pop
jae
test
mov
jg
or
push
mov
outs
adc
scas
adc
pop
and
stos
dec
(bad)
xor
sbb
push
scas
adc
pop
inc
push
(bad)
lock
xor
mov
cs
inc
dec
push
dec
pushf
adc
dec
push
ret
pusha
mov
dec
test
rcl
jae
add
scas
pop
pop
rcr
push
sub
dec
push
push
das
and
push
sub
outs
je
ins
hlt
xor
and
aas
dec
sub
adc
pop
not
ins
test
inc
mov
dec
cmp
inc
outs
and
and
and
ds
imul
push
stos
mov
stos
mov
cmp
mov
bound
push
xor
imul
loop
add
clc
cmps
push
dec
dec
push
push
inc
dec
dec
pop
ins
aam
pop
inc
stos
inc
js
mov
gs
pop
jmp
sub
jne
sbb
sbb
sbb
and
xor
sti
mov
imul
jp
dec
mov
lds
sti
dec
pop
inc
or
pop
jmp
icebp
xchg
cdq
xchg
dec
dec
ja
push
jno
aaa
pop
pop
ror
loopne
push
jno
enter
call
adc
ins
pop
add
dec
xchg
push
pop
lock
scas
stos
jp
pop
or
jle
outs
dec
scas
jecxz
add
mov
rcr
ret
jns
pop
xor
fstp
loope
dec
or
or
imul
mov
aas
addr16
and
or
xlat
inc
dec
inc
or
and
stos
sub
shr
mov
lahf
cmp
test
in
fisubr
jo
outs
enter
inc
or
adc
fisub
stos
lahf
pop
sub
rcr
sub
inc
xor
js
add
ror
jne
add
cmps
mov
js
sti
inc
(bad)
ror
push
mov
js
jecxz
(bad)
hlt
and
push
pop
or
xchg
cwde
xlat
add
or
scas
sub
mov
inc
mov
js
bound
adc
sbb
bound
mov
aaa
mov
cmp
and
jo
pop
dec
mov
iret
inc
pop
test
aas
cmp
movs
ret
aaa
dec
outs
fiadd
rol
ins
adc
repz
outs
pop
pop
je
inc
imul
dec
pusha
pop
aas
cmc
fwait
mov
push
push
xor
ins
pop
addr16
in
ss
sub
mov
enter
sbb
mov
dec
xlat
add
push
mov
jg
adc
das
pop
pop
fs
jo
das
movs
inc
stos
es
jge
xor
mov
xor
cmp
fs
xchg
jl
jbe
das
jb
(bad)
ret
jnp
push
inc
inc
je
(bad)
gs
or
popf
mov
cmp
jmp
ins
and
and
or
fisttp
push
dec
fdivr
push
push
inc
push
inc
pop
dec
imul
outs
mov
ins
xlat
(bad)
xor
push
or
cmp
les
inc
dec
dec
inc
dec
push
dec
inc
inc
push
push
js
xchg
addr16
popf
or
sahf
es
stos
add
xchg
dec
adc
or
out
inc
bound
sub
dec
outs
rcr
sub
out
mov
popa
push
shr
jae
aaa
jmp
(bad)
fsub
push
or
mov
shld
sbb
mov
test
mov
sbb
out
xchg
jp
addr16
adc
loopne
aas
pop
dec
xor
add
xor
outs
cmp
and
imul
daa
popw
arpl
cmp
in
jle
pop
(bad)
outs
test
push
daa
mov
mov
xchg
ret
outs
es
out
or
adc
popa
hlt
shl
and
into
mov
mov
sbb
jbe
push
sub
or
aaa
lahf
les
mov
aas
out
jmp
dec
adc
scas
mov
js
pop
aas
push
cmc
std
xchg
xchg
stos
xchg
pop
daa
push
jnp
pop
lods
mov
sti
dec
out
outs
stos
sbb
jae
dec
mov
inc
sub
je
dec
push
inc
jnp
adc
stos
in
or
fisub
push
and
pop
push
es
popf
mov
push
lahf
inc
outs
push
sub
push
push
push
jmp
dec
sbb
add
push
pop
and
loopne
(bad)
add
push
sbb
and
sar
push
inc
cmp
pop
icebp
fimul
repz
push
dec
push
dec
add
dec
xchg
ja
push
addr16
mov
mov
fwait
push
daa
dec
mov
dec
sbb
add
ss
imul
ret
xchg
dec
xor
xchg
mov
xchg
(bad)
jp
pop
pop
jl
shl
dec
retf
inc
cs
cmp
cmp
inc
dec
inc
sahf
mov
sbb
adc
inc
jo
push
pop
cmps
xchg
lock
je
inc
pop
ret
dec
out
push
(bad)
(bad)
inc
out
and
and
mov
mov
in
clc
ss
dec
jae
push
(bad)
icebp
pop
or
aaa
inc
xlat
push
ss
adc
pusha
je
inc
push
sub
mov
addr16
xchg
ret
js
jne
pop
xchg
sub
sahf
push
addr16
push
sbb
imul
ss
jo
jge
arpl
cld
adc
jl
bound
xchg
or
ins
inc
popa
psubusb
xlat
rol
movs
jb
sbb
fwait
in
jae
add
add
outs
movs
pop
mov
add
jl
je
jo
and
mov
pop
push
or
pop
push
sbb
(bad)
(bad)
mov
sub
aas
pop
pop
jl
sub
cmp
inc
outs
xchg
xchg
retf
inc
outs
repz
xchg
nop
retf
and
fcomp
dec
enter
outs
and
push
int3
imul
mov
mov
mov
je
mov
pop
dec
pop
jae
inc
or
xor
ds
aam
sub
jb
out
ins
fbld
mov
clc
cmp
mov
xlat
mov
(bad)
and
ss
mov
ins
mov
retw
jecxz
lds
mov
fnstenv
add
fadd
hlt
fwait
bnd
ss
out
in
add
out
(bad)
icebp
fild
add
pop
push
not
out
ds
xchg
or
push
inc
push
dec
or
dec
dec
dec
dec
enter
(bad)
lahf
mov
push
dec
inc
push
dec
aas
dec
push
push
xlat
or
enter
dec
inc
inc
push
fcmovu
fcmovu
inc
dec
push
dec
dec
dec
push
outs
and
inc
push
dec
inc
sub
push
in
je
enter
xlat
dec
dec
jne
std
lods
adc
sub
sub
and
pop
fcomp
and
inc
push
inc
dec
pop
das
ja
add
ja
jns
mov
jnp
pop
push
out
pop
xor
sbb
aad
call
pop
push
or
inc
aam
inc
inc
push
push
inc
idiv
ds
dec
dec
push
pop
cs
dec
dec
bound
xchg
and
push
ins
dec
(bad)
xor
pop
inc
inc
push
dec
push
dec
and
test
test
lds
rcr
daa
stos
dec
sar
fbld
fcmovnu
pop
push
cwde
inc
comiss
add
push
add
add
inc
inc
dec
jns
or
push
scas
mov
movnti
sahf
movs
xchg
mov
mov
sar
fcomp
push
inc
add
inc
dec
mov
lods
and
jle
mov
popa
sub
or
push
push
xchg
js
ins
js
popa
adc
mov
lock
icebp
je
push
and
sbb
call
test
dec
add
push
pop
cmp
outs
adc
not
ror
mov
add
js
sub
or
or
pop
push
fisub
sbb
dec
add
data16
jbe
or
push
dec
jae
test
cld
gs
jo
in
mov
sub
cmp
inc
jb
sub
push
dec
fcom
adc
movs
jno
outs
loopne
mov
not
push
mov
mov
sub
xchg
pop
std
jmp
pop
and
jae
mov
or
mov
pop
cmp
xor
hlt
pop
inc
mov
rcr
aaa
inc
scas
jo
jb
cmps
cmp
inc
or
or
inc
and
jmp
mov
neg
jmp
pop
push
je
jo
mov
dec
or
sahf
addr16
push
hlt
sub
cwde
mov
inc
cmp
scas
xor
add
push
sub
cmp
push
jae
mov
sbb
push
mov
jp
sbb
sub
pop
dec
pop
push
outs
imul
arpl
sahf
push
inc
in
dec
popa
or
gs
inc
mov
add
adc
imul
mov
icebp
sbb
jo
fs
dec
(bad)
mov
outs
push
gs
gs
fstp
add
jne
jne
mov
adc
push
pop
popa
cmp
mov
pop
sub
sti
mov
ds
ins
cmp
dec
mov
shl
adc
jno
scas
sar
test
out
lods
lahf
and
mov
sbb
leave
aaa
je
add
push
(bad)
and
sahf
push
push
inc
dec
push
inc
jge
mov
mov
push
push
(bad)
push
or
mov
jnp
sub
inc
pop
outs
mov
inc
cmp
jae
pop
mov
ja
outs
xchg
pop
ret
sub
or
pop
mov
dec
cwde
sub
push
lahf
data16
sbb
sti
cvtps2pi
and
lahf
mov
es
mov
and
push
arpl
dec
scas
mov
gs
cmp
inc
pop
test
cmps
daa
jg
mov
ins
pop
jg
daa
push
sbb
mov
push
mov
ja
dec
rcr
jae
ret
sbb
jo
movq
jae
andnps
xchg
inc
push
shl
rcl
scas
fs
test
test
or
inc
clc
sub
imul
shl
sub
pusha
and
push
adc
inc
pop
xor
pop
xor
push
inc
and
sbb
pop
jae
cmp
mov
jl
scas
add
dec
loopne
(bad)
dec
(bad)
daa
into
mov
inc
pop
out
jne
mov
jne
push
pop
dec
dec
or
jb
add
add
xchg
test
jns
add
pop
loopne
pop
mov
imul
inc
arpl
sub
sub
sbb
or
sub
lahf
jmp
ins
popa
das
xor
mov
and
aad
clc
jmp
ss
and
push
ss
and
jge
bound
je
xor
xor
push
dec
dec
push
dec
dec
sub
mov
sub
outs
dec
inc
push
movs
das
xor
and
add
push
popa
hlt
dec
ins
rcr
add
push
push
mov
dec
or
stos
inc
xchg
dec
les
pop
inc
ja
pop
dec
adc
push
or
(bad)
(bad)
addr16
dec
cmp
adc
bound
jae
cmp
adc
movs
push
push
(bad)
ja
dec
and
addr16
pop
je
adc
(bad)
pusha
jl
(bad)
jns
jno
inc
dec
xchg
fs
scas
imul
cli
sbb
pop
arpl
sbb
ins
in
outs
push
push
or
jmp
jae
outs
pop
pop
push
das
jb
dec
ins
fbstp
out
push
test
jmp
jo
bound
(bad)
into
je
push
int
test
es
pop
pop
addr16
add
popa
inc
xor
or
cld
out
out
add
xchg
fimul
das
and
jmp
mov
cmp
add
add
fwait
fwait
jp
aaa
popa
dec
inc
pop
test
outs
outs
add
inc
cmc
push
mov
fsubr
mov
and
jo
and
push
xchg
(bad)
mov
push
ss
int
mov
jnp
sahf
mov
ins
scas
push
add
retf
dec
jp
pop
rcr
pop
push
pop
arpl
adc
push
dec
das
andps
pop
push
push
push
sub
lea
pop
inc
loop
add
fadd
add
xchg
xor
dec
dec
fdiv
sbb
cli
mov
adc
ins
outs
in
arpl
mov
sbb
adc
sub
dec
or
nop
je
out
jnp
jbe
push
dec
mov
fstp
jp
mov
ja
mov
arpl
(bad)
and
inc
retf
add
add
pop
pop
inc
mov
inc
sub
jmp
mov
push
bnd
lods
mov
push
inc
mov
inc
add
push
or
inc
inc
inc
ins
and
pop
mov
xchg
loopne
dec
inc
in
fbstp
mov
push
les
call
sbb
imul
xchg
or
scas
inc
outs
sub
cs
push
hlt
xor
aam
mov
and
add
stos
loope
imul
xor
dec
jae
nop
ss
icebp
xor
retf
push
dec
dec
dec
push
mov
inc
ja
rol
ins
imul
out
jno
push
add
lods
cmps
arpl
fimul
add
push
or
sti
push
dec
adc
sti
pop
fadd
and
xchg
les
fbstp
(bad)
stos
mov
stos
or
pop
(bad)
xor
inc
and
sti
mov
pop
sbb
das
pop
mov
pusha
sti
das
mov
pop
out
and
arpl
pop
dec
mov
jns
sbb
js
xchg
fbstp
jns
jecxz
jmp
and
stos
push
test
outs
mov
add
test
jne
inc
(bad)
fstp
and
jbe
jne
sub
ins
and
fdiv
xor
imul
adc
inc
push
push
js
or
pop
mov
inc
popa
mov
mov
call
ret
gs
or
push
push
in
cwde
or
in
inc
push
ss
(bad)
jmp
test
inc
jb
popf
and
and
inc
fcom
hlt
ror
clc
loope
dec
jno
and
fmul
push
push
imul
sbb
in
mov
or
aaa
and
mov
rcr
outs
ss
or
leave
pusha
in
clc
loopne
aaa
or
fild
add
cmps
pushf
in
mov
add
in
adc
cmp
pusha
out
out
adc
in
js
cs
push
jmp
sti
xchg
pushf
push
ficomp
dec
lea
xchg
push
jmp
mov
outs
xchg
out
retf
stc
loop
into
out
pop
movs
std
push
or
imul
mov
mov
cmp
dec
mov
int
sti
and
adc
pop
inc
das
inc
ret
test
pop
cmp
xchg
inc
mov
popa
arpl
out
in
mov
je
xlat
and
ins
dec
jae
arpl
cmp
inc
das
loopne
dec
aaa
dec
arpl
or
daa
lahf
cmp
test
call
aam
fadd
mov
cmp
(bad)
mov
jbe
pcmpeqb
ret
jmp
inc
mov
cmp
iret
sub
jbe
push
push
dec
pop
lods
adc
stos
dec
cmps
bound
ja
cmp
jnp
or
aaa
inc
das
jecxz
fild
xchg
or
push
das
push
jnp
pop
idiv
inc
jmp
push
loop
adc
mov
ds
inc
adc
push
test
je
and
lahf
dec
retf
adc
inc
(bad)
lahf
and
test
adc
ins
cmps
push
dec
jne
stos
mov
xor
scas
xchg
mov
bt
test
jle
inc
push
dec
out
dec
add
mov
stos
nop
pop
add
fisub
mov
cmps
cmp
test
jbe
and
mov
or
pop
push
fbstp
jb
imul
mov
fidivr
(bad)
(bad)
xchg
(bad)
or
fwait
dec
out
(bad)
lods
jae
aaa
mov
pop
cmp
push
pop
imul
(bad)
fisubr
arpl
jb
pop
fisub
(bad)
rcl
mov
pop
lods
add
ret
mov
cwde
daa
hlt
sub
mov
xchg
call
sbb
adc
aaa
(bad)
pushf
scas
(bad)
data16
push
sbb
push
jns
fnstenv
(bad)
jo
std
mov
(bad)
mov
mov
pop
add
scas
push
jp
movs
es
dec
ins
dec
mov
pop
clc
dec
pop
pop
inc
dec
mov
dec
adc
push
sbb
add
pop
add
inc
leave
cs
fsubr
mov
scas
ja
pop
jb
xchg
data16
ins
add
jne
mov
sub
ja
cmp
js
push
inc
jae
(bad)
out
into
pop
out
sub
pop
das
or
(bad)
daa
xchg
or
test
pop
sahf
inc
aaa
out
inc
(bad)
push
lahf
test
mov
pop
das
and
pop
pop
repnz
xor
pop
and
mov
ins
jne
push
pop
les
inc
ds
shl
arpl
in
inc
adc
sbb
and
repnz
(bad)
das
and
in
fs
clc
add
sysret
add
and
mov
mov
ucomiss
adc
push
add
sbb
enter
push
sub
push
sbb
xor
outs
stos
outs
mov
int3
xor
adc
outs
adc
xchg
mov
pop
add
enter
jns
add
fsub
das
and
gs
inc
ds
pop
or
data16
add
cmp
cmp
bound
(bad)
sbb
ret
inc
xchg
cmp
pop
add
sahf
stos
mov
add
aad
dec
das
pop
popa
aaa
not
pop
pop
jmp
add
add
push
inc
outs
icebp
push
cmp
sbb
out
std
sub
ins
mov
cs
sub
inc
mov
xor
loopne
cmp
adc
das
das
loopne
sub
hlt
add
mov
je
sub
std
pop
jbe
fs
popa
jb
jnp
mov
inc
daa
pop
cld
ins
mov
mov
or
add
or
add
xchg
mov
in
(bad)
xlat
inc
addr16
enter
movs
mov
or
lock
sldt
pop
pop
and
add
(bad)
aas
ficomp
or
cmp
enter
ds
pop
ror
pop
ins
mov
stc
jle
inc
inc
or
jle
inc
shr
inc
push
inc
call
pop
fistp
jns
jno
mov
push
inc
push
or
or
and
sahf
hlt
test
xchg
(bad)
xor
jb
jbe
sar
mov
bound
xor
sub
xor
mov
mul
inc
pop
pop
stos
mov
xor
sub
xor
xor
(bad)
fadd
(bad)
xor
push
ja
add
out
outs
test
inc
pop
push
dec
mov
mov
popa
jns
gs
or
imul
jo
adc
push
outs
sub
sub
daa
push
dec
or
pop
inc
sub
dec
adc
imul
mov
dec
push
add
andnps
cmp
sbb
fwait
imul
jne
jne
add
xchg
mov
outs
pop
push
fisub
jmp
jae
mov
imul
xchg
mov
imul
pop
push
push
jo
(bad)
ficom
or
dec
jp
outs
xchg
or
mov
mov
imul
dec
mov
shr
jg
popa
mov
adc
pop
mov
push
mov
jmp
jg
outs
jae
push
sub
cmp
int
jmp
and
jns
iret
jo
imul
out
cmp
ins
xor
repz
jmp
cmp
idiv
lods
jo
pop
mov
lods
jno
jnp
out
push
push
pushf
jmp
or
hlt
(bad)
jge
jmp
daa
adc
scas
sahf
div
pop
add
push
ret
xor
pop
xchg
out
loopne
xchg
cmp
adc
outs
dec
cmp
jp
mov
inc
nop
xor
or
add
ret
add
daa
sub
aad
daa
das
dec
je
jg
or
inc
fs
aas
cmps
jg
sbb
push
xchg
idiv
push
movs
fwait
cmp
mov
xchg
jge
cmp
sbb
push
xchg
lods
push
jae
mov
jns
int
sbb
cwde
fcomp
cmp
test
push
popa
jns
int
xchg
lds
sbb
or
cmp
push
mov
(bad)
cmps
push
add
push
pushf
add
add
adc
pop
mov
xchg
and
mov
jmp
add
dec
gs
jo
push
out
dec
ins
outs
arpl
xchg
adc
hlt
dec
cmp
mov
add
les
add
jl
xor
pop
and
enter
enter
xor
test
push
fistp
sub
push
and
cs
push
sub
mov
fld
mov
mov
sbb
pop
enter
cs
adc
les
das
or
add
mov
push
mov
add
and
add
scas
nop
sub
jb
ds
pop
jg
sbb
add
sub
jb
(bad)
fild
jle
push
fld
fdiv
imul
push
mov
neg
mov
cmp
fild
jnp
pop
or
rol
mov
or
xchg
(bad)
ins
ret
push
dec
lock
lods
sub
xor
jg
add
mov
cmp
mov
add
mov
mov
pop
lods
daa
daa
das
fistp
in
int3
push
lods
mov
scas
rcr
aam
cmp
sbb
(bad)
aas
int
push
mov
(bad)
test
rcl
xchg
call
loop
adc
(bad)
or
or
sahf
out
xor
cmp
adc
add
jns
out
add
or
out
inc
add
sbb
sbb
push
mov
scas
and
bound
frndint
mov
jmp
push
in
mov
add
pop
push
out
test
mov
and
adc
jae
sbb
push
lods
in
ja
push
pop
fadd
in
add
or
push
inc
push
pushf
out
and
inc
dec
daa
shl
or
add
push
pop
jmp
add
dec
push
les
mov
inc
cmps
pop
js
xlat
pop
cli
es
jg
int
mov
cmp
pop
outs
pop
(bad)
in
push
or
add
loop
ins
mov
and
movs
data16
bswap
out
mov
dec
rcl
sub
ins
push
adc
(bad)
lock
adc
sbb
cmp
arpl
test
or
and
sahf
movs
fwait
inc
cmps
ss
data16
(bad)
jmp
imul
add
inc
push
les
iret
imul
push
add
inc
ficomp
cs
aaa
std
fidiv
dec
push
inc
xchg
invd
xchg
pop
mov
mov
ja
mov
mov
sub
add
scas
fwait
loopne
pop
dec
and
inc
mov
or
je
pop
or
(bad)
xchg
add
adc
bound
aas
jno
dec
push
jmp
popf
lods
adc
sub
(bad)
pop
daa
iret
or
pusha
dec
xchg
cmp
das
add
das
mov
add
inc
xchg
ds
adc
cs
stc
inc
mov
add
add
mov
sub
sbb
in
sbb
fst
pushf
jl
xor
sar
push
push
test
scas
outs
out
or
movs
push
mov
dec
mov
enter
dec
pusha
push
scas
push
lock
repz
and
xchg
mov
pop
sahf
vshufps
clc
and
js
outs
mov
imul
enter
dec
inc
inc
fidivr
int
dec
push
sbb
pop
dec
lods
dec
xchg
push
mov
push
dec
pop
fistp
iret
imul
push
fiadd
dec
pop
bound
dec
add
push
push
add
adc
out
cmp
pushf
ds
rcr
push
adc
(bad)
mov
jne
mov
out
push
iret
push
jecxz
aaa
cmp
xor
dec
aaa
and
xchg
push
inc
dec
inc
jb
or
data16
mov
fadd
into
pop
dec
(bad)
push
outs
push
add
pop
ss
repz
out
push
shl
iret
out
ins
mov
bound
cmps
mov
add
push
inc
xchg
sub
add
in
pop
rol
jae
pop
push
pop
mov
movs
out
inc
push
sub
jg
pop
inc
imul
xchg
pop
sub
pop
pop
inc
push
dec
bound
push
inc
inc
neg
mov
push
fwait
sbb
ins
imul
inc
or
mov
add
push
daa
and
bound
adc
imul
ss
xchg
jl
outs
(bad)
ss
pop
in
jb
in
ins
pusha
push
das
fisubr
push
or
test
push
aaa
inc
push
enter
xor
add
sub
pop
and
lea
das
pushf
xor
shl
lods
push
mov
mov
aad
imul
dec
push
rep
sahf
scas
loop
mov
fstp
pop
test
imul
jnp
repz
mov
push
adc
xor
cmps
sbb
call
out
and
jns
or
inc
pop
fwait
cmps
lea
neg
push
jp
mov
pop
cmp
inc
pop
inc
outs
jne
push
xor
and
xchg
ret
sub
add
(bad)
scas
add
jbe
mov
outs
cmp
sbb
int
jae
ds
bound
cmp
inc
les
data16
(bad)
dec
loope
inc
dec
popa
outs
or
push
add
arpl
out
ins
pop
jne
cwde
or
mov
fstp
repz
jl
popa
(bad)
push
xchg
daa
inc
outs
jo
daa
enter
xchg
pop
movs
movs
mov
mov
pop
sbb
aas
imul
xchg
(bad)
ficomp
pop
aaa
or
dec
into
test
popf
inc
push
aaa
sahf
dec
dec
add
repz
pop
rol
enter
cwde
mov
repz
mov
leave
add
or
push
jns
add
dec
sbb
push
add
adc
mov
sbb
cmps
xchg
int
mov
push
ins
xchg
add
xchg
dec
xchg
loopne
jle
out
push
test
sbb
xchg
push
ja
adc
xchg
cmps
nop
push
xchg
cmp
xchg
les
sar
(bad)
mov
outs
ins
push
test
mov
aaa
add
sub
in
cmp
cmc
jecxz
cwde
jns
push
scas
push
cdq
(bad)
es
xchg
call
dec
(bad)
and
(bad)
xchg
xor
ja
cmp
cmps
call
sahf
jbe
xchg
rcr
or
add
mov
xchg
sub
mov
(bad)
into
popf
mov
inc
dec
test
(bad)
fstp
inc
ins
xchg
es
and
dec
dec
cdq
add
div
push
sbb
adc
or
push
push
das
dec
hlt
adc
sub
out
int3
(bad)
daa
sahf
fwait
push
repnz
add
inc
mov
scas
(bad)
out
mov
push
lods
and
cmps
pop
mov
push
lock
push
xchg
or
jg
xor
push
les
sub
ret
dec
lods
inc
pop
idiv
push
ja
outs
mov
xor
cmps
mov
push
repz
aas
test
inc
push
sahf
out
sahf
cmp
xor
adc
mov
lock
push
mov
(bad)
jne
inc
bound
shl
popf
inc
jb
jbe
jne
pop
sub
in
xchg
loopne
dec
mov
push
mov
mov
addr16
mov
ror
out
push
je
repnz
adc
sbb
call
(bad)
adc
pop
not
dec
pop
inc
sar
jns
sub
lds
mov
sub
leave
add
bound
call
dec
inc
push
imul
outs
cmc
dec
adc
imul
mov
repnz
hlt
push
push
outs
outs
ins
dec
es
in
mov
sahf
aaa
jbe
mov
imul
add
data16
mov
ret
inc
dec
popa
jo
ror
dec
pop
add
pop
mov
xchg
add
in
jp
pop
popf
outs
inc
sub
mov
xchg
add
call
fcmovb
cmp
mov
fcomp
fist
adc
jnp
cmp
fimul
xchg
push
sub
mov
push
ins
sti
add
push
(bad)
(bad)
push
daa
loop
push
loope
mov
dec
fwait
inc
in
ror
je
pop
mov
fwait
cmp
push
out
sbb
lods
dec
xlat
mov
out
adc
daa
ret
jno
packssdw
test
jae
pusha
adc
fmul
inc
jmp
fbld
push
pop
fild
fs
shr
dec
sbb
fdivr
push
scas
sub
sub
lods
mov
add
out
push
pop
push
lods
es
(bad)
popf
repnz
dec
addr16
push
sbb
xor
ret
xchg
fs
xchg
dec
adc
xchg
mov
ss
repz
push
gs
icebp
mov
inc
loopne
repnz
add
add
es
inc
jns
sub
xchg
or
std
fld
in
daa
push
repnz
and
cs
mov
cwde
test
add
add
aas
fidivr
loope
add
fldenv
lock
hlt
push
lahf
syscall
add
jbe
push
mov
sahf
cmps
loope
push
pop
scas
sahf
scas
mov
mov
pop
movs
aas
and
test
fdiv
div
or
adc
in
dec
imul
and
jae
push
(bad)
push
sahf
je
jg
dec
loope
ins
inc
xor
scas
inc
fisttp
xor
cmc
sub
inc
jbe
inc
jne
scas
mov
xor
retf
mov
pop
cs
push
lods
leave
xlat
jnp
das
xor
(bad)
jmp
cli
jo
inc
jo
out
retf
rcr
jbe
or
adc
sub
call
lahf
and
iret
mov
inc
xor
adc
xchg
xchg
aas
arpl
outs
pop
mov
iret
add
out
stos
test
(bad)
ins
pop
xchg
addr16
outs
cs
mov
xor
xor
pop
push
outs
addr16
aam
adc
push
inc
out
add
cmp
mov
(bad)
xor
xor
push
add
inc
push
outs
xchg
adc
push
sub
aaa
sbb
pop
add
dec
jae
nop
cmp
into
adc
in
mov
or
bound
xor
push
shr
inc
pop
mov
stos
add
sub
xchg
jnp
pop
adc
push
cmp
and
push
out
cmp
sub
in
and
cmp
es
je
push
ins
test
push
daa
dec
neg
xchg
adc
push
add
imul
test
daa
adc
stos
lods
movs
jne
in
inc
ja
or
scas
setge
sub
jns
out
shr
hlt
pop
sub
dec
and
in
lods
lods
sub
cmc
ss
dec
mov
mov
fisttp
add
test
fistp
or
or
out
xor
xor
sbb
jne
cs
or
fidiv
add
outs
mov
ins
mov
add
add
and
imul
inc
inc
setne
dec
ss
push
adc
js
iret
mov
mov
cmp
ror
add
sub
sub
out
and
mov
add
fiadd
enter
sbb
push
loope
daa
push
mov
sbb
push
cmc
push
int
jle
out
sbb
push
sbb
sbb
push
imul
inc
or
push
or
je
inc
inc
sbb
add
dec
ss
push
cmp
xchg
mov
mov
mov
adc
sub
es
or
cs
fdiv
adc
jb
inc
add
fwait
adc
adc
in
and
push
xchg
xor
ret
xchg
and
sub
pushf
mov
and
inc
ror
and
test
(bad)
dec
xor
xchg
cmps
mov
cmp
cmp
fs
dec
and
jns
add
das
das
adc
in
ror
cs
push
inc
inc
cmps
ins
bound
adc
push
aas
jbe
dec
(bad)
adc
push
mov
inc
jne
jne
addr16
jge
dec
jne
xchg
outs
cld
das
aam
dec
sbb
popa
sahf
sub
sti
xchg
out
bound
push
inc
and
cmp
out
adc
xchg
(bad)
cmp
fdiv
outs
jns
jg
addr16
mov
pop
xor
cli
adc
daa
push
gs
mov
push
jne
dec
and
cmp
pushf
ins
jbe
xchg
fmul
inc
ds
popa
das
jo
or
pop
adc
gs
jo
ss
and
mov
arpl
mov
test
sbb
jle
test
dec
push
sbb
push
dec
dec
inc
sbb
sahf
dec
inc
and
test
xor
xor
inc
outs
and
and
jae
(bad)
fs
cs
movhlps
xchg
clc
cmp
je
sub
and
fs
jmp
outs
arpl
or
outs
je
mov
mov
or
dec
ins
and
fsubr
xor
dec
inc
imul
jo
jo
and
jne
cdq
lea
inc
data16
loopne
in
les
out
inc
add
(bad)
sbb
outs
xchg
xchg
imul
cmp
inc
js
and
fs
fs
inc
jb
xor
add
push
sub
loopne
and
push
ds
ret
loopne
sbb
fistp
and
mov
ret
fcom
sub
gs
and
das
arpl
cmp
sub
popa
sub
pop
push
adc
out
add
push
hlt
imul
out
xor
or
and
and
minps
in
popa
add
ret
sub
jns
push
fbstp
xor
fcomp
push
js
or
xor
shl
mov
inc
add
aaa
retf
aaa
(bad)
ja
mov
popa
loopne
outs
sub
inc
jae
fs
movs
push
cli
jb
inc
jmp
xchg
push
mov
or
or
mov
cwde
shl
mov
pop
sbb
inc
out
xor
outs
retf
mov
hlt
push
add
retf
jp
jo
bound
push
pop
repnz
cmp
ins
in
test
jecxz
jmp
dec
xor
imul
pop
or
call
(bad)
test
push
nop
and
imul
(bad)
cmp
adc
in
fadd
inc
enter
push
and
sbb
cmp
jne
jae
je
xchg
xor
fsub
add
sub
and
ret
nop
push
imul
dec
jnp
inc
add
in
pop
add
and
add
adc
inc
jne
ds
gs
pop
daa
imul
push
dec
cmp
sahf
(bad)
iret
ror
sbb
dec
xchg
lea
mov
nop
xchg
lock
dec
cs
xchg
inc
outs
aam
add
movs
dec
dec
test
repz
pusha
daa
push
inc
ins
jae
dec
adc
cdq
add
xor
pop
repnz
inc
jne
inc
inc
je
call
mov
pop
add
sub
icebp
jle
dec
inc
pop
push
dec
dec
inc
or
dec
push
push
dec
inc
daa
mov
inc
stos
pop
pop
inc
push
pop
push
sbb
outs
sub
pop
dec
dec
js
popa
(bad)
pop
inc
adc
cmp
mov
xchg
aam
jns
fcom
mov
test
jl
inc
jmp
jg
push
add
add
(bad)
(bad)
(bad)
mov
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
jmp
sub
sub
cmp
xchg
add
pop
pop
add
sub
inc
jnp
jge
jg
pop
cs
jbe
dec
add
adc
jmp
dec
jnp
lods
adc
sbb
adc
xchg
add
and
push
pop
lds
pop
sahf
add
out
push
push
or
and
div
std
or
pusha
add
mov
sub
add
sbb
sub
(bad)
stc
jae
add
push
inc
dec
mov
retf
inc
inc
inc
dec
jae
ret
cmp
or
cmp
or
mov
or
pop
call
inc
or
int3
(bad)
loop
and
inc
pop
pop
mov
popa
fsub
hlt
dec
sub
sub
test
fcomp
xchg
imul
inc
add
dec
inc
adc
push
or
xor
mov
mov
daa
shl
sub
out
pop
inc
(bad)
xchg
or
mov
push
mul
pop
ret
dec
or
xor
(bad)
hlt
pop
lock
mov
mov
and
ins
and
daa
add
ins
adc
lock
dec
imul
pop
mov
ds
push
xchg
pop
dec
gs
mov
daa
pop
add
xchg
clc
and
ss
ror
jae
mov
scas
rol
sbb
pop
daa
xor
cmp
stos
mov
or
sub
mov
ret
or
pusha
inc
jbe
(bad)
push
push
or
cmp
lahf
fs
and
xor
cmp
mov
sub
or
and
or
fisub
dec
dec
lahf
jnp
add
lock
adc
pop
pop
pop
and
(bad)
mov
out
sbb
cmp
add
or
call
into
call
gs
and
ret
jbe
mov
not
push
push
push
push
dec
not
dec
push
jne
je
mov
ret
mov
cmp
fild
sar
jg
add
(bad)
in
adc
push
movmskps
and
dec
xchg
inc
mov
push
sbb
xor
pop
jae
mov
jg
sub
pop
fsub
or
xchg
add
xchg
pop
(bad)
aaa
daa
xchg
mov
data16
out
(bad)
pop
pop
cmp
cmp
add
ds
mov
push
sub
cmps
stc
fidivr
outs
sub
ds
jmp
add
pop
sub
pop
dec
sar
sub
mov
add
and
cmp
and
add
mov
pop
lock
fs
jb
imul
push
fnsave
xor
and
data16
sbb
jl
out
push
and
jo
sub
inc
jle
push
(bad)
sub
inc
cwde
push
nop
test
sahf
out
ins
pusha
push
dec
inc
mov
cli
push
cmp
repz
cmp
ss
and
mov
pop
sbb
sbb
cmp
adc
or
aas
cld
repz
repz
clc
hlt
push
lock
call
cmp
frndint
in
pop
in
fimul
ficom
xchg
aam
push
sar
out
int3
enter
push
shl
sahf
out
mov
out
sahf
test
mov
sahf
out
cmp
dec
repz
out
adc
hlt
aam
int
cmp
xchg
jo
xor
cmp
call
mov
jl
push
iret
out
cmp
int3
movs
js
fnstcw
pop
cmp
call
xchg
scas
xchg
inc
mov
and
in
push
xchg
adc
add
adc
mov
ret
add
inc
add
and
add
add
sub
add
stos
pusha
push
mov
mov
pop
add
aaa
inc
push
pop
rol
and
(bad)
mov
add
mov
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
fwait
pushf
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
(bad)
(bad)
(bad)
push
mov
rol
ret
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
(bad)
(bad)
call
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
dec
push
pop
push
idiv
stc
cli
sti
cld
std
bound
inc
push
inc
add
cmp
dec
mov
cmp
add
gs
mov
pop
imul
or
outs
mov
out
push
xchg
inc
es
mov
adc
push
popa
pop
xchg
popa
out
popa
bound
aaa
and
mov
jbe
fdiv
jne
or
sub
dec
pusha
jb
(bad)
aas
push
and
jp
gs
jp
ins
ror
cmp
push
faddp
enter
addr16
mov
sbb
add
push
cmp
arpl
(bad)
cdq
inc
cmps
sti
inc
lods
ret
jae
add
mov
push
jae
imul
cwde
jmp
dec
test
push
outs
pop
shl
pop
lods
sbb
mov
jb
or
ins
ins
cdq
pusha
lahf
and
and
nop
jbe
movs
pop
clc
lods
dec
cmp
mov
gs
ins
xor
pop
test
pop
shl
xchg
push
jae
sbb
xchg
pusha
add
cld
test
daa
pop
sub
cmp
pop
loopne
mov
or
arpl
lock
inc
and
adc
outs
mov
and
push
fs
bound
inc
pop
adc
test
das
rol
sub
xchg
or
adc
jp
dec
outs
imul
sbb
fcom
jo
and
jae
daa
mov
imul
loope
inc
sub
and
pop
call
pop
lea
js
pop
xchg
add
jle
out
mov
daa
popa
jne
shl
xor
pop
(bad)
call
addr16
push
pop
sub
push
pop
add
dec
jb
(bad)
jns
mov
pop
push
and
(bad)
push
cmp
imul
fisubr
sub
imul
les
pop
cdq
ror
or
xchg
pop
xchg
imul
pusha
test
(bad)
push
pop
daa
jae
popa
lock
push
cmps
push
daa
and
repnz
scas
lods
shl
(bad)
dec
jnp
adc
clts
call
or
sub
sub
mov
std
daa
and
sbb
dec
pop
dec
sub
push
xchg
out
leave
sbb
clc
inc
lock
call
inc
pavgb
dec
fdivr
test
aam
dec
push
shr
aas
test
pusha
daa
xchg
lahf
fdivr
dec
cmp
dec
push
imul
dec
xchg
cmps
sar
pop
in
enter
xor
mov
push
jle
push
movs
xchg
inc
push
inc
test
xor
jg
lock
xchg
cmps
shl
inc
sub
std
in
xor
or
dec
clc
dec
push
push
paddsb
push
mov
les
push
push
inc
call
push
mov
inc
js
xchg
cmps
rcl
push
inc
xor
movs
test
adc
push
imul
dec
cmps
rcl
dec
enter
test
inc
nop
pop
push
imul
push
pop
xchg
push
call
push
inc
xor
mov
fmulp
sub
push
loop
mul
inc
inc
lahf
or
xchg
out
lahf
outs
out
add
pop
inc
cs
cld
push
in
in
push
jle
dec
dec
inc
fmul
inc
int3
dec
pop
dec
jle
fimul
mov
push
push
dec
push
ficom
lahf
mov
inc
or
cwde
fsubr
jo
lods
push
dec
pop
jo
sbb
xor
inc
outs
(bad)
fisttp
or
sbb
adc
add
or
adc
sbb
add
push
add
dec
lahf
dec
mov
fdivr
push
add
adc
xchg
inc
add
mov
xor
sti
outs
push
push
inc
pop
sbb
xor
push
mov
xor
push
add
or
pop
js
jo
add
enter
xor
push
mov
inc
add
or
inc
das
push
fimul
mov
and
push
push
xor
or
into
or
and
xor
rcl
mov
fld
sbb
jmp
test
sbb
mov
push
xor
pop
(bad)
mov
sar
cmps
stos
fcmovne
adc
push
cld
or
mov
ror
pop
fld
scas
cmps
mov
clc
out
inc
rcl
jg
dec
sbb
scas
sub
adc
push
mov
mov
or
jnp
mov
lds
aas
int3
push
and
pop
sbb
enter
(bad)
cmp
sub
adc
mov
push
pop
adc
push
iret
(bad)
bound
adc
add
test
int
lods
dec
pop
add
sar
pushf
mov
push
jmp
pop
add
repnz
fild
pop
ss
mov
shl
mov
cmp
retf
mov
and
ds
inc
jo
ret
push
mov
les
pop
ret
mov
das
pop
jl
fadd
jge
test
mov
cld
or
movs
xchg
or
mov
lahf
mov
aas
cwde
pop
xor
pop
call
cdq
jg
or
cmp
nop
or
nop
or
mov
adc
pop
push
mov
mov
pop
cs
cs
xchg
inc
cs
test
inc
cs
imul
int3
jl
dec
add
mov
pop
mov
inc
cs
test
in
cs
stos
addr16
cs
inc
cs
pop
pop
in
cs
mov
mov
in
stos
mov
inc
cs
scas
scas
cs
cs
mov
cs
mov
in
cs
mov
cs
loopne
sbb
or
push
mov
sbb
or
add
pop
or
aas
push
pop
dec
cs
lahf
inc
sub
pop
pusha
pop
pop
mov
adc
and
iret
inc
sbb
adc
xchg
inc
pop
das
clc
pop
or
dec
add
pushf
je
push
out
mov
dec
in
mov
and
or
or
or
adc
pusha
leave
pop
pop
lahf
sahf
cmps
std
inc
and
pop
push
adc
adc
adc
push
fwait
sbb
dec
push
sar
inc
or
jg
xor
gs
or
mov
xor
sahf
ja
nop
jns
jb
push
adc
jns
out
and
xor
add
jns
out
or
xor
popa
xchg
ja
popa
jb
shl
sub
sub
movs
fwait
sbb
punpcklwd
xchg
sar
ins
push
nop
(bad)
dec
cmps
adc
jg
iret
adc
call
test
fnstcw
scas
cmps
mov
and
mov
push
mov
xchg
add
jl
pop
pop
push
repz
loope
jns
xor
into
push
mov
jne
lods
inc
cld
call
mov
cli
sbb
(bad)
call
add
jae
jno
hlt
dec
call
push
fcomp
imul
xor
ror
(bad)
xor
(bad)
dec
add
adc
add
xor
mov
mov
inc
lock
jbe
lahf
mov
add
mov
push
cld
mov
ja
aas
adc
nop
inc
cmp
or
or
dec
addr16
out
rcr
jno
and
add
mov
gs
dec
sar
jo
std
push
xchg
scas
ins
aaa
cs
mov
jb
repnz
push
sahf
xchg
(bad)
(bad)
call
test
cmps
inc
pop
fwait
cmps
stc
sbb
rcl
mov
jns
push
pop
cmp
push
sbb
sub
(bad)
xor
pop
das
mov
cmps
xchg
cmp
das
(bad)
clc
push
push
loopne
dec
cmp
inc
cmp
mov
enter
mov
aam
adc
add
jg
add
inc
xlat
sti
inc
and
sbb
add
aad
mov
adc
add
mov
pop
fistp
and
pop
add
inc
add
inc
dec
in
inc
aaa
pop
dec
(bad)
gs
cmp
je
mov
jns
test
pusha
add
es
add
cmps
int3
je
loopne
nop
or
pusha
add
mov
mov
and
push
cmp
jnp
lea
mov
and
adc
push
pusha
js
enter
test
pop
int3
mov
push
sar
in
in
inc
xchg
mov
call
repnz
or
popa
sbb
(bad)
add
mov
es
outs
int
mov
je
call
mov
push
add
xor
push
lea
ins
dec
add
popa
mov
scas
sbb
scas
das
popa
stos
loope
comiss
xchg
xor
mov
pop
push
ins
out
js
mov
add
cmps
mov
and
ss
or
scas
aam
jns
ins
into
lock
ror
pushf
test
push
scas
arpl
arpl
push
cmp
fisubr
aas
(bad)
addr16
hlt
dec
adc
mov
push
mov
add
(bad)
pop
dec
add
pop
dec
mov
pusha
(bad)
ss
add
or
push
jb
pop
shl
cwde
xchg
fs
test
in
push
pusha
ins
sub
enter
push
in
sub
inc
mov
dec
inc
push
push
fadd
xchg
int
cdq
and
mov
gs
popf
nop
or
push
and
outs
imul
xchg
or
jns
fs
inc
cs
adc
daa
mov
rcr
mov
mov
repnz
adc
shl
jbe
cs
lahf
push
pusha
fnstsw
repz
lahf
ja
lahf
mov
fisubr
rcl
mov
xchg
scas
xchg
je
cmps
or
iret
mov
inc
clc
push
and
jl
and
fwait
out
inc
pop
hlt
imul
test
cmps
ss
add
pop
pop
(bad)
div
nop
push
sbb
enter
scas
jbe
inc
pop
dec
test
add
repnz
(bad)
jmp
in
cmp
loopne
push
xlat
pop
sub
inc
cwde
xchg
out
(bad)
cld
add
aas
push
push
ins
pop
leave
mov
add
adc
add
sub
sub
push
jb
pop
xlat
movs
movs
call
out
out
cmp
imul
mov
push
test
outs
ss
fiadd
push
outs
imul
bound
fs
inc
rcr
pop
adc
add
lahf
test
lahf
outs
daa
sahf
ja
push
pusha
jl
dec
sub
add
dec
cmps
test
jns
or
enter
sahf
fsubr
imul
add
pop
enter
and
xor
ja
les
jmp
push
je
sbb
ss
add
adc
dec
fisubr
mov
addr16
aas
mov
add
iret
loopne
(bad)
sahf
mul
ins
cmp
push
ins
stos
add
xchg
fs
ss
mov
lods
movs
or
mov
rcl
in
pop
mov
shr
cmps
fidivr
and
and
cmp
fsubr
hlt
icebp
dec
add
jmp
push
test
add
out
and
mov
mov
outs
adc
sub
mov
mov
cdq
mov
scas
cwde
pop
inc
sbb
je
mov
iret
mov
outs
xchg
mov
test
push
mov
pop
xor
(bad)
xchg
outs
or
add
imul
xchg
outs
adc
dec
sahf
dec
push
mov
mov
xchg
mov
sub
shl
nop
or
xchg
in
dec
sar
jo
jo
push
cmp
jo
sbb
jae
iret
xchg
push
add
xchg
cmp
repnz
sar
mov
jno
in
popf
nop
add
push
sbb
fdivr
in
jno
cld
dec
nop
dec
sahf
or
mov
cs
mov
inc
push
push
mov
dec
mov
lahf
cwde
cmp
daa
fstp
clc
jb
mov
and
pusha
outs
xor
xchg
out
xchg
jb
push
pusha
repnz
enter
movs
sbb
cmp
nop
pushf
(bad)
movs
xchg
scas
out
cs
dec
and
jnp
jb
push
in
daa
and
jae
rcr
jae
push
out
inc
daa
iret
arpl
mov
add
jae
push
mov
or
mov
xchg
test
jae
push
fdiv
fistp
add
fbstp
fmul
je
cmps
daa
dec
fadd
push
adc
jns
pusha
jl
mov
jbe
shr
pop
mov
bswap
mov
fsub
jne
xchg
js
add
push
inc
ss
add
btc
push
jne
jmp
js
fist
adc
pop
fild
dec
nop
test
jne
jne
or
test
outs
inc
sahf
mov
aas
out
test
lock
mov
bound
mov
inc
push
jbe
push
sub
js
jbe
push
mov
daa
sbb
and
test
lock
add
jl
and
cmovle
ja
push
inc
cmps
jl
and
nop
add
pushf
push
repnz
enter
pushf
iret
test
(bad)
enter
and
in
les
adc
enter
jnp
mov
(bad)
js
push
cmp
xchg
pusha
or
ss
add
sahf
adc
xchg
push
cmp
mov
daa
clc
mov
cmp
push
shr
mov
pop
add
ret
test
jns
jns
cmps
outs
and
push
iret
ret
cmp
mov
div
cmp
test
test
iret
test
loopne
outs
and
enter
jp
neg
(bad)
jp
push
cmp
add
mov
fimul
mov
bound
jp
push
pushf
(bad)
pop
adc
nop
out
fsubr
fadd
in
int3
ret
adc
pusha
in
popf
nop
sbb
sub
xor
mov
in
idiv
xchg
pop
enter
les
mov
not
neg
in
rcr
aas
pop
arpl
ss
addr16
call
popf
jp
movs
jl
sub
cmp
dec
push
mov
lock
enter
js
imul
xchg
outs
add
xchg
push
mov
int3
call
idiv
jo
cmp
and
mov
add
les
movs
popf
jge
mov
jb
scas
rol
add
fimul
ins
push
js
leave
sub
fild
out
bound
lock
(bad)
(bad)
js
ins
ss
aam
jle
and
sti
ins
test
or
push
jg
xchg
push
dec
adc
pop
les
lds
or
push
and
ja
jns
push
dec
push
mov
add
daa
xchg
pushf
jg
lods
push
mov
aam
add
xchg
add
jg
push
push
repnz
lahf
addr16
mov
adc
jg
inc
test
pop
(bad)
outs
add
pop
adc
adc
daa
add
fmul
mov
or
cld
scas
sbb
dec
enter
sub
xor
mov
and
scas
outs
xchg
loopne
nop
out
xor
test
das
inc
xchg
shl
pop
mov
int3
and
in
sub
test
cmp
or
sbb
cmp
in
jmp
out
xchg
pop
pusha
aas
cdq
fcomp
(bad)
dec
mov
cwde
ja
rol
loopne
call
add
add
add
nop
add
(bad)
aaa
push
maxps
daa
nop
xchg
sbb
mov
xor
cmp
test
in
and
jo
cs
bound
add
fcomp
enter
cmp
dec
fs
in
sbb
enter
cmps
nop
enter
bswap
add
lock
lock
rcl
dec
ins
cs
cmpxchg
cmp
push
and
xor
aaa
pop
or
or
push
jo
(bad)
hlt
test
dec
scas
inc
sahf
or
test
fwait
out
clc
test
cmp
test
and
inc
cmps
scas
iret
sbb
(bad)
fbld
push
jo
mov
in
xchg
addr16
stos
adc
ss
and
jns
rol
out
aam
add
leave
dec
add
cmp
sbb
add
xchg
or
ins
add
outs
aad
daa
dec
or
sbb
or
(bad)
aas
daa
test
out
test
lahf
test
hlt
xchg
sbb
mov
cmp
es
or
les
jmp
or
loopne
test
movs
shl
nop
adc
mov
xchg
shl
cmps
in
das
lock
enter
mov
sbb
xor
push
das
jg
and
test
mov
js
js
sbb
mov
pop
nop
xchg
ja
test
mov
jns
rol
lock
mov
pop
add
push
inc
mov
fsubr
inc
jo
mov
mov
inc
dec
xor
mov
push
shl
pop
outs
test
iret
cmp
mov
dec
push
mov
xchg
xchg
inc
mov
dec
add
ja
jo
mov
call
or
mov
mov
ja
or
inc
cmps
test
call
fimul
iret
inc
ja
mov
les
mov
repnz
enter
in
dec
ss
hlt
mov
in
ja
cs
or
xor
mov
daa
int3
repnz
adc
sub
and
sub
into
test
jmp
test
push
add
je
mov
(bad)
mov
push
cmp
adc
jns
js
xchg
nop
out
cs
loop
enter
lahf
test
lea
out
inc
dec
xlat
fiadd
jns
cld
jg
int
out
sahf
and
pop
jb
pushf
int
pop
inc
test
dec
push
xor
fdivr
and
data16
cld
mov
sbb
pop
xor
ins
test
jnp
dec
lahf
pop
ins
mov
mov
jns
in
lods
mov
test
in
cld
(bad)
or
pop
jb
fmul
in
mov
sahf
adc
cmp
(bad)
dec
pop
mov
mov
cmp
dec
adc
fmul
dec
mov
adc
inc
add
test
daa
fcom
add
ss
cmp
inc
fcomp
pop
mov
aad
dec
(bad)
and
ss
or
adc
jno
call
fs
outs
add
mov
nop
and
xchg
ss
aam
or
push
bound
push
xchg
or
and
push
sub
bswap
sbb
iret
add
and
sub
cmps
je
iret
and
sbb
in
iret
jae
mov
iret
sbb
inc
sahf
or
or
cmps
subps
fimul
fst
cmp
or
pusha
xchg
iret
ja
imul
cwde
mov
push
movs
adc
imul
cld
iret
add
adc
push
pushf
fdivr
sbb
push
xchg
sbb
cmp
xchg
sub
imul
fmulp
pop
dec
pop
push
fs
into
lds
nop
int3
dec
xchg
lock
in
sub
xchg
movs
sahf
mov
add
test
rcl
mov
ror
xchg
or
add
push
pop
add
in
mov
pop
sub
push
pop
xchg
and
(bad)
xchg
outs
outs
daa
and
dec
mov
cwde
add
cmp
mov
mov
xlat
ja
js
test
mov
and
daa
pop
and
xchg
hlt
and
lods
sbb
cmps
pop
ret
mov
pop
out
jl
add
outs
adc
sahf
imul
enter
(bad)
mov
push
and
dec
daa
out
test
rol
xchg
adc
and
xor
or
aas
ja
sar
in
not
sbb
mov
jo
or
rol
lock
fild
pop
jle
adc
call
sbb
xchg
call
fstp
enter
repnz
enter
cmp
sub
cs
hlt
cmps
aaa
icebp
dec
enter
pop
cwde
adc
and
xor
rol
jns
in
xchg
pop
pusha
jo
and
push
adc
daa
mov
in
fsub
movs
aam
mov
movs
aam
adc
cdq
and
xor
dec
aas
sar
sahf
xlat
fiadd
xchg
loopne
sub
cdq
mov
cwde
pop
pop
xor
mov
cmp
iret
test
fsubr
aas
or
enter
fwait
pop
call
pop
add
inc
pop
rcr
mov
mov
jmp
add
or
mov
(bad)
cs
fadd
mov
or
inc
cld
push
fwait
sbb
imul
cmp
push
and
in
ss
add
jns
out
fs
or
mov
loopne
adc
add
fwait
fwait
(bad)
(bad)
mov
not
push
daa
outs
xchg
aam
ins
es
call
lea
(bad)
hlt
xlat
fdivr
(bad)
dec
pop
jnp
in
daa
xlat
fsubr
sahf
or
out
mov
and
inc
xchg
mov
dec
and
popf
pushf
in
hlt
daa
out
mov
sbb
jbe
xor
repz
int
popa
xor
jp
pop
pop
add
cmp
repz
(bad)
(bad)
call
add
dec
int
jns
push
and
cmp
repz
ds
push
repz
repz
rcr
(bad)
out
sahf
out
and
inc
pop
push
out
sahf
test
shl
and
cmp
adc
push
xor
sahf
out
jl
retf
and
arpl
sar
shl
adc
dec
iret
repz
pop
jo
shl
int
jns
sub
in
sub
pop
sahf
out
call
call
jecxz
sub
xor
out
jl
out
sub
repz
fs
idiv
clc
push
dec
das
push
xchg
jl
cmp
mov
sub
repz
rcr
popf
scas
loope
jns
out
xor
out
ds
inc
test
xor
shl
xor
push
ds
jge
pushf
fiadd
cmp
push
cmp
call
pop
inc
cs
pop
cmp
repz
sub
mov
int
imul
inc
xchg
pop
cmp
repz
mov
iret
repz
(bad)
ss
out
sahf
out
pushf
scas
rcr
repz
hlt
push
inc
and
int
sahf
cmps
stc
cmp
add
jns
out
dec
pop
jno
xchg
out
sahf
out
mov
repz
stc
or
xor
call
cmovp
sahf
out
cmp
jle
(bad)
ds
repz
dec
mov
repz
adc
xchg
xlat
dec
scas
aaa
push
push
ja
mov
into
sub
push
inc
push
ds
data16
repz
mov
out
repz
inc
dec
out
sahf
out
jno
xchg
mov
sar
icebp
add
mov
repnz
pushw
test
out
push
inc
push
cmp
add
imul
iret
repz
or
out
sahf
out
ds
jae
sahf
out
sahf
(bad)
cdq
stos
shr
cmp
sar
sbb
sub
repz
popa
jae
xchg
iret
repz
mov
leave
shl
neg
pop
outs
test
sar
push
sub
stc
rcr
sbb
jns
iret
repz
scas
or
pop
data16
adc
push
hlt
test
ins
fs
out
sahf
or
pop
gs
add
out
sahf
push
pusha
push
repnz
cmp
repz
and
xor
repz
repz
push
pop
data16
repz
jp
xchg
mov
repz
enter
jns
iret
repz
add
push
sbb
jns
out
inc
bound
out
sahf
nop
call
repz
add
cs
shl
cmps
stc
sbb
add
jns
iret
repz
sub
mov
fsubr
call
es
repz
inc
push
jbe
mov
add
dec
fwait
out
ds
sar
je
fiadd
cmps
adc
ins
xor
out
pushf
int
and
imul
loopne
jbe
sar
xchg
shl
ja
cmps
stc
cmp
test
int
jns
sbb
cmp
repz
data16
shl
jns
cmps
stc
daa
jp
push
int
out
or
dec
push
repz
test
repz
mov
ins
nop
mov
jns
iret
out
jge
test
rcr
dec
lahf
out
sahf
jle
mov
cmp
repz
inc
test
stc
or
inc
push
hlt
repz
repz
cmp
shl
iret
repz
adc
fdivr
jns
cmps
stc
and
cmp
out
sbb
jns
iret
int
xchg
cmps
iret
repz
fiadd
xchg
pop
mov
(bad)
and
dec
mov
add
iret
repz
jns
mov
out
mov
jp
iret
repz
into
push
mov
sahf
in
out
or
int
jns
fimul
mov
add
xchg
xor
cmovo
sbb
cmps
xchg
ins
add
inc
add
push
push
ins
(bad)
mov
sub
mov
sbb
mov
add
retf
cwde
inc
pushf
push
dec
test
movq
test
bound
daa
(bad)
xlat
das
(bad)
cwde
dec
outs
cwde
fsub
mov
pop
xchg
fadd
cmps
adc
je
pop
mov
xchg
add
inc
mov
ins
(bad)
xor
daa
jl
dec
jnp
inc
(bad)
push
xchg
jb
fcomp
lods
push
dec
sbb
mov
mov
cs
cld
loopne
test
inc
mov
std
add
cs
mov
jb
pop
jb
mov
mov
push
pop
loopne
daa
icebp
out
addr16
xchg
xchg
test
jo
test
push
sbb
or
outs
jb
and
scas
xchg
mov
lock
ins
in
fst
lods
add
leave
aad
pmaxsw
fisttp
mov
adc
push
add
sbb
(bad)
pop
and
dec
dec
lock
xchg
fdiv
les
in
push
stos
cld
mov
pop
in
ss
stos
sub
sbb
ja
shl
mov
and
daa
scas
xor
mov
aas
cmp
outs
daa
cmp
daa
int3
leave
xchg
prefetcht2
push
enter
dec
nop
add
fld
pop
aas
pusha
push
jl
jbe
scas
lahf
loopne
retf
pop
in
les
pop
sub
sub
inc
or
addr16
pop
xchg
dec
lods
test
lods
cwde
out
dec
dec
and
and
or
inc
out
jbe
dec
push
mov
(bad)
call
leave
inc
xor
ror
jnp
rcl
push
add
or
add
scas
xor
in
daa
scas
push
push
in
dec
mov
mov
pop
and
out
mov
adc
aad
scas
and
xchg
lock
daa
scas
adc
adc
push
inc
dec
xchg
outs
cmps
in
xchg
scas
je
cmp
push
cwde
test
aam
add
jmp
push
xchg
push
mov
lahf
or
jle
add
inc
jo
push
push
addr16
mov
stos
xlat
push
mov
xchg
dec
leave
or
(bad)
pop
dec
mov
mov
mov
push
call
inc
pop
test
cmp
xor
dec
and
xlat
data16
pop
out
adc
add
adc
add
neg
pop
pop
mov
ss
mov
mov
cwde
(bad)
mov
pop
add
aam
cmp
dec
scas
pop
inc
mov
ins
das
xor
ja
xchg
fld
inc
cmovle
mov
sbb
push
ja
fild
shl
in
leave
enter
add
xor
mov
ret
aad
bnd
repnz
jmp
(bad)
cmc
adc
iret
popa
inc
shl
leave
mov
mov
daa
js
in
sub
popa
in
mov
adc
mov
push
shl
dec
enter
movs
mov
dec
leave
test
and
adc
adc
pcmpeqw
jb
pop
push
shr
mov
inc
mov
in
mul
adc
seto
movs
scas
ret
push
xlat
cs
cmp
push
push
add
and
pop
ja
mov
out
xchg
(bad)
movs
out
pop
mov
mul
enter
adc
add
mov
add
add
cmps
aas
mov
ja
repz
cmps
mov
mov
daa
pusha
ja
daa
in
adc
jb
jb
xchg
sahf
cmps
dec
scas
in
pcmpeqd
fsub
add
leave
mov
call
jb
daa
adc
cmp
jmp
add
mov
cmp
and
xor
cmp
pop
add
push
or
ror
fdiv
xchg
add
add
inc
inc
mov
add
in
fst
test
mov
daa
cmp
aad
jo
test
aaa
repnz
and
mov
push
mov
dec
push
pushf
in
hlt
mov
xchg
outs
fs
push
add
add
jo
sbb
iret
inc
adc
cmp
iret
mov
mov
push
xchg
push
enter
mov
sar
push
push
loopne
daa
mov
fsubr
mov
cwde
mov
pushf
mov
aam
fidiv
rcr
fbstp
leave
mov
cld
dec
sbb
rol
jo
addr16
push
ss
enter
add
dec
dec
pop
jb
in
push
outs
jb
mov
or
popf
movs
lods
mov
mov
mov
int
aad
pushf
pushf
fld
aas
in
sbb
not
pusha
mov
jbe
mov
pop
fwait
or
or
and
rcr
mov
and
call
aam
xchg
les
jns
mov
adc
cwde
in
dec
movs
or
es
cmp
add
sbb
aaa
sbb
or
inc
das
dec
cmps
pop
and
into
aas
pop
or
arpl
imul
in
lods
pop
xchg
pop
sbb
mov
in
jnp
test
jl
xchg
xchg
pushf
aas
movs
pop
lods
sbb
fs
sbb
cmp
jns
xlat
fisttp
out
das
outs
mov
dec
and
test
popf
mov
and
xchg
retf
(bad)
lahf
or
sub
sub
xor
mov
xor
inc
add
push
add
pop
push
fs
pop
je
xchg
xchg
and
jl
test
mov
setl
scas
mov
sub
jo
pop
push
daa
xchg
pop
and
push
nop
loopne
adc
pop
mov
cmp
cmp
mov
jb
add
add
xor
or
jb
dec
or
pop
pop
or
in
sbb
sbb
jb
add
cmp
jg
mov
ja
test
dec
scas
in
adc
cmp
rol
fimul
(bad)
in
cmc
xchg
adc
jb
sbb
out
scas
int3
inc
dec
cs
xchg
and
sbb
sbb
sbb
dec
push
(bad)
shr
mov
or
push
bnd
jo
cmp
jnp
ja
inc
out
dec
push
enter
pop
add
add
fs
pop
je
add
dec
repnz
mov
in
and
enter
inc
mov
xchg
add
xchg
push
jb
mov
ret
cmp
(bad)
and
(bad)
mov
(bad)
into
(bad)
fimul
leave
mov
mov
ret
mov
les
enter
adc
jb
clc
sbb
mov
xchg
pushf
xchg
push
les
js
inc
daa
inc
dec
shr
sbb
and
xor
xchg
test
mov
inc
dec
push
pop
dec
repnz
es
and
push
daa
xor
outs
jbe
or
cmp
mov
pop
cwde
loopne
daa
daa
daa
pop
cwde
mov
cmp
mov
mov
adc
(bad)
pop
daa
and
sbb
enter
(bad)
in
in
push
clc
in
in
fcomp
(bad)
or
adc
sub
and
adc
mov
jl
pushf
in
xchg
(bad)
hlt
(bad)
cmp
add
dec
es
push
push
push
and
pop
dec
push
pop
addr16
movs
jnp
ins
out
pop
mov
fadd
add
daa
int3
sahf
pushf
jle
add
add
adc
add
mov
mov
mov
cmp
das
rol
pop
fsub
or
xor
cmp
or
or
test
or
adc
sahf
mov
pop
sbb
add
xor
popf
fadd
(bad)
inc
(bad)
push
pop
leave
inc
xor
test
(bad)
outs
jbe
add
or
rcr
push
add
push
(bad)
out
ret
or
leave
pushf
pop
in
lods
pop
and
in
scas
out
idiv
in
repnz
retf
jge
mov
push
sbb
and
adc
inc
and
inc
mov
or
push
or
in
xchg
or
ins
or
jb
movups
adc
pusha
jb
xchg
cld
pushf
pushf
pushf
pushf
and
mov
sahf
pushf
mov
push
rol
in
xchg
and
or
or
or
or
or
add
pushf
fsubr
adc
adc
inc
call
dec
adc
retf
in
jns
add
daa
mov
and
popa
in
add
add
inc
add
and
pop
(bad)
test
in
sbb
sub
cmp
xor
popfw
enter
(bad)
je
loopne
movs
or
in
push
jne
enter
lahf
jge
jne
pushf
stos
fist
cld
nop
inc
and
int
dec
and
jecxz
dec
and
pop
add
addr16
leave
adc
leave
rcr
pop
retf
mov
mov
dec
push
int
int
daa
mov
or
repz
sahf
and
int
add
into
ins
mov
movs
sbb
into
pusha
daa
sub
inc
mov
test
jp
adc
fisub
add
jb
leave
sti
pop
push
xor
sbb
jnp
push
pop
or
bound
push
dec
invd
mov
jg
mov
dec
into
fmul
inc
and
movs
add
dec
push
iret
inc
iret
push
out
cwde
daa
in
mov
retf
mul
rcr
add
loop
fisttp
leave
shr
enter
dec
enter
aas
and
and
adc
(bad)
add
and
dec
rcl
daa
pop
out
and
call
cs
pop
enter
pop
or
sub
movaps
pop
or
cmp
mov
rol
daa
call
pop
aaa
pusha
daa
aaa
test
in
xchg
mov
pop
add
nop
or
and
fimul
(bad)
cwde
or
mov
unpcklps
iret
adc
pushf
xor
leave
sar
mov
jbe
push
dec
jg
cmpps
in
rol
(bad)
or
popf
or
or
xor
pushf
bndstx
(bad)
and
shl
jl
and
add
daa
ss
inc
add
push
jnp
(bad)
jmp
or
or
hlt
jg
addr16
xchg
imul
xchg
das
pop
call
sbb
mov
ret
fcomp
jne
enter
shr
daa
mov
pushf
cmp
add
in
in
add
xchg
and
add
add
push
push
daa
and
mov
xor
sbb
pop
fiadd
adc
add
repnz
aam
mov
ds
push
ja
daa
pop
mov
enter
inc
add
dec
add
in
add
mov
pop
pslld
outs
or
das
or
movs
(bad)
mov
into
mov
adc
push
leave
add
loopne
aad
mov
daa
js
sbb
inc
fsub
fisub
mov
mov
aad
(bad)
xor
clc
xchg
mov
pusha
mul
or
movups
xchg
pushf
fmul
sbb
out
loop
add
in
pusha
test
jo
jecxz
in
xor
inc
dec
and
in
(bad)
jecxz
add
out
push
fcom
dec
xlat
and
call
add
pop
es
ins
fst
add
pusha
in
test
mov
xchg
(bad)
vmwrite
in
xlat
jo
mov
daa
or
mov
push
mov
and
push
into
pop
(bad)
push
repnz
dec
out
adc
fadd
push
jo
push
sbb
dec
daa
adc
movs
sub
es
clc
xor
sbb
or
enter
and
sub
xor
dec
mov
cmp
inc
or
add
mov
adc
adc
fs
ins
adc
je
(bad)
jmp
pop
jecxz
test
mov
fstp
repz
fldcw
or
push
push
imul
daa
or
leave
xchg
(bad)
mov
mov
ins
sahf
inc
lahf
cmps
push
scas
outs
or
cmp
adc
(bad)
or
popf
or
pmaxsw
not
mov
outs
inc
pop
in
imul
or
adc
cmps
adc
mov
push
iret
sub
enter
push
sbb
and
sub
cmp
in
xor
cmp
dec
dec
mov
or
or
ins
fsub
mov
or
inc
xor
imul
adc
enter
out
gs
fistp
jb
jo
(bad)
sub
jnp
add
mov
add
xchg
and
add
mov
repnz
or
add
adc
out
mov
or
or
add
in
mov
pop
popf
or
pop
mov
dec
and
fcmovnbe
sub
daa
and
push
cmp
inc
add
leave
enter
aas
pop
push
pusha
pop
imul
test
cmp
xor
or
or
cmps
adc
inc
leave
adc
stos
(bad)
(bad)
not
iret
or
xchg
idiv
out
jo
push
xchg
fst
pop
push
jnp
jg
add
in
add
pop
mov
add
fst
sbb
push
ret
dec
xor
enter
cmovge
pop
and
xor
ins
jbe
add
ficomp
fisub
scas
mov
pushf
add
movs
lods
add
add
mov
add
xlat
sbb
dec
jns
sbb
inc
or
jns
(bad)
sbb
pop
fild
movntq
out
add
sbb
add
fld
pop
unpckhps
and
das
sub
cmp
popf
pushf
or
ss
and
pushf
cmovno
dec
adc
xchg
daa
js
or
enter
pop
test
cmp
push
mov
ud1
rcr
inc
into
sahf
rcr
das
fstp
call
fimul
sti
and
and
sbb
jb
enter
es
xor
and
sbb
sub
sub
nop
daa
pop
sbb
outs
and
sahf
js
pop
xor
xor
xor
xor
fs
leave
mov
cmp
ret
cmp
xor
fs
cmp
loope
not
inc
sub
inc
jb
enter
das
sbb
sub
(bad)
mov
xor
dec
dec
cs
dec
enter
xorps
sbb
cmp
in
dec
jge
pop
test
push
cmp
cmp
pop
test
push
inc
into
sahf
mov
pop
fist
pop
pslld
pop
das
jb
in
enter
pop
pop
adc
sbb
sbb
and
into
fs
fldenv
in
out
addr16
in
in
leave
idiv
imul
sbb
ss
ins
sub
outs
inc
outs
cmp
not
divps
imul
cmp
das
(bad)
jbe
inc
sahf
int3
sahf
movs
js
lods
mov
pusha
test
jl
inc
jge
dec
jle
and
push
jg
lahf
add
and
jecxz
jecxz
daa
mov
outs
das
js
jo
pop
ret
scas
das
cdq
add
mov
jb
add
mov
inc
ror
aam
scas
fistp
shl
scas
out
out
pcmpeqd
mov
adc
push
neg
or
and
pop
lea
enter
push
pop
fs
outs
inc
xor
pop
and
ja
gs
sub
xchg
cmp
sbb
dec
dec
or
sahf
vmwrite
clc
dec
pop
in
punpcklbw
mov
mov
pmulhuw
sbb
and
sub
xchg
daa
cmp
inc
or
cmp
fs
push
pop
or
or
ins
pop
pcmpeqb
in
test
mov
mov
push
lods
mov
pop
mov
inc
retf
sbb
ja
in
call
xor
pmulhuw
daa
in
add
xor
and
sbb
cmp
push
sub
dec
inc
into
pop
pop
sub
setl
into
mov
scas
sub
das
mov
addr16
ret
pop
retf
addr16
inc
aad
pmulhw
in
repnz
xchg
cmp
cmp
cmp
add
cmp
and
inc
sub
inc
pushf
popf
or
pop
dec
inc
andnps
and
pop
inc
gs
ins
dec
bound
enter
dec
test
fcmovne
leave
mov
lea
xchg
bswap
xchg
xchg
mov
pop
mov
mov
in
into
push
pop
(bad)
push
ficom
pop
mov
idiv
mov
das
(bad)
pop
rdpmc
push
pop
push
pop
adc
pusha
push
popa
outs
repnz
push
sbb
add
popa
out
add
push
call
mov
push
jecxz
push
push
dec
add
sahf
daa
ss
out
and
add
push
fld
psubsb
mov
fild
push
mov
out
jp
add
push
das
xchg
popf
or
and
or
leave
in
in
push
pop
enter
jbe
fsubr
adc
adc
fcom
call
and
cli
xor
in
fld
add
or
adc
sbb
add
xor
smsw
je
jmp
daa
mov
add
xor
inc
enter
dec
(bad)
dec
push
add
xor
pop
push
fs
outs
or
inc
into
mov
movq
xchg
xchg
shr
ins
fistp
jmp
mov
in
mov
pushf
in
mov
inc
mov
push
or
adc
xchg
mov
xchg
dec
ja
jb
aas
dec
ja
hlt
add
sub
je
mov
jmp
scas
add
dec
jecxz
mov
add
movs
push
imul
pusha
mov
cmp
sub
cs
xchg
pushf
xor
xchg
pop
and
push
movs
movs
shr
cmp
adc
leave
in
cld
in
or
sbb
cs
xchg
pop
shr
rcr
dec
xlat
push
xor
dec
in
out
lahf
test
pop
ss
add
cs
jo
inc
mov
ss
pushf
pop
mov
pop
out
and
pop
bound
jmp
cs
mov
mov
cs
xchg
mov
leave
out
fdivr
add
enter
out
xor
pushf
push
addr16
iret
push
xchg
enter
cwde
in
pop
add
push
mov
add
and
add
cmp
push
daa
lock
adc
sbb
push
addr16
cmp
jns
jbe
into
xchg
sub
add
mov
icebp
sbb
push
push
aaa
aaa
push
inc
add
xchg
and
pop
add
jns
cmp
enter
pop
mov
push
popa
sbb
dec
scas
pop
and
push
pushf
pushf
dec
cs
xchg
pop
and
hlt
and
xchg
dec
cs
and
dec
cs
dec
cs
js
dec
cs
dec
movs
imul
jnp
dec
pop
push
call
pop
xor
sub
(bad)
repz
dec
or
cmp
xchg
imul
xrelease
dec
cs
jmp
leave
pop
add
hlt
les
daa
sub
fbld
push
icebp
pop
jb
mov
pushf
xchg
adc
bound
in
cmp
pushf
in
or
sub
dec
and
je
xor
bound
cmp
pop
lsl
add
xor
cmc
mov
lahf
cmc
mov
enter
andnps
pop
add
add
ins
push
jne
jge
mov
ror
xchg
and
sbb
ds
mov
xchg
push
add
jmp
in
pop
neg
push
sub
mov
inc
(bad)
in
pushf
jb
div
mov
and
mov
test
inc
jno
cmp
enter
(bad)
clc
clc
jb
add
clc
cmp
pcmpgtd
xchg
adc
cmp
jbe
push
mov
dec
dec
mov
jecxz
fsub
and
push
in
fidiv
adc
fs
call
imul
fisttp
jmp
add
mov
out
add
mov
mov
in
pop
(bad)
cmp
in
adc
pop
fisttp
leave
imul
cli
js
in
or
cmp
jb
and
cmp
pusha
push
jo
(bad)
shr
ja
pop
enter
xor
lods
pop
jb
daa
pushf
movs
lds
daa
daa
daa
int
fucom
xchg
cmp
(bad)
ins
in
sti
jl
jecxz
rcr
or
daa
mov
pop
enter
out
cmp
cmp
enter
(bad)
pop
add
leave
dec
push
ja
cld
add
dec
in
add
imul
xor
fs
pop
and
pop
addr16
jns
pop
and
mov
movs
(bad)
cmp
std
inc
popa
or
mov
outs
addr16
adc
ja
or
jmp
push
out
add
mov
mov
xchg
or
ftst
enter
psraw
jmp
sbb
jb
add
pop
adc
pushf
mov
or
mov
xchg
cmps
mov
cmp
inc
push
aaa
cmp
add
jnp
jnp
cmp
cmovnp
inc
mov
pop
pop
or
ja
imul
fild
mov
add
(bad)
cld
inc
xor
sbb
xchg
xchg
iret
cdq
add
mov
stos
add
pop
(bad)
jb
cmp
mul
call
xor
inc
out
repnz
es
xchg
jae
cmp
fcomp
loopne
call
enter
sub
or
jb
or
adc
sbb
pushf
mov
xor
das
inc
cmp
cmp
dec
push
pop
pusha
cmp
cmp
push
mov
mov
push
in
xchg
and
cmp
cmp
and
sbb
cmp
inc
xchg
xchg
pop
imul
das
daa
add
test
mov
pop
sub
inc
inc
adc
lds
mov
xor
inc
mov
ds
jmp
cmps
pop
and
aas
or
pop
aas
adc
or
dec
inc
xor
das
cmp
dec
fcmovne
enter
minps
in
enter
adc
mov
repnz
test
mov
xor
mov
into
pop
push
int
paddusw
mov
pmaxsw
and
inc
add
or
adc
das
sbb
in
xchg
sub
sub
and
loope
out
inc
inc
inc
dec
movs
add
sub
outs
pop
leave
dec
add
mov
xchg
dec
mov
mov
jne
fxsave
enter
fsub
add
call
in
add
add
push
inc
mov
inc
add
or
adc
sbb
xchg
xchg
push
and
pop
or
fst
inc
cmp
inc
add
push
add
push
inc
jo
xlat
sbb
and
mov
(bad)
add
daa
daa
daa
ret
fisub
daa
daa
daa
loop
repnz
xchg
xchg
xchg
and
or
xchg
xchg
xchg
xchg
sbb
sub
dec
dec
jb
cmp
dec
add
ss
pop
push
sbb
inc
jb
jo
xor
jb
xchg
mov
mov
fild
leave
retf
clc
fisttp
inc
jb
sub
jb
in
std
inc
add
sub
inc
sbb
or
mov
int
jbe
lahf
das
sbb
or
cmp
push
fsub
daa
add
std
or
and
jb
jo
or
daa
inc
xlat
push
mov
xchg
push
and
jmp
sub
cld
or
sbb
jo
jbe
xcrypt-cfb
cmps
addr16
outs
mov
data16
mov
out
add
mov
lock
andnps
or
inc
jl
sub
sbb
mov
or
leave
in
in
push
pop
pusha
punpckhbw
jb
in
add
add
add
inc
mov
or
pushf
dec
dec
adc
mov
or
inc
(bad)
xchg
xchg
or
or
xchg
xchg
mov
xlat
or
inc
(bad)
jno
push
mov
push
pop
fdivr
inc
retf
inc
sahf
sbb
rcr
add
pop
mov
mov
or
int3
mov
inc
inc
jl
daa
fadd
cld
jge
inc
cld
add
inc
add
or
push
out
in
inc
pop
adc
pop
(bad)
inc
out
pop
dec
inc
jnp
inc
es
out
aas
test
sahf
pushf
inc
dec
add
or
mov
xlat
inc
pop
enter
or
xor
add
jns
das
inc
into
lock
dec
cdq
or
cmp
and
cmp
or
ins
das
in
add
call
add
adc
jb
add
test
(bad)
push
and
pushf
inc
cs
in
test
mov
inc
pop
rol
leave
or
push
dec
js
pop
jb
jb
cmps
add
pop
daa
out
outs
daa
cmp
ror
sbb
loopne
jnp
into
jno
pop
inc
xchg
inc
popf
add
xchg
push
lds
(bad)
cmovo
in
jbe
mov
push
(bad)
(bad)
enter
loope
psubsw
add
stc
xchg
xchg
mov
jmp
inc
sbb
mov
mov
es
adc
xchg
xchg
xchg
xchg
inc
dec
push
pop
sbb
repnz
pop
xchg
push
jge
lea
pop
leave
dec
aaa
xchg
xchg
push
enter
xchg
daa
cmps
add
in
ret
retf
pop
pcmpgtb
in
rol
add
fisubr
or
out
dec
xor
cmp
add
cmp
je
add
jl
push
(bad)
repnz
push
dec
push
dec
pop
push
pusha
inc
xor
sub
sahf
pushf
mov
sahf
mov
sbb
mov
jb
xchg
xchg
loope
icebp
adc
push
cmp
in
aas
adc
fadd
mov
xchg
inc
shl
dec
dec
or
xchg
xchg
mov
and
adc
dec
cs
dec
cmp
xchg
dec
cs
push
dec
cs
jb
mov
repz
adc
mov
or
cli
pushf
pushf
in
adc
adc
fs
xchg
pop
xor
mov
xlat
cs
enter
sub
ja
add
jbe
cld
pop
repz
adc
not
or
sbb
cmp
pushf
in
push
es
call
xchg
dec
adc
sub
cmp
add
(bad)
push
or
(bad)
and
sbb
sub
add
fs
mov
fidivr
fsub
push
jb
xlat
dec
dec
pop
adc
mov
leave
or
xchg
or
pop
dec
leave
or
or
int3
fsubr
pop
(bad)
fcmovne
add
jmp
leave
dec
add
and
bts
adc
sbb
push
shr
jbe
push
sbb
dec
scas
xchg
adc
mov
xchg
cld
sbb
or
in
cmps
sbb
sbb
pop
push
addr16
and
dec
fcomp
in
push
in
fmul
xchg
shl
repnz
sbb
sub
in
or
xchg
xchg
xchg
retf
fs
dec
dec
dec
dec
js
mov
cs
test
mov
dec
retf
in
fnstsw
leave
enter
add
sbb
leave
dec
ja
dec
add
ins
add
and
xchg
pushf
jmp
sbb
pop
add
aam
in
xor
sbb
push
dec
in
daa
and
ret
pop
mov
cmp
or
enter
and
(bad)
call
cmps
jge
xchg
jb
je
div
loopne
dec
pop
punpcklwd
pop
imul
add
jns
push
mov
int3
sahf
mov
or
sahf
pushf
int3
sahf
mov
ud1
leave
setle
sahf
int3
dec
rcr
adc
loope
adc
pop
sahf
int3
psllw
add
push
or
enter
sbb
sbb
sbb
sbb
sub
xor
add
and
dec
pop
pop
push
and
mul
popa
and
jno
and
jb
mov
xchg
cdq
sub
mov
sub
sub
shr
das
shl
in
in
fs
xor
jmp
sbb
repnz
xor
aaa
adc
dec
inc
into
mov
cmp
and
sub
xchg
mov
lods
push
cmp
aas
sbb
jb
push
inc
pop
inc
popa
inc
imul
jns
jno
mov
fist
enter
dec
test
mov
mov
push
rcl
push
pop
loope
jmp
enter
push
dec
add
pop
pop
sahf
mov
adc
pop
and
add
pop
cmp
cmovns
push
pop
aas
popa
fs
fs
imul
popf
or
pop
xchg
imul
mov
ins
inc
mov
repnz
ror
add
imul
rcl
push
or
and
sub
pop
leave
and
and
scas
or
pop
pop
test
cwde
(bad)
or
dec
or
test
pop
addr16
xchg
and
outs
add
jg
mov
pop
xchg
pop
aaa
add
xstore-rng
cmps
pop
dec
fisttp
leave
dec
mov
daa
xchg
xchg
or
xchg
xchg
xchg
xchg
leave
rcr
loope
mov
stc
push
add
repnz
add
call
add
add
adc
int
push
and
out
ficomp
ss
dec
ja
fist
mov
and
add
xchg
es
daa
test
adc
loopne
sbb
mov
mov
(bad)
dec
lods
xchg
idiv
jns
stc
or
push
jns
jns
jns
adc
mov
push
cdq
pop
pop
test
leave
enter
leave
or
jb
jb
psraw
repz
or
sub
adc
cs
pop
add
push
add
or
das
inc
out
mov
and
and
sub
jge
xlat
fist
out
fadd
adc
addr16
push
sbb
push
and
push
cmp
cmovne
dec
pop
push
pop
or
ins
or
jne
in
in
jge
test
lea
popf
cmps
adc
mov
mov
sub
ror
pop
(bad)
rcl
es
ret
or
mov
push
sbb
mov
mov
mov
out
pop
sbb
in
enter
add
adc
xchg
(bad)
push
push
push
push
fucomi
test
push
push
push
(bad)
pop
fs
enter
or
cmp
dec
or
push
or
or
cmp
(bad)
adc
xchg
xchg
adc
or
mov
push
cs
pop
add
adc
mov
pop
cmp
xlat
aas
dec
cmps
push
sub
iret
xor
daa
clc
sbb
sbb
xchg
mul
daa
movs
add
sbb
leave
leave
leave
sbb
pushf
pushf
pop
enter
loop
pushf
pushf
pushf
jmp
aam
(bad)
or
or
sahf
and
das
sub
adc
mov
xchg
or
adc
xchg
xchg
or
sbb
fcomp
pop
pop
add
and
out
push
jbe
adc
ja
cmp
dec
or
mov
daa
pop
jb
in
xchg
xchg
imul
jb
push
rcl
or
leave
add
pushf
adc
dec
push
ret
addr16
inc
out
mov
inc
lahf
sub
gs
jne
xchg
push
push
xchg
and
push
and
sub
xor
cmp
enter
pop
push
or
and
sbb
or
jle
mov
enter
push
lahf
rsm
adc
sbb
mov
rcl
adc
adc
enter
adc
mov
repnz
add
or
sbb
xchg
and
sbb
sbb
jb
dec
pop
pop
and
jo
xchg
and
jnp
lahf
and
and
scas
es
in
je
xchg
pop
push
fcomp
sub
daa
sbb
hlt
add
int3
aam
push
fcomp
adc
in
add
mov
nop
push
add
jo
sub
daa
mov
in
out
pop
push
pop
push
sub
and
call
pop
cmp
inc
dec
in
xchg
xchg
or
or
cmp
or
or
cdq
cmp
adc
mov
adc
dec
inc
mov
adc
aam
(bad)
mov
add
jnp
inc
outs
fucom
and
daa
mov
cmp
adc
fs
sbb
cmp
cmp
sub
add
daa
cmp
daa
push
push
in
inc
add
or
test
mov
shr
loopne
je
jbe
test
add
lock
xor
xchg
or
enter
push
mov
cdq
add
scas
add
add
adc
adc
mov
sysexit
test
xor
or
push
xchg
xchg
or
lods
js
cmp
pop
cld
pop
add
leave
adc
mov
xor
and
pop
daa
push
in
mov
mov
leave
shl
or
sbb
xchg
dec
dec
and
and
cmp
mov
cmp
daa
and
push
jb
scas
std
pop
in
jb
push
in
stos
mov
shl
xchg
mov
(bad)
xor
daa
sub
mov
in
mov
jb
cmp
nop
cmp
popf
in
adc
daa
xor
fisubr
or
jo
and
mov
push
js
sub
push
outs
xchg
aam
jecxz
jb
fsubr
xchg
mov
xor
pop
and
xchg
js
and
xchg
mov
xchg
shl
lock
cmp
in
fisttp
cmp
dec
scas
je
in
stos
adc
cwde
js
mov
leave
leave
call
dec
jb
push
aaa
inc
daa
push
xchg
stos
in
scas
jp
xchg
mov
in
test
leave
xchg
dec
scas
loopne
cmp
and
xchg
adc
mov
in
dec
pop
hlt
xchg
xchg
dec
scas
nop
mov
daa
pushf
shr
clc
and
or
dec
cmp
push
xor
pop
sub
xor
sbb
addr16
dec
add
pop
jb
int3
jg
mov
cmp
daa
xchg
xchg
cmp
mov
pop
pmulhuw
add
ins
xchg
cmps
rol
push
das
cmp
dec
or
outs
adc
pop
push
jle
out
pop
and
cmp
cmp
mov
cmp
xchg
pop
and
mov
dec
and
les
inc
les
cmps
cmp
push
leave
mov
or
cld
ror
adc
iret
mov
fiadd
push
mov
xchg
out
mov
aaa
jmp
cs
cmp
or
sbb
daa
push
out
in
add
add
push
add
add
dec
cs
cli
mov
ds
cmp
popf
pushf
pushf
inc
dec
push
cmps
or
xchg
bound
cmp
mov
jp
in
jbe
mov
xchg
pop
popf
movs
sbb
repnz
or
lods
xchg
out
mov
int3
mov
data16
not
add
int3
in
in
pop
repnz
retf
loopne
ja
setl
in
pop
or
(bad)
inc
mov
lea
and
inc
(bad)
mov
push
inc
pop
and
nop
sub
cmp
pushf
popf
inc
push
cmovge
push
or
xchg
pushf
cmp
jle
fsub
loopne
popf
inc
and
in
inc
pop
inc
inc
out
xchg
xchg
jae
add
or
mov
push
fdivr
dec
add
mov
scas
xor
lods
aas
inc
mov
cmps
pop
cdq
pop
mov
xchg
and
in
in
ficomp
loop
pminsw
repnz
addr16
cmp
inc
mov
or
adc
sbb
and
daa
daa
daa
and
cmp
jb
mov
pushf
push
in
jb
pop
data16
pcmpeqd
inc
jb
jle
lock
leave
in
leave
leave
cwde
mov
in
or
mov
int
(bad)
fild
pop
push
daa
xor
retf
sbb
leave
(bad)
das
pop
jmp
repnz
cli
out
mov
in
add
or
adc
dec
dec
ret
enter
pop
inc
cld
in
mov
pop
xor
cmp
inc
add
cmp
add
sbb
out
xlat
rol
pusha
mov
inc
je
cmp
outs
pop
nop
or
pop
pop
out
fs
fst
xchg
pop
popf
fdiv
jb
or
or
pop
mov
mov
loop
inc
add
mov
xchg
hlt
sub
or
inc
jb
push
test
leave
inc
xor
dec
fcomp
in
cmp
xor
in
mov
in
mov
pop
jb
mov
sbb
jo
das
inc
cmps
dec
adc
lahf
jbe
jmp
or
test
(bad)
out
pusha
push
into
mov
push
pop
add
add
add
inc
mov
xchg
pop
(bad)
loop
dec
dec
xor
outs
lds
movs
dec
es
pop
lods
add
(bad)
jo
dec
dec
fsubp
fxch
repnz
mov
fnstenv
or
inc
enter
shl
or
pop
addr16
adc
popa
adc
dec
sbb
outs
mov
(bad)
or
cmp
cmp
xchg
popa
pop
dec
xor
jle
xchg
inc
and
pop
(bad)
inc
mov
daa
cwde
out
daa
sbb
mov
cmpps
xchg
and
add
sahf
push
leave
dec
sub
push
in
add
bound
pushf
pushf
pushf
pushf
adc
and
pushf
pushf
pushf
pushf
xor
inc
dec
pushf
pushf
pushf
pushf
push
pop
fs
xchg
xor
mov
cmp
jb
int3
loopne
add
dec
clc
fisttp
inc
in
adc
dec
or
pop
bound
punpckldq
add
rol
cmc
or
std
or
adc
dec
loop
movs
repnz
sahf
pop
or
sbb
sub
call
and
repnz
push
daa
add
add
inc
jmp
fldenv
and
cs
pop
pop
or
xchg
fst
mov
enter
adc
xchg
fnstcw
add
repnz
add
xor
fadd
pushf
addr16
paddsb
dec
or
mov
jo
jno
in
mov
and
(bad)
ins
add
outs
test
mov
xchg
stos
in
int3
in
pushf
push
mov
dec
sub
mov
mov
push
sbb
and
or
inc
dec
dec
inc
aaa
and
jmp
add
xchg
mov
jo
jmp
mov
sti
daa
das
adc
mov
loopne
mov
jg
mov
add
lock
(bad)
mov
movs
or
inc
dec
jb
pop
aaa
pop
cmc
dec
mov
enter
push
in
dec
aas
and
outs
and
int3
push
cmp
fs
clc
pop
mov
data16
mov
xchg
xchg
dec
pop
mov
iret
jbe
add
add
mov
rol
dec
rcl
add
jo
pop
sti
xchg
repnz
popw
add
sub
dec
into
pop
pop
arpl
push
cmp
icebp
xor
sub
movs
fld
ja
xlat
data16
sbb
pop
push
nop
push
jl
dec
inc
sub
stos
inc
push
mov
jg
or
fsubr
mov
sbb
or
sub
out
jmp
in
fld
add
lar
add
add
xor
cmp
add
xchg
mov
out
aas
xor
enter
call
shl
add
addr16
fs
rol
outs
nop
mov
push
lock
cwde
jbe
jg
daa
loopne
addr16
in
push
mov
dec
leave
inc
and
lahf
ret
cmps
push
jno
dec
push
lock
fsub
std
bnd
mov
sub
push
fcomp
push
je
cmp
addr16
fstp
cld
mov
addr16
inc
add
ror
add
push
dec
les
aas
inc
jb
cmp
add
fs
shl
xor
push
push
cmps
das
dec
xor
les
in
aaa
inc
dec
inc
div
push
test
daa
sub
mov
adc
and
push
adc
ja
pop
fisttp
stos
adc
aaa
mov
push
push
pushf
(bad)
push
lods
daa
mov
xbegin
or
inc
loopne
and
leave
add
and
push
inc
ret
fcom
aas
xchg
dec
in
and
push
call
nop
daa
aaa
in
shl
pop
lock
jg
cmp
in
pop
push
sahf
cmps
iret
push
add
cwde
jo
inc
leave
fist
cmovo
leave
add
mov
cmp
in
push
cwde
push
test
mov
pop
aam
adc
movs
mov
in
and
adc
and
or
pop
pop
inc
mov
mov
sbb
outs
inc
or
movs
push
test
jo
movs
pop
femms
mov
ja
mov
xor
aas
int3
sar
cmp
push
pop
pop
xor
inc
scas
scas
xchg
xchg
and
shl
js
cmps
xchg
dec
mov
fcmovbe
fs
shl
cmp
or
pop
sub
sbb
call
pop
mov
daa
je
push
jb
scas
fadd
jb
int3
pop
in
scas
mov
add
adc
and
fs
adc
fistp
loopne
or
popa
cwde
mov
bound
(bad)
and
pop
ins
pop
pop
das
out
leave
test
call
xchg
sbb
or
ror
sub
aaa
mov
test
(bad)
movs
lahf
rol
test
inc
pop
leave
test
(bad)
pop
int3
push
pop
cmp
pop
fsubr
test
cmc
xlat
and
shr
sub
pop
and
xor
mov
call
dec
scas
add
xchg
dec
cs
stos
retf
stos
iret
pop
adc
add
rcr
pushf
push
imul
cwde
adc
add
xor
add
(bad)
dec
repnz
pop
or
outs
cwde
in
or
pop
into
shr
(bad)
std
das
fidiv
test
sbb
xlat
ins
dec
je
xchg
or
ins
cmp
test
ja
add
outs
ja
add
out
pusha
sbb
mov
inc
pop
add
xchg
pop
jmp
mov
and
(bad)
add
pop
mov
mov
xchg
add
das
(bad)
sbb
daa
daa
daa
adc
inc
ins
dec
outs
mov
repz
das
or
or
pop
outs
(bad)
iret
rol
inc
add
cmps
scas
repnz
mov
out
or
push
sub
leave
test
movs
cmps
and
dec
xchg
add
popa
jmp
outs
(bad)
push
fsubr
jbe
popa
hlt
addr16
icebp
xor
iret
rol
push
leave
push
bound
daa
pop
in
(bad)
outs
mov
nop
scas
xchg
add
mov
int3
fsubr
xchg
arpl
and
xor
mov
adc
dec
or
dec
cs
sub
in
push
les
cmp
leave
test
sbb
sub
push
dec
adc
jo
push
shl
jb
add
jl
fs
inc
movs
je
add
ror
add
mov
cmp
inc
fmul
ret
inc
add
pand
stc
jno
fbstp
xchg
je
dec
jno
(bad)
fcomip
add
mov
mov
inc
gs
outs
xchg
loopne
int3
daa
xchg
mov
es
data16
cmp
call
push
pop
in
ror
test
into
outs
(bad)
cmp
loop
daa
jns
mov
clc
int3
fadd
imul
addr16
addr16
and
jb
leave
sub
xor
sahf
aam
cmp
pop
add
add
jne
push
and
mov
pushf
mov
cmps
fcomi
es
xchg
add
pop
push
and
ss
(bad)
addr16
mov
test
pop
shl
pop
xchg
and
test
mov
scas
imul
dec
cs
repz
xchg
pushf
dec
je
movs
jb
inc
push
fild
and
xchg
(bad)
dec
add
iret
aas
push
mov
sub
xchg
fmul
shr
fild
dec
nop
add
movs
iret
mov
(bad)
test
and
push
in
mov
pushf
jecxz
fbstp
sbb
cdq
adc
jne
adc
dec
push
xor
add
pop
shl
addr16
and
mov
in
das
ins
sbb
inc
ins
inc
mov
push
lock
add
inc
push
adc
adc
mov
movs
iret
call
arpl
ins
ror
pushf
add
adc
sub
and
in
(bad)
nop
xchg
inc
repnz
mov
jbe
jmp
cmp
jbe
out
push
push
push
pop
jbe
ins
lods
push
adc
add
cmp
jo
leave
ins
ins
call
jns
movzx
outs
xor
fcomp
bnd
outs
push
push
inc
mov
outs
nop
sbb
in
jbe
sub
or
cmp
xchg
pop
ja
ja
outs
adc
adc
mov
in
add
ja
cmp
mov
adc
sub
fs
clc
mov
add
popf
mov
(bad)
nop
push
jo
js
cmp
xor
lahf
sar
jbe
mov
jl
inc
pusha
and
xlat
js
(bad)
and
daa
jge
adc
fld1
call
xchg
sbb
jno
daa
and
add
js
jno
sahf
pop
lock
lahf
loope
add
icebp
inc
(bad)
je
stc
push
and
adc
ror
sub
popa
in
pminsw
fmul
sbb
sub
scas
leave
and
jo
xchg
adc
sub
mov
enter
jns
adc
pop
jae
jns
pop
in
test
xor
and
and
leave
leave
xchg
xor
in
cmp
jb
call
je
xchg
jbe
hlt
out
push
(bad)
xchg
add
lods
test
push
ins
pop
test
(bad)
and
sub
stos
mov
lock
lock
jne
pop
push
add
mov
jb
pinsrw
push
xchg
cmp
and
add
ret
test
mov
dec
inc
sbb
daa
cmp
inc
push
repnz
inc
outs
out
sub
push
(bad)
(bad)
imul
movs
jg
sub
(bad)
lahf
push
jno
in
out
xchg
div
xchg
add
addr16
push
aam
jnp
fnstcw
ja
das
in
mov
cmp
lods
outs
add
jb
ja
jl
ja
push
jb
daa
ficomp
call
js
clc
jnp
pop
jo
mov
pop
sahf
fld
aam
(bad)
ficom
add
dec
dec
fidivr
pop
fild
jg
mov
daa
dec
in
(bad)
ds
mov
leave
mov
data16
cmp
pushf
push
cmove
int
ds
push
dec
mov
in
imul
ins
scas
jg
sar
xchg
pushf
dec
jnp
jge
xchg
cmp
add
jle
mov
inc
cmp
(bad)
nop
adc
or
mov
test
jno
mov
xchg
(bad)
mov
es
xchg
adc
xchg
not
daa
xchg
push
adc
cwde
scas
call
fwait
ss
pushf
dec
or
daa
mov
adc
push
adc
stos
in
adc
mov
pop
repz
lods
cmps
pop
ja
inc
jo
pop
mov
punpcklwd
inc
jp
mov
lahf
add
imul
mov
xchg
lds
push
jge
daa
push
lahf
fsubrp
push
jo
aas
mov
fucomip
push
repz
mov
push
outs
jg
dec
mov
cli
dec
jle
push
mov
xchg
add
daa
xlat
fcomp
sub
dec
mov
push
xlat
inc
sar
lds
mov
rcr
sub
mov
and
mov
and
call
jns
loopne
dec
mov
out
test
push
sbb
pop
push
sbb
jg
adc
mov
cmp
and
mov
jg
and
and
and
push
mov
mov
sub
sub
push
ds
push
sub
sbb
sub
lahf
ds
xlat
dec
dec
and
push
mov
adc
pop
xor
pop
sbb
popf
pop
test
inc
mov
jecxz
inc
aas
xchg
fs
mov
leave
mov
repnz
stos
(bad)
jl
leave
sub
mov
leave
inc
jb
(bad)
cmp
add
mov
nop
jge
mov
das
les
leave
mov
clc
(bad)
wbinvd
inc
add
in
xor
inc
(bad)
cmp
mov
addr16
push
push
leave
push
mov
inc
add
cmp
call
(bad)
lock
out
sbb
add
mov
ret
or
ins
adc
mov
mov
pop
inc
add
das
in
cs
test
rol
inc
push
out
inc
xchg
fsubr
add
inc
inc
ss
test
add
test
das
outs
adc
ret
leave
inc
xor
or
mov
popa
je
rol
add
in
arpl
add
sbb
imul
xchg
aas
and
dec
cmp
inc
dec
push
clc
fldcw
xchg
ss
arpl
or
add
add
ficom
fiadd
sbb
imul
addr16
dec
shr
jns
ins
mov
ja
bound
jns
lds
ja
inc
lods
nop
xchg
imul
push
fild
es
pop
shl
lahf
or
jo
je
push
outs
pop
bound
mov
outs
cmps
adc
pop
ins
pop
mov
(bad)
lahf
cmp
call
sub
or
fdiv
aas
outs
inc
and
add
mov
xor
jb
test
pop
push
call
inc
or
add
adc
shr
sbb
mov
not
lea
retf
lahf
mov
jmp
aam
mov
gs
int
sbb
sub
aas
pop
inc
fs
shl
rcl
ds
arpl
inc
push
call
push
dec
es
add
sub
cmps
cmps
mov
ins
rol
popa
and
ss
push
jmp
inc
bound
div
or
addr16
jbe
jge
andps
adc
out
(bad)
add
enter
jmp
add
add
inc
jbe
test
sub
je
pop
dec
inc
cmp
daa
cwde
pop
out
xor
pop
push
outs
outs
sub
push
in
push
inc
(bad)
mov
add
jne
push
dec
lods
mov
pusha
fsub
dec
inc
imul
push
jo
add
mov
js
popw
inc
sub
sbb
scas
adc
pop
cs
sub
aas
scas
or
inc
outs
xor
cwde
cmp
ins
mov
xchg
call
ins
pop
push
test
call
inc
jg
dec
cmp
sbb
aaa
add
lahf
pop
push
call
data16
es
add
xchg
inc
pusha
push
test
push
daa
fsub
xchg
push
dec
or
lods
and
rcl
mov
aas
push
push
loopne
push
les
push
ja
div
or
mov
ins
and
sbb
push
rol
xchg
sti
push
pop
inc
xor
or
sub
add
ins
in
pop
mov
push
or
pop
add
dec
ja
ret
fidivr
push
loop
adc
dec
dec
add
sbb
push
inc
aaa
push
and
mov
xchg
shr
pop
dec
add
aas
add
jbe
scas
aas
and
(bad)
gs
xlat
push
pop
xchg
or
adc
and
push
aas
pop
and
adc
aas
pop
in
lock
xor
in
das
out
or
jecxz
add
sub
adc
data16
sar
jb
inc
je
aaa
inc
inc
push
scas
rcl
out
xchg
(bad)
fnstcw
rcl
and
fidivr
dec
hlt
add
lock
xchg
and
or
js
(bad)
fistp
mov
add
pop
cwde
or
dec
outs
outs
mov
ds
add
or
int
xchg
inc
push
add
pop
add
mov
int
inc
push
das
push
adc
fwait
add
das
and
jl
inc
(bad)
fcom
mov
fcmovu
pop
out
push
xor
inc
test
push
push
scas
and
(bad)
call
dec
dec
imul
xchg
cdq
call
jne
cmp
repz
jb
jo
repz
outs
outs
ins
ins
imul
repz
push
js
aas
call
push
call
out
sahf
out
cmp
ins
or
jns
nop
lods
aam
add
inc
iret
repz
push
ins
test
or
adc
ins
ja
js
imul
gs
add
out
mov
inc
pop
pop
ss
inc
dec
push
add
push
inc
ja
loope
sbb
daa
pop
sub
lahf
aas
inc
or
(bad)
dec
sbb
sbb
ins
cli
mov
shl
jge
mov
push
mov
inc
test
(bad)
lahf
mov
inc
add
mov
push
mov
cld
sbb
and
je
mov
and
and
push
xchg
push
maxps
cmp
or
push
or
cdq
sub
mov
xchg
mov
mov
(bad)
inc
ror
sub
push
pop
jb
sub
out
add
fwait
pop
clc
pop
add
loope
inc
xor
jae
aam
or
in
mov
and
sbb
mov
sub
aas
aad
mov
fld
inc
popa
mov
add
(bad)
outs
imul
adc
pop
ja
or
rcl
xchg
bound
pop
lock
add
pop
adc
inc
pop
push
and
je
pop
xor
aas
add
dec
outs
push
xchg
fstp
ins
adc
hlt
aas
pop
pushf
mov
fist
imul
add
das
ror
mov
aaa
sub
lea
sub
ins
jbe
sub
fstp
add
add
xchg
test
xor
arpl
mov
mov
popa
mov
aad
cmp
dec
fild
add
mov
push
out
adc
add
inc
fist
imul
push
imul
push
xchg
pop
aaa
dec
or
xchg
or
or
jle
aad
imul
dec
push
mov
imul
ja
aas
cmp
dec
inc
dec
dec
pop
add
ins
adc
dec
jae
popa
mov
test
mov
inc
jg
cmps
push
test
inc
das
xor
lock
aas
ins
in
inc
pusha
in
and
gs
jge
push
lock
inc
push
call
xchg
(bad)
aad
inc
cmova
daa
inc
jg
xor
iret
and
das
sbb
add
sbb
rol
ds
outs
dec
ja
xchg
call
test
sbb
pop
sbb
push
push
inc
and
mov
sbb
push
mov
push
clc
pop
jae
inc
lods
loop
and
and
xor
pop
adc
mov
movs
mov
lock
xor
dec
add
aam
push
ja
movs
xchg
adc
add
aas
bound
nop
dec
ret
mov
mov
outs
pop
adc
ss
aas
mov
adc
ror
stos
jmp
inc
mov
pop
add
fisub
enter
cwde
das
leave
pusha
or
inc
ins
add
mov
or
lock
ja
adc
inc
push
aaa
ins
mov
movs
adc
inc
push
popa
es
add
lods
les
push
test
push
adc
adc
push
rol
inc
pop
xlat
push
lea
cmp
and
mov
push
popa
jp
xchg
inc
or
dec
pop
pop
pop
push
dec
dec
inc
inc
dec
arpl
push
movs
jo
pop
push
xor
adc
pop
and
inc
pop
lds
ss
xor
out
and
pop
ror
std
(bad)
or
pop
inc
inc
cwde
inc
cwde
jns
inc
sub
shl
mov
cmp
inc
inc
dec
adc
inc
(bad)
inc
pop
sbb
mov
fimul
mov
scas
div
loop
(bad)
(bad)
push
lea
jmp
fist
xor
inc
mov
test
sub
push
inc
data16
adc
xchg
dec
fwait
xor
add
scas
sbb
push
inc
setg
and
pop
or
xor
xchg
pop
test
cmp
dec
ins
push
aas
cmp
jo
and
out
add
adc
lahf
aas
pusha
pop
xor
sub
inc
pop
int
fst
and
sbb
mov
pop
jg
popf
out
outs
pop
xor
push
jne
jae
xor
push
sahf
out
sahf
pusha
pop
pop
push
push
dec
jns
out
inc
cmp
sub
jns
out
or
xor
iret
repz
clc
hlt
lock
call
cmp
(bad)
rol
repz
mov
push
movs
pushf
iret
repz
nop
mov
push
pop
dec
cmp
add
nop
shr
aam
je
sbb
inc
add
ret
mov
cmps
add
addr16
jne
popf
fsub
or
or
in
(bad)
sub
scas
adc
leave
in
cs
out
adc
and
pop
inc
inc
push
addr16
jbe
(bad)
push
xorps
jns
out
ins
push
and
jb
pop
jo
push
pop
and
cmp
pop
jo
add
leave
sahf
mov
ret
in
xor
sbb
test
cmc
adc
mov
ror
shld
or
and
adc
repnz
sbb
sbb
sbb
fs
push
sbb
xor
repnz
mov
mov
xor
js
mov
jp
cld
pop
jecxz
fnsave
xchg
jmp
cmp
and
add
pop
or
ins
mov
xor
add
add
push
fcmovu
aas
pop
aas
push
jp
fiadd
or
adc
add
aaa
push
rol
adc
movs
ins
sub
sbb
or
mov
add
jle
pop
push
sbb
cmp
dec
cmp
mov
leave
adc
add
and
imul
mov
call
test
add
xor
jns
and
push
ds
movs
sbb
sub
pop
shl
cmovo
pop
inc
mov
or
(bad)
mov
sbb
in
call
adc
add
mov
xor
fsub
xchg
in
fsubp
stc
jb
jle
aad
bound
xlat
pop
mov
pop
cmp
daa
push
jp
repnz
adc
mov
mov
cmp
pop
repz
repz
mov
repz
out
add
dec
ins
addr16
out
cmp
lahf
not
push
dec
ins
add
or
mov
sub
in
sbb
leave
inc
add
cmp
ins
jb
jg
dec
adc
sahf
push
inc
sub
into
test
xor
and
add
jns
or
sbb
jg
in
das
mov
add
enter
or
ret
mov
inc
ds
xchg
cwde
push
and
aas
add
leave
sbb
into
sbb
ror
and
sahf
mov
sub
inc
popf
imul
sbb
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
(bad)
(bad)
in
adc
inc
mov
dec
js
inc
outs
(bad)
loopne
jmp
xchg
(bad)
(bad)
(bad)
jmp
push
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
(bad)
(bad)
jmp
das
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
(bad)
(bad)
inc
xchg
push
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
(bad)
(bad)
in
push
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fdivr
(bad)
(bad)
jmp
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
and
scas
int
add
sti
aas
jno
or
(bad)
(bad)
(bad)
frstor
pop
fs
dec
lea
aas
ret
shr
mov
icebp
(bad)
(bad)
(bad)
(bad)
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
(bad)
(bad)
call
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
(bad)
(bad)
(bad)
cmp
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
(bad)
(bad)
(bad)
aas
popa
push
pop
sar
jl
mov
das
lea
mov
inc
inc
aas
movs
jmp
jmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
(bad)
(bad)
(bad)
cli
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
(bad)
(bad)
jmp
inc
inc
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
(bad)
(bad)
(bad)
(bad)
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
in
xchg
jge
pop
ficomp
frstor
out
and
pop
or
cmp
push
add
xor
rol
idiv
pop
adc
dec
xchg
xchg
or
outs
pop
mov
popa
lods
ja
and
imul
jns
jg
or
pop
add
adc
jns
out
and
xor
dec
loopne
arpl
sbb
pop
cwde
sar
jb
addr16
inc
push
clc
xor
cmp
sub
jns
push
cs
dec
adc
mov
or
mov
sub
and
shl
inc
jl
ins
sub
dec
and
sar
repnz
dec
inc
dec
push
push
or
cld
jmp
push
push
inc
inc
cs
push
std
mov
add
adc
add
(bad)
mov
mov
lock
push
adc
add
inc
add
add
add
out
mov
rcl
jl
add
cmc
inc
and
cmps
imul
scas
mov
imul
mov
call
es
les
cmps
imul
imul
mov
and
or
and
in
cs
push
js
cs
inc
fadd
push
(bad)
mov
clc
push
inc
inc
push
inc
xor
xor
add
or
(bad)
(bad)
(bad)
inc
inc
jo
adc
or
and
les
scas
push
inc
gs
test
add
daa
cmp
xor
data16
les
sbb
mov
sbb
jns
addr16
(bad)
jg
push
push
or
sbb
sbb
push
or
adc
(bad)
(bad)
(bad)
inc
sbb
jns
fwait
jbe
jns
inc
push
adc
jbe
adc
jo
xchg
jns
mov
adc
xchg
push
mov
jo
mov
jo
int
jo
xchg
call
or
push
fcomp
fsub
add
(bad)
dec
(bad)
popf
pop
int3
aam
cmps
add
(bad)
add
mov
mov
mov
loope
(bad)
(bad)
(bad)
jmp
popa
ss
daa
pop
push
and
push
add
retf
mov
rol
sbb
push
sub
sbb
call
fdivr
dec
arpl
(bad)
call
dec
adc
sar
add
adc
out
(bad)
add
jg
lahf
pusha
inc
rcl
add
test
(bad)
dec
ret
sbb
jo
xor
or
inc
or
ja
mov
(bad)
call
pop
cmp
pop
add
adc
fs
push
adc
xchg
sbb
inc
pop
cmp
mov
je
push
sbb
pop
lock
push
mov
rol
mov
inc
(bad)
(bad)
(bad)
call
mov
rol
pop
mov
fnstcw
pop
loopne
adc
xlat
in
arpl
(bad)
(bad)
dec
in
arpl
in
pop
dec
mov
bound
xchg
ins
inc
test
or
stos
xchg
(bad)
mov
and
jmp
clc
call
and
enter
sbb
pusha
adc
pop
rcr
xchg
(bad)
(bad)
(bad)
call
pop
push
dec
sub
aam
jno
inc
push
ret
mov
in
cwde
or
in
sbb
cli
mov
leave
adc
call
jne
inc
aas
gs
inc
xor
sbb
jp
xchg
push
pop
add
adc
fcomip
loope
pop
or
fwait
scas
jp
inc
arpl
mov
fadd
inc
out
arpl
mov
adc
rcl
push
rcr
mov
(bad)
adc
retf
fcom
(bad)
push
xchg
pop
(bad)
out
sbb
(bad)
(bad)
jg
mov
mov
mov
push
out
adc
std
repnz
sbb
mov
push
xchg
nop
je
xor
repnz
sbb
cmovae
mov
mov
add
and
(bad)
(bad)
dec
inc
arpl
or
loopne
sbb
push
ret
push
es
or
bound
add
xchg
push
xchg
arpl
jo
jne
leave
xchg
es
call
(bad)
jmp
push
(bad)
(bad)
ds
pop
dec
(bad)
fmul
pop
dec
mov
mov
inc
rcl
int3
sub
mov
pop
mov
push
add
inc
xchg
or
adc
dec
mov
mov
or
pop
pop
mov
dec
sbb
mov
hlt
lds
push
ret
out
dec
mov
sbb
(bad)
inc
gs
or
jle
sbb
and
sysret
pop
mov
add
jg
xor
inc
sbb
cmps
stos
ds
movs
mov
sbb
nop
inc
add
loope
or
add
nop
and
inc
add
and
dec
mov
in
jmp
mov
and
sbb
add
cwde
adc
rol
sete
(bad)
es
add
test
add
adc
fcmovnu
push
fcom
pop
push
push
(bad)
pop
fadd
xchg
or
adc
in
sbb
fcomp
push
cld
add
in
adc
jo
xlat
rol
pop
arpl
jo
setge
push
(bad)
(bad)
push
push
pusha
(bad)
dec
mov
dec
sahf
add
ss
mov
xor
movs
sub
(bad)
(bad)
(bad)
inc
sbb
push
in
shr
(bad)
sbb
xor
enter
movs
sbb
xor
stos
clc
xchg
test
jb
pop
sbb
mul
xchg
retf
or
int
arpl
adc
jmp
inc
pop
sbb
add
push
fwait
aas
ud0
fwait
add
sbb
mov
lock
lock
dec
mov
add
mov
rol
call
jmp
push
mov
rcr
push
fimul
push
arpl
fsubp
clc
add
mov
out
movs
add
out
cld
(bad)
call
sbb
push
mov
ret
xor
and
or
xor
add
ins
inc
popa
pop
aam
(bad)
(bad)
(bad)
call
sub
push
inc
xor
out
xchg
cmp
and
push
sbb
aaa
xchg
popa
jmp
ror
and
popa
loop
fcom
(bad)
in
jl
xor
or
jo
pop
push
loope
jmp
shl
push
shr
mov
fs
mov
dec
lock
cli
jns
addr16
add
add
sbb
push
sbb
sub
or
inc
add
and
sbb
test
sbb
aaa
pop
jnp
push
jbe
imul
repz
movs
push
add
aaa
cmp
dec
xchg
push
leave
inc
inc
cmps
add
jb
ror
jb
push
jb
shl
fsubr
(bad)
push
push
dec
jb
(bad)
imul
pop
dec
mov
int3
inc
push
sub
cmp
aad
push
std
sub
mov
cmp
add
push
movs
push
and
lds
push
push
sub
ss
jmp
ror
nop
adc
sub
mov
fwait
add
inc
(bad)
loope
adc
mov
jmp
xor
jp
(bad)
or
in
cmp
outs
dec
push
cmp
cmp
sub
jo
jnp
ret
dec
fs
arpl
mov
adc
test
ins
outs
xor
in
jb
cmp
add
pop
ret
fidiv
push
cmp
adc
outs
and
popa
es
ins
imul
mov
adc
mov
daa
and
and
add
sub
xor
in
mov
and
jne
xor
pop
xchg
rcr
in
adc
movs
cmp
(bad)
xchg
nop
and
cmc
adc
mov
es
shl
dec
cs
fbld
rcr
ret
mov
lds
test
adc
adc
movs
inc
push
popa
mul
es
pop
arpl
popa
or
and
mov
pop
and
or
sbb
js
inc
aad
add
push
popa
jb
jb
pop
shl
pop
mov
cmp
adc
test
ja
jae
ret
(bad)
push
pop
cmp
jg
inc
xor
arpl
cmp
fadd
or
xor
cmp
mov
dec
xchg
cmp
test
lock
jbe
jp
push
mov
cdq
dec
push
sbb
adc
adc
loopne
cmp
lds
or
xchg
ins
jo
in
lahf
mov
xor
imul
push
sub
sti
(bad)
sub
pop
push
imul
xor
cmp
outs
idiv
cmp
sub
xor
and
pop
sub
imul
sub
mov
cmp
xor
cmp
icebp
retf
ret
cmp
test
jo
fsub
xchg
arpl
sub
add
adc
jecxz
mov
xor
xor
ss
or
xchg
mov
cmp
add
imul
js
cdq
in
xor
ins
sar
std
adc
sub
clc
fisubr
xor
and
jne
test
test
sahf
scas
ds
sahf
xchg
gs
sub
sub
adc
repnz
in
cld
cmp
popa
sub
cwde
outs
arpl
push
adc
cmp
adc
adc
adc
jnp
iret
inc
or
gs
push
jno
jb
jge
dec
xor
jno
imul
sub
sub
cmp
pop
in
xor
outs
xor
and
mov
jo
arpl
call
xor
lock
(bad)
xor
call
bound
sub
or
push
pop
sub
popf
xor
cmp
gs
das
xor
xchg
pop
add
push
xor
adc
mov
push
bswap
sub
add
test
lods
dec
arpl
inc
je
fcomi
aas
sbb
js
je
adc
xor
dec
clc
mov
arpl
push
push
dec
bound
es
sub
sub
fisub
sbb
or
add
or
rol
jl
out
sbb
dec
loopne
ins
or
in
push
pop
mov
jge
add
xor
fwait
xor
call
pop
mov
inc
jbe
xchg
mov
popf
inc
ins
fdiv
push
cmp
ss
shr
adc
into
cmps
mov
outs
inc
sub
or
jle
xor
loope
cs
and
sahf
icebp
dec
rcl
sub
xor
shr
mov
mov
jecxz
sub
mov
jo
inc
push
jmp
arpl
push
mov
jnp
imul
ins
cli
call
das
sub
sub
in
sbb
adc
aas
bound
cmp
ins
popa
js
push
shr
adc
lods
ins
xchg
cmp
sub
bound
inc
push
xchg
push
shl
inc
inc
jno
jno
test
or
inc
imul
and
pop
shl
loopne
jo
sub
jl
sub
arpl
inc
cmp
sbb
fld
xor
lods
add
cmp
push
cmp
dec
popa
mov
xor
arpl
cmp
and
push
leave
dec
(bad)
sub
mov
fs
xchg
jb
(bad)
ret
xchg
adc
push
imul
jp
jecxz
retf
test
arpl
push
mov
pusha
adc
mov
imul
ins
add
lock
ss
sbb
cmp
push
or
sub
movs
add
xor
lds
and
mov
test
outs
xchg
lods
jge
dec
mov
fs
dec
in
push
pop
sbb
jne
daa
fcomp
or
fmul
sbb
ss
mov
push
dec
mov
mov
jns
pop
jo
fs
mov
cmp
ret
push
and
jo
aas
dec
int
jb
mov
cmp
scas
(bad)
enter
xor
ficomp
sub
sub
jl
pop
sbb
xor
sbb
aaa
clc
xor
jbe
sub
cs
xor
loopne
test
fs
pusha
mov
jle
js
sub
jbe
lock
adc
aas
mov
jns
les
enter
lea
fs
xchg
jmp
rcr
inc
sbb
jae
or
out
or
add
push
add
imul
push
sub
sub
jge
loope
mov
ja
rol
push
cmp
ins
mov
jbe
or
jbe
lea
jp
push
dec
sub
jmp
add
sub
test
arpl
jl
jp
sbb
push
outs
mov
rol
add
inc
push
xor
sub
sub
xchg
ins
pop
in
outs
sub
rol
add
sub
mov
fwait
jle
es
jl
or
sub
imul
mov
push
nop
ret
cld
add
mov
popa
es
or
fld
sbb
sub
mov
sub
push
ds
jmp
jb
add
icebp
xor
inc
push
pop
imul
xor
ds
js
bound
pop
cmp
add
or
lahf
inc
(bad)
aad
sbb
jmp
loopne
cmp
mov
pop
ja
pop
lock
pop
xor
je
cmp
cmp
sub
xor
add
and
adc
xor
(bad)
push
mov
inc
push
push
pop
xchg
xchg
or
mov
xor
popa
test
ss
cmp
mov
test
cwde
push
das
xchg
nop
jg
ins
fadd
xor
in
retf
jl
pop
es
and
cmp
in
mov
mov
enter
pop
mov
xchg
movs
mov
cmp
xor
out
push
imul
cs
mov
ss
cmp
pop
movs
stc
mov
adc
int
xor
jne
inc
xor
mov
xor
mov
daa
push
ins
or
xor
lods
leave
cmp
xor
and
out
xor
push
sub
sub
into
repz
icebp
das
jmp
mov
push
xor
aaa
xor
je
test
mov
or
mov
jb
nop
xchg
ja
jbe
jb
and
inc
cmp
cdq
fsub
mov
in
stos
mov
mov
inc
jb
mov
xchg
gs
ss
jmp
aaa
fs
jae
movs
shl
arpl
nop
dec
xor
jb
xor
xor
js
enter
xor
xor
inc
inc
cs
xor
inc
dec
cs
in
jbe
inc
cmp
cmp
mov
ja
xor
xor
pop
ins
pop
lods
ins
stc
push
imul
mov
ins
inc
xchg
or
or
mov
cmp
inc
cmp
xor
arpl
enter
xor
xor
inc
cs
xor
daa
pop
xor
jb
ss
sub
mov
mov
sub
nop
jae
mov
cmp
and
retf
lds
xor
enter
xor
es
xor
inc
inc
cs
jbe
dec
cs
js
je
cs
inc
inc
cmp
in
pop
xor
xor
xor
sub
sbb
xor
test
call
sbb
xor
call
xor
inc
popf
pusha
mov
repnz
cmp
cmp
push
jmp
sub
daa
sub
mov
in
or
mov
dec
inc
mov
jecxz
sub
leave
fcomp
sub
or
cmp
sub
adc
mov
popa
call
dec
xchg
sbb
adc
xchg
or
test
aas
mov
arpl
xor
out
test
adc
pop
sub
add
xor
arpl
arpl
ror
imul
dec
sahf
bound
push
xchg
push
cmp
jge
xchg
push
bound
and
and
jbe
sub
mov
jo
pushf
jo
lahf
mov
jae
inc
jbe
ins
test
call
pop
sbb
sbb
and
xor
inc
add
mov
jg
and
jno
cmp
movs
nop
mov
fs
lods
xor
(bad)
jne
mov
test
fs
jo
push
in
mov
outs
ins
sbb
jno
movs
rol
push
mov
inc
es
cmp
outs
es
leave
icebp
sub
mov
(bad)
and
cmp
(bad)
div
mov
cmp
cmp
jno
cdq
sub
scas
(bad)
push
push
bound
outs
pop
xor
push
movs
jno
jne
fild
xchg
ins
push
dec
fld
and
imul
das
ffree
add
popa
inc
imul
in
daa
jge
sbb
jae
fs
add
xor
sbb
ds
pop
scas
xchg
fs
in
je
sbb
inc
mov
xor
or
inc
test
in
or
out
mov
pop
pop
inc
dec
push
dec
inc
enter
inc
sub
jge
inc
gs
add
sar
dec
les
sbb
push
jmp
not
popa
popa
or
xchg
pop
je
sbb
bound
gs
adc
gs
fld
jbe
bound
sub
dec
cs
cmp
lods
gs
cmps
movs
adc
cmc
xor
mov
mov
xor
jbe
cs
xor
loopne
xor
out
lods
mov
pop
fs
push
inc
mov
jge
mov
add
shl
xor
hlt
js
pop
bound
jnp
mov
and
xchg
sar
arpl
adc
stos
das
jo
jbe
and
fs
pop
and
cmp
pop
pop
pushf
xor
hlt
or
mov
fwait
cmp
stos
jnp
inc
jg
test
in
inc
sbb
mov
cs
cmp
pop
popa
cmp
nop
and
adc
lods
inc
dec
adc
retf
nop
scas
(bad)
mov
inc
bound
lods
pusha
pop
adc
jb
or
(bad)
(bad)
cmp
inc
add
dec
and
ss
xor
lds
xor
shr
jg
mov
shl
inc
mov
cmp
nop
or
xor
aaa
adc
ffree
adc
sub
jecxz
push
xor
xchg
and
enter
je
push
cmp
mov
inc
shr
pop
ins
and
ins
dec
fadd
add
sub
or
sub
add
sub
sbb
add
mov
adc
dec
shr
jnp
cmp
cmp
jno
aaa
jbe
jb
xchg
sbb
(bad)
loopne
and
and
fmul
ret
xor
push
ret
and
adc
mov
loope
call
cmp
scas
sub
arpl
push
test
adc
xor
adc
cmps
pop
lods
rol
pop
cmp
adc
pop
or
sub
add
popa
scas
popa
push
jnp
inc
xor
nop
push
lock
dec
xchg
dec
loopne
or
rcl
int3
inc
push
lock
push
add
adc
mov
inc
pop
les
ds
mov
(bad)
jne
bound
icebp
mov
in
jmp
pop
ret
push
push
dec
ins
or
je
shl
push
jl
sbb
out
aas
fwait
mov
int
xor
cmp
cmp
cmp
push
popa
sub
xor
aaa
adc
das
or
ret
cmp
pop
ret
jb
lods
or
sbb
shr
dec
xlat
ret
arpl
jle
in
add
(bad)
and
jp
sub
push
push
jne
inc
pop
mov
mov
fadd
xor
cmp
sub
xor
dec
cmp
jg
xchg
fs
jmp
jnp
mov
adc
mov
mov
aad
inc
cmp
sub
or
ins
inc
or
mov
cmp
inc
mov
test
push
sbb
mov
into
sbb
or
push
mov
cmps
popa
dec
les
icebp
push
pop
jge
add
scas
pushf
or
inc
loopne
adc
xor
sub
cld
xchg
push
sub
xchg
mov
scas
xchg
ret
sbb
je
push
popa
gs
fs
adc
les
scas
inc
adc
adc
aam
ja
mov
bound
sub
ret
xchg
push
pop
and
mov
popa
inc
sub
jno
and
mov
mov
jb
mov
mov
pop
fs
nop
popa
fidivr
jo
xchg
push
jl
leave
sub
jl
(bad)
dec
(bad)
ins
out
fs
cmp
mov
sbb
pushf
sbb
call
(bad)
das
pop
fsubr
add
inc
jmp
push
sub
sub
arpl
add
loope
and
movs
push
xor
popa
xor
mov
and
jae
je
ja
push
test
jno
data16
mul
adc
mov
fisubr
push
ror
sbb
cmp
or
or
xor
xor
adc
xor
sahf
sti
push
push
or
xor
push
stos
sbb
test
lock
cmp
cmp
gs
pop
imul
push
rol
or
mov
inc
jns
pop
aaa
sub
pop
xor
enter
xor
imul
jns
jns
fist
xor
or
ja
sti
dec
jns
pop
jns
and
mov
(bad)
cmp
inc
pop
into
mov
nop
(bad)
(bad)
jp
push
(bad)
loopne
scas
mov
imul
outs
pushf
ror
cmp
sub
cwde
fs
ss
rol
add
cmp
mov
dec
cmp
loope
mov
sbb
xchg
sub
sub
push
inc
fst
inc
xor
cmp
test
sub
test
scas
inc
sbb
mov
inc
inc
push
jp
mov
leave
mov
jnp
fs
or
ss
mov
cmc
es
push
cmp
sub
pushf
mov
add
jl
push
arpl
adc
fs
retf
add
cmp
(bad)
arpl
push
jno
ret
cmc
sub
fcomp
push
and
es
loopne
push
dec
jns
fiadd
sbb
jbe
and
cmp
cmp
pop
inc
fwait
mov
and
xchg
xor
cmp
fs
aam
inc
xor
mov
imul
or
xchg
popf
outs
jbe
add
jge
popa
es
mov
push
fs
or
mov
xchg
ret
and
pusha
or
aas
imul
pop
imul
cdq
jb
cmp
outs
pop
sbb
xor
popf
or
inc
inc
movs
jg
sbb
sbb
or
mov
sub
mov
push
jno
sub
add
mov
xor
inc
add
addr16
or
or
dec
mov
lods
sub
(bad)
push
or
movs
push
shr
jmp
and
xor
pop
bound
cs
ja
push
imul
in
push
xor
xor
inc
add
ds
ins
mov
or
jnp
push
pop
adc
pop
pop
mov
scas
inc
mov
dec
outs
xchg
push
imul
ins
push
inc
outs
addr16
in
out
imul
push
fs
push
inc
push
addr16
inc
dec
jno
stos
scas
dec
sbb
jb
mov
pop
push
pop
sar
xchg
and
jb
outs
addr16
push
movs
xor
gs
cs
push
dec
outs
addr16
imul
ja
jae
je
jecxz
jae
outs
scas
cmp
(bad)
add
add
lock
pop
lods
inc
or
cmp
mov
sbb
push
jmp
loopne
in
data16
xlat
cvtps2pd
je
mov
mov
stos
sbb
sahf
inc
and
das
aad
loopne
in
push
in
rcl
fwait
sub
sub
test
inc
imul
sub
jecxz
outs
adc
inc
gs
and
add
adc
aad
rcl
bound
or
adc
push
fwait
add
fdivr
adc
adc
test
outs
fsub
push
jbe
(bad)
pop
mov
std
sbb
imul
xchg
lds
mov
mov
jne
sbb
and
xor
fcom
loopne
jmp
cmp
and
and
arpl
dec
iret
mov
mov
adc
into
jle
mov
cli
and
cmp
pop
(bad)
sub
cwde
out
or
cmp
xchg
fld
das
and
ja
and
jl
arpl
cmp
fs
xchg
mov
sub
dec
mov
xchg
dec
ins
add
add
and
ds
inc
push
inc
popa
imul
out
dec
xor
pop
pop
ja
xor
pop
lods
jb
pop
sbb
fadd
inc
adc
dec
nop
or
cmp
adc
ins
je
outs
and
rcr
cmp
popf
stc
xor
ret
lea
and
xor
sbb
push
lods
popf
scas
jbe
cmp
arpl
jo
loope
jge
stos
adc
popf
add
shl
inc
cmps
jb
test
cmp
push
popa
sub
jo
or
sub
rcr
or
inc
dec
fs
mov
jge
and
jbe
pop
dec
push
int3
and
jb
fisubr
inc
ins
outs
data16
sub
adc
ss
push
pop
and
ins
xchg
fnstenv
jp
or
test
xor
fwait
xor
add
and
jns
dec
popa
cmp
adc
jmp
repnz
sbb
or
xor
xchg
and
xor
mov
mov
clc
je
pop
pop
inc
sub
cmp
call
pop
cmp
sub
out
cmp
test
mov
pop
push
lahf
dec
cmps
and
fld
inc
test
or
xor
popa
mov
dec
cmp
out
add
sub
sub
call
cmp
enter
xor
xor
xor
int
cmp
ss
pop
or
add
rol
lods
enter
cmp
add
jge
xor
cmc
scas
ins
cmp
pop
jne
pop
xchg
lea
fisttp
jge
jne
jecxz
jle
shr
and
ds
pop
lock
sbb
mov
shl
inc
and
imul
mov
outs
inc
jo
cmp
rol
test
xchg
jbe
add
pusha
dec
cld
mov
mov
mov
xchg
mov
(bad)
out
xor
adc
std
sar
adc
stos
sub
xor
dec
and
cmp
mov
std
xor
jge
or
push
cdq
sbb
mov
leave
pop
mov
les
or
jns
add
ret
jle
inc
or
enter
jb
mov
sub
add
fsubrp
(bad)
sub
jno
and
pop
imul
jo
dec
push
das
jo
loope
jg
call
xor
test
push
xor
push
imul
xchg
jbe
sbb
push
dec
pushf
jae
movs
out
add
rcr
cmp
inc
sbb
arpl
dec
mov
mov
pop
push
mov
imul
sbb
pop
inc
add
pop
ins
adc
or
ins
pop
inc
mov
outs
xchg
push
jb
jae
jmp
mov
and
inc
dec
dec
xor
int3
jbe
pop
pop
movs
mov
inc
inc
movs
inc
dec
es
in
in
xor
dec
push
push
sbb
push
les
clc
dec
test
push
cmp
shl
rol
xor
test
cmp
xor
sti
cmp
inc
mov
mov
xchg
popf
pop
xor
mov
test
xor
cmp
daa
xor
and
daa
xor
sahf
add
sub
dec
inc
inc
sub
push
and
xchg
int
xchg
add
pusha
push
inc
mov
aaa
push
inc
xor
sbb
jne
sahf
xor
pop
or
fnstsw
push
test
pop
and
(bad)
add
sbb
repnz
frstor
xor
xchg
xor
push
add
cmp
lock
mov
rcl
push
ja
sub
jo
and
jb
add
ficomp
or
aas
scas
cmp
sub
sub
or
mov
aad
cs
aam
ret
cmp
nop
leave
stos
sub
xor
and
and
fst
ja
pop
sub
xor
into
mov
shr
jne
inc
cmp
loopne
lahf
dec
mov
jae
sbb
push
push
cmp
or
jbe
add
fst
clc
nop
lea
test
and
rcr
aaa
in
inc
add
addr16
imul
and
sbb
in
les
jbe
xor
push
push
les
push
arpl
jno
dec
jbe
loop
jbe
pop
sub
mov
and
xlat
hlt
dec
sbb
push
mov
and
sti
mov
outs
das
outs
pop
ja
popa
pop
sub
cmp
mov
mov
add
aad
pop
or
push
jo
inc
cmps
sbb
(bad)
retf
test
call
ins
cmp
ret
test
imul
(bad)
popa
xchg
fwait
inc
dec
ins
dec
fwait
xor
in
inc
push
cs
mov
nop
mov
push
mov
jne
mov
jae
inc
or
shr
jmp
sahf
pop
dec
inc
stc
add
xor
xlat
and
clc
out
ror
mov
or
cmp
inc
dec
sub
push
mov
cmp
dec
cmp
inc
xchg
adc
mov
add
xchg
sahf
movs
cmp
cmp
push
add
mov
jl
pop
and
cmp
ins
push
and
sub
test
xlat
movs
sub
sub
dec
nop
ret
bound
mov
outs
mov
popa
dec
sub
pop
mov
data16
das
inc
jne
inc
and
push
xchg
sbb
mov
ficom
cmp
mov
rcl
dec
dec
ss
add
aad
movs
ins
movs
pop
int
add
imul
mov
xor
inc
jae
push
dec
ret
and
inc
movs
xor
sbb
pop
stos
and
and
cdq
mov
shl
lea
arpl
sti
pop
xchg
or
pop
aad
pop
sub
inc
jl
and
cmps
out
aad
addr16
cs
imul
pop
fst
inc
lds
fcmovu
inc
jno
sbb
inc
xor
inc
(bad)
rcr
cmp
and
cmp
inc
inc
sub
sbb
xor
inc
add
aas
sbb
push
inc
gs
int3
mov
jbe
jae
add
mov
ja
cmps
xchg
sub
sbb
sbb
fsubr
push
adc
out
loope
add
and
arpl
mov
push
pop
mov
lods
call
or
ret
push
sbb
jle
ror
jg
iret
fs
mov
mov
repz
xor
dec
sbb
xchg
popa
icebp
pop
in
loopne
push
push
lock
inc
push
add
pop
jbe
add
jb
mov
sub
mov
dec
inc
xor
lea
mov
inc
inc
shr
nop
add
pop
adc
out
and
shl
bound
mov
mov
xor
mov
sub
(bad)
dec
mov
mov
inc
inc
jae
xor
fyl2x
retf
and
cwde
xor
add
adc
fidivr
retf
mov
imul
cmp
mov
inc
jge
inc
ins
movs
inc
jge
inc
jge
movs
dec
or
ins
jne
xchg
sbb
lea
mov
inc
sti
ror
aad
mov
daa
pop
pop
xor
xchg
jp
dec
pop
mov
arpl
xor
and
test
and
jmp
jo
fcomp
sub
cmc
mov
and
push
or
lods
rcl
dec
or
retf
jnp
addr16
sbb
movs
cmp
and
popa
adc
dec
sub
push
aas
retf
lods
push
outs
clc
fadd
push
cmps
dec
cmp
mov
stc
pop
pusha
sub
popf
add
push
cmp
xor
sub
add
fucompp
or
add
(bad)
fldcw
xor
mov
inc
push
xor
ins
sbb
lock
cmp
inc
test
in
push
dec
mov
adc
inc
(bad)
test
add
pop
(bad)
fcmovbe
inc
out
jge
adc
xor
dec
pop
mov
or
jmp
xchg
or
imul
sub
or
mov
inc
inc
cmp
popa
bound
je
adc
outs
jnp
or
pop
into
inc
push
or
cmp
and
mov
sbb
dec
sbb
outs
inc
shl
or
ret
cmp
or
nop
lea
ins
add
cmp
fadd
addr16
dec
dec
xor
or
push
or
cmp
or
adc
and
sahf
inc
and
scas
jae
and
mov
fidivr
mov
test
arpl
(bad)
hlt
(bad)
sbb
loope
cs
xor
xor
push
(bad)
push
pop
push
(bad)
pop
ins
inc
loopne
push
xchg
pop
in
mov
jo
pop
sub
sar
mov
pop
cmp
mov
ins
mov
add
adc
inc
dec
sbb
sub
pop
dec
jl
lods
retf
sbb
inc
sbb
xchg
stos
ins
imul
pop
ins
or
mov
mov
das
pop
xchg
xchg
dec
pop
icebp
cmp
xchg
mov
pop
and
pop
inc
adc
test
arpl
xchg
and
xor
pop
(bad)
cs
inc
cmp
mov
das
push
xchg
sub
sub
cmp
add
push
mov
sbb
push
arpl
cmp
mov
or
add
out
js
xor
dec
inc
sub
ja
adc
dec
xor
out
dec
shl
adc
add
or
lods
add
inc
test
fcomi
and
pop
cmp
ins
and
into
jne
inc
dec
sub
xchg
xchg
adc
push
retf
das
cmps
push
push
shl
xor
(bad)
inc
mov
test
inc
lods
mov
xchg
mov
test
add
ins
and
jge
shl
outs
data16
push
cwde
fs
adc
jle
mul
sub
and
les
imul
cmp
jl
pop
add
mov
and
and
inc
push
aas
popf
add
shl
sbb
sbb
xor
in
sbb
adc
scas
daa
push
adc
and
test
test
adc
cmp
dec
push
shl
add
dec
push
and
call
push
xchg
test
icebp
xor
add
add
inc
inc
add
dec
or
sbb
(bad)
xlat
jp
or
iret
adc
xor
inc
cmp
or
cmp
data16
lahf
sbb
jae
xor
push
ret
lods
push
add
loope
push
jg
movs
and
fs
adc
enter
or
std
sbb
movs
aam
add
and
add
and
movs
sar
pusha
mov
pusha
imul
adc
aam
cdq
and
and
push
arpl
push
ja
popa
xor
dec
sub
sub
jnp
mov
jno
mov
fcom
imul
or
movs
inc
inc
adc
mov
jae
mov
sub
mov
add
push
in
ins
cdq
das
in
mov
sub
jae
xchg
mov
add
sub
or
imul
push
cld
fwait
cmp
fld
leave
gs
movs
sbb
pop
outs
sub
jp
cmp
and
pusha
or
cmp
pop
and
clc
mov
in
mov
mov
mov
ficomp
or
popf
inc
out
cdq
mov
xchg
xchg
adc
pop
pop
sbb
push
loopne
xchg
pop
lds
ja
and
inc
inc
inc
pop
sar
or
xor
adc
sub
cmps
mov
mov
mov
jne
pop
ins
arpl
sub
fldenv
jae
push
pusha
jb
xor
loope
push
xor
add
pusha
fdivrp
dec
lea
cmp
mov
mov
or
xor
out
and
xchg
inc
xchg
dec
jno
jae
neg
mov
sub
sub
add
retf
lahf
xchg
or
inc
ds
add
or
movhps
mov
lea
dec
inc
or
outs
cmp
outs
xchg
sub
mov
loopne
push
rol
sub
adc
pushaw
sbb
sbb
inc
and
arpl
test
ret
inc
sbb
sbb
lea
jmp
mov
call
pop
and
mov
inc
rol
or
adc
xchg
arpl
movs
add
daa
fcomip
and
adc
adc
outs
add
add
pop
sti
push
and
jno
and
add
fsubr
sub
push
inc
adc
mov
push
imul
add
mov
adc
unpcklps
inc
out
adc
adc
mov
mov
outs
mov
popa
dec
in
xor
in
popf
or
xor
sub
stos
shl
xchg
fmul
adc
pop
js
dec
adc
sbb
outs
jl
adc
or
inc
mov
push
bound
lods
dec
ror
sub
cwde
add
jne
mov
movs
jo
xchg
jae
cld
(bad)
cs
add
mov
test
push
or
xchg
jnp
in
and
push
test
mov
or
mov
pop
or
dec
mov
mov
repz
dec
test
cmps
or
loope
add
scas
push
sub
fsubr
adc
add
sub
mov
test
sub
cmp
je
not
faddp
ficomp
mov
imul
cmp
sbb
jl
sub
mov
and
or
dec
sbb
adc
out
xor
mov
add
hlt
or
shl
daa
das
xor
rol
xor
popa
sub
pop
push
sub
ss
ret
xchg
or
rol
jns
cmp
xor
pop
jae
pop
hlt
movs
fidiv
sub
jge
xor
pop
jns
pop
sub
jecxz
in
sbb
gs
shr
mov
fdiv
imul
imul
xchg
or
jge
add
daa
adc
inc
sub
pop
pop
cmpps
adc
or
adc
sub
jp
test
ja
inc
adc
add
aaa
std
push
mov
imul
add
inc
push
add
popf
push
inc
out
inc
mov
pop
ja
add
jbe
imul
push
add
xchg
ror
retf
add
mov
mov
sub
pop
sub
jo
push
mov
in
adc
pop
or
aaa
mov
ins
and
xchg
mov
add
pusha
movs
aaa
jge
dec
jbe
push
fwait
inc
and
jge
mov
movs
push
jge
mov
dec
add
add
or
rol
mov
sub
or
test
call
dec
xchg
jo
in
aad
jbe
jns
mov
aaa
outs
std
push
inc
(bad)
(bad)
aas
sub
popa
inc
mov
pop
pop
push
jo
xchg
dec
mov
retf
sti
xor
adc
add
rol
jno
es
add
lahf
and
movs
mov
and
aam
sub
sub
mov
and
cmp
fisttp
mov
pop
dec
dec
and
rcr
sahf
cmc
push
jne
outs
jns
or
push
(bad)
data16
mov
ss
mov
or
push
mov
push
pop
jb
imul
retf
outs
bound
dec
mov
add
bound
sub
jns
mov
fs
sub
repnz
xchg
and
and
add
add
sbb
sbb
leave
pop
inc
and
sub
pop
gs
cmp
pop
arpl
gs
sbb
enter
ret
lds
mov
fs
xchg
bound
jb
pop
push
push
dec
add
xor
bound
push
ins
cmp
daa
jae
ins
(bad)
(bad)
jns
sbb
xor
adc
(bad)
or
pushf
sbb
and
xchg
cmp
fs
int3
adc
bound
in
adc
or
fs
in
sub
jo
ins
lea
sub
xor
xchg
inc
adc
idiv
cmp
sbb
inc
jo
and
or
enter
push
push
or
inc
bound
nop
bound
gs
arpl
sub
push
sub
push
cmp
pop
xor
cmp
rcl
cmp
or
xor
and
cmp
mov
and
mov
in
fs
jne
push
dec
cs
cmp
pop
mov
and
jbe
nop
sbb
(bad)
inc
sub
dec
mov
push
pop
pushf
cmc
ins
and
and
or
les
xor
sbb
fisub
lea
sub
fidivr
test
adc
inc
pusha
outs
inc
jbe
movs
mov
rol
inc
addr16
or
cmp
mov
lods
enter
pop
arpl
lock
cmp
dec
adc
xlat
cs
sub
sub
or
fcom
and
push
fisttp
pop
movs
adc
or
jbe
ins
shl
and
iret
jge
mov
sbb
loop
imul
dec
jno
mov
arpl
jl
pusha
in
inc
arpl
xchg
inc
xor
adc
lds
sbb
push
movs
(bad)
and
sbb
xchg
xor
inc
popa
movs
sub
inc
test
and
jge
mov
(bad)
fist
sar
in
loope
xchg
push
dec
imul
xchg
cmp
and
in
inc
inc
pusha
inc
cmps
cmps
fisttp
push
xor
pop
jmp
mov
dec
pop
leave
mov
sbb
pop
ret
xor
add
fst
sub
cmps
mov
movs
fistp
inc
xor
rcr
pop
inc
inc
push
imul
mov
dec
shr
push
sbb
inc
cmc
and
mov
sub
dec
das
rcl
shl
mov
inc
jmp
sbb
mov
or
xor
cwde
lea
cmp
movs
push
xor
ins
cmp
scas
(bad)
(bad)
and
inc
stos
add
xor
fsub
push
push
or
mov
stos
push
mov
and
xor
xchg
or
sbb
sub
xchg
adc
bound
cmps
push
adc
ret
fstp
cmp
add
sub
adc
mov
push
lds
or
adc
jae
popa
movs
inc
add
test
bound
mov
ret
test
fdiv
stos
test
(bad)
(bad)
and
push
or
inc
ins
push
mov
ja
fwait
(bad)
shl
das
shl
xor
push
inc
and
jno
pop
mov
push
push
pop
sub
imul
cmp
aas
imul
popa
mov
push
sub
pop
sub
shl
add
scas
jge
bound
xor
jg
add
pop
enter
arpl
sub
cmp
aaa
push
mov
xor
and
movs
loopne
fild
mov
sub
movs
mov
das
pop
mov
xor
cmp
xchg
and
pop
cld
(bad)
mov
xor
je
xor
out
push
and
movs
add
scas
sub
dec
mov
pop
xchg
ja
(bad)
loopne
adc
push
mov
gs
push
pop
xor
loope
imul
and
and
push
cmp
mov
pop
xchg
sbb
or
xor
lock
daa
mov
cmp
ror
xlat
lods
jbe
or
and
xor
or
xchg
and
and
cdq
scas
jns
sbb
and
test
and
mov
sbb
push
push
rcl
sbb
stos
jns
outs
adc
mov
mov
pop
pop
(bad)
dec
sub
dec
and
sar
or
ret
pop
or
mov
push
xor
imul
jnp
push
xor
adc
inc
test
aad
mov
sub
rcr
jmp
pop
push
or
jne
pop
dec
ret
lea
sub
cmp
or
popf
sbb
mov
dec
test
dec
ja
fs
push
test
or
sub
popa
pop
push
sub
fucom
enter
add
cmp
movs
push
fadd
addr16
or
ret
or
sbb
sbb
daa
sub
mov
xor
sub
leave
lods
sub
cmc
out
sbb
and
movs
les
push
lea
test
pusha
loop
sub
sub
jae
movs
mov
pop
sbb
push
adc
sub
cmp
push
mov
pop
(bad)
jecxz
sub
inc
shl
pop
inc
sub
mov
rol
mov
sar
into
pusha
je
imul
xchg
and
pop
mov
fbld
inc
sub
loope
push
jmp
jno
pop
gs
sub
lods
or
popf
sub
adc
add
(bad)
rol
dec
test
jnp
and
adc
outs
les
repz
imul
or
push
jb
xchg
popa
adc
icebp
pusha
pop
add
rcl
lgs
mov
push
fbld
scas
push
aaa
xor
sub
mov
sub
cmp
cmp
fnstenv
lea
rol
add
in
or
ret
f2xm1
push
jb
push
sub
in
bound
ins
out
xchg
icebp
(bad)
push
add
cmp
adc
leave
or
jge
mov
sbb
mov
or
(bad)
stos
mov
xor
and
or
jb
push
sub
jno
sub
mov
sti
es
cs
mov
mov
pop
jb
cdq
data16
fs
bound
add
push
sti
nop
add
add
gs
popa
popa
daa
fs
ds
popa
popa
gs
push
sbb
es
retf
repz
popa
addr16
cmp
arpl
jns
xchg
fs
xchg
bound
bound
mov
data16
push
mov
sub
test
cmps
jo
xor
mov
push
or
fs
push
bound
push
add
fs
and
addr16
popa
popa
add
arpl
adc
or
pop
sub
pop
hlt
xor
xor
ret
pusha
shr
xor
adc
inc
pop
push
pusha
mov
xchg
icebp
sub
pop
gs
mov
dec
sahf
mov
leave
lods
cmp
jb
add
jo
arpl
movs
adc
je
inc
mov
lock
xchg
test
rol
pop
jno
pop
xor
push
out
rcr
fcomp
or
sbb
jge
inc
push
adc
(bad)
sbb
nop
or
adc
dec
sub
adc
push
push
in
mov
fcmovu
sub
imul
div
lea
push
push
inc
inc
rol
push
mov
mul
and
jbe
or
sahf
lock
and
outs
call
mov
inc
dec
fsubr
iret
dec
and
sbb
push
add
in
push
sub
cmc
shl
dec
jns
xchg
sub
outs
mov
outs
fs
pop
xchg
ss
dec
pop
and
loope
mov
aaa
dec
ds
jecxz
add
xor
or
sbb
js
fnstenv
arpl
lds
sub
adc
adc
mov
and
sub
mov
fisubr
arpl
pop
pop
fucomp
sub
mov
das
mov
xor
das
pop
popa
sub
lds
and
adc
sub
jno
push
and
lea
adc
es
shr
xor
adc
pop
push
test
cmp
lods
push
mov
pop
ret
sbb
adc
pop
cmps
sub
mov
shr
sbb
inc
and
test
stos
pop
push
jmp
add
xchg
icebp
std
retf
je
or
pusha
and
(bad)
or
push
pusha
test
gs
sub
and
outs
in
out
les
call
sub
stos
sub
mov
push
mov
cmp
sub
sti
outs
fcom
cs
push
in
pop
add
ins
int
push
add
adc
shl
inc
sub
and
jl
jnp
and
adc
adc
add
cmp
arpl
jb
rcl
scas
lods
and
inc
and
call
leave
push
movs
fldln2
sub
je
or
lods
sub
push
pop
dec
aaa
(bad)
push
dec
pop
ficomp
mov
pop
fs
mov
imul
mov
push
sbb
es
sub
add
sbb
or
mov
push
xchg
sbb
arpl
mov
mov
inc
push
mov
test
jo
ret
or
and
xor
xor
add
popf
mov
push
add
xchg
mov
or
(bad)
arpl
xchg
test
lods
test
bound
cmp
sub
and
les
inc
js
data16
jmp
(bad)
call
jecxz
cmp
pop
aas
sub
cmp
pop
cs
or
test
es
cs
sub
sub
jmp
pop
pop
pop
jae
jne
inc
inc
inc
pop
js
xor
into
mov
dec
dec
mov
sub
cmp
sti
fild
ja
push
sub
sub
ds
sub
and
sub
sub
fcomip
ins
push
sub
dec
cmp
push
sub
push
pop
das
aas
ds
fimul
pop
xor
jl
inc
(bad)
cmp
cmp
ds
pop
jl
jl
sub
or
pop
sub
inc
inc
pop
and
or
(bad)
fidiv
pop
jl
js
mov
inc
sub
dec
mov
or
jb
outs
mov
xor
or
adc
ret
jl
and
fwait
sbb
sub
dec
sub
or
xor
dec
pop
je
xchg
sbb
xor
and
cs
and
retf
adc
xchg
xor
jo
inc
sub
pop
and
push
lahf
sbb
daa
adc
or
mov
enter
sub
dec
dec
sahf
xor
and
inc
inc
and
ficomp
cmp
loopne
cmp
or
cs
in
push
xchg
dec
mov
(bad)
pusha
ins
cmp
js
push
cmps
cmps
mov
cmp
cdq
ret
xchg
cmp
adc
xor
pop
stos
pop
xor
shr
or
sub
xchg
cmc
int
xor
lea
sbb
ja
jle
cmp
sub
or
cmp
popa
popa
sub
push
imul
mov
jnp
outs
sub
add
jb
fs
cmp
push
pusha
iret
lds
and
into
ja
pop
cmp
aaa
adc
outs
ja
sub
test
sbb
js
cmp
cs
mov
and
add
add
add
xor
inc
add
fcmovnbe
xchg
int3
sub
mov
leave
fcomp
outs
lds
mov
aas
mov
sti
test
icebp
pusha
aas
adc
or
push
mov
sub
xor
dec
fs
xor
adc
fisub
loopne
or
mov
inc
inc
push
inc
js
or
test
sbb
jecxz
sbb
call
adc
pop
or
push
gs
sub
nop
fisubr
pop
(bad)
mov
lods
and
stos
pop
xor
xlat
les
fsub
adc
popf
pop
test
mov
retf
sub
shr
add
retf
sbb
test
dec
daa
xor
mov
js
push
and
mov
cld
call
test
int3
and
cld
daa
mov
pushf
mov
push
xor
push
rcr
xor
jbe
lock
lock
mov
sub
out
fidiv
pop
jg
add
out
push
or
add
ins
imul
sahf
test
sub
push
mov
shl
or
sub
xor
push
repnz
gs
inc
mov
lock
fidiv
or
pop
lds
in
sub
mov
dec
push
icebp
test
aaa
fidiv
jb
outs
pop
adc
jp
sub
jo
and
add
dec
mov
mov
repnz
and
loope
push
lods
xor
add
imul
cmp
outs
mov
cvttps2pi
or
in
mov
mov
cs
and
ficomp
pop
std
adc
hlt
inc
ja
ins
outs
adc
leave
sub
pop
cmp
sub
fld
ret
inc
push
bound
outs
mov
shl
xor
or
jb
lock
mov
sbb
out
outs
and
cdq
push
gs
repnz
jae
adc
sub
cmp
add
ret
dec
pushf
xchg
or
adc
outs
push
push
pop
cmps
test
cmp
js
and
push
or
(bad)
jb
xchg
sub
jmp
add
and
(bad)
sbb
cli
push
sbb
adc
das
xchg
mov
jmp
pusha
lock
test
or
test
in
pop
mov
in
hlt
sbb
mov
sub
sub
mov
mov
js
sub
lods
repz
lods
js
sub
mov
xor
jl
in
push
add
xor
enter
repnz
mov
mov
xor
add
and
jnp
test
aas
and
jae
sbb
add
cs
mov
stos
test
jbe
aaa
pushf
hlt
and
popa
icebp
xor
sub
xor
js
and
push
push
fist
shl
nop
sbb
jge
fadd
scas
(bad)
sbb
mov
cmp
sbb
mov
imul
or
test
add
pop
mov
jbe
add
bound
and
dec
sub
and
mov
in
pop
xor
test
and
stos
bound
add
sub
arpl
dec
nop
xchg
test
aas
fmul
jmp
in
mov
fadd
pop
xor
fld
adc
xor
jecxz
jbe
lods
cdq
push
das
test
shl
sbb
add
xlat
pop
sbb
popa
add
data16
add
fcom
mov
dec
xor
or
mov
and
loope
lods
cmp
cmp
inc
ins
and
or
jo
jns
cmp
je
push
fsub
adc
push
mov
mov
sub
and
call
cmp
and
rol
add
or
push
and
mov
fsubr
pop
adc
retf
imul
and
jbe
or
fcomp
push
sub
inc
mov
xor
inc
push
enter
imul
xor
mov
push
xor
pusha
int3
pop
xchg
arpl
hlt
add
(bad)
jmp
inc
test
cmp
outs
sub
or
fnstcw
or
or
imul
sbb
inc
hlt
sbb
movs
pop
push
fiadd
add
aaa
and
sahf
popa
pop
rdtsc
rcr
mov
mov
xor
rcr
or
or
and
fwait
outs
outs
movs
imul
cwde
inc
fdiv
icebp
mov
or
and
jle
sbb
js
ins
rol
pop
or
pusha
addr16
adc
gs
and
outs
xor
jns
inc
sahf
push
adc
jns
and
rcr
inc
xor
fld
cmps
push
jmp
mov
dec
loopne
xor
test
in
jae
jns
dec
pusha
xchg
xchg
and
sbb
cwde
jmp
jb
xchg
inc
es
and
sub
inc
push
fmul
fstp
sbb
inc
daa
into
mov
stos
out
add
loopne
xor
mov
sub
inc
ins
mov
xchg
cmp
sbb
pop
dec
sub
jp
leave
sub
lods
outs
ins
jge
adc
pop
push
mov
adc
mov
(bad)
sub
cmp
xor
jl
pop
lods
inc
mov
xor
cmp
imul
jo
add
cmp
and
jns
mov
sbb
(bad)
gs
jp
or
icebp
jae
pop
mov
(bad)
(bad)
bound
and
data16
xor
bound
adc
ror
imul
jmp
inc
xor
cmp
push
out
cdq
lock
or
sub
rol
push
sbb
lahf
aas
sbb
cmp
push
fadd
(bad)
out
jp
cmp
je
mov
sbb
(bad)
ins
mov
loop
rcl
xor
xchg
add
jb
sar
fmul
cmp
sub
jp
dec
fidiv
cmp
xor
ins
add
xor
sub
in
test
addr16
outs
psubw
add
in
icebp
and
mov
mov
push
aam
outs
iret
xor
mov
fsub
hlt
inc
or
ins
push
cmp
xchg
ret
icebp
mov
sub
shl
jmp
cvtps2pi
push
aaa
jb
je
pop
sbb
xor
add
imul
xchg
cmps
xchg
les
push
fwait
push
add
sbb
jb
and
mov
fiadd
mov
cmp
popf
bound
inc
cs
mov
dec
stos
mov
add
pop
ret
outs
mov
outs
leave
or
lahf
push
dec
lea
or
es
imul
rcl
push
mov
mov
cs
or
add
push
sub
cmp
dec
mov
push
imul
pop
add
jne
cmps
pop
mov
add
push
inc
cmp
pop
jbe
mov
add
add
lds
xchg
jns
sub
pop
cwde
inc
retf
imul
or
jo
xor
ret
sbb
xchg
imul
xchg
mov
mov
stc
data16
ins
inc
imul
xor
sub
scas
adc
pop
cld
aas
dec
jmp
ja
mov
push
dec
sub
sub
sbb
jne
or
stc
pop
add
outs
inc
add
in
enter
jns
(bad)
adc
cmp
sbb
ins
mov
add
jge
xchg
aam
sub
cmp
sub
imul
cmp
or
dec
adc
sub
mov
movs
and
in
dec
xchg
rol
or
bound
mov
je
arpl
popa
xor
rcl
cmp
inc
sub
cmp
addr16
pushf
or
scas
sbb
push
and
push
test
(bad)
les
popa
xor
push
daa
lds
or
mov
or
aad
cmp
push
push
inc
pop
popf
add
mov
cmps
lea
inc
push
and
and
mov
dec
imul
call
pop
pop
push
xor
and
arpl
mov
daa
mov
dec
pop
pop
add
lahf
dec
test
mov
arpl
outs
imul
lods
sbb
xor
push
popa
push
sub
pop
jmp
adc
rol
add
or
jecxz
mov
sub
push
movs
inc
fwait
xor
and
mov
dec
sub
sub
push
gs
addr16
mov
pop
jp
jo
or
clc
sub
push
pop
xchg
mov
dec
cmp
and
or
sbb
inc
cmp
pusha
jg
inc
js
add
stos
loop
cmps
push
stos
cdq
lods
push
jl
hlt
jbe
inc
pop
inc
ret
dec
sub
mov
pop
setl
xor
adc
dec
(bad)
and
inc
cmp
push
or
in
outs
cmp
call
cmp
xor
push
or
inc
cmp
cmp
pop
or
nop
inc
or
add
mov
stos
cmp
jl
sub
inc
fsub
and
xor
sbb
add
sti
mov
or
cld
jl
or
jl
jbe
fld
imul
cld
(bad)
js
xor
je
jb
pop
cs
cmp
dec
push
inc
pop
pop
inc
js
data16
xor
push
call
repz
sbb
push
push
and
and
inc
ins
dec
fist
out
push
inc
sub
or
sub
fiadd
sti
mov
pop
and
and
aas
cmp
mov
shl
pop
minps
sub
sub
jl
push
int
idiv
sub
cmp
ins
mov
push
pop
cmp
mul
lea
sub
sub
sub
sub
pop
sub
or
loope
pop
cs
in
sti
jmp
xchg
pop
mov
cmp
aas
and
cwde
pop
and
mov
sub
xor
(bad)
mov
sub
sbb
dec
push
and
mov
je
mov
adc
sub
and
lods
inc
add
aaa
mov
ds
cmp
cmp
xchg
and
pop
add
mov
not
xor
int3
push
inc
push
push
push
push
xor
mov
inc
push
inc
dec
sub
dec
dec
dec
inc
lea
test
scas
or
push
sub
dec
jnp
sub
leave
inc
mov
xor
aas
test
sub
pop
sub
(bad)
popa
es
pop
cmp
lods
fcom
into
sbb
cmc
ds
iret
jo
xchg
add
inc
inc
scas
and
call
inc
push
dec
(bad)
fcom
lock
or
xor
ror
mov
and
cmp
clc
mov
jnp
sub
add
pop
cmp
iret
ret
das
sub
sub
or
add
ret
and
add
push
xor
cmc
daa
loop
sar
jl
cmps
adc
imul
outs
cmp
inc
mov
nop
pop
sbb
sub
rcl
xor
shr
shl
jae
jno
cs
sbb
adc
cmp
mov
or
mov
fdivr
sar
jb
xor
or
add
and
mov
xor
inc
or
mov
scas
outs
dec
add
out
dec
cmp
in
les
pop
pop
mov
test
xor
scas
cmp
mov
loope
ja
or
mov
je
dec
rol
push
popa
std
jb
dec
push
test
jb
mov
mov
scas
mov
xchg
je
test
fs
push
js
div
dec
fdiv
push
or
data16
xor
cwde
inc
data16
push
sbb
xor
cmp
cmp
ins
dec
pop
pop
push
cmp
pop
cwde
test
add
pop
inc
imul
sub
cmp
dec
xchg
ret
mov
mov
and
jg
popa
sbb
xchg
mov
jae
and
(bad)
bound
or
nop
pop
(bad)
iret
aaa
daa
cmc
adc
sbb
jbe
popa
push
retf
mov
(bad)
int
popf
sti
sbb
xchg
adc
test
push
loopne
push
xchg
nop
out
or
rcr
fst
mov
fld
jae
and
loope
addr16
mov
push
jge
mov
pop
je
cmp
fs
dec
adc
rcr
mov
fcomp
clc
ins
fwait
sub
mov
(bad)
je
loopne
ret
test
aas
ret
mov
daa
cmp
and
les
dec
adc
jae
mov
dec
xlat
add
pop
and
lea
push
xor
jne
sub
or
jo
jns
adc
(bad)
and
adc
jo
add
arpl
cld
xor
cmp
pop
push
xchg
sahf
(bad)
xchg
(bad)
push
and
or
sbb
push
push
add
imul
mov
or
jp
and
cmp
in
adc
jge
pushf
arpl
sub
imul
repz
es
fcom
dec
das
in
or
loopne
push
daa
xor
dec
dec
mov
mov
fist
nop
ss
ins
sub
xchg
out
aas
nop
loop
mov
and
call
lds
and
sbb
xor
sub
lds
aaa
xchg
add
fdivr
adc
push
pop
loop
xchg
or
mov
sbb
jb
pop
jo
retf
ins
cdq
(bad)
pop
jb
xor
jo
or
xchg
or
push
pop
je
jle
mov
dec
jl
inc
sub
dec
or
scas
add
imul
and
jp
mov
mov
adc
sbb
sbb
addr16
push
test
xchg
cmp
ins
sub
outs
add
loope
push
xor
sar
sbb
xor
rcr
and
push
loope
sub
xlat
test
retf
js
aad
test
jno
sub
or
pop
jp
popa
or
in
bound
inc
or
(bad)
shl
movs
je
xor
push
sub
mov
lock
mov
jae
and
cmp
inc
and
push
into
retf
add
mov
test
fidivr
repz
jmp
ja
hlt
mov
scas
adc
loopne
gs
int
inc
shl
aas
push
inc
xchg
xor
mov
jae
jbe
dec
pop
aam
pop
sbb
and
mov
dec
ins
xor
int
popf
or
jo
loope
ss
cmp
pusha
pushf
add
add
jno
sbb
adc
and
push
mov
add
cmc
test
ins
push
loope
adc
gs
push
or
and
aaa
loope
jb
push
pusha
out
jg
push
mov
cmp
push
sub
xor
cmps
sub
push
mov
push
mov
jo
adc
or
loope
ss
fs
movs
push
outs
mov
sub
adc
sub
mov
xor
lds
xchg
scas
mov
xlat
cmp
dec
and
rol
test
adc
and
xchg
test
hlt
popfw
sub
and
dec
clc
mov
dec
push
cmp
retf
shr
xor
popa
xor
ret
or
test
sub
or
or
cmp
inc
mov
push
ins
and
nop
xchg
xchg
pusha
xor
and
mov
rdpmc
sbb
pop
call
sub
inc
inc
pop
add
jb
loopne
and
add
outs
jge
inc
inc
test
fnstcw
xor
imul
aas
pop
aas
ret
sbb
or
cmp
or
aaa
in
aaa
imul
scas
xchg
lea
outs
jo
mov
pop
push
lds
xchg
sub
dec
outs
jns
or
push
and
pop
sub
test
xchg
jnp
add
sub
xchg
adc
push
xor
jle
xchg
outs
mov
mov
lock
call
pop
ret
pop
add
push
pop
pop
je
push
add
es
aam
cmp
pop
cmp
pop
mov
sbb
jp
imul
mov
jge
sub
js
hlt
call
sub
pop
sub
xor
movs
push
dec
pop
addr16
pop
fistp
jns
bound
dec
push
inc
bound
xor
jp
(bad)
bound
in
outs
push
jae
repz
shl
sub
loop
sub
push
outs
pop
pop
cmp
jecxz
jmp
sub
mov
and
and
mov
test
sti
mov
ret
or
sbb
cmp
cmp
adc
outs
mov
lods
lea
xor
xlat
sbb
push
cmp
inc
aad
out
je
das
(bad)
and
dec
gs
xchg
xchg
sub
inc
ficom
sub
adc
inc
add
pushf
ss
jmp
cmp
jbe
inc
cmp
or
push
xor
in
add
jmp
idiv
and
gs
mov
sbb
imul
mov
push
jecxz
rol
mov
ret
jbe
test
sub
aas
sub
je
xchg
and
inc
sub
sbb
cmp
cmp
xor
mov
outs
movs
bound
adc
les
adc
lods
test
outs
lea
or
mov
(bad)
cmc
and
outs
les
mov
xchg
sub
test
or
dec
imul
outs
ins
out
xchg
(bad)
push
out
jb
pop
inc
cs
je
inc
jecxz
cmp
(bad)
and
sub
and
gs
xor
pusha
ret
ins
pop
xor
adc
mov
shl
retf
push
mov
xor
push
push
or
add
gs
add
mulps
xor
pop
sub
mov
mov
mov
mov
rcr
jno
mov
inc
lahf
pop
or
sub
push
popf
and
leave
int3
(bad)
cwde
test
das
hlt
sub
sub
sub
loopne
int3
add
add
cmps
aaa
jbe
fadd
push
lea
outs
mov
inc
or
loope
or
jp
adc
mov
sub
imul
cld
mov
sbb
popa
jg
test
bound
aas
inc
test
mov
pusha
xor
push
sub
popa
pop
outs
loop
mov
jmp
inc
pop
sbb
and
adc
pop
mov
and
and
outs
outs
into
ins
dec
movs
shl
sahf
jo
(bad)
sar
popf
jne
push
pop
ins
xchg
fwait
call
inc
sbb
in
and
dec
pop
ret
pusha
imul
push
je
or
lock
or
sub
mov
(bad)
dec
pop
sbb
dec
je
rol
add
adc
mov
and
jl
imul
aam
shl
out
add
mov
and
sub
add
test
mov
(bad)
mov
or
xor
or
ret
cli
xor
sub
cwde
jne
dec
or
sub
xor
sub
xor
xor
cmp
xor
loope
jo
bound
cmps
xchg
je
add
mov
inc
cmp
stos
fstp
xor
(bad)
xchg
push
inc
jne
dec
sar
push
sub
xor
rol
test
addps
outs
or
sbb
pop
dec
in
out
inc
sub
and
mov
mov
outs
mov
aas
sub
sub
push
test
mov
ja
movs
adc
jle
inc
and
in
sbb
gs
pop
pop
inc
mov
cmc
inc
and
in
icebp
or
pop
mov
data16
cmps
repnz
mov
cli
inc
add
je
and
test
xchg
jno
xor
and
inc
mov
rol
xor
sub
jae
xor
and
cmp
je
rol
ss
push
inc
xchg
cmp
and
ja
mov
lea
aaa
ins
inc
cmp
leave
out
cmp
es
or
adc
cmp
mov
add
pop
mov
aas
xor
pop
push
fldcw
mov
ret
mov
dec
pop
nop
scas
mov
adc
sbb
jge
add
sub
pop
dec
ror
pop
loopne
jb
pop
mov
ror
outs
xchg
jnp
mov
sub
pop
xor
pop
add
jmp
mov
add
or
pop
mov
push
(bad)
gs
jmp
sub
pop
inc
dec
cmp
cs
mov
sub
adc
mov
scas
gs
arpl
mov
mov
add
cli
shl
fnsave
xor
mov
test
or
push
in
add
cmp
imul
outs
mov
aas
outs
outs
cmp
pop
jecxz
push
mov
adc
jbe
imul
and
daa
mov
mov
aad
sub
mov
pop
inc
imul
xchg
sbb
xor
push
xor
and
call
adc
pop
ret
imul
and
mov
sub
pop
ret
mov
xor
sbb
and
adc
and
arpl
mov
mov
ds
xlat
jns
jae
mov
call
test
jp
movs
ins
test
adc
shr
not
jo
les
shr
sar
mov
dec
adc
inc
movs
mov
lods
mov
dec
rcr
inc
inc
pop
fisubr
cmp
popa
pop
pusha
or
adc
cmps
sub
adc
push
or
xchg
xor
push
adc
and
inc
add
xchg
jbe
ret
rcr
fdivr
in
sub
jo
hlt
ret
push
mov
sahf
xor
push
or
sbb
push
pusha
jo
shl
or
test
cmps
(bad)
mov
out
add
sub
add
outs
imul
or
sub
and
and
mov
cli
ss
mov
inc
sbb
and
movs
(bad)
lock
jb
dec
imul
add
jae
outs
adc
pop
(bad)
data16
and
fcom
ja
xchg
iret
enter
rol
test
inc
jp
dec
add
xor
adc
fadd
test
lea
inc
pusha
or
xlat
add
jmp
mov
add
sub
aaa
mov
cmc
mov
dec
outs
loopne
mov
and
lods
scas
pop
pop
cmp
mov
cmp
cmp
add
mov
(bad)
aam
inc
outs
les
mov
adc
or
je
jge
call
jae
pop
clc
dec
push
pop
jae
dec
jae
bound
mov
popf
inc
lea
outs
inc
sbb
lods
shl
adc
jp
imul
sub
or
rol
mov
add
cdq
inc
cmp
(bad)
dec
cdq
rcr
loopne
push
loop
rol
sbb
adc
adc
das
shl
mov
lock
push
stos
test
fidivr
xor
jecxz
push
call
inc
neg
outs
test
or
sbb
jb
ret
mov
mov
inc
mov
adc
mov
or
add
pop
and
push
push
int
cmps
push
mov
add
ja
adc
inc
cmp
jno
cmp
cs
clc
fwait
push
sub
in
ret
loopne
out
pop
loop
dec
and
lods
xor
movs
adc
gs
add
out
push
les
pop
fisttp
shr
fs
push
xor
sub
xor
rcl
or
ffree
aaa
(bad)
push
sub
imul
pop
mov
dec
movs
push
xor
inc
pop
mov
push
dec
ss
jne
imul
int
loope
adc
sbb
push
add
aad
call
xchg
sub
in
rcr
mov
loop
iret
mov
pop
xor
mov
ss
xchg
out
sub
cmps
xor
inc
sub
cdq
aas
cwde
movs
(bad)
adc
mov
push
or
aaa
or
xchg
cmp
pop
pop
push
cmps
add
inc
gs
mov
dec
scas
cmp
xchg
cdq
cmc
xchg
call
mov
loop
mov
or
js
xor
xor
sbb
popf
ror
xchg
sub
cmp
ret
nop
and
sub
push
adc
icebp
or
xchg
pop
jno
loope
iret
gs
mov
int3
xor
bound
mov
sub
jo
mov
imul
test
xchg
int
rcl
js
mov
dec
shr
adc
adc
nop
push
lds
cwde
lods
in
rcr
push
jne
ret
adc
mov
mov
dec
and
sbb
xor
idiv
lods
mov
adc
arpl
mov
ss
in
xchg
xchg
sub
jbe
xor
push
pop
imul
lahf
jge
jae
pop
movs
add
pop
push
add
ficomp
push
test
and
movs
sbb
add
test
xor
jnp
xor
inc
popa
ins
mov
and
and
push
fmul
fnstenv
sbb
xor
or
add
daa
or
add
and
test
mov
mov
jno
jae
inc
mov
pop
sbb
cmp
aam
push
inc
sub
xchg
jns
test
sbb
and
push
dec
and
jb
cmp
scas
add
xchg
gs
arpl
jg
sbb
sar
jb
pop
add
mov
pop
xor
inc
movs
add
sbb
cmp
xor
fstp
and
add
lea
addr16
call
jae
push
stos
sbb
movs
rcl
ret
sbb
aaa
rol
jmp
sahf
and
jp
pop
jo
test
jmp
mov
rcr
cwde
sub
cmp
fdiv
sub
cmp
sbb
and
add
bound
(bad)
pusha
sbb
or
aas
jnp
mov
fs
push
inc
popf
add
cmp
ins
test
cdq
jae
scas
and
ins
ss
mov
imul
jae
jae
mov
jns
adc
sbb
(bad)
js
shl
push
sbb
inc
dec
cmps
and
ja
call
jbe
mov
cmc
fstp
imul
jne
not
or
push
jno
pop
dec
jo
sub
dec
and
and
push
push
or
or
jnp
jp
mov
pusha
mov
les
imul
ins
popa
cmp
xor
popa
fwait
mov
in
push
jno
or
push
js
sbb
enter
xor
clc
test
sbb
arpl
arpl
ds
movs
jns
fs
ins
adc
inc
cdq
or
(bad)
adc
xchg
adc
lods
mov
adc
jne
ins
sbb
rcl
mov
data16
dec
jp
cs
push
jne
cmps
sub
or
aaa
jns
push
scas
cmc
cmc
cmp
inc
or
cli
int
jns
aas
adc
jns
fild
add
mov
or
mov
dec
sbb
or
cdq
or
jo
dec
jnp
sub
add
icebp
pop
jbe
mov
dec
icebp
mov
loopne
dec
dec
adc
adc
push
jp
pop
(bad)
xchg
loop
xor
punpcklwd
or
bnd
(bad)
in
arpl
jo
test
dec
add
aaa
addr16
mov
ins
ss
mov
mov
ins
cdq
jnp
daa
pop
adc
ret
xchg
jmp
popf
cs
imul
in
div
jb
jb
pop
inc
cwde
in
sub
push
adc
add
test
int
daa
jnp
xor
sub
and
or
add
xor
(bad)
mov
cmovbe
jge
dec
xchg
xchg
inc
add
aam
cmp
sbb
sbb
scas
(bad)
outs
adc
movs
xchg
sbb
xor
js
and
push
and
mov
adc
es
pop
xor
inc
ins
xor
enter
cmp
push
imul
(bad)
push
cmc
sbb
aas
ins
sti
adc
push
add
bound
scas
cmp
arpl
mov
in
into
daa
fadd
xor
ins
cli
ss
inc
sbb
jo
mov
lds
mov
mov
sbb
and
mov
je
inc
pop
sub
js
loopne
mov
xor
ins
push
bound
dec
in
cs
je
js
nop
add
in
cdq
xchg
or
test
bound
scas
ror
addr16
or
mov
adc
jo
(bad)
nop
push
add
lea
movs
or
and
pop
push
pop
push
sub
mov
or
push
mov
adc
mov
call
outs
lods
icebp
or
ins
xor
inc
je
outs
push
xchg
cmp
xchg
cmp
jge
mov
imul
mov
in
dec
adc
nop
(bad)
mov
or
dec
cmp
and
mov
(bad)
add
pop
loope
mov
lea
inc
popa
inc
xchg
data16
xor
mov
sbb
stc
jo
leave
dec
movs
test
add
imul
jae
xor
(bad)
add
mov
inc
pop
test
add
xchg
outs
loope
push
and
mov
sar
sub
xor
cs
stos
test
mul
push
sbb
popa
into
or
popa
add
rol
adc
add
xchg
ret
stos
lods
xor
push
ins
jmp
cmp
enter
xor
ins
stos
pop
adc
mov
ins
fisub
and
add
sub
js
loopne
jge
retf
and
pop
pushf
push
mov
test
inc
add
xor
xor
and
jo
and
cmp
mov
and
and
test
add
and
out
jne
aas
and
arpl
jl
and
clc
pop
pop
and
cwde
shl
sub
or
loop
es
mov
(bad)
into
pop
das
jae
mov
xchg
and
cld
push
and
push
mov
shl
inc
enter
or
gs
pop
pop
aam
ret
add
sub
mov
push
sbb
out
xchg
or
loop
sub
(bad)
push
imul
retf
jns
bound
adc
inc
int3
test
mov
cwde
or
mov
pop
outs
inc
sbb
mov
and
push
shl
and
les
and
rcr
dec
mov
ja
dec
or
add
shl
loopne
sbb
inc
mov
xchg
in
adc
cmp
mov
(bad)
les
sub
sahf
ret
call
push
push
loopne
or
or
add
(bad)
mov
xor
dec
xchg
or
pop
jmp
movs
bound
sub
mov
lea
push
daa
add
push
outs
cmp
ss
loop
jmp
clc
je
jns
push
shl
jno
add
dec
outs
inc
imul
out
sub
add
sbb
xor
adc
jns
shr
xchg
mov
ror
push
and
pop
push
xor
lea
inc
leave
inc
sbb
or
jmp
xor
cld
xor
pop
inc
dec
pop
ret
mov
pop
mov
inc
ret
mov
add
fdivr
(bad)
cmp
movs
or
rol
sar
nop
scas
add
aas
shl
or
push
lea
popf
ret
outs
retf
scas
push
shl
cmps
fidiv
shl
outs
push
cmp
shl
popa
(bad)
adc
add
cmp
mov
add
retf
sub
or
ja
sub
shl
pusha
push
jbe
dec
nop
fldcw
fs
jmp
xor
lods
ret
data16
popf
pop
cdq
push
loopne
dec
jne
nop
mov
test
push
shl
repz
and
(bad)
mov
dec
sbb
jnp
aas
sets
xor
je
or
xor
push
(bad)
std
push
stc
(bad)
push
movs
or
mov
or
fidivr
mov
jne
cmp
adc
add
mov
xor
sub
outs
jmp
cmp
xchg
push
out
pop
outs
out
in
ins
js
push
outs
loope
sub
ret
push
fld
jnp
ins
pop
dec
add
or
dec
test
push
jnp
addr16
cdq
pop
cmp
aad
cli
aaa
imul
lods
push
pop
xor
or
jge
sub
xchg
inc
dec
mov
jo
inc
or
add
pusha
adc
loop
sar
add
fdivr
sbb
add
jnp
pusha
pop
sub
add
test
jae
enter
cmp
lahf
push
and
sub
xchg
sub
loop
neg
pop
sbb
test
push
pop
and
mov
test
sbb
std
push
jmp
sbb
cmp
jae
mov
add
(bad)
jge
ja
bound
mov
lods
adc
call
pop
push
imul
inc
sub
add
(bad)
or
mov
sbb
dec
xchg
mov
lds
dec
pop
nop
pop
out
test
outs
aas
and
pop
aas
aad
sahf
push
loopne
xor
xor
aas
jb
ins
test
mov
(bad)
xor
arpl
xchg
or
enter
ja
add
jge
push
add
sub
xor
mov
pop
pop
mov
xor
cmp
sbb
out
outs
arpl
shl
jecxz
mov
inc
adc
xchg
mov
imul
jno
xor
adc
xchg
aaa
or
jne
mov
sub
add
or
imul
shl
outs
inc
inc
mov
ins
stos
dec
push
aaa
or
sub
arpl
xchg
sbb
stos
shl
sbb
push
cli
xchg
sbb
nop
cdq
inc
stos
jno
inc
jbe
inc
jecxz
outs
and
cmp
das
ds
dec
and
stos
and
sub
das
push
popa
dec
ror
ret
inc
sub
sbb
or
push
cmp
jns
hlt
mov
jb
popa
and
out
add
adc
test
pop
shl
lea
mov
clc
inc
push
add
ret
out
add
mov
and
mov
push
sbb
cmp
jo
cmp
and
and
imul
jmp
(bad)
lock
or
leave
mov
mov
inc
shl
dec
xor
xor
mov
sbb
sub
mov
fwait
or
and
xor
shr
xchg
jno
cmp
jno
das
push
out
inc
jne
and
xchg
lock
mov
lods
or
xor
in
lea
dec
mov
push
add
retf
out
(bad)
sbb
cmp
cmp
push
out
inc
dec
mov
jmp
cmp
xor
call
pop
add
cli
out
inc
popa
scas
rol
xor
outs
popa
jbe
data16
inc
test
fidiv
jp
pop
xchg
or
lea
stos
loopne
scas
arpl
fdivr
pusha
cmp
les
call
inc
aas
jae
adc
cmp
and
mov
outs
inc
sbb
inc
push
and
imul
js
push
add
in
inc
add
push
inc
sub
popf
imul
inc
daa
outs
mov
adc
ins
loopne
and
xchg
sbb
jne
add
and
xchg
xor
lods
inc
or
push
jae
and
arpl
sahf
pop
dec
addr16
out
push
push
xchg
hlt
xchg
cdq
xchg
ins
fbstp
adc
jnp
mov
mov
sbb
add
outs
movs
or
jg
push
add
cmp
outs
xchg
lods
(bad)
and
test
ins
cmp
pop
jns
sbb
sub
inc
jne
sbb
(bad)
imul
cmp
push
in
sbb
push
inc
loop
add
pop
mov
pop
add
arpl
and
pop
inc
jl
sbb
test
or
in
inc
movs
add
jno
mov
and
xor
sub
cmp
lock
jo
and
mul
jae
inc
or
es
push
inc
(bad)
dec
loop
add
popa
inc
(bad)
js
pop
inc
mov
popa
or
dec
rcl
mov
lea
xor
(bad)
cmp
adc
and
test
cmp
scas
jle
adc
sub
inc
lods
push
jp
sub
adc
pop
ds
shl
pop
js
adc
mov
lds
add
data16
adc
popf
jo
test
mov
xchg
xor
jle
test
sub
xor
or
inc
sbb
outs
sub
mov
cs
int
adc
cmps
and
push
ret
add
push
shl
outs
inc
mov
xlat
test
mov
mov
and
js
jns
xor
xor
dec
ins
or
cmps
xor
rcr
push
jno
or
adc
loopne
xor
xor
test
and
les
sub
out
adc
and
and
fiadd
aam
xchg
fdivr
outs
outs
ins
aas
jnp
nop
cmps
xor
stos
int
jne
jmp
push
and
fild
inc
push
aas
adc
push
imul
cli
popa
sub
bound
fcom
xchg
push
arpl
inc
jnp
mov
sbb
pop
xchg
push
xchg
sbb
xor
(bad)
sub
scas
inc
inc
sub
pop
ret
jae
rol
daa
xlat
xchg
pop
daa
and
and
mov
add
lods
xor
xor
jmp
push
xor
cmp
mov
sub
xor
cmp
icebp
call
(bad)
cmp
mov
shl
pop
and
add
fs
mov
imul
jmp
adc
cmp
jmp
or
xor
rol
xor
ins
popf
pop
les
sub
inc
sar
mov
jnp
push
pop
sub
pop
pop
pop
hlt
add
mov
pusha
es
or
sbb
push
push
movsx
jo
loop
inc
sti
sub
sub
add
xchg
push
dec
sub
sbb
out
mov
dec
cmp
pop
adc
test
fisub
loope
les
mov
add
ins
test
add
add
mov
xchg
daa
aam
adc
push
popf
cmp
dec
inc
cmp
add
inc
dec
test
or
imul
outs
jmp
aam
scas
cld
jmp
ds
les
and
dec
popa
sub
pop
out
sbb
sbb
or
mov
xchg
test
call
add
aas
jbe
cmp
aad
outs
and
jl
test
sub
mov
push
push
iret
push
aaa
lods
unpcklps
cmp
and
or
bound
test
js
xchg
inc
aas
and
or
jo
iret
(bad)
int
fidiv
push
push
lods
loopne
or
adc
sbb
movs
xor
cmp
pop
inc
cmp
mov
mov
mov
je
imul
adc
mov
and
das
cmp
lea
lds
ffreep
mov
inc
jp
outs
ja
mov
outs
pop
sbb
inc
sahf
xchg
xchg
jmp
mov
in
and
or
scas
or
add
cmp
and
mov
out
adc
push
sbb
dec
fist
and
and
inc
inc
adc
(bad)
inc
inc
sub
sub
sub
sub
fisub
xor
add
pop
mov
addr16
stos
inc
xor
pop
repz
and
ins
stos
cmp
add
test
push
cmp
popf
fst
nop
mov
or
xor
pop
lods
shr
pop
cmp
lds
or
sbb
push
rol
adc
push
dec
out
adc
xchg
pusha
es
lock
dec
jae
push
push
sub
icebp
adc
xor
and
sub
cmp
sub
push
add
inc
jae
or
cmp
jae
lods
add
test
mov
add
stos
sub
retf
movs
xor
xchg
and
sahf
loop
inc
lock
fisttp
or
lds
mov
pop
or
inc
out
mov
add
mov
dec
mov
jno
aas
inc
shr
sbb
imul
movs
sub
add
scas
and
jno
push
cs
pop
jo
and
aad
mov
test
test
xchg
xchg
mov
or
les
and
js
pop
retf
das
fmul
cmp
xchg
sahf
sbb
fst
xchg
sub
adc
inc
pop
adc
or
push
cs
out
mov
fcom
push
sbb
stos
or
xor
or
xlat
or
enter
dec
push
sbb
dec
dec
jg
sub
sub
imul
or
sub
sbb
and
mov
push
xchg
push
inc
sbb
cmp
inc
or
mov
push
or
retf
xchg
mov
and
mov
add
mov
cmp
push
mov
stc
push
dec
outs
outs
imul
or
fild
scas
jno
mov
cmp
shl
mov
dec
outs
xchg
and
push
pop
ja
mov
xchg
das
mov
and
mov
and
push
sbb
aaa
imul
cmc
inc
adc
inc
dec
leave
or
adc
loope
fnstsw
fadd
mov
aaa
ins
mov
pop
js
repnz
adc
sbb
mov
inc
ja
xor
push
pusha
test
stos
(bad)
jb
ja
adc
cmp
push
push
jns
cmp
xchg
jno
jno
cmp
lods
mov
cmps
sbb
and
sub
lods
mov
sub
pusha
mov
or
js
adc
cmp
or
ja
arpl
or
inc
sub
xor
retf
int3
cmp
sub
sbb
push
add
push
ins
sbb
and
jle
push
rcr
fst
or
xor
aaa
mov
rcl
cmp
mov
pop
push
xchg
lea
inc
inc
mov
xchg
repz
ss
test
xchg
xchg
jmp
dec
jp
mov
dec
das
pop
pop
je
and
pop
sbb
pop
jne
(bad)
mov
adc
add
and
clc
sub
cmp
adc
inc
cmc
sti
cmp
mov
inc
cmp
cmp
sub
repnz
data16
mov
in
xchg
or
add
adc
pop
mov
and
and
mov
mov
xchg
jmp
idiv
xor
scas
sbb
xor
lock
dec
push
push
inc
mov
lea
add
imul
jmp
sbb
add
push
dec
xchg
sub
test
inc
popf
pop
sub
(bad)
(bad)
cmp
cmc
jne
dec
and
jae
add
imul
fcomp
mov
movs
(bad)
ds
cmc
or
push
cmp
pop
mov
or
mov
push
sbb
xchg
test
mov
pusha
imul
xchg
lahf
cmp
inc
mov
cmp
mov
push
jnp
dec
or
shl
loop
sbb
xor
cmp
(bad)
inc
sub
push
mov
ins
and
adc
dec
jne
lods
jmp
inc
test
mov
mov
xchg
outs
jb
sbb
dec
xchg
outs
jbe
daa
push
(bad)
je
popf
push
push
ins
lods
(bad)
push
add
push
jb
aad
inc
icebp
add
pop
popa
mov
xor
push
pusha
(bad)
inc
mov
xchg
cmc
je
cmp
shl
pusha
movs
jnp
pop
jnp
rcl
ja
and
mov
fcomp
xor
rol
mov
add
in
sbb
dec
mov
lods
cdq
add
mov
outs
mov
shl
shl
sub
sub
nop
pop
aad
adc
inc
mov
mov
mov
jb
cdq
(bad)
popf
into
add
add
cmp
mov
cmp
into
mov
ins
shr
and
dec
or
cmp
sub
mov
add
scas
leave
outs
sub
shl
leave
js
push
sbb
cs
jecxz
mov
mov
adc
test
sbb
and
sbb
hlt
movs
and
stos
movs
inc
fiadd
jno
rcl
adc
outs
pop
dec
sub
inc
fld
cmp
sub
add
mov
sbb
push
adc
imul
jo
hlt
cmp
pop
or
cmp
pop
les
sub
imul
sub
fnstcw
sbb
add
aaa
ja
scas
adc
ins
popf
xor
or
cmp
mov
and
mov
retf
jmp
xchg
lods
xchg
sar
jb
inc
jns
jge
aas
sahf
sub
xor
jae
or
add
add
add
imul
ins
sbb
rcl
sub
mov
out
sub
sub
xchg
aam
xchg
sbb
inc
or
push
stc
sub
mov
mov
cdq
lahf
sub
jne
add
xor
pusha
ret
aaa
and
mov
xchg
es
push
repnz
adc
addr16
jne
popf
add
mov
mov
xchg
test
stos
add
adc
adc
fld
or
and
add
inc
xchg
mov
mov
jo
popf
add
dec
cmc
js
or
stos
push
pop
scas
xor
pop
cmp
pop
outs
adc
push
aas
call
pusha
popa
cmp
dec
xor
lods
sub
in
mov
mov
mov
or
jae
add
into
adc
push
sub
loope
xor
ja
or
lods
ret
sti
shr
retf
dec
push
mov
retf
outs
mov
push
xor
lods
movs
mov
scas
inc
and
mov
je
add
or
xchg
sub
pusha
rcl
cmp
cdq
mov
or
sub
xor
and
jmp
lods
dec
fst
test
jo
(bad)
(bad)
and
or
jge
imul
mov
jno
mov
call
inc
sbb
in
gs
dec
or
mov
and
push
pop
fldenv
nop
scas
mov
outs
and
leave
push
xchg
maxps
or
or
or
inc
pop
lods
sub
cmps
mov
push
fwait
ror
push
dec
daa
inc
gs
mov
clc
test
xchg
dec
lods
xchg
shl
xchg
mov
pop
sbb
les
push
inc
out
xor
sar
ss
mov
aam
scas
mov
das
fisubr
sub
cmps
sub
jne
pusha
xlat
xor
mov
inc
adc
mov
test
or
arpl
mov
push
xchg
lahf
push
sub
mov
push
jge
bound
dec
xchg
scas
add
add
push
jmp
and
jns
sub
and
cmp
ss
fistp
shr
mov
rcr
popa
adc
and
ds
in
or
add
push
add
xor
data16
outs
out
bound
sub
out
out
sbb
ins
push
mov
outs
mov
lods
push
inc
pop
lock
jns
rcl
stos
or
lods
cmps
scas
movhps
inc
cmp
and
jb
les
out
loop
test
dec
cmc
and
imul
xor
bound
sub
mov
scas
push
das
and
les
nop
jmp
push
inc
xor
leave
and
cmps
xchg
ret
sub
movs
fstp
scas
das
sub
es
xor
mov
rol
sub
jmp
stc
retf
repz
cmps
sub
push
add
inc
sbb
add
movs
ror
or
mov
sub
or
push
and
jecxz
sub
mov
push
and
les
add
bound
cmp
push
ins
and
pushf
dec
adc
add
xor
aaa
jnp
fistp
push
sbb
retf
jge
xor
xor
pop
or
adc
dec
js
mov
jns
push
mov
ret
(bad)
jns
adc
mov
pop
and
test
outs
mov
retf
and
sub
sti
inc
sub
push
iret
sti
sub
dec
add
ss
loopne
sbb
inc
sbb
jmp
mov
cmps
jno
dec
(bad)
jmp
stos
cmp
inc
retf
pop
and
sbb
inc
pop
das
sub
adc
addr16
ins
outs
outs
jl
or
movs
inc
scas
jb
arpl
mov
test
js
or
ret
add
dec
jb
pop
mov
sub
sub
xor
jb
push
or
das
outs
adc
and
xor
add
adc
mov
mov
mov
cld
outs
cmp
jmp
int3
mov
adc
test
push
pop
sbb
popa
pop
and
in
adc
add
dec
addr16
push
out
jmp
adc
dec
xor
dec
cmp
mov
movs
cmp
or
and
lods
push
sbb
out
mov
mov
xor
mov
cmp
push
cmp
add
popa
data16
popa
fnstenv
adc
xor
scas
jns
or
outs
retf
dec
nop
xchg
out
add
cdq
lods
outs
sbb
ret
nop
jp
jns
pop
cmps
xchg
push
push
ja
outs
xor
gs
shl
push
aam
cmps
jo
dec
push
inc
dec
dec
xchg
imul
aas
jo
adc
out
jo
in
adc
adc
ja
dec
ja
pop
sbb
outs
xchg
sbb
les
adc
cmp
imul
arpl
sbb
(bad)
or
push
stos
aaa
pushf
inc
push
das
mov
mov
cmp
fimul
or
cmp
sbb
and
mov
(bad)
adc
cmp
sbb
dec
test
and
sbb
div
mov
clc
lea
psllq
mov
sub
push
sub
cmp
adc
in
mov
mov
and
xchg
cmp
test
xchg
int
and
adc
or
pop
lods
add
nop
int
cdq
mov
sub
push
jb
adc
je
in
cmps
call
cmp
fs
sub
fs
dec
or
mov
or
cwde
inc
or
mov
and
inc
push
mov
and
sub
adc
adc
lods
mov
sub
sbb
add
mov
addr16
loop
pop
cwde
pop
loop
push
(bad)
sbb
ret
das
add
mov
push
adc
rcr
mov
(bad)
in
or
sub
sbb
and
in
addr16
pop
mov
adc
mov
inc
pop
cmp
adc
lods
xor
and
popa
pop
hlt
mov
push
ins
and
inc
xchg
cdq
sti
sub
les
and
mov
sbb
add
pop
dec
add
test
retf
jae
dec
sub
sub
dec
mov
dec
and
inc
je
adc
popa
push
and
or
cmps
out
movs
int
or
mov
aaa
jns
sbb
cmp
aad
xor
add
cmp
js
test
and
adc
or
sub
adc
das
sbb
adc
addr16
ins
ror
mov
test
cmp
in
adc
add
imul
ins
mov
shr
cmp
or
adc
cmp
and
mov
inc
mov
in
push
cmp
popa
pushf
xchg
cmps
cmp
je
xchg
mov
adc
cmp
mov
xor
adc
add
ret
jo
push
adc
add
add
out
pop
pop
mov
sbb
ffreep
adc
imul
js
add
lods
adc
shl
mov
mov
cmp
jnp
pushf
call
push
mov
rcr
adc
or
dec
sbb
lds
push
or
ret
fs
rol
mov
jle
js
into
outs
test
pop
push
inc
repz
jo
mov
fs
add
stos
cmp
and
jne
sub
xchg
push
in
inc
jnp
add
push
sbb
nop
movs
jno
loopne
jne
xor
and
push
fiadd
xor
sub
push
pop
add
xor
outs
cmp
ss
jo
pop
pop
in
retf
sbb
sub
pop
out
xor
imul
enter
jo
jno
stc
popa
into
dec
cmp
xchg
mov
cdq
test
xchg
mov
pushf
shl
mov
bound
gs
jp
xor
imul
bound
mov
cmp
push
sbb
mov
fild
daa
mov
dec
rcl
mov
gs
sbb
push
jge
ja
sbb
cmp
jl
movs
jae
dec
ror
jo
mov
inc
enter
xor
xor
ins
daa
and
cmps
mov
ins
ins
(bad)
cmps
(bad)
sbb
repnz
imul
mov
in
inc
xor
jnp
imul
mul
sub
scas
imul
mov
mov
loopne
mov
imul
sti
(bad)
cmp
popa
mov
sub
push
js
retf
imul
shr
push
sbb
adc
outs
mov
(bad)
mov
jo
out
dec
pop
call
sbb
sub
cmps
and
xlat
rol
cmp
popf
test
jns
shl
cmp
outs
arpl
ins
imul
pop
test
or
or
pusha
inc
aas
js
sbb
jnp
xor
adc
mov
add
xor
es
mov
bound
sbb
pop
in
inc
iret
ins
popa
frstor
mov
ror
or
dec
mov
in
push
dec
outs
jmp
cdq
and
pop
mov
ss
je
pop
dec
movs
jnp
addr16
cmps
aam
xor
mov
data16
jae
mov
mov
bound
xor
lea
inc
loope
je
addr16
xor
mov
cmp
lods
adc
call
cmp
ins
sbb
cwde
cmp
popa
int3
inc
mov
fwait
inc
add
xchg
dec
push
xchg
test
push
and
dec
and
inc
pop
xor
ins
mov
and
jae
xlat
ror
add
inc
retw
(bad)
sub
inc
sbb
test
fild
push
ins
jo
push
xchg
dec
lods
sbb
adc
and
into
fisttp
and
cmp
pop
or
js
add
icebp
mov
adc
cs
aas
adc
loopne
and
das
adc
fstp
or
sbb
pop
mulps
movs
sub
movs
and
ins
(bad)
push
gs
or
int3
mov
xchg
jg
nop
imul
dec
outs
mov
lock
ret
xor
or
ins
test
push
imul
(bad)
jl
test
adc
mov
imul
imul
inc
popa
sub
cdq
movs
inc
adc
inc
push
fld
and
sub
in
pop
pop
push
adc
in
lods
mov
mov
sub
xor
cmc
bound
cmp
push
adc
dec
cmp
xchg
mov
es
aas
mov
cmp
cmp
(bad)
mov
dec
test
mov
mov
mov
or
adc
ds
es
mov
sbb
inc
es
pop
pop
pop
mov
mov
add
movs
mov
and
sti
rcr
push
nop
in
fisttp
icebp
arpl
sub
xlat
inc
(bad)
addr16
(bad)
and
jo
adc
xor
aaa
loop
add
fwait
adc
push
mov
lods
bound
pop
and
mov
lods
(bad)
sbb
jmp
mov
push
mov
loopne
lea
push
int
xchg
iret
das
cs
inc
fwait
push
mov
mov
(bad)
jne
gs
(bad)
adc
repz
push
push
adc
xor
inc
pop
out
aas
lods
xchg
mov
lods
push
add
std
je
or
sub
test
add
jns
shl
and
dec
mov
add
or
dec
cmc
mov
test
or
adc
jnp
adc
fcomp
pop
push
xor
ins
aad
mov
mov
mov
cli
inc
repz
adc
xor
and
cmp
and
sar
push
sbb
mov
sub
outs
xor
push
mov
add
(bad)
stos
aaa
mov
into
inc
test
shl
cmps
cmp
pop
jae
sbb
add
push
fnsave
sub
hlt
push
or
pop
add
xor
and
and
jmp
sbb
sub
push
xchg
aas
mov
mov
and
push
inc
and
pop
or
lods
es
xlat
aaa
add
movs
loopne
push
xor
inc
xchg
mov
sbb
dec
jmp
out
pop
xchg
outs
sub
and
adc
ss
call
retf
pop
(bad)
jns
fs
adc
lahf
push
loope
xchg
jp
push
xor
out
imul
mov
cdq
jne
sbb
inc
xchg
cdq
jbe
or
sub
bound
les
(bad)
xor
jecxz
(bad)
stos
or
pop
bound
mov
ficom
sub
lds
pop
test
and
or
sbb
and
inc
xchg
adc
popa
aad
sub
popf
xchg
adc
pop
jle
jb
adc
ins
and
daa
gs
pop
bound
sub
push
push
cmp
mov
push
sbb
sbb
test
push
pop
sub
es
xor
fist
push
push
mov
aas
and
or
(bad)
dec
jno
pop
cmp
aas
cmp
mov
leave
pop
setp
sub
shl
rcr
push
jb
sbb
add
movntq
jo
stc
popf
arpl
out
fisttp
out
test
imul
je
push
sub
loope
or
test
rcl
popa
test
mov
cdq
sbb
xchg
mov
sbb
movs
cmp
bound
fistp
cmps
pop
push
sub
mov
repz
ret
and
mov
pop
cmp
push
xchg
sub
sti
sub
stos
inc
add
outs
and
adc
rcl
mov
aaa
mov
mov
nop
push
sbb
sub
sub
or
mov
mov
or
push
push
xor
mov
test
push
out
inc
mov
and
and
xchg
xchg
imul
jecxz
das
push
adc
mov
les
imul
xor
dec
mov
xor
sub
push
ret
imul
outs
push
dec
mov
mov
mov
add
jmp
jno
cmps
inc
xor
lea
es
iret
sub
gs
lock
bound
pop
inc
loope
lods
mov
ins
fucom
fwait
cmp
mov
in
dec
pop
push
jb
adc
mov
xchg
inc
xchg
or
test
jns
xor
in
retf
pop
xor
xchg
(bad)
mov
das
sbb
out
push
or
sbb
or
movs
sub
popf
xchg
mov
inc
push
add
xchg
dec
popa
pop
inc
jno
sbb
dec
pop
dec
mov
mov
add
rcr
mov
rol
addr16
jo
imul
add
mov
cmp
fdiv
cmc
adc
jp
cmp
xchg
fistp
dec
icebp
outs
mov
adc
adc
(bad)
(bad)
fimul
cmp
and
push
cmp
adc
test
or
aas
lds
mov
add
lahf
jae
pop
jnp
popa
icebp
popf
sbb
jo
and
push
sbb
and
mov
aas
and
mov
pop
cmp
pop
pop
pop
cs
adc
mov
icebp
pop
mov
push
push
imul
inc
jne
movs
and
jno
mov
and
jmp
sbb
xchg
pop
outs
inc
jae
(bad)
and
mov
fmul
js
(bad)
sub
outs
push
ror
pushf
and
ret
movs
rol
mov
jb
xor
inc
pop
xchg
jae
movs
add
out
add
adc
(bad)
adc
bound
aas
imul
xchg
ret
mov
jl
sbb
cli
outs
xor
sbb
into
push
pop
and
or
mov
jb
ret
loopne
push
cmps
pop
xor
je
sbb
fwait
dec
data16
pop
lds
jns
pusha
cmps
dec
xor
and
rcl
test
jne
jp
rcl
adc
add
sub
adc
jae
outs
and
lds
mov
rcl
imul
push
call
cdq
stos
outs
jge
xchg
push
add
dec
int3
das
xor
cmps
pop
enter
aas
popa
cmc
mov
jmp
inc
or
sahf
or
bound
or
add
outs
push
or
outs
push
std
dec
adc
cmp
fstp
das
fsubr
jp
adc
cmp
pop
ret
mov
sub
mov
and
sbb
dec
cmp
and
jne
or
movs
inc
aas
ss
add
pop
cdq
and
or
clc
arpl
sub
imul
adc
adc
lea
daa
cmp
fwait
and
mov
retf
dec
repnz
ins
movs
adc
ret
and
or
dec
jecxz
add
push
and
sub
je
cmp
adc
push
out
imul
xchg
sub
and
push
sti
rol
mov
outs
push
push
push
adc
lds
sbb
mov
cmp
push
sbb
ror
fild
jecxz
out
ins
inc
xchg
jge
jae
arpl
sbb
and
mov
mov
popf
mov
lods
dec
mov
test
stc
sub
je
dec
sub
popa
adc
push
rcr
cmp
jo
aas
push
xor
cmc
inc
gs
std
pop
or
push
fldenv
in
xchg
(bad)
daa
push
xor
adc
out
cmp
ja
add
in
ss
inc
clc
xor
xlat
jns
ins
fistp
imul
jmp
sub
xor
daa
sar
push
inc
or
sub
sub
enter
or
push
sbb
rol
jo
push
aas
test
shl
clc
cld
(bad)
sub
ficomp
dec
mov
inc
adc
jb
cmps
adc
div
outs
push
(bad)
and
in
xchg
outs
js
aad
shr
jb
jmp
mov
jmp
or
or
lods
pcmpgtw
test
shl
inc
mov
fwait
scas
and
xor
sub
jb
jbe
sar
je
sub
cs
cs
adc
push
dec
xchg
sub
mov
sbb
inc
dec
add
inc
cmp
xchg
jge
and
not
mov
or
pop
add
daa
cdq
fs
cmp
(bad)
mov
lods
xchg
push
cdq
add
inc
xor
stos
pop
or
out
push
push
bound
or
xchg
xchg
and
iret
hlt
or
jl
or
mov
outs
dec
jae
dec
or
xor
ins
adc
sub
rcl
push
sbb
adc
sub
or
scas
mov
and
or
jmp
lods
dec
je
add
shl
sbb
lahf
ror
push
jns
pushf
jl
sub
add
mov
dec
sbb
and
sbb
mov
(bad)
push
ins
mov
cmp
cli
mov
out
jae
push
call
ds
out
fisub
sub
sub
adc
jb
add
retf
push
shl
push
sbb
addr16
or
push
inc
hlt
pop
inc
hlt
and
sub
enter
sub
shl
xor
rcl
ss
and
xor
mov
push
cmp
push
cmp
cmp
retf
sub
add
inc
jge
jl
das
enter
dec
sub
push
popf
call
push
mov
sub
or
es
inc
push
ins
xor
or
pop
sub
cmp
hlt
mov
sub
mov
lea
inc
or
mov
idiv
add
cs
ds
and
inc
lods
sbb
xchg
clc
pop
xor
and
mul
add
adc
adc
sbb
xor
out
sub
dec
inc
sbb
inc
data16
dec
sbb
cmp
adc
sti
xor
fwait
cmp
shl
or
mov
bound
cmp
xor
inc
stos
cmp
adc
jbe
arpl
xchg
jnp
sbb
fcom
fs
or
push
jmp
rol
movs
scas
enter
xor
pop
(bad)
pop
sub
adc
int3
sbb
(bad)
out
adc
mov
or
dec
lds
mov
mov
push
cs
or
sub
iret
aas
push
idiv
xchg
arpl
push
test
and
ins
and
test
and
sub
test
sbb
or
jno
xor
js
push
pop
stos
lods
(bad)
xchg
gs
xor
sub
sub
sub
dec
or
aaa
add
mov
jo
add
mov
daa
cmp
cmc
dec
cmp
test
inc
lock
inc
nop
rcl
data16
shl
pop
push
and
ficom
out
(bad)
loope
push
jmp
dec
add
dec
cmp
sbb
inc
or
les
outs
outs
cmp
add
jmp
mov
cmp
add
rcl
dec
add
fild
mov
sti
inc
and
dec
das
sbb
mov
addr16
movs
pop
mov
cmp
iret
jo
inc
(bad)
gs
sbb
sar
ret
or
xor
mov
sbb
inc
fild
dec
mov
mov
sub
mov
sbb
loop
or
lods
push
mov
push
and
ds
xor
imul
pusha
bound
movs
aas
outs
stos
xchg
gs
mov
imul
push
dec
and
dec
adc
mov
add
xlat
rcr
push
jns
je
sub
add
jl
pop
lds
sahf
push
add
loope
or
cmp
xor
inc
add
out
add
pop
jb
lds
mov
mov
sub
fmul
test
sbb
rol
mov
arpl
xchg
mov
sub
or
pop
(bad)
mov
mov
int
push
and
scas
or
add
adc
inc
sbb
mov
add
cmp
fist
sub
and
enter
mov
(bad)
ret
pop
xor
mov
movs
adc
mov
jmp
pop
xchg
out
mov
add
dec
outs
jo
fs
mov
xor
imul
sbb
xor
sub
and
or
movs
mov
sub
or
movs
movs
dec
xchg
ficom
out
xor
push
xchg
mov
sahf
push
sub
adc
test
out
arpl
sbb
or
sub
imul
ret
push
(bad)
cdq
jecxz
mov
cmp
push
push
ins
jo
jmp
mov
dec
call
dec
jge
pop
or
add
imul
imul
outs
cmp
and
add
xchg
popa
pop
loope
or
xchg
aad
or
dec
ror
sub
outs
and
imul
bound
push
test
jns
ins
sbb
imul
pusha
rcr
mov
nop
jb
dec
out
sub
inc
imul
movs
mov
dec
push
or
jmp
popf
and
sub
cmps
sbb
xor
ror
ror
add
cdq
test
js
jecxz
mov
aaa
xor
ss
jno
mov
xchg
loope
dec
add
sub
in
test
ins
push
add
and
jns
mov
xchg
cs
mov
dec
jmp
cmp
and
pop
xchg
fadd
or
leave
jo
cdq
pop
outs
inc
inc
sub
mov
xchg
mov
pop
fwait
sub
dec
sub
jb
add
sub
push
dec
imul
mov
test
inc
adc
leave
test
popa
popa
inc
and
mov
out
dec
pop
lea
stos
test
cmp
loopne
push
dec
scas
stc
retf
loop
es
adc
dec
dec
sbb
mov
rol
test
aaa
scas
nop
xchg
rol
add
xchg
stos
shl
dec
mov
inc
dec
call
cmp
sub
push
fsub
outs
cmps
mov
xor
aam
push
add
dec
push
ror
sbb
mov
movs
cmp
cmp
pop
adc
inc
cmps
xchg
mov
fwait
and
add
leave
aam
push
test
gs
out
adc
jo
out
loope
and
retf
xchg
test
mov
ror
mov
push
and
xchg
pop
adc
jmp
in
call
adc
adc
adc
lods
jnp
pop
sub
inc
ja
mov
lea
icebp
or
and
dec
add
scas
mov
js
outs
dec
or
les
popa
cmp
or
test
nop
xchg
or
or
sbb
jge
pusha
add
sub
inc
mov
push
fs
(bad)
mov
push
inc
(bad)
test
adc
jns
jno
add
push
mov
jae
(bad)
loopne
fldenv
or
test
adc
dec
movs
fcmovnb
aas
jae
mov
jae
pusha
inc
shl
test
outs
pop
jl
cmp
push
xchg
jb
repz
jne
xchg
call
xor
add
adc
rol
jo
push
imul
and
xchg
test
and
shr
nop
xor
ds
rcl
and
inc
ins
cwde
in
sub
cwde
out
inc
test
ins
inc
and
xchg
add
and
mov
sbb
xchg
outs
add
push
jg
and
popa
mov
sub
popa
cmp
lods
adc
push
sbb
cdq
and
lahf
inc
(bad)
in
mov
jmp
xchg
xor
adc
mov
add
rcr
loop
inc
repz
pop
or
xchg
mov
adc
leave
std
cmp
xor
push
(bad)
lahf
adc
inc
retf
jae
ds
mov
jl
data16
js
rcl
outs
shr
fcom
stc
fs
outs
dec
ret
aam
fcomip
shr
ja
pop
xchg
data16
add
(bad)
test
mov
outs
das
in
xchg
inc
jbe
ins
pop
cmp
xor
arpl
inc
mov
sub
sub
push
xor
les
call
mov
sub
pop
rol
loop
push
pop
jae
mov
(bad)
loopne
lahf
(bad)
les
add
test
jbe
(bad)
test
add
lahf
add
shl
rcr
push
rcl
cmp
lock
cs
mov
jne
imul
mov
jp
pop
sub
pop
push
adc
adc
stos
ror
mov
add
arpl
cmp
dec
cmps
popa
mov
xor
pop
push
push
mov
sub
sbb
hlt
and
xor
and
std
sbb
sub
push
imul
(bad)
jmp
call
(bad)
xchg
mov
outs
pop
imul
inc
adc
mov
outs
pop
(bad)
xlat
cmp
cmp
mov
das
mov
xchg
xor
aam
(bad)
fsub
test
xchg
sbb
mov
jb
popa
(bad)
cmps
(bad)
fisub
pop
popa
std
inc
lods
test
and
mov
pop
rcr
mov
push
outs
popa
aaa
or
or
pop
ret
sub
aas
add
mov
cmps
adc
push
scas
pop
sbb
cmp
leave
inc
or
sub
std
fistp
pop
push
dec
push
adc
inc
rol
es
inc
dec
pusha
push
xchg
adc
mov
lahf
jae
cmp
ja
xor
test
outs
cdq
or
add
nop
push
mov
ins
jmp
xchg
sub
mov
mov
lea
xor
or
sub
inc
rcr
add
and
fwait
push
push
xor
adc
push
call
dec
sub
or
xchg
popf
or
movs
jge
adc
and
sub
rol
jo
sbb
dec
mov
sub
push
sbb
inc
outs
cmp
outs
mov
rol
xchg
(bad)
aad
fld
push
pusha
sub
shr
(bad)
adc
mov
mov
dec
in
imul
mov
pop
cmps
jb
call
sub
add
and
mov
push
ret
jmp
ins
(bad)
dec
mov
cs
jo
mov
or
add
or
ins
jl
inc
add
lods
and
push
jo
sbb
push
ret
(bad)
sub
in
pop
xor
push
imul
sbb
pop
xchg
ja
rcl
fs
ficom
and
call
fcomp
dec
dec
jo
jbe
sbb
cmp
and
dec
inc
pop
cmp
loope
jo
add
pop
pop
ins
pop
test
and
rcr
es
fsubr
pop
jns
push
mov
and
adc
aas
cmp
dec
clc
mov
test
adc
inc
pop
pop
and
add
push
inc
push
adc
push
mov
push
movs
jnp
adc
sub
dec
add
mov
push
xchg
je
(bad)
loopne
push
add
adc
and
cmps
mov
int
inc
mov
(bad)
or
outs
ins
(bad)
mov
sbb
outs
out
ret
sbb
add
adc
sbb
push
aad
cmps
mov
sbb
rcr
pusha
popa
jae
pusha
mov
mov
dec
or
inc
dec
xor
pop
and
adc
cmp
mov
mov
pop
jnp
and
cmp
jae
adc
add
sub
lea
mov
cmp
daa
mov
mov
mov
xor
leave
or
pop
mov
and
aaa
inc
rcr
je
xchg
and
push
ret
push
adc
aaa
pop
and
xchg
test
or
stos
adc
or
and
rcl
mov
add
rcl
adc
push
and
js
pop
pop
add
call
mov
movzx
outs
nop
and
ss
mov
sub
or
and
inc
sub
sbb
push
adc
dec
mov
sub
outs
adc
aas
inc
jno
(bad)
fdiv
jb
xor
pop
add
sbb
gs
out
add
dec
ror
and
push
mov
inc
outs
scas
sbb
aam
outs
adc
mov
fwait
sub
and
shr
pop
push
dec
cmp
inc
out
loope
jp
adc
fcmovb
adc
dec
loope
not
ror
jno
xchg
push
add
rol
add
aad
in
pop
adc
ds
mov
add
mov
imul
cmp
(bad)
ins
push
jg
adc
rol
test
in
popa
rol
imul
xor
movs
ds
inc
popa
loopne
or
mov
pusha
jae
push
sahf
jb
cmp
cmp
repz
add
outs
cmp
inc
xchg
popf
push
imul
mov
and
aad
dec
imul
push
xor
xchg
add
lods
jnp
push
dec
sub
cmp
clc
test
xchg
and
xor
inc
xor
push
sbb
mov
push
and
xor
and
jecxz
cmp
push
xchg
xchg
mov
push
jae
xor
clc
xor
js
sbb
dec
adc
and
cmp
jbe
sub
in
dec
or
add
stc
frstor
and
push
in
das
mov
lds
sbb
arpl
dec
dec
or
add
pop
sbb
popa
jmp
xor
in
jo
add
inc
popa
jge
push
xchg
dec
stos
mov
pop
and
mov
shl
cmc
add
push
cmp
rcr
out
dec
adc
in
inc
popf
cmp
cmp
jns
xchg
dec
pop
ret
pop
(bad)
sar
inc
push
sbb
cwde
add
mov
outs
mov
retf
push
sbb
js
push
xor
add
ins
xchg
imul
imul
add
adc
jno
push
pop
fcom
cmc
or
sub
push
or
mov
inc
loope
loopne
pop
adc
jp
aam
mov
enter
daa
fild
mov
add
cmp
jae
mov
js
jp
and
inc
cmp
and
scas
jne
scas
jno
xor
movs
inc
packssdw
popa
imul
in
je
xor
stos
loope
push
cwde
or
or
add
xchg
mov
sub
cmp
inc
jecxz
push
cmps
popa
pop
sbb
bound
pusha
repnz
cmp
ret
mov
sbb
adc
popa
pop
xor
popa
pop
inc
mov
and
add
call
mov
cmp
mov
mov
aas
and
push
adc
das
adc
hlt
push
adc
ins
outs
jmp
sub
xor
jae
push
push
xchg
cmp
js
mov
pop
jae
mul
popa
inc
test
cmp
add
scas
jo
arpl
sbb
xor
test
shl
imul
fidivr
sbb
mov
ins
xor
or
sub
mov
outs
stos
rol
dec
call
dec
sbb
sub
sbb
rol
imul
dec
mov
inc
mov
xchg
and
mov
outs
mov
mov
and
faddp
iret
fisub
or
cmp
dec
adc
je
push
stos
adc
inc
sub
and
or
dec
cmps
das
or
adc
push
sbb
and
push
jnp
pop
pop
add
and
or
pop
and
push
ss
gs
push
test
and
or
and
mov
mov
or
mov
sub
and
in
(bad)
xchg
xchg
push
mov
in
add
mov
sbb
add
jb
inc
inc
sbb
int
test
mov
sbb
add
dec
fisttp
pop
pop
arpl
movs
sub
or
xor
cmp
pop
cmp
or
push
aaa
push
or
aad
dec
loope
aas
popa
mov
push
sub
push
cmp
inc
xchg
push
sub
inc
mov
or
ins
das
inc
sub
inc
test
mov
push
jge
pop
lods
jmp
xchg
das
enter
cs
inc
pop
mov
sbb
add
jo
retf
ins
xchg
js
mov
or
sub
add
sub
sar
push
mov
in
jle
mov
sbb
ficomp
and
fwait
pop
adc
outs
add
cmp
add
je
out
xchg
lea
out
rcr
fidiv
pop
nop
iret
dec
jecxz
into
cs
cmp
lds
stos
outs
xchg
mov
pop
push
or
iret
ja
shl
mov
ins
xor
pop
int
pop
jmp
inc
mov
add
dec
pop
add
mov
or
movs
shl
enter
or
mov
shr
sbb
jb
pushf
ret
div
pop
mov
cmp
int
push
mov
(bad)
faddp
add
mov
cs
lds
sub
pop
movs
xchg
jno
mov
cmp
pop
mov
or
jmp
repz
add
and
lock
retf
or
adc
push
cmps
adc
mov
or
mov
sub
test
je
pop
test
int3
push
sbb
loope
adc
pop
imul
jbe
fmul
and
mov
(bad)
movs
out
mov
or
jo
add
retf
sbb
cmp
outs
test
movs
inc
arpl
add
adc
jmp
adc
outs
sub
outs
push
js
cmp
sti
inc
jl
cwde
xchg
rol
(bad)
mov
cs
shl
and
push
jae
add
shl
mov
push
jae
out
add
jnp
mov
add
or
push
mov
gs
dec
mov
jge
imul
sbb
or
inc
or
mov
mov
xor
and
add
mov
test
ins
or
in
xor
mov
add
outs
and
mov
sub
or
or
js
add
push
outs
adc
xor
lds
mov
pop
xor
fadd
or
xchg
cmp
dec
dec
fisttp
movs
outs
pop
imul
dec
mov
cmp
jbe
imul
rol
or
push
inc
adc
loopne
inc
pop
sbb
or
ss
dec
in
sub
lahf
sbb
gs
cmp
adc
or
outs
push
or
jnp
imul
out
mov
ret
jae
sub
cdq
add
test
cdq
or
mov
jo
and
mov
aas
push
pop
(bad)
pushf
xor
jb
and
push
adc
dec
and
loope
push
test
mov
out
fsub
jno
repnz
shl
adc
mov
mov
xchg
dec
jb
push
clc
add
pop
sbb
out
push
add
fs
mov
nop
adc
adc
rsm
adc
adc
jo
mov
lahf
and
loopne
or
scas
xchg
add
fucomi
adc
in
pop
movs
test
js
add
pusha
push
adc
test
cdq
sub
or
rcl
mov
jmp
ds
pusha
inc
inc
sbb
mov
pop
gs
mul
xchg
arpl
pop
push
out
test
es
(bad)
or
imul
xor
cdq
std
cmp
and
test
js
jns
jbe
punpckldq
jmp
push
and
sub
std
dec
adc
es
sub
inc
test
cmp
mov
int
cmp
out
and
or
mov
sub
add
out
pusha
dec
mov
bound
cmp
pop
sub
mov
loop
sub
imul
mov
dec
jl
mov
imul
pop
call
sub
cld
int3
fnstsw
sub
and
aas
and
fld
sub
cmps
pusha
push
arpl
inc
outs
add
or
test
and
push
nop
xor
out
xor
in
fldcw
xchg
dec
popa
loopne
fisubr
loope
pusha
inc
sbb
mov
jge
mov
mov
jmp
or
mov
pop
push
nop
fdiv
add
loopne
xchg
sub
add
mov
or
out
sub
cmp
sub
nop
inc
dec
or
sar
add
ror
mov
and
popa
movs
dec
xchg
adc
add
movs
mov
jne
fsub
cwde
xor
les
and
ret
and
mov
(bad)
mov
jno
arpl
popa
aas
and
fiadd
hlt
inc
cmp
adc
xor
or
leave
push
dec
aaa
or
push
outs
adc
sbb
inc
ins
mov
pop
jg
adc
inc
data16
and
leave
push
int
push
jo
pushf
jmp
xor
lahf
cmp
and
sbb
xor
and
jo
repz
bound
mov
push
loopne
pusha
jmp
pop
adc
rol
sub
or
push
mov
xor
loopne
xor
cmp
and
enter
push
daa
mov
sets
and
(bad)
fprem
xchg
jae
cwde
stos
mov
popa
pop
adc
ror
and
popf
mov
lods
pop
mov
adc
rcl
xchg
test
push
add
cmp
test
test
jo
ror
mov
cmp
push
xor
cmp
adc
test
xor
cli
adc
ret
ficomp
aam
sub
js
pop
xor
inc
mov
cs
xchg
sub
bound
js
xchg
xchg
cs
and
addr16
cmp
pop
sbb
pop
mov
add
and
jno
outs
mov
or
arpl
nop
push
movs
add
mov
fisub
sub
lahf
jno
shr
arpl
mov
cdq
xor
or
add
xchg
jo
outs
daa
mov
jle
adc
inc
mov
arpl
push
ror
jbe
sub
aas
push
es
pop
push
fwait
dec
and
dec
xchg
das
sti
mov
cmps
jnp
fst
das
xchg
jnp
test
mov
pop
sub
mov
and
fisub
fild
sbb
and
xor
shl
jb
xor
mov
jae
popa
mov
pusha
dec
mov
lds
pusha
pop
add
or
cwde
pusha
(bad)
jo
aas
pusha
add
ss
sar
mov
sub
add
sbb
dec
cmp
dec
sub
xchg
adc
push
xchg
cwde
xor
frstor
lahf
adc
inc
xchg
je
inc
or
sub
test
cdq
mov
shl
aam
mov
dec
mov
stos
inc
stos
push
adc
push
mov
sub
push
adc
mov
ins
mov
inc
aad
test
aaa
lea
jbe
add
mov
loop
(bad)
inc
sub
push
mov
mov
rol
xchg
test
fbld
sub
sbb
adc
cld
arpl
test
add
cwde
xchg
mov
movs
push
inc
xor
jge
je
rcr
mov
aam
pop
inc
xor
rcr
ds
push
imul
ror
jne
pop
mov
sbb
bound
jbe
push
icebp
inc
cmp
fidivr
lea
or
stos
dec
imul
lods
mov
ins
inc
aam
pop
and
cmp
sbb
(bad)
ds
enter
cli
pop
or
or
stos
sub
xor
loop
rcl
jge
mov
cmp
fwait
inc
cs
or
int3
fst
push
or
arpl
cmp
out
jg
inc
popa
pushf
test
inc
and
sbb
retf
je
in
in
popf
or
fcom
int3
push
leave
push
js
imul
xor
pop
das
sbb
sbb
fmul
xor
push
mov
inc
push
xlat
push
fisubr
and
xchg
jmp
sub
push
sub
ds
imul
lods
xchg
imul
test
pop
cmp
(bad)
jb
jb
imul
lahf
xchg
add
adc
jecxz
mov
and
xor
push
pop
xchg
xor
xor
fst
hlt
push
mov
sti
fisub
fadd
sbb
inc
and
fld
fst
jbe
pop
lods
jno
sub
sbb
sbb
push
inc
push
pop
pop
push
jo
mov
add
es
inc
xchg
inc
sub
cdq
je
fwait
enter
ret
xchg
push
or
dec
xchg
sub
mov
imul
sub
and
fsub
es
or
int
cs
imul
push
or
outs
dec
sub
pop
mov
push
cwde
adc
pusha
int
push
ret
inc
mov
lock
or
jb
jno
push
jb
sub
mov
pop
jae
xor
adc
dec
imul
pop
sub
pop
sbb
popa
(bad)
sbb
xchg
adc
arpl
jae
add
sub
sub
popa
(bad)
and
gs
das
daa
and
jmp
push
pop
sbb
aam
fadd
sub
daa
sbb
es
cmp
or
mov
mov
sub
mov
ret
add
imul
data16
lods
push
cmp
imul
aad
or
or
push
cmps
jns
retf
sub
push
mov
adc
and
jnp
cmp
sbb
test
fst
ds
xadd
enter
push
aad
(bad)
push
fwait
cmp
movs
inc
or
cmp
rcr
cmp
retf
and
and
add
and
push
out
mov
(bad)
jmp
cmp
push
aam
ss
loope
jge
sub
adc
push
outs
xor
sbb
xor
and
shr
arpl
inc
fsubr
xor
push
jle
outs
cmp
adc
mov
dec
test
mov
lods
add
inc
gs
cmp
add
je
div
or
out
ds
or
mov
mov
fisubr
jo
sub
nop
jns
dec
ja
and
shl
sub
push
loop
or
adc
into
push
cmps
shr
xlat
cld
sbb
outs
int3
sub
sbb
add
push
mov
pop
lock
push
aas
dec
sbb
lahf
inc
imul
sub
sub
ja
loopne
lock
add
jecxz
repz
push
stos
sub
ins
xor
cmp
jo
sub
mov
cmc
retf
rcr
(bad)
shr
jne
into
and
scas
xor
fcomp
fsubr
inc
jbe
test
sbb
pop
and
je
cmps
jnp
pop
xchg
push
cmp
(bad)
out
jns
xchg
fnstcw
in
pop
es
sub
sub
sub
push
test
add
add
daa
fiadd
mov
bound
mov
pshufw
xor
xchg
(bad)
jo
jae
push
and
pop
mov
adc
xor
outs
xor
inc
cmp
imul
jnp
and
lods
pop
int
sub
xchg
ins
mov
shl
bound
ret
(bad)
adc
mov
push
and
inc
loopne
fst
lods
pusha
jl
sub
jb
loopne
xchg
(bad)
jae
push
pop
cmp
xor
pop
imul
jne
cwde
xchg
xchg
mov
mov
mov
pop
ja
stos
imul
inc
and
ss
push
xor
test
and
xor
and
and
mov
fwait
add
fsub
jnp
jmp
mov
inc
sub
fwait
inc
shl
(bad)
popa
repnz
arpl
mov
rcr
adc
outs
pop
push
jb
push
cdq
or
ror
jge
pop
ins
and
and
(bad)
in
(bad)
pop
adc
(bad)
out
pop
lods
push
fiadd
xor
xchg
pusha
inc
pop
ret
xor
push
dec
push
inc
adc
or
movs
hlt
cmps
sbb
xchg
rcr
(bad)
in
cdq
cmc
mov
fcmovb
shl
pop
adc
cmp
and
xchg
push
test
ins
inc
cs
or
shl
popa
push
pop
jbe
pop
sbb
lahf
cmp
nop
loope
mov
daa
and
fcomp
push
sbb
or
test
nop
xchg
sar
les
sub
xor
je
out
jge
add
test
lock
pop
xor
mov
sub
jl
push
xor
push
mov
lods
pusha
xor
or
add
fld
ins
(bad)
dec
les
lods
sub
jb
xchg
test
popf
mov
fstp
xor
sbb
adc
rcr
mov
mov
in
gs
aad
lods
cmp
cmps
enter
or
test
sbb
adc
adc
popa
imul
cmp
inc
sub
mov
call
sub
inc
cmp
pop
and
outs
push
mov
popf
mov
push
and
movs
and
mov
pop
mov
loop
into
and
sbb
mov
mov
sbb
mov
mov
or
add
xor
retf
jmp
shr
jb
inc
push
ret
sub
fdivr
in
int3
and
lods
inc
pop
aas
or
sub
ret
cmp
ret
adc
cmc
pusha
mov
fsubr
sbb
ins
adc
mov
and
dec
imul
inc
xchg
mov
mov
ss
hlt
rcr
rol
pop
(bad)
dec
and
sub
inc
or
inc
dec
frstor
frstor
dec
mov
stos
add
dec
rol
loope
je
outs
dec
mov
and
test
mov
arpl
addr16
mov
sub
mov
pusha
pushf
and
test
aas
sti
xor
mov
dec
ret
data16
pop
pop
outs
ja
je
and
xchg
mov
mov
adc
push
pop
test
jae
mov
aaa
xor
retf
or
cmp
inc
aaa
sub
fs
loope
bound
mov
sbb
or
outs
jb
or
outs
ins
inc
popa
adc
or
pop
pop
mov
xchg
je
sbb
ret
mov
inc
or
movs
sub
in
mov
sbb
enter
push
add
push
or
add
and
xor
mov
inc
push
xor
out
jo
push
and
dec
add
mov
adc
push
dec
mov
xor
and
cmp
pcmpeqb
cld
mov
aam
dec
push
push
push
mov
cdq
stc
inc
push
sub
push
add
and
ins
jmp
mov
cmp
adc
fwait
cli
and
js
adc
or
mov
mov
adc
neg
and
adc
shr
dec
in
adc
and
nop
icebp
dec
mov
sub
aad
adc
cwde
push
push
add
jmp
aas
sbb
in
and
sbb
push
xchg
adc
jp
out
bound
retf
je
arpl
rol
lods
jge
cmp
sub
ss
(bad)
add
push
dec
or
in
dec
imul
lods
push
jnp
jg
das
push
arpl
adc
aas
jns
mov
fdiv
add
movs
cwde
ins
std
jne
outs
or
dec
fidivr
inc
cmp
or
pop
and
pop
ror
ja
aam
push
cwde
inc
ins
push
cmp
adc
test
add
push
(bad)
rcr
and
hlt
sbb
sbb
mov
ins
imul
and
arpl
xor
sbb
jge
es
and
(bad)
call
aas
sub
aas
xor
xor
in
imul
xor
adc
sar
(bad)
adc
xor
lods
and
hlt
repnz
or
inc
mov
add
mov
pop
push
lods
mov
mov
js
dec
sub
push
outs
lahf
sub
xchg
cmp
add
mov
ss
retf
add
adc
dec
sub
in
mov
cli
lods
pop
fcom
sub
out
js
pop
sar
push
popf
mov
ss
add
push
jl
stc
sub
outs
xchg
xor
dec
xchg
dec
add
mov
push
push
push
xor
leave
fldenv
ja
gs
adc
je
loop
sub
xchg
inc
or
mov
adc
gs
cli
sub
xchg
xor
(bad)
and
sub
sub
mov
rol
call
shl
cmp
cmp
sbb
leave
add
or
scas
pop
and
cld
popa
das
pop
ins
ins
imul
shr
jns
or
or
xor
sub
sahf
imul
into
popa
xlat
xor
add
cmp
adc
mov
jl
imul
pop
pop
cmps
or
fild
sbb
test
pop
cmp
pop
lea
push
call
pop
add
aam
mov
fdiv
mov
sub
jge
gs
mov
mov
cmps
mov
nop
or
aam
or
ins
(bad)
cmp
lea
mov
mov
pop
neg
ret
lds
jne
ins
push
push
fs
sub
dec
das
and
fist
inc
mov
sbb
(bad)
push
pop
cmp
popa
or
cmp
test
or
loope
imul
ss
or
lods
add
cmp
sbb
sbb
movs
test
cmps
jne
enter
mov
int
xor
cwde
enter
and
dec
cmp
fistp
in
lds
int3
push
sub
or
cmp
inc
cmp
sub
inc
sub
inc
push
cmc
xor
jecxz
xchg
(bad)
sbb
or
push
push
pop
adc
jbe
adc
and
(bad)
jge
stc
add
retf
mov
aas
popa
inc
and
jmp
adc
pusha
sub
sbb
jb
mov
outs
xor
movs
or
mov
movs
or
mov
cmp
(bad)
arpl
shl
and
sub
es
test
jnp
mov
rcl
inc
xchg
test
inc
pop
cmps
pop
rol
cmp
aad
cmp
js
dec
xor
xchg
mov
or
(bad)
or
mov
adc
test
pop
or
movs
leave
sub
ss
mov
fld
icebp
daa
cmp
xor
mov
mov
sidtd
and
xor
sub
or
cdq
jns
test
rsm
lods
jno
xchg
add
imul
sbb
push
add
ror
push
push
outs
mov
out
outs
rcl
adc
sahf
push
or
out
bound
push
push
inc
adc
fld
bound
add
sub
add
fcom
and
shl
or
out
cmp
xor
iret
or
mov
out
adc
xor
push
fadd
xor
inc
add
mov
jg
cmps
xor
mov
push
pusha
add
movs
mov
popa
jb
test
add
outs
lea
push
in
inc
adc
dec
and
(bad)
cmp
sbb
jae
or
xchg
movs
lods
adc
mov
xchg
and
fsub
xchg
add
mov
mov
lea
aaa
pop
adc
mov
aad
nop
cs
add
sub
fnstenv
call
cmp
or
pop
push
pop
fwait
jbe
adc
add
jmp
jnp
movs
inc
xchg
dec
ins
sub
mov
test
xor
adc
cwde
cmp
and
lods
mov
pusha
and
(bad)
cmp
cmp
jo
inc
or
add
or
movs
lods
xchg
sbb
xor
add
or
popf
shl
lds
push
mov
in
sub
(bad)
(bad)
js
dec
and
test
add
xor
(bad)
nop
push
dec
pop
pop
inc
jbe
(bad)
inc
add
jb
xor
push
mov
aas
dec
jmp
js
push
bound
lahf
push
lahf
pop
xchg
pop
add
hlt
enter
push
dec
cmp
or
jp
sub
push
mov
mov
je
jno
push
dec
push
dec
dec
je
pushf
and
mov
test
or
shl
(bad)
sub
outs
add
xor
pop
dec
popa
or
arpl
cmp
and
es
lea
jo
ficomp
hlt
dec
push
add
jb
(bad)
imul
(bad)
fisttp
mov
cwde
jge
mov
adc
(bad)
mov
push
fnstcw
ror
frstor
icebp
cwde
shr
or
jg
fimul
sbb
and
mov
iret
lea
xor
cmp
outs
jge
cmp
dec
shr
ror
push
call
popa
mov
and
adc
aas
shr
add
fldenv
outs
clc
cmp
pop
movs
test
ja
pop
out
ror
aaa
mov
and
test
sbb
and
mov
xor
pop
ret
out
ja
mov
or
(bad)
push
or
mov
pop
aaa
ins
mov
push
mov
lods
loopne
mov
out
imul
push
xchg
sub
cmp
xchg
adc
ins
sbb
push
retf
rol
pop
or
sbb
into
cmp
sbb
mov
cwde
or
sub
jns
jmp
sub
ror
gs
inc
rcl
lods
imul
(bad)
fistp
cmp
jmp
scas
and
cwde
or
stc
mov
sbb
rol
add
inc
sub
call
aam
dec
ins
jns
mov
cmp
pop
int
mov
ja
outs
cmp
or
sub
push
adc
jb
addr16
outs
outs
mov
shl
and
popf
mov
aaa
inc
mov
into
les
rol
push
mov
push
inc
ror
popa
and
sbb
xchg
icebp
and
rcl
adc
and
xchg
sub
and
fdivr
sbb
inc
cmp
lahf
sbb
adc
fisub
jge
dec
sub
retf
cs
stos
ret
inc
xor
lods
std
cmp
sbb
mov
sar
adc
push
mov
dec
push
or
sub
popf
and
dec
out
nop
add
loope
dec
paddsw
lods
cmp
add
jae
jno
push
leave
popf
ret
ffree
aad
jge
push
dec
fwait
inc
dec
outs
fisubr
imul
dec
jmp
xor
cmp
ror
pop
add
rcr
arpl
pop
xor
repz
ror
or
sti
outs
(bad)
loope
popa
sub
lea
fidiv
ss
xchg
movs
stc
sbb
or
mov
add
cmp
pop
ret
sbb
ret
or
pop
jecxz
aas
jb
inc
bt
xor
mov
adc
xchg
cmp
lsl
sbb
mov
mov
je
in
pushf
je
je
es
dec
ret
add
xchg
daa
popa
cmps
sub
pop
sbb
jmp
sub
add
aas
imul
cmp
fs
fsubrp
int
(bad)
xchg
mov
imul
aam
pop
jmp
fs
sub
sbb
outs
xchg
arpl
cmps
pushf
fwait
daa
jb
mov
or
adc
cmp
sub
push
jo
iret
add
or
fadd
out
add
xor
push
pop
xchg
dec
jne
xor
jnp
xchg
xor
add
push
xchg
add
mov
sub
mov
ins
test
and
popa
or
cmp
cmps
add
add
add
push
popf
cmps
xadd
arpl
pusha
mov
push
push
je
mov
xchg
mov
mov
ret
inc
daa
lea
aas
xor
dec
aas
adc
xor
cmp
dec
pop
cmp
add
pop
or
das
and
pop
fld
and
jne
pop
push
dec
lea
add
inc
fisubr
fstp
addr16
(bad)
sub
sbb
aam
pop
pop
stos
in
jnp
add
lods
mov
sbb
dec
mov
ret
and
sub
icebp
pop
daa
pop
sub
xor
cmp
cmp
jmp
arpl
aam
add
add
xchg
bound
sbb
or
imul
mov
outs
shl
or
mov
mov
pop
lahf
test
sub
or
adc
jg
fsubr
lea
push
repz
sub
mov
fadd
push
cmp
fcomp
add
xor
push
ror
ins
ins
jnp
jl
adc
pop
sub
add
mov
ficom
test
(bad)
daa
or
sub
xchg
mov
stos
jbe
out
test
cmp
fimul
fcomp
in
in
jae
sbb
pop
sub
hlt
or
push
dec
movs
inc
xor
cli
or
arpl
dec
push
push
test
mov
push
and
popa
or
inc
scas
pop
pusha
sub
ret
push
add
nop
popa
inc
pop
fcmovnbe
adc
or
jnp
aas
loopne
aad
add
and
add
outs
cs
mov
mov
inc
inc
ret
sub
mov
jae
jae
add
pop
jno
xchg
aas
jnp
xor
push
or
aam
xchg
and
(bad)
rcl
xor
inc
not
dec
lea
push
and
xor
imul
add
cmp
popa
adc
fdivr
lea
push
out
inc
fcomp
add
shl
xchg
mov
test
xchg
es
sub
sti
sub
inc
add
ss
fst
add
adc
ja
pop
cmp
push
stc
aas
out
jb
mov
mov
and
sbb
ins
mov
inc
adc
(bad)
mov
and
jle
or
loopne
jno
out
cmp
pusha
push
call
mov
test
cdq
inc
rol
(bad)
retf
pop
imul
or
sbb
jb
or
mov
retf
outs
sub
pop
icebp
xchg
loope
pop
bound
outs
in
sub
stc
(bad)
mov
mov
mov
xor
shl
mov
jno
push
adc
test
dec
es
dec
call
push
rcl
sub
sbb
movs
xor
movs
cmp
mov
inc
inc
and
or
sbb
shl
dec
sub
pop
push
stos
adc
add
mov
sbb
mov
cmps
imul
mov
scas
adc
pop
mov
mov
jmp
xor
repnz
add
add
xor
inc
aas
mov
push
aaa
cmp
movs
inc
rol
ja
sub
imul
xchg
sbb
cmps
in
mov
add
push
xor
add
jge
je
scas
inc
rol
imul
pop
jnp
mov
cmp
add
and
pop
and
jo
dec
sub
and
mov
xchg
mov
arpl
cmp
test
je
mov
push
sub
popa
imul
test
mul
add
inc
pop
mov
sbb
or
jmp
ret
cmp
pop
xchg
sbb
adc
adc
adc
cmp
jmp
adc
cmp
or
mov
xchg
ret
jle
jg
sbb
test
sub
pop
push
jmp
jmp
mov
popf
lds
jo
mov
and
popa
add
scas
lea
scas
daa
imul
inc
xchg
adc
push
pop
jl
test
scas
popw
add
cdq
inc
dec
leave
mov
rcr
dec
inc
dec
ins
xor
mov
or
and
aam
sbb
xor
ins
fs
jmp
(bad)
sub
addr16
sub
adc
sbb
imul
mov
rcr
pusha
and
push
mov
cmovp
scas
test
mov
mov
add
add
adc
mov
push
(bad)
rcl
data16
mov
stos
pop
jnp
gs
sub
sub
dec
ss
jnp
xor
push
pop
push
sbb
pushf
cmp
inc
dec
aas
jbe
rcl
push
sbb
ss
cmp
cmp
push
push
rcl
das
xchg
adc
and
icebp
xchg
imul
xchg
xchg
pushf
outs
jg
push
pop
pop
cmp
dec
sbb
retf
shl
nop
xor
inc
loope
pop
add
fwait
pop
sar
stc
addr16
daa
and
sub
nop
push
inc
and
xchg
adc
cmp
scas
sbb
sub
push
xchg
add
sahf
shl
push
loop
add
stos
sub
adc
push
cmp
sbb
leave
xor
inc
test
add
gs
out
inc
sbb
fld
sbb
xchg
mov
mov
movs
cmp
pop
pop
je
push
mov
xchg
and
imul
cmp
addr16
das
sub
push
imul
and
shl
daa
jb
shr
sar
sub
xchg
cmp
loope
push
mov
aad
outs
pop
pop
inc
dec
sbb
pop
bound
jno
ret
das
cmp
test
mov
inc
cmp
cli
xor
push
aas
pop
jae
repnz
dec
cmp
sub
dec
dec
and
ret
jbe
fs
mov
xchg
das
pop
pop
test
fst
fiadd
outs
push
test
push
out
sbb
ss
imul
inc
(bad)
fidiv
adc
push
jmp
or
out
mov
movs
(bad)
addr16
(bad)
adc
and
mov
pop
cmp
xchg
xor
mov
add
mov
pusha
jo
or
shl
pop
ror
out
imul
push
cmp
mov
test
cmp
shl
add
sbb
loop
and
test
aaa
push
jp
adc
cwde
push
bound
daa
jnp
jnp
add
cmp
jge
adc
stos
xchg
gs
inc
sbb
dec
pop
in
inc
sub
add
add
imul
js
data16
cmp
(bad)
and
or
xor
repnz
xor
aaa
bound
dec
arpl
cmp
xor
add
ss
push
jo
call
add
cmp
fs
push
pop
(bad)
(bad)
pop
or
pop
fisubr
je
outs
outs
xor
jb
fcomip
ins
push
(bad)
and
pop
or
cmp
dec
add
gs
adc
nop
mov
sub
and
xchg
dec
xor
adc
mov
pop
fldenv
mov
and
or
(bad)
xor
test
jmp
and
test
mov
and
stc
outs
gs
inc
mov
jns
push
fcom
adc
mov
in
push
das
push
inc
(bad)
leave
arpl
pop
adc
fwait
inc
and
mov
jbe
test
ja
imul
call
stos
sub
add
xchg
push
sbb
xlat
xor
and
ret
ins
sub
mov
arpl
cdq
loopne
dec
pop
dec
js
into
lods
adc
mul
xlat
lea
sahf
aas
mul
shl
or
cmp
xor
popf
arpl
or
jecxz
inc
add
and
or
rol
sub
pop
jb
add
popa
pop
xor
dec
aas
jne
dec
addr16
adc
lahf
pop
and
and
test
sbb
jne
sub
inc
xor
sub
lds
out
push
jne
cmps
mov
xor
or
test
xchg
(bad)
in
sub
loope
cmp
pop
mov
daa
mov
or
ret
imul
ins
fwait
cmp
lahf
imul
add
mov
pop
push
imul
test
dec
pop
outs
loope
sub
mov
repz
cmp
test
rcl
cmp
push
push
add
test
fisubr
and
jge
jbe
shr
scas
dec
nop
or
in
adc
dec
xor
xchg
je
mov
les
addr16
adc
ret
fimul
cmp
movs
push
call
and
aaa
xor
jne
mov
inc
ins
(bad)
dec
es
mov
pop
cmp
push
inc
sub
lea
jbe
or
pop
mov
xchg
mov
mov
dec
repz
or
out
cmc
retf
add
push
sar
jae
pop
add
aas
movs
mov
add
rol
ss
cwde
retf
pop
pop
ss
mov
aam
adc
ins
mov
push
push
bnd
sbb
ins
pop
cmp
xchg
test
sub
(bad)
and
push
sbb
fidiv
xor
sbb
(bad)
ret
and
adc
add
fstp
or
ins
adc
push
dec
push
pop
stos
sub
mov
sbb
jmp
mov
scas
add
push
mov
jbe
push
pop
push
jmp
jno
ret
inc
cmp
sbb
loope
jno
mov
jns
cmp
sub
mul
push
test
cmp
retf
mov
(bad)
ss
test
push
sub
arpl
and
add
pop
pop
sub
mov
imul
inc
sbb
(bad)
sub
nop
jbe
pop
adc
push
pop
iret
pop
jo
push
xor
push
dec
mov
popa
xor
ret
pop
(bad)
fiadd
outs
arpl
dec
test
sahf
inc
pop
mov
pop
jge
dec
(bad)
(bad)
xrelease
pop
mov
mov
jb
mul
div
test
pusha
sbb
jae
adc
mov
pop
and
mov
dec
popf
sub
jb
js
sahf
pop
ins
out
sub
or
clc
fadd
jbe
cmp
dec
popf
pop
push
pop
(bad)
cmc
mov
or
stos
mov
imul
lods
inc
inc
sub
lds
mov
loope
mov
push
cmc
jb
inc
mov
test
rcr
inc
or
sbb
pusha
mov
jl
ret
or
xor
or
push
cmp
sub
add
inc
and
sbb
dec
push
push
mov
inc
dec
cmp
dec
add
loope
mov
lea
or
add
inc
dec
or
dec
rcl
and
popf
pusha
mov
adc
xchg
dec
xor
adc
ds
ret
ins
jecxz
lds
jge
and
jns
fld
dec
imul
or
ins
out
fwait
jge
or
test
or
sub
and
shr
adc
popf
push
inc
push
arpl
sbb
and
push
inc
imul
or
es
sbb
sbb
sbb
adc
cmp
mov
(bad)
mov
push
and
lea
dec
scas
inc
sub
mov
add
dec
mov
pop
mov
(bad)
movs
loopne
lods
cmp
gs
push
push
pop
inc
push
lea
sbb
adc
je
and
xchg
fcom
popa
scas
and
shl
push
lods
fadd
scas
dec
test
mov
popa
fbld
jo
ret
pusha
rcl
ret
dec
add
or
push
fistp
mov
xor
cmp
mov
lahf
and
mov
mov
sbb
dec
and
shl
mov
and
sub
nop
xchg
cmp
leave
adc
pop
xlat
xor
cmp
sbb
cmp
sbb
and
add
daa
push
fimul
mov
sbb
scas
inc
pop
fild
and
mov
mov
sub
out
arpl
cdq
sub
inc
imul
mov
inc
outs
inc
lods
sub
ins
push
fwait
dec
cdq
pop
push
xor
xor
cmp
dec
sbb
xor
sub
ret
std
sub
outs
sub
inc
(bad)
sub
dec
adc
(bad)
(bad)
push
sbb
out
lds
or
out
test
inc
lock
pop
mov
or
popa
push
js
pusha
aaa
xor
xor
xor
sub
sub
(bad)
mov
inc
add
add
and
sub
jecxz
inc
out
aam
sub
and
test
push
ins
push
sub
and
and
or
adc
fsubr
outs
pop
sub
inc
jo
ins
test
test
sbb
jmp
and
loopne
mov
das
leave
push
sub
adc
cmp
int
vpmovsdb
fidivr
sub
sub
ud2
rcl
aaa
arpl
pop
imul
xor
jl
xor
sbb
push
mov
pop
cmp
pop
dec
or
mov
xchg
xchg
fwait
lahf
int
iret
sub
and
daa
adc
xor
les
stos
mov
fs
xchg
clc
sub
sub
cmp
ins
jae
inc
inc
xlat
ret
sub
test
sub
and
test
push
sub
sub
ret
aad
sbb
ret
pop
fnstsw
jnp
in
add
aam
sbb
or
nop
pop
jge
lahf
sbb
sub
add
ror
push
aaa
pop
cmp
add
test
mov
xor
push
mov
and
shl
loope
inc
xor
leave
popa
mov
push
adc
xor
add
imul
pop
fiadd
mov
(bad)
mov
xlat
in
xchg
loopne
pop
or
lea
xor
adc
xor
sbb
or
lods
inc
cmp
adc
rol
outs
cld
inc
mov
and
pop
push
dec
stc
aas
sbb
les
mov
pop
jg
sub
adc
pusha
stos
and
ins
or
jge
add
fwait
mov
addr16
das
sbb
adc
cmp
test
fnstenv
jo
ja
loopne
int
sub
js
xor
sub
pop
sub
inc
push
imul
sbb
push
sub
pop
les
or
inc
movups
and
sub
jns
pop
ret
pop
dec
cmp
add
jnp
dec
aas
push
int3
adc
rcr
xchg
repnz
in
(bad)
pop
pop
(bad)
push
fadd
or
ss
adc
push
cmp
fcom
fcom
ds
jge
sbb
push
sbb
loope
ret
xlat
xchg
loopne
xor
mov
jne
push
push
sub
jno
mov
cmp
mov
movs
pop
ret
fs
and
leave
mov
push
ins
and
and
cmp
mov
xor
dec
pop
adc
pop
dec
jne
ja
mov
imul
aam
sub
bound
rol
popa
popa
sub
rcr
outs
fwait
cmps
mov
mov
scas
mov
mov
sbb
rcl
dec
fiadd
pop
loope
sbb
pop
adc
xor
aad
scas
or
xor
fldz
aad
fcmovbe
movs
outs
ins
mov
in
jge
adc
loopne
mov
dec
pushf
dec
cmp
or
sub
mov
sub
scas
and
adc
mov
in
mov
imul
cmp
ret
cmps
outs
and
inc
jae
mov
aam
test
dec
int3
mov
add
push
sub
push
pop
rcl
imul
pusha
adc
inc
imul
or
mov
daa
lock
into
lahf
fldcw
xchg
fiadd
push
rol
out
popf
fadd
sbb
sbb
and
and
shl
pop
add
(bad)
sbb
jno
cmp
pop
push
add
or
pop
ret
shl
mov
push
jo
movs
or
and
dec
mov
push
test
and
ja
(bad)
mov
pop
mov
jmp
and
sbb
jae
cs
adc
fnstenv
cwde
sbb
and
aaa
and
popa
jmp
jmp
mov
add
add
or
or
sbb
mov
sub
adc
es
pop
adc
add
mov
aaa
and
pop
les
add
es
dec
cs
add
pop
jecxz
nop
mov
sbb
inc
push
and
sub
jae
mov
sar
or
mov
fdivr
inc
cwde
jbe
jmp
or
dec
mov
inc
pop
and
dec
addr16
aam
xor
cwde
dec
arpl
mov
mov
dec
and
mov
or
or
daa
(bad)
fs
or
add
dec
dec
push
inc
mov
xor
lods
jmp
push
std
pop
ret
scas
clc
aas
sub
mov
ret
push
pop
pop
add
xor
xchg
mov
pop
push
std
aaa
dec
pop
push
lea
and
mov
push
add
(bad)
push
cmp
mov
fild
inc
inc
pop
fwait
pop
xor
inc
jge
mov
inc
imul
and
or
or
push
imul
outs
dec
fdiv
xor
in
inc
xor
ror
(bad)
or
scas
adc
sbb
in
sub
add
test
ret
mov
cwde
mov
das
lahf
adc
cmps
sub
popa
cmp
add
dec
mov
dec
pop
lods
sub
and
mov
aaa
push
retf
imul
les
add
rcr
movs
lea
imul
inc
stos
sub
call
repz
xor
pop
dec
push
cmp
xor
adc
push
loopne
loope
adc
adc
lods
mov
sbb
add
daa
adc
mov
sbb
iret
sub
adc
and
cmp
adc
test
jbe
and
lds
int
data16
jae
mov
lahf
sbb
fsub
mov
and
or
xor
xor
and
pop
or
lods
sub
adc
rcl
adc
or
pop
imul
sub
shr
dec
sbb
or
jno
ret
push
or
sub
lea
adc
mov
cmp
xor
sbb
cmp
and
mov
xchg
inc
push
sbb
mov
addr16
push
pop
mov
adc
scas
lahf
mov
sbb
and
imul
dec
pop
in
dec
push
cmp
sub
sbb
mov
add
push
inc
stos
inc
jae
sbb
aad
xchg
jmp
add
mov
test
xor
and
lea
scas
ins
and
inc
inc
pop
inc
jl
aam
shl
mov
dec
push
addr16
cmc
xchg
mov
les
inc
xchg
pop
and
test
cmp
and
ss
or
mov
and
pop
add
pop
imul
fisub
je
pop
(bad)
dec
and
or
xor
cmp
jb
cli
push
mov
ins
or
popa
adc
fdivr
lods
outs
dec
cmps
or
or
bound
xor
pop
and
push
pop
movs
sub
inc
sbb
test
push
scas
and
psrld
xlat
jnp
inc
push
repnz
inc
inc
jae
mov
mov
(bad)
rol
xor
lahf
mov
jl
sbb
pop
xchg
test
sbb
mov
ret
sti
nop
or
xor
out
popa
rcl
movs
sbb
adc
(bad)
and
or
cmps
cli
and
push
outs
or
js
xor
fwait
es
nop
and
or
mov
adc
pop
mov
or
sub
push
inc
(bad)
xlat
lea
adc
push
in
inc
scas
popa
rol
mov
imul
pop
dec
mov
mov
lods
dec
inc
sbb
and
mov
daa
add
lods
push
daa
iret
push
in
loopne
cdq
xchg
sbb
bound
rcr
mov
arpl
aad
pop
sbb
lods
sub
adc
mov
and
sbb
das
ins
pop
xor
imul
sti
sbb
add
cmp
adc
nop
and
mov
lea
sbb
aad
add
pop
adc
cwde
lea
mov
mov
push
sbb
sar
and
fwait
outs
jne
adc
mov
lods
popa
mov
or
or
jmp
sub
dec
xchg
(bad)
ins
ret
int3
imul
push
(bad)
cmp
shl
or
sahf
sbb
popa
lods
xor
sub
jne
and
or
adc
stos
or
adc
test
mov
inc
add
scas
jmp
arpl
pop
imul
nop
xchg
inc
mov
adc
xor
(bad)
xlat
jl
cmps
adc
mov
call
repnz
shr
ret
push
in
test
inc
xchg
xor
sbb
dec
add
cmps
mov
dec
addr16
or
xchg
adc
inc
jge
or
mov
mov
or
out
aas
arpl
daa
les
jmp
and
sbb
hlt
mov
mov
pusha
sti
das
sbb
mov
sar
xor
sti
adc
or
cmp
pushf
jb
lds
js
adc
push
aaa
adc
adc
mov
sbb
or
aad
lods
cmps
mov
mov
sub
lea
jmp
cmp
xchg
leave
call
push
sub
cwde
sub
cmps
adc
adc
pop
cmp
adc
adc
cmp
inc
mov
xchg
or
jmp
fnsave
jo
xor
popa
or
xor
jmp
loope
dec
or
jne
inc
mov
imul
add
add
push
mov
aad
add
mov
cmps
or
inc
dec
dec
adc
fisub
push
out
jg
push
add
hlt
mov
jae
pop
stc
aad
test
shl
and
or
cmp
pop
inc
add
lea
pop
dec
das
add
mov
pop
push
and
xchg
mov
jbe
inc
lahf
cmp
inc
std
cmp
adc
jne
popf
push
xchg
xchg
mov
jns
or
jne
repz
and
(bad)
and
pop
xor
cmp
mov
pop
shl
lods
xor
cmp
adc
jge
(bad)
imul
cmp
(bad)
jge
inc
dec
cmp
mov
push
and
inc
xor
es
xor
and
xchg
ror
sbb
or
jo
loope
lahf
sbb
add
xchg
sub
sbb
push
cmp
or
arpl
and
cmp
adc
pusha
out
inc
arpl
shl
inc
dec
sub
xor
ins
lds
and
ds
jo
push
cmps
js
imul
imul
pop
ins
pop
sub
cmp
lods
inc
mov
stc
jne
out
test
push
xor
lea
nop
mov
(bad)
iret
pop
movs
aam
push
add
fsub
nop
sub
mov
(bad)
mov
fcmove
ret
popa
push
mov
dec
pop
jg
sub
push
cmp
cmps
imul
sahf
ret
add
add
sub
dec
ret
cmp
lods
arpl
out
dec
movs
gs
fisttp
rol
adc
scas
add
xor
call
inc
mov
fiadd
(bad)
push
sub
sub
or
push
inc
sub
or
push
test
out
add
inc
mov
mov
rcr
and
gs
sbb
jl
adc
inc
movs
fild
popa
mov
imul
test
iret
cdq
cmp
test
pop
mov
sub
push
push
or
or
adc
stos
pop
xor
fadd
daa
dec
and
ret
dec
push
cmp
sub
mov
inc
push
xor
popa
jb
mul
xor
push
inc
dec
lds
aam
popa
nop
add
pop
push
scas
in
push
jbe
inc
push
data16
add
push
jae
mov
push
in
out
xor
rol
jae
pop
push
cmp
sbb
fcmovb
imul
test
repz
xchg
mov
aad
fld
or
push
push
xor
ins
movs
movs
cwde
and
lock
in
mov
cmp
popa
cmp
sub
sbb
add
add
fwait
sub
nop
popa
cmps
nop
add
inc
xchg
sub
adc
pop
stc
test
mov
(bad)
xlat
cmp
mov
inc
push
inc
adc
push
inc
addr16
fmul
push
pop
cmp
and
and
in
or
mov
mov
daa
add
sbb
fld
push
or
int
xchg
stos
add
ficom
adc
or
test
dec
and
dec
or
stos
xor
dec
dec
out
pop
ret
jle
xchg
pop
cmp
cmps
add
nop
pop
cmp
ret
mov
or
jnp
or
mov
shr
mov
push
pop
and
add
sti
and
cli
out
jb
and
cmp
inc
push
(bad)
mov
daa
or
popa
inc
icebp
inc
adc
add
pop
sub
test
mov
aad
add
adc
sbb
and
sub
sbb
rcl
enter
jo
dec
and
xchg
cmps
cmps
ror
and
mov
or
call
inc
or
cmp
inc
inc
aad
xor
fcomp
sub
xor
enter
sti
cs
ins
adc
xor
adc
pop
adc
jne
aaa
mov
jmp
in
inc
pop
neg
or
call
lods
test
fist
test
pop
pop
mov
cmp
adc
push
outs
pop
or
(bad)
fcomp
jecxz
jg
retf
adc
popa
lea
pop
cmps
nop
xchg
imul
fcomp
mov
mov
test
pop
pop
cmps
xor
sbb
or
(bad)
pop
subps
sbb
add
cwde
jbe
push
frstor
arpl
xchg
ret
mov
and
and
push
cs
inc
das
dec
cmp
sub
push
mov
pop
dec
or
ror
xor
bound
adc
or
inc
adc
adc
jno
push
retf
add
lds
arpl
xor
nop
sbb
xor
stc
fsub
xchg
cmps
or
add
retf
adc
sbb
ins
sub
stc
xor
jg
ret
mov
sbb
add
mov
paddsb
aas
je
fs
aad
popf
xor
dec
cmps
mov
mov
add
mov
or
movs
mov
xor
jecxz
bound
add
push
out
mov
movs
and
xchg
adc
rol
jp
cmp
aas
xchg
stc
test
in
shr
mul
xchg
popa
jo
inc
and
fsubr
popa
xor
add
add
adc
mov
push
arpl
push
loope
ins
adc
xor
mov
test
int3
add
push
test
inc
jg
fiadd
jnp
cmp
test
push
cmp
pop
or
sbb
mov
fwait
imul
int
int3
inc
jb
sbb
add
pop
adc
cmp
stos
mov
ins
stc
inc
add
mov
pusha
shr
lods
fimul
xor
mov
or
pop
enter
pop
xor
lods
inc
ret
icebp
fild
inc
push
cmp
fs
mov
add
push
enter
xlat
les
aam
pop
adc
jb
fdiv
movs
xchg
xlat
imul
mov
cs
inc
adc
push
in
data16
mov
arpl
stc
movs
sub
outs
adc
inc
and
movs
dec
sub
mov
out
cmp
mov
pusha
in
and
int3
inc
or
or
ret
ja
jno
push
xor
inc
jmp
outs
add
lock
(bad)
ins
test
adc
pop
mov
sbb
and
jp
xor
rol
add
fld
ret
or
pop
mov
inc
sub
push
loopne
dec
inc
sub
or
sub
sub
xchg
outs
or
add
mov
push
ret
mov
inc
mov
out
(bad)
add
out
pop
(bad)
js
lahf
shr
push
ret
pop
mov
fnstsw
popa
sbb
or
mov
movs
adc
outs
add
adc
lods
jmp
add
out
and
xor
test
sub
sub
out
and
push
jae
fst
adc
out
mov
aad
adc
xor
inc
in
mov
adc
pusha
lock
sbb
mov
sbb
cmp
sti
test
add
fwait
ins
mov
add
adc
pusha
add
add
xchg
shl
push
sub
popa
adc
xlat
(bad)
sub
mov
or
and
gs
adc
push
xchg
sub
xlat
int3
dec
out
add
or
add
cmp
popf
pop
cmp
lahf
out
sahf
jo
loopne
adc
sub
shr
ret
das
ss
sbb
xchg
and
adc
add
pop
pop
imul
fwait
int
repz
push
(bad)
rcr
pop
add
cmp
ins
sar
lock
call
outs
dec
clc
movs
jge
ins
sar
ret
xchg
mov
bnd
inc
adc
add
out
inc
pop
cmp
test
push
leave
dec
mov
js
sbb
fs
ror
retw
mov
sub
mov
call
js
pandn
xchg
push
add
iret
dec
repnz
sub
pop
jmp
lldt
mov
fnstenv
add
push
or
add
repnz
loopne
add
lock
enter
and
cmp
pop
cld
clc
jg
cmp
cld
xor
mov
add
add
pavgb
mov
bound
adc
push
rol
imul
xlat
rol
push
add
or
es
xor
loopne
loopne
aaa
inc
push
ja
mov
addr16
dec
pop
push
es
enter
or
push
ds
leave
xor
add
add
out
mov
add
add
pop
daa
ss
mov
inc
push
xlat
addr16
ror
cmp
or
add
pop
pop
daa
xor
icebp
fidiv
inc
push
xlat
adc
add
mov
jge
adc
and
daa
adc
add
and
jg
push
inc
ss
iret
loopne
jae
popa
add
fsubr
push
daa
loopne
clc
addr16
push
test
aaa
or
adc
jp
fnstcw
or
adc
push
inc
test
out
data16
add
add
inc
sbb
xor
aaa
out
ret
repz
ret
push
and
push
(bad)
cld
clc
aad
iret
repz
add
imul
and
sub
and
and
and
push
inc
and
or
fisttp
or
ret
push
mov
out
aas
pop
and
ret
repz
addr16
or
and
cmp
sahf
adc
into
push
out
dec
or
pusha
clc
pop
sbb
psubusb
xor
scas
lock
iret
call
out
dec
repnz
(bad)
rcr
das
iret
adc
or
pop
adc
jg
cmps
push
lahf
idiv
adc
inc
xor
inc
xor
cmps
fldcw
dec
dec
test
dec
into
xchg
outs
add
pop
fwait
out
sahf
nop
jg
or
add
or
pop
js
xlat
packuswb
sub
or
push
or
outs
outs
ss
or
or
adc
adc
adc
into
cmp
xchg
or
daa
aaa
inc
push
in
push
or
iret
repz
(bad)
call
lock
(bad)
jg
aas
clc
push
jo
lock
pavgb
cmp
or
pop
pop
daa
aaa
inc
push
(bad)
stos
loope
addr16
iret
push
push
and
mov
data16
xchg
push
push
and
mov
div
xchg
dec
test
mov
in
xor
xchg
dec
inc
add
jae
data16
add
and
pop
pop
daa
pusha
cmp
pushf
aaa
inc
push
data16
jae
pop
sahf
into
aas
cld
aas
out
ss
cld
ds
cmp
sbb
pop
pop
ret
jae
cmp
aaa
inc
push
addr16
leave
push
adc
jmp
out
int3
test
pop
pop
push
pop
mov
push
daa
add
or
inc
push
mov
daa
aaa
sbb
add
push
std
inc
ds
pop
pop
xchg
pushf
pop
daa
inc
add
sub
or
aaa
inc
enter
add
push
or
dec
jnp
or
add
addr16
add
dec
mov
or
mov
xchg
add
ud0
pop
xor
outs
inc
enter
or
pop
add
outs
mov
frstor
pop
(bad)
inc
mov
clc
xchg
jb
jbe
lock
cld
cmp
lahf
vmread
mov
mov
push
daa
sbb
int3
ins
mov
out
add
daa
lock
xchg
xchg
sbb
and
or
nop
push
adc
dec
push
add
mov
test
xor
add
outs
sar
jecxz
jmp
add
add
push
inc
sbb
push
inc
or
jle
inc
ret
rol
add
mov
cmp
popf
xchg
cmc
add
or
cmp
call
inc
adc
xor
mov
xor
inc
push
inc
inc
ss
dec
div
cmp
and
pop
or
push
or
cs
xor
push
out
(bad)
or
push
daa
push
pop
ins
sbb
aas
push
jae
add
mov
adc
es
wrmsr
sbb
jo
mov
inc
les
enter
and
xlat
or
add
ja
jnp
mov
jnp
pop
mov
xor
es
daa
xlat
xor
cli
push
fs
or
shl
mov
sub
add
sbb
dec
mov
aas
pop
add
ss
(bad)
ins
dec
sub
ja
pop
inc
loope
dec
inc
jo
or
or
add
or
lahf
pop
jbe
pop
fidivr
jmp
push
add
push
imul
pop
sbb
add
push
sub
jge
repz
xlat
(bad)
add
mov
push
ja
out
xchg
jns
or
xor
bound
push
push
repnz
add
xchg
add
ins
rol
inc
and
push
sbb
jmp
inc
push
mov
outs
and
cmp
outs
jnp
movs
arpl
cs
cmp
jo
mov
sub
mov
pop
mov
inc
and
sbb
add
and
ja
mov
xchg
ins
inc
pop
jo
jns
push
aaa
retf
sub
addr16
add
push
and
jne
jecxz
add
inc
lock
or
fstp
adc
dec
scas
xlat
adc
(bad)
mov
jmp
sbb
shl
mov
mov
mov
das
arpl
imul
jl
arpl
outs
or
and
and
push
mov
inc
bound
sub
scas
push
stos
rcl
push
sti
rcr
mov
fwait
ins
jg
scas
mov
inc
(bad)
rcr
push
adc
jae
mov
ds
push
imul
pop
outs
iret
mov
lock
sub
cmp
sub
and
and
jmp
ja
fisubr
xchg
imul
pop
aas
pop
xor
jo
ins
adc
xchg
mov
frstor
and
sub
or
imul
sti
jbe
fs
mov
arpl
adc
retf
mov
je
inc
jbe
pop
mov
mov
add
sub
daa
adc
and
stos
(bad)
movs
arpl
inc
iret
push
mov
xchg
ins
call
fdivr
mov
mov
add
jbe
jecxz
repnz
adc
adc
sbb
jl
sub
push
pop
add
cmps
pusha
sub
mov
js
mov
or
push
mov
xor
ins
pop
(bad)
ins
(bad)
jns
adc
sub
cmps
bound
shl
imul
(bad)
adc
fwait
pop
jnp
jp
retf
ja
and
mov
xchg
mov
push
ja
push
add
arpl
mov
sub
aad
outs
aaa
ja
adc
pop
cmp
arpl
mov
adc
fcomp
cmps
ret
test
sub
xor
xor
xor
push
addr16
add
das
or
adc
jmp
mov
inc
or
inc
repz
mov
xor
or
ret
mov
pusha
(bad)
(bad)
and
mov
ss
outs
push
cmp
aad
stos
cli
inc
sub
add
push
add
call
iret
push
xor
mov
(bad)
lods
inc
or
mov
pop
jno
pop
sti
pop
cmp
aaa
push
pop
(bad)
fs
imul
cmp
and
xor
pop
push
popa
xlat
inc
aas
or
mov
dec
sub
je
mov
arpl
xor
xchg
ja
ds
jae
inc
xlat
ja
adc
and
js
sub
pop
mov
jne
sub
ins
ror
sub
ins
sbb
mov
push
pop
aaa
cmp
push
inc
mov
jne
fdiv
push
pop
dec
xchg
sub
adc
inc
shl
jp
sbb
cwde
test
pop
mov
(bad)
and
arpl
fistp
ror
pop
xchg
shl
xchg
and
sbb
pusha
daa
adc
cmp
add
jnp
mov
in
push
dec
push
push
lock
xchg
push
mov
xlat
scas
out
and
or
pop
xchg
jnp
test
imul
adc
ficom
pop
adc
fwait
mov
mov
fimul
loope
pusha
add
jae
xor
push
mov
imul
pop
jecxz
mov
jae
jae
sbb
sar
mov
mov
ja
fist
adc
mov
xchg
(bad)
and
cmp
lock
xchg
or
imul
sti
imul
mov
(bad)
adc
sub
or
adc
push
iret
ret
xchg
stos
dec
in
imul
imul
rcl
mov
int3
nop
stos
jb
iret
dec
push
dec
out
ins
pop
in
test
xor
jae
les
imul
push
mov
or
mov
sbb
popa
imul
and
ins
pop
xchg
ret
pop
imul
mov
arpl
je
add
add
cwde
stos
and
or
or
es
or
sbb
ins
mov
fild
mov
mul
xor
xchg
outs
push
pusha
pop
mov
scas
and
dec
test
xchg
cmps
and
mov
fisubr
or
adc
dec
iret
mov
inc
pop
dec
xchg
loop
adc
fs
add
and
pop
rol
outs
adc
push
enter
mov
push
add
xchg
pop
leave
aam
pop
or
xchg
pop
leave
or
or
pop
push
or
movups
adc
mov
sub
add
mov
repnz
dec
mov
rcl
xor
mov
sti
mov
add
adc
jne
add
mov
add
adc
nop
push
add
add
add
or
clc
in
pop
add
loop
ins
pusha
sub
in
(bad)
ins
jae
adc
cmp
int3
inc
adc
dec
inc
sahf
icebp
in
or
jo
or
add
mov
lea
adc
popa
addr16
push
xchg
sbb
test
fbld
or
jae
daa
imul
js
push
adc
push
fmulp
cmp
jo
jg
or
push
outs
sub
aaa
mov
adc
imul
add
test
push
sbb
or
enter
add
ret
sbb
xchg
sub
and
inc
sbb
or
and
into
loopne
or
inc
jae
adc
sub
xor
mov
sbb
mov
mov
pop
push
or
out
pop
inc
or
cs
popa
je
jbe
inc
test
popf
sbb
inc
push
fs
loopne
loopne
xchg
and
jo
mov
mov
out
xor
mov
pop
stc
(bad)
sbb
out
mov
push
imul
push
mov
bound
cmp
push
pop
mov
inc
sub
push
xchg
add
or
inc
ins
inc
scas
das
enter
rcl
pusha
inc
test
dec
out
adc
loopne
test
mov
push
arpl
or
(bad)
push
mov
push
(bad)
or
dec
inc
dec
adc
inc
shl
add
mov
loop
sbb
or
adc
dec
lods
pop
pop
cs
pop
pop
push
or
dec
retf
jo
sti
hlt
imul
lahf
push
xor
add
inc
ins
push
cmps
lock
dec
inc
daa
dec
mov
test
mov
push
sub
mov
movs
out
inc
pop
push
jno
push
lods
pop
or
sbb
inc
inc
outs
ror
scas
mov
or
mov
push
inc
sub
sar
push
jb
pop
push
pop
xor
cmp
sbb
xchg
mov
mov
imul
dec
adc
adc
adc
sub
js
mov
pop
adc
sbb
xor
lock
pusha
and
mov
lods
dec
(bad)
aaa
mov
xchg
lods
jp
add
sub
arpl
fist
dec
add
ss
(bad)
jecxz
sbb
dec
sbb
jns
gs
jbe
mov
or
mov
mov
je
(bad)
inc
or
pop
or
das
or
and
push
cmp
test
sbb
sar
nop
pop
cmp
and
enter
mov
mov
fs
outs
pop
popf
daa
inc
nop
jae
scas
and
pusha
mov
test
jge
or
add
push
xor
cs
jae
arpl
inc
or
mov
inc
adc
mov
test
and
ret
cdq
or
cmps
and
mov
inc
add
outs
rol
mov
dec
and
aad
mov
or
inc
mov
mov
ja
gs
mov
cmp
std
(bad)
call
fimul
inc
mov
pop
outs
xchg
mov
ja
cmp
add
sbb
xchg
add
jo
shr
push
inc
push
xlat
mov
adc
jno
dec
xchg
jo
in
adc
xor
aaa
or
retf
out
pop
repz
lods
popa
xchg
iret
and
sub
and
dec
dec
push
pop
dec
inc
arpl
popa
pop
lods
sbb
fsubr
sbb
inc
and
sbb
sbb
fsub
add
fwait
mov
or
xchg
idiv
adc
out
fld
push
sbb
jae
dec
outs
data16
cmps
pop
inc
xchg
test
sub
inc
jns
loopne
adc
jb
arpl
push
lods
sbb
inc
pop
or
adc
add
mov
cmp
js
jmp
mov
mov
int
pop
sbb
repz
xchg
sbb
mov
pop
shr
arpl
rcr
jns
ret
retf
dec
jns
dec
je
xlat
cmp
xchg
xchg
cwde
and
push
movs
push
clc
out
aam
add
adc
jmp
pop
jmp
arpl
rcl
xor
push
adc
mov
sub
xchg
adc
and
mov
and
jb
and
sbb
pop
fcmovb
cmp
mov
adc
outs
xchg
xchg
or
pop
popa
jne
rcl
xor
xchg
std
push
mov
(bad)
jae
pop
rcr
inc
sub
pextrw
dec
pusha
fstp
aad
adc
push
pop
cmp
aam
jo
enter
inc
sbb
int
retf
inc
pop
and
dec
jns
je
inc
jae
mov
je
fldcw
inc
adc
mov
jnp
sub
push
call
cs
push
sub
xchg
dec
test
std
ss
out
shl
les
pop
(bad)
adc
add
mov
das
xchg
test
outs
dec
xchg
inc
inc
xor
out
imul
push
sub
mov
push
jne
dec
imul
push
pop
push
(bad)
push
pop
loope
xchg
or
lahf
ror
inc
inc
ins
fisub
cmp
call
pop
sbb
push
sub
loopne
and
dec
sbb
jp
daa
jae
aaa
ret
mov
xor
and
dec
push
push
fmul
pop
and
imul
cwde
lods
pusha
gs
inc
inc
jae
ficomp
push
sti
ja
outs
js
sub
(bad)
test
push
icebp
and
adc
(bad)
and
and
ins
test
mov
rol
add
and
cmps
xor
add
or
xchg
retf
add
sar
push
sub
pusha
sub
adc
fnstcw
dec
or
lds
pop
sbb
xor
jb
cwde
inc
push
rol
inc
dec
aaa
ins
sbb
test
pop
ret
mov
inc
movs
cmp
jge
in
pop
mov
or
das
fst
inc
sbb
test
jb
fadd
fld
jo
mov
imul
dec
inc
pop
sub
das
movs
jl
lods
daa
daa
mov
sub
push
dec
sub
out
cmp
or
mov
adc
jbe
jnp
pop
js
xor
inc
adc
aas
test
dec
xor
adc
or
pushf
push
xor
inc
xchg
push
mov
jbe
pop
xchg
stos
add
xchg
jmp
jo
sbb
pop
cmp
lock
sub
dec
ffree
mov
outs
inc
mov
push
or
fsub
sbb
xor
fs
sub
(bad)
dec
fstp
cmp
imul
mov
sub
or
and
test
faddp
rol
push
clc
fcmove
sub
mov
fcmovu
add
jge
sti
sub
inc
cmp
xchg
add
xor
outs
popa
xchg
cmp
(bad)
and
loope
mov
imul
adc
mov
or
rol
xchg
mov
call
mov
fdivr
adc
dec
je
out
test
imul
inc
rcr
fs
mov
call
xlat
push
fcom
or
sub
or
mov
jp
jb
fdivrp
jo
das
(bad)
gs
iret
pusha
add
daa
and
gs
sub
sbb
dec
pop
pop
mov
cmp
sbb
shl
sub
cmp
sahf
xchg
dec
fsub
and
sub
aas
jae
popa
sbb
ds
cmp
ret
sub
and
dec
xor
daa
inc
push
jb
mov
test
out
xchg
or
or
mov
ins
fnstcw
xchg
ret
ret
pop
inc
ins
and
cmps
rcr
cmps
jne
or
adc
adc
jb
mov
dec
arpl
and
and
sub
sbb
fidiv
jmp
push
pop
and
inc
cmp
sbb
xchg
aad
push
sub
pop
mov
and
rcl
test
pusha
add
shl
arpl
movs
jb
inc
xchg
push
das
and
and
ret
add
adc
mov
cmp
sbb
outs
rol
xor
or
mov
or
outs
adc
stos
push
lods
fucomp
xchg
outs
outs
js
push
pop
stos
pop
jl
je
and
jb
jmp
inc
xlat
sub
add
add
dec
xor
mov
aad
xor
or
jmp
or
pop
movs
jp
add
fisub
ret
mov
cmp
imul
and
sbb
jbe
sub
imul
sbb
xor
push
fst
or
(bad)
and
inc
movq
inc
movs
push
or
call
push
cmp
fwait
ret
adc
pop
xor
push
sbb
push
cmp
add
mov
mov
movs
jmp
stos
push
lds
cmp
sub
xor
loopne
push
mov
aad
mov
pop
xchg
and
sub
adc
aaa
cmp
mov
jne
and
out
repz
retf
scas
outs
(bad)
scas
lods
push
or
push
xor
ror
jo
pop
jecxz
or
or
sub
pushf
push
sub
outs
push
imul
push
push
cmc
and
pop
fild
test
retf
das
lods
sub
sbb
adc
scas
test
pop
cmp
dec
daa
and
and
gs
xor
mov
mov
ror
pop
or
std
xor
pop
mov
mov
cwde
adc
or
jb
retf
ret
cmc
out
outs
xor
add
pop
sbb
(bad)
(bad)
push
add
nop
pop
add
lock
add
and
add
lock
add
push
call
mov
lock
add
push
add
add
add
adc
or
(bad)
(bad)
(bad)
call
push
ud2
and
or
adc
and
or
lock
add
pop
adc
jb
(bad)
jmp
mov
lock
adc
(bad)
pop
push
push
cmp
adc
jnp
(bad)
call
add
and
pusha
add
lock
dec
ins
dec
(bad)
or
jmp
and
push
xor
pop
adc
(bad)
pop
add
aaa
or
and
add
inc
(bad)
lock
add
xor
lods
shl
pushf
jle
add
inc
(bad)
cmps
(bad)
(bad)
(bad)
fcomi
jns
jns
pop
mov
fild
lock
add
cmp
cmp
xchg
das
or
mov
and
sub
aas
cmp
pop
sub
sbb
inc
lock
(bad)
add
fistp
mov
push
das
and
pop
add
add
add
inc
or
add
mov
jns
xchg
push
daa
imul
imul
jg
cmp
and
pop
fstp
iret
jb
mov
inc
adc
and
aad
in
sub
add
add
loopne
push
ja
and
in
lock
lock
pop
push
sbb
adc
fucomi
mov
push
cmp
adc
sbb
ds
ins
and
adc
sti
mov
ins
adc
add
push
(bad)
add
push
add
push
sbb
adc
jle
push
and
sbb
xchg
inc
mov
dec
push
inc
add
adc
rol
push
sub
jle
cmp
cmp
and
(bad)
(bad)
call
lods
inc
push
adc
sbb
sbb
jae
sbb
inc
mov
sbb
adc
sbb
imul
sub
add
sub
sbb
or
sbb
pop
xor
fldln2
loopne
pop
and
push
xor
pop
adc
adc
mov
and
bound
add
or
mov
call
pop
or
push
push
sbb
push
cs
push
mov
adc
mov
add
adc
cmps
adc
xor
sbb
inc
imul
dec
sbb
cld
not
cmp
adc
or
push
jae
and
dec
and
mov
imul
or
or
syscall
or
sbb
or
outs
xchg
push
sub
and
adc
inc
sbb
mov
and
arpl
pop
push
add
mov
push
mov
or
enter
cs
add
and
cmp
mov
leave
or
or
sub
sbb
pop
daa
adc
mov
std
jmp
xchg
jecxz
xor
add
inc
outs
sub
xor
stc
jl
jle
sbb
add
sbb
neg
inc
adc
sahf
or
pop
and
sub
inc
pop
inc
dec
sbb
inc
ficom
sub
and
scas
sub
xor
sbb
and
jle
mov
loop
xor
pop
or
stos
cmp
sub
adc
fild
outs
adc
mov
sub
sti
ss
mov
push
or
sub
adc
dec
pop
mov
jbe
sbb
push
push
adc
adc
add
push
sti
neg
and
or
pop
and
sbb
pop
jg
ins
adc
pop
pop
or
pop
push
sbb
add
pop
mov
jg
pop
adc
push
xor
call
pop
add
cmp
xchg
es
push
xlat
push
push
fidiv
inc
pop
xor
sub
add
fbld
pop
xor
arpl
jecxz
sti
(bad)
fistp
outs
or
push
sbb
adc
or
or
sub
xchg
sti
std
mov
enter
jns
mov
xchg
ss
sbb
fidiv
imul
inc
idiv
adc
xor
es
cmp
rcl
add
pop
push
out
clc
das
repnz
push
xor
sub
sbb
lahf
out
fwait
jge
sub
outs
sbb
sbb
or
sub
mov
add
lock
cmp
adc
and
adc
jge
pop
pop
mov
pop
js
xchg
adc
push
sbb
or
or
sbb
and
sbb
and
cmp
ret
(bad)
(bad)
(bad)
inc
pop
pusha
inc
adc
ror
imul
mov
push
dec
xor
neg
sbb
js
(bad)
lock
sbb
mov
movs
xchg
add
aad
das
lock
add
lds
pop
add
add
in
dec
clc
pop
icebp
aas
cwde
cmp
push
push
push
pop
inc
inc
ret
add
mov
sub
aas
add
imul
popf
add
adc
push
iret
cmc
(bad)
mov
pop
sub
xor
adc
sbb
and
aas
push
inc
or
loope
adc
test
sub
xor
sbb
xor
out
adc
cmp
stos
mov
add
add
dec
add
das
and
das
xor
ss
(bad)
mov
fnstenv
adc
jmp
es
stos
ins
adc
xchg
and
aaa
movs
fnsave
adc
add
or
movs
adc
pop
aad
add
or
cli
adc
adc
cmp
adc
shr
sti
outs
jo
ins
sub
adc
or
ret
adc
pop
sbb
push
jns
mov
pop
xor
movups
jb
mov
adc
adc
adc
adc
push
sbb
sub
or
outs
call
xchg
xchg
bound
xor
or
paddsw
call
lock
push
pop
adc
js
das
cs
pop
sbb
add
paddsb
sub
sub
sub
push
adc
jge
cmp
ret
and
adc
sbb
stc
and
push
addr16
jns
xor
mov
push
push
xor
aam
and
sbb
add
push
push
aas
push
or
adc
or
sbb
push
and
add
pop
clc
mov
cmovbe
dec
adc
or
push
inc
out
scas
cli
xchg
cmp
sbb
and
sbb
sbb
add
adc
adc
sbb
and
(bad)
push
(bad)
(bad)
dec
stos
test
mov
lock
inc
sbb
and
pusha
fist
pop
(bad)
es
jl
inc
lock
add
(bad)
(bad)
(bad)
dec
adc
cmp
lock
cdq
lock
add
repnz
lock
pop
movs
lock
(bad)
inc
xor
jne
fwait
test
lock
add
dec
jae
clc
add
adc
and
test
hlt
jmp
dec
or
mov
add
aaa
xor
xor
jbe
mov
mov
jo
mov
ja
xlat
js
or
pop
pop
outs
push
add
movs
and
in
aas
or
in
or
or
(bad)
jg
mov
sbb
add
push
add
imul
push
cmp
bndldx
dec
and
jmp
or
or
jb
add
and
mov
std
les
push
adc
add
or
sub
dec
test
stc
pop
and
(bad)
dec
and
stos
or
or
push
icebp
out
xor
jle
pushf
cmp
jge
pop
mov
pop
test
and
scas
and
or
pop
icebp
push
mov
adc
add
mov
jbe
jg
jg
popf
lock
dec
mov
popf
adc
xor
jmp
dec
mov
(bad)
cwde
lock
dec
pusha
sbb
adc
movhps
inc
cmp
sbb
ins
add
jmp
cld
mov
jp
fst
adc
stos
mov
lock
dec
(bad)
cmps
(bad)
call
add
pop
out
lock
add
(bad)
dec
add
pop
sbb
pop
sub
sbb
sti
add
dec
push
fstp
sbb
push
cmp
pusha
daa
push
cs
sbb
pop
cmp
adc
femms
daa
or
push
cmp
sub
test
stos
in
adc
and
pop
cmp
or
cwde
push
mov
sub
sub
pop
pushf
cld
add
ds
dec
call
xor
ja
movs
or
and
(bad)
jg
stos
sub
sbb
test
pop
and
sbb
push
adc
mov
add
dec
or
or
sbb
jbe
sbb
pop
sbb
push
and
or
pop
adc
out
or
movs
jnp
in
(bad)
push
bound
lock
add
and
adc
adc
adc
and
sub
xlat
adc
adc
sbb
mov
sub
dec
movs
cmps
(bad)
jg
mov
jbe
and
mov
cmp
(bad)
jg
cmps
and
sbb
jbe
mov
and
push
or
and
dec
xchg
pushf
ror
or
or
les
sar
and
or
bndstx
add
push
mov
lock
mov
sbb
outs
inc
add
dec
inc
and
das
xor
es
sbb
xchg
dec
push
adc
add
mov
pop
or
dec
and
daa
and
adc
push
push
or
xchg
and
or
sub
mov
push
sbb
cmp
cs
and
pop
add
out
and
jnp
xor
xor
mov
jo
ss
mov
(bad)
jg
adc
or
adc
sub
adc
jo
adc
inc
sbb
add
and
sbb
or
inc
adc
popa
cs
or
xor
push
test
add
test
push
add
inc
lahf
xor
xchg
punpcklwd
push
dec
or
or
or
(bad)
(bad)
dec
adc
das
adc
push
sbb
inc
sbb
adc
inc
sbb
pop
adc
je
and
add
fadd
sub
xor
push
inc
cmp
rcr
add
aas
arpl
push
in
xor
jg
mov
adc
adc
add
lock
mov
inc
adc
dec
sub
sahf
pop
push
mov
xor
mov
add
sbb
das
push
adc
mov
jg
sahf
dec
dec
push
mov
xor
xchg
xchg
lock
or
inc
push
or
test
push
(bad)
xor
inc
test
pop
cdq
(bad)
call
sbb
aas
out
mov
adc
aaa
sbb
inc
fidivr
ror
jb
add
cdq
adc
xor
and
xchg
jle
adc
xor
cld
sub
adc
jg
dec
and
imul
and
(bad)
pop
dec
sar
xor
xchg
cmp
dec
cmp
dec
ins
adc
(bad)
mov
pop
adc
daa
aas
jnp
add
or
or
sar
jno
sbb
lock
add
pop
aaa
push
cmp
or
enter
xchg
adc
cwde
clc
(bad)
fistp
popa
dec
push
mov
add
cmp
push
sub
push
sub
adc
fs
lds
jp
and
sbb
pop
pop
pop
add
test
out
cli
aaa
cld
xor
xchg
adc
mov
or
adc
push
ds
dec
sbb
jg
and
and
bound
push
sub
pop
push
(bad)
sbb
js
sub
inc
adc
jl
outs
pop
xor
or
adc
jecxz
inc
pop
mov
fiadd
sbb
cmp
dec
cld
mov
or
push
cmp
pop
(bad)
test
mov
push
je
jbe
pop
sbb
inc
adc
imul
outs
and
or
or
imul
ss
test
pop
push
cmp
jg
pop
retf
sub
push
dec
dec
dec
pop
dec
dec
pop
add
adc
(bad)
fst
xor
push
or
push
(bad)
adc
outs
adc
inc
(bad)
xor
mov
adc
ss
sub
ds
push
cld
pop
mov
sub
sbb
and
push
jge
dec
(bad)
(bad)
cmp
add
mov
pop
lock
add
ret
(bad)
push
add
test
sub
sub
push
and
xor
pop
shl
es
add
push
or
push
pop
(bad)
ffreep
nop
aas
dec
push
cmp
push
adc
daa
or
or
xor
or
adc
invd
adc
cli
popa
inc
cmps
or
lods
and
mov
adc
lock
add
in
sub
(bad)
jg
pop
dec
or
or
xor
add
pop
sbb
and
and
cmp
add
or
sbb
adc
xor
and
mov
jmp
pop
push
into
mov
ret
lock
lock
add
popf
add
push
cs
add
daa
push
mov
cli
ja
enter
add
or
jae
idiv
pop
xor
and
sbb
push
lock
add
jmp
add
fbstp
lock
sbb
xchg
pop
push
or
sbb
push
sbb
(bad)
fcomip
jg
push
xor
sub
or
push
sbb
xor
pop
adc
sbb
std
xchg
cld
dec
pop
or
or
adc
mov
and
push
into
pop
cld
call
sub
scas
ds
adc
and
push
xchg
popf
dec
cdq
cmp
or
call
popa
lds
xchg
adc
dec
push
sub
sbb
sbb
imul
add
adc
push
push
lock
push
mov
enter
add
call
shl
push
and
mov
jecxz
jbe
xchg
pusha
adc
mov
pop
and
sbb
sbb
sbb
and
dec
(bad)
daa
add
cmp
pop
inc
adc
sbb
in
rcr
dec
or
sub
outs
shl
pop
push
ja
mov
(bad)
fisttp
and
lock
sub
mov
cmp
add
add
push
adc
stos
sbb
cmp
or
adc
jmp
pusha
lock
lds
or
adc
cmp
push
jb
cld
dec
or
imul
push
push
les
and
sub
lock
mov
and
(bad)
unpckhps
dec
adc
les
adc
jbe
push
outs
inc
inc
popa
or
push
pop
mov
call
fidivr
dec
or
and
das
dec
adc
cmp
or
sbb
fs
dec
push
loope
popf
mov
dec
sbb
dec
inc
daa
adc
mov
adc
sbb
xchg
lock
cwde
je
clc
(bad)
mov
dec
mov
adc
dec
test
or
nop
xchg
fs
ret
push
and
adc
jmp
in
or
add
or
adc
pop
mov
cmps
cli
mov
leave
pop
es
fisub
or
sbb
cmp
add
dec
or
push
ror
adc
bound
sbb
push
add
sub
push
adc
(bad)
daa
das
and
push
push
aas
add
push
or
imul
xchg
jae
sbb
test
or
adc
loopne
or
pop
cmp
adc
xor
or
or
or
mov
pavgw
dec
ss
ds
adc
push
std
jmp
cli
xchg
and
and
dec
xchg
xor
or
adc
xor
jno
push
adc
and
and
push
inc
aam
mov
add
jg
add
loop
sbb
nop
sbb
push
sbb
push
sub
sub
mov
and
or
adc
push
movlps
push
adc
fxam
or
add
adc
jg
mov
das
pop
pop
xor
push
adc
bound
add
adc
aas
mov
sbb
mov
cmp
cmp
mov
aad
retf
sbb
xchg
mov
inc
lahf
js
xor
xor
dec
pop
pop
mov
inc
add
call
and
xor
or
das
inc
or
mov
xchg
and
sub
sub
sbb
dec
and
rcl
sub
daa
xor
push
jae
pop
pusha
lahf
in
adc
push
sbb
push
inc
lock
xor
xor
test
lahf
xor
xor
(bad)
mov
daa
push
pop
push
xor
out
and
cmp
or
sbb
adc
mov
sbb
push
jp
adc
adc
jns
and
sar
push
cmp
adc
pop
jo
stc
sub
add
aam
ins
sub
sbb
mov
mov
xor
mov
inc
push
or
mov
adc
mov
and
shr
adc
mov
xchg
fadd
xor
add
pop
adc
add
and
jae
mov
dec
push
inc
sub
mov
add
sbb
or
stos
loopne
add
and
sbb
mov
es
ja
mov
jl
push
push
lods
pusha
add
sub
loopne
(bad)
call
or
or
mov
out
pop
inc
inc
addr16
xor
mov
scas
and
push
mov
daa
lods
and
lock
add
lock
push
xchg
loope
sbb
add
mov
pop
push
aam
and
in
sbb
fcom
xor
mov
pop
cmp
or
push
pop
add
mov
sub
push
popa
pop
aaa
out
dec
cmp
aaa
sbb
outs
xor
adc
sbb
and
push
push
cmp
icebp
jg
cmp
pushf
and
pusha
or
ins
pop
pop
pop
push
adc
cmp
bound
ss
adc
or
dec
mov
mov
jmp
pop
push
dec
sbb
lock
cmp
lock
adc
cld
call
arpl
ror
or
adc
adc
std
mov
add
sbb
adc
sub
pop
outs
clc
out
cli
add
sub
jae
js
or
sub
hlt
loope
add
add
or
scas
or
add
ror
pop
or
sbb
jbe
push
add
sub
add
cmp
pop
adc
es
daa
clc
pop
sbb
or
sbb
sub
mov
cmc
add
lock
scas
cmp
push
push
and
fnsave
and
inc
in
ins
fadd
or
cwde
jl
out
push
xchg
loopne
dec
cmp
stos
add
fiadd
lock
sti
call
dec
xchg
mov
pop
shl
outs
adc
lock
sub
jl
and
push
or
aaa
adc
addr16
mov
adc
nop
sbb
push
daa
sbb
fiadd
in
mov
or
or
adc
sub
adc
push
push
sub
jmp
loopne
inc
push
loopne
adc
push
adc
sbb
or
push
or
(bad)
mov
mov
or
cmp
or
dec
push
and
das
popw
cwde
lods
std
fimul
or
push
pop
aaa
sbb
and
(bad)
call
and
and
jns
sbb
test
aas
cmp
xchg
jmp
jnp
lock
or
adc
or
push
xor
inc
mov
push
outs
or
and
adc
adc
rcr
adc
or
push
adc
or
jg
inc
or
push
sub
sbb
jp
or
or
push
lds
or
sbb
adc
or
fild
in
add
add
or
add
mov
or
or
call
dec
mov
sbb
daa
or
sbb
dec
or
or
push
add
xor
mov
or
sbb
(bad)
or
and
mov
and
sbb
add
inc
sbb
pusha
push
add
cmp
gs
add
(bad)
dec
cmp
rol
or
sub
sub
dec
dec
mov
adc
xor
(bad)
fild
es
in
test
and
pop
sbb
push
push
jg
mov
jb
inc
inc
push
push
jno
aaa
or
mov
pop
cmp
lock
pop
mov
sbb
dec
add
lock
pop
pop
dec
das
and
das
(bad)
pop
(bad)
lock
add
pusha
add
or
lock
ss
punpckhbw
lods
xchg
mov
jge
sbb
adc
inc
and
push
lds
cmp
adc
pop
outs
or
sbb
mov
aaa
xor
ins
pop
jne
adc
sbb
pop
sbb
rcl
daa
sub
(bad)
cmps
add
cmp
xchg
push
xor
pusha
outs
outs
xchg
jle
or
adc
push
inc
add
bound
adc
scas
sbb
or
gs
sbb
hlt
pop
mov
push
adc
adc
out
mov
or
push
mov
sbb
pop
sbb
(bad)
(bad)
fcomp
fadd
xor
cmps
add
and
leave
ins
mov
adc
xchg
retf
push
push
and
gs
and
or
pcmpeqb
and
xchg
cmp
mov
mov
stos
arpl
sbb
cmps
(bad)
lock
sub
aad
sub
adc
adc
das
(bad)
jmp
inc
push
pop
push
gs
xor
pop
lock
loopne
xor
inc
pop
popf
xor
jns
sub
adc
je
pop
loopne
lock
js
sbb
(bad)
fstp
arpl
cmps
lock
mov
or
and
(bad)
inc
push
retf
add
and
adc
add
mov
mov
jmp
mov
jle
mov
ret
loopne
imul
jmp
imul
push
pop
adc
and
or
call
test
mov
push
sbb
add
syscall
sahf
inc
sbb
adc
inc
(bad)
aad
pop
push
adc
cmp
or
and
fisttp
lock
dec
fsubp
fcmove
adc
or
lods
mov
add
adc
aas
pop
and
and
xchg
aas
mov
inc
inc
or
push
adc
pshufw
les
cdq
jne
mov
sbb
ds
into
sub
gs
(bad)
mov
mov
push
icebp
add
xor
retf
push
add
test
(bad)
push
outs
dec
sbb
pop
or
adc
outs
push
mov
cdq
push
mov
sbb
add
or
push
xor
bound
fwait
push
loopne
not
lock
aad
sbb
adc
loop
and
sub
mov
xor
scas
clc
add
sub
or
sub
add
fs
xchg
sub
outs
js
add
lock
jns
jl
pop
gs
clc
pop
sub
xor
or
inc
pusha
jne
add
push
sub
adc
mov
or
loopne
dec
cli
cmp
arpl
js
adc
sbb
jbe
xchg
add
cmp
push
pop
sbb
cmps
push
and
xor
ins
or
pop
push
cld
xor
sbb
and
or
mov
jne
test
sbb
or
sbb
push
test
xchg
dec
inc
ins
or
pop
mov
das
dec
dec
mov
cmp
daa
or
pop
and
sbb
adc
inc
push
adc
jle
xchg
movs
sbb
xor
push
adc
sbb
cld
jmp
rol
pop
pop
push
lock
jecxz
pop
popa
jo
fild
inc
mov
loope
stos
and
and
fisub
adc
cmp
sbb
or
xor
dec
sub
cs
cs
xor
xor
out
jmp
pop
cmp
test
shr
sub
inc
xor
call
xor
sbb
and
adc
and
bound
in
jne
nop
push
sub
cmps
cmp
or
xchg
add
into
add
or
icebp
sub
xor
xor
in
outs
xlat
lods
add
lock
add
fwait
or
add
loopne
outs
sbb
sbb
(bad)
mov
movs
xor
adc
sbb
and
aaa
(bad)
fadd
fisttp
test
and
dec
pop
ret
and
(bad)
push
fdivr
or
mov
adc
xor
inc
dec
inc
ss
xor
(bad)
jbe
outs
cmp
dec
sub
and
dec
ja
cmp
adc
cmp
sbb
adc
inc
sub
shr
jnp
jo
jb
ret
pop
pop
jbe
mov
mov
adc
dec
aam
adc
pop
jae
mov
or
xchg
add
inc
adc
dec
dec
sub
cmp
push
push
cwde
jmp
mov
and
(bad)
sbb
lods
arpl
inc
stos
and
push
sahf
and
xor
pusha
outs
push
fxch
push
push
pop
sub
sbb
push
and
inc
enter
fcomp
rol
and
sbb
xor
sub
and
inc
xor
sbb
and
sub
adc
imul
push
and
xor
push
cmp
std
pop
fcomp
xchg
and
loopne
sub
xor
out
mov
(bad)
or
push
or
push
add
imul
xchg
adc
mov
adc
cmp
sbb
or
dec
inc
push
popa
lds
or
inc
mov
adc
or
mov
out
(bad)
or
sahf
add
add
sbb
sbb
mov
mov
push
mov
cmp
cdq
push
adc
or
add
aas
rol
or
add
or
cmps
mov
add
inc
dec
adc
xchg
aas
push
enter
js
add
sbb
adc
mov
int
or
aam
jbe
(bad)
add
mov
add
add
sub
add
ins
add
mov
pop
les
in
or
adc
jge
add
cmc
push
jns
adc
add
cld
add
shl
cmp
add
jle
adc
adc
adc
fstp
add
or
add
mov
enter
push
bound
add
add
or
leave
push
sub
cmp
in
sbb
adc
aam
xlat
popa
imul
xchg
and
add
popa
adc
lods
mov
outs
jl
lea
mov
cmp
cmp
aad
pop
fwait
dec
test
imul
mov
aad
or
xchg
adc
adc
or
pop
sbb
jnp
and
adc
stc
inc
es
xchg
mov
sbb
sti
mov
sub
lock
pop
push
sub
or
je
or
mov
inc
test
and
ret
xor
push
lds
daa
mov
sub
inc
and
xlat
adc
inc
inc
and
or
push
or
call
ror
pop
adc
or
lock
mov
test
mov
pushf
(bad)
xchg
or
jnp
mov
jp
pop
or
nop
mov
ins
push
sbb
fistp
imul
aad
xchg
or
inc
sub
jecxz
inc
mov
mov
or
imul
push
adc
mov
mov
and
and
mov
cmp
mov
aad
inc
popa
or
pop
sbb
adc
ror
adc
das
push
or
ins
sbb
fld
aaa
inc
pop
mov
imul
mov
sub
pop
mov
pop
push
mov
xchg
pop
stos
ficom
adc
scas
adc
mov
lods
cmp
pop
lds
push
sub
and
shr
mov
and
sub
ins
ror
jecxz
jne
sub
clc
outs
rcl
push
lock
or
or
stos
push
mov
add
adc
and
shr
les
or
sub
sbb
or
pop
popf
jae
mov
jns
in
xchg
adc
popa
dec
add
sub
outs
or
or
or
dec
jo
popw
sbb
nop
adc
inc
fwait
sti
int3
outs
jo
and
mov
popa
add
pusha
shl
dec
mov
in
sbb
or
and
push
or
mov
pop
mov
xor
adc
sub
sbb
adc
push
jl
ror
fsubr
pop
mov
jge
add
sub
leave
adc
push
cmp
sub
outs
xchg
arpl
push
movs
and
sub
mov
(bad)
xchg
pop
and
in
pop
add
sbb
cs
rol
(bad)
popf
push
xchg
sub
xor
test
adc
xchg
adc
fst
xchg
stos
adc
ret
shl
dec
ins
fisttp
lods
lods
imul
retf
push
mov
stos
out
stos
mov
stos
sub
xor
and
call
mov
sub
sti
pop
scas
ins
pop
add
cmp
jnp
mov
inc
rcl
xor
add
(bad)
xchg
xlat
and
xchg
test
pop
sbb
sbb
add
(bad)
sub
inc
and
push
iret
dec
dec
je
mov
scas
mov
sub
das
sub
jnp
mov
xor
frstor
push
adc
push
repz
mov
adc
or
jmp
add
jmp
sbb
outs
in
fisub
movs
jecxz
add
ins
sbb
jnp
retf
cs
add
adc
inc
mov
sbb
sbb
or
sbb
xchg
aaa
push
xor
mov
pop
mov
xor
outs
or
(bad)
pop
fnstcw
jno
mov
sub
imul
movs
mov
lea
xchg
push
or
sbb
cmp
or
cmp
cmp
cdq
cmp
aas
inc
sbb
mov
loope
mov
jmp
add
mov
mov
mov
adc
adc
retf
pop
xchg
mov
stos
imul
mov
lds
inc
add
jmp
adc
retf
fidiv
ret
pop
adc
aas
sub
pop
adc
sub
adc
add
or
pop
call
inc
fnstenv
jae
sbb
in
pop
xchg
fs
nop
adc
sub
xor
test
jge
and
stos
adc
inc
dec
add
cmp
sub
or
dec
inc
pop
hlt
fidivr
sbb
movs
dec
mov
xchg
retf
cmps
jecxz
dec
jae
or
jl
test
icebp
pop
add
popf
sbb
inc
(bad)
ror
and
jae
adc
sbb
mov
jno
loop
mov
sbb
sbb
fdiv
addr16
adc
pop
mov
xchg
inc
mov
push
push
xor
cmp
adc
rcl
or
inc
(bad)
pop
jle
cmp
jnp
inc
in
add
clc
add
and
out
fidiv
sub
sbb
cmp
xchg
pop
and
or
mov
add
fild
imul
mov
sti
mul
sbb
sbb
cmp
sbb
push
and
jnp
sbb
and
dec
loopne
div
sbb
xor
and
outs
dec
or
adc
jo
in
(bad)
test
dec
test
and
push
xor
push
adc
mov
and
lea
and
adc
pushf
adc
add
push
lea
inc
movs
cmp
inc
sub
mov
sub
and
add
and
push
sub
sub
loop
or
and
inc
add
stos
sub
pushf
cmp
and
mov
jbe
add
push
push
adc
jle
outs
and
cwde
push
sbb
xor
and
cmp
jo
push
dec
pop
mov
inc
and
or
or
lock
lea
add
sub
push
les
lock
sub
fild
add
or
add
add
loop
or
aas
fs
mov
add
(bad)
mov
add
or
or
mov
push
sti
inc
jmp
jle
daa
ret
xor
fiadd
add
add
rcr
add
retf
adc
prefetch
dec
xchg
into
sub
mov
or
adc
add
(bad)
sub
nop
or
outs
or
inc
sub
pop
add
mov
and
xor
fadd
and
cs
adc
(bad)
sbb
neg
xchg
mov
cmp
cs
add
jl
rcr
scas
or
cs
jb
inc
jnp
sbb
out
dec
call
ins
xor
(bad)
xchg
cmp
fidiv
or
scas
fdiv
into
test
jle
jl
call
and
add
add
add
dec
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
dec
add
add
