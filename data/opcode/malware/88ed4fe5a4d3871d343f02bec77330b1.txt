xchg
add
mov
mov
add
mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
mov
mov
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
mov
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmp
jne
mov
mov
test
jle
cmp
gs
xor
cs
ins
add
jb
jne
ins
inc
ins
ins
outs
arpl
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
movzx
sub
je
inc
cmp
mov
jbe
call
mov
mov
movzx
jmp
movzx
sub
je
call
inc
call
mov
mov
movzx
sub
jne
push
push
call
push
push
push
mov
push
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
push
mov
push
call
push
call
push
pop
pop
pop
pop
ret
push
mov
sub
mov
mov
mov
mov
push
lea
push
push
call
add
leave
ret
mov
mov
or
pop
xchg
mov
add
push
retf
mov
mov
or
jp
push
pop
ror
and
jo
popa
cmp
inc
retf
mov
adc
arpl
jb
inc
rcl
add
jo
adc
cmp
inc
nop
outs
jmp
mov
les
clc
xor
and
sahf
pop
fdivr
adc
(bad)
mov
addr16
imul
div
icebp
loopne
sub
sub
mov
lods
inc
out
mov
mov
jg
mov
dec
(bad)
cli
inc
leave
outs
movs
sub
push
cs
cmps
mov
xor
(bad)
jmp
mov
xchg
push
sbb
stos
mov
shl
jp
jne
test
retf
mov
adc
pop
rcl
aaa
sub
and
inc
xor
stos
sbb
fild
mov
(bad)
ja
gs
xchg
test
inc
fidiv
mov
adc
jp
push
inc
rcl
and
jo
pusha
std
push
fiadd
aad
ret
sub
sbb
or
ss
daa
inc
rol
arpl
inc
in
xchg
and
mov
repz
setne
stos
pop
xchg
test
inc
ret
inc
retf
ins
out
add
xchg
sub
(bad)
jnp
jg
push
loopne
rcr
dec
xor
add
push
fiadd
mov
mov
or
jp
push
pop
ror
and
jo
pusha
jmp
shr
inc
loope
into
push
jne
sbb
adc
pop
inc
jg
shr
fisub
inc
jne
mov
fisttp
push
test
add
or
(bad)
cmp
retf
cs
dec
bound
cmps
adc
cmp
dec
dec
movs
les
pop
add
cmps
call
push
and
jns
cmps
call
(bad)
adc
cs
test
data16
fistp
mov
jmp
outs
xchg
outs
and
stos
adc
daa
jg
sbb
inc
mov
mov
pop
push
or
pop
icebp
adc
iret
mov
add
daa
jne
mov
cmp
adc
add
xor
mov
inc
sbb
pop
fs
dec
movs
(bad)
sbb
cmp
inc
aas
jmp
xor
dec
push
sbb
xchg
(bad)
xchg
aas
inc
jmp
xchg
push
and
stos
ror
aam
pop
repz
scas
or
scas
mov
out
mov
pop
mov
pusha
(bad)
in
xor
mov
(bad)
enter
dec
cmp
rol
repnz
call
or
es
pop
scas
call
out
call
fldenv
pop
sub
push
mov
call
ret
mov
sub
daa
out
mov
and
fld
icebp
ret
data16
inc
mov
stc
jns
push
dec
stc
cmp
cmp
xor
pop
imul
iret
test
lods
adc
dec
and
call
xlat
mov
in
xor
push
sbb
not
add
addr16
jge
add
ja
(bad)
pusha
cmps
push
mov
or
inc
fdiv
test
js
mov
add
in
jb
daa
push
das
cld
jg
out
add
mov
adc
or
add
mov
jmp
jmp
pop
scas
mov
jbe
stos
test
mov
inc
retf
inc
out
push
xchg
xchg
retf
sub
push
push
into
lds
dec
clc
or
xor
pop
(bad)
lahf
push
ss
add
jns
bswap
and
inc
adc
push
mov
mov
aad
xchg
out
nop
shr
sbb
je
mov
outs
adc
cmps
pushf
les
add
vpcmpeqd
test
push
mov
mov
or
loope
pushaw
int
jl
int
leave
xchg
xchg
out
and
in
and
fwait
inc
cmp
ds
lods
sub
xor
retf
pop
inc
mov
pop
iret
aaa
sbb
jno
enter
dec
jmp
jae
xor
call
add
out
jne
addr16
(bad)
xchg
xchg
es
pop
pop
mov
movs
mov
mov
xchg
cli
add
sub
jl
xchg
shr
cmp
pop
bound
and
pop
sahf
xchg
dec
popf
inc
push
(bad)
cmps
mov
bnd
inc
adc
sbb
push
inc
hlt
xchg
dec
xor
mov
xor
xchg
or
aad
fidiv
pusha
cli
call
push
aad
or
push
int3
push
arpl
(bad)
out
les
iret
fst
or
test
adc
in
adc
jecxz
push
sbb
pushf
(bad)
mov
repz
jp
and
in
mov
xor
mov
add
ret
repz
ds
inc
cwde
push
inc
fst
add
in
out
not
and
cld
adc
dec
sub
push
or
inc
or
xor
mov
xchg
or
or
dec
adc
jle
(bad)
shl
repz
add
dec
add
mov
xor
(bad)
clc
pop
inc
in
(bad)
in
jle
fidivr
ficomp
dec
call
add
xlat
enter
or
es
shr
lods
add
daa
mov
mov
cld
dec
das
ror
mov
aam
out
push
(bad)
jmp
mov
mov
retf
das
ss
sbb
pop
pop
mov
ror
push
cmp
cdq
gs
adc
and
hlt
(bad)
std
or
bound
test
fs
ja
push
out
mov
mov
int3
sbb
xchg
das
cmps
cmps
movs
bound
les
jl
push
rcl
aad
ret
aam
or
sbb
sbb
cmp
jecxz
(bad)
mov
adc
sub
jmp
fwait
sub
xlat
test
out
stos
jnp
cmp
push
je
iret
cmp
stos
mov
daa
in
fwait
(bad)
cmps
shl
daa
inc
mov
xchg
movs
push
mov
mov
scas
lds
mov
mov
cmps
ins
mov
xchg
push
sub
adc
stos
bound
mov
sbb
popf
jns
dec
adc
(bad)
cmp
inc
mov
push
inc
xor
adc
or
inc
aaa
into
test
xchg
rcl
in
loop
imul
retf
sar
jmp
in
xlat
(bad)
xlat
ror
fldenv
push
(bad)
pushf
pusha
pop
call
or
mov
cmps
(bad)
das
push
and
ror
repz
xlat
pop
aad
(bad)
mov
add
cld
xor
jge
dec
pop
dec
pop
test
xlat
ror
jl
mov
add
jns
in
mov
jnp
scas
cmps
jae
push
shr
mov
mov
fwait
inc
clc
jno
pop
xor
ins
mov
mov
test
xchg
and
neg
xchg
mov
jg
loopne
(bad)
sbb
rol
call
aas
push
cld
push
in
dec
cwde
mov
mov
mov
(bad)
mov
stos
cdq
or
gs
lea
adc
mov
sub
addr16
pop
mov
push
mov
js
xchg
cmp
pop
and
ds
stos
or
stos
nop
pop
lahf
repnz
in
lods
pop
inc
stos
test
dec
lahf
imul
mov
xor
jno
ins
push
or
xchg
mov
test
push
nop
add
les
xchg
dec
dec
shl
mov
shl
jbe
cmp
mov
daa
sti
or
leave
in
and
jno
fucomi
xchg
xchg
adc
sub
or
mov
adc
leave
(bad)
inc
xor
push
push
out
pop
out
mov
xor
mov
adc
mov
dec
pop
mov
leave
xor
add
inc
cmc
dec
scas
das
xchg
mov
pop
ss
push
sub
(bad)
adc
rcl
repnz
daa
mov
cld
mov
sbb
and
xchg
hlt
jo
jo
xchg
jno
xchg
loope
jo
push
icebp
aam
daa
push
fst
ja
jne
sbb
push
fnstcw
cmps
mov
leave
mov
addr16
retf
retf
mov
pop
xchg
push
adc
test
add
adc
movs
jmp
ins
loopne
xchg
das
nop
in
scas
in
iret
call
out
sahf
and
fdiv
cs
xor
and
cmp
ret
adc
jmp
push
xor
mov
xchg
xor
push
dec
mov
imul
mov
cmps
cmp
clc
cmp
ret
cdq
ret
in
pop
jg
adc
xchg
cmp
pusha
jae
(bad)
mov
or
cwde
test
xor
sub
scas
push
fst
adc
fisubr
(bad)
mov
or
loopne
sbb
in
add
push
stos
and
and
out
jb
and
ror
mov
push
imul
dec
mov
cmp
and
sub
out
fs
cmps
mov
leave
cmps
test
jge
test
push
sbb
push
or
sbb
pop
loope
cmp
and
bsf
jge
aas
inc
inc
cmp
lea
stos
push
mov
or
retf
xlat
test
cli
lahf
sbb
cdq
lock
pop
into
and
push
shl
call
mov
fdiv
or
test
int
sbb
enter
pusha
add
adc
or
outs
ret
stc
push
cmp
mov
and
mov
mov
lahf
xor
pop
rcl
mov
test
imul
xchg
loopne
(bad)
sar
(bad)
mov
je
(bad)
ds
pop
or
lahf
into
mov
mov
xor
stos
push
mov
sbb
dec
fwait
xchg
fcmovnb
push
imul
push
jno
outs
mov
pop
out
or
fnsave
adc
and
xchg
imul
lahf
dec
rcr
loope
and
pop
push
add
xchg
in
pop
lock
mov
or
cmc
int
ror
fsubr
sub
pushf
sbb
adc
ror
je
repz
imul
pop
xor
add
adc
mov
mov
(bad)
xor
jl
jle
mov
mov
push
aam
xchg
mov
je
mov
clc
and
jnp
and
cmp
std
jnp
xchg
clc
not
jno
das
xchg
mov
dec
push
sti
mov
ret
pop
sub
sub
push
daa
aad
outs
push
adc
(bad)
jno
cld
sub
add
jmp
pop
mov
clc
push
cli
sub
movs
fwait
(bad)
jne
outs
js
fistp
fs
or
call
out
mov
cs
inc
cmps
fs
pop
mov
xor
cmp
retf
pop
push
bound
sub
ds
sbb
dec
jnp
inc
cmp
pop
mov
pop
fiadd
imul
test
add
fidiv
jg
add
xor
pop
(bad)
push
sbb
inc
aam
dec
stos
jmp
repz
jp
(bad)
push
hlt
mov
enter
pusha
mov
push
imul
jmp
aad
hlt
cmp
jecxz
jbe
or
pop
jp
cmp
jmp
ins
cmps
(bad)
iret
in
push
dec
lods
sar
dec
pushf
js
adc
repnz
add
mov
fidiv
in
mov
jno
popf
int
dec
mov
mov
push
pusha
scas
jg
adc
mov
int3
call
add
call
push
leave
or
or
je
mov
xor
jp
out
mov
dec
xchg
add
mov
(bad)
cmp
scas
les
and
xor
inc
xchg
push
stos
(bad)
adc
xchg
inc
leave
jle
std
adc
in
cmp
mov
pop
add
test
repnz
mov
cmp
sti
test
fidiv
int3
test
and
mov
jl
xchg
xchg
xor
outs
inc
xchg
neg
and
push
add
movs
fxch
lods
test
retf
adc
xlat
jl
sub
mov
nop
sub
hlt
cs
je
aas
adc
jg
sub
inc
jae
jle
ja
test
fisttp
addr16
fistp
das
or
sub
out
mov
push
gs
push
addr16
inc
pop
xchg
imul
fcom
shl
es
dec
cmps
jns
jne
lea
scas
das
mov
aam
sbb
jmp
xor
lahf
adc
adc
mov
push
mov
shr
mov
pop
cmp
mov
jg
push
in
push
jne
fs
mov
leave
xchg
fistp
jbe
lock
leave
and
in
or
ret
jmp
fidivr
jmp
test
mov
lds
and
sahf
jl
push
(bad)
pusha
add
pusha
and
pop
mov
and
adc
in
(bad)
inc
fs
push
imul
pop
loope
les
or
jmp
int3
mov
hlt
inc
xchg
out
imul
addr16
or
(bad)
je
push
pop
xchg
dec
and
div
mov
cwde
stos
sbb
out
lods
outs
mov
xor
xor
test
aaa
mov
outs
cmps
stos
push
add
addr16
add
pop
or
or
mov
mov
sub
cwde
imul
out
sub
push
call
push
cmc
pop
cld
ror
add
jmp
add
lods
cdq
jb
retf
aam
push
dec
adc
sbb
pop
clc
jns
out
or
mov
call
pop
pusha
push
call
sub
or
jae
mov
aad
push
loopne
je
scas
(bad)
mov
xchg
mov
inc
pop
fiadd
mov
push
jae
xchg
mov
fiadd
ror
pop
leave
cmps
sahf
ins
sub
scas
inc
push
dec
loop
movs
loopne
mov
sbb
or
mov
addr16
fisubr
inc
push
iret
stos
scas
pop
jg
movs
xor
push
push
jno
cmp
sbb
and
ficomp
je
movs
rcl
push
push
xchg
jmp
dec
imul
jp
mov
cmp
xchg
cmps
xchg
(bad)
hlt
clc
test
ret
aad
(bad)
dec
push
pop
hlt
leave
mov
push
cmp
mov
lock
js
mov
std
or
call
mov
mov
popf
aas
arpl
in
fwait
(bad)
jmp
(bad)
call
jecxz
aam
ret
inc
popa
jbe
pop
aas
pop
test
cmps
outs
xor
pop
or
icebp
and
and
movs
outs
fld
pop
cmp
and
int
js
test
sbb
cmp
sahf
call
fstp
jle
jo
jle
(bad)
sti
dec
xor
pop
push
dec
jge
jae
cdq
(bad)
pop
jns
push
push
cld
ret
(bad)
or
test
xchg
pop
and
aaa
mov
in
shl
js
jl
ret
jp
inc
mov
and
sbb
stos
sbb
dec
pusha
dec
retf
xor
(bad)
pop
sahf
mov
loop
test
and
dec
sbb
xchg
adc
hlt
cmp
mov
loop
test
sub
int
sbb
arpl
nop
jo
lock
loope
or
sub
dec
repnz
ss
cmp
retf
inc
aad
aam
sbb
pusha
and
mov
ins
lods
(bad)
cmp
fcmove
stos
or
mov
jle
loop
mov
push
out
(bad)
and
test
fsub
fwait
ret
jmp
push
cmps
jle
int3
(bad)
sub
fisttp
push
sbb
stc
dec
(bad)
xchg
retf
test
pop
loopne
jae
pushf
sub
es
sbb
or
push
loop
in
adc
out
ins
fwait
aad
and
mov
adc
pop
xor
xchg
fiadd
daa
mov
sbb
cdq
xchg
cmp
add
push
rcr
dec
mov
inc
xor
sub
stc
addr16
mov
ss
cmp
test
adc
test
repnz
das
out
cmp
iret
lahf
cmp
arpl
xor
lods
fwait
cmp
clc
xchg
push
mov
mov
jnp
inc
push
in
mov
xchg
dec
jnp
cmp
cmp
popa
mov
popf
dec
xor
loopne
scas
pushf
mov
mov
mov
jbe
jb
sbb
jnp
stos
adc
retf
bound
jp
retf
jo
mov
in
adc
pusha
out
into
mov
test
ins
pop
and
jnp
jne
popa
stc
fistp
ss
cmc
push
pop
in
outs
cmp
jp
std
mov
xchg
adc
pand
push
push
mov
stos
(bad)
jmp
or
pop
push
xor
dec
and
pop
jl
push
xchg
js
jg
clc
ret
out
add
cmp
movs
xlat
test
jnp
dec
add
or
or
sbb
cmc
rcl
inc
jge
pop
jp
mov
add
jnp
mov
jmp
out
popa
(bad)
fnsave
mov
aaa
add
cmp
test
rcl
jl
jo
push
fs
sub
loopne
out
aaa
fwait
out
mov
fiadd
push
mov
sub
push
inc
inc
les
fs
popf
and
cmc
inc
inc
into
push
mov
xchg
cwde
jno
pop
pop
sub
and
ja
adc
adc
jne
int
imul
(bad)
jp
mov
or
fisttp
adc
mov
repz
imul
adc
xchg
inc
cmps
dec
cmp
adc
je
inc
inc
jnp
loop
sahf
mov
xchg
sbb
shl
in
pushf
cmp
loop
cs
sbb
ja
pop
or
not
cli
dec
lods
std
ret
mov
pop
mov
jecxz
push
call
mov
arpl
xchg
dec
mov
pop
dec
jmp
push
cs
sbb
pop
test
lea
ins
push
mov
adc
out
mov
cmps
push
imul
sbb
sub
push
mov
scas
add
and
pop
test
test
js
and
das
add
xor
mov
mov
mov
push
ret
fdivr
ins
pop
js
pop
pop
js
mov
xchg
jmp
inc
sub
push
outs
sbb
loope
arpl
(bad)
jl
ror
out
pusha
or
test
pushf
leave
jg
mov
mov
stos
popa
std
sbb
aaa
stc
in
or
pop
mov
cli
push
cli
in
mov
(bad)
stc
xor
sbb
inc
pop
scas
ret
pop
sbb
xchg
ret
cmp
mov
jnp
push
mov
mov
dec
cmc
mov
jmp
sub
(bad)
fst
je
sbb
jnp
xchg
outs
and
inc
and
ja
add
les
mov
ins
stos
dec
movs
and
and
and
inc
pop
mov
shl
mov
int3
sbb
test
inc
push
xchg
mov
das
int3
dec
jle
jecxz
lock
lock
inc
cmp
fs
stos
in
sbb
cmp
jno
pushf
addr16
call
(bad)
call
inc
ds
mov
or
popa
jmp
lods
sbb
jmp
fnclex
mov
int3
clc
push
enter
outs
(bad)
mov
in
push
jp
sub
mov
inc
jge
pop
xchg
push
mov
in
inc
pop
enter
adc
adc
call
imul
daa
in
fsubr
jbe
out
mov
push
int3
lahf
enter
add
sub
je
inc
test
jns
pop
mov
add
in
cwde
out
rcr
push
out
imul
sub
xor
addr16
add
dec
mov
dec
sti
jo
scas
inc
mov
in
shr
test
mov
or
jne
ins
clc
mov
xor
daa
push
add
(bad)
arpl
jae
push
dec
test
xor
test
sub
retf
addr16
dec
loope
hlt
faddp
jno
enter
or
repnz
sahf
pop
(bad)
fisttp
xlat
inc
jg
rcr
cs
xchg
lds
aam
hlt
add
sub
push
push
js
fcomp
enter
cdq
out
ins
pushf
mov
popf
jp
popf
mov
mov
cwde
lea
pop
pop
cmc
ret
cmc
dec
dec
sbb
pushf
and
push
xchg
(bad)
jns
adc
(bad)
cmp
out
test
call
xor
xchg
mov
xchg
push
(bad)
mov
ss
or
(bad)
sub
inc
pusha
lahf
xor
lods
xchg
ret
cmps
movs
and
sti
out
fimul
pushf
gs
in
mov
add
cli
in
pop
lods
sub
int3
leave
sub
adc
rcl
ret
cmp
arpl
(bad)
shr
push
pop
mov
or
data16
jmp
mov
sbb
mov
jno
mov
pop
aad
lock
in
sbb
sbb
jnp
outs
ins
aaa
retf
das
xchg
jge
adc
jg
(bad)
mov
push
scas
push
sub
in
pop
(bad)
in
or
xchg
ss
nop
imul
movs
jns
inc
sbb
mov
ss
lahf
in
jmp
cmc
cs
gs
mov
enter
xchg
call
xchg
(bad)
stc
inc
cmps
mov
(bad)
ins
pop
scas
jecxz
xor
pop
inc
add
int
ror
inc
sbb
dec
xor
es
jle
sub
or
sbb
mov
movs
jb
sub
out
pop
xchg
pushf
dec
fdivrp
ds
xchg
scas
push
dec
(bad)
jmp
inc
mul
and
loope
stos
popa
dec
sub
or
mov
cld
ror
push
scas
xor
xchg
mov
xchg
push
mov
xchg
pop
jnp
out
pop
lods
int3
clc
shl
cli
das
push
inc
and
rep
aad
out
xchg
pop
and
in
scas
shl
pop
mov
xchg
mov
cmc
or
jp
push
pop
ror
and
jo
pusha
jmp
mov
or
jp
push
pop
ror
and
jo
pusha
jmp
mov
or
jp
push
pop
ror
and
jo
pusha
jmp
mov
or
jp
push
pop
inc
dec
iret
mov
add
pop
jb
adc
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
call
push
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
add
test
jne
push
pop
jmp
push
push
push
push
push
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
push
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
and
adc
add
les
nop
outs
dec
pop
mov
mov
sahf
lock
loop
ror
fidiv
and
adc
add
jo
pusha
jle
dec
inc
mov
mov
(bad)
ror
rcr
cmp
or
sbb
imul
pop
test
cld
clc
push
mov
xchg
lods
pop
pop
dec
ja
data16
and
jnp
lds
retf
sbb
out
stos
loope
or
xor
outs
pusha
sti
aad
aad
xor
fwait
jle
mov
into
aas
(bad)
iret
fdiv
jecxz
inc
sbb
mov
pop
xor
sti
sbb
ror
xor
sbb
es
(bad)
int
jg
and
mov
movs
or
pmaxsw
add
rcr
pop
lods
outs
popf
pop
loopne
(bad)
out
neg
push
repnz
jno
call
shl
fsubr
call
outs
bound
dec
mov
ror
ror
ror
cmp
adc
add
outs
jo
push
dec
pop
pop
test
mov
dec
into
shl
push
je
add
push
pop
sbb
xlat
int3
mov
lock
test
pop
dec
inc
pop
jg
jo
sbb
pusha
xor
adc
repz
(bad)
nop
ffree
sti
lock
push
push
jbe
jl
jnp
inc
pusha
jle
dec
inc
pop
mov
mov
sahf
lock
loopne
ror
rcr
and
adc
add
jo
pusha
jle
dec
inc
pop
mov
mov
sahf
lock
loopne
ror
rcr
orps
sbb
je
bound
sahf
jne
jo
cmps
mov
mov
out
xlat
sbb
pop
outs
icebp
inc
aad
add
scas
out
js
push
xchg
jle
sbb
arpl
xor
test
add
jo
ja
dec
idiv
xor
or
mov
pop
xor
(bad)
jg
call
jl
dec
hlt
test
inc
test
add
xchg
repnz
sbb
test
jno
and
mov
out
adc
retf
cmp
add
mov
pop
or
pop
in
sub
ja
jecxz
cmps
jg
movs
aam
fnstcw
dec
rol
mov
mov
fdiv
pop
jp
push
mov
or
jg
jb
mov
xor
xchg
icebp
in
jle
dec
jnp
gs
inc
daa
popa
out
xchg
pusha
scas
and
add
icebp
pop
dec
mov
xchg
rcl
into
imul
test
sbb
sbb
mov
jecxz
xchg
bound
jb
mov
mov
in
sbb
cmc
aad
sub
fs
popf
movs
add
idiv
pop
mov
int3
popf
xlat
jnp
mov
adc
hlt
lods
xor
mov
bound
mov
ss
shl
das
dec
mov
movs
inc
dec
retf
push
xor
mov
leave
xor
in
imul
dec
clc
sbb
sbb
inc
cmps
aaa
fwait
xchg
adc
and
lahf
fst
movs
in
pop
mov
out
rcl
das
add
retf
push
and
out
mov
retf
inc
xchg
mov
xchg
sub
imul
icebp
fimul
call
inc
add
pop
iret
retf
inc
mov
in
mov
ds
lahf
mov
aam
test
(bad)
push
push
push
repz
push
stos
mov
clc
idiv
in
out
mov
inc
push
or
cmp
ins
xchg
push
fimul
pop
out
dec
test
arpl
adc
jae
cmp
or
jmp
mov
retf
jecxz
les
into
retf
imul
add
mov
(bad)
sbb
aaa
push
(bad)
loopne
out
mov
lods
mov
fisttp
fcom
cmps
xor
adc
lods
imul
jo
jg
sbb
arpl
mov
inc
adc
xor
jb
popa
sar
pop
bound
cdq
or
add
and
xor
adc
xchg
(bad)
jmp
cmp
rcl
jbe
inc
adc
adc
pop
ret
jne
rcr
jmp
pusha
test
xor
inc
mov
xchg
cmp
imul
adc
push
jae
enter
adc
mov
mov
sub
mov
push
test
mov
arpl
push
retf
jg
sub
ret
adc
sub
pop
add
push
jmp
dec
fwait
jmp
adc
pop
lock
xchg
js
inc
pop
in
sub
(bad)
push
and
dec
pop
adc
dec
out
sub
add
inc
mov
xor
int3
int
addr16
push
scas
or
movs
jae
and
cmc
stc
js
push
mov
jb
fcmovbe
pushf
je
and
clc
jle
adc
mov
dec
push
jbe
fbstp
or
dec
mov
outs
mov
loopne
ret
and
cmps
sub
xchg
or
push
aaa
mov
and
xchg
sbb
sub
dec
out
cdq
pop
popa
cli
les
mov
icebp
or
adc
cmp
shr
push
jecxz
popa
in
fnstcw
(bad)
mov
push
pop
dec
add
push
mov
(bad)
add
xlat
inc
fdivr
xlat
jmp
xlat
pop
pop
movs
mov
or
dec
sub
xchg
push
xchg
xchg
into
retf
adc
adc
inc
mov
fistp
and
or
pop
push
mov
mov
imul
je
push
dec
js
movs
idiv
movs
shl
outs
push
sub
es
or
aad
jb
pop
imul
push
mov
sub
add
add
test
cmp
aas
jl
adc
sahf
icebp
xor
mov
mov
jnp
cmps
xchg
int
add
cmp
aam
and
sub
outs
mov
sbb
cld
inc
mov
cs
fldenv
into
call
mov
lea
lods
inc
(bad)
xor
(bad)
jb
leave
in
loope
jno
sub
shl
vrsqrt14pd
sbb
mov
gs
bound
mov
xchg
or
outs
sahf
aaa
rcr
or
pop
mov
push
push
shl
cmp
(bad)
mov
in
dec
pop
xchg
cmc
dec
test
aaa
cmp
mov
sbb
xchg
fs
add
imul
xor
inc
mov
jge
add
sbb
daa
xchg
popa
add
pop
xor
push
add
ret
fs
test
jno
jbe
pop
gs
add
leave
sbb
lahf
add
sub
ret
into
push
imul
push
sub
sbb
jge
mov
ins
lods
in
aam
jmp
sbb
pop
mov
jno
rep
retf
aad
js
mov
cwde
push
mov
push
mov
and
cwde
or
add
in
lods
jp
(bad)
mov
adc
loopne
pushf
in
in
cmps
lea
outs
sbb
mov
pop
xor
add
out
push
and
retf
mov
and
push
retf
xchg
ret
mov
(bad)
jmp
imul
es
stos
(bad)
adc
or
imul
in
push
fwait
shl
xchg
cmp
mov
ror
cli
or
test
mov
push
stc
mov
fldcw
and
sbb
stos
cld
cmp
retf
adc
retf
add
pop
aaa
mov
stc
and
adc
mov
or
sbb
inc
int3
mov
pop
sub
das
(bad)
adc
lea
cwde
sti
inc
fld
cmc
dec
(bad)
out
xchg
lock
(bad)
mov
neg
imul
in
mov
cmp
fs
push
inc
sub
addr16
push
xchg
push
movs
lods
out
push
or
test
rcl
fucomi
mov
fild
cmp
push
ja
inc
dec
xchg
(bad)
and
loop
das
daa
popa
hlt
cdq
mov
es
sub
jo
inc
shl
enter
sub
or
sti
xchg
and
das
rcr
dec
sbb
mov
cmp
push
pushf
dec
sub
xchg
mov
nop
inc
push
sbb
or
dec
pop
jge
loop
call
push
scas
pop
add
jo
xor
aam
mov
lods
pusha
movs
push
js
mov
cmp
push
mov
push
in
movs
stos
fistp
inc
pop
cs
add
test
mov
or
fimul
int3
xor
push
ja
mov
hlt
repz
inc
sub
pop
call
dec
adc
inc
(bad)
mov
pop
xchg
or
and
jo
das
xchg
push
icebp
lods
les
mov
loopne
xor
aaa
and
push
cmp
test
jmp
neg
sub
xor
mov
fwait
cs
out
(bad)
and
xchg
fs
cmps
sub
xor
dec
or
mov
mov
loop
and
xchg
adc
push
pop
call
add
imul
retf
(bad)
call
dec
mov
push
shr
sub
fadd
jl
mov
ret
push
ret
pop
popa
movntps
fcomp
js
sub
jecxz
cs
fbld
mul
inc
xchg
pusha
push
loopne
or
sbb
inc
fs
fbld
adc
or
int3
pop
test
(bad)
dec
ret
sub
aam
xor
push
call
cld
scas
(bad)
gs
jl
(bad)
pop
xor
sbb
add
dec
jns
inc
fnstsw
inc
aaa
fcmovu
fwait
repz
mov
mov
cmp
xchg
jmp
imul
mov
repnz
add
xor
push
pop
into
into
add
bswap
cmps
in
push
outs
lds
out
xor
js
jo
cmc
inc
add
retf
adc
arpl
sahf
inc
cmp
sbb
cmp
sbb
push
mov
push
rcl
push
test
jmp
clc
add
fadd
addr16
in
inc
or
arpl
leave
inc
pop
adc
or
imul
and
pusha
(bad)
dec
fsubp
dec
mov
lds
xor
xlat
xchg
inc
push
outs
rol
push
jns
iret
ja
add
and
or
xchg
add
jbe
sub
or
pop
push
in
enter
mov
pslld
push
add
js
sub
ror
mov
inc
sub
enter
jge
fcmovu
std
jae
sub
xchg
daa
repnz
inc
clc
sub
pop
or
stos
add
nop
jnp
cli
jo
cmp
mov
pop
mov
lds
ss
mov
lods
stos
lock
push
stos
dec
mov
fcmovb
call
fistp
sbb
mov
xlat
lahf
inc
icebp
dec
rcr
and
sub
or
inc
xchg
shr
cmp
test
mov
iret
addr16
ficomp
ss
sbb
dec
sub
ins
xor
inc
outs
adc
xor
push
adc
push
dec
jecxz
pop
sahf
add
xchg
sub
inc
cs
adc
pop
cmps
fsubr
sbb
sub
cmp
adc
dec
fmul
call
aam
jno
scas
call
add
test
stc
mov
shl
and
fs
mov
cmc
push
inc
ret
and
sbb
and
shr
xlat
nop
(bad)
fs
or
push
pop
int3
test
leave
retf
xchg
and
stc
mov
pop
imul
outs
mov
jo
jmp
mov
not
repnz
jbe
pop
and
xor
mov
ror
push
cmp
stos
outs
jge
push
movs
sub
outs
push
fwait
loopne
scas
add
add
(bad)
push
lods
sbb
jge
xor
pop
popf
ja
add
adc
jle
adc
adc
cmc
lds
dec
test
sub
lahf
mov
imul
imul
ret
add
xchg
lock
adc
lods
and
ror
inc
jmp
mov
out
out
adc
ret
ret
mov
stos
jle
clc
add
xor
test
mov
inc
out
cmc
ror
(bad)
jne
loopne
inc
mov
xchg
jg
pop
xchg
inc
add
inc
cmp
adc
test
hlt
cmps
jne
or
addr16
mov
hlt
jbe
xchg
ror
mov
test
jo
sbb
mov
ret
test
mov
popa
and
fmul
cdq
cmp
mov
add
mov
inc
(bad)
xchg
mov
fst
xchg
scas
pusha
mov
cld
and
mov
rol
fsubr
mov
aad
out
adc
sahf
cmp
push
retf
cld
push
ja
or
mov
cmp
mov
push
pop
dec
mov
mov
sbb
mov
inc
jmp
pop
and
mov
push
bound
daa
push
stc
and
arpl
arpl
fld
add
and
adc
xor
sbb
enter
clc
sahf
fld
xchg
lea
and
pop
ss
mov
fisub
push
or
jl
push
cmps
cli
mov
sub
inc
mov
mov
sub
jns
mov
out
fdivr
in
arpl
test
popf
jecxz
ficomp
imul
out
fst
inc
adc
push
rcr
not
jbe
fcmovnb
jae
push
xor
aad
rol
add
pop
jmp
xchg
or
mov
mov
ret
mov
mov
pop
lock
call
mov
sbb
jnp
pop
push
jge
loop
ror
sbb
movs
leave
lds
aas
xlat
fidivr
adc
dec
xor
or
cwde
lods
in
adc
repz
inc
jns
and
jmp
and
in
sbb
je
jmp
cli
pop
sub
adc
xchg
dec
pop
xchg
push
add
pop
adc
and
cmc
push
ins
jmp
sbb
shl
and
xchg
sub
pop
(bad)
stos
inc
loopne
aas
mov
add
pop
xor
push
sar
sbb
cmp
aas
and
pop
lds
and
loop
aas
sub
mov
movs
cmp
ret
pop
xor
add
inc
sbb
sub
call
jbe
xlat
loopne
and
inc
ret
ss
test
loope
xor
aad
inc
push
(bad)
mov
stos
pop
jns
jbe
fmul
inc
ficomp
scas
rcl
pop
jmp
xchg
scas
mov
inc
jno
mov
sub
lods
push
je
mov
jne
jbe
mov
xor
enter
mov
shl
pop
adc
addr16
rcl
(bad)
fsub
repnz
loopne
sub
pop
mov
mov
jmp
jae
jo
call
mov
jge
push
sti
fisttp
dec
sub
cld
not
gs
dec
sahf
cmps
into
stos
bound
and
ins
inc
push
or
aas
call
(bad)
jmp
dec
arpl
pop
xchg
loope
fs
in
(bad)
sub
xor
lods
fild
add
imul
out
cmp
cmp
jne
lds
enter
dec
or
es
xchg
jmp
pop
retf
jnp
mov
cmp
fisttp
inc
sub
jge
xchg
outs
arpl
cs
bound
aam
push
int
in
sbb
jmp
mov
mov
push
rol
addr16
call
int
jo
shl
movs
icebp
and
jae
call
lahf
imul
push
int3
mov
sub
jae
adc
stos
push
in
rcr
push
cmp
xor
adc
ret
xor
movs
loop
sbb
aaa
xchg
icebp
push
jmp
and
lea
retf
inc
test
ret
loop
xchg
repnz
sub
sub
(bad)
scas
adc
push
dec
cs
daa
dec
dec
adc
jb
call
xchg
pusha
data16
push
pusha
rcr
push
push
cmc
stos
or
jno
dec
in
mov
pop
movs
out
push
pop
hlt
ins
sub
push
movs
or
fst
adc
sahf
jecxz
cmc
add
or
xor
mov
mov
dec
aaa
jp
pusha
rcr
pop
push
out
sub
in
sub
ror
xor
pop
mov
inc
mov
mov
pop
cmovae
push
je
push
mov
push
mov
std
push
xchg
push
mov
pop
mov
test
(bad)
into
xchg
mov
(bad)
aad
(bad)
or
mov
dec
test
xchg
(bad)
test
mov
cmp
mov
shl
jmp
add
sub
out
call
and
fiadd
scas
leave
pop
stos
push
sub
es
inc
out
in
loop
mov
push
(bad)
inc
stos
(bad)
mov
lock
dec
xor
or
sbb
pop
and
adc
icebp
push
sbb
cwde
fcmovu
cld
mul
cmp
mov
and
(bad)
push
ja
arpl
mov
cmp
cmp
pop
imul
sub
aad
ret
lahf
outs
sub
mov
cmps
push
cmps
sti
mov
(bad)
fdivr
and
les
and
push
jg
or
mov
in
dec
lods
(bad)
cmp
retf
daa
(bad)
gs
inc
and
dec
sbb
hlt
cmp
into
mov
sbb
out
iret
int
cmp
les
sbb
dec
ror
jmp
daa
sbb
and
test
loopne
xor
jmp
sub
cmp
jne
add
xchg
test
popa
inc
push
jnp
das
loopne
adc
out
cwde
std
cmp
jns
pop
add
out
sbb
lahf
cmp
jno
inc
mov
adc
add
pushf
cmp
div
clc
mov
pushf
push
addr16
mov
jmp
movs
iret
dec
jno
adc
mov
cs
lods
(bad)
cmp
sub
mov
or
pop
cmp
(bad)
movs
fldcw
inc
repz
mov
nop
pop
das
dec
in
jp
pop
clc
gs
rol
cmps
mov
push
neg
icebp
repz
sbb
movs
stos
mov
shl
pmulhw
loop
jne
(bad)
mov
retf
sbb
push
push
ds
mov
inc
push
cmp
and
(bad)
mov
cmp
ins
push
scas
imul
pop
adc
adc
inc
push
imul
outs
push
jg
inc
ret
adc
mov
push
ror
(bad)
pop
xor
mov
and
shl
loopne
int
jp
stc
xchg
aad
call
and
lods
repz
mul
mov
inc
nop
xor
mov
xor
add
inc
popf
pop
ficom
add
mov
or
push
add
pop
or
push
mov
(bad)
adc
test
pop
cld
or
fist
imul
xor
jecxz
hlt
xor
out
push
add
call
mov
jg
ret
and
xor
fist
in
mov
sub
aam
adc
jo
call
ins
pop
lock
aam
jg
clc
xor
sahf
sbb
push
mov
fiadd
movs
test
push
das
cmps
xchg
aad
inc
mov
mov
and
add
mov
lods
outs
xlat
push
in
pop
ins
enter
outs
jae
aad
scas
arpl
lea
mov
push
add
(bad)
stc
test
int
fdiv
daa
jnp
aaa
or
adc
je
retf
cmp
jge
lods
xchg
mov
js
ins
test
jg
test
jmp
inc
inc
adc
mov
movs
sub
js
push
outs
(bad)
and
or
fwait
mov
mov
(bad)
xchg
cmps
sar
pop
shld
movs
jp
inc
mov
fldenv
jns
mov
inc
dec
xchg
fs
push
pop
aaa
addr16
in
test
retf
or
add
sub
stos
jmp
pop
xchg
push
rcr
xchg
int3
in
sub
pop
mov
div
xchg
mov
xchg
push
outs
and
pop
and
fist
ss
repz
and
adc
mov
jnp
jo
cmps
pop
push
rol
outs
push
scas
test
loope
xchg
inc
out
test
xor
jno
cmps
es
xchg
adc
inc
das
add
aad
mov
jb
fwait
movs
lds
mov
xor
push
(bad)
push
fcomi
mov
mov
dec
shl
out
into
xchg
sub
sbb
push
cmp
jno
xchg
push
inc
mov
push
sub
frstor
rcr
sbb
into
sub
and
aad
mov
fadd
push
pop
mov
xlat
(bad)
jae
test
dec
pop
aas
jae
pop
push
and
cmp
inc
shl
(bad)
in
movs
dec
ins
add
scas
xchg
add
fld
movs
jne
pop
addr16
xchg
and
sub
icebp
(bad)
(bad)
mov
cmp
loop
and
xchg
sub
sbb
add
ins
rol
(bad)
stos
or
ja
jg
adc
and
fisttp
call
stos
lods
push
je
fwait
xchg
(bad)
and
jne
mov
mov
(bad)
loopne
or
icebp
sbb
icebp
popf
and
mov
xor
xchg
or
mov
xchg
jbe
mov
adc
mov
cmp
xor
lea
pop
mov
add
sub
stos
cmps
cmp
adc
imul
pop
cmp
fcom
mov
push
or
ficom
dec
push
loop
(bad)
std
test
retfw
pop
(bad)
jp
fdivr
dec
xchg
sbb
mov
bound
or
ror
push
xlat
sub
cmps
sbb
jo
hlt
retf
mov
jmp
and
xchg
cmp
sub
jnp
add
in
in
inc
push
push
ss
shl
dec
and
dec
sbb
dec
pop
pop
(bad)
or
dec
fwait
xchg
cmps
movnti
dec
pop
sub
mov
sar
or
ins
or
add
mov
icebp
inc
cmc
in
mov
(bad)
retf
push
xchg
push
test
lods
or
cmp
sub
inc
jg
icebp
into
outs
xchg
xor
nop
pop
ret
sub
mov
pop
cmp
mov
mov
into
mov
add
jo
pusha
jle
dec
inc
pop
mov
mov
sahf
lock
loopne
ror
rcr
and
adc
add
jo
pusha
jle
dec
inc
pop
mov
mov
sahf
lock
loopne
ror
rcr
and
adc
add
jo
pusha
jle
dec
inc
pop
mov
mov
sahf
lock
loope
ror
ret
and
adc
add
jb
pusha
jle
dec
rcr
pop
adc
mov
add
xor
and
in
mov
sub
je
dec
jne
cmp
je
cmp
je
xor
jmp
movzx
push
push
call
jmp
call
push
push
push
mov
call
mov
push
pop
pop
ret
push
mov
push
push
cmp
push
mov
je
cmp
je
lea
mov
push
mov
call
mov
movzx
mov
mov
movzx
xor
xor
movzx
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
push
call
call
call
mov
call
mov
xor
cmp
setne
ret
push
mov
sub
mov
and
and
push
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
push
mov
call
push
mov
push
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
mov
call
pop
leave
ret
je
lea
lods
stc
gs
mov
hlt
sub
or
sub
cmp
xchg
jge
ins
je
lea
lods
xor
and
adc
add
hlt
adc
or
je
movs
dec
xchg
jge
ins
je
fs
push
movs
inc
mov
les
hlt
sbb
les
adc
cmp
pminsw
sub
add
push
fsubr
retf
scas
or
push
cld
add
cmp
mov
adc
out
pop
or
ds
repz
ror
movs
adc
lea
xchg
and
ins
out
mov
repnz
into
pop
mov
sbb
add
in
fxtract
icebp
jge
sub
jb
inc
inc
(bad)
adc
xor
xchg
mov
jns
popa
repz
scas
mov
pop
xor
mov
mov
mov
sbb
mov
push
lds
pop
les
test
mov
stc
xchg
inc
iret
daa
not
push
mov
ret
in
sub
mov
movs
inc
lods
xor
and
adc
add
hlt
sbb
les
inc
movs
push
xchg
test
popf
adc
cmp
fist
jo
push
mov
jb
or
mov
movs
dec
not
ret
hlt
add
xor
sub
xor
popa
sub
xchg
imul
dec
clc
sbb
sbb
popf
lea
fldcw
call
adc
add
hlt
sbb
les
xchg
jge
ins
je
lea
lods
xor
and
adc
add
hlt
sbb
les
xchg
jge
ins
je
inc
sahf
leave
cmp
retf
and
sub
call
and
mov
xchg
xchg
cmp
xor
sbb
mov
xchg
adc
test
nop
sbb
(bad)
and
push
xchg
inc
inc
xchg
repnz
sti
mov
adc
or
push
sbb
scas
xor
add
jg
hlt
pushf
fucompp
jb
scas
xchg
mov
dec
(bad)
pop
inc
ret
mov
dec
out
push
xor
or
mov
jbe
mov
call
aam
fwait
mov
je
mov
hlt
adc
add
mov
dec
pop
sub
pop
leave
mov
add
call
adc
jb
out
sti
mov
lds
data16
adc
mov
mov
mov
arpl
daa
lds
dec
pop
hlt
(bad)
adc
dec
and
mov
xchg
sub
pushf
movs
or
xor
enter
xlat
aas
and
test
mov
shl
int
pop
shr
les
retf
mov
adc
mov
test
lods
mov
add
or
lods
or
enter
stos
push
lahf
xchg
movs
sbb
jne
jg
push
add
jae
and
mov
into
or
push
call
mov
enter
pop
pop
cmp
or
(bad)
cmp
or
ins
mov
stos
cmps
pop
xchg
es
in
sbb
cmp
inc
sbb
mov
aad
imul
fld
jmp
sahf
lds
mov
es
call
sbb
dec
mov
push
sti
shl
arpl
inc
lods
dec
xor
adc
xchg
es
or
mul
fisttp
and
sbb
pop
dec
xchg
jp
cmc
sbb
sti
jbe
xchg
mov
stos
mov
fadd
jp
mov
add
dec
into
scas
lods
das
inc
mov
imul
push
scas
rcl
mov
out
xlat
fdivrp
jl
pusha
push
das
pop
mov
pop
into
arpl
test
sti
repnz
nop
lods
(bad)
je
lods
mov
scas
add
jl
ins
mov
xchg
xchg
xchg
pop
test
div
retf
aad
pushw
cmp
inc
mov
jns
fnsave
xchg
test
cmp
repnz
xor
mov
adc
mov
fwait
loope
and
dec
iret
aad
mov
cs
lahf
jo
and
xchg
ret
into
fs
jns
sub
lea
xchg
pop
inc
push
(bad)
movs
jg
leave
fs
out
fldenv
(bad)
mov
cld
es
dec
ret
dec
mov
popf
aaa
mov
je
push
idiv
push
in
scas
add
jno
and
or
in
fcomip
fxch
test
xchg
in
inc
adc
push
pop
jle
mov
test
fidivr
mov
and
dec
out
popa
imul
icebp
stc
pop
push
call
shl
xor
and
mov
pop
shr
lock
mov
push
pop
dec
push
popa
sbb
mov
dec
stc
or
iret
adc
adc
mov
cmps
test
push
jecxz
cmp
clc
dec
(bad)
iret
jnp
call
push
test
inc
arpl
push
nop
jge
psubusw
test
jne
retf
aam
lahf
mov
inc
aaa
adc
push
pop
mov
fld
push
bound
sub
stc
mov
sar
adc
cmp
ret
mov
mov
outs
pop
repnz
inc
fsubr
xchg
and
out
dec
test
loopne
fsub
inc
jge
jp
push
sbb
xor
(bad)
mov
outs
cmp
cmp
mov
daa
cmc
sar
movs
or
adc
adc
jns
jg
jne
or
fistp
inc
ins
and
adc
scas
mov
cli
ins
(bad)
aas
mov
jbe
cmp
std
push
sbb
ins
dec
mov
xchg
(bad)
loopne
ret
xor
test
dec
in
fldenv
mov
out
jno
add
xor
daa
loopne
push
in
cmps
imul
mov
jo
retf
cmps
fmul
sbb
jle
in
sbb
aas
(bad)
mov
lock
cmp
mov
in
stos
cmps
sbb
pop
gs
pop
cmp
cmp
xchg
sub
(bad)
pop
pop
rcl
ins
daa
in
pop
fstp
mov
cdq
cmps
jg
stos
test
or
outs
mov
or
inc
fcmovnbe
shr
scas
mov
int3
rcr
push
dec
daa
mov
pop
jmp
call
ds
(bad)
(bad)
stos
inc
retw
leave
sbb
aad
sub
popf
mov
push
sahf
call
daa
idiv
jnp
test
test
add
int
dec
pop
lock
mov
xchg
stc
mov
cld
xchg
xchg
ds
mov
sti
loopne
shl
dec
mov
in
aam
push
dec
ret
fsubr
jnp
mov
iret
sbb
clc
cmp
div
adc
ins
mov
push
bound
(bad)
pushf
lahf
dec
ja
pushf
fcom
pop
test
dec
push
sbb
jo
inc
bound
jno
pushf
mov
xchg
cs
inc
lds
scas
fwait
repz
dec
repz
push
je
test
dec
inc
push
in
in
mov
into
jb
mov
push
fidivr
lock
retf
dec
in
scas
dec
sti
pop
shr
(bad)
cmp
repz
mov
add
nop
lahf
ret
test
in
mov
mov
xchg
add
fwait
sub
cs
push
dec
inc
sub
call
data16
jnp
dec
push
lods
cmp
arpl
imul
cmp
xchg
mov
(bad)
neg
add
push
rcl
pusha
inc
neg
icebp
pusha
xor
mov
adc
sbb
mul
loop
xchg
lahf
push
shr
popa
xor
out
xchg
outs
sbb
lods
leave
and
mov
xor
pop
movs
xor
jns
cs
push
xor
je
dec
int
test
add
ins
cwde
xchg
and
push
call
xor
arpl
icebp
call
cmp
pop
add
push
push
cwde
adc
dec
imul
pop
push
out
and
and
call
push
xchg
mov
pop
loope
shl
mov
es
adc
fmulp
inc
repz
push
aas
lods
xchg
fmul
imul
lods
jmp
jg
inc
mov
scas
loopne
call
sub
dec
mov
(bad)
enter
and
or
mov
push
neg
into
xchg
fild
sahf
pop
mul
inc
mov
sub
popf
xor
ret
cmp
shl
inc
test
loopne
mov
out
addr16
retf
sub
ja
movs
jl
pop
mov
push
push
push
and
inc
adc
pop
rol
repnz
cld
jle
jmp
int3
inc
cmp
inc
jbe
(bad)
scas
jbe
cmc
or
vpaddsw
cmc
aas
daa
rol
out
xor
jno
xchg
adc
adc
mov
lds
jnp
hlt
dec
outs
(bad)
out
hlt
fst
cmp
loopne
adc
add
pop
xor
mov
mov
clc
and
inc
push
stos
clc
cdq
aaa
push
pop
and
sahf
mov
popf
fisubr
call
loope
xlat
jp
(bad)
pop
test
cdq
jg
jge
repnz
xchg
push
or
aam
xor
jmp
jno
fwait
stos
or
mov
sar
cmp
cwde
pop
lea
add
rcr
xchg
(bad)
xchg
pusha
jnp
sub
sbb
test
pop
aas
push
sub
loopne
sbb
push
in
retf
sahf
sub
xlat
sbb
or
mov
cmc
repz
jmp
aad
in
rcl
inc
mov
cmps
adc
sub
out
push
adc
daa
or
into
repz
xchg
cmp
push
add
xor
ficom
and
fdiv
pop
pop
adc
push
pop
mov
call
lods
xchg
out
and
adc
or
inc
loopne
push
out
jmp
mov
test
repnz
jns
imul
dec
adc
push
jp
fwait
xchg
scas
lds
sbb
adc
or
popa
dec
jnp
sbb
dec
imul
push
sub
aad
jo
or
adc
push
xchg
fild
dec
fs
cmp
xor
aas
adc
retf
mov
cmc
lods
adc
cmp
fcmovnu
(bad)
out
(bad)
push
mov
fdiv
mov
jmp
and
jbe
loope
sbb
bsr
mov
fwait
mov
sbb
add
inc
xchg
mov
lods
movs
sbb
into
sar
xor
add
ds
cld
(bad)
sub
fdiv
jecxz
xchg
and
retf
sar
sbb
or
cmps
xchg
or
pop
mov
adc
into
mov
sbb
jnp
pop
xchg
mov
inc
jp
fs
pop
ins
pop
cmp
pop
sbb
out
das
(bad)
dec
xor
(bad)
dec
iret
retf
and
sub
pop
sbb
mov
add
add
mov
push
in
mov
cmp
push
cmp
das
pop
add
push
mov
scas
inc
dec
fild
inc
push
mov
pcmpgtd
adc
stos
push
push
xchg
push
aam
daa
and
sub
or
sub
call
dec
add
and
and
std
jge
outs
aaa
repnz
out
add
(bad)
xor
nop
jo
cdq
inc
scas
shl
jnp
outs
adc
xor
dec
dec
sahf
xchg
pop
test
std
pop
xchg
mov
sbb
inc
jmp
jnp
lahf
out
test
pop
jle
cmps
push
adc
ror
mov
add
push
sbb
or
ret
cmp
lock
pop
mov
xchg
mov
sub
and
push
xchg
xor
dec
cmp
push
sbb
(bad)
add
adc
push
out
adc
hlt
sbb
sbb
xadd
popf
and
aad
mov
xchg
ret
sub
sbb
add
adc
call
add
dec
mov
imul
(bad)
jno
std
bound
or
pushf
add
jns
test
mov
and
pop
fld
hlt
mov
loope
mov
loope
sbb
sti
sbb
hlt
dec
adc
sbb
mov
sbb
imul
cmp
into
sahf
mov
cmps
stos
inc
sbb
aas
xor
mov
pop
shr
clc
dec
sbb
xlat
std
xchg
leave
(bad)
stos
adc
rol
pop
pop
cmp
xor
inc
inc
lods
jno
jne
icebp
inc
imul
idiv
fidiv
add
jp
es
xchg
fwait
ret
sbb
pop
cs
jecxz
pop
mov
push
out
pop
cmp
dec
and
adc
dec
sub
shr
lock
(bad)
fisubr
out
sbb
in
push
push
not
fwait
ds
jge
mov
mov
and
jne
sahf
call
les
inc
push
dec
cmp
mul
not
retf
stc
mov
xlat
mov
cmp
repnz
cmp
paddd
cli
push
sub
repz
test
scas
cmc
add
sbb
into
sbb
adc
push
jo
je
jo
out
pop
(bad)
adc
int3
cmps
lds
dec
push
mov
leave
in
or
jl
and
sar
retf
add
lahf
push
int3
(bad)
(bad)
pop
std
sahf
int3
sbb
add
cld
lods
inc
scas
cwde
mov
xor
xchg
loopne
sahf
adc
pop
dec
and
aad
jae
in
cmps
adc
dec
test
fst
iret
or
or
fdivr
pop
rol
cld
cmps
cmc
push
fisub
adc
pop
ins
ds
outs
dec
fisubr
jo
mov
push
sub
addr16
xchg
or
xchg
push
and
gs
stos
inc
fnstcw
mov
clc
aas
popf
cmps
push
add
call
sbb
or
fidiv
dec
sbb
adc
rcl
dec
fsubr
sbb
nop
jbe
and
push
pop
imul
mov
cmp
dec
cli
test
sbb
cmc
mov
xchg
aad
iret
test
arpl
nop
aad
fidivr
sub
cmp
test
mov
(bad)
jmp
in
jmp
pop
(bad)
push
xchg
mov
mov
lea
sub
jne
mov
pop
and
pop
fldenv
sbb
jb
or
ins
call
loopne
inc
dec
int3
aaa
bound
sti
mov
xchg
retf
inc
push
jp
adc
or
fcomp
sti
add
es
inc
mov
loopne
pushf
push
icebp
popa
cmp
sub
out
jecxz
lods
pop
(bad)
jle
xchg
sbb
test
or
lock
xchg
int3
lds
(bad)
push
int3
rol
xlat
adc
jmp
push
in
imul
lock
jmp
pop
(bad)
jns
adc
ss
sti
mov
js
pop
pop
inc
in
in
arpl
cmp
add
mov
xor
cmc
mov
cmc
lahf
pop
and
mov
mov
loope
inc
sub
adc
ss
fimul
pushf
inc
xor
adc
mov
rol
cmp
jo
sbb
mov
cmp
cmps
xchg
cwde
inc
ret
add
add
imul
mov
mov
mul
out
mov
mov
or
inc
sbb
jo
dec
push
push
or
lods
inc
xchg
dec
jo
push
or
mov
or
movs
loopne
and
and
push
mov
test
mov
mov
js
jle
or
mov
js
cmps
and
or
add
mov
out
xor
mov
fisttp
inc
adc
pop
mov
mov
push
push
cld
pop
dec
pop
call
dec
call
pop
sub
call
cmp
sar
cmp
test
mov
or
pop
cmp
repnz
mov
jo
mov
pushf
jecxz
retf
lock
mov
mov
jg
shl
cld
cmp
inc
stos
frstor
add
sbb
and
stos
test
icebp
add
inc
mov
lods
sbb
popa
xchg
sub
jmp
aam
jbe
cmp
shr
jle
stos
retf
inc
jg
imul
(bad)
sub
cmp
stc
bnd
xchg
jmp
ds
neg
push
and
bound
sub
push
inc
sar
dec
ror
in
fs
pop
push
fidivr
rol
shl
lea
cmp
sti
fs
xchg
ja
push
and
clc
jl
xchg
push
add
js
in
lds
push
jmp
xlat
sahf
dec
push
xchg
inc
lds
dec
pusha
sbb
dec
cwde
push
test
clc
push
lods
push
cs
arpl
pusha
jb
and
(bad)
fs
push
in
popf
and
pop
stos
xchg
add
xor
imul
mov
adc
mov
mov
mov
cmp
xchg
and
mov
cs
inc
mov
xor
std
mov
dec
stc
aas
mov
add
mov
loopne
inc
xor
push
push
add
neg
adc
pop
inc
pop
xor
call
inc
in
push
not
mov
mov
rcl
push
cmc
adc
test
and
icebp
adc
lock
idiv
fsub
inc
mov
mov
je
mov
(bad)
jo
jecxz
arpl
dec
mov
adc
hlt
sbb
xchg
dec
or
xchg
xor
imul
push
imul
fst
fcom
inc
mov
test
mov
xor
jp
sahf
sub
das
test
add
scas
push
push
lods
popa
les
jnp
lods
push
jo
cdq
inc
cmc
add
retf
xchg
push
cld
dec
adc
mov
cmp
mov
aad
push
xchg
or
stos
scas
jmp
imul
(bad)
lahf
push
lahf
inc
mov
push
mov
mov
retf
pop
sub
aaa
imul
adc
loop
jecxz
dec
dec
inc
push
mov
sbb
call
adc
sub
loope
mov
jecxz
xlat
xor
leave
repz
cli
push
pusha
sahf
push
and
hlt
sbb
cld
int
test
pop
sub
dec
adc
popf
mov
or
out
pop
adc
push
call
fs
fcmovnbe
xchg
js
pop
adc
fxch
mov
mul
(bad)
data16
mov
mov
xor
jmp
push
test
add
mov
dec
hlt
xchg
ret
js
mov
mov
std
jg
out
xchg
aad
cs
mov
cmp
fwait
ss
dec
mov
call
sbb
mov
sub
call
xchg
push
outs
xchg
cmp
jle
mov
cwde
fxch
cmp
mov
mov
xchg
and
movs
mov
jl
fstp
cmp
lea
push
lods
nop
jnp
jno
test
xchg
pushf
sbb
jl
push
(bad)
ss
das
push
jo
out
aas
or
mov
aas
mov
and
les
js
ss
out
test
cwde
fcom
mov
pop
sbb
repz
aam
leave
aad
clc
cwde
mov
push
jo
sub
add
push
gs
sbb
inc
mov
cmps
xchg
sbb
leave
jno
mov
ja
mov
aas
push
stos
mov
int
sar
cmp
aam
out
mov
and
aaa
scas
jle
rol
(bad)
cmp
repz
(bad)
retf
add
jns
pop
into
arpl
mov
cmps
pop
jnp
dec
dec
or
(bad)
out
or
inc
jecxz
push
push
sub
(bad)
arpl
mov
inc
(bad)
icebp
sbb
add
lock
mov
jp
xor
cmp
movs
gs
cmp
fisub
and
dec
add
cmp
xchg
xor
mov
inc
cld
sub
dec
cdq
pop
pop
movs
inc
popf
or
dec
add
push
mov
mov
call
push
sahf
pop
mov
cmps
cmp
sub
and
scas
mov
push
idiv
jns
clc
xor
cmp
cmp
les
enter
jno
xchg
iret
push
rcl
xor
inc
aam
sub
gs
(bad)
xor
cmp
mov
in
call
mov
mov
das
adc
imul
cmps
add
jbe
pop
fs
lock
xchg
gs
inc
inc
lods
(bad)
je
cmps
mov
or
out
xchg
sahf
mov
lea
jmp
adc
dec
cwde
shl
(bad)
jmp
stos
cld
sbb
inc
outs
fidivr
mov
(bad)
in
mov
lock
mov
(bad)
test
adc
add
cmc
mov
icebp
(bad)
xor
xor
mov
cld
mov
sbb
cld
jbe
mov
(bad)
sub
mov
adc
jb
mov
sahf
add
xor
das
fist
xor
sbb
std
bound
push
(bad)
out
pop
xchg
mov
mov
shr
jo
adc
sahf
les
call
xchg
xor
cmps
cmp
pop
rcl
call
iret
pop
mov
lgs
adc
xor
adc
mov
mov
sbb
lahf
xor
lahf
fdivr
jo
popa
cmp
push
fist
pop
push
scas
jmp
inc
sub
adc
mov
lds
test
scas
cmp
popa
cmp
cmp
mov
test
not
je
xor
push
or
cmp
test
pushf
push
pop
mov
js
dec
push
fwait
adc
cdq
gs
rcr
mov
push
jno
or
xor
push
fsub
scas
outs
sbb
cmp
das
push
cmps
push
ins
mov
leave
scas
jg
inc
arpl
sbb
daa
cwde
inc
adc
rcl
mov
push
stc
lock
adc
enter
pushf
out
arpl
popa
jbe
adc
sbb
dec
inc
aaa
shr
ja
jne
jno
sbb
and
or
ror
sar
inc
add
js
js
popf
aaa
xchg
add
sbb
mov
xchg
(bad)
mov
gs
jo
mov
xor
xor
into
jbe
cwde
push
jmp
xor
hlt
inc
sub
jo
imul
test
imul
mov
sbb
rcr
fidivr
mov
mov
adc
sbb
dec
fild
(bad)
call
xor
and
adc
add
hlt
sbb
les
xchg
jge
ins
je
lea
lods
xor
and
adc
add
hlt
sbb
les
xchg
jge
ins
je
in
aam
inc
lods
mov
and
adc
test
hlt
sbb
les
mov
movs
dec
xchg
jns
imul
lods
xor
and
adc
add
hlt
sbb
les
aad
xor
add
adc
lods
adc
mov
cmps
fsubr
sub
or
sbb
ins
imul
dec
pop
mov
stos
mov
sti
in
jmp
fcmovne
retf
fsubr
sub
ins
(bad)
pop
dec
dec
pop
popa
lods
sub
in
mov
fdivr
adc
jge
push
pop
ds
sbb
cmp
mov
fucomip
cld
jo
sub
aas
or
sub
or
dec
mov
(bad)
jp
mov
cld
cld
mov
adc
add
ror
xchg
(bad)
pop
in
loopne
(bad)
lods
cli
neg
dec
(bad)
mov
fwait
jnp
lock
call
in
aam
in
cmc
fadd
adc
(bad)
push
sar
cli
in
adc
fisub
js
or
hlt
jecxz
aas
imul
xor
fs
dec
popa
add
push
mov
imul
mov
or
sub
jmp
pop
pop
xor
rcl
sub
(bad)
xchg
imul
lods
stos
mov
sti
in
scas
cld
fcmovne
jae
leave
sub
cmp
or
sbb
ins
jne
pop
dec
das
sbb
rcr
(bad)
in
xchg
sbb
pop
inc
push
dec
bound
adc
add
cmp
mov
xchg
mov
fadd
imul
or
push
adc
cmp
xor
cld
cwde
enter
call
fcmovne
retf
fdivr
sub
cmp
or
sbb
ins
imul
pop
mov
mov
cld
fcmovne
retf
fdivr
sub
cmp
or
sbb
ins
imul
pop
mov
jle
dec
mov
mov
adc
sbb
rcl
push
(bad)
push
out
mov
push
push
dec
mov
sbb
sahf
jle
fs
es
and
sub
call
pop
aas
in
cmp
stos
sar
mov
ds
xlat
sti
pop
xchg
adc
fdivr
test
jp
and
cmp
aam
xor
cs
push
push
dec
mov
hlt
adc
xor
xor
aad
in
sbb
ja
mov
test
(bad)
xchg
or
or
sub
sbb
xor
xor
mov
out
jp
sub
sbb
popa
and
cmp
fs
mov
addr16
push
and
out
add
adc
xlat
adc
xor
jno
sub
xlat
das
jae
inc
push
or
mov
dec
jne
jae
pusha
sbb
sbb
sub
fs
loope
pop
jecxz
and
adc
mov
cmp
ffree
cmp
pop
mov
fdivr
nop
sub
(bad)
stc
push
not
fstp
stos
(bad)
hlt
mov
repnz
mov
push
and
into
inc
int
or
jae
cmp
xor
bound
and
pop
(bad)
cdq
jb
cmp
pop
bound
push
and
shl
and
loop
lods
lds
repnz
pop
cmps
outs
lds
cmp
inc
movs
shl
push
jnp
pop
test
test
push
inc
sub
outs
leave
add
bound
bound
mov
sbb
pcmpeqw
or
nop
or
cmp
scas
popf
cmc
or
das
sbb
enter
jo
jo
into
xor
or
retf
or
cmc
xor
adc
out
mul
mov
adc
das
into
jne
shl
adc
and
add
inc
sbb
call
xchg
sub
int
push
in
xchg
test
dec
pop
inc
and
pop
retf
xor
call
push
inc
not
retf
pop
les
cmp
inc
movs
dec
sbb
jl
sub
mov
frstor
pop
jmp
pop
push
pop
leave
push
mov
jb
dec
in
and
(bad)
inc
fldenv
ds
cmp
inc
(bad)
shl
rcr
mov
lds
test
bound
pop
push
sub
stc
iret
imul
enter
pop
scas
stos
add
cmp
cmp
cmp
call
xchg
cdq
retf
jp
popa
mov
xchg
popa
mov
popf
xor
pop
dec
aam
sub
shl
test
mov
(bad)
mov
popa
mov
test
pop
out
je
inc
push
inc
xchg
xchg
iret
std
leave
outs
cmp
push
sbb
sub
mov
std
add
inc
cmp
xchg
cmp
sub
scas
add
int3
pop
add
xchg
dec
call
pop
mov
stos
inc
push
loop
push
ins
sbb
pop
shl
fistp
data16
push
xchg
mov
lods
pusha
xchg
mov
jg
and
in
sub
dec
in
test
cmp
mov
addr16
or
fcmovnu
and
ficomp
sub
inc
pop
test
(bad)
mov
lahf
sbb
jnp
or
cmp
sti
sub
jg
pop
pop
inc
ror
test
mov
cld
mov
mov
ds
add
sbb
sbb
ds
cmp
and
cli
shl
bound
pushf
add
sahf
sub
fs
mov
jo
rcr
pop
adc
movs
inc
mov
arpl
ror
push
xor
xor
dec
push
mov
daa
push
mov
out
ins
and
hlt
mov
scas
jne
cmp
pop
jge
pop
and
test
jmp
aam
scas
xchg
leave
(bad)
cmps
loop
sbb
inc
pop
into
mov
mov
ret
cmp
shr
sub
loope
nop
in
add
ins
xor
ja
sub
fmul
or
(bad)
bswap
pop
lods
(bad)
(bad)
pop
xchg
(bad)
movs
call
jns
cdq
mov
(bad)
aam
pop
or
inc
mov
icebp
jle
mov
cld
inc
inc
cli
ret
gs
adc
cmps
push
pop
pop
and
rcl
mov
inc
cmp
push
retf
jae
or
movs
bnd
dec
icebp
sbb
add
or
sub
and
shr
cmp
jl
icebp
pop
sahf
sub
test
sub
clc
idiv
fs
mov
mov
sbb
cmp
int3
push
xchg
(bad)
mov
fiadd
mov
mov
inc
or
popa
test
xor
hlt
ficomp
neg
inc
add
cwde
or
mov
movs
retf
inc
pop
stos
sub
gs
xor
gs
sti
fwait
inc
sub
xor
adc
mov
xchg
imul
lods
push
outs
cmc
cmp
loopne
adc
pop
loopne
mov
xchg
mov
jecxz
xor
push
xor
xchg
push
outs
sub
xchg
mov
sti
dec
jne
push
push
ds
cmc
mov
dec
es
inc
jp
jecxz
mov
loope
shl
lds
shr
jbe
in
jns
loopne
xor
into
in
or
scas
loop
scas
(bad)
pop
push
pop
inc
pop
test
push
call
inc
and
mov
movs
aaa
pop
mov
push
jne
adc
sbb
sub
xor
cdq
mov
scas
mov
ror
push
pop
out
sub
xor
dec
jae
push
adc
and
pop
std
in
(bad)
out
xor
stos
sub
mov
ins
xchg
scas
sahf
xchg
cdq
es
scas
out
xchg
repz
sahf
cmp
xor
cmp
pop
jo
mov
or
xlat
push
call
jmp
sbb
sub
ins
dec
fisttp
sub
(bad)
pop
jmp
aas
aam
scas
mov
or
paddsb
xlat
lahf
pusha
mov
rcr
not
stos
sbb
in
sahf
in
sahf
cmc
pop
retf
add
pop
jle
mov
xchg
mov
in
xchg
dec
add
mov
mov
scas
loope
adc
aam
adc
lods
inc
sub
dec
int
into
call
sbb
add
cmp
mov
ss
loop
cwde
xchg
inc
xchg
retf
inc
retf
je
jge
mov
out
test
leave
sbb
movs
xchg
std
movs
jb
scas
(bad)
sbb
mov
imul
mov
sahf
scas
push
clc
mov
mov
inc
cli
adc
in
add
mov
mov
dec
pop
xlat
inc
movs
rol
int3
adc
cmp
push
jmp
cmp
jp
loope
dec
outs
push
ret
lods
adc
cmp
or
cmp
ins
pop
sub
pop
int3
jo
ret
sti
push
int3
dec
add
les
mov
xor
movs
fidiv
dec
int3
ins
or
cmp
iret
cdq
ins
and
int3
jl
jle
jmp
repz
mov
push
dec
cdq
(bad)
lods
stos
cld
daa
sub
pushf
cmp
lods
xchg
mov
popf
nop
test
shl
retf
ficom
scas
xchg
packsswb
cdq
fnsave
sbb
sbb
aam
shl
jnp
push
inc
inc
lods
lock
push
cmps
xor
ins
sub
mov
xchg
mov
out
push
test
pop
and
adc
sub
(bad)
out
adc
xchg
adc
daa
pop
inc
mov
(bad)
jns
inc
jmp
jmp
and
sar
xchg
jmp
std
push
int3
jmp
out
ret
cmp
ret
or
out
xchg
in
stc
push
pop
mov
hlt
outs
and
lods
pop
pop
(bad)
xlat
inc
add
cmps
stc
xor
and
xor
xor
ins
in
in
mov
jbe
inc
cmp
cmps
test
sub
retf
mov
mov
cmp
mov
stos
jmp
jae
adc
rcl
fimul
xchg
icebp
rcr
std
add
pop
jne
(bad)
inc
outs
loopne
xchg
push
mov
push
add
loop
push
mov
sub
adc
loop
sbb
cdq
cmps
sub
mov
or
ret
pop
mulps
jmp
add
xor
jae
aas
dec
popa
aaa
clc
jge
(bad)
push
neg
ins
pushf
lock
stc
push
mov
inc
shr
leave
push
repnz
mov
dec
ds
inc
stc
cmp
test
cmp
xchg
add
lods
sar
add
or
sub
mov
scas
in
dec
xchg
pushf
cmp
ins
mov
mov
and
retf
hlt
mov
cld
jb
mov
fldenv
scas
push
aad
imul
mov
int3
stc
ja
pop
or
in
mov
jl
iret
movs
fisttp
cs
dec
jg
shl
repz
loopne
push
out
inc
cmp
jns
mov
and
out
pop
add
cmp
xor
inc
and
and
xchg
(bad)
aas
pop
cdq
xchg
add
add
add
jg
pop
sbb
inc
mov
jbe
pop
dec
pop
or
dec
xlat
sub
rcr
in
sar
ror
cmpxchg
aas
push
cmp
fdiv
jbe
lods
(bad)
mov
xchg
and
scas
xor
(bad)
pop
test
add
aas
jb
or
(bad)
call
cmp
in
(bad)
mov
mov
pushf
call
(bad)
aam
gs
fst
push
sbb
pop
push
daa
sbb
pop
mov
das
jge
dec
cmp
ret
movs
dec
jae
and
jmp
mov
dec
fisttp
gs
mov
inc
lock
xor
or
pop
loop
push
push
(bad)
or
mov
sbb
shr
out
enter
and
fsub
sbb
mov
stos
cwde
pop
adc
in
int
jmp
loope
aad
imul
jne
jmp
enter
fsubr
mov
sbb
rcl
outs
outs
lea
adc
mov
ja
mov
cmp
jmp
xchg
xchg
mov
or
retf
pop
fist
scas
add
fisub
push
out
call
mov
inc
xor
test
push
push
pop
push
clc
cmp
dec
jmp
push
pop
mov
sub
inc
popf
(bad)
into
loope
fcmovnu
push
push
mov
jo
ret
jp
jns
fdivr
mov
mov
fstp
xlat
int3
inc
leave
lds
dec
cmps
shl
pop
sti
icebp
cwde
shr
sub
mov
push
(bad)
or
cmp
arpl
jns
lock
mov
jp
mov
cmp
fwait
dec
je
push
inc
shl
adc
loop
sub
push
dec
jl
call
js
addr16
mov
xor
fisttp
pop
shr
xor
popf
pop
(bad)
(bad)
pop
adc
test
retf
dec
lods
(bad)
jbe
pop
or
fsubr
retf
and
xor
lods
lgs
dec
outs
xor
es
mov
leave
inc
lds
sub
xor
(bad)
stc
shl
enter
inc
inc
dec
sbb
(bad)
pop
jo
fistp
push
and
xchg
sbb
jbe
ins
fwait
push
pushw
inc
xchg
inc
fldpi
in
movs
test
dec
dec
pop
nop
xlat
int
add
push
nop
sbb
cmc
call
dec
xchg
adc
stc
mov
in
jno
push
add
daa
aam
loop
loopne
jl
in
sub
(bad)
inc
nop
pop
or
arpl
cmps
dec
es
(bad)
pop
jb
mov
sub
mov
push
xchg
xor
test
inc
das
loopne
mov
mov
mov
sbb
enter
and
sub
sti
add
and
cmp
jbe
hlt
pop
xor
inc
or
cmp
into
ds
pop
add
enter
stos
push
pusha
imul
movs
cmp
cs
dec
push
or
and
mov
dec
jae
sbb
je
and
shl
and
and
popa
dec
outs
push
mov
int
and
and
sbb
xchg
sub
call
cmp
out
ins
popf
ret
das
movs
outs
hlt
dec
out
lods
loop
in
arpl
cli
xchg
xchg
jp
dec
fst
fs
xor
dec
jo
push
add
sbb
imul
push
les
or
or
push
mov
mov
icebp
cld
cmp
std
mov
out
dec
mov
xor
test
or
mov
scas
dec
push
js
cmp
dec
inc
outs
cmps
xor
adc
cmp
dec
xor
loope
mov
jnp
daa
push
fwait
and
test
arpl
enter
sbb
out
adc
hlt
pop
popa
pop
aam
(bad)
xor
rol
dec
push
mov
mov
stos
mov
scas
pop
mov
cmps
push
jno
popa
popf
mov
xchg
mov
nop
dec
dec
mov
inc
xor
xor
push
jnp
pushf
(bad)
cdq
pop
mov
into
imul
dec
call
(bad)
call
cmp
sbb
mov
scas
pusha
fistp
sbb
movs
sahf
dec
or
jnp
push
(bad)
push
xor
loopne
out
popf
into
fst
je
xchg
lods
gs
xchg
jae
xor
leave
dec
popf
in
icebp
mov
lea
out
icebp
and
int
imul
sar
xlat
div
out
or
mov
xor
sub
fwait
cmp
xor
and
femms
retf
add
addr16
or
mov
mov
arpl
mov
pop
ficom
(bad)
cdq
mov
into
inc
cli
clc
push
sbb
popw
push
push
push
sub
mov
mov
push
into
adc
xchg
jnp
pusha
jno
iret
pop
repnz
pop
push
fs
dec
jae
inc
aad
les
adc
or
(bad)
cld
bound
repz
sbb
dec
js
mov
retf
test
xchg
aaa
push
mov
sub
jl
jns
xchg
add
jne
retf
sar
(bad)
mov
pop
xor
cwde
or
retf
xor
cmc
sbb
movs
xchg
push
mov
dec
pop
jne
hlt
xchg
inc
cs
xchg
aad
ins
ret
cmps
mov
push
or
fst
test
test
pop
rcr
and
popa
sbb
mov
mov
dec
leave
mov
jge
dec
movs
js
outs
stos
jle
hlt
fcomp
and
jno
outs
sub
outs
shl
in
fiadd
dec
fdivr
int3
jge
clc
sub
add
rcl
dec
jle
outs
outs
out
scas
js
xchg
mov
pushf
sub
lods
xor
fdivr
adc
mov
repnz
retf
int3
jns
nop
fild
xchg
ror
ins
addr16
pusha
inc
push
movs
fidiv
pusha
(bad)
jle
dec
mov
and
std
in
xchg
imul
ins
add
push
adc
out
ins
adc
inc
push
ins
addr16
dec
icebp
xor
and
mov
or
push
mov
sbb
fnstenv
movs
push
xor
fnstcw
in
mov
sbb
push
mov
repz
mov
add
inc
push
sub
int
push
mov
test
mov
sub
adc
enter
xlat
outs
in
push
ret
sbb
inc
dec
pop
data16
mov
inc
das
inc
lods
movs
sbb
imul
out
or
into
or
(bad)
adc
adc
or
or
sub
ficom
icebp
push
mov
retf
push
or
das
or
je
test
mov
sub
ss
std
mov
sbb
repz
in
inc
fsubr
jmp
cmp
scas
dec
xor
cld
mov
std
cli
scas
xor
fwait
lods
inc
sbb
jb
mov
adc
xor
push
in
cmp
dec
pop
retf
jns
repnz
in
push
std
jg
ja
ret
jp
shr
stc
or
retf
sbb
icebp
cli
push
xor
mov
pusha
adc
aam
mov
(bad)
movs
(bad)
(bad)
arpl
in
dec
sub
push
outs
daa
int
popa
jo
xchg
into
lods
cmp
inc
fidivr
es
mov
xor
pop
aaa
or
hlt
inc
(bad)
mov
imul
and
adc
dec
sbb
test
or
jns
add
mov
xor
cs
mov
xchg
pop
add
adc
or
cs
push
jnp
es
ins
pop
lods
fidiv
jb
pop
ret
cmp
cwde
mov
leave
ret
sbb
or
push
pop
jnp
xchg
fild
cmp
nop
mov
enter
push
mov
xchg
push
xor
adc
jecxz
ins
lods
inc
or
xor
je
fiadd
aam
and
out
mov
inc
cmp
stos
xor
test
mov
add
pop
or
cmp
or
jle
nop
cmp
aas
or
das
inc
xor
stc
imul
sub
pop
fs
std
jae
xor
mov
out
jnp
mov
jae
and
mov
adc
xchg
scas
ror
inc
movs
or
int3
cmp
jbe
pop
add
out
pop
cmp
out
das
fsub
jb
sub
jne
adc
sbb
int
xor
pop
mov
xor
sub
mov
adc
fiadd
inc
pop
aam
or
out
push
test
arpl
add
gs
nop
xor
fs
push
shr
mov
out
lahf
xor
ja
cmp
sar
fsubr
xor
or
addr16
push
mov
sti
cwde
enter
mov
pusha
adc
aas
sahf
lods
pop
mov
mov
(bad)
jle
outs
icebp
popf
or
in
mov
out
imul
xlat
pop
cmp
jae
and
inc
dec
sbb
push
fwait
dec
or
jo
sbb
lods
xor
sahf
gs
add
pop
add
inc
and
dec
mov
xchg
sub
mov
leave
out
(bad)
dec
cmp
sub
pop
ds
jo
ror
ret
jle
inc
dec
xchg
lds
cs
add
jmp
ins
into
inc
adc
add
inc
ss
(bad)
or
cmp
jb
jns
ds
sub
jb
adc
test
in
fcom
inc
mov
jl
dec
int
rcr
cmps
pop
jg
lock
outs
(bad)
inc
mov
mov
ret
test
cmp
sbb
jns
int3
test
out
call
shl
ins
rcl
sub
pop
neg
jo
jecxz
dec
jmp
pop
and
rcl
inc
dec
je
push
inc
retf
add
movs
cmc
xor
push
imul
stos
stos
dec
aam
(bad)
stc
inc
push
adc
clc
pop
outs
enter
inc
mov
or
fwait
pop
push
fucomp
pop
adc
mov
rcr
push
sub
sbb
fidivr
adc
pop
retf
repnz
popa
and
mov
lea
jno
aaa
repz
mov
and
mov
ins
sar
inc
xchg
jmp
mov
pop
jno
cld
cmp
sar
outs
dec
xor
sar
jecxz
cmp
(bad)
int
ret
(bad)
pop
mov
dec
add
retf
push
stos
(bad)
ds
sbb
and
(bad)
sti
jl
test
fsubp
cmps
(bad)
mov
jo
loop
xchg
lock
(bad)
lea
bound
shl
ret
push
mov
das
das
inc
aaa
and
xchg
dec
or
movs
jno
mov
ret
push
jp
es
add
mov
mov
lods
int
dec
retf
jle
sub
mov
jo
jne
mov
(bad)
daa
add
and
fsubp
pop
inc
cmp
jb
xchg
mov
nop
push
jnp
(bad)
mov
fimul
sub
mov
in
pop
sbb
add
fwait
ret
add
inc
dec
jge
push
outs
sbb
mov
movs
or
int
retf
xor
(bad)
out
cmps
jbe
mov
push
shl
imul
sub
jb
adc
mov
in
jp
leave
add
cmp
je
lds
mov
inc
hlt
mov
retf
sbb
pop
inc
into
stos
cmp
shl
inc
pop
adc
int3
pop
mov
movs
pop
mov
cld
xor
call
xchg
jge
pop
mov
jle
retf
add
xchg
loopne
in
xor
dec
sbb
sbb
mov
adc
(bad)
daa
cmp
mov
mov
xor
jmp
fcmovne
retf
fdivr
sub
cmp
or
sbb
ins
imul
pop
mov
mov
cld
fcmovne
retf
fdivr
sub
cmp
or
sbb
ins
imul
pop
mov
mov
cld
fcmovne
retf
sub
cmp
jnp
jb
pop
dec
jnp
mov
mov
jl
dec
dec
and
rcl
xchg
mov
or
in
and
retf
nop
jmp
mov
and
dec
add
push
sbb
push
cmp
mov
cli
nop
jmp
shr
popa
jp
push
sbb
inc
js
sub
cli
nop
jmp
shr
popa
push
jne
add
gs
dec
aas
sub
fidiv
mov
cmp
scas
mov
das
inc
out
ins
fucom
adc
mov
adc
dec
mov
iret
mov
jnp
out
outs
(bad)
out
push
jnp
xor
in
jp
dec
cli
movs
inc
and
out
xchg
ficomp
mov
ret
lds
dec
mov
fmul
xor
clc
cmp
lds
pop
cmp
sar
adc
shr
sbb
xor
sbb
(bad)
cmps
pop
dec
mov
or
pop
cmp
push
dec
fild
out
jne
popf
imul
int
cs
sub
fidiv
jmp
shr
add
push
sbb
inc
cmp
aam
hlt
retf
fiadd
xchg
mov
dec
aas
cmp
adc
jnp
jns
cmp
(bad)
(bad)
enter
cwde
test
xchg
out
ror
stos
jb
pop
aas
js
jne
sub
popa
adc
jp
xchg
sahf
cdq
jecxz
mov
mov
mov
xor
jp
push
sbb
inc
cmp
mov
cli
nop
jmp
shr
add
push
sbb
inc
cmp
mov
dec
ret
push
shl
xor
pop
call
dec
out
lea
and
or
xchg
call
mov
stc
lahf
shl
cmps
sti
jmp
push
mov
sub
pop
fbstp
test
inc
mov
and
adc
jbe
test
or
dec
in
and
lods
arpl
and
or
call
mov
xor
cwde
cs
xor
xchg
inc
push
add
cmp
into
or
jl
jne
stos
jb
adc
iret
ss
mov
jnp
mov
sbb
and
inc
dec
adc
sub
hlt
mov
dec
shr
sbb
adc
sub
cmc
mov
push
adc
xchg
push
jmp
xchg
(bad)
mov
mov
jl
repnz
sti
out
(bad)
mov
nop
inc
xchg
jg
mov
or
aaa
or
adc
jge
lods
shr
pushf
inc
cwde
lea
mov
mov
sbb
pop
fcomp
mov
adc
mov
(bad)
xor
xor
out
or
sbb
popa
mov
outs
xchg
sar
cld
xor
push
fs
and
mov
pop
in
fs
imul
inc
jbe
jl
test
xchg
push
arpl
add
mov
out
add
mov
jno
add
mov
cmp
mov
jne
cmp
jl
mov
movs
xor
iret
cmps
js
fmul
sub
and
adc
mov
shl
inc
jb
mov
add
mov
lods
stos
enter
cmp
into
sub
mov
push
movs
xlat
daa
movs
pop
movs
xchg
out
jge
sub
js
inc
sub
addr16
stos
js
iret
inc
(bad)
bound
call
loope
addr16
mov
mov
xchg
cmp
data16
add
cmp
ss
sbb
or
mov
dec
js
retf
mov
add
sub
nop
sbb
push
mov
shr
cld
mov
sub
es
stc
fist
cmp
nop
iret
stos
popa
cmps
test
adc
in
jo
cmps
push
jbe
iret
xchg
push
fwait
dec
lock
add
aaa
pusha
push
inc
out
scas
aam
add
int
cmp
add
cmps
sar
pop
mov
push
out
cmp
xchg
xchg
cmps
es
inc
and
sub
push
jge
inc
imul
mov
sub
fdivr
mov
cli
mov
pop
inc
mov
popf
mov
movs
outs
loop
push
repz
inc
sub
mov
pop
pop
sub
(bad)
jmp
call
fcos
add
stos
cmp
fst
retf
(bad)
ins
cld
xchg
adc
cmp
(bad)
inc
test
std
scas
fidivr
cs
xchg
and
outs
xor
xor
test
push
dec
dec
add
mov
bound
sub
pop
jmp
jle
lahf
and
lahf
and
shl
loop
jmp
and
aaa
shr
jb
leave
sti
scas
retf
mov
inc
mov
repz
sbb
sub
mov
gs
ja
ret
and
sbb
sub
cmp
push
mov
push
push
mov
enter
fldcw
aad
mov
in
jno
popf
scas
stos
push
imul
adc
mov
dec
pusha
in
imul
scas
sub
and
ds
inc
push
stos
and
dec
mov
ret
inc
lods
nop
add
fnstsw
push
popa
mov
jnp
inc
pop
lock
inc
mov
repz
stc
rcl
cmp
(bad)
loopne
mov
push
mov
or
mov
mov
cmps
cmp
je
jle
lock
into
fdiv
dec
(bad)
or
pop
jb
daa
test
jmp
fs
ins
mov
and
ins
push
imul
dec
or
push
mov
xchg
add
loopne
xor
jae
or
popf
repnz
ret
mov
mov
jecxz
movs
add
inc
test
mov
mov
mov
pop
mov
xchg
(bad)
or
cdq
jnp
lock
cmp
jp
(bad)
push
sbb
jmp
mov
addr16
fist
sub
aaa
nop
adc
out
int
test
mov
adc
icebp
int3
pop
mov
jle
add
pop
(bad)
sbb
adc
inc
mov
sbb
jle
jns
out
icebp
retf
clc
test
sbb
mov
mov
jbe
sbb
das
sti
popf
push
xor
mov
fmul
jo
xor
(bad)
and
mov
es
pop
ffree
retf
retf
mov
repnz
shl
adc
popa
int
xlat
in
sbb
rcr
jg
or
fwait
movs
xor
aad
lahf
pop
add
bound
js
arpl
add
and
pop
movs
mov
mov
push
mov
inc
pop
cmp
push
inc
mov
cmovns
push
pop
sub
cdq
bound
xchg
add
ret
mov
popf
in
push
mov
aas
(bad)
cld
nop
je
jbe
pop
pusha
cmp
lds
(bad)
aam
sub
(bad)
xor
jo
pushf
loop
lock
mov
imul
mov
stos
ret
add
sbb
ds
mov
nop
mov
out
ja
adc
loop
cmp
or
inc
xchg
cmp
xchg
adc
sub
fild
test
enter
mov
lahf
inc
cmp
pop
(bad)
mov
iret
pushf
nop
push
add
cdq
retf
adc
or
mov
add
and
lds
scas
out
sbb
leave
dec
xor
push
out
ss
cmp
or
sub
cmp
gs
loope
scas
retf
add
push
dec
loope
push
jmp
bound
stos
pushf
mov
retf
jmp
or
jl
popa
sub
cmc
push
sbb
lds
and
xchg
mov
xchg
hlt
nop
repnz
xchg
(bad)
cwde
push
(bad)
iret
adc
add
mov
test
adc
(bad)
and
pop
cwde
or
mov
ret
pop
arpl
popa
mov
aam
movs
leave
ss
mov
sti
and
inc
jge
mov
and
and
je
jb
dec
cmc
cmp
das
out
cdq
and
push
push
pusha
xchg
inc
push
and
fstp
mov
cli
adc
dec
sbb
xor
add
scas
and
and
daa
jp
xor
test
into
test
loope
sub
xchg
sub
ja
and
mov
mov
repnz
pop
pop
mov
stc
xor
lds
jge
daa
aaa
loop
bound
xor
je
scas
jl
movs
es
xchg
xor
sub
aaa
outs
add
sub
cmp
or
loope
retfw
cmp
mov
fnstcw
int
add
jge
mov
inc
fild
in
movs
clc
nop
mov
lock
(bad)
mov
mov
cs
mov
(bad)
cmp
mov
sbb
add
jae
cmc
mov
jns
cwde
mov
hlt
cmp
hlt
mov
and
shl
sub
dec
xor
das
mov
ret
icebp
xchg
nop
div
xor
cmp
lock
cmp
pushf
sub
repnz
cmps
lock
sub
sub
dec
jp
mov
xchg
add
rol
test
inc
retf
mov
js
inc
jno
bound
int3
ret
sub
pop
aas
je
add
mov
(bad)
(bad)
fstp
pop
fs
(bad)
je
xchg
stc
jns
mov
rcr
or
test
jne
iret
push
aam
dec
aam
fs
cs
xchg
jmp
call
lahf
rol
enter
icebp
pop
ja
jecxz
mov
(bad)
stc
hlt
adc
daa
loope
imul
add
out
mov
scas
out
int
sbb
xor
or
pop
in
sar
sar
es
std
sub
sub
add
mov
iret
inc
adc
fxch
jbe
fwait
call
addr16
jg
dec
sub
or
scas
jg
mov
pop
dec
cld
call
mov
out
lds
mov
call
add
adc
inc
hlt
sbb
mov
pop
call
pop
add
out
sahf
push
fnstenv
mov
pop
push
pop
enter
loopne
pop
mov
bound
xchg
push
in
mov
mov
(bad)
lods
movs
cmp
pop
int
fnstcw
and
or
cli
lds
stos
cmp
xor
push
leave
and
jo
aad
movs
pop
sub
mov
js
ret
jmp
add
adc
jae
mov
lods
mov
iret
inc
cmp
fld
lahf
jp
ss
data16
add
xchg
adc
and
xor
and
jbe
mov
jo
or
sbb
pop
test
test
jmp
out
sahf
arpl
data16
or
mov
dec
xchg
pop
add
jo
or
ret
sub
sub
jbe
xchg
stc
jecxz
pop
mov
pop
test
pop
retf
call
out
rol
adc
xlat
cmp
icebp
sbb
mov
cmp
and
dec
imul
mov
mov
and
cmp
pop
xor
push
stc
xchg
leave
push
mov
pop
nop
jo
cli
mov
jae
mov
xchg
sar
pop
ror
mov
nop
xor
xlat
call
out
xchg
sub
or
jne
mov
xchg
(bad)
ror
lea
in
xchg
jb
retf
and
mov
mov
dec
xchg
xlat
xor
std
fisub
shl
jle
inc
mov
sbb
cs
movs
mov
rcl
(bad)
popa
push
daa
add
jo
push
push
mov
into
sbb
add
mov
cmc
in
or
stos
jl
cld
inc
dec
cwde
fld
fld
div
mov
scas
add
scas
add
or
mov
out
shr
sar
(bad)
arpl
push
icebp
lods
hlt
aam
push
mov
(bad)
xor
imul
push
or
hlt
sbb
stc
into
popa
pushf
mov
je
mov
inc
stos
cmp
int
pop
jno
xor
mov
xchg
fmul
mov
and
or
xchg
pop
push
jmp
out
daa
xor
enter
retf
iret
mov
mov
xor
push
scas
movs
add
inc
lds
jo
pop
or
push
test
out
push
fmul
mov
jo
jns
mov
repnz
loope
xor
jns
or
mov
add
loopne
push
int3
inc
pop
jae
shl
not
and
mov
mov
xor
adc
mov
mov
sbb
icebp
pop
mov
in
mov
pop
push
daa
out
add
mov
loopne
and
fisubr
xchg
xchg
mov
add
add
or
in
rcr
sub
imul
or
mov
push
enter
shl
lds
add
push
pop
int
cdq
jae
or
int3
dec
test
sub
div
fbld
leave
add
jno
fiadd
jns
aaa
inc
xchg
pop
push
rcr
xor
imul
dec
jmp
jo
lods
push
out
test
jne
mov
imul
stc
ja
xchg
adc
jnp
jp
test
cld
into
lods
mov
repz
enter
and
jg
mov
addr16
adc
push
lea
or
xchg
ins
mov
cmp
mov
fisttp
mov
(bad)
pop
mov
pop
pop
push
pop
data16
test
lods
or
and
mov
(bad)
push
aad
rol
stc
xchg
and
clc
div
ins
pop
jle
push
and
sbb
sahf
mov
jecxz
(bad)
outs
repz
adc
xor
je
xchg
xchg
xlat
or
xchg
aas
mov
push
scas
out
adc
aad
mov
xchg
mov
sub
jbe
cmp
cdq
les
fisubr
out
pop
cmps
push
icebp
add
mov
inc
mov
xchg
int
inc
(bad)
pop
push
or
shl
aaa
repnz
sub
push
pop
jo
imul
jle
mov
(bad)
in
cmc
hlt
hlt
sub
inc
imul
jle
pop
and
out
dec
out
push
mov
aas
aas
cmp
aaa
inc
fwait
mov
sahf
cwde
cmp
movs
sub
sbb
xchg
jl
arpl
ins
cli
imul
xchg
loope
adc
call
loope
ins
sbb
pop
mov
xchg
cli
ja
add
out
push
push
pop
shl
dec
push
mov
dec
jg
adc
cs
int
int3
(bad)
cmps
(bad)
jno
add
cmps
stos
sub
sub
lods
scas
std
iret
loopne
jmp
aas
cld
movs
jg
or
xor
loop
dec
mov
aaa
pop
jl
sar
mov
mov
(bad)
dec
cmp
cmp
mov
dec
iret
jno
outs
lahf
push
mov
fs
es
fild
repz
or
je
push
(bad)
jno
cmps
shr
push
fsubr
add
inc
mov
mov
fcom
inc
and
cmp
dec
stc
dec
sahf
frstor
xor
xchg
sub
icebp
mov
push
loop
dec
push
inc
repz
or
adc
push
and
inc
int3
or
push
and
imul
mov
test
xor
inc
inc
out
(bad)
lods
cs
adc
sub
inc
mov
mov
jo
cmp
mov
cmp
adc
pop
sub
and
test
stc
hlt
repz
and
sti
retf
gs
popf
scas
add
mov
dec
js
push
call
push
add
pop
leave
inc
mov
sar
xlat
bound
scas
test
and
mov
mov
imul
repnz
test
repz
mov
retf
dec
jmp
and
add
inc
gs
ror
daa
add
cli
sahf
xor
out
mov
arpl
pop
add
xchg
sbb
cld
shl
pop
xor
jo
mov
ins
sti
inc
mov
fisub
cmp
pop
xchg
add
push
jp
sbb
rcl
ss
das
iret
int3
test
push
lods
push
pushf
pop
out
fst
in
xchg
inc
test
daa
mov
retf
xor
pop
sbb
pop
popa
inc
shl
cs
inc
inc
push
mov
vucomiss
sti
(bad)
cmp
dec
repz
(bad)
std
mov
jno
mov
lods
inc
ja
or
fisttp
adc
cdq
enter
inc
mov
pop
mov
pop
mov
cli
lods
mov
dec
call
ins
mov
jo
retf
unpckhps
mov
aam
xchg
test
test
sbb
dec
or
popa
push
mov
stos
xchg
cmp
fs
or
iret
or
inc
push
pop
sbb
adc
shl
add
xchg
inc
call
mov
sub
and
adc
pushf
cmp
mov
gs
jo
pusha
mov
adc
out
loop
push
adc
popa
pop
scas
push
mov
aas
fucomp
pop
push
lods
neg
clc
mov
fwait
scas
mov
xor
shr
inc
out
push
lock
bound
out
jp
test
xlat
aam
popf
or
(bad)
aas
adc
sbb
clc
sbb
std
push
les
fistp
xlat
push
xchg
or
pop
repnz
jmp
push
mov
dec
cmp
xor
int
repz
dec
or
mov
por
xchg
push
dec
xor
pop
not
fdivrp
sbb
xchg
dec
push
pop
inc
inc
adc
je
ins
add
mov
jbe
out
fimul
cmp
xchg
and
xchg
and
movs
cmp
(bad)
sbb
sbb
lea
imul
mov
into
ins
sub
std
sub
ins
fcomp
xchg
fcomp
adc
jl
inc
(bad)
iret
loopne
inc
cli
cmp
shr
retf
sub
adc
imul
push
(bad)
(bad)
jmp
call
int
mov
cdq
xchg
pop
mov
sub
popf
jge
lods
mov
scas
ins
lahf
ret
dec
ins
xchg
xchg
imul
mov
push
aam
sub
imul
stos
(bad)
push
sbb
(bad)
ja
in
push
sbb
dec
pop
cmp
int
out
sub
jno
cmp
mov
sar
xor
dec
loope
cmp
or
jnp
sub
mov
out
adc
add
jbe
(bad)
adc
in
addr16
and
fidiv
jle
clc
dec
das
xchg
jl
add
sbb
ret
aas
jns
add
pushf
mul
mov
call
out
pop
outs
cmp
shr
lods
fisttp
adc
mov
xchg
sti
rcl
sahf
inc
sub
fcmovu
sbb
bound
dec
retf
pop
test
test
push
mov
push
pop
xor
fidivr
arpl
mov
ret
pop
rcl
xlat
and
mov
dec
and
or
stos
sub
inc
mov
test
lahf
js
fcom
sbb
or
xor
inc
adc
pop
and
dec
leave
repz
push
sub
jae
inc
lds
jbe
add
mov
lock
add
adc
loopne
push
or
sbb
test
data16
mov
ret
sub
hlt
retf
push
adc
hlt
arpl
fdiv
fcmovu
fwait
fs
aam
and
dec
add
js
jge
cmp
xchg
jbe
lahf
mul
and
leave
ins
add
and
cmc
cmp
or
xor
lods
pop
mov
xchg
ja
mov
inc
jecxz
push
rcl
hlt
test
fstp
(bad)
xlat
add
adc
pop
jmp
movs
jmp
cmp
test
sub
aas
data16
test
pusha
adc
inc
jne
ja
ja
pop
mov
cmp
pop
dec
xchg
xchg
int3
adc
das
sub
and
mov
mov
(bad)
xchg
sbb
push
jnp
push
bound
fstp
push
cmp
fwait
jmp
push
jb
in
mov
mov
shl
mov
jmp
je
das
aad
add
call
add
rcr
test
ja
dec
mov
mov
(bad)
out
xchg
sbb
lahf
call
rol
(bad)
int
idiv
lods
and
xor
adc
outs
ror
icebp
in
adc
push
sahf
stos
(bad)
pop
je
fsub
sbb
mov
xor
jg
loope
pop
imul
mov
fsubr
pop
or
popf
jmp
inc
lods
fadd
fcomp
jl
sub
jl
pusha
repz
and
shr
mov
ss
xor
ficom
pushf
fdivr
clc
dec
mov
(bad)
daa
ss
and
stos
inc
and
loop
adc
xchg
pop
shr
push
pop
or
mov
or
test
pop
push
rol
mov
int
je
es
inc
fs
scas
ds
xor
sbb
push
sbb
call
ret
mov
imul
push
out
jmp
pand
sbb
jl
cmp
dec
pop
pop
pop
mov
nop
js
add
(bad)
jb
lock
ret
jle
mov
or
adc
sbb
mov
and
aam
es
into
jge
jge
xchg
sbb
cmps
add
jne
and
push
mov
sub
dec
pop
xor
cwde
repnz
ret
pop
mov
les
enter
ret
ja
sahf
fstp
(bad)
cld
aam
nop
mov
add
jmp
inc
mov
push
es
popf
cs
and
mov
add
stos
ret
jge
inc
mov
dec
cmp
rol
push
jge
retf
ss
ins
dec
js
loope
retf
iret
arpl
das
hlt
cmp
dec
bnd
cs
and
sbb
sbb
pop
ds
mov
lds
push
inc
stc
test
mov
jg
cmps
mov
lods
push
inc
mov
ss
xchg
(bad)
sar
adc
mov
or
leave
mov
mov
test
sbb
fs
retf
nop
jmp
shr
add
push
sbb
inc
cmp
mov
cli
nop
jmp
shr
add
push
sbb
inc
cmp
mov
jp
jmp
shr
add
push
sbb
inc
cmp
mov
cli
nop
jmp
shr
stos
jp
sbb
mov
pop
mov
jnp
imul
mov
sub
out
sar
cs
call
cli
pop
mov
jnp
imul
into
or
cmp
dec
push
fisttp
retf
pop
cli
cs
dec
jle
outs
stos
es
jl
sub
jbe
rcr
or
cmp
sub
sub
test
fidiv
fdiv
pop
ret
sub
push
fisub
lds
pop
pop
cmp
mov
jp
push
jb
jb
adc
out
or
jae
arpl
mov
mov
sar
xchg
cli
pusha
dec
retf
mov
test
pop
mul
fucomp
dec
fisttp
retf
cs
or
inc
(bad)
out
pop
outs
inc
cmp
add
out
retf
pop
daa
push
xor
cmp
dec
imul
stos
popa
fwait
xor
inc
in
push
sub
and
fidivr
add
jmp
enter
shl
popa
add
pop
mov
push
daa
add
(bad)
mov
ficom
mov
push
lds
dec
mov
sbb
sub
fist
push
fwait
inc
mov
in
neg
xor
cmp
sub
pop
out
pop
push
stos
pop
rcr
dec
fwait
sub
and
pop
leave
or
shl
jmp
int3
xor
or
ins
mov
mov
daa
(bad)
and
repnz
sbb
push
std
adc
cmp
sub
fisttp
retf
ds
cs
fwait
dec
mov
outs
stos
sahf
pop
mov
jnp
imul
into
or
cmp
sub
fisttp
retf
ds
cs
fwait
dec
mov
outs
stos
sahf
pop
sub
adc
lods
adc
mov
fild
(bad)
pushf
int3
les
lahf
push
es
add
movs
mov
mov
mov
fsub
fidiv
xlat
and
add
adc
call
jo
sti
leave
jl
xlat
retf
jbe
jmp
ret
loope
jns
pop
mov
(bad)
adc
mov
cmp
ins
out
pop
lea
xor
shl
sbb
shr
jne
add
push
mov
(bad)
loopne
popf
inc
(bad)
neg
test
push
jne
hlt
push
jo
adc
sub
pop
xchg
sub
out
add
cmc
mov
mov
mov
mov
jp
mov
sbb
fsubr
jbe
(bad)
pop
cdq
mov
or
iret
mov
scas
add
xor
mov
out
cli
shr
test
xlat
xchg
loopne
enter
adc
mov
(bad)
mov
sub
mov
sti
mov
lds
mov
jge
or
rcl
loopne
pop
mov
sbb
mov
div
in
bound
mov
sbb
pop
cli
je
sbb
adc
adc
ds
jne
int
outs
ins
retf
xchg
sti
mov
xchg
(bad)
mov
jecxz
pop
clc
mov
stc
or
mov
add
xchg
push
mov
or
add
jbe
mov
ret
ins
dec
std
xor
push
push
jns
test
cmp
add
pop
or
int
rcr
adc
and
pop
cdq
adc
sub
push
fistp
test
pop
adc
inc
cmps
jmp
sbb
sub
dec
cmps
cmp
push
adc
test
pop
(bad)
(bad)
pop
std
ins
stc
xor
mov
sti
repnz
mov
xor
das
jle
add
dec
arpl
or
sub
stc
cmp
mov
jno
test
pop
movs
push
retf
fcom
push
es
mov
push
mov
xchg
ret
jecxz
lods
jle
cmps
mov
jnp
and
xchg
xchg
jbe
out
shl
test
or
xlat
mov
adc
push
(bad)
scas
fidiv
imul
data16
iret
pop
xor
mov
in
and
cli
addr16
std
push
out
mov
pushf
dec
(bad)
jmp
fild
mov
jo
mov
rol
mov
mov
sub
bound
fadd
push
mov
inc
jmp
dec
ret
xor
repz
and
aad
xor
mov
leave
dec
add
xor
mov
mov
mov
aad
(bad)
dec
cmp
popa
and
aas
sbb
or
js
mov
jnp
hlt
mov
sbb
pop
cmp
imul
cmps
loope
xor
push
adc
dec
jecxz
bswap
pusha
mov
mov
ret
stos
mov
sbb
inc
sub
ret
cld
push
cmp
push
pop
icebp
sbb
and
imul
cmp
pop
jl
sar
movs
(bad)
call
xor
dec
push
(bad)
push
and
rcr
sub
ror
mov
xchg
mov
push
ret
pop
push
out
lock
mov
pop
sbb
lock
adc
sbb
loope
adc
pop
mov
push
leave
jg
in
ds
push
cmp
or
lods
bound
(bad)
or
and
mov
pusha
lahf
scas
sbb
jmp
out
cmc
xchg
cmp
in
leave
(bad)
xchg
dec
mov
jbe
repz
cmp
cmp
(bad)
scas
or
adc
jle
imul
out
push
(bad)
leave
inc
int3
xor
imul
mov
mov
ins
add
push
mov
cld
je
fisub
sar
mov
std
clc
(bad)
xchg
mov
and
(bad)
(bad)
icebp
pop
adc
push
sbb
rcl
inc
into
mov
mov
fs
test
call
mov
test
pushf
push
xchg
xor
mov
xlat
ins
push
dec
jecxz
mov
outs
fstp
lods
sub
test
stos
gs
jae
jl
int3
push
push
push
add
add
mov
mov
(bad)
adc
icebp
cmp
and
dec
(bad)
adc
les
cmp
leave
dec
retf
out
push
out
sub
jle
(bad)
jmp
cwde
sbb
mov
or
popw
pop
add
inc
ret
pop
sub
push
adc
inc
jmp
mov
jno
pop
nop
and
in
or
in
push
movzx
arpl
shl
mov
fdiv
movs
arpl
mov
dec
and
mov
clc
loopne
gs
(bad)
sbb
dec
rcr
cmp
jg
mov
in
or
or
xchg
fdivr
jno
push
in
mov
into
pushf
out
add
add
(bad)
mov
jnp
cld
sub
cmp
popa
movs
adc
sahf
inc
or
ds
push
popa
pop
dec
inc
lahf
push
sbb
mov
jge
pop
mov
jo
mov
(bad)
sub
(bad)
adc
scas
cmp
adc
and
cmp
mov
mov
cdq
xor
mov
rol
mov
dec
adc
in
ins
aas
gs
push
das
loop
adc
push
lods
stc
in
and
dec
ins
ret
xor
sbb
js
xor
mov
sub
enter
test
retf
retf
pop
mov
es
fwait
mov
xor
clc
xchg
rcr
xor
jae
in
ja
lock
inc
adc
inc
cmp
sub
cld
test
add
lods
lods
pop
repz
add
or
push
and
loope
sbb
mov
inc
push
jmp
push
pop
test
or
cmp
xor
mov
neg
pop
js
cmp
mov
ret
movs
leave
adc
movs
cmc
cmp
sub
pusha
or
dec
jne
and
out
xor
cs
mov
sahf
iret
mov
ins
dec
(bad)
aam
sub
and
out
add
stos
mov
dec
sub
sub
xor
mov
adc
pop
cld
cld
cmc
cmps
fwait
pop
js
scas
mov
push
dec
push
in
pop
pop
clc
or
arpl
xor
je
add
(bad)
std
or
xor
dec
inc
dec
pavgb
jbe
dec
pop
sbb
addr16
jge
dec
mov
lock
jno
inc
pop
arpl
dec
ss
and
push
push
xchg
mov
push
ret
sub
test
mov
mov
std
fwait
push
bound
test
mov
and
or
cmps
je
rol
or
xchg
lods
or
dec
add
retf
outs
loop
sub
loopne
popa
outs
dec
dec
add
sub
dec
adc
cmp
ror
push
test
jp
adc
mov
push
jns
xor
stc
xor
imul
jo
loop
in
mov
push
lahf
out
sbb
adc
cmp
outs
and
ss
sub
mov
leave
or
test
test
outs
dec
(bad)
jmp
mov
stc
not
icebp
jle
jmp
call
mov
push
push
inc
jp
data16
ret
and
inc
mov
fwait
mov
adc
icebp
in
pop
sbb
out
pop
fisttp
loop
add
ror
out
fistp
cli
aas
cmp
xor
xor
mov
test
out
popa
mov
(bad)
(bad)
ret
(bad)
cmc
xchg
fld
arpl
shl
xchg
or
xor
jle
xor
xor
sub
data16
cmp
retf
out
rcl
cmp
out
adc
test
pusha
xchg
(bad)
scas
(bad)
pop
adc
lods
das
xchg
les
cld
xchg
dec
push
imul
xor
pop
mov
mov
in
cmp
dec
add
xchg
or
and
pop
push
lods
mov
icebp
mov
xchg
push
lock
xor
je
jp
das
fmul
inc
sub
sub
lds
xchg
scas
xchg
mov
lods
sar
inc
push
ins
pop
in
loop
shl
push
ror
and
(bad)
stc
stc
pop
gs
adc
xchg
(bad)
jno
jns
in
mov
(bad)
std
mov
sub
cmp
in
push
lods
jmp
adc
jecxz
fisub
jl
push
adc
mov
cmps
cmps
push
fisttp
sub
mov
mov
xchg
adc
or
cmp
sbb
mov
xor
lods
push
jne
icebp
scas
or
xor
push
into
dec
bound
dec
push
push
ds
je
aas
cmp
cmp
jmp
fsubr
jmp
repz
sub
sbb
popa
cld
ficomp
jo
adc
(bad)
retf
cmp
out
ror
inc
mov
call
push
jne
xor
ret
cmp
test
fwait
sar
call
and
test
js
and
out
addr16
out
rol
addr16
(bad)
scas
dec
xor
in
sbb
movs
mov
xor
idiv
in
jecxz
ds
or
nop
retf
adc
lea
fsubr
push
xchg
jnp
aad
movs
push
inc
lods
rol
std
sub
fist
mov
push
sbb
jne
outs
cmps
lock
push
stc
neg
pop
and
mov
jb
mov
out
fwait
add
cmps
addr16
jne
das
out
int3
or
fdivp
mov
jae
ins
(bad)
stos
call
dec
scas
retf
sub
mov
adc
or
xchg
inc
lahf
sahf
fbstp
out
outs
jnp
pop
outs
ret
hlt
mov
pushf
inc
jne
xchg
sar
mov
push
dec
xor
mov
or
mov
or
sahf
push
sbb
scas
jne
test
jne
pop
jp
mov
push
jge
mov
iret
mov
popf
cmp
add
lahf
add
jne
aad
sub
push
or
mov
gs
xor
pop
loop
dec
fwait
add
and
and
lock
mov
ja
dec
push
dec
cmp
out
out
movs
shl
adc
jecxz
fstp
retf
mov
js
das
mov
xlat
icebp
hlt
mov
bound
fs
add
loop
sbb
xchg
enter
leave
repnz
imul
add
aas
cld
test
jg
pop
xor
cmp
adc
or
push
jne
push
jle
lds
sbb
pop
call
hlt
repz
les
movs
scas
loop
movs
sub
push
and
pop
fmul
lds
retf
pusha
lods
lahf
or
jg
shl
(bad)
stos
push
mov
or
enter
add
out
cmp
data16
js
fadd
ud0
jnp
inc
inc
jg
or
jb
mov
mov
(bad)
ja
cmp
push
inc
in
cld
out
pop
pusha
jmp
js
lds
hlt
mov
dec
cmp
xchg
jno
pop
pusha
repz
shl
scas
sar
sahf
stc
mov
test
mov
shr
and
test
outs
pop
(bad)
jmp
(bad)
cmp
test
aaa
mov
call
les
sar
gs
mov
stc
cdq
adc
jno
cmp
push
aad
push
popf
in
outs
push
jae
pop
stos
test
dec
inc
xor
and
sti
mov
jmp
add
(bad)
mov
push
pop
xchg
xchg
mov
mov
daa
mov
loopne
icebp
ret
retf
rcr
rcl
jnp
icebp
or
dec
mov
dec
push
daa
pusha
retf
xchg
cmp
jno
cmp
push
addr16
leave
and
sbb
pop
jge
fsubr
pushf
ins
mov
leave
into
jl
scas
or
pop
pushf
xchg
imul
mov
mov
call
adc
aam
inc
aaa
mov
jne
nop
das
popa
push
jb
(bad)
inc
sbb
adc
mov
mov
test
xor
mov
test
out
jbe
cmp
retf
in
inc
ds
mov
mov
lods
and
aam
ret
mov
test
hlt
icebp
dec
cli
pop
lea
xchg
push
or
iret
fidiv
neg
loopne
pop
ss
sbb
jl
mov
sbb
mov
out
aaa
loop
add
adc
out
sub
adc
aas
sub
xlat
push
ficom
ss
pop
mov
pusha
jecxz
in
sub
es
imul
mov
dec
pop
in
adc
test
mov
shr
ja
loopne
pop
push
inc
out
ss
addr16
adc
adc
fs
inc
mov
out
jmp
es
push
imul
cdq
test
call
icebp
iret
in
pop
sbb
push
lea
mov
jno
mov
dec
adc
lds
inc
daa
shl
out
add
jg
sub
in
ss
or
call
es
sbb
loop
push
xor
fdivr
rol
(bad)
inc
cmp
add
and
adc
imul
xchg
xor
add
mov
pop
pop
push
pop
test
sahf
adc
lahf
inc
inc
test
mov
and
jmp
test
jns
retf
outs
shr
daa
jmp
shl
xor
fwait
sub
xchg
scas
jnp
cmp
loope
mov
outs
sub
mov
std
gs
sub
jecxz
push
iret
imul
sub
mov
sbb
and
ja
add
cmc
xchg
cmp
stos
std
cwde
ret
dec
mov
aaa
ucomiss
cmp
int3
or
(bad)
or
(bad)
cmc
adc
cmps
xor
jg
fwait
push
cmp
add
inc
xchg
sbb
pop
or
mov
mov
retf
push
mov
ret
inc
cdq
sub
jecxz
inc
dec
cmp
xchg
jne
cmp
movs
in
aam
push
test
call
pop
test
pop
mov
loopne
pop
sub
mov
mov
out
popa
push
jae
scas
jbe
mov
push
xor
test
cld
jb
jns
lds
loopne
(bad)
pause
out
adc
mov
into
lock
repnz
repz
movs
jo
shr
rol
fsub
cmp
int3
push
jg
dec
add
pop
push
test
mov
(bad)
out
jg
adc
out
test
mov
dec
pop
jg
sbb
cmp
mov
retf
ror
lock
pop
add
pop
shl
mul
aad
pop
mov
lods
add
(bad)
sbb
in
jl
jnp
popa
mov
dec
int3
xor
mov
mov
xchg
mov
(bad)
mov
inc
lahf
mov
movs
push
mov
push
pop
dec
imul
mov
je
dec
(bad)
sub
xchg
sub
pop
(bad)
adc
push
fmul
jnp
mov
aam
in
dec
ret
aas
jbe
lea
stc
pop
xor
loop
add
test
cmp
cmp
cwde
mov
cmp
hlt
int
jno
xor
add
cmp
lods
js
add
movs
and
out
mov
add
add
and
inc
xor
cdq
(bad)
and
xchg
jle
(bad)
jne
out
outs
adc
mov
in
movs
mov
addr16
or
push
mov
sbb
cmps
or
hlt
xchg
xor
scas
add
mov
mov
aaa
push
vaddsubpd
shl
hlt
push
xchg
rcl
adc
fxtract
jns
xor
cmp
int3
jbe
xchg
mov
stos
clc
jno
sahf
lds
sahf
push
ret
xchg
cmc
mov
jmp
push
repnz
pushf
(bad)
jle
add
ret
sbb
repz
sbb
jle
xor
pop
imul
std
stc
cdq
lahf
(bad)
aaa
cmp
xchg
sbb
hlt
aad
cmp
add
arpl
push
sub
and
test
sub
xchg
mov
movs
test
outs
jae
ins
pop
push
out
jg
sbb
sub
push
test
clc
(bad)
xor
dec
js
pushf
xlat
(bad)
sti
outs
dec
sbb
jg
push
in
sti
or
test
jb
or
add
pop
mov
push
lahf
repnz
sahf
mov
cmp
xor
shr
jmp
fsubr
jo
xchg
dec
sub
retf
inc
mov
or
gs
and
scas
and
push
lock
retf
adc
adc
push
das
scas
xchg
sbb
rol
hlt
mov
mov
call
pop
cs
loop
xchg
sub
iret
hlt
mov
cs
mov
xor
lods
movs
idiv
inc
fnstsw
mov
push
js
popa
and
ss
ror
ret
stos
loope
cmc
pop
mov
in
pop
fnstsw
out
mov
add
and
aad
je
adc
inc
loop
xor
clc
mov
sbb
push
ret
pop
pusha
scas
mov
retf
xchg
stos
dec
fmul
and
test
and
(bad)
(bad)
sub
mov
inc
es
out
jmp
movs
adc
imul
push
int
nop
dec
gs
sub
mov
push
ins
leave
or
fimul
push
cmp
cmp
pop
push
xchg
mov
mov
mov
xlat
rep
and
push
sar
in
xor
(bad)
cs
xor
mov
cmps
mov
xchg
jg
pop
sub
xchg
ret
outs
mov
add
in
jp
xchg
mov
(bad)
jecxz
jnp
es
cmp
in
pop
mov
mov
dec
fwait
adc
push
call
mov
(bad)
pop
cs
push
cmp
jge
std
dec
cmc
lahf
jmp
stos
cmp
je
lods
sbb
cwde
test
in
cld
sbb
sbb
xchg
jp
test
pop
in
leave
movs
lock
movs
mov
mov
add
pop
aaa
adc
test
js
mov
ret
push
sub
mov
mov
in
mov
push
and
xlat
pop
out
cli
sti
cmps
dec
add
gs
pop
xchg
sub
or
js
inc
movs
movs
or
xor
lds
add
scas
xchg
rol
mov
sub
mov
inc
push
rol
shl
pop
mov
push
mov
sahf
pop
ficom
jle
je
mov
retf
cld
(bad)
call
add
pop
rcl
sahf
int3
loopne
pop
xchg
cmp
dec
sub
aaa
arpl
mov
popf
in
aad
shl
out
dec
jmp
imul
mov
test
jo
aad
stc
inc
or
xchg
adc
addr16
daa
ret
sbb
and
xchg
test
inc
push
sti
push
repz
addr16
or
pop
sub
ret
ja
push
cmps
cmps
add
mov
stos
jbe
jmp
(bad)
imul
movs
mov
and
idiv
sbb
shl
sub
lods
cld
pusha
repz
sbb
retf
movs
enter
sbb
adc
int
pop
xor
or
rcl
pop
je
popw
add
aaa
adc
pop
jmp
and
(bad)
mov
ins
xlat
test
cli
ret
mov
cmp
add
cld
cmp
dec
mov
mov
and
adc
fstp
adc
ror
and
and
dec
nop
mov
retf
mov
push
sub
pop
ins
jb
ret
sqrtps
push
add
xchg
cmp
les
push
scas
in
call
sahf
adc
popa
jmp
xchg
and
ins
ja
cmps
cmp
cmp
mov
adc
xchg
add
push
imul
movs
pop
cmp
jne
inc
daa
lock
dec
stos
movs
test
sub
push
sahf
rol
ins
or
or
pop
repz
and
int3
pop
jb
clc
sahf
xchg
xor
inc
inc
adc
xor
(bad)
push
xor
fcom
clc
fdivr
mov
xor
dec
and
inc
inc
cmc
sar
pop
inc
mov
jae
add
adc
mov
or
pop
aaa
shr
mov
es
std
or
inc
out
movs
adc
push
xchg
fisttp
and
test
and
scas
push
jb
mov
aam
xchg
jge
dec
pop
inc
jmp
xor
and
(bad)
cmp
cs
fstp
and
jp
xor
lds
call
sar
lock
mov
ins
dec
and
xor
iret
sub
xor
sti
xchg
popf
ds
cmp
mov
mov
inc
cmp
jle
mov
push
add
jae
xor
stc
jnp
imul
into
or
cmp
sub
fisttp
retf
ds
cs
fwait
dec
mov
outs
stos
sahf
pop
mov
jnp
imul
into
or
cmp
sub
fisttp
retf
ds
cs
fwait
dec
mov
outs
stos
sahf
pop
mov
imul
or
cmp
sub
fisttp
retf
into
sti
cs
fwait
pop
mov
xchg
in
mov
sbb
or
cmp
push
fcomi
popa
xchg
sti
cs
sub
(bad)
je
inc
xchg
push
push
mov
sub
lea
push
push
push
push
call
mov
dec
dec
je
sub
je
sub
je
call
mov
call
call
push
push
push
push
call
jmp
movzx
sub
je
dec
je
push
push
push
jmp
push
call
jmp
push
push
push
push
push
call
jmp
lea
push
push
push
call
mov
lea
push
push
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
push
call
pop
jmp
push
call
xor
leave
ret
stos
sub
gs
mov
scas
icebp
mov
inc
or
imul
and
mov
fwait
in
xchg
sti
or
mov
shr
push
cmp
jne
imul
dec
jne
and
mov
out
test
fstp
js
xor
ins
add
aad
stos
clc
sub
stos
mov
and
push
loope
ret
mov
and
(bad)
jo
jnp
pop
pop
aam
scas
push
pop
rcl
fnsave
adc
xchg
adc
(bad)
dec
xor
test
aam
rol
retf
mov
jmp
fcom
hlt
clc
jno
retf
xor
fwait
xor
std
in
pop
jmp
jmp
xor
stos
sub
xchg
adc
cli
dec
fstp
push
ror
loope
mov
ror
fisub
sbb
jns
stos
and
ficom
js
in
fist
sar
push
xor
push
pop
jnp
push
sub
push
adc
cli
dec
xor
mov
out
jmp
sti
test
outs
(bad)
or
sub
dec
xor
rol
out
mov
retf
xchg
mov
scas
fcomp
add
ja
push
jp
jno
je
inc
test
leave
test
xchg
inc
lods
cli
xchg
mov
fcmovnu
leave
dec
xor
adc
pop
add
inc
das
dec
cmp
ret
and
call
mov
movs
sub
inc
or
imul
and
mov
fwait
in
xchg
sti
test
mov
movs
sub
inc
or
imul
and
xor
leave
xor
fxch
jae
mov
mov
movs
cmp
es
fldcw
test
push
repnz
ror
daa
jnp
mov
in
shl
push
mov
(bad)
fcmovnu
arpl
pushf
or
lock
push
aam
xor
scas
ins
fnstenv
pop
mov
mov
and
pop
xchg
dec
inc
mov
cli
xchg
test
aam
test
adc
(bad)
fist
sar
mov
mov
rol
cld
inc
jo
mov
mov
pop
add
test
ficom
outs
inc
pusha
xchg
pushf
and
test
cld
mov
in
les
outs
cmps
fisub
dec
or
pushaw
sub
or
in
adc
mul
mov
cdq
test
or
popf
jge
ror
jns
xor
add
xlat
(bad)
adc
ds
inc
add
mov
sbb
hlt
cld
stos
pop
fdivr
mov
inc
gs
jmp
add
pop
stos
xchg
xchg
ror
push
and
addr16
and
test
sub
pop
sub
inc
outs
test
or
mov
cmp
mov
xlat
aas
test
dec
xchg
jp
ss
int
test
mov
adc
inc
out
push
div
bound
aas
into
pop
loopne
dec
pop
or
hlt
nop
rcl
out
pop
ret
mov
loopne
enter
hlt
jge
movs
push
xchg
mov
outs
clc
jmp
xchg
and
cmp
xor
fwait
out
fist
xor
sbb
push
lock
scas
sbb
in
icebp
xchg
fst
mov
sbb
shl
add
add
aas
cmps
mov
push
clc
inc
jo
movs
pop
pop
aad
or
or
fsub
mov
push
xchg
imul
add
xchg
rol
inc
hlt
mov
dec
xor
mov
aaa
inc
push
dec
push
jbe
and
dec
sub
fdiv
fcomi
add
fucomp
push
jmp
and
mov
out
cdq
mulps
and
mov
push
stos
xchg
das
xor
ds
cmp
rol
push
cmp
daa
in
jae
scas
pop
sub
add
push
scas
mov
and
mov
sub
push
or
jbe
sub
jle
stos
pop
mov
in
mov
push
mov
and
mov
dec
fsub
mov
pop
mov
xor
pop
jmp
mov
into
test
neg
push
mov
jo
mov
enter
mov
test
sub
mov
cli
mov
jae
mov
das
sti
pop
mov
adc
push
push
push
jae
out
dec
inc
mov
xchg
outs
mov
pop
sub
gs
push
sbb
and
xor
shl
jecxz
ret
(bad)
mov
push
sbb
mov
imul
mov
push
cmp
je
not
xchg
retf
cmp
repnz
(bad)
cmp
pop
and
cwde
push
inc
test
xor
push
ret
dec
es
popf
cmc
imul
mov
cmp
mov
xchg
fcomp
inc
cmp
mov
in
es
in
jmp
cli
add
dec
and
add
jo
retf
loop
xor
pushf
test
cmps
push
xor
ret
(bad)
jae
xlat
(bad)
stc
ins
jp
dec
lea
scas
xor
fld
mov
or
or
pop
jecxz
aaa
xchg
addr16
ins
lea
add
and
sub
sbb
retf
xor
fs
mov
stos
dec
mov
stos
imul
cmp
push
add
lock
adc
xor
dec
inc
mov
xchg
push
repz
add
xchg
pop
cs
call
mov
mov
pop
jns
fwait
push
clc
enter
sub
cs
jbe
f2xm1
mov
adc
sub
jno
mov
retf
xchg
dec
(bad)
jns
sbb
cmps
or
mul
xor
into
aad
ret
sbb
ins
push
adc
mov
adc
imul
pop
lock
rep
es
push
push
mov
inc
repnz
xchg
mov
lea
in
nop
mov
sub
push
push
xchg
adc
push
cmps
sbb
xlat
add
jge
std
xchg
fbstp
and
xchg
nop
push
mov
xchg
loopne
test
mov
hlt
mov
stc
call
jmp
push
mov
push
mov
int3
xchg
(bad)
icebp
int3
xor
out
cmp
jbe
in
in
stos
test
pop
ins
jo
cmp
jge
dec
ja
pop
inc
mov
popa
popf
dec
loopne
ins
std
cwde
ins
add
add
enter
retf
pop
add
push
mov
aas
jbe
push
xor
pop
jbe
adc
test
arpl
scas
dec
mov
jbe
mov
aas
xchg
push
inc
push
xchg
mov
dec
outs
in
mov
loope
gs
mov
and
mov
push
clc
outs
cmp
xor
mov
fcomp
in
lods
mov
call
fucomi
in
sub
es
sbb
push
add
and
cmp
les
lods
pop
retf
adc
pop
bound
push
movs
pop
rcr
inc
ins
mov
ficomp
jo
icebp
sbb
push
movs
test
mov
lds
pop
test
add
fdiv
jb
inc
dec
cld
int
push
and
pop
scas
jbe
dec
(bad)
shl
mov
rcr
enter
mov
nop
je
js
pushf
mov
mov
fmul
mov
xor
mov
out
outs
imul
mov
stos
mov
dec
push
les
mov
xlat
push
cli
lods
or
and
mov
sahf
pushf
xchg
xor
stos
adc
or
jge
push
test
neg
sti
daa
lea
push
add
fild
nop
lods
jmp
loope
or
in
addr16
nop
xchg
push
push
mov
or
mov
aam
inc
jae
pop
sub
sub
inc
xor
dec
or
cli
dec
stc
jecxz
and
test
dec
jle
pop
out
hlt
jbe
add
sbb
(bad)
or
pop
xchg
dec
sbb
lods
ja
xchg
std
add
pusha
xor
xor
and
mov
das
es
into
test
sbb
pop
push
and
cs
dec
stc
pop
aad
test
daa
sub
pop
aaa
clc
and
cmps
fcmovbe
dec
push
call
adc
loopne
mov
shl
pop
out
sub
mov
mov
pop
sbb
les
jmp
iret
xor
xchg
push
xchg
cmc
or
sub
add
sahf
loope
cmc
sub
sub
ds
mov
sahf
clc
sti
inc
inc
mov
mov
jnp
movs
sbb
ret
test
or
inc
adc
jno
push
jbe
jno
pop
sub
rep
aaa
nop
cmp
cmps
add
pop
adc
daa
mov
inc
adc
rep
adc
xchg
mov
mov
in
sub
mov
imul
push
(bad)
scas
inc
jo
ja
push
inc
mov
std
xchg
mov
push
inc
retf
or
les
stc
(bad)
adc
push
nop
outs
sub
cmp
mov
add
mov
mov
call
adc
cmps
outs
jle
stos
(bad)
aad
out
sub
lds
xor
repnz
or
jp
mov
sbb
popf
mov
sti
frstor
or
out
mov
imul
lds
fs
inc
rdpmc
adc
leave
ror
sar
test
out
mov
xchg
pop
aam
mov
mov
mov
cmc
inc
lods
push
push
jg
(bad)
xlat
ret
ficom
aad
mov
pushf
xchg
rcl
retf
cmc
stos
mov
nop
call
xor
sub
and
lods
adc
sbb
aam
mov
xor
mov
jl
mov
cmps
pushf
repz
xor
xor
push
mov
jecxz
aam
mov
push
ret
(bad)
xor
cmp
aam
pusha
mov
and
adc
adc
jecxz
hlt
repz
mov
push
dec
popf
pusha
mov
jmp
jb
and
push
lods
cmp
out
mov
jmp
xchg
mov
cmp
dec
aad
xchg
or
jmp
xchg
cwde
mov
mov
cmc
xchg
jno
inc
loope
fcom
out
iret
leave
ret
mov
imul
pop
int3
xchg
pop
hlt
jp
add
adc
in
ret
mov
mov
push
retf
(bad)
out
imul
retf
adc
pushf
fmul
popa
rol
(bad)
lock
inc
hlt
xor
daa
shr
pop
imul
pop
jecxz
or
lea
inc
push
pop
xchg
hlt
pop
les
and
mov
sbb
inc
push
sub
and
aas
adc
add
cmp
in
inc
fcomi
push
cs
add
call
or
push
lods
and
jp
cli
mov
shl
push
or
xchg
movs
sub
xchg
fbstp
or
arpl
outs
push
xchg
jne
fiadd
jecxz
data16
fcomi
in
cdq
pop
(bad)
int
cdq
dec
push
xchg
push
(bad)
aas
je
and
pushf
push
ret
cmps
xor
adc
sahf
pop
cmp
push
jne
mov
cmp
xchg
iret
and
push
xor
and
mov
mov
cmp
arpl
ret
cmp
sbb
xor
stos
mov
push
or
xor
push
sbb
cmc
scas
test
retf
cmp
outs
pop
adc
xor
ja
and
cmp
aas
mov
xchg
push
xor
lock
xchg
jno
iret
je
iret
(bad)
fnsave
mov
xchg
(bad)
(bad)
cmps
lahf
pop
test
sub
nop
inc
or
xor
test
xor
jne
mov
test
rcl
ror
fdiv
adc
dec
les
sahf
cdq
ds
bound
jno
pusha
out
into
add
mov
add
retf
pop
mov
sbb
hlt
into
sub
out
popf
inc
fs
popa
nop
fxch
or
fwait
test
add
sbb
mov
cli
and
mov
cli
out
adc
jno
xchg
push
xchg
aas
loop
cs
cmp
jb
shr
ror
mov
sahf
mov
or
add
jb
push
mov
mov
jl
add
stos
mov
cmp
in
test
adc
pushf
sbb
test
push
adc
js
(bad)
imul
jge
and
mov
test
mov
int
mov
adc
test
iret
sub
jae
adc
mov
mov
sbb
dec
mov
imul
fild
(bad)
leave
das
adc
data16
mul
sbb
imul
sbb
and
out
sbb
je
ret
add
cwde
sub
aas
mov
icebp
ins
sub
xchg
mov
sbb
lahf
data16
fldcw
jp
test
push
lahf
shl
ficomp
ja
mov
sub
aaa
mov
arpl
ja
outs
add
push
cmp
xchg
sahf
inc
(bad)
stc
popa
adc
ds
shl
mov
scas
jmp
or
out
inc
test
dec
jecxz
pop
xor
test
pushf
xchg
cmp
sub
out
pop
adc
outs
pop
movs
add
int3
inc
mov
int
pop
lahf
cdq
stc
enter
mov
in
ficomp
jb
int
pop
lea
ins
sub
inc
pop
fcomp
js
mov
pop
dec
add
sbb
clc
lds
aam
cmp
rol
inc
sub
inc
js
stos
xchg
add
xchg
add
jge
sbb
shl
push
jg
imul
xchg
pop
push
inc
mov
in
mov
(bad)
push
jno
es
xchg
test
idiv
adc
cmp
or
cwde
adc
mov
fst
xor
popa
out
stos
adc
dec
mov
jno
and
mov
lds
cmp
xchg
adc
aad
dec
cmp
mov
add
jne
fwait
leave
(bad)
repz
mov
jp
lods
adc
cdq
loop
neg
adc
movs
or
repnz
pop
call
or
mov
inc
int
xchg
inc
repnz
pop
ins
cmp
sub
je
call
push
cmp
cmp
shl
rcl
mov
(bad)
test
sub
(bad)
ds
pop
mov
push
or
out
xor
xor
js
xchg
aad
push
mov
add
xchg
imul
and
push
mov
xor
push
pop
push
imul
jbe
cdq
sar
pop
or
ja
sbb
xor
adc
adc
jge
call
xchg
push
and
jl
stos
scas
call
in
loop
or
rol
les
sub
pop
cmp
retf
cmp
aad
enter
imul
fidivr
pop
inc
push
jb
mov
and
outs
xchg
jae
sahf
or
sti
mov
call
jmp
push
test
add
xchg
lods
xchg
idiv
movs
pop
mov
cwde
outs
shl
fldcw
clc
pop
add
fmul
adc
mov
dec
imul
mov
(bad)
lds
ja
xchg
dec
mov
lock
daa
es
inc
xor
mov
mov
loopne
cli
test
hlt
push
test
(bad)
loop
ds
int3
rol
sub
fisub
add
add
call
and
jno
dec
cmc
pop
aam
sbb
rcl
lods
mov
jb
jne
shr
call
jle
test
cmp
daa
inc
out
sbb
xor
and
pushf
test
xchg
pop
and
pop
aas
es
ja
inc
in
ss
leave
fwait
push
pop
add
aam
dec
and
mov
ja
clc
imul
mov
and
jbe
pusha
loop
dec
cs
bound
push
cmps
loopne
adc
cmps
fwait
xchg
pop
mov
frstor
in
in
int3
js
jae
adc
sub
mov
ss
test
push
cmp
adc
xchg
jmp
pop
cmp
repz
and
dec
mov
xor
nop
xor
in
pop
add
xchg
ret
icebp
ja
add
mov
fild
mov
stos
xor
aas
and
mov
dec
rcr
add
mov
mov
shl
add
add
jge
xor
out
fs
jne
lahf
enter
ss
mov
cmp
cmc
mov
ret
sbb
in
jmp
jns
call
dec
sub
(bad)
jp
gs
inc
shl
int
test
(bad)
fldenv
jbe
lds
js
mov
pop
addr16
xor
cmp
iret
cmps
adc
jmp
jno
lods
int3
or
out
xchg
mov
mov
imul
fistp
mov
imul
jnp
out
inc
push
jl
mov
rol
ret
or
icebp
push
rcl
test
push
stos
in
inc
sub
movs
dec
mov
nop
sbb
jle
bound
data16
xchg
aaa
es
daa
dec
pop
pop
push
in
sub
inc
rcr
arpl
jecxz
xor
xor
imul
mov
push
test
ins
dec
mov
aaa
cvttps2pi
and
xor
cwde
adc
std
test
adc
inc
cmps
cmp
loope
sbb
inc
inc
sbb
mov
sti
xor
stos
add
inc
lock
cmp
fbstp
ret
call
fsubr
ins
ja
gs
mov
enter
push
jle
cwde
jp
clc
mov
jl
mov
sbb
adc
inc
mov
or
ret
daa
pop
out
xchg
out
aas
push
push
(bad)
gs
xor
mov
ret
adc
push
xor
fs
repnz
call
mov
inc
add
add
push
enterw
int
(bad)
div
inc
gs
cdq
add
jl
out
mov
mov
adc
cmp
outs
icebp
mov
lods
retf
das
mov
call
push
xchg
fld
dec
cmp
aam
retf
or
mov
mov
xchg
ja
bound
mov
xchg
(bad)
imul
xor
pop
sbb
mov
test
sbb
movs
pop
pop
ds
adc
push
aaa
mov
xchg
loopne
sub
cmps
mov
jl
test
das
sar
or
mov
mov
icebp
xchg
add
fmulp
and
(bad)
jle
adc
fisttp
xchg
dec
xchg
cmp
leave
ja
addr16
dec
lahf
push
cmc
loop
xchg
add
into
sar
mov
es
mov
xor
cmp
es
frstor
or
xor
sbb
pop
jge
rcl
mov
jg
or
aam
xor
std
push
popa
leave
data16
shl
in
mov
ror
push
loop
hlt
mov
dec
cli
popa
sub
out
cdq
stos
sub
mov
or
not
pop
iret
outs
jmp
or
jl
cdq
push
cld
lds
xor
dec
sbb
xchg
(bad)
ins
xchg
std
adc
ror
(bad)
popf
jecxz
cmp
sub
sub
pop
xor
rcr
(bad)
imul
mov
sbb
inc
jp
aaa
and
jnp
lods
and
or
sub
cmc
cmp
je
inc
cmp
rcr
cmp
xor
scas
push
mov
push
addr16
lock
shl
cmp
pop
std
push
lds
pop
cmp
add
imul
imul
call
das
jl
clc
imul
pusha
add
xor
jmp
and
pushf
push
retf
dec
and
repz
add
and
jae
je
push
inc
icebp
or
jbe
push
xor
jo
and
and
jecxz
inc
gs
ins
fsubr
mov
push
popf
scas
and
jmp
mov
(bad)
inc
and
pop
push
in
xchg
mov
push
push
sub
movs
jmp
or
jne
jae
out
xchg
and
loope
pop
pop
cmc
push
xor
mov
pushw
mov
adc
or
jle
call
out
cld
sbb
scas
stc
leave
mov
lods
add
std
sbb
inc
fidivr
sbb
clc
out
cmp
fst
loopne
cdq
mov
pop
cli
fisttp
xchg
pop
out
into
push
pop
enter
mov
ret
lahf
test
lods
push
mov
fnstenv
sar
add
div
cmp
xchg
mov
lahf
mov
stos
lods
out
fwait
aad
imul
and
cmp
cwde
inc
scas
ja
(bad)
sbb
retf
(bad)
loopne
test
aaa
mov
sub
jbe
loope
or
push
sbb
mov
inc
inc
adc
fisub
ins
mov
mov
sbb
inc
adc
mov
clc
jmp
and
in
loopne
out
mov
mov
pop
lahf
fadd
pop
mov
in
xor
lock
xchg
test
xor
jge
or
cmp
xor
(bad)
fxtract
popf
mov
(bad)
bound
sbb
into
mov
jecxz
push
pusha
frstor
cli
in
popf
sbb
repz
mov
push
repnz
imul
ja
in
xchg
(bad)
pop
add
pop
icebp
not
mov
push
(bad)
mov
jl
fidiv
mov
mov
lock
inc
or
or
jbe
mov
in
or
pushw
push
cdq
sbb
sahf
jne
(bad)
and
int3
dec
mov
mov
mov
push
popa
nop
int
(bad)
not
jno
dec
cmp
out
mov
dec
mov
fistp
push
dec
or
loope
scas
jbe
jno
pop
std
jmp
or
retf
adc
mov
and
test
pushf
daa
neg
xor
sar
cmps
aaa
je
push
push
xlat
mov
inc
inc
and
int
idiv
in
mov
cmps
aaa
and
cmps
and
int
hlt
mov
sbb
lods
rcl
xor
push
or
in
js
mov
mov
sbb
movs
and
sbb
pop
cmp
inc
dec
test
mov
mov
ins
lahf
fcmovnb
sub
sti
test
mov
movs
sub
inc
or
imul
and
mov
fwait
in
xchg
sti
test
mov
movs
sub
inc
or
imul
and
mov
sti
sub
sub
sbb
adc
pop
and
mov
fwait
in
xchg
sti
test
xor
cmp
mov
popf
repz
mov
movs
fidivr
pop
ror
sbb
dec
mov
cmp
jecxz
call
jb
add
repnz
mov
sbb
call
and
adc
fcmovb
retf
or
cmp
jns
cs
jg
jno
jnp
xchg
cmp
sub
aaa
dec
shl
jae
pop
mov
into
movs
or
ret
loop
jg
ret
mov
sub
pop
imul
daa
pop
cwde
sahf
lods
gs
adc
xor
aam
rcl
stc
(bad)
clc
adc
lods
fisttp
push
test
aad
xor
push
xchg
sbb
xchg
test
sbb
inc
daa
push
leave
cmps
lods
popa
and
add
cmps
mov
or
xchg
fld
mov
mov
xor
add
pop
cwde
pop
ja
(bad)
mov
mov
loop
and
loop
adc
and
repnz
ret
dec
mov
test
sbb
call
dec
hlt
cmp
mov
cmps
xor
and
popf
fild
ins
dec
mov
cmp
dec
call
addr16
ja
loop
repnz
sub
and
push
jp
jno
cmp
jb
pop
mov
clc
inc
test
mov
ror
je
sub
clc
jb
inc
fcom
and
adc
ret
dec
mov
sbb
call
and
adc
fwait
and
and
fs
pop
or
adc
push
or
lahf
imul
dec
add
in
pop
and
adc
in
dec
pop
jo
sbb
xor
test
test
jmp
xor
and
and
or
cdq
out
add
call
pop
iret
inc
scas
pop
sub
add
sub
inc
fcmovnb
sub
dec
pop
les
rcl
hlt
(bad)
stos
arpl
leave
xor
jg
adc
ins
mov
push
pop
jno
retf
jmp
adc
dec
repnz
jbe
add
push
mul
push
mov
inc
inc
jp
sti
rcr
loop
inc
clc
jnp
jmp
xor
xchg
scas
push
pop
mov
pop
sbb
inc
jo
mov
push
mov
mov
and
mov
nop
mov
mov
ja
jno
int
(bad)
dec
dec
sbb
arpl
or
mov
xchg
retf
sub
adc
ficom
push
pop
jno
int3
lea
add
sub
test
aad
xor
inc
ds
mov
rol
out
pop
not
inc
in
xchg
rcr
scas
mov
jecxz
xchg
pop
dec
mov
js
dec
lahf
fsub
xchg
nop
stos
mov
push
cmp
shl
cmp
ror
int3
js
in
imul
push
xchg
rcl
pop
cmp
inc
jb
mov
inc
jnp
loop
cmps
sub
push
outs
daa
mov
inc
xchg
cmc
xchg
daa
xor
and
sbb
push
cld
lock
adc
add
add
mov
int
xor
jl
test
jnp
mov
sti
push
adc
fcom
ins
loop
mov
xor
adc
or
adc
stos
xchg
mov
(bad)
cmp
mov
mov
cmp
test
xchg
out
cs
hlt
xor
(bad)
fldcw
sub
mov
inc
call
push
rcl
inc
out
addr16
ins
jno
lods
sbb
in
jp
mov
pop
in
push
or
mov
dec
in
push
sub
mov
sahf
and
dec
test
cmp
mov
je
cmp
sbb
cmp
sub
xor
xor
pop
jno
jnp
pop
pop
popf
push
mov
mov
pop
xchg
call
dec
sbb
pushf
(bad)
clc
std
and
lods
add
mov
in
and
out
pop
aam
(bad)
scas
stos
xchg
sbb
push
push
cmc
stos
jle
pop
jns
js
in
movs
push
add
and
xor
mov
aam
ror
lahf
cdq
mov
ret
pop
not
mov
mov
mov
cdq
dec
and
outs
jne
call
cdq
test
in
test
fistp
clc
iret
and
rcr
ins
loop
cdq
and
retfw
(bad)
loop
mov
stc
movs
dec
and
repz
(bad)
or
xor
ror
out
daa
pop
stc
lds
mov
fstp
lds
rcr
and
and
xchg
test
pop
outs
retf
call
(bad)
(bad)
sub
xchg
shl
or
js
or
xor
jb
ins
dec
lds
mov
cmp
xor
data16
adc
stos
sbb
and
cmp
sub
cmps
retf
or
ficomp
hlt
cli
pushf
ret
mov
cmp
cmp
sti
fisub
sub
lock
xchg
adc
out
mov
and
pop
xchg
push
(bad)
into
loope
or
popf
xchg
fistp
jb
mov
popa
xchg
inc
pusha
std
out
fisttp
xor
mov
out
popa
jl
and
mov
sbb
jb
cmc
cs
sbb
push
(bad)
cdq
mov
out
jb
and
pop
jne
mov
mov
push
sbb
xor
add
cmps
stc
pushf
xchg
ret
popf
inc
lock
mov
or
pop
lods
xchg
push
or
jmp
out
int
ja
pop
(bad)
in
mov
mov
std
outs
aas
push
add
push
mov
xor
jne
xor
mov
cmp
stos
push
pop
test
sub
fstp
test
pop
pushf
mov
scas
jmp
les
pop
iret
retf
rcl
xrelease
jo
pusha
and
and
dec
jle
in
mov
pop
retf
jo
mov
dec
pop
jne
call
sbb
mov
gs
int
inc
pushf
sbb
popf
aaa
mov
pop
lods
rol
mov
nop
shl
aas
scas
dec
rcr
repz
jb
dec
inc
arpl
leave
add
rcr
and
inc
mov
aam
or
nop
adc
pop
shl
xchg
test
jmp
sbb
mov
jo
xor
mov
in
rol
inc
pushf
int
jns
adc
inc
out
nop
(bad)
mov
test
sar
in
xchg
and
test
mov
cmp
push
xchg
push
retf
pop
ins
xchg
in
mov
retf
mov
sub
sub
js
push
data16
repz
sub
add
leave
ror
add
fwait
mov
mov
lods
int3
xchg
fst
cld
imul
push
rol
inc
pop
xlat
jbe
js
or
pop
sub
out
sbb
ret
stos
jns
pop
push
cli
test
xchg
dec
ja
fiadd
lods
jno
dec
adc
hlt
dec
mov
or
out
cmp
fistp
sti
sub
aam
add
xchg
out
ret
arpl
rol
dec
add
or
and
std
ss
lods
sbb
jo
cmps
add
(bad)
push
xchg
add
enter
les
inc
ror
sbb
movs
dec
sbb
scas
shl
enter
sahf
addr16
retf
xchg
movs
inc
aas
jne
ror
pushf
push
inc
repz
sbb
pop
ds
jg
sbb
jo
repz
adc
jp
mov
popf
rcl
jp
mov
stc
leave
xchg
jg
daa
nop
add
bound
imul
mov
(bad)
nop
cmp
out
add
push
cld
mov
xor
scas
jb
push
sub
cs
xor
xchg
or
mov
mov
dec
lock
sbb
lods
mov
and
inc
ins
cdq
imul
xor
outs
les
xchg
jne
and
jecxz
out
retf
test
cmp
jecxz
mov
retf
data16
jge
lds
and
xor
xchg
push
hlt
ficomp
adc
cmp
sbb
jno
push
sbb
out
push
pop
(bad)
enter
rcr
inc
les
adc
push
mov
jle
mov
out
fucom
dec
(bad)
adc
data16
enter
mov
pushf
movs
mov
dec
mov
xor
pushf
repnz
fucomp
fs
xchg
retf
repz
jbe
rcr
gs
sbb
fnclex
popa
sub
fistp
mov
sub
add
popf
call
xor
jle
loop
cdq
aaa
pop
bound
es
ins
ins
ror
mov
xor
pop
mov
rol
dec
pop
cmps
jl
outs
js
dec
(bad)
jae
and
xor
pop
and
dec
jl
nop
scas
cmp
scas
jo
retf
xor
retf
int
inc
and
dec
(bad)
xor
popa
out
xchg
pop
jle
movs
fnsave
mov
xlat
test
mov
mov
(bad)
jmp
cmc
cmp
push
xor
lds
lods
les
mov
loop
xlat
out
xchg
icebp
sub
nop
jnp
(bad)
pop
fdiv
arpl
jecxz
fs
push
call
sub
scas
sub
ret
aam
and
inc
je
mov
xchg
lahf
lods
pusha
adc
dec
jae
ja
sub
test
pop
dec
cmc
and
and
dec
cmp
cmp
dec
test
push
das
lfs
scas
sub
das
push
clc
popa
lock
mov
pop
rcr
mov
mov
clc
ret
add
adc
or
repnz
mov
pop
mov
aaa
xor
sub
cmp
or
stc
push
sbb
pop
ret
pop
xor
or
or
cmp
dec
and
test
add
and
idiv
pop
pusha
stc
stos
pusha
lods
lods
xor
arpl
sti
add
lock
out
push
das
jmp
add
mov
shl
in
xor
sar
xchg
and
mov
cmps
movs
stos
mov
cmp
nop
mov
cdq
test
scas
dec
or
sbb
mov
inc
fs
nop
(bad)
jmp
out
fisttp
add
add
pop
cmp
jmp
test
jne
cmps
xchg
movs
mov
jbe
inc
and
fucomi
out
pop
adc
sub
sahf
cmc
imul
mul
pop
int
pshufw
inc
sbb
or
push
and
push
and
in
and
push
cdq
or
sub
cmp
mov
je
mov
adc
les
add
ins
cs
jg
add
cld
add
cmp
(bad)
bound
in
dec
mov
push
test
shl
dec
out
push
sti
loop
mov
not
jle
xchg
out
in
in
out
sub
movs
movs
(bad)
jno
mov
stos
les
f2xm1
ror
inc
jmp
adc
xor
inc
cmp
dec
push
xchg
pop
mov
call
dec
dec
adc
mov
js
retf
inc
das
sub
xor
repnz
(bad)
and
inc
out
loopne
imul
and
enter
(bad)
jno
push
mov
cli
das
cwde
mov
cmp
mov
loope
sbb
xchg
inc
ror
ins
mov
mov
rcl
mov
lea
adc
cmps
xor
retf
cwde
sub
xchg
fbstp
adc
sar
les
adc
inc
leave
outs
sti
push
add
xchg
sbb
pop
add
or
pop
sbb
out
cli
mov
aam
(bad)
mov
mov
push
jnp
mov
inc
add
sbb
mov
push
in
mov
and
fnsave
arpl
adc
enter
test
mov
sysenter
xchg
dec
push
jno
data16
(bad)
xchg
or
xor
popa
out
and
add
fnsave
pop
pop
gs
mov
loope
mov
jp
js
mov
sbb
loop
sbb
or
(bad)
enter
in
xchg
leave
dec
xchg
loopne
cmp
xchg
mov
jge
or
or
pop
mov
xlat
test
cmps
add
clc
mov
mov
pop
mov
ja
lock
mov
or
pushf
xor
jbe
inc
xchg
mov
pop
repz
fld
jns
repnz
popf
mov
test
rcr
pop
(bad)
jmp
xchg
xor
ss
push
repnz
es
add
or
pop
(bad)
rcr
lds
pop
repnz
mov
pushf
aad
mov
cwde
inc
pop
mov
sbb
dec
out
or
fidivr
cmc
pop
mov
dec
outs
push
jae
mov
cmc
xor
pusha
ja
inc
iret
jmp
sysexit
sub
int3
ins
xlat
mov
mov
sti
or
jbe
dec
ficom
adc
jb
fstp
add
int
xor
and
repnz
mov
xchg
aad
shl
(bad)
and
(bad)
jmp
xchg
out
sub
xchg
gs
mov
mov
cmps
or
pop
out
jb
ja
fiadd
xor
mov
xchg
outs
cmp
stos
pop
push
jbe
pop
inc
test
jmp
lds
out
xor
inc
cs
es
cs
jg
ror
lock
mov
mov
mul
imul
mov
mov
ret
fild
mov
push
push
mov
push
scas
ss
jmp
or
adc
or
retf
mov
pop
call
add
ret
inc
xor
jecxz
push
mov
adc
inc
xor
ret
shl
loop
mov
sbb
adc
push
std
rcr
mov
aam
push
test
add
dec
int
push
mov
mov
(bad)
jmp
sub
and
mov
daa
jle
loopne
sub
outs
or
(bad)
pop
leave
test
xchg
aam
jp
cmp
icebp
shr
lock
or
mov
xor
xlat
sub
call
repz
adc
jno
mov
xor
and
xor
(bad)
sbb
aad
sub
mov
mov
xchg
into
jl
movs
push
sub
leave
mov
shl
(bad)
popf
fnstenv
sub
sbb
out
cwde
push
mov
inc
mov
les
xchg
fs
push
mov
dec
das
clc
std
cs
ret
and
(bad)
cmc
out
shl
sub
mov
mov
xlat
pop
rcl
push
pop
mov
mov
xchg
dec
js
mov
adc
push
sahf
dec
call
mov
ins
pop
test
jno
dec
adc
imul
xchg
or
ja
fist
movs
jbe
stos
int
out
mov
mov
stos
mov
xchg
outs
nop
or
sub
inc
mov
and
stc
(bad)
mov
mov
(bad)
cli
ins
test
inc
loope
mov
add
adc
enter
lds
call
push
fwait
sub
nop
ss
sbb
and
inc
cmp
ins
loope
outs
test
push
cmp
mov
cs
cdq
int3
gs
pop
sbb
add
por
cmp
cmp
cmp
fst
ins
ja
jno
xchg
bound
cmps
movs
push
add
mov
xor
js
mov
pop
push
icebp
and
es
js
in
dec
sub
dec
mov
aad
inc
int3
mov
inc
xchg
pop
(bad)
int3
push
stos
sti
das
fisttp
les
ins
inc
sub
cmp
cli
and
pop
jmp
hlt
aam
jmp
dec
add
mov
sbb
add
push
(bad)
and
sub
sub
rcl
movs
bound
stos
ins
idiv
fwait
adc
scas
jp
add
pop
inc
shl
movs
inc
push
cmps
je
ds
pop
xchg
cdq
sahf
push
add
mov
add
or
or
je
retf
out
fwait
out
dec
xchg
sbb
rcr
push
cmp
ret
popf
fcomi
jnp
loop
movs
ds
mov
xor
jl
sbb
or
pop
adc
jecxz
cld
mov
scas
inc
jns
ins
mov
push
sbb
and
dec
xchg
xor
sbb
shl
cwde
xchg
call
fidivr
xchg
mov
(bad)
(bad)
(bad)
cwde
retf
jae
mov
xchg
jmp
pushf
fild
xchg
leave
sbb
fnstsw
lahf
or
test
cdq
outs
bound
rol
add
push
cs
shl
inc
or
call
lea
das
mov
xchg
or
fiadd
jle
in
xchg
push
mov
jg
daa
std
push
call
adc
inc
xchg
lds
test
es
(bad)
ror
mov
mov
les
xchg
repnz
push
retf
and
leave
add
add
and
out
fldenv
or
xor
dec
xor
xor
or
fbstp
iret
les
dec
sub
shl
and
add
int3
push
es
in
push
push
dec
push
push
xchg
sbb
retf
and
inc
jmp
into
push
loop
dec
and
push
mov
pop
push
in
sti
adc
pusha
jae
jg
pop
cmp
les
scas
and
xor
sahf
sub
inc
mov
pushf
mov
adc
pop
cs
mov
fidiv
push
dec
xlat
jl
mov
sub
cmp
outs
cs
mov
std
scas
sub
hlt
inc
rol
iret
das
adc
cmp
mov
cli
loope
xor
mov
pop
xchg
and
push
scas
dec
ss
bound
dec
test
sbb
popa
sbb
inc
mov
lea
adc
mov
sti
ret
xchg
movs
scas
jl
pushf
dec
push
jns
add
call
(bad)
jb
loop
mov
pop
push
lock
xchg
push
sub
ja
or
push
sbb
bound
(bad)
xor
mov
and
xor
push
add
bound
xlat
cmp
ins
push
int
jbe
movs
shl
int3
sti
and
fidiv
mov
push
push
sti
dec
mov
mov
mov
in
mov
fnstenv
xchg
add
xchg
xchg
cmp
mov
and
adc
or
cmp
in
cmp
sbb
cmp
xor
movs
mov
lods
scas
inc
pop
adc
cld
pop
sbb
sysret
je
add
jle
int3
and
js
sub
jmp
mov
jecxz
(bad)
jb
test
xchg
lods
leave
pop
adc
mov
(bad)
mov
call
ins
mov
sbb
lods
mov
call
out
fist
sbb
jle
push
rcr
inc
pop
push
pop
in
cmp
cmc
jmp
ja
popa
push
rcr
popa
out
or
mov
or
aad
cmp
repnz
dec
push
cmps
aam
outs
aaa
xlat
call
dec
xchg
pop
mov
mov
lds
enter
push
inc
pop
imul
aam
arpl
js
jmp
or
jg
lock
retf
enter
mov
adc
mov
adc
(bad)
ror
popf
mov
jne
jl
movnti
(bad)
jnp
adc
out
ja
inc
xchg
iret
push
inc
push
les
(bad)
jnp
in
mov
mov
xchg
xchg
int3
inc
sar
es
inc
add
fs
cmps
and
das
mov
inc
fst
(bad)
outs
push
inc
retf
sbb
jp
popf
push
das
mov
jbe
lds
sub
xor
sub
xchg
xchg
bound
aam
mov
mov
push
ret
sahf
lea
push
jl
fidiv
(bad)
cmp
cs
add
nop
or
loope
mov
mov
push
movs
out
jp
ja
xor
popa
mov
lods
xchg
lock
stos
jge
and
std
inc
nop
xor
pop
iret
stos
inc
mov
push
adc
std
in
cmp
inc
xchg
mov
jbe
add
cmp
aas
ins
jp
and
xchg
lock
lods
movaps
popf
test
sub
out
iret
lods
adc
lds
jge
loope
retf
hlt
xchg
push
cmp
mov
inc
sub
mov
and
sub
sahf
retf
xor
test
iret
das
add
mov
jge
stc
cmc
pop
cmc
sbb
mov
ret
cmp
ret
daa
mov
stc
xchg
mov
sub
mov
lea
push
sub
xor
test
repz
push
mov
mov
sbb
std
and
xchg
and
push
addr16
scas
test
mov
ja
(bad)
sti
iret
out
mov
adc
dec
clc
mov
mov
ss
add
cmp
xchg
repnz
mov
and
jl
icebp
jl
(bad)
test
icebp
sub
jns
daa
mov
cmp
mov
ins
push
loope
adc
jmp
cmps
into
imul
cmp
rcl
ins
mov
jge
mov
push
jp
(bad)
fsubr
sub
(bad)
(bad)
ins
sub
mov
cld
cli
cmps
jl
jmp
adc
shr
daa
and
in
add
xchg
mov
push
or
(bad)
jmp
fistp
jmp
mov
arpl
and
cld
lea
or
or
ins
jb
sbb
sbb
movs
mov
cs
(bad)
cdq
repnz
popa
fmul
es
cmps
loope
call
inc
shl
xchg
mov
or
sahf
jne
cmp
fwait
fs
jmp
add
cld
cwde
push
cmp
inc
das
xchg
and
pop
dec
push
inc
mov
aaa
xor
(bad)
jge
fcomp
dec
mov
sbb
call
and
adc
ret
dec
mov
sbb
call
and
adc
ret
dec
mov
sbb
or
jb
inc
fcom
and
ins
(bad)
pushf
(bad)
mov
mov
mov
add
lea
fcom
push
sar
mov
xor
push
and
add
add
add
add
add
add
mov
add
and
enter
xchg
add
add
add
mov
add
pop
loope
sbb
movs
add
add
add
add
add
sbb
adc
imul
ins
add
add
loope
and
sbb
mov
mov
jl
push
add
add
and
add
add
add
add
add
fiadd
js
test
pop
add
add
add
add
add
add
add
add
push
add
add
add
inc
pop
add
add
add
add
xor
add
add
mov
add
dec
add
add
add
push
add
je
or
xchg
add
add
add
sbb
popf
add
add
add
add
inc
add
add
add
movs
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
push
add
add
add
adc
out
test
out
push
add
add
add
add
add
and
or
cmp
cmp
sbb
add
add
add
add
add
add
fadd
xor
add
add
add
add
add
add
xor
adc
add
add
add
add
add
add
add
add
add
jns
add
fadd
xchg
add
add
cmp
and
ins
add
add
add
add
jns
rol
add
add
sbb
repnz
add
add
or
jle
jno
jbe
ret
add
hlt
add
add
sbb
mov
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
xchg
add
add
add
add
popa
add
add
add
add
add
add
add
fiadd
test
pusha
add
add
add
push
add
or
xor
add
add
add
add
add
and
pop
add
add
add
add
add
add
add
pop
add
add
add
mov
add
add
cmp
inc
add
mov
add
add
add
fld
cmps
add
mov
add
xchg
add
add
add
pop
add
jbe
stos
add
inc
add
add
sbb
out
add
xor
xchg
add
add
add
add
add
or
sbb
loope
sub
pop
add
add
add
add
add
xchg
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
inc
add
add
add
add
out
imul
into
or
fidivr
adc
dec
cs
cmps
in
fs
dec
lods
adc
icebp
and
call
jmp
jg
and
cmc
pop
adc
cmp
lock
push
pop
mov
test
mov
lods
inc
and
inc
or
fist
xchg
cwde
lods
add
or
cdq
push
mov
inc
rcl
aam
push
shr
arpl
push
retf
loop
jmp
xor
push
(bad)
fstp
hlt
popf
or
mov
leave
push
div
es
xchg
mov
add
pop
inc
div
xchg
cmp
(bad)
shr
test
mov
mov
mov
nop
pop
call
call
(bad)
icebp
jo
test
popf
pop
cmps
int
mov
pop
mov
adc
pop
adc
mov
push
out
ss
stos
pushf
sub
cmp
jmp
inc
clc
fcmovu
in
inc
add
cdq
jl
and
fcom
xchg
mov
test
es
or
jbe
cmp
and
sbb
push
xor
and
sub
jmp
mov
push
xchg
adc
stos
jmp
mov
aam
add
test
mov
lea
call
lahf
dec
stc
mov
inc
pop
sbb
iret
out
sti
or
mov
movs
mov
test
mov
and
pop
and
rcr
mov
xor
lods
daa
jns
dec
sub
dec
rol
shl
and
pop
sub
fwait
cmp
pop
xchg
add
dec
or
sahf
out
int3
dec
loope
jb
inc
mov
mov
loop
pushf
out
fs
xor
xor
movs
cld
sub
inc
mov
add
or
arpl
int
mov
out
push
mov
leave
retf
sub
pop
pop
push
imul
je
neg
in
stc
xor
test
jmp
arpl
and
(bad)
xchg
mov
add
nop
nop
push
pop
mov
stc
cld
or
or
inc
sub
mov
fwait
js
xor
cmp
scas
jmp
cmp
cmp
loope
nop
out
(bad)
(bad)
push
rcl
pop
int3
push
les
xchg
das
pop
inc
aas
sti
mul
cmps
sub
aam
imul
jge
sahf
sbb
sar
lock
ret
pop
dec
mov
outs
sar
les
enter
pop
cmc
popa
test
pop
test
add
push
pop
sub
hlt
lea
inc
adc
or
in
popa
cmps
adc
xor
rcl
icebp
in
sub
sub
ja
sub
cmp
cld
cmp
das
pop
mov
add
add
add
add
rol
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
or
mov
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
div
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
push
call
push
push
call
mov
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
and
cmp
jne
call
mov
sub
mov
mov
sub
mov
cmp
jge
mov
mov
jmp
fld
call
inc
mov
mov
mov
sub
test
je
call
jmp
and
jmp
mov
inc
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
mov
movzx
mov
and
and
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzx
mov
inc
mov
add
movzx
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzx
mov
dec
mov
add
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
push
call
pop
cmp
jb
mov
leave
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
hlt
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
hlt
add
mov
hlt
add
lods
hlt
add
movs
hlt
add
pushf
hlt
add
xchg
hlt
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
hlt
add
cld
hlt
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
test
dec
test
push
test
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
test
lods
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
test
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
psubb
add
test
add
test
add
test
add
test
in
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
xor
add
cmp
add
push
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
fs
add
ins
stc
add
je
add
jl
add
test
add
mov
add
xchg
stc
add
cmps
stc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sar
add
stc
add
fdivr
add
in
stc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistp
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
push
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
