and
test
push
push
mov
add
and
add
outs
add
add
jg
(bad)
(bad)
call
in
sub
push
push
push
call
mov
pop
ret
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
jmp
dec
cmp
jne
pop
push
lea
sti
fnstenv
or
xor
inc
push
or
not
or
inc
inc
mov
lea
push
push
push
and
retf
neg
(bad)
sti
mov
and
push
push
dec
dec
lock
push
fmul
out
stc
pop
inc
dec
and
arpl
imul
push
(bad)
imul
pop
add
fcmovnb
push
jnp
rol
rcr
inc
add
push
jns
fldenv
in
push
fild
icebp
sbb
rol
in
jge
sub
push
lock
xor
or
fmul
mov
in
adc
and
xchg
add
mov
cmp
(bad)
imul
popa
ja
scas
push
dec
ss
cmp
pop
and
mov
dec
jle
or
pop
jno
add
sub
push
(bad)
(bad)
or
hlt
push
lahf
ret
(bad)
in
mov
enter
push
call
mov
leave
psrlq
retf
daa
addr16
push
sbb
into
xor
pop
add
addr16
neg
push
(bad)
scas
lock
mov
jge
retf
hlt
test
xchg
repnz
arpl
stc
ret
sub
and
and
cdq
inc
sbb
ficomp
mov
dec
in
push
push
test
adc
imul
mov
adc
dec
(bad)
mov
popf
test
jnp
dec
es
inc
ja
push
fcmovnu
popa
iret
cwde
rol
shl
mov
inc
sbb
xchg
pop
inc
in
arpl
leave
xchg
mov
push
test
stc
popa
in
daa
fcmovne
mov
test
dec
ins
pop
pop
sbb
push
fstp
enter
aas
(bad)
and
inc
adc
xchg
dec
aam
pushf
iret
sahf
lea
mov
push
sub
and
fcmovnb
addr16
jo
push
sub
imul
rcl
cmp
arpl
mov
fld
jp
cmp
push
or
clc
push
push
cmp
push
sbb
mov
dec
dec
inc
aas
inc
xor
fidivr
loope
xor
inc
dec
fadd
dec
inc
imul
push
dec
je
dec
pop
jge
jge
stos
pop
es
mov
and
test
imul
add
loopne
mov
or
mov
retf
inc
pop
lahf
xchg
shl
mov
in
inc
(bad)
ret
pop
(bad)
dec
outs
push
(bad)
xchg
dec
xor
repz
nop
imul
(bad)
(bad)
call
or
pop
xor
sub
pushaw
pusha
jmp
pushf
jmp
(bad)
in
mov
js
or
push
add
in
xchg
sbb
fs
in
mov
or
ins
push
pop
adc
mov
mov
sbb
jmp
cmp
mov
push
add
add
pusha
add
pusha
pop
pusha
adc
cmp
popf
imul
lds
ss
xchg
out
fs
enter
sub
xchg
retfw
push
aaa
int3
fs
into
push
sub
data16
out
pusha
in
pop
xchg
pop
adc
(bad)
ins
fnsave
xor
xor
sub
shr
xor
aaa
cmp
sub
shl
cmp
cmp
cmp
cmp
int
sub
add
adc
popf
sub
ror
add
add
push
add
rcr
or
push
or
rcr
pop
or
push
scas
inc
ucomiss
shr
mov
adc
adc
push
push
popa
add
popf
sbb
(bad)
fstp
sub
sbb
leave
(bad)
pop
aaa
loopne
loope
popf
sub
leave
jecxz
xor
sar
pop
out
jmp
jmp
or
sbb
or
es
mov
cmp
into
inc
xor
and
pushf
pushf
pushf
pushf
add
pushf
pushf
pushf
or
and
pushf
pushf
pushf
pushf
or
fnstenv
cmps
sbb
sub
xchg
fld
test
dec
sub
adc
or
cli
jae
push
lahf
aad
int3
fs
and
ss
or
sbb
outs
pop
push
pusha
(bad)
push
and
outs
(bad)
cld
in
sub
dec
leave
dec
aaa
aaa
stos
in
movs
xor
bound
push
leave
leave
leave
leave
adc
or
pushf
pushf
jl
dec
cmps
sbb
int3
int
outs
ja
stc
and
cmp
test
popf
pop
push
push
pop
adc
or
sub
rcr
or
or
rcr
fldenv
call
adc
mov
mov
dec
cmp
sub
iret
(bad)
leave
sbb
ds
add
pop
fdivr
mov
fs
fs
mov
cmp
cmp
jp
push
in
pusha
adc
adc
in
cmp
bound
outs
mov
jmp
jge
mov
adc
sub
push
lahf
adc
out
(bad)
jmp
or
fnstenv
and
mov
mov
pop
sub
mov
call
dec
arpl
pop
test
fistp
dec
arpl
xchg
mov
ja
mov
aam
aaa
mov
data16
fnstenv
sbb
or
jl
(bad)
mov
mov
mov
xchg
fwait
ins
outs
xor
add
adc
sbb
jns
mov
mov
js
ins
(bad)
das
arpl
xor
push
das
int
cwde
pushf
mov
in
cmp
pop
jnp
in
pop
out
and
or
xchg
arpl
test
push
inc
jmp
mov
cmp
aad
add
jbe
and
iret
fisub
(bad)
xor
std
jg
jmp
xor
mov
cmp
adc
mov
sti
in
inc
xchg
mov
sub
mov
xor
(bad)
fistp
jmp
je
int3
jmp
ins
arpl
mov
sub
push
adc
xor
sub
jecxz
dec
sub
fidiv
mov
clc
xor
popa
xor
xor
dec
xor
pop
js
add
or
cdq
pop
add
test
test
out
imul
test
out
mov
and
xchg
jecxz
jo
pusha
and
pop
fidiv
pusha
pop
mov
stos
sub
mov
sbb
pop
mov
pusha
fsub
mov
pusha
mov
sbb
movs
pushf
xor
aaa
stc
push
push
adc
test
loopne
jecxz
mov
adc
arpl
mov
jmp
stos
test
imul
fld
sbb
sbb
int
xor
jo
loopne
daa
inc
scas
gs
mov
xor
xlat
xor
jecxz
pusha
adc
scas
mov
jge
jecxz
ins
or
aas
ds
xchg
jnp
cmp
addr16
mov
xor
loop
in
test
jg
daa
pop
sub
push
ins
fs
push
or
popf
data16
outs
push
enter
adc
xchg
mov
cwde
loop
arpl
imul
sub
mov
imul
mov
int
xor
cmp
cmp
outs
jmp
es
cmps
adc
es
jo
jmp
jl
inc
mov
push
pop
xchg
adc
pop
nop
jo
jne
ins
in
xor
in
(bad)
mov
push
lahf
pop
mov
dec
push
in
adc
jmp
fs
mov
pusha
jnp
mov
popf
add
push
cmp
cmps
bound
and
and
fist
cld
cmp
adc
fild
sbb
inc
arpl
xchg
div
ss
outs
mov
pop
dec
loopne
mov
ds
ins
adc
mov
imul
test
sbb
xor
inc
imul
outs
or
lock
jne
inc
or
cmp
inc
push
in
mov
(bad)
jb
sahf
nop
and
fs
lahf
sahf
mov
sbb
cvtpi2ps
nop
in
mov
add
jecxz
enter
popf
sahf
jne
ds
sub
in
sub
daa
ins
ins
(bad)
cmp
popa
cmp
sbb
sahf
pop
mov
scas
dec
aaa
imul
dec
(bad)
(bad)
ss
or
adc
jns
sub
jmp
ss
(bad)
pop
clc
int3
mov
retf
lods
cmp
imul
out
es
push
push
fcomp
outs
iret
mov
fnsave
jns
or
sbb
xchg
xchg
cmp
jmp
fs
call
aas
add
pushf
shl
push
mov
or
mov
mov
push
mov
and
jo
das
or
adc
ja
xchg
adc
mov
push
and
std
push
dec
mov
sub
dec
adc
fisttp
pushf
adc
pop
pop
inc
and
jmp
shl
fist
fidivr
ds
(bad)
int
jmp
ja
mov
sub
mov
dec
sbb
dec
add
jl
test
mov
(bad)
xchg
pop
ud0
add
mov
cmp
jmp
sbb
std
mov
push
pop
call
cmp
add
in
outs
mov
dec
push
add
dec
mov
enter
std
xchg
cli
dec
and
mov
mov
dec
mov
scas
outs
fcomi
pop
les
sti
dec
mov
fbstp
adc
inc
inc
dec
ins
(bad)
fcomi
shl
xlat
dec
jne
neg
pop
inc
pop
dec
(bad)
in
mov
push
cld
rcl
repnz
rol
lock
call
jae
and
and
sbb
fs
or
sti
ds
push
div
inc
add
mov
add
xlat
add
add
add
add
add
add
jmp
push
fs
outs
addr16
add
and
inc
add
xlat
(bad)
jg
mov
inc
xor
stc
jmp
mov
and
(bad)
in
(bad)
jmp
mov
xchg
mov
adc
sbb
adc
add
stos
add
add
fild
pusha
nop
or
add
and
out
mov
or
sbb
mov
mov
inc
ja
add
(bad)
jmp
(bad)
fs
add
add
push
adc
out
sub
add
outs
fcmovnb
add
push
push
add
pop
sub
clc
push
add
cmps
add
add
dec
aam
ror
ins
test
jg
outs
add
add
xor
xor
retf
call
add
or
outs
pop
cmp
outs
out
mov
add
mov
or
push
sbb
and
xor
or
jns
mov
jmp
add
pop
xchg
mov
push
out
mov
scas
test
mov
cmp
jle
mov
add
in
sahf
add
jnp
mov
fist
add
push
fld
in
(bad)
jb
sar
arpl
rol
(bad)
pop
xchg
test
in
mov
add
popa
(bad)
in
pop
outs
sub
scas
outs
add
inc
xor
leave
add
add
mov
repz
push
inc
sbb
(bad)
fisttp
adc
jae
add
inc
pop
loopne
outs
ret
add
sbb
cmp
shl
add
lds
sbb
add
shr
outs
sbb
shl
inc
shl
(bad)
xchg
rol
outs
out
neg
inc
pop
mov
int
mov
cld
jbe
adc
push
int
vmread
adc
rcr
mov
mov
jl
ret
add
dec
loop
(bad)
out
push
std
in
and
sbb
jmp
add
or
das
inc
sbb
lock
add
adc
rol
mov
sub
and
mov
sub
inc
into
sbb
or
pop
push
stos
sahf
push
(bad)
pop
add
data16
or
(bad)
xor
in
or
outs
seta
retf
add
lods
add
xchg
iret
scas
mov
idiv
cwde
out
inc
scas
in
or
add
shl
repz
adc
stos
mov
das
lahf
jo
dec
aaa
in
(bad)
ret
sbb
ror
std
mov
mov
xor
pop
clc
add
mov
mov
inc
adc
dec
data16
sar
sti
js
(bad)
fistp
ficomp
aaa
cmp
add
mov
fdiv
jge
sbb
or
or
sub
cwde
mov
adc
in
movs
daa
mov
adc
add
cmp
in
lods
test
jno
inc
sub
jle
inc
xlat
adc
cmp
pop
add
je
cld
outs
outs
xchg
jae
mov
jmp
add
lock
pop
mov
sub
push
add
aas
pop
aam
movs
mov
push
movs
outs
je
inc
cmp
jmp
out
add
fcomi
leave
nop
int
scas
mov
or
or
lods
clc
jg
mov
pushf
xchg
or
hlt
mul
gs
adc
shr
test
add
xchg
js
mov
ins
fld
lods
dec
pop
add
dec
pop
mov
outs
leave
xchg
push
clc
call
jecxz
xchg
pop
xor
or
pop
mov
jne
xor
fnclex
or
or
lods
int
inc
adc
add
ins
xchg
outs
inc
pusha
add
(bad)
push
loopne
(bad)
(bad)
fistp
add
pop
push
adc
mov
push
cs
jmp
fstp
sub
add
into
icebp
bound
xchg
sbb
cli
pop
sti
mov
scas
mov
pop
push
sub
pop
cli
xchg
(bad)
cli
popf
cli
push
jbe
call
clc
sahf
fcmove
xor
cmp
ja
nop
xor
cmc
ret
add
imul
cmps
out
in
ret
add
out
mov
out
add
ins
cld
dec
lods
bound
or
call
adc
pushw
dec
arpl
enter
add
in
ss
sub
or
xchg
push
or
mov
ret
sub
test
dec
adc
in
fist
cmp
jb
inc
mov
mov
aaa
pop
stc
mov
add
in
jle
sub
pop
jle
test
mov
jb
je
fs
add
loope
cli
add
dec
daa
(bad)
and
add
outs
mov
lahf
jno
adc
push
mov
sub
sbb
das
fisubr
sub
movs
and
xor
in
jbe
jg
aam
sahf
or
adc
retf
jbe
sub
jp
push
jo
add
imul
imul
add
pop
lock
repnz
movs
pop
ja
sbb
pop
mov
xchg
push
ins
pop
shl
je
cmp
sub
sub
sub
add
mov
or
jne
pop
cdq
cld
pop
aaa
sbb
mov
enter
mov
ins
jne
add
sub
or
xchg
in
dec
movs
out
or
outs
jg
and
pop
nop
sub
jo
push
gs
bound
rol
sbb
ror
outs
test
pop
imul
lods
xchg
loop
or
(bad)
(bad)
fisttp
scas
test
pop
test
add
mov
test
psllq
(bad)
mov
mov
outs
cwde
xchg
pushf
jmp
aaa
mov
test
or
push
fadd
mov
ss
and
cmp
or
xchg
cmp
sub
jg
jno
fisttp
inc
(bad)
push
or
mov
ret
mov
pop
call
or
add
pop
mov
and
add
xor
(bad)
cmp
jne
inc
mov
ins
jmp
sub
dec
adc
add
or
test
dec
in
fadd
fcomp
pop
add
mov
push
or
sub
dec
loopne
out
cdq
adc
and
mov
loope
pushf
or
inc
dec
ins
cmp
je
repnz
out
shr
xchg
adc
or
je
and
sub
rcr
stc
repz
sub
add
mov
ret
cs
loopne
or
and
fdivr
in
lods
fnstsw
push
cmc
dec
and
sbb
sbb
or
gs
xor
(bad)
adc
dec
ins
pusha
sti
pop
addr16
add
je
(bad)
add
mov
rcr
cli
mov
pop
shl
std
cmps
sbb
add
arpl
lds
jbe
test
je
sbb
loope
push
jnp
ins
xor
mov
fld
mov
and
add
loop
mov
sbb
mov
push
xchg
add
or
ret
pop
inc
xor
(bad)
daa
pop
js
lock
test
adc
xor
jecxz
pop
das
call
inc
cld
jne
adc
loopne
jbe
cmp
sub
ins
jnp
pop
mov
adc
(bad)
cmp
fbstp
rol
jmp
imul
pop
add
push
push
in
sub
push
xchg
je
adc
scas
or
fiadd
movs
(bad)
inc
xlat
xchg
inc
cmp
sbb
pop
push
dec
xor
mov
jp
xor
jno
dec
ins
ficom
push
stos
dec
add
mov
mov
and
int3
and
inc
shl
xchg
mov
or
push
outs
mov
inc
push
or
and
xchg
or
mov
jl
xchg
retf
push
stos
xor
outs
ins
mov
xor
mov
jbe
pop
xor
mov
stc
and
push
mov
push
test
pop
cwde
fimul
js
retf
mov
jg
sub
push
xor
cld
(bad)
jge
scas
test
dec
pop
add
mov
ins
pop
pop
or
or
aas
retf
test
mov
hlt
lods
pop
pusha
push
xchg
fdiv
inc
ret
adc
retf
mov
imul
add
ror
xlat
repnz
dec
mov
ins
jns
pop
inc
imul
add
int3
or
ss
test
or
push
mov
pop
in
int
mov
pop
daa
adc
fiadd
inc
outs
pusha
jae
jnp
mov
fistp
xchg
jge
mov
scas
test
sar
mov
arpl
std
test
mov
(bad)
stos
or
add
lea
sub
paddw
mov
sub
or
push
add
stos
mov
pop
ficomp
push
mov
mov
ud2
aaa
or
(bad)
push
or
jl
loopne
mov
outs
mov
sub
add
mov
jle
jmp
les
inc
mov
add
bound
xchg
push
push
sahf
cmp
out
add
sub
ds
adc
pop
jno
out
repz
aad
jmp
push
mov
cmp
xchg
ins
fst
mov
pop
nop
aam
mov
iret
test
jnp
cmp
daa
sub
aaa
push
pop
mov
jmp
cmp
inc
dec
shr
sub
aad
lods
or
cmp
in
arpl
sbb
xor
(bad)
rdtsc
test
out
jecxz
mov
sub
jnp
fld
nop
jle
stos
icebp
inc
jno
or
sahf
jne
adc
(bad)
into
sahf
fidiv
push
jge
cmp
or
outs
fld
dec
lods
jmp
add
(bad)
mov
mov
clc
adc
push
ds
xchg
or
xchg
or
push
adc
adc
inc
xchg
adc
inc
cs
cs
pop
mov
repz
pusha
push
stc
sbb
push
fldcw
add
movs
xchg
xor
loope
push
jmp
push
or
in
jg
test
nop
push
or
movntq
fist
pop
add
arpl
push
jo
adc
push
and
mov
pushf
fstp
mov
inc
push
jmp
(bad)
sbb
or
sbb
nop
pop
pop
sbb
outs
fnsetpm(287
push
mov
xchg
sar
icebp
pop
push
ja
dec
mov
xchg
outs
push
repnz
aam
aaa
adc
sbb
cs
mov
mov
adc
mov
test
push
push
or
sub
jle
jle
shr
repz
fs
inc
cmp
mov
xor
ror
xlat
dec
and
fwait
pop
mov
aas
test
dec
inc
(bad)
push
mov
clc
test
and
(bad)
cli
div
sbb
daa
sbb
call
ds
fistp
fwait
leave
inc
cmp
imul
xor
lods
dec
rol
cdq
sbb
mov
push
xlat
and
test
aaa
inc
aam
and
pop
push
shl
jno
jp
stc
call
add
mov
enter
daa
sbb
in
or
xor
cmp
pop
mov
add
fwait
retf
sahf
mov
mov
mov
adc
cmp
les
pusha
cmp
iret
inc
fidiv
inc
and
add
and
xchg
cmp
lods
rol
aas
xor
mov
push
cld
shl
mov
fwait
aaa
mov
call
cmc
push
add
fisubr
lods
in
jns
pop
(bad)
(bad)
shl
pusha
mov
enter
sub
scas
ror
pop
pop
outs
jae
add
mov
jae
dec
push
mov
add
lods
add
loopne
nop
(bad)
or
(bad)
sub
hlt
and
inc
cmp
push
cwde
test
enter
mov
sbb
jo
(bad)
icebp
ret
mov
stos
call
data16
push
mov
xor
xor
push
das
std
(bad)
rol
ret
xlat
(bad)
pop
jo
inc
jg
dec
mov
les
adc
xor
sbb
jb
mov
imul
xlat
xor
ret
cmp
xor
sbb
mov
add
and
outs
(bad)
sub
loopne
int
cli
jbe
mov
test
test
retf
or
mov
and
jae
in
push
(bad)
push
fwait
lds
mov
mov
mov
mov
fisttp
(bad)
lock
mov
outs
test
sbb
mov
movs
xor
(bad)
movs
sub
fs
mov
scas
pop
push
jno
ins
shr
pop
das
mov
adc
xchg
cmp
jg
je
aad
mov
push
and
cs
fcomp
mov
dec
pop
jmp
xlat
jle
scas
mov
inc
ja
in
mov
scas
push
std
push
add
out
sbb
fnsave
add
pop
inc
add
jl
dec
mov
call
jmp
mov
bound
aam
ins
lock
and
popa
(bad)
in
mov
inc
imul
dec
push
sub
push
mov
xchg
idiv
js
fild
stc
xor
adc
test
and
cmp
or
push
leave
mov
mov
pop
into
jns
xor
shl
mov
rcl
bnd
and
sbb
in
and
sub
inc
rcr
call
inc
and
(bad)
fisubr
(bad)
cmc
test
sahf
sub
fs
aas
ins
aad
ja
ja
add
mov
push
add
pop
call
or
in
je
cli
outs
fist
fisttp
pop
xor
or
fs
and
bound
jp
hlt
adc
test
add
mov
test
div
jge
sbb
shr
xor
push
add
mov
ret
sti
jp
mov
fcomp
or
test
jle
ss
fdiv
imul
repz
sbb
push
pop
loope
ins
and
hlt
pop
test
xchg
jb
test
jbe
jno
xor
(bad)
add
or
pop
pop
pop
cli
adc
fs
add
push
xchg
sti
je
ins
(bad)
out
jmp
jbe
push
lds
arpl
ret
adc
and
retf
das
xchg
scas
xor
mov
pextrw
push
mov
les
dec
fucomp
out
movs
ror
leave
push
mov
in
push
adc
dec
inc
mov
inc
sbb
sub
dec
mov
mov
mov
out
add
test
dec
fcom
mov
hlt
mov
outs
ud2
mov
sub
ins
push
mov
sbb
sub
data16
stos
dec
mov
mov
data16
mov
sti
cmp
in
ins
ss
mov
scas
add
inc
stos
ja
xchg
in
in
mov
or
mov
pop
xor
and
sbb
push
pop
fwait
loopne
cli
sbb
xor
jbe
xor
clc
mov
rol
xor
sbb
ss
ins
in
xor
movs
sar
inc
sbb
rcl
gs
xchg
pop
fcmovbe
xchg
in
sbb
mov
loopne
cld
movs
sbb
sub
stos
xchg
test
or
xchg
mov
imul
cmp
mov
(bad)
sti
ret
adc
jmp
mov
jns
pop
jmp
xchg
mov
push
push
mov
aas
pop
js
shr
jo
sbb
(bad)
cld
add
jmp
sbb
dec
repz
movs
outs
call
shr
imul
rol
or
or
push
mov
cmp
mov
xor
inc
fsub
push
and
les
rep
ss
out
sahf
add
cmp
xor
sub
mov
inc
mov
ss
loopne
(bad)
pushf
inc
js
int
mov
cmp
or
pop
mov
test
popa
mov
das
in
pop
xlat
sbb
or
aaa
lea
les
mov
das
lea
inc
push
cmp
fld
mov
add
adc
add
jl
push
nop
xchg
mov
push
(bad)
test
inc
mov
adc
mov
ja
sbb
sbb
scas
push
pop
cmp
xchg
xor
cmp
dec
add
mov
ret
or
stos
jnp
cmp
les
pusha
fdivrp
test
cld
rcr
(bad)
ja
(bad)
stc
dec
adc
xchg
jae
fst
xlat
push
xor
add
xchg
cmps
pop
cmp
pop
mov
out
push
mov
sbb
(bad)
lock
xchg
pusha
ret
dec
xor
cmps
mov
pop
pop
sbb
adc
sbb
jecxz
pop
adc
std
retf
jbe
fnstsw
jecxz
cli
adc
out
add
fcmovne
ins
xlat
rcl
and
lahf
mov
jno
pop
mov
int3
iret
sti
setnp
and
cdq
push
mov
sub
call
mov
sub
jmp
test
xchg
bound
outs
leave
ja
sahf
sub
lods
adc
mov
xchg
das
mov
pop
xor
push
ss
cmps
fcmovne
pop
sbb
xchg
cmp
xlat
cmp
sti
(bad)
(bad)
(bad)
ins
pop
cmp
dec
out
mov
cmps
and
dec
mov
loopne
jbe
cs
xor
push
outs
jg
ficom
sub
in
or
es
gs
push
push
lods
sbb
sub
push
adc
or
popa
imul
fimul
jmp
sub
mov
test
push
pop
cwde
test
sub
movs
mov
std
fsub
inc
imul
pop
xchg
(bad)
(bad)
dec
push
mov
(bad)
loopne
add
imul
call
xor
inc
fucomp
in
out
and
movq
fwait
js
aaa
xor
mov
sub
fld
jecxz
xchg
push
push
cmp
std
jo
and
test
bound
dec
xchg
jne
fs
xor
ss
mov
pop
sub
adc
ret
xor
adc
sub
hlt
or
pop
pop
jecxz
(bad)
and
dec
cmp
inc
inc
fcom
jmp
lds
shl
jne
pop
and
adc
mov
mov
ins
xchg
sbb
mov
add
ins
scas
fnsave
fcmovnu
xchg
int
out
jno
mov
add
pusha
les
fmul
shl
cmc
add
repz
jmp
out
add
add
dec
pop
xchg
mov
and
and
les
sbb
mov
pop
add
mov
or
icebp
cmp
shl
sbb
push
nop
push
jle
or
div
jmp
mov
cdq
mov
jl
test
scas
dec
ins
and
and
xor
inc
mov
sti
adc
movs
ror
shr
mov
rcl
ins
ins
scas
and
test
out
lea
loop
push
and
(bad)
mov
iret
sar
jecxz
push
(bad)
sbb
pop
push
inc
add
dec
call
(bad)
out
popa
cld
sub
jae
mov
into
loope
push
pop
adc
jmp
mov
pop
aaa
(bad)
jp
fcmovnb
bound
shl
nop
enter
add
lods
sub
ja
outs
shl
bnd
ins
and
je
push
outs
lds
push
jae
mov
test
ret
pop
xor
ins
mov
lods
test
lahf
xor
sub
loop
pusha
scas
mov
fcom
cmp
or
stos
fstp
sbb
hlt
aas
inc
and
pop
in
call
mov
dec
pusha
sub
push
iret
mov
mov
es
mov
(bad)
pop
mov
mov
add
cmp
scas
inc
push
fiadd
ja
(bad)
jge
jg
int3
and
pop
push
xor
lds
sub
fild
inc
hlt
lock
aaa
hlt
jbe
fs
jmp
pusha
inc
inc
pop
xchg
or
mov
xlat
jae
jno
jae
mov
shl
(bad)
stos
popa
push
mov
in
(bad)
add
and
retf
cmp
in
fld
loope
cs
(bad)
fist
sbb
jp
sub
push
pop
dec
(bad)
mov
inc
test
adc
ins
dec
xchg
ss
jge
lds
adc
fstp
fisttp
std
sub
pop
pop
rcl
(bad)
pop
mov
jmp
and
mov
mov
les
into
push
(bad)
in
das
xor
lods
pop
lock
rcl
push
dec
jae
les
je
in
imul
adc
(bad)
shl
push
imul
sahf
(bad)
sbb
je
push
sbb
adc
outs
sbb
fild
je
movs
call
pop
lods
mov
cmp
jg
(bad)
frstor
mov
cli
rol
mov
pop
push
(bad)
repnz
sbb
(bad)
cmp
pop
cmc
lods
add
push
dec
sbb
fndisi(8087
and
push
cwde
pusha
and
sbb
js
icebp
call
jle
call
stos
xchg
sub
sbb
ret
gs
cmc
aam
cwde
shl
jl
js
mov
xchg
adc
adc
xchg
xchg
retf
xor
jbe
lea
loopne
fnstsw
fcomp
outs
(bad)
dec
push
xchg
mov
mov
jmp
bound
shr
mov
ins
cli
test
lds
adc
jbe
ja
fsubr
fwait
and
js
popa
addr16
add
pop
push
int3
(bad)
fistp
retf
hlt
adc
test
or
add
and
or
shl
es
mov
xor
mov
cld
cmps
jnp
das
mov
or
sub
cwde
pop
push
pop
clc
sbb
jns
jbe
xchg
push
in
ds
inc
mov
ins
fistp
push
lods
pop
jmp
bound
and
adc
inc
outs
sub
sar
push
rol
inc
push
arpl
sub
pop
inc
fnstsw
hlt
cli
xchg
test
retf
pop
xor
dec
push
mov
sbb
les
scas
mov
push
inc
xchg
stos
mov
push
cwde
inc
or
pop
pusha
ret
or
sbb
and
sti
shl
shr
jecxz
pop
xor
enter
jp
out
mov
jmp
mov
xor
call
dec
pop
out
(bad)
(bad)
and
or
push
add
call
pcmpeqd
lods
call
cmc
mov
or
pop
std
push
fdiv
fsub
sbb
xlat
imul
loope
cmp
cmp
mov
add
mov
je
push
movs
cmps
ss
pop
(bad)
pop
mov
inc
and
psrlw
loopne
shl
js
jmp
lods
push
adc
popf
pop
fwait
add
outs
fdivr
sub
fwait
jmp
rcr
in
mov
test
dec
aaa
aam
mov
mov
mov
xchg
pop
mov
cmps
dec
xor
add
push
pop
ins
outs
sub
pop
sbb
and
push
pop
mov
out
stos
xchg
les
fild
ins
fdivr
daa
sar
shl
push
jmp
seto
push
jnp
add
adc
movd
repnz
push
je
cmp
xchg
pop
in
data16
cld
push
push
jmp
les
or
popf
pop
jl
fwait
or
adc
(bad)
outs
mov
dec
hlt
mov
mov
dec
adc
or
pop
retf
outs
(bad)
test
rcl
push
ficom
adc
sbb
cmps
pop
mov
jb
adc
and
pop
aaa
adc
ret
ret
jp
arpl
popa
push
jo
jge
(bad)
mov
mov
test
inc
loope
aaa
dec
cmps
pop
in
enter
xor
jbe
je
leave
mov
cmp
mov
mov
add
jbe
xchg
mov
xchg
rcl
cld
sbb
mov
clc
inc
adc
fsub
inc
aas
mov
dec
pop
nop
jne
aad
in
data16
pop
rcr
sub
jmp
daa
fisttp
dec
adc
sub
ds
cs
inc
push
fsubrp
cs
mov
cli
push
test
sbb
(bad)
or
inc
or
ja
loope
ficomp
ins
rol
aas
add
outs
hlt
movs
mov
sbb
xchg
cmps
push
cmps
(bad)
adc
push
ss
add
jge
leave
test
jne
sbb
retf
or
push
popf
xor
push
mov
stc
mov
jle
shr
fwait
and
and
sbb
fstp
aad
mov
scas
mov
push
call
xchg
cmc
add
mov
inc
outs
call
cli
pop
push
retf
jo
push
mov
mov
pop
fidivr
cld
sbb
add
sbb
push
sbb
loope
dec
or
mov
cli
xchg
(bad)
and
and
and
imul
jge
movs
fld
xor
or
je
cmc
mov
std
pop
pop
mov
jbe
nop
bound
pop
push
(bad)
cli
mov
fisttp
dec
jmp
xor
mov
or
and
(bad)
inc
xchg
shl
clc
out
pop
push
ja
pop
stos
push
shl
fdiv
stos
mov
fist
add
cli
pop
stos
mov
std
in
in
jg
je
xor
pop
mov
add
jg
es
mov
mov
sbb
dec
mov
and
imul
shl
cmp
mov
retf
das
xor
adc
test
jns
push
pop
rcl
rcl
in
lds
xor
mov
movs
jnp
jno
xchg
xchg
jmp
sub
sbb
rcl
push
sub
hlt
rcr
inc
popa
cmp
ret
jge
and
dec
dec
outs
fidiv
mov
inc
es
fs
pop
mov
mov
in
test
(bad)
push
xor
ret
in
inc
jmpw
mov
in
pop
js
pop
in
outs
mov
mov
enter
jg
fdivr
adc
fld1
sbb
jecxz
pop
mov
or
fistp
test
shl
ficomp
loop
movs
(bad)
mov
mov
or
ret
outs
xlat
mov
cld
fstp
ficom
inc
aam
leave
imul
push
ficom
loopne
pop
inc
bound
dec
mov
mov
test
fisubr
add
push
adc
js
mov
mov
cmps
xchg
sar
jo
test
int
mov
call
mov
xchg
and
int
pop
dec
and
or
aaa
push
in
adc
cmp
or
add
xchg
jecxz
jmp
pop
fsub
aad
stos
icebp
data16
pop
aaa
inc
xor
rol
mov
jno
adc
push
data16
jecxz
fs
dec
ja
arpl
sub
adc
pop
or
jb
or
inc
mov
jo
pop
in
mov
lods
ss
and
add
loopne
pop
cli
ret
add
aaa
mov
push
stos
add
inc
pop
lock
or
adc
lea
mov
pusha
mov
xchg
clc
pop
lea
add
xchg
mov
add
adc
test
lock
mov
push
js
(bad)
test
inc
pop
push
inc
lock
adc
fcom
pop
adc
mov
push
jg
jmp
clc
ins
aas
mov
adc
stos
vpaddq
shl
sbb
jle
je
add
xchg
pop
mov
movs
inc
stos
retf
gs
jmp
(bad)
mov
mov
jo
fimul
xor
mov
or
adc
dec
or
cmps
fisttp
dec
pop
cmp
or
addr16
adc
imul
pop
mov
jge
jo
or
sub
mov
xchg
in
clc
sbb
mov
imul
jb
ss
(bad)
cmp
push
sti
ret
jge
js
fdivr
dec
push
mov
out
clc
movs
outs
dec
or
in
adc
cli
mov
inc
dec
into
mov
pop
mov
movs
pop
bound
jmp
fstp
fwait
iret
clc
mov
aas
ds
jp
test
dec
fcom
cs
nop
pop
jae
mov
or
xor
daa
jne
scas
mov
push
push
xor
clc
cmps
pop
pop
loope
(bad)
fbld
shl
lea
adc
scas
mov
ss
add
mov
sbb
xor
sahf
push
xchg
out
call
jle
rcr
add
loopne
jbe
das
out
jmp
xor
add
fdiv
xchg
push
aas
xlat
in
adc
sub
out
jg
mov
lea
push
ins
ja
sbb
add
scas
fadd
ret
test
mov
js
test
and
pop
ret
in
jbe
add
outs
add
mov
xor
loope
adc
pop
enter
inc
out
mov
(bad)
iret
cli
fs
pusha
not
cmp
push
sub
ss
cwde
push
popf
lods
sbb
add
push
fwait
adc
sub
inc
pusha
ins
add
pusha
cld
mov
out
sub
pop
jmp
pusha
cmp
add
je
xchg
xor
(bad)
leave
shr
ins
aam
mov
or
imul
sbb
sbb
or
dec
mov
pop
add
mov
xor
push
push
pop
imul
jbe
jg
data16
cmp
inc
push
jns
sbb
cmp
mov
(bad)
cmp
loop
xor
pop
into
push
or
add
aaa
aam
imul
sub
mov
mov
mov
and
pop
mov
cmp
lods
add
test
pop
inc
sbb
imul
add
nop
addr16
adc
pop
or
popf
fldenv
mov
jbe
pop
jmp
cmp
or
int
pop
inc
pop
mov
shl
sbb
nop
and
mov
xchg
pop
lea
mov
aas
mov
icebp
loopne
pop
cwde
sub
int
hlt
ins
aaa
ds
push
xchg
dec
aaa
(bad)
call
movs
fstp
jg
jp
hlt
mov
sub
in
outs
add
mov
mov
inc
jl
loopne
pop
dec
dec
dec
or
shr
fcmovu
(bad)
mov
sbb
retf
push
or
cs
pop
pop
jmp
mov
push
dec
adc
fst
and
sub
fadd
(bad)
jle
mov
push
sbb
clc
cmp
leave
hlt
(bad)
cmp
push
stos
and
aaa
add
pusha
sbb
aad
repz
mov
add
imul
sahf
add
stos
xchg
std
inc
xor
pop
inc
fwait
test
sub
fdivr
outs
sar
xor
pop
jo
pop
ja
mov
sub
push
sahf
jae
std
jnp
ror
add
sbb
loop
iret
jmp
xchg
mov
aam
sbb
and
sahf
ins
leave
hlt
loope
rcl
inc
fsub
mov
mov
in
nop
fwait
push
ins
aam
pop
mov
pop
mov
setle
jg
inc
push
neg
cmp
std
repz
inc
pop
pushf
stc
fld
fnsave
cs
ins
lods
adc
enter
add
mov
test
pop
(bad)
mov
aam
sbb
aaa
dec
mov
mov
js
stos
jo
hlt
ja
xor
adc
inc
out
outs
xor
sub
sub
dec
bound
call
or
jecxz
pop
cli
xchg
pop
jmp
and
jno
(bad)
(bad)
mov
shl
adc
in
push
push
fsub
test
mov
push
push
sub
jbe
call
or
div
loope
sub
xlat
add
es
xchg
inc
ins
or
mov
mov
xor
sbb
call
fld
rol
stos
popa
jo
pop
clc
ds
jne
mov
(bad)
mov
pusha
cmp
mov
pop
test
xor
stc
lds
add
xor
int
inc
inc
xchg
or
adc
push
xchg
lods
test
jbe
dec
push
inc
rcr
jbe
sbb
jb
add
sbb
cmp
xchg
pop
add
aas
cmp
fs
mov
xchg
add
test
mov
sbb
outs
and
mov
mov
das
mov
dec
or
mov
push
and
or
mov
mov
adc
inc
mov
cmp
add
icebp
outs
xchg
test
mov
adc
and
mov
test
lds
inc
shr
inc
mov
shr
pushf
adc
add
xlat
adc
xchg
cmp
das
outs
jg
clc
cmp
scas
cmp
sub
jns
or
in
push
cmp
adc
lds
movs
jae
inc
in
rcl
xor
mov
outs
jl
jmp
dec
dec
fadd
mov
ss
test
pop
daa
loopne
inc
mov
jnp
in
std
jbe
mov
shrd
call
(bad)
or
pop
pop
std
cmps
cmp
mov
inc
push
inc
ss
jbe
iret
and
add
lds
icebp
imul
in
(bad)
sbb
pop
out
push
mov
rcr
xor
mov
adc
out
out
lds
sub
cli
mov
pop
inc
jne
aad
jns
inc
mov
mov
sbb
sub
mov
mov
sbb
and
sbb
outs
cmp
mov
pusha
test
push
es
pop
dec
nop
fdivrp
jne
pop
loope
cli
aam
adc
mov
push
cdq
pop
push
push
add
cs
mov
xlat
pop
test
nop
fadd
mov
dec
dec
bound
test
cmp
pop
sti
bound
and
push
das
fiadd
inc
mov
xor
pushf
adc
lea
jne
ins
fld
scas
sub
xchg
inc
clc
push
adc
lock
cld
dec
cmp
enter
into
mov
(bad)
add
and
add
mov
mov
jl
mov
lods
lock
cwde
js
jp
test
pop
mov
leave
mov
out
fistp
push
test
mov
fisttp
mov
mov
pop
pop
or
mov
add
mov
imul
(bad)
push
ss
test
mov
in
lahf
add
sbb
xor
mov
jmp
test
xor
test
in
jecxz
mov
jmp
and
sbb
mov
icebp
inc
fild
adc
pop
xchg
outs
sbb
sti
pop
aad
popf
pushf
test
call
inc
ds
dec
outs
je
sub
bound
and
clc
(bad)
adc
or
lds
cmp
mov
or
call
(bad)
outs
cmp
sub
cmp
test
in
push
imul
cmc
mov
pop
and
fadd
jne
into
mov
out
cdq
hlt
and
fwait
mov
icebp
adc
fadd
retf
xor
into
jge
mov
movs
xchg
adc
lds
std
test
lods
in
arpl
dec
xchg
inc
or
mov
sbb
icebp
pop
in
jl
push
ret
lahf
cmp
mov
push
add
push
push
mov
jbe
mov
(bad)
mov
int3
fcmovnu
movs
or
or
iret
test
popf
in
shl
cmp
popa
test
add
out
out
xchg
jns
fisubr
aas
adc
scas
lods
iret
test
loope
out
mov
mov
jecxz
push
mov
pop
outs
out
mov
adc
in
push
inc
inc
imul
xor
xchg
pop
jmp
jne
out
(bad)
add
mov
adc
sub
outs
adc
or
repnz
pop
push
mov
sahf
xlat
loopne
loope
test
sti
sub
inc
inc
pop
mov
sbb
mov
mov
sbb
stc
adc
or
ss
outs
fldcw
inc
fiadd
sbb
lock
mov
sub
pop
pop
or
dec
push
mov
sbb
shl
dec
mov
jnp
or
cmp
ret
push
fidivr
mov
cmp
call
retf
outs
mov
loope
mov
mov
xchg
movs
popf
cmp
jo
mov
retf
les
inc
jl
push
test
cmps
retf
mov
add
sbb
mov
je
xor
mov
and
push
cmp
xchg
jmp
mov
jecxz
mov
test
mov
xor
int
lea
add
lss
loope
ja
dec
call
data16
mov
movs
movs
in
sbb
fisttp
mov
cs
sub
add
bound
cmc
adc
mov
leave
jno
stc
push
sar
push
push
ret
sbb
jl
mov
cmp
push
cmp
icebp
in
test
pusha
cmp
es
inc
inc
xor
mov
mov
mov
enter
push
mov
neg
es
xor
out
ins
inc
test
sub
out
repz
or
adc
shr
pop
loope
dec
test
jg
sub
call
adc
sbb
adc
sub
pushf
push
loop
out
pop
adc
cli
cmp
(bad)
cdq
jge
test
pop
sbb
or
and
or
nop
in
jno
daa
call
mov
push
and
fs
xchg
fmul
pop
out
and
mov
bnd
push
loopne
inc
outs
rol
fwait
loop
add
repz
jo
out
adc
outs
pop
int
test
ja
cmp
adc
sub
pop
dec
inc
ret
pop
(bad)
neg
mov
pop
je
mov
scas
fcom
mov
inc
and
dec
arpl
ja
cmp
sub
popa
shl
sub
fist
adc
fs
js
add
in
add
std
xchg
push
inc
aas
jmp
sub
adc
sub
inc
xchg
add
push
fisttp
xor
cmp
loope
jmp
mov
mov
push
cdq
cmp
and
jmp
dec
shl
clc
ret
push
bound
mov
xchg
lock
call
imul
cmp
enter
xor
shr
inc
(bad)
jno
stos
int
test
sbb
punpckhdq
pop
pop
mov
push
jl
mov
jp
pop
or
test
sbb
push
in
xchg
aas
mov
cwde
adc
test
push
mov
cwde
shl
sbb
xchg
ds
dec
or
mov
sub
jo
fsub
stos
xchg
bound
sub
mov
inc
das
aam
xchg
shl
fidivr
retf
fisttp
call
mov
or
mov
ror
fild
cwde
out
retf
rcl
jnp
mul
cdq
mov
lods
fdivr
adc
sbb
ret
fld
hlt
dec
je
retf
arpl
and
test
das
add
jne
dec
add
or
xchg
ss
bound
mov
cmp
outs
(bad)
inc
mov
ss
outs
loopne
outs
repz
push
or
mov
(bad)
imul
icebp
lods
adc
(bad)
in
ret
mov
mov
jb
mov
std
cmp
rcl
clc
loopne
add
push
cld
push
jns
add
jge
loope
scas
arpl
(bad)
aad
aad
lods
add
hlt
xor
lods
sbb
cmc
jmp
jecxz
scas
inc
cmps
adc
iret
out
pop
lea
(bad)
ror
je
xor
xchg
add
mov
mov
cmp
pop
xor
fs
add
(bad)
pop
push
frstor
adc
loope
out
icebp
add
cmps
not
and
add
adc
jl
dec
mov
and
fwait
movs
out
aaa
rcr
jbe
or
pop
rcr
jb
ss
sub
adc
mov
pushf
mov
inc
xor
jl
lds
pop
fld
inc
sub
add
daa
and
mov
or
in
data16
rol
fsubr
mov
in
int3
fsubrp
loopne
sbb
and
jb
add
jb
retf
scas
mov
in
add
idiv
out
pushf
ficom
cwde
inc
mov
add
push
push
and
jmp
test
shr
jge
inc
pop
jne
dec
xor
xor
push
sbb
cmp
shl
ror
cmp
in
retf
cli
xchg
pop
sti
fisttp
leave
jb
adc
call
mov
dec
outs
jmp
pop
inc
jae
mov
movs
xor
push
hlt
mov
fsubr
dec
ret
jmp
std
xchg
jmp
sbb
iret
sbb
push
pop
pop
mov
inc
xor
lods
lea
daa
jb
jge
sbb
add
add
dec
(bad)
aaa
ins
xchg
js
test
into
push
and
adc
ja
in
loopne
xor
cdq
popw
push
push
pop
inc
div
sti
fld
shr
dec
push
les
push
inc
xlat
ret
inc
lods
xchg
fwait
jp
loop
inc
lahf
and
mov
dec
std
icebp
popf
clc
mov
cs
in
adc
add
inc
mov
lods
inc
ja
cli
hlt
xchg
pop
jg
arpl
sub
loop
cmps
sub
in
mov
jmp
sub
add
out
inc
enter
shl
cmp
outs
test
push
gs
dec
inc
div
and
and
pop
mov
in
call
mov
aam
and
mov
pop
dec
call
js
push
aad
hlt
mov
mov
push
adc
add
adc
xor
and
or
adc
inc
add
mov
dec
xor
and
sbb
inc
out
leave
(bad)
dec
pop
and
pushf
dec
(bad)
test
sub
ss
xchg
aaa
aaa
fisubr
add
cmp
and
sbb
repnz
inc
(bad)
retf
sbb
outs
div
jbe
test
pop
push
cwde
test
mov
push
rol
fld
ret
aaa
in
pop
mov
jae
adc
adc
add
std
popa
mov
xor
jmp
and
add
cmp
mov
cld
cs
lods
es
iret
jns
test
scas
scas
adc
sbb
mov
adc
dec
imul
in
dec
and
imul
sub
add
(bad)
or
mov
arpl
mov
inc
mov
jmp
(bad)
jne
arpl
aaa
add
fld
into
dec
(bad)
mov
cmp
jmp
addr16
rol
mov
pop
inc
jmp
sub
adc
and
je
mov
add
add
xchg
mov
lods
push
ss
adc
fstp
ja
in
mov
adc
dec
jmp
and
add
pushf
ds
mov
das
in
pop
nop
xor
xchg
or
cmp
mov
(bad)
pop
jg
(bad)
imul
rcr
je
jl
iret
and
fnsave
inc
mov
xor
ins
ins
fcom
mov
ret
mov
je
cmp
in
into
dec
in
fbstp
xor
xchg
dec
test
xor
inc
mov
sbb
movs
inc
xor
(bad)
sbb
push
imul
out
inc
call
nop
pop
daa
es
ins
push
xlat
adc
push
leave
jl
stc
lds
lods
cmc
mov
dec
fmul
adc
cmp
jp
push
scas
icebp
(bad)
movs
sub
aas
dec
jmp
cld
or
out
sub
ret
ins
call
(bad)
out
xor
inc
iret
fwait
jo
adc
or
fisubr
inc
jp
xor
das
retf
fistp
jl
gs
les
push
pop
or
mov
mov
mov
in
pop
mov
clc
add
push
xchg
cs
es
sub
adc
mov
xchg
mov
lds
mov
sbb
call
call
clc
cmps
mov
stos
inc
sub
inc
not
pop
imul
jo
xor
fild
pusha
movs
push
fsubr
adc
add
mov
sbb
jne
fcmovbe
sbb
mov
out
out
imul
and
out
aaa
mov
xor
or
sub
mov
(bad)
ffree
and
or
jnp
jbe
pop
xchg
outs
mov
sbb
and
jp
clc
and
(bad)
xor
loopne
(bad)
fdiv
mov
inc
xor
sbb
(bad)
sahf
cmp
pop
mov
js
push
add
lock
lods
fwait
outs
inc
fsubr
imul
mov
mov
xlat
push
test
out
pop
pop
stos
cdq
xchg
mov
aas
lds
xchg
ja
ins
xchg
jns
adc
int3
mov
xor
xchg
push
jecxz
cmp
cmp
inc
mov
jb
sub
jne
jp
stc
iret
inc
test
jno
fimul
adc
fisub
das
(bad)
jmp
inc
pop
(bad)
add
imul
jmp
sub
scas
push
cmp
pop
inc
ins
fcmovnu
inc
xchg
mov
xor
imul
push
dec
pop
neg
mov
adc
cmp
dec
fwait
jp
loop
jg
ud1
mov
adc
mov
mov
rol
inc
out
stos
cmps
stos
mov
clc
inc
xchg
jo
addr16
(bad)
jno
mov
loopne
ins
fild
clc
out
mov
das
add
xchg
add
mov
aaa
lock
xchg
in
xor
add
(bad)
mov
pop
int3
int3
add
xchg
retf
jo
jbe
das
mov
call
add
xor
not
call
dec
shr
int
cmp
dec
jmp
pop
jo
mov
inc
xchg
mov
stos
into
or
xlat
xchg
test
jmp
ret
xor
add
div
ins
jnp
clc
dec
nop
xor
sbb
jb
mov
jo
mov
cmp
mov
repnz
fwait
sbb
pop
xor
pop
in
sti
push
add
mov
popa
repz
pop
inc
pop
dec
lods
mov
xor
test
cmp
adc
mov
sub
push
add
jecxz
mov
out
repnz
dec
jns
fidiv
cmp
cmp
jp
ret
jbe
ja
scas
jbe
popa
frstor
ja
adc
mov
xchg
add
adc
fdiv
or
inc
and
pop
(bad)
mov
fimul
jmp
pop
pop
jle
nop
and
xor
(bad)
mov
add
les
fs
jmp
adc
test
gs
push
xor
enter
push
mov
fs
jo
xchg
xchg
out
sub
fmul
push
test
xchg
jmp
cmp
cmp
std
mov
mov
mov
jg
ins
ins
das
mov
and
(bad)
mov
mov
jp
jle
pop
sti
arpl
ss
cmps
push
mov
int3
pop
add
and
add
mov
clc
push
cmps
sbb
pop
cmp
pop
rcr
int
sub
daa
jmp
and
push
loopne
pop
loopne
pop
(bad)
test
or
loopne
or
es
pop
add
aad
mov
add
inc
jbe
pmaddwd
cmps
data16
pop
fist
pusha
call
jecxz
out
pop
jne
ss
adc
jmp
add
ret
mov
mov
stos
loopne
add
mov
mov
add
add
fistp
jo
scas
sbb
pushf
mov
loope
enter
mov
(bad)
daa
push
pop
xor
(bad)
stc
jmp
cli
or
pushf
ret
sbb
sub
retf
ret
(bad)
mov
and
je
mov
jo
test
in
push
ja
mov
cmps
cld
add
inc
stc
dec
ins
xchg
pop
aam
cli
cmp
add
cmp
jg
sub
cmps
sbb
ins
or
std
xchg
mov
rcl
xor
inc
cmps
pushf
xor
mov
loopne
into
push
push
push
sahf
scas
sub
xchg
cs
jo
ret
ds
or
xor
mov
mov
clc
push
mov
cmp
jbe
gs
add
jae
dec
cmp
jmp
sub
in
lods
and
inc
jb
aaa
clc
xor
inc
repz
nop
mov
aaa
cmp
xchg
xor
fdivr
xchg
lock
ins
aas
hlt
and
push
iret
cli
stos
fdivr
scas
push
sahf
nop
cmp
lods
mov
inc
inc
ja
test
pop
fdiv
repnz
cs
loop
or
jae
pop
dec
icebp
daa
add
jle
xlat
inc
jl
mov
scas
call
sub
mov
push
in
mov
cs
xor
add
push
lods
rcl
push
jbe
in
stos
aaa
or
or
jae
push
cdq
and
pop
sub
mov
xor
push
ds
and
sbb
jne
pop
int3
fild
adc
adc
push
scas
lock
aam
arpl
xlat
jmp
ret
enter
hlt
out
out
adc
cmps
sbb
inc
fmul
arpl
push
fidivr
leave
or
popf
inc
pushf
ds
cmp
shl
dec
cmp
into
ins
add
mov
mov
stos
sub
adc
push
cs
sbb
test
xor
xor
xchg
xchg
xor
(bad)
daa
or
repz
cs
jnp
and
push
or
pop
adc
ror
fucomp
test
jne
mov
push
mov
dec
xor
dec
mov
mov
dec
out
dec
dec
pop
add
loope
cmp
test
and
(bad)
mov
lds
fsub
cli
mov
fiadd
mov
fwait
movs
paddb
dec
adc
cli
mov
or
mov
pop
mov
push
dec
in
ds
and
or
push
in
(bad)
xchg
jbe
mov
test
loope
adc
adc
aas
cmp
fimul
xor
mov
pop
xchg
mov
sub
rcl
cmps
fbld
js
jb
add
mov
xor
push
xor
sbb
shr
push
shl
inc
jb
stos
mov
add
mov
mov
mov
jmp
clc
stos
sbb
(bad)
rol
fstp
loopne
repz
push
sbb
mov
or
push
test
xchg
cmp
gs
(bad)
xchg
cli
add
adc
cmp
fsub
imul
xor
(bad)
in
sbb
das
mov
fisttp
dec
inc
shl
loope
scas
stos
dec
jne
(bad)
xlat
mov
cmp
aad
je
adc
push
mov
mov
sub
adc
call
test
lahf
sub
inc
stos
adc
cmp
sub
push
pusha
imul
out
mov
fmul
xchg
mov
add
jno
stos
int
or
sar
inc
aas
mov
mov
ficomp
lahf
mov
sbb
call
jo
adc
test
mov
jbe
adc
cmps
hlt
xchg
sbb
std
inc
in
inc
outs
or
xor
or
ret
xchg
jbe
mov
jbe
cdq
pop
hlt
icebp
jns
in
lods
xchg
in
scas
imul
pushf
dec
outs
mov
push
inc
dec
lock
push
test
adc
pop
es
sar
test
pop
ficom
paddusw
mov
and
adc
js
clc
mov
inc
mov
jb
js
sbb
dec
pop
xor
rcr
sti
scas
(bad)
sbb
fdivr
cmp
pop
mov
into
pop
cmp
loope
xchg
push
mov
inc
popa
xor
or
dec
xor
xchg
mov
sbb
aam
pop
mov
rcl
sub
inc
push
or
mov
pop
push
outs
mov
mov
lock
push
sbb
addr16
jge
jmp
push
mov
inc
xlat
repz
push
xor
retf
xchg
mov
jb
pop
shr
adc
lods
mov
fcmovu
dec
mov
mov
inc
xor
cmp
cmp
cmp
cmc
cmps
pop
loopne
xchg
leave
lock
(bad)
test
mov
xlat
retf
pop
add
mov
push
nop
mov
xlat
jge
jmp
jg
das
mov
xchg
and
sbb
std
mov
jecxz
ins
add
inc
mov
sub
sub
mov
fsubr
popf
into
fsubr
test
and
ret
and
mov
ds
cli
data16
xor
pop
mov
in
lods
mov
push
or
jo
sub
pop
xchg
jle
sub
xlat
aam
mov
test
mov
or
mov
aad
xor
ins
and
xchg
mov
and
shl
sbb
std
in
mov
ss
(bad)
ss
inc
xor
xor
or
cmp
add
push
cmp
lods
sub
pop
call
mov
(bad)
mov
dec
loope
pop
and
and
mov
sahf
dec
inc
xor
push
cmc
call
lods
xor
inc
shl
mov
mov
jo
loop
xchg
pop
rcl
retf
inc
sti
adc
pop
mov
inc
xor
push
jbe
movs
mov
sbb
rol
lahf
pop
rcl
xor
sub
aad
adc
rcl
push
jmp
adc
jle
fwait
mov
mov
js
fiadd
fistp
dec
arpl
test
addr16
mov
sub
sub
clc
repnz
cmp
fcom
xchg
jmp
mov
jo
push
(bad)
or
push
jo
test
xor
push
gs
mov
pop
out
ret
mov
jmp
mov
mov
cmp
and
sti
push
clc
mov
mov
les
adc
(bad)
jmp
inc
hlt
scas
les
mov
and
and
or
xor
js
xor
imul
add
out
movs
push
mov
inc
fldenv
xor
xchg
push
(bad)
outs
pop
in
out
pusha
sti
sub
adc
pop
call
je
ss
movs
sbb
loopne
mov
sbb
sbb
neg
fstp
pop
jo
fadd
aas
jl
popf
jmp
lods
repz
scas
jmp
out
clc
or
push
and
mov
and
sbb
cmp
movs
stos
mov
dec
pusha
mov
dec
repnz
adc
dec
add
es
iret
jmp
es
mov
test
mov
in
cmp
ins
lock
mov
and
sar
fdivr
cmp
stc
push
fisub
mov
cmp
and
push
mov
aad
ror
sbb
adc
mov
shl
inc
je
jmp
mov
lock
in
mov
(bad)
push
nop
clc
pop
jo
icebp
bound
bsf
pop
mov
nop
cmp
xchg
cs
mov
mov
dec
xchg
pop
cmp
ins
pop
push
sub
scas
add
repz
mov
daa
cli
test
jo
inc
sub
jg
jp
(bad)
mov
mov
sub
push
call
pop
les
sbb
dec
and
out
or
ds
pop
dec
mov
ret
xor
data16
loope
mov
add
sub
jg
loopne
xor
ror
xor
call
pop
shl
sbb
adc
add
fcomi
push
sub
ror
adc
and
ret
or
es
aam
les
sbb
jb
mov
add
adc
inc
xchg
ins
mov
mov
lods
add
mov
leave
mov
xchg
pop
or
inc
(bad)
push
popf
sub
inc
dec
daa
(bad)
cmp
popf
inc
push
cmp
mov
cmp
(bad)
(bad)
ins
lods
cmp
aam
mov
push
and
push
in
in
cmc
out
xor
pushf
xchg
cld
sub
jge
jmp
addr16
push
and
push
xor
shl
mov
push
(bad)
fdivr
or
sbb
pop
js
xchg
enter
adc
test
jbe
mov
mov
push
in
cmc
sbb
push
jbe
adc
in
mov
rcl
sahf
mov
out
adc
int3
je
sbb
retf
cmp
dec
aad
jne
and
(bad)
js
call
mov
pop
mov
xchg
inc
mov
cmp
(bad)
int
loop
jno
or
dec
in
mov
jne
mov
mov
jb
(bad)
in
sbb
cmp
(bad)
leave
jmp
push
(bad)
ffreep
ret
or
pop
xchg
mov
inc
jae
mov
imul
pop
xor
adc
call
cdq
sub
out
mov
or
xor
pop
mov
mov
xchg
daa
popa
and
fld
mov
xchg
cs
iret
add
inc
out
adc
sub
dec
jnp
mov
mov
movs
sbb
sub
mov
add
call
js
or
leave
sbb
daa
dec
or
xor
xor
sbb
inc
pop
fdivr
mov
icebp
push
ds
lods
jo
mov
outs
aam
xor
std
(bad)
cmp
sub
ds
rcr
mul
push
xchg
(bad)
rol
cs
mov
sar
jo
enter
sbb
pop
imul
push
aad
pop
cmp
popa
xor
xchg
pop
shr
push
add
mov
ss
mov
fucomi
mov
inc
push
mov
cmp
pop
rcl
nop
test
pop
xchg
mov
xchg
dec
jns
lds
popa
sub
cs
mov
neg
dec
xchg
xor
jmp
push
and
push
shr
push
fs
nop
dec
daa
push
jb
fst
or
(bad)
mov
ins
dec
sub
dec
mov
in
in
or
jb
inc
xor
and
jo
add
mov
loopne
push
cmp
pop
pop
push
fst
jns
mov
imul
xchg
fucom
pop
cmp
cmp
mov
cmp
(bad)
js
test
clc
sub
mov
xacquire
popf
mov
xor
pop
jne
aas
push
out
movs
(bad)
mov
mov
sbb
psubq
mov
je
push
repnz
cmp
mov
or
addr16
fucomi
add
adc
pop
ret
ret
(bad)
push
arpl
mov
loopne
push
adc
jo
xor
cmp
jge
sub
std
cmp
xor
xor
popa
imul
inc
xchg
adc
dec
pop
mov
test
pop
cmp
scas
push
or
xor
(bad)
lahf
xor
addr16
add
add
bound
addr16
gs
dec
sbb
pusha
gs
or
mov
std
mov
bound
sub
or
(bad)
fistp
call
sahf
out
lea
xlat
dec
outs
xor
push
fadd
jb
hlt
outs
lock
outs
xchg
cmp
xchg
fmul
fwait
or
add
pushf
jle
mov
jle
imul
or
fs
add
mov
arpl
or
cld
and
pushf
fcmovnu
xchg
out
mov
xchg
add
in
push
lock
arpl
push
adc
imul
xor
and
push
cmp
scas
popa
arpl
loopne
or
out
dec
jle
lods
dec
adc
in
jne
sti
mov
scas
mov
mov
sbb
je
sub
fdivr
adc
rcr
ficomp
outs
pop
or
mov
mov
fist
fs
ja
xchg
test
fcomp
dec
jle
and
ret
clc
mov
push
lds
mov
pop
pop
jo
pop
loop
or
arpl
in
movs
das
cmc
xchg
jbe
(bad)
sub
daa
add
push
push
retf
and
pop
pop
lock
je
xchg
add
cwde
push
gs
iret
aam
lods
aaa
xchg
mov
retf
jbe
cmp
int
(bad)
adc
mov
mov
mov
xchg
push
fiadd
pop
jg
je
push
xchg
pushf
pop
inc
push
cmps
push
ss
jb
in
cmp
fiadd
or
dec
jb
cld
aas
pusha
jecxz
mov
sahf
sub
and
pop
ret
ret
or
pop
inc
mov
and
mov
pop
popa
jmp
lock
jg
div
push
pop
js
dec
cmp
inc
push
add
jne
sbb
sbb
jge
or
std
mov
mov
sbb
or
ss
(bad)
or
mov
ss
stc
or
adc
in
sbb
jl
xor
mov
push
call
inc
xchg
adc
jbe
stos
and
ss
fs
jnp
fsub
jae
xchg
mov
movs
mov
imul
or
es
test
ds
adc
inc
xor
and
in
not
push
in
inc
test
xor
ja
and
jmp
(bad)
lahf
push
lock
dec
xor
mov
outs
int3
in
cmp
loop
mov
fisub
bound
pop
rcl
(bad)
rcl
ja
stc
or
fadd
mov
ror
push
dec
in
into
cwde
adc
cmp
inc
jle
add
aam
rcl
push
mov
imul
mov
or
js
push
test
xchg
aam
xchg
mov
mov
mov
sub
dec
daa
xrelease
mov
pop
pusha
push
xor
sar
sub
mov
sub
sbb
jmp
fidiv
movs
bound
ret
ret
rol
les
movs
mov
cmps
(bad)
call
cwde
xlat
fldenv
and
arpl
jecxz
jo
jmp
loopne
data16
retf
sbb
call
gs
mov
out
das
imul
pmaxub
mov
push
loop
iret
or
iret
sbb
stc
xor
inc
cld
ja
and
jbe
mov
jae
and
push
cmp
push
and
sub
mov
popa
mov
xchg
xchg
sahf
clc
cmp
repz
inc
enter
pop
mov
clc
addr16
mov
(bad)
cmp
xor
retf
cmp
ins
fild
ins
and
ss
mov
rcl
ror
cmp
sbb
ins
mov
inc
cmps
sbb
mov
cs
cmp
cs
arpl
in
int3
dec
(bad)
je
xor
add
cmp
movs
mov
pop
(bad)
js
das
dec
mov
add
jns
adc
in
mov
jge
dec
dec
push
dec
lea
ror
mov
and
push
sbb
pop
add
xor
mov
test
or
push
sbb
jmp
jle
xor
mov
mov
scas
mov
and
cmp
jle
or
mov
int3
and
jb
bound
je
fst
and
xor
comiss
or
mov
adc
xchg
cdq
sbb
push
jp
adc
rol
lods
ret
adc
(bad)
out
fld
pop
add
ins
mov
and
sub
mov
pushf
loope
pop
shl
hlt
daa
fdiv
cmps
adc
jae
or
push
inc
stos
(bad)
test
xchg
lock
mov
jge
sahf
push
popa
mov
ds
push
inc
lsl
bound
cmp
mov
data16
popa
mov
mov
sbb
add
out
add
inc
fidivr
xchg
ret
add
mov
xchg
shl
pusha
add
cmp
lds
jo
ret
std
sahf
xor
jne
and
cmc
fs
adc
xlat
mov
sub
shl
jg
fisttp
js
cmp
pop
out
add
ret
lods
add
cmp
jmp
inc
imul
push
rol
repnz
loope
ins
pop
mov
push
sbb
stos
cmp
(bad)
je
dec
lds
xor
and
out
mov
xor
rcl
push
fild
mov
sbb
dec
add
pop
push
sbb
dec
aam
sbb
retf
outs
cmp
sbb
adc
imul
or
sbb
pop
outs
test
lods
call
pushf
adc
aad
repnz
jg
(bad)
pop
call
sbb
fsub
test
jno
push
paddsw
mov
std
movs
in
sbb
inc
add
fcmovnu
test
call
mov
or
popa
push
(bad)
pop
(bad)
mov
int3
jbe
xchg
call
in
test
push
leave
or
xchg
fld
call
jnp
scas
adc
popf
jle
cmp
sbb
ss
das
bound
xchg
aam
aas
clc
xor
jg
out
in
out
inc
mov
pop
push
movs
in
ins
push
dec
xor
ins
push
mov
and
retf
movs
pushw
sub
pushf
push
jo
aad
mov
cmp
movs
cmp
nop
and
sar
sub
and
or
in
repz
jo
cld
dec
mov
pop
pop
aas
mov
hlt
push
ret
xor
fcom
fs
in
and
sbb
adc
xchg
push
icebp
or
mov
cmc
sbb
leave
aaa
xor
cwde
mov
std
mov
(bad)
xlat
jmp
mov
jbe
movs
sbb
imul
stos
in
das
ficom
scas
jb
xchg
push
add
mov
test
pop
sbb
cmp
dec
in
and
and
not
pop
repnz
les
fcomip
jno
mov
xchg
jns
fistp
cs
xor
dec
in
mov
test
test
mov
jns
mov
jne
pop
rcr
ja
dec
(bad)
mov
enter
inc
pop
mov
gs
mov
mov
jmp
xor
dec
dec
(bad)
je
mov
ret
jbe
sub
ret
fcom
dec
cld
mov
lahf
call
sar
mov
sub
fs
lds
data16
mov
fisubr
pop
rcr
clc
jg
jecxz
(bad)
xchg
imul
adc
pop
mov
xchg
call
mov
out
inc
fucomip
push
ror
and
inc
jbe
or
enter
mov
jmp
push
fwait
pop
call
and
ror
and
loop
and
mov
in
lea
out
ret
ss
(bad)
pop
xor
mov
sub
and
ret
push
bound
sti
ins
inc
cwde
into
adc
jo
sbb
lock
xor
and
mov
call
dec
sti
dec
call
int3
sbb
jl
adc
push
and
dec
hlt
adc
rcl
sbb
sbb
out
das
pushf
cs
cmp
out
repz
add
and
mov
(bad)
(bad)
loope
lea
push
xchg
je
or
inc
dec
mov
or
(bad)
inc
dec
iret
adc
push
cmp
xchg
adc
inc
cmps
call
cmps
jmp
jns
jno
xchg
fcomp
jo
inc
ins
pand
inc
mov
ins
xlat
lock
ds
in
rol
sub
fdiv
adc
cmp
mov
push
(bad)
xlat
popa
retf
sub
shl
add
in
push
sbb
sar
test
hlt
inc
call
sbb
imul
outs
mov
out
mov
cmps
sub
add
add
add
fstp
or
add
inc
(bad)
std
push
xchg
or
xchg
sub
lock
loope
sbb
cmp
stc
jo
or
push
dec
add
into
ss
pop
add
or
dec
dec
push
arpl
mov
xchg
xchg
ins
test
jl
shl
test
push
dec
xor
xchg
pop
aam
pop
fcom
pop
mov
or
lea
or
sbb
inc
ret
or
inc
and
adc
sub
pop
jp
inc
fisttp
mov
in
push
sub
sbb
pop
sbb
in
mov
(bad)
call
cmp
test
mov
movs
xor
push
jle
das
xchg
ds
pusha
sti
and
jne
movs
xchg
daa
ret
outs
cld
movsx
lods
test
push
rcl
xor
sar
addr16
mov
lahf
dec
cdq
gs
(bad)
scas
loop
mov
ins
mov
loope
mov
dec
ror
les
rol
es
cmp
xlat
push
sbb
mov
jmp
pop
(bad)
imul
mov
test
mov
aad
mov
push
jecxz
data16
mov
add
sub
ja
mov
push
pusha
push
add
movs
sbb
fcom
call
dec
mov
bound
xchg
neg
push
cli
xchg
scas
mov
jb
fcmovne
fwait
xor
xor
lea
ror
mov
imul
call
fild
xor
mov
xor
not
dec
inc
adc
hlt
push
sbb
(bad)
fidiv
js
into
fcom
rcr
ins
jle
shr
or
mov
imul
mul
loopne
jecxz
retf
inc
es
sar
ja
add
push
cwde
lock
pusha
adc
and
fldenv
and
inc
imul
inc
dec
cli
ret
int
bound
test
pop
or
jnp
movs
push
stc
mov
push
out
rcr
pop
movs
js
push
or
jge
fadd
cmp
mov
or
pop
ja
add
cmp
mov
and
js
dec
mov
add
mov
add
mov
bound
into
jge
sbb
ror
(bad)
je
pop
fdiv
pusha
xchg
jmp
arpl
ror
pop
outs
icebp
push
push
stc
out
push
pop
inc
repnz
mov
addr16
push
je
jl
add
push
sbb
xchg
xlat
sbb
call
fst
fist
mov
sti
cmp
jmp
or
sub
add
int3
cmps
push
sub
fsubr
mov
(bad)
fidivr
sub
sbb
mov
sbb
sbb
or
push
ss
xchg
sbb
xor
pop
repz
pop
push
mov
sbb
(bad)
fmul
shl
mov
test
jmp
mov
jne
sub
(bad)
push
rol
xchg
push
push
jp
inc
pop
(bad)
outs
ss
and
mov
pushf
sub
ret
lea
fist
mov
mov
pop
mov
adc
lds
cs
or
popa
cwde
sbb
(bad)
pop
cmp
pop
jl
or
fld
adc
mov
pop
mov
push
test
in
push
gs
fs
shl
fdivrp
fld
addr16
cmps
push
mov
and
shl
mov
adc
sahf
mov
xchg
adc
mov
int
inc
rcr
sti
shr
xor
sbb
sbb
lods
push
test
cs
cli
mov
ja
leave
movs
mov
daa
enter
sub
arpl
dec
push
push
mov
inc
push
pop
(bad)
jl
and
add
pop
mov
pop
aaa
adc
movs
ins
dec
xchg
sbb
psllq
xchg
jg
aam
jmp
xchg
retf
pop
xchg
(bad)
cmp
aaa
fsub
imul
ins
shl
cmp
push
sub
mov
dec
or
jl
scas
retf
int
push
sbb
push
lods
test
cmp
rcl
jns
dec
jmp
push
ss
or
loope
push
sahf
jmp
xor
sub
pop
sub
add
aaa
cmps
sbb
pop
xchg
ror
jno
pusha
and
push
syscall
jnp
mov
out
stos
pop
pop
mov
mov
inc
fidivr
fcom
mov
mul
mov
mov
or
mov
push
mov
push
mov
pop
vunpcklpd
addr16
cmp
repz
inc
sti
in
pop
jge
or
shr
pop
jl
bound
pop
outs
push
xlat
push
test
and
and
scas
push
and
cmp
sub
xor
inc
retf
lods
and
daa
aad
test
int3
push
sbb
lea
ins
xor
xor
cmp
sbb
xor
mov
fstp
mov
mov
fdivr
mov
mov
test
test
adc
out
pop
repz
push
scas
fs
call
mov
push
lock
adc
int
test
jge
and
pop
sti
mov
ret
fmul
bound
pop
xor
sbb
adc
hlt
aad
push
and
or
retf
stc
loop
jae
mov
push
add
sub
push
ins
lds
arpl
sbb
adc
xor
or
cs
sub
outs
sbb
mov
in
xchg
inc
lods
stos
mov
ss
fld
inc
ret
cmp
int3
ret
add
das
les
push
addr16
je
pusha
jl
pop
push
cmp
and
je
inc
inc
(bad)
sub
cli
adc
cdq
in
jge
rol
aaa
int3
outs
xchg
or
xchg
lods
push
xchg
mov
cwde
stos
mov
data16
test
mov
pushf
mov
add
jge
mov
sbb
jne
sub
add
add
mov
pop
aam
pop
ins
outs
out
jbe
sub
ss
mov
outs
rol
cmp
xlat
jo
jo
(bad)
mov
hlt
add
or
or
jecxz
xchg
mov
pop
loopne
fst
xchg
jo
aam
pop
xor
mov
aam
mov
dec
in
xor
popf
ins
rcl
fs
std
dec
mov
push
fwait
in
push
mov
push
jge
push
sti
pop
push
fistp
fs
xor
xchg
push
test
je
mov
dec
cmp
loopne
mov
dec
std
jbe
ins
dec
fisttp
mov
rol
test
or
xor
xchg
pop
scas
mov
loopne
add
vminss
pop
in
call
ins
fcom
ss
imul
addr16
sub
sub
lahf
dec
aaa
aas
lds
mov
test
inc
mov
jge
pop
or
js
clc
es
cmp
(bad)
call
pusha
push
inc
add
sub
ja
fist
jle
pop
pop
xchg
addr16
and
test
mov
mov
pop
ror
mov
ds
les
push
test
movs
pop
icebp
inc
loop
push
xchg
bound
jbe
cmp
xor
aaa
jnp
int3
xchg
arpl
mov
add
mov
lahf
pop
push
xchg
call
xchg
sti
add
lods
push
in
add
mov
push
dec
js
scas
div
adc
pop
ins
or
inc
imul
cs
out
ror
inc
ins
fcomp
(bad)
pop
push
aas
inc
movs
shr
mov
sub
test
ja
jmp
(bad)
pop
ret
aas
ja
pop
shl
in
mov
mov
mov
mov
fadd
or
loop
jnp
or
mov
jb
jbe
mov
mov
jns
(bad)
mov
dec
fsubr
jl
inc
pop
mov
and
fwait
std
ret
fwait
jmp
pop
adc
mov
and
xchg
push
xor
in
xchg
jbe
or
and
sbb
adc
pop
cmp
les
ds
lds
ss
mov
aam
loope
scas
sub
adc
sub
mov
push
es
pusha
xchg
add
sbb
aas
lods
adc
sahf
inc
ins
xchg
rcl
jg
scas
ret
call
clc
repnz
test
inc
sbb
fcmovnbe
mov
cmp
mov
stc
movs
sbb
jmp
push
mov
inc
out
push
pop
imul
addr16
je
inc
aaa
fs
adc
loope
jns
test
cmp
mov
idiv
test
cmp
(bad)
push
and
ss
cmp
pop
inc
(bad)
jae
xor
(bad)
in
push
out
test
mov
std
push
pusha
imul
mov
xor
pop
sub
mov
adc
test
lea
int
gs
imul
add
rol
cmp
ret
add
mov
fwait
adc
outs
fidiv
xchg
or
lock
pop
pushf
pop
ins
loope
test
push
jp
xor
das
fstp
mov
mov
lock
xchg
push
gs
xchg
lea
sub
ror
inc
test
icebp
jmp
jo
xchg
call
cmp
or
push
xchg
test
sti
jae
cmp
daa
cmp
popf
les
inc
jo
inc
out
fwait
jo
aaa
mov
ins
jne
and
adc
cmp
addr16
mov
xor
and
sub
jne
fdiv
fcmovne
pop
add
loopne
stc
sub
xchg
inc
ret
mov
imul
and
mov
pop
adc
mov
cmp
movs
xlat
js
fiadd
mov
xor
push
mov
sahf
repnz
mov
xor
test
cmps
ds
push
dec
cwde
sub
inc
cs
inc
ss
shr
xor
ficomp
sbb
int3
sub
xor
jo
fwait
call
stos
fist
sub
clc
cmps
(bad)
sub
adc
inc
sbb
adc
and
inc
lds
cmp
jp
pop
mov
xor
or
mov
xor
push
clc
lds
sbb
dec
lds
jns
add
add
dec
jno
or
jo
cmp
fisub
dec
cli
mov
test
aam
lods
lahf
aad
aam
leave
xor
mov
adc
std
arpl
pusha
das
sbb
mov
xor
cli
inc
dec
(bad)
fmul
jnp
jb
fwait
push
ja
test
dec
sysexit
xchg
pushf
and
pop
ss
clc
es
popa
fs
xor
mov
or
cli
stc
jle
adc
rcr
aaa
lods
lds
cmp
cs
adc
inc
adc
pusha
add
xor
cli
leave
fadd
loopne
retfw
add
movs
or
sub
mov
in
fwait
js
sbb
mov
outs
cli
mov
xchg
retf
xor
adc
add
pop
(bad)
fst
adc
push
pop
std
les
sbb
das
mov
stos
jmp
das
int
mov
xchg
call
ins
ins
cs
out
mov
das
pusha
inc
push
outs
out
out
add
pop
pop
outs
mov
mov
lods
stos
pop
jmp
xor
inc
(bad)
in
dec
push
ficomp
pop
jno
lods
adc
mov
mov
(bad)
dec
push
fcom
(bad)
adc
mov
mov
or
leave
je
cmp
out
fs
or
std
inc
fisttp
sti
retf
add
scas
loope
pop
mov
mov
scas
adc
adc
adc
mov
inc
mov
jmp
jmp
cmc
mov
sbb
fstp
xchg
add
lock
jb
sub
gs
scas
fild
rcl
aad
loope
fwait
and
gs
mov
mov
pop
or
pop
cmp
jl
adc
jmp
in
sub
repnz
bound
xlat
fwait
or
mov
ret
bound
cld
ins
imul
popf
sbb
cmc
pusha
mov
stos
dec
cmp
mov
mov
mov
fcmove
movs
mov
mov
loopne
sbb
aas
add
jmp
inc
mov
push
fucompp
sbb
and
mov
push
inc
jecxz
icebp
inc
mov
xor
js
mov
cmp
loopne
mov
mov
xor
sbb
cmp
das
and
dec
mov
or
mov
jne
dec
loopne
pop
inc
add
popa
xor
ret
jl
pop
stos
popa
mov
dec
call
sbb
fild
and
pop
addr16
and
das
xchg
icebp
js
outs
or
mov
popf
popf
xchg
ror
shr
xchg
clc
cmp
loopne
rol
xor
sub
xchg
aas
sbb
imul
imul
shl
pusha
jno
ins
(bad)
sbb
enter
or
xor
sub
sbb
cmp
(bad)
sub
xchg
and
mov
call
pop
loope
popa
xchg
or
aas
xchg
jmp
push
cmps
js
adc
in
cmp
ret
push
mov
fidiv
dec
xlat
hlt
cmp
(bad)
arpl
in
xor
int
mov
and
adc
dec
movs
int
mov
xor
add
fisubr
lahf
mov
jne
popa
idiv
push
cvtpi2ps
bound
scas
pop
ror
mov
clc
xor
(bad)
gs
mov
dec
sbb
pop
mov
sbb
push
pop
and
iret
add
push
mov
cld
(bad)
aam
outs
lahf
mov
jbe
push
sbb
pop
ins
adc
inc
out
mov
ja
sbb
adc
or
cmp
ins
sub
mov
add
add
(bad)
push
adc
dec
xor
pop
lock
imul
(bad)
std
stos
data16
push
or
mov
loope
popf
imul
pop
sub
rol
pop
mov
ja
sub
pop
ret
stos
push
sbb
test
sar
and
adc
cmp
stos
nop
xchg
adc
aam
lock
pusha
gs
test
inc
lahf
xlat
mov
sub
inc
addr16
call
jmp
div
(bad)
mov
or
aaa
ror
and
ss
out
nop
or
lods
rcr
ficom
test
lea
jb
jno
fisub
mov
dec
daa
ret
and
inc
in
mov
stos
jmp
out
inc
sub
xchg
hlt
mov
pusha
sti
mov
mov
test
jo
sbb
pop
or
cld
(bad)
rol
adc
popa
or
lods
call
jecxz
cmp
clc
push
neg
jle
xor
add
pop
push
sahf
cmp
fst
pop
xchg
add
shl
adc
je
mov
or
lahf
adc
dec
das
jle
das
mov
add
clc
test
(bad)
sar
add
in
ins
lahf
fsubr
pop
dec
repnz
mov
inc
cmc
cmps
or
outs
out
or
in
fldpi
pop
je
xchg
inc
fbstp
and
pushf
test
jge
adc
repnz
dec
or
repnz
cmp
mov
push
mov
js
adc
adc
pop
imul
jmp
xchg
cli
jmp
in
and
and
add
jg
cmp
jbe
inc
jmp
sub
or
call
loop
cli
add
mov
(bad)
lahf
shr
fsub
clc
push
push
neg
add
add
mov
cmp
(bad)
and
sub
popa
jp
xor
mov
ds
sbb
(bad)
fadd
dec
cmp
ret
gs
lods
(bad)
adc
sbb
xchg
adc
in
lods
leave
mov
sub
call
arpl
inc
ret
stos
stos
jecxz
test
(bad)
fdivr
loopne
in
mov
rol
jb
inc
test
mov
push
adc
mov
adc
scas
xor
aas
xchg
mov
adc
fnstenv
mov
adc
jl
ja
movs
pop
stc
mov
stos
push
loop
(bad)
clc
lods
inc
mov
outs
(bad)
scas
pop
cmps
push
movs
lods
ror
cmp
in
mov
sti
xchg
lea
jae
loop
cmp
mov
shr
mov
sub
push
dec
(bad)
out
hlt
(bad)
sysenter
jmp
dec
inc
jl
lds
dec
sub
in
test
gs
dec
daa
cld
adc
sbb
data16
ins
or
jmp
stc
xor
clc
adc
rol
mov
ins
add
fimul
fwait
push
dec
fld
div
sbb
(bad)
mov
xor
cmp
imul
inc
int
fadd
ds
push
mov
imul
outs
mov
stc
jge
rol
test
push
fsubr
rol
jnp
adc
mov
(bad)
and
adc
into
jo
or
sub
sbb
ins
dec
xchg
pop
fcom
mov
and
xchg
dec
(bad)
in
scas
cmp
imul
lods
or
dec
cdq
mov
les
cmp
rcl
loop
cmp
rol
or
dec
mov
fdivr
leave
jne
xchg
jmp
sbb
sbb
inc
xor
dec
cli
sti
stc
mov
aas
and
jne
out
jne
std
xlat
stos
push
div
mov
push
(bad)
mov
push
add
add
sahf
out
ss
jmp
pusha
outs
pushf
inc
inc
push
pop
add
test
loopne
jmp
rol
bound
jmp
add
or
push
push
mov
or
(bad)
adc
cld
dec
cmp
adc
inc
stos
and
movs
push
cmp
sti
xchg
gs
xor
xchg
sbb
lea
cs
mov
pop
lods
stos
int
imul
loop
(bad)
out
std
xor
xor
jns
fcmovb
jne
pop
scas
mov
jmp
pop
mov
rcl
cmp
push
js
cvtdq2ps
push
out
push
imul
aad
adc
pop
je
add
or
adc
pop
(bad)
scas
cmp
rcl
push
add
cmps
sbb
repnz
fisub
adc
jmp
jbe
sti
xor
xchg
(bad)
add
pop
leave
cmps
ins
ret
dec
(bad)
bound
fimul
push
je
call
cmc
sbb
mov
and
mov
xor
mov
sbb
(bad)
or
dec
sub
mov
add
(bad)
jbe
repnz
rcr
shr
xchg
js
loopne
sahf
bound
outs
lahf
movs
repz
add
jg
test
mov
mov
into
call
inc
neg
lock
in
dec
mov
add
pop
imul
(bad)
xor
ret
mov
aaa
sbb
mov
inc
ja
mov
xchg
push
push
ja
inc
sub
inc
inc
test
mov
adc
ss
sub
mov
retf
call
jl
mov
sbb
sub
pop
mov
jl
rol
mov
mov
stos
into
sub
adc
and
fisubr
mov
addr16
pop
std
or
sbb
ficomp
ins
mov
inc
push
jle
push
jbe
or
push
sub
inc
inc
xor
mov
je
call
sub
iret
sub
adc
mov
cmp
out
sbb
mov
sbb
or
push
sbb
jno
imul
pop
in
cmp
mov
adc
mov
xor
test
jbe
inc
inc
hlt
add
adc
dec
pop
cwde
in
or
enter
sbb
ret
mov
sbb
xor
sub
jp
ds
xchg
fbld
and
xchg
jmp
inc
or
adc
xor
jp
sbb
sub
in
sar
bound
jne
imul
mov
push
push
jo
ss
imul
ss
or
cmp
pushf
adc
add
and
imul
ja
lds
jecxz
jmp
fidiv
xchg
shr
frstor
addr16
cmp
leave
es
je
ja
mov
pop
adc
adc
xor
push
push
js
jno
mov
jo
mov
cmp
inc
fsubr
push
pop
jns
inc
stos
(bad)
pop
push
push
adc
(bad)
mov
popa
sub
pop
push
mov
aad
cld
dec
fld
jbe
pop
sbb
daa
pop
sub
rol
fist
mov
test
xor
int
inc
dec
xchg
ret
(bad)
push
sbb
int3
call
pop
cs
mov
cmp
push
enter
jns
fldcw
pop
xor
dec
call
loopne
lahf
mov
pusha
mov
add
mov
xor
and
xchg
fwait
cmp
inc
mov
jne
sbb
call
jno
fbld
cmp
das
jns
sub
hlt
lds
cmovle
sahf
lods
sbb
add
aad
mov
popa
jecxz
mov
mov
ins
mov
sbb
adc
out
jnp
fild
leave
(bad)
fadd
dec
shl
(bad)
fmul
(bad)
or
lock
sti
add
es
mov
add
jecxz
push
lods
mov
sahf
int
xor
add
dec
jns
jge
mov
icebp
ret
adc
dec
mov
cwde
les
daa
adc
xor
dec
add
mov
jae
or
adc
and
(bad)
ftst
sbb
scas
jno
mov
push
mov
push
and
inc
sub
add
jns
xchg
ret
ins
xlat
mov
call
dec
cmp
arpl
dec
xchg
popf
adc
inc
inc
loop
je
lds
mul
imul
pop
mov
dec
js
mov
push
jb
daa
mov
in
adc
loop
out
inc
loopne
sar
mov
rcl
lea
jp
sbb
mov
(bad)
movs
xor
mov
jp
iret
pop
push
in
or
sbb
je
or
or
xchg
jns
xchg
adc
sbb
push
loop
fisttp
(bad)
sub
test
addr16
loop
mov
push
mov
adc
pop
push
mov
sar
push
lock
js
lods
lods
call
icebp
cmp
sub
jp
hlt
jmp
inc
ss
add
jle
push
pop
cmp
loopne
test
dec
cmp
and
fimul
and
and
add
loopne
inc
mov
cmc
mov
or
cmps
xor
push
arpl
adc
push
ss
in
je
push
std
xchg
xchg
pop
jo
test
dec
dec
ss
out
ins
cmp
mov
jge
sbb
dec
mov
add
idiv
add
call
mov
push
pushf
pop
fdivr
jmp
sub
stc
mov
or
adc
pop
pop
jge
jge
sub
icebp
xor
mov
(bad)
lods
test
pop
dec
adc
inc
in
push
jge
add
inc
pop
add
mov
jle
inc
add
dec
stos
inc
jmp
icebp
jo
in
call
push
lods
mov
out
dec
inc
cmps
sbb
sub
xchg
sar
mov
mov
into
call
xor
and
call
shl
pop
jbe
out
mov
push
add
mov
sub
mov
and
mov
cmps
jbe
std
es
dec
pop
mov
sub
inc
out
or
dec
sar
cwde
or
imul
mov
jmp
push
dec
adc
or
add
in
push
cmp
xchg
popa
push
mov
jge
imul
jo
mov
data16
push
xor
(bad)
in
cmc
nop/reserved
hlt
sbb
lea
in
outs
loop
int3
retf
mov
add
test
or
fwait
or
push
retf
add
fcomi
or
xchg
aam
sub
xor
mov
pop
mov
fadd
or
je
jmp
pop
aaa
jmp
push
iret
dec
add
push
cmps
push
call
add
inc
bound
mov
xchg
repnz
xchg
sbb
fcom
cmp
mov
in
aad
jp
imul
mov
sti
outs
mov
les
push
in
inc
adc
call
cmp
shl
(bad)
aaa
js
push
cdq
inc
shr
push
ret
sub
cmp
mov
mov
mov
in
loopne
call
test
sbb
xchg
or
data16
adc
(bad)
jge
push
aas
dec
stos
pop
push
stos
xor
adc
mov
inc
sbb
out
and
lds
or
mov
adc
lods
sub
(bad)
fild
inc
xchg
add
outs
mov
and
sub
sbb
push
mov
push
addr16
ds
fst
and
and
jo
dec
cmp
sub
and
(bad)
loopne
shl
mov
sahf
xor
adc
fidivr
jge
ss
pop
fdivr
push
mov
pop
fimul
test
fmul
jne
stos
pop
inc
in
inc
and
jb
dec
lock
test
inc
mov
icebp
enter
xor
out
aad
cmp
jmp
hlt
cmp
sbb
mov
rcr
jbe
retf
out
inc
mov
call
retf
inc
mov
(bad)
pop
loop
mov
and
mov
(bad)
or
pop
mov
sbb
pop
imul
mov
cwde
push
sub
in
lds
dec
cli
dec
mov
adc
xchg
mov
cmp
xchg
pusha
sti
mov
ins
fisttp
mov
push
int3
sbb
or
dec
retf
cmp
lock
xor
scas
test
xor
retf
scas
leave
jb
call
and
pop
enter
pop
sahf
adc
je
add
sub
loope
div
data16
test
and
add
js
scas
mov
add
or
push
cmp
jbe
jp
xchg
(bad)
aaa
(bad)
and
lahf
and
enter
je
mov
loopne
sub
test
std
mov
repnz
jo
test
je
stos
push
pop
fdiv
std
or
ficomp
jne
(bad)
and
dec
ret
mov
pop
mov
cmc
aam
mov
aaa
mov
inc
xor
es
scas
xor
retf
cli
loope
mov
std
sbb
pop
and
mov
bnd
mov
nop
and
sub
ins
mov
mov
adc
xchg
pop
aaa
hlt
iret
ins
aas
lock
or
mov
jle
fld
pop
pop
fucomi
sub
popf
mov
repnz
out
push
or
mov
mov
mov
hlt
lea
jbe
mov
jae
mov
cdq
sub
cmp
adc
adc
(bad)
push
push
mov
lods
inc
jno
fs
xchg
out
sbb
xor
adc
dec
cmp
inc
scas
xor
xchg
mov
add
rcr
lds
cmp
push
call
daa
mov
(bad)
xchg
stos
mov
jmp
or
ror
and
int3
pop
sbb
inc
lods
push
les
cmp
pop
sahf
cmp
sbb
out
dec
inc
scas
jmp
jp
sub
inc
add
neg
fist
mov
jmp
(bad)
and
(bad)
out
cli
and
sti
mov
shr
fadd
scas
xchg
fdiv
add
sbb
xchg
loop
aam
nop
add
or
xor
pop
or
xor
test
adc
xchg
sub
sti
repz
ins
inc
mov
xchg
rol
push
aam
ss
mov
pop
out
fwait
fwait
rcr
or
fidivr
push
push
addr16
je
rol
ss
(bad)
out
push
icebp
inc
sbb
mov
xchg
adc
mov
scas
push
in
or
pop
inc
addr16
ds
movs
setbe
nop
cmp
jns
mov
not
dec
les
sbb
data16
push
mov
in
int
cmp
pop
and
mov
jle
jb
cmps
stos
sbb
mov
pushf
add
xchg
add
mov
mov
(bad)
or
fsub
movs
ss
ins
jecxz
nop
sti
and
les
mov
or
and
push
or
rcl
std
push
sub
xor
aas
fxch
je
stos
jae
xchg
cs
mov
xor
and
(bad)
cld
push
jg
mov
icebp
inc
je
pop
(bad)
push
movs
and
sbb
jmp
adc
or
xchg
repz
ins
sub
adc
aaa
(bad)
or
adc
shl
or
mov
sbb
scas
scas
fcmovu
jae
xchg
add
stos
ss
stc
push
dec
dec
or
add
lds
sti
cmp
sbb
or
outs
sub
ins
push
jecxz
jmp
icebp
adc
pushf
jmp
sbb
(bad)
push
sbb
inc
sbb
dec
test
pop
movs
pop
(bad)
jmp
sub
aad
add
div
sub
in
into
jo
call
mov
add
and
mov
jnp
mov
pop
out
repnz
es
push
or
and
test
add
adc
ja
push
jmp
xor
and
scas
jmp
fbstp
xchg
fsub
fdivp
mov
xchg
clc
or
cmp
pop
push
push
movs
mov
mov
pushf
sbb
ds
ins
mov
push
push
add
fs
nop
loop
adc
lods
in
arpl
ret
div
mov
aas
ds
aas
mov
int
push
mov
arpl
mov
cmp
cmp
mov
pop
into
jmp
push
mov
in
or
inc
cmp
pop
jb
pop
ret
xchg
dec
loopne
adc
fmul
dec
mov
shr
jg
and
jmp
mov
mov
or
inc
inc
(bad)
pop
push
pusha
sub
(bad)
dec
ret
or
sub
setle
ror
popa
pop
ret
retf
lock
nop
push
xor
xor
ss
int3
inc
mov
scas
xchg
test
xor
xor
mov
clc
dec
push
mov
imul
imul
jb
inc
(bad)
fistp
int3
sbb
popf
push
lds
push
cld
ins
cmp
cmp
ret
mov
ret
loopne
js
xor
add
jmp
out
loope
add
imul
mov
jae
ins
mov
mov
loopne
sub
stos
nop
das
xor
mov
xchg
stos
pop
mov
into
sbb
repnz
imul
dec
mov
in
push
cmc
fsubr
popf
inc
xor
push
test
movs
fistp
jmp
and
in
cmp
ja
and
push
mov
pop
repnz
xchg
mov
clc
mov
mov
imul
lahf
cmp
sub
shr
stos
jp
dec
and
push
movs
les
xor
push
jecxz
leave
xchg
pop
ret
sub
ins
sbb
push
dec
scas
ss
xor
aaa
enter
lds
cmp
jge
ret
pop
(bad)
clc
pushf
aaa
pusha
ins
or
xor
jnp
outs
add
adc
jno
mov
jb
(bad)
bound
pop
(bad)
call
fstp
pop
call
rol
fstp
jo
mov
xchg
test
inc
xor
leave
inc
shl
fwait
loope
fsubr
pop
jg
stos
mov
popf
(bad)
pop
jle
add
shl
daa
out
lods
je
and
mov
xor
push
jl
movs
cmp
cmp
dec
call
sar
fcmovnu
inc
sub
or
outs
mov
cmc
ret
mov
and
dec
sahf
and
sbb
dec
or
xchg
push
into
mov
sub
out
mov
arpl
retf
cmp
sub
mov
les
mov
das
mov
xchg
clc
cld
jg
scas
cdq
jnp
sti
add
mov
sbb
cli
out
lock
add
xor
fdiv
mov
ret
(bad)
data16
leave
es
xor
(bad)
fist
sub
push
dec
or
sub
cmp
pop
popa
daa
mov
data16
int3
clc
in
out
xor
das
push
and
inc
or
mov
dec
dec
mov
stos
mov
jne
add
sub
push
push
loop
arpl
stos
sbb
inc
xor
fist
mov
xchg
mov
mov
ins
jecxz
adc
or
jl
sbb
xchg
stos
fcomp
jl
ret
and
xor
add
mov
arpl
add
add
xchg
pop
xchg
mov
mul
int
in
test
jne
mov
mov
stos
jge
sub
jmp
xchg
aam
and
icebp
sbb
lds
and
jno
outs
repnz
in
movs
or
mov
cdq
aaa
dec
icebp
enter
jno
inc
pop
psllq
dec
cs
adc
xor
bswap
or
xchg
sti
jnp
adc
push
jmp
test
push
jmp
popa
mov
shl
into
jge
fmul
add
sbb
gs
lds
adc
add
popf
adc
pop
push
test
cmc
hlt
sub
data16
and
and
sbb
cmp
in
xor
mov
xchg
das
xchg
sub
in
mov
loope
sbb
mov
mov
mov
mov
call
mov
dec
push
pop
mov
hlt
sub
in
or
pop
shl
and
ins
push
pop
les
push
ret
push
hlt
jo
(bad)
arpl
jge
dec
mov
aam
push
mov
sar
(bad)
lea
mov
sbb
cmp
aaa
fld
cli
repnz
cs
clc
sbb
pop
mov
(bad)
jge
or
daa
aam
jl
mov
pop
scas
jns
sti
aas
mov
out
inc
mov
call
in
add
jmp
xchg
dec
jne
stos
cdq
lds
sahf
or
xchg
ret
(bad)
ror
and
aas
cmp
call
pusha
xchg
add
out
adc
add
add
xor
jno
sti
and
pop
pop
push
mov
adc
xchg
pop
cmp
fwait
xchg
mov
imul
int
xchg
add
shl
jmp
push
xchg
je
movs
pmovmskb
mov
in
jp
mul
add
int3
imul
and
mov
jmp
cmps
es
mov
repnz
iret
js
jmp
cmp
jl
je
mov
cmp
dec
std
push
iret
push
fs
je
dec
(bad)
push
mov
jbe
shl
xor
adc
repnz
adc
outs
call
int
xchg
ds
and
mov
ins
mov
mov
pusha
jo
movs
dec
shl
push
loopne
jmp
out
sub
or
cmp
push
or
cmps
inc
cmp
test
clc
mov
fsub
lea
mov
and
in
add
(bad)
xchg
popf
xchg
push
lods
loopne
jo
mov
ins
jmp
pusha
rol
jecxz
and
ins
push
popa
enter
dec
sbb
mov
sub
outs
or
in
hlt
test
jmp
cs
xchg
adc
and
mov
push
int3
dec
shl
inc
leave
mov
push
mov
test
(bad)
aad
sbb
out
cdq
mov
jle
(bad)
iret
or
call
inc
add
or
jne
and
adc
or
mov
dec
call
dec
retf
push
in
jg
dec
and
cmc
push
adc
or
ret
adc
lods
or
pop
ins
lahf
jnp
jmp
xchg
cwde
rcl
(bad)
movs
call
mov
push
popf
ficom
test
pop
std
pop
ds
sahf
cmp
cmp
jbe
sbb
test
std
scas
ror
mov
or
or
cmps
cli
jmp
(bad)
dec
aas
push
adc
sbb
cld
icebp
mov
mov
and
adc
sbb
les
sbb
adc
outs
cmc
sti
push
mov
mov
adc
mov
or
out
fcomi
mov
xchg
push
jp
repnz
xchg
lods
adc
retf
in
sahf
mov
mov
test
and
int3
cmp
pop
jae
pop
dec
(bad)
add
test
pop
cmp
adc
shr
push
mov
dec
bound
jp
not
mov
mov
add
cmp
cwde
addr16
mov
pop
jge
push
inc
jne
jg
out
mov
inc
lock
jns
int
jmp
adc
push
rol
scas
cdq
mov
or
outs
clc
(bad)
lods
in
mov
lahf
xor
mov
push
push
pop
pusha
mov
pusha
fdiv
cmp
adc
add
fdivr
clc
mov
sub
or
push
dec
pop
daa
call
(bad)
fsub
mov
outs
push
fnstcw
or
push
push
adc
rcr
and
xchg
pop
inc
(bad)
fstp
xor
jl
nop
adc
fistp
add
stc
mov
int3
retf
or
add
mov
sbb
push
mov
lock
aam
sbb
stos
aaa
xor
cmp
out
rcl
mov
stos
jecxz
jp
mov
cld
pop
dec
out
sbb
test
ins
jecxz
pop
ffreep
mov
or
sub
jae
in
cmp
stos
pop
fsub
div
(bad)
inc
cmp
xor
adc
jl
fstp
add
stos
cmp
loope
xchg
mov
xor
sbb
std
popa
add
mov
pop
aam
add
sbb
cld
inc
dec
sbb
cmp
cmp
inc
xchg
cld
rcl
popa
dec
fst
inc
push
imul
add
das
outs
dec
enter
cmp
and
dec
(bad)
into
(bad)
out
fisttp
es
repz
imul
pop
xchg
xchg
push
imul
inc
mov
idiv
cmc
scas
push
mov
mov
jae
popf
mov
sub
xor
sub
pop
je
sti
xor
clc
sub
inc
mov
inc
adc
ror
dec
push
add
pop
jo
pop
dec
mov
sbb
loopne
in
xor
add
inc
jl
push
mov
movs
imul
sbb
lock
or
in
inc
std
addr16
imul
cmp
pop
add
dec
rol
mov
call
or
cs
and
ret
pop
fdiv
sub
loope
test
scas
cmps
cmc
shl
mov
lods
pop
jp
mov
stc
push
sub
inc
(bad)
adc
stc
dec
cs
aaa
or
icebp
test
ds
xor
xchg
and
dec
add
ins
test
dec
xor
jns
sbb
jge
xchg
ja
mov
adc
jae
push
xor
(bad)
aaa
ucomiss
mov
mov
fstp
and
dec
ret
pop
fnsave
and
pop
jmp
pusha
arpl
push
jns
mov
jne
inc
push
push
push
fwait
icebp
call
mov
in
inc
sub
push
(bad)
mov
adc
sbb
cmp
cmp
xor
add
xor
push
ret
inc
ja
repz
cmps
outs
sub
push
sbb
jns
cld
call
or
int3
or
mov
or
dec
bound
out
movs
dec
addr16
(bad)
out
cmp
arpl
in
call
xor
add
loope
push
scas
sub
aad
jb
cmp
push
fbld
xor
dec
xor
adc
sbb
sbb
jnp
jge
test
outs
fistp
not
cmps
imul
sub
dec
xor
sti
xchg
shl
inc
in
add
xchg
jnp
in
or
and
xchg
(bad)
test
jnp
(bad)
ds
pop
iret
or
popf
mov
mov
push
jge
or
lahf
pop
adc
or
cld
pop
scas
sar
mov
sahf
loopne
cmps
rcr
push
pop
jmp
cmp
lods
call
cmp
pop
mov
das
nop
sbb
push
cmp
call
aas
nop
mov
leave
sub
jmp
nop
rcl
mov
push
mov
pop
adc
mov
xor
and
inc
stos
(bad)
test
(bad)
xchg
in
push
cmps
retf
div
cli
cmp
mov
add
adc
push
nop
and
ins
push
pop
and
mov
dec
fbstp
out
inc
ret
ret
xor
jb
popf
pop
ret
mov
jno
inc
dec
sahf
inc
lds
jae
(bad)
xlat
out
mov
out
cwde
icebp
or
add
cmp
rol
inc
ins
xchg
mov
mov
(bad)
cli
inc
mov
mov
fidiv
adc
sbb
inc
push
stos
pop
sub
cmp
aaa
loope
mov
push
add
cmp
push
push
movs
add
outs
test
hlt
lods
fwait
movs
jp
aaa
or
pop
dec
add
ins
ror
pusha
(bad)
pushf
or
jne
out
and
pop
push
jb
mov
les
repnz
mov
push
cmp
jg
sbb
mov
jmp
xor
test
sar
pop
inc
inc
pop
push
cmc
sar
adc
or
xor
xlat
ret
test
dec
xchg
lock
mov
push
(bad)
aad
mov
jo
ss
pop
retf
test
(bad)
(bad)
sbb
dec
mov
xor
ret
test
pop
(bad)
fisttp
add
aaa
or
and
in
inc
pop
ftst
arpl
(bad)
std
fucom
or
cmp
fcom
xor
dec
cld
in
out
fs
jg
retf
adc
push
test
not
test
fisubr
jmp
mov
jge
push
cmp
adc
xlat
cmc
jmp
cmp
js
pop
mov
mov
or
add
imul
je
js
sbb
xor
jo
imul
xor
cdq
sub
pop
add
cli
(bad)
or
inc
mov
adc
ret
gs
not
(bad)
cmp
test
and
fs
das
mov
arpl
push
shl
je
inc
ja
ffreep
dec
nop
mov
clc
mov
aaa
cmp
pusha
ins
jecxz
add
js
in
pop
cmp
cwde
mov
ja
inc
test
inc
inc
fsub
ds
cmp
je
adc
cmp
push
sbb
div
jg
adc
popa
icebp
sbb
cmp
ds
(bad)
or
leave
sbb
enter
mov
fld
dec
test
push
xor
dec
call
jo
fisttp
mov
fist
clc
or
push
call
popa
mov
inc
mov
jno
sbb
loopne
adc
push
shl
xlat
ret
xchg
pop
int
pop
xor
nop
into
repz
mov
fidiv
pop
or
add
sbb
scas
jns
or
sub
fld
cmc
sub
call
mov
mov
xor
jbe
sub
mov
popf
cmp
sbb
jne
scas
mov
xor
loopne
je
and
and
or
imul
call
xchg
or
or
pushf
js
xchg
mov
push
cmp
fist
mov
jecxz
(bad)
inc
cs
mov
push
fdivr
pop
pop
pop
sbb
push
and
sub
jb
loope
mov
jge
test
jo
xchg
fwait
test
sbb
jp
ret
pop
and
pop
test
cmps
repnz
out
adc
inc
iret
add
and
js
sbb
push
sub
imul
add
add
sbb
lsl
mov
ret
add
jno
lds
test
xchg
mov
xor
gs
adc
cwde
xor
pusha
div
mov
pop
cmp
dec
sub
jne
inc
lock
xor
or
mov
(bad)
inc
mov
(bad)
and
sbb
jl
enter
clc
lods
jmp
aam
(bad)
sub
jnp
jmp
jg
push
push
cmp
ja
popa
fs
add
push
std
add
sbb
add
in
clc
xchg
outs
adc
ds
sub
jne
jbe
inc
xchg
mov
movs
push
inc
fdivr
sub
pop
ins
mov
outs
repnz
fstp
jo
hlt
xor
pop
mov
mov
cmc
dec
xor
push
mov
shr
popa
mov
pop
inc
push
cmp
aaa
out
scas
xor
popa
sbb
sub
stos
inc
push
aas
and
sub
cmp
lods
out
xchg
(bad)
and
cli
inc
mov
mov
push
cmp
call
mov
xor
sbb
add
aaa
push
pop
adc
mov
loopne
loop
out
mov
pop
jb
jge
adc
leave
and
sti
inc
ds
out
dec
cld
xchg
mov
xchg
push
cmp
sbb
addr16
int3
ja
test
inc
xchg
inc
inc
test
mov
push
mov
ror
dec
into
inc
out
or
enter
jb
push
push
pop
jne
ins
mov
pushf
cmc
cmp
mov
dec
js
fnsetpm(287
mov
sti
cld
pusha
jo
mov
psubusw
nop
mov
mov
adc
pop
bound
and
mov
add
lods
adc
in
adc
jne
mov
ja
xchg
pusha
(bad)
in
jmp
xor
push
fst
icebp
fild
je
enter
adc
jne
add
xor
sbb
cmp
je
call
add
aaa
ins
xchg
loop
jo
fstp
and
add
bound
aam
bound
int
mov
jg
ret
popa
nop
retf
push
inc
and
std
test
fcomp
rol
inc
xor
mov
sbb
mov
outs
jmp
mov
add
jae
fcomp
jmp
add
pop
and
push
int3
jmp
repnz
(bad)
push
inc
dec
pop
outs
stos
mov
dec
mov
or
sti
test
repnz
mov
pop
or
fsubr
test
fisubr
sbb
or
jp
add
adc
lods
fnstenv
call
cmp
or
loop
xor
mov
cmp
inc
mov
repnz
dec
xchg
mov
mov
pop
jmp
das
jg
mov
lea
dec
rol
mov
cmp
(bad)
gs
in
jae
sbb
jmp
int3
inc
hlt
loopne
rcr
adc
cmovg
aad
push
in
movs
(bad)
push
inc
fcomip
dec
and
and
dec
jbe
add
adc
jmp
sbb
ror
mov
xchg
add
jl
aas
and
sub
jne
mov
nop
dec
inc
rol
xor
jns
aas
aaa
push
dec
mov
ret
ror
mov
add
scas
jns
jb
fist
jmp
xchg
in
jmp
test
int3
add
and
out
cld
cli
arpl
rcr
and
enter
rcr
popa
adc
xchg
and
lahf
inc
ins
inc
adc
mov
(bad)
xor
push
fisub
popa
add
mov
ret
sbb
sbb
add
stc
push
pop
pusha
mov
add
hlt
push
sbb
in
cmp
sbb
sbb
lds
fwait
xor
jg
ret
mov
sbb
ret
and
push
dec
sub
cmp
sbb
out
imul
lods
mov
mov
fild
(bad)
add
jl
fwait
xchg
retf
adc
push
push
fadd
xchg
mov
jl
sbb
cmc
dec
dec
ins
and
cmc
fistp
pop
push
ss
sti
and
mov
int3
mov
loopne
jbe
imul
xor
loope
lods
data16
mov
dec
(bad)
outs
daa
in
rcl
jo
mov
jl
inc
mov
out
pop
xlat
xchg
adc
leave
jb
cmps
mov
sbb
clc
mov
xor
sub
fild
inc
pop
(bad)
cli
mov
icebp
enter
push
inc
mov
inc
imul
std
aas
and
popa
xor
(bad)
loopne
mov
xor
xchg
mov
jmp
push
pop
sbb
pop
mov
icebp
daa
sar
and
pushf
ret
ins
stos
into
dec
scas
mov
outs
xchg
push
dec
scas
xor
xor
bound
sti
movs
fidiv
add
clc
and
mov
pop
repnz
push
sub
adc
inc
jne
ins
js
mov
dec
ins
xor
jne
xchg
loop
clc
sub
xor
mov
adc
mov
lods
or
xor
loopne
std
add
sbb
add
add
fdiv
stos
out
dec
cmp
inc
xchg
aaa
and
lahf
call
mov
loop
sub
js
scas
jbe
adc
inc
aad
(bad)
fadd
sti
and
(bad)
std
cdq
pop
mov
shl
pop
or
clc
mov
sbb
stc
hlt
arpl
push
lea
mov
cmps
pop
nop
and
dec
push
mov
daa
pop
push
pop
in
dec
das
cmp
mov
sahf
add
sti
push
aad
xor
inc
dec
fnstcw
mul
pop
fdivr
lods
dec
bound
jg
inc
and
mov
and
mov
jl
mov
loop
addr16
push
aaa
pop
cmp
sbb
test
pop
or
data16
ror
fnstenv
fdivr
pop
mov
inc
mov
mov
cmps
xchg
cs
idiv
movs
cli
sbb
or
add
xchg
and
jnp
cmp
mov
xor
push
sbb
mov
mov
scas
xor
xchg
sub
fdiv
xchg
add
mov
push
pushf
xchg
xadd
pop
jecxz
lea
cmps
mov
outs
test
loopne
ja
jo
jno
sub
arpl
add
add
ret
ja
adc
pop
shr
cmp
jnp
sbb
adc
jecxz
and
rcl
enter
lods
stc
mov
out
ror
mov
push
shl
dec
ins
push
in
push
lea
mul
fadd
loopne
dec
xchg
test
out
cmp
sahf
add
in
dec
pop
jmp
pusha
push
jns
or
ret
sub
push
aaa
(bad)
and
inc
sub
push
shl
xchg
in
or
in
in
adc
mov
adc
add
or
cli
add
inc
cmp
mov
aam
cmp
or
jnp
lock
pop
outs
test
dec
push
stos
fdiv
push
mov
in
mov
sub
aad
iret
mov
cmp
pop
(bad)
sbb
dec
sbb
ds
inc
mov
mov
mov
call
icebp
sbb
pushf
(bad)
pop
xchg
inc
and
mov
call
clc
test
cmp
pop
and
ficom
xor
xchg
sbb
sbb
dec
test
pop
loopne
ds
or
lock
mov
adc
shl
push
cld
out
ret
sbb
call
in
repnz
or
jge
jg
add
inc
sub
or
xchg
jnp
sahf
sbb
mov
jecxz
mov
call
mov
aaa
inc
daa
fmul
call
adc
lods
and
pop
bound
jp
and
call
fwait
shr
inc
push
xor
data16
add
inc
ja
pop
in
or
lock
stc
sub
mov
add
data16
mov
test
mov
stos
data16
jl
dec
mov
push
cdq
jp
add
fwait
mov
push
inc
push
mov
jmp
lock
or
clc
add
push
ret
jle
fnstcw
and
ret
sbb
jb
cmps
je
and
inc
pusha
mov
dec
sbb
(bad)
hlt
or
or
adc
es
cmp
pop
dec
sub
cwde
lock
arpl
mov
iret
out
retf
data16
mov
ins
cmp
add
adc
adc
les
sar
sub
ins
adc
inc
pop
aam
popf
jae
retf
call
imul
stos
loopne
popa
shl
leave
test
cli
and
loopne
push
das
ret
and
jno
pop
leave
mov
lds
es
xchg
pop
les
sbb
popf
and
or
push
adc
retf
jae
jp
or
(bad)
jmp
(bad)
add
sub
fs
xchg
add
inc
ss
sub
jnp
fwait
pusha
cmp
mov
adc
mov
ins
add
inc
jb
lea
fsubr
inc
pop
mov
js
jne
push
sbb
fisub
cmp
out
and
test
xchg
and
leave
cmp
xor
pop
sahf
scas
or
mov
popa
add
clc
fisttp
mov
lock
jmp
mov
in
pop
mov
retf
es
gs
gs
cdq
imul
repz
cmp
sbb
fwait
cmp
jae
adc
xchg
jmp
in
les
and
jo
daa
test
pop
scas
and
(bad)
outs
mov
clc
stos
pop
cld
pop
pusha
nop
test
or
xor
pop
add
in
cmp
jmp
ret
lock
sub
or
repz
icebp
loopne
daa
daa
call
daa
sbb
add
(bad)
fdivr
loopne
sahf
cmc
in
cld
(bad)
leave
fmul
and
push
lea
inc
mov
call
in
pop
and
mov
xor
repz
or
push
xlat
or
(bad)
shl
mov
push
mov
and
cdq
and
push
in
adc
ins
(bad)
out
mov
in
stc
pop
in
add
jo
mov
out
rcl
fimul
xor
xlat
(bad)
stos
jg
lock
rcr
je
nop
stos
fst
mov
fsub
sbb
or
add
aaa
or
mov
in
aaa
je
add
sti
mov
jl
dec
test
mov
inc
jle
test
mov
ins
arpl
push
sub
dec
push
jo
pop
jl
retf
sbb
mov
cli
cmp
adc
sbb
add
div
dec
je
ins
cmp
xlat
inc
je
or
pop
adc
iret
push
dec
sti
rcl
jo
mov
lea
jle
jmp
dec
sbb
ds
pop
xchg
cmp
inc
aam
mov
cmp
ret
out
mov
jno
xor
clc
cwde
add
addr16
add
cld
add
into
mov
jno
inc
clc
mov
scas
sub
call
adc
mov
push
js
retf
mov
jecxz
imul
imul
rol
ins
pop
in
faddp
pusha
cli
inc
or
sub
mov
mov
in
bound
pop
adc
cmc
hlt
mov
icebp
mov
fsub
pop
(bad)
mov
(bad)
jbe
xor
das
and
call
push
sub
pusha
mov
pop
dec
not
ins
jb
shl
push
sbb
sbb
mov
lods
inc
(bad)
in
and
(bad)
pop
nop
mov
aas
jns
fs
ror
lds
push
jmp
or
xchg
jmp
push
and
or
mov
ret
mov
inc
dec
sahf
jmp
scas
mov
aas
in
mov
shr
nop
mov
sbb
xchg
and
ja
pop
mov
sub
xor
ss
call
adc
lods
dec
loope
int
sahf
sub
test
jmp
imul
fnsave
div
call
mov
dec
rcl
(bad)
imul
ret
xchg
retf
sbb
jge
xor
push
or
mov
sub
push
jae
add
and
xchg
push
jmp
jmp
push
mov
sbb
mov
mov
outs
(bad)
rol
popa
sub
pop
bound
fst
pusha
inc
data16
inc
xlat
lds
add
outs
jmp
sbb
ret
xchg
test
cld
jb
sub
push
(bad)
clc
mov
inc
push
jl
or
xor
add
cmps
cwde
(bad)
dec
daa
mov
adc
mov
popf
in
pop
test
stos
clc
mov
ins
sbb
mov
inc
dec
jae
add
fisttp
ret
jns
jbe
cmp
sub
stc
fsubrp
or
shl
scas
ror
sbb
pop
mov
xchg
cmp
lods
add
jle
lds
xchg
test
ins
cli
jge
ins
sbb
repnz
xchg
ins
fcom
mov
out
xor
sbb
push
ja
xchg
lds
cmps
ins
fs
std
cmp
leave
out
fldenv
or
(bad)
into
mov
outs
mov
lock
ins
sar
(bad)
enter
mov
adc
jno
je
mov
jbe
fdiv
pop
enter
xchg
add
adc
js
jns
adc
add
lea
mov
push
pop
js
call
rcr
ret
adc
mov
and
jl
ret
xlat
sub
imul
out
das
mov
push
pop
cmp
and
scas
cmps
sbb
adc
std
sbb
mov
jp
outs
imul
loopne
push
dec
shl
adc
or
cmp
or
loopne
xor
lock
push
test
sub
cmp
pop
xchg
sub
push
test
pop
outs
aam
loope
into
adc
xor
jb
pop
fbld
sbb
cmp
das
repnz
dec
fild
xchg
adc
xor
xchg
aas
div
repz
jmp
mul
out
in
mov
lods
inc
dec
jb
mov
sub
xor
xor
lahf
push
cld
xchg
es
popa
mov
loope
lock
cmp
icebp
repnz
dec
push
push
test
mov
xlat
(bad)
pop
xchg
outs
fnstsw
xchg
add
mov
jb
jmp
adc
xor
loope
lods
cdq
ficom
sub
ja
je
xor
lock
pushf
xchg
cmp
pop
stos
js
mov
hlt
mov
mov
fistp
mov
xor
in
in
outs
in
cmp
aam
mov
mov
push
sub
jns
ret
lods
fidivr
xchg
jne
jnp
shr
cmp
in
hlt
lods
jb
in
movs
xchg
ss
add
in
push
es
mov
ins
push
cld
fsubr
ret
or
jg
inc
rcr
es
and
in
pop
sbb
adc
scas
and
jmp
mov
lea
gs
into
out
enter
scas
pop
enter
shr
inc
outs
lock
pop
cs
clc
sub
shl
pop
retf
push
sahf
call
ror
push
mov
test
jecxz
adc
scas
mov
fidivr
fsub
mov
ins
push
push
pushf
mov
data16
push
loopne
push
mov
(bad)
and
in
push
mov
fcom
(bad)
(bad)
jbe
ss
dec
mov
xchg
cmps
inc
shl
pop
out
jae
fmul
or
pop
add
arpl
mov
scas
xchg
lahf
adc
enter
ss
or
cmp
inc
and
pop
xchg
inc
test
scas
xor
popw
outs
mov
jb
div
stos
popa
cmps
push
push
dec
pop
dec
adc
clc
push
outs
sub
push
and
jne
add
inc
stos
push
movs
bound
dec
push
add
inc
aad
jns
call
ja
and
or
(bad)
shr
test
mov
shr
mov
mov
aas
sbb
mov
(bad)
pop
mov
xor
mov
and
adc
jo
sbb
xor
fmul
rcr
jecxz
fild
mov
add
rol
jae
mov
fistp
outs
es
sti
jnp
movs
sbb
pushf
xor
mov
and
bound
lock
mov
iret
or
(bad)
add
dec
adc
adc
mov
add
mov
sub
jmp
data16
nop
xor
xor
enter
mov
add
xor
js
sub
adc
mov
in
int3
xor
lea
push
or
leave
rol
cmc
fadd
sub
iret
(bad)
loope
mov
bound
mov
aad
mov
mov
iret
stos
jmp
dec
mov
or
mov
xchg
out
sar
fcmovnb
bound
mov
jmp
pop
addr16
push
mov
es
test
inc
jge
adc
xor
jns
sahf
fcmovbe
dec
gs
test
push
xor
jge
bound
cmp
jp
neg
jns
or
and
mov
fldln2
fcom
sub
xlat
inc
(bad)
and
ja
repz
pop
sbb
pushf
and
jno
out
add
arpl
inc
mov
push
dec
add
ret
fldcw
fsub
(bad)
mov
jo
sahf
xchg
mov
jo
jmp
aam
jne
cmp
xchg
dec
dec
call
pushf
lods
pop
test
loope
xor
pop
(bad)
mov
xor
out
hlt
cmovnp
aas
mov
jle
aaa
or
std
mov
inc
or
add
scas
sbb
adc
movs
out
push
mov
pop
jg
dec
add
mov
je
add
shl
ss
jns
adc
dec
xor
aad
push
ds
xchg
jno
and
fistp
icebp
lock
add
add
cmp
mov
stc
add
mov
push
das
js
mov
clc
jp
sti
mov
jle
sbb
mov
nop
or
adc
jo
rol
jmp
or
mov
add
and
push
jo
fdiv
cmps
js
dec
sbb
mov
inc
rcl
hlt
arpl
lock
out
jbe
and
sbb
push
pop
sbb
jg
mov
aaa
xor
imul
push
or
mov
or
dec
icebp
cmp
xchg
mov
dec
xchg
scas
jp
pop
dec
sbb
je
(bad)
xchg
push
or
popa
(bad)
mov
adc
test
lea
in
cdq
repz
xlat
sbb
cmp
push
addr16
xchg
xor
push
adc
add
add
fld
sbb
cmp
fstp
fsubr
movs
rcr
push
jp
mov
inc
dec
pusha
shl
mov
mov
neg
dec
sub
push
xchg
icebp
add
inc
jle
xor
loope
push
xor
or
in
dec
sbb
xchg
jbe
loopne
inc
fcom
movs
mov
pusha
xor
jmp
push
adc
sub
xlat
mov
gs
or
test
or
les
cld
push
pop
ins
popf
push
pop
fs
movs
dec
ss
mov
xor
sbb
mov
ss
mov
pop
mov
cmp
jmp
iret
sbb
imul
rcr
repz
mov
fwait
pusha
adc
add
out
cmp
and
or
jae
xor
das
(bad)
ds
xor
rol
cmp
mov
movs
or
pop
pop
or
inc
cwde
in
or
and
jl
dec
sbb
dec
mov
and
dec
pop
mov
cli
and
push
sub
loope
pop
shl
loope
push
cmp
inc
xor
pop
rcr
sbb
dec
lock
je
mov
inc
in
pop
outs
sbb
lea
push
iret
inc
adc
(bad)
adc
push
hlt
mov
adc
call
cmp
adc
js
adc
je
or
jge
mov
dec
and
repnz
(bad)
call
xchg
cmp
outs
push
add
mov
cmps
mov
jbe
dec
fnsave
mov
pop
or
shl
into
push
jmp
mov
test
fsub
rcl
mov
enter
(bad)
mov
pusha
sbb
in
test
jb
add
in
sbb
mov
lods
xor
or
int
(bad)
jmp
push
dec
pop
dec
and
jge
push
sub
dec
sub
add
cli
mov
in
sbb
pop
enter
xchg
mov
jle
sub
sub
outs
push
push
aaa
mov
cmps
jnp
add
popa
test
aaa
xlat
ret
xchg
push
sahf
xor
and
fld
test
dec
in
add
call
mov
mov
sbb
test
retf
mov
jo
shl
mov
mov
out
xchg
add
ins
jo
addr16
jge
das
sbb
adc
mov
sbb
and
ins
call
push
cmp
outs
mov
push
(bad)
aad
jecxz
and
jl
fwait
dec
inc
repnz
dec
xchg
push
nop
(bad)
cmp
fisttp
jo
xchg
test
and
ret
frstor
adc
(bad)
(bad)
es
mov
and
adc
imul
adc
aaa
xor
stos
cwde
cmps
neg
jl
mov
loope
data16
jle
and
or
out
dec
retf
fimul
inc
jge
ret
popa
aad
outs
movs
(bad)
adc
loope
loopne
fistp
mov
test
xor
add
add
xor
or
xchg
xchg
adc
popa
mov
adc
xor
call
push
in
add
adc
cs
(bad)
mov
fisub
adc
jg
push
shl
repz
es
lods
(bad)
push
es
movs
and
call
lock
mov
mov
fist
mov
mov
mov
shl
int
jnp
fistp
or
movs
jbe
jne
adc
add
pusha
push
ins
cmps
pop
mov
jbe
and
ret
mov
stc
(bad)
cmp
(bad)
(bad)
loop
mov
mov
ds
in
in
mov
or
sbb
cwde
xchg
lods
shl
push
adc
ja
xor
sub
imul
(bad)
cmp
mov
pusha
jae
test
movs
mov
mov
adc
movs
mov
ret
mov
fsubr
inc
xchg
aas
clc
push
cs
jae
xchg
dec
jns
ror
cs
xor
push
mov
aaa
add
mov
ror
int3
xchg
les
xor
pop
push
dec
push
inc
stos
jg
and
lea
cli
jns
lock
sti
(bad)
mov
repnz
xchg
test
pop
scas
push
in
movs
sub
pop
bound
inc
push
inc
xchg
mov
mov
sbb
adc
ror
jo
jno
repnz
imul
inc
mov
and
(bad)
jne
cmp
sbb
xchg
or
push
repnz
mov
(bad)
sbb
ss
in
sub
in
das
sbb
jno
push
adc
in
pushf
xor
mov
ins
push
dec
dec
push
mov
bound
mov
fcomp
jp
mov
push
add
xor
jle
je
lods
outs
jnp
pushf
sbb
add
mov
in
arpl
das
pop
rcl
jno
ds
fmul
rcl
push
push
push
sbb
(bad)
ss
je
rol
jnp
adc
mov
fwait
cmp
leave
push
cmc
pop
push
mov
lods
shl
jne
loop
daa
mov
div
hlt
push
pusha
sbb
mov
(bad)
sar
retf
test
(bad)
mov
jecxz
ins
loopne
idiv
getsec
push
aad
dec
ret
movs
iret
scas
xor
push
hlt
int
mov
cmp
imul
or
jl
cmps
sub
hlt
retfw
sub
outs
sbb
xchg
jb
cli
(bad)
ficom
jl
pop
pop
ret
pop
adc
call
jmp
ins
push
sbb
mov
imul
sbb
(bad)
xchg
(bad)
loopne
mov
test
lds
pop
jns
fwait
pop
ins
sub
fld
xor
push
jae
fisttp
dec
int
mov
icebp
les
sbb
shrd
cld
dec
sub
(bad)
and
dec
add
push
test
mov
pop
xchg
jbe
loop
sbb
je
push
jae
and
daa
jo
pop
or
je
ret
mov
ss
jo
adc
lea
sub
push
push
repnz
xchg
outs
rcr
sbb
stos
pop
in
mov
(bad)
cli
sub
dec
adc
pop
(bad)
out
add
jbe
add
pop
sub
xor
push
iret
stc
or
mov
retf
in
jl
dec
cmps
popa
frstor
movs
ret
lds
test
and
mov
(bad)
sbb
es
sub
adc
(bad)
add
pop
mov
in
ret
pop
fisub
scas
sub
or
imul
leave
fsubr
sbb
ret
sbb
or
test
push
sbb
pop
push
pop
fadd
pop
addr16
dec
sbb
mov
push
call
aas
imul
imul
mov
pop
inc
cmps
or
sbb
pop
fnstsw
push
jne
jne
xor
xor
or
add
sbb
cmp
or
enter
sti
pusha
fstp
ret
hlt
inc
fcomp
aas
enter
sub
push
and
xor
das
fdivr
shl
add
push
sub
push
sub
xor
add
mov
cmps
xchg
fldcw
jo
jne
jle
into
mov
jnp
jmp
lds
adc
ins
pop
pop
dec
(bad)
jnp
ss
mov
stos
mov
push
adc
mov
aam
daa
push
cmp
scas
push
stos
jo
lahf
sbb
in
jo
sub
xor
add
jne
stc
push
cmp
xor
nop
pop
mov
imul
jbe
mov
inc
xchg
sbb
xchg
aaa
lea
lods
fdiv
icebp
xor
add
lods
xor
ret
sub
rcl
sbb
pop
mov
dec
aad
ds
add
sbb
pop
jp
jne
enter
inc
or
icebp
js
std
push
gs
cmp
ja
fcom
add
jo
or
xlat
sbb
je
outs
cmp
lds
xchg
je
fisubr
pop
push
cdq
mov
inc
add
push
or
cs
ror
shr
adc
retf
and
loope
mov
adc
mov
or
ss
icebp
xor
add
sub
xchg
out
enter
mov
jne
and
inc
fmul
jp
mov
fadd
jo
test
jmp
mov
sub
in
loope
mov
ror
jb
and
xchg
imul
loop
cmps
bound
or
adc
dec
jb
gs
(bad)
ins
fs
xchg
fucomp
or
aas
pusha
xor
cmp
mov
call
mov
push
rol
add
sti
mov
int3
call
push
pop
xchg
adc
ja
cmp
test
fcom
popa
mov
mov
out
mov
shl
arpl
pushw
daa
adc
leave
and
pop
hlt
call
gs
loopne
pushf
cmp
retf
sbb
pusha
push
pop
in
xchg
and
clc
fistp
adc
mov
bndstx
je
or
jp
xchg
add
ins
cmp
mov
dec
neg
xor
inc
mov
popa
jmp
cwde
mov
jecxz
pop
pop
enter
mov
enter
popa
shl
or
jb
ins
mov
pop
fistp
ins
inc
add
xlat
or
dec
xchg
push
push
mov
ins
pop
inc
or
and
dec
inc
ret
and
loope
std
jle
xor
ins
mov
mov
or
adc
xor
mov
sbb
loopne
sahf
cmp
adc
pop
mov
ins
and
cs
fist
push
pop
jmp
inc
les
mov
cwde
jg
jl
mov
inc
cmp
(bad)
pop
push
rcr
sbb
add
fcomp
stos
inc
sbb
and
xchg
dec
leave
xor
aas
xchg
cs
or
bound
pop
add
movs
(bad)
xchg
push
and
dec
lods
push
dec
loopne
xchg
inc
shr
addr16
or
(bad)
dec
scas
ret
xchg
fnsave
or
nop
fmul
pop
cmp
pushf
movs
mov
xchg
mov
data16
fcom
mov
in
pop
test
test
mov
or
clc
fxam
add
outs
fidivr
test
and
icebp
mov
les
add
cdq
xor
lahf
scas
test
xor
or
dec
hlt
sub
test
div
dec
nop
inc
bound
sti
ret
jae
sbb
and
pop
push
and
push
adc
cmp
xor
hlt
sbb
pop
ret
pusha
sbb
mov
sbb
push
lods
scas
xor
ret
sub
shl
je
mov
ds
rcr
rcl
xchg
cs
jno
movs
mov
fs
inc
addr16
(bad)
movs
lds
or
pop
jb
add
mov
mov
mov
shr
mov
pop
adc
adc
fistp
loopne
ror
push
pushf
adc
ret
xor
rcl
mov
fs
es
lea
inc
lods
retf
adc
(bad)
xlat
fild
dec
js
(bad)
pop
jbe
mov
rcl
mov
pusha
push
jg
adc
push
mov
mov
je
les
inc
xchg
xlat
inc
fistp
call
aam
pushf
out
and
mov
jecxz
out
lock
add
sbb
and
or
(bad)
fs
adc
or
add
(bad)
std
hlt
into
push
sbb
jg
in
xchg
movs
xchg
(bad)
bound
xchg
icebp
rcl
in
out
fdivr
(bad)
gs
sti
adc
not
jmp
inc
push
loop
imul
movs
into
mov
in
fnstsw
jge
pop
ret
fld
retf
fldcw
inc
shl
add
xor
cmp
jl
xchg
inc
fs
loop
mov
and
(bad)
push
cmp
jne
bound
or
rcl
retf
add
out
xchg
add
gs
cmps
fnstsw
repnz
jmp
outs
dec
cmps
outs
and
sti
aaa
int3
jne
lea
jle
loope
add
push
pop
xor
xchg
ret
shr
pusha
or
retf
es
xchg
xor
fadd
pop
or
jp
sbb
xlat
mov
or
mov
pop
imul
bound
popa
cld
adc
or
lods
mov
inc
stc
movs
sub
jmp
clc
outs
jb
adc
je
leave
adc
push
call
ja
call
mov
cmp
or
cmp
and
mov
pop
cmp
loope
mov
leave
ds
(bad)
jmp
sub
inc
jl
fs
jno
test
pop
add
enter
repnz
fwait
ins
xchg
add
jp
fdivr
sbb
movs
mov
xor
mov
dec
pop
xchg
push
cmps
pop
pop
mov
add
pop
jno
xor
mov
popf
add
out
aam
add
(bad)
inc
xchg
and
xchg
in
inc
inc
hlt
jno
and
adc
or
push
pusha
adc
mov
sbb
pop
in
aam
inc
sub
shl
push
mov
jecxz
xor
adc
leave
inc
xor
pop
fbstp
and
sub
out
sbb
lahf
test
leave
sbb
sbb
je
push
xor
or
test
(bad)
lds
and
jge
into
les
add
push
push
test
iret
in
rcr
inc
push
push
jae
ret
xor
fwait
jae
cmps
adc
push
fst
inc
pushf
jnp
js
add
xchg
aad
(bad)
pusha
push
pop
cmp
ds
sub
push
jnp
mov
and
sbb
inc
mov
cwde
bound
dec
mov
nop
test
shl
or
inc
cmps
mov
call
add
icebp
fild
pop
(bad)
inc
mov
xor
ja
cmp
out
adc
add
into
pop
mov
ins
xchg
sbb
push
xlat
jg
call
dec
adc
push
das
push
xor
xlat
movs
scas
xchg
and
pop
js
sbb
jo
sub
mov
dec
clc
sub
das
xchg
sbb
cmp
les
xor
call
mov
inc
sbb
das
mov
das
xchg
xchg
call
sbb
dec
cmp
pop
push
into
js
cdq
sub
div
mov
dec
out
add
pop
sbb
xchg
pop
sbb
mov
xchg
or
push
ins
sub
cmps
mov
cmp
es
lods
sbb
or
pop
pushf
lods
dec
and
inc
add
sbb
gs
push
dec
(bad)
in
outs
sub
xor
push
dec
sbb
ffreep
xchg
and
mov
sbb
pop
add
adc
xchg
daa
(bad)
inc
sub
add
mov
js
cmp
repz
out
out
(bad)
adc
xlat
shl
sbb
mov
mov
retf
mov
rcr
adc
cmp
out
popa
mov
je
sub
fst
mov
push
lods
mov
jne
ret
push
imul
xchg
push
inc
or
adc
ins
sbb
enter
mov
mov
pop
mov
cmp
gs
jmp
pop
jp
jno
mov
add
test
mov
pop
xor
mov
fstp
jbe
stc
scas
icebp
and
cmp
jl
test
ret
sbb
in
(bad)
mov
xchg
cmps
sbb
enter
arpl
add
stos
push
push
jecxz
pop
ins
adc
test
shl
pop
mov
cdq
sub
cmp
jmp
cmps
cld
inc
int
xchg
cwde
sbb
pop
cmp
daa
add
scas
push
lock
js
xchg
in
rcl
jge
popa
ins
mov
and
lods
xchg
fdivr
fs
loopne
push
retf
dec
imul
pop
test
ins
arpl
pop
fld
jecxz
loopne
push
adc
bnd
push
icebp
push
inc
sar
je
mov
mov
pop
js
cmc
dec
xor
stc
or
jo
pop
sahf
sub
jbe
cs
mov
cmp
jp
mov
push
mov
mov
jmp
test
inc
sbb
adc
arpl
stos
out
ret
(bad)
fld
or
(bad)
rcr
mov
dec
sub
inc
xchg
pop
lea
or
jbe
hlt
test
or
sbb
test
popa
mov
hlt
xor
mov
add
rcl
push
cmp
dec
add
cld
hlt
jg
dec
pop
(bad)
cmp
sbb
sbb
xchg
push
mov
fisttp
ss
sub
push
enter
xor
or
fimul
and
movs
scas
js
test
cmp
lock
les
xchg
addr16
xchg
inc
sub
add
rol
lea
nop
add
lods
mov
inc
ss
or
sbb
mov
int
test
mov
xchg
lock
clc
cmp
push
ds
lock
xchg
or
enter
jnp
inc
cwde
out
xchg
cmps
daa
cwde
das
xchg
add
jmp
inc
(bad)
outs
clts
pop
add
dec
xchg
inc
cmps
or
(bad)
stos
push
int
xor
fnsave
out
xchg
jae
cmp
sbb
retf
je
add
out
in
sbb
stos
xor
or
jb
jae
(bad)
dec
mov
push
repz
int
push
or
adc
add
jmp
jo
jns
dec
mov
scas
(bad)
cmp
jns
and
add
popf
jmp
inc
clc
pop
push
dec
jnp
call
push
push
inc
inc
lahf
bound
cmp
retf
add
sub
mov
imul
outs
cmc
test
inc
fwait
je
lahf
xor
mov
jge
jmp
dec
adc
sbb
retf
movs
xchg
cmp
lahf
fisub
jns
or
sbb
xchg
xor
inc
sbb
add
xor
mov
dec
push
jp
dec
add
or
(bad)
dec
fnstsw
adc
data16
jp
ins
add
sub
inc
jns
jbe
and
int
push
pop
mov
mov
pop
sbb
shl
mov
sbb
in
dec
xchg
enter
loope
(bad)
dec
fst
sbb
loopne
scas
jecxz
pop
mov
sbb
xor
or
push
fild
xor
jae
loopne
(bad)
jp
or
adc
sbb
dec
cs
pop
test
mov
lea
jl
jp
adc
pushf
dec
int
lods
inc
repnz
add
cmp
lock
imul
(bad)
pusha
or
popf
sahf
shl
xchg
stos
pusha
not
call
mov
add
ins
jbe
lock
sbb
dec
cmps
cmps
or
pop
or
push
xor
fs
add
lods
push
cmp
mov
iret
jg
push
mov
push
int
pop
mov
mov
cs
sar
jecxz
mov
cli
or
mov
cmc
mov
leave
inc
movs
sbb
call
dec
push
dec
retf
push
fmul
jmp
jle
cmp
ror
add
lock
and
fnstsw
lods
mov
jmp
and
aas
xchg
ins
push
mov
sub
xchg
add
xor
xchg
sahf
add
ret
call
outs
dec
out
gs
cs
in
test
sub
(bad)
jg
(bad)
add
fs
add
pop
les
or
or
pop
imul
inc
out
sysret
jp
popa
mov
jp
aas
or
jnp
inc
loope
mov
imul
mov
iret
fdivr
test
xchg
ds
sub
fsub
mov
pop
mov
adc
call
aas
test
daa
in
mov
inc
or
fwait
fwait
mov
xor
repnz
or
rcr
ins
jge
jl
inc
jb
mov
fdiv
xchg
mov
mov
daa
jb
lods
and
leave
retf
dec
loop
movs
loopne
in
popf
aad
xor
and
clc
leave
or
cmp
mov
inc
loop
xor
sbb
shl
xchg
jecxz
inc
push
sub
xor
mov
cmp
arpl
inc
mov
shl
cmp
cmp
call
dec
pusha
adc
pop
jnp
push
push
sbb
das
lods
xor
or
add
hlt
iret
sar
mov
dec
push
mov
gs
and
imul
adc
ss
ja
out
cld
inc
ror
inc
mov
lock
sbb
or
mov
add
ins
cmp
add
jmp
adc
dec
fadd
(bad)
js
add
jmp
pop
sub
or
or
invd
mov
sti
sub
into
ret
arpl
and
mov
imul
clc
(bad)
enter
push
inc
lods
dec
xchg
sbb
and
in
jp
mov
mov
and
xchg
mov
inc
leave
sbb
packsswb
outs
xchg
cmp
inc
sub
lds
aad
rcl
push
loopne
jns
fistp
add
pop
or
les
inc
xor
jnp
mov
pop
mov
icebp
iret
pop
int3
call
addr16
ds
cmc
adc
cmp
push
arpl
mov
mov
inc
sub
mov
jl
sbb
imul
popa
push
mov
aam
adc
aas
cmp
retf
mov
cmp
sbb
mov
leave
adc
repz
cli
xchg
pop
xchg
test
aaa
cmp
xor
retf
cli
daa
fnsave
xor
jmp
adc
mov
adc
add
pop
je
or
loop
std
ror
mov
call
lds
mov
stc
test
add
pop
fucomp
and
mov
jne
mov
mov
jnp
lock
scas
ror
aad
seta
pop
enter
pushf
(bad)
imul
mov
and
lea
xchg
test
movzx
clc
aad
stos
data16
int3
out
dec
out
(bad)
push
jo
mov
stc
add
daa
cmp
add
xchg
xor
icebp
(bad)
je
cmove
in
mov
pop
push
dec
xchg
dec
push
(bad)
lock
jnp
ins
(bad)
cmp
push
dec
fcomp
mov
mov
or
xor
scas
imul
xchg
xor
add
jae
in
test
pop
icebp
mov
sti
nop
outs
fwait
sbb
iret
adc
jl
inc
mov
outs
ja
mov
xchg
lea
fld
and
js
icebp
adc
daa
neg
outs
lea
shl
test
and
mov
sti
xor
inc
cmp
arpl
test
ror
cli
or
ins
mov
scas
call
jmp
call
dec
jl
pop
add
adc
inc
mov
and
mov
addr16
std
mov
inc
ss
mov
fld
mov
add
adc
das
test
sub
cs
sahf
inc
call
mov
lods
add
out
lea
in
jmp
jne
jmp
or
xor
sbb
dec
arpl
mov
push
sbb
push
mov
movs
jnp
js
and
fdivr
mov
sbb
and
adc
int
push
call
add
add
and
inc
mov
adc
add
out
out
adc
test
pop
pusha
xchg
inc
push
fld
mov
jmp
and
inc
xor
pop
push
lock
ret
je
adc
imul
sbb
ud1
push
mov
cdq
add
or
enter
maxps
data16
jb
aaa
fistp
cli
mov
jl
sub
int3
lea
pushf
xchg
or
push
pop
mov
xor
outs
inc
shl
std
sbb
sbb
div
fabs
or
(bad)
jmp
inc
pop
sbb
mov
nop
cmp
sbb
cmc
mov
ret
and
pop
fs
icebp
add
inc
(bad)
out
cmp
inc
mov
fs
jb
repz
or
cmp
popa
sar
pop
cdq
mov
fimul
fistp
sahf
mov
sub
mov
fdiv
dec
imul
mov
and
jle
mov
fisttp
add
(bad)
arpl
cmp
mov
adc
sub
pop
aam
popa
stos
fs
or
or
mov
mov
sbb
dec
jae
xchg
(bad)
aas
jae
aam
js
shr
loopne
icebp
adc
ds
cmp
adc
or
fld
int3
or
or
stos
mov
or
pop
(bad)
push
push
sub
pop
mov
int
or
inc
aam
(bad)
pop
xchg
addr16
mov
mov
outs
je
push
and
ds
fmul
inc
test
or
dec
sbb
jnp
(bad)
adc
dec
loop
ss
mov
dec
sbb
(bad)
retf
sub
jo
push
inc
jle
xchg
out
pusha
mov
neg
scas
(bad)
cmp
mov
std
jno
or
pop
pop
icebp
cmc
add
enter
jae
rol
inc
xor
pop
loopne
dec
dec
std
rcr
and
push
mov
adc
sbb
add
repz
dec
add
not
xor
xor
jne
ret
xchg
mov
mov
shl
fst
clc
inc
inc
shl
mov
cmps
push
movs
inc
inc
pop
ds
mov
xchg
aam
into
popf
outs
push
mov
adc
icebp
lahf
mov
mov
icebp
rcr
popf
cs
int
inc
cli
(bad)
mov
fimul
jne
inc
dec
add
stc
mov
inc
clc
sbb
je
push
xor
cmp
outs
lock
je
xor
mov
inc
dec
dec
pcmpeqb
retf
mov
jl
mov
xor
add
or
div
lea
or
rol
std
std
push
xchg
add
sbb
pusha
sbb
push
mov
jle
das
dec
cmp
aad
mov
adc
xor
test
adc
(bad)
sub
inc
adc
aas
mov
or
sbb
push
xchg
add
lods
test
mov
popa
sbb
stc
push
rcr
mov
hlt
jns
imul
(bad)
mov
and
mov
add
cmc
ins
stos
fst
ins
sbb
lods
ja
xor
in
xor
repnz
and
fisubr
sub
push
pushf
inc
inc
mov
mov
ret
adc
(bad)
daa
sub
push
adc
pop
movs
sbb
push
adc
mov
and
mov
in
mov
ret
mov
sub
pop
jecxz
je
or
and
inc
adc
dec
push
shl
and
mov
sbb
adc
mov
outs
xor
test
cs
pop
sar
push
pop
fwait
jle
xchg
adc
adc
xor
adc
xor
dec
popf
shl
shl
out
movs
lods
or
lock
scas
adc
cmp
les
test
dec
push
ins
or
or
mov
rol
xor
push
mov
movs
imul
fstp
mov
fcmovb
and
add
sub
add
arpl
dec
shl
add
cli
imul
(bad)
and
xor
and
and
jl
jg
jmp
jmp
mov
daa
rcr
or
pop
sbb
xchg
add
add
sub
fist
retf
sbb
dec
aaa
pop
outs
adc
add
push
fld
mov
js
mov
cmp
(bad)
imul
popf
push
call
iret
mov
cmp
or
mov
rol
pop
adc
adc
xchg
mov
ret
xchg
rol
jmp
and
cmps
mov
mov
call
icebp
push
dec
test
aam
push
push
cmp
adc
(bad)
mov
aaa
xor
add
mov
outs
ja
rcr
jo
pop
arpl
fdivr
xor
fdiv
adc
(bad)
out
psubusw
adc
movs
sub
loope
loop
(bad)
push
adc
mov
push
pop
xchg
mov
add
(bad)
out
pop
add
add
sahf
pop
push
cmc
clc
std
ds
pushf
in
dec
xchg
pusha
outs
and
cwde
test
jae
inc
add
jno
je
xchg
xchg
sub
sub
stc
and
ror
rcr
mov
sbb
cs
xchg
dec
dec
imul
mov
push
in
inc
(bad)
and
or
ss
pop
test
jmp
jecxz
cmp
lods
fdivr
add
cmc
popa
shl
retf
pop
sti
push
hlt
(bad)
inc
sbb
fimul
adc
add
out
mov
dec
cmp
sahf
les
stos
pop
cdq
dec
rcr
cmp
push
push
adc
popa
imul
dec
ret
cmp
mov
dec
push
or
in
mov
push
aam
add
cmp
sahf
iret
lods
leave
ror
bound
mov
scas
push
cmp
aam
popf
jo
pop
test
std
push
xlat
xlat
arpl
push
out
lods
mov
in
call
scas
fwait
sbb
stc
std
pop
push
loopne
into
ds
icebp
into
and
sbb
test
pop
lea
jo
(bad)
(bad)
or
clc
push
or
xor
out
loope
les
sub
not
shl
sub
nop
je
jnp
addr16
adc
clc
cmp
mov
dec
xchg
xchg
fdiv
xor
scas
mov
adc
adc
adc
cwde
scas
repz
and
not
add
fstp
sub
lea
cmp
dec
push
mov
mov
ds
xor
movs
sti
pop
dec
or
mov
js
cmps
push
add
ss
in
mov
mov
jg
dec
mov
mov
sbb
inc
(bad)
cmc
xor
and
sahf
xor
sub
movs
push
or
mov
and
jge
add
mov
ret
xchg
pop
sub
xchg
adc
ins
jne
or
(bad)
lods
sub
repz
pop
jo
cmp
ins
push
xor
jmp
add
das
popf
xor
mov
mov
adc
loope
add
(bad)
fucom
(bad)
fst
loopne
and
nop
pop
inc
add
dec
adc
aam
push
loop
cmc
xor
arpl
add
add
in
cmp
push
inc
xchg
mov
inc
call
pop
and
xchg
(bad)
push
pop
stos
cld
cmp
add
push
dec
test
mov
outs
in
xor
mov
test
mov
fdivr
push
cs
ret
fld
test
sub
jbe
sbb
sbb
xchg
jmp
fisubr
nop
cmp
jbe
pop
loop
sbb
xor
pop
adc
or
push
xor
xchg
pop
dec
pop
pop
xor
out
aad
mov
fwait
in
jae
cld
lods
fs
pop
call
out
sahf
cmp
or
ss
int3
jecxz
push
push
inc
ficomp
pusha
in
push
int
scas
out
and
adc
fidiv
push
xor
push
xchg
aam
adc
or
cmps
adc
arpl
push
popa
neg
daa
rcr
mov
cmp
sbb
(bad)
add
and
loopne
push
jle
(bad)
mov
push
jne
pop
stc
adc
in
dec
jne
cmp
mov
paddsw
and
and
mov
jl
pop
pop
mov
and
inc
lock
adc
push
or
pushf
mov
pop
(bad)
stc
xor
je
cwde
lea
adc
in
sub
outs
jbe
xor
ror
jbe
cmc
pop
mov
call
int3
push
loope
in
popf
hlt
cmp
xchg
xor
retf
jp
push
or
push
mov
jge
out
mov
mov
dec
(bad)
cwde
push
out
push
cmp
fbstp
or
push
ss
fisttp
mov
cmps
es
push
ins
pop
mov
(bad)
cld
sub
js
xor
mov
sti
nop
add
push
addr16
pop
lea
mov
pop
scas
add
jns
inc
mul
cmp
inc
test
fadd
out
out
jle
int3
aam
les
lock
outs
add
pop
pop
rcl
xor
xchg
retf
jbe
and
or
fst
aas
popa
xchg
aad
sbb
pop
sub
xor
jle
mov
inc
(bad)
sbb
mov
and
cmp
in
sub
imul
pop
add
bound
fwait
lds
test
mov
xlat
cmp
mov
aas
out
and
push
nop
push
inc
pop
cmp
jmp
std
push
fistp
mov
push
xchg
lds
jns
lahf
sbb
test
inc
ret
call
sbb
sbb
and
cmp
xlat
sbb
and
push
out
cmp
and
jle
cmp
hlt
sbb
pop
pop
mov
cmp
outs
pop
push
cs
add
test
sbb
mov
mov
jns
sub
call
xor
popa
or
dec
inc
out
imul
cmp
data16
push
jmp
push
sub
push
mov
mov
jmp
jmp
cmp
pop
sbb
sbb
fld
cld
mov
iret
xchg
pop
out
popf
iret
add
sub
std
aaa
jae
add
jo
mov
scas
fadd
(bad)
or
and
gs
(bad)
call
scas
inc
nop
out
pop
and
aam
adc
test
dec
(bad)
ret
xlat
and
cmc
int
mov
cmp
loopne
inc
(bad)
aad
sub
mov
sbb
enter
jmp
mov
pop
jl
mov
sub
call
jl
pop
xchg
(bad)
sub
xor
fsubr
inc
dec
mov
ss
inc
cs
dec
xchg
hlt
jmp
sbb
arpl
mov
call
inc
mov
push
inc
add
sbb
mov
xchg
mov
sub
inc
xor
repz
sbb
pushf
jnp
mov
shl
scas
shl
mov
aas
rcl
jae
aam
add
fdivp
jbe
je
aad
xlat
aaa
sub
dec
ret
push
add
fs
cld
call
ror
xor
cmp
loopne
shl
ins
(bad)
(bad)
jge
(bad)
inc
sbb
stos
jg
inc
add
cmp
sti
pop
adc
dec
sti
bound
or
cmp
inc
add
pop
lock
repnz
aam
and
nop
ins
mov
sbb
fstp
mov
fistp
outs
(bad)
jmp
loopne
inc
sti
push
cmp
mov
add
repnz
ss
adc
or
pop
sbb
mov
mov
pop
je
xchg
sub
neg
inc
jecxz
sub
iret
mov
mov
xor
xor
push
nop
adc
dec
repnz
jo
test
inc
sar
or
xor
dec
xor
dec
aaa
dec
mov
push
inc
pushf
hlt
stos
je
jbe
pusha
outs
fld
mov
mul
rcl
sbb
outs
inc
mov
lahf
pop
cmp
jae
sbb
fisub
inc
inc
xchg
mov
mov
ds
jb
outs
mov
loop
test
in
icebp
sbb
dec
add
or
xchg
mov
xor
hlt
add
mov
fdivr
lods
add
add
sar
jno
daa
push
ins
ffree
sub
not
movs
or
(bad)
aad
add
jns
xor
xchg
and
test
mov
xchg
cmps
push
hlt
clc
cmps
inc
jo
mov
int3
pusha
inc
xchg
cmp
mov
cmp
sub
mov
xchg
dec
dec
out
push
inc
cs
xchg
inc
inc
dec
js
shl
pop
add
add
xchg
or
mov
push
rol
jle
push
add
ja
not
sub
sbb
psubb
inc
xor
inc
movs
add
pop
scas
dec
add
xor
mov
imul
and
movs
fdivrp
add
call
cs
sub
and
pop
sbb
jecxz
cmp
ret
mov
mov
adc
out
adc
add
or
arpl
mov
call
sub
inc
je
fnstcw
mov
cmp
mov
pop
or
xchg
adc
loop
hlt
and
outs
test
or
bts
push
dec
rcl
scas
in
lods
xor
sub
dec
add
xor
inc
add
call
push
sbb
les
ret
outs
cmp
loop
cmp
(bad)
nop
or
xchg
into
jle
mov
or
pop
das
mov
ins
lahf
in
dec
add
aaa
imul
dec
ja
mov
mov
mov
lods
(bad)
fwait
or
sti
xor
in
lea
xlat
scas
ds
lock
mov
dec
sub
lods
jmp
dec
idiv
fs
and
jnp
ins
mov
in
in
add
leave
stos
inc
xor
mov
cmc
sbb
leave
cmps
cmp
ins
cmp
ret
adc
jbe
dec
call
shr
xchg
ss
pop
xor
and
fdiv
sbb
test
cmp
push
mov
div
sets
or
sub
pop
cmp
cld
clc
stos
inc
add
pop
cli
mov
pop
jnp
adc
sub
mov
dec
adc
dec
stos
mov
fdiv
mov
mov
adc
repnz
aaa
sbb
xchg
aad
jnp
cdq
retf
xor
cmp
(bad)
out
es
ret
sub
xchg
add
mov
jmp
std
sub
or
push
int3
cdq
stc
xchg
loopne
inc
int3
jbe
cwde
cmc
ret
mov
sbb
pop
xchg
mov
stos
cdq
test
mov
push
(bad)
mov
mov
sub
shr
mov
push
sbb
jno
das
xchg
mov
shl
fdiv
out
pop
mov
add
aam
adc
cmps
mov
jne
xor
and
cmp
xor
aas
movs
rcl
mov
push
xchg
mov
inc
push
mov
dec
xchg
test
stc
mov
in
mov
addr16
dec
or
loopne
inc
or
mov
cmp
mov
adc
jmp
inc
pusha
mov
(bad)
adc
mov
sbb
loop
cmp
mov
inc
and
add
or
xor
clc
pop
fisubr
mov
mov
jae
loop
jmp
mov
test
cli
(bad)
cmc
dec
jg
adc
adc
jb
cmp
push
int
add
push
mov
adc
inc
call
sbb
and
mov
aaa
ficomp
xor
xor
mov
xchg
push
(bad)
pushf
add
dec
shl
sbb
sub
mov
fcomp
(bad)
push
jne
xchg
mov
sbb
(bad)
push
mov
dec
inc
dec
pushf
adc
push
fsubr
ins
loop
cmps
int
xor
mov
and
lock
or
mov
ret
jmp
adc
mov
jo
or
cwde
or
push
mov
xor
xchg
in
movs
stc
jge
ds
mov
or
rol
cld
dec
pop
cmps
fadd
fisub
pop
jbe
mov
push
mov
jns
sahf
call
add
test
sahf
mov
sahf
sbb
call
push
hlt
push
adc
gs
and
add
dec
fbld
daa
sbb
mov
inc
push
push
mov
sahf
mov
add
repz
ins
dec
push
data16
push
ins
cmp
xor
inc
push
sar
add
and
rol
clc
adc
arpl
push
sti
xor
mov
sar
jne
cmp
add
pushf
sub
cmp
js
xor
das
sbb
rol
cmp
push
(bad)
mov
icebp
mov
sar
push
bound
cdq
xor
jmp
and
cs
inc
sbb
xchg
dec
cdq
dec
out
inc
sar
xor
shl
push
pop
cli
xor
add
adc
inc
and
jb
movs
and
stos
inc
movs
and
or
call
ret
dec
adc
cmps
mov
rol
pop
rol
add
fcomp
xlat
add
cmp
add
xchg
sbb
cli
jmp
outs
cli
cmps
les
cs
mov
dec
(bad)
dec
and
int3
sub
inc
(bad)
loopne
aam
add
call
mov
sub
addr16
pusha
lock
mov
xor
mov
inc
add
cs
mov
sub
fistp
in
pop
jmp
in
sbb
add
pop
inc
(bad)
xor
cmp
add
xlat
lock
ins
lds
sbb
idiv
(bad)
mov
sbb
movs
test
mov
test
cmps
mov
or
inc
jmp
mov
dec
xchg
pusha
rcl
jle
inc
mov
jp
adc
cmp
ins
mov
push
xchg
pop
jb
shl
ret
or
sbb
(bad)
neg
jbe
mov
daa
js
jl
fstp
push
popf
mov
test
mov
fldenv
or
sub
push
test
loope
daa
lods
adc
mov
xlat
push
or
add
push
xor
mov
(bad)
pop
mov
mov
xor
cmp
cmp
sub
(bad)
lahf
dec
adc
rol
jge
pop
das
pushf
inc
popf
mov
test
sbb
push
rcr
aad
das
test
pop
push
(bad)
and
fimul
dec
inc
cmp
inc
fimul
or
pop
mul
inc
jno
pushf
xor
fs
cmc
pop
add
loopne
adc
dec
inc
dec
cwde
dec
mov
cmp
fist
pop
jecxz
scas
sbb
push
jp
mov
xor
pop
push
inc
cwde
movs
jecxz
je
and
adc
mov
ret
inc
or
cmps
mov
jg
push
push
pop
xor
jne
test
push
jmp
jb
call
fist
push
cmc
lea
sub
cmp
jo
lahf
mov
jnp
nop
repnz
data16
leave
pop
cmc
cmps
out
stc
loopne
ja
jnp
or
push
xor
inc
xlat
xor
jge
ins
frstor
outs
mov
inc
movs
and
mov
rol
test
fdivp
inc
sar
push
adc
push
adc
xchg
cdq
inc
out
adc
jbe
test
jecxz
adc
jg
mov
nop
jo
pushf
lds
push
lods
mov
fcom
inc
enter
jne
and
sub
mov
iret
jne
dec
rcl
int
cmp
sbb
add
ins
js
lea
stc
les
movs
sub
dec
or
pop
add
sbb
ret
or
repnz
add
add
sub
jmp
add
mov
jle
pop
hlt
int
xor
arpl
mov
jmp
jbe
mov
fsubr
sbb
and
inc
popf
cmp
adc
fimul
mov
lds
(bad)
xor
call
mov
xor
out
shr
fs
mov
mov
xchg
adc
or
aaa
sar
scas
lea
aam
xchg
push
fld
imul
jmp
jg
outs
and
ret
inc
loope
inc
xchg
stos
out
out
aam
xor
daa
cmps
mov
(bad)
icebp
daa
dec
mov
mov
sbb
xchg
mov
xor
inc
add
out
hlt
ds
pop
sbb
jp
(bad)
mov
adc
jb
mov
leave
lock
fld
mov
ss
pop
hlt
cmp
mov
add
jecxz
mov
xchg
adc
frstor
das
loope
sbb
cmp
(bad)
sbb
out
cmps
test
push
sub
sbb
pop
sbb
das
jmp
sub
mov
pushf
cmp
mov
hlt
dec
clc
mov
daa
adc
inc
in
repz
mov
clc
ror
mov
and
ss
imul
push
or
lds
push
pop
int
or
popa
vpshad
aaa
fwait
mov
push
and
cmp
ret
daa
or
push
jne
scas
mov
cwde
movs
test
leave
lods
pop
fild
xchg
mov
sar
jo
mov
out
push
retf
test
xchg
(bad)
js
popa
dec
and
loope
sub
inc
fild
mov
sbb
add
ins
cmps
hlt
pop
and
outs
xor
aad
add
sti
cmc
add
cwde
inc
pop
sub
xor
daa
jmp
jno
jo
mov
push
sar
add
fmul
or
push
sbb
rol
push
or
(bad)
mov
pop
xchg
cmp
jmp
arpl
scas
push
repz
sbb
push
adc
and
sbb
pop
pusha
push
push
call
cdq
xor
ins
(bad)
and
mov
cmp
xor
arpl
lock
push
mov
push
jbe
shr
cmps
ins
jns
cmp
xor
leave
mov
dec
cmp
xchg
xor
xor
sub
jg
aam
sbb
pop
and
inc
outs
xchg
add
push
addr16
mov
jne
xlat
xor
push
ja
aaa
pop
out
sub
mov
pusha
ja
iret
and
ret
mov
mov
mov
(bad)
xchg
leave
lock
pop
test
mov
lock
mov
mov
(bad)
and
cli
adc
xchg
popa
xabort
jmp
mov
add
sbb
lock
(bad)
rol
out
pop
sbb
repnz
adc
inc
inc
or
push
daa
or
daa
jnp
inc
leave
rol
(bad)
ss
jae
mov
mov
arpl
pop
sbb
pop
pop
mov
mov
or
cmp
data16
mov
xor
jmp
sar
adc
xor
adc
jno
je
cmp
pand
pop
push
loopne
adc
or
and
pop
pop
add
nop
add
and
mov
mov
cmp
addr16
fiadd
push
lds
pushf
and
gs
xchg
or
sti
push
pop
or
dec
inc
jo
retf
std
pop
add
outs
jnp
lea
mov
pusha
loope
clc
jp
ret
jb
cwde
add
sbb
inc
ret
call
xchg
cmc
outs
(bad)
aam
in
retf
dec
cmp
in
xchg
pusha
push
xchg
pop
arpl
(bad)
fst
retf
push
aad
adc
inc
pop
js
dec
add
jg
dec
sub
sbb
xchg
sub
mov
mov
push
maskmovq
imul
mov
fs
sbb
dec
rcl
jae
(bad)
mov
push
and
fucomip
sbb
(bad)
in
xchg
sbb
bound
daa
loopne
dec
cmc
cmps
or
(bad)
dec
vpunpckhqdq
je
scas
sub
cdq
adc
jmp
popa
push
cmp
and
int3
xchg
test
adc
dec
jge
sub
dec
mov
sbb
in
sar
jnp
add
pandn
cs
mov
cs
cmp
std
add
xor
ss
dec
ret
retf
das
pop
xchg
sbb
aad
leave
adc
or
mov
das
adc
daa
inc
xlat
xor
push
and
adc
or
lock
inc
clc
sbb
rol
sti
xor
lea
sbb
cs
(bad)
mov
cs
fnstenv
clc
stc
lods
pop
pop
mov
mov
mov
pusha
ret
ins
mov
inc
sahf
or
mov
data16
sbb
dec
test
add
stos
jp
test
clc
dec
call
clc
icebp
and
sbb
je
movs
adc
mov
imul
mov
push
jmp
shl
lea
push
xchg
mov
(bad)
push
aam
fdiv
push
call
loopne
and
add
mov
sbb
(bad)
in
sbb
dec
js
in
dec
adc
adc
or
or
aam
inc
mov
cwde
in
mov
dec
dec
push
aaa
jae
and
(bad)
les
jne
mov
call
and
in
test
inc
jmp
test
inc
or
xor
xor
push
add
rcr
ins
ror
jle
mov
dec
add
pop
jne
jg
ret
jns
shr
aaa
sti
enter
or
pop
ret
stos
inc
add
loopne
sub
pop
lock
int
outs
out
fcom
arpl
fist
sbb
shl
sbb
and
jecxz
hlt
jle
mov
xor
xchg
or
and
das
bound
xchg
rcl
shr
xor
jbe
sbb
xchg
arpl
call
lock
cli
rol
inc
pop
mov
mov
arpl
popf
scas
in
arpl
rcl
popa
cmp
inc
xor
fadd
inc
sbb
inc
in
pop
or
add
outs
lock
dec
jbe
cmp
repnz
and
je
outs
movs
popa
push
push
in
pop
sbb
xchg
add
mov
mov
test
ins
inc
cmp
sbb
imul
repz
inc
inc
call
daa
pop
push
das
mov
mov
xchg
jp
sbb
enter
leave
adc
inc
inc
xchg
dec
(bad)
fstp
push
nop
je
or
adc
lea
pop
xor
mov
stos
ret
in
ins
xor
add
inc
mov
or
int
jae
(bad)
dec
sub
cmp
int3
test
fwait
adc
jmp
inc
add
dec
mov
xchg
out
push
inc
lock
sbb
lock
(bad)
stc
pop
loop
cwde
add
sbb
cdq
add
aas
or
shl
(bad)
test
mov
inc
push
jp
push
std
push
adc
retf
xor
pop
and
cmp
adc
js
ja
add
mov
mov
(bad)
jmp
sbb
inc
adc
and
(bad)
sbb
sbb
push
icebp
and
or
rol
int3
mov
loopne
(bad)
pusha
add
test
pop
(bad)
pushf
retf
hlt
inc
loope
iret
or
sbb
mov
movs
popa
mov
and
pop
aad
out
push
add
gs
add
cmps
push
jno
pop
mov
sub
or
rcr
mov
inc
mov
outs
pusha
nop
add
sti
jmp
xchg
nop
scas
loop
dec
xchg
stc
inc
mov
les
and
cmp
xchg
cli
add
hlt
(bad)
repz
addr16
xchg
push
inc
(bad)
popa
xor
add
stc
adc
inc
sbb
push
cmp
aas
je
cmp
or
pop
call
lods
call
dec
mov
pop
aas
xchg
and
xchg
in
mov
movs
mov
or
ret
imul
jmp
aas
out
das
add
fldenv
rcr
les
aaa
ret
stc
ficom
rcl
cmps
sub
and
and
xor
ins
dec
and
test
mov
adc
fs
mov
pop
das
mov
repnz
or
das
xchg
aad
(bad)
push
mov
mov
pop
and
xlat
rcr
shl
adc
xor
pop
sub
or
mov
mov
test
push
add
test
adc
sbb
and
sub
ins
(bad)
(bad)
shl
hlt
inc
mov
jmp
test
movs
movs
jnp
imul
loop
add
popa
push
pop
cmc
mov
test
add
test
hlt
retf
sub
ret
pop
dec
sub
sub
das
and
mov
cwde
test
in
hlt
sub
dec
out
lods
sar
jmp
push
xchg
push
aaa
push
xor
jmp
pusha
push
shr
jecxz
(bad)
jg
mov
and
and
sbb
mov
ret
shl
mov
mov
adc
cmp
and
adc
pop
xlat
leave
call
cmp
or
add
int
aad
das
pop
and
test
mul
dec
jle
lods
adc
sbb
inc
add
es
clc
push
addr16
das
mov
add
push
jno
fnsave
ret
mov
xor
xchg
jb
mov
lods
jmp
cmp
jns
stc
or
idiv
xchg
adc
mov
dec
dec
push
xor
fadd
push
or
cmp
retf
lods
(bad)
or
mov
adc
je
pop
jmp
and
push
jne
mov
xor
jbe
jae
repnz
loop
dec
retf
dec
adc
sbb
push
add
inc
mov
ins
pop
and
shr
and
call
ret
sbb
jmp
dec
ret
mov
mov
sbb
(bad)
jg
jae
push
sti
nop
repnz
repz
or
sbb
test
aas
aaa
or
xchg
mov
sbb
fistp
imul
xor
ret
mov
dec
jg
test
or
and
mov
mov
mov
inc
push
and
pop
mov
sub
sti
mov
inc
call
lock
pop
add
scas
pop
rcr
cmp
pop
lds
jnp
(bad)
in
mov
ror
mov
cdq
xchg
ins
hlt
push
ins
adc
push
jl
test
dec
outs
cmp
scas
inc
sbb
or
scas
clc
cli
out
jbe
push
or
scas
add
gs
mov
pusha
rcr
arpl
fadd
out
push
cmp
jne
les
ins
in
sub
xor
jle
mov
int3
or
shl
cmp
aaa
jnp
nop
pop
outs
addr16
cmp
daa
fcomp
cld
imul
push
cmp
(bad)
dec
jp
inc
and
jne
iret
sbb
pop
sbb
push
outs
xor
jmp
sbb
or
enter
fwait
imul
sbb
inc
sbb
int3
adc
pop
pop
dec
pusha
mov
dec
cmp
rol
lock
das
xchg
add
call
data16
jecxz
and
lahf
dec
pop
jnp
cmc
add
adc
jmp
mov
sbb
push
mov
sbb
les
inc
jbe
cmp
pop
pop
shl
jmp
fsubr
std
cmc
jne
cmp
cmp
ret
mul
lods
xchg
inc
(bad)
or
out
mov
fbstp
sbb
mov
lods
pusha
movs
pop
dec
inc
in
les
dec
inc
adc
(bad)
mov
sub
pop
xor
push
shl
jne
push
sti
pop
pop
mov
stos
lock
cli
inc
shl
dec
dec
test
cmp
mov
btr
xor
sbb
lock
xor
add
push
ret
sbb
inc
push
ins
fsubr
test
cwde
ja
lea
cs
ds
movs
xchg
test
ret
lahf
lds
loop
(bad)
cmps
push
mov
mov
inc
aas
rol
add
jg
mov
jp
cwde
dec
popa
xlat
(bad)
mov
xchg
fsub
push
pop
test
add
retf
mov
dec
in
inc
mov
test
lods
cmp
cmp
push
fs
or
pushf
loope
dec
or
shl
aas
lahf
outs
cmps
cmp
(bad)
jg
fdiv
dec
dec
in
jge
cmp
adc
push
add
in
dec
call
pop
test
(bad)
push
jge
pop
sub
dec
es
jno
mov
inc
out
loope
mov
xchg
and
mov
popa
pusha
bound
sysexit
dec
std
cmp
out
inc
pop
xchg
int3
add
popf
movs
cmps
in
adc
mov
arpl
pop
sub
pop
sbb
jnp
in
push
arpl
sbb
fsub
ret
ja
cs
pop
mov
imul
or
or
cmc
mov
pop
loope
es
push
jl
xor
mov
rcl
dec
sbb
idiv
cmp
mov
icebp
std
mov
stos
jne
not
popa
push
inc
lds
push
jmp
out
fdiv
sub
dec
adc
rol
dec
add
(bad)
hlt
imul
xor
stc
add
pop
adc
xchg
xchg
xchg
sub
or
and
xor
lahf
mov
data16
dec
add
and
push
mov
sub
adc
adc
inc
out
push
lock
mov
(bad)
cmp
dec
loopne
cdq
push
mov
movs
adc
outs
les
iret
mov
je
jne
aad
mov
call
jmp
or
inc
pop
jg
or
sbb
xor
inc
and
adc
popa
repnz
xor
inc
xchg
xlat
and
popa
pop
lahf
jb
xor
aam
call
(bad)
inc
cmp
repnz
mov
adc
mov
sub
add
add
xor
ds
mov
and
in
pusha
jo
in
lods
pop
imul
jae
jae
test
outs
int3
adc
loope
pushf
sbb
ret
pop
and
fcomp
in
add
test
adc
vmread
sub
push
imul
sar
std
addr16
es
ret
js
sti
inc
cmps
pop
or
pop
add
call
jg
outs
movs
sbb
push
(bad)
scas
jnp
adc
mov
int
dec
push
cmp
call
or
push
lock
mov
outs
test
push
add
push
stos
cmp
push
mov
cld
xor
ret
shl
pop
fnstsw
aam
cli
push
xlat
ds
ror
push
pop
(bad)
mov
outs
xor
out
dec
sbb
mov
out
call
mov
push
cmps
bound
bswap
pop
pop
pop
(bad)
add
ret
shr
stc
push
in
pop
jge
cmp
fsub
dec
out
or
js
push
leave
cdq
inc
repnz
nop
ins
imul
inc
aaa
stos
aad
stos
repz
and
pop
and
xchg
pcmpgtb
mov
jp
aaa
mov
rol
pop
push
shl
xchg
push
mov
or
push
adc
movs
popa
jns
mov
ins
sub
push
and
call
push
dec
fimul
xchg
es
sti
ret
(bad)
js
stos
gs
outs
pop
not
push
jne
adc
stc
jns
fiadd
(bad)
imul
call
pop
es
div
ret
xor
test
pop
sbb
mov
sub
sbb
mov
bswap
mov
das
pop
sbb
scas
es
mov
push
sbb
call
mov
push
adc
cmp
push
cmp
adc
call
stos
and
xor
sub
mulps
or
jno
lahf
mov
ret
mov
cmp
inc
cwde
xor
adc
bound
jge
mov
inc
int
icebp
cmp
mov
mov
mov
fcom
mov
xor
cwde
mov
div
(bad)
jb
jmp
sbb
imul
dec
mov
mov
enter
jge
fmul
loope
inc
mov
inc
pusha
push
pusha
adc
test
xchg
adc
add
jnp
and
enter
mov
lds
ins
lock
mov
loope
shr
xor
xchg
fwait
jg
shl
jbe
sbb
xchg
xor
xchg
dec
es
mov
pop
adc
dec
out
and
call
icebp
add
sub
dec
pusha
inc
cmp
lods
xchg
mov
inc
lahf
jno
popa
xor
aas
push
dec
test
mov
adc
fisubr
jg
and
jmp
and
clc
addr16
psllw
movs
into
cli
sub
stc
hlt
je
push
cmp
pop
shl
imul
and
inc
xchg
jo
mov
sub
adc
test
push
mov
or
adc
fldenv
inc
mov
fcomp
sub
arpl
test
sub
or
out
xchg
push
call
mov
add
mov
aaa
push
lahf
mov
jno
push
cmps
daa
jl
xchg
cmps
(bad)
mov
fadd
mov
push
push
call
and
mov
adc
dec
arpl
add
and
pop
fild
mov
xor
push
push
or
push
daa
jl
inc
mov
fs
xor
and
mov
ja
pop
cmp
loope
xor
xchg
rcr
mov
pusha
push
push
jmp
or
retf
inc
mov
sbb
retf
mov
mov
fucomi
loope
ins
pusha
nop
mov
(bad)
mov
push
movs
pop
(bad)
dec
lea
mov
rol
xor
aad
mov
pushf
dec
scas
inc
pop
pop
aas
fdivr
pop
add
call
mov
rol
(bad)
pop
popf
(bad)
jmp
jno
pop
xor
repz
xchg
out
lahf
cmc
call
xchg
dec
sbb
add
(bad)
adc
mov
and
xor
jo
(bad)
scas
adc
dec
outs
xchg
cmp
add
rol
push
pop
push
inc
inc
xchg
mov
popf
stos
and
test
pop
inc
dec
loope
rol
add
arpl
xor
dec
out
ret
pusha
pop
adc
mov
cdq
repz
jb
or
pop
popa
fwait
mov
ret
add
push
mov
loopne
loope
fwait
sub
inc
call
or
adc
sub
shr
(bad)
aaa
imul
int3
xlat
push
mov
add
scas
daa
cmp
xchg
and
neg
shl
inc
daa
test
js
add
je
inc
enter
push
pop
inc
pop
xchg
int
out
popa
xor
jp
ret
dec
adc
push
or
pop
outs
pushf
clc
inc
adc
pushf
add
inc
lods
scas
mov
lahf
mov
js
fst
jg
mov
pop
jmp
ret
pop
jo
je
call
test
fistp
inc
ret
add
dec
lods
xor
jne
mov
jecxz
dec
mov
sbb
cmp
leave
sub
xor
daa
dec
shld
cmp
popf
out
ins
arpl
pop
scas
out
or
leave
ja
sbb
mov
mov
adc
sub
je
cmp
dec
je
dec
xchg
into
mov
out
in
or
push
in
imul
jne
or
data16
xor
cmp
xchg
fimul
fisubr
lods
popa
or
int
movs
mov
pop
rcr
adc
pop
xor
addr16
fs
fsubr
sub
inc
sbb
jmp
popf
fadd
fwait
adc
mov
hlt
das
xor
cmp
add
nop
dec
cs
jg
jae
cmp
or
jecxz
and
jno
xchg
call
lock
lea
adc
dec
lea
hlt
mov
xor
mov
icebp
cld
push
or
nop
add
sbb
outs
sub
and
retf
fdivr
fcmove
inc
test
pop
cmp
nop
jl
pop
push
ret
ret
je
mov
jb
mov
test
push
idiv
adc
test
pop
cmps
xor
mov
cs
pop
adc
adc
sub
add
dec
pop
aas
xor
call
stos
scas
loopne
mov
(bad)
xchg
jb
rol
mov
jnp
ficom
mov
rcr
movs
loopne
mov
in
mov
lods
adc
mov
imul
cli
push
lods
mov
cmp
mov
ja
data16
call
push
js
je
push
data16
lds
test
and
sbb
ds
int
push
cmp
neg
cli
add
jae
xchg
adc
shl
cmp
es
not
rcl
lock
js
jno
scas
jl
pushf
jmp
mov
arpl
call
icebp
jg
ret
and
and
in
push
daa
add
adc
and
call
or
(bad)
and
xchg
sbb
sub
cmp
sbb
pop
std
cmps
into
push
push
fld
jmp
mov
inc
cmp
inc
fnstcw
mov
jnp
cmp
jmp
shl
mov
lahf
xor
push
push
outs
fs
xchg
cmp
test
and
mov
bound
xchg
or
je
jg
ds
test
mov
scas
pop
lods
pop
push
push
addr16
movs
jmp
sub
movs
lods
cld
sti
inc
mov
inc
jp
mov
or
add
popa
stc
push
fucomp
test
cmp
push
jo
aam
nop
test
call
sbb
xchg
js
aad
scas
icebp
pop
push
inc
(bad)
pusha
cmp
out
fwait
jne
or
cvtpi2ps
xor
repnz
add
cmovp
into
and
jge
ror
std
sar
adc
pop
bound
or
js
stos
fld
(bad)
xor
add
push
movhlps
lock
jnp
xor
jge
inc
adc
cs
push
sahf
push
ss
inc
dec
adc
cmp
mov
loope
ja
or
add
cmps
ss
mov
and
or
enter
lock
cmp
nop
xchg
push
pop
mov
fsub
call
lods
xchg
dec
ds
mov
xchg
jmp
push
pop
dec
or
mov
je
jne
dec
xor
inc
dec
mov
movs
aas
popa
and
add
pop
shl
movs
push
test
fs
mov
mov
add
mov
int3
mov
outs
xor
xchg
mov
inc
gs
pxor
imul
or
stc
and
and
les
mov
or
add
sbb
xchg
movs
fcmove
fnstenv
push
pop
or
inc
and
cmp
mov
add
or
pusha
inc
loop
inc
sbb
fs
jl
aaa
jns
(bad)
fcomip
sbb
fimul
out
add
call
aam
(bad)
mov
out
out
push
cmp
outs
cld
jecxz
xor
or
jl
xchg
add
inc
loopne
(bad)
rol
cwde
mov
call
das
popa
in
sbb
lods
shl
mov
pop
adc
jle
or
mov
fcomp
sbb
jae
pop
pop
ret
int
js
mov
fwait
cmp
or
inc
fldenv
inc
push
icebp
sbb
xor
sub
shl
out
adc
out
fistp
jl
inc
fwait
leave
push
mov
jae
or
nop
in
push
repz
cwde
mov
rol
add
out
imul
aad
scas
ja
pusha
enter
jo
js
push
imul
cwde
inc
pop
shr
push
xor
xchg
in
shr
mov
pop
add
test
in
test
fwait
popf
test
dec
push
pop
mov
and
mov
fsub
jg
rcl
sbb
in
add
into
mov
cmp
dec
dec
jge
mov
sub
push
add
pop
xor
mov
add
pop
or
aas
cli
cwde
and
inc
ins
enter
pusha
xor
add
add
adc
add
cmp
sbb
inc
add
push
inc
xchg
ffree
mov
gs
xor
jnp
jo
(bad)
pop
sar
adc
xchg
inc
xchg
mov
and
fdiv
ret
push
loope
shl
cmp
jecxz
lea
dec
movs
lea
cmp
jle
mov
pop
and
push
rol
outs
adc
stos
xchg
ror
cmp
sbb
cmp
add
inc
sub
dec
sbb
sbb
test
ja
stos
mov
ins
cmp
cwde
test
or
dec
frstor
inc
out
sbb
push
fisub
mov
mov
sub
xchg
mov
addr16
and
mov
nop
xor
lea
pop
dec
test
ja
inc
push
pop
outs
sub
enter
dec
arpl
jne
cmps
and
es
jmp
inc
in
xor
add
sub
xchg
lock
inc
and
push
pop
loopne
mov
and
leave
xchg
popf
ins
push
inc
adc
push
or
jno
jbe
shl
push
fs
inc
pop
dec
sub
sbb
xlat
and
jnp
push
jne
mov
inc
data16
pushf
xchg
mov
or
pop
xor
jno
bound
test
movs
ror
jae
(bad)
repnz
mov
test
xor
int
test
ja
sti
add
and
imul
cmc
gs
popf
dec
jo
push
adc
jno
out
push
pop
or
retf
stos
xchg
push
sub
call
(bad)
nop
jmp
mov
and
movs
push
mov
lods
xchg
scas
inc
cmovl
add
out
jl
fdivr
pop
jbe
push
jmp
xchg
push
jl
or
sahf
into
push
mov
cmc
aaa
xlat
or
or
outs
and
or
fisttp
adc
sub
ins
adc
mov
dec
xchg
xor
mov
sbb
inc
mov
mov
cdq
fsubr
fbstp
sub
push
mov
ds
and
mov
clc
repz
ins
popa
pop
and
xchg
jne
pop
mov
sbb
scas
repz
dec
adc
daa
xchg
or
jae
and
dec
ret
add
pop
cmp
int
into
(bad)
xchg
jecxz
nop
dec
(bad)
repnz
adc
mov
add
test
sub
adc
cmp
jecxz
into
call
push
or
sar
mov
daa
jo
lea
fdiv
outs
push
adc
mov
fist
ss
xchg
mov
and
outs
mov
add
adc
sub
test
mov
in
add
jge
inc
inc
push
jge
and
icebp
(bad)
fnstcw
js
les
pop
push
or
and
add
and
push
call
adc
pop
push
pop
and
popa
bound
mov
push
cmp
cmp
or
fnstsw
push
adc
mov
iret
or
pop
aas
push
or
push
xchg
jnp
repnz
mov
add
mov
xchg
aam
jp
sbb
or
dec
daa
les
int
fdivrp
in
mov
add
in
pop
or
push
mov
mov
dec
lock
add
pop
pop
cwde
pop
pop
push
sbb
sub
mov
and
es
mov
add
rcl
dec
push
loop
out
leave
inc
jb
cwde
in
ror
es
push
and
cmps
ret
dec
inc
push
pusha
mov
sbb
add
xor
test
inc
pop
cwde
jge
fldcw
add
and
pop
fld
dec
push
jno
ds
loop
jnp
mov
ja
add
mov
mov
or
adc
rcr
inc
pop
jecxz
test
rcr
in
mov
jmp
cli
dec
std
or
adc
gs
push
aas
inc
xchg
fucomi
sar
aaa
bnd
jnp
xlat
mov
repz
mov
sbb
fs
push
icebp
sub
jle
rcr
retf
or
dec
das
xor
icebp
adc
(bad)
mov
or
jb
add
jle
xlat
and
sbb
xor
mov
jae
in
jo
mov
les
xor
sbb
fs
jne
ja
add
dec
pop
mov
mov
xor
and
xor
rcl
pop
inc
jp
xor
(bad)
jl
and
movs
sub
push
sahf
movs
call
xchg
jp
jp
jge
ja
iret
leave
fstp
jecxz
ins
into
and
call
jmp
jb
mov
(bad)
(bad)
enter
push
adc
mov
adc
lock
cwde
and
js
sbb
out
mov
leave
and
rol
fild
fist
pusha
push
dec
xlat
nop
inc
pop
call
or
or
test
data16
pop
or
ret
mov
stc
pop
test
mov
stos
(bad)
jae
jne
and
sbb
adc
adc
or
es
push
mov
push
sub
mov
sub
and
cmp
retf
loope
int3
cmc
lods
ror
aam
xor
in
and
aas
aad
lock
test
mov
cld
mov
mov
mov
xchg
sub
rep
adc
ror
xchg
ror
jmp
adc
cmp
jmp
mov
sbb
loope
dec
jno
xchg
xchg
or
and
sub
jmp
inc
iret
call
push
(bad)
adc
cld
lahf
xor
mov
jg
pop
pushf
sub
call
mov
push
rcl
ror
push
popa
adc
shr
jae
sub
inc
add
lea
dec
cmp
xchg
mov
or
mov
adc
dec
jge
(bad)
mov
jo
shr
in
push
fadd
and
sbb
add
inc
nop
sbb
or
xor
ins
inc
cmps
test
add
dec
mov
pop
ss
gs
je
cld
enter
sbb
xor
imul
nop
sbb
mov
or
inc
fs
cs
inc
xor
bound
test
and
sar
or
stc
or
data16
shl
or
jno
xor
call
shl
jmp
int
outs
inc
shl
icebp
nop
hlt
inc
jle
ins
loope
add
dec
xlat
pusha
test
clc
fs
mov
rcl
leave
dec
repz
stos
clc
(bad)
push
inc
sub
sbb
lock
push
stos
outs
mov
jae
test
push
add
jmp
arpl
test
and
cmp
cs
addr16
sbb
loop
ins
clc
push
or
adc
mov
mov
jb
dec
pop
(bad)
or
pop
imul
pop
and
out
xchg
push
push
outs
dec
scas
ficomp
or
jae
ret
arpl
js
cli
outs
xor
mul
aaa
rol
sbb
rcl
outs
push
xchg
mov
cmp
inc
rcl
pop
les
mov
jno
jle
aam
test
fidiv
retf
mov
mov
xor
outs
or
push
arpl
mov
enter
pop
pop
cwde
shl
leave
mov
xchg
je
movs
pop
or
inc
fs
(bad)
or
jbe
shl
sub
xor
jl
test
(bad)
ja
(bad)
cmp
arpl
add
sub
stos
sbb
push
jns
test
push
mov
jnp
xor
ins
xchg
xor
or
sbb
mov
push
add
shl
and
ret
add
jmp
push
and
enter
fs
lods
loop
outs
or
mov
push
pusha
lods
and
lds
leave
dec
and
pop
pop
div
out
mov
in
lods
adc
div
lods
jmp
push
adc
stos
stos
repz
sbb
cld
cwde
das
stos
inc
pop
inc
push
pop
adc
dec
enter
dec
retf
nop
pusha
into
pop
add
add
pop
and
ret
movs
adc
fnstcw
les
mov
jae
pop
dec
adc
sub
retf
xchg
xor
jge
mov
out
sti
movs
popf
push
dec
lock
cmp
push
cmp
leave
mov
dec
push
movs
add
dec
mov
lods
sar
pop
adc
adc
sbb
enter
ret
add
pop
push
lea
popa
xor
jne
push
adc
xchg
inc
mov
daa
pop
push
call
jae
or
xchg
xor
(bad)
mov
test
push
std
xor
fidiv
or
push
iret
mov
movs
jnp
in
in
xchg
jmp
pushf
xor
push
call
out
call
repnz
jb
(bad)
adc
repnz
test
es
inc
dec
sbb
lods
cmp
xchg
adc
push
adc
or
dec
rcr
cli
jb
dec
sar
iret
pop
adc
push
out
cmp
daa
pushf
pop
lea
test
xchg
jle
lea
movs
mov
mov
movs
jp
add
popf
xor
jne
movs
mov
or
bound
add
push
sub
mov
jmp
call
stos
xchg
add
sub
mov
fucomip
jnp
add
cmp
or
call
cmp
cmc
call
data16
adc
pop
hlt
xchg
or
inc
ret
stc
mov
push
test
add
cmp
sub
xor
jge
mov
xchg
mov
xor
lock
mov
ss
clc
or
(bad)
fadd
push
jns
into
ds
push
push
das
sub
(bad)
xor
add
dec
mov
adc
adc
mov
imul
imul
aas
push
mov
xchg
jmp
fs
sahf
in
cmp
and
(bad)
jmp
pop
ins
daa
mov
(bad)
and
xchg
push
or
shr
in
jmp
mov
lods
xchg
push
sub
add
lds
test
jge
or
push
imul
popa
or
xchg
test
push
jmp
ds
lock
call
fstp
imul
push
clc
jmp
fild
gs
fidivr
mov
fdiv
inc
jo
adc
or
shr
call
dec
or
call
add
adc
in
cmp
sub
xchg
shl
xchg
js
stos
stos
loop
xor
push
outs
add
sbb
add
push
lock
adc
(bad)
rol
mov
dec
xor
or
mov
mov
sahf
sbb
mov
adc
jmp
dec
jae
mov
scas
into
or
stos
inc
mov
or
test
jp
adc
fisubr
and
push
sbb
sbb
add
sub
test
das
dec
jne
(bad)
lea
jl
xor
inc
xchg
pop
jmp
push
pop
pop
add
stc
sbb
cmps
ss
aad
addr16
mov
inc
dec
sbb
jp
mov
add
sub
cmp
or
xor
aaa
movs
adc
pop
dec
mov
inc
xchg
ins
hlt
inc
or
xor
pushf
push
or
inc
xlat
dec
and
addr16
fidivr
jecxz
or
cmp
hlt
jo
add
adc
push
mov
cmps
push
adc
(bad)
movs
sbb
mov
sbb
imul
retf
push
mov
mov
xchg
and
std
clc
ds
out
into
je
push
fidiv
inc
imul
pop
sbb
pop
ror
mov
js
mov
in
mov
and
mov
sahf
inc
pop
jae
cs
fdiv
inc
xor
add
add
pop
adc
daa
sti
or
gs
lock
xchg
inc
or
xor
jp
popf
add
xchg
cmp
fmul
out
lock
add
adc
popa
test
sbb
mov
mov
test
dec
sbb
xor
inc
(bad)
and
push
test
dec
daa
mov
cs
cld
pop
rcl
retf
adc
js
xchg
jbe
jl
inc
mov
and
inc
adc
xlat
inc
psubsw
ror
iret
scas
fild
movs
dec
jl
(bad)
mov
pop
loope
jmp
xor
pop
cmp
inc
ret
cwde
hlt
movs
dec
cmpxchg
in
dec
retf
loop
mov
out
cmp
cmp
call
cdq
dec
jo
imul
xchg
shr
imul
xor
mov
sbb
jnp
sub
sub
fwait
push
mov
jl
push
adc
mov
and
cwde
test
xlat
mov
mov
pop
dec
jbe
scas
sbb
fwait
sbb
mov
xchg
mov
dec
pop
pushf
out
ret
jnp
arpl
sbb
push
xor
pop
mov
outs
push
popa
neg
and
mov
cmp
out
mov
or
mov
pop
or
push
idiv
inc
imul
cmp
xor
mov
jmp
mov
or
cmp
push
dec
pop
cwde
jl
cmp
mov
dec
rcl
test
push
sbb
cmp
cmp
mov
(bad)
dec
mov
pop
xchg
outs
xor
fldcw
ins
push
mov
jmp
inc
lods
push
popa
cmp
sbb
retf
std
rol
push
xchg
push
loope
push
(bad)
aam
leave
loopne
stos
inc
sbb
out
push
aam
mov
frstor
mov
outs
pop
outs
cmp
sbb
daa
jp
mov
cmp
push
push
scas
mov
and
adc
clc
into
add
jge
or
push
and
lea
push
mov
and
adc
stos
pusha
push
add
gs
not
ret
inc
movs
push
pop
stos
clc
and
cmp
and
popf
jne
lea
clc
(bad)
call
mov
imul
add
lock
and
enter
ins
xchg
push
dec
ja
ins
push
push
push
(bad)
sahf
lock
(bad)
sub
or
or
xor
push
jbe
push
out
sbb
adc
movs
sbb
ret
and
pand
adc
fcomp
shl
and
xchg
int
xchg
out
arpl
call
pop
cmp
push
sbb
movs
adc
or
imul
cmp
inc
retf
inc
xchg
sub
leave
push
cmps
jmp
aam
popf
adc
mov
nop
out
mov
daa
sbb
cld
frstor
mov
cmp
cmp
xchg
pop
arpl
and
mov
in
mov
jns
nop
gs
icebp
(bad)
push
push
sbb
ds
in
jmp
ss
aaa
xor
or
sbb
pop
retf
dec
or
push
ss
sti
cli
and
mov
adc
mov
adc
and
mov
ret
sbb
add
cmc
mov
les
jo
jl
and
(bad)
xchg
xchg
outs
ret
js
addr16
mov
xchg
adc
iret
and
retf
jbe
and
lds
and
mov
popf
pop
fisttp
call
sar
fs
mov
out
mov
push
imul
or
fnstcw
mov
push
aam
jae
cmp
addr16
push
das
ficomp
int3
xchg
mov
mov
push
xor
sbb
mov
idiv
shr
call
add
mov
or
ins
retf
pop
adc
inc
fcomp
shl
dec
or
jp
or
cmp
push
dec
add
and
sbb
mov
rcl
mov
adc
cmc
int
fdivp
sub
sti
in
inc
ins
cmps
xchg
movs
loopne
inc
test
imul
push
in
cld
pop
jmp
fcom
jecxz
jecxz
xchg
lods
xchg
push
xchg
jb
repnz
xor
adc
pop
jo
ror
(bad)
and
push
push
jae
ss
ret
jp
aam
mov
inc
or
daa
test
stos
or
mov
dec
mov
dec
imul
lock
adc
test
xlat
int
cmc
or
mov
dec
xor
daa
jmp
adc
pusha
rol
mov
jno
push
in
xchg
cwde
fs
adc
mov
stos
mov
add
imul
pop
repnz
pop
sti
jno
mov
retf
adc
aas
dec
sub
pop
mov
in
jl
jnp
xor
(bad)
loopne
mov
daa
sahf
(bad)
rcr
mov
mov
jne
int3
jnp
mov
or
add
mov
pop
pop
mov
dec
es
adc
mov
fild
pop
sub
adc
lea
push
clc
data16
push
push
mov
pop
or
(bad)
xor
out
mov
mov
mov
push
jne
out
popa
int3
inc
loope
lea
mov
ins
gs
mov
sub
sub
push
jge
mov
adc
ret
cmp
pop
xor
lock
add
ficom
adc
outs
aam
sub
ret
int
aaa
jne
out
mov
cs
xchg
jmp
xchg
mov
or
repnz
sahf
push
inc
adc
lahf
sub
dec
out
pop
aam
dec
mov
and
cmp
jmp
enter
adc
dec
mov
outs
pusha
(bad)
das
mov
mov
das
and
mov
mov
jbe
and
sar
test
xor
in
popa
leave
adc
sbb
cmps
jg
jmp
setl
and
aad
bound
mov
(bad)
das
mov
shl
xchg
test
cmp
mov
dec
mov
lock
mov
enter
ds
repz
into
ja
ins
into
add
ds
sti
sub
jno
adc
dec
out
cmp
mov
pop
out
xchg
inc
or
ret
or
jecxz
test
jmp
(bad)
mov
cmp
xor
or
and
lock
popf
inc
sbb
outs
push
icebp
push
xor
and
xchg
pop
mov
(bad)
push
pushf
ins
popa
jae
ja
or
add
dec
lds
jo
sub
leave
sub
xor
js
cmp
aas
jp
leave
ret
inc
xor
push
xor
mov
sbb
dec
shl
lods
mov
nop
cmp
cmp
pop
ds
xchg
dec
push
jecxz
xor
lea
test
push
cli
sub
add
(bad)
daa
push
icebp
cmovne
in
inc
xchg
lea
in
and
repnz
in
mov
add
jmp
pop
clc
xlat
rol
push
or
lods
sub
mov
clc
or
cwde
cmp
mov
je
or
sbb
dec
or
pop
test
sbb
test
mov
dec
jnp
fidiv
fs
adc
aam
sbb
test
xlat
mov
aam
mov
pop
dec
sub
or
sub
xor
xchg
xor
ins
mov
bound
sbb
sub
fnstsw
sub
rol
pop
movs
dec
xor
daa
mov
js
(bad)
sti
mov
movs
cmp
sbb
or
sub
clc
cdq
inc
xor
pop
adc
addr16
ret
loopne
sar
cwde
sbb
mov
mov
push
xchg
ds
add
cld
outs
jl
inc
(bad)
and
push
xor
sbb
(bad)
or
loopne
cmc
pop
push
jp
dec
adc
dec
fild
in
xor
add
call
rcr
cmp
push
push
mov
pop
adc
xor
sub
enter
dec
mov
aaa
mov
rcl
inc
mov
mov
pop
cmp
push
fist
sahf
push
pop
jmp
pop
fcom
and
cmp
inc
pop
xchg
ins
sahf
cmps
sbb
dec
mov
jl
mov
pusha
enter
shl
mov
push
imul
dec
push
in
inc
fistp
add
adc
(bad)
fisub
jp
and
movs
dec
or
push
or
xor
call
cmc
popf
icebp
cmp
pop
jnp
jmp
fwait
outs
sub
jae
fnstsw
les
scas
jb
shl
bound
adc
mov
shr
or
inc
icebp
lock
(bad)
jno
adc
outs
cld
inc
inc
cld
adc
inc
jecxz
inc
inc
xor
movups
mov
dec
inc
push
xor
inc
sahf
mov
ss
or
inc
push
push
xor
mov
or
test
fisttp
in
jns
fs
add
es
icebp
icebp
cmp
aam
push
in
mov
(bad)
mov
out
add
mov
fcom
stos
fs
and
(bad)
mov
sbb
call
xor
push
jne
aaa
mov
jae
mov
(bad)
sub
mov
not
imul
ins
cmp
out
add
mov
fistp
mov
sub
adc
gs
or
xchg
push
add
aam
jl
mov
mov
inc
and
mov
add
sub
pusha
xor
sub
sub
sahf
sub
or
(bad)
aad
das
shr
in
or
mov
pop
sbb
and
repz
in
iret
push
push
jmp
add
or
sbb
push
sbb
mov
icebp
cmp
xchg
push
ins
(bad)
and
mov
mov
test
dec
popf
mov
jnp
out
jb
into
mov
pusha
inc
rcl
shl
ins
(bad)
jmp
sbb
mov
inc
add
(bad)
mov
fild
fs
jnp
cmp
js
mov
adc
(bad)
or
(bad)
jl
pushf
fs
or
(bad)
and
mov
ret
mov
jbe
xchg
mov
movs
dec
aaa
rol
jge
mov
or
adc
sbb
jne
xor
xchg
or
add
add
or
shr
clc
xchg
lea
or
call
xchg
jge
push
dec
pop
mov
sub
test
jo
sbb
cld
sbb
cmp
retf
jo
push
ror
fwait
(bad)
jbe
ja
stos
lar
jl
cmp
addr16
or
in
pop
sbb
xor
arpl
jl
pushf
dec
pop
pop
mov
inc
fs
scas
je
xor
aam
das
add
jbe
cmp
mov
mov
dec
loopne
sub
movs
mov
xor
dec
push
jnp
or
xchg
cmps
sbb
cmp
dec
adc
adc
pop
jp
adc
mov
in
inc
nop
push
psubb
das
mov
mov
cmp
mov
lods
test
int3
fmul
inc
sbb
add
sub
jecxz
dec
jmp
cli
xor
stc
xlat
aam
and
adc
ss
sbb
push
sub
addr16
inc
call
add
test
repz
add
aam
mov
je
mov
jae
icebp
call
sbb
(bad)
iret
sahf
stos
sbb
popa
js
sar
dec
popf
mov
es
xchg
adc
ror
pop
inc
ret
or
add
test
or
jae
ins
shl
mov
rol
jp
aas
sbb
add
(bad)
les
lods
jbe
xor
push
sub
or
inc
sub
ficomp
test
push
and
and
sub
inc
shl
mov
jb
(bad)
je
hlt
ret
push
dec
mov
shl
pop
or
jl
inc
mov
pop
adc
repz
aam
mov
or
and
pusha
aaa
mov
ret
pop
adc
repnz
aam
enter
sbb
ficomp
shl
mov
lahf
and
sti
mov
and
push
mov
rol
xchg
cmp
inc
in
push
arpl
dec
pushf
push
xor
outs
retf
and
mov
pop
jnp
adc
push
jl
mov
sbb
pop
adc
push
mov
movs
imul
or
ins
xchg
fisubr
xor
xor
popa
and
mov
mov
rol
ret
sub
or
cmps
cmp
(bad)
fs
push
cld
inc
adc
or
adc
cmp
arpl
loope
push
push
nop
jmp
ins
sub
rol
add
ds
adc
callw
jg
inc
add
jge
fdiv
(bad)
outs
aaa
mov
pop
mov
ror
daa
dec
fdiv
int
mov
cmp
push
bound
outs
shl
jno
mov
dec
shl
and
adc
jnp
adc
cs
jmp
sub
enter
lods
lods
rol
imul
dec
(bad)
pop
adc
cmp
popfw
dec
(bad)
je
aad
arpl
lock
aas
cmp
sbb
sti
into
jl
xchg
fnstcw
in
imul
ficom
dec
xchg
inc
xchg
xor
mov
xchg
add
(bad)
popa
test
fstp
pop
(bad)
gs
sti
(bad)
repnz
aaa
adc
sbb
bswap
jle
int
aas
mov
push
into
mov
mov
xchg
in
cmp
fadd
aam
(bad)
sub
stos
mov
sub
cwde
daa
imul
xchg
arpl
cmp
shl
dec
adc
dec
inc
inc
push
arpl
outs
sub
adc
inc
jge
ds
(bad)
ins
xor
hlt
int3
fldcw
icebp
int3
push
fwait
les
mov
imul
xchg
pop
loop
or
repnz
jmp
jae
mov
add
mov
mov
add
inc
pop
inc
imul
test
lds
lea
cmp
or
shl
xor
leave
sar
popa
inc
sbb
xchg
mov
inc
add
sbb
(bad)
dec
in
sub
(bad)
mov
push
call
inc
xor
cmp
mov
cmp
ret
loop
sbb
mov
push
pop
ss
cmc
ins
hlt
sub
and
inc
or
pop
dec
add
mov
pusha
jno
add
addr16
les
push
sub
mov
cmp
pop
pop
xchg
imul
push
push
arpl
in
inc
xchg
cmp
jge
adc
nop
pop
rcl
dec
iret
mov
js
fwait
aam
sub
mov
push
xor
and
sub
icebp
dec
int
add
sub
pop
aam
mov
aaa
ret
(bad)
stos
sub
cld
mov
ds
pusha
(bad)
es
movs
mov
push
dec
push
daa
popf
and
dec
(bad)
(bad)
fcomp
jns
call
les
jno
mov
adc
aad
enter
or
add
lods
inc
test
call
inc
add
mov
xor
sub
cmp
inc
adc
push
nop
dec
mov
push
jbe
nop
pop
pop
leave
(bad)
push
icebp
int
outs
rol
ss
cmp
pushf
ja
addr16
jns
gs
(bad)
fcomp
(bad)
jp
sbb
mov
ficomp
add
aam
das
lea
adc
jge
sbb
mov
add
mov
std
in
inc
(bad)
mov
pop
push
jb
mov
test
sahf
mov
xor
mov
or
pusha
xor
ret
or
jg
mov
outs
or
clc
sub
cli
xchg
or
or
out
adc
rol
out
out
add
jle
sbb
push
xor
(bad)
ffree
sub
add
and
inc
dec
mov
movs
imul
enter
add
or
or
sub
push
sar
mov
out
cmp
adc
ja
repnz
and
imul
(bad)
mov
push
ror
stos
sub
das
dec
add
xor
aam
bound
rcr
scas
inc
jb
pop
push
sti
lea
cmps
push
sbb
pop
add
mov
in
mov
sahf
scas
in
cmp
loop
ret
cli
and
add
push
inc
sub
cli
xchg
fild
repz
and
add
je
rol
and
aam
sti
adc
mov
icebp
or
sahf
retf
std
cmps
mov
pop
inc
add
mov
xor
sahf
add
or
lds
aas
pushf
or
sub
sbb
mov
jno
xor
js
shr
cmps
push
(bad)
jmp
add
sti
add
cmp
add
mov
xor
sub
add
iret
mov
pop
sahf
hlt
jo
and
mov
cld
push
xor
xbegin
nop
mov
frstor
or
std
popf
gs
xchg
sti
and
test
hlt
adc
iret
mov
fsub
mov
rol
stos
scas
or
sbb
dec
arpl
cmp
(bad)
sbb
sub
ins
fidiv
xchg
pop
ror
je
sub
arpl
scas
fucom
sbb
icebp
fcmovb
inc
dec
push
rcl
mov
inc
outs
aaa
pop
pop
push
cmp
sub
sbb
fmul
out
jl
mov
pop
xchg
pop
push
movs
jo
xor
and
cmp
lea
mov
aaa
jnp
mov
mov
inc
rcl
xchg
pop
lea
mov
outs
xor
and
addr16
movs
xchg
xor
imul
dec
cmc
pop
add
aam
mov
mov
sbb
mov
cli
push
push
daa
xchg
outs
(bad)
push
xor
jmp
jecxz
inc
push
ror
fdivr
mov
mov
and
fwait
and
jge
mov
pop
push
mov
ds
xor
shl
addr16
outs
aam
lods
lea
mov
js
stc
div
add
movs
or
int
popa
and
loopne
enter
mov
cmp
mov
into
cld
mov
fs
adc
out
aam
xlat
mov
out
mov
pop
test
fs
adc
sbb
add
leave
pop
shl
dec
dec
out
outs
fist
sbb
and
in
xlat
add
test
mov
retf
lahf
out
aas
or
fisttp
std
or
inc
clc
cs
or
cdq
(bad)
das
mov
frstor
jne
lock
push
inc
cmp
call
pop
mov
adc
push
cmp
mov
loopne
aam
fistp
or
(bad)
ja
xchg
push
mov
(bad)
iret
sbb
and
xor
jge
push
js
outs
aaa
mov
aad
and
push
push
mov
cmc
or
in
push
adc
xor
xlat
imul
daa
mov
sub
bound
(bad)
loop
cmp
ud1
shl
push
xor
mov
fst
out
sbb
dec
cmp
shr
mov
push
call
and
dec
je
sbb
leave
in
fst
mov
int3
mov
or
pusha
fstp
and
and
lds
iret
out
clc
lea
cmp
lea
scas
retf
mov
retf
cli
push
inc
add
sbb
add
ret
lods
xchg
fcomp
mov
lds
or
pop
shr
ss
jb
and
or
cmps
mov
sbb
outs
cmp
jp
inc
idiv
inc
int3
retf
inc
mov
ret
mov
push
fisub
daa
dec
pop
popa
push
jne
clc
sbb
mov
jne
shl
jae
xor
inc
ret
xor
adc
loopne
(bad)
pusha
icebp
or
mov
adc
mov
xor
fsub
inc
xchg
shl
js
ins
pusha
dec
nop
(bad)
test
fs
xchg
fld
repz
popa
sahf
jbe
add
sbb
arpl
xlat
aam
or
mov
js
les
rol
cmp
xor
add
mov
push
jnp
xchg
jp
in
bound
mov
popf
rol
adc
inc
or
and
xchg
addr16
sub
or
test
loop
leave
fs
or
mov
rcl
fs
add
popf
fiadd
adc
dec
mov
pop
outs
mov
cmp
adc
cmp
pop
fcmovne
pop
movs
dec
jmp
sbb
mov
xchg
xchg
cmp
dec
dec
out
rol
nop
imul
popa
clc
and
inc
hlt
sbb
adc
sbb
add
movs
into
cmp
sbb
pusha
sbb
or
call
cmp
xchg
fs
cmc
mov
cmp
cld
fwait
cmc
jnp
daa
or
imul
imul
jb
lods
into
mov
cmc
aaa
das
and
fst
movs
xchg
inc
pop
stos
push
inc
and
push
mov
inc
jns
repnz
cmp
pop
push
jo
jmp
popa
or
sti
dec
sbb
xor
mov
xchg
nop
dec
ret
cmps
or
sbb
mov
pop
js
jmp
scas
pusha
ret
jno
sub
movs
bound
inc
add
inc
not
das
pop
dec
dec
loopne
sti
leave
mov
inc
nop
sub
add
adc
sar
clc
xor
xchg
movs
fild
inc
pusha
add
mov
jo
imul
and
popf
push
xor
add
(bad)
mov
pop
ja
stc
adc
scas
xchg
daa
jl
sbb
dec
mov
push
pop
adc
ret
daa
rcr
in
mov
fwait
push
mov
sub
ins
xchg
mov
cmp
movs
adc
mov
cmp
mov
repnz
mov
or
add
fldenv
daa
retf
xor
stc
(bad)
cmp
es
test
sub
stos
cmp
cmps
jl
ins
cmc
dec
cmp
data16
popf
cwde
hlt
pop
add
ret
xor
xor
cmp
push
call
sbb
das
out
xchg
mov
in
sub
push
mov
ds
hlt
add
ret
movs
add
xchg
fcom
push
out
not
xchg
inc
adc
dec
stc
mov
cmps
out
xchg
mov
fbld
xor
(bad)
in
out
sub
and
fdiv
xchg
mov
sub
fsubr
cli
jo
mov
(bad)
and
lock
sub
inc
idiv
inc
mov
jne
mov
jno
xor
mov
scas
mov
xchg
or
mov
inc
int
mov
jbe
inc
xchg
in
js
pop
cmp
pushf
jnp
adc
and
dec
gs
add
jno
add
cmps
call
sub
lea
sbb
xchg
ret
in
movs
dec
pop
or
or
push
sub
or
adc
data16
or
fwait
das
in
imul
sbb
stc
push
adc
call
push
repnz
hlt
arpl
mov
gs
call
add
mov
jl
popf
cmp
ds
fs
movs
inc
adc
add
mov
adc
mov
mov
add
or
cdq
sbb
inc
cmp
add
(bad)
mov
dec
push
aas
repnz
(bad)
pop
fcomp
xor
jg
sub
and
sub
popa
inc
mov
call
jmp
(bad)
in
js
inc
in
adc
jne
cdq
adc
call
inc
sbb
add
sub
push
xor
mov
push
clc
mov
add
cmps
add
sub
xor
lea
push
xchg
dec
loope
xor
dec
xor
jp
lods
jmp
and
cmp
iret
arpl
dec
movs
jnp
or
cmp
pop
inc
push
and
loope
addr16
xor
movs
ins
gs
out
jle
xchg
add
pushf
cmps
fnstcw
call
dec
jne
outs
push
adc
cli
mov
add
adc
push
inc
adc
push
adc
xchg
or
imul
and
mov
aam
jnp
(bad)
xchg
(bad)
not
xchg
shr
shl
imul
hlt
gs
xchg
or
xlat
xor
mov
add
pusha
jmp
inc
jg
inc
test
mov
shl
sbb
js
(bad)
adc
call
scas
or
mov
(bad)
cli
mov
xor
out
inc
cmp
lock
cwde
or
mov
xchg
xchg
fwait
mov
pop
js
aad
push
shl
cs
xchg
mov
lock
adc
sahf
push
outs
data16
and
popa
js
xchg
pop
movs
or
xchg
loopne
test
jecxz
stos
dec
loopne
xor
pushf
inc
xchg
stos
mov
call
inc
ss
retf
inc
mov
test
sbb
mov
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
ret
(bad)
(bad)
mov
add
xor
add
add
fistp
fistp
add
add
add
add
pop
dec
add
add
or
cmp
inc
adc
inc
add
je
jb
ins
add
rcr
jg
add
add
add
pop
inc
inc
cmp
into
xor
adc
xor
xor
add
jg
xlat
jne
xlat
xor
cmp
sub
and
and
sti
sub
pop
inc
outs
xor
outs
xor
sbb
ds
inc
lahf
dec
push
mov
mov
retf
or
xor
pop
aaa
dec
or
add
jmp
out
or
xor
pop
xor
jmp
es
out
inc
push
scas
or
push
imul
popa
rol
xor
scas
push
fst
cmp
xor
add
ss
xor
imul
ja
add
inc
xor
pop
xlat
jge
jns
and
or
fisttp
xor
inc
xor
xor
inc
in
and
dec
inc
sub
cmp
mov
in
outs
mov
dec
cmp
adc
sbb
cmp
lea
mov
mov
test
adc
pop
xor
ret
mov
xlat
je
sub
aaa
sbb
sbb
ds
dec
popa
mov
mov
aas
pop
inc
inc
inc
icebp
adc
or
pop
out
xor
popf
inc
xchg
xor
add
mov
test
or
xchg
cmp
and
xor
call
das
add
rcr
jnp
sub
pop
fsubr
jl
xchg
mov
inc
and
dec
sbb
xor
aaa
popf
cmps
inc
daa
sbb
adc
or
in
push
add
test
mov
pop
ja
fnstcw
adc
fst
inc
dec
cmp
fld
xor
ds
cli
xor
mov
cmp
scas
jnp
add
xchg
pop
and
xor
mov
xor
dec
jnp
aas
add
add
jge
and
icebp
sbb
xchg
inc
sub
add
add
jmp
test
jnp
inc
test
or
jge
aaa
mov
aas
push
inc
xor
mov
and
gs
int
push
or
cdq
jae
rcr
pop
dec
pop
jns
add
popf
mov
add
aaa
xor
mov
sbb
or
fs
dec
sbb
push
mov
cmp
add
xchg
sub
mov
xor
or
sub
lods
xor
jp
pop
mov
jnp
push
es
sub
movs
imul
inc
cmp
cmp
or
mov
outs
das
cmp
popf
xor
xor
scas
imul
out
inc
(bad)
fwait
lea
jmp
adc
adc
stc
push
mov
fst
cmp
pop
mov
aam
das
shr
pop
fsubr
and
arpl
or
test
retf
push
cmp
cwde
in
jne
and
outs
pop
and
and
pusha
arpl
inc
dec
cmp
leave
loopne
fwait
xor
inc
mov
cdq
adc
movs
imul
repnz
jnp
mov
idiv
inc
rcl
stc
out
rol
pop
lds
cmps
and
and
imul
sub
push
(bad)
adc
dec
outs
and
repnz
and
and
inc
daa
sub
push
pop
jg
aaa
sub
mov
cmp
ins
or
xor
dec
jbe
mov
push
pop
add
xor
clc
adc
cmp
fisttp
xor
dec
outs
lods
pop
fisttp
and
nop
(bad)
jmp
adc
(bad)
push
sbb
lahf
xor
mov
add
mov
iret
stos
pop
out
and
and
sbb
push
push
push
add
imul
add
sub
nop
ja
add
pop
pop
iret
pop
add
aad
jno
je
dec
ja
or
fist
push
mov
iret
push
inc
jno
imul
fld
inc
sbb
xor
sbb
loop
inc
inc
or
mov
cmp
sbb
or
jnp
daa
inc
test
xor
xor
push
mov
fs
addr16
shl
in
aad
sub
xor
(bad)
sahf
mov
aad
and
and
sub
push
test
sgdtd
add
(bad)
in
mulps
pop
dec
xchg
rcr
ins
pop
dec
add
jp
popf
daa
test
cmp
bound
add
and
mov
pusha
sub
add
imul
(bad)
ins
inc
jb
gs
js
dec
jne
je
inc
jns
gs
outs
push
imul
aas
pop
ret
inc
ins
ins
outs
arpl
ins
sti
in
dec
outs
fs
dec
popa
outs
fs
ins
ins
mov
dec
imul
dec
popa
ins
dec
mov
in
adc
nop
ins
and
psubd
sbb
outs
ja
gs
push
pop
mov
inc
dec
add
outs
stc
mov
add
add
adc
pop
add
adc
jb
mov
add
jbe
and
add
push
xor
add
push
das
xor
cmp
pop
fmul
or
je
xlat
daa
(bad)
jbe
fucomip
add
and
cs
je
stos
sub
int3
add
fldz
enter
cs
push
add
mov
cld
loop
daa
inc
jae
arpl
imul
jne
inc
xchg
cwde
inc
add
add
add
inc
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
