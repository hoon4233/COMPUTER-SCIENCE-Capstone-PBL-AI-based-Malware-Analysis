xchg
pcmpgtd
push
add
or
data16
push
data16
int3
or
bound
mov
inc
or
data16
or
je
or
data16
add
popfw
dec
push
data16
lahf
or
pushw
add
data16
pcmpgtd
xchg
pcmpgtd
outs
push
jmp
fwait
or
lahf
sbb
xchg
xchg
push
data16
push
data16
mov
pcmpgtd
sbb
xchg
xchg
pcmpgtd
jbe
data16
les
pcmpgtd
jne
pushw
or
pcmpgtd
or
aaa
mov
pcmpgtd
add
add
outs
add
test
data16
or
data16
dec
push
mov
retw
data16
in
out
push
inc
xchg
pcmpgtd
fisttp
scas
lahf
or
data16
add
push
add
add
add
adc
(bad)
push
inc
add
add
or
push
inc
add
or
and
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
inc
add
add
add
add
shr
mov
test
mov
add
add
add
inc
outs
outs
outs
jns
jne
push
add
add
add
add
add
inc
sbb
add
add
add
sbb
pop
add
add
add
add
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
inc
add
add
inc
adc
inc
adc
nop
add
push
add
add
inc
pop
mov
push
dec
sahf
push
push
sub
add
add
xor
add
add
add
add
push
inc
xor
add
or
or
add
add
add
inc
add
inc
add
jo
add
(bad)
dec
add
add
add
add
add
add
add
add
inc
add
adc
pushf
adc
js
add
test
add
nop
add
add
add
add
popa
outs
ins
gs
outs
je
add
ins
je
jb
gs
add
outs
outs
jns
jne
add
add
add
add
sbb
add
add
lock
inc
add
inc
add
or
add
pusha
inc
add
adc
add
add
adc
add
add
add
sbb
add
add
pop
push
inc
add
(bad)
(bad)
inc
add
add
sbb
or
add
add
add
pop
xchg
add
push
inc
add
add
add
sbb
add
add
lock
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
inc
add
arpl
add
add
mov
sbb
in
inc
add
pop
add
add
hlt
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
add
or
(bad)
(bad)
(bad)
inc
adc
cmp
add
test
inc
add
add
add
sbb
ror
xchg
add
add
inc
add
add
add
mov
add
add
inc
add
or
add
add
aam
inc
add
add
add
push
inc
add
inc
add
inc
add
add
add
add
pop
inc
add
inc
add
inc
add
add
add
add
inc
add
inc
add
inc
add
add
add
add
inc
add
daa
cmp
mov
add
(bad)
inc
add
add
inc
add
stos
cmp
add
cmp
cmp
icebp
mov
add
add
add
add
sbb
test
inc
add
add
add
add
add
add
add
add
add
inc
add
(bad)
(bad)
(bad)
mov
add
add
add
nop
sbb
(bad)
inc
add
add
add
adc
(bad)
(bad)
(bad)
dec
sbb
add
add
add
inc
add
add
add
add
add
add
(bad)
inc
add
add
dec
gs
xor
add
inc
push
popa
outs
xor
add
inc
outs
outs
outs
jns
jne
add
add
fucom
and
arpl
dec
xchg
cmp
cli
cmp
jno
mov
int3
ja
test
cmp
push
dec
sahf
push
push
sub
cdq
rcr
cmp
sub
jecxz
mov
add
dec
lods
xor
or
stos
add
xchg
inc
outs
jb
add
add
cs
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
or
inc
add
add
add
add
add
add
add
inc
add
inc
add
add
add
add
add
xchg
add
dec
lods
xor
or
stos
add
xchg
inc
jb
outs
imul
jae
cmp
add
xor
or
stos
add
xchg
dec
outs
jb
popa
arpl
xor
add
adc
add
inc
add
je
add
popa
add
cmp
add
add
add
add
ins
add
add
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
popa
je
push
popa
jb
add
add
jbe
popa
dec
outs
inc
jae
jb
add
add
gs
jne
push
ins
add
add
or
add
inc
gs
ja
jb
xor
add
pusha
sbb
je
inc
add
add
test
add
or
je
jmp
push
mov
call
jmp
add
add
imul
cs
add
add
adc
add
inc
gs
jb
outs
je
jb
popa
je
push
add
sbb
add
add
nop
arpl
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
sbb
add
inc
imul
gs
push
dec
outs
je
imul
outs
outs
add
inc
add
inc
add
add
pushf
arpl
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
xor
add
add
add
ins
ins
push
imul
outs
arpl
js
inc
add
add
test
inc
add
or
je
jmp
push
mov
call
jmp
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
dec
add
add
add
cmp
push
add
xor
and
push
add
xor
add
add
and
inc
add
add
add
lods
xor
or
stos
add
xchg
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
dec
xor
popa
jb
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
dec
bound
gs
fs
data16
add
sbb
inc
add
jbe
popa
inc
jo
ins
jo
jns
add
add
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
dec
outs
push
je
inc
add
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
inc
jns
fs
pop
pop
jbe
popa
push
popa
jb
imul
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
gs
add
add
jbe
popa
push
je
inc
ins
jo
pop
pop
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
dec
bound
gs
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
int3
xor
add
inc
pop
mov
push
dec
sahf
push
push
sub
fucom
and
arpl
dec
xchg
cmp
cli
cmp
xor
or
stos
add
xchg
push
add
icebp
xor
add
add
outs
xor
or
push
addr16
jo
jns
sbb
add
and
sub
add
add
sub
add
push
sub
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
fsubr
add
add
add
jb
pusha
push
pusha
push
pusha
dec
pusha
push
pusha
push
pusha
push
pusha
dec
pusha
push
pusha
dec
pusha
dec
pusha
dec
pusha
push
pusha
dec
pusha
push
pusha
dec
pusha
dec
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
dec
pusha
dec
pusha
dec
pusha
dec
pusha
push
pusha
push
pusha
push
pusha
dec
pusha
push
pusha
push
pusha
push
pusha
push
pusha
push
pusha
dec
pusha
push
pusha
dec
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
dec
pusha
push
pusha
dec
pusha
dec
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
dec
pusha
dec
pusha
dec
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
dec
pusha
push
pusha
dec
pusha
dec
pusha
dec
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
push
pusha
dec
pusha
dec
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
push
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
push
pusha
dec
pusha
dec
pusha
push
pusha
dec
pusha
dec
pusha
push
pusha
dec
pusha
push
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
dec
pusha
dec
pusha
push
pusha
dec
pusha
push
pusha
push
pusha
dec
pusha
dec
pusha
dec
pusha
dec
pusha
push
pusha
dec
pusha
dec
pusha
les
jns
jp
xchg
out
fwait
btc
or
dec
cld
sub
lahf
ds
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
add
jl
mov
and
inc
adc
ds
and
push
arpl
xchg
loopne
imul
cdq
(bad)
popf
and
les
cmp
xchg
adc
xchg
sbb
(bad)
push
mov
xchg
xchg
push
sbb
lock
cmp
pushf
aad
cs
sahf
int
add
int
mov
and
data16
out
leave
or
cmps
(bad)
hlt
cld
sub
fidivr
data16
and
mov
cwde
adc
add
cmps
jmp
sub
(bad)
sti
jb
add
mov
or
dec
dec
test
fst
jl
xchg
and
adc
(bad)
cmps
sbb
or
sbb
scas
shl
push
lea
and
cmp
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
xchg
aam
xchg
sub
pop
add
jl
xchg
cmp
xor
or
sbb
scas
shl
mov
add
stc
pop
inc
fwait
xor
sbb
fldenv
mov
ret
leave
push
sbb
icebp
dec
cmp
pushf
aad
xlat
sahf
int
retf
push
loopne
jns
xor
xchg
out
fisttp
mov
xchg
hlt
cld
sub
fistp
data16
mov
mov
inc
mov
out
rcr
sahf
add
sub
loope
sub
add
xor
test
in
ss
xor
jl
sbb
and
(bad)
fbstp
push
xchg
stos
repz
bound
sti
add
fcomp
cmps
fistp
ret
xchg
inc
retf
dec
cmp
je
loope
cmp
arpl
nop
and
(bad)
push
and
mov
stos
vmread
int3
repnz
mov
pusha
aam
jmp
mov
lahf
or
jle
xchg
popa
(bad)
add
cmps
jmp
cmp
push
push
pusha
inc
inc
xor
retf
sub
mov
aad
pop
push
shl
loop
repz
cli
dec
pop
inc
(bad)
(bad)
mov
add
je
bound
push
and
cmp
sbb
dec
pop
mov
in
fwait
dec
ret
ins
fisub
es
jge
popa
jle
fisubr
jb
mov
shl
repnz
iret
js
or
inc
xor
push
imul
add
sahf
xor
xchg
out
rcr
sahf
push
pop
dec
imul
push
push
xor
and
mov
mov
mov
jnp
and
or
pop
out
adc
mov
dec
cs
cwde
sahf
scas
or
sbb
dec
cld
pop
cld
fbld
add
or
cs
push
call
xor
and
push
and
ror
adc
loopne
or
mov
or
test
xlat
jmp
dec
aad
rcr
mov
and
aas
mov
aam
(bad)
das
(bad)
sahf
add
loop
fimul
jne
mov
xor
pop
ret
scas
and
add
lds
xor
and
outs
inc
jne
pop
mov
sbb
xchg
add
jmp
sub
add
mul
imul
rcl
pop
(bad)
sbb
scas
not
(bad)
cs
popf
movs
std
in
inc
loope
call
mov
stos
addr16
into
hlt
les
cmp
addr16
jg
rcr
ds
ss
inc
dec
call
out
retf
lods
lds
jbe
and
dec
or
jle
and
mov
mov
mov
and
out
cdq
fadd
(bad)
mov
push
pop
or
rcl
cmps
shl
pusha
dec
cmps
mov
mov
pop
cdq
jl
pop
es
jb
imul
cmp
xchg
sbb
movs
(bad)
sar
xchg
jle
hlt
sbb
outs
xchg
mov
mov
or
xchg
(bad)
fs
or
xor
adc
dec
dec
xor
jle
retf
jp
xor
bound
dec
rcr
jmp
sub
loop
cmc
cmp
test
jo
pop
ss
mov
mov
mov
mov
mov
sbb
and
mov
ins
push
leave
std
jo
push
cmps
outs
add
or
in
and
add
jno
mov
pop
ficomp
cmp
pop
jecxz
stc
movs
in
out
and
rol
pop
pop
(bad)
mov
cs
inc
sbb
or
adc
inc
test
or
xchg
add
mov
into
sar
loope
push
ins
pop
inc
pop
out
pop
dec
and
loop
iret
pusha
push
lock
mov
push
mov
mov
scas
sbb
inc
jl
sbb
repnz
jo
(bad)
jne
xchg
adc
cli
in
bound
dec
add
fwait
push
sub
xchg
repnz
push
aad
iret
push
out
das
pop
add
retf
dec
dec
test
sub
adc
mov
push
jb
das
mov
mov
xchg
xor
jmp
scas
lock
cmp
add
inc
adc
jmp
shl
loop
out
xor
add
loope
mov
jae
xchg
pusha
movs
and
push
js
sub
inc
pushf
jo
xor
or
cmp
pop
or
cmp
push
repz
dec
in
ds
cmp
sbb
fst
dec
out
stc
ret
xlat
ficomp
mov
outs
push
ins
call
(bad)
xchg
aam
stos
imul
xchg
or
js
or
int3
pop
inc
sahf
xor
jg
cmp
dec
ds
mov
xor
jle
sti
jb
lds
or
daa
test
movs
repnz
push
enter
pop
pop
or
in
mov
or
inc
in
loope
cmp
out
stos
push
or
sbb
out
sahf
jecxz
retf
icebp
loope
or
mov
jmp
mov
in
ret
mov
bnd
imul
icebp
or
add
hlt
aam
xchg
pushf
cmp
cld
bound
fwait
cmp
in
inc
gs
pop
out
in
pop
repz
ficomp
sbb
test
lock
jle
jo
lea
scas
addr16
cmp
dec
lock
pop
cmp
test
cli
mov
repz
push
sbb
(bad)
push
adc
je
das
pop
call
fs
loop
or
sub
or
test
fcom
jp
arpl
sbb
push
xchg
int
outs
cdq
inc
arpl
movsx
imul
sbb
shl
xlat
das
xor
jmp
scas
lock
mov
cmp
jg
int
mov
repnz
fild
sahf
cld
cmps
scas
add
cmp
shufps
mov
mov
repz
mov
daa
jle
(bad)
xor
out
inc
xchg
loopne
cmc
pop
rcl
mov
jo
out
push
adc
arpl
fst
stos
lss
out
in
rcl
sub
and
sbb
out
arpl
xor
sbb
retf
sbb
xchg
dec
pop
sub
or
jnp
jns
jae
mov
sub
and
inc
(bad)
pop
mov
add
mov
lds
pop
add
daa
(bad)
mov
pop
add
mov
sti
in
aad
mov
ds
push
dec
jl
out
cdq
ret
dec
or
add
sub
sti
in
push
lods
xor
cmps
xor
test
sbb
dec
dec
dec
pop
cmp
pop
hlt
mov
dec
cmp
arpl
xor
ins
xor
popf
cld
sbb
imul
jle
sbb
xor
pusha
repz
jo
(bad)
les
mov
jns
push
sub
pop
xor
sar
sub
or
sti
adc
aaa
in
dec
inc
int
jbe
shl
retf
mov
je
add
add
and
and
adc
jb
jmp
push
repz
out
enter
call
outs
repnz
repnz
test
cld
jb
lds
pop
outs
jmp
in
(bad)
popa
jno
std
popa
mov
xor
and
fdivp
inc
test
adc
jmp
call
sahf
bound
pusha
mov
retf
cmp
aaa
js
mov
in
sbb
aad
popa
retf
jmp
push
(bad)
mov
mov
pop
add
sahf
inc
or
fld
add
jo
(bad)
jmp
jg
repnz
arpl
or
rcr
inc
push
sbb
xchg
aas
(bad)
sbb
icebp
lds
out
pop
je
jecxz
xchg
sbb
ret
mov
jmp
stos
jae
mov
repnz
mov
pusha
repz
xchg
fnstcw
data16
mov
aam
dec
in
sbb
aad
popa
imul
(bad)
ja
pop
shl
popf
add
adc
mov
mov
mov
and
mov
test
add
fadd
sar
outs
cmp
mov
imul
cmp
call
xchg
sbb
aad
ret
push
out
das
push
sub
test
adc
jno
in
push
push
psubw
and
or
mov
mov
loopne
xor
icebp
cld
jle
push
fmul
ss
jg
push
mov
or
out
(bad)
imul
adc
add
dec
cmc
test
mov
or
mov
sub
sbb
movs
and
shr
int
je
sbb
cmp
add
(bad)
cld
add
fcmovnbe
daa
mov
cmp
push
jmp
jecxz
add
push
ins
sbb
fldcw
sub
dec
idiv
sub
mov
out
adc
xchg
scas
pushf
pop
icebp
adc
pop
das
add
or
pop
(bad)
imul
dec
xchg
lds
pusha
jp
sar
adc
and
shl
cmp
mov
call
and
push
std
adc
aas
inc
xchg
cdq
inc
dec
add
and
push
popf
call
xchg
push
jns
sahf
inc
lds
or
fbstp
push
mov
dec
add
shl
or
mov
xor
les
in
and
dec
sbb
stos
push
or
sub
pop
mov
pop
mov
ja
mov
dec
jg
xor
mov
or
cmp
mov
rol
mov
add
imul
out
jg
jmp
cmp
pop
sbb
xchg
pop
ret
dec
pop
add
sbb
mov
xor
ja
out
clc
push
shl
mul
std
in
jmp
cwde
sahf
push
or
add
jo
push
adc
arpl
add
in
repz
push
jecxz
xlat
pop
jecxz
std
sar
cmp
xor
or
iret
xchg
test
jnp
gs
inc
vmread
fucomi
sub
add
out
lds
ffreep
adc
es
jns
arpl
xchg
dec
ds
sbb
aad
popa
and
pop
lahf
in
sbb
jbe
mov
mov
xor
xor
push
or
aad
add
and
dec
ja
call
das
push
sub
stc
inc
push
adc
arpl
out
push
mov
sbb
xchg
jecxz
iret
out
std
cmp
ficomp
push
cmp
inc
pop
jns
pushf
fisub
or
adc
dec
ins
fwait
outs
hlt
into
or
pop
outs
or
aam
repz
fbstp
pop
retf
pop
xor
pop
xchg
fwait
pop
js
dec
ds
shr
popa
jbe
pop
lahf
in
inc
data16
(bad)
es
stc
mov
mov
add
and
sub
test
dec
mov
clc
jg
in
push
sub
cld
in
push
inc
sub
pop
push
(bad)
les
jmp
adc
mov
push
arpl
xor
cmp
and
mov
or
sbb
fidiv
pop
xor
xor
mov
mov
call
out
shl
adc
jbe
int
je
add
cmp
and
add
sub
test
mov
mov
or
mov
out
push
cli
cmc
std
xchg
xchg
push
push
cmps
out
sub
in
push
fwait
jo
enter
ror
mov
cdq
fs
dec
pop
sub
cmp
arpl
nop
fisubr
and
imul
cmp
out
repz
retf
int3
js
std
adc
imul
movs
ss
jecxz
pop
dec
inc
push
xchg
popf
fild
aam
cmp
(bad)
sahf
sub
(bad)
xor
cmp
mov
icebp
mov
leave
retf
in
pop
or
mov
scas
or
jl
xchg
test
fld
outs
fld
(bad)
jmp
clc
lds
jmp
out
fldenv
imul
lods
xchg
(bad)
cmp
jnp
ret
xlat
pop
fsub
iret
inc
push
sbb
jmp
loop
dec
sbb
and
movs
fnstcw
test
add
add
mov
repz
fbstp
into
mov
jno
mov
sub
lahf
ds
sub
fstp
(bad)
pop
lahf
in
(bad)
ja
repz
jmp
sti
stc
or
js
inc
push
xor
rol
push
mov
in
push
popa
out
inc
or
out
sub
in
icebp
sbb
(bad)
push
daa
outs
and
pop
fstp
pop
sub
add
add
or
test
fcom
jp
bound
sbb
push
mov
(bad)
and
adc
arpl
jns
jp
jns
xchg
mov
lahf
push
iret
push
and
in
cmp
pop
jle
jae
dec
jns
adc
dec
cli
int
mov
fbstp
movs
fwait
mov
sbb
repnz
sbb
bound
(bad)
sti
jb
add
sub
mov
(bad)
(bad)
jo
(bad)
scas
popf
inc
mov
mov
inc
adc
fdivrp
add
xchg
scas
push
fild
fst
mov
sbb
sub
outs
inc
xchg
arpl
shl
xchg
sahf
adc
jle
sub
xchg
out
adc
loopne
iret
repnz
pop
sbb
push
(bad)
sbb
jne
idiv
mov
pop
shr
repz
adc
daa
ds
cmps
popa
lds
mov
popa
loope
jbe
popa
and
cdq
out
add
xor
sbb
inc
dec
add
(bad)
mov
bound
dec
dec
pop
rcr
ficomp
call
addr16
sub
sbb
(bad)
push
mov
into
sub
mov
nop
fs
pushf
aad
sub
mov
mov
pop
ret
pop
push
jno
jp
xchg
int
jnp
movs
or
data16
out
and
data16
or
cli
mov
sbb
ins
pop
lds
xchg
call
iret
fsub
ret
add
xor
stos
cmp
mov
into
inc
lock
cli
push
int3
sar
sbb
pop
mov
and
add
test
out
push
and
repnz
sbb
mov
xlat
aas
pushf
adc
dec
ret
jp
jp
in
dec
mov
mov
imul
jns
jnp
xchg
out
rol
hlt
or
mov
and
adc
mov
mov
mov
inc
movs
vpxor
adc
ret
xchg
stos
ret
cmps
jmp
stc
popf
add
sti
jb
push
add
sti
mov
mov
fdiv
jnp
xchg
adc
test
xor
sub
out
scas
pop
stos
push
in
pushf
cwde
or
xor
push
mov
div
scas
ins
adc
jecxz
bound
test
mov
hlt
outs
sbb
mov
retf
in
mov
sbb
jle
dec
jns
jp
nop
test
cli
xor
das
xor
mov
pop
and
jle
outs
movs
mov
pop
mov
fstp
jns
push
sub
dec
cmp
mov
mov
(bad)
mov
dec
or
or
ins
push
jne
(bad)
push
and
loop
call
scas
adc
cli
stc
in
shl
out
push
jecxz
les
and
enter
adc
movs
(bad)
sar
xchg
iret
cmps
pop
out
sbb
popa
mov
push
sbb
add
add
retf
push
xchg
out
cmp
call
aaa
clc
sub
or
rcr
mov
(bad)
loopne
push
out
sbb
sub
push
mov
cld
adc
pop
pop
mov
mov
xchg
mov
stos
pop
into
sbb
mov
and
and
adc
(bad)
cmp
out
call
pop
cmp
adc
jbe
std
push
fwait
mov
stos
test
in
sahf
xlat
sbb
lds
mov
sub
adc
mov
sub
scas
pushf
adc
js
xor
in
ret
sbb
xchg
test
shl
addr16
pop
xchg
add
pusha
jns
lods
inc
and
cdq
int
dec
or
and
data16
push
rcr
lahf
add
into
scas
push
mov
loopne
dec
js
jmp
or
in
pop
or
mov
add
mov
xchg
(bad)
out
iret
test
fisttp
add
pop
sub
mov
jle
cli
push
fwait
or
push
push
cmps
adc
mul
es
push
mov
mov
cmp
test
sar
enter
xchg
sub
aam
test
sahf
int
mov
ja
outs
pop
fisubr
push
iret
inc
jl
fs
add
add
add
iret
out
cs
shl
dec
inc
fxch
and
dec
retf
out
xchg
ds
sub
pushf
es
xchg
add
(bad)
xor
ds
retf
out
sub
mov
xor
fisttp
ins
loopne
pop
std
scas
cmp
cdq
add
in
add
add
fldenv
dec
xor
jecxz
inc
sub
mov
ins
push
je
push
shr
test
sbb
fiadd
adc
pop
repnz
add
jmp
or
xor
dec
pop
xor
imul
icebp
sub
addr16
sub
ja
pop
mov
lea
mov
mov
and
lods
hlt
stc
fbstp
jl
out
in
in
pop
daa
cwde
adc
push
inc
push
jmp
fcom
mov
adc
lods
lea
test
or
sbb
sbb
jg
cs
in
inc
cli
outs
pop
fisubr
push
iret
pop
jl
fs
adc
cli
mov
test
add
sub
xor
xor
jne
sbb
in
pop
cdq
ficom
push
repnz
cmp
in
cmp
mov
and
add
lods
xchg
vucomiss
mov
adc
fisttp
and
cli
in
in
inc
jle
adc
or
inc
fwait
or
popf
retf
adc
dec
xchg
xor
sti
dec
test
or
ficom
xchg
test
je
adc
pop
dec
inc
lock
std
cld
pop
lea
sub
stos
ss
add
add
dec
inc
dec
xor
popf
push
mov
mov
inc
ror
xchg
lea
mov
or
daa
add
push
retf
push
cmps
jo
push
repz
enter
xor
test
repz
iret
jo
(bad)
out
ret
rcl
stc
pop
pop
mov
loope
js
aam
sbb
in
(bad)
fst
push
mov
ret
mov
(bad)
sbb
xchg
cmp
inc
add
cmps
add
jns
xor
sar
iret
or
and
(bad)
xchg
jg
gs
retf
mov
pop
(bad)
loop
stos
les
ins
(bad)
dec
jge
shr
mov
bound
and
out
sub
xchg
nop
xchg
jno
std
mov
dec
or
lar
shr
or
fwait
lods
cwde
or
xor
call
in
es
add
mov
dec
cmp
jp
sbb
pop
pop
sar
(bad)
cs
shl
push
mov
js
ins
fmul
or
out
mov
cmp
jmp
push
sbb
dec
ss
sbb
push
bound
enter
inc
add
movs
adc
in
inc
pop
dec
fild
lock
fistp
push
xor
outs
retf
pop
pop
loop
in
push
mov
ins
cmp
fcom
stos
dec
or
sbb
ficomp
das
ja
idiv
sub
icebp
and
out
xchg
inc
imul
sbb
jmp
mov
shl
and
test
add
pusha
mov
xchg
mov
inc
imul
mov
mov
rcl
out
or
push
mov
cld
adc
popa
icebp
inc
add
pop
sti
pop
ret
mov
and
cdq
outs
iret
pop
jle
or
adc
fs
xor
loope
mov
stos
and
add
inc
(bad)
and
add
xchg
pushf
call
and
mov
push
xchg
dec
and
(bad)
fwait
jne
pop
lods
jle
push
pusha
pop
jae
(bad)
mov
repnz
push
mov
movs
adc
(bad)
fmul
add
ds
mov
adc
jbe
push
xchg
movs
bound
aad
imul
and
mov
xchg
mov
xor
xor
(bad)
inc
popf
aas
int3
shl
cld
sbb
dec
xchg
sbb
in
out
push
jnp
stc
cmp
sbb
cmps
jnp
aas
pop
in
cmp
nop
xchg
dec
enter
retf
pushf
(bad)
xchg
(bad)
data16
dec
sbb
xor
outs
or
mov
lods
sub
mov
retf
xor
int3
pop
push
cmp
and
pushf
fcomp
ja
adc
sub
or
cmp
pop
cmp
je
pop
psrlq
popa
icebp
add
dec
add
(bad)
and
ss
mov
mov
test
or
push
push
out
inc
lahf
dec
not
ins
or
cs
cwde
sahf
pop
sbb
bnd
lods
stos
push
or
repz
sbb
popf
mov
out
push
mov
lds
imul
sahf
(bad)
cmp
and
mov
imul
cli
mov
aam
outs
fs
fbstp
inc
loope
rcr
xchg
push
xchg
test
fstp
cmp
pop
mov
jbe
dec
jle
mov
test
mov
ror
mov
sbb
fld
jo
(bad)
ror
jmp
repz
jne
and
mov
loope
lods
mov
call
icebp
mov
scas
hlt
inc
sbb
ins
fisub
lock
sahf
(bad)
es
jle
stos
ins
push
fiadd
out
fs
fisttp
or
mov
int3
fild
fimul
push
dec
xor
xchg
imul
test
cmp
iret
repz
jb
fld
dec
add
pop
dec
test
xor
cwde
in
xchg
lea
or
sbb
sub
jmp
jle
out
mov
fsub
retf
or
xchg
dec
lock
imul
int3
into
(bad)
adc
xchg
pop
pop
adc
push
out
push
shr
mov
jmp
pop
retf
(bad)
push
imul
pop
adc
or
mov
push
ret
mov
imul
cmp
adc
not
push
(bad)
repz
lea
sti
in
push
int3
xor
and
ins
scas
test
ror
es
push
cmps
xchg
add
cs
je
fbld
int3
ds
out
lods
push
mov
add
mov
dec
sbb
xchg
ds
jns
cwde
inc
mov
add
and
and
sub
sbb
jne
and
xchg
pop
leave
stos
in
dec
(bad)
dec
int3
mov
push
sbb
ret
outs
call
sahf
adc
cmc
aaa
(bad)
jl
gs
repnz
ret
cmp
mov
outs
fidiv
mov
mov
xchg
and
call
aaa
cmp
scas
rcl
stc
and
cmp
repz
mov
outs
ins
pop
repnz
inc
inc
add
adc
call
and
arpl
fadd
scas
xor
adc
shl
xchg
add
nop
adc
das
loopne
pusha
fiadd
stc
and
iret
mov
mov
cmc
pop
dec
push
jb
xchg
dec
dec
(bad)
and
(bad)
jmp
(bad)
mov
(bad)
xor
(bad)
sti
jb
ins
retf
aad
xchg
cld
ror
push
and
add
mov
imul
lock
mov
pushf
jp
add
push
cmps
xchg
add
das
add
inc
(bad)
das
out
add
lock
dec
sbb
xchg
test
sub
ins
inc
dec
dec
scas
pushf
lea
xchg
sahf
cwde
jbe
test
shl
jno
lgs
clc
or
lahf
cld
inc
lahf
in
pop
fbstp
movs
mov
mov
idiv
push
xchg
push
xchg
or
pop
dec
sar
retf
in
sub
loope
mov
cmp
popf
mov
pop
mov
ss
pop
mov
inc
mov
push
fidiv
test
mov
pop
rcl
cmps
shl
pusha
dec
cdq
cli
in
pushf
ins
sbb
fcom
popf
out
cmp
xchg
hlt
pop
jmp
mov
xlat
and
cmp
test
movs
sbb
scas
arpl
and
adc
xchg
jbe
out
fs
sbb
int3
js
in
ja
xchg
mov
xor
cdq
bound
ret
mov
xor
ja
sbb
or
mov
push
and
mov
stos
cmp
lea
push
int3
xor
sbb
mov
sbb
loope
jno
xchg
xlat
cs
cdq
test
popa
jae
or
ret
mov
arpl
or
dec
xor
leave
cmp
pushf
in
nop
xor
push
or
pop
(bad)
push
in
pop
add
mov
mov
xchg
(bad)
add
mov
push
(bad)
repz
cmp
mov
xchg
cli
je
ror
scas
jmp
jb
and
mov
push
add
push
sub
jns
retf
sbb
mov
ins
push
leave
std
mov
push
mov
movs
arpl
adc
fldenv
xor
aas
(bad)
dec
scas
(bad)
adc
xchg
jmp
xor
loop
jp
xchg
fsubr
mov
sbb
xchg
cmc
cld
pop
xchg
add
ds
retf
popf
jns
add
push
inc
int
lock
daa
xchg
hlt
in
stos
sbb
lahf
cmp
movs
mov
mov
inc
xor
out
fldenv
xor
xor
cmp
jmp
sbb
test
mov
mov
adc
iret
test
fisttp
mov
in
xchg
pushf
outs
dec
jne
test
push
jecxz
or
shr
sbb
cmp
clc
xchg
shl
repz
in
jg
cwde
push
mov
xchg
or
pop
pop
and
pop
dec
addr16
ret
dec
pop
pusha
pop
mov
push
push
addr16
pop
dec
sar
loop
shl
dec
fadd
lea
cmps
test
neg
push
mov
gs
inc
xchg
xor
lock
dec
add
movs
mov
mov
adc
add
popf
ins
jo
pop
ins
scas
push
and
ds
fld
push
aaa
push
cmp
pop
inc
adc
pop
in
leave
icebp
push
out
xchg
hlt
iret
adc
add
fidiv
fs
out
adc
mov
aam
jns
call
mov
or
xchg
mov
mov
or
enter
add
mov
ret
pop
sti
in
pop
or
fisttp
mov
and
fisttp
ret
lahf
(bad)
in
push
fldenv
adc
pop
cmps
jg
mov
(bad)
fcmovne
out
imul
sar
lds
icebp
inc
std
fldenv
jmp
es
out
cmp
pop
mov
mov
cs
push
inc
test
add
cld
and
arpl
pop
(bad)
cwde
int
mov
mov
or
imul
sahf
add
data16
or
dec
ja
(bad)
jbe
outs
add
or
xor
das
inc
js
ret
mov
aad
and
out
inc
ja
sahf
mov
fld
(bad)
clc
jnp
add
je
ja
loope
or
xchg
icebp
mov
xchg
sbb
ret
idiv
lahf
loop
push
movs
int3
jp
xchg
and
mov
and
jbe
jb
mov
mov
xchg
cmc
cld
mov
sub
mov
fiadd
mov
xor
inc
xchg
jns
int
inc
arpl
shl
sub
jmp
aad
push
pop
jbe
cmp
int
cmp
loopne
aaa
sbb
inc
sub
mov
cmp
jecxz
psubb
in
cmps
pop
and
repz
adc
fs
cmp
out
push
scas
mov
popf
mov
rcr
sbb
xchg
xor
sar
pop
nop
and
lds
gs
pop
jge
repnz
jle
fsub
adc
hlt
leave
leave
movs
sub
push
cmps
sbb
cmp
mov
cmp
bound
inc
adc
pop
adc
sbb
hlt
sbb
fnstsw
push
int
dec
dec
dec
push
daa
jne
pop
or
popa
jns
fiadd
push
fist
mov
sar
adc
push
mov
add
sub
fstp
xchg
pop
dec
dec
cmc
xor
das
fs
gs
pop
imul
in
fwait
popf
sbb
cmp
jne
mov
cmc
call
sbb
sbb
out
adc
push
mov
inc
mov
pushf
pusha
push
add
bound
pop
or
pop
sbb
ds
retf
sub
xor
js
mov
mov
xchg
mov
retf
lods
dec
mov
mov
sub
les
jmp
lods
pop
movzx
push
cmps
push
retf
cdq
and
aad
mov
add
add
ret
push
sub
sbb
(bad)
aas
pop
cmc
into
mov
and
or
xchg
imul
xchg
out
mov
jmp
or
inc
cmp
(bad)
das
xchg
xchg
test
add
mov
sti
lock
fxam
inc
pop
xchg
test
lea
add
mov
adc
sub
fbld
or
push
jne
lock
cmp
popf
sub
jg
mov
push
sub
xchg
std
in
push
hlt
jl
pop
jecxz
and
loop
popf
icebp
push
push
cmp
lea
scas
rcr
push
scas
sub
(bad)
movs
fs
popa
sti
fild
mov
bound
inc
shl
leave
retf
repnz
data16
(bad)
arpl
or
mov
add
out
fcom
mov
or
jbe
in
cmp
sti
lea
xchg
imul
icebp
pushf
cmp
mov
and
mov
cmp
fisttp
(bad)
leave
push
sbb
and
or
jmp
loopne
ins
icebp
(bad)
into
push
(bad)
cli
scas
sbb
sbb
dec
cmp
pop
ret
or
idiv
scas
dec
stos
outs
pop
fsub
(bad)
sbb
inc
(bad)
mov
out
ins
cs
hlt
scas
inc
nop
mov
push
xor
shr
sub
int
cdq
jo
xchg
mov
sbb
das
mov
jp
lods
sub
pop
lea
call
mov
dec
mov
inc
or
sbb
inc
popf
test
add
movups
or
shl
into
cmps
sub
push
or
mov
xchg
fcmove
sub
add
mov
dec
cs
or
mov
arpl
mov
(bad)
daa
(bad)
cmp
ins
ins
xor
sbb
in
ror
cmp
test
jle
sbb
lods
dec
rcr
scas
mov
inc
mov
fcom
ins
aad
repnz
sahf
ds
sar
rcr
or
mov
rol
add
dec
add
sbb
sbb
jle
ret
imul
enter
ret
fcomp
lods
add
adc
call
sbb
jmp
scas
or
adc
dec
test
daa
mov
test
push
mov
movs
inc
imul
or
dec
jae
jmp
add
popa
jmp
mov
push
cld
ins
xor
cmp
pop
dec
call
pop
scas
sti
out
(bad)
popf
leave
pop
pop
fxam
sti
ds
mov
sub
(bad)
or
aas
mov
fidivr
test
nop
bound
lock
sub
and
push
cmp
jecxz
mov
and
(bad)
(bad)
rcr
push
cdq
in
adc
or
cmp
(bad)
sahf
loope
push
adc
dec
shl
(bad)
mov
jecxz
mov
add
add
frstor
inc
ret
hlt
ja
adc
loopne
fdivr
fxch
xor
xor
pop
imul
pop
add
and
mov
mov
or
jbe
loop
cmp
hlt
xor
mov
mov
dec
dec
and
ret
imul
and
add
pushf
cmps
cdq
(bad)
sbb
mov
fwait
or
(bad)
sub
fnstsw
imul
int3
test
call
push
push
adc
addr16
jno
add
and
fild
and
adc
add
les
pop
or
push
xor
jno
inc
dec
xor
test
dec
dec
es
adc
ja
lock
or
ficom
pop
dec
popa
lahf
mov
or
pop
mov
enter
mov
jmp
sub
push
ret
or
ret
adc
pop
faddp
ret
jecxz
pop
int
sbb
leave
add
push
(bad)
scas
push
mov
push
sub
gs
mov
in
cmp
inc
mov
loop
cli
mov
hlt
mov
push
add
jle
jno
test
xchg
jmp
dec
xor
xchg
outs
aad
dec
or
xchg
enter
push
jmp
pop
retf
pop
aaa
jbe
(bad)
mov
cdq
lock
inc
scas
inc
mov
inc
adc
sbb
inc
xchg
(bad)
fisttp
mov
mov
cmp
xor
pop
jmp
push
jnp
cmp
adc
mov
lds
pop
pop
out
push
push
test
push
pop
jmp
jle
lea
test
jp
xchg
adc
pop
xor
cmc
cmp
cld
sub
mov
xor
je
or
call
out
mov
(bad)
call
sbb
fsub
push
enter
lods
xor
int3
pop
dec
aam
inc
movs
mov
jae
fdiv
stc
cld
(bad)
mov
pushf
push
inc
imul
pusha
mov
push
loope
mov
outs
dec
mov
xchg
imul
pushf
xchg
sbb
mov
jns
call
adc
imul
ins
adc
test
jp
or
cld
sub
(bad)
loope
test
xchg
into
mov
arpl
push
xor
call
mov
add
inc
out
mov
xor
sti
jecxz
add
push
pop
dec
cmc
in
test
dec
pop
pop
stos
dec
xchg
nop
scas
pop
jb
cs
sbb
jo
scas
push
lods
loop
jecxz
sbb
repz
push
mov
repz
pop
ins
nop
aad
movs
jnp
or
jle
and
xchg
gs
and
cli
cmp
fistp
jne
push
adc
stos
stos
inc
test
add
add
add
mov
adc
adc
out
cs
dec
aam
dec
cmp
out
scas
cld
mov
clc
jge
cmp
adc
test
(bad)
popa
mov
gs
add
mov
dec
xchg
nop
scas
sub
add
mov
stos
mov
xlat
cmc
out
imul
dec
in
cli
mov
test
aad
imul
test
cmp
xor
add
cmp
adc
mov
fistp
and
cld
dec
stc
inc
mov
cmps
mov
fucomp
cmps
fwait
les
lock
cmps
pop
gs
xor
jne
jmp
pushf
jo
or
into
mov
mov
mov
int
cmp
fcom
adc
inc
sbb
xchg
nop
scas
shl
adc
fwait
xchg
bound
fstp
cli
test
xchg
daa
sbb
mov
and
ret
sbb
nop
sbb
jo
sbb
movs
fnstcw
rcr
out
div
adc
loop
popa
or
cmp
mov
lds
scas
shr
rcr
adc
push
inc
xchg
add
jbe
retf
jmp
add
mov
push
jns
fs
mov
adc
jg
mov
add
outs
xor
cmp
shr
sbb
aad
ret
push
out
das
push
xchg
in
inc
ret
stos
jae
lds
sahf
dec
add
jecxz
stc
adc
div
arpl
repnz
hlt
ret
cld
mov
cmps
push
jae
mov
mov
in
std
test
sbb
inc
daa
(bad)
jmp
cmp
and
mov
loope
lea
mov
sbb
cmp
mov
pop
dec
rol
or
rcr
scas
sub
aaa
movs
or
out
and
dec
cmp
sbb
push
cmp
ins
push
sbb
icebp
es
arpl
int
popa
mov
or
stc
iret
sub
or
icebp
or
push
mov
add
xor
xor
pop
cmp
sbb
aas
addr16
gs
shl
je
lock
ja
(bad)
sti
dec
xor
pop
add
push
add
jo
and
and
xchg
int3
jno
jl
ins
or
sub
scas
shl
adc
sbb
adc
mov
and
fcmovbe
xchg
dec
add
lea
nop
cld
mov
push
cmp
arpl
and
add
pop
fidiv
cmpxchg
icebp
or
icebp
cmp
ret
jo
pop
and
inc
push
mov
xor
adc
jmp
mov
shl
loop
xlat
add
ja
add
test
popf
add
(bad)
push
mov
xchg
aad
fist
pop
push
dec
sub
movs
mov
enter
xor
pusha
pop
in
cmps
cmp
pop
or
rcr
push
out
cs
xchg
adc
lods
xchg
neg
inc
jae
or
xlat
push
push
dec
dec
xor
pop
nop
cmc
inc
xchg
into
inc
js
lea
jno
pop
jl
out
push
retf
ret
(bad)
inc
test
rcr
stos
shl
mov
dec
xor
gs
imul
call
aas
(bad)
jmp
nop
dec
out
cwde
adc
mov
inc
jmp
inc
or
or
popa
lea
xor
adc
or
inc
push
adc
je
sub
fs
lods
pushf
lahf
idiv
push
mov
pop
mov
std
scas
inc
pop
ins
cwde
aad
movs
jnp
or
mov
stos
xchg
movs
dec
ins
addr16
ss
stos
fucomi
add
in
or
mov
pushf
xor
dec
int3
inc
xor
imul
xchg
cmp
(bad)
popa
jbe
dec
sub
aaa
cmp
ja
adc
push
retf
inc
aad
add
repz
sbb
repz
mov
ins
or
lock
rcr
out
dec
out
push
and
push
mov
imul
test
mov
out
pushf
cmp
into
add
cmp
stc
retf
inc
and
repnz
xchg
or
jl
outs
retf
fbstp
dec
(bad)
lods
enter
dec
mov
sti
sbb
das
(bad)
int
adc
scas
xchg
xor
sahf
or
pushf
clc
sub
sti
mov
jae
fldcw
xchg
cmpxchg
ja
mov
dec
out
xchg
in
in
and
xchg
fwait
jmp
cmc
fcmovnbe
add
stos
fld
xchg
jecxz
xor
int3
fistp
aam
call
pop
push
pushf
jne
shl
data16
imul
(bad)
addr16
and
inc
clts
cmp
cmp
imul
jmp
pushf
jne
push
sub
inc
ret
inc
xor
loop
pop
mov
cwde
adc
outs
fistp
cld
cmps
push
adc
jne
clc
stos
(bad)
popf
jo
xchg
pop
add
sti
mov
sti
ror
rcl
jo
or
bound
cmp
scas
cmp
aaa
pop
or
push
pop
or
stos
cmp
pop
idiv
or
out
movs
push
jmp
xor
push
mov
lock
movs
mov
mov
add
add
xor
mov
push
sbb
bound
test
sbb
mov
cld
sub
in
pop
fbstp
into
mov
jno
xchg
mov
pop
sets
mov
sbb
cmps
addr16
js
ja
mov
jbe
bound
pop
fwait
push
(bad)
xor
pop
pop
sub
inc
dec
add
add
mov
loop
adc
pop
or
sub
pop
js
scas
arpl
add
aas
mov
add
sbb
push
shr
jne
push
mov
xchg
pop
jbe
fwait
dec
ret
jp
push
aad
and
cdq
movs
ret
or
mov
jecxz
mov
add
sub
push
mov
les
push
popf
es
sub
sub
mov
enter
mov
add
stc
sar
pop
dec
repz
mov
aam
xor
xchg
lds
mov
div
rol
(bad)
mov
cli
in
pushf
fcomp
shl
fcom
stos
push
or
cmp
(bad)
cwde
(bad)
jno
ret
sbb
xchg
xor
cdq
outs
call
sahf
int
and
ds
and
loop
fwait
xchg
hlt
into
clc
in
int
das
jbe
xlat
lahf
repnz
and
int
dec
push
out
jg
xchg
jmp
sbb
cli
repz
ficomp
fnstenv
dec
int3
repz
movs
mov
mov
rcr
mov
mov
sub
push
(bad)
mov
fld
or
cmp
lock
mov
paddb
xchg
ret
xchg
iret
pop
data16
ret
xlat
mov
mov
mov
in
and
ins
xor
cld
and
inc
stc
jp
mov
mov
(bad)
xor
adc
ret
fbstp
or
popa
dec
lds
imul
pushw
(bad)
sahf
add
jmp
cmp
mov
pop
mov
or
pop
mov
push
jge
xchg
and
inc
xor
sbb
mov
sbb
rcr
out
fbld
std
outs
sbb
(bad)
push
mov
add
cmp
and
mov
add
jne
fld
adc
jbe
jp
(bad)
sub
popa
mov
cmp
(bad)
push
(bad)
pop
inc
mov
mov
and
je
in
stos
retf
xchg
sahf
cld
cmps
sbb
cmps
add
mov
retf
sub
and
adc
movs
repz
ss
cmp
kmovb
jl
jb
jmp
(bad)
dec
cli
addr16
mov
xchg
push
cmc
rcr
gs
xchg
push
div
sbb
push
out
outs
jmp
inc
(bad)
es
fs
pop
sub
test
daa
push
xor
jbe
sbb
call
mov
or
jmp
test
mov
fistp
mov
out
push
jbe
mov
pop
cmp
sahf
xor
js
movs
pop
push
enter
xor
dec
mov
jb
jmp
fcmovnb
cli
addr16
dec
pop
ret
fsub
fmul
dec
xchg
icebp
mov
pop
jp
div
mov
xchg
push
arpl
outs
imul
xor
jle
sub
ins
gs
push
jb
add
data16
je
pop
popa
jns
lods
inc
lods
rcr
retf
mov
call
and
(bad)
jmp
fidiv
sbb
add
mov
cmps
xor
add
push
repz
mov
test
std
mov
mov
jg
rcr
les
sbb
push
call
int
imul
sub
xchg
in
out
test
xchg
(bad)
ins
push
adc
xchg
int
mov
mov
imul
out
push
dec
dec
mov
mov
add
xchg
inc
arpl
inc
mov
mov
xchg
xor
bound
push
sbb
ds
adc
push
loop
aas
ja
pop
sar
(bad)
popf
add
(bad)
neg
mov
pop
mov
test
std
mov
inc
jl
or
int3
les
push
pop
and
and
or
xor
aad
fisttp
xor
in
fidivr
jnp
loopne
or
push
sub
outs
scas
pushf
vminpd
add
loope
sbb
or
xchg
pop
ins
adc
add
ins
pop
das
or
pop
xchg
outs
push
aas
and
movs
ds
jecxz
pop
dec
inc
push
xchg
cmp
sub
int
lds
scas
jmp
in
stos
(bad)
popf
lock
xor
cli
push
stos
adc
add
rcl
cmp
out
fdiv
and
idiv
outs
sub
test
clc
lds
daa
jle
int3
ja
scas
cli
or
xchg
ins
adc
(bad)
retf
jne
test
or
mov
push
arpl
pusha
xchg
imul
xchg
(bad)
in
sub
out
out
push
push
mov
xor
stc
adc
jl
call
push
mov
mov
imul
xchg
jmp
jp
loop
inc
xor
(bad)
push
aas
arpl
jb
or
pop
add
mov
xchg
mov
mov
xchg
leave
out
iret
jo
jb
pop
or
cwde
stos
lods
ja
adc
fs
(bad)
fst
stos
shl
sub
sbb
adc
dec
out
xchg
cwde
pop
mov
aad
fst
sub
int
in
push
fdivr
fdivp
mov
aam
mov
xchg
xor
pop
and
and
(bad)
push
inc
dec
rol
jle
fisub
dec
dec
hlt
sub
fxch
jmp
(bad)
mov
inc
in
mov
mov
pop
mov
in
push
popa
inc
iret
cli
mov
std
repnz
sub
inc
ds
loope
jne
fsubr
test
or
jb
dec
idiv
jnp
adc
add
add
fldenv
jmp
and
loope
push
fild
xor
jo
xor
fmul
mov
iret
jns
sub
mov
lea
xor
lods
loope
cmc
test
sbb
in
pop
mov
adc
cld
sub
adc
jbe
shl
lds
adc
mov
mov
inc
dec
add
mov
fsub
bound
enter
and
xchg
in
pushf
je
(bad)
xor
call
rcr
xchg
dec
loop
jge
aas
ins
(bad)
out
push
inc
std
fld
ins
fimul
xor
hlt
hlt
jno
mov
sub
rcr
add
cld
jle
push
push
aam
dec
jbe
mov
cmc
test
sbb
mov
xlat
sub
mov
lahf
adc
lock
popf
mov
jae
aad
add
push
in
mov
push
dec
sub
cmps
mov
arpl
loopne
les
xchg
lahf
adc
sti
mov
mov
out
push
cmps
retf
pop
sbb
loop
or
pop
adc
inc
fwait
dec
push
lods
jae
sub
vcvtpd2ps
ja
push
jmp
lods
cmp
sub
lods
ror
sti
int
sbb
lods
add
pop
mov
push
sub
xchg
into
pop
cmp
cmc
push
dec
imul
loopne
mov
fisub
and
jmp
cmp
mov
or
pop
mov
add
adc
add
inc
pop
sti
or
sbb
movs
adc
aad
cmp
jmp
daa
out
pop
in
adc
jmp
mov
pop
fsub
lds
pop
outs
push
cs
into
xor
or
jmp
mov
ret
or
stos
cmps
loop
rcr
rdtsc
cld
clc
mov
hlt
mov
sub
in
sbb
pop
sub
in
movs
leave
(bad)
mov
cwde
cmp
mov
or
push
dec
test
popf
inc
dec
mov
push
(bad)
(bad)
xor
add
(bad)
ror
adc
push
shl
ds
stos
scas
je
cs
push
pop
fstp
jo
xchg
push
sbb
icebp
sar
ins
fisubr
in
sbb
imul
mov
adc
inc
mov
xchg
or
pop
rcr
ja
out
and
js
sbb
retf
movs
mov
mov
das
mov
cmp
rcr
jge
inc
xor
scas
dec
test
push
jns
shl
or
jmp
add
fst
scas
pop
mov
mov
add
or
mov
xchg
xchg
iret
dec
pop
pop
fild
xlat
push
lahf
aam
sar
jp
pop
aad
jle
fild
mov
lea
or
cdq
push
test
cmp
hlt
jb
pop
jno
push
adc
add
pusha
aad
dec
shl
gs
jg
sub
xchg
out
jg
data16
shr
popa
cld
mov
dec
or
push
mov
xor
add
mov
or
mov
sti
mov
xor
jbe
cs
cmp
repz
push
repz
cmp
outs
pop
pop
pop
outs
pushf
mov
push
shr
pop
and
js
dec
cmp
arpl
sbb
jmp
adc
push
dec
jns
jp
out
jae
je
repnz
jp
or
push
and
push
xor
mov
pop
aad
pop
cmp
ds
mov
pop
sub
adc
mov
jb
bound
adc
push
retf
out
pop
dec
mov
repz
sbb
ins
daa
jno
iret
cmp
jl
clc
bound
or
scas
mov
in
and
ret
xchg
mov
fisttp
les
adc
dec
pop
jecxz
das
retf
dec
idiv
test
sbb
pop
repz
out
(bad)
bound
sbb
sbb
and
addr16
pop
inc
pslld
shr
or
sub
ret
xchg
popf
cwde
and
cdq
es
jg
cmp
and
xlat
xor
(bad)
push
cld
sub
inc
inc
aaa
cmp
gs
mov
lea
stc
xor
adc
mov
and
jmp
jne
cmc
ja
cmp
inc
push
in
push
fwait
sbb
xchg
stos
les
jecxz
in
aad
(bad)
mov
dec
cmp
arpl
xchg
mov
add
jbe
scas
pusha
jns
iret
sahf
ins
adc
dec
or
push
scas
jns
fist
adc
mov
cmp
retf
or
cwde
jns
mov
out
cld
sub
adc
inc
lock
mov
pop
ret
jno
add
pop
lds
xor
mov
int3
fisttp
adc
aas
imul
cmp
push
mov
loope
mov
sub
fdiv
cmp
fistp
(bad)
test
push
mov
std
jae
and
and
add
and
push
test
repz
iret
cmc
in
xor
push
sar
inc
mov
test
out
jno
mov
adc
mov
or
enter
jnp
sti
test
inc
cmp
mov
jnp
mov
or
sbb
mov
cmp
rcl
cs
shl
sbb
les
je
movs
push
mov
ins
adc
xchg
jecxz
iret
out
les
mov
dec
movs
icebp
adc
sub
fwait
jg
xor
sbb
xor
jle
fimul
xchg
adc
fs
push
add
add
add
pusha
ret
out
leave
call
mov
add
je
mov
mov
sub
shr
adc
not
loopne
js
jmp
or
in
pop
or
sbb
mov
add
and
pop
(bad)
fld
xchg
xchg
pop
sub
push
add
in
mov
push
adc
fsubr
push
mov
xchg
inc
aad
int
push
int3
pop
xor
add
and
fiadd
adc
aas
repnz
lods
push
jns
shl
and
cdq
pop
cmps
(bad)
clc
mov
ds
jmp
ds
push
lds
sbb
aaa
cmp
data16
add
inc
cmp
mov
aam
fnstsw
fisttp
xor
fscale
in
sub
nop
adc
jo
neg
fwait
or
dec
outs
ins
jmp
sbb
mov
or
push
bnd
jp
push
sub
shl
jb
add
mov
xchg
test
jnp
fs
inc
test
or
sahf
jnp
call
mov
jg
push
cmp
jb
sub
cmps
dec
int
sub
sbb
das
jg
lock
iret
popf
add
jg
cmp
pop
add
push
in
mov
mov
or
adc
jnp
mov
fld
pop
push
repz
fidiv
popf
cmp
out
sahf
hlt
ret
or
dec
add
adc
bound
sbb
into
mov
sbb
retf
push
fiadd
out
fs
sbb
int3
js
xchg
lods
push
jns
sub
lock
cdq
int
ds
int
mov
sub
cmp
mov
adc
jbe
xor
add
iret
mov
or
mov
jnp
sar
ror
or
and
mov
push
adc
sub
pop
push
cwde
xchg
jecxz
retf
out
fstp
ficomp
fwait
dec
push
mov
shr
xchg
popa
clc
xchg
lods
xor
not
mov
hlt
into
cld
in
loope
das
movs
lods
aam
mov
mov
and
mov
add
pop
repnz
pop
cmp
sti
in
cwde
jnp
imul
add
cmps
push
adc
ja
add
add
xor
jmp
add
or
mov
and
fisttp
jl
pop
bound
dec
nop
scas
mov
cli
daa
sub
aam
ds
(bad)
sti
sbb
dec
mov
xchg
adc
pop
jecxz
stc
movs
sbb
push
sbb
sar
add
sbb
ret
mov
jns
xor
shr
repz
push
das
or
jmp
cwde
inc
jo
stos
xor
loope
jg
int
jb
sbb
or
pop
vmulsd
sub
pop
dec
mov
ja
add
add
shl
stc
mov
mov
jnp
and
inc
xchg
fwait
pop
fisttp
(bad)
xchg
jmp
(bad)
out
mov
(bad)
sti
in
lahf
and
xchg
idiv
xchg
imul
imul
sbb
sub
mov
xchg
jno
dec
ins
add
in
(bad)
js
lahf
aam
xchg
push
call
outs
fisub
call
je
mov
imul
jmp
ja
loop
cmp
and
xchg
push
and
sbb
lock
sbb
push
sbb
fmul
ins
je
cmp
jge
clc
pusha
push
repnz
jg
cwde
loopne
xchg
jp
xor
cmps
test
or
ins
adc
xchg
jne
fs
rol
sbb
(bad)
aam
in
fimul
add
fadd
repz
cwde
and
rcl
adc
shr
mov
aam
jmp
cmp
in
pop
dec
fstp
(bad)
enter
sbb
sqrtps
jmp
(bad)
mov
mov
xor
stc
and
or
into
mov
push
push
dec
add
in
call
push
outs
xor
sub
iret
xchg
ins
adc
mul
jne
icebp
(bad)
cld
sub
pushf
jecxz
fwait
dec
push
mov
std
mov
xchg
test
in
sub
push
btc
hlt
inc
call
xchg
add
(bad)
pop
dec
ret
out
inc
jns
dec
rol
lahf
fbld
shl
sub
sub
push
cmc
jb
ja
cmp
adc
mov
(bad)
mov
shl
mov
clc
jnp
mov
iret
in
jmp
push
dec
add
call
add
je
sub
and
jle
call
das
int3
dec
idiv
and
clc
call
arpl
xor
sub
imul
stc
jp
sub
test
or
stos
sub
cli
ror
xor
xor
jle
cmp
call
bound
push
cmps
add
(bad)
mov
xor
(bad)
rol
mov
jb
sbb
ins
nop
adc
stos
ds
xor
(bad)
idiv
vpmulhw
push
adc
fwait
cmp
jmp
fst
stos
je
sub
je
icebp
jecxz
jbe
test
test
sub
rcl
xchg
dec
push
in
ret
and
xchg
lea
iret
xchg
cmp
push
outs
push
cwde
rcr
cmps
inc
retf
pop
or
aam
imul
retf
xchg
sahf
jmp
adc
sbb
out
jbe
bound
inc
aad
add
ret
(bad)
adc
and
mov
inc
dec
jl
clc
jg
dec
cs
(bad)
stc
pop
or
cli
mov
inc
bound
or
(bad)
out
dec
mov
clc
jbe
cmp
fidivr
xor
jle
fmulp
dec
test
mov
repnz
arpl
out
popa
jno
fild
gs
mov
lds
call
pop
dec
daa
ds
sub
add
add
ja
mov
mov
popf
stos
lea
xor
jmp
inc
fisttp
mov
(bad)
cwde
(bad)
out
iret
addr16
xor
pop
cmc
mov
das
push
sub
cli
fld
push
ins
nop
fdiv
jle
sbb
fst
cs
cmp
pop
fsub
js
out
mov
inc
push
xor
mov
mov
imul
outs
test
(bad)
cmp
or
aam
repz
mov
rcr
inc
ins
and
out
imul
pop
dec
daa
ds
(bad)
sub
arpl
scas
mov
xchg
add
ja
sti
in
push
int3
dec
(bad)
test
fnstsw
jge
xchg
sub
mov
(bad)
mov
xchg
push
dec
add
adc
sbb
push
fwait
jp
int3
fst
stos
fild
nop
out
mov
sbb
(bad)
cmp
mov
jl
jno
(bad)
fst
lea
call
push
sbb
inc
mov
dec
or
aam
xor
fidivr
and
xor
mov
xor
jle
cmp
shr
repz
mov
add
(bad)
mov
bound
cmp
add
push
in
mov
mov
or
mov
pushf
imul
into
setbe
mov
inc
add
je
ja
push
je
dec
data16
sub
jecxz
mov
dec
imul
fwait
push
ret
jp
bound
sbb
iret
mov
mov
imul
(bad)
mov
repnz
cmp
or
aam
repz
mov
(bad)
fdivp
xor
jae
xor
cli
repnz
out
jg
data16
lds
jbe
cmp
iret
mov
test
cmc
lds
retf
mov
pop
sub
sbb
fsub
xor
(bad)
xor
fdivr
jl
loopne
retf
pop
jmp
pminsw
cwde
or
(bad)
fcomp
xchg
out
lods
outs
hlt
push
add
dec
rol
push
dec
fwait
sbb
ins
push
pop
push
pop
shr
int
in
dec
pop
(bad)
jmp
or
fwait
sahf
loop
icebp
or
or
fistp
(bad)
outs
cdq
inc
(bad)
pop
fisttp
jg
push
shl
mov
dec
and
push
enter
cwde
jo
ja
addr16
ja
bound
or
xor
lock
repz
and
fimul
sbb
(bad)
mov
push
adc
jne
add
ret
fcomp
push
xor
cmp
ins
push
add
je
icebp
ds
out
xchg
cwde
pop
mov
aad
lods
xchg
scas
xchg
adc
inc
push
or
or
shr
jae
(bad)
or
push
mov
fistp
push
jl
mov
xor
call
pop
(bad)
sub
sub
mov
jbe
dec
push
mov
out
pop
mov
mov
mov
sbb
fimul
aas
loope
cmc
jmp
lods
jbe
in
push
fwait
or
sbb
stos
int3
in
outs
sbb
ins
cs
cmp
adc
cmp
sahf
ficomp
sbb
arpl
xor
ins
xor
adc
stc
jp
sti
add
dec
mov
aas
sbb
add
mov
rcl
and
xor
gs
out
sbb
push
cld
sub
and
xchg
jmp
out
mov
add
inc
pop
add
icebp
and
xor
dec
inc
jno
out
push
loop
in
push
cmp
pop
or
es
fild
add
or
ds
mov
sbb
cmp
loopne
sub
ret
out
je
and
push
and
add
xchg
adc
add
iret
add
ja
jb
push
and
adc
cmps
sbb
lock
fsub
mov
inc
dec
or
sub
adc
dec
cli
fcmovne
punpckhwd
aaa
stc
xor
pop
aas
adc
jnp
and
push
mov
sub
mov
div
std
in
lea
sti
in
push
push
out
je
das
pop
mov
or
add
out
sahf
hlt
pop
cmp
dec
pusha
add
inc
aad
in
push
hlt
cmp
or
aas
loope
mov
out
jae
inc
pslld
add
outs
or
aas
and
pusha
(bad)
mov
(bad)
cmp
gs
push
out
cwde
in
xlat
xor
shl
sub
lahf
loope
mov
popa
cdq
clc
mov
cmp
sahf
xor
js
push
or
dec
mov
enter
add
jo
not
out
inc
in
adc
idiv
xchg
sub
push
sti
stos
push
out
sbb
jne
into
(bad)
push
dec
xchg
stos
je
mov
outs
inc
call
adc
cmp
xchg
test
sub
icebp
adc
dec
das
or
aas
stos
mov
push
shl
vpxor
or
retf
cmp
push
sub
loop
cmps
cmp
lock
mov
sbb
lea
scas
addr16
nop
or
dec
movs
fidivr
ins
fisttp
jb
clc
cmc
std
outs
vcvtss2si
jecxz
int
in
push
or
fdivr
adc
sub
mov
jecxz
fisubr
sar
sub
or
cmp
add
add
ins
push
arpl
ds
retf
inc
adc
ds
in
leave
outs
xor
inc
xor
aas
dec
xchg
test
(bad)
pop
fbstp
es
mov
pop
out
cwde
in
xlat
(bad)
shl
adc
data16
mov
and
lea
adc
ds
adc
jno
mov
ins
or
cs
(bad)
sbb
cli
fwait
lods
cwde
fwait
hlt
outs
out
cmp
movs
jp
out
mov
pop
mov
jnp
loopne
sub
jl
jno
cld
fst
sbb
(bad)
(bad)
mov
sbb
retf
push
fiadd
out
repz
call
out
cwde
mov
aam
mov
pop
ds
push
xchg
popf
idiv
(bad)
jmp
stos
ror
popa
cld
mov
scas
jecxz
dec
cmp
retf
mov
mov
mov
(bad)
sub
adc
pop
jno
dec
not
out
cmp
in
mov
fwait
outs
inc
test
or
push
outs
scas
push
fild
imul
test
sbb
les
ficom
movs
xor
pusha
jns
js
xchg
outs
fs
sbb
pop
int3
js
fs
push
out
dec
jae
fist
xor
ss
(bad)
cmp
gs
jo
sbb
test
cmps
push
mov
(bad)
mov
test
retf
in
loope
test
inc
fidiv
or
pop
and
out
rcr
bound
sbb
cs
clc
in
push
or
fdivr
xchg
ja
cmp
sbb
fst
jecxz
iret
out
cmc
cmp
aas
mov
dec
push
(bad)
dec
shr
pop
popa
mov
loope
mov
clc
mov
or
std
adc
bound
dec
fisub
dec
outs
fcmovb
dec
inc
dec
mov
jb
sbb
minsd
ds
pop
adc
and
xor
dec
js
push
or
cmp
inc
mov
cld
jnp
mov
iret
(bad)
sbb
mov
in
cmps
cmp
add
cmc
sub
scas
push
fild
imul
sub
adc
mov
arpl
lea
ret
(bad)
add
pop
fisubr
xchg
js
jl
retf
hlt
into
clc
in
fstp
sbb
fsubp
enter
fidiv
ret
mov
inc
inc
pop
cmp
sub
push
mov
cld
sub
mov
in
(bad)
mov
sbb
lea
scas
addr16
test
push
mov
cld
ins
adc
pop
jno
pop
xchg
(bad)
cmc
mov
(bad)
rcr
push
push
push
call
or
out
in
xchg
jecxz
fcomip
mov
ds
push
icebp
movs
aad
out
fldcw
xor
jle
dec
xor
add
add
hlt
xor
movs
aad
pop
xchg
jns
dec
mov
dec
inc
cmp
retf
nop
ds
pop
pop
cmovbe
cs
dec
int
mov
ins
jg
retf
cmp
add
push
mov
pop
dec
test
mov
jae
adc
adc
cli
lahf
jl
psrad
push
sub
or
je
push
pop
stos
push
call
aam
out
imul
ins
imul
lods
imul
xchg
sub
adc
push
fimul
test
arpl
out
add
mov
int3
js
sbb
pop
xchg
outs
xchg
pushf
aas
and
lods
xor
adc
add
data16
shr
push
cld
cmp
popa
test
and
inc
pop
add
mov
jnp
test
movs
dec
dec
ins
fisttp
cmp
clc
cmc
ja
cmp
xchg
cli
icebp
fisttp
cmc
in
push
jno
xlat
out
fucomp
cs
mov
test
pop
adc
cli
ror
in
repnz
mov
dec
sub
loop
jle
sbb
js
out
les
out
xlat
je
fist
data16
mov
push
sahf
shl
fmul
push
mov
add
out
mov
(bad)
mov
sti
popf
je
jmp
loope
test
add
jp
pushf
inc
and
sbb
fs
mov
repnz
dec
add
movs
mov
(bad)
sti
in
push
jmp
call
sbb
jmp
mov
add
adc
adc
dec
cmp
fwait
aad
inc
xchg
hlt
int
in
ret
adc
hlt
jl
inc
ins
adc
hlt
into
or
(bad)
iret
outs
sbb
xchg
inc
arpl
sub
mov
(bad)
(bad)
push
sbb
in
lds
jbe
adc
xchg
dec
aaa
jg
lock
xchg
add
xor
add
scas
mov
lock
popa
mov
movs
jo
jg
(bad)
cmps
add
sbb
mov
adc
fcomp
xchg
out
pushf
push
lods
xchg
dec
mov
mov
mov
push
lods
jno
sti
fst
lea
ret
(bad)
add
sbb
pop
or
mov
jmp
js
fist
sub
add
ds
fild
(bad)
mov
mov
repz
pop
lds
jmp
das
jecxz
lock
sahf
jbe
add
mov
mov
pop
dec
in
fcmovu
inc
int
jmp
mov
or
xchg
push
sub
cli
in
and
out
cmp
mov
fst
dec
test
mov
mov
sub
xchg
dec
fld
fwait
xchg
jecxz
or
add
hlt
ret
stc
jp
fistp
stos
ret
(bad)
pop
ret
or
add
add
adc
pop
out
hlt
ins
inc
(bad)
hlt
add
shl
cmc
aam
ja
xchg
push
push
xor
push
mov
pop
aas
div
cmps
jnp
fst
xor
sub
cs
or
mov
xor
pop
int3
mov
xchg
out
jnp
jecxz
scas
xor
dec
ret
cmp
ins
ins
(bad)
stc
je
sub
std
in
jl
int3
mov
jns
test
fwait
push
mov
inc
pmulhw
std
ins
pop
mov
ret
ja
inc
dec
xor
out
sbb
sar
outs
popa
cld
mov
and
int3
(bad)
fld
jecxz
jbe
lea
movs
push
mov
jns
mov
bound
and
dec
jl
sub
(bad)
clc
jg
repnz
add
(bad)
xor
out
fisttp
xor
dec
retf
(bad)
pop
pop
popf
add
test
inc
push
cmp
arpl
add
in
jne
xchg
ins
arpl
test
out
add
mov
int3
push
xchg
or
popa
shl
mov
add
sub
mov
push
cs
jno
sbb
and
mov
outs
xchg
loope
test
pop
add
mov
xchg
pop
dec
xchg
mov
lock
mov
in
movs
adc
cli
in
add
dec
je
dec
out
cmp
mov
mov
sbb
repnz
dec
ret
aas
dec
fsubr
push
inc
std
fst
ret
mov
xor
or
jns
jle
and
movs
sub
xchg
xchg
iret
pop
iret
xchg
cmc
adc
and
sub
stos
xor
bound
ret
mov
sub
cmp
mov
cwde
jnp
ins
outs
(bad)
idiv
test
jmp
sar
or
out
lock
push
in
mov
cld
mov
call
dec
jl
ins
adc
outs
fld
cdq
adc
cdq
es
pushf
ins
sbb
fcom
stos
push
or
sbb
lock
jecxz
push
int3
mov
xchg
pop
mov
sub
movs
pop
mov
mov
mov
mov
jle
jno
test
and
cli
arpl
std
adc
jp
call
mov
rcr
push
jb
add
sar
shr
test
jmp
fmul
xor
sti
mov
mov
fdiv
jnp
(bad)
out
iret
push
bnd
sbb
cs
cli
addr16
test
test
xor
jne
es
add
js
jecxz
cmp
inc
not
(bad)
in
(bad)
xchg
pop
and
xor
fs
mov
jns
arpl
in
pop
xchg
(bad)
call
or
pop
inc
or
push
shl
cmp
sahf
add
ja
aaa
cmp
es
pop
jmp
mov
repz
call
popa
and
push
jge
lahf
fdecstp
and
add
xchg
scas
repz
cdq
add
daa
test
xor
ret
scas
imul
xchg
dec
ret
jp
arpl
sbb
sahf
and
rcl
adc
inc
vmread
fld
or
loop
adc
dec
xor
inc
cmp
jl
cmp
imul
dec
gs
sahf
or
test
mov
shl
sti
mov
repnz
mov
inc
xor
out
fcom
mov
xchg
iret
fisttp
out
jg
repnz
shl
arpl
repz
adc
icebp
pop
addr16
lea
and
or
out
sbb
and
mov
cmp
test
arpl
fs
inc
lds
xchg
js
aam
setb
aaa
and
or
cmps
mov
lock
xor
sub
pop
and
jmp
and
add
cmp
xor
pop
into
test
daa
and
enter
fistp
adc
loopne
pop
clc
mov
sub
add
je
mov
mov
shr
imul
bound
or
push
shr
push
idiv
jbe
fidivr
push
mov
pslld
add
mov
(bad)
push
mov
dec
jle
push
ja
cmp
call
pop
lds
mov
sbb
aad
test
mov
adc
mov
xor
and
fisttp
ss
cmc
mov
es
sub
lock
push
fwait
or
fcom
adc
(bad)
lods
es
idiv
pop
hlt
leave
inc
mov
push
lods
dec
pop
arpl
sbb
jbe
dec
sbb
fiadd
adc
pop
repnz
add
sub
fistp
aaa
test
or
cmp
sub
push
push
sub
sub
scas
in
lock
lock
mov
jge
sti
mov
mov
fdiv
jnp
(bad)
push
bnd
inc
repnz
jb
clc
xchg
xor
adc
push
call
or
fldcw
je
(bad)
loope
div
stc
movs
mov
out
inc
mov
(bad)
pop
or
dec
mov
js
xor
adc
adc
sahf
dec
int3
mov
jmp
ds
jnp
sub
or
rcl
loop
cmp
jne
dec
jle
xor
lea
scas
addr16
test
add
add
add
xor
scas
add
fisubr
loop
mov
pushf
repz
sub
ror
cmp
sbb
cld
sbb
(bad)
fs
xchg
pop
xchg
xchg
add
ins
fisub
sar
push
push
or
(bad)
cmps
fimul
inc
test
adc
dec
or
ss
sub
dec
xor
imul
enter
leave
inc
rcr
in
aas
cmp
cmp
inc
bound
xchg
xor
and
sub
aam
pushf
inc
mov
add
out
add
out
fnstsw
mov
or
adc
fcomp
ror
les
sbb
jle
dec
test
es
pushf
sub
pusha
popa
xor
rcr
pop
or
cmp
push
ins
hlt
inc
call
add
aas
jmp
or
ins
imul
pop
lds
mov
sbb
aad
test
mov
adc
mov
ss
and
fisttp
xor
clc
cmc
mov
es
sub
mov
fcom
adc
data16
es
idiv
pop
hlt
popa
inc
mov
push
lods
dec
pop
arpl
sbb
jbe
dec
sbb
fiadd
adc
pop
repnz
add
sub
fistp
aaa
adc
int
dec
or
cmp
das
imul
pop
(bad)
sub
sub
pop
in
aas
cmp
jp
sahf
ss
add
xor
add
pop
mov
and
mov
(bad)
push
(bad)
stc
enter
(bad)
lds
add
inc
push
mov
push
push
adc
arpl
xchg
adc
gs
cwde
xchg
jecxz
iret
out
cmc
cmp
test
in
push
cmp
arpl
sub
mov
jmp
add
fs
jae
cld
and
xchg
sbb
fistp
mov
mov
inc
in
jmp
shl
enter
adc
mul
cmp
ja
pop
mov
popf
mov
mov
test
dec
test
mov
add
jge
cmps
ss
jl
xlat
xchg
aaa
mov
push
in
jbe
retf
fcom
ds
jecxz
pop
sbb
and
jge
icebp
dec
cmp
clc
adc
ret
pop
dec
imul
inc
xchg
test
jne
stos
jno
fiadd
scas
fwait
jecxz
dec
repnz
add
cmc
xchg
xchg
sahf
ds
xchg
inc
inc
dec
xor
call
daa
rcr
sub
ror
xor
(bad)
ja
dec
mov
popf
into
sbb
inc
adc
jnp
push
ret
cdq
mov
ins
je
ret
mov
stos
idiv
std
in
fwait
mov
pusha
stos
push
fwait
clc
dec
dec
add
add
add
add
xchg
sbb
add
cmp
mov
(bad)
mov
test
cmp
xor
jns
div
inc
sbb
cwde
in
lods
jb
das
inc
or
pusha
jns
adc
fcmovu
push
inc
dec
inc
add
adc
in
mov
add
and
ja
add
icebp
ja
cmp
pop
sti
jecxz
lea
dec
in
enter
add
jo
ss
std
in
cmps
cmp
pop
or
cmps
add
out
aas
inc
les
jecxz
cmp
loopne
addr16
out
inc
nop
retf
ins
ficom
xor
cmp
or
dec
ins
ins
ror
cli
inc
pushf
push
dec
sub
pusha
jns
push
rcl
lds
dec
inc
xor
retf
repnz
daa
jmp
xor
out
(bad)
(bad)
popf
add
es
xor
dec
popa
pop
mov
jae
and
fcmovnb
icebp
(bad)
jo
imul
jbe
cwde
adc
mov
jnp
fcom
mov
out
and
ja
icebp
dec
jge
aas
xor
movs
sbb
and
push
and
std
sahf
cmps
lock
retf
dec
fiadd
inc
int3
dec
mov
cli
sub
jp
push
enter
int
jg
mov
aad
sub
ds
mov
mov
sub
cmp
ins
jle
enter
in
in
pop
or
cdq
push
jo
fiadd
push
lock
and
adc
cmp
jmp
xchg
aaa
adc
or
addr16
daa
in
push
repnz
fsin
pop
ret
dec
jge
aas
push
stos
out
push
(bad)
in
and
jl
xlat
jp
sbb
inc
out
jbe
fdivp
jl
inc
ins
adc
arpl
test
cli
int3
xor
add
aam
mov
push
test
dec
xor
ja
cmp
sahf
in
sbb
popa
cld
out
mov
aas
lock
inc
retf
xlat
frstor
scas
mov
and
mov
int3
jle
iret
jo
push
div
cmc
std
jo
(bad)
pop
aas
stos
mov
fwait
or
or
adc
out
push
adc
jge
icebp
lea
and
gs
sbb
ins
and
shr
movs
mov
jne
shl
fidiv
push
mov
inc
wbinvd
(bad)
cmp
jp
imul
call
mov
mov
xor
clc
sub
cmp
pop
lds
cmc
pop
xchg
cmps
adc
jbe
or
dec
and
call
cwde
dec
(bad)
cld
mov
add
mov
pop
mov
sbb
in
scas
shl
repz
ss
adc
movs
int3
cs
or
fwait
jmp
push
sbb
sbb
gs
arpl
(bad)
cmp
dec
pop
fiadd
pop
jg
inc
pmulhw
jns
push
fistp
in
sub
dec
retf
inc
stos
jbe
sbb
in
jno
xchg
and
rcl
mov
retf
aaa
lock
jle
mov
xor
add
mov
sub
and
fisttp
cs
cmc
mov
es
sub
cli
in
push
adc
arpl
mov
stos
fild
cdq
out
es
bound
dec
idiv
mov
out
push
mov
movs
icebp
xchg
add
sbb
or
ins
loope
pop
xchg
xchg
push
test
ss
inc
(bad)
adc
js
sbb
call
cdq
fimul
inc
dec
xor
gs
sbb
addr16
out
(bad)
data16
sub
lahf
loope
push
mov
bound
dec
retf
push
repz
mov
les
or
and
dec
pop
(bad)
sub
fucomip
push
jmp
aam
not
dec
pop
fldcw
jecxz
dec
mov
aam
test
sbb
cmp
and
data16
popf
aad
nop
push
fidivr
xchg
sub
pslld
push
aam
out
push
js
ffreep
adc
es
inc
dec
xor
out
sahf
push
cs
addr16
imul
(bad)
retf
mov
and
loop
lock
jle
pop
push
lea
sti
in
mov
sub
adc
fdiv
ins
push
jns
loopne
dec
jl
jb
std
outs
fld
retf
adc
cmp
push
jmp
jecxz
ds
sub
mov
cmp
clc
inc
push
icebp
adc
sbb
hlt
jg
outs
xchg
mul
movs
jne
imul
fcom
lock
ror
leave
inc
xlat
(bad)
pop
enter
cdq
cmp
ret
add
loopne
inc
jb
push
dec
ds
shr
mov
jmp
loopne
dec
xor
pop
add
push
in
cmc
mov
adc
inc
dec
sub
cmps
mov
data16
xor
ja
cmp
jns
adc
mov
cdq
fmul
shl
sbb
dec
mov
sub
mov
dec
jp
and
(bad)
mov
mov
push
jle
jno
stc
jp
sub
sbb
push
aam
ins
push
inc
loope
adc
mov
jno
jg
cmp
push
sub
mov
adc
dec
or
and
ins
retf
aad
add
push
in
hlt
mov
push
cwde
mov
call
adc
add
movs
cmps
cmp
xor
addr16
cmp
ds
push
dec
push
jp
dec
sbb
dec
test
inc
ret
(bad)
pushf
cmp
(bad)
cmp
and
mov
out
pop
dec
dec
(bad)
cli
xor
rcr
pop
lods
test
outs
jmp
cmp
dec
call
push
(bad)
pop
cwde
adc
shl
lea
jp
sbb
xor
jle
stos
repz
outs
mov
ror
jl
ins
or
mov
rcr
in
push
push
call
or
out
cld
cs
push
adc
test
push
sub
out
aad
mov
popa
xor
xor
adc
and
xchg
adc
sti
dec
pslld
cld
ret
sbb
pop
(bad)
xchg
int
cmp
jle
iret
cmps
mov
sub
sub
cmc
xchg
jbe
jbe
stc
add
loope
scas
cmp
jmp
ins
add
mov
(bad)
ror
ins
iret
gs
sti
mov
idiv
std
in
sub
nop
adc
out
adc
out
outs
retf
fcom
push
push
mov
imul
xor
test
fs
cmp
jmp
popa
xor
push
cdq
xor
jno
sub
ins
adc
pop
repnz
mov
xchg
and
rcr
arpl
cmp
ds
sbb
xchg
popa
cld
inc
sbb
and
mov
pop
add
jmp
ins
sub
mov
ror
jl
clc
dec
cli
repz
(bad)
paddsw
jae
repz
(bad)
das
out
add
jb
cld
pcmpeqw
sub
jle
pop
xchg
push
jmp
popa
xor
xchg
mov
rol
test
jmp
iret
in
rcr
(bad)
jmp
fidivr
test
fist
adc
daa
ds
pop
adc
and
xor
dec
jp
test
mov
lea
dec
cmp
addr16
pop
pop
add
adc
jmp
mov
adc
fs
jns
adc
not
jae
mov
jbe
dec
dec
inc
pop
dec
push
mov
ret
ins
fisub
retf
mov
sahf
(bad)
cmp
and
adc
pop
push
mov
add
jno
imul
nop
(bad)
(bad)
push
xor
xor
ja
cmp
jae
sbb
sbb
xchg
mov
aaa
jg
lock
mov
inc
pop
jb
mov
test
mov
xchg
iret
jo
jmp
push
sub
cli
in
and
out
stos
xchg
pop
int3
xchg
out
in
call
out
cmps
cmp
ficomp
and
inc
add
mov
sbb
xor
jle
fimul
repz
push
mov
cmp
push
dec
and
pusha
jns
push
shl
push
jmp
dec
call
add
gs
mov
shr
popa
cld
adc
or
aaa
cmp
mov
push
mov
stos
repz
pusha
scas
mov
sbb
pop
call
fs
and
shr
push
outs
xor
push
or
outs
ins
push
mov
sbb
jns
mov
jae
jecxz
push
stc
rcr
ins
push
jmp
popa
xor
push
popf
xor
jno
nop
adc
adc
pop
repnz
add
pusha
repz
enter
cdq
int
push
dec
dec
xor
cld
xor
dec
ds
ds
sub
adc
jbe
cmps
(bad)
popf
add
and
xor
dec
outs
inc
mov
jae
and
(bad)
fxch
dec
jl
clc
jg
repnz
shl
popa
sti
add
dec
enter
int3
out
lods
outs
sbb
aas
out
mov
in
push
cmp
push
ins
push
jmp
popa
xor
and
cld
xchg
les
jns
aas
inc
ret
adc
not
fld
aad
lahf
xchg
clc
sahf
aas
stos
ss
imul
mov
gs
pop
aas
cmp
and
das
pop
lahf
adc
lock
mov
(bad)
sti
mov
mov
movs
adc
fstp
inc
mov
dec
fisttp
or
adc
dec
in
mov
push
outs
xor
or
icebp
clc
jno
jecxz
and
jge
sub
lock
test
pop
mov
add
ja
jns
mov
or
mov
push
lahf
test
test
imul
mov
in
ficom
add
xchg
cld
cmps
dec
adc
ja
(bad)
sub
jmp
enter
mov
sub
sar
mov
test
add
iret
cli
mov
std
in
inc
cmp
push
sbb
cdq
mov
adc
adc
mov
(bad)
test
sbb
push
out
jmp
xor
jle
dec
jns
mov
shr
repz
mov
add
cld
ret
sub
pop
dec
jl
or
clc
mov
push
(bad)
mov
mov
sti
inc
(bad)
shr
jbe
je
adc
and
(bad)
jge
push
ficomp
jl
mov
repz
fst
movs
xor
(bad)
inc
iret
cli
mov
std
bnd
sub
cwde
mov
dec
add
ds
xor
loop
push
repnz
push
sbb
push
ins
call
in
add
pop
loope
in
dec
fiadd
xchg
adc
sub
or
sub
xchg
cdq
int
out
andn
jmp
ds
xlat
(bad)
shl
adc
mov
call
add
inc
cli
pop
stos
adc
sbb
sub
jmp
mov
jo
out
or
sbb
jmp
cwde
in
mov
fs
mov
bound
shl
imul
aas
push
mov
icebp
inc
std
fstp
cs
aad
inc
rcl
mov
sbb
shl
fwait
dec
fiadd
imul
minps
add
aas
aaa
add
(bad)
(bad)
vcomisd
dec
ds
ror
cld
pop
and
jmp
sub
bound
cmp
xor
pop
mov
mov
jmp
mov
call
dec
ss
lock
std
in
mov
or
xchg
add
daa
xchg
mov
xchg
lods
call
mov
pop
sbb
test
xchg
sbb
(bad)
mov
sub
imul
cmp
xor
jae
push
les
cmc
mov
sbb
not
aas
and
adc
or
xor
sbb
push
inc
ds
imul
lahf
adc
lock
xchg
add
xor
pop
adc
jnp
and
inc
xchg
push
xor
mov
test
jl
clc
jg
repnz
repnz
push
fwait
xchg
fisttp
mov
imul
out
mov
sbb
fldcw
and
loope
or
xchg
xchg
adc
adc
sbb
add
add
pusha
xor
xlat
aas
and
in
xchg
xor
add
ja
cmp
out
call
vmovaps
repz
adc
jbe
jl
call
stc
mov
pop
or
pushf
inc
test
or
and
pop
iret
cli
mov
std
xchg
xchg
push
mov
ins
adc
fs
dec
das
pop
mov
sub
xchg
jecxz
scas
inc
repnz
pop
hlt
hlt
or
ret
outs
push
jmp
popa
xor
jno
dec
or
mov
arpl
imul
vmread
int3
repnz
sbb
iret
pop
and
jno
dec
retf
vpandn
mov
cwde
jns
push
das
mov
scas
jmp
clc
(bad)
mov
mov
jns
in
pop
pop
sub
inc
dec
adc
(bad)
out
inc
lahf
pop
ins
mov
cmc
push
xchg
add
push
xchg
sbb
or
inc
add
push
ror
les
jbe
scas
jge
dec
ret
sub
in
out
mov
fcom
sbb
sbb
ret
mov
inc
adc
cld
in
call
jns
dec
shl
or
cmp
xchg
jle
sbb
(bad)
fsubr
popa
imul
(bad)
ja
dec
mov
popf
mov
loope
inc
pop
jb
mov
mov
push
sbb
jl
es
out
iret
jo
(bad)
test
sub
nop
adc
jo
neg
fwait
or
dec
cs
jmp
sbb
mov
or
push
mov
lods
ins
rol
aad
nop
push
aad
loope
push
int
push
test
out
jmp
daa
or
aam
mov
repz
and
cdq
xchg
inc
inc
dec
xor
cmp
dec
je
in
(bad)
xchg
jmp
push
adc
jle
(bad)
mov
fld
xor
adc
test
and
lods
mov
ins
int3
icebp
mov
jo
ss
std
repnz
or
sbb
in
push
mov
loope
add
xchg
icebp
inc
jp
jecxz
jb
inc
idiv
and
out
test
out
push
arpl
fldcw
and
loope
sbb
sub
test
fwait
jcxz
bound
cmc
test
fsubr
mov
jg
dec
push
data16
jg
sbb
sahf
cld
cmps
scas
add
xor
arpl
add
stc
jb
xchg
test
or
js
test
movs
adc
ins
fstp
or
xchg
out
in
cs
pop
and
repz
add
adc
arpl
mov
push
das
aaa
xor
xchg
sbb
xchg
fcmovne
aas
push
mov
ret
adc
call
(bad)
sbb
scas
not
(bad)
cs
cmp
jle
jno
mov
(bad)
sub
or
push
test
fistp
(bad)
mov
(bad)
cmp
loope
cmc
mov
arpl
addr16
adc
enter
jg
lock
sbb
sti
jb
mov
adc
jnp
and
inc
xchg
pop
pop
fisttp
jl
out
dec
mov
lahf
add
or
out
add
mov
sub
sbb
fcomip
mov
mov
jecxz
js
rol
enter
rol
(bad)
add
pop
ficom
inc
and
xchg
xchg
(bad)
cmp
or
aam
push
dec
popa
shl
(bad)
(bad)
mov
(bad)
cmp
gs
xor
sbb
popa
jbe
dec
add
aaa
cmp
xrelease
mov
movs
sti
mov
inc
ins
imul
ja
out
sbb
imul
shl
cmp
or
mov
ds
ins
fcomp
xchg
out
mov
sbb
jns
dec
push
adc
jecxz
stc
movs
daa
popa
out
div
xlat
in
sub
leave
cmps
movs
jne
loope
call
dec
jnp
cmp
inc
cmp
repnz
pop
sbb
arpl
pop
dec
fldenv
dec
outs
fiadd
dec
inc
lds
or
jecxz
pop
inc
addr16
pop
push
or
jmp
cmp
adc
jbe
xor
xor
repz
xchg
mov
fst
(bad)
nop
jae
fmul
and
clc
add
adc
jmp
mov
xchg
xchg
je
push
fcomp
add
add
xchg
mov
cmp
push
adc
imul
out
(bad)
pushf
aad
nop
(bad)
popa
mov
loope
or
fld
test
retf
or
adc
das
or
nop
and
fisub
xor
cmp
repnz
pop
ror
jae
cld
or
sbb
jp
sahf
dec
stos
add
and
pop
dec
inc
mov
jecxz
and
fisttp
pop
out
and
in
inc
mov
jo
add
sub
sbb
(bad)
mov
pop
retf
js
rol
clc
mov
mov
xor
mov
cmp
out
test
test
repnz
adc
push
and
es
inc
dec
xor
call
dec
(bad)
shr
test
cmp
and
add
ss
mov
mov
test
sbb
pushf
jne
out
push
cmc
ja
cmp
addr16
xor
xchg
scas
gs
bound
push
and
cmp
sbb
lods
push
(bad)
test
mov
ins
and
shl
data16
and
pop
cdq
out
fwait
or
mov
mov
adc
cmp
jo
btr
(bad)
cmp
loope
push
pop
arpl
in
dec
dec
mov
popa
imul
(bad)
ja
dec
mov
popf
mov
adc
pop
jb
mov
mov
and
es
out
iret
jo
(bad)
idiv
test
cmp
(bad)
push
fwait
or
dec
pop
xchg
test
lods
inc
cwde
xchg
jecxz
sub
dec
idiv
pop
hlt
movs
cmp
inc
and
xor
cmp
fs
ins
ins
es
pslld
inc
mov
cmc
cld
les
out
mov
rcr
cmp
dec
mov
imul
sahf
cld
dec
sbb
and
add
es
xor
dec
cmp
repz
and
fcmovnb
loope
jo
jl
or
ja
cmp
sub
adc
inc
cmc
in
fwait
sbb
mov
psrld
imul
push
xchg
adc
movs
(bad)
rcl
sahf
inc
out
jno
rcr
cdq
pop
xor
or
fcom
mov
iret
or
sar
iret
mov
cpuid
ds
test
retf
mov
(bad)
add
sub
sub
mov
mov
xchg
jb
sbb
mov
repz
call
sbb
adc
aaa
mov
sbb
scas
mov
push
cli
(bad)
jmp
fwait
sbb
outs
push
pushf
pop
xchg
sbb
xchg
data16
xlat
mov
scas
fcmovnb
inc
add
add
jl
rol
into
movs
std
in
jl
xor
test
fwait
push
inc
inc
andnps
xchg
xchg
(bad)
(bad)
pop
jo
stos
mov
dec
inc
pop
js
pop
cmp
fsin
inc
out
sbb
sahf
or
rcr
dec
and
and
imul
je
jg
loope
mov
push
dec
daa
and
and
sbb
loopne
add
adc
push
sub
cli
stc
call
push
adc
xlat
out
es
lea
jmp
dec
movs
icebp
push
push
arpl
(bad)
or
pop
mov
or
xchg
sbb
popa
stos
dec
cli
int3
mov
mov
pop
enter
cdq
pop
adc
clc
mov
and
pop
fisub
pop
lds
popa
jbe
dec
push
xlat
(bad)
sti
jb
aaa
jo
dec
ret
pop
add
sbb
adc
dec
movs
mov
and
sar
or
sbb
shr
pop
cli
adc
push
daa
test
mov
in
dec
push
adc
jge
icebp
jecxz
mov
test
in
sbb
outs
call
sahf
int
mov
xchg
xor
mov
stc
or
adc
ds
test
int
aaa
and
lods
push
(bad)
xlat
out
je
in
(bad)
xchg
jmp
pop
adc
jle
(bad)
sbb
or
mov
xor
push
or
mov
mov
mov
fisttp
fistp
cmc
mov
es
sub
jmp
rcl
stos
dec
not
inc
pop
fldcw
jp
icebp
dec
div
push
mov
sub
gs
arpl
into
pusha
popa
xor
sbb
dec
ins
fcomi
inc
cli
lock
xchg
js
(bad)
cmp
xchg
shl
dec
mov
dec
pop
push
cmp
retf
das
ds
mov
out
mov
jno
aaa
add
adc
sti
jb
sbb
pop
add
xor
sbb
sub
out
cdq
ja
jo
or
push
adc
nop
adc
repz
mov
or
popa
popf
xchg
fst
inc
idiv
pop
cwde
xchg
icebp
dec
cmp
and
nop
es
push
add
mov
jbe
fiadd
jbe
hlt
inc
inc
in
int3
js
xor
cmc
push
call
xchg
int
dec
int3
mov
jmp
ds
xlat
xor
cmp
cld
sub
pop
sar
ja
jp
sahf
inc
cli
add
dec
mov
in
sub
ret
jae
and
outs
jnp
lock
iret
jo
jl
psrad
ins
and
fcomp
ror
les
jecxz
sub
dec
imul
ds
out
push
stc
aad
out
inc
inc
dec
sbb
push
mov
int
pop
fiadd
adc
and
repnz
add
add
add
jmp
fwait
int
dec
or
cmp
add
dec
test
outs
(bad)
shr
popa
jbe
dec
dec
xchg
enter
add
and
ins
retf
aad
add
push
in
leave
mov
push
cwde
mov
and
and
(bad)
test
sub
sub
add
or
push
out
inc
or
xchg
out
and
fbld
cmp
xchg
sbb
movs
(bad)
shr
(bad)
cs
xor
in
popf
mov
jle
test
add
fwait
xchg
pop
repz
je
lahf
(bad)
xlat
push
in
loop
addr16
rcr
pop
popa
sbb
enter
shr
into
imul
add
and
adc
pop
adc
add
aaa
fdivr
adc
dec
jl
sbb
repnz
in
jmp
repnz
sub
ins
adc
mov
pop
jnp
push
dec
test
sbb
lods
sahf
hlt
adc
mov
test
sbb
bound
cwde
aad
movs
jnp
or
adc
jno
mov
out
jae
xor
or
add
sub
fistp
data16
mov
mov
or
jl
cld
out
rcl
push
sub
mov
cld
repz
mov
jns
jb
push
pop
cli
in
pop
fs
or
outs
ins
(bad)
call
cmc
push
dec
cmp
dec
cwde
adc
jbe
in
fwait
sbb
pop
int3
xchg
out
mov
inc
retf
(bad)
icebp
push
clc
xor
test
gs
movs
repz
ins
sbb
adc
push
sub
mov
test
loop
mov
mov
daa
or
inc
lahf
out
popf
jl
ffreep
rol
cmp
dec
mov
imul
push
das
mov
adc
jbe
dec
jp
pop
lea
add
ss
call
(bad)
repz
add
fsubr
sub
(bad)
(bad)
cs
mov
inc
adc
rol
jl
fcom
and
pop
jl
out
push
adc
jge
icebp
xor
adc
gs
arpl
xchg
pop
adc
and
push
mov
jns
les
out
sbb
pslld
add
jmp
cdq
xchg
inc
inc
dec
xor
punpckhwd
dec
je
in
(bad)
jp
sub
adc
sbb
(bad)
mov
mov
mov
jae
and
mov
out
iret
cmp
loopne
cmc
ja
cmp
inc
loope
push
fwait
sbb
fcom
stos
xchg
sbb
xchg
out
sub
jecxz
cmp
mov
ret
gs
arpl
xor
cmp
push
test
inc
sbb
xor
add
or
pusha
jns
sub
stos
mov
jg
push
cmp
jb
add
jno
ds
pop
shl
popa
cld
sub
push
cmc
push
sti
jp
aaa
jo
dec
ret
mov
dec
mov
adc
and
or
adc
mov
cmc
ja
cmp
cwde
adc
push
pop
push
jmp
cmps
adc
sub
xchg
xchg
out
es
jne
push
pop
lds
test
shl
dec
push
pusha
xor
xchg
jge
jno
pop
fdivp
mov
fmul
jnp
or
jne
sub
out
aam
sahf
ds
cmps
xor
cdq
push
call
clc
xor
mov
ror
sub
push
jbe
and
and
adc
stos
test
loopne
jg
pushf
inc
sbb
push
ror
jo
pop
mov
cmc
jmp
addr16
pop
mov
and
fisttp
ret
fcomp
icebp
out
and
cmp
idiv
or
shl
dec
push
pusha
sub
adc
or
dec
out
jae
xor
mov
xor
pop
push
std
and
ficomp
inc
dec
call
mov
mov
sti
push
stos
shr
les
enter
out
loopne
popf
shl
mov
cwde
push
xchg
mov
and
inc
(bad)
mov
fdiv
xor
push
cs
(bad)
cli
in
pushf
push
pop
or
fist
fld
xchg
inc
retf
xchg
test
popa
sbb
cmp
cs
scas
call
sahf
mov
push
hlt
jmp
in
pop
sub
or
mov
jns
adc
sub
sbb
(bad)
adc
jo
fiadd
jbe
aaa
mov
and
jmp
push
dec
cdq
movlps
pop
dec
cli
pusha
lock
int3
test
and
or
sbb
mov
adc
or
jmp
pusha
out
push
mov
and
fcmovnb
push
das
stos
push
xor
add
out
imul
cmp
and
lahf
mov
mov
jmp
popa
xor
ds
les
or
icebp
iret
push
push
mov
mov
lea
xchg
and
jnp
adc
inc
sti
mov
outs
or
jecxz
dec
mov
sti
mov
jbe
dec
fmul
jp
sti
jl
inc
(bad)
retf
dec
add
cdq
mov
test
jns
dec
icebp
mov
je
mov
(bad)
mov
push
cmp
adc
xchg
out
sbb
push
pop
addr16
in
fist
xchg
popf
jecxz
sub
add
adc
repz
ins
cmp
in
xchg
hlt
int
in
cmp
adc
xchg
inc
adc
fwait
add
and
arpl
popa
add
adc
dec
dec
shl
int3
mov
dec
out
retf
stos
imul
lea
xchg
or
add
jo
sahf
dec
ret
repz
mov
mov
hlt
leave
mov
mov
out
pop
dec
jl
call
loop
outs
cmps
and
pop
push
in
pushf
push
inc
test
in
pushf
dec
jne
add
aas
into
loope
push
lds
out
pop
arpl
xor
jle
stos
mov
ret
inc
vmread
(bad)
lahf
shr
push
enter
int
cmp
arpl
push
iret
sbb
adc
mov
cmps
scas
add
sub
aaa
stc
xor
aad
adc
add
cli
mov
daa
and
pop
add
jo
(bad)
or
push
cmps
outs
add
push
cli
in
push
dec
xor
dec
data16
pusha
and
jecxz
mov
dec
jge
aas
cmp
out
push
mov
mov
fisttp
add
or
push
test
(bad)
fwait
pop
xor
(bad)
aas
in
ror
mov
ja
cdq
fistp
and
int
mov
pop
dec
inc
mov
in
mov
in
xlat
xor
add
sub
mov
cld
add
add
mov
xor
jb
xchg
into
push
pop
push
sysenter
pop
and
jnp
jo
mov
ins
test
in
fcmovnb
cwde
sahf
stos
sbb
lahf
push
fwait
js
aad
out
push
and
jle
call
btr
add
stos
sbb
icebp
dec
mov
in
push
jmp
popa
mov
loope
imul
test
push
out
or
retf
jle
lahf
(bad)
xlat
push
int
and
jae
dec
int3
dec
and
ror
pop
(bad)
pop
push
dec
cmp
(bad)
sahf
sub
mov
outs
adc
aad
adc
add
xor
dec
jl
sbb
xchg
or
or
sbb
jmp
addr16
repz
repz
stos
movs
and
cmp
pop
sub
xchg
iret
xor
dec
cmp
cmp
arpl
ret
(bad)
jle
(bad)
ret
arpl
lfs
xchg
imul
shl
(bad)
retf
js
stc
adc
adc
fbstp
es
ss
xor
out
call
dec
xlat
ds
xchg
sub
adc
sbb
(bad)
mov
push
pop
stc
xor
stos
add
fldenv
mov
inc
cmp
xchg
fild
loopne
or
outs
fld
jmp
in
pushf
push
adc
mov
fcom
jl
mov
idiv
or
xor
xchg
jle
pop
xor
ins
mov
add
push
cdq
push
call
(bad)
ror
mov
ja
pushf
fistp
sbb
xor
mov
cmp
js
cmp
jle
cmp
addr16
cmps
stos
imul
inc
mov
adc
retf
retf
mov
or
sbb
movs
pop
jl
fcomi
ins
enter
ret
xchg
jle
mov
mov
xor
mov
bound
fsub
sar
push
cmp
ds
cmp
mov
jmp
popf
add
pop
fdivp
mov
retf
popa
mov
aad
or
cmps
fidivr
fbstp
xor
int3
cs
mov
mov
in
xlat
shl
adc
f2xm1
dec
jle
int
lea
mov
in
inc
pop
dec
ficom
pop
dec
dec
icebp
mov
je
fs
jo
(bad)
loopne
add
call
repz
push
repz
es
sub
mov
loope
es
bound
daa
mov
ret
jp
adc
sbb
or
arpl
or
inc
test
or
addr16
call
pushf
int
cmp
dec
call
sbb
fucomp
repnz
jbe
sub
xchg
lea
add
je
adc
in
popa
sbb
adc
mov
int3
repnz
ror
add
sub
xchg
xchg
fs
push
add
sahf
icebp
ja
xchg
sbb
pop
jnp
pusha
(bad)
mov
sbb
test
xchg
adc
nop
mov
imul
or
mov
push
(bad)
sar
stos
xor
dec
mov
jb
push
ds
lds
jbe
pop
pop
adc
dec
add
(bad)
pop
pop
call
add
mov
pop
mov
cwde
sar
(bad)
jno
jl
inc
repnz
rcl
cmps
shl
pusha
dec
jo
out
push
adc
arpl
lahf
adc
xchg
pop
and
icebp
dec
div
sbb
outs
call
popa
mov
loope
jmp
or
test
outs
push
pop
lea
cmp
xchg
xor
fistp
sbb
mov
sbb
push
xchg
mov
mov
xchg
adc
fist
lock
test
inc
aad
add
cwde
mov
push
or
(bad)
sub
or
mov
cs
in
push
fwait
mov
stos
test
out
imul
sbb
je
ret
push
out
mov
xchg
adc
sbb
and
push
iret
push
lods
mov
shl
xor
mov
sub
data16
jnp
xor
retf
sti
sbb
xchg
ret
cmps
mov
mov
xor
(bad)
rol
mov
mov
sub
bound
mov
cli
stc
and
fs
sbb
loopne
xchg
jmp
test
je
add
dec
data16
loop
imul
imul
xchg
ficomp
js
mov
ins
push
jmp
pusha
xor
or
mov
or
scas
fwait
hlt
into
cld
in
mov
lahf
popa
jns
jo
jne
cdq
int
out
(bad)
cmp
gs
cmp
addr16
daa
clc
shr
popa
push
sub
push
jecxz
cmp
jae
jbe
mov
xor
pop
dec
push
mov
clc
fcomp
mov
fistp
dec
fisttp
or
cmp
pop
or
xchg
push
call
scas
mov
fldcw
and
mov
pop
add
xlat
push
je
mov
sahf
inc
jle
sbb
push
sbb
sbb
and
jl
dec
ins
adc
jecxz
jge
add
add
iret
jns
cwde
ds
mov
mov
mov
cmp
ficomp
adc
scas
in
sub
and
cli
sbb
cmp
add
outs
mov
stc
xor
loop
mov
dec
ins
js
inc
dec
ja
out
call
clc
xchg
add
sbb
dec
dec
and
stc
nop
out
push
aam
add
dec
idiv
adc
mov
mov
sub
fwait
and
add
test
dec
test
mov
or
or
ret
test
pop
and
pop
dec
jne
std
jmp
mov
xor
imul
adc
sub
outs
fbstp
cmp
lock
call
retf
mov
dec
mov
popa
mov
pop
jno
iret
cmp
jge
clc
loop
xchg
cs
sbb
(bad)
push
adc
arpl
aaa
dec
popa
dec
dec
es
bound
imul
scas
fninit
out
cmp
inc
pop
adc
inc
xchg
hlt
in
add
pop
fdivp
mov
out
add
repnz
mov
ja
call
cdq
inc
(bad)
pop
adc
jg
lds
retf
cmps
mov
movs
dec
jecxz
shl
test
cmp
iret
dec
bound
enter
fwait
inc
aad
add
lock
and
jns
adc
jmp
nop
scas
cmp
jnp
or
rcr
jp
push
je
dec
data16
mov
test
xlat
cmp
jl
jno
scas
pushf
push
or
mul
out
ror
sbb
push
test
rol
push
mov
hlt
ret
ret
jp
fild
jno
cdq
int
pop
xor
jg
cmp
out
sahf
push
test
addr16
imul
(bad)
retf
mov
daa
cs
aas
cmp
dec
lds
(bad)
pop
jmp
mov
sti
in
push
int3
dec
fild
or
jne
dec
test
pop
pusha
add
(bad)
ror
inc
fs
jl
fdivr
sbb
lock
into
(bad)
or
adc
ins
fimul
add
jbe
clc
inc
jmp
fiadd
adc
add
add
add
cmc
xchg
popf
sahf
ds
xchg
inc
inc
dec
xor
adc
je
pop
lds
jmp
xchg
xor
mov
repz
and
fcmovnb
loope
jo
jl
or
ja
cmp
inc
cmc
in
fwait
sbb
fcom
stos
popa
psrld
out
imul
ret
push
xchg
adc
movs
(bad)
shr
push
mov
mov
jns
jno
pushf
imul
retf
xchg
cmc
cld
in
fidiv
daa
rcr
pop
into
fdivr
xor
adc
inc
ds
pop
dec
xlat
sub
(bad)
cmp
xchg
sbb
or
xchg
add
sbb
mov
mov
into
mov
retf
enter
(bad)
inc
fdiv
cmp
(bad)
repnz
cs
cmp
pop
or
adc
rcl
stos
fild
imul
jmp
push
movs
inc
cmp
ins
movs
pop
mov
and
stos
imul
and
retf
iret
mov
outs
popf
mov
xchg
sub
rcr
jle
pop
lods
adc
jns
fcom
call
adc
lock
jbe
lea
pop
pop
mov
repz
lahf
repnz
sbb
lods
mov
iret
cmp
loopne
loop
xchg
cs
sub
cli
in
pushf
push
xor
jmp
test
mov
ret
jp
in
in
push
xchg
int
outs
cdq
inc
fidivr
and
fild
lea
mov
adc
shl
int3
mov
jmp
shl
jb
(bad)
popa
jbe
dec
jp
aaa
cmp
and
js
imul
mov
test
mov
(bad)
inc
dec
jl
ins
push
jns
imul
ja
push
inc
sbb
pop
xchg
je
push
adc
lahf
out
pop
fimul
cmp
pop
hlt
ret
jg
ret
out
hlt
scas
mov
mov
ror
fcmove
mov
or
vmread
fcmovne
arpl
add
xchg
iret
jle
push
cmp
out
(bad)
jbe
gs
cmp
fisub
das
adc
enter
jp
sahf
mov
inc
aaa
aad
add
push
in
mov
mov
fisttp
not
out
mov
in
push
cmps
fwait
adc
sti
in
retf
ins
fwait
or
(bad)
and
add
sub
xlat
sbb
(bad)
push
mov
sbb
and
add
cmp
pop
sub
sbb
lahf
mov
sbb
xchg
mov
hlt
into
cld
in
inc
add
fiadd
mov
pop
dec
inc
mov
arpl
fst
and
sub
pop
jbe
pop
push
xchg
add
mov
retf
mov
adc
pop
dec
outs
loope
inc
daa
jge
cmps
adc
push
xor
scas
inc
inc
or
adc
pop
(bad)
xor
fs
or
push
cmps
xor
xchg
or
xchg
sbb
ret
dec
ret
xlat
push
sbb
sbb
es
pop
fucom
lods
stos
stos
lods
mov
jle
adc
xchg
les
jae
dec
xchg
int
mov
inc
sbb
jne
cmp
add
inc
adc
out
mov
inc
and
jmp
in
dec
rol
sti
jle
loop
or
push
dec
adc
pusha
inc
adc
jl
stos
pop
add
mov
in
or
movs
test
sbb
mov
(bad)
xlat
je
sub
repnz
sbb
jbe
fisubr
and
idiv
fmul
mov
ret
rol
sbb
iret
lds
in
jne
lds
sub
xchg
test
mov
imul
jmp
sahf
gs
xor
ja
out
mov
jg
scas
push
pop
rcl
in
in
out
pop
das
push
mov
add
out
or
cmc
jns
sti
push
ror
add
mov
cwde
mov
or
rcr
adc
loopne
or
jb
cld
mov
xchg
sub
push
adc
sbb
pushf
(bad)
jno
ret
sbb
out
test
fcom
ins
mov
adc
lds
hlt
call
repz
ins
pop
add
movs
sbb
aaa
lock
or
rcl
or
mov
push
push
div
sub
out
aam
xlat
mov
sub
mov
stc
xor
pusha
mov
xchg
into
push
pop
and
scas
shl
xor
jb
push
mov
ror
sar
mov
cli
stc
test
out
shl
idiv
outs
xchg
pop
and
icebp
cmps
adc
stc
inc
std
mov
aad
cs
xor
scas
loope
and
into
sti
dec
mov
inc
fbstp
sub
and
inc
push
(bad)
mov
jne
add
bound
cwde
sahf
out
jg
sahf
cld
cmps
pop
add
aaa
cmp
iret
ss
arpl
jb
jnp
mov
or
fidiv
xlat
pop
jp
jl
ret
scas
and
jb
pop
std
call
sub
in
inc
add
jbe
ret
loopne
movs
and
cmp
pop
xor
lea
sbb
mov
xchg
inc
je
in
(bad)
imul
pushf
movs
jne
imul
or
call
fisttp
cmc
cld
jnp
stos
jbe
shl
mov
mov
inc
aad
jle
mul
mov
sub
cmp
stos
bound
das
sar
(bad)
popf
das
loope
inc
stos
inc
retf
mov
ins
add
or
into
bnd
inc
addr16
mov
pop
or
adc
loop
stos
mov
movs
clc
dec
dec
dec
bound
shl
and
je
icebp
dec
jge
xchg
mov
jmp
(bad)
sub
jmp
adc
jle
aad
adc
ins
adc
dec
push
jae
adc
repz
add
rcr
fmul
mov
jg
cmp
imul
outs
cld
cmps
scas
add
cmp
jp
mov
adc
xor
aad
add
mov
xor
ins
push
cdq
stc
push
or
test
cs
(bad)
mov
mov
adc
dec
xchg
xor
jnp
loopne
pop
test
fwait
sub
aad
push
xchg
xor
div
cli
adc
in
inc
repz
fwait
loopne
sbb
mov
inc
mov
dec
aad
ror
out
dec
mov
gs
imul
(bad)
popa
jbe
dec
lods
mov
cmp
enter
xor
jmp
or
mov
lea
scas
mov
cmp
pop
pop
add
add
movs
push
sub
xchg
in
push
outs
xor
jle
adc
inc
fdiv
dec
out
push
mov
call
mov
and
dec
jle
icebp
adc
repz
push
adc
lock
add
pushf
push
outs
ins
push
rcr
aas
cmp
ret
sbb
test
ins
mov
cwde
sbb
es
mov
cmps
jmp
cmp
bound
inc
or
push
repnz
sub
popf
xor
adc
jno
mov
mov
pop
push
loop
in
push
pop
and
and
fwait
(bad)
out
stos
push
cmp
jne
sbb
popf
fadd
ret
adc
hlt
adc
dec
cmp
pushf
push
cwde
(bad)
xchg
jmp
je
xchg
add
jns
xchg
jno
out
fwait
mov
sbb
(bad)
cmp
lods
adc
pop
and
ss
addr16
xor
scas
dec
imul
pop
lds
xlat
sahf
add
add
mov
(bad)
xor
addr16
jb
out
dec
mov
in
push
into
jmp
add
pop
lds
inc
xchg
test
movs
repz
mov
out
xchg
popa
aas
cmp
sbb
rcr
mov
push
mov
xchg
sbb
icebp
mov
sbb
retf
xor
sbb
xchg
jle
std
xchg
icebp
test
addr16
inc
test
adc
jp
or
pop
add
ds
pushf
ficomp
jo
call
mov
pop
mov
mov
loope
pop
aaa
add
add
push
fwait
xlat
lea
sahf
mov
inc
mov
jo
(bad)
pop
(bad)
jo
or
in
xchg
addr16
xor
aaa
cwde
fs
sbb
outs
ins
add
out
addr16
xlat
pop
je
nop
or
inc
sahf
movs
in
jl
out
out
mov
jl
xchg
jmp
xchg
mov
push
add
js
mov
aam
inc
dec
scas
fistp
ss
jb
inc
xor
dec
push
and
daa
and
(bad)
jmp
cmp
and
add
or
mov
mov
jnp
aad
add
(bad)
fild
iret
cli
mov
std
in
outs
cmp
pop
or
and
ret
fcom
and
pop
and
out
es
(bad)
xlat
(bad)
dec
idiv
out
hlt
sbb
ret
adc
je
nop
sub
and
popf
cld
or
or
scas
fwait
hlt
into
cmp
out
xchg
(bad)
cmp
cwde
inc
push
enter
pop
in
xlat
clc
mov
cmc
ins
sub
mov
jg
aam
add
pop
lahf
shl
jl
jbe
lds
fild
cwde
cld
jecxz
xchg
mov
or
ins
fild
loopne
dec
repnz
cmp
pop
cwde
adc
pop
std
in
push
cmp
dec
sub
mov
(bad)
out
push
cdq
xor
icebp
dec
or
xlat
push
xchg
push
in
std
fstp
xchg
pushf
mov
int
sbb
(bad)
test
fiadd
xchg
inc
cli
lock
daa
outs
pop
jo
aam
mov
(bad)
sahf
ds
inc
ficomp
xor
jg
inc
scas
imul
mov
cld
sub
add
ja
mov
mov
popf
stos
lea
xor
xor
xlat
into
cmp
and
and
jne
loopne
std
add
shr
repz
fist
adc
sbb
rcl
(bad)
cs
mov
ret
pop
ret
push
mov
out
xor
movs
cs
mov
imul
out
jae
aaa
pslld
repz
call
loop
xor
fcmovne
jg
sar
inc
adc
dec
dec
or
pop
int3
das
xor
ja
pop
mov
popf
mov
jae
push
push
add
and
jl
ror
clc
xchg
test
jl
cmp
bound
lods
cmps
and
push
rol
ret
fadd
leave
dec
idiv
fldcw
pop
ret
dec
jge
aas
sub
sbb
ins
push
int3
cmp
popf
xchg
in
sub
jno
scas
adc
adc
les
repnz
xchg
cmc
xchg
pop
inc
pop
fbstp
rcr
retf
mov
repnz
mov
sbb
cld
sub
pop
jecxz
cmp
popa
jno
mov
xor
(bad)
mov
push
in
cmps
mov
xor
cmp
(bad)
out
iret
addr16
out
add
add
pop
mov
sbb
pop
or
adc
out
mov
aad
push
cmp
pop
jo
neg
cmp
mov
ins
lds
push
call
ret
mov
es
gs
inc
sbb
xchg
xor
jmp
scas
inc
loopne
cld
stc
mov
xor
cmps
push
(bad)
shr
into
jmp
and
std
cdq
lock
jp
popf
mov
outs
xor
adc
into
inc
and
fimul
sbb
retf
hlt
push
sub
sti
in
push
mov
cmp
adc
pushf
or
xchg
icebp
or
push
mov
dec
cmp
sub
jmp
popa
xor
jns
dec
or
mov
loop
movs
aas
pslld
repz
xor
push
shl
mov
jns
iret
fild
sbb
das
cdq
pop
lds
jmp
mov
cmp
test
int3
hlt
(bad)
popf
adc
push
xor
lods
adc
push
jo
in
or
(bad)
rcr
or
(bad)
call
les
adc
daa
pop
ret
(bad)
out
call
xor
pop
pop
cwde
lods
icebp
dec
cmp
je
in
push
push
ret
sbb
jbe
fidiv
inc
jo
cli
cmp
dec
cmc
cld
sub
ret
ja
ror
mov
mov
repnz
push
push
push
dec
cs
mov
xor
mov
inc
or
into
test
out
mov
ret
ds
in
and
leave
sub
mov
cmp
outs
ins
mul
jecxz
fidivr
jnp
loopne
sub
ret
pushf
push
jmp
popa
mov
loope
sbb
mov
adc
xor
jg
js
or
pop
imul
aas
and
adc
es
dec
xor
or
in
out
dec
mov
sub
cmps
mov
push
out
mov
popf
movs
mov
sub
outs
cwde
in
sub
lods
int
not
lock
das
mov
addr16
jmp
addr16
add
movs
mov
std
test
push
outs
xor
jge
mov
xchg
adc
lods
cmps
xchg
iret
das
fs
jecxz
xor
es
ins
mov
je
shr
xor
mov
or
xchg
fs
inc
test
adc
sti
das
or
jecxz
call
data16
retf
inc
lds
push
data16
sbb
shl
scas
shr
data16
ins
jb
jbe
daa
jge
mov
sub
shr
aam
fs
addr16
pop
add
outs
rol
lfence
mov
in
pushf
je
jle
fcom
stos
push
packssdw
pop
cdq
imul
jecxz
sbb
out
je
sbb
push
clc
mov
mov
in
out
jae
shl
or
lea
xor
mov
inc
dec
xor
gs
pop
push
loopne
pop
mov
sub
jecxz
stos
sbb
cmp
add
mov
or
ss
cdq
(bad)
mov
pusha
jo
(bad)
dec
dec
add
movs
cmps
cmp
adc
mov
scas
push
dec
out
das
sbb
xchg
sbb
cmp
loopne
sub
ret
push
out
inc
adc
add
pop
fidiv
gs
jg
repz
(bad)
jmp
out
ja
fsub
cmp
ds
push
mov
cld
sub
sbb
pop
aaa
add
add
ret
sbb
add
jbe
mov
pop
dec
jge
xchg
and
xchg
(bad)
jno
jl
outs
push
add
rol
push
jmp
fwait
cli
jb
fs
jl
out
cmp
xchg
jp
out
mov
pop
mov
jnp
loopne
sub
jl
jno
iret
fst
lea
neg
int
out
ret
xchg
sub
arpl
cld
inc
pslld
cld
aam
jp
push
enter
int
jg
mov
aad
sub
ds
sbb
mov
adc
dec
or
push
inc
(bad)
sti
jb
push
inc
cmp
adc
test
xor
sti
jp
push
xor
jecxz
pop
pop
bound
jnp
scas
sub
add
loopne
fcom
cmp
xchg
jp
jno
mov
outs
repnz
push
cmp
arpl
fldcw
xor
sbb
mov
inc
cmp
(bad)
xor
pop
sbb
imul
stos
fist
mov
jg
dec
push
push
jecxz
mov
das
(bad)
adc
cwde
scas
mov
or
jb
jle
(bad)
mov
inc
ss
in
fnstsw
and
cmp
jg
clc
bound
nop
scas
mov
ins
add
daa
out
aam
xor
shl
imul
jnp
icebp
mov
push
out
cmps
je
xchg
shr
psubw
and
add
xchg
test
mov
js
jl
xlat
pop
and
sbb
cmp
xor
pop
xchg
jle
xchg
out
sub
je
cmp
inc
into
bound
loopne
outs
js
(bad)
push
xchg
cmp
adc
frstpm(287
cdq
(bad)
lds
jo
(bad)
fild
outs
fld
fwait
adc
jle
in
fwait
or
aam
mov
dec
xchg
out
sar
cld
cmp
jp
(bad)
xlat
add
(bad)
sbb
xchg
in
mov
add
add
xor
ins
xor
je
mov
(bad)
fimul
inc
lds
xchg
fiadd
push
(bad)
or
je
shl
inc
arpl
dec
arpl
popa
imul
(bad)
loopne
outs
js
(bad)
push
xchg
cmp
add
push
int3
xor
(bad)
gs
iret
cli
mov
std
repnz
(bad)
sub
cli
addr16
imul
fsub
xchg
and
outs
in
fwait
sbb
push
fldenv
cmp
pop
hlt
sub
lds
(bad)
cmp
and
rcl
out
retf
hlt
into
clc
in
xchg
js
sbb
pushf
adc
mov
retf
lds
(bad)
cmp
sbb
sahf
or
shl
dec
and
or
imul
mov
stos
adc
add
fs
cmp
xchg
push
pop
jns
sti
cmp
mov
sbb
fwait
xchg
push
out
fadd
adc
xchg
test
pop
sub
dec
jp
es
push
ins
call
(bad)
jbe
cwde
test
imul
cmp
(bad)
cwde
call
ins
dec
lahf
xchg
mov
push
inc
loope
and
cmc
ror
xlat
xor
push
cld
sub
hlt
push
cmp
dec
mov
xor
xor
adc
icebp
arpl
xor
or
jo
fst
lds
add
inc
push
mov
ds
adc
arpl
push
adc
sbb
(bad)
push
call
ret
xlat
xlat
hlt
xchg
mov
mov
cmp
popf
xchg
in
sub
cmp
sub
out
inc
sbb
repnz
pop
arpl
sub
ror
pop
je
mov
or
shl
out
in
data16
shr
movs
popa
cld
pop
jecxz
jne
(bad)
addr16
addr16
adc
bound
inc
aad
add
lods
mov
and
inc
xchg
adc
fisttp
(bad)
xchg
jmp
(bad)
out
scas
mov
in
xchg
call
push
and
test
dec
jp
xchg
je
movs
dec
mov
mov
mov
push
lods
sbb
hlt
mov
outs
xchg
mul
imul
dec
out
fs
sbb
clc
sub
or
mov
and
shl
jmp
ds
add
xor
jbe
sub
mov
sqrtps
mov
mov
ss
pop
mov
fld
jne
(bad)
jle
adc
pop
mov
push
push
in
mov
jmp
fcomp
add
out
and
out
mov
in
add
sbb
lods
pushf
aad
pop
xchg
xor
xchg
jno
push
jmp
leave
aam
jp
add
out
not
imul
add
add
cld
jle
push
in
mov
mov
lds
dec
(bad)
jmp
sub
loop
enter
lock
mov
ja
mov
stc
aad
or
xor
dec
popa
out
inc
aaa
dec
rcl
test
sbb
pop
xchg
in
pushf
je
mov
push
inc
cmp
out
jle
jmp
(bad)
sub
mov
es
sub
sub
mov
aam
int
cmp
int3
sub
xchg
mov
aam
in
pop
fbstp
mov
add
adc
dec
adc
pop
or
sub
dec
or
push
out
jle
xor
jmp
jmp
jnp
rol
lock
(bad)
adc
clc
cmc
std
outs
lds
ja
(bad)
call
pushf
ins
sbb
out
jecxz
out
imul
cmp
test
fwait
jecxz
mov
ins
push
arpl
(bad)
mov
cs
inc
sbb
xchg
sub
sbb
jne
add
js
lahf
cld
inc
lahf
jns
sub
lea
jecxz
mov
and
dec
aas
addr16
sub
mov
and
jecxz
cmp
jecxz
mov
pushf
add
xor
xchg
pop
pushf
xor
and
xor
fs
ret
out
or
in
sub
mov
arpl
lods
jp
fimul
(bad)
in
out
outs
loop
cmp
loope
pushf
push
xchg
adc
movs
(bad)
rcl
call
popa
xor
xchg
jns
jg
loopne
test
stc
jb
mov
js
fisttp
mov
xchg
call
jle
dec
mov
inc
mov
inc
adc
ror
mov
cmps
popa
cld
sub
out
cli
cmps
mov
outs
add
shr
xchg
iret
pop
add
sub
mov
lds
in
mov
xor
cmp
sahf
ret
fdivp
in
push
cmps
jg
es
in
push
xor
(bad)
xor
fsubr
jae
mov
pop
mov
xor
cmp
test
jp
mov
mov
cmp
or
cmp
inc
adc
lock
or
sub
and
cdq
int
mov
mov
aad
dec
add
xchg
imul
outs
in
pop
push
push
jb
sub
mov
jbe
imul
retf
sub
or
pop
gs
pushf
mov
xor
repz
std
sbb
sub
data16
xor
(bad)
push
fwait
or
cmp
push
cmp
xchg
jp
xchg
popf
fldcw
jne
out
push
fs
mov
popf
aad
nop
call
inc
push
jge
fisubr
adc
retf
iret
ror
jg
jo
or
sub
jg
mov
into
dec
inc
dec
call
es
add
add
adc
inc
shr
outs
sbb
out
pop
add
mov
ja
and
lods
pop
or
fcmove
test
fnstsw
(bad)
xchg
sar
jl
mov
cmc
in
and
sbb
or
xchg
xor
out
ds
cmp
jb
sbb
pop
cmp
adc
push
icebp
inc
std
fstp
fimul
popa
xor
push
test
push
imul
fs
push
repnz
add
ja
dec
and
xor
cdq
inc
fimul
pop
cmp
jbe
sbb
in
add
sti
and
cmp
loop
cmp
jmp
iret
or
pop
shr
das
mov
xor
pop
fnclex
cdq
adc
push
inc
push
adc
arpl
stos
adc
int
shl
pop
or
in
int3
xchg
sbb
dec
ds
cwde
sub
in
jecxz
and
mov
sti
or
ret
add
outs
ficom
and
inc
movs
mov
gs
out
ds
(bad)
retf
xchg
sahf
mov
cmps
mov
daa
and
xor
lea
mov
rcl
inc
xor
iret
mov
loop
outs
cs
fldenv
adc
in
mov
mov
jae
outs
sbb
es
bound
aaa
aam
adc
lea
sahf
and
popa
sbb
adc
xchg
les
cmp
jp
xchg
out
sbb
clc
mov
cmp
iret
in
push
dec
shl
shl
jmp
rcl
and
cmps
mov
fadd
cld
add
mov
mov
std
mov
inc
mov
mov
iret
cli
or
pop
or
in
data16
fwait
pop
or
cmp
ret
fdiv
cmp
pop
xor
pusha
or
push
sbb
hlt
es
pushf
cmp
dec
cmp
and
mov
inc
test
add
repz
inc
mov
and
adc
call
mov
sar
cmps
jmp
cmp
aaa
add
fmul
test
mov
and
adc
ja
out
repnz
cld
mov
int
jp
add
(bad)
cmp
jo
add
mov
das
and
xchg
cld
outs
sbb
push
rcl
popa
ror
rol
push
sbb
test
xchg
cmp
xor
and
(bad)
fwait
adc
rcl
push
cli
xor
test
push
cmp
ins
outs
mov
xor
xchg
cld
out
repnz
push
mov
stos
cs
adc
fadd
icebp
mul
add
mov
inc
cmp
(bad)
inc
dec
jl
cli
inc
xor
fisttp
mov
sbb
push
jo
sbb
xor
mov
xchg
sbb
inc
loopne
or
push
push
pop
mov
cmp
pushf
aad
imul
std
in
xchg
and
dec
ret
arpl
repz
or
cmc
add
xchg
int
and
pop
xor
test
mov
xor
ss
out
inc
in
mov
add
sub
mov
popf
lea
inc
cmp
out
sbb
sub
sub
fdiv
inc
(bad)
repnz
push
repnz
imul
scas
dec
repz
arpl
ds
cmp
pop
clc
mov
sbb
cmp
not
xchg
sbb
adc
mov
call
xchg
sahf
int
out
mov
or
sub
add
cwde
or
fdivr
cmp
aam
jns
int3
sub
data16
inc
movs
inc
imul
mov
mov
sub
push
loop
enter
addr16
inc
jmp
and
mov
mov
mov
cmps
dec
dec
jnp
mov
imul
inc
loop
scas
shl
arpl
or
ret
xor
pusha
sbb
mov
idiv
push
(bad)
or
int3
aas
dec
mov
dec
ret
ins
ficom
inc
test
(bad)
shl
hlt
sbb
sub
test
fwait
push
repz
cmp
or
aam
repz
mov
(bad)
jo
xor
jae
xor
cli
sbb
loop
retf
cwde
div
call
cmps
adc
ror
cmp
stc
arpl
(bad)
xor
push
or
mov
rcl
push
inc
(bad)
movs
call
(bad)
jno
xor
mov
and
or
mov
(bad)
das
imul
mov
inc
adc
sbb
mov
inc
pop
ins
xchg
aad
push
in
icebp
les
neg
aad
popf
daa
cli
hlt
pop
adc
lods
adc
pop
and
aas
cmp
std
cmp
mov
mov
shr
dec
icebp
pop
push
pop
lds
adc
popa
scas
jmp
mov
mov
stos
xchg
inc
xor
out
fdiv
ret
(bad)
into
mov
fbstp
and
out
mov
pop
sti
cld
push
(bad)
jl
xchg
push
sub
jns
test
add
mov
cmp
inc
dec
enter
in
xchg
sahf
xchg
mov
or
jnp
out
pop
xor
ds
rcl
cld
sub
jnp
aas
push
jnp
pop
into
xchg
mov
cmp
adc
push
fadd
mov
mov
push
jne
out
mov
arpl
(bad)
popf
jb
cmp
lahf
mov
mov
mov
ins
jl
jnp
sbb
imul
add
add
add
cmp
mov
in
pushf
je
jnp
out
stos
push
or
xchg
inc
sbb
adc
mov
sbb
test
pop
adc
shl
mov
loope
adc
mov
sub
int
(bad)
ror
mov
ja
dec
and
pop
cli
push
mov
shl
out
rcr
xchg
imul
pusha
popa
scas
arpl
loope
jle
jae
xlat
int3
lahf
lods
pop
repz
mov
into
mov
fs
jo
(bad)
loopne
arpl
rol
pop
adc
jp
repnz
fcomp
es
sbb
mov
jne
xchg
aam
xlat
test
in
cmp
push
sub
out
aad
and
popa
xor
test
jle
rol
xchg
dec
mov
js
mov
inc
lahf
jns
int3
aas
stos
(bad)
cdq
pop
cmps
(bad)
clc
mov
(bad)
into
cmp
adc
cmp
sub
cvttps2pi
pusha
inc
pusha
(bad)
mov
out
mov
dec
in
pop
or
and
dec
jl
adc
adc
or
pop
pop
xchg
adc
cli
in
loop
cld
btr
out
push
cmps
mov
outs
push
pushf
pop
xchg
sbb
dec
dec
jnp
cmp
xchg
and
ret
out
pop
test
cs
movs
in
in
jl
hlt
call
dec
ins
fwait
jnp
into
clc
in
push
js
or
enter
cdq
int
outs
inc
(bad)
mov
jo
in
(bad)
pop
dec
daa
ds
fs
adc
pop
lock
jle
cmp
mov
sbb
mov
(bad)
sub
sbb
dec
push
outs
fld
add
or
out
add
cdq
je
fcomp
xchg
out
lods
(bad)
hlt
mov
mov
mov
ret
jp
imul
sbb
loop
and
loope
add
ins
xchg
test
fwait
jnp
mov
repnz
stc
inc
pusha
jns
push
sbb
ret
bswap
xor
and
cmp
gs
pop
sub
in
pop
lds
jbe
mov
retf
mov
test
test
mov
push
repz
add
fdiv
cwde
in
xchg
and
mov
fadd
add
shr
hlt
add
mov
test
iret
ds
popf
sub
jne
icebp
(bad)
lock
stos
hlt
mov
dec
cmp
jne
in
xchg
test
lea
popf
pop
push
test
sbb
push
mov
repnz
xchg
aam
setb
aaa
and
mov
dec
inc
cmp
jo
lods
repnz
xlat
out
je
in
(bad)
test
cmp
mov
cmp
icebp
xor
mov
mov
ds
pop
stos
mov
(bad)
xchg
fdivr
jl
mov
inc
shl
aad
ret
xchg
or
aam
out
push
iret
in
(bad)
add
es
idiv
mov
dec
movs
icebp
jmp
imul
loope
or
xchg
xchg
ins
sti
adc
sbb
add
add
pusha
xor
xlat
aas
and
adc
es
inc
dec
xor
imul
pop
jg
aas
gs
sub
adc
fimul
cmp
inc
jmp
cmp
sub
adc
mov
dec
mov
not
out
test
cmps
fwait
adc
sti
in
in
fwait
or
(bad)
and
add
dec
mov
sbb
div
mov
dec
xor
out
js
shl
jg
fst
outs
adc
mov
fs
ret
mov
mov
int3
or
sar
pop
(bad)
aam
(bad)
jg
shl
push
mov
xor
or
pop
fdivp
in
pop
shr
nop
push
cmp
xor
dec
xor
(bad)
mov
nop
push
dec
int
jo
aad
adc
add
and
sbb
std
mov
dec
rcr
inc
repnz
shr
repz
or
call
rcr
call
sub
cmp
es
and
sub
adc
add
sub
jae
imul
add
movs
sbb
pop
and
xor
lds
inc
cwd
inc
jbe
pop
rep
mov
cs
push
das
dec
stc
xchg
lea
add
repz
cmp
sub
push
cmp
into
inc
lock
pop
rcr
pop
pop
test
cmc
sbb
(bad)
push
pop
sub
mov
sbb
xor
pop
ficomp
dec
xchg
push
hlt
push
xchg
mov
and
push
fldcw
mov
icebp
shl
sbb
(bad)
loope
in
fimul
test
fwait
push
or
clts
cmp
jbe
cld
sub
sbb
mov
rcl
es
dec
xor
fild
adc
jbe
dec
data16
cmp
int3
sti
rol
(bad)
das
mulps
lea
ror
push
cdq
lock
cs
jl
ins
push
jns
jnp
dec
jl
jb
std
outs
fld
push
adc
js
push
push
repz
ds
cmps
frstor
mov
lea
ret
pop
dec
jge
xchg
xor
arpl
fdiv
xchg
fst
adc
not
push
add
mov
sub
retf
dec
pop
mov
add
icebp
cmp
movs
xchg
mov
shl
std
jno
push
adc
popf
jo
ss
or
pop
retf
pop
sbb
push
movs
inc
xchg
ins
(bad)
jmp
sbb
jg
xchg
xchg
stos
push
sbb
mov
push
adc
sub
outs
or
out
ror
add
mov
or
xlat
or
shl
dec
push
push
pushf
int
in
jmp
js
jp
pushf
jp
mov
cld
or
loope
sub
xchg
sub
cdq
int
lahf
mov
leave
pop
out
mov
rcl
data16
rcr
jecxz
loop
shl
mov
sti
inc
sahf
stos
call
out
pop
or
and
lods
(bad)
mov
sub
jo
jo
or
cmc
ja
mov
out
push
cli
xlat
fwait
or
aad
out
push
and
inc
bound
ins
stc
imul
retf
aas
fnstcw
mov
mov
mov
xor
or
arpl
setno
hlt
into
clc
in
ins
js
jl
xlat
pusha
repz
mov
jmp
xor
push
pop
xor
pop
sub
fwait
xchg
out
mov
shl
lahf
adc
lock
pop
retf
mov
jns
mov
mov
inc
mov
iret
cli
mov
push
cwde
adc
mov
adc
out
xchg
push
iret
stos
push
out
data16
sar
aad
icebp
dec
jge
mov
dec
aad
out
push
jne
in
xchg
sbb
fcompp
les
jns
jp
out
icebp
or
hlt
cmp
aam
outs
jmp
mov
mov
xchg
mov
mov
sub
jmp
pop
adc
mov
mov
js
push
retf
mov
or
fnsave
mov
test
cmc
jl
xchg
and
stos
xor
push
jo
fidivr
push
inc
ret
ret
push
jecxz
popa
add
sti
call
dec
cmps
sub
dec
mov
mov
and
loope
hlt
dec
jnp
cmovbe
jecxz
or
sub
scas
and
fistp
lea
retf
mov
mov
retf
pop
fwait
mov
dec
addr16
subps
push
sahf
movs
xor
je
adc
in
adc
sbb
sub
cmp
jp
out
iret
cli
mov
mul
movs
push
cmp
push
pop
or
adc
ret
fcom
and
cmp
sbb
push
int3
mov
dec
xchg
mov
sbb
pop
shl
movs
loop
neg
inc
sub
pop
fdivrp
aas
jle
lods
out
out
cli
inc
test
or
jne
xor
mov
into
adc
mov
aas
xchg
mov
xchg
mov
push
jecxz
rcl
loop
popf
shl
or
jb
cmovo
mov
inc
push
add
adc
nop
jae
clc
es
mov
pop
or
sbb
fisub
adc
sti
mov
les
sbb
jecxz
bound
push
dec
test
xor
bound
scas
adc
xchg
and
fld
adc
jns
jp
(bad)
add
xchg
add
add
push
add
aam
mov
mov
mov
out
(bad)
(bad)
leave
das
jbe
cwde
cmp
(bad)
cmps
xchg
jbe
scas
dec
jmp
stc
sub
cmp
lea
or
jmp
mov
(bad)
pop
mov
inc
cli
push
xchg
xchg
pop
sbb
push
fwait
js
int3
sbb
mov
ins
or
jecxz
bound
pop
or
xor
test
fnstenv
dec
lods
jmp
jmp
mov
call
js
int3
repnz
iret
dec
pusha
jns
loopne
xor
ds
xor
movs
sub
call
xlat
fisub
or
cwde
das
stos
jmp
(bad)
inc
movhps
inc
xlat
fadd
fld
cmp
ret
test
dec
not
out
in
in
movs
adc
out
mov
adc
daa
call
adc
jecxz
bound
outs
dec
idiv
mov
cmp
mov
push
ins
outs
inc
and
sbb
mov
mov
push
or
push
adc
mov
ja
xchg
jns
cld
dec
ffreep
adc
es
dec
xor
call
div
test
xor
cmp
cmp
xor
mov
xlat
dec
push
test
inc
les
add
and
shl
neg
push
std
in
rol
addr16
scas
cdq
add
lea
mov
fisttp
dec
jp
ins
sar
(bad)
cmp
cmp
sub
or
test
inc
ins
push
arpl
and
xchg
les
fimul
jp
inc
pslld
adc
ret
jns
stos
test
mov
cmp
ss
aad
xchg
out
jecxz
(bad)
mov
std
repz
ret
inc
sub
int3
test
or
retf
cmp
pop
jmp
pop
jnp
aad
es
(bad)
lods
xor
pop
(bad)
mov
pop
out
ret
(bad)
in
daa
xchg
xchg
rcr
pushf
jo
(bad)
xor
xchg
pand
mov
in
xchg
(bad)
mov
test
dec
xchg
inc
lahf
sub
cmp
push
ins
inc
sbb
xchg
xor
popa
ret
sbb
jbe
fnsave
push
sahf
xchg
jmp
in
pop
jo
stos
ss
cdq
dec
inc
dec
mov
jb
mov
outs
push
das
sub
pop
sub
loop
cmp
bound
stc
mov
mov
dec
sbb
inc
mov
call
inc
inc
dec
not
clc
jg
repnz
push
sub
or
pushf
nop
sbb
in
repnz
or
jb
or
and
out
test
xchg
cmp
(bad)
cmp
and
push
adc
scas
les
daa
xchg
retf
std
sub
sar
xchg
dec
and
adc
lds
adc
out
inc
(bad)
into
cld
cmps
scas
add
lahf
cmp
shufps
popf
mov
movs
cmp
pop
jo
dec
(bad)
js
mov
test
movs
imul
outs
inc
jne
pop
or
jbe
cmp
addr16
mov
js
fwait
xchg
push
add
xchg
xchg
push
int
and
jge
aas
or
std
repnz
pushf
sub
mov
mov
arpl
jne
call
lock
loop
outs
jg
jp
jecxz
jnp
or
test
jp
icebp
and
pop
dec
mov
xlat
push
sbb
popf
daa
add
jmp
xor
pop
mov
cli
inc
adc
xlat
dec
movs
mov
stos
sbb
shl
iret
jo
inc
push
cmc
ja
cmp
cwde
adc
xor
sub
add
test
pop
add
dec
bound
dec
test
movs
sbb
out
sub
add
mov
in
aad
hlt
xor
or
test
lahf
adc
add
add
pop
aam
shr
xor
les
push
cs
rcr
retf
mov
icebp
adc
out
(bad)
push
rol
jb
jae
push
adc
sub
adc
dec
dec
mov
sbb
sbb
jl
mov
push
cmps
outs
mov
jmp
js
xchg
sub
(bad)
pop
fldenv
xor
aaa
test
sbb
cwde
jbe
sbb
out
xchg
int
pop
adc
xchg
lahf
ss
in
jle
vmread
mov
sub
js
popa
shl
outs
fiadd
inc
aam
jmp
popa
push
push
mov
add
loop
cli
mov
or
outs
xor
sti
push
pop
or
pop
adc
sbb
inc
sbb
sbb
loopne
inc
addr16
out
pop
cmc
ja
cmp
addr16
xor
mov
cmp
daa
scas
(bad)
jl
repnz
and
jl
push
sbb
test
push
xchg
scas
xchg
adc
add
loopne
dec
arpl
jae
mov
push
iret
in
lds
repz
jo
mov
out
scas
ret
mov
inc
sub
adc
sti
shl
and
dec
es
shl
mov
retf
retf
test
dec
icebp
les
add
call
pop
or
pop
test
repz
xlat
dec
and
adc
sbb
test
sbb
inc
jae
or
mov
add
fisttp
xor
mov
mov
adc
out
adc
jo
cli
inc
jb
mov
(bad)
inc
call
(bad)
int
mov
test
movs
cmp
mov
adc
aaa
int3
dec
cld
or
enter
inc
icebp
lea
bts
xor
xchg
jnp
sub
movs
jo
ins
fld
dec
stc
dec
mov
dec
mov
sbb
xchg
mov
jno
push
mov
jge
out
and
test
cmps
fisttp
fstp
das
xchg
lock
cmp
fst
jmp
jo
nop
shl
cli
jb
mov
arpl
(bad)
jmp
dec
add
xchg
or
shl
jbe
jo
inc
dec
inc
lds
fistp
cmp
pop
fild
sub
cli
cmc
ins
aas
ja
cmp
mov
pop
lock
cld
add
mov
enter
or
push
xchg
sahf
jne
dec
test
dec
fcmovu
xchg
jle
addr16
jle
fidivr
dec
out
ds
cmp
pop
int3
mov
leave
mov
add
fcom
push
adc
dec
mov
sbb
in
xchg
adc
adc
adc
jns
xchg
out
adc
jnp
rol
push
or
aas
stos
out
mov
mov
xor
push
xchg
out
inc
in
mov
add
and
or
(bad)
jbe
pop
pop
call
and
jns
mov
mov
fisubr
push
into
mov
jecxz
or
dec
mov
pop
xchg
cli
dec
repz
out
dec
dec
aam
das
sbb
cmp
sbb
xchg
xchg
ins
adc
imul
sbb
add
and
or
jp
out
jae
icebp
lock
popf
cld
sub
call
xor
xor
sub
cmp
jle
jecxz
addr16
xlat
(bad)
shl
add
jp
mov
pop
(bad)
out
jnp
pop
add
sub
mov
shr
fild
fdivr
retf
fadd
scas
xchg
pop
and
in
xchg
xchg
jo
test
jp
call
xor
(bad)
sub
or
sar
push
popf
fisub
xchg
sahf
int
xchg
or
mov
jae
repz
sub
push
aam
push
jnp
bound
inc
loope
sbb
jb
adc
sbb
cmp
push
es
cmps
adc
in
dec
cmp
rol
cmp
sti
in
pop
add
push
sar
ret
dec
jb
inc
lahf
pop
xor
clc
cmc
and
mov
nop
or
mov
add
popa
add
pop
loopne
sbb
xchg
fs
mov
mov
mov
ret
adc
mov
(bad)
add
mov
cmp
test
adc
jle
cli
int3
js
or
pop
imul
aas
and
and
iret
mov
mov
mov
imul
jmp
(bad)
ja
sbb
mov
out
fwait
inc
aad
adc
add
and
and
fmul
outs
loopne
add
add
popa
adc
sti
cs
inc
push
adc
arpl
jbe
stos
das
aaa
dec
push
fcmovbe
xchg
jbe
scas
test
adc
inc
sbb
fs
out
outs
jmp
sahf
or
sub
fwait
push
xchg
pop
inc
clts
cmp
push
mov
sub
cmp
sbb
jg
mov
push
push
xchg
inc
cdq
sbb
mov
add
cmps
imul
iret
lock
bound
inc
inc
retf
xor
pop
mov
mov
mov
test
mov
repz
jg
xor
adc
cs
inc
push
adc
arpl
je
stos
cmps
(bad)
sbb
and
or
xor
pop
jle
arpl
xor
out
mov
sbb
popf
int
mov
daa
pop
add
js
std
adc
int3
jns
mov
mov
pop
mov
or
xchg
xchg
imul
enter
(bad)
lods
int
sub
adc
jecxz
add
dec
cmp
in
mov
push
xlat
daa
and
mov
test
cli
mov
(bad)
enter
jmp
aaa
add
stos
stos
mov
icebp
ror
rol
das
push
imul
xor
lods
ins
xchg
test
es
cmp
dec
pop
ins
mov
push
push
btc
hlt
inc
cwde
push
inc
jae
pop
mov
jnp
xchg
push
int3
and
fisub
inc
test
gs
adc
cmc
sar
sub
lahf
loope
mov
popa
sub
(bad)
imul
mov
mov
mov
mov
test
mov
or
cmp
out
iret
inc
jne
pop
push
sub
clc
mov
or
rcr
ja
jns
or
ds
sbb
sbb
mov
dec
jge
xchg
mov
retf
sub
out
mov
test
cdq
stos
push
or
repz
adc
pop
shr
repnz
cmp
or
aam
xchg
iret
jle
mov
int3
mov
push
jb
sbb
lock
addr16
cmps
adc
jbe
xor
mov
xchg
jo
dec
inc
mov
mov
fisttp
ins
mov
rcl
imul
xor
ret
dec
out
push
retf
dec
push
bnd
fldcw
xchg
aas
push
out
push
test
movs
sbb
and
push
and
std
sahf
cmps
iret
sbb
retf
mov
xchg
dec
sti
(bad)
dec
mov
retf
add
jmp
xor
xor
mov
aad
sub
stos
stos
in
xlat
xor
or
cld
sub
scas
loope
test
enter
or
xor
pop
add
push
in
or
sub
cmps
mov
pop
(bad)
fnsave
mov
push
sub
dec
ja
fs
xor
add
fisttp
push
outs
jno
mov
add
add
sahf
imul
cmp
ds
push
icebp
movs
xor
pop
mov
movs
xor
into
(bad)
xchg
jmp
jle
vmread
fistp
push
inc
push
and
cmps
sub
lock
cmp
mov
addr16
pop
dec
xlat
ds
push
sub
adc
and
xor
dec
js
mov
jnp
aad
outs
das
(bad)
lods
xor
pop
not
ret
jg
repnz
sub
cli
addr16
mov
xchg
and
outs
in
fwait
sbb
cmp
aas
movs
dec
out
push
lds
jno
retf
sbb
jbe
add
mov
jno
addr16
adc
mov
add
or
push
enter
int
aas
cld
dec
mov
gs
pop
aas
gs
pop
lds
popa
jbe
dec
push
dec
aaa
cmp
or
and
ins
retf
aad
add
push
in
or
jnp
cwde
mov
and
cmp
jle
clc
cmc
ja
cs
(bad)
push
icebp
or
fld
pusha
repz
pop
sbb
out
rcl
xchg
scas
test
mov
ins
push
ins
cmp
mov
xor
or
xchg
loope
sub
jne
das
cmp
pop
repz
call
adc
int
call
pop
fisttp
adc
jle
repz
mov
jo
out
das
fstp
mov
add
cmp
iret
dec
and
(bad)
mov
mov
mov
and
fwait
int3
or
iret
jo
mul
ins
sub
outs
fld
cwde
adc
fwait
mov
test
or
(bad)
iret
aaa
or
ins
or
icebp
mov
inc
and
push
out
fisub
jp
popa
xor
and
cmp
xlat
sar
adc
test
or
jne
xor
adc
es
jecxz
xor
repnz
xor
enter
shr
into
cld
cmps
mov
loop
iret
pusha
mov
(bad)
mov
push
scas
lea
scas
addr16
test
jl
or
jnp
and
iret
push
bnd
cmp
inc
pop
shr
in
addr16
cli
fwait
mov
arpl
push
das
aaa
dec
push
dec
lock
jecxz
int3
into
(bad)
cmp
scas
jecxz
or
daa
push
ins
call
jmp
xchg
clc
mov
xchg
test
imul
int3
js
or
fistp
and
inc
dec
cmp
cdq
ret
imul
popa
pop
sbb
popf
dec
fs
lds
imul
xor
stos
adc
mov
cld
iret
xchg
push
xor
jmp
sbb
movs
adc
enter
dec
push
fwait
clc
dec
dec
ds
shl
mov
jnp
loopne
stos
test
clc
mov
mov
shr
arpl
add
jecxz
add
hlt
sbb
or
xchg
push
ret
adc
xor
cli
data16
jbe
ret
sbb
in
push
fistp
adc
pop
je
mov
or
jl
imul
sahf
add
adc
mov
(bad)
mov
(bad)
xor
pop
xchg
adc
out
fdiv
push
popa
test
(bad)
fld
in
push
sub
add
add
out
fbstp
mov
xchg
pop
sub
jbe
lods
sbb
or
push
cmp
push
dec
sub
lods
mov
mov
or
mov
push
jae
jmp
imul
or
bswap
call
cdq
inc
and
inc
and
cmp
xchg
push
xchg
scas
test
shl
adc
jbe
aad
je
adc
aad
add
pop
mov
xor
sbb
call
add
outs
sub
pop
cmp
push
jmp
push
jecxz
add
lods
mov
mov
sub
out
mov
xchg
(bad)
pushf
aad
nop
jmp
mov
mov
aad
push
test
mov
add
rcl
or
jmp
scas
jg
movs
sahf
ds
call
(bad)
out
cs
pop
outs
(bad)
into
cld
cmps
scas
add
ret
push
jp
push
inc
push
and
adc
or
bound
or
popa
lea
jo
mov
ja
std
in
lea
cli
in
push
push
out
je
das
pop
or
or
xchg
ins
in
jecxz
(bad)
iret
inc
dec
test
jp
ret
jp
retf
sub
and
call
or
cs
test
sti
out
fwait
in
cwde
adc
and
ins
fistp
aaa
ins
aaa
int
jg
mov
xchg
pop
push
mov
movs
in
xlat
xor
mov
scas
loope
fnsave
pop
rcr
(bad)
popf
add
jmp
pop
adc
icebp
shl
ins
push
(bad)
out
inc
xchg
push
clc
cmc
retf
fcom
scas
xchg
pop
and
std
inc
and
push
out
push
mov
and
dec
mov
cld
xlat
and
(bad)
sub
jp
(bad)
in
push
jmp
jle
loope
fpatan
imul
fwait
or
retf
ror
mov
pusha
repz
enter
cdq
int
dec
push
add
pop
das
sbb
addr16
add
mov
adc
(bad)
lock
sub
mov
daa
cmp
pop
mov
mov
shl
sbb
call
xor
out
stos
mov
fs
lds
int3
and
sbb
cmp
xor
or
cmp
je
xchg
or
push
jmp
popa
xor
xchg
lea
and
retf
ins
adc
pop
xor
cmc
cld
les
add
out
sub
fist
push
(bad)
mov
(bad)
mov
fadd
pop
mov
add
adc
pusha
xor
mov
outs
lahf
fabs
sti
test
push
pop
mov
mov
pop
dec
xchg
outs
(bad)
fisttp
xor
inc
sbb
pop
(bad)
ins
pop
test
sbb
push
pop
mov
std
dec
mov
jp
(bad)
shr
test
jns
or
push
arpl
adc
cmp
nop
cmp
push
cmp
pop
xchg
call
int3
repnz
call
outs
ficomp
inc
dec
xor
xchg
jle
clc
ds
xlat
(bad)
shl
adc
jbe
ror
xchg
xor
aad
add
inc
mov
xor
ins
push
cmp
loopne
loop
and
push
sub
jo
add
mov
xchg
and
outs
in
fwait
sbb
dec
dec
jge
aas
add
push
lds
jae
lds
movs
std
in
inc
idiv
mov
xchg
mov
fs
repnz
repz
movs
xchg
sub
mov
ret
mov
mov
pop
cmp
inc
fcomp
dec
ds
out
pop
dec
daa
ds
dec
sub
and
int3
(bad)
fld
jecxz
mov
xor
xor
test
sbb
repz
loopne
or
gs
jae
pop
pop
pop
jmp
xlat
rcl
in
or
aaa
out
dec
je
cmp
cmps
mov
jp
(bad)
pop
dec
jge
aas
dec
gs
push
movs
inc
jecxz
ins
push
scas
adc
xor
dec
dec
lds
pop
push
test
btc
hlt
inc
scas
les
aaa
xchg
jp
dec
shl
cmp
sub
stos
or
sbb
neg
mov
jmp
xor
push
pop
xor
stos
cmp
dec
imul
sub
sbb
and
push
dec
in
push
loope
push
pop
or
in
sbb
retf
mov
test
pop
push
loop
loop
push
sub
push
sbb
lods
sbb
hlt
xor
outs
xchg
into
xor
jle
leave
mov
test
int
retf
repnz
repz
popf
cmovge
xchg
lea
mov
mov
ror
sub
ds
sub
adc
and
movs
mov
sub
outs
cwde
cld
int3
sbb
movs
mov
rol
(bad)
jecxz
jl
xchg
xchg
push
mov
ror
adc
je
das
pop
inc
outs
or
xchg
ins
in
jecxz
jne
push
pop
xor
add
push
pop
jmp
jle
lea
or
xchg
fcomp
adc
or
cli
pop
xchg
out
adc
mov
xor
jno
mov
fild
pop
rol
add
ja
sahf
add
data16
ds
mov
popa
pusha
popa
mov
xor
xlat
mov
inc
push
mov
shl
jnp
cmp
jnp
fiadd
in
fld
cwde
sahf
stos
sbb
push
fwait
cmp
daa
mov
xchg
jae
mov
jecxz
iret
out
inc
cmp
ficomp
cdq
dec
cmp
sti
xchg
in
ret
std
sbb
retf
xchg
fiadd
fwait
xchg
jecxz
mov
aam
test
fsubr
xor
mov
out
pop
cmp
out
call
vmovaps
adc
loop
mov
ja
lock
outs
(bad)
pop
out
lea
add
xor
es
dec
jnp
int
(bad)
inc
lock
das
mov
push
out
in
pop
loop
and
scas
pop
and
retf
push
bound
fwait
xchg
and
sti
sbb
sbb
(bad)
sbb
(bad)
cmp
out
jb
ret
sbb
pusha
mov
xor
jle
fimul
xchg
inc
inc
pslld
adc
xlat
jns
fbstp
xor
mov
add
pop
cmp
pop
and
dec
je
retw
mov
sbb
add
aaa
add
add
mov
loope
in
sub
sbb
mov
or
retf
xchg
inc
repnz
jo
(bad)
mov
adc
mov
push
lods
xlat
pop
(bad)
sbb
movs
push
(bad)
lock
hlt
sub
add
push
outs
mov
fstp
pop
cmps
popa
mov
loope
mov
je
ins
out
mov
xchg
jns
das
mov
mov
in
ins
and
loop
push
mov
mov
add
cmps
adc
jne
push
mov
xchg
jb
push
mov
mov
out
fdiv
cwde
in
and
fistp
push
clc
cmc
mov
idiv
cli
adc
ret
push
jecxz
and
cmp
pop
dec
mov
dec
jge
aas
mov
out
push
mov
sbb
(bad)
xchg
jmp
jns
aas
inc
stc
jp
push
call
inc
mov
pop
or
push
imul
mov
std
push
call
dec
and
mov
mov
(bad)
fdivr
popf
adc
repz
hlt
test
push
add
jno
mov
push
pop
and
jmp
cmc
pop
dec
and
pop
add
xor
test
imul
or
xlat
(bad)
popa
in
icebp
dec
sub
popf
aad
shl
bound
mov
sub
out
fwait
hlt
into
or
(bad)
retf
out
push
xchg
mov
fistp
push
jnp
int
dec
inc
les
call
jle
dec
ds
cmps
pop
adc
(bad)
mov
jmp
xchg
dec
jnp
mov
add
pop
or
fnsave
ins
fcom
ret
lock
cmps
or
xor
or
outs
cmp
push
jmp
js
cli
bound
mov
push
sub
stos
and
jecxz
sti
push
sbb
jno
or
movs
mov
es
fs
sbb
jo
cmp
push
jae
pop
das
adc
data16
fistp
data16
ins
loope
or
out
rcl
fisttp
cmps
loope
mov
cmp
sbb
jae
inc
aad
adc
loopne
sub
and
int3
jns
xor
ss
in
push
cmps
pop
xchg
mov
pop
arpl
outs
adc
icebp
in
imul
add
sbb
xchg
xor
xlat
push
jmp
popa
xor
cmp
test
test
xchg
push
imul
cdq
sbb
and
xor
mov
sub
pop
push
shr
pop
lds
popa
jbe
dec
mov
dec
or
and
push
mov
sub
mov
jnp
push
add
xor
mov
mov
dec
outs
mov
cmp
rcr
lea
mov
sbb
popf
fdivr
in
pop
cld
nop
sub
ins
lds
xchg
inc
and
popf
add
pop
ficom
adc
add
sti
pop
xor
fdivr
stos
ss
mov
out
add
lds
jp
jo
outs
in
pop
mov
sub
cld
cmps
mov
push
(bad)
jge
ins
jle
enter
in
in
pop
or
cdq
push
je
fiadd
push
lock
and
adc
cmp
out
push
xchg
aaa
adc
or
addr16
daa
in
push
repnz
pop
ret
dec
jge
aas
jae
out
push
sbb
jge
pop
pop
imul
jle
jbe
mov
mov
ins
pop
fiadd
adc
dec
dec
mov
ror
dec
(bad)
push
rcl
or
xor
ja
cmp
(bad)
fadd
fsubr
popa
cld
cmps
stos
add
cmp
mov
cmp
sub
pop
mov
mov
xor
sbb
cmp
retf
lock
std
dec
mov
pop
inc
jmp
(bad)
xor
cli
sbb
or
scas
ins
add
enter
mov
shr
addr16
xchg
adc
out
fld
sbb
adc
sub
pop
fidivr
adc
cli
pop
mov
mov
aam
push
fistp
and
fiadd
std
inc
dec
inc
add
cld
out
(bad)
lock
mov
cld
sub
lahf
adc
jae
jbe
mov
rcl
adc
add
push
mov
pop
dec
test
jge
shl
out
test
jl
out
bnd
add
movs
adc
xchg
and
jo
fcom
adc
movs
lock
sbb
cmp
jecxz
stc
movs
popa
out
out
push
sub
mov
loope
pop
xchg
popf
push
test
fwait
xchg
jecxz
mov
add
dec
repz
xlat
(bad)
add
dec
inc
add
ja
cmp
out
sahf
push
xchg
and
(bad)
repz
sub
loop
mov
mov
mov
add
mov
jnp
xchg
add
xchg
iret
addr16
loopne
cmc
mov
es
sub
cli
in
pop
add
iret
(bad)
adc
or
fcmovne
out
es
div
mov
xor
call
sub
or
mov
pop
(bad)
pop
fiadd
adc
test
adc
mov
cmc
xor
stos
sub
cli
cmp
call
icebp
cmps
mov
in
pop
dec
mov
sub
adc
or
mov
in
mov
dec
mov
xchg
mov
(bad)
inc
cmps
ds
fcomp
sbb
pop
jecxz
jmp
scas
cdq
add
jecxz
inc
scas
push
fild
imul
pusha
ret
mov
inc
xor
push
arpl
xor
adc
add
inc
sub
cld
inc
fdivr
sub
pop
jl
int
repz
fldcw
out
(bad)
jmp
stos
rcr
sub
mov
scas
mov
push
lods
ss
xor
xchg
xchg
movs
sbb
ins
icebp
and
and
out
inc
xchg
loopne
cmc
std
outs
sub
fbstp
test
jae
mov
jecxz
iret
out
dec
cmp
ficomp
jb
jp
pop
xchg
scas
xchg
push
sub
xchg
sahf
dec
shr
movs
mov
ror
inc
cli
lock
cmc
cld
test
xchg
pop
popa
rcr
loop
iret
mov
xor
xchg
jmp
rcr
fild
shr
mov
xor
cmp
dec
jns
mov
inc
add
mov
dec
jl
loop
xor
pop
(bad)
dec
dec
add
adc
repz
fmul
cs
in
xor
(bad)
push
sbb
cmps
inc
mov
jno
aad
pop
test
pushf
popa
ret
je
push
push
adc
sti
scas
fwait
hlt
mov
push
enter
xor
pop
and
ss
mov
int
mov
fucom
pop
dec
daa
sub
repz
out
add
inc
bound
cmp
call
pushf
add
jmp
cmp
ret
test
mov
pop
push
cmc
pop
dec
call
xchg
adc
fs
fdiv
and
or
out
retf
mov
add
add
into
(bad)
jo
xchg
mov
jp
es
arpl
xchg
pop
push
cdq
adc
icebp
ins
adc
dec
addr16
sbb
movs
sub
and
stos
ficomp
mov
inc
aad
jle
xchg
or
ds
sbb
outs
sub
movs
scas
adc
and
add
sub
mov
mov
add
scas
or
(bad)
fild
pop
pop
pusha
add
movs
inc
sub
add
mov
jecxz
les
in
fwait
movs
bound
cmp
loop
out
push
es
mov
mov
idiv
mov
jnp
jmp
out
jo
or
arpl
call
(bad)
(bad)
mov
pop
sti
and
mov
cwde
aam
ret
sahf
add
push
loop
(bad)
mov
rcpps
bound
out
sub
mov
and
mov
dec
mov
sti
mov
ins
push
or
jb
out
addr16
(bad)
in
shr
(bad)
rol
les
pop
jne
xchg
aam
sub
ret
cli
add
and
add
mov
ja
mov
dec
ins
addr16
sti
dec
pslld
mov
xlat
aas
and
push
pop
xchg
mov
cmp
ds
mov
sahf
cld
data16
loop
cmp
jmp
(bad)
dec
push
push
add
ss
out
(bad)
repz
mov
ins
fild
into
mov
mov
push
dec
and
ins
lods
and
push
pop
push
pop
fnstcw
int3
cmp
cmp
xchg
dec
mov
fcmovne
mov
xor
jle
fmulp
or
add
xor
or
pusha
jns
sub
sbb
cdq
int
add
xor
jb
fmul
cmps
inc
int
sub
fisttp
and
cmp
out
into
mov
popf
mov
lahf
cmc
inc
pop
add
cmp
mov
(bad)
mov
(bad)
xchg
lods
out
jo
out
pop
clc
cmc
std
scas
and
cwde
add
mov
in
push
rcr
jl
fadd
add
les
jecxz
mov
idiv
mov
out
push
movs
jl
out
push
sub
sti
mov
jns
inc
xchg
test
adc
mov
or
mov
jmp
shl
icebp
(bad)
xor
repnz
data16
shl
sub
sub
push
loop
iret
pusha
cli
xor
mov
mov
daa
cmp
movlps
add
(bad)
xchg
js
push
sub
inc
lahf
pop
push
xor
or
fisub
jp
jmp
adc
ins
in
jecxz
jne
push
pop
cwde
lea
test
rol
clc
scas
adc
xor
add
pop
xchg
jp
jl
fs
sbb
(bad)
int3
js
xor
jmp
cdq
inc
cmp
dec
xor
cmps
imul
retf
sub
fbld
dec
pop
pop
mov
mov
xor
stc
sar
mov
into
dec
pop
mov
lea
arpl
pop
inc
or
in
push
cmp
stos
pop
or
push
add
push
add
pop
out
sbb
mov
ret
mov
sbb
ret
ss
scas
xchg
adc
int
in
xor
mov
adc
lahf
xchg
out
cwde
sti
xor
xchg
cmc
stos
ret
(bad)
test
dec
fnstcw
arpl
xor
outs
mov
ror
xchg
adc
cmps
movs
add
aaa
loopne
addr16
jmp
add
test
ins
(bad)
repnz
dec
ja
out
call
mov
xchg
xchg
dec
adc
jmp
mov
aam
fs
loopne
call
out
imul
dec
(bad)
jp
in
or
xchg
pushf
fisub
push
cdq
sub
pop
fdivp
mov
fdiv
inc
sbb
cmc
test
sub
sahf
jnp
int
jbe
cwde
mov
retf
lock
retf
xchg
sahf
imul
add
enter
je
adc
xor
mov
adc
push
xor
mov
out
inc
xchg
and
cmc
mov
(bad)
enter
sbb
test
push
out
mov
add
jecxz
bound
dec
imul
cdq
cwde
push
in
sbb
data16
xchg
in
loop
and
loope
sbb
or
xchg
repnz
adc
hlt
or
xor
pusha
jns
gs
rcl
xor
mov
jle
mov
arpl
adc
xlat
(bad)
sahf
add
popa
scas
jmp
cmp
or
sbb
mov
test
mov
and
adc
dec
ret
xchg
test
add
mov
pop
xchg
cli
jne
or
ins
lods
aas
fldenv
dec
mov
leave
cmp
cmp
clc
mov
ret
xchg
(bad)
mov
sub
imul
cmp
push
ins
hlt
inc
call
add
aas
stos
ss
mov
cmp
push
cmp
lock
mov
(bad)
mul
popa
cld
sub
loop
test
xchg
dec
fidivr
pop
stos
test
add
xor
sub
int3
(bad)
push
iret
jo
push
sti
lock
std
jo
(bad)
cwde
push
stos
mov
fwait
or
dec
das
pop
and
(bad)
out
clc
cs
idiv
and
dec
mov
(bad)
push
pop
(bad)
pusha
popa
xor
nop
sub
push
or
pop
lods
aam
hlt
inc
inc
std
or
in
ret
or
add
aas
push
xchg
int
dec
int3
mov
jmp
ds
xlat
sub
mov
pop
sar
ja
mov
add
(bad)
std
test
adc
in
mov
mov
lods
int
sbb
ins
fild
iret
cmp
loopne
cmc
ja
cmp
sub
adc
inc
fucom
push
fwait
sbb
xchg
pop
int3
xchg
out
ret
stos
jecxz
cmp
mov
ret
gs
arpl
xor
cmp
push
test
jae
fs
push
push
xor
adc
fbstp
into
mov
jae
xor
cli
sbb
faddp
repnz
pop
dec
daa
ds
cmp
arpl
cmp
and
inc
mov
movups
in
fdiv
and
stc
shl
jl
jb
std
outs
fld
pop
adc
cmp
push
jmp
jecxz
ds
ja
ins
adc
and
hlt
stos
xlat
push
repz
cdq
sbb
cli
int
xchg
in
loop
and
loope
sbb
or
xchg
push
adc
hlt
or
xor
pusha
jns
gs
rcl
xor
mov
xchg
cdq
arpl
jg
(bad)
sahf
add
popa
scas
jmp
cmp
or
sbb
mov
test
mov
and
lea
jno
cmp
xchg
fisttp
add
mov
pop
xchg
cli
frstor
aas
fldenv
dec
mov
retf
cmp
cmp
clc
sub
push
jae
(bad)
adc
sub
imul
cmp
push
ins
hlt
inc
call
add
aas
stos
mov
dec
inc
cmp
push
cmp
lock
mov
test
adc
mul
popa
cld
sub
loop
pop
sahf
neg
cmp
pop
stos
test
xor
sub
int3
push
push
iret
jo
push
sti
lock
std
jo
(bad)
xor
stos
mov
fwait
or
dec
das
pop
pop
fs
out
clc
cs
idiv
aas
out
mov
ret
gs
arpl
nop
es
repnz
cld
inc
retf
fdivrp
inc
mov
adc
push
les
cmc
mov
cmp
xlat
aas
and
adc
mov
pop
je
aam
(bad)
sub
sbb
sub
sub
adc
lods
shl
aaa
cmp
(bad)
pop
jmp
xor
pop
dec
add
repz
xor
or
clc
xchg
iret
jo
addr16
rol
adc
or
repnz
fwait
or
dec
aaa
pop
cwde
adc
(bad)
in
movs
enter
mov
cmp
jecxz
loope
imul
popa
js
adc
leave
bswap
test
fwait
mov
push
sub
add
adc
popa
jns
fbstp
leave
cdq
int
lds
xor
fdivr
addr16
pop
pop
and
add
popa
cld
cmp
shl
aaa
cmp
jmp
stc
jle
push
add
mov
jnp
mov
ins
cmp
scas
push
mov
iret
cmp
loopne
loop
and
push
sub
clc
in
push
fwait
xchg
push
(bad)
push
and
stc
bound
dec
push
jp
dec
cmp
mov
and
mov
ret
xlat
push
arpl
mov
sbb
push
shl
out
test
fwait
xchg
arpl
cdq
dec
cli
pop
test
cmc
jl
adc
fistp
stos
ret
(bad)
pop
out
xchg
call
hlt
ins
inc
(bad)
hlt
dec
sub
loop
xor
ja
xchg
push
push
xor
push
mov
pop
aas
shl
jnp
pop
adc
test
add
or
push
or
mov
push
mov
ins
fcomp
xchg
out
cmps
scas
jecxz
sub
cmc
mov
xlat
and
push
or
ins
push
arpl
dec
push
nop
jmp
add
or
dec
push
test
int
pop
btc
sub
cld
inc
sar
sub
mov
repz
fcmovne
call
(bad)
clc
fiadd
addr16
sahf
jmp
fwait
adc
nop
pop
push
jbe
lea
test
lock
push
in
cmp
jg
sbb
rcr
pop
outs
dec
push
outs
add
cli
in
push
adc
je
das
pop
cmp
fistp
ret
xchg
inc
retf
xchg
mov
cmp
arpl
sbb
and
jo
pusha
jns
inc
mov
stos
repz
shl
clc
cmc
cld
and
or
ret
int
fidivr
lods
jl
xchg
mov
mov
sti
lea
sub
jmp
adc
mov
dec
mov
enter
xor
pop
or
or
xor
sbb
outs
inc
jne
pop
push
sub
xor
pushf
ins
sbb
or
adc
popa
or
xchg
xchg
mov
dec
repnz
push
push
in
sbb
inc
sbb
in
pushf
pop
mov
pop
jle
jno
stc
jp
sub
lock
add
sahf
aam
outs
add
aas
and
addr16
mov
not
and
dec
ds
call
pop
lahf
adc
lock
mov
daa
cmp
pop
xchg
mov
jae
cmp
sbb
push
loop
cli
cs
sub
or
je
in
push
jno
xlat
in
(bad)
(bad)
das
daa
(bad)
idiv
xchg
imul
test
pop
fwait
jbe
ret
sbb
sub
jp
out
jae
mov
bnd
imul
add
jmp
push
int
cmp
mov
(bad)
cmc
ror
data16
(bad)
xchg
ret
cmps
mov
mov
call
push
sti
call
gs
sub
(bad)
scas
rcr
xchg
das
mov
xor
pop
adc
shr
sbb
vpcmpgtb
cmp
(bad)
frstor
les
icebp
lock
dec
push
div
sbb
je
out
outs
call
hlt
int
mov
add
outs
fwait
test
cs
sub
lea
std
adc
lods
jns
fbstp
es
mov
jg
and
out
jbe
ror
mov
jmp
cmp
loop
popf
rol
pop
mov
xor
mov
xor
mov
mov
or
push
popf
out
inc
xchg
sub
cmc
std
outs
cmp
pop
jle
loop
mov
push
jp
stc
sbb
jp
dec
and
and
out
test
cmp
scas
xchg
adc
int
mov
loop
mov
dec
out
jae
or
jae
jg
cmc
xchg
sub
(bad)
pop
fbstp
es
or
in
fbstp
fmul
repz
mov
jbe
dec
xor
int3
call
imul
mov
mov
mov
jnp
mov
popf
xor
jno
inc
or
out
mov
xchg
(bad)
add
mov
xchg
mov
add
cld
es
(bad)
hlt
inc
dec
test
pushf
test
lods
xchg
xlat
dec
int3
sub
add
jle
push
arpl
push
loope
xchg
outs
or
mov
movs
mov
sub
iret
(bad)
xor
xor
les
jg
aad
xor
sbb
in
out
dec
aas
ds
push
lock
jmpw
lea
mov
mov
jae
mov
lods
xor
in
push
mov
iret
cli
dec
imul
std
in
pop
cmp
ficomp
sbb
ret
fcom
and
pop
ja
out
es
bound
mov
dec
cmp
leave
pop
or
sbb
xchg
rcr
push
jne
btc
or
and
cmc
cld
in
fidivr
and
(bad)
and
xor
retf
lds
ds
push
into
mov
sbb
cld
test
push
retf
jg
stc
pop
cmp
daa
fdiv
dec
xor
addr16
jl
push
xchg
aaa
adc
(bad)
cli
addr16
xor
les
imul
daa
mov
push
lods
sbb
fwait
imul
not
fiadd
adc
(bad)
repnz
xchg
aam
jns
push
cmp
inc
inc
xor
jg
mov
xchg
pop
push
mov
retf
in
xlat
xor
inc
scas
cld
sub
scas
loope
mov
loope
push
aaa
add
retf
push
pushw
adc
sub
jle
xchg
movs
cdq
movs
int
dec
jl
punpckldq
jo
scas
sub
add
jmp
add
je
push
out
hlt
popf
jp
jno
fst
dec
idiv
stos
jecxz
stc
movs
mov
pop
shl
jnp
jb
cmp
pop
ret
pop
push
jno
pop
sub
inc
cwde
and
hlt
ret
sti
pop
call
cdq
inc
(bad)
pop
jmp
xor
call
hlt
ins
inc
(bad)
hlt
push
sub
loop
cmp
ja
xchg
push
push
xor
push
mov
pop
aas
shl
jnp
push
adc
test
add
add
cs
or
mov
lss
int3
out
gs
out
mov
pmaddwd
push
or
ins
push
arpl
dec
push
nop
jmp
add
or
dec
push
test
int
pop
btc
sub
jl
(bad)
pop
and
into
fidivr
and
cmp
cs
sahf
mov
cmp
add
add
inc
retf
inc
aad
add
sub
pop
enter
push
and
sbb
into
mov
push
cmc
ja
cmp
(bad)
cwde
adc
xchg
cli
pop
push
or
cmc
in
push
jno
xlat
in
fucom
mov
jbe
cmp
loopne
out
jecxz
mov
push
loope
shr
loope
xor
sbb
ds
call
dec
pop
sub
or
jnp
jns
jnp
cmc
xchg
jl
repz
enter
cdq
mov
retf
lods
gs
xlat
out
mov
pop
fidiv
mov
loop
cmp
pop
shl
popf
add
or
retf
jmp
or
or
in
pop
outs
sar
pop
pop
xchg
adc
cli
in
loop
cld
packuswb
out
push
fild
or
shl
dec
jge
aas
xchg
pop
out
push
inc
std
fstp
sbb
jo
adc
add
fs
push
cmovle
hlt
into
or
pushf
add
jle
(bad)
jbe
pop
and
pusha
xchg
or
pop
lods
mov
loop
pop
shl
adc
popa
cld
and
rcr
mov
cmp
xchg
xchg
fsub
aad
pop
or
sahf
xor
mov
aam
fs
sbb
pop
pop
pop
jmp
(bad)
imul
mov
repz
out
push
je
les
icebp
lock
(bad)
jl
xchg
mov
sbb
fnstenv
mov
loope
jmp
or
adc
jne
pop
das
rcr
xchg
mov
inc
repz
loope
cmc
inc
sub
mov
cmp
cmp
cld
cmps
scas
add
out
ja
jp
mov
das
in
xor
aad
adc
in
mov
repz
int3
inc
and
jo
fist
fsubr
in
addr16
loopne
in
push
or
mov
cdq
adc
sub
cld
inc
out
es
jne
test
dec
jge
aas
mov
dec
inc
icebp
xchg
sahf
arpl
push
sub
cmp
hlt
into
cld
repnz
cmp
or
aam
inc
sbb
xchg
push
rcr
xchg
mov
jo
xchg
(bad)
test
out
loop
fbstp
sbb
je
adc
xchg
stc
xor
or
adc
rcl
cs
jl
sub
(bad)
ins
adc
outs
fld
cwde
adc
fwait
add
sbb
out
stos
push
sti
push
jb
ins
sar
jne
icebp
fisttp
ret
cmp
je
call
mov
sbb
add
mov
stos
xchg
xchg
(bad)
shr
repz
shl
das
rcl
hlt
and
ins
repnz
shl
mov
(bad)
cmp
xchg
cmps
add
cmp
int
jbe
jmp
mov
sub
sbb
add
jno
(bad)
in
and
add
sub
pop
or
sbb
or
sub
sbb
lahf
icebp
mov
fidivr
out
js
rol
(bad)
out
pushf
mov
xor
jle
fimul
test
inc
pinsrw
xchg
jp
and
es
xchg
dec
xor
call
int3
push
outs
(bad)
popa
ss
stc
mov
jne
stos
sbb
push
and
enter
or
mov
sbb
sbb
or
or
or
mov
mov
push
or
aaa
out
dec
je
cmp
cmps
mov
jo
(bad)
pop
dec
jge
aas
test
push
movs
or
mov
movs
xchg
mov
loope
mov
stc
xchg
mov
test
pop
xchg
sbb
add
push
and
push
out
inc
dec
and
xchg
mov
lods
fst
retf
xchg
sahf
imul
jmp
xor
retf
add
sbb
xor
pop
or
jl
psrad
cs
sbb
(bad)
push
fadd
xchg
ss
dec
out
test
fcom
jp
adc
dec
mul
jne
fld
sbb
jns
jp
(bad)
sbb
lock
pop
xchg
ret
jecxz
dec
pop
retf
xor
inc
les
jg
cmp
in
mov
mov
pop
cmps
shl
(bad)
sahf
add
cmp
test
mov
(bad)
popf
stos
stc
sbb
adc
test
push
ret
mov
inc
aas
iret
jo
xor
inc
sbb
sbb
nop
adc
or
sbb
mov
je
scas
push
ror
(bad)
in
movs
hlt
cs
shr
mov
pushf
arpl
mov
call
ja
add
jbe
ficom
mov
jp
cli
lock
rcr
xchg
fadd
test
pop
pop
fldenv
in
loopne
jmp
ds
jbe
popa
cld
cmp
std
cdq
lock
mov
add
mov
jnp
inc
imul
out
iret
and
cmc
inc
loop
stos
sub
stc
cli
gs
mov
xchg
pop
mov
xor
es
fiadd
inc
adc
ret
jp
mov
sbb
in
sbb
fimul
repz
push
adc
(bad)
cmp
jp
mov
and
inc
cwde
int
fidivr
das
jp
xchg
mov
fst
pop
dec
daa
ds
pop
sub
adc
and
xor
dec
jp
in
mov
lea
sub
sbb
mov
fisttp
(bad)
in
shr
repz
je
daa
out
ds
cmp
jb
sbb
xchg
xor
xor
test
out
test
xchg
in
push
jmp
jmp
test
lahf
push
push
sub
aam
aam
sbb
and
out
mov
inc
inc
dec
mov
fist
in
pop
lds
jbe
loop
adc
jbe
push
jbe
inc
xchg
xor
stc
jle
push
add
mov
mov
and
enter
fistp
adc
fcmovb
pop
clc
mov
sub
xor
push
in
jbe
retf
fcom
fldenv
dec
mov
jno
(bad)
icebp
push
clc
xor
test
gs
movs
rcr
xor
int
movs
sbb
mov
test
out
fimul
pop
daa
or
cmps
sbb
fistp
(bad)
push
sub
add
ja
cmp
out
sahf
push
add
mov
mov
xchg
(bad)
popf
add
ret
(bad)
pop
add
fld
mov
mov
pop
sbb
inc
sbb
xor
jae
clc
cmc
std
outs
fld
push
adc
jp
ficomp
fwait
or
cmp
test
gs
imul
cmp
ficomp
and
inc
loopne
mov
sbb
xor
jle
fimul
xchg
mov
dec
cli
add
or
pusha
xchg
movs
pop
fistp
data16
dec
dec
xor
daa
adc
cwde
sbb
mov
(bad)
sahf
imul
add
popa
repnz
mov
popf
dec
sahf
cmp
jmp
or
xor
sub
int3
xor
iret
jo
ss
lock
std
in
mov
or
cmps
xor
xchg
bt
or
sbb
lock
jecxz
cmp
test
add
pop
adc
dec
and
shr
sbb
sbb
repnz
push
test
and
vmread
(bad)
or
aam
inc
loopne
aas
and
inc
(bad)
fisubr
loop
imul
dec
aas
ds
and
pop
adc
jbe
mov
neg
and
xchg
mov
je
and
cmps
mov
iret
jo
jae
clc
cmc
jmp
dec
add
in
add
fnstenv
pop
mov
outs
xor
imul
imul
mov
stc
fstp
ins
inc
cld
call
shr
adc
dec
stos
pop
fiadd
adc
xchg
pslld
add
mov
push
xchg
int
pop
lea
(bad)
ins
imul
pop
lds
dec
hlt
aaa
aaa
cmp
not
pop
cld
popf
add
mov
sti
in
xchg
into
dec
pop
push
sysenter
pop
xor
cmp
movs
loopne
add
fcmovnu
pminsw
mov
in
fmul
and
adc
sti
pop
mov
aas
in
loopne
push
mov
push
out
cmps
je
ret
push
psubw
and
add
sub
lock
aas
js
std
adc
retf
jns
dec
rcr
fcomp
(bad)
mov
cmc
lods
cmp
jle
loopne
addr16
xlat
ss
pop
scas
cld
sub
sub
dec
int
cmp
fcom
inc
aad
adc
add
pop
pop
jnp
mov
dec
xchg
dec
sti
mov
push
xor
jg
jb
jmp
pop
sbb
push
fwait
cmp
daa
mov
stos
jae
mov
jno
(bad)
data16
adc
imul
cdq
outs
call
popa
mov
neg
pop
fiadd
div
xchg
retf
cmc
xchg
test
(bad)
pop
fbstp
xor
jno
xchg
sub
dec
mov
sti
xchg
vmovaps
das
dec
add
xor
inc
bound
inc
aad
add
and
retf
iret
or
cmp
jl
clc
cmc
ja
cmp
cli
cwde
adc
mov
inc
and
cmp
les
adc
jne
into
(bad)
jno
xchg
scas
lahf
ins
add
xlat
push
pop
aad
ds
int
loope
sar
and
(bad)
ins
fwait
imul
dec
cli
mov
inc
mov
mov
neg
call
imul
jmp
add
std
popf
mov
xchg
mov
jnp
nop
mov
add
xchg
push
fucomip
inc
ja
stos
aaa
clc
cmc
retf
fcomp
scas
xchg
pop
and
stc
js
push
scas
je
das
pop
pop
add
(bad)
out
in
xchg
sbb
jns
aaa
gs
cmp
ret
jp
into
sub
inc
xchg
sahf
and
in
pop
or
int
pslld
xchg
scas
repnz
pop
dec
gs
data16
mov
pop
lods
pop
call
mov
add
add
add
loop
push
xchg
ja
lock
dec
and
lea
add
xor
inc
pop
retf
jnp
aad
add
in
iret
cli
mov
std
rcl
stos
shl
pusha
dec
jo
out
push
adc
je
aaa
pop
sub
ins
call
jnp
div
push
mov
fcom
mov
push
mov
xchg
test
outs
push
shr
(bad)
sti
xor
lahf
rcr
fs
popf
bound
shr
loopne
fild
jecxz
in
add
and
inc
sub
loope
mov
cmp
call
mov
ins
(bad)
mov
popf
mov
iret
jo
sub
movs
cld
rcl
inc
push
adc
je
sub
int3
invd
les
ins
jmp
data16
sub
test
sbb
aaa
push
push
out
push
jmp
popa
xor
xchg
mov
jno
loopne
ins
adc
popf
pslld
xchg
cmp
pusha
jns
fbstp
jno
popa
inc
pusha
or
fimul
retf
rcl
data16
shr
popa
cld
fsub
inc
cwde
dec
js
jb
ja
cs
retf
jae
stc
pop
mov
xor
inc
mov
jnp
and
sbb
out
iret
jo
pop
hlt
sub
xchg
cwde
cmps
pop
cdq
add
fst
dec
mov
sbb
xor
jnp
pop
xchg
sub
adc
push
mov
push
adc
mov
sbb
imul
loope
dec
sbb
dec
ss
stos
fs
in
pop
xchg
outs
xlat
or
and
xor
xor
movs
(bad)
imul
jmp
cmp
loop
cmp
jne
dec
mov
pop
repz
leave
mov
js
sbb
ins
(bad)
fild
aaa
cli
sbb
or
inc
ins
cwde
sahf
stos
sbb
push
fwait
js
addr16
popf
out
cmp
xchg
hlt
pop
push
in
jge
icebp
ds
aas
xchg
xor
xchg
call
jne
push
inc
movs
aad
(bad)
jp
stc
out
icebp
or
lock
mov
scas
imul
nop
and
int
dec
push
(bad)
fiadd
xchg
or
jecxz
shl
adc
or
into
mov
xor
inc
sub
stos
repz
sub
out
mov
pop
jle
clc
cmc
mov
es
sub
cli
in
lods
pushf
sbb
ret
push
adc
fcmovbe
xchg
dec
add
(bad)
ja
xor
test
push
or
ins
ficom
sahf
(bad)
cmp
and
mov
out
pop
dec
dec
(bad)
cli
xor
rcr
pop
lods
test
outs
jmp
cmp
dec
call
push
pusha
rcr
aam
dec
mov
cmp
cdq
out
pop
(bad)
popf
jo
inc
cmp
pop
add
push
in
je
add
add
xchg
fnstcw
jg
jl
clc
mov
sub
or
je
xchg
pop
mov
cmp
jb
xchg
aas
cmp
adc
test
mov
push
and
or
hlt
loope
jmp
or
and
cmp
xchg
repz
xor
nop
ror
psadbw
shr
jmp
lods
mov
into
or
loope
dec
(bad)
jo
(bad)
pop
rol
(bad)
std
outs
js
loope
popa
sbb
fcomp
lds
jno
jns
ret
jb
jmp
xlat
cdq
mov
fwait
xchg
test
ins
dec
imul
cmp
adc
inc
shl
push
push
cmp
xchg
dec
pop
dec
ins
add
repnz
sub
aad
aam
repz
(bad)
(bad)
retf
adc
dec
xor
push
rcr
push
jb
(bad)
dec
ds
pop
(bad)
popa
jbe
dec
lea
fwait
ror
and
xlat
mov
enter
jnp
test
sar
outs
fisttp
imul
std
in
mov
loop
pop
or
inc
push
adc
je
das
pop
sub
jb
(bad)
jecxz
(bad)
push
ds
ret
and
ret
clc
scas
not
or
cmp
xor
jle
and
mov
hlt
mov
add
push
add
lahf
xchg
and
pop
ret
xor
hlt
fstp
inc
push
pop
sbb
and
dec
inc
inc
pusha
jp
(bad)
es
pop
jmp
mov
xchg
in
mov
rcr
mov
cmc
in
(bad)
mov
mov
shl
rep
inc
cwde
and
adc
or
fst
fdivr
fisub
jns
xlat
ficomp
std
icebp
js
pushf
aad
out
cwde
sbb
in
add
xchg
jp
sub
lock
das
or
inc
pop
dec
pop
cmc
dec
push
dec
dec
xor
repnz
mov
jmp
mov
sbb
enter
popf
add
retf
xlat
or
pop
mov
daa
lea
mov
or
clc
cmc
add
inc
and
iret
sbb
fisttp
mov
imul
in
push
mov
(bad)
jae
push
jmp
popa
js
pop
mov
xchg
test
adc
out
dec
pslld
inc
jp
or
sahf
jae
call
data16
je
mov
or
shl
fucomi
mov
adc
call
cmps
jmp
mov
std
xor
xchg
dec
mov
out
fnsave
js
test
cmps
addr16
(bad)
shl
adc
cli
dec
jl
psrad
mov
push
pop
xor
add
add
loope
addr16
in
push
jno
xlat
in
fucom
mov
jbe
cmp
loopne
leave
test
cdq
mov
ret
jp
arpl
sbb
icebp
mov
sbb
push
shl
or
xchg
das
push
lahf
dec
cli
pop
ret
cld
ret
out
call
lahf
pop
(bad)
mov
test
out
sahf
push
lods
cmp
push
sub
ror
aad
mov
loopne
jle
jbe
pusha
sti
jb
out
or
js
ss
cdq
fst
movs
repnz
ins
(bad)
inc
iret
mov
cmc
ja
cmp
push
and
sti
jge
adc
mov
sar
jno
icebp
(bad)
stos
xchg
daa
pop
adc
jns
in
xchg
push
jmp
popa
xor
shl
dec
nop
xor
xchg
adc
add
test
pop
xchg
outs
or
aas
and
movs
ss
jecxz
pop
dec
inc
push
cmp
gs
out
sahf
data16
rcl
jecxz
fcmove
imul
enter
add
idiv
xchg
call
inc
mov
(bad)
mov
xchg
pusha
jno
fist
das
mov
(bad)
sti
in
fisttp
or
into
push
scas
push
dec
adc
sbb
neg
scas
or
or
and
inc
out
ret
pop
pop
bound
sbb
das
ret
std
in
(bad)
cs
and
jp
push
imul
pop
xchg
aaa
xchg
cmc
adc
xchg
xchg
dec
xor
xbegin
test
mov
in
xlat
xor
mov
sbb
loopne
jle
jbe
jae
xor
outs
leave
mov
add
psubsb
push
ret
mov
cdq
inc
ds
mov
push
cmc
ja
cmp
xor
adc
mov
push
out
sar
xchg
cmp
cmp
pop
(bad)
mov
call
fisubr
jecxz
movs
add
das
das
jns
jno
out
int
push
(bad)
add
adc
ror
lock
xor
gs
repnz
cmps
adc
shr
ret
push
adc
mov
dec
int
pop
pop
lea
add
add
pushf
dec
test
or
jno
std
ins
out
jp
pop
bnd
adc
and
mov
jno
retf
call
sbb
push
xor
xlat
and
test
(bad)
push
jne
in
xchg
jbe
xlat
sbb
outs
bound
test
push
popf
fimul
fisttp
cmp
xor
pusha
mov
and
fild
pop
mov
scas
pop
test
retf
xchg
rcr
popa
adc
cdq
pop
pop
mov
cld
xchg
mov
data16
cmp
ss
retf
mov
cmp
sub
out
cmp
out
iret
or
fwait
hlt
inc
pop
mov
pop
sti
fsubrp
scas
mov
ja
data16
mov
adc
sub
stos
sbb
fldcw
call
add
ret
xlat
aam
mov
or
push
test
popa
clc
pop
xchg
xor
div
clc
fiadd
out
(bad)
leave
lahf
lock
test
adc
xor
hlt
fild
adc
pop
out
hlt
outs
movs
cmp
imul
sbb
lock
call
(bad)
bound
dec
push
cwde
mov
scas
mov
or
mov
push
xchg
sbb
repz
pop
mov
in
xchg
scas
ds
out
and
jnp
push
or
xchg
cld
movs
(bad)
shl
jno
push
(bad)
sbb
jbe
jge
fdivp
in
retf
jb
fwait
scas
sbb
mov
adc
ja
sbb
jecxz
xchg
push
sar
pop
out
stc
mov
repnz
adc
mov
shl
cmc
call
xor
mov
fiadd
jb
movs
dec
adc
iret
or
add
(bad)
mov
fbstp
std
outs
sub
xchg
mov
push
fwait
xchg
fsub
push
and
dec
data16
add
imul
jl
mov
mov
pop
icebp
in
pushf
aad
out
jecxz
jbe
in
ret
adc
ins
in
dec
sbb
or
jle
jbe
cmp
dec
addr16
xor
mov
jmp
xchg
adc
daa
xor
sub
adc
mov
mov
xor
adc
repz
mov
mov
cli
std
ins
out
jg
pop
bnd
adc
adc
pop
xchg
je
bound
push
and
cmp
pop
loopne
(bad)
mov
xchg
pop
fsubrp
sub
ins
cs
jmp
popa
mov
loope
jmp
or
out
fwait
or
js
mov
loop
mov
jne
xor
mov
shl
lahf
sbb
stos
shr
popa
cld
fsub
cdq
ins
(bad)
mov
push
lea
adc
inc
mov
dec
movs
and
ins
fisttp
cwde
loopne
add
outs
rol
cwde
sahf
stos
sbb
or
fwait
clc
dec
dec
and
xor
pop
dec
mov
pop
imul
cmp
arpl
and
add
pop
fidiv
cmpxchg
fs
sbb
jecxz
js
xor
call
jnp
xor
xchg
arpl
addr16
pop
sbb
mov
fsub
push
cmc
(bad)
mov
arpl
jb
in
into
add
sti
in
pop
xchg
fst
(bad)
nop
movs
sbb
sub
add
and
or
in
fcmovnu
cwde
sahf
stos
sbb
dec
dec
cmp
dec
data16
sbb
imul
div
sbb
ins
xchg
aad
movs
jnp
or
mov
xchg
xchg
ins
mov
dec
(bad)
cmp
inc
fcmovnbe
adc
das
or
outs
jae
pop
and
push
jnp
bound
lds
sub
out
mov
sub
shr
sbb
adc
and
fs
popf
js
es
les
or
in
pop
add
scas
sub
(bad)
cmps
mov
aas
or
sbb
mov
pop
nop
scas
cmp
out
pop
adc
fs
aam
out
push
and
jle
dec
out
jp
bound
test
mov
je
repz
inc
and
jle
leave
xchg
dec
addr16
ins
in
jg
vmread
fstp
or
mov
sub
das
cdq
int
ins
int3
movs
dec
std
inc
lds
imul
xchg
add
dec
ja
leave
or
cmovl
add
fs
out
js
xor
or
adc
cdq
ins
sbb
jl
jmp
mov
movs
mov
cmp
inc
bound
adc
cmc
inc
mov
loop
(bad)
test
add
call
mov
push
aam
sbb
cmp
sbb
pop
xchg
jno
pushf
push
or
jns
or
and
adc
and
push
mov
jmp
cmp
jb
dec
mov
sub
cmp
cmps
and
(bad)
mov
add
add
loope
test
pop
add
push
fimul
daa
loope
cmc
jmp
pop
or
or
loope
or
xchg
icebp
mov
inc
mov
idiv
push
sbb
fwait
dec
mov
mov
sbb
or
shl
jle
loope
jge
mov
out
sbb
jle
shl
repz
ja
pop
and
lds
mov
and
mov
cmp
(bad)
mov
adc
mov
(bad)
sti
and
jbe
sahf
repnz
aad
dec
push
dec
jno
mov
dec
jl
push
loop
sbb
adc
cli
inc
add
ret
sub
and
jle
pop
sbb
je
icebp
jecxz
stc
leave
test
popf
fs
push
out
push
shr
fidiv
mov
loope
mov
cld
add
movs
pslld
cmp
or
aam
cmp
fistp
and
push
fstp
jg
into
(bad)
out
movs
mov
fst
dec
pop
sub
sahf
push
mov
cmp
jmp
ins
retf
xchg
in
mov
jnp
mov
xchg
int3
mov
mov
scas
mov
cwde
adc
push
sti
in
push
mov
loope
or
xchg
icebp
retf
jecxz
hlt
into
or
cmp
test
mov
sub
push
arpl
inc
adc
cs
or
adc
jmp
sub
sub
and
add
add
mov
inc
lds
(bad)
imul
sar
sub
out
cmp
dec
test
ja
bound
outs
sar
xor
sub
addr16
pushf
enter
or
fst
xor
mov
mov
pop
jmp
test
ret
lods
cmp
mov
in
push
test
adc
js
dec
cmp
arpl
das
pop
(bad)
sahf
and
mov
xor
pop
adc
sti
shl
or
xor
lock
sub
mov
mov
mov
call
mov
imul
pop
ja
call
jl
(bad)
sti
stc
add
lods
push
int3
xor
mov
and
xor
jno
ins
in
jl
mul
mov
cmps
lahf
test
xor
sahf
cmp
out
ds
cmp
jb
cld
pop
loop
push
mov
cmp
cmps
hlt
shl
dec
cmp
call
(bad)
adc
ror
dec
out
jae
test
repnz
pop
das
lahf
xchg
add
ret
inc
fldcw
loopne
jmp
les
mov
add
int3
(bad)
mov
xchg
mov
retf
movs
sti
in
push
int3
xor
fnstsw
aam
jne
into
mov
pop
clc
(bad)
outs
cmp
pop
or
out
add
in
ret
fcomp
xchg
out
lods
outs
hlt
sbb
add
lods
outs
clc
xchg
jle
hlt
in
out
xchg
mov
mov
jbe
pusha
jns
push
mov
cli
lock
scas
xor
and
fistp
mov
mov
inc
in
push
call
mov
repz
js
cmp
mov
xor
pop
mov
and
lock
xchg
dec
addr16
push
xchg
lock
xchg
popf
lods
pushf
jo
les
fwait
push
scas
stos
ret
test
out
(bad)
hlt
gs
dec
add
adc
mov
xchg
and
loope
add
ja
fisttp
inc
lds
cmc
pop
mov
(bad)
pop
mov
fimul
push
mov
cmp
jmp
aam
(bad)
das
(bad)
sahf
add
add
enter
or
sub
popf
add
mov
retf
retf
test
push
lods
add
fsub
dec
jl
enter
mov
push
pop
push
xchg
cmp
loop
std
pusha
call
or
adc
call
jnp
and
mov
ficomp
inc
or
shl
sbb
push
lea
loopne
fs
shl
cld
and
adc
stos
fidivr
data16
mov
mov
sub
retf
faddp
addr16
cmps
push
das
sub
pop
sub
add
fst
mov
xor
fst
mov
neg
xor
ret
fild
pusha
jo
xchg
or
sbb
dec
outs
push
adc
outs
xor
pop
loopne
test
idiv
outs
xchg
pop
and
or
jge
mov
mov
call
and
jmp
adc
push
fimul
xchg
adc
adc
mov
cli
hlt
ret
cld
sub
mov
or
cdq
fdivr
shl
rcl
out
add
(bad)
pop
inc
or
int
push
cmp
popf
mov
inc
sub
repz
call
fcomp
inc
mov
sbb
and
adc
retf
pop
pop
or
pop
and
cs
inc
push
adc
arpl
and
push
das
aaa
dec
jbe
gs
jnp
xchg
mov
or
lods
sbb
imul
std
in
mov
jle
or
mov
test
adc
repnz
mov
(bad)
cld
jne
xor
mov
stc
mov
adc
sbb
fld
jmp
cmp
std
jne
inc
ja
bound
inc
or
push
repnz
push
into
cmps
daa
and
sub
jbe
jo
cmp
pop
or
inc
mov
xor
jo
out
mov
cmp
adc
(bad)
mov
hlt
pextrw
push
mov
retf
imul
ret
or
mov
xor
and
shl
es
fiadd
sub
sti
xor
lahf
xchg
push
shl
rol
mov
jl
les
call
or
(bad)
jbe
shl
popf
jbe
nop
add
fyl2xp1
xor
movs
push
lahf
sbb
test
cmc
pop
mov
sbb
bnd
inc
mul
adc
pusha
dec
cmps
mov
mov
inc
mov
pop
es
lock
push
mov
ret
push
xchg
sbb
movs
(bad)
shl
jno
stos
fst
sbb
xchg
inc
jo
push
imul
ins
adc
add
add
add
pop
jle
fild
sbb
jae
mov
test
mov
xchg
xchg
mov
lea
jmp
push
out
sbb
(bad)
or
lds
xor
add
lahf
pop
retf
in
neg
pop
dec
test
fs
mov
cmps
or
jl
xchg
push
add
(bad)
aam
adc
xor
scas
(bad)
(bad)
repnz
sbb
std
cwde
shr
(bad)
sahf
xor
mov
lds
mov
sbb
movaps
fld
(bad)
pop
(bad)
mov
daa
xor
xchg
leave
xor
sbb
out
in
xchg
jecxz
shl
loop
xchg
cmps
adc
mov
sbb
and
(bad)
out
mov
mov
add
mov
add
pop
dec
adc
movs
xor
iret
stos
das
add
cmc
daa
xchg
rcr
adc
inc
push
or
adc
jbe
outs
out
jne
pop
mov
sub
mov
jo
cmp
fst
sbb
sub
mov
sbb
lahf
shl
pop
cmp
mov
add
cld
aam
push
xchg
popa
shl
mov
(bad)
mov
xchg
adc
loopne
jmp
shl
mov
aaa
daa
stos
sbb
dec
cmp
retf
dec
and
fisttp
test
clc
mov
add
cmps
pop
test
in
stos
push
es
(bad)
or
scas
xor
sub
pop
sbb
mov
or
push
push
sbb
aam
mov
mov
mov
cmp
jns
pop
adc
fwait
hlt
sahf
enter
js
mov
push
jns
fs
sahf
ds
pop
xchg
mov
movs
in
inc
push
call
pop
pop
jnp
fild
sub
mov
mov
ja
push
mov
adc
retf
inc
test
jnp
push
cdq
fnstsw
and
xor
or
jbe
pop
rcl
jecxz
loop
cli
aaa
popa
out
mov
add
gs
xchg
jecxz
push
mov
or
iret
sahf
push
icebp
mov
or
lock
lods
(bad)
sahf
xor
dec
test
mov
sbb
movaps
(bad)
ror
fst
in
mov
jns
mov
xlat
out
in
xchg
jecxz
shl
dec
adc
cmc
mov
mov
iret
cmp
stc
xchg
push
mov
pop
dec
test
fld
test
out
sub
adc
(bad)
mov
sbb
mov
adc
repz
push
jmp
das
push
push
and
cmp
test
xlat
xchg
sbb
jb
jge
adc
movs
pushf
aad
in
xchg
sahf
lock
jne
arpl
jp
xchg
out
cmps
or
aas
fdivp
cld
sub
pop
sbb
dec
(bad)
push
test
rcl
xchg
loop
shl
sbb
das
(bad)
sahf
rcl
xlat
sbb
pop
and
push
idiv
add
dec
dec
test
pop
inc
dec
inc
lock
jno
cmp
scas
sbb
enter
scas
xchg
addr16
sti
mov
dec
cmp
rcl
cmp
adc
add
jmp
ins
xchg
fisub
xchg
sahf
dec
jl
jno
push
jle
cmp
js
mov
out
adc
jae
push
jmp
pop
and
push
mov
cmp
out
test
out
mov
cdq
mov
mov
fs
sbb
btr
data16
jb
jae
xor
jmp
pop
or
fist
fcomp
push
mov
in
xchg
and
sbb
(bad)
mov
sahf
pop
push
add
pop
daa
retf
mov
add
push
out
(bad)
cmp
adc
cmp
sbb
xchg
ret
push
mov
add
dec
sbb
icebp
inc
cmp
mov
in
sbb
aad
in
dec
pop
and
mov
stos
mov
(bad)
rol
xchg
fimul
js
mov
sbb
or
addr16
pop
mov
fucomip
jno
sub
mov
jecxz
jbe
push
inc
ds
enter
fcomp
iret
int3
ins
hlt
xchg
and
nop
sub
or
pop
mov
mov
stc
jmp
ror
and
and
cwde
or
xchg
sbb
inc
push
mov
ret
xchg
fisub
and
sub
call
jg
lock
jp
mov
imul
cdq
loopne
movs
out
xchg
and
push
xchg
adc
rcl
ss
mov
cmp
movs
lds
adc
div
and
(bad)
sahf
cmc
adc
mov
sti
(bad)
adc
bound
adc
fcomp
iret
int3
fs
xchg
and
cwde
mov
mov
push
shr
repz
(bad)
(bad)
and
pop
jno
push
dec
or
push
dec
or
add
or
adc
sbb
pop
or
aas
add
xchg
dec
imul
bound
xchg
out
mov
mov
jg
cwde
add
push
enter
fxch
xor
and
jp
(bad)
dec
stc
clc
and
adc
dec
inc
ss
(bad)
cmp
jb
mov
cmp
push
sbb
movs
stc
push
into
cmp
and
push
xor
int
and
ficomp
jo
push
out
(bad)
cmp
adc
cmp
sbb
xchg
ret
push
mov
add
dec
sbb
icebp
inc
cmp
mov
in
sbb
aad
in
adc
or
jge
jp
cdq
mov
add
(bad)
xor
lahf
add
push
js
neg
mov
or
sbb
adc
mov
xchg
das
inc
add
(bad)
mov
mov
jb
bound
rol
retf
mov
repnz
test
inc
dec
jl
mov
mov
cdq
pop
push
add
xchg
daa
jl
out
mov
pusha
repz
div
push
xchg
call
and
lods
sbb
sub
arpl
loopne
ret
lock
mov
fwait
or
clc
rdpmc
int
pop
and
(bad)
pop
mov
push
aaa
out
int
cmp
icebp
dec
fdiv
sbb
adc
and
sub
sbb
loop
inc
outs
mov
mov
xor
repz
ffreep
mov
fld
adc
xchg
and
adc
sbb
out
pop
leave
mul
je
mov
imul
or
add
(bad)
adc
xlat
add
or
sub
sbb
loope
xchg
fiadd
jno
push
or
jge
jp
adc
jp
clc
loope
adc
sub
call
mov
mov
mov
push
mov
outs
sbb
pushf
adc
add
sub
mov
pop
cmp
mov
mov
xchg
dec
dec
test
push
rcl
xchg
fs
mov
xchg
sbb
push
jg
mov
jmp
scas
jno
push
sbb
add
(bad)
push
repz
retf
sbb
cs
dec
in
cld
push
(bad)
push
adc
lea
push
jle
clc
sub
fistp
in
mov
mov
mov
mov
xchg
out
fcom
xchg
mov
das
(bad)
pop
test
mov
es
or
jbe
in
jbe
push
inc
or
add
(bad)
or
lds
ins
adc
cmp
and
mov
cwde
out
shl
ds
int
repz
sbb
inc
pop
push
sbb
add
repz
sbb
test
sub
shl
xchg
jne
shl
ret
loope
inc
stc
pop
mov
pushf
call
inc
shl
call
mov
dec
inc
les
and
ror
scas
rcl
rol
(bad)
fild
push
sbb
or
mov
add
inc
dec
test
pop
mov
push
xor
ins
cmp
push
pop
test
in
bound
adc
pusha
shl
in
or
xchg
sbb
or
mov
or
xchg
inc
cwde
repz
mov
dec
shr
sahf
xchg
mov
add
fidivr
data16
out
push
fs
adc
mov
aam
cld
mov
rcr
mov
lds
adc
(bad)
mov
cwde
cdq
stos
cmp
sub
(bad)
mov
push
mov
adc
jb
adc
mov
pop
pop
dec
test
push
dec
jl
sbb
addr16
retf
call
xor
call
sub
out
push
lods
out
sub
fst
mov
pop
repz
sbb
jo
mov
test
or
ins
xchg
xchg
dec
or
int
ror
lock
xor
mov
xor
inc
and
sbb
into
les
dec
pop
mov
jo
pop
(bad)
rcr
loop
cmovno
add
repz
movs
fbstp
inc
dec
neg
lock
push
dec
stc
cmp
jl
leave
loop
loopne
push
pop
test
in
arpl
xlat
xchg
mov
call
div
inc
push
dec
cwde
xchg
sbb
js
sbb
mov
es
sbb
ficomp
and
add
bts
push
test
shl
mov
and
push
mov
xor
rol
xor
add
add
add
ret
mov
(bad)
sti
xor
xlat
mov
sbb
pop
dec
divps
inc
dec
jl
mov
out
xor
ins
mov
ret
repnz
gs
in
push
out
jge
cmp
out
fdivr
sbb
adc
(bad)
push
cmp
xchg
or
cmp
pop
mov
cdq
frndint
daa
dec
shr
fadd
mov
add
xchg
xchg
add
mov
inc
data16
sub
jp
mov
mov
pop
adc
mov
in
jbe
push
inc
cmp
enter
fcomp
iret
retf
ins
hlt
xchg
and
xchg
sub
or
repnz
push
jmp
and
push
fs
jb
sbb
pop
call
iret
push
sbb
and
cmp
or
mov
mov
stos
cmp
out
repz
xchg
and
push
mov
and
in
adc
in
jnp
retf
rcl
xchg
out
lds
(bad)
sbb
xchg
movs
jecxz
fistp
std
lock
inc
jecxz
jecxz
repnz
pop
dec
mov
inc
dec
jl
cwde
test
mov
xchg
arpl
add
jmp
jnp
jp
fs
fisubr
repz
fldcw
add
aas
sbb
ins
xchg
sbb
cwde
aad
and
pop
dec
lods
je
dec
pop
in
jne
icebp
mov
loop
cmp
in
popf
fild
mov
ss
cmp
add
les
call
mov
add
sub
mov
(bad)
adc
or
dec
xlat
mov
enter
fcomp
jg
je
xchg
and
xchg
pop
jo
jl
inc
xor
shl
add
xor
jno
outs
sbb
(bad)
and
enter
dec
xchg
rcr
fwait
int
push
push
push
push
sbb
aad
movs
sbb
(bad)
adc
add
xchg
aad
jns
jnp
ror
in
jnp
test
scas
xor
mov
lahf
cmp
mov
scas
adc
pop
sti
cmp
pop
dec
pcmpeqw
xchg
ffreep
sub
enter
jecxz
dec
leave
cs
xchg
and
mov
(bad)
mov
xchg
retf
xchg
popf
mov
pop
cmps
xchg
or
mov
retf
inc
scas
jecxz
push
dec
adc
shl
and
sub
cmp
aad
cs
jmp
aas
or
and
adc
mov
adc
lock
sti
inc
adc
retf
mov
push
out
arpl
push
mov
fild
mov
ds
sub
popa
push
in
xlat
add
sub
daa
push
jmp
push
inc
pop
add
mov
or
or
cli
jge
cmps
jbe
sbb
into
lods
adc
jecxz
retf
jp
sbb
add
pop
jns
push
sbb
pop
imul
test
inc
aad
mov
xchg
(bad)
mov
popf
pop
sbb
stos
adc
inc
xor
dec
sbb
div
sub
add
lods
xor
jmp
cwde
sub
mov
cdq
adc
add
ret
mov
dec
add
addr16
test
stos
pop
js
push
ror
jno
jnp
add
adc
mov
jae
push
add
sub
cli
in
add
sbb
data16
out
sub
call
or
neg
in
jnp
dec
add
adc
mov
leave
mov
(bad)
push
xor
call
movs
sub
cmp
push
ret
dec
addr16
mov
ret
shr
arpl
xchg
retf
and
push
mov
fmul
jle
jmp
(bad)
inc
sub
add
xchg
cmp
ret
(bad)
mov
cmps
ss
pop
ficomp
(bad)
jl
lea
fcom
cmps
sbb
dec
outs
and
pop
loope
push
daa
ss
fwait
int
in
ret
mov
adc
xchg
hlt
ret
aad
cld
sub
loop
bound
into
les
or
push
loop
cmp
lds
mov
rcr
aad
dec
push
lods
or
jbe
in
repz
push
inc
and
push
dec
test
push
jl
repnz
and
call
mov
push
shr
xlat
sbb
ss
and
cmp
or
xchg
sbb
dec
jb
sbb
jae
cdq
outs
push
cmp
(bad)
fsubrp
cwde
sbb
cli
in
dec
test
ds
iret
imul
jnp
fisubr
(bad)
pop
mov
bound
mov
retf
loope
enter
lds
xchg
mov
cmp
retf
sub
shr
int
retf
test
fcomip
sub
retf
rcl
or
clc
inc
adc
pop
pushf
xchg
inc
cs
xchg
pop
mov
xor
mov
jne
call
mov
xor
cmp
test
push
sbb
ja
cmp
shl
xchg
sahf
hlt
mov
add
and
sub
lahf
enter
test
cmc
ja
mov
mov
cld
es
dec
dec
xor
int
ins
jp
inc
sti
push
int
sub
push
add
enter
sub
dec
add
jb
cmovs
hlt
push
jbe
movs
fld
jne
ins
daa
jle
leave
lea
pop
xchg
xchg
mov
add
iret
sbb
cmps
add
mov
push
sar
(bad)
xchg
test
pop
sub
push
out
adc
shr
shr
xchg
mov
xlat
das
sti
jns
ficom
or
sar
enter
cdq
mov
add
jne
inc
sub
sub
out
add
test
movs
fadd
lea
out
sti
sub
sbb
add
movhps
mov
rcl
add
adc
gs
add
sti
dec
js
sti
push
and
cmp
out
loope
jo
xor
(bad)
repz
inc
jp
aad
out
ins
push
pop
add
mov
or
leave
ror
test
sub
jo
hlt
ret
hlt
loope
sub
xchg
pop
or
mov
(bad)
cmp
lds
lock
mov
dec
push
sti
cmp
push
mul
popa
lds
lods
leave
pop
imul
xor
sar
pop
pushf
fnstenv
test
cli
dec
adc
leave
mov
inc
cs
sbb
scas
ror
jmp
daa
out
xlat
fprem1
xor
mov
fst
cmp
xchg
xor
cld
pop
adc
jmp
not
sbb
xchg
xchg
mov
jnp
fiadd
aad
cmp
aas
and
xchg
in
or
clc
outs
imul
inc
cmp
adc
mul
das
push
jl
(bad)
std
fldl2t
mov
xor
adc
test
scas
adc
(bad)
cmc
xchg
push
sbb
xchg
loope
cmp
fsubrp
adc
not
imul
outs
loope
mov
sub
out
push
and
les
xor
sbb
cmp
xchg
sub
hlt
sahf
add
ret
sbb
mov
push
and
and
cli
jp
adc
mov
add
nop
or
and
fbstp
in
xchg
xchg
or
rcl
call
pusha
cmp
pop
add
xchg
add
or
ss
jmp
iret
add
imul
xor
mov
mov
fdivr
repnz
pop
sub
and
sub
jo
aas
and
fucomip
ss
xor
imul
or
mov
addr16
xchg
ror
push
into
xor
pushf
pusha
xchg
scas
pop
enter
js
pop
test
jno
dec
fiadd
test
into
adc
add
fidivr
data16
iret
cdq
icebp
inc
fucom
popf
into
mov
in
adc
dec
mov
sub
or
fadd
rcl
cmc
popf
add
adc
inc
call
dec
dec
mov
add
add
jnp
add
xchg
iret
xor
push
pop
or
aaa
jmp
js
pop
in
bound
int3
cld
sbb
xchg
push
(bad)
xchg
into
jecxz
cwde
xlat
nop
xchg
push
xor
sbb
mov
popa
hlt
add
mov
dec
scas
sub
pop
push
cmps
inc
and
jnp
dec
dec
xor
rcr
jmp
xor
adc
add
loop
or
rcl
lock
add
xchg
repz
aam
cmps
mov
inc
icebp
push
xchg
and
call
push
add
movs
neg
iret
mov
inc
ss
xor
cmps
aam
les
dec
xchg
pop
pop
pop
scas
jmp
jne
cmp
fcom
aad
cmc
es
adc
adc
cmp
cmp
gs
jecxz
add
add
push
adc
xor
sbb
cmp
xchg
enter
or
loope
adc
ret
push
aaa
cmps
cmp
mov
out
sbb
xor
jae
bound
retf
cmp
xor
and
movs
fadd
mov
test
fsub
or
out
(bad)
icebp
in
inc
loop
mov
stos
mov
je
pop
pop
lock
ret
jmp
scas
xlat
lea
xor
and
dec
pop
sub
add
mov
sub
clc
stc
jp
sbb
btc
pop
test
loop
pusha
jns
ins
in
imul
add
pop
cmp
test
sahf
add
ret
mov
(bad)
(bad)
jb
jp
cmp
stc
cwde
pop
xor
dec
test
sbb
add
xchg
xchg
push
push
sbb
std
sub
dec
shl
in
push
fdiv
mov
out
shl
repz
pop
std
sub
push
scas
imul
(bad)
fadd
test
(bad)
call
sbb
cld
dec
popa
(bad)
push
sub
sbb
js
mov
mov
dec
mov
pop
mov
sahf
movs
mov
std
mov
sbb
ret
lods
mov
ret
shl
mov
data16
mov
xor
adc
pop
or
and
xlat
pop
cmps
dec
jl
sbb
inc
mov
add
cmp
cmps
lods
pop
mov
push
bound
bound
add
push
xlat
xchg
mov
cmp
sti
dec
idiv
stos
jae
(bad)
(bad)
mov
(bad)
sbb
jbe
inc
repnz
xchg
push
adc
jnp
fisub
stc
sar
scas
or
jb
or
popf
lea
test
inc
iret
(bad)
ins
jp
dec
std
pop
lds
popa
rol
pusha
sub
(bad)
mov
cmps
xchg
inc
out
xchg
inc
sub
data16
inc
dec
jl
out
dec
adc
test
add
xchg
rcr
jmp
pop
xchg
add
add
xchg
fs
es
add
xlat
push
sbb
and
dec
je
or
push
add
xchg
in
les
repnz
adc
test
and
sbb
movs
pop
fistp
data16
mov
aaa
dec
and
jecxz
pop
cmp
jle
push
jmp
dec
adc
mov
imul
jmp
xor
fwait
ds
sbb
pop
stc
inc
dec
jl
call
sub
add
shr
icebp
jno
aam
mov
fcomi
dec
jbe
dec
push
pop
hlt
ret
ss
dec
jecxz
mov
xchg
cmp
ins
test
outs
inc
mov
inc
ds
mov
dec
or
leave
popw
test
ins
je
into
sbb
hlt
in
pusha
pusha
xlat
inc
stos
push
aaa
cmp
xchg
sahf
cmp
lods
cmp
loopne
mov
test
mov
add
fcomp
fiadd
retf
mov
jle
fld
dec
jl
push
outs
js
sub
xchg
sbb
or
stos
sub
push
jmp
and
push
scas
jno
push
sbb
push
pop
cmp
cmp
ret
sbb
icebp
cmp
lahf
sub
call
test
and
jg
mov
out
adc
mov
jmp
(bad)
ds
xlat
cmp
mov
out
adc
(bad)
pop
test
mov
nop
lea
cmp
into
push
retf
jns
sti
rcl
inc
pop
dec
divps
inc
dec
jl
cmp
movs
jp
aas
mov
inc
push
outs
cmps
push
pusha
out
xlat
gs
jg
test
or
(bad)
jecxz
loope
xchg
sub
std
fcom
mov
aas
cld
jne
cwde
xchg
in
jns
ds
ret
mov
push
in
leave
ret
ror
sub
sti
cmp
cli
maxps
push
popf
fidiv
pop
mov
add
(bad)
(bad)
sbb
(bad)
dec
add
sti
stc
pop
and
xlat
and
test
(bad)
int
pop
int3
xchg
and
inc
pusha
add
cmps
pop
add
add
and
lock
push
in
cmps
cmp
out
xchg
call
aam
pop
rol
ret
es
mov
outs
sti
dec
sbb
xchg
in
and
sub
dec
out
inc
sbb
jbe
jle
sbb
sbb
mov
(bad)
cmps
mov
scas
push
mov
out
jbe
jle
xor
mov
lock
int
data16
jmp
inc
mov
dec
test
mov
stc
xor
and
dec
repz
shl
iret
int3
xchg
and
and
bound
es
jp
dec
sti
(bad)
push
fmul
jnp
and
inc
mov
add
xchg
sbb
jno
add
xlat
fisubr
add
jb
add
test
push
es
outs
xor
mov
movs
cmp
mov
inc
cmp
mov
cmc
jl
call
sti
sub
or
cdq
push
aaa
sbb
push
mov
add
(bad)
enter
mov
inc
dec
inc
mov
mov
and
fisttp
sbb
push
pop
inc
pop
inc
(bad)
movs
jecxz
cmps
mov
push
daa
mov
xchg
dec
pop
das
or
(bad)
push
cmp
inc
pop
push
xchg
and
cmp
jp
outs
adc
in
add
mov
fcomip
sar
xchg
out
or
pop
repz
loop
sub
inc
cmp
imul
sar
add
and
xor
sub
fmul
push
add
mov
jb
in
iret
mov
jb
aad
ret
psubsb
jb
ret
sbb
cmp
push
xchg
add
pop
dec
pusha
mov
adc
repz
push
add
lea
inc
pop
push
popf
jmp
ins
cwde
aad
push
call
mov
cli
cmp
push
jmp
inc
imul
arpl
xchg
push
jnp
mov
xor
icebp
sub
fdiv
push
into
jmp
cmps
jmp
rol
add
sub
xchg
jge
sti
mov
rcl
ror
mov
and
push
mov
mov
adc
ins
loope
stc
mov
test
(bad)
out
cs
out
fwait
sbb
add
fst
cli
xor
clc
mov
xchg
pop
and
cwde
sub
cmp
gs
adc
jmp
das
jp
mov
add
adc
pop
mov
jae
mov
outs
mov
enter
sahf
fwait
xlat
ins
mov
jo
sub
outs
pop
pushf
ret
bound
dec
inc
enter
ret
data16
inc
add
hlt
aam
add
dec
inc
xor
into
dec
cmp
sbb
(bad)
fimul
addr16
in
movs
fdiv
push
sbb
jb
(bad)
out
popf
repz
mov
adc
sub
fwait
shr
dec
imul
xchg
out
stos
shl
cs
sbb
mov
jl
jmp
mov
mov
lock
cmps
pop
cmp
or
pop
ins
xor
jmp
clc
nop
or
sti
mov
xchg
popf
jecxz
(bad)
cmc
mov
ins
sbb
fsubr
or
out
bound
or
into
cs
outs
sbb
push
pop
(bad)
jl
sub
fsubrp
sbb
(bad)
fst
lods
jno
inc
leave
push
test
mov
add
add
je
fwait
or
(bad)
sar
jo
xchg
(bad)
cmp
cmp
shl
or
stc
mov
add
cwde
adc
add
push
xchg
push
inc
dec
lea
and
mov
dec
sub
dec
std
pop
outs
and
adc
cmp
pop
pop
sbb
mov
repz
retf
xor
in
fst
repnz
and
push
mov
fdivr
adc
pop
dec
cmp
pop
arpl
inc
jb
pop
arpl
int3
adc
cld
sub
sahf
ds
in
mulps
lds
xchg
and
int3
sbb
pop
in
cmps
jmp
cmp
je
jb
dec
(bad)
iret
ss
repnz
ret
paddsb
xor
cwde
out
dec
pop
test
shl
repz
sub
out
push
and
mov
ret
dec
sub
xor
aas
xlat
push
sbb
inc
mov
pop
arpl
int
popa
fidivr
jle
jmp
pop
aas
jne
jp
cld
jae
mov
jl
stos
jl
mov
push
jmp
data16
aad
ja
clc
adc
dec
dec
ror
push
push
pop
rcl
sbb
xchg
mov
push
mov
(bad)
or
retf
iret
sar
xchg
cmc
sub
jae
repnz
jg
not
cmp
xchg
adc
xor
enter
imul
fucomp
shr
enter
imul
or
scas
cmp
in
sub
lds
pushf
inc
or
mov
gs
das
mov
xchg
or
push
sbb
bound
mov
and
pop
cmp
repnz
cmc
shl
(bad)
sub
test
add
ja
jg
aaa
add
xchg
in
repz
or
push
cwde
dec
(bad)
and
push
jno
inc
pusha
addr16
jg
clc
bound
nop
scas
pop
and
repz
out
push
fwait
fwait
jnp
out
fldenv
imul
cli
mov
mov
xchg
pop
hlt
retf
or
xlat
push
int3
cmp
xchg
je
sub
push
xor
push
mov
js
mov
ret
gs
fisttp
into
ss
mov
pop
cmp
loop
mov
fucomp
repnz
(bad)
sahf
pop
enter
pop
sar
std
popf
add
xchg
cli
inc
cli
push
jb
mov
je
pushf
inc
sar
ret
int3
push
in
iret
jo
jae
inc
or
push
pop
pop
or
dec
adc
bound
fnstsw
push
push
ins
pop
fstp
pop
jb
out
hlt
cmp
aas
ins
gs
mov
jmp
sbb
rcl
add
jle
mov
(bad)
push
retf
jecxz
or
add
mov
test
xor
mov
jmp
out
call
push
imul
cmp
mov
popf
retf
test
retf
fs
ds
mov
movs
sub
enter
(bad)
xor
add
cmp
mov
mov
xchg
stos
fisttp
(bad)
jmp
out
imul
lahf
lock
adc
ins
push
xchg
arpl
pop
outs
push
int3
cmp
jne
pop
add
sub
cli
mov
sbb
int3
js
push
test
pusha
jns
mov
mov
into
inc
dec
xor
pop
push
sbb
enter
das
(bad)
rcr
push
inc
or
mov
xchg
imul
out
cli
jb
push
popf
call
jns
ror
add
and
and
jnp
out
neg
loop
out
push
jecxz
popa
and
jo
jmp
movs
adc
jmp
out
imul
cdq
fs
pushf
retf
jns
pop
push
xchg
shr
inc
js
mov
xchg
test
push
xchg
gs
inc
push
jle
push
popa
jns
das
jbe
setle
mov
and
push
out
pop
in
aad
ins
(bad)
sub
sub
dec
gs
pop
jbe
lds
mov
xor
mov
shl
dec
jl
int3
jp
cwde
(bad)
jne
pop
push
pop
push
xchg
xchg
mov
add
xlat
adc
xchg
xor
sub
call
loopne
inc
jb
xor
arpl
(bad)
fsubp
(bad)
adc
mov
sub
fs
test
mov
sub
jbe
or
int
call
repnz
dec
mov
popa
in
pop
mov
rcr
sbb
mov
shl
into
cmp
mov
xor
or
xor
jg
ret
in
fcom
scas
sub
cli
add
push
and
sbb
add
lea
inc
pop
push
and
or
fucomip
xchg
in
test
fnstsw
jno
fiadd
jp
jl
pop
btc
enter
ret
push
int3
push
jnp
bound
jg
and
sbb
pop
vcvtdq2ps
jmp
and
pop
jno
(bad)
push
jno
mov
out
dec
xchg
aas
(bad)
add
mov
pop
inc
ret
dec
jmp
sub
jp
shr
in
lock
shr
add
xchg
push
xchg
push
or
hlt
and
mov
jle
dec
mov
jae
push
out
hlt
add
ja
outs
rsqrtps
dec
or
outs
cmp
push
dec
dec
jb
xchg
rol
ds
sub
sub
mov
leave
es
outs
mov
sbb
adc
adc
cmp
ret
int3
cmc
jmp
pop
push
xchg
add
ret
add
iret
test
hlt
test
xchg
xchg
das
pop
push
sbb
mov
call
pusha
xor
mov
xchg
loopne
pop
dec
jns
mov
shr
jae
inc
pslld
loope
push
add
adc
sbb
aas
jno
leave
xor
pop
les
call
daa
dec
shr
popa
xor
dec
ficom
lock
jge
add
xor
add
shl
mov
lds
(bad)
out
iret
add
inc
xchg
and
pop
imul
mov
call
mov
mov
lods
ins
or
sbb
shr
and
inc
fistp
mov
jmp
pop
lods
mov
daa
adc
pop
adc
push
cmp
mov
sub
pand
inc
lock
je
adc
dec
mov
and
ret
mov
test
hlt
leave
pop
jns
pop
daa
dec
xor
dec
repnz
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
or
mov
call
mov
in
ja
add
add
add
jns
scas
(bad)
out
jle
addr16
mov
jno
mov
shl
dec
xchg
jo
mov
cmp
movs
daa
xchg
cmp
out
outs
xor
sar
jmp
(bad)
mov
mov
jnp
int3
add
xchg
push
xchg
rol
test
hlt
mov
mov
test
sub
aad
or
xchg
rcr
lods
out
shr
(bad)
mov
in
mov
movs
rcr
in
popa
dec
sbb
mov
mov
xchg
ret
push
push
dec
push
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pop
lock
cdq
adc
xlat
mov
cs
mov
pop
mov
shl
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
or
in
mov
sar
xor
cdq
cmp
iret
sbb
fdivr
cmps
xchg
push
xchg
scas
dec
rol
je
xchg
push
or
dec
and
or
cmc
popf
dec
cld
mov
adc
mov
adc
(bad)
mov
in
mov
idiv
nop
rol
test
mov
jo
leave
cwde
jns
(bad)
loopne
arpl
add
xchg
sbb
arpl
cmp
pop
aas
imul
rcl
xchg
jg
shl
daa
fist
clc
push
inc
mov
push
test
mov
shl
mov
cmp
jno
sar
mov
jmp
icebp
xchg
push
sbb
jp
loope
cmc
push
inc
out
mov
cdq
pop
lahf
loopne
dec
mov
pop
or
xlat
xlat
(bad)
scas
in
mov
xchg
test
test
in
je
(bad)
sahf
js
mov
adc
pop
retf
ror
sahf
sahf
pop
ins
xor
sub
sbb
push
std
(bad)
jno
imul
mov
jmp
fwait
pusha
ja
add
add
repz
push
mov
dec
xchg
dec
outs
jae
stos
(bad)
imul
test
cmp
xchg
and
push
retf
pushf
mov
pop
repnz
lods
xchg
mov
push
xchg
push
sbb
stos
cmp
cmc
mov
jmp
add
ret
mov
call
hlt
jbe
cmp
in
ja
aam
jne
cmps
(bad)
in
popa
cmp
adc
mov
inc
ss
in
sbb
out
bound
outs
mov
mov
or
es
sahf
pop
outs
jge
mov
jns
(bad)
aas
cmp
xlat
cmp
pop
enter
cmc
mov
movs
pushf
mov
mov
add
cli
jnp
mov
pushf
test
out
out
push
sar
mov
mul
call
mov
push
shr
mov
cmp
outs
push
xchg
pop
mov
xchg
pushf
and
div
xchg
inc
jl
pop
in
je
ins
je
(bad)
mov
push
fsub
or
or
jbe
xchg
je
stos
jle
ins
ret
mov
and
cmc
mov
lods
xchg
adc
push
xchg
push
adc
jmp
fdivp
pusha
xchg
push
out
mov
nop
dec
lahf
div
mov
lods
(bad)
fadd
retf
mov
mov
icebp
jg
push
dec
mov
pushf
js
test
mov
or
std
mov
xor
sub
sub
xchg
in
or
push
cli
aam
pushw
sbb
iret
xchg
add
jecxz
daa
lahf
cmp
cmp
in
push
shl
xor
push
aam
loop
push
mov
push
loop
dec
sbb
idiv
or
mov
stc
jmp
dec
push
mov
adc
jne
repz
inc
mov
sahf
jl
xbegin
jne
cdq
adc
cwde
xor
sub
dec
out
mov
sub
jb
std
xchg
jg
scas
mov
lahf
(bad)
sahf
pusha
adc
push
out
xor
push
or
div
mov
mov
mov
cdq
sub
(bad)
movs
in
(bad)
jmp
push
cdq
dec
push
mov
cld
pushf
out
mov
xchg
pop
mov
ret
cld
pop
mul
jg
mov
ds
cmps
fcom
xor
mov
mov
mov
jo
push
inc
(bad)
clc
outs
mov
mov
out
dec
adc
cdq
adc
lea
imul
mov
xchg
push
sbb
loopne
cli
pop
imul
mov
nop
xor
push
sar
sbb
push
std
sbb
mov
xlat
and
lahf
sub
je
enter
cs
movs
xchg
lea
mov
adc
test
fst
mov
cdq
inc
lahf
in
bound
mov
push
cmps
(bad)
rol
retf
mov
in
cmps
xchg
rol
stc
ror
mov
cwde
jbe
(bad)
jmp
add
sahf
add
xchg
cmp
and
sub
sub
lock
dec
add
(bad)
jae
add
shl
jle
or
cmp
test
pusha
sbb
ja
aas
hlt
loopne
sbb
sahf
aas
pop
fnsave
ret
jmp
cli
movs
call
and
mov
or
and
rcl
arpl
movs
mov
add
xlat
xlat
lds
stc
stc
xchg
ret
addr16
cmp
std
push
cmps
mov
sti
cvtdq2ps
outs
or
(bad)
int3
xchg
call
jmp
xchg
xchg
push
sbb
std
mov
jp
outs
jno
mov
les
xchg
stc
dec
pop
ficom
pop
(bad)
jno
repz
test
shr
xlat
ss
xchg
sub
fcomi
mov
lods
test
xchg
inc
push
xchg
jp
xchg
out
fwait
jns
xor
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
fdiv
add
mov
movs
cli
out
pop
pop
fs
xchg
pop
mov
mov
loope
test
cld
inc
adc
jmp
push
jno
mov
retf
cmp
adc
cmp
adc
js
mov
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
pop
jecxz
not
retf
add
sbb
sbb
cld
cmp
(bad)
arpl
rcr
je
scas
stos
pop
or
ret
leave
frstor
repz
shr
mov
jno
rcl
cli
and
ins
or
retf
mov
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
add
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
dec
dec
pop
push
pop
xchg
out
and
cli
cmps
dec
inc
mov
(bad)
fisttp
inc
dec
(bad)
rcr
sahf
pop
cli
cmp
out
sbb
icebp
dec
aas
lods
push
fucomp
leave
aam
cs
sahf
int
in
ret
cmps
jne
mov
repnz
push
repz
pusha
push
pushf
pushf
dec
adc
stos
fmul
out
repnz
test
pusha
(bad)
pop
inc
mov
test
cmps
in
pop
dec
add
or
jb
outs
mov
adc
cmp
fcomp
inc
dec
jl
xchg
and
aas
push
not
or
ins
mov
mov
mov
mov
dec
out
push
and
mov
repz
cmc
and
fs
xlat
add
mov
dec
in
jp
(bad)
jmp
xchg
and
dec
pop
mov
mov
pushf
hlt
push
push
sar
out
js
mov
ret
mov
idiv
out
movs
in
push
rcl
mov
lods
outs
lods
mov
and
mov
movs
jae
mov
aas
jae
das
call
sbb
inc
loopne
loop
bound
add
fdiv
sub
or
retf
xor
sbb
jl
clc
jne
scas
outs
fbld
mov
jne
icebp
andnps
jp
sti
repz
mov
jbe
nop
and
mov
xlat
rol
sahf
jbe
movs
cwde
cdq
pop
(bad)
bnd
rcr
aam
ret
sar
xchg
jmp
shl
scas
sahf
inc
mov
mov
cmp
mov
sahf
lahf
sub
daa
add
mov
and
adc
push
out
(bad)
out
push
fcmovbe
xor
mov
out
push
inc
out
sbb
imul
outs
stc
xchg
popa
fsubr
xlat
push
jno
xchg
ds
ret
(bad)
cdq
mov
sti
test
jnp
loopne
sbb
cs
mov
inc
aad
bound
xchg
inc
lahf
lds
mov
dec
adc
shr
ficomp
std
lds
int
inc
mov
stos
sbb
jp
es
lea
cmps
arpl
imul
test
cmp
lahf
clc
inc
pop
inc
inc
out
jmp
scas
mov
xchg
rol
lahf
out
fs
sub
imul
dec
sar
adc
bound
rcl
mov
mov
pop
in
push
cmp
pandn
mov
jg
xchg
fs
push
repz
mov
int3
bnd
movs
fistp
inc
mov
add
mov
call
loope
(bad)
jnp
cmps
jmp
mov
mov
out
pop
pop
jne
stos
add
mov
and
in
idiv
loopne
ss
int3
fsubr
outs
push
(bad)
mov
and
add
stc
pop
inc
shl
fwait
cmp
dec
ins
mov
jns
mov
sar
cmp
nop
and
sbb
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
retf
xchg
imul
dec
out
pop
ins
mov
sbb
mov
jns
xchg
outs
(bad)
pusha
adc
sbb
icebp
dec
test
pop
xchg
popa
xlat
xchg
in
(bad)
int
scas
xor
sbb
mov
mov
mov
dec
cli
jge
xchg
cmc
sahf
fiadd
sbb
or
lock
lds
fwait
xchg
out
les
neg
ins
mov
xchg
mov
mov
cmp
js
jb
inc
mov
cmp
add
fld
xor
jno
mov
sbb
scas
push
inc
jmp
repz
jae
or
mov
idiv
outs
pop
ja
std
jne
mov
mov
ret
push
jne
adc
add
fisubr
fucom
aad
cs
push
enter
(bad)
addr16
sbb
or
xchg
cmc
mov
dec
loopne
dec
push
jbe
ret
retf
and
stc
mov
pop
mov
call
mov
cmp
movs
es
rol
mov
dec
xchg
ffree
bound
addr16
jl
loopne
mov
je
frstor
jae
leave
xor
and
mov
xlat
js
scas
pusha
fidivr
movs
ss
stc
jbe
ret
out
aad
cs
push
enter
xchg
jnp
xchg
dec
pop
cwde
push
mov
cmp
lahf
outs
retf
mov
jno
pushf
mov
push
mov
cmc
shl
shl
jae
out
mov
fdisi(8087
push
sbb
and
push
scas
arpl
sub
cs
div
mov
mov
mov
or
dec
mov
mov
push
mov
xchg
fisttp
cdq
cmp
sbb
ret
xchg
jl
jle
mov
pop
pop
out
jno
sar
stos
inc
jecxz
stos
test
inc
push
pushf
jp
imul
push
fwait
lods
pop
div
jle
movs
mov
hlt
fcom
mov
repz
fsub
test
jo
leave
cwde
js
mov
inc
add
add
adc
sti
and
sahf
lea
imul
lea
or
xor
rol
ins
je
gs
fdivr
push
jge
add
cmp
sbb
mov
dec
fsubp
sub
sub
shl
adc
shr
fisttp
mov
shl
push
mov
pop
rcl
sahf
in
push
push
ret
xchg
dec
imul
jo
loopne
pop
add
int
out
mov
cmps
cmps
jmp
xor
(bad)
pop
inc
mov
lea
std
test
arpl
and
leave
xchg
and
xor
mov
sahf
out
pop
gs
cmp
ret
mov
call
pop
push
ret
test
je
rcl
jae
mov
fnstsw
cmp
xchg
and
int
mov
(bad)
test
adc
pop
lea
fiadd
ins
aad
test
lock
inc
mov
pop
or
xchg
hlt
loop
lds
(bad)
jecxz
div
dec
pop
mul
adc
(bad)
retf
out
dec
adc
(bad)
ds
push
in
adc
aas
aas
in
mov
jl
cmp
adc
jecxz
dec
sub
sub
fsub
and
retf
mov
int
inc
ss
pushf
pop
jmp
out
xchg
cmp
xchg
and
xabort
mov
jmp
mov
adc
jg
lahf
arpl
adc
mov
mov
movs
lods
adc
push
stos
fmul
mov
int
mov
fwait
cmc
mov
adc
mov
cmp
mov
inc
push
inc
inc
into
pop
cli
cmp
mov
jnp
jle
mov
jbe
mov
rcr
sub
shl
test
scas
mov
cmp
scas
or
mov
add
(bad)
xor
jmp
cmp
and
xor
sub
jbe
scas
jmp
cld
loopne
sbb
xor
out
in
outs
call
jmp
jb
scas
mov
rcl
(bad)
leave
rcl
in
div
dec
pop
(bad)
int
mov
popf
jl
mov
sub
mov
out
mov
aas
neg
mov
sub
xchg
push
adc
jbe
lds
jge
shl
pop
xchg
xchg
cmp
xor
sbb
inc
lahf
imul
mov
imul
loope
fiadd
mov
jno
xchg
push
sbb
jmp
lahf
push
ret
mov
into
jle
mov
dec
pop
outs
mov
jmp
lds
lock
ret
mov
dec
movs
lods
pop
add
js
and
arpl
dec
or
jecxz
scas
mov
dec
xlat
mov
xor
sbb
add
add
js
jo
scas
cli
loop
ins
addr16
mov
mov
jae
or
push
mov
dec
dec
xchg
stc
outs
inc
pop
sar
mov
add
fisubr
into
icebp
mov
jnp
sti
mov
jnp
xchg
inc
add
repnz
push
mov
mov
push
mov
push
or
les
stos
jg
test
in
data16
loope
je
stos
in
sti
push
outs
pop
outs
push
xchg
add
int
lea
push
mov
xor
sbb
jns
cld
(bad)
ins
pop
pop
ins
outs
mov
repnz
into
sahf
fs
add
daa
push
sahf
dec
or
push
push
mov
das
push
icebp
dec
shl
xor
ja
into
dec
pop
nop
jp
shl
mov
xchg
pop
arpl
sahf
mov
repnz
mov
call
(bad)
addr16
pop
mov
inc
mov
xchg
retf
enter
inc
pop
(bad)
pop
mov
lahf
xchg
(bad)
(bad)
mov
loope
and
sti
shl
bound
jbe
int3
mov
mov
mov
xchg
pop
popa
mov
imul
outs
stc
scas
popa
(bad)
mov
pop
inc
sahf
and
js
scas
iret
mov
mov
jno
or
mov
jle
xchg
dec
scas
arpl
repnz
jno
mov
pop
lods
xlat
retf
mov
out
(bad)
mov
sti
in
call
pop
inc
test
inc
and
pop
mov
imul
pusha
scas
int3
rcl
add
(bad)
mov
loope
and
sti
shl
bound
jbe
int3
mov
mov
mov
xchg
pop
popa
mov
es
mov
popa
fsub
and
dec
fidivr
retf
mov
jmp
pop
frstor
out
into
mov
pushf
push
hlt
mov
jmp
pop
lods
xlat
retf
mov
(bad)
int
je
cli
mov
or
(bad)
jns
mov
jmp
push
and
xchg
inc
mov
or
adc
test
push
push
pusha
retf
push
outs
inc
dec
or
adc
or
adc
lds
mov
sar
mov
jo
and
dec
into
pushf
pushf
xchg
pop
xchg
dec
aas
mov
std
jg
xchg
jg
outs
sar
jl
fbstp
inc
mov
repnz
(bad)
test
inc
(bad)
xlat
ins
mov
out
call
add
fcmovnb
mov
add
sub
div
mov
ret
jb
mov
push
dec
jae
fidivr
fs
out
add
add
xchg
jl
addr16
sbb
jge
scas
dec
jmp
lahf
jecxz
inc
push
cwde
and
jo
ret
std
aad
pop
(bad)
jmp
in
lgdtd
push
push
cmc
cmps
nop
mov
(bad)
jp
rol
rcr
cmps
loope
mov
(bad)
dec
mov
push
ret
mov
movs
stos
jmp
jne
call
sahf
mov
pusha
sub
mov
and
lock
gs
jecxz
fcomp
js
push
mov
rcl
cmp
ja
es
imul
je
lods
repz
scas
jl
pop
cmps
movs
and
rcr
inc
fnstsw
stc
cmps
xchg
dec
in
test
in
push
sbb
push
out
mov
or
xchg
jg
push
cmc
(bad)
movs
popf
pop
in
xchg
test
fxch
(bad)
shl
mov
popa
test
sahf
dec
mov
sahf
cmp
push
push
dec
or
stos
int3
aam
mov
cmp
mov
arpl
(bad)
jne
push
jnp
fst
sub
mov
test
dec
pop
mov
and
lods
mov
out
mov
(bad)
jp
xchg
push
fisubr
cld
stc
cmps
xchg
dec
in
cdq
test
add
cwde
or
hlt
(bad)
out
fs
lock
scas
arpl
(bad)
call
pop
adc
(bad)
(bad)
fnstenv
fsubr
inc
mov
mov
cmps
cli
in
movhps
pusha
push
sti
pop
test
mov
sub
sub
fcomp
lods
rcl
jge
sti
xchg
shr
gs
ret
adc
inc
popf
xor
dec
add
lods
(bad)
outs
in
push
and
sub
out
ins
inc
stc
mov
stos
frstor
mov
xchg
push
out
fimul
bound
ja
(bad)
push
je
cmp
ror
xchg
call
mov
popf
xlat
arpl
push
inc
mov
mov
cmps
cli
in
push
jnp
ins
push
sahf
push
call
xor
sub
idiv
pushf
not
arpl
shl
pop
mov
(bad)
mov
popf
clc
cmp
xor
sbb
inc
fwait
(bad)
pop
ficom
mov
and
ret
stc
aad
inc
jecxz
mov
push
out
xchg
push
sbb
stos
or
fild
rol
cdq
pop
adc
(bad)
aam
scas
lds
mov
popa
fist
mov
add
lods
cmps
in
outs
dec
jbe
pop
xchg
adc
sti
mov
jns
cmp
ret
inc
push
adc
push
shl
imul
gs
dec
sub
add
xor
sbb
inc
mov
push
dec
xchg
xchg
bound
ret
ins
sti
into
lock
adc
inc
adc
test
lea
mov
scas
inc
jmp
dec
data16
(bad)
int
movs
out
rol
inc
sti
in
ret
scas
jmp
dec
mov
(bad)
sbb
dec
pop
add
bound
(bad)
xchg
sahf
pop
pop
cs
test
xchg
inc
inc
pop
std
ret
or
jo
mov
mov
mov
xchg
xchg
mov
and
dec
and
mov
jp
imul
pop
out
mov
jmp
mov
test
pushf
push
out
ret
pushf
hlt
ins
rcr
xchg
mov
jb
xchg
shl
repnz
in
inc
retf
fnsave
inc
movs
jmp
xchg
out
jnp
es
bound
in
repz
sub
cmp
call
adc
scas
repnz
outs
imul
mov
xlat
test
cmp
sub
fwait
push
sbb
push
ror
out
retf
js
mov
sbb
jb
(bad)
mov
jb
fmul
pop
loopne
or
retf
dec
mov
fwait
out
jg
sahf
jle
pusha
call
in
jecxz
xchg
(bad)
push
and
fcmovbe
ret
scas
repnz
xchg
fs
lock
fsub
movs
jmp
dec
test
dec
adc
mov
retf
int3
aam
mov
dec
aam
scas
xor
sahf
cli
push
sbb
(bad)
div
dec
jbe
add
add
fistp
and
pop
not
leave
dec
jmp
dec
retf
mov
jle
and
fsubr
mov
xchg
scas
add
push
jns
adc
jns
lods
pop
fwait
pop
ret
test
jecxz
push
mov
js
xor
out
xchg
ja
(bad)
out
lods
in
popa
ret
jl
xchg
js
jmp
sub
stos
and
mov
cs
mov
xchg
loope
adc
xor
(bad)
out
imul
adc
aam
ja
jmp
dec
popf
and
push
or
mov
jl
ins
mov
add
mov
out
lock
int
cmps
sbb
push
call
sbb
out
repnz
cwde
call
ror
aam
retf
mov
in
stc
xchg
rol
enter
das
test
cmps
ror
icebp
jg
sbb
xchg
add
pop
cwde
fcmovbe
mov
pop
shl
cli
push
adc
ins
jmp
jmp
scas
lock
mov
xor
add
stos
push
pop
int
push
fstp
cmp
jge
mov
mov
pop
bound
jmp
call
scas
jnp
mov
or
call
add
outs
leave
mov
adc
rol
(bad)
ret
scas
and
fs
xchg
(bad)
dec
mov
mov
mov
add
mov
xchg
inc
cmps
(bad)
mov
pop
ret
pop
cs
lahf
out
add
repz
bound
jg
scas
xchg
adc
cmps
add
fwait
and
xchg
dec
sbb
sbb
cmp
imul
cmp
cmc
cmps
or
mov
pop
aad
pusha
sub
pop
aam
jns
push
cmc
mov
mov
jl
mov
ret
cdq
out
(bad)
mov
sti
in
call
push
inc
mov
ja
cmc
sub
mov
pusha
pop
add
mov
xchg
push
movs
(bad)
mov
add
and
sahf
out
and
jmp
sbb
sar
jle
pop
xchg
js
imul
clc
mov
mov
push
loop
out
pushf
mov
cdq
mov
mov
call
sbb
loopne
(bad)
pop
rcl
mov
mov
loope
jg
or
pop
loopne
fcmovb
retf
lods
ja
repz
in
addr16
push
dec
movs
mov
mov
(bad)
aam
addr16
add
push
test
mov
mov
jle
stos
lods
sub
xchg
xchg
js
jle
jmp
jp
dec
mov
rcl
sub
push
out
and
pop
punpckhwd
mov
addr16
ins
mov
xor
icebp
aas
push
fnstcw
cmc
mov
test
xchg
and
sbb
or
(bad)
mov
pop
lods
jb
xchg
test
inc
inc
mov
ds
pop
mov
rol
mov
call
sar
jg
in
jo
leave
cwde
jns
(bad)
out
jnp
pop
ins
pop
sti
daa
mov
xchg
mov
xor
mov
xchg
out
add
(bad)
icebp
imul
js
(bad)
and
xchg
pushf
out
je
xor
pop
sbb
inc
xchg
imul
scas
pusha
xchg
pop
mov
cmp
imul
xchg
pop
mov
cmp
or
adc
cli
out
mov
icebp
mov
lods
dec
in
cmc
inc
dec
mov
xor
mov
ret
out
movs
jnp
xchg
mov
scas
in
push
retf
dec
dec
mov
ins
mov
mov
mov
jne
call
pop
idiv
mov
cs
cld
dec
push
jbe
jmp
push
test
popf
imul
call
test
imul
mov
cwde
sbb
mov
ret
fwait
in
out
stos
std
mov
mov
mov
out
adc
pushf
js
or
push
inc
hlt
cdq
xchg
mov
hlt
add
sar
cmp
jmp
sub
xchg
xchg
out
jnp
pop
jae
cmps
cmp
sub
cmp
fcom
xlat
dec
add
fdiv
data16
dec
jnp
(bad)
cs
xchg
inc
mov
sbb
getsec
push
(bad)
fist
mov
(bad)
fs
mov
ins
jne
adc
je
into
repnz
pop
(bad)
in
test
nop
add
bndstx
clc
outs
stc
mov
mov
mov
jecxz
popa
mov
into
sti
jmp
retf
add
mov
popf
fstp
dec
pop
mov
pop
xchg
call
jp
xor
xor
inc
out
nop
ret
cmp
pop
or
push
les
mov
cmp
xchg
xor
or
or
dec
or
mov
dec
xchg
push
sar
sub
cmps
ins
mov
dec
lock
fcom
dec
retf
out
out
in
(bad)
enter
inc
hlt
mov
call
dec
add
xchg
fsub
ror
adc
mov
mov
out
push
pop
jo
sti
cs
outs
mov
cmp
cmp
xor
dec
sbb
fcom
arpl
lahf
std
cmp
jbe
adc
push
inc
test
sub
in
imul
movs
mov
outs
adc
xlat
loop
xchg
xchg
dec
repnz
mov
push
mov
jle
pushf
push
sti
std
call
push
inc
(bad)
pop
adc
cmp
cmps
rcl
lds
call
lock
sbb
push
jg
fs
test
movs
jb
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
rcr
fucomp
push
dec
out
daa
push
fwait
push
sbb
stc
ins
out
test
mov
das
push
ret
scas
out
movs
mov
sti
(bad)
mov
loopne
inc
jns
or
cli
call
inc
xchg
jecxz
jg
mov
adc
jmp
rol
gs
pop
movs
stos
dec
rcl
rep
mov
xchg
(bad)
mov
pusha
inc
add
scas
xor
in
das
jge
aaa
aas
loope
sub
sbb
pop
sti
shl
imul
adc
out
dec
inc
popf
xor
dec
add
mov
imul
mov
cmp
xchg
jg
into
jbe
(bad)
mov
test
in
mov
call
sbb
call
popa
xchg
push
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
jno
rol
popa
push
add
adc
jmp
and
and
mov
cwde
xchg
je
gs
fcmovnu
(bad)
bound
jb
mov
mov
jbe
mov
pushf
in
or
sbb
icebp
jb
test
mov
and
push
sub
imul
sub
stc
pop
xor
mov
enter
mov
outs
(bad)
aaa
dec
scas
lods
dec
or
rcl
mov
jmp
rcl
sti
das
repz
test
mov
es
adc
lahf
out
mov
xor
mov
and
adc
fdivr
pop
pop
inc
ins
pusha
mov
in
ja
(bad)
or
xor
pop
sbb
inc
xchg
stc
data16
(bad)
or
cli
jp
jbe
cmp
xor
(bad)
call
mov
xchg
nop
add
jns
push
ret
std
(bad)
leave
xchg
dec
scas
arpl
mov
loop
push
ror
aam
cmp
jns
dec
(bad)
pop
bound
mov
mov
sub
xchg
adc
mov
push
jmp
mov
and
imul
loop
push
js
jl
ret
mov
mov
xchg
stc
pop
jnp
xor
push
sub
(bad)
ins
cli
and
(bad)
mov
and
shl
test
test
ja
test
lahf
adc
or
xchg
fs
xor
mov
xchg
pop
div
jb
out
mov
(bad)
neg
out
repz
call
lahf
ficomp
xchg
fistp
cmp
push
mov
lea
ins
outs
jnp
call
ret
inc
ins
ins
(bad)
(bad)
ins
push
fdiv
jbe
fwait
adc
cmp
sub
sahf
repz
dec
nop
xor
and
sub
ret
jmp
mov
mov
push
pop
movs
cmp
aad
retf
or
sahf
jns
inc
jmp
out
jnp
mov
dec
cmps
fcom
fild
repnz
(bad)
movs
cld
jbe
dec
inc
mov
jo
jmp
cmp
pop
imul
imul
jno
fcomp
sub
pusha
scas
dec
(bad)
sbb
inc
push
out
frstor
dec
js
inc
fs
adc
xchg
mov
scas
dec
pop
aaa
ret
xlat
push
cmp
ret
adc
(bad)
jbe
fucomi
mov
dec
retf
shl
out
jge
xchg
push
xlat
loope
(bad)
jg
mov
mov
mov
call
push
and
fcmovne
in
cdq
hlt
into
mov
std
repz
test
das
cmps
sahf
cmp
mov
xor
mov
dec
dec
jbe
bound
mov
arpl
dec
out
fdiv
inc
cs
xchg
dec
add
add
xor
or
mov
mov
fldenv
pop
repz
cmp
out
ins
and
cmp
das
fnstcw
mov
ret
out
push
xor
nop
dec
push
lods
sub
xchg
pushf
clc
in
xchg
lods
int
in
ret
aam
sbb
out
lods
or
lock
xor
lock
js
mov
imul
lds
jmp
les
mov
data16
out
jb
mov
sbb
sti
and
mov
sbb
lods
mov
not
xor
sar
in
ins
jae
push
jae
retf
add
xor
add
es
imul
ins
jge
rep
cld
mov
mov
pop
lea
(bad)
mov
inc
in
int
lea
cmps
dec
in
push
sbb
pop
xchg
test
or
cmps
cdq
pop
jmp
mov
les
mov
shl
lahf
xlat
test
jl
jmp
mov
lods
imul
ss
jb
arpl
or
and
mov
pushf
xchg
jae
jae
retf
(bad)
idiv
inc
ins
jge
shl
mov
xchg
add
call
mov
push
call
jge
stos
imul
adc
shr
fwait
mov
(bad)
int3
test
aam
push
shl
dec
mov
ret
mov
lahf
jmp
pop
mov
(bad)
mov
call
rcr
mov
jmp
push
adc
call
mov
jae
inc
ss
lock
imul
bound
mov
gs
jge
retf
mov
rcr
jecxz
dec
cmp
jo
stc
jno
xchg
(bad)
(bad)
jnp
test
jp
xchg
(bad)
out
mov
mov
ins
cmc
or
out
(bad)
dec
leave
lahf
pusha
xchg
inc
jmp
gs
lods
mov
fcmovnbe
aad
cmp
jns
std
stos
shr
bound
jmp
pop
sbb
cmps
and
sahf
lahf
pop
dec
xor
sub
lods
(bad)
push
sbb
fadd
loop
popa
daa
inc
dec
sub
or
fwait
xor
cmp
mov
jae
out
(bad)
ins
stos
mov
xor
cmp
(bad)
sbb
scas
call
sahf
mov
push
and
shl
cmp
pop
out
nop
mov
int3
retf
cmp
mov
ror
(bad)
(bad)
fcomp
mov
sahf
js
mov
pop
jb
stos
adc
lahf
in
adc
sub
loopne
scas
and
(bad)
fild
gs
shl
pop
dec
imul
shl
data16
add
add
xor
jae
aam
jmp
imul
mov
add
test
repz
mov
outs
in
loopne
sub
mov
jle
push
jmp
test
dec
inc
scas
mov
pop
pop
stos
mov
fimul
clc
mov
mov
pop
clc
jmp
sbb
jne
mov
mov
jno
adc
mov
sub
xchg
loopne
push
jg
std
mov
push
inc
pop
push
pop
sub
and
ret
ja
cmp
cmp
and
in
movs
pop
mov
and
ds
jp
and
or
xchg
mov
fstp
cmps
lods
(bad)
iret
mov
popf
jge
xlat
dec
out
mov
ret
aas
cli
jbe
mov
xchg
movs
stos
ins
pop
inc
scas
fcomp
mov
clc
(bad)
mov
mov
add
int3
push
lock
test
sub
cmps
call
pop
push
xor
rcl
push
mov
cmp
mov
adc
repnz
adc
mov
sbb
icebp
movs
sub
scas
xor
push
bound
fxam
jne
mov
mov
sbb
dec
xlat
repz
mov
cdq
lods
les
sub
mov
or
enter
pop
mov
xchg
dec
lock
push
je
dec
in
loope
in
mov
call
enter
pop
mov
mov
in
sub
push
add
(bad)
and
add
sbb
xchg
loope
xor
div
inc
jae
retf
mov
test
mov
lds
lea
push
imul
imul
dec
repz
mov
ret
xlat
push
jge
mov
push
enter
fistp
ins
add
fsub
adc
push
sub
pop
cld
cmp
test
xchg
mov
adc
(bad)
fsubr
xchg
iret
movs
gs
mov
xchg
icebp
addr16
sbb
lock
sti
std
(bad)
add
stos
jne
mov
or
cmp
jmp
mov
xchg
js
push
push
popa
add
(bad)
and
pop
pushf
in
dec
mov
pop
sbb
mov
cmp
cmps
arpl
xor
xchg
and
and
scas
iret
mov
mov
jae
mov
lea
sar
mov
jle
movs
push
cmps
pusha
loop
xchg
push
push
mov
in
mov
repz
mov
pop
mov
push
mov
stos
jmp
xchg
sbb
mov
cs
and
lock
push
gs
call
out
sub
push
jne
fisub
inc
jge
add
je
cwde
pop
sbb
stos
repz
xchg
pop
xchg
ins
cmps
movs
and
nop
cmp
add
dec
in
mov
repnz
dec
pop
cwde
push
(bad)
cmp
jne
adc
dec
in
bnd
mov
out
(bad)
fadd
mov
call
ror
mov
test
movq
push
inc
lahf
pop
mov
pop
sub
mov
mov
je
popa
inc
loopne
jmp
inc
add
jecxz
dec
cmp
push
outs
dec
ja
loop
jmp
imul
add
jmp
ret
mov
jb
sti
mov
jg
and
mov
(bad)
cli
pusha
loop
sbb
out
cmps
push
or
adc
les
call
(bad)
adc
mov
cdq
imul
mov
scas
je
stc
hlt
stos
mov
das
out
or
ja
fs
out
fistp
ins
ja
(bad)
mov
push
popf
adc
cmp
js
stc
aad
out
jnp
popa
lods
mov
dec
jns
push
push
fld
sti
int3
aad
inc
icebp
jmp
call
sbb
mov
hlt
retfw
test
pop
loopne
mov
addr16
lods
dec
cmp
aam
mov
jmp
in
(bad)
mov
adc
pop
inc
mov
jo
test
arpl
jae
aad
mov
xchg
mov
arpl
stos
out
sbb
adc
xchg
lds
or
mov
lea
mov
push
daa
xchg
arpl
mov
pop
cs
mov
sahf
cmp
out
outs
xor
ret
jp
sub
cdq
movs
xchg
movs
imul
ret
xchg
inc
aas
lods
sub
mov
cmps
xchg
mov
enter
cdq
push
xor
(bad)
shr
out
xchg
mov
lods
in
adc
add
cmps
aam
hlt
call
xor
mov
pop
xor
adc
aam
lea
ds
xor
push
push
jnp
frstor
add
(bad)
xchg
jnp
pop
sbb
js
(bad)
push
out
inc
stos
mov
jae
sahf
sub
dec
sti
sar
xchg
pop
mov
movs
mov
mov
sub
jmp
cdq
inc
call
ret
sar
movs
mov
adc
aam
int
lods
jp
retf
mov
dec
mov
mov
mov
les
sbb
xor
lds
xor
jmp
test
test
jmp
fnstenv
ins
jg
push
xchg
pusha
fisttp
ja
dec
sbb
mov
jp
dec
stos
movs
push
pop
jno
sub
into
not
test
(bad)
repnz
xchg
pushf
pop
stos
jo
loopne
push
lahf
push
(bad)
(bad)
push
jmp
add
test
cmc
aaa
imul
call
xchg
shr
xchg
ins
mov
mov
sub
outs
imul
test
(bad)
lahf
jb
das
aaa
dec
fmul
xchg
cli
dec
jno
pop
jmp
outs
pop
push
mov
retf
jnp
fs
pop
dec
adc
imul
jns
scas
pusha
fsub
cs
sahf
cmp
enter
out
aad
inc
out
mov
jno
mov
fsub
out
retf
fs
mov
mov
jmp
push
xchg
mov
mov
fdivr
out
xchg
mov
mov
push
rcr
lock
cmc
xchg
xchg
jmp
jae
sti
adc
pop
aas
push
pop
sub
mov
fdivp
inc
pop
adc
not
arpl
(bad)
cli
mov
jno
jmp
push
mov
inc
stos
imul
jns
test
sub
test
jp
xchg
out
mov
pushf
nop
push
sahf
dec
repnz
fstp
xlat
jecxz
out
or
lahf
jg
pop
jmp
in
jecxz
push
scas
lods
inc
bound
in
fs
out
dec
mov
outs
cmps
cmps
scas
je
out
lods
imul
dec
ss
push
(bad)
imul
push
fmul
rol
push
std
mov
push
push
cmp
dec
mov
movs
add
fiadd
pop
push
iret
sbb
pop
outs
dec
push
(bad)
(bad)
cmp
mov
shr
mov
jns
mov
xlat
ret
mov
(bad)
cli
test
push
iret
scas
jne
fldcw
shl
mov
cli
jge
test
popa
inc
mov
ja
jae
xchg
jmp
rcr
cmps
in
int
(bad)
dec
sets
outs
mov
scas
jo
scas
in
inc
ins
and
scas
add
scas
mov
cmp
pop
xor
ret
imul
adc
(bad)
out
pop
inc
dec
pop
or
xor
jmp
dec
dec
push
jns
repz
xchg
pop
jecxz
mov
xchg
ds
enter
rol
test
in
xchg
push
rcl
add
xchg
or
xchg
mov
pop
xchg
inc
repz
dec
mov
bound
loope
mov
cmc
in
xchg
rcr
push
xchg
jo
rol
mov
add
leave
in
adc
adc
mov
sbb
push
arpl
rcl
pop
and
frstor
aaa
adc
xor
fisttp
pop
mov
add
(bad)
push
retf
xchg
cs
mov
and
xchg
dec
jae
dec
ret
mov
pop
loopne
mov
dec
rol
jno
mov
(bad)
dec
call
xlat
mov
(bad)
pop
lock
jae
ror
aam
int
cmps
add
add
mov
mov
pop
int3
dec
dec
movs
lock
xchg
out
sbb
pusha
or
adc
ret
cwde
sub
xor
mov
cli
inc
add
arpl
shl
push
pushf
(bad)
mov
test
pushf
arpl
sub
or
dec
add
mov
push
(bad)
mov
repnz
add
cmc
retf
movs
dec
hlt
icebp
mov
dec
out
xchg
cwde
or
iret
mov
jle
push
repz
pusha
push
loopne
push
jno
(bad)
retf
aam
hlt
mul
ficomp
inc
mov
cdq
outs
test
sbb
mov
stos
sahf
xor
xor
test
adc
ret
push
shl
xor
dec
mov
and
push
or
mov
sar
movs
cmp
lods
sbb
std
fsubr
cmc
stos
jp
fnstsw
push
test
nop
adc
fistp
mov
(bad)
jns
loopne
dec
add
mov
int
cmps
fdiv
mov
cld
dec
xlat
dec
inc
mov
test
mov
sti
push
cmp
mov
cld
mov
sub
xor
lock
pushf
and
push
push
pop
push
loope
in
jne
dec
outs
movs
ret
and
xchg
dec
push
out
cmp
jo
mov
jge
scas
popa
fisttp
stos
mov
jb
cwde
cmp
loopne
cmc
mov
mov
ins
test
jns
or
xchg
inc
mov
stos
push
adc
mov
in
in
sti
in
ret
scas
jmp
ins
cmps
iret
sahf
je
mov
repnz
dec
pop
dec
fiadd
pop
out
nop
iret
mov
sub
adc
pop
shl
xchg
mov
pop
das
xor
mov
ret
aaa
dec
xchg
cmps
jecxz
dec
mov
push
xchg
push
sbb
sbb
push
jp
mov
sub
into
(bad)
mov
mov
push
xchg
and
fisttp
jmp
cmc
aas
js
xchg
jne
fcomip
cmp
into
jbe
icebp
retf
test
ror
cmps
mov
(bad)
push
mov
iret
mov
jmp
jns
mov
outs
mov
in
sub
dec
addr16
inc
pop
adc
xor
(bad)
jg
sbb
addr16
xchg
and
hlt
inc
addr16
je
mov
pop
addr16
fld
retf
xor
mov
sar
sbb
outs
xchg
ficom
in
pop
pop
and
shr
adc
sti
lock
xchg
mov
and
jle
data16
idiv
ins
mov
sbb
pop
sub
test
bound
mov
push
(bad)
jl
sti
mov
mov
fcom
or
jno
test
jmp
scas
icebp
scas
stos
mov
mov
retf
cmp
and
cs
adc
sbb
or
clc
or
push
inc
ret
mov
cmp
cmp
in
dec
fmulp
and
xor
and
daa
cmp
fldcw
dec
cli
loop
nop
cmc
mov
fild
ja
jb
add
retf
test
push
jae
mov
jge
mov
sar
out
sbb
xchg
scas
mov
mov
adc
popf
inc
dec
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
iret
call
dec
dec
out
pop
jo
outs
cmp
nop
fisttp
pop
sahf
inc
mov
push
sbb
icebp
imul
lock
iret
sahf
mov
cmp
into
inc
sbb
mov
mov
cmps
lock
js
jecxz
dec
test
sar
mov
mov
in
mov
push
pop
mov
loopne
ret
test
push
sahf
push
jmp
ins
sub
push
inc
lea
stc
mov
or
sti
xchg
mov
daa
sub
sub
mov
inc
retf
les
stos
push
push
test
xlat
pop
or
shl
mov
stos
mov
jo
ret
bound
jne
scas
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jae
inc
lods
or
add
shr
int
out
pop
xchg
pop
xor
mov
test
gs
repz
mov
push
add
cmp
sbb
xchg
adc
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
xchg
in
xchg
mov
ret
call
mov
out
cdq
or
pop
shl
cld
imul
ds
into
mov
mov
and
mov
cdq
adc
and
mov
sbb
push
sub
pop
leave
pop
call
rcr
das
jg
mov
inc
lds
mov
push
push
aad
shr
add
outs
inc
xor
and
or
sbb
xlat
fiadd
sbb
push
cmp
aam
sbb
stc
push
lock
dec
xchg
cmps
ret
mov
cwde
in
adc
aaa
xchg
cmc
cld
sub
fstp
addr16
mov
mov
test
out
rcr
sahf
pop
shl
mov
(bad)
cli
jbe
pop
retf
sti
in
pop
or
pop
dec
sbb
inc
dec
jl
xchg
and
xor
or
sbb
scas
shl
mov
test
sbb
fst
mov
(bad)
rcl
adc
dec
cmp
pushf
aad
cs
call
and
mov
out
fwait
or
xchg
cmc
cld
das
lahf
xchg
and
fidivr
ss
mov
mov
and
pop
mov
add
mov
mov
push
add
mov
or
pop
dec
test
fld
js
xchg
and
adc
pop
push
or
sbb
stos
shl
mov
repz
daa
out
push
add
sub
sbb
(bad)
push
xchg
mov
xlat
push
sbb
icebp
ins
cmp
mov
scas
xchg
push
in
std
in
loop
xchg
pusha
and
jmp
sbb
cmp
(bad)
cli
xor
lahf
cmps
pop
xor
mov
test
inc
push
call
mov
add
jmp
cmp
bound
retf
mov
mov
dec
add
pop
inc
dec
ins
jo
movs
jno
xor
sbb
cmp
mov
repz
mov
out
aam
ja
out
sbb
fst
mov
jecxz
push
sbb
jno
mov
mov
push
int
in
ret
pusha
and
cli
mov
mov
cmps
shl
cld
or
xchg
inc
xor
mov
xor
and
mov
mov
(bad)
sahf
xor
cli
popf
call
mov
jb
push
leave
mov
or
pop
dec
mov
fild
jl
xchg
and
adc
(bad)
mov
pop
lar
sbb
cmps
shl
stos
repz
mov
add
add
cmp
sbb
sahf
adc
(bad)
push
mov
ret
fistp
adc
dec
aas
scas
adc
sub
sahf
int
out
retf
call
mov
mov
test
std
(bad)
sub
xlat
cmp
cmp
mov
mov
and
mov
cwde
sbb
add
cmps
jmp
xor
(bad)
jb
push
retf
mov
or
pop
inc
xchg
aad
dec
jl
fwait
and
sbb
lea
add
shr
add
mov
out
push
outs
sbb
rcl
or
xlat
push
adc
icebp
dec
xor
xchg
xlat
in
xchg
sahf
iret
cmc
in
ja
push
mov
and
jp
fwait
out
cdq
or
push
lock
cld
stos
mov
fistp
out
dec
mov
mov
and
mov
cwde
adc
add
xchg
dec
out
mov
sti
jb
xchg
aas
mov
inc
pop
dec
test
std
inc
dec
jl
adc
xor
pop
or
call
rol
mov
xlat
cmp
sbb
sbb
(bad)
push
xor
inc
xlat
(bad)
cmp
icebp
int
lods
sbb
scas
sbb
in
pop
sahf
int
fs
ds
mov
xchg
out
fwait
or
pop
shl
sub
pop
ds
iret
mov
mov
mov
xchg
out
loope
adc
cmp
(bad)
pop
and
imul
cmp
(bad)
sti
jae
xchg
mov
sub
pop
retf
fld
jl
adc
adc
(bad)
aaa
sbb
mov
call
repz
stos
mov
idiv
outs
adc
fst
mov
ret
xlat
pop
sbb
lock
cmp
pushf
aad
sub
lahf
lds
and
mov
stc
lock
std
cld
sub
fistp
xor
idiv
lds
call
stos
js
xlat
xchg
inc
shl
or
cmp
(bad)
sti
jb
push
retf
mov
push
inc
pop
dec
xchg
fld
jl
fwait
and
adc
(bad)
mov
pop
inc
or
sbb
scas
shl
mov
fs
mov
out
push
and
xor
sbb
fst
or
xchg
push
sbb
movs
pop
xchg
scas
pushf
aad
cs
pushf
int
in
aaa
ret
mov
mov
out
(bad)
mov
(bad)
shl
cld
sub
fistp
data16
mov
mov
and
adc
add
out
sbb
lds
add
jb
inc
jmp
loopne
in
dec
dec
add
test
lock
(bad)
test
addr16
repz
mov
adc
xlat
cmp
cmp
(bad)
sbb
(bad)
push
mov
rcl
pop
sbb
mov
sbb
add
int
hlt
jne
push
xchg
loopne
pop
jmp
fwait
or
xchg
xchg
and
mov
mov
out
ror
fiadd
ret
out
cmp
pop
jns
add
jb
push
retf
jmp
inc
pop
dec
movs
enter
ins
lock
add
push
jo
mov
pop
pop
or
pop
icebp
mov
mov
xor
repz
scas
je
idiv
outs
sbb
xchg
sbb
xchg
mov
pop
adc
pop
cmp
pushf
cmc
in
xchg
sahf
int
movs
push
ret
shl
mov
mov
clc
xor
fwait
xchg
and
fbstp
data16
mov
add
mov
mov
(bad)
sahf
add
cmps
call
mov
cmp
(bad)
push
es
mov
add
pop
dec
mov
fld
lock
sub
adc
pop
pop
sub
sbb
mov
gs
repz
cmp
pop
and
cmp
sbb
sahf
cmp
lds
mov
ret
xlat
push
sbb
stc
ins
cmp
pushf
ffree
cs
sahf
in
std
out
ret
call
xchg
xchg
in
fwait
sub
test
aad
sub
fistp
data16
mov
mov
push
call
cmp
ficomp
sbb
iret
test
(bad)
push
add
push
retf
mov
or
push
imul
clc
mov
jno
adc
or
sbb
scas
fisub
mov
ror
and
cmp
sbb
xchg
pop
call
pop
or
loope
cmp
pushf
lds
std
loopne
or
lock
jp
sub
dec
stos
hlt
or
mov
sub
lahf
ds
cmps
mov
lds
mov
adc
cmp
(bad)
sahf
adc
mov
or
(bad)
jbe
(bad)
sti
xor
add
jmp
inc
dec
or
lock
sbb
push
adc
shr
inc
adc
je
fwait
cmp
scas
inc
and
cmp
or
push
mov
ret
xlat
push
or
icebp
dec
sub
pushf
aad
xlat
mov
in
in
ret
lock
xchg
scas
fwait
or
xchg
cmc
in
imul
ds
cmps
mov
aad
call
mov
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
fisttp
fcomp
inc
dec
jl
xchg
and
adc
(bad)
push
add
pop
dec
sbb
scas
shl
mov
fs
movs
out
push
cmp
outs
sbb
fst
mov
ret
xlat
stos
sahf
adc
cmp
lods
sbb
cs
sahf
int
in
retf
loopne
sti
clc
jp
xchg
out
fwait
or
add
xor
lahf
mov
ds
mov
mov
and
js
cdq
adc
add
cmps
jmp
cmp
and
retf
mov
or
pop
jl
(bad)
out
jge
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
fcom
lahf
add
inc
mov
loop
jae
mov
mov
out
dec
test
inc
dec
mov
xchg
xor
loop
sbb
stos
push
data16
ja
adc
loopne
mov
mov
cmp
pushf
fcom
(bad)
mov
xlat
rcr
lods
sbb
sub
sahf
add
jne
call
mov
out
fwait
add
mov
rcr
jns
lahf
mov
mov
mov
lds
xchg
out
inc
cdq
adc
mov
shl
push
or
cmp
dec
pop
retf
xchg
es
in
push
inc
pop
pop
add
fst
retf
jge
sti
mov
mov
fwait
or
shl
xchg
call
daa
popa
shl
sbb
sbb
or
pop
push
sbb
icebp
dec
cmp
cs
in
push
sbb
std
ss
push
popa
data16
cld
mov
out
sbb
mov
cmps
push
hlt
cld
pop
sbb
ds
mov
ss
and
shr
rol
mov
add
and
sbb
jmp
jl
retf
mov
or
pop
dec
test
xchg
and
cdq
xor
nop
mov
rol
pop
data16
jnp
adc
repnz
jg
outs
sbb
fst
add
icebp
pop
js
push
xlat
jecxz
out
push
ror
pushf
add
outs
call
push
ficom
ret
pop
jmp
xchg
out
mov
(bad)
(bad)
stos
lock
cli
out
mov
popa
xchg
or
mov
outs
rcl
cdq
js
mov
sbb
mov
movs
outs
movs
fcmovbe
aad
xor
sub
jmp
mov
jg
xchg
dec
adc
(bad)
hlt
icebp
jp
jle
pop
mov
mov
add
push
addr16
push
sbb
js
mov
movs
ds
enter
lock
xchg
pop
sti
sti
mov
jb
add
adc
dec
xlat
lahf
outs
fwait
pop
sar
xchg
ins
scas
mov
rcr
mov
sub
jne
cli
cmps
fsubr
push
lds
std
(bad)
sbb
mov
mov
xchg
lahf
sub
aas
aas
(bad)
add
or
inc
sti
(bad)
jb
imul
imul
test
dec
dec
cmp
ins
push
clc
jnp
xchg
mov
test
sub
arpl
scas
pushf
aad
pop
repnz
mov
jnp
adc
out
fwait
inc
fiadd
lahf
xchg
mov
and
mov
push
mov
iret
mov
ret
pop
arpl
xchg
pop
enter
jnp
add
add
int3
sar
in
sbb
or
jmp
adc
xchg
and
arpl
ret
out
outs
js
jns
shl
ja
add
xor
cmp
jge
aad
clc
mov
fnstsw
cmp
cmp
lods
sbb
xabort
cmps
inc
imul
cdq
xchg
test
mov
mov
test
jle
jbe
mov
jmp
jae
mov
ret
scas
loope
mov
fsub
mov
test
(bad)
fdivr
pusha
pop
adc
enter
mov
adc
sbb
mov
and
(bad)
xchg
and
arpl
shl
ins
xor
dec
jg
fcmovbe
addr16
call
dec
popa
xchg
inc
mov
outs
jne
lods
in
out
addr16
xlat
adc
xchg
add
ins
aam
lock
cs
sahf
mov
xchg
inc
jns
jp
neg
popa
lahf
jnp
mov
xchg
movs
stos
push
(bad)
fisttp
call
ret
push
dec
lahf
lock
mov
add
add
add
imul
sub
xor
jmp
scas
add
xchg
lock
push
arpl
mov
pop
bound
push
mov
sub
dec
push
xchg
inc
mov
outs
dec
jge
aad
clc
mov
fnstsw
and
dec
aam
xchg
scas
(bad)
mov
ins
out
xchg
pushf
sub
lock
push
hlt
xchg
cmc
cld
ins
cli
repnz
push
test
sahf
(bad)
(bad)
xlat
mov
out
xlat
out
rcr
(bad)
jns
movs
in
mov
je
mov
cmovo
push
mov
xchg
mov
daa
lock
aas
cmp
movs
cld
jae
jne
int3
(bad)
ins
pop
or
dec
mov
mov
sub
dec
fwait
pop
and
mov
dec
(bad)
imul
sbb
xlat
cmc
mov
test
xchg
jne
push
rol
sar
mov
outs
fbstp
movs
pushf
xchg
inc
(bad)
jnp
movs
lods
data16
iret
mov
rcr
lock
dec
xchg
mov
mov
int3
ja
jbe
xor
int3
lds
pop
sbb
mov
mov
xor
fs
call
add
enter
and
pop
pop
pop
sbb
xchg
dec
out
mov
mov
imul
fcmovnu
enter
ret
sahf
mov
cmps
push
and
ret
fdivr
sub
shl
aam
inc
test
fcmove
aam
and
(bad)
movs
jmp
add
mov
pop
ins
sub
movs
ffree
xchg
in
pop
or
cmp
int3
lahf
mov
das
sbb
jl
sti
vmovq
add
in
mov
inc
add
mov
mov
or
repz
(bad)
push
lock
xchg
add
sar
in
fdiv
test
mov
ja
mov
pushf
jp
xchg
mov
dec
adc
sbb
adc
idiv
xchg
push
repnz
cmc
rcr
icebp
dec
mov
(bad)
(bad)
jge
add
sti
jb
push
mov
adc
pop
dec
test
sbb
jno
inc
cld
(bad)
icebp
jbe
jle
pop
shr
xchg
push
popa
mov
mov
cmp
cmp
jbe
stc
jge
xchg
jge
jp
movs
cmp
popf
sub
call
jmp
repz
stc
jp
std
call
inc
loop
sbb
add
xlat
fst
mov
jmp
mov
mov
jno
push
dec
mov
cdq
jb
lods
in
std
(bad)
adc
test
cwde
xor
and
and
mov
xor
lock
pop
jne
pop
add
add
out
bound
sbb
fdiv
jbe
popf
pop
pushf
call
and
ins
cmp
outs
(bad)
mov
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
jo
jb
jo
jb
jnp
js
jns
jp
xchg
out
fwait
or
xchg
cmc
cld
sub
fistp
data16
mov
mov
and
mov
cwde
adc
add
cmps
jmp
cmp
(bad)
sti
jb
push
retf
mov
or
pop
dec
test
fld
jl
xchg
and
adc
(bad)
mov
pop
pop
or
sbb
scas
shl
mov
repz
out
push
and
cmp
sbb
xchg
sbb
(bad)
push
mov
ret
xlat
push
sbb
icebp
dec
cmp
pushf
aad
cs
sahf
int
in
ret
loopne
jnp
js
add
popa
pop
cs
pmullw
pcmpeqd
psrlw
jmp
pop
dec
jb
(bad)
out
push
aas
push
loop
paddd
psubsb
paddusb
pop
paddsb
psllw
pmaddwd
punpckldq
jmp
pop
and
not
mov
cwde
mov
fucomi
xor
movs
rol
jnp
and
xor
pop
jno
push
sub
pcmpeqw
punpckldq
psubd
push
pxor
psraw
pmaddwd
punpckldq
xor
packssdw
pcmpeqw
punpckldq
psubd
pop
pxor
psraw
pmaddwd
punpckldq
ret
cli
dec
pop
imul
inc
stos
cmp
lds
loopne
or
lods
das
addr16
mov
ret
imul
pcmpeqw
punpckldq
psubd
sub
pxor
psraw
pmaddwd
punpckldq
mov
packssdw
pcmpeqw
punpckldq
psubd
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xor
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
pxor
psraw
pmaddwd
punpckldq
or
packssdw
pcmpeqw
punpckldq
psubd
test
jne
pxor
psraw
pmaddwd
punpckldq
jmp
cmp
out
mov
push
cmp
aad
fdiv
sbb
sub
jp
dec
dec
call
in
xchg
sti
mov
sar
cmp
mov
mov
jg
xor
cmc
adc
cmp
imul
pcmpeqw
punpckldq
psubd
pop
pxor
psraw
pmaddwd
punpckldq
pop
packssdw
pcmpeqw
punpckldq
psubd
add
pxor
psraw
pmaddwd
punpckldq
jmp
packssdw
pcmpeqw
punpckldq
psubd
pxor
psraw
pmaddwd
punpckldq
push
packssdw
pcmpeqw
punpckldq
psubd
pop
pxor
psraw
pmaddwd
punpckldq
call
packssdw
pcmpeqw
punpckldq
psubd
push
pxor
psraw
pmaddwd
punpckldq
pop
packssdw
pcmpeqw
punpckldq
psubd
pxor
psraw
pmaddwd
punpckldq
bswap
psubb
packsswb
pcmpeqd
psllq
rdtsc
psllw
paddusw
punpckhdq
psubsb
fld
pmulhw
psrlq
jmp
pop
xor
lods
aam
and
ror
fcomp
pand
punpcklwd
psllw
loop
psubsw
psrlw
paddsb
psubw
jmp
pandn
paddusw
psubusb
paddd
pop
packssdw
psubusb
psubb
adc
paddw
pxor
jmp
mov
jle
shl
jno
popa
test
jne
psubusb
pxor
jmp
shr
inc
push
psrad
psubusb
paddw
pxor
jmp
aaa
pusha
mov
sub
(bad)
pxor
jmp
xchg
mov
test
psrad
psubusb
paddw
pxor
xor
jmp
shr
cmp
pop
xor
jno
popa
psubusb
pxor
pop
jmp
push
jge
into
neg
inc
outs
psrad
psubusb
paddw
cmp
jne
pxor
jmp
xchg
mov
mov
jno
popa
psubusb
mov
pxor
jmp
retf
inc
ins
xchg
mov
shl
fmul
push
paddw
pxor
jmp
add
push
jns
retf
inc
imul
psubusb
pxor
jmp
sar
and
jne
(bad)
psrad
xor
psubusb
paddw
pxor
jmp
xchg
jbe
(bad)
psllw
psubusb
pxor
jmp
inc
jo
shr
cmp
psrad
psubusb
paddw
pxor
dec
jmp
stos
sar
and
pushf
vunpckhpd
jno
popa
psubusb
pxor
dec
jmp
mov
mov
shl
fmul
paddw
xor
pxor
jmp
fadd
sub
mov
psllw
psubusb
call
pxor
jmp
je
(bad)
aas
data16
psrad
psubusb
push
paddw
pxor
jmp
cli
and
cdq
shl
ss
psllw
cmp
jne
mov
psubusb
pxor
jmp
repz
ins
xchg
mov
loop
add
psubusb
paddw
pxor
jmp
stos
aad
and
out
push
mov
psllw
psubusb
pxor
jmp
sbb
outs
xchg
mov
ret
psrad
psubusb
paddw
pxor
call
jmp
imul
psllw
psubusb
pxor
mov
jmp
dec
jae
ret
jmp
cmp
psrad
psubusb
paddw
push
pxor
jmp
test
jne
(bad)
jmp
psllw
psubusb
mov
pxor
jmp
cmp
mov
push
cs
psrad
psubusb
sub
paddw
pxor
jmp
push
jge
iret
clc
and
fwait
les
jno
popa
push
punpckhdq
pcmpgtd
psrlw
punpckldq
push
pmullw
punpcklbw
paddusb
paddsw
push
psubsw
pmulhw
jmp
push
xchg
ror
xchg
add
or
xor
mov
add
jb
psubusb
jmp
xchg
jns
leave
repnz
fisub
lock
pcmpgtd
packssdw
punpckhwd
psubusb
push
pand
pslld
psubsb
push
psllq
paddb
pcmpeqw
punpcklbw
push
jmp
pop
xor
aad
and
fcom
jmp
xor
xchg
jl
pcmpeqb
mov
pcmpgtd
pcmpgtd
packssdw
punpckhwd
add
psubusb
pand
pslld
psubsb
push
psllq
paddb
pcmpeqw
sub
punpcklbw
jmp
leave
repnz
xchg
mov
psubusb
jmp
loopne
xor
aad
es
push
pcmpeqb
pcmpgtd
pcmpgtd
packssdw
push
punpckhwd
psubusb
pand
pslld
call
psubsb
psllq
paddb
mov
pcmpeqw
punpcklbw
jmp
push
inc
push
xor
psubusb
mov
jmp
aas
push
mov
mov
pcmpgtd
pcmpgtd
add
packssdw
punpckhwd
psubusb
pand
mov
pslld
psubsb
psllq
add
paddb
pcmpeqw
punpcklbw
jmp
pop
mov
add
and
add
fcom
jmp
or
jecxz
jp
push
push
sahf
pcmpeqb
pcmpgtd
push
pcmpgtd
packssdw
punpckhwd
psubusb
push
pand
pslld
psubsb
call
psllq
paddb
pcmpeqw
punpcklbw
jmp
out
cmp
add
rcr
pusha
psubusb
jmp
cmp
into
push
popa
cmps
pcmpeqb
pcmpgtd
pcmpgtd
packssdw
punpckhwd
psubusb
pand
pslld
psubsb
punpckhbw
pmullw
psllq
psubsw
psrlw
pmaddwd
pmullw
paddusw
psubusb
psubb
packssdw
psubd
mov
psrlq
pcmpgtb
punpcklbw
pxor
add
pmullw
psllq
psubsw
psrlw
mov
pmaddwd
pmullw
paddusw
psubusb
add
psubb
packssdw
psubd
psrlq
call
pcmpgtb
punpcklbw
pxor
pmullw
jmp
psllq
psubsw
psrlw
pmaddwd
pop
pmullw
paddusw
psubusb
psubb
push
packssdw
psubd
psrlq
pcmpgtb
push
punpcklbw
pxor
pmullw
psllq
push
psubsw
psrlw
pmaddwd
pmullw
call
paddusw
psubusb
psubb
packssdw
pop
psubd
psrlq
pcmpgtb
punpcklbw
cmp
jl
pxor
pmullw
psllq
psubsw
mov
psrlw
pmaddwd
pmullw
paddusw
sub
psubusb
psubb
packssdw
psubd
mov
psrlq
pcmpgtb
punpcklbw
pxor
sub
pmullw
psllq
psubsw
psrlw
call
pmaddwd
pmullw
paddusw
psubusb
xor
psubb
packssdw
psubd
psrlq
xor
pcmpgtb
punpcklbw
pxor
pmullw
add
psllq
psubsw
psrlw
pmaddwd
push
pmullw
paddusw
psubusb
psubb
mov
packssdw
psubd
psrlq
pcmpgtb
push
punpcklbw
pxor
pmullw
psllq
push
psubsw
psrlw
pmaddwd
pmullw
push
paddusw
psubusb
psubb
packssdw
call
psubd
psrlq
pcmpgtb
punpcklbw
jmp
pxor
pmullw
psllq
psubsw
pop
psrlw
pmaddwd
pmullw
paddusw
add
psubusb
psubb
packssdw
psubd
push
psrlq
pcmpgtb
punpcklbw
pxor
pop
pmullw
psllq
psubsw
psrlw
call
pmaddwd
pmullw
paddusw
psubusb
cmp
jne
por
pslld
pmullw
pcmpeqb
mov
paddd
paddb
pcmpeqd
psubd
jmp
movq
por
pslld
pmullw
sti
add
movs
mov
ins
cmp
mov
cmps
retf
pushf
jmp
(bad)
sahf
sbb
or
mov
add
or
les
inc
fs
mov
loop
push
xor
sub
xchg
(bad)
jmp
je
paddd
paddb
pcmpeqd
mov
psubd
movq
por
pslld
mov
pmullw
pcmpeqb
paddd
paddb
inc
pcmpeqd
psubd
movq
por
mov
pslld
pmullw
pcmpeqb
paddd
mov
paddb
pcmpeqd
psubd
movq
ret
sbb
xchg
mov
or
(bad)
mov
ins
lock
push
inc
sub
inc
je
push
ficomp
mov
and
not
por
pslld
pmullw
pcmpeqb
mov
paddd
paddb
pcmpeqd
psubd
push
movq
por
pslld
pmullw
pop
pcmpeqb
paddd
paddb
pcmpeqd
mov
psubd
movq
por
pslld
mov
pmullw
pcmpeqb
paddd
paddb
push
pcmpeqd
psubd
movq
por
mov
pslld
pmullw
pcmpeqb
paddd
mov
paddb
pcmpeqd
psubd
movq
por
pslld
pmullw
pcmpeqb
cmp
jne
paddd
paddb
pcmpeqd
psubd
movq
por
pslld
pmullw
cmp
jne
pcmpeqb
paddd
paddb
pcmpeqd
pop
psubd
movq
por
pslld
mov
pmullw
pcmpeqb
paddd
paddb
mov
pcmpeqd
psubd
movq
por
mov
pslld
pmullw
pcmpeqb
paddd
add
paddb
pcmpeqd
psubd
movq
mov
por
pslld
pmullw
pcmpeqb
mov
paddd
paddb
pcmpeqd
psubd
add
movq
por
pslld
pmullw
mov
pcmpeqb
paddd
paddb
pcmpeqd
add
psubd
psrad
psrld
packsswb
lods
pcmpgtw
packssdw
paddd
pandn
test
je
pcmpeqb
paddsb
psllq
paddusw
add
pslld
pcmpgtw
packssdw
paddd
mov
pandn
pcmpeqb
paddsb
psllq
cmp
jne
paddusw
pslld
pcmpgtw
packssdw
mov
paddd
pandn
pcmpeqb
paddsb
cmp
jne
psllq
paddusw
pslld
pcmpgtw
mov
packssdw
paddd
pandn
pcmpeqb
xor
paddsb
psllq
paddusw
pslld
push
pcmpgtw
packssdw
paddd
pandn
push
pcmpeqb
paddsb
psllq
paddusw
push
pslld
pcmpgtw
packssdw
paddd
push
pandn
pcmpeqb
paddsb
psllq
push
paddusw
pslld
pcmpgtw
packssdw
push
paddd
pandn
pcmpeqb
paddsb
push
psllq
paddusw
pslld
pcmpgtw
push
packssdw
paddd
pandn
pcmpeqb
call
paddsb
psllq
paddusw
pslld
add
pcmpgtw
packssdw
paddd
pandn
ret
pop
cwde
mov
fucomi
xor
movs
rol
jnp
and
xor
pop
jno
push
sub
inc
mov
inc
stos
cmp
lds
fisub
pop
sbb
lods
das
addr16
mov
ret
cmp
out
mov
push
cmp
aad
fdiv
sbb
sub
cmovg
lods
mov
in
xchg
sti
mov
cmp
pop
mov
jg
xor
cmc
adc
cmp
movs
mov
ins
cmp
retf
pushf
jmp
(bad)
sahf
sbb
or
lods
lock
int3
mov
push
call
ins
lock
push
nop
inc
sub
inc
je
push
ficomp
mov
or
xlat
xor
sbb
fsubp
dec
push
not
aas
cmp
jecxz
push
mov
and
fsubp
dec
push
stos
nop
sub
in
ror
fwait
lea
cmp
xchg
ds
popf
xchg
sub
mov
and
fwait
fwait
or
lea
and
mov
dec
push
lea
dec
push
pop
adc
jle
sti
jp
arpl
pop
iret
jmp
cmp
rol
cmps
add
adc
push
mov
loop
push
xor
sub
aaa
xchg
mov
and
mov
ins
lock
stc
nop
inc
sub
inc
je
push
ficomp
mov
and
not
mov
cwde
mov
fucomi
popf
movs
rol
jnp
and
xor
jno
push
sub
imul
inc
stos
cmp
in
jae
fisub
pop
sbb
lods
das
addr16
jo
ret
cmp
out
mov
push
cmp
aad
xlat
stc
(bad)
dec
repz
arpl
retf
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
repnz
dec
popa
xor
jmp
jecxz
mov
push
addr16
(bad)
call
pusha
(bad)
cmp
push
test
(bad)
loop
dec
mov
pushf
fmul
arpl
jbe
dec
(bad)
cmp
fidivr
retf
out
loop
dec
mov
jecxz
or
arpl
dec
fucomi
out
mul
arpl
xchg
out
nop
stc
jecxz
adc
mov
fisubr
pop
fninit
arpl
(bad)
arpl
jbe
dec
(bad)
or
jbe
dec
(bad)
pop
dec
shl
arpl
or
dec
fisubr
dec
xor
inc
dec
fidivr
arpl
fistp
sub
fisub
dec
aad
lods
dec
(bad)
mov
(bad)
arpl
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
push
inc
dec
fidivr
arpl
pop
jg
dec
fidiv
push
dec
fimul
or
sbb
cdq
pop
and
mov
sbb
sbb
fidivr
arpl
adc
fidivr
arpl
pop
jmp
dec
fisub
dec
fsub
arpl
(bad)
out
mul
arpl
out
and
sbb
fstp
jecxz
sbb
(bad)
loopne
(bad)
out
icebp
jecxz
inc
mov
inc
inc
lods
sub
pusha
call
loope
dec
xor
dec
ficom
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
sub
adc
mov
push
(bad)
push
dec
(bad)
jmp
cmp
adc
cli
dec
dec
ficomp
dec
(bad)
ins
jmp
xor
dec
pop
sbb
pop
loop
dec
fcmovbe
stos
rcl
dec
fimul
aas
popa
(bad)
cmp
xchg
mov
adc
sbb
es
out
arpl
or
or
or
popa
(bad)
cmp
xchg
sti
mov
repnz
adc
xor
es
ffreep
arpl
or
or
or
dec
(bad)
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
call
outs
(bad)
cmp
push
cmps
sub
xchg
out
popf
std
jecxz
adc
loope
dec
fisubr
jno
scas
addr16
arpl
or
int3
jbe
arpl
scas
addr16
arpl
or
int3
(bad)
arpl
scas
addr16
arpl
or
int3
into
loop
dec
push
scas
addr16
arpl
or
dec
(bad)
jmp
scas
addr16
arpl
or
dec
(bad)
jmp
scas
addr16
arpl
or
dec
(bad)
jmp
ss
dec
fidivr
pop
mov
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
cli
jp
ret
or
(bad)
jmp
sbb
aam
call
mul
mov
cmc
arpl
sahf
outs
js
and
loop
(bad)
arpl
adc
dec
(bad)
arpl
lahf
mov
arpl
mov
adc
jecxz
aad
jecxz
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
ret
loopne
(bad)
out
aad
arpl
lahf
mov
rcr
arpl
xor
pushf
mov
sub
dec
sub
lahf
mov
out
fsub
arpl
xor
ret
loopne
(bad)
out
fsub
arpl
lahf
mov
rcr
arpl
cmps
out
loop
ret
dec
lea
pushf
fmul
loop
dec
mov
arpl
bound
pop
or
dec
(bad)
xor
dec
sti
bound
or
outs
(bad)
cmp
sbb
movs
add
mov
mov
ret
loop
pop
loopne
dec
push
scas
aaa
add
pop
arpl
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
ret
push
imul
or
pop
cmp
stos
loopne
ficom
jmp
call
mov
jecxz
dec
fisubr
inc
fbld
dec
fidivr
arpl
sahf
outs
enter
dec
fimul
arpl
loope
dec
mov
or
jecxz
push
and
out
loopne
jmp
dec
mov
imul
and
bound
mov
lea
aad
sbb
or
dec
(bad)
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
aad
ins
inc
mov
or
jecxz
and
mov
(bad)
cmps
call
dec
aad
push
mov
sbb
mov
aaa
rcr
arpl
push
ja
fisubr
popa
pop
fsubr
dec
mov
push
mov
fisub
adc
push
inc
dec
add
cmp
dec
add
retf
into
int3
sbb
loop
(bad)
scas
adc
xor
movq
push
xchg
test
jmp
xor
mov
arpl
mov
jg
mov
jecxz
or
push
push
inc
push
scas
inc
ret
bound
out
push
dec
push
lods
xor
push
(bad)
bound
push
loopne
xchg
push
inc
pop
and
rcl
sub
pop
and
push
sahf
or
dec
(bad)
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
imul
jmp
mov
(bad)
jecxz
adc
popf
popf
mov
sbb
rcr
pushf
rcr
arpl
push
sbb
aad
arpl
shr
mov
jmp
ds
mov
fimul
arpl
ficomp
popa
and
jecxz
dec
fisub
dec
aad
int3
mov
sbb
fcmovnb
jecxz
adc
imul
or
and
push
jp
fidivr
pushf
rcr
arpl
scas
imul
push
jp
fidivr
rcl
jecxz
mov
mov
popf
pop
(bad)
mov
(bad)
arpl
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
push
shl
adc
leave
sahf
mov
mov
je
jecxz
mov
sub
pop
pop
arpl
pusha
fwait
dec
scas
mov
int
(bad)
cmp
and
jmp
js
xor
or
push
xor
fisubr
retf
xor
(bad)
jmp
jnp
mov
retf
ins
int3
out
arpl
mov
mov
and
dec
(bad)
xor
call
mov
out
push
rcr
mov
dec
arpl
mov
and
shl
and
jecxz
dec
mov
pushf
fadd
arpl
retw
dec
(bad)
or
in
pushf
(bad)
mov
arpl
push
ret
dec
(bad)
pushf
fisubr
inc
and
push
arpl
inc
jecxz
dec
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
dec
dec
push
in
pushf
cmp
xchg
addr16
pushf
jnp
mov
retf
ins
int3
(bad)
call
inc
(bad)
fisubr
pushf
cmp
sbb
dec
push
mov
mov
sbb
push
pop
sbb
pop
pop
imul
test
xor
fisubr
enter
dec
fiadd
ins
out
test
and
mul
(bad)
mov
adc
loopne
dec
mov
inc
and
pusha
fwait
dec
aad
fadd
jecxz
adc
push
hlt
push
lods
jae
fnsetpm(287
arpl
pusha
fdivp
(bad)
arpl
addr16
dec
(bad)
call
push
(bad)
cmp
and
jmp
cmp
sbb
retf
ins
int3
mov
movs
jnp
jl
arpl
adc
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
xchg
mov
sub
or
out
mov
and
push
mov
arpl
pusha
mov
inc
and
sbb
pop
inc
push
fisubr
pop
pop
and
dec
(bad)
call
dec
nop
retf
jmp
sti
arpl
or
and
push
addr16
pusha
fwait
dec
aad
or
(bad)
mov
call
dec
retf
and
push
pushf
fadd
arpl
ror
jecxz
call
push
mov
pop
retf
call
ror
dec
fisubr
dec
xor
ja
fidivr
pushf
and
mov
xor
icebp
(bad)
arpl
and
jecxz
push
rcr
mov
or
dec
(bad)
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
ja
fstp
in
pop
and
mov
xor
std
(bad)
arpl
push
jle
dec
(bad)
loop
es
dec
mov
inc
and
mov
fisubr
dec
push
hlt
pusha
add
push
jmp
xor
jmp
push
jle
dec
(bad)
loop
(bad)
arpl
push
pushf
push
ret
and
push
enter
dec
fidiv
arpl
and
(bad)
xor
(bad)
jmp
jnp
mov
mov
sub
(bad)
arpl
and
dec
mov
xor
fisubr
inc
and
or
and
mov
and
jecxz
push
rcr
mov
sti
mov
arpl
xchg
out
mov
xor
fwait
mov
push
int
jecxz
mov
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
push
sar
ret
mov
jecxz
adc
mov
mov
push
leave
(bad)
arpl
xchg
out
mov
push
and
int
arpl
or
and
jecxz
adc
sbb
retf
pop
push
push
cmps
adc
fimul
cmp
push
pushf
fcomp
arpl
pop
lahf
inc
(bad)
addr16
xor
mov
lahf
sub
shl
inc
and
scas
addr16
arpl
or
dec
and
and
dec
(bad)
xor
fisttp
pushf
fisubr
inc
and
jecxz
dec
sbb
jecxz
dec
(bad)
call
pop
(bad)
cmp
xor
dec
fcmovbe
push
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
jns
rcl
jmp
mov
or
cmp
sbb
retf
ins
int3
xchg
out
dec
push
scas
addr16
arpl
or
into
push
loop
dec
push
sbb
mov
in
dec
mov
inc
and
pop
lahf
dec
(bad)
pusha
dec
(bad)
ins
int3
sti
adc
lahf
inc
(bad)
addr16
pop
push
popa
dec
fisubr
dec
xor
dec
fidivr
pushf
sbb
push
pushf
cdq
push
scas
addr16
arpl
or
mov
mov
scas
addr16
arpl
or
mov
cmps
loop
dec
push
movs
addr16
(bad)
arpl
fs
(bad)
call
dec
mul
jae
fisubr
int
jecxz
mov
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
xor
pop
mov
arpl
sbb
fninit
arpl
and
jecxz
test
dec
fucomi
out
fninit
arpl
pop
jg
dec
fcmovu
sahf
dec
fisub
ins
int
loop
dec
out
cdq
movs
aam
out
fninit
arpl
arpl
(bad)
pop
repz
arpl
mov
dec
fcmovu
cmps
dec
(bad)
ins
int
loop
dec
out
arpl
in
out
fninit
arpl
jne
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
out
dec
int3
je
jecxz
mov
addr16
dec
(bad)
pop
ins
(bad)
mov
dec
fcmovu
cmc
dec
fisub
pop
xor
out
dec
pop
xchg
adc
mov
mov
add
mov
pop
sub
loopne
dec
pop
in
out
fninit
arpl
arpl
(bad)
mov
dec
fcmovu
bound
arpl
loop
dec
xor
loopne
dec
loop
dec
fist
neg
(bad)
arpl
fsub
bound
push
sti
dec
(bad)
pushf
dec
arpl
je
dec
(bad)
mov
and
pushf
and
mov
sbb
pushf
inc
arpl
push
test
loop
dec
xor
mov
(bad)
arpl
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
ret
inc
imul
mov
arpl
push
test
loop
dec
xor
pushf
mov
mov
fninit
pushf
inc
arpl
push
test
loop
dec
xor
popf
mov
push
arpl
and
ins
int
sbb
arpl
setge
sbb
or
jecxz
dec
ficomp
dec
push
mov
mul
(bad)
arpl
and
cmp
mov
pushf
(bad)
pop
loop
dec
and
jecxz
push
rcr
mov
dec
arpl
mov
fninit
pushf
inc
arpl
push
test
loop
dec
arpl
imul
loopne
ficom
neg
(bad)
arpl
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
sbb
movs
pushf
jmp
jecxz
and
sbb
int
jecxz
mov
arpl
fisubr
inc
and
jecxz
dec
xor
mov
mov
(bad)
jmp
jnp
mov
mov
push
cmps
pop
retf
ins
int
loop
dec
mov
jecxz
or
push
sub
lahf
repz
fmul
pop
pop
(bad)
cmp
dec
pop
and
push
jmp
push
imul
jecxz
push
mov
sbb
push
sbb
das
pop
fild
scas
adc
push
inc
pop
and
dec
(bad)
nop
in
push
sahf
outs
enter
dec
fimul
loop
(bad)
arpl
bound
and
jecxz
xor
bound
sbb
movs
sbb
xchg
ja
fidivr
arpl
adc
mov
dec
ficom
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
das
push
xchg
mov
(bad)
bound
ret
loop
(bad)
arpl
inc
mov
leave
jecxz
adc
mov
dec
(bad)
arpl
adc
popa
dec
sbb
pop
xor
push
aad
call
call
bound
jecxz
ret
loopne
ficom
mov
jecxz
adc
cmp
inc
pop
and
(bad)
or
mov
or
dec
cmps
and
jecxz
dec
mov
or
jecxz
dec
pop
mov
sbb
push
ret
jmp
sbb
push
fninit
arpl
popf
scas
mov
(bad)
arpl
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
(bad)
inc
jl
mov
and
fidiv
ror
(bad)
xor
and
jecxz
mov
mov
pop
push
cmps
outs
dec
sbb
pop
dec
add
inc
push
cmps
outs
ret
mov
jmp
mov
in
mov
push
inc
cmp
cmp
(bad)
(bad)
arpl
jecxz
dec
mov
or
loope
dec
(bad)
and
and
push
retf
or
sbb
add
fidiv
xor
dec
xlat
jecxz
adc
loopne
mov
arpl
fidiv
jecxz
pop
out
(bad)
arpl
xchg
mov
adc
lods
mov
sbb
jecxz
dec
(bad)
jmp
jecxz
retf
xor
fimul
arpl
mov
mov
push
pop
sbb
pop
sbb
fimul
(bad)
dec
(bad)
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
or
inc
(bad)
cmp
and
push
enter
dec
(bad)
cld
mov
jecxz
add
sub
push
jbe
dec
(bad)
jmp
inc
fisttp
das
and
inc
lods
jecxz
dec
fwait
and
inc
mov
and
inc
mov
and
inc
(bad)
arpl
and
inc
(bad)
arpl
sbb
fsub
arpl
sbb
or
xor
pusha
fiadd
scas
loop
shl
dec
shl
arpl
fimul
arpl
fmul
xor
into
and
arpl
mov
jmp
jbe
dec
fidivr
arpl
je
dec
fidiv
enter
dec
fidivr
leave
and
pop
push
cld
jecxz
hlt
xchg
gs
pop
and
xor
dec
cli
movs
movs
dec
cld
movs
movs
dec
cli
movs
movs
dec
clc
or
dec
or
dec
(bad)
mov
(bad)
arpl
icebp
jno
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
cmps
out
jmp
jecxz
dec
mov
loopne
fidiv
arpl
mov
mov
sbb
ficomp
sbb
xor
fidivr
js
xchg
out
mov
xor
popf
enter
dec
fimul
mov
aam
arpl
pop
(bad)
call
bound
pop
pop
or
xor
dec
fidiv
or
jecxz
dec
mov
loop
(bad)
arpl
sbb
dec
fninit
arpl
fimul
mov
push
call
mov
sub
push
push
(bad)
in
movs
or
pop
and
and
push
movs
sbb
ins
fninit
arpl
gs
(bad)
mov
aam
arpl
push
clc
jmp
and
fidivr
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
nop
add
mov
dec
sub
dec
fimul
arpl
push
dec
dec
(bad)
or
sbb
fadd
arpl
inc
dec
(bad)
jmp
jb
dec
fidivr
outs
sub
fisubr
inc
jmp
and
jmp
mov
and
(bad)
arpl
jmp
shr
inc
push
xlat
je
cwde
or
dec
fisubr
push
jmp
call
push
push
mov
or
sbb
retf
push
mov
scas
out
fisttp
jecxz
rcr
arpl
sbb
add
sub
dec
fisubr
jne
jecxz
rol
dec
fiadd
push
cld
jmp
dec
scas
out
add
mov
pusha
mov
mov
pusha
mov
dec
(bad)
add
retf
bound
push
jno
jecxz
repz
pop
dec
(bad)
pop
push
shr
out
fninit
arpl
(bad)
jmp
push
int
and
xor
arpl
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
mov
push
aaa
loop
fiadd
(bad)
jecxz
ret
bound
adc
retf
push
push
inc
dec
(bad)
push
xchg
mov
loope
int3
(bad)
loop
dec
push
jle
dec
(bad)
add
xlat
bound
or
xor
popf
mov
bound
ror
arpl
(bad)
jmp
jecxz
or
and
aad
call
imul
mov
arpl
jecxz
xchg
push
and
mov
(bad)
arpl
jns
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
shr
inc
rol
jmp
mov
cmps
sbb
stos
adc
adc
mov
xchg
popa
shl
addr16
pop
and
add
adc
push
mov
pop
mov
fwait
imul
fwait
push
daa
ins
fidiv
pop
dec
(bad)
xor
call
and
jecxz
adc
inc
dec
sbb
fisttp
push
lock
mov
mov
add
test
xchg
sbb
cld
mov
(bad)
pushf
stos
xor
mov
(bad)
data16
jecxz
ret
lods
ret
jmp
out
or
sbb
ret
loopne
fbld
mov
sbb
cmp
xchg
jp
jecxz
jmp
jecxz
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
(bad)
in
jle
or
mov
sar
lahf
xchg
adc
test
or
mov
sbb
and
rcl
xor
pop
sbb
xchg
pop
cmp
(bad)
cs
mov
xor
or
and
scas
add
scas
cmps
adc
mov
arpl
popf
xchg
or
mov
cmp
or
and
xchg
or
scas
xchg
add
test
arpl
popf
xchg
sbb
mov
or
dec
(bad)
sbb
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
scas
test
mov
add
mov
xor
xchg
or
mov
mov
aas
sbb
pop
scas
mov
cmp
xchg
and
or
and
xchg
push
sub
xchg
sub
add
xchg
sub
mov
lea
dec
xor
xchg
mov
or
mov
xchg
pop
cmp
(bad)
cs
mov
xor
or
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
lea
daa
cmps
mov
xchg
xchg
xor
xchg
push
sub
mov
sub
xchg
add
pushf
mov
xchg
and
scas
mov
sbb
mov
add
mov
xchg
xor
mov
sbb
mov
add
mov
push
sub
xor
xor
mov
mov
cmp
mov
mov
es
add
fimul
mov
and
cmps
sbb
scas
mov
adc
mov
or
xchg
and
adc
mov
adc
fimul
shl
xchg
add
mov
add
test
lods
or
dec
xor
dec
fiadd
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
ds
xchg
and
test
sub
xchg
or
mov
ins
mov
cmp
xchg
or
mov
jecxz
mov
xchg
movs
aaa
push
fwait
mov
adc
mov
or
scas
mov
or
test
xchg
push
daa
scas
mov
cmp
cmps
sbb
mov
adc
mov
punpckhwd
adc
and
xchg
and
mov
pushf
mov
mov
cmp
mov
or
lahf
fwait
arpl
in
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
aam
jle
xor
and
xchg
cmp
cmps
adc
mov
cdq
xchg
push
sub
mov
sub
mov
sub
xchg
ds
mov
xchg
sbb
xchg
sub
nop
arpl
mov
or
mov
sbb
mov
adc
fimul
pop
lahf
and
xchg
dec
xor
mov
mov
or
sub
lea
dec
xor
mov
mov
push
btr
xchg
xchg
and
xchg
push
btr
mov
es
xchg
sub
or
add
xchg
and
xchg
sbb
mov
mov
xchg
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
ds
mov
pushf
or
mov
sbb
cmps
arpl
fidiv
arpl
mov
adc
xchg
dec
xor
push
mov
add
fwait
jecxz
(bad)
or
xchg
add
mov
push
dec
xor
mov
mov
cs
xchg
push
daa
xchg
xchg
or
mov
pushf
mov
mov
and
xor
nop
mov
mov
cmp
fwait
xchg
pop
cmp
nop
xor
xor
mov
sub
jecxz
xor
mov
(bad)
lahf
fwait
push
sub
or
xchg
and
scas
or
mov
lods
add
mov
mov
mov
add
mov
or
xchg
and
movs
or
mov
sbb
push
mov
xchg
xor
scas
mov
xor
mov
test
push
cmp
or
dec
(bad)
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
(bad)
cld
outs
push
mov
sub
sbb
mov
and
ret
and
mov
or
imul
and
stos
(bad)
xchg
or
mov
dec
inc
ror
and
mov
xchg
cmp
xchg
fimul
add
cli
rol
rol
rol
shl
lea
pushf
mov
jecxz
dec
xor
arpl
or
and
jecxz
outs
or
jecxz
mov
(bad)
arpl
mov
mov
mov
or
hlt
xchg
sub
or
mov
scas
add
cmps
and
mov
cmp
mov
mov
dec
xor
mov
and
jecxz
and
sbb
xor
push
mov
mov
add
pushf
dec
(bad)
arpl
(bad)
loopne
dec
xor
and
or
and
jecxz
add
or
add
add
add
mov
add
xchg
pop
add
jae
add
add
add
push
adc
add
sub
add
mov
add
add
add
add
add
jge
add
lea
add
xchg
add
add
add
add
add
xchg
add
ins
je
add
add
add
add
add
xor
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
pop
ja
inc
imul
dec
jp
add
adc
add
dec
pop
(bad)
stos
mov
add
add
add
add
add
inc
add
(bad)
inc
add
or
and
add
add
add
push
add
adc
dec
add
add
add
add
add
add
add
inc
xor
push
xor
add
add
push
push
gs
ja
xor
add
add
add
add
data16
sbb
gs
pusha
add
jbe
push
push
ss
push
jo
rol
add
add
push
push
data16
mov
xor
add
add
add
add
js
mov
push
pop
xchg
jo
add
add
add
add
push
ja
js
gs
push
gs
dec
pop
add
add
add
add
addr16
mov
push
push
ja
gs
add
add
add
add
push
ja
mov
push
push
ja
push
add
add
add
add
push
push
ja
mov
push
push
ja
push
add
add
add
add
xchg
gs
push
push
push
xchg
pusha
pop
addr16
js
jbe
data16
xchg
pusha
pop
addr16
mov
gs
push
xchg
jo
add
add
add
add
mov
gs
push
xor
add
add
add
add
push
push
mov
push
push
push
push
xchg
jo
add
add
add
add
push
jne
push
push
(bad)
js
enter
add
add
add
add
ja
mov
adc
xchg
pusha
add
add
add
add
push
jbe
gs
push
push
ja
push
add
add
add
add
push
push
jne
push
push
push
push
gs
mov
add
add
pop
push
ja
ja
ja
adc
add
add
add
pop
inc
mov
js
xchg
adc
add
js
mov
ja
push
adc
add
add
add
add
add
mov
addr16
gs
inc
push
add
add
add
add
add
ja
push
inc
xor
stos
mov
or
arpl
inc
xchg
cmps
test
ds
jne
inc
add
add
add
add
add
push
fs
add
add
add
adc
dec
pop
add
push
push
add
push
data16
add
add
xchg
inc
add
push
push
add
add
add
or
inc
add
add
add
add
xor
add
add
add
xor
add
add
add
data16
sbb
add
or
push
add
add
add
data16
or
push
rol
add
or
add
or
ss
add
add
add
inc
add
add
add
inc
push
pop
add
add
mov
add
adc
dec
pop
push
mov
add
inc
adc
add
add
add
adc
nop
or
adc
add
push
xor
inc
inc
adc
fadd
add
xchg
xor
adc
add
add
data16
xor
nop
cmc
add
add
or
inc
inc
nop
add
add
add
add
add
add
add
add
add
or
(bad)
(bad)
clc
add
inc
add
push
add
inc
add
inc
add
inc
add
cld
add
add
add
push
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
in
inc
add
inc
fadd
(bad)
std
add
add
add
inc
add
inc
add
jmp
add
inc
add
and
add
inc
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
add
inc
add
sub
pop
inc
add
add
(bad)
inc
add
lock
inc
add
clc
pop
(bad)
(bad)
inc
add
clc
aas
(bad)
(bad)
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
pop
clc
aas
inc
add
clc
pop
lock
(bad)
cmp
lock
inc
add
cld
pop
loopne
inc
add
cld
add
aas
inc
add
inc
cmp
add
inc
add
add
(bad)
inc
add
fadd
add
inc
add
jmp
pop
(bad)
inc
add
(bad)
clc
pop
(bad)
inc
add
(bad)
(bad)
(bad)
inc
add
add
popa
ins
imul
popa
jo
jns
xor
cmp
add
clc
add
add
add
add
add
add
add
add
or
dec
outs
jb
popa
arpl
xor
add
ins
imul
push
cmp
cwde
add
add
inc
sbb
add
add
add
ins
bound
xor
push
add
or
adc
add
add
add
or
inc
jb
outs
imul
jae
cmp
add
or
push
je
arpl
outs
jae
add
aas
adc
inc
add
add
add
pop
push
inc
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
add
add
add
fcomp
inc
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
mov
sbb
test
inc
add
inc
add
arpl
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
call
push
push
call
lea
push
fstp
call
push
lea
push
push
lea
push
push
call
lea
push
call
lea
lea
push
push
push
fstp
call
mov
add
push
push
push
push
push
push
call
mov
mov
lea
call
mov
lea
push
push
push
mov
mov
call
mov
lea
call
lea
call
push
push
push
call
fwait
push
jmp
lea
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
xor
mov
call
mov
mov
lea
push
push
lea
push
lea
push
push
push
call
mov
mov
call
test
je
mov
xor
call
mov
mov
lea
push
push
lea
push
lea
push
push
push
call
mov
call
test
je
mov
xor
call
mov
mov
lea
push
push
lea
push
lea
push
push
push
call
mov
call
test
je
mov
xor
call
mov
mov
lea
push
push
lea
push
lea
push
push
push
call
mov
call
test
je
mov
xor
call
mov
mov
lea
push
push
lea
push
lea
push
push
push
call
mov
call
test
je
push
call
mov
call
mov
test
jne
push
call
mov
call
mov
test
jne
push
call
mov
call
mov
test
jne
push
call
mov
call
mov
test
jne
push
call
mov
call
mov
test
jne
mov
mov
lea
mov
mov
call
mov
mov
call
push
lea
push
call
mov
push
call
lea
call
push
call
mov
mov
mov
add
jo
mov
cmp
jne
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
mov
call
jmp
mov
mov
push
push
call
mov
neg
sbb
inc
neg
lea
call
test
jne
mov
mov
push
lea
push
lea
push
call
mov
mov
call
mov
push
call
push
push
mov
push
mov
push
call
mov
mov
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
neg
sbb
neg
neg
lea
push
lea
push
push
call
add
lea
call
test
jne
mov
push
mov
push
fld
call
test
jle
mov
test
jne
push
push
call
mov
mov
test
jne
push
push
call
mov
mov
push
lea
push
call
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
call
push
call
mov
mov
push
push
push
push
push
call
push
call
mov
call
mov
push
call
mov
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
call
lea
call
ret
ret
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
pushf
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
mov
pop
add
mov
add
or
add
ficomp
add
sub
add
cli
pop
add
push
pop
add
push
pop
add
sub
add
inc
pop
add
xchg
add
sbb
add
add
jp
add
mov
add
pop
add
mov
pop
add
ja
add
out
add
cli
pop
add
push
pop
add
adc
add
and
xor
inc
pop
add
push
pop
add
fs
add
outs
pop
add
mov
call
xor
add
rcr
in
add
hlt
pop
add
(bad)
pop
add
adc
add
and
add
pop
add
inc
pop
add
pop
pop
add
push
add
lods
add
and
js
add
bound
add
xchg
pop
add
sahf
pop
add
scas
pop
add
mov
pop
add
int3
pop
add
fcomp
add
add
add
push
inc
push
dec
xor
inc
dec
dec
add
push
add
dec
arpl
add
mov
pop
popa
fs
data16
popa
outs
add
js
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
mov
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
dec
outs
inc
jae
jb
add
pop
pop
jbe
popa
push
popa
jb
imul
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
mov
pop
popa
fs
data16
gs
xor
sub
bound
gs
jns
je
ins
inc
jb
outs
jb
rol
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
push
imul
xor
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
jbe
popa
dec
bound
gs
jae
pop
pop
jbe
popa
inc
jns
fs
cmps
add
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
pop
imul
xor
imul
dec
jae
outs
add
outs
add
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
pop
pop
jbe
popa
inc
jns
xor
xor
pop
pop
jbe
popa
push
je
inc
ins
jo
jns
pop
pop
jbe
popa
inc
jns
xor
or
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
push
data16
je
outs
add
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
dec
add
jbe
popa
push
dec
xor
add
push
add
dec
jae
jb
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
cmps
add
jbe
popa
inc
jo
ins
jo
jns
add
bound
js
gs
dec
popa
outs
fs
gs
add
push
data16
gs
add
scas
add
fs
imul
ss
add
bound
push
inc
js
gs
imul
pop
pop
jbe
popa
inc
popa
je
push
popa
jb
add
pop
inc
dec
ins
outs
add
lea
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
dec
gs
add
push
imul
xor
add
push
imul
xor
imul
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
stos
add
fs
imul
iret
add
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
dec
outs
push
je
inc
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
mov
pop
popa
ins
ins
ins
jne
add
pop
inc
dec
je
outs
add
push
add
dec
gs
add
lods
add
jbe
popa
inc
jb
gs
bound
add
bound
jb
gs
je
