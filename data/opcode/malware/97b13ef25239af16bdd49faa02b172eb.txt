push
add
add
add
dec
add
add
add
add
add
pop
add
push
sub
add
add
add
xor
add
add
add
and
or
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
cmp
add
adc
mov
or
or
add
add
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
das
add
add
add
les
add
rol
add
add
add
add
push
or
or
add
add
inc
push
inc
add
add
or
add
pop
add
add
add
and
add
add
push
pop
pop
das
and
add
sub
add
add
add
add
add
add
mov
or
xchg
ins
and
add
add
(bad)
(bad)
inc
jle
add
add
pop
and
add
add
(bad)
(bad)
jmp
ret
and
add
shl
inc
inc
add
add
sub
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
jle
add
add
pop
add
add
add
inc
add
add
add
add
mov
or
sbb
(bad)
jmp
xchg
and
add
mov
or
or
(bad)
(bad)
ficomp
ficomp
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
adc
add
add
or
add
inc
add
add
pop
add
add
or
add
add
add
add
add
push
add
add
add
push
or
add
jmp
add
push
or
add
or
add
push
or
add
or
add
push
or
add
add
add
mov
or
mov
pop
dec
xor
add
sub
or
pop
ror
add
sub
and
add
add
fst
add
add
(bad)
add
add
add
or
add
add
push
or
add
add
add
pop
add
jo
adc
add
adc
jo
lea
add
add
pop
adc
push
jb
add
jo
adc
pop
adc
adc
adc
adc
add
adc
add
adc
add
jb
add
jo
adc
add
adc
add
add
push
add
push
adc
(bad)
add
add
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
push
add
add
(bad)
(bad)
jmp
add
add
add
pop
and
add
add
sub
adc
adc
add
add
mov
or
int3
sub
fmul
push
jae
add
or
add
sub
(bad)
jmp
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
or
add
add
(bad)
(bad)
dec
sub
and
add
add
sub
or
add
or
add
add
mov
or
into
sub
fsub
sub
jle
add
add
sub
pop
jle
add
add
pop
add
add
pop
add
add
add
fiadd
fiadd
jle
add
add
inc
push
add
inc
add
add
pop
add
add
push
push
pop
add
add
pop
or
add
es
std
(bad)
call
push
sub
add
inc
les
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
sbb
add
add
add
les
add
jg
add
inc
add
add
add
add
add
add
add
xor
add
add
add
call
add
add
add
add
add
sbb
add
add
add
sub
add
mov
add
add
add
sbb
add
add
add
or
add
sub
add
xor
add
push
add
add
add
add
xor
add
add
add
add
and
pause
adc
sbb
nop
adc
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
jge
test
and
test
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
sbb
add
jg
add
add
add
push
inc
add
add
add
add
inc
or
add
das
add
add
add
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
or
push
push
add
add
jo
adc
add
add
add
add
add
add
add
add
add
add
mov
sub
add
push
sub
add
or
xchg
add
add
add
add
mov
sub
add
add
(bad)
inc
sub
add
push
jb
add
jo
sbb
add
cmp
or
add
mov
cmp
(bad)
jmp
cmp
and
add
push
jge
add
add
or
add
mov
cmp
mov
test
add
pop
add
adc
add
or
add
or
pop
(bad)
(bad)
jmp
sbb
pop
jle
add
add
add
add
add
add
add
mov
cmp
(bad)
(bad)
jmp
dec
and
add
add
(bad)
inc
jle
add
add
arpl
(bad)
jmp
pop
add
add
(bad)
jmp
xchg
mov
push
mov
add
add
add
add
add
push
mov
add
add
cmp
(bad)
jmp
add
add
mov
cmp
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
inc
sbb
add
add
add
add
add
add
add
add
xor
call
add
adc
inc
add
add
push
add
add
inc
add
add
pop
add
add
add
xchg
add
js
add
jle
add
or
add
add
jo
stos
add
jo
jl
add
add
sbb
add
sub
add
or
adc
add
jb
add
jo
jl
add
add
sbb
add
sub
add
or
and
add
add
jb
add
jo
sbb
add
sub
and
add
add
add
and
add
push
jge
add
add
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
jmp
push
push
inc
inc
add
add
cmp
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
adc
add
add
add
into
add
sbb
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
mov
or
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
inc
repnz
add
inc
repnz
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
or
add
arpl
add
add
add
and
xchg
jae
outs
mov
add
add
add
add
add
push
mov
add
add
jle
add
add
jnp
add
add
popa
or
add
and
add
push
jge
add
add
add
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
sbb
add
sbb
add
jbe
add
add
add
push
inc
add
add
xor
add
pop
inc
or
add
push
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
push
add
add
add
jle
add
add
or
or
add
mov
sub
mov
xlat
test
and
test
mov
add
add
add
add
add
push
mov
add
add
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
inc
jle
add
add
jp
xor
add
sub
add
jnp
add
add
or
sub
add
push
and
add
add
(bad)
jmp
es
add
add
push
add
add
(bad)
jmp
aaa
push
pop
push
or
pop
add
add
(bad)
jmp
pop
and
or
or
(bad)
inc
sub
add
push
pop
inc
xor
add
add
mov
cmp
(bad)
(bad)
jmp
leave
and
add
add
(bad)
inc
jnp
add
add
enter
add
mov
cmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
xchg
add
add
add
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
pop
add
add
add
add
add
add
add
xor
sub
add
add
mov
add
mov
add
push
mov
push
adc
inc
add
add
add
add
sub
push
mov
sub
mov
stc
add
add
add
or
add
or
sub
push
inc
add
add
pop
add
add
push
inc
add
add
aaa
add
add
add
arpl
add
and
add
jle
add
or
or
add
pop
add
add
add
add
add
add
mov
push
sub
or
add
jo
pop
add
or
and
add
add
sub
jle
add
add
and
jle
add
add
add
add
add
add
mov
push
sub
add
add
fst
add
add
fst
add
add
inc
add
add
pop
add
add
push
inc
add
add
test
add
add
add
add
add
push
or
add
or
add
add
mov
push
sub
cmp
inc
add
add
pop
add
add
push
inc
add
add
dec
add
add
add
bound
add
adc
add
jle
add
or
add
add
add
mov
push
sub
and
add
inc
add
pop
mov
add
add
add
add
add
add
add
add
add
push
mov
add
add
adc
fld
add
sbb
add
sub
and
add
add
sub
jb
add
jo
add
add
add
mov
push
sub
add
add
(bad)
(bad)
(bad)
fidiv
add
add
mov
push
cmp
push
push
push
mov
push
add
or
(bad)
(bad)
jmp
add
add
mov
push
cmp
aaa
(bad)
(bad)
inc
outs
pop
add
or
add
add
(bad)
(bad)
(bad)
fimul
add
add
mov
push
sub
push
inc
add
add
adc
add
adc
inc
add
add
or
(bad)
(bad)
call
add
add
sub
and
add
add
sub
pop
outs
adc
add
add
mov
push
sub
sub
fcom
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
cmp
add
test
add
loopne
add
dec
add
add
add
add
xor
add
add
add
add
and
idiv
push
push
idiv
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
mov
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
add
add
push
add
add
add
add
bswap
aas
or
bswap
aas
or
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
pop
add
add
push
pop
add
add
push
or
add
add
add
xor
add
add
push
add
adc
aam
test
test
inc
add
add
add
add
add
add
add
add
add
mov
add
add
jle
add
or
add
add
pop
jge
add
add
inc
add
jnp
add
add
and
add
push
sub
add
or
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
add
push
push
add
sbb
add
sbb
add
xchg
add
pop
add
adc
inc
fcmovnu
and
inc
fcmovnu
and
add
add
add
add
push
mov
add
add
push
push
jle
add
add
pop
push
add
add
add
add
inc
pop
jle
add
add
jge
add
add
pop
push
or
add
add
add
jnp
add
add
push
add
pop
punpckhdq
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
ins
ins
add
sbb
add
sbb
add
add
add
add
adc
mov
pop
adc
inc
add
add
add
add
push
inc
add
add
pop
add
add
pop
inc
add
add
xlat
add
add
add
mov
add
out
add
jle
add
or
push
or
add
add
pop
push
add
add
sbb
add
or
add
add
jnp
add
add
push
add
jb
add
jo
jl
add
add
sbb
add
jb
add
jo
sbb
add
jge
add
add
inc
add
jo
adc
add
adc
add
or
add
add
mov
pop
cmp
(bad)
inc
jle
add
add
pop
add
or
and
add
add
(bad)
(bad)
jmp
add
add
jo
lea
push
adc
push
add
add
add
adc
pop
adc
sub
add
or
add
sbb
add
mov
jge
add
adc
sub
add
or
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
pop
cmp
(bad)
(bad)
(bad)
fimul
fimul
push
add
or
add
add
jo
xchg
add
adc
add
jge
add
add
sbb
add
fst
add
add
add
jo
cdq
add
jo
lods
add
jo
sbb
add
adc
add
fst
add
add
inc
add
add
pop
add
add
pop
inc
add
add
in
add
add
add
add
add
add
sub
add
or
add
add
mov
pop
sub
pop
mov
add
mov
add
cmp
(bad)
inc
jnp
add
add
cmp
push
add
and
add
pop
jge
add
add
adc
add
pop
push
add
pop
ficomp
adc
add
adc
jnp
add
add
pop
sbb
adc
add
push
fimul
adc
add
and
add
adc
add
(bad)
(bad)
jmp
dec
ins
jmp
mov
add
add
add
add
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
(bad)
call
add
add
and
add
add
(bad)
(bad)
(bad)
cmp
(bad)
dec
outs
and
add
or
add
adc
add
add
mov
pop
cmp
(bad)
(bad)
(bad)
cmp
(bad)
call
add
add
inc
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
js
add
mov
add
add
add
push
add
or
push
or
jnp
add
add
mov
add
adc
add
adc
add
adc
add
adc
add
add
add
add
push
add
sbb
xor
xor
add
add
add
add
add
add
add
add
push
mov
add
add
and
add
add
and
add
add
and
add
add
mov
cmp
(bad)
jmp
add
pop
sub
or
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
mov
add
add
xor
add
add
add
add
push
inc
add
add
push
add
add
inc
add
add
mov
add
mov
add
add
add
push
push
push
push
pop
or
and
add
pop
push
add
jb
add
jo
leave
add
jo
adc
add
jge
add
add
add
add
mov
sub
add
xlat
add
jo
sbb
add
sub
and
fst
inc
add
add
inc
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
and
add
add
(bad)
jmp
add
add
jo
or
adc
add
adc
add
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
rol
add
add
add
xor
add
add
add
jle
add
or
add
add
jae
add
or
add
add
sub
add
add
xor
add
add
add
add
and
outs
push
and
outs
push
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
or
jle
add
or
push
adc
add
add
xor
add
add
adc
mov
add
add
add
add
add
add
jle
add
add
inc
sbb
add
sbb
add
push
add
add
add
inc
sbb
add
(bad)
add
add
inc
add
add
inc
add
add
mov
add
mov
add
adc
push
add
add
add
add
add
fld
add
popa
add
add
add
add
add
add
add
cmps
add
add
add
call
add
add
pop
pop
or
add
add
mov
add
lods
or
imul
add
mov
add
popf
cmp
add
add
or
or
pop
xchg
add
xchg
popa
add
pushf
add
pop
xchg
pushf
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
or
pop
or
add
(bad)
(bad)
(bad)
cmp
add
add
add
add
mov
add
dec
(bad)
(bad)
inc
mov
add
add
or
add
mov
add
xor
(bad)
jmp
les
add
add
push
add
add
adc
add
sbb
add
inc
sbb
add
sbb
add
inc
sbb
add
adc
add
das
pop
push
add
adc
add
stos
add
add
adc
add
mov
fstp
or
or
sub
mov
stc
add
or
add
mov
add
ret
(bad)
cmp
inc
add
add
pop
add
add
add
add
add
inc
add
add
add
add
add
add
add
push
or
add
add
sbb
add
pop
pop
or
add
add
mov
add
iret
push
pop
sbb
add
add
sub
jle
add
add
inc
sbb
add
add
add
mov
add
cmps
sub
and
add
add
and
dec
in
and
dec
in
mov
add
add
add
add
mov
push
mov
add
add
fisubr
fisubr
and
add
add
(bad)
(bad)
dec
pop
mov
je
(bad)
jmp
pop
add
add
std
(bad)
(bad)
cmp
(bad)
(bad)
inc
mov
pop
lea
add
add
and
add
add
std
(bad)
jmp
and
add
std
(bad)
inc
cmp
(bad)
jmp
push
add
add
std
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
push
add
add
add
inc
adc
add
push
add
add
inc
sbb
add
fnsave
or
add
adc
cmp
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
push
add
add
add
inc
sbb
add
adc
add
pop
push
add
adc
add
pop
push
add
ds
(bad)
jmp
fnstsw
std
(bad)
inc
sub
add
add
add
add
add
add
add
add
dec
pusha
add
sbb
add
add
mov
cwde
and
add
add
add
add
push
sbb
add
add
retf
std
add
sbb
add
sbb
add
(bad)
or
add
push
mov
movups
inc
add
add
add
add
push
inc
add
add
aaa
add
add
cmovne
add
add
add
add
add
add
loope
add
inc
add
add
add
repz
add
add
add
add
add
or
add
add
inc
sbb
add
adc
add
pop
push
add
adc
add
pop
push
add
or
add
mov
movntps
add
daa
and
adc
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
inc
inc
push
inc
sub
and
add
add
(bad)
(bad)
call
sub
adc
add
add
add
mov
(bad)
(bad)
(bad)
inc
and
imul
add
add
(bad)
(bad)
jmp
sub
and
add
add
(bad)
(bad)
jmp
dec
and
add
add
(bad)
(bad)
inc
pop
das
inc
sub
add
(bad)
(bad)
inc
pop
inc
xor
and
add
mov
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
jmp
pop
add
add
(bad)
(bad)
call
sub
mov
(bad)
(bad)
(bad)
(bad)
fiadd
sub
inc
add
add
sub
add
adc
inc
or
add
out
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
or
or
add
or
add
add
cmp
inc
add
add
pop
add
add
cmovne
add
sub
add
push
add
add
add
add
add
jae
add
or
push
adc
jle
add
add
jp
add
inc
adc
add
adc
add
add
add
mov
movntps
das
sub
add
add
mov
movntps
add
add
and
adc
add
adc
and
add
add
sub
and
add
add
fisttp
add
fld
add
add
inc
add
add
pop
add
add
cmovne
add
xor
add
data16
add
add
pop
add
add
pop
xor
xor
add
add
add
add
add
add
cmp
add
add
mov
add
add
push
or
add
add
mov
movntps
and
add
sub
jle
add
add
pop
push
add
add
add
mov
movntps
add
add
(bad)
add
add
frstor
add
or
pop
add
push
xchg
pushf
adc
pop
pop
adc
and
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
inc
add
add
daa
add
add
cmovne
add
add
add
inc
add
cmp
add
add
add
add
add
add
add
or
add
add
or
adc
add
push
add
add
sbb
add
add
jle
add
add
pop
push
add
add
add
mov
movntps
pop
jge
and
add
add
sub
jecxz
add
adc
add
push
add
add
adc
add
jb
add
jo
sub
add
adc
add
(bad)
(bad)
(bad)
cmp
push
add
add
(bad)
(bad)
call
sub
and
add
mov
(bad)
(bad)
(bad)
(bad)
jle
add
add
sbb
add
add
add
jb
add
jo
lea
add
add
push
adc
push
jb
add
jo
adc
pop
jg
add
add
sbb
add
mov
add
or
add
add
jo
pop
add
or
and
add
add
(bad)
(bad)
call
add
jo
pop
add
or
and
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
mov
(bad)
(bad)
(bad)
(bad)
ffree
add
add
fnstsw
inc
add
add
pop
add
add
cmovne
add
inc
add
add
add
popa
add
add
add
add
adc
jle
add
add
or
or
add
add
pop
push
add
push
add
add
push
add
add
add
add
mov
movntps
add
push
add
add
sub
add
add
mov
movntps
adc
pop
pop
push
pop
pop
push
pop
push
add
add
add
mov
movntps
add
add
(bad)
(bad)
(bad)
fst
fst
lea
add
add
add
adc
add
add
mov
(bad)
cld
(bad)
(bad)
cmp
adc
push
adc
and
adc
cmp
out
add
add
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
add
cmp
add
add
add
add
mov
add
pop
push
add
add
add
mov
(bad)
retf
add
add
sbb
add
and
add
add
mov
movntps
add
mov
movntps
add
inc
sub
add
push
sub
sbb
add
add
add
mov
movntps
add
(bad)
push
add
add
inc
adc
add
push
add
add
inc
adc
add
sbb
add
push
add
add
add
inc
adc
add
adc
add
inc
pop
push
add
sbb
add
push
add
add
add
inc
sbb
add
es
cld
(bad)
jmp
add
add
mov
(bad)
sti
(bad)
call
pop
or
(bad)
jmp
push
add
add
sti
(bad)
(bad)
cmp
(bad)
(bad)
call
add
pop
add
push
xchg
pushf
adc
pop
pop
adc
adc
pop
pop
adc
and
add
mov
(bad)
cli
(bad)
jmp
mov
mov
add
imul
add
mov
(bad)
cli
(bad)
(bad)
cmp
std
(bad)
inc
adc
or
add
sbb
add
adc
add
add
mov
(bad)
cli
(bad)
(bad)
fst
add
add
sub
push
inc
add
add
sub
add
adc
inc
or
add
fiadd
add
pop
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
dec
inc
adc
add
adc
add
popa
inc
push
inc
sbb
add
pop
add
add
jle
add
add
and
or
add
mov
movntps
add
add
jle
add
add
and
add
adc
add
add
mov
(bad)
(bad)
(bad)
call
sub
sbb
add
push
add
add
inc
sbb
add
push
add
add
sbb
add
add
jle
add
add
mov
add
inc
sbb
add
add
add
mov
(bad)
(bad)
(bad)
(bad)
jle
add
add
push
add
add
and
add
adc
cmp
(bad)
(bad)
jmp
add
add
add
mov
pmulhrsw
(bad)
(bad)
jle
add
add
adc
add
add
mov
(bad)
(bad)
(bad)
call
sub
sbb
add
adc
add
pop
push
add
push
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
fiadd
push
inc
add
add
pop
add
add
cmovne
add
cmp
add
dec
add
add
add
pop
add
add
push
or
add
add
inc
sbb
add
or
jo
inc
push
inc
sbb
add
or
push
adc
adc
pop
push
adc
and
add
add
adc
pop
adc
and
add
add
mov
movntps
pop
cmp
adc
and
add
add
sub
and
add
add
fucomp
clc
(bad)
jmp
fucom
clc
(bad)
call
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
or
add
add
push
add
add
add
add
add
sbb
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
pop
add
add
add
sbb
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
pop
add
jo
add
push
add
add
add
add
xor
add
add
add
add
add
jae
add
or
add
add
sub
add
or
add
add
add
dec
add
add
add
add
add
mov
sub
mov
stc
add
xor
jnp
xor
jnp
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
push
adc
add
adc
add
sbb
add
add
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
dec
and
dec
into
sbb
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
fcomp
sahf
ja
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
sbb
add
xchg
add
add
add
and
lahf
fs
gs
add
add
add
add
add
add
add
add
add
push
mov
add
add
push
mov
or
or
add
add
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
jo
lea
add
add
pop
adc
push
jg
add
add
adc
add
mov
arpl
add
adc
sbb
add
add
adc
add
mov
add
or
ficom
fimul
sub
push
mov
sub
mov
stc
add
sub
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
push
add
add
or
add
add
inc
sbb
add
pop
pop
inc
push
inc
sbb
add
pop
pop
push
add
mov
or
mov
and
add
sub
push
and
add
add
add
and
add
add
sub
and
add
add
fiadd
fiadd
push
inc
add
add
adc
add
adc
inc
add
add
adc
add
rol
add
add
sub
add
push
or
add
add
mov
or
(bad)
dec
jg
add
add
adc
add
sbb
add
ins
add
jo
lea
add
add
or
or
jb
add
jo
adc
sub
add
or
fisub
fisub
jae
add
push
or
add
sub
or
jg
add
lea
add
add
or
or
jle
add
add
adc
sub
add
or
jle
add
add
pop
add
or
jle
add
or
or
add
jo
adc
add
or
mov
pop
outs
daa
add
push
adc
and
add
add
(bad)
(bad)
(bad)
fld
sub
push
adc
push
add
or
jle
add
add
add
add
add
pop
add
add
pop
add
add
fwait
add
jo
lods
add
jo
pop
add
add
adc
add
sub
add
or
adc
pop
add
add
es
sbb
add
add
fiadd
fiadd
push
inc
add
add
daa
add
add
or
add
add
add
mov
add
mov
add
jp
add
iret
add
add
add
add
add
add
add
or
add
add
add
pop
add
or
jb
add
jo
fld
add
icebp
add
jo
sbb
add
adc
jo
lea
add
add
or
or
jg
add
add
adc
add
mov
add
or
add
add
(bad)
(bad)
call
add
add
sbb
add
sub
and
add
mov
or
pop
(bad)
(bad)
jmp
sub
add
add
mov
or
push
(bad)
(bad)
call
add
jo
pop
add
or
cmp
add
add
mov
or
xor
sub
and
add
add
(bad)
(bad)
call
add
add
sbb
add
sub
add
mov
or
or
(bad)
jmp
stos
sbb
add
push
add
add
(bad)
(bad)
jmp
add
pop
add
add
(bad)
(bad)
(bad)
fisttp
std
(bad)
jmp
fisttp
std
(bad)
call
mov
add
mov
add
adc
sub
add
inc
lods
add
mov
add
mov
add
add
add
sbb
add
add
add
call
add
add
add
add
sbb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
sbb
add
add
add
call
add
add
add
add
sbb
add
add
add
push
add
add
add
add
add
push
add
add
add
add
xor
add
add
add
add
pop
mov
add
mov
add
and
repnz
repnz
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
push
and
add
push
and
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
or
add
push
add
add
add
add
bound
push
and
sbb
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
and
add
and
add
add
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
inc
inc
add
sbb
add
add
add
push
add
add
add
add
jae
add
or
add
add
jle
add
or
add
add
pop
jge
add
add
sub
add
or
add
add
add
jae
add
or
push
add
push
add
sub
jle
add
or
and
add
add
add
or
sub
add
sub
add
add
inc
add
add
add
add
mov
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
les
lock
les
lock
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
sbb
add
add
inc
add
add
push
add
add
inc
add
add
or
add
xchg
add
add
add
pop
add
add
or
add
add
mov
sub
push
sub
and
add
add
mov
mov
inc
inc
add
add
fcos
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
sub
add
add
jo
push
add
add
adc
add
sub
add
push
and
add
add
add
jb
add
jo
lea
add
add
pop
push
jle
add
add
pop
pop
jb
add
jo
pop
sub
add
or
and
add
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
mov
add
sbb
add
sbb
add
ret
add
add
adc
mov
push
adc
inc
add
add
add
add
push
inc
add
add
das
add
add
push
inc
or
add
ret
add
add
add
add
or
add
rol
add
test
add
daa
add
add
add
sbb
add
push
or
add
add
mov
push
sub
push
pop
push
das
or
or
add
mov
push
sub
add
add
add
and
add
jle
add
add
pop
add
or
and
add
add
sub
pop
pop
ror
and
add
add
(bad)
(bad)
jmp
imul
add
add
(bad)
(bad)
inc
jnp
add
add
push
add
add
sbb
add
sub
and
add
add
(bad)
(bad)
jmp
mov
add
push
jb
add
jo
sbb
add
jge
add
add
add
add
mov
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
call
sbb
add
add
add
mov
push
cmp
(bad)
(bad)
jmp
xchg
and
adc
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
inc
add
add
adc
add
adc
inc
add
add
push
add
add
add
add
add
add
sub
mov
add
mov
add
and
add
add
pop
sub
add
mov
push
sub
sub
push
add
xor
add
or
add
add
mov
push
sub
sub
mov
stc
add
jnp
inc
add
add
pop
add
add
push
inc
add
add
adc
add
and
add
dec
add
add
add
add
adc
adc
add
adc
rol
add
xor
and
add
add
sub
adc
add
add
sub
adc
adc
pop
rcl
add
add
add
mov
push
sub
add
(bad)
inc
add
add
pop
add
add
push
inc
add
add
jg
add
dec
add
add
add
adc
add
push
or
push
add
or
add
or
sub
add
cs
and
and
sbb
add
add
cmp
add
add
add
cmp
add
add
mov
add
add
and
add
add
sub
add
add
jo
outs
and
add
sub
add
sub
add
push
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
fstp
fst
jnp
add
add
cmp
add
pop
add
add
add
add
push
sub
add
add
sbb
add
sbb
add
add
add
sbb
add
add
add
test
add
jne
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
and
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
(bad)
jae
or
das
jae
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
add
add
dec
add
add
add
add
sub
rcl
and
loopne
pop
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
jle
add
or
pop
sbb
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
adc
mov
sub
sub
add
add
test
add
add
add
test
add
add
mov
add
add
and
add
add
inc
add
add
adc
add
pop
inc
add
add
sub
add
in
(bad)
call
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
sub
add
or
and
add
add
add
add
jo
pop
add
add
sub
add
outs
sub
add
or
push
and
add
add
add
mov
sub
add
add
add
add
add
inc
add
add
add
add
fsubr
scas
sbb
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
jle
add
add
add
add
add
inc
add
add
add
add
sub
adc
sub
adc
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
sub
adc
add
pop
add
add
add
adc
out
jbe
fs
jbe
fs
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
sub
add
jb
add
jo
and
das
add
or
push
je
add
sbb
adc
add
adc
add
add
add
add
push
add
or
jae
add
or
xor
add
sub
add
xor
add
add
add
add
and
das
int
and
das
int
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
jno
jb
and
jb
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
add
add
adc
mov
adc
adc
add
add
add
add
inc
add
add
inc
add
add
adc
add
add
add
add
add
add
add
dec
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
or
or
pop
cmp
add
and
add
add
jle
add
add
sbb
or
add
mov
adc
xchg
cmp
add
add
mov
adc
test
sub
and
add
add
(bad)
(bad)
call
cmp
add
add
mov
adc
(bad)
(bad)
(bad)
inc
push
cmp
and
adc
cmp
(bad)
jmp
adc
sub
add
push
add
add
(bad)
(bad)
jmp
leave
pop
pop
pop
pop
ror
and
add
add
(bad)
(bad)
(bad)
cmp
or
adc
cmp
(bad)
(bad)
(bad)
jle
add
add
inc
sub
add
(bad)
(bad)
inc
and
add
add
add
inc
sub
and
add
add
(bad)
(bad)
(bad)
jle
add
add
dec
(bad)
(bad)
jmp
pop
add
add
(bad)
(bad)
jmp
test
add
pop
pop
ror
push
pop
pop
ror
push
pop
pop
ror
pop
pop
pop
ror
and
add
add
(bad)
(bad)
inc
pop
cmp
and
add
mov
adc
(bad)
(bad)
(bad)
jmp
sahf
and
add
mov
adc
cmp
(bad)
fst
fst
push
add
add
push
inc
add
add
dec
add
add
adc
add
add
add
cmp
add
mov
add
retf
add
add
push
add
stos
(bad)
(bad)
dec
add
sub
push
add
aaa
add
add
cld
add
add
in
add
add
push
add
adc
add
adc
pop
sbb
add
add
adc
add
mov
adc
mov
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
add
or
add
adc
add
or
or
add
add
mov
adc
mov
or
add
add
mov
adc
lods
sub
and
add
add
or
add
jo
sbb
add
sub
and
add
add
sub
or
mov
add
or
add
add
mov
adc
jno
(bad)
jmp
lds
add
jo
lea
push
adc
push
adc
sub
add
or
mov
adc
sbb
add
sbb
add
mov
iret
add
jo
adc
sub
add
or
add
(bad)
(bad)
jmp
add
add
add
mov
adc
push
(bad)
(bad)
(bad)
fnstsw
fnstsw
add
add
mov
adc
nop
(bad)
(bad)
call
add
pop
pop
inc
pop
add
add
add
(bad)
(bad)
(bad)
cmp
inc
add
add
sbb
add
adc
inc
add
add
add
add
dec
add
add
add
add
add
add
inc
sub
add
sub
add
inc
sub
add
add
add
mov
adc
sar
add
add
mov
adc
mov
or
add
push
sub
add
add
mov
adc
xchg
jle
add
add
inc
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
inc
sub
add
add
add
mov
adc
pop
(bad)
(bad)
(bad)
fstp
add
fst
add
push
inc
add
add
pop
add
add
adc
add
add
add
xor
add
sbb
add
dec
add
add
add
or
or
add
jo
or
add
add
mov
adc
rcl
or
add
jo
sbb
add
sub
and
add
add
sub
jg
add
add
adc
add
adc
sub
add
adc
and
add
add
sub
and
add
add
fstp
add
add
fstp
add
add
add
mov
sub
mov
stc
add
push
sub
push
and
add
add
std
(bad)
(bad)
cmp
add
add
add
add
mov
adc
(bad)
cld
(bad)
call
push
cmp
add
add
mov
adc
jmp
(bad)
call
mov
add
mov
add
add
xchg
adc
push
add
add
cld
(bad)
jmp
gs
add
or
or
adc
or
pop
rcl
or
add
lea
add
add
movups
push
jb
add
jo
adc
pop
adc
mov
add
or
or
add
jo
sub
add
adc
add
jb
add
jo
or
xor
add
sub
add
or
or
cmp
(bad)
jmp
fnsave
(bad)
(bad)
call
push
inc
add
add
daa
add
add
adc
add
add
add
add
add
add
add
add
add
int3
add
add
adc
add
adc
add
mov
add
add
cmp
add
add
mov
adc
stos
pop
sub
sub
add
add
add
add
add
popa
and
stos
popa
mov
add
add
add
add
add
add
pop
add
add
push
mov
add
add
and
adc
cmp
call
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
and
add
add
(bad)
(bad)
jmp
pop
and
add
add
(bad)
(bad)
(bad)
jle
add
add
jae
(bad)
jmp
push
add
add
(bad)
(bad)
(bad)
(bad)
add
add
(bad)
add
add
inc
add
add
pop
add
add
adc
add
add
add
inc
add
add
add
add
add
push
push
or
adc
adc
push
push
add
adc
pop
push
pop
push
pop
push
adc
adc
pop
push
adc
and
add
add
adc
pop
ins
push
sub
add
add
mov
adc
cmps
sub
adc
pop
pop
push
pop
cs
adc
push
adc
and
add
add
sub
and
add
add
(bad)
(bad)
(bad)
fidivr
fidivr
jae
add
or
push
adc
jle
add
add
sub
add
pop
pop
dec
es
fiadd
add
adc
push
adc
mov
xor
add
and
adc
cmp
inc
and
add
add
cli
(bad)
call
push
cmp
add
pop
add
add
cli
(bad)
(bad)
cmp
sti
(bad)
inc
mov
pop
lea
add
add
push
and
add
add
cli
(bad)
jmp
test
inc
add
add
sbb
add
adc
inc
add
add
add
add
and
add
add
add
add
add
sub
add
add
add
mov
adc
sar
add
add
sbb
add
sub
and
add
add
jle
add
add
or
add
push
sub
sub
add
add
add
mov
adc
xchg
ffree
cld
(bad)
jmp
fnstsw
or
add
mov
adc
mov
mov
cmp
cli
(bad)
jmp
sldt
add
stc
(bad)
(bad)
cmp
sti
(bad)
call
push
sub
add
push
adc
and
add
add
stc
(bad)
(bad)
cmp
sti
(bad)
jmp
add
adc
cmp
(bad)
inc
cmp
cli
(bad)
jmp
or
add
mov
adc
arpl
(bad)
jmp
fwait
jle
add
add
inc
sub
add
sub
add
inc
sub
add
sub
add
inc
sub
add
sub
add
sub
add
nop
fimul
add
aaa
add
add
adc
add
add
add
sub
add
jmp
add
fadd
add
mov
add
lahf
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
adc
add
add
push
add
add
sub
and
add
add
adc
add
add
add
adc
or
add
(bad)
(bad)
call
or
add
add
add
pop
add
add
(bad)
(bad)
jmp
daa
and
add
add
(bad)
(bad)
call
sub
add
add
mov
adc
inc
(bad)
(bad)
(bad)
jle
add
add
inc
sub
and
adc
cmp
(bad)
(bad)
call
or
add
ret
and
add
add
(bad)
(bad)
jmp
les
or
add
mov
adc
add
cmp
(bad)
inc
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
adc
fdivrp
(bad)
(bad)
fiadd
fiadd
adc
sub
add
inc
or
add
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
sbb
add
add
add
push
add
add
pop
push
add
push
add
add
add
add
add
add
add
xchg
add
add
push
add
add
add
sbb
add
add
add
repnz
add
sbb
add
or
add
add
add
add
add
add
add
jle
add
in
pop
add
push
add
add
add
add
add
add
add
xor
add
mov
add
add
add
sbb
add
add
add
lea
add
add
add
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
and
add
pop
inc
pop
add
add
add
add
add
add
add
push
add
add
add
pop
or
add
or
pop
or
add
add
mov
sub
push
sub
add
mov
sub
jge
add
add
jno
mov
mov
inc
add
add
sub
add
add
add
sub
add
add
mov
add
add
and
or
xchg
dec
add
add
add
pop
es
add
add
(bad)
inc
jnp
add
add
xor
and
add
add
(bad)
jmp
fwait
add
add
pop
jge
add
add
add
add
mov
cmp
(bad)
(bad)
jmp
mov
add
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
(bad)
add
sbb
add
sbb
add
and
add
adc
add
push
inc
add
add
push
add
add
inc
push
add
add
add
add
add
fld
add
daa
add
add
add
add
or
pop
pop
push
add
add
xor
add
inc
sub
add
pop
pop
push
add
mov
sub
add
inc
and
add
add
add
add
add
mov
sub
sub
push
jecxz
sub
inc
inc
add
add
mov
add
add
push
mov
add
add
push
pop
xor
add
mov
add
add
(bad)
call
sub
sub
add
jnp
add
add
test
add
inc
inc
sub
add
pop
sub
pop
fs
add
mov
cmp
(bad)
(bad)
inc
push
pop
cmp
add
add
add
(bad)
add
add
add
inc
sub
pop
sub
jge
add
add
add
add
mov
cmp
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
inc
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
(bad)
cwde
pop
dec
and
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
sub
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
retf
rcl
rcl
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
or
pop
mov
or
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
or
add
jbe
add
add
add
and
dec
sub
sub
inc
add
add
add
add
add
add
add
add
add
mov
add
add
jle
add
add
pop
rol
add
add
jo
sub
add
xor
add
sub
add
sub
add
push
jle
add
add
pop
rol
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
pop
pop
add
sbb
add
sbb
add
mov
add
adc
mov
add
mov
add
push
inc
add
add
push
add
add
inc
add
add
xor
add
sbb
add
aas
add
add
or
or
add
add
mov
sub
push
sub
and
add
add
add
add
add
mov
add
inc
push
inc
or
add
add
mov
sub
add
add
cdq
js
dec
and
inc
inc
add
add
xlat
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
add
xor
add
add
add
add
add
add
or
add
add
sub
add
or
add
add
add
jle
add
or
cmp
add
sub
xor
add
add
adc
inc
add
add
push
add
add
inc
add
add
jb
add
sbb
add
add
add
add
push
push
pop
push
or
add
add
sub
add
add
add
mov
sub
push
and
add
add
inc
and
add
add
add
pop
xchg
leave
inc
and
leave
inc
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
push
pop
push
or
add
add
mov
sub
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
add
sbb
add
add
add
push
inc
add
add
push
add
add
inc
add
add
lods
add
add
add
sahf
add
add
add
push
push
push
or
pop
pop
ror
jle
add
add
pop
rol
jle
add
add
pop
pop
pop
ror
add
add
jo
lea
add
add
push
adc
sub
add
or
add
sub
add
push
jle
add
add
popa
push
and
add
add
pop
jae
xor
add
add
add
sbb
cmps
xor
inc
add
add
sar
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
push
pop
push
or
add
add
mov
cmp
jmp
add
add
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
adc
add
add
add
into
add
sbb
add
sbb
add
add
mov
or
or
add
add
add
add
pop
mov
add
mov
add
push
inc
add
add
adc
add
adc
jg
add
test
add
or
add
pop
or
add
add
mov
or
loope
add
mov
sub
mov
stc
add
adc
sub
add
or
add
or
add
add
sub
add
outs
xor
add
or
add
adc
sub
jle
add
add
aas
pop
rol
jle
add
add
mov
rol
add
add
add
xor
add
jb
add
jo
sub
add
push
sub
add
or
cmp
add
fiadd
fiadd
adc
add
adc
add
or
in
add
add
sub
add
or
push
inc
add
add
pop
add
add
or
add
add
add
add
add
jge
add
jle
add
or
add
adc
pop
push
jg
add
lea
add
add
or
or
add
add
add
and
add
mov
dec
add
jo
adc
sub
add
or
cmp
add
and
add
add
adc
sub
add
push
sub
add
or
and
add
add
sub
adc
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ffree
(bad)
(bad)
push
add
or
or
or
cmp
add
outs
cmp
add
outs
cmp
add
adc
or
add
add
mov
or
outs
(bad)
(bad)
(bad)
cmp
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
jae
add
push
adc
jle
add
add
test
add
pop
rol
and
add
add
and
daa
mov
das
daa
mov
inc
inc
add
add
sbb
add
add
add
sbb
add
add
mov
add
add
adc
sbb
sub
add
add
mov
or
xchg
sub
jle
add
add
mov
add
pop
rol
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
addr16
(bad)
(bad)
fst
add
add
fisttp
add
add
jb
add
jo
ins
add
jo
adc
add
sub
add
push
fisttp
(bad)
(bad)
jmp
fld
jge
add
add
or
or
or
add
jo
cmp
adc
add
adc
sub
add
or
add
std
(bad)
(bad)
cmp
(bad)
(bad)
call
inc
add
add
pop
add
add
or
add
add
pop
add
add
add
dec
add
add
push
add
add
jo
lea
add
add
or
or
add
aaa
add
push
mov
pop
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sub
add
or
cmp
add
and
add
add
or
cmp
sub
add
add
mov
or
lea
add
add
add
or
sub
add
add
add
mov
or
jo
(bad)
jmp
add
add
add
mov
or
popa
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
jmp
fst
sub
add
add
add
jnp
inc
mov
add
add
push
add
add
add
add
add
aad
mov
add
sbb
add
add
mov
push
sbb
add
add
push
push
sbb
add
add
mov
push
sbb
add
adc
add
cmp
add
add
add
mov
sub
mov
stc
add
jmp
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
or
add
jle
add
add
and
jb
outs
addr16
add
add
adc
add
push
add
adc
add
add
add
inc
push
dec
inc
add
add
adc
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
sub
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
dec
add
add
dec
add
add
mov
dec
add
add
add
push
add
add
push
add
add
push
add
add
push
add
cmp
push
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
cdq
add
add
test
add
cdq
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
inc
add
add
add
enter
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aaa
add
add
add
add
adc
cmp
or
add
add
add
adc
sbb
add
adc
cmp
add
add
add
add
and
sub
add
adc
inc
add
add
add
add
add
add
xor
add
add
add
cmp
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
inc
add
inc
add
dec
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
inc
add
inc
add
dec
add
aaa
add
cmp
aaa
add
cmp
cmp
cmp
add
add
cmp
cmp
cmp
and
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
and
add
add
add
adc
or
add
pusha
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sub
add
add
add
add
add
add
or
pop
add
add
add
add
sub
xchg
sbb
xchg
add
add
add
add
add
or
loopne
add
add
add
add
test
add
add
add
add
mov
add
add
add
or
xor
add
add
add
add
add
add
add
xchg
sbb
xchg
add
add
xor
xchg
add
add
cmp
add
add
add
add
inc
add
add
sbb
add
add
add
add
add
xchg
sbb
xchg
add
add
add
add
or
sldt
inc
add
add
or
lldt
inc
add
add
xchg
add
add
pop
inc
add
add
or
add
lods
inc
add
add
or
add
cld
inc
add
add
add
add
jo
add
add
sbb
adc
ror
add
add
add
add
dec
add
add
or
adc
jo
add
add
add
add
pop
dec
add
add
add
adc
js
add
add
or
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
or
add
nop
dec
add
add
xchg
or
add
loopne
add
add
xchg
or
add
inc
push
add
add
sbb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
loopne
add
add
add
sbb
hlt
pop
add
add
add
sbb
inc
pop
add
add
xchg
sbb
xchg
add
add
or
add
fcomp
add
add
add
add
add
add
add
sbb
rcr
add
add
sbb
and
add
sbb
add
pusha
add
add
add
sbb
jl
add
add
add
sbb
and
add
add
add
push
data16
add
xchg
sbb
xchg
add
add
add
cmp
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
dec
add
push
add
pop
add
pop
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
add
adc
dec
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
sub
cdq
add
add
loope
rol
gs
add
add
add
add
jno
dec
add
add
add
add
add
or
pop
add
add
add
add
adc
dec
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
mov
sub
sub
dec
add
add
pop
add
add
add
ja
fld
inc
add
add
dec
add
loopne
dec
add
add
add
add
add
(bad)
add
add
dec
add
add
dec
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
adc
add
adc
inc
add
adc
inc
add
add
add
add
pop
add
add
pop
add
add
sbb
jecxz
imul
add
add
pop
add
imul
add
imul
add
imul
add
imul
add
add
add
pop
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
imul
add
add
add
add
and
and
mov
add
push
imul
add
imul
add
push
imul
add
pop
imul
add
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
add
ja
jl
test
add
add
add
bound
fs
add
add
add
add
add
add
add
add
add
add
inc
sbb
add
add
inc
cdq
add
add
add
add
add
add
add
add
add
gs
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
arpl
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
add
push
arpl
popa
jb
push
push
gs
bound
arpl
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
gs
cs
dec
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
jb
outs
add
jo
jns
inc
outs
jb
popa
je
dec
outs
imul
gs
outs
add
je
imul
arpl
add
jb
popa
ins
add
imul
ins
add
jo
jae
add
ins
jo
gs
imul
add
arpl
je
outs
outs
add
pop
inc
jno
popa
ins
imul
outs
gs
popa
ins
imul
add
je
xor
inc
jns
add
imul
add
jb
popa
jns
inc
jae
gs
bound
dec
gs
outs
fs
outs
outs
add
add
je
outs
fs
popa
jae
add
jbe
imul
gs
inc
outs
je
jns
outs
imul
xor
add
imul
imul
gs
jb
popa
jns
push
jns
je
ins
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
data16
outs
arpl
jno
popa
ins
jae
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
jb
popa
jns
inc
outs
jo
add
jo
outs
ins
popa
imul
add
jo
outs
ins
popa
imul
js
arpl
imul
ins
bound
addr16
inc
outs
fs
popa
jae
add
je
inc
jne
ins
dec
popa
ins
add
gs
je
dec
outs
jae
popa
outs
arpl
jb
ins
inc
outs
fs
outs
ja
popa
jo
push
outs
ins
outs
popa
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
jae
je
inc
jo
ins
imul
inc
popa
jae
add
jae
gs
cs
arpl
imul
arpl
inc
jbe
fs
arpl
inc
jb
popa
je
inc
outs
ins
popa
imul
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
jo
jne
imul
ins
jae
outs
jb
imul
jne
arpl
outs
jb
je
jb
bound
add
bound
arpl
add
data16
push
add
xor
arpl
outs
jb
inc
pop
xor
inc
pop
xor
inc
pop
xor
inc
add
ins
jb
jo
jne
imul
jae
jne
arpl
add
add
jo
jb
imul
xor
jge
and
add
imul
push
add
imul
add
add
jbe
add
outs
add
add
ins
add
imul
add
jae
jb
outs
add
jb
ins
add
ins
add
outs
add
sbb
add
jb
imul
add
outs
add
je
add
outs
add
jae
jne
add
jnp
xor
jge
sub
add
imul
jnp
xor
jge
jl
jnp
xor
jge
and
add
jne
add
jne
add
jnp
xor
jge
and
add
push
add
ins
add
adc
ins
add
ja
imul
outs
add
adc
popa
add
jb
popa
add
outs
add
imul
jae
imul
jne
add
jnp
xor
jge
and
jnp
xor
jge
and
add
add
jb
popa
add
bound
jne
cmp
add
and
jnp
xor
jge
and
add
popa
add
je
jne
add
js
jne
outs
add
add
xor
jge
sub
add
jnp
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
and
add
add
jae
jne
add
js
add
imul
push
popa
add
adc
imul
popa
add
outs
add
bound
add
arpl
jae
imul
arpl
ins
add
jo
jb
add
jo
add
add
jbe
jb
add
jae
ins
add
jne
jae
add
ins
add
popa
add
jbe
add
cmp
jnp
xor
jge
and
jnp
xor
jge
sub
add
and
add
ja
outs
add
ins
add
outs
add
js
add
bound
jae
imul
je
jb
jne
popa
add
popa
add
add
add
imul
jne
outs
add
ins
add
or
ins
add
outs
add
add
add
or
add
add
add
add
or
jb
jb
add
add
sub
add
add
ins
add
jae
jne
jbe
jne
push
add
add
sub
jnp
xor
jge
pop
add
punpckhwd
bound
outs
add
add
jb
add
imul
jbe
outs
add
add
xor
jge
and
jnp
xor
jge
cmp
add
outs
add
add
jae
add
outs
add
add
arpl
ins
add
jb
imul
outs
add
add
add
packuswb
jb
popa
add
add
add
and
add
imul
add
add
jo
popa
add
push
add
jb
add
add
add
or
outs
add
ins
add
or
jae
add
outs
add
(bad)
add
add
jae
jo
imul
add
je
add
ins
add
add
jo
jae
imul
popa
add
outs
add
add
add
ins
add
add
cmp
add
and
jnp
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
pop
add
adc
imul
push
add
add
adc
push
add
add
imul
bound
popa
add
jae
jae
add
add
jb
outs
add
or
add
add
pcmpgtw
jbe
push
add
outs
add
or
ja
outs
add
jae
add
add
outs
add
data16
add
jne
add
jl
add
outs
add
je
ins
add
popa
add
add
outs
add
data16
add
imul
and
jnp
xor
jge
and
add
jne
jae
push
jne
ins
add
je
add
pop
add
xor
jge
add
dec
add
add
add
imul
je
add
popa
add
jne
push
add
add
outs
add
jae
popa
add
add
add
pop
mov
dec
xchg
dec
pop
aad
xchg
std
sub
add
add
add
add
push
add
add
or
add
add
add
add
push
push
sbb
add
push
push
sbb
push
add
push
pop
and
add
push
adc
add
add
push
push
add
push
push
sbb
pop
and
add
and
or
and
sbb
push
push
sbb
adc
add
sbb
sbb
and
adc
add
adc
push
push
sbb
sbb
and
add
push
add
sbb
add
adc
add
add
jno
and
add
adc
and
sbb
adc
pop
add
push
push
push
push
or
add
or
sbb
adc
and
sbb
push
push
add
push
push
push
push
push
add
add
and
movs
add
add
push
or
add
and
and
xor
sbb
mov
add
add
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
or
or
and
or
push
push
add
add
push
or
push
sbb
add
sbb
and
push
add
add
push
add
add
and
add
add
sbb
add
add
and
or
push
add
add
add
sbb
or
add
or
or
add
lea
xchg
push
add
add
adc
push
and
sbb
sub
push
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
jb
jo
jne
imul
adc
jo
jb
addr16
and
xor
xor
add
add
add
add
add
and
xor
xor
xor
xor
sub
sub
sub
arpl
popa
bound
add
or
add
xor
xor
xor
xor
add
add
outs
je
jns
je
jne
jbe
jl
jnp
jp
jl
mov
push
push
pop
pop
and
add
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
sysret
or
add
inc
add
add
pop
add
or
add
add
or
add
or
pop
sbb
or
sbb
add
add
add
push
pop
or
push
adc
jne
sbb
sbb
add
or
sbb
adc
or
sbb
or
or
push
or
sbb
or
sbb
add
or
push
sbb
add
sbb
pop
add
add
add
or
push
pop
adc
add
push
push
add
push
or
add
or
add
or
pop
add
add
pop
or
or
and
adc
add
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
(bad)
call
add
retf
add
add
je
add
ins
add
add
add
and
add
add
sahf
cmp
xchg
mov
into
dec
pushf
and
shl
mov
cdq
and
call
lahf
lahf
xchg
scas
popf
sahf
inc
xor
fisttp
sub
scas
or
pusha
setns
mov
(bad)
fcomp
jbe
cmp
dec
inc
into
fucomp
mov
jmp
push
into
sub
ret
fbld
imul
(bad)
fbstp
push
stos
pop
pop
jecxz
bound
jbe
gs
mov
(bad)
jmp
pop
pop
inc
mov
(bad)
xchg
mov
lods
adc
les
sub
sahf
mov
cmc
int
or
xor
add
jo
jo
sbb
add
repnz
dec
pusha
lods
jmp
mov
pop
sbb
outs
(bad)
ficomp
push
cmp
(bad)
call
jg
pop
(bad)
loopne
std
ret
mov
ins
adc
mov
xchg
and
push
xor
push
pop
push
pop
movs
dec
ins
push
fistp
push
and
pop
xor
(bad)
pop
outs
loopne
test
jbe
sahf
ds
scas
push
add
inc
pusha
push
jg
(bad)
mov
scas
and
mov
cmp
mov
dec
sar
(bad)
rcr
xor
jno
aad
loop
(bad)
xor
cmp
inc
push
je
pop
daa
js
xor
pop
sbb
push
mov
test
pop
(bad)
push
xchg
pop
adc
es
jp
push
mov
dec
mov
push
shl
cmps
mov
stos
ror
or
in
in
mov
mov
push
stc
xchg
in
jne
(bad)
adc
xchg
mov
inc
stos
rol
sub
mov
cli
ds
and
test
ror
add
out
jmp
jp
sub
outs
xchg
lahf
fadd
adc
pop
iret
sti
test
inc
(bad)
outs
pop
mov
repnz
fsubrp
cmps
inc
mul
js
jne
icebp
sbb
mov
or
pop
cmp
cmp
cmps
cmc
aas
jb
dec
les
xchg
jp
fnstenv
in
pop
xchg
cmp
sub
xchg
jecxz
sbb
pop
pusha
adc
fimul
adc
fmulp
cmc
es
call
mov
test
jp
leave
cmp
push
mov
pusha
stos
or
dec
mov
adc
jb
cwde
outs
lods
daa
jl
(bad)
sub
sbb
add
adc
inc
jge
fs
pop
outs
mov
mov
ficomp
fmul
jecxz
sbb
imul
jecxz
fidivr
repz
cmovae
mov
ret
pop
leave
ficom
xchg
shl
jp
xor
lock
jmp
mov
ds
hlt
stos
das
mov
mov
cmp
imul
je
and
ror
xor
pop
gs
mov
jmp
push
mov
into
mov
push
stos
mov
mov
sub
sbb
into
ds
xlat
sbb
bound
(bad)
stc
jb
mov
xchg
in
nop
cmp
jmp
xchg
add
inc
mov
(bad)
scas
aad
fwait
inc
daa
mov
xor
sti
loope
mov
aad
retf
repz
xchg
xchg
imul
sub
jo
retf
xchg
loop
add
pop
pop
adc
scas
cs
cli
bound
dec
fs
xchg
jge
mov
xor
pusha
outs
nop
sub
and
mov
(bad)
enter
dec
(bad)
jle
xor
pusha
cmps
popa
and
jg
cmp
sar
jb
and
(bad)
sar
sar
test
pop
rcl
add
mov
inc
adc
ds
leave
cmp
jg
push
ins
nop
imul
movs
lea
pop
xlat
dec
cmps
stos
dec
mov
sar
adc
sbb
scas
loope
movs
rol
imul
shl
mov
imul
push
(bad)
mov
adc
int
xor
push
cld
cmp
jns
(bad)
fidivr
cdq
jp
mov
nop
mov
add
scas
push
(bad)
mov
stos
cmc
call
sub
xchg
xchg
gs
add
jecxz
(bad)
(bad)
push
jge
or
cwde
xor
cmps
xchg
and
lea
enter
dec
or
in
mov
stc
mov
cmp
(bad)
adc
lods
loope
mov
sbb
sbb
loopne
xor
xor
fmul
dec
bound
sbb
in
shufps
and
or
stos
int3
faddp
fsubr
sbb
xchg
sub
nop
pop
call
lahf
sub
or
sahf
and
dec
jo
test
mov
scas
jbe
shl
mov
xor
into
jo
cmc
xchg
xchg
rcl
cmp
outs
fisttp
stos
mov
lods
jmp
outs
pop
mov
daa
add
nop
pop
push
gs
movs
(bad)
inc
cmp
inc
xchg
arpl
xor
mov
mov
cmp
xor
cmc
jecxz
xor
cs
div
retf
fcom
and
cmc
cli
rcl
scas
jecxz
lahf
outs
inc
das
inc
jg
ror
mov
add
clc
ret
imul
dec
xchg
mov
mov
les
or
inc
mov
xor
out
mov
ja
jnp
pop
aam
stc
push
or
add
cld
test
ja
and
test
and
leave
outs
adc
ror
dec
dec
(bad)
adc
outs
outs
add
mov
dec
fist
loope
pop
test
setne
cmp
arpl
and
mov
lds
(bad)
(bad)
and
xor
test
rol
mov
fisub
test
nop
(bad)
lahf
int
gs
scas
sub
fsub
daa
loopne
and
xor
fcmovnbe
add
iret
add
icebp
dec
xor
or
rol
sbb
mov
mov
xor
(bad)
cmp
cld
jmp
and
pop
xchg
lahf
push
(bad)
cmp
ds
adc
nop
push
imul
outs
fbld
xor
mov
jp
fmul
test
and
stos
cmp
mov
mov
cmc
push
xchg
ficomp
in
int
arpl
dec
or
fwait
aad
pop
pushf
or
inc
add
loopne
and
pop
mov
xchg
fwait
lods
push
inc
pop
or
sbb
movs
push
mov
sub
icebp
fistp
sub
outs
mov
mov
jg
js
rcr
push
sub
jg
fwait
dec
jne
lds
mov
push
cmp
jmpw
mov
xchg
js
mov
sti
sbb
add
fild
or
fist
or
or
mov
in
div
push
xor
sub
add
mov
test
int3
in
leave
sub
push
sub
and
and
mov
add
push
pop
add
inc
outs
(bad)
fs
(bad)
iret
inc
adc
aad
xchg
pusha
outs
ja
ins
xchg
fild
inc
adc
cmp
mov
call
outs
and
jae
sub
mov
(bad)
in
gs
xor
(bad)
(bad)
std
movs
mov
mov
xchg
jp
std
cdq
rol
enter
mov
call
hlt
lahf
pushf
clc
scas
out
xor
jno
cwde
stos
add
jmp
mov
std
push
jo
inc
push
fs
cmps
fimul
dec
mov
shl
cli
dec
mov
fsub
pop
xchg
(bad)
test
and
lock
pop
jecxz
inc
repnz
or
mov
push
jno
mov
es
cmps
test
cmp
fild
in
pop
sub
dec
popf
out
test
cmc
pop
xchg
aam
cdq
cmp
pop
retf
fwait
dec
(bad)
sbb
dec
icebp
stos
and
xchg
enter
lods
dec
dec
jae
cmove
cs
sub
add
mov
test
into
fldlg2
jo
mov
mov
or
jmp
ja
out
jl
leave
xor
pop
(bad)
loopne
retf
movd
push
adc
pop
enter
popf
iret
cmp
imul
clc
pop
repz
mov
xchg
xchg
and
ror
mov
mov
es
std
fisubr
jge
sbb
lea
push
in
cs
cdq
xchg
jmp
sub
cdq
outs
and
sbb
push
add
in
(bad)
out
xor
jbe
loop
mov
or
aam
pusha
stos
push
fwait
mov
retf
scas
mov
jno
scas
std
dec
cmps
push
mov
xchg
int3
loopne
jns
movs
lea
adc
pop
push
gs
xchg
pushf
lock
adc
sub
fdiv
aam
sub
jle
or
not
push
pop
std
jns
(bad)
jne
or
push
sbb
pop
sub
pop
cs
xchg
imul
cmp
mov
test
xchg
add
mov
pop
mov
xor
iret
(bad)
cs
ins
and
mov
and
test
sub
and
sahf
pop
fnstsw
jae
and
ins
xor
fist
lods
mov
ret
ror
xor
and
or
add
stos
cld
sbb
add
xor
inc
xchg
jb
mov
cmp
sub
mov
leave
cwde
xchg
or
fs
fwait
stos
xchg
adc
xlat
mov
icebp
push
xchg
lods
and
add
adc
ss
mov
mov
cmc
jmp
xor
in
mov
jp
cmp
pop
xchg
test
(bad)
jno
add
dec
mov
(bad)
jmp
cmp
inc
dec
inc
out
fisttp
jmp
adc
cld
icebp
xor
cmp
mov
cmp
(bad)
addr16
(bad)
mov
push
jne
sbb
iret
inc
mov
or
push
mov
aaa
popa
sbb
pop
xchg
mul
cwde
test
xchg
jecxz
daa
mov
ds
add
stos
push
lds
bound
mov
iret
cs
ins
push
adc
out
popf
sub
test
shl
sbb
or
movs
imul
jb
inc
dec
push
inc
sahf
movs
scas
push
xor
pop
sbb
(bad)
lock
or
xor
inc
and
cmp
adc
int
fwait
push
addr16
cmp
cmp
add
lahf
cmc
(bad)
out
mov
je
inc
js
adc
jne
jecxz
xor
(bad)
out
cld
fstp
invd
fnstcw
daa
mov
sbb
mov
sar
mov
lock
test
test
fst
sti
fs
out
dec
cmp
or
dec
stos
(bad)
int
pop
xchg
ja
push
pop
dec
jecxz
int3
mov
mov
stos
loop
es
inc
int
es
xchg
adc
sbb
mov
ins
int
mov
out
sbb
jp
pop
inc
mov
mov
xor
xchg
xlat
scas
pop
out
std
adc
mov
mov
cmp
jmp
sbb
jnp
arpl
mov
or
ja
inc
adc
push
retf
jmp
test
sbb
sti
retf
mov
add
push
pop
out
dec
rcl
push
cmps
sub
mov
in
pop
push
mov
call
pop
inc
popa
jbe
stos
push
xchg
(bad)
bound
dec
add
scas
pushf
pusha
mov
dec
sbb
std
aaa
or
and
retf
data16
add
mov
daa
mov
icebp
hlt
fidiv
ja
cmp
push
or
stos
in
xchg
sub
sub
push
loope
sar
jmp
push
aas
dec
clc
sub
jg
in
sub
jmp
lock
lods
push
ret
cmp
add
lock
test
adc
stc
xchg
pop
mov
adc
inc
ret
sub
fst
and
sbb
call
leave
ss
add
call
jo
inc
dec
(bad)
mov
and
inc
js
dec
or
inc
adc
sbb
push
lods
push
inc
xor
cmps
call
out
dec
xor
xchg
or
test
aad
xor
adc
cmps
mov
sub
addr16
mov
hlt
dec
mov
mov
mov
jnp
icebp
mov
fbld
data16
movs
les
mov
fsubr
sahf
cmp
push
les
xor
ds
outs
mov
mov
jae
or
add
mov
sbb
test
push
fdivp
pop
xor
test
push
push
lods
test
or
push
xchg
mov
int
push
nop
add
arpl
jb
out
movs
ud2
pop
xchg
loope
push
jmp
adc
push
push
into
retf
or
in
jle
fisub
xchg
push
mov
push
fist
inc
es
jl
icebp
nop
cmp
cdq
adc
pop
(bad)
push
xchg
leave
loopne
cmp
les
out
push
stos
cmp
lods
jo
jg
cmp
cmp
lahf
or
cmps
jl
jnp
cmc
add
cmp
add
pop
push
push
fadd
lods
xor
cmps
mov
pushf
cmps
out
inc
xor
push
xor
cmp
jle
mov
sub
jge
xor
(bad)
gs
sbb
ficomp
stos
fldcw
out
movs
mov
test
mov
inc
sbb
lods
sidtd
push
outs
inc
fadd
sub
rol
pop
dec
dec
mov
cld
mov
pop
lods
fiadd
test
enter
mov
mov
mov
xor
popf
leave
pusha
stos
adc
jae
push
adc
pop
push
popa
pop
out
inc
lds
pop
pop
jnp
jg
repz
gs
dec
test
fwait
sbb
iret
and
sbb
xchg
je
int
mov
or
test
push
mov
addr16
mov
mov
test
aam
cmp
idiv
ins
and
(bad)
stc
ret
push
ror
cmp
and
mov
jae
loopne
xor
mov
mov
std
loope
pushf
data16
icebp
mov
pop
pop
sub
not
xor
xchg
pop
xchg
push
outs
addr16
fld
sub
stos
hlt
(bad)
outs
sub
ja
cdq
sub
jo
jge
xchg
pop
jbe
arpl
sbb
std
xchg
push
mov
mov
js
mov
iret
in
int
push
jns
jecxz
sub
lock
je
int3
or
pop
or
xor
xor
xor
or
pushf
sbb
cmp
stc
retf
add
or
mov
adc
mov
or
mov
in
imul
dec
fsubr
dec
sub
ror
jle
lock
jo
loopne
pop
push
push
cld
and
or
sub
enter
adc
mov
push
fldenv
cmp
dec
scas
popa
xor
push
mov
pop
sub
mov
ret
outs
mov
mov
dec
gs
mov
dec
mov
jb
out
pop
adc
xchg
inc
push
(bad)
mov
mov
mov
xchg
or
(bad)
jno
arpl
mov
scas
aaa
cmps
popf
push
scas
rcr
add
gs
js
or
stos
mov
lods
lods
iret
xor
xor
fist
pop
push
das
cmp
daa
dec
out
test
xchg
mov
retf
inc
aaa
aaa
fs
inc
push
mov
imul
mov
sbb
xor
mov
and
mov
push
cmp
es
icebp
xchg
movs
test
stos
lock
out
sbb
cld
sbb
push
xchg
(bad)
jbe
in
add
ja
and
jle
push
fwait
mov
jp
jno
lods
sbb
(bad)
push
in
push
push
cmp
inc
(bad)
adc
xchg
push
neg
loopne
and
mov
imul
sub
push
push
xchg
mov
mov
sbb
add
dec
(bad)
mov
jo
retf
mov
add
pop
xor
sbb
dec
es
add
aas
and
ret
jb
ds
jecxz
test
add
mov
std
inc
test
arpl
sbb
cmp
cmp
dec
xor
dec
call
sub
cmp
std
loop
cmp
jno
mov
or
cmp
xchg
shr
jp
fs
mov
pop
xchg
ds
or
jl
outs
add
and
add
sub
clc
call
movs
shr
pop
pop
stos
cmp
int3
dec
cmp
dec
mul
mov
mov
sub
pop
pop
pop
pop
lods
ror
aas
movs
test
pop
jle
pop
pop
jae
dec
shr
pop
clc
pop
inc
cli
jecxz
or
pop
leave
lods
pop
xchg
pusha
repnz
leave
repnz
ret
mov
aas
fidiv
adc
sti
pop
lock
jbe
out
jg
adc
jg
iret
jmp
shl
cmp
lock
xchg
sub
scas
test
cmp
pop
loope
data16
jne
xlat
icebp
outs
ja
push
movs
or
call
in
xchg
adc
out
cmc
xchg
push
sub
or
inc
or
movs
popf
sbb
push
mov
hlt
add
mov
adc
jg
jl
int
(bad)
jmp
mov
xor
fnstsw
fist
std
and
fld
dec
push
scas
dec
outs
fimul
lds
in
sbb
dec
mov
cs
pusha
jl
repz
mov
mov
cmp
mov
or
cmp
jle
xor
je
addr16
retf
(bad)
aam
call
lahf
cmc
loopne
push
aam
retf
adc
cmp
xchg
mov
(bad)
add
cdq
xchg
push
stc
neg
mov
jmp
mov
retf
lds
cmc
aad
loope
inc
out
mov
stos
scas
jp
jl
mov
ret
jns
pop
adc
gs
push
jecxz
mov
push
push
mov
dec
(bad)
arpl
popf
outs
mov
fucomp
(bad)
cmp
xlat
pop
cwde
outs
rol
aas
cmp
xor
shr
jp
add
dec
into
retf
push
pushf
jo
adc
push
jbe
ins
test
movs
xchg
iret
sub
pop
fs
cmp
ds
(bad)
sbb
ds
mov
test
stos
call
dec
pop
adc
rol
jge
rcr
fstp
add
fbld
mov
(bad)
pop
sbb
mov
repnz
add
ins
or
cmp
xor
enter
(bad)
mov
mov
pop
pop
and
je
or
leave
sahf
mov
int3
cmps
add
dec
loope
aad
(bad)
retf
fcomp
fwait
push
int3
xlat
int3
mov
std
(bad)
mov
test
ja
bound
pop
test
cmp
mov
rol
dec
add
sbb
shr
sub
sbb
mov
cmp
cmp
sub
out
push
mov
ficom
sbb
pop
shl
push
or
push
ret
icebp
or
adc
retf
inc
arpl
call
dec
xchg
mov
push
js
mov
ja
mov
mov
xor
std
inc
mov
pop
inc
inc
adc
push
imul
jmp
mov
adc
aam
mov
fistp
xlat
fadd
xor
das
pop
jg
ss
mov
movs
aad
in
push
lea
sbb
cmp
inc
pop
or
sub
movs
out
cmp
into
mov
aaa
bound
sub
ja
xor
xchg
loop
leave
sbb
std
dec
aaa
scas
pop
fldcw
jns
enter
push
mov
in
sbb
pop
in
fidiv
cwde
fwait
mov
xchg
icebp
mov
bound
or
fsub
pop
aaa
in
cmp
or
aad
jo
mov
pop
std
sub
or
repz
scas
inc
out
ss
stos
repz
mov
dec
sbb
daa
mov
addr16
mov
ret
inc
loope
aam
loope
xor
xchg
call
jo
xor
sbb
jo
loope
add
rcr
test
cs
pop
imul
ins
(bad)
pop
mov
mov
jb
mov
xor
xchg
mov
dec
mov
mov
mov
icebp
ja
imul
(bad)
fwait
imul
sub
mov
aam
movs
mov
loope
xor
xchg
mov
daa
enter
sbb
push
jmp
test
inc
aad
movs
dec
adc
movntps
into
outs
fcomip
mov
xlat
dec
nop
pop
data16
pop
pop
xchg
mov
cld
pop
lea
out
pusha
xrelease
jne
and
jmp
or
retf
call
jmp
out
xlat
rcr
pushf
sbb
hlt
add
retf
sub
and
xor
div
xchg
pop
jp
sahf
inc
test
es
or
mov
imul
push
clc
out
cmps
inc
or
popf
mov
push
xor
xor
div
rol
je
or
data16
aas
loop
push
outs
and
repz
mov
push
dec
inc
int3
jmp
in
cmp
adc
xor
push
test
jbe
sahf
icebp
arpl
sub
dec
jmp
add
xchg
xchg
das
xor
push
xlat
sti
data16
xlat
sub
popa
mov
(bad)
pop
jl
or
sbb
in
push
sub
pop
bswap
in
mov
inc
pop
push
dec
push
xlat
add
and
push
hlt
sbb
enter
movs
mov
jnp
adc
(bad)
out
cmps
or
sbb
leave
lock
xchg
sahf
push
loope
mov
imul
addps
scas
mov
sub
or
cmps
xlat
sbb
(bad)
retf
test
inc
js
out
sub
rcr
sahf
inc
mov
jl
pop
retf
imul
mov
fnstenv
adc
mov
out
in
xor
out
pop
push
js
and
ins
dec
xor
lods
mov
push
bound
in
mov
push
xlat
push
add
pop
into
(bad)
jecxz
mov
mov
inc
sbb
js
sub
scas
jg
enter
movs
scas
jmp
(bad)
cs
adc
pop
(bad)
jb
pop
mov
push
xor
data16
mov
or
imul
das
pop
dec
dec
sbb
fs
or
mov
sub
clc
retf
dec
icebp
test
into
and
lds
(bad)
outs
adc
pop
shl
in
mov
xchg
pop
dec
inc
jmp
iret
(bad)
leave
add
inc
ds
imul
push
icebp
dec
out
sub
sti
jle
jns
and
popf
stos
sub
xor
rcl
ret
gs
es
cdq
mov
idiv
inc
dec
out
shl
push
jb
clc
sbb
loopne
sbb
ins
jne
call
clc
stc
mov
push
push
fistp
pop
enter
and
cwde
push
in
xchg
push
retf
cmc
mov
jp
stos
in
and
mov
push
and
daa
pop
fidivr
cmc
xchg
shl
mov
inc
fisubr
les
int3
popw
sbb
fild
xchg
jns
mov
in
sbb
mov
jmp
popf
icebp
mov
sti
pop
cmp
loop
jge
mov
jo
ds
push
or
ret
aad
mov
repz
rol
cmp
fnstenv
popa
jmp
sub
loop
es
ins
pushf
adc
and
fcmovb
retf
mov
mov
cwde
daa
mov
adc
add
inc
lods
and
loopne
scas
mov
xor
mov
push
sar
add
repz
test
repz
mov
jmp
gs
push
int3
sub
cmp
movs
out
mov
popa
bound
xchg
jne
push
fsub
jmp
mov
or
mov
stos
aas
mov
jge
rcl
mov
call
and
test
jl
mov
jb
jno
dec
(bad)
dec
fild
adc
mov
inc
pop
aam
aas
sti
mov
imul
mov
mov
dec
or
lods
ds
xor
scas
sub
sar
ret
mov
jle
retf
cdq
xchg
scas
inc
clc
add
or
shr
jmp
cmp
inc
pusha
pop
jp
mov
retf
in
sub
xor
cmp
mov
jg
lock
mov
push
or
and
gs
fcmove
call
dec
xchg
pop
xor
mov
add
pop
sar
cmps
jns
int3
pop
in
scas
sbb
int
(bad)
mov
mov
int
es
xchg
test
stos
test
add
and
int3
pop
scas
idiv
sbb
retf
jo
mov
jecxz
push
mov
(bad)
cmp
cmp
ja
mov
das
push
xchg
adc
fimul
jno
popf
pop
dec
pop
scas
add
and
lods
inc
mov
lods
or
call
and
and
mov
push
sar
pop
or
pop
add
jo
ins
add
popf
pop
or
loopne
(bad)
dec
push
call
dec
add
xor
sbb
add
lahf
jmp
xor
movs
and
jmp
fisttp
jecxz
xor
cmp
xchg
dec
pop
jb
xchg
pop
rsqrtps
mov
sbb
(bad)
(bad)
stc
outs
push
(bad)
mov
mov
mov
call
js
ret
jne
sbb
rcl
mov
cld
cmp
xor
sar
in
out
loope
aaa
dec
adc
and
aaa
cwde
xchg
inc
sub
imul
xor
in
fstp
das
push
mov
pushf
jmp
push
ins
bnd
push
dec
fidivr
das
movs
data16
pop
outs
(bad)
aas
(bad)
fmul
or
ficom
mov
test
rcl
push
and
scas
in
push
push
cmc
lock
fndisi(8087
and
mov
movs
retf
sti
jecxz
arpl
pop
push
jno
jno
das
(bad)
adc
jp
mov
(bad)
push
dec
retf
sbb
xor
pop
outs
cli
lea
add
jp
rcr
stos
push
nop
ret
mov
xor
ror
dec
cmp
xor
mov
inc
jns
les
mov
dec
or
test
fsubr
(bad)
pusha
mov
jg
sbb
cdq
mov
cmp
out
mov
jp
test
nop
aas
cmp
cwde
sbb
pop
es
mov
jmp
add
jo
test
inc
loope
mov
retf
out
and
jmp
sbb
fwait
retf
push
movs
sahf
inc
or
stos
mov
cwde
push
sub
call
mov
pop
jle
sub
add
repnz
es
je
xchg
push
and
jl
inc
ins
repnz
sub
sub
pop
lahf
test
(bad)
test
fidiv
ins
cmp
add
retf
xor
outs
xor
cmp
inc
mov
dec
and
jg
iret
dec
inc
push
test
in
dec
dec
(bad)
idiv
sar
sub
lods
inc
jecxz
les
xchg
fist
movs
rol
and
nop
fnstcw
retf
in
pop
adc
dec
dec
fs
pop
out
arpl
jle
outs
iret
fild
hlt
adc
retf
rcl
xchg
xor
imul
loopne
ins
repnz
fld1
xor
idiv
ficom
iret
mov
mov
pop
(bad)
dec
test
stos
aad
fsubr
xor
not
or
nop
jb
cmc
xchg
outs
adc
ror
(bad)
dec
stos
sub
or
inc
jne
inc
mov
xchg
ja
pop
sbb
js
pop
(bad)
add
pop
movs
pop
push
test
cwde
xchg
aas
call
(bad)
pop
jnp
add
dec
push
cmps
fldcw
push
push
int3
xor
mov
daa
add
mov
in
in
ds
outs
iret
mov
sbb
into
xchg
dec
scas
std
add
jge
sbb
retf
mov
xlat
iret
loopne
jg
sub
inc
jnp
scas
(bad)
stos
or
jnp
or
lods
jmp
xchg
cmp
xchg
sub
add
aam
or
push
ret
sahf
and
rcr
mov
arpl
cmps
and
adc
nop
adc
xor
cmc
out
hlt
mov
out
sub
xchg
ret
sub
pop
test
in
retf
daa
repnz
mov
push
pop
and
jbe
inc
sti
icebp
aad
sub
and
pop
fincstp
imul
test
test
ret
mov
push
pop
dec
jbe
jno
adc
fs
mov
sub
retf
aad
xor
jg
or
push
nop
adc
ins
outs
imul
out
adc
xor
int3
mov
adc
jo
push
mov
test
pop
cwde
aaa
(bad)
dec
push
mov
fcomp
jbe
jbe
js
(bad)
loopne
test
das
div
not
jmp
ins
cld
(bad)
ins
or
outs
push
sbb
mov
enter
push
out
push
jge
ja
sub
scas
cld
xchg
or
sub
js
pop
cmp
add
push
push
test
inc
push
pusha
fdivr
mov
popa
mov
rcr
push
scas
ret
dec
sub
xchg
hlt
shl
add
cwde
cmc
arpl
lods
sti
rol
or
outs
dec
and
nop
mov
ror
dec
jle
xlat
adc
test
adc
es
idiv
retf
test
mov
pop
shl
jmp
fwait
and
imul
fs
mov
jns
ret
test
pop
in
fdivp
fld
(bad)
ja
or
popa
add
add
loop
xchg
mov
mov
mov
mov
dec
int3
cmp
ss
in
aas
inc
js
jo
fidiv
mov
push
xchg
int
inc
sahf
sub
fs
pop
iret
int3
push
cs
fnstcw
loop
stos
stos
push
das
inc
cmp
stc
xlat
ins
shr
cmp
in
lock
or
fs
int
adc
inc
mov
in
stos
enter
enter
cld
enter
lock
xchg
pushf
fnstsw
sbb
push
jmp
adc
(bad)
mov
dec
pop
(bad)
mov
fnstenv
out
retf
fadd
jb
push
pop
shl
mov
fwait
mov
pusha
sub
and
int
loopne
mov
sbb
nop
xchg
push
adc
dec
sub
mov
push
(bad)
sti
stc
fdivrp
xor
mov
adc
push
retf
or
test
iret
mov
ja
scas
or
mov
cmps
in
pop
sbb
out
and
add
fistp
push
lods
retf
push
scas
jecxz
inc
lods
mov
movs
pop
xchg
stc
ins
jno
add
iret
rcr
lea
mov
inc
pop
add
push
enter
mov
cs
retf
push
xchg
mov
add
xor
ds
repnz
pminub
cld
sub
lods
and
cli
test
lock
xor
loopne
jb
std
aam
test
and
cmp
lock
push
fld
cmovl
inc
or
out
xor
repnz
das
dec
loop
cmps
fwait
push
arpl
ret
loopne
scas
push
ret
cmps
arpl
jae
xor
push
in
add
outs
pop
pushf
nop
sbb
or
ja
retf
jl
mov
out
(bad)
xor
mov
pop
push
adc
adc
dec
xchg
lock
dec
pop
add
movntq
add
or
xor
dec
cmp
loopne
add
push
jnp
loop
gs
mov
out
pop
xchg
aam
retf
pop
stos
sbb
cmp
and
mov
or
ret
sub
mov
popa
icebp
das
mov
dec
loopne
lods
aas
(bad)
movs
(bad)
out
dec
leave
mov
adc
cmp
lahf
mov
lods
cmp
enter
call
idiv
test
sbb
inc
cmp
out
ds
cmp
mov
lea
mov
out
jg
aam
cmp
push
inc
mov
mov
jmp
mov
lods
cmp
in
lea
call
pop
inc
outs
sahf
dec
imul
jae
das
nop
add
mov
push
jecxz
jge
rol
jecxz
es
addr16
cmps
inc
icebp
pop
(bad)
int3
sti
adc
and
jmp
mov
or
pop
sbb
dec
stos
and
jnp
add
adc
repnz
add
scas
(bad)
xor
push
aam
xor
mov
xor
aaa
sub
inc
jg
clc
xchg
shl
movs
inc
inc
cmp
mov
mov
xchg
das
adc
fcomp
lods
mov
jge
cmc
test
rol
xor
adc
int
xchg
mov
cmp
sbb
out
outs
bound
mov
cwde
cmp
hlt
jno
and
pop
mov
in
sub
pop
mov
fincstp
mov
addr16
cmp
push
push
call
push
push
cmp
clc
out
loope
and
outs
sbb
shl
pushf
and
cmp
mov
mov
mov
push
jno
xchg
push
mul
sub
bnd
push
test
mov
out
dec
sbb
call
rcr
aaa
aad
cmps
lods
iret
and
iret
xchg
or
bound
inc
cli
adc
xchg
adc
adc
gs
imul
or
int
loope
xor
enter
out
(bad)
aad
dec
stc
(bad)
pop
cmp
jmp
daa
or
int3
sbb
dec
imul
inc
stc
add
retf
mov
push
add
imul
into
out
xchg
mov
jbe
(bad)
cmp
out
xor
jge
clc
adc
jnp
outs
inc
cld
scas
sbb
ja
sbb
lock
or
fistp
pushf
and
pop
mov
pop
inc
jmp
xor
jg
push
retf
dec
sub
jge
inc
push
or
jno
xor
xchg
in
(bad)
push
(bad)
call
add
test
pop
outs
hlt
lock
jnp
dec
lds
pop
lods
cli
pop
cmp
inc
ds
sar
adc
test
and
xchg
int3
outs
pop
dec
jle
es
mov
add
push
(bad)
mov
ins
lahf
pop
jmp
pop
mov
stos
popf
repz
lea
ret
cmp
xchg
sbb
push
xor
adc
sub
mov
repz
lods
in
test
jl
push
mov
pop
fadd
mov
loop
scas
sbb
es
gs
mov
sub
les
mov
jle
add
data16
ficom
push
pop
jmp
lahf
inc
pop
enter
ins
imul
inc
shr
sub
jmp
xor
adc
rol
mov
or
inc
lock
push
inc
mov
push
mov
fldenv
cdq
out
sbb
test
jge
pop
dec
icebp
inc
xchg
aaa
sub
leave
or
sbb
shl
pop
retf
popf
sub
out
xor
mov
arpl
inc
ss
pop
sti
pop
bound
mov
pop
cld
xchg
cwde
loopne
mov
(bad)
stos
stos
icebp
cwde
inc
pop
xchg
cmps
stc
mov
push
jns
cmc
les
les
mov
sbb
stos
in
clc
imul
and
sbb
icebp
inc
mov
pop
mov
or
sar
mov
and
mov
xchg
pushf
fucom
mov
inc
sbb
jo
div
sub
icebp
cmps
jae
adc
rol
imul
out
jo
repnz
xchg
add
mov
push
(bad)
call
cmp
scas
retf
xor
fidiv
mov
sbb
mov
xor
je
jnp
ss
jo
xchg
movs
sub
lods
hlt
arpl
rcl
(bad)
pop
jecxz
cs
mov
dec
sub
xchg
sbb
or
push
push
xchg
sub
sti
xchg
cs
fcmovne
psubsb
mov
jp
fcomip
push
bsr
mov
and
push
jle
dec
cmp
or
pop
in
sbb
inc
cmp
cwde
pop
jb
add
mov
dec
sub
repz
sbb
xor
mov
scas
jge
jg
adc
dec
sbb
add
loop
pop
int
fidivr
xchg
push
jge
ja
in
ja
daa
jecxz
cmp
pop
shl
dec
es
or
out
push
int
sub
loop
mov
mov
add
mov
addr16
adc
mov
sahf
push
dec
push
retf
or
(bad)
inc
pop
sub
cmp
(bad)
mov
add
movs
mov
cmc
test
xor
mov
ins
shr
movs
cdq
mov
test
mov
inc
inc
js
add
call
sbb
ret
mov
sbb
aaa
rcl
add
cmp
jecxz
mov
inc
inc
jl
sti
data16
or
sub
dec
dec
test
ins
sbb
ja
loope
stos
mov
mov
fimul
les
inc
fadd
loope
push
and
jbe
stc
xor
mov
add
mov
mov
mov
jno
xchg
cmp
lock
inc
sbb
xchg
hlt
mov
(bad)
stos
test
fcmovne
fdiv
xor
lods
imul
stos
repnz
mov
mov
mov
pop
fcom
jecxz
mov
mov
inc
outs
dec
jb
and
pop
cmp
rcr
mov
aad
fisttp
cld
frndint
psrad
sbb
std
arpl
in
xor
(bad)
mov
je
pop
out
xchg
pop
lahf
push
mov
and
pusha
aas
mov
(bad)
jbe
mov
nop
cmp
and
sbb
dec
pop
xor
fild
out
cmps
ja
cmps
jg
loopne
fwait
mov
cli
cmps
mov
retf
pop
fist
jmp
sti
dec
mov
mov
mov
jl
xor
sub
dec
mov
in
sub
test
loop
mov
(bad)
sbb
fucomip
adc
arpl
add
add
call
xchg
cli
lock
enter
mov
test
xchg
retf
and
cmp
add
pop
sar
and
into
out
or
mov
mov
clc
inc
push
push
mov
cs
xor
not
inc
mov
ins
push
rol
pop
push
mov
xor
sub
mov
je
ja
adc
imul
pushf
stc
mov
xor
into
jmp
sub
inc
stos
add
stos
out
jnp
stc
pop
mov
and
dec
in
sub
iret
lods
or
test
push
and
sbb
push
pop
and
stos
xchg
pop
lods
xlat
hlt
test
out
mov
lods
cmp
(bad)
cmp
pop
test
cmps
dec
sub
jae
jl
fnstenv
xchg
call
hlt
pop
xchg
xor
push
jbe
mov
gs
pop
xor
into
jl
mov
adc
retf
add
push
sbb
aad
push
cs
and
push
sub
and
lods
adc
leave
cmc
int3
mov
cmp
les
and
int3
ficomp
aaa
dec
fwait
jne
add
inc
in
(bad)
mov
loop
(bad)
scas
jle
es
fist
mov
sbb
out
pop
int
(bad)
repz
xor
cmp
imul
in
das
ins
sub
mov
add
inc
pop
jecxz
pop
rcl
daa
inc
mov
test
cmc
les
push
mov
pop
ret
fiadd
push
cs
xchg
jbe
jno
scas
mov
call
test
loop
mov
por
pusha
in
add
jbe
(bad)
pop
pop
xchg
sbb
(bad)
sbb
bound
jae
mov
lds
sub
rol
cmps
sub
lods
inc
and
mov
mov
inc
and
inc
jmp
retf
call
inc
push
fcom
icebp
adc
ja
loopne
dec
call
in
cmp
xchg
hlt
int
sub
cmp
in
sub
adc
(bad)
cs
or
inc
push
jl
enter
or
es
mov
cmp
xchg
inc
dec
cmp
pop
jmp
in
mov
mov
add
je
jmp
repz
lock
data16
aas
test
dec
mov
sub
mov
in
jl
ret
call
out
jae
push
or
push
sub
cmps
(bad)
xchg
test
or
iret
dec
retf
shr
idiv
or
loope
adc
ins
sbb
jo
test
iret
pop
div
loope
inc
jae
es
push
or
adc
inc
pop
sbb
pop
retf
mov
sbb
jmp
hlt
aad
jg
and
in
retf
mov
retf
rcr
stos
test
and
mov
cmp
popf
inc
mov
fwait
jns
sbb
das
fimul
push
mov
mov
enter
mov
xchg
inc
jo
pop
or
jge
jns
stos
dec
inc
and
inc
push
retf
test
out
sub
mov
sahf
(bad)
js
mov
nop
fisubr
daa
stos
adc
xor
and
or
sti
dec
cmp
dec
dec
mov
scas
mov
cmovns
imul
retf
out
fld
and
push
cmp
mov
(bad)
mov
fidivr
inc
aaa
sub
(bad)
in
stos
mov
jge
outs
data16
xor
push
and
in
outs
shl
cmps
dec
dec
out
(bad)
cmps
cmp
or
ret
fldcw
mov
fcom
aaa
(bad)
xor
or
pop
mov
inc
mov
sahf
mov
in
inc
xor
jno
dec
stc
into
idiv
add
mov
dec
sbb
sub
mov
fisubr
and
sub
xchg
sub
push
jl
stc
xchg
pop
dec
out
pop
cdq
sbb
jb
sbb
xchg
repnz
imul
bound
in
add
outs
push
xchg
pop
lahf
cwde
mov
test
loope
fcmovnb
cmp
mov
cmp
std
cmps
aad
into
cli
std
mov
jmp
jl
into
xchg
push
addr16
pop
imul
add
xchg
adc
jecxz
push
mov
xor
push
xchg
outs
xlat
or
stc
cmc
stos
cmp
dec
jmp
lea
in
push
js
push
push
inc
ret
icebp
shl
xchg
mov
cld
sbb
and
push
and
or
sub
enter
pushf
imul
mov
nop
xlat
push
and
jnp
xor
bound
jg
adc
sub
cli
jmp
adc
popf
sahf
ss
push
(bad)
int
xor
sbb
adc
jae
mov
sbb
repnz
shr
xor
sbb
fcom
xchg
and
xor
inc
hlt
or
pop
jp
cs
mov
pop
mov
inc
push
push
or
fsub
add
jmp
mov
add
cmp
retf
add
ss
jmp
test
jge
dec
cmp
imul
push
out
shl
jns
mov
movs
dec
jecxz
push
sahf
icebp
test
repnz
pop
jb
daa
dec
add
js
cmp
pushf
xchg
int3
retf
loopne
int3
call
cmp
shl
pop
inc
xor
shl
jecxz
lods
or
imul
rcl
adc
jns
int3
sahf
and
cmp
sbb
cmps
bound
add
adc
enter
ins
retf
mov
adc
add
out
push
fcmovne
cmp
adc
(bad)
fdivrp
cmp
jg
outs
sbb
in
fwait
or
mov
scas
xor
test
iret
repz
ins
adc
retf
push
adc
or
pop
xchg
xor
loop
(bad)
add
fisub
fistp
cmps
dec
addr16
mov
sbb
out
fstp
sbb
call
jnp
mov
cld
test
or
fldcw
cdq
and
mov
stos
std
addr16
and
je
adc
sbb
loopne
iret
in
dec
fwait
mov
imul
ret
hlt
dec
movs
add
cmc
ins
sbb
cmp
jmp
xor
xchg
sbb
loop
imul
mov
into
sti
enter
cmps
jo
hlt
icebp
mov
cmp
mov
ins
repnz
nop
xor
cmp
and
sub
cmp
or
int3
cmp
pop
inc
sub
cdq
and
cmps
int3
adc
and
call
loop
mov
jbe
inc
mov
out
aaa
jns
push
into
jge
(bad)
xor
push
mov
fcomp
scas
rcr
out
cld
jnp
fisttp
call
add
sbb
dec
scas
and
clc
mov
xchg
leave
push
scas
loopne
and
mov
mov
ja
not
stos
push
fsubr
add
jo
mov
(bad)
push
pop
or
fcomip
jmp
inc
pop
jb
jecxz
jmp
mov
adc
mov
cmp
xchg
loop
popf
pop
sbb
and
lahf
repnz
repnz
sbb
loopne
adc
adc
data16
add
xchg
test
add
dec
lahf
pop
test
adc
xchg
push
fdiv
lods
int3
pop
xchg
jge
mov
sub
pushf
xchg
push
jmp
or
adc
and
and
je
cmp
inc
icebp
mov
xchg
mov
fld
xchg
cmp
retf
bound
ror
cmp
jmp
leave
mov
fisttp
mov
cmps
leave
xchg
rol
or
aam
push
lea
jo
scas
inc
(bad)
xlat
lods
dec
or
inc
loope
fs
pop
movq
xchg
ja
out
xor
push
add
repz
iret
jmp
sbb
adc
jb
pop
inc
pop
adc
popf
sub
(bad)
sub
push
adc
mov
outs
fimul
pop
jne
mov
dec
sbb
push
outs
out
jae
int3
imul
jge
gs
cmp
pop
mov
or
(bad)
pop
lea
sub
and
pop
sahf
sahf
xor
adc
xchg
push
pop
mov
iret
push
aam
dec
movs
nop
push
inc
in
arpl
fistp
dec
cwde
add
arpl
test
mov
xor
pop
into
rol
jnp
shl
loop
jl
mov
sub
inc
mov
xlat
nop
and
add
push
pop
(bad)
mov
and
add
rcl
add
cmp
nop
cli
cmp
int
jmp
push
cmp
mov
jne
mov
or
inc
or
xor
je
pop
xor
push
loopne
sub
lock
push
and
add
mov
sbb
push
adc
pop
jecxz
int3
or
not
in
and
pop
push
jae
xchg
mov
mov
inc
inc
repz
xchg
movs
repz
cmps
mov
mov
addr16
cmps
adc
pop
(bad)
fsubrp
repnz
jle
mov
dec
call
data16
xchg
shl
retf
xor
add
ret
lods
sbb
sub
jne
add
or
xchg
pop
popa
aas
xchg
mov
push
cmp
pop
xchg
jae
add
int
xchg
in
(bad)
adc
ror
data16
adc
mov
mov
cli
mov
dec
push
adc
sub
aaa
sub
xchg
pop
add
les
sar
cmp
cmps
adc
sbb
dec
clc
inc
xchg
out
dec
add
fld
sbb
std
out
data16
or
dec
jno
adc
ja
lods
dec
int
mov
mov
leave
jbe
push
or
mov
pushf
fs
test
cmc
mov
aaa
mov
jbe
cdq
mov
or
retf
sub
ja
imul
sub
fwait
mov
inc
cmp
loopne
xor
inc
xchg
inc
mov
ror
push
push
push
nop
dec
or
mov
mov
(bad)
out
sub
gs
pop
retf
push
pop
ins
pop
mov
cli
dec
pop
mov
sub
add
cmps
sub
pop
shl
fld
jae
push
and
cmc
add
shl
push
jo
pop
jnp
inc
xchg
aam
idiv
das
jmp
push
xchg
cmp
mov
xchg
push
jg
mov
pop
jnp
sti
add
ins
pop
xor
dec
fabs
mov
jmp
outs
mov
jge
js
movs
nop
dec
cmc
out
je
lock
ret
and
xchg
sbb
inc
xchg
xchg
jp
pop
jl
or
push
push
in
or
adc
std
pop
mov
fwait
addr16
movs
cwde
pop
mov
(bad)
int
jae
cmp
xchg
pop
mov
sbb
ret
or
sahf
int3
add
sti
ffree
imul
out
cmps
inc
mov
cmp
inc
jb
mov
pop
mov
cmp
or
pop
enter
mov
mov
add
les
mov
mov
inc
jecxz
idiv
lods
lods
add
sbb
pop
je
pop
and
xor
dec
and
daa
outs
or
mov
outs
iret
mov
dec
pop
mov
out
lea
in
add
xchg
lods
sbb
xchg
std
xor
dec
dec
aam
in
mov
mov
mov
push
sbb
ror
out
xor
stc
push
rol
mov
(bad)
retf
xchg
ret
int
pop
aaa
dec
and
pop
ret
or
scas
sub
and
xor
call
mov
jnp
bound
mov
ins
in
cmp
fist
les
pop
adc
sbb
cmps
daa
lahf
rep
xchg
jmp
fist
movs
lock
xchg
cld
adc
call
pop
push
shl
xchg
add
push
test
add
dec
test
add
dec
out
mov
rcr
ss
fadd
push
stos
adc
and
dec
lods
ds
dec
enter
lds
mov
cmp
test
mov
out
ret
outs
test
inc
fimul
es
out
stos
xchg
pop
cmp
or
imul
add
adc
mov
arpl
(bad)
or
out
scas
sbb
mov
fucomip
fidivr
and
bound
shl
mov
cmps
push
scas
repz
sbb
pop
hlt
les
xor
or
mov
test
movs
or
(bad)
cld
aad
mov
movs
add
adc
jmp
inc
cdq
(bad)
mov
pop
ins
xchg
cmp
push
scas
icebp
sub
loopne
gs
add
arpl
cmp
inc
inc
mov
cmp
dec
inc
ins
(bad)
and
xlat
test
sub
in
outs
jne
out
ret
aam
jo
ins
test
push
ss
sub
jno
mov
adc
dec
pop
dec
or
loop
cld
fdiv
inc
pop
fwait
int
adc
jo
daa
push
adc
xchg
cmps
xor
pusha
cdq
(bad)
daa
and
jns
pop
movs
scas
test
push
fs
mov
sbb
xor
mov
inc
imul
(bad)
lahf
cmp
in
and
adc
popf
sahf
and
xchg
push
cmp
mov
cmp
ret
cwde
lods
lock
xchg
outs
movs
fld
mov
test
cmp
mov
push
add
gs
fs
mov
add
inc
out
in
mov
cmp
and
cld
pop
(bad)
aaa
mov
cs
es
pusha
xchg
sub
sbb
mov
(bad)
aam
call
adc
jmp
push
add
dec
dec
fs
sbb
(bad)
xor
jmp
movs
lock
loop
pop
cmp
mov
scas
mov
xchg
cmp
std
cmc
adc
add
ds
aaa
push
xor
push
xor
loope
sbb
pop
and
jo
fsubr
jg
adc
jg
push
fild
inc
mov
movups
repz
imul
xor
push
and
mov
mov
arpl
adc
mov
sub
out
add
and
out
adc
fmul
jbe
add
sub
push
out
rol
add
or
push
mov
mov
jecxz
mov
daa
fmul
stc
dec
and
out
outs
data16
mov
test
out
sbb
dec
lahf
call
test
outs
outs
sub
inc
pop
xchg
jo
push
push
popa
(bad)
cwde
outs
add
pop
mov
(bad)
in
mov
int
mov
push
mov
(bad)
xchg
mov
(bad)
in
cmp
push
mov
xchg
int
hlt
xor
cli
imul
inc
sub
pop
imul
add
or
jb
add
les
cs
retf
jmp
or
fsub
adc
pop
jbe
bound
popf
mov
movs
add
test
retf
in
cdq
ins
shr
pop
clc
jb
loope
cmp
movs
jg
mov
mov
xchg
ror
test
ret
(bad)
fsub
inc
into
stos
inc
movs
jbe
hlt
repz
aas
mov
cmc
in
and
int
aaa
retf
push
mov
jo
outs
jns
dec
out
repnz
jecxz
jl
jmp
mov
loop
jge
data16
jb
enter
pushf
into
loopne
mov
cs
nop
or
adc
xchg
js
jbe
cmps
(bad)
int
test
aas
daa
mov
lods
jmp
sub
or
stc
stos
xlat
and
add
in
cmp
aaa
out
xor
sti
push
sub
inc
fwait
inc
lds
hlt
test
in
fidivr
sahf
mov
mov
stos
or
mov
mov
ss
inc
pusha
nop
xor
push
push
pop
adc
test
test
mov
jecxz
adc
inc
movs
push
out
fidivr
movs
stos
or
sbb
sbb
loopne
daa
jnp
sub
test
adc
mov
xchg
inc
jge
pusha
xlat
push
mov
repz
mov
xor
loopne
dec
rcr
aaa
and
and
xor
dec
aam
or
in
movs
aaa
in
push
clc
push
push
fdivr
aas
movs
add
enter
push
adc
in
repz
int
in
repnz
dec
jmp
inc
adc
mov
adc
icebp
jge
mov
and
or
sub
(bad)
cmp
jmp
imul
inc
inc
aam
and
dec
adc
daa
dec
sbb
(bad)
xchg
push
push
sbb
mov
add
mov
cmps
fstp
xor
out
mov
inc
outs
aas
jecxz
inc
xor
outs
dec
mul
shl
or
cld
movmskps
xchg
leave
mov
push
jl
push
outs
fs
mov
cmps
mov
jp
int
or
mov
jl
push
icebp
out
sub
shr
xchg
dec
(bad)
mov
sub
ret
xor
inc
xchg
jnp
sub
sub
xor
retf
arpl
inc
(bad)
sub
sbb
or
fild
xor
aam
push
or
ret
push
sbb
cmp
add
xchg
mov
xchg
(bad)
cmp
push
(bad)
jle
jno
cld
add
jmp
cmc
dec
adc
cld
xor
sahf
sub
int
sub
xor
add
repz
sub
mov
aas
adc
xchg
mov
mov
loope
lods
xchg
in
test
pop
mov
cmp
icebp
jl
xchg
and
xchg
pop
cmp
test
(bad)
xor
xor
mov
sahf
stc
push
scas
out
push
arpl
data16
(bad)
mov
dec
clc
into
mov
jl
add
(bad)
ins
push
mov
fstp
adc
test
idiv
sbb
fldcw
dec
cmp
push
sbb
test
cmp
test
dec
pop
sub
fsub
xchg
repnz
(bad)
fist
rol
pop
adc
dec
fdiv
pop
dec
nop
arpl
push
push
enter
xchg
inc
retf
movs
xor
inc
into
in
dec
sub
inc
ins
js
jecxz
in
sub
mov
outs
sbb
cmc
jge
(bad)
(bad)
dec
clc
arpl
sub
lahf
pop
dec
sti
nop
sbb
xchg
or
adc
test
sub
sbb
push
add
jns
loope
call
jmp
arpl
sbb
adc
sbb
(bad)
dec
ins
pop
psrlq
inc
ja
or
adc
jno
sub
push
jecxz
push
inc
xchg
fst
es
int
aaa
ss
cmp
out
mov
retf
add
mov
call
push
dec
add
jbe
jo
loopne
pop
jmp
push
push
stos
ja
jl
jno
cmp
mov
icebp
or
fild
xchg
clc
les
(bad)
ror
sqrtps
or
adc
jecxz
cwde
jg
dec
or
popf
sbb
push
mov
fs
dec
sbb
ficomp
pop
cmc
retf
mov
pop
aam
add
xchg
lock
std
retf
or
loope
adc
sub
fcomp
mov
ds
pop
cwde
retf
push
add
sbb
aad
shl
retf
and
hlt
mov
fmul
(bad)
xor
in
or
dec
dec
cmc
xchg
ss
or
push
scas
fistp
ret
mov
push
mov
sub
dec
in
jne
ret
and
iret
dec
test
xchg
imul
arpl
jge
and
aam
sub
push
icebp
or
out
aaa
ins
xor
outs
fld
pop
in
pop
repnz
mov
sti
int
jno
cmps
mov
mov
neg
adc
sbb
inc
repz
outs
jle
icebp
mov
push
xor
or
xor
stos
arpl
cld
add
stos
(bad)
xchg
push
aaa
retf
mov
in
mov
pop
cld
jno
and
mov
push
adc
std
pop
add
test
pop
movs
aad
daa
push
bound
sbb
mov
mov
adc
setg
or
dec
stos
call
leave
mov
pop
sbb
dec
scas
inc
xor
jo
je
ficomp
imul
xchg
sbb
mov
mov
data16
sbb
shl
sub
sub
outs
cmp
jp
(bad)
mov
mov
(bad)
aad
movs
stos
pop
in
es
dec
cld
mov
movs
scas
sub
or
mov
das
std
fnsave
and
mov
mov
add
pop
dec
xchg
rol
jbe
test
repnz
adc
fisubr
inc
sub
je
adc
lods
out
ins
push
rcr
inc
fcomip
and
sub
push
push
test
xchg
push
neg
jae
and
push
xchg
jns
inc
adc
call
js
jecxz
inc
ins
sub
arpl
int
gs
xchg
mov
cmp
add
sahf
ds
and
adc
xor
jp
xor
ja
fsubr
nop
adc
and
pop
jp
cmp
add
xchg
push
adc
cli
adc
sbb
adc
(bad)
dec
dec
and
shl
stos
jns
cmp
aam
cwde
mov
dec
sahf
lods
jmp
mov
jg
inc
xchg
pop
cmps
jne
(bad)
fucomip
add
inc
add
fist
dec
dec
or
sub
push
xsave
sahf
mov
ja
sbb
adc
xchg
idiv
or
jns
shl
sti
jmp
mov
jmp
lock
pusha
or
pop
jecxz
cs
push
cmp
jno
out
sub
xchg
mov
imul
add
outs
jns
outs
pop
add
ret
dec
jg
push
imul
ins
addr16
sahf
pop
xor
jns
add
mov
bound
in
aam
call
mov
data16
frstor
sbb
fcom
pop
sbb
test
push
xchg
push
mov
movs
push
pop
movs
cld
jmp
aad
jmp
movs
mov
cmp
cmp
ficom
xlat
sar
das
adc
test
aaa
(bad)
xor
(bad)
aad
mov
fcomi
cmp
data16
pop
aaa
retf
mov
jb
aad
in
dec
add
imul
sar
mov
lock
push
cmp
nop
and
mov
jno
sbb
lods
es
clc
in
push
dec
imul
or
cmp
dec
inc
xor
push
mov
jg
ins
push
lds
cdq
jno
dec
jns
dec
mov
rcr
sub
hlt
(bad)
or
out
xor
xor
hlt
retf
outs
std
sahf
es
inc
stos
ss
jne
and
cmps
icebp
leave
stos
scas
popa
je
pop
mov
in
les
dec
sub
and
xchg
fisttp
fst
fwait
int
sub
paddd
mov
sbb
sahf
shl
mov
jnp
lods
clc
call
jp
add
(bad)
rcr
ins
lods
js
fisub
push
and
xchg
mov
mov
outs
(bad)
push
aas
movs
add
cmp
ret
ins
mov
cmp
jp
fnstcw
prefetch
xchg
inc
stc
cmp
or
cmc
movs
adc
inc
dec
ins
enter
or
jae
inc
jb
xchg
push
and
in
adc
imul
mov
jl
test
aas
adc
jp
sar
retf
dec
out
dec
xchg
jge
pop
xor
sub
stc
fcom
fmul
iret
imul
inc
out
pop
inc
sub
or
add
xchg
inc
sbb
retf
(bad)
ss
pushf
(bad)
outs
pop
xchg
jl
cmc
xchg
cld
ret
inc
cmp
add
popf
fmul
outs
(bad)
out
dec
xchg
mov
outs
rcl
inc
mov
pop
into
mov
jmp
mov
repz
scas
imul
inc
add
ins
sbb
jo
sub
imul
call
daa
pop
push
ret
(bad)
jp
hlt
dec
daa
add
out
imul
std
adc
das
jns
jmp
inc
cld
pop
scas
mov
inc
inc
mov
sbb
xor
dec
into
jmp
mov
je
out
push
jnp
movs
mov
pop
test
cwde
inc
cld
not
icebp
pop
lock
jno
fldenv
sbb
movups
test
xchg
cmp
loopne
mov
add
xchg
sbb
in
and
in
push
dec
sti
xlat
sub
iret
push
mov
add
add
lea
repnz
rcr
shl
retf
movs
push
(bad)
xor
es
lds
bound
mov
(bad)
xlat
lock
out
clc
pop
aam
push
call
outs
jmp
rol
mov
adc
cmp
cmps
shl
pop
lods
in
es
mov
xchg
mov
adc
dec
add
mov
dec
iret
popf
outs
mov
cwde
jns
ss
and
or
je
mov
push
clc
mov
xchg
imul
xchg
pusha
xchg
sub
sbb
cmp
shl
mov
cmp
ins
jns
ror
arpl
je
sbb
rol
fisub
imul
mov
gs
push
dec
pop
test
jns
jae
mov
adc
adc
add
cld
shl
mov
lahf
dec
xor
dec
clc
in
adc
ds
or
stos
call
sub
lahf
les
cmp
push
adc
popf
pusha
out
f2xm1
mov
pop
push
and
pop
jbe
mov
mov
call
pop
aas
les
or
test
out
icebp
fiadd
jl
addr16
stos
lods
fdivr
sub
mov
inc
ins
scas
pop
xchg
pop
xlat
sub
pop
idiv
mov
lods
shl
mov
pop
push
call
aad
xchg
sbb
enter
pop
pop
(bad)
cli
inc
sub
push
pop
daa
jmp
xor
inc
es
dec
scas
push
cmp
add
scas
push
jp
mov
fwait
xor
jnp
imul
arpl
adc
leave
xchg
sub
mov
fcomip
sar
loopne
lock
jg
hlt
sub
mov
stc
test
mov
retf
cmp
adc
push
cmp
cmp
add
and
ss
lahf
aad
sbb
push
outs
mov
jno
xor
stos
ins
mov
test
das
and
sub
repz
stc
xor
add
sbb
mov
xor
aas
inc
dec
popf
mov
rcl
dec
xlat
fld
call
pop
jo
repnz
or
or
sbb
loopne
enter
pusha
push
bound
je
jns
stc
adc
add
sub
ret
int
push
jno
cmc
lock
sahf
xor
pop
pusha
mov
pop
mov
pop
mov
add
pop
repnz
rol
push
or
hlt
test
dec
inc
ret
dec
cmp
fst
push
adc
dec
ret
push
movs
sub
arpl
dec
sbb
push
rol
les
adc
retf
mov
adc
sti
jb
jmp
cmp
pop
repz
ret
dec
in
cld
xchg
lds
xchg
dec
movs
push
cld
daa
xchg
imul
jnp
cmps
fdiv
dec
push
hlt
loop
mov
std
psubb
xchg
mov
cmp
pop
shr
or
sti
iret
mov
loop
ins
cmp
popa
and
icebp
sbb
sub
xchg
pop
add
leave
test
push
mov
outs
(bad)
sbb
sbb
rep
inc
mov
sub
mov
jb
jae
pop
hlt
cmps
dec
shl
arpl
and
sti
add
movs
pop
mov
cmp
mov
mov
fisub
cmp
inc
in
jo
daa
mov
fld
aas
test
cmp
es
mul
mov
icebp
out
leave
daa
out
cdq
ds
jae
inc
in
add
mov
lds
cmc
jo
stos
sub
mov
jmp
mov
in
xor
xlat
jg
dec
push
cwde
js
adc
mov
cmc
in
xlat
xor
adc
icebp
fdiv
test
movs
mov
(bad)
cld
aam
out
and
mul
jle
movs
std
mov
stc
sub
jb
imul
iret
add
mov
adc
iret
or
shr
xlat
push
ins
adc
adc
xchg
inc
neg
add
push
sbb
adc
retf
sbb
aam
sbb
cmp
push
clc
cmp
cmp
jmp
pushf
inc
dec
inc
aaa
icebp
and
push
lea
mov
ror
jns
xchg
mov
adc
daa
inc
mov
popa
or
push
shl
xchg
rcl
mov
jns
fwait
call
fs
and
aam
push
and
xor
xchg
cmc
mov
or
std
xor
jns
in
jae
fcmovbe
sub
xor
test
test
shl
xchg
xor
jnp
fmul
adc
outs
rol
lods
or
push
fist
mov
mov
cmp
fnstenv
inc
fisubr
mov
cmp
xor
jb
aaa
sub
adc
cld
cli
fwait
xchg
(bad)
mov
dec
loope
aam
in
pusha
jl
(bad)
fldenv
pop
add
in
jns
mov
stos
cli
and
fiadd
imul
lahf
scas
inc
popa
and
mov
mov
lods
fdiv
repnz
das
dec
fs
xchg
add
stos
stos
jnp
cli
mov
inc
lods
sbb
add
popf
mov
imul
push
sbb
fldcw
xor
(bad)
xor
pop
dec
inc
xor
pushf
pop
aas
sbb
pop
add
sahf
in
ja
mov
shr
xchg
xor
mov
rol
jecxz
fst
cli
sub
rcl
dec
dec
push
enter
push
xor
imul
mov
sbb
scas
lea
inc
sahf
xor
jnp
pusha
jmp
stos
inc
mov
sub
ja
imul
dec
add
lock
inc
or
jle
loop
cmp
in
mov
jns
stos
inc
dec
(bad)
fisttp
in
mov
sbb
repnz
js
stc
imul
cmp
sub
dec
inc
ins
or
or
jp
not
das
repz
push
push
mov
pop
inc
xchg
sbb
(bad)
jo
pop
pop
loop
mov
sub
test
inc
shl
arpl
ret
ret
arpl
hlt
into
aas
mov
bound
mov
mov
pop
pop
(bad)
sub
mov
pop
retf
into
sub
fnstcw
test
mov
mov
(bad)
mov
addr16
arpl
outs
(bad)
mul
mov
scas
mov
and
cmp
and
jnp
mov
stc
sub
jg
dec
mov
aam
xor
call
popf
sub
aas
xor
mov
mov
repz
hlt
push
fs
jo
stos
mov
and
test
add
pop
dec
mov
out
dec
jnp
repz
sub
sbb
sbb
dec
retf
push
cmp
test
xchg
mov
test
push
push
jae
push
outs
cmp
repnz
mov
jg
inc
test
inc
mov
jo
jmp
jo
jo
or
retf
sbb
and
out
mov
out
popa
(bad)
mov
nop
lods
popa
jle
cpuid
xor
stc
xor
ret
ret
push
mov
mov
lds
sar
mov
jbe
xor
out
ins
into
add
test
and
ret
jge
ret
inc
push
bound
add
in
push
popa
and
mov
sub
cmp
lahf
clc
mov
cdq
push
les
mov
mov
pop
iret
adc
adc
xchg
cld
inc
dec
add
jnp
jnp
in
mov
lods
and
cwde
jb
add
xchg
xchg
jle
push
outs
add
or
call
ja
jp
fucomip
and
dec
sub
icebp
aas
(bad)
jmp
push
mov
test
iret
aad
xchg
mov
jp
ins
aam
fdivr
lock
xchg
mov
jb
add
adc
int
mov
pop
mov
mov
out
retf
in
(bad)
outs
mov
xchg
jl
div
mov
xchg
add
cmp
loope
jmp
adc
cmp
aad
scas
xchg
jne
std
xor
push
arpl
jb
(bad)
and
pusha
mov
punpckldq
sbb
lds
and
mov
jg
mov
retf
sbb
push
movs
sar
mov
cmp
rcr
sbb
pusha
pop
rep
nop
jle
mov
mov
les
jmp
movs
fldenv
adc
mov
mov
inc
xor
sub
arpl
and
xchg
icebp
dec
dec
sub
jne
popa
inc
dec
pop
xchg
(bad)
push
and
out
imul
pop
cmps
inc
add
je
fwait
pop
(bad)
popf
inc
jp
cmc
lahf
xor
fdiv
ja
push
loopne
jl
jmp
cmp
sub
sar
(bad)
add
cld
or
cmp
adc
aas
call
jg
adc
pop
hlt
loopne
push
test
push
and
outs
icebp
sbb
movs
mov
bound
dec
push
xor
jmp
jecxz
jmp
clc
inc
stos
pop
adc
ja
std
and
stos
dec
shr
sub
fcmove
int
and
add
(bad)
sbb
test
push
sub
mov
push
mov
and
out
out
pop
ss
and
xor
pop
fistp
xchg
icebp
xor
add
xchg
dec
mov
pop
test
out
bound
xchg
aaa
les
arpl
mov
add
jae
inc
js
jp
sub
mov
aas
cmp
lds
and
stos
jp
sti
ror
mov
ror
sar
mov
jns
dec
shl
imul
xlat
lock
xchg
js
fisttp
push
mov
lods
(bad)
push
add
out
repnz
jle
ret
mov
mov
aas
mov
xchg
test
fmul
stos
inc
or
test
repz
hlt
pushf
scas
add
in
fcom
cld
or
xlat
cmp
fwait
(bad)
ss
loopne
hlt
mov
pop
pop
arpl
js
call
lods
repz
adc
inc
mov
ror
test
push
rcr
jecxz
mov
xor
mov
push
mov
xchg
rcr
bnd
adc
popa
add
daa
in
or
lods
int
sbb
rol
adc
or
in
popa
push
xchg
fist
jb
dec
shl
aaa
out
repnz
cmps
ins
pushf
sbb
fistp
jp
pop
stos
mov
in
das
scas
(bad)
push
jp
test
add
push
ins
xchg
mov
mov
das
call
or
sar
xchg
bound
cmp
(bad)
inc
out
cvtpi2ps
mov
sub
adc
pop
and
lods
adc
ja
mov
fist
retf
cmovle
sti
cmove
mov
add
in
xor
xor
imul
jbe
aaa
adc
stos
mov
mov
dec
lds
fs
cmp
fwait
dec
and
cli
cmovne
cmps
les
imul
add
cmp
push
jno
fdivr
in
jp
repnz
xor
sbb
cli
sub
adc
imul
out
adc
xor
inc
and
jb
adc
cli
sbb
fimul
sahf
je
sbb
push
xor
jge
xor
sub
sub
call
es
popa
(bad)
cmc
ins
not
jae
lods
inc
mov
fistp
adc
enter
sar
pop
cli
and
test
scas
dec
inc
(bad)
cmp
adc
ins
dec
or
xchg
scas
mov
and
out
dec
clc
sbb
pop
scas
gs
loope
jae
dec
push
and
pop
lods
lods
xchg
inc
stc
ins
test
rcpps
dec
jmp
daa
(bad)
nop
jecxz
lock
push
sub
in
lds
xor
mov
aad
dec
and
cmp
jno
pop
or
jbe
push
enter
mov
mov
inc
jo
ds
mov
mov
mov
cs
(bad)
arpl
adc
dec
push
loope
in
test
lods
mov
adc
mov
retf
outs
or
sbb
aaa
push
enter
inc
in
into
sar
in
cs
sub
repnz
mov
mov
into
adc
dec
xchg
and
out
scas
pusha
push
xlat
shr
xchg
in
and
mov
ret
fld
adc
imul
mov
sbb
pop
pop
mov
or
and
sub
or
icebp
punpckhdq
fimul
enter
cmps
leave
mov
test
sti
xchg
lods
push
dec
add
scas
repz
int3
imul
mov
out
cdq
clc
ins
mov
scas
mov
push
xchg
fsub
mov
popa
and
ins
push
iret
movs
mov
mov
add
test
(bad)
int3
stc
cmp
mov
repz
sahf
gs
pop
jnp
ins
int
popa
push
add
out
sub
aad
arpl
jne
in
les
ins
xlat
sub
ss
push
movs
aad
jns
lods
addr16
fist
cmps
sbb
mov
xchg
jnp
adc
xchg
mov
in
(bad)
push
push
in
movs
add
mov
in
push
dec
js
cmps
push
in
mov
adc
pmulhw
inc
sub
mov
sahf
or
and
shl
ds
add
daa
cmp
adc
pop
push
or
xchg
push
push
mov
sub
and
mov
xchg
inc
ds
mov
inc
jns
cmp
ret
mov
dec
mov
pushf
ja
or
jbe
mov
xchg
aaa
sahf
ret
stc
jo
rol
(bad)
fst
shr
pop
dec
pop
pop
or
cmps
xor
sar
jo
out
rcl
mov
loop
cwde
icebp
scas
mov
sbb
cwde
and
in
lds
(bad)
mov
pop
jae
add
enter
mov
(bad)
xor
xlat
jp
lock
arpl
(bad)
ficom
cmc
(bad)
sub
in
mov
in
rcr
pop
dec
call
out
mov
xchg
stos
adc
pop
push
jnp
mov
dec
stc
mov
cdq
jmp
int
aas
in
test
xor
cmp
loopne
xchg
sbb
dec
or
inc
out
js
stos
outs
xor
or
push
jne
jns
std
inc
xchg
xor
ret
pop
leave
pop
loop
inc
lods
in
jl
imul
sbb
cmp
in
add
sub
xor
mov
or
outs
in
pop
xor
bswap
jl
cmp
dec
addr16
lea
icebp
lods
ret
retf
cmp
(bad)
push
dec
popa
sub
add
repz
jmp
push
fst
jge
ret
rcr
lods
mov
sub
push
ja
inc
loopne
enter
inc
sub
pop
add
lods
(bad)
sbb
sub
test
mov
sahf
push
mov
pop
jp
fwait
xor
adc
inc
aas
enter
ins
xor
movs
stos
or
aaa
jp
sbb
pop
xchg
jge
and
out
mov
call
stc
xchg
lods
xchg
jo
(bad)
fld
mov
ret
sub
adc
das
push
adc
xchg
in
test
jne
or
btc
fistp
outs
mul
lock
aas
out
ss
push
out
test
imul
pop
hlt
retf
jb
int
jo
adc
xchg
out
add
leave
lods
mov
sub
dec
push
mov
bound
pop
pushf
dec
push
(bad)
inc
popa
stc
sar
xor
mov
cmps
aas
fwait
mov
jo
adc
shr
jnp
mov
call
push
das
fdiv
daa
(bad)
mul
xor
inc
jbe
in
jp
movs
push
fcomp
fist
jo
or
xor
int
push
cmps
and
cmp
inc
lock
sbb
nop
or
int
and
mov
in
and
and
mov
ficomp
and
sub
xchg
and
sub
sar
sbb
mov
jne
das
out
sbb
dec
xchg
fsubr
js
or
in
aaa
pop
or
clc
fs
ins
shl
inc
mov
mov
adc
push
dec
das
in
sbb
es
sti
xchg
and
mov
shl
cmps
cmp
mov
add
ret
or
adc
call
ss
icebp
push
inc
cdq
in
into
mov
jge
xor
pusha
and
mov
add
je
addr16
call
cld
loope
mov
fldl2t
enter
inc
fdivr
(bad)
jne
retf
jmp
jl
xor
test
fidiv
jno
mov
push
and
and
imul
lods
cmp
js
hlt
sub
xchg
xchg
sbb
out
mov
mov
ret
sbb
and
pop
inc
aas
xchg
dec
ds
mov
jg
mov
dec
das
or
shr
or
and
ss
(bad)
lea
dec
sbb
jle
sub
xchg
xchg
or
jnp
test
push
dec
or
jo
(bad)
arpl
outs
loopne
es
pop
imul
cmp
sub
popf
out
cmp
mov
push
stos
mov
in
es
sub
push
push
sbb
inc
pop
mov
mov
push
iret
ja
pop
xchg
popa
or
mov
mov
adc
jno
cmps
mov
fisubr
push
pop
jge
add
shl
lahf
xchg
out
jmp
pop
jne
pop
addps
or
mov
fsubr
ret
jle
dec
mov
fsub
jmp
add
push
lahf
or
sub
neg
inc
lods
(bad)
cdq
and
es
ret
ds
add
adc
pop
mov
lea
jne
movs
xor
dec
cmp
leave
fisub
xchg
push
or
push
(bad)
dec
jb
out
loop
mov
popf
ins
mov
adc
adc
jl
movsx
aad
sub
stc
mov
(bad)
sub
(bad)
mov
add
add
arpl
adc
xchg
in
mov
push
fdivr
loop
mov
dec
mov
fild
mov
bound
jmp
fbstp
push
pop
and
xchg
loop
pop
mov
push
imul
imul
imul
push
shl
pop
and
ret
fwait
xchg
and
int
and
mov
add
(bad)
enter
adc
jns
mov
push
ja
push
add
dec
and
pop
or
jge
xchg
jecxz
mov
rol
push
test
cmp
out
sub
int
pop
cmps
in
int3
jp
and
das
push
repnz
sub
fld
js
mov
sub
retf
add
js
sbb
adc
cmp
xchg
(bad)
sub
js
mov
clc
nop
retf
(bad)
and
add
loopne
call
push
in
lds
dec
jecxz
fidivr
dec
fsincos
retf
in
inc
push
xchg
rol
jnp
cmc
sahf
and
xchg
js
aad
out
pusha
xchg
sti
aas
adc
sbb
sub
fdivr
and
xor
mov
mov
pop
ret
pop
test
mov
adc
and
inc
mul
xor
add
jp
pop
imul
lea
jae
cmp
ins
and
dec
push
cmps
femms
pop
add
pop
push
push
ret
adc
mov
dec
mov
stc
cli
data16
or
sbb
std
es
mov
mov
jp
(bad)
cwde
(bad)
out
xchg
dec
int3
push
cmp
aas
cmp
test
test
add
(bad)
mov
sub
xchg
rcl
scas
pop
cmp
adc
fcomp
jno
sti
and
shl
je
je
(bad)
add
pushf
mov
mov
ret
push
lock
and
cmps
inc
loope
mov
lahf
and
retf
movs
ds
fisttp
(bad)
imul
imul
jg
and
scas
sbb
aas
in
xchg
pop
sbb
icebp
or
inc
jp
div
mov
mov
mov
dec
adc
cmps
sub
fsqrt
adc
inc
pop
call
inc
mov
sti
or
lahf
push
not
inc
iret
outs
jmp
adc
add
inc
jmp
fild
in
movs
add
and
inc
push
cmp
lock
js
mov
gs
sbb
push
push
fst
push
test
add
shl
iret
sbb
out
cmp
and
les
popa
rol
add
scas
mov
mov
nop
pmaddwd
mov
iret
jg
add
and
ds
adc
in
and
jae
jl
out
das
jmp
mov
(bad)
icebp
mov
fist
into
pop
push
cli
push
aas
ins
cmp
or
dec
fwait
int3
clc
enter
(bad)
test
dec
imul
and
call
shr
aad
(bad)
(bad)
and
pop
pushf
adc
or
xor
icebp
xor
out
fbld
adc
mov
fcmove
xor
dec
xchg
not
vcvtps2dq
rol
mov
cmps
ins
mov
pop
loope
imul
jo
gs
or
sub
inc
popa
add
mov
mov
mov
scas
fisub
loop
mov
inc
in
cmps
sub
pop
mov
mov
retf
das
cld
pusha
sub
jnp
sub
pop
cwde
sbb
es
xchg
jle
in
sub
test
test
stos
jo
xchg
mov
pop
push
aas
movs
dec
stos
rcl
cmps
ds
and
cmp
push
mov
xchg
fiadd
lods
jno
(bad)
jmp
lock
push
add
aaa
enter
xor
cmp
sbb
mov
rcl
loope
add
mov
or
push
adc
sbb
into
dec
ret
adc
add
jne
aas
shl
xchg
cmp
mov
and
cmp
test
pop
les
cld
ret
or
mov
dec
push
adc
repz
(bad)
xor
repz
lds
adc
xor
sub
rcl
int3
push
cld
xor
out
out
sub
mov
je
or
cld
push
ret
push
lds
dec
mov
cmps
sub
stc
sbb
xor
divps
jae
dec
fmul
loope
pop
mov
(bad)
fisttp
loopne
lds
mov
pop
pop
scas
adc
ins
mov
daa
cmp
cmp
push
shl
mov
jmp
mov
sbb
clc
or
jg
adc
jge
push
add
mov
mov
xor
push
gs
aam
or
sbb
sub
jb
cli
lahf
cld
sbb
cld
test
inc
sub
mov
inc
jno
add
scas
mov
cmp
iret
outs
jl
mov
push
or
jb
sub
mov
xor
loop
ror
xchg
xor
fdiv
sbb
xchg
nop
cmp
pop
leave
and
hlt
or
push
mov
mov
sbb
imul
dec
arpl
gs
ins
jecxz
js
xchg
push
cmp
add
out
mov
cli
adc
mov
mov
cmp
jno
adc
idiv
mov
test
or
mov
(bad)
xchg
in
ins
sbb
or
jbe
ds
cld
out
sbb
xor
mov
jmp
adc
aam
cmp
mov
div
test
in
das
or
(bad)
sub
outs
cmp
test
retf
rcl
xchg
out
sub
jb
cmp
push
cwde
ss
mov
cmp
cmc
out
xchg
rcl
dec
shl
xlat
jmp
out
sbb
imul
mov
(bad)
ficomp
hlt
jecxz
jg
inc
and
sbb
dec
dec
div
mov
cli
or
xchg
xchg
cmps
test
imul
xchg
and
(bad)
stos
dec
shl
ret
dec
mov
rcl
xor
in
or
mov
les
add
outs
mov
das
xor
ds
(bad)
mov
ins
lods
mul
jae
js
int
into
adc
ror
(bad)
or
or
jg
stos
retf
jb
mov
test
xchg
mov
xor
jb
jmp
pusha
ret
add
cmp
pushf
into
or
(bad)
sbb
inc
push
push
mov
les
push
sbb
stos
push
push
xlat
sbb
data16
cld
dec
jmp
pop
dec
push
xor
pop
or
jecxz
lds
sub
clc
xor
daa
sub
mov
rcl
push
hlt
xchg
sub
mov
retf
adc
sbb
cmps
jbe
es
inc
xor
xchg
sti
pop
sti
sub
dec
lds
mov
cwde
cwde
mov
sbb
ins
sahf
and
add
pop
inc
lds
xchg
or
out
sbb
jb
mov
pop
adc
mov
adc
pop
test
imul
mov
out
pop
mov
sub
add
repz
iret
jmp
pop
push
clc
scas
into
push
adc
cmp
stos
ins
and
xchg
xchg
pop
out
inc
push
mov
jecxz
retf
mov
scas
ins
call
nop
push
pop
pop
or
aaa
divps
jb
(bad)
fwait
pusha
dec
mov
mov
mov
adc
sub
dec
jge
rcr
repnz
sbb
push
sub
fwait
adc
leave
aas
push
add
adc
les
cli
mov
into
push
test
push
ins
lea
xchg
fnstsw
test
fdivr
jle
or
cmovp
mov
cld
inc
jbe
sbb
sub
js
sub
fcomp
iret
ss
cmps
addr16
lods
lods
push
out
cmp
shl
(bad)
cmc
inc
arpl
mov
jmp
cli
add
mov
sbb
nop
icebp
adc
sbb
in
mov
push
mov
cmp
outs
bound
dec
jge
and
rcr
test
out
xlat
repz
or
dec
xchg
add
addr16
stos
fs
inc
(bad)
cmc
test
in
xchg
adc
in
mov
dec
inc
popa
jmp
add
cmp
cld
stos
call
ins
sub
push
mov
adc
call
inc
dec
sub
sub
cmp
mov
sbb
mov
js
call
popf
out
or
jae
gs
retf
stos
sbb
pop
pop
or
mul
add
jne
jge
jno
or
jo
lods
(bad)
and
repnz
js
test
mov
jo
test
cmpps
repnz
jmp
leave
int3
repnz
mov
mov
hlt
sub
or
adc
pop
jb
inc
adc
or
push
lods
loop
adc
loopne
adc
ins
mov
or
sub
fcmovnu
call
(bad)
repz
add
cwde
leave
loope
jp
hlt
cs
add
pusha
ins
aaa
adc
int3
lock
cmp
sbb
aad
xchg
sahf
jl
sub
shl
jmp
(bad)
jno
jb
imul
daa
mov
and
sahf
fisttp
js
mov
icebp
into
pop
sub
(bad)
stc
daa
shr
dec
push
rol
clc
gs
inc
cmps
push
idiv
xchg
sbb
ins
mov
mov
test
(bad)
fild
loope
cli
aad
inc
add
test
mov
dec
push
mov
(bad)
mov
pop
shl
push
mov
popa
sar
sbb
add
(bad)
ins
call
push
or
mov
mov
aas
rol
xchg
ja
mov
jle
mov
dec
jp
test
addr16
dec
das
jns
add
adc
in
shr
pop
sbb
jmp
pop
int
stc
dec
or
inc
pop
jo
adc
repz
inc
cmp
jecxz
inc
inc
loop
xchg
movs
clc
clc
sbb
sahf
sbb
outs
cmc
cld
mov
sahf
and
jle
and
mov
daa
stos
jns
and
hlt
mov
imul
pop
popf
cmp
retf
push
pop
mov
jg
call
cs
sbb
in
push
and
stos
adc
push
push
ss
clc
cdq
jg
xor
inc
bound
repz
aad
in
mov
pop
xchg
cmc
js
pop
rol
cmp
retf
sub
ds
fadd
fmul
lods
jne
jp
nop
out
pop
das
shl
pop
int3
add
dec
and
pop
adc
inc
jle
xchg
push
and
in
jge
mov
hlt
int3
pop
icebp
in
outs
cmps
dec
call
push
cmp
popf
jae
ret
lahf
(bad)
dec
mov
pop
cmps
retf
mov
setge
pop
sbb
sbb
push
lods
mov
mov
xchg
icebp
inc
cmps
lds
mov
dec
dec
aas
(bad)
dec
leave
(bad)
test
mov
ret
pop
xor
sbb
stc
mov
shl
(bad)
push
xchg
or
mov
popf
fiadd
dec
and
push
sbb
adc
dec
imul
test
mov
pusha
adc
fstp
movs
std
stos
ins
push
int3
inc
shl
pop
jmp
scas
aad
stos
out
cdq
or
jne
mov
icebp
aam
into
inc
inc
in
adc
popf
sub
sub
pop
gs
adc
ins
ins
lea
call
ror
iret
pop
pushf
pop
mov
fsub
mov
or
sahf
jae
cld
stos
mov
inc
adc
cdq
dec
pusha
std
fidivr
inc
imul
(bad)
std
sbb
add
scas
aam
in
or
jae
jae
pusha
xlat
mov
or
mov
sbb
fsub
aam
xchg
(bad)
js
dec
push
sub
adc
daa
leave
jp
mov
inc
or
xor
mov
iret
rcr
pop
mov
sub
add
in
mov
sbb
outs
cmps
fild
retf
sbb
cmp
mov
jecxz
sahf
pop
push
xor
stos
dec
clc
outs
pop
or
mov
mov
lock
cwde
outs
pop
inc
nop
jmp
(bad)
icebp
imul
cmps
(bad)
sahf
or
nop
jmp
(bad)
aas
leave
jo
add
or
pop
push
lea
push
call
adc
movs
jg
mov
pop
lods
pop
dec
cmp
lds
jl
prefetchw
std
scas
push
aas
adc
jmp
mov
sbb
inc
push
jg
aam
aas
outs
mov
aaa
push
jns
fst
dec
mov
cmp
sti
jl
dec
cmps
(bad)
cmps
movs
dec
xchg
lods
dec
ds
adc
cmp
dec
pop
push
or
adc
(bad)
fisttp
xchg
mov
div
sbb
add
push
inc
cmp
sub
push
sub
ret
std
sbb
sbb
mov
push
rol
cmp
aas
mov
std
mov
test
out
popa
aad
test
shr
mov
adc
jmp
mov
into
addr16
das
xor
pop
fidiv
push
dec
mov
or
sub
sub
bound
cmps
aad
test
mov
cld
or
sub
adc
push
inc
leave
jle
jne
stos
mov
mov
or
lods
paddb
mov
retf
cdq
fwait
stos
adc
add
loopne
cwde
sub
sbb
add
retf
std
inc
fld
test
lahf
pop
mov
push
popa
lds
jmp
leave
pop
push
rcl
pop
mov
scas
mov
iret
xchg
repz
mov
loop
add
ret
fidiv
push
iret
sbb
sbb
(bad)
pop
scas
add
dec
outs
nop
xor
mov
or
dec
push
dec
cmp
jne
mov
cmp
and
sub
sub
stos
jns
aad
pop
cmp
frstor
jnp
pop
mov
inc
sbb
mov
cmp
adc
or
jae
(bad)
mov
out
sub
(bad)
sbb
movs
and
push
(bad)
lods
fmul
lock
stos
mov
cmp
or
mov
out
daa
sub
mov
pop
sbb
(bad)
test
dec
adc
ins
iret
nop
scas
lahf
push
or
mov
push
jl
xor
mov
rcl
nop
sbb
test
dec
inc
daa
push
pop
pop
rol
cwde
mov
xchg
stos
ret
and
fimul
add
popf
in
push
dec
mov
push
retf
fadd
(bad)
cld
jl
sahf
inc
sti
ret
push
sar
inc
js
sub
jmp
push
ins
nop
gs
mov
stos
pop
cmp
(bad)
xor
xchg
(bad)
xor
pop
jg
lods
loopne
retf
dec
add
lods
push
push
loopne
ficomp
dec
pop
adc
gs
scas
xlat
fs
xor
xchg
cmps
idiv
and
pop
ss
pop
gs
mov
inc
add
xchg
xchg
sub
dec
pop
ds
mov
in
fdiv
pop
inc
xor
or
outs
or
pusha
pop
mov
in
push
popf
mov
cmp
test
dec
imul
retf
test
or
adc
jnp
retf
ficomp
cmp
cmp
imul
or
sub
sar
mov
(bad)
jne
adc
ficom
xlat
cmp
ss
xlat
ss
in
imul
aam
xchg
fsub
stos
cmp
mov
cdq
popa
and
sub
xor
int
mov
jmp
push
scas
je
fisttp
adc
dec
(bad)
leave
pop
movs
add
fdivr
mov
icebp
inc
fadd
sbb
addr16
in
inc
cs
shr
imul
nop
iret
sar
dec
pop
movs
cmp
xchg
adc
mov
std
imul
loopne
sub
inc
or
jae
repz
shr
xor
xchg
push
push
jge
cwde
sar
cmps
or
cmps
lea
and
xor
and
mov
clc
rcr
in
in
je
xchg
xor
pop
retf
add
or
repz
icebp
sub
or
mov
icebp
add
or
mov
aas
lock
shl
xor
call
dec
sub
into
scas
retf
jno
daa
jecxz
sbb
xchg
pop
data16
cmps
imul
mov
ins
pop
sub
xor
ins
jmp
mov
mov
repz
hlt
loopne
cld
lock
adc
dec
data16
aas
stc
mov
cli
ret
icebp
rol
xlat
xchg
out
xchg
shl
pop
adc
sbb
test
fcom
scas
cmp
add
and
int
pusha
repz
push
and
add
adc
outs
adc
add
das
inc
or
mov
mov
icebp
dec
aad
adc
js
adc
sub
jmp
jge
mov
jnp
fadd
dec
and
aas
xchg
dec
mov
add
mov
xchg
add
div
js
inc
add
inc
mov
inc
adc
sub
jne
mov
inc
cmp
dec
push
pusha
or
sub
jnp
xlat
mov
cmc
inc
push
jnp
push
mov
or
sub
or
stos
and
ins
sub
std
out
fistp
in
scas
push
outs
or
inc
cmp
cld
sub
jnp
aam
fidivr
rol
scas
add
mov
out
idiv
lods
xor
aaa
pop
jg
leave
mov
jns
adc
jmp
sti
jmp
les
pusha
mov
pop
or
int3
and
mov
inc
mov
sub
loop
pop
cmp
and
and
and
lods
add
inc
or
push
inc
icebp
ins
jo
pop
sub
arpl
popa
cmp
out
fistp
dec
adc
jns
mov
adc
jp
test
inc
xor
mov
jl
inc
aam
adc
lea
xchg
cmp
unpckhps
push
push
loope
mov
jg
scas
pop
test
dec
and
inc
jmp
inc
pop
xchg
ds
sub
out
pop
push
pop
cmp
icebp
push
inc
movs
xlat
out
xchg
push
in
iret
enter
jnp
imul
ret
lock
lgs
jg
pop
daa
sub
xchg
jb
adc
mov
ja
xchg
loopne
jle
jo
lock
jnp
push
in
inc
add
sbb
mov
mov
icebp
ja
cmp
sbb
or
and
and
adc
xchg
dec
jg
sbb
out
or
lahf
not
pop
out
stos
pop
dec
(bad)
or
adc
(bad)
(bad)
lods
jp
mov
addr16
test
mov
push
shl
iret
jge
push
cmp
scas
mov
lahf
push
inc
cmps
test
jbe
daa
push
push
xchg
js
scas
adc
fldenv
repnz
xor
adc
(bad)
movs
add
jle
lea
or
dec
mov
mov
lea
mov
and
daa
cmps
push
xor
add
push
mov
or
pop
in
push
test
jp
test
ret
jno
retf
lock
or
dec
jmp
scas
cmp
xor
clc
mov
fadd
dec
inc
(bad)
(bad)
push
push
xor
test
lock
add
retf
xchg
sahf
cmp
fstp
jae
popa
push
add
cmp
inc
in
js
fisubr
lods
mov
hlt
jmp
ds
xchg
jne
pop
mov
add
sbb
cdq
inc
pop
jns
push
cmp
xchg
in
data16
pop
adc
fstp
xchg
in
sub
xchg
data16
stos
stc
inc
adc
sub
outs
xor
int3
mov
and
stc
shr
popa
gs
pop
pop
add
push
addr16
repnz
test
mov
ins
dec
imul
mov
xchg
or
dec
inc
mov
cmp
add
cmps
test
or
fbstp
in
xchg
xor
stos
xchg
mov
adc
mul
and
push
arpl
lahf
sahf
mov
leave
dec
jg
sub
fldcw
or
mov
mov
test
je
mov
inc
jmp
loop
pop
mov
cmps
imul
jl
cmp
stos
pop
sbb
gs
jb
push
cli
jne
mov
mul
cmp
add
jecxz
test
inc
or
mov
inc
in
nop
dec
cmp
rol
cli
pop
xor
push
mov
sbb
sti
pushf
loopne
cmps
lahf
pusha
push
dec
dec
cdq
dec
scas
pop
dec
lahf
ja
push
or
cld
add
fistp
cmp
fstp
xchg
jbe
ja
jmp
mov
in
cmp
bound
imul
xor
mov
xchg
sub
div
xor
push
imul
or
add
ins
in
and
cmps
or
out
fimul
push
js
lea
sahf
arpl
cld
loope
sub
daa
loopne
jne
mov
pushf
out
stos
cmp
cmps
and
push
cmp
push
pushw
repz
xchg
sahf
sub
or
imul
pop
add
xor
cmps
ins
push
mov
retf
mov
push
in
dec
movs
fdivr
call
mov
xchg
xchg
int
dec
dec
add
dec
xchg
je
cmps
std
in
cli
test
sbb
jmp
popf
xchg
out
and
int
adc
lock
xchg
mov
pop
push
and
jo
outs
cs
fdivr
push
fnstenv
call
imul
mov
jns
jb
dec
mov
retf
ror
mov
imul
add
xor
adc
mov
xchg
mov
mov
outs
int3
and
adc
jae
add
or
in
pop
pop
cld
movs
retf
or
pop
dec
test
or
mov
clc
push
cdq
imul
nop
jge
cld
fs
pusha
cli
ins
icebp
and
(bad)
cli
mov
jle
fwait
test
test
sbb
cmp
mov
stos
ja
dec
cdq
mov
out
imul
ins
retf
sub
push
mov
cli
cld
pop
mov
stos
pop
jmp
push
je
inc
icebp
sar
dec
add
inc
mov
sub
je
jecxz
into
in
imul
sub
ss
call
mov
jne
aaa
inc
jae
pusha
jle
sub
xlat
shl
icebp
cmp
fsubrp
push
push
loope
dec
mov
dec
dec
inc
gs
cli
fidiv
test
inc
xlat
inc
cmp
xchg
das
or
jmp
adc
jae
es
repnz
sbb
call
adc
cmc
int3
lods
xchg
inc
std
xor
xor
fst
sub
out
mov
jnp
cmp
adc
xor
repz
sbb
movs
fsubr
es
cmps
aas
add
dec
adc
fidivr
or
mov
in
jne
in
sub
pop
dec
fnstsw
mov
es
pop
jmp
add
push
loopne
mov
rep
sti
sub
pop
pop
xchg
xchg
mov
fimul
and
mov
sti
nop
and
jmp
dec
pop
dec
and
push
dec
dec
popf
aas
mov
inc
rol
outs
test
push
xchg
dec
cmp
mov
sbb
dec
jae
xchg
cld
pop
sbb
adc
mov
or
push
pop
in
ds
mov
js
sub
loop
cmp
sahf
retf
stc
test
jo
bound
lea
fsubr
retf
ror
loope
fiadd
mov
popa
or
cmp
jb
adc
or
outs
mov
cmp
cmps
pop
call
sbb
mov
xchg
sahf
out
mov
add
mov
xlat
xor
in
jecxz
push
aam
mov
add
xchg
or
or
xor
inc
pop
inc
adc
sub
ja
shr
push
fadd
sub
mov
rcr
mov
jl
test
jge
pop
outs
sbb
(bad)
mov
outs
xchg
in
jge
daa
push
fbstp
stos
outs
adc
and
fnstenv
xchg
loopne
mov
mov
dec
inc
pop
call
mov
ja
dec
inc
cli
dec
mov
ficom
fsub
push
mov
bnd
sbb
dec
call
je
loope
(bad)
dec
jle
inc
leave
and
and
(bad)
in
(bad)
cwde
xor
mov
adc
retf
mov
ret
pop
mov
rcr
jmp
adc
xchg
xchg
sub
xchg
jns
jmp
mov
mov
in
mov
pop
inc
hlt
push
lea
sbb
add
loopne
mov
cwde
dec
daa
xchg
cdq
mov
xor
push
shr
arpl
xchg
sub
fst
ja
jge
lock
add
sbb
mov
sub
inc
pop
icebp
rcl
xchg
aam
jne
cmp
mov
stos
jmp
(bad)
imul
sahf
sti
or
jg
(bad)
push
test
pushf
and
ss
lock
movs
repnz
fidivr
(bad)
mov
xchg
cmp
and
mov
popa
jbe
movs
jp
xchg
(bad)
call
mov
leave
movs
and
and
xchg
out
(bad)
(bad)
lods
daa
adc
mov
dec
stos
(bad)
(bad)
out
cwde
les
aad
or
rol
sbb
(bad)
pop
push
mov
or
pop
and
pop
mov
and
aas
xlat
lahf
mov
rol
js
and
in
retf
add
arpl
stos
push
mov
cs
cmp
xchg
pop
ficom
and
sbb
push
call
pop
loopne
mov
outs
jnp
push
shr
fcomp
pop
mov
sub
ret
pop
loop
dec
sub
stos
adc
call
movs
pop
push
jae
clc
fs
pop
jo
ret
mov
retf
xchg
movs
imul
shl
mov
dec
and
push
je
or
idiv
pop
dec
mov
mov
jbe
jmp
cmp
mov
adc
inc
outs
(bad)
fnstenv
sub
(bad)
cld
or
cmp
jg
and
jae
sbb
aam
(bad)
pop
and
(bad)
arpl
xor
aad
outs
test
in
dec
sar
out
or
test
cli
jl
and
daa
repnz
pop
loopne
(bad)
loopne
or
dec
daa
xchg
mov
rcl
adc
(bad)
push
cld
adc
and
jno
xrelease
call
imul
aas
cdq
mov
mov
in
cli
sbb
cwde
and
push
and
jmp
inc
pop
(bad)
xor
mov
dec
pop
xor
pop
ins
inc
or
mov
leave
movs
pop
scas
std
dec
jae
sub
and
mov
es
xor
jns
or
jmp
fisttp
hlt
(bad)
es
hlt
push
push
jmp
mov
in
or
rol
mov
call
push
and
ret
loopne
adc
sub
outs
sbb
cld
sbb
fadd
outs
inc
outs
repnz
add
fsub
or
mov
test
(bad)
in
xlat
in
mov
lock
push
xor
pop
rcl
mov
xchg
mov
out
cli
in
xchg
aad
adc
aam
or
jae
push
lods
gs
inc
loopne
stos
pop
(bad)
call
out
push
cmp
dec
stos
push
ins
dec
aaa
ins
ret
mov
lds
movs
mov
sub
dec
dec
lahf
cmp
xchg
cmp
dec
jne
popa
clc
cmp
adc
add
pop
mov
popf
ffreep
mul
sbb
repnz
lds
daa
scas
cmp
pop
sbb
je
(bad)
cmp
cdq
inc
add
inc
jg
xor
test
adc
sbb
or
adc
jmp
sbb
loope
xchg
out
sub
adc
cmp
xchg
imul
and
scas
retf
push
push
adc
inc
pop
inc
loop
mov
std
push
mov
imul
(bad)
jnp
(bad)
jmp
cmp
outs
jecxz
sbb
xor
cmp
shl
xlat
rol
sti
adc
xchg
jecxz
xlat
mov
bound
push
and
lods
dec
mov
out
xor
sbb
bound
(bad)
dec
ret
and
rcr
add
ds
pop
push
jo
fwait
add
outs
mov
add
hlt
out
aam
push
adc
sbb
add
stc
pop
lods
int
push
xchg
ret
mov
test
jae
cwde
cmps
aam
loop
rol
test
and
mov
in
push
pop
iret
call
int3
fldcw
div
fst
in
dec
inc
(bad)
add
push
ja
das
adc
dec
dec
or
scas
or
nop
retf
jnp
mov
je
sub
mov
mov
test
sub
inc
je
jge
pop
mov
aad
cdq
jbe
cmp
sub
loop
mov
mov
out
lods
pusha
bound
fnstsw
ror
retf
jnp
jo
clc
scas
aam
fstp
push
cmp
test
sbb
cmp
mov
imul
or
jecxz
scas
lods
lock
dec
int3
mov
fisttp
xchg
lock
(bad)
mov
mul
push
pushf
xor
loop
pop
aam
not
stos
push
mov
mov
in
retf
fmul
es
leave
xlat
jle
mov
xchg
or
push
repnz
test
es
dec
inc
jge
dec
xchg
mov
mov
mov
cmp
scas
dec
js
xlat
sbb
and
imul
cmps
or
push
arpl
adc
scas
pop
push
sub
pop
mov
xchg
out
(bad)
adc
loop
pop
mov
cmp
push
pop
mov
lahf
fwait
out
sub
cwde
ja
sbb
js
and
icebp
jbe
mov
addr16
push
mov
adc
mov
(bad)
(bad)
dec
aaa
dec
(bad)
rcr
mov
(bad)
jl
pop
pop
xchg
inc
fsub
mov
mov
cmp
dec
rol
call
lea
nop
popf
fisubr
mov
fist
rol
je
add
mov
scas
push
sub
pop
and
ins
sbb
add
mov
fld
xor
inc
mov
shl
add
inc
popa
inc
xchg
lahf
mov
pop
cmc
pop
mov
jb
dec
cmps
cmp
sbb
pop
jo
popf
mov
cs
ja
popf
imul
test
mov
lods
mov
push
push
repz
jle
mov
mov
data16
shl
dec
add
ss
aas
or
push
adc
lods
lods
dec
sysexit
outs
jns
and
or
fiadd
pop
addr16
push
shl
sbb
inc
or
jp
cmp
mov
and
adc
jle
fwait
pop
mov
push
xlat
in
inc
ror
popa
adc
dec
les
and
aad
mov
shl
lea
xchg
fs
sbb
sahf
push
and
push
adc
jbe
pop
pop
mov
shl
pop
mov
or
xchg
mov
mov
or
sbb
clc
cwde
mov
dec
int
push
(bad)
or
jl
cmp
adc
inc
mov
sub
inc
clc
fwait
dec
popf
mov
mov
ficom
mov
in
jno
ret
and
dec
mov
scas
xlat
and
out
cmp
mov
dec
es
rcr
and
add
popa
cmp
in
data16
xor
stc
stos
xor
adc
loope
movs
in
aad
das
mov
mov
sub
pop
lods
cmp
and
ret
scas
leave
add
in
jle
xor
xlat
icebp
ja
mov
rcr
pushf
cs
xchg
jbe
xor
mov
out
test
mov
mov
movs
adc
mov
pop
sbb
and
fstp
or
rol
aam
(bad)
cmc
jne
retf
xor
inc
mov
shr
fnstcw
jbe
fld
dec
daa
push
das
sbb
push
(bad)
(bad)
jmp
int3
xchg
(bad)
sbb
mov
loopne
iret
and
push
ja
dec
stos
xchg
jae
dec
scas
mov
push
cdq
imul
adc
imul
popa
imul
je
xchg
push
addr16
(bad)
jp
lea
ret
ins
add
mov
ret
pop
xchg
mov
jg
iret
out
movs
or
dec
int3
xor
in
jl
ds
dec
mov
cmp
jecxz
in
inc
out
pop
inc
mov
fisub
jecxz
push
or
out
dec
aam
stc
pushf
mov
enter
sar
pop
mov
mov
mov
scas
stos
push
xchg
and
scas
inc
push
adc
mov
add
je
and
fwait
push
es
xor
iret
stc
and
xor
inc
jne
cmp
(bad)
mov
mov
pop
fwait
xchg
or
fnstsw
daa
or
out
popa
pop
movs
xchg
add
fistp
mov
stc
jmp
sbb
xor
sbb
loope
sub
aas
jecxz
cmc
cdq
leave
mov
retf
mul
jp
xchg
cmps
loope
cmp
mov
mov
inc
sub
xchg
lock
out
ins
ds
xchg
in
test
fdivrp
cs
cwde
(bad)
push
shl
jae
ss
jmp
lds
ds
fld
adc
pop
sbb
jne
inc
pop
push
(bad)
jno
or
mov
mov
inc
leave
sub
mov
push
ss
sub
xor
lahf
dec
pop
ins
mov
lock
iret
(bad)
push
fbstp
push
mov
ret
addr16
bound
add
dec
cmp
jecxz
out
fidiv
mov
in
jmp
cli
imul
and
ror
push
out
(bad)
bound
jg
inc
lods
call
xchg
mov
test
and
cdq
pop
sbb
inc
xor
and
sbb
mov
xchg
test
push
cmp
cli
pop
mov
add
cmps
(bad)
mov
fst
push
not
or
or
shl
xchg
leave
sub
mov
xor
inc
mov
adc
jbe
and
mov
(bad)
rcr
std
pop
aad
jl
int3
dec
mov
sbb
stos
movs
outs
rol
out
xchg
out
mov
dec
ins
loope
cld
sub
mov
jg
rcl
cmp
in
(bad)
adc
jecxz
inc
inc
(bad)
fnstsw
jg
in
rcr
add
popf
(bad)
aas
(bad)
fcom
dec
mov
xor
ficomp
or
add
and
and
cli
jp
xchg
pop
(bad)
and
inc
mov
jmp
mov
xor
pop
mov
mov
xchg
js
dec
mov
add
cmp
jb
jl
adc
(bad)
xor
add
and
test
leave
outs
or
outs
nop
aad
xchg
pop
mov
pop
push
repnz
xchg
mov
popa
pop
pop
retf
jno
mov
cwde
pushf
add
xchg
mov
cmps
sbb
pop
(bad)
imul
pop
sbb
pop
inc
mov
not
jb
jo
push
fwait
jmp
pushf
sub
push
push
lods
jge
imul
xchg
pop
pop
fwait
clc
lds
sbb
pop
xor
inc
and
mov
jae
and
imul
adc
icebp
sub
jae
lahf
dec
pop
aad
cdq
nop
adc
repnz
mov
leave
sbb
mov
movs
fldcw
rol
or
sub
addr16
pop
sti
sub
clc
pop
mov
cmp
add
push
scas
daa
mov
jp
mov
cmps
xor
mov
add
in
push
out
inc
loope
test
fldenv
sbb
mov
and
push
push
icebp
and
je
or
dec
lods
cdq
movs
inc
clc
adc
inc
adc
adc
cli
ret
or
jmp
jns
cmps
mov
mov
dec
out
push
outs
je
js
repnz
mov
xchg
aad
sahf
cdq
or
cwde
mov
cmp
pusha
cdq
pop
inc
(bad)
pop
pop
cmps
(bad)
cmp
fs
daa
stos
xchg
dec
xor
mov
xchg
and
ja
stos
pusha
cmp
push
ss
adc
cli
inc
cmp
inc
cmp
cmp
inc
add
mov
sbb
iret
sbb
iret
stos
xor
cmp
dec
cdq
popf
and
xchg
mov
pop
cmp
rcl
in
rcl
fiadd
push
das
cld
dec
popf
jmp
mov
pop
div
loopne
ror
ja
add
sub
add
add
inc
jmp
not
pop
retf
mov
jo
xor
das
pop
xchg
add
sub
mov
sbb
jns
nop
mov
movs
cs
aam
sub
or
mov
mov
(bad)
dec
pop
adc
cmovg
sbb
dec
pop
inc
repnz
xor
add
mov
mov
scas
cli
jno
sbb
int
cmps
jp
sbb
mov
pop
add
js
xchg
and
fdiv
push
and
push
push
fsub
add
data16
dec
movs
sbb
push
and
sbb
leave
jno
add
shl
iret
and
fist
(bad)
hlt
cdq
mov
inc
jmp
dec
inc
mov
sub
shl
xchg
mov
fsubr
js
mov
gs
and
fwait
ds
and
pop
sub
add
push
aas
jge
ss
xor
mov
mov
cmp
test
mov
cwde
stos
psraw
sar
in
dec
jg
and
xchg
and
test
push
xor
dec
popa
mov
mov
sub
fiadd
mov
leave
(bad)
sbb
push
sar
mov
and
and
leave
sbb
dec
jmp
sbb
jno
add
adc
adc
out
add
inc
fisttp
(bad)
and
push
mov
inc
aaa
push
data16
sti
inc
pop
(bad)
rcl
stos
(bad)
sub
push
push
bound
push
shl
sub
repz
repnz
mov
dec
rcr
aas
cmc
mov
loope
ficom
in
inc
inc
in
pop
ret
mov
fcom
or
pop
sub
sbb
cdq
in
cmp
xor
std
xor
bound
xlat
xchg
sbb
popf
sbb
inc
xchg
loop
out
add
rol
fsubp
add
mov
dec
pop
hlt
pop
out
mov
out
lods
data16
lock
dec
sub
sahf
sub
push
add
pusha
aam
movs
cwde
int3
ret
pop
or
add
pop
add
dec
jp
or
rol
adc
sub
cwde
pusha
pop
js
sbb
jge
adc
cmps
mov
int
inc
push
xor
ret
jmp
adc
adc
cmp
push
inc
add
lods
fidivr
scas
cmp
js
in
int3
ret
pop
sti
stc
pop
dec
bnd
ret
pop
mov
add
adc
(bad)
repz
sti
xor
fbld
stos
mov
inc
test
loop
xchg
lahf
or
test
imul
scas
movs
iret
fs
add
test
fbstp
(bad)
test
push
int3
add
aad
dec
dec
pop
scas
xor
push
pop
cdq
imul
push
xchg
ror
xor
xchg
sbb
(bad)
sbb
sub
(bad)
mov
dec
(bad)
out
ins
arpl
inc
out
ds
stos
pop
pop
push
sbb
clc
lock
adc
adc
cwde
add
adc
call
adc
xchg
lea
inc
imul
jae
shr
push
test
mov
push
add
add
test
out
gs
inc
(bad)
nop
cmp
dec
sbb
push
sbb
xchg
ins
dec
jge
fstp
cmp
sbb
inc
jnp
pop
jo
sub
cmp
sar
pop
jne
lahf
lea
xchg
jmp
jbe
jmp
retf
inc
push
adc
push
sar
ja
jge
push
xchg
adc
aam
bound
add
stos
sub
mov
dec
cmp
loop
es
fcomi
ja
call
push
clc
(bad)
xchg
or
xchg
push
bound
(bad)
pop
mov
pop
pushf
ins
or
inc
das
or
xor
inc
ret
pop
and
aas
adc
inc
lods
dec
inc
loope
das
in
out
scas
retf
fist
pop
and
or
dec
mov
pusha
addr16
and
arpl
jne
jae
mov
fdiv
mov
jmp
icebp
cli
mov
xchg
call
aam
fld
or
stc
pop
or
adc
pop
cmp
popf
or
neg
shr
sub
retf
mov
mov
xchg
repz
rcl
dec
or
es
jbe
enter
push
push
rcl
loop
(bad)
mov
hlt
push
cmp
or
and
(bad)
cli
call
pop
inc
ds
fisub
and
xchg
adc
xchg
mov
(bad)
das
in
push
iret
sbb
cmp
out
sti
pop
push
outs
inc
push
pop
xlat
and
daa
cwde
lods
dec
pop
add
cmp
popf
jl
xor
inc
lahf
lods
push
add
(bad)
mov
mov
div
jo
in
adc
sbb
je
sbb
cwde
add
repz
jmp
add
retf
ficom
mov
xor
jnp
mov
int3
retf
or
clc
jae
pushf
xor
sbb
pop
pop
cmc
inc
jns
test
inc
cmps
cmp
ds
out
sbb
cmp
dec
mov
add
fistp
retf
mov
mov
fucomi
imul
es
inc
mov
add
imul
cs
stos
sub
jl
arpl
int
mov
lahf
sub
popa
ja
in
int3
xchg
(bad)
mov
sub
or
fcom
xchg
mov
jb
xor
fs
ja
mov
jno
gs
mov
sbb
ror
ins
mov
(bad)
in
sbb
retf
nop
jae
unpcklps
pop
test
pop
xor
ss
test
div
scas
sti
mov
sahf
rcr
push
fild
in
(bad)
js
mov
mov
jl
jle
aas
(bad)
sar
mov
jns
pop
mov
pop
in
repz
jns
rol
(bad)
ror
add
pop
sub
push
out
nop
cmp
push
and
call
add
cs
stc
dec
popa
loopne
xor
mov
and
mov
stos
cmps
and
pushf
orps
mov
xchg
aaa
popf
pop
inc
(bad)
repz
sbb
ss
mov
cmp
int
push
xchg
push
repnz
jp
add
add
or
inc
mov
jge
or
fiadd
(bad)
jo
in
adc
sbb
mov
(bad)
fst
dec
pop
jle
addr16
sub
and
jmp
push
out
test
pop
les
xchg
xor
push
cmps
dec
test
sbb
mov
lahf
and
and
adc
nop
xchg
fstp
dec
ror
push
sub
sbb
je
inc
adc
or
push
cli
bswap
int3
mov
inc
stos
gs
xor
lahf
fidiv
inc
sub
scas
in
jp
gs
cmps
lds
imul
stos
pop
(bad)
(bad)
jno
retf
lock
sub
cmp
cmp
jmp
xchg
out
mov
push
mov
popa
out
jb
fidiv
(bad)
movs
sub
inc
aas
icebp
dec
push
std
push
int
into
xchg
mov
retf
sbb
and
and
jp
or
retf
push
add
dec
push
sbb
jae
out
sar
int
cwde
retf
(bad)
and
jmp
es
push
imul
fisubr
push
cmp
out
retf
dec
ret
cmp
xlat
ror
or
add
xor
add
mov
sar
add
xchg
pop
sahf
jo
inc
test
or
cmc
shr
sub
cld
mov
inc
jns
mul
je
dec
bound
loopne
rol
push
add
out
and
inc
or
rcr
xchg
iret
scas
daa
pop
loopne
cmps
ins
or
out
jge
ins
inc
pop
or
lahf
jbe
ins
in
mov
outs
mov
dec
out
jp
(bad)
outs
and
or
in
push
cs
and
leave
clc
sbb
jns
imul
mov
sbb
js
and
mul
retf
imul
int
clc
rcr
fimul
jp
int3
push
and
imul
int3
cmc
aam
sar
test
lods
sub
pop
adc
xchg
jmp
jg
xchg
sub
cmp
pushf
shr
neg
mov
jmp
lock
mov
push
ror
sub
jae
xchg
and
cld
dec
fcmovne
pop
(bad)
cld
out
aam
aaa
test
icebp
pop
mov
ss
and
jge
cmp
adc
in
push
lods
ds
mov
(bad)
mov
xchg
sar
push
fist
addr16
jmp
fnsave
pop
xchg
cmp
ins
mov
sub
andnps
dec
fsubr
out
jl
pop
sbb
jge
inc
cwde
js
pop
sbb
sbb
clc
or
retf
push
ret
adc
xchg
jge
jns
xor
aas
mov
mov
mov
bound
xor
call
je
and
stos
sub
shld
imul
sbb
jns
sub
(bad)
enter
gs
shl
test
dec
pop
cld
scas
cmps
and
jl
xchg
scas
cdq
cmps
add
or
cmp
pop
mov
ret
push
hlt
push
sbb
fucomip
dec
or
gs
jne
scas
aam
sub
mov
mov
sti
popf
(bad)
jns
sub
push
lahf
jmp
pop
gs
pop
fild
add
inc
out
mov
lea
mov
or
mov
inc
adc
(bad)
mov
add
repnz
mov
daa
punpcklbw
xlat
je
mov
stos
jl
loop
jbe
shl
inc
mov
ins
in
mov
sbb
hlt
cmps
xor
fidiv
mov
mov
mov
mov
inc
pushf
inc
pop
xor
inc
cdq
adc
(bad)
adc
mov
and
shl
dec
mov
js
pop
xor
pop
cmp
lods
mov
mov
jo
sbb
adc
cmp
jno
nop
in
pop
sub
add
sar
imul
xchg
sbb
adc
pop
dec
int3
mov
push
add
mov
loopne
xchg
jno
stc
mov
add
or
jmp
dec
aad
pop
dec
jno
jp
jg
mov
pop
and
inc
cmp
sub
inc
sub
jmp
push
add
out
out
sbb
sub
rol
movs
jecxz
adc
addr16
aaa
rcl
adc
iret
das
adc
cld
mov
cwde
xchg
adc
sub
mov
inc
das
mov
dec
push
jle
fstp
xor
jmp
aam
sub
arpl
cmp
cmp
add
push
pop
addr16
jns
cmc
das
mov
clc
add
adc
or
(bad)
call
data16
xchg
pushf
pushf
jbe
inc
(bad)
leave
nop
icebp
in
mov
out
sbb
ss
mov
mov
outs
adc
rol
inc
and
(bad)
dec
inc
lahf
and
push
stos
pop
or
pop
adc
fwait
pop
nop
xchg
aas
pop
or
inc
arpl
scas
sub
outs
in
cmps
in
pop
xor
addr16
icebp
cmp
jl
sbb
dec
sbb
aam
fs
inc
xor
ret
and
fidiv
pop
sbb
sub
cmp
push
jge
push
cmps
cmc
rcl
ins
sub
mov
mov
pop
add
xchg
aam
pop
(bad)
sbb
stos
lods
sbb
popa
fimul
repnz
xor
mov
or
add
pop
ret
mov
pop
cmp
aam
mov
sar
test
ds
push
cmp
sbb
sub
or
call
cmp
cmp
mov
jmp
fsubr
push
push
pop
jge
sub
jp
in
jns
xchg
daa
jns
and
mov
shr
js
(bad)
mov
mov
out
pop
sar
push
ins
dec
sti
mov
dec
cmp
mov
jb
push
cmp
repnz
cmps
jl
mov
mov
js
cmp
(bad)
ret
xor
stc
jge
push
int
out
ins
das
enter
pusha
inc
es
dec
sbb
movs
shr
mov
call
push
test
add
sti
movs
push
pusha
jnp
test
cld
sar
dec
dec
jl
dec
xchg
pushf
inc
xchg
cmps
cwde
xlat
fbld
call
push
pop
pop
dec
dec
into
out
adc
mov
jne
add
mov
(bad)
in
jl
les
inc
add
mov
push
cmp
aas
pop
jne
jge
sbb
sar
bound
nop
or
add
push
ficomp
push
dec
cmps
add
sti
sbb
pop
(bad)
movs
mov
pushf
or
cmps
add
dec
inc
jmp
fmul
retf
jne
adc
pop
mov
mov
retf
dec
fwait
jb
xchg
callw
iret
ds
pop
aaa
cwde
jo
pop
xchg
sbb
mov
int3
sbb
(bad)
jb
mov
jo
cmps
test
dec
retf
sub
lods
push
loopne
cld
sub
and
push
pop
scas
push
and
fs
mov
test
xor
repnz
(bad)
cmps
rol
out
or
sbb
mov
loope
leave
adc
inc
sub
cli
sti
lahf
pmaxsw
daa
hlt
mov
icebp
lahf
push
ds
adc
aam
cmc
mov
enter
ret
dec
sbb
test
inc
repz
cmp
loop
bound
jl
sbb
mov
and
mov
push
ins
(bad)
fnstsw
ja
test
and
jnp
sbb
sub
cs
push
mov
cld
les
xor
mov
xchg
inc
outs
mov
in
cmps
fdivr
loope
cmp
push
mov
jo
push
add
jns
or
sbb
out
or
rcr
mov
inc
(bad)
adc
lea
sub
nop
inc
das
imul
dec
xor
adc
in
popa
ins
inc
dec
fcmove
std
test
in
outs
jl
ja
or
pop
pop
cdq
int3
loop
xor
jecxz
add
ret
stos
movs
inc
sbb
mov
call
daa
mov
inc
stc
jle
push
cmp
sahf
xor
or
xchg
int3
push
es
adc
cmp
das
stos
in
mov
sti
adc
adc
dec
movs
sbb
out
xor
adc
stos
repnz
lods
add
pop
or
mov
(bad)
jo
test
and
and
xor
out
xchg
jo
pop
push
ins
jge
sbb
(bad)
arpl
lock
add
iret
in
push
add
mov
movs
mov
mov
hlt
jb
lea
cmp
sbb
or
mov
call
pop
add
mov
and
(bad)
push
lds
in
or
mov
mov
imul
out
je
js
mov
pop
sahf
xchg
lds
loopne
pop
js
pop
daa
sar
push
in
enter
(bad)
imul
and
mov
outs
aam
loope
mov
inc
push
mov
cmp
sub
int
mov
inc
ins
mov
cdq
xor
shl
sbb
scas
mov
push
popa
dec
pop
inc
aas
xchg
or
push
jbe
pop
je
(bad)
in
jge
pop
dec
mov
sbb
mov
push
xor
lods
icebp
pop
stc
sub
inc
les
addr16
idiv
test
repz
popa
(bad)
pop
adc
loop
xchg
inc
int
es
jns
mov
stc
mov
adc
push
dec
inc
js
movups
jg
test
and
mov
jp
fld
outs
xchg
(bad)
cmp
cmc
inc
add
dec
jb
popa
nop
or
nop
adc
daa
(bad)
xor
mul
loop
mov
mov
cmp
in
push
fcom
scas
and
push
mov
jecxz
fidivr
fwait
fs
je
dec
pop
jne
xor
push
ror
add
imul
pop
xchg
fdivr
pop
cld
mov
movs
call
sub
arpl
sub
push
je
xchg
add
jnp
pop
mov
jle
fwait
xor
xchg
mov
push
sbb
cmp
add
sub
imul
and
pop
in
es
push
inc
push
pop
xlat
(bad)
(bad)
ins
cmp
jno
sbb
xor
dec
repz
sbb
jge
loopne
test
mov
leave
jns
call
hlt
lock
outs
jge
pop
add
xchg
xchg
mul
mov
(bad)
std
fld
lock
pop
movs
cmp
fdivr
xor
stc
bound
jge
out
dec
in
enter
sar
jno
enter
into
loop
in
push
inc
adc
fiadd
pop
mov
popf
sub
leave
pusha
stos
mov
(bad)
jns
jmp
fs
mov
sbb
cwde
mov
inc
cmps
or
adc
adc
mov
or
ss
push
enter
xchg
inc
dec
inc
xchg
lods
outs
lahf
test
sub
or
pop
jnp
push
test
jmp
pop
jle
call
pop
xchg
not
mov
sub
adc
imul
push
rol
add
sbb
xchg
sub
gs
fstp
(bad)
cs
xchg
pop
cmp
ins
retf
std
imul
test
sub
cmp
and
stos
sbb
dec
call
inc
fs
sbb
jnp
aam
repz
(bad)
ficomp
popa
into
sbb
adc
mov
mov
sar
xor
int3
or
sbb
add
cs
outs
leave
in
and
xchg
push
mov
jae
mov
pop
retf
lock
or
stos
rol
aam
add
cmp
or
sbb
gs
imul
xchg
outs
pop
sbb
ret
rcr
inc
mov
sub
xor
mov
movs
jmp
mov
adc
xor
fst
and
mov
mov
lods
mov
push
cwde
fmul
and
fdivp
cmp
mov
mov
clc
imul
ret
retf
add
retf
mov
xor
cwde
stos
sbb
js
in
or
fist
cwde
loopne
repnz
cmp
ins
mov
inc
mov
jns
rcl
push
loope
imul
lods
pop
xchg
bound
pop
shl
mov
mov
mov
pusha
ret
push
jge
cmps
xchg
repnz
dec
fadd
je
add
mov
xor
es
jecxz
scas
and
lods
mov
js
push
xchg
xchg
cmp
sar
std
in
mov
adc
test
cmp
xchg
push
repz
mov
adc
dec
bound
je
adc
loopne
movs
shl
mov
outs
push
jae
sub
and
stc
and
lock
jne
outs
out
sbb
jp
cli
xchg
mov
cmps
add
loope
xchg
sahf
in
pop
xchg
cmp
retf
popf
push
imul
int3
sbb
ja
push
(bad)
push
int3
es
aam
pop
repz
xor
add
(bad)
fst
fs
scas
neg
mov
ja
(bad)
jmp
pusha
sbb
cmp
mov
jae
jnp
mov
mov
xchg
add
adc
(bad)
pop
fadd
stos
aam
or
mov
mov
and
sbb
clc
stos
aad
ja
jp
pop
adc
pushf
jl
jne
js
aam
test
movs
xchg
neg
xchg
cld
jnp
sbb
lahf
in
xor
inc
mov
xor
enter
stos
mov
shl
mov
test
test
ret
inc
mov
sub
pop
xor
jp
and
inc
pushf
fs
neg
retf
call
cmp
mov
mov
fdivr
mov
sbb
shl
(bad)
(bad)
test
push
fbld
scas
pop
inc
stos
inc
mov
popf
add
fldlg2
pop
nop
sbb
ins
ja
sub
xor
out
pop
sbb
xchg
std
mov
cmc
sub
(bad)
jmp
push
jmp
dec
fs
out
(bad)
jl
rcl
(bad)
int3
cmp
mov
popa
jge
gs
shr
xchg
mov
clc
adc
call
sar
mov
push
jno
add
rcl
cld
adc
jl
in
xor
lahf
rol
movs
cdq
dec
mov
test
or
mov
scas
or
test
sbb
int3
push
popa
push
xchg
ins
fbld
arpl
mul
aad
and
push
push
xor
ds
jo
mov
mov
cmps
xlat
push
pop
rcr
add
add
xor
pop
lds
je
inc
lds
out
pop
clc
mov
mov
inc
mov
sbb
xchg
dec
mov
jo
jbe
loop
mov
rcl
sub
pop
mov
cmp
mov
retf
pushf
xor
xor
sbb
inc
in
outs
or
or
sbb
jmp
and
mov
jmp
xchg
mov
out
test
stos
ror
cmp
and
sbb
mov
or
cmc
lock
(bad)
push
sub
xor
mov
adc
(bad)
nop
push
add
sbb
jmp
fsub
mov
push
push
inc
rcl
lea
cmp
mov
adc
inc
jmp
sbb
es
inc
jnp
mov
das
push
stos
mov
out
in
fiadd
(bad)
xor
movs
test
fdiv
dec
sub
call
pop
lods
mov
movs
into
adc
push
(bad)
jge
movs
jecxz
xchg
callw
cmc
test
pop
gs
rcl
mov
(bad)
in
retf
mov
out
cmp
out
push
cmps
push
jnp
out
xchg
xchg
adc
das
(bad)
jbe
in
cmps
adc
and
sbb
push
and
int
aam
rcr
cmp
xor
mov
fmul
sbb
adc
pop
xchg
dec
fdiv
add
hlt
int3
pop
sub
jp
(bad)
sbb
xor
fbld
mov
(bad)
test
test
pop
test
xchg
and
sbb
leave
movs
popa
sbb
and
inc
mov
aaa
ins
mov
leave
dec
inc
add
lds
lea
ret
adc
xor
iret
addr16
and
cmps
(bad)
mov
add
cld
sub
sub
xchg
retf
sub
sub
retf
pushf
fcom
aas
int
rcl
xor
leave
lds
jge
fwait
fs
outs
cmp
popa
push
inc
mov
jg
adc
lds
sub
fwait
jmp
repz
lods
xchg
inc
(bad)
aam
aam
pinsrw
inc
add
mov
or
je
loope
cmp
ds
dec
popa
jg
push
jg
adc
add
mov
shl
xor
mov
pushf
adc
into
cmp
(bad)
icebp
jmp
sub
xchg
sbb
xchg
adc
push
cmp
xchg
sbb
fimul
mov
push
jle
sub
push
fidiv
fcmovne
mov
xor
inc
fsubr
and
sti
and
dec
test
xchg
jle
test
nop
xor
aad
pop
add
sub
sbb
in
jle
jns
lock
in
xchg
jge
push
outs
pop
mov
push
pop
mov
cs
movs
mov
adc
bound
in
mov
arpl
shr
int
and
push
leave
and
sbb
aam
add
outs
adc
je
addr16
mov
sbb
hlt
xchg
dec
std
arpl
sbb
int3
dec
hlt
pushf
push
fcom
and
xor
pop
xchg
loope
fdivr
aas
mov
push
and
pop
bound
lea
dec
retf
popa
(bad)
fcmovbe
ds
xchg
test
jmp
xor
jb
mov
dec
sbb
rol
out
jae
mov
call
add
add
arpl
mov
xlat
repz
aad
int
mov
push
adc
adc
push
dec
add
sbb
jns
int
test
pop
pop
clc
ds
jb
xchg
pushf
imul
scas
cdq
rcr
dec
mov
lds
jbe
lods
dec
inc
sub
dec
push
cli
xor
ins
or
ret
or
daa
ss
xchg
test
cmp
hlt
sbb
mov
inc
and
nop
shl
and
test
test
(bad)
fisubr
sub
inc
int3
mov
or
sbb
sbb
ja
rcr
add
add
inc
mov
(bad)
xchg
(bad)
stc
sub
in
push
jno
fdivr
inc
lea
neg
fmul
cli
lods
cmp
dec
pop
or
popa
stos
test
test
in
int3
adc
test
in
push
push
mov
fprem1
dec
imul
addr16
repz
inc
in
inc
loopne
nop
pop
push
push
add
mov
pusha
loop
jl
jmp
shr
xchg
mov
imul
sbb
enter
fild
movs
sub
das
or
fild
adc
les
ret
jge
(bad)
in
lods
push
jecxz
xor
mov
xor
mov
stos
sbb
cmp
jno
add
repnz
push
dec
lods
pop
inc
cmp
jge
push
mov
pop
mov
sti
mov
cmp
inc
jno
shl
sbb
imul
jns
ins
adc
fld
in
push
in
jnp
sbb
jl
mov
lods
mov
out
and
rcl
(bad)
xlat
add
out
and
pop
sbb
cmp
mov
imul
test
cli
(bad)
and
lock
aad
add
push
(bad)
cmp
cmps
scas
push
mov
cli
ins
rol
inc
jo
adc
dec
aas
lea
or
jl
mov
out
mov
mov
mov
and
xor
cli
xchg
add
mov
mov
push
and
push
push
enter
pop
popf
or
mov
seta
mov
jb
pusha
push
loope
mov
and
lds
lahf
xor
sbb
cdq
mov
cmp
pushf
and
int3
xor
jno
or
lods
jb
push
push
dec
xchg
pop
inc
pop
shl
movs
imul
push
cmp
es
not
aaa
test
ret
ins
inc
push
and
cmc
xor
es
ins
mov
call
test
cmc
movs
jae
mov
cmp
aaa
mov
xor
sti
mov
enter
push
adc
aaa
push
cmp
xor
out
cmps
mov
inc
loopne
or
cwde
hlt
scas
jle
cmp
lods
dec
and
outs
cmp
repz
dec
mov
cmp
mov
xchg
xor
out
ins
inc
xchg
sahf
loope
or
out
ss
rol
mov
outs
aaa
push
arpl
cs
daa
sbb
or
loope
jno
call
(bad)
jns
lods
and
stos
add
mov
fimul
sbb
mov
and
cmp
or
and
xchg
push
push
pop
cdq
mov
add
movs
sbb
xchg
inc
pushf
repnz
cmp
popa
in
inc
xlat
dec
out
mov
mov
pop
mov
sar
test
add
cli
dec
(bad)
pop
aam
adc
mov
aaa
cld
and
adc
xchg
arpl
dec
pop
adc
pop
xor
add
jecxz
sbb
mov
mov
mov
rol
inc
sub
mov
sbb
pop
add
adc
inc
push
push
rdmsr
jl
(bad)
jmp
mov
xor
mov
inc
dec
cmp
popa
dec
sar
and
mov
sar
mov
mov
mov
cs
das
adc
fs
cmp
popf
mov
retf
mov
ins
and
mov
popa
jo
sbb
fld
or
sub
test
(bad)
jae
sub
fdivr
in
fcmovbe
scas
lock
movs
xchg
sub
sbb
mov
ins
cld
xchg
jecxz
pop
mov
(bad)
sub
xchg
xchg
pop
jle
lds
pop
inc
dec
mov
inc
fisubr
and
mov
loop
or
inc
retf
cmp
mov
push
cld
adc
cmps
xor
dec
pushf
push
stos
inc
(bad)
test
scas
loope
pop
in
push
or
jnp
fisttp
jbe
lahf
xchg
rcl
in
pop
fwait
pop
dec
stos
mov
sub
and
imul
retf
mov
push
(bad)
pop
mov
in
cmp
cli
test
es
pop
dec
pop
sbb
adc
jecxz
cmp
pop
fst
push
cld
ret
lea
outs
push
xchg
cwde
les
mov
int3
mov
int3
addr16
(bad)
jle
xor
pusha
js
je
fnsave
xchg
cs
shr
push
jae
outs
push
(bad)
jbe
adc
mov
sub
aas
cmp
jb
push
xor
or
ds
cmps
(bad)
in
daa
sbb
and
arpl
sub
loope
sbb
leave
mov
test
jmp
ins
push
jg
fsub
cmc
mov
out
mov
mov
mov
push
outs
sbb
mov
int3
clc
cmp
cmp
mov
cmp
je
out
add
push
(bad)
movs
pop
loope
aad
sub
loop
or
ror
repnz
ja
sub
out
mov
or
aas
icebp
cmp
test
mov
repnz
test
or
sub
dec
inc
sbb
mov
sbb
and
retf
cmps
cmp
test
inc
push
mov
scas
mov
lods
test
mov
ja
es
pop
and
aad
fild
rol
adc
add
in
mov
or
mov
mov
mov
lods
lahf
cmp
xchg
in
daa
jg
adc
(bad)
call
lds
shl
pusha
ja
jg
mov
aaa
fbstp
and
daa
addr16
ss
xlat
sub
(bad)
push
loope
nop
cs
pop
test
inc
outs
popf
clc
inc
jo
sahf
cmp
bound
loop
pop
dec
test
xor
mov
daa
push
xor
jb
out
push
scas
out
retf
sub
cmps
dec
out
in
into
push
data16
pop
push
jmp
pop
mov
push
xchg
call
aas
into
mov
adc
jmp
jecxz
or
mov
mov
data16
xor
adc
in
jo
test
sub
pop
push
out
(bad)
out
xor
sbb
ja
outs
mov
xchg
shl
(bad)
fisub
sbb
pop
sub
std
inc
xor
(bad)
in
xchg
in
outs
cmp
shl
fmulp
push
scas
pop
jg
pop
sub
in
stos
scas
cmp
sub
pusha
xchg
(bad)
sti
mov
or
mov
dec
xor
xchg
push
retf
adc
cmp
repz
imul
adc
or
xor
int3
add
fwait
pop
xchg
ret
or
cwde
js
xor
push
add
test
add
pushf
xor
push
(bad)
jns
or
jnp
(bad)
les
fiadd
cmp
mov
jo
add
(bad)
mov
icebp
xchg
pushf
loope
daa
and
loop
xchg
mov
leave
xor
mov
hlt
push
aas
sub
and
outs
not
int
dec
outs
mov
pop
jno
mov
jecxz
test
call
cmp
push
cmp
ds
shl
push
mov
clc
sbb
shl
dec
sar
add
push
mov
cmps
stc
xchg
je
pop
xor
in
cdq
cmc
ror
sub
inc
jmp
pop
call
and
dec
int
ins
in
gs
sub
mov
pop
mov
rcl
(bad)
loopne
cmps
ret
les
outs
fcom
(bad)
jp
les
mov
add
mov
aas
mov
jae
inc
movs
sahf
leave
retf
div
pop
add
xchg
int3
mov
(bad)
xchg
or
pop
sub
mov
outs
pop
inc
rol
sbb
cmps
into
jmp
sahf
and
aaa
mov
in
and
ins
adc
mov
mov
jle
pop
push
cmp
gs
sahf
or
clc
inc
dec
pop
(bad)
aam
push
aam
mov
and
push
or
and
or
jl
and
mov
pushf
inc
out
xchg
push
cs
aas
(bad)
vmovapd
dec
jecxz
add
jmp
std
dec
in
push
mov
adc
push
mov
push
mov
xor
jae
adc
call
inc
push
mov
mov
idiv
ds
cld
inc
movs
(bad)
cld
jge
add
mov
cmp
and
test
adc
jno
call
mov
pop
je
mov
data16
mov
cdq
ud2
and
lods
into
inc
adc
aaa
inc
inc
repz
sti
aaa
fsub
cli
sbb
mov
jge
mov
mov
or
pop
inc
adc
stc
cmp
pop
in
mov
sbb
scas
out
or
push
jnp
mov
inc
cmp
test
jmp
adc
add
iret
or
pop
xchg
mov
dec
in
dec
add
lods
pusha
mov
dec
stos
adc
and
cmp
xchg
push
out
sub
push
mov
dec
pop
sbb
je
sar
ret
push
(bad)
imul
sahf
dec
es
lods
sub
cmp
adc
xor
call
loop
push
pop
sbb
ja
or
fs
cli
repnz
mov
inc
cmp
jb
lods
mov
push
jmp
mov
repnz
xchg
or
push
stos
mov
sbb
outs
or
add
push
jg
pop
mov
mov
retf
iret
je
add
push
ret
xor
pop
loopne
xlat
mov
or
cmp
scas
stos
outs
pop
mov
adc
ret
outs
bound
cs
mov
bound
sub
sbb
xor
cli
ret
inc
jne
mov
int
jae
jbe
jecxz
mov
lds
add
add
push
mov
nop
add
cmc
jb
out
pop
xor
pop
fiadd
push
dec
repnz
push
dec
jl
(bad)
popa
cmc
imul
or
xor
or
dec
cmp
int
pop
or
push
xor
sbb
xchg
dec
push
push
int3
inc
jo
push
xchg
inc
sbb
loop
loope
xchg
mov
pop
push
xchg
out
adc
mov
fidivr
sbb
aas
and
jno
cdq
(bad)
jbe
aaa
adc
data16
out
ds
adc
data16
(bad)
fild
mov
mov
lods
fistp
xchg
iret
iret
fnstcw
push
inc
arpl
popf
jbe
xchg
xor
fisubr
sbb
(bad)
fnsave
adc
adc
and
out
sbb
test
sbb
shl
int3
mov
pushf
idiv
mov
adc
mov
xor
adc
and
jo
cmovg
daa
push
xchg
mov
lds
lahf
clc
push
sub
sbb
add
xchg
mov
mov
sub
add
pushf
jmp
aad
imul
mov
out
je
pop
adc
xchg
mov
add
sub
enter
cld
in
fwait
loop
ficomp
ins
cwde
pop
ins
mov
stos
mov
mov
inc
jns
mov
in
loopne
mov
enter
jl
scas
ror
out
mov
icebp
(bad)
push
aad
arpl
mov
loopne
push
adc
xchg
pop
sub
mov
call
jne
outs
lock
push
retf
ds
data16
mov
mov
and
xor
into
jns
pop
cmp
sbb
push
pop
cmp
adc
jo
mov
xor
xchg
in
ret
imul
mov
xchg
cwde
mov
stos
jns
test
mov
xor
jne
ss
push
xchg
mov
add
ret
dec
out
add
lods
sti
pop
out
rep
add
clc
data16
call
dec
lahf
mov
test
ins
add
call
lods
pop
pop
cmp
sahf
pop
pop
inc
push
adc
dec
pop
ja
loope
mov
data16
add
jg
dec
in
movs
popa
fidiv
add
or
add
repnz
adc
movs
jle
outs
jmp
mov
dec
xchg
add
jmp
imul
mov
add
jnp
sub
jnp
aam
sar
hlt
xor
ins
iret
adc
dec
adc
or
daa
mov
sbb
jecxz
push
add
(bad)
sub
lds
les
mov
mov
jl
(bad)
repnz
pop
jge
cwde
and
dec
mov
enter
popf
std
in
or
iret
lock
rcr
sub
pop
jl
mov
aam
or
push
jecxz
rol
pushaw
pop
bound
in
add
jle
fld
mov
push
xor
jl
test
loope
cwde
inc
inc
xchg
ret
push
repz
xchg
or
or
push
xchg
mov
or
out
outs
sbb
mov
(bad)
push
cmp
add
shl
mov
or
dec
jle
add
push
ret
cmps
sub
cdq
cmp
xchg
cli
arpl
retf
mov
test
out
mov
jl
push
shr
mov
mov
jae
sub
and
mov
cmp
(bad)
mov
add
ror
jno
lds
pushf
mov
adc
icebp
xchg
inc
movs
dec
cmp
sbb
div
inc
pop
push
repnz
into
out
dec
int
cmp
and
jb
mov
cmc
pop
pop
clc
aad
push
jg
lds
cmp
xchg
je
std
inc
inc
push
repz
jno
test
push
xchg
sub
adc
fld
ds
jmp
neg
mov
(bad)
jge
icebp
mov
pop
push
je
rcr
mov
or
xor
lods
nop
outs
push
popf
mov
cmp
xchg
dec
or
mov
push
dec
movs
stos
xchg
dec
je
icebp
cmp
jecxz
add
movs
int3
int
pop
jb
sbb
xor
push
stos
(bad)
mov
lods
imul
adc
dec
push
xor
test
xchg
dec
mov
jno
add
(bad)
jmp
scas
mov
sub
add
pusha
fcom
jo
inc
jl
push
mov
sar
pusha
mov
mov
pop
mov
aad
and
sbb
jbe
adc
popa
sbb
into
dec
add
adc
call
test
loopne
out
or
ins
pop
or
test
jle
push
sub
cmps
and
or
data16
(bad)
std
cmp
ss
push
aas
pop
add
iret
xchg
mov
je
adc
icebp
sub
ja
adc
xor
cmps
adc
pop
jge
adc
mov
ins
(bad)
ds
sub
adc
jp
cs
mov
fcmovbe
adc
dec
rcl
xor
jnp
push
sbb
pusha
mov
push
fidivr
mov
xor
mov
add
mov
push
retf
jo
sbb
imul
clc
mov
or
rcl
or
ret
jl
push
jno
ins
out
sbb
in
mov
and
rol
data16
rcr
out
in
push
or
inc
pop
dec
mov
push
pop
push
mov
pop
mov
call
mov
hlt
jne
sub
ficom
dec
sar
pushf
xchg
mov
xchg
and
inc
and
(bad)
out
and
gs
stc
and
xchg
mov
pop
mov
inc
pop
sbb
shr
outs
mov
icebp
sahf
iret
xor
outs
sub
dec
inc
not
xlat
jne
dec
test
imul
pop
adc
jge
inc
mov
lahf
xchg
inc
popf
addr16
dec
in
cs
arpl
jmp
mov
aas
(bad)
loope
or
xlat
in
gs
ud2
mov
(bad)
dec
sub
sbb
pop
sar
pop
dec
xor
mov
in
cmc
mov
xor
aas
inc
in
enter
inc
sbb
imul
pop
xchg
sub
popa
xor
xchg
or
das
cwde
out
inc
repz
sahf
sbb
int
fsubr
ins
enter
outs
adc
mov
loop
test
rol
mov
cwde
movs
int3
inc
mov
dec
movs
pop
add
sbb
leave
out
xlat
jge
mov
jno
and
inc
imul
jno
and
sbb
cmp
loopne
aad
or
mov
add
mov
cmp
in
lahf
mov
jne
arpl
int
mov
jp
lock
mov
and
adc
pop
sahf
lods
cld
data16
cs
jl
pop
test
and
mov
pop
cmc
(bad)
inc
add
cld
aad
cwde
xchg
dec
ret
lods
into
pop
jbe
mov
xchg
in
jmp
mov
in
cmps
inc
push
cmc
mov
pop
(bad)
adc
js
mov
das
dec
ror
test
stc
cmp
call
xlat
pop
dec
mov
fwait
ins
xchg
iret
pop
lahf
shl
cmp
ds
cmp
mov
fwait
push
loop
sub
pusha
jl
cmp
inc
cld
outs
les
jg
enter
nop
out
aad
add
jl
dec
sub
mov
sbb
pop
fnstsw
outs
xor
mov
test
aam
lds
aas
cli
aas
cmp
mov
adc
out
adc
and
jno
test
fwait
add
xchg
jo
in
fmul
push
xchg
and
gs
mov
xchg
iret
push
retf
mov
add
or
pop
in
xor
pusha
aam
or
lea
pop
mov
sub
sbb
pop
ins
cs
adc
gs
sbb
xchg
mov
and
dec
into
mov
(bad)
out
loope
lahf
jmp
sub
jmp
lods
jg
leave
jecxz
and
sti
xor
cmp
int3
mov
pop
pop
daa
add
loop
fs
jb
inc
repnz
rcr
movs
sbb
repnz
xchg
int
xlat
sbb
out
retf
pop
addr16
and
pop
daa
aam
lods
push
dec
ror
shr
or
or
jnp
add
adc
mov
imul
test
outs
mov
scas
inc
jns
out
(bad)
movs
int
adc
cld
sub
leave
shr
(bad)
call
sbb
sbb
mov
push
test
or
pop
cli
data16
js
sbb
daa
dec
jno
mov
idiv
imul
ja
mov
data16
or
addr16
bound
sub
and
jmp
adc
stc
shl
mov
cwde
mov
fld
mov
loope
cld
and
gs
push
push
sar
push
(bad)
jmp
out
ss
ret
icebp
add
or
test
call
test
push
pop
jmp
or
add
(bad)
jno
lds
stc
fsubr
into
lds
mov
xchg
shl
jl
sub
inc
cmp
cmps
pop
in
mov
test
hlt
jmp
adc
cs
stc
and
aas
dec
and
popa
jl
dec
popf
sub
mov
mov
inc
sbb
inc
daa
shr
push
ins
es
xchg
push
ficomp
lods
xchg
or
lods
popa
jge
inc
stc
adc
and
cld
add
mov
pop
mov
pop
les
jp
ficom
inc
scas
sbb
in
sar
jnp
outs
bound
test
aaa
push
xor
xor
in
xor
jmp
ds
call
dec
imul
add
(bad)
cmp
jle
es
in
fs
push
addr16
ret
(bad)
repz
xchg
retf
scas
fdivr
jg
sub
mov
dec
xchg
bound
pop
and
clc
sub
addr16
xor
or
or
sub
shl
movs
fld
xor
inc
mov
or
xor
dec
jecxz
xor
popa
enter
popa
and
loopne
mov
jecxz
movs
inc
call
(bad)
push
sbb
pop
mov
inc
shl
add
stos
cs
retf
xor
or
jl
bound
sub
cmc
pop
fs
dec
repz
xchg
mov
jmp
inc
cmovno
in
sbb
imul
das
dec
ret
bound
int
and
mov
jle
mov
or
stos
or
xor
pop
mov
clc
ss
mov
mov
cwde
cdq
loopne
cmp
jl
and
(bad)
int3
inc
gs
xchg
rol
retf
pop
popf
sbb
mov
inc
popf
and
add
cld
mov
dec
jne
xchg
sbb
dec
test
cmp
out
cmp
mov
jp
hlt
push
fs
enter
xchg
popa
cmp
xchg
in
clc
ins
mov
pop
test
nop
imul
ins
daa
movs
mov
jg
sbb
mov
loop
sub
jbe
mov
popf
dec
inc
adc
add
pusha
xchg
outs
mov
into
imul
jge
sar
out
dec
cmp
fnstcw
push
div
clc
data16
mov
pop
pop
in
into
enter
retf
(bad)
ds
pop
adc
sub
xor
inc
movs
sbb
xchg
or
xchg
xor
add
mov
test
(bad)
pop
imul
je
aas
movs
in
xor
(bad)
imul
adc
je
int
jne
dec
adc
(bad)
cmp
mov
les
xchg
cmp
sahf
mov
enter
mov
mov
pop
pop
fiadd
cs
push
mov
adc
arpl
and
sbb
movs
repz
jns
cdq
test
cmp
(bad)
push
or
adc
(bad)
loope
and
fdiv
mov
sub
fidivr
mov
mov
mov
cmp
enter
nop
mov
xchg
sub
(bad)
mov
jmp
mov
scas
mov
fdiv
mov
push
push
(bad)
bound
nop
push
es
jl
ret
cs
dec
jae
cld
btc
xchg
ins
mov
pop
ficomp
add
dec
jp
sub
or
xor
cmp
inc
imul
pop
(bad)
pop
xchg
push
ror
xor
leave
xchg
or
fs
jmp
and
sti
push
aam
fcom
in
cs
out
jno
(bad)
loope
mov
jecxz
ror
repz
dec
pop
xor
aaa
sub
test
fiadd
mov
std
mov
pop
sbb
push
iret
xor
xor
or
pushf
cmps
fcomp
shl
add
lahf
mov
mov
shl
test
xlat
mov
outs
out
cmc
cmp
push
jmp
fs
aaa
xor
or
sbb
xor
outs
fwait
jb
jae
in
sub
or
pop
and
mov
jb
sub
xchg
fcmovnu
dec
out
push
mov
jge
dec
xor
mov
xor
cmp
xchg
test
and
cmp
xor
sbb
in
outs
add
stos
or
(bad)
fiadd
mov
add
xchg
cdq
xchg
in
in
aas
scas
or
xchg
adc
adc
or
jp
std
dec
mov
stos
in
push
xchg
cdq
add
sub
aam
fidivr
mov
maxps
pop
xchg
mov
jmp
xchg
nop
push
cmp
ds
or
loop
xor
mov
stc
sub
movs
nop
fisub
push
ror
sbb
mov
dec
push
fbstp
enter
jecxz
fadd
push
pop
mov
push
cmps
leave
sbb
sti
mov
jmp
fcomp
sbb
inc
xor
xor
aam
add
fnstenv
jno
mov
outs
test
xchg
jg
and
in
dec
xchg
sub
fiadd
cmp
jb
dec
sub
iret
adc
push
push
in
imul
fucomip
mov
gs
inc
sar
jl
push
test
retf
sub
add
cs
test
or
stc
push
js
xchg
push
xor
sbb
and
cld
(bad)
into
fsub
imul
pop
cmp
(bad)
or
imul
pop
pop
sar
jecxz
pop
push
inc
push
fadd
(bad)
pop
jl
jo
call
fwait
jl
imul
outs
mov
add
pop
sbb
rol
cs
movs
(bad)
iret
mov
call
jl
dec
or
rol
cli
sub
enter
push
out
xor
inc
pop
mov
sahf
mov
jmp
xchg
adc
out
(bad)
sbb
mov
pop
dec
lahf
sub
aad
sbb
lods
add
push
jmp
xchg
jae
jns
push
or
mov
sti
add
xchg
xchg
mov
or
sub
dec
cdq
add
call
dec
and
sub
mov
test
mov
sub
xor
adc
dec
lahf
(bad)
enter
sub
push
jne
mov
sbb
xlat
push
pop
les
mov
jno
ret
outs
arpl
into
cmp
ja
rol
mov
fst
clc
fnstcw
xor
xchg
ins
and
jmp
push
push
inc
xor
fcomp
inc
xchg
sbb
ret
xchg
xchg
sub
fadd
xchg
push
push
fnstsw
fiadd
leave
sahf
fcmove
(bad)
scas
mov
lods
pop
mov
mov
dec
mov
push
in
loop
dec
hlt
loopne
jle
aam
enter
adc
outs
add
ins
push
and
cld
push
and
push
mov
sbb
mov
dec
mov
inc
inc
lds
mov
sub
(bad)
imul
ret
sar
loop
or
scas
mov
(bad)
inc
iret
push
xor
(bad)
sbb
fmul
popf
movs
fwait
jb
js
xchg
push
hlt
dec
lahf
not
scas
clc
inc
in
ret
add
out
ins
push
idiv
push
lods
(bad)
ja
add
xor
lahf
mov
movs
ret
jne
ret
xchg
fisub
jnp
xchg
xchg
enter
mov
data16
pop
cmp
loop
mov
call
shl
ja
inc
retf
push
lock
fistp
dec
mov
popf
stc
rcr
add
(bad)
push
add
jmp
mov
lahf
sub
mov
jno
xchg
hlt
xchg
pop
cmp
add
add
xchg
jne
loope
sub
dec
or
out
lods
xor
jmp
jmp
add
sti
aam
(bad)
pop
out
cdq
enter
push
jmp
sbb
xor
into
cmps
aad
cmps
or
cmp
(bad)
or
jle
test
jmp
in
adc
jp
push
cwde
ds
fmul
or
jmp
push
fimul
xchg
repnz
pop
daa
test
sub
test
adc
mov
enter
xchg
xchg
cmp
adc
lahf
cmc
ds
jne
sbb
mov
inc
cmp
scas
fsubrp
(bad)
das
sub
into
test
sti
adc
dec
push
(bad)
cmp
pop
mov
mov
call
pop
add
xor
pushf
dec
cmp
mov
cmps
jbe
aam
pop
pop
cmc
mov
enter
psrad
fist
iret
(bad)
sbb
fdiv
or
or
rcr
lock
xchg
mov
aaa
push
push
sub
xor
push
call
adc
pop
cmp
fsubp
inc
loopne
test
xchg
or
fimul
add
inc
lds
mov
push
pop
pop
call
jp
mov
int3
dec
pop
and
inc
pop
out
or
(bad)
push
xor
outs
mov
test
stos
push
mov
rol
test
add
dec
punpckhwd
std
int3
dec
fnstenv
aas
sub
jbe
or
ret
add
in
pop
mov
sbb
sub
nop
lods
jge
fiadd
mov
into
jmp
jbe
fidivr
pop
and
mov
push
shl
pop
adc
ret
jg
mov
in
aad
add
nop
add
mov
jmp
sub
call
and
pop
jmp
jne
push
push
sub
sti
mov
idiv
adc
scas
jno
jle
add
(bad)
cmc
pop
stos
cmps
or
sbb
lahf
inc
test
pushf
movnti
pop
jmp
cs
cmp
(bad)
out
jb
xor
cwde
loopne
cmps
retf
jo
hlt
mov
dec
adc
retf
mov
sbb
mov
push
pop
in
sti
(bad)
xor
ja
nop
mov
lods
jno
xor
mov
adc
xchg
sti
cmp
inc
jg
popa
aam
fs
sbb
aas
xor
jo
aas
call
mov
jl
test
aad
xlat
std
inc
xor
xor
and
sbb
jo
or
push
or
ret
jmp
aam
mov
pusha
sbb
xor
jle
test
not
sbb
jns
jno
cwde
ds
cld
cmc
xchg
ins
sbb
mov
repz
push
jbe
mov
sti
repnz
xor
repz
mov
push
jbe
fadd
jge
or
test
inc
pop
jne
rdpmc
loop
sub
test
ret
mov
popf
sbb
dec
adc
in
rol
mov
aad
inc
cli
mov
stos
lahf
clc
ss
xchg
movs
jg
sbb
jmp
lock
xor
or
pop
cmp
es
and
jge
gs
adc
sub
dec
iret
jb
fsubr
popa
fmul
cmps
iret
icebp
and
sbb
(bad)
pushf
xchg
out
xor
pop
pop
fcmovne
mov
jo
add
dec
mul
mov
call
mov
in
icebp
imul
or
xchg
cmovl
jg
retf
pop
ffree
fisttp
adc
add
inc
addr16
push
hlt
mov
jge
push
fisttp
test
bound
(bad)
mov
adc
das
clc
pop
add
push
sbb
outs
xlat
or
in
ror
ret
and
rep
dec
xchg
sbb
pushf
dec
mov
fldenv
imul
fbstp
pop
pop
and
ror
sub
out
scas
adc
and
iret
fist
ja
and
enter
cmp
push
enter
cmp
xor
div
mov
mov
add
push
iret
mov
je
mov
mov
jnp
xchg
dec
push
test
popa
sahf
or
fs
pop
add
cli
outs
retf
pop
repz
shr
arpl
add
imul
or
and
into
test
sub
mov
pop
in
cli
out
mov
sub
xor
xor
std
lods
mov
and
cmp
jle
pop
inc
push
in
fld
pop
sbb
mov
or
popa
test
cmps
pop
sub
mov
push
(bad)
jmp
pop
jne
repz
js
jae
adc
sbb
or
aad
into
mov
mov
inc
call
jmp
adc
adc
or
mov
js
adc
retf
popf
sbb
mov
push
call
xchg
cmps
popf
shr
cli
call
xor
sbb
xor
je
pop
cmps
std
fmul
xor
adc
add
or
loope
repnz
push
cmc
dec
lock
mov
jb
jge
pop
into
pop
xor
push
movs
add
nop
mov
jb
fistp
and
out
call
inc
mov
xor
cli
std
in
call
rcl
aad
dec
(bad)
or
ret
xor
int3
arpl
repnz
retf
in
mov
adc
or
js
dec
push
xor
add
scas
push
lahf
adc
test
arpl
push
pop
cmp
shl
stos
(bad)
xchg
and
(bad)
out
cs
push
test
cmp
xchg
lea
xor
adc
xchg
mov
fs
xchg
in
call
mov
bnd
push
pop
cmc
cmp
int
fidivr
rcr
pop
imul
mov
sbb
aad
repz
test
pop
or
xchg
mov
lods
cmc
mov
test
dec
pop
mov
neg
xchg
push
or
dec
and
mov
mov
aad
pop
call
jb
pop
sbb
pop
data16
xchg
dec
sub
fsubr
enter
into
jnp
mov
mov
mov
push
push
ins
(bad)
ret
aad
clc
popa
sub
pushf
add
push
add
adc
mov
(bad)
hlt
or
inc
clc
(bad)
sbb
push
xchg
mov
clflush
xchg
fwait
int
pop
mov
inc
push
mov
hlt
fisub
or
test
add
popa
mov
call
push
out
mov
daa
mov
fwait
or
shl
inc
and
rcl
mov
add
inc
shl
cli
cmps
int
adc
ret
es
push
sbb
xchg
push
in
loope
out
add
shl
movs
pop
lds
cmp
mov
ret
xchg
push
sar
add
xchg
jne
cmp
adc
fimul
jecxz
jmp
jmp
in
les
ret
jp
imul
jmp
repz
add
jb
fistp
push
xor
rcr
xlat
jmp
add
and
call
add
and
nop
mov
lahf
lods
enter
pop
jo
out
popa
test
mov
sbb
fwait
fwait
inc
add
mov
jmp
xlat
ret
adc
xchg
or
test
dec
out
push
jno
(bad)
in
lods
adc
xor
inc
cmps
ror
ror
pop
call
xlat
dec
aam
cmp
pop
icebp
xchg
jle
mov
mov
cli
jge
test
jne
cmp
pop
push
ja
push
jo
cmp
dec
lds
scas
sub
add
mov
vrsqrtss
rcr
jno
ins
movs
and
jns
jmp
in
movs
out
nop
in
loop
pop
dec
call
in
mov
call
and
jecxz
test
rcl
sbb
std
sub
(bad)
retf
jne
add
(bad)
push
inc
cmc
xor
xor
mov
jle
cmp
in
adc
out
movs
xor
stos
les
rcl
(bad)
mov
xchg
xor
sub
les
or
out
cmp
inc
adc
pop
ror
add
adc
int3
jp
adc
push
xchg
xor
inc
and
fwait
(bad)
sub
xchg
data16
cmc
fs
inc
push
jae
aad
push
jle
jno
dec
enter
jnp
dec
jno
lds
mov
push
push
push
inc
adc
push
repnz
(bad)
push
loopne
xchg
xlat
ja
jbe
push
repz
in
lds
cmp
(bad)
push
or
pop
daa
out
or
jp
imul
add
lods
sub
fs
lock
in
dec
ret
mov
inc
outs
iret
sub
loop
out
fsubrp
fcmovnbe
push
jbe
jmp
cmp
out
fwait
imul
add
fidiv
push
shl
xchg
pop
cmps
pop
scas
and
add
push
sbb
jp
in
(bad)
jb
pop
and
mov
sar
push
fs
sbb
add
scas
xor
mov
inc
fadd
fnstcw
mov
xchg
mov
imul
pushf
pop
ret
sar
int
or
sub
ss
pushf
in
sub
mov
mov
mov
jno
ins
in
stos
out
aaa
std
jo
out
xchg
mov
test
jmp
inc
and
sub
or
sub
in
fimul
pusha
fucomp
enter
pop
mov
add
jge
mov
push
add
daa
jl
mov
mov
popa
into
push
and
aas
bound
imul
icebp
ins
enter
xchg
call
jge
fdiv
fdiv
cs
cmc
outs
jae
and
fucom
push
xchg
out
mov
or
mov
mov
jae
sbb
inc
adc
pop
xchg
ss
jnp
dec
ja
cmc
mov
mov
popa
div
or
mov
jno
sbb
pop
cmps
push
(bad)
fs
mov
xor
push
aad
pop
pop
inc
mov
das
or
out
scas
imul
lea
ret
adc
jns
mov
in
inc
fistp
pop
add
cdq
test
ficomp
les
icebp
(bad)
cmp
dec
mov
aas
loopne
inc
mov
jo
inc
pop
xchg
sub
adc
stc
or
in
fiadd
fadd
add
retf
je
dec
hlt
repz
arpl
dec
add
jge
mov
fwait
inc
push
retf
push
mov
jno
xchg
ss
inc
and
mov
pop
pop
in
bound
fs
jb
loop
loopne
pop
cmp
pop
call
or
sbb
sub
popf
rcr
stc
add
rcl
cmps
daa
aam
enter
lea
xchg
push
loop
jmp
cmp
cmp
push
cwde
cmps
inc
btc
mov
scas
pushf
scas
lock
aad
inc
arpl
clc
jp
dec
mov
xor
(bad)
(bad)
imul
fsub
mov
mov
jbe
dec
call
(bad)
sbb
or
sub
push
ss
push
lahf
imul
enter
push
mov
outs
xchg
stc
push
idiv
mov
push
mov
push
cmp
xlat
cmp
jno
mov
push
call
fsubr
imul
fucom
or
retf
dec
dec
sbb
sub
jmp
mov
iret
int
push
pop
push
dec
mov
cmp
lods
mov
dec
jmp
or
clc
jp
and
sbb
push
shl
pop
(bad)
outs
fidiv
push
in
cmp
sub
mov
jmp
les
hlt
call
iret
pushf
in
or
mov
push
xchg
cmp
sub
imul
mov
inc
jmp
xor
pop
xchg
sbb
in
paddsb
jae
aam
adc
xchg
add
pusha
sub
add
ds
mov
push
or
sub
mov
mov
inc
int3
xor
fidivr
retf
push
pop
in
and
fsub
push
fcom
aad
ret
into
test
enter
movs
jns
outs
(bad)
sub
jmp
dec
icebp
dec
sbb
stc
sti
jne
cwde
or
jno
(bad)
dec
mov
int
fcmovnbe
or
dec
sub
repnz
cmp
and
sub
jb
jnp
push
adc
scas
push
pop
lahf
lea
ins
mov
jecxz
es
dec
in
adc
repnz
lds
inc
std
int
nop
sahf
mov
std
lock
scas
rol
pop
mov
push
inc
sub
hlt
mov
lds
push
popf
sbb
push
into
sbb
mov
mov
pop
mov
mov
fmul
jge
mov
gs
pop
sbb
dec
std
sub
jg
sbb
mov
jnp
std
mov
and
retf
enter
push
clc
lods
lods
xchg
ds
aam
(bad)
test
jmp
popf
ins
pushf
mov
cmps
mov
or
fnsave
out
and
out
mov
arpl
pop
mov
push
dec
popf
push
mov
gs
je
mov
jmp
clc
imul
jnp
jno
adc
push
data16
outs
and
or
sub
out
fisttp
and
aam
ror
jbe
jb
cld
les
jecxz
cmc
loopne
stos
adc
leave
stos
fs
lock
(bad)
int3
xor
and
in
and
cmp
cdq
jae
call
call
les
pop
xor
fwait
xor
push
inc
jae
out
cmps
out
jne
mov
ja
mov
xchg
outs
cmp
sub
imul
mov
dec
js
or
in
aas
dec
cmp
dec
and
xor
iret
jmp
xchg
adc
inc
hlt
aas
sbb
push
repnz
or
mov
(bad)
aas
pop
sbb
test
sbb
sub
mov
mul
cmp
in
or
iret
push
and
(bad)
mov
xor
pop
movs
dec
mov
or
and
cmp
sub
and
lock
mov
ja
adc
xor
dec
xchg
dec
pop
adc
sub
fidivr
sbb
dec
push
jae
mov
mov
ds
aad
es
adc
rcr
jmp
adc
popa
jnp
xor
hlt
sub
fadd
xchg
inc
or
mov
fbstp
in
mov
std
cmc
mov
sti
xchg
out
fld
adc
sti
ret
mov
mov
add
ficom
sub
add
aas
push
ds
(bad)
add
dec
jp
mov
fadd
(bad)
sti
mov
add
leave
fist
popa
xchg
cmp
fst
and
movs
aam
mov
dec
mov
fld
imul
dec
mov
(bad)
mov
fsubr
lahf
pusha
sbb
push
sub
cmps
jb
mov
mov
sahf
rol
or
mul
out
or
das
pusha
mov
repz
outs
push
push
and
retf
(bad)
mov
push
sub
stc
fbld
sti
sahf
not
lock
pop
jbe
mov
push
cmps
int3
jmp
mov
int3
out
pop
and
sub
push
inc
sbb
pop
fcom
(bad)
fstp
adc
sub
aas
and
nop
pop
out
mov
jbe
fcom
shl
inc
and
std
daa
dec
ins
out
nop
retf
mov
sahf
fdiv
loop
test
outs
xchg
inc
fisttp
rdmsr
bnd
xchg
or
ret
(bad)
pop
push
xor
mov
(bad)
fistp
ret
mov
andps
out
push
adc
xchg
sub
add
push
push
shl
jo
ret
pop
pop
nop
fisub
bound
xchg
mov
stc
mov
dec
add
lock
jl
cmc
mov
mov
sahf
mov
jge
dec
test
dec
nop
outs
pop
inc
ret
call
or
dec
stos
sub
and
shl
pop
mov
push
mov
jne
enter
outs
stc
(bad)
xchg
xor
xchg
fs
mov
lods
dec
jb
and
xchg
xor
sub
mov
mov
sub
dec
mov
mov
inc
xchg
fstp
push
and
shl
xor
add
adc
push
mov
jo
xor
jl
adc
ret
pop
add
xor
icebp
mov
div
jae
or
iret
hlt
push
shl
ret
and
jmp
sahf
inc
daa
xchg
ins
rcl
cmp
cld
outs
mov
pop
shr
lock
sbb
loopne
jae
xlat
mov
jno
mov
fxch
cli
shl
lea
cvtpi2ps
mov
stos
adc
sahf
(bad)
bnd
loope
fcomp
jecxz
test
ds
sub
cmp
pop
cmp
rcl
sub
retf
in
mov
cli
push
add
mov
stc
xchg
push
es
arpl
or
loop
dec
jg
dec
out
aas
mov
xchg
rol
ror
pop
push
cli
lods
sahf
in
(bad)
fadd
mov
(bad)
lock
std
xchg
add
repz
loopne
xor
loopne
or
xor
pop
sub
div
adc
jg
mov
add
leave
call
dec
jne
push
fiadd
std
mov
cmp
cli
es
loope
sti
js
mov
int3
loopne
out
es
xchg
dec
loopne
stos
or
test
mov
push
and
fs
adc
out
sbb
in
stc
test
leave
and
sbb
jle
adc
jmp
jno
iret
inc
mov
xchg
ins
xor
loop
movs
leavew
cdq
rcr
sub
rcr
cmp
clc
mov
shl
cs
sub
pop
jno
sbb
mov
repz
dec
aas
dec
add
push
ins
cs
adc
jp
mov
pusha
cdq
inc
ins
adc
jmp
jle
int3
inc
(bad)
fwait
js
inc
xchg
stos
cli
xor
or
daa
(bad)
loop
bound
aas
sbb
loope
dec
addr16
outs
pop
add
jno
loopne
repnz
bound
bnd
add
add
shr
test
loope
ins
xor
jp
pop
inc
inc
adc
fwait
inc
push
inc
hlt
adc
sbb
cs
int3
xchg
xor
(bad)
fiadd
xor
shl
nop
repz
or
hlt
push
sub
cld
(bad)
adc
dec
xchg
loope
and
xchg
adc
push
and
scas
adc
clc
lock
pop
enter
fisubr
cs
jecxz
(bad)
push
stos
bound
adc
stos
adc
and
mov
ins
lock
cs
xchg
sbb
add
jmp
jge
mov
jmp
mov
or
pusha
js
mov
or
mov
add
xchg
out
data16
out
ins
rol
fmul
inc
outs
gs
mov
sub
dec
xchg
fucom
lods
inc
loopne
dec
scas
ins
rcl
mov
and
dec
pop
inc
add
or
test
nop
mov
es
daa
dec
mov
inc
and
jb
inc
push
and
pop
call
test
inc
popa
mov
out
(bad)
and
addr16
imul
ja
xlat
(bad)
js
adc
(bad)
pop
lods
loopne
dec
pop
aas
test
mov
dec
jo
in
into
(bad)
gs
sar
dec
rcr
sbb
int
sbb
push
or
gs
pop
push
cmc
lds
cmc
xchg
call
push
jge
mov
popf
add
shl
push
sbb
mov
pop
ins
pop
ret
push
dec
les
fadd
dec
clc
mov
ror
out
or
inc
xchg
sahf
stc
jne
lahf
imul
dec
jge
sub
stos
push
pop
mov
scas
stc
bswap
jmp
mov
mul
and
cli
jg
mov
jae
cmp
adc
lods
push
sbb
xchg
dec
xchg
jnp
fwait
pushf
mov
push
xchg
adc
push
stc
bnd
vpmovsxbw
cmp
push
or
dec
or
and
add
mov
push
push
retf
dec
cmp
and
enter
jp
data16
js
popf
jo
fld
push
xchg
jns
dec
aam
cmp
test
(bad)
imul
lea
cld
repz
add
xchg
inc
mov
inc
mov
sbb
fs
or
pop
or
jl
mov
xchg
lods
jmp
push
jle
test
pop
adc
pop
fcmove
jmp
rcl
out
out
push
daa
lahf
sbb
or
push
out
fbld
pop
mov
lds
jae
retf
das
pusha
loopne
or
adc
xchg
aas
jge
and
pop
(bad)
(bad)
dec
loope
or
inc
test
sub
push
cmps
and
test
xchg
dec
popa
inc
ror
add
ror
cwde
mov
xor
push
sbb
dec
mov
in
adc
gs
add
mov
fidiv
and
xchg
jp
es
pop
add
and
jle
or
clc
cwde
stc
add
sar
sbb
inc
or
push
mov
xor
or
pushf
mov
push
push
mov
jg
bound
ficomp
jmp
in
or
leave
and
fdivr
imul
test
daa
call
into
cmps
pop
(bad)
add
bound
fistp
and
add
jle
adc
dec
enter
push
mov
call
sbb
pop
scas
sub
repz
pop
mov
and
push
rcr
mov
scas
or
je
je
nop
hlt
sub
dec
inc
pop
ja
adc
mov
shl
movs
xor
jo
sbb
xor
jb
or
sub
mov
pusha
xchg
fld1
mov
push
in
cmps
out
sub
das
lds
rcr
stc
dec
xlat
inc
pop
sti
lahf
pop
pop
mov
out
cli
into
pop
or
push
cmp
in
sub
iret
je
dec
js
fcomp
xchg
hlt
fwait
xor
stos
pushf
sbb
je
and
add
rol
xor
sbb
mov
or
icebp
mov
mul
pop
fwait
add
ja
cmp
leave
adc
fsubrp
add
int
add
push
aas
push
xor
shr
xor
das
pop
push
pusha
es
xchg
add
inc
das
out
push
push
aaa
hlt
jl
in
(bad)
rcr
neg
scas
jae
popa
push
lock
jns
(bad)
icebp
pop
cmp
cmp
ss
and
outs
and
xchg
cmc
stc
shl
(bad)
sub
xchg
enter
repz
daa
lahf
xchg
hlt
lock
loopne
stos
int
push
mov
inc
test
fldcw
cmp
pop
dec
and
jb
dec
lahf
xor
jge
cmp
adc
mov
lock
aad
fild
outs
cmp
hlt
stos
dec
test
mov
retf
ficom
loopne
cs
mov
in
dec
mov
cmp
and
mov
mov
fsubp
fistp
jae
fisttp
pop
inc
adc
out
or
adc
mov
mov
outs
push
mov
adc
dec
outs
ins
aas
test
dec
pop
std
test
test
mov
(bad)
into
into
out
mov
mov
pop
div
arpl
push
lea
mov
test
xlat
outs
daa
in
frstor
cmps
dec
add
mov
dec
cmp
add
sub
movs
ds
jp
pushf
adc
mov
fistp
cmps
jmp
sti
xchg
pusha
push
cmp
add
cmp
cmp
int
dec
popa
cld
int
dec
mov
and
sub
jle
mov
test
push
jmp
pusha
pop
mov
mov
add
sub
std
jmp
cmp
sbb
inc
mov
and
xchg
je
rcr
add
mov
(bad)
aad
fisubr
jns
(bad)
(bad)
loop
outs
dec
or
mov
mov
mov
add
retf
out
shl
push
mov
cmps
pop
add
jno
outs
in
inc
xchg
push
push
in
daa
lahf
sbb
rol
xchg
call
imul
jl
sub
adc
mov
fdivr
fwait
shl
push
sbb
imul
nop
inc
sbb
push
mov
cwde
inc
dec
(bad)
jnp
mov
call
xchg
pop
adc
stc
cmp
mov
xchg
dec
pop
and
aad
push
out
jne
ins
stc
nop
pop
cdq
mul
and
sub
mov
and
rcl
pop
imul
je
lahf
mov
in
or
jae
xchg
sub
dec
test
lods
xchg
scas
pop
jnp
mov
pop
add
and
add
cmp
pop
jns
adc
retf
test
stos
cmp
leave
sbb
imul
mov
stc
mov
or
pushf
lods
jmp
pop
or
je
adc
cmp
sub
cmp
or
jbe
in
mov
retf
int
daa
sub
test
imul
call
adc
imul
std
xchg
neg
mov
mov
mov
or
shl
mov
cmps
adc
leave
sahf
pop
aaa
fsubr
icebp
cwde
xor
es
sbb
or
ins
add
add
add
mov
es
adc
push
ficomp
mov
fisub
cmp
mov
loopne
rol
aam
adc
mov
xchg
push
add
jns
mov
xor
fadd
xor
fwait
stc
sub
or
add
iret
xor
cmc
sub
dec
lds
mov
pop
sbb
ret
dec
lock
xchg
lds
das
sbb
xchg
pop
add
inc
data16
(bad)
out
enter
es
lods
push
hlt
jnp
cmp
xchg
mov
popa
dec
inc
sub
xor
repnz
mov
mov
xor
adc
jnp
add
out
and
jmp
mov
test
inc
call
cmp
mov
mov
outs
ins
xchg
scas
pusha
cli
iret
xchg
or
add
jmp
cld
push
mov
cmps
adc
in
dec
push
push
jmp
jnp
int
stos
xchg
shr
pop
in
pop
popa
int
adc
popf
and
push
mov
sbb
pop
fstp
add
mov
cmp
pop
xchg
std
cmps
xor
call
aam
pop
repnz
mov
shl
dec
retf
out
dec
aam
cdq
in
cmp
mov
dec
xor
out
push
loopne
push
test
xchg
pop
push
jne
mov
and
fiadd
xchg
mov
not
mov
mov
mov
mov
cdq
gs
out
nop
fidiv
scas
ins
les
int
test
pop
and
mov
fcmovnb
inc
inc
cmp
cmps
mov
mov
(bad)
xor
xchg
(bad)
pop
inc
stos
and
fldenv
sub
call
mov
xchg
aas
cmc
sub
push
pop
fs
sub
clc
cmps
outs
sub
jecxz
sub
shl
cmp
sbb
sar
cmp
lahf
es
mov
dec
fisttp
mov
jmp
ins
cmp
add
dec
add
lods
in
inc
call
stos
dec
pop
retf
stos
popf
(bad)
pushf
(bad)
scas
add
mov
pop
sbb
test
daa
add
dec
dec
inc
cmp
mov
sub
fs
sbb
mov
in
jp
push
sub
push
and
mov
jno
js
adc
fs
xor
xchg
adc
mov
aaa
cld
aas
neg
jmp
inc
jl
mov
cmp
jb
scas
inc
jl
int
pop
inc
xchg
jns
(bad)
adc
cli
add
call
fs
pusha
call
adc
jae
push
or
retf
xchg
dec
dec
mov
xchg
cmp
dec
icebp
xchg
call
sbb
dec
or
jmp
cmp
push
mov
cdq
mov
iret
cmp
push
jecxz
xchg
leave
jne
dec
(bad)
sti
and
cmp
adc
jno
aad
out
movs
das
lahf
mov
fcmovbe
outs
retfw
out
(bad)
xlat
sbb
and
aad
dec
or
add
mov
sahf
addr16
jle
cmp
imul
jmp
adc
ficom
rol
jb
lock
int
or
mov
movs
adc
dec
sub
in
mov
dec
push
cmps
int3
retf
add
ret
sub
nop
adc
and
cli
fisubr
retf
scas
ins
and
ss
dec
pop
mov
mov
xchg
pusha
dec
(bad)
jl
add
fs
inc
jle
jbe
lea
lods
sub
dec
inc
adc
cli
push
int
sub
outs
out
push
inc
sbb
in
adc
ror
fwait
mov
inc
call
xchg
sbb
push
jp
mov
add
in
cmp
jmp
pop
inc
dec
ins
xor
loope
sbb
sub
iret
jg
mov
sbb
ror
mov
aad
pop
stos
ret
jle
aad
retf
cmps
xor
jge
sbb
loope
push
push
add
xchg
pop
xor
add
ins
dec
cmc
push
mov
pop
fwait
cmc
cmc
or
ret
add
jecxz
or
test
mov
dec
mov
push
add
ins
out
aam
mov
xor
jecxz
inc
dec
mov
or
sbb
push
fcomp
ins
push
ror
sbb
fcom
test
mov
jmp
out
sbb
lock
push
xchg
data16
outs
outs
std
leave
pop
cli
cld
fldenv
cmp
dec
es
stc
sahf
bound
mov
push
push
xor
test
and
ins
sbb
and
adc
mov
in
sbb
jl
jg
mov
sbb
sbb
and
punpckldq
xchg
pop
cmp
clc
mov
(bad)
fnsave
push
jmp
jne
sti
xor
dec
cmp
dec
xchg
lods
test
sub
retf
mov
sar
mov
test
mov
dec
dec
sbb
imul
pusha
repnz
add
out
inc
into
movs
rcr
popa
(bad)
adc
ss
or
out
pop
mov
xor
mov
lds
ss
cli
jmp
pushf
mov
aas
stc
ins
mov
inc
frstor
adc
mov
push
push
stc
movs
pop
pop
fnstcw
or
mov
jnp
shr
icebp
fldcw
repnz
jmp
ja
add
imul
mov
push
retf
ds
mov
imul
out
fiadd
(bad)
sbb
hlt
push
enter
imul
push
fstp
mov
jecxz
je
leave
add
cmc
ret
sar
stos
mov
mov
test
cdq
std
in
lahf
enter
pop
retf
lods
sbb
or
xor
and
cli
cmps
cmp
gs
(bad)
mov
clc
lahf
imul
test
gs
daa
add
pop
imul
iret
hlt
enter
mov
and
and
das
add
in
inc
mov
sub
shl
stos
fisub
out
sub
push
sbb
pop
mov
push
(bad)
pop
ins
adc
in
gs
ret
ret
jmp
mov
lods
popa
push
mov
jmp
sbb
cmp
jne
hlt
test
pop
add
icebp
out
popf
scas
iret
xor
xor
gs
pop
cmp
or
js
fstp
and
mov
ret
mov
mov
jmp
imul
sbb
sar
add
imul
sahf
dec
int3
add
pushf
inc
dec
lahf
scas
or
pop
adc
cdq
les
mov
jae
in
xchg
cmp
gs
jmp
and
stos
(bad)
push
stc
fwait
add
(bad)
das
dec
and
xchg
movs
pop
dec
aad
iret
ror
jnp
out
pop
(bad)
out
xor
inc
xchg
and
mov
icebp
movs
jp
mov
mov
inc
pop
jnp
cld
jmp
jae
sub
and
inc
cs
inc
shl
push
dec
dec
rcr
xor
adc
or
jg
add
xchg
lock
(bad)
mov
and
ss
test
aaa
sti
loop
dec
int3
xchg
dec
stc
stos
ja
inc
out
push
(bad)
(bad)
or
cmp
jnp
movs
stos
shl
stc
(bad)
jne
fisttp
jbe
adc
jmp
or
enter
sbb
cmp
mov
lods
inc
ret
mov
call
dec
mov
xor
push
pop
lahf
jb
push
sahf
lods
stos
shl
call
fyl2xp1
test
sub
fs
out
pop
jmp
in
add
xchg
xchg
mul
push
repnz
add
clc
shr
cdq
jle
sahf
(bad)
cmc
add
pop
add
sbb
test
test
out
inc
movs
in
mov
mov
or
dec
out
iret
sahf
add
push
jle
mov
inc
sbb
les
mov
sub
addr16
test
sti
inc
push
pop
loope
dec
or
and
ins
lock
mov
mov
cdq
in
std
popa
icebp
lock
jnp
(bad)
push
in
test
(bad)
pop
ja
lods
pop
mov
sub
push
out
mov
mov
cs
dec
inc
sub
push
nop
dec
iret
sub
mov
xor
(bad)
(bad)
inc
scas
call
cmp
imul
(bad)
add
inc
lods
and
mov
adc
ror
or
sahf
add
inc
test
mov
cdq
push
in
mov
adc
jns
sbb
and
jns
dec
inc
pop
cmp
or
(bad)
addr16
add
fs
dec
dec
or
mov
aad
mov
(bad)
mov
pop
int
pop
mov
xor
push
push
jp
inc
ins
and
ins
or
add
aaa
mov
pop
inc
jg
out
or
ja
lea
pop
cld
leave
(bad)
sar
jmp
retf
lahf
sti
adc
(bad)
push
mov
stos
mov
adc
cdq
adc
pop
dec
sbb
stos
into
xchg
add
dec
mov
mov
add
fidivr
adc
shl
push
mov
not
push
push
cli
lods
hlt
push
mov
inc
stos
inc
add
std
loop
mov
xor
add
retf
xor
or
leave
mov
nop
xchg
dec
jns
loope
test
addr16
test
mov
fstp
sbb
add
stc
icebp
js
loop
dec
xor
addr16
jmp
mov
push
push
std
and
in
outs
mov
data16
shr
mov
xor
pop
add
sbb
jne
nop
cmp
in
push
add
pop
std
inc
pop
push
ins
outs
ror
jmp
clc
mov
test
pushf
jnp
push
mov
xlat
js
arpl
mov
xchg
ja
ficomp
(bad)
and
mov
ret
nop
loop
ins
sbb
stos
inc
cs
xchg
sub
xor
fmul
addr16
adc
lods
inc
pop
jno
mov
call
jno
test
sub
push
ret
js
arpl
imul
std
dec
push
loopne
push
sub
inc
(bad)
mov
xchg
lds
aas
mov
fdivr
push
mov
and
inc
push
mov
dec
sub
test
or
arpl
or
jae
cmova
stc
mov
mov
dec
mov
mov
pop
add
or
out
mov
inc
pop
sub
test
pop
mov
mov
das
inc
jae
pop
and
cmp
rol
dec
inc
xchg
lahf
mov
bound
out
mov
or
push
mov
and
pop
jo
fsubp
bsr
xor
data16
mov
inc
lds
in
mov
js
ja
pushf
push
stos
mov
xor
dec
leave
stos
jb
pop
jp
pop
ds
or
icebp
lahf
jnp
pop
repnz
(bad)
pusha
out
xchg
inc
inc
inc
dec
or
repnz
test
dec
lods
cmp
xchg
in
mov
retf
jne
lds
sbb
bound
(bad)
xor
pushf
jo
adc
pop
push
rcr
je
shl
sbb
xor
(bad)
jl
out
xor
push
mov
cmc
lahf
shl
and
ins
mov
je
andnps
xor
xchg
sub
inc
mov
je
cmp
sbb
cli
fdiv
or
fstp
popf
adc
pop
cmc
cmp
into
sbb
pop
into
mov
bound
jg
gs
test
(bad)
pop
mov
(bad)
idiv
dec
jmp
out
movs
dec
cmps
xchg
repnz
addr16
jno
ror
mov
shr
sbb
in
mov
icebp
push
xchg
pop
or
pop
xchg
sub
gs
loopne
rcr
inc
movs
jns
jno
pusha
dec
ret
cs
mov
xchg
and
dec
cmp
mov
gs
xchg
push
cmp
sub
pusha
mov
push
ret
jecxz
sahf
push
icebp
fdivp
pop
mov
mov
int3
in
adc
pop
jne
ret
cmp
xchg
jl
in
mov
jb
pop
jl
clc
gs
xchg
jbe
dec
aas
mov
adc
push
cmps
call
push
push
lahf
xor
xchg
sub
test
ror
es
fidiv
int
mov
add
cmp
and
dec
jo
pop
jle
mov
inc
lahf
mov
ja
xchg
int
jb
sbb
test
hlt
cmps
in
(bad)
retf
cmps
cmp
retf
jg
or
mov
xchg
in
mov
scas
loop
push
mov
lahf
jecxz
inc
inc
xor
add
push
pop
fcmovu
test
sahf
mov
inc
ins
and
das
ret
xchg
pop
mov
jnp
in
push
cs
stc
mov
xor
leave
pop
popf
mov
xchg
popa
mov
or
dec
xchg
xor
xchg
push
cmp
retf
js
mov
ins
fsubr
in
add
or
popf
mov
mov
fiadd
data16
aam
(bad)
aad
xor
ret
in
pop
jge
pusha
inc
ins
xchg
fwait
outs
mov
pop
mov
stc
imul
dec
lods
int
jno
xchg
sub
imul
cmp
clc
push
js
bound
dec
jl
movs
pop
jmp
and
mov
aam
test
(bad)
arpl
not
jnp
mov
sub
mov
cmp
mov
arpl
xchg
imul
call
mov
or
hlt
add
in
mov
jmp
sub
inc
popa
jb
and
rol
mov
dec
cmps
fdiv
stos
stc
pop
(bad)
(bad)
mov
add
push
out
mov
movntdq
pop
movs
inc
loopne
jmp
xor
idiv
xor
loopne
add
in
mov
das
scas
mov
dec
xchg
scas
sbb
test
and
add
mov
push
pop
mov
mov
mov
sbb
add
repnz
or
mov
fxch
mov
sub
nop
fldcw
dec
dec
inc
adc
pop
in
mov
fsub
mov
call
push
mov
pushf
cdq
clc
push
fiadd
into
imul
inc
xchg
out
push
dec
pop
mov
mov
data16
je
mov
add
mov
outs
jg
jmp
stos
adc
(bad)
out
repz
mov
mov
sub
mov
pushf
and
imul
mov
push
inc
loope
punpcklbw
jecxz
xchg
cbw
adc
std
arpl
mov
test
cmps
mov
add
inc
sbb
out
xchg
stos
or
mov
popa
push
out
dec
adc
aaa
inc
dec
iret
mov
adc
in
push
(bad)
sar
in
cmp
pushf
je
mov
sub
adc
aam
mov
jmp
or
sub
and
push
xchg
in
dec
int
and
mov
sbb
or
jns
push
lds
arpl
bnd
lock
nop
clc
push
dec
mov
fisubr
(bad)
pop
fcmovb
sbb
sbb
or
movs
xor
xor
repz
loopne
mov
ss
test
sbb
mov
or
addr16
mov
mov
jne
jns
movs
fmul
pop
movs
cs
ds
shl
sbb
repnz
mov
jl
cmp
pop
jmp
inc
nop
rol
outs
into
enter
inc
or
test
pop
jg
push
test
cmp
loopne
repz
dec
jp
sub
outs
(bad)
into
and
mov
mov
pop
dec
sub
pop
push
jb
pop
mov
inc
mov
jnp
xlat
les
jo
push
sub
xor
cli
cmp
add
movs
cmp
push
and
pop
sub
mov
pop
push
adc
xchg
out
aad
(bad)
mov
add
jo
(bad)
movs
sub
xchg
sub
clc
in
inc
jp
dec
mov
retf
xchg
mov
in
mov
dec
cmp
inc
xor
mov
pop
out
in
popa
mov
outs
fbld
adc
pop
fadd
jmp
xor
and
ins
push
idiv
push
mov
pop
pop
loop
jmp
(bad)
or
lods
cmp
fwait
jmp
push
stos
test
fs
fdiv
frstor
xchg
adc
inc
icebp
in
fnsave
test
mov
jmp
push
add
scas
pop
test
pop
push
cmps
cmps
pop
dec
add
scas
pop
hlt
in
(bad)
(bad)
fcomip
mov
sti
outs
mov
(bad)
mov
xchg
mov
pop
movs
clc
mov
shl
or
xor
jb
mov
push
aad
sbb
push
(bad)
in
sub
xchg
xchg
js
xor
dec
dec
stos
(bad)
mov
cmp
stos
sahf
adc
pop
cmps
mov
mov
mov
or
jp
(bad)
movs
jecxz
or
xor
mov
popa
shl
sahf
mov
inc
jle
loope
mov
xor
sbb
sub
outs
or
jbe
jecxz
test
mov
lahf
leave
popf
dec
inc
adc
mov
mov
xchg
jns
add
inc
stos
shr
jne
test
out
lea
mov
pop
pop
scas
(bad)
push
and
in
in
mov
inc
sub
dec
push
dec
adc
inc
jnp
pop
out
xor
loope
clc
or
sahf
cmp
sbb
jne
lods
out
retf
jo
push
adc
fs
push
xchg
inc
mov
bnd
aas
ret
mov
call
repz
xor
cld
daa
(bad)
sti
ror
sbb
ficomp
stc
or
xor
mov
cmp
mov
rol
sar
enter
outs
xlat
adc
jne
out
mov
mov
cdq
cdq
or
das
inc
test
in
xor
xchg
xchg
fld
xlat
ins
mov
mov
sub
mov
in
neg
mov
mov
in
cmp
jbe
mov
daa
or
add
jb
pushf
retf
icebp
sar
ins
xor
mov
adc
and
test
jo
jae
mov
or
cmp
fninit
add
or
sub
xchg
xchg
cli
mov
aam
add
pop
add
es
imul
les
push
or
das
mov
imul
pmaddwd
cmp
pop
(bad)
cdq
lahf
adc
and
lock
jno
cld
pop
dec
ins
add
test
mov
push
int
xlat
adc
mov
std
jns
es
pusha
pusha
push
jmp
retf
xchg
or
jbe
lods
into
push
or
jb
push
in
pop
mov
jg
mov
inc
test
hlt
inc
loop
pop
test
aad
xlat
jnp
push
cld
fistp
imul
jb
fld
fstp
cmps
stos
cmp
es
adc
scas
pop
jl
sub
leave
push
inc
jle
cmps
lds
inc
dec
xchg
add
sub
test
adc
lock
out
sahf
hlt
or
call
fisub
out
pop
ret
cdq
sahf
pop
inc
xor
jle
jp
mov
xor
jg
inc
sub
fadd
sbb
jae
pop
or
dec
rcr
repz
jecxz
pop
test
xchg
ss
(bad)
icebp
cdq
lahf
rcr
cmp
mov
(bad)
or
das
xor
inc
adc
aaa
bound
enter
fidiv
inc
sub
xor
shr
outs
les
neg
test
xor
call
scas
pushf
pop
test
mul
push
lock
jl
(bad)
jns
es
loop
sbb
sbb
mov
inc
pop
xchg
push
jg
fild
xor
aaa
add
ja
push
dec
dec
into
loopne
fcmovb
sahf
inc
add
add
xchg
icebp
aam
retf
clc
sbb
rcl
cli
dec
xchg
sti
repz
aas
xchg
loopne
out
add
fwait
sbb
ins
cmp
sub
and
push
or
push
pusha
popa
hlt
fdiv
adc
jge
daa
fimul
repnz
test
dec
pop
call
jge
adc
mov
sub
bound
mov
leave
dec
sub
lods
loop
mov
cmp
addr16
mov
fnstsw
js
and
mov
dec
xchg
pop
adc
into
add
adc
sbb
jb
retf
xchg
stos
jp
leave
cdq
push
cmc
adc
ret
mov
fistp
ret
adc
push
cmps
push
cmp
sbb
out
fldcw
mov
out
mov
gs
fistp
add
imul
fbstp
mov
in
shl
frstor
inc
movs
lds
xchg
arpl
inc
jg
xor
popf
adc
inc
mov
pushf
retf
add
push
loop
mov
jle
xor
cli
adc
fld
jbe
push
xchg
pop
fs
dec
sbb
xchg
pushf
les
dec
jge
jbe
pop
mov
push
mov
rcl
push
jmp
ds
add
sub
aaa
dec
es
dec
shr
mov
or
and
or
pop
daa
mov
in
cmp
jl
arpl
cs
mov
popf
sub
std
push
jmp
inc
loope
addr16
addr16
push
jno
xchg
sub
mov
dec
xchg
seto
clc
sbb
data16
ret
outs
fs
xchg
adc
lods
call
retf
xor
xor
mov
movs
or
daa
push
cld
cmp
dec
mov
add
ds
dec
inc
push
fbld
mov
jne
cmp
mov
inc
jmp
sbb
imul
cwde
movs
clc
sahf
lea
push
push
add
jo
sahf
or
pop
sahf
loop
jns
fnstenv
fsubrp
loope
mov
lods
js
add
mov
ficomp
mov
xor
dec
outs
loope
pop
fisttp
mov
pop
xor
push
pop
arpl
mov
test
je
mov
ss
dec
call
inc
sub
dec
jns
addr16
and
lods
pop
repnz
add
and
fs
mov
or
push
and
jg
pop
repnz
data16
pop
jnp
call
add
pop
out
xchg
imul
add
dec
sbb
add
inc
xor
xchg
out
sbb
cmp
xor
jae
scas
shl
mov
jbe
jmp
mov
shl
inc
mov
jae
jp
movs
sub
repnz
jmp
push
mov
ror
cmps
lds
inc
icebp
mov
or
int
sub
fs
add
int3
into
div
ficom
ins
push
add
inc
js
addr16
xchg
mov
cld
mov
dec
xchg
jmp
lods
in
xor
repnz
fst
fadd
add
sub
ss
sub
sub
ficomp
cli
pop
cmp
out
shr
leave
daa
addps
mov
enter
sub
add
int3
nop
lahf
(bad)
out
inc
push
fstp
shl
fdiv
sub
fnsave
(bad)
ja
adc
or
movs
imul
loope
fist
mov
xor
fidivr
inc
dec
push
cmp
push
ins
cmp
(bad)
mov
cmc
and
repnz
cmps
jl
sub
fmul
pop
add
add
and
lock
scas
movs
popf
cmp
jmp
pop
fcom
jmp
ret
pop
push
sub
icebp
lods
scas
cmp
mov
scas
sbb
test
jae
sbb
sbb
sbb
sub
jbe
adc
jecxz
data16
jmp
je
movs
(bad)
and
sub
fisttp
cmps
sbb
xchg
scas
(bad)
fidiv
cli
push
or
(bad)
movs
dec
xchg
push
lock
sar
push
ss
mov
in
out
pop
and
inc
push
dec
retfw
imul
inc
cmp
sub
jnp
leave
cs
dec
test
repz
pusha
adc
jnp
cmps
inc
(bad)
ds
and
adc
push
and
call
inc
repz
fnstsw
cli
sbb
lea
pusha
retf
mov
mov
xlat
push
aam
and
repz
ins
sub
mov
pop
jmp
pop
(bad)
xchg
dec
jg
es
jl
les
lds
(bad)
enter
repz
unpckhps
jp
xchg
dec
jmp
cwde
ins
mov
push
movs
les
sbb
cmps
enterw
push
adc
in
cmp
xor
test
or
mov
sar
inc
push
adc
ficomp
(bad)
arpl
xchg
cmps
cdq
push
mov
dec
mov
mov
xchg
cmc
fnstcw
(bad)
and
out
shl
cmps
(bad)
(bad)
adc
mov
mov
push
sbb
mov
fisttp
sub
jecxz
dec
test
jbe
cli
mov
mov
cmps
cmps
pop
out
inc
cs
and
std
aam
jnp
jmp
dec
in
mov
jle
(bad)
pop
aaa
mov
dec
xchg
mov
bound
js
shl
mov
mov
cmp
jl
je
or
and
test
and
aam
push
pop
jne
jns
pushf
dec
or
sub
mov
(bad)
and
int3
fidiv
or
and
shl
inc
or
ror
or
inc
ss
add
sbb
or
data16
stos
and
add
xchg
mov
xchg
mov
mov
inc
inc
mov
sbb
inc
add
mov
out
and
fwait
(bad)
push
cmp
sar
fidiv
fsub
aas
out
dec
fsub
clc
cmp
jne
push
pop
xor
loope
in
(bad)
push
ins
xchg
cdq
dec
dec
stos
ret
pop
push
sti
sahf
adc
mov
ss
push
mov
fs
adc
retf
ins
sti
adc
js
cmp
add
addr16
add
cdq
mov
xchg
mov
cmp
std
lea
push
fwait
shl
in
mov
frstor
inc
dec
aaa
and
adc
inc
pop
int3
cld
jne
les
repnz
repnz
inc
mov
sete
ror
and
jp
xor
test
mov
pop
cmp
sahf
ins
add
out
cmp
jecxz
pop
pop
outs
fsub
xchg
pop
repnz
movs
pushf
xchg
inc
movs
scas
enter
push
cmps
add
push
(bad)
repz
xchg
je
and
dec
outs
cs
iret
jb
loop
cmp
(bad)
push
das
pushf
mov
lahf
mov
dec
sub
xor
pop
retf
push
jo
dec
and
pop
pop
mov
xor
cdq
cdq
nop
stos
out
mov
jge
inc
inc
push
adc
sar
mov
scas
out
aas
mov
loopne
and
push
and
imul
or
jl
mov
or
fidivr
fstp
sub
(bad)
jmp
fdivr
adc
icebp
add
sahf
(bad)
popa
in
push
in
aad
movs
sub
adc
mov
mov
ret
clc
lods
test
outs
movs
out
daa
sub
imul
push
cmps
push
and
xlat
sbb
add
xchg
mov
in
fstp
aaa
mov
adc
mov
aaa
shl
push
push
pop
and
mov
nop
scas
sub
inc
or
cmp
cld
cmp
push
pop
inc
out
sahf
xchg
out
lods
or
xlat
imul
xchg
out
icebp
jmp
je
add
mov
cmp
js
or
test
ror
popa
(bad)
mov
cmp
retf
cli
and
sbb
aaa
mov
outs
jae
in
aaa
gs
bound
test
lea
mov
pop
or
jae
add
or
mov
lds
loope
xchg
test
xchg
adc
nop
fimul
lods
pop
inc
mov
stos
xor
pusha
xadd
xchg
mov
clc
dec
mov
adc
cmp
pop
rcl
and
jg
and
pusha
dec
bound
arpl
add
xor
test
icebp
adc
shl
xchg
mov
in
fwait
jns
sbb
dec
push
cmp
call
jo
int
dec
mov
adc
xor
jl
int3
mov
push
popa
sbb
sbb
sub
fnstenv
and
popa
fcmovne
scas
or
xchg
and
push
inc
and
in
in
push
aaa
cmp
test
dec
aas
fbstp
mov
cmp
cmp
xchg
lds
lock
sbb
cmp
adc
imul
ror
push
aaa
pop
rol
lods
push
mov
mov
aad
xor
mov
mov
cmp
fwait
jecxz
mov
(bad)
mov
cmp
leave
pushf
adc
jae
aas
mov
xchg
mov
std
fs
loopne
jp
inc
push
pop
xchg
xor
dec
dec
xchg
and
aas
adc
cmp
jns
fld
loope
ret
inc
adc
cmp
dec
mov
scas
movs
nop
ret
add
jno
mov
mov
dec
movs
sbb
and
jecxz
ins
stos
sahf
xchg
ins
push
ret
xchg
iret
cwde
add
test
aad
xlat
test
pop
test
push
dec
push
popf
adc
(bad)
fisub
jecxz
ds
dec
loope
not
sti
nop
sbb
adc
mov
(bad)
idiv
or
mov
out
dec
sti
push
xchg
xchg
movs
jp
mov
fcomp
ret
imul
fist
or
cdq
mov
inc
inc
mov
sti
pop
push
jle
ins
jae
xchg
shl
sbb
inc
es
inc
xor
das
jnp
push
addr16
nop
addr16
jnp
mov
or
in
hlt
mov
jecxz
and
jnp
push
cmc
cmp
jae
inc
cmp
fwait
daa
sar
sub
mov
cmc
mov
pop
mov
cmp
test
or
shr
mov
shl
call
out
xlat
and
loopne
fs
rcl
push
aad
fild
je
pusha
mov
mov
sub
data16
iret
mov
inc
inc
pop
sub
and
neg
jecxz
fimul
test
ds
push
jl
xchg
mov
sbb
in
sbb
test
push
scas
addr16
ins
sub
jle
xchg
xchg
fwait
xchg
shl
scas
(bad)
sbb
mov
test
jmp
rol
xchg
sbb
inc
shr
hlt
cmps
lds
imul
sar
sub
and
mov
shr
lea
ret
and
loop
mov
(bad)
sub
mov
jecxz
jne
cdq
mov
cmp
fadd
jo
leave
mov
xchg
aad
or
pop
xchg
pop
icebp
(bad)
sar
mov
push
push
clc
xchg
inc
mov
les
in
sbb
sbb
dec
xlat
xor
cwde
cwde
cmc
and
test
pop
mov
push
shr
mov
out
stos
pop
lods
add
jp
int
int3
jp
push
inc
pop
push
lahf
jae
jecxz
or
scas
cmc
mov
fldenv
out
movs
pop
cmc
(bad)
mov
lods
cmps
stos
and
sub
cmp
and
mov
jae
mov
popa
dec
push
popf
adc
jne
jmp
add
jae
jecxz
retf
ins
add
inc
mov
pop
dec
dec
mov
dec
cdq
xchg
jl
ins
mov
sub
imul
add
pop
cwde
sbb
fwait
cmp
scas
dec
mul
inc
xchg
and
call
int3
mov
mov
push
(bad)
jmp
ss
pop
lods
(bad)
dec
data16
add
loope
mov
xchg
ret
dec
xor
jmp
push
jecxz
cmp
aaa
mov
movs
loop
xchg
xchg
sub
retf
and
leave
scas
jo
sub
xor
cmps
add
not
sbb
and
cmps
ins
adc
push
out
sbb
gs
in
inc
and
popf
mov
mov
add
xchg
dec
and
and
fstp
jl
sahf
bound
fwait
xchg
pop
sbb
stos
xchg
or
repz
inc
xor
loop
dec
popa
xchg
and
loop
(bad)
jle
push
sbb
pop
mov
xchg
jle
stos
lock
aam
adc
cwde
sbb
xchg
arpl
fnsave
mov
mov
inc
repz
inc
mov
xchg
idiv
mov
cwde
push
add
dec
clc
loop
or
loopne
mov
ret
dec
mov
push
mov
push
imul
sub
rcr
mov
xchg
or
or
stos
pop
cmp
inc
or
mov
ror
add
push
js
cmp
mov
adc
mov
add
test
inc
test
xchg
gs
xor
aam
test
retf
in
jp
fwait
pop
call
lock
jle
mov
mov
out
fwait
addr16
dec
mov
jae
leave
lods
iret
mov
xor
jecxz
and
je
fs
fs
loop
fcomp
sbb
hlt
gs
retf
jno
mov
cli
or
imul
inc
xor
sar
dec
fistp
push
dec
aas
dec
int3
daa
mov
and
push
push
push
out
sbb
jns
(bad)
push
sbb
scas
mov
pop
and
popa
cmps
mov
mov
push
pop
ja
pop
pop
inc
repnz
add
push
repnz
mov
mov
sbb
sub
pop
das
jecxz
ins
jp
jo
xchg
dec
xchg
lds
stos
clc
scas
mov
gs
bnd
mov
iret
push
std
ja
adc
(bad)
mov
jae
icebp
shr
push
cwde
je
add
sub
adc
pop
inc
les
and
sub
outs
push
pusha
ds
pop
sub
sub
loopne
(bad)
jmp
hlt
aam
jae
popa
jp
jb
xchg
cmp
repnz
mov
cmp
out
inc
rcl
or
dec
dec
clc
mov
mov
fwait
mov
pushf
clc
js
xchg
sar
popa
stos
jbe
fs
cmp
mov
out
push
adc
mov
ds
mov
(bad)
mov
lahf
data16
rol
pop
mov
ja
lods
jg
mov
adc
jno
add
(bad)
push
mov
or
out
mov
imul
mul
pop
pop
jmp
jmp
and
mov
cmc
sbb
jb
sbb
stc
cmp
cmp
cld
inc
adc
pop
jecxz
and
mov
push
and
mov
and
mov
mov
call
sbb
pop
jle
das
aaa
in
nop
gs
push
xor
pop
fucomi
and
mov
arpl
and
push
lds
cmp
mov
fnstenv
lock
pop
dec
xor
(bad)
out
jecxz
jbe
and
dec
mov
xchg
sbb
xchg
ins
stos
sbb
sbb
lods
test
mov
cdq
jnp
ffree
jbe
mov
add
or
dec
clc
xor
jge
sti
fisttp
adc
les
outs
movq
std
imul
jl
leave
dec
xor
aas
or
cmp
sub
daa
pop
mov
shl
fild
js
outs
push
inc
jo
(bad)
push
mov
push
movs
cmp
lea
out
mov
lock
and
(bad)
lods
stos
es
iret
sub
push
leave
cmp
push
jne
int
push
xchg
and
xor
jno
repnz
pop
mov
stos
(bad)
push
lods
cmp
lods
outs
push
xlat
mov
aaa
pop
outs
out
mov
movs
ret
jmp
ret
jecxz
jl
(bad)
xchg
aad
push
sub
push
dec
sub
nop
push
or
dec
retf
imul
jle
mov
pop
push
daa
nop
pushf
js
jne
in
fucom
pop
mov
mov
sbb
inc
js
fst
add
and
pop
pop
stos
test
mov
xchg
fnsave
ror
adc
movs
xchg
add
pusha
jp
shl
xor
mul
jmp
lods
fnstenv
push
mov
pop
imul
pusha
imul
outs
xchg
stc
arpl
cmc
fwait
leave
xchg
jmp
mov
ss
jns
rcl
xor
mov
movs
loop
dec
push
xchg
xor
inc
out
in
in
std
adc
mov
das
xchg
or
data16
sbb
and
jle
dec
sbb
clc
mov
dec
mov
rol
je
shl
sub
xlat
mov
sub
jp
nop
ds
sub
cdq
pop
stos
cmp
les
xchg
out
arpl
ds
stos
sub
shr
rcl
mov
fisub
imul
cmp
jg
cwde
rol
pusha
jp
jbe
hlt
or
jb
rcl
mov
mov
pop
ficom
call
lods
mov
arpl
sbb
and
pop
jl
imul
sub
pop
inc
dec
adc
jae
add
scas
stos
xchg
(bad)
xor
sub
pop
shl
adc
cmp
pop
stos
bnd
cwde
sub
sbb
fcmovu
or
cmp
mov
mov
std
test
mov
adc
data16
sub
and
sub
lds
or
ins
icebp
add
sub
mov
(bad)
sbb
loop
call
outs
push
lods
jg
mov
(bad)
mov
loope
cmp
pop
sti
(bad)
fs
cmp
int3
mov
mov
sub
adc
pop
test
jecxz
out
stc
or
or
push
dec
mov
dec
adc
or
test
inc
add
jne
xchg
xor
inc
ins
outs
mov
push
xchg
rol
mov
fistp
cmp
push
jge
arpl
add
mov
(bad)
sbb
xchg
adc
stos
imul
pop
aas
jmp
mov
outs
push
xchg
call
add
outs
pop
mov
xchg
ins
lods
push
cmp
cli
aad
and
adc
outs
inc
shr
les
popf
fstp
out
test
outs
sbb
mov
cmc
mov
inc
jno
sbb
vpunpcklbw
push
clc
scas
in
loop
dec
pop
retf
daa
sbb
and
jns
pop
sti
jae
test
stos
sub
lea
rcr
out
hlt
mul
aas
xchg
adc
cld
xchg
mov
push
dec
inc
pusha
mov
clc
sub
dec
push
data16
jl
test
dec
(bad)
push
pop
iret
push
push
xor
mov
dec
lahf
pop
imul
loope
in
push
push
sub
pop
hlt
pusha
dec
iret
lock
aad
mov
call
mov
js
adc
cmps
clc
ror
es
bswap
xchg
bound
(bad)
push
inc
ins
and
stc
xchg
loopne
dec
fist
pop
call
sbb
loope
fistp
int
mov
push
mov
push
xor
adc
mov
inc
push
stos
xor
out
outs
push
push
inc
adc
add
idiv
ins
stc
lods
scas
push
aaa
jae
push
movs
(bad)
in
fsubr
(bad)
adc
and
dec
mov
(bad)
mov
mov
shl
ret
dec
mov
ds
and
sbb
test
sub
mov
test
jae
hlt
jb
add
push
sbb
mov
test
repnz
fisub
adc
jle
iret
ficomp
loopne
stc
sbb
inc
loopne
(bad)
sti
push
or
gs
jnp
test
add
imul
test
cmp
mov
sub
jb
dec
push
jno
pushf
into
push
sbb
nop
sbb
adc
(bad)
xchg
inc
aad
stos
xlat
rol
mov
leave
push
cmp
shl
imul
and
mov
jbe
and
shr
mov
aaa
test
sbb
adc
cld
(bad)
retf
jmp
mov
jl
fsub
mov
add
jmp
push
stc
imul
test
dec
hlt
sahf
sbb
dec
sub
adc
jb
mov
fucomp
iret
das
mov
inc
cmp
jo
push
in
mov
test
pushf
mov
mov
out
loop
fmulp
gs
xchg
cli
jns
sbb
aad
rcr
enter
add
in
sbb
add
push
iret
mov
pushf
mov
adc
sub
(bad)
mov
fsubr
mov
pusha
mov
mov
sbb
dec
popa
mov
cmp
hlt
sahf
mov
pop
jns
sub
ins
push
lds
push
jg
mov
xchg
hlt
cmp
dec
out
mov
fcom
xchg
pop
imul
cld
inc
xchg
outs
push
jg
dec
in
sbb
push
push
mov
mov
sub
mov
adc
stos
pop
mov
call
jne
xor
mov
or
adc
cdq
mov
xor
and
pop
xchg
gs
push
test
repz
sbb
rcr
es
cld
jnp
xor
mov
mov
and
xor
dec
push
hlt
daa
repz
pop
inc
scas
adc
xlat
ss
add
sub
(bad)
das
aad
sbb
stc
mov
and
dec
adc
ret
popf
inc
xchg
and
fsubr
les
mov
jge
scas
xchg
jns
push
add
xchg
adc
inc
xor
inc
sbb
shr
mov
add
sbb
jle
imul
out
dec
cmp
push
iret
xchg
test
or
add
sbb
data16
push
push
rcl
dec
sbb
xor
stos
(bad)
arpl
mov
xchg
nop
mov
or
jbe
in
loopne
xor
push
out
cmp
out
mov
add
inc
pop
jo
rcr
add
jne
dec
xchg
sub
sti
and
add
sar
in
mov
mov
popa
ret
sar
mov
test
mul
in
lea
fisttp
xor
pop
ja
scas
std
int
call
imul
dec
addr16
or
cmps
xchg
mov
sub
std
pop
dec
xchg
add
and
sub
inc
aad
dec
adc
icebp
mov
loopne
retf
fwait
clc
xchg
jecxz
add
push
dec
daa
clc
data16
jl
add
push
mov
sbb
pop
popf
jge
cmp
iret
loop
push
adc
fst
mov
sti
mov
pop
or
das
scas
repz
jo
mov
cmps
cmp
aaa
scas
mov
data16
xlat
sbb
es
pop
call
dec
xor
push
fisubr
push
fwait
js
pop
jbe
(bad)
retf
push
inc
fxch
fiadd
ret
clc
lea
cmp
into
pop
add
loop
ret
dec
das
ret
mov
(bad)
bound
push
ds
mov
loop
int
dec
ja
movs
call
mov
ret
dec
and
ficomp
aaa
test
and
aad
push
and
sub
xor
fstp
inc
in
xchg
sub
setbe
fldcw
movs
push
sub
call
add
test
ins
adc
mov
fimul
inc
push
mov
in
mov
js
push
sar
xchg
mov
dec
pop
mov
sub
sbb
and
inc
add
fld
jmp
xchg
sub
xor
pushf
fucom
push
mov
in
and
nop
lods
or
outs
ds
inc
xor
adc
(bad)
xchg
xor
push
std
jmp
cmps
mov
push
mov
mov
or
xchg
sub
hlt
ins
nop
add
xchg
sub
fnstcw
test
cmp
aaa
mov
push
stos
(bad)
push
push
jge
popa
lods
enter
sbb
cmp
rep
sub
push
add
popa
not
retf
pushf
jnp
inc
fisttp
mov
add
mov
out
rcr
int
mov
sbb
imul
pop
mov
sbb
nop
mov
(bad)
mov
xchg
int3
jle
aaa
addr16
out
push
fmul
movs
inc
test
sbb
and
lea
mov
xor
jmp
rcl
mov
cld
sbb
cmp
movs
sbb
or
jmp
xchg
loop
xchg
call
push
retf
lock
test
lea
mov
rcl
mov
outs
mov
pop
adc
push
jne
out
(bad)
hlt
pop
sub
xor
popa
das
repnz
pop
inc
iret
adc
sbb
xchg
cmp
adc
test
sbb
imul
push
pop
dec
mov
inc
cmps
jno
xchg
addr16
sub
fbstp
dec
nop
or
xor
or
add
sub
xlat
inc
fst
jecxz
push
cmps
push
in
sub
stos
das
dec
(bad)
jle
lods
adc
or
scas
add
daa
add
lods
shl
mov
ins
dec
ds
retf
cdq
cmps
mov
pop
jl
inc
xor
repz
mov
add
jo
repnz
mov
std
ja
lahf
pop
in
jmp
sbb
pop
shl
mov
(bad)
mov
cli
test
adc
jmp
mov
ficom
js
outs
fisttp
jns
xor
movs
adc
sbb
(bad)
cmc
xlat
sbb
xor
and
adc
cli
out
and
ret
icebp
push
add
movs
mov
jmp
xchg
push
cmp
xchg
jge
inc
adc
outs
dec
sub
cli
cwde
aaa
or
(bad)
pop
movs
jns
aaa
pushf
and
popf
dec
stc
add
test
pop
loope
jg
jg
mov
cmp
nop
mov
loopne
cmp
fld
clc
push
jg
jne
mov
sti
rcr
xchg
or
stc
pusha
jmp
xor
or
push
aas
leave
ja
push
retf
loope
stc
mov
jne
cmc
add
scas
sbb
push
ins
jl
mov
pop
sub
add
test
ins
or
xchg
sub
push
loop
xchg
xchg
sbb
dec
stos
outs
mov
das
sar
stc
aaa
and
cli
mov
movs
xchg
adc
ins
lods
and
ret
pop
mov
push
sub
jns
sub
jbe
and
mov
into
push
mov
pop
adc
or
inc
and
outs
lahf
jae
cmp
and
ss
mov
sbb
das
or
sahf
pop
xchg
iret
mov
and
inc
nop
popa
sbb
pop
loope
addr16
dec
sar
fist
dec
jns
add
and
test
mov
jno
or
loope
mov
or
adc
mov
jmp
and
cmps
inc
ins
call
fcomp
pop
jno
fs
sbb
add
sbb
sti
out
xchg
mov
pop
mov
lds
jbe
fistp
and
mov
je
sbb
jge
adc
outs
mov
xchg
inc
dec
adc
es
adc
std
cmp
aas
bound
pop
dec
cmp
lods
scas
adc
repnz
jmp
stos
das
cmp
outs
rcl
inc
mov
mov
sub
xchg
sahf
sub
jmp
(bad)
cmp
mov
js
push
ins
mov
repnz
ss
in
mov
jns
fs
ret
and
dec
sar
ins
xchg
je
push
jnp
cli
ficomp
adc
push
aam
sti
cmp
ret
ss
popf
jno
cmp
add
jne
lahf
outs
inc
pop
dec
inc
leave
sar
mov
out
push
xor
mov
pop
pop
(bad)
mov
clc
xor
dec
pop
pop
inc
or
into
push
lea
pop
aad
pop
popf
sbb
aad
leave
or
nop
(bad)
sar
cmc
xchg
mov
aam
xchg
jmp
xchg
mov
fwait
mov
loope
sbb
mov
popf
cmp
jbe
lods
inc
fldcw
add
mov
sub
fld
fnstcw
dec
push
pushf
xor
(bad)
sbb
fxch
xor
xchg
sbb
dec
sbb
pop
mov
icebp
add
jmp
js
cmp
mov
shr
cmp
es
xchg
and
cmp
mov
xchg
test
fcmovbe
push
jno
aad
or
ret
mov
mov
in
sub
in
or
push
mov
pop
xor
inc
cmc
fsub
sbb
sub
movs
neg
nop
pop
call
movs
mov
xchg
cmps
ret
je
jg
fcmovnbe
(bad)
sbb
xchg
in
or
jl
or
(bad)
in
(bad)
fisubr
or
test
repz
sub
test
popf
cmp
(bad)
scas
imul
xor
scas
mov
das
lods
dec
mov
ror
inc
stc
not
imul
cmp
in
jge
repnz
mov
fstp
jns
ins
adc
fild
xchg
xchg
(bad)
iret
loope
pop
test
int3
sahf
sbb
xor
xor
mov
in
test
cs
ficom
daa
pop
lock
mov
fldcw
(bad)
loopne
push
push
xor
dec
jns
or
inc
enter
pop
fidiv
fistp
push
test
push
hlt
sbb
sub
ss
lods
and
pop
mov
dec
(bad)
adc
int
mov
xchg
lock
and
fistp
out
mov
ja
out
cmp
enter
jle
nop
sti
push
ins
adc
or
and
dec
stos
xchg
dec
and
and
xchg
cmp
pop
aad
jno
mov
out
stc
ror
in
cmp
sar
inc
int
push
xchg
xchg
scas
out
pop
int
daa
std
add
inc
das
adc
dec
stc
mov
mov
cmc
pop
jne
sub
jle
test
xchg
xor
cli
mov
loope
out
xchg
call
loopne
cwde
aam
rcl
push
xchg
dec
popf
scas
fidivr
hlt
jg
and
inc
inc
sbb
cs
dec
ins
pop
leave
retf
test
cld
(bad)
and
ins
and
je
fwait
mov
xor
leave
jp
stos
dec
test
test
fdiv
rcl
pushf
fcomp
pop
dec
fsubr
pop
lds
mov
ret
xchg
pop
mov
(bad)
bound
cdq
adc
jg
ficom
xor
mov
sub
call
xchg
push
cmp
inc
test
mov
addr16
sysexit
sbb
test
jns
cmp
dec
test
out
mov
pop
cmc
int
ds
xor
daa
jno
cdq
add
rcr
jns
mov
and
mov
push
stos
das
dec
push
mov
inc
scas
outs
stos
or
mov
push
mov
xchg
gs
adc
outs
test
inc
jae
bound
outs
imul
cmp
ja
add
jmp
pop
adc
dec
retf
int3
dec
imul
iret
fdivr
add
mov
(bad)
inc
loop
xstore-rng
cmps
inc
mov
sub
sub
sub
dec
cmp
mov
repnz
sub
unpckhps
jb
inc
pop
push
dec
fidiv
aaa
loope
mov
daa
jecxz
jecxz
xor
cli
outs
sbb
mov
mov
mov
mov
add
xchg
std
cmp
sbb
adc
ficom
push
sbb
out
or
ja
sub
into
aas
fs
adc
xchg
aaa
xor
ins
sahf
xchg
jae
ret
inc
loope
loop
out
sahf
pop
push
neg
jbe
dec
pop
sbb
xor
inc
mov
pop
cwde
out
pop
sub
test
ins
add
jae
(bad)
pop
push
add
cmps
xchg
cdq
dec
sbb
test
lods
or
push
mov
or
retf
enter
outs
push
rcl
sub
sar
in
cmps
add
and
cld
nop
jns
inc
popf
cs
out
pop
arpl
adc
jle
(bad)
jmp
iret
or
(bad)
loope
fdiv
mov
inc
fptan
mov
mov
dec
(bad)
scas
mov
push
mov
inc
gs
mov
add
pop
sar
pop
jecxz
jb
test
call
mov
push
and
adc
push
jbe
dec
xor
test
jg
adc
sub
arpl
jg
mov
sahf
and
mov
jp
fistp
mov
(bad)
popa
fwait
out
push
test
and
jb
push
sbb
push
mov
aam
(bad)
fwait
mov
and
pop
nop
jns
mov
push
loopne
pop
(bad)
mov
xor
ficom
(bad)
jp
adc
add
mov
inc
sbb
es
cmp
aad
mov
pop
ja
pop
sahf
cmp
fsub
js
rcr
(bad)
adc
pop
adc
jge
test
std
stos
cmps
call
rcr
inc
fistp
jp
(bad)
into
mov
mov
add
ror
push
call
adc
stos
mov
in
into
mov
loope
das
pop
scas
imul
mov
call
sub
push
add
lods
sbb
out
cmp
mul
imul
or
cld
div
jge
jb
dec
sbb
dec
popf
rol
push
in
iret
test
ret
es
les
jne
std
xlat
leave
mov
sub
mov
or
cli
bound
loop
push
xchg
pusha
push
sub
loope
stc
pop
rcr
ins
cmc
(bad)
fdivr
ror
mov
fimul
(bad)
fcomp
cmps
cmp
cmp
mov
das
stc
adc
stos
pop
or
and
repnz
sub
rcl
sub
mov
scas
adc
(bad)
shr
cli
je
clc
pop
jae
cwde
push
movs
or
sub
pop
xchg
outs
in
scas
dec
jmp
xor
movs
bound
js
xor
mov
sub
adc
xchg
movs
add
out
mov
aas
mov
iret
push
addr16
and
xchg
enter
retf
aad
mov
adc
shl
sub
and
(bad)
mov
push
aam
sub
in
push
in
and
arpl
or
out
(bad)
adc
(bad)
fs
xchg
fisub
loop
cmc
adc
jno
daa
sahf
popa
jge
dec
sbb
test
add
inc
nop
pop
or
outs
mov
mov
aad
cld
not
add
jno
xchg
and
adc
or
gs
pop
jbe
adc
xchg
mov
jne
jae
call
retf
push
add
sub
lods
icebp
ins
or
sbb
mov
sub
ss
dec
lock
adc
dec
mov
(bad)
and
mov
(bad)
sub
push
addr16
jno
jle
push
ret
aam
dec
xlat
mov
push
sbb
push
xchg
(bad)
lds
jmp
xor
push
test
or
sti
movs
cli
gs
sub
arpl
out
and
stos
pusha
dec
movs
mov
inc
push
aas
mov
mov
mov
test
movs
adc
shr
or
fist
rcr
jl
or
lahf
jge
call
imul
inc
sbb
sbb
or
sbb
lea
pop
(bad)
addr16
sbb
(bad)
js
cs
and
inc
and
inc
push
test
push
sbb
pop
jne
mov
ret
dec
dec
(bad)
scas
(bad)
out
outs
xor
dec
js
sub
arpl
push
mov
fcomip
scas
pop
sbb
xchg
xor
lock
and
jmp
shl
imul
stc
sahf
and
pop
jecxz
jnp
sbb
sbb
outs
clc
movnti
xchg
scas
jns
(bad)
out
mov
inc
add
or
mov
xor
mov
push
mov
stos
adc
sbb
in
mov
imul
dec
mov
add
mov
jl
or
push
fisubr
movs
mov
mov
ret
ss
or
mov
shl
ret
or
or
test
xchg
mov
xor
retf
rcl
je
stos
mov
and
int3
fmul
fsub
and
je
mov
push
jg
mov
jecxz
imul
fs
dec
or
test
out
shl
out
mov
stos
mov
pop
cdq
inc
test
mov
stc
cmp
jge
nop
std
pop
add
mov
fbld
adc
add
sti
test
mov
daa
push
xor
or
arpl
mov
movs
add
nop
iret
sar
mov
int
xchg
test
into
fsubr
fucom
js
push
and
std
aam
shl
pop
rcl
fimul
xor
out
add
xchg
and
je
in
xor
pop
pop
dec
jl
ss
mov
test
add
and
in
movs
dec
sub
out
fwait
arpl
inc
(bad)
(bad)
push
fwait
push
ret
jne
out
jmp
ss
sub
test
jno
loope
call
pop
xchg
cmp
sar
and
inc
fucomi
aam
(bad)
cmp
dec
mov
add
push
or
pushf
movs
pop
lock
pushf
mov
mov
ins
daa
mov
xor
cli
loop
cmp
push
cwde
mov
or
add
or
sub
mov
outs
shl
int
inc
xlat
and
xlat
lods
shl
das
movs
les
fdivr
xor
cmp
ret
addr16
je
cs
mov
push
fsub
mov
mov
jecxz
call
cld
shr
push
jno
xchg
dec
dec
pop
pop
xlat
jne
pusha
push
dec
pushf
mov
dec
test
mov
rcr
jns
mov
jo
pop
jl
sub
fisubr
(bad)
mov
icebp
xchg
mov
jl
jge
or
clc
mov
xor
inc
sub
sub
add
or
cwde
test
enter
retf
bound
icebp
pop
sbb
fld
rcr
dec
jne
xor
pop
add
cli
sub
mov
(bad)
add
jmp
adc
mov
inc
scas
ja
rcr
dec
mul
xchg
mov
push
lods
mov
clc
mov
or
mov
push
xlat
mov
dec
lods
push
jns
xor
xchg
mov
cmp
stos
cmp
push
pop
int
fs
or
mov
push
stc
dec
shl
mov
push
xor
pop
sub
iret
add
test
jbe
cwde
xor
aam
dec
mov
push
push
pop
int3
lods
mov
pmaddwd
add
mov
cmp
sti
popa
jmp
pop
imul
cmp
inc
mov
pop
dec
mov
test
mov
imul
mov
jecxz
outs
xchg
xchg
adc
rcl
dec
push
xchg
xchg
adc
pop
in
jns
jle
jns
cmp
xlat
lods
cmp
in
mov
mov
mov
pusha
stos
cwde
jb
sub
sub
outs
mov
mov
cmp
xchg
sti
mov
mov
mov
cmp
sbb
cmp
out
jle
inc
stos
pop
out
mov
xor
in
aad
test
pop
scas
inc
pop
push
pop
mov
mov
or
test
dec
add
fild
jns
inc
push
loope
stos
stc
je
je
xor
sbb
out
inc
fld
xor
imul
popa
pop
pop
xchg
shl
sti
rol
lds
test
mov
lock
gs
repz
aad
xchg
xchg
or
and
or
arpl
cmp
push
je
mov
(bad)
mov
mov
jecxz
test
jno
pop
xor
ja
mov
xchg
push
test
or
shr
cmp
xchg
sbb
pop
sub
imul
lds
sti
push
mov
sub
cmc
test
push
repz
or
fnsave
pop
pop
test
(bad)
pop
(bad)
leave
push
xchg
ret
fwait
sub
popa
imul
push
mov
(bad)
repnz
fcom
cli
push
xchg
xchg
test
jae
ins
push
dec
js
jl
imul
or
adc
and
xor
pop
jb
inc
stc
push
pop
shl
ja
cwde
(bad)
dec
xchg
jl
and
sub
js
add
xchg
mov
push
js
add
cmp
cs
ins
sbb
push
cld
mov
outs
mov
push
out
jp
inc
call
jno
mov
mov
xlat
or
sbb
cs
in
push
mov
cmps
push
test
dec
or
cdq
push
fmul
sub
sbb
jg
in
divps
imul
inc
nop
add
push
hlt
or
cmp
push
jecxz
fwait
lods
not
in
fcmovnu
sub
mov
xchg
(bad)
adc
cmp
addr16
out
inc
js
sbb
mov
and
outs
call
icebp
std
rol
dec
bound
out
loope
(bad)
or
or
loope
jo
push
in
pop
addr16
jae
sbb
dec
mov
lea
push
mov
loop
sbb
lea
xchg
fimul
inc
jmp
pop
or
test
push
push
cmp
dec
les
push
(bad)
out
inc
push
fistp
adc
sti
mov
sub
fucomp
test
jecxz
in
jmp
retf
aas
jbe
call
sbb
push
mov
ror
int3
xchg
add
ins
clc
fucomip
inc
sbb
int3
rcr
sub
outs
test
fbstp
add
add
fistp
mov
pushf
mov
mov
loope
lods
(bad)
loopne
pop
aam
hlt
xlat
mov
inc
stc
aas
mov
leave
imul
jle
xchg
pop
or
test
push
lahf
les
js
fisubr
dec
pop
push
bound
mov
(bad)
(bad)
fcom
dec
and
data16
mov
(bad)
xchg
xchg
xor
mov
icebp
fidiv
inc
cli
popa
push
ja
aaa
push
mov
in
stc
xor
jne
jae
ror
leave
scas
mov
pop
dec
or
pop
fsubp
inc
jg
hlt
pop
(bad)
inc
jge
loope
mov
and
pop
ret
sti
mov
push
ds
add
xchg
pop
xchg
movs
xor
push
out
dec
xchg
mov
dec
push
pop
cmp
fsub
scas
imul
sbb
(bad)
pop
jo
icebp
xor
mov
fisubr
jmp
fmul
sbb
fistp
jecxz
add
test
(bad)
shr
xor
mov
or
sahf
or
in
or
xchg
stos
(bad)
mov
cs
shl
xchg
mov
movs
cwde
or
add
cmc
neg
cmp
repnz
jbe
movs
dec
fiadd
jmp
pop
dec
push
lahf
inc
xchg
out
aas
shl
cmp
mov
add
or
cmp
hlt
mov
data16
jo
jae
pop
jb
lds
cmp
scas
imul
aas
mov
add
or
jnp
into
push
push
loop
and
mov
xchg
shl
stos
xchg
mov
xchg
(bad)
mov
es
bound
dec
xchg
pop
inc
call
stc
xchg
movs
in
sub
pop
iret
cmp
pop
(bad)
and
or
inc
js
lock
xchg
xor
xchg
adc
repnz
push
imul
(bad)
pop
lds
nop
mov
aas
xlat
mov
cmps
dec
xor
std
jae
mov
pop
adc
stc
mov
inc
dec
stc
push
imul
imul
xlat
mov
pop
or
call
(bad)
call
or
sbb
icebp
xchg
je
cmp
inc
push
lahf
push
inc
repnz
daa
jl
nop
add
hlt
aas
rol
add
push
sub
jae
mov
int
popf
mov
add
inc
fdivr
sbb
call
mov
aaa
shr
jmp
stos
mov
mov
sub
lods
aas
in
frstor
retf
pop
aad
xor
xchg
sbb
adc
mov
gs
cmp
xchg
xchg
bound
mov
add
cs
sbb
jmp
out
daa
sbb
dec
dec
sti
aas
push
fdivr
sub
and
xor
sti
in
out
fcmovnu
sub
(bad)
std
mov
add
jmp
cmps
cmp
fist
mov
nop
ds
adc
ins
stos
push
pop
sti
push
dec
(bad)
xchg
out
add
push
mov
xchg
mov
js
out
push
pop
and
adc
inc
jae
adc
cwde
mov
mov
arpl
mov
sub
lock
inc
loopne
mov
cmp
mov
stc
std
adc
inc
in
popf
dec
data16
fst
push
and
inc
dec
mov
icebp
loop
(bad)
out
ss
xor
sar
mov
xchg
mov
push
fsub
adc
outs
cmps
mov
push
xchg
inc
cmp
fisub
aaa
jns
mov
(bad)
in
addr16
xchg
dec
xchg
jge
and
(bad)
cli
hlt
cmovle
stc
loope
sbb
cmps
sbb
dec
out
bnd
mov
aad
aam
(bad)
pop
cmp
cmp
jg
sbb
movs
push
je
adc
in
pop
jl
or
and
jne
dec
out
or
test
inc
jb
cmp
mov
popa
in
xlat
(bad)
inc
es
sub
sar
xor
pushf
push
cdq
jne
rol
ret
stos
call
pop
inc
dec
pop
gs
(bad)
(bad)
and
mov
pop
jg
ds
pushf
leave
lea
jmp
clc
fst
jnp
xchg
push
jmp
mov
xchg
pop
jo
data16
pop
adc
jns
inc
pop
push
cmp
imul
cmp
push
retf
(bad)
or
mov
fistp
inc
fwait
or
ja
ret
aas
sahf
mov
loopne
add
dec
and
sbb
int
xlat
add
imul
(bad)
pop
popf
in
iret
test
(bad)
cmp
fwait
mov
mov
mov
das
push
push
lahf
adc
inc
pop
jecxz
lds
xchg
cs
sub
std
loop
and
dec
fist
sbb
cmp
inc
sbb
(bad)
sub
and
pop
(bad)
std
xchg
call
nop
jae
data16
sbb
ss
fcomp
sbb
cmp
mov
repnz
std
mov
std
xor
outs
out
loopne
pusha
sub
cld
cli
lds
push
push
ins
(bad)
mov
mul
stc
fidiv
jmp
test
(bad)
mov
jae
sti
dec
lods
movs
jne
cmps
inc
lahf
pop
inc
xor
or
out
aam
inc
(bad)
int3
cld
stc
ja
inc
adc
scas
(bad)
cmps
mov
in
leave
pop
mov
and
std
data16
sbb
inc
inc
mov
loopne
mov
ret
jbe
or
aam
push
pop
sub
ds
(bad)
mov
dec
stos
icebp
mov
clts
pop
lods
test
enter
cld
pop
pop
or
pushf
mov
inc
pop
fbstp
movs
imul
and
std
outs
pusha
pop
test
mov
dec
fwait
daa
pop
xchg
repnz
jmp
popa
mov
jl
cmp
inc
out
hlt
aas
and
mov
push
add
stc
fild
push
ins
push
jg
outs
gs
jmp
dec
jno
sub
loope
xor
rcr
popa
xchg
xchg
loopne
mov
cmps
xor
in
rol
push
jmp
fs
add
add
es
int
in
test
clc
lods
mov
movs
mov
inc
jae
aas
push
fs
in
js
cmc
sbb
call
daa
push
push
in
test
ins
mov
mov
jl
test
jns
imul
mov
adc
mov
pop
sti
sbb
mov
test
sbb
xchg
or
loopne
jecxz
mov
retf
shr
cmp
mov
out
cmc
and
jg
aaa
xor
dec
fisubr
call
je
mov
lods
fwait
test
xchg
mov
push
aam
xchg
mov
cli
loope
and
fnsave
push
sub
sub
mov
mov
dec
and
arpl
enter
fwait
enter
rcr
lods
cwde
test
je
shl
shld
je
fidiv
(bad)
dec
retf
lods
cli
je
mov
jo
out
mov
jge
jle
jmp
add
inc
xchg
adc
pusha
sub
push
(bad)
out
sub
mov
repz
jns
mov
mov
dec
push
mov
in
mov
adc
xchg
fwait
sub
jo
mov
push
(bad)
ds
arpl
rol
push
mov
inc
push
addr16
xlat
cmp
cmp
jmp
jns
les
jle
test
btr
shl
mov
cmp
stos
jge
adc
loop
pushf
test
sbb
out
jmp
aad
sub
push
cwde
loope
mov
iret
sbb
sub
add
outs
pop
test
aam
or
les
xchg
call
jl
movs
xchg
das
adc
and
data16
shl
push
mov
ret
mov
sbb
cs
xchg
int3
cmc
mov
pusha
sbb
les
push
pop
fstp
icebp
pop
or
(bad)
or
out
cmp
lods
ret
mov
xor
outs
mov
test
push
pop
or
rol
popf
and
dec
xchg
jecxz
dec
movs
jg
loopne
aas
movs
clc
ja
in
(bad)
and
enter
out
xor
mov
jns
push
and
ret
pop
pop
test
in
mov
test
ja
mov
pop
(bad)
sahf
jp
push
psrld
pop
mov
dec
adc
xor
dec
fsub
je
nop
pushf
adc
stc
dec
mov
jnp
sbb
add
call
imul
lahf
sbb
cwde
sub
push
add
lods
mov
jbe
mov
sahf
inc
jg
mov
hlt
xchg
sub
and
stos
sub
jmp
adc
test
pop
xchg
sub
sub
dec
inc
outs
dec
jg
sub
push
inc
dec
push
sti
pop
inc
cmp
sbb
push
enter
ja
loop
dec
xor
cdq
and
ins
stos
stc
in
add
cmps
sbb
jp
cmp
or
xlat
leave
push
(bad)
js
or
push
inc
pop
outs
sbb
cwde
push
dec
jno
(bad)
rcl
adc
lds
xchg
rcl
jo
dec
popa
mov
bound
fwait
and
adc
lods
push
(bad)
retf
clc
dec
push
and
addr16
call
pop
popa
mov
(bad)
inc
leave
mov
mov
mov
int
mov
sbb
imul
mov
mov
into
ins
push
movs
daa
pop
mov
xchg
push
mov
je
add
cmp
lock
jg
or
sub
pop
and
and
in
jo
movs
inc
(bad)
mov
outs
pop
loopne
aam
scas
(bad)
jnp
pop
cwde
mov
and
nop
inc
and
xchg
mov
push
lea
dec
(bad)
aas
sub
call
fwait
(bad)
jmp
xor
out
push
push
mov
and
xchg
test
rcr
pop
mov
inc
sub
ins
in
aam
dec
addr16
push
push
inc
sbb
clc
pop
xor
cmp
mov
stos
inc
push
in
sub
(bad)
jge
jmp
push
mov
pop
test
aad
and
mov
mov
cmp
sbb
dec
jl
repz
push
pop
outs
xchg
out
icebp
xor
popa
push
in
jmp
loope
cmp
scas
std
clc
je
loope
cmp
aad
in
lods
cld
xor
or
data16
movs
(bad)
loope
xor
mov
int3
sti
or
inc
dec
jbe
mov
mov
popa
aas
sub
(bad)
(bad)
xor
int
cmp
aaa
cmp
in
daa
cmps
cs
cmps
clc
repz
sbb
fwait
sub
aam
lds
xchg
inc
je
pop
aad
inc
xchg
mov
(bad)
fwait
pop
in
mov
adc
push
jno
push
(bad)
jmp
shl
pop
add
dec
pushf
push
mov
xor
pop
inc
dec
movs
fwait
data16
cmp
mov
or
ror
add
js
mov
jne
add
xchg
or
loope
dec
cdq
mov
jmp
movs
mov
call
dec
cld
xor
jnp
inc
jns
shl
mov
pop
imul
cmps
and
inc
inc
mov
sub
retf
out
outs
jno
adc
shr
push
push
ins
scas
mov
dec
xor
mov
icebp
cdq
and
adc
pop
out
sub
cmps
call
jl
imul
(bad)
and
cli
into
ins
aas
sub
nop
sbb
retf
dec
loope
add
xchg
pop
imul
ret
outs
js
sbb
pop
fild
stos
adc
sahf
push
inc
(bad)
jo
fld
clc
push
dec
mov
leave
sbb
xchg
pop
push
rcl
sub
add
or
rcr
jge
cmp
jecxz
lods
cli
dec
ss
and
nop
pusha
pusha
ficom
das
mov
repnz
loope
mov
lahf
frndint
lods
mov
inc
ja
add
or
or
(bad)
cmps
retf
(bad)
lods
sbb
pop
addr16
inc
cmp
fld
stos
push
cmp
jp
xchg
lods
xor
lock
into
(bad)
fcmove
pop
aaa
adc
push
push
jp
sub
add
mov
and
jb
jno
mov
lea
pusha
jb
dec
jno
nop
mov
icebp
bound
ins
stc
cmp
pop
jle
setae
int
outs
jmp
mov
jne
mov
jb
fnstsw
aam
lds
sbb
fs
arpl
add
fwait
movs
jne
mov
cmp
sbb
std
repnz
std
cmp
sbb
int3
ret
jne
int3
push
mov
pop
mov
xchg
repz
pop
jnp
push
mov
push
inc
adc
or
or
out
test
out
xor
xchg
nop
sbb
push
and
dec
xor
xchg
cwde
jne
in
inc
cmc
cmc
mov
popa
lods
xchg
add
or
mov
outs
mov
add
jo
(bad)
adc
mov
dec
sub
dec
xchg
cdq
jb
jnp
xchg
jne
rcl
mov
cld
mov
call
(bad)
rcl
frstor
ss
scas
pop
jo
arpl
ins
xor
push
jmp
es
or
xchg
jbe
nop
loop
addr16
mov
jo
and
add
lods
clc
aaa
dec
jmp
pusha
add
adc
push
js
sbb
nop
jne
retf
pop
stos
(bad)
or
inc
jbe
or
sti
push
sbb
jnp
mov
mov
addr16
inc
std
pop
cmp
or
rol
pop
jbe
clc
ret
retf
cmp
xchg
pushf
xchg
out
xor
rcr
mov
add
add
into
mov
push
jo
daa
daa
push
mov
mov
faddp
jns
(bad)
mov
imul
mov
fwait
mov
mov
ins
inc
inc
and
call
and
(bad)
loopne
adc
or
push
lahf
mov
les
call
push
dec
xor
jg
mov
rol
ja
in
je
cmp
add
add
pop
push
mov
xor
jns
fbstp
xchg
js
les
add
fstp
imul
lock
rol
push
push
bound
jle
repnz
xchg
push
int3
push
repz
mov
or
push
dec
movs
cld
hlt
jmp
pop
rcl
sub
mov
ss
add
pop
mov
shr
mov
gs
cmp
arpl
mov
not
enter
pop
inc
or
xlat
cmp
(bad)
sub
or
xor
cmp
fs
mov
repnz
icebp
jg
xchg
pop
int
xor
leave
add
pop
add
mov
in
aad
push
clc
dec
xchg
mov
mov
cmp
inc
retf
(bad)
pop
idiv
sub
cmps
shl
enter
xlat
(bad)
push
cmp
pop
pusha
popf
ret
test
fcomip
push
pop
loopne
dec
jo
push
out
push
cmp
jnp
and
cdq
fnsave
mov
(bad)
lds
cmp
pushf
dec
add
stos
and
and
fnsave
and
jge
ja
and
jnp
inc
leave
mov
jle
xor
sub
xor
pop
jno
pop
and
sub
retf
push
cmp
loopne
mov
jo
pop
sbb
dec
sti
mov
mul
loopne
jl
int3
dec
and
mov
add
pop
add
nop
adc
xor
or
aas
push
sub
inc
push
rcr
cmps
and
mov
cmc
xchg
push
pop
jnp
ins
pop
xor
pop
mov
(bad)
sti
push
mov
pop
popa
mul
jae
sbb
cmp
shl
xchg
or
(bad)
in
mov
pop
(bad)
xlat
xchg
lock
xchg
and
gs
sbb
xchg
and
jne
pop
das
fsubrp
(bad)
nop
movs
fwait
xchg
sub
jmp
dec
fistp
jo
ror
xor
and
xor
fs
mov
add
fild
cmp
retf
and
dec
xchg
out
dec
and
mov
and
loopne
(bad)
test
fwait
les
in
in
mov
fdiv
sbb
push
xchg
sub
dec
lds
and
(bad)
inc
(bad)
sbb
jg
repz
push
in
jns
bound
(bad)
out
movs
pop
cld
pop
and
loope
in
int3
inc
and
push
loopne
ret
cmps
dec
inc
xchg
(bad)
dec
sbb
xchg
sub
int3
mov
cwde
adc
push
movs
xor
das
jns
xchg
rol
data16
push
inc
cmps
call
xor
and
cmp
xchg
push
xor
push
outs
mov
mov
and
outs
cmps
xchg
lods
jle
sub
jle
mov
shl
jmp
dec
cdq
(bad)
mov
dec
(bad)
iret
add
push
cmp
ret
dec
clc
ss
rcr
(bad)
pop
push
mov
jmp
fst
pop
lahf
fs
and
sub
push
sub
mov
data16
pop
int
scas
xchg
push
out
jge
mov
adc
and
sub
mov
std
jns
sub
jbe
mov
pop
dec
in
fnstenv
popa
push
push
cdq
push
add
mov
sqrtps
int3
and
push
mov
popa
and
in
loop
jno
scas
xor
aam
aas
add
cmp
cmp
test
mov
push
jns
cwde
sbb
stos
push
popa
loope
and
push
mov
cmc
cmps
xchg
jp
add
inc
push
repnz
sar
loope
dec
mov
mov
ds
pop
and
inc
(bad)
jg
fcom
int3
ror
push
call
in
or
cmps
mov
aas
ja
cmc
jmp
mov
xchg
dec
and
and
jns
repnz
jmp
test
lods
and
jge
cmp
das
add
cdq
adc
rcr
xchg
les
dec
xor
cmp
jae
je
cs
mov
lds
and
ret
lock
xchg
or
fwait
inc
cdq
add
retf
mov
daa
push
cmp
cdq
push
add
rcl
inc
mov
inc
or
loop
inc
mul
mov
xchg
inc
repnz
inc
xor
lock
(bad)
xor
mov
push
dec
sub
and
popf
movs
jg
retf
jp
pop
xacquire
test
icebp
mov
adc
nop
ins
and
dec
add
mov
and
lahf
(bad)
adc
xchg
repnz
in
ja
(bad)
popf
add
dec
ret
add
lea
push
mov
cdq
pop
xlat
je
add
cmc
sbb
sar
scas
or
jg
xchg
push
mul
jmp
sub
sahf
add
stos
adc
stos
nop
cmp
dec
es
cmp
fsub
add
mov
inc
add
fimul
enter
fs
adc
pop
repz
movs
push
loopne
bound
sar
sbb
sbb
pushf
fbld
mov
stos
iret
loop
pop
ds
sub
pop
(bad)
out
pop
cmp
ret
repnz
xchg
inc
mov
not
loopne
xchg
xor
pop
jmp
mov
sbb
sub
cmp
dec
xor
popf
adc
leave
js
add
xor
fidiv
(bad)
mov
pushf
push
sbb
vpcmpgtw
es
imul
or
movs
mov
sub
push
cmp
sub
enter
mov
in
int
fld
addr16
jbe
xor
adc
movs
sbb
cli
sti
adc
add
dec
jmp
retf
out
or
mov
mul
push
push
mov
mov
and
call
lods
popa
or
ja
sub
retf
bnd
mov
sbb
xor
setge
push
sti
in
rcl
pop
xor
push
(bad)
mov
pop
mov
pop
or
xchg
nop
mov
jb
mov
test
daa
jb
xchg
test
test
fst
dec
out
ffree
gs
lods
arpl
dec
mov
inc
out
popa
push
fs
lock
jp
inc
sub
lock
aam
test
in
inc
call
mov
popf
add
jmp
dec
arpl
cli
cmp
xor
mov
in
pop
imul
imul
ror
loope
stos
inc
jb
out
pop
dec
ss
push
rcr
mov
fdiv
fistp
cmc
popf
mov
cmp
rol
gs
adc
xlat
cmp
pop
or
jae
icebp
cmp
add
add
(bad)
jmp
cli
out
movs
push
xchg
jns
sbb
stos
popa
movs
push
mov
ret
(bad)
dec
arpl
jecxz
ds
leave
dec
ins
dec
or
mov
and
mov
mov
ds
jae
in
loop
xor
and
test
arpl
xchg
cdq
or
ss
cmps
xlat
mov
jecxz
fcomip
repz
jmp
aas
pop
mov
mov
ins
adc
(bad)
call
movaps
push
ss
popa
js
inc
shl
adc
jmp
push
lods
(bad)
not
and
or
adc
sbb
xchg
or
mov
lds
sbb
scas
mov
jmp
push
fs
xchg
mov
ret
es
jmp
push
dec
sbb
nop
xchg
mov
xchg
jge
shl
jg
icebp
movs
push
dec
xchg
retf
popf
mov
imul
lahf
arpl
mov
mov
test
cld
data16
xchg
pop
jo
scas
int
js
sbb
jae
jmp
int
gs
stc
das
xor
dec
jge
fwait
mov
(bad)
push
sbb
retf
lods
jnp
pushf
mov
ret
lock
jle
dec
dec
sub
or
add
movs
scas
das
sbb
mov
aas
lods
popa
push
adc
leave
and
ror
sub
leave
fidiv
pop
(bad)
mov
xlat
pop
fcom
inc
(bad)
mov
sbb
ins
xchg
push
daa
rcl
push
inc
(bad)
sub
pop
mov
cmp
mov
mov
inc
daa
mov
push
dec
adc
into
leave
jo
jmp
loope
mov
int
in
fidiv
cmp
push
dec
in
sub
xchg
and
hlt
and
xor
test
lock
jecxz
loope
sar
in
cmp
inc
jno
push
pop
pop
lods
test
or
xor
or
lock
mov
pop
cs
leave
xor
jns
ret
cmp
arpl
xor
push
jg
mov
lods
or
lds
dec
xor
pop
inc
in
outs
jg
push
pushf
inc
(bad)
jb
cmp
mov
icebp
call
loope
adc
pop
outs
scas
inc
cmp
xor
cmp
into
and
mov
mov
imul
add
push
xor
jo
sub
cwde
outs
and
pop
fild
fwait
inc
dec
or
jo
push
lods
inc
or
shr
mov
mov
and
mov
push
pusha
mov
or
mov
xor
fdivrp
mov
icebp
out
jp
out
cs
enter
mov
cmps
scas
push
rol
pop
mov
jns
das
pop
pushf
cmp
add
aas
gs
adc
ret
movsx
sahf
fist
lods
out
dec
movs
aad
test
lock
jo
scas
pop
shl
cmp
inc
fdivr
xchg
mov
mov
aaa
jbe
add
or
lods
add
mov
add
int
or
xor
mov
inc
mov
mov
jp
fadd
cmps
(bad)
inc
push
cs
adc
(bad)
and
rol
inc
push
pop
repnz
jmp
fwait
bound
repnz
xor
in
or
sbb
in
sub
mov
pop
jl
mov
(bad)
scas
ins
adc
xchg
loop
fiadd
rcr
(bad)
fldenv
inc
mov
addr16
xchg
out
imul
dec
or
push
pop
js
push
jmp
js
mov
mov
leave
mov
sahf
ds
stos
sbb
add
xor
push
ficom
xchg
xchg
int3
stos
out
sbb
fdiv
jb
arpl
gs
inc
test
retf
sbb
pop
loope
pop
bound
add
inc
jnp
xchg
xlat
cdq
push
rcl
fdivrp
in
adc
ror
gs
xor
jle
movs
inc
cmp
mov
stos
mov
fdivr
call
xor
ror
cmp
mov
js
imul
mov
in
fstp
loope
add
sar
repz
pop
pslld
cmp
xor
in
cmp
or
sti
mov
xor
mov
xchg
pop
data16
mov
jnp
xor
repz
adc
jecxz
popf
mov
add
imul
inc
lods
in
shr
add
sub
dec
lods
or
pusha
repnz
fiadd
in
jnp
jo
loop
daa
dec
push
ja
mov
pop
adc
addr16
jl
jp
dec
jne
pop
cmp
sub
mov
test
(bad)
inc
inc
imul
ja
adc
cld
outs
mov
pop
les
das
test
call
clc
repz
jge
popa
add
or
into
(bad)
cli
fbld
iret
push
xchg
scas
popa
jne
adc
dec
push
call
ret
dec
(bad)
hlt
outs
inc
inc
jge
daa
mov
in
cmps
mov
jg
inc
or
mov
movs
fdiv
inc
rcr
xchg
mov
pop
adc
sub
stc
or
sub
jmp
repnz
xchg
jae
jmp
jmp
lock
sub
inc
inc
repz
xor
dec
aad
lahf
(bad)
retf
adc
bound
mov
rcl
push
loopne
pop
cmp
cmp
in
aaa
xchg
mov
aaa
xor
scas
cs
ret
into
dec
sbb
jae
jae
cmps
xor
dec
xor
movq
movs
mov
das
imul
push
mov
mov
lahf
lds
in
sahf
jg
loopne
adc
push
add
mov
cmps
(bad)
jmp
aas
pop
mov
cld
cmp
and
mov
test
xchg
and
test
jo
mov
cmp
mov
jmp
sub
inc
mul
push
stos
pop
ins
and
mov
dec
aad
(bad)
js
mov
dec
push
outs
in
add
in
add
xchg
cld
sahf
and
mov
hlt
push
inc
dec
in
mov
or
addr16
cmp
xchg
xchg
outs
ror
out
fimul
psubsb
pop
aaa
retf
mov
jl
(bad)
scas
sbb
pop
out
out
xor
push
nop
adc
mov
inc
mov
xchg
push
mov
jbe
mov
dec
iret
aaa
mov
cmp
mov
stos
sbb
push
adc
nop
addr16
cli
jno
fsub
cmp
adc
push
adc
cmc
lods
mov
pop
(bad)
hlt
mov
mov
xor
fild
(bad)
fprem
fstp
xor
sbb
mov
fst
adc
ror
outs
add
fwait
adc
inc
out
xchg
out
(bad)
fistp
fadd
test
aad
loope
add
add
sub
out
into
hlt
xlat
aad
inc
idiv
cmp
scas
int
adc
leave
sub
jnp
sbb
enter
mov
popf
jae
aas
pop
sbb
pop
les
jmp
mov
(bad)
stc
adc
sub
xor
jl
xchg
push
or
test
rcl
stos
inc
xor
sahf
adc
sar
inc
cmps
test
and
mov
xor
int3
arpl
sbb
into
nop
cwde
sahf
jl
pop
jg
or
add
cmp
jae
xchg
pushw
xor
sbb
xor
add
lahf
imul
inc
cmc
adc
imul
cmp
add
and
inc
inc
aad
jle
mov
in
shl
scas
(bad)
push
xor
out
dec
outs
jge
ins
(bad)
aaa
pop
push
rol
cmp
ss
push
cmp
adc
inc
inc
lods
xor
loop
shl
mov
add
add
ror
test
aam
daa
jbe
pop
aam
arpl
out
xor
daa
and
into
lds
jg
pop
rol
cmp
stos
inc
es
jo
psubq
dec
jle
push
jle
js
dec
inc
out
(bad)
arpl
popa
ins
addr16
rol
loopne
push
pop
jne
(bad)
xchg
mov
jp
movs
mov
retf
dec
loopne
jmp
icebp
push
cs
repz
push
repnz
fisttp
(bad)
sub
fwait
das
dec
mov
fptan
add
es
jo
std
xor
inc
jns
inc
test
rol
js
in
push
test
sar
adc
movs
mov
jge
or
cwde
xchg
repnz
dec
pop
adc
lds
scas
popf
add
xor
cwde
jmp
and
pop
mov
fimul
jno
sbb
enter
sahf
cmp
cmp
or
pop
fild
push
dec
aaa
and
jmp
xchg
iret
mov
or
jge
aaa
push
sub
and
test
mov
xchg
mov
jmp
inc
pop
push
bnd
jmp
cmp
sub
sar
jge
adc
ja
inc
dec
sti
arpl
inc
mov
daa
mov
pop
push
test
scas
loope
push
xlat
lock
mov
and
(bad)
sub
sbb
push
push
in
loopne
cmp
cs
out
mov
ss
cmp
jp
mov
loope
div
sub
mov
cli
dec
jge
(bad)
cs
pop
add
jae
fs
aas
test
sub
enter
(bad)
cmp
int
mov
into
push
in
xor
scas
add
jo
ds
push
sbb
or
outs
jecxz
pop
repz
cwde
mov
pop
jp
lds
inc
das
dec
pop
mov
std
lahf
cmp
js
call
adc
jge
push
(bad)
in
add
clc
xor
dec
mov
dec
in
into
pop
fcmovb
test
lea
cmp
jmp
or
push
in
outs
pop
sbb
jp
stc
and
dec
das
in
push
jns
ja
mov
outs
aam
add
cmps
sbb
sbb
dec
aas
sbb
jl
lock
and
inc
jecxz
cmovg
dec
push
movs
add
mov
push
loop
push
or
(bad)
(bad)
and
fsub
ss
dec
inc
inc
add
xchg
mov
mov
repz
aam
sbb
inc
imul
jno
lds
fcom
dec
int3
push
mov
jecxz
dec
lds
(bad)
adc
inc
loope
adc
push
stos
push
daa
jnp
xlat
out
into
pop
rcl
add
sar
jnp
or
into
int
jno
xor
and
adc
mov
jae
push
mov
jge
test
push
sbb
mov
shl
or
pop
mov
xchg
pop
pop
push
sub
cmp
mov
push
cmp
adc
fwait
popf
push
enter
pop
jmp
jecxz
(bad)
je
fidiv
xchg
out
mov
ins
jg
test
out
and
xor
pusha
jmp
jmp
aam
ins
jmp
jae
cdq
sub
pop
inc
xchg
gs
fmul
adc
pop
inc
push
lods
push
movs
or
(bad)
fsub
pop
cdq
jbe
in
bound
xor
bound
(bad)
aad
xchg
sub
sub
inc
sahf
push
inc
in
movs
mov
popf
iret
clc
sub
data16
fidiv
mov
inc
inc
sbb
pop
and
mov
mov
es
fdivr
outs
les
ret
mov
jmp
xor
ret
jp
pop
inc
bound
mov
mov
inc
aad
and
dec
mov
adc
cmps
add
std
je
pop
call
cld
sbb
sub
dec
mov
jl
xchg
mov
add
int3
js
bound
pop
shl
xchg
pop
push
enter
mov
pop
jae
jno
push
mov
lahf
imul
mov
shl
sub
inc
addr16
inc
jp
out
xchg
cmp
and
xchg
dec
test
or
bound
mov
mov
and
jp
inc
fdivr
mov
ins
and
mov
push
shl
mov
jne
inc
inc
dec
sub
test
std
mov
leave
xchg
call
xor
mov
mov
xor
fld1
(bad)
or
mov
adc
jg
jnp
push
aas
xchg
jle
xor
xor
rol
jne
xor
jbe
mov
inc
cmp
lods
arpl
aaa
leave
scas
out
mov
data16
add
adc
or
inc
xor
push
in
xchg
add
cdq
in
rsqrtps
imul
jg
setnp
mov
xor
inc
mov
out
jmp
push
xchg
push
dec
inc
cmp
inc
loop
jmp
cmpxchg8b
(bad)
int
popf
inc
add
xlat
jne
xor
sub
pop
je
int3
jbe
fisttp
pop
je
jo
push
fstp
and
cdq
sbb
out
ds
sti
cmp
and
dec
sar
(bad)
nop
xor
loopne
pop
push
in
rcr
xor
dec
movs
sbb
xchg
mov
and
inc
arpl
(bad)
cmc
and
fiadd
xchg
sub
sbb
test
lods
mov
jns
bound
out
mov
outs
(bad)
mov
sbb
pop
cli
sti
shr
xor
xor
rol
imul
cdq
es
xchg
push
jne
repnz
dec
dec
outs
cmp
scas
and
dec
retf
pop
stos
cmp
mov
frstor
xchg
ja
xor
std
addr16
dec
hlt
mov
outs
pusha
ins
jno
inc
mov
repz
pusha
cmps
cld
stc
int
cmc
jmp
or
xor
push
jns
push
push
cdq
mov
jl
push
fimul
(bad)
ror
dec
adc
jmp
sub
fcmove
clc
mov
je
and
mov
xchg
(bad)
pop
outs
int3
mov
cmp
or
push
jbe
loop
mov
ficom
fsub
clc
in
pop
xor
xchg
jne
jl
imul
mov
pop
shl
dec
in
or
ss
ja
mov
inc
xchg
fwait
in
rcl
mov
add
pop
pop
ja
lea
pop
in
les
cmp
test
(bad)
iret
xchg
push
dec
jl
(bad)
push
adc
outs
sbb
sub
jnp
sub
push
das
pushf
or
jle
call
jp
int3
xchg
inc
push
or
push
invd
loope
dec
push
loopne
retf
stos
push
dec
adc
xor
fcomp
jns
push
mov
cmp
inc
sahf
icebp
sub
and
gs
add
fistp
out
shl
ffreep
adc
cld
pop
sar
aad
jmp
jo
dec
xchg
repnz
sub
adc
loope
mov
xor
mov
or
cmp
in
cmp
imul
mov
sub
add
mov
dec
popa
cmps
fsubp
pop
lds
dec
adc
xor
xchg
adc
orps
or
test
jmp
sub
aas
adc
call
mov
out
imul
in
add
mov
inc
xor
div
xchg
pop
mov
jne
jae
sbb
hlt
push
pop
fist
out
push
mov
and
jl
or
push
xor
pop
pop
sbb
das
xchg
mov
adc
loop
call
in
push
jnp
inc
mov
retf
cwde
scas
and
jbe
daa
cmp
aaa
jmp
mov
call
repz
sbb
cmp
test
cmp
cld
jg
je
in
add
lods
mov
sbb
aam
movs
push
inc
ror
or
jno
shl
sbb
fimul
mov
daa
cmp
pop
test
shl
mov
push
mov
adc
mov
inc
push
retf
(bad)
xor
push
iret
sbb
xlat
mov
popa
or
dec
jne
aas
xor
xor
aad
ins
and
push
ror
out
cmp
jle
movs
stos
mov
cdq
cmp
in
arpl
or
out
mov
rol
sbb
pop
rep
shl
inc
xor
jmp
lahf
and
dec
out
mov
pop
out
sahf
pop
hlt
sbb
jp
pop
sbb
movs
sub
push
and
ds
stc
stos
fs
jbe
add
inc
jb
mov
mov
adc
sub
push
jb
push
push
pop
xchg
addr16
xchg
movs
pop
xlat
mov
cmps
push
test
mov
jnp
cmp
mov
leave
fnstsw
int
sub
cld
or
mov
push
push
ret
xchg
data16
int3
xor
inc
or
out
mov
jne
mov
cmp
cmp
jmp
pop
jbe
cmp
adc
in
jle
sub
dec
xchg
add
retf
push
mov
and
repnz
cmp
push
inc
mov
jns
xchg
nop
cmp
adc
fsubr
mov
cmp
call
popf
(bad)
jns
ins
pop
xlat
sahf
sahf
movs
cmps
fsubr
and
sbb
retf
fidivr
cmps
dec
pop
dec
mov
ret
ds
mov
push
sbb
add
mov
sub
mov
lock
push
xchg
xlat
leave
cdq
aad
mov
or
(bad)
jl
ret
inc
int3
adc
and
and
ja
xchg
mov
pop
push
lods
adc
movs
adc
mov
push
add
xor
enter
sub
ret
lea
test
pop
sub
mov
pop
inc
fild
and
jne
call
ficomp
mov
pop
sbb
pusha
add
jg
dec
and
int3
repnz
push
adc
or
and
add
fdivr
js
cdq
rcr
(bad)
mov
fwait
push
(bad)
cld
add
das
repnz
gs
pop
cmp
mov
inc
cmp
sub
outs
dec
xchg
xor
sub
sbb
jmp
retf
mov
ja
vandpd
push
mov
push
mov
xor
stos
(bad)
mov
stos
cld
fstp
jl
aaa
jae
aad
mov
sbb
push
cld
mov
movs
mov
pop
fiadd
and
les
jmp
mov
xchg
lahf
cmp
mov
xchg
nop
std
gs
js
mov
lahf
shr
enter
sbb
popa
cld
cmps
lahf
mov
pop
aaa
pop
jnp
repz
popf
mov
test
add
data16
mov
popa
mov
mov
aas
push
jnp
data16
cld
xchg
fwait
xchg
shl
adc
loope
in
mov
mov
push
outs
enter
jns
iret
xchg
(bad)
retf
aaa
or
dec
daa
call
(bad)
mov
mov
jg
mov
shl
stos
call
enter
rcl
(bad)
retf
adc
mov
stos
jg
hlt
shl
mov
ret
inc
stos
sbb
xor
mov
pop
int
pop
or
adc
icebp
je
test
das
sbb
inc
(bad)
and
cmp
pop
dec
lds
cmp
jmp
cmp
sub
mov
(bad)
mov
jg
dec
inc
lods
sbb
stos
jle
push
and
sub
xor
jl
and
xor
cmp
inc
cdq
pop
sbb
jmp
imul
in
je
jecxz
fxch
in
xchg
and
pop
add
js
ret
adc
popa
push
ret
cmp
and
fimul
ret
(bad)
jb
mov
xchg
jb
push
push
pop
int3
sub
inc
and
test
push
lds
je
xchg
jno
xlat
call
mov
loopne
xchg
and
push
pmaddwd
loope
out
jle
mov
ja
out
jge
idiv
mov
jns
call
cmp
(bad)
not
xchg
jo
mul
pop
push
dec
sbb
out
sbb
pop
(bad)
lods
sbb
adc
pop
and
jge
jns
adc
and
adc
jle
jmp
popa
mov
popa
xor
cmp
cmp
jmp
fs
push
sbb
push
stc
xor
shl
call
es
sbb
xor
loope
xchg
stos
enter
loope
jmp
xchg
xor
adc
ja
inc
pop
daa
sub
and
cmps
(bad)
cmps
test
sbb
cs
dec
in
mov
or
es
push
test
jmp
push
ror
xor
fimul
shl
push
ret
(bad)
xor
pop
jp
xor
xchg
imul
or
mov
clc
jb
pop
xor
cld
jp
or
enter
jno
fcomp
add
push
inc
push
push
sbb
adc
push
and
fistp
pop
jae
mov
test
jbe
jl
jno
mov
sbb
repz
add
jno
loope
data16
xlat
bound
jmp
push
jae
push
adc
inc
lahf
jae
(bad)
neg
dec
jecxz
popf
call
pop
rol
add
stc
ja
inc
(bad)
and
outs
add
add
pop
inc
or
push
test
or
ret
mov
dec
cmp
aam
push
movs
mov
mov
icebp
inc
sub
daa
xchg
mov
push
sbb
ficom
mov
fimul
das
mov
sbb
push
out
dec
push
fsub
pop
xor
test
adc
xchg
in
push
mov
out
movs
sub
enter
jg
imul
and
out
fild
dec
mov
jmp
sbb
dec
add
cmp
jg
aaa
push
lock
xor
add
xlat
push
dec
cmc
xor
dec
mov
out
pop
call
cmp
in
xchg
jb
mov
xor
les
jmp
cmps
fimul
lock
out
cmps
or
xchg
pusha
js
add
inc
dec
fwait
sub
xor
push
pushf
xchg
inc
ins
or
jo
ret
lahf
clc
mov
icebp
dec
mov
mov
inc
sbb
sub
xchg
ror
clc
xchg
(bad)
div
arpl
int3
mov
push
jns
mov
fsub
or
mov
test
ss
das
mov
in
icebp
adc
add
test
xchg
cdq
test
aaa
out
test
sub
jbe
popf
inc
push
daa
shl
xor
or
push
adc
xor
xchg
push
and
call
dec
test
in
data16
pop
mov
mov
mov
ret
je
push
inc
movs
mov
adc
(bad)
pop
pop
mov
cld
fisttp
fild
aaa
out
push
inc
xlat
sbb
xchg
movs
frstor
ds
fisttp
jl
push
rol
call
mov
mov
pop
xchg
fcomp
or
dec
call
add
ror
sbb
xchg
stos
cmp
stos
cli
enter
mov
in
xor
mov
jae
jno
xor
xchg
or
rcr
sub
mov
jns
out
sbb
into
mov
mov
inc
leave
aas
jl
fdivr
(bad)
cmp
mov
mov
stos
add
and
mov
mov
xchg
bound
retf
mov
sbb
(bad)
jae
outs
sbb
xor
or
inc
lds
or
xor
pusha
ficom
int3
adc
aam
mov
outs
repnz
sar
pop
xor
push
cmp
daa
fcom
inc
push
sub
cwde
(bad)
nop
mov
adc
or
mov
mov
push
int
mov
retf
in
inc
outs
or
adc
int3
cmp
mov
mov
loop
hlt
clc
and
push
or
xchg
imul
(bad)
cmp
push
call
inc
retf
fnsave
mov
inc
jge
mov
mov
mov
adc
xlat
add
mov
das
ror
dec
pop
mov
int3
outs
(bad)
ds
xor
fild
sub
sub
les
gs
or
ret
cmp
xor
sar
inc
ds
dec
retf
mov
ret
cmp
jg
jge
xor
inc
mov
jp
ins
and
inc
movs
cs
in
jmp
les
rcr
rcl
ret
lahf
jle
xor
int
arpl
cli
clc
cmp
cli
lock
cli
cmp
mov
sub
(bad)
(bad)
adc
ret
jo
mov
mov
xlat
int3
fs
push
or
dec
(bad)
mov
push
cmp
bound
dec
imul
fsub
ins
mov
pop
scas
pusha
fisttp
fs
in
mov
not
push
mov
ds
adc
mov
std
popa
fsubr
jbe
pushf
pop
imul
in
add
test
dec
cmp
cmps
xlat
jmp
jmp
fldl2e
repz
fucomip
cmp
jns
push
test
sbb
cmc
cmp
dec
adc
inc
outs
aas
inc
aad
sub
test
sar
je
jecxz
int
inc
into
and
scas
aad
xchg
cli
jecxz
adc
xlat
or
shl
stc
ins
jl
sti
cmps
add
jmp
or
add
call
jns
movs
popa
jecxz
jecxz
mov
xchg
jecxz
fnop
popf
cmp
push
sub
in
int
or
cmp
add
xchg
xchg
call
retf
xchg
jb
pop
jge
iret
pop
repnz
jbe
add
retf
in
(bad)
fmul
and
stos
mov
gs
push
popa
cmp
cld
push
mov
xchg
popa
cdq
cmp
ror
push
cmps
lds
loope
add
js
sub
cmc
push
add
pop
and
cmp
nop
or
jecxz
(bad)
push
std
sub
outs
lock
push
sub
ret
jmp
dec
cmp
cmp
xor
pop
mov
sub
aam
pop
aad
lds
inc
sub
or
xchg
mov
cmps
push
iret
xchg
into
mov
test
pushw
push
pusha
xchg
ret
loopne
test
adc
int
push
(bad)
mov
xlat
cmp
fwait
pop
ror
jge
out
cmc
sbb
push
loopne
test
shr
inc
rcr
jmp
call
pusha
or
aaa
add
stos
cmp
dec
movs
ror
add
mov
add
js
aas
pop
mov
test
push
xor
jl
jecxz
jb
sbb
aas
std
test
jmp
jno
and
mov
cld
sahf
iret
lds
scas
pop
jb
jb
mov
dec
mov
call
inc
data16
leave
push
sysret
and
mov
rcr
xlat
test
ficom
das
out
jo
xlat
push
jbe
and
mov
sbb
pop
dec
(bad)
sti
mov
add
cmc
inc
cmp
mov
aaa
imul
repnz
call
lahf
xchg
clc
sub
out
cmc
imul
dec
add
sub
les
push
mov
out
xchg
ins
xchg
outs
loop
hlt
imul
fld
punpckldq
aas
int3
inc
inc
xchg
jb
jle
push
pop
mov
lock
sub
cs
xchg
pop
inc
rcr
test
mov
or
stos
inc
dec
mov
or
jmp
je
inc
aaa
out
fwait
pop
xchg
and
imul
sti
cmp
jp
out
sub
jne
pop
xor
fcmovu
daa
fiadd
cdq
aaa
rol
data16
xchg
shr
out
and
push
and
adc
fnstsw
sahf
add
les
ja
mul
and
xchg
sbb
lock
fidiv
retf
outs
mov
adc
or
scas
lods
push
cmp
xchg
int3
lds
inc
fcmovnu
(bad)
sbb
enter
fmul
loopne
pop
push
adc
pop
push
ja
leave
sbb
retf
sar
push
cmp
inc
jbe
inc
pop
stos
mov
in
in
xchg
movs
fwait
inc
out
(bad)
and
mov
test
cs
pop
bound
jecxz
scas
test
std
pop
lods
daa
es
jns
pusha
xor
jg
fimul
gs
inc
pushf
in
mov
mov
xor
test
xchg
pop
pop
or
call
sahf
je
fs
add
cmp
pop
push
test
mov
inc
outs
mov
(bad)
stos
jle
jl
sbb
dec
sub
ins
and
xchg
pop
pop
mov
cmp
outs
adc
pop
imul
cmp
nop
sbb
clc
and
or
cmp
mov
mov
retf
mov
adc
mov
test
repz
loopne
mov
test
or
pushf
sbb
and
pop
das
pop
jno
(bad)
mov
sahf
inc
pusha
xchg
outs
aad
in
jg
inc
add
test
mov
dec
add
pusha
lea
jmp
fsubr
push
jae
les
and
jl
(bad)
dec
not
es
je
sbb
or
dec
popa
and
xchg
sbb
push
movs
(bad)
jbe
bound
mov
or
jecxz
cmps
std
pop
xchg
xor
and
in
push
out
fidiv
pusha
jno
movs
jp
cmp
jmp
cmp
sahf
mov
ret
jne
mov
and
cmp
sbb
pop
and
mov
(bad)
gs
push
in
repz
mov
call
ret
cmc
sbb
into
and
push
sbb
lahf
call
aas
(bad)
push
sar
xor
xlat
icebp
sub
sar
push
xor
loope
push
sbb
mov
pop
cmp
neg
sahf
cmc
and
addr16
fstp
stos
inc
xor
xchg
xchg
ins
call
fidiv
mov
jnp
push
jge
push
and
sub
pusha
dec
stc
or
push
pusha
jno
fld
and
xchg
xor
rcr
push
dec
add
cmp
test
and
dec
dec
push
adc
cmp
push
rol
lock
dec
jno
and
and
sbb
adc
push
retf
out
fistp
jno
mov
movs
fcom
dec
cld
test
popf
cmp
cmps
mov
fistp
repnz
mov
and
mov
out
jno
iret
loop
dec
or
test
inc
cmc
repnz
mov
or
inc
mov
je
pop
mov
cs
and
xchg
inc
pop
outs
cli
mov
fnstsw
xchg
inc
jmp
fidivr
outs
ror
and
data16
lahf
ds
in
jecxz
fwait
sub
pop
mov
hlt
jmp
stc
xor
fild
xor
in
movs
sbb
pop
mov
jle
sbb
fwait
add
sar
repnz
sub
retf
fmul
pop
imul
push
cmps
inc
mov
adc
add
push
imul
xchg
xlat
mov
or
push
loopne
in
push
lods
xchg
xlat
dec
mov
or
nop
fstp
movs
or
cmc
xchg
cmp
xor
pop
push
and
and
xor
pop
xchg
or
jmp
cmp
jecxz
mov
dec
sar
mov
in
push
fdivr
pop
cdq
cwde
or
push
inc
pop
add
dec
or
nop
xchg
and
jne
adc
in
sub
push
or
adc
and
mov
add
lahf
cdq
xor
inc
imul
cld
aam
pop
jge
mov
shr
xor
out
hlt
jnp
sub
out
add
mov
fistp
mov
inc
lds
scas
xchg
pop
jne
cmp
and
xchg
mov
push
jae
sub
or
add
push
dec
test
iret
mov
pop
mov
(bad)
sbb
popa
outs
pop
mov
jno
imul
ins
jo
xchg
push
lea
jp
int
aam
test
cmp
retf
cmps
cmp
jb
jae
repnz
jne
loope
cli
pop
imul
fistp
sahf
in
sbb
js
or
out
xchg
stos
das
idiv
and
xchg
pop
sub
ins
xchg
sub
fs
out
push
(bad)
cmp
jns
inc
pop
xchg
or
aad
pushf
cmps
data16
inc
sub
daa
das
mov
inc
jb
inc
int
cmc
add
call
gs
mov
or
es
retf
fstp
and
push
scas
adc
int3
cmp
cmc
out
test
shl
cmp
test
int
bound
push
xchg
sub
(bad)
xchg
dec
adc
xlat
push
addr16
lahf
mov
add
outs
mov
dec
jb
xor
mov
enter
inc
icebp
out
out
push
jne
cmp
sbb
aad
pusha
push
out
push
mov
ins
mov
ret
dec
call
in
repnz
daa
xor
adc
aaa
mov
pop
cmc
nop
sbb
icebp
push
rol
sti
or
sar
leave
xor
jecxz
jne
push
icebp
sub
push
(bad)
lock
cli
test
cmp
xchg
clc
(bad)
dec
mov
into
xor
cmc
jge
scas
jmp
fwait
push
and
imul
dec
popa
inc
mov
lods
sub
pop
loopne
popa
(bad)
clc
loopne
xlat
stc
push
dec
cs
sti
or
pop
mov
or
in
mov
(bad)
xchg
pmaxsw
out
add
test
test
pop
setp
add
or
push
jl
idiv
lahf
jbe
adc
jl
fprem
push
pop
xchg
ds
pop
test
(bad)
push
xchg
loopne
mov
fst
pop
mov
test
ficom
cmp
add
or
inc
dec
push
cwde
inc
sub
pop
dec
mov
adc
jmp
sub
ror
loopne
outs
xchg
ret
(bad)
inc
add
fucom
adc
in
fld
sub
int3
fst
push
mov
cmps
xchg
xchg
mov
sbb
pop
mov
cdq
dec
lods
sub
pop
(bad)
mov
dec
mov
xchg
in
ret
lahf
push
(bad)
ins
cmps
std
xor
dec
cmps
xor
sbb
out
fidiv
jne
leave
dec
xor
mov
pusha
lock
add
mov
add
sbb
movaps
cmp
lods
mov
mov
dec
pushf
jae
pop
test
pop
add
push
push
cli
popa
adc
ret
xchg
data16
call
adc
jmp
sbb
mov
mov
arpl
rcl
mov
cmp
(bad)
push
sub
jns
imul
call
adc
out
rol
dec
mul
push
adc
(bad)
fcomip
fldcw
sti
std
xchg
test
or
mov
push
cmp
out
mov
or
sub
push
test
sbb
and
fwait
inc
lea
popf
lahf
fmul
das
clc
cli
dec
inc
jge
sub
out
(bad)
repnz
pop
or
inc
(bad)
and
add
cld
pop
xchg
xchg
icebp
clc
or
daa
jmp
hlt
push
mov
in
(bad)
xchg
push
dec
cdq
imul
pop
ret
cmp
aad
daa
jp
jmp
dec
pusha
retf
add
scas
add
or
jo
sbb
push
lods
push
or
in
push
into
sub
inc
adc
sub
pop
rcl
dec
ror
or
repnz
loopne
pop
(bad)
ja
dec
push
out
and
inc
and
cmp
adc
int
xor
rol
imul
test
inc
ja
pushf
or
jno
stos
idiv
and
out
adc
mov
adc
aas
mov
dec
and
dec
sbb
pop
neg
xchg
stos
js
or
mov
shl
pushf
dec
or
xor
jmp
stc
add
int
ror
shl
xor
out
xchg
shl
or
pop
jno
xchg
dec
fimul
mov
add
iret
pop
shl
adc
icebp
cmp
push
loop
xor
outs
inc
xlat
xlat
or
ss
jl
jnp
(bad)
enter
push
xchg
mov
mov
cmps
jg
outs
jnp
pusha
test
inc
sar
mov
add
jge
lock
cmps
pusha
inc
data16
mov
pop
icebp
outs
xchg
xor
in
cmp
fdivr
jae
scas
jbe
and
pop
cmp
mov
retf
xchg
gs
or
mov
or
fcom
pop
and
mov
movs
mov
sub
in
jle
jmp
pcmpeqd
sahf
push
pop
xchg
scas
jno
xchg
mov
daa
mov
(bad)
test
jbe
jg
aaa
xchg
imul
jnp
pop
mov
stos
gs
icebp
les
mov
sub
retf
inc
test
pushf
push
cmps
test
dec
add
bound
mov
push
sbb
inc
cmp
test
repz
xchg
xor
cli
pop
or
and
jns
(bad)
adc
neg
out
aad
push
lds
adc
xchg
push
inc
divps
test
mov
cmp
cmps
mov
and
push
push
push
test
mov
fmul
(bad)
in
loope
stc
fisubr
push
lods
xchg
and
mov
mov
mov
dec
rcr
xor
pop
mov
rcr
pop
outs
test
adc
xlat
mov
or
mov
in
in
add
and
call
sbb
sti
(bad)
push
popa
int
aad
pop
arpl
fwait
xchg
hlt
cmps
push
xchg
sub
mov
push
add
inc
or
sbb
pop
jmp
in
data16
mov
arpl
fwait
dec
repz
xchg
cld
mov
test
icebp
(bad)
ficom
imul
dec
inc
jnp
sub
loopne
jge
sti
call
inc
cmp
xchg
sbb
shl
cmp
fdivr
sub
scas
repnz
repnz
std
mov
mov
or
ins
ins
fcmovne
mov
mov
stos
xor
rcl
mov
out
sar
xor
or
call
jmp
adc
in
adc
clc
mov
mov
rol
cmp
idiv
clc
and
repnz
push
test
outs
jmp
dec
jnp
xlat
mov
mov
in
ss
xlat
sbb
mov
mov
push
sar
into
jmp
cdq
jmp
cmps
sub
pop
je
lds
pop
std
xchg
cmc
outs
push
fwait
pop
fwait
cmps
mov
and
jbe
(bad)
in
mov
mov
or
push
addr16
push
pop
pop
scas
push
(bad)
pop
out
xchg
cmps
xchg
stos
cmps
iret
or
jnp
mov
jg
iret
inc
pop
in
xchg
and
dec
loope
(bad)
in
add
push
jmp
lods
lods
mov
push
aaa
pusha
sub
mov
mov
fcomp
pusha
fnstsw
cmps
mov
sbb
or
movs
leave
mov
in
ret
sbb
sbb
aam
jo
nop
imul
mov
adc
jge
cmps
push
cmps
cmp
cmps
iret
popa
xchg
lahf
es
(bad)
fnsetpm(287
or
(bad)
mov
(bad)
inc
add
int
cli
mov
add
lds
aas
xor
mov
icebp
lods
(bad)
(bad)
jp
in
jne
cmp
mov
fwait
repz
pushf
adc
jo
jae
dec
xchg
rcl
in
push
mov
cmc
or
aaa
cmp
test
push
repz
or
inc
shl
fsub
and
repnz
cld
push
dec
sar
lock
ftst
es
jbe
adc
imul
sbb
call
in
xchg
or
lock
aad
push
or
xor
pusha
xor
pop
aaa
scas
pop
ror
loope
lods
fs
adc
cli
jmp
ficom
test
repz
and
imul
dec
pop
ins
dec
push
push
add
sub
sbb
add
jp
test
lods
cmc
adc
mov
or
shl
mov
add
(bad)
jmp
ds
xor
or
mov
jno
xor
xor
popa
cmp
adc
and
dec
shr
push
mov
call
das
ret
sub
or
pop
test
ss
pop
lods
je
jmp
std
int
sub
xlat
dec
dec
mov
xor
sbb
shl
mov
aaa
add
and
add
imul
mov
mov
in
mov
xchg
mov
inc
sub
xor
js
push
in
push
test
mov
pop
and
imul
and
lods
idiv
shl
ret
push
enter
jmp
lea
pop
loopne
mov
sbb
fldenv
and
cmps
shr
cld
pop
adc
xchg
mov
push
popf
cmp
movaps
sar
xor
shl
cmp
fs
xor
add
popa
pushf
mov
jp
sar
mov
jo
repz
push
imul
mov
ds
and
jb
sar
and
jns
aad
adc
sub
adc
lock
mov
add
sbb
dec
repz
push
mov
xor
sub
push
mov
add
push
fnstcw
aad
sbb
sbb
add
and
push
addr16
iret
in
mov
stos
adc
jae
add
ret
sbb
mov
into
imul
data16
xor
inc
leave
hlt
inc
xchg
push
in
dec
jne
sub
jle
jmp
adc
cmp
xchg
mov
pop
aad
rcl
jnp
aaa
mov
jbe
xor
out
pop
cmp
cli
or
jbe
sub
push
retf
je
pop
pop
std
mov
add
fisttp
aam
add
test
mov
sar
pop
cmp
retf
out
je
fwait
pop
mov
xor
or
xchg
or
outs
mov
pop
cmp
addr16
jg
jbe
bound
and
int3
aam
int3
out
mov
ss
mov
loope
out
dec
pop
jb
mov
push
(bad)
sbb
push
cdq
sub
push
test
jno
rcl
adc
jae
xchg
fwait
shl
cwd
or
sbb
dec
pop
ja
push
aam
mov
mov
iret
sub
xchg
mov
fnstsw
jg
ja
bound
fcomp
das
mov
jge
and
outs
push
xor
inc
jno
sub
retf
pop
dec
and
call
out
cmp
or
mov
pushf
xchg
cwde
cmp
xor
adc
imul
xlat
fisttp
push
cmp
cli
jl
daa
inc
mov
mul
mov
jg
lds
out
pop
cmp
xchg
push
retf
inc
jl
cmp
add
dec
movs
jmp
or
push
pop
fcom
dec
movs
inc
dec
sbb
fisttp
fsub
pushf
(bad)
enter
cwde
loopne
bound
cdq
inc
jg
mov
test
loopne
pop
test
div
pusha
ins
shr
iret
les
shl
idiv
ror
cmp
xor
adc
pop
xchg
xlat
stos
add
pusha
ret
and
adc
sbb
ds
lds
(bad)
xor
mov
adc
test
fwait
gs
mov
inc
(bad)
jns
mov
je
retf
and
cmps
inc
adc
pushf
aaa
lea
push
sub
mov
push
ja
test
pop
dec
pop
adc
jbe
inc
adc
dec
and
add
sub
(bad)
jmp
pusha
xchg
add
mov
dec
adc
repnz
and
xor
adc
and
test
repz
xor
xchg
nop
pop
(bad)
push
jae
mov
xchg
dec
jne
cmp
dec
cmp
jge
rol
lds
inc
(bad)
dec
add
neg
cli
sbb
iret
cli
pusha
cmp
xor
imul
loopne
jg
sub
out
loope
and
outs
or
mov
pop
lock
mov
pop
lods
call
xor
das
daa
sub
scas
daa
pop
cdq
imul
cmps
jae
jl
jg
test
ficomp
int3
xor
pop
(bad)
leave
(bad)
test
test
sbb
or
imul
pushf
retf
xchg
inc
aad
dec
out
mov
repnz
or
lock
and
ins
loop
push
js
ins
mul
mov
sbb
popa
mov
jge
jbe
mov
(bad)
cmp
pop
enter
aas
repnz
cli
inc
xor
mov
in
inc
cld
sub
jge
adc
inc
cmps
pop
jl
inc
cmp
data16
pop
sub
ins
je
sbb
mov
mov
push
bound
xchg
push
push
in
inc
sub
xchg
out
mov
cmp
iret
stos
(bad)
clc
add
xchg
fs
gs
into
loopne
or
cmpps
ret
bound
cmp
xor
mov
pop
retf
and
mov
xchg
int3
push
sahf
sbb
retf
je
mov
and
outs
scas
icebp
adc
xchg
push
push
push
xchg
mov
rcr
leave
pop
inc
cmpxchg
out
fistp
inc
(bad)
into
(bad)
pop
ds
clc
push
inc
sbb
call
das
sahf
push
xchg
rcr
mov
not
pop
loopne
mov
jmp
push
push
enter
out
test
test
shl
out
sbb
sbb
movs
mov
or
ret
lock
sub
push
ret
addr16
sbb
sahf
ins
loope
pop
push
nop
aaa
xchg
cmp
mov
repnz
mov
pop
dec
(bad)
sub
je
aas
push
dec
mov
clc
daa
push
movs
les
gs
sbb
in
inc
fistp
mov
retf
mov
(bad)
cmp
push
mov
call
add
sub
ret
loopne
nop
lods
mov
les
sub
jnp
test
movs
ins
lods
cmp
pop
mov
enter
dec
stos
cmp
sar
pop
jo
cmps
scas
ja
ror
or
add
lods
pop
jmp
int3
jecxz
sub
xor
dec
xor
or
into
and
cmp
mov
push
test
fadd
mov
popf
xchg
mov
xchg
dec
dec
jmp
lods
sub
imul
cs
adc
(bad)
std
scas
ja
adc
adc
xchg
cmp
arpl
test
xchg
icebp
dec
ja
jmp
repz
jbe
cs
je
jbe
jg
(bad)
hlt
out
hlt
les
mov
lods
popf
pop
js
jb
inc
retf
add
gs
pop
iret
and
es
add
push
xchg
inc
pusha
sub
mov
mov
pop
mov
pop
pop
cmp
and
lods
adc
xchg
inc
jle
test
add
xor
dec
sub
imul
out
sub
iret
cmp
in
add
scas
mov
cdq
fisubr
aaa
xchg
cmp
gs
xor
push
and
dec
pop
adc
cmp
stos
adc
pop
mov
or
or
loop
ss
stos
jecxz
mov
and
pop
popf
fdecstp
cmc
imul
imul
xor
dec
sar
push
inc
push
jle
sub
jns
inc
xchg
cwde
movs
jo
push
cmp
fadd
gs
mov
(bad)
(bad)
cmp
jmp
add
cdq
movs
mov
adc
xchg
sub
and
ja
adc
fistp
dec
retf
shr
xchg
cmp
xchg
mov
es
movs
fcom
cld
xor
jbe
adc
or
dec
pusha
jle
ror
ins
lods
fucom
push
or
aad
cmps
out
xchg
adc
cmp
ret
xchg
call
ret
(bad)
mov
sbb
or
cdq
pop
or
aam
cmp
xchg
and
(bad)
xor
mov
xchg
push
stos
test
xchg
xor
scas
call
(bad)
mov
xor
push
ficomp
aad
or
stos
sbb
or
or
rcl
pusha
xchg
outs
repnz
xchg
push
xor
xchg
cmp
push
pusha
sub
xchg
sbb
mov
ffreep
xor
push
dec
cwde
push
jl
push
cdq
cs
(bad)
sbb
sbb
fs
mov
push
fcmovnbe
add
ins
scas
cmp
test
dec
in
std
fidivr
lea
cmp
push
out
mov
xor
fs
push
fstp
imul
sub
ror
pop
pop
pop
call
inc
lds
out
call
not
xchg
xor
scas
inc
push
test
arpl
mov
pop
repnz
loope
cwde
mov
mov
test
sub
sbb
aas
mov
xlat
std
mov
cwde
pop
shr
mov
popf
push
sar
adc
(bad)
sub
inc
inc
aas
cli
dec
jecxz
mov
sub
xchg
mov
or
sbb
mov
and
pop
mov
stos
scas
(bad)
aad
sub
hlt
cmp
lods
(bad)
lahf
mov
push
pop
or
mov
sub
mov
mov
adc
jae
dec
test
push
inc
xor
jp
jae
into
fsubr
push
stc
in
mov
jge
test
jge
and
icebp
addr16
fsubp
dec
and
inc
pushf
mov
ja
jmp
jne
out
mov
push
mov
lock
scas
xor
fnsave
xchg
adc
xchg
in
icebp
mov
xor
test
div
mov
lds
pop
sbb
fwait
adc
pop
mov
ror
dec
sbb
pop
pop
pinsrw
shl
jbe
cwde
jae
mov
imul
jg
sar
and
mov
jecxz
jne
loopne
lods
ja
inc
mov
pop
test
sub
dec
add
ins
and
mov
mov
mov
repnz
sub
fld
mov
jno
cmp
cs
loopne
inc
pop
xor
cld
arpl
ins
mov
push
sahf
ins
sub
cld
ficomp
push
push
add
xor
test
call
addr16
mov
mov
or
jne
(bad)
aad
out
scas
int3
rcpps
xor
jns
dec
sub
lods
sbb
aad
jp
out
cmp
sar
call
test
push
dec
inc
cli
sbb
cmps
lods
movs
push
inc
not
jmp
scas
arpl
not
add
mov
mov
cmp
mov
cmp
mov
test
dec
shl
dec
arpl
(bad)
jl
cmp
cmps
popa
lock
loop
in
pop
jp
test
sub
retf
and
cdq
sahf
pop
or
outs
ror
fxch
loop
sbb
push
or
lods
test
and
push
add
xor
into
cdq
add
jp
xchg
dec
adc
call
test
bound
sbb
shl
sub
stos
mov
(bad)
test
pop
or
cmp
ret
sub
cmp
call
repnz
inc
or
(bad)
pop
sbb
adc
popa
(bad)
rol
fistp
daa
pop
adc
test
cli
cwde
xor
jecxz
out
xchg
lahf
cmp
(bad)
in
test
(bad)
jg
in
adc
das
ror
lahf
add
cmc
ret
pop
push
popf
ret
fstp
mov
fsub
mov
lods
fs
sbb
cs
or
cmc
adc
enter
neg
sbb
ror
adc
in
repnz
in
jmp
sar
out
sub
push
int3
cmp
and
or
mov
jbe
sbb
and
fcmovne
mov
ror
jae
(bad)
call
in
leave
sbb
mov
ds
jle
mov
cs
out
push
iret
sub
xor
lahf
test
(bad)
and
mov
push
retf
int3
and
mov
imul
icebp
cwde
jmp
sub
and
inc
loope
sahf
lods
fild
push
nop
cmp
adc
cmp
std
je
loopne
in
cmp
xchg
mov
xchg
movups
sbb
out
pushf
xor
jp
ret
xchg
ficom
sub
jmp
nop
mov
push
ins
inc
pop
mov
xor
lea
loope
inc
adc
cld
pop
cld
inc
jno
jp
add
mov
lock
scas
imul
in
daa
cmp
inc
inc
fwait
jno
dec
repz
imul
(bad)
test
mov
(bad)
mov
sbb
cmps
adc
adc
or
jg
outs
leave
dec
cmps
shl
mov
adc
sti
pushf
cld
cli
retf
dec
mov
call
ficom
pop
add
cmc
xor
push
mov
add
cli
push
cdq
cs
ss
mov
shl
jmp
jmp
in
ins
inc
stc
mov
mov
mov
xor
pop
cmps
pushf
repz
xchg
out
aam
ja
rcr
ja
iret
dec
xchg
pop
jg
xchg
ins
fwait
call
mov
stos
xor
sbb
mov
jo
add
cmp
jl
mov
retf
in
ss
lea
ret
ror
and
cmp
cmp
xchg
fdiv
inc
push
and
sub
out
loop
xchg
repnz
add
arpl
out
dec
mov
stos
fidiv
ret
adc
mov
rdmsr
(bad)
scas
push
lock
xchg
inc
icebp
or
js
and
cs
sbb
and
mov
call
or
sub
mov
cmp
out
dec
cmps
jo
and
cmp
call
sti
pop
int3
movs
les
cmp
xchg
jnp
xchg
ret
dec
sbb
mov
mov
daa
out
gs
(bad)
jmp
push
jge
inc
push
ja
sub
imul
and
enter
test
mov
dec
gs
mov
ins
pop
test
iret
xor
gs
xor
jmp
jecxz
repnz
(bad)
aad
mov
scas
fldenv
sub
cs
out
inc
jae
pop
xor
gs
(bad)
hlt
sub
xchg
xchg
repnz
add
add
or
out
jmp
jbe
test
lock
sbb
adc
in
jmp
cwde
(bad)
lock
push
cmp
mov
jne
or
jb
and
shl
push
pop
add
outs
xchg
jnp
mov
xchg
add
lahf
retf
rcl
stos
inc
pop
sub
push
movs
ss
(bad)
sub
in
out
sbb
sti
push
retf
jb
nop
ror
repnz
sbb
inc
popa
cmp
jne
in
stos
push
mov
cs
cmps
retf
dec
inc
retf
mov
daa
rcl
cdq
outs
jbe
and
and
sub
jg
and
push
movs
pop
xchg
shr
or
push
inc
into
js
dec
adc
and
(bad)
adc
xchg
xchg
je
push
jmp
(bad)
add
je
adc
adc
xchg
ins
xchg
or
clc
and
pop
je
inc
push
ret
xor
outs
ror
lods
mov
cmps
lods
cmp
mov
ret
cmps
imul
ret
xor
pusha
test
(bad)
mov
fld
pop
(bad)
aaa
stc
jnp
les
mov
xchg
cmc
or
fdiv
push
fild
(bad)
out
jae
jmp
out
xor
sub
jmp
xor
jo
retf
test
pop
dec
and
in
adc
cmc
outs
add
je
dec
xor
ds
movs
sbb
stc
dec
cwde
push
fistp
lahf
out
mov
jecxz
out
or
and
inc
frndint
div
dec
(bad)
mov
dec
jl
jo
iret
jge
push
adc
inc
movs
ins
adc
sbb
mov
jl
dec
in
jo
fidivr
mov
jns
not
daa
cmc
xchg
outs
dec
and
push
adc
push
aad
push
xchg
dec
xchg
in
ins
fs
movs
stos
pop
mov
sub
adc
pop
(bad)
arpl
add
movs
mov
xor
into
xor
sbb
mul
loopne
clc
mov
pop
mov
sub
xor
mov
inc
xchg
cdq
jle
fld
(bad)
jp
out
jne
push
test
pop
mov
shr
push
jno
pop
mov
dec
push
pop
push
or
loope
xor
push
in
mov
mov
jecxz
and
int3
jle
outs
out
or
jge
jns
adc
push
dec
adc
iret
cmp
dec
cmc
cmp
ret
std
mov
jge
fs
add
call
and
or
add
jns
outs
in
add
jmp
pop
jb
push
je
jb
jl
mov
cmps
fdivr
aas
xor
fisub
(bad)
fcmovnu
xor
sub
sar
mov
xchg
sbb
in
push
lds
mov
cmp
push
cmp
adc
sbb
lea
mov
xchg
fistp
retf
push
mov
mov
or
push
aam
imul
shl
cld
push
ret
sub
mov
pop
pop
push
repnz
xor
daa
mov
ja
push
fidiv
and
cmp
and
(bad)
lea
rol
inc
mov
sbb
repz
repz
rol
fcomp
in
sub
iret
jnp
xchg
add
inc
or
mov
add
clc
fadd
sub
jno
adc
jle
daa
or
cmp
lock
and
hlt
sbb
inc
adc
and
lock
xchg
jl
shl
mov
mov
cmp
pop
fisttp
inc
mov
test
rol
retf
cwde
repnz
fsubr
mov
ret
sbb
push
and
adc
leave
ror
arpl
pushf
pop
mov
cmps
es
hlt
inc
outs
xchg
jb
test
xor
mov
in
sbb
shl
in
or
push
pushf
cld
test
mov
pop
div
bound
jns
push
or
call
push
loop
(bad)
loope
add
stos
fsubp
sub
mov
mov
cmp
xor
dec
jmp
add
inc
test
mov
ss
bnd
add
push
jge
sub
cmp
push
fld
pop
xor
inc
cmp
sub
test
outs
in
jecxz
jmp
jbe
mov
adc
pop
popf
enter
adc
xor
jns
movs
repz
hlt
pop
icebp
jno
jne
test
test
popf
inc
je
ss
mov
xchg
jp
and
mov
inc
push
sub
out
neg
push
xchg
inc
test
in
xchg
xor
in
mov
or
mov
retf
lds
xlat
(bad)
xchg
ins
and
xchg
jns
nop
add
pop
in
jecxz
leave
enter
out
fxch
add
sbb
sbb
xchg
scas
int
xchg
and
adc
cmps
pop
xchg
cmp
push
xchg
jb
or
adc
jae
jae
xor
xchg
sbb
push
add
mov
or
fcomp
popa
push
(bad)
movs
mov
scas
add
hlt
push
lea
add
adc
ja
jge
test
outs
push
mov
push
pop
mov
add
scas
call
mov
inc
add
test
pop
sub
sbb
add
dec
sbb
or
mov
sahf
out
pop
mov
xchg
sbb
stos
pop
jb
inc
in
adc
inc
popf
lods
stos
out
std
mov
add
mov
inc
cli
test
aaa
call
add
ins
sbb
icebp
test
push
rol
mov
in
push
retf
into
push
xor
fadd
cmps
fisub
fidiv
jmp
mov
inc
ret
jno
adc
mov
jae
lea
mov
lahf
mov
sbb
jmp
jae
in
outs
fcomp
in
in
adc
loope
ins
pop
jnp
shl
mov
out
in
loope
mov
xchg
out
je
jg
mov
test
mov
mov
add
pop
pop
mov
mov
shl
sub
mov
sti
int3
and
popf
xor
and
movs
pop
mov
nop
aas
sub
push
cmps
mov
jo
nop
dec
mov
xchg
or
das
test
aad
sar
fadd
xchg
jne
repz
dec
fld
push
into
sbb
sub
fisub
adc
(bad)
sub
in
or
pop
dec
fmulp
in
mov
daa
sub
add
idiv
jno
jnp
fcmovu
mov
pop
lds
sbb
pop
fsub
std
pop
popa
(bad)
mov
mov
xchg
cmp
mov
add
sar
(bad)
push
pop
jmp
mov
div
cmp
jae
add
mov
loop
pop
ins
call
loop
xchg
push
rcl
fisub
in
cmp
fbstp
cmp
loopne
cs
pop
xor
xchg
jle
pop
pop
rol
jl
or
aad
cmp
mov
hlt
push
and
sbb
inc
fcom
test
dec
outs
xor
push
inc
mov
test
sbb
mov
fist
int3
sti
test
dec
out
fcom
shl
mov
jp
pop
inc
sbb
lds
je
sbb
pusha
push
int
jmp
and
cli
repz
repz
push
ret
mov
stos
and
in
cwde
(bad)
mov
imul
and
in
and
div
jbe
in
call
and
ins
leave
mov
xchg
mov
popa
dec
stos
jno
or
leave
dec
int3
scas
mov
cdq
dec
mov
jge
inc
mov
xor
shl
jo
inc
in
cmp
jbe
inc
push
out
xchg
fwait
pop
out
outs
shr
neg
push
lods
ss
test
add
pop
sbb
xor
fucomp
dec
das
lods
pop
mov
call
and
xchg
xchg
jae
jmp
fsubp
cmps
or
xor
mov
(bad)
popf
test
or
xchg
lock
ds
xchg
inc
push
cmps
inc
mov
or
xor
ror
and
xchg
iret
adc
mov
and
mov
pop
movs
mov
pop
xor
in
add
mov
hlt
daa
mov
ins
imul
dec
xchg
pop
popa
dec
jno
pop
push
pop
adc
je
test
sub
aaa
xor
ss
cmp
and
inc
fmul
test
add
test
loop
xchg
shl
leave
sti
retf
into
bound
push
stos
(bad)
js
adc
jbe
call
xor
stos
pop
mov
xchg
fiadd
adc
dec
xchg
(bad)
sti
xor
jmp
push
bound
inc
movs
fucomi
je
stos
fld
(bad)
xor
gs
test
inc
inc
test
push
mov
mov
mov
dec
sub
fnstsw
cdq
dec
dec
and
outs
cmp
imul
in
ja
or
xor
cmc
or
mov
push
pop
xor
pop
sti
mov
test
fsub
js
adc
movs
fwait
mov
add
or
lock
mov
add
cmp
mov
mov
mov
or
rcr
retf
test
cmps
rcl
ins
es
dec
bound
hlt
mov
add
data16
or
sub
sbb
popa
stos
inc
inc
mov
push
enter
add
sub
dec
test
dec
shl
or
adc
mov
and
call
and
out
inc
pop
xchg
repz
nop
mov
inc
inc
add
xchg
aad
adc
sub
add
mov
fwait
pop
mov
dec
fnstcw
imul
in
jbe
cmp
fsubr
add
mov
mov
sbb
bnd
repz
ins
xchg
pop
retf
jle
leave
fdiv
pop
cmp
push
cmc
in
jno
adc
cwde
dec
in
call
jp
std
mov
loop
jno
cmp
mov
xchg
jle
jbe
retf
in
sub
sub
clc
or
lods
mov
mov
test
sub
xor
mov
sbb
aad
es
xchg
jno
xacquire
adc
adc
fld
xchg
pop
mov
ins
je
cwde
popa
xchg
loop
gs
std
clc
push
and
(bad)
pop
test
mov
mov
xchg
(bad)
cmps
mov
fnsave
jne
aam
dec
sub
rcl
out
(bad)
outs
pushf
das
sub
vmwrite
fisttp
jmp
adc
repz
push
data16
cmp
inc
ficomp
jae
test
or
pop
sar
xchg
or
out
dec
push
shl
adc
adc
enter
pusha
cmps
push
out
fnstcw
push
xchg
fnstcw
inc
add
push
aaa
lds
xchg
xor
push
test
or
popf
jmp
test
mov
mov
mov
jle
cmc
xchg
stos
pop
fiadd
or
xchg
or
sub
pop
fnstenv
add
lods
lods
sub
xchg
jbe
jae
mov
(bad)
ss
aas
or
or
xor
movs
dec
mov
sti
mov
pushf
jno
xchg
jg
(bad)
sbb
inc
jecxz
push
or
out
test
mov
dec
inc
(bad)
stc
xor
inc
sbb
outs
cdq
popa
jae
rcr
ins
pop
lods
add
pusha
push
test
mov
or
aam
sbb
xor
xchg
push
jne
(bad)
jle
idiv
fld
stc
psrlq
lea
push
imul
dec
or
sub
cld
mov
mov
pop
sub
nop
cdq
mov
outs
cmp
sbb
int
sub
fldenv
out
stos
pop
dec
or
jmp
mov
push
and
dec
enter
das
repz
jb
jne
inc
sbb
pop
fist
adc
mov
sar
lds
mov
jmp
(bad)
xor
xchg
clc
and
jae
sahf
and
xor
sbb
aaa
add
jl
fwait
icebp
and
jecxz
(bad)
mov
and
dec
ja
sub
xlat
inc
dec
mov
aad
cs
dec
and
(bad)
jmp
push
xchg
pop
inc
push
imul
mov
mov
xchg
sar
rcr
mov
mov
(bad)
out
ss
inc
jle
jmp
xor
(bad)
pop
je
idiv
xor
pop
cmp
dec
mov
lahf
scas
sar
ficom
shl
ficom
push
pop
push
lods
and
pop
inc
fld
adc
gs
popa
push
pop
sbb
outs
xor
pushw
inc
test
mov
cmp
add
jbe
push
inc
fs
retf
sbb
rol
stos
inc
or
sub
xchg
add
into
inc
popa
sbb
fldenv
adc
cli
scas
or
jnp
jmp
dec
inc
in
jbe
jl
ins
js
pop
xchg
cmp
jmp
mov
into
ss
dec
retf
mov
adc
clc
mov
xor
push
add
inc
adc
fiadd
push
inc
gs
xor
lods
or
(bad)
stc
sbb
dec
mov
xchg
push
and
sbb
pop
push
push
xchg
in
int
(bad)
idiv
push
jmp
adc
push
scas
addr16
mov
dec
xchg
retf
test
loopne
cmps
and
xchg
ret
ss
mov
cmp
int3
sbb
in
lods
cs
sahf
adc
(bad)
int3
es
mov
and
or
adc
inc
mov
repz
add
(bad)
popa
fstp
and
mov
or
scas
popa
cmp
adc
xor
das
out
inc
hlt
clc
loope
cmp
mov
ins
inc
hlt
in
mov
pusha
je
mov
sti
pushf
ret
pop
(bad)
jns
repnz
movmskps
aam
dec
dec
jp
sbb
mov
xor
loop
cmp
mov
pusha
mov
xor
dec
fs
push
(bad)
call
aad
leave
imul
test
stos
test
das
mov
cld
rcl
mov
rcr
jae
jl
mov
out
pop
fidivr
out
and
ja
adc
pop
neg
(bad)
sub
hlt
xor
dec
in
mov
inc
jp
xchg
push
arpl
xor
dec
sbb
pop
mov
push
lea
stos
mov
xchg
dec
gs
jl
or
out
sub
das
test
or
retf
inc
and
cvtdq2ps
in
(bad)
mov
push
pop
add
aam
leave
movs
jbe
aas
loope
shr
cmp
adc
fcom
mov
mov
test
scas
mov
xchg
jae
les
mov
repnz
jle
test
shl
pop
rol
data16
or
sbb
cwde
(bad)
push
jl
mov
push
imul
iret
fwait
bts
ror
inc
jp
sub
mov
movs
push
adc
std
aam
lds
nop
aas
sbb
jmp
out
inc
or
gs
mov
cmc
test
call
cmc
and
sbb
sbb
icebp
repz
psubd
mov
loope
(bad)
aas
outs
test
push
jbe
shr
add
xor
sub
(bad)
xor
pop
mov
adc
sbb
pop
sub
jnp
pop
sub
jle
mov
pop
std
inc
pop
ins
sub
daa
push
pop
les
lds
add
mov
imul
(bad)
stos
mov
lahf
ret
out
dec
ds
fdivr
jb
mov
loop
mov
mov
push
push
sub
les
rcl
sar
mov
push
pop
(bad)
shl
adc
cmp
push
data16
lods
or
(bad)
inc
stos
out
inc
inc
arpl
xor
mov
aam
dec
ret
int3
xor
mov
cmovs
or
retf
aaa
sub
pop
(bad)
jne
inc
ins
stos
inc
out
fisubr
xor
test
fist
cmps
pop
xchg
movs
xchg
ins
pop
or
icebp
inc
add
jns
xchg
jge
mov
cmps
adc
cmps
dec
cmp
push
shl
mov
sub
sub
and
mov
mov
(bad)
fild
adc
add
push
nop
daa
or
retf
aas
push
pop
call
hlt
daa
xor
(bad)
(bad)
pusha
xor
imul
test
jp
pop
es
(bad)
xchg
cmp
ins
in
xor
es
or
(bad)
enter
scas
push
sbb
fadd
mov
xchg
icebp
pop
push
test
fld
inc
into
arpl
mov
pop
cmp
xor
test
sub
hlt
jge
daa
sub
jp
jl
out
jns
adc
push
fs
push
push
ds
(bad)
or
mov
lods
aaa
repnz
push
jle
sar
sbb
lods
stos
scas
pop
pop
inc
sbb
loop
push
(bad)
popa
(bad)
adc
mov
adc
add
or
je
pop
es
sbb
sub
jp
add
fwait
aas
or
xchg
adc
xchg
faddp
test
jp
gs
sbb
dec
out
mov
in
in
test
inc
sbb
fistp
out
mov
push
retf
imul
and
pop
dec
dec
xor
fs
lods
mov
cmp
cmp
cld
ficom
mov
or
fistp
scas
pop
mov
mov
mov
cli
mov
mov
pop
fdiv
jmp
pop
mov
and
cmps
sub
jbe
aam
jbe
pop
(bad)
out
ret
cli
push
shl
fwait
dec
push
clc
(bad)
cdq
cdq
sbb
int
adc
imul
(bad)
int3
mov
imul
inc
mov
int3
inc
sahf
imul
shl
mov
pop
rcl
pop
push
add
test
dec
pushf
pop
pushf
movs
test
jecxz
mov
in
mov
dec
push
imul
sub
pop
mov
xchg
sbb
cwde
ins
in
out
imul
stc
inc
aad
mov
and
xchg
les
xor
iret
js
mov
jecxz
sub
pop
imul
je
call
pop
sub
jnp
pop
push
xchg
add
cmps
pop
(bad)
jl
adc
in
inc
mov
xchg
fs
mov
daa
mov
xor
jg
xor
push
sub
xchg
fild
mov
mov
mov
(bad)
sub
call
or
inc
pop
xchg
les
fdivr
xchg
cmp
xor
mov
mov
int
mov
xchg
int
pusha
iret
icebp
adc
(bad)
ror
inc
push
int3
sub
ret
adc
xor
repz
and
mov
sub
data16
sub
xchg
(bad)
clc
mov
jp
test
add
push
fnstsw
xchg
xchg
fdiv
ja
sar
jbe
push
cdq
adc
and
jmp
inc
inc
fwait
sbb
mov
jnp
xchg
mov
mov
aad
push
push
aaa
cmp
cmp
int
shr
repnz
cli
fisubr
stc
adc
pop
jmp
dec
jne
jns
inc
and
std
pushf
push
loopne
movs
cmps
mov
and
sub
adc
sbb
and
addr16
inc
not
into
mov
data16
enter
mov
pop
sub
ret
neg
mov
(bad)
fcmovu
xchg
mov
and
or
hlt
ds
push
pop
sahf
nop
(bad)
ds
sub
or
lods
pop
mov
scas
adc
mov
jmp
movs
add
mov
cmp
sub
jo
enter
imul
add
scas
test
cmp
in
sbb
xchg
mov
(bad)
push
test
push
leave
in
cmp
and
cwde
lods
push
lds
mov
out
xor
addr16
jmp
test
ret
fwait
mov
idiv
loop
fldenv
or
pusha
xchg
aas
sbb
aam
iret
xor
test
fiadd
jecxz
test
stos
inc
adc
and
or
sub
mov
sub
hlt
adc
fcomp
adc
adc
pop
dec
push
fild
dec
rcr
cmp
mov
jle
fcmovnb
adc
inc
scas
xlat
or
dec
imul
pop
jmp
stos
sub
push
push
push
aaa
sbb
(bad)
push
adc
ja
push
hlt
ret
add
lds
mov
stc
pop
fisttp
push
xor
aaa
mov
(bad)
std
leave
test
enter
adc
dec
mov
movs
test
push
pushf
cmp
inc
push
pop
and
rcl
dec
pop
sbb
mov
mov
scas
add
cli
mov
inc
xor
inc
jp
jbe
nop
or
dec
mov
and
sbb
fwait
repz
scas
push
or
mov
imul
mov
xchg
mov
xchg
mov
imul
pop
or
or
pop
lock
mov
stos
out
and
sub
add
es
mov
push
jbe
mov
adc
pushf
jmp
maskmovq
div
mov
out
jecxz
cmp
xor
sub
out
mov
pop
and
and
pop
pop
and
sub
outs
cmp
pop
shl
clc
nop
(bad)
cli
fwait
mov
cmp
scas
cmp
push
movs
out
dec
movs
inc
sbb
mov
mov
and
cmp
adc
sbb
and
sbb
mov
not
data16
cs
inc
mov
pop
or
or
fnsave
test
mov
popa
mov
gs
adc
jnp
pop
dec
aam
ror
cmp
add
cmp
jae
shl
scas
hlt
dec
sbb
stc
nop
mov
or
xchg
and
enter
cmc
cmc
fcomp
xchg
xchg
push
repz
iret
in
dec
(bad)
and
(bad)
sbb
ret
repz
leave
push
mov
cli
loope
jge
daa
adc
nop
mov
ds
and
mov
fimul
fwait
out
push
retf
xchg
clc
sbb
xor
movs
out
inc
lds
ss
sub
popf
idiv
cmp
or
pop
jmp
mov
stos
pusha
sti
stos
sbb
stos
lea
outs
(bad)
imul
mov
lods
pop
mov
jbe
xor
loop
jp
xlat
loope
push
bound
jle
in
pop
faddp
pop
mov
in
sub
sbb
movs
rep
rol
(bad)
jb
pusha
daa
mov
es
push
jnp
adc
mov
call
out
xchg
xchg
mov
inc
inc
adc
(bad)
jp
and
mov
inc
mov
stos
push
add
xor
je
cs
mov
mov
jge
jge
je
or
wrmsr
fisubr
push
aaa
add
mov
popf
push
mov
jne
pop
(bad)
aad
subps
mov
cmp
push
repz
mov
(bad)
jecxz
jb
aad
cmp
jg
jns
loopne
jae
jmp
or
out
jg
enter
call
call
xchg
push
inc
leave
push
loop
enter
lock
cmps
arpl
repnz
mov
(bad)
or
fwait
(bad)
not
dec
out
jmp
lock
mov
ret
fild
jae
push
add
std
adc
das
or
outs
adc
(bad)
mov
sbb
or
push
sbb
fiadd
clc
xor
dec
cmp
cld
test
sbb
ret
pushf
mov
mov
fcomp
xchg
jb
push
loopne
pop
jne
ret
and
(bad)
fnsave
sbb
fiadd
ficom
adc
add
sahf
rol
inc
and
add
mov
aaa
test
jp
xor
retf
icebp
fwait
loopne
dec
add
mov
jns
pop
ins
cmp
push
xchg
rcr
out
jbe
mov
cmps
cmp
inc
jg
cmp
in
clc
inc
push
int
test
adc
sub
cdq
jbe
(bad)
mov
push
das
mov
inc
mov
call
or
xchg
(bad)
fdiv
movs
pop
cmps
add
arpl
dec
jo
and
enter
adc
int
aas
pop
or
jmp
sbb
loope
data16
add
xorps
aas
dec
inc
ds
imul
mov
xchg
xor
adc
(bad)
test
mov
movs
mov
sub
mov
cdq
pop
nop
stc
push
xchg
mov
sub
xlat
cmp
mov
cmp
enter
mov
(bad)
ret
das
jnp
mov
push
xchg
pop
js
mov
xor
and
lds
push
mov
mov
sbb
aad
adc
out
push
movs
lods
add
addr16
xchg
sub
popf
into
fidivr
int
mov
std
pushf
aad
lahf
leave
popa
(bad)
add
outs
or
push
es
outs
mov
xchg
out
add
inc
xchg
ss
mov
popf
jnp
es
gs
stos
aam
(bad)
aad
out
into
mov
push
jle
mov
ja
mov
stos
pop
xor
push
xchg
sub
mov
fcom
cs
inc
and
xchg
into
scas
jmp
mov
aas
sbb
in
call
out
out
mov
and
jb
mov
imul
lock
in
lods
cmp
(bad)
xor
xchg
aas
ja
mov
in
and
lods
js
push
jecxz
mov
add
dec
push
(bad)
xchg
xchg
imul
cmp
add
dec
ret
jno
mov
movzx
mov
cs
pop
mov
addr16
xor
mov
mov
enter
mov
jmp
nop
and
xchg
les
pop
fsubr
ret
and
inc
retf
sar
(bad)
mul
(bad)
xchg
stc
push
xor
pop
icebp
call
mov
daa
add
ret
jb
mov
xor
dec
sar
ss
jnp
xor
adc
xlat
or
cmp
dec
cmp
sub
lea
sbb
pop
sub
and
sub
xchg
or
dec
mov
mov
cmp
mov
gs
push
mov
ret
clc
push
push
cdq
mov
inc
(bad)
jns
jb
inc
(bad)
in
movs
call
das
adc
fwait
div
push
pmuludq
out
and
add
xor
int3
in
jmp
out
or
in
inc
cmp
rcl
jp
mov
fisubr
mov
int
fcom
bound
sbb
jge
push
jno
jae
push
(bad)
inc
xor
and
in
(bad)
mov
stos
adc
lea
cs
sar
dec
(bad)
popa
sbb
(bad)
jecxz
xor
xchg
jg
sbb
aad
sbb
push
mov
mov
pop
mov
mov
loop
jmp
mov
mov
adc
mov
bound
ficom
aad
adc
sbb
cmps
div
mov
loope
jl
arpl
cmp
mov
mov
mov
popf
sar
inc
cmp
fcmovnbe
ss
mov
add
out
sub
add
daa
xor
stc
push
lods
xor
mov
jmp
loop
out
or
in
ins
push
leave
or
bound
xor
outs
mov
add
cmp
sub
sti
sbb
mov
mov
push
adc
cmp
std
loop
(bad)
dec
cmps
loopne
adc
or
xchg
and
loope
int
enter
sar
push
push
dec
jno
std
mov
out
gs
or
push
adc
ds
ja
sub
loope
loope
scas
lock
push
rcr
sbb
lock
das
daa
lahf
lds
cmp
in
jle
add
sub
mov
adc
cmp
and
inc
jp
cmp
adc
inc
lock
sbb
jle
popf
in
enter
pop
mov
sbb
stos
xchg
xor
lahf
mov
sub
loop
scas
test
jmp
xor
sbb
enter
jl
jo
xlat
cmps
bound
scas
call
xchg
cmp
sbb
das
xor
add
xchg
or
sahf
icebp
pop
jle
cmps
in
les
pop
push
inc
add
in
rol
mov
inc
dec
pop
fld
mov
mov
daa
jns
sub
repz
sub
call
inc
push
pop
dec
nop
iret
repz
inc
xchg
xchg
lds
lods
pusha
sub
paddsb
shr
xchg
nop
mov
inc
and
or
pushf
xor
(bad)
pop
jge
test
xchg
push
cmp
test
das
cmp
or
fimul
xchg
xor
jb
pop
pop
add
ins
sbb
jmp
pop
dec
push
scas
rol
push
imul
jg
mov
int
popf
scas
sub
push
aas
mov
lds
ins
pop
popa
shl
push
xchg
js
shrd
push
jge
clc
sub
add
popf
lods
add
fidiv
fsub
pop
xchg
sub
sbb
and
sub
pusha
in
adc
mov
out
hlt
popa
inc
sbb
test
out
ds
xchg
fcmovne
jbe
mov
sbb
in
mov
out
sti
sub
add
lods
jg
je
test
bound
popf
rcl
xchg
aas
xchg
mov
data16
mov
movs
pusha
(bad)
imul
(bad)
push
sub
in
idiv
add
jge
inc
jl
xor
xor
out
jmp
jmp
rol
es
into
(bad)
aad
cs
cmp
pop
jg
jo
fst
retf
xchg
mov
push
mul
xchg
dec
sbb
mov
arpl
and
lea
jno
jle
bound
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
sub
sbb
xchg
mov
cmp
(bad)
adc
add
dec
add
pop
add
add
add
push
add
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
