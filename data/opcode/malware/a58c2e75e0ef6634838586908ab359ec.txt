jmp
jns
imul
sub
jmp
retf
xchg
int3
(bad)
outs
pop
retf
mov
push
mov
push
xchg
arpl
test
xor
lahf
pop
push
call
xchg
push
mov
push
into
outs
scas
cmps
cdq
fld
xchg
mov
in
mov
mov
or
movs
cmp
stos
dec
inc
cmps
imul
jp
xchg
fnstcw
or
(bad)
cmps
ja
aad
sbb
fmul
loopne
pop
inc
fucomp
cmp
add
aam
mov
movs
in
jecxz
lds
(bad)
int
not
lods
test
push
(bad)
jge
enter
ja
pavgw
inc
jnp
stos
xchg
xchg
inc
fsubr
fisub
or
cs
stos
ja
dec
sar
shr
rcl
mov
or
push
in
pushf
mov
mov
or
movs
add
shl
(bad)
dec
pop
xchg
test
jno
jl
pop
cld
or
popa
xchg
fld
mov
ret
sbb
fadd
xchg
ds
fwait
out
fld
lods
and
les
pop
or
ja
push
jnp
xchg
fist
out
fidiv
scas
mov
das
adc
aam
in
test
mov
mov
loope
cmps
mov
jo
pop
ret
xor
dec
sti
pop
cld
ins
daa
pop
aam
(bad)
add
rcl
(bad)
das
and
xchg
mov
cmps
in
sub
ins
mov
dec
or
cmp
test
addr16
aam
enter
mov
test
mov
nop
lahf
jb
dec
scas
nop
pusha
mov
mov
sbb
fs
lds
mov
push
cmp
scas
sbb
mov
retf
aam
jbe
(bad)
fcomp
out
pop
cdq
mov
imul
mov
pop
arpl
ror
not
rcl
xchg
sub
mov
retf
mov
and
jmp
push
dec
loopne
dec
stos
pop
pusha
sub
(bad)
mov
mov
sbb
jge
sub
ja
bound
jne
ins
call
and
mov
stos
nop
jb
fisub
lahf
inc
push
jne
xor
test
sub
add
dec
and
adc
pop
pop
loope
xor
ins
out
lds
mov
(bad)
sbb
or
xor
add
in
or
aam
or
mov
cmc
addr16
call
fisub
cmp
lea
dec
fisttp
pop
jb
lods
stos
in
cmp
push
xchg
loopne
std
movs
mov
xchg
xchg
cmp
pop
and
sbb
fwait
aaa
or
in
ror
sbb
ret
call
cmps
imul
pop
mov
dec
mov
jb
das
adc
pop
lea
mov
push
scas
inc
dec
inc
pop
ja
jecxz
(bad)
pop
mov
mov
out
test
movs
push
xor
ficom
xor
mov
leave
rol
and
movs
cdq
fdivr
push
xor
ja
xlat
jne
mov
inc
mov
push
mov
cmp
cmp
sbb
push
mov
jns
inc
mov
push
xchg
jecxz
sub
fs
out
iret
add
into
jb
cmc
div
xchg
jnp
sbb
cmp
aam
sub
pop
sub
aad
mov
imul
stos
shl
push
jmp
xchg
in
pusha
dec
push
mov
push
into
ret
loope
add
and
cmp
push
inc
sahf
cwde
stos
push
mov
or
call
and
bound
push
test
push
push
pop
mov
lahf
inc
cmp
test
push
and
cdq
std
test
pop
jl
xchg
jno
push
xlat
xchg
sub
jmp
xchg
or
loop
push
pushf
popf
pop
stos
lea
sbb
adc
mul
dec
ins
pop
sub
test
lahf
ds
pushf
je
cmc
les
push
imul
push
sbb
test
sub
mov
inc
xchg
xor
fnsave
xchg
mov
or
lods
lds
out
sti
mov
out
adc
or
and
xor
fsub
test
jp
and
mov
cmp
mov
adc
jmp
dec
pop
xor
js
int3
cmp
xchg
dec
mov
and
iret
imul
cmp
fbstp
stos
lods
dec
(bad)
sar
xchg
add
jmp
push
xchg
mov
js
mov
je
test
ja
scas
retf
movs
push
add
test
jmp
adc
pop
in
test
fsub
sub
popa
mov
cmc
or
mov
(bad)
pop
jecxz
mov
pop
sub
pop
les
mov
add
arpl
dec
mov
arpl
mov
xor
leave
xchg
neg
shl
sub
fwait
cmp
and
test
enter
enter
pop
and
in
dec
or
enter
arpl
data16
fwait
jns
pop
jbe
shr
mov
inc
mov
push
sahf
mov
lock
shl
add
inc
mov
xchg
dec
xchg
(bad)
mov
push
test
xchg
mov
sub
out
in
mov
and
(bad)
lock
arpl
add
aas
push
sti
pop
cwde
or
push
mov
test
(bad)
push
gs
stos
shl
cmp
loopne
or
sub
xchg
cmp
push
adc
dec
aam
xchg
cmp
ins
mov
mov
nop
test
dec
aam
imul
(bad)
mov
jno
enter
aad
and
sbb
mov
mov
int3
sub
setns
xchg
dec
xchg
ret
call
arpl
test
and
cmc
mov
(bad)
sbb
jbe
imul
test
mov
mov
scas
lods
pop
sub
dec
pop
sub
or
fidiv
inc
pushf
scas
cmp
rol
mov
jecxz
push
jns
xchg
inc
adc
stc
and
mov
movs
dec
call
inc
aas
push
mul
add
inc
aam
pop
cmps
and
jle
fisub
xor
mov
out
jmp
push
mov
xor
add
cmps
push
or
ret
jae
cmp
mov
loopne
mul
push
cmp
sbb
add
test
sbb
imul
inc
retf
ins
mov
add
mov
add
cmps
and
repz
pop
repz
jbe
mov
in
repz
lahf
pop
xor
mov
hlt
rcr
movs
test
cmc
pop
pop
adc
or
xchg
pop
add
mov
inc
cwde
cmp
js
pop
lock
push
cmp
push
pop
adc
hlt
adc
xchg
test
fdiv
je
(bad)
cmc
pop
push
fwait
mov
ins
dec
test
inc
fwait
jp
lods
or
dec
ret
dec
mov
pop
mov
pusha
hlt
dec
mov
outs
and
mov
movs
pushf
ret
dec
fdivr
aam
into
pusha
xchg
xor
xchg
rol
add
aam
ja
xchg
mov
jecxz
mov
mov
cmc
popf
push
loopne
ja
fsubp
aas
lea
pusha
addr16
sbb
imul
sub
mov
push
test
pop
xchg
cmp
push
push
fidiv
or
mov
in
ret
addr16
xor
cmp
imul
push
scas
xchg
push
mov
and
xchg
out
shl
jecxz
pop
imul
dec
push
shl
pop
push
cmps
adc
arpl
and
push
test
dec
fbstp
xchg
das
aad
add
or
gs
inc
fwait
dec
test
sbb
test
fnstcw
idiv
push
sbb
jns
mov
sbb
(bad)
add
sub
and
fs
inc
mov
pop
loope
jle
mov
std
push
add
test
cmp
xchg
bound
mov
aas
(bad)
popf
mov
cmps
mul
popa
xchg
out
pop
lea
pop
add
pusha
pop
xchg
pushf
adc
jne
imul
push
add
adc
ja
test
sbb
adc
pop
loopne
call
jle
sar
pop
popf
retf
ss
movs
scas
xchg
dec
push
rol
mov
lods
into
push
xchg
xchg
or
jge
into
mov
cdq
mov
jg
pop
mov
enter
repz
inc
mov
adc
outs
inc
push
inc
inc
out
frstor
adc
add
and
xchg
sub
test
mov
pop
daa
imul
cdq
inc
ficom
xchg
xchg
jo
cmp
cmp
jle
xor
ds
pop
imul
addr16
cwde
and
data16
pop
bound
inc
stc
fmul
and
in
mov
xchg
lds
dec
mov
push
fmul
daa
gs
or
shr
adc
out
xchg
fs
pop
push
(bad)
loope
or
ins
add
hlt
sub
lods
mov
es
shr
jnp
(bad)
pop
outs
mov
out
pop
popf
add
xchg
les
push
(bad)
lods
and
dec
pop
int
or
xchg
(bad)
mov
dec
pop
lods
xor
jl
push
fs
inc
push
test
test
sub
or
lea
sub
popf
xchg
lea
pop
or
add
pop
push
(bad)
movs
xchg
(bad)
retf
in
jbe
scas
clc
jg
addr16
mov
adc
push
lock
adc
fmul
adc
jge
mov
aaa
mov
and
movs
cmp
pop
push
sbb
call
cmps
pop
pop
xchg
pop
push
cmp
xchg
add
mov
sbb
outs
mov
sbb
pop
add
push
adc
add
dec
xchg
sub
jecxz
add
dec
inc
stc
jb
in
mov
jg
cld
mov
push
repnz
lea
retf
and
dec
xchg
push
pusha
shl
and
out
or
mov
push
ss
sahf
push
in
ss
or
sbb
jmp
jmp
adc
retf
ficom
dec
aad
xchg
imul
cs
icebp
fcomi
sbb
mov
sbb
or
inc
dec
lds
xor
push
mov
sti
pop
mov
mov
sti
pop
mov
or
out
push
mov
stos
xor
sar
push
shr
sub
pusha
jae
sahf
out
xor
dec
and
or
(bad)
mov
push
sbb
fwait
inc
cmp
jae
sub
jne
cmp
cwde
movs
pop
shr
loope
xchg
mov
mov
pop
and
sbb
ja
mov
mov
xchg
mov
cmp
addr16
int
mov
xor
jg
icebp
lahf
or
in
dec
mov
push
xchg
mov
lea
aam
outs
fidivr
mov
cmp
fwait
test
sub
out
(bad)
mov
ret
fsub
ret
inc
mov
mov
in
jb
mov
jmp
xchg
inc
scas
(bad)
mov
pop
adc
cmp
jle
outs
push
inc
sub
in
gs
les
adc
les
mov
ficom
out
shr
mov
pop
sahf
fidivr
adc
mov
les
mov
call
mov
cmps
sub
outs
lds
fist
out
addr16
jbe
mov
(bad)
mov
adc
call
mov
mov
stc
xchg
adc
sbb
adc
push
adc
push
ins
jmp
xchg
or
cwde
xor
gs
pop
adc
mov
js
mov
(bad)
lea
ja
(bad)
dec
shl
rcr
sub
xor
jl
pusha
or
jno
call
push
or
mov
loop
push
pop
mov
in
addr16
gs
fnstcw
xor
repz
mov
xchg
dec
test
out
stos
or
or
jmp
or
test
mov
int
loopne
stc
xchg
push
mov
xor
xor
stos
adc
arpl
xor
jge
arpl
push
test
sbb
ret
imul
neg
push
inc
ds
sbb
xchg
rcr
push
or
sub
add
cmp
outs
mov
mov
jb
xchg
and
jnp
out
xor
lds
cwde
iret
xchg
stos
xchg
mov
push
fmulp
jae
(bad)
scas
dec
pop
(bad)
sub
aas
rcl
mov
rcl
out
cmp
push
daa
rol
aam
pop
xchg
jle
fadd
ret
xor
xchg
in
push
push
fstp
add
icebp
(bad)
out
data16
data16
data16
push
pop
icebp
(bad)
in
or
or
sbb
inc
fimul
nop
inc
fsub
test
(bad)
(bad)
call
out
mov
mov
mov
stc
add
ins
xchg
cmp
or
bound
pop
loope
inc
mul
arpl
movs
push
pushf
inc
mov
mov
outs
pop
sar
mov
stc
cmp
sbb
pop
mov
(bad)
test
scas
cli
cmps
cmps
xor
mov
and
je
dec
mov
xchg
popf
lods
xchg
jl
mov
ja
out
inc
out
push
inc
mul
rol
fsubr
imul
movs
xchg
cmp
push
mov
daa
push
mov
daa
(bad)
mov
ins
mov
js
jecxz
test
jmp
dec
push
jb
ins
ins
or
repz
enter
mov
loope
and
ror
or
mov
in
fwait
jg
loop
in
xchg
pop
dec
gs
and
retf
or
inc
jns
jp
jno
sbb
adc
js
in
scas
prefetch
jecxz
loope
jmp
jge
test
clc
aam
or
call
or
test
mov
push
cmp
je
pop
enter
nop
js
mov
retf
(bad)
movs
jmp
outs
mov
in
ds
sbb
scas
sub
mov
and
ins
adc
lock
or
shr
ins
enter
xchg
or
bound
inc
sub
aam
test
enter
xor
arpl
cmp
gs
xchg
fwait
enter
mov
mov
sub
xor
ret
sbb
out
dec
mov
dec
dec
xchg
and
xchg
dec
mov
mov
mov
adc
lahf
pop
jnp
mov
jbe
xchg
mov
or
loopne
fwait
xor
out
leave
sti
xor
lds
and
xchg
push
addr16
jmp
test
xor
cmc
mov
test
js
imul
xchg
fwait
pop
mov
aam
push
dec
push
enter
jb
scas
mov
fsub
out
ins
movs
dec
lock
dec
mov
std
test
xlat
mov
cwde
adc
xor
sub
adc
jo
push
mov
jl
je
push
dec
xchg
xchg
out
mov
cmp
sub
out
imul
xchg
add
add
cmps
sub
out
daa
bound
(bad)
(bad)
in
out
fwait
outs
xchg
jg
data16
inc
cmps
cmp
mov
aas
or
mov
xchg
lock
xor
adc
jno
stos
dec
ficomp
std
xchg
loopne
mov
popa
std
cmp
outs
mov
xor
mov
xor
test
sub
js
jns
imul
dec
jmp
cmps
push
data16
imul
aad
out
xor
mov
fcomp
pop
test
outs
fadd
ss
outs
pop
sbb
cdq
mov
jbe
les
and
lods
pop
lods
call
pop
and
shl
jne
loope
(bad)
ins
mov
jno
cdq
mov
cs
int3
xchg
jp
pop
stc
cmc
stos
outs
and
ror
pushf
mov
imul
dec
mov
mov
xchg
mov
shr
sub
mov
adc
mov
mov
and
mov
adc
stos
lods
mul
pop
aam
call
and
test
sbb
sub
movs
and
add
mov
nop
push
shr
pop
mov
movs
add
mov
loop
cmp
sub
jo
(bad)
std
je
(bad)
aaa
sbb
xchg
add
xchg
imul
fwait
mov
ins
jecxz
push
(bad)
push
loopne
mov
ror
pop
pop
mov
ins
adc
add
push
loope
(bad)
popf
fdivp
imul
bound
push
xchg
jo
mov
dec
stos
jne
out
ja
pop
jns
call
(bad)
ret
or
pop
movs
movs
xor
ins
addr16
es
(bad)
mov
std
loope
ret
sub
mov
ins
(bad)
data16
call
jl
or
movs
mov
lock
(bad)
xlat
dec
mov
xchg
mov
stos
pop
mov
fld
add
mov
pop
or
rol
aam
push
jg
xchg
jp
lods
movs
(bad)
mov
fadd
mov
mov
test
pop
(bad)
pop
mov
push
je
jo
cmp
dec
mov
sub
loopne
imul
push
jo
mov
icebp
sub
iret
fwait
ja
pop
dec
das
pop
dec
cmp
mov
out
dec
mov
adc
and
mov
add
pop
mov
jle
jae
fucomp
call
scas
outs
pop
mov
cld
ret
sub
imul
pop
pop
add
jns
mov
and
ret
jg
xor
xchg
popf
add
sub
fldcw
int3
loopne
mov
and
enter
test
je
push
int3
push
inc
dec
(bad)
rcr
je
or
dec
ds
test
mov
arpl
dec
pop
in
or
adc
mov
inc
popa
adc
les
inc
xchg
xchg
xor
dec
jnp
iret
call
movs
push
stos
inc
mov
dec
push
scas
push
imul
push
jae
or
inc
push
jge
rcl
data16
fstp
popa
fs
xchg
sbb
ficomp
push
or
sub
repnz
enter
adc
and
dec
jl
(bad)
lahf
mov
into
push
daa
ret
int3
or
ins
mov
(bad)
(bad)
in
ret
fild
mov
imul
rcl
cmc
jnp
lahf
bound
cdq
and
push
test
jae
push
aas
inc
movd
cli
xor
nop
dec
jnp
sar
fist
out
arpl
cdq
arpl
imul
pushf
pop
mov
pop
jae
std
mov
mov
jno
shl
xchg
scas
pushf
adc
data16
pop
xchg
xchg
sub
fist
add
xchg
into
std
mov
jmp
leave
and
dec
mov
cmp
add
add
and
mov
push
ja
mov
jns
scas
retf
out
jno
outs
inc
imul
cmp
jl
enter
adc
mov
jecxz
hlt
pop
ja
ins
sbb
movs
mov
fidiv
mov
test
jmp
pop
jne
inc
fs
sub
std
push
ins
ds
push
js
into
loop
jno
push
mov
mov
not
mov
inc
pop
add
push
and
push
and
adc
dec
ror
jne
icebp
shl
mov
inc
stc
dec
mov
mov
(bad)
ret
xchg
loop
mov
rcl
shl
lahf
mov
cmp
cmp
lea
test
pop
mov
sbb
mov
fwait
idiv
push
or
jno
push
cmp
mul
push
ins
xor
cmp
mov
pop
push
mov
into
pop
aaa
jo
in
call
adc
je
stos
sub
push
pushf
jne
push
cs
clc
dec
rcl
rcr
call
enter
jne
cmc
movs
(bad)
jne
mov
out
push
inc
test
push
les
test
add
and
sbb
cmc
jl
bound
arpl
lods
mov
iret
xchg
das
leave
push
xchg
imul
xchg
inc
mov
push
add
add
xchg
or
mov
loopne
sub
inc
adc
stos
outs
lods
pop
bnd
in
or
les
fild
jne
dec
test
bound
loopne
mov
repnz
(bad)
xchg
adc
inc
mov
mov
sub
sahf
int
sub
mov
xchg
push
mov
xchg
dec
aam
sbb
call
push
cld
stc
ja
data16
inc
push
sahf
xor
push
aaa
and
movs
cli
dec
push
inc
jecxz
(bad)
pop
bound
dec
div
add
fisubr
dec
ins
mov
xchg
std
pushf
sub
mov
adc
clc
adc
jbe
and
inc
aad
call
movs
jbe
cmp
mov
lods
repnz
imul
jge
scas
loopne
and
pop
sub
daa
jns
dec
(bad)
dec
inc
mov
aam
push
movs
dec
cli
inc
scas
ret
shr
cmp
pop
add
mov
or
in
imul
retf
inc
inc
lea
cmps
mov
test
dec
mov
cmovbe
data16
jl
stos
adc
and
aas
and
jmp
repz
jl
and
bound
movs
dec
inc
aam
out
jne
jne
push
jbe
das
push
retf
and
(bad)
xlat
or
data16
lods
push
ret
push
xchg
movs
out
jle
jae
icebp
ins
into
push
test
cld
mov
pusha
fcmovbe
or
dec
movs
sar
jmp
ins
std
mov
xchg
push
outs
sub
jns
fisttp
xchg
inc
pop
cmc
loop
cmp
and
mov
inc
xchg
(bad)
jmp
rcl
and
loop
and
addr16
cdq
ror
(bad)
ret
push
dec
adc
mov
sub
call
popf
pop
pusha
adc
cmp
ja
ja
mov
ins
dec
pusha
fcmovne
pop
or
jns
outs
sbb
gs
push
lods
test
call
cs
shl
(bad)
xchg
mov
mov
sbb
jecxz
jge
enter
scas
jae
ins
scas
int
popa
fild
dec
movs
pop
ret
es
or
add
bound
inc
mov
xchg
fisubr
pop
push
sar
mov
sub
pop
or
inc
pop
mov
popa
fild
push
data16
xchg
and
pop
call
inc
stos
imul
cmp
xor
mov
outs
push
enter
mov
mov
push
icebp
add
outs
mov
loop
pushf
jae
shr
push
not
mov
adc
xchg
dec
das
(bad)
mov
fisttp
push
xchg
popa
rcr
adc
data16
(bad)
call
fsub
div
push
or
stos
push
(bad)
out
adc
(bad)
rcr
cdq
mov
ins
pop
shl
retf
stos
(bad)
cwde
fnstenv
xor
imul
addr16
rcr
aam
test
adc
pop
inc
repnz
or
loopne
out
(bad)
mov
pop
push
ret
les
gs
je
outs
lea
test
je
(bad)
mov
fidiv
arpl
popa
jae
sub
scas
and
(bad)
fsub
jge
pop
push
add
mov
rcl
pop
(bad)
dec
or
push
fist
leave
xor
or
daa
inc
pop
adc
pop
ror
nop
pop
jge
dec
lahf
outs
push
mov
imul
push
int
jg
xchg
dec
mov
and
test
bound
xchg
pop
xor
fidivr
ins
jl
xchg
ds
repz
pop
bts
sahf
jle
dec
test
pop
mov
cmc
(bad)
lea
call
loopne
rcl
call
and
or
and
adc
sbb
or
push
xchg
mov
js
test
mov
dec
in
cmp
and
jne
xchg
les
xlat
mov
mov
scas
mov
lock
(bad)
int3
xchg
je
xor
adc
adc
xchg
call
lds
mov
cmps
(bad)
(bad)
lahf
iret
jnp
mov
mov
sahf
mov
add
sub
mov
mov
loop
dec
add
int3
pop
jo
movs
sar
aad
gs
xchg
adc
push
mov
gs
mov
mov
inc
ins
mov
jg
inc
push
ds
fist
mov
lods
popa
push
xchg
sti
adc
repz
push
sar
dec
jge
cli
push
fist
pop
push
inc
outs
ss
mov
mul
(bad)
stos
retf
push
cmps
cmp
sbb
inc
cli
lods
cld
push
test
movs
stos
or
inc
nop
sti
add
inc
push
jbe
jmp
test
jns
push
data16
xchg
sbb
arpl
(bad)
mov
push
repz
gs
pushf
jmp
nop
fstp
xchg
jle
or
lods
jg
call
dec
loope
adc
cld
or
sbb
add
cmp
xlat
cwde
jle
dec
in
dec
popa
sub
aaa
dec
fistp
and
pop
in
and
inc
int
dec
adc
add
cs
sbb
jbe
inc
xchg
das
mov
push
int3
test
stos
ror
je
int3
cmp
imul
shl
dec
cmps
addr16
jno
jmp
lods
adc
push
cmp
cmp
lods
dec
jg
ror
ficom
jbe
push
pop
mov
lahf
fs
mov
fnstsw
bound
cmps
or
or
or
xor
pop
adc
popa
xchg
push
jns
mov
aas
adc
mov
sub
pop
cs
sbb
imul
cmp
mov
and
push
call
aam
or
repnz
sbb
ins
hlt
lea
ss
loop
pusha
int3
out
dec
push
xchg
push
xchg
or
addr16
and
dec
test
loope
mov
lods
pop
ds
mov
jae
or
inc
pop
int
mov
fcom
fistp
adc
icebp
inc
dec
jp
or
mov
and
mov
jge
or
loop
sub
(bad)
daa
mov
jmp
retf
add
cli
cmp
dec
arpl
shl
sub
mov
fist
mov
std
fldcw
jmp
xchg
shl
mov
pop
test
out
push
jge
push
xchg
ret
add
pop
mov
pop
addr16
or
sub
nop
mov
xor
test
(bad)
call
mov
mov
das
mov
mov
fnstcw
xchg
pop
add
adc
push
xchg
push
inc
inc
xor
les
mov
inc
mov
dec
fs
dec
xor
addr16
gs
das
dec
fs
pop
in
xlat
sub
nop
jecxz
xor
push
ins
sub
add
int
jne
pop
out
repz
push
push
cmp
pop
xchg
ins
imul
rcl
xor
jbe
(bad)
push
xchg
xor
retf
and
arpl
dec
retf
(bad)
push
mov
and
sahf
pop
xor
aad
mov
jnp
imul
add
aas
sub
repnz
(bad)
out
push
ret
dec
fsubr
arpl
cli
pop
jg
mov
sub
cli
js
cmp
jl
add
enter
mov
repnz
mov
aaa
ins
cmps
out
(bad)
cli
and
stos
push
pop
jmp
cmp
jns
mov
xor
inc
jmp
ja
push
jle
pop
add
imul
aaa
outs
movs
sar
xor
int
or
mov
les
ror
cmp
movs
mov
(bad)
cmp
adc
ror
mov
mov
out
adc
lock
clc
sahf
stos
inc
jle
retf
jns
nop
ds
adc
jnp
stos
sar
mov
and
push
push
and
outs
or
daa
add
inc
mov
aas
jle
mov
psubusb
imul
pop
push
aam
push
or
jne
aad
popa
cmp
xchg
jbe
mov
mov
mov
push
gs
inc
or
movs
jne
sub
mov
sbb
and
jbe
add
stos
inc
js
cmps
test
mov
pop
je
stc
jecxz
mov
xor
xchg
or
inc
push
push
ins
and
push
ins
fsub
test
sbb
hlt
cmp
fs
in
pop
test
cmps
mov
inc
leave
jmp
shl
(bad)
dec
shl
mov
xchg
jnp
ja
test
mov
fwait
iret
xchg
add
mov
xchg
imul
dec
or
outs
sbb
test
cdq
bound
je
add
mov
sbb
inc
aad
test
xor
sbb
inc
outs
pop
inc
imul
adc
pop
out
pop
xlat
in
ror
js
mov
jbe
adc
pushf
mov
loop
push
fsub
je
retf
mov
je
mov
pop
(bad)
fcomp
mov
add
mov
push
clc
push
daa
dec
jnp
scas
mov
jbe
inc
push
jnp
mov
jae
jge
jo
int3
fs
xchg
adc
push
leave
jne
lods
loope
mov
xchg
enter
jecxz
xor
mov
(bad)
in
push
sahf
sub
sbb
cs
and
push
jo
jno
jae
jle
cmp
into
and
repz
push
fmul
push
mov
ret
mul
pop
imul
push
mov
cs
push
dec
adc
repz
call
mov
cmp
in
pop
popf
mov
jg
aaa
push
cmps
outs
int
or
mov
movs
sub
and
jg
pushf
outs
jle
mov
push
hlt
pop
mov
and
shr
ret
scas
nop
rcr
mov
jne
jp
sub
mov
or
imul
xchg
loope
push
imul
(bad)
loope
inc
fisubr
sub
sub
daa
xor
ins
aas
adc
jnp
mov
sub
sbb
mul
mov
jae
mov
in
lds
(bad)
pop
mov
in
jg
imul
(bad)
gs
in
xchg
add
cmp
scas
sbb
mov
imul
je
pop
sub
jge
sbb
xchg
jo
das
inc
xor
xchg
jmp
test
or
pop
xchg
nop
and
ret
cmc
fcomp
cmc
hlt
jle
outs
add
ja
je
(bad)
sub
sahf
and
out
jno
push
movs
imul
in
sub
mov
adc
scas
ja
test
push
mov
jne
cmp
pop
jmp
add
leave
sbb
es
leave
test
add
sbb
stc
int3
pop
dec
add
xor
push
xor
pop
mov
ret
ja
adc
inc
mov
jne
sar
mov
xchg
std
jge
outs
pop
ins
(bad)
lock
mov
das
ss
test
mov
jae
outs
push
cs
outs
shl
outs
dec
add
cdq
inc
push
jns
push
adc
lahf
xor
or
inc
xchg
mov
int3
xchg
sbb
inc
dec
add
mov
push
xor
add
lods
mov
pushf
inc
fwait
push
in
xchg
jg
push
and
addr16
fs
pop
dec
jb
add
pop
popf
loopne
mov
inc
inc
sar
push
xor
(bad)
imul
xchg
xchg
outs
jecxz
and
jae
push
lock
scas
div
fs
sahf
(bad)
add
dec
push
push
jge
xor
imul
mov
and
push
xchg
movs
loop
mov
xor
jecxz
or
inc
adc
jae
inc
mov
lds
push
aas
call
or
popa
mov
pop
lock
jno
dec
loopne
addr16
inc
pop
je
lea
inc
mov
jmp
inc
cld
and
xchg
push
data16
stos
div
aaa
mov
mov
cdq
cmp
arpl
ss
bound
inc
test
pop
dec
mov
dec
dec
jp
std
mul
mov
in
inc
push
mov
fwait
pop
jbe
sub
mov
aam
cmc
jbe
jmp
popf
(bad)
mov
push
jmp
scas
xchg
and
retf
loope
adc
and
retf
and
stos
ja
arpl
sbb
lahf
mov
pop
inc
and
dec
mov
adc
jle
aas
xchg
addr16
cs
daa
cmc
and
not
lods
mov
sbb
sti
cdq
push
mov
mov
cdq
fisubr
(bad)
dec
inc
loopne
dec
pop
test
aas
mov
mov
stc
(bad)
outs
repnz
mov
pop
into
scas
mov
push
mov
(bad)
nop
out
mov
cmp
or
sub
xchg
cdq
arpl
mov
fucomp
scas
xchg
mov
push
xor
out
add
pop
mul
retf
ins
sub
fadd
(bad)
push
into
int
or
arpl
out
cmp
cmc
push
hlt
inc
bound
cs
ja
lods
xor
push
lods
jne
pop
into
sti
loop
xchg
shr
sbb
aad
push
imul
loop
stos
jbe
cmp
dec
sub
mov
jb
xchg
or
dec
cld
(bad)
dec
pop
in
ds
or
fwait
or
ins
repz
retf
adc
ja
xchg
fimul
inc
mov
test
hlt
lahf
and
jmp
ja
fmul
or
int
cdq
pop
movs
xchg
push
call
pop
xchg
loope
xchg
cmps
push
nop
jae
jl
cmp
(bad)
xchg
movs
add
fs
push
call
push
test
and
adc
call
pop
push
fs
push
cmp
into
shl
dec
pushf
stos
xchg
aad
rcl
xor
mov
lea
scas
jge
add
add
push
jno
sub
addr16
lds
or
mov
mov
arpl
jae
fistp
mov
sahf
xlat
adc
jb
les
cwde
aas
push
xchg
(bad)
call
(bad)
out
ds
push
jg
pop
dec
mov
aaa
ins
cmp
push
loope
es
push
add
or
xor
jg
mov
pop
mov
push
ins
repnz
cmp
xchg
inc
(bad)
loopne
add
repz
not
enter
jge
in
pop
je
leave
add
scas
test
outs
ins
ins
bound
popa
lds
daa
xchg
and
xor
adc
fnsave
fs
and
add
call
mov
sahf
retf
pop
sub
and
popa
jmp
fadd
add
and
add
adc
push
stos
lea
pop
fwait
mov
(bad)
inc
(bad)
mov
jnp
leave
mov
outs
push
(bad)
jae
fild
and
xor
outs
cmps
movs
ds
xchg
jmp
out
popf
int3
inc
nop
pop
dec
test
aaa
stos
jp
mov
popa
loope
xchg
sbb
retf
pop
push
mov
aaa
cmps
inc
out
add
push
add
outs
jne
sar
fsubr
xchg
xchg
jne
jmp
and
jns
call
add
ret
jle
fwait
(bad)
out
pusha
sub
inc
cmp
test
popf
imul
jbe
cmp
cdq
fdivr
cmp
and
mov
or
mov
cli
mov
sub
jle
adc
enter
cld
cwde
out
sub
test
in
push
xchg
hlt
push
xchg
mov
push
cld
xchg
inc
int3
outs
(bad)
xchg
stos
dec
daa
dec
out
push
bound
cmc
adc
inc
or
mov
pushf
retf
lds
sub
sub
sub
add
dec
(bad)
scas
and
jg
(bad)
sub
dec
outs
inc
repnz
sar
mov
mov
stc
imul
mov
mov
aaa
retf
test
push
mov
lods
in
test
add
dec
mov
pop
xchg
cmps
inc
mov
mov
shl
pushf
fwait
scas
push
mov
js
mov
mov
add
test
loopne
stos
scas
mov
or
loope
push
sbb
into
retf
test
push
cmps
push
fild
bound
fwait
(bad)
lea
adc
push
test
mov
and
xor
jg
mov
jo
push
jae
jmp
push
mov
or
(bad)
pop
ret
adc
xchg
out
shl
fcomp
pushf
mov
sbb
inc
imul
push
in
inc
jg
xor
aad
leave
sti
out
movs
or
les
sub
loopne
add
inc
jbe
push
mov
xchg
mov
fimul
inc
loopne
imul
pop
test
pop
mov
add
xlat
mov
mov
dec
stos
and
dec
push
pushf
push
sbb
clc
fdiv
cmp
ds
into
gs
or
ds
(bad)
test
adc
or
push
ret
sub
pusha
cmp
and
dec
sbb
pop
iret
mov
dec
xchg
inc
mov
aad
xchg
push
push
xor
cdq
icebp
fcmovb
retf
cmp
ins
mov
aad
inc
or
add
div
adc
enter
push
inc
pusha
xchg
fwait
mov
retf
jle
or
adc
jbe
xchg
rcl
sub
fwait
repz
(bad)
shl
xchg
mov
pop
xchg
push
dec
dec
cwde
jge
cmp
xlat
jno
pop
dec
mov
lea
push
xchg
mov
dec
popf
sub
inc
and
out
cmp
std
sbb
imul
js
scas
frstor
push
cli
push
ins
jo
push
pop
or
dec
iret
pop
adc
push
add
xor
sub
gs
fisub
xor
or
sbb
push
cmovne
pop
les
inc
ret
add
popf
adc
or
ins
and
add
adc
nop
mov
aaa
xchg
dec
xlat
jg
or
adc
adc
(bad)
cli
adc
jp
adc
dec
mov
mov
xchg
dec
test
test
xchg
jb
xchg
mov
mov
sbb
call
mov
add
(bad)
sub
dec
jecxz
js
into
fwait
xchg
(bad)
inc
stos
ds
or
mov
pusha
dec
add
sub
fist
push
jmp
pop
mov
push
xchg
fsub
and
jno
out
add
or
xlat
pop
xor
std
bound
inc
ror
imul
push
dec
sub
test
lock
cli
push
and
test
pop
lahf
sbb
pop
lock
lahf
xchg
or
and
pop
leave
popf
sbb
add
fbstp
test
push
push
cwde
push
(bad)
mov
push
xchg
sub
sub
inc
nop
lahf
rol
lods
inc
xchg
call
cmp
and
(bad)
xor
sub
pop
push
call
jb
test
jmp
fidiv
fiadd
std
push
mov
imul
adc
dec
shr
stos
lea
push
or
fimul
and
leave
rcr
cli
ins
sub
mov
sbb
shl
fadd
dec
push
xchg
stc
pusha
sub
jnp
add
pop
and
xor
loop
push
add
frstor
push
loop
dec
inc
add
sub
mov
jne
sti
out
lea
or
lds
int
mov
cmps
add
add
mov
inc
mov
mov
iret
mov
xor
cmp
pop
(bad)
stos
xchg
inc
fistp
and
ror
jle
cmp
lods
in
cs
inc
mov
loope
mov
mov
cdq
push
cwde
call
pop
cmovns
ins
popf
add
lds
mov
sbb
dec
fnsave
jne
push
adc
shr
arpl
push
in
mov
sub
nop
fwait
push
or
(bad)
and
ins
jno
sahf
add
sub
cmps
imul
push
call
xchg
add
test
jne
es
mov
mov
icebp
push
lahf
dec
push
adc
aad
js
movs
push
or
jle
outs
lods
(bad)
or
ds
(bad)
mov
pop
push
cmp
push
cmp
dec
pop
inc
(bad)
mov
dec
call
das
and
adc
in
and
jge
ficom
adc
dec
idiv
or
scas
leave
mov
xlat
push
jg
or
retf
fidivr
out
mov
(bad)
mov
jl
sub
fdiv
add
mov
outs
js
gs
cmps
mov
fsub
es
ins
cdq
adc
fist
dec
mov
icebp
in
aam
cmps
stos
xchg
shl
lods
aas
ins
jp
sub
inc
scas
mov
test
pop
(bad)
or
push
dec
ins
loopne
or
hlt
push
cdq
mov
data16
adc
add
adc
push
and
enter
leave
sub
pop
shl
pop
mov
mov
dec
(bad)
cmp
sbb
cmc
jmp
jg
inc
outs
bound
mov
pop
shr
inc
pusha
rcl
add
cmps
mov
or
xor
add
or
mov
in
popa
pop
add
or
outs
ficom
push
add
outs
retf
hlt
mov
dec
xor
mov
ss
nop
xor
xchg
js
mov
sbb
retf
enter
jp
mov
pop
and
xor
retf
jnp
pop
sahf
(bad)
dec
lea
arpl
bound
xchg
dec
ins
pop
jbe
pop
sub
lea
inc
mov
test
add
retf
push
lods
mov
jle
add
fs
ins
fadd
enter
shr
cwde
pop
(bad)
cwde
push
test
lea
out
inc
out
sub
pop
inc
popf
fdiv
xchg
cs
aaa
dec
cwde
mov
add
jb
xchg
nop
cwd
rol
sbb
sbb
jle
bound
pop
push
sbb
ins
loope
or
jg
pop
push
adc
xchg
and
shr
leave
dec
cdq
inc
movs
mov
mov
inc
add
jbe
inc
adc
lods
scas
pop
cmp
ret
loop
loope
aas
mov
jbe
jle
mov
mov
(bad)
pop
cdq
enter
add
dec
xlat
sti
mov
mov
jge
mov
push
xchg
and
lock
adc
push
arpl
xchg
lds
adc
rcr
lea
xchg
jp
movs
repnz
cld
lods
adc
or
ins
bswap
jmp
mov
sub
pop
test
jmp
mov
xor
inc
jl
sbb
es
sub
dec
inc
xchg
repz
das
(bad)
fild
lds
mov
and
ja
shr
retf
jp
add
push
cmp
jp
call
dec
retf
je
or
push
xlat
push
pop
fs
pop
pop
ss
mov
inc
jne
pop
int3
push
outs
into
adc
adc
mov
fs
jns
loopne
test
mov
pusha
sub
retf
add
pop
imul
lds
dec
fist
inc
add
gs
fcmovnb
and
dec
fs
jmp
adc
adc
jbe
mov
mov
push
rcr
or
cmps
loop
push
and
jb
addr16
mov
dec
repz
daa
pop
enter
jmp
es
dec
adc
out
xchg
xchg
ins
loope
rcr
inc
pop
sti
or
pushf
mov
pusha
pop
ret
mov
mov
clc
movs
ss
in
jne
jmp
adc
fcomp
or
rcr
dec
jle
push
jns
mov
inc
cwde
retf
or
dec
xor
add
aam
pop
sub
jns
mov
ins
es
call
and
pop
inc
call
dec
inc
mov
lds
push
xchg
pop
stos
xchg
jno
(bad)
aad
or
pop
add
xor
mov
iret
inc
mov
jns
mov
jge
pop
imul
iret
std
dec
(bad)
mov
stos
inc
jae
pop
push
push
push
cmp
inc
jecxz
xlat
daa
test
mov
out
jne
stos
mov
cmp
pop
int
inc
(bad)
and
js
imul
sub
push
ds
sbb
mov
jno
inc
loop
pop
mov
cmp
xchg
xchg
aas
xchg
les
clc
lea
push
or
or
lds
arpl
pop
ss
add
cmp
bound
push
inc
scas
and
dec
pop
cs
xchg
pop
xchg
jns
push
jbe
loop
add
mov
pusha
mov
jmp
mov
push
mov
in
div
ins
jge
mov
data16
test
sbb
push
je
int3
mov
push
loopne
jmp
mov
cdq
arpl
rcr
ins
es
arpl
sub
bound
ja
push
mov
push
je
inc
mov
cli
dec
jl
xor
pushf
dec
ficomp
dec
popa
add
xor
push
mov
pusha
dec
jmp
push
and
int3
arpl
jo
out
mov
pop
nop
retf
fadd
outs
xchg
sbb
pop
shl
sub
leave
pop
inc
inc
jb
add
pusha
jge
daa
pop
js
push
jl
lds
loopne
and
enter
dec
or
nop
fcomp
aam
imul
jae
xchg
stc
inc
ja
push
jbe
sbb
retf
mov
inc
fisub
push
cmp
pop
and
outs
or
push
pop
jmp
sbb
pusha
addr16
mov
pop
daa
cmps
cmp
(bad)
sbb
push
(bad)
jmp
int
in
in
push
push
fwait
aam
rcr
xor
out
pop
retf
xchg
aaa
bound
jno
jp
xor
push
rcl
mov
jg
rol
stos
addr16
addr16
adc
in
retw
xchg
mov
push
aaa
scas
bound
jmp
je
sub
aaa
push
pop
sbb
pop
cmp
push
or
add
push
cmp
mov
pop
popa
fld
fwait
fwait
inc
push
xor
scas
mul
shl
cs
xor
adc
loopne
ds
clc
div
bound
out
(bad)
bound
retf
ret
movs
in
(bad)
leave
outs
jno
outs
imul
addr16
outs
push
adc
int3
mov
xchg
out
dec
sbb
pop
cmovge
xor
mov
adc
aaa
xlat
ins
(bad)
mov
adc
xchg
ins
pop
dec
push
loop
adc
rol
gs
test
jl
cmc
sub
pop
dec
shl
add
enter
mov
mov
data16
ret
push
mov
add
mov
xchg
inc
pop
into
loopne
push
retf
push
ins
inc
imul
xchg
pop
pop
push
mov
repnz
adc
mov
dec
in
stc
loope
add
xor
xchg
cmps
enter
mov
shl
lds
xchg
push
fidivr
xor
pop
cmp
push
mov
xchg
pop
or
add
lods
cmps
arpl
je
sub
icebp
sub
jg
sbb
xchg
(bad)
cli
push
mov
out
or
retf
pusha
mov
pop
push
jo
(bad)
test
stos
or
push
arpl
cwde
jecxz
xchg
xchg
push
xor
sbb
pop
jbe
dec
movs
ds
push
push
sbb
mov
out
cld
leave
mov
outs
pusha
mov
into
loope
or
xor
xchg
pop
jg
jp
mov
es
inc
cmc
push
cmps
dec
loope
sub
or
push
mov
and
jle
dec
xor
into
(bad)
xchg
push
fs
ins
jl
rcr
into
pop
push
add
pusha
mov
sub
inc
sbb
fiadd
jb
mov
test
mov
xchg
push
mov
push
outs
add
fwait
ins
test
sub
cs
hlt
or
adc
data16
mov
ret
mov
loope
rcl
stos
mov
mov
jecxz
adc
push
aam
daa
push
mov
cwde
pop
push
xchg
mov
mov
cli
sub
jge
mov
mov
mov
sti
sbb
scas
stos
push
std
int3
fstp
xchg
out
(bad)
in
enter
in
mov
xor
or
cmp
aaa
test
loop
stos
scas
sbb
inc
pop
jo
fwait
mov
lahf
jns
push
jb
mov
xchg
(bad)
fwait
push
jg
xchg
arpl
pop
dec
loop
mov
out
dec
push
cmp
xor
sti
inc
cwde
gs
cld
mov
adc
jp
xor
lods
(bad)
mul
(bad)
(bad)
jmp
xchg
jle
movs
sub
push
jl
pop
fwait
nop
mov
add
xchg
cli
or
dec
fld
pushf
inc
dec
mov
xchg
dec
pop
pusha
xchg
push
jmp
lock
cmp
aad
scas
xchg
arpl
enterw
ret
jnp
iret
pop
mov
pop
sar
jmp
mov
imul
cmp
jp
(bad)
pushf
test
ret
mov
gs
add
add
push
sbb
xchg
popf
sahf
inc
cmps
push
ja
sbb
or
adc
(bad)
jo
ror
sub
inc
jne
push
and
movs
fadd
icebp
sbb
ficomp
xchg
mov
jle
add
adc
jne
cmp
mov
xchg
pop
aas
inc
dec
outs
inc
pushf
mov
sbb
pop
pusha
in
sub
out
or
xchg
adc
(bad)
mov
dec
dec
jmp
push
loopne
pop
sti
inc
pusha
pushf
cs
sar
les
test
and
jp
dec
jl
push
out
shr
bound
pop
lds
cmp
imul
movs
inc
jb
xchg
mov
jl
jb
popf
ds
xor
inc
les
scas
pop
arpl
add
mov
mov
retf
and
inc
inc
in
hlt
mov
inc
out
dec
(bad)
cmp
scas
stos
pop
or
mov
inc
dec
sub
rcr
pop
dec
fcmovnu
fwait
jb
mov
call
shl
mov
cmc
pop
xchg
add
pop
mov
xchg
jns
leave
mov
mov
fnsave
lds
retf
retf
mov
mov
fidiv
mov
or
inc
or
popf
sub
in
push
push
xchg
or
mov
loop
les
sbb
xor
daa
jl
jnp
(bad)
and
popa
loopne
adc
movs
test
sahf
pop
addr16
jl
fistp
pushf
adc
and
xchg
push
addr16
imul
or
in
add
add
inc
(bad)
outs
out
pushf
add
das
(bad)
(bad)
push
into
mov
(bad)
jo
mov
scas
cmps
mov
adc
mov
xchg
ret
in
pop
or
add
ins
mov
jg
pushf
test
test
es
and
or
mov
aaa
sahf
dec
mov
cmp
es
pop
push
xchg
pop
stos
shl
add
cmp
(bad)
les
push
test
xor
dec
ror
aad
sar
mov
(bad)
pop
je
push
pop
shr
bound
jo
repz
call
or
cmp
jne
inc
inc
dec
lock
mov
fcom
fisubr
arpl
xchg
jne
xchg
push
xlat
push
movs
sbb
retf
lods
popa
mov
scas
fs
jo
movs
mov
rep
adc
sar
call
pusha
out
mov
fwait
xchg
and
fs
xchg
jnp
scas
sub
call
aaa
cli
xchg
imul
add
push
xchg
sar
repz
(bad)
(bad)
imul
ins
mov
and
ins
in
mov
repnz
out
xchg
scas
jecxz
sbb
jp
cld
test
xchg
movs
gs
out
mov
icebp
lods
nop
adc
mov
fwait
enter
shl
int3
mov
inc
pop
dec
nop
pmuludq
dec
cmp
pop
cmp
lahf
daa
gs
mov
nop
jge
pop
push
push
(bad)
or
loope
(bad)
sub
scas
pause
pop
mov
dec
sbb
xchg
test
add
fisub
std
(bad)
cmp
mov
fs
or
loope
adc
nop
push
push
mov
fistp
cmps
sub
and
je
sub
arpl
or
fstp
int3
repz
gs
mov
pop
cdq
movs
test
and
xchg
push
jnp
dec
dec
xlat
adc
cwde
cdq
stc
clc
mov
and
fsub
pop
cmps
inc
sbb
data16
ficomp
clc
jp
push
mov
jb
popa
lods
pushf
sbb
and
adc
jg
fcomp
fcmovnb
inc
inc
mov
sub
shl
into
pop
add
xchg
fwait
test
xchg
addr16
out
mov
rcr
cld
sar
or
cmp
push
dec
sti
ret
pushf
jnp
ss
ss
pop
retf
jmp
push
out
pop
jp
pop
lods
test
fnstenv
adc
cmps
sub
cmps
jnp
mov
xchg
push
xchg
mov
jnp
mov
sub
out
mov
imul
and
out
mov
sbb
sbb
(bad)
mov
push
ret
int3
hlt
or
data16
and
ret
inc
jecxz
aas
frstor
call
shl
pop
inc
and
xor
push
enter
leave
dec
mov
mov
and
lock
gs
push
inc
sar
push
std
ins
xchg
sbb
pop
cdq
jecxz
js
inc
popf
aas
dec
sub
add
push
xor
bnd
adc
test
dec
(bad)
out
sub
ds
or
or
daa
mov
ret
out
add
dec
lea
sbb
loope
push
push
or
jbe
das
stc
xchg
pop
les
pop
lods
ins
mov
jne
xor
sbb
mov
fs
adc
mov
test
cmps
neg
mov
icebp
cs
and
shr
aam
cmp
push
dec
push
data16
fmul
movd
std
cmp
cli
mov
pop
retf
enter
mov
out
ins
dec
addr16
das
ror
(bad)
cli
out
int
(bad)
nop
ret
jg
xchg
(bad)
test
xchg
mov
mov
outs
retf
aam
push
sub
sub
inc
xchg
lock
enter
adc
xchg
xchg
pop
into
data16
int
int
gs
lock
addr16
lock
leave
fidiv
pop
sbb
ds
(bad)
dec
dec
int3
(bad)
lock
push
pop
push
mov
les
into
xchg
ja
aam
jmp
ss
xchg
shr
fild
gs
adc
inc
fsub
push
loope
dec
mov
mov
xchg
mov
(bad)
dec
push
lahf
dec
mov
cmps
movs
ja
call
outs
aam
ins
sub
test
in
or
sub
scas
pop
loop
enter
daa
data16
push
pand
adc
or
sbb
push
mov
adc
jne
dec
sar
rol
pop
mov
es
xchg
fadd
push
ss
xchg
loop
inc
out
bound
xchg
sahf
jne
out
aam
movs
push
rol
push
jns
ds
lods
push
stc
dec
(bad)
pop
int3
stos
call
fdivr
cmp
ja
je
pop
mov
mov
and
shl
adc
lahf
sbb
test
mov
arpl
shl
lea
fwait
scas
cmps
cmps
(bad)
pop
fwait
dec
iret
sar
rol
or
in
sbb
mov
push
inc
ins
ds
(bad)
xchg
jne
pop
xchg
pop
cmps
arpl
cmps
mov
dec
fild
call
jo
mov
and
pusha
aas
rol
jbe
push
shl
jns
mov
add
ds
and
pop
ja
xor
mov
pop
repz
mov
inc
dec
xchg
popf
add
pop
jmp
cmp
sub
push
inc
push
ins
xchg
loope
fcomp
sub
and
fnsetpm(287
push
addr16
mov
push
mov
sar
cmp
sahf
nop
jp
icebp
lea
test
sub
or
out
stos
push
(bad)
imul
loope
pop
ret
pop
data16
bound
xor
xor
pop
das
popf
jmp
fsubrp
cmp
loope
cmps
jl
int3
and
cs
push
mov
ins
mov
mov
lods
fcom
sti
cmp
call
or
mov
xor
pop
ror
xor
adc
ja
pop
xchg
shl
and
jg
nop
pop
cwde
xchg
loopne
out
and
cmp
jns
ja
stos
mov
xchg
mov
dec
mov
arpl
mov
aas
int
call
push
enter
setbe
ret
retf
inc
push
push
retf
mov
jmp
das
ror
add
out
adc
out
inc
push
out
dec
cmps
add
xor
ja
lods
pop
rol
cmps
ficom
ja
not
jo
and
aad
jl
mov
call
mov
mov
mov
add
push
push
mov
fild
jno
xor
(bad)
mov
out
cdq
sbb
fs
(bad)
mov
int
pop
scas
lds
(bad)
idiv
pop
inc
xchg
sahf
push
xor
inc
adc
push
fwait
cdq
clc
push
jbe
push
and
in
fstp
mov
sbb
push
js
inc
jmp
or
fcomp
jnp
lahf
ins
mov
mov
mov
(bad)
mov
imul
cmp
jmp
cmp
std
bound
es
jae
ret
push
scas
dec
(bad)
mov
pop
cmps
addr16
ss
fidiv
mov
fsub
test
push
outs
add
aam
jno
lea
push
scas
mov
xchg
leave
ja
fs
rcl
jnp
(bad)
(bad)
mov
sar
sbb
pop
add
mov
shl
mov
in
mov
fistp
sub
mov
mov
adc
and
add
dec
push
mov
pop
inc
cs
enter
push
adc
xchg
pop
dec
rcl
dec
mov
xchg
adc
sar
xor
dec
dec
pop
xchg
mov
int3
adc
mov
arpl
fild
mov
in
and
mov
sbb
xor
fxtract
cmp
retf
pop
leave
pop
jns
adc
retf
out
adc
mov
dec
sub
rcr
add
fcomip
push
pop
das
in
nop
jmp
fiadd
inc
ja
adc
pop
cmps
pop
fbld
inc
in
gs
pop
xchg
push
fld
ds
or
pushf
sub
xchg
push
arpl
fld
mov
rcl
jno
fiadd
fcom
lods
pop
ror
sbb
sbb
imul
int3
imul
in
jne
jle
xchg
push
mov
mov
ret
ret
loopne
inc
ret
lea
das
xchg
scas
movs
loopne
push
test
adc
popf
inc
sub
int
fstp
enter
bound
int
mov
pusha
test
and
xlat
iret
loope
or
cmps
sub
add
aad
fist
jg
nop
jp
mov
inc
sub
xlat
jae
inc
push
xchg
sahf
cmp
dec
sbb
in
add
and
cmp
xchg
xchg
push
or
sub
fst
lea
lds
pusha
jbe
fs
aam
push
sub
dec
or
icebp
(bad)
mov
out
jnp
xchg
jb
test
inc
(bad)
pop
xchg
sbb
inc
sbb
jnp
(bad)
mov
pop
dec
into
pop
xchg
mov
pop
cwde
sub
fstp
push
pop
jb
cmp
jb
fld
shl
outs
fwait
sub
cmp
add
pop
pop
inc
pop
movs
sub
push
in
call
pop
mov
cmp
pop
mov
mov
outs
lahf
and
fiadd
(bad)
loope
jb
adc
add
xadd
jl
mov
cmp
loope
jo
mov
xor
dec
cmp
in
pop
test
into
lods
lods
fs
fisttp
dec
loope
adc
fwait
mov
dec
cmps
jmp
cmp
mov
(bad)
icebp
mov
add
mov
push
cmps
test
fidivr
ffreep
pop
mov
lea
jmp
out
and
pop
mov
mov
test
nop
aas
or
push
setb
add
inc
addr16
mov
mov
lods
les
call
inc
or
dec
ror
sbb
sbb
fist
jb
pop
jle
ss
push
shr
xchg
ss
aas
or
push
into
mov
lahf
fist
std
mov
push
sbb
sbb
fidivr
inc
rcr
xchg
cmp
aam
mov
jnp
sahf
jge
push
pop
in
inc
lea
dec
mov
push
add
gs
loopne
sar
cmp
mov
mov
stc
mov
pop
and
lahf
mov
add
test
sbb
pop
dec
xor
add
sbb
pop
in
sbb
and
add
aas
scas
push
adc
loopne
inc
(bad)
cs
(bad)
(bad)
xchg
scas
aas
stc
jge
ret
dec
xlat
fimul
and
mov
enter
ret
pop
jo
sub
mov
loop
mov
shl
cmps
sub
xchg
(bad)
popa
mov
cld
repnz
jns
daa
adc
das
jmp
push
and
jae
jg
icebp
mov
and
mov
daa
jbe
or
test
sub
xor
loopne
adc
push
outs
push
xchg
xchg
sti
inc
or
xor
sub
pop
cmp
bound
and
dec
mov
ror
xchg
mov
ficomp
test
scas
pop
inc
pop
sub
add
push
imul
inc
aam
mov
mov
scas
iret
lods
xchg
and
mov
and
pop
lods
cmps
ins
mov
xchg
jno
push
mov
sahf
mov
mov
dec
iret
dec
arpl
jnp
ret
sti
sar
cmc
mov
xor
rcl
ror
shl
xor
rcr
mov
push
add
inc
xor
mov
pop
call
sar
mov
dec
push
adc
das
dec
dec
ret
scas
out
ins
rcl
push
pop
cmp
movs
stos
sbb
sar
inc
and
sbb
rcl
pop
not
mov
fild
lods
mov
mov
shl
jnp
ja
fcomp
aaa
ret
test
fs
inc
out
adc
out
mov
fld
lods
lods
retf
das
mov
inc
leave
or
cmp
add
mov
sub
dec
adc
aam
push
or
ja
arpl
mov
dec
fwait
pop
or
in
(bad)
pusha
inc
retf
(bad)
in
adc
dec
outs
sub
mov
out
pop
lods
mov
jbe
push
push
ror
fisub
cs
int3
sub
pusha
cwd
aam
das
xchg
(bad)
mov
mov
cmps
(bad)
bound
rol
dec
mov
inc
scas
in
lds
cmp
fwait
jne
ds
pushf
sub
xor
sbb
cmp
jle
(bad)
outs
or
sbb
dec
push
je
(bad)
int
sbb
int
enter
loope
xchg
lods
dec
movs
outs
call
xor
push
xor
(bad)
sbb
addr16
bound
xor
aas
sti
lods
jmp
mov
push
adc
and
xor
popf
sbb
stos
sub
gs
stos
mov
sub
xchg
push
push
adc
xchg
dec
add
jp
add
inc
clc
mov
inc
data16
push
test
pop
nop
push
mov
sub
sti
pop
out
test
mov
sbb
lock
mov
push
mov
not
into
scas
mov
les
mov
xchg
stos
xlat
cli
jg
aam
cmp
data16
push
fadd
ret
ins
cwde
clc
jle
mov
mov
or
bound
inc
pop
xchg
xchg
pop
pop
repz
mov
and
adc
xor
push
(bad)
sbb
mov
imul
inc
sub
test
push
js
lods
inc
mov
out
imul
jle
inc
xchg
adc
popf
pop
lahf
pop
fsub
jae
dec
in
sub
popa
dec
add
push
ret
mov
lds
int
vpsrad
push
mov
pop
jle
mov
pop
lods
jl
icebp
push
ss
jmp
cmc
int
int3
jno
and
sbb
fimul
dec
std
sar
into
out
pop
jmp
or
inc
ins
das
imul
dec
push
ds
das
into
stc
pop
out
loope
mov
and
adc
cdq
movs
xlat
fsubr
test
and
push
js
cli
(bad)
movs
jle
add
(bad)
mov
lahf
fimul
pop
inc
and
and
mov
push
add
imul
fs
inc
call
adc
enter
mov
pop
inc
inc
add
xor
inc
fisttp
sbb
(bad)
sbb
xchg
push
test
cmp
jae
xchg
(bad)
jl
dec
lods
ja
fnstenv
popa
mov
inc
sub
cdq
jge
arpl
ja
popf
loop
cmp
arpl
jb
je
inc
mov
xchg
xsha1
cmps
push
mov
aam
sti
in
xchg
pop
push
neg
mov
mov
loopne
out
and
test
add
jb
push
call
jne
dec
pop
(bad)
loope
and
mov
and
pop
hlt
or
jo
retf
and
in
jnp
loope
cmp
bound
dec
dec
or
loopne
jb
stos
push
iret
jle
jmp
dec
iret
inc
add
pusha
cdq
arpl
inc
das
mov
mov
pop
out
mov
repnz
cs
jle
xchg
mov
addr16
fnsave
movs
arpl
jg
mov
mov
aad
mov
lock
jo
inc
ins
rcr
mov
lock
dec
fisubr
push
jge
mul
inc
cmps
jb
js
(bad)
push
inc
and
cmps
dec
stc
test
cmc
jb
push
clc
inc
mov
fcom
clc
fwait
(bad)
jle
int
mov
push
ins
pop
jg
mov
bound
loope
scas
push
out
inc
add
lahf
in
mov
aaa
or
add
adc
xor
pusha
stos
test
retf
or
and
push
and
jl
or
cli
xchg
popf
push
sub
pop
(bad)
popf
inc
les
(bad)
in
mov
mov
test
pushf
xchg
mov
in
test
shl
and
cmp
hlt
mov
pop
int
sbb
pop
pusha
cmp
add
aam
xchg
cmp
loopne
ret
jg
inc
pop
int3
sbb
xchg
and
in
dec
mov
shr
and
mov
xor
pop
mov
lahf
push
mov
push
xchg
outs
retf
cwde
aad
jle
les
lahf
repz
ss
push
add
cmp
jbe
and
pop
mov
retf
push
add
mov
cmps
push
push
mov
pop
lods
retf
je
jbe
js
jp
ins
fisttp
fiadd
mov
bound
stc
(bad)
imul
(bad)
jae
ja
mov
sbb
pop
les
xor
fstp
adc
xchg
jl
sahf
ins
and
sbb
xor
(bad)
mov
cmp
iret
push
addr16
sbb
aam
addr16
mov
movs
enter
outs
xchg
jg
pop
mov
sbb
je
ins
inc
fcom
mov
add
cmps
in
je
jbe
inc
adc
sahf
jl
test
pop
or
ja
pop
mov
jbe
addr16
loope
jb
(bad)
mov
in
stos
jle
inc
ret
sbb
loopne
push
sbb
xlat
ja
mov
jecxz
fisub
push
stos
je
dec
push
dec
push
mov
sbb
gs
movs
movs
inc
outs
fmul
cdq
cmps
mov
stos
ret
and
fld
fmul
jne
push
mov
jl
adc
mov
iretw
or
pop
mov
ret
loopne
dec
ja
jae
test
movs
xchg
mov
aaa
or
mov
push
pop
or
iret
xchg
neg
sbb
outs
add
popa
fwait
(bad)
bound
mov
test
inc
pop
jnp
movs
(bad)
lahf
push
retf
mov
mov
fsub
pop
jecxz
push
pop
jp
lds
ror
outs
xchg
sub
retf
mov
es
jp
pop
sbb
pop
cmp
mov
ret
ss
sbb
and
ins
add
in
out
pop
and
cmp
sub
dec
xchg
pop
mov
jmp
pop
stos
shl
loopne
stos
aas
repz
sbb
movs
xchg
and
popf
mov
in
jmp
xchg
dec
jno
mov
movs
imul
call
lds
inc
lock
mov
push
dec
hlt
ins
cmc
(bad)
int3
xchg
test
fimul
(bad)
iret
sbb
cmps
int
outs
cmps
mov
data16
push
push
test
fld
push
dec
ret
or
fimul
shl
add
out
jae
jmp
jge
cmp
(bad)
or
xchg
int3
es
add
scas
maxps
pop
les
pop
mov
loopne
outs
or
and
cmp
sbb
and
xchg
std
mov
lods
xlat
push
dec
or
inc
stos
pop
push
test
sub
mov
test
pop
jno
aaa
cdq
lahf
xchg
(bad)
stc
hlt
add
mov
pop
mov
add
mov
ret
fsub
and
sbb
push
mov
movs
fsubr
out
mov
in
ret
aam
ficomp
push
pop
inc
dec
ins
and
lock
add
fst
loopne
jp
bound
cmps
jmp
aam
addr16
jp
inc
cmp
aam
fisttp
and
lods
jmp
mov
cmp
inc
scas
add
cmps
les
push
jecxz
je
arpl
or
jp
mov
enter
add
push
mov
xchg
ret
push
inc
lods
(bad)
mov
test
(bad)
cdq
push
pop
jmp
daa
cmp
xchg
in
or
fsub
out
and
dec
add
iret
cmc
xchg
pop
push
mov
push
dec
jg
loope
mov
rol
inc
es
aad
push
pop
pop
dec
adc
fistp
(bad)
pop
add
mov
sbb
out
loope
or
xchg
ror
jmp
fdiv
idiv
dec
xchg
cmp
out
fild
mov
sbb
mov
xlat
jno
inc
sub
ret
jno
xchg
leave
pusha
inc
jno
ja
xchg
mov
fxch
inc
jecxz
call
js
shr
add
add
test
fmul
sub
aad
int
push
in
mov
push
daa
scas
push
mov
mov
fwait
jns
push
data16
sahf
inc
dec
std
and
rol
mov
or
sbb
and
imul
mov
xor
fcomp
jno
(bad)
push
pop
dec
pop
mov
or
ret
dec
mov
jb
scas
cmps
out
cmc
gs
jmp
xchg
cmp
cmc
cmps
ror
out
adc
push
adc
and
arpl
cld
lds
cmp
in
mov
pop
repz
inc
imul
xchg
sbb
call
adc
xchg
and
pcmpgtd
dec
jmp
div
sbb
outs
aam
jge
test
adc
rcr
les
xlat
sub
mul
push
ins
fs
into
mov
xor
xor
ror
dec
lods
cmc
aas
ficomp
dec
(bad)
loopne
outs
mov
ins
xchg
cmp
data16
inc
bound
jb
sbb
cmps
ficomp
dec
mov
push
cmps
pop
mov
fnstenv
data16
pop
movs
sub
mov
mov
(bad)
and
and
and
add
les
outs
pop
jle
and
inc
xchg
mov
js
fcom
mov
inc
jne
fld
enter
jns
loope
cmps
mov
addr16
test
or
dec
or
lea
retf
mov
in
and
push
push
loop
in
pop
retf
push
mov
in
add
inc
mov
xchg
sbb
pop
xchg
add
dec
ret
add
sbb
mov
aas
(bad)
fisttp
jecxz
fist
and
jecxz
add
add
sub
xor
xchg
mov
les
push
fistp
mov
repnz
cmp
inc
scas
les
mov
jne
push
or
mov
imul
outs
jle
jae
and
(bad)
pop
in
pop
test
jns
xlat
sti
movs
sub
and
xchg
mov
mov
dec
inc
pop
sub
add
mov
dec
and
jae
enter
imul
jns
movs
mov
xchg
popf
xor
jns
jae
sub
cmp
push
add
call
imul
push
(bad)
cs
jnp
jl
sbb
(bad)
sbb
and
add
adc
xchg
test
pop
cmc
mov
adc
add
inc
cld
pop
js
sti
xor
jg
pop
dec
loope
push
(bad)
imul
call
sub
inc
imul
xor
push
inc
pop
rcl
test
sbb
stos
shl
inc
lahf
push
cmp
fs
xchg
movs
dec
mov
fcmovb
adc
mov
xchg
cld
inc
stos
pop
(bad)
in
inc
mov
mov
sbb
test
dec
push
dec
test
jns
test
push
mov
enter
cld
into
pop
retf
cs
cmp
jmp
in
test
fwait
mov
(bad)
out
mov
cs
movs
jns
pop
test
lods
out
pop
ret
ret
cmc
dec
jns
inc
xor
dec
imul
dec
aaa
add
and
sbb
pop
jno
cwde
and
sub
ds
stos
loopne
fld
dec
into
stos
mov
repnz
pop
cs
stc
xor
test
sbb
test
daa
(bad)
inc
mov
mov
imul
xor
xor
push
mov
adc
ins
hlt
in
mov
inc
push
stos
mov
pop
mov
jb
cdq
pop
jmp
mov
scas
stos
push
and
sbb
addr16
mov
dec
out
jmp
mov
loopne
cmp
int3
adc
push
rcl
pop
pusha
(bad)
pcmpgtd
(bad)
in
ja
movs
(bad)
into
shl
loop
xchg
xlat
popa
mov
pop
jmp
imul
cmps
data16
sub
movd
or
xor
push
xchg
or
sahf
out
add
mov
or
popf
in
and
ins
call
les
je
adc
mul
fwait
sub
xor
and
inc
ja
push
(bad)
mov
popa
imul
ds
sbb
adc
jg
clc
repnz
call
fs
sti
(bad)
in
cli
arpl
pusha
jno
sbb
loope
or
sub
es
jle
retf
xchg
xchg
or
lea
lods
cwde
pop
or
mov
push
popf
xchg
inc
scas
iret
inc
rol
dec
aam
xchg
aam
lods
(bad)
mov
mov
ficom
jno
and
ret
(bad)
stos
call
mov
in
into
cmps
mov
or
call
pop
jo
enter
pop
idiv
mov
mov
xor
clc
sahf
xchg
ins
ins
ret
sub
ins
xchg
pop
call
test
movs
clc
(bad)
push
jno
imul
mov
xchg
call
enter
loop
adc
cmps
(bad)
loope
sub
or
push
arpl
ss
push
and
mov
pop
push
mov
repnz
sbb
add
sbb
rcr
(bad)
push
adc
push
cs
les
jne
or
cmp
fdivr
push
and
call
pop
and
push
inc
or
sub
call
xchg
mov
add
pop
pop
inc
int
loopne
jp
das
mov
pop
push
xchg
fisubr
add
stos
xor
cmps
inc
dec
jl
shl
fldenv
fwait
adc
cmp
jo
stos
jle
add
cs
cmp
cmps
test
repz
bound
mov
sbb
inc
mov
pop
and
repz
inc
rcl
xlat
cmp
jle
arpl
xchg
or
jno
lods
rol
fs
push
push
sbb
jae
xchg
iret
ins
js
inc
hlt
outs
stos
into
jge
aaa
dec
stos
pusha
xor
ins
imul
push
popf
enter
push
jo
inc
fisttp
sub
or
fs
popa
aam
shl
jno
sbb
fild
dec
mov
test
sbb
(bad)
addr16
adc
scas
add
sub
and
pop
dec
mov
arpl
xchg
mov
out
push
mov
dec
arpl
mov
aad
fidivr
push
addr16
ins
test
dec
xchg
xor
rol
or
xchg
cs
cmc
pop
imul
mov
bound
hlt
mov
rcl
pop
and
inc
popa
pushf
clc
pop
mov
pop
test
or
xchg
neg
aam
adc
adc
xchg
xchg
or
gs
sbb
push
loopne
inc
popf
arpl
test
lods
mov
iret
dec
test
adc
mov
xchg
xlat
sbb
pop
pop
test
push
sti
in
std
lds
stos
pop
shl
sbb
lods
and
out
xchg
mov
in
cs
test
sahf
and
test
gs
aad
dec
or
ret
gs
mov
mul
cmp
dec
(bad)
outs
and
in
cmp
push
jge
call
and
mov
in
lds
sub
ins
push
cdq
movs
iret
xchg
dec
xor
ins
(bad)
jmp
out
cmp
fist
sub
in
sbb
cmps
pop
xchg
call
fs
mul
pop
push
in
adc
mov
cld
je
arpl
movs
iret
ds
into
es
je
or
fwait
fwait
jne
jnp
inc
mov
outs
ins
mov
and
pushf
mov
cmp
push
gs
inc
outs
(bad)
dec
bound
nop
int
or
push
pop
leave
(bad)
jp
arpl
pop
xchg
and
or
xchg
push
lods
mov
dec
les
add
push
inc
pop
push
jmp
cmps
cli
adc
ret
sub
adc
hlt
test
mov
icebp
shl
movs
or
mov
add
outs
lahf
retf
imul
and
retf
dec
movs
dec
cmp
retf
outs
xchg
sbb
jecxz
or
mov
out
or
fs
imul
jg
shl
loopne
inc
inc
jb
jae
fwait
mov
je
fiadd
cdq
movs
das
gs
arpl
cmc
(bad)
push
cmp
cs
rcl
mov
in
adc
mov
cmp
cmps
jp
aaa
jae
dec
xchg
jnp
mov
fst
movs
mov
dec
mov
lea
not
call
jnp
gs
mov
mov
jg
clc
jb
jg
mov
call
imul
add
mov
xchg
es
mov
daa
stc
(bad)
xchg
popa
and
cmp
jl
fiadd
mov
sub
ins
jmp
adc
shl
lods
mov
pop
cmp
(bad)
jle
inc
sbb
ins
mov
cwde
loop
out
sbb
xchg
dec
(bad)
rol
and
pop
mov
retf
or
fst
lods
enter
pop
fdiv
mov
fstp
and
xchg
fisubr
jae
test
cmp
inc
and
mov
mov
scas
inc
mov
jbe
rol
sar
xchg
pop
(bad)
(bad)
mov
add
add
xor
mov
or
mov
cmps
push
or
sbb
cs
mov
in
fidivr
ss
test
in
movs
stos
leave
cmps
enter
sbb
cmp
xor
add
das
gs
pop
test
cmp
sub
pop
pop
fadd
in
or
mov
int
hlt
push
jbe
xchg
jmp
inc
mov
cmp
dec
mov
cwde
jns
jne
outs
(bad)
out
test
(bad)
mov
das
gs
xchg
adc
call
les
cmp
cwde
and
pop
arpl
and
jns
jmp
cs
retf
mov
mov
mov
inc
jp
and
mov
jmp
push
sbb
movs
stos
leave
stos
enter
stos
stos
mov
fsub
push
pusha
imul
fisttp
pushf
jle
or
mov
ins
xchg
cmp
outs
out
scas
mov
out
pop
iret
dec
aad
ins
cmp
mov
mov
jp
sti
cmp
mov
adc
fidiv
or
sar
lods
add
jmp
arpl
fidiv
mov
or
inc
jge
std
mov
sbb
cmp
pop
fxtract
jmp
lock
inc
(bad)
push
sub
push
test
fistp
xor
dec
mov
add
and
sbb
cmp
jge
scas
jbe
and
test
gs
xchg
gs
ins
xchg
mov
cmp
cmp
xchg
es
ins
sub
pop
stc
dec
leave
xor
out
clc
shl
lods
pop
sbb
mov
lea
aad
test
mov
daa
je
mov
cwde
mov
sub
(bad)
popa
xchg
out
sti
fist
movlps
mov
add
retf
mov
aam
inc
or
movs
jmp
enter
adc
push
pushf
mov
mov
test
push
push
mov
dec
icebp
lea
pop
pop
imul
stc
xlat
pop
push
test
sbb
mov
out
inc
push
mov
sub
fidiv
shr
adc
and
dec
adc
mov
les
fmul
xchg
cmp
push
mov
mov
sahf
and
adc
mov
in
dec
mov
mov
push
inc
xchg
outs
inc
add
or
jo
adc
repnz
add
push
jle
fsubr
jb
leave
or
jmp
xchg
xchg
jle
dec
and
lds
mov
push
push
sub
fcmovnb
ds
sub
push
cmp
or
inc
mov
ss
mov
nop
gs
nop
fild
pop
stos
sahf
ins
in
mov
or
mov
outs
into
dec
mov
outs
or
inc
jns
or
dec
inc
js
push
pop
mov
push
int
pop
jbe
mov
pop
add
adc
xor
push
dec
sbb
pop
lahf
jg
imul
inc
sub
shl
nop
mov
(bad)
call
cmp
and
neg
hlt
inc
add
sbb
les
add
adc
adc
mov
aad
movs
es
adc
popf
xor
std
(bad)
lds
adc
addr16
in
mov
rcl
sbb
test
pop
mov
movs
adc
xor
cmp
sub
ficomp
scas
add
(bad)
xchg
sahf
lock
outs
jnp
test
sbb
pop
arpl
pop
stos
mov
addr16
movs
cmps
and
lahf
xor
mov
test
ins
aad
arpl
mul
dec
push
dec
je
and
inc
lahf
pop
pop
(bad)
jmp
in
push
fdivr
sar
repnz
test
sub
nop
xor
inc
icebp
mov
mov
je
jl
js
aam
sub
stc
adc
mov
xchg
fadd
in
aad
sar
mov
(bad)
jo
arpl
jae
imul
test
inc
ret
test
xor
add
dec
inc
sub
cmp
cdq
dec
loopne
cmps
std
movs
mov
ins
xor
pop
xlat
out
out
imul
dec
jmp
out
inc
lods
dec
cmps
daa
mov
jle
jp
and
in
dec
jmp
mov
mov
pop
loope
(bad)
lds
add
into
fcom
popa
pop
pop
mov
inc
mov
dec
loop
ret
fistp
adc
(bad)
jns
popa
jp
push
push
xchg
stc
loop
in
jge
(bad)
cdq
push
gs
push
pop
cmp
mov
fstp
dec
and
out
jp
mov
jno
mov
xchg
loop
push
fwait
in
mov
ja
scas
pushf
idiv
lahf
dec
jp
jne
bound
stos
cmps
sbb
push
and
stos
ret
mov
gs
mov
push
or
stc
adc
inc
push
push
or
ja
jecxz
inc
inc
lea
xchg
into
jle
and
mov
dec
dec
ja
lahf
pop
adc
cmp
mov
retf
out
ss
mov
xchg
int3
sub
xchg
hlt
dec
(bad)
cmp
call
pop
mov
and
aas
sub
repnz
dec
or
aas
cmps
pop
es
enter
call
sub
enter
aam
inc
jl
mov
xchg
dec
fwait
call
test
xchg
in
jmp
xchg
ins
punpckhwd
xchg
xchg
push
(bad)
dec
psubb
inc
inc
xor
xchg
cs
enter
jge
jbe
inc
dec
dec
loop
adc
jl
dec
mov
in
into
pop
mov
add
push
cmp
xor
pop
out
addr16
sub
ins
mov
cwde
movs
xchg
and
dec
mov
cdq
cmp
adc
adc
test
in
out
cmp
push
pop
mov
loopne
rcl
push
test
into
jne
dec
push
jmp
mov
jge
mov
mov
in
or
cmp
dec
sbb
sahf
loopne
jg
dec
push
stc
outs
or
xchg
dec
push
scas
push
cmps
xchg
repnz
add
jae
mov
mov
mov
test
inc
cdq
aam
in
xchg
cmp
push
sbb
or
cmp
sbb
push
fwait
repnz
data16
sbb
js
push
cs
push
pop
inc
repz
push
cmc
inc
cwde
fidivr
inc
mov
outs
(bad)
shl
cwde
in
pusha
mov
repnz
push
out
cmp
push
mov
jne
mov
adc
xchg
pop
repz
(bad)
ja
or
ds
arpl
cdq
mov
scas
add
push
movs
and
aaa
or
stc
pop
repnz
aas
ss
ret
imul
out
cmp
push
movs
call
dec
pop
mov
fwait
sahf
cdq
rol
jp
push
sbb
sub
push
bound
adc
shl
jmp
ds
xchg
retf
adc
shl
mov
retf
rcl
inc
jo
loope
push
xchg
inc
push
push
add
cmp
nop
push
test
cmc
add
inc
jmp
jnp
inc
neg
(bad)
add
pushf
mov
mul
sub
aad
cmps
inc
cmp
push
sub
xchg
ja
xchg
mov
mov
iret
jp
and
les
cmp
fisttp
dec
push
js
pusha
lods
and
pusha
xchg
sub
bound
xchg
loop
fcom
outs
lock
lock
std
fld
(bad)
into
xchg
sbb
pop
in
pushf
iret
imul
in
cmc
push
ja
sub
lods
jmp
cmp
xchg
arpl
pusha
push
addr16
fs
jne
jne
mov
cmp
xchg
mov
dec
xchg
and
xchg
pop
mov
push
lds
nop
xor
call
xchg
out
push
adc
aad
jns
xchg
mov
pop
xor
mov
jno
(bad)
jecxz
les
fisub
movntq
fxch
cmp
in
dec
jp
ja
imul
in
sub
and
add
(bad)
hlt
das
push
repz
cmc
pop
sub
mov
pop
mov
nop
nop
popf
mov
inc
inc
(bad)
aam
movs
add
mov
retf
lods
push
inc
test
xchg
inc
out
push
sbb
mov
jge
retf
add
pop
hlt
add
pop
test
push
fs
outs
add
adc
sbb
dec
lea
outs
and
mov
and
pop
imul
fnstcw
jg
sub
and
fist
mov
mov
imul
cwde
inc
mov
adc
rcr
jp
mov
outs
pop
cmps
sub
out
je
sub
bnd
push
lea
push
cs
std
xchg
and
fcomp
ins
(bad)
fstp
data16
inc
inc
and
aas
dec
pop
jbe
push
jmp
scas
inc
movs
dec
ins
fcom
push
xchg
mov
inc
jle
and
lahf
cld
xlat
fcomp
in
or
lea
data16
in
out
call
cli
repz
inc
lahf
sub
jp
xchg
ror
(bad)
fdiv
addr16
ficom
push
scas
nop
ins
inc
xchg
(bad)
int3
mov
inc
sar
popa
bound
mov
imul
cmps
icebp
arpl
add
enter
gs
push
je
xor
loop
xchg
pop
xor
test
dec
loopne
xchg
enter
bound
sub
push
(bad)
imul
es
push
xchg
xor
pop
cmps
sahf
sbb
test
lahf
add
xchg
sahf
in
pop
pop
mov
sbb
dec
ins
xchg
adc
mov
adc
(bad)
xor
push
pop
(bad)
shl
popa
out
es
jg
rep
and
sbb
cmp
scas
cmp
imul
xchg
rcr
mov
mov
mov
pop
imul
mov
mov
dec
mov
retf
adc
js
jnp
in
cmp
mov
mov
adc
or
ins
retf
push
int
inc
in
rcl
addr16
ss
shl
fst
and
test
jle
int3
adc
jg
imul
xchg
xor
mov
fwait
cmps
push
pop
or
dec
and
cmps
sbb
test
movs
repz
pusha
rcr
pop
mov
jo
ret
arpl
mov
pop
mov
pop
or
add
cmp
mov
fs
fcom
aad
fsub
push
lods
arpl
cmp
out
in
cs
inc
sahf
repz
(bad)
(bad)
fidivr
jg
dec
shl
mov
data16
xor
sub
inc
(bad)
loopne
mov
xchg
loop
cmps
fs
mov
fcom
daa
aaa
push
lods
inc
ss
out
scas
in
ficom
jl
push
add
pop
nop
xchg
fstp
repz
xchg
neg
mov
mov
fbld
or
fldcw
inc
pushf
lods
retf
outs
out
sub
mov
push
test
xchg
dec
rcr
leave
sahf
(bad)
mov
fild
je
pop
cdq
(bad)
pop
cmp
cli
xor
dec
fbstp
out
mov
dec
outs
jo
mov
imul
xchg
stos
cmps
mov
sub
jmp
je
sbb
mov
jo
stc
ret
jl
int
jmp
sahf
pop
ins
add
sub
ret
outs
mov
jmp
pop
sub
gs
imul
outs
int3
pop
xchg
movs
mov
cmp
lahf
out
push
inc
pusha
cs
ficomp
dec
lods
mov
jmp
jns
cwde
retf
retf
dec
dec
imul
fs
push
mov
pop
out
cmc
xchg
push
jge
pop
mov
sbb
test
push
xchg
clc
(bad)
ror
ror
push
cmps
add
push
push
out
xchg
(bad)
icebp
movs
xchg
mov
(bad)
xlat
inc
jecxz
jg
fwait
dec
js
sbb
dec
mov
call
mov
outs
call
pslld
(bad)
ins
in
mov
pusha
outs
or
fld
mov
test
jo
aaa
xchg
scas
pusha
and
or
icebp
sbb
nop
sbb
add
bound
jb
in
push
cmp
je
fst
shr
gs
retf
cmp
sub
xchg
ins
mov
test
imul
ja
mov
cdq
jae
xor
add
pop
push
mov
rcl
cmp
sub
scas
xchg
push
mov
cmp
loop
xor
test
movs
cmp
imul
jg
stos
adc
mov
rol
pusha
jl
mov
pop
xchg
scas
test
jmp
push
fistp
int
inc
loope
leave
scas
out
cmps
rcr
repz
ror
movs
jbe
adc
xor
out
fstp
add
add
scas
ds
sbb
or
add
(bad)
push
fstp
push
sub
mov
xor
inc
not
push
push
call
pop
sub
fidivr
add
mov
cmp
ret
mov
cwde
mov
add
inc
xchg
repz
xchg
in
pop
or
mov
pop
das
test
enter
sub
faddp
lds
pop
iret
mov
pop
out
pop
loope
int
jle
addr16
imul
or
pop
mov
push
adc
dec
fist
cmps
shl
mov
dec
in
pop
test
cmp
sahf
cs
push
out
(bad)
mov
cmp
adc
enter
push
cmc
mov
xchg
retf
(bad)
jo
std
push
clc
js
call
sub
pusha
mov
out
jecxz
in
aaa
or
jnp
cmp
jno
mov
out
daa
mov
imul
xchg
mov
fcomp
adc
mov
mov
out
(bad)
push
and
xchg
test
cmps
fisub
retf
in
sub
add
jp
outs
jecxz
fwait
mov
arpl
inc
sub
retf
(bad)
pop
or
or
cwde
sub
out
ja
ins
jmp
jbe
dec
jb
ins
arpl
cmp
xchg
mov
mov
or
cmp
mov
aad
popf
je
arpl
xchg
jmp
push
pop
add
mov
daa
hlt
outs
pop
enter
outs
mov
mov
mov
into
mov
inc
loopne
jae
push
jmp
jo
test
outs
or
ror
mul
pusha
loopne
xchg
out
xor
out
pop
js
dec
mov
jg
sub
adc
mov
push
aaa
ja
arpl
pusha
dec
mov
dec
je
mov
adc
mov
mov
push
jo
int
test
out
repz
in
jle
inc
les
and
inc
les
test
adc
hlt
push
xchg
inc
not
gs
xor
pop
mov
movs
aam
mov
mov
call
mov
or
imul
js
mov
mov
ins
loop
jge
fidivr
lock
mov
dec
mov
mov
stc
movs
pop
fistp
inc
sbb
dec
add
out
sbb
call
loop
gs
ds
(bad)
sub
ret
ret
ret
mov
fild
jns
xchg
and
mov
in
and
adc
mov
jp
clc
hlt
in
fwait
cmp
js
imul
dec
(bad)
mov
dec
and
sbb
sar
mov
add
(bad)
mov
sbb
icebp
jbe
and
adc
or
icebp
mov
cmp
xor
add
popa
imul
sub
mov
or
mov
mov
call
dec
push
xor
mov
cmp
dec
xor
inc
dec
push
out
loopne
pop
cmc
fdiv
jge
lods
sbb
mov
(bad)
pop
jg
mov
cmp
(bad)
mov
mov
mov
jmp
jecxz
shr
fmul
stc
or
in
mov
rol
ret
mov
bound
shr
cmp
adc
xor
jecxz
pop
mov
fnsave
dec
adc
lods
push
mov
sub
pop
dec
les
push
dec
mov
clc
and
in
or
not
pop
clc
pop
call
jp
jge
icebp
inc
js
inc
inc
test
shl
fist
fistp
inc
push
enter
inc
fs
scas
and
fcomp
arpl
int
(bad)
mov
out
add
or
(bad)
lods
sub
pop
fstp
rcr
neg
jecxz
push
into
rcr
pop
add
pushf
ja
clc
scas
dec
push
inc
and
mov
jo
dec
xor
pop
mov
dec
adc
leavew
push
pop
test
call
or
pusha
ficom
mov
pushf
je
cwde
inc
jno
aam
lock
mov
in
push
dec
in
stos
xchg
(bad)
jnp
jmp
and
sub
test
jns
jne
xor
add
push
ja
mov
mov
aam
jmp
nop
mov
jb
gs
and
fwait
repz
xchg
js
jl
inc
jne
cdq
bound
sub
xchg
shl
jge
jmp
mov
test
ret
mov
out
ins
ins
sub
sbb
out
jmp
scas
(bad)
ret
imul
fs
add
jns
push
test
repnz
cwde
mov
inc
test
push
loop
and
mov
sar
aam
xchg
outs
pusha
dec
daa
call
jl
(bad)
jp
int3
out
scas
dec
mov
mov
call
call
dec
jne
outs
fiadd
push
jp
xor
mov
test
ret
js
ror
(bad)
gs
test
inc
sahf
inc
pop
rcr
sahf
(bad)
dec
jge
cli
sbb
xor
repz
aam
cmc
mov
jmp
pop
mov
xchg
in
pop
pop
ins
sbb
jne
les
call
icebp
(bad)
mov
nop
jae
push
push
or
cmp
pop
fwait
gs
test
jmp
sbb
pop
and
push
das
mov
movs
in
pop
xor
shl
or
xor
ret
div
or
test
cli
dec
(bad)
push
(bad)
ror
int3
(bad)
xchg
inc
jb
add
xor
gs
das
mov
out
dec
mov
cmps
test
cmp
out
cmp
inc
jle
jmp
ins
ret
jg
jae
fcomp
movs
stos
dec
outs
mov
callw
add
sbb
push
shl
stos
imul
or
into
out
cmp
sti
add
punpcklbw
movs
cld
movs
jmp
cli
out
jmp
mov
fst
or
les
mov
and
push
adc
sbb
repnz
popf
call
pop
add
or
shl
fdiv
xchg
sbb
or
mov
call
loopne
mov
sbb
cdq
jge
sti
inc
call
(bad)
mov
and
or
mov
aad
pop
scas
push
adc
sahf
lds
xchg
xchg
jns
lock
jne
push
(bad)
pusha
xchg
xchg
jb
jge
enter
movs
dec
xchg
xchg
add
xlat
nop
jmp
ins
ror
push
imul
ins
inc
cld
inc
stos
shr
les
loopne
pushf
fwait
outs
or
fcomp
sahf
pop
test
into
je
stos
jmp
inc
push
pcmpeqw
popa
and
movs
jb
loope
inc
pop
push
dec
adc
popa
jbe
mov
int3
into
pop
jmp
lods
ja
jle
imul
mov
clc
adc
xchg
iret
fdivr
dec
repz
fcmovb
pop
xor
cli
(bad)
xchg
add
jge
leave
lock
or
jns
pop
rcr
shl
sar
mov
xor
cld
mov
pop
fs
fcomp
xchg
(bad)
jbe
leave
fnstcw
(bad)
dec
jno
scas
sub
xlat
pop
ds
xchg
repz
inc
das
sbb
jo
mov
add
sti
mov
pop
mov
push
add
test
mov
cmp
mov
sub
std
push
test
jo
pop
sar
jne
add
in
mov
dec
ret
pop
xor
adc
imul
movs
mov
mov
jnp
sbb
shr
mov
mov
test
mul
pushf
aas
push
loopne
mov
or
data16
les
cmps
mov
sub
or
xlat
cmp
fisub
pop
mov
pop
inc
mov
inc
scas
pop
js
ret
inc
jmp
xchg
in
pop
sub
scas
jnp
jne
cmps
mov
in
jg
mov
mov
dec
out
cmovl
mov
push
mov
inc
fmulp
inc
xchg
adc
add
mov
hlt
xchg
dec
ja
add
enter
out
ret
inc
mov
add
jmp
push
cmp
jo
sbb
je
and
sbb
pop
cmp
test
mov
inc
std
(bad)
xor
xor
mov
add
sub
mov
cmp
mov
sbb
inc
fimul
loopne
sbb
xor
fisub
sbb
enter
jns
pop
inc
jne
adc
push
sti
mov
retf
fild
neg
fs
push
and
mov
jge
cs
dec
ins
fs
scas
popa
mov
aam
in
enter
call
add
add
inc
jbe
adc
inc
int
jecxz
idiv
int3
push
push
add
bound
movups
pop
imul
sahf
mov
(bad)
mov
aad
arpl
cli
cli
sahf
int
idiv
(bad)
int3
jmp
jno
sbb
not
outs
sbb
arpl
aam
adc
mov
out
fild
jbe
je
movs
mov
clc
inc
enter
mov
push
ret
fidivr
or
test
push
inc
inc
ret
cmp
adc
mov
nop
jecxz
sbb
cmps
outs
nop
cdq
push
adc
jg
mov
(bad)
or
jg
sub
test
je
out
fwait
(bad)
pushf
(bad)
shl
mov
shl
scas
rcl
push
mov
fild
(bad)
cmp
push
ret
enter
cmp
(bad)
lahf
mov
movs
cmp
retf
jg
cmp
fstp
lods
fdiv
dec
sub
and
leave
cmp
into
pusha
ins
aas
or
adc
and
data16
cmp
mov
pop
add
cmp
(bad)
fnstsw
push
cdq
pushf
mov
mov
pop
mov
hlt
leave
jmp
das
scas
push
push
pop
and
push
mov
dec
push
out
test
sub
push
adc
jmp
jno
enter
push
ror
cmp
jno
ins
not
jl
retf
pop
call
push
int3
loopne
jb
pop
sub
in
fcomp
stos
mov
pop
mov
inc
pushf
pop
aad
jno
call
out
push
inc
fs
lods
lds
add
dec
int3
cmp
cmp
jb
push
mov
push
imul
mov
stos
mov
pop
popf
iret
out
mov
mov
stos
in
pop
adc
ss
push
fwait
xchg
jae
aaa
sbb
(bad)
cs
ror
push
(bad)
jge
mov
ja
aas
in
stos
mov
inc
mov
sti
mov
jg
push
(bad)
mov
jo
jae
jbe
jns
ss
xchg
mov
pop
mov
xlat
xchg
inc
in
mov
xchg
(bad)
outs
fldcw
sub
add
(bad)
ins
sub
mov
rol
push
adc
cmps
out
lahf
inc
int3
mov
clc
outs
adc
pop
sbb
ins
(bad)
xchg
(bad)
jge
(bad)
je
je
das
(bad)
push
mov
bound
or
bound
xchg
gs
(bad)
ins
push
clc
outs
and
vunpckhpd
xchg
jo
pushf
push
sbb
lods
lea
enter
mov
mov
xchg
xchg
(bad)
das
jb
inc
test
and
ss
fs
(bad)
mov
pop
sub
xchg
pop
arpl
lock
and
daa
add
dec
retf
xchg
ja
dec
call
dec
inc
scas
mov
lods
shl
mov
mov
pop
pop
pop
test
jle
in
add
out
addr16
fisub
dec
sbb
loop
mov
and
inc
sti
je
mov
fdivrp
cli
and
scas
mov
out
imul
ins
jle
jmp
sub
sti
lods
test
cs
jae
addr16
lds
pop
cwde
data16
mov
scas
pop
push
cmc
stos
cld
push
pop
sbb
test
jle
xchg
add
jl
xor
(bad)
imul
stos
pusha
cmp
xchg
es
out
in
cmps
les
mul
sub
test
stos
cwde
das
pop
cmp
daa
loope
aad
fwait
inc
sar
aaa
scas
stos
retf
xor
mov
mov
pop
sar
pop
lods
push
xlat
shr
push
shl
xor
cmp
pop
sti
out
test
and
clc
cmp
addr16
es
push
(bad)
or
jo
cmps
mov
mov
stc
test
xchg
xchg
ret
or
fstp
rol
dec
stos
call
repz
xlat
mov
jb
std
stos
lock
adc
lock
jecxz
mov
push
cmp
pushf
mov
mov
sub
cmc
stc
cmps
scas
jge
push
cwde
mov
cmp
loope
addr16
or
stos
mov
shl
cmp
(bad)
push
fdiv
mov
aas
xchg
and
ffreep
dec
push
loope
imul
push
div
mov
xor
sbb
das
fcomp
pop
sub
stos
popa
cwde
xchg
popa
bound
sbb
add
ficom
icebp
jge
xor
lahf
test
or
ja
sub
or
mov
movs
(bad)
dec
or
push
inc
push
outs
mov
add
add
add
je
mov
mov
pop
xchg
push
sub
mov
(bad)
cmp
(bad)
xlat
out
(bad)
in
ds
pusha
(bad)
xor
cli
hlt
retf
mov
fdiv
jmp
sub
hlt
setae
push
aam
test
jno
jmp
pop
xchg
sbb
sub
inc
je
inc
inc
icebp
inc
inc
(bad)
cmp
int
gs
xchg
(bad)
sbb
mov
fs
pop
jl
ins
shl
or
or
loopne
sar
mov
xor
inc
cmps
cmps
stos
mov
fisttp
rcr
xchg
pop
pop
div
pop
pop
mov
pop
mov
(bad)
ins
cmp
add
jp
xchg
xor
test
jno
push
mov
jae
mov
cmp
test
pop
int
xor
cmc
inc
mov
cld
popf
popf
rol
call
aas
ret
retf
jb
cmps
push
sub
mov
add
pusha
jmp
nop
inc
push
xchg
cmp
sbb
pusha
xchg
ror
jno
push
mov
dec
pusha
cmp
mov
cwde
jbe
loope
les
pusha
mov
and
in
pop
stos
push
call
cs
cmp
call
mov
faddp
inc
shl
mov
dec
bound
sbb
xchg
ins
retf
cmp
and
and
jae
xor
xor
jns
pop
and
add
inc
stos
xchg
pop
cmp
add
cdq
fdecstp
ins
xchg
inc
fsubr
mov
add
pop
inc
(bad)
aam
stos
push
out
nop
js
rol
and
or
xchg
bound
push
push
loope
cmps
es
aaa
(bad)
xchg
cmps
dec
mov
adc
xchg
outs
test
imul
mov
mov
sub
push
xor
das
mov
outs
add
jne
mov
pop
ror
retf
shr
mov
pop
mov
(bad)
test
jo
xchg
sahf
ds
jb
loope
or
arpl
lods
mov
pop
pop
int
xchg
mov
sub
adc
loope
loopne
lds
pop
xor
jno
mov
in
jmp
sbb
hlt
daa
std
imul
or
sahf
das
inc
mov
test
sbb
xchg
sub
xchg
push
pop
pushf
lods
(bad)
test
(bad)
fcmove
jmp
push
xchg
xchg
jecxz
cmp
add
add
jl
pop
sbb
mov
pop
retf
loopne
es
cs
mov
outs
test
rol
mov
adc
jmp
cmps
push
jp
aam
imul
mov
arpl
lock
aaa
add
repz
lahf
xchg
push
int
cdq
dec
push
mov
and
jge
sti
jno
xor
arpl
repz
call
nop
jbe
out
push
xchg
xchg
mov
(bad)
adc
xchg
loopne
lea
pop
push
or
into
(bad)
and
mov
cmp
test
ins
(bad)
dec
fild
iret
xchg
and
lods
ds
sbb
push
mov
pop
mov
mov
xchg
mov
(bad)
add
push
ss
pop
jno
cmp
pusha
inc
xor
ret
test
retf
ror
and
ds
inc
retf
xrelease
jbe
xor
adc
popf
push
cmps
loop
sub
cmp
aad
jnp
push
loopne
es
xchg
dec
popa
push
leave
mov
push
push
xor
shr
ret
lahf
pop
movs
sub
sbb
test
cs
inc
and
or
pop
inc
jmp
dec
pop
push
mov
(bad)
test
push
dec
inc
adc
out
scas
dec
push
and
stos
mov
dec
inc
inc
pop
ins
into
adc
cmp
or
fs
frstor
sub
mov
add
repnz
dec
push
neg
inc
jmp
mov
jecxz
xchg
addr16
aam
out
pop
and
inc
mov
ficomp
inc
mov
call
adc
int
lods
and
ss
add
scas
inc
lds
dec
js
dec
ins
je
jge
pop
mov
jle
pushf
push
(bad)
outs
scas
jbe
popf
jb
int3
push
jp
(bad)
jl
mov
sbb
out
mov
inc
jbe
mov
movs
mov
sti
adc
or
push
sub
sub
sbb
pop
std
inc
xchg
mov
loopne
mov
mov
adc
mov
xor
fdiv
sar
dec
ficomp
sbb
sbb
jne
movs
jmp
inc
das
mov
fnstenv
sbb
enter
imul
or
and
dec
call
jne
rol
mov
mov
sahf
cmp
lgs
popf
sbb
mov
pop
or
imul
outs
nop
xchg
test
scas
pusha
cld
scas
scas
push
in
cmp
push
mov
int3
repz
mov
inc
das
ret
cmp
inc
into
xchg
mov
push
mov
imul
int
push
push
mov
mov
(bad)
pop
sub
mov
ja
jmp
adc
movs
sub
call
sahf
cld
mov
mov
es
ja
call
inc
mov
add
ss
stos
rcr
(bad)
sbb
movs
cld
sub
movs
sub
outs
mov
adc
cmps
mov
inc
adc
aad
data16
retf
jmp
in
dec
cs
jb
mov
push
inc
pop
pop
sbb
jg
aad
push
int3
out
jmp
les
mov
loopne
xchg
and
aam
sar
dec
shr
xor
outs
(bad)
sti
cmps
scas
xor
mov
cmp
jbe
ret
fdiv
add
or
lds
dec
xor
and
repz
sbb
sbb
mov
enter
push
in
fisub
pop
fidivr
les
mov
fisub
ret
pop
test
pop
inc
jl
or
and
adc
cld
pop
cmp
add
dec
inc
mov
std
jmp
xor
mov
cmps
out
xchg
ss
cdq
addr16
mov
stos
sub
aaa
retf
cmp
xlat
mov
xchg
pop
inc
and
fwait
inc
jmp
mov
inc
pop
dec
mov
imul
data16
pop
or
adc
daa
outs
pop
jle
test
repz
or
je
popa
ficomp
scas
test
rcl
ja
fldenv
xor
popa
rcl
pop
mov
mov
add
xchg
inc
mov
(bad)
lds
pop
stos
sub
out
test
mov
into
pushf
add
sub
push
in
mov
out
jbe
(bad)
lods
aaa
add
ds
pop
movs
popf
ffree
mov
(bad)
xchg
pop
test
hlt
sbb
(bad)
imul
xchg
mov
(bad)
loop
or
mov
stos
jge
dec
jb
sbb
ret
mov
retf
dec
or
stos
dec
add
ins
(bad)
mov
pop
cmp
jg
stc
mov
xchg
and
mov
sbb
shr
aad
inc
dec
pop
aas
and
test
jecxz
pop
or
data16
clc
mov
cdq
xchg
fs
inc
mov
jnp
dec
add
enter
cli
retf
xor
xchg
sbb
addr16
imul
imul
adc
sub
stc
jbe
mov
adc
cld
jmp
mov
and
jns
nop
jl
fadd
into
dec
jns
test
jecxz
loope
or
neg
mov
xchg
or
loope
mov
retf
xchg
jmp
jecxz
jle
inc
sbb
dec
or
fdivr
or
nop
pop
push
mov
popf
mov
mov
and
test
mov
xchg
std
(bad)
ds
ja
push
test
cs
test
rol
aas
jne
popf
stos
sub
in
mov
adc
sub
js
pop
push
ins
jno
mov
aad
imul
jmp
cmp
xchg
fld
dec
sar
or
icebp
or
pop
mov
scas
adc
dec
or
leave
js
dec
into
gs
and
movs
ret
(bad)
enter
mov
mov
sbb
nop
mov
loope
mov
repnz
mov
ret
loop
push
sbb
movs
inc
push
pop
dec
pop
push
jnp
cmp
cmps
call
mov
xchg
xchg
push
stc
call
xchg
call
repz
sar
mov
mov
and
test
mov
inc
loop
and
hlt
push
out
shl
mov
jbe
call
push
or
push
shl
loope
dec
mov
cli
data16
sub
xchg
and
pop
mov
mov
int
jmp
cmp
les
push
push
xchg
sbb
aaa
arpl
mov
mov
jmp
jns
repnz
jo
cmc
adc
movs
mov
(bad)
js
xor
pushf
lods
cmc
sub
shl
jle
outs
fld
nop
jne
test
lods
in
test
es
scas
cs
ficomp
lea
test
outs
sub
out
push
push
imul
cwde
mov
xchg
in
mov
in
mov
(bad)
jle
pop
(bad)
xchg
addr16
sbb
sbb
jl
pop
push
shl
inc
mov
jle
fsubr
xchg
dec
cmc
outs
dec
sbb
aas
adc
jb
jecxz
neg
scas
dec
repz
lock
test
(bad)
es
xchg
enter
lea
or
mov
fsubr
and
ret
mov
mov
mov
call
adc
mov
xlat
iret
and
dec
jge
imul
mov
lock
xor
mov
fldenv
in
dec
loope
mov
push
out
jmp
(bad)
sbb
push
pop
mov
jg
xchg
dec
jb
or
bound
aaa
lea
pop
jp
dec
(bad)
mov
sbb
outs
pushw
inc
mov
pop
mov
lods
(bad)
aaa
(bad)
mov
mov
fst
fsub
ret
sub
gs
scas
in
rcl
lahf
(bad)
out
js
outs
mov
jo
mov
mov
or
push
stc
push
and
lods
mov
mov
pusha
pop
sar
and
push
shl
mov
push
mov
iret
mov
out
jl
out
jp
inc
mov
je
rol
stos
and
loop
(bad)
mov
ins
pop
push
repnz
jbe
test
stos
cdq
add
and
stos
in
test
mov
pop
jbe
mov
push
mov
outs
mov
cmp
stc
or
cmp
inc
rcr
add
fnsetpm(287
cdq
xor
mov
scas
fst
mov
cmps
push
ret
jecxz
push
mov
mov
out
movs
or
jnp
sub
fwait
test
test
cmp
and
aas
pop
movs
rol
adc
int3
push
cmp
dec
cmp
fistp
xor
push
dec
pop
cmp
(bad)
fdivr
inc
xor
popf
cmc
lods
xchg
(bad)
aas
fwait
sbb
cli
ror
jle
pop
mov
nop
dec
mov
clc
pop
jbe
ret
addr16
sub
sahf
call
cli
mov
or
sets
shr
sahf
push
(bad)
test
xchg
pop
or
arpl
js
mov
sbb
lods
jns
adc
inc
mov
out
mov
jge
stos
adc
cli
push
das
push
fs
push
aaa
data16
fcmovbe
xchg
jp
inc
stos
pop
and
imul
dec
jae
shr
sbb
pop
out
out
pop
lea
dec
mov
xor
inc
push
pop
dec
mov
inc
inc
dec
mov
nop
outs
pop
and
mov
xchg
popa
xchg
call
stc
mov
outs
test
pushf
push
push
nop
dec
mov
mov
jg
ins
in
cmp
mov
cmp
dec
pop
push
add
inc
dec
(bad)
xchg
mov
jmp
mov
pop
add
cmp
jmp
scas
cwde
cld
push
and
sub
inc
cmp
jns
lods
stos
aam
xchg
mov
lahf
outs
add
mov
outs
jmp
cld
arpl
jo
jb
rcr
call
aas
xor
cs
push
loope
jne
or
shl
pop
cmp
sub
sbb
ja
mov
xor
push
cmp
mov
dec
push
les
jae
ins
cmp
add
fild
scas
sub
mov
out
xor
xchg
sbb
jmp
fsub
mov
iret
movs
rcl
xor
fs
pusha
jo
dec
sub
lahf
dec
ja
popa
inc
scas
xor
(bad)
xor
and
dec
xor
push
test
inc
loope
inc
and
mov
out
leave
into
mov
xchg
cmp
mov
aas
sub
pop
cmps
pop
lds
in
push
ret
ds
gs
inc
inc
pop
js
dec
cmp
push
pop
(bad)
mov
jbe
lahf
pop
fldenv
rcl
jl
push
mov
sub
push
xor
or
xor
ret
in
movd
mov
pop
or
jle
cli
and
xor
pushf
mov
pop
jmp
add
push
pop
fld
dec
mov
dec
aad
cmps
pop
xor
int
inc
pop
mov
aas
sbb
movs
mov
xor
fisubr
mov
movs
add
arpl
add
fld
lods
scas
fs
daa
retf
sbb
jp
push
fcmovnu
inc
stos
and
retf
iret
hlt
les
push
and
mov
cmc
jae
test
jae
fwait
lds
push
fwait
jmp
sub
xchg
jb
rcr
daa
jbe
lahf
pop
push
cmp
jmp
inc
std
popa
ja
les
push
clc
jae
data16
or
xchg
idiv
lds
cmps
les
sub
fistp
sub
cdq
inc
pop
or
pop
jle
mov
adc
mov
loop
mov
imul
idiv
sbb
pop
and
cmp
push
jae
pop
mov
xor
rol
rcl
lock
mov
pop
jle
rol
and
std
pop
xchg
mov
mov
imul
clc
iret
aas
cdq
retf
dec
int
cmc
popa
in
mov
mov
inc
fs
outs
out
shl
push
push
out
leave
aas
leave
in
add
mov
cld
or
repz
or
cli
scas
stos
shr
sub
sbb
stmxcsr
or
mov
(bad)
jno
pusha
dec
mov
jae
jl
mov
mov
or
pop
fsubr
pop
add
cmp
daa
mov
(bad)
icebp
or
sbb
inc
or
loopne
inc
cwde
inc
xor
dec
xor
outs
aas
dec
sub
adc
jge
(bad)
jmp
jge
xchg
movs
adc
push
popf
or
jecxz
sub
dec
aam
mov
jl
stc
stc
(bad)
push
hlt
mov
movs
aad
jmp
mov
out
aaa
sub
fstp
pop
mov
cmc
hlt
psrld
push
loope
xchg
cmp
inc
push
setae
mov
xchg
out
mov
fwait
adc
cmp
dec
and
jecxz
inc
(bad)
pop
shl
out
and
ret
shl
in
cmp
mov
push
int
fistp
repnz
data16
icebp
adc
or
and
mov
test
leave
arpl
or
jbe
sub
icebp
stos
jle
mov
push
add
ins
lahf
hlt
or
hlt
xlat
jnp
es
lea
pop
test
int3
xchg
aad
and
xchg
stos
adc
fs
pop
imul
fist
cmps
and
ret
mov
mov
cmp
ret
add
mov
mov
sub
sub
or
shl
jae
dec
inc
or
mov
cwde
fld
push
sub
iret
or
dec
mov
outs
sbb
xor
cmp
int
or
test
test
std
xor
fsubr
dec
push
jns
(bad)
push
das
jp
mov
inc
popa
jge
push
shl
ret
shl
outs
aaa
ds
mov
pusha
sbb
loopne
fwait
mov
xchg
pop
cmp
sub
mov
push
push
pop
inc
retf
mov
ja
sub
aas
cmp
test
xor
iret
movs
xor
mov
jbe
pop
jno
popa
ret
imul
pop
in
(bad)
and
dec
cmp
push
mov
retf
mov
cmp
pop
mov
sbb
int
inc
and
mov
jp
sbb
pop
xlat
jo
es
ss
mov
int3
xchg
imul
pop
enter
bound
aam
inc
cdq
inc
fistp
aaa
push
(bad)
inc
leave
scas
cmps
loop
sahf
rcl
popf
adc
loope
leave
outs
jmp
jo
mov
mov
push
(bad)
fcomp
rcr
fwait
pop
xor
call
lods
dec
pushf
pop
and
outs
popf
jno
jbe
ds
popa
lahf
aas
mov
ss
inc
imul
fld
cmp
gs
repz
out
ror
fsub
out
jmp
xchg
push
pop
in
mov
or
mov
out
das
dec
pusha
and
push
mov
mov
dec
pop
jmp
pusha
daa
(bad)
pop
pop
sbb
jo
jne
xchg
xchg
ret
xor
inc
inc
(bad)
push
pop
fnstsw
repnz
push
inc
outs
repz
and
add
push
mov
cmps
rcl
mov
push
or
push
dec
sub
pop
adc
dec
imul
pop
mov
enter
loopne
dec
sbb
xchg
add
and
call
ins
sbb
cmps
mov
push
jnp
shl
jge
mov
loope
(bad)
add
pop
test
fwait
pop
cdq
mov
(bad)
jecxz
xchg
cmp
jae
and
dec
inc
ds
push
xchg
fwait
test
aad
push
mov
or
pusha
adc
push
cmps
retf
test
mov
stos
push
jge
test
inc
pcmpgtb
test
sbb
or
lea
js
pusha
fisttp
imul
sti
sub
add
outs
pop
arpl
cmp
sbb
in
pop
mov
push
mov
ds
fwait
in
les
cmp
dec
xor
xor
je
push
jne
jg
arpl
ds
adc
inc
sub
inc
push
mov
lea
cld
and
cmp
scas
aas
cmp
arpl
or
pushf
(bad)
ins
jno
and
mov
scas
pusha
adc
sahf
ret
and
clc
cmps
xchg
(bad)
xor
mov
dec
movs
adc
inc
ret
repnz
dec
ss
sbb
xor
mov
(bad)
imul
push
xchg
inc
movs
dec
xchg
inc
cmps
cmp
leave
sub
dec
adc
cmp
jbe
cmp
fs
add
test
push
movs
mov
pop
push
rcl
push
ins
outs
arpl
push
xor
pop
add
fs
arpl
sub
pop
lods
dec
adc
push
movs
scas
into
xchg
mov
inc
rol
movs
loopne
sub
shr
outs
cs
inc
mov
ins
push
mov
fld
gs
popf
and
mov
push
mov
sub
or
enter
mov
sti
xor
jae
adc
fcmovb
in
rcl
mov
das
out
mov
cmc
shr
jo
mov
(bad)
sub
(bad)
mov
lds
aas
dec
pop
xor
sbb
pop
sub
int
cs
cmp
push
inc
xor
pop
xor
mov
mov
(bad)
cli
adc
pop
repnz
loop
shr
mov
aam
test
les
ss
out
mov
ins
mov
sar
outs
cmps
dec
sub
in
mov
sbb
push
shl
xor
aas
pop
mov
lds
mov
lahf
or
and
shl
leave
mov
push
cmps
cmp
xor
js
xchg
xor
pop
enter
mov
sbb
mov
(bad)
icebp
cmp
ds
aad
push
dec
sbb
cmp
sar
mov
(bad)
imul
fsub
ins
jbe
sub
dec
dec
xlat
or
push
push
test
inc
mov
adc
mov
ins
push
fwait
push
add
call
mov
ret
js
leave
push
pop
lods
add
(bad)
jg
(bad)
mov
or
push
mov
push
fild
(bad)
call
shl
aaa
stos
pop
lods
(bad)
stos
pusha
add
inc
sar
jge
fnstsw
inc
and
and
daa
retf
mov
jnp
rcr
lods
pop
or
les
loope
rol
push
fiadd
push
push
ret
loope
lahf
int3
rol
pop
(bad)
xchg
dec
or
ret
cs
cmp
pop
pop
pop
lods
ret
dec
add
in
loope
fadd
add
fidivr
mov
fwait
or
loopne
clc
retf
mov
sbb
mov
push
pop
adc
pop
push
lds
fwait
sub
dec
sar
pop
inc
xor
adc
(bad)
addr16
dec
imul
fisttp
jg
mov
push
sbb
xchg
loopne
jle
mov
lea
ins
aad
sar
stc
sbb
xchg
or
mov
les
push
mov
push
iret
sar
loopne
jbe
scas
add
pushf
sahf
bound
sbb
jne
pop
adc
popf
mov
mov
fnstsw
mov
sub
jnp
and
(bad)
and
cld
push
les
out
jg
cwde
hlt
out
lea
cmovb
cmp
push
les
ficomp
and
xchg
retf
inc
push
xchg
pusha
sub
ja
leave
ins
mov
int3
dec
scas
(bad)
(bad)
mov
(bad)
fnstenv
dec
push
mov
bound
dec
aaa
and
scas
xchg
(bad)
adc
ret
retf
stc
(bad)
ins
xor
iret
popf
jns
sti
jl
fs
ja
mov
jmp
in
scas
or
fcomp
fisttp
clc
loopne
push
add
mov
les
scas
xchg
xchg
inc
loope
mov
cs
mov
sub
aas
js
stos
call
cmp
xlat
adc
gs
lahf
es
xchg
push
pushf
jmp
or
imul
fcom
ins
adc
lods
imul
pop
dec
outs
aam
(bad)
pop
pop
lods
js
ds
psadbw
fsubr
lods
ja
(bad)
pop
inc
sbb
into
push
push
mov
xor
dec
in
int
ds
aam
xchg
lea
cmp
mov
int3
mov
pop
mov
xchg
int3
mov
jge
mov
leave
inc
xchg
ins
aam
addr16
or
iret
fwait
cmc
pop
xchg
xor
jnp
fcomp
out
add
mov
sub
iret
mov
dec
cwde
into
imul
jo
inc
jl
sub
xchg
push
fimul
mov
pop
fwait
adc
push
xchg
add
pop
pop
outs
leave
pop
pop
xchg
pusha
js
dec
ret
scas
pop
mov
pop
call
jecxz
adc
cwde
push
sub
mov
shr
movs
dec
dec
stc
jmp
aaa
pop
dec
sti
call
popa
test
jmp
ss
frstor
imul
xor
pop
fisub
ja
jmp
(bad)
inc
ret
pop
mov
mov
sbb
je
out
inc
call
jnp
imul
adc
pop
pop
lds
adc
dec
popf
adc
sub
inc
rcl
xchg
int3
cmps
dec
push
push
ins
sub
rcl
mov
cmp
xchg
jecxz
mov
mov
mov
xor
icebp
mov
or
dec
or
ins
mov
aam
mov
in
inc
in
test
sub
arpl
mov
xchg
test
cdq
test
int
mov
loop
cmps
xchg
mov
push
mov
xchg
leave
push
push
pop
(bad)
and
inc
lds
pusha
inc
pushf
mov
mov
inc
pop
jp
dec
mov
cdq
xor
push
bound
outs
cmc
addr16
movs
leave
(bad)
pop
jno
fucom
pop
dec
mov
jns
sbb
fiadd
imul
cs
cmp
mov
fdivr
or
into
idiv
cmps
mov
sbb
mov
inc
jns
out
inc
pop
enter
mov
rcr
js
not
pop
pop
pop
add
nop
mov
xchg
push
xchg
dec
mov
mov
sub
mov
movs
cs
mov
cmp
mov
aam
enter
jo
imul
xor
(bad)
add
mov
mov
sub
fst
fist
mov
mov
call
(bad)
xchg
jle
aas
cmps
xor
adc
stc
movs
dec
test
mov
and
push
ffree
xchg
test
cmp
leave
mov
sub
cwde
inc
daa
or
mov
das
movs
mov
test
adc
pop
and
or
jp
(bad)
arpl
xchg
or
rcl
xchg
pop
and
dec
aas
scas
and
fwait
aam
les
inc
(bad)
enter
pop
xor
test
inc
jno
daa
imul
push
xor
mov
xchg
or
push
loope
pop
jge
pop
mov
out
dec
or
sbb
loop
inc
test
(bad)
ins
inc
jmp
pop
fld1
scas
mov
shl
mov
imul
pop
std
gs
jnp
aad
mov
mov
lock
fadd
popf
aad
pop
leave
(bad)
mov
and
dec
jle
gs
dec
mov
pop
mov
add
icebp
pop
fidivr
movs
scas
or
xchg
sbb
out
fld
mov
data16
jbe
repnz
shl
outs
pop
inc
punpckldq
dec
(bad)
cmp
mov
sub
jns
jecxz
js
cmp
imul
movs
lods
push
popa
neg
pop
lods
and
sbb
cwde
add
cmps
popf
cmp
inc
int
mov
cmp
stos
sub
xor
std
les
mov
xor
inc
in
adc
fcomip
jno
paddusb
repz
pop
retf
call
and
mov
jnp
fild
or
out
add
enter
mov
jmp
imul
mov
xor
pop
xchg
and
addr16
std
popf
cli
into
into
xor
mov
fsubr
push
fisubr
add
push
in
xchg
pop
push
(bad)
mov
arpl
ins
mov
loop
jae
cmp
add
add
lods
cmp
enter
xor
shr
fcmovbe
inc
mov
data16
ret
aas
aaa
push
mov
xchg
jno
ficomp
icebp
pop
push
jg
cmps
sahf
jg
push
jns
xchg
fadd
jnp
int
mov
pop
sub
mov
add
dec
(bad)
stos
mov
mov
fsubr
or
fdivr
les
(bad)
add
jmp
hlt
dec
add
cmc
popa
sub
(bad)
jecxz
xchg
lahf
test
je
sbb
push
movs
mov
xchg
push
adc
inc
adc
mov
rcr
dec
repnz
ins
in
add
cmps
lock
inc
ret
ror
arpl
shl
jmp
ins
jne
adc
repnz
in
(bad)
adc
mov
rol
fbstp
xchg
jnp
push
sahf
test
pop
outs
(bad)
mov
jmp
push
xchg
jbe
cmps
jmp
pusha
ds
dec
and
lods
int3
add
iret
push
mov
bound
mov
or
cmp
iret
jae
not
add
movs
sbb
out
mov
inc
xor
add
mov
(bad)
nop
mov
mul
popa
idiv
data16
sub
cmps
mov
and
pop
and
rcl
fcomp
cmp
fwait
push
rcl
xchg
movs
repz
ins
mov
jno
jecxz
ja
dec
mov
add
inc
std
call
add
cmp
sbb
ins
xchg
or
push
xor
data16
jo
daa
cmp
repz
packuswb
icebp
std
mov
add
mov
push
xchg
xchg
pop
leave
addr16
das
(bad)
mov
add
inc
nop
xchg
dec
sbb
mov
adc
jge
rol
mov
(bad)
cld
test
aad
fwait
ror
pop
jmp
mov
dec
and
mov
pop
enter
movs
adc
sub
imul
or
inc
icebp
inc
rol
cmps
enter
(bad)
dec
imul
les
test
lds
movs
add
test
jb
popa
pop
inc
mov
mov
jne
dec
push
mov
mov
jg
sbb
mov
jmp
icebp
inc
mov
xchg
push
mov
pop
mov
xchg
xor
pop
fbstp
pop
push
add
imul
lods
push
imul
fmul
out
(bad)
jg
fidiv
iret
pop
lods
jge
(bad)
pop
mov
xchg
ret
jg
call
fisub
lock
xchg
(bad)
push
rcr
jle
mov
mov
fimul
mov
xchg
sub
enter
jae
pushf
cmovg
push
movs
repnz
add
ins
xchg
cdq
jp
adc
aas
and
or
cmps
shl
xchg
pusha
jp
daa
es
dec
loope
lahf
xor
pop
jo
xchg
ins
shl
(bad)
jmp
mov
inc
into
jecxz
cwde
dec
cmp
push
and
(bad)
mov
mov
pop
xchg
div
lds
fwait
or
ds
pop
jmp
(bad)
es
out
les
out
aam
jge
cli
add
clc
cmc
mov
stc
pop
sbb
push
lea
mov
cmp
mov
jp
test
into
(bad)
rol
inc
adc
mov
jbe
pusha
push
fwait
xchg
mov
test
mov
xchg
cmps
mov
push
scas
adc
sub
vshufps
jne
pushf
mov
dec
in
jo
jecxz
sahf
sti
fnstcw
jg
(bad)
push
inc
sbb
inc
and
imul
sar
int
movs
addr16
add
push
arpl
lahf
call
jns
test
enter
mov
fisttp
ds
in
push
test
mov
pushf
ror
or
mov
dec
mov
xor
aam
jbe
addr16
or
cmp
pop
movs
push
mov
dec
or
out
or
mov
mov
mov
mov
fs
js
pop
enter
cmp
sub
mul
cmp
mov
add
ret
call
pusha
dec
jp
bound
mov
xchg
push
lods
inc
test
shl
dec
sahf
adc
push
add
mov
push
push
xchg
pushf
xchg
hlt
push
xchg
mov
lahf
aas
retf
outs
jle
xchg
mov
mov
or
lods
aad
ins
outs
fcom
pop
rcl
(bad)
outs
call
and
dec
adc
aas
data16
fwait
ret
ins
add
push
mov
jns
and
ins
and
adc
mov
sub
gs
pop
outs
cmp
jne
dec
cmps
cmps
cli
mov
cmp
test
ss
(bad)
jp
addr16
mov
lods
add
sti
and
test
jnp
jnp
mov
ror
pop
jns
mov
dec
push
daa
mov
inc
aad
lock
out
inc
adc
fcomp
push
xchg
cmp
stc
icebp
stos
or
pusha
xor
sbb
dec
dec
icebp
loopne
mov
es
push
outs
cmp
jp
mov
cwde
outs
pop
(bad)
mov
in
ds
in
rcl
adc
sub
mov
adc
mov
xchg
pop
out
xchg
movs
jnp
inc
push
sub
add
sar
sbb
inc
icebp
push
mov
mov
div
push
pusha
jbe
jno
aas
pop
push
xchg
mov
lock
ret
scas
ins
sub
xchg
ficomp
ins
mov
ds
cdq
out
dec
fidiv
mov
mov
fwait
int
sbb
mov
cmps
clc
push
cld
pop
add
movs
jne
inc
cmp
mov
ret
jae
cmp
add
loope
lea
popa
mov
mov
push
movs
mov
fisttp
jns
push
mov
aas
jb
push
add
adc
nop
lds
inc
das
add
fmul
inc
mul
test
pop
mov
aad
cmp
xchg
dec
sub
repz
sbb
pop
sub
fbstp
mov
js
mov
lahf
imul
aaa
and
pop
pop
or
movs
push
cwde
bound
mov
sub
rol
pop
xchg
movs
push
add
and
repnz
rol
ss
adc
mov
es
add
div
dec
pusha
shl
pop
sub
js
(bad)
gs
and
dec
shl
lea
frstor
scas
inc
in
jp
pusha
fiadd
sub
or
dec
push
cmps
movs
push
xchg
mov
js
fs
fld
mov
inc
push
mov
cwde
mov
cld
retf
xchg
inc
jg
mov
lahf
aam
push
pop
(bad)
mov
add
cld
nop
dec
stc
ret
push
inc
add
push
data16
xchg
and
and
dec
inc
mov
out
jecxz
fcmovnb
push
add
cmps
mov
inc
cmps
and
pop
and
mov
out
dec
mov
cmp
pop
cmp
xchg
push
std
movs
mov
fs
mov
fnstenv
pusha
jecxz
ror
lahf
or
aam
jnp
(bad)
dec
mov
or
jbe
cs
push
jb
sti
imul
sub
mov
pop
adc
movs
ret
not
xchg
xor
jns
fdiv
stc
mov
es
leave
dec
xor
clc
push
mov
adc
cmp
test
jg
movs
xor
outs
(bad)
cli
ins
rol
iret
pop
(bad)
(bad)
pop
jle
test
or
cmps
sub
sar
pop
(bad)
sahf
or
dec
dec
shr
aam
mov
sub
idiv
mov
int3
cwde
adc
in
call
inc
xchg
dec
test
jno
lods
ins
out
call
call
jb
sbb
nop
xor
ins
mov
push
inc
jne
pop
xor
pop
or
mov
push
dec
fcomp
mov
fstp
stos
mov
push
scas
mov
inc
inc
push
dec
mov
arpl
pusha
leave
sub
mov
clc
jno
sbb
outs
dec
or
pop
add
es
sbb
mov
mov
xor
push
loopne
out
aas
mov
jnp
jo
pusha
sbb
rcl
inc
loop
sbb
dec
mov
pop
lahf
xor
and
out
outs
mov
fwait
push
and
jmp
pusha
leave
rcl
pop
mov
or
js
test
sub
sahf
mov
cmps
push
push
lods
fstp
adc
jo
repnz
push
addr16
add
pop
cmp
mov
mov
bound
xchg
enter
mov
inc
push
and
scas
cmp
xor
test
push
ror
call
scas
push
mov
xchg
rcr
icebp
cmp
dec
sub
stos
mov
test
cmp
pop
data16
dec
and
in
sub
sbb
xchg
xor
lods
and
mov
jno
pop
les
jbe
out
jo
into
js
mov
push
je
adc
dec
imul
sbb
out
test
mov
and
xor
mov
push
scas
es
push
(bad)
mov
xchg
dec
pop
xor
(bad)
fcomp
(bad)
mov
fs
xor
pop
push
adc
mov
sahf
out
mov
(bad)
leave
xchg
push
mov
in
ret
(bad)
aam
movntq
mov
xchg
inc
fisttp
mov
mov
jae
in
sar
fwait
adc
fnstsw
imul
mov
cmp
pop
xchg
adc
test
ins
leave
(bad)
leave
shl
and
lock
pop
loope
sbb
mov
dec
xor
mov
xchg
mov
push
sub
adc
mov
ret
or
ja
xchg
mov
add
adc
outs
ja
jne
shl
scas
repz
jb
pop
mov
add
loopne
out
das
add
(bad)
xchg
mov
cmps
loope
fsub
and
jns
in
adc
sar
inc
mov
sub
jecxz
pop
mov
mov
adc
arpl
push
mov
rep
mov
stc
push
cmp
jle
add
shr
fst
or
popf
xchg
dec
int3
pop
pop
xchg
mov
fsubr
add
mov
pop
popa
pop
outs
dec
retf
pop
cdq
pop
scas
pop
stc
test
pop
and
out
mov
jle
mov
test
cmp
xchg
sbb
mov
dec
out
pop
xor
ins
addr16
mov
(bad)
jne
in
and
push
je
popf
ret
mov
ret
pop
jno
pop
lds
les
mov
fwait
mov
(bad)
aam
ror
sub
inc
pop
out
div
cs
adc
jle
sub
daa
aaa
ja
aam
ficomp
call
mov
inc
fs
call
dec
pusha
mov
sub
in
mov
and
fdivr
sbb
add
fimul
sbb
cmp
rcl
out
jb
imul
sahf
int
xchg
cmps
xor
fidiv
iret
not
pop
or
fisttp
and
mov
push
movs
xor
les
mov
xor
mov
cmp
leave
cdq
imul
mov
in
retf
jbe
mov
and
mov
(bad)
(bad)
push
mov
sub
lods
es
lods
adc
lods
int
imul
xchg
aad
inc
ins
mov
dec
xchg
das
push
jge
fcmove
popf
push
sti
sbb
mov
test
test
enter
imul
arpl
ficomp
sbb
xchg
mov
ror
(bad)
pop
outs
test
lea
cmps
jge
mov
test
mov
dec
ficom
int
mov
xor
xor
test
das
mov
int
jge
cmp
jg
inc
mov
fsubr
push
push
test
je
(bad)
int3
in
lods
jno
xor
scas
dec
inc
or
xchg
jns
pushf
cli
neg
(bad)
pusha
sub
mov
jns
mov
outs
imul
xor
mov
xchg
ret
push
popa
adc
cmps
in
lock
ja
pusha
lahf
jae
icebp
xchg
aam
test
mov
sti
xchg
push
mov
ror
(bad)
scas
pop
mov
jg
xchg
cmp
mov
lock
fidiv
nop
lea
add
rcr
icebp
imul
push
(bad)
dec
jb
pop
dec
scas
and
(bad)
scas
movs
push
rcl
push
dec
inc
adc
aaa
je
push
dec
jns
add
sub
dec
pop
stc
mov
int
outs
pop
cmp
push
cmp
leave
test
jmp
aas
retf
jg
ja
loop
xchg
sbb
jns
adc
and
or
in
aas
inc
push
or
call
mov
fild
(bad)
adc
pusha
mov
inc
mov
inc
ror
retf
mov
cld
mov
push
adc
enter
jne
inc
int3
jo
hlt
ss
arpl
ficomp
lods
cmp
aas
lds
xor
jae
scas
cmp
sbb
stos
mov
arpl
cld
push
aaa
fdivr
(bad)
(bad)
jle
fcomp
adc
mov
cmp
mov
dec
cmps
out
or
loopne
imul
sbb
sar
xor
mov
stc
(bad)
adc
mov
shl
cdq
push
adc
pushf
icebp
scas
sbb
sub
not
scas
test
lea
cmp
push
loopne
fcmove
les
fld
mov
push
xchg
inc
fidivr
cdq
ins
jne
pop
fmul
mov
dec
adc
fist
xchg
adc
test
in
retf
rcr
xor
sbb
repnz
callw
or
push
xchg
retf
inc
add
cmp
in
out
or
pop
cmp
xchg
stos
aam
xchg
bnd
jle
cwde
jg
add
jmp
aad
shl
mov
adc
or
mov
arpl
test
movs
push
push
cmc
fadd
mov
or
fidivr
mov
mov
clc
test
or
mov
jge
test
pop
xor
mov
fild
push
add
pop
or
mov
inc
aam
aad
hlt
lods
push
ins
in
mov
cmps
mov
ins
(bad)
stc
ins
mov
(bad)
xor
cmp
dec
outs
push
mov
pop
fisttp
adc
xlat
test
jmp
sbb
and
cmp
out
dec
mov
or
mov
ins
sahf
sbb
test
test
sub
pop
or
int3
dec
jmp
loop
fld
dec
jno
aad
ja
fimul
lock
test
add
bound
retf
and
movs
mov
and
push
xchg
aam
movs
dec
sbb
and
pop
mov
jnp
nop
add
daa
mov
mov
ss
loopne
adc
dec
xor
cwde
retf
jmp
fucomip
push
push
dec
sub
push
xlat
loop
cli
jae
dec
push
sub
push
cmps
(bad)
mov
mov
popf
int
pop
xor
ds
adc
dec
movs
push
mov
loope
jb
and
mov
jle
xchg
cmp
(bad)
pop
mov
outs
dec
pop
(bad)
and
pusha
adc
dec
imul
xor
imul
jns
dec
inc
inc
outs
xchg
sub
sub
sub
mov
ins
and
mov
mov
push
jmp
pop
sbb
fucom
inc
(bad)
aam
or
cmc
mov
loopne
push
pop
inc
movs
jmp
(bad)
imul
popa
xor
das
fs
jg
fcomp
ffreep
jo
jl
js
mov
lods
jl
add
jmp
sbb
in
jl
cld
ret
stc
jb
clc
fsub
or
add
inc
push
pop
jl
add
jle
or
cmps
pop
dec
es
call
imul
in
xor
out
push
test
(bad)
pusha
and
in
mov
mov
mov
jl
sub
jecxz
lea
pusha
iret
push
mov
push
or
rcl
fisub
adc
pop
adc
pop
pop
sub
cmp
jno
nop
mov
mov
pop
cmp
call
push
retf
pop
mov
lods
jge
add
push
and
add
push
and
mov
jle
sub
lahf
mov
push
xchg
cmps
add
xchg
adc
(bad)
fcom
cmp
leave
fs
jmp
or
jnp
jmp
cmp
sub
and
mov
mov
and
imul
mov
ja
test
in
jae
sub
mov
xchg
test
call
lock
inc
imul
outs
inc
fsub
ss
push
rol
lods
out
daa
mov
imul
pop
dec
outs
repnz
or
in
adc
cdq
das
xor
mov
pop
xchg
fimul
mov
or
mov
fiadd
ret
sbb
outs
inc
cmp
dec
inc
or
sti
jmp
cmp
stos
daa
pop
xchg
cmp
xchg
xor
out
push
das
sbb
ret
enter
pushf
(bad)
int
and
movs
or
mov
pop
pop
xor
jmp
adc
out
cmps
jmp
sub
add
jae
or
(bad)
into
sti
fxam
push
in
mov
(bad)
cmps
xchg
pop
ss
test
fcomp
lock
popf
push
sub
sub
adc
xor
jne
sub
mov
jae
out
sbb
add
push
sub
outs
mov
add
xor
inc
xchg
movs
xchg
jnp
adc
mov
popa
es
mov
jns
pop
pop
movs
xor
data16
mov
dec
push
aam
lea
sbb
jp
xchg
aas
repnz
std
xchg
inc
cmp
and
and
lock
rcl
inc
daa
lods
outs
inc
push
jbe
mov
mov
add
loopne
jae
test
pop
pop
movs
xchg
inc
mov
cs
retf
lahf
add
mov
lock
std
adc
ror
retfw
or
and
pop
lahf
lahf
dec
mov
ds
fisttp
mov
out
aas
repnz
mov
std
js
out
pushf
fwait
mov
jbe
pop
rol
imul
add
pop
sbb
rcr
pop
mov
pop
outs
lds
das
out
and
mov
adc
and
xlat
sub
inc
jae
add
sub
sbb
into
mov
js
cmp
pusha
inc
pop
xlat
jp
jns
in
scas
imul
shr
inc
cmp
aam
mov
loop
push
fadd
call
out
arpl
rcr
addr16
(bad)
mov
xor
retf
aaa
dec
push
add
adc
cmp
inc
push
mov
mov
es
dec
push
xchg
invd
mov
rcr
xchg
add
jo
add
pop
mov
gs
jecxz
ret
fbstp
fdiv
loop
jnp
mov
inc
dec
pop
mov
lea
xchg
xchg
bound
les
(bad)
add
enter
pop
xor
iret
adc
in
js
stc
rcr
ins
arpl
mov
clc
leave
jns
mov
pusha
ss
fcmovnu
inc
int3
in
ss
ins
fs
dec
inc
fidivr
repz
lods
xor
pop
(bad)
cmps
ins
fst
inc
push
fcomp
dec
push
dec
pop
ret
sub
inc
mov
aad
fucomi
cli
test
fistp
inc
dec
test
mov
scas
test
pusha
dec
inc
mov
or
dec
mov
fld
sbb
test
ds
jle
mov
lock
sub
inc
pop
test
hlt
fcomp
inc
mov
(bad)
sar
lds
cmps
adc
mov
push
jecxz
and
jne
not
xchg
pusha
retf
movs
cmps
and
std
lds
mov
movs
or
je
clc
in
pop
iret
dec
jle
push
test
xor
fnstsw
call
mov
outs
mov
ds
scas
out
jo
xchg
ja
pop
cmps
jp
mov
xor
mov
mov
sub
push
mov
dec
inc
xchg
(bad)
push
xchg
lock
stc
push
and
inc
addr16
xor
sbb
cmps
xchg
push
adc
sti
sub
dec
sbb
and
sub
aas
dec
into
xadd
and
ins
fsubr
inc
push
mov
sbb
xor
(bad)
pop
call
mov
cdq
mov
or
addr16
rcr
xchg
cmp
popa
fistp
cmc
xchg
popa
sub
jl
pop
inc
bound
adc
mov
leave
jmp
xchg
test
xchg
inc
pop
arpl
out
sub
scas
and
ins
repz
pop
lahf
cwde
dec
jle
mov
mov
aam
enter
lahf
push
or
fs
rcl
inc
(bad)
dec
and
mov
cmp
call
mov
jbe
lahf
fisttp
pop
push
xchg
aaa
cmp
mov
movs
ins
and
sub
imul
pop
jmp
sti
arpl
mov
daa
cli
mov
aaa
adc
jle
xor
xor
inc
neg
jae
xor
stc
aaa
imul
sub
leave
push
jp
dec
pop
retf
sub
aas
push
fidiv
mov
adc
daa
sahf
mov
jge
fisttp
cmp
dec
sbb
jb
cs
mov
jl
ret
xchg
add
inc
aas
cmp
mov
cmp
jmp
retf
(bad)
movs
push
mov
xor
add
sbb
(bad)
ja
inc
jno
nop
(bad)
cld
jnp
(bad)
bound
pop
cmp
mov
cmp
ins
xor
xchg
dec
hlt
enter
call
nop
mov
mov
arpl
push
pop
jno
pop
inc
test
(bad)
out
xor
sahf
and
jmp
xor
pop
gs
sti
sti
or
pop
imul
dec
adc
shl
mov
sbb
js
ret
or
cmp
clc
stos
mov
sahf
ror
dec
xor
mov
xchg
push
push
lods
fidivr
pop
call
ins
push
or
jno
pusha
in
mov
pop
mov
shl
jecxz
sbb
pop
sub
test
push
sub
sub
icebp
ins
(bad)
jb
sub
ins
dec
ret
lods
sub
cmps
sub
pop
xor
rol
sub
jnp
mov
xchg
cmp
ss
and
inc
jnp
cmp
xor
out
jp
fdiv
in
int
mov
dec
mov
cmc
jb
jge
aas
xor
out
jno
mov
jno
pop
cdq
inc
das
inc
and
repnz
adc
mov
je
call
inc
cmp
jo
mov
and
mov
sub
data16
or
stos
fwait
dec
xlat
fcom
(bad)
stc
lea
adc
ret
or
mov
popf
not
ror
call
gs
dec
popf
sub
daa
es
les
push
push
xor
ins
(bad)
leave
mov
call
xchg
retf
xchg
add
cmp
xchg
pop
movs
pop
push
loope
mov
xchg
es
sub
pop
inc
popf
das
xlat
and
or
rcl
jo
mov
push
jmp
arpl
mov
fild
mov
mov
out
scas
mov
ds
mov
mov
push
jno
mov
ffreep
aad
sbb
repz
out
xor
add
popa
test
movs
cwde
xchg
popf
sbb
(bad)
and
inc
xor
push
fisub
xchg
pop
add
dec
cmps
add
test
jb
xor
ds
push
clc
xor
iret
add
aam
cmp
lea
xchg
push
xchg
aam
push
cmps
jae
popa
(bad)
adc
(bad)
ret
arpl
in
push
xchg
xor
xchg
je
push
cmp
(bad)
fsub
loope
xchg
adc
inc
add
mov
dec
mul
and
fs
xchg
ins
aaa
mov
popa
aaa
scas
vmwrite
test
add
iret
sub
pop
pop
cmp
or
pop
xlat
mov
ja
cmps
dec
and
js
movs
sar
mov
mov
push
push
sahf
pop
stc
into
cmp
pop
push
add
je
push
mov
daa
pop
pushf
arpl
cmp
sbb
stc
ret
fstp
popf
pop
inc
push
inc
dec
sub
es
push
sbb
rcl
push
cdq
pop
mov
or
daa
or
or
mov
int3
inc
add
(bad)
ins
jge
mov
mov
jo
lods
neg
scas
fdivr
cld
movs
leave
jge
dec
js
push
xchg
cmp
xor
test
mov
or
mov
inc
ins
pop
rol
dec
cmp
cmps
mov
inc
std
popa
dec
les
inc
sub
fwait
xor
push
scas
or
pop
shl
out
mov
mov
mov
mov
retf
xlat
loop
jmp
in
addr16
cld
dec
and
xchg
stos
scas
pop
mov
cmp
out
imul
in
ror
loopne
mov
mov
iret
test
fwait
cli
mov
lea
mov
loopne
and
pop
not
out
sbb
mov
rcr
leave
mov
jl
adc
jmp
fadd
ins
mov
shr
mov
push
(bad)
movs
push
lods
scas
lock
jo
out
sub
mov
push
(bad)
pop
into
pop
retf
je
pop
test
and
stos
pushf
push
(bad)
mov
jb
and
mov
shl
jecxz
(bad)
sub
ins
jg
xchg
ja
cmp
sahf
pushf
push
dec
sbb
cmc
mov
cmp
xchg
mov
adc
dec
aam
push
stos
aad
cmp
add
jge
mov
add
sahf
rcl
pop
arpl
pop
jmp
inc
scas
ins
jns
sahf
and
jno
cmp
ror
jmp
inc
sti
movs
out
xchg
cli
dec
stc
jmp
or
retf
inc
jp
pop
test
push
xchg
pop
pop
lds
dec
inc
ret
lahf
data16
mov
sbb
xchg
push
push
(bad)
xchg
ja
inc
cmp
ds
pop
inc
pop
xchg
dec
or
fbld
push
fiadd
mov
call
push
jmp
mov
fbld
and
fs
mov
pop
leave
pushf
and
(bad)
or
dec
and
fisub
mov
xor
shl
jno
outs
mov
sbb
mov
popf
mov
popa
rol
and
xor
mov
fwait
dec
jae
jae
pop
es
mov
imul
sbb
das
pop
jmp
psubw
push
mov
dec
mov
inc
inc
out
(bad)
pop
push
sub
sub
movs
mov
push
aad
(bad)
sbb
and
loop
frstor
retf
rol
adc
popf
jg
pusha
mov
jae
add
aad
xchg
xchg
inc
stos
mov
jbe
loopne
ja
push
les
mov
jle
adc
out
mov
mov
mov
iret
(bad)
outs
xor
push
pushf
pop
arpl
xchg
pop
movs
and
cmp
mov
jg
and
out
xchg
dec
(bad)
fadd
scas
push
mov
call
cmp
mov
cmp
addr16
ja
jl
sub
retf
inc
cmp
jo
push
shl
or
cmp
les
scas
push
ss
and
inc
sbb
test
sub
cmp
scas
outs
sub
into
scas
bound
or
xor
add
dec
xchg
dec
int3
cmp
pop
inc
or
pop
push
push
lea
leave
setae
mov
ret
lods
jb
(bad)
test
cmp
scas
lods
cmc
nop
stc
rcr
daa
mov
xchg
dec
xor
mov
mov
rcr
ds
aad
cli
dec
jmp
sub
stos
test
(bad)
cli
and
sbb
or
push
enter
and
and
jmp
js
movs
sar
stos
mov
arpl
aad
inc
mov
(bad)
xchg
imul
lods
sahf
push
scas
test
adc
mov
in
push
pop
xchg
add
xor
bound
inc
adc
push
push
ror
xor
xlat
aas
push
fdivrp
movs
jb
push
jo
mov
inc
jbe
jecxz
sub
sti
mov
push
jmp
add
or
push
sahf
mov
adc
repnz
xchg
dec
out
mov
(bad)
outs
pop
or
and
into
popa
daa
mov
outs
mov
cwde
das
add
retf
pop
fisttp
jl
ds
xor
jbe
push
xor
repz
out
mov
in
sbb
inc
mov
ret
fst
dec
jmp
cmp
mov
xchg
mov
xor
cs
loope
retf
stos
mov
int3
xchg
test
jge
dec
ins
sbb
mov
int3
cmp
mov
and
mov
jo
push
mov
pop
inc
outs
jp
mov
in
ins
gs
fild
jbe
jb
pop
xchg
mov
cdq
in
imul
xchg
mov
sub
pop
stos
xchg
jae
push
xchg
jmp
shl
ins
mov
imul
stos
xchg
test
popf
jge
cs
xchg
or
outs
sub
inc
jno
mov
dec
or
fs
inc
repz
popf
adc
xchg
xchg
test
pusha
stc
add
cmps
test
je
popf
jne
sbb
mov
and
cdq
mov
mov
pop
test
or
xchg
mov
xchg
mov
mov
dec
mov
dec
jp
mov
retf
jg
jbe
jbe
cs
out
jg
(bad)
iret
push
test
fsub
(bad)
fisttp
das
movs
jp
cmc
mov
jmp
cs
mov
ss
or
cvtpi2ps
fist
sub
adc
test
(bad)
dec
push
sahf
arpl
push
xlat
xor
cld
pop
push
dec
imul
ja
mov
test
dec
sbb
lods
add
es
sbb
out
sahf
cmps
push
aad
mov
in
repnz
mov
aad
jecxz
mov
test
sbb
iret
int3
push
std
sbb
arpl
stos
xchg
das
mov
call
xchg
je
pop
or
jne
les
jp
(bad)
xor
movs
pop
mov
or
cmp
adc
(bad)
pop
js
mov
mov
push
xchg
int3
dec
mov
ficom
stc
or
mov
mov
movs
pop
inc
pop
lea
sub
bound
pop
or
cmps
aaa
jecxz
jns
mov
mov
mov
ja
lock
addps
push
test
cmp
jmp
test
test
adc
or
in
popa
bound
mov
cwde
mov
or
or
pop
sar
push
sbb
jmp
sbb
mov
mov
aas
mov
push
(bad)
jecxz
cmps
mov
mov
sub
mov
mov
nop
inc
push
xor
pop
fs
in
mov
retf
xchg
xchg
repz
jno
jmp
je
jecxz
cmp
gs
retf
retf
gs
push
xchg
inc
and
cmp
pop
push
xor
sti
push
mov
sbb
cmp
sbb
or
xor
mov
(bad)
and
jae
mov
inc
xchg
shl
stos
into
loope
js
add
cwde
push
mov
nop
jmp
mov
xor
mov
inc
jno
(bad)
mov
fs
sti
(bad)
push
xchg
xor
ret
iret
and
mov
mov
(bad)
or
and
jmp
jecxz
dec
es
push
aaa
push
mov
cld
sbb
(bad)
icebp
test
xchg
out
sti
push
mov
(bad)
or
mov
dec
dec
loop
xchg
mov
and
lds
sbb
(bad)
mov
pop
push
mov
pusha
or
push
jp
lahf
dec
dec
xchg
sub
pop
data16
dec
pop
in
aaa
mov
push
mov
lds
outs
repnz
mov
pop
enter
pop
mov
xchg
mov
mov
xchg
jle
push
fsub
ja
(bad)
imul
xchg
mov
je
add
push
mov
push
or
lahf
dec
dec
xchg
mov
push
mov
gs
lea
cmps
fs
out
stos
retf
xor
scas
sub
dec
push
pop
movs
pop
in
add
sub
(bad)
adc
mov
movs
rcr
inc
int
cmp
ins
and
mov
jne
aas
pop
pushf
pop
xchg
cs
fcmovb
popa
out
call
pop
xor
dec
or
bound
xor
hlt
fwait
in
fdivr
xchg
jbe
xor
dec
sbb
add
stos
jns
push
jns
shl
(bad)
cmp
mov
cmp
std
cmp
cwde
lahf
push
add
inc
xchg
jle
popf
xchg
jne
ins
sub
xchg
sbb
pop
test
pushf
xchg
pop
xchg
fiadd
rcl
(bad)
addr16
xchg
push
jnp
mov
cli
fdivr
out
mov
inc
sub
(bad)
test
imul
les
pop
jo
push
push
jno
pop
loop
mov
fcom
jo
mov
aad
mov
retf
fstp
mov
push
mov
inc
pop
data16
fwait
mov
outs
outs
and
xchg
dec
inc
int3
jno
jmp
pop
jb
pop
dec
mov
(bad)
and
jl
out
pop
nop
ror
mov
dec
stos
cli
addr16
jle
xchg
sar
call
mov
popa
lea
jmp
mov
loop
jns
(bad)
arpl
sub
call
je
jle
cdq
gs
call
xchg
movs
xor
jmp
xchg
stos
ja
test
jmp
mov
jne
fsub
fmul
jmp
xchg
iret
in
repz
ja
dec
movs
jl
jmp
(bad)
push
out
dec
movs
ins
ins
xchg
pop
pushf
lahf
pop
bound
xchg
call
pop
fstp
sbb
(bad)
pop
mov
nop
pop
gs
mov
pop
pushf
out
je
and
test
ja
dec
movs
mov
movs
xchg
mov
cli
(bad)
xchg
movs
fs
out
jg
jle
ins
and
mov
and
mov
ret
lea
les
xchg
push
aas
in
and
mov
mov
mov
leave
call
enter
dec
cmp
leave
push
inc
and
xchg
js
fbld
arpl
mov
enter
mov
and
in
je
imul
dec
stos
nop
cdq
ins
add
pop
dec
xchg
or
or
js
mov
test
jle
in
daa
scas
(bad)
(bad)
push
aam
mov
mov
nop
imul
fs
xchg
in
imul
mov
cmps
ret
int
mov
fs
mov
loope
retf
xchg
iret
lahf
pop
stos
addr16
shl
ins
(bad)
pop
xchg
fwait
jl
popfw
in
stos
or
loope
pop
dec
xchg
cmp
or
mov
(bad)
push
loope
cmp
data16
add
dec
inc
mov
mov
dec
stos
icebp
adc
xchg
mov
push
adc
push
mov
cmp
mov
pop
imul
mov
mov
mov
ds
pop
sar
inc
fs
outs
push
cmp
clc
ret
dec
cmc
add
imul
cli
test
dec
or
aas
cdq
add
adc
iret
fmul
(bad)
jl
mov
xchg
or
sahf
bound
pusha
dec
std
imul
ins
in
adc
cmp
mov
inc
push
test
mov
mov
popa
or
(bad)
xor
movs
or
sbb
stos
fst
imul
mov
in
aas
mov
inc
xchg
jno
pop
xchg
fs
jle
pop
sub
(bad)
sbb
stos
mov
mov
or
ror
pop
test
(bad)
mov
ins
js
outs
jae
dec
in
popa
loopne
shl
xchg
lock
mov
adc
test
fwait
ins
cwde
cwde
add
inc
scas
loop
test
ins
cld
retf
dec
jno
ins
ror
push
scas
pop
add
repnz
jl
ja
movs
gs
das
cmp
xor
cmp
and
sub
mov
(bad)
sar
adc
jns
shr
mov
jno
or
sub
pop
push
mov
mov
popa
jno
das
data16
fisttp
xor
push
push
xchg
ins
jg
cmps
or
xchg
test
inc
shl
pop
outs
xchg
rcr
outs
pusha
jae
cmp
add
push
stos
pop
jecxz
test
pop
sub
loop
adc
dec
pop
ins
shl
mov
arpl
adc
pop
mov
iret
mov
addr16
dec
retf
mov
cmps
leave
dec
repz
adc
xchg
cli
jae
stc
test
pushaw
popf
clc
pop
scas
and
pop
stc
pusha
xchg
cs
(bad)
ss
xor
aas
jl
push
pusha
add
jmp
mov
fild
xchg
popf
push
stos
outs
add
xor
sbb
pop
lds
sub
push
inc
fwait
retf
mov
jne
xor
add
cmp
mov
outs
or
cmps
movs
call
cmp
pop
out
xchg
mov
jns
les
mov
(bad)
movs
inc
fadd
into
(bad)
mov
test
vcvtps2dq
cwde
(bad)
addr16
imul
call
jne
jmp
xor
outs
stc
pop
int3
sub
xchg
std
sub
in
mov
xor
xchg
mov
jo
sbb
push
mov
push
(bad)
(bad)
rcr
enter
lahf
mov
ds
push
aam
xor
in
retf
jbe
push
popa
arpl
(bad)
movs
mov
cmp
jge
enter
push
sub
xchg
(bad)
imul
add
fisub
into
mov
mov
push
push
nop
call
mov
jb
cmp
fwait
dec
stos
jecxz
inc
enter
pop
push
jbe
fdivr
inc
mov
test
(bad)
retf
ror
or
pop
dec
repz
pop
inc
push
and
mov
mov
out
mov
aam
data16
mov
mov
es
subps
scas
je
dec
dec
fisttp
clc
aas
adc
push
les
test
call
mov
cmp
outs
jbe
or
jns
leave
push
sub
stos
imul
mov
push
sbb
loopne
ja
scas
mov
sub
loope
xlat
adc
cwde
aas
mov
je
out
bound
jecxz
rcl
mov
mov
sti
push
cmp
xor
and
dec
mov
adc
in
jg
inc
lahf
cmp
ins
rol
fwait
popa
ss
lods
cwde
int
mov
fistp
jmp
hlt
call
cdq
and
sub
xchg
mov
rol
cli
stos
stos
rcl
dec
jge
fmul
cmp
iret
cdq
imul
fstp
push
xchg
sub
jne
pop
ffree
adc
add
lds
jne
data16
push
and
push
int3
lea
mov
pop
sub
std
out
and
cmp
(bad)
lea
aad
addr16
xchg
dec
js
popa
adc
mov
mov
mov
aad
imul
pushf
out
xor
into
(bad)
mov
inc
mov
popa
push
xor
or
nop
shr
cld
xchg
xor
mov
push
dec
pop
push
pop
sub
sub
std
fldcw
pop
lods
xchg
add
cld
cli
test
es
out
and
arpl
mov
push
inc
jnp
js
xchg
mov
mov
aad
cli
fadd
stos
jbe
jne
fs
jp
retf
fs
addr16
rol
and
pop
inc
mov
xchg
cmc
jle
stc
gs
add
scas
mov
or
stos
mov
pushf
cld
nop
sbb
outs
sbb
lods
xor
xchg
fsubrp
leave
xor
sbb
cmp
jge
(bad)
jle
cmp
test
jae
mov
mov
test
addr16
adc
scas
scas
sbb
leave
mov
stos
dec
test
dec
dec
mov
pop
fisttp
dec
cmp
lods
add
pop
cmp
repz
adc
mov
cmc
dec
in
std
and
jbe
in
loop
or
or
cmps
out
ret
pushf
jmp
dec
call
add
xchg
add
and
lea
dec
xchg
fcmovbe
jp
push
xchg
(bad)
loopne
out
popa
sbb
pop
imul
stos
fdiv
push
stc
test
aad
shl
ins
cmps
movs
mov
inc
mov
jae
mov
mov
mov
inc
or
mov
into
cdq
xor
(bad)
push
js
int3
cdq
mov
(bad)
fcmovnb
pop
out
imul
retf
cmp
mov
or
sahf
adc
mov
mul
cdq
dec
mov
out
loopne
aam
ins
sbb
dec
mov
test
cmps
mov
jb
pop
push
xchg
xchg
cmc
test
push
in
pusha
jb
mov
fdiv
mov
stc
leave
les
jg
stos
cmp
loop
(bad)
aad
in
test
jne
xor
mov
jg
jmp
test
scas
pop
push
jae
xor
mov
dec
dec
je
mov
pop
arpl
mov
cdq
sbb
add
or
mov
paddusb
pop
imul
push
retf
jnp
sub
sbb
adc
daa
(bad)
scas
xor
js
inc
(bad)
mov
dec
jo
pop
add
repnz
jle
xor
std
popa
lods
repz
xchg
and
xor
cmp
pop
imul
sbb
cs
jle
mov
add
into
cmc
sti
push
and
popa
data16
fwait
jae
dec
fcomp
xchg
rol
sbb
ror
cmp
jne
cmps
pop
or
sbb
lea
loope
push
xor
inc
in
mov
cmp
aad
push
dec
jmp
pop
pop
push
adc
leave
push
push
or
push
pop
xchg
mov
stc
fcom
sbb
xchg
cli
inc
test
pop
inc
test
ds
sti
(bad)
loopne
add
jbe
std
pop
outs
shl
and
mov
(bad)
jecxz
xor
addr16
xor
jg
pop
cli
in
imul
in
stc
addr16
xchg
mov
stos
out
cmps
dec
repz
int3
mov
pop
xchg
movs
fwait
jmp
lds
mov
jmp
mov
test
mov
in
repz
jb
mov
int
jbe
pop
adc
xchg
mov
push
pop
mov
shr
cli
add
mov
or
xchg
xchg
aas
add
pop
push
jne
stos
xchg
fst
je
push
inc
pop
ins
xchg
and
xchg
fimul
add
inc
test
cmp
mov
aam
mov
ret
jns
outs
cmp
lods
push
jo
push
fcmovnbe
cs
hlt
pop
adc
lods
neg
push
in
add
fcomp
push
sub
in
rol
sub
add
jae
mov
dec
lods
test
loop
dec
ret
xor
(bad)
sahf
and
js
out
push
mov
xor
push
shr
fs
jecxz
mov
mov
or
scas
lds
or
add
(bad)
clc
inc
sub
loope
pop
sar
loopne
xor
pushf
test
ins
repz
mov
outs
push
cmp
cmp
lea
jp
push
jne
loope
sahf
push
loope
pop
adc
jae
xchg
cmp
adc
dec
int3
fsub
push
push
cmp
cmps
movs
out
aaa
mov
in
mov
aas
jns
jl
out
in
aam
add
iret
out
mov
gs
sub
or
sub
mov
push
mov
fdivr
loop
and
inc
stos
xor
popa
pushw
iret
in
cmps
mov
sti
or
gs
adc
les
cwde
xchg
icebp
pop
mov
dec
add
mov
bound
lods
nop
outs
push
test
xchg
movs
jb
pop
mov
pop
loope
jo
ins
(bad)
push
shl
mov
mov
inc
rol
add
imul
fist
dec
cmp
or
cmp
movs
sub
shr
add
adc
enter
lahf
lods
mov
test
xor
pop
jb
and
xlat
loopne
ret
test
data16
mov
pusha
sbb
lods
jg
(bad)
jne
dec
fimul
cmps
xchg
repz
or
add
ins
inc
out
jne
ret
mov
loopne
dec
and
jbe
push
mov
mov
movs
inc
mov
dec
aaa
mov
and
xchg
mul
ffreep
clc
outs
adc
xlat
mov
scas
jnp
nop
dec
pop
mov
cwde
cmps
hlt
cmp
jae
addr16
jecxz
xor
inc
pop
pop
enter
imul
and
js
xor
and
cmps
outs
ret
int3
repnz
es
cmp
pop
jg
sub
mov
push
push
ja
lock
(bad)
(bad)
ins
adc
add
mov
xlat
test
fimul
fadd
enter
mov
out
data16
cdq
(bad)
mov
push
pop
or
idiv
mov
lea
inc
and
bound
jo
mov
adc
xchg
test
imul
push
pop
(bad)
mov
pop
pop
int3
xchg
jmp
sub
jo
lock
shl
mov
gs
dec
pop
aam
jmp
int3
inc
js
fiadd
push
aam
mov
icebp
cmp
push
inc
sahf
les
imul
ficom
cs
jns
in
cwde
div
xor
adc
inc
aam
ins
push
mov
(bad)
fsub
popa
cwde
icebp
pop
aas
fstp
movs
(bad)
xor
sbb
jne
mov
cmc
dec
fcom
mov
adc
icebp
sbb
mov
jge
jo
inc
jo
(bad)
cs
xchg
jb
daa
js
jns
js
mov
(bad)
xor
pop
mov
mov
aad
(bad)
into
xor
(bad)
out
inc
in
test
add
ins
dec
push
mov
shl
cdq
jno
cmps
rcr
push
pop
in
mov
mov
movs
outs
call
enter
mov
mov
into
popf
pop
add
imul
ret
add
nop
inc
mov
retf
(bad)
pop
test
(bad)
pop
jno
mov
mov
push
cmp
and
in
dec
loop
push
fs
push
imul
pop
sub
pusha
rcr
jmp
ds
imul
xchg
loopne
inc
icebp
mov
cwde
idiv
cld
and
or
xlat
push
push
cmp
xchg
call
inc
push
mov
call
scas
pop
dec
jb
cmp
adc
jne
xor
cmps
pop
mov
ds
xor
mov
jnp
push
sbb
bound
(bad)
pop
jl
xor
xchg
push
enter
repnz
mov
jle
shr
jnp
in
(bad)
jge
fwait
sbb
or
inc
(bad)
jle
ins
adc
mov
xor
push
xchg
add
fld
push
movs
sar
add
fs
(bad)
jnp
fcmove
dec
jne
mov
pop
inc
or
in
push
pop
pop
xchg
jle
in
rcl
pop
jns
stos
adc
jle
sbb
(bad)
pop
pop
cs
loope
and
pop
leave
sbb
test
scas
jecxz
sbb
loopne
ja
das
xor
inc
cld
add
mov
dec
xchg
popa
movs
mov
mov
pushf
test
out
push
jno
shl
or
sbb
mov
pop
add
dec
xlat
cmp
jne
popa
xchg
out
lea
ja
sub
cmp
inc
xchg
push
mov
inc
push
dec
ret
lds
and
push
movs
(bad)
pop
mov
xor
cmp
push
iret
jp
pop
cmps
jecxz
inc
imul
push
fsubp
push
jns
fild
lock
bound
loopne
inc
inc
dec
cmp
out
mov
jb
add
int
inc
cdq
nop
aaa
(bad)
aad
mov
pop
aas
sbb
push
inc
pop
mov
cmp
fimul
or
mov
pop
adc
ret
fsub
xchg
sti
pop
leave
push
into
and
xchg
mov
push
loope
xchg
mov
mov
mov
sti
lds
dec
mov
inc
xchg
(bad)
or
aad
push
push
mov
lods
imul
in
jno
mov
bound
movs
ret
adc
push
jnp
sub
inc
mov
pop
lds
mov
retf
sbb
mov
jmp
lock
or
xor
test
adc
stos
pop
lods
movs
loopne
lods
push
dec
pop
pop
or
inc
cmp
retf
in
arpl
adc
js
out
mov
push
dec
dec
ins
movs
and
inc
jp
iret
dec
into
pop
adc
gs
aam
aas
in
adc
add
xchg
jp
pushf
ja
mov
xlat
mov
mov
xlat
mov
xor
jg
pop
ret
push
xlat
mov
jl
pop
jne
sbb
push
sub
mov
xchg
jnp
sub
xchg
xor
cwde
hlt
je
add
ja
mov
jle
fbstp
sahf
xchg
mov
pop
mov
aaa
call
xchg
lea
push
mov
cmp
dec
ins
js
sti
mov
dec
xchg
sahf
fwait
imul
jb
fbstp
lahf
mov
mov
inc
retf
int
cmp
add
xchg
test
and
jl
gs
lock
imul
sub
imul
jae
mov
jmp
stos
xlat
sub
scas
fstp
and
jno
jbe
xchg
xchg
pop
movs
ins
mov
mov
(bad)
xor
pop
imul
adc
retf
stos
hlt
mov
mov
push
lds
sahf
push
fwait
sbb
inc
(bad)
ins
push
jns
ficom
test
in
mov
hlt
rcl
nop
mov
jecxz
cld
push
mov
cwde
fwait
mov
nop
xor
sub
lea
add
ja
nop
pop
scas
jae
mov
test
aam
pop
cmp
stos
push
xchg
jmp
adc
cmp
jmp
(bad)
hlt
sbb
and
inc
mov
push
call
pop
bnd
int
mov
pop
daa
mov
mov
clc
cmps
cmp
sub
dec
or
addr16
jns
repnz
cmps
xor
jnp
xchg
fild
stos
pop
xchg
sahf
sbb
aas
into
cmp
push
mov
and
add
xor
loop
cmps
sbb
mov
pop
(bad)
aam
jge
xchg
xchg
cmp
mov
or
jge
pop
(bad)
sar
jmp
mov
jb
xchg
ror
push
dec
xchg
push
push
or
sbb
dec
xor
add
ss
push
cdq
cmp
ret
loope
jno
jns
dec
int3
dec
or
gs
xor
dec
xor
dec
push
jmp
xchg
pop
inc
je
jmp
jns
xchg
or
nop
fdivr
inc
push
mov
jbe
mov
imul
out
outs
leave
daa
xchg
aam
sub
cmp
adc
jl
enter
std
test
(bad)
pop
jl
fwait
push
mov
(bad)
ja
pop
push
or
xchg
sbb
mov
fist
cmps
ins
jno
inc
xor
mov
fst
jl
lea
mov
pop
jno
ror
addr16
outs
cmps
sub
pop
mov
(bad)
or
arpl
pop
pop
ss
and
js
mov
add
dec
or
cwde
stos
cmp
ret
sub
popf
fscale
outs
mov
pop
lock
pop
sar
popa
xchg
mov
dec
pop
pop
mov
xlat
jecxz
js
test
rcr
push
pop
aas
test
(bad)
loope
inc
jl
call
adc
mov
mov
fist
lahf
test
js
inc
inc
and
test
mov
(bad)
cmp
(bad)
mov
dec
inc
add
jl
outs
push
pushf
sar
fs
in
xchg
push
mov
mov
push
(bad)
jb
cmp
lds
mov
mov
and
xchg
pop
cwde
and
fidivr
pop
sahf
adc
aaa
xlat
push
icebp
loopne
mov
xor
add
leave
cdq
ficom
xchg
or
push
ins
or
add
bound
jl
xlat
repnz
ret
push
imul
jg
(bad)
in
fisub
and
jo
adc
lea
inc
and
and
xor
bswap
imul
pusha
or
add
push
dec
jae
push
push
or
fmul
mov
pop
mov
or
loopne
mov
leave
cmps
mov
rcl
bound
loop
mov
push
loop
jp
into
imul
ret
mov
or
fld
(bad)
aas
sub
xchg
in
mov
nop
(bad)
pop
into
mov
mov
jp
pop
or
retf
(bad)
xchg
jo
mov
inc
inc
loope
jecxz
pop
cmps
movs
cwde
cdq
mov
dec
sbb
aaa
xlat
xchg
(bad)
out
adc
sahf
cwde
mov
mov
push
cwde
lahf
arpl
call
xchg
cmp
test
cmp
mov
addr16
mov
sahf
jbe
push
xchg
stos
int3
xchg
mov
adc
rcl
mov
fistp
push
ret
jnp
(bad)
pop
pop
push
add
pop
cli
aas
arpl
sub
outs
sub
pop
lahf
inc
push
cmps
nop
mov
push
pop
jb
rcl
or
iret
retf
daa
aad
mov
mov
jno
mov
lahf
mov
js
cmp
jmp
repnz
ds
mov
aam
push
or
daa
ins
mov
mov
stos
jp
arpl
add
(bad)
out
inc
fwait
mov
les
cmp
test
jb
lods
push
xchg
mov
xchg
jbe
jp
adc
mov
aad
xchg
ror
cmp
aam
out
xor
out
pop
pusha
(bad)
and
dec
push
and
inc
xchg
and
mov
loopne
push
test
sti
js
aam
fs
xchg
or
stos
push
es
test
test
shl
(bad)
out
push
inc
sbb
xor
push
lods
and
mov
inc
jns
xchg
inc
fucomip
out
pop
cmp
jl
outs
js
sub
xor
ins
jle
cdq
jmp
je
imul
ins
pop
adc
mov
push
in
ins
mov
fidivr
sbb
retf
push
add
fist
lods
push
cwde
and
test
mov
sahf
imul
push
inc
adc
pop
cmp
fnstsw
mov
lds
movs
out
cmps
popa
mov
je
call
pause
imul
mov
arpl
add
push
arpl
push
fwait
mov
cmp
ret
dec
js
or
inc
cmovbe
(bad)
cwde
(bad)
shl
fistp
popa
mov
fadd
mov
xchg
xchg
out
bound
imul
mov
push
(bad)
iret
push
mov
xchg
sahf
sub
movs
jge
out
ss
push
push
retf
ror
ret
and
repnz
xor
icebp
enter
mov
in
and
shr
inc
mov
jne
jo
xchg
sub
push
sub
bound
cmp
dec
push
push
pop
bnd
mov
cmc
fld
ins
jle
scas
push
mov
mov
mov
div
int3
stos
cmps
test
sub
pop
(bad)
jne
ins
mov
inc
daa
(bad)
mov
enter
imul
add
aaa
sbb
jge
in
ror
sub
test
popa
gs
add
pop
mov
nop
pop
pop
test
pop
imul
xchg
mov
out
cwde
es
arpl
push
adc
add
out
dec
add
out
js
jecxz
retf
(bad)
pop
xlat
test
jl
enter
cmc
sub
icebp
jge
sub
xor
jmp
and
call
dec
pop
dec
push
push
push
stos
pop
rcr
xlat
shl
jb
cmp
(bad)
repnz
pop
lods
mov
das
repz
test
pushf
retf
test
sub
mov
mov
mov
mov
test
lea
ror
hlt
sbb
sti
push
jne
les
daa
or
call
mov
adc
out
push
jnp
push
movs
jp
jbe
rcl
mov
mov
sbb
push
sbb
mov
cwde
in
cmps
shl
pop
push
push
pop
arpl
lea
push
and
xlat
cmp
mul
lock
shl
pop
retf
mov
mov
jle
clc
fst
rcl
clc
imul
frstor
imul
or
test
ins
xlat
dec
popa
(bad)
movs
out
pop
add
dec
fcomp
fwait
aas
jg
aad
rol
movs
sub
or
pop
cmp
sbb
adc
cmp
(bad)
outs
out
mov
mov
or
imul
imul
push
int3
jecxz
xchg
(bad)
mov
retf
add
ins
fwait
pop
pusha
cmp
adc
xor
aaa
push
or
mov
fwait
dec
mov
lea
shl
idiv
inc
mov
imul
addr16
pop
aas
repnz
jle
rcl
inc
aam
fs
mov
xor
and
pop
sub
push
pop
scas
mov
cmps
pop
add
and
test
push
sub
sbb
stc
ins
mov
ja
mov
sahf
jnp
mov
dec
pusha
in
add
add
or
call
test
adc
movs
cmp
fsub
cmp
ja
or
gs
dec
scas
xchg
int3
jp
pinsrw
xchg
jge
push
pop
outs
fwait
sub
jmp
int3
xchg
repnz
ds
aad
push
sub
lods
sub
inc
mov
mov
hlt
and
aad
cwde
stc
sbb
mov
(bad)
shr
adc
outs
push
cmc
sub
sbb
pop
cmp
xor
xchg
and
jl
stc
aas
or
mov
mov
mov
movs
cmp
int3
cmc
in
pop
dec
xchg
mov
mov
cmp
mov
movs
lahf
mov
or
mov
xor
and
dec
(bad)
push
je
push
mov
jb
jnp
popa
and
je
les
dec
sub
mov
mov
stos
pop
or
jecxz
cs
sub
xlat
push
ret
out
dec
sub
fnstcw
or
push
jg
in
push
jecxz
dec
in
sub
push
imul
div
addr16
not
les
dec
in
mov
jb
rcr
iret
repz
inc
pop
push
fsub
(bad)
daa
ret
(bad)
imul
mov
out
fprem
(bad)
jb
mov
popf
or
jo
scas
adc
repz
cdq
(bad)
(bad)
jae
and
fs
loopne
or
iret
push
popf
stc
mov
in
(bad)
pop
push
mov
and
out
loop
add
xor
in
test
push
in
pop
push
xlat
jnp
mov
dec
mov
sbb
pop
aad
cwde
dec
fcmove
xchg
enter
mov
sahf
loope
pop
cdq
(bad)
rcr
xor
sbb
repnz
push
pusha
xchg
bound
mov
(bad)
arpl
dec
fs
mov
dec
push
fdiv
pop
mov
shld
inc
jns
repz
sahf
dec
mov
mov
aaa
push
(bad)
lock
pusha
jle
push
test
pop
aas
(bad)
lahf
repnz
enter
mov
or
stos
xchg
dec
add
sahf
ret
jb
(bad)
aam
icebp
(bad)
dec
(bad)
arpl
inc
push
mov
add
xchg
sbb
pop
cdq
push
js
cmp
mov
out
jp
iret
loop
jle
in
sbb
dec
es
xchg
jns
push
adc
enter
sub
mov
addr16
push
fwait
shr
sub
loopne
inc
clc
xchg
dec
lock
cmp
imul
jp
das
xchg
enter
pop
sbb
dec
(bad)
cld
ret
test
and
ss
push
pusha
cmpps
or
pop
add
push
neg
stos
or
jl
pop
sbb
shr
push
fmul
adc
mov
mov
jmp
jae
jno
pop
mov
jmp
sbb
xchg
adc
(bad)
pop
ret
scas
sti
cmp
daa
scas
jae
cwde
pop
adc
outs
cmp
ret
retf
ins
stos
jmp
jge
add
and
mov
xchg
xlat
stc
adc
inc
les
arpl
call
mov
push
or
clc
pop
out
inc
enter
repz
cwde
repnz
pusha
sbb
jmp
mov
add
jae
mov
jg
ins
jle
mov
push
dec
pop
call
fdiv
mov
enter
and
stos
in
and
lods
popf
xor
mov
mov
sub
adc
xchg
repnz
ins
xchg
pop
mov
popa
out
loope
mov
pop
sub
js
scas
(bad)
add
outs
mov
sar
aaa
fisubr
cmp
iret
arpl
icebp
or
cmc
fistp
adc
mov
dec
push
dec
mov
mov
sub
xchg
leave
inc
das
(bad)
arpl
adc
ss
retf
arpl
mov
jle
je
dec
push
push
ins
popa
push
jmp
xchg
pop
scas
mov
(bad)
sub
loopne
scas
test
pusha
test
popa
xchg
repnz
sub
in
pop
cmps
dec
inc
fwait
repz
pop
es
je
mov
adc
dec
jbe
add
fs
mov
lods
movs
ins
outs
sub
outs
into
ins
adc
dec
jp
aas
adc
mov
xor
mov
jbe
push
stc
xchg
pop
mov
and
ds
add
lods
add
xor
sub
xchg
jp
sbb
push
mov
into
int3
inc
(bad)
lds
retf
or
hlt
xchg
outs
pop
in
(bad)
retf
test
pop
inc
or
and
ins
bound
dec
pop
inc
ds
scas
call
scas
enter
adc
mov
ins
lahf
sbb
dec
les
frstor
clc
movs
cmovle
pop
daa
cmps
fcmovb
dec
enter
xor
rcr
arpl
jo
bound
popa
and
arpl
arpl
(bad)
mov
bound
jg
pop
popf
and
mov
fadd
es
imul
xor
mov
add
pop
dec
(bad)
xor
ja
(bad)
sahf
lea
fld
adc
or
xor
pusha
sbb
mov
cmp
or
ffreep
lahf
push
sub
xor
pop
dec
enter
iret
ins
jge
ror
loop
sbb
mov
adc
jle
add
pop
mov
dec
les
add
jbe
ins
push
adc
lea
in
adc
test
(bad)
retf
push
test
sbb
xchg
jge
or
aad
imul
aaa
pusha
test
fwait
shr
pushf
cwde
mov
mov
stc
fsub
mov
movs
(bad)
cmp
adc
inc
in
imul
call
je
(bad)
cmp
xor
sahf
test
ficom
adc
mov
add
cwde
mov
and
cmp
jmp
push
push
push
ret
pop
outs
fsubr
mov
(bad)
jmp
xchg
loopne
sub
add
xchg
push
inc
clc
call
xchg
adc
mov
rcl
inc
lock
cld
mov
repnz
rdpmc
add
mov
aam
jl
push
jbe
jmp
(bad)
xchg
sub
lock
enter
push
mov
jb
push
shl
pop
mov
test
sbb
jmp
dec
jmp
ins
stos
pop
fwait
sahf
jmp
repnz
pop
sbb
enter
sbb
push
pop
mov
mov
dec
mov
mov
cmps
out
push
pop
test
sahf
not
xor
sahf
ret
ffree
sti
popa
and
mov
nop
mov
loop
mov
lock
xor
inc
and
or
xor
xchg
push
inc
inc
mov
dec
jmp
adc
neg
mov
or
cwde
call
cld
es
or
jp
mov
or
fwait
push
int
lahf
xchg
sub
addr16
add
ret
fst
xor
push
xchg
jecxz
sbb
rcl
mov
pop
add
push
shl
or
into
mov
fld
and
xchg
add
(bad)
and
sti
sub
sbb
fisttp
mov
daa
sahf
push
arpl
and
xor
and
cmp
mov
imul
push
popa
add
fdivr
adc
hlt
push
fs
cmp
cmp
jns
or
mov
cmp
sti
dec
jb
push
aaa
sub
jle
ret
add
js
pop
dec
mov
lock
popa
cmps
jmp
fstp
push
test
mov
xlat
hlt
lahf
sbb
out
stc
push
out
mov
cmps
sar
jb
mov
je
sub
add
mov
je
into
mov
pop
dec
fbstp
push
xchg
mov
mov
fmul
lea
push
push
push
cmps
jae
lds
pop
mov
int3
test
and
ja
add
imul
cs
ins
adc
je
jp
add
rol
adc
cld
sbb
in
js
stc
fs
sbb
pop
clc
add
lea
lock
sbb
pusha
adc
cwde
sub
xchg
mov
cmp
xchg
pop
xlat
out
movs
mov
mov
imul
leave
xchg
jecxz
pop
movzx
jns
scas
jle
pop
jo
xchg
mov
sub
or
mov
dec
jge
jne
xor
rcr
pop
xchg
retf
xchg
movs
ds
enter
(bad)
push
or
mov
pop
mov
in
and
cmp
lea
adc
lds
pushf
cwde
mov
call
push
cmps
fcomp
pop
(bad)
lds
mov
enter
dec
(bad)
ins
pushf
cmp
cmc
jno
or
pop
int3
xchg
stos
ffree
sub
mov
ret
imul
outs
xor
mov
and
mov
push
mov
xor
push
fadd
push
popa
nop
daa
push
inc
arpl
lock
sub
xchg
(bad)
pop
adc
xchg
ja
sub
sbb
mov
or
mov
push
retf
pmullw
sbb
jmp
dec
sbb
test
mov
popf
dec
pushf
test
movs
mov
mov
mov
dec
cs
mov
push
xchg
xchg
daa
rcl
(bad)
cmp
add
xlat
adc
inc
mov
mov
dec
and
js
popa
pop
setp
pop
or
dec
add
fcom
(bad)
call
xchg
popf
pop
pop
jae
mov
jnp
or
bound
inc
and
pop
cdq
arpl
or
pusha
popa
mov
sub
pushf
jle
sahf
push
pop
push
adc
aas
aad
jmp
data16
jb
ds
loop
cmp
jle
dec
cmp
out
aaa
out
jl
mov
pop
inc
jb
fwait
test
addr16
repz
pop
adc
or
push
ss
xor
sbb
and
and
push
int3
pusha
cdq
aad
hlt
loop
xor
sub
je
and
mov
mov
push
je
add
cmp
sub
and
pop
pop
mov
dec
mov
loope
cdq
mov
out
xchg
fs
fsubr
cwde
and
add
fist
in
dec
je
mov
bound
inc
aam
sub
jo
ja
jns
and
xor
fstp
xchg
imul
ins
int3
dec
(bad)
movs
aam
pop
push
nop
data16
rol
iret
aad
xor
xlat
xor
mov
out
fld
jg
mov
cmc
pop
mov
cmp
jl
adc
(bad)
loop
sub
xchg
mov
je
mov
movs
push
mov
sahf
aam
and
or
lods
icebp
jbe
sbb
repz
sbb
inc
ret
lods
sbb
push
push
fild
iret
mov
test
jle
mov
jne
dec
sub
cmps
pusha
adc
je
adc
sbb
xchg
into
loope
or
mov
out
fcomp
pop
mov
ins
mov
loopne
imul
mov
pop
(bad)
mov
pop
jg
fsub
arpl
addr16
(bad)
sti
xor
or
cmp
xchg
jmp
dec
and
mov
test
lahf
imul
aam
pop
fwait
sbb
aaa
popf
xchg
push
scas
std
xchg
js
cmp
sub
push
mov
push
add
cmps
jle
dec
cmps
add
xor
in
pop
outs
test
jge
and
stos
or
mov
cwde
pusha
movs
ds
gs
int3
call
pop
and
mov
pop
mov
je
xor
jl
mov
ret
lods
int3
lea
ror
pop
pop
(bad)
jge
mov
xor
mov
mov
cmp
in
sbb
push
xor
mov
neg
push
push
jp
fisttp
mov
push
dec
inc
inc
fs
inc
push
cmp
lods
inc
xchg
xor
mov
out
pop
mov
pop
cmp
clc
dec
cwde
outs
and
fisttp
adc
dec
mov
sub
mov
push
arpl
fadd
idiv
jae
and
test
xchg
sbb
adc
jbe
(bad)
sbb
inc
pop
fsub
sbb
mov
push
jp
fldcw
jmp
jecxz
xchg
mov
adc
fst
jge
ret
sbb
lods
call
push
jo
shl
push
mov
shr
or
ror
jo
in
mov
jp
adc
(bad)
mov
pusha
inc
mov
in
or
stos
add
pop
mov
ins
iret
(bad)
imul
loopne
jae
cmp
nop
push
jnp
adc
stos
xchg
sahf
xchg
cs
sbb
repz
cmp
xor
cmp
pop
jae
jns
pop
(bad)
mov
and
mov
or
int
mov
adc
or
ins
jge
stos
scas
jle
shl
dec
mov
outs
push
dec
leave
sub
jl
das
inc
sub
pop
or
inc
adc
or
push
cdq
add
ficom
xor
sbb
jge
mov
pop
pop
dec
outs
sbb
add
jl
or
aas
and
inc
mov
std
outs
push
adc
sti
cmp
addr16
mov
in
retf
and
sbb
add
loope
cwde
and
out
(bad)
in
adc
ret
and
mov
int3
xor
jmp
dec
jns
mov
xor
xor
dec
nop
mov
shr
mov
cmp
jnp
push
fs
dec
jbe
push
test
ins
(bad)
fwait
dec
cmp
mov
ja
addr16
(bad)
in
addr16
fsubr
retf
sub
mov
out
add
add
jecxz
xchg
cmp
stos
pop
sub
ins
idiv
cmps
cwde
stos
xchg
dec
xchg
push
mov
mov
mov
dec
(bad)
es
hlt
jmp
repz
mov
xchg
in
mov
push
xchg
mov
test
pop
cmps
lahf
dec
dec
fbstp
scas
ja
push
mov
aad
dec
lahf
gs
xchg
xchg
repnz
mov
ret
sub
xor
or
or
hlt
jl
lds
mov
mov
hlt
pop
inc
lods
pop
cmp
push
dec
jbe
test
repnz
jno
inc
dec
int
test
sbb
adc
jnp
and
retf
enter
(bad)
shl
pop
fs
pop
and
fisub
push
imul
lahf
les
xor
iret
add
ret
sbb
cmp
mov
inc
hlt
adc
mov
push
mov
scas
mov
ins
xor
das
loop
loopne
or
cmp
call
push
je
dec
add
add
adc
cmp
push
pusha
xor
pop
push
mov
lods
mov
aad
gs
fld
int3
sub
inc
aas
sar
call
pop
jle
adc
mov
xchg
ds
add
pop
jo
sbb
mov
dec
ins
aad
sbb
mov
mov
jp
dec
scas
dec
mov
push
dec
(bad)
sbb
add
daa
and
loope
push
sbb
movs
push
out
adc
mov
ds
cmp
leave
es
push
imul
mov
pop
mov
mov
adc
pop
stos
sub
xor
jge
fwait
pop
dec
test
mov
shl
(bad)
mov
(bad)
xchg
push
xor
fild
inc
cmps
addr16
icebp
dec
push
lods
gs
int3
sti
inc
push
and
hlt
jae
and
and
xchg
retf
lock
repnz
pop
jb
(bad)
cli
jns
movs
and
out
ret
adc
lahf
add
lods
into
push
loopne
jmp
call
je
cmps
cmc
enter
and
call
adc
dec
outs
dec
pop
or
outs
aam
dec
mov
enter
or
cld
movs
mov
mov
jle
movs
inc
ror
xchg
retf
mov
mov
xor
scas
and
push
pop
adc
fist
cmovl
push
ror
rcr
aas
pusha
test
push
test
fisubr
xor
shl
sub
retf
sbb
dec
and
xor
inc
or
nop
outs
adc
mov
paddusw
inc
mov
retf
pop
out
pop
mov
xchg
rcl
popa
or
inc
es
mov
or
mov
jo
push
mov
(bad)
sub
pop
jecxz
cmp
jnp
(bad)
nop
rol
inc
push
add
push
and
cmps
mov
aad
loope
das
mov
dec
je
push
call
pop
sbb
sub
mov
les
or
or
fnstcw
mov
test
fild
jmp
jbe
adc
cld
push
xor
repnz
pop
mov
inc
fsub
mov
mov
pushf
in
xor
fadd
jmp
pop
mov
(bad)
jns
mov
and
outs
jae
push
sti
mov
shr
or
xor
sub
add
scas
xchg
cmp
xchg
jl
pop
call
(bad)
or
cmc
cmc
pop
adc
mov
addr16
movups
xchg
(bad)
stc
pusha
sahf
in
and
mov
mov
xchg
push
jb
rcr
imul
and
sub
xchg
iret
mov
pop
ret
mov
pop
or
push
test
loop
inc
ret
iret
lods
pusha
sbb
imul
sbb
or
xchg
sti
xlat
inc
sub
mov
xchg
sub
dec
mov
inc
(bad)
cmp
mov
dec
add
pop
das
xor
(bad)
gs
cmp
or
sbb
pop
mov
push
test
mov
pop
mov
in
sti
mov
xchg
gs
dec
ja
push
inc
jae
pop
inc
push
pop
dec
pop
xor
inc
sub
mov
mov
ss
out
jae
push
std
push
mov
fstp
dec
pop
dec
(bad)
imul
mov
neg
ss
dec
sahf
iret
dec
imul
xor
adc
jmp
pusha
mov
dec
nop
loopne
dec
jns
mov
inc
dec
jle
inc
outs
cli
pop
rol
lock
xor
fdiv
xor
push
xor
in
fmul
pop
aas
dec
mov
je
stos
push
rcr
sbb
(bad)
fadd
data16
clc
daa
cwde
pop
sbb
dec
(bad)
lahf
mov
scas
jmp
cvtps2pi
lods
inc
dec
push
jmp
push
shl
sub
in
jnp
repnz
mov
jae
adc
imul
fst
pusha
push
jle
neg
push
and
jle
push
mov
jmp
mov
ss
dec
push
shl
adc
xchg
add
scas
push
dec
stc
loopne
cmps
test
into
call
cmp
xchg
mov
int
pop
ins
mov
pop
lods
ret
cmp
(bad)
rcl
add
adc
xchg
cmp
sub
mov
mov
retf
into
loop
mov
dec
retf
cmps
scas
push
mov
pop
cmp
add
pop
pop
imul
leave
dec
push
push
add
xchg
sbb
adc
fnstenv
dec
mov
mov
ret
les
xchg
add
sti
pop
outs
xchg
stc
repz
fstp
sbb
mov
jo
push
ficomp
sbb
push
dec
in
pusha
stos
cmps
cdq
repz
ss
mov
add
jge
test
pop
or
jb
jl
mov
int
jne
in
ret
dec
movs
div
cmp
mov
and
test
leave
mov
inc
jg
popf
pop
jg
xlat
in
xchg
leavew
bound
sbb
mov
jno
push
je
push
ss
pop
mov
fiadd
(bad)
mul
cmp
sub
repnz
mov
fs
fist
xchg
pop
sti
xchg
fs
aas
cwde
ret
ins
inc
aas
(bad)
push
pop
or
(bad)
jp
lea
dec
sahf
mov
mov
push
pusha
call
ffreep
enter
sub
mov
fucomp
jb
cmc
ins
adc
int3
iret
inc
push
rcr
inc
(bad)
mov
pop
stos
mov
ds
jmp
mov
inc
or
jno
pop
push
xor
pop
xlat
push
cmp
or
or
dec
frstor
dec
push
sub
push
pop
mov
fld
scas
cmps
xor
inc
std
inc
lods
jb
jmp
cmp
loopne
jge
lods
call
jle
pop
fwait
pop
mov
inc
xchg
adc
out
data16
xchg
sbb
mov
dec
scas
push
mov
and
xchg
xchg
(bad)
pop
rcr
sbb
or
fcmove
mov
sbb
jb
fisttp
xchg
dec
mov
fwait
aad
test
les
call
int
test
xor
inc
jge
add
ret
sbb
add
loopne
retf
jmp
sub
add
or
xor
mov
pop
xchg
neg
adc
in
push
inc
xchg
dec
test
jl
sbb
mov
inc
retf
inc
inc
inc
aas
xor
ds
dec
sbb
test
cld
and
dec
ss
add
(bad)
sbb
adc
push
pop
push
xor
cmps
jno
shl
or
arpl
cmp
cmps
fsubr
lock
fisttp
mov
sbb
mov
std
xchg
ret
rol
fisttp
cwde
pop
lods
dec
out
imul
ja
not
add
mov
nop
pop
cmps
pop
lods
cli
sbb
mov
outs
push
mov
sub
pop
leave
cmps
cmps
shr
aaa
js
jne
jmp
shl
popa
out
add
int
inc
les
scas
inc
lahf
push
mov
sahf
stos
jb
inc
cwde
fstp
pushf
leave
imul
call
(bad)
xor
dec
push
ror
inc
mov
(bad)
fist
mov
mov
out
sbb
jg
nop
(bad)
or
stos
cmp
and
inc
dec
retf
cmps
sbb
sub
out
add
arpl
pop
popa
pushf
sbb
adc
sti
inc
idiv
or
add
aad
aad
lods
add
mov
lahf
push
pop
xor
dec
leave
and
mov
pop
ins
ins
sbb
mov
xchg
push
stos
imul
pop
pop
mov
xchg
aad
pusha
aas
enter
adc
jnp
jle
cbw
aad
cld
add
jecxz
jg
hlt
or
cmps
ins
sar
rol
dec
mov
jno
aaa
adc
mov
xlat
dec
add
jb
enter
adc
ins
rol
repz
xor
es
int
cli
jae
stc
cld
out
and
or
mov
fist
fs
aad
call
and
push
push
mov
push
xchg
or
sbb
mov
lds
push
dec
shr
js
mov
and
cli
dec
ins
fsubrp
push
and
(bad)
push
push
adc
(bad)
daa
popf
or
lds
push
fld
push
push
mov
xchg
xchg
rcr
retf
pop
inc
jns
push
ss
mov
mov
mov
xchg
clc
pop
in
je
mov
jecxz
inc
jbe
(bad)
and
bound
test
iret
(bad)
cmp
mov
call
adc
or
dec
push
(bad)
or
in
xor
push
arpl
bound
rol
fs
shr
mov
push
iret
test
aad
cwde
cmp
lea
adc
mov
retf
sub
sar
cmp
adc
movs
aam
popa
fs
loopne
mov
xlat
outs
(bad)
pop
inc
lock
lahf
xchg
push
hlt
inc
push
test
and
shl
cdq
and
call
adc
arpl
cmp
mov
hlt
push
jmp
in
mov
mov
outs
hlt
fsubr
fwait
mov
mov
mov
daa
xchg
xchg
jno
push
inc
outs
sbb
xchg
ins
nop
in
loopne
and
and
mov
popaw
scas
dec
pop
cld
pushf
mov
scas
mov
repnz
ret
sbb
cmps
xchg
mov
cwde
popa
jne
fwait
add
je
xchg
and
int3
dec
je
(bad)
in
je
and
cmps
mov
jle
push
fbstp
(bad)
lahf
cld
int
sbb
jmp
add
pop
ins
into
int3
push
outs
gs
adc
loope
jnp
pop
sahf
and
loop
add
arpl
xor
jns
mov
ret
lahf
rcl
fld
jecxz
in
fistp
aas
(bad)
std
je
mov
(bad)
jl
aad
imul
lea
int
jge
loope
pop
movs
adc
(bad)
fmul
fsub
test
inc
push
ins
sub
mov
xchg
retf
jle
cmps
lahf
test
int3
enter
std
xor
movs
in
loope
(bad)
xor
xchg
mov
(bad)
jae
ins
mov
inc
cs
sti
(bad)
stc
jne
sahf
daa
add
loop
add
lahf
(bad)
sub
sti
gs
(bad)
jl
fwait
mov
not
imul
add
xchg
js
outs
les
lea
ds
or
add
retf
test
jno
stos
pop
call
mov
push
push
cli
inc
cmp
mov
push
and
fsub
jg
mov
xor
inc
mov
stos
arpl
push
push
or
inc
data16
(bad)
mov
fisttp
stc
mov
popf
fadd
jl
xchg
xchg
cdq
arpl
or
push
xchg
fiadd
aaa
dec
adc
ficom
outs
xchg
dec
push
mul
dec
adc
mov
(bad)
mov
mov
xlat
call
adc
push
fsubr
mov
or
ins
sbb
daa
loope
(bad)
les
add
addr16
loop
pop
push
retf
pop
mov
test
popa
scas
jmp
movs
jge
gs
(bad)
leave
ja
out
dec
fst
inc
cmp
out
xchg
xor
clc
mov
mov
inc
cmps
std
pop
imul
neg
jno
cmp
retf
test
jb
mov
lea
sbb
jp
mov
cmps
pop
jae
mov
fwait
pushf
rol
fs
xchg
lock
xor
cmp
sub
repz
xor
jno
out
lahf
fiadd
fs
mov
add
(bad)
popa
mov
adc
push
movs
stos
jge
out
sti
dec
(bad)
aam
shl
outs
xor
or
push
mov
or
js
jnp
lahf
sahf
jns
jge
adc
xchg
cld
lods
clc
or
and
mov
(bad)
loopne
enter
test
cmp
pop
enter
arpl
fsub
fidivr
retf
inc
mov
pop
sub
xlat
dec
mov
push
mov
mov
and
adc
mov
stos
jne
popa
dec
mov
ret
aam
adc
mov
mov
rol
(bad)
xchg
mov
and
fimul
into
mov
hlt
gs
(bad)
ins
pop
mov
mov
addr16
pop
xchg
outs
inc
lods
imul
mov
xchg
mov
xor
jb
xchg
outs
adc
push
cmp
outs
mul
movs
add
icebp
jg
mov
fst
sahf
scas
stc
jae
push
push
xchg
cli
dec
leave
push
jge
mov
ret
mov
push
xchg
rcl
in
mov
je
sbb
(bad)
push
icebp
mov
je
ficom
int3
jmp
sub
pusha
xchg
gs
iret
fs
gs
mov
inc
pop
jecxz
pop
daa
jecxz
push
jne
(bad)
ret
sub
in
pop
aam
jbe
push
mov
xor
addr16
add
adc
push
fs
outs
jne
mov
addr16
xchg
movs
fsub
xchg
xchg
ja
retf
sbb
dec
push
xchg
jg
cmp
adc
xchg
int3
mov
movs
mov
xchg
jmp
ja
retf
jge
sbb
mov
adc
mov
jl
sbb
iret
call
shr
xchg
ret
cmps
into
fwait
out
gs
(bad)
jle
int
outs
cmp
movs
inc
aad
outs
pop
aas
in
addr16
(bad)
dec
push
jmp
out
cmps
gs
mov
in
mov
je
lock
pop
push
push
daa
test
outs
push
test
inc
jl
loop
fild
jle
push
pop
pop
outs
jge
outs
sub
in
xor
(bad)
jmp
xchg
test
xchg
fs
test
stos
push
test
fisttp
cli
gs
cmp
int3
push
cmp
out
xor
jge
mov
inc
bound
cli
retf
jnp
retf
sub
test
outs
ror
shl
mov
movs
fidiv
pop
mov
(bad)
ins
fist
jmp
jne
iret
push
adc
outs
mov
or
addr16
test
pop
ret
dec
sub
mov
outs
fadd
xchg
out
fcmovne
je
out
jne
daa
mov
out
aad
loope
aaa
(bad)
in
xlat
(bad)
bnd
jmp
ss
(bad)
jnp
cmps
jl
push
jbe
popf
mov
mov
xchg
retf
ret
shl
lods
jbe
jo
lock
xor
retf
mov
das
hlt
cld
adc
mov
(bad)
and
fnstsw
mov
rcl
mov
mov
mov
clc
mov
lds
cmps
pop
cdq
mov
mov
hlt
(bad)
retf
adc
vmulpd
stos
adc
int
jno
outs
sbb
push
scas
cmp
(bad)
ror
(bad)
mov
shl
in
lods
fild
jae
sub
in
out
int
add
addr16
aad
mov
dec
xor
xchg
retf
sti
add
cmps
leave
push
ja
dec
mov
cmp
loope
call
push
adc
(bad)
lock
sti
mov
and
in
gs
out
cmp
loopne
int3
xchg
repnz
stos
leave
xchg
pop
push
ficom
into
ja
fwait
pop
push
into
out
mov
loop
clc
hlt
addr16
pop
cmps
addr16
loop
mov
push
repz
jmp
jecxz
fcmovu
xor
push
xor
inc
div
ja
pop
xchg
push
xchg
mov
enter
mov
mov
xor
xlat
mul
iret
mov
retf
cmp
lahf
dec
scas
lds
shl
arpl
cmp
sub
fstp
data16
or
out
push
mov
push
sti
cdq
jecxz
sub
movs
int
call
cmps
iret
and
dec
test
stos
les
jmp
mov
xchg
jbe
add
ins
lock
jmp
jae
jmp
mov
push
repnz
xchg
(bad)
hlt
jg
ins
sub
mov
das
pushf
xchg
int3
sbb
sbb
pop
jbe
sub
popa
xchg
jns
sti
jge
out
jle
fimul
fwait
mov
out
jae
mov
push
mov
test
pop
cmp
pop
ds
inc
pop
jo
addr16
es
lods
out
or
(bad)
ss
dec
inc
mov
sub
cwde
arpl
(bad)
or
retf
in
xchg
xchg
mov
xchg
jp
dec
xchg
cli
jae
aam
ret
jp
mov
enter
mov
(bad)
arpl
dec
js
data16
and
pop
xchg
stos
pop
(bad)
fst
jb
pop
out
mov
jmp
pop
and
in
rcl
mov
aad
mov
adc
outs
mov
dec
clc
cmps
ins
and
fwait
ins
mov
push
retf
pop
mov
xor
xchg
pop
rcl
jne
ins
int3
imul
lea
or
scas
cmp
and
jbe
es
jb
push
xchg
test
(bad)
push
push
aam
mov
stc
push
xchg
and
xchg
scas
icebp
jno
pop
hlt
jge
popa
out
repz
retf
fsubr
nop
in
outs
test
call
popf
mov
sub
ret
scas
sbb
pushf
sar
push
cmp
mov
fwait
xchg
pop
test
cmp
test
adc
push
movs
jbe
cmps
mov
dec
into
mov
aas
fucomip
lods
dec
into
mov
pop
into
je
push
fmul
ja
retf
mov
mov
mov
fist
(bad)
jne
rol
mov
mov
retf
mov
fimul
and
xchg
outs
ja
retf
movs
(bad)
xchg
ins
test
push
lea
jle
fimul
cld
or
ret
ins
add
mov
int3
repnz
shl
mov
mov
bound
push
xor
arpl
ret
lea
pop
push
je
nop
xchg
jno
jnp
pop
jp
mov
push
mov
cmp
int
mov
add
mov
cld
out
fs
outs
popa
push
mov
dec
fs
inc
mov
shl
xchg
je
pop
sahf
jno
push
fld
push
test
in
ins
pop
rcr
xchg
test
mov
push
inc
test
inc
mov
mov
push
stos
imul
mov
movsx
or
fwait
xchg
pop
jbe
mov
or
xchg
in
push
jl
outs
xor
nop
lock
fisub
scas
xchg
add
mov
arpl
mov
call
mov
test
xor
(bad)
les
data16
xchg
cmp
push
es
sub
sbb
pop
inc
adc
ds
push
mov
inc
and
movs
xchg
inc
in
rcl
test
leave
pop
push
into
mov
fcmovnu
mov
dec
loop
shl
push
ret
mov
mov
inc
daa
pusha
je
(bad)
lock
mov
pusha
cmc
inc
cdq
inc
jo
adc
dec
inc
outs
jb
cmp
sub
adc
rcl
aam
and
enter
int3
or
fmulp
paddsb
rcl
lock
(bad)
push
repz
inc
sbb
(bad)
hlt
in
add
call
sub
(bad)
out
das
or
hlt
xor
push
div
adc
sti
cmp
push
inc
cmp
push
adc
or
sbb
dec
pop
push
adc
and
xor
xor
sbb
cs
pop
cmp
and
xor
sub
cmp
ins
pop
xor
inc
xor
push
push
ss
dec
cmp
dec
dec
jge
push
inc
adc
push
pop
popf
jns
pusha
mov
xor
cmp
xchg
xchg
mov
jge
cdq
nop
add
mov
mov
(bad)
fcmovbe
ret
cmps
lock
fwait
inc
retf
cmps
sahf
(bad)
iret
stos
mov
xchg
(bad)
mov
call
je
daa
fidiv
mov
int3
push
push
out
mov
adc
inc
jae
data16
mov
mov
mov
xchg
pop
jle
hlt
(bad)
cdq
push
rcr
mov
(bad)
cmp
xchg
popf
add
mov
xor
mov
leave
hlt
inc
cli
outs
call
les
jmp
rol
sar
mov
js
mov
call
inc
leave
scas
lea
shl
sbb
std
mov
gs
sahf
int
loop
and
push
xchg
mov
gs
lods
push
xchg
lods
mov
xor
repnz
outs
jmp
xchg
mov
mov
mov
pop
jmp
xchg
cmp
lds
mov
popf
inc
outs
xchg
xchg
inc
inc
lods
enter
in
loop
test
enter
ss
mov
mov
ret
push
call
sti
sti
stc
cmp
jmp
sbb
cwde
mov
adc
out
push
mov
loope
push
(bad)
fisttp
(bad)
(bad)
lock
out
enter
xchg
add
cdq
xchg
outs
pop
mov
jb
shl
push
ret
jbe
mov
lock
fadd
xchg
pop
sbb
xchg
pushf
addr16
jle
xchg
mov
out
pop
popf
jae
fld
sti
jnp
lahf
jne
out
fs
retf
inc
movs
lds
push
add
pop
adc
gs
push
jne
(bad)
push
int
outs
adc
movs
sbb
xchg
jg
mov
cmp
in
movs
dec
cwde
pop
jp
imul
data16
(bad)
ins
ins
int3
call
aam
fcomp
jae
jnp
jnp
jl
and
push
movs
sub
push
cmps
aad
push
fidiv
(bad)
in
int3
adc
sbb
and
fdiv
xchg
xchg
ja
retf
add
and
sub
retw
test
dec
data16
sub
enter
leave
mov
lea
xchg
(bad)
lea
addr16
aam
jg
xchg
mov
fwait
xchg
ret
retf
dec
fisub
inc
fwait
lds
outs
(bad)
test
fwait
dec
adc
jne
mov
int3
xor
cmps
pop
aam
sbb
push
and
in
movs
ins
dec
arpl
outs
push
adc
pop
(bad)
outs
jnp
xchg
outs
xchg
movs
xchg
aam
jg
xchg
shl
int
pop
movs
fst
push
push
xor
out
jno
cs
data16
cmps
jge
pop
adc
adc
jg
int
outs
cmp
movs
inc
aad
(bad)
lods
outs
xchg
outs
pop
int3
test
movs
ja
lods
jg
xchg
movs
ja
retf
jb
leave
xchg
jne
out
push
push
or
push
mov
mul
cwde
jne
(bad)
cwde
sub
shr
shl
mov
gs
fs
push
mov
gs
or
fwait
lea
(bad)
jne
(bad)
rcr
addr16
cmps
mov
xchg
mov
repz
mov
dec
mov
or
cmp
or
xchg
fidiv
call
arpl
fs
jnp
out
push
mov
scas
gs
mov
gs
cmps
fstp
pop
(bad)
cmc
jo
xor
cmps
mov
push
adc
xchg
enter
pop
push
dec
xchg
gs
jge
int3
scas
outs
pop
addr16
(bad)
xchg
xchg
ja
lahf
retf
mov
enter
popf
arpl
or
fbld
addr16
(bad)
addr16
mov
push
mov
jno
aaa
xchg
xchg
xchg
out
fs
retf
pop
movs
addr16
push
mov
(bad)
gs
jne
int3
mov
mov
mov
xchg
jbe
sahf
popa
jl
mov
data16
push
cwde
inc
mov
and
into
int3
mov
adc
movs
addr16
xchg
mov
test
cmps
data16
mov
mov
addr16
xchg
addr16
(bad)
pop
or
pop
gs
mov
xchg
pop
jo
addr16
pop
aam
outs
push
jnp
repnz
inc
mov
xor
adc
jg
mov
test
ret
mov
(bad)
mov
fnstcw
push
adc
pop
inc
push
jg
sbb
es
(bad)
sbb
loop
pop
cmps
and
data16
jb
fnstsw
xchg
push
jbe
test
out
pop
data16
mov
pushf
xchg
sbb
mov
stos
sub
xchg
enter
jle
or
rcr
(bad)
pop
jmp
test
outs
rol
inc
pusha
lahf
or
bound
jne
outs
fidivr
outs
jg
mov
jp
cmc
xchg
nop
push
xor
ret
into
xchg
je
and
je
and
je
or
mov
or
fnsave
retf
std
movs
cmc
xchg
or
out
push
xor
and
mov
and
data16
mov
cmp
inc
stos
fisubr
push
xchg
sbb
js
xor
cmps
add
(bad)
cmp
int3
adc
cmps
iret
aam
sbb
push
repnz
std
ja
retf
and
sbb
push
jg
sbb
jge
pop
jg
or
jns
push
mov
fdiv
lahf
sub
cmp
in
pop
imul
xor
lea
push
mov
xchg
xchg
dec
jg
das
(bad)
mov
ror
dec
jg
das
pop
mov
(bad)
(bad)
es
addr16
movs
jle
test
xchg
jg
test
jg
jmp
sub
jmp
ss
stc
mov
jg
stc
(bad)
jg
cmps
dec
jg
(bad)
pop
outs
movs
stc
(bad)
and
jg
idiv
and
imul
and
div
mov
out
jmp
xchg
imul
add
mov
mov
xchg
xchg
addr16
test
out
jno
and
into
leave
fs
ss
pop
or
sbb
jg
loope
adc
mov
je
test
fs
add
jns
push
sbb
gs
or
data16
fs
mov
jne
pop
stos
fs
dec
jne
jne
fs
mov
jne
jne
arpl
mov
fcmovne
jge
iret
movs
lea
mov
sar
mov
fidivr
mov
out
fsubr
jle
push
idiv
jmp
out
ss
outs
ins
jne
jg
ss
outs
jne
es
imul
out
push
push
add
(bad)
out
or
mov
mov
in
ins
imul
jns
add
aas
sbb
jmp
je
xchg
in
push
fisttp
and
adc
out
xchg
or
out
jl
sbb
pop
xchg
and
daa
push
lock
clc
mov
ds
loope
inc
jns
dec
jmp
(bad)
xor
jmp
in
and
bound
retf
mov
arpl
jnp
xchg
fadd
test
(bad)
mov
xchg
int3
fwait
fwait
adc
stos
(bad)
aas
int3
int3
adc
and
xor
fsubr
xchg
add
in
scas
mov
fild
jecxz
int
adc
jl
call
push
out
inc
add
push
xchg
test
loop
mov
pop
stos
cdq
(bad)
dec
adc
sbb
inc
icebp
pop
jle
nop
arpl
hlt
clc
imul
lods
mov
scas
mov
les
clc
leave
mov
imul
pop
add
stc
push
retf
enter
xchg
mov
cmp
ret
(bad)
sbb
xlat
pop
or
sbb
sar
stos
test
aad
mov
out
mov
xlat
fisttp
stc
sbb
fwait
stos
into
(bad)
xchg
dec
mov
push
faddp
fwait
push
jbe
movs
sbb
(bad)
mov
bnd
sti
xchg
add
call
pop
jmp
adc
pop
(bad)
xchg
jne
push
mov
call
ja
call
dec
xbegin
movs
and
mov
outs
call
push
test
xchg
sbb
imul
jne
mov
ficomp
mov
bound
(bad)
lahf
stos
call
xchg
mov
test
addr16
clc
mov
or
and
data16
cmp
iret
test
sbb
mov
cmp
mov
push
xchg
(bad)
sub
cmp
mov
lds
push
sahf
cmps
mov
stos
out
mov
stos
mov
fistp
mov
clc
repz
mov
sti
nop
sbb
mov
fstp
out
xor
sbb
enter
lods
fistp
out
mov
cmp
mov
mov
mov
in
rcl
mov
lock
xchg
pop
push
call
popf
xchg
sub
cmp
mov
pop
icebp
mov
sahf
(bad)
mov
add
out
add
outs
in
add
dec
dec
shr
mov
mov
cmc
fistp
sub
ret
push
inc
in
into
in
rcr
and
dec
repz
cmp
mov
leave
add
aam
push
scas
push
fisubr
pop
ror
iret
(bad)
out
rep
jo
aad
(bad)
ficom
mov
ret
jbe
fcmovnu
shl
xor
jl
arpl
lds
dec
jl
jle
scas
(bad)
or
iret
popf
les
pusha
leave
test
jb
fxch
ins
bound
clc
aaa
sub
fdiv
xor
xchg
add
repz
iret
scas
retf
mov
inc
ror
xlat
fnstcw
xchg
daa
(bad)
mov
into
ror
mov
mov
popf
int3
popa
mov
sbb
mov
es
xor
add
ret
fmul
stos
sbb
mov
xchg
(bad)
fiadd
jo
shr
fwait
mov
ret
lock
or
adc
push
scas
(bad)
int3
ds
pop
repnz
mov
xchg
sbb
cmps
lahf
cmp
sti
fnstenv
cmps
pop
mov
adc
pop
shl
xchg
and
xlat
fstp
ret
mov
mov
add
lods
rep
into
and
and
or
lea
jmp
sub
add
ins
xchg
cmps
fwait
test
adc
xchg
jecxz
mov
call
imul
xor
cmp
add
push
mov
scas
(bad)
rcr
sti
xadd
cli
cmp
out
mov
les
shl
dec
pop
call
out
hlt
in
jo
cmp
imul
into
pushf
adc
push
and
pop
or
sahf
lods
imul
mov
jmp
movs
xchg
movs
push
push
in
jae
adc
jmp
adc
repz
mov
xchg
lahf
mov
cmp
retf
mov
(bad)
imul
cmp
mov
pop
movs
pop
out
mov
dec
in
cmp
fwait
adc
gs
jo
dec
(bad)
dec
push
scas
xchg
dec
xor
mov
dec
dec
dec
ret
dec
push
scas
mov
lea
lea
push
call
dec
mov
dec
and
mov
popf
sbb
jo
imul
and
sti
mov
enter
or
sub
iret
ja
dec
sbb
outs
ror
arpl
imul
aad
pusha
(bad)
repnz
xor
imul
imul
fist
push
push
retf
sbb
scas
or
call
sub
es
imul
mov
xchg
icebp
aaa
sbb
cmp
sub
sbb
mov
sbb
stc
mov
out
adc
lahf
adc
test
test
(bad)
pop
stos
jae
mov
push
and
dec
xchg
(bad)
cdq
aas
jmp
jl
fwait
jne
fcmovnb
imul
jmp
jnp
into
pop
or
lods
pusha
ins
fidiv
mov
outs
mov
or
dec
pop
clc
scas
repnz
mov
popa
mov
daa
std
ins
outs
mov
and
pop
cmp
inc
xchg
pop
cdq
xchg
sbb
jae
push
out
faddp
dec
rol
fs
(bad)
aad
jmp
mov
(bad)
lds
lock
imul
call
mov
(bad)
mov
mov
pop
jne
(bad)
leave
aam
dec
call
cmps
jnp
sbb
and
mov
(bad)
(bad)
xor
jmp
fst
push
test
aad
mov
sub
pop
bound
and
out
int3
pop
adc
fstp
in
popa
xchg
mov
aas
dec
in
or
out
lahf
ret
lds
cli
aam
addr16
push
and
sbb
mov
mov
mov
and
cmps
xchg
adc
sbb
mov
mov
aaa
iret
int3
in
(bad)
push
loopne
fst
mov
mov
sub
jecxz
outs
pusha
out
ret
test
rcr
retf
pop
fild
sahf
mov
(bad)
and
sub
fstp
movs
mov
dec
les
or
aad
push
mov
shl
int3
bound
sti
mov
mov
push
pusha
(bad)
addr16
mov
(bad)
lahf
or
jae
adc
(bad)
leave
into
cwde
(bad)
fimul
sbb
hlt
out
mov
push
scas
push
dec
jp
and
push
outs
mov
(bad)
das
inc
sahf
movs
mov
sbb
not
pop
xchg
push
jle
(bad)
xchg
xchg
push
clc
(bad)
enter
mov
je
mov
sbb
int
outs
cmp
mov
mov
nop
iret
push
shr
mov
int
dec
test
mov
nop
lods
daa
sahf
pop
push
push
stos
retf
mov
cmps
mov
mov
xchg
ds
xor
ror
loop
clc
cdq
sti
aam
or
int3
push
mov
xor
loope
push
mov
cmp
push
add
mov
push
mov
ins
mov
mov
jno
sub
js
sbb
aam
into
pop
jg
pop
mov
jp
pop
data16
xchg
push
inc
call
inc
jmp
lahf
sti
dec
mov
jp
fisttp
jg
sti
inc
int3
add
fwait
mov
in
aaa
jne
lods
mov
stos
iret
push
mov
push
movs
push
int
mov
xchg
(bad)
jne
(bad)
lahf
(bad)
and
call
ins
retf
jge
jae
scas
jae
iret
lahf
adc
rol
and
mov
inc
lds
xchg
out
cmp
dec
add
jae
push
adc
adc
xchg
inc
mov
push
inc
push
push
ds
cmp
rol
sbb
in
jge
xor
add
imul
push
mov
outs
retf
mov
cmp
cmp
push
and
dec
clc
xchg
aam
movs
ins
mov
lods
inc
add
mov
arpl
aad
adc
lahf
push
je
push
xlat
mov
retf
mov
in
mov
(bad)
push
jb
retf
gs
movs
mov
add
in
pop
ins
adc
cmp
das
imul
retf
inc
cdq
mov
cmps
es
lods
rcl
loop
pinsrw
sti
(bad)
in
mov
ror
rcr
call
pop
xor
imul
inc
adc
inc
shl
mov
in
mov
adc
dec
retf
test
jne
test
in
sbb
mov
aaa
or
jbe
and
xor
sub
jnp
mov
ja
sub
js
mov
xchg
mov
cmps
mov
jg
arpl
call
push
movs
mov
(bad)
and
ins
movs
into
ror
sahf
outs
dec
push
mov
hlt
movs
xor
lea
dec
data16
out
hlt
test
dec
test
jmp
int3
pop
mov
rcl
inc
into
movs
push
hlt
push
fs
mov
jle
bnd
jnp
nop
(bad)
jmp
lds
inc
ins
cmp
popf
retf
out
mov
iret
fisub
inc
je
jnp
out
loopne
or
mov
mov
movs
jo
jnp
stos
jle
frstor
mov
lds
clc
stos
retf
sbb
addr16
fcomp
add
jp
fild
fscale
sbb
scas
pop
(bad)
out
ins
push
(bad)
jns
shl
cwde
inc
jns
xchg
sub
lahf
scas
mov
iret
xor
div
pushf
daa
mov
add
test
dec
repnz
jae
sbb
popf
lea
cld
pop
fidiv
stos
repnz
sbb
enter
or
imul
scas
add
dec
fs
xchg
inc
mov
shr
ins
adc
call
lahf
scas
in
ret
sahf
mov
mov
fnstcw
mov
mov
mov
cmps
mov
outs
push
cmps
faddp
and
aas
(bad)
sti
pop
leave
retf
ret
mov
test
push
mov
sbb
out
stc
jg
jno
clc
jbe
(bad)
movs
mov
dec
int
aaa
fsub
mov
cmps
or
lds
test
mov
lods
addr16
xor
das
push
mov
std
mov
scas
jno
imul
cmp
mov
cli
mov
and
call
xchg
cmp
xchg
jmp
jle
jmp
inc
loop
icebp
ret
xor
xchg
pushf
jp
add
and
hlt
in
stos
sbb
xlat
iret
mov
into
call
cmp
inc
xor
nop
dec
call
sbb
jl
enter
jecxz
jge
lock
idiv
sar
xchg
fst
pop
pop
(bad)
jmp
aas
js
adc
out
add
int3
xchg
and
mov
mov
xor
ins
jb
add
mov
pop
js
and
inc
xchg
daa
js
jb
xchg
cmps
jns
ficom
push
jmp
mov
mov
js
fs
mov
movs
lods
and
rcr
sub
in
jbe
mov
lods
mov
test
ret
into
stos
mov
hlt
neg
cdq
movs
mov
mov
cli
(bad)
clc
in
test
movs
or
jle
cmp
cmps
sbb
or
add
mov
inc
(bad)
(bad)
pop
(bad)
cdq
cwde
cld
add
mov
mov
mov
mov
adc
xor
inc
push
push
fmul
sbb
arpl
adc
outs
sbb
add
sbb
sbb
arpl
xor
iret
push
(bad)
shl
add
xchg
rol
push
xchg
add
ins
push
inc
mov
add
cwd
adc
xchg
test
sub
(bad)
inc
xchg
mov
sbb
pop
(bad)
mov
jns
test
cwde
pop
mov
jb
daa
sbb
(bad)
jne
jnp
repnz
loope
scas
and
rol
and
(bad)
xchg
jno
stos
jmp
dec
adc
jbe
adc
jbe
adc
imul
out
scas
ror
lds
loop
in
les
repz
push
pusha
xor
cmps
mov
jbe
pusha
sub
cwde
mov
loop
cmp
out
dec
fild
cmps
sti
cld
mov
cmps
xchg
mov
rcr
jg
pop
retf
fwait
sbb
push
(bad)
xchg
xchg
push
es
xchg
push
pop
xchg
cdq
push
jle
test
adc
sbb
adc
sbb
adc
sbb
adc
sahf
or
pop
aam
and
movs
stos
daa
(bad)
out
not
in
xchg
push
fidivr
or
sahf
int
push
femms
test
pop
test
loop
iret
test
mov
rsm
pushf
cli
sbb
stos
fild
test
mov
mov
dec
int3
jae
stc
fisub
ret
mov
dec
repnz
push
out
outs
xor
add
jle
sahf
xchg
outs
bound
cwde
sbb
inc
mov
jno
mov
icebp
loopne
ja
(bad)
rcr
addr16
mov
or
out
mov
in
leave
xchg
in
mov
sub
inc
bound
jmp
je
js
je
pop
scas
or
cwde
push
nop
rcl
jg
test
mov
(bad)
mov
xchg
xchg
xchg
add
(bad)
xchg
xchg
pop
loope
pusha
in
mov
out
stc
mov
jge
scas
xor
or
fmul
adc
(bad)
sti
stos
daa
push
push
lahf
out
daa
test
cdq
mov
fnsave
and
jl
or
loopne
movs
in
xor
jp
fmul
xor
inc
fadd
sbb
ret
push
jb
shl
mov
dec
sti
add
test
popa
ins
mov
imul
out
xchg
mov
add
adc
fsubr
icebp
fld
cld
mov
nop
cdq
in
in
xchg
outs
dec
call
test
fcomip
mov
dec
cmps
rcl
jnp
ret
test
add
in
cmp
and
outs
imul
test
ret
repz
rcl
jne
shl
stos
shl
sbb
(bad)
sub
stos
aad
arpl
sub
mov
adc
sub
fcom
cld
cmp
into
pop
dec
loop
mov
addr16
sub
call
xchg
lock
out
stos
mov
dec
imul
fdivrp
xchg
rol
test
jb
mov
cmps
ret
cdq
aaa
xlat
leave
mov
stos
stos
clc
or
lods
jmp
dec
mov
ins
mov
ins
mov
push
loopne
iret
adc
adc
bnd
mov
sbb
ret
retf
jae
add
push
iret
mov
out
loop
stc
dec
adc
lahf
xor
xchg
pop
rcl
pop
ror
aaa
jmp
mov
loopne
stos
movs
mov
repnz
loopne
jne
pop
or
ror
or
ror
mov
test
sbb
ss
test
jo
(bad)
fisttp
sub
icebp
pop
mov
(bad)
dec
and
enter
mov
(bad)
push
ret
call
in
cmps
push
mov
js
out
loopne
mov
or
scas
call
hlt
lahf
sbb
jp
in
cmp
pop
xchg
mov
fmul
out
jns
idiv
test
push
mov
sbb
pop
test
pop
sub
mov
pusha
jno
mov
inc
popa
scas
js
dec
pop
sbb
rcr
xchg
aam
mov
pushf
aad
xchg
(bad)
cmovbe
add
push
xchg
jno
test
shl
sbb
cld
mov
rcr
push
pop
lods
mov
test
xchg
jns
fwait
dec
pop
out
push
jb
dec
mov
xor
xchg
xchg
int3
into
outs
mov
test
fsubr
retf
mov
adc
xchg
add
sbb
inc
mov
cmps
and
mov
out
jmp
mov
add
sub
(bad)
xor
data16
cmp
outs
add
push
fnstsw
xchg
and
int3
sahf
outs
ja
mov
fwait
aam
jg
xchg
push
fisttp
xchg
inc
jbe
aad
jg
retf
gs
mov
data16
cmps
dec
pushf
aas
or
push
stos
jg
xchg
mov
js
retf
xlat
outs
xchg
gs
fcomi
or
imul
mov
mov
mov
jecxz
mov
pop
add
sbb
outs
ret
add
shl
jecxz
(bad)
cmp
mov
mov
(bad)
clc
push
dec
aam
sub
xchg
mov
pop
mov
xchg
xchg
mov
mov
xor
arpl
sbb
xchg
adc
inc
mov
rol
adc
sbb
jge
mov
pusha
idiv
and
jno
ins
push
jmp
fwait
ins
xchg
xchg
mov
pop
shr
xchg
mov
xchg
xchg
addr16
js
ror
fadd
addr16
loop
mov
add
test
addr16
adc
rol
data16
leave
les
ror
rol
stos
mov
jmp
lock
test
ret
or
mov
xchg
mov
popa
mov
mov
enter
scas
jmp
cmp
pop
jmp
loop
xchg
daa
cmp
lods
call
add
adc
cs
inc
adc
ret
repnz
loopne
out
les
push
mov
addr16
in
enter
push
in
xor
shl
pop
retf
push
loop
fwait
pop
mov
jg
rol
or
iret
pop
mov
pop
aad
mov
(bad)
(bad)
in
jns
adc
int
sub
mov
adc
imul
cmps
das
test
adc
push
sub
xlat
jns
out
dec
or
sub
jns
cdq
sub
mov
loop
mov
mov
cmp
sbb
(bad)
mov
cwde
dec
ss
ret
pop
arpl
pop
xchg
out
xchg
xchg
scas
mov
ins
popf
mov
push
ins
sahf
aad
mov
and
cmps
mov
jmp
sub
xchg
(bad)
mov
ds
pop
xchg
in
add
dec
sbb
xchg
test
xchg
outs
movs
inc
in
xchg
mov
ds
adc
jno
sub
or
arpl
rcl
mov
push
mov
idiv
and
rcl
mov
int
fmul
pop
out
adc
mov
cmps
ds
repnz
imul
enter
mov
mov
pop
add
popf
enter
inc
scas
xchg
mov
cwde
movs
test
lods
lods
mov
loope
outs
xor
mov
dec
(bad)
lods
xchg
popf
push
jnp
bound
jle
test
cmps
into
mov
repz
clc
fimul
adc
sahf
lahf
or
xchg
fdivr
pop
xlat
mov
std
pushf
mov
and
scas
jl
mov
test
mov
sub
mov
out
add
jmp
hlt
mov
nop
mov
or
test
push
retf
xchg
pop
jmp
lds
jecxz
loop
cli
out
int
hlt
lock
clc
cdq
add
rol
bound
call
das
add
push
jg
imul
push
retf
scas
pop
inc
fcom
(bad)
pushf
adc
arpl
cmps
scas
mov
push
ret
adc
fbld
dec
fwait
test
pop
dec
cmp
mov
(bad)
xchg
lods
adc
icebp
gs
and
inc
or
test
jmp
xor
enter
mov
mov
jge
dec
sahf
arpl
retf
bound
pop
test
ins
nop
fidiv
add
cmp
dec
addr16
arpl
in
scas
fdiv
pop
ret
neg
adc
jne
fiadd
inc
mov
js
mov
ret
and
xchg
sub
out
jbe
pop
retf
stos
mov
cmps
xchg
mov
push
nop
pop
mov
jg
mov
mov
xchg
add
outs
and
pop
jbe
repnz
mov
xchg
xor
and
ret
scas
addr16
popf
and
das
jmp
leave
xchg
mov
aad
sub
adc
mov
lock
dec
jp
mov
xor
jmp
fwait
pushf
dec
jmp
test
mov
lahf
cmps
cmp
retf
test
mov
or
adc
fiadd
pop
mov
or
xchg
pop
jecxz
int3
repnz
jbe
call
fcom
sub
mov
push
nop
mov
mov
push
mov
scas
jmp
pop
push
mul
pushf
jae
sbb
inc
pop
xchg
push
xchg
fsub
lahf
dec
mov
sbb
add
out
imul
cdq
lods
fs
je
ja
mov
dec
fwait
imul
rcr
idiv
out
xlat
lahf
sbb
mov
mov
pop
pushf
(bad)
mov
xchg
in
jle
into
rcr
sbb
jecxz
or
rol
or
pop
ficomp
ja
fistp
iret
movs
xchg
neg
mov
ror
ins
popa
mov
push
fdiv
loopne
call
inc
mov
cmp
call
sbb
add
cmp
cli
mov
jl
mov
fcmovnbe
mov
imul
xor
dec
sub
ja
mov
inc
test
xor
push
fistp
inc
cmp
adc
ret
dec
data16
aam
cmps
xchg
inc
sub
mov
imul
scas
gs
or
scas
pushf
mov
pop
aas
loopne
loopne
stos
mov
xchg
(bad)
and
pop
ficom
fcom
or
out
mov
stos
in
xchg
outs
sbb
cwde
jmp
xchg
jae
mov
loope
movs
or
ret
hlt
in
imul
mov
jae
xchg
es
mov
dec
retf
lea
mov
push
pop
pushf
jecxz
pop
lods
call
push
cmp
int
inc
(bad)
popf
fisttp
mov
pop
xor
inc
dec
pop
add
cdq
movs
inc
xchg
lods
repz
pop
jb
jmp
cli
xchg
movs
mov
jp
gs
ins
sahf
not
sbb
int3
cdq
xchg
arpl
mov
retf
xchg
fist
scas
adc
push
(bad)
cmp
(bad)
iret
pop
out
jno
les
mov
dec
mov
ja
mov
pop
cdq
cmps
jmp
cmc
in
movs
shrd
cwde
out
fwait
mov
mov
movs
out
test
and
cmp
ja
sub
jecxz
mov
call
outs
push
outs
(bad)
jno
mov
lds
jne
stos
cmp
(bad)
fmul
inc
jo
xchg
outs
inc
fld
pop
rol
xchg
ret
push
push
(bad)
sar
pop
shl
and
jmp
push
repnz
and
(bad)
sbb
aad
xchg
push
retf
outs
outs
stos
or
scas
int3
add
addr16
mov
xchg
stos
sbb
sbb
xchg
xor
lea
jnp
lahf
jae
fdiv
pop
fnstsw
xchg
arpl
and
dec
(bad)
and
ja
adc
imul
xchg
ret
ret
xchg
call
mov
xchg
push
out
pop
int
stc
dec
inc
into
popa
push
jmp
cmp
arpl
push
call
cld
arpl
enter
les
fs
jmp
sar
mov
ffreep
scas
sub
(bad)
adc
pop
scas
push
jecxz
push
rcl
cmps
lds
pop
or
outs
out
mov
stos
dec
(bad)
fsub
popa
mov
or
mov
iret
jmp
fisttp
push
xchg
add
jl
push
inc
dec
mov
(bad)
(bad)
retf
xor
outs
inc
xchg
faddp
shl
out
cmp
mov
ja
outs
ss
ret
inc
push
aaa
mov
pop
(bad)
iret
fcom
(bad)
mov
adc
scas
xchg
aam
es
aam
pop
jb
cdq
jge
add
test
add
out
daa
push
iret
aas
arpl
fwait
call
addr16
fdiv
add
es
mov
push
push
xor
imul
or
ja
push
sub
dec
call
jl
outs
xchg
ficom
xchg
leave
retf
jae
mov
push
mov
push
cmp
jge
add
jle
xor
mov
xchg
(bad)
and
stos
and
repz
lods
inc
mov
fcomp
shr
mov
aad
loopne
cs
push
add
xor
jns
clc
fs
mov
mov
sar
ret
not
stos
add
in
or
xchg
and
sub
push
out
and
mov
ins
jno
and
iret
loop
pushf
ror
sub
ja
pop
mov
lds
add
jae
icebp
(bad)
add
jecxz
dec
addr16
inc
mov
jae
loopne
stos
ds
outs
ret
jmp
jo
leave
or
sbb
pop
outs
es
stos
mov
div
idiv
sbb
xor
stos
lahf
repnz
ins
mov
fcmovu
lahf
das
cmps
xchg
clc
daa
cwde
sbb
aam
addr16
sbb
cmc
div
jae
arpl
adc
add
jbe
in
dec
or
and
stc
jle
cld
and
xchg
jae
xchg
test
adc
mov
dec
fs
aad
loop
push
ds
lds
imul
xor
or
lds
mov
into
shr
xchg
mov
cmc
pop
ror
ins
dec
xchg
mov
loopne
sahf
nop
int
mov
(bad)
jl
jno
popf
cmp
fisttp
jp
mov
inc
and
or
mov
adc
rcl
ds
dec
lahf
mov
shr
mov
shl
xchg
cmp
fadd
shr
sbb
neg
jecxz
mov
pushf
pop
jle
xor
push
mov
xchg
jnp
in
in
and
jl
jno
push
popf
cwde
pop
movs
jns
movs
hlt
cmp
adc
push
shl
mov
pusha
xchg
jns
sti
add
call
xlat
mov
pop
retf
stos
dec
enter
mov
dec
test
xor
out
jb
clc
sahf
mov
test
mov
mov
cmp
and
push
lods
stc
popf
adc
jno
in
sub
cmp
cmps
lds
(bad)
hlt
(bad)
mov
cmps
stos
sub
lds
(bad)
shl
mov
popf
fwait
mov
mov
test
xor
dec
ret
jge
mov
test
or
retf
push
test
cmps
call
stc
adc
fdiv
xchg
jno
add
or
shl
je
jae
mov
xchg
aam
inc
pop
test
rcl
push
push
cmp
mov
fwait
xor
ret
out
(bad)
lea
xchg
lahf
mov
rcl
imul
sbb
ret
sub
cmp
jno
mov
jae
mov
(bad)
pop
push
push
stos
popa
adc
lods
arpl
loop
fmul
cld
add
je
outs
push
loope
popa
cmc
ret
sub
jecxz
xchg
inc
data16
icebp
xor
cwde
inc
ja
push
and
inc
retf
dec
movs
push
dec
mov
pop
push
mov
pop
(bad)
sahf
push
and
stos
xlat
xchg
jno
push
push
jo
adc
ins
sbb
sbb
stc
dec
aad
mov
fcmovnu
out
call
xchg
arpl
les
loopne
(bad)
sbb
icebp
jne
dec
es
ret
jmp
je
pop
daa
ins
addr16
imul
sub
cs
std
or
and
xchg
or
icebp
cmp
out
in
mov
fisub
lock
inc
xchg
int3
sub
mov
nop
mov
imul
add
dec
add
xor
popf
rol
mov
fcomp
fadd
add
fmul
lahf
mov
xchg
sub
daa
data16
sub
inc
lahf
shufps
and
xchg
xchg
mov
and
arpl
xor
ds
dec
mov
lea
mov
fidivr
dec
add
push
inc
retf
dec
movs
ins
xchg
push
sahf
out
push
scas
or
mov
cmps
leave
fwait
mov
shl
(bad)
(bad)
int3
push
jo
adc
mov
lock
jbe
(bad)
and
jb
inc
aad
outs
push
jae
jne
xor
scas
and
jne
(bad)
test
mov
aam
add
inc
frstor
xchg
inc
js
retf
pop
or
mov
gs
xchg
fwait
mov
mov
(bad)
push
add
add
mov
cmp
xchg
mov
mov
xor
pop
push
jle
pop
in
sti
pop
push
mov
mov
in
push
mov
lods
addr16
sti
clc
mov
jp
mov
jle
push
jbe
cmps
mov
fisubr
int3
fisubr
addr16
jb
jmp
mov
retf
retf
movs
ins
cwde
rol
bound
push
xchg
cmp
data16
pop
cmps
and
(bad)
xor
pop
jo
data16
imul
jbe
fdivr
xchg
add
xchg
fs
xchg
out
xor
in
icebp
stc
outs
jae
xor
add
cld
bnd
xchg
ret
popa
adc
sbb
fmul
faddp
repz
dec
inc
call
(bad)
cld
mov
and
in
ret
mov
mov
es
inc
leave
pop
sbb
outs
inc
inc
stos
outs
aas
jle
or
mov
(bad)
xor
xchg
pop
aam
adc
gs
jmp
fdivr
retf
movs
outs
xchg
jae
out
xor
inc
pop
dec
jae
xchg
test
ret
inc
ds
mov
movs
push
jle
ret
xlat
jecxz
inc
test
dec
arpl
cli
adc
pop
pop
xchg
lods
push
push
xor
rcr
sbb
mov
bound
or
test
inc
adc
push
pop
rcl
inc
jb
or
cli
mov
imul
mov
mov
jl
and
dec
add
gs
xor
jo
jbe
pop
cmp
mov
pop
popf
(bad)
cli
xlat
inc
mov
pop
xor
imul
mov
add
xlat
test
(bad)
lahf
shl
adc
ret
xchg
in
pop
leave
es
push
jge
push
fist
mov
cs
or
jmp
push
dec
sbb
push
mov
dec
and
add
fwait
inc
test
mov
sbb
iret
pop
stos
test
out
mov
dec
cmps
add
std
and
and
lods
mov
and
cwde
daa
jmp
fsubr
sub
pop
fdivr
push
arpl
add
pop
faddp
(bad)
dec
pop
out
fisub
and
imul
adc
pushf
les
lds
and
ror
lock
(bad)
cmp
push
push
scas
ret
fidiv
push
dec
push
adc
and
inc
inc
ret
lods
out
or
push
aas
xchg
fldcw
add
push
sub
adc
imul
mov
push
outs
retf
inc
xor
into
mov
adc
pop
inc
sbb
dec
mov
inc
out
repnz
std
xor
mov
jl
adc
js
dec
popf
xor
movs
or
mov
ret
cmps
mov
pop
dec
add
adc
pop
jae
mov
(bad)
imul
mov
and
test
mov
xchg
cmps
std
arpl
inc
movs
mov
mov
push
jge
xlat
mov
lds
je
push
xchg
aad
mov
xor
pop
inc
popf
push
cmp
or
xor
cdq
xor
mov
(bad)
xchg
cs
nop
bound
dec
popf
rcr
pop
mov
or
fwait
pop
add
lds
mov
(bad)
mov
push
scas
adc
mov
adc
test
jge
sbb
inc
fadd
mov
jg
scas
(bad)
test
mov
mov
pop
pop
push
(bad)
std
push
adc
and
ss
fldenv
sti
xor
mov
repz
cmps
adc
outs
mov
in
mov
dec
push
or
lods
in
push
(bad)
pop
js
ja
pop
mov
stos
ss
arpl
add
dec
mov
imul
cld
mov
mov
cmp
mov
das
mov
push
sbb
mov
adc
repnz
add
jmp
aaa
or
push
jae
add
mov
iret
xchg
mov
pop
ins
leave
mov
mov
and
adc
ja
mov
stos
push
or
bound
(bad)
ins
mov
outs
xchg
dec
pusha
test
clc
mov
push
enter
aam
lahf
adc
into
push
mov
mov
mov
or
xchg
jg
ret
add
push
sub
(bad)
mov
mov
mov
xchg
sti
lock
popa
stos
push
out
aam
inc
mov
retf
jmp
in
popa
retf
sbb
dec
cmp
addr16
mov
pop
retf
pop
push
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
