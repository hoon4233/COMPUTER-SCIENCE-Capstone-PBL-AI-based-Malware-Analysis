mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
dec
outs
je
addr16
inc
sti
int3
fstp
cmp
jg
rol
jns
inc
iret
jae
out
nop
pop
daa
push
outs
jb
add
ins
or
jbe
push
push
je
imul
add
dec
fstp
push
or
add
lahf
cmps
stc
mov
push
dec
bound
arpl
xchg
push
mul
sbb
loop
jae
xchg
inc
dec
ins
in
into
invd
dec
push
outs
imul
outs
dec
cdq
ins
fst
int3
add
jmp
jnp
mov
adc
adc
jns
sub
(bad)
out
xor
inc
push
add
sub
or
je
inc
ins
dec
loopne
cmp
popaw
arpl
jb
std
xchg
fnstcw
inc
add
js
jb
jb
jo
push
jb
pop
pop
push
jb
jb
push
mov
jb
jb
inc
cmp
jb
jb
xor
mov
jb
jb
and
cwde
jb
jb
xchg
and
jb
jb
mov
jb
jb
movs
sbb
mov
call
les
ret
mul
fucomp
jmp
je
movzx
mov
ss
pop
ret
adc
dec
dec
dec
outs
invd
add
cld
shr
daa
and
hlt
push
push
mov
std
jmp
add
push
add
enter
add
jg
mov
mov
mov
ret
lea
dec
push
inc
cmp
jne
mov
mov
mov
push
nop
mov
add
std
outs
ja
scas
mov
mov
xchg
pop
test
xchg
mov
mov
mov
jmp
lods
mov
mov
adc
add
jne
mov
mov
adc
ret
out
cld
mov
mov
mov
mov
mov
add
rcr
clc
mov
mov
sahf
rol
push
or
push
jne
and
mov
adc
sub
or
inc
add
dec
push
add
fdecstp
cmp
jne
cmp
mov
cmp
jne
mov
mov
aas
sbb
dec
mov
test
pop
pop
pop
adc
add
xchg
out
clc
jl
sti
mov
sahf
mov
lock
mov
add
call
ja
and
mov
mov
sub
cld
or
test
jnp
jne
leave
test
mov
add
mov
add
std
lahf
jge
cmp
cli
sub
jmp
sub
stc
mov
enter
adc
ror
or
or
mov
or
cmp
jne
sbb
nop
out
pop
clc
pop
push
mov
mov
cmp
mov
ins
push
add
mov
fwait
mov
push
jg
test
mov
ins
fsub
sar
dec
add
mov
out
mov
push
and
push
mov
(bad)
jge
ins
data16
dec
cmp
push
lahf
push
xchg
mov
add
mov
add
in
mov
pop
sbb
xlat
in
mov
mov
mov
push
and
call
mov
adc
mov
or
out
ja
popf
mov
repz
add
ja
cmp
jp
hlt
outs
xchg
or
sbb
jmp
loopne
or
mov
fild
mov
cmp
je
jle
sbb
or
or
adc
xchg
or
jno
hlt
or
jmp
sbb
loop
in
div
or
sub
mov
mov
popf
cmp
pop
cmp
add
push
jbe
mov
cmp
or
or
jbe
scas
adc
sti
push
push
sub
jmp
ss
mov
and
push
push
sub
cs
inc
(bad)
xor
jmp
scas
dec
jne
sahf
nop
in
sub
fistp
xor
cmp
jae
mov
cmp
xchg
add
sbb
inc
mov
pop
inc
add
sar
xor
fs
(bad)
(bad)
aas
mov
out
shl
shl
cmp
mov
xlat
test
push
xchg
in
je
push
cmp
ror
xor
adc
jne
push
(bad)
pop
add
pop
xlat
ds
jae
cmp
movs
and
push
sbb
pop
jne
fmul
lahf
push
mov
mov
jl
je
out
push
add
je
cmp
or
pop
pop
inc
jle
push
sub
adc
cmp
jl
add
xor
lea
jg
jne
sub
pop
sbb
push
or
mov
inc
lea
test
les
xchg
jmp
mov
cmc
jne
push
push
xchg
xchg
cmp
(bad)
xchg
inc
cmp
sub
inc
popf
sbb
adc
lock
(bad)
inc
in
pop
ds
lea
lock
(bad)
jnp
adc
fidiv
mov
out
ror
xchg
xchg
mov
push
test
mov
(bad)
ret
addr16
shl
or
adc
jmp
rol
data16
add
jmp
pop
sbb
add
push
push
std
cmp
and
(bad)
cmp
cmp
fisttp
inc
shr
nop
push
mov
cmp
add
into
fld
jle
hlt
inc
cmp
in
mov
adc
add
sub
or
pop
pop
ds
pop
pop
push
adc
sub
push
fstp
dec
ret
mov
mov
outs
test
test
shl
nop
sbb
lods
add
cmp
arpl
jo
out
ja
pop
add
add
imul
add
sbb
test
bound
jmp
mov
sbb
call
fistp
push
cmp
push
jo
add
adc
stc
clc
mov
cmp
pop
test
jns
add
sar
and
pop
cmp
and
push
mov
pushf
mov
sub
mov
ficom
mov
adc
test
dec
fadd
jb
add
or
mov
cmp
test
stos
icebp
(bad)
aas
xchg
lea
cmp
jl
mov
out
jbe
pop
jb
fcomp
inc
or
mov
or
add
jmp
clc
mov
and
adc
stos
cmps
fild
push
or
push
rol
push
xchg
ss
jle
or
ret
dec
pop
cmp
or
cmp
xor
cmps
(bad)
sub
out
lahf
popa
stos
inc
aas
add
and
dec
jb
sub
cmp
cmp
div
xor
hlt
or
fdiv
mov
add
mov
clc
add
and
repz
outs
pop
(bad)
bound
and
mov
push
add
clc
adc
fdivr
cmc
cwde
jl
test
fist
sbb
jg
clc
sub
sub
cmp
jge
js
retf
ds
push
nop
retf
or
and
inc
push
cld
fmul
sub
in
jno
stos
sti
jge
mov
sub
mov
and
not
lea
shl
je
or
loopne
out
mov
dec
cs
mov
mov
add
sub
jo
mov
cmp
rcl
dec
cli
cwde
nop
hlt
jbe
sbb
pop
mov
sbb
cmp
inc
adc
or
add
sub
cmp
or
jno
inc
test
sbb
or
test
cmp
clc
or
xchg
push
push
in
push
adc
mov
adc
daa
push
or
lock
dec
out
aam
ins
sar
movs
movs
mov
push
aas
cmp
nop
or
pop
cmp
jae
cld
mov
pushf
sub
add
in
repz
xor
sub
or
jl
les
adc
add
aaa
fadd
mov
mov
dec
adc
(bad)
loopne
pop
test
fs
jbe
mov
call
sub
sbb
jnp
int3
lea
and
mov
mov
add
sar
cmp
fnstsw
adc
push
xor
shl
mov
add
mov
js
call
mov
test
jle
adc
pop
mov
sbb
je
pop
jmp
sub
lock
dec
sbb
ins
sti
add
pop
dec
adc
sub
xor
mov
push
adc
inc
add
aad
das
add
sub
adc
dec
jmp
jp
pop
adc
jle
jmp
jbe
add
xchg
cdq
jmp
repnz
mov
add
add
and
fwait
pop
cmps
push
cmp
test
sub
punpcklbw
call
adc
push
repnz
xor
push
push
mov
adc
jmp
pop
or
push
sub
pop
jg
mov
inc
stc
je
cwde
mov
add
push
or
cmp
mov
cmp
cmp
cmp
or
fmul
push
or
add
add
sbb
jns
and
dec
sub
(bad)
cmp
add
cdq
and
xor
or
bswap
and
and
mov
or
pop
dec
adc
pop
pop
push
push
or
xor
cmp
push
fisttp
(bad)
and
das
pushf
jo
xor
fstp
and
jg
pop
dec
loopne
push
test
jne
test
test
or
dec
sbb
in
mov
push
add
ror
or
xchg
pop
and
ret
sbb
je
das
add
dec
ds
shrd
mov
cmp
pusha
stc
lock
stos
in
add
jle
or
dec
lock
pusha
mov
adc
ret
sbb
pop
sbb
mov
or
jmp
lahf
pop
std
sub
(bad)
mov
cdq
add
add
sbb
mov
dec
mov
add
loope
pop
outs
cmps
sub
sbb
(bad)
fsub
(bad)
push
mov
call
outs
sbb
adc
(bad)
mov
dec
mov
mov
(bad)
cmp
int3
adc
mov
lea
cmp
js
not
adc
add
loopne
push
movs
add
scas
cmp
mov
cli
pop
cli
mov
cmp
imul
(bad)
rol
fnsave
pop
cmp
jl
or
jmp
sbb
dec
daa
add
xor
and
aaa
or
mov
(bad)
sub
popa
dec
out
ret
or
cmp
jge
ffreep
and
loop
sub
pusha
pop
pop
xchg
or
add
mov
cmp
ret
sbb
ret
cs
cli
push
out
stos
and
cdq
repz
or
aam
mov
sub
xor
push
enter
jo
ins
es
add
mov
pop
cld
jmp
hlt
test
mov
add
cmp
ss
adc
mov
xor
xchg
dec
pop
xchg
jbe
mov
dec
ror
push
sbb
adc
mov
pop
pop
or
leave
jae
add
xor
lea
jnp
push
mov
inc
sbb
jb
mov
test
pushf
(bad)
xor
mov
repz
(bad)
xor
mov
xor
add
aam
test
push
add
ror
xor
add
(bad)
(bad)
mov
int3
enter
enter
fmul
(bad)
(bad)
(bad)
loopne
jecxz
ss
shl
in
push
push
push
pop
cmp
and
jp
rcr
xchg
(bad)
mov
xor
mov
enter
outs
scas
lods
mov
mov
adc
div
je
push
mov
rol
jb
push
cld
lea
xor
std
cmp
xor
mov
fistp
fwait
pop
pop
(bad)
cmp
mov
mov
das
cwde
iret
(bad)
cmp
(bad)
mov
cmp
ja
inc
mov
add
jmp
iret
mov
inc
and
ror
xor
push
mov
pop
push
icebp
mov
add
ret
jmp
fnstenv
cmps
loopne
clc
dec
je
mov
pop
add
aaa
sub
(bad)
jmp
loop
push
adc
add
and
je
mov
cmp
jne
dec
je
shl
mov
cmp
jne
or
call
sbb
cli
adc
cmp
jne
sbb
shr
out
out
xchg
jns
add
push
mov
shr
scas
xor
out
mov
inc
dec
dec
pop
cmp
outs
ret
rol
pop
and
mov
cmp
out
cmp
jne
dec
dec
dec
and
inc
ror
pushf
mov
jecxz
jae
push
iret
adc
mov
shl
data16
rcr
or
stos
mov
stos
pop
daa
cs
rcl
jae
fstp
dec
push
inc
cmp
je
mov
or
je
or
je
and
xor
popa
pop
je
xor
not
and
test
je
jmp
or
jmp
and
outs
ret
dec
ja
cmp
ja
lea
push
add
push
xor
dec
inc
xchg
adc
test
cli
std
jg
fdivr
js
pop
sub
jmp
inc
dec
jmp
mov
fnstsw
je
nop
popa
jb
mov
push
adc
out
aaa
add
or
cld
(bad)
call
jmp
ret
push
mov
mov
inc
test
je
inc
mov
dec
jne
pop
ror
(bad)
push
cmp
or
add
mov
dec
jne
inc
dec
jmp
aas
scas
xor
xor
dec
cmp
jne
push
pop
(bad)
rcr
add
ins
xor
(bad)
cmc
or
aam
mov
add
or
push
push
push
fdivr
and
dec
ficom
les
mov
popa
pop
hlt
push
data16
add
cmp
and
cld
sub
jge
cmps
sub
loope
and
mov
clc
data16
or
mov
(bad)
(bad)
mov
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
fucomip
call
dec
popa
jae
push
popa
ins
jne
rcr
jecxz
fldcw
cmp
mov
nop
and
mov
xor
into
inc
ror
cmp
shl
(bad)
fcomip
outs
mov
or
dec
cld
fmul
cmp
xor
and
jne
jge
ret
sbb
push
inc
fcomp
xlat
mov
mov
pop
jnp
inc
(bad)
sbb
dec
mov
call
push
movs
pop
inc
das
mov
jne
pop
xchg
jge
mov
ja
xor
push
and
aam
pusha
lock
push
movups
sub
pop
ins
pop
ret
pop
xor
jle
and
(bad)
fdivrp
cmps
pop
mov
cld
xchg
enter
dec
fadd
pop
inc
test
and
pop
loope
fiadd
loop
mov
pop
cld
push
sti
jg
or
sbb
in
cmp
je
pop
mov
add
jae
dec
sar
div
mov
mov
push
sbb
cmp
shl
ja
retf
shr
fbstp
paddd
movsx
add
jmp
jmp
int3
js
mov
lock
ror
aam
xchg
push
(bad)
int
push
cld
mov
or
sub
hlt
and
bound
inc
adc
inc
fmul
aaa
jmp
lea
outs
movs
lds
retf
cmp
mov
and
adc
or
or
push
push
addr16
idiv
sub
shr
inc
pop
in
sar
fs
mov
cmp
call
or
jne
or
cmp
stos
or
inc
or
pop
mov
loope
push
add
ror
adc
je
nop
pop
daa
or
ror
mov
leave
mov
mov
push
xchg
cmps
mov
js
aaa
push
or
mov
or
jmp
ja
int3
ret
pop
pop
sub
mov
pop
jg
ret
imul
lods
pop
rol
jecxz
(bad)
loopne
popa
out
push
outs
loop
ret
mov
pop
sbb
or
data16
lds
fsubr
xchg
push
jge
xor
pop
dec
je
adc
lock
imul
sbb
jo
lock
je
add
mov
cmp
sbb
add
dec
jne
mov
mov
jo
push
push
xor
icebp
ins
mov
jecxz
dec
cmp
das
lahf
xchg
retf
rcr
push
not
pop
call
mov
jmp
lahf
in
push
pop
add
mov
lds
mov
adc
cld
add
imul
int3
fsub
or
or
hlt
jns
xchg
jle
mov
add
adc
pop
sub
and
push
adc
pop
ret
mov
add
pop
sbb
cmp
or
jo
or
in
push
js
jns
sbb
push
push
pusha
push
push
cmp
jns
adc
es
sub
data16
or
jae
icebp
mov
push
inc
pop
add
push
and
leave
cwde
inc
add
jne
mov
movsx
inc
inc
jmp
add
mov
sbb
pop
mov
call
push
aas
or
sbb
out
je
jl
jecxz
pop
aaa
ds
inc
add
jne
inc
cli
inc
mov
dec
adc
cmp
sbb
or
mov
and
jmp
lea
aaa
scas
cmp
je
pusha
nop
add
pushf
fsub
add
ins
xor
and
sbb
pop
sub
mov
xor
push
pop
mov
fmul
mov
add
cs
jmp
inc
add
dec
and
stos
test
mov
mov
mov
or
and
sub
xchg
je
xchg
or
add
jo
data16
or
pushf
pop
add
hlt
jno
mov
sub
aas
cmp
or
mov
cmp
jne
adc
push
std
les
sbb
or
mov
aaa
loop
mov
push
jbe
jne
cmp
push
(bad)
shl
mov
push
loope
stos
out
outs
adc
cmp
imul
xor
fs
js
loop
xor
arpl
sbb
and
std
ja
fcomp
or
push
mov
or
or
inc
sub
(bad)
or
push
push
push
push
aaa
pop
retf
sahf
ss
xor
sahf
jmp
add
mov
adc
inc
inc
pusha
add
aas
or
cld
mov
shr
mov
mov
adc
jae
adc
aas
pop
mov
(bad)
cs
dec
mov
add
loop
cmp
pop
sbb
cmp
jp
or
pop
loope
es
dec
mov
out
adc
inc
add
je
cmp
sbb
sub
and
jmp
add
sti
(bad)
(bad)
aas
sub
jb
je
jmp
cmp
cmp
pop
imul
jmp
sub
cmp
mov
jmp
mov
(bad)
out
dec
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
(bad)
outs
std
mov
jmp
mov
jl
and
rol
pop
ret
jne
(bad)
cmp
xchg
or
cld
mov
mov
je
imul
cwde
sbb
mov
outs
movhps
psubd
inc
mov
add
and
lods
(bad)
mov
cmp
jle
adc
scas
ror
je
cwde
call
mov
movs
lahf
mov
outs
xlat
test
push
cmp
je
cmp
jne
clc
jno
nop
and
mov
add
sti
daa
(bad)
mov
jo
shl
test
jle
dec
mov
sub
inc
fiadd
call
and
stos
gs
loope
and
lahf
xor
cmp
lock
mov
pop
add
fisttp
fldcw
jle
add
call
jg
cmp
jg
loopne
fnsave
ja
adc
int3
out
sbb
mov
pusha
mov
aas
popa
and
lea
mov
or
xchg
add
push
cmp
lahf
movs
xor
pop
adc
outs
mov
cmp
add
mov
dec
pop
repnz
cmp
ja
sub
adc
cmp
ret
xadd
(bad)
out
mov
call
or
fstp
sub
add
sub
cmp
aaa
mov
scas
xchg
mov
fcomp
rol
jmp
xchg
in
das
mov
mov
js
adc
shl
clc
sti
pop
mov
call
and
cmp
pop
cld
mov
sbb
mov
mov
fsubr
ret
pop
or
jmp
or
push
aaa
fld
and
or
dec
cmp
loopne
mov
push
popf
fild
add
movs
inc
adc
in
(bad)
pop
xchg
adc
push
add
push
push
xchg
call
pop
xor
push
sub
sbb
popa
es
xor
das
test
fiadd
int3
sti
cmc
pop
jmp
(bad)
(bad)
dec
outs
outs
jae
inc
outs
jo
jb
addr16
sub
xor
cmp
sub
aaa
and
adc
cmps
mov
xchg
lods
pop
ret
(bad)
adc
bound
xchg
sbb
imul
dec
dec
jl
mov
xchg
push
lea
stos
and
(bad)
mov
push
sbb
add
mov
or
jne
arpl
jle
xlat
dec
and
jg
pop
inc
cld
mov
data16
sub
dec
cld
jnp
pop
jmp
lods
(bad)
mov
adc
in
or
jle
and
push
add
pop
or
push
cld
mov
add
add
add
clc
rcl
clc
pop
stc
mov
pop
push
mov
fmul
es
and
xchg
lock
or
mov
add
cli
scas
clc
loopne
mov
mov
xchg
push
mov
addr16
(bad)
jge
dec
ret
jecxz
lea
push
shl
and
or
sub
mov
(bad)
add
cmp
inc
sub
mov
mov
mov
fmul
loop
mov
dec
in
jg
and
or
stos
or
jbe
sbb
je
add
call
sar
rcr
shr
pop
xchg
pop
sub
out
sahf
fbstp
or
push
push
addr16
in
into
pop
(bad)
or
add
das
mov
out
mov
inc
xchg
push
push
push
or
scas
stos
clc
mov
jne
not
pop
add
pop
pop
xor
ja
addr16
push
pop
mov
clc
adc
fld
ret
mov
scas
(bad)
mov
cmps
cmovg
mov
ret
push
aas
jmp
or
(bad)
je
mov
mov
add
mov
pop
sar
pop
bound
mov
adc
hlt
sbb
and
jmp
xchg
cmp
je
cmp
dec
pop
or
pop
fcomp
outs
jp
mov
or
ror
add
jle
push
mov
lds
push
pop
and
push
fisub
clc
mov
mov
jmp
push
push
clc
mov
pusha
movs
and
add
dec
cmc
dec
cli
add
mov
push
inc
pushf
adc
repnz
push
mov
cmps
dec
jne
sbb
int
sbb
pop
pop
lea
jmp
inc
rol
addr16
cmp
mov
mov
mov
push
cld
inc
cs
mov
pop
dec
cmps
call
pop
into
sbb
adc
cmp
sbb
loope
sub
jae
jo
repnz
jmp
aam
lods
cwde
jne
setle
addr16
cs
clc
inc
or
add
add
call
and
inc
stos
cmc
inc
jp
loope
jo
push
or
xchg
pop
mov
loope
(bad)
lahf
xchg
es
jl
cmp
jge
sub
cmp
pop
mov
jl
xor
fisub
push
icebp
dec
mov
xor
jmp
mov
jmp
mov
pop
(bad)
sub
fdiv
jae
adc
dec
jl
jo
es
imul
jle
sub
cmp
jle
inc
sub
add
lea
mul
std
sub
test
push
sub
inc
jbe
pop
mov
push
cld
dec
js
mov
in
not
cmps
inc
and
call
shl
cmps
pop
je
imul
or
in
pop
hlt
jmp
shl
sub
clc
push
pop
add
add
xor
cwde
dec
out
lods
and
mov
call
push
adc
pop
push
mov
jo
push
xor
xchg
loope
jmp
adc
arpl
cli
add
cmp
dec
cmp
push
aas
popa
and
add
add
xor
out
push
int
into
loopne
not
xchg
push
push
push
sub
pop
clc
cs
or
push
cmp
inc
or
outs
fdivr
mov
push
push
dec
xor
mov
das
pop
fcom
pop
sub
shl
xchg
add
cs
sub
fsubp
pusha
pop
cmp
inc
stos
and
cmp
movs
repnz
push
push
mov
(bad)
pop
push
mov
pop
into
add
add
xchg
cmp
add
inc
mov
push
pop
jno
xor
sbb
jne
js
pop
pop
add
adc
(bad)
test
mov
adc
inc
push
cmp
push
mov
add
stos
jmp
push
iret
push
adc
inc
dec
jg
xchg
mov
outs
cmps
push
add
int
mov
je
or
pusha
adc
mov
or
je
pcmpeqb
adc
sbb
call
jbe
jmp
adc
or
adc
(bad)
(bad)
out
jmp
push
mov
mov
push
pop
cs
cs
add
cmp
pop
jmp
cmp
cmp
cs
inc
add
xchg
xor
sub
pop
bound
ret
test
adc
add
xor
jle
mov
inc
sahf
jg
aad
xor
int
mov
pop
shr
sub
and
loop
aaa
shr
repz
adc
inc
int3
xor
popf
mov
xchg
mov
fild
data16
and
(bad)
icebp
cmp
xor
xor
int3
mov
out
rol
lea
outs
cld
add
push
nop
jecxz
fiadd
add
sar
add
add
aas
je
inc
movs
mov
cmp
stc
(bad)
(bad)
cmp
stc
push
cmp
cmp
xor
push
pop
cmp
js
(bad)
mov
fmul
ret
mov
scas
jmp
and
leave
ins
lea
mov
loop
loop
jmp
push
or
loopne
aas
xor
pop
jmp
aas
add
xor
imul
mov
adc
cmp
ds
je
add
shl
mov
add
add
(bad)
sbb
aaa
jnp
paddsw
xchg
dec
in
push
popa
jge
sub
push
out
and
jmp
nop
dec
jne
sub
mov
enter
nop
jmp
pop
push
sub
std
adc
les
scas
jo
xor
add
es
ja
sti
sbb
cmps
test
add
inc
jmp
fnstcw
pop
mov
es
add
je
cmp
out
cmp
retf
ds
adc
popa
add
in
pop
cld
jns
icebp
cld
nop
push
icebp
mov
jne
mov
nop
or
mov
dec
xor
enter
dec
daa
mov
int
push
nop
cmp
sbb
dec
loope
ror
sub
mov
adc
add
push
jns
ror
int3
cs
ss
(bad)
xor
pop
shr
inc
lock
sub
xor
enter
lock
loopne
pop
xor
push
call
push
in
and
mov
ud0
clc
scas
push
mov
test
cli
or
fimul
jecxz
cmp
add
jmp
in
push
jecxz
out
jo
mov
in
mov
(bad)
imul
cmp
sub
cmp
(bad)
xor
ror
or
adc
adc
(bad)
jmp
mov
pop
pop
pop
cmp
jae
fwait
xlat
shl
or
ret
pop
fldz
imul
xor
pop
mov
in
pop
or
or
or
cmp
push
and
or
push
sbb
push
lock
mov
push
jge
pop
fmul
or
or
call
lea
pop
xor
pop
aas
dec
dec
outs
rol
adc
in
aas
cmps
je
jo
(bad)
xor
stc
or
int3
add
jle
pop
dec
bnd
ds
lock
cmp
rcl
loopne
jle
popf
cmp
xor
(bad)
mov
shr
inc
sub
mov
inc
cld
mov
jmp
pop
mov
cmp
jmp
or
mov
push
inc
sub
sar
enter
scas
nop
cld
mov
mov
inc
push
ret
outs
pop
dec
test
sub
dec
pusha
push
fucomip
push
call
add
test
push
and
loope
push
aaa
sbb
dec
pop
sbb
push
pop
xchg
sti
or
ss
ret
nop
xchg
xor
ss
inc
mov
push
mov
rcr
xor
xchg
or
mov
imul
or
fild
lds
pop
xchg
int3
push
inc
or
in
and
rcl
inc
mov
cli
in
data16
fsub
pushf
sub
(bad)
jo
add
cmp
sbb
es
or
pop
or
lea
fbld
pop
add
jl
dec
je
push
ror
jg
(bad)
adc
scas
sahf
push
shr
je
push
jmp
cmc
sub
test
adc
pop
ret
jne
push
add
add
jo
xchg
add
mov
pop
inc
lods
lea
aas
out
mov
dec
mov
and
pop
call
dec
ins
lods
loopne
ret
mov
scas
loopne
repnz
pop
add
pusha
cmp
test
jg
mov
mov
mov
sbb
push
cmp
push
mov
push
push
call
mov
or
call
or
jmp
xor
mov
lods
pop
dec
imul
sub
mov
cdq
idiv
cmp
je
xor
dec
fadd
push
push
mov
cmp
dec
sub
push
call
(bad)
js
in
lock
std
sbb
loopne
push
in
inc
xchg
pop
dec
stos
inc
aam
pusha
push
pushf
mov
and
(bad)
div
mov
push
in
test
and
enter
stos
push
test
(bad)
push
dec
shr
xor
fld
jns
push
push
add
cmp
mov
test
add
cmps
cmp
xchg
inc
sar
or
dec
ins
cmps
cdq
and
jl
inc
call
outs
adc
add
and
sub
add
jne
push
sbb
mov
add
mov
mov
dec
clc
jne
cmp
cmp
push
adc
xchg
adc
inc
pop
lar
jmp
mov
cmovb
loop
fimul
mov
dec
push
mov
retf
clc
pop
xchg
test
jmp
mov
loop
loopne
mov
and
sub
rol
push
mov
add
sbb
cmp
in
sub
js
cmp
je
or
add
xchg
je
or
sub
adc
jl
es
ret
sahf
cmp
aam
push
jecxz
inc
fdiv
dec
mov
push
push
and
add
rcr
push
cmp
dec
das
arpl
dec
cmp
fs
in
jmp
cwde
sbb
cmps
je
jecxz
cmp
outs
dec
dec
sub
(bad)
jmp
jbe
lahf
das
jo
add
pop
and
inc
mov
mov
lods
loope
jmp
push
lahf
jg
rcr
jnp
sbb
fsubr
add
pop
add
ret
cmp
test
out
adc
imul
je
pop
push
jmp
inc
test
ror
or
dec
inc
repz
cmc
add
cmp
inc
mov
std
cmp
outs
data16
popa
jb
dec
outs
arpl
gs
mov
inc
push
outs
inc
scas
sahf
les
xsave
je
push
adc
adc
xchg
fist
aaa
mov
push
sti
dec
out
xor
inc
mov
sbb
pop
mov
or
push
pop
add
mov
lock
adc
add
mov
fnstcw
scas
retf
inc
jmp
es
cmp
pop
inc
call
cmp
sub
or
dec
xchg
dec
cmp
cmp
(bad)
xor
ret
fwait
cld
add
int3
nop
enter
sub
lea
jbe
pop
iret
dec
cmp
mov
lahf
dec
sar
cmp
add
adc
pop
fs
hlt
imul
shr
movs
add
push
dec
mov
cmp
neg
daa
fwait
mov
add
cmp
scas
sbb
push
jo
inc
push
cmp
cmp
push
or
or
push
inc
std
mov
add
psubd
fild
retf
dec
add
mov
sub
mov
or
or
adc
or
sbb
or
add
pop
mov
adc
dec
ror
push
call
leave
cmp
jg
adc
loope
mov
sbb
je
movs
jl
push
jmp
pop
adc
adc
push
lea
dec
push
mov
loopne
popf
imul
clc
ins
je
ret
sbb
cwde
jl
movs
jle
xor
add
popa
add
pop
ret
dec
pop
addr16
inc
or
add
dec
jne
xor
push
test
inc
or
adc
lods
mov
or
and
pop
inc
sar
add
mov
sub
jmp
das
inc
add
in
inc
mov
dec
inc
or
inc
add
jmp
and
jle
test
mov
add
or
(bad)
cmp
cld
push
cmp
sbb
mov
push
dec
add
push
add
shl
fadd
leave
sub
stc
xor
aaa
add
lods
mov
(bad)
out
sbb
scas
ror
mov
jns
pop
dec
mov
je
and
cmp
out
lea
ret
adc
push
pop
jmp
add
sub
push
ins
imul
pop
cmc
addr16
cmp
push
mov
jne
rcl
ins
xor
jne
and
test
pop
xchg
ins
shl
mov
push
popa
lock
fisttp
test
jno
or
or
mov
adc
sbb
sbb
and
mov
push
mov
mov
es
ss
adc
pop
movs
inc
dec
jne
dec
mov
scas
cmp
mov
push
sbb
push
ret
push
pop
test
addr16
pop
ins
dec
and
add
es
jmp
shr
add
cmps
or
(bad)
popf
add
push
out
dec
mov
jl
jp
dec
lock
jbe
out
cli
dec
push
jns
mov
add
mov
mov
call
cmp
out
ficomp
xchg
icebp
mov
mov
mov
mov
stos
pop
push
mov
sbb
mov
add
sub
cmp
jg
add
fsubr
mov
rep
inc
xor
pop
jmp
add
shr
adc
inc
push
pop
aaa
mov
je
xor
(bad)
or
outs
int
mov
inc
jle
sub
pop
xor
scas
mov
xchg
jne
fld
cmc
pop
aad
(bad)
pusha
cwde
sbb
out
adc
pop
dec
mov
mov
sub
jle
sub
jae
pop
pop
mov
pop
mov
mov
es
popa
cld
inc
popa
or
or
add
aam
ja
mov
inc
cmps
movs
sbb
add
daa
pop
loop
adc
xchg
leave
jmp
sub
mov
push
inc
dec
or
inc
xlat
pop
inc
call
xchg
lock
cli
or
repnz
add
in
not
dec
push
pop
sub
sub
pop
pop
xadd
push
es
repz
inc
lea
or
pop
lea
fld
leave
shr
je
repz
das
push
add
add
xchg
mov
ret
neg
(bad)
jge
xchg
xchg
retf
loopne
enter
(bad)
stc
ret
fld
out
ret
pop
xchg
dec
mov
mov
cmp
enter
inc
pushf
or
ret
(bad)
jl
xchg
mov
adc
mov
xchg
sbb
imul
stc
add
stc
mul
retf
mov
push
fisub
sub
test
pop
xor
out
sub
pop
jecxz
add
leave
sbb
sub
cs
jbe
imul
cmp
mov
aaa
push
and
mov
bound
cmp
xlat
fadd
int
nop
lods
outs
xor
xchg
push
or
push
push
int3
into
sbb
(bad)
call
ret
inc
mov
push
pop
test
enter
mov
cmp
(bad)
(bad)
mov
(bad)
retf
into
pop
or
pop
inc
in
mov
mov
inc
dec
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
(bad)
mov
dec
pop
js
inc
mov
stos
mov
cmp
or
mov
cld
(bad)
(bad)
call
out
sub
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
call
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
(bad)
call
or
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
(bad)
(bad)
(bad)
push
jmp
dec
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
cmp
jne
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
inc
cld
movs
mov
popa
mov
and
addr16
repz
mov
sub
(bad)
call
push
pusha
les
outs
bound
xor
mov
inc
mul
enter
int3
cli
fs
add
sub
rcr
ret
inc
pop
clc
and
push
or
sti
dec
inc
adc
sbb
leave
jne
or
je
or
je
push
iret
out
sub
or
fcmovu
sub
iret
add
sbb
(bad)
std
je
neg
sbb
add
jb
not
loopne
rcl
(bad)
call
(bad)
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
pop
test
and
mov
jne
push
repz
jmp
push
mov
fsub
push
pop
cli
cmp
jne
xchg
or
cmp
in
pop
(bad)
dec
ret
pop
push
sub
cmps
and
lock
add
push
dec
das
sub
mov
add
add
pop
pop
sub
(bad)
mov
sbb
adc
out
call
add
in
mov
pop
inc
and
pop
add
mov
or
movs
push
loopne
outs
inc
call
cli
pop
in
add
sar
outs
sbb
(bad)
lods
inc
cli
ret
outs
ret
call
test
mov
dec
pop
jmp
test
mov
outs
fisubr
cmp
inc
mov
lods
mov
jne
sar
mov
mov
in
clc
pop
iret
cmp
sub
les
or
dec
jnp
and
add
inc
jmp
out
iret
dec
add
add
add
and
push
sbb
ins
sti
add
adc
xchg
adc
inc
je
sbb
sub
cmp
jl
mov
out
xchg
mov
xor
sub
fsub
int
jge
xor
ror
cmp
mov
mov
mov
cmp
(bad)
jge
mov
push
stos
sub
add
or
jmp
push
inc
(bad)
fnstcw
mov
inc
fcom
or
test
mov
daa
jl
mov
ret
push
jo
sbb
pusha
jmp
fld
add
sbb
inc
inc
mov
mov
aad
cmp
lods
mov
out
or
xor
sub
js
jne
push
mov
xor
cs
sar
and
add
mov
rcr
push
and
xchg
mov
loope
pop
dec
inc
movs
jecxz
movs
fadd
mov
leave
enter
paddusb
ret
leave
leave
leave
(bad)
sar
mov
test
leave
leave
leave
movs
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
ins
push
fs
pop
pop
leave
leave
leave
leave
push
push
dec
dec
leave
leave
leave
leave
inc
inc
cmp
leave
leave
leave
leave
xor
sub
leave
leave
leave
leave
and
sbb
leave
leave
leave
leave
adc
or
(bad)
aam
leave
add
cld
(bad)
leave
enter
hlt
lock
xchg
xchg
xchg
fld
lfs
xchg
test
mov
xchg
cwde
xchg
nop
mov
cmp
jns
je
ins
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
ret
pushf
mov
hlt
lock
pushf
pushf
pushf
pushf
call
sahf
pushf
pushf
fcom
adc
adc
dec
dec
or
add
daa
daa
and
(bad)
lock
daa
daa
daa
in
call
daa
daa
(bad)
aam
daa
daa
daa
daa
int3
enter
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwde
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
ins
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
(bad)
clc
hlt
in
fdiv
les
in
in
in
(bad)
aam
in
in
int3
enter
in
sar
mov
test
in
in
mov
in
in
mov
in
jl
je
in
in
ins
push
in
pop
pop
push
in
in
push
dec
dec
inc
in
in
inc
cmp
xor
in
in
sub
and
in
in
sbb
adc
in
in
or
add
xor
in
cld
ret
clc
hlt
jb
jb
lock
call
jb
(bad)
aam
jb
jb
int3
enter
div
movzx
shl
or
ret
push
shr
sub
add
outs
inc
xor
int3
or
es
fimul
popf
and
push
or
xor
and
mov
or
mov
cmc
add
movsx
add
or
je
es
shl
inc
add
sub
pop
cmp
sbb
xchg
or
adc
ds
repz
and
push
xchg
jbe
dec
and
les
add
or
sub
popf
data16
or
mov
push
pop
mov
add
push
push
push
arpl
pop
cwde
sbb
adc
adc
push
cmps
stc
fs
adc
or
or
nop
adc
movs
mov
jl
call
dec
popa
gs
jge
fisttp
push
dec
inc
inc
dec
add
outs
jne
gs
jle
sti
(bad)
and
dec
push
inc
push
dec
pop
and
mov
dec
push
push
pop
sub
push
inc
dec
pop
dec
enter
dec
dec
inc
push
das
(bad)
adc
inc
pop
jb
sbb
or
and
push
jecxz
retf
xchg
call
je
adc
icebp
repnz
pushf
pushf
pushf
hlt
cmc
div
pushf
pushf
pushf
pushf
clc
stc
cli
sti
pushf
pushf
pushf
pushf
cld
std
(bad)
call
loop
pushf
pushf
pushf
pushf
in
out
pushf
pushf
pushf
pushf
call
pushf
pushf
pushf
in
in
out
out
pushf
pushf
pushf
pushf
rcl
rcl
pushf
pushf
pushf
pushf
aam
(bad)
xlat
pushf
pushf
pushf
pushf
fcomp
fcmovu
pushf
pushf
pushf
pushf
(bad)
(bad)
pushf
pushf
pushf
pushf
rol
ret
pushf
pushf
pushf
pushf
(bad)
(bad)
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
int3
int
iret
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
xchg
mov
in
jbe
and
or
pusha
add
pop
jb
loopne
jns
or
push
jg
imul
inc
js
gs
stos
jge
pop
enter
push
repnz
inc
inc
bound
nop
sbb
cmps
aas
adc
das
js
cmps
cmp
ja
dec
gs
jo
mov
js
js
out
pop
sub
inc
dec
jne
dec
dec
gs
outs
jb
lea
xchg
mov
mov
test
mov
sub
scas
push
movs
inc
dec
sub
jb
ins
add
push
imul
leave
xchg
mov
test
xchg
push
adc
in
ret
adc
push
mov
sbb
ins
jmp
cwde
imul
inc
imul
and
gs
nop
xchg
xchg
inc
mov
popa
outs
addr16
scas
int
adc
outs
jbe
push
data16
outs
ja
ins
(bad)
dec
ins
pop
outs
dec
adc
gs
mov
(bad)
cmp
jbe
imul
lods
inc
cs
(bad)
adc
mov
ins
jle
gs
outs
scas
push
sbb
nop
outs
(bad)
rol
pop
inc
(bad)
test
lidtd
fs
add
popa
or
inc
add
fiadd
outs
imul
or
in
jecxz
mov
popa
jae
fidivr
push
and
pushf
sub
push
scas
adc
xchg
adc
pop
or
inc
inc
arpl
jae
push
jl
rol
ins
popa
sbb
jo
or
xchg
je
push
jb
mov
xchg
nop
int3
scas
call
push
inc
push
je
arpl
rol
jno
sub
lock
fidiv
inc
lds
ds
ins
nop
jg
push
popa
jb
popa
outs
fdiv
fmul
mov
popa
fsub
cs
cmp
sbb
jb
test
jns
cwde
mov
fmul
sbb
jo
hlt
add
aas
pop
loop
aas
push
imul
mov
call
clc
es
out
xor
push
push
inc
jb
popa
jns
mov
mov
push
jl
add
daa
jb
adc
mov
aaa
and
or
sub
push
dec
jne
cli
push
repnz
mov
jae
push
cmp
or
or
push
jns
arpl
mov
sahf
call
stos
push
retf
mov
mov
(bad)
sub
sub
jmp
call
and
push
xchg
(bad)
aas
mov
scas
add
xor
or
mov
mov
mov
dec
gs
xchg
fwait
jb
adc
cmp
add
mov
add
cwde
push
call
add
add
jmp
pop
push
icebp
cld
dec
xchg
push
push
push
or
or
cld
mov
cmp
jbe
cmps
mov
dec
je
mov
jle
or
push
ja
mov
(bad)
inc
jp
scas
out
and
sti
je
movzx
add
sub
pop
mov
retf
mov
sub
ret
pop
ret
hlt
adc
fdiv
adc
movs
push
dec
fnstcw
push
push
adc
pop
aas
call
(bad)
mov
ins
fwait
test
add
adc
jae
cmp
mov
mov
pop
ret
jmp
adc
sbb
or
sar
push
push
inc
dec
jne
or
and
rol
aas
or
test
mov
mov
push
pop
push
sbb
xchg
jbe
test
aam
sbb
or
test
lock
mov
push
mov
scas
and
jbe
jecxz
adc
clc
mov
leave
(bad)
jns
int
les
or
hlt
popa
pop
push
or
mov
pop
push
push
mov
mov
or
and
mov
cmps
cmp
imul
dec
dec
aam
(bad)
mov
maskmovq
idiv
jg
jmp
push
jmp
jg
cmp
jne
dec
xor
test
cli
and
div
hlt
adc
mov
ja
call
jno
mov
sbb
pushf
(bad)
mov
imul
adc
jg
(bad)
out
jl
test
sar
rcr
mov
pop
push
push
lea
mov
cmc
push
mov
cmp
ja
sbb
cmc
call
imul
hlt
clc
std
enter
inc
fs
imul
pop
and
dec
pop
inc
call
adc
xor
sub
sbb
test
mov
cmp
add
lock
ret
sub
rol
or
(bad)
sub
mov
adc
enter
pop
out
test
pop
pop
ja
adc
sar
neg
push
std
and
add
mov
cmp
test
mov
cwde
retf
lea
add
(bad)
loope
into
sub
retf
push
ficomp
dec
test
retf
popa
xor
stos
inc
pop
pop
xlat
mov
rol
pop
adc
pop
mov
int3
jb
sub
pop
ds
inc
xlat
mov
xor
xor
pusha
xlat
lock
cli
mov
mov
rcl
xchg
int
addr16
dec
ss
or
push
add
cmp
(bad)
and
dec
clc
test
call
pop
pusha
pop
jmp
prefetcht1
mov
rcr
ror
add
ss
push
inc
loop
shr
dec
in
(bad)
jle
imul
mov
pop
sub
jbe
sbb
push
icebp
ret
mov
(bad)
lods
push
adc
je
and
shl
and
or
mov
call
pop
adc
xchg
mov
int3
cmps
inc
pop
dec
pop
adc
imul
add
je
out
ja
aas
aaa
and
mov
cmp
cmps
ss
pop
jbe
mov
lahf
aam
add
in
out
scas
mov
les
mov
les
pop
(bad)
out
and
call
mov
call
popa
ret
ins
aaa
and
and
(bad)
por
cmp
sbb
adc
or
add
ret
mov
lods
cs
shl
in
sub
cs
mov
neg
fiadd
sbb
(bad)
imul
cmp
jmp
adc
mov
cmc
sub
dec
mov
push
rol
add
fistp
dec
cld
in
or
fild
sub
jae
add
xchg
mul
inc
movs
xchg
pop
mov
rep
sbb
xchg
xchg
clc
mov
hlt
pop
push
(bad)
in
out
mov
test
pop
pop
mov
sub
xor
out
clc
int
cmp
ja
imul
mov
movzx
add
sub
mov
push
jmp
les
dec
or
loopne
ret
je
dec
fsubr
dec
ror
nop
idiv
push
pop
pop
icebp
dec
ret
or
xor
mov
call
ins
mov
dec
push
gs
jle
test
push
leave
ss
dec
sahf
pop
je
push
(bad)
clc
pop
pusha
add
outs
xchg
cmp
fsubr
rol
mov
lea
int3
adc
push
add
stc
inc
je
or
sub
sar
push
and
inc
mov
je
neg
add
pop
hlt
ins
lahf
mov
inc
dec
mov
inc
aam
ret
jge
jne
xor
mov
inc
aam
sbb
dec
inc
pop
xchg
call
mov
pop
dec
push
cmp
fisttp
inc
push
pop
mov
fimul
shl
lea
push
pusha
sub
and
jbe
jo
sbb
or
ret
sbb
adc
mov
aad
or
neg
or
es
dec
aam
xchg
cmc
push
jne
cmp
inc
ror
lahf
push
mov
or
sbb
bound
xchg
sub
jmp
xor
inc
mov
lods
inc
enter
repnz
add
xchg
das
fbstp
(bad)
push
or
or
vpcmpeqb
ja
pop
cmps
data16
rcr
mov
push
ds
push
xabort
inc
mov
xlat
aas
mov
sub
ins
mov
inc
je
mov
repz
add
inc
je
mov
dec
je
dec
(bad)
loope
imul
or
ret
mov
or
jne
test
ror
loopne
clc
adc
jge
mov
push
repnz
loopne
fs
mov
pop
or
push
mov
pop
ret
lahf
sub
or
call
push
push
push
sub
pop
fs
push
jo
cdq
pop
int3
push
into
stos
nop
in
retf
push
addr16
mov
xchg
and
xlat
addr16
mov
push
pushf
dec
or
enter
add
(bad)
xchg
or
jle
test
mov
rcl
pusha
mov
mov
and
in
sar
call
fmul
fiadd
test
out
xchg
cmc
jmp
jg
dec
push
les
cmp
jl
jmp
add
jge
jnp
int3
or
ret
xchg
inc
loopne
stos
nop
lea
inc
cmp
jmp
lea
jbe
xchg
lods
jae
adc
and
dec
mov
mov
call
push
dec
fistp
popf
aam
xor
dec
sub
add
neg
ror
mov
jmp
in
add
mov
inc
retf
xchg
adc
xor
shl
fmul
mov
je
dec
mov
mov
enter
ret
add
add
ret
or
daa
inc
lahf
dec
xchg
push
(bad)
(bad)
and
push
add
mov
(bad)
push
les
push
push
sub
repnz
jo
pop
rcr
js
jp
outs
add
data16
rol
add
jp
hlt
fld
stc
cmp
sbb
cs
dec
mov
or
or
ret
ret
dec
push
adc
outs
ins
inc
inc
dec
retf
mov
shl
aas
fdivr
push
cmp
aas
sub
jne
or
sti
or
jne
sar
add
lods
add
cdq
idiv
push
inc
rol
rol
pushf
sub
or
pop
daa
cmp
lods
mov
dec
jne
mov
push
sub
lahf
test
sub
adc
inc
add
inc
adc
leave
call
mov
call
fdivr
rol
cmp
cmp
pop
jo
add
pop
leave
xchg
fadd
xchg
push
pop
call
test
adc
call
mov
xchg
mov
ret
gs
push
std
sub
jae
push
push
pop
push
push
popa
ja
or
add
push
push
sbb
sbb
cld
add
lea
std
loope
nop
cwde
jp
dec
and
push
clc
test
and
jle
dec
jb
mov
data16
je
repz
jb
idiv
push
adc
jmp
mov
sub
je
sub
je
mov
push
sbb
sub
cld
cmp
or
int
fdivr
js
(bad)
xchg
jne
xchg
cs
sbb
ror
bt
dec
adc
inc
mov
pop
ja
add
imul
push
mov
jecxz
push
cld
cmovp
jle
xor
jmp
mov
adc
sti
fwait
cmp
mov
sub
out
xchg
pop
xor
aad
je
sub
inc
fidiv
xor
jmp
(bad)
(bad)
push
push
lahf
call
and
jbe
cmps
addr16
add
sbb
fdiv
add
push
rcl
xchg
ficom
adc
mov
jp
das
arpl
xchg
add
sub
sbb
push
cld
xchg
push
cdq
push
cld
ret
fimul
jl
mov
call
out
std
pop
cmp
and
call
cmp
jne
adc
mov
sub
std
xchg
xor
mov
inc
push
repz
ja
sbb
mov
adc
out
adc
cli
sub
js
and
test
test
loopne
jmp
lods
mov
add
movs
adc
or
jno
fst
lea
inc
ins
sbb
mov
cld
mov
add
and
mov
cs
add
push
mov
ror
jl
les
sahf
(bad)
xchg
inc
jmp
push
lea
cs
sbb
push
adc
cs
adc
mov
lock
imul
lods
push
sub
sbb
(bad)
fwait
inc
inc
mov
fwait
clc
imul
jmp
push
pop
cwde
stos
in
push
and
push
in
arpl
or
push
xchg
fiadd
push
add
dec
add
add
pop
(bad)
push
and
sub
mov
pop
mov
cmp
mov
outs
adc
dec
push
sar
mov
movs
pop
sti
cdq
cmp
clc
std
mov
dec
jl
or
adc
cmps
push
arpl
jmp
out
in
std
mov
jmp
sbb
pop
jmp
inc
cmp
jg
cmp
or
mov
add
mov
jmp
mov
mov
pop
add
or
xchg
cmp
rcr
xor
ror
add
xchg
rol
push
or
(bad)
in
xorps
ror
or
dec
sub
jb
jmp
out
mov
jl
and
add
fcomp
or
or
adc
mov
add
sbb
pop
add
sub
push
(bad)
xchg
and
mov
or
jbe
mov
mov
push
imul
ss
call
imul
add
mov
loopne
jno
in
sbb
sbb
mov
shl
iret
or
jae
mov
cdq
movs
lds
or
icebp
call
add
pop
jo
jb
adc
stc
inc
(bad)
cmp
je
jmp
xor
inc
xor
sub
jmp
and
cmps
jge
add
mov
add
push
pop
or
or
mov
cmps
jp
jnp
push
and
cdq
dec
cwde
or
rcl
jge
xor
mov
jo
and
enter
(bad)
pop
push
pop
cld
cmp
punpckhwd
xchg
jae
add
dec
rol
push
mov
push
jge
xor
int3
sahf
loope
mov
fcmovnu
push
loopne
das
in
je
imul
lea
lea
mov
sub
xor
xchg
idiv
shl
mov
enter
mov
lods
aam
sbb
xchg
nop
leave
pop
ret
jmp
sub
jge
mov
movs
imul
cwde
add
mov
add
cmp
(bad)
test
mov
lods
loopne
add
inc
or
pop
mov
push
lock
xchg
(bad)
cld
iret
sub
push
mov
pushf
or
dec
lods
mov
jae
(bad)
les
push
adc
pop
aaa
lods
movs
jnp
xor
cwde
in
div
mov
imul
push
call
add
push
cdq
sub
sub
xchg
lea
add
inc
jo
out
lods
inc
nop
or
pushf
std
add
xor
pop
sub
inc
cmp
inc
call
sub
add
cmp
inc
or
lods
ins
adc
stos
movs
lea
pop
dec
call
xlat
mov
jno
and
and
and
sbb
scas
jne
mov
jno
inc
or
adc
rcr
fidivr
xchg
xor
sub
inc
jo
inc
lods
xor
inc
adc
jb
push
or
push
js
push
xchg
xlat
jle
test
dec
mov
mov
and
add
mov
int3
mov
or
les
ins
jp
mov
lea
mov
ret
cmp
pusha
(bad)
adc
add
mov
into
test
dec
jmp
dec
test
push
push
jl
mov
and
mov
sub
and
loopne
mov
or
inc
sub
mov
jmp
mov
xchg
add
out
push
mov
(bad)
push
mov
mov
push
add
rcl
out
cmps
xor
mov
pop
daa
scas
rol
jmp
push
pop
sub
mov
movs
ins
les
std
inc
mov
cmp
pop
pop
imul
or
and
dec
aam
add
cs
je
cmp
add
mov
xchg
cmps
pop
inc
sti
mov
mov
aas
mov
sub
sub
push
add
mov
scas
push
cmp
shl
aaa
jb
sbb
add
or
dec
sar
cli
jbe
adc
or
fist
push
lock
stos
lock
daa
and
and
in
xchg
(bad)
dec
mov
xlat
xor
jb
je
add
inc
push
sbb
(bad)
jne
iret
aas
sub
loop
mov
mov
or
jne
pop
jp
fimul
or
das
add
pushf
or
mov
and
ja
data16
enter
inc
data16
pop
ret
stos
jnp
adc
aas
div
sub
mov
push
sbb
call
pop
mov
dec
inc
xor
jmp
mov
xchg
push
ret
dec
fdiv
inc
mov
inc
and
sub
in
stos
pop
(bad)
adc
retf
jne
clc
shl
cmps
or
inc
jne
push
mov
pop
push
and
add
popf
in
call
dec
jne
sbb
mov
xor
mov
rcl
mov
in
cmp
cmp
sbb
ins
movs
xor
mov
mov
fs
cmp
mov
(bad)
mov
push
imul
push
nop
adc
sbb
stc
in
rcr
repnz
add
and
xchg
xchg
movs
cld
pop
loopne
pop
ror
mov
cmp
xor
sub
imul
xor
hlt
out
cmp
or
popf
mov
cmps
arpl
pop
and
cmp
and
and
mov
cmp
mov
cld
push
fistp
push
hlt
mov
sub
mov
adc
loope
mov
jne
or
xor
adc
sar
mov
xor
ins
das
fs
dec
jg
sub
ins
add
fs
dec
cmps
ins
scas
mov
popa
ins
pop
jo
in
imul
push
xchg
inc
dec
push
dec
add
sbb
out
jg
int3
pop
push
cmp
adc
in
shl
xchg
ins
rcl
test
int3
cmp
inc
in
(bad)
mov
aaa
mov
call
ins
mov
sbb
mov
xchg
dec
in
jl
pop
or
pop
or
mov
sbb
adc
test
cli
scas
or
push
mov
mov
mov
ss
or
jg
xor
mov
add
sar
lock
jmp
push
jmp
movs
sete
imul
or
mov
dec
mov
mov
lds
xor
cs
ins
addr16
gs
imul
inc
jb
gs
jo
inc
js
mov
jmp
xor
sbb
lods
sbb
js
cmp
push
add
jmp
inc
sub
inc
jae
cmp
adc
cmp
aas
xlat
das
xor
mov
and
aad
mov
dec
out
cld
xchg
jle
cmp
call
neg
and
pop
cmp
je
fidivr
cmp
sar
sar
mov
push
cld
and
mov
cmp
je
sub
sahf
aam
mov
push
outs
fidiv
add
jnp
dec
xor
or
aas
dec
xchg
ror
or
adc
ss
or
mov
mov
sub
inc
xor
call
xchg
dec
cmp
xchg
cli
callw
mov
sbb
mov
rcr
stos
dec
or
jl
mov
pusha
test
mov
das
lods
je
sahf
idiv
ins
dec
push
fs
cld
test
pop
nop
push
push
mov
iret
repz
inc
xor
jle
xor
mov
sub
adc
idiv
sbb
dec
in
add
cmp
cld
mov
fcomp
repz
in
movs
stos
in
fdivr
fdivp
sahf
test
add
push
(bad)
out
jns
jns
cmp
push
dec
sbb
test
into
sbb
pop
inc
add
iret
xor
lods
and
jns
fmulp
or
push
mov
cmp
xchg
out
in
cmp
nop
inc
test
daa
mov
pop
test
dec
cmp
iret
add
sub
jns
out
in
je
or
dec
daa
out
in
ins
movs
push
leave
cmp
mov
fcomp
jae
daa
pop
cmps
ja
add
repnz
ficom
push
dec
(bad)
fmul
repnz
mov
les
popf
mov
sbb
pop
test
movs
xor
mov
sub
daa
iret
enter
mov
int
and
or
xchg
call
adc
loopne
aas
adc
inc
dec
inc
dec
and
sbb
sbb
mov
adc
and
dec
jne
or
loope
shl
jle
(bad)
addr16
aaa
inc
or
mov
adc
jb
fisubr
jno
xchg
push
sub
push
je
adc
inc
cmp
rep
jmp
lea
movzx
cmp
je
add
or
mov
push
frstor
adc
mov
and
inc
out
jge
mov
and
pushf
push
test
add
or
out
mov
adc
adc
xchg
dec
in
(bad)
scas
stos
cmp
jg
cmp
jl
or
jg
dec
stos
js
adc
stos
neg
push
rep
jmp
(bad)
mov
je
stos
loop
unpckhps
pusha
xlat
mov
clc
push
or
xor
adc
or
jnp
inc
cld
dec
and
jae
call
mov
mov
mov
shl
test
rcl
jmp
mov
dec
jo
or
(bad)
push
or
pusha
mov
stos
xchg
push
mov
xor
xor
loopne
sti
inc
dec
or
punpckldq
dec
mov
stos
cmp
jne
pop
in
add
adc
mov
add
add
add
lahf
loopne
je
dec
mov
div
mov
inc
sbb
or
idiv
rol
loope
jmp
mov
std
jecxz
jo
test
or
jne
push
dec
jne
ret
inc
sbb
sbb
mov
inc
bndldx
fnstenv
mov
add
lea
sar
je
push
push
cmp
push
pop
lods
add
cmp
add
or
lea
mov
fadd
dec
lock
inc
cwde
test
sub
sahf
out
fild
sub
and
adc
and
sub
inc
sub
xor
sub
sbb
mov
es
sub
jae
fs
xor
sub
xor
loopne
pop
push
xchg
inc
or
cld
inc
push
inc
mov
push
pop
or
shl
or
adc
shr
jmp
dec
(bad)
pusha
(bad)
or
and
es
mov
test
fnsave
mov
sbb
adc
sub
jo
sub
les
jo
(bad)
shl
pop
or
mov
adc
jne
adc
jle
jno
cmp
push
mov
mov
jmp
lock
xor
push
das
jecxz
cmp
mov
jge
inc
in
or
push
std
jg
or
sbb
and
and
adc
out
loop
mov
test
out
jns
add
inc
sbb
ret
push
lahf
mov
je
xor
jmp
cld
cmps
mov
or
retf
jmp
push
clc
add
sahf
and
xor
cs
cmp
je
push
xor
je
xchg
je
mov
jmp
inc
jmp
add
shl
jmp
cmp
test
ror
add
mov
scas
push
loop
jbe
lods
sub
pusha
add
sti
jmp
imul
pop
inc
ss
enter
sbb
in
pop
ret
jge
pop
ret
push
push
mov
dec
adc
sar
jg
push
movs
rcr
jb
fdivr
cwde
sub
lea
ret
or
jns
pop
out
fwait
daa
and
sahf
out
sahf
out
push
sbb
push
shr
aam
and
int
outs
neg
hlt
mov
cmp
cld
or
scas
cmp
inc
pusha
mov
mov
add
sbb
add
push
mov
lock
push
sbb
inc
dec
jne
jmp
inc
jge
mov
jle
jmp
push
inc
mov
(bad)
ds
dec
and
jle
cli
fadd
and
jmp
cmp
sub
jo
aam
add
mov
push
pop
push
nop
repnz
jne
jge
xchg
pop
out
nop
movs
sbb
mov
cmps
fst
ja
or
push
dec
and
(bad)
stos
(bad)
call
add
mov
outs
aad
sar
fld
sub
ins
shl
inc
mov
loope
add
and
fld
fld
out
add
fwait
neg
jg
push
loop
dec
fbstp
lea
mov
inc
adc
in
shr
and
add
cmps
cmps
pop
or
jmp
shr
jns
cmp
pop
jmp
call
jae
cmp
xor
jb
mov
js
dec
and
pop
data16
fwait
inc
xchg
dec
xor
mov
adc
mov
les
sub
icebp
fcmovnb
jmp
ret
data16
mov
je
imul
or
or
je
ds
ins
mov
call
jg
or
hlt
add
pop
mov
cmps
sbb
aaa
sbb
dec
add
hlt
fild
in
fs
aam
xor
xchg
aam
or
jecxz
jle
call
jmp
pcmpeqw
jae
fdivr
dec
jne
jmp
mov
add
stos
aas
and
shl
lea
push
mov
sub
mov
push
or
pop
(bad)
ror
sub
loope
lock
(bad)
(bad)
jp
loop
sub
push
cmp
cs
or
mov
daa
sub
xchg
(bad)
cmp
or
into
outs
add
dec
sub
sbb
inc
push
sub
mov
rol
xor
xchg
fdiv
(bad)
inc
loopne
add
aas
jmp
fstp
fstsw
test
adc
mov
push
inc
add
in
add
and
add
lods
sub
add
jae
fimul
push
mov
aaa
mov
jbe
add
es
push
inc
imul
push
adc
data16
aaa
add
scas
mov
loopne
dec
test
mov
adc
(bad)
mov
sbb
movs
sti
das
int3
mov
mov
push
or
adc
lods
dec
in
fisttp
mov
xchg
xchg
add
js
or
push
jb
sbb
in
arpl
or
and
cmp
cld
mov
inc
inc
push
jns
mov
push
ja
movs
mov
inc
into
out
movs
clc
mov
inc
lock
inc
inc
js
in
frstor
mov
cwde
mov
cmp
push
stc
lock
hlt
and
(bad)
dec
add
movs
dec
xor
je
push
neg
push
in
(bad)
jne
add
jl
outs
and
das
add
mov
dec
dec
dec
mov
dec
dec
dec
cmps
test
stos
dec
dec
dec
dec
stos
lods
lods
scas
dec
dec
dec
dec
scas
nop
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
cwde
cdq
call
popf
sahf
dec
dec
dec
dec
lahf
add
add
xchg
dec
dec
mov
dec
(bad)
jo
jb
dec
dec
dec
jae
jne
dec
dec
dec
dec
ja
jns
dec
dec
dec
dec
jnp
jge
dec
dec
dec
dec
jg
popa
bound
dec
dec
arpl
dec
dec
dec
dec
addr16
dec
dec
imul
dec
dec
dec
outs
push
push
push
dec
dec
dec
dec
push
push
push
push
inc
je
dec
push
pop
jmp
or
or
jmp
sbb
cmp
cs
mov
loopne
clc
add
out
inc
cwde
dec
add
add
lea
sbb
jnp
push
inc
clc
inc
int3
adc
sbb
test
jne
jg
shl
jmp
cs
rol
clc
jle
or
dec
aaa
cmp
sti
push
add
push
(bad)
fisttp
jecxz
sbb
mov
movzx
clc
sbb
or
pop
xchg
or
ins
cmp
je
mov
dec
ins
push
sbb
sbb
dec
inc
in
jbe
lock
push
jmp
jle
in
je
jmp
cmp
ins
sbb
ins
sbb
test
out
jne
(bad)
cmp
clc
jg
mov
mov
mov
cmp
je
dec
inc
jmp
pop
inc
lar
dec
inc
jmp
call
jmp
rcr
jg
cmp
jb
cld
push
mov
or
rol
movsx
xor
pop
inc
adc
add
(bad)
mov
ss
sar
pop
fisttp
cmp
mov
ja
cmp
ja
jb
add
add
call
in
xchg
out
out
mov
mov
mul
xchg
mov
mov
jle
jb
inc
cmp
pop
and
xlat
or
outs
dec
mov
lods
cmp
call
dec
or
pop
lea
les
nop
or
lea
sbb
(bad)
outs
daa
fmul
cmps
and
clc
inc
mov
mov
cmps
sub
push
fwait
and
jns
and
pop
shr
cs
mov
retf
fwait
xor
(bad)
stos
(bad)
ficomp
enter
sbb
jmp
push
pop
in
inc
mov
or
adc
cwde
outs
or
outs
add
mov
mov
adc
aas
adc
add
jecxz
fld
or
(bad)
sub
lods
shl
call
push
xor
das
push
mov
or
add
or
out
fsubrp
pop
imul
test
push
ret
fld
ds
(bad)
or
cmp
xor
ret
mov
xchg
xor
xchg
pop
pushf
nop
mov
pop
and
push
jg
push
push
(bad)
fild
sbb
adc
push
in
adc
adc
add
pop
mov
mov
or
loope
aaa
ins
lods
clc
jmp
add
add
push
inc
imul
cmp
cs
adc
dec
gs
outs
push
xchg
sbb
ss
pop
addr16
adc
dec
outs
inc
ins
outs
sbb
shr
rcr
retf
ins
jns
in
add
dec
icebp
pop
xchg
push
add
add
nop
add
sub
jo
jne
pop
int
outs
sbb
or
je
data16
jbe
ins
dec
or
adc
jmp
lds
inc
or
shr
loop
adc
repz
popa
je
test
and
inc
popa
ins
ins
pop
and
mov
aad
int3
scas
mov
jns
(bad)
scas
mov
ins
or
push
dec
das
jbe
scas
dec
sub
sub
mov
and
test
or
daa
inc
cs
scas
fsubr
out
adc
retf
gs
mov
scas
cmp
push
rcl
mov
scas
mov
ror
xlat
adc
in
in
rol
push
inc
inc
ins
popa
jae
sahf
inc
outs
jne
nop
inc
mov
or
shl
inc
mov
in
arpl
push
mov
pushf
mov
dec
sbb
into
dec
imul
pop
inc
imul
or
dec
mov
repnz
mov
inc
cmovne
jo
push
mov
or
push
or
push
lds
nop
jb
adc
push
push
aam
xchg
mov
jle
mov
rol
aam
(bad)
pop
or
mov
enter
inc
leave
xchg
jp
fsubr
test
add
mov
push
scas
pop
xchg
aas
and
fmul
ss
mov
cmp
scas
sbb
into
push
ficom
aam
pop
imul
jns
loopne
out
cmps
add
rol
sti
loope
int
sar
sub
add
(bad)
(bad)
in
sbb
shl
cmp
mov
jae
sbb
fld
enter
jl
icebp
pop
arpl
mov
mov
cmovns
jo
jmp
add
pushf
jae
push
rcl
sahf
cmps
nop
out
dec
jnp
cmp
jg
mov
jb
mov
mov
mov
mov
ss
int3
sahf
int
shl
daa
(bad)
push
add
push
fldcw
dec
fidivr
fist
fsubr
fnsave
push
(bad)
push
pop
mov
dec
cmp
call
push
in
cwde
fnstenv
jo
shl
test
sbb
das
and
or
mov
les
retf
cld
mov
and
mov
push
or
imul
movs
xchg
add
push
les
inc
jb
stc
lock
pop
mov
(bad)
imul
loope
loope
into
aas
sbb
push
mov
in
sti
cmps
loope
fidivr
fcom
adc
sahf
fistp
ficom
cmp
loope
loop
pop
ror
test
aad
fsub
mov
pop
and
xor
cmps
les
shl
fimul
pop
push
movaps
cmp
or
js
cmp
aas
iret
mov
sub
push
dec
cs
inc
mov
ins
gs
xchg
xlat
movs
nop
mov
call
mov
iret
push
adc
mov
call
inc
jne
and
inc
(bad)
outs
ins
sub
ins
mov
adc
loope
xchg
int
call
js
call
fcomip
sub
in
sbb
jmp
ret
mov
mov
fcmovne
in
sbb
and
pusha
add
nop
add
nop
or
cmp
sbb
cmp
xchg
and
sub
in
out
or
mov
std
cmp
jnp
mov
xor
clc
cmp
repz
pop
ins
jp
mov
push
or
cs
xor
pop
mov
enter
fs
adc
push
movs
sbb
push
cmps
stc
xor
lods
and
mov
sahf
movs
mov
cmp
push
addr16
xlat
jae
mov
pop
scas
xchg
out
mov
shl
inc
mov
push
leave
mov
cwde
mov
icebp
push
pop
repnz
or
ss
push
jl
xor
xor
ficomp
pop
adc
pop
mov
dec
pusha
mov
push
mov
mov
or
xor
gs
mov
out
pusha
mov
xchg
pop
out
call
rcl
stos
mov
fisub
psubw
dec
mov
mov
enter
xlat
pop
pop
mov
out
psraw
sbb
xor
inc
clc
adc
inc
int3
push
outs
push
fmul
add
loopne
stc
fidiv
call
in
inc
add
mov
dec
pop
es
(bad)
sti
sar
(bad)
stc
(bad)
clc
push
push
push
push
call
push
repnz
inc
movs
stc
cmp
jnp
push
mov
rcr
cmp
lods
push
nop
push
jl
push
(bad)
es
xchg
pop
(bad)
iret
pop
and
cvtpi2ps
add
push
add
sbb
jne
in
xor
pop
add
lods
pop
movs
cmp
addr16
mov
nop
ss
mov
pop
xor
mov
push
cmps
stc
cmp
in
sbb
imul
xchg
jb
arpl
das
in
add
imul
pop
mov
mov
inc
int3
adc
daa
xchg
mov
iret
jnp
push
cld
data16
fs
push
mov
lock
or
pusha
out
es
mov
inc
mov
mov
push
push
add
mov
dec
outs
dec
fadd
add
(bad)
jns
iret
add
inc
xor
mov
push
xchg
adc
cwde
stc
nop
test
jmp
jp
dec
call
add
inc
enter
push
out
dec
add
movs
xchg
cld
je
rcr
dec
pop
ins
inc
out
mov
or
xor
pop
inc
div
mov
loop
dec
in
ror
add
jge
dec
mov
sbb
mov
or
pop
xor
xor
cwde
cmps
push
mov
sbb
cmp
(bad)
xchg
fwait
push
inc
dec
jne
xor
sbb
push
add
in
mov
jbe
and
ja
inc
lea
loop
ins
loopne
cmp
into
dec
or
push
sbb
es
loope
cld
hlt
xor
pop
lock
sbb
ins
ins
rcr
or
xor
xchg
(bad)
cld
mov
fidiv
je
movsx
dec
jl
inc
(bad)
fcomp
mov
fcom
lahf
jmp
push
sbb
sub
popa
rol
fs
es
add
imul
(bad)
nop
adc
add
in
xchg
out
mov
mov
sub
repz
(bad)
out
mov
scas
stc
xchg
inc
icebp
inc
nop
and
imul
rcr
xor
movs
mov
xchg
retf
dec
movs
jp
ret
cld
cld
mov
xchg
out
jp
cmp
mov
sbb
cmp
pushf
rcr
mov
xor
sbb
nop
lds
fiadd
xor
loop
dec
push
adc
out
cmp
sub
mov
test
js
sbb
dec
push
jns
mov
repnz
adc
add
mov
repz
cld
imul
in
in
jmp
xchg
les
dec
cmp
jl
das
push
push
in
gs
in
aas
mov
cmp
jne
das
mov
or
mov
mov
leave
xor
or
jl
xor
aaa
les
push
or
mov
or
ss
or
xchg
mov
rcl
mov
dec
or
or
or
mov
enter
aaa
mov
les
iret
push
inc
sub
xor
lahf
mov
push
and
pusha
and
pop
xchg
aaa
mov
popf
xor
inc
cld
cmp
xor
jmp
xchg
add
push
outs
pop
cld
push
test
sbb
sar
jne
dec
push
not
mov
push
push
int
or
jae
jge
out
add
and
mov
dec
add
push
jp
daa
jecxz
inc
popa
and
test
push
xor
nop
mov
lds
stos
(bad)
test
push
(bad)
std
and
aad
cmp
sbb
sar
outs
aad
int3
sar
sub
mov
fsub
cld
aaa
mov
inc
inc
push
pop
sub
add
push
outs
jae
add
xor
pusha
mov
mov
jbe
adc
in
inc
sbb
mov
ja
into
mov
push
pop
adc
inc
add
fcmovbe
ja
sub
rcl
sub
leave
mov
js
(bad)
adc
js
xor
push
sub
dec
out
je
sub
icebp
add
sbb
dec
addr16
(bad)
pop
cmp
loop
jns
dec
jle
dec
out
dec
out
std
mov
or
jno
(bad)
cld
es
cld
xchg
mov
xor
lock
dec
in
and
add
push
(bad)
mov
xchg
push
push
push
mov
dec
fs
in
(bad)
fnsave
push
and
(bad)
mov
in
mov
out
push
mov
mov
(bad)
adc
jbe
mov
fadd
shr
icebp
shl
popa
jae
cwde
ret
add
adc
and
cmp
inc
or
pop
in
lahf
inc
dec
xor
adc
mov
call
pop
repnz
or
adc
mov
jmp
je
fwait
popf
xchg
sbb
shl
loopne
adc
or
mov
cmp
inc
push
adc
cmps
jle
push
scas
push
add
or
jg
sub
je
ficom
pop
cdq
add
push
mov
out
add
jmp
inc
dec
dec
bound
jb
jl
ret
mov
enter
mov
leave
lds
push
adc
dec
mov
cli
inc
jle
jl
icebp
pusha
sub
jmp
and
dec
adc
daa
aaa
add
mov
in
cmp
popa
push
add
jno
mov
adc
repnz
inc
push
adc
pop
mov
gs
in
and
or
add
sub
dec
push
inc
or
push
or
fnstsw
pop
and
clc
test
xor
push
xor
nop
ret
inc
lea
retf
mov
sub
ret
fsubr
pop
push
test
or
sbb
dec
mov
inc
nop
inc
(bad)
lock
add
loopne
mov
adc
and
sahf
shl
mov
push
lods
in
retf
adc
adc
jge
icebp
cmp
push
mov
pop
jle
or
retf
push
fmul
add
shl
jns
gs
xchg
sbb
and
shl
cmp
int3
inc
push
sub
adc
inc
add
dec
xor
push
sti
mov
adc
lock
fstp
int
push
dec
or
cli
ret
test
pop
mov
sbb
ja
dec
mov
push
mov
fld
add
xchg
add
(bad)
stos
(bad)
out
fucompp
(bad)
icebp
inc
cs
mov
sub
jb
mov
pop
mov
mov
aaa
or
sbb
arpl
fs
push
into
dec
ror
inc
iret
dec
or
xor
mov
mov
dec
push
mov
cmp
test
and
ror
or
ja
jae
pop
js
adc
test
(bad)
mov
dec
pusha
out
jg
pop
sar
mov
shl
sbb
adc
fcos
call
out
je
jmp
push
fist
jl
mov
cmps
xlat
jns
cmp
sub
loopne
sbb
addr16
in
aad
push
xchg
push
adc
or
or
aas
test
add
push
or
jge
leave
je
stos
adc
btr
cmp
jl
clc
lods
push
push
inc
mov
jmp
lea
dec
xor
cmp
inc
and
test
adc
(bad)
mov
xor
test
test
std
jg
mov
add
push
or
adc
or
std
jg
push
inc
cmp
jne
inc
dec
jne
les
and
dec
les
or
adc
inc
sar
add
retf
call
jecxz
shl
sbb
add
arpl
xchg
fld
jae
xchg
pop
xchg
in
add
cs
call
or
shr
(bad)
or
es
outs
imul
imul
or
int
dec
imul
dec
push
(bad)
push
repz
jmp
pop
ss
or
(bad)
fcom
jne
sbb
mov
inc
ret
retf
and
or
mov
inc
pop
dec
push
add
lea
jae
and
or
lock
pop
ja
fwait
cmps
pop
jnp
call
popa
jo
jns
dec
ja
jb
push
retf
loopne
cld
sbb
mov
lahf
push
sbb
push
sbb
stc
data16
mov
cwde
or
daa
cmp
inc
gs
aaa
adc
add
add
data16
repz
mov
push
loopne
lea
gs
jo
call
loopne
push
xlat
pop
daa
xchg
sbb
cmp
call
les
mov
sbb
or
outs
pop
mov
popa
in
test
test
cld
inc
sub
cmp
mov
and
adc
cwde
add
test
push
add
jmp
scas
inc
fiadd
sbb
sub
and
sbb
(bad)
dec
clc
hlt
nop
jge
iret
rcr
and
js
ret
in
and
mov
std
inc
ret
adc
xchg
jecxz
pop
mov
mov
push
loopne
stos
add
xchg
xor
add
add
jbe
mov
push
mov
(bad)
mov
push
out
inc
dec
imul
mov
in
cmp
repz
xor
cld
lock
hlt
xchg
mov
in
push
in
dec
sub
add
lds
repnz
and
jo
in
inc
inc
pop
fnstsw
mov
mov
lock
imul
add
xchg
ins
add
fwait
cld
or
and
(bad)
sub
sub
loope
aad
(bad)
sbb
enter
clc
and
jne
dec
dec
xchg
(bad)
dec
lock
jbe
imul
sbb
inc
mov
bound
dec
pop
leave
add
inc
dec
jle
not
call
xlat
xlat
mov
add
add
lock
in
cmps
and
call
fdivr
mov
mov
pop
retf
fdivr
sub
outs
pushf
sbb
xchg
in
in
das
xor
inc
xor
xlat
cmp
aad
jmp
mov
inc
push
or
enter
mov
xlat
retf
inc
shr
pop
push
fmul
je
dec
sbb
and
hlt
rcl
xchg
in
mov
test
inc
loopne
into
inc
dec
leave
mov
cmps
add
sub
xchg
mov
push
or
test
repnz
int3
push
retf
mov
xor
loopne
bound
cli
(bad)
pop
shl
fcom
lods
das
push
nop
(bad)
hlt
add
pop
mov
ins
xchg
or
sub
sbb
mov
clc
aad
sub
lea
scas
pop
icebp
add
dec
sub
inc
jp
cmp
fst
es
out
jmp
xor
je
add
leave
add
aad
mov
jge
inc
push
ror
pop
and
inc
ficomp
sbb
les
mov
jae
fcmovnu
adc
mov
inc
xchg
pop
daa
and
ret
and
aad
test
jb
pop
enter
mov
push
cld
push
stc
or
jecxz
mov
sub
mov
fist
rol
inc
sub
inc
mov
fild
pop
xchg
mov
psrlw
mov
mov
mov
jb
je
sub
fcomp
mov
pop
je
mov
adc
call
xor
aam
xor
add
ja
pop
fadd
add
cmp
cmp
enter
(bad)
fcom
cmc
sbb
lds
dec
(bad)
fadd
pop
test
fadd
pop
fiadd
mov
inc
or
(bad)
jmp
add
mov
adc
jl
or
jne
lds
fld
sbb
in
ffree
xchg
pop
shr
mov
inc
push
test
pusha
xchg
pop
arpl
sbb
push
push
mov
pop
dec
cmp
test
inc
aam
cmps
add
(bad)
sub
(bad)
sbb
adc
jno
mov
push
cld
xchg
dec
fs
sub
xor
sub
dec
xor
sub
xchg
fiadd
ss
adc
jmp
lea
push
jmp
xor
sbb
lods
push
jmp
dec
jp
scas
mov
or
pop
push
ret
mov
jmp
fidiv
scas
inc
dec
push
mov
sbb
or
push
ret
dec
xor
inc
and
push
sbb
aaa
sub
jmp
sar
xor
dec
push
xchg
inc
jo
sbb
imul
and
jl
out
inc
ds
ror
(bad)
out
mov
add
aam
add
lock
mov
imul
add
and
loopne
test
mov
push
xor
in
ror
xor
out
mov
mov
rcr
sbb
push
pushf
add
mov
inc
dec
jecxz
dec
scas
mov
test
(bad)
call
dec
cmp
jl
lea
push
inc
loope
shr
cwde
xor
jecxz
add
mov
sti
dec
sub
add
lds
repz
sub
cmp
sub
xor
cmp
add
js
adc
test
inc
and
inc
loope
jecxz
and
adc
cmp
jmp
inc
pop
lock
mov
(bad)
scas
sub
adc
repnz
mov
(bad)
mov
pop
add
aas
push
scas
js
imul
test
int3
test
test
lods
sahf
xor
xlat
test
loop
je
dec
sbb
pop
in
or
inc
or
scas
daa
lods
loop
mov
inc
push
call
hlt
adc
mov
adc
test
mov
sbb
repnz
icebp
jmp
sbb
imul
xchg
push
lods
inc
jbe
fdivr
jo
addr16
test
adc
sbb
sbb
jecxz
aaa
mov
dec
mov
and
xor
sub
mov
hlt
hlt
add
clc
(bad)
faddp
jne
std
dec
test
and
push
clc
shr
mov
ror
push
stos
mov
mov
push
hlt
icebp
dec
cs
jl
sub
jg
cmp
loopne
call
sti
rcr
add
dec
and
cmp
jle
xchg
aam
mov
pop
clc
jl
ja
and
cmp
lea
adc
loopne
dec
movs
cmp
je
mov
sub
jl
push
out
sbb
dec
test
mov
push
fdivr
mov
push
push
call
xchg
dec
cmps
movs
push
push
pushw
sub
or
fadd
or
inc
pop
sub
pop
aas
sbb
call
mov
add
xchg
inc
shr
add
fldl2t
push
jo
sub
out
or
retf
mov
inc
je
and
std
rol
fs
call
pop
mov
sub
or
lods
stos
push
jb
cmp
mov
outs
sub
mov
mov
mov
rol
xchg
mov
cld
pop
loop
sbb
clc
cwde
dec
ret
aad
add
clc
inc
lock
or
push
push
sbb
out
pop
ret
(bad)
in
inc
outs
pop
pusha
movzx
and
lds
aam
dec
jmp
ja
sub
stos
aas
inc
mov
(bad)
imul
jge
mov
sbb
adc
adc
loopne
call
jo
push
ins
lods
fsubr
pop
jmp
dec
xlat
test
cmp
imul
lods
jge
test
cmp
sub
call
sub
ret
or
sbb
pop
fisttp
loopne
or
daa
sbb
pop
clc
ins
je
or
inc
mov
mov
and
dec
adc
div
pop
cmp
mov
icebp
mov
and
jae
call
das
cmp
sub
jb
je
data16
mov
or
adc
add
sbb
inc
loopne
push
mov
(bad)
mov
and
(bad)
or
or
push
jle
dec
arpl
adc
dec
or
js
jne
inc
rcl
daa
repnz
stos
pop
or
(bad)
hlt
cmp
jge
stos
mov
je
sti
leave
and
(bad)
daa
jmp
pop
es
add
loopne
or
into
or
mov
jecxz
out
ja
dec
adc
stc
je
inc
jne
addr16
jo
add
and
pop
adc
sub
lock
inc
add
or
adc
pop
push
push
and
enter
loopne
scas
cs
(bad)
aad
jmp
xor
data16
outs
jo
les
call
adc
jnp
jle
(bad)
xor
call
push
sub
xchg
and
and
push
(bad)
xchg
mov
jmp
or
or
add
sub
bound
inc
sbb
std
mov
push
jmp
sub
push
or
cwde
xor
ret
add
hlt
pop
jmp
inc
mov
idiv
or
sbb
iret
and
pop
jmp
pop
js
dec
sbb
dec
xchg
add
push
(bad)
rol
inc
cs
pop
packssdw
ins
jae
adc
inc
push
push
or
(bad)
and
or
aas
push
in
push
push
loopne
enter
in
ret
inc
pop
adc
or
fisttp
adc
test
sbb
xchg
dec
dec
xchg
push
add
and
in
xchg
sbb
sbb
sbb
pop
pop
daa
ss
mov
add
rcr
inc
adc
push
or
outs
jo
sub
jo
jne
mov
inc
adc
push
or
or
inc
enter
retfw
adc
or
add
jge
scas
dec
pop
add
pop
add
repnz
and
sbb
mov
adc
xor
mov
and
xor
scas
xchg
(bad)
cmp
inc
cmp
mov
sbb
sub
iret
xor
dec
sbb
mov
cmp
psubw
xchg
imul
cmp
push
and
mov
xchg
pop
push
mov
(bad)
cdq
je
pop
sub
lods
cmps
std
mov
pop
mov
lock
js
lods
loopne
mov
inc
jbe
retf
push
inc
cmp
test
ret
imul
xchg
fstp
adc
ret
div
or
rcr
cmp
jl
jne
addr16
(bad)
lock
cdq
nop
jmp
xchg
(bad)
clc
int3
adc
jmp
pop
add
and
fistp
mov
nop
out
out
sub
out
mov
pop
test
outs
out
push
dec
inc
push
(bad)
mov
jmp
test
cmps
lock
inc
or
mov
scas
sbb
push
cmp
cmp
repnz
in
pop
test
cmp
in
mov
shl
fisttp
cmp
je
inc
das
icebp
or
xchg
sub
add
inc
enter
ss
inc
xor
or
retf
lea
shl
xchg
push
add
in
add
cmp
fistp
cmp
fidivr
push
int
add
mov
sbb
mov
rcl
sub
push
jl
xor
xor
pop
lods
inc
xchg
sbb
movs
pop
pop
js
sub
daa
std
adc
fdivr
jo
icebp
into
mov
pusha
aaa
sbb
je
repz
pushw
adc
loopne
or
inc
adc
push
adc
add
xchg
jmp
xchg
test
mov
jnp
jg
mov
cmps
ds
cmp
je
push
dec
jne
aaa
js
add
mov
adc
or
lods
and
mov
arpl
in
stos
sbb
or
cmps
push
sbb
fbld
rol
push
repz
push
xchg
das
adc
jl
lods
stos
into
sete
es
ins
ss
push
or
loopne
retf
aam
test
jo
loope
xor
test
int3
dec
mov
push
pop
xchg
xor
pop
and
adc
mov
mov
pop
push
mov
xor
inc
add
pop
popa
mov
scas
retf
add
int3
and
dec
int
jecxz
mov
inc
or
bound
dec
push
push
xchg
push
adc
sub
cmp
add
dec
sbb
pop
nop
mov
add
xchg
sbb
push
mov
jo
into
add
sbb
sub
sbb
aam
in
icebp
hlt
mov
test
in
inc
pop
outs
fnstcw
push
test
jo
add
mov
es
das
push
iret
std
inc
dec
jne
and
jno
mov
inc
sub
mov
pop
adc
(bad)
loopne
cmps
push
rol
sub
adc
nop
jnp
aaa
retf
or
mov
pop
sbb
mov
fwait
test
cmp
out
fst
retf
dec
xor
adc
inc
adc
cmp
or
cmp
jne
pop
sub
fisub
nop
not
mov
inc
sub
add
or
dec
xchg
dec
cld
cld
and
push
sub
into
sub
fistp
or
test
and
nop
loop
push
pop
loop
add
lahf
loop
push
and
je
jbe
push
jecxz
pop
daa
cld
sub
dec
xchg
sbb
sub
sbb
mov
mov
xchg
idiv
test
in
jne
mov
sub
sar
inc
leave
js
add
add
(bad)
out
sbb
in
aaa
adc
test
daa
lock
mov
fs
je
cmp
or
fwait
div
add
inc
jne
adc
add
pop
dec
xchg
cmp
add
mov
xchg
sbb
(bad)
sbb
jne
pop
cmp
sbb
pushf
pop
sbb
das
lea
test
or
jae
sub
cld
out
jns
pusha
hlt
retf
ds
movs
pop
in
xchg
mov
dec
and
add
push
sub
inc
lock
(bad)
ret
sub
lock
jmp
and
mov
lock
pop
out
in
les
mov
mov
cmp
arpl
sub
or
adc
lahf
fild
sbb
stc
enter
pop
shl
repz
sub
push
cmps
retf
inc
push
leave
push
sbb
cmp
pop
or
push
lods
test
xlat
in
xchg
div
pop
and
inc
adc
mov
nop
call
loopne
data16
pop
out
and
test
cmp
or
jmp
xor
out
out
sbb
ss
test
data16
xchg
scas
lods
imul
pop
jne
int
or
add
and
out
jnp
and
cld
xchg
pop
jmp
aaa
into
in
push
popa
or
and
je
push
movs
or
ret
jae
out
pop
es
or
mov
cwde
test
arpl
sti
or
push
cmp
mov
adc
ja
mov
mov
push
mov
ja
loope
dec
mov
mov
in
push
push
movs
(bad)
in
sti
pop
xlat
fmul
les
std
jp
fisttp
pcmpeqw
cli
pop
fsubr
pop
jbe
test
movs
loope
rol
cmp
jns
pop
mov
cld
sub
js
mov
frstor
out
shr
cwde
xor
(bad)
adc
data16
(bad)
mov
push
dec
jp
add
(bad)
aam
or
push
adc
mov
out
pushf
fild
data16
jo
xchg
mov
(bad)
mov
add
sbb
add
pop
dec
rcr
adc
inc
cs
xor
clc
or
or
fbstp
mov
and
fstp
mov
inc
fld
sub
je
push
cmp
mov
pop
pushf
xchg
leave
mov
outs
inc
dec
mov
(bad)
fld
sub
clc
enter
std
pop
and
or
pop
(bad)
enter
loope
xor
iret
(bad)
mov
pop
xlat
jmp
jle
pcmpgtb
je
and
jmp
cmp
fimul
popa
movsx
jae
out
sbb
add
push
adc
jmp
repz
out
ret
mov
mov
xor
shl
and
cmp
jne
xor
das
and
push
cs
test
mov
add
xchg
sbb
out
ins
fsubr
push
mov
xchg
jmp
push
jne
xchg
movups
popa
inc
mov
rol
(bad)
call
sbb
stos
mov
repz
and
es
(bad)
mov
and
fsubr
(bad)
fadd
push
jns
int3
lods
fsubr
scas
add
dec
clc
xchg
mov
add
in
(bad)
or
pop
pushf
es
in
dec
add
and
imul
pop
xchg
mov
lds
add
and
xor
mov
add
and
aas
adc
(bad)
sti
je
jl
cmp
inc
sub
jne
xor
push
adc
bsf
or
sbb
adc
pusha
or
or
in
movs
fdiv
dec
cmp
jne
jge
or
popa
scas
je
add
mov
out
hlt
pop
xor
inc
xacquire
loopne
es
lock
or
shr
jg
sqrtps
sub
add
jge
pusha
int
sbb
pop
daa
fistp
(bad)
adc
int
add
mov
aam
aad
xor
(bad)
mov
fiadd
xor
jo
stos
(bad)
lods
movs
jns
dec
pop
add
and
ror
sbb
jo
lahf
cmp
pusha
mov
stos
add
call
dec
and
jne
inc
aad
adc
cdq
add
and
adc
mov
cmp
cmps
test
call
pop
pop
jo
mov
test
inc
movs
add
inc
dec
xchg
mov
fisttp
mov
arpl
ss
leave
push
shl
daa
cmp
addr16
xor
clc
hlt
iret
cmp
in
cmp
inc
call
and
leave
jmp
(bad)
adc
les
daa
adc
cmp
add
xchg
push
push
xor
scas
ret
jp
push
popf
mov
hlt
fnstsw
mov
mov
ja
test
enter
dec
pop
jbe
idiv
push
mov
popf
mov
das
xor
neg
leave
dec
cs
fcomp
jne
jbe
in
sbb
cmp
mov
in
jno
(bad)
push
and
pop
push
cmp
cmps
in
(bad)
in
pop
fstp
fwait
daa
cwde
(bad)
(bad)
fcomp
ja
jno
xchg
icebp
dec
ins
daa
js
xor
mov
popf
pop
jmp
xor
enter
arpl
scas
neg
sbb
pop
shl
in
xchg
test
lea
dec
lock
hlt
and
pushf
and
add
pop
xor
adc
call
xchg
or
lock
cmp
cmp
sub
aam
cmps
stc
dec
add
and
repz
push
push
cwde
push
mov
fwait
jge
iret
cli
sbb
xor
pop
inc
cli
das
xchg
retf
js
pop
jne
(bad)
cmps
daa
jecxz
out
mov
dec
pop
jmp
pop
in
enter
out
in
pop
fsubr
cmps
adc
test
loopne
ret
dec
jb
nop
(bad)
sahf
lods
mov
pusha
repnz
and
sti
or
add
inc
ins
sbb
jmp
adc
stos
or
xor
je
fild
sar
sub
inc
rcr
imul
sbb
mov
in
inc
adc
shr
push
mov
or
adc
cmp
ins
jnp
repz
enter
call
add
xor
into
or
(bad)
adc
inc
push
mov
dec
lock
ret
lock
mov
mov
add
mov
and
mov
imul
mov
dec
(bad)
in
and
mov
rcl
and
add
xor
sbb
mov
jmp
cmp
ret
jmp
xchg
sbb
inc
and
je
daa
out
cmps
cmc
pop
sub
xchg
clc
xchg
outs
rcl
or
mov
xor
adc
mov
test
test
sar
sbb
jo
add
mov
sbb
sbb
push
add
jne
mov
and
lock
lods
ror
jmp
jecxz
xor
out
mov
xchg
sbb
je
mov
xor
xlat
(bad)
ficomp
dec
fs
inc
dec
loopne
pop
dec
xchg
cs
loopne
loopne
inc
xor
aad
je
jns
add
in
sbb
mov
pop
dec
mov
lea
add
or
and
and
je
clc
add
pop
js
mov
clc
pop
ja
bts
loop
sbb
jmp
fst
movs
and
and
push
dec
mov
pop
sbb
jo
enter
pop
pop
or
in
xchg
add
dec
push
test
fiadd
shl
pop
xchg
in
cli
ja
stos
xchg
sti
jge
je
push
adc
and
add
push
mov
push
mov
dec
ins
popf
mov
mov
xchg
(bad)
push
pop
add
es
fs
test
inc
clc
or
movs
addr16
jp
je
dec
add
pop
inc
fisttp
sub
scas
adc
sar
jle
in
and
sub
into
push
mov
mov
cmp
adc
mov
aaa
fstp
mov
push
bound
or
mov
pop
inc
or
and
popa
popa
and
fs
jmp
mov
push
adc
fidiv
clc
es
xchg
ja
mov
inc
push
dec
jmp
push
push
repnz
dec
sahf
sbb
push
aaa
push
inc
ins
sbb
pop
dec
jmp
push
pop
ins
pop
push
xchg
adc
sbb
inc
push
xchg
add
or
inc
aad
scas
lahf
jmp
fwait
call
cli
adc
outs
sete
enter
or
arpl
adc
test
adc
push
sub
ss
lods
sbb
(bad)
xor
pop
imul
mov
sbb
mov
in
xor
xor
hlt
out
jp
xor
pop
in
pop
dec
repnz
xchg
mov
add
pop
pop
ds
sbb
cld
mov
or
push
test
mov
push
xchg
dec
cmp
std
jl
lock
add
sahf
and
cld
bound
outs
mov
cld
movs
add
outs
jg
sub
sub
dec
retf
jg
scas
dec
call
jl
and
ds
mov
mov
retf
or
inc
inc
call
xchg
movs
fwait
out
sbb
xchg
(bad)
dec
or
mov
rol
movs
sbb
neg
xlat
xchg
retf
xchg
inc
or
inc
adc
cmp
and
xor
fs
add
sti
aaa
xor
ror
or
sbb
mov
psubb
cmp
jg
mov
shl
jbe
int
lods
pop
add
ds
sbb
adc
ds
mov
push
add
pop
mov
mov
(bad)
imul
rcl
xlat
pop
mov
mov
outs
adc
js
jo
iret
aad
inc
das
jnp
test
sub
fucom
arpl
sub
adc
int3
outs
ins
push
adc
ret
scas
add
mov
sub
mov
xlat
and
lds
add
fst
push
push
out
movs
stc
adc
mov
adc
loope
gs
add
lods
push
cs
test
sub
adc
add
ins
add
inc
mov
lods
dec
jns
xor
pop
sbb
das
or
jnp
ins
add
ss
jmp
mov
retf
(bad)
jmp
mov
mov
adc
add
mov
pop
xor
daa
sbb
iret
cmp
movzx
xchg
fcmovnbe
pushw
sbb
sbb
adc
jecxz
adc
xlat
aaa
ror
mov
add
mov
push
add
fidiv
mov
xchg
xchg
pop
pop
ja
adc
out
or
cmps
or
out
or
bound
(bad)
daa
lock
outs
out
out
jae
pop
ret
ficomp
add
and
mov
sub
jg
loopne
lods
sbb
test
data16
cmp
jne
xlat
fdiv
pop
ret
inc
and
jne
or
push
ret
and
sysenter
pop
nop
pop
push
mov
and
das
mov
cmp
adc
in
jbe
ret
and
mov
call
retf
out
mov
sbb
push
dec
cld
push
push
cmps
adc
or
data16
fild
setne
mov
pop
xchg
int
movs
inc
adc
inc
inc
js
bound
sub
mov
data16
add
outs
jo
cmps
add
into
das
pop
mov
push
sbb
lahf
jp
pop
ins
int3
aaa
inc
inc
scas
inc
pop
pop
stc
push
mov
sbb
and
pop
adc
jne
sbb
adc
ins
dec
mov
add
jmp
cmp
push
sbb
in
pusha
mov
add
mov
push
stos
push
loopne
loop
es
cmc
es
repnz
pop
lock
hlt
cmp
ror
or
jmp
cmc
cmp
inc
clc
xor
cmp
ss
inc
adc
inc
xor
dec
mov
call
jl
xor
movs
push
inc
dec
jne
test
lods
push
jmp
icebp
mov
sbb
jns
cmp
add
or
je
add
mov
lods
jmp
icebp
sbb
add
in
mov
sbb
push
pop
jg
stc
call
inc
sbb
inc
movups
dec
cwde
in
adc
mov
aaa
popf
push
lahf
dec
cmp
sbb
lahf
adc
pop
adc
ret
mov
pop
push
pop
aas
add
outs
xor
lods
jbe
jp
push
outs
jge
adc
test
(bad)
jg
push
dec
cmp
dec
xlat
and
pop
adc
movs
xchg
ret
mov
inc
and
add
and
dec
mov
dec
inc
int
sti
test
jl
inc
sahf
inc
or
push
rcl
inc
push
or
sbb
mov
pop
xor
bound
cmps
sub
jae
sbb
mov
cmp
test
xlat
popa
popf
clc
adc
cmp
push
sbb
pop
movs
inc
call
add
cmp
sbb
mov
imul
and
clc
out
ret
push
dec
test
adc
ds
sbb
das
ja
adc
fsubr
inc
sbb
xor
push
push
add
rcr
mov
pop
lahf
pop
loope
mov
or
(bad)
jno
fs
or
(bad)
nop
ds
push
ror
push
add
sub
addr16
or
lock
stc
outs
mov
sbb
imul
push
or
cwde
lods
dec
fisttp
lods
scas
add
loopne
cmp
popf
les
aaa
clc
mov
xchg
add
adc
shl
stos
xchg
cli
shr
cmp
jle
out
dec
sbb
(bad)
mov
add
sbb
cmp
and
ror
mov
dec
aaa
sub
not
ficomp
sbb
cmp
cmp
scas
add
sbb
and
jmp
pop
(bad)
pop
inc
sbb
xor
xor
and
inc
outs
sub
mov
xlat
test
cmp
jne
js
and
pusha
dec
adc
inc
(bad)
cwde
sub
in
or
(bad)
in
mov
push
jne
or
cmp
cmp
jne
jmp
jmp
ins
inc
(bad)
ss
sub
inc
cmp
sbb
mov
xor
aaa
mov
pop
pusha
jae
outs
adc
sub
xor
and
inc
jecxz
dec
iret
xchg
stc
inc
xor
or
add
sbb
add
clc
outs
or
add
inc
jl
cmp
jle
add
inc
sub
sub
or
rcr
enter
add
(bad)
enter
or
in
out
inc
dec
cdq
cmp
jne
cmp
jo
add
or
xor
mov
xlat
jbe
shl
lahf
ds
xchg
push
and
sahf
lea
add
xor
or
enter
inc
cs
xor
popa
or
adc
pop
jo
dec
mov
xchg
or
in
out
adc
and
add
adc
xchg
retf
inc
out
cmps
jg
or
fxch
sbb
aaa
push
mov
cld
inc
(bad)
pop
add
sbb
mov
xor
inc
cli
and
add
inc
cmp
inc
add
cmp
cmp
jmp
sbb
mov
movs
addr16
sub
push
xor
inc
addr16
sbb
xor
adc
pop
fidivr
and
jl
sbb
push
popa
and
xchg
push
imul
jno
dec
push
mov
and
pop
fist
inc
adc
je
fmul
add
and
jne
and
push
and
cmp
jb
push
mov
adc
cmp
or
sub
xchg
or
pop
pop
das
lods
sbb
les
dec
pop
mov
sub
outs
and
outs
lock
jae
pop
je
mov
or
xor
mov
inc
xor
push
push
fdivr
xchg
mov
mov
sub
add
xlat
in
add
ss
fcom
ins
outs
ins
cs
and
ds
cmova
add
mov
or
jae
xchg
add
push
inc
sbb
je
push
inc
pop
mov
inc
gs
dec
adc
gs
or
(bad)
jmp
add
bound
pushw
pop
cld
jbe
add
(bad)
nop
or
push
mov
fcmovne
add
push
lahf
add
(bad)
push
sub
push
je
ins
mov
jg
pop
and
push
data16
mov
je
and
arpl
adc
or
gs
dec
imul
sbb
pop
or
inc
rol
lahf
fisub
mov
test
sti
jge
cld
push
push
inc
popa
jae
add
sbb
or
fdivr
jl
or
dec
outs
jae
inc
jb
mov
and
aad
mov
das
ins
inc
ins
pushw
push
push
out
gs
je
push
inc
jns
ja
call
addr16
and
pop
mov
sbb
fwait
ins
xor
(bad)
adc
retf
aas
mov
loopne
imul
adc
and
mov
sub
cwde
and
bound
jecxz
push
dec
adc
jp
push
or
push
addr16
adc
cs
inc
imul
enter
outs
jae
es
shr
xor
fidiv
ins
push
adc
sbb
lods
push
mov
cmp
jbe
push
mov
mov
pop
sub
popa
mov
adc
daa
adc
xor
xchg
imul
imul
pop
cmps
inc
xchg
ins
(bad)
(bad)
daa
cmp
ficom
cmp
pop
pop
dec
push
jl
jl
and
cmp
and
fild
jb
pop
retf
add
iret
lods
pop
adc
loopne
aas
cs
lods
ds
mov
js
inc
dec
pop
pop
jmp
and
pop
bound
call
fwait
dec
test
cmp
aas
add
dec
gs
enter
clc
les
cs
dec
jl
test
retf
sub
cmp
in
mov
add
push
imul
in
inc
push
add
jno
cmp
test
lahf
rcr
push
cs
mul
aas
mov
push
add
mov
maskmovq
neg
rol
add
xchg
pop
repnz
jo
add
bound
xor
(bad)
in
xchg
add
sti
inc
xor
cmp
rol
je
repz
bnd
add
inc
push
or
je
(bad)
sub
push
rcr
sub
push
pushf
in
inc
adc
sub
nop
lahf
pop
sbb
add
dec
mov
cdq
add
inc
(bad)
(bad)
push
push
adc
pop
add
ins
sub
pop
test
or
in
inc
inc
dec
dec
jle
sub
loopne
dec
xchg
popa
enter
pop
lods
pop
sbb
push
movs
xchg
call
dec
imul
daa
and
pop
aas
mov
loopne
push
int3
push
or
pop
enter
mov
dec
lahf
mov
sub
enter
fiadd
sub
pop
adc
js
fcom
in
sbb
jo
bnd
inc
enter
(bad)
outs
xor
sysret
add
bound
out
mov
call
push
nop
out
add
es
and
pusha
mov
lds
xor
xor
and
add
or
aaa
dec
rol
mov
movs
gs
ins
mov
mov
adc
adc
fwait
adc
data16
test
pop
xchg
xchg
out
mov
sub
xor
fistp
mov
xchg
jno
inc
rcl
sub
test
fnclex
xor
inc
dec
jbe
hlt
xor
mov
ja
nop
push
adc
inc
fadd
in
popf
in
test
add
push
xchg
inc
or
call
or
pop
pop
sbb
lock
adc
push
pop
dec
or
cmps
mov
push
mov
loopne
or
cld
bound
push
cmp
(bad)
mov
pop
leave
stos
xchg
rcr
xchg
push
clc
xchg
fadd
cmp
cmps
push
inc
(bad)
dec
mov
mov
sbb
pop
cld
push
retf
fidivr
es
rol
push
int3
pop
sbb
dec
or
xor
test
dec
shl
xchg
mov
lods
dec
adc
pusha
sbb
mov
jl
jmp
jno
xchg
shl
add
jne
push
lock
mov
(bad)
mov
mov
loopne
popa
fild
dec
add
and
movs
jg
sbb
add
add
or
pushf
mov
adc
arpl
and
inc
mov
pop
mov
or
je
sbb
cmc
sub
(bad)
lods
add
fcom
or
mov
inc
cmp
xor
imul
adc
push
adc
or
xchg
lahf
lea
or
xchg
cmp
inc
add
cmp
cmp
inc
clc
xchg
xor
jns
movs
loopne
fs
dec
lds
leave
bound
push
xor
or
repz
add
retf
add
jge
repz
add
clc
jne
mov
mov
pop
xor
in
mov
pop
jmp
cmp
lea
fisttp
push
mov
enter
or
aaa
in
mov
cmp
mov
mov
adc
enter
mov
pop
lahf
pop
jb
and
jmp
je
pushf
push
add
aad
xor
int
test
stc
(bad)
mov
jg
mov
repz
adc
or
push
xchg
pop
mov
jo
ffree
adc
push
(bad)
push
mov
imul
mov
shr
imul
adc
mov
neg
(bad)
movs
inc
je
xlat
mov
pop
mov
inc
adc
jo
pop
cld
xchg
cli
mov
xchg
push
cmps
dec
cmp
pop
or
ror
arpl
shl
inc
pop
or
outs
inc
dec
mov
mov
inc
inc
out
repnz
or
outs
pop
dec
ins
imul
das
stc
dec
popa
jbe
add
jb
ins
gs
xor
add
push
gs
ins
pop
and
push
imul
orps
ins
gs
pop
gs
ins
in
pusha
leave
outs
ja
jne
or
jle
inc
arpl
imul
and
pushf
adc
pop
or
pusha
sbb
xchg
adc
or
addr16
dec
sbb
mov
minps
out
jecxz
popa
outs
das
adc
in
dec
outs
popa
xor
(bad)
es
adc
fs
xchg
test
xchg
pusha
outs
leave
ins
js
push
or
xchg
ins
fcomi
xor
pop
xchg
cmp
loop
sahf
fdiv
nop
adc
addr16
push
xor
imul
push
stc
push
stos
ror
ins
fisub
maskmovq
imul
inc
je
inc
jge
xchg
mov
jl
jnp
jle
or
add
adc
or
pop
xor
outs
mov
inc
inc
imul
or
dec
push
(bad)
dec
repnz
dec
outs
outs
or
inc
imul
sbb
dec
(bad)
gs
div
mov
jbe
adc
cli
push
mov
cmp
pop
xor
ret
pop
push
loope
and
xchg
adc
ss
pop
xchg
daa
pop
nop
dec
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
inc
inc
inc
inc
test
xor
inc
dec
dec
arpl
fadd
pop
dec
inc
inc
push
adc
dec
inc
push
dec
dec
push
mov
push
imul
movs
xchg
fisttp
and
fiadd
xor
xor
adc
inc
stc
mov
and
inc
xor
inc
dec
dec
inc
or
dec
push
dec
fidiv
bound
das
sbb
or
cmps
(bad)
mov
dec
push
mov
push
push
push
push
dec
inc
dec
or
push
dec
fdivrp
sbb
pop
adc
push
push
push
dec
push
inc
clc
inc
sahf
sbb
adc
imul
jg
xchg
mov
mov
dec
dec
mov
fmul
mov
xchg
mov
add
pop
clc
or
add
dec
or
sahf
xchg
cmps
mov
adc
jmp
mov
push
fwait
mov
sbb
push
icebp
jbe
out
mov
inc
or
aas
inc
dec
paddd
fidiv
(bad)
sub
cld
add
cmp
add
add
mov
test
or
iret
int3
pop
adc
jne
or
adc
dec
mov
test
pop
aam
or
inc
test
mov
or
es
or
loopne
jl
sbb
xor
adc
(bad)
adc
inc
dec
push
cwde
mul
inc
and
adc
and
inc
ret
das
repnz
inc
sbb
lock
xchg
hlt
lods
cmps
sub
icebp
sub
add
addr16
sub
adc
stc
xchg
loop
je
xchg
clc
and
cld
test
cmp
add
push
rol
cmp
popa
(bad)
(bad)
movs
jo
mov
das
enter
dec
dec
xor
add
and
movs
test
jae
daa
mov
arpl
mov
cmp
mov
ret
addr16
mov
mov
pop
sub
enter
cmp
cmp
scas
xor
dec
out
ja
je
push
imul
int3
idiv
jbe
or
inc
shl
stos
xor
push
inc
aam
add
out
jb
or
mov
adc
sahf
inc
cli
loopne
inc
mov
sub
or
mov
movsx
enter
scas
push
fcom
mov
mov
jno
mov
push
fadd
add
js
add
dec
inc
fild
or
jmp
sbb
not
push
(bad)
shl
or
daa
push
inc
jg
or
dec
sub
add
bound
gs
xor
outs
imul
lds
add
(bad)
or
sub
jb
mov
add
push
inc
dec
les
xchg
pop
gs
xor
(bad)
jl
aam
div
mov
adc
sbb
xchg
fwait
nop
dec
dec
sub
inc
rcl
jecxz
mov
(bad)
lock
dec
xor
neg
mov
xor
push
das
std
ror
(bad)
neg
push
push
sbb
inc
pop
shl
rcr
xchg
inc
cmp
test
xor
outs
jbe
jecxz
inc
mov
jp
stc
(bad)
mov
das
pop
sbb
aas
mov
and
imul
jb
rol
pop
sub
in
pop
and
and
or
sub
sar
push
leave
inc
enter
pop
enter
inc
and
cwde
adc
lock
cld
adc
and
add
adc
in
push
jne
pop
enter
mov
inc
jne
inc
mov
xchg
in
inc
sbb
mov
inc
and
inc
dec
adc
dec
xchg
inc
and
in
xchg
mov
in
pop
sub
jle
mov
push
add
or
iret
das
cld
or
pop
xchg
mov
sbb
push
push
dec
push
or
sub
test
je
in
jb
xchg
inc
inc
test
inc
rcl
mov
nop
outs
mov
xchg
pop
es
sar
inc
test
inc
push
mov
mov
jecxz
jmp
aam
jns
in
(bad)
xor
or
jne
(bad)
retf
aam
xchg
dec
inc
fcomip
push
pushf
push
or
mov
mov
out
ret
pusha
push
or
add
das
sub
out
xlat
xchg
mov
fld
push
je
jmp
popf
addr16
ss
je
push
adc
pop
sar
add
call
cmp
in
lock
pop
inc
test
xchg
and
or
and
cmp
xchg
xchg
xor
mov
enter
xor
ins
adc
add
mov
inc
dec
inc
loopne
add
dec
es
in
inc
pop
and
xchg
xchg
sub
fcom
push
movs
bnd
xor
mov
ret
sub
icebp
jb
(bad)
push
cmps
sbb
add
push
adc
push
(bad)
outs
enter
imul
add
xor
jno
cmp
nop
mov
jge
rcl
mov
call
jne
mov
sbb
push
or
(bad)
out
sub
or
sub
or
or
out
cmp
push
or
push
data16
adc
push
push
leave
dec
pop
mov
add
add
push
or
mov
js
sbb
xchg
lahf
sbb
ja
hlt
sti
fadd
xchg
mov
xor
rcr
mov
fwait
inc
xchg
and
and
inc
imul
adc
scas
mov
cmp
pop
adc
fs
cmp
pop
xor
push
push
jmp
test
iret
fwait
in
inc
aaa
jge
push
ins
cmps
aad
push
dec
mov
ficom
dec
icebp
push
inc
dec
sbb
mov
pop
test
inc
retf
sub
mov
mov
push
mov
pop
dec
jecxz
cmps
(bad)
mov
sbb
and
iret
add
or
std
pop
xchg
aam
test
je
push
adc
gs
lods
mov
js
mov
loope
dec
repnz
mov
jno
add
les
ds
inc
add
pop
and
gs
lea
arpl
ja
mov
nop
fisttp
add
or
clc
hlt
sbb
and
mov
fcmovnb
lds
dec
pop
icebp
pusha
addr16
or
jo
or
in
mov
xchg
stos
or
or
dec
xchg
call
nop
add
push
pop
mov
outs
xchg
cmp
mov
out
sbb
scas
ret
cmp
add
not
idiv
or
adc
pop
adc
stc
jo
iret
push
add
pop
jno
dec
pushf
xchg
popf
xor
push
mov
rcl
and
dec
dec
rol
pop
cmp
imul
(bad)
jge
sub
aas
and
not
mov
icebp
adc
je
jg
lock
mov
and
mov
cmp
je
mov
add
mov
enter
inc
jne
dec
xor
add
(bad)
in
pop
push
adc
adc
cmp
cmc
cmp
or
xor
jg
jae
add
arpl
(bad)
and
or
push
in
outs
adc
xchg
out
jmp
sbb
loopne
mov
inc
loope
mov
lock
not
and
mov
and
cmp
je
or
cmp
shl
adc
jle
add
fisttp
cmp
add
pop
das
ret
test
lock
dec
sub
pop
cmp
jae
or
dec
or
in
arpl
xchg
xchg
push
xchg
dec
ret
test
or
mov
adc
push
adc
xchg
int3
push
lea
adc
(bad)
pop
xor
and
arpl
jnp
xor
call
and
push
movs
adc
jae
inc
sub
push
adc
mov
mov
das
ds
mov
and
jb
inc
(bad)
scas
push
and
clc
and
add
dec
add
jno
and
xchg
nop
arpl
in
dec
(bad)
test
stos
push
cmp
push
enter
iret
mov
and
xlat
add
push
leave
(bad)
xor
sbb
test
add
inc
ss
adc
pusha
lea
mov
lea
nop
pop
pop
aaa
jmp
in
ds
push
enter
or
aas
jg
movs
xor
xchg
xchg
out
hlt
mov
xor
push
mov
adc
in
scas
push
mov
push
lock
lods
sbb
add
outs
aaa
lds
je
test
mov
jmp
cmc
retf
fild
jo
push
fiadd
adc
fsubr
push
in
mov
cmp
mov
(bad)
xchg
cmps
fnsave
lock
xor
aam
jle
push
out
jnp
mov
pop
in
inc
or
xor
(bad)
adc
ins
cmp
sbb
nop
mov
dec
add
jmp
hlt
or
enter
fcmovb
shl
add
xor
not
and
dec
ret
cmps
pop
sar
out
(bad)
aam
xchg
fdivr
mov
adc
movs
sbb
jo
push
cmp
xlat
cmp
adc
pop
imul
add
and
js
dec
push
cmp
push
test
push
stc
(bad)
push
cmp
sub
stos
test
add
xchg
push
in
js
out
sbb
and
sub
push
inc
ins
imul
xor
jnp
rcr
xor
shl
fistp
fdivr
cmps
mov
sub
ins
xor
and
daa
mov
add
push
dec
add
sbb
and
imul
push
test
sub
dec
jmp
jns
xchg
add
xchg
sbb
lock
jo
push
das
inc
cmp
gs
js
or
push
movs
mov
inc
add
stos
imul
push
fwait
sbb
mov
dec
sbb
call
push
dec
cmp
inc
ret
add
fidiv
mov
(bad)
(bad)
outs
fbstp
xchg
lea
add
mov
cmp
in
mov
or
add
inc
add
dec
and
faddp
inc
add
jns
into
jp
mov
cmp
aas
cmp
stos
add
jle
mov
stc
outs
inc
ss
push
mov
add
pusha
call
jne
fstp
add
adc
adc
adc
aam
pop
push
sbb
dec
pop
mov
lds
stos
lahf
mov
(bad)
in
outs
pop
call
movs
dec
js
mov
push
and
ins
mov
enter
sbb
push
dec
jns
jmp
out
(bad)
aam
and
(bad)
mov
sub
shl
mov
mov
jmp
(bad)
sti
mov
add
cli
test
popf
xchg
outs
xchg
cld
push
cmp
xchg
daa
out
push
xrelease
fadd
adc
add
add
push
add
ret
dec
or
push
cdq
jp
mov
add
jne
ds
ds
jnp
sbb
xchg
mov
lea
(bad)
jg
sub
push
cmp
cs
fisub
jmp
addr16
data16
add
les
dec
in
add
add
dec
inc
xchg
push
and
cmp
xor
xchg
sbb
cs
xchg
clc
adc
(bad)
mov
das
jl
mov
add
lock
push
or
and
xchg
xchg
xchg
mov
leave
rol
and
add
sub
xchg
mov
pop
pop
push
push
and
xchg
xchg
mov
ss
pop
(bad)
shl
jmp
es
mov
cs
pop
push
aam
(bad)
scas
sar
jl
(bad)
sub
adc
rcr
or
inc
movs
push
xchg
add
in
jae
and
or
inc
add
xchg
mov
call
dec
push
add
push
push
jl
inc
cdq
sub
sti
inc
aad
lea
cmp
jge
inc
push
outs
mov
dec
jl
ret
sub
cmps
ja
inc
jecxz
push
jnp
les
aam
in
or
shr
or
les
push
push
test
jmp
div
xchg
push
xlat
scas
add
imul
push
pop
test
pop
cli
clc
pop
jge
add
dec
sub
lock
push
jnp
adc
pop
add
int3
int3
adc
pop
mov
sub
cmp
fstp
sub
jle
loopne
out
or
mov
adc
dec
pop
pushf
lods
das
or
stos
shr
push
xchg
out
call
jbe
and
ins
pop
cld
push
(bad)
inc
push
push
fdiv
and
arpl
in
cmp
lock
or
iret
xchg
test
xor
aas
push
arpl
add
mov
enter
mov
sbb
fadd
movs
cmp
fstp
or
popa
push
fs
dec
cli
fdiv
imul
mov
sbb
mov
or
enter
shl
or
dec
sahf
inc
or
pop
aam
cmp
lods
dec
mov
inc
inc
sbb
test
add
jge
cmp
not
jmp
aam
cmp
jl
sbb
inc
inc
pusha
inc
sbb
loopne
or
out
ins
jle
cs
dec
jne
dec
add
add
hlt
lea
data16
or
mov
or
pop
aaa
add
mov
or
shl
push
or
dec
or
sar
dec
lea
into
clc
dec
stos
ror
inc
xor
inc
mov
pop
in
xchg
les
enter
popa
add
inc
pushf
dec
inc
mov
ins
lods
jne
or
push
mov
jmp
push
cs
call
jmp
adc
int3
add
(bad)
mov
xor
push
or
fcom
shl
ss
mov
push
mov
pop
add
dec
mov
js
mov
adc
scas
mov
in
(bad)
ret
cmp
cwde
fwait
aas
lahf
dec
cmp
and
or
test
in
lock
push
das
test
adc
mov
rcl
or
jmp
mov
sbb
(bad)
sub
retf
push
add
push
or
inc
ret
sub
add
mov
or
or
sub
jmp
mov
(bad)
sub
cmps
imul
inc
push
add
(bad)
push
or
dec
push
push
data16
adc
ins
and
push
dec
or
and
sub
ins
in
or
aaa
mov
ret
pop
add
fcom
xor
mov
add
aas
jl
les
js
jbe
push
test
je
add
jmp
and
add
cld
add
(bad)
jl
mov
dec
inc
sbb
ja
mov
cmp
in
fdiv
punpckhdq
inc
xchg
pop
xlat
lds
push
adc
mov
mov
xchg
push
and
fs
inc
sahf
ret
mov
inc
pushf
pop
clc
clc
xchg
or
imul
nop
or
iret
jg
add
imul
lahf
ds
cmp
dec
mov
mov
pusha
(bad)
cmps
push
imul
mov
inc
push
cld
jg
pop
mov
cmp
dec
mov
xchg
cmps
imul
in
hlt
int3
outs
jl
sbb
mov
cmp
loopne
cmp
lock
loopne
jne
xor
dec
rcr
(bad)
mov
and
loopne
je
xchg
int3
lahf
push
adc
fst
add
pop
mov
in
sahf
loop
fdivr
or
xor
mov
xchg
fsub
(bad)
mov
mov
or
mov
xor
lods
data16
push
xor
or
lods
cmps
mov
mov
cmp
pop
(bad)
and
cmp
add
push
cwde
test
cmp
dec
sbb
rcr
pop
sub
arpl
push
jne
mov
int3
and
sub
or
push
mov
xlat
call
cmps
push
push
cmp
mov
push
sahf
(bad)
inc
fist
out
pop
sub
cmps
pop
sbb
sbb
add
sub
xor
cmp
and
pusha
adc
das
aad
mov
nop
test
inc
xor
inc
push
sbb
aad
cli
add
mov
mov
inc
lods
fucom
imul
movs
retf
and
call
(bad)
adc
clc
add
push
adc
in
adc
pop
add
sub
cmps
dec
jb
jne
jmp
cmps
retf
cmp
push
xchg
in
popa
loope
fcom
test
dec
hlt
xor
mov
inc
aad
arpl
dec
adc
pop
sub
mov
or
mov
adc
xor
add
clc
inc
lea
scas
jb
test
mov
ret
fild
and
repnz
inc
push
adc
push
bound
push
push
dec
push
or
sub
add
or
pop
jb
fild
out
inc
dec
adc
cmps
pop
ret
(bad)
(bad)
xchg
push
loop
pop
rcr
push
adc
mov
or
push
ret
out
push
pop
dec
add
push
arpl
pop
ins
nop
pop
or
inc
inc
out
add
or
cs
movs
shl
or
nop
pop
pop
sub
mov
ins
movs
mov
inc
fs
popa
jno
adc
fiadd
jl
dec
mov
inc
add
xor
sub
ins
sbb
push
xor
xor
mov
jge
sbb
jne
dec
dec
movs
pop
pop
jo
xor
jg
or
cmp
(bad)
imul
jl
shl
fs
mov
push
push
dec
mov
mov
sbb
enter
enter
cli
fcmovb
mov
mov
adc
xor
mov
inc
pop
loop
dec
out
pop
or
ret
scas
add
outs
outs
repnz
add
xchg
push
pop
add
push
adc
xor
push
ror
or
push
xchg
imul
in
sbb
out
iret
gs
ins
pop
inc
pop
pop
mov
inc
push
rol
fisttp
mov
clc
push
xor
adc
data16
push
dec
aaa
mov
cmps
test
dec
jo
loopne
push
jmp
pop
jmp
scas
pop
or
pop
arpl
in
int3
push
dec
add
imul
(bad)
pop
push
loope
push
fimul
inc
mov
call
adc
inc
dec
dec
fcomip
mov
les
cdq
or
pop
ja
adc
mov
pop
mov
sub
fs
dec
aam
les
or
ja
hlt
je
mov
inc
or
inc
or
xor
adc
push
in
cmps
mov
jb
lahf
jle
or
or
xchg
adc
lock
and
jp
cdq
and
das
loopne
jo
xor
loope
aaa
test
xchg
ret
movs
and
cmp
sbb
or
and
dec
xor
sub
je
retf
and
mov
cli
adc
mov
push
or
loopne
push
jle
ret
mov
adc
pop
push
add
push
mov
sub
data16
inc
lods
les
(bad)
mov
sbb
repnz
out
in
jne
sub
xchg
aaa
enter
ret
mov
add
aas
fcmovb
or
js
mov
aad
cmp
aam
add
sub
dec
mov
and
shl
pop
xlat
adc
nop
adc
or
dec
push
ja
mov
or
es
ror
or
fbstp
mov
sti
xor
mov
sub
add
inc
lea
cli
sar
or
or
push
jmp
sbb
jb
dec
mov
pop
movs
dec
fsubr
push
movs
add
mov
js
adc
fxch
int
int3
ds
hlt
add
xchg
cmp
cli
stos
add
lea
add
mov
je
scas
cmp
add
xor
or
(bad)
ror
mov
xchg
loop
jmp
or
clc
xlat
jno
add
mov
repnz
sub
cmp
inc
pop
push
adc
imul
in
sbb
inc
mov
dec
bound
cmps
adc
les
xchg
test
cmp
dec
or
inc
xor
loopne
ret
test
xchg
cmp
fisttp
and
je
loope
mov
addr16
rcl
lock
or
mov
in
outs
inc
sbb
fisttp
scas
pop
imul
jg
dec
aaa
in
cwde
int3
xchg
fsubr
add
xchg
cmps
mov
mov
popf
cmps
inc
fwait
aad
mov
pushf
aam
sbb
add
scas
mov
mov
push
mov
rol
cmps
fucomp
inc
mov
mov
adc
mov
jnp
lea
add
and
sbb
push
shl
dec
repnz
nop
movs
mov
loopne
ins
movs
xchg
pop
repnz
mov
cdq
sbb
xor
fmul
ja
xor
adc
std
loopne
loopne
pushf
sbb
mov
pushf
dec
call
push
(bad)
sub
adc
push
xor
outs
sub
sub
popa
test
dec
pop
shr
inc
jmp
adc
popf
sbb
test
scas
xchg
mov
call
outs
mov
sub
mov
(bad)
xor
mov
xor
or
push
scas
not
inc
pop
adc
xor
loopne
lods
cs
loope
push
add
pop
adc
jae
ror
jns
fcom
sub
jecxz
xor
mov
push
out
ins
lock
ret
dec
(bad)
shl
pop
lds
dec
into
test
sbb
or
stos
mov
mov
rol
push
cwde
mov
inc
loopne
pushf
cld
or
lods
adc
inc
addr16
push
in
scas
lock
leave
aam
pop
or
movs
push
cld
pop
test
inc
inc
cmp
mov
or
or
add
push
cmps
bound
mov
sub
fcomp
lock
imul
cvtps2pi
push
out
scas
imul
hlt
js
cwde
(bad)
shl
popa
popa
and
mov
sub
or
fdivr
pusha
movs
pop
sidtd
mov
cmp
je
add
sbb
mov
or
adc
fiadd
cmp
pop
test
(bad)
push
ror
test
sbb
test
pop
jmp
adc
mov
dec
jne
mov
imul
popa
(bad)
mov
xchg
idiv
sbb
inc
adc
in
adc
xchg
ret
cwde
and
mov
or
jb
and
dec
add
mov
push
or
and
icebp
dec
pop
jmp
jno
push
dec
add
movs
popa
jmp
mov
pop
test
pop
pop
imul
js
cmp
lock
aad
mov
test
dec
clc
or
or
sbb
xor
add
pop
pop
test
pop
jecxz
lds
pop
or
fdivr
jmp
outs
mov
dec
cld
je
add
addr16
loop
add
xor
pop
in
clc
inc
ret
sbb
xchg
or
mov
sbb
inc
adc
and
sbb
mov
mov
mov
fsub
push
pop
imul
fdivr
movzx
push
dec
sub
rol
adc
jb
push
cmp
fcmovbe
push
adc
push
jecxz
cmp
fcom
push
dec
dec
sbb
sbb
add
cs
adc
adc
xor
lods
and
push
fwait
mov
retf
sub
sub
loope
mov
xchg
jle
jno
or
call
add
push
sub
dec
inc
or
inc
leave
mov
mov
and
xor
and
adc
pusha
or
mov
or
sbb
mov
add
icebp
adc
mov
jmp
jmp
dec
mov
add
loopne
shl
push
mov
sbb
(bad)
retf
lds
jmp
adc
je
jno
movs
sbb
or
xor
(bad)
xor
pop
daa
in
and
dec
push
test
sbb
bound
imul
rcr
jne
mov
arpl
das
or
push
enter
pop
pop
xor
mov
xor
or
sub
dec
or
daa
jle
adc
inc
test
aaa
idiv
or
test
add
or
add
loopne
stos
movs
or
mov
sbb
out
ds
push
sub
cld
add
and
fiadd
or
add
pop
mov
pop
inc
mov
and
push
jne
stos
pop
sbb
cli
mov
xor
and
cmp
add
add
mov
pop
addr16
gs
fbstp
rcl
inc
cmp
mov
mov
pop
mov
test
sbb
orpd
pop
repz
dec
adc
ja
jae
ret
sbb
test
shr
sbb
(bad)
stos
test
mov
push
lahf
xor
fsub
sbb
push
cmps
push
imul
sub
(bad)
js
mov
lahf
or
arpl
push
and
repnz
jmp
sbb
sub
cli
inc
and
push
and
scas
push
jmp
sbb
xor
jge
adc
inc
dec
mov
dec
or
fistp
rcl
inc
cmp
xor
sbb
pop
loope
cmp
test
adc
daa
ficom
or
adc
inc
push
sub
jmp
mov
pop
ins
dec
or
fcomp
inc
mov
adc
adc
loopne
and
xchg
or
jo
es
sahf
ins
test
jmp
lahf
or
lods
fwait
or
lds
call
dec
and
retf
sub
(bad)
push
mov
and
mov
mov
gs
add
jns
test
sub
aam
push
subps
enter
fmulp
outs
js
lods
adc
inc
adc
add
fwait
jp
mov
jo
add
retf
sbb
mov
mov
add
xchg
jo
stos
je
sbb
ja
dec
push
xor
xor
clc
loope
push
sub
sti
jp
popa
test
pop
push
mov
inc
xchg
test
rcr
cmp
mov
movs
or
lock
and
mov
sub
pop
aam
cld
and
jae
mov
fisubr
fild
das
gs
or
add
dec
lods
lahf
lds
pop
in
or
lods
adc
dec
mov
dec
sahf
mov
int3
xor
and
les
loope
cmp
enter
or
sahf
or
push
sub
test
btc
mov
pushf
xchg
sub
fbld
popa
jo
push
push
call
lock
add
jnp
adc
mov
jl
jne
mov
lahf
push
loopne
in
(bad)
cdq
sbb
sahf
push
in
nop
pop
cmp
imul
cmp
sahf
pop
(bad)
repnz
cmps
inc
jo
in
push
and
mov
add
add
xchg
add
push
into
je
dec
adc
mov
xor
sub
popa
xchg
and
lock
pop
punpckldq
fsubp
dec
inc
test
hlt
dec
(bad)
jle
aad
pusha
int3
bound
je
cli
mov
xor
cmc
mov
(bad)
sbb
sub
and
ins
or
mov
and
addr16
repnz
mov
mov
es
pop
pop
xor
hlt
aam
ror
sub
push
push
mov
aam
adc
add
mov
xchg
mov
rcl
jg
scas
dec
mov
mov
jl
jne
loope
in
jo
push
push
cmp
inc
fs
or
and
push
xchg
jle
movs
shl
jnp
mov
fmul
jle
hlt
mov
loopne
jbe
jle
push
iret
ss
sbb
je
adc
dec
and
pop
in
int3
mov
test
and
mov
fsub
mov
add
fmul
sub
and
call
sbb
push
adc
repz
rcr
mov
ds
xor
cmp
jno
ret
stos
or
pop
sahf
jbe
dec
sub
sahf
push
imul
or
rol
fs
inc
or
cmp
out
mov
ret
js
ret
or
add
jle
sub
adc
push
jmp
jmp
pop
jge
sbb
nop
inc
xchg
das
push
add
and
rol
data16
pop
aaa
lods
iret
or
daa
les
fadd
scas
cmps
test
rcr
jp
and
inc
xor
fadd
push
inc
pop
mov
and
in
dec
add
cmp
aam
sbb
push
add
sub
int3
outs
adc
js
cli
mov
push
mov
push
mov
mov
lea
dec
adc
dec
cmp
jne
or
bound
js
mov
lds
or
mov
sbb
sbb
paddb
add
and
inc
adc
loop
pop
bound
sbb
inc
mov
jmp
push
sbb
pop
inc
rol
movs
les
fs
je
sbb
mov
or
or
and
imul
pop
cmps
imul
inc
xor
mov
push
js
add
add
ss
sahf
add
xor
xlat
mov
ins
mov
adc
and
lock
mov
popf
push
jns
loopne
mov
stc
jge
and
mov
push
cmp
mov
(bad)
stos
je
pop
add
inc
lock
or
push
xchg
out
pop
cld
mov
lea
mov
xlat
push
add
push
add
mov
sbb
lods
out
push
repnz
add
jae
mov
xor
dec
fmul
loope
mov
ret
mov
push
xchg
jbe
dec
inc
sbb
inc
xor
jmp
push
js
shl
adc
imul
mov
scas
retf
or
add
mov
push
cld
xor
push
push
mov
cmc
xchg
aam
pop
test
or
mov
sbb
dec
ficom
adc
push
dec
pop
jmp
mov
dec
adc
lods
jbe
outs
es
mov
jge
cmp
pop
sbb
pop
xor
sbb
adc
enter
imul
pop
pop
mul
sbb
mov
ror
das
cmp
jmp
sar
xor
push
add
in
sar
push
adc
xlat
cmp
push
ffree
xchg
lahf
ret
or
push
sbb
jbe
cmp
xor
mov
jbe
test
je
ss
jns
and
sub
inc
fist
shl
arpl
add
inc
sbb
sub
sbb
push
ins
pop
mov
rcr
movs
shl
add
ss
jae
aas
sub
jmp
jle
inc
xlat
nop
in
in
jmp
rcl
sbb
add
int3
cmp
or
mul
test
sbb
push
(bad)
cmp
push
adc
dec
es
(bad)
dec
leave
or
inc
adc
pop
inc
mov
ins
iret
push
add
sbb
push
popa
retf
movs
sbb
push
ja
daa
bound
adc
xor
pop
push
sbb
inc
test
arpl
loopne
or
jmp
cmp
pop
cmp
adc
jne
dec
js
xchg
inc
push
cmp
inc
leave
cmp
pop
call
jns
arpl
arpl
inc
and
out
add
test
jae
pop
sqrtps
pop
into
push
popf
ds
sub
mov
das
cld
add
and
cmp
adc
movzx
mov
dec
add
add
mov
loope
in
dec
lods
inc
lea
push
test
in
cdq
xchg
stc
popa
adc
pop
dec
mov
adc
out
cmp
push
xchg
loopne
pop
push
neg
xor
adc
test
pop
cld
rol
xor
push
test
mov
(bad)
pop
sub
cld
and
inc
cld
sbb
ror
mov
mov
lods
lahf
jne
xchg
pmullw
and
movs
dec
add
cmp
adc
les
into
dec
add
or
inc
add
cmp
or
jo
sub
and
fcomip
mov
xchg
in
nop
cmps
sub
enter
xchg
mov
mov
cmp
sub
add
inc
xchg
bound
das
jmp
sbb
mov
pop
call
push
mov
dec
stos
mov
cs
push
mov
mov
lods
lea
nop
and
mov
mov
call
add
dec
ja
jge
mov
mov
add
pop
and
push
and
xchg
into
cmp
pop
cmps
mov
jne
dec
add
mul
mov
sub
cmp
jle
iret
je
jl
leave
sub
jne
mov
and
jge
fadd
jb
mov
adc
jg
sub
sub
bound
dec
dec
mov
(bad)
rcr
aas
nop
dec
rcl
adc
push
popa
je
adc
std
pop
clc
sub
or
aad
pop
lods
inc
test
push
pusha
leave
push
out
jge
dec
jne
jge
inc
and
jne
(bad)
out
inc
ror
loop
jne
inc
and
shr
and
and
jns
movs
mov
jle
mov
pop
cwde
inc
and
jge
jl
and
xchg
mov
mov
mov
inc
inc
xor
mov
or
(bad)
or
aaa
mov
into
sbb
xchg
test
in
ins
popa
je
jo
test
and
loopne
or
xor
outs
popa
adc
jnp
push
call
div
and
inc
and
sbb
inc
or
xchg
jbe
imul
cmp
inc
sti
inc
je
jne
inc
cmp
ret
mov
and
hlt
xchg
add
das
outs
hlt
ror
imul
push
nop
(bad)
mov
jbe
js
or
icebp
aad
fsubr
dec
sub
ret
call
out
sar
or
punpckhbw
push
inc
mov
ins
push
push
jns
test
jg
push
rcl
imul
pop
nop
popa
adc
mov
cmp
mov
adc
dec
inc
or
popa
fwait
push
mov
push
movs
jnp
push
pusha
adc
cmp
dec
enter
sbb
xchg
inc
test
retf
pop
dec
in
(bad)
ror
adc
loopne
adc
pop
cld
cmp
movs
xor
push
pop
inc
or
in
push
je
mov
fwait
test
sub
mov
cs
ins
mov
fild
adc
test
mov
mov
inc
loope
and
mov
lods
mov
lock
jmp
int3
mov
cmp
and
shl
scas
(bad)
bswap
leave
leave
leave
jo
push
retf
pusha
push
mov
cmp
pop
andps
cmp
cmp
inc
cmp
cmp
cmp
xor
push
sub
and
dec
out
xchg
inc
nop
sub
js
xchg
iret
nop
mov
fild
sub
adc
mov
fidivr
jne
push
mov
lock
fistp
aam
ret
mov
fwait
xor
in
sbb
mov
sub
mov
mov
lods
xor
mov
jmp
lock
sub
je
mov
adc
repz
and
fsub
outs
jb
in
sbb
inc
ja
mov
and
pop
cdq
or
jbe
push
jmp
cld
(bad)
sub
jb
je
fimul
and
stc
jmp
loope
add
mov
xor
push
push
test
adc
sbb
mov
dec
adc
xchg
(bad)
xchg
aaa
jge
sbb
stc
and
pop
push
cmps
cmc
loopne
sbb
cmp
call
je
scas
jle
or
jg
adc
jle
push
pop
inc
add
add
lock
add
daa
pop
ret
imul
jb
ins
mov
cmovg
adc
test
jne
and
js
cwde
add
sub
cwde
ss
or
jmp
push
mov
pop
adc
sbb
jmp
and
ja
push
lock
mov
addr16
adc
fsub
sbb
scas
mov
add
test
inc
pop
push
fst
sub
daa
and
cmp
pop
or
mov
and
jle
or
and
inc
inc
or
add
sar
or
adc
shl
and
pop
daa
dec
jge
fsubr
out
pop
dec
and
cmp
arpl
push
cmp
(bad)
jmp
mov
into
inc
test
pop
or
mov
adc
push
adc
imul
jle
lea
rcr
inc
push
in
dec
jb
push
adc
pushf
jmp
fs
cmove
in
push
lock
dec
inc
pop
scas
ret
xchg
xchg
xchg
dec
test
test
jb
repnz
xchg
push
adc
mov
pusha
scas
lods
pushf
cwde
nop
and
dec
push
add
out
call
mov
xchg
cdq
mov
pop
fucomip
cmp
push
push
push
add
les
test
xchg
inc
call
sbb
push
adc
pusha
fdivr
add
test
mov
movs
pusha
mov
and
dec
mov
push
sub
inc
repnz
add
or
sub
loop
js
adc
sbb
inc
sub
and
inc
outs
jne
movs
jg
fwait
cmp
popa
jns
jae
push
jle
mov
mov
in
jl
add
clc
xchg
pushf
ds
iret
in
mov
xchg
retf
push
test
lods
int3
xchg
sub
movs
mov
push
push
inc
push
and
pop
cmp
(bad)
mul
ja
jns
mov
call
push
or
jg
mov
enter
pop
mov
jl
jg
add
cdq
in
cmp
outs
sbb
leave
add
shl
xor
popa
aam
mov
mov
hlt
test
cmp
jne
add
test
and
sar
loope
add
dec
add
pop
inc
scas
add
or
cmp
push
popf
xor
mov
pusha
movs
pop
or
cmps
push
je
pushf
push
cdq
or
add
dec
add
push
xor
jb
in
int3
pusha
pusha
sbb
fadd
push
jns
enter
loopne
xchg
out
nop
popa
loopne
sahf
test
and
dec
gs
add
mov
cmp
cmp
in
gs
add
cmp
js
dec
adc
arpl
arpl
adc
ja
imul
jp
inc
xchg
push
inc
bound
call
dec
sbb
cmp
enter
push
das
push
or
test
lods
pop
sti
fcomp
pop
pop
push
push
cmps
push
ret
das
lock
repz
outs
jae
ins
mov
pop
daa
jg
cdq
in
mov
clc
xchg
add
hlt
call
outs
inc
imul
add
cmp
arpl
inc
inc
(bad)
outs
or
imul
inc
push
daa
and
sbb
inc
fdiv
es
ja
adc
push
and
cmps
mov
mov
add
pop
dec
mov
adc
push
jb
pop
sbb
fs
adc
cmp
add
add
mov
xchg
popa
sub
push
lds
mov
push
adc
popa
jae
jb
lds
sub
add
add
mov
sbb
add
push
dec
add
jmp
aas
aam
inc
push
mov
neg
int3
xor
xchg
sbb
inc
test
inc
aas
mov
mov
pop
mov
xchg
mov
ins
in
jg
and
adc
stos
xor
sbb
pop
ss
iret
aaa
fwait
int
and
and
hlt
mov
jge
pushaw
jns
mov
stc
mov
data16
mov
fs
ds
jge
enter
add
mov
les
clc
xchg
fsub
mov
(bad)
lods
jecxz
mov
adc
mov
sbb
call
mov
mov
mov
add
sub
sub
in
outs
mov
call
fmul
xor
add
pop
mov
jns
mov
retf
inc
imul
push
adc
sub
ret
inc
pop
test
out
inc
or
fs
stos
ins
jae
aam
in
mov
add
jo
inc
or
push
mov
outs
lock
mov
lahf
shl
dec
or
lock
push
aaa
mov
pop
rcl
cs
(bad)
je
or
fisttp
loopne
je
scas
xchg
(bad)
inc
pop
xchg
aas
add
xchg
test
cld
mov
cmp
ins
sbb
nop
lods
retf
inc
pop
or
xchg
mov
fs
mov
inc
add
or
push
pop
ror
push
sbb
cli
rcr
sub
mov
mov
jo
mov
outs
outs
(bad)
push
or
xchg
or
addr16
enter
push
aam
fiadd
dec
add
pop
dec
dec
out
sbb
pop
ret
repz
dec
pop
and
and
mov
popf
mov
mov
adc
or
test
push
data16
out
mov
add
lock
hlt
pop
lea
out
mov
cmc
int
fcmove
adc
out
shr
push
dec
ins
gs
jmp
cmp
pop
pop
inc
mov
mov
in
inc
(bad)
xor
cs
inc
sbb
test
dec
or
in
add
sub
sar
sbb
dec
popa
js
outs
addr16
(bad)
cld
outs
leave
push
push
popa
jb
cmp
push
dec
mov
jge
mov
sub
test
fs
sbb
(bad)
dec
and
dec
sahf
into
and
push
add
lea
push
pop
xor
dec
mov
inc
repz
mov
or
push
scas
jne
cmp
cwde
test
mov
adc
inc
cmc
add
and
and
jl
mov
scas
pop
shr
jbe
and
xor
fiadd
xor
pop
and
scas
out
retf
cmp
lock
jle
mov
push
imul
xor
mov
fnstcw
pop
or
lods
inc
add
loope
ins
popf
pop
pusha
mov
add
enter
mov
inc
or
or
pop
push
pop
sub
inc
inc
retf
loope
pusha
aaa
sub
push
dec
sub
mov
ins
dec
aam
adc
aaa
test
sbb
cmp
push
dec
xor
sub
cs
xor
inc
push
imul
or
fs
arpl
cld
jmp
sub
cwde
rcr
inc
das
in
int3
add
mov
in
lahf
push
js
je
loopne
mov
mov
ins
cmp
pop
cmp
inc
mov
test
add
push
mov
xchg
cmps
pop
enter
shl
das
in
loope
jo
jle
xor
xor
adc
inc
cwde
or
in
int3
pop
repnz
add
pop
jns
push
and
hlt
hlt
mov
or
inc
or
pop
push
pop
test
int
or
add
ins
bound
mov
adc
ins
(bad)
lock
jbe
adc
cli
push
sub
cpuid
ret
int3
jmp
and
js
das
das
xchg
shl
rcl
or
or
loop
mov
mov
inc
(bad)
push
mov
pop
push
nop
rcl
mov
fdivp
xchg
call
int3
push
loopne
int
movs
(bad)
rol
cmp
lds
sub
scas
pop
sub
adc
movs
stos
addr16
mov
lods
movs
test
or
lods
ret
jmp
jbe
dec
or
cmp
xor
test
jp
mov
jl
dec
xchg
sbb
dec
pop
add
fisttp
xor
ror
mov
test
iret
inc
or
add
ins
cdq
xor
clc
scas
push
int
pop
ds
pop
push
loop
outs
jae
adc
xchg
or
adc
adc
or
lea
cmps
or
je
into
push
movs
adc
data16
ins
repnz
pop
xchg
fist
sbb
xor
xchg
clc
pop
into
push
push
das
imul
test
out
jo
push
jb
loop
into
xor
adc
pop
cmp
call
dec
add
in
xor
push
pop
push
leave
add
and
and
and
and
inc
inc
nop
iret
and
sbb
inc
movs
es
jne
in
mov
int3
mov
lock
pushf
jge
leave
push
jb
aaa
sub
test
sub
pop
xor
int
sbb
dec
and
xor
push
xor
and
xor
jb
and
push
loop
enter
mov
mov
mov
test
jmp
sub
cmps
mov
or
xchg
les
inc
xor
inc
cmp
or
or
pop
jo
cmp
loopne
jmp
mov
test
js
dec
cmps
mov
rep
add
iret
dec
iret
lds
movs
pop
mov
repnz
enter
mov
mov
pop
jns
mov
and
inc
inc
mov
cld
mov
test
mov
mov
ins
push
and
test
xor
sbb
push
or
movs
shr
test
outs
adc
sbb
pushf
pushf
mov
mov
mov
jb
enter
enter
add
fmul
mov
enter
daa
fnstenv
pusha
and
in
retf
inc
(bad)
or
imul
dec
and
add
inc
add
cmp
int
adc
xchg
(bad)
sar
or
add
ror
rcr
stos
inc
iret
lds
fwait
movs
and
ja
push
inc
xor
mov
mov
ror
and
inc
enter
dec
jge
js
inc
and
add
mov
cmp
add
pop
pop
mov
push
xchg
and
and
sar
adc
(bad)
adc
in
das
das
into
xchg
mov
cld
retf
dec
loop
dec
or
push
mov
add
and
sbb
or
inc
scas
lods
adc
push
or
lock
lods
jecxz
fcom
imul
and
pop
popa
push
imul
add
ins
stos
add
adc
or
inc
jmp
mov
xchg
push
jl
or
sbb
sub
lods
xor
jle
jno
mov
lods
dec
shl
mov
sbb
mov
movs
in
xor
mov
or
mov
out
mov
loopne
add
and
adc
gs
or
adc
rol
or
std
les
inc
mov
push
sbb
xchg
jae
mov
mov
idiv
js
or
dec
sar
test
mov
add
xchg
mov
(bad)
cmp
sbb
xor
inc
mov
mov
push
xchg
popa
mov
adc
adc
pop
cmp
cld
inc
je
mov
push
int
jnp
rcr
mov
nop
cmc
addr16
mov
cmp
mov
test
cli
in
sub
cli
cmp
inc
mov
retf
scas
or
sahf
mov
nop
imul
or
int
les
call
hlt
outs
jle
mov
xor
xchg
shl
jecxz
add
scas
inc
sub
inc
mul
or
ror
les
jl
cmc
in
fadd
inc
dec
std
sbb
in
xor
inc
pop
fiadd
or
shl
ins
add
add
cli
lods
adc
sbb
pop
sbb
fimul
dec
jge
jns
xchg
imul
xchg
je
lahf
add
or
sub
add
or
fwait
mov
mov
cmp
mov
ja
cld
push
cmp
adc
xlat
sub
add
imul
or
cmp
push
and
push
pop
(bad)
out
add
adc
ret
sbb
or
ss
loop
add
or
jne
(bad)
or
and
xchg
(bad)
std
lock
(bad)
int
inc
or
sub
cmp
inc
push
dec
or
cmps
push
push
pushf
pop
(bad)
push
push
ret
nop
sbb
cld
or
aaa
repnz
and
mov
add
inc
or
div
push
retf
les
neg
loopne
push
cmps
aas
or
scas
test
or
mov
cmp
out
dec
shl
fs
outs
mov
ja
adc
sbb
push
dec
(bad)
mov
je
lods
js
ror
dec
out
cmp
jmp
fild
scas
adc
sub
test
cld
xor
rcl
xchg
mov
pushf
test
cmp
mov
pop
sub
mov
out
cmc
je
sub
call
jle
push
pop
xchg
push
and
push
int3
aam
nop
rcr
or
jmp
les
mov
les
scas
dec
and
movs
pop
sub
(bad)
xor
cwde
or
xor
or
pop
adc
xor
sbb
push
jmp
dec
je
add
and
(bad)
xchg
in
daa
add
dec
push
mov
jl
lock
imul
sub
ficom
cmp
jge
neg
out
mov
sub
ficom
adc
add
fld
mov
test
mov
or
loope
xchg
mov
inc
adc
enter
ret
in
sub
sbb
inc
and
sbb
lods
pop
outs
xor
cwde
imul
mov
inc
cmp
pop
mov
mov
sar
dec
push
popf
or
pop
sbb
in
jbe
and
stos
call
fs
add
mov
loopne
scas
repnz
or
add
inc
or
or
inc
add
retf
push
lods
xor
loopne
xor
mov
lock
sahf
addr16
clc
or
dec
push
xchg
inc
add
or
push
mov
pop
out
xchg
ins
mov
jmp
fdivr
or
fs
loop
xchg
xor
aas
and
or
cmp
and
aaa
sbb
int
xor
mov
sar
cmp
mov
mov
add
xor
lods
push
out
leave
dec
mov
rol
int3
jo
jo
inc
or
inc
inc
cs
cdq
pop
xor
mov
push
inc
je
sub
std
arpl
call
inc
cli
adc
pop
cmp
fscale
xchg
inc
pop
jo
fcom
push
inc
or
and
or
or
ds
jmp
sti
dec
mov
add
dec
cmp
aaa
add
inc
hlt
jne
sbb
shl
mov
or
push
fs
adc
test
xlat
push
xor
test
push
sbb
jge
xlat
repz
xor
sub
movs
or
rol
push
push
imul
in
hlt
dec
fadd
repnz
xor
test
cmp
add
je
sbb
push
adc
xor
mov
out
push
or
pop
in
imul
aam
jo
movzx
sbb
push
xchg
mov
neg
pop
mov
jnp
cs
push
mov
jne
mov
fwait
stc
(bad)
sbb
mov
pop
mov
dec
jns
add
cmp
cdq
push
pop
cmp
push
mov
sbb
jge
iret
and
gs
dec
mov
pop
cmp
xchg
shl
or
sub
sub
mov
std
fwait
mov
push
clc
jmp
sub
add
push
pushf
adc
sbb
sub
adc
loope
cmp
cmp
cmp
aas
sbb
mov
lea
jns
ss
jns
add
mov
out
mov
test
lods
and
adc
test
mov
out
sbb
fimul
ins
imul
or
dec
cmp
iret
and
ja
(bad)
in
xor
pop
fcmovbe
repnz
mov
inc
adc
retf
inc
pop
jo
imul
pop
test
lods
jle
xchg
dec
push
pop
sbb
mov
xchg
dec
outs
jg
shl
rcr
jl
imul
je
and
jle
xor
or
mov
push
fild
adc
adc
std
adc
aad
mov
sbb
sbb
mov
dec
stos
mov
inc
fsubr
mov
push
inc
js
xor
cmps
jnp
add
loop
out
mov
sub
mov
xchg
rcr
das
inc
pop
ja
add
push
jecxz
clc
into
mov
push
cmp
sar
cmp
jle
sub
popa
pop
daa
mov
ret
inc
jecxz
xlat
xchg
es
adc
les
imul
mov
cwde
mov
or
sbb
rcl
cmp
sbb
or
or
xchg
xchg
cmp
inc
imul
popf
clc
out
sbb
out
mov
cld
out
push
push
xchg
repnz
pop
lea
cmp
pushf
mov
push
test
(bad)
push
retf
imul
enter
adc
xlat
xchg
push
leave
sbb
loopne
adc
fistp
or
dec
push
mov
push
pop
leave
pop
push
jmp
ficomp
popa
es
xor
sbb
mov
inc
inc
inc
dec
and
and
adc
retf
push
enter
scas
retf
dec
xchg
sysexit
mov
inc
lods
dec
daa
(bad)
mov
mov
pop
and
mov
mov
inc
sahf
sub
retf
inc
frstor
dec
enter
call
daa
jecxz
int3
jp
pop
(bad)
cdq
in
in
int3
je
jns
mov
mov
hlt
push
mov
leave
pusha
sbb
ret
sbb
jmp
sub
or
(bad)
mov
add
xchg
or
dec
lods
leave
or
addr16
sub
xor
mov
xchg
pop
test
add
in
pop
mov
sub
jnp
or
mov
cmp
cdq
idiv
push
mov
xchg
mov
cmp
mov
bound
sub
sbb
xchg
mov
ja
add
dec
lahf
push
movs
in
das
mov
mov
mov
pop
pop
imul
sahf
jmp
xchg
add
es
add
pusha
loop
call
pop
mov
mov
push
mov
sub
mov
mov
dec
cmp
pop
scas
or
add
push
xor
cmp
add
jnp
or
pushw
add
jg
cmp
sbb
and
cmp
jmp
lods
jne
mov
push
mov
fcomi
(bad)
in
mov
mov
add
and
jb
daa
mov
lock
lock
pop
inc
xlat
mov
or
inc
loope
neg
inc
fnstenv
fsub
enter
lods
or
fimul
or
call
std
jle
sub
int
(bad)
fcomp
movs
lea
inc
pop
jg
inc
sub
adc
loopne
(bad)
sub
pop
mov
cmp
add
or
and
pop
xor
(bad)
in
movs
inc
sbb
and
add
cmp
xor
cmp
xchg
xchg
mov
sbb
enter
add
xchg
out
mov
test
sub
and
jg
or
cld
mov
rol
dec
dec
push
push
fs
ret
scas
jae
jnp
imul
jmp
add
stc
je
lea
jbe
lods
add
or
out
cld
sar
adc
in
adc
rcr
pop
sub
sbb
add
or
cmp
or
loopne
fdiv
mov
cmc
in
xor
icebp
(bad)
dec
and
inc
xchg
sub
xchg
push
xchg
(bad)
jne
mov
add
sub
setnp
imul
mov
mov
daa
or
inc
mov
in
(bad)
ss
inc
or
outs
cwde
(bad)
mov
and
lods
and
cmps
xor
cs
je
and
jne
mov
rcr
add
push
dec
dec
ss
pop
or
jmp
sub
adc
inc
call
xchg
jo
add
(bad)
mov
push
mov
inc
pop
inc
test
sbb
fwait
inc
test
or
add
mov
dec
sbb
cdq
(bad)
mov
jbe
(bad)
mov
fsub
sub
xchg
xor
push
in
fadd
push
lods
mov
pop
pop
inc
ss
retf
out
pusha
push
cmp
push
idiv
or
fmul
jmp
shl
inc
and
mov
movs
aam
lock
or
sub
and
add
sbb
lods
adc
pop
pop
(bad)
mov
xchg
out
call
jnp
ror
ins
call
add
inc
dec
fld
cmp
or
popf
add
les
or
pop
pop
inc
add
push
mov
sub
sub
xor
add
mov
add
mov
mov
fldenv
cmp
or
mov
loope
add
pop
mov
and
jmp
in
xchg
cli
xor
(bad)
mov
sbb
lea
sbb
sbb
cdq
call
xchg
push
(bad)
scas
dec
lahf
or
clc
jge
inc
push
pop
fnstsw
xchg
sub
scas
and
push
sub
sub
pop
retf
movs
xor
out
push
sub
pop
xor
jmp
dec
or
rcl
call
(bad)
and
and
jb
hlt
hlt
sbb
add
hlt
hlt
and
sbb
mov
dec
hlt
les
mov
cmp
cwde
add
sbb
add
adc
cmp
(bad)
cmp
or
inc
fdivr
and
or
jge
adc
cmp
test
mov
daa
push
mov
mov
or
and
lods
and
imul
or
divps
fistp
push
(bad)
inc
test
addr16
inc
add
inc
push
leave
aas
and
leave
inc
add
enter
cmp
or
shl
sub
pop
and
les
add
test
mov
add
mov
(bad)
iret
xchg
add
inc
xchg
dec
push
enter
add
cmc
mov
out
in
dec
repnz
sbb
ficomp
inc
add
push
mov
icebp
sti
add
jmp
add
push
pop
mov
dec
inc
icebp
add
sub
or
or
xchg
jno
jecxz
outs
je
sub
or
cs
loopne
dec
push
jl
jp
ja
lahf
and
invd
fild
xor
ss
sti
push
sbb
add
xor
push
inc
add
mov
stos
rcr
test
cmp
into
pushf
out
mov
sahf
aaa
and
push
inc
push
fist
fucom
inc
ror
nop
in
pop
adc
in
add
fucomi
add
ror
adc
xor
adc
es
push
je
lods
fs
sbb
daa
xor
out
dec
leave
in
dec
std
push
dec
mov
(bad)
or
push
inc
comiss
ret
inc
sub
fld
enter
frstor
(bad)
push
nop
prefetcht0
inc
inc
cs
push
jne
dec
ins
cmovne
pop
xchg
adc
mov
push
imul
mov
mov
dec
aam
in
fsub
pop
jns
mov
inc
adc
adc
ss
repz
adc
int
add
into
push
pop
cmp
xor
test
idiv
mov
aaa
push
dec
int3
mov
adc
xchg
popa
or
nop
and
das
xor
out
push
or
pusha
adc
shl
jp
js
adc
mov
mov
shl
addr16
and
repnz
imul
(bad)
push
add
pop
jle
cwde
or
push
xchg
mov
test
jge
arpl
cmp
xlat
xor
imul
cmp
mov
mov
sbb
mov
jae
popa
nop
clc
out
cwde
fcom
mov
call
(bad)
out
fisub
out
loop
imul
push
js
and
dec
inc
(bad)
test
inc
scas
ins
push
fadd
ficom
push
jmp
add
(bad)
jno
inc
sbb
sar
adc
add
or
add
div
dec
push
or
rcr
sbb
lea
add
stc
pushf
add
adc
sub
xchg
add
imul
popa
sub
shr
push
repnz
push
inc
jne
enter
outs
or
sbb
push
xor
test
xchg
pop
(bad)
mov
rol
out
add
sbb
jecxz
add
sahf
(bad)
data16
out
nop
int3
xchg
add
add
pop
inc
push
popf
cmps
dec
inc
jg
pop
fs
fldenv
pop
nop
int3
push
sbb
call
pop
adc
or
adc
mov
xchg
fs
loopne
and
xchg
xchg
lods
fild
mov
push
loope
inc
(bad)
or
movs
nop
ins
jg
push
int
or
adc
sub
adc
scas
(bad)
adc
sbb
lds
mov
inc
inc
loopne
mov
outs
cdq
xchg
push
or
sub
gs
inc
ret
push
es
add
stos
mov
loopne
addr16
add
inc
dec
gs
push
inc
mov
mov
in
jnp
push
adc
call
and
or
jp
xlat
add
scas
inc
loopne
mov
(bad)
pushf
in
add
sub
xor
add
adc
xor
retf
or
xor
push
imul
shl
mov
mov
and
cmps
dec
repz
in
mov
enter
gs
jmp
add
popa
retf
xor
mov
jmp
fs
call
nop
cs
daa
jge
dec
mov
retf
nop
xchg
out
mov
out
fs
fwait
movs
cmp
cdq
pop
cs
mov
xor
add
jmp
add
fst
loop
jle
inc
push
sub
and
jp
lahf
hlt
xchg
sbb
sbb
pop
ds
xor
push
in
es
adc
push
enter
or
je
add
add
push
add
add
add
or
fild
mov
mov
mov
into
and
adc
cmp
(bad)
(bad)
push
lock
out
(bad)
out
(bad)
in
(bad)
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
cmc
(bad)
(bad)
(bad)
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
mov
aam
sar
sar
sar
shl
dec
jmp
ss
and
ss
jle
push
nop
sar
and
jo
enter
sar
and
inc
sub
dec
repz
push
sub
ins
aam
out
imul
daa
push
test
fdivrp
sahf
out
cmp
ds
inc
data16
and
sbb
mov
sub
mov
sbb
push
inc
sub
sti
cmp
je
sahf
push
clc
xchg
mov
jle
lods
cwde
cmp
cmp
fdivp
into
sti
push
push
push
pop
push
sub
aam
mov
out
imul
and
clc
and
jne
int
int3
call
and
(bad)
jno
(bad)
mov
addr16
je
xor
inc
scas
nop
repnz
dec
test
mov
cmp
sbb
sbb
bnd
cmp
add
sbb
fdiv
push
add
(bad)
inc
and
lods
(bad)
push
imul
out
mov
pop
jmp
jns
jb
cmp
pusha
inc
ret
and
xor
movs
mov
pop
dec
ins
gs
jmp
arpl
lods
sub
imul
fsub
mov
xor
xor
or
or
inc
retf
in
ret
mov
sbb
sahf
sub
cmp
test
mov
loopne
push
addr16
sub
push
cld
push
or
adc
inc
mov
adc
ss
dec
inc
mov
adc
sbb
movs
inc
aaa
mov
movs
stos
(bad)
push
push
paddsb
out
pop
es
cli
dec
jbe
out
push
stc
mov
call
push
or
xchg
xchg
pop
push
inc
cwde
and
in
push
inc
jg
and
loope
sbb
mov
add
adc
dec
dec
imul
es
cmp
adc
pop
add
add
add
add
sub
mov
or
add
add
(bad)
mov
loop
or
add
mov
mov
mov
add
pop
mov
or
test
jg
loop
mov
mov
mov
mov
push
and
(bad)
call
mov
mov
mov
mov
add
push
mov
xor
cmp
mov
mov
dec
inc
dec
into
dec
sub
(bad)
(bad)
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
std
jmp
jo
inc
inc
inc
(bad)
mov
cmp
movs
xchg
cmp
pusha
loop
push
fadd
(bad)
out
sahf
cmps
push
jo
mov
cmps
stc
xor
cld
and
sub
js
sar
shr
ins
out
ss
sub
jno
lock
ds
jb
clc
mov
xchg
push
mov
sbb
inc
sbb
xor
into
out
repz
gs
aam
call
int
inc
cld
push
adc
sub
lock
jne
push
pushf
mov
pop
es
data16
mov
mov
and
xor
jge
idiv
pop
ja
js
test
sub
out
(bad)
cmps
cs
fcom
jge
inc
push
dec
int
fdivp
push
js
dec
outs
mov
and
cmp
pushf
or
cmps
jge
sti
fs
out
push
loopne
jo
or
push
push
(bad)
fsub
mov
mov
les
sar
(bad)
pop
cmp
cld
jle
sub
push
data16
ds
and
or
mov
inc
fdiv
mov
stos
cmps
push
xchg
call
fld
js
pop
push
fs
lock
sub
int3
xchg
js
push
addr16
cmp
int3
ucomiss
pop
xchg
movs
(bad)
nop
pop
pop
sub
add
mov
into
or
les
xchg
lock
fdiv
and
ficomp
hlt
xchg
push
out
pushf
and
adc
cmp
xchg
sbb
add
adc
mov
mov
in
adc
dec
pop
and
push
repnz
adc
mov
or
test
inc
pop
mov
sahf
int3
add
add
out
lods
nop
xchg
shl
jge
xchg
ret
sbb
push
fs
push
adc
and
fs
sbb
movs
les
fs
das
jp
nop
nop
jns
ja
aam
fiadd
call
sahf
out
jno
mov
movs
mov
int3
or
outs
mov
cs
ficom
mov
sub
add
ss
push
pop
mov
dec
lahf
add
sbb
or
sbb
cmps
fidiv
es
sbb
xchg
mov
dec
int3
out
ds
sbb
aas
sub
xchg
stos
xchg
push
mov
clc
pop
dec
ins
push
sbb
cwde
bound
bound
and
inc
or
lock
add
and
mov
xchg
jecxz
and
mov
push
lock
sub
push
sub
add
aad
sub
(bad)
or
pop
push
or
add
xchg
adc
push
mov
inc
je
(bad)
mov
mov
xchg
add
mov
call
je
xchg
mov
sbb
dec
or
dec
ss
pop
mov
push
shl
inc
gs
ins
or
push
xchg
daa
push
sbb
xchg
dec
push
push
inc
push
inc
outs
pop
das
cwde
daa
push
jo
daa
or
cmp
popa
clts
lods
add
mov
stc
mov
push
jo
imul
retf
(bad)
sub
rcpps
push
popa
push
mov
popa
add
add
movs
xchg
add
pusha
mov
mov
out
mov
cmps
add
icebp
(bad)
outs
daa
in
adc
mov
enter
sbb
sbb
mov
mov
jg
in
xor
aam
mov
cmp
adc
dec
add
fwait
or
or
pop
lea
popa
sar
shr
sbb
xor
dec
es
jne
mov
adc
adc
mov
cmps
es
jnp
je
mov
sbb
and
mul
and
sub
inc
enter
js
pop
jmp
loopne
stc
(bad)
inc
out
and
lahf
sub
add
or
sub
xchg
mov
or
mov
sub
imul
pop
add
neg
sar
xor
outs
xchg
xlat
cmc
add
mov
stc
ins
ins
fcomp
cmps
(bad)
imul
xor
ds
add
call
ror
and
xchg
mov
fdivrp
mov
and
jo
pop
xor
xor
mov
xchg
icebp
mov
inc
jecxz
or
or
mov
cmp
xor
cdq
mov
adc
or
xor
hlt
push
or
xor
stos
xchg
lock
popf
call
adc
cmps
imul
imul
setp
sub
scas
dec
loop
pusha
dec
pushf
push
push
push
push
clc
adc
adc
jo
xchg
movs
ret
sti
xor
fisttp
pusha
dec
arpl
fisub
push
cmp
pslld
repnz
add
je
sub
jne
mov
fbld
(bad)
rcr
mov
jmp
mov
adc
ret
stc
push
dec
sbb
movs
dec
repz
dec
adc
pop
adc
cli
xor
es
add
mov
mov
cmp
scas
adc
int3
push
cmp
aaa
and
ffreep
test
or
dec
add
rol
mov
add
hlt
(bad)
jmp
or
jmp
or
or
push
cmc
xchg
lods
or
xor
ja
xchg
push
ja
jmp
pushf
xchg
xchg
and
pop
mov
cmc
repnz
arpl
jecxz
xor
je
jmp
inc
in
adc
mov
call
pop
int
aam
ss
push
push
outs
mov
and
inc
pop
sbb
rcl
xchg
aas
inc
aad
adc
out
dec
dec
xor
xor
sbb
sub
clc
dec
jg
popa
shl
xchg
xor
push
leave
rol
xor
in
sbb
stc
jmp
sub
(bad)
jg
cwde
cmp
dec
mov
mov
add
pusha
push
lea
lea
xchg
int
xor
sbb
push
push
cld
inc
push
or
mov
popa
adc
dec
pop
neg
xor
adc
lds
es
(bad)
js
sbb
int3
iret
arpl
xor
sbb
jle
adc
cld
sub
xchg
rcl
and
clc
jge
and
jl
fimul
jle
or
jo
or
rcl
and
sahf
inc
cmp
pop
add
inc
push
push
push
xchg
inc
loope
ret
daa
loopne
adc
sub
sti
cmp
test
fcmovb
dec
mov
adc
pop
jl
loope
pop
add
jne
or
or
rol
or
sub
pop
gs
push
test
es
clc
out
jle
call
add
adc
lds
(bad)
adc
sub
pop
mov
ret
rcl
xchg
jns
test
pop
push
(bad)
test
mov
in
cmp
hlt
jbe
cmp
mov
hlt
pop
movs
call
push
fcom
(bad)
sub
add
dec
mov
dec
rcr
inc
div
mov
push
(bad)
xor
xchg
aad
push
cs
inc
outs
add
push
jo
xchg
in
movzx
enter
push
adc
and
mov
xor
mov
mov
mov
es
clc
lahf
inc
daa
imul
lea
movs
movs
(bad)
sbb
and
push
pop
or
test
shl
cmp
ret
jne
or
in
pop
nop
sbb
arpl
mov
daa
popf
cmp
hlt
or
sub
pop
or
or
jp
add
push
pop
inc
push
cs
clc
ret
popa
fiadd
or
call
mov
inc
in
add
jmp
dec
sub
adc
dec
stc
scas
dec
adc
jge
add
inc
sbb
or
inc
xchg
stos
test
dec
leave
aam
mov
cs
sbb
fwait
or
xchg
mov
ds
mov
jo
push
in
and
retf
iret
fwait
iret
push
adc
dec
imul
ret
mov
xor
xchg
mov
mov
inc
jne
and
movs
adc
shl
pop
(bad)
aas
sbb
or
rol
mov
add
dec
or
pusha
jbe
adc
or
cmp
mov
dec
clc
cmp
dec
out
xor
push
push
pusha
xchg
add
call
mov
cmp
clc
scas
pusha
or
loop
pop
pop
sbb
repz
repnz
ins
clc
or
sar
leave
lock
aaa
mov
push
mov
shl
jmp
fbld
and
sbb
cmp
or
sbb
xor
add
dec
in
shl
mov
and
adc
mov
shl
adc
jo
cli
mov
mov
mov
mul
mov
adc
mov
call
mov
loop
je
out
ds
lock
pop
ins
mul
out
mov
imul
in
jmp
fcmovb
data16
mov
jne
sub
mov
xlat
push
dec
sti
add
sbb
push
sub
lods
add
mov
jge
mov
sub
js
xor
mov
test
(bad)
sbb
xchg
scas
and
push
dec
sbb
pop
jmp
cs
test
jnp
xchg
add
jns
xor
dec
cld
sbb
xor
sti
cmp
je
mov
repnz
and
and
xor
repnz
daa
mov
es
sub
mov
pop
push
xor
lds
and
sbb
adc
lock
int
sbb
mov
mov
and
inc
in
clc
inc
jecxz
xchg
push
push
test
inc
jg
shl
xlat
std
or
cmp
xchg
mov
jbe
test
daa
or
push
and
mov
jge
or
pop
pop
or
xchg
adc
fdiv
mov
mov
sub
dec
xchg
test
ror
add
sub
lock
movs
jmp
mov
cdq
js
test
pop
lea
adc
ret
jecxz
daa
xor
push
ret
mov
(bad)
mov
pop
jecxz
mov
xchg
add
daa
adc
xchg
std
mov
sub
cmp
out
sub
cs
ds
push
inc
cmp
pop
mov
pop
push
xor
mov
adc
pop
fcom
inc
adc
les
ins
imul
cmp
test
dec
mov
lea
jp
or
stc
xor
ss
bound
adc
movs
push
jmp
dec
es
stos
xor
(bad)
(bad)
fdivrp
fstp
fwait
jmp
ss
dec
sbb
dec
adc
and
adc
cli
imul
push
push
ins
mov
aam
pop
and
inc
sbb
imul
pop
push
adc
or
jl
fucomi
pop
sub
mov
sbb
sub
pop
pop
push
mov
sbb
xchg
pushf
xchg
xor
xchg
aas
sub
cmps
or
popf
add
sbb
(bad)
mov
dec
je
loop
test
mov
jne
xor
add
stc
mov
into
mov
fild
popf
add
push
jb
dec
mov
or
leave
retf
sub
in
dec
or
xchg
pop
xor
sbb
aam
and
test
retf
jns
xchg
jne
ds
movs
vcvtps2dq
dec
jmp
out
test
pop
xor
sub
or
and
mov
push
call
mov
push
cmp
jo
add
ss
imul
add
pop
jno
inc
inc
sbb
lds
cmps
push
pop
pop
mov
mov
sub
gs
inc
data16
xor
push
js
sbb
jmp
setne
push
jl
push
js
push
arpl
inc
xchg
push
pop
jg
adc
mov
das
add
sub
xor
dec
sub
(bad)
push
add
xor
sub
xchg
fisub
adc
sbb
push
dec
push
fcmovnbe
ror
xchg
sub
and
jo
inc
aam
pushf
or
xchg
mov
cld
lahf
pop
dec
ja
icebp
mov
call
je
jmp
and
jbe
popa
mov
jecxz
das
xchg
ror
and
inc
in
dec
dec
out
sub
mov
pushf
retf
in
lock
and
or
stc
rcr
stc
add
and
mov
xchg
xchg
sbb
nop
jo
(bad)
fcom
mul
sub
pop
outs
je
push
mov
pop
das
adc
and
test
pop
push
clc
or
mov
popf
jmp
(bad)
cmp
push
dec
clc
add
ss
das
sbb
inc
or
inc
inc
mov
mov
mov
mov
jmp
jbe
test
adc
enter
mov
or
ret
sbb
adc
and
cmp
mov
aaa
sbb
not
in
jae
fld
mov
jmp
fst
pushf
arpl
or
dec
pop
push
add
cmps
xchg
sbb
dec
adc
mov
cmp
pop
ret
pop
inc
leave
jno
mov
cwde
mov
test
lock
push
fldcw
pushf
or
fwait
pop
(bad)
cmp
mov
cld
mov
cs
dec
scas
cmp
or
nop
pop
push
(bad)
pop
and
dec
xchg
pop
ror
adc
lods
rol
(bad)
pop
dec
aaa
fidiv
or
jmp
push
(bad)
pop
pop
enter
lods
push
outs
and
(bad)
(bad)
push
or
into
xchg
dec
push
gs
nop
pmulhuw
mov
push
inc
or
ins
(bad)
hlt
imul
jg
cmp
inc
xchg
and
aas
jnp
xor
push
lds
push
adc
push
ins
jo
pop
cmp
cmp
dec
hlt
jne
dec
addr16
or
cmp
push
les
or
inc
pop
pop
shl
hlt
pop
jmp
(bad)
adc
sub
add
xchg
mov
popa
push
jp
or
loop
pop
gs
ret
push
push
out
leave
jle
mov
mov
jl
std
lods
pop
lea
loop
(bad)
and
mov
dec
mov
mov
add
shl
pop
xor
iret
mov
and
add
xor
je
sbb
shr
enter
cmp
mov
in
mov
(bad)
pusha
or
addr16
mov
out
lods
test
or
mov
ficom
fadd
or
(bad)
int3
pop
and
xor
ins
sbb
jo
push
push
jns
fbld
and
dec
imul
fxch
and
js
dec
popf
or
shr
mov
or
push
add
jmp
cmp
test
adc
adc
push
mov
fiadd
xchg
sub
bound
ins
or
je
je
adc
inc
or
je
inc
or
cmp
or
and
adc
call
dec
sbb
inc
aaa
(bad)
nop
xchg
mov
cmp
sub
ret
lea
test
push
ss
ret
xor
xchg
or
das
jmp
ret
mov
fs
xor
fs
movs
movs
add
fiadd
jns
sub
out
and
dec
pusha
jbe
fcomp
cmp
movs
in
fldcw
rol
fcom
mov
inc
data16
cmps
fbld
sub
inc
out
jno
pop
adc
ret
jle
shr
pop
adc
pop
add
fst
sub
stc
and
push
nop
xchg
adc
cdq
pop
add
sar
mov
fnstenv
je
iret
popa
inc
fist
or
fmul
adc
repnz
sbb
adc
inc
inc
lods
out
jns
mov
cmp
mov
cmp
addr16
bound
shr
add
loope
inc
adc
int
pusha
cdq
cs
and
inc
or
fistp
sub
sbb
or
clc
xchg
xchg
(bad)
adc
jns
test
aas
xchg
adc
popf
add
or
or
movs
inc
mov
cli
adc
lock
test
or
sti
jae
mov
pop
sub
pusha
inc
lock
ret
jns
cmps
jmp
push
mov
ret
inc
fiadd
add
xchg
nop
jp
dec
dec
dec
movs
in
outs
mov
push
dec
add
outs
hlt
jmp
and
pop
ror
stos
xlat
in
ja
xor
sbb
jge
mov
pop
sbb
std
add
hlt
or
push
loope
adc
aas
add
mov
jp
imul
mov
mov
pop
mov
rcl
push
pop
push
lods
pop
sar
mov
add
fwait
dec
jmp
dec
loopne
stos
jb
cli
and
ret
xor
not
bound
das
sub
movs
cmp
es
loop
pop
fst
dec
lahf
and
pop
fsub
xor
xchg
mov
clc
add
clc
xor
test
outs
das
pop
push
aaa
push
sub
rol
add
pop
sbb
pop
or
or
xor
and
xor
bound
dec
mov
(bad)
repnz
dec
aam
mov
jb
push
mov
cmps
inc
add
ds
popf
push
push
add
cmp
jne
je
jo
clc
into
xchg
scas
aas
out
dec
mov
dec
pop
cmp
mov
ret
jbe
push
dec
or
xchg
dec
ds
neg
add
jo
loopne
fmul
jg
or
mov
dec
inc
mov
int3
add
mov
push
aam
arpl
push
retf
pop
test
pushf
or
pop
enter
mov
push
sub
cmp
add
aas
hlt
and
jle
jne
not
mov
adc
mov
call
push
enter
or
push
fadd
ja
dec
cmp
ja
mov
cmp
mov
rol
and
ror
mov
xchg
ret
sar
jmp
repz
mov
sub
je
adc
xor
sbb
push
cmp
push
xor
cmps
or
bound
cmovp
xor
mov
push
lea
ds
daa
pop
int3
jle
pop
xor
push
mov
jne
push
or
jbe
aaa
int
or
cmp
popa
nop
push
inc
mov
cmps
clc
pop
push
push
jb
mov
cmp
in
xor
mov
adc
xor
test
or
ja
add
ins
ins
stc
cmps
xor
dec
xor
cmp
xchg
mov
sti
scas
movs
pop
inc
retf
xor
mov
push
xchg
dec
add
aam
pusha
add
or
sub
mov
cmp
mov
retf
inc
adc
inc
xor
fst
test
and
push
pop
cmp
push
into
sbb
ds
xchg
dec
sbb
or
fld
sub
xchg
inc
test
loope
lock
clc
dec
mov
push
mov
push
bound
int
pop
jmp
nop
inc
(bad)
cli
cmp
add
popa
adc
adc
pusha
inc
(bad)
sti
cmc
cmps
ret
jge
int
xor
pop
or
push
ret
cmp
in
pop
adc
fcom
sbb
cwde
jmp
adc
shl
cs
mov
dec
call
adc
dec
cmp
popf
inc
bound
cmp
xchg
dec
mov
sub
je
(bad)
jp
sub
push
mov
(bad)
idiv
push
cmp
cwde
mov
aam
inc
mov
add
fadd
or
imul
mov
es
(bad)
test
jecxz
and
xchg
in
and
(bad)
nop
dec
sbb
mov
adc
mov
jne
jbe
sbb
sub
leave
or
mov
add
adc
test
adc
inc
xchg
sbb
inc
lahf
bound
mov
add
stos
add
pop
in
rcl
pop
inc
inc
xchg
push
lock
sub
dec
pop
dec
mov
inc
sub
inc
test
ds
cmc
jne
adc
movs
fcomip
arpl
pop
xor
jge
lods
xor
add
and
loop
xor
cli
cmp
jne
adc
push
xchg
sbb
jle
repz
add
retf
mov
test
jo
fild
sub
repnz
iret
sub
jo
hlt
cmp
adc
xor
stos
sahf
imul
push
mov
cmc
imul
or
mov
or
je
xor
push
out
pop
pusha
jmp
sbb
aam
add
call
add
int3
add
sub
stos
sbb
jmp
sbb
not
add
nop
push
idiv
inc
pop
ret
call
adc
push
clc
or
dec
cmp
push
push
pop
loopne
aam
inc
sub
xchg
ret
jle
out
or
pop
in
je
pop
(bad)
rcl
and
daa
xor
dec
adc
pop
scas
mov
in
sbb
mov
or
ins
imul
adc
inc
test
mov
xor
mov
or
push
call
sbb
add
and
inc
pop
fidiv
or
ins
sbb
mov
mov
push
sbb
inc
(bad)
call
std
fsubr
inc
adc
adc
rol
out
rcl
or
cmp
loope
sbb
das
loop
adc
xor
and
pop
add
cmp
sub
nop
pop
sbb
call
push
daa
sub
inc
xor
shl
push
test
inc
je
mov
inc
mov
adc
sbb
pop
push
add
ret
hlt
movs
sbb
nop
xchg
push
push
mov
cmp
add
push
dec
es
cmp
adc
repnz
jae
add
push
popa
leave
xor
pusha
mov
add
movs
fist
mov
cdq
adc
xchg
xchg
inc
lea
xor
or
dec
jmp
pop
pop
xchg
sub
jge
movs
xchg
dec
in
pop
adc
lea
fs
inc
inc
mov
repnz
lods
dec
dec
je
mov
mov
(bad)
cmp
sub
cmps
cmp
push
inc
add
push
test
pusha
push
cmp
pusha
xchg
daa
mov
add
push
addr16
sub
test
push
or
mov
out
xor
aas
mov
xor
push
dec
add
or
leave
cmp
mov
test
imul
shufps
and
sbb
adc
and
mov
sub
ror
push
dec
sbb
dec
or
test
cmp
enterw
retf
rsqrtps
add
js
pop
push
xchg
cmps
pop
cwde
pop
nop
(bad)
cmp
sar
inc
sbb
ret
rol
mov
aam
stos
adc
sub
ins
in
xchg
pop
xchg
imul
mov
(bad)
and
arpl
mov
stc
mov
addr16
fmul
aaa
dec
and
add
or
xlat
cmp
mov
leave
je
xor
mov
xchg
xchg
dec
mov
add
sbb
pop
xchg
in
test
mov
mov
movs
stos
pop
push
push
in
cs
icebp
add
xchg
sbb
and
retf
cmps
(bad)
dec
push
sub
or
sub
and
lods
inc
xchg
mov
and
lods
dec
dec
add
imul
movs
inc
inc
inc
je
jbe
stos
mov
push
loop
test
push
les
outs
mov
jg
out
pop
sbb
jae
nop
mov
shr
add
std
cmp
cs
imul
not
add
pop
out
dec
sub
add
pushf
jne
aas
push
adc
aad
add
and
mov
sbb
outs
add
pop
mov
xchg
test
pop
pop
add
outs
pop
adc
stos
fsub
sbb
xor
and
jne
(bad)
sbb
pop
outs
push
sub
ds
cmp
xchg
mov
bswap
mov
add
data16
cmp
gs
clc
sbb
and
mov
(bad)
dec
sub
mov
fldpi
jecxz
and
xor
add
jae
jp
dec
add
out
call
dec
dec
sub
popa
sbb
and
cld
mov
add
add
hlt
(bad)
and
sub
fimul
and
jmp
sub
mov
mov
or
jmp
add
mov
adc
adc
outs
nop
or
dec
or
mov
fdivrp
daa
xor
out
inc
inc
imul
mov
sti
mov
xchg
inc
jne
lods
idiv
dec
cmp
xchg
xor
add
ja
pop
lods
push
test
add
test
dec
adc
dec
or
mov
imul
jb
fcom
sbb
push
push
pop
je
popf
retf
ror
push
add
not
test
clc
hlt
dec
mov
(bad)
xchg
mov
repnz
cld
(bad)
xchg
adc
xchg
je
inc
les
sub
xor
jne
mov
test
inc
and
adc
push
adc
jnp
jmp
inc
or
loope
mov
mov
mov
cwde
jp
lea
push
ss
sbb
adc
or
add
outs
or
push
cmp
jmp
sub
loopne
movs
push
imul
adc
mov
push
ins
push
mov
and
adc
xchg
jge
and
in
dec
adc
out
in
dec
push
ins
out
loopne
nop
call
xor
xor
jge
jno
or
jmp
and
mov
jb
push
dec
push
fsubr
repnz
dec
gs
gs
adc
popa
cld
stos
mov
dec
add
call
mov
cmp
push
jmp
dec
aam
test
imul
sub
cmp
(bad)
aaa
call
neg
mov
inc
loopne
in
or
inc
in
shr
xor
sti
ins
sub
cwde
add
or
lods
push
and
loop
mov
pop
mov
pop
pop
inc
push
mov
add
clc
adc
add
out
adc
mov
(bad)
jmp
sbb
add
add
push
je
(bad)
sbb
push
or
pushf
or
adc
add
movs
or
std
and
ret
adc
in
daa
mov
pop
xor
xor
or
movs
pop
pusha
daa
sbb
pusha
xor
in
mov
push
and
sbb
xchg
sub
and
int3
aam
ret
shl
sub
push
sub
add
fadd
(bad)
(bad)
jecxz
add
pop
outs
add
mov
cmp
dec
fisub
push
xor
sbb
jnp
movsx
add
add
inc
mov
cmps
aas
(bad)
xchg
lea
cmp
in
ja
mov
int3
sahf
in
dec
fadd
idiv
pop
je
inc
sti
jmp
or
lods
pop
inc
add
mov
popa
add
or
sub
or
cmps
sti
test
adc
xchg
xlat
mov
bound
sub
je
dec
or
lock
or
cmp
loop
add
daa
loope
rcl
stos
fist
adc
js
jne
pop
push
cmc
jbe
in
outs
mov
jge
push
nop
outs
xor
mov
imul
add
test
cmps
fcom
loope
pop
push
mov
add
sub
push
mov
push
cmp
movs
xor
test
sbb
push
sbb
dec
daa
shr
xlat
imul
add
add
sub
inc
sbb
or
dec
add
cmps
loopne
adc
sbb
stos
sub
sbb
xchg
lods
push
add
sbb
dec
add
lahf
rcl
movlps
mov
add
mov
add
pusha
movs
mov
pop
int
or
ins
lods
mov
mov
sbb
imul
jmp
jmp
aaa
push
push
cmp
cdq
popa
mov
or
pusha
xchg
or
jg
rcl
scas
sbb
jae
or
or
mov
push
push
mov
lods
push
or
xchg
(bad)
repz
adc
out
jmp
sub
pop
dec
dec
mov
or
jge
pushf
or
push
or
push
push
dec
or
sbb
ss
mov
repz
adc
sub
add
movs
es
or
pop
or
sar
sub
push
add
push
mov
adc
add
xchg
rol
(bad)
hlt
inc
in
pop
sub
fs
sbb
push
adc
adc
mov
shl
mov
cmp
mov
and
jge
rcl
addr16
inc
jmp
repnz
(bad)
std
inc
or
rcl
sub
xor
or
adc
jle
cdq
cmps
mov
sbb
mov
push
popf
dec
and
inc
add
adc
add
lock
sar
pop
xchg
add
and
aam
mov
sub
mov
jns
jo
inc
sahf
aas
add
ja
add
or
popa
ret
test
xor
add
pusha
dec
dec
cmp
lea
add
mov
sbb
adc
dec
fadd
adc
sub
fsubr
jmp
lock
test
cs
sbb
sub
jmp
in
jmp
cmp
test
push
call
out
or
(bad)
jo
scas
in
call
add
loope
jmp
inc
clc
or
scas
mov
dec
rcl
push
mov
xor
enter
push
jle
call
or
mov
xor
popf
cld
clc
(bad)
push
sub
lods
jbe
cdq
add
and
test
pop
mov
xor
dec
jp
das
push
mov
das
lods
mov
inc
jecxz
pop
sar
cmp
ss
inc
dec
aam
and
mov
mov
nop
xor
add
mov
xor
jo
sub
ins
xor
sbb
(bad)
sahf
pop
inc
loope
adc
jl
cmp
xchg
or
push
jb
int
test
jne
cs
push
ins
inc
pop
iret
sbb
and
(bad)
in
in
add
cmp
mov
add
mov
push
mov
jge
adc
inc
xchg
mov
add
jl
pop
cwde
xor
movsx
or
push
adc
cwde
add
mov
sbb
fcomp
aas
push
or
js
adc
add
mov
mov
xchg
jecxz
or
aas
and
test
hlt
add
and
adc
xchg
inc
sbb
xchg
out
js
in
mov
rol
inc
stc
dec
mov
or
mov
addr16
(bad)
rol
cmc
adc
das
in
movs
jg
jb
push
jne
mov
mov
push
sbb
or
aas
clc
std
xor
and
fmul
test
imul
or
dec
aam
test
pusha
and
pop
or
fild
or
(bad)
pop
mov
out
add
sbb
and
loopne
ins
ret
cmp
enter
cmp
movs
rcr
adc
retf
pop
dec
xor
jmp
xor
hlt
ror
test
and
nop
cmps
push
repnz
mov
add
inc
inc
aad
xchg
fld
xchg
dec
pop
adc
loop
lea
call
retf
inc
mov
mov
pop
ror
push
or
call
leave
(bad)
out
mov
loop
stc
test
(bad)
cmps
and
sub
rcl
or
es
std
add
xor
sbb
adc
imul
add
(bad)
jecxz
and
xchg
inc
jle
mov
add
cs
es
or
fwait
or
aas
cmp
add
ins
arpl
xchg
clc
fiadd
sub
out
pop
ret
stos
(bad)
pop
mov
mov
cmp
out
pop
icebp
inc
push
cmp
sbb
repz
pop
into
adc
adc
push
inc
(bad)
jle
adc
or
cmp
ror
adc
rol
push
pop
test
inc
add
sbb
inc
sbb
jne
fdivr
push
mov
ins
and
add
add
not
outs
xor
sbb
add
leave
mov
add
adc
sbb
sahf
mov
outs
and
adc
xor
sbb
fcomp
push
mov
ss
lahf
xchg
or
inc
push
or
push
jns
movs
or
rol
xor
xchg
je
and
xor
sub
inc
repnz
pop
dec
adc
popf
dec
or
inc
jae
dec
add
inc
je
or
inc
jmp
and
adc
mov
pop
sbb
adc
movs
das
rcl
xor
in
xchg
push
fistp
ret
gs
mov
daa
or
enter
cmp
(bad)
test
popf
retf
mov
sbb
add
dec
or
xor
xor
popa
and
dec
cmp
lods
movs
pop
loopne
inc
jge
jnp
inc
rcr
pop
adc
leave
and
or
and
push
movs
fmul
sub
je
push
sbb
mov
ds
sub
adc
add
inc
out
push
cld
rol
outs
inc
and
lods
aam
mov
and
out
sbb
pop
cld
std
les
adc
or
rol
add
sbb
sbb
movs
adc
mov
sbb
cdq
ffree
xchg
pop
push
ds
sbb
and
xor
xor
sbb
in
jne
imul
je
(bad)
push
fcomp
or
push
cmp
jbe
push
inc
call
pop
loope
mov
sub
and
ds
bound
cmp
xor
mov
fidivr
adc
repnz
pop
iret
into
ds
push
dec
mov
js
sub
jnp
push
(bad)
mov
dec
(bad)
pop
adc
sbb
dec
cs
mov
add
mov
popf
sbb
rcl
stos
inc
and
sub
cmp
add
inc
nop
jmp
xor
xor
mov
(bad)
pop
rcl
adc
pop
fstp
cmp
adc
add
sbb
sbb
mov
mov
(bad)
jno
imul
dec
test
out
dec
mov
data16
dec
fcomp
lds
mov
fdiv
jg
sbb
sbb
fnstsw
sahf
jae
fiadd
pop
test
test
inc
xchg
adc
jo
xchg
add
int
outs
or
mov
jmp
add
fidivr
xchg
aad
jns
test
add
ins
cmp
push
add
aad
mov
jmp
jbe
or
push
fwait
ss
mov
push
xor
xor
jl
xor
and
(bad)
inc
sbb
jmp
add
push
ss
mov
dec
je
add
jmp
bnd
in
aam
int3
dec
mov
xlat
or
sbb
and
fwait
js
sub
cmps
push
sub
pop
push
push
cmp
adc
ror
test
push
inc
orpd
adc
loopne
iret
je
dec
loopne
pop
je
shl
add
or
into
clc
xor
mov
jae
aam
sbb
aaa
sbb
(bad)
add
sbb
dec
into
pop
hlt
mov
out
add
ins
pop
pop
pop
mov
aaa
or
or
jl
bound
lods
xor
pop
mov
inc
inc
call
hlt
vrcpps
add
loop
xor
sub
adc
mov
out
add
dec
daa
add
xor
push
(bad)
dec
or
mov
pop
ret
rsm
fst
fs
add
lea
jmp
pop
and
repnz
jnp
lea
push
sbb
or
or
push
cdq
push
mov
outs
mov
adc
and
add
inc
sbb
imul
ret
aaa
hlt
das
push
jmp
pop
cmp
cmp
adc
sub
dec
dec
push
ds
inc
imul
es
sub
push
(bad)
sbb
in
mov
push
jne
shl
faddp
mov
ds
push
jae
add
aam
mov
movs
xor
test
xor
sub
leave
pop
xchg
inc
jnp
and
test
push
pop
clc
pusha
xor
xor
lea
popf
into
jl
cmp
stos
test
mov
sub
hlt
xor
movs
xchg
add
inc
out
inc
jb
fwait
aaa
inc
fmul
stos
rcl
cmp
in
ins
nop
pop
sub
mov
jb
pop
and
pop
xor
rcl
or
addr16
cmp
dec
cmovs
outs
pusha
pop
iret
stos
add
dec
push
push
adc
aas
sub
cmp
cmp
setg
adc
fiadd
dec
xor
dec
(bad)
xor
mov
retf
and
cmp
xor
cmps
test
cmp
imul
test
loopne
jmp
inc
mov
dec
shl
pop
pop
inc
jl
in
adc
cmp
or
gs
jns
neg
dec
or
xchg
xchg
pop
sahf
fcmovnu
test
add
cmps
fst
outs
es
(bad)
cmp
or
shl
ror
mov
in
call
retf
mov
add
inc
bound
shl
mov
add
dec
rol
jnp
dec
addr16
js
popa
dec
clc
inc
jns
xor
js
je
xchg
adc
pop
mul
daa
fwait
xchg
mov
hlt
call
dec
add
sub
loopne
or
idiv
out
cld
add
sub
add
sub
imul
adc
in
mov
loop
add
cmp
dec
push
cdq
out
ror
and
add
sub
sar
inc
daa
stos
aaa
cmp
add
and
aad
sub
je
ins
pop
sar
dec
enter
ja
jmp
push
pushf
ja
out
lods
mov
sub
sub
loopne
pop
inc
and
inc
or
xor
lock
pop
xor
sbb
imul
xchg
ins
test
ret
(bad)
jecxz
lock
xchg
movntps
or
mov
mov
call
enter
mov
add
cmp
(bad)
ja
push
pop
fist
mov
inc
lea
mov
pop
and
jne
xchg
fadd
lock
aam
lock
sub
add
cmp
jge
adc
push
cmp
xor
xlat
cmp
mov
das
jg
pop
in
neg
inc
daa
cwde
pop
nop
sbb
push
movs
or
fisttp
aam
pop
shl
cmp
add
aam
(bad)
sbb
and
sar
jmp
push
pusha
and
dec
mov
push
xlat
and
movs
aas
lock
or
lea
fbld
pushf
retf
and
adc
add
repz
clc
dec
cmp
cmp
jle
push
jl
(bad)
xor
mov
push
ror
or
push
xchg
inc
push
imul
fs
add
xor
(bad)
(bad)
in
push
bound
mov
mov
adc
sbb
pop
aaa
adc
xor
pop
je
and
(bad)
mov
dec
inc
adc
push
repz
inc
dec
pop
adc
push
xchg
ds
sbb
mov
fstp
pop
(bad)
and
inc
out
and
jle
inc
mov
jne
sbb
rcl
sbb
pop
inc
mov
xchg
xor
add
nop
pop
or
dec
and
fild
add
(bad)
popf
fsubr
ret
es
clc
mov
test
es
sub
mov
outs
sub
add
sub
pushf
shl
jo
cmp
out
fiadd
and
sbb
and
sub
pop
imul
fsub
sbb
dec
sbb
call
ins
mov
pop
dec
imul
int
and
pop
adc
mov
inc
or
mov
enter
add
fcom
ror
clc
add
jae
js
pop
mov
adc
dec
sar
popf
mov
xor
adc
mov
fimul
je
add
adc
dec
and
and
sbb
xchg
mov
ret
(bad)
push
sbb
nop
jge
cmc
push
les
ds
jmp
push
test
pop
cmp
mov
xchg
and
sbb
xchg
mov
jmp
sbb
mov
dec
dec
ins
(bad)
jne
xor
mov
test
mov
popa
mov
call
sub
pushf
xchg
or
retf
test
fld
and
jne
push
das
(bad)
pop
and
mov
and
inc
adc
adc
pop
mov
inc
mov
and
dec
rcl
std
add
iret
aaa
es
aas
jmp
(bad)
mov
mov
or
sti
pop
(bad)
or
jns
jo
ds
xchg
les
xchg
sbb
imul
mov
cmp
inc
(bad)
idiv
lds
pop
leave
arpl
test
cld
mov
mov
or
test
xchg
adc
dec
addr16
jp
mov
adc
inc
inc
xchg
call
sub
ret
mov
inc
and
in
sub
sub
movzx
lds
pop
mov
jno
jb
call
frstor
dec
push
push
sbb
push
push
mov
jb
int3
nop
sub
pop
and
hlt
stos
out
dec
sub
push
xchg
and
cwde
mov
add
aas
adc
xchg
xor
push
or
test
sbb
or
mov
ror
pop
imul
sub
xchg
sub
push
gs
push
hlt
pop
imul
add
inc
ds
mov
lea
inc
ror
sub
add
sub
dec
fist
(bad)
jae
mov
fld1
cmp
fistp
dec
fiadd
add
sbb
in
nop
jl
cmp
ss
push
push
or
stos
movs
push
(bad)
fs
and
or
push
pop
xchg
adc
and
push
retf
sbb
pop
inc
sbb
aaa
mov
lods
fisubr
xchg
inc
cmp
mov
inc
inc
ss
ret
dec
add
mov
push
push
inc
mov
inc
call
out
push
loope
addr16
sub
and
ret
ss
sbb
test
or
inc
dec
inc
call
sbb
mov
xor
dec
cmp
inc
jp
shr
mov
jge
or
cmp
and
jae
not
push
cld
(bad)
aas
push
inc
cmp
int3
data16
rcl
mov
add
or
or
pop
push
call
neg
ins
imul
int3
xchg
xchg
dec
cmp
mov
popa
mov
inc
dec
adc
lahf
inc
sahf
div
add
sbb
push
adc
inc
xchg
mov
pop
jmp
push
mov
add
xchg
dec
add
dec
add
mov
test
xor
inc
add
add
(bad)
push
fcom
fisub
jmp
hlt
mov
imul
xchg
jmp
cmp
nop
popf
gs
jo
daa
mov
xchg
imul
or
jnp
sbb
push
push
inc
ins
mov
loopne
(bad)
es
fmulp
sbb
loop
jle
retf
push
xchg
fidivr
rcr
repz
xchg
add
push
mov
sub
add
push
jg
imul
and
xchg
xlat
pop
pop
mov
add
and
ror
sbb
xchg
mov
test
test
arpl
xor
sar
nop
mov
pop
lock
dec
or
cmp
push
cmp
lea
aaa
arpl
out
fs
adc
adc
rcr
pop
je
mov
cdq
retf
or
jno
int
adc
push
jno
inc
adc
je
push
mov
push
sbb
mov
and
dec
shr
xchg
or
add
jbe
outs
loopne
add
xchg
push
mov
jne
xchg
or
inc
(bad)
jp
cwde
movs
add
stos
addr16
nop
inc
push
cld
retf
pop
sbb
cld
icebp
je
hlt
mov
push
fdiv
mov
adc
xchg
in
or
sbb
sbb
mov
mov
movs
jo
ja
xor
fcom
pusha
movs
mov
repnz
inc
sub
test
mov
retf
ret
adc
(bad)
lods
aam
sbb
add
cmp
and
push
in
ret
gs
add
or
test
inc
movzx
jl
bnd
push
sar
sbb
lock
adc
nop
cmps
jge
sbb
adc
sub
and
and
dec
popa
jmp
cli
inc
add
int
mov
push
cwde
or
xor
repnz
xor
nop
loopne
ror
mov
sbb
stos
das
cdq
push
cmp
scas
jg
je
sbb
xor
pop
fsub
fimul
add
je
or
cmp
inc
test
cmp
inc
pop
movs
cmp
lods
xor
adc
and
add
sbb
sub
cmp
adc
push
sahf
xchg
add
mov
sbb
aad
xchg
sbb
adc
cmp
inc
imul
adc
sub
in
xchg
lods
sbb
clc
xor
call
jne
mov
sahf
sti
fisub
imul
and
dec
scas
push
push
adc
lock
or
jne
movs
sbb
pop
(bad)
fcmovbe
and
lock
lods
hlt
test
jo
sub
or
out
sahf
mov
lock
ret
out
jg
xchg
cmp
cmps
add
repnz
ss
push
and
nop
pop
dec
push
popa
inc
adc
jbe
mov
adc
loop
enter
inc
xchg
pushf
ror
or
jge
retf
ins
es
xchg
mov
add
shl
push
add
push
dec
dec
dec
(bad)
xor
lea
push
and
sbb
call
add
into
test
sahf
add
jae
dec
test
or
iret
sub
inc
mov
xor
popa
or
add
pop
jp
xchg
out
mul
mov
dec
mov
add
sub
movs
cmps
rcr
popf
sub
or
xor
cmps
rol
outs
sub
and
sbb
or
push
pop
lock
popf
pop
xchg
adc
jp
scas
adc
sbb
push
in
pop
pop
in
ret
sti
xor
mov
loopne
out
ins
mov
jmp
call
or
inc
mov
mov
push
das
loopne
lock
js
mov
or
mov
aad
scas
xor
sbb
cmp
call
dec
sahf
sub
adc
or
sub
add
jmp
mov
or
rol
mov
les
in
add
and
imul
hlt
adc
push
jp
lds
inc
retf
jbe
pop
pusha
cmp
cmps
add
in
xchg
arpl
inc
imul
and
push
mov
inc
xchg
popa
and
loopne
lock
xchg
fldenv
mov
cmp
out
cld
(bad)
jo
inc
and
sbb
ret
and
or
unpcklps
fs
push
pushf
pop
lea
mov
test
cdq
inc
dec
cwde
or
and
dec
shl
xchg
adc
ret
xor
or
sbb
jo
out
add
scas
push
add
add
test
dec
rcr
mov
mov
cmp
movs
rep
sbb
push
push
mov
push
pop
push
outs
sbb
test
jnp
enter
hlt
or
inc
mov
test
lods
test
adc
or
add
push
fadd
xchg
pop
aaa
lds
mov
ftst
xor
sbb
popa
xchg
or
cld
stc
cld
sub
xchg
out
ret
add
out
push
es
pop
mov
push
ins
cdq
aas
mov
inc
ret
push
aas
test
and
inc
xor
and
aaa
sub
add
test
rcl
out
pusha
add
daa
mov
imul
nop
inc
rcl
aam
fiadd
sub
or
sub
jne
(bad)
xchg
leave
mov
cs
(bad)
push
scas
clc
cmp
jno
adc
sub
push
dec
test
push
gs
sbb
je
arpl
call
add
push
and
adc
ins
push
lea
outs
dec
out
stos
sbb
sub
test
pushf
jne
shl
clc
pusha
xor
mov
jmp
inc
dec
cli
icebp
aas
adc
push
adc
sbb
dec
sub
lock
push
inc
or
adc
not
sub
ret
mov
outs
pop
bswap
inc
push
outs
xchg
push
cmp
xor
mov
jae
mov
(bad)
je
or
es
add
and
mov
jmp
xchg
data16
inc
mov
jbe
sbb
test
ins
adc
pop
dec
add
add
sub
sub
xor
sub
inc
ins
sbb
sub
inc
loop
lods
hlt
xchg
push
xor
xchg
(bad)
fdivr
mov
call
pop
daa
mov
lock
xchg
jp
lods
xchg
test
push
test
sub
aaa
jne
add
push
push
imul
xor
out
pop
imul
xor
call
xchg
jge
push
loopne
sbb
xor
sbb
jp
ins
leave
js
or
mov
add
loopne
dec
je
inc
sub
call
scas
sub
mov
pop
aas
fs
lea
aas
(bad)
call
xchg
push
cs
push
cmps
push
adc
push
or
inc
sbb
into
mov
sub
jl
xchg
sub
aaa
mov
mov
and
jnp
jl
xchg
sub
movq
rcr
test
and
ds
retf
push
adc
fistp
adc
push
scas
iret
push
in
loopne
mov
je
adc
cmp
add
je
test
push
arpl
jge
or
inc
add
pop
jo
pause
jbe
xchg
es
jge
das
inc
fstp
or
pop
xchg
mov
nop
and
or
push
neg
jbe
or
push
adc
test
sbb
sbb
ror
lods
test
cld
js
mov
xor
movs
pop
inc
add
add
retf
dec
repz
in
es
dec
jg
add
inc
jmp
fcom
jbe
or
jbe
jne
mov
cmp
pushf
or
mov
xor
lock
sahf
cmp
xorps
cmp
fs
clc
mov
lods
push
push
and
ret
sbb
and
jne
mov
sar
into
adc
int
inc
sbb
int
pop
dec
push
cmp
sub
ficomp
and
xchg
or
femms
add
in
pop
and
mov
stc
and
call
xchg
(bad)
cmp
stos
sub
or
cwde
shl
ja
inc
or
jge
loopne
and
push
dec
jle
dec
dec
lea
rcr
sbb
enter
inc
sbb
or
dec
clc
push
adc
je
inc
test
mov
push
jg
fxch
sbb
pop
test
sbb
daa
or
and
cmc
sub
dec
push
push
frstor
pop
inc
ins
into
ret
rcl
lods
or
in
inc
lock
cmp
retf
mov
shl
inc
inc
push
adc
js
jecxz
pushf
cmps
inc
push
lea
sbb
ins
jp
mov
or
cmp
mov
das
pop
jge
lods
jecxz
sbb
repz
fs
int3
not
add
fimul
aam
add
ss
lea
aad
xchg
push
pop
jmp
jp
add
pop
pop
mov
idiv
xor
les
ror
jns
inc
push
sbb
and
cmps
shl
fs
add
jmp
stos
sub
mov
adc
mov
pop
xlat
pop
mov
xor
mov
fldenv
(bad)
mov
push
adc
inc
add
xchg
xchg
push
aas
and
or
mov
push
push
add
(bad)
or
sbb
lods
sbb
dec
mov
inc
xchg
mov
mov
and
inc
sbb
mov
push
or
mov
xor
sahf
mov
in
dec
inc
sbb
cmovbe
xor
cmp
inc
repz
retf
sbb
mov
loopne
sbb
int3
add
add
jl
pop
mov
add
mov
pushf
rcr
movs
idiv
or
js
cmp
out
inc
neg
pop
xchg
nop
rol
pop
adc
shl
jmp
sub
jg
add
mov
js
xchg
mov
or
dec
or
icebp
into
xor
dec
retf
test
and
add
jl
loope
clc
rcl
fadd
pop
xchg
jb
inc
mov
(bad)
add
inc
(bad)
jne
loopne
sub
xor
popf
popf
ret
sbb
xlat
pop
xchg
dec
rcr
pop
xchg
push
mov
dec
cld
test
je
lds
call
sub
and
add
pusha
je
psubq
movs
je
arpl
inc
add
lock
icebp
stos
pop
test
dec
loopne
or
je
adc
xor
sub
ja
mov
dec
lea
leave
cmp
pusha
xor
push
jbe
pop
or
in
lea
pop
sub
or
dec
imul
rcl
fidivr
add
fimul
and
add
inc
mov
pop
cmp
stc
cld
es
or
push
xor
push
je
mov
shl
sub
xor
pop
xchg
or
dec
mov
mov
dec
push
dec
popf
and
dec
add
rcr
sub
and
push
jmp
mov
inc
ret
out
sbb
xor
std
fcomip
sbb
sbb
inc
dec
inc
add
gs
push
mov
dec
xchg
push
pop
pop
pop
cmp
add
les
xchg
sub
mov
sbb
push
dec
pop
daa
cs
bound
leave
lahf
cmp
lock
sub
dec
addr16
sub
fyl2x
arpl
mov
jo
rcpps
xchg
stos
xor
movs
dec
dec
loopne
pop
addr16
and
test
adc
call
cmps
retf
lods
sbb
sbb
inc
mov
mov
aas
push
mov
sbb
ror
inc
xchg
pusha
popa
sub
mov
push
cmp
movs
or
dec
pop
mov
jo
dec
fiadd
das
or
xchg
sub
dec
imul
pop
popf
in
(bad)
push
out
and
xor
neg
push
xor
sub
sbb
and
pop
mul
adc
push
ret
pop
adc
add
imul
or
sub
aas
and
sbb
pop
mov
pop
pop
(bad)
call
inc
(bad)
cmp
mov
sub
jb
dec
call
sbb
jmp
cmp
dec
or
jmp
and
and
test
icebp
call
add
dec
inc
or
mov
das
mov
push
stos
add
pop
pop
clc
adc
and
or
loopne
push
mov
das
or
cld
fcom
cmp
ret
sub
aad
lock
inc
jge
shl
jl
dec
(bad)
mov
dec
es
sub
icebp
add
push
mov
in
adc
adc
mov
ror
and
pop
data16
adc
xchg
in
mov
aaa
and
xor
cmp
jg
outs
mov
leave
xchg
push
sub
push
je
adc
pop
jmp
add
repz
or
sub
mov
(bad)
rcl
jle
lea
jo
lahf
cwde
mov
sahf
mov
xchg
daa
clc
jne
mul
cmp
nop
pop
popa
mov
(bad)
push
inc
inc
add
push
sub
adc
jmp
adc
push
fadd
inc
iret
adc
arpl
mov
xchg
add
xchg
adc
or
scas
jne
stc
not
fdivr
and
and
jp
or
xlat
mov
lock
xchg
jbe
jne
mov
adc
pop
cmp
sub
cmp
je
lea
push
pusha
movs
add
adc
and
jmp
aaa
ss
test
dec
ds
inc
clc
mov
mov
add
mov
aam
add
int3
sub
scas
dec
adc
or
mov
jne
fadd
push
push
mov
dec
and
cmp
add
mov
cli
xchg
test
and
cdq
rol
xor
jecxz
adc
mov
in
mov
les
lods
add
pop
and
push
cmp
and
lock
jo
inc
(bad)
hlt
dec
(bad)
movs
or
js
mov
xchg
jp
add
ret
mov
sbb
ja
or
shl
ins
in
mov
mov
mov
or
(bad)
add
push
xor
xor
jne
(bad)
loopne
daa
das
add
push
xor
add
int
pop
fld
add
(bad)
sbb
(bad)
clc
adc
cmp
rcl
mov
nop
sub
add
jb
pop
add
and
lock
inc
dec
(bad)
jg
dec
pop
add
xor
test
je
xlat
push
test
jo
mov
pop
xchg
pop
pop
mov
dec
test
ins
pop
or
lock
mov
or
lock
jmp
sub
and
jo
fwait
aas
(bad)
cld
dec
shr
sub
sbb
or
pop
xor
cmp
ret
imul
test
imul
rcr
pop
mov
les
mov
sub
jp
daa
xchg
outs
mov
jnp
cmps
jge
adc
aam
pop
push
(bad)
inc
pusha
sbb
ins
ins
loop
out
cld
stos
sub
popf
and
inc
or
jge
ucomiss
inc
in
mov
inc
ror
cmp
ror
pop
push
mov
add
adc
adc
dec
mov
sub
cdq
or
push
add
add
cmp
js
scas
shr
loope
jge
mov
ror
jmp
push
dec
add
pop
xlat
das
mov
shr
add
mov
pop
iret
push
adc
jne
sub
pop
cmps
xor
push
sub
in
test
sbb
push
int3
pop
jns
(bad)
adc
add
adc
stos
pop
push
movs
add
pop
es
jmp
sbb
js
daa
sar
mov
push
cs
or
pushf
pop
je
inc
mov
xchg
or
mov
mov
push
xchg
or
or
or
adc
push
test
inc
pusha
dec
pop
dec
lahf
push
inc
add
ins
add
mov
dec
movs
ja
jnp
or
push
mov
adc
push
aad
and
sbb
jbe
mov
or
jg
addr16
repnz
shufps
enter
pop
pop
add
and
pop
xchg
add
pop
out
and
mov
xchg
mov
inc
xchg
cs
fild
adc
test
pop
adc
out
sub
stos
arpl
out
fisttp
fdiv
into
cmp
inc
adc
cmp
xor
dec
xlat
test
sub
std
jo
adc
xchg
pop
jg
or
iret
push
pop
je
clc
xchg
cmp
js
dec
mov
stos
sub
rol
adc
jecxz
shl
or
mov
cmp
jecxz
pop
inc
mov
shr
out
xor
push
and
mov
pushf
pop
or
ror
test
mov
dec
(bad)
lea
cmp
fild
mov
jle
push
or
fimul
aaa
add
push
sub
arpl
xchg
add
push
push
push
repnz
xchg
push
pop
movzx
fwait
dec
mov
sub
daa
dec
sbb
xchg
sub
jb
ret
test
je
leave
dec
and
add
adc
or
(bad)
push
mov
test
fwait
push
jb
(bad)
pop
dec
popf
repnz
jmp
push
aaa
fcomp
test
push
and
pusha
sub
adc
pop
test
jnp
fwait
adc
mov
inc
cmps
add
cmp
ins
jmp
xor
cmp
jp
pop
sub
cmp
adc
ins
iret
push
push
jo
mov
cmp
inc
test
cdq
jmp
jp
test
popa
xchg
sub
or
sub
gs
rcl
add
(bad)
pop
clc
sbb
sub
mov
(bad)
popf
or
sbb
sub
jg
ins
les
les
sub
mov
sub
mov
xor
jmp
xor
or
push
push
fcomp
xchg
nop
sti
outs
inc
mov
add
retf
push
sbb
add
add
iret
mov
mov
push
inc
push
dec
ror
lods
add
push
and
push
(bad)
out
in
leave
cmp
mov
mov
jne
pmulhuw
jecxz
push
add
aas
add
mov
lods
cwde
push
xchg
pop
pop
mov
addr16
int
pop
mov
add
adc
push
jg
ffree
repnz
test
imul
loopne
pop
stc
pop
cmps
mov
mov
adc
push
aad
or
rcl
mov
add
sbb
or
in
add
adc
adc
adc
and
pop
mov
inc
out
jne
add
mov
out
adc
pop
inc
(bad)
sub
test
test
xchg
and
cmp
jp
jg
lods
sub
sub
test
ret
jo
imul
lock
rcr
jns
cdq
out
call
popa
and
or
or
movs
push
test
aam
cmp
add
and
movs
in
(bad)
cwde
cmp
mov
mov
sbb
push
mov
adc
push
pop
rol
lock
lock
dec
retf
stos
add
push
push
or
push
mov
or
dec
push
outs
sub
mov
or
ret
xchg
mov
jle
or
rcl
sbb
cs
or
adc
fst
or
rcl
add
(bad)
dec
fistp
into
dec
mov
inc
test
and
(bad)
mov
imul
mov
mov
jbe
xor
add
sub
cmp
mov
push
push
cmp
popa
loope
jmp
dec
adc
push
shr
adc
or
out
dec
jnp
cmp
or
jle
adc
mov
jmp
adc
add
aas
pop
mov
dec
dec
test
int3
push
push
cmp
repnz
ins
xor
enter
xor
rcr
adc
pop
cmp
or
loop
mov
stc
mov
int3
dec
out
fidivr
add
aam
dec
adc
int3
inc
cmp
enter
mov
adc
loopne
jge
xor
je
jle
sbb
xor
and
dec
rcr
mov
or
cmps
stc
mov
fadd
ins
xchg
clc
sbb
call
mov
pop
inc
dec
or
dec
add
add
or
test
add
sti
aad
and
paddusw
jp
pop
and
lock
lock
pop
sbb
cmp
add
test
nop
mov
push
not
xchg
pop
mov
jmp
sub
das
lods
lds
or
jecxz
ds
add
dec
int3
repz
mov
xchg
cdq
pop
bound
sbb
adc
mov
in
fsub
test
sbb
push
adc
xchg
jno
mov
nop
push
jbe
xchg
loop
dec
mov
xchg
and
inc
in
dec
into
mov
push
pop
pop
jbe
fisub
fsubr
jne
mov
sub
sub
sub
push
sub
ret
fucom
jo
mov
fmul
xchg
mov
mov
push
test
sbb
mov
aaa
mov
pusha
mov
dec
cld
arpl
cmp
aam
dec
int3
sub
(bad)
fdiv
cmps
icebp
add
ja
jl
fs
xchg
sub
test
cmp
shr
push
push
test
xchg
fisub
das
jmp
idiv
and
out
(bad)
push
jnp
mov
rol
jmp
movs
pop
mov
div
xor
push
adc
add
pop
add
xor
sub
or
push
shr
les
(bad)
sbb
and
xchg
add
scas
les
test
aam
mov
(bad)
lock
and
lods
aam
sbb
sub
outs
in
and
jne
jo
(bad)
or
xor
inc
in
mov
or
loope
(bad)
(bad)
xchg
or
add
mov
cmps
xor
lods
add
pop
aam
add
jg
std
xchg
add
test
mov
inc
int
rol
add
push
sub
loopne
cmp
inc
adc
jle
arpl
inc
and
add
mov
or
sahf
xchg
popa
scas
add
lock
dec
sbb
push
push
aam
sbb
mov
push
fld
dec
mov
adc
sbb
xor
add
loope
loope
scas
lods
mov
inc
and
or
popa
pop
inc
out
lods
pop
inc
sbb
pushf
or
sub
pop
adc
scas
lea
add
sub
sub
(bad)
mov
fisttp
inc
or
add
rol
adc
jp
xchg
xchg
pop
push
scas
jns
or
sbb
rol
sub
xlat
adc
hlt
push
rol
adc
in
pop
ret
popa
sub
push
leave
dec
(bad)
inc
test
shl
cmps
call
xlat
sar
dec
jae
inc
cmp
loopne
xchg
jne
dec
cmp
push
int3
sub
jns
and
xchg
clc
add
movs
inc
adc
dec
in
in
in
push
xchg
xor
and
(bad)
cmps
sub
hlt
add
gs
ret
dec
xor
adc
cmp
jno
xor
dec
and
mov
call
push
or
add
inc
mov
dec
sbb
dec
inc
add
add
cmp
sub
icebp
adc
xor
addr16
div
push
or
mov
or
je
push
fisub
movs
or
inc
shl
mov
lock
sbb
sbb
out
cmp
pop
gs
xor
daa
fmul
add
cmp
add
sub
test
or
ins
add
push
in
push
sbb
mov
xchg
push
jno
rcr
adc
clc
push
jecxz
test
and
sub
dec
jg
cmp
mov
inc
pop
mov
adc
int
xchg
dec
xor
cmp
inc
call
cmp
or
sub
adc
pop
sbb
loope
mov
and
jmp
dec
mov
fs
(bad)
in
xchg
dec
pop
loope
adc
sub
mov
loopne
je
pop
jnp
push
stos
or
das
popa
xchg
mov
push
or
inc
rcl
neg
and
mov
pushf
mov
adc
add
mov
mov
mov
in
ins
adc
push
jo
push
xchg
lods
and
add
or
pop
xor
mov
sbb
cmp
or
push
add
cmp
jl
mov
ret
cmps
mov
xchg
sbb
imul
lea
out
mov
pop
test
sub
lock
sar
adc
mov
mov
lock
push
(bad)
add
pusha
mov
mov
daa
outs
inc
fsubr
pop
je
adc
mov
or
test
(bad)
jb
arpl
cmp
fbld
aam
ins
xor
dec
xlat
jbe
or
test
pop
push
cmp
fsub
push
mov
pop
pop
jns
mov
cmp
call
pusha
je
pop
xchg
mov
mov
pop
test
shr
jp
ret
retf
mov
loopne
pusha
mov
jmp
das
xor
cmp
mov
mov
(bad)
push
push
push
(bad)
sbb
xchg
or
or
punpckhdq
pusha
iret
aam
dec
nop
das
xor
xor
lahf
cmp
retf
(bad)
ror
cmp
outs
lock
stos
push
add
xor
popf
in
rcl
mov
pop
lods
mov
and
mov
add
pop
mov
(bad)
inc
mov
dec
dec
call
push
cdq
das
inc
pusha
xchg
aaa
dec
cmp
movs
xor
rcr
push
cli
push
xchg
rol
xchg
(bad)
push
xor
mov
xchg
addr16
sbb
adc
test
loope
rol
clc
push
adc
adc
inc
pusha
jne
add
in
loop
push
adc
dec
adc
outs
mov
ins
mov
ret
push
add
mov
clc
jmp
xor
cmp
mov
inc
pop
xor
mov
pop
je
movs
add
mov
ins
test
cmp
add
jmp
jmp
clc
sub
sbb
lods
int
lahf
inc
sbb
add
aam
lea
out
call
leave
pop
jmp
pop
xchg
push
mov
cmp
jne
mov
inc
ja
or
mov
rol
mov
xchg
test
mov
push
mov
jo
jmp
inc
mov
add
nop
pop
sub
jmp
or
adc
push
ds
pusha
add
and
mov
out
add
mov
xchg
mov
fisubr
lock
dec
(bad)
pop
mov
outs
add
pop
pop
or
outs
inc
and
mov
add
rcr
xor
stc
movs
and
push
repnz
cmc
sub
pop
addr16
xor
inc
cmp
lds
mov
rol
mov
popa
pop
and
or
test
ror
or
nop
(bad)
mov
mov
cmp
xchg
xchg
loop
pushf
sub
fisub
add
pop
jmp
mov
mov
xchg
cs
adc
je
dec
div
into
mov
jp
add
add
and
je
das
and
cmp
pop
pop
lds
mov
nop
gs
jne
xor
mov
cli
sbb
mov
xor
(bad)
pop
ror
pop
sbb
pop
or
adc
xchg
cmp
sub
cmc
mov
bnd
dec
fwait
mov
lods
and
mov
push
mov
iret
jle
mov
jl
mov
inc
adc
ficom
add
inc
jne
inc
xor
pusha
inc
add
jo
cmp
adc
jns
rcl
retf
pop
nop
jge
jmp
add
xor
stc
bound
mov
(bad)
add
dec
hlt
(bad)
rcl
and
sahf
and
pop
and
stc
popf
mov
ds
test
add
push
and
sbb
add
inc
loopne
test
pop
and
or
push
xchg
mov
pop
adc
ret
in
test
test
sahf
test
mov
mov
mov
outs
jns
mov
inc
jp
pusha
shr
push
hlt
mov
call
movs
leave
cmp
add
or
add
call
inc
inc
sub
sub
push
loope
inc
jo
adc
aas
inc
cmp
pusha
mov
or
or
jbe
outs
push
xor
or
sahf
enter
mov
mov
or
imul
inc
add
inc
add
dec
xor
stos
push
and
sbb
pop
das
ficomp
std
sub
lock
jnp
pushf
test
adc
rcr
nop
imul
or
rol
(bad)
cmp
fs
inc
clc
or
xor
lea
pop
sbb
or
out
ja
adc
pop
mov
sbb
and
(bad)
in
pusha
adc
xor
(bad)
mov
pop
pusha
ins
mov
adc
ret
mov
pop
xor
cmp
sbb
and
add
mov
sbb
add
movs
push
test
test
popf
lahf
rcl
imul
push
or
add
or
jo
imul
loopne
xchg
adc
xchg
jge
sub
fwait
add
inc
neg
sbb
stos
or
clc
in
or
ficomp
rol
(bad)
push
cmp
sub
(bad)
mov
or
sbb
pop
(bad)
cmp
push
pusha
in
push
jo
pop
cmps
outs
gs
jge
and
in
add
cwde
adc
fiadd
pop
cmp
lea
out
in
je
lahf
sub
adc
mov
imul
mov
xor
sahf
or
mov
jmp
fisttp
popa
ss
inc
sbb
dec
outs
mov
jmp
cmp
es
add
rcl
and
fwait
mov
inc
xchg
addr16
jmp
je
sub
add
add
add
sbb
fs
xor
add
scas
xchg
mov
sbb
and
adc
cmp
jne
and
pop
shl
or
into
mov
add
rcr
mov
or
inc
iret
add
loopne
fiadd
and
lods
mov
and
cmp
inc
adc
aas
aad
jmp
aad
inc
dec
or
pop
add
dec
int
or
dec
bound
pusha
push
push
jb
fdivr
jl
fs
sbb
inc
adc
inc
enter
add
loopne
ret
or
sti
xchg
and
ss
adc
adc
sbb
fimul
or
shr
sbb
cmp
or
inc
mov
iret
push
mov
loopne
sbb
or
jmp
mov
daa
sbb
out
sub
push
adc
and
movs
adc
inc
push
jmp
mov
sbb
adc
inc
add
sbb
sysret
jbe
adc
mov
jmp
sub
sbb
or
pop
js
sub
sbb
pop
or
test
jns
inc
inc
adc
inc
shl
and
ret
daa
or
cmc
mov
clc
sub
and
pop
inc
hlt
mov
and
xchg
jmp
jne
add
outs
or
rol
jne
cmc
jae
jns
adc
aaa
cmp
jg
add
xor
fidiv
mov
add
aaa
mov
adc
sub
aas
adc
arpl
xchg
out
and
jo
and
xchg
jg
or
(bad)
(bad)
jg
pop
jg
ins
(bad)
mov
xor
mov
mov
xor
ret
or
jmp
cmc
and
lock
and
inc
lods
mov
stos
pusha
mov
sti
cld
mov
mov
mov
fs
xor
jl
cmp
loopne
cmps
mov
push
and
out
lock
and
add
cmp
sbb
sub
jle
ds
adc
add
loop
adc
(bad)
test
push
pusha
or
push
or
adc
in
mov
xchg
mov
mov
and
stos
pop
loop
push
clc
sub
push
or
adc
cmp
call
or
mov
or
call
jnp
fs
sbb
ja
jne
sub
inc
or
test
(bad)
or
cmp
mov
or
xchg
and
pushf
add
push
and
ins
or
arpl
(bad)
cld
mov
mov
mov
int
jmp
iret
(bad)
jne
prefetcht2
adc
xchg
call
or
push
xor
test
jne
sub
pop
xchg
push
clc
adc
add
mov
sub
neg
out
jecxz
mov
dec
cwde
lods
pop
test
nop
clc
adc
inc
enter
mov
adc
mov
test
adc
enter
pop
out
neg
jne
push
jmp
pop
fimul
sbb
dec
push
or
retf
mov
imul
fdiv
rol
mov
pop
in
test
pop
movs
or
pop
inc
add
and
adc
out
add
sub
adc
sub
pushf
popa
mov
add
sbb
shr
inc
(bad)
fild
sub
or
inc
or
xor
je
call
dec
inc
and
int3
pop
sbb
push
dec
sub
test
inc
aas
call
(bad)
xor
test
add
xchg
int
push
fwait
ins
hlt
xor
add
inc
pop
push
xchg
sub
call
add
cld
adc
push
xor
inc
sub
ss
in
das
imul
cmp
xchg
sbb
xor
cs
add
sub
adc
xor
imul
push
inc
sub
sub
pop
in
ret
xor
lock
inc
lods
push
gs
call
pop
add
mov
inc
jno
loop
jne
cmp
test
repnz
sbb
rol
and
sub
or
lods
aam
enter
icebp
mov
icebp
scas
xor
lea
(bad)
mov
xor
mov
iret
imul
push
push
or
(bad)
inc
or
(bad)
xchg
push
mov
mov
push
sbb
imul
mov
mov
sbb
inc
add
call
or
cmp
call
jbe
fwait
push
inc
cvtpi2ps
cli
sub
add
cmp
jmp
(bad)
or
cmp
in
sub
pop
pop
or
xchg
or
or
rcl
push
xor
arpl
xchg
ret
xchg
and
(bad)
ret
data16
fadd
push
imul
sahf
or
in
push
or
sbb
nop
cdq
aas
mov
or
and
inc
jne
ds
xor
mov
neg
aam
inc
xlat
stos
xchg
xlat
sub
in
mov
cmp
or
inc
sbb
mov
xchg
or
and
lods
fild
rcl
cmp
repnz
adc
mov
and
push
push
pusha
in
jnp
scas
clc
push
aad
icebp
pop
jl
lea
jecxz
jne
clc
js
adc
movs
adc
ret
jge
(bad)
and
push
cmps
push
add
jecxz
ficomp
das
mov
mul
fcomip
adc
stos
xor
outs
enter
stos
mov
or
test
jns
mov
ins
push
or
cdq
cmp
mov
cs
(bad)
fidiv
push
pop
or
in
jo
out
jne
sbb
loopne
pop
jo
push
push
int3
xor
jmp
inc
in
push
sbb
push
mov
or
dec
(bad)
aam
and
icebp
mov
scas
mov
icebp
retf
daa
lock
mov
adc
inc
(bad)
jle
or
adc
inc
sbb
push
rol
fs
dec
ins
jbe
and
or
push
mov
push
adc
test
inc
pusha
mov
adc
arpl
jmp
xlat
mov
sbb
sub
or
xor
inc
js
ficom
jle
fwait
movs
test
push
fs
jb
stc
and
stos
mov
mov
jo
inc
inc
cmps
fild
fmul
mov
retf
adc
lock
inc
mov
jns
and
(bad)
mov
mov
xchg
jo
cld
ror
sub
mov
out
ror
xchg
out
jno
arpl
imul
add
lahf
mov
push
(bad)
idiv
add
mov
push
pop
ftst
jns
inc
sub
fadd
jb
ja
inc
jp
xor
xor
enter
in
ins
sbb
inc
inc
loop
mov
shr
inc
inc
ins
sub
(bad)
(bad)
jnp
xchg
sbb
scas
aam
push
xor
xor
lods
or
push
mov
xchg
in
and
push
sbb
lea
js
xor
je
arpl
sbb
div
addr16
outs
inc
retf
sub
push
and
push
cld
rcr
jne
xchg
ror
cmp
daa
arpl
xchg
push
push
inc
sbb
or
adc
adc
and
mov
mov
mov
sbb
push
add
and
inc
clc
add
pop
pop
clc
sub
push
cmp
movs
xor
xor
pushf
dec
mov
dec
dec
in
add
lock
xchg
scas
mov
iret
sbb
stos
sbb
loope
mov
adc
push
push
inc
push
sub
sbb
dec
push
inc
or
lea
(bad)
xchg
cmp
mov
pop
mov
stos
inc
push
test
jp
pop
mov
addr16
xchg
loopne
sti
gs
mov
pop
rsm
pop
jbe
outs
mov
minps
movs
adc
mov
pop
push
stos
ret
and
mov
cmp
xlat
inc
or
add
(bad)
push
mov
xchg
mov
mov
and
dec
loope
sbb
ss
xchg
push
jne
popa
jns
inc
outs
ins
add
xor
push
adc
push
ss
sub
aas
fisttp
test
adc
retf
inc
enter
cwde
adc
xchg
arpl
and
test
cld
je
jae
add
pushf
ror
cdq
lock
push
adc
dec
and
inc
xor
adc
test
add
or
div
adc
push
and
sbb
adc
cmps
shl
push
das
push
addr16
lock
add
or
mov
add
lahf
push
dec
add
and
jl
pop
cmp
cmp
mov
adc
pop
inc
call
adc
jg
pop
adc
sub
ins
ja
sbb
jg
clc
dec
in
jl
popa
cmps
rol
sub
cmp
and
xlat
dec
mov
push
xchg
or
scas
cmp
push
ret
or
and
pop
test
std
add
jo
mov
rcl
cmc
in
test
lahf
scas
dec
sbb
not
jb
push
and
(bad)
and
adc
fidivr
mov
jl
or
push
in
jmp
push
add
dec
cmp
jg
xor
out
jmp
jbe
dec
dec
adc
repnz
cmp
mov
out
aam
aam
iret
and
mov
mov
dec
dec
dec
push
jno
adc
and
sar
push
fisub
or
xor
add
ss
jns
sub
add
jne
xchg
je
cmp
pop
lahf
ss
sbb
mov
xlat
add
sti
cmp
outs
je
or
pusha
push
mov
xor
or
push
aam
mov
imul
pop
adc
mov
or
popf
mov
adc
xor
mov
mov
nop
mov
add
fwait
popf
hlt
xchg
sbb
dec
mov
jne
xlat
sbb
xchg
outs
je
clc
mov
ss
inc
push
or
jno
movs
ficom
cmps
pop
or
xchg
pop
fnstcw
sbb
jne
or
clc
adc
or
push
mov
add
cmp
sub
jae
xchg
sbb
scas
adc
fdiv
stos
inc
push
into
enter
in
sbb
adc
imul
es
push
inc
bound
mov
inc
push
or
adc
mov
movzx
mov
add
pop
fld
js
push
das
div
push
inc
test
xor
pop
xchg
mov
out
ret
add
inc
rcr
mov
adc
pop
mov
jnp
paddq
or
push
inc
pop
retf
pop
push
mov
xchg
loopne
inc
loopne
jmp
nop
call
inc
popf
loopne
inc
cmp
push
xor
inc
aam
aam
fdivr
lock
inc
js
lea
jmp
and
cmps
cmp
das
add
and
les
push
pop
(bad)
mov
mov
lds
sub
sub
stos
adc
retf
nop
push
jg
adc
lods
or
int
or
inc
or
mov
adc
popa
pop
jecxz
data16
dec
mov
adc
adc
jmp
dec
sub
ja
dec
cmp
adc
or
inc
adc
push
pop
mov
lea
lea
lea
test
aam
sbb
lock
mov
push
inc
sbb
pop
push
push
scas
mov
or
fiadd
pop
mov
pop
add
mov
or
and
push
popa
nop
cmp
cwde
jge
jl
fmul
adc
gs
sub
mov
mov
sub
cmp
adc
aaa
inc
mov
xor
loop
fcomp
inc
sub
sar
add
or
inc
mov
push
mov
inc
cmps
cwde
test
add
sahf
cmp
mov
data16
mov
sub
push
mov
jo
in
sub
xchg
or
mov
movs
jb
or
nop
retf
in
lock
adc
sub
add
inc
outs
inc
movs
mov
dec
dec
dec
aad
fcom
dec
push
fisttp
inc
add
dec
adc
ins
popf
movs
mov
push
rcr
push
gs
adc
mov
or
enter
jne
das
push
rol
inc
adc
push
sbb
test
aaa
mov
mov
inc
in
inc
out
aaa
movs
mov
gs
xchg
inc
or
loopne
jae
pop
adc
pop
jno
push
or
cmp
adc
out
mov
movs
jp
ret
add
push
pop
cmp
push
lods
mov
jno
mov
add
cdq
mov
into
aam
scas
push
ror
push
sub
ret
lahf
addr16
pop
or
js
cmp
adc
and
shr
or
pop
dec
mov
push
add
pop
das
or
cmp
movs
mov
adc
cdq
lods
sub
and
(bad)
popa
and
cs
aam
sub
sub
ss
sub
add
enter
adc
leave
cmp
mov
rol
fnstenv
lods
fwait
les
rcl
sbb
adc
pop
sub
repnz
xor
xor
sub
js
test
add
xchg
dec
sbb
adc
int3
lods
enter
das
in
ins
jl
inc
add
jge
mov
sub
adc
inc
fs
sbb
push
mov
cmp
enter
test
cdq
and
nop
std
and
mov
mov
xlat
les
es
sub
mov
pop
sub
repnz
stos
push
faddp
inc
sub
add
adc
xor
add
xchg
add
cmp
jns
mov
fcomp
stos
les
sub
dec
scas
lods
mov
mov
inc
push
xchg
and
sub
add
stc
push
mov
loopne
or
lock
push
adc
push
nop
sub
sub
xchg
xor
shl
pop
bound
and
add
arpl
je
dec
dec
add
sub
retf
jbe
stos
outs
(bad)
xor
fcomp
test
stos
mov
faddp
push
dec
mul
in
jns
retf
inc
sub
inc
add
mov
ds
std
int
pop
aaa
(bad)
hlt
push
mov
mov
cmp
cmp
mov
pop
movs
aaa
pop
sub
test
stc
imul
mov
push
enter
je
scas
mov
add
push
jno
adc
pop
pop
xor
loopne
or
push
sahf
mov
xlat
jo
in
sbb
enter
adc
jns
cwde
rcl
int
cld
int
into
repnz
into
inc
add
into
test
jecxz
hlt
sbb
arpl
push
push
xlat
inc
push
ret
inc
mov
mov
or
cmove
test
or
xchg
test
retf
out
mov
aaa
outs
jg
adc
js
add
shr
sbb
add
das
xor
fild
pop
cmp
jbe
xlat
mov
(bad)
sub
xchg
mov
mov
inc
mov
test
xor
mov
inc
jge
lea
sbb
or
pop
(bad)
mov
and
push
sub
daa
cmp
jo
adc
or
xor
push
(bad)
jge
pusha
test
inc
jmp
imul
sbb
fwait
loope
and
ins
adc
adc
mov
pop
mov
xor
scas
call
icebp
test
leave
ins
mov
pusha
rol
and
cmp
cmp
inc
sub
xchg
adc
scas
push
and
sbb
inc
sub
and
or
and
cmp
pop
jmp
cdq
rcl
and
push
push
lock
push
jle
and
add
push
push
repz
and
push
mov
mov
mov
rol
mov
sbb
xor
hlt
pop
mov
or
jecxz
adc
cmp
pop
mov
pop
aas
cmp
jne
jle
daa
test
out
cmp
xchg
nop
popf
ds
add
add
nop
jne
and
daa
fidivr
das
pop
test
add
or
shl
sar
dec
bound
add
mov
xor
or
adc
mov
jmp
pop
dec
and
push
inc
jp
pop
sub
not
pop
xor
retf
in
call
cs
inc
and
cmp
push
mov
jne
pop
mov
gs
dec
jmp
dec
add
add
cmp
push
mov
daa
cmp
int3
gs
je
adc
inc
out
aas
and
inc
inc
or
retf
sahf
cmp
and
pop
add
push
mov
rol
push
push
xchg
pop
add
fcom
jl
bound
xchg
data16
add
or
pop
pushf
ss
add
or
push
sbb
or
xor
xchg
inc
xor
push
mov
int3
adc
and
shl
mov
push
xor
lods
cmp
vcvtdq2pd
clc
or
shl
popa
(bad)
adc
push
mov
in
adc
test
sbb
outs
inc
xor
fcomp
mov
xor
call
xor
test
inc
xchg
retf
inc
rol
xor
pusha
adc
push
inc
xor
inc
push
es
imul
sbb
adc
adc
sbb
pop
mov
inc
or
mov
fs
pop
data16
je
shr
pop
and
data16
sbb
xor
inc
bound
mov
ror
or
cs
push
pop
sbb
shl
adc
sbb
data16
xchg
jl
call
test
xor
or
mov
sub
dec
jb
rol
xor
inc
pop
mov
jae
mov
add
nop
push
inc
xchg
jo
test
mov
ret
enter
test
sbb
pop
div
cmps
mov
cmps
inc
aam
and
sub
adc
aad
pop
out
aam
sbb
push
push
(bad)
push
inc
(bad)
push
add
lods
pop
hlt
fiadd
fs
xlat
sbb
cwde
loopne
jmp
push
adc
dec
push
lods
shl
mov
shl
lea
aad
es
add
sub
jmp
add
sbb
xor
adc
mov
push
aas
and
loope
inc
sbb
dec
sub
ror
add
aaa
cmps
lahf
or
cmps
add
hlt
mov
jle
leave
ja
inc
call
inc
xor
adc
dec
and
arpl
fild
adc
cmp
or
inc
push
jbe
icebp
aas
clc
jg
cmp
jge
les
pop
sub
mov
sbb
push
jo
js
sbb
add
cmp
mov
test
sbb
or
enter
(bad)
inc
loope
mov
test
call
and
aad
in
pop
out
nop
shl
xchg
lods
sub
(bad)
pop
inc
icebp
and
outs
mov
mov
adc
push
aad
in
dec
shr
dec
xor
cmp
sar
pop
test
sub
add
adc
fdiv
aas
or
xlat
dec
dec
call
push
sub
out
push
push
push
fisubr
fwait
sub
loopne
int
(bad)
adc
stos
jg
sar
mov
xlat
nop
xor
pop
ror
jl
(bad)
das
movs
les
or
pusha
jmp
xchg
push
add
xchg
(bad)
sub
adc
lahf
adc
pop
hlt
mov
in
enter
(bad)
fsubr
fdiv
sub
outs
push
mov
inc
add
sub
push
iret
out
mov
sbb
cmp
sub
retf
fcom
pop
add
pop
aam
js
and
add
push
mov
sub
cs
cli
dec
or
sub
add
push
sub
cmp
scas
jmp
lods
push
bound
hlt
jnp
fldcw
jmp
sahf
fst
popf
iret
xchg
pusha
push
push
ds
ins
sbb
das
push
add
in
movs
fxch
in
dec
cmp
hlt
loopne
mov
nop
rcl
add
outs
pop
aaa
ud2
sub
inc
or
push
aaa
inc
mov
inc
test
sub
jl
ror
sbb
mov
out
or
(bad)
(bad)
test
nop
xchg
sub
xor
imul
pop
enter
adc
xor
mov
adc
sahf
call
imul
or
cmp
xchg
cmp
mov
enter
outs
pop
leave
fs
push
in
or
sub
call
add
dec
daa
mov
cmp
adc
push
cmp
fdivr
retf
add
inc
sbb
fcomp
cmp
add
push
adc
jne
and
and
push
adc
fcom
stc
mov
push
or
inc
pop
loop
push
(bad)
inc
or
dec
pushf
fwait
adc
or
bound
adc
cmp
cli
pop
cmps
jmp
retf
push
adc
ret
inc
(bad)
ror
movs
call
popf
sub
fldenv
sbb
dec
hlt
cmp
popf
jl
pop
jp
imul
jbe
aaa
sub
data16
test
lock
pop
cmps
(bad)
ins
inc
and
mov
xchg
push
dec
push
in
mov
mov
sbb
adc
shl
pop
cmp
hlt
dec
loope
xor
movs
xlat
push
stos
shr
mov
inc
cdq
dec
int3
fmul
aas
jne
xlat
sub
cs
(bad)
inc
js
(bad)
test
xor
aaa
aaa
mov
mov
mov
or
jo
cmp
mov
sub
ins
jno
xchg
outs
push
ficom
hlt
into
jo
shr
jo
add
arpl
push
lods
cmps
outs
ss
xor
arpl
dec
dec
and
adc
data16
das
cmp
jl
pop
sub
in
and
jmp
or
xchg
cmp
je
mov
mov
or
lock
cwde
add
sub
mov
cmp
(bad)
fs
loop
inc
adc
mov
mov
jmp
js
push
push
push
(bad)
cmp
push
push
aam
movs
push
jg
inc
(bad)
cs
adc
mov
dec
mov
inc
dec
xor
inc
xor
cmp
adc
inc
sbb
adc
mov
add
test
shr
or
ins
xchg
lods
mov
xchg
adc
lods
popa
cs
idiv
xchg
adc
dec
add
leave
pop
repnz
loop
call
dec
loop
pop
ins
mov
ror
and
inc
or
enter
inc
fdivp
inc
cmps
add
pushf
rol
mov
add
sbb
ror
add
lahf
rcr
cmp
rcl
data16
xor
js
pushf
call
or
neg
push
scas
(bad)
ror
xlat
inc
mov
mov
sbb
xchg
mov
inc
inc
inc
cmp
sub
test
call
mov
mov
ja
lock
mov
mov
es
in
push
in
test
inc
mov
pop
and
outs
sar
cmp
iret
jecxz
and
or
push
cmp
push
push
adc
loope
outs
cmps
xor
push
sub
cdq
or
loop
add
or
adc
ds
imul
rcl
or
add
fiadd
adc
adc
rcr
ror
in
dec
in
pop
dec
mov
dec
dec
inc
out
push
inc
xchg
shl
loopne
push
(bad)
push
and
xor
pop
xchg
push
sub
je
lahf
lock
mov
sub
mov
cmp
out
ss
ror
imul
sbb
jp
inc
push
sub
mov
cmp
sub
and
into
mov
or
xchg
adc
pop
xor
mov
dec
pop
jecxz
cmps
mov
out
add
mov
and
add
push
pusha
mov
(bad)
pop
and
sub
clc
dec
es
cmp
jne
ss
pop
aas
ror
add
mov
xor
sub
inc
push
sub
jno
(bad)
cli
loopne
inc
jmp
in
inc
add
and
clc
add
push
inc
lods
and
add
add
sbb
aad
dec
and
or
xchg
add
std
mov
(bad)
mov
test
dec
xchg
or
jle
sbb
inc
sbb
mov
ret
sti
jbe
dec
mov
je
int3
sar
ret
inc
gs
add
push
adc
jle
xor
mov
adc
ins
dec
fcmovnbe
adc
or
call
xchg
call
push
xchg
call
sbb
jae
lock
or
in
jo
jmp
(bad)
lock
inc
outs
push
xchg
mov
pop
inc
inc
xor
xchg
sub
fucom
(bad)
int3
add
xchg
push
xor
inc
and
in
in
sub
sub
stos
xor
int3
cwde
cmps
jae
pop
inc
out
inc
std
mov
push
add
dec
pop
or
push
retf
and
and
add
shl
shr
inc
or
or
add
test
push
cmp
pop
enter
inc
jmp
add
retf
cmps
and
je
sbb
inc
push
push
xchg
sub
mov
movs
xor
ins
bound
iret
or
or
popa
jb
nop
loopne
or
sub
shr
add
push
adc
jg
add
push
bound
ins
mov
sub
xchg
adc
cmovnp
sub
and
adc
or
mov
movs
jae
es
rol
and
mov
pop
add
movs
fwait
test
xor
das
mov
dec
jp
xchg
bsf
fbld
das
jg
fs
mov
fdiv
or
jl
out
push
cmp
pushf
rol
cld
repz
shl
test
call
add
sub
jbe
idiv
jbe
loope
pop
mov
in
pop
push
add
add
sbb
outs
push
mov
sub
dec
pop
inc
add
add
clc
or
add
inc
push
push
inc
add
adc
and
and
inc
mov
(bad)
(bad)
cmp
adc
fs
cmps
stc
xor
xor
lods
inc
cmp
xchg
pop
sbb
std
adc
add
push
mov
mov
inc
xchg
sub
idiv
mov
pop
xchg
pushf
cmp
lock
adc
sar
ror
cmp
inc
mov
push
cmps
gs
addr16
sahf
xchg
xor
sub
push
in
push
push
push
imul
(bad)
mov
inc
pop
add
(bad)
xchg
or
inc
xchg
push
jne
enter
or
jne
ja
inc
mov
loopne
dec
dec
pop
nop
daa
dec
pop
inc
(bad)
repnz
ja
daa
dec
dec
and
pop
push
sub
push
(bad)
cmp
ror
rol
rol
or
jo
popa
sub
lods
nop
push
mov
test
dec
or
mov
xor
add
shld
les
fst
jo
movs
sub
jl
and
(bad)
adc
test
fcmovne
cmp
jg
iret
mov
je
movs
pop
xchg
sub
pop
sahf
cmps
nop
dec
sahf
push
and
test
xchg
xchg
xor
loopne
stc
pop
push
inc
test
cmp
add
(bad)
inc
pop
adc
sbb
in
popf
add
pop
add
sahf
mov
sub
js
push
(bad)
in
out
inc
adc
bnd
push
outs
push
imul
add
xchg
cdq
mov
push
and
add
rcr
xchg
pop
cmps
loope
jnp
and
cmp
inc
aam
sbb
es
and
fnsave
retf
dec
enter
push
push
into
jmp
dec
or
into
in
pop
jb
mov
pop
fcomp
inc
pop
add
scas
ror
jns
pop
test
xchg
andps
inc
ins
test
jo
jo
sbb
mov
dec
xor
add
pop
cmp
xchg
fs
add
test
or
popa
nop
sysret
and
loopne
lds
or
scas
or
mov
or
inc
push
mov
xchg
mov
cmp
inc
xchg
add
sub
xor
xor
pop
or
sbb
mov
ja
neg
or
mov
push
sbb
mov
push
stos
or
adc
test
ret
inc
imul
sahf
mov
(bad)
pop
dec
jmp
cmc
inc
adc
cmps
iret
dec
add
fcomp
cmp
inc
push
mov
adc
push
clc
dec
adc
and
test
scas
mov
and
add
inc
and
jns
adc
jns
and
xor
outs
call
cmp
(bad)
push
xor
jmp
mov
dec
mov
inc
push
fisttp
(bad)
outs
cmp
(bad)
(bad)
pop
inc
xchg
inc
cli
sub
jae
es
push
push
je
fwait
or
mov
inc
out
push
inc
jge
xor
stos
popf
shr
xchg
add
(bad)
mov
sar
stos
push
nop
cmps
jge
cli
push
sbb
or
mov
sbb
mov
push
js
ret
add
lock
jb
mov
xor
cmp
out
(bad)
sub
add
sub
push
inc
sbb
ins
movs
inc
inc
dec
pusha
sub
dec
call
mov
pop
push
or
sub
dec
ret
or
icebp
xor
mov
dec
shl
and
push
sub
or
jb
mov
cmps
adc
sbb
imul
pop
xchg
cmp
div
aas
xor
pop
inc
xchg
cdq
inc
daa
jl
sub
pop
cmp
outs
push
into
ins
lahf
adc
mov
inc
push
add
and
ror
popf
dec
outs
dec
adc
or
adc
dec
dec
hlt
jp
adc
fnsave
inc
jmp
xor
push
xchg
out
inc
jmp
popa
mov
mov
or
jmp
aas
sub
add
(bad)
in
sbb
push
mov
int
mov
or
in
sti
inc
push
adc
push
add
fstp
stc
inc
es
nop
clc
loope
jp
lods
sbb
mov
mov
add
(bad)
and
cmps
add
inc
mov
dec
xchg
dec
cmp
cwde
push
mov
retf
mov
ja
sbb
xor
pusha
je
mov
test
jmp
popa
mov
add
mov
dec
dec
popa
sub
daa
cmp
inc
mov
shl
fcmovnbe
mov
imul
adc
and
jmp
xchg
adc
pop
lock
add
or
xor
ins
dec
aam
cli
sub
cmp
outs
cmps
lods
or
or
jo
lahf
movs
mov
lds
jmp
jmp
jmp
xor
push
xor
add
pop
leave
pop
cmp
sub
in
xlat
adc
in
loop
and
push
jne
jb
(bad)
mov
dec
adc
nop
(bad)
xchg
push
pop
pushf
in
inc
and
mov
jb
and
in
and
clc
pop
leave
add
jge
cmp
pop
sbb
cmp
nop
mov
add
es
and
sbb
adc
shl
bound
adc
cmp
or
adc
and
inc
inc
std
lock
pusha
xchg
popa
in
push
aas
mov
cmps
and
mov
dec
mov
dec
aas
xor
jbe
add
call
push
xor
pop
aas
call
cmps
sbb
je
or
bound
shl
jecxz
mov
sub
mov
(bad)
push
and
(bad)
(bad)
mov
adc
mov
add
push
jmp
and
inc
sbb
jg
cmp
cmp
inc
xchg
sub
push
push
mov
les
push
adc
add
cli
movzx
inc
inc
add
les
mov
push
pusha
cmps
shl
(bad)
xchg
mov
and
lods
inc
and
add
mov
push
xchg
and
loopne
or
dec
popa
jle
adc
repz
fucomi
dec
data16
mov
loop
daa
loopne
xchg
pop
shl
adc
sbb
fisubr
stos
or
jo
add
fisub
push
sbb
and
inc
(bad)
push
or
aas
cmps
add
sbb
inc
push
mov
add
inc
jecxz
and
mov
jmp
mov
(bad)
jmp
and
dec
cmp
fcomp
xor
pusha
icebp
pop
jns
sbb
push
neg
fmul
sub
sub
clc
pop
cs
lock
shl
push
sub
mov
pop
xlat
or
(bad)
inc
jnp
add
xchg
add
xchg
dec
or
(bad)
imul
and
scas
lock
jge
test
jecxz
sahf
(bad)
cmp
sti
sub
sub
test
loopne
xchg
lock
in
adc
dec
mov
in
pusha
or
adc
add
pop
inc
push
push
xchg
(bad)
adc
les
sar
add
pop
sub
inc
imul
jp
fwait
adc
dec
sti
cmps
inc
mov
out
mov
mov
sbb
les
mov
or
ss
adc
fmul
pop
mov
pop
mov
out
(bad)
hlt
push
or
sti
cld
push
adc
and
xor
sbb
pop
cmp
je
mov
cli
fnstcw
fs
pusha
mov
mov
sbb
mov
xor
pop
aas
cmps
mov
icebp
test
xor
push
xchg
js
jle
retf
repnz
fidivr
and
or
cmp
inc
push
sbb
mov
xor
mov
hlt
sbb
test
lock
inc
jae
cmp
xor
stos
or
and
xor
sbb
je
push
mov
cld
pop
pop
sbb
in
mov
ror
mov
stos
cmps
dec
jnp
xchg
hlt
jmp
dec
jae
and
ss
cmps
push
xor
scas
add
xor
inc
ret
and
sub
mov
hlt
adc
test
and
and
jmp
adc
retf
push
cmp
sub
rcr
push
sbb
jl
or
sbb
outs
adc
add
jo
sub
or
ins
pusha
add
or
or
in
push
sub
jle
leave
add
(bad)
mov
add
mov
mov
sub
leave
clc
jecxz
or
mov
dec
imul
std
add
or
lods
(bad)
dec
test
je
(bad)
out
fwait
(bad)
push
adc
vmread
pop
fld
fisubr
sbb
push
fld
in
add
lock
inc
or
lock
add
adc
leave
and
cmc
scas
and
sub
mov
mov
fs
sar
mov
cli
or
fxch
sbb
gs
adc
sbb
add
popf
push
adc
push
xor
inc
xor
cmp
xchg
dec
pop
adc
in
or
cmps
add
test
loop
mov
and
pop
loopne
ret
sub
inc
mov
add
inc
je
fistp
xchg
adc
mov
test
movhps
js
mov
push
(bad)
sti
push
imul
int
cmps
hlt
or
jle
test
nop
pop
pusha
dec
push
cmp
sub
push
retf
mov
dec
pop
xor
test
mov
push
adc
icebp
dec
loope
or
aam
mov
imul
and
sub
rcr
mov
sub
xor
jle
or
mov
and
and
je
cmp
add
jb
add
inc
add
and
add
add
or
ror
add
mov
and
and
mov
(bad)
and
cmp
xor
and
fsubr
dec
adc
fidivr
sub
sbb
call
mov
or
cmp
shr
sbb
ficomp
fidivr
mov
out
add
pop
inc
cmps
loope
inc
xor
movs
(bad)
mov
jge
pop
jne
push
or
lock
xchg
loop
int3
mov
pop
pop
hlt
or
test
pusha
xor
adc
aad
xchg
popf
and
jo
lods
test
push
adc
xor
shr
test
xlat
sub
outs
outs
lahf
sbb
cmp
mov
daa
fistp
leave
sub
rol
pop
mov
dec
(bad)
xchg
xchg
movs
jmp
je
adc
cmp
je
mov
cmp
xor
jecxz
inc
mov
ins
lds
xlat
inc
pop
pop
mov
sub
cmp
loopne
xor
inc
xor
loop
xchg
rol
sub
rcl
repnz
pop
lods
cmp
daa
rol
mov
mov
and
push
fadd
cdq
jne
stos
js
xor
test
lahf
xchg
sub
clc
mov
mov
mov
pop
fs
cmp
or
nop
retf
lock
push
call
adc
mov
pusha
(bad)
xchg
movs
loop
mov
sub
fcmovnb
pop
test
mov
or
test
and
hlt
gs
mov
mov
sub
sti
fidiv
lea
pop
sub
cld
(bad)
pop
push
data16
aaa
xor
add
and
popf
enter
ins
dec
bnd
pop
imul
mov
add
add
or
sbb
call
or
push
and
inc
js
sbb
pop
inc
add
or
(bad)
fsubr
nop
push
mov
mov
shl
icebp
mov
fidiv
pop
dec
shl
adc
adc
loopne
mov
and
aam
aad
mov
add
pop
popa
daa
or
cmps
dec
push
(bad)
jg
pop
push
ficomp
dec
ftst
sbb
mov
and
int3
pushf
jmp
dec
cmc
cmp
mov
sbb
daa
(bad)
lds
push
or
stc
sar
sub
ds
push
int
shl
add
or
inc
les
add
push
sbb
loopne
mov
push
mov
add
fdivr
dec
scas
cmp
fmul
fisttp
loopne
and
or
mov
xchg
inc
xor
jno
out
enter
data16
add
ret
cmp
cmps
test
movs
and
inc
or
test
add
pusha
mov
loopne
outs
daa
clc
add
mov
add
ror
nop
xchg
push
fdiv
sbb
sub
(bad)
cwde
rol
mov
lea
push
jmp
inc
sbb
lea
mov
push
xlat
sub
repz
sub
(bad)
int
sub
jecxz
ins
sar
inc
push
adc
push
xor
push
xor
sbb
cmp
xor
pop
sub
inc
mov
into
pop
int3
daa
js
and
sahf
or
call
add
sbb
pushf
mov
mov
aaa
cmps
or
je
sub
sbb
shl
sbb
into
call
rcl
cmp
xor
adc
add
and
jne
mov
adc
adc
(bad)
cmp
in
leave
or
mov
rol
test
cmps
cmp
inc
(bad)
(bad)
sti
in
xor
fdiv
mov
push
push
enter
xchg
retf
ret
out
xor
or
(bad)
ficomp
xor
mov
mov
dec
pop
or
xchg
add
ret
mov
mov
add
dec
jmp
xlat
jo
inc
out
cmps
pop
mov
lea
or
jo
and
inc
mov
(bad)
in
lds
mov
rcl
sub
mov
in
xchg
js
cs
xor
dec
mov
push
mov
clc
popa
mov
push
sbb
mov
(bad)
fimul
lds
xor
pop
dec
adc
mov
outs
adc
in
xchg
lods
and
lea
popf
push
adc
xor
push
mov
xlat
dec
xchg
imul
les
sub
dec
inc
cmp
fdivr
jmp
push
clc
jae
mov
int3
jl
dec
dec
mov
and
push
inc
sub
sbb
inc
out
xor
fwait
xchg
jle
xchg
push
xor
cs
sar
pop
jmp
or
sub
adc
ins
sub
and
jbe
ret
xor
pop
inc
fistp
adc
hlt
pop
rcr
push
je
sub
push
outs
sar
cmp
mov
push
push
es
and
nop
inc
jo
inc
push
sub
pop
dec
jl
xchg
pop
loope
shr
jp
jecxz
push
daa
and
dec
sbb
loope
adc
pop
and
adc
pop
imul
in
out
test
mov
aas
or
sub
stos
jo
push
ins
les
fdivr
and
jne
adc
and
push
mov
enter
loope
sub
movs
lock
imul
inc
ja
inc
je
gs
push
sub
sti
sbb
cmp
gs
nop
out
cmp
cmp
push
inc
push
ror
push
xor
test
jmp
push
pop
or
push
add
or
js
jg
cmp
pop
fs
daa
(bad)
sbb
sbb
fld
mov
call
cs
out
push
push
mov
inc
ss
cmp
push
cmps
ret
inc
cmp
or
je
mov
mov
sub
lods
pcmpeqw
xchg
xchg
and
add
lock
int
lahf
repz
push
mov
daa
sub
test
mov
cmp
adc
dec
mov
mov
jge
jno
call
data16
jbe
lea
rcr
(bad)
or
je
xor
or
(bad)
xchg
push
add
in
dec
push
sbb
and
xchg
mov
mov
and
cs
xor
or
push
and
add
mov
ja
push
fs
inc
dec
xor
pop
add
dec
xor
add
cmp
out
jno
out
push
adc
xchg
pop
mov
add
adc
movs
push
lahf
inc
pop
or
adc
xor
(bad)
pop
in
mov
add
pop
cli
jb
mov
or
inc
or
sub
lods
or
adc
xchg
inc
mov
and
mov
mov
test
sub
inc
daa
jl
inc
and
lock
pop
mov
mov
mov
push
icebp
add
pop
call
(bad)
ins
push
push
add
outs
pop
xchg
test
(bad)
ret
push
in
add
in
sbb
clc
test
cmp
je
sub
enter
mov
jne
push
sub
sbb
add
dec
cmc
scas
sub
lea
dec
cmp
sub
mov
inc
xchg
(bad)
(bad)
nop
sbb
ja
mov
sahf
mov
hlt
mov
add
sub
mov
stos
xchg
mov
daa
adc
je
xor
jne
aam
sub
test
and
aad
or
pop
ins
pop
sub
repz
js
cmps
cmp
xchg
xchg
cmp
mov
sbb
(bad)
imul
pusha
adc
pop
jmp
pop
xchg
lds
ror
and
cdq
push
or
adc
xor
sbb
loop
or
add
sbb
xor
mov
sbb
dec
outs
adc
sbb
pop
iret
or
test
inc
dec
sbb
shr
push
mov
add
mov
dec
imul
xor
rcr
das
(bad)
sbb
push
mov
sbb
dec
push
icebp
sbb
fcom
pop
(bad)
bound
and
or
je
and
div
xchg
push
add
jmp
inc
aam
mov
sub
aaa
popa
push
adc
mov
xor
pop
and
xchg
pop
mov
sub
xchg
adc
or
sbb
ret
add
pop
dec
add
xor
push
xchg
pop
or
sub
inc
sahf
dec
cmp
push
mov
movs
lea
sub
push
sbb
push
cmp
mov
jb
xor
xor
mov
adc
lahf
xor
xchg
ds
ret
mov
stos
or
sahf
inc
and
iret
call
xor
std
add
cwde
xchg
movs
scas
add
imul
push
add
dec
mov
test
xor
adc
neg
(bad)
outs
addr16
inc
push
movs
mov
mov
mov
sahf
stc
sub
inc
push
sbb
push
mov
sbb
ds
clc
jb
imul
inc
outs
xor
(bad)
and
test
pop
loope
aam
test
mov
not
push
sbb
sbb
ror
fmul
inc
xor
lea
clc
adc
add
xor
dec
xchg
or
add
lahf
push
xor
mov
or
mov
sbb
jecxz
push
push
inc
and
loopne
push
xor
pusha
pop
mov
mov
adc
retf
aam
pop
sbb
ror
test
in
xor
mov
mov
pop
add
es
cmps
xor
inc
aas
jmp
dec
in
jle
add
jmp
rcl
scas
push
enter
or
cs
ret
enter
add
inc
popf
movs
lahf
das
or
inc
or
dec
adc
adc
add
pop
cli
cmp
rcl
inc
cs
push
cmp
cmp
test
and
jno
inc
cmp
ja
push
jo
nop
int3
stos
jmp
adc
into
and
jp
mov
test
je
push
mov
push
cld
mov
xchg
(bad)
jmp
xor
jnp
pop
adc
xor
pop
punpcklbw
bound
les
inc
xor
inc
sbb
je
das
nop
movs
and
sbb
push
lds
ret
jp
dec
mov
add
or
and
add
inc
das
push
pop
addr16
dec
dec
mov
and
pop
sub
fcom
inc
push
dec
mov
xchg
mov
or
push
lods
test
mov
or
in
add
cmp
pop
cmp
add
inc
or
sub
xchg
pop
rcr
inc
jne
xchg
jge
cmc
sti
mov
cs
out
mov
pop
adc
pop
xor
adc
or
add
inc
jo
lods
add
add
jmp
sub
jno
ds
xor
xchg
pusha
sbb
and
or
inc
rcl
or
sub
in
push
cld
push
in
sbb
test
popa
or
and
je
bnd
outs
test
push
push
jnp
ret
pop
inc
bound
and
jo
inc
dec
movs
or
cmp
test
lea
push
add
push
xchg
and
dec
or
clc
push
mov
addr16
jmp
adc
ret
cwde
lods
rcl
movs
pop
adc
push
(bad)
cmp
add
mov
mov
pop
xor
lock
out
adc
or
leave
dec
test
cmp
sbb
push
dec
je
dec
jbe
adc
(bad)
retf
push
add
push
sub
mov
dec
je
sbb
pop
aaa
(bad)
sbb
xchg
cmp
(bad)
xlat
pop
icebp
rcr
inc
adc
nop
ss
dec
sub
xor
xadd
cmp
movs
loopne
add
adc
icebp
add
sahf
je
ins
jle
jmp
xchg
ror
cmps
push
add
nop
fild
loop
(bad)
push
test
mov
or
outs
aam
mov
mov
push
shr
add
call
je
mov
stos
imul
push
sbb
pop
adc
or
dec
cli
add
xor
and
push
inc
cmp
pusha
sbb
add
dec
inc
call
pop
imul
jge
add
and
mov
and
xor
test
add
add
pop
mov
cmps
popa
and
xchg
outs
test
add
fcom
(bad)
or
pop
test
jmp
add
dec
pop
inc
mov
aam
fadd
cmp
cmp
sub
in
mov
loopne
fiadd
cmp
mov
cmp
loopne
inc
adc
pop
and
sub
inc
inc
or
sub
ds
or
cmp
sbb
cmp
pop
inc
out
cmp
cmc
jb
jecxz
mov
xor
dec
pop
add
xchg
jno
std
or
dec
jmp
sub
pop
cmp
jne
dec
cmps
and
add
sub
or
sub
rol
shl
sub
sub
cs
inc
sbb
dec
test
mov
cmp
add
add
mov
dec
js
in
jmp
test
je
daa
push
imul
jb
xor
aaa
adc
xchg
and
inc
sbb
xchg
add
in
rcr
add
pop
std
adc
or
add
ins
imul
(bad)
fmul
in
xchg
add
inc
pop
popa
loopne
and
adc
in
xchg
cld
sub
cmps
in
sbb
sub
adc
mov
sar
test
out
fmul
sbb
xchg
stc
sti
fdiv
sub
add
inc
or
and
fcmovnu
sub
out
ins
cmp
sub
inc
ret
jne
call
or
fwait
or
xchg
jp
aam
hlt
in
shr
and
shr
or
mov
and
scas
inc
jl
dec
sub
xor
inc
or
pop
xchg
test
sub
cmp
push
push
jmp
icebp
inc
push
mov
lock
or
add
dec
cld
add
mov
inc
dec
jns
dec
push
mov
mov
ror
sbb
push
loopne
mov
push
add
addr16
nop
cmp
pop
or
mov
jl
pusha
inc
lods
pusha
shl
sar
sub
push
mov
rcr
adc
test
aas
xor
jmp
pop
and
adc
cmp
cmp
ss
sbb
and
nop
sub
sub
inc
push
or
push
mov
add
inc
sub
mov
xlat
jg
jmp
inc
in
add
add
div
(bad)
adc
cmp
push
add
xchg
inc
inc
and
sbb
and
sti
popf
ret
ins
(bad)
xchg
adc
or
mov
sub
clc
ja
fsub
daa
icebp
add
cmp
jnp
mov
pusha
lods
push
sbb
inc
jnp
out
movs
je
mov
jnp
out
stos
cwde
add
ds
jns
in
mov
idiv
test
jl
sbb
repz
out
enter
jo
and
loopne
xlat
enter
in
leave
iret
cwde
sub
mov
adc
adc
cs
pop
les
inc
pusha
dec
jns
and
and
fsub
(bad)
and
add
outs
sub
mov
or
arpl
push
test
push
inc
add
inc
add
lods
std
fild
inc
cmp
jae
push
gs
ss
adc
fisubr
or
je
bound
cmp
add
pop
bound
shr
cmp
adc
xor
mov
xor
sub
sbb
outs
fst
jb
jae
sub
and
arpl
or
mov
mov
and
mov
and
or
pop
xor
pop
jae
jge
mov
jb
out
cmp
push
dec
inc
sub
fdivr
dec
imul
repnz
mov
sbb
push
sub
mov
inc
adc
fs
shl
sbb
pop
pop
and
ins
outs
outs
je
sub
sbb
enter
add
shl
xor
pop
and
out
xchg
cs
dec
or
push
in
jo
pop
sbb
loopne
enter
stc
xchg
xchg
mov
or
cmp
add
sbb
mov
fdiv
add
sbb
sahf
jmp
adc
inc
enter
ins
inc
test
add
inc
jl
inc
push
mov
aaa
enter
sbb
cmp
in
xchg
push
mov
fmul
mov
mov
xchg
or
or
in
jae
fwait
pop
imul
add
sbb
inc
jp
dec
lock
or
inc
or
ja
pusha
dec
cwde
test
push
mov
pop
test
ss
jmp
add
mov
es
imul
outs
addr16
jb
imul
aaa
or
(bad)
shl
fimul
mov
fwait
in
xchg
push
xor
add
and
inc
push
inc
enter
cmp
mov
outs
jb
dec
mov
pop
or
das
pop
and
inc
xchg
cmp
xor
test
dec
or
hlt
outs
and
aas
movs
and
pop
jnp
xchg
mul
pop
int
push
out
mov
adc
out
aam
outs
adc
add
adc
add
mov
cdq
nop
imul
data16
jb
pop
adc
leave
push
adc
sbb
pop
xchg
adc
or
pop
sbb
sbb
sub
add
cs
scas
xchg
sbb
cdq
dec
and
leave
add
mov
xor
sbb
cwde
in
sbb
inc
xchg
nop
movs
shr
and
or
mov
hlt
popf
das
in
mov
mov
ins
mov
and
mov
shr
push
jb
mov
or
xor
nop
sub
inc
add
push
jb
mov
add
push
leave
sub
div
xchg
das
and
test
rcr
mov
sbb
mov
adc
sbb
xor
nop
adc
or
enter
fisttp
mov
and
rcl
xor
cmp
stos
add
addr16
cdq
nop
es
aaa
repz
xor
adc
es
fnstsw
push
and
sbb
inc
add
or
or
cmp
push
jb
stos
xchg
push
rcl
lahf
mov
and
or
sub
xlat
fisttp
int
push
nop
or
aaa
jno
mov
and
xchg
xor
ja
add
test
push
hlt
and
inc
imul
fmul
inc
push
jo
pop
jb
mov
jnp
or
push
imul
adc
pop
or
loopne
(bad)
adc
aad
nop
and
push
xchg
mov
sbb
or
imul
jmp
adc
das
stc
push
sub
push
add
add
jbe
nop
cmp
mov
or
scas
cmp
xchg
jne
xchg
adc
popaw
in
retf
adc
jne
mov
mov
outs
xor
sti
dec
imul
add
and
imul
nop
pop
gs
lock
int3
jmp
adc
imul
add
xor
or
out
popa
xchg
jnp
push
inc
ds
dec
xor
popa
idiv
dec
xor
push
addr16
sub
xchg
mov
or
pop
(bad)
xchg
jns
mov
cli
pop
mov
(bad)
mov
or
sbb
ficom
push
jne
jns
data16
xor
fimul
or
push
test
adc
dec
jae
push
repnz
sub
test
cmc
cwde
icebp
js
pop
dec
inc
repz
mov
mov
pop
outs
fadd
enter
daa
cld
jo
add
inc
adc
inc
scas
lods
jl
mov
or
push
inc
push
cmp
popa
(bad)
jne
daa
pop
jge
push
mov
ror
mov
jnp
ss
xor
es
clc
mov
in
test
push
xchg
xchg
inc
push
scas
cmp
daa
mov
inc
sub
ss
lods
ret
push
push
repz
add
scas
jge
add
mov
loopne
xor
push
adc
push
ins
daa
inc
dec
mov
add
add
add
adc
add
add
add
add
adc
push
add
adc
inc
mov
mov
push
mov
pop
xor
ins
pop
ins
stos
mov
adc
cmps
sbb
mov
scas
add
ror
add
add
inc
mov
mov
mov
mov
ins
push
mov
(bad)
pop
sbb
mov
mov
pushf
out
pushf
xor
imul
js
pop
lahf
nop
lahf
ja
out
enter
push
clc
add
test
movs
cld
sub
mov
push
jl
jnp
imul
pop
sub
test
push
test
fsubp
imul
push
dec
push
fnstcw
in
cmp
test
push
fwait
out
ins
scas
push
call
pop
call
clc
sbb
jl
jo
popf
int
repz
jnp
xchg
jecxz
and
adc
or
mov
and
sub
inc
mov
nop
add
out
(bad)
inc
daa
div
pop
sub
sub
nop
add
test
push
fild
and
das
pop
sbb
inc
mov
pop
add
dec
addr16
pop
fsub
push
add
push
addr16
lock
(bad)
clc
xchg
dec
adc
xor
movs
(bad)
addr16
push
movs
jns
xchg
pop
and
sbb
jb
fs
inc
push
or
mov
or
add
adc
and
pop
sub
stos
xlat
adc
add
dec
xlat
or
mov
sbb
jae
sub
add
jns
push
mov
inc
sub
nop
ja
dec
adc
add
mov
movs
add
sbb
add
push
dec
enter
stos
push
nop
movnti
add
lock
xchg
cmp
xor
pusha
push
lods
add
mov
xchg
mov
push
add
inc
cmp
add
sub
vmread
mov
and
aad
mov
jns
jno
es
push
sub
inc
sub
or
jmp
lods
popf
into
popf
push
out
lea
enter
in
inc
sbb
sbb
in
cwde
push
dec
cs
or
pop
add
shl
in
add
sub
(bad)
mov
or
cdq
adc
pop
adc
xlat
cmp
imul
in
mov
add
loop
sub
in
push
cmp
or
gs
sub
mov
shl
js
jae
pusha
jmp
imul
je
sub
mov
jns
ins
mov
les
pop
adc
ds
cs
jae
lods
mov
dec
jo
xchg
fs
xor
in
add
clc
xchg
inc
mov
inc
add
xlat
and
pop
pop
or
jns
push
or
test
cmp
in
xchg
jae
cmp
cs
or
dec
cmp
ds
test
(bad)
xor
fbld
inc
or
lds
push
dec
fild
ins
fsubr
rol
inc
je
cmp
test
push
sbb
mov
inc
sbb
mov
mov
mov
push
mov
cmp
dec
xlat
add
mov
jns
jl
ins
test
and
scas
xchg
or
ds
movs
push
mov
loope
dec
sub
dec
adc
inc
jg
cmp
inc
or
test
or
inc
mov
inc
add
xchg
and
mov
inc
stos
or
pop
pop
inc
inc
or
inc
stos
dec
dec
ins
xchg
or
and
dec
(bad)
or
dec
(bad)
add
(bad)
or
dec
dec
xchg
or
inc
cs
dec
mov
mov
inc
pop
sbb
clc
dec
pushf
xchg
ret
test
push
in
pop
enter
shl
pop
shl
add
retf
(bad)
nop
push
push
dec
jl
and
les
repnz
mov
push
and
inc
mov
jp
add
mov
push
or
int
inc
int3
mov
mov
mov
clc
cwde
mov
ss
xchg
fadd
push
int
jne
ret
scas
pop
sub
inc
push
stc
pop
or
adc
add
push
int
jo
pop
ds
and
sti
scas
jge
cmp
enter
sbb
dec
mov
or
mov
or
inc
cmp
inc
push
add
ror
mov
sysret
sbb
dec
xchg
push
add
ds
jl
cmp
xchg
cmp
adc
push
scas
repnz
stc
and
cld
retf
xchg
cmp
pop
cmp
cmp
push
cmp
push
xor
popa
in
nop
aaa
pop
mov
push
and
or
cmp
test
inc
int3
mov
push
mov
sub
aam
or
je
and
ins
call
push
test
and
cmps
shl
mov
fadd
jns
jge
add
push
xlat
cmp
js
push
add
sub
inc
and
ins
test
dec
clc
pop
xchg
jmp
shl
iret
lods
mov
add
cld
pusha
pusha
push
clc
add
in
mov
and
sar
inc
mov
fs
fstp
je
test
sub
mov
sub
les
popf
xor
out
cmp
push
inc
fistp
xor
pop
xchg
jo
test
mov
out
cmp
or
ds
ror
xchg
push
xchg
push
jne
iret
and
pop
mov
popa
je
mov
sub
shr
xchg
push
test
jne
stos
test
cs
not
mov
push
mov
lahf
pop
fs
cmp
push
lahf
je
mov
movnti
pop
sub
aaa
mov
add
adc
pop
aam
inc
or
enter
adc
(bad)
push
inc
into
ret
mov
loopne
movs
cmp
std
cld
les
movs
push
repz
or
cmps
nop
mov
call
sub
ins
dec
sub
ret
or
and
lds
pop
adc
js
inc
or
sbb
mov
rcr
adc
add
div
pop
test
loop
clc
adc
xor
jae
scas
add
xchg
push
inc
jge
adc
aas
jo
ret
push
ja
(bad)
in
xor
cmovbe
out
inc
les
pop
mov
sub
sub
mov
sbb
inc
call
sub
push
es
or
shl
nop
out
dec
test
push
mov
push
inc
jge
pop
sub
int3
add
adc
clc
mov
ds
sub
push
sub
fnstsw
movs
mov
iret
mov
jbe
jb
pop
push
outs
jb
pop
push
jne
jbe
adc
arpl
inc
daa
sub
in
inc
ins
addr16
js
outs
jae
cmps
pmaddwd
or
jmp
movs
stc
dec
pop
popa
dec
or
sub
loopne
add
(bad)
ror
cmp
ror
pop
pop
mov
shl
add
das
xor
push
push
xchg
inc
cwde
sub
ins
call
lock
test
xor
cwde
es
lods
mov
jb
cld
sub
shr
dec
nop
sahf
and
or
pop
add
cmp
push
add
or
mov
ror
mov
inc
sar
push
bound
or
add
dec
jo
adc
mov
add
gs
inc
adc
cmp
(bad)
jl
mov
test
pop
retf
or
xchg
dec
push
or
mov
aam
push
add
push
push
je
add
or
jmp
or
test
mov
add
lahf
idiv
adc
mov
je
sbb
dec
outs
add
movs
push
push
xchg
lea
call
push
cmps
dec
pop
imul
mov
or
add
mov
sbb
push
in
adc
mov
pop
arpl
fcompp
jo
push
adc
sti
cmp
add
data16
adc
mov
mov
in
pop
inc
adc
add
retf
jae
or
adc
movs
pop
push
jmp
sbb
dec
out
mov
pop
push
and
pop
in
pop
out
nop
dec
je
pop
xor
ss
cmp
adc
add
or
add
adc
push
mov
adc
xchg
jg
xchg
and
cdq
mov
loop
mov
mov
inc
add
sbb
or
mov
or
hlt
adc
pop
cld
push
cwde
adc
ja
inc
imul
mov
sub
ret
push
ret
pusha
dec
dec
xor
mov
mov
(bad)
push
and
xchg
xor
lods
xor
mov
add
inc
and
loope
xor
and
xchg
add
and
mov
mov
mov
div
push
adc
inc
inc
inc
mov
pushf
or
cmp
fdiv
ds
push
inc
add
and
pop
mov
cmc
mov
sub
cli
test
mov
mov
sbb
push
cdq
inc
mov
xor
push
shr
dec
adc
test
cmps
dec
cmp
pusha
dec
dec
inc
mov
xor
add
aas
in
in
push
nop
pop
int3
add
sub
mov
inc
cmp
cmp
movs
or
or
pop
cmp
mov
repz
or
xor
nop
cmp
mov
mov
fisttp
and
add
and
inc
out
xchg
xor
xor
cmp
nop
bound
arpl
or
pop
sar
hlt
pop
or
push
push
mov
outs
pop
leave
js
and
clc
xchg
les
cmp
cmp
xchg
jge
push
push
cmp
pop
cli
dec
lock
jmp
sub
into
adc
push
xchg
leave
pop
mov
mov
mov
ins
sbb
pop
fmul
push
test
or
sub
mov
test
jne
push
sahf
mov
cmp
push
fsubr
add
ds
nop
push
sbb
inc
adc
dec
rcl
xlat
pusha
push
sbb
sbb
daa
or
aaa
sub
pop
hlt
neg
jmp
add
and
jne
je
add
or
gs
cmp
mov
or
and
xor
(bad)
or
adc
outs
outs
pushf
pop
stos
ins
or
add
sub
in
or
xchg
test
mov
dec
add
mov
push
sbb
cmpxchg
popf
xchg
sbb
(bad)
aas
outs
adc
mov
outs
add
fisub
jo
mov
adc
shr
inc
stos
inc
ins
je
adc
mov
inc
dec
mov
push
js
adc
mov
lea
xchg
sub
hlt
or
and
inc
fs
lods
and
sti
rol
jne
ret
push
retf
xor
daa
nop
lock
or
cmp
inc
mov
dec
or
retf
adc
and
mov
mov
mov
sub
inc
cmp
ret
lock
sbb
ins
mov
and
xchg
imul
or
jmp
(bad)
and
mov
fsubr
push
jmp
adc
cdq
fisub
adc
popa
mov
stc
nop
sahf
push
jno
pop
sbb
loopne
dec
mov
xor
inc
pop
push
inc
xchg
pop
or
lock
sub
adc
mov
and
popa
repz
sub
push
and
cmp
scas
call
ins
mov
xchg
shl
add
jnp
dec
sub
cmp
bound
xor
add
mov
fsubrp
jle
push
dec
mov
dec
out
fs
(bad)
mov
push
pop
sbb
mov
mul
cwde
dec
or
push
movs
adc
movs
jecxz
adc
fwait
jns
add
and
pop
jl
sub
cmps
lods
xchg
dec
aaa
cmp
push
or
push
les
loope
les
cmps
mov
pop
inc
jge
add
add
pop
dec
in
fcom
and
mov
aad
pop
pop
out
int
retf
push
inc
cmp
popa
adc
ss
pop
das
pop
cmp
ror
fnstenv
jo
sub
sbb
add
call
push
add
cmp
push
popf
adc
add
imul
loopne
cmp
or
enter
pop
xor
inc
lea
and
cmps
push
dec
cmp
or
adc
mov
mov
loope
nop
out
add
or
sar
ret
cmp
mov
(bad)
pop
sbb
(bad)
push
xchg
xchg
ja
bound
push
xor
sbb
adc
sbb
sub
mov
jb
out
fist
sub
xor
mov
cmp
movs
and
dec
mov
jb
push
sub
in
inc
mov
adc
push
sbb
pusha
mov
push
add
adc
sti
push
loope
xchg
mov
mov
or
mov
or
xor
push
jnp
shr
inc
ficomp
loop
xor
adc
or
inc
push
jmp
fwait
(bad)
out
aas
or
mov
xchg
repnz
mov
add
mov
movs
pop
adc
add
mov
jbe
int
jge
in
lods
es
or
jecxz
jge
stos
push
shl
mov
es
or
je
xchg
adc
xor
and
mov
in
aas
(bad)
pop
lods
push
dec
add
xchg
push
sub
inc
cwde
push
nop
or
or
or
push
inc
lock
inc
push
push
and
sbb
inc
xor
(bad)
adc
pop
ret
sti
(bad)
popa
adc
pop
and
lods
(bad)
cmp
or
movs
fwait
or
push
lock
add
mov
xor
es
pop
mov
movs
push
jecxz
adc
pop
aaa
gs
shl
sbb
jne
ss
or
mov
push
push
gs
in
push
mov
and
dec
ror
push
pop
ficomp
xor
jns
test
lock
inc
xchg
mov
out
sub
fild
sub
mov
pusha
mov
fst
sbb
push
leave
mov
inc
xchg
pop
lock
ins
sub
fs
xchg
mov
loope
fld
retf
push
inc
imul
fstp
call
dec
cwde
(bad)
shl
loop
mov
push
mov
rcr
push
lods
inc
(bad)
and
pop
dec
sbb
add
dec
pop
jb
cmp
jmp
enter
in
push
int3
adc
outs
inc
aas
mov
loop
add
xor
xor
rol
mov
xlat
fsub
add
cmp
push
xchg
ficom
adc
test
fisttp
push
push
lea
push
mov
push
jmp
js
loop
mov
mov
and
outs
or
lds
sbb
out
sbb
fucomi
sahf
add
mov
push
fs
inc
rol
ja
mov
in
imul
sbb
fdivr
xchg
retf
and
ins
push
mov
or
stos
or
jns
jge
inc
sbb
mov
adc
push
sbb
xchg
dec
sbb
inc
xchg
movs
push
xchg
fcomp
fcom
adc
cli
adc
std
(bad)
xchg
dec
fidivr
lock
add
test
push
add
repnz
add
push
push
cmp
push
inc
dec
enter
je
add
jmp
test
cmp
sbb
lock
loopne
pop
cmps
not
ins
mov
ds
mov
adc
fs
jb
xor
lock
rcl
push
scas
loope
das
cmps
jns
outs
push
adc
ds
cmp
cmps
inc
push
mov
jmp
cmp
popa
xchg
ror
fcom
xchg
dec
xor
mov
jo
loope
cmp
cmp
adc
cmp
fimul
push
(bad)
jae
sbb
es
lahf
arpl
xchg
sbb
lahf
in
xchg
adc
xchg
lds
sbb
mov
loopne
mov
arpl
pop
sub
xchg
add
pop
add
stos
scas
push
and
add
or
imul
add
xchg
or
out
xchg
add
and
sub
ret
dec
mov
cmps
adc
in
dec
sbb
out
cmp
aaa
fldcw
pop
aad
mov
inc
adc
or
dec
xchg
xchg
in
pop
mov
and
mov
cmps
xor
cmp
jnp
aaa
jge
les
dec
or
inc
and
outs
or
test
xchg
dec
sbb
jmp
inc
adc
sbb
ja
rcr
xchg
add
add
mov
push
or
gs
jmp
imul
xchg
mov
inc
imul
jecxz
fdivr
dec
xor
push
xor
inc
inc
or
adc
mov
arpl
shl
jne
xor
adc
jecxz
cmp
cmp
add
ficom
or
adc
add
hlt
loop
add
mov
cs
in
mov
add
mov
cmp
add
lock
dec
(bad)
and
add
shl
cwde
mov
popa
stos
adc
pop
sub
dec
(bad)
(bad)
loope
cmp
cmp
ror
sbb
sbb
and
arpl
fild
or
fiadd
movs
sar
ins
xor
lahf
adc
sub
sar
sub
sbb
shl
inc
jbe
ds
add
jns
cmps
lods
mov
pop
mov
fadd
and
add
sub
add
adc
mov
sbb
out
in
mov
enter
popf
or
jl
and
cmps
jle
ins
xchg
mov
ins
icebp
and
sbb
test
jecxz
dec
popa
jne
pusha
invd
xor
scas
pop
je
das
dec
adc
out
gs
bound
mov
add
sub
dec
sar
jb
sub
adc
clc
cmp
jne
pop
push
jmp
push
js
jns
es
js
mov
jmp
add
pop
daa
jmp
cmp
dec
mov
loope
pushf
ds
or
hlt
mov
inc
dec
(bad)
loope
scas
inc
dec
mov
dec
mov
in
outs
adc
adc
add
neg
pop
(bad)
mov
jecxz
mov
mov
or
ins
ins
jmp
in
inc
inc
xor
mov
jge
in
push
lea
das
daa
pop
xor
lods
lds
inc
adc
pop
mov
sbb
mov
repz
aam
xchg
repnz
jg
push
xor
in
dec
inc
inc
lock
push
das
add
retf
je
jae
push
adc
and
or
out
sbb
xor
pop
sub
push
jl
mov
adc
and
dec
aam
test
push
push
mov
or
push
add
icebp
push
or
icebp
add
fisttp
xor
xlat
push
out
cs
push
jp
in
or
xchg
ja
inc
mov
mov
xor
xlat
jle
int3
push
(bad)
shl
adc
outs
outs
jb
or
adc
test
or
rol
iret
(bad)
mov
addr16
sbb
jb
and
ja
mov
or
pop
lea
loopne
sub
adc
push
bound
cdq
call
jp
test
xlat
ja
push
and
imul
mov
push
pop
pop
sub
mov
mov
ss
clc
aas
cmp
mov
add
inc
and
neg
das
pop
push
test
and
je
add
inc
cmp
mov
out
jp
jl
js
cmp
hlt
adc
adc
sbb
sub
and
or
adc
shr
pusha
cmps
pop
push
jo
ins
inc
in
(bad)
es
mov
mov
adc
cwde
xlat
frstor
fiadd
adc
inc
push
int3
inc
adc
nop
xor
push
and
lock
imul
movs
mov
cmp
add
push
mov
iret
jo
sbb
in
and
push
inc
jns
or
adc
xor
dec
jmp
add
movs
sbb
xor
add
retf
movs
adc
les
push
sub
mov
add
sub
pop
inc
sbb
jo
or
stos
dec
and
js
aaa
push
jne
xor
sbb
cwde
xchg
loope
outs
cmp
dec
add
xchg
outs
pop
add
pop
lods
adc
jg
push
push
je
xor
sub
push
mov
mov
pop
add
ins
jl
add
cmp
fadd
add
push
out
sbb
loope
and
call
test
dec
inc
xchg
or
dec
or
cmps
adc
pop
(bad)
cmp
add
jno
fnstsw
ins
ret
lahf
jb
adc
xor
push
in
test
lea
test
aaa
add
inc
pop
sbb
inc
in
pop
add
fisubr
cmps
je
test
sub
xchg
pop
shl
push
in
mov
das
lds
sub
pop
rol
outs
add
adc
jg
je
iret
sbb
push
adc
and
pop
ins
and
jb
sbb
push
test
dec
fiadd
rcl
mov
add
scas
pop
in
or
dec
or
mov
mov
adc
lods
cmp
xor
sub
jmp
sbb
xchg
add
in
push
aas
push
cmp
loope
pop
out
test
xor
popf
sub
push
loopne
add
add
add
dec
adc
out
sub
(bad)
out
lods
cmp
sub
jo
inc
push
add
push
cwde
mov
fcomp
xchg
call
dec
add
aas
movs
pop
push
xchg
(bad)
cmp
stos
mov
pop
push
add
sbb
mov
mov
sub
ret
shr
inc
jmp
int
mov
cmp
cmp
push
sbb
xor
repz
and
aaa
ja
cld
add
inc
rcl
out
add
not
stc
jge
ret
xchg
or
dec
imul
push
cmps
mov
and
sub
mov
call
imul
vmovaps
cmp
or
sub
mov
pop
imul
enter
sub
stos
hlt
cmp
cwde
cmp
mov
xchg
hlt
xor
daa
xchg
hlt
hlt
adc
and
hlt
in
add
and
inc
mov
adc
in
xchg
pop
cdq
mov
fdivp
add
push
mov
add
or
adc
push
mov
jg
pop
add
sbb
xor
cmp
pusha
rcr
mov
and
mov
movs
and
ret
aam
lock
call
inc
lock
push
or
popa
adc
adc
(bad)
pop
adc
enter
add
xchg
xor
and
fcomp
push
add
ja
mov
inc
das
in
pop
sub
jno
add
je
xor
sub
je
or
add
cmp
pop
int
adc
or
je
inc
mov
test
test
jae
pop
xlat
sbb
cmp
add
mov
inc
or
mov
xchg
sub
add
dec
push
xchg
cmp
xor
das
add
jnp
(bad)
dec
inc
sar
(bad)
aam
add
and
pop
jg
rol
mov
das
push
xchg
movs
mov
jl
ret
sub
pusha
mov
and
or
push
push
adc
push
in
aam
mov
inc
pop
cmp
pop
adc
dec
fistp
hlt
pop
inc
ror
cmp
clc
into
sub
lahf
add
adc
pusha
cmps
mov
(bad)
outs
sbb
jmp
test
or
xor
add
adc
adc
jmp
sbb
xchg
les
pop
xor
cwde
mov
xchg
repz
jp
ins
cmp
push
adc
add
sbb
cmp
sbb
and
ret
jne
sub
mov
pop
call
jnp
mov
fxch
jl
hlt
add
jge
dec
mov
div
call
mov
mov
push
mov
ror
or
mov
test
add
or
and
dec
push
push
bnd
cmp
rol
sub
ss
add
add
xchg
fstp
pushf
adc
cmp
sbb
or
mov
(bad)
out
cmp
and
ins
xchg
rol
pop
loop
jge
in
push
arpl
dec
ret
lods
cld
cdq
sub
rol
sub
cmp
and
cwde
and
call
push
mov
cmps
dec
sbb
push
jmp
push
dec
and
bound
mov
xlat
inc
add
dec
retf
movs
inc
ja
lar
nop
adc
mov
jnp
je
xchg
lods
daa
mov
push
sbb
mov
arpl
pop
movs
mov
(bad)
arpl
dec
or
stos
ins
jo
pop
inc
sahf
loope
cmp
les
pop
mov
ror
add
dec
into
and
pop
and
xor
lock
pusha
xchg
inc
sbb
adc
push
push
test
push
push
inc
jg
xchg
loopne
ficomp
lock
div
out
mov
cmp
or
js
or
(bad)
aad
pop
shl
push
adc
adc
sbb
inc
dec
(bad)
jo
dec
popa
inc
mov
adc
cmp
pop
inc
daa
fdiv
adc
dec
test
lock
xchg
and
jnp
xchg
push
aas
popa
mov
sbb
mov
or
outs
and
sub
or
cmps
push
dec
dec
sbb
test
cmps
push
mov
in
bound
mov
shl
sbb
cmp
aas
int
pop
mov
imul
sbb
(bad)
push
pop
lds
cmp
leave
fs
sahf
inc
inc
popa
iret
sbb
inc
xchg
and
mov
das
push
shl
pusha
daa
loope
pop
and
adc
pop
or
cmp
mov
sahf
mov
(bad)
cmps
adc
add
mov
pop
aas
fld
jnp
cmp
sbb
rcl
add
sub
les
popa
movs
mov
or
inc
(bad)
cmp
adc
inc
addr16
ja
cwde
pop
cmp
xor
inc
fs
daa
imul
pop
jp
sbb
arpl
stos
enter
mov
scas
ffree
xchg
mov
mov
cmc
push
push
or
mov
pop
and
adc
pop
sbb
popf
mov
dec
fdiv
mov
call
xchg
pusha
inc
and
clc
add
mov
jp
sar
(bad)
rol
lods
pop
or
shl
or
mov
sbb
ja
add
outs
test
out
rol
xor
test
push
cmp
movs
add
clc
cwde
jecxz
push
inc
test
ins
pusha
mov
test
outs
mov
jne
mov
push
in
jge
pop
and
rol
adc
jge
inc
dec
mov
stos
in
(bad)
push
jo
jne
(bad)
push
rol
sub
and
mov
adc
pop
add
push
xchg
rol
test
popa
dec
sub
movs
hlt
data16
add
or
lods
shl
add
jg
popf
lods
loopne
add
xor
sub
shl
push
push
shl
nop
inc
push
add
add
test
xor
push
mov
add
cmp
pop
in
mov
sub
nop
push
shl
inc
cmp
mov
cmp
sub
or
jmp
sbb
push
dec
repz
stos
xor
xlat
add
jmp
pop
push
xchg
rcl
xchg
clc
(bad)
or
std
fwait
cmp
cmp
mov
sbb
xchg
out
mov
inc
test
or
dec
push
pop
gs
pop
iret
sbb
xchg
push
inc
addr16
jecxz
daa
push
mov
das
jo
cmp
ret
nop
mov
push
out
pop
and
icebp
add
xor
xchg
outs
push
xchg
out
pusha
nop
pop
dec
adc
psrld
test
jmp
sbb
pusha
cs
div
cmp
add
retf
sbb
dec
outs
mov
cmp
adc
or
lods
lea
mov
push
push
loope
push
inc
shl
and
add
mov
add
(bad)
fcmovu
sbb
push
inc
pusha
sbb
add
cli
sbb
in
ror
push
add
sub
sbb
cmp
(bad)
adc
and
adc
adc
cmp
dec
jo
add
push
jmp
addr16
sbb
or
and
inc
sub
pop
add
inc
or
cmp
call
test
cmp
test
mov
ror
andps
lock
jno
bound
loope
mov
loope
daa
mov
loop
rcr
inc
call
(bad)
add
and
jno
jmp
xor
les
cld
and
push
cmp
add
or
push
lods
popf
(bad)
js
push
jne
xor
je
sbb
or
mov
popa
test
add
dec
push
aas
loop
jecxz
fcmovu
xlat
les
mov
mov
xchg
popf
sbb
dec
cdq
jne
xor
cmp
mov
or
dec
into
add
loopne
cmps
jge
and
or
call
lock
sub
clc
and
jbe
sub
shl
add
push
inc
jg
push
cwde
mov
adc
popa
inc
les
jne
out
imul
inc
ja
mov
pusha
cmps
loop
and
push
push
fmul
inc
inc
pusha
mov
adc
nop
sbb
add
movs
jns
jnp
cs
rcr
mov
or
mov
and
xchg
inc
cmp
icebp
ins
inc
sbb
and
and
mov
ja
cmp
shld
outs
sbb
mov
jb
jecxz
sub
mov
adc
push
or
pop
mov
mov
adc
ds
mov
daa
xor
js
mov
test
inc
fbld
pop
xchg
inc
ret
inc
push
(bad)
and
or
into
add
inc
adc
cld
retf
sahf
xchg
out
rcl
and
pop
adc
mov
mov
or
or
sub
add
xor
test
inc
pop
(bad)
jnp
inc
jmp
and
add
xor
scas
retw
add
mov
inc
inc
or
add
adc
inc
cmp
mov
or
pop
xlat
add
jne
lds
cmp
mov
(bad)
mov
push
add
jo
mov
cmp
add
jmp
and
imul
adc
sbb
mov
xor
cmp
rol
stos
retf
mov
ss
fwait
or
cmp
or
paddusb
ret
jne
cmp
and
dec
mov
sbb
xor
rcr
dec
cmp
inc
fimul
lods
cmp
rol
jmp
and
sub
mov
xor
and
pop
mov
rol
ror
push
popf
clc
inc
jp
sar
nop
add
and
lea
sbb
xor
cmp
test
out
sub
or
mov
xchg
fs
hlt
(bad)
push
jle
fistp
sub
test
dec
mov
fcom
xchg
fstp
and
add
stos
adc
neg
mov
lock
dec
push
and
cmp
push
rcl
mov
fnstcw
je
jbe
fdivr
(bad)
arpl
add
or
hlt
sar
mov
and
sub
jmp
mov
pop
xor
loope
in
and
add
dec
pop
jmp
jp
adc
adc
xchg
inc
inc
or
adc
jmp
pinsrw
es
or
add
adc
rol
jl
add
mov
add
in
cs
xchg
pop
push
jbe
fs
cmp
adc
xor
and
in
jg
leave
xchg
cmp
add
inc
sbb
mov
mov
inc
cmp
aas
imul
or
cmp
dec
je
popf
cmps
movs
mov
ins
dec
popf
add
(bad)
push
retf
call
xchg
mov
fnsave
mov
xchg
clc
or
inc
pop
add
and
add
sbb
ja
stos
jnp
inc
pusha
je
(bad)
(bad)
mov
push
dec
retf
push
jne
jno
out
mov
push
dec
out
mov
mov
test
shr
sub
jne
mov
pop
rcr
fnstcw
pop
scas
shl
jmp
push
sub
cmp
sbb
push
ins
loopne
sub
jmp
fcom
jne
adc
adc
jns
or
adc
add
or
aaa
outs
outs
push
sbb
push
daa
inc
sub
(bad)
ror
xchg
adc
js
mov
lahf
test
add
mov
xlat
mov
test
ficomp
push
inc
jbe
imul
fwait
add
fs
iret
and
sbb
xchg
hlt
mov
pop
sbb
xor
xor
jmp
dec
xor
xchg
push
aaa
add
sbb
xchg
sbb
nop
xor
mov
push
fld
xchg
add
sub
gs
xor
cld
fsubr
add
xchg
dec
rcl
add
push
add
jnp
mov
mov
mov
and
add
dec
jo
shl
add
and
(bad)
dec
push
inc
imul
inc
or
ds
jne
sub
pop
or
arpl
push
push
mov
imul
jl
rol
inc
test
daa
ins
rcl
sbb
clc
mov
push
pop
arpl
pop
dec
or
cmp
pop
inc
dec
push
pop
sub
inc
add
inc
push
ins
mov
mov
mov
and
xchg
cdq
jno
adc
xchg
sbb
ds
ret
imul
inc
rcr
sbb
inc
loop
pusha
add
sahf
dec
pop
imul
push
cmp
sbb
(bad)
test
push
daa
std
pusha
add
mov
jmp
adc
adc
out
xor
in
cmp
dec
out
cld
mov
test
mov
cmp
lock
les
push
leave
aaa
xor
or
lods
push
(bad)
fwait
push
test
mov
xchg
repnz
or
inc
sbb
or
mov
and
mov
add
test
push
push
mov
mov
dec
adc
popa
jo
or
popa
and
in
icebp
push
add
in
pop
adc
in
imul
push
aad
test
dec
jmp
pop
add
fmul
mov
add
adc
imul
loopne
cmps
dec
movs
add
xchg
loopne
push
imul
jno
ja
mov
call
fs
wbinvd
cmp
test
mov
pop
cmp
(bad)
bound
xor
inc
adc
(bad)
push
mov
(bad)
xor
shl
or
cmp
sar
add
leave
neg
lods
sub
aad
(bad)
out
mov
imul
mov
sbb
and
mov
dec
mov
or
leave
push
call
pop
cmc
out
push
xchg
or
add
push
sub
jb
mov
fiadd
push
loope
mov
test
and
enter
call
add
cld
xchg
loope
fist
and
or
and
jo
mov
and
cmp
xchg
xchg
(bad)
pop
inc
xchg
mov
dec
(bad)
or
or
pop
and
push
push
push
xor
sbb
push
les
pop
dec
dec
aaa
ret
mov
push
sub
in
dec
jmp
sbb
adc
mov
sub
or
mul
or
and
and
sbb
test
fs
leave
and
fcom
mov
sbb
jl
movs
push
add
movs
es
push
mov
fistp
fcom
cmp
loopne
sub
sbb
enter
movs
and
and
and
enter
jl
or
sub
add
push
jb
jmp
dec
mov
xor
inc
or
popf
ror
rcr
xlat
mov
mov
movs
push
cli
daa
dec
dec
add
mov
mov
imul
fs
test
out
adc
stos
adc
dec
std
sub
std
and
clc
or
sbb
inc
aad
(bad)
in
xchg
sbb
inc
mov
jg
sbb
cmps
sbb
mov
mov
add
ret
fs
lock
aam
jae
sub
sar
sub
ins
and
add
push
mov
jo
in
jo
call
(bad)
jns
adc
jmp
lods
lods
ins
je
or
add
mov
pushf
inc
frstpm(287
sbb
and
or
pop
dec
retf
cdq
mov
push
adc
add
xchg
or
rol
nop
adc
fmul
push
arpl
iret
or
in
movs
and
cmp
ins
(bad)
stos
jmp
into
bsf
or
lock
inc
xor
ret
cmp
push
inc
fiadd
enter
in
ret
xor
jge
sub
int
add
aam
or
pop
jp
push
xor
int
loope
je
ret
ins
cmc
inc
pop
push
push
adc
jmp
imul
and
mov
pop
sub
and
lods
xchg
jne
inc
jnp
mov
bound
inc
sbb
adc
int3
dec
xchg
sbb
xor
xchg
jg
cmp
es
inc
clc
mov
or
dec
pop
les
addr16
movs
push
cs
pop
test
jae
adc
sbb
retf
loopne
sub
cmp
call
adc
pop
outs
aam
inc
push
lods
or
cmp
stos
push
push
cld
lods
in
movs
lea
mov
jne
cmp
xor
sbb
dec
mov
or
adc
push
cmp
aam
cmps
xchg
bound
adc
dec
jle
jo
cmp
daa
ss
outs
dec
call
sbb
jne
fsubr
sub
xor
das
jb
retf
mov
fild
jge
sbb
inc
dec
shl
lods
xchg
(bad)
in
jbe
adc
sub
adc
pop
cmps
je
add
mov
mov
and
int3
(bad)
mov
sti
scas
fnstcw
dec
sub
dec
fs
jmp
or
jmp
rol
shl
sub
inc
aaa
or
test
inc
dec
jl
jae
ins
jo
pop
add
lods
jmp
add
adc
adc
mov
(bad)
ins
test
(bad)
and
jnp
loopne
enter
(bad)
mov
add
ins
sub
cmps
int3
dec
aas
and
or
dec
xlat
sbb
mov
js
mov
popf
adc
mov
adc
hlt
sbb
sbb
adc
xor
in
or
mov
mov
cmp
stc
inc
pusha
ss
and
xor
inc
dec
push
into
pushw
push
mov
cmp
test
arpl
hlt
fstp
stc
ror
out
cmp
add
and
sub
sar
add
push
and
test
xor
xchg
mov
mov
cmps
ror
fcomp
xlat
loope
cld
and
pop
dec
fs
inc
sub
xchg
mov
imul
pop
out
daa
push
inc
fimul
sbb
adc
push
add
pop
jo
xor
sbb
and
mov
sub
cmp
popa
jo
sti
leave
or
(bad)
or
ins
popa
js
in
adc
push
pusha
push
dec
mov
jns
mov
scas
mov
sub
rcl
mov
pop
repz
xchg
nop
or
test
mov
jno
sbb
movs
pop
je
les
jle
or
mov
or
movs
or
popa
xor
xchg
sti
push
loope
lea
and
push
retf
xor
cwde
(bad)
fcomp
in
jmp
jo
fiadd
push
fild
sub
movs
(bad)
dec
push
xchg
mov
xor
sbb
(bad)
pop
jo
not
test
js
jne
loop
les
jo
(bad)
or
xchg
adc
xchg
ins
lods
test
pop
jo
pop
mov
sub
(bad)
push
mov
or
arpl
adc
cld
ins
dec
sbb
mov
loop
xor
xchg
stos
fisub
cmp
push
shl
push
test
xchg
or
dec
adc
mov
mov
xor
mov
inc
mov
push
xchg
dec
cmp
cmp
fadd
retf
or
xchg
adc
add
adc
sub
test
in
pop
pop
dec
cdq
dec
adc
jmp
mov
pop
and
outs
add
push
push
lock
pop
mov
pop
xor
dec
nop
out
xor
scas
push
xchg
inc
aas
inc
popf
jbe
add
sbb
xchg
aas
rcr
mov
or
or
jl
or
ja
inc
or
enter
sbb
ret
mov
inc
cmp
push
dec
movs
and
(bad)
sbb
and
xor
sbb
adc
jecxz
shl
pop
mov
dec
adc
out
bound
cmps
inc
mov
mov
sahf
es
icebp
and
scas
xchg
enter
ins
mov
sbb
daa
ins
or
adc
push
cld
inc
mov
push
pop
sbb
sub
jo
pop
dec
mov
xor
test
ror
aam
mov
mov
push
es
jbe
push
xor
(bad)
pop
add
sahf
push
cmp
(bad)
fst
fs
push
popa
jmp
neg
jmp
ror
xchg
xchg
push
mov
test
sub
sub
add
aaa
movs
jb
je
imul
or
dec
mov
js
sub
inc
mov
je
rol
mov
add
nop
mov
dec
sub
mov
xor
xchg
movs
aam
jle
test
sub
mov
xchg
int
mov
or
sub
sbb
and
gs
cmp
and
sbb
popa
push
ds
fist
inc
push
pop
sub
aaa
mov
in
sbb
mov
and
lds
add
cld
(bad)
mov
test
mul
and
fdiv
mov
and
jmp
les
aas
test
xchg
jbe
sub
aas
test
jbe
sub
daa
es
jns
jb
mov
adc
add
ins
retf
sbb
xchg
mov
and
adc
or
add
ss
sbb
add
sub
add
xchg
scas
adc
and
add
xchg
push
add
or
out
(bad)
xchg
shl
(bad)
push
and
mov
les
sbb
(bad)
leave
scas
sbb
jl
leave
xor
mov
sbb
xchg
sbb
dec
dec
mov
(bad)
xchg
jo
fwait
or
and
pusha
jg
add
and
shl
xor
mov
push
mov
addr16
mov
pop
inc
fild
jmp
xor
lods
mov
sub
push
das
ins
xchg
inc
or
mov
jnp
push
mov
ret
mov
(bad)
movs
xchg
xchg
je
mov
adc
add
je
mov
bound
add
pop
inc
adc
movs
(bad)
jb
mov
inc
jno
jb
and
jo
jns
dec
xor
push
inc
dec
mov
pop
lds
sub
(bad)
and
outs
ret
leave
and
dec
dec
xchg
ss
pusha
pop
scas
sbb
push
dec
and
push
ficom
pop
adc
inc
inc
enter
ficom
fcomi
xchg
pusha
pop
cmp
sbb
mov
cmps
popf
push
mov
je
or
imul
mov
(bad)
out
or
test
adc
pop
mov
mov
outs
adc
jne
je
dec
ss
sbb
ins
add
mov
cmp
push
rcr
mov
fnstcw
adc
out
jl
or
jle
push
popf
mov
cmp
ja
ja
push
push
popa
inc
ss
inc
add
jne
lods
fild
test
xor
mov
jmp
or
es
cmp
sahf
or
adc
ficomp
rcr
mov
mov
nop
inc
xor
or
pop
xor
mov
add
sub
sub
fstp
mov
dec
into
xchg
popf
rcr
dec
jecxz
pop
shr
ja
(bad)
in
adc
std
inc
aam
imul
inc
xor
add
adc
ins
fs
add
cmp
fidivr
test
cmp
sbb
sbb
out
adc
add
imul
pop
shr
(bad)
fstp
imul
sbb
xlat
in
shl
lea
xor
in
push
hlt
adc
add
adc
xchg
or
jo
test
sar
sbb
mov
neg
mov
inc
xor
out
push
cmp
push
dec
add
rcl
pop
push
or
gs
adc
hlt
fild
stos
and
outs
jne
jae
dec
pop
jmp
scas
js
ins
sbb
adc
mov
add
popa
or
xchg
vprotb
dec
xor
cmp
add
dec
and
or
cmc
adc
nop
push
xchg
es
push
adc
clc
dec
dec
shr
jae
out
mov
in
add
or
mov
inc
(bad)
push
inc
add
cmps
mov
dec
dec
inc
adc
push
adc
cmp
jp
push
and
push
daa
sahf
mov
mov
adc
arpl
int3
jg
je
fwait
imul
xor
mov
adc
je
ror
or
popa
sub
mov
and
inc
add
popw
push
dec
js
mov
repz
je
xor
sbb
dec
(bad)
cmp
lock
push
xor
ror
and
sub
adc
or
push
addr16
dec
shl
xchg
and
inc
inc
jbe
pop
mov
dec
cmp
add
xor
hlt
jmp
xor
xor
adc
pop
aas
into
push
add
sbb
mov
mov
sub
xchg
jnp
hlt
sub
ss
nop
lock
xchg
dec
les
hlt
push
loopne
repz
add
mov
scas
lock
in
mov
mov
mov
cs
rol
inc
gs
cdq
and
imul
mov
and
or
adc
mov
addr16
int3
or
lock
dec
ror
cdq
jg
push
sbb
retf
lods
xor
popf
cmp
push
xchg
dec
mov
and
clc
enter
clc
add
mov
mov
mov
cmp
pop
clc
add
test
mov
mov
add
mov
loope
mov
jge
ret
pop
push
push
dec
jge
push
sub
cmps
lahf
xor
mov
dec
mov
push
shl
xchg
clc
push
inc
enter
add
or
add
adc
mov
sbb
lds
mov
jmp
adc
xor
stos
mov
or
enter
pop
add
mov
jmp
sbb
outs
mov
lea
inc
inc
lods
test
jnp
and
dec
add
and
or
in
into
in
loop
fldln2
sbb
mov
stos
test
and
sar
loope
inc
out
sbb
push
sub
(bad)
int3
cmps
fisttp
mov
aam
fcom
jmp
pusha
loop
mov
adc
sbb
adc
sub
mov
add
jno
xlat
cmp
mov
sub
out
cmp
jns
pop
int
aaa
jne
fs
mov
call
ins
ret
das
les
leave
ror
xchg
mov
lea
adc
loope
aas
sbb
sar
dec
pop
call
fcom
test
in
fdiv
fisttp
js
add
mov
fimul
leave
je
pop
push
dec
shr
mov
dec
add
outs
frstor
mov
sbb
add
xor
sbb
clc
or
daa
pop
dec
push
or
pop
jmp
xchg
jbe
xor
push
pop
and
cmps
lods
mov
pavgw
adc
mov
int3
test
xlat
xchg
lahf
int3
and
pusha
bt
ja
mov
inc
popa
jo
add
sbb
loopne
js
call
sub
or
adc
inc
bound
pusha
hlt
add
push
jo
xor
dec
jle
add
mov
test
adc
push
je
add
or
jg
aam
inc
popf
(bad)
(bad)
fnsave
jl
or
fnstcw
mov
jl
push
aas
push
add
cmp
xor
xchg
imul
inc
nop
dec
(bad)
movs
inc
je
xchg
push
mov
(bad)
and
xchg
or
add
inc
lock
daa
push
or
mov
dec
dec
dec
inc
ja
push
les
daa
xchg
sub
add
or
sahf
mov
arpl
adc
ins
imul
mov
aaa
nop
mov
stos
dec
mov
jne
push
push
retf
mov
cmc
mov
pushf
adc
repz
je
mov
push
adc
push
lock
nop
xchg
xor
add
dec
cmp
dec
xchg
test
lock
ret
pusha
int
jne
jecxz
rcr
aaa
add
inc
rol
push
mov
popf
(bad)
cmp
cmp
and
or
(bad)
ins
in
xor
aam
jo
dec
xchg
inc
xor
(bad)
xchg
ficom
das
add
(bad)
pop
fwait
mov
scas
jo
test
cmp
inc
sbb
xchg
push
or
mov
adc
cmps
adc
fstp
call
mov
mov
dec
(bad)
jbe
xchg
and
sub
aaa
shr
push
addr16
push
mov
stos
in
call
pop
xor
xor
sbb
push
pop
mov
sbb
idiv
pop
jne
ss
aaa
sbb
inc
ins
ins
je
(bad)
and
sbb
dec
and
mov
(bad)
or
cmp
rol
xor
dec
(bad)
push
aad
xor
das
add
jb
push
or
jne
cdq
mov
mov
js
pop
dec
mov
dec
sbb
repnz
sub
jle
jnp
sar
add
xchg
mov
or
int
jl
add
or
or
loopne
mov
sub
dec
sbb
(bad)
shl
sahf
cmp
fisub
rep
adc
push
js
adc
mov
(bad)
inc
jl
mov
test
mov
lock
(bad)
dec
pop
jnp
xchg
dec
jle
dec
pop
cmp
and
(bad)
or
inc
add
and
enter
sub
add
cmc
lea
cmp
ja
in
and
call
cmc
or
cs
push
jo
mov
add
inc
jmp
add
inc
and
cmp
pop
dec
in
cmps
sbb
sbb
aam
test
or
mov
push
ins
aas
adc
xchg
pusha
outs
jb
call
sbb
ins
(bad)
cmps
dec
adc
daa
mov
sub
call
inc
cmp
sbb
and
lahf
mov
(bad)
pop
cmp
ficom
fcom
adc
inc
test
sbb
xchg
add
push
pushf
(bad)
mov
sub
rcl
daa
rcr
rcl
mov
sbb
sub
add
imul
sbb
ds
push
add
adc
add
ins
call
and
add
dec
sub
jb
cli
pop
sub
outs
sub
mov
cmp
retf
push
add
add
adc
shr
xor
cmc
sub
sub
les
mov
cs
(bad)
or
sbb
mov
mov
xor
mov
lea
cs
sub
push
int3
arpl
sbb
adc
sbb
xchg
hlt
pop
jecxz
mov
adc
inc
mov
je
mov
mov
mov
pop
(bad)
daa
test
push
dec
pop
jl
push
ss
add
mov
cmc
inc
int3
add
xor
xchg
add
push
sbb
jp
add
mov
xor
sub
or
inc
jbe
int
add
(bad)
push
adc
pop
mov
inc
xor
dec
sbb
es
sub
inc
fimul
test
js
xchg
pop
and
add
ins
push
sbb
cwde
das
sbb
push
jge
das
xchg
mov
mov
fcom
sub
sub
or
jnp
inc
aas
jg
mov
push
call
enter
scas
adc
int
imul
cmp
lods
rol
fadd
inc
cmps
lea
frstor
mov
sbb
add
jns
add
and
sbb
int
jnp
mov
jecxz
cmp
xor
xor
sbb
sbb
cld
add
es
dec
repnz
push
retf
hlt
and
mov
lds
pop
pop
(bad)
and
pop
and
aad
ret
and
push
add
rcl
push
je
loopne
jne
int
fisub
xchg
inc
retf
sbb
bound
je
dec
hlt
js
retf
aaa
cwde
sub
loop
mov
and
fucomp
mov
loopne
lock
jp
jp
movs
xor
pusha
ins
adc
adc
stos
ror
xchg
jg
div
ins
je
jae
xor
inc
ret
aas
and
add
push
rol
or
inc
and
mov
loop
mov
cld
aas
sbb
push
xchg
and
jge
sub
adc
and
add
dec
xchg
je
or
or
mov
push
and
adc
adc
js
mov
cmp
pop
fcom
jo
jb
push
mov
movs
loopne
dec
or
pop
movups
or
loope
or
cs
loopne
push
inc
dec
pop
sub
and
(bad)
cmp
jl
fcomp
je
adc
mov
in
mov
xchg
xor
and
jne
mov
jl
sub
jg
jecxz
das
sar
mov
add
stc
mov
repz
mov
call
add
mov
nop
mov
in
pop
jmp
push
mov
inc
shufps
xor
cmp
call
retf
pusha
sbb
dec
mov
pop
cmp
adc
xlat
scas
adc
push
xlat
adc
out
mov
jno
sub
aaa
mov
inc
mov
fnstsw
mov
jne
data16
add
or
sbb
ins
das
push
add
and
pop
push
fidivr
sub
popa
sub
movs
sub
addr16
dec
push
push
test
outs
pop
pop
and
and
mov
sbb
sbb
sahf
inc
pop
push
shr
test
mov
popa
xlat
aad
adc
xchg
xchg
push
mov
outs
adc
jle
and
fdiv
call
push
adc
mov
ret
pop
pusha
sub
pop
jnp
hlt
push
fsubr
xor
retf
je
or
nop
add
aam
js
xor
fs
ins
mov
mov
enter
sub
and
push
in
and
test
push
sbb
lods
inc
add
mov
retf
sar
push
test
sbb
sti
lea
sahf
mov
dec
pop
mov
and
push
dec
sub
test
inc
or
or
(bad)
xor
rol
dec
cmp
xchg
pop
inc
inc
cs
dec
mov
inc
fs
xchg
cmp
mov
or
mov
cmp
jne
cmp
inc
pop
sbb
inc
adc
ja
cwde
mov
dec
bound
rcl
shl
jg
cmp
sbb
mov
movs
sub
and
inc
or
push
xchg
jo
adc
adc
mov
nop
or
in
add
cmps
dec
loope
mov
test
pop
lods
loopne
adc
jno
push
cli
adc
cmp
daa
mov
xchg
mov
outs
je
fisttp
ja
mov
sub
add
push
pop
in
sbb
lea
setl
and
ret
xchg
inc
inc
sbb
fild
jl
inc
es
jbe
cmp
movs
int3
jmp
pop
or
or
sub
pop
xchg
cmp
loopne
push
push
sub
pop
(bad)
add
mov
cmp
rcr
push
outs
jg
push
pop
xchg
ss
frstor
in
nop
cmp
test
push
inc
shl
mov
leave
ins
mov
jns
sbb
xor
call
jb
mov
or
rcl
ret
iret
add
rcl
sbb
cmp
xchg
xchg
pop
push
bound
loope
scas
adc
inc
call
mov
movs
nop
mov
or
mov
test
and
fs
enter
sar
push
add
mov
je
mov
lea
or
bound
jp
add
leave
sbb
hlt
sub
adc
add
ret
fxch
adc
test
adc
xlat
ret
pop
xor
enter
pop
inc
mov
add
jo
push
add
loop
test
mov
push
rol
pop
sub
xchg
xchg
pop
sbb
xor
or
pop
xchg
lods
inc
xor
es
mov
mov
add
add
icebp
and
inc
popa
cmp
sbb
cmp
and
push
xor
mov
or
cmp
or
push
lock
cdq
movs
pop
add
mov
push
in
aad
push
pop
jnp
cmp
das
loopne
call
or
movs
push
add
jmp
pop
lods
retf
ret
or
shl
shr
mov
mov
popf
or
gs
cmp
add
inc
(bad)
div
cmps
bound
test
and
scas
dec
sub
mov
pop
inc
sub
call
push
ret
mov
sub
pushf
das
mov
sbb
sbb
mov
ins
jae
and
push
mov
cmp
jne
adc
xor
cwde
cmp
adc
adc
pop
add
inc
add
hlt
jb
inc
mov
ror
rcl
nop
adc
xor
sahf
lea
dec
int
xor
sbb
cmp
hlt
add
add
scas
inc
sbb
add
rol
pop
in
mov
popf
jae
fxch
add
jecxz
nop
call
and
inc
(bad)
outs
adc
inc
repnz
mov
inc
outs
add
sbb
sub
inc
mov
add
add
xchg
add
sbb
data16
jmp
call
movs
sbb
in
xor
nop
movs
or
jbe
pop
daa
fadd
sahf
add
in
push
dec
mov
fsub
imul
stc
int
in
test
or
add
push
int3
pop
aaa
call
cmp
cmp
(bad)
jbe
jo
and
test
pop
add
pop
pop
adc
jp
ds
adc
xchg
mov
mov
cmps
dec
push
retf
or
lock
test
inc
adc
and
push
test
xor
mov
call
rol
mov
push
xor
test
cwde
(bad)
enter
aad
data16
fist
xchg
(bad)
into
loopne
dec
or
xchg
rol
adc
adc
mov
mov
and
mov
test
scas
push
(bad)
loopne
xchg
out
les
pop
sub
push
in
dec
jne
xchg
pushf
adc
add
cli
push
arpl
inc
scas
add
test
push
pop
push
push
pusha
(bad)
invd
mov
sub
inc
arpl
sub
div
mov
push
mov
jmp
and
mov
and
aad
test
mov
ror
cmp
cmc
je
sub
fadd
ret
dec
sbb
xchg
jg
sub
xchg
and
xor
test
mov
lds
mov
je
imul
mov
retf
enter
scas
mov
adc
xor
jmp
les
cld
xchg
iret
js
dec
sbb
pop
outs
push
mov
push
in
clc
add
ror
mov
add
inc
jne
jo
jbe
xchg
arpl
mov
sbb
jne
push
clc
mov
shr
push
add
and
sub
cmc
pop
sar
sbb
cs
mov
cs
mov
add
inc
sbb
lods
inc
xchg
cmp
inc
adc
sub
inc
call
jl
loopne
sub
inc
hlt
pusha
adc
bound
in
inc
inc
call
ja
sbb
stos
dec
sbb
sbb
xchg
call
lds
jo
push
sbb
mov
sti
jl
rcl
pop
leave
pop
popa
ins
int3
inc
or
push
test
and
je
xchg
adc
or
mov
imul
aam
jne
cmps
in
add
cwde
and
adc
jp
xor
push
fistp
rol
and
rol
inc
les
jne
jbe
sub
clc
jecxz
ins
xchg
mov
mov
inc
mov
and
xchg
add
ja
xor
aaa
xor
add
mov
out
and
jmp
cs
dec
adc
adc
pop
pop
inc
aaa
mov
and
xchg
add
into
sub
pushf
dec
push
outs
or
lock
cmp
int
imul
repnz
test
mov
mov
loope
sub
jo
dec
add
dec
popf
ins
rcl
xor
aam
push
movs
sub
cmps
aad
ja
push
(bad)
div
xchg
or
dec
arpl
inc
jecxz
jge
jb
sub
push
(bad)
sbb
sbb
jl
push
jecxz
push
xchg
sbb
fisttp
sbb
push
jecxz
push
inc
ja
and
inc
das
xor
adc
xor
dec
fmul
pop
ror
loope
or
inc
enter
repnz
push
and
movs
dec
mov
push
add
ret
sar
xor
retf
xor
imul
sbb
es
mov
add
push
inc
xchg
mov
aas
sbb
push
dec
adc
sbb
rcl
mov
bound
mov
jb
retf
push
sbb
inc
test
pop
or
loop
por
ja
popa
cmp
aam
sbb
adc
and
add
sbb
sub
and
das
mov
mov
xor
pusha
fcom
ret
pop
inc
inc
dec
lock
xor
std
je
test
leave
mov
aaa
lds
or
pusha
add
lahf
or
or
les
pop
pop
jge
dec
pop
xor
or
xor
mov
dec
cmp
das
mov
nop
ret
and
inc
icebp
in
lods
daa
pop
inc
cmp
ret
add
mov
fsubr
outs
jno
and
test
jae
mov
(bad)
mov
je
repnz
nop
out
out
call
cmovs
inc
inc
scas
pop
xor
jns
in
fs
mov
mov
xchg
add
mov
inc
jle
xor
dec
outs
add
call
mov
push
arpl
pop
add
imul
adc
jb
add
jb
jnp
mov
pop
cmp
and
inc
shr
out
jbe
loop
retf
push
fsub
test
mov
das
bound
pop
pop
dec
xor
inc
popa
adc
dec
sub
ret
fdiv
aas
ins
imul
ins
addr16
push
add
inc
call
xor
fstp
retf
cdq
popw
add
fmulp
out
call
adc
out
in
stc
inc
lods
lods
fdivr
fcom
test
cmp
aam
push
shr
sub
jns
fmulp
push
mov
inc
(bad)
(bad)
mov
lods
nop
mov
popf
mov
aam
jbe
test
push
icebp
hlt
sub
cmp
adc
mov
dec
or
test
mov
adc
cmps
nop
ss
(bad)
add
shl
jmp
test
ins
push
packuswb
push
or
add
jbe
(bad)
and
adc
pop
inc
add
jle
inc
cmc
mov
inc
dec
inc
push
push
pop
sbb
xor
push
pop
cmps
stos
pop
shl
addr16
outs
jp
call
mov
mov
mov
sar
fbstp
inc
repnz
and
and
or
(bad)
inc
mov
sub
mov
add
sub
push
das
cwde
cmp
mov
retw
and
outs
lds
or
mov
pop
shl
loop
(bad)
(bad)
cmp
je
pop
add
mov
les
sub
jb
(bad)
(bad)
call
(bad)
add
xor
add
mov
mov
mov
xor
sbb
pop
data16
(bad)
fist
les
xor
xor
mov
mov
bound
(bad)
add
bound
push
ret
pusha
sub
push
push
mov
out
out
pop
cmp
(bad)
mov
or
rol
int3
sub
add
pop
dec
sub
ja
mov
jp
loop
shl
lock
data16
loop
arpl
cmp
and
repnz
addr16
sub
aaa
retf
adc
pop
xor
icebp
mov
mov
sub
pop
mov
movs
cld
(bad)
mov
dec
inc
and
sar
push
cmp
and
dec
shl
or
ret
(bad)
fidivr
sahf
mov
rol
xor
and
add
in
pop
cld
outs
sub
mov
mov
fsub
daa
std
jl
enter
jg
in
sbb
(bad)
pcmpgtd
mov
mov
xor
add
rol
dec
inc
or
rcr
loop
fist
popa
mov
and
retf
add
int3
mov
mov
add
jns
mov
jl
js
xor
(bad)
dec
xchg
lahf
jl
out
cmp
xor
mov
mov
aam
or
loop
shr
mov
add
add
xchg
xchg
mov
icebp
push
out
xor
mov
sub
xor
xchg
mov
pop
mov
into
push
jmp
int
stos
pushf
adc
dec
aam
mov
shr
add
jmp
mov
sar
mov
outs
lock
aaa
jmp
rol
mov
repnz
mov
inc
push
shr
mov
mov
add
mov
sbb
mov
ins
jmp
int3
pop
add
imul
or
or
push
mov
sbb
retf
mov
cld
mov
push
ja
pop
mov
push
pushf
push
inc
ins
std
jg
fisttp
inc
add
xor
stos
jle
mov
sbb
(bad)
push
add
sar
jecxz
xor
or
mov
cmp
(bad)
jl
pop
mov
xor
xor
sub
push
test
fstp
push
cwde
shl
jno
pop
xor
xor
enter
or
push
neg
(bad)
fild
xor
mov
xor
mov
mov
inc
in
or
scas
add
and
sti
sub
mov
and
outs
(bad)
fnstsw
pop
ins
bound
mov
xchg
adc
pop
xor
test
xchg
xor
pop
sub
xchg
dec
jbe
xor
mov
inc
test
push
adc
mov
inc
jmp
cmp
jne
jnp
push
movs
and
sub
fisttp
add
bound
dec
jo
xchg
mov
clc
mov
cli
aam
(bad)
or
fnstenv
pop
mov
xlat
(bad)
outs
fisttp
outs
sub
das
in
fisubr
sti
je
cmp
cdq
jecxz
jmp
out
fcmove
adc
jl
cmc
mov
sub
cmp
sbb
cmp
and
jle
popa
fadd
lds
mov
ficomp
and
ds
jg
in
push
leave
cmp
mov
jge
fcomi
push
in
mov
xor
xor
mov
ds
push
xchg
and
jg
pop
xor
test
nop
jle
sbb
test
fiadd
out
mov
ja
es
sub
out
dec
(bad)
aam
adc
mov
(bad)
xor
mov
iret
(bad)
out
fwait
mov
daa
stc
pusha
cmp
aad
in
fild
xlat
lods
mov
(bad)
iret
sub
ret
sub
jg
lods
mov
inc
pop
mov
add
mov
jg
out
out
mov
xor
mov
mov
xor
mov
cmp
fnstenv
jecxz
test
sbb
mov
fs
xor
pop
xor
scas
fdiv
cs
test
xchg
retf
add
push
addr16
pop
in
jmp
jg
(bad)
fisttp
(bad)
sub
(bad)
sar
mov
pop
add
jmp
inc
add
mov
mov
jo
inc
or
pushf
sbb
pop
nop
repnz
test
test
fisubr
shr
or
test
and
imul
pop
fstp
inc
das
cmps
adc
cmps
mov
jmp
ret
rcr
loop
(bad)
leave
mov
xor
lods
jge
loopne
jne
push
dec
xchg
xor
add
aas
mov
or
push
dec
fwait
sbb
fs
scas
xor
ror
sbb
je
push
cld
stos
mov
push
dec
adc
iret
mov
sub
(bad)
call
mov
sub
mov
mov
lods
call
aaa
or
mov
stos
daa
aaa
pushf
ror
add
sti
lock
xor
(bad)
call
div
sbb
push
push
mov
pop
mov
dec
mov
push
ja
mov
inc
sbb
sub
push
dec
ds
js
int3
push
xor
cmp
add
outs
fbld
mov
imul
jmp
xchg
addr16
(bad)
fcmovnu
xor
cwde
sbb
test
mov
shr
test
xor
xor
sub
push
call
nop
sbb
adc
xor
pop
sar
cmp
lahf
mov
or
push
fs
adc
scas
cdq
shr
push
push
mov
pop
jo
mov
das
sub
lods
xor
in
test
push
xchg
cmp
sahf
(bad)
xchg
or
mov
neg
std
cmp
and
adc
je
mov
push
(bad)
sti
mov
das
pop
xchg
(bad)
push
mov
scas
xor
mov
inc
jecxz
mov
int3
mov
add
mov
loop
add
pop
stos
jb
mov
iret
clc
cdq
cmp
adc
dec
push
xor
fdiv
sbb
add
pmullw
pop
add
dec
(bad)
mov
sub
mov
rcl
aam
ins
fnstsw
je
fld
inc
ror
dec
push
sbb
dec
jne
aam
mov
jle
xchg
fisubr
shl
cli
pop
in
xor
jl
xchg
mov
mov
jle
shl
and
pop
xchg
cdq
pop
mov
aam
cmps
dec
jmp
out
mov
mov
cmp
add
jmp
fbld
(bad)
cmps
dec
fadd
jle
retf
sbb
sbb
cmps
or
mov
mov
sub
es
dec
imul
icebp
shl
movs
sub
imul
xor
repnz
pop
jns
or
jnp
jmp
add
or
add
mov
pusha
icebp
jbe
pop
xchg
(bad)
mov
mov
retf
lock
scas
push
mov
mov
loop
add
cmps
jl
ret
sbb
sbb
scas
ret
(bad)
push
pop
call
or
mov
pop
jb
lods
(bad)
push
mov
jge
add
sub
test
fs
push
call
test
es
mov
mov
test
lock
cmp
repz
test
mov
retf
adc
push
bound
mov
xor
adc
std
dec
dec
or
mov
mov
es
ss
int3
fstp
std
push
or
cmp
shl
add
sbb
mov
int
cmp
in
mov
dec
jg
pop
sar
lock
mov
mov
mov
push
jge
sbb
sbb
int3
push
js
push
jne
inc
mov
leave
adc
(bad)
fdivrp
int3
xchg
mov
push
sub
add
add
ret
outs
mov
cs
dec
enter
imul
sbb
ret
dec
and
cmp
inc
xchg
add
inc
mov
sub
loopne
ja
fwait
mov
jae
jnp
nop
ficom
mov
or
dec
cmp
ret
addr16
add
rol
repnz
mov
push
mov
and
jmp
mov
dec
mov
sbb
fldcw
hlt
push
jle
adc
dec
test
ins
add
out
clc
(bad)
fcmovb
adc
xchg
add
jg
adc
sub
enter
push
adc
pop
outs
cmp
jmp
dec
jns
xor
aad
pop
mov
pop
pop
fdivr
dec
mov
(bad)
out
shl
mov
ja
fcomp
ret
sub
xor
inc
scas
adc
lock
test
imul
xor
mov
xchg
xchg
mov
inc
popa
add
dec
mov
scas
mov
add
xlat
and
cmp
xchg
cmp
dec
sub
mov
(bad)
scas
call
ucomiss
sbb
lods
sar
in
add
outs
add
test
sbb
mov
push
xor
inc
add
sbb
fimul
jo
iret
pop
jbe
push
jo
dec
iret
inc
stos
icebp
dec
stos
mov
push
sbb
imul
fsubp
iret
jae
and
xor
sbb
test
fcom
mov
sahf
mov
cwde
jo
aad
into
imul
pop
inc
xchg
xchg
(bad)
repnz
pop
(bad)
js
int3
sub
inc
cld
add
pushf
mov
shr
jb
imul
fisub
mov
retf
lds
dec
mov
loopne
cld
clc
mov
jmp
das
cli
xor
test
push
fimul
scas
pop
dec
jmp
lods
loopne
or
icebp
mov
adc
push
neg
ror
dec
out
imul
or
cmp
repz
test
mov
int3
dec
pop
clc
mov
pop
or
sub
mov
clc
pop
out
mov
sub
mov
out
push
retf
mov
popf
cmp
jns
or
jo
mov
out
xchg
add
in
std
cmp
jae
dec
sub
add
gs
push
ss
jae
or
mov
mov
sbb
mov
mov
push
add
jb
fild
add
je
xor
xor
in
and
call
repz
iret
icebp
jbe
mov
cmp
mov
sbb
xor
dec
mov
mov
mov
mov
dec
inc
inc
adc
test
inc
out
jp
out
and
fcmovnu
into
mov
mov
leave
test
jmp
inc
mov
mov
mov
mov
pop
je
mov
and
pop
cmp
mov
xor
push
das
clc
das
ret
loop
push
sub
push
fidivr
mov
jmp
sub
inc
xchg
bound
cwde
add
inc
add
mul
jl
or
xchg
ss
cs
push
jne
and
das
mov
push
or
add
fidiv
mul
clc
fist
mov
js
rcr
inc
jp
mov
add
sti
mov
out
fild
test
icebp
lock
fdiv
fnstcw
push
cmp
pusha
loopne
xchg
push
jbe
mov
xchg
addr16
enter
push
push
xor
ins
rcr
mov
xchg
push
mov
jo
mov
add
inc
mov
dec
mov
sub
mov
inc
add
push
inc
ins
fdivr
jg
ds
pop
jbe
repnz
(bad)
stos
mov
xor
xlat
mov
(bad)
pop
push
call
sbb
rol
stc
xor
xchg
add
sub
xchg
inc
mov
inc
pop
mov
xor
sbb
mov
(bad)
retf
js
into
sbb
sub
or
jge
sbb
mov
das
xor
mov
xor
movs
sub
pop
cmp
in
cmps
xlat
inc
in
dec
mov
adc
fdivr
loope
outs
inc
(bad)
mov
sub
xor
es
mov
jmp
inc
add
sbb
add
mov
or
lock
rol
add
mov
xor
ja
jmp
adc
je
sub
sbb
adc
cmps
retf
std
add
push
(bad)
sti
fcmovne
or
xchg
stos
clc
mov
dec
and
or
fmul
push
mov
xor
or
mov
adc
cmps
nop
mov
cmp
adc
out
jns
push
enter
and
(bad)
mov
adc
add
xchg
mov
fmul
ret
push
mov
xor
mov
mov
sar
stos
das
popa
mov
mov
imul
in
sub
scas
lea
mov
push
int
(bad)
sbb
aad
dec
xchg
jnp
sbb
adc
add
push
xchg
jmp
dec
dec
(bad)
mov
stc
mov
fs
scas
clc
ret
push
movs
fistp
jg
cld
cmp
inc
aam
dec
sbb
test
test
dec
and
(bad)
mov
push
push
icebp
repnz
jmp
loopne
cmp
adc
add
cmc
out
dec
inc
ds
xor
mov
dec
cmp
sub
cli
test
jecxz
jns
or
mov
sbb
and
sbb
inc
push
popa
cmp
sar
outs
jnp
mov
iret
mov
mov
inc
adc
mov
out
repnz
lods
dec
pop
shl
jbe
test
jne
sub
push
lds
xchg
add
mov
adc
es
lock
jl
pusha
pushf
inc
imul
hlt
push
icebp
pop
(bad)
cs
add
push
sbb
xor
mov
cmps
aam
inc
jp
adc
dec
in
stos
test
stos
mov
cmp
add
out
add
ds
sub
push
mov
sub
cmp
(bad)
mov
push
add
mov
mov
jle
fcom
mov
dec
mov
dec
ds
inc
push
push
or
sub
mov
sbb
outs
dec
dec
xor
jmp
das
mov
fwait
push
xchg
mov
push
ins
cdq
sub
adc
jbe
stos
das
clc
mov
scas
mov
jle
mov
adc
sub
pop
scas
sub
fisttp
mov
mov
jb
retf
clc
xor
xor
std
jae
retf
fadd
mov
shr
loope
adc
stos
mov
mov
(bad)
xor
push
mov
sti
mov
or
add
add
and
test
mov
(bad)
mov
inc
dec
and
pop
sbb
add
call
outs
pusha
mov
pop
xor
je
dec
push
inc
jg
int
cmp
rol
pop
mov
mov
xchg
hlt
repz
loope
or
jp
inc
mov
hlt
add
jmp
mov
pop
fwait
inc
lods
add
(bad)
call
dec
std
fiadd
add
add
mov
add
loopne
das
mov
inc
outs
pop
je
cmc
push
addr16
ins
fisubr
mov
xchg
mov
push
and
adc
test
and
hlt
adc
call
xor
mov
fidivr
test
or
mov
pop
std
dec
mov
mov
enter
fidivr
stos
jle
fild
mov
mov
jle
jle
pop
xchg
fld
jns
mov
(bad)
rol
adc
add
retf
xchg
cs
dec
fisttp
repnz
push
fs
shl
pop
mov
lds
inc
and
or
xor
outs
clc
inc
jle
(bad)
mov
mov
cmps
mov
xor
jae
inc
mov
jb
or
mov
sti
out
(bad)
enter
mov
xor
bound
stos
mov
add
stc
and
sub
ss
call
(bad)
jns
xor
xor
mov
xor
in
cli
mov
sub
sbb
clc
mov
sub
xlat
data16
sar
xchg
add
adc
jg
int
sub
in
jne
push
xchg
fmul
cmp
sar
adc
sub
dec
xchg
xchg
cmc
jae
dec
pop
sub
clc
xor
(bad)
(bad)
jg
add
js
xor
push
add
push
mov
fstp
add
mov
add
(bad)
or
adc
mov
or
icebp
inc
add
cwde
jno
push
mov
push
in
movs
das
sbb
sar
mov
jo
rcl
cmp
(bad)
or
fstp
ins
mov
fisub
pop
xor
mov
add
lahf
cs
mov
inc
daa
js
rcr
lods
push
fnsave
into
mov
mov
shl
sbb
jb
cmp
in
icebp
push
adc
mov
cmp
mov
(bad)
sub
pop
pop
add
xchg
push
add
test
paddw
rcr
loop
push
mov
xor
pop
sub
in
add
or
cli
das
ret
xchg
and
xor
pop
jmp
ret
ins
or
mov
cdq
nop
jge
(bad)
pop
ficom
xchg
std
inc
jl
mov
or
pop
dec
jbe
xor
sub
add
fidivr
outs
sbb
push
sbb
push
mov
jmp
das
push
mov
cmp
pop
adc
fnstcw
neg
fiadd
outs
jnp
in
fst
test
pop
fs
je
lock
pop
or
or
rol
rcl
aam
daa
mov
add
and
mov
xchg
dec
sub
xchg
mov
loope
push
sbb
pop
sbb
push
je
pop
outs
repz
push
cmps
retf
sbb
cdq
aaa
repz
scas
push
je
jp
pop
or
hlt
in
xor
jge
mov
in
sahf
mov
movs
hlt
add
call
jmp
hlt
arpl
or
rcr
in
sub
add
mov
in
into
in
mov
add
jno
fwait
ss
loopne
fs
rol
jp
jb
or
dec
call
retf
adc
adc
add
jle
jle
mov
repz
mov
pop
(bad)
aaa
lock
mov
int3
mov
pop
fcom
cli
ds
fisub
jg
ds
sub
xor
mov
test
sbb
cs
mov
xlat
dec
dec
mov
mov
dec
loope
aaa
jmp
mov
add
inc
jge
fiadd
scas
aam
mov
adc
sahf
stos
and
pusha
or
jg
call
cmp
sbb
aad
sti
fucomip
movs
clc
dec
(bad)
sub
sub
icebp
das
xchg
pop
sub
rcl
add
mov
mov
outs
loop
sbb
sar
or
mov
imul
cli
sub
lods
mov
inc
or
cli
std
sub
or
push
mov
inc
ror
lahf
fdiv
pop
stc
call
or
fidiv
fdivr
mov
and
cmp
add
or
(bad)
or
ss
pop
jle
pop
adc
outs
cmp
add
aas
fild
cs
sub
ret
adc
add
add
cwde
(bad)
xor
cmp
inc
pop
fs
cmc
add
mov
or
mov
clc
cmp
dec
cmc
pop
(bad)
push
int
push
popa
and
add
and
add
std
sbb
push
rcr
and
push
push
mov
mov
inc
(bad)
pop
std
mov
sti
sub
out
jg
or
(bad)
(bad)
sbb
xlat
std
mov
fs
pop
(bad)
push
clc
adc
mov
sbb
adc
mov
lock
out
or
ret
xchg
fld
stc
xor
js
dec
mov
mov
sub
sbb
dec
das
mov
cli
int
jle
mov
xchg
arpl
js
pushf
push
ret
(bad)
mov
ret
cdq
loope
js
inc
add
mov
push
inc
lds
test
leave
loopne
cmp
icebp
push
in
jle
push
push
dec
pop
and
inc
sbb
mov
fisttp
sub
add
or
f2xm1
pop
cli
ja
dec
add
xor
lahf
lds
add
ss
jnp
inc
retf
out
outs
xor
sub
dec
call
and
mov
loopne
xor
cmc
dec
sahf
shl
pop
mov
pushf
clc
ja
add
nop
jns
icebp
out
inc
mov
leave
mov
in
dec
inc
aaa
adc
add
push
shr
add
mov
pop
add
shl
sar
sbb
fild
cld
arpl
cmp
fidivr
mov
icebp
mov
jns
dec
jmp
adc
shl
add
push
(bad)
adc
cld
aaa
cmps
adc
adc
sbb
ror
inc
test
into
jl
jl
jge
loope
xor
scas
xor
push
and
fldenv
aaa
cld
dec
mov
imul
and
sub
rcr
or
mov
js
mov
dec
sahf
mov
clc
push
mov
dec
jbe
int3
add
mov
addr16
sahf
xor
mov
or
dec
outs
jg
ror
bound
xor
arpl
add
adc
add
(bad)
inc
push
or
jnp
ds
push
pop
and
cmp
adc
or
loopne
mov
adc
inc
xor
ds
clc
jg
xchg
jns
sub
aad
sub
add
mov
jp
add
inc
mov
jno
es
sar
repz
in
dec
pop
bound
lock
pusha
jnp
mov
mul
scas
shl
mov
js
cld
pop
xor
aam
pusha
arpl
test
mov
push
push
(bad)
mov
inc
repnz
pop
mov
pop
pop
dec
lock
out
inc
mov
add
in
push
and
push
mov
xchg
outs
jg
xchg
aad
shr
add
mov
aam
out
pop
mov
and
push
mov
push
mov
loop
or
mov
gs
stos
call
mov
cld
adc
nop
xor
add
mov
push
cld
pop
push
iret
push
out
push
mov
xor
cwde
mov
leave
dec
mov
adc
addr16
sub
pop
cs
jp
adc
and
sub
inc
mov
cmps
ret
inc
dec
mov
hlt
sbb
and
cmp
test
jl
inc
loopne
xchg
push
pop
not
and
lea
and
out
mov
movs
sub
fcmovb
jbe
jmp
rcr
mov
aaa
xor
dec
cld
jne
adc
pop
mov
ret
std
imul
mov
or
mov
sub
mov
repnz
add
icebp
dec
xor
lock
sbb
or
mov
mov
sti
imul
adc
mov
ins
push
mov
xchg
mov
pusha
mov
mov
clc
out
loope
push
lea
xchg
pop
out
jl
mov
fsub
test
ins
dec
mov
pusha
mov
test
lock
hlt
fadd
loopne
dec
std
jg
(bad)
popf
xor
inc
jle
adc
mov
cwde
adc
xor
push
adc
(bad)
xchg
fisubr
xor
adc
mov
test
mov
and
xor
or
(bad)
mov
add
mov
and
pop
jb
out
in
or
sub
ins
icebp
jmp
(bad)
push
mov
cld
dec
xor
xor
mov
jp
les
xor
cmp
xor
jg
pop
push
mov
loop
and
jg
inc
dec
inc
pop
push
ret
int
push
push
mov
dec
mov
push
push
dec
inc
xor
xor
fist
bound
sub
add
fucom
cwde
inc
lds
xor
mov
mov
xor
scas
int3
push
call
push
popa
mov
call
ret
sbb
add
add
pushf
leave
fld
jle
and
inc
mov
add
enter
neg
jmp
mov
inc
push
mov
dec
shr
and
push
cmc
stos
push
mov
mov
cli
mov
jle
es
dec
mov
push
xchg
or
push
test
push
retf
pusha
cld
test
xchg
test
ret
jmp
(bad)
pop
or
push
pop
adc
xlat
add
mov
sahf
sub
(bad)
fwait
pop
sbb
push
mov
scas
pop
nop
fwait
leave
cmp
fild
fcomp
inc
xor
add
dec
sub
std
loopne
shl
push
inc
sbb
add
out
leave
xlat
adc
and
jno
mov
mov
bound
imul
sbb
add
fiadd
jb
dec
hlt
movs
add
test
test
xor
and
push
icebp
ret
stos
pusha
(bad)
cmp
mov
in
sub
xor
mov
mov
fnstsw
mov
mov
scas
clc
sub
loopne
cmp
sbb
and
(bad)
xor
pop
outs
les
dec
pop
xor
push
les
adc
adc
pop
movs
xlat
add
add
mov
jp
dec
push
jo
stos
nop
mov
mov
xchg
xor
les
mov
dec
xor
push
mov
mov
adc
imul
or
movs
fs
or
fidivr
or
cmp
(bad)
aaa
push
pop
ror
clc
aas
sub
popf
inc
jge
jmp
inc
fidivr
js
mov
mov
inc
inc
outs
pop
data16
jmp
rol
cmp
repz
push
je
mov
mov
sub
cmp
imul
fidivr
fld
(bad)
or
rcl
shl
adc
lock
out
jl
add
mov
xchg
fs
nop
or
jmp
sub
push
(bad)
aas
xlat
push
movs
(bad)
repz
jne
add
int3
jmp
je
mov
scas
bound
jl
test
dec
mov
mov
sub
pop
jecxz
cmps
aaa
retf
dec
xchg
dec
leave
add
push
push
mov
inc
push
mov
call
enter
je
and
or
jecxz
lock
cmp
pop
clc
pop
mov
(bad)
mov
mov
inc
jb
cmp
xchg
pop
mov
call
mov
or
fisub
xor
mov
sti
adc
or
fsubrp
inc
outs
jg
or
xchg
mov
pop
cli
fild
pop
xlat
dec
xor
mov
xor
inc
ins
push
fwait
mov
mov
adc
mov
mov
repnz
mov
xor
push
push
mov
pop
mov
adc
ficomp
sti
push
and
mov
cmp
sbb
dec
jmp
icebp
lea
push
lahf
pop
lock
in
mov
add
fs
ins
movs
jl
(bad)
push
fstp
cmp
inc
sbb
mov
fisubr
shr
out
dec
ret
stos
xor
sbb
push
mov
lock
(bad)
adc
cmp
repz
cmp
cdq
jne
inc
data16
fiadd
mov
retf
scas
andps
jg
xor
mov
mov
lock
xchg
fwait
outs
mov
mov
or
adc
ret
cld
loope
sub
dec
in
sbb
cmp
mov
xor
pop
inc
cmp
cld
fcmovnu
sahf
or
mov
pop
push
xor
xor
pop
clc
dec
out
daa
push
shr
sar
dec
ins
sbb
jg
or
sbb
push
dec
sbb
rcl
fidivr
movs
ret
inc
inc
(bad)
ror
imul
mov
jl
stc
mov
xchg
data16
dec
sbb
sub
(bad)
jmp
lock
cmp
lods
mov
lock
test
les
sub
and
xor
aad
mov
push
pmuludq
sub
aad
sar
pop
dec
or
and
fidivr
(bad)
pop
in
sub
mov
sbb
xchg
jmp
jl
call
xor
xor
sbb
add
inc
push
retf
outs
ds
sub
in
add
mov
lock
outs
adc
mov
ret
mov
add
or
out
(bad)
fisub
cmp
xor
shl
test
fsubr
mov
imul
aas
nop
cmp
add
in
not
fldcw
js
dec
dec
rol
pop
sub
or
pop
(bad)
pop
outs
cmps
or
jmp
and
xchg
jl
fwait
lea
pusha
jnp
jbe
lahf
test
mov
retf
mov
fsubr
xor
mov
mov
repnz
cmps
mov
ror
push
jo
sbb
push
mov
aaa
or
enter
shr
retf
xchg
sti
sbb
cld
push
push
mov
fdivp
xor
xchg
or
in
pop
mov
aaa
push
sbb
mov
or
les
lock
mov
inc
sbb
icebp
pop
pop
sub
fnstenv
int
add
(bad)
aas
fadd
add
dec
xor
in
adc
xor
sub
inc
or
mov
push
pop
xchg
loopne
pop
mov
cwde
or
inc
js
cmp
and
mov
or
icebp
inc
sub
pop
lea
mov
add
bsr
sti
mov
mov
xchg
or
addr16
mov
in
pop
icebp
arpl
cmp
sub
sbb
push
xchg
pop
adc
fldenv
mov
add
repz
loopne
fwait
gs
or
mov
dec
jns
or
inc
(bad)
std
sub
mov
or
mov
ror
xchg
mov
mov
cld
or
lods
inc
repz
leave
aam
pop
js
ja
push
push
bound
icebp
xor
test
mov
jg
push
pusha
mov
mov
ret
push
jno
cmp
shl
push
mov
retf
push
jge
xor
xor
and
cld
idiv
cmp
loopne
and
outs
mov
(bad)
jg
xlat
mov
push
mov
mov
xor
mov
lock
pop
sub
repz
into
repz
ret
push
(bad)
jmp
data16
jno
pop
pop
and
push
stc
xchg
cmp
sub
inc
jns
push
mov
push
stos
lock
or
lock
or
adc
(bad)
sub
out
je
les
add
jbe
xchg
mov
jno
mov
stc
sub
mov
xchg
pop
inc
mov
aaa
loop
test
cmp
(bad)
mov
fmul
pusha
call
mov
mov
std
add
icebp
add
push
pop
or
push
std
stos
add
xor
push
push
leave
cmp
adc
and
nop
pop
mov
int
push
pop
push
xor
sbb
stos
or
gs
push
pop
xlat
and
sti
sbb
jge
dec
add
xchg
sub
mov
add
mov
cmp
mov
adc
das
cmps
cmp
push
mov
repnz
sti
push
sub
mov
ins
pop
inc
inc
pusha
mov
sbb
push
or
add
jmp
push
mov
dec
jecxz
mov
pop
push
(bad)
out
jp
push
dec
and
push
pop
dec
loope
ins
jle
push
loopne
adc
mov
add
inc
adc
sub
mov
mov
pop
(bad)
icebp
adc
and
push
or
push
pop
fdivr
fbstp
loop
or
icebp
push
inc
icebp
xor
add
int
gs
(bad)
repz
mov
push
dec
adc
xor
pop
cmp
xor
inc
or
or
das
dec
popa
xlat
mov
or
stos
xchg
or
jo
fs
enter
xchg
rcr
cmc
or
mov
fistp
aam
push
push
ror
xor
sbb
mov
sub
pop
aaa
xlat
or
adc
add
mov
std
je
shl
inc
fcom
xor
ror
retf
int
jle
test
xor
sbb
pop
pop
loopne
xchg
inc
add
dec
jne
cdq
mov
xor
idiv
movs
add
add
xor
loope
adc
outs
jo
scas
mov
shl
dec
movs
mov
dec
sub
lock
add
mov
mov
inc
loop
imul
xor
jne
push
(bad)
jnp
mov
xor
push
rol
repz
sub
add
mov
test
sar
sti
(bad)
fld
iret
push
and
add
push
cmp
inc
(bad)
mov
test
push
(bad)
in
(bad)
pop
push
rcr
xor
dec
push
aas
test
repz
adc
push
push
call
repnz
rol
xchg
sbb
and
add
dec
inc
and
inc
jmp
push
xor
xchg
ror
mov
xor
jl
cmp
fist
adc
das
sbb
popa
jg
jg
push
out
popf
retf
or
add
fstp
push
dec
cli
cmp
mov
movs
mov
into
les
popf
or
dec
pop
or
add
inc
sbb
mov
cli
popa
imul
fmulp
inc
inc
adc
jne
cmp
bound
outs
jo
mov
jno
adc
movs
addr16
adc
push
les
(bad)
sahf
push
push
jmp
jp
add
movs
iret
dec
mov
xchg
adc
add
out
test
mov
hlt
(bad)
adc
adc
pusha
push
mov
or
or
push
sub
aas
dec
icebp
push
push
mov
loope
xchg
out
jno
xchg
pop
cmp
or
pop
out
jne
jne
out
sahf
jne
push
ds
repnz
xchg
xor
into
arpl
movs
xor
sub
outs
fs
sbb
loopne
out
iret
push
push
push
nop
mov
ds
and
aas
outs
mov
and
inc
jno
je
dec
lock
je
mov
mov
icebp
adc
mov
mov
xor
(bad)
push
sbb
push
in
push
jg
lds
je
out
dec
add
movs
mov
adc
push
push
jle
sub
pop
pop
sub
sbb
jle
or
adc
lahf
inc
mov
mov
in
ss
loop
jmp
inc
es
xchg
xchg
xchg
add
test
jg
dec
popf
mov
push
fst
fs
push
push
call
outs
cli
repnz
xor
sbb
aaa
cmps
adc
push
in
cmps
mov
jle
push
inc
icebp
mov
adc
outs
xor
sbb
inc
es
(bad)
test
or
jle
sub
gs
or
jne
js
cmp
jne
or
(bad)
jp
je
iret
dec
js
push
out
xchg
jo
imul
dec
lock
pop
das
jg
mov
imul
pop
xor
or
daa
push
cmps
mov
les
push
aad
imul
jg
pushf
sub
jne
mov
or
adc
xchg
popa
inc
aad
sbb
cwde
add
jmp
push
jl
ss
or
test
std
jo
xchg
nop
test
jo
jge
pop
pop
xor
xor
fs
mov
add
test
hlt
push
aaa
jle
mov
fnstenv
or
dec
mov
dec
adc
fwait
xor
mov
pop
ret
or
inc
lds
aas
aaa
call
push
add
push
mov
out
mov
out
cmp
mov
idiv
sbb
push
xor
(bad)
mov
pop
mov
mov
jmp
repz
dec
inc
mov
inc
pop
mov
mov
add
(bad)
jl
jmp
jae
push
mov
add
arpl
or
push
and
dec
mov
push
inc
aaa
mov
inc
dec
jmp
add
pop
add
cwde
test
(bad)
jmp
and
(bad)
repz
sub
test
out
xchg
mov
dec
pop
inc
enter
movq
(bad)
fistp
inc
ret
lds
mov
pop
aas
or
cmc
xor
(bad)
jmp
inc
fld1
dec
jecxz
jmp
xor
jno
sub
jg
adc
js
cmp
pop
(bad)
fs
xchg
ss
ret
imul
adc
into
pop
(bad)
jmp
xchg
test
sahf
jmp
inc
arpl
add
test
cld
dec
out
push
pop
sub
ret
repz
aas
lds
(bad)
call
push
div
xor
in
sub
mov
inc
and
jg
jl
mov
mov
adc
rcl
(bad)
mov
aaa
fmul
pop
or
sti
pop
push
pusha
aas
inc
xor
and
jae
gs
clc
jg
mov
mov
xor
arpl
add
(bad)
sti
jl
(bad)
jmp
out
out
or
test
pop
sbb
cmp
inc
movs
add
dec
sub
mov
push
sbb
sti
idiv
inc
je
loop
sub
ins
add
dec
retf
imul
sti
out
cmp
aas
push
fcomi
sti
call
ss
addr16
mov
adc
and
add
loope
out
mov
sbb
mov
xor
xchg
mov
add
push
shl
out
inc
xchg
pop
mov
add
pop
or
pop
out
or
(bad)
jb
dec
(bad)
sti
dec
mov
or
in
aaa
cld
pminsw
(bad)
push
xor
ret
in
daa
add
outs
pminub
lds
inc
sar
pop
jg
inc
push
mov
and
fdiv
fwait
out
ret
add
jmp
out
je
mov
adc
addr16
mov
ret
inc
rcr
inc
pushw
(bad)
mov
ret
push
mov
xchg
mov
mov
sti
push
sar
(bad)
push
je
ret
cld
dec
fs
into
(bad)
fbstp
aas
int3
ror
iret
ret
fwait
jle
xor
bound
xor
test
cmp
call
and
mov
pop
ja
push
out
sub
xchg
js
add
cld
test
push
in
shr
xchg
sub
imul
mov
mov
fiadd
xchg
nop
ret
fs
dec
clc
add
mov
add
add
fs
stos
jg
sub
ret
ret
rol
xor
fwait
inc
mov
push
xor
lods
pop
lock
mov
add
fimul
add
xchg
(bad)
mov
mov
sub
rcr
mov
test
ins
dec
or
adc
lahf
or
mov
push
lods
dec
ud0
jg
pop
cld
aas
movs
jne
lods
frstor
jae
pop
repnz
pop
std
loopne
inc
dec
aaa
inc
loopne
mov
jae
add
mov
int3
dec
inc
in
sub
lock
(bad)
inc
push
sub
mov
add
xlat
retf
add
xor
cmc
push
and
pop
mov
pop
push
adc
jmp
sbb
cs
xlat
mov
inc
cld
inc
push
inc
mov
push
pusha
push
mov
shr
mov
call
adc
mov
or
adc
pop
(bad)
xor
clc
or
(bad)
std
mov
(bad)
(bad)
(bad)
jmp
inc
cli
mov
imul
or
sti
inc
jl
inc
call
cmp
xchg
mov
shl
inc
in
or
aas
and
(bad)
or
push
jg
inc
inc
inc
mov
jg
fld
mov
add
mov
jb
xchg
arpl
add
arpl
out
mov
inc
pop
push
adc
push
out
mov
add
cmp
test
push
test
call
push
add
jae
inc
fnstcw
arpl
inc
call
mov
mov
loopne
ins
(bad)
repz
dec
pop
sti
cmp
or
call
dec
add
cmp
mov
fimul
scas
mov
cli
cld
or
or
bound
repz
mov
rol
mov
add
mov
test
outs
js
push
jg
pop
lahf
cmp
ret
pop
add
inc
test
or
lock
xor
(bad)
call
pop
cmp
iret
neg
jl
test
into
test
ja
push
arpl
sbb
cli
dec
repz
mov
inc
add
rol
add
mov
mov
xor
call
dec
ret
sbb
inc
push
xchg
pop
mov
das
adc
out
pop
jbe
pop
pop
fdivr
cld
mov
sub
push
and
fisub
mov
imul
add
rcl
sub
sbb
jmp
mov
(bad)
pop
clc
jecxz
sbb
test
xchg
xchg
inc
push
sub
sar
outs
add
push
mov
jmp
adc
sti
cmp
jg
xor
push
mov
or
sti
fild
ficom
(bad)
xor
shl
jmp
int
and
inc
ins
ret
enter
push
std
sub
mov
out
mov
jg
cmps
add
mov
adc
scas
mov
fidiv
pop
rcr
sahf
fwait
imul
cmp
mov
cmp
pop
inc
adc
loope
sbb
mov
cmp
push
sti
adc
mov
cli
icebp
es
jo
inc
inc
push
or
jo
scas
fwait
(bad)
in
pop
test
sti
mov
retf
inc
xor
mov
push
sub
mov
mov
imul
aas
push
test
adc
lds
and
xlat
scas
add
outs
scas
push
push
int
aas
inc
pusha
jecxz
cmp
stos
rol
mov
dec
jmp
cmps
cli
int
or
mov
sbb
je
lock
dec
pop
pop
jge
pop
les
aam
adc
add
xchg
add
pop
icebp
jmp
pop
xchg
push
cli
add
or
sub
imul
ins
cmps
mov
push
dec
mov
fwait
jmp
jp
inc
mov
adc
jae
repz
adc
add
jmp
mov
xor
mov
mov
mov
test
inc
mov
in
or
mov
push
mov
add
idiv
aaa
stos
xor
sub
pop
push
ret
inc
jnp
sbb
and
inc
pop
jmp
push
sti
push
dec
cmp
jae
shl
(bad)
jb
sti
idiv
push
mov
push
imul
push
pop
cld
inc
inc
or
jg
push
push
(bad)
push
pop
call
inc
push
add
sbb
inc
dec
inc
add
rol
and
mov
mov
inc
pop
add
out
mov
fild
pop
push
jmp
mov
mov
repz
add
sti
mov
pop
fiadd
adc
call
jmp
push
popf
xchg
add
mov
jg
jb
add
and
test
push
nop
or
xor
push
add
js
test
push
add
shl
pop
fstp
out
in
push
ret
mul
add
adc
ret
inc
into
jmp
add
push
push
(bad)
cld
ror
mov
inc
ret
jg
out
jae
cs
loope
loopne
jbe
cmp
add
add
push
and
outs
push
ror
div
jg
dec
mov
icebp
sbb
sti
fild
and
adc
inc
xchg
outs
jecxz
push
cmps
sti
jmp
ins
jnp
push
xor
out
nop
call
mov
pop
or
int3
push
push
hlt
(bad)
push
inc
pushf
or
jae
std
mov
ret
pop
dec
sti
rol
(bad)
pop
(bad)
imul
pop
xlat
lahf
mov
jo
jg
add
pop
add
push
pop
jg
cmp
call
std
push
aas
clc
imul
adc
cmp
les
mov
push
rcr
ins
dec
sti
(bad)
push
(bad)
test
jo
js
xchg
(bad)
aam
inc
jl
(bad)
sub
pop
add
and
sbb
xchg
imul
(bad)
hlt
jae
out
test
out
lds
jl
pop
daa
je
inc
xchg
pushf
sbb
add
mov
bound
inc
les
outs
aaa
inc
xchg
adc
mov
aam
arpl
cli
or
hlt
ret
mov
aas
push
cmc
or
inc
inc
lea
mov
rol
(bad)
mov
pusha
out
je
mov
scas
sub
pushf
stos
(bad)
fsub
pop
rol
mov
push
push
inc
ja
std
or
cli
jmp
add
adc
inc
push
adc
or
repnz
sub
out
cli
add
iret
(bad)
jg
cmc
sti
jecxz
sub
push
je
add
sub
(bad)
out
add
inc
pop
sbb
adc
xor
inc
ret
(bad)
xor
lds
mov
mov
mov
pop
test
repz
mov
mov
scas
dec
hlt
adc
pop
inc
fsubr
nop
adc
out
paddd
and
inc
dec
std
mov
test
push
sti
pop
or
pop
aas
inc
lds
loopne
jb
cs
std
jmp
pxor
adc
xor
outs
lds
inc
fs
test
std
inc
sbb
outs
(bad)
rol
jl
out
jmp
(bad)
adc
and
rol
push
mov
adc
sti
jge
repnz
dec
mov
call
mov
pop
push
gs
sub
and
outs
adc
adc
jno
push
push
outs
cmp
add
mov
je
movaps
arpl
aaa
cld
fwait
inc
mov
push
ja
jae
xor
pushf
repnz
mov
jmp
pop
jae
push
pop
out
sub
and
call
mov
call
scas
add
inc
inc
sbb
pop
ds
out
ror
mov
aas
cmp
sti
dec
call
add
outs
std
inc
mov
xchg
(bad)
pop
in
(bad)
aas
add
ds
ret
add
pop
inc
xchg
add
in
mov
aas
push
add
cld
pop
cmp
cwde
addr16
out
mov
jbe
pop
inc
inc
cmp
inc
jbe
ret
pop
push
fcmove
xchg
pusha
(bad)
mov
lds
test
out
fwait
cli
mov
cmp
dec
mov
xor
dec
jno
push
outs
push
shl
jae
pop
hlt
add
xchg
out
cs
inc
inc
(bad)
pop
shr
inc
addr16
adc
arpl
dec
ret
movntq
inc
(bad)
xchg
mov
xor
aaa
cld
jg
mov
jmp
add
(bad)
clc
scas
xor
cmp
adc
(bad)
inc
mov
jg
sbb
inc
out
adc
test
mov
call
jg
pop
cli
inc
add
push
add
mov
mov
aas
ins
cmp
sub
push
push
jno
jg
arpl
add
jg
ret
aad
pop
sbb
push
sbb
jp
mov
test
jae
jle
mov
bound
and
add
xchg
adc
pop
fs
cmp
outs
dec
retf
push
mov
ret
outs
test
(bad)
and
das
shr
sub
push
sub
retf
cmps
or
mov
scas
add
(bad)
xlat
nop
dec
or
pop
dec
lds
add
ret
and
aaa
push
sub
loopne
xlat
pop
aam
add
fdivr
movs
idiv
inc
inc
rcl
cli
jg
cmp
inc
sti
and
add
scas
call
mov
(bad)
push
jb
out
mov
mov
inc
daa
mov
or
sub
pop
ds
(bad)
pop
push
mov
gs
cmp
and
mov
fsub
mov
push
inc
push
cwde
(bad)
idiv
dec
aas
cld
push
icebp
inc
out
jle
dec
jae
jge
shl
pop
mov
mov
ret
test
jmp
sub
pop
add
jne
mov
cwde
clc
pop
or
test
loop
push
sti
mul
outs
adc
dec
shl
retf
dec
mov
adc
es
arpl
outs
fsubr
sti
ss
ret
sub
xor
(bad)
cmps
sub
ret
push
cwde
loopne
push
or
mov
jae
pop
mov
xor
in
inc
xchg
in
rol
(bad)
add
pop
mov
pop
pop
jmp
jae
xchg
push
loope
call
adc
sub
push
mov
add
or
xor
(bad)
not
mov
inc
inc
aas
outs
xor
enter
push
inc
scas
sub
dec
pop
test
sti
imul
pop
cmps
fisubr
mov
js
js
inc
inc
push
mov
mov
arpl
inc
mov
mov
addr16
jecxz
rcl
aas
cmp
call
aas
(bad)
add
in
sbb
mov
lahf
(bad)
xchg
adc
and
push
mov
pop
inc
jge
xor
lods
cli
scas
mov
pop
pop
pop
cmp
movs
push
daa
or
push
gs
mov
push
sbb
outs
stos
push
fcmovne
push
fimul
mov
mov
out
in
aaa
sbb
mov
push
add
sub
pop
iret
pop
dec
pop
jb
push
test
inc
or
mov
(bad)
jle
add
jmp
ins
xor
inc
jae
inc
mov
xchg
rol
mov
push
inc
mov
inc
rol
(bad)
aas
pop
scas
pop
test
les
loop
mov
cmp
sbb
inc
xlat
push
inc
pop
dec
mov
mov
lds
ret
push
push
loopne
xor
(bad)
fadd
cmc
sub
mov
jp
adc
(bad)
xor
(bad)
pusha
xor
mov
cwde
popa
aas
jg
adc
cdq
sbb
mov
iret
inc
dec
or
inc
jg
mov
mov
add
inc
call
scas
call
push
push
jbe
ret
sbb
cmp
inc
adc
mov
(bad)
aam
inc
aas
(bad)
mov
push
inc
push
ror
repz
cld
ret
(bad)
xor
sub
add
imul
mov
ins
sti
pop
xlat
xchg
pop
(bad)
outs
xor
out
pop
xor
push
out
mul
fwait
ret
jnp
mov
int3
jae
ins
inc
call
ss
loop
pop
dec
inc
adc
arpl
mov
and
ss
mov
dec
mov
jmp
cmp
lahf
and
add
jmp
shl
(bad)
pusha
jecxz
add
push
push
xchg
inc
sub
jo
(bad)
xor
adc
add
push
cld
pusha
(bad)
imul
mov
icebp
ss
iret
fisttp
inc
pop
sti
jb
ins
add
hlt
mov
imul
lods
pusha
(bad)
std
push
rcl
add
ret
fstp
mov
inc
sub
in
adc
sar
xor
dec
call
mov
lods
add
jl
gs
bound
mov
push
out
mov
mov
out
push
add
ret
or
(bad)
ja
or
push
dec
add
mov
cli
inc
out
(bad)
jae
add
or
hlt
outs
aas
cs
idiv
add
mov
in
jo
lds
pop
inc
pop
(bad)
(bad)
xchg
add
inc
and
les
std
inc
adc
clc
(bad)
aas
ins
cmp
jo
mov
and
mov
sti
ins
test
mov
mov
lods
jae
pop
push
mov
(bad)
add
inc
lock
and
lods
(bad)
loopne
test
inc
and
leave
out
add
mov
test
sbb
and
jae
add
jae
inc
mov
nop
loopne
mov
push
hlt
add
and
fdivr
push
fcmovb
(bad)
mov
fild
cmp
lahf
jmp
add
sbb
add
out
jmp
add
jmp
mov
sub
ja
or
inc
xchg
xor
(bad)
xor
add
adc
jg
cmp
push
std
or
xor
mov
lods
adc
cmp
dec
mov
cmps
sar
xlat
sbb
lds
mov
dec
dec
jle
sbb
out
inc
imul
inc
push
(bad)
sbb
push
and
test
idiv
adc
stc
dec
fnstcw
or
stc
inc
aas
or
mov
dec
mov
out
mov
cmp
inc
outs
push
out
out
cli
ret
(bad)
in
cmp
dec
jne
and
push
dec
push
out
inc
adc
(bad)
aaa
rcl
push
mov
mov
push
sbb
jg
mov
adc
cmp
mov
push
jo
xchg
out
jmp
les
cmp
adc
pop
xor
test
xor
test
jmp
cmc
adc
sbb
outs
inc
pop
push
arpl
aas
call
outs
js
xchg
shl
outs
push
out
xor
sar
jmp
push
fnstcw
je
dec
call
or
loopne
mov
jmp
arpl
cli
inc
add
push
je
add
and
adc
and
nop
push
out
mov
(bad)
jg
dec
mov
add
or
outs
jae
pop
or
pop
cmp
sti
pop
jl
call
call
adc
test
mov
repnz
pop
mov
mov
(bad)
(bad)
push
aam
mov
cli
jae
mov
or
dec
fisttp
xor
ror
loop
in
ret
inc
push
mov
adc
scas
push
ficomp
ins
imul
xor
or
mov
je
pop
mov
lods
sbb
mov
ja
adc
jmp
aas
mov
retf
adc
das
xchg
mov
je
retf
push
mov
repz
inc
rcl
dec
sti
jo
pop
sbb
inc
and
lock
jb
lds
dec
or
mov
ret
idiv
mov
ins
inc
inc
(bad)
fwait
scas
sub
sti
jno
inc
push
mov
je
sbb
pushf
les
mov
fild
mov
push
jmp
shl
adc
cld
sbb
xor
mov
sub
int
push
je
(bad)
jmp
add
stc
lahf
inc
ret
in
jmp
jnp
(bad)
push
inc
dec
push
pop
push
cmp
mov
stc
fwait
adc
jbe
inc
out
pop
dec
pop
sbb
lds
loope
retf
and
mov
push
jbe
outs
clc
or
test
inc
(bad)
jg
aas
mov
(bad)
rcl
std
or
clc
push
inc
add
int3
mov
(bad)
mov
xchg
xchg
dec
push
fs
mov
push
je
fild
xor
inc
push
bound
repz
(bad)
test
test
add
(bad)
scas
push
jl
jmp
jae
jb
fbld
mov
arpl
out
(bad)
stos
or
gs
fistp
addr16
inc
(bad)
mov
lds
fidivr
out
outs
shl
and
call
push
fs
dec
mov
add
add
adc
add
push
sub
sbb
ret
add
jo
outs
fsubr
cmp
inc
gs
adc
xor
or
adc
clc
in
dec
inc
aas
outs
enter
inc
ret
pop
push
dec
mov
loopne
push
mov
movs
std
pop
xchg
xor
sub
xor
inc
add
mov
mov
test
add
push
(bad)
jmp
add
mov
and
sti
pop
aas
dec
dec
xor
add
mov
outs
aas
fst
ret
add
push
inc
ret
scas
pop
retf
cmp
fs
jno
clc
mov
mov
mov
pop
jae
stos
adc
mov
mov
mov
mov
pop
sar
shr
cmp
adc
fld
adc
cmp
mov
in
je
push
fist
push
es
adc
sub
adc
and
scas
and
mov
fdiv
cmp
rcr
test
dec
jbe
push
fs
ret
push
cli
inc
imul
or
xor
push
ins
(bad)
fisttp
(bad)
outs
pusha
cmp
test
(bad)
lods
clc
stc
mov
(bad)
scas
into
and
push
pop
arpl
jg
sbb
inc
(bad)
cmovno
je
das
jg
jo
stos
and
outs
mov
mov
test
daa
std
mov
out
cld
inc
(bad)
pusha
ret
lahf
jg
pop
or
(bad)
icebp
xchg
inc
jae
sub
push
hlt
mov
arpl
(bad)
das
inc
cmp
ds
pop
push
push
mov
mov
and
loopne
das
cld
cmp
add
es
ins
shl
out
dec
jecxz
fist
shr
hlt
retf
pop
test
push
add
dec
sti
add
in
clc
repnz
jg
push
mov
scas
jmp
inc
inc
pop
(bad)
aad
gs
push
jl
loopne
adc
add
xchg
xor
xlat
(bad)
and
push
inc
mov
dec
dec
adc
xlat
inc
rcr
shufps
shl
dec
push
jno
add
jmp
fld
mov
je
jg
jl
add
pop
add
inc
mov
mov
out
push
(bad)
fwait
add
out
or
stos
inc
lahf
sub
ret
mov
mov
mov
(bad)
and
or
push
cmp
pop
mov
jmp
and
mov
clc
out
push
jmp
jmp
fsubr
inc
xor
push
call
daa
call
pop
and
cli
bound
js
or
loopne
mov
dec
xor
mov
pop
jno
mov
mov
inc
mov
pop
push
and
inc
or
loop
fdivr
push
(bad)
cmp
jmp
add
aaa
xor
sti
push
sbb
mov
add
or
inc
jmp
mov
ret
push
xor
fistp
inc
outs
ss
aas
test
sar
ins
out
fild
sti
test
jae
inc
dec
inc
(bad)
cs
rsqrtps
ficomp
inc
fmul
mov
cmps
adc
jl
inc
adc
add
in
ja
cld
pop
inc
data16
mov
push
lds
push
aas
pop
jg
adc
xchg
pop
cmp
fadd
aas
sbb
sbb
push
cmp
push
pop
mov
sub
or
add
sti
inc
pushf
push
add
inc
push
mov
or
jne
ficom
xor
pushf
and
outs
test
jb
mov
movs
mov
fld
jb
mov
add
cld
cmps
push
call
test
add
or
(bad)
aas
mov
std
ja
dec
pop
jl
fs
add
mov
test
push
ja
arpl
(bad)
jmp
out
ja
stc
(bad)
idiv
jmp
ret
mov
add
and
mov
(bad)
(bad)
aas
xor
add
mov
dec
add
push
push
movq
pop
mov
(bad)
imul
inc
mov
dec
xchg
add
add
enter
ficom
enter
movs
rcr
push
fdivr
je
imul
add
mov
add
mov
jg
push
sbb
test
(bad)
cld
push
sub
ins
sub
ret
inc
add
rcl
cs
aas
xor
dec
loope
mov
call
adc
adc
jno
idiv
fdivr
(bad)
jmp
or
bound
sti
(bad)
das
sbb
mov
(bad)
lea
shr
and
aas
aad
imul
(bad)
repnz
lea
cmp
test
retf
push
movzx
out
mov
mov
mov
xchg
ja
out
(bad)
mov
or
mov
mov
dec
jg
mov
pop
mov
pop
std
inc
(bad)
sbb
mov
sub
pop
pop
and
push
(bad)
test
add
jno
push
pop
add
test
add
mov
(bad)
outs
adc
dec
cmovg
mov
mov
scas
pop
test
push
mov
test
dec
mov
sub
ja
and
test
lods
pop
jne
je
adc
and
shl
inc
jbe
fist
out
inc
xchg
dec
mov
cmp
std
mov
mov
mov
xor
inc
sub
push
push
in
std
mov
or
pop
inc
jo
add
push
mov
mov
xchg
push
cli
mov
push
dec
push
(bad)
out
push
ret
jmp
es
sbb
imul
or
jae
add
mov
div
add
inc
(bad)
push
jbe
xor
(bad)
jg
pop
rcl
sub
inc
jae
icebp
sti
call
inc
cmp
sub
cwde
pop
mov
inc
pop
mov
dec
(bad)
xchg
sub
pop
sub
std
neg
push
jmp
and
enter
mov
imul
(bad)
call
xchg
std
imul
icebp
cmp
imul
and
lock
add
ret
bound
pop
or
rol
sub
mov
mov
sar
sub
jge
mov
mov
inc
hlt
fisub
addr16
jmp
(bad)
loopne
inc
ins
ror
jg
(bad)
sbb
lods
pop
movs
shl
or
cmp
or
add
mov
add
aaa
ins
sbb
cmp
inc
dec
mov
pop
js
push
add
popa
ror
jmp
mov
push
sti
mov
add
iret
push
mov
outs
std
pop
push
cld
je
lock
pop
cmp
jns
repz
add
out
retf
mov
test
das
mov
cmps
pusha
add
xor
pop
out
pop
mov
mov
cld
push
jle
and
push
in
adc
or
inc
test
ins
jne
sti
inc
adc
psubsb
cmp
(bad)
push
in
add
cs
mov
push
mov
fwait
and
(bad)
jmp
or
fs
in
cmp
xchg
sbb
outs
jo
fcomip
cmp
or
ret
data16
adc
fcmovne
out
pop
sbb
jb
cli
mov
or
dec
push
adc
mov
mov
(bad)
and
mov
aaa
clc
fs
call
jmp
test
mov
out
inc
mov
pop
mov
mov
cmp
sbb
cmc
mov
add
in
gs
outs
jno
rcl
inc
mov
inc
jmp
push
mov
mov
outs
jl
scas
(bad)
push
push
mov
ret
inc
(bad)
push
mov
mov
dec
ins
int3
cld
mov
sub
pop
inc
in
push
xchg
loope
xor
aas
push
dec
hlt
and
aas
jge
adc
or
pop
icebp
out
mov
inc
inc
dec
jb
(bad)
dec
ins
imul
mov
jg
add
ds
add
(bad)
sub
ins
imul
mov
(bad)
push
pop
repnz
test
dec
add
cmc
sub
fsub
enter
push
aad
fstp
cmp
in
out
clc
sub
inc
xor
movs
xor
pop
inc
repz
cwde
pop
iret
dec
mov
fcomp
test
sbb
aas
mov
pop
add
or
pop
or
or
adc
ret
pop
adc
test
jo
dec
(bad)
dec
(bad)
mov
mov
inc
bound
xlat
fild
mov
shr
adc
adc
pushf
mov
dec
out
add
inc
je
(bad)
(bad)
xchg
jmp
sbb
pop
xor
ds
das
ror
sub
xchg
sbb
outs
mov
push
out
mov
inc
iret
(bad)
xor
movs
pop
pop
mov
imul
sbb
(bad)
push
ins
inc
inc
inc
pop
imul
adc
dec
push
test
sbb
fwait
or
adc
mov
repnz
xor
jg
jg
sbb
vmread
push
ret
cmp
out
outs
pop
aas
es
jg
xchg
not
inc
call
push
and
stc
cwde
push
in
fstp
inc
push
dec
das
movs
and
js
mov
loope
les
cld
sbb
or
inc
iret
mov
out
pop
jg
cli
repz
push
inc
sub
xchg
clc
retf
sti
pop
pop
or
sbb
popa
push
add
aaa
mov
movq
jno
pop
cmc
aaa
fadd
mov
iret
out
sti
inc
xor
adc
jg
sbb
dec
inc
mov
adc
add
cmc
(bad)
mov
out
inc
ret
fs
and
jae
ret
icebp
aas
pop
adc
or
add
lds
pop
out
xchg
add
mov
xor
call
add
das
outs
cmp
out
adc
bound
push
out
xchg
inc
cli
add
(bad)
clc
test
xor
pop
add
iret
mov
or
ror
test
jg
gs
inc
out
add
adc
push
mov
mov
fucomip
inc
cli
jae
jl
cmpps
inc
sub
mov
mov
add
out
push
or
inc
jne
xchg
addr16
arpl
mov
pusha
mov
sub
out
lahf
lds
shl
xor
inc
jge
pop
data16
das
mov
jmp
sti
sub
std
add
mul
mov
inc
push
mov
(bad)
dec
loopne
loope
das
fcmovbe
inc
movs
pop
pop
jmp
mov
push
jo
or
mov
loopne
ins
fisub
inc
or
inc
mov
cli
pop
jne
mov
mov
jmp
or
mov
add
xor
or
xchg
dec
xor
sbb
push
xor
push
xor
pop
mov
enter
std
push
add
rol
sbb
inc
sbb
sub
or
jmp
xchg
ss
xor
push
or
adc
cmp
or
call
or
loopne
inc
jmp
sti
pop
jp
add
aad
and
xor
inc
addr16
fdivr
push
in
add
jg
push
aas
inc
add
sti
es
(bad)
scas
xchg
sub
add
inc
lock
jmp
(bad)
in
mov
jbe
mov
mov
dec
sbb
out
(bad)
inc
out
cmp
(bad)
mov
inc
repz
(bad)
pop
inc
inc
js
das
fist
fdivr
pop
rol
(bad)
fild
push
xor
test
fs
pop
fistp
mov
push
inc
sub
out
sub
sub
adc
jb
sbb
daa
in
dec
ltr
pop
bound
mov
bnd
add
pop
es
cmp
push
outs
push
clc
fwait
leave
jbe
inc
pop
vandpd
cmp
dec
loope
push
stos
(bad)
push
out
or
out
dec
cmps
sar
je
jae
add
cmp
add
std
adc
call
add
adc
icebp
arpl
ss
ret
xor
fist
int3
scas
pop
cli
jmp
cmp
add
std
dec
(bad)
loop
mov
call
xchg
mov
xchg
inc
jmp
xor
or
push
jp
call
and
add
call
push
or
outs
adc
push
push
inc
jae
div
cmp
mov
push
adc
add
int
rol
call
sti
sbb
lahf
jbe
ds
out
sbb
das
test
cdq
retf
dec
sar
cmp
mov
mov
jmp
inc
sub
div
aam
inc
dec
iret
clc
sbb
cld
fild
inc
xchg
out
aas
int
mov
cs
pop
retf
and
jl
inc
inc
jo
jle
pop
ret
mov
loope
outs
and
imul
sub
or
and
outs
shl
mov
sub
mov
retf
push
xor
jmp
sub
movs
cmc
test
aaa
ja
pusha
jmp
dec
test
push
cmps
dec
jmp
call
(bad)
cli
mov
call
inc
jno
or
test
icebp
movq
adc
mov
mov
push
ret
les
or
mov
lock
arpl
mov
out
xchg
add
pop
mov
mov
inc
ret
js
cmp
adc
nop
cmp
(bad)
dec
scas
inc
jg
out
(bad)
push
int
cld
in
push
sti
cmp
sbb
aad
and
dec
jg
(bad)
jmp
pop
inc
out
push
aas
pop
pop
repnz
inc
cwde
(bad)
fstp
ret
push
(bad)
push
cmovb
pop
(bad)
inc
and
jmp
add
mov
xor
cmp
pusha
jp
ja
add
cli
pop
jmp
fild
and
out
shr
inc
(bad)
pop
retf
add
fisttp
pop
xor
or
sti
ret
dec
enter
mov
sti
das
jae
(bad)
mov
js
and
add
add
xchg
ficomp
inc
add
push
or
add
ret
call
int
or
xor
fst
out
inc
sub
jmp
jnp
adc
add
leave
jb
test
ins
ret
sub
sti
xchg
pop
sti
repz
cwde
aas
nop
push
cmp
sbb
jmp
mov
je
aas
ret
fs
daa
outs
neg
jbe
or
clc
daa
ja
inc
inc
push
jl
mov
adc
inc
test
cli
mov
dec
mov
jo
xor
push
(bad)
ds
outs
pop
pop
xchg
mov
cmc
adc
mov
mov
pop
or
out
cli
or
jno
das
pop
lds
clc
fmul
sbb
add
or
push
jmp
pop
(bad)
sar
test
inc
xlat
dec
iret
popa
ret
push
fadd
(bad)
xor
inc
lahf
or
cmp
pusha
mov
add
inc
scas
jmp
ja
adc
cld
test
comiss
mov
ins
push
inc
push
xlat
je
jno
mov
aaa
add
inc
(bad)
adc
push
mov
aad
(bad)
fwait
and
aas
mov
scas
add
bound
push
sbb
sti
mov
lock
mov
mov
jg
inc
push
jnp
mov
mov
inc
push
ss
mov
mov
mov
mov
cli
adc
iret
cmp
inc
das
rol
dec
add
(bad)
(bad)
fidivr
(bad)
cmp
cli
js
aad
(bad)
inc
(bad)
cmps
sub
fstp
mov
xchg
(bad)
outs
loop
pop
jmp
or
mov
hlt
add
xchg
mov
inc
sub
data16
ret
call
cmps
pop
or
mov
fdivrp
push
ror
pop
xchg
push
pop
and
(bad)
inc
aas
nop
sub
sub
cmps
cmp
mov
pop
ret
out
loop
scas
cmps
jg
ret
dec
das
jl
movs
test
jg
dec
adc
sub
(bad)
mov
push
pop
sub
(bad)
fild
(bad)
push
jnp
cmp
lds
das
mov
call
mov
mov
pop
adc
(bad)
mov
xor
cld
scas
mov
cld
inc
out
inc
aas
dec
sbb
(bad)
call
adc
cmc
(bad)
cld
sub
push
rcr
pop
inc
loopne
clc
ret
inc
inc
dec
int3
sbb
dec
or
jmp
sbb
inc
addr16
xor
in
add
out
aad
(bad)
jle
xlat
push
mov
inc
pop
pop
ret
sub
ror
jae
repz
test
mov
inc
(bad)
mov
pop
icebp
or
cmc
sbb
adc
pusha
(bad)
push
std
ror
pop
push
push
aam
cmp
cmps
int3
icebp
(bad)
inc
add
xor
add
pop
and
push
cmp
gs
test
scas
fild
clc
mov
dec
add
ins
(bad)
imul
add
aaa
cld
jp
jle
xchg
std
pop
sbb
jl
mul
daa
push
sub
das
shl
dec
push
cli
cmps
pop
mov
sti
or
pushf
repz
jb
test
cwde
je
adc
inc
test
retf
(bad)
(bad)
mov
arpl
cmc
cmp
xchg
inc
cmc
add
mov
(bad)
sub
adc
pop
ret
pop
rol
mov
and
push
push
cli
push
jmp
add
mov
push
(bad)
adc
add
call
sti
pop
cld
pop
xchg
mov
and
push
push
push
push
repnz
cmp
jle
mov
pop
arpl
out
mov
mov
inc
ret
pop
sub
add
push
mov
outs
xchg
shl
pop
jmp
mov
je
push
xchg
add
ret
jle
lock
(bad)
out
mov
cmp
out
inc
test
adc
dec
pop
adc
fsubr
aas
fidiv
mov
adc
push
pop
cmp
jg
add
retf
mov
mov
pop
(bad)
fst
mov
pop
clc
inc
adc
retf
jecxz
fcom
dec
sub
mov
fild
std
push
test
push
fwait
(bad)
sbb
add
add
clc
mov
cmp
and
out
sub
out
add
imul
aad
(bad)
sti
mov
pop
inc
and
inc
pop
lods
stos
les
mov
xor
adc
push
aaa
in
and
xor
out
jmp
jmp
jmp
(bad)
adc
outs
adc
or
cli
(bad)
je
lahf
mov
es
push
add
icebp
xchg
aam
(bad)
mov
push
aaa
sar
das
mov
dec
mov
mov
cld
and
shl
jbe
sub
and
aas
or
in
(bad)
jmp
fimul
push
jo
or
fild
(bad)
push
fwait
or
cmp
cmp
imul
pusha
(bad)
pop
data16
scas
pop
jp
fisttp
aam
test
ins
mov
addr16
mov
mov
push
scas
xor
inc
dec
jp
cmp
add
mov
lahf
push
add
inc
inc
shr
ror
adc
outs
and
and
and
inc
dec
jg
call
mov
push
(bad)
xor
fwait
sub
dec
push
fdivp
sti
pop
std
(bad)
jp
ret
inc
out
call
rcl
push
inc
push
mov
(bad)
(bad)
mov
and
je
aad
(bad)
ret
outs
xor
loopne
dec
or
mov
(bad)
adc
xchg
(bad)
sti
pop
jae
add
mov
and
inc
call
cmp
leave
mov
cmp
loopne
add
stos
sbb
push
mov
add
mov
mov
shr
add
dec
jmp
pop
pop
inc
add
sbb
cmp
mov
shr
cmovae
out
aas
jp
fstp
and
movs
jmp
pop
inc
xadd
add
mov
mov
inc
add
out
fadd
push
mov
mov
inc
lock
and
jae
inc
add
cli
sbb
mov
fwait
mov
(bad)
aaa
add
call
mov
mov
fdiv
call
imul
cmps
mov
xor
(bad)
inc
arpl
and
inc
dec
mov
pop
ret
ja
mov
mov
cld
cmp
mov
adc
inc
mov
aad
mov
push
cmp
sti
pop
aas
dec
out
das
js
jecxz
pop
sti
out
dec
cmp
in
inc
shr
inc
rcr
fbstp
inc
outs
push
jl
je
aaa
push
or
inc
aad
xchg
xor
xor
pop
mov
jbe
ss
inc
mov
or
cmp
sti
movs
push
outs
adc
jno
pop
mov
mov
mov
mov
mov
sub
fist
push
xor
lds
dec
adc
hlt
fisttp
das
ret
movs
(bad)
push
jnp
add
jl
jbe
xchg
cwde
dec
mov
shl
stos
cmp
mov
outs
or
mov
pusha
jb
xor
dec
xchg
add
push
push
pusha
push
call
cmps
add
ins
xor
repz
in
outs
sbb
mov
add
retf
mov
pop
push
dec
pop
arpl
mov
cmp
out
cmp
sti
out
sti
addr16
outs
fistp
jb
adc
sub
scas
push
jnp
aad
add
mov
lds
add
pop
cld
mov
fld
dec
test
aas
ret
mul
mov
inc
inc
stc
loopne
cs
punpcklbw
add
xor
ror
popa
je
jmp
mov
mov
pop
scas
mov
adc
mov
and
sbb
arpl
inc
imul
or
xor
push
out
addr16
xor
sub
call
test
std
sti
test
mov
or
outs
mov
pop
idiv
and
cwde
clc
pop
add
shl
cli
jmp
inc
sub
cs
dec
dec
data16
rol
jg
mov
in
pop
add
inc
sbb
std
sub
cmp
scas
inc
aaa
inc
dec
lds
push
loopne
push
cli
inc
inc
pop
sbb
cld
scas
scas
es
jmp
jg
(bad)
inc
cmc
mov
pushf
push
pop
out
add
out
mov
cmp
pop
mov
push
fisubr
outs
adc
call
xchg
lahf
cli
jmp
dec
sub
outs
cld
add
test
add
mov
fwait
or
mov
pop
add
mov
out
les
mov
fld
add
dec
jg
xchg
pop
in
cld
imul
mov
jmp
stos
push
lahf
arpl
shl
(bad)
sti
aas
(bad)
out
xchg
push
mov
push
push
push
xchg
dec
movs
(bad)
sti
add
jmp
mov
mov
vcvtsi2sd
(bad)
mov
jge
mov
inc
dec
add
xlat
jle
(bad)
(bad)
pop
or
fwait
jno
out
loopne
push
jl
sahf
inc
iret
hlt
pop
loopne
(bad)
fcom
push
mov
cmp
push
inc
clc
jge
outs
sbb
inc
push
mov
push
das
lods
imul
jg
sbb
nop
or
inc
repz
mov
push
in
lds
and
pop
aad
arpl
xor
jle
jl
sub
xor
ret
mov
xchg
iret
push
jp
jge
ins
fcomip
call
jbe
mov
les
stos
adc
adc
test
cmps
out
push
mov
mov
add
test
pop
or
shl
rol
ins
push
shl
mov
push
sbb
push
add
or
mov
and
aas
scas
addr16
pushf
inc
sar
rcl
(bad)
(bad)
mov
paddb
cmp
mov
dec
pop
add
scas
xchg
jmp
mov
je
pop
aas
out
mov
sti
jmp
sti
push
sbb
push
inc
imul
(bad)
jae
inc
rcr
aas
sar
cli
call
inc
sar
pusha
inc
inc
jae
test
test
push
jecxz
push
mov
or
inc
push
bound
mov
dec
jmp
stos
sbb
and
mov
inc
inc
adc
mov
sbb
or
pop
mov
pop
cmp
scas
pushf
das
fiadd
push
cmp
aad
inc
inc
inc
push
fwait
clc
lahf
(bad)
mul
jbe
cld
jg
je
add
add
mov
mov
sbb
sti
mov
add
hlt
xor
jle
(bad)
enter
shl
or
imul
loope
or
add
add
or
mov
sbb
push
and
and
adc
jmp
cld
lods
cmps
bswap
add
in
or
lds
sti
jnp
loop
mov
fdivr
sbb
scas
mov
or
inc
aas
mov
retf
pop
inc
cmp
push
mov
clc
mov
mov
out
(bad)
mov
cmp
pop
stos
inc
adc
inc
dec
and
ins
and
outs
add
idiv
cmp
jae
ret
mov
jmp
jmp
push
lods
jmp
inc
out
ss
xor
lock
ret
jae
loopne
clc
test
aaa
std
in
aad
add
and
js
pop
ins
add
add
sbb
cmp
neg
and
inc
push
dec
jg
cmc
stos
push
into
push
test
retf
loop
xlat
sub
jmp
(bad)
ins
sti
sar
mov
das
(bad)
cld
mov
mov
lock
mov
test
cld
push
dec
inc
cmp
pop
mov
ss
lock
xchg
add
lds
call
push
out
lds
mov
push
test
push
les
test
inc
push
mov
ret
sbb
outs
ins
jb
or
mov
inc
fs
lldt
retf
sbb
fbld
sbb
pusha
sbb
add
(bad)
cmp
scas
lahf
xchg
inc
mov
cmc
cld
mov
jg
mov
or
into
mov
and
idiv
idiv
add
data16
add
inc
ror
dec
cld
bound
out
je
jns
daa
cmove
jl
mov
sbb
movs
mov
adc
neg
or
ret
(bad)
dec
sbb
std
test
jae
das
push
repz
fmul
ins
dec
out
in
push
std
xchg
lds
inc
mov
xlat
adc
sub
adc
sbb
mov
mov
outs
(bad)
jecxz
mov
je
rcl
xor
jnp
stos
xor
and
cmp
add
loope
mov
adc
out
dec
jae
(bad)
mov
mov
ret
pop
mov
mov
push
jge
xchg
jae
mov
in
shl
fwait
pop
rcr
xor
cmc
outs
(bad)
push
mov
or
and
xchg
sbb
(bad)
mov
mov
cmp
ja
mov
dec
jno
pusha
inc
jb
mov
push
inc
cdq
jb
dec
sti
ret
mov
stc
push
test
(bad)
add
push
in
int3
mov
or
push
cdq
fsubp
(bad)
js
mov
jmp
clc
pop
dec
call
cmc
or
dec
in
pop
repnz
xor
ins
out
add
push
adc
or
ss
push
inc
repnz
mov
xchg
or
shl
mov
cmp
inc
cmc
push
pop
xor
scas
dec
aam
sub
jae
push
adc
add
ret
mov
push
push
enter
outs
add
jno
int3
cli
cmc
nop
imul
push
pop
jae
scas
sub
call
jp
addr16
jmp
add
inc
int3
(bad)
fcomp
inc
(bad)
mov
(bad)
fisttp
mov
stos
add
jbe
push
pop
(bad)
outs
or
fcmovnu
ins
lahf
add
pop
ret
mov
xor
inc
push
idiv
(bad)
ja
push
cmp
out
pop
fld
enter
les
mov
sub
dec
je
dec
xchg
retf
sti
sti
(bad)
push
ret
cmp
adc
adc
push
push
sub
jbe
inc
idiv
aas
cli
rol
inc
aas
add
(bad)
jae
xchg
pop
cmp
add
std
sub
inc
push
loop
xor
pop
or
(bad)
aaa
pop
adc
(bad)
sub
cli
lock
sub
xchg
push
repz
mov
and
pop
jl
addr16
clc
(bad)
mov
adc
hlt
push
push
cmp
fdiv
mov
dec
jmp
arpl
(bad)
call
aas
and
call
xchg
inc
mov
arpl
mov
and
or
push
push
lock
dec
push
sti
out
and
push
inc
add
call
jecxz
fsub
jle
lock
add
out
(bad)
pop
push
xor
push
or
adc
add
mov
scas
clc
ins
or
add
or
aad
mov
add
mov
pop
xlat
mov
inc
mov
jmp
push
pop
mov
jg
cmp
fcomip
(bad)
sbb
fcomp
mov
inc
cmp
pop
add
sar
lods
jns
mov
push
shl
sbb
into
or
mov
clc
aas
sahf
xor
adc
mov
cmp
lock
inc
inc
mov
sub
arpl
les
mov
mov
dec
inc
ret
push
jmp
inc
gs
fdivr
push
pop
out
jns
adc
inc
(bad)
shl
aas
ds
enter
shl
js
pop
adc
repnz
and
inc
adc
inc
cmp
data16
ror
lock
aaa
mov
js
enter
and
int3
ins
rcl
lds
daa
jg
repnz
stos
mov
(bad)
mov
sub
push
hlt
shl
std
sub
not
mov
sbb
xlat
outs
mov
outs
fldcw
mov
mov
mov
lahf
(bad)
call
mov
outs
cld
idiv
mov
in
sub
inc
cmp
pop
xchg
or
jmp
int
test
loop
jno
jno
pop
mov
or
fistp
out
and
xlat
cmp
push
dec
push
xchg
add
inc
cli
out
cmp
mov
shr
xor
push
inc
repnz
sar
test
pop
cli
jo
cmc
out
retf
sub
sub
hlt
sti
in
pushw
cmovg
ss
test
mov
and
xor
jmp
or
sub
add
pop
add
icebp
mov
aas
and
inc
fwait
xchg
lods
cmp
lds
sbb
sbb
mov
adc
xchg
xchg
in
leave
sub
pop
mov
xchg
inc
push
xor
adc
or
pxor
aaa
jg
(bad)
popa
and
inc
(bad)
rol
gs
mov
(bad)
out
jg
pop
add
lock
adc
btr
cmp
sub
add
out
xchg
sbb
mov
repnz
inc
ins
(bad)
fs
and
out
xchg
scas
(bad)
shr
(bad)
jnp
cli
xor
mov
dec
xlat
and
push
jbe
mov
inc
shl
fisttp
and
out
outs
das
pop
inc
shl
or
sbb
push
xor
(bad)
jnp
or
iret
dec
jg
retf
mov
push
and
sti
sbb
push
dec
jmp
pminsw
adc
aaa
lods
or
cwde
push
add
inc
or
or
mov
sub
mov
or
jmp
pop
lock
cmp
sti
daa
cld
sub
ret
cmps
mov
out
cmp
pop
je
inc
jbe
add
stos
retf
fs
pop
in
test
push
out
enter
mov
loope
pop
repz
(bad)
cmp
jg
jo
arpl
js
pop
cmp
(bad)
push
(bad)
scas
mov
mov
mov
mov
pop
sub
out
push
sbb
jnp
cld
popa
xchg
jne
outs
pusha
test
xlat
pop
aam
pop
dec
jo
cld
out
or
pop
aas
jle
inc
inc
das
push
inc
ins
mov
out
stos
(bad)
fdivr
pop
pop
push
adc
mov
dec
(bad)
xchg
sbb
out
sub
fwait
clc
jle
std
pop
addr16
pop
cmp
push
add
lods
push
mov
out
sar
push
jge
movs
cli
call
aad
les
mov
push
inc
cld
dec
loop
out
jae
(bad)
sbb
into
add
cmp
inc
ror
pop
inc
xor
jle
mov
push
clc
aam
xor
xchg
lds
push
or
test
mov
cli
mov
(bad)
pop
inc
mov
outs
xchg
sub
js
(bad)
mov
adc
or
mov
ret
inc
stc
dec
xchg
jo
xchg
xchg
ret
xor
call
fsubp
sahf
lock
das
sar
pop
dec
sbb
dec
sub
fwait
dec
mov
loopne
push
mov
or
(bad)
lds
dec
cmp
icebp
daa
cmp
inc
fild
arpl
int
push
push
inc
enter
ret
or
jl
jb
mov
inc
mov
sbb
imul
push
fs
mov
pop
mov
fsub
test
jl
and
sub
dec
inc
fs
dec
das
xor
neg
out
mov
push
xchg
cmp
add
out
mov
lods
mov
push
inc
aam
clc
inc
ret
outs
jg
mov
pop
inc
push
enter
sbb
adc
inc
inc
pop
outs
push
push
pusha
cmps
lods
fcomip
fwait
jbe
adc
jae
or
mov
inc
inc
jecxz
adc
in
add
fnstsw
das
jno
popf
xor
(bad)
adc
mov
sub
cmps
sbb
(bad)
cmp
test
dec
inc
add
int
(bad)
repnz
cli
jmp
repz
(bad)
add
jb
sbb
ret
out
inc
inc
inc
add
cld
mov
movs
cmp
enter
enter
inc
xchg
jg
and
adc
cmp
push
and
or
aam
xor
inc
imul
sti
xchg
fmul
ins
clc
ret
(bad)
(bad)
xor
push
push
test
inc
add
push
out
adc
daa
test
adc
mov
loope
mov
out
push
(bad)
fcmovnu
dec
adc
inc
jae
aas
pop
into
adc
xor
lahf
push
pop
mov
add
mov
mov
mov
inc
inc
or
out
int3
or
jmp
push
push
xor
inc
imul
ret
pop
jb
adc
les
pop
jecxz
inc
ret
inc
inc
pop
inc
jl
pop
(bad)
ret
add
je
xlat
out
xchg
or
push
sub
sub
das
inc
push
mov
dec
pop
inc
imul
add
inc
aas
idiv
rcr
das
push
(bad)
arpl
pop
je
retf
xor
mov
add
test
add
mov
push
add
mov
sbb
jb
repz
push
lds
les
or
inc
add
add
pop
sbb
das
loop
shl
xor
not
push
jl
jmp
ret
std
mov
pop
push
pop
ins
or
dec
std
pop
test
pop
out
pop
(bad)
mov
sar
add
ins
jae
call
add
jmp
and
ret
fdiv
pop
(bad)
bound
pop
sbb
ins
push
iret
pop
iret
sbb
dec
mov
sbb
cmp
cs
js
mov
mov
repnz
xlat
inc
cmp
push
mov
pop
ret
mov
cli
add
or
inc
push
xor
adc
mov
fdiv
sub
ins
push
cld
shl
test
mov
push
jae
mov
call
jb
xor
lods
retw
retf
push
or
push
sub
shl
mov
and
sbb
xchg
test
cmp
xor
pop
mov
aas
jp
mov
(bad)
fucomip
mov
push
js
outs
push
sti
(bad)
call
push
add
and
test
adc
push
add
bound
test
imul
mov
iret
dec
push
pcmpgtb
(bad)
(bad)
and
fcomip
push
push
xchg
out
xor
and
(bad)
cld
dec
sbb
and
add
mov
dec
dec
mov
sar
add
(bad)
jmp
(bad)
jg
cmp
mov
sub
xlat
dec
jae
pop
frstor
mov
and
(bad)
repz
dec
adc
xor
mov
cli
adc
je
add
and
enter
aaa
les
iret
add
xchg
test
xor
movs
mov
add
xor
icebp
test
mov
aaa
inc
mov
and
enter
jg
stos
mov
add
add
mov
add
jge
mov
mov
jae
cmp
gs
add
out
and
cmp
mov
repz
sub
fs
push
push
clc
push
or
push
add
pop
mov
(bad)
cs
fsubr
or
(bad)
pop
cmp
je
inc
(bad)
mov
pop
rcr
fist
ja
cli
nop
mov
dec
inc
mov
xchg
not
sti
mov
or
rol
mov
ins
ret
or
(bad)
leave
inc
inc
pop
(bad)
aas
mov
pop
mov
inc
dec
outs
ret
fld
jge
div
std
sub
out
aas
inc
pop
je
mov
and
jg
dec
in
mov
push
mov
dec
push
je
adc
push
mov
pop
sbb
inc
rcr
jle
inc
in
mov
sub
outs
jle
cmp
shr
(bad)
sub
xchg
stos
dec
not
push
push
mov
xchg
or
aam
add
inc
(bad)
imul
push
sbb
lods
jnp
inc
aaa
mov
(bad)
js
push
test
sub
bound
jmp
fs
enter
in
inc
sub
(bad)
xor
outs
fcomp
dec
bound
push
push
les
outs
mov
adc
sub
aad
pop
addr16
add
into
jno
addr16
push
inc
mov
js
(bad)
pop
(bad)
cmp
in
add
fld
inc
pop
or
(bad)
push
pop
inc
mov
xchg
mov
cmp
pop
add
mov
icebp
out
add
cmc
and
je
lds
les
mov
jnp
push
aaa
sbb
in
add
mov
pop
sub
add
cmps
add
inc
jbe
mov
add
cmps
fwait
push
mov
aas
jl
mov
dec
inc
push
inc
xchg
add
jecxz
dec
jae
loopne
aad
aaa
jp
cmps
(bad)
aam
pop
ud0
add
das
cmp
lds
mov
push
inc
mov
inc
or
lahf
jne
xchg
out
dec
dec
mov
push
(bad)
fiadd
mov
mov
(bad)
icebp
xor
sub
cli
(bad)
mov
mov
mov
cvtps2pd
add
test
clc
sbb
dec
pop
loopne
mov
xlat
das
add
mov
jbe
mov
sbb
inc
add
fnstcw
jmp
push
rol
add
in
add
inc
mov
cmp
push
pop
mov
lds
dec
xor
add
outs
xchg
or
pop
sub
mov
inc
mov
inc
add
jg
imul
mov
pusha
cmp
add
inc
push
push
loopne
mov
(bad)
mov
(bad)
ja
pop
push
aas
pop
add
xor
mov
jmp
dec
and
repnz
adc
ret
mov
mov
outs
add
ds
out
movs
in
pop
sbb
and
add
mov
adc
nop
pop
and
fwait
jle
add
pop
mov
sub
fcmovnbe
test
repnz
sbb
int3
icebp
inc
call
les
les
inc
rcr
pmaxsw
add
sti
pop
bnd
pop
aam
cli
fstp
jg
jmp
pop
mov
inc
push
jno
shl
clc
sbb
arpl
test
mov
push
mov
inc
rol
sbb
and
(bad)
mov
ins
dec
pusha
call
(bad)
dec
scas
pop
jnp
ror
clc
or
call
jb
mov
fs
sbb
je
cmp
cmp
inc
xor
mov
jmp
repz
adc
cld
fs
inc
xor
fistp
mov
xchg
cli
cld
addr16
sti
in
inc
xchg
sar
mov
ins
dec
(bad)
mov
adc
loope
imul
cmp
sar
test
add
push
(bad)
push
inc
cld
(bad)
cmp
xor
mov
add
or
or
repz
jno
unpcklps
xchg
fiadd
adc
sub
pop
shl
lods
mov
xor
inc
jae
and
add
ror
stos
adc
loopne
xor
out
mov
sar
(bad)
cmp
push
into
lahf
imul
outs
clc
mov
enter
pop
sub
mov
mov
xchg
fcomip
cmps
neg
loope
inc
cmc
dec
xlat
xchg
pop
add
dec
ret
call
inc
call
imul
in
fstp
dec
loopne
stc
jg
enter
xchg
out
push
leave
add
inc
dec
xchg
jmp
push
jg
iret
(bad)
inc
dec
jno
dec
int3
xchg
out
arpl
pop
mov
or
add
in
retf
push
adc
fisttp
pop
push
mov
popa
outs
jae
sar
mul
push
dec
ror
dec
aas
xchg
fs
pop
push
sbb
sub
push
test
push
ret
(bad)
jg
push
dec
sti
jg
jmp
cmp
lds
mov
retf
(bad)
push
out
js
(bad)
ss
(bad)
mov
inc
mov
mov
or
fld
fiadd
mov
sub
add
movs
jg
xlat
or
jp
jmpw
lds
mov
ss
add
pop
push
das
jmp
fdivr
or
jmp
push
pop
mov
inc
outs
mov
push
inc
sti
inc
adc
fild
adc
call
dec
outs
and
(bad)
mul
dec
pop
cld
jae
dec
add
cmp
cli
pop
jg
pop
add
cmp
push
add
mov
retf
out
pop
add
shl
or
repz
lock
mov
mov
scas
ja
pop
or
adc
mov
mov
or
or
add
mov
add
mov
lods
mov
out
in
imul
stos
in
out
fist
out
les
push
or
mov
push
lods
cmps
in
xchg
(bad)
dec
and
adc
icebp
jg
add
adc
and
add
jl
adc
clc
mov
pop
mov
clc
pop
mov
test
dec
test
out
xchg
mov
in
push
add
loopne
sub
call
pop
divps
mov
push
in
push
or
shl
push
push
sahf
mov
xor
adc
(bad)
or
dec
inc
lods
(bad)
out
ret
pop
clc
mov
inc
inc
push
addr16
out
hlt
outs
outs
add
mov
mov
mov
lods
sbb
sar
jg
or
mov
jg
add
ins
inc
xor
mov
arpl
push
add
cmp
inc
int
out
(bad)
arpl
out
xor
call
out
adc
add
add
test
xor
push
dec
add
lods
inc
mov
(bad)
push
ret
test
std
jmp
cmp
jne
mov
push
div
(bad)
sbb
lds
popa
inc
cmp
add
add
jne
sahf
pmovmskb
shl
rcr
(bad)
mov
cli
or
mov
ins
lds
jmp
add
and
dec
mov
dec
js
loope
jl
pusha
rcr
cmp
(bad)
jl
ret
jle
ja
call
push
mov
sar
dec
add
call
inc
push
inc
xlat
sub
push
pop
jle
retf
pop
inc
xchg
jg
xchg
inc
cld
mov
pop
jno
pop
cld
bound
dec
inc
jae
xlat
mov
sub
je
repz
push
mov
retf
imul
(bad)
sti
jmp
mov
imul
jp
push
out
add
out
cmc
(bad)
push
push
push
scas
push
sbb
push
(bad)
inc
sar
push
xchg
cs
test
or
ret
mov
das
xor
aaa
dec
test
test
jg
push
loopne
pop
push
dec
push
jae
aaa
mov
call
push
outs
(bad)
(bad)
add
das
add
dec
enter
add
mov
repnz
mov
mov
add
mov
jl
jnp
push
push
mov
sub
lods
add
cmp
and
arpl
inc
cs
push
cld
jmp
adc
mov
mov
sbb
push
call
push
dec
shl
pop
add
enter
push
mov
imul
sbb
dec
sub
mov
sti
inc
arpl
je
std
sbb
mov
out
adc
pusha
mov
js
jl
aaa
jne
fld
xchg
add
ins
sbb
pop
and
jle
in
mov
cmp
shl
inc
dec
rcl
outs
mov
icebp
test
sbb
enter
out
jl
sbb
call
fwait
sbb
jg
mov
popf
sbb
adc
rcr
je
fld
push
rol
or
(bad)
out
and
mov
gs
adc
inc
aaa
xor
mov
(bad)
push
add
sub
das
test
cmp
push
add
push
jle
lahf
mov
mov
mov
inc
shr
pop
cmp
mov
mov
movs
xor
dec
push
and
aam
(bad)
xlat
push
sahf
nop
fucomi
test
retf
nop
lods
retf
push
xchg
sbb
inc
lahf
das
pop
inc
sti
inc
sbb
std
shr
and
ins
dec
cld
xor
inc
and
pop
push
movs
xchg
mov
repnz
add
cmp
mov
inc
(bad)
out
add
inc
cmp
or
cmc
push
int3
add
mov
pop
dec
out
cmp
lahf
push
push
jge
mov
test
bound
push
(bad)
lods
dec
jl
aas
or
mov
jbe
add
add
inc
ja
data16
mov
mov
mov
mov
or
inc
jg
and
mov
dec
(bad)
xchg
shl
jg
or
(bad)
xchg
pop
neg
mov
sub
mov
ficomp
inc
jg
cdq
cmp
pop
out
call
or
jmp
push
nop
in
cmp
pop
sbb
loop
pop
loopne
std
inc
dec
inc
add
adc
addr16
inc
pusha
push
mov
xor
or
call
sar
push
inc
stc
mov
aas
aas
push
mov
test
inc
pop
enter
je
mov
mov
retf
outs
out
cli
sbb
sub
pop
xor
mov
mov
mov
test
popf
(bad)
jne
lods
cli
(bad)
lods
ret
pop
fisttp
jl
add
fwait
push
add
fs
clc
jno
dec
lock
cmp
mov
push
das
test
imul
test
retf
and
mov
mov
sar
aaa
push
and
inc
and
jmp
push
or
mov
jno
fimul
cmps
call
adc
in
int3
and
int3
inc
sahf
mov
ret
mov
test
jl
dec
inc
and
mul
ret
add
dec
pop
std
xchg
outs
sti
mov
dec
jl
outs
or
(bad)
jmp
and
jp
mov
call
or
mov
inc
push
dec
inc
out
(bad)
add
sub
sbb
mov
pop
mov
sub
das
call
dec
pop
jl
addr16
stos
inc
and
js
or
cmp
jmp
int3
add
test
xor
dec
dec
stos
adc
cmps
mov
inc
dec
ret
add
pushf
enter
jg
in
sbb
sub
push
das
test
mov
add
out
sbb
dec
out
push
pop
repz
push
data16
and
pop
push
retf
push
push
adc
dec
xlat
add
stc
pusha
bnd
lahf
pusha
xchg
aam
jle
test
pop
imul
aad
jg
sbb
mov
(bad)
pushf
loop
je
scas
adc
(bad)
test
in
vandnps
pop
add
inc
inc
sti
xor
pop
(bad)
repz
loop
loope
inc
and
call
add
movs
icebp
sbb
aas
push
addr16
mov
ret
cmp
add
jmp
mov
push
sbb
adc
pusha
pop
(bad)
call
push
pusha
push
add
je
in
out
adc
call
bound
retf
push
ds
adc
cs
pop
xor
inc
add
jno
push
add
outs
repnz
dec
std
mov
shl
push
push
imul
inc
bound
push
cmp
mov
add
sub
inc
std
push
gs
repz
dec
hlt
fmul
rol
dec
outs
je
inc
pop
cmp
(bad)
jae
xchg
jg
cli
push
xor
shl
xor
loopne
add
fadd
cmp
add
lods
inc
call
pop
jae
rol
mov
sbb
xor
fild
dec
mov
xlat
or
mov
nop
arpl
repz
and
mov
cmp
inc
out
push
adc
call
arpl
or
sahf
inc
enter
aas
adc
cmp
xchg
mov
push
(bad)
xor
sbb
mov
dec
test
jecxz
xor
mov
sti
dec
js
inc
lds
pop
sub
or
mul
cmp
or
ret
gs
or
pop
out
add
push
mov
adc
add
sti
mov
add
push
push
test
sub
push
sub
fnsave
add
adc
lods
ja
aam
(bad)
fld
jnp
xor
dec
les
in
push
jnp
dec
jmp
inc
ins
cmp
pusha
das
mov
fucomi
pop
xchg
pop
push
lods
push
pop
repnz
js
call
test
clc
js
inc
pop
inc
call
(bad)
stos
push
add
xor
cmp
(bad)
addr16
inc
inc
(bad)
(bad)
dec
push
or
je
je
pop
cmc
xchg
or
sti
pop
sti
cmp
das
repz
jmp
sbb
cmc
out
push
add
mov
inc
sub
aas
mov
cmp
add
popa
xchg
or
aad
jmp
(bad)
(bad)
call
push
mov
inc
inc
push
push
hlt
pop
sub
and
aaa
pop
mov
push
fild
in
scas
jo
xchg
jmp
stos
add
fs
pop
call
jmp
or
adc
sbb
and
jmp
xchg
adc
in
das
xor
stos
mov
jae
out
adc
xor
and
pop
test
add
(bad)
ins
(bad)
pop
(bad)
inc
rol
cmp
aas
das
sbb
or
sub
test
loopne
out
ss
mov
or
test
nop
jp
mov
stos
xor
fisubr
push
xor
add
jmp
mov
movs
sti
mov
repz
inc
jmp
call
lds
icebp
xor
inc
push
mov
pop
push
push
xor
dec
pop
fmul
inc
shld
imul
dec
sub
jl
sub
je
dec
add
xor
sar
inc
aas
mov
outs
mov
pop
and
arpl
xchg
add
std
(bad)
pop
out
add
jb
arpl
ja
xor
jmp
fld
pop
inc
jae
fs
mov
xchg
call
inc
mov
sti
lods
js
adc
ds
out
pop
ja
scas
adc
ror
ret
lock
je
add
push
arpl
sbb
sub
lods
add
sbb
into
push
out
jmp
fild
jmp
mov
pop
and
pop
imul
iret
inc
(bad)
movsx
shr
inc
cmp
inc
xor
bound
xchg
mov
cmp
jmp
mov
xor
ffree
sbb
js
adc
addr16
push
adc
or
jmp
popa
push
pop
mov
loope
enter
(bad)
mov
pop
xchg
inc
jl
je
cmp
sub
or
mov
jmp
add
cmp
ret
mov
pop
lock
test
std
mov
jg
add
mov
cmp
inc
jg
lods
cli
cmp
(bad)
mov
cmp
in
test
xchg
inc
int3
add
or
outs
jmp
leave
fnstcw
mov
sub
out
and
ret
cmp
mov
dec
jmp
rol
pop
inc
xchg
(bad)
jmp
sbb
imul
jae
outs
je
sbb
inc
and
mov
mov
jno
pop
mov
push
ins
cmp
mov
sub
cmc
mov
cmp
add
push
push
jb
push
ins
inc
mov
loop
outs
(bad)
out
lahf
movs
sbb
pop
push
mov
sub
inc
test
push
lock
or
arpl
sub
pop
das
xor
or
pusha
mov
pop
loope
jb
xor
lds
xor
arpl
sar
inc
ret
jg
das
dec
jl
dec
fs
xlat
ret
lods
jmp
punpcklbw
outs
imul
(bad)
rol
(bad)
sub
out
xchg
xor
ret
xchg
call
cmc
cmp
add
inc
in
pop
pop
ja
inc
and
(bad)
mov
retf
mov
and
fisttp
xor
pop
xor
mov
add
add
inc
rol
xlat
call
or
inc
jb
pop
and
(bad)
pusha
call
push
jp
test
mov
sbb
ret
cmc
sbb
push
dec
push
push
test
(bad)
call
pop
idiv
mov
and
push
mov
jg
mov
stos
ret
push
pop
push
mov
xchg
inc
or
dec
out
pushf
pop
mov
pop
and
mov
scas
lods
cs
mov
mov
inc
into
inc
iret
je
add
pop
jg
pop
into
in
jnp
std
xor
xor
mov
mov
loop
mov
addr16
pop
cli
jmp
push
cmp
or
dec
in
adc
inc
inc
ins
out
jmp
mov
aaa
and
add
cmp
jl
ret
je
or
mov
arpl
jmp
cli
sti
sub
in
push
mov
mov
adc
jae
test
mov
push
ja
inc
xchg
or
(bad)
je
pop
test
repz
mov
push
pop
pop
sbb
ficomp
ret
dec
and
pop
lock
jae
inc
aas
cmp
xchg
xchg
lahf
cmps
sub
mov
pop
std
xor
or
sub
fsubr
enter
dec
pop
or
mov
push
pop
sar
jmp
pop
and
jp
pop
nop
or
inc
call
retf
ins
xchg
mov
loop
repz
call
push
and
push
ret
mov
ss
inc
pop
jp
inc
pop
xchg
(bad)
sbb
stos
xor
inc
add
retf
test
add
out
mov
cmp
mov
outs
jno
je
push
sbb
or
pop
sub
ins
dec
mov
push
jo
jae
rol
ja
push
loopne
je
mov
scas
ret
cmp
sbb
fmul
add
cmp
ja
fnstsw
and
push
push
in
push
dec
fcos
fwait
add
pop
inc
adc
inc
add
ret
mov
out
mov
ja
adc
mov
(bad)
mov
add
stos
mov
jb
(bad)
fisttp
mov
call
xor
mov
xchg
and
inc
imul
jge
sbb
xchg
and
and
in
scas
add
fadd
ss
sbb
jl
aas
cmp
arpl
fdiv
outs
sub
(bad)
cli
pop
add
fsubr
mov
(bad)
jmp
cld
and
lsl
sbb
dec
jae
pop
xchg
out
inc
mov
ins
sbb
jle
int3
pop
xchg
mov
cmps
inc
fsub
add
aas
dec
movs
or
add
fs
cmp
cmc
push
and
sub
(bad)
inc
or
jp
add
xor
add
sti
lahf
pop
std
cmp
std
add
jae
lahf
in
sbb
imul
and
outs
mov
add
call
inc
adc
data16
dec
jo
push
inc
les
lock
push
adc
or
(bad)
mov
add
dec
mov
aas
jl
inc
xor
push
add
or
test
lahf
xlat
sub
push
std
sub
cmps
(bad)
mov
in
inc
jp
fimul
add
xchg
loope
icebp
push
call
std
cld
add
rol
mul
fadd
and
inc
cli
sub
pop
icebp
movs
(bad)
push
es
push
jmp
ja
jl
arpl
add
mov
xchg
imul
push
pop
inc
ds
push
cmp
daa
(bad)
cld
fadd
mov
xor
push
hlt
gs
test
push
ins
ret
mov
xchg
shl
leave
mov
xor
(bad)
mov
(bad)
repz
out
pop
jge
(bad)
push
push
mov
jo
das
std
stc
add
nop
or
sar
sub
inc
aas
push
(bad)
adc
mov
pop
stos
mov
std
dec
add
pop
icebp
lahf
mov
pop
mov
sti
(bad)
cmp
inc
and
out
shl
cs
xlat
iret
bswap
data16
not
test
ret
arpl
pop
pop
(bad)
sbb
xchg
mov
je
(bad)
(bad)
push
dec
(bad)
push
out
inc
movs
icebp
add
add
movs
fadd
push
aaa
dec
xchg
xchg
cld
movs
push
sub
int3
test
mov
mov
dec
add
dec
data16
in
(bad)
fbld
jbe
adc
and
jl
in
xchg
dec
sub
pop
sar
pop
pusha
(bad)
(bad)
je
dec
pop
stos
push
jp
aam
push
jmp
jge
scas
jecxz
xor
or
(bad)
retf
inc
pusha
mov
(bad)
sti
sub
xchg
je
leave
aad
(bad)
sub
mov
inc
sti
cmc
imul
pop
sti
out
inc
pop
cmp
mov
xor
sbb
push
les
stos
cmc
mov
mov
out
pusha
cmps
ss
dec
out
mov
push
mov
rcr
or
dec
pusha
jl
jg
icebp
fiadd
pop
test
vpcmpgtb
aad
cwde
push
push
scas
jno
cmp
outs
test
pop
push
cmp
test
mov
fistp
(bad)
aaa
cld
mov
inc
pop
mov
clc
inc
(bad)
ins
pop
xor
pop
push
xchg
push
arpl
outs
test
add
cmps
ror
ja
jge
dec
add
xchg
adc
call
clc
push
std
(bad)
pop
ds
in
add
or
add
repz
inc
clc
(bad)
out
sub
sub
out
inc
out
out
push
push
adc
mov
stos
xchg
pop
add
add
cmp
xchg
sbb
xchg
jae
add
sub
cmp
mov
hlt
push
aas
push
push
je
in
pop
outs
(bad)
dec
inc
mov
in
sub
mov
aas
shl
dec
fdivr
out
fs
add
mov
inc
mov
dec
pusha
idiv
scas
das
fsubr
ret
mov
pop
mov
out
jne
pusha
add
adc
aas
outs
and
dec
push
mov
fcomip
push
hlt
and
icebp
or
test
out
out
es
pxor
xor
std
inc
and
xchg
cs
pop
aas
xchg
cmp
cmps
add
mov
add
ret
push
test
mov
jecxz
or
rcr
das
fcom
sbb
push
cld
mov
pop
in
mov
jb
rcr
adc
in
repz
ficomp
sti
sbb
inc
(bad)
pop
aas
sbb
sbb
and
or
or
sbb
jmp
mov
je
and
inc
sbb
push
dec
aad
aad
or
pusha
(bad)
dec
repnz
sbb
push
push
sub
push
ret
cli
lea
inc
aas
or
jb
lahf
ja
adc
push
lods
fwait
pop
push
inc
inc
lods
das
shr
add
out
push
cmps
push
xchg
push
and
cs
jb
push
in
(bad)
jmp
add
jge
inc
mov
jae
or
cld
shl
sub
call
pop
or
and
inc
int3
(bad)
dec
push
sbb
push
scas
sti
jge
(bad)
inc
sti
add
arpl
call
xor
jnp
les
test
mov
arpl
add
mov
push
pop
or
ins
lds
fs
pop
rcr
push
out
mov
rcr
dec
sti
jmp
jp
mov
in
cmc
arpl
add
add
(bad)
xor
ds
addr16
mov
xor
das
sbb
sub
lock
mov
out
inc
add
movups
cld
add
xchg
in
mov
pop
inc
test
inc
jmp
shl
mov
xlat
inc
jle
add
out
(bad)
sbb
push
(bad)
cmp
mov
sbb
adc
dec
cmp
mov
mov
loopne
loop
inc
adc
mov
mov
cmp
stos
adc
add
xchg
dec
(bad)
call
(bad)
xor
pop
mov
addr16
call
sbb
inc
mov
jae
sti
pavgb
mov
mov
xor
inc
push
and
add
fist
lods
push
mov
inc
mov
setne
mov
cmp
nop
add
push
jno
jl
add
mov
inc
cmp
jnp
daa
add
cmc
cmp
mov
jg
inc
call
fbld
out
mov
sti
test
add
imul
inc
inc
sar
call
inc
scas
inc
lahf
push
cli
pop
xlat
add
push
jle
ins
pop
inc
ret
xor
cld
push
sbb
add
std
out
push
int3
adc
jnp
mov
test
dec
add
test
out
ret
ret
pop
arpl
std
mov
in
inc
xchg
xor
jp
ret
add
or
ret
jne
xor
fisttp
ja
adc
cmp
out
ret
sbb
add
dec
sub
mov
fs
pop
mov
in
dec
xor
xor
test
xor
sar
inc
mov
jb
call
pusha
inc
and
fimul
outs
add
test
push
mov
jmp
cmp
sub
and
push
cld
xlat
dec
pop
adc
je
or
das
mov
dec
mov
xor
pop
mov
pop
pop
imul
not
pop
lock
dec
or
test
pop
pop
jae
shr
imul
xor
mov
add
or
xor
cdq
add
jmp
aaa
push
mov
sbb
pop
dec
clc
jmp
inc
movs
xor
or
fisttp
fnstcw
push
nop
fidivr
xchg
or
xlat
dec
inc
pusha
and
jle
out
sub
inc
inc
sub
push
or
cmc
jg
(bad)
sub
or
add
xlat
mov
and
lds
mov
mov
and
mov
xchg
push
push
pop
retf
test
mov
pop
push
xor
inc
push
adc
mov
ins
jbe
xor
arpl
dec
bound
jg
adc
(bad)
sti
pop
sar
pop
xor
push
or
sbb
aad
ss
mov
ins
push
fild
sar
(bad)
inc
loopne
ror
sti
sub
outs
sub
into
xor
dec
lock
mov
push
nop
adc
add
add
inc
clc
das
xchg
out
add
(bad)
xchg
jmp
mov
sbb
aad
loope
fistp
fistp
xchg
dec
push
dec
add
and
in
pop
pusha
mov
out
mov
jp
pop
icebp
paddd
es
(bad)
pop
dec
inc
mov
scas
mov
xor
sub
add
pop
push
jbe
hlt
test
add
jne
js
mov
jmp
outs
loop
inc
inc
sbb
cmp
add
xchg
sbb
mov
mov
jns
add
add
pop
out
or
loope
(bad)
pop
and
push
(bad)
cmp
loopne
in
add
dec
icebp
mov
adc
add
jnp
ins
add
push
lock
mov
inc
pop
push
(bad)
sbb
lock
ins
pusha
cld
add
xor
dec
adc
pop
dec
es
push
xlat
inc
mov
pop
inc
test
mov
dec
push
add
lock
add
add
add
jge
push
jnp
arpl
(bad)
inc
inc
sahf
enter
mov
inc
or
add
xchg
mov
imul
cs
sub
push
jl
push
ds
pusha
(bad)
jge
pop
movs
dec
lock
mov
pop
inc
push
pop
rol
sbb
or
jg
cmc
ja
mov
retf
pop
imul
sbb
mov
push
adc
(bad)
(bad)
dec
ret
and
(bad)
aad
jne
das
xor
out
ret
push
clc
xchg
dec
(bad)
cmp
call
mov
mov
rdmsr
arpl
cmp
xchg
jae
jge
jg
push
mov
std
into
test
mov
dec
mov
push
add
push
test
movs
jo
stos
inc
popa
add
adc
(bad)
and
jmp
or
pop
shr
das
inc
jae
call
inc
addr16
mov
push
mov
int
loopne
mov
dec
ret
je
mov
mov
fwait
scas
outs
fisttp
shr
mov
into
sbb
cmp
popa
ret
mov
ror
pop
js
push
add
call
xchg
int3
and
push
out
je
mov
mov
out
sub
sti
sbb
push
jbe
pop
push
(bad)
xor
test
xchg
scas
pop
pop
dec
lock
test
mov
and
int3
adc
call
ret
inc
jnp
inc
pop
(bad)
cmc
mov
aam
outs
aas
pop
adc
daa
mov
movs
xor
add
ss
loop
stos
add
mov
jg
sti
xor
mov
jbe
dec
cli
mov
xchg
outs
fdivrp
inc
mov
cs
or
mov
xlat
test
and
inc
inc
adc
mov
inc
sbb
ret
mov
jp
je
dec
push
(bad)
inc
mov
ins
sub
out
pop
test
add
inc
jae
add
sub
jmp
cld
xlat
fcom
adc
inc
clc
(bad)
pop
mov
pop
push
adc
clc
add
and
push
in
inc
xchg
adc
ja
cli
(bad)
in
mov
adc
sbb
sbb
sub
adc
in
xor
or
dec
shl
imul
or
aas
gs
(bad)
pop
mov
cmp
and
inc
mov
mov
and
mov
fs
cmp
pop
mov
call
jp
mov
test
mov
sub
icebp
pop
jge
inc
adc
mov
mov
xor
sbb
cld
fisttp
mov
pop
mov
add
add
ret
dec
push
pushf
pop
in
jae
out
xor
aam
pop
scas
and
push
or
mov
dec
out
jno
push
add
sbb
enter
sbb
pop
inc
cmp
add
enter
and
fild
aas
pushf
sahf
fs
or
fdiv
rcr
mov
pop
xor
aas
(bad)
dec
jae
cli
inc
pop
pop
jmp
inc
addr16
sub
mov
inc
mov
jbe
xchg
lock
data16
push
push
inc
jne
mov
jbe
adc
data16
mov
add
lock
data16
push
std
sbb
mov
adc
sbb
je
fs
add
xchg
lods
push
out
xchg
cmp
hlt
dec
loopne
push
sbb
(bad)
in
out
loope
jge
jg
fiadd
or
push
sti
jp
loop
add
lods
sahf
add
ret
mov
push
inc
pop
fidivr
movs
jp
or
mov
mov
pop
inc
inc
std
ret
ret
jae
lds
invd
call
mov
je
mov
(bad)
cld
pop
movs
mov
fs
add
aas
out
out
mov
ins
inc
ret
adc
cmc
ja
mov
add
pop
add
jo
fistp
jl
adc
push
add
cmp
and
rcr
out
cld
add
mov
ret
clc
xchg
jb
clc
stos
add
cmp
add
shl
inc
jo
pop
js
mov
ror
clc
sbb
pop
out
fmul
push
dec
lds
push
dec
cmp
xchg
dec
push
inc
add
push
inc
clc
(bad)
mov
or
ins
add
jg
push
arpl
xor
pop
ret
test
ror
push
push
out
loop
out
lock
je
cli
add
push
xchg
inc
push
das
jo
push
shl
and
call
add
je
pop
imul
icebp
inc
xor
(bad)
jecxz
jl
jmp
stos
or
ror
adc
or
stc
add
push
pop
fidiv
sub
cli
pusha
inc
repz
pusha
out
nop
adc
hlt
lahf
push
ret
ins
push
cmp
dec
pop
pushf
outs
mov
mov
add
loop
(bad)
mov
addr16
repnz
packssdw
add
out
or
push
clc
(bad)
ret
jmp
and
das
pusha
ss
inc
inc
mov
(bad)
cli
push
mov
jbe
(bad)
std
xor
inc
push
mov
das
pop
xor
sti
cmps
aaa
xor
ja
push
jns
dec
or
inc
adc
add
push
xchg
test
(bad)
sti
adc
std
adc
jae
mov
jmp
shr
idiv
xchg
icebp
inc
loop
and
mov
add
idiv
ret
xchg
out
mov
arpl
es
outs
inc
addps
imul
nop
push
or
push
imul
mov
inc
mov
jl
das
mov
div
mov
fwait
pop
sub
loop
test
adc
inc
jge
frstor
cmp
mov
mov
imul
rol
or
aad
ret
jns
add
mov
jmp
inc
adc
jae
addr16
(bad)
js
stos
and
inc
addr16
pop
sti
jg
xchg
push
push
add
push
jl
ins
ss
loopne
cmp
cmp
adc
pop
cmps
push
aas
ja
push
cmps
inc
(bad)
retf
or
add
loope
jmp
repz
daa
mov
mov
add
mov
dec
fucomp
add
add
fcomp
push
adc
cmc
inc
in
add
add
je
xchg
push
add
inc
cmp
cmps
int
loopne
add
scas
call
dec
pusha
out
fs
pop
sbb
sub
push
push
push
add
jbe
pop
lock
(bad)
retf
push
pop
rol
add
aaa
pop
add
jb
cmp
and
mov
pop
jecxz
xor
or
fimul
mov
(bad)
inc
or
cmp
addr16
xlat
mov
ret
cli
cli
loopne
pop
ret
pop
(bad)
mov
sub
sti
inc
or
(bad)
jae
add
out
pop
(bad)
jmp
inc
test
adc
mov
jle
out
mov
pop
(bad)
push
ficomp
mov
mov
arpl
add
push
adc
mov
jno
iret
ins
iret
lds
mov
dec
lock
ins
bnd
inc
push
cmp
dec
jg
mov
seto
jge
dec
test
sbb
shl
jnp
add
add
je
in
mov
sbb
sbb
inc
pop
xor
call
sbb
cs
cmp
outs
xor
cmp
push
add
shl
(bad)
in
xchg
xor
add
cmp
adc
inc
push
scas
fbstp
jns
loop
or
lds
ins
idiv
adc
jb
add
or
add
arpl
and
sti
mov
pop
jp
or
(bad)
fwait
aaa
pop
pop
scas
add
xor
mov
sub
push
jmp
or
mov
pop
mov
imul
(bad)
mov
sub
inc
and
adc
and
dec
mov
dec
sti
cmp
adc
iret
dec
jmp
ret
cs
jmp
mov
aas
int
adc
adc
mov
or
push
add
mov
leave
dec
lods
cmp
cmp
pop
jno
sbb
or
std
pop
dec
mov
sbb
dec
call
cs
ds
inc
ret
pop
xlat
fisttp
(bad)
cli
jmp
jne
add
pop
lds
xor
ja
pop
out
jp
aam
push
nop
enter
mov
push
jmp
push
fisttp
mov
retf
std
cmc
add
push
xor
push
jl
dec
jmp
mov
add
sub
push
inc
fsin
cmp
or
inc
jo
jle
add
inc
pop
pusha
jecxz
push
or
inc
mov
push
add
jmp
test
add
call
and
dec
(bad)
xchg
les
or
dec
push
sbb
out
cmp
enter
or
dec
ret
ins
ror
sbb
int3
imul
and
add
jecxz
sar
pop
pop
push
or
adc
addr16
push
pop
cli
adc
movs
or
stos
test
xlat
in
in
ss
cld
mov
pop
inc
xor
ins
xchg
jno
push
pop
mov
xor
or
gs
fisubr
fcomip
sub
icebp
mov
push
je
imul
push
xchg
out
pop
sti
call
inc
cld
call
dec
movs
cmps
ret
xlat
add
mov
pop
and
xchg
xchg
cwde
adc
add
daa
fimul
test
add
sub
sbb
adc
mov
pop
mov
(bad)
out
pop
push
mov
and
push
and
jo
jae
shr
xor
int
push
(bad)
pop
lds
adc
cmp
sub
jmp
aas
or
sbb
push
in
inc
add
mov
pusha
inc
in
inc
aas
xchg
xchg
fs
dec
rol
mov
dec
jecxz
jb
pusha
fwait
jmp
add
(bad)
addr16
daa
test
add
jle
xor
mov
nop
mov
jne
aaa
inc
lods
push
(bad)
jp
(bad)
mov
not
je
xchg
(bad)
scas
int
dec
(bad)
js
aad
std
fiadd
dec
lods
or
adc
mov
inc
scas
pusha
fsubr
enter
inc
mov
js
fadd
std
xor
pop
sub
je
aas
ret
std
ja
jmp
ss
push
add
mov
mov
fist
add
mov
xchg
mov
pop
sub
xlat
push
or
mov
adc
push
xrelease
lahf
mov
xchg
dec
idiv
(bad)
xchg
xchg
cmp
dec
sub
add
test
push
stos
test
outs
(bad)
js
cs
imul
inc
dec
cli
pop
in
jle
call
push
mov
out
scas
(bad)
sub
push
cmp
stos
call
stc
cmc
test
sub
ja
inc
pop
jmp
push
lds
mov
xchg
inc
sbb
xor
(bad)
std
std
(bad)
(bad)
(bad)
fcomi
jae
mov
movs
mov
(bad)
aas
mov
or
cld
adc
push
sub
adc
fadd
and
aaa
ret
mov
mov
inc
mov
aaa
mov
mov
jl
mov
js
mov
push
xor
clc
shl
das
ja
adc
mov
out
push
cmp
xor
pusha
xchg
cli
das
stos
and
das
or
pop
mov
and
ret
push
cmp
not
loop
dec
xchg
lahf
call
mov
push
aam
push
es
lods
mov
pop
jae
(bad)
cmp
jle
mov
fadd
aad
in
mov
xor
mov
add
push
adc
inc
mov
mov
mov
hlt
test
retf
inc
jg
jne
ss
aas
inc
push
ret
xor
aad
(bad)
(bad)
inc
jmp
add
jmp
cld
clc
mov
(bad)
push
imul
jge
mov
mov
js
push
cmp
add
add
lock
imul
je
inc
xor
xchg
and
or
shl
pop
out
test
jge
xchg
les
imul
mov
pop
ror
jb
test
cli
cld
ret
push
dec
daa
push
jge
xor
adc
call
(bad)
imul
mov
mov
ins
and
int3
test
mov
mov
aam
aas
add
xchg
adc
fisttp
inc
fisub
mov
(bad)
dec
mov
push
jo
js
jbe
pop
and
push
mov
iret
mov
rcl
and
cmp
inc
inc
pop
mov
push
ret
push
sub
iret
pop
mov
sti
repnz
pop
add
out
pop
fadd
dec
(bad)
out
ins
sti
adc
out
inc
sub
xchg
xlat
push
jmp
sahf
adc
imul
dec
dec
cmp
(bad)
sahf
out
in
push
jge
lock
aas
pushf
je
xor
sti
iret
mov
addr16
enter
fild
sbb
jae
test
std
pop
cmp
inc
out
mov
imul
aas
sub
inc
test
dec
in
dec
(bad)
std
jecxz
jmp
adc
inc
(bad)
push
das
call
sar
add
cmp
inc
inc
mov
jmp
lods
inc
xor
pop
xlat
test
push
aaa
mov
mov
xchg
mov
(bad)
mov
mov
add
(bad)
retf
jb
mov
cmp
outs
retf
cmc
gs
inc
rcr
mov
sub
data16
imul
cmps
inc
mov
ud0
repz
cld
out
mov
mov
add
add
jmp
aad
inc
or
dec
push
dec
pop
jb
adc
push
je
mov
push
push
addr16
jbe
pop
push
sub
add
bound
pop
push
sub
or
stc
nop
repz
je
push
pop
jae
mov
cs
inc
ins
std
jmp
mov
out
lds
nop
bound
cmp
inc
sbb
stos
inc
dec
mov
pusha
aas
sar
(bad)
out
mov
push
mov
xor
ret
fiadd
and
mov
std
cmp
push
(bad)
pushf
sub
lahf
inc
pop
push
rcr
jne
cld
mov
sbb
pop
add
mov
jl
add
mov
jg
dec
movs
push
jle
hlt
lds
dec
std
or
test
cmps
xor
retf
test
pop
mov
fisttp
add
je
(bad)
sti
inc
mov
mov
inc
jmp
mov
fs
pop
neg
pop
mov
inc
inc
icebp
aas
and
and
ret
mov
loop
repz
mov
mov
test
stos
sti
pop
mov
clc
jae
push
out
inc
or
and
call
jl
std
inc
inc
pop
cs
pop
pusha
mov
pop
cmc
mov
stos
ss
or
pop
sbb
xchg
or
mov
(bad)
stos
mov
xchg
add
lock
pop
out
jl
push
inc
test
jmp
mov
das
push
test
sbb
push
popf
xchg
add
cld
fdivrp
mov
add
inc
dec
inc
arpl
jg
adc
xchg
mov
aad
push
mov
test
jmp
adc
mov
fnstcw
sub
gs
scas
mov
cli
sub
sub
adc
jg
call
inc
outs
inc
inc
cmps
cmp
mov
pop
xor
ins
nop
std
adc
sar
adc
mov
adc
aas
idiv
aaa
loopne
inc
jl
mov
push
ror
push
ret
adc
fild
js
popa
inc
pop
mov
dec
and
repz
ins
mov
inc
xchg
jl
fcmove
ret
push
ins
test
pop
enter
mov
push
adc
mov
inc
in
jge
add
pop
mov
push
sub
fdivr
mov
sub
mov
or
sbb
adc
pushf
(bad)
idiv
je
loopne
retf
jg
addr16
aas
(bad)
(bad)
mov
sbb
je
jg
(bad)
fisub
sbb
mov
dec
fwait
mov
sub
and
fiadd
jae
out
fiadd
cmc
sbb
enter
aam
xor
jl
mov
jmp
adc
pop
pop
(bad)
aam
push
pop
cld
arpl
lock
mov
add
xor
jae
inc
sub
lock
aaa
mov
xor
inc
jnp
inc
ret
dec
add
ins
xor
loopne
mov
adc
pop
lods
jmp
fdivr
inc
pop
pop
(bad)
aas
cmc
mov
das
push
mov
adc
call
pop
sar
cs
lods
bound
xor
pop
jmp
xchg
gs
adc
mov
out
retf
and
ret
and
inc
inc
jge
add
xor
cmps
int
dec
push
pop
test
inc
pop
xchg
rcr
jmp
int3
xlat
add
(bad)
aas
push
pusha
add
or
lds
in
push
or
outs
push
sbb
dec
jmp
mov
aaa
jmp
inc
loop
not
cmp
lock
and
jb
psrlw
out
inc
inc
pushw
jae
arpl
mov
inc
mov
in
push
div
push
xor
pop
sbb
aaa
imul
ret
push
add
pop
stos
pop
jmp
je
mov
stc
and
fild
xor
push
add
pop
sti
jmp
jno
ret
or
add
pusha
xchg
jg
adc
sbb
ret
lds
lods
xchg
mov
cmp
ret
mov
push
xchg
mov
cmp
sbb
mov
out
lahf
mov
sar
or
cld
inc
inc
out
jmp
mov
mov
pop
dec
out
dec
stos
ret
and
fild
push
test
dec
clc
pop
push
dec
adc
adc
(bad)
push
out
push
ins
dec
mov
mov
mov
lds
std
inc
sar
cmp
sub
out
push
inc
aam
ret
add
call
loopne
xor
mov
cmp
xor
xchg
pop
in
ins
add
push
aam
cld
imul
out
loopne
add
mov
mov
jg
fcmovnbe
cli
pop
push
jae
movs
dec
(bad)
pop
mov
dec
push
sbb
mov
add
add
dec
push
sahf
adc
dec
inc
add
mov
shl
sbb
push
and
sti
outs
sbb
sub
push
inc
sbb
hlt
inc
test
js
push
out
push
punpckhdq
mov
cmp
mov
out
jb
movs
dec
dec
call
std
pop
add
test
pop
popa
cli
mov
pop
inc
test
test
or
and
sbb
fmul
xchg
sti
sbb
int
or
xor
mov
sbb
mov
test
or
or
push
pop
or
mov
xchg
fwait
dec
clc
adc
out
mov
cmp
add
outs
test
nop
add
sbb
(bad)
mov
adc
(bad)
sbb
movs
push
aas
and
sbb
inc
out
xlat
dec
add
dec
push
mov
jg
pop
clc
jg
repnz
mov
inc
add
in
inc
inc
(bad)
sti
pop
sti
popf
ror
adc
std
vpermt2ps
addr16
inc
mov
fcomip
and
or
lock
inc
inc
stos
aaa
xor
add
stos
xchg
(bad)
fisttp
cmp
push
mov
push
sbb
sti
fimul
adc
cli
cmp
mov
cmp
fisub
into
add
scas
xor
mov
add
jle
aaa
add
cmp
cmp
push
mov
js
xor
ret
sub
adc
add
mov
xor
bound
mov
inc
cmc
js
xor
mov
aaa
jmp
sahf
bound
mov
sti
nop
cmp
(bad)
mov
or
fiadd
mov
jae
pop
and
or
jae
xor
mov
loopne
clc
sbb
loopne
mov
div
inc
lods
ins
add
mov
repnz
push
je
or
or
icebp
popa
lds
add
out
test
in
nop
push
ja
push
arpl
cld
or
lds
jecxz
arpl
jg
(bad)
mov
fs
mov
out
call
add
in
add
push
add
into
jle
call
aad
enter
sub
jmp
cmp
popa
cld
adc
mov
rcl
pop
add
mov
inc
std
push
mov
paddd
inc
fucomi
mov
pop
fs
push
xchg
push
push
sbb
inc
and
ret
adc
pop
and
rcr
xchg
loopne
pop
cmovl
inc
sub
push
aas
cmp
pop
lods
lds
fs
jl
dec
pop
out
adc
das
pop
icebp
out
add
repnz
mov
arpl
(bad)
je
icebp
jmp
mov
dec
push
and
out
or
call
sti
pop
sub
sbb
dec
push
add
repnz
push
icebp
add
lock
aam
or
(bad)
addr16
into
fsub
shr
pop
xchg
retf
mov
ret
adc
pop
mov
dec
push
outs
clc
inc
xor
sub
add
and
popa
push
xor
jle
mov
ret
push
mov
sub
inc
xor
or
add
xchg
inc
frstor
sti
mov
mov
(bad)
mov
(bad)
ins
das
inc
sbb
(bad)
xor
add
(bad)
outs
jmp
mov
xor
jmp
or
mov
ret
fild
or
cld
iret
pop
push
cmp
xchg
(bad)
mov
inc
and
loopne
or
(bad)
sub
out
sub
pop
mov
addr16
push
pop
stos
jl
ds
div
(bad)
shl
imul
test
dec
jg
xchg
pusha
(bad)
mov
sub
imul
clc
bound
lods
imul
add
push
or
inc
repz
mov
inc
enter
daa
jmp
scas
mov
cmp
pop
stos
rcr
mov
lds
and
call
inc
jbe
jbe
sbb
adc
call
cmp
mov
jmp
mov
cs
jl
pop
out
jmp
push
inc
sub
aas
lds
das
add
(bad)
out
mov
add
ins
cmp
mov
clc
(bad)
inc
mov
inc
jmp
jmp
inc
xlat
idiv
mov
cli
sbb
into
push
jmp
mov
pusha
pushw
xchg
push
push
shl
push
mov
add
cmps
ficom
lods
outs
test
or
sub
fadd
xor
pop
div
mov
jae
mov
loopne
fstp
in
bound
bound
or
loop
lahf
pop
pusha
or
dec
call
aaa
mov
clc
imul
add
inc
sti
ret
je
js
add
dec
js
adc
pusha
popaw
xchg
sbb
jmp
mov
sar
mov
cmp
pop
pop
and
xchg
pop
xchg
pusha
mov
aas
out
xchg
dec
mov
xchg
add
imul
inc
adc
pop
mov
push
inc
rol
mov
mov
inc
xor
pop
idiv
scas
pop
inc
loope
shr
pop
dec
push
imul
inc
fdivr
push
pop
inc
call
ret
cli
push
cli
inc
vprotd
pop
push
jo
les
movs
adc
dec
js
sub
les
clc
(bad)
jp
pop
out
retf
push
mov
ret
cld
es
repz
sti
or
cmc
and
xchg
add
dec
and
fisub
arpl
jmp
ja
out
out
or
jmp
clc
das
clc
push
jecxz
dec
add
fdivp
cmp
pxor
push
cli
fistp
dec
and
push
pusha
jae
push
cmovo
pusha
mov
hlt
out
(bad)
dec
jo
and
add
adc
cmps
mov
sti
stos
add
pop
mov
push
ss
icebp
outs
inc
ror
push
dec
xchg
bound
out
push
dec
push
rcr
jae
iret
xor
push
stos
xchg
jg
add
ret
pop
fstp
sub
push
dec
fs
xchg
out
mov
idiv
dec
push
stos
mov
mov
pop
in
or
call
add
ror
pop
std
mov
dec
pop
push
imul
cmp
test
inc
jbe
cmp
jae
jae
scas
fstp
aas
lahf
add
mov
or
(bad)
repz
xlat
mov
enter
pop
cmp
xor
adc
out
inc
ss
out
out
jnp
jbe
fadd
mov
jno
push
rol
add
or
ret
sub
add
das
sar
les
jmp
xor
mov
adc
clc
push
xchg
xchg
mov
add
or
jg
retf
je
push
inc
je
mov
mov
cmp
les
test
fsubr
jae
aam
sbb
das
test
mov
inc
cs
sbb
push
mov
sbb
or
sbb
pop
xor
sbb
fild
xor
add
inc
xor
push
push
ret
add
jmp
call
lahf
inc
(bad)
xlat
inc
inc
push
in
inc
pusha
repz
jmp
push
inc
(bad)
push
add
or
clc
dec
mov
mov
pop
inc
jg
push
call
push
inc
add
push
std
div
inc
push
jecxz
stos
(bad)
(bad)
repz
dec
nop
inc
xor
add
sbb
dec
ret
enter
(bad)
clc
out
cli
add
pop
pop
xor
xchg
xchg
mov
push
inc
push
(bad)
mov
(bad)
les
mov
inc
sti
movs
(bad)
lahf
les
dec
and
fbstp
dec
dec
jmp
(bad)
(bad)
sbb
pop
gs
mov
call
jg
imul
(bad)
sbb
jne
add
sar
mov
loop
in
(bad)
inc
jo
push
xor
iret
fnstcw
adc
loop
inc
mov
dec
imul
push
xor
cld
xor
mov
pusha
out
add
add
or
xor
out
addr16
pop
out
push
bound
sub
outs
bound
jmp
es
stos
ficomp
mov
in
inc
add
and
push
clc
and
(bad)
jnp
fld
mov
pop
outs
test
add
scas
call
add
(bad)
(bad)
push
lds
mov
out
test
sti
push
mov
inc
call
call
or
sbb
inc
push
jg
cli
call
sbb
xor
mov
mov
and
icebp
add
and
add
fwait
(bad)
aaa
mov
inc
pop
je
add
mov
and
imul
sbb
or
pop
cmp
inc
push
lahf
mov
inc
out
cmp
and
jl
mov
les
rcr
nop
jg
sbb
or
push
jle
cmp
push
inc
jbe
fimul
jmp
mov
adc
lea
mov
mov
sbb
cmp
rol
fdivp
aaa
les
dec
push
cmps
push
add
push
jl
adc
inc
clc
(bad)
adc
shr
mov
out
dec
cmps
adc
fidiv
mov
xor
add
pop
int3
cmps
aas
or
loop
xchg
sub
push
pop
out
cld
and
pop
arpl
inc
or
mov
imul
cmp
xlat
not
arpl
test
imul
jae
mov
popf
cld
dec
and
push
mov
aaa
iret
inc
or
adc
jmp
mov
ret
test
adc
sub
xor
pop
adc
repz
pusha
rol
mov
aas
mov
ret
ret
mov
xor
jle
mov
mov
dec
dec
pop
jno
pop
(bad)
mov
cli
cld
test
push
add
jmp
or
add
xchg
and
xchg
adc
dec
or
or
sti
cli
push
dec
nop
push
sar
fisttp
ret
outs
inc
(bad)
jmp
scas
cli
aas
call
pop
mov
mov
push
mov
pop
loop
push
lods
xor
dec
add
pop
cmp
inc
imul
rcr
mov
xor
and
sbb
pop
add
xor
jg
sub
mov
mov
rcr
mov
inc
jecxz
dec
(bad)
cmc
mov
repz
push
adc
icebp
nop
mov
into
in
adc
outs
inc
push
inc
and
enter
test
push
jmp
and
add
push
add
rol
clc
dec
aad
or
or
mov
loop
iret
add
je
retf
cwde
pop
xor
and
out
addr16
mov
inc
mov
pop
imul
imul
adc
icebp
pop
fcomp
dec
inc
ret
and
(bad)
jmp
xor
mov
out
pop
rol
call
mov
pop
mov
xor
ret
push
or
dec
mov
push
ret
xlat
call
add
or
mov
sbb
(bad)
or
add
mov
pop
pop
dec
sbb
test
cmp
pop
push
mov
and
jnp
iret
sub
and
movs
test
sbb
mov
fbstp
add
loop
pop
out
(bad)
jns
(bad)
mov
sub
and
cmovbe
pop
cs
aas
sub
mov
repz
scas
test
inc
adc
and
mov
fild
inc
mov
lods
or
mov
fiadd
inc
add
mov
push
out
inc
pop
adc
push
push
jb
stos
jae
daa
and
add
or
inc
dec
lahf
push
mov
fxch
pop
(bad)
nop
into
and
pop
mov
iret
mov
push
push
cmc
pop
test
pop
test
and
rcl
sbb
outs
scas
mov
das
push
sbb
add
aaa
push
push
push
and
inc
test
test
pop
call
jnp
nop
mov
dec
jae
jg
adc
mov
or
fiadd
js
test
push
ror
mov
cli
fwait
mov
cmp
add
aas
jmp
inc
stos
mov
mov
mov
or
mov
mov
inc
inc
and
and
push
arpl
jo
mov
inc
mov
add
(bad)
in
dec
add
or
add
inc
jl
adc
mul
pop
pop
mov
push
lds
add
mov
call
add
sub
adc
and
shl
xchg
mov
(bad)
pop
sub
mov
xor
outs
ret
repnz
aam
fsub
ins
mov
aam
add
add
jb
fcom
or
xor
and
pop
repnz
cmp
xor
dec
out
xor
mov
inc
aam
inc
icebp
cmps
mov
jo
or
mov
mov
and
(bad)
(bad)
inc
and
hlt
ret
mov
pop
and
cld
cmp
cmp
mov
pop
(bad)
retf
clc
mov
bound
adc
add
adc
je
cs
cld
and
jmp
adc
jmp
aaa
cld
pop
test
pop
ret
(bad)
mov
fisub
out
out
shl
call
andps
cmps
jb
xor
pop
push
das
dec
sbb
xor
call
mov
dec
jl
or
cmp
push
mov
cs
xor
push
pop
jecxz
add
push
ror
adc
sbb
ja
or
dec
dec
loop
sti
sub
fidivr
std
push
sahf
xor
xor
mov
adc
push
push
sar
(bad)
sub
mov
mov
mov
push
mov
stc
arpl
ret
mov
sar
and
push
test
mov
call
add
call
or
add
loope
adc
xchg
push
dec
jnp
pop
and
or
jmp
add
out
add
pop
pop
inc
and
pop
push
add
test
addr16
enter
xor
mov
push
add
mov
pop
or
retf
fnstenv
add
test
scas
mov
push
movs
sbb
repz
dec
sub
jmp
test
mov
cmps
fs
add
(bad)
loop
(bad)
add
ret
xlat
cli
test
mov
cli
cmps
add
nop
dec
sub
pop
push
cli
pop
adc
dec
add
sahf
xchg
ins
push
stos
inc
inc
inc
mov
mov
mov
sub
fwait
pop
adc
mov
aam
fcomi
rcl
mov
or
or
dec
mov
and
fwait
test
jmp
mov
movs
lds
mov
push
icebp
xchg
adc
pop
inc
cli
call
rcl
mov
ret
and
test
jmp
cmp
(bad)
ins
mov
fadd
mov
ret
push
pusha
or
push
cld
inc
mov
std
sahf
pop
xchg
adc
daa
mov
cmp
ret
add
pop
jl
or
add
sar
arpl
rcl
mov
jg
add
cmp
mov
aaa
aam
jbe
jg
mov
idiv
loopne
add
mov
xor
scas
test
mov
xchg
scas
push
push
(bad)
sub
or
test
add
add
(bad)
mov
adc
push
pop
adc
mov
push
clc
outs
xchg
mov
pop
jno
inc
pusha
dec
ss
and
mov
in
or
or
or
xchg
push
js
add
dec
std
es
pop
dec
(bad)
pusha
imul
and
adc
add
es
mov
push
jp
xor
dec
inc
add
sbb
xchg
jmp
(bad)
dec
and
call
out
and
out
dec
(bad)
movs
jne
imul
(bad)
adc
add
sbb
pop
or
lds
mov
push
adc
mov
xor
push
int3
inc
sti
inc
and
enter
test
add
sti
cli
and
push
sbb
std
das
ret
add
or
sbb
add
sub
pop
btc
inc
dec
mov
std
ja
mov
inc
sti
sbb
inc
ret
pop
data16
jmp
jb
clc
fwait
sub
mov
aas
sub
mov
outs
mov
cmp
mov
test
or
ret
dec
popf
ret
fisub
lahf
sbb
inc
(bad)
jg
cwde
and
push
mov
call
icebp
mov
xlat
dec
mov
ja
outs
xor
jmp
and
outs
sbb
pop
jae
sti
jae
and
jl
jmp
enter
outs
inc
push
bound
adc
jmp
add
pop
clc
cmp
push
cmps
ins
inc
mov
add
push
dec
mov
jmp
pop
clc
ja
test
repz
addr16
out
mov
mov
jle
jmp
sbb
push
out
jge
push
mov
ficom
(bad)
ja
pop
xor
add
retf
ret
mov
push
mov
mov
inc
mov
arpl
adc
jg
and
or
ss
xchg
test
loope
add
je
sbb
out
jae
push
cs
adc
std
ins
sbb
icebp
aaa
mov
jle
inc
sub
xor
jo
je
and
add
std
mov
push
cmps
mov
mov
fadd
je
ss
jbe
adc
imul
clc
or
jnp
xor
add
lock
aaa
cmps
aas
mov
das
ins
cmp
outs
clc
lods
add
pop
repnz
mov
iret
mov
or
sti
push
push
aam
pusha
ud0
imul
adc
call
imul
jne
mov
mov
sti
test
(bad)
loope
mov
jne
cmps
jg
in
dec
or
or
inc
adc
in
in
scas
or
xor
out
sbb
jae
(bad)
xchg
mov
inc
pop
paddd
pop
adc
dec
xor
sub
xlat
or
and
shr
idiv
sbb
jmp
jae
inc
sti
jne
gs
xor
not
jg
xor
add
pop
fstp
cmp
rcr
pop
fcom
arpl
adc
mov
aas
or
call
add
or
nop
xor
xor
cmp
adc
mov
inc
jmp
mov
mov
fist
hlt
sbb
mov
mov
cmps
dec
push
ins
adc
out
cli
out
xchg
pop
xchg
fimul
(bad)
pop
(bad)
gs
fisubr
mov
push
adc
jl
mov
inc
loop
fbstp
cmps
pop
cli
inc
add
fsubr
cli
and
stos
rcl
pop
mov
scas
and
pusha
sbb
fs
push
and
add
and
cmps
pushf
jo
out
dec
repz
push
push
xor
inc
mov
daa
hlt
or
pop
pop
sar
out
mov
jmp
sub
or
cmc
and
pop
out
inc
int
(bad)
mov
jb
test
les
xor
or
lahf
pop
call
sub
(bad)
(bad)
cmp
cld
cmp
(bad)
jg
lock
xchg
call
cmc
sahf
mov
fisttp
out
jl
dec
xor
add
mov
pushf
out
mov
or
xor
fild
sti
call
xchg
cld
push
mov
imul
jle
mov
push
inc
pop
ins
sub
fdivr
and
push
std
mov
pop
jmp
inc
inc
dec
jmp
outs
mov
test
pop
add
push
cmp
dec
movups
jmp
dec
(bad)
add
inc
out
je
test
add
arpl
pushf
out
cld
fbstp
idiv
pop
jae
jae
push
(bad)
and
or
inc
jae
sbb
(bad)
fild
ins
pop
in
retf
mov
cmp
cmp
(bad)
out
jmp
pop
(bad)
rol
xor
mov
xor
(bad)
fild
dec
inc
jge
sub
push
jmp
bound
mov
add
js
pop
or
push
pop
push
retf
inc
dec
pop
into
jle
test
fsubr
mov
sub
sbb
retf
mov
movs
out
mov
aad
sti
push
loope
adc
push
sar
pop
or
retf
sub
loop
mov
call
lock
inc
test
pop
push
jb
xchg
idiv
sub
out
enter
mov
cs
push
pusha
mov
push
bound
xchg
inc
add
clc
aad
push
mov
add
pop
(bad)
addr16
or
inc
(bad)
xor
(bad)
mov
inc
inc
mov
rcl
cdq
pop
outs
adc
rcr
xor
cs
jo
mov
add
cli
js
pop
ja
mov
add
add
inc
jp
ss
scas
nop
push
ds
jb
inc
aas
xor
sbb
outs
push
into
ret
in
inc
xor
lds
inc
loope
inc
(bad)
call
add
(bad)
jae
outs
add
aas
test
sbb
nop
push
scas
and
out
not
jbe
(bad)
and
sbb
sti
pop
aas
add
jg
add
xor
pop
push
or
scas
push
cmc
pop
hlt
sbb
repz
sub
push
jecxz
sub
push
lds
aam
and
jg
es
enter
jae
daa
push
push
dec
push
push
lahf
imul
inc
pop
add
cld
outs
mov
sub
mov
sbb
adc
in
int3
add
cmps
mov
inc
movs
popa
pusha
je
in
rcr
test
pushf
sbb
inc
shl
sbb
mov
mov
xchg
cmp
sahf
add
mov
scas
jle
test
test
push
lods
addr16
cmp
pop
ins
jmp
movs
sub
inc
mov
and
test
add
hlt
pop
xchg
mov
hlt
inc
jmp
add
out
adc
pop
ret
pop
cli
scas
push
add
and
pop
push
icebp
enter
jb
retf
pusha
mov
fs
add
adc
jno
scas
test
ret
mov
xor
lds
fcom
mov
jle
or
add
add
adc
std
test
jae
and
scas
dec
std
inc
or
and
loopne
xchg
adc
call
dec
fwait
sub
inc
sbb
dec
fisubr
jo
ja
std
add
and
pop
inc
inc
pop
add
xor
push
and
lods
outs
test
xchg
mov
ficomp
xchg
add
xor
clc
repnz
cmp
mov
mov
clc
dec
adc
or
add
cmc
ret
js
mov
ss
(bad)
rcr
and
mov
inc
push
add
push
outs
in
mov
inc
and
dec
cmps
pusha
ret
outs
sbb
std
pop
inc
stos
mov
inc
xlat
imul
movs
add
pop
sub
jecxz
dec
ret
jge
cmp
mov
push
(bad)
push
xor
aas
adc
pop
pusha
(bad)
jb
and
and
je
pop
jg
(bad)
mov
push
add
ins
(bad)
xor
mov
std
dec
stos
inc
sbb
add
jne
lahf
pop
add
dec
dec
mov
or
dec
cli
cld
movs
cwde
ret
cmp
adc
inc
push
dec
cmp
(bad)
jecxz
sub
jbe
xor
nop
test
cmp
xchg
push
jmp
cli
push
dec
fidivr
(bad)
cmps
mov
(bad)
mov
mov
and
mov
shr
hlt
or
imul
cli
jmp
mov
(bad)
fild
cld
scas
pop
push
inc
push
shl
inc
mov
cmp
aad
inc
fdivr
retf
mov
xor
push
push
and
mov
pusha
iret
(bad)
mov
lahf
ret
les
je
mov
nop
sbb
test
int3
adc
pop
mov
les
icebp
das
js
jle
stc
(bad)
ja
pop
jmp
mov
push
out
mov
mov
test
or
add
(bad)
popf
push
dec
call
add
call
out
cld
ja
fisub
pop
dec
aas
repz
icebp
dec
inc
clc
cmp
mov
push
jb
add
mov
test
inc
push
sbb
mov
inc
sbb
ret
(bad)
aas
fdiv
loopne
enter
mov
scas
clc
mov
pop
add
adc
imul
test
or
in
or
imul
pop
push
inc
mov
jmp
call
aas
std
cli
inc
arpl
in
ins
sti
inc
mov
dec
cmp
ret
ins
and
xchg
mov
outs
pop
dec
push
rol
call
jmp
call
psrld
pop
ret
(bad)
xchg
xor
or
pop
gs
jo
add
add
jmp
push
or
mov
pushf
pop
outs
add
sbb
jae
xchg
dec
or
dec
cs
xchg
or
loop
outs
add
add
daa
mov
sub
jae
xchg
lock
push
(bad)
xor
ret
pop
inc
pop
lock
ret
sar
sub
test
push
mov
outs
push
inc
sbb
std
sbb
jno
push
out
or
mov
xor
mov
cmps
mov
jmp
scas
jl
(bad)
xchg
jo
or
dec
out
clc
jg
(bad)
mov
xchg
push
mov
inc
(bad)
je
(bad)
outs
sti
xor
add
shr
dec
aas
jno
dec
mov
mov
or
adc
or
jg
jmp
push
out
imul
out
(bad)
pop
pop
into
jae
jb
mov
xor
push
add
or
and
add
and
imul
inc
arpl
cmps
and
inc
(bad)
mov
mov
cmc
clc
xor
aam
rol
retf
jg
mov
dec
dec
inc
(bad)
jmp
xchg
sub
inc
inc
imul
jbe
pop
in
mov
jb
sub
pop
sbb
xor
ret
inc
loopne
shl
leave
ins
mov
mov
gs
loopne
and
dec
mov
mov
sahf
push
pop
push
ja
sbb
jnp
mov
push
inc
aaa
jl
inc
push
push
(bad)
call
and
inc
cmp
add
fnstcw
(bad)
imul
sub
rcl
add
jg
(bad)
push
inc
dec
movntps
inc
push
aaa
xchg
idiv
aam
jmp
cmps
outs
add
ins
xchg
push
jg
dec
pop
data16
jo
aas
and
fs
(bad)
enter
mov
inc
jecxz
gs
mov
fild
push
dec
or
push
xor
ja
pop
sbb
cld
ss
retf
mov
cmp
jmp
xchg
lock
xchg
or
cmp
jb
ins
pop
inc
fadd
(bad)
and
std
imul
sbb
fs
pop
pop
neg
mov
out
aaa
jecxz
lods
sbb
add
into
add
out
gs
popf
sbb
push
jo
push
pop
dec
movs
mov
outs
shl
(bad)
add
aad
fs
ret
jg
push
rcl
add
(bad)
out
out
mov
push
push
mov
xlat
inc
ror
sub
xchg
jae
xor
add
aad
lds
cld
inc
add
sub
adc
shl
es
test
aas
xchg
inc
stos
dec
(bad)
sar
xchg
cmp
pop
and
pop
jae
xor
aad
mov
stos
mov
dec
pop
retf
push
inc
rcl
ret
inc
(bad)
retf
cmp
stos
ret
or
xor
adc
and
sbb
add
push
mov
dec
jg
sti
mov
inc
push
xor
dec
cld
das
(bad)
jno
add
pop
or
aas
xor
add
inc
ficom
aas
bnd
sti
aas
in
sub
inc
sub
mov
adc
and
addr16
dec
std
(bad)
jg
icebp
pop
std
ret
aas
addr16
push
sub
mov
ja
mov
pop
or
inc
pushf
jmp
fwait
ins
aad
dec
test
push
xor
(bad)
fcmovb
repnz
inc
and
ins
das
inc
bound
rcr
add
lahf
(bad)
call
xchg
and
aas
adc
imul
jo
int3
call
or
cld
(bad)
mov
je
arpl
jmp
(bad)
aas
jl
add
sahf
cmp
add
clc
dec
inc
mov
pop
mov
movs
aas
retf
inc
fs
call
daa
sti
jae
out
enter
mov
cli
pushf
pop
mov
jg
test
fist
out
push
and
jmp
inc
push
push
arpl
xchg
sti
jp
jb
ss
and
xor
or
lds
nop
push
imul
aam
adc
mov
xor
jp
(bad)
ins
dec
adc
js
adc
dec
push
mov
arpl
inc
ret
fmul
push
inc
add
xchg
or
fsub
mov
dec
adc
add
adc
jmp
pop
out
dec
and
test
fld
addr16
or
enter
sbb
or
add
arpl
outs
data16
cmp
adc
add
sahf
gs
imul
xchg
cmp
push
cmp
ret
xchg
inc
retf
inc
addr16
sub
lods
out
loopne
xchg
shr
push
lea
js
arpl
dec
lock
nop
std
cld
pop
pushf
test
sub
add
mov
sbb
add
aas
mov
jmp
ret
std
mov
jae
imul
add
(bad)
inc
addr16
pop
push
int
and
xlat
jl
inc
ret
mov
cld
dec
add
push
add
dec
(bad)
mov
gs
call
sbb
jmp
mov
xor
ss
xchg
adc
jp
cld
call
xor
jmp
pop
push
sub
or
add
inc
mov
test
(bad)
pop
or
mov
mov
mov
adc
mov
jl
jnp
outs
cli
aaa
stos
pusha
(bad)
jg
or
or
dec
sar
and
jmp
out
mov
add
frstor
adc
into
call
sub
inc
inc
(bad)
fcomi
outs
pushf
push
sub
inc
or
retf
sbb
add
(bad)
adc
dec
push
sub
add
xchg
sub
movs
or
mov
push
sub
retf
mov
std
jbe
jbe
(bad)
aas
std
das
or
test
movs
ins
pushf
in
add
out
das
aam
aaa
pushf
les
add
shl
js
mov
or
aad
push
cld
mov
mov
mov
inc
xor
pop
mov
push
int
cli
xlat
push
out
xchg
mov
push
mov
adc
out
mov
mov
mov
jmp
mov
in
mov
mov
cmp
call
bound
into
cmp
aas
int3
mov
cmp
add
xchg
aas
ret
mov
cs
dec
adc
retf
push
pop
sbb
pop
sti
or
repnz
jmp
pusha
mov
add
or
inc
das
adc
lea
mov
pop
shr
mov
and
jmp
pushf
mov
out
pop
inc
dec
add
mov
inc
or
push
je
sbb
sti
call
dec
push
jns
je
out
mov
and
int
in
push
inc
clc
clc
test
xchg
or
jae
mov
lock
sti
pop
movs
mov
xor
mov
dec
nop
add
mov
add
fild
sbb
sbb
jb
jb
mov
mov
mov
and
je
push
shr
pushf
outs
xor
dec
push
retf
mov
pop
or
pop
dec
or
and
pop
mov
xor
(bad)
add
mov
and
push
mov
sub
mov
sti
test
out
jae
cmp
(bad)
call
push
mov
ficomp
xchg
mov
sub
sub
push
icebp
(bad)
ret
xor
jg
call
push
mov
add
cld
cli
and
mov
movs
scas
mov
mov
inc
repnz
sbb
pop
jno
or
ins
xchg
daa
jle
xchg
push
mov
clc
xchg
push
mov
or
mov
aas
jae
pop
dec
in
sti
and
mov
jno
jge
out
jnp
dec
mov
pop
ficomp
sti
mov
or
push
mov
ror
jg
xchg
pop
push
jl
or
ret
(bad)
mov
cld
(bad)
mov
inc
xlat
push
or
push
add
jge
push
out
and
mov
pop
xchg
pop
pop
jbe
inc
inc
mov
and
call
pop
add
mov
mov
call
inc
cmp
(bad)
jg
arpl
add
int
pop
ret
out
adc
push
inc
in
mov
push
xchg
xchg
mov
lds
shl
inc
cld
xchg
shr
arpl
in
aas
dec
xchg
adc
fcom
aad
inc
adc
adc
(bad)
adc
jno
dec
and
test
inc
loop
(bad)
clc
mov
push
lock
inc
lds
(bad)
outs
add
hlt
stos
add
(bad)
out
ins
pop
(bad)
shl
adc
imul
dec
ret
push
jp
jmp
sub
xor
inc
jg
das
inc
cmc
mov
hlt
mov
les
adc
mov
mov
loopne
push
push
inc
push
cmp
add
sti
fsubr
jmp
fadd
dec
sar
mov
push
sbb
cdq
pop
aas
inc
arpl
dec
and
or
jo
sub
imul
adc
dec
ror
push
pusha
adc
popa
cld
and
cmp
enter
pop
push
cli
add
push
inc
cmp
xor
pop
xor
aas
clc
and
mov
cli
pop
or
mov
mov
jmp
cmp
je
dec
out
sti
jmp
push
sti
je
dec
ja
js
aaa
or
or
ret
outs
add
shr
stos
jecxz
add
xor
mov
sbb
mov
std
leave
fimul
mov
jns
push
xor
mov
or
aad
adc
(bad)
lock
ja
enter
adc
add
rep
push
jnp
les
pop
push
mov
mov
(bad)
(bad)
inc
fcomi
aas
or
push
add
data16
xchg
je
and
pop
(bad)
out
mov
xchg
loopne
inc
mov
dec
pop
add
out
add
pop
inc
sti
popa
pop
mov
jp
(bad)
adc
aad
ret
sub
inc
push
(bad)
push
mov
add
pop
test
jmp
sub
push
push
push
call
add
je
in
stos
mov
jg
es
inc
pop
(bad)
push
xor
icebp
push
xor
xor
inc
lea
not
cmp
pop
ret
loope
je
(bad)
dec
mov
les
xor
enter
add
xor
mov
mov
push
xor
push
aaa
test
test
movs
out
fstp
mov
mov
outs
xchg
icebp
push
mov
(bad)
out
xor
cmp
cmc
mov
jl
imul
cld
xchg
dec
sar
push
ror
pusha
xchg
jg
mov
mov
ret
dec
outs
(bad)
pop
add
scas
mov
into
test
neg
stos
inc
mov
iret
(bad)
call
or
sbb
inc
in
loop
pop
into
test
push
sub
mov
jg
int3
int3
mov
or
adc
jmp
mov
ret
push
pop
xchg
push
jo
adc
retf
or
and
outs
xchg
pop
jg
or
ret
out
jg
dec
and
out
xor
or
mov
xor
ds
sub
idiv
ja
loope
ins
call
push
add
cli
sub
sub
imul
js
sbb
inc
dec
inc
inc
sbb
inc
stos
mov
pusha
or
ss
sti
pop
mov
(bad)
int
mov
dec
sub
ret
sub
sbb
xor
inc
sbb
inc
mov
cli
iret
mov
ret
addr16
repz
je
xor
out
push
add
into
adc
adc
mov
aas
sti
or
push
mov
fisub
test
(bad)
cs
pop
test
int3
es
adc
add
std
lahf
and
movs
fisub
enter
fisttp
push
test
jno
shl
pusha
das
aad
and
ins
add
push
fdivr
(bad)
add
(bad)
mov
outs
imul
inc
les
jle
div
aas
mov
jnp
mov
push
cld
arpl
mov
xor
cmps
or
rol
xchg
das
rol
push
mov
push
test
lds
push
fmul
out
sub
sub
mov
or
pusha
mov
ins
outs
mov
inc
xor
pop
test
cli
xor
std
add
cmp
inc
push
sbb
push
mov
inc
adc
xor
pop
sub
paddusb
mov
add
or
pop
add
adc
adc
fcom
or
lahf
jmp
arpl
pop
mov
ror
mov
dec
sar
(bad)
daa
jae
add
das
rol
(bad)
test
clc
pop
add
dec
dec
mov
dec
dec
and
dec
inc
push
pop
cmc
fbstp
(bad)
fisttp
inc
out
cmp
xchg
jle
push
mov
xor
or
adc
jmp
mov
stos
test
mov
iret
add
(bad)
add
ret
push
cmp
xchg
push
sbb
in
add
fwait
ss
out
cwde
cli
push
xor
pop
mov
iret
and
adc
inc
cmp
jo
rol
jle
xchg
aad
pushf
sti
fild
mov
push
or
or
dec
inc
daa
mov
in
test
push
push
je
mov
and
data16
add
push
dec
std
mov
pop
push
add
rcr
jecxz
ficom
mov
cmp
dec
ret
mov
and
dec
and
jmp
cs
(bad)
(bad)
push
gs
inc
call
jae
dec
into
xor
inc
aad
pop
cld
sub
adc
aas
aaa
adc
xchg
loope
inc
rcr
dec
pop
jb
lock
xor
mov
(bad)
mov
push
jl
and
pop
jmp
pop
mov
ret
jl
pop
push
jmp
add
in
mov
das
test
fdiv
mov
push
jbe
outs
nop
and
int
cld
add
mov
test
repnz
(bad)
cmps
inc
clc
cmp
lahf
sub
add
ins
and
iret
sbb
fsub
mov
test
adc
enter
mov
mov
rcr
xchg
fdiv
or
mov
jg
out
xor
mov
inc
rcl
push
(bad)
inc
mov
arpl
push
pop
out
mov
daa
mov
and
mov
(bad)
stos
sbb
dec
jl
push
sbb
dec
stc
inc
mov
std
fcom
mov
cwde
bound
mov
js
mov
add
mov
fdiv
popf
mov
pop
adc
out
test
idiv
pop
fmul
and
mov
adc
jbe
add
mov
in
pop
mov
xor
mov
adc
aaa
pop
aas
or
xchg
int3
sub
sbb
inc
sub
xor
fiadd
push
mov
(bad)
aas
mov
push
test
stos
add
les
dec
arpl
das
mov
inc
xchg
cmp
mov
fnstsw
test
push
sub
stc
hlt
outs
mov
inc
fisttp
mov
stos
jmp
xlat
pusha
fimul
mov
xor
enter
pop
sub
pop
sti
aas
pop
mov
jecxz
aas
xor
je
std
arpl
jbe
inc
push
cmc
mov
adc
mov
retf
outs
add
sub
mov
sub
inc
aaa
sti
les
cmp
ret
mov
fs
(bad)
in
jae
pop
inc
enter
js
xchg
ret
cli
out
loop
and
not
mov
inc
sbb
push
rcl
neg
stos
addr16
and
ret
push
(bad)
pop
clc
inc
mov
fs
aam
mov
inc
jbe
xor
pushf
fcom
cmps
sub
cs
(bad)
sub
out
push
adc
or
push
sub
jl
data16
fcomip
int
sar
dec
inc
push
mov
arpl
mov
pop
cli
aas
add
int3
dec
jo
xor
xlat
cli
dec
push
or
push
and
not
or
iret
or
xor
push
lea
sbb
xor
mov
(bad)
icebp
mov
adc
mov
mov
cld
je
retf
push
add
mov
mov
adc
add
add
inc
pop
movups
ss
dec
pop
je
jl
push
ficom
inc
cmc
inc
push
add
adc
mov
push
gs
pusha
add
mov
fist
mov
dec
inc
(bad)
(bad)
(bad)
add
adc
push
adc
icebp
sub
pop
mov
leave
call
push
cli
jbe
and
inc
inc
pop
inc
dec
ret
push
sbb
stos
mov
dec
inc
add
inc
mov
and
sbb
sti
mov
pop
ror
mov
add
xchg
rcr
add
scas
fild
lock
push
stos
(bad)
js
inc
add
pop
sar
icebp
adc
arpl
adc
movs
push
cmps
jle
mov
pop
pop
out
add
pop
inc
je
sbb
rcl
inc
push
inc
cs
clc
dec
mov
arpl
dec
jg
jmp
in
ret
cmc
inc
jmp
inc
aas
idiv
xchg
mov
pop
inc
enter
inc
inc
clc
icebp
std
(bad)
cld
out
nop
pop
es
add
ds
js
gs
dec
ret
hlt
(bad)
pop
push
cwde
pop
mov
inc
(bad)
out
push
xor
adc
or
mov
inc
std
xchg
mov
into
push
jmp
xchg
xchg
inc
and
fisttp
dec
fsubr
pop
lock
pop
std
and
loopne
pop
(bad)
fs
fidiv
mov
mov
add
xor
add
lds
dec
addr16
mov
add
mov
sti
add
pop
mov
jl
adc
xor
inc
add
inc
std
std
sti
bound
out
cs
jns
add
pusha
mov
sub
push
scas
aas
clc
jb
addr16
test
test
into
and
adc
jb
mov
jg
add
jnp
mov
mov
jp
push
dec
sub
rcl
adc
mov
add
scas
sub
jle
dec
dec
mov
mov
push
data16
push
cmp
add
call
pop
outs
call
xchg
pop
or
mov
push
loopne
fdiv
and
outs
inc
jecxz
jmp
and
xchg
or
test
mov
or
mov
push
xlat
adc
(bad)
ret
mov
sar
fsub
pop
add
clc
dec
mov
test
or
pmovmskb
mov
(bad)
push
dec
aam
pop
outs
mov
(bad)
iret
adc
inc
mov
or
mov
jmp
jg
gs
mov
arpl
sub
cs
js
inc
add
adc
mov
jo
repz
retf
mov
fstp
ret
inc
sub
jb
adc
xor
out
jmp
or
cmp
mov
mov
dec
xor
inc
cwd
mov
jmp
mov
and
pop
inc
pop
mov
je
xor
add
adc
jg
dec
icebp
xchg
shl
test
mov
das
lahf
nop
bound
adc
jbe
mov
push
xor
sbb
or
(bad)
(bad)
cmp
pusha
push
jae
lds
outs
dec
rol
popa
and
inc
sti
ja
push
push
mov
mov
nop
(bad)
sub
hlt
gs
dec
add
add
lock
cld
adc
or
(bad)
sub
adc
jb
or
xor
mov
mul
mov
(bad)
pushf
test
sub
shl
imul
enter
jne
mov
inc
cs
call
push
ins
arpl
xor
push
sbb
out
jno
ficomp
adc
in
dec
pop
add
mov
add
sbb
jecxz
adc
push
pushf
inc
inc
pop
aas
dec
cmp
push
aas
or
ins
inc
fnstsw
sub
mov
push
pop
test
dec
out
sar
and
inc
push
imul
jb
add
cli
inc
dec
inc
mov
push
fsub
mov
dec
idiv
das
mov
pop
pop
cmps
mov
cmp
mov
call
ror
cli
aaa
ret
push
cmp
dec
cli
and
push
or
pop
clc
push
(bad)
std
mov
mov
add
xchg
out
add
inc
dec
push
xor
aas
xchg
iret
clc
lds
and
xchg
dec
mov
cmp
outs
dec
loop
fistp
add
out
jae
add
jge
jl
mov
mov
lods
or
pusha
std
int3
dec
inc
(bad)
xchg
jno
out
fninit
jl
mov
arpl
push
ficomp
ja
jg
call
push
adc
adc
scas
clc
pop
mov
inc
inc
inc
inc
push
inc
test
ret
push
inc
add
xchg
jmp
and
xor
addps
ins
ss
les
jg
cmc
out
add
push
and
jg
or
dec
(bad)
sbb
fiadd
sub
sbb
scas
ret
push
test
xchg
mov
or
pop
push
je
(bad)
fiadd
scas
mov
cmp
std
push
push
cmc
add
sub
lods
or
fdivr
movd
out
out
outs
mov
inc
sbb
mov
pop
pop
mov
dec
cmc
ret
inc
mov
inc
inc
inc
out
cmp
cmp
cmc
adc
xchg
cmp
retf
sti
jae
aad
adc
and
jo
or
add
xor
mov
mov
mov
aaa
test
add
cmp
jmp
jmp
add
out
mov
pop
nop
rcl
(bad)
dec
mov
dec
and
bound
sbb
fimul
(bad)
dec
gs
test
mov
(bad)
xchg
jb
inc
ja
(bad)
jb
push
or
xchg
imul
rcl
sbb
sub
(bad)
ss
push
out
lds
inc
inc
push
test
dec
mov
jb
add
(bad)
jl
xchg
icebp
sub
idiv
ret
add
stc
test
aaa
fadd
jg
xchg
(bad)
adc
inc
mov
(bad)
sti
sub
inc
xchg
mov
sbb
dec
addr16
test
or
mov
pop
push
add
call
(bad)
fnclex
outs
or
inc
add
subps
add
jo
bound
jbe
add
rol
std
adc
shr
test
pop
pop
add
mul
aas
ret
inc
push
daa
test
gs
xor
jmp
mov
mov
mov
adc
inc
xchg
xor
dec
fwait
cmp
jbe
and
hlt
jg
mov
scas
push
xor
ret
and
scas
add
ror
mov
cwde
push
push
jle
jno
add
int3
mov
add
or
push
xor
push
out
adc
mov
mov
test
icebp
push
ficom
inc
addr16
mov
scas
mov
pop
test
sti
loopne
pop
or
rol
ret
inc
outs
mov
ret
ret
or
je
xlat
mov
arpl
xlat
or
in
push
lahf
call
jge
inc
push
pop
mov
sub
mov
xor
mov
mov
cmp
rol
mov
inc
jmp
test
out
loopne
or
xlat
mov
(bad)
adc
out
(bad)
arpl
jmp
pop
inc
pop
out
pusha
or
retf
mov
inc
(bad)
in
aas
sti
mov
lock
pop
sar
mov
ret
xchg
push
or
mov
out
dec
rcl
das
pop
aad
xor
out
cmps
cmps
test
fsubr
dec
bound
pushf
xor
inc
pop
adc
mov
add
pop
jle
nop
fadd
in
inc
add
add
add
out
in
jo
iret
clc
jg
mov
mov
out
push
push
pop
jmp
jl
inc
mov
add
add
push
cs
imul
aas
sbb
pminsw
sbb
xor
(bad)
aaa
sti
adc
pop
loope
mov
(bad)
add
pop
jno
jp
lock
xchg
dec
pop
mov
pop
or
test
push
shr
ret
movs
mov
add
inc
jae
mov
mov
loopne
(bad)
(bad)
idiv
icebp
or
pop
adc
fisttp
inc
stos
(bad)
mov
mov
repnz
clc
and
add
add
mov
loop
sub
mov
add
inc
mov
mov
push
push
mov
fisubr
sub
mov
dec
jmp
xlat
dec
push
inc
in
out
jle
(bad)
pop
pop
or
add
or
jg
push
adc
pop
lds
pop
mov
xchg
adc
out
call
push
xor
je
push
jg
outs
enterw
dec
cld
mov
rol
add
push
ficomp
cmp
mov
int3
jmp
test
pop
out
push
icebp
pop
jge
jg
push
add
inc
je
push
inc
loopne
sbb
jp
arpl
sbb
mov
test
sti
(bad)
ja
rol
add
mov
pop
mov
out
pushf
std
inc
cmc
adc
scas
mov
jmp
jno
add
sub
jns
stos
mov
mov
cmp
ror
(bad)
jo
mov
(bad)
stc
adc
add
mov
push
jnp
and
dec
sbb
fstp
jp
or
add
jl
mov
mov
in
cmp
inc
repnz
inc
scas
dec
or
ret
dec
and
add
xor
mov
push
not
or
addr16
call
inc
cmps
dec
data16
xor
fisub
(bad)
jmp
xchg
add
pop
loopne
(bad)
sbb
add
arpl
add
jmp
cmp
dec
or
test
sahf
scas
out
add
xor
or
pop
or
sbb
cmc
outs
ss
push
std
push
je
jae
mov
js
push
xchg
inc
pop
and
adc
jp
pop
dec
fiadd
mov
js
fs
pusha
jb
sbb
movs
pop
adc
in
push
or
adc
dec
ss
loopne
or
xor
inc
call
jle
pop
imul
pusha
sti
stc
push
pop
pop
inc
pop
dec
fiadd
popa
add
mov
adc
pop
add
inc
in
and
jae
ror
aas
or
syscall
outs
fwait
in
fist
pop
loope
sub
xor
cmc
push
push
dec
mov
fidiv
sbb
mov
fnstsw
xor
xchg
xchg
imul
mov
push
shl
sub
ret
das
mov
aaa
jb
xor
test
cld
fcom
inc
ja
rdmsr
pop
dec
pop
mov
lods
mov
imul
jae
add
inc
loopne
or
mov
jbe
dec
cld
pop
movs
addr16
dec
or
(bad)
test
cmps
pop
sub
jp
jge
xchg
adc
hlt
mov
loopne
sbb
stos
inc
mov
cmp
xchg
push
call
in
jg
sbb
xor
ins
inc
add
inc
jg
xchg
xor
(bad)
jmp
(bad)
pop
cmps
pushf
test
add
out
push
pop
mov
pop
das
rol
or
add
xchg
and
dec
push
cdq
pop
ret
cld
cmps
cmp
or
sbb
aas
sbb
aam
mov
scas
in
fiadd
ss
mov
fnsave
aad
add
cmp
sar
or
mov
mov
and
inc
push
adc
push
jmp
mov
ja
or
aaa
push
(bad)
sub
(bad)
fimul
mov
pop
out
and
xchg
add
cmp
sar
js
retf
add
jp
inc
bound
gs
push
jecxz
add
jno
mov
out
push
scas
fsubr
pop
mov
outs
fisubr
aad
sbb
fild
dec
or
mov
dec
loopne
icebp
pop
push
scas
clc
scas
or
scas
es
inc
push
div
fld
inc
not
js
out
fwait
xchg
(bad)
ins
mov
or
mov
test
xor
jmp
mov
mov
mov
gs
add
inc
cmp
push
add
ror
pop
inc
cmp
mov
mov
ret
push
mov
cs
pop
inc
mov
cmp
mov
jnp
ror
ficomp
adc
mov
daa
clc
pop
sub
inc
add
je
inc
mov
nop
js
add
inc
outs
and
loopne
(bad)
and
sub
fst
and
inc
out
jo
pop
stos
add
ins
mov
arpl
dec
add
mov
add
loop
push
lahf
add
or
add
dec
add
mov
mov
je
push
add
out
xor
xor
push
loope
idiv
jnp
jmp
js
pop
jecxz
lahf
and
pop
stc
pop
rcl
push
mov
mov
(bad)
clc
mov
mov
add
cmp
mov
or
or
ins
push
push
out
pop
and
es
adc
arpl
and
das
add
ret
mov
jnp
(bad)
in
lahf
dec
fdivr
cmpxchg
mov
popa
adc
jmp
call
inc
jecxz
iret
push
inc
bswap
je
cs
sahf
inc
std
and
mov
inc
rcr
inc
sbb
and
mov
jne
mov
add
or
cmp
movs
sub
inc
mov
ret
add
inc
push
push
jg
adc
out
sub
ja
je
inc
push
dec
push
inc
jge
lock
xchg
mov
imul
ret
sub
fnstcw
sbb
mov
mov
ja
loopne
adc
test
aas
cmp
out
pop
and
pop
lock
push
inc
dec
pop
dec
iret
in
sbb
scas
clc
push
add
xor
outs
dec
fimul
add
mov
inc
(bad)
jbe
js
hlt
jl
add
and
jle
pop
push
dec
rol
cld
push
ret
pop
jno
cmc
inc
dec
imul
mov
adc
add
xchg
or
stos
cmp
pop
sub
jl
xor
(bad)
mov
inc
ins
adc
rol
sahf
xor
cli
in
or
pshufw
push
imul
pop
xchg
cmp
push
movs
or
pop
out
int3
nop
push
aaa
icebp
dec
mov
std
add
add
daa
xor
sbb
rol
arpl
addr16
shl
jmp
addr16
inc
mov
mov
or
sbb
aaa
fld
sub
icebp
sbb
pop
pop
(bad)
aas
jae
adc
int
les
push
enter
imul
enter
fidiv
adc
out
push
fcomip
mov
push
out
jg
push
call
movs
cld
stc
jmp
adc
jg
inc
dec
inc
dec
std
je
mov
jmp
inc
or
mov
sub
data16
or
test
inc
sti
push
ins
push
ret
adc
jmp
retf
mov
lods
inc
shl
push
jae
dec
inc
cld
mov
jno
rcr
push
xor
sub
out
call
mov
ins
imul
push
jae
mov
mov
jnp
popa
mov
pop
arpl
mov
test
pop
dec
and
loop
std
outs
add
out
mov
out
call
mov
(bad)
movs
cmp
push
add
in
and
(bad)
mov
jp
sub
aam
pop
mov
xor
aaa
(bad)
xchg
push
hlt
jmp
test
dec
out
push
lds
push
push
ins
hlt
repz
mov
out
ss
inc
jg
mov
cmp
sub
mov
push
pop
mov
push
gs
pop
mov
xor
cmps
mov
sbb
test
repz
add
push
stos
gs
dec
mov
or
sub
jmp
cmp
(bad)
push
sub
imul
or
stos
mov
imul
add
dec
add
call
mov
and
jo
xor
lods
mov
scas
jb
dec
loopne
loope
add
dec
loop
push
(bad)
push
mov
inc
mov
sti
inc
pop
jg
add
call
jmp
jmp
mov
inc
add
sti
add
sar
mov
adc
out
fsubr
xchg
(bad)
and
adc
rol
jl
mov
sbb
adc
mov
dec
inc
sti
add
out
jb
mov
mov
jo
sbb
push
out
pusha
sbb
mov
xor
or
or
sub
dec
out
xor
call
fdivr
inc
test
add
mov
sub
add
mov
movs
into
jecxz
dec
mov
ds
stos
mov
inc
es
jg
hlt
push
and
cmp
jg
ror
dec
sbb
push
or
inc
aaa
inc
(bad)
sub
lahf
add
pop
cmp
repnz
loopne
sbb
push
ins
jl
mov
push
push
call
jmp
sub
mov
adc
adc
inc
add
inc
ret
pop
jmp
je
push
push
add
mov
mov
aaa
aam
adc
ss
dec
inc
jle
mov
xchg
sti
add
(bad)
jmp
aas
addr16
inc
cmp
dec
out
push
ss
pop
add
push
idiv
cli
or
mov
not
add
mul
jge
jg
rol
pop
setg
xchg
shl
das
jl
pop
pop
pusha
cmp
aas
or
pop
out
out
pop
or
mov
rol
cli
(bad)
or
push
inc
imul
call
xchg
mov
(bad)
call
test
out
jecxz
add
pop
push
lds
add
ins
cld
aaa
xchg
loopne
mov
dec
adc
push
xchg
add
icebp
fist
dec
in
sti
fild
mov
fs
call
push
sub
das
mov
mov
sub
fisub
aaa
inc
mov
(bad)
aad
ins
jb
mov
out
jo
lods
xchg
lock
cli
rol
push
ret
sar
les
pop
stos
mov
int3
pop
and
mov
dec
aas
sahf
imul
cmp
test
xor
aas
mov
(bad)
std
inc
call
jl
push
shld
retf
add
mov
push
icebp
ret
xor
jg
aam
or
push
push
movs
dec
pop
stos
jg
lock
je
aas
ret
addr16
cld
stos
push
pop
sbb
sub
add
test
and
mov
(bad)
sub
and
(bad)
(bad)
sti
and
int
cld
std
cmp
clc
pop
inc
pop
js
sahf
push
sbb
iret
je
mov
out
mov
add
push
in
inc
mov
xchg
or
shl
aas
out
mov
jae
dec
and
sub
push
inc
les
data16
cwde
dec
das
inc
retf
dec
cmc
inc
pop
and
inc
or
out
xor
scas
sub
jmp
push
pop
jg
adc
mov
loope
add
hlt
pop
mov
adc
inc
cmp
aas
aas
mov
jg
mov
das
dec
add
sbb
or
mov
test
lock
mov
inc
push
or
movs
adc
mov
add
pop
dec
loop
(bad)
call
je
out
dec
adc
push
dec
std
mul
fdiv
shl
or
vcvtpd2ps
or
or
(bad)
mov
loope
add
imul
pop
cld
adc
pop
mov
dec
or
sti
sti
call
inc
aad
jmp
add
push
cli
fcom
add
aam
jae
or
jae
adc
inc
cmc
push
xor
jg
push
jmp
into
(bad)
es
cmp
push
(bad)
xor
jge
(bad)
and
pop
mov
add
sahf
fisubr
push
adc
fidiv
sti
add
add
shl
call
push
mov
push
jb
loopne
out
gs
pop
dec
in
arpl
pop
nop
adc
pop
pop
inc
pop
ret
dec
add
adc
and
out
neg
mov
dec
outs
mov
inc
jmp
es
loopne
inc
ins
or
jbe
mov
mov
adc
pop
xor
push
or
add
retf
inc
leave
cmp
test
fs
push
sub
jge
in
lock
test
and
xchg
(bad)
adc
mov
clc
shl
inc
add
out
push
add
ss
inc
inc
pusha
inc
lock
out
jle
mov
dec
pusha
stos
push
mov
mov
adc
mov
ds
push
mov
lea
je
addr16
mov
adc
push
leave
inc
repz
inc
jmp
xor
pop
xchg
xor
dec
and
jp
and
or
outs
add
cs
cli
add
mov
(bad)
fidivr
loopne
pop
adc
jmp
call
stos
mov
repnz
jnp
push
add
(bad)
lahf
out
push
inc
out
fs
mov
test
movs
add
and
push
retf
out
movs
mov
lea
and
inc
dec
pop
inc
sti
pop
movs
push
add
pop
es
sub
mov
xchg
push
test
add
add
(bad)
push
xor
fadd
lahf
mov
mov
imul
popa
xchg
sbb
mov
add
mov
and
mov
mov
add
adc
push
out
xlat
or
jl
out
mov
inc
cmp
jle
or
inc
xor
add
clc
jmp
std
pop
xchg
fidivr
fnstsw
mov
dec
ins
xor
mov
jl
mov
pop
in
sbb
pop
icebp
sbb
jmp
aam
mov
xlat
dec
rol
stc
sbb
fimul
fisubr
mov
push
cmp
mov
inc
rcr
push
jno
into
nop
in
pshufw
pop
test
shl
push
(bad)
sti
clc
call
add
inc
dec
push
fs
sub
add
add
push
jae
mov
mov
out
inc
pop
sbb
jmp
(bad)
in
mov
pop
add
aaa
addr16
call
mov
mov
xor
inc
xor
rol
pop
mov
push
(bad)
add
mov
inc
es
sbb
arpl
add
sti
aas
push
test
lods
pop
cmp
in
ret
mov
add
xor
mov
ret
lock
push
into
cmc
dec
and
add
dec
mov
push
sbb
push
js
push
mov
in
mov
cli
(bad)
sub
ror
pop
xchg
addr16
pop
(bad)
push
pop
adc
adc
icebp
fimul
cmp
or
adc
pop
mov
xchg
or
push
aaa
push
popa
mov
inc
adc
call
pusha
ret
gs
mov
sub
movups
and
std
cmps
(bad)
rdmsr
outs
ret
dec
add
push
imul
sbb
(bad)
icebp
out
test
add
out
sti
arpl
push
xchg
ins
add
loopne
mov
dec
inc
xchg
xor
pop
or
pop
sbb
dec
sub
lds
ret
sub
xchg
inc
add
dec
xchg
add
mov
or
je
inc
loopne
jg
test
jae
add
cmps
and
add
push
and
(bad)
jl
and
add
fisubr
and
push
cwde
cli
mov
pop
pusha
(bad)
sti
sti
push
push
xlat
pop
inc
dec
push
mov
dec
int
jp
leave
or
in
pop
adc
outs
idiv
add
jle
(bad)
outs
push
fwait
pusha
add
xor
add
adc
xor
out
fld
cmp
mov
cmp
inc
jnp
sti
dec
xor
movs
div
add
iret
(bad)
std
mov
fidivr
aaa
jmp
std
dec
pusha
lods
add
add
mov
(bad)
ror
push
or
xor
mov
addps
mov
and
cmps
mov
xchg
dec
mov
jo
xchg
sub
add
mov
and
das
mov
add
xchg
ror
dec
aas
or
gs
fs
int
push
dec
hlt
mov
or
xchg
mov
idiv
mov
mov
mov
jge
clc
and
push
sbb
and
mov
push
imul
aas
and
mov
pop
out
ret
std
push
or
aad
xor
or
call
xor
outs
mov
push
icebp
popf
inc
push
outs
mov
ins
sti
pop
test
dec
sub
imul
ror
ss
and
or
ja
js
sub
jg
cld
mov
mov
xor
push
rcl
sbb
push
pop
bound
or
in
int3
mov
or
fbstp
pop
push
mov
xchg
pop
pop
test
add
ins
mov
jmp
push
pop
clc
xor
pop
or
imul
or
(bad)
clts
aaa
xor
sbb
cli
xchg
test
ss
jbe
adc
faddp
sbb
ret
(bad)
ds
mov
push
inc
inc
out
or
pop
mov
adc
loop
jmp
push
sub
inc
or
or
imul
mov
mov
dec
dec
pop
js
push
movntq
out
sti
jb
xor
push
mov
dec
(bad)
sub
sti
mov
test
(bad)
mov
push
and
hlt
dec
jg
aas
inc
xchg
mov
xor
mov
mov
dec
push
or
mov
add
cld
jae
call
jno
xor
mov
ins
ds
pop
jbe
aas
(bad)
lahf
adc
retf
stc
rcr
inc
push
es
(bad)
cld
sub
int3
push
push
aas
push
add
pusha
push
pop
or
or
pop
ds
sbb
sti
into
mov
xchg
in
dec
adc
out
sbb
fild
bound
and
nop
adc
loopne
aas
ret
icebp
adc
mov
jae
sti
shr
add
aaa
push
cli
or
adc
pop
add
xchg
adc
(bad)
xor
sub
sbb
ficom
popf
shr
mov
inc
inc
(bad)
and
leave
loop
inc
jmp
push
push
cwde
mov
aas
arpl
or
push
push
rcl
sti
dec
loopne
add
add
mov
pop
ret
fld
and
(bad)
cmp
fcmovb
sub
or
sbb
pusha
stos
movs
pop
lods
mov
jmp
pop
rol
mov
push
adc
shr
dec
jl
icebp
mov
push
les
out
xchg
xor
ret
cli
sbb
jmp
push
or
cmp
shl
test
pop
sbb
mov
mov
xlat
(bad)
jmp
jnp
dec
push
loopne
test
or
(bad)
fdiv
mov
push
add
sub
je
in
and
stos
(bad)
dec
cli
or
mov
imul
mov
aad
or
mov
jge
xor
xchg
sub
inc
mov
pop
loop
aam
sub
mov
loop
add
xor
mov
xor
dec
lock
cld
mov
push
imul
scas
cmp
mov
pop
rcl
call
outs
xor
cmp
jl
dec
push
xor
cli
mov
shl
scas
or
xchg
fsub
outs
fdiv
sub
xchg
inc
outs
pop
jae
adc
adc
arpl
push
ins
inc
mov
cmc
mov
sub
shr
(bad)
xchg
dec
(bad)
scas
xor
(bad)
and
ret
jnp
loop
pop
jbe
sbb
ds
retf
lods
sar
add
pop
(bad)
out
xlat
sub
das
push
pop
sti
dec
push
call
std
jg
mov
add
(bad)
cmovb
push
inc
adc
and
call
cld
pop
aas
pop
out
inc
add
pusha
dec
push
test
int3
mov
or
ror
add
in
inc
out
jmp
dec
repnz
adc
xor
mov
add
cmp
dec
jg
mov
gs
xor
mov
push
addr16
push
and
inc
clc
and
mov
fadd
xchg
push
mov
or
cli
outs
test
mov
jns
out
cs
mov
xor
das
out
mov
pusha
push
outs
nop
or
xor
cmp
add
movs
mov
pushf
aaa
jae
inc
add
ret
adc
mov
sub
inc
std
arpl
add
cmp
mov
or
aas
and
mov
xor
add
enter
jmp
xor
jl
inc
pop
imul
mov
call
or
sahf
jnp
add
sti
dec
jmp
push
dec
inc
ret
fwait
hlt
push
fsubr
inc
jp
inc
jne
inc
cli
xlat
jnp
or
std
or
cmp
icebp
push
ins
mov
xchg
cmp
push
inc
dec
fwait
call
call
adc
mov
test
inc
ja
push
inc
fs
push
cld
mov
add
pusha
push
dec
jle
in
call
sbb
mov
outs
inc
adc
inc
add
hlt
out
shl
push
jmp
adc
mov
push
cmova
xor
inc
add
sub
inc
jecxz
dec
add
mov
jbe
mov
mov
and
(bad)
or
sbb
jle
rcl
test
ins
add
pop
sub
push
fcom
shl
pop
xchg
ret
add
sub
or
add
sub
minps
pop
cli
add
mov
push
mov
lock
loopne
lahf
push
scas
mov
jnp
push
push
sub
stos
out
add
and
jb
lea
dec
push
call
push
sub
adc
ins
add
inc
imul
pusha
mov
xor
neg
inc
fadd
addr16
pop
adc
mov
ret
(bad)
cmp
dec
dec
adc
sub
xor
and
dec
sub
jb
mov
sub
rcl
aad
jmp
inc
mov
out
inc
pop
cmp
setnp
mov
cmp
js
xor
push
jg
or
jg
jb
ret
jg
arpl
adc
push
and
inc
adc
mov
(bad)
mov
xchg
hlt
sbb
pop
fs
inc
adc
stos
imul
stos
push
push
xor
call
nop
push
sub
sbb
(bad)
pop
nop
dec
push
adc
or
jl
(bad)
rol
(bad)
ds
je
mov
aas
push
mov
(bad)
push
mov
cld
add
add
sub
dec
js
inc
cmps
mov
(bad)
and
jae
mov
pop
mov
call
push
out
mov
jg
es
pop
aaa
adc
call
push
clc
(bad)
out
sub
add
psubq
jmp
hlt
(bad)
mov
test
jno
push
and
push
pop
fcomp
or
or
mov
push
jl
push
shl
fcomp
lock
test
cmp
dec
pop
std
idiv
jmp
sub
mov
bound
add
sub
cli
fcomip
mov
and
inc
aas
push
mov
push
pop
je
mov
pop
mov
mov
xchg
dec
std
lahf
mov
mov
lds
push
das
sti
cmp
jmp
ret
mov
pop
inc
pop
jno
push
push
ret
jnp
fucomi
inc
and
lods
cmp
add
add
xor
dec
or
cmp
mov
mov
cli
push
data16
or
es
add
(bad)
cld
cs
test
add
ret
dec
sbb
sub
and
out
ret
mov
sbb
sub
mov
shr
xor
sub
mov
cmp
hlt
ja
mov
pop
dec
mov
arpl
add
push
(bad)
cli
jl
mov
loopne
call
xlat
out
fidivr
mov
imul
div
mov
dec
dec
mov
scas
pmulhw
lds
add
std
adc
pop
mov
add
test
loop
mov
add
aam
addr16
in
imul
ret
es
add
lods
lods
out
mov
movs
dec
imul
jnp
jb
push
dec
pop
repz
movs
add
inc
movs
inc
adc
(bad)
test
dec
or
adc
cmp
iret
push
add
loope
sbb
dec
xlat
sbb
in
scas
fnstenv
dec
arpl
sub
cmp
(bad)
das
mov
push
pop
push
outs
mov
adc
mov
arpl
inc
cmp
dec
adc
mov
test
push
inc
dec
pop
ds
sub
inc
lock
and
xlat
(bad)
(bad)
cmp
repz
cmp
jae
adc
inc
push
test
je
jo
cmc
mov
test
je
push
rcr
xchg
mov
or
nop
loopne
pop
adc
loopne
pop
bound
xor
dec
pop
push
cli
hlt
lock
ss
or
inc
aas
mov
stos
cmc
test
xor
aas
inc
sub
sbb
out
cld
bound
add
fcom
adc
lds
(bad)
in
sub
out
mov
and
mov
sti
call
arpl
addr16
pop
outs
ss
or
call
add
fbstp
add
rcl
add
repz
push
idiv
popf
push
ret
les
clc
or
je
sbb
pop
pop
mov
push
xchg
sar
add
or
adc
mov
call
mov
lock
ins
or
loop
ficom
mov
popa
fistp
push
out
call
sub
push
es
ret
inc
imul
dec
mov
inc
inc
in
xchg
lahf
out
cli
pop
mov
(bad)
fisttp
popf
and
call
loop
and
mov
je
jle
mov
std
inc
or
xor
dec
mov
cmps
cli
lods
and
sbb
cmps
xchg
push
int3
sbb
das
mov
repz
mov
ret
inc
inc
mov
add
dec
sbb
push
add
dec
ret
mov
(bad)
outs
rol
xchg
and
jg
out
adc
inc
add
adc
dec
imul
fs
not
and
sbb
fisttp
sbb
int3
pop
out
mov
push
xor
mov
cld
xchg
cmp
cli
aam
mov
lds
cmp
inc
jno
push
jle
(bad)
mov
std
(bad)
(bad)
(bad)
jno
rol
push
out
(bad)
ins
data16
arpl
inc
cmc
inc
push
push
xchg
aad
data16
cwde
outs
add
std
cmp
add
imul
loope
mov
pop
push
cmp
inc
test
in
bound
bound
xor
inc
mov
push
push
(bad)
shr
mov
xchg
mov
sti
enter
pop
js
ds
or
cmps
or
mov
push
jl
ins
call
jmp
mov
inc
ret
(bad)
push
inc
test
cmp
pop
bound
add
test
sub
into
mov
pop
arpl
sub
dec
push
adc
hlt
dec
(bad)
pop
sub
jmp
sbb
pop
fnstenv
cwde
push
jae
movs
add
push
fdiv
in
mov
jle
retf
or
jle
(bad)
daa
inc
enter
shr
xor
add
mov
push
iret
and
in
imul
mov
movs
aaa
mov
aaa
jge
xchg
sbb
mov
pmaxub
jg
repz
js
enter
add
pop
dec
jge
push
(bad)
mov
inc
push
cmp
inc
rcl
test
aas
sbb
dec
and
out
(bad)
push
ss
out
jbe
xor
std
ret
retf
inc
inc
mov
mov
mov
sub
push
add
mov
mov
sub
dec
inc
adc
dec
ret
jg
cmc
push
cld
dec
push
sub
mov
in
bound
and
pop
pusha
push
mov
xchg
cmc
add
out
lds
lods
scas
stos
push
dec
sbb
(bad)
push
jb
inc
or
sbb
mov
and
nop
adc
arpl
pop
outs
push
shl
rcl
es
icebp
(bad)
push
ins
cli
mov
mov
jmp
pushf
mov
ds
icebp
jb
or
clc
mov
jmp
mov
out
and
adc
inc
pop
or
mov
or
mov
dec
data16
mov
aaa
sti
mov
push
mov
ret
ds
sub
mov
push
(bad)
das
dec
dec
mov
daa
xor
pop
mov
jle
mov
pop
inc
push
ds
in
sti
sar
rcl
aas
add
inc
pop
push
add
sbb
or
aaa
ror
jl
imul
loopne
jge
repnz
out
inc
(bad)
mov
imul
cli
cmp
push
hlt
cmp
inc
jb
jl
scas
sub
nop
(bad)
pop
repnz
int
pusha
pop
repnz
mov
sar
rcr
dec
inc
and
xor
lods
data16
neg
xadd
lock
or
inc
out
inc
gs
adc
inc
inc
mov
sub
stos
pop
js
jmp
ins
inc
inc
mov
xchg
(bad)
and
adc
mov
cwde
(bad)
jg
adc
inc
xor
xlat
adc
sahf
cmp
add
jmp
inc
add
push
addr16
xlat
push
cwde
cmps
enter
mov
in
adc
(bad)
je
movs
in
mov
lods
add
pop
addr16
ror
mov
jg
cmp
push
out
mov
aaa
push
jb
mov
jnp
inc
mov
mov
mov
pop
mov
call
ret
add
paddw
cmp
imul
jb
push
aas
adc
call
test
pushf
ret
push
cwde
pop
cmp
xor
jle
add
aas
mov
sbb
int3
lahf
add
ins
in
loop
rcr
std
adc
add
inc
aad
pop
mov
push
pop
pop
lock
shr
loop
cld
aad
call
pop
pop
ror
push
loop
mov
add
mov
stos
dec
je
and
fwait
mov
pusha
hlt
or
inc
mov
push
fadd
fwait
push
cmp
adc
push
add
add
cld
lea
inc
pop
push
mov
data16
push
enter
or
inc
ja
add
jmp
js
mov
inc
test
jp
xchg
jmp
jmp
test
xor
push
mov
pop
pop
push
push
inc
pop
test
push
inc
and
fiadd
sub
js
and
lock
inc
lods
das
push
adc
xor
or
mov
not
mov
mov
pop
repz
imul
sub
push
add
xchg
pop
xor
dec
jnp
fprem
pop
fadd
mov
add
and
fild
inc
jo
xor
in
dec
jmp
inc
push
dec
push
xchg
pop
inc
shr
mov
ret
fwait
loope
cdq
dec
mov
cmp
outs
jecxz
test
mov
idiv
jae
bound
lods
jno
jle
add
and
mov
scas
push
dec
out
das
pop
push
push
(bad)
(bad)
mov
sub
cli
push
(bad)
cmp
jmp
dec
das
fs
inc
add
arpl
mov
jnp
mov
sub
inc
shr
pop
outs
mov
jno
lods
xor
js
rep
sbb
mov
sahf
outs
pop
adc
imul
test
jecxz
cld
(bad)
iret
mov
pop
stc
push
test
mov
and
dec
sub
sar
ss
sbb
fs
stc
push
out
std
dec
pop
dec
mov
out
in
lods
add
ss
pop
and
cmps
cmp
call
cmp
sbb
add
test
mov
aaa
fmul
ds
icebp
add
movlps
or
mov
mov
rol
movs
icebp
dec
dec
sub
inc
mov
and
cmp
push
adc
mov
adc
dec
movs
cwde
mov
adc
push
sti
cmp
pusha
inc
adc
cli
adc
push
dec
repnz
push
push
add
jne
mov
pop
test
mov
inc
dec
test
push
adc
sbb
sbb
push
mov
dec
mov
(bad)
xlat
(bad)
enter
iret
jae
inc
mov
sbb
add
mov
sbb
inc
call
les
mov
into
mov
and
or
ss
sbb
push
hlt
sub
outs
push
add
ins
xchg
adc
xchg
push
inc
(bad)
and
and
sbb
pop
imul
add
and
inc
add
clc
add
and
call
call
mov
and
push
add
add
addr16
sbb
xchg
sub
ret
jmp
mov
pop
fs
(bad)
inc
(bad)
lahf
jmp
mov
nop
sti
inc
inc
inc
das
xor
inc
(bad)
cmp
leave
scas
inc
jg
adc
test
push
dec
mov
adc
inc
fadd
ret
adc
(bad)
adc
iret
ja
mov
push
rcr
or
(bad)
sti
pop
cld
aad
es
sbb
add
fdiv
mov
mov
add
inc
in
pop
push
mov
inc
cli
out
imul
pop
mov
(bad)
dec
out
cmps
mov
add
mov
inc
dec
adc
xor
(bad)
add
call
cmp
push
add
fisubr
cmps
je
nop
jmp
xor
or
add
mov
not
adc
call
enter
cmp
icebp
sbb
jg
call
sub
in
mov
add
lahf
sbb
adc
push
pop
xchg
pop
add
mov
pop
hlt
pop
pop
mov
das
je
mov
rcl
bnd
mov
out
in
dec
pop
add
fs
and
mov
xor
and
mov
jmp
loop
xor
push
or
mov
lock
push
and
movs
mov
inc
inc
mov
out
adc
js
test
jne
mov
jl
jecxz
rol
inc
lock
jg
sti
pop
push
loop
inc
add
(bad)
cld
mov
fmulp
fsub
add
sbb
fisttp
rcl
jmp
add
ret
adc
loopne
mov
adc
pop
inc
jg
jae
jb
pop
xor
imul
data16
je
jae
cmps
dec
cmp
pop
xor
and
jb
pop
ror
push
sahf
mov
mov
add
and
jno
test
call
test
cmp
movs
aas
pop
mul
adc
cld
dec
xor
in
int
fdiv
inc
adc
push
mov
jb
push
lds
sub
inc
lahf
pop
rcr
arpl
cs
inc
inc
xor
sbb
xor
ret
mov
pop
and
push
mov
cs
mov
mov
(bad)
xchg
jmp
mov
jae
mov
sar
out
adc
push
iret
jg
icebp
sbb
repz
jbe
cld
mov
xchg
dec
sbb
fadd
out
fisttp
jp
mov
call
out
or
out
add
xor
imul
mov
jmp
inc
out
out
add
or
pop
push
sbb
out
aas
mov
lods
movs
rcl
paddq
mov
xor
pop
push
push
inc
mov
rol
mov
fsub
ins
xor
inc
ret
xchg
sbb
stos
adc
mov
addr16
bound
stc
les
push
enter
cmp
push
ret
out
add
pcmpeqb
int3
sti
mov
push
jmp
or
inc
push
cmp
jl
(bad)
outs
xor
dec
add
(bad)
push
adc
xor
inc
jl
(bad)
xlat
aas
cli
stos
mov
adc
cmp
aam
mov
pop
or
outs
push
pop
lds
aas
pop
cli
ja
inc
jo
cmc
jb
inc
ret
stos
inc
ins
mov
adc
mov
scas
dec
loopne
(bad)
std
outs
sbb
es
push
neg
mov
dec
pop
sahf
mov
mov
fiadd
retf
add
jmp
mov
jb
push
(bad)
dec
rcl
out
mov
dec
out
jne
inc
cld
and
mov
lods
pop
out
js
shl
scas
adc
inc
test
add
mov
cwde
repnz
xor
mov
outs
add
inc
push
loop
fwait
push
pop
sub
push
ficom
dec
dec
out
ret
adc
inc
std
pushf
inc
push
out
jecxz
or
mov
pop
out
pop
inc
jg
or
adc
lahf
xchg
sti
aaa
or
movs
popf
pop
repz
call
ins
call
shl
jmp
(bad)
rcr
add
xor
jge
xchg
push
pop
mov
js
mov
(bad)
call
test
dec
lahf
jae
neg
sbb
inc
dec
jg
scas
sbb
adc
push
fidiv
je
sbb
or
clc
or
inc
inc
loope
or
das
add
popf
xor
ret
jecxz
push
(bad)
test
imul
xchg
ret
fld
adc
mov
add
or
xchg
push
add
call
mov
or
js
mov
dec
and
pop
jge
push
xchg
(bad)
pop
das
xor
jg
daa
add
(bad)
adc
stos
fld
pop
outs
pop
dec
(bad)
fwait
and
xor
inc
das
test
call
adc
cmp
push
movs
movs
or
cld
addr16
vaddps
ds
adc
cmc
das
jp
mov
sti
nop
jno
jo
imul
mov
(bad)
fcomp
jmp
sti
idiv
inc
rol
inc
movs
and
je
mov
stos
and
inc
(bad)
neg
or
fwait
sbb
pusha
retf
sti
ret
push
aas
xor
add
retf
cs
sub
sub
out
ss
dec
or
aad
sbb
or
std
mov
rol
mov
out
mov
mov
mov
leave
imul
pop
cld
cmp
je
mov
mov
mov
jg
sahf
sar
push
jo
stos
mov
pop
mov
add
ret
sti
jae
icebp
dec
jmp
in
mov
iret
ins
ja
cli
out
add
dec
pop
and
sti
imul
add
out
jb
pop
lods
cmp
cmc
adc
lahf
ins
call
or
jb
mov
add
sti
ret
stos
inc
faddp
(bad)
je
(bad)
mov
push
(bad)
aas
mov
or
jno
or
inc
rcr
div
arpl
add
pop
dec
push
popf
(bad)
push
out
scas
and
sub
mov
outs
cli
mov
(bad)
add
repz
mov
pop
out
jb
hlt
mov
push
js
push
js
jae
scas
cmps
mov
leave
push
add
sub
pop
sbb
cmps
mov
inc
aam
sahf
dec
inc
pop
sbb
pop
mov
xor
inc
jg
nop
sahf
cmp
pop
sbb
ja
push
psrld
cmps
xor
movs
mov
pop
adc
add
in
test
(bad)
xchg
mov
push
jmp
inc
push
pop
add
mov
xor
ret
mov
pop
dec
jmp
pop
add
inc
cmp
out
push
mov
retf
xchg
jg
mov
lods
inc
pop
lods
add
lds
sbb
add
xor
jno
mov
lock
mov
(bad)
push
mov
inc
popa
adc
mov
pop
push
out
mov
ret
and
inc
pop
push
sbb
mov
lock
inc
mov
enter
add
adc
mov
add
repz
or
(bad)
outs
jl
rol
leave
pop
(bad)
fld
ds
lods
loop
mov
(bad)
or
cmps
xchg
push
aas
inc
adc
je
or
inc
cmps
mov
addr16
outs
ror
jmp
cmc
dec
ret
mov
add
dec
cmp
add
gs
rol
pop
mov
xchg
mov
js
loope
sbb
push
daa
cld
jg
lods
cmp
add
test
adc
call
jbe
(bad)
mov
inc
cmp
xor
(bad)
adc
pop
xor
(bad)
sar
jbe
push
xor
inc
sar
aas
cmc
pop
xchg
adc
push
pop
push
pop
stos
push
fs
inc
jno
shr
xlat
xor
pushf
std
xor
(bad)
std
cmp
jns
mov
pop
inc
xchg
js
clc
fild
dec
mov
pop
sti
push
or
add
and
out
push
aas
jg
add
mov
xor
sub
inc
(bad)
out
jb
outs
inc
inc
inc
push
cmp
(bad)
std
icebp
jne
pop
icebp
inc
std
mov
and
lods
mov
mov
push
cmc
pop
out
mov
add
dec
pop
pop
and
push
push
adc
xor
lods
test
adc
xchg
cld
sub
add
cld
dec
std
retf
mov
adc
pop
call
inc
movs
scas
xor
cmp
mov
dec
imul
push
mov
ret
outs
inc
or
mov
cmp
dec
imul
xchg
xor
push
push
push
sbb
sbb
cmp
push
ror
into
mov
jmp
pop
test
mov
(bad)
pop
push
push
ds
push
mov
mov
or
jle
data16
inc
xchg
out
push
inc
ins
mov
aaa
mov
js
ja
sub
sub
jae
push
mov
xor
pusha
inc
mov
xor
aas
icebp
outs
sbb
outs
mov
cmps
sbb
ins
xchg
gs
pushf
or
fisub
xchg
mov
je
lds
(bad)
push
sub
pop
pop
dec
mov
ror
out
jle
jo
mov
outs
xor
dec
gs
test
adc
xor
mov
cmp
sub
fld
mov
pop
add
add
arpl
je
ror
(bad)
es
inc
xor
push
push
pop
sub
pop
into
or
adc
and
adc
lock
js
push
fwait
adc
mov
stc
push
das
rcr
and
cli
add
mov
shl
lods
mov
adc
dec
loop
push
or
pop
add
cwde
jnp
sub
fiadd
or
xchg
mov
fbld
je
int3
es
and
jmp
jmp
arpl
scas
add
add
jmp
xor
call
inc
imul
je
ins
or
out
dec
test
jae
mov
adc
dec
push
add
dec
int3
(bad)
icebp
sub
and
aas
lahf
scas
stos
and
(bad)
add
ficomp
mov
movs
popf
movs
bound
arpl
test
cmps
js
cmps
fild
mov
dec
push
daa
aas
sbb
test
(bad)
pop
ret
or
and
xchg
mov
les
fcmovu
(bad)
stos
mov
fld
lock
mov
(bad)
xlat
mov
loop
or
jmp
xor
cmp
add
aam
pop
add
pushf
in
cmp
cld
sub
(bad)
inc
cmp
sub
push
cld
in
pop
mul
push
cld
mov
fist
xor
pop
jmp
mov
mov
add
sub
ja
dec
push
sub
shl
ret
push
add
mov
dec
fdivr
fiadd
cmps
cmps
push
cmp
pop
push
xchg
mov
push
jae
xor
(bad)
outs
sub
bnd
inc
mov
mov
pop
fild
div
mov
loopne
sahf
mov
dec
inc
(bad)
jae
sti
fild
ins
outs
add
cld
(bad)
jg
or
call
(bad)
out
ret
test
jg
lahf
paddw
xchg
xchg
mov
fidivr
sbb
out
add
pop
xchg
and
pop
or
(bad)
jae
inc
add
push
lahf
stos
test
jecxz
test
inc
cmp
clc
dec
mov
ret
cmp
push
mov
mov
mov
repnz
mov
retf
mov
aas
push
loopne
dec
outs
push
ror
inc
sub
imul
mov
cmp
out
retf
cmc
outs
dec
dec
je
data16
inc
call
pop
mov
push
mov
(bad)
pusha
pop
push
push
dec
adc
push
cld
fimul
neg
mov
ss
loopne
sub
mov
icebp
int
ins
adc
dec
mov
es
nop
in
xor
sbb
mov
add
add
inc
jmp
dec
lock
jg
mov
aaa
mov
test
mov
adc
jnp
sbb
cli
pusha
sub
cmp
(bad)
xor
and
ja
scas
and
mov
gs
mov
push
in
push
std
mov
jg
pop
inc
(bad)
ror
or
int
jmp
mov
push
shl
push
sti
fsubr
or
pop
jmp
mov
dec
fwait
or
(bad)
pop
repnz
ja
adc
fcom
repz
fcom
fadd
push
xor
sub
jle
mov
sub
xor
inc
out
lahf
out
shl
call
pop
dec
cmp
aas
test
or
je
outs
icebp
call
fist
fs
dec
mov
or
mov
in
inc
mov
je
push
jnp
jb
jl
fdivr
adc
mov
jmp
jb
dec
(bad)
pop
and
push
add
out
ret
sub
inc
adc
ins
je
retf
cld
and
addr16
mov
in
pop
scas
xor
out
jae
or
add
icebp
jg
or
inc
cmps
cld
pop
(bad)
(bad)
pusha
imul
std
hlt
pop
inc
dec
cmp
cmps
mov
inc
cmp
out
cld
add
scas
add
mov
add
in
push
push
sbb
xor
aad
movs
push
pop
inc
and
add
addr16
push
dec
out
mov
hlt
inc
mov
in
adc
xor
pop
pop
pop
(bad)
xor
lds
add
dec
add
or
(bad)
mov
jge
mov
mov
fiadd
cmp
xor
add
jg
sbb
sub
dec
hlt
pusha
jae
call
fdivr
push
std
jmp
dec
aam
push
cmp
mov
das
neg
fisub
pop
add
add
adc
xor
call
jp
imul
mov
mov
add
jbe
data16
mov
(bad)
adc
bound
push
retf
out
ins
xor
push
xchg
mov
add
stos
dec
loopne
test
mov
jno
fidiv
(bad)
pushf
push
and
outs
clc
jae
cvtps2pd
cmp
hlt
dec
cmp
mov
ins
cli
enter
push
add
dec
(bad)
or
jb
(bad)
push
push
popf
shr
je
push
dec
jnp
mov
movs
outs
in
ins
inc
push
add
fst
and
mov
jo
int
and
data16
mov
dec
and
out
aas
push
mov
jmp
dec
dec
pop
adc
adc
outs
(bad)
push
push
mov
dec
cli
mov
sbb
push
out
xor
pop
push
inc
imul
std
dec
leave
mov
clc
or
mov
inc
dec
ret
inc
movs
arpl
push
pmaddwd
push
jbe
scas
jmp
or
test
test
fisub
jmp
shl
inc
push
jae
(bad)
jp
mov
fisttp
fisttp
add
add
nop
mov
push
ror
lods
stos
adc
mov
ror
test
push
lahf
cwde
push
and
repnz
mov
cmp
mov
sbb
xor
push
pop
xchg
xchg
adc
jg
mov
or
xor
out
cmp
(bad)
outs
pop
xchg
inc
pop
inc
(bad)
adc
dec
and
cmp
xor
cmp
pop
xor
add
sub
imul
stos
out
lock
in
add
and
inc
jl
enter
adc
mov
out
mov
add
xor
xor
add
xor
(bad)
jg
mov
je
aaa
fild
jae
inc
push
add
rol
mov
jae
cmp
das
adc
jno
sub
pop
jb
(bad)
dec
cld
sti
inc
jno
pop
jo
jp
and
scas
je
push
inc
pusha
scas
add
inc
or
stos
mov
lock
or
sub
jb
dec
mov
add
add
fistp
inc
adc
xor
add
mov
mov
ret
or
mov
push
pop
pop
pop
test
jbe
cld
js
jle
jo
stos
test
nop
mov
call
inc
aas
movs
shl
add
dec
xor
call
jmp
mov
fwait
sub
push
imul
and
mov
add
adc
imul
mov
jp
fdivr
mov
jg
icebp
pop
jmp
neg
add
pop
out
cmp
test
fadd
ror
adc
mov
ret
add
mov
push
es
mov
dec
mov
ins
jecxz
sbb
pop
inc
icebp
push
aad
cld
jmp
pop
xor
test
sub
gs
cmp
(bad)
sti
loop
sbb
adc
sbb
aas
leave
aas
outs
push
(bad)
stc
and
ins
idiv
les
pop
add
xchg
pop
add
je
mov
ins
inc
outs
add
mov
xchg
pop
jmp
cmp
xchg
mov
cs
push
mov
pop
mov
inc
add
sub
ja
sub
test
push
arpl
and
adc
lldt
push
adc
mov
push
mov
mov
ret
es
sbb
mov
jge
sbb
(bad)
in
ins
mov
pop
mov
add
(bad)
sbb
mov
mov
xchg
aam
mov
adc
add
out
push
cmp
sbb
cs
iret
fdivp
and
(bad)
jno
mov
adc
ret
sbb
pop
pop
clc
fs
pop
adc
add
mov
out
pop
inc
pop
les
test
inc
imul
aam
inc
gs
mov
fdivr
inc
inc
dec
test
push
retf
add
xor
ret
pop
sub
rcl
mov
call
sbb
inc
sub
shl
adc
sub
mov
cmp
add
aas
cmp
jb
push
pusha
je
movs
mov
inc
mov
inc
pop
and
rol
jmp
aam
jg
cmp
adc
xchg
imul
cmp
sar
mov
xchg
jmp
inc
addr16
aas
jl
xor
push
add
shl
hlt
out
add
pop
enter
push
mov
test
out
inc
call
add
add
mov
push
rcr
ja
or
mov
and
or
cmc
inc
push
jge
out
xchg
mov
call
imul
imul
cmp
aas
jp
push
sbb
in
xchg
push
push
dec
add
mov
out
xchg
rcr
dec
jbe
inc
jno
hlt
mov
cmp
cmc
repz
xchg
and
mov
fbld
mov
aam
push
inc
ja
mov
add
pop
iret
adc
pusha
xor
pusha
fcmovbe
jge
xor
test
jnp
loopne
push
test
cmc
outs
push
std
jmp
test
dec
xor
js
les
or
into
xor
cmp
or
push
add
push
dec
jae
sbb
push
adc
add
les
cwde
movs
inc
mov
ret
pop
push
sbb
mov
mov
in
ror
sub
pop
mov
pop
jbe
jmp
out
pop
div
adc
cmp
pop
mul
add
dec
xor
push
scas
or
gs
ret
or
cli
lahf
inc
adc
imul
push
jmp
out
push
mov
adc
loope
push
pop
xor
cld
ret
mov
mov
fisubr
je
es
mov
jle
inc
pop
ret
outs
aaa
push
ret
pop
out
sub
lds
push
cmp
pop
mov
stos
(bad)
sub
(bad)
aaa
jmp
sbb
(bad)
mov
add
push
scas
adc
js
xor
outs
add
fsubr
call
pop
add
pop
out
(bad)
pushw
fld
mov
mov
xor
mov
aas
sti
ins
adc
loop
je
idiv
inc
inc
cmp
test
dec
jecxz
push
add
call
out
in
sahf
push
xlat
mov
cmp
inc
in
mov
add
mov
push
mov
xchg
cli
push
retf
jge
or
inc
pusha
imul
and
push
sti
test
push
adc
sbb
aam
push
push
call
test
cmp
and
aas
jmp
mov
sbb
dec
shl
xlat
mov
jbe
jp
jb
push
pop
arpl
div
adc
(bad)
push
mov
push
inc
xor
in
xchg
das
cld
jmp
rcl
or
fs
dec
std
in
pop
(bad)
pop
jae
ret
push
in
push
add
aaa
mov
outs
xor
ficomp
xor
jle
inc
jg
jno
fild
and
gs
xor
xlat
push
or
jb
std
inc
aas
push
aaa
dec
std
xchg
ins
inc
mov
add
dec
sbb
sbb
and
aam
(bad)
fidiv
in
fnstsw
aam
ret
dec
dec
mov
shl
call
rol
outs
mov
aas
dec
xlat
xchg
enter
sub
daa
inc
ret
push
add
inc
or
dec
add
dec
jne
sub
outs
add
or
and
(bad)
sub
fisttp
cld
mov
pop
jle
xlat
and
inc
call
adc
dec
jp
cmp
retf
pusha
jbe
or
pop
or
clc
mov
scas
cli
add
aas
loopne
mov
mov
mov
pop
jo
xor
ret
or
inc
cld
std
es
cmp
push
mov
dec
out
mov
cmp
in
push
adc
add
push
int
mov
mov
mov
xchg
out
mov
and
inc
add
inc
fsub
pop
push
ret
push
add
retf
sub
pop
add
add
or
pop
(bad)
scas
clc
data16
xor
mov
(bad)
out
rcl
or
jmp
fistp
sbb
xor
xchg
hlt
std
mov
pop
pop
gs
js
jb
inc
movs
add
lock
mov
jmp
ja
int
adc
test
js
adc
sub
movs
ins
xor
mov
add
dec
sub
ror
inc
add
inc
sub
xchg
add
sbb
je
fadd
mov
cmp
mov
inc
push
dec
push
cli
jmp
(bad)
fadd
inc
(bad)
dec
cmc
(bad)
push
sar
arpl
and
pop
pop
inc
aas
xor
add
addr16
je
xchg
push
outs
out
xlat
mov
dec
cli
fwait
in
out
into
jnp
jnp
add
outs
nop
adc
add
cli
fcomi
fwait
pop
xchg
and
ret
rol
add
and
xor
arpl
std
fadd
fild
push
ds
icebp
add
adc
(bad)
mov
jecxz
sub
ss
pop
mov
std
dec
enter
ficomp
cmp
xchg
jle
inc
data16
fisttp
mov
inc
cmp
adc
clc
mov
add
xchg
xchg
inc
pop
mov
imul
or
into
adc
clc
jnp
call
inc
inc
je
or
mov
or
mov
push
(bad)
push
stos
mov
mov
or
sbb
(bad)
repnz
movsx
stos
push
pop
ror
call
inc
scas
inc
sti
aas
(bad)
add
test
cmp
push
mov
test
add
cs
aas
mov
lea
adc
mov
in
xchg
in
clc
xchg
mov
loopne
out
fisub
out
jbe
mov
fs
ror
and
loopne
(bad)
ret
mov
add
(bad)
xchg
push
push
add
xchg
das
test
mov
(bad)
mul
stc
and
shr
push
xor
or
sti
pop
stos
out
dec
add
inc
out
dec
lahf
call
adc
test
xor
sbb
add
lock
in
cld
inc
fwait
mov
sub
sti
aam
sbb
enter
sbb
adc
push
or
adc
mov
inc
push
dec
out
cli
mov
inc
ret
idiv
sbb
arpl
jle
add
dec
adc
sahf
mov
test
xor
shr
push
pop
jo
cmps
(bad)
ins
cld
fs
sbb
jae
pop
push
mov
ret
js
daa
data16
jb
in
push
push
mov
dec
mov
lea
test
dec
jmp
arpl
test
push
sti
cmp
adc
cmps
ret
push
cld
pop
outs
push
push
jl
push
lods
mov
mov
xor
push
lahf
pop
inc
jg
outs
cmps
pop
xchg
ins
dec
sub
ss
dec
out
jl
mov
adc
inc
inc
or
je
mov
inc
sti
call
push
in
add
sbb
xchg
xor
pop
inc
jmp
inc
xchg
inc
mov
mov
mov
(bad)
xlat
fist
dec
popa
jne
daa
int3
mov
jae
add
cli
mov
xchg
gs
mov
inc
sub
mov
clc
das
push
ins
xor
adc
xchg
push
call
and
outs
pop
inc
inc
repnz
or
aad
xchg
ret
rcl
pop
(bad)
aaa
popa
adc
dec
fcmove
jmp
aad
mov
sub
jae
mov
xor
ret
out
loop
lahf
add
mov
cmc
xor
sbb
dec
xor
clc
inc
push
sub
and
cmp
dec
mov
jnp
fs
fadd
retf
push
(bad)
aas
int3
mov
add
push
pop
push
push
pop
mov
das
xchg
and
xlat
(bad)
sbb
pop
add
inc
ja
jle
add
or
jg
in
push
ret
nop
mov
(bad)
je
and
pop
sbb
mov
popa
sbb
enter
add
mov
jg
mov
add
ret
ror
test
out
mov
jl
jl
cld
lds
outs
and
push
mov
jb
jbe
inc
jmp
inc
jg
dec
dec
xor
and
(bad)
repnz
push
push
and
test
shr
inc
nop
or
mov
(bad)
mov
dec
sti
cmp
ficom
xor
mov
mov
hlt
push
xor
dec
test
fistp
dec
dec
das
sbb
aad
hlt
jg
jg
pop
ins
ret
outs
mov
inc
xlat
add
or
ret
fnsetpm(287
dec
mov
out
cmps
ficomp
inc
dec
dec
mov
mov
gs
sub
mov
test
jo
loop
fmul
add
pop
mov
fistp
sub
inc
cmp
aas
inc
push
je
push
pop
inc
inc
fisttp
ret
jg
popa
aas
je
addr16
jo
adc
pcmpgtb
inc
xchg
(bad)
outs
js
inc
mov
cld
shl
sub
push
cld
sbb
loopne
dec
dec
sub
out
je
mov
das
push
(bad)
lds
cmp
mov
mov
sbb
inc
lahf
dec
or
add
cmc
enter
push
jmp
jl
mov
(bad)
mov
push
loope
mov
and
and
sub
sub
mov
cld
nop
jecxz
jmp
or
add
xlat
imul
push
pop
adc
push
(bad)
test
mov
in
into
shr
ret
inc
xchg
adc
mov
ret
add
in
fs
jecxz
aam
adc
imul
das
gs
lods
sar
pop
or
cmp
jmp
or
or
add
pop
mov
popa
and
inc
push
inc
sti
inc
ror
je
out
pop
jno
clc
xchg
in
subps
(bad)
pop
ret
retf
sti
dec
dec
xor
xor
inc
mov
aad
xor
inc
push
add
dec
dec
cmps
cmp
cmc
xor
call
dec
inc
nop
push
outs
dec
dec
nop
test
add
and
add
call
mov
push
dec
(bad)
mov
sbb
jle
enter
pop
or
pusha
xchg
add
mov
in
mov
push
or
call
(bad)
js
dec
xor
movlps
mov
aad
shr
test
cmc
add
xor
inc
inc
out
arpl
addr16
push
sbb
push
addr16
and
in
or
(bad)
lods
xor
out
add
sti
or
mov
gs
xor
and
jae
bound
or
out
cld
neg
in
add
pop
cmp
or
int
int3
or
inc
jmp
sbb
add
mov
mov
jg
push
repnz
mov
push
fld
xchg
mov
mov
inc
and
inc
mov
or
push
jae
fwait
leave
mov
or
addr16
pop
cli
cmc
mov
pop
add
push
jg
int3
jbe
cs
loop
pop
retw
jg
push
mov
lock
ins
(bad)
or
out
adc
ins
jmp
out
sbb
dec
scas
not
xchg
xchg
std
jg
push
fdiv
cwde
cli
lahf
inc
or
js
aaa
jg
push
dec
dec
or
(bad)
jmp
cld
jmp
ret
outs
loopne
ret
pushf
sub
int
xchg
sbb
dec
jo
inc
dec
cmp
jg
ins
push
cmp
gs
xlat
(bad)
out
push
lock
mov
inc
pop
(bad)
fistp
xor
mov
sbb
sbb
aad
pop
xchg
sbb
adc
cmps
icebp
cmp
push
push
and
add
push
pop
call
push
mov
packsswb
ret
cld
fidivr
pop
ror
loopne
xlat
call
popa
push
inc
jmp
dec
jmp
dec
outs
or
ds
lahf
sub
mov
pop
mov
push
fdivp
xor
mov
dec
mul
mov
adc
add
add
fwait
xchg
mov
cli
jbe
ja
fld
pusha
push
dec
(bad)
fimul
mov
mov
arpl
ds
sub
es
out
mov
inc
out
clc
inc
rol
into
or
push
repnz
xor
xchg
mov
(bad)
jae
fs
add
cmp
inc
loope
xor
jne
add
pop
(bad)
out
repz
std
pop
popa
shl
add
inc
loop
test
mov
loope
cmp
sti
mov
add
je
(bad)
outs
fadd
or
add
mov
jae
pop
test
or
rcl
je
or
call
(bad)
xor
xchg
jae
ret
jl
pop
(bad)
scas
adc
test
mov
pushf
je
test
lock
add
bound
mov
jg
in
cmp
pop
push
(bad)
cld
jg
jne
inc
fcmovu
or
push
sti
stos
xchg
(bad)
(bad)
xchg
loope
dec
out
cs
or
jge
sub
fdivrp
mov
jmp
call
(bad)
cli
push
shr
loop
xor
mov
sub
call
ret
cmc
(bad)
dec
xchg
jnp
add
(bad)
mov
imul
sub
je
int3
or
cld
or
aam
or
mul
pop
mov
or
fistp
jle
ret
data16
cmps
test
mov
jbe
(bad)
and
aam
mov
add
adc
mov
nop
les
add
jmp
out
add
les
repnz
jne
pop
jbe
push
lds
push
stc
xchg
or
push
and
pop
mov
mov
test
fadd
push
out
clc
inc
sar
adc
or
lahf
mov
pop
enter
or
cmp
icebp
aas
cwde
cmps
ss
pop
xor
test
test
jmp
or
xchg
inc
and
aam
inc
mov
loopne
out
dec
inc
div
inc
add
pop
aas
inc
sbb
mov
ret
cs
sub
loopne
xlat
mov
and
add
inc
movs
test
add
pop
outs
(bad)
(bad)
stc
add
mov
(bad)
mov
xchg
in
add
push
(bad)
cli
and
data16
shr
push
pop
jae
adc
adc
push
call
(bad)
sub
pop
inc
push
or
sbb
mov
outs
pushf
add
inc
mov
imul
ja
shr
je
inc
inc
jbe
ret
mov
lds
addr16
outs
ror
lds
bnd
mov
call
(bad)
mov
clc
pop
xlat
ins
call
div
mov
sub
out
xor
lods
or
inc
mov
dec
adc
mov
pop
mov
push
imul
add
pop
pusha
stos
movs
push
sub
sub
mov
push
adc
sub
jnp
mov
adc
and
or
dec
push
pop
and
pop
out
xor
into
adc
pusha
mov
out
call
sbb
out
(bad)
movs
add
jg
or
rol
mov
push
mov
push
aam
push
xchg
mul
xor
sbb
ins
xor
sti
fistp
bsf
fdivr
or
repz
or
mov
(bad)
lahf
jb
push
xchg
push
je
call
je
jnp
fcomp
cmp
add
das
inc
sar
or
pop
mov
call
xor
cmpps
imul
push
out
push
sub
call
test
dec
cmp
cmc
pop
in
ja
inc
add
and
out
pop
add
mov
xchg
fstp
xor
add
pop
(bad)
pop
fnsave
inc
fmul
pop
gs
mov
pop
inc
or
fsub
(bad)
pop
add
scas
mov
test
sub
mov
mov
(bad)
mov
add
jb
push
out
stos
jnp
inc
pop
add
jmp
adc
add
sbb
std
jmp
cli
push
(bad)
ja
ret
and
jmp
xchg
push
jnp
push
lods
out
cli
add
rol
bound
aaa
adc
je
adc
dec
(bad)
into
dec
push
lahf
les
mov
push
pop
mov
ins
ins
dec
call
add
aam
mov
mov
xor
mov
sub
pop
jb
mov
mov
inc
sub
pop
shr
imul
cli
(bad)
in
dec
cmps
aad
in
mov
pop
test
ss
jae
inc
(bad)
mov
fst
pop
push
pop
outs
fiadd
xlat
mov
add
jmp
dec
xor
push
mov
dec
test
rcr
and
or
mov
adc
add
fs
pop
call
and
mov
dec
jo
adc
movs
mov
mov
mov
mov
push
jbe
add
push
ds
outs
loopne
lock
mov
jno
ja
int
pop
mov
ja
pop
xlat
push
arpl
dec
mov
(bad)
bound
or
aaa
inc
jae
adc
out
aaa
or
in
cld
mov
das
mov
fsubr
call
clc
pop
je
leave
mov
mov
sbb
imul
mov
in
aas
mov
and
je
add
loopne
jl
fadd
imul
cmc
leave
add
scas
aas
inc
repnz
(bad)
(bad)
out
jmp
mov
xchg
adc
test
sub
cwde
jmp
push
or
into
inc
ror
call
adc
mov
fwait
jmp
jmp
mov
sti
aas
adc
test
addr16
ins
sbb
add
mov
jp
in
ror
mov
repnz
lahf
adc
jl
lds
and
mov
aaa
dec
pop
in
mov
inc
mov
cmp
jle
push
push
repnz
adc
push
dec
stc
dec
inc
std
retf
inc
dec
pusha
adc
jecxz
push
push
out
xchg
pop
and
push
adc
push
retf
imul
jae
xor
out
add
push
sti
pop
sar
pop
push
or
push
imul
movs
int3
ins
sub
inc
pop
mov
dec
push
sub
loop
gs
pop
fadd
rcl
push
fnstcw
gs
add
aam
(bad)
ins
xchg
push
(bad)
call
mov
mov
or
xchg
jg
aas
or
mov
lahf
pushaw
or
xchg
arpl
cmps
or
mov
xor
xchg
add
mov
adc
pop
ja
(bad)
pop
jmp
xchg
clc
mov
adc
jmp
pop
out
or
pop
pusha
pop
clc
pop
pop
lods
pop
scas
into
mov
dec
je
je
ret
cwde
mov
jbe
add
add
arpl
push
jb
inc
test
dec
stos
cmc
aaa
or
imul
mov
push
dec
lock
sti
sbb
xchg
test
loope
cld
cmps
inc
ret
inc
and
jmp
inc
jg
cmc
pop
push
ror
dec
mov
push
pop
ins
jns
inc
mov
std
(bad)
(bad)
pop
push
mov
fcomp
jmp
dec
mov
sbb
push
mov
push
xor
pop
call
push
(bad)
sti
cmc
pop
inc
jle
inc
cmovg
call
ds
sub
or
adc
push
aam
xchg
sti
cmp
aaa
test
add
sti
xlat
cmc
arpl
ins
lea
xrelease
inc
add
shl
sub
xchg
sar
pop
and
add
aas
xor
pop
gs
pop
jno
mov
out
(bad)
fucomi
or
dec
sar
push
inc
popa
or
out
or
mov
bound
jo
(bad)
push
inc
(bad)
ja
mov
mov
fst
mov
or
mov
mov
sub
lock
outs
sub
dec
xor
inc
adc
mov
hlt
add
push
jne
mov
mov
sub
sbb
popa
stos
rcl
fidiv
inc
aaa
dec
(bad)
scas
pop
push
mov
lods
inc
ret
js
sbb
fsubr
imul
stos
pop
jge
dec
push
retf
mov
inc
aas
aas
mov
call
inc
sbb
pop
cld
ja
ss
shr
push
je
pop
mov
outs
inc
add
or
in
(bad)
dec
push
mov
push
xor
icebp
lods
out
push
js
es
jmp
mov
(bad)
cmp
cmp
jae
lahf
and
aad
cdq
cmp
mov
out
out
lahf
xor
mov
pusha
mov
add
push
popf
bound
cli
mov
push
cmps
mov
sbb
ficom
jmp
inc
mov
pop
add
pop
test
push
mov
adc
dec
pusha
int3
fisttp
(bad)
and
jns
jae
inc
call
loope
arpl
test
addr16
inc
inc
jp
fs
mov
or
cmp
and
scas
pop
cmps
pop
add
call
push
inc
inc
fadd
mov
and
cli
mov
out
add
pop
or
shl
fdiv
lds
dec
pop
add
fsubr
pop
and
mov
push
pop
xchg
pop
jmp
push
je
test
call
retf
outs
push
mov
dec
aas
jge
pop
or
sahf
push
arpl
dec
push
add
ins
mov
sbb
push
ret
in
sar
sub
icebp
inc
imul
aas
ret
pop
xor
and
and
out
cmp
loope
cs
sbb
cmps
fdiv
cmp
jl
inc
sti
fdivr
mov
jb
add
add
xchg
jae
add
jg
fwait
pop
cld
call
cmp
ins
add
ror
rcl
xchg
lock
js
mov
mov
fdiv
imul
ret
add
aas
mov
das
push
pop
rcl
xor
sub
push
fdiv
out
into
jge
dec
or
pop
sbb
mov
mov
(bad)
cli
aas
jno
mov
pop
jp
inc
mov
push
mov
xor
call
inc
mov
mov
jnp
jae
jmp
pop
jbe
inc
cmp
lahf
outs
inc
int
inc
bound
stos
out
sbb
add
inc
and
xor
xchg
cmp
hlt
call
push
rcr
pop
and
call
push
adc
dec
lds
test
lock
call
mov
daa
test
outs
shr
pop
(bad)
std
pop
lock
mov
add
neg
inc
jl
fidiv
scas
pop
add
add
jmp
mov
inc
mov
or
adc
sub
cmp
mov
sbb
xor
stc
leave
in
jbe
mov
mov
les
push
push
mov
cmc
es
pop
mov
push
push
das
mov
push
call
and
inc
mov
hlt
pop
loop
je
jge
(bad)
not
out
mov
outs
push
push
mov
xchg
lds
pop
jb
push
adc
add
dec
cmp
es
add
mov
pop
xchg
mov
pop
shl
out
pop
or
dec
mul
loop
mov
push
fldenv
push
pop
(bad)
mov
mov
jae
cmc
outs
pusha
mov
stos
jg
sahf
or
(bad)
sbb
pop
shl
or
jge
inc
fwait
ins
ret
ret
push
rol
out
jno
pop
movs
mov
xor
push
xchg
out
cmp
adc
std
mov
imul
je
inc
inc
adc
add
pop
inc
outs
inc
cmps
fs
and
clc
in
or
mov
add
ret
call
or
test
add
imul
push
ret
and
mov
inc
jae
pop
(bad)
test
arpl
mov
repz
xlat
and
int
out
sbb
inc
adc
mov
fimul
cmp
push
inc
iret
out
rcl
(bad)
lahf
test
push
std
push
ss
and
mov
mov
cmc
push
les
out
sub
push
les
stc
rcr
pop
aad
pop
aad
mov
arpl
add
mov
push
jae
xchg
mov
jecxz
mov
xlat
sar
or
sub
sbb
int3
fs
jo
test
adc
mov
stos
popa
nop
jbe
retf
ins
mov
adc
fs
xlat
inc
int3
mov
es
fsubr
pop
(bad)
sti
pop
jecxz
inc
repz
(bad)
leave
mov
jbe
or
(bad)
fimul
add
pusha
dec
mov
jle
mov
jg
out
dec
out
sub
and
icebp
push
inc
aam
sahf
inc
inc
out
push
mov
and
outs
jg
sub
fcos
xchg
cli
movs
dec
aas
xlat
jg
nop
push
mov
std
hlt
movs
(bad)
jmp
inc
into
jb
fild
div
test
jmp
or
inc
ins
pop
je
stc
js
fisubr
gs
cs
inc
dec
scas
inc
inc
std
movs
aam
adc
jae
out
rol
out
aaa
pop
adc
pop
pop
ds
jmp
push
and
pop
jg
clc
stos
pop
fcmovb
add
hlt
xor
jp
lds
mov
inc
mov
jle
mov
loop
push
adc
pop
out
add
inc
or
ja
inc
dec
push
push
retf
adc
(bad)
(bad)
sti
imul
push
pop
(bad)
mov
enter
std
mov
and
pop
outs
(bad)
orps
pushf
(bad)
fdiv
push
ficom
mov
aad
aad
xchg
xchg
into
cld
out
cmp
in
xlat
(bad)
fwait
(bad)
inc
out
rol
fs
push
cmp
ret
jae
pop
sub
push
inc
push
std
xor
inc
push
shl
inc
add
mov
xor
push
enter
mov
push
add
js
mov
fdiv
call
(bad)
pop
sbb
mov
xlat
je
out
call
mov
xor
test
or
inc
xor
pop
xor
lock
bound
sti
xor
(bad)
mov
pop
fisubr
pop
xor
aas
vsubsd
out
out
jmp
push
hlt
cmp
dec
(bad)
je
sub
pop
push
add
pop
push
or
in
xchg
pop
jmp
mov
pusha
xor
push
bound
or
or
dec
jg
call
mov
add
scas
dec
or
aaa
mov
mov
pop
add
mov
pop
lock
push
mov
and
mov
aam
pop
mul
jmp
ss
add
sti
add
je
fwait
int3
cli
lods
mov
call
sbb
adc
pusha
outs
cmps
hlt
aas
push
mov
sti
fistp
rol
imul
aas
rol
mov
xchg
das
clc
inc
and
(bad)
xor
je
rol
frndint
xor
adc
add
test
inc
sub
addr16
fisubr
pop
pop
push
fwait
(bad)
shr
shl
pop
fcomi
bound
mov
mov
jge
add
stc
jo
int3
cmp
fsubrp
jp
ret
lods
and
sub
jo
pop
jle
int3
jae
mov
enter
(bad)
fucomi
mov
adc
pop
pop
sbb
inc
in
lea
xor
jae
pop
pop
adc
in
xor
cmp
pop
or
fadd
add
mov
jnp
adc
call
add
sub
sar
iret
mov
bound
icebp
mov
or
xor
(bad)
push
add
cwde
mov
dec
xchg
or
or
movs
pop
jecxz
pop
mov
test
or
push
cwde
nop
pop
xor
test
add
hlt
add
or
lods
push
sti
mov
out
call
pop
ss
xlat
dec
bound
(bad)
aas
js
mov
ins
inc
jl
add
aad
mov
inc
aas
jg
xor
mov
outs
les
cmc
mov
inc
ret
fwait
fwait
mov
add
rcr
dec
adc
lock
jbe
push
cmp
cmc
popf
je
and
or
jmp
enter
mov
out
mov
jae
sbb
jle
add
inc
add
sar
call
xchg
movs
xor
pushf
lds
pusha
out
add
cs
out
xchg
sbb
test
mov
add
(bad)
frstor
and
jmp
push
movs
pop
ret
push
imul
imul
inc
adc
scas
and
(bad)
(bad)
push
or
inc
push
sti
push
pop
test
loop
sti
cli
mov
lods
mov
sbb
cli
repnz
and
xor
sar
inc
jmp
add
push
inc
out
mov
mov
les
xor
add
push
out
xor
jl
cld
push
adc
jmp
cmc
inc
mov
jno
out
push
and
cmps
aam
jne
pop
add
imul
pop
ret
add
(bad)
scas
or
mov
pop
pop
aam
mov
pop
pop
ret
mov
rol
add
xchg
add
xor
jb
dec
(bad)
(bad)
fst
shl
ins
mov
cmc
pop
jg
scas
push
stos
ja
out
scas
into
jbe
pop
add
push
sbb
in
lock
jg
jle
out
jns
js
(bad)
out
and
inc
adc
add
or
neg
jmp
mov
jne
iret
(bad)
call
sub
shl
mov
adc
push
call
add
mov
push
xor
aam
punpckhbw
add
retf
push
adc
inc
and
cmp
shl
in
int3
enter
cmc
inc
mov
repz
mov
ins
test
jo
adc
mov
fcomp
add
out
pop
push
loop
fadd
mov
outs
jo
ror
push
xlat
syscall
jae
je
add
imul
ins
sti
packuswb
arpl
call
xor
in
inc
mov
jmp
mov
dec
jbe
xor
arpl
mov
pop
xor
and
je
aad
push
xor
inc
pop
stc
aas
or
test
mov
mov
jne
pushf
cmp
ss
adc
push
xlat
call
jg
pop
inc
push
fwait
inc
xor
or
je
lods
int
add
sbb
mov
jmp
lods
xchg
pop
out
movs
jo
inc
inc
jge
data16
mov
cmp
sti
sti
xchg
out
add
xchg
push
pop
inc
pop
(bad)
test
mov
pop
push
div
inc
jmp
imul
push
out
in
imul
pop
fiadd
test
fidiv
aad
or
push
or
and
das
(bad)
mov
jmp
inc
out
outs
sbb
pop
clc
ret
pop
rol
adc
mov
(bad)
out
add
xchg
jo
push
dec
pop
ret
je
cld
idiv
jmp
pusha
lahf
sbb
jno
inc
mov
adc
sub
sub
call
inc
dec
repnz
mov
test
add
std
das
jg
aam
nop
mov
inc
inc
jae
sbb
es
sub
push
pop
sti
pop
adc
add
sub
adc
loopne
adc
add
push
cdq
and
mov
xor
(bad)
pop
or
dec
push
xchg
std
adc
(bad)
in
mov
movs
test
mov
cmps
or
inc
push
and
sbb
or
shl
ret
imul
std
call
jmp
das
add
sbb
movs
pop
add
ret
(bad)
mov
inc
mov
cld
pop
mov
jmp
imul
loope
add
lahf
inc
inc
stc
dec
jbe
cli
mov
cmps
add
inc
(bad)
stos
mov
cmps
push
popf
dec
cld
mov
push
mov
fadd
ror
xor
inc
pop
inc
pop
pop
cmp
mov
cmp
push
aad
test
movs
loope
push
add
addr16
ins
enter
adc
das
sar
mov
int3
fld
push
fs
neg
rol
push
jle
setp
pop
adc
mov
nop
or
push
pop
data16
addr16
mov
pop
push
or
inc
(bad)
mov
and
push
push
jo
shl
mov
dec
test
sar
inc
sbb
pop
add
repz
cmps
inc
sar
sti
lahf
fmul
jecxz
popa
add
adc
and
xor
mov
push
cmp
(bad)
aaa
jmp
cmp
mov
ins
inc
push
(bad)
cwde
std
loopne
gs
sti
push
jmp
data16
test
sub
cmps
inc
aaa
das
je
adc
out
push
aas
push
mov
or
hlt
loop
add
push
fistp
pusha
push
mov
add
sub
pushf
inc
aam
and
arpl
inc
push
xchg
pop
stc
adc
and
jnp
add
dec
xchg
xchg
add
gs
xchg
add
mov
inc
inc
cmp
mov
ficomp
add
mov
inc
jl
shr
and
test
or
push
cmps
fild
mov
ret
pop
in
push
jo
or
je
push
cli
dec
lods
cmp
je
cwde
sti
push
and
sub
pop
sbb
pop
jecxz
push
inc
inc
cmove
xor
jge
stos
mov
or
gs
outs
arpl
enter
mov
dec
sub
xchg
test
sbb
aaa
jmp
(bad)
push
rol
packsswb
das
dec
mov
add
std
outs
sbb
add
or
aam
jg
out
repz
(bad)
mov
lahf
jg
jmp
pop
(bad)
out
pop
jmp
xor
mov
jb
adc
cmp
dec
pop
push
adc
(bad)
out
pop
and
add
mov
movs
push
loope
cs
movs
js
jae
mov
adc
and
es
adc
push
mov
aad
cmps
mov
pop
sti
xor
fisttp
jp
jl
inc
in
inc
dec
dec
icebp
popf
add
mov
cli
add
data16
adc
jne
call
jbe
stc
mov
jae
retf
xchg
lods
sar
hlt
call
retf
js
jmp
adc
fisubr
lods
mov
push
pop
mov
test
push
jae
repz
inc
mov
adc
call
mov
jae
lea
inc
inc
sti
mov
or
das
inc
mov
cmps
inc
fdiv
aas
std
jo
sub
bound
xor
adc
jne
mov
fiadd
add
jae
aad
movs
add
dec
adc
movs
cmp
add
xlat
(bad)
push
rcl
(bad)
fidivr
xchg
les
bound
mov
sub
sub
and
icebp
test
icebp
int
popf
fimul
inc
inc
test
or
retf
xchg
ret
(bad)
pop
ror
add
(bad)
fild
inc
push
dec
test
(bad)
ja
jb
in
out
cmp
(bad)
sub
call
test
lock
mov
dec
movs
ja
mov
pop
mov
push
push
jmp
div
in
cld
sbb
or
(bad)
jp
inc
mov
dec
add
and
outs
mov
scas
pop
sbb
mov
and
dec
ret
mov
mov
mov
inc
xchg
adc
xchg
inc
mov
dec
test
mov
add
adc
retf
sbb
clc
inc
xchg
inc
or
inc
jmp
(bad)
ins
aas
dec
inc
xor
out
cmp
(bad)
dec
adc
pop
fs
cmp
dec
or
pop
sub
call
adc
pop
push
cmp
mov
mov
pop
ret
test
shr
cmp
ins
push
retf
push
sub
je
lock
popa
aaa
push
and
retf
jae
mov
or
cli
mov
in
mov
xor
inc
jb
mov
inc
int
add
mov
inc
push
aas
cli
mov
xor
jp
add
clc
mov
mov
and
sbb
or
repnz
repz
xor
scas
and
mov
dec
inc
stos
mov
inc
aad
and
std
push
inc
add
fsubr
adc
push
adc
add
mov
shr
pop
dec
shr
add
je
push
add
clc
movs
push
scas
mov
pop
mov
clc
int
and
std
stc
pop
xchg
addr16
outs
dec
adc
push
cs
mov
ss
in
repz
sub
or
jle
(bad)
cmc
out
pop
and
mov
sar
rcl
(bad)
mov
inc
pop
push
das
(bad)
push
or
adc
das
xor
add
aas
dec
(bad)
fs
jbe
push
push
push
ds
push
add
call
fwait
add
(bad)
add
(bad)
push
test
cmp
movs
cmp
mov
mov
mul
rol
push
sbb
push
add
pop
dec
mov
pop
jbe
mov
sub
add
xor
sub
enter
mov
rcr
xchg
inc
scas
mul
adc
push
mov
out
push
mov
dec
jge
xchg
out
mov
into
pop
add
jle
pop
unpcklps
push
mov
jg
test
dec
push
push
add
ret
mov
fadd
sbb
repnz
(bad)
dec
das
xor
inc
jo
test
add
std
int
test
add
adc
pop
inc
ja
std
inc
mov
test
add
cmp
aaa
mov
xor
call
pop
push
sbb
std
std
pmaxsw
jb
(bad)
jmp
push
bound
cdq
fsubr
mov
test
les
push
push
xlat
add
push
stc
xchg
stc
mov
or
or
and
inc
fs
ja
xor
or
lds
ins
push
push
out
push
mov
jp
inc
data16
push
cmps
push
loopne
mov
int3
push
or
and
jmp
call
out
mov
add
popf
(bad)
fsubr
outs
and
aas
push
sub
fwait
push
lods
add
xchg
mov
jge
jl
jb
lock
sub
lods
add
sub
leave
mov
repnz
call
dec
pop
mov
mov
(bad)
mul
ins
cld
sar
inc
jbe
out
rol
jno
outs
mov
and
in
pop
(bad)
(bad)
std
inc
and
addr16
pop
jmp
shr
add
shl
and
or
push
inc
push
fs
xor
inc
out
sbb
lods
jne
lea
and
in
jbe
push
cli
retf
bound
lock
sti
dec
pop
push
add
retf
bound
daa
lock
mov
push
dec
fdiv
jmp
push
jae
mov
fld
inc
loope
(bad)
sti
in
add
or
jge
pop
std
mov
test
cmps
sub
add
adc
lahf
mov
sbb
test
pop
repz
xor
mov
dec
icebp
sbb
pop
add
jae
outs
test
push
jg
or
pop
mov
std
ja
sub
push
arpl
jbe
and
cwde
push
push
inc
fwait
and
mov
lock
cli
je
fiadd
push
aas
push
aas
push
scas
and
ret
js
push
adc
ret
jl
ins
stos
maskmovq
test
xor
and
push
(bad)
inc
jg
dec
das
dec
push
or
add
push
lods
pop
push
xor
add
xor
add
dec
fmul
push
or
movs
jmp
inc
ins
inc
(bad)
mov
popa
sar
inc
cmp
imul
cli
cwde
mov
push
call
jmp
enter
adc
push
clc
mov
cmovbe
sub
and
and
arpl
inc
pop
lds
mov
mov
jnp
mov
push
into
(bad)
inc
ror
aad
ret
retf
xchg
dec
std
mov
sub
repz
adc
mov
inc
xchg
pop
jl
call
mov
push
xlat
repz
aas
add
xor
add
inc
sbb
cli
das
jmp
or
xor
ret
cmp
out
sub
aas
cli
inc
loop
xlat
add
adc
jae
add
push
daa
pusha
sbb
pushf
jg
cld
dec
sar
jg
out
cld
xor
aad
mov
adc
add
xchg
mov
mov
pusha
fsubr
cmp
pop
std
mov
lds
mov
adc
mov
and
or
imul
(bad)
push
out
or
cld
mov
rcl
push
xchg
clc
div
push
test
inc
jge
retf
mov
and
std
jl
pop
ret
call
adc
int3
pslld
pop
mov
add
lods
int
mov
inc
mov
push
ins
xchg
push
jl
push
push
push
dec
inc
or
addr16
dec
mov
(bad)
inc
sub
jmp
aad
push
cld
mov
cld
dec
dec
jae
lds
call
or
ror
inc
repz
or
mov
es
sub
call
cli
inc
or
cwde
jae
sti
jg
or
cmp
push
sbb
dec
cld
aam
push
lds
add
(bad)
pop
stos
or
dec
sar
imul
mov
in
adc
pop
xor
sbb
xor
jp
inc
push
mul
cmps
add
xor
stos
fbstp
inc
int3
sub
das
adc
jl
fld
mov
mov
aas
jmp
mov
std
nop
cmp
or
pop
(bad)
clc
arpl
cli
xchg
adc
sbb
dec
xor
repz
sbb
inc
out
es
inc
pop
pop
sti
jmp
add
add
sub
test
inc
push
adc
push
(bad)
js
add
mov
mov
mov
cs
sub
xlat
(bad)
fld
add
push
add
add
imul
cmc
repz
arpl
lea
xlat
(bad)
jg
call
(bad)
pop
dec
adc
jb
ja
and
push
pop
pop
mov
inc
(bad)
xor
pop
inc
pop
out
sti
outs
mov
jl
push
push
push
push
setb
inc
lods
mov
inc
mov
test
test
jo
adc
idiv
ret
mov
or
jmp
aam
mov
xchg
inc
adc
and
cmps
clc
dec
xchg
mov
adc
add
pop
out
add
add
add
inc
pop
or
pop
cdq
jmp
(bad)
pop
ja
pop
cmp
adc
push
icebp
and
call
and
arpl
dec
inc
call
jb
sub
adc
sbb
fisttp
dec
push
add
add
sbb
pop
mov
push
inc
or
movs
adc
xor
pusha
dec
add
jg
pop
jmp
mov
push
out
inc
sub
mov
sbb
mov
mov
out
iret
mov
sbb
dec
xchg
mov
das
fiadd
adc
push
mov
adc
jecxz
pop
dec
div
inc
or
imul
cld
outs
cli
outs
clc
pop
add
outs
inc
mul
xor
nop
dec
outs
pop
cld
or
or
and
(bad)
xchg
xchg
or
bound
push
inc
movs
das
add
js
neg
sti
inc
push
or
pop
xor
jae
stos
cmc
sbb
outs
and
cmp
pop
inc
ret
cmp
sub
ss
cdq
sub
add
xor
cmp
pop
add
or
add
(bad)
mov
std
inc
jae
or
repnz
outs
ficom
das
sar
jns
adc
int3
pop
xor
fs
ret
popa
inc
dec
leave
jo
pop
aam
in
loopne
inc
je
iret
jmp
mov
arpl
adc
jne
out
ret
aas
cmovp
ins
mov
jnp
fs
and
cmp
lahf
loop
inc
add
inc
aaa
mov
fnop
out
mov
inc
(bad)
out
mov
loope
ret
mov
into
inc
lds
out
dec
out
xchg
push
inc
out
mov
and
test
jle
call
add
push
and
mov
jmp
add
jg
mov
jmp
std
mov
mov
add
cld
jno
scas
mov
push
cmc
or
mov
cli
adc
and
mov
cmp
jl
push
add
bound
cld
rcl
frstor
cmp
enter
mov
call
out
sar
mov
mov
ret
arpl
arpl
pop
mov
mov
push
lock
mov
fcmovne
mov
inc
mov
scas
mov
or
or
mov
inc
enter
pop
rol
push
mov
cmp
push
out
inc
data16
cmps
dec
add
outs
jnp
sub
push
std
sbb
sub
jns
or
jle
adc
push
cmp
xchg
(bad)
out
xchg
mul
add
inc
push
inc
pop
or
add
data16
ins
xchg
dec
push
add
pop
cmp
mov
pop
shl
lds
push
js
lods
mov
mov
xor
movs
(bad)
mov
mov
mov
mov
pop
in
dec
ret
and
clc
or
xor
mov
lock
jbe
sbb
or
pop
cs
inc
add
and
add
je
xor
jmp
ins
xor
jno
test
mov
mov
or
pop
push
mov
xor
inc
mov
add
je
sub
jns
jg
repnz
sub
push
test
or
sti
add
fs
or
mov
inc
adc
je
loop
mov
dec
pop
mov
repnz
xlat
cwde
push
pusha
add
lds
out
and
call
and
adc
mov
sbb
jns
pop
pop
sti
pop
cmps
pop
add
pop
idiv
xor
push
cmp
aas
push
sti
jg
test
ret
and
pop
sub
cmp
xor
test
xlat
add
inc
adc
jge
jg
inc
cmps
inc
std
sbb
adc
mov
nop
loop
inc
mov
dec
pop
icebp
scas
outs
pop
inc
push
cmp
cs
pop
push
jae
dec
mov
xchg
mov
lock
sti
pop
jae
imul
out
test
sbb
mov
inc
xor
pusha
fsubr
sub
and
in
fimul
mov
inc
adc
ss
mov
jle
je
adc
icebp
inc
inc
gs
aas
nop
arpl
mov
dec
xor
mov
addr16
out
mov
clc
hlt
ins
add
mov
(bad)
mov
jg
lahf
pop
sub
or
sub
push
jg
cwde
sbb
inc
dec
ins
lods
cmp
mov
lods
das
jp
out
jae
adc
mov
and
jbe
out
jae
dec
loopne
mov
(bad)
fimul
cwde
loope
mov
clc
(bad)
aas
pop
(bad)
xor
jmp
mov
add
pop
pop
dec
lds
std
and
adc
mov
clc
pop
mov
ret
inc
adc
test
xor
ins
push
int3
rcr
add
inc
inc
jnp
or
pop
clc
cli
fs
stc
popa
pop
add
pop
(bad)
outs
in
mov
push
pop
jae
je
cmp
(bad)
xor
ins
jp
add
not
jno
pop
mov
and
pop
cld
ds
call
ret
call
loop
gs
movs
outs
pop
stos
(bad)
jp
push
hlt
div
pop
cmp
(bad)
xlat
sar
outs
test
mov
add
push
or
pop
pop
or
mov
jnp
(bad)
mov
push
xchg
inc
cmp
fimul
dec
add
xor
ins
sar
lds
inc
sti
in
icebp
shl
jb
aaa
pop
jmp
cmp
ret
add
jle
test
jae
xchg
fcmovb
add
pop
and
in
add
add
mov
and
sbb
push
in
pushf
and
aas
jno
inc
adc
pop
test
add
vcomisd
xlat
and
pusha
pop
addr16
inc
movs
inc
ret
sbb
cli
cmp
call
push
ret
stos
mov
fwait
or
and
add
fsub
mov
or
bound
add
inc
or
or
repz
fdiv
sbb
mov
inc
push
(bad)
push
sub
fbstp
cmp
and
jmp
jae
xchg
lods
jmp
mov
add
stos
xchg
jno
jo
jae
push
pop
or
push
lds
pshufw
fist
int3
fwait
ret
dec
mov
sub
pushf
pop
pop
test
dec
sbb
pop
es
adc
push
add
pop
clc
xchg
push
jae
dec
push
(bad)
add
pop
sub
or
fbld
imul
sub
sbb
(bad)
jmp
leave
aas
xor
add
cmp
gs
inc
pop
dec
rcr
aas
int3
pop
mov
nop
(bad)
movsx
push
xlat
cmp
mov
push
inc
fild
scas
sahf
mov
add
test
pop
test
mov
stc
pop
ja
sti
inc
call
mov
daa
pop
xchg
adc
aam
(bad)
fbld
in
or
pop
jl
je
sti
bound
movs
xor
inc
jno
xor
sbb
cmp
je
pop
ret
adc
push
shl
cmp
pusha
jbe
xchg
inc
or
cwde
(bad)
sti
pop
pop
not
dec
xor
cmovl
call
xor
cmp
push
jbe
or
and
and
mov
or
jno
ins
shr
stos
pop
push
hlt
std
or
nop
pop
jl
rcl
popa
push
call
imul
enter
mov
dec
(bad)
adc
or
jae
add
and
xchg
dec
sahf
inc
mov
jle
dec
push
mov
adc
mov
dec
mov
cdq
ret
pushf
push
fistp
sub
push
inc
bound
pop
movs
push
sub
push
push
push
push
jl
xor
icebp
jl
adc
in
sti
ret
cmp
sahf
sahf
iret
xor
pop
xor
minps
mov
icebp
mov
inc
or
pop
push
or
or
fwait
rcl
jno
mov
push
icebp
add
mov
jbe
jmp
push
cmp
push
imul
push
outs
mov
cmc
jmp
or
shl
sti
cli
or
aad
mov
jmp
arpl
push
mov
retf
add
call
ja
push
lock
and
cmp
lods
mov
add
fs
sti
sbb
retf
(bad)
(bad)
call
add
inc
ret
mov
ss
cwde
pop
dec
add
jo
mov
push
aam
push
call
jl
retf
push
inc
pop
mov
mov
sbb
cmp
outs
inc
call
imul
add
add
out
xlat
push
mov
push
test
lahf
clc
ds
xchg
ss
das
(bad)
cmp
(bad)
movs
push
gs
retf
sub
add
pusha
and
jle
jae
test
sub
cs
shl
loopne
sub
pop
gs
in
fild
shl
push
and
aaa
cld
outs
mul
inc
add
sub
mov
xor
mov
sar
xlat
mov
mov
push
inc
and
inc
cmp
adc
pop
movs
cwde
or
repz
sub
loopne
dec
dec
sbb
popa
or
add
xchg
cmp
cwde
or
retf
cmc
sub
jmp
aas
or
(bad)
rcr
dec
mov
(bad)
(bad)
jmp
cdq
inc
push
cmp
mov
test
jae
out
inc
jnp
sbb
add
xchg
xchg
lods
fsubp
add
cmp
sti
fsubr
(bad)
add
scas
xor
inc
hlt
jae
mov
fnstsw
cmp
stc
add
or
lahf
sub
xor
mov
and
xor
pop
push
add
inc
dec
sti
adc
and
sub
fdiv
adc
aad
or
enter
pop
adc
das
pushf
push
aaa
dec
sub
push
add
cmp
fimul
mov
cli
add
out
je
or
pusha
and
jo
gs
in
adc
jbe
rol
dec
push
movs
inc
mov
mov
add
outs
cmps
aas
or
jb
push
cld
repnz
sbb
jb
clc
arpl
outs
add
mov
loop
dec
shl
jbe
adc
add
jno
mov
jnp
sub
xchg
dec
pop
fs
jecxz
jo
ja
xchg
push
adc
repz
and
fisubr
dec
sti
inc
(bad)
not
(bad)
ss
loopne
js
add
cmp
xlat
mov
dec
pop
ins
call
aad
inc
fs
(bad)
mov
popa
mov
push
mov
mov
outs
push
push
add
pop
dec
cld
pop
mov
rcl
push
fistp
mov
nop
mov
mov
retf
mov
frstor
out
repz
in
dec
pop
push
neg
dec
cmp
aas
xchg
jg
(bad)
fadd
add
jmp
outs
add
or
ret
xlat
fs
stc
ss
call
repz
push
mov
adc
jae
xorps
repnz
test
mov
jo
imul
or
lods
std
or
add
jl
scas
pop
cmps
aas
mov
sbb
inc
add
jb
push
adc
sub
adc
pop
mov
xchg
test
push
jae
es
pop
add
sbb
push
outs
xor
ret
popf
xor
call
inc
cli
rcl
or
xor
xchg
pop
mov
ins
mov
imul
mov
sar
inc
je
or
cld
mov
pop
pop
or
add
mov
xlat
bound
sbb
les
and
cmc
adc
push
push
sahf
adc
js
mov
pop
inc
mov
imul
jecxz
or
push
mov
and
jl
or
icebp
mov
xor
stos
add
lahf
mov
dec
ss
sub
sahf
push
aam
clc
das
aas
js
push
in
call
xchg
shl
push
pop
inc
or
sub
inc
pop
jecxz
sbb
sub
addr16
dec
jecxz
sub
aad
jp
mov
sti
xchg
pop
lock
repnz
jl
pop
and
scas
out
jmp
fiadd
sbb
and
cbw
xor
mov
(bad)
push
mov
jmp
mov
cli
ror
aaa
(bad)
ficom
mov
scas
inc
cmps
add
cdq
pusha
sub
rol
push
dec
add
lahf
mov
adc
icebp
(bad)
add
dec
add
movs
enter
ror
dec
cmps
cld
or
(bad)
push
add
lahf
lock
(bad)
jg
inc
or
and
jb
xchg
push
add
and
(bad)
cmps
xor
jb
rol
mov
sub
sti
je
dec
mov
inc
jmp
adc
sti
jmp
pop
add
mov
(bad)
pop
push
push
sub
mov
dec
sbb
retf
test
mov
xchg
add
mov
fcom
inc
or
push
adc
mov
pop
ins
sub
call
sbb
push
out
add
(bad)
push
push
dec
dec
(bad)
pop
add
push
mov
jae
inc
add
mov
mov
push
cmp
add
mov
lods
pop
mov
test
sar
inc
push
cdq
imul
and
imul
sti
(bad)
fist
clc
aad
inc
dec
mov
mov
lds
fdiv
adc
xchg
jmp
adc
out
sub
push
pop
sbb
pop
(bad)
lds
inc
imul
cli
(bad)
cli
lds
xchg
ins
jnp
xor
ret
sub
movs
outs
cs
(bad)
jmp
sar
stos
test
shr
aad
fincstp
inc
sar
je
cs
mov
sub
neg
(bad)
(bad)
push
pop
pop
aad
(bad)
femms
and
out
out
pop
mov
sbb
xchg
loope
mov
push
push
xchg
adc
mov
jmp
ret
and
dec
ret
jae
fistp
adc
push
cli
in
mov
icebp
mov
mov
mov
adc
pop
mov
adc
ds
dec
mov
cmp
sar
fcom
imul
inc
add
cli
push
call
inc
mov
or
sub
mov
aaa
shl
or
or
mul
inc
pusha
or
aas
push
mov
fbstp
enter
inc
sti
sub
jp
adc
call
pop
xchg
xchg
push
mov
je
je
mov
fiadd
inc
cli
dec
clc
xchg
sti
add
ret
mov
lock
lock
push
(bad)
fs
xlat
jae
test
sbb
add
push
mov
mov
mul
(bad)
imul
hlt
inc
dec
je
arpl
or
lahf
or
and
lock
inc
out
fs
or
jno
sahf
and
lock
jnp
and
dec
or
aad
popa
cmp
(bad)
push
jae
jo
push
rol
xchg
and
cmp
clc
add
add
fimul
push
add
push
adc
out
call
inc
(bad)
std
or
jmp
in
mov
cmc
xchg
fsub
inc
cmp
mov
sub
mov
or
jl
retf
mov
clc
xor
js
add
shr
xchg
call
movs
jmp
daa
mov
cld
mov
imul
inc
dec
mov
lock
mov
sar
ret
xchg
clc
fistp
arpl
add
in
pusha
push
xor
mov
mov
ret
push
adc
int3
add
push
loopne
imul
adc
dec
or
and
call
repz
add
scas
push
mov
jo
mov
push
test
cmp
add
mov
add
jb
ja
dec
and
pop
arpl
std
std
inc
fld
stos
inc
sbb
je
xchg
ret
or
xor
int3
movs
push
jmp
das
mov
add
ss
mov
add
inc
inc
mov
dec
es
pusha
call
fsin
fs
adc
jg
pop
inc
ret
in
add
adc
sbb
(bad)
retf
call
mov
arpl
pop
rol
mov
sub
cmp
imul
cmp
and
pop
inc
mov
inc
pop
sbb
add
add
sub
cld
or
pop
sub
jb
jl
rol
cli
mov
sbb
mov
aas
aas
push
jae
movs
cli
and
js
ins
pop
and
fsubr
add
pop
xor
and
fwait
lea
xor
jnp
sub
push
add
sti
cmps
fcmove
jo
ret
arpl
cmp
(bad)
(bad)
fisubr
repnz
xor
mov
mov
xlat
add
fdivr
pop
outs
mov
sbb
inc
xchg
mov
pushf
icebp
or
add
and
push
and
arpl
aam
ret
cld
out
out
xor
add
jmp
es
mov
inc
pop
rcl
out
or
not
inc
inc
mov
push
jmp
add
add
mov
call
fdiv
cs
jge
mov
inc
(bad)
and
and
xor
inc
nop
sar
dec
inc
(bad)
out
xchg
add
stc
xor
cmp
add
loop
add
and
cld
mov
adc
mov
xchg
inc
jle
call
dec
mov
push
push
xchg
push
sbb
inc
sti
inc
pop
and
or
clc
sbb
inc
mov
dec
inc
ins
sbb
fldcw
pop
xor
pop
and
push
mov
pop
ret
push
adc
and
mov
xchg
in
out
test
fist
call
addr16
lahf
test
inc
sbb
mov
stos
xchg
pop
or
adc
sub
push
jmp
add
clc
dec
(bad)
inc
jmp
(bad)
adc
aad
ins
test
leave
fiadd
pop
cmp
ss
je
(bad)
or
jge
out
pop
and
mov
or
and
dec
jp
ja
idiv
mov
je
sub
pop
or
inc
sti
sub
sar
call
arpl
lock
mov
mov
movs
mov
push
ret
js
adc
cmp
cwde
scas
sbb
cmp
push
mov
mov
inc
test
repz
dec
js
cli
mov
xor
xchg
(bad)
push
loop
add
push
repz
dec
std
pop
or
push
cli
add
fs
add
adc
sub
repz
(bad)
or
inc
add
push
push
or
push
add
xor
call
inc
out
cli
sahf
jg
daa
inc
dec
out
cli
repz
mov
outs
ds
push
and
and
pop
dec
inc
shr
iret
fidivr
jecxz
inc
mov
pop
and
mov
jae
mov
add
and
in
and
test
cmp
push
(bad)
jmp
mov
call
mov
inc
sbb
push
shl
sbb
mov
ins
pop
add
(bad)
shr
sar
inc
stc
ror
stc
ret
out
inc
sbb
or
pop
xor
push
aas
dec
sbb
rol
and
xor
xchg
jae
cdq
push
loopne
sub
xchg
jp
mov
or
mov
gs
fld
call
popa
xchg
inc
cmps
call
hlt
mov
add
arpl
aas
test
loopne
add
push
or
clc
(bad)
pop
jb
sub
fld
es
imul
repz
mov
mov
(bad)
mov
xor
sbb
aam
add
scas
fcomp
mov
bound
pop
pop
rcr
sti
ins
sub
adc
pop
cmp
fmul
cmps
pop
mov
ret
shl
mov
cmp
inc
mov
scas
cli
add
mov
push
rol
clc
dec
ror
cwde
push
outs
add
cld
mov
lock
xor
xlat
fstp
addr16
push
pushf
sbb
mov
nop
cli
pop
dec
fwait
mov
dec
adc
or
out
add
cmp
add
aas
add
push
mov
mov
pusha
call
xor
inc
pop
mov
and
mov
adc
cmp
lea
pop
sub
sub
push
arpl
add
cmps
adc
sub
aas
adc
cmps
add
mov
xor
push
or
aas
inc
cmp
in
pop
jae
mov
push
xchg
ret
icebp
mov
cmp
(bad)
call
out
call
lds
cld
retf
test
jne
call
jmp
retf
sub
mov
jle
cmp
inc
cmp
ss
sbb
mov
jg
add
inc
ret
out
pop
push
std
xlat
fs
(bad)
mov
pop
add
adc
or
lahf
mov
pop
pop
push
add
jnp
call
dec
mov
inc
fs
rcl
jg
(bad)
mov
sar
aaa
xor
fbld
loopne
jae
gs
out
inc
out
mov
cld
rol
popa
(bad)
pop
je
(bad)
(bad)
cmp
std
ja
(bad)
pop
mov
inc
push
aas
test
mov
in
dec
daa
adc
push
lds
push
jae
jns
and
ret
(bad)
mov
pop
fidivr
fmul
push
add
mov
push
ret
pop
loopne
ss
mov
imul
mov
icebp
add
cmp
clc
add
and
push
test
jnp
out
push
push
outs
mov
mov
push
add
movs
clc
out
loop
jnp
mov
adc
adc
or
xchg
jb
inc
push
aas
xor
mov
xor
pop
dec
mov
pop
mov
pop
test
lock
mov
jge
jp
dec
push
sub
add
jl
sub
jb
inc
fs
add
scas
mov
mov
mov
add
pop
pop
ins
adc
out
cli
and
loope
sbb
js
stos
jne
push
xor
ins
jmp
pop
jne
add
jne
hlt
out
ror
mov
and
xchg
repz
or
sar
cld
call
xchg
or
mov
mov
inc
clc
pop
daa
push
movs
jmp
inc
mov
dec
jmp
pop
fs
ret
and
and
(bad)
ds
adc
ins
(bad)
cmp
cmp
add
or
jle
pop
push
push
rcr
fmul
ins
jg
push
stc
arpl
mov
xchg
ror
cs
inc
dec
fs
lods
pop
lods
mov
push
jmp
xor
cmp
xor
jg
push
xlat
mov
stos
adc
push
enter
test
jmp
dec
(bad)
xor
rcr
xchg
xchg
mov
add
mov
aam
test
push
sbb
pop
jmp
jg
mov
adc
cmp
mov
add
daa
or
sbb
dec
mov
cwde
pop
add
push
out
pop
shr
stos
push
mov
mov
je
mov
test
xor
pop
cwde
push
nop
das
je
fmulp
rol
mov
ret
out
and
inc
mov
cmp
cmp
sub
(bad)
mov
out
in
cmp
scas
sub
out
and
add
and
xlat
inc
cmp
cmp
aam
arpl
pop
or
push
mov
(bad)
out
xchg
clc
ja
cmp
pop
pop
mov
or
sub
or
les
mov
add
fisub
adc
add
adc
inc
inc
jbe
(bad)
das
pop
or
into
pop
xor
mov
inc
mov
ja
lock
(bad)
pop
sub
movd
add
out
(bad)
fidivr
std
cmp
jl
mov
fadd
inc
rcr
es
inc
loopne
repnz
loopne
add
inc
sub
xchg
jmp
or
jle
add
xlat
push
aaa
pop
push
adc
std
jmp
lods
shl
out
in
mov
mov
or
mov
xor
push
loope
lea
pop
ja
jle
imul
sbb
inc
cmp
aam
mov
add
les
pop
xor
nop
or
xor
(bad)
sti
rol
and
adc
cmp
clc
inc
jbe
mov
in
xchg
pop
hlt
xor
test
jbe
mov
popa
outs
and
call
fwait
jne
cmp
mov
repnz
ret
div
jne
inc
int3
(bad)
out
std
or
add
pop
cmc
gs
ror
call
stos
add
pop
dec
pop
sar
and
sub
mov
push
shr
ins
mov
mov
add
inc
js
jmp
sbb
fiadd
call
outs
ret
iret
dec
dec
inc
aad
dec
xchg
adc
push
cwde
retf
xor
int
ret
adc
inc
mov
push
std
add
jg
cmps
movs
jl
mov
add
out
je
mov
sub
mov
stos
jb
hlt
mov
push
clc
stos
je
out
stc
push
not
push
dec
sub
add
(bad)
add
cli
jecxz
je
inc
nop
inc
(bad)
and
jbe
adc
cwde
jle
cmp
mov
and
mov
add
pushf
cli
add
push
mov
bound
clc
inc
inc
inc
push
addr16
mov
test
add
mov
xchg
or
mov
dec
aaa
out
pop
movs
call
in
push
lds
adc
stos
fimul
push
xor
push
sar
jo
scas
and
icebp
pop
pop
fcom
mov
dec
sahf
sti
sub
add
cmp
out
inc
mov
or
push
and
in
and
sub
mov
int
pop
ret
or
daa
and
push
sbb
repnz
sub
call
mov
or
dec
adc
add
dec
ret
mov
xor
pop
jae
xlat
jg
push
and
shr
add
inc
cld
mov
inc
mov
in
inc
lock
push
dec
pop
repz
aam
icebp
je
cmp
repz
or
out
xor
out
mov
fwait
adc
lods
inc
inc
mov
jecxz
dec
and
fild
movs
cwde
scas
psraw
outs
jp
les
add
sbb
sbb
mov
imul
push
icebp
into
cmp
clc
or
sbb
push
loope
loope
out
gs
mov
inc
add
cmps
inc
pop
loop
das
mov
test
mov
xchg
mov
pop
rcr
and
cmps
outs
out
xchg
inc
addr16
jae
scas
jae
(bad)
push
dec
out
sar
ror
mov
mov
mov
add
xchg
jp
or
or
jle
je
std
out
out
out
outs
pop
pop
mov
add
dec
xchg
add
stos
jno
mov
add
inc
mov
xchg
add
jae
test
sub
adc
imul
add
mov
clc
sbb
pop
push
jl
cmp
jl
sti
outs
mov
mov
test
jbe
mov
sub
call
inc
xlat
mov
imul
push
in
sub
pop
pop
and
mov
lock
aas
movs
inc
nop
ret
mov
call
inc
sbb
iret
outs
outs
mov
push
outs
or
inc
cmp
or
inc
pop
push
ins
xchg
call
or
dec
gs
sti
in
push
jae
add
enter
fcom
clc
mov
push
inc
push
add
(bad)
jg
mov
mov
addr16
push
mov
pop
pop
dec
mov
shr
dec
sub
test
pop
adc
aas
rcl
dec
fs
inc
movs
(bad)
cld
add
inc
sub
add
sbb
movs
pusha
dec
jne
pop
push
lods
sti
mov
test
xchg
int
mov
data16
(bad)
imul
call
sti
mov
mov
adc
ins
inc
repz
and
test
aaa
adc
add
and
je
jno
add
push
les
les
aam
addr16
push
inc
mov
dec
sbb
call
jge
mov
mov
sub
cmp
inc
or
push
mov
add
ret
aas
push
cmps
sbb
push
loope
dec
(bad)
out
loopne
sub
pop
out
add
movs
icebp
jmp
adc
add
inc
(bad)
cmp
std
dec
pop
sar
mov
ret
and
mov
mov
push
aas
xlat
mov
inc
jl
jg
adc
mov
mov
(bad)
iret
mov
pop
add
jno
and
and
push
ss
fsub
adc
out
js
add
ins
dec
push
rol
mov
repz
out
sub
inc
aas
imul
mov
das
ins
std
push
dec
xor
pop
add
inc
mov
adc
mov
jb
xlat
stc
jmp
dec
pop
push
(bad)
aas
fwait
mov
add
popa
adc
std
xchg
jmp
retf
outs
pop
ins
cdq
xchg
push
push
rcr
inc
jno
dec
fadd
push
out
imul
imul
xor
inc
or
push
mov
scas
cmp
inc
mov
xchg
mov
inc
mov
fsubr
imul
cmp
or
xchg
scas
xor
aas
push
jo
sub
imul
push
add
and
mov
dec
fcom
aas
cmp
mov
mov
xlat
xchg
push
sub
xchg
sti
(bad)
clc
(bad)
sbb
mov
pusha
inc
adc
inc
pop
and
xor
mov
mov
ret
jmp
add
cmp
cmp
(bad)
scas
xor
std
add
ret
ret
pmaddwd
add
dec
inc
sbb
adc
addr16
cli
aas
jmp
sub
jnp
cmp
pop
lea
add
mov
std
pop
rcl
jae
add
shl
xchg
adc
sbb
addr16
lea
mov
mov
inc
std
int3
test
inc
pop
test
loopne
cmp
loopne
stos
mov
adc
out
pop
or
out
cmp
inc
sar
jb
add
dec
fldenv
inc
adc
push
jl
sub
std
pop
jmp
and
retf
push
div
rcl
fisubr
mov
xlat
mov
movs
jg
pop
dec
or
sahf
adc
std
jp
aam
cwde
lods
fiadd
pop
push
pop
in
adc
jmp
mul
jmp
add
movs
dec
sub
sti
pop
ret
lds
pop
cli
dec
test
pushf
push
fdivr
out
mov
out
and
lods
pusha
adc
sbb
push
add
add
std
mov
clc
dec
inc
jmp
mov
mov
push
xlat
in
ret
dec
jg
lea
movs
and
sub
outs
pop
jg
clc
sti
mov
dec
mov
inc
add
mov
loopne
std
mov
mov
cmovno
jno
std
mov
mov
push
push
arpl
add
mov
sbb
mov
or
jmp
mov
or
adc
mov
rcr
cmp
ficomp
test
sti
or
loopne
std
repz
mov
addr16
out
push
add
sub
push
inc
imul
pop
cmp
push
push
inc
je
xchg
into
xlat
mov
ds
xchg
cdq
mov
xchg
stos
aam
and
ins
(bad)
(bad)
sub
aad
push
lds
jg
inc
jmp
push
mov
neg
arpl
aaa
xor
sahf
pop
dec
arpl
test
sub
(bad)
call
jl
add
aam
xchg
(bad)
cmp
jg
sub
pop
fs
mov
pop
popf
(bad)
idiv
pop
inc
ins
inc
adc
fsubr
dec
add
mov
sbb
cmp
jae
dec
or
dec
(bad)
std
push
jg
pop
(bad)
push
jo
adc
push
mov
mov
pop
inc
dec
xchg
sti
mov
mov
cld
ffreep
or
xor
shl
das
sbb
loop
mov
add
fnsave
mov
adc
pushf
pop
mov
adc
dec
test
adc
sub
sub
xor
inc
pop
loope
add
aas
mov
sub
mov
sbb
aam
int3
(bad)
stos
mov
sbb
gs
out
cld
push
mov
lahf
adc
adc
xor
stc
popf
clc
dec
(bad)
inc
mov
inc
push
dec
sbb
ret
add
inc
inc
jecxz
jmp
pusha
ret
inc
mov
xchg
test
aad
sbb
and
mov
inc
mov
aad
pop
jne
inc
inc
and
add
shr
pop
inc
daa
fsubr
jecxz
cld
sbb
add
add
lods
inc
in
mov
ds
sti
jnp
or
enter
fwait
push
mov
outs
ret
cli
outs
xor
and
sbb
pop
push
push
dec
xchg
mov
inc
outs
mov
imul
out
dec
inc
pop
inc
sbb
rcr
and
mov
sbb
cli
inc
inc
loop
pop
les
inc
in
outs
ds
cli
das
sub
push
mov
mov
lds
adc
xchg
push
ds
sub
xchg
dec
mov
enter
mov
mov
popf
mov
(bad)
sub
xchg
jge
bound
cmp
push
movs
mov
lds
shr
not
sub
dec
jb
sbb
sub
ret
fimul
dec
push
stos
push
ret
in
push
int3
(bad)
aas
imul
jp
mov
adc
dec
inc
stos
je
jbe
jg
jo
arpl
dec
jae
das
xlat
push
(bad)
arpl
out
sub
and
clc
inc
mov
pop
pop
out
inc
dec
xchg
xor
ins
gs
xchg
add
stos
mov
inc
xor
xlat
mov
pop
add
out
add
push
push
and
sar
aam
jl
(bad)
mov
(bad)
jl
mov
inc
shr
jae
jecxz
push
or
sub
jb
in
dec
jecxz
inc
test
xor
inc
push
sbb
pushaw
out
cmp
movs
(bad)
jmp
xchg
adc
mov
adc
add
inc
mov
aas
lds
pop
jmp
jp
push
dec
adc
rcl
xchg
or
adc
jmp
add
data16
or
mov
sbb
lea
ret
movs
add
pop
push
or
fadd
jmp
cmps
mov
les
cs
fisttp
xchg
add
mov
inc
jae
movs
add
push
in
xor
dec
ret
xor
cli
pop
fs
push
aam
sub
dec
jb
cmova
and
cmps
jg
xchg
push
je
(bad)
btc
scas
mov
inc
mov
xor
mov
and
out
rcl
bound
aaa
pop
shr
popa
jl
dec
mov
add
movs
or
add
test
push
dec
mov
xchg
setg
and
fld
imul
and
adc
inc
mov
out
lods
mov
test
std
push
dec
outs
lds
out
sbb
(bad)
mov
pop
imul
shl
inc
inc
mov
jg
sub
jae
pop
pop
ror
cld
mov
out
aad
mov
iret
fmul
push
inc
jmp
in
cmp
jp
stc
aas
add
or
retf
inc
add
jl
es
xor
or
dec
sub
sbb
sbb
pop
sub
in
inc
pop
push
rcl
dec
and
sar
loopne
sar
adc
add
repz
in
popf
xchg
mov
pushf
jb
leave
add
xor
imul
mov
mov
jmp
or
xchg
jne
out
jbe
add
push
xchg
(bad)
mov
je
(bad)
cmp
push
mov
out
jecxz
cwde
arpl
dec
scas
jl
pop
shl
mov
out
cld
mov
cmp
inc
dec
xor
mov
movs
or
rcr
(bad)
(bad)
movs
jl
add
mov
mov
fild
xchg
(bad)
fcmove
mov
cmps
push
add
push
(bad)
pop
std
xchg
sbb
addr16
sahf
xchg
xchg
hlt
mov
xchg
add
inc
inc
sbb
std
mov
enter
test
add
mov
or
xchg
or
mov
imul
loopne
pop
mov
sub
das
or
xchg
imul
fidiv
cmp
arpl
int3
xchg
clc
popf
push
imul
add
(bad)
jmp
sub
ins
mov
lahf
jae
add
ret
push
inc
call
ds
outs
int3
mov
jbe
mov
ss
mov
add
pop
inc
fild
and
push
gs
mov
clc
das
sar
push
mov
inc
call
add
sub
test
in
psubd
or
lock
pop
push
cmp
(bad)
jmp
jae
data16
arpl
fidiv
call
ss
jecxz
inc
arpl
add
pop
add
jae
lds
xor
push
mov
or
dec
mov
pop
sub
push
ret
ins
adc
and
or
pop
jl
test
in
daa
adc
(bad)
push
jne
mov
fwait
mov
lods
mov
stc
pop
stc
mov
sub
out
mov
movs
loope
(bad)
data16
and
jl
cmp
in
mov
or
and
inc
test
jl
shl
mov
repz
movs
(bad)
ficom
and
in
xchg
ins
lahf
jp
fstp
call
pop
arpl
inc
inc
out
mov
push
das
or
mov
ins
cld
push
add
arpl
push
adc
out
out
aam
jmp
cs
mov
inc
push
xchg
xchg
mov
jmp
(bad)
xchg
sar
inc
fwait
cmp
inc
test
mov
into
rcl
mov
inc
ins
std
outs
mov
sar
je
shr
xor
aaa
pop
mov
xor
bound
pop
cmc
mov
mov
inc
icebp
mov
mov
inc
add
adc
inc
jmp
clc
js
je
dec
push
aaa
(bad)
xor
add
das
dec
push
enter
out
mov
(bad)
jmp
and
ret
pop
add
push
push
fiadd
cld
or
jmp
dec
mov
(bad)
dec
add
add
iret
add
sub
clc
aaa
or
pop
add
(bad)
je
sub
int3
rcr
inc
xor
lods
mov
jmp
outs
shl
nop
icebp
jae
jo
mov
sbb
push
push
inc
mov
push
cmp
shl
arpl
loopne
and
sbb
xchg
or
jmp
aas
push
mov
mov
rcl
aaa
jge
stos
add
outs
bound
out
jg
add
inc
mov
pop
iret
pusha
outs
xchg
rol
or
dec
add
es
mov
jmp
hlt
mov
jmp
adc
jb
push
pop
(bad)
adc
and
jge
push
cmp
adc
cli
adc
out
inc
or
dec
mov
jle
jmp
or
inc
rcr
jmp
ins
jmp
and
clc
add
sbb
push
test
pop
pop
les
mov
xor
int3
call
aam
adc
sbb
mov
in
imul
inc
imul
inc
cld
xchg
jne
fist
inc
inc
call
(bad)
adc
mov
and
dec
ds
sbb
jmp
stos
call
push
push
push
mov
mov
mov
out
pop
sti
jne
push
fidivr
loopne
retf
inc
sar
sbb
pop
inc
mov
adc
push
mov
mov
jo
sbb
inc
push
aaa
test
scas
(bad)
shl
mov
(bad)
cmove
xor
das
shr
(bad)
mov
xor
mov
push
add
call
xchg
push
pop
mov
cli
push
popa
mov
(bad)
std
ror
adc
dec
or
aas
sbb
or
jl
je
out
sub
arpl
cli
push
jmp
jae
push
push
add
push
inc
fdivr
icebp
or
out
nop
rcr
je
loop
(bad)
pop
out
inc
nop
adc
cs
add
adc
inc
xchg
call
sub
jae
cld
add
dec
sbb
ret
sub
jg
add
test
inc
and
and
or
lods
fiadd
daa
les
ret
arpl
nop
adc
addr16
addr16
js
fbld
push
pop
pop
(bad)
cmp
xor
adc
mov
mov
add
repnz
cdq
clc
xchg
mov
pop
add
les
inc
xchg
(bad)
pusha
push
daa
mov
test
jp
mov
pop
test
ret
test
or
inc
or
inc
sub
inc
into
mul
cld
add
xor
bound
mov
jno
pop
adc
pop
adc
add
inc
gs
std
mov
dec
fbld
and
push
pop
mov
lock
inc
and
fisub
jmp
out
push
and
fstp
add
inc
push
or
dec
xlat
inc
dec
inc
ret
add
push
fcom
or
lahf
add
outs
cli
jg
dec
sti
aas
inc
sahf
test
add
(bad)
aam
stos
test
and
mov
sti
popa
(bad)
loop
push
adc
loope
jae
dec
mov
sub
inc
out
pop
pop
dec
pop
push
and
push
imul
inc
mov
sti
dec
mov
or
xor
mov
or
lds
jmp
jl
pop
shr
inc
cmp
leave
ins
adc
and
fs
push
xor
xchg
call
mov
loopne
or
jmp
adc
test
sbb
iret
mov
cld
xor
inc
inc
test
mov
in
inc
mov
pop
and
inc
pushf
popf
push
das
and
jne
nop
adc
mov
(bad)
xor
cmps
adc
inc
or
xor
and
or
outs
dec
dec
outs
add
aad
in
into
std
ss
mov
scas
(bad)
inc
mov
push
or
xchg
cli
(bad)
cmp
push
or
mov
mov
pop
scas
xor
lds
sub
pop
into
icebp
jl
pop
ret
jmp
ja
movs
mov
pop
test
mov
cmp
cld
dec
dec
call
add
or
cmc
fcomip
mov
(bad)
add
(bad)
jno
aas
jg
mov
pushf
adc
mov
sub
mov
rdpmc
pushf
lahf
jg
adc
ss
xor
or
jmp
outs
addr16
pusha
sar
xor
add
cs
and
jmp
sbb
fmul
inc
(bad)
sti
cmp
and
test
mov
ss
sti
jle
fstp
xlat
mov
aas
sub
sti
fs
mov
sbb
fmulp
or
addr16
push
mov
sub
mov
popa
mov
cmps
movs
ror
addr16
pop
out
inc
or
jmp
jne
add
jg
and
daa
inc
sbb
cmp
scas
jo
pop
push
cmp
pushw
cmp
std
and
fdivr
ret
mov
cs
inc
mov
mov
in
add
add
and
and
mov
inc
push
inc
or
or
add
je
in
sub
fadd
xchg
pop
xchg
push
adc
repz
adc
je
add
adc
fistp
lds
jb
push
mov
setge
add
push
in
inc
cmp
pusha
jmp
mov
aaa
int3
mov
iret
sbb
dec
add
jae
inc
mov
inc
mov
xchg
push
ss
add
arpl
popf
xor
jg
push
pop
out
pop
es
and
adc
(bad)
inc
out
push
xchg
or
mov
(bad)
clc
sbb
clc
pop
mov
loopne
xlat
aas
add
sti
pop
mov
das
or
sub
sub
pop
(bad)
or
lods
aas
mov
cmp
mov
add
mov
out
push
push
xchg
or
push
pop
add
inc
cld
ret
and
mov
pop
cld
sbb
xor
out
xchg
mov
jo
in
dec
fs
xchg
cli
(bad)
add
fidivr
cmp
imul
pop
add
jmp
lock
push
fsin
adc
or
test
mov
xlat
xor
or
jmp
adc
cmp
mov
sub
xchg
addr16
bound
jmp
jbe
ins
add
xchg
sbb
fidiv
push
pop
mov
cmp
adc
movs
mov
icebp
shl
xchg
dec
(bad)
ss
mov
jmp
je
test
clc
jg
xchg
ret
aas
mov
sub
out
mov
push
mov
inc
xlat
push
inc
mov
push
movs
cmp
das
jl
fdivr
mov
std
(bad)
xchg
inc
dec
mov
pop
test
xchg
jmp
aas
cli
outs
mov
scas
and
mov
or
lea
pop
rcl
pop
(bad)
mov
call
cld
inc
(bad)
test
inc
out
inc
add
cli
cmc
mov
or
stos
and
mov
ret
rcl
or
inc
add
and
pop
adc
add
sub
call
add
push
out
mov
sbb
add
pop
pop
dec
scas
(bad)
fiadd
mov
lahf
xchg
mov
pop
xchg
out
shr
hlt
mov
gs
sub
lods
add
inc
push
pop
adc
(bad)
bound
and
add
fsubr
(bad)
dec
pop
mov
daa
pop
ins
push
xchg
rol
jb
dec
pop
mov
out
jmp
test
aas
imul
mov
sub
mov
pop
out
in
pop
call
std
pusha
jle
aaa
sbb
std
adc
out
je
mov
cmps
add
imul
mov
push
xor
cmp
push
sar
fwait
bound
call
dec
mov
aad
mov
test
ins
lahf
add
add
(bad)
adc
test
mov
fld
jle
(bad)
jp
ror
loopne
sub
mov
aaa
mov
jecxz
mov
or
enter
or
mov
inc
repz
dec
pop
and
cmp
cli
hlt
or
xor
ss
(bad)
call
mov
add
sub
pop
push
mov
dec
inc
es
mov
mov
add
(bad)
xor
mov
stos
sub
mov
enter
push
pop
pop
popa
mov
mov
loop
and
ret
fs
mov
or
mov
pushf
dec
pop
(bad)
pop
ins
xchg
add
in
push
dec
(bad)
mov
pusha
out
dec
cmp
xor
mov
pop
bound
dec
mov
scas
xor
inc
stos
mov
sub
inc
addr16
(bad)
mov
into
(bad)
or
test
adc
repnz
inc
pusha
outs
add
jmp
clc
dec
xchg
push
mov
jg
iret
jecxz
test
and
and
xchg
mov
cmp
out
test
xchg
sbb
outs
and
add
inc
cmp
fsub
or
mov
jae
shl
and
add
and
pusha
pop
pop
mov
nop
sbb
repnz
push
and
call
add
cld
jg
call
push
push
add
pop
xchg
inc
dec
retf
mov
pop
inc
cld
xor
aas
pop
inc
adc
imul
and
(bad)
or
dec
mov
jge
int3
jb
addr16
call
sbb
clc
pop
(bad)
cmps
add
add
dec
mov
or
jl
adc
cmps
mov
add
aaa
push
push
sti
push
push
inc
cs
dec
mov
xchg
mov
inc
add
imul
int3
fdivr
mov
ins
mov
sub
add
jno
mov
and
ins
call
jmp
inc
dec
imul
test
add
ja
mov
sub
div
retf
mov
push
or
(bad)
js
cld
push
inc
and
or
or
add
xlat
xor
xor
in
sub
or
mov
rcr
sbb
pop
push
sbb
push
push
jae
pop
mov
or
push
add
push
push
and
aam
push
fsubr
and
jne
fisttp
aaa
add
leave
stos
(bad)
idiv
test
out
xchg
dec
fstp
outs
mov
test
inc
cmp
dec
mov
(bad)
mov
test
sbb
cld
fisttp
cmc
xor
out
not
aas
mov
pop
adc
(bad)
fisub
jl
mov
sub
je
jo
inc
out
jmp
or
fst
xchg
shl
xor
in
add
(bad)
fcom
or
xchg
jae
loop
inc
stos
sub
pop
lock
xchg
ins
in
xor
jl
idiv
retf
(bad)
mov
lahf
push
and
fbstp
mov
mov
loop
(bad)
outs
loop
push
stos
arpl
or
idiv
or
je
add
push
pop
cmps
adc
daa
add
push
xor
enter
cmp
test
jl
ret
mov
push
cmp
out
lds
aam
push
mov
inc
push
out
js
push
(bad)
int
mov
out
js
push
add
dec
ror
dec
(bad)
pop
push
aam
fstp
ss
mov
pop
mov
jae
jnp
std
(bad)
not
retf
push
inc
cmp
cli
sbb
dec
inc
clc
xor
test
ret
call
lea
xchg
les
mov
(bad)
jo
mov
ret
mov
pop
xchg
and
or
pop
mov
jecxz
data16
ret
inc
lock
test
mov
sbb
xlat
aaa
add
or
xor
aas
inc
push
pop
add
aad
int
nop
mov
adc
or
dec
test
je
ror
(bad)
mov
jbe
iret
mov
out
dec
ret
(bad)
nop
or
jmp
rol
adc
push
(bad)
aas
adc
(bad)
jmp
mov
sub
push
pop
push
mov
or
push
mov
(bad)
jge
jp
dec
cs
fdiv
mov
movs
xchg
pusha
call
sbb
loope
sub
retf
inc
inc
or
jae
jl
shl
inc
aas
cld
inc
push
stos
aas
arpl
dec
xor
out
cmp
add
xchg
arpl
xchg
dec
dec
(bad)
xchg
hlt
scas
jo
fiadd
imul
jmp
inc
push
mov
(bad)
enter
(bad)
mov
push
cmp
or
idiv
push
push
hlt
arpl
push
mov
idiv
(bad)
or
mov
or
pop
pop
ins
das
adc
inc
std
ret
push
fisub
fist
fsub
test
fs
adc
add
(bad)
jg
test
mov
jb
movs
jnp
addr16
sbb
loop
or
inc
ins
inc
push
inc
pop
mov
or
nop
call
jmp
mov
sbb
xchg
xchg
shl
mov
dec
sbb
test
push
sbb
dec
xchg
push
or
adc
jl
sar
sbb
cmp
dec
test
inc
xchg
ret
mov
fbld
mov
fs
in
inc
jecxz
jle
idiv
loope
inc
je
imul
arpl
mov
jp
jbe
fld
mov
inc
mov
imul
inc
retf
push
mov
add
imul
xchg
push
mov
jg
test
adc
pop
inc
test
inc
ja
jae
int3
sub
lock
sti
imul
test
js
and
add
jnp
push
add
pop
jl
mov
stc
das
cli
call
push
out
inc
repz
pusha
add
adc
lock
add
xor
pop
inc
mov
push
adc
pop
add
push
inc
retf
inc
(bad)
pop
push
mov
sahf
sahf
jne
sub
sub
sti
xchg
and
mov
cmp
pop
push
mov
mov
pop
pusha
dec
xchg
push
dec
pop
(bad)
scas
lahf
aam
loopne
mov
xor
(bad)
mov
cs
cdq
mov
ret
movs
dec
pop
add
ret
mov
enter
pop
inc
cmp
test
push
repnz
add
add
enter
pop
xor
lock
add
xchg
mov
add
repz
repz
mov
cld
out
ret
std
mov
test
(bad)
sub
or
mov
mov
pop
ins
dec
loop
popa
bound
icebp
fild
add
cmp
or
pop
data16
in
push
out
in
(bad)
fwait
lods
xor
add
adc
jmp
inc
inc
aas
jg
lock
pop
inc
out
fld
cmc
dec
aas
out
mov
ret
jne
clc
cmps
and
jae
ret
fistp
xchg
push
out
pop
clc
sub
push
add
jle
lds
pusha
cmp
cmp
nop
xchg
mov
xor
push
paddusb
add
neg
les
sti
outs
jmp
or
dec
inc
les
add
cmp
ret
mov
mov
dec
(bad)
xor
mov
sbb
and
mov
add
xor
cli
inc
jae
loopne
fsub
adc
cmp
add
add
inc
mov
sbb
dec
add
mov
aas
or
push
push
mov
je
mov
pop
mov
dec
push
cld
rcl
inc
loope
mov
shr
or
xchg
mov
out
push
dec
(bad)
outs
cmps
cs
(bad)
stos
pop
add
fisub
mov
add
inc
test
add
cmp
mov
mov
fimul
jle
mov
add
mov
fbld
pusha
es
mov
aas
dec
or
fdivr
dec
cwde
dec
mov
sub
in
pop
inc
and
sub
mov
and
inc
lods
xchg
cli
add
(bad)
push
cmp
lods
cmps
mov
and
xchg
pop
cmp
fs
and
mov
add
xchg
push
fiadd
std
test
sub
jbe
lahf
pusha
jno
pop
cld
mov
inc
mov
ret
lock
pop
jg
inc
mov
inc
stos
aas
xchg
call
rcl
fs
or
jnp
adc
cmps
rol
cmp
add
xor
in
cmp
xchg
jmp
sub
dec
add
aad
jbe
dec
pushf
enter
dec
out
or
adc
add
neg
pushf
aas
or
push
push
mov
mov
outs
rcr
add
inc
xchg
push
ja
shl
dec
adc
sub
(bad)
push
(bad)
jl
std
inc
(bad)
mov
(bad)
arpl
scas
aas
or
adc
or
mov
xchg
stos
push
adc
or
shl
mov
sbb
cmps
inc
pop
inc
xor
adc
fcmovb
push
outs
out
das
leave
lock
add
(bad)
pop
adc
jno
enter
mov
xor
xchg
outs
or
scas
adc
sbb
js
mov
mov
or
cli
push
aam
mov
not
fld
nop
adc
add
popf
cli
fild
(bad)
adc
push
add
adc
add
es
add
lock
mov
sub
jg
fdivr
inc
lahf
(bad)
mov
dec
mov
inc
and
mov
or
adc
mul
imul
or
inc
pop
push
adc
out
sbb
mov
push
add
movs
out
inc
sahf
movs
mov
adc
mov
dec
lods
jp
sbb
cld
cmp
bound
(bad)
fiadd
mov
mov
pop
bound
sub
mov
js
jg
adc
add
and
cmc
sub
xchg
mov
mov
lahf
sti
out
jl
jb
es
mov
inc
sar
das
push
scas
je
add
call
jo
mov
adc
in
es
inc
push
push
jg
mov
enter
pop
jl
jge
or
xchg
dec
inc
arpl
sub
shr
(bad)
jg
mov
add
adc
sub
sub
jmp
add
js
inc
fild
pop
cld
add
(bad)
(bad)
jp
jmp
or
mov
sub
jg
aaa
cld
dec
push
inc
movs
mov
cmp
sbb
imul
mov
in
(bad)
sub
cmp
fisubr
and
mov
cld
cwde
push
cmps
(bad)
das
push
or
fstp
pop
test
int3
inc
retf
mov
in
push
xchg
mov
push
inc
add
mov
fnstenv
es
sti
mov
add
add
adc
or
dec
mov
sbb
test
jg
sti
mov
fld
inc
pop
ret
(bad)
sti
mov
mov
inc
jmp
add
jae
xchg
mov
das
ret
push
retf
push
jmp
sub
sbb
inc
cld
push
jo
add
pop
push
je
pop
inc
and
mov
pop
push
and
mov
adc
inc
push
in
inc
fs
mov
sbb
mov
(bad)
inc
pop
add
outs
cli
xlat
lock
push
xchg
cmps
cmp
jae
pop
aas
and
pop
mov
es
or
inc
jecxz
aas
add
jmp
xchg
inc
(bad)
push
push
std
jle
inc
cmp
or
stos
cmp
mov
mov
mov
pushf
in
imul
into
add
test
mov
push
add
clc
xor
pop
loopne
inc
pop
adc
jg
add
pusha
xor
mov
mov
lods
or
adc
arpl
mov
add
xor
jno
add
(bad)
adc
bound
adc
inc
add
sbb
movs
popf
pmaxub
xchg
mov
mov
les
jg
and
inc
mov
shl
inc
bswap
push
(bad)
sbb
cmp
outs
mov
mov
push
add
popa
mov
inc
inc
loop
imul
ins
jbe
popa
loopne
jb
sub
mov
inc
xchg
cmp
inc
outs
aaa
jge
push
and
jno
add
in
dec
cmps
pop
inc
mov
xchg
mov
test
add
std
or
jge
sar
mov
and
sub
test
inc
rol
fdivr
or
sub
pop
mov
clc
out
dec
dec
sahf
jbe
sbb
out
lahf
pop
cmp
scas
and
fsub
sub
repnz
sbb
imul
xor
popa
call
icebp
adc
cli
jbe
out
mov
call
push
push
sub
shl
mov
mov
(bad)
mov
addr16
scas
repz
pop
push
cmp
adc
adc
mov
push
aaa
xor
mov
enter
(bad)
pop
push
jne
aaa
xchg
mov
add
add
add
and
dec
add
fist
xchg
hlt
or
dec
push
pop
test
add
sbb
cmp
and
rcr
popa
xor
mov
adc
scas
scas
inc
rol
icebp
test
xor
inc
bound
push
jg
dec
fistp
sub
xor
xor
xor
mov
add
add
mov
xchg
ins
cmp
ss
add
jmp
(bad)
cmp
xchg
or
add
in
mov
or
adc
scas
or
mov
or
xor
xchg
or
pop
push
sub
xchg
or
push
mov
push
leave
test
mov
pop
fs
jp
xlat
rcr
pusha
mov
pop
sub
sub
or
loopne
add
xchg
js
movs
mov
pop
jmp
cmp
mov
ret
gs
xchg
push
clc
pop
sbb
fsubr
stc
enter
sub
pcmpeqb
dec
jb
in
(bad)
out
inc
je
and
lock
jmp
dec
jle
push
lods
stos
fisttp
std
dec
inc
xchg
aaa
sbb
call
aaa
push
and
imul
movs
add
fbstp
sbb
jmp
xor
inc
jmp
inc
jo
dec
loopne
aam
mov
(bad)
ins
inc
mov
pop
repz
push
inc
imul
fstp
xor
in
pop
xor
(bad)
stos
xchg
(bad)
mov
ds
sar
test
add
cpuid
pop
mov
(bad)
outs
sar
ficom
pop
cli
clc
addr16
xlat
mov
mov
loope
adc
loope
add
or
jne
mov
call
fadd
dec
or
loop
in
adc
ret
test
fwait
add
cmps
adc
push
je
inc
cs
fist
mov
out
pop
adc
or
shl
sub
(bad)
nop
pop
jae
into
adc
out
mov
dec
outs
mov
xor
mov
add
pusha
cld
test
xor
inc
pop
sbb
dec
rcr
(bad)
aas
cmp
push
dec
inc
out
out
mov
push
pop
inc
xor
inc
nop
pop
out
stos
imul
sbb
jbe
xor
call
jle
mov
adc
mov
arpl
push
ja
mov
xor
or
clc
add
mov
xlat
pop
iret
add
ret
(bad)
lahf
sbb
push
sbb
jb
mov
je
jg
inc
adc
data16
je
jp
pop
push
rcl
outs
push
std
gs
mov
inc
mov
fdivrp
pop
mov
pop
das
sti
mov
rol
rcr
movs
lods
icebp
mov
and
out
jne
ret
gs
rol
push
mov
jmp
cmp
imul
addr16
ss
sbb
jecxz
mov
enter
rol
push
mov
mov
je
dec
retf
out
and
sub
mov
mov
pop
inc
xor
inc
cld
mov
clc
cmp
add
cmp
outs
adc
dec
mov
push
retf
scas
add
sbb
sub
mov
ja
xchg
add
cmc
ret
xor
in
dec
mov
sahf
test
adc
cmp
add
inc
mov
add
pop
lods
fadd
sahf
inc
jae
std
fdivrp
sub
xchg
inc
dec
mov
out
mov
or
mov
cli
push
mov
imul
jae
out
add
lahf
cli
xor
add
iret
push
mov
and
jo
xchg
jo
xor
mov
cld
mov
mov
mov
clc
imul
test
out
icebp
ror
retf
cmps
test
enter
xchg
add
ror
dec
pop
cmp
jle
push
xor
pop
clc
pop
push
je
push
sub
out
mov
(bad)
cli
or
sub
cld
push
adc
icebp
inc
jb
ja
pop
add
sbb
adc
out
cmp
inc
js
std
xchg
inc
imul
nop
test
mov
adc
clc
repz
fwait
test
es
lods
(bad)
xlat
cmp
or
dec
dec
test
data16
outs
dec
or
and
ror
push
clc
das
jmp
aaa
and
sbb
add
ffree
dec
js
std
push
cmp
or
(bad)
mov
sti
cli
mov
push
popa
sub
dec
xor
loopne
sub
mov
dec
mov
rcl
and
push
mov
mov
sub
in
mov
ror
sbb
clc
jb
(bad)
mov
fcom
ret
adc
cmc
dec
xor
ret
mov
add
sti
inc
test
pop
not
xor
cwde
es
inc
scas
and
ret
adc
outs
lods
push
call
mov
imul
pop
sti
rcl
in
call
in
cmp
xor
retf
bound
retf
imul
aad
and
icebp
in
inc
aas
jne
(bad)
(bad)
sub
and
push
clc
popf
mov
add
outs
leave
mov
iret
out
arpl
outs
fdivr
pop
mov
scas
push
push
inc
inc
inc
push
add
fs
nop
xor
cmp
push
mov
aas
add
iret
dec
xor
pusha
test
xchg
dec
adc
mov
enter
test
mov
lods
stc
push
mov
inc
not
out
add
sbb
mov
mov
lock
push
cli
cwde
loopne
loopne
out
sbb
mov
adc
pop
adc
xchg
dec
sar
shl
mov
inc
(bad)
daa
ret
imul
ret
stos
ficomp
push
pop
jp
adc
inc
imul
movlps
adc
iret
rol
mov
add
pop
(bad)
fild
or
or
adc
xor
mov
or
inc
and
mov
call
aam
or
xlat
push
or
jmp
repnz
add
mov
js
out
jmp
shr
or
push
inc
inc
pop
jl
mov
push
ss
movs
inc
fisttp
inc
push
xor
ret
cmps
stos
sbb
sti
xlat
push
out
sbb
mov
dec
pop
mov
add
outs
mov
push
out
out
pusha
jmp
(bad)
div
or
cmp
mov
push
je
out
inc
aas
and
imul
pop
pop
and
fiadd
inc
xchg
stos
mov
xor
cs
add
add
pop
push
popa
aaa
push
xchg
retf
fiadd
pop
and
sub
dec
inc
adc
popa
pop
adc
push
jb
cmp
lock
push
pop
dec
(bad)
jne
je
jmp
fadd
jmp
enter
xchg
outs
cmp
jmp
xor
add
das
hlt
pop
xor
add
or
aam
cmp
add
jno
lods
sbb
cli
stos
sbb
fist
mov
cmp
fbstp
cmp
push
mov
inc
daa
scas
into
sar
fwait
adc
mov
jg
jne
inc
jg
sub
and
inc
call
sar
jbe
xchg
or
out
cli
fs
inc
js
pop
sub
xor
add
(bad)
loope
call
push
inc
mov
pop
icebp
lahf
sub
inc
adc
add
test
mov
test
cs
in
push
push
jbe
and
call
cmc
out
dec
mov
add
jecxz
add
clc
test
stos
stos
sub
aas
jge
push
gs
jmp
test
dec
mov
popa
mov
adc
push
jmp
(bad)
test
push
push
push
pop
aas
jae
aas
pop
and
cmp
call
and
mov
clc
data16
dec
push
jg
call
inc
mov
mov
pop
ins
mov
mov
add
xor
aas
push
adc
cdq
pop
scas
push
fs
sub
(bad)
push
dec
add
ret
push
out
test
pop
push
rcr
sbb
stos
in
hlt
pop
and
push
adc
jg
xchg
lods
xor
movs
cli
sbb
add
pop
test
std
iret
fmul
push
movs
jae
(bad)
jno
inc
xor
dec
inc
repnz
ins
push
cld
add
dec
jae
pop
dec
enter
jge
cmp
add
fchs
mov
dec
(bad)
(bad)
pop
dec
push
jmp
aas
adc
pop
sbb
mov
movsx
adc
fiadd
pop
aaa
mov
ret
ficom
sti
push
jb
clc
xor
lahf
pop
je
icebp
(bad)
arpl
leave
clc
add
ds
dec
adc
in
adc
jbe
out
add
lds
jecxz
fimul
dec
or
add
fiadd
and
jg
push
repz
dec
pop
call
je
out
mov
pushf
out
and
or
inc
out
shr
add
mov
cmp
(bad)
sub
repz
inc
(bad)
fwait
pop
sbb
mov
(bad)
das
loop
xchg
mov
add
pop
dec
push
movs
les
add
stos
dec
sub
lods
es
ret
lds
icebp
dec
fdiv
xor
cs
inc
aas
add
jbe
dec
add
mov
mov
push
inc
fbstp
loope
jle
dec
adc
jmp
ret
inc
push
add
(bad)
and
mov
mov
xchg
lock
ret
mov
xor
add
data16
inc
add
bound
add
mov
pop
mov
es
or
imul
fisubr
adc
(bad)
loopne
xor
push
jp
adc
fisub
pop
inc
adc
mov
pop
add
out
jae
cld
add
dec
outs
loope
leave
out
les
add
je
xor
jle
xor
cs
stc
dec
stos
cmp
inc
or
out
mul
out
call
stc
mov
xor
add
dec
add
sbb
xchg
je
sti
adc
pushf
cmp
mov
or
xchg
(bad)
(bad)
call
pop
mov
ss
or
shl
shl
ss
inc
add
fdivr
xor
(bad)
sub
fisubr
jae
dec
sar
es
mov
mov
adc
sti
cmp
retf
cli
adc
cmp
test
add
mov
ss
repz
or
push
or
shr
dec
mov
inc
int3
ret
add
fisttp
arpl
inc
add
inc
jl
out
or
push
fwait
in
inc
dec
xor
dec
jecxz
scas
aas
xor
mov
imul
aam
dec
inc
mov
rol
mov
xor
cli
inc
rcl
ins
nop
inc
neg
test
sbb
inc
std
pop
sbb
jmp
dec
push
scas
mov
popa
push
mov
mov
xor
imul
sub
jbe
clc
or
les
mov
mov
jmp
mov
aam
xchg
jb
sti
jg
mov
push
into
mov
aaa
add
aaa
add
sbb
std
add
sbb
mov
add
cmps
mov
gs
imul
ss
cmp
xchg
mov
lock
add
inc
pushf
imul
inc
ins
inc
jbe
stos
add
inc
pusha
jae
inc
inc
mov
cmp
or
cli
aas
ret
add
mov
inc
arpl
add
ja
sbb
mov
dec
mov
shl
pop
mov
xchg
(bad)
pop
in
jle
or
cmp
jb
sbb
popf
mov
push
std
mov
shl
pop
add
test
dec
sbb
and
sub
stos
aas
mov
pop
lahf
mov
sub
jg
add
mov
mov
(bad)
push
sub
sbb
fmul
inc
jmp
in
dec
call
mov
push
mov
push
fild
and
pop
add
push
add
repz
add
lds
mov
cmovno
push
add
loopne
in
and
xchg
inc
add
add
mov
push
inc
out
pop
push
ja
ins
jecxz
fisttp
out
adc
imul
jle
hlt
loopne
mov
test
mov
xchg
adc
loopne
push
mov
sbb
nop
push
mov
and
mov
(bad)
(bad)
in
pop
xor
in
fs
mov
jl
lods
bound
je
mov
addr16
aad
sbb
adc
inc
cmp
jl
add
cld
pop
jge
add
aas
and
add
sub
cli
add
aas
int
outs
les
es
pop
add
rol
sub
sbb
arpl
rol
inc
xor
ficom
mov
adc
add
mov
(bad)
jmp
outs
inc
and
push
movs
xor
cdq
rcr
imul
add
jge
jae
not
mov
adc
jmp
pop
adc
cmp
mov
inc
test
das
pop
mov
fwait
mov
pop
(bad)
clc
jg
jg
mov
sti
test
dec
inc
fadd
inc
scas
adc
dec
sti
add
pop
out
mov
arpl
sub
stos
pop
pusha
sar
adc
fs
dec
jl
out
loope
mov
test
adc
pusha
out
test
pop
pop
jle
(bad)
call
inc
jg
pop
ins
enter
add
mov
aas
(bad)
stos
mov
push
jp
out
std
int
mov
mov
inc
je
popa
sar
(bad)
jmp
fiadd
(bad)
xor
fild
inc
call
mov
cmp
pop
out
mov
sbb
movs
fbld
pop
ds
retf
inc
add
pop
loop
pcmpeqd
add
lds
fiadd
add
pop
add
add
(bad)
daa
loopne
adc
pop
jmp
movs
or
and
enter
out
pop
sub
add
cmp
loopne
mov
push
dec
inc
sub
ror
dec
inc
pop
add
inc
bound
add
mov
pop
js
sbb
sub
mov
data16
fist
stos
loope
or
das
das
inc
pop
or
push
sbb
mov
cmp
ret
arpl
dec
cmp
cmp
pop
aad
dec
test
ds
push
cmp
push
(bad)
inc
(bad)
outs
xor
ficom
or
in
sub
jmp
test
adc
ss
ja
push
lds
push
std
mov
pop
cmp
push
ins
loop
or
add
push
jmp
out
sti
push
push
retf
arpl
pop
ret
movs
or
add
repnz
cs
pusha
mov
rol
xor
lods
outs
test
sub
mov
add
icebp
clc
pop
rcr
scas
ss
mov
xor
add
add
mov
ss
push
call
and
das
and
push
adc
call
jl
test
aam
add
add
or
or
add
mov
cmp
mul
inc
inc
cs
outs
add
add
pop
xor
shl
jge
pop
mov
mov
add
fist
xchg
aas
test
out
inc
or
ins
dec
(bad)
sahf
inc
push
inc
and
aas
nop
xor
ja
fwait
(bad)
stos
das
ja
(bad)
cwde
mov
push
xor
ret
add
scas
jmp
setnp
dec
xor
or
or
xchg
ret
lock
fstp
xchg
add
aas
xor
loop
and
(bad)
xor
inc
push
inc
xchg
arpl
mov
aas
mov
mov
inc
inc
jmp
popa
aaa
add
dec
test
mov
and
xor
ud2
fdivrp
sbb
add
cmp
sbb
(bad)
outs
and
cld
inc
mov
or
jo
shl
test
add
mov
and
call
and
add
xor
push
xchg
hlt
pusha
jp
xchg
sub
mov
jge
ret
inc
mov
mov
xlat
mov
pop
mov
push
or
adc
inc
ret
jmp
sbb
jne
jb
jbe
mov
dec
cmp
(bad)
call
inc
mov
or
(bad)
pop
mov
ja
lods
daa
out
out
ret
sbb
lock
out
test
aaa
or
data16
inc
mov
stc
hlt
aam
mov
outs
and
mov
imul
(bad)
jmp
inc
push
pop
ja
outs
xchg
icebp
or
xchg
in
fmul
movs
inc
xchg
pop
mov
inc
test
add
pop
ret
cli
dec
test
(bad)
push
add
sbb
mov
sbb
mov
mov
in
dec
popa
inc
jmp
imul
mov
inc
sub
mov
mov
adc
movs
jbe
sub
inc
pop
push
sbb
inc
mov
pop
test
xor
mov
push
dec
adc
inc
out
aam
les
jo
inc
outs
lahf
sbb
push
mov
mov
or
loope
sti
in
cld
(bad)
mov
into
cmp
mov
inc
mov
dec
out
ret
(bad)
sbb
mov
xor
jae
ja
scas
push
jb
fs
scas
and
sti
cmps
(bad)
dec
sbb
add
jb
sti
or
push
out
sbb
xlat
inc
outs
add
pop
push
xor
jl
ror
mov
add
xor
dec
out
std
ss
adc
sub
xchg
push
add
push
retf
jg
aad
inc
push
jle
xor
(bad)
pop
mov
jmp
mov
push
add
xchg
or
rcr
pop
outs
fdivr
call
adc
cmp
or
addr16
xor
xor
inc
and
stos
push
test
jmp
mov
cmp
pop
aaa
mov
hlt
fldcw
or
dec
mov
pop
imul
xor
lahf
fmul
mov
ret
outs
loope
inc
inc
sbb
cmp
mov
sub
stos
jecxz
cwde
xor
mov
add
hlt
clc
or
xchg
aam
test
ret
fmul
inc
mov
jmp
xchg
push
test
retf
or
mov
mov
in
gs
inc
clc
xor
push
movs
and
xor
mov
mov
imul
jbe
mov
neg
mov
or
out
add
pop
je
adc
mov
inc
add
outs
push
mov
xchg
jl
data16
scas
xchg
jne
dec
dec
repnz
mov
aam
xchg
pop
ins
test
push
jecxz
clc
push
adc
adc
pop
pop
mov
push
cld
jnp
mov
ret
and
dec
dec
cld
ins
pop
xor
arpl
popw
push
ret
test
cld
(bad)
sahf
pop
pop
cdq
sbb
int3
cmp
push
xchg
jo
xchg
mov
leave
pop
pop
and
adc
(bad)
mov
cs
and
fstp
js
enter
jecxz
fiadd
scas
pop
adc
(bad)
out
mov
cmc
(bad)
cmp
cmp
push
sub
jp
fisub
lds
jg
in
jge
les
mov
mov
ret
inc
cli
aas
aaa
sti
mov
sbb
jae
jg
add
outs
push
sub
pop
inc
add
mov
adc
jbe
xchg
add
mov
shl
mov
ja
inc
sbb
out
and
mov
call
add
cli
mov
aas
xchg
test
add
fnsetpm(287
mov
xor
loopne
pusha
inc
fadd
cmc
push
jno
and
pop
add
add
sbb
add
out
arpl
xor
dec
pop
xchg
cmc
and
ffree
pop
mov
out
arpl
(bad)
(bad)
xor
add
jbe
cmc
inc
aaa
inc
sti
ret
mov
sub
sub
(bad)
push
out
lods
jmp
cmp
mov
pop
clc
inc
sbb
and
pop
inc
jmp
add
arpl
jnp
loop
mov
inc
std
daa
dec
jae
iret
pop
push
lahf
pop
jmp
fwait
(bad)
inc
jmp
daa
cld
cli
and
out
mov
jns
pop
test
xchg
mov
not
shl
inc
dec
and
frstor
scas
mov
fmul
xor
inc
and
mov
dec
cmp
mov
push
cmp
rol
cli
push
sbb
mov
xchg
in
bndldx
repnz
(bad)
jg
inc
sub
sbb
call
jmp
pop
imul
inc
test
xor
inc
cmps
jae
cld
mov
imul
sbb
add
push
adc
lahf
and
fcmovne
xchg
xchg
(bad)
movs
and
test
mov
(bad)
adc
fild
faddp
mov
mov
out
test
clc
mov
ja
pop
ja
jne
and
push
cmp
ds
mov
std
jp
arpl
dec
fucom
pop
mov
fidiv
out
mov
push
cli
sbb
sbb
inc
add
push
movs
dec
clc
out
mov
push
push
inc
ja
mov
and
jb
pop
sahf
inc
cmp
jo
mov
mov
sub
add
xchg
out
xor
stos
icebp
lock
out
xchg
movs
loopne
(bad)
dec
(bad)
sub
lahf
fimul
xor
mov
bnd
add
pushf
add
fwait
rol
mov
arpl
or
(bad)
pop
sti
mov
call
jle
dec
repnz
inc
add
push
out
test
xchg
inc
dec
add
test
inc
mov
inc
cmp
ss
aas
adc
aad
xchg
and
or
adc
pop
inc
sub
lahf
push
add
xor
mov
clc
mov
push
pop
ins
adc
dec
inc
rcl
in
inc
cmc
pop
call
add
xor
xor
sub
pop
mov
call
test
ins
dec
inc
fst
cmp
add
adc
mov
inc
sub
data16
dec
cmc
(bad)
inc
push
pop
or
fbld
pop
imul
aas
std
cld
cmp
mov
dec
mov
push
add
add
mov
ja
mov
sub
std
mov
dec
add
test
mov
xchg
stos
aam
jg
aas
(bad)
fbstp
push
(bad)
scas
xor
pop
inc
inc
repz
aas
ror
inc
mov
rol
mov
enter
sti
mov
mov
pop
jb
pop
jge
xchg
jbe
mov
mov
mov
push
(bad)
je
sub
xor
add
or
fmul
outs
inc
cld
bound
sbb
(bad)
jg
enter
jae
sub
and
test
inc
pop
mov
aas
adc
out
or
pop
pop
or
aaa
dec
call
imul
pop
cmp
mov
inc
cwde
mov
inc
sbb
push
push
sub
arpl
cld
aas
adc
sbb
jmp
adc
lds
ss
mov
aam
lahf
push
jae
sbb
pop
js
(bad)
inc
adc
ja
iret
mov
inc
popa
sub
(bad)
cmc
add
or
fcmovbe
arpl
outs
xchg
outs
ret
push
and
jbe
mov
int3
push
sbb
out
push
mov
jmp
call
sbb
cmp
ret
xchg
retf
sti
push
push
hlt
dec
jg
rol
fimul
xlat
fimul
sub
inc
dec
in
fwait
jbe
aad
pop
xor
inc
dec
add
and
cli
push
out
push
in
lock
loope
adc
and
push
mov
(bad)
(bad)
sbb
fwait
fs
(bad)
(bad)
adc
std
scas
mov
inc
add
shl
mov
cmp
xchg
mov
push
inc
(bad)
mov
mov
mov
xchg
dec
push
mov
cli
adc
pop
xchg
inc
(bad)
xor
into
fsub
fistp
loopne
inc
loop
js
mov
sbb
adc
imul
inc
out
pop
push
add
addr16
sub
inc
xor
inc
pop
cmps
push
aam
out
add
(bad)
mov
push
or
inc
daa
mov
xor
adc
rcl
(bad)
bound
sbb
mov
inc
stos
ret
cld
cmc
sub
jp
or
inc
ins
mov
aas
push
mov
scas
pop
jno
inc
mov
and
out
leave
loope
sbb
xor
cmp
add
lds
mov
inc
add
pop
popa
(bad)
std
ja
inc
jp
and
pop
inc
xchg
jne
or
pop
dec
int3
imul
cmp
ret
pop
fnsave
add
aam
or
pusha
mov
pushf
rol
add
or
add
jb
and
jecxz
pop
cwde
(bad)
aaa
pop
jbe
pop
push
je
aas
inc
cmc
cmovne
jmp
arpl
sub
push
enter
lahf
in
mov
push
mov
inc
scas
hlt
dec
or
mov
outs
(bad)
div
icebp
xchg
mov
add
add
xchg
je
add
adc
mov
or
cmps
out
jo
clc
push
mov
dec
inc
js
push
dec
test
loopne
test
ds
mov
scas
rol
sub
mov
inc
adc
push
or
cli
pop
or
mov
pop
jo
int
arpl
push
dec
div
mov
cli
xchg
test
dec
mov
clc
push
xor
mov
lock
cmc
xor
icebp
fwait
bound
xor
ins
imul
in
(bad)
call
mov
out
out
pop
push
pop
iret
mov
lods
lea
inc
mov
xchg
in
punpckhbw
fdiv
adc
je
pop
sub
out
mov
inc
jmp
inc
sar
mov
mov
les
(bad)
or
sub
jb
add
add
xor
call
inc
pop
enter
mov
jae
mov
dec
not
mov
inc
rcl
push
push
pop
shl
imul
mov
jae
or
stos
addr16
addr16
rcr
hlt
adc
and
inc
jae
fisubr
xlat
fild
lods
jle
xchg
bnd
xor
inc
test
clc
daa
push
cld
je
in
add
mov
mov
sbb
xor
jo
jo
cmps
lock
and
xor
push
pop
ins
add
and
dec
inc
inc
inc
xchg
scas
and
pusha
mov
loopne
mov
inc
(bad)
es
dec
dec
nop
and
inc
sti
dec
jae
xchg
mov
mov
or
jno
mov
inc
shl
ins
jg
cld
xchg
lods
(bad)
clc
sub
mov
es
jb
add
out
pop
cmp
test
cmc
test
dec
or
add
push
ins
jmp
addr16
cli
outs
aad
mov
into
pusha
add
aaa
aas
imul
std
sub
pop
call
bswap
lods
pop
jg
je
fmul
sti
mov
mov
call
out
add
scas
inc
test
mov
dec
(bad)
jg
push
jbe
add
(bad)
(bad)
aad
cmp
add
lds
cld
pop
mov
sti
push
outs
push
cmovb
xchg
push
test
add
pop
add
mov
fs
xchg
mov
xor
loopne
shr
(bad)
stos
mov
jb
or
mov
lods
dec
mov
mov
rol
sbb
call
cmp
pop
and
repnz
mov
dec
ror
out
xlat
dec
or
dec
test
or
sbb
add
xlat
push
mov
mov
mov
js
inc
and
mov
(bad)
cwde
mov
out
cmp
es
aaa
ins
sub
add
push
jmp
sbb
mov
cmp
push
outs
dec
leave
pop
je
fs
clc
fld
stos
sbb
ficom
dec
sbb
mov
ret
adc
push
inc
or
xor
xchg
mov
mov
push
outs
popa
and
sbb
push
fdivr
out
and
inc
pop
inc
loop
rcl
cli
push
sbb
psubb
sti
lds
add
mov
sub
mov
mov
imul
pop
adc
add
push
(bad)
and
mov
add
push
iret
jbe
cmp
jmp
lock
(bad)
dec
ins
xlat
out
and
std
aas
movs
mov
in
sbb
push
sub
push
ss
xlat
add
dec
or
push
adc
xor
jbe
stos
jae
(bad)
icebp
nop
ret
test
jnp
call
mov
in
aaa
out
push
(bad)
aaa
loopne
(bad)
aas
inc
fiadd
push
shl
mov
mov
shr
gs
mov
jp
mov
call
cmp
jbe
outs
dec
call
xchg
ret
into
inc
mov
sbb
push
into
jl
adc
mov
in
cmps
sar
mov
lahf
jl
outs
add
ins
inc
inc
shr
add
add
int
add
mov
pop
aas
fcmovbe
push
je
lock
std
or
sbb
xor
scas
out
sub
sbb
add
add
inc
inc
push
int3
lea
add
adc
dec
inc
sub
jmp
inc
mov
ret
dec
jmp
mov
je
sti
outs
adc
mov
ss
push
pop
js
mov
in
cli
pop
pop
sub
mov
out
sub
loope
cli
retf
outs
jmp
dec
aas
push
mov
jno
or
xchg
xor
sub
jae
ins
clc
xchg
add
xchg
mov
add
out
into
mov
mov
mov
icebp
mov
into
mov
sti
or
adc
cmp
cmc
sub
arpl
js
pop
mov
imul
mov
lds
push
dec
icebp
jl
loop
retf
cmps
pop
retf
sub
xor
fimul
push
add
int3
and
outs
and
mov
call
cld
inc
push
test
sub
pop
rcl
pusha
xor
fdivp
mov
test
jno
xor
in
ins
jp
and
xor
inc
dec
fwait
add
push
cld
mov
out
or
add
aad
nop
dec
outs
icebp
aaa
mov
mov
pop
adc
fisttp
inc
sub
in
sub
or
mov
out
push
sub
jmp
cmp
dec
outs
inc
mov
push
pop
push
jb
fdivr
sbb
outs
ficomp
mov
cmps
pop
xor
rcl
jecxz
push
fisub
and
inc
fcom
or
inc
dec
arpl
cwde
sbb
cld
add
mov
jp
xchg
movs
or
loop
fcmovnb
cld
pop
add
mov
push
psrlw
(bad)
mov
xor
push
dec
dec
je
dec
ror
mov
and
mov
ds
je
sar
pop
jg
in
dec
push
sbb
mov
jp
mov
das
inc
jo
clc
sub
movs
sar
lock
inc
sub
mov
cmps
xor
dec
jb
pop
aam
or
aaa
ret
add
jo
movs
xor
mov
push
push
mov
mov
sbb
mov
add
add
and
ficomp
sar
imul
jns
push
test
xchg
push
ret
or
sti
or
push
test
add
adc
or
aaa
jo
iret
inc
mov
clc
out
cmp
push
call
inc
inc
hlt
es
mov
or
pop
rol
mov
imul
dec
inc
mov
ins
pop
ins
pushf
jge
xrelease
xchg
test
arpl
call
xchg
push
out
add
cwde
shl
push
out
inc
mov
repz
ret
stos
mov
mov
inc
in
push
aaa
icebp
aaa
out
enter
inc
inc
pop
ror
pop
mov
dec
popa
clc
addr16
bound
mov
inc
shr
lock
mov
cmps
sub
mov
dec
call
aaa
push
sbb
(bad)
push
push
inc
pop
je
loop
push
mov
retf
dec
pop
and
adc
jmp
add
(bad)
(bad)
imul
xor
out
xor
push
pop
cmc
mov
jae
inc
inc
mov
jg
shl
xor
sbb
and
sub
xlat
xchg
pop
inc
add
pop
jae
inc
jb
mov
adc
aad
aas
adc
xor
js
jne
mov
and
pop
mov
sub
jle
mov
push
sub
jae
xchg
inc
xlat
xor
fcomp
outs
adc
icebp
xor
in
stos
jbe
jg
or
mov
aaa
jo
arpl
sbb
add
dec
pop
add
pop
mov
and
and
and
jb
adc
jecxz
jo
jmp
mov
jbe
dec
ss
ins
xor
(bad)
pusha
mov
pop
push
cs
fdivr
adc
or
pop
(bad)
pop
cmp
es
adc
add
fsub
std
cmp
call
inc
aam
push
inc
jmp
inc
add
ins
daa
dec
mov
imul
jmp
lds
mov
pop
jl
ss
xchg
shr
adc
mov
pop
push
lds
inc
outs
out
add
and
pop
add
stos
pop
pop
(bad)
or
add
add
(bad)
jg
and
pop
pop
dec
dec
inc
stc
push
mov
or
cs
stos
sub
retf
lock
pop
push
mov
xchg
int3
push
js
jmp
mov
or
inc
mov
or
mov
mov
pop
sub
xor
or
out
push
push
add
pop
or
xchg
adc
add
ret
jno
cmp
inc
sub
add
dec
xor
mov
push
sub
(bad)
(bad)
mov
inc
mov
adc
add
inc
pop
mov
cmp
(bad)
cs
or
cmp
enter
cwde
cmp
pop
fs
mov
adc
gs
ins
xor
push
dec
mov
adc
or
aas
call
fucompp
dec
jae
dec
iret
(bad)
and
add
repz
aad
cli
push
arpl
bound
sar
and
mul
(bad)
push
(bad)
mov
ret
adc
add
pop
(bad)
ss
je
(bad)
repz
sti
out
out
and
bound
(bad)
inc
cmp
(bad)
mov
sub
std
jne
dec
mov
std
mov
pop
xor
pop
ret
inc
outs
mov
push
pop
adc
je
scas
nop
mov
pop
ja
mov
adc
xlat
adc
ret
mov
data16
xchg
jbe
adc
add
jb
ret
stos
rol
(bad)
cmp
push
outs
dec
add
adc
adc
test
(bad)
cli
hlt
fcomip
mov
add
ja
add
popa
fs
and
inc
mov
mov
fld
call
fs
pop
push
mov
jge
mov
mov
aad
test
push
scas
xchg
(bad)
jmp
dec
jg
or
(bad)
mov
mov
mov
adc
jle
dec
retf
or
jmp
push
cmp
adc
mov
fimul
xor
(bad)
add
dec
adc
nop
and
push
inc
mov
sbb
jg
std
pop
cli
push
sub
push
je
mov
sub
inc
xor
pop
cwde
addr16
add
dec
pop
xchg
les
stc
sar
push
and
add
dec
call
add
stos
dec
pusha
mov
or
test
mov
outs
cmc
dec
mov
push
inc
pop
xor
jl
loopne
inc
push
hlt
jb
or
aas
sbb
inc
sub
add
(bad)
movs
pop
dec
push
inc
inc
outs
xchg
sbb
sbb
adc
pop
xchg
mov
jl
mov
scas
les
mov
(bad)
rol
fistp
cmp
cmp
pop
mov
add
add
mov
sub
push
lods
jg
sub
jo
pop
aas
jb
push
inc
push
scas
cmc
push
out
out
sbb
repz
aas
adc
adc
sbb
push
in
bound
pop
out
inc
inc
xchg
fs
dec
pop
aas
mov
test
xchg
add
aas
cmc
pop
or
jb
cld
das
jp
fadd
add
cmp
out
cli
popa
mov
pop
push
add
push
rcr
popa
sub
inc
out
xlat
dec
fsub
inc
movs
adc
pusha
mov
sub
inc
(bad)
outs
clc
jg
sbb
push
push
pop
mov
jmp
xchg
add
sbb
js
adc
push
cli
adc
enter
ins
dec
push
(bad)
adc
in
cli
sbb
inc
xor
addr16
add
arpl
jae
push
mov
outs
out
mov
rol
push
mov
into
les
comiss
mov
out
test
(bad)
fadd
adc
inc
sub
inc
adc
push
dec
add
push
jo
jmp
cld
ret
push
mov
xor
imul
and
ret
push
inc
mov
inc
arpl
pop
shr
cmc
inc
jmp
test
pop
mov
mov
jmp
inc
scas
loopne
jo
out
out
inc
jo
aad
or
add
daa
mov
shr
jl
xchg
sahf
ins
sub
inc
(bad)
jg
lock
inc
mov
pop
inc
and
mov
mov
jo
mov
xchg
rcl
test
hlt
push
arpl
cdq
popf
mov
aad
add
and
mov
sub
std
push
ror
out
pop
cmp
mov
jmp
mov
pop
jg
(bad)
es
or
sbb
dec
aam
shr
inc
aas
xchg
add
sti
in
cmp
add
clc
mov
jb
sti
aaa
mov
scas
adc
outs
stos
sub
inc
add
jmp
ficom
cmp
ds
or
(bad)
pop
sub
mov
or
pop
push
inc
xor
shl
(bad)
and
inc
ud2
pusha
cwde
fadd
xchg
adc
push
addr16
push
out
cmc
or
and
push
(bad)
mov
loopne
mov
je
adc
or
cmp
or
push
mov
inc
add
enter
sub
xor
outs
mov
cmp
lds
pop
inc
inc
push
push
jl
adc
(bad)
stos
and
jno
and
mov
push
or
retf
or
bound
xchg
jmp
pop
loopne
xchg
rcr
cwde
xor
push
jp
push
mov
pop
shr
fsubr
loopne
call
addr16
mov
inc
inc
xchg
cdq
call
cdq
call
and
mov
leave
pusha
jbe
ret
inc
xchg
inc
cwde
test
inc
or
mov
dec
fs
or
sbb
inc
test
mov
xor
push
scas
mov
into
pop
push
lock
test
pop
lahf
xor
jecxz
imul
inc
mov
cmps
pusha
cld
xchg
and
jmp
(bad)
xlat
outs
push
jp
pop
std
inc
lahf
add
(bad)
add
aas
sub
adc
inc
imul
dec
imul
cld
clc
adc
lahf
ins
sub
inc
push
daa
cld
(bad)
nop
ins
sbb
adc
inc
sbb
and
or
or
dec
jle
add
lods
js
mov
jb
jae
and
cs
call
pusha
mov
cmp
xchg
aas
mov
jbe
or
icebp
in
jmp
xor
jmp
cmp
pusha
inc
clc
ja
clc
aam
dec
mov
test
and
inc
inc
add
add
mov
psrld
sbb
lds
jp
mov
push
ret
pop
push
adc
dec
fcmovb
out
imul
aaa
add
inc
arpl
sbb
dec
mov
outs
or
fwait
cmp
mov
push
jg
mov
add
or
sub
sbb
scas
push
test
dec
inc
adc
adc
test
aaa
test
inc
sar
movs
jae
repz
mov
outs
retf
mov
pop
add
das
cs
inc
jge
jp
bound
push
mov
fld
push
push
xor
mov
idiv
inc
ret
call
adc
mov
icebp
sub
lods
icebp
sub
test
sub
inc
fcom
push
adc
inc
jae
xor
mov
push
arpl
push
addr16
pusha
mov
mov
ret
inc
neg
sub
stos
sbb
fmul
push
mov
cmp
inc
in
clc
std
hlt
imul
inc
aas
pop
xor
sub
clc
call
or
pop
jmp
mov
pusha
inc
aas
inc
cmp
jmp
das
rcr
cmp
lds
or
pop
mov
loopne
sub
jne
xchg
xchg
add
dec
pop
push
and
and
or
sahf
cmp
out
mov
inc
cmp
inc
or
adc
mov
cwde
stos
mov
fs
mov
xchg
inc
(bad)
fidiv
mov
cld
scas
pop
in
jmp
xchg
out
push
inc
jmp
clc
ret
cld
scas
jmp
pop
pop
(bad)
or
pop
sbb
ret
inc
mov
and
mov
inc
aaa
mov
lea
dec
push
mov
or
push
dec
mov
mov
sub
dec
add
mov
jae
arpl
mov
pusha
mov
rol
or
mov
push
push
cld
aaa
clc
fwait
push
and
push
jmp
jno
movd
push
rcl
cmc
popf
fmul
jno
pop
add
pop
neg
dec
pop
outs
mov
jp
rcr
jo
out
imul
or
js
mov
or
inc
add
sub
jb
psrlw
pop
pop
inc
repnz
stos
scas
lds
push
(bad)
jg
or
or
jae
(bad)
sti
xor
sbb
dec
sub
add
out
rcl
(bad)
add
add
(bad)
gs
xor
jnp
add
add
push
stos
pop
std
(bad)
out
std
pusha
add
aad
retf
push
and
ins
or
and
lods
or
fisttp
lock
adc
pop
call
mov
or
push
xchg
pop
test
call
(bad)
mov
mov
cmp
dec
lea
call
jmp
sub
add
scas
das
mov
push
stos
sar
push
sub
adc
test
fisub
(bad)
pop
mov
cmp
pop
ret
aaa
dec
push
ja
jg
xchg
je
mov
mov
js
loope
das
cmp
inc
add
inc
add
jae
mov
inc
out
mov
jmp
jo
dec
or
add
scas
pop
push
mov
inc
inc
(bad)
out
pop
push
outs
and
in
adc
mov
adc
push
add
xor
inc
ret
dec
push
or
xchg
pushf
sub
dec
in
inc
lods
and
push
mov
sti
aas
ret
mov
fbstp
inc
mov
pop
ret
mov
pop
pop
sahf
call
test
ret
cmps
call
pop
inc
fist
test
inc
mov
(bad)
jl
into
mov
or
pop
push
xchg
xchg
xchg
ret
push
pop
mov
gs
mov
pop
pop
or
push
jge
push
jo
jae
push
sti
scas
sub
sbb
cs
xor
es
pop
pop
mov
lods
(bad)
not
call
mov
cld
fwait
aam
push
imul
pusha
mov
or
push
aam
adc
out
cmps
pop
push
mov
cli
xor
ror
movs
nop
and
(bad)
dec
fst
add
outs
data16
xor
pop
jmp
add
dec
mov
outs
popa
xchg
sub
mov
(bad)
aaa
push
dec
pusha
xor
rol
pop
scas
fs
cmovb
sbb
push
pop
pop
aad
push
inc
(bad)
ficomp
daa
xor
pop
jne
dec
inc
stc
scas
jmp
imul
mov
pop
ja
call
and
hlt
lds
pop
movs
adc
jo
mov
outs
xlat
ja
je
sbb
push
mov
pushf
pop
jmp
dec
or
out
dec
pop
addr16
jnp
stc
pop
inc
inc
add
outs
jle
ret
add
xchg
(bad)
push
int3
inc
clc
mov
imul
rcr
inc
out
rol
inc
sbb
add
and
rcl
push
fcom
sar
(bad)
lock
std
push
cmp
and
push
sub
enter
sub
cmp
cmp
xlat
clc
add
lds
inc
pop
dec
mov
call
add
add
jl
and
or
inc
fidiv
pop
mov
jae
les
xor
jl
fiadd
(bad)
jg
cwde
(bad)
mov
sub
mov
out
bound
lods
ror
pusha
fs
(bad)
sbb
mov
pusha
(bad)
sti
sbb
aam
rol
outs
retf
add
pusha
sbb
lock
jmp
(bad)
rol
cmp
fld
jmp
mov
popa
pusha
mov
mov
pop
ret
or
inc
bnd
push
hlt
push
push
jmp
sbb
lock
das
imul
idiv
xor
sub
xor
lahf
pop
std
inc
push
mov
arpl
xor
add
cld
push
jmp
sti
(bad)
call
inc
enter
adc
shr
clc
test
dec
jg
push
mov
dec
add
out
and
cmps
add
mov
rol
aam
fadd
fmul
mov
inc
(bad)
out
movs
in
dec
repz
pop
gs
and
xchg
icebp
(bad)
pop
je
mov
imul
mov
out
mov
inc
adc
sbb
mov
xchg
ffree
inc
(bad)
inc
jg
(bad)
std
add
std
imul
lds
repz
mov
push
and
xor
iret
scas
inc
mov
fnstsw
inc
lods
push
push
xor
pop
aad
lods
or
jae
add
adc
xor
mov
sar
adc
inc
xchg
or
or
mov
lods
in
add
xor
pop
and
outs
adc
call
mov
out
je
(bad)
inc
div
dec
jno
lds
push
ins
and
and
arpl
adc
cmps
dec
je
in
push
adc
mov
das
xchg
mov
ror
push
outs
jl
pop
add
inc
mov
outs
cmps
sub
gs
inc
call
dec
bound
fidivr
mov
mov
mov
or
fs
retf
inc
repnz
inc
dec
add
inc
(bad)
and
rcl
mov
add
aam
stos
push
or
mov
ror
push
mov
std
cmp
out
jecxz
mov
sti
aaa
add
sar
add
je
out
imul
jae
out
jmp
mov
pop
pop
imul
cld
cld
mov
push
mov
cmp
(bad)
aaa
inc
mov
sub
pop
test
popf
jp
fs
push
mov
pop
enter
clc
inc
add
xchg
mov
mov
idiv
push
push
not
ret
inc
jmp
iret
inc
push
pop
(bad)
scas
mov
and
repz
ins
xchg
xor
pop
ret
add
cwde
inc
in
dec
mov
push
push
je
jb
hlt
jg
mov
fld
fidiv
imul
add
jno
(bad)
push
dec
js
adc
jg
push
mov
adc
les
dec
and
jae
or
pusha
popa
xlat
pop
push
xchg
pop
push
pop
push
adc
dec
(bad)
mov
dec
mov
cmp
jne
call
push
jmp
push
dec
ror
jmp
out
push
rol
jmp
inc
inc
fcomp
mov
aad
cmps
sti
aas
gs
out
push
sub
jo
sub
add
(bad)
outs
(bad)
or
xchg
inc
dec
je
mov
xor
xchg
jae
mov
lds
lds
adc
push
and
cli
rcl
pop
or
sub
test
add
mov
sub
jl
pop
push
cmc
popa
lock
xor
ins
cli
mov
adc
push
aaa
push
add
pop
retf
lock
xlat
scas
mov
fwait
mov
jmp
fcomp
push
mov
cmps
sbb
mov
(bad)
les
pop
cld
jb
add
xchg
(bad)
(bad)
sti
lea
push
ret
(bad)
jbe
inc
and
sub
push
or
and
call
gs
sbb
mov
mov
or
loop
and
aas
pop
push
push
pop
cvttps2pi
gs
call
lock
nop
out
pop
bound
ret
outs
sub
test
enter
jno
sub
push
push
dec
push
sub
fwait
(bad)
sbb
cwde
aas
and
or
(bad)
jmp
pop
add
dec
out
fld
inc
add
inc
in
mov
and
int3
pop
shl
dec
out
and
out
(bad)
jno
inc
sbb
inc
mov
push
js
pushf
mov
or
not
lods
or
shl
mov
push
push
sub
cmpxchg
lds
pop
add
inc
outs
jg
loop
inc
ror
add
pop
add
dec
aam
cmp
push
push
pop
jmp
repz
sar
sti
inc
test
pop
hlt
sbb
test
and
addr16
loope
test
sar
push
inc
(bad)
daa
adc
pop
jae
sub
jb
out
scas
jle
and
mov
nop
xor
add
ds
xchg
sub
out
into
add
dec
in
inc
inc
dec
inc
sti
inc
sub
ret
mov
sbb
mov
cwde
pop
adc
xor
mov
fs
std
push
das
ds
ficomp
push
mov
scas
push
outs
cli
mov
aas
lahf
add
(bad)
pop
push
mov
je
repz
cmp
(bad)
imul
ror
inc
aaa
xor
retf
idiv
inc
(bad)
mov
adc
je
dec
mov
push
pop
sub
(bad)
xchg
jmp
dec
or
syscall
sti
ja
aas
xor
adc
add
xor
pop
inc
add
inc
mov
add
lock
loopne
lock
std
retf
rol
jb
mov
repz
jp
dec
mov
jae
push
add
xor
hlt
pop
enter
mov
xor
leave
inc
push
test
nop
movs
pop
imul
xor
cwde
sub
pop
stos
mov
xchg
sahf
cmp
scas
(bad)
fs
fsubr
stc
mov
scas
rol
push
sub
mov
sbb
push
jg
data16
idiv
inc
mov
inc
lock
pop
jp
mov
test
pushf
rcr
add
add
pop
inc
mov
mov
or
or
push
ret
ror
sub
and
sti
repz
sbb
or
call
jno
mov
dec
inc
add
pop
inc
lock
cmp
push
adc
je
or
push
iret
add
pop
mov
fld
(bad)
cwde
cs
movs
pop
and
cmp
(bad)
push
dec
adc
inc
arpl
and
in
add
stos
add
xor
inc
sbb
lods
cmp
push
aas
stos
fcmovu
scas
push
adc
xchg
push
mov
cli
xchg
sbb
cmp
std
js
mov
add
mov
popf
pop
iret
xor
imul
and
or
(bad)
push
push
cmps
je
dec
push
leave
mov
pop
push
mov
aam
or
cli
add
and
ror
pusha
xchg
sti
mov
pop
xor
std
inc
push
xor
cmp
test
pop
addr16
or
adc
push
push
test
xchg
lock
pop
and
loop
arpl
xor
push
xchg
xchg
add
pop
imul
ins
lock
sar
add
jb
adc
stos
add
inc
add
push
mov
retf
aas
ds
bound
jmp
adc
aam
sbb
lods
addr16
dec
mov
mov
int
neg
adc
dec
stos
and
ret
aad
out
fwait
add
movs
ins
mov
pusha
sub
xchg
outs
js
cli
out
dec
push
pop
ret
aam
hlt
iret
adc
(bad)
hlt
or
or
data16
jg
ret
sbb
add
mov
cmp
lods
dec
test
sub
popf
and
dec
and
test
cs
jmp
pop
add
ror
and
arpl
cld
or
pop
ficomp
dec
or
ret
pop
imul
ror
pop
or
xchg
mov
(bad)
fiadd
cld
outs
outs
mov
es
push
fs
jne
(bad)
and
addr16
push
mov
call
std
and
jae
outs
pop
(bad)
sbb
pop
adc
push
xor
idiv
pop
and
or
xor
sbb
div
test
pusha
fnstenv
pop
sti
loope
add
cmp
or
push
sub
mov
in
sub
ins
or
mov
add
adc
je
inc
or
dec
inc
push
jl
cmp
nop
ss
cmp
das
shl
inc
nop
sub
pop
test
je
pop
pop
out
jl
aad
sub
iret
pop
sub
ss
sbb
dec
push
and
push
xor
mov
and
xor
cmp
or
loopne
mov
push
dec
ds
mov
pop
adc
sub
aaa
dec
jae
out
test
adc
inc
sbb
and
lods
(bad)
out
push
call
mov
mov
and
or
cmp
pushf
adc
mov
inc
inc
daa
add
call
push
jmp
inc
pop
rcl
js
es
movs
pop
xlat
fistp
push
pushf
push
daa
xor
mov
aad
(bad)
fiadd
es
xor
sbb
sbb
cld
pop
add
in
inc
push
sti
sub
shl
mov
sbb
out
push
jmp
jg
scas
aaa
push
add
ins
sbb
repz
shr
inc
mov
dec
xchg
mov
xchg
(bad)
out
push
mov
jae
ret
loopne
dec
pushf
addr16
mov
or
cld
jg
inc
sub
jbe
stc
mov
xchg
or
push
call
ret
gs
xor
pop
mov
movs
push
inc
add
pop
cld
call
xor
mov
push
cld
test
xchg
jmp
xor
loopne
or
pop
dec
call
mov
jnp
inc
rcr
(bad)
pop
lahf
loope
dec
or
ret
jae
(bad)
xchg
test
outs
(bad)
enter
pop
mov
(bad)
fadd
push
shl
icebp
dec
or
out
lea
mov
iret
add
out
icebp
adc
mov
pusha
or
sti
cmp
adc
and
inc
pop
or
push
jl
fsubr
loop
inc
inc
xchg
(bad)
cwde
jg
(bad)
cli
and
inc
mov
mov
mov
push
imul
inc
or
ds
inc
dec
fcom
cmp
xchg
dec
pop
jg
mov
add
repnz
push
sub
push
shr
mov
cs
sti
pop
stos
lods
cwde
add
das
test
mov
jg
icebp
inc
mov
sub
es
pop
mov
and
(bad)
mov
inc
sar
mov
cmp
jns
xor
mov
dec
mov
jae
push
jl
dec
dec
jge
inc
pusha
mov
sti
pop
adc
pop
and
push
xchg
push
cmp
sbb
mov
lock
nop
adc
arpl
jge
add
xchg
xchg
jo
lock
push
lods
adc
push
inc
adc
cmps
call
fimul
inc
push
push
push
cld
pop
add
dec
or
ins
xor
cld
jmp
(bad)
fstp
mov
inc
inc
je
xlat
imul
add
xchg
xchg
sbb
mov
pop
push
rcl
or
arpl
ret
popf
mov
test
jmp
(bad)
mov
adc
bound
mov
add
imul
out
jg
sub
or
add
push
or
jg
and
xor
arpl
jne
pop
sub
lahf
fld
sbb
sbb
inc
test
outs
pop
push
ret
iret
add
lods
and
aam
inc
lds
mov
out
lock
jb
jg
cmp
cmc
xor
jg
(bad)
sti
lahf
mov
jge
aas
ror
inc
adc
mov
jbe
inc
cmps
icebp
inc
hlt
add
inc
jecxz
jmp
sub
jo
mov
ins
or
das
jns
push
shr
adc
inc
fs
push
(bad)
das
pushf
fnsave
js
mov
test
loopne
jnp
aas
outs
pop
ss
pop
add
pop
cld
aas
pop
or
lods
push
inc
mov
(bad)
cmp
mov
jno
pop
mov
push
aad
xor
pop
sub
pop
add
imul
and
bound
clc
mov
and
hlt
ds
scas
(bad)
not
push
and
inc
popf
int3
mov
pop
mov
out
js
fcom
movs
add
push
ret
out
imul
adc
pop
je
add
mov
push
mov
dec
or
add
cwde
xlat
shr
inc
push
call
(bad)
mov
inc
add
or
gs
push
out
mov
dec
sub
data16
add
push
jmp
jmp
inc
jg
xchg
imul
clc
test
bswap
inc
mov
stos
repz
jmp
gs
sbb
shl
mov
xor
push
inc
popf
adc
mov
inc
jae
idiv
push
fild
xor
and
cmp
inc
cmp
mov
add
pop
pop
mov
push
dec
test
fnstcw
jecxz
sbb
out
or
and
aaa
or
xchg
push
or
ret
in
int3
imul
xor
out
push
push
inc
dec
clc
fisttp
cmp
jmp
mov
xchg
test
jb
add
and
mov
test
or
mov
or
(bad)
mov
ret
pop
pop
sbb
xor
mov
push
mov
xor
mov
mov
(bad)
ds
aaa
mov
add
or
xchg
shl
cs
stos
fiadd
fs
push
jb
adc
ja
cmc
mov
inc
pop
icebp
ja
pop
push
std
mov
dec
out
fbstp
mov
mov
popa
and
add
lahf
dec
push
sbb
inc
arpl
out
mov
(bad)
sbb
pop
push
out
mov
jne
push
cld
pop
aam
jbe
add
in
xor
loop
ja
or
inc
push
xchg
lds
add
pop
add
dec
mov
inc
arpl
dec
cld
retf
inc
les
sub
sbb
and
into
test
sub
xchg
mov
inc
gs
mov
inc
ins
add
jmp
mov
mov
add
mov
jecxz
xor
mov
cmp
js
sub
cmp
inc
pop
add
test
scas
movs
sub
push
cmp
pusha
es
jo
lahf
add
add
loopne
add
je
cmp
pop
xor
gs
dec
pop
xlat
sub
push
mov
pusha
add
fcmovnb
inc
arpl
jl
sti
cmp
push
pop
or
jmp
dec
test
inc
pop
das
cmp
dec
xor
(bad)
mov
(bad)
and
push
inc
iret
jecxz
ins
out
fdivr
and
and
lock
in
out
sub
xor
mov
or
test
adc
pop
jmp
scas
fwait
ins
pop
push
sahf
xor
sbb
mov
ror
push
jae
es
adc
fdivr
lock
ss
ret
call
adc
push
retf
inc
push
adc
daa
mov
cmp
mov
in
push
ret
push
adc
push
cld
(bad)
cmps
out
outs
pop
lahf
fadd
adc
push
mov
pop
sbb
(bad)
out
inc
ds
cmps
in
aam
sar
cmps
xor
pop
lds
cmp
pop
fdiv
aam
push
push
adc
jne
push
dec
inc
outs
add
test
and
push
adc
(bad)
mov
dec
ret
leave
and
pop
adc
aam
sti
jl
jmp
test
dec
push
pop
in
stos
in
sbb
inc
push
mov
push
cld
dec
adc
push
jae
push
push
(bad)
sub
push
xchg
call
icebp
es
adc
loope
pop
mov
cmp
fucom
in
pop
add
inc
outs
sub
scas
outs
icebp
ins
pop
and
test
or
dec
sbb
dec
gs
cli
pop
mov
or
stos
mov
push
stos
add
loopne
xor
stos
mov
sar
aaa
loop
test
inc
mov
mov
mov
push
push
dec
jp
pusha
repz
cmc
jbe
movs
add
dec
(bad)
in
neg
jo
inc
mov
sub
pop
pop
add
mov
movs
jl
ret
in
loopne
popa
push
(bad)
cmp
jae
rol
pushw
enter
add
mov
or
(bad)
adc
jo
inc
and
pop
out
fsubr
(bad)
jg
loop
dec
xor
aad
add
xlat
adc
jg
sti
shl
imul
mov
add
(bad)
ins
(bad)
aas
iret
mov
pop
jae
mov
mov
inc
ret
aas
add
mov
sbb
pop
mov
or
or
rol
jg
into
int3
and
push
data16
or
mov
cs
pop
dec
pushf
pop
and
aam
push
jmp
add
ret
xor
xchg
add
inc
mov
das
clc
adc
jb
push
push
inc
jp
(bad)
xor
mov
(bad)
icebp
shl
iret
add
je
xor
sbb
pop
sti
sbb
in
idiv
xor
mov
cmp
jle
aas
aas
inc
cmp
out
enter
sbb
lods
enter
clc
fisttp
dec
mov
pop
(bad)
cmp
retf
or
bound
or
pop
jg
test
push
mov
int3
mov
sub
mul
es
push
cmp
sar
jmp
jecxz
or
imul
add
and
ret
mov
push
xchg
scas
and
and
inc
add
push
push
sbb
pop
pop
jecxz
inc
mov
stc
pop
jl
imul
sub
mov
out
fcomip
cmp
loopne
rol
lock
js
or
popf
test
pop
mov
shr
adc
das
cli
pusha
inc
mov
push
cmp
push
add
inc
loopne
in
fcom
xor
mov
mov
adc
or
add
pop
sbb
jb
jmp
je
xor
es
jb
std
(bad)
jg
cmps
cmp
call
pop
int3
dec
fidiv
sbb
pop
pushf
div
inc
enter
push
das
js
push
es
sar
mov
push
cld
jmp
mov
mov
add
pop
sti
mov
and
mov
jnp
push
or
dec
and
mov
sub
adc
ficomp
pop
and
ins
out
adc
mov
jns
dec
cmc
sub
loop
sub
stos
lock
retf
xor
popa
lds
pop
repz
adc
mov
pusha
mov
loop
add
mov
adc
fadd
add
add
mov
dec
adc
pop
sub
or
mov
add
add
jne
out
(bad)
shr
dec
or
jne
out
pop
adc
stos
mov
add
call
cmp
test
mov
inc
mov
repnz
xchg
xchg
out
cli
cdq
sar
jnp
dec
(bad)
jmp
iret
pop
inc
jae
pop
cdq
sbb
lds
jle
dec
adc
ret
cmp
lods
and
cmc
(bad)
aas
shl
rol
mov
in
xchg
add
test
add
xchg
mov
add
mov
aas
movsx
adc
jns
add
lea
inc
push
mov
xchg
or
jnp
mov
push
cld
adc
mov
aas
pop
push
fcom
jle
loop
xchg
or
pop
push
cmp
or
sub
mov
lahf
ret
dec
adc
dec
jmp
xchg
fcmovu
cdq
add
lahf
sti
mov
inc
or
inc
shl
loope
push
mov
or
mov
add
add
adc
call
mov
aaa
ss
mov
mov
test
sti
push
jae
cmp
or
inc
add
xor
cmp
adc
push
cmp
popf
or
inc
jecxz
mov
out
movs
cmp
jb
mov
fcmovnb
adc
retf
clc
cmp
mov
add
fmul
sub
mov
add
icebp
call
jbe
mov
or
push
sub
dec
mov
(bad)
jg
or
pop
inc
xchg
fild
les
mov
outs
ret
mov
jbe
adc
adc
and
popf
shl
out
(bad)
jg
cmc
pop
mov
pop
ret
xor
push
sar
add
add
inc
jne
or
ror
push
ret
out
aad
xchg
les
mov
call
es
in
add
lock
or
repnz
xor
sti
mov
mov
pop
cli
push
sahf
pop
les
mov
adc
xchg
dec
xchg
cld
lods
pop
std
xchg
bound
sti
pop
dec
(bad)
in
xor
shl
and
push
es
inc
xor
push
call
inc
mov
aas
mov
sub
dec
(bad)
out
and
pop
inc
cli
add
test
(bad)
jmp
push
ss
and
jno
ret
jae
ds
add
mul
idiv
add
pop
ficom
push
test
mov
repz
lds
sbb
cs
push
mov
ds
out
inc
bound
xchg
mov
test
outs
push
mov
gs
adc
aad
or
add
movups
add
cwde
mov
push
push
aad
add
adc
test
sub
and
and
dec
mov
dec
js
cli
push
jmp
ret
lods
stos
mov
push
fdivr
je
or
out
add
in
push
mov
sbb
mov
repnz
sub
ss
shl
lea
idiv
out
and
aas
aas
push
test
stos
mov
fiadd
lods
ret
add
aaa
adc
jmp
outs
jmp
out
inc
add
repz
call
cs
xor
jmp
imul
arpl
push
pushf
les
das
cmp
int3
loop
xor
jge
retf
pop
leave
movs
loopne
lock
cmp
sub
and
icebp
out
pop
int3
xchg
mov
addr16
pop
pop
sub
pop
inc
dec
or
ror
mov
cmps
mov
dec
or
sub
xchg
xchg
cmp
fisttp
pop
or
mov
(bad)
fsub
push
mov
sbb
(bad)
(bad)
push
mov
mov
push
gs
int3
add
sub
jo
push
mov
sbb
not
movs
inc
jb
xor
cmp
xchg
jge
xchg
aad
sub
clc
jmp
inc
ja
push
mov
das
clc
inc
pop
mov
ror
sar
jecxz
aaa
in
cmp
mov
mov
mov
loopne
ins
rol
stc
push
pop
xchg
mov
fidivr
or
xor
pop
adc
and
leave
lock
(bad)
call
jecxz
sub
fisttp
sbb
mov
cmp
ins
cwde
and
(bad)
idiv
xchg
add
dec
in
mov
push
or
and
out
shl
lock
or
push
(bad)
in
and
push
mov
loopne
prefetcht1
sbb
fist
pop
xchg
xor
gs
sub
lea
sub
stc
jg
xor
push
mov
sbb
pop
ins
shl
push
or
xor
into
push
pop
mov
mov
icebp
mov
cmps
movs
dec
out
push
loopne
in
mov
or
add
clc
mov
mov
icebp
imul
aaa
outs
sub
in
add
repz
imul
ins
pop
mov
mov
inc
mov
mov
inc
push
dec
mov
(bad)
cmps
scas
push
push
sbb
outs
cmp
mov
mov
pop
mov
or
lock
and
dec
(bad)
jmp
xor
add
xchg
(bad)
stc
mov
xchg
push
mov
loop
mov
imul
lock
scas
add
adc
pop
jns
shl
dec
mov
es
mov
cli
mov
and
inc
mov
sub
add
(bad)
mov
add
xor
xor
or
inc
xor
mov
add
cmp
and
bound
call
mov
push
int
dec
or
xor
(bad)
or
cmp
push
pop
cli
je
dec
outs
sbb
es
in
xchg
push
jmp
call
or
xchg
xor
add
xchg
cmp
ret
(bad)
jb
stc
push
push
dec
or
inc
fiadd
mov
mov
push
std
xchg
fnstsw
les
or
mov
sub
mov
push
cmp
xor
pop
dec
sbb
sub
sub
int
push
jl
cmc
mov
push
jmp
bound
icebp
sbb
sub
fidivr
out
lea
xlat
mov
mov
add
js
ins
clc
inc
inc
push
fadd
push
call
cli
aad
bound
jmp
xor
fadd
xor
push
sub
mov
jmp
jb
sub
add
mov
xor
adc
or
repz
xor
adc
addr16
push
or
scas
fnstsw
ret
sti
sbb
adc
lock
mov
or
xchg
push
scas
ror
xchg
(bad)
jmp
hlt
dec
mov
iret
mov
hlt
jbe
enter
(bad)
mov
and
mov
add
mov
mov
push
rcr
call
(bad)
mov
ret
adc
push
add
or
cld
pop
mov
retfw
jle
mov
nop
call
mov
sub
dec
adc
rcl
jne
ffreep
pusha
mov
jns
jg
loop
das
sub
movs
lds
sub
mov
loopne
dec
inc
data16
scas
or
test
in
jmp
enter
cld
sbb
jle
or
xor
or
test
mov
call
jl
rcr
scas
and
or
scas
mov
idiv
dec
rcr
sub
mov
mov
cli
je
rcl
mov
add
leave
nop
aaa
mov
frstor
clc
outs
fidivr
iret
bts
pop
jb
data16
rcr
mov
or
push
mov
scas
mov
adc
mov
sub
mov
mov
sub
mov
xor
cmp
jbe
add
cli
jp
push
adc
or
pop
mov
push
pop
imul
pop
xor
neg
or
int
and
add
mov
mov
push
out
sbb
test
mov
xchg
push
stc
pop
mov
jnp
mov
or
or
add
xchg
xchg
or
lahf
(bad)
push
xlat
pusha
and
in
push
jg
repnz
js
mov
push
mov
(bad)
and
dec
mov
xchg
add
pop
dec
test
pop
mov
jle
inc
or
mov
cmp
or
scas
sbb
(bad)
mov
mov
ficomp
gs
pop
mov
fmul
sbb
call
imul
lods
dec
sub
push
jo
or
sub
mov
pop
nop
push
cld
push
ret
mov
pop
(bad)
push
mov
cld
add
int3
jae
out
and
push
imul
sbb
add
push
shl
ins
push
das
push
std
(bad)
mov
add
mov
xor
add
clc
shr
mov
jbe
or
cmp
inc
adc
aad
pop
loope
mov
mov
xchg
cmp
cmps
fbstp
add
add
not
or
movs
and
xchg
mov
add
aad
mov
adc
pop
push
push
add
add
rol
(bad)
push
mov
repnz
(bad)
fist
(bad)
push
jmp
xchg
inc
cmp
jo
sbb
into
cmps
cwde
mov
cwde
mov
mov
out
pop
xor
cld
jecxz
and
cmps
retf
in
push
pop
mov
call
mov
xchg
push
je
dec
xor
push
add
or
repnz
xor
scas
sub
jno
ret
call
mov
(bad)
add
stos
sub
loop
inc
out
das
inc
add
pop
sti
mov
repnz
es
les
ror
popf
fisttp
(bad)
cld
imul
out
pop
ret
fs
(bad)
fdivr
aas
mov
call
int3
mov
cmp
push
lock
lock
sbb
push
push
pop
inc
sub
and
mov
je
adc
mov
jmp
mov
hlt
and
push
fistp
xor
es
dec
inc
push
es
add
and
jecxz
dec
and
stc
push
pop
call
mov
add
shl
sbb
mov
(bad)
jle
or
push
std
sub
sbb
xchg
inc
sub
stos
xchg
mov
ins
aam
sbb
sbb
sub
(bad)
shr
pop
mov
pop
mov
jl
lods
mov
sbb
push
call
mov
xor
or
adc
pop
sub
mov
mov
xchg
mov
add
cwde
inc
int
shl
or
adc
mov
icebp
call
pop
mov
and
mov
rep
or
push
test
(bad)
out
add
mov
rcl
xchg
mov
mov
fwait
les
cmp
ins
lds
adc
cmp
and
sar
mov
cmps
sahf
mov
mov
add
clc
add
jl
mov
test
outs
pop
fs
push
push
les
retf
addr16
push
or
pop
push
cmp
mov
xor
add
inc
stos
enter
jne
lock
mov
loop
mov
repnz
push
mov
aas
add
pop
fiadd
push
or
xor
push
clc
ret
mov
xchg
push
cmp
test
test
rol
sub
mov
push
mov
push
aaa
dec
sub
push
cmp
jecxz
mov
shl
add
fsubr
fiadd
mov
lods
pop
popa
aad
fcomp
mov
(bad)
sub
and
sbb
stos
pop
add
mov
ds
add
add
cli
cmps
iret
add
adc
push
mov
add
and
sti
cld
or
mov
pop
cmc
fimul
sti
add
pop
stos
add
rcl
fild
sti
fcomip
and
pusha
xchg
inc
lahf
js
push
aad
inc
mov
fcomp
call
out
aaa
dec
xchg
or
add
push
mov
stos
and
sub
(bad)
(bad)
pop
rcl
pop
mov
mov
out
daa
pop
push
mov
mov
(bad)
sbb
inc
adc
or
add
jg
jmp
outs
mov
nop
ja
add
push
mov
test
xlat
cmp
ins
push
test
ds
dec
jo
mov
jge
push
repnz
xor
mov
xchg
or
loope
fsub
mov
pusha
call
and
lock
inc
ret
(bad)
mov
call
add
pop
inc
arpl
fdivrp
jg
adc
jo
cmp
mov
mov
push
add
push
dec
cmps
dec
and
jnp
fild
retf
mov
push
jmp
fs
cld
add
jnp
and
push
sbb
mov
sbb
(bad)
push
jo
push
fwait
repnz
xor
inc
mov
inc
push
dec
inc
(bad)
push
cmp
mov
enter
push
pop
mov
adc
hlt
movs
mov
push
nop
xchg
add
cmp
add
in
and
ret
or
mov
mov
xor
sbb
mov
adc
sub
push
or
xor
mov
out
sub
jo
mov
mov
inc
in
xor
outs
fidivr
test
ret
xor
adc
mov
add
rol
add
mov
(bad)
fisttp
jecxz
pop
cmp
sbb
sub
sub
(bad)
jmp
adc
and
sbb
and
and
sbb
adc
add
and
and
push
(bad)
(bad)
jg
adc
xchg
add
adc
xor
xor
cmp
inc
cmp
(bad)
inc
inc
inc
pop
dec
dec
push
push
push
push
dec
dec
inc
dec
dec
dec
inc
dec
pop
pop
push
inc
push
pusha
pop
call
outs
fs
imul
jb
jno
(bad)
(bad)
mov
jne
ins
push
mov
lods
iret
out
call
(bad)
lods
jge
(bad)
inc
mov
cli
test
mov
jecxz
fisub
in
(bad)
(bad)
(bad)
(bad)
(bad)
clc
or
out
int
jle
xor
out
retf
xchg
shl
nop
test
mov
cmc
mov
mov
loopne
movs
xchg
cwde
xchg
pop
cld
(bad)
call
ret
mov
jnp
(bad)
xlat
(bad)
stos
stc
cdq
cmps
xchg
lahf
stos
dec
ja
std
inc
push
inc
dec
dec
cwde
daa
sbb
retf
xchg
mov
sbb
xchg
adc
retf
push
out
lods
cmp
fmul
fidiv
sbb
mov
jmp
pop
inc
icebp
retf
enter
jo
idiv
inc
or
enter
call
cmp
adc
(bad)
call
or
inc
xchg
sub
and
bound
cli
in
inc
and
or
enter
es
xchg
xor
stc
xchg
pop
adc
out
adc
and
mov
in
xchg
add
xor
or
enter
sub
jle
cli
sbb
cwde
pop
jmp
or
mov
outs
jg
sti
mov
xor
push
sub
push
test
mov
call
add
mov
pop
add
sub
xchg
xchg
hlt
sub
fucomi
mov
cs
dec
xchg
je
pop
pop
pusha
xchg
scas
pop
fwait
or
xchg
jbe
loopne
out
cmps
xchg
test
adc
loop
xchg
dec
or
daa
in
add
aas
mov
sbb
sbb
inc
cwde
rcl
xchg
push
lock
add
xchg
dec
movs
push
ret
sub
pop
clc
fwait
inc
pop
or
inc
or
ret
jne
shl
inc
sbb
xchg
inc
inc
stos
xchg
add
mov
fimul
sub
imul
push
push
es
xchg
jo
jg
cs
dec
ficom
lods
sub
mov
fsub
mov
xchg
stos
lods
pop
sub
pop
imul
mov
out
sub
push
call
(bad)
push
dec
xor
xor
(bad)
ja
andnps
jmp
mov
dec
call
in
or
pusha
cmp
mov
sbb
cs
dec
sub
inc
sub
adc
mov
sahf
or
inc
gs
ss
jg
sub
pcmpgtw
out
sub
push
xchg
sub
add
pusha
sub
mov
out
and
outs
push
scas
fcomp
inc
cmp
add
pop
adc
inc
or
sub
jbe
ja
or
sbb
mov
data16
imul
push
inc
out
push
cmp
jno
or
adc
rcl
and
adc
inc
adc
test
push
cwde
sbb
clc
dec
in
inc
sub
daa
lods
les
sub
adc
or
jnp
out
div
cmp
and
push
mov
mov
push
push
sub
sub
mov
xor
or
adc
cdq
stos
push
dec
retf
or
(bad)
fadd
or
cmp
dec
cld
stos
push
push
jl
es
mov
sbb
sub
cmp
mov
repnz
push
ins
lods
shl
jb
and
ret
lds
lods
sub
mov
jp
mov
push
je
imul
and
div
ins
ins
add
lods
fidiv
iret
jbe
cmp
cdq
sub
dec
icebp
aas
inc
inc
adc
jno
jb
cmp
pusha
add
scas
pop
ins
(bad)
jb
lahf
mov
and
pop
inc
ins
into
(bad)
fcmovnbe
data16
pop
inc
ins
popa
jne
jns
and
pop
stc
lock
push
fs
outs
ins
arpl
push
stos
mov
dec
in
add
lods
sbb
or
imul
fdivr
mov
pop
dec
stos
mov
mov
pop
sbb
cmp
mov
push
push
in
add
adc
pop
mov
or
jle
fidivr
sub
adc
inc
push
xor
sub
jne
das
push
lds
and
js
daa
into
pop
mov
sbb
js
das
test
jne
xor
dec
xor
enter
(bad)
jne
fmul
cmc
sub
dec
mov
or
xor
ins
pop
fwait
or
out
xchg
lods
sub
push
xchg
sar
aam
and
(bad)
xor
add
jle
out
dec
cwde
mov
inc
ret
push
mov
icebp
jne
mov
cmps
xor
mov
adc
mov
aas
loopne
sbb
xchg
jmp
fsubr
mov
jnp
mov
push
pop
ins
rol
or
mov
imul
dec
add
adc
dec
mov
adc
xor
push
lods
mov
repnz
adc
add
or
out
mov
aam
dec
add
xchg
push
and
scas
outs
jg
pusha
adc
out
sbb
enter
in
inc
sub
scas
mov
pop
add
lods
retf
loopne
shr
mov
and
or
lods
call
push
push
(bad)
jne
call
shr
icebp
dec
dec
adc
hlt
dec
out
js
add
(bad)
stos
push
push
or
out
(bad)
je
std
and
sub
mov
out
sbb
adc
retf
icebp
dec
xor
inc
dec
jecxz
xlat
sub
push
fcom
mov
mov
mov
ja
out
and
dec
xor
fimul
add
or
ins
or
add
inc
inc
inc
inc
lods
push
loop
or
jle
cmp
retf
ds
push
scas
sbb
std
fistp
or
retf
inc
ja
jp
imul
jbe
jbe
push
in
push
adc
ins
je
adc
in
adc
jno
add
sub
inc
inc
es
sar
(bad)
sbb
add
pop
inc
push
fild
jge
or
sbb
mov
push
xchg
out
and
stos
push
cmp
lock
jo
nop/reserved
(bad)
fwait
cmp
or
cmp
sbb
adc
cs
adc
pop
mov
and
shl
stc
out
adc
push
push
inc
push
es
jo
test
jmp
ficom
enter
leave
sbb
or
inc
enter
outs
jne
add
ss
daa
mov
push
and
ds
aaa
sub
inc
adc
cmp
inc
inc
dec
push
sub
outs
mov
jp
dec
(bad)
pop
lahf
sub
imul
dec
(bad)
dec
cmp
jne
addr16
push
mov
aas
sub
pop
add
jns
xlat
ja
jb
bound
dec
pop
call
js
jmp
dec
lea
test
and
fild
aaa
mov
btr
icebp
test
push
(bad)
ud2
jb
jb
retf
add
jle
(bad)
jb
dec
out
sbb
jg
push
fst
add
jne
or
pop
and
test
outs
daa
in
mov
xchg
or
scas
dec
dec
dec
dec
test
mov
xlat
mov
dec
jmp
pop
mov
aas
(bad)
xor
loope
push
daa
or
mov
sbb
daa
in
out
jecxz
inc
fcomp
das
(bad)
mov
lods
in
sti
(bad)
call
sub
pop
fmul
fsub
inc
out
bound
daa
xchg
push
fsubr
push
retf
fcom
push
je
fsubr
scas
ret
jg
ds
into
xchg
xchg
sub
sub
sbb
dec
jo
(bad)
pusha
push
adc
sub
shl
fmul
and
cmp
or
or
fsubr
and
sub
shl
(bad)
fdivr
pop
fcomp
out
dec
or
dec
(bad)
fwait
je
cld
lods
xor
jno
mov
or
sbb
sub
and
mov
push
je
ss
loopne
mov
fnstsw
hlt
xchg
xchg
cwde
pop
push
cmp
inc
mov
push
pop
cli
fistp
idiv
ins
cmps
xchg
cmp
xchg
xchg
push
push
sub
mov
push
xchg
outs
sbb
or
mov
mov
ret
cmp
jae
sub
pop
repnz
push
xchg
sub
sbb
aaa
inc
repnz
push
add
fsub
fdivr
ror
pop
or
adc
je
sbb
retf
fcomp
mov
mov
stos
xchg
mov
mov
les
dec
lods
mov
xchg
sub
sbb
jge
mov
pop
jle
lahf
stos
fdivr
inc
int3
ds
jne
xchg
aam
icebp
mov
js
sar
inc
cwde
test
dec
xchg
neg
pushf
jo
cbw
xchg
inc
sub
pop
ja
dec
inc
xchg
fcomp
icebp
sub
test
pushf
ss
xlat
lahf
mov
jb
fs
pop
sbb
fild
xchg
les
shl
inc
and
cwde
mov
pop
js
sub
popf
mov
clc
mov
shr
mov
cmp
push
push
cmp
jp
or
(bad)
sbb
cmp
fucomip
pop
cwde
ret
xchg
or
fstp
loopne
jo
in
loopne
cmps
mov
sti
xchg
fist
jmp
sbb
imul
pop
inc
adc
xchg
mov
icebp
xchg
sahf
lods
scas
add
dec
jle
sbb
push
adc
or
xchg
rcr
pmaxub
xchg
pop
cmp
pop
jno
jge
sub
ins
ss
ins
pop
add
dec
retf
add
or
adc
sbb
and
popf
pushf
xchg
movntq
aad
loopne
pop
inc
or
xor
and
popa
sahf
nop
out
sti
inc
xchg
add
add
jp
xchg
or
push
jo
ret
jp
lahf
add
add
lea
or
out
ja
cmp
xor
xchg
(bad)
cmp
add
repnz
lahf
sahf
push
ins
sar
cmp
popf
add
cmc
mov
jle
aaa
mov
out
cmps
out
enter
cmps
xor
scas
sahf
std
jmp
ficom
jne
cld
jne
jno
sahf
je
and
daa
cwde
leave
pop
ins
pop
mov
add
cmps
out
cdq
jl
sub
mov
sbb
or
or
sub
add
lods
mov
add
pop
imul
(bad)
cmp
cmp
lods
nop
or
mov
loopne
push
cwde
and
js
push
xchg
retf
fwait
ds
mov
lea
jne
or
xor
(bad)
int3
jo
xlat
je
xchg
cmp
fnstcw
scas
cmc
js
xlat
out
mov
ds
ins
iret
addr16
test
inc
pop
sahf
inc
mov
jl
mov
sub
mov
pusha
xchg
and
aam
cli
(bad)
test
es
int
(bad)
test
pop
push
dec
inc
inc
lock
jno
loopne
push
or
push
or
sub
pusha
xor
jecxz
jmp
add
or
sbb
ss
not
ja
or
(bad)
fsub
test
xor
scas
xor
mov
jl
and
xchg
outs
(bad)
adc
iret
cvtpi2ps
ins
and
ja
or
mov
inc
push
call
int
jnp
sbb
mov
sti
add
inc
sbb
je
int
mov
js
pop
jp
add
xchg
adc
inc
inc
cs
push
push
ja
sub
in
outs
mov
arpl
stos
scas
jmp
pop
xchg
dec
pop
inc
test
and
mov
pusha
ja
mov
add
and
and
fadd
cs
cmp
cmps
test
and
sbb
and
fsubr
es
imul
js
mov
fisubr
rcr
(bad)
aam
call
sub
pusha
mov
neg
loopne
jo
add
adc
stc
clc
mov
xor
and
out
sub
stc
sub
in
pop
cmp
and
mov
sub
movs
sahf
mov
mov
adc
test
push
(bad)
sub
inc
cwde
or
sbb
jmp
xchg
lods
add
push
loopne
icebp
mov
mov
rcr
es
cmovo
fmul
and
sbb
sbb
out
sub
xchg
adc
and
outs
das
xchg
sbb
aad
jbe
cpuid
adc
stos
daa
mov
push
enter
jae
daa
stc
xchg
sub
stos
push
(bad)
mov
movs
adc
jne
xor
cmps
mov
mov
cmp
ficomp
fstp
jne
mov
ret
inc
dec
ins
or
mov
or
daa
cwde
in
sbb
cli
pop
sub
cli
aaa
stos
jbe
stos
mov
or
jmp
add
sbb
test
pop
jle
or
out
stos
xchg
xchg
pop
mov
xlat
add
mov
dec
mov
loopne
retf
xchg
hlt
icebp
lods
rdtsc
add
push
mov
xchg
out
jle
mov
out
cmp
daa
fcmovnbe
lock
cld
lods
inc
inc
shl
jne
mov
add
les
out
imul
push
clc
sbb
sub
fist
fst
sub
pop
push
sub
push
xchg
iret
mov
loopne
jp
and
cwde
imul
xor
call
fwait
cdq
enter
mov
sbb
pop
fsub
adc
sbb
push
push
sub
add
cmp
cmp
mov
cli
and
jecxz
fadd
mov
mov
movs
push
mov
add
out
mov
into
lods
push
lock
dec
mov
loopne
pop
es
je
jmp
xchg
xchg
cwde
jmp
cdq
or
sub
test
es
dec
xchg
es
ret
cmp
pusha
xchg
add
sbb
push
adc
or
sub
xchg
mov
mov
sub
sub
inc
sub
loope
loopne
pusha
cwde
mov
add
pop
add
mov
leave
shr
xor
xchg
retf
and
push
or
adc
test
shl
pop
out
mov
mov
jl
aad
stos
sub
popf
and
inc
iret
les
fdivr
cmp
div
mov
add
lea
int3
xor
fmul
mov
popf
sbb
fadd
push
jne
push
mov
lock
call
es
cmp
inc
cmps
add
mov
add
sub
add
aad
das
gs
dec
hlt
loope
sub
inc
out
sub
push
call
inc
mov
pop
(bad)
jmp
cmps
aam
hlt
lds
jnp
ds
add
es
sbb
cwde
mov
rol
add
cmps
add
movs
cwde
cmps
stos
popa
push
adc
mov
sbb
mov
or
repz
ja
adc
(bad)
fcom
scas
pop
dec
es
out
mov
pushf
(bad)
sbb
daa
or
cld
push
adc
xor
pop
or
jbe
sub
mov
out
pop
inc
scas
icebp
je
push
loopne
add
fsub
xchg
nop
jno
retf
inc
push
xchg
pushf
sub
daa
dec
push
add
or
xchg
pop
xor
ror
repz
add
popa
jp
fsub
push
add
mov
adc
fisubr
sub
adc
lock
inc
cmp
push
arpl
xadd
sbb
mov
das
fcomip
or
add
dec
ds
ja
clc
mov
fisub
push
aas
mov
out
or
mov
daa
and
aaa
sti
das
sahf
in
lock
pop
(bad)
sub
sbb
or
inc
xlat
sub
pxor
scas
sub
js
sbb
inc
xchg
shl
add
xchg
inc
or
ficom
sub
sub
xor
cmps
enter
push
cs
pandn
add
ret
xchg
stos
cmp
sub
je
ds
add
in
lods
sti
(bad)
call
cwde
sbb
test
cld
retf
fstp
dec
adc
test
mov
daa
cmp
(bad)
or
daa
adc
punpcklwd
loopne
inc
sbb
mov
lds
jecxz
jns
pop
or
and
ret
mov
pop
adc
imul
paddq
xchg
cwde
out
(bad)
mov
pop
or
mov
stos
or
xchg
and
xchg
mov
icebp
push
dec
movs
pop
jl
sbb
lods
push
pushf
sub
out
xchg
fstp
cmp
mov
sub
push
mov
sbb
cwde
(bad)
fld
cmp
xchg
fstp
pop
jmp
fsubr
cmp
mov
mov
push
xchg
adc
jmp
or
imul
jmp
adc
sbb
call
daa
sub
lahf
sbb
jnp
clc
push
cmp
and
je
mov
lods
mov
cld
sub
shl
sub
popa
push
out
fwait
cmp
aad
pop
push
add
jb
adc
aaa
jo
inc
pushf
mov
push
push
paddsb
or
inc
jg
test
les
mov
test
adc
aad
or
adc
out
add
mov
xchg
das
dec
xor
sbb
xchg
or
int3
mov
imul
add
or
cli
and
mov
add
aas
(bad)
in
lahf
sbb
xor
ret
stos
fwait
mov
xchg
scas
xchg
add
dec
mov
js
sbb
and
jmp
stc
mov
jo
cmps
mov
jns
retf
sbb
call
mov
out
or
fnsave
cmp
mov
ds
jne
loopne
jb
cwde
test
or
or
jnp
mov
dec
ss
sbb
sbb
push
xchg
into
and
add
xor
pushf
sbb
imul
push
bswap
div
arpl
xchg
dec
add
shl
mov
and
push
push
shl
add
push
das
cwde
xor
cld
ja
lock
jmp
or
in
in
xor
sub
xchg
xchg
out
popf
mov
mov
es
in
push
scas
mov
pop
je
xchg
ret
sbb
fmul
adc
or
jmp
aad
fsubr
out
sub
cmps
push
sub
xchg
lods
mov
fidiv
and
lock
call
or
in
sahf
sbb
pop
scas
and
xchg
sub
adc
mov
repnz
push
out
sub
cmps
mov
push
pop
test
mul
sub
and
cwde
in
dec
xor
ins
and
(bad)
pop
pop
pusha
repz
sbb
xchg
ds
mov
sub
es
inc
and
or
sbb
sub
ins
xchg
arpl
inc
inc
adc
xlat
shl
outs
and
in
mov
push
daa
out
mov
mov
adc
popf
xor
lods
dec
xchg
cwde
mov
adc
loopne
sub
pop
popf
sub
mov
cmp
test
mul
cdq
daa
mov
and
shl
in
push
push
test
not
(bad)
mov
lods
push
or
or
jb
xchg
ret
dec
push
rcr
enter
out
inc
pavgb
inc
inc
push
push
xchg
mov
gs
leave
cmc
ins
or
add
shl
adc
or
push
je
pop
xchg
mov
adc
mov
adc
fld
in
js
sub
imul
xchg
lahf
mov
pop
xchg
in
mov
out
fisttp
gs
mov
sbb
clc
fdiv
mov
sub
sub
aas
ret
mov
fnsave
mov
ss
inc
add
rcl
mov
inc
in
push
pop
xchg
sub
and
lods
lods
jp
ror
nop
sar
in
add
in
mov
pop
push
je
repnz
xchg
les
inc
xchg
cmps
retf
jb
in
fidiv
add
in
inc
sbb
jne
lock
aaa
push
call
pop
and
push
push
jne
dec
jnp
xor
push
dec
and
div
cmps
inc
sahf
jne
mov
mov
std
out
ss
push
sbb
sbb
push
fdivrp
push
mov
jne
ror
daa
fidiv
pusha
add
mov
push
stos
xchg
inc
mov
and
pop
mov
xchg
adc
(bad)
lock
push
scas
mov
sub
repz
aaa
fldpi
or
rcr
scas
jmp
sub
es
js
or
xchg
arpl
adc
sbb
test
or
je
test
sbb
das
mov
mov
cmp
inc
mov
test
xchg
sbb
cwde
xor
call
movs
add
sub
imul
mov
fs
add
cwde
mov
fmul
pop
mov
ret
gs
sahf
enter
mov
out
cmp
fisubr
mov
push
xchg
sub
pop
push
dec
inc
pop
fdiv
(bad)
(bad)
jmp
bound
data16
ja
pop
dec
inc
push
add
dec
push
outs
jp
pop
outs
jb
mov
rcr
mov
ins
jns
jne
push
sub
icebp
sbb
pop
jo
pusha
aaa
movs
add
addr16
enter
mov
ret
add
or
jns
bound
push
xor
jns
loope
jns
les
push
shl
cmp
dec
xchg
out
(bad)
out
fdiv
clc
xchg
push
mov
dec
out
xchg
mov
dec
mov
fadd
rcl
dec
xchg
pusha
mov
sub
adc
add
pop
cmp
dec
mov
mov
lds
push
add
cmp
sbb
lods
dec
xor
add
loop
pop
fdiv
jmp
cmp
imul
test
out
sub
in
inc
pop
(bad)
push
add
rcl
push
adc
adc
add
cld
cmp
add
sbb
enter
cmps
inc
call
outs
mov
and
dec
cli
mov
adc
cld
push
cld
dec
bound
or
out
add
fsubr
or
sar
scas
pop
icebp
ret
ins
or
jne
jle
lods
inc
dec
push
cwde
sbb
sub
movs
iret
push
dec
(bad)
aam
daa
sbb
out
inc
dec
(bad)
das
outs
ja
cwde
push
push
out
mov
ins
and
mov
dec
(bad)
loopne
mov
jmp
push
mov
jnp
and
js
cmp
movs
push
iret
cs
repz
popa
retf
sub
es
dec
xchg
mov
es
mov
mov
push
sbb
xor
je
or
enter
ins
fsub
add
sbb
add
int3
ficomp
movs
loopne
xor
adc
dec
aas
xchg
adc
mov
push
mov
mov
cmp
sbb
(bad)
mov
test
sub
xchg
cwde
or
or
pop
call
movs
fcom
sub
into
lods
xor
xor
ror
push
add
dec
add
out
shl
aam
cmc
enter
nop
arpl
jne
ins
pop
and
adc
(bad)
call
jg
jns
jne
out
sub
dec
aaa
fst
sub
dec
cmp
adc
inc
ja
or
mov
pop
mov
cwde
out
sub
(bad)
or
cli
mov
pop
sub
pop
sub
adc
out
mov
div
clc
pop
mov
pop
xchg
in
dec
push
xchg
clc
mul
fmul
andps
xchg
int3
call
addr16
pop
jne
pop
into
in
push
xchg
push
cwde
inc
sub
lods
js
adc
cmps
inc
mov
outs
hlt
xchg
in
ss
in
retf
sub
lahf
mov
pop
sub
out
imul
or
xchg
(bad)
ins
adc
pop
enter
imul
movs
lods
nop
and
int3
aaa
pop
jb
cmps
push
xchg
bound
add
cwde
outs
mov
and
push
inc
or
leave
inc
xor
jl
inc
or
inc
mov
sub
enter
pop
inc
sbb
jge
and
or
inc
dec
(bad)
mov
pop
sbb
cwde
sub
mov
and
or
lods
sti
(bad)
sub
inc
sbb
mov
or
(bad)
push
mov
push
test
mov
and
and
mov
dec
std
outs
les
test
test
mov
daa
test
movs
cmc
scas
inc
add
xchg
dec
sets
sub
mov
sbb
jbe
loope
fmul
xor
scas
fild
outs
push
pop
outs
cdq
sbb
retf
or
jp
jno
(bad)
inc
or
movs
mov
adc
xor
rcl
cli
mov
lea
stos
inc
push
leave
int
xor
dec
sub
xchg
mov
pusha
cmp
cli
ja
cmp
ja
ficom
cmp
jecxz
xor
dec
push
ror
push
repnz
add
mov
hlt
sbb
xlat
and
xchg
push
lahf
cmp
pop
fisubr
xchg
call
cs
fdiv
push
imul
xor
and
mov
mov
mov
loop
loop
sahf
lahf
hlt
push
mov
jecxz
pop
push
xchg
ss
mov
adc
cmp
mov
fadd
leave
pop
mov
mov
nop
dec
push
ins
dec
js
imul
retf
aad
xchg
sbb
outs
neg
fmul
ss
and
or
jl
push
retf
imul
out
cmovs
das
test
lahf
dec
sbb
imul
jmp
and
cmp
and
mov
jne
cmp
mov
jmp
lods
dec
ret
pop
movs
pop
lds
inc
adc
mov
out
add
adc
inc
jle
xor
ds
stos
adc
fisub
cmp
mov
inc
xor
jle
push
out
sub
xchg
and
fidiv
ss
out
in
sub
es
rcr
cmps
xchg
mov
push
(bad)
add
je
add
retf
xchg
lds
fucom
not
(bad)
adc
icebp
out
cwde
sub
xchg
mov
bound
cmps
clc
outs
loop
cmps
fidiv
pop
or
sub
push
xor
mov
push
sub
xchg
pop
lods
inc
or
lods
sub
adc
sub
je
cmps
int
push
mov
mov
pop
ja
js
cwde
into
fld
jmp
xor
cmp
jae
push
out
mov
sub
jge
push
add
jmp
mov
rcr
adc
sub
jo
les
ret
icebp
hlt
iret
inc
lock
xchg
cwde
push
and
and
cwde
scas
xchg
mov
dec
fisub
dec
cli
adc
push
je
push
sbb
adc
sub
sbb
jecxz
in
push
repnz
push
test
or
cmp
sub
sub
sbb
ror
sub
adc
in
inc
mov
sar
or
lahf
cmps
push
push
daa
lock
xchg
sub
outs
clc
pop
xchg
mov
cmps
ret
pop
xchg
ins
and
ficomp
push
inc
mov
push
inc
xchg
xchg
pop
push
(bad)
neg
mov
dec
mov
adc
lods
inc
stos
cwde
cld
mov
push
pop
push
stc
fstp
xchg
sbb
xchg
sub
or
mov
push
js
dec
je
adc
inc
push
popf
sbb
inc
xchg
xchg
ret
push
push
dec
and
in
pop
xlat
in
push
mov
imul
xchg
pop
js
sub
xchg
and
pop
and
xlat
mov
inc
fcomp
stos
or
sub
das
xor
xchg
push
adc
pop
stos
popf
cs
call
imul
sub
fcom
mov
or
push
cmp
xor
mov
dec
loop
dec
repz
frstor
das
ja
and
inc
xchg
test
stos
enter
jle
or
mov
lods
sbb
sub
mov
repnz
loope
jle
(bad)
fisttp
mov
nop
cwde
dec
add
fstp
(bad)
mov
sub
add
es
mov
cmp
pop
mov
dec
fadd
push
(bad)
sub
retf
add
dec
jne
aas
push
sbb
or
jne
sub
in
add
inc
add
mov
add
push
sbb
lea
pop
rcr
cmc
mov
mov
mov
sbb
push
pop
xchg
lea
cmps
sbb
cmp
jne
dec
mov
xor
push
or
mov
outs
js
(bad)
sti
xchg
arpl
pop
xchg
sbb
xor
pusha
cwde
daa
pusha
not
xchg
mov
ret
outs
cwde
ret
shl
lds
cmp
xchg
cmps
neg
mov
cmp
jne
cmp
jne
into
mov
xlat
icebp
mov
aam
xchg
inc
xchg
sub
mov
adc
movs
mov
push
sbb
rcr
sub
jl
push
mov
lahf
in
push
lahf
loope
les
lds
push
fistp
mov
aaa
and
mov
or
fwait
std
fwait
shr
sbb
push
xchg
xor
rcl
loopne
test
mov
ins
shl
test
pop
sub
push
mov
lahf
push
mov
fdivr
sub
push
add
push
lock
je
js
btc
mov
adc
and
lods
fisttp
or
icebp
hlt
loopne
jp
loop
ja
jo
call
mov
add
push
out
sahf
jle
xchg
adc
push
push
jne
dec
mov
sbb
dec
mov
or
xchg
outs
call
and
xor
lahf
je
dec
sub
lods
movs
jge
sti
out
jo
sbb
mov
aam
and
out
out
pusha
push
pop
pmaxsw
sbb
aas
gs
mov
pop
enter
jg
out
add
jbe
adc
call
cmp
pop
sbb
mov
scas
sbb
mov
adc
test
pusha
fdiv
hlt
retf
movs
sbb
mov
xchg
push
(bad)
inc
add
push
mov
push
add
loope
or
and
adc
adc
mov
mov
stos
aaa
inc
pusha
fidivr
stc
icebp
lds
xchg
cs
in
xchg
dec
xchg
dec
mov
cmp
cmc
xchg
jo
dec
sbb
cwde
je
xor
test
lods
sub
pop
rol
sbb
imul
push
sbb
out
(bad)
shr
xchg
dec
xchg
pop
mov
daa
inc
mov
jle
jb
sub
fcom
pusha
jne
sbb
loope
cmp
push
imul
jg
bound
cmp
xchg
dec
inc
movs
sub
jle
pop
out
je
cmp
sbb
pusha
in
les
imul
jnp
aaa
dec
cwde
cmps
cdq
fbld
cdq
pop
(bad)
push
lock
mov
lahf
or
inc
xchg
cdq
aam
sub
push
ds
push
mov
and
outs
shl
dec
cwde
retf
call
adc
pop
mov
in
daa
xchg
pusha
push
cld
inc
cwde
retf
hlt
or
xlat
imul
fimul
in
xchg
cmc
mov
addr16
pop
push
mov
cdq
mov
or
inc
(bad)
xchg
adc
xchg
sub
sbb
shl
dec
dec
cwde
xor
cmp
cmp
sub
pop
mov
gs
mov
sbb
int
aaa
sub
sbb
sub
add
sbb
dec
mov
mov
sahf
nop
jle
add
aam
ret
loopne
mov
sub
cwde
push
adc
mov
and
nop
xchg
nop
push
or
out
adc
sbb
cmc
cwde
add
jp
mov
jne
xchg
dec
sbb
xor
outs
gs
add
gs
adc
(bad)
mov
arpl
add
mov
stos
icebp
or
inc
lahf
sahf
cmps
sbb
lods
frstor
fcomp
call
add
cmp
push
je
sbb
sub
push
or
cwde
fs
nop
xchg
out
add
push
aas
mov
daa
inc
int3
repz
adc
push
sub
sub
and
jmp
sub
cld
cmp
and
push
cmp
or
es
pop
in
enter
loope
aad
shr
sub
cwde
ds
xchg
push
sbb
leave
jecxz
jecxz
jl
ins
push
jg
out
loope
mov
push
sbb
mov
pop
jmp
mov
int3
aas
sub
test
dec
jb
dec
popf
add
and
(bad)
adc
mov
mov
sub
xchg
or
cmp
jne
cmp
jne
cmp
stos
or
push
cmp
jne
test
fucomi
lods
sti
js
mov
stos
mov
call
or
and
ret
mov
xchg
inc
adc
inc
sub
mov
adc
cs
xchg
fbld
test
cwde
pop
mov
jnp
inc
sub
pop
mov
out
pop
mov
dec
xchg
mov
ds
pop
ins
pop
xchg
scas
or
xchg
push
xchg
mov
shl
dec
mov
les
push
mov
cmp
pusha
adc
jb
or
(bad)
cwde
nop
loopne
mov
add
fxch
mov
sub
jb
add
ret
cmp
inc
sub
mov
inc
daa
lods
or
int3
pop
(bad)
push
xchg
adc
outs
sbb
mov
or
js
jle
sbb
jns
out
mov
jb
add
stos
add
jne
fidiv
mov
cmove
and
pshufw
aaa
call
(bad)
mov
or
(bad)
pop
sbb
arpl
mov
adc
mov
imul
arpl
lock
out
sub
mov
cli
jg
aaa
fnstenv
hlt
mov
ret
sub
mov
scas
mov
ins
sbb
cmp
out
jb
lock
fwait
(bad)
mov
or
(bad)
call
neg
add
mov
cdq
cdq
xor
(bad)
xchg
popfw
xor
mov
test
or
adc
or
xchg
or
enter
sub
pop
dec
sets
mov
mov
mov
in
push
add
retf
sbb
adc
popf
enter
cli
je
mov
push
or
jmp
jne
not
in
aam
icebp
mov
adc
out
in
push
in
pop
pop
cmp
jp
xchg
icebp
push
outs
test
add
mov
add
lods
adc
lock
add
xchg
int3
cmp
xchg
cmp
jg
mov
dec
stos
je
data16
test
jp
pushf
inc
es
int
sub
mov
inc
iret
add
stos
jecxz
add
mov
std
or
xchg
pop
inc
dec
inc
xor
inc
shr
push
js
dec
mov
xchg
and
and
mov
pop
jne
das
int3
nop
cmps
inc
inc
loopne
loop
and
shr
jno
sub
mov
or
cmp
xchg
fmul
stos
jg
push
add
or
out
xchg
out
cs
(bad)
out
xchg
sub
push
dec
push
push
jg
aas
adc
mov
inc
call
xor
shr
push
jbe
(bad)
pusha
adc
jo
xchg
cld
icebp
sbb
jbe
push
xchg
jbe
inc
sbb
and
cmps
out
test
mov
sbb
aam
adc
imul
sahf
retf
xor
add
lahf
neg
lahf
cmp
or
cmp
jl
or
rcr
push
in
xchg
mov
out
fiadd
je
mov
jmp
push
out
cmp
mov
sysexit
ss
jg
cmp
inc
js
cwde
shl
jp
cmp
test
out
stos
mov
sub
add
in
cmps
jge
sub
jecxz
pop
scas
push
xchg
fidivr
xchg
dec
push
mov
loopne
cwde
jae
fidiv
dec
je
fdiv
out
push
pop
(bad)
mov
dec
dec
int
or
or
and
cmps
sbb
pop
or
out
(bad)
cwde
aaa
in
(bad)
sbb
in
rol
push
add
sub
push
imul
out
jecxz
and
ffree
in
mov
dec
loope
retf
sbb
push
jl
mov
scas
pop
dec
mov
fsub
add
(bad)
out
sti
repz
push
push
cmp
jmp
sbb
das
fistp
inc
mov
bound
cwde
pop
dec
outs
add
xchg
cmp
jb
nop
push
mov
push
mov
pop
push
cmovno
in
in
push
dec
push
fs
mov
(bad)
out
das
inc
sub
inc
sbb
add
test
gs
add
test
stos
adc
and
loop
cmp
std
fisttp
adc
push
jns
es
push
inc
cld
(bad)
sti
dec
mov
sub
push
add
inc
inc
aam
hlt
loopne
add
aaa
xchg
xor
mov
ror
mov
pop
(bad)
(bad)
jg
push
loopne
jg
mul
jno
data16
(bad)
xchg
or
fsub
or
ss
push
(bad)
out
(bad)
push
push
mov
dec
jecxz
(bad)
inc
outs
fstp
scas
rcl
(bad)
push
dec
jecxz
add
mov
sub
fs
into
cmc
call
mov
cmp
xor
loopne
sbb
cld
cs
jo
frstor
mov
dec
add
loopne
pop
cld
sbb
das
add
into
outs
loop
or
fidiv
adc
dec
fbstp
jl
and
das
test
dec
in
in
jae
or
(bad)
idiv
xor
push
push
push
sub
daa
cmp
push
jg
ins
adc
jbe
push
pop
lock
or
xor
add
inc
test
dec
xor
push
pusha
dec
scas
ficom
mov
or
jno
or
push
cld
(bad)
push
imul
(bad)
xchg
xchg
or
je
mov
gs
mov
shr
push
(bad)
imul
daa
jg
jg
dec
stos
or
fsubr
ins
dec
lods
call
mov
imul
fidivr
mov
fsub
pop
pop
movs
lock
ins
sub
adc
jno
mov
in
test
into
mov
xor
inc
repz
das
mov
mov
or
adc
das
sub
sbb
(bad)
sbb
fisub
and
jae
or
js
cld
cld
test
or
or
add
test
in
gs
call
call
cmp
data16
ficom
retf
test
dec
gs
mov
pop
or
or
dec
inc
inc
sub
dec
xor
and
or
popa
and
jmp
stos
push
mov
retf
cdq
add
outs
outs
mov
mov
data16
inc
mov
xchg
mov
xlat
pop
fs
stos
sub
cld
pop
stc
inc
mov
sbb
cmc
adc
mov
add
stos
dec
xor
cmp
add
int
inc
cdq
adc
mov
mov
xor
popf
sar
shl
pop
jno
sbb
xchg
jge
push
pop
pusha
jno
pop
fbld
retf
mov
in
fs
es
sub
lods
pop
mov
sub
sbb
sti
mov
aas
fcom
sub
add
shl
fldenv
push
add
ror
data16
call
(bad)
inc
xchg
mov
daa
mov
enter
mov
mov
call
loopne
je
je
repz
push
or
jg
cdq
or
pop
cld
mov
push
xor
(bad)
sub
ret
retf
outs
push
mov
push
call
inc
mov
sub
pop
gs
data16
adc
xor
push
pop
ficom
int
stc
cdq
adc
sti
sti
sbb
xchg
push
retf
xchg
nop
dec
nop
(bad)
(bad)
cld
push
xchg
mov
scas
mov
add
adc
retf
arpl
call
lock
lea
scas
jmp
cmp
loop
call
jmp
repnz
ret
dec
es
or
stos
jo
mov
or
add
dec
jmp
push
pop
pusha
sti
push
movs
lahf
xor
or
add
(bad)
inc
xor
xchg
ins
out
push
fisubr
add
lds
lods
cdq
jae
into
mov
outs
sub
mov
dec
xor
cmp
add
mov
xor
dec
push
or
fs
in
daa
adc
adc
sbb
jo
sahf
lods
nop
daa
cmp
fwait
jg
jg
fs
inc
or
mov
loopne
scas
push
stc
test
dec
fbld
xchg
retf
retf
sub
aaa
sub
or
mov
and
xor
sub
mov
not
mov
scas
aam
xor
repz
xor
out
inc
stos
into
and
sbb
mov
mov
mov
jmp
add
ss
out
add
push
in
cmp
outs
icebp
loop
cmps
enter
dec
xor
or
test
jg
adc
dec
mov
push
xchg
in
or
ret
xchg
sub
adc
xor
jg
mov
stc
jmp
jns
stos
outs
mov
sbb
lods
adc
push
sbb
mov
or
xchg
sbb
add
jmp
data16
adc
inc
shl
fistp
imul
xchg
pushw
ds
jmp
test
and
ret
outs
jb
mov
sbb
sti
cmps
cmp
mov
push
cmp
jmp
fdivr
xor
push
mov
sub
xor
mov
ss
push
sub
aam
lods
dec
sbb
into
mov
mov
outs
mov
pop
pop
pop
fbstp
stos
jmp
adc
repz
jmp
aad
mov
push
lods
retf
fs
call
das
cwde
je
mov
test
mov
mov
mov
ret
into
add
push
in
xor
popa
dec
add
iret
mov
das
push
and
ins
add
sbb
sbb
add
jg
jg
fs
mov
jno
xchg
jecxz
or
dec
fdiv
lods
inc
outs
sbb
mov
push
jae
mov
pop
jl
xchg
bound
pop
inc
and
xchg
dec
push
shl
adc
fsub
retf
retf
add
lock
jmp
sub
cmp
call
inc
cmc
test
jecxz
jae
cdq
jo
idiv
push
or
int
sub
jmp
loop
out
loope
movs
push
in
fbstp
pop
loope
or
pop
jbe
sbb
push
dec
add
and
adc
or
mov
or
and
aam
push
xor
xor
mov
mov
sbb
lock
push
or
add
(bad)
outs
fsubr
and
dec
(bad)
fild
and
inc
mov
push
push
push
inc
push
fidiv
push
out
or
or
stos
outs
mov
es
cld
jb
mov
cwde
(bad)
(bad)
cwde
jnp
jecxz
ins
ficomp
es
pusha
cwde
xor
jb
mov
test
pop
ss
add
add
inc
cmp
mov
iret
add
sub
stos
mov
je
cwde
out
rol
outs
mov
aam
inc
adc
jmp
or
mov
movs
fisub
xchg
add
sbb
inc
ds
out
inc
loop
aas
cmp
(bad)
inc
cwde
fwait
mov
stc
add
dec
iret
inc
mov
push
ja
mov
sbb
and
dec
out
push
lods
mov
cwde
inc
repnz
add
add
inc
or
stos
pop
push
imul
ins
pop
fistp
jge
pop
cwde
mov
in
aaa
popa
addr16
push
jo
popf
(bad)
int3
mov
cmp
je
lods
xor
sub
clc
sub
jg
or
jmp
popa
push
sub
in
xor
pop
ror
mov
mov
sbb
loop
shr
xchg
mov
push
or
and
repz
or
sub
or
sub
sti
mov
inc
call
pop
dec
pop
punpckhdq
js
mov
mov
mov
ins
push
shl
arpl
or
pop
iret
mov
sub
inc
dec
stos
je
inc
cwde
sar
in
aaa
jle
mov
dec
mov
sub
xor
loop
sbb
call
lahf
jo
xchg
and
(bad)
stc
fild
and
ins
mov
dec
jl
pop
adc
adc
nop
scas
lds
cwde
xor
cmps
stos
jns
shl
fcomp
popa
mov
dec
push
mov
ror
outs
pop
mov
aas
mov
push
xor
cmp
push
push
jle
nop
ds
ja
mov
sbb
inc
lahf
or
jge
fisubr
fnsave
push
pop
mov
sub
in
mov
or
mov
mov
frstor
or
cmp
xor
jne
mov
jle
dec
xchg
movs
push
dec
sahf
sub
pop
pop
test
mov
dec
je
ins
jo
stc
dec
inc
nop
scas
rcr
sbb
aaa
cld
jge
inc
push
cmp
jmp
fcomp
icebp
adc
mov
xor
in
push
not
mov
sub
and
retf
test
cmp
setne
fild
mov
retf
push
retf
xchg
xchg
in
(bad)
cwde
jmp
int
mov
mov
cwde
mov
jno
cwde
cs
fisttp
out
test
cwde
sti
scas
outs
movs
pop
outs
mov
retf
dec
or
fwait
mov
cwde
lods
cmp
repz
jmp
es
cmps
cwde
xor
aaa
xchg
pusha
cmps
mov
xchg
fucomip
and
mov
cwde
xor
xchg
retf
out
(bad)
cwde
hlt
retf
sub
cs
mov
cwde
test
fidiv
int
movs
push
in
(bad)
cwde
xchg
cmp
mov
neg
push
int3
cwde
les
clc
out
dec
aas
mov
xor
lods
xchg
not
mov
mov
sbb
inc
call
call
fstp
fnstsw
into
jecxz
add
or
jl
mov
(bad)
iret
push
mov
pop
idiv
nop
xor
sbb
cmp
sub
test
repnz
test
das
cld
xchg
xor
push
or
ins
ins
(bad)
aad
dec
mov
aas
clc
sbb
jg
xor
into
and
(bad)
jg
add
sbb
in
add
jae
enter
xor
aas
mov
mov
loopne
push
shl
jno
add
adc
cdq
inc
dec
inc
iret
mov
inc
call
sub
inc
dec
aad
xor
cmp
push
jg
in
adc
jg
xchg
je
(bad)
jge
test
add
mov
add
or
stc
add
or
pop
loopne
jg
out
(bad)
add
(bad)
cmps
shr
dec
sub
xlat
mov
(bad)
push
or
jbe
xor
cld
dec
dec
fidivr
das
imul
adc
test
mov
push
push
pop
fs
jns
es
push
(bad)
repz
mov
int
mov
or
daa
push
fimul
test
push
mov
adc
sbb
xor
pop
sub
call
std
out
mov
or
pop
clc
pusha
cmp
fisub
fdivr
test
daa
fnstcw
dec
aam
dec
jns
scas
or
das
push
fcomp
inc
push
out
sub
xchg
jg
adc
dec
std
sbb
ror
push
fst
int
jmp
loopne
daa
pop
add
xchg
add
xor
fst
push
loopne
jg
sub
jbe
adc
aad
mov
out
mov
and
enter
jae
push
jg
adc
data16
stc
push
add
je
xor
sub
xor
ins
call
(bad)
xchg
jge
mov
sub
or
ins
inc
fs
mov
xor
jae
int
js
xor
cmp
scas
adc
retf
in
jg
scas
loop
popa
sti
xor
(bad)
jge
or
mov
shl
retf
aaa
mov
mov
add
scas
jg
jns
xor
pop
pop
mov
and
int
dec
adc
icebp
mov
or
xchg
loopne
and
adc
hlt
mov
jbe
jecxz
scas
stos
out
add
out
shl
jle
out
pop
jg
aas
cmps
sub
dec
addr16
mov
sub
cmc
fldcw
xchg
imul
scas
test
pop
scas
push
(bad)
inc
dec
aam
aam
pop
sub
sub
test
jne
(bad)
jg
jg
fsubr
fs
jg
add
enter
jb
out
sub
pop
push
add
add
fdiv
sub
mov
ss
scas
jbe
(bad)
jg
outs
or
jmp
fisubr
or
repz
jns
cmc
adc
or
adc
int
push
into
or
(bad)
stos
ds
adc
push
or
es
adc
mov
fdivrp
push
or
or
push
mov
or
popa
cld
add
or
fldenv
push
or
adc
xchg
xor
scas
fs
fisubr
rep
stos
mov
sub
mov
jl
push
in
sub
(bad)
(bad)
mov
rcr
inc
adc
loop
test
mov
dec
dec
fisttp
sub
fild
in
fisubr
mov
add
add
aaa
(bad)
sbb
es
or
repnz
push
cmc
inc
dec
add
int
inc
mov
test
ror
xor
jne
aas
adc
femms
cmp
mov
push
jo
aaa
jmp
popa
ja
jo
lods
pop
aam
push
js
jle
inc
stos
scas
or
mov
or
xor
xor
sub
mov
sub
cmp
pop
cmp
ror
sub
push
fst
lods
dec
stos
add
repz
inc
aas
stos
cwde
cli
fcomi
jbe
add
cmp
enter
adc
fwait
test
xchg
xor
loope
imul
inc
add
mov
cmps
cmp
retf
shl
xor
out
mov
mov
xchg
mov
sbb
sbb
xchg
daa
repnz
(bad)
stos
fdivr
rcl
call
fdiv
scas
mov
test
lea
test
cwde
pusha
icebp
cwde
mov
mov
retf
pop
xor
xchg
fwait
retf
or
cwde
fadd
sub
or
jmp
xor
xchg
xor
cwde
pusha
test
xchg
fwait
retf
fcomip
scas
int
mov
xchg
out
leave
cwde
or
aaa
xchg
rol
cwde
(bad)
fst
cmps
sbb
aaa
mov
je
cwde
mov
ds
xchg
ror
pop
cmps
jle
mov
jl
mov
push
mov
pushf
mov
mov
cld
jbe
mov
push
cwde
pop
mov
lahf
out
dec
mov
push
dec
out
rcl
daa
aam
(bad)
out
sar
jle
jmp
ins
and
push
cwde
and
ss
dec
je
call
cdq
gs
cmps
jp
push
stc
mov
jecxz
xor
test
xchg
mov
loopne
in
(bad)
fstp
fstp
sub
inc
ror
arpl
xchg
retf
mov
dec
and
pop
in
addr16
mov
test
jmp
ja
in
dec
push
add
ss
sub
(bad)
icebp
cwde
call
in
dec
jb
test
ret
mov
sbb
cs
push
pop
cmp
aas
cmps
movs
mov
mov
pop
inc
loopne
das
nop
daa
das
xchg
mov
in
jecxz
retf
push
or
mov
pusha
xchg
btc
sbb
nop
stos
neg
mov
and
cmp
cs
jge
cmp
shl
into
jle
dec
in
fadd
aam
dec
cmp
push
pop
repnz
mov
rcl
mov
mov
adc
dec
pop
cmp
std
pop
int
pop
idiv
and
or
sub
xor
push
pop
inc
inc
imul
xchg
push
movs
mov
fcomp
mov
movs
pop
(bad)
jmp
in
mov
xchg
inc
ja
enter
(bad)
out
mov
fs
jb
inc
cmps
adc
xor
cmp
dec
push
sbb
mov
stos
jl
dec
push
xchg
add
scas
lock
sub
retf
(bad)
mov
push
mov
jns
ins
or
xchg
cmps
mov
push
test
pop
and
cmc
mov
push
ds
cmc
jne
std
cmc
sub
push
xchg
aad
cmp
jne
movs
imul
icebp
inc
xor
(bad)
mov
in
lock
mov
fs
fwait
add
sub
out
sub
stos
loopne
fisub
sbb
movs
inc
xchg
rcl
xor
fcom
std
sahf
hlt
mov
fnstsw
test
mov
sub
je
mov
movs
mov
sub
xchg
xchg
mov
fs
mov
adc
in
icebp
pop
mov
xchg
mov
scas
mov
mov
ror
sub
xchg
scas
mov
(bad)
mov
pop
fist
dec
(bad)
mov
mov
xor
js
pop
xchg
jbe
cwde
stc
mov
hlt
or
pusha
out
pop
jp
bound
pop
stc
shl
mov
gs
mov
ins
xchg
aam
ja
xchg
inc
mov
mov
and
push
add
jo
sub
add
loopne
jo
push
stos
mov
sahf
retf
inc
ja
dec
jmp
push
or
nop
(bad)
mov
inc
call
lods
imul
gs
pusha
ins
dec
mov
into
shl
shr
cwde
fild
push
(bad)
frstor
jns
jecxz
ret
lods
call
mov
out
dec
addr16
or
sti
pop
push
mov
and
xchg
xchg
dec
jmp
pop
jmp
fild
mov
mov
cwde
pop
add
rcr
aam
int
sub
or
lods
aam
mov
cmp
aas
pop
dec
mov
add
or
out
cmp
lahf
cwde
aaa
call
aad
add
cwde
ret
(bad)
mov
mul
mov
dec
test
pop
sbb
fst
cwde
imul
sbb
das
jecxz
sbb
xor
or
push
test
inc
pop
push
inc
das
or
or
daa
stos
pop
sub
and
pop
add
jge
push
adc
lock
jns
jo
adc
jmp
xchg
das
xchg
xchg
mov
rol
(bad)
lds
xlat
jmp
icebp
push
shl
pop
dec
mov
cmp
jne
fiadd
movs
loopne
sbb
imul
dec
call
mov
ds
xor
sub
pop
mov
mov
or
cmp
mov
mov
cmps
or
daa
in
mov
test
mov
cmp
or
ja
cs
aaa
cmp
adc
rol
test
inc
aas
push
push
inc
push
push
mov
mov
xor
xchg
or
add
stos
sub
idiv
xchg
add
xchg
loopne
mov
test
push
je
stos
add
int3
outs
gs
mov
shl
out
push
sub
sbb
fsubp
add
mov
rol
fnsave
call
and
scas
cmp
data16
mov
addr16
push
repnz
cwde
mov
mov
and
adc
ret
adc
rol
push
pop
sbb
sbb
movs
xor
test
xlat
push
sub
xchg
or
ret
jmp
jge
xchg
ss
mov
(bad)
(bad)
int
fiadd
call
shl
dec
sbb
mov
cwde
xchg
test
cwde
cli
or
sub
cwde
and
inc
aas
outs
sub
mov
mov
loopne
(bad)
mov
mov
inc
mov
sbb
and
jp
loopne
sub
mov
sub
and
sbb
cwde
in
inc
pop
pop
push
ja
push
cmp
aas
pop
add
cmp
out
in
inc
out
dec
jecxz
mov
retf
mov
jbe
nop
cmp
shl
cwde
fdivr
push
inc
cs
cmp
fimul
cmp
xchg
popa
fist
test
sti
mov
and
jg
retf
cmp
mov
repz
sub
jns
in
mov
xor
dec
int3
cmp
or
or
test
aaa
add
jmp
mov
ud0
repnz
pusha
mov
sbb
fldenv
inc
and
cmps
hlt
scas
cmps
or
push
ret
fbld
jecxz
(bad)
pop
jecxz
daa
repz
jnp
xor
add
daa
sub
or
adc
stos
les
mov
call
scas
mov
push
pop
adc
retf
sbb
sub
sub
mov
or
(bad)
femms
xor
sub
dec
nop
outs
adc
sub
in
push
jecxz
add
inc
mov
ja
sbb
xlat
mov
adc
and
lea
ja
push
jb
shl
pop
push
mov
scas
jl
jecxz
jb
xchg
xchg
xchg
int3
fnsave
call
inc
arpl
sub
mov
mov
test
xor
(bad)
xchg
ja
sub
pop
inc
push
sbb
mov
push
dec
mov
pushf
pop
adc
jmp
(bad)
out
push
lahf
sub
sbb
fadd
dec
rcl
fsub
loopne
inc
je
sub
jp
mov
mov
scas
mov
lods
cmp
ins
sub
rol
mov
cmp
inc
sbb
pop
push
es
sub
cs
repnz
inc
mov
daa
neg
ins
(bad)
or
inc
in
cmp
cmps
sub
ret
in
mov
adc
jbe
das
cwde
inc
sbb
or
aas
fs
or
repnz
xchg
fdivr
sbb
js
in
aam
xchg
outs
test
xor
out
das
xchg
inc
add
xchg
xchg
inc
add
push
jb
fist
pop
mov
pop
mov
retf
mov
mov
xlat
repz
xchg
mov
mov
movaps
sti
mov
int
popa
and
lds
enter
and
push
fst
cmp
sub
ret
pop
sbb
cmps
je
je
or
sar
jl
imul
adc
mov
add
xlat
cmp
xor
fxch
scas
repz
sbb
mov
lods
pop
inc
xor
mov
xchg
shl
mov
sbb
pop
jl
shr
int
sbb
sbb
ficom
(bad)
cwde
cmps
ja
(bad)
dec
jb
adc
push
adc
or
jo
mul
xchg
das
mov
(bad)
cld
adc
sbb
push
movs
adc
inc
or
fnstsw
popf
push
dec
arpl
jne
fbld
push
cmp
adc
ja
jns
sub
out
xchg
xchg
pop
jns
aas
movs
call
xor
add
mov
imul
jl
movs
pop
push
retf
int
jecxz
cmc
xchg
ins
xchg
sub
(bad)
popa
fdiv
repnz
ss
sub
addr16
movs
push
test
jle
int3
or
inc
fcom
daa
aaa
call
inc
cwde
jecxz
or
inc
ret
push
sub
or
mov
addr16
ja
push
(bad)
jnp
add
aam
jne
pushf
inc
sahf
cmp
sar
rcl
sahf
and
retf
(bad)
jns
cmp
rcl
aam
aam
pusha
xchg
cmp
aam
lods
retf
adc
inc
add
inc
mov
clc
dec
inc
push
jno
add
mov
fmul
(bad)
fwait
cmp
cwde
and
and
mov
mov
jg
sub
xchg
mov
inc
movs
pop
mov
jne
jle
adc
cmp
inc
movs
jnp
sahf
push
daa
xor
adc
es
in
adc
jne
sti
sbb
adc
pop
dec
mov
mov
jecxz
imul
lds
test
movaps
outs
xchg
ror
pop
jne
int
aas
test
add
cmp
fild
cs
push
int
rol
xlat
sbb
fwait
and
or
pop
jno
xchg
retf
and
cwde
mov
movs
repnz
retf
out
xchg
retf
and
sub
retf
enter
enter
fnstcw
movs
mov
cs
pop
mov
mov
fwait
cmps
jge
jno
shl
mov
xchg
icebp
push
rcr
cmp
cmp
test
dec
sub
xchg
pop
push
inc
sub
sbb
fnsave
repnz
cld
sar
xchg
dec
ror
mov
aaa
bts
je
ror
and
loopne
test
adc
dec
xchg
aaa
stos
mov
fdiv
in
out
fwait
or
int
cmp
fs
adc
add
cs
or
cmps
imul
dec
imul
aas
lock
mov
ret
push
adc
jecxz
cmp
std
cmp
inc
inc
mov
fistp
and
push
xchg
push
test
adc
fld
imul
cmp
mov
or
add
call
add
stos
or
pop
popa
mov
lods
mov
cmc
mov
dec
inc
add
dec
pop
fsubr
and
push
cmp
dec
daa
jg
scas
fiadd
out
mov
sbb
pop
mov
fcmovu
pop
inc
mov
push
sub
inc
test
int
jnp
dec
ret
and
cld
or
sub
in
sbb
mov
cmp
mov
sbb
popf
jmp
cmp
cmp
xchg
pop
imul
js
xchg
jl
loop
pop
inc
or
pop
(bad)
lea
cdq
out
mov
ja
and
ret
fwait
cmp
adc
mov
adc
jno
shl
and
push
stos
push
push
xor
sub
retf
jo
lea
xchg
cwde
mov
addr16
inc
sbb
lds
pop
bound
mov
mov
retf
and
or
sub
mov
mov
call
xor
dec
xchg
pushf
pop
je
push
jle
arpl
xor
fldenv
call
dec
xchg
pop
es
fs
add
out
mov
cwde
sbb
adc
outs
ret
dec
push
cmc
push
setns
ret
imul
add
and
ret
outs
out
dec
cmp
jb
sbb
mov
pop
push
imul
ffreep
push
or
mov
cmp
push
cmp
mov
das
ss
cmp
cli
(bad)
mov
or
lods
lock
aaa
out
push
data16
fnstsw
div
je
or
comiss
lock
pop
or
inc
popf
repnz
(bad)
mov
mov
stc
ss
or
xchg
fnstsw
in
mov
jns
xchg
arpl
jmp
cmp
rcr
enter
inc
out
or
(bad)
cs
aam
adc
adc
rol
repnz
(bad)
stc
sub
jle
push
loope
cwde
pop
repnz
jmp
mov
or
aaa
in
pop
mov
mov
jge
xchg
adc
cld
iret
(bad)
cmp
idiv
cwde
fsubr
xchg
in
adc
mov
cmc
mov
retf
xor
call
jg
pop
sub
push
mov
cmp
outs
(bad)
(bad)
(bad)
dec
int3
dec
cmp
shl
popa
loope
cmp
push
xchg
nop
xchg
int3
sbb
pop
lock
jmp
xor
es
jecxz
cmp
mov
and
jg
and
inc
cmp
cmp
xchg
jg
push
movs
cmp
push
push
cmp
sub
fadd
inc
push
ffreep
xchg
mov
(bad)
jg
test
push
popf
add
sub
cs
jo
push
xor
cld
(bad)
fbld
mov
add
jg
mov
push
cld
(bad)
or
pop
mov
test
or
(bad)
(bad)
(bad)
(bad)
mov
push
cmps
std
retf
push
and
stos
mov
mov
inc
mov
in
bound
aad
dec
jmp
fisub
add
mov
ds
cmc
(bad)
push
inc
xchg
jmp
sbb
je
into
je
mov
das
cli
outs
push
sti
cld
xor
int
mov
inc
xchg
pop
cmp
jmp
cmp
loope
xor
push
xchg
mov
pop
fdivr
(bad)
aad
xchg
jl
pop
fstp
adc
sub
and
jno
and
(bad)
repnz
ret
ins
cmc
mov
dec
hlt
push
hlt
iret
xchg
mov
aaa
dec
(bad)
idiv
cmp
mov
fld
inc
cmp
jne
inc
int
mov
add
add
mov
outs
lahf
lods
(bad)
push
xchg
add
outs
fld
push
mov
mov
sbb
or
data16
(bad)
neg
loopne
sub
lods
cmp
lahf
sub
test
ficomp
stos
xor
xchg
dec
aad
inc
push
loopne
sub
mov
aad
neg
mov
es
push
push
push
test
mov
mov
aad
std
ins
pop
pcmpgtw
push
fnsave
cwde
inc
(bad)
lods
aas
popf
leave
test
es
sbb
idiv
fisttp
ja
adc
mov
mov
cwde
or
xchg
rdmsr
jmp
mov
inc
mov
shl
aaa
sbb
outs
pusha
xchg
hlt
xor
sub
adc
add
je
es
sbb
inc
adc
jo
inc
cmp
out
and
sets
lock
xlat
adc
cmp
adc
cmp
lahf
xchg
dec
push
out
ret
cwde
pop
fidivr
addr16
and
xchg
mov
push
iret
dec
(bad)
jg
inc
jne
xchg
add
popf
fst
mov
mov
inc
push
sub
idiv
test
add
mul
pushf
fsub
and
(bad)
in
cmp
or
and
push
inc
ja
jle
adc
sbb
fnstsw
and
sbb
mov
inc
sbb
fsub
add
and
cmp
shl
(bad)
or
stos
mov
sbb
ret
ret
sub
js
or
clc
cmp
cmp
push
pop
sahf
pop
rol
lods
jle
or
repnz
out
sub
call
xchg
retf
in
or
inc
pop
push
pop
les
rol
stos
and
aas
icebp
nop
lods
cmps
add
fcomp
adc
lahf
add
push
retf
add
addr16
call
int
pop
push
jmp
ja
js
xchg
call
retf
dec
inc
fbld
xchg
inc
inc
clc
pop
mov
mov
dec
pop
mov
jne
mov
push
stos
lahf
mov
push
inc
movs
inc
push
jle
shr
pop
push
shl
inc
retf
mov
cmp
xchg
or
jmp
clc
jmp
ret
cmp
or
dec
daa
sub
push
adc
sbb
jb
repz
adc
cmp
cmp
iret
sbb
dec
and
pop
sub
retf
jecxz
gs
inc
cmp
enter
push
test
ret
mov
cwde
xchg
retf
add
adc
int3
push
rcr
int
sub
cmps
dec
sub
int
sbb
mov
popa
sub
in
cmp
push
jp
je
or
or
jge
mov
int3
ja
cld
pop
cwde
imul
aas
xchg
out
sbb
pop
idiv
mov
sbb
stos
in
leave
xbegin
push
fistp
ins
add
jno
add
inc
xor
lea
(bad)
aaa
push
fisub
mov
stc
inc
jg
imul
cmp
push
cmps
add
inc
mov
cmp
push
inc
xor
stos
cmps
mov
add
inc
mov
jmp
enter
xchg
mov
out
bound
sbb
inc
test
outs
cmp
jno
xor
daa
in
mov
lock
dec
sbb
and
or
adc
jle
cmp
shl
mov
in
(bad)
cwde
or
je
mov
and
cwde
cmp
shl
out
dec
inc
mov
das
fwait
push
sti
xchg
dec
scas
dec
rol
and
movs
popf
mov
test
mov
in
fiadd
push
xor
pop
add
xchg
cld
in
dec
and
sbb
clc
int3
out
push
jecxz
repz
lock
ss
in
cwde
fmulp
or
dec
(bad)
sub
ror
push
test
or
pushf
sub
add
adc
pop
adc
imul
fst
test
or
mov
aas
stos
cs
pop
fscale
sub
mov
mov
sub
push
inc
mov
and
popa
das
pop
pop
cld
test
or
rcl
xchg
sbb
sbb
in
jb
or
push
mov
pop
push
mov
mov
cmp
jbe
mov
test
adc
add
scas
lock
cwde
or
js
cli
shl
jecxz
mul
outs
or
or
xchg
(bad)
je
xchg
ja
mov
jns
(bad)
hlt
push
in
push
cmc
and
and
je
cmp
pop
cwde
mov
or
sub
sbb
fisttp
cmp
ret
pushf
cmp
jge
mov
push
add
cmc
sbb
sbb
inc
or
push
dec
sbb
fs
jmp
loop
mov
in
mov
shl
das
jl
(bad)
mov
imul
xchg
iret
cmps
movs
out
gs
loop
jle
inc
cmps
jl
ret
xor
xchg
push
sub
enter
shl
icebp
mov
and
dec
ror
mov
mov
dec
mov
mov
mov
dec
push
sbb
jnp
and
jbe
cmp
pop
fld
push
sub
(bad)
and
test
aaa
enter
test
sbb
jno
ins
clc
test
jno
in
jecxz
stc
jle
mov
hlt
pop
retf
jmp
scas
push
inc
cmp
pop
xchg
icebp
xlat
inc
xor
dec
aad
pop
ror
(bad)
jns
adc
cmc
cld
or
ret
outs
aas
push
(bad)
das
sbb
xchg
ins
fsubp
inc
daa
sbb
cwde
stos
mov
dec
jmp
lahf
dec
push
pushw
mov
adc
adc
pop
fcomp
cwde
lea
adc
ret
test
mov
nop
lds
fmul
xchg
(bad)
je
and
in
cmp
cmp
mov
repnz
fdivr
stc
fadd
bound
jmp
bound
mov
je
ror
cmp
add
cmp
or
adc
pop
jno
fild
ja
sub
jecxz
ins
inc
rcl
sbb
ds
aam
cmovbe
addps
cmp
in
not
cmps
sbb
cmp
push
sbb
xor
inc
jmp
cmp
sub
xlat
mov
push
pop
add
je
dec
mov
test
push
push
mov
leave
rcl
sbb
retf
push
shl
fldenv
out
xchg
jb
jle
(bad)
(bad)
fld
push
lock
mov
mov
adc
mov
movs
outs
div
repz
(bad)
cmp
movs
jg
sbb
sub
and
mov
or
in
mov
sbb
sub
stos
mov
lods
pop
ja
xchg
sub
mov
add
iret
pop
mov
jl
ja
xchg
test
minps
add
leave
adc
jge
rol
xchg
lods
lock
(bad)
js
and
adc
ins
mov
aas
inc
(bad)
jmp
xchg
add
and
sub
sbb
xchg
cwde
imul
loopne
jg
sahf
popf
out
das
xchg
dec
(bad)
inc
in
xor
imul
pop
idiv
mov
dec
loopne
mov
or
sbb
daa
adc
jne
jg
pop
and
dec
movs
sti
pop
push
mov
(bad)
jns
push
mov
ja
inc
mov
pop
xor
int
sbb
inc
jbe
add
jmp
mov
pop
pop
mov
(bad)
shl
push
icebp
cdq
lea
movs
sub
cmp
adc
mov
loope
gs
pusha
cmp
jbe
mov
xor
xor
adc
adc
mov
out
jge
or
xchg
cmp
inc
pop
js
dec
push
cmp
pushf
mov
lea
stc
loope
fnstcw
movs
clc
add
popf
mov
stos
mov
sub
sar
js
push
std
fst
xlat
punpcklwd
out
cmp
or
xchg
shr
arpl
sub
xor
cmp
sti
pop
sbb
cs
adc
adc
pusha
pop
sahf
dec
inc
xor
adc
mov
sub
xlat
popf
push
mov
inc
add
push
cmps
std
lea
adc
jae
xchg
leave
(bad)
loop
lea
mov
add
scas
retf
sub
loopne
loop
clc
loop
mov
or
pop
mov
sub
sbb
or
ja
loope
jb
or
scas
pop
push
ret
ds
stos
cmp
fwait
(bad)
jle
jmp
mov
inc
mov
inc
ret
or
mov
stos
mov
sbb
out
sub
clc
mov
mov
lods
sbb
dec
inc
xchg
xchg
dec
pop
hlt
sbb
pop
or
in
lahf
xchg
out
and
inc
jg
dec
mov
adc
inc
test
cmp
inc
sub
cmp
addr16
lds
retf
ret
(bad)
aad
mov
loopne
mov
jb
fcomp
(bad)
push
inc
mov
js
mov
int3
les
cdq
lods
sub
gs
rcl
adc
cmp
test
adc
jns
lds
push
repz
loopne
pop
adc
outs
xchg
pop
jmp
sbb
es
(bad)
lds
fimul
or
dec
sub
inc
jbe
test
imul
fs
adc
add
push
fcmovne
xlat
test
rcl
pop
or
js
inc
(bad)
cld
xchg
lods
sti
push
imul
adc
fimul
das
je
stos
loope
imul
pop
dec
into
or
es
sub
mov
push
lods
sbb
fadd
or
mov
inc
dec
(bad)
mov
arpl
lock
dec
ss
mov
pop
mov
sub
xor
xchg
jbe
pop
push
dec
mov
xor
push
jmp
repnz
repnz
in
test
test
jg
cmps
push
jmp
jmp
pusha
dec
pop
ins
test
ins
repnz
sti
loop
sbb
cs
fldcw
push
push
or
ds
inc
stos
pop
add
or
lds
scas
cmp
push
scas
and
cmp
into
nop
inc
adc
push
dec
inc
mov
sub
sbb
sub
mov
(bad)
and
in
(bad)
faddp
(bad)
sbb
mov
push
push
pop
fsubr
je
mov
lahf
div
(bad)
jg
dec
fidiv
add
dec
call
push
push
(bad)
lods
mov
push
or
xchg
mov
inc
int
jbe
jne
scas
cmp
jl
fidivr
jl
dec
fcomp
fadd
pop
sbb
fwait
sub
pop
repnz
and
cmp
mov
inc
into
jo
ficomp
dec
mov
scas
sub
lock
mov
ds
std
icebp
jmp
adc
and
(bad)
jmp
and
inc
mov
jb
jnp
mov
(bad)
out
adc
xchg
fwait
inc
push
pop
sbb
jmp
(bad)
jmp
inc
loope
clc
pushf
pop
mov
icebp
idiv
(bad)
call
inc
imul
pcmpeqb
aad
imul
xchg
mov
(bad)
call
sub
ss
fsub
push
jno
push
sub
xchg
cmp
push
dec
(bad)
(bad)
(bad)
push
scas
mov
fisubr
fs
jecxz
jmp
or
das
and
(bad)
(bad)
dec
inc
inc
dec
mov
add
cmc
sbb
add
enter
adc
(bad)
jg
rcr
outs
mov
leave
mov
cmps
sti
mov
sbb
dec
pop
mov
(bad)
(bad)
call
pop
jl
aas
adc
cs
jo
mov
mov
test
cmp
frstor
ficomp
clc
call
sub
lods
(bad)
ret
mov
nop
ret
sahf
add
jnp
icebp
fisttp
sub
stos
les
mov
adc
pop
pop
ds
sbb
pop
add
int
mov
lods
cmp
cli
mov
ins
pop
std
jno
push
hlt
scas
pop
xchg
rol
sub
les
in
sub
add
jp
pop
jbe
mov
je
ins
(bad)
std
ficomp
sub
mov
in
cmp
inc
xor
scas
mov
mov
sbb
dec
(bad)
push
movs
jnp
idiv
dec
arpl
adc
mov
cmp
push
arpl
sti
mov
cdq
inc
loop
idiv
jmp
cli
inc
push
add
call
fst
mov
repnz
popa
movs
jmp
xchg
(bad)
out
xchg
mov
fwait
mov
or
fsubr
sub
ja
daa
pop
xchg
je
je
push
sbb
ret
ud2
in
inc
dec
or
aam
xchg
push
xor
sbb
ror
(bad)
cwde
nop
mov
xor
cmp
je
outs
ror
xchg
in
sub
enter
dec
push
ins
call
loopne
pop
bound
test
sbb
(bad)
lds
inc
or
inc
push
aad
cwde
gs
mov
movs
sub
psraw
in
push
jnp
pop
scas
cli
cmp
xor
retf
retf
dec
jg
hlt
call
sub
push
xchg
cmp
rcr
and
or
aad
and
ret
ficom
data16
outs
out
fild
cmp
jge
mov
xchg
jnp
std
mov
(bad)
fadd
out
icebp
cmp
(bad)
jns
lods
mov
iret
sbb
push
fadd
cmc
scas
jecxz
cmps
into
xchg
test
xchg
and
jp
aaa
arpl
jno
jg
stc
popf
mov
enter
test
(bad)
cmp
pop
mov
test
cmps
mov
jle
mov
add
dec
xchg
dec
mov
push
jae
(bad)
jmp
sub
lods
je
daa
imul
jmp
inc
inc
sub
in
in
push
push
cmps
inc
out
sub
mov
(bad)
xor
dec
cwde
sub
sbb
mov
xlat
xchg
jecxz
loopne
in
sub
ds
mov
cli
popf
cld
iret
(bad)
cli
push
inc
and
in
jg
cmp
inc
gs
push
and
call
movups
stos
ror
shl
aam
je
sub
fisubr
fdivp
mov
stos
inc
xchg
sbb
sar
cmps
repnz
aam
arpl
sub
pop
jbe
xchg
cmc
call
sahf
out
lds
jecxz
enter
mov
lea
cli
sbb
paddusb
fisubr
fsub
or
push
cmps
test
jo
sub
or
sub
mov
cwde
cmp
inc
ss
mov
cmp
pop
inc
and
mov
or
jmp
rcl
ret
iret
sub
ret
mov
lea
dec
push
mov
(bad)
hlt
jmp
sbb
cdq
mov
cmc
ret
int
push
mov
mov
cli
xchg
xor
es
sub
or
sub
cmp
mov
or
sbb
icebp
dec
mov
or
mov
cli
pop
call
mov
or
push
fstp
out
or
stos
sub
mov
mov
and
jg
dec
out
mov
inc
cwde
out
shl
xor
xor
(bad)
call
sub
dec
or
dec
dec
jg
xor
fwait
(bad)
mov
(bad)
dec
cmps
retf
faddp
(bad)
pop
pextrw
push
push
pop
add
and
adc
test
pop
inc
arpl
and
push
dec
je
leave
push
mov
add
adc
pop
in
jge
loope
(bad)
xchg
fistp
fstp
xor
sub
dec
sbb
jmp
or
add
jbe
or
pop
inc
push
mov
jne
mov
xor
push
mov
mov
rcr
inc
lods
cmps
pop
or
push
idiv
mov
inc
mov
or
sbb
and
inc
icebp
pop
or
out
mov
adc
jp
add
fist
out
loope
cwde
or
je
dec
jo
mov
enter
ret
enter
aaa
mov
mov
es
call
sti
sbb
(bad)
xchg
cwde
xchg
jmp
dec
xor
push
jae
cli
aad
or
jecxz
mov
sbb
stos
std
push
stos
(bad)
inc
repz
int
xor
mov
cmp
aad
ins
mov
sub
stc
(bad)
adc
adc
xchg
ret
gs
add
dec
mov
push
fimul
test
dec
jmp
das
jo
lods
pop
pop
push
xor
rcr
in
shl
jo
pop
or
mov
pusha
or
and
mov
jl
fsub
add
xlat
sub
retf
outs
cli
or
pop
xchg
sbb
call
mov
out
addr16
inc
adc
inc
sbb
aas
pushf
ffreep
leave
push
push
push
adc
fs
xchg
data16
xor
jns
leave
leave
jne
add
jb
cmp
retf
arpl
arpl
lahf
sbb
push
jp
outs
jae
scas
pushf
pop
dec
jae
out
xor
mov
jp
or
add
jp
fcomp
add
xor
inc
test
inc
cwde
cmps
call
cmp
pop
xchg
(bad)
bound
mov
rcr
and
pop
fwait
push
sub
dec
dec
shr
(bad)
in
mov
xor
stos
xchg
cmp
in
mov
(bad)
cld
add
cmovl
shl
mov
jno
push
sub
or
xchg
xchg
icebp
pop
xor
sub
jno
xchg
pop
(bad)
mov
aas
cli
mov
jbe
ss
sbb
mov
(bad)
scas
(bad)
jns
repz
inc
clc
add
repz
inc
scas
mov
ret
mov
outs
inc
push
sub
sub
mov
loope
pop
add
add
call
repnz
sub
cld
or
dec
retf
arpl
int
mov
bound
mov
nop
xchg
das
mov
cmp
inc
push
or
mov
adc
retf
mov
xor
or
out
xor
outs
and
mov
push
cwde
pop
pop
or
in
leave
push
mov
jo
cmp
jns
repz
mov
or
fnsave
movsx
or
jo
ja
mov
call
in
fdiv
test
lods
lock
or
jmp
jo
cdq
inc
lds
cld
push
jns
inc
test
sbb
retf
shl
shl
xchg
(bad)
cmps
sti
mov
stos
scas
je
ret
(bad)
int3
(bad)
lods
sub
lods
lahf
rol
adc
push
xchg
push
jmp
xchg
imul
sbb
(bad)
in
hlt
ins
lock
outs
jmp
scas
cmp
cwde
sbb
ffree
in
cmp
fisttp
int
and
jle
or
sbb
or
sub
jns
sub
sub
retf
daa
xchg
loope
sub
cmp
mov
je
nop
and
movs
cmp
mov
or
mov
jge
add
xchg
neg
dec
mov
call
test
popf
ss
push
xchg
add
arpl
and
leave
retf
std
loop
nop
adc
mov
sti
mov
mov
sub
sahf
and
jmp
int
movs
out
push
pop
add
in
or
dec
je
movs
jb
adc
add
ret
xchg
test
lds
jmp
iret
enter
hlt
mov
sbb
ds
lock
adc
or
aad
retf
pop
cld
sti
lods
mov
(bad)
sbb
or
add
cmp
inc
leave
call
mov
mov
sbb
mov
and
cwde
lds
pop
mov
mov
mov
imul
cmc
or
mov
ds
jp
lds
call
pop
add
add
xchg
or
in
fldenv
cmps
loopne
jne
dec
stos
imul
scas
mov
fdivp
adc
xchg
mov
and
popf
jmp
pop
push
les
setge
pop
jne
or
mov
nop
lds
daa
xchg
(bad)
outs
scas
sti
pusha
rcl
inc
sub
stos
and
lds
hlt
scas
adc
xchg
push
sbb
mov
ins
mov
push
in
push
or
inc
xor
in
inc
jp
clc
xor
call
sbb
clc
int3
loopne
or
add
lock
dec
test
out
loope
ins
loope
or
inc
mov
arpl
jbe
lahf
jle
mov
(bad)
xor
hlt
xchg
xor
push
ins
daa
cmp
sub
in
daa
mov
inc
mov
dec
dec
js
xor
pop
retf
enter
(bad)
mov
add
cs
(bad)
sbb
in
aas
es
pop
dec
je
jmp
adc
(bad)
mov
int
ret
cmp
je
push
lods
pop
sbb
lea
lock
pusha
mov
cmp
(bad)
shl
lods
mov
xor
or
nop
inc
xor
and
fcomp
test
adc
sub
popf
loop
sahf
xor
jmp
pushf
test
leave
or
cmp
pop
out
sbb
adc
jb
rol
mov
add
sbb
pop
pop
add
dec
xor
push
in
out
sub
in
aas
mov
in
into
iret
sub
inc
pop
mov
fisub
enter
jae
in
jmp
dec
xchg
jae
jmp
adc
out
js
or
sub
adc
ret
rol
and
addr16
dec
repnz
out
call
pusha
push
pop
dec
(bad)
cdq
ins
adc
mov
and
push
mov
js
test
jnp
adc
xchg
inc
mov
add
shl
xlat
push
loop
adc
adc
xchg
and
pop
cwde
sbb
pop
loopne
xchg
js
xchg
sbb
sbb
pop
dec
aaa
or
xchg
sar
add
ja
in
push
in
pop
mov
dec
je
mov
dec
call
lods
mov
sbb
and
repnz
rol
(bad)
pop
fbld
cmp
loope
fbld
imul
aam
(bad)
or
mov
adc
sbb
add
call
cmp
mov
es
data16
xor
call
cwde
add
add
push
xchg
sbb
pop
push
test
lock
lods
pop
sbb
push
or
dec
dec
idiv
mov
xor
push
mov
loop
xchg
je
push
push
sub
daa
jl
xchg
in
add
ds
call
jp
dec
add
jne
mov
scas
fs
jo
jecxz
sub
jb
(bad)
ret
repz
mov
mov
lods
jne
arpl
(bad)
jnp
and
push
dec
cs
sub
gs
xchg
mov
int
and
pop
loope
and
add
das
ss
cmp
push
xchg
push
inc
in
push
icebp
mov
nop
into
cmp
push
lock
xchg
shr
or
cmp
das
stc
je
rcr
cmp
dec
pop
mov
mov
mov
jle
sbb
ds
mov
enter
jmp
loop
imul
add
dec
stc
mov
movs
cwde
push
ins
int
add
xchg
in
(bad)
fidiv
aas
rol
cmps
jbe
or
cmc
(bad)
call
sub
mov
sub
daa
mov
push
mov
call
pop
pop
inc
or
sub
mov
fcom
test
out
stos
sti
imul
adc
adc
mov
loope
dec
xlat
push
mov
iret
inc
mov
movs
mov
aam
pop
(bad)
cdq
sbb
sub
or
xor
int3
cmp
(bad)
adc
xor
(bad)
in
xchg
es
ss
loopne
enter
ficomp
ja
jp
mov
mov
test
sbb
clc
inc
cmp
adc
pop
xchg
sbb
fiadd
adc
xchg
loop
popa
call
aas
sbb
lods
cmps
into
outs
add
in
pop
cld
ror
lods
and
stc
dec
ret
or
aas
ja
mov
dec
repnz
cmps
cwde
stos
jp
xor
jmp
(bad)
fsub
out
retf
sbb
sbb
rcl
fld
cmps
mov
pop
or
jae
sub
out
jmp
pop
push
xor
mov
or
dec
add
pop
cwde
mov
dec
ss
mov
outs
mov
sub
out
ins
mov
push
or
adc
stos
xchg
hlt
mov
stos
sub
dec
xchg
mov
push
int
test
gs
xchg
cmps
retf
push
mov
push
(bad)
mov
mov
xlat
lods
ins
ins
fdiv
push
sbb
push
cmp
inc
test
enter
sti
lods
into
mov
mov
and
pop
add
mov
jns
es
lods
pop
test
and
repz
push
add
mov
scas
sbb
and
lahf
jle
js
mov
add
xchg
push
and
aaa
outs
test
and
fild
dec
xor
and
inc
dec
jecxz
inc
call
les
mov
iret
mov
lahf
outs
inc
push
or
jmp
and
or
mov
dec
pushf
in
dec
retf
mov
retf
mov
dec
and
popa
std
jp
add
cwde
push
mov
call
mov
mov
ja
sbb
rcr
mov
xchg
push
push
fdivr
ds
daa
imul
cmps
and
cld
or
retf
popf
lods
push
int3
ja
clc
pusha
pop
mov
push
retf
xor
cmp
or
aaa
outs
xchg
movs
pop
aam
lahf
push
sub
ds
cmp
push
mul
adc
shr
cmps
lods
pop
mov
(bad)
fist
sar
mov
or
cmp
dec
pop
hlt
xor
js
mov
mov
jno
jno
retf
les
imul
mov
nop
push
dec
pop
sbb
pop
mov
(bad)
movs
imul
dec
dec
stos
mov
push
xchg
pop
pop
ss
push
test
popf
xchg
jmp
dec
jp
ror
xchg
pop
cmp
or
or
ja
xchg
sbb
fidiv
cmp
rcl
mov
mov
and
icebp
int
sahf
inc
cwde
div
imul
sbb
jb
enter
sub
or
rol
(bad)
mov
pushf
jg
bound
popf
(bad)
xchg
fwait
movs
push
push
or
push
jb
int3
or
fild
adc
mov
xchg
aam
in
pop
add
mov
scas
xor
and
dec
pop
gs
(bad)
lods
xchg
bound
mov
jbe
xor
push
(bad)
xor
jae
(bad)
(bad)
jae
sbb
jne
jl
pushf
cs
jle
movs
ret
test
aas
mov
xchg
and
test
jo
dec
add
dec
js
mov
sub
or
loope
int
add
fisttp
mov
adc
retf
outs
adc
mov
adc
jae
adc
or
and
xor
sub
sub
sub
dec
ins
idiv
mov
cmp
js
movs
push
aaa
in
cmp
add
and
add
pop
and
mov
(bad)
jb
inc
sbb
ret
sbb
dec
std
inc
arpl
mov
test
aas
fild
je
mov
push
and
in
daa
sbb
mov
xchg
pop
repnz
mov
mov
lods
push
cmc
es
rcr
sbb
stos
jae
cmp
pop
add
mov
sbb
inc
xor
jae
sbb
sub
sbb
fisttp
loopne
je
pop
and
mov
in
pop
xchg
in
int3
pop
pop
push
add
fnsave
add
jbe
inc
dec
xor
enter
ret
add
sbb
test
fcmovnb
ret
or
lods
jb
and
mov
out
je
pushf
dec
xor
push
push
sub
outs
mov
xchg
cmp
outs
dec
jmp
mov
cmps
mov
(bad)
js
or
and
cmp
dec
jae
xchg
test
inc
pop
xchg
repnz
xchg
dec
jae
es
test
sbb
popf
pop
outs
ja
pop
push
jbe
fs
jne
sub
xlat
mov
test
les
sbb
ss
add
sbb
lahf
test
xor
push
sbb
movs
mov
add
pop
test
test
mov
sbb
test
xor
out
jae
pop
add
push
ins
repnz
imul
xchg
xchg
sbb
adc
dec
jae
enter
sub
jae
push
and
nop
jae
jae
arpl
sbb
arpl
add
sub
sahf
and
and
in
cmps
jp
cmps
mov
enter
sbb
inc
pop
cmp
or
nop
cmps
cmps
push
mov
(bad)
jne
jno
inc
test
cwde
cld
pop
(bad)
out
and
mov
je
test
(bad)
pop
or
cmp
rcl
mov
cwde
sub
out
add
sti
cwde
mov
inc
sub
inc
xor
mov
lahf
pop
mov
and
jge
cwde
ins
push
pop
scas
cs
jg
sbb
sbb
fs
push
mov
adc
dec
jp
fs
cmp
and
cmp
ja
out
ret
sar
adc
xchg
jbe
(bad)
mov
or
enter
sub
sbb
cmp
jae
xchg
hlt
xchg
popf
jo
imul
add
scas
out
jb
pop
mov
scas
mov
inc
pop
retf
test
jle
ds
out
and
sub
in
mov
scas
sub
jne
aam
or
ret
xor
push
fisub
adc
cmp
jns
lahf
inc
mov
cmp
and
or
inc
fwait
jmp
add
jo
or
nop
push
jb
jnp
push
sbb
mov
jb
add
enter
shl
outs
mov
inc
mov
arpl
retf
pop
mov
jle
ror
and
cli
or
jns
push
aam
mov
sti
(bad)
(bad)
mov
jbe
js
mov
fsub
ins
dec
jmp
aad
imul
lahf
mov
popa
adc
and
mov
inc
push
jecxz
pop
push
or
jmp
(bad)
jmp
nop
pslld
gs
mov
push
push
pop
pop
movs
jb
(bad)
out
(bad)
push
ja
dec
pop
repnz
int3
jmp
repz
add
add
and
cs
adc
repz
retf
in
mov
push
movs
js
rol
call
jmp
neg
jmp
in
pop
aam
push
pop
scas
sbb
xchg
mov
pop
push
ss
cld
iret
neg
popa
nop
jmp
frstor
mov
mov
adc
aam
xchg
pop
aas
mov
and
push
test
fcomp
pop
add
popa
mov
mov
add
ins
jg
jo
xchg
ficomp
dec
push
jmp
clc
(bad)
fbld
mov
mul
pop
mov
xlat
add
push
(bad)
aas
mul
xor
repz
jae
xlat
jecxz
scas
gs
or
xchg
jmp
lock
stc
mov
fwait
and
add
or
sti
adc
(bad)
sbb
push
fdivr
fwait
xchg
iret
mov
popa
aam
cmps
or
call
mov
pusha
out
xchg
xor
dec
ret
ins
pop
push
push
mov
aad
adc
outs
adc
ret
stos
rcl
sti
popa
mov
jp
mov
out
enter
push
movs
jae
push
dec
push
mov
sti
dec
movs
cmp
sub
hlt
div
jecxz
mov
mov
xchg
sub
add
enter
add
pop
popa
add
out
push
jl
outs
add
push
cld
call
push
adc
rcl
jno
jle
shr
mov
add
add
ficom
push
pop
(bad)
sbb
jp
(bad)
sbb
and
push
or
pop
imul
lock
mov
fist
(bad)
adc
cwde
push
scas
std
call
aas
fld
pushaw
cmps
popa
fst
add
cli
dec
mov
add
mov
js
fbstp
push
dec
or
jmp
push
(bad)
pop
dec
sub
cmp
icebp
pusha
inc
push
cmp
mov
das
pop
shl
movs
data16
dec
fisub
fisttp
sub
jbe
adc
inc
mov
aas
mov
jg
sbb
sahf
xor
jns
mov
popf
add
or
sub
scas
mov
(bad)
fstp
jb
loope
mov
mov
or
outs
push
adc
jb
pop
out
pop
inc
sbb
out
lods
push
in
push
sub
sbb
js
dec
int3
push
lea
mov
js
push
mov
sub
pop
fimul
mov
cmp
push
adc
jg
push
push
add
movs
cwde
out
add
(bad)
and
or
jecxz
xchg
xchg
pusha
inc
fs
inc
jecxz
(bad)
cmps
loope
jbe
repz
jns
dec
faddp
sbb
adc
call
hlt
push
xchg
sbb
xchg
or
retf
(bad)
sti
ss
push
inc
adc
rcr
dec
call
dec
repnz
dec
inc
jmp
(bad)
loopne
repnz
dec
push
mov
mov
pop
dec
repnz
jae
in
mov
test
les
scas
push
add
push
or
add
inc
add
push
or
or
xor
pop
push
out
out
fld
xchg
push
jle
repnz
iret
push
data16
ins
push
lods
pop
mov
push
out
call
jle
rol
adc
mov
arpl
and
jmp
mov
jnp
ror
mov
data16
ficom
fnstcw
xlat
cmp
sbb
sti
imul
pop
jbe
ja
push
outs
pop
cmps
pop
cmps
ja
cli
add
data16
ins
push
or
pop
adc
dec
sti
xor
add
push
jae
and
push
pop
push
imul
mov
(bad)
movs
mov
hlt
popa
fwait
out
jns
fldcw
call
push
push
mov
push
ds
mov
dec
(bad)
jmp
pop
pop
ss
mov
push
mov
data16
das
adc
(bad)
inc
mov
cmp
repz
fiadd
jecxz
in
fldcw
pushf
in
fdiv
push
in
cmp
mov
cmp
lds
inc
sahf
jmp
cli
ja
popa
fwait
ins
mov
push
mov
inc
push
in
xchg
outs
(bad)
ins
ss
inc
fsub
push
(bad)
daa
xchg
repz
lods
iret
pop
mov
scas
int
mov
push
js
bound
push
pop
inc
pop
mov
push
lahf
imul
inc
inc
dec
cs
pop
pop
push
pop
dec
retw
int
imul
dec
pop
dec
or
adc
mov
add
imul
pop
dec
pop
sahf
(bad)
pop
mov
xor
daa
mov
sub
rcr
xor
jle
add
cdq
add
cld
in
out
xchg
jmp
outs
test
or
mov
or
loopne
xchg
das
mov
pop
push
mov
stc
push
mov
ins
mov
xchg
das
sub
sti
dec
push
mov
frstor
cmp
jp
xchg
pop
into
push
jb
ficomp
add
mov
ja
push
xor
aas
mov
popf
aam
add
cs
inc
pop
movs
(bad)
mul
imul
mov
mov
and
into
push
adc
stc
ficom
hlt
pop
lahf
call
jg
or
jp
cli
daa
in
movs
std
add
jbe
inc
or
xchg
fldenv
scas
dec
push
test
or
scas
mov
adc
mov
movs
lods
inc
cmp
push
adc
mov
adc
(bad)
sti
outs
cmps
cli
jno
js
clc
aas
and
imul
shr
das
sub
mov
push
mov
add
in
mov
or
in
iret
mov
jns
imul
sbb
jb
(bad)
sahf
cmc
mov
inc
add
cwde
cwde
in
dec
dec
fistp
pop
mov
nop
fsubr
aad
add
or
fidiv
in
sub
jle
mov
jne
dec
cmps
shl
(bad)
jb
dec
idiv
ss
push
mov
mov
xlat
ficomp
stos
test
das
inc
ja
mov
cmp
mov
or
(bad)
sar
inc
arpl
cwde
or
sahf
sbb
xor
jle
sbb
ja
inc
js
mov
(bad)
addr16
(bad)
fisubr
and
cld
sbb
inc
jecxz
push
adc
adc
sub
jmp
and
cmp
retf
xor
shr
push
(bad)
shl
fstp
or
dec
jl
sub
fist
outs
sbb
adc
rcl
call
clc
in
enter
adc
xchg
stc
adc
fadd
data16
outs
mov
xchg
fwait
scas
imul
shl
pop
fist
in
(bad)
mov
addr16
jo
and
sti
js
xchg
ins
cmp
sbb
(bad)
(bad)
mul
mov
push
adc
movs
nop
into
and
adc
movs
xchg
jo
in
sbb
fs
clc
call
loope
xchg
inc
scas
popa
jmp
inc
sub
jns
fucomi
(bad)
call
jns
in
sbb
or
pusha
or
xchg
enter
(bad)
in
(bad)
pusha
xor
push
sti
jae
sti
and
mov
es
mov
(bad)
or
mov
in
(bad)
idiv
xor
xchg
mov
jnp
mov
xchg
cmp
xchg
femms
(bad)
fcomi
out
jle
pop
mov
jge
test
adc
fs
popf
dec
dec
inc
pusha
icebp
adc
js
gs
daa
add
(bad)
fnstsw
push
test
or
sub
jnp
or
es
push
jns
dec
push
ds
jne
pop
mov
popf
js
addr16
mov
repnz
addr16
addr16
sub
cmp
imul
test
mov
loope
adc
jmp
inc
mov
push
mov
ins
gs
mov
adc
gs
ja
movs
outs
movs
jb
adc
and
sub
call
fldl2t
inc
mov
sbb
shl
iret
repnz
bound
pop
mov
add
and
xchg
imul
push
stc
and
dec
mov
ins
pop
scas
cli
or
into
lahf
rol
xor
icebp
mov
dec
aad
imul
xor
add
adc
cs
and
imul
pusha
sub
mov
loopne
cmp
jbe
or
xchg
imul
or
mov
adc
mov
call
ss
pop
jp
gs
inc
test
stos
pushf
call
mov
push
fnstcw
mov
mov
and
call
ds
adc
push
movs
pop
loopne
xor
or
out
jg
mov
out
ss
mov
dec
mov
pop
lds
retf
adc
pop
xchg
fiadd
out
lahf
push
push
xor
dec
add
add
xor
addr16
sbb
adc
sbb
enter
data16
pop
repz
cmp
pop
or
sub
fstp
lods
adc
sbb
(bad)
push
inc
cmp
adc
sbb
or
fcomp
mov
daa
(bad)
fs
out
mov
or
cdq
pop
je
retf
dec
push
loope
sub
repnz
enter
sbb
jl
mov
xor
shl
mov
xor
(bad)
adc
cmp
pop
daa
pop
addr16
mov
enter
cmp
mov
jle
cld
cmp
ret
dec
fcmovnbe
rol
je
dec
xchg
stc
sub
add
xchg
sbb
sbb
add
adc
ins
cmp
fbld
sub
or
pop
outs
dec
jnp
lahf
inc
cs
scas
cwde
call
push
ret
push
adc
xor
xchg
mov
inc
pop
xor
sti
data16
sahf
dec
and
dec
push
mov
sbb
xor
out
loope
jp
repz
leave
out
jle
mov
popa
dec
repz
push
neg
mov
sub
aaa
leave
and
push
mov
ds
es
nop
movs
sub
xor
mov
aam
and
ins
push
add
fwait
inc
popa
inc
push
hlt
pop
call
push
adc
cmp
xor
adc
add
adc
call
pop
mov
push
adc
inc
sahf
imul
pusha
je
int
pop
repnz
fistp
add
cmp
leave
and
xor
xchg
jp
or
cmp
jge
xchg
icebp
mov
aam
je
inc
xchg
hlt
pusha
daa
cdq
xchg
mov
inc
nop
jo
pop
inc
aaa
push
outs
pop
inc
sub
pop
repnz
push
and
loopne
xchg
js
hlt
out
xchg
push
jge
mov
inc
dec
lods
loope
fcmovnb
sub
scas
jne
or
out
add
addr16
xor
in
ret
jle
ja
sbb
sub
pop
outs
push
in
and
xchg
and
lds
xor
inc
cs
(bad)
in
fisttp
push
jle
xchg
sub
mov
xor
sub
pop
or
retf
and
sub
xchg
pop
pop
movs
inc
call
or
pop
push
je
(bad)
in
mov
imul
lea
pop
xchg
inc
mov
add
mov
cdq
sub
into
or
xchg
pop
sbb
movs
in
fistp
enter
pushf
pop
inc
inc
and
mov
dec
mov
push
mov
and
or
xchg
(bad)
xlat
sub
cmp
in
popf
out
push
xor
int
sbb
xor
add
inc
fcomp
daa
mov
and
and
dec
mov
inc
not
je
mov
aas
push
sub
test
push
and
mov
and
sahf
fwait
ret
pop
pusha
in
pop
ins
push
(bad)
mov
xchg
push
mov
xor
push
aaa
cwde
cs
add
popa
dec
pushf
outs
push
push
add
xor
pusha
jns
push
inc
xchg
ror
pop
xor
xchg
push
shl
je
retf
int
idiv
sbb
stos
and
in
or
bound
mov
scas
and
popf
rol
mov
ror
inc
dec
pop
push
dec
pop
push
inc
pop
jg
push
or
cmp
dec
dec
or
add
rcr
push
xor
cmp
adc
(bad)
(bad)
aaa
call
fs
outs
addr16
data16
ss
cmp
xor
add
pop
dec
adc
cmp
call
dec
push
dec
dec
push
inc
push
inc
push
in
pop
inc
pop
pop
in
(bad)
call
pop
inc
dec
jo
jno
popa
ja
outs
jns
imul
clc
(bad)
(bad)
in
aaa
cmp
int3
push
outs
jp
inc
xor
inc
xor
cmp
xor
add
adc
dec
js
jg
(bad)
sub
xchg
shl
or
retf
imul
nop
xchg
or
into
push
mov
rol
(bad)
hlt
adc
ja
pusha
push
gs
jl
push
push
cwde
das
xor
fs
push
adc
fbld
sbb
call
pop
and
lock
or
lea
pop
jns
push
sbb
dec
stos
mov
imul
je
jb
push
pop
test
(bad)
or
loope
(bad)
push
lahf
or
sbb
pop
test
js
xor
imul
mov
js
sub
inc
aas
pop
push
add
ret
lods
in
add
inc
xchg
push
sub
inc
pop
je
or
mov
movs
pop
(bad)
sar
call
jmp
pop
cmp
push
mov
push
ret
sub
push
or
mov
push
les
push
push
push
fcom
cmp
rol
dec
mov
gs
loop
inc
in
cmp
loopne
ja
mov
nop
xchg
daa
fcom
push
cmp
(bad)
mov
cwde
loopne
push
cld
xchg
xchg
out
or
ja
pop
mov
mov
ror
data16
sub
iret
dec
in
jne
loopne
jne
sbb
bnd
out
ror
out
mov
mov
retf
gs
test
call
mov
div
xor
mov
sub
sub
mov
pop
dec
mov
retf
jns
daa
cmp
jne
add
lock
retf
in
shl
push
sub
xchg
xchg
pop
jnp
pop
push
fidivr
dec
xor
jp
dec
das
fst
cmp
push
push
daa
test
pop
push
inc
ret
in
inc
arpl
xor
xchg
call
mov
out
cmp
cmp
xchg
push
push
lock
xor
pop
mov
xor
(bad)
imul
cmp
out
adc
not
or
xchg
xchg
dec
in
dec
ss
arpl
adc
mov
jnp
push
mov
sar
adc
sub
in
in
adc
add
scas
xchg
pop
in
add
dec
adc
sbb
adc
imul
lahf
icebp
imul
or
push
pop
or
push
add
mov
pop
or
pop
daa
in
xchg
test
push
add
inc
xchg
push
jb
lods
pop
sub
cld
push
sbb
jg
jae
sbb
jb
or
fsub
or
in
xchg
(bad)
icebp
adc
pop
push
jbe
xchg
stos
call
sahf
push
jns
add
mov
les
push
scas
sar
mov
xchg
push
cmps
inc
ret
xor
scas
fwait
dec
xchg
push
mov
or
mov
mov
pusha
inc
pop
pop
retf
in
mov
nop
pop
(bad)
stos
sbb
xchg
(bad)
stos
stos
mov
add
xchg
cmp
cwde
scas
dec
xchg
shl
inc
push
and
dec
pop
inc
or
xchg
stc
lods
in
jo
dec
in
test
shl
movs
fisttp
ja
pop
ins
mov
test
dec
ins
mov
jb
shl
push
inc
in
stc
push
mov
daa
sbb
(bad)
loop
in
icebp
pop
xor
bound
shr
xchg
xchg
dec
ja
dec
jmp
mov
leave
mov
dec
addr16
icebp
pop
fcomp
out
cmp
adc
clc
jns
pushf
pop
fistp
stos
sbb
sub
inc
fistp
popa
or
xor
je
test
xchg
sub
call
or
aam
mov
jmp
cmp
push
push
xchg
xchg
popa
or
pop
ss
(bad)
in
pop
dec
jo
stos
inc
pop
xchg
dec
push
dec
out
daa
scas
lods
inc
push
(bad)
xor
shr
xchg
aaa
inc
shl
int
sub
pop
addr16
icebp
dec
adc
sbb
fwait
in
or
sub
xor
jp
sbb
and
xor
ja
(bad)
enter
ja
push
es
mov
mov
stos
sbb
or
enter
mov
in
lock
retf
sbb
out
sub
pushf
in
or
ja
mov
sub
dec
mov
sbb
ret
adc
inc
aaa
int3
add
dec
call
mov
pushf
mov
fcomi
test
fist
mov
icebp
cs
jne
cld
push
dec
inc
push
mov
adc
cwde
daa
repnz
mov
out
call
and
shl
adc
mov
and
scas
or
cmp
adc
push
dec
(bad)
ss
sub
ins
sbb
sub
ja
mov
jl
call
sti
push
xchg
and
ja
or
shl
(bad)
aad
(bad)
and
and
ja
adc
das
dec
stos
lea
or
sti
popa
bound
push
or
mov
xor
dec
push
jns
push
hlt
inc
inc
cmps
fcomp
aam
dec
sbb
sbb
je
movs
cmp
xor
xchg
xor
fisttp
jl
dec
icebp
enter
(bad)
cli
fiadd
xor
pop
add
adc
test
cmp
jbe
sub
ret
add
xchg
push
and
enter
cmp
push
jge
push
data16
pop
or
pop
sub
mov
sub
add
dec
jno
push
loopne
xor
and
xor
inc
test
das
jge
xchg
daa
dec
aas
push
push
jmp
cwde
cmp
xor
push
das
sbb
jns
adc
xchg
adc
pushf
in
dec
inc
push
pop
add
stos
test
out
repnz
or
(bad)
cwde
and
cld
xchg
xchg
or
int
(bad)
shl
mov
retf
cwde
sbb
ficom
call
push
push
mov
in
cmps
daa
ds
mov
dec
cli
dec
and
imul
pop
ror
aad
pop
in
sahf
jns
inc
repz
and
mov
sub
add
cmp
mov
sbb
mov
lods
pop
sbb
popf
mov
jp
push
mov
scas
ins
sahf
pop
cmps
add
aaa
mov
jmp
xchg
jae
sub
addr16
sub
lods
push
pop
sbb
inc
inc
add
jne
mov
cwde
adc
imul
es
test
pop
pop
loopne
icebp
in
fiadd
(bad)
jmp
scas
pop
pusha
mov
mov
call
jae
jle
jns
cmp
dec
mov
fsubr
ja
xchg
and
mov
enter
jle
mov
loope
sbb
retf
and
outs
cdq
mov
cmp
mov
pop
shl
into
adc
scas
jne
inc
pusha
ss
mov
xor
adc
leave
xchg
popa
out
std
mov
add
lock
cmp
div
scas
out
push
test
sbb
mov
push
mov
pop
lock
pop
dec
dec
xor
pop
imul
data16
ins
add
sbb
std
cmp
pusha
out
add
xor
shl
(bad)
adc
pop
add
outs
add
adc
xchg
movs
(bad)
adc
dec
lea
jo
aad
mov
jmp
mov
xor
adc
sub
dec
inc
sti
push
jbe
dec
gs
(bad)
in
cmp
cmp
and
pop
arpl
sbb
inc
daa
popa
and
das
(bad)
mov
retf
sbb
cmp
push
cmps
fsubr
ja
push
push
div
jnp
clc
js
retf
(bad)
loope
sbb
mov
jb
test
push
dec
mov
jno
xchg
mov
sub
test
cmp
imul
sub
shl
mov
std
call
cmp
push
iret
sbb
test
in
rol
pop
add
stc
cdq
ja
xchg
push
(bad)
mov
mov
mov
std
in
push
mov
jo
sbb
out
push
retf
sub
popa
fldcw
in
add
sar
sbb
xlat
loop
push
or
sbb
or
out
sub
push
arpl
call
rcl
or
xor
je
sub
lock
iret
mov
mov
or
call
cmp
sbb
or
pop
icebp
add
(bad)
scas
adc
iret
dec
movs
push
add
and
sub
push
test
retf
movs
inc
movs
enter
ss
push
cmp
nop
push
adc
pop
mov
(bad)
aas
stc
push
data16
bound
mov
cld
xchg
lea
sbb
dec
push
push
adc
cmps
and
jb
out
mov
jmp
cmp
das
pop
jns
inc
pop
cmps
jae
xchg
pop
rol
sub
dec
pop
dec
outs
fadd
mov
enter
push
test
and
mov
lea
in
fucomip
push
mov
or
lods
push
ins
push
mov
sub
and
xchg
call
inc
push
rcr
inc
(bad)
cwde
mov
fbld
das
add
scas
test
xor
enter
cwde
inc
cmp
sar
and
gs
cdq
xor
mov
fwait
jl
push
call
and
inc
retf
or
push
jnp
mov
adc
arpl
sbb
outs
js
sbb
push
inc
cmp
add
and
cmps
cwde
test
(bad)
cmp
push
mov
nop
jno
add
sub
inc
mov
push
mov
pusha
sbb
or
sbb
mov
jle
(bad)
cwde
sub
fs
jge
push
sahf
push
addr16
pop
cs
mov
ret
mov
shr
imul
pop
push
sbb
nop
retf
jne
or
das
das
xor
stos
push
xor
cmp
ucomiss
enter
mov
bound
mov
leave
adc
mov
jge
push
pop
jns
jb
arpl
inc
cwde
and
gs
inc
jmp
inc
adc
push
inc
test
pop
cs
xchg
pop
dec
inc
sbb
push
mov
retf
xor
repz
daa
push
jmp
mov
fist
aaa
jb
or
xor
outs
clc
sub
cli
adc
pop
cs
jl
repnz
cmp
xor
pop
push
mov
adc
sub
add
inc
cs
inc
xchg
adc
movs
mov
stc
outs
adc
shr
and
inc
cmp
sub
in
dec
enter
cmp
outs
adc
fisttp
aaa
and
(bad)
cmp
leave
mov
enter
mov
pmulhw
xor
add
icebp
daa
pop
sub
and
pop
push
test
jge
iret
dec
xchg
sar
xchg
idiv
retf
mov
and
sub
jb
jb
cdq
cmp
retf
enter
test
pop
test
jb
mov
retf
and
and
xchg
mov
adc
lods
stc
mov
test
pmuludq
ret
mov
adc
mov
adc
jmp
fadd
xchg
jmp
int3
sbb
push
mov
retf
enter
int
adc
sbb
ins
sbb
pop
push
mov
in
fnstcw
movs
mov
test
scas
in
xor
dec
mov
es
sub
in
adc
sub
push
jmp
outs
mov
jmp
outs
cmps
bnd
pop
les
inc
call
retf
in
call
adc
jmp
jb
mov
retf
mov
retf
push
and
cmp
pop
mov
jns
or
jnp
cwde
jb
pop
jb
sub
loop
repz
sub
ss
pop
jns
in
inc
pop
inc
cmp
test
xchg
and
jecxz
pop
pop
fistp
adc
sbb
sub
cli
dec
nop
xchg
xchg
xchg
inc
(bad)
shl
jb
bnd
cli
add
pop
push
repnz
aas
mov
sar
jb
and
dec
ss
addr16
mov
fs
cmp
daa
push
aas
dec
inc
pop
push
inc
cli
cli
cmp
es
and
adc
and
jbe
push
mov
fs
sbb
pop
je
pop
push
push
mov
ret
and
mov
repz
test
sub
xor
aaa
inc
(bad)
pop
xchg
push
inc
inc
lahf
sbb
(bad)
enter
pusha
mov
push
fisub
rol
xchg
adc
outs
ret
mov
in
cmp
ss
jb
icebp
sbb
in
daa
inc
bound
add
xchg
mov
test
aad
pop
lahf
cwde
dec
into
push
das
mov
xrelease
push
jb
pusha
pop
lods
lahf
adc
mov
pop
pop
mov
mov
mov
popf
(bad)
icebp
and
push
xor
inc
push
dec
sti
sahf
data16
push
or
cwde
mov
lahf
out
push
nop
push
inc
jno
sub
inc
lahf
out
ins
fild
scas
imul
fcomp
call
lahf
jmp
cwde
add
cs
test
mov
add
ins
(bad)
adc
ja
stos
sar
sub
jmp
push
jp
mov
enter
ss
inc
(bad)
push
jb
outs
or
cs
in
cli
scas
push
mov
jns
bound
popa
pop
jb
ds
out
cdq
aaa
push
fs
ja
add
gs
push
bound
ss
idiv
sbb
gs
dec
pop
add
aas
fwait
in
mov
es
cwde
pop
nop
test
mov
add
xchg
mov
jnp
jmp
mov
dec
and
jne
jbe
adc
ins
popa
ins
adc
outs
jne
call
das
push
nop
xor
dec
btr
mov
sahf
cmps
jge
inc
push
push
adc
ss
jns
imul
sar
int
mov
pop
sub
repz
add
dec
inc
bound
iret
repz
mov
ds
xrelease
push
xor
repz
ja
scas
shr
repz
stos
sub
out
sahf
out
inc
ja
retf
lahf
out
sahf
jmp
ror
sahf
ja
push
cmp
sahf
out
sahf
in
jmp
test
jl
push
and
inc
jb
cmp
repz
out
ds
cwde
(bad)
or
add
out
sahf
cmp
jb
retf
jns
out
jmp
test
repz
push
adc
pop
add
mov
jbe
push
add
repz
xor
cmp
repz
test
out
rep
sub
into
push
or
xor
cmp
push
repz
repz
iret
repz
icebp
mov
mov
sub
out
call
jns
out
push
push
bound
out
sahf
out
cmps
test
test
out
sahf
mov
mov
or
cmp
repz
cmp
repz
repz
retf
cmp
push
xor
dec
mov
les
mov
add
push
lods
aaa
jg
jle
repz
or
sub
sbb
fdivp
pop
cmps
push
int
and
xor
out
pop
mov
xchg
jns
int
mov
jb
adc
sub
cmp
push
push
mov
icebp
push
(bad)
ja
repz
repz
add
test
jmp
repz
fdivp
cmp
es
mov
mov
adc
data16
push
(bad)
es
ds
ss
xor
push
retf
stc
sahf
xor
cmp
fisttp
push
push
push
sub
fistp
ss
mov
add
sub
mov
push
jne
mov
ja
jns
out
push
push
(bad)
mov
scas
cmp
lahf
pop
stos
sub
push
dec
push
push
pop
setge
xor
bound
adc
ror
inc
adc
cmp
out
test
add
push
fidivr
rep
add
or
jne
icebp
jae
iret
jnp
ss
test
aaa
scas
lock
pop
out
ror
cs
out
mov
push
and
push
jne
mov
jns
retf
(bad)
cs
out
jns
repz
inc
push
imul
push
or
jl
addr16
and
test
ficom
sub
call
cs
fbld
mov
sahf
add
push
test
mov
pop
push
push
(bad)
ja
out
sub
mov
rol
retf
inc
or
jnp
aaa
es
inc
push
adc
cmp
jge
jle
retf
inc
call
pop
or
bound
push
pop
fistp
fidiv
jp
pop
push
or
jmp
push
iret
enter
pop
push
mov
add
jecxz
bound
push
sub
cmps
push
cs
inc
(bad)
(bad)
and
xor
inc
pop
adc
icebp
xor
mov
pop
jmp
sbb
repz
call
or
or
ins
or
inc
sahf
mov
add
repz
cmps
bound
cmp
repz
jae
push
(bad)
fwait
imul
xchg
or
sub
out
sahf
out
js
mov
scas
icebp
mov
iret
in
jnp
aaa
sub
pop
push
push
leave
repz
cmp
int3
mov
iret
test
stos
sub
inc
pop
push
xor
inc
push
jb
ins
mov
iret
lds
test
push
bound
out
data16
inc
ins
addr16
jns
jb
(bad)
mov
dec
data16
popa
jno
outs
ins
sub
add
das
dec
jno
lea
jae
lahf
outs
mov
sar
xlat
fisub
aaa
pop
xor
jne
je
mov
inc
ja
outs
bound
pop
addr16
(bad)
aaa
add
outs
ins
inc
popa
dec
ret
jne
xor
jae
pop
sub
or
or
jne
fisubr
gs
push
and
jp
pop
cmp
jbe
push
push
dec
jb
xor
mov
push
inc
push
jns
jp
neg
mov
addr16
dec
jno
push
bound
into
mov
cmp
push
addr16
outs
addr16
inc
add
rcr
(bad)
cmp
jnp
cmp
cld
push
pop
ss
data16
bound
imul
outs
imul
sbb
dec
enter
outs
adc
jle
imul
imul
mov
mov
inc
ficom
mov
and
sti
int3
lock
inc
mov
clc
or
xchg
je
dec
arpl
test
nop
or
sub
fldenv
cmp
jb
hlt
jne
sbb
(bad)
adc
adc
mov
push
sbb
in
inc
loop
sahf
sbb
pop
push
push
bound
fwait
mov
push
popa
bound
fst
fsubr
jbe
das
dec
inc
mov
adc
push
adc
cmp
fidiv
push
or
mov
cmp
dec
sub
mov
mov
data16
bound
push
call
ss
add
xor
cmp
push
ss
ss
ss
ss
(bad)
(bad)
(bad)
push
fs
ins
ss
iret
ss
lds
test
jl
(bad)
shl
jle
fwait
les
mov
(bad)
push
xchg
sahf
ss
cdq
sub
adc
xor
ds
inc
aaa
dec
aaa
pop
aaa
pop
aaa
gs
popa
aaa
retf
aaa
call
aaa
movs
cmp
mov
and
mov
jg
in
xor
xor
(bad)
(bad)
call
movs
xor
xor
xor
xor
dec
xor
data16
iret
xor
xor
(bad)
(bad)
inc
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
dec
inc
xor
imul
xor
xor
xor
aas
sbb
and
fs
push
(bad)
jmp
xchg
aas
cmp
cmp
cmp
popa
cmp
cmp
cmp
cmp
call
cmp
inc
inc
test
xchg
inc
sub
jno
jne
int3
lods
ds
and
pop
cmp
cmp
in
cmp
cmp
cmp
cmp
(bad)
out
ror
or
adc
adc
ss
ss
xchg
push
push
test
xor
frstor
push
sbb
cmp
sti
sbb
bound
js
mov
aaa
(bad)
aaa
xchg
es
(bad)
jg
outs
cmp
imul
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
xor
lods
xor
fdiv
sub
xor
std
sar
xor
xor
xor
xor
xor
xor
xor
jmp
jg
inc
dec
xor
fdivr
cmp
cmp
cmp
pop
cmp
pop
cld
(bad)
cmp
cmp
mov
mov
cmp
rcr
inc
call
inc
fxtract
ret
inc
inc
ds
fdivr
fnstsw
xchg
cdq
cmp
mov
xchg
ficom
jns
xchg
cmps
ss
sahf
sub
push
inc
(bad)
push
pop
aaa
fs
ja
jno
jp
arpl
iret
aaa
lds
(bad)
xchg
jecxz
movs
aaa
scas
aaa
mov
aaa
xchg
aaa
jnp
stc
aaa
sub
add
dec
cmp
jae
std
cmp
cmp
cmp
(bad)
cmp
cmp
cmp
xor
inc
cmp
mov
or
jmp
cmp
cmp
shl
(bad)
movs
sahf
cmp
xor
push
cmp
ins
cmp
std
(bad)
out
mov
cmp
cmp
cmp
cmp
cmp
xchg
xor
cmp
inc
cmp
(bad)
(bad)
dec
push
cmp
imul
cmp
cmp
cmp
xchg
jmp
cmp
inc
xor
jo
retf
xor
clc
xor
retf
xor
jo
push
xor
xor
(bad)
(bad)
(bad)
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
inc
xor
xor
xor
xor
push
inc
test
inc
nop
inc
cmc
inc
rol
inc
sbb
sbb
(bad)
(bad)
dec
ds
ds
ds
ds
mov
ds
ds
mov
cld
in
sub
add
imul
add
outs
xor
jno
mov
aaa
dec
cmp
inc
aaa
pop
aaa
mov
cmp
(bad)
cmp
xor
cdq
cmp
cmp
cmp
cmp
(bad)
aas
jle
xor
jnp
sub
sub
xor
xor
(bad)
(bad)
call
mov
xor
aas
push
aas
sub
or
add
adc
and
adc
add
ss
pop
inc
sub
aas
bound
aam
leave
(bad)
sbb
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmps
(bad)
cmp
sub
inc
xor
movs
inc
(bad)
(bad)
(bad)
call
cs
ds
ds
adc
push
cmp
jbe
xchg
cmp
adc
pop
push
cs
hlt
push
or
dec
ss
div
(bad)
imul
sub
icebp
lds
push
jle
cmp
sar
mov
ud0
scas
sbb
jge
jecxz
xchg
xor
cmp
jns
(bad)
(bad)
push
xor
xor
xor
xor
xor
xor
xor
ins
xor
xor
aam
mov
jns
adc
xor
fcmovb
xor
aas
ds
dec
aas
jns
(bad)
call
in
aas
int
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
(bad)
(bad)
cmp
push
inc
jmp
inc
cwde
inc
sbb
push
ds
ds
ds
sbb
outs
ds
fst
push
add
cmp
sahf
sbb
sub
add
jl
popa
ss
mov
fidivr
ss
ss
ss
aaa
dec
cld
call
aaa
(bad)
cmp
data16
add
cmp
(bad)
cmp
call
retf
add
push
(bad)
xor
or
pusha
xor
xor
xor
xor
sbb
aad
xor
jno
loop
xor
jbe
or
jne
lods
pusha
mov
pop
imul
hlt
cli
xor
shr
dec
cli
jb
int3
xor
sub
push
inc
or
push
inc
xchg
inc
add
movs
and
push
cmp
std
cmp
outs
jbe
mov
ss
scas
outs
add
fisub
mov
cmp
cmp
rcl
call
adc
mov
and
cld
mov
mov
jnp
xor
xor
xor
mov
xor
ds
sbb
call
cmp
xor
int
test
test
aas
sti
aas
loopne
shl
(bad)
jmp
push
cli
cmp
cmp
cmp
cmp
mov
inc
push
into
lds
jmp
inc
cmp
push
lahf
or
push
cmp
jge
mov
and
into
out
pop
ja
dec
stos
aam
aaa
pop
fdiv
jg
retf
out
cli
call
cmp
mov
cmp
dec
sbb
out
out
sar
xor
xor
xor
xor
sub
pop
ds
xor
jg
test
push
scas
xor
aas
sar
inc
cmp
cmp
jle
(bad)
call
xchg
cmp
and
inc
test
inc
cdq
stos
imul
ds
push
cmp
cmp
cmp
dec
(bad)
ss
cmp
lods
cmp
cmp
and
les
test
xchg
jle
xor
xor
mov
stos
xor
xor
xor
js
mov
aas
cmp
mov
push
cld
fild
jno
iret
inc
out
fwait
inc
mov
imul
xor
fidivr
sar
test
test
out
pop
(bad)
jecxz
mov
mov
inc
jno
(bad)
sub
sub
sub
xor
push
jle
cmp
scas
sbb
push
mov
jmp
xor
xor
pop
xor
xchg
jecxz
lahf
push
xor
xor
xor
pop
xor
jbe
xchg
xor
es
dec
xor
mov
dec
lds
cmc
xor
outs
in
repnz
fwait
aas
icebp
aas
push
cmp
clc
add
cmp
cmp
cmp
cmps
lds
shr
enter
or
mov
aaa
cs
and
jg
push
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
movs
cmp
mov
inc
or
ds
mov
cmp
jmp
icebp
mov
sub
push
ss
sar
std
ss
ss
sub
inc
scas
mov
stos
aaa
call
out
out
call
loop
xchg
cmp
ds
scas
cmp
xor
ret
pop
cmp
xor
std
(bad)
call
xor
inc
xor
xor
lds
xchg
sbb
movs
cmps
add
out
xor
xor
aas
push
push
arpl
push
test
cld
push
push
cmp
cmp
lock
(bad)
fisttp
idiv
es
aaa
inc
pop
inc
into
inc
in
add
pop
dec
test
aaa
mov
(bad)
fdivr
jg
mov
fisttp
mov
dec
lods
mov
int3
pop
pop
test
lahf
js
jecxz
lock
mov
xchg
xor
and
aas
sar
xor
xor
xor
xor
xor
xor
xor
dec
xor
mov
or
(bad)
jmp
xor
xor
cld
pop
clc
loopne
xor
xor
loop
xor
pop
xor
(bad)
jmp
mov
stos
xor
aas
dec
aas
cmp
aas
and
cmp
cmp
cmp
cmp
loope
push
cmp
std
cmp
icebp
jno
(bad)
jg
sub
inc
ds
cmp
cmp
cmp
shl
(bad)
mov
mov
sbb
push
add
hlt
and
cmp
push
ss
loop
mov
mov
adc
fist
(bad)
pop
es
aaa
mov
nop
aaa
shl
fdivrp
inc
adc
out
dec
ss
cmp
cmp
lods
ret
scas
or
(bad)
xor
cmp
dec
fdivr
cmp
cmp
es
xlat
or
xor
loopne
or
inc
push
inc
loop
fdiv
xor
xor
xor
xor
cld
xor
xor
push
xor
xor
cmp
pop
xor
clc
xor
pop
sbb
xor
xchg
sub
cmps
xor
inc
js
adc
ds
push
or
ins
and
dec
stos
(bad)
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
(bad)
fstp
cmp
cmp
repnz
mov
test
cmp
sub
outs
aas
push
mov
cs
xor
pop
inc
popa
inc
repnz
sti
inc
jle
mov
dec
jmp
(bad)
inc
stos
inc
scas
inc
xchg
ds
pmaxsw
or
push
mul
ds
mov
test
pop
add
pop
dec
fmul
xor
loop
scas
ss
enter
test
rcr
(bad)
scas
shl
dec
fbstp
mov
cwde
ss
not
(bad)
sub
or
getsec
push
(bad)
or
add
adc
mov
je
adc
aaa
ss
xor
cmp
test
adc
aaa
push
es
outs
ret
ja
jb
jne
push
mov
and
aaa
(bad)
call
clc
loop
aaa
cmps
xchg
aaa
sub
pop
in
pop
shl
aaa
icebp
stos
mov
mov
push
mov
ins
mov
aaa
mov
stos
adc
cmps
cmp
cmp
xchg
clc
sub
or
cmp
sub
jg
cmp
(bad)
pop
cmp
bound
ja
jb
jne
and
mov
cmp
cmp
(bad)
mov
cmp
cmp
cmp
cmp
jp
inc
cmp
cmp
mov
cmp
xchg
mov
stos
cmp
cmp
(bad)
push
cmp
cmp
repnz
and
adc
add
ss
hlt
jg
(bad)
cmp
cmp
inc
stos
push
cmp
loopne
jl
(bad)
(bad)
and
mov
xor
dec
xor
xlat
jg
xor
pop
xor
jne
sub
push
or
xor
mov
mov
mov
pop
std
xor
enter
test
mov
(bad)
cwde
xor
(bad)
xor
ja
(bad)
jmp
or
xor
xor
xor
xor
xor
xor
xor
jbe
xor
dec
and
xor
sub
push
xor
xor
xor
xor
jmp
cmp
ja
jb
imul
pop
lea
xor
pop
mov
mov
xor
xor
xor
jp
xor
xor
xor
mov
shl
icebp
xor
push
mov
xor
(bad)
(bad)
jg
fisubr
xor
xor
xor
xor
or
wrmsr
push
xor
xor
jg
(bad)
push
add
adc
and
adc
add
xor
cmp
ja
add
xor
inc
xor
push
push
pop
sbb
jb
(bad)
jg
xor
jne
push
mov
xor
xor
xor
jmp
jmp
cmps
xor
xor
xor
cmp
add
test
icebp
xor
xor
xor
(bad)
(bad)
(bad)
jg
(bad)
xor
xor
or
rdtsc
push
xor
xor
xor
xor
xor
xor
add
ja
aad
shl
xor
xor
dec
xor
add
sbb
ficom
sbb
sub
or
jnp
xor
mov
xchg
ja
push
test
push
popa
pop
repnz
out
push
mov
sbb
and
push
or
push
xchg
lods
lahf
push
pop
add
dec
pop
and
dec
inc
pop
inc
dec
xor
iret
xor
aad
inc
sub
ret
(bad)
(bad)
cmp
jp
bnd
or
jo
ja
lods
push
add
call
or
mov
dec
jnp
imul
jg
pop
popa
push
jo
outs
lahf
ret
cmp
js
sub
pop
stc
aaa
mov
div
test
outs
fs
(bad)
inc
and
mov
icebp
test
mov
fldcw
div
cmp
aam
add
ficomp
xor
test
sbb
mov
mov
xor
shl
and
jbe
fwait
xchg
add
mov
mov
jp
jl
add
test
test
je
aam
repz
ffree
ss
xor
dec
and
xor
cwde
cdq
mov
and
jbe
(bad)
adc
or
shl
mov
cmp
and
mov
nop
mov
cmps
add
mov
dec
pushf
or
add
push
sbb
in
sbb
dec
je
mov
retf
add
mov
out
cs
mov
aaa
push
sbb
jo
es
jo
xor
cwde
loopne
data16
add
pop
and
pushaw
xchg
cmp
xor
rcl
shr
xchg
mov
inc
mov
dec
ins
or
add
cmps
ds
test
sbb
push
shl
mov
push
rol
fcmovb
push
pop
push
shl
push
fsub
xor
pop
sbb
rol
xor
push
jbe
push
mov
mov
(bad)
push
or
ss
push
mov
push
mov
jo
imul
sbb
adc
fsubr
mov
jl
icebp
(bad)
lock
sbb
sahf
dec
add
add
mov
fiadd
xlat
sub
pusha
fst
shl
add
lods
mov
pop
dec
ror
add
xchg
ficomp
int3
cmp
jp
mov
mov
or
add
pop
mov
lock
xor
or
mov
mov
sahf
sbb
push
pop
retf
mov
dec
loopne
jo
adc
sub
data16
js
hlt
cmp
mov
shr
mov
out
jo
mov
adc
mov
js
loopne
pop
or
pushf
jbe
pusha
mov
fmul
jle
dec
sbb
in
and
mov
cmps
sbb
popa
jp
pusha
mov
ja
repz
jmp
pop
cmp
ds
hlt
xchg
int3
jecxz
ins
(bad)
mov
fdiv
add
cld
repz
adc
outs
jne
pusha
push
push
add
push
mov
in
hlt
cmp
sub
jae
(bad)
sbb
and
sbb
fs
cdq
into
ror
(bad)
sbb
xor
shr
cmp
push
mov
push
cmp
inc
mov
add
mov
cmps
xlat
not
pusha
xor
jecxz
in
push
pop
les
pop
mov
cmp
shl
cmp
int3
enter
lods
xlat
add
aam
inc
rcr
push
aam
fcmovb
jmp
movs
pushf
adc
xchg
add
sahf
cmp
mov
pop
push
mov
(bad)
cmp
dec
or
cmps
popa
es
(bad)
aam
mov
sub
outs
test
test
sbb
pop
fwait
les
push
aaa
cmp
cmp
adc
js
sbb
push
or
sar
sbb
aam
nop
cld
ret
cmp
cmp
cmps
sbb
ret
adc
sub
js
into
iret
pusha
pop
test
(bad)
sub
xor
test
aam
xlat
(bad)
xor
rcl
out
jo
add
js
cmc
or
in
out
popa
(bad)
repz
mov
or
mov
cmp
jmp
pusha
(bad)
mov
ins
je
in
add
pusha
mov
pop
adc
xchg
test
xchg
lea
xchg
pop
add
sub
push
cmps
fisub
cmp
ins
add
push
sub
call
xor
add
ins
cmc
sbb
xor
inc
addr16
pop
and
pusha
add
imul
and
outs
ins
fs
js
cmc
mov
push
xor
data16
mov
aaa
ss
enter
jge
test
adc
jo
nop
call
sub
adc
scas
push
push
dec
pusha
mov
push
pop
cmp
call
add
xor
div
add
in
push
(bad)
shl
dec
dec
scas
shl
into
mov
ins
call
icebp
aam
or
mov
xchg
push
add
sbb
xchg
or
fs
fcom
clc
dec
dec
fimul
xchg
scas
add
call
xor
out
push
sbb
sub
fadd
lods
sahf
cmp
xor
sub
fwait
rol
sti
add
inc
xchg
or
loopne
dec
mov
out
retf
outs
outs
data16
mov
imul
imul
ins
imul
es
or
pushw
mov
cs
push
imul
sub
imul
adc
push
int
call
and
imul
ins
push
mov
mov
std
int3
pop
outs
mov
push
push
adc
int3
int3
in
call
sub
dec
jo
xor
or
and
fnstcw
addr16
add
xor
ret
mul
ins
imul
and
mov
dec
adc
add
push
or
imul
add
or
imul
scas
fnsave
push
add
enter
add
or
addr16
pushf
mov
ins
sbb
add
add
sub
int3
sub
lea
and
sbb
mov
cwde
mov
jl
push
xchg
mov
mov
sbb
xor
xor
sbb
mov
cmps
pop
add
ret
inc
pusha
pop
loop
stos
enter
pop
cmp
fiadd
sub
pushf
fchs
add
sbb
inc
inc
cmp
cmp
ins
fsubp
xor
pop
cmp
int
out
push
scas
sub
and
inc
aaa
js
cmps
adc
push
sub
(bad)
(bad)
jbe
dec
shl
int3
out
sahf
shr
ins
push
lods
or
dec
imul
add
xor
cdq
cdq
mov
rcl
jnp
mov
pop
ret
fcomp
xchg
js
mov
mov
add
fsubrp
push
out
mov
mov
stos
mov
test
push
xor
inc
inc
mov
or
push
add
imul
fidiv
push
mov
cmp
mov
cmp
inc
push
add
push
daa
sbb
push
cmp
mov
imul
pop
xor
adc
stc
fld1
push
and
add
ffree
mov
fnstsw
sub
cs
imul
pop
aam
pushf
mov
xor
sbb
dec
loopne
outs
pop
push
sahf
and
in
xor
mov
ss
cli
ds
retf
js
addr16
ja
push
or
pusha
xor
cdq
addr16
jae
out
mov
sbb
fsub
add
cld
js
sbb
shr
xchg
sub
scas
rcr
popa
jne
push
imul
cdq
cmp
lods
xchg
cmp
ins
xchg
outs
std
pop
(bad)
in
sbb
ins
retf
inc
mov
outs
loope
loope
xor
sbb
adc
popf
outs
nop
dec
rol
(bad)
test
int3
push
mul
outs
ins
gs
push
imul
pop
inc
pop
fucomp
cs
jl
inc
dec
cmps
xchg
jnp
push
cmp
ins
pusha
stos
pop
jle
(bad)
aad
popf
int3
loopne
xor
mov
xchg
and
mov
pushf
push
btr
cmp
(bad)
pop
sbb
inc
fwait
femms
stos
sub
pop
cmp
pop
popf
ins
and
xchg
push
cmp
gs
jo
pusha
loopne
shl
ss
lea
add
mov
rcr
mov
pushf
call
sub
ret
jmp
hlt
js
adc
dec
iret
pop
push
sbb
push
imul
jo
int3
call
cdq
popf
mov
add
add
mov
daa
jle
adc
mov
je
dec
push
or
push
mov
push
inc
js
sbb
out
xchg
adc
aaa
out
or
or
push
adc
mov
fwait
add
push
jle
repnz
popf
inc
add
mov
adc
pushf
dec
fwait
in
fs
add
mov
fist
pop
imul
hlt
push
push
pop
push
in
pop
sbb
gs
sar
jo
inc
add
push
and
and
hlt
xchg
inc
add
or
pop
fsubr
movs
jl
out
sahf
mov
test
je
stc
data16
enter
cmp
adc
lahf
jg
mov
add
cs
add
les
mov
xor
xor
add
fadd
mov
int
dec
xor
add
sahf
jo
neg
clc
ins
push
xor
lock
inc
cld
in
inc
add
call
es
lock
xor
push
push
std
lock
mov
push
fstp
xchg
add
retf
lock
es
retf
int3
popf
imul
mov
jmp
imul
scas
mov
add
shl
js
ins
push
dec
and
mov
je
and
and
popa
je
xor
fcomp
push
test
xlat
(bad)
xor
push
inc
inc
inc
inc
inc
inc
and
pop
add
mov
or
xchg
cmp
lahf
and
push
push
xor
add
sahf
xlat
pop
lods
addr16
mov
mov
sahf
out
fsub
in
hlt
iret
repz
cld
add
or
sbb
cmp
repz
xor
inc
dec
repz
repz
pop
fs
je
repz
jl
mov
cmp
mov
(bad)
int3
in
shl
add
add
add
ins
loopne
add
xor
gs
xchg
jns
repnz
mov
inc
mov
test
outs
adc
je
dec
dec
sub
int3
xor
and
fadd
xchg
cld
and
push
push
inc
xor
xor
or
add
xor
or
or
ins
retf
add
push
pop
lahf
cmps
adc
mov
and
or
mov
imul
loopne
xor
push
nop
adc
xor
call
push
clc
rol
xor
fstp
push
adc
call
sahf
sar
push
aas
inc
pusha
inc
je
xlat
xchg
das
inc
test
sahf
out
add
add
add
xor
out
add
iret
repz
pop
xor
inc
or
repz
je
mov
jns
shr
aam
repz
paddsb
add
adc
sub
cmp
push
call
push
push
ds
cmp
pop
mov
pop
enter
call
add
jns
out
dec
test
sahf
xor
cld
mov
cmp
repz
repz
mov
test
iret
repz
sar
xchg
add
call
cmp
mov
or
push
punpckldq
mov
pop
add
mov
in
jbe
push
mov
adc
sbb
inc
ret
or
shl
outs
add
cmp
jae
adc
and
add
adc
xchg
push
fs
add
dec
inc
mov
or
xor
or
cmc
sahf
ja
sbb
cmp
std
dec
jns
out
cld
pop
cli
push
out
clc
nop
mul
mov
xor
out
repz
icebp
repz
repz
sub
inc
iret
repz
out
push
in
fs
js
iret
repz
mov
pushf
sti
add
cmps
clc
mov
lahf
xchg
add
or
in
push
jae
push
xor
add
add
or
dec
fadd
push
cmp
lock
or
or
add
pop
mov
lahf
in
in
cmp
inc
and
or
outs
pop
outs
push
(bad)
adc
add
add
pop
pop
add
adc
in
lock
and
jo
ja
jmp
jb
test
adc
or
mov
jo
pop
jns
dec
outs
pop
add
out
sahf
out
mov
sti
cld
sahf
out
sahf
std
(bad)
inc
add
jns
out
add
xchg
out
add
call
cli
ror
push
adc
xor
repz
sbb
cmps
lahf
mov
repz
fadd
in
add
adc
cmp
cmp
pusha
sub
repz
data16
cmp
pop
pusha
ds
repz
jo
dec
cwde
repnz
xchg
not
inc
cld
jge
push
(bad)
push
and
inc
mov
sti
scas
inc
clc
daa
test
push
ins
addr16
mov
push
add
add
or
push
pushf
inc
loopne
mov
loopne
outs
test
push
adc
mov
call
out
jnp
out
xor
fs
xchg
idiv
in
pushf
sbb
push
sub
adc
test
pop
js
nop
push
cmp
or
jmp
cmps
jns
mov
movs
lods
out
(bad)
mov
push
mov
push
rol
sbb
cs
dec
or
sbb
retf
mov
fs
pushw
cld
pushf
push
ins
(bad)
mul
mov
mul
ror
addr16
sar
pop
lock
push
call
enter
inc
pop
in
push
mov
or
shl
into
enter
out
std
dec
xor
or
xor
and
scas
lds
test
mov
into
mov
imul
dec
jg
cmp
adc
test
loopne
mov
jl
int3
out
out
dec
out
mov
scas
aam
es
(bad)
fidiv
js
push
push
ins
pop
scas
adc
movs
idiv
pusha
add
les
sahf
neg
ss
push
xor
sbb
ret
ror
ja
test
jl
jns
dec
movs
test
add
call
sahf
cmps
adc
test
fdiv
xchg
movq
loopne
mov
aam
push
stc
sahf
mov
push
add
cmp
push
lahf
xchg
movs
daa
data16
cmps
jge
repz
enter
out
cwde
loop
ret
sbb
cmp
push
adc
in
test
les
push
iret
loopne
fadd
push
mov
adc
inc
and
es
pop
outs
ds
and
inc
add
shl
mov
push
add
fs
bound
lea
(bad)
push
add
imul
push
or
push
push
sbb
movs
ror
dec
out
sbb
adc
(bad)
and
pop
inc
sbb
or
aaa
dec
push
dec
push
mov
gs
pop
inc
dec
sbb
jmp
or
pop
rcl
inc
inc
out
jl
add
rol
sbb
xor
add
push
xor
inc
push
inc
jl
xor
cld
jg
clc
aas
push
in
jns
pop
jmp
rol
popf
in
ins
add
pop
or
push
aas
(bad)
jg
and
add
add
adc
fisttp
pop
jo
pusha
rol
neg
rol
mov
psubb
les
addr16
push
out
ds
mov
ficomp
out
dec
jb
sbb
add
loopne
lock
dec
mov
sbb
clc
pop
push
(bad)
aas
pop
mov
in
popf
cs
pop
xchg
addr16
lock
ss
mov
xor
pop
std
cmp
sahf
push
add
mov
inc
add
jl
cmps
data16
jg
and
clc
mov
inc
add
jo
inc
jle
mov
rol
inc
lock
sahf
cmovo
push
or
mov
add
nop
es
sahf
out
add
add
nop
into
push
add
neg
or
mov
daa
add
add
comiss
add
outs
daa
add
int
mov
lock
mov
and
dec
add
mov
ins
outs
push
inc
pop
outs
clc
(bad)
mov
dec
xlat
add
pusha
add
pop
dec
add
xlat
pop
xor
lods
sub
add
mov
pop
das
ds
jg
stos
mov
call
or
les
in
les
test
sub
mov
nop
ds
add
ins
scas
jbe
pop
cld
pop
cmp
fcom
mov
cs
addr16
lds
lock
cmps
inc
push
aaa
cs
lock
inc
std
or
into
data16
jle
or
push
sub
inc
add
sti
in
inc
add
pusha
xor
sbb
push
push
sbb
pop
adc
shr
sbb
lock
fwait
int
mov
sbb
push
sbb
or
test
repz
inc
xchg
and
cmp
and
pop
add
jb
push
gs
jns
mov
imul
cmp
mov
mov
pop
jo
push
popa
ja
imul
fs
outs
ss
outs
data16
into
jnp
jne
jo
dec
add
stos
neg
into
jae
js
out
sti
sahf
outs
je
data16
ss
test
add
mov
ins
add
mov
bound
pop
ja
cmps
addr16
jne
sub
out
mov
scas
and
outs
sub
ins
sub
out
mov
dec
je
outs
mov
mul
xchg
xor
jbe
and
mov
and
jb
and
sar
push
jbe
lahf
mov
lock
out
jmp
add
sbb
sub
gs
or
outs
sbb
lods
xor
pop
pop
(bad)
test
push
daa
pop
ja
fimul
inc
mov
push
jg
call
push
scas
cmp
mov
ja
cmp
push
push
adc
cmp
cmp
dec
iret
dec
dec
or
add
scas
sbb
pop
push
xlat
ds
push
inc
into
ins
add
in
out
imul
sub
jg
add
pop
icebp
call
aaa
outs
or
inc
or
sti
popa
stos
imul
pop
ret
imul
add
add
dec
add
cld
cmp
dec
cs
xchg
arpl
mov
adc
es
(bad)
out
scas
shl
xor
mov
push
dec
mov
add
mov
mov
imul
or
sub
(bad)
pop
add
imul
mov
iret
jbe
imul
jg
scas
(bad)
sub
inc
push
imul
jnp
jnp
adc
popa
stos
xor
cwde
outs
pop
shl
arpl
je
cmps
out
mov
ja
add
inc
xchg
ficom
les
sub
dec
sub
cmp
or
xchg
out
bound
fwait
jbe
imul
and
imul
xor
aaa
(bad)
hlt
out
shr
or
dec
loop
cs
xor
outs
sub
lock
jg
jae
pushf
into
mov
inc
jo
fucomi
mov
dec
out
and
push
fisubr
push
sbb
xlat
pop
pop
mov
push
add
xor
or
scas
pop
shr
sub
sbb
pop
retf
cmp
mov
jo
push
dec
femms
add
xchg
ins
xlat
mov
(bad)
out
jb
imul
daa
mov
test
daa
das
xlat
xor
xor
jmp
rcr
mov
push
dec
fbstp
inc
jo
out
fisub
mov
(bad)
ins
jne
cmps
mov
lods
pusha
je
xlat
xlat
mov
jmp
pushaw
and
mov
or
mov
addr16
xor
pop
add
daa
aas
adc
inc
lds
outs
xchg
dec
cmp
clc
jne
xchg
jo
shrd
dec
fistp
iret
mov
xor
sub
add
pop
loop
push
sub
jecxz
jo
jo
pop
cmp
push
stos
mul
adc
mov
mov
push
aaa
das
loopne
fwait
adc
pop
xor
sub
add
je
ds
pop
cmp
sbb
cs
inc
(bad)
outs
pop
push
dec
pop
pop
pop
cmps
sbb
(bad)
jmp
imul
mov
pop
and
std
jp
inc
and
jp
outs
bound
sbb
xor
jno
jg
sub
inc
fistp
mov
iret
jns
xchg
or
push
jl
dec
jbe
cmps
push
sbb
hlt
scas
ins
inc
ja
aaa
adc
sbb
movs
stos
jo
push
add
dec
mov
stos
aas
fild
and
add
es
enter
adc
rol
push
pop
fcom
pop
pop
xchg
adc
test
sub
iret
mov
pop
xor
mov
jo
adc
pop
das
or
xchg
daa
idiv
pop
sbb
stos
xchg
adc
cmps
xchg
push
push
jecxz
jecxz
bound
in
mov
bound
sub
dec
sub
in
mul
mov
bound
fwait
or
aad
ror
sbb
push
stos
mov
add
out
ins
adc
mov
push
das
xchg
jge
scas
stos
pop
pop
je
mov
or
xor
add
cmp
test
sbb
bound
or
lods
and
and
pop
jns
rol
gs
loopne
adc
push
into
mov
push
outs
sbb
fucomi
idiv
pop
xchg
or
imul
scas
jb
push
ret
sbb
iret
inc
and
pop
iret
jnp
dec
pop
ins
push
inc
addr16
aaa
xor
imul
push
dec
mov
pop
fisttp
jne
and
out
bound
and
jo
scas
add
jp
out
popf
cs
scas
adc
push
sti
xlat
or
ins
pop
pop
ret
je
pop
pop
outs
pop
cmp
repnz
mov
jmp
fisubr
push
(bad)
sub
pop
aaa
stos
xor
push
mov
mov
psubq
mov
es
jae
sbb
popw
sub
jge
fwait
das
mov
cli
dec
sbb
sub
mov
push
aas
push
mov
pop
lahf
mov
js
arpl
(bad)
out
or
or
or
mov
jo
outs
push
xor
mov
imul
ja
xor
xor
jbe
inc
and
xor
shl
jae
pop
or
scas
(bad)
das
arpl
inc
pop
jg
dec
mov
call
aaa
adc
push
outs
adc
add
mov
mov
mov
push
mov
xor
mov
aas
add
mov
pusha
push
arpl
and
ins
out
xor
dec
aaa
sub
push
outs
cmp
push
mov
outs
xchg
or
lods
sub
(bad)
je
pop
cs
mov
fistp
xchg
scas
arpl
xor
ret
or
jbe
pop
pop
sti
xlat
cmp
fisub
add
cmp
aam
in
xor
sbb
out
shl
jo
pop
pop
pop
push
(bad)
paddsw
jae
sbb
cwde
cmp
and
sub
xor
pop
scas
outs
or
inc
xlat
sub
jae
add
jno
jno
pop
shr
adc
test
or
dec
or
das
ds
mov
sub
xchg
jns
cli
ret
push
fisubr
call
mov
iret
popa
push
fs
push
push
xchg
pop
sti
jns
(bad)
pop
pop
outs
movzx
or
scas
or
jb
test
xchg
jecxz
arpl
jge
adc
xlat
rcl
ja
and
outs
adc
xchg
test
jmp
jb
stos
jo
loope
(bad)
xor
ror
adc
or
pop
inc
arpl
mov
pusha
sar
sbb
push
sti
pop
aas
arpl
or
(bad)
aas
es
aaa
mov
pop
fwait
cmp
pop
int3
add
jno
xchg
adc
lea
xchg
inc
js
fcmovnbe
xchg
bound
inc
(bad)
xchg
or
adc
fcmovnu
je
movs
xor
lods
lea
jns
dec
ins
(bad)
mov
push
adc
jge
pop
(bad)
pop
and
push
jns
add
fmul
fisubr
pop
adc
aas
fcom
xor
pop
adc
mov
or
lahf
mov
add
gs
push
push
jo
fadd
outs
dec
sub
push
sbb
fld
xchg
inc
ins
addr16
jne
jbe
rol
sub
rcl
out
mov
fs
add
jbe
loopne
add
cmp
daa
cmp
loope
rol
imul
and
inc
dec
sub
dec
inc
fcom
jl
cdq
inc
xor
dec
fs
jb
es
and
rol
mov
or
or
add
inc
add
(bad)
sub
sbb
adc
add
add
and
pushf
pop
or
cs
scas
cwde
xor
sar
ins
add
or
push
and
add
jg
or
add
imul
mov
popa
push
outs
out
xor
or
and
adc
xor
jb
push
shl
add
add
and
adc
je
pop
mov
pop
aaa
add
ins
jae
push
xchg
add
jb
jo
inc
adc
out
or
adc
outs
or
add
imul
sub
add
sbb
jg
rep
ins
outs
arpl
gs
imul
and
push
gs
mov
dec
push
and
mov
pop
hlt
cs
add
mov
(bad)
iret
scas
sbb
dec
sbb
adc
inc
imul
(bad)
adc
imul
jbe
cmp
inc
mov
add
in
sub
xor
push
outs
ins
les
rol
mov
dec
add
dec
push
mov
cwde
loopne
fsubr
inc
gs
je
pusha
popa
dec
mov
and
inc
fs
inc
push
dec
push
mov
sti
or
sbb
imul
rcr
popf
ficomp
jp
sbb
push
cmps
enter
sbb
dec
cmp
imul
jnp
jne
test
fcomp
fcmovne
rcr
imul
and
(bad)
mov
push
sub
sbb
aas
dec
fs
ss
add
or
(bad)
sbb
dec
fisttp
(bad)
sbb
movs
shl
mov
xor
xchg
push
sbb
jmp
and
pop
sub
cwde
or
mov
inc
pop
lds
pop
loopne
mov
push
pop
pop
xchg
aad
icebp
inc
sbb
sbb
xchg
xchg
push
bnd
sub
cmc
add
inc
push
sbb
movs
sbb
mov
jne
loop
add
or
scas
inc
dec
mov
and
push
xlat
rol
mov
xor
add
adc
setbe
lock
add
movs
gs
push
outs
mov
mov
je
adc
add
mov
scas
inc
rol
jns
imul
je
loopne
push
adc
dec
xchg
mov
cmp
popf
in
inc
sbb
sub
aas
pcmpeqb
xor
mov
push
popa
or
sub
and
add
ja
inc
mov
xor
repnz
mov
cmp
fistp
push
pop
adc
in
and
xor
jae
ins
xchg
inc
rcr
push
add
scas
aaa
sbb
pop
dec
sbb
sub
iret
mov
push
arpl
ror
add
inc
dec
add
cwde
and
sub
loope
adc
dec
jmp
sub
(bad)
(bad)
xor
sub
rcr
sub
jae
lods
das
and
imul
mov
adc
ror
imul
sub
add
lods
and
cmc
add
add
cmp
pusha
pop
mov
xchg
add
xor
sahf
arpl
ins
out
lods
jp
jg
dec
jb
js
aam
ja
test
pop
pop
jae
jge
js
cs
push
dec
push
xor
mov
out
iret
iret
adc
gs
popa
bound
push
test
mov
das
mov
aad
dec
push
test
test
ins
scas
inc
inc
jl
sbb
ins
mov
adc
jb
sbb
jnp
fadd
pop
jmp
pop
pop
adc
and
mov
loopne
push
out
ds
and
fwait
xor
ret
sbb
je
push
inc
add
jmp
dec
inc
add
(bad)
inc
inc
adc
add
sub
add
mov
xor
push
inc
pop
xor
lods
add
loop
mov
(bad)
sub
inc
outs
pop
or
fnstcw
or
dec
cmp
adc
pop
mov
inc
popa
into
and
or
test
sbb
or
and
and
push
addr16
sub
jnp
lahf
sbb
ins
data16
sub
mov
test
test
lock
daa
jnp
or
adc
inc
imul
add
mov
inc
push
dec
inc
sub
dec
pop
ret
mov
sub
adc
and
(bad)
jns
pop
add
scas
or
repz
cmp
add
adc
mov
mov
xchg
clc
mov
retf
stos
push
jo
pop
test
ret
test
mov
outs
imul
adc
adc
jb
ins
outs
lea
fisub
imul
add
jne
ret
add
mov
add
add
and
or
sbb
lock
in
or
(bad)
mov
dec
inc
and
rcr
fs
adc
add
cld
arpl
outs
outs
xor
fnstenv
pop
wrmsr
fdiv
fs
jo
int
add
inc
and
add
sbb
jnp
push
sub
std
sub
mov
and
cmp
arpl
jae
aaa
pop
stos
dec
mov
cmp
outs
ret
mov
or
xor
and
fisttp
mov
adc
pop
pop
popa
imul
loope
aas
mov
inc
xchg
les
ss
hlt
je
jne
and
in
imul
jae
dec
ins
out
inc
push
mov
cs
pop
and
fcomp
dec
fwait
and
jecxz
fbstp
cdq
(bad)
mov
dec
or
push
sbb
mov
push
adc
test
aad
dec
data16
cmps
xor
aad
pop
test
fs
mov
pop
mov
(bad)
imul
fld
and
rol
sbb
and
jge
and
data16
(bad)
mov
imul
adc
sbb
jb
ins
lea
inc
ret
adc
pop
push
push
outs
sti
retf
test
inc
xchg
and
sti
pop
lds
sti
sbb
xor
inc
fisub
mov
jo
adc
cmp
imul
retf
and
stc
dec
(bad)
cmp
das
daa
leave
pop
(bad)
cmp
and
mov
push
push
or
push
mov
jmp
cdq
inc
adc
mov
ss
xchg
sti
push
xlat
movs
(bad)
jecxz
fistp
adc
xor
imul
and
popf
cmps
in
push
sub
sbb
pushf
inc
mov
inc
imul
popa
fist
leave
sbb
movs
add
and
pop
or
inc
mov
pop
test
mov
push
std
and
(bad)
(bad)
dec
aaa
jecxz
repz
stos
jbe
lock
push
movs
add
or
scas
cmp
or
jg
mov
add
pop
inc
and
xchg
jbe
inc
sbb
sbb
xlat
js
pusha
pop
call
and
xor
fadd
push
pop
leave
pop
and
shl
add
mov
pop
inc
movs
pop
ins
inc
and
adc
cmc
jns
aas
mov
push
gs
fs
.byte
.byte
or
.byte
