adc
mov
imul
pop
and
sub
pop
scas
cmp
pop
lods
outs
dec
adc
ins
hlt
aam
cmp
inc
dec
xchg
pushf
pop
xor
pop
hlt
pop
and
ins
hlt
pop
and
out
pop
scas
sbb
xchg
fist
shl
push
jbe
and
clc
movs
scas
and
pop
scas
and
xchg
pop
fcomip
pop
push
mov
pop
mov
pop
and
pusha
stos
dec
jle
mov
inc
jo
hlt
jge
add
pop
gs
or
test
ins
and
aaa
jge
js
or
mov
sub
out
sbb
fdiv
cmps
ins
add
push
pop
and
ins
hlt
sahf
pusha
xchg
jg
xor
cld
inc
push
and
das
or
out
or
sub
pop
pop
and
out
mov
jae
jns
xor
ins
jg
xchg
and
outs
push
and
push
hlt
inc
jb
dec
add
push
inc
push
and
cs
in
loope
sub
pop
inc
push
and
cmp
js
jg
sub
arpl
cmps
dec
xchg
or
cmps
test
call
or
(bad)
xor
test
sbb
mov
pop
test
sbb
or
in
test
pop
in
fidivr
sbb
fist
sahf
pop
loop
in
ins
call
and
aas
mov
and
lods
xor
xor
ins
hlt
pop
dec
fs
pop
ins
hlt
xchg
loope
std
xlat
push
imul
hlt
cld
add
or
push
inc
movs
call
and
ins
ja
sub
cs
call
pop
hlt
pop
cmps
test
scas
and
hlt
pop
js
stos
dec
lods
sub
ins
hlt
bound
aam
pop
and
inc
inc
push
and
xor
push
and
or
and
mov
push
and
ins
movs
jae
dec
hlt
pop
and
aas
mov
inc
cld
push
shl
pusha
rcl
es
xor
push
hlt
jg
fdiv
push
and
ins
sbb
pop
ins
hlt
call
and
cs
call
and
cs
jmp
hlt
pop
cmps
test
es
in
jmp
test
ins
and
iret
hlt
pop
and
in
scas
xor
cmc
pop
int
adc
aas
mov
popa
jno
or
fucom
xor
push
hlt
jge
push
hlt
jge
add
pop
and
sub
dec
sbb
pop
lods
scas
ja
ficomp
lock
call
pushf
inc
jmp
and
xchg
or
fs
out
xchg
xchg
or
test
pusha
and
sbb
pop
adc
sahf
push
dec
cld
push
push
and
fisttp
call
and
push
or
and
lods
mov
cmp
(bad)
and
jmp
jge
cmps
stos
in
nop
cwde
inc
jmp
in
stos
dec
in
scas
mov
sbb
dec
cmp
(bad)
sahf
loop
mov
jne
mov
jne
hlt
jg
ins
sti
pop
dec
ins
sahf
pop
dec
ins
or
xchg
sbb
and
sub
arpl
pop
xor
fs
or
push
jo
pop
ficomp
in
push
nop
sbb
pop
ins
hlt
sahf
jecxz
sub
and
pop
xor
cmp
mov
and
repz
daa
ins
hlt
pop
into
pusha
jge
ror
xor
in
stos
dec
in
scas
mov
inc
call
jbe
sub
inc
dec
jne
adc
push
pusha
or
test
outs
and
call
ficomp
in
call
cmp
hlt
call
fld
rcr
sbb
jmp
adc
adc
lods
pop
sbb
lods
mov
and
or
fucom
xor
movs
aaa
inc
lods
mov
xor
sbb
lods
mov
cmp
mov
iret
lods
scas
or
push
fdiv
pop
cmps
or
into
add
jge
or
jge
fisubr
mov
into
cs
(bad)
pushf
jo
sti
test
xor
(bad)
push
outs
or
in
xchg
in
xchg
mov
sbb
(bad)
fcom
jmp
jl
push
shl
mov
sbb
add
out
out
into
pop
jge
ror
aaa
push
lods
popf
ja
fisubr
sub
sub
fisubr
or
pusha
fs
cmps
movs
or
push
cmc
pop
push
xchg
int
fstp
ja
ficom
scas
fsubp
cmp
popf
push
(bad)
arpl
out
sbb
nop
or
fiadd
hlt
bound
out
jmp
xchg
or
mov
or
ficom
hlt
pushf
pusha
fs
cmps
movs
or
push
cmc
pop
push
xchg
int
push
xor
and
xchg
sahf
fld
pushf
jo
jle
pop
in
adc
or
bound
imul
jno
ficom
ss
mov
or
(bad)
sub
aad
jo
and
or
and
xchg
or
aaa
cmp
inc
jbe
mov
popf
das
or
sahf
aad
adc
adc
pop
xor
daa
mov
and
mov
jge
rol
or
(bad)
jl
ss
out
jl
adc
int
pop
mov
lock
xor
sahf
sar
dec
sub
sub
popf
ins
test
and
sub
pusha
nop
(bad)
dec
sbb
push
ins
hlt
pushf
pop
fs
les
in
lods
lods
add
in
repz
fdiv
(bad)
ss
js
push
sbb
mov
fisubr
mov
sub
out
jmp
scas
fst
lods
cmp
dec
jnp
cmp
inc
jbe
mov
dec
xor
or
push
or
hlt
call
and
out
pop
sub
lock
lods
xchg
fucom
scas
and
sbb
sbb
es
pop
push
bound
imul
mov
lods
scas
(bad)
cmp
es
stos
dec
in
scas
mov
inc
scas
sbb
test
push
cmc
out
lods
stos
or
push
fdiv
jg
lea
jmp
mov
bound
pushf
dec
les
hlt
inc
int
or
fidivr
push
sub
call
jp
cmp
inc
jae
jg
sub
jbe
push
aaa
jge
or
jge
ficomp
cld
dec
hlt
pop
lods
stos
sahf
pop
dec
ins
pushf
call
jae
sbb
int
adc
in
push
fucom
xor
and
sahf
aad
stos
dec
js
mov
inc
jae
jg
sub
pop
dec
mov
ret
jmp
stos
ja
mov
sbb
mov
iret
mov
jne
in
call
and
or
pop
adc
sub
loop
bnd
jbe
sbb
push
ins
hlt
dec
jnp
cmp
xchg
leave
dec
cmps
inc
jb
sbb
imul
int
ins
hlt
xchg
add
and
int
test
and
add
mul
sbb
push
ins
hlt
sahf
out
out
and
sub
sahf
loop
xor
(bad)
arpl
lods
sub
in
mov
push
and
loope
out
test
and
lods
std
int3
sub
xor
pusha
mov
xlat
push
pop
jge
cmps
lods
lock
dec
int3
adc
call
xor
pop
and
cmp
sub
sti
mov
in
imul
adc
sub
sbb
fist
mov
and
xor
repnz
pop
hlt
push
and
ins
cmps
inc
jb
sbb
jge
and
jge
movs
push
mov
and
dec
mov
pop
fdiv
sbb
out
sbb
in
loopne
in
iret
ficom
leave
mov
je
mov
pop
or
in
ds
in
xchg
add
push
push
and
ins
hlt
call
or
test
gs
lahf
adc
and
xchg
or
add
call
sbb
clc
xchg
add
push
push
and
ins
hlt
sahf
std
ins
sub
out
aaa
jmp
pusha
cwde
movs
pushf
pusha
fs
and
das
fidivr
call
push
ins
sti
xchg
push
ins
hlt
pop
cmps
adc
pop
sub
aad
and
ins
jne
pop
fdiv
pop
push
inc
jne
jbe
hlt
pop
fisubr
mov
rcl
imul
shr
cs
pop
test
inc
push
and
mov
iret
lods
scas
sahf
pop
int
adc
xor
jge
inc
stos
mov
daa
ins
jg
fucom
mov
xchg
inc
push
and
loope
mul
aad
pop
and
adc
pushf
pop
push
mov
xchg
into
(bad)
fist
and
add
mov
ins
pushf
xlat
les
hlt
pushf
pusha
pushf
movs
pushf
sbb
ins
hlt
pop
lods
sub
push
in
ret
xchg
into
sbb
retf
ficom
push
push
and
sti
pusha
pop
and
gs
xor
hlt
call
pusha
pusha
int
stc
xchg
or
push
sub
ins
hlt
loopne
in
ret
ficom
leave
mov
addr16
mov
pop
or
xchg
mov
scas
sub
cs
xchg
sti
xchg
or
push
sahf
std
fwait
pop
sahf
mov
in
dec
jnp
cmp
xchg
leave
pusha
cmps
inc
jb
lods
imul
call
lods
stos
ja
fldcw
sub
arpl
and
sbb
shl
cmc
pop
and
xchg
fucomp
lods
stos
pop
bound
or
push
movq
out
adc
push
shl
shl
xchg
jmp
out
pop
test
not
jne
fs
ins
sbb
push
ins
hlt
xchg
loope
jne
sub
pop
jecxz
push
mov
ins
hlt
(bad)
std
fwait
or
sub
sbb
xchg
fucomp
lods
stos
ja
fldcw
test
push
push
and
ins
pop
push
lods
xchg
add
lods
sub
loop
xchg
jmp
pop
das
cld
cmp
arpl
push
pop
bound
xchg
pushf
pusha
fs
adc
push
les
out
xchg
jmp
in
es
xor
sub
xchg
sbb
mov
out
xchg
jmp
out
mov
and
fs
daa
mov
add
pop
into
sbb
and
jge
dec
ins
sahf
pop
dec
push
pushf
pop
and
repnz
int
fwait
pop
and
outs
sahf
pop
dec
ins
movs
call
hlt
pop
scas
sub
sahf
in
cmp
gs
enter
or
call
cld
call
dec
ins
hlt
jge
loope
jecxz
push
idiv
mov
inc
sub
and
test
jns
ins
stos
dec
jle
aaa
inc
lods
mov
outs
hlt
inc
hlt
pop
jbe
mov
pop
movs
scas
and
ins
jge
and
jge
jecxz
or
fist
mov
int
cwde
pop
and
xchg
or
fidivr
xchg
ficom
sti
xchg
lock
pop
lods
mov
iret
lods
scas
sahf
pop
int
test
and
ins
jge
jmp
mov
iret
lods
scas
or
test
xor
fist
or
cmps
test
xchg
sbb
push
push
and
xchg
xchg
lds
push
pushf
sbb
sub
push
in
pop
xchg
into
inc
clc
pop
and
xchg
or
or
push
and
xchg
or
push
or
sbb
and
lods
sti
xchg
sbb
lods
mov
iret
lods
scas
jns
in
or
jne
push
pushf
sbb
sub
push
in
jno
sub
int3
mov
fcmovu
xor
fist
or
in
out
ficom
or
fcmove
mov
cld
mov
jmp
movs
mov
iret
mov
jne
int3
call
fldenv
sbb
or
fwait
xchg
or
and
ins
hlt
xchg
cwde
xchg
or
fisubr
xchg
pop
dec
ins
pushf
dec
les
hlt
call
sbb
rcl
jge
inc
in
movs
ficom
hlt
pop
ror
or
lods
scas
sti
mov
ficom
call
adc
pop
sub
jno
ficom
jno
ficom
push
push
and
ins
ja
sub
xchg
xchg
xchg
or
jecxz
icebp
inc
test
inc
call
sbb
inc
push
and
ins
hlt
pop
lods
mov
iret
lods
scas
sahf
push
dec
mov
movs
mov
ins
sbb
rcl
leave
call
add
cmc
jg
mov
call
push
call
ficom
xor
and
hlt
pop
dec
ins
pushf
(bad)
lds
hlt
jg
int3
mov
int
add
(bad)
xor
sbb
sar
add
mul
jns
fcom
vpminub
or
and
jmp
cmc
pop
and
rcl
ins
sbb
rcl
leave
call
add
cmc
jg
mov
call
retf
call
ficom
xor
and
hlt
pop
dec
ins
pushf
mov
cs
jg
int3
mov
int
add
(bad)
xor
sbb
sar
add
mul
jns
fcom
pop
loop
xchg
ja
sub
call
loop
inc
call
and
clc
adc
and
ins
sbb
rcl
leave
call
das
stos
jno
ficom
hlt
scas
mov
hlt
pop
ror
or
lods
scas
sahf
push
dec
out
adc
and
ins
sbb
rcl
leave
call
das
stos
jno
ficom
hlt
jge
add
mul
pushf
inc
test
or
cmps
test
sub
xchg
hlt
pop
push
sub
push
and
xchg
or
jle
call
sbb
jmp
mul
jns
fcom
add
ficom
or
and
jmp
cmc
pop
and
xchg
or
and
sbb
push
and
xchg
or
jne
xor
ficom
icebp
addr16
cs
push
test
push
push
and
ins
jne
fwait
pop
hlt
pop
jecxz
or
fist
hlt
pop
lods
mov
hlt
lods
jmp
jge
test
sub
fist
or
fidivr
das
fidivr
test
pusha
nop
std
xlat
sub
add
and
xchg
or
jne
jno
ficom
or
in
jmp
mov
iret
lods
scas
ja
fldcw
fwait
push
and
fist
sub
out
push
(bad)
ficom
dec
call
stos
retf
and
ins
hlt
jno
jmp
jecxz
loop
pop
call
and
xchg
or
jne
jno
ficom
sub
fist
mov
dec
and
xchg
or
jne
mul
jg
mov
out
call
and
gs
mov
loope
(bad)
ficom
and
fist
arpl
and
nop
jne
inc
add
sti
xchg
and
hlt
pop
test
sbb
fist
or
fidivr
das
fidivr
int3
sahf
pusha
nop
std
xlat
push
inc
sbb
call
jg
stc
xchg
or
jne
int3
call
fxam
sub
std
in
xchg
pop
nop
hlt
sbb
in
pop
in
ins
hlt
call
jg
int
or
jne
int3
call
fldenv
sbb
in
pop
push
sub
sbb
fst
push
push
and
xchg
or
sti
cwde
pop
and
leave
sbb
fist
hlt
pop
dec
ins
sbb
dec
ins
hlt
scas
mul
pop
ror
or
lods
scas
or
test
or
fist
mov
test
or
fist
hlt
pop
cmps
test
jno
jmp
not
scas
jmp
jge
mov
jmp
movs
call
sbb
lods
mov
and
loope
xchg
xchg
or
push
push
pushf
cwde
test
jmp
fidivr
fcomp
or
jge
cmps
adc
pop
sub
adc
xchg
or
and
xchg
or
in
adc
mov
xchg
or
push
or
sbb
and
scas
into
adc
jmp
jns
lea
jno
ficom
or
in
jmp
mov
iret
lods
scas
ja
fldcw
fisubr
pop
cmps
leave
inc
call
les
pop
dec
ins
sbb
dec
ins
hlt
dec
movs
xchg
shl
outs
hlt
pushf
mov
in
outs
ficom
or
fidivr
mov
cmps
and
ret
pop
and
fld
xor
ins
hlt
pop
(bad)
leave
jg
mov
retf
call
fxam
sub
std
in
xchg
pop
nop
hlt
sbb
out
push
lahf
ficom
jl
fist
mov
scas
jmp
movs
pushf
sbb
ins
hlt
pop
lods
sub
push
in
jno
and
hlt
xchg
cwde
in
jmp
sub
pop
test
xchg
call
and
xchg
or
cmp
das
fidivr
aam
pusha
nop
jge
adc
jge
cmps
adc
pop
sub
adc
xchg
cwde
or
jmp
imul
cmps
rcr
mov
loope
jbe
xchg
or
fstp
(bad)
xchg
or
in
dec
ficom
pop
sahf
mov
in
xchg
cwde
or
sti
xchg
stos
ins
hlt
pop
loop
add
fist
sahf
adc
fld
xchg
jns
fcom
test
xchg
fcom
jbe
and
in
push
std
in
call
cmp
gs
enter
or
jmp
ficom
or
fidivr
xchg
fst
icebp
jmp
popf
pop
and
push
or
jne
lods
mul
jns
fcom
sar
ins
ja
xor
in
xchg
cwde
in
jmp
popf
jl
pop
and
xor
jmp
mov
cmp
daa
fidivr
cld
call
(bad)
jno
ficom
or
fisub
sbb
xchg
or
cmp
daa
fidivr
cld
pushf
mov
cmp
daa
fidivr
cld
xchg
(bad)
mov
jno
ficom
or
ficom
sti
ficom
or
(bad)
dec
out
xchg
or
push
imul
fcom
jno
ficom
or
out
dec
(bad)
ficom
jg
cmc
xchg
or
jne
(bad)
call
pop
ins
hlt
loopne
in
cmps
ficom
dec
ret
ficom
jg
icebp
xchg
or
jne
(bad)
call
std
xchg
or
jne
(bad)
call
stc
xchg
or
jne
(bad)
call
jne
hlt
pop
scas
jmp
movs
pushf
adc
pop
add
fidiv
stos
dec
in
scas
mov
jg
fdiv
push
and
ins
hlt
inc
inc
in
pop
and
js
inc
jb
xchg
jmp
sub
and
pop
mov
and
jge
shr
pop
dec
xor
pop
and
ins
ja
and
mov
jb
in
imul
mov
rcl
inc
push
and
inc
xor
xchg
or
fiadd
cmc
pop
and
scas
jg
int
mov
ret
jnp
sbb
pop
jae
hlt
cld
mov
or
jp
scas
xchg
ins
hlt
pop
and
ins
mov
add
pushf
xchg
xchg
cs
jge
push
hlt
jg
dec
mov
dec
ins
sahf
pop
int
xchg
pop
and
pop
nop
pop
and
mov
cmp
fs
and
hlt
pop
ror
xor
push
and
push
jne
xor
pop
cmps
dec
in
mov
xchg
add
and
cld
mov
and
sub
hlt
sahf
in
ins
cmp
in
icebp
push
mov
ins
hlt
sahf
aad
jle
xchg
adc
mov
sub
sti
fwait
pop
outs
hlt
pop
sbb
jnp
daa
ins
hlt
call
ins
je
cmp
test
push
fdiv
sub
out
adc
gs
jecxz
imul
sub
ins
hlt
xchg
sub
and
arpl
daa
ins
hlt
loope
sub
push
and
sub
ins
icebp
das
mov
xchg
icebp
das
mov
inc
cmp
in
cld
adc
sbb
xchg
cmc
pop
and
cs
loope
je
push
and
lods
sbb
xchg
int3
pop
(bad)
pop
and
sub
ins
push
and
ins
sbb
loope
je
push
and
lods
sbb
scas
lahf
jo
pop
ror
xor
push
and
xchg
or
and
and
lods
sbb
xchg
in
mov
and
sub
ins
push
and
ins
sbb
loope
je
push
and
lods
sbb
sahf
in
inc
cmp
in
stc
bts
mov
pop
and
xchg
or
and
and
lods
sbb
xchg
aam
rcl
and
sub
mov
fs
not
and
xchg
or
and
inc
push
and
sub
lods
pop
and
sub
cmc
pop
and
ins
cmc
adc
movs
(bad)
lods
je
cmp
test
pop
and
sub
cmc
adc
mov
mov
fs
cmc
adc
lods
hlt
pop
and
ins
cmc
adc
(bad)
pop
and
cs
xchg
and
and
ins
hlt
sahf
in
pop
cmp
in
icebp
das
mov
loope
pop
and
ins
hlt
pop
movs
popa
in
mov
xchg
aam
rcl
and
ins
push
inc
test
hlt
sbb
ins
std
xlat
pop
cmp
cs
call
ins
leave
xchg
and
push
cmp
and
dec
jno
xchg
cs
xchg
sub
and
imul
push
and
sub
icebp
das
mov
push
fist
and
sub
(bad)
xor
pop
and
in
jmp
mov
shr
mov
sbb
in
push
scas
ins
push
test
in
pop
cmp
in
inc
adc
mov
add
loopne
(bad)
test
lds
push
shl
push
rcl
pop
and
ins
hlt
pop
movs
adc
push
push
push
adc
movs
add
lods
sub
in
inc
push
rcl
pop
and
sub
and
sub
xchg
sbb
ins
push
and
adc
pop
push
and
push
push
cmps
imul
cld
sbb
mov
and
rcl
and
movs
jge
lods
pushf
mov
and
ins
sti
mov
and
sub
xchg
pop
call
and
fs
and
cld
mov
and
sub
sub
mov
scas
ins
jl
xor
and
sub
mov
cld
mov
sbb
clc
xchg
xchg
movs
popf
and
and
cld
mov
and
sub
sub
mov
scas
ins
jl
xor
push
push
and
sub
mov
repz
sbb
clc
xchg
xchg
fisubr
mov
or
push
adc
sub
sbb
fwait
adc
(bad)
jnp
cmp
inc
jae
dec
dec
sub
(bad)
xchg
rol
pop
and
cs
jg
(bad)
mov
int
stos
pop
and
(bad)
mov
jae
ss
and
cs
sahf
fstp
jge
dec
inc
dec
push
and
ins
hlt
mov
repz
dec
push
dec
push
and
ins
hlt
mov
icebp
mov
dec
daa
dec
push
and
ins
hlt
mov
repz
dec
xor
and
ins
hlt
mov
int3
mov
lods
xchg
cmc
out
lods
stos
stos
dec
in
scas
mov
jg
cmp
adc
or
push
fdiv
push
and
xchg
loope
test
hlt
shl
in
pop
and
mov
aam
or
pop
test
pop
sahf
pusha
pushf
xor
sub
pop
and
in
pop
addr16
hlt
xchg
inc
nop
hlt
call
and
in
pop
pop
sub
inc
mov
cmc
pop
and
ins
hlt
pop
and
cs
sahf
pusha
mov
adc
mov
loop
inc
adc
std
pop
sub
out
mov
and
hlt
pop
cmps
or
adc
push
mov
hlt
in
loope
push
hlt
pop
and
sar
shl
mov
lods
mov
iret
lods
scas
jns
mov
sub
dec
ins
sahf
pop
dec
push
adc
leave
or
push
inc
ficomp
push
call
push
jbe
ins
or
push
fdiv
bound
push
lock
xchg
xor
and
ins
hlt
call
jnp
hlt
call
and
xchg
and
fs
jg
rol
pop
ror
aaa
dec
jnp
cmp
xchg
leave
je
push
fld
inc
aas
out
jmp
scas
fst
lods
cmp
pushf
pusha
pusha
jge
aad
mov
xchg
inc
cwde
hlt
es
mov
jge
push
hlt
jge
loope
out
jne
mov
jne
sub
sar
call
xor
and
data16
fxam
ss
mov
sahf
sar
or
(bad)
sahf
fstp
sahf
loop
icebp
arpl
fs
call
fs
stos
dec
out
jge
cmps
cmp
jae
jg
sub
imul
sub
xchg
hlt
pop
and
sub
push
sbb
fcomp
xchg
sub
adc
and
sub
adc
xchg
hlt
pop
and
sub
adc
xchg
hlt
pop
and
ins
hlt
pushf
pusha
jl
push
imul
jecxz
or
sub
mov
sub
lock
mov
sub
loopne
sbb
sti
xchg
mov
hlt
pop
lods
xchg
mov
cs
jno
and
out
push
adc
sbb
sub
inc
add
push
bound
or
int
sti
mov
and
arpl
fiadd
xor
test
icebp
jle
cs
inc
int
test
and
pop
add
cs
inc
jne
dec
dec
and
out
cmp
scas
cmp
call
push
adc
not
out
sbb
lods
sub
pushf
pusha
jl
push
es
pushf
jo
jge
and
pop
and
sub
jl
js
sub
mov
sbb
sub
push
int3
pop
or
ficom
hlt
xchg
sbb
bound
or
movs
push
repnz
jge
cmps
test
xchg
sbb
bound
or
int
je
and
and
inc
adc
push
pushf
arpl
push
dec
pop
and
xchg
ja
and
enter
loop
std
outs
mov
test
int3
adc
imul
ins
hlt
pop
and
sbb
sub
outs
or
in
enter
movs
sahf
fucomp
sbb
movs
push
repnz
cmps
test
sbb
ins
hlt
pop
push
imul
and
out
cmp
scas
cmp
call
push
adc
cmc
iret
cmps
test
sahf
pusha
xchg
jg
xor
ins
or
int
jg
fucom
loopne
and
hlt
pop
movs
push
retf
ds
ins
in
enter
mov
adc
push
push
jge
cmps
test
xchg
sbb
bound
in
xchg
int
sti
mov
push
(bad)
leave
jmp
and
pop
and
scas
pop
and
cmp
adc
ja
and
lock
hlt
pop
(bad)
in
or
and
cmps
fisttp
call
in
scas
mov
sbb
mov
push
and
jo
call
sbb
(bad)
in
or
es
hlt
popa
aam
or
es
hlt
fs
sub
sub
adc
ins
int
push
mov
(bad)
and
or
push
fdiv
pop
in
neg
ins
(bad)
xchg
cmc
iret
jne
popa
loope
xchg
lods
call
and
push
sbb
and
test
pop
and
nop
hlt
cld
sub
sub
pusha
nop
jle
and
loopne
fisubr
or
sbb
or
xchg
popf
and
adc
loope
or
hlt
sahf
pusha
xchg
jge
and
ffree
lods
xchg
cmc
int
mov
mov
and
mov
or
cld
mov
cmps
xchg
icebp
gs
out
cmp
lods
sahf
cmc
int
mov
cmc
(bad)
cmps
test
sahf
pusha
xchg
xor
push
test
cmp
inc
fucom
in
and
inc
push
and
xchg
jns
cmp
(bad)
cmps
test
sahf
pusha
xchg
xor
int3
in
sub
hlt
pop
jbe
sti
mov
daa
xchg
rol
shl
call
jp
scas
fsubp
cmp
popf
xor
pop
and
ins
cmps
inc
jb
repnz
ficom
or
and
ins
leave
pop
and
stos
jno
cli
xchg
or
jecxz
pop
clc
ficom
inc
push
and
mov
call
xchg
jmp
je
and
push
and
rcl
enter
arpl
arpl
(bad)
or
movs
push
icebp
ja
cs
adc
sub
popa
in
xchg
or
fiadd
sbb
cs
inc
int
scas
pop
and
xchg
or
fs
sti
mov
fiadd
or
cs
inc
in
neg
ficom
mov
int
lods
pop
and
xchg
or
gs
je
(bad)
or
and
inc
xchg
(bad)
or
dec
lods
jmp
ins
hlt
sbb
stos
jno
retf
pop
sub
popa
in
xchg
or
(bad)
outs
ja
xor
and
push
popa
in
xchg
or
(bad)
outs
jg
xor
ret
cli
xchg
or
and
inc
push
and
xchg
or
sub
arpl
and
xchg
or
ficom
hlt
pushf
mov
sub
(bad)
daa
(bad)
into
jp
hlt
xor
sub
and
jmp
(bad)
dec
pushf
pop
xor
arpl
xchg
shr
icebp
daa
in
stos
fld
aaa
pop
xor
cwde
sbb
ficomp
and
fidivr
(bad)
jge
hlt
call
and
xchg
or
int3
loopne
pop
and
ins
or
fcmovu
sub
ficom
or
gs
inc
out
push
xchg
sti
xchg
or
scas
icebp
je
ficom
jge
in
not
(bad)
outs
test
mov
sub
ror
ficom
or
and
clc
in
or
es
hlt
gs
sub
and
jmp
pop
pop
movs
scas
hlt
pop
and
pushf
hlt
pop
push
fimul
(bad)
fld
xchg
mov
ins
hlt
push
and
xchg
or
ficom
sbb
ficom
or
fisubr
mov
std
mov
call
and
ins
sti
mov
fisubr
loope
mov
hlt
sahf
mov
sbb
(bad)
push
jecxz
xchg
or
scas
stc
add
ficom
sub
mul
outs
mov
sahf
test
xchg
jg
rol
neg
in
not
nop
cmc
frstor
cwde
sbb
(bad)
dec
jecxz
xchg
or
and
xchg
xchg
icebp
arpl
(bad)
sub
fisubr
dec
xor
and
ins
jge
test
test
and
xchg
or
jmp
jg
test
ins
leave
ficom
neg
(bad)
jno
sti
xchg
or
outs
neg
(bad)
jno
cli
xchg
or
in
retf
cli
xchg
or
loope
scas
cli
xchg
or
fldcw
enter
shl
hlt
pushf
mov
push
jno
cli
xchg
or
out
sar
xchg
or
fisubr
retf
cli
xchg
or
fisubr
dec
ins
hlt
adc
fsubr
call
ja
popa
scas
cli
xchg
or
iret
pusha
cmps
jg
ins
cmc
pop
(bad)
pop
enter
mov
imul
call
scas
loope
enter
call
loope
mov
hlt
sbb
xchg
xor
add
stc
add
ficom
hlt
inc
int
mov
cmps
cli
xchg
or
in
jno
and
hlt
xchg
pop
fs
sbb
out
jecxz
xchg
or
xchg
ins
leave
(bad)
and
in
mov
and
jo
and
hlt
(bad)
ds
hlt
pop
scas
jmp
jg
and
pop
and
sub
adc
xor
and
xchg
or
scas
fst
enter
out
in
int3
pop
push
inc
jge
cmps
test
xchg
sbb
pushf
ja
es
int3
pop
push
js
out
test
xchg
sbb
pushf
ja
and
int3
pop
push
gs
arpl
stc
push
leave
ficom
inc
add
jmp
cmc
sbb
ins
hlt
bound
out
and
hlt
pop
cmps
test
call
sub
fiadd
sti
pushf
mov
ins
or
aad
jecxz
xor
mov
call
xchg
inc
add
neg
xchg
xor
and
ins
hlt
pop
and
push
not
and
in
enter
hlt
pop
and
push
lock
and
in
enter
hlt
pop
and
movs
sti
mov
fisub
push
and
call
clc
ficom
sub
ficom
or
push
xchg
or
cmps
test
xchg
cwde
(bad)
sub
fisubr
cmps
leave
add
ficom
sbb
fisubr
xor
adc
mov
xchg
jge
xor
jno
retf
xchg
cwde
cwde
sbb
fisubr
and
sbb
and
xchg
je
(bad)
or
and
inc
xchg
(bad)
or
dec
lods
jmp
ins
hlt
sbb
xor
sahf
shr
das
jbe
mov
push
(bad)
sub
jecxz
or
test
adc
and
ins
pop
mov
add
(bad)
hlt
call
mov
pushf
arpl
pop
and
mov
mov
pushf
imul
and
or
out
mov
sub
push
jecxz
add
into
jp
adc
fisub
repz
push
push
fisubr
sbb
movs
adc
push
push
mov
ins
hlt
loopne
xchg
jge
in
in
out
jecxz
add
int3
iret
hlt
pop
and
cmp
sub
mov
in
mov
and
inc
push
and
xor
and
sub
out
ss
jo
sti
mov
and
sub
adc
fidiv
cmc
and
push
adc
ja
and
std
xchg
(bad)
adc
fidiv
xlat
push
pusha
ja
and
or
push
push
sti
mov
and
ins
hlt
pop
push
push
jg
fucom
ss
mov
sub
ins
hlt
pop
push
data16
adc
movs
sub
push
movs
adc
sbb
out
cmps
call
shr
scas
outs
sti
mov
xor
or
into
data16
shr
push
imul
out
ss
jo
sti
mov
and
sub
push
sub
mov
jp
scas
fsubp
cmp
je
cmps
inc
jb
sbb
push
aam
jb
ins
add
lods
sub
sahf
out
or
and
test
out
movs
or
push
cmc
pop
push
xchg
jge
into
bound
xor
push
and
xchg
cmc
push
(bad)
in
out
lods
scas
stos
dec
jle
aaa
inc
lods
mov
ins
hlt
call
hlt
pop
jae
dec
jb
shr
xchg
ror
fisttp
ins
add
lods
jmp
jge
test
clc
inc
ficomp
cld
call
sbb
jae
hlt
call
sbb
and
jl
loope
xchg
fucomp
lods
stos
stos
dec
in
scas
mov
in
pop
fcom
and
xchg
sbb
jbe
hlt
dec
js
mov
pop
jbe
mov
popa
movs
stos
xchg
pop
and
in
hlt
pop
and
push
idiv
ins
hlt
xchg
ficomp
cld
call
hlt
pop
lods
stos
ja
ficomp
in
xchg
pop
pusha
hlt
arpl
out
sbb
xchg
sahf
pusha
cwde
jge
dec
ins
mov
pop
lods
scas
ja
xor
jnp
pop
and
test
pop
and
cwde
jge
dec
ins
ja
sub
scas
sub
sahf
pusha
pushf
pop
adc
pushf
or
aas
or
cmp
ja
hlt
inc
int
movs
pop
and
push
clc
jmp
fsubp
cmp
cmps
cmp
jae
dec
xchg
dec
div
sahf
loop
hlt
jg
ins
hlt
pop
dec
push
pushf
pop
and
fs
je
hlt
sahf
jecxz
or
push
push
dec
push
ins
hlt
loopne
in
out
lods
stos
sahf
adc
jae
xor
ins
jg
sub
xor
xchg
sbb
(bad)
fsub
aaa
jge
loope
jmp
aas
or
cmp
ja
hlt
jge
loope
jmp
push
idiv
mov
inc
and
cmp
pop
lods
xchg
add
lods
sub
pushf
pusha
cwde
jge
popf
ins
hlt
pop
and
scas
mov
inc
jb
inc
add
push
jge
adc
jge
dec
ins
pushf
xchg
and
push
hlt
jge
add
pop
and
test
inc
and
xchg
or
pop
xor
sbb
in
out
lods
stos
sahf
adc
jae
fiadd
ins
sahf
pop
test
or
sbb
call
mov
test
inc
and
xchg
sahf
fstp
sahf
loop
stos
fsubp
cmp
je
mov
shl
js
sub
push
(bad)
cmc
pop
and
xchg
sbb
sub
push
adc
pushf
pusha
nop
jge
and
jge
fnstcw
or
add
mul
sbb
jbe
hlt
jg
mov
pop
and
mov
add
(bad)
or
shl
ins
sbb
jbe
hlt
xchg
loope
mov
js
mov
adc
pop
sbb
push
retf
push
mov
pop
pusha
mov
scas
sub
sahf
out
ss
jo
mov
pop
int
cmps
pop
and
xor
bnd
mov
pushf
push
pusha
xor
xchg
jmp
and
pop
dec
push
adc
and
ins
lods
fiadd
iret
inc
dec
pop
adc
and
ins
ja
sub
test
xor
out
jmp
scas
fst
lods
cmp
dec
jnp
cmp
xchg
leave
dec
cmps
inc
jb
jnp
sar
iret
or
jge
inc
stos
mov
and
ja
leave
ins
ja
int
ja
shr
loope
mov
ins
hlt
pop
(bad)
leave
jge
adc
jge
movs
adc
push
push
push
shl
in
pop
scas
sub
sbb
xchg
pop
cmp
fwait
pop
sahf
pusha
mov
aam
fidiv
adc
out
xor
and
sbb
and
cdq
sti
daa
in
pop
push
push
ins
hlt
xchg
dec
xchg
cmc
xchg
pop
xchg
hlt
(bad)
out
out
sbb
(bad)
push
in
aaa
(bad)
ins
hlt
sbb
sub
out
lods
jmp
outs
adc
movs
add
push
movs
adc
pop
push
mov
jge
scas
sub
sbb
arpl
or
popf
xlat
dec
ins
hlt
pop
sub
mov
push
pusha
mov
int
cmp
pusha
cmp
push
sub
push
pusha
mov
sub
push
and
mov
adc
sti
mov
out
mov
movs
lahf
jl
and
arpl
sub
(bad)
push
shl
repz
scas
fsubp
or
xchg
jl
pop
mov
mov
scas
sub
jmp
arpl
cld
xchg
cld
fs
mov
xchg
cld
fs
mov
xchg
cld
fs
cld
xchg
cld
fs
and
xlat
and
ins
fs
iret
jg
and
cld
arpl
cld
xchg
cld
fs
in
xchg
cld
fs
leave
cld
xchg
cld
fs
in
jmp
xchg
hlt
pop
and
cld
xchg
xchg
enter
(bad)
scas
je
xchg
cld
xchg
cld
lds
scas
lock
cld
xchg
xchg
cld
xchg
cld
sbb
inc
cld
xchg
jge
call
jno
mov
sub
fdiv
pop
iret
jg
and
or
xchg
jl
pop
mov
lock
cld
xchg
cld
arpl
xchg
ins
fs
cld
cld
xchg
cld
fs
xchg
cld
fs
in
cld
xchg
cld
xchg
xor
xchg
sbb
push
mov
fs
(bad)
xchg
cld
fs
and
out
or
mov
arpl
xchg
ins
fs
cld
cld
xchg
cld
fs
xchg
cld
fs
in
cld
xchg
cld
xchg
xor
xchg
jg
and
cld
fs
(bad)
xchg
cld
fs
cld
xchg
xchg
or
out
jge
cmps
add
jae
jg
sub
in
sbb
sub
es
ins
stos
pushf
pusha
nop
jge
leave
in
call
or
sahf
pusha
mov
fstp
sahf
pusha
mov
stc
fwait
xchg
imul
xchg
shl
hlt
pop
int3
mov
pop
and
ins
add
in
ret
lods
sub
sahf
std
ins
add
int
add
fidiv
seta
hlt
bound
stos
mov
and
and
pop
lods
sub
ficom
hlt
pop
call
inc
fsubp
or
out
lods
lods
jg
cmc
cmc
add
lods
scas
jl
(bad)
lock
sbb
add
adc
out
arpl
sub
mov
pop
sub
lock
mov
pop
and
ins
add
sub
in
xchg
and
ds
in
pushf
pusha
nop
jge
adc
jge
fld
cld
jg
ins
hlt
pop
test
push
inc
int
mov
push
fidivr
call
cmc
(bad)
jne
ss
and
sub
inc
lods
mov
out
test
and
aam
xor
in
fld
xchg
call
pusha
pusha
mov
sbb
xchg
or
aaa
cmp
xchg
leave
pop
cmps
inc
jb
dec
je
sbb
adc
jge
int
mov
pop
lods
movs
sahf
in
push
push
out
lods
push
sbb
xchg
jmp
out
in
dec
lods
scas
jl
retf
rcr
imul
int3
pop
not
and
xchg
sbb
(bad)
xor
lods
scas
std
xlat
sub
jmp
mov
daa
out
sub
js
mov
repnz
int
sti
mov
daa
xchg
shr
shl
sub
shl
pop
and
ins
jge
imul
push
int
sbb
push
je
fistp
nop
pop
add
jge
sub
pushf
xor
xchg
pusha
nop
lock
shl
stos
ins
int
fstp
sub
pop
lods
sub
xor
sub
pusha
xchg
jg
stc
shl
push
(bad)
ret
cwde
cs
adc
mov
push
and
mov
mov
pusha
mov
mov
ins
hlt
pushf
pop
mov
mov
xchg
mov
and
and
ins
jge
std
test
push
arpl
lods
scas
sti
mov
sub
jge
stc
shl
sub
dec
aam
push
and
lods
dec
push
and
ins
hlt
xchg
loope
push
fistp
cwde
pop
add
jge
sub
pushf
xor
xchg
pusha
cwde
lock
shl
stos
ins
int
rcr
sub
pop
lods
sub
xor
add
aad
xor
scas
jns
stos
ins
lds
cmps
sub
test
icebp
iret
cwde
cs
cs
pushf
xchg
lods
mov
sub
shl
clc
hlt
mov
mov
dec
push
and
cs
sahf
sub
enter
stos
ins
sti
mov
scas
js
repz
cs
pushf
sub
clc
sub
push
push
jge
ror
xor
xchg
sub
lods
mov
adc
shl
jmp
xchg
ja
sub
push
idiv
push
hlt
jg
ins
hlt
push
ficomp
cld
call
and
adc
loope
push
xor
int
mov
loopne
in
(bad)
lods
stos
or
test
(bad)
frstor
pop
adc
mov
jnp
cmp
xchg
leave
je
pop
and
sbb
add
ret
in
sti
fcom
icebp
arpl
ins
hlt
call
pop
sub
jmp
jge
int
mov
pop
inc
jl
sahf
in
push
(bad)
fild
out
cmp
sahf
cmc
xor
mov
(bad)
popa
call
ror
pop
and
xchg
jmp
daa
hlt
pop
sub
mov
lahf
mov
jge
rol
or
(bad)
jl
ss
out
jl
sbb
mov
and
mov
sbb
jecxz
repz
lods
daa
hlt
pop
lods
scas
add
and
cli
shl
pop
xor
pop
loope
call
dec
cld
push
push
and
ins
jns
ficom
call
pushf
jge
dec
ins
sahf
pop
dec
outs
sahf
pop
dec
ins
pushf
pop
and
xchg
or
fidivr
adc
hlt
sahf
mov
in
ds
xor
push
fs
lahf
out
cs
inc
int
mov
call
pushf
push
cmp
shl
jmp
hlt
call
fiadd
adc
mov
jbe
sub
ins
jns
ficom
push
pop
and
and
pop
test
pminsw
xchg
movs
jg
mov
pop
test
or
ficom
hlt
xchg
int
hlt
pop
and
cs
jg
mov
pop
dec
mov
jno
fist
hlt
pop
movs
test
pop
and
mov
pop
dec
adc
push
and
in
sbb
and
cmp
inc
lods
mov
pushf
push
js
xor
out
sahf
fstp
sahf
loop
icebp
arpl
pusha
lods
pop
and
loope
out
jne
mov
jne
hlt
jg
ins
sti
pop
dec
ins
sahf
pop
dec
ins
or
xchg
sbb
and
xchg
mov
sbb
(bad)
fsub
mov
lods
xchg
cmc
out
lods
stos
or
cmp
bound
add
jmp
das
mov
dec
in
scas
mov
and
out
mov
loop
add
and
sbb
call
sub
hlt
pop
and
xor
inc
lods
mov
data16
xchg
(bad)
stos
sahf
adc
jns
xor
bound
sbb
jmp
ins
hlt
pop
cmps
test
dec
js
mov
inc
call
shr
hlt
call
movs
jge
add
pop
daa
ins
sahf
pop
dec
ins
sahf
pop
ficomp
clc
call
ins
ins
hlt
push
in
lock
ret
call
xor
or
xchg
sub
and
xchg
sub
and
in
sbb
push
nop
sbb
ins
ins
hlt
es
stos
fsubp
cmp
cmps
and
jb
add
lods
sub
test
sub
imul
hlt
loopne
in
out
stos
xor
and
add
pop
daa
ins
sahf
pop
ficomp
clc
call
ins
ins
hlt
push
in
lock
enter
movs
inc
dec
ins
sahf
pop
ficomp
in
push
nop
sbb
ins
ins
hlt
push
in
clc
call
ins
ins
hlt
es
in
scas
or
hlt
pop
ror
xor
push
nop
sbb
bound
xchg
sub
dec
jnp
aaa
inc
lods
mov
mov
loope
sahf
fld
sahf
loop
leave
jmp
cs
pop
push
dec
sbb
popa
ins
hlt
inc
int
mov
and
nop
and
push
mov
push
inc
jge
and
jge
adc
mov
sbb
ins
hlt
pop
dec
ins
sahf
pop
dec
ins
pushf
jbe
cs
inc
nop
and
gs
and
cld
xor
or
fucom
xor
adc
jp
and
xor
push
out
ja
fist
jge
scas
sub
adc
ins
jge
sub
cmp
jg
sub
sub
pop
pop
mov
pushf
pusha
nop
jge
or
jge
fxam
sub
adc
enter
ficomp
lods
pushf
cmc
iret
jne
add
and
xchg
(bad)
scas
cmp
shl
outs
hlt
xchg
pusha
nop
dec
pop
and
lods
idiv
push
sub
ins
adc
movs
push
retf
dec
jge
ins
in
enter
in
pushf
pusha
jl
pop
and
ins
add
in
out
lods
sub
sahf
std
sub
sub
push
push
and
add
pop
xor
ficomp
jmp
inc
ficomp
in
loope
hlt
pop
scas
sub
sahf
out
ss
jo
jge
and
pop
sbb
lods
pop
adc
hlt
dec
jnp
cmp
xchg
leave
jl
inc
jb
test
ds
add
aad
xor
mov
and
stos
and
inc
dec
sub
(bad)
data16
hlt
sahf
pusha
cwde
jne
push
ds
pop
adc
pop
add
(bad)
and
pushf
test
in
(bad)
sbb
sbb
iret
(bad)
fstp
adc
sub
pop
and
adc
sbb
aad
pop
and
in
xchg
jecxz
mov
pop
and
test
loopne
lods
push
adc
cmp
repnz
xor
out
jecxz
add
enter
call
test
jno
sub
sbb
xchg
xchg
jnp
cmp
scas
imul
and
push
lea
adc
sbb
mov
xchg
or
and
in
call
or
test
xchg
ja
sub
sbb
es
leave
sbb
ins
ja
fst
stc
inc
int
mov
and
addr16
pop
ficomp
loopne
test
jmp
dec
push
and
xchg
or
(bad)
jno
ficom
or
fiadd
dec
iret
ficom
and
fcom
lock
and
push
jmp
xchg
or
ror
or
lods
stos
or
add
push
and
ins
hlt
sahf
aad
add
jecxz
mov
lods
jmp
jge
cmps
movs
or
push
cmc
pop
push
xchg
jge
dec
fs
jmp
xchg
cmps
call
or
cmps
test
jg
mov
pop
ficomp
cld
jmp
sub
pop
cmps
test
jg
mov
pop
fcmovu
or
fist
hlt
xchg
loope
sbb
pusha
ins
hlt
scas
das
ins
hlt
pop
mov
imul
jmp
xchg
or
test
test
jmp
hlt
pop
pushf
data16
pop
and
xchg
icebp
push
test
push
and
ins
hlt
mov
xchg
cmps
pushf
cwde
nop
or
fidivr
pushf
sub
cs
inc
int
mov
and
jb
pop
and
movs
or
(bad)
xor
and
hlt
pop
pushf
data16
pop
and
xchg
icebp
push
add
mul
or
int
mov
and
pop
sub
xchg
inc
jmp
xchg
or
xor
test
(bad)
jmp
data16
pop
and
xchg
icebp
push
add
mul
or
int
mov
and
pushf
add
lods
jmp
jge
int
mov
and
ins
ins
loopne
out
push
adc
sbb
popa
ins
hlt
scas
inc
ins
hlt
pop
mov
ror
call
sbb
jb
and
xchg
xor
and
xchg
or
dec
sub
cmp
jle
ins
hlt
xchg
loope
sbb
popa
ins
hlt
scas
das
ins
hlt
pop
mov
imul
jmp
xchg
or
dec
sub
pop
cmps
test
jg
mov
pop
fcmovu
or
fist
hlt
xchg
loope
jge
or
jge
int
mov
and
ins
ins
loopne
out
push
adc
pushf
out
cs
call
fiadd
shr
ins
or
int
mov
and
mov
(bad)
pop
and
out
push
adc
sbb
data16
hlt
scas
inc
ins
hlt
pop
mov
ror
call
sbb
dec
push
and
in
add
or
mov
test
pop
and
add
leave
ins
jns
sti
xchg
or
jb
bound
jns
sti
xchg
or
jne
add
fist
mov
jne
mov
ja
add
ins
dec
sbb
rcl
xlat
jmp
hlt
pop
pushf
pmuludq
and
out
jmp
xchg
or
push
sub
cmp
data16
hlt
xchg
loope
sbb
data16
hlt
scas
das
ins
hlt
pop
mov
imul
jmp
xchg
or
popa
das
hlt
pop
cmps
test
xchg
sar
stos
pop
and
ins
dec
sbb
rcl
out
out
mov
pop
fcmovu
or
fist
hlt
xchg
loope
sbb
ins
hlt
scas
das
ins
hlt
pop
mov
imul
jmp
xchg
or
shr
hlt
pop
cmps
test
jg
mov
pop
ficomp
loopne
mov
cmp
(bad)
sti
cs
inc
int
mov
and
push
pop
and
out
push
adc
pushf
fdivr
cs
call
fiadd
shr
ins
add
lods
jmp
jge
int
mov
and
ins
ins
loopne
out
push
adc
pushf
out
cs
call
fiadd
shr
ins
dec
sbb
rcl
xlat
dec
pmuludq
and
out
jmp
xchg
or
push
sub
cmp
ins
hlt
xchg
loope
ja
add
ins
hlt
pop
cmps
leave
dec
call
arpl
pop
jecxz
hlt
pop
ficom
mov
scas
ficom
jg
cdq
xchg
or
es
iret
xchg
fst
jg
cdq
xchg
or
ror
xchg
sti
mov
pushf
jbe
pop
and
scas
xchg
inc
lods
xchg
dec
or
push
xor
mov
mov
repnz
xor
loope
pop
and
sub
loope
pop
and
jecxz
pop
and
pushf
fucom
lods
stos
or
movs
ror
xchg
je
and
xchg
or
fcmovu
add
fist
jno
and
jmp
movs
jg
mov
pop
jne
mov
sar
ins
dec
sbb
rcl
out
js
mov
fcmovu
or
fist
hlt
xchg
loope
jge
or
jge
int
mov
and
ins
ins
loopne
out
push
adc
pushf
fdivr
cs
call
fiadd
shr
ins
dec
sbb
rcl
out
aad
mov
fcmovu
or
fist
hlt
xchg
loope
jne
cdq
xchg
or
movs
ins
hlt
pop
fucompp
add
fist
or
sbb
dec
call
lea
sbb
fcom
jge
int3
out
pop
and
jmp
sbb
xchg
cwde
ins
hlt
call
outs
ins
hlt
pop
lods
pushf
fucom
lods
stos
jg
cmp
fbld
xchg
or
sub
mov
xchg
fst
sbb
fcom
lods
leave
ins
jns
rcl
mov
shr
loope
jecxz
xchg
or
ins
hlt
(bad)
fsub
xor
ror
fcom
hlt
pop
test
hlt
pop
ficom
dec
call
and
sbb
push
ins
hlt
call
sbb
fst
jge
aad
or
fcmovu
add
fist
inc
out
xchg
or
cmp
jae
cs
inc
int
retf
pop
and
mov
mov
out
scas
ficom
push
sub
ins
hlt
mov
xchg
ja
and
out
js
mov
fcmovu
or
fist
hlt
xchg
loope
sbb
sbb
das
ins
hlt
pop
mov
imul
jmp
xchg
or
test
pop
cmps
test
(bad)
jns
hlt
pop
pushf
data16
pop
and
xchg
icebp
push
add
mul
or
int
retf
pop
and
fld
fcom
hlt
xchg
rcl
pop
and
xchg
or
fidivr
mov
jbe
hlt
loopne
xchg
ja
sub
jno
ficom
jno
fist
mov
fcmovu
or
fist
hlt
xchg
loope
sbb
sbb
das
ins
hlt
pop
mov
imul
jmp
xchg
or
sub
test
jmp
push
hlt
pop
pushf
data16
pop
and
xchg
icebp
push
add
leave
ins
or
int
retf
out
xor
lods
pushf
fucom
lods
stos
sbb
sbb
das
ins
hlt
pop
mov
imul
jmp
xchg
or
popf
push
hlt
pop
cmps
test
jg
mov
pop
fcmovu
or
fist
hlt
xchg
loope
sbb
sbb
das
ins
hlt
pop
mov
imul
pop
and
ds
fst
retf
ins
mov
pop
cmps
test
dec
push
hlt
pop
pushf
data16
pop
and
xchg
icebp
push
add
leave
ins
or
int
retf
out
xor
movs
adc
sbb
das
ins
hlt
pop
mov
imul
jmp
xchg
or
add
test
(bad)
stc
push
hlt
pop
pushf
data16
pop
and
xchg
icebp
push
add
mul
or
int
leave
pop
and
fcmovne
pop
and
ins
ins
loopne
out
push
adc
sbb
sbb
inc
ins
hlt
pop
mov
ror
call
sbb
push
sub
add
leave
ins
or
int
leave
pop
and
pushf
add
lods
jmp
jge
int
leave
pop
and
ins
ins
loopne
out
push
adc
pushf
out
cs
call
fiadd
shr
ins
or
int
leave
pop
and
inc
leave
pop
and
ins
ins
loopne
out
push
adc
pushf
out
cs
call
fiadd
shr
ins
or
int
leave
pop
and
pushf
fucom
lods
stos
sbb
sbb
das
ins
hlt
pop
mov
imul
jmp
xchg
or
sub
pop
cmps
test
call
jg
fst
test
ins
movs
(bad)
jmp
test
dec
data16
pop
and
xchg
icebp
push
add
mul
or
int
enter
xor
lods
pushf
fucom
lods
stos
pushf
pop
sti
cs
call
fiadd
shr
ins
dec
sbb
rcl
out
aad
mov
fcmovu
or
fist
hlt
xchg
loope
sbb
sbb
int
hlt
pop
mov
in
xor
add
scas
ror
call
int
mov
jb
retf
ins
ja
xor
ins
dec
sbb
rcl
out
aad
mov
fcmovu
or
fist
hlt
xchg
loope
pushf
leave
clc
cs
call
fiadd
shr
in
inc
push
hlt
pop
pushf
data16
pop
and
xchg
icebp
push
add
mul
or
int
iret
pop
and
xlat
iret
pop
and
ins
ins
loopne
out
push
adc
sbb
push
ins
hlt
scas
inc
ins
hlt
pop
mov
ror
call
sbb
push
sub
ins
ja
xor
ins
or
int
iret
pop
and
ins
sahf
pop
dec
outs
sahf
pop
dec
ins
pushf
pop
and
fs
sbb
test
jmp
hlt
call
fiadd
pop
test
add
fist
or
fist
or
int
int3
pop
and
xchg
or
or
(bad)
call
adc
aad
adc
(bad)
xor
ret
pop
and
xchg
or
aaa
cmp
xchg
leave
push
dec
dec
or
sahf
fstp
sahf
loop
mov
and
ror
push
fidivr
pushf
clc
cs
call
sbb
pop
ins
hlt
jge
add
retf
jns
ficom
cmc
pop
and
xchg
or
ins
jle
ficom
gs
push
hlt
jg
mov
pop
dec
sub
add
pop
and
xchg
or
mov
pop
dec
mov
push
and
ins
pushf
adc
ins
je
push
pushf
or
cmps
test
sahf
fstp
sahf
loop
cmp
xchg
leave
lock
and
in
in
sbb
ins
add
lods
jmp
jge
cmps
leave
push
pushf
pusha
fs
and
pusha
xlat
cmps
mov
sahf
mov
out
pop
scas
push
hlt
sahf
mov
in
ds
xor
(bad)
out
pop
lods
stos
ja
and
sbb
adc
jo
jns
daa
imul
dec
adc
mov
xchg
inc
mov
xchg
or
imul
pushf
test
or
(bad)
mov
adc
mov
xchg
fucomp
lods
stos
mov
pop
lods
jmp
or
int
ret
pop
and
xchg
or
nop
hlt
or
fiadd
inc
sub
xchg
or
test
or
(bad)
mov
adc
lods
xchg
or
dec
ins
and
test
and
xchg
or
dec
jl
pop
test
push
jmp
hlt
pop
lods
xchg
(bad)
stos
sbb
adc
int
int
and
ins
jns
xchg
xchg
or
jne
pop
retf
ins
pushf
mov
daa
ins
hlt
xchg
int
sbb
(bad)
xor
sub
sbb
and
push
not
and
xchg
pushf
adc
hlt
call
jns
xchg
xchg
or
jne
jp
and
xchg
or
fcmovu
fs
or
fcmovu
jl
ficom
or
fcmovu
push
jmp
or
fidivr
xlat
xchg
or
xchg
or
sub
sbb
and
outs
not
and
ins
jns
fst
and
and
xchg
jge
test
inc
jmp
or
fidivr
stos
sbb
or
lods
jmp
jne
and
hlt
pop
dec
sub
jmp
sbb
cmps
test
shl
sub
pop
and
ins
add
lods
jmp
jge
loop
adc
ficom
xchg
shl
ins
hlt
xchg
cwde
call
or
stos
jno
fist
sbb
dec
ins
hlt
call
sbb
retf
dec
test
push
jmp
or
fidivr
pop
dec
ins
sahf
aaa
dec
ins
sahf
pop
dec
ins
jns
fst
hlt
push
pop
hlt
pop
sub
sti
xchg
retf
ins
hlt
pop
fcmovu
pop
jmp
hlt
xchg
retf
pop
and
xchg
or
mov
pop
dec
adc
push
and
xchg
or
stos
ret
pop
and
jmp
hlt
cld
or
or
fucom
xor
fidivr
(bad)
stc
cs
jmp
hlt
pop
lods
scas
std
xlat
push
ja
jmp
ins
hlt
jmp
jmp
cmc
popf
mov
push
icebp
gs
gs
arpl
hlt
outs
and
ins
hlt
xchg
cwde
cld
or
fisubr
dec
ins
add
and
ins
dec
add
hlt
loopne
in
jae
xchg
or
and
xchg
or
jne
sbb
adc
and
sahf
retf
ins
jns
fst
popf
stos
ficom
or
and
leave
push
sahf
(bad)
sahf
loop
loop
xor
call
jp
hlt
pop
into
imul
xchg
or
and
xchg
or
pop
rcl
in
sbb
ins
hlt
inc
int
(bad)
pop
and
enter
test
and
ins
or
int
(bad)
pop
and
xchg
or
and
or
fucom
xor
aaa
cmp
sahf
shr
add
mov
and
adc
adc
jge
ficomp
cld
dec
pop
hlt
pop
lods
scas
xchg
sahf
jo
or
test
and
ins
jge
inc
in
jmp
sbb
(bad)
jmp
scas
xchg
sahf
jo
cmps
jmp
pop
hlt
pop
lods
scas
xchg
sahf
jo
jne
mov
(bad)
jmp
mov
cmc
(bad)
sub
mov
aas
jne
hlt
push
pop
hlt
pop
lods
stos
(bad)
adc
push
sub
xor
pusha
cmp
(bad)
stos
sahf
adc
pushf
mov
int
rcl
out
xor
ficomp
cld
sahf
aad
xor
jne
cmps
es
arpl
fndisi(8087
mov
and
jmp
hlt
pop
ficomp
in
xchg
sub
call
or
int
lds
and
in
inc
sub
mov
test
repnz
(bad)
mov
xor
pop
hlt
pop
test
or
dec
ins
mov
pop
dec
ins
sahf
pop
int
(bad)
pop
and
pop
or
loop
or
xlat
(bad)
pop
and
cmp
adc
hlt
inc
int
lds
and
xor
repnz
and
pop
and
ins
cmps
inc
jb
test
dec
push
in
push
fucom
xor
mov
sub
pop
and
ins
hlt
call
jns
in
or
jne
xchg
retf
ins
sbb
or
jecxz
xor
mov
in
es
xor
xor
ficom
hlt
xchg
loope
std
xlat
push
dec
or
ficomp
clc
push
hlt
pop
popf
(bad)
sahf
mov
in
es
pop
dec
loop
dec
neg
xchg
mov
and
mov
call
lds
jp
and
push
jne
ds
pop
jbe
inc
rol
xchg
or
jno
hlt
pop
cmps
test
push
in
jmp
nop
movs
adc
ficom
fist
and
in
scas
lds
xor
into
push
stos
dec
jle
aaa
inc
lods
mov
ins
hlt
dec
cmp
push
add
shr
ror
or
lods
stos
fucom
lods
stos
cmps
jg
ins
hlt
pop
int
les
and
xchg
mov
sbb
(bad)
fsub
xor
in
push
fistp
sbb
cdq
xchg
or
cs
inc
int
rcl
out
xor
popf
sub
pop
and
pushf
sub
(bad)
jno
cli
xchg
or
aad
xor
mov
pop
test
hlt
neg
xchg
movs
jmp
pop
hlt
pop
cmps
test
inc
pop
hlt
pop
pushf
data16
pop
and
xchg
icebp
push
add
mul
jns
and
test
and
in
xor
pop
ins
hlt
call
data16
pop
and
xchg
icebp
push
test
and
ins
hlt
mov
xchg
cmps
call
pushf
dec
stc
cs
call
sbb
push
ins
hlt
xchg
loope
sbb
push
ins
hlt
scas
das
ins
hlt
pop
mov
imul
pop
lds
(bad)
pop
and
pop
sub
loope
pop
lds
(bad)
pop
and
pushf
add
lods
jmp
jge
int
(bad)
pop
and
ins
ins
loopne
out
push
adc
pushf
out
cs
call
sbb
push
ins
hlt
xchg
loope
sbb
push
ins
hlt
scas
das
ins
hlt
pop
mov
imul
pop
and
ds
and
add
retf
ins
jns
and
test
and
xor
jle
push
and
xchg
or
dec
sub
loope
pop
lds
(bad)
pop
and
ffreep
pop
and
ins
ins
loopne
out
push
adc
pushf
out
cs
call
sbb
pop
ins
hlt
xchg
loope
pushf
sbb
mov
cmp
stos
pop
ins
hlt
xchg
loope
jne
and
pop
(bad)
pop
and
ins
ins
loopne
out
push
adc
pushf
out
cs
call
sbb
pop
ins
hlt
xchg
loope
pushf
adc
cs
call
sbb
pop
ins
hlt
xchg
loope
sbb
pop
ins
hlt
scas
das
ins
hlt
pop
mov
imul
pop
and
ds
and
add
retf
ins
jns
and
test
and
xor
ins
jns
and
test
and
sub
ins
dec
sbb
rcl
loopne
aad
mov
test
hlt
neg
xchg
movs
jmp
test
sahf
aad
add
jecxz
mov
xchg
and
test
es
test
and
ins
hlt
mov
xchg
ja
and
loopne
aad
mov
test
hlt
neg
xchg
movs
(bad)
in
pop
hlt
pop
cmps
test
jg
mov
pop
test
hlt
neg
xchg
movs
call
test
call
hlt
pop
pushf
data16
pop
and
xchg
icebp
push
add
mul
jns
and
test
and
in
sbb
xor
push
pusha
jns
and
add
retf
ins
jns
and
test
shl
ins
dec
sbb
rcl
loopne
aad
mov
test
hlt
neg
xchg
movs
jmp
hlt
pop
cmps
test
jg
mov
pop
test
hlt
neg
xchg
movs
call
test
scas
std
ja
pop
ror
or
lods
stos
sbb
adc
ins
hlt
pop
mov
imul
pop
lds
les
and
fcmovnb
pop
and
ins
ins
loopne
in
xchg
loop
rcl
and
mov
call
ins
jns
and
test
and
test
and
ins
hlt
mov
xchg
ja
and
loopne
aad
mov
test
hlt
neg
xchg
movs
inc
test
jg
mov
pop
test
hlt
neg
xchg
movs
push
test
xchg
rcl
and
ins
dec
sbb
rcl
loopne
aad
mov
test
hlt
neg
xchg
movs
inc
hlt
pop
cmps
test
inc
data16
pop
and
xchg
icebp
push
test
daa
and
ins
hlt
mov
xchg
cmps
call
pushf
dec
stc
cs
call
sbb
adc
jl
xbegin
ins
adc
fidivr
add
fs
pop
dec
ins
sahf
adc
dec
ins
hlt
pop
gs
sbb
or
mov
in
xor
ins
hlt
call
sbb
or
and
xchg
or
loope
pop
lds
or
ficom
hlt
call
fiadd
xlat
gs
sahf
aad
adc
(bad)
xor
aaa
cmp
xchg
leave
loopne
pop
and
daa
mov
ds
xor
ins
(bad)
fwait
push
dec
sub
ins
hlt
pushf
jo
jns
daa
ins
jge
mov
or
popf
xor
pop
and
call
xor
jne
hlt
pop
jne
into
cmp
xchg
or
mov
fist
and
xchg
or
push
hlt
call
sbb
or
and
pop
test
inc
jmp
mov
dec
fsubr
push
and
in
sbb
rcl
xlat
sub
dec
adc
and
hlt
call
jns
xchg
xchg
or
jne
mov
and
ins
hlt
loopne
in
xchg
ficom
inc
mov
xchg
or
inc
jmp
or
cmps
test
push
in
jo
daa
ins
hlt
jg
mov
pop
test
or
ficom
hlt
pop
test
inc
jmp
or
fidivr
mov
ins
hlt
call
jmp
jge
or
jge
dec
sub
jmp
cmp
test
sahf
fld
sahf
loop
jno
fist
hlt
shl
ins
hlt
pop
and
xchg
or
push
jo
shl
ins
hlt
sahf
(bad)
sahf
loop
jno
fist
adc
fidiv
or
jne
jno
fist
sahf
pop
dec
dec
sahf
pop
dec
ins
sahf
pop
test
or
ficom
idiv
call
or
int
fst
and
ins
add
lods
jmp
jge
fcmovu
push
jmp
hlt
jg
mov
pop
test
or
ficom
hlt
pop
cmps
test
shl
ins
pop
cmp
jns
fst
or
push
ins
hlt
sahf
jecxz
xor
ds
adc
ins
sbb
(bad)
hlt
xchg
mov
ins
jle
pop
xchg
or
sbb
fild
sti
xchg
sub
pop
dec
ins
add
and
ins
pushf
adc
hlt
call
mov
pop
lods
xchg
(bad)
stos
sahf
push
dec
push
sub
loope
xchg
xchg
or
or
(bad)
xor
sbb
jo
and
loopne
call
mov
or
cmps
test
push
in
jo
and
xchg
inc
sbb
or
fidivr
pop
or
hlt
call
or
int
and
(bad)
xor
and
xchg
or
popa
inc
hlt
pop
dec
sub
test
cmp
cs
pop
jae
push
cmp
gs
or
dec
ins
sbb
or
hlt
pushf
mov
out
pop
sub
(bad)
aas
or
int
and
(bad)
xor
into
dec
jg
mov
test
inc
jae
inc
sbb
or
repz
clc
sahf
fstp
psubsb
in
inc
int
fcom
and
xchg
or
and
fmul
call
or
hlt
jge
xchg
inc
mov
xchg
or
sbb
xchg
fucomp
lods
stos
or
int
fcom
and
xchg
or
aaa
cmp
sahf
shr
pop
jbe
mov
xor
mov
sahf
fstp
jge
jbe
mov
push
rcl
fst
and
cmp
pop
ja
mov
push
inc
hlt
pop
lods
stos
cmps
inc
int
rcl
and
ins
add
lods
sub
loop
sbb
or
hlt
call
and
jmp
test
push
fnstcw
pop
jae
mov
ins
sahf
pop
dec
ins
sbb
or
hlt
sahf
jecxz
or
fucom
xor
cmp
or
nop
movs
inc
int
rcl
and
ins
hlt
pushf
pusha
nop
pop
adc
stos
dec
jle
aaa
inc
lods
mov
ins
hlt
jmp
cmp
and
scas
mov
hlt
pop
ror
or
lods
stos
sahf
adc
sbb
dec
inc
hlt
pop
lods
stos
jge
and
jge
sub
adc
dec
xchg
sti
pop
and
xchg
or
test
aas
and
sbb
call
sbb
xchg
xchg
or
ins
hlt
arpl
in
cld
aaa
in
xor
ins
hlt
jge
cmp
or
xchg
jnp
aaa
inc
lods
mov
sub
dec
adc
and
pop
and
ins
hlt
cld
dec
in
push
fucom
xor
xchg
sub
inc
dec
push
push
and
test
and
cmp
pop
dec
das
cmc
pop
and
cs
push
inc
hlt
pop
sub
mov
cmps
lods
test
loope
jecxz
test
and
loope
jecxz
push
hlt
jg
ins
hlt
pop
ficomp
mov
repnz
jne
pop
and
arpl
fucomi
or
pop
jecxz
fsubp
cmp
push
lods
xchg
fucomp
lods
stos
sahf
pop
dec
outs
sahf
pop
dec
ins
sahf
adc
sahf
pop
dec
ins
sahf
pop
dec
cld
cmc
pop
and
push
bnd
test
ds
ins
mov
xchg
test
hlt
jmp
fwait
data16
ins
sahf
push
jae
(bad)
call
and
ins
sahf
push
jae
(bad)
call
and
ins
sahf
push
jae
(bad)
call
and
ins
sahf
push
jae
(bad)
call
and
ins
jge
adc
jge
dec
ins
mov
aas
mov
inc
hlt
pop
dec
ins
mov
aaa
mov
inc
hlt
pop
dec
ins
mov
xchg
inc
hlt
pop
dec
ins
mov
arpl
hlt
pop
lods
xchg
fucomp
lods
stos
sahf
push
jae
(bad)
call
and
ins
sahf
push
jae
(bad)
call
and
ins
sahf
push
jae
(bad)
call
and
ins
sahf
push
jae
(bad)
call
and
ins
jge
and
jge
jp
aaa
inc
lods
mov
mov
ret
jmp
stos
sahf
jmp
pop
sbb
fs
sbb
add
add
mov
push
and
test
and
ins
sahf
jmp
pop
je
ins
sbb
add
sbb
mov
dec
mov
push
and
in
push
push
and
ins
jge
adc
jge
dec
nop
or
or
mov
int
rcl
and
ins
pushf
leave
mov
xchg
sar
sub
hlt
pop
dec
nop
or
cmp
mov
int
rcl
and
ins
pushf
leave
mov
xchg
ror
sub
jmp
dec
hlt
pop
dec
nop
or
or
retf
rcl
and
ins
pushf
leave
mov
xchg
sar
sub
hlt
pop
dec
nop
or
add
out
rcl
and
ins
pushf
leave
mov
xchg
shl
sub
hlt
pop
lods
xchg
cmc
out
lods
stos
sahf
jmp
pop
jo
ins
sbb
add
cmp
mov
dec
mov
push
and
call
mov
fsubp
cmp
cmps
and
jb
sbb
lods
or
ror
jnp
pop
dec
cdq
das
push
and
dec
call
leave
mov
pop
jae
jno
ficom
cld
mov
clc
popa
push
pop
dec
ins
movs
dec
hlt
pop
test
add
jae
xchg
xor
xchg
jge
dec
ins
or
adc
mov
dec
ins
mov
push
sar
push
fld
out
push
hlt
jge
add
pop
movs
cmp
retf
cli
cs
jg
mov
pop
dec
ins
not
and
ins
push
push
test
shl
sub
sahf
sub
pushf
ja
inc
cmp
add
pushf
pop
and
mov
pop
dec
mov
push
and
dec
hlt
pop
xchg
push
and
pop
imul
hlt
call
and
ins
jg
fld
out
test
add
hlt
xchg
jne
sub
ins
pushf
int
cs
jge
test
and
cs
jge
push
idiv
push
hlt
jge
push
cmc
jge
push
hlt
jge
add
adc
dec
ins
sahf
pop
dec
js
jmp
xor
or
and
sahf
daa
ficomp
mov
inc
add
and
sub
rcl
hlt
jge
add
adc
dec
inc
pushf
pop
and
mov
pop
dec
mov
push
and
dec
hlt
pop
xchg
push
push
and
pop
imul
hlt
call
and
outs
hlt
pop
dec
adc
aas
dec
ins
hlt
pop
jne
in
int3
ins
pushf
int
cs
jge
test
xor
cs
jge
xchg
shl
sub
rcl
hlt
jge
add
push
and
ins
hlt
jge
add
pop
and
cs
jg
mov
pop
dec
ins
sbb
add
sub
mov
movs
add
and
pop
ror
pop
mov
fs
sahf
pop
dec
adc
pop
and
ins
sahf
aas
dec
ins
hlt
pop
jne
jp
ins
pushf
int
cs
jge
test
and
sub
shl
sub
shl
hlt
jge
push
nop
jg
ins
hlt
pop
dec
js
adc
in
movs
jg
mov
pop
dec
jmp
hlt
inc
hlt
pop
xchg
int
ins
sahf
pop
dec
das
cmc
pop
and
ins
hlt
jg
mov
pop
dec
ins
pushf
push
and
hlt
call
and
ins
sahf
pop
ficomp
mov
pop
ficomp
mov
ins
pushf
cmp
hlt
jge
add
pop
and
outs
hlt
xchg
jne
sub
ins
pushf
xchg
jmp
hlt
jge
test
xor
cs
sahf
(bad)
sahf
loop
hlt
call
and
or
push
and
ins
sahf
sub
hlt
pop
and
ins
pushf
adc
in
movs
jg
mov
pop
dec
jmp
hlt
jmp
dec
hlt
pop
xchg
push
and
xchg
sahf
pop
ficomp
mov
pop
ficomp
mov
ins
sahf
pop
dec
push
pushf
icebp
and
ins
hlt
pop
dec
ins
hlt
pop
jne
lahf
int
ins
pushf
int
cs
jge
test
and
cs
xchg
rcr
call
and
sub
push
in
movs
ins
hlt
pop
dec
xchg
hlt
pop
and
ins
pushf
pop
and
mov
pop
dec
mov
push
and
dec
hlt
pop
xchg
push
push
and
pop
imul
hlt
call
and
add
push
and
ins
hlt
jg
ins
hlt
inc
dec
cs
and
ins
sahf
pop
int
xlat
pop
and
ins
sahf
pop
ficomp
mov
pop
ficomp
mov
ins
sahf
pop
dec
xchg
hlt
pop
and
ins
sahf
jae
ins
hlt
pop
jne
out
ins
pushf
int
cs
jge
test
xor
mov
ins
or
loop
hlt
call
and
sub
push
in
jae
mov
mov
ins
hlt
jg
ins
hlt
inc
dec
push
push
and
ins
sahf
pop
int
(bad)
pop
and
ins
sahf
pop
ficomp
mov
pop
ficomp
mov
ins
sahf
cmovge
pop
and
ins
sahf
add
hlt
xchg
jne
sub
ins
pushf
push
jmp
hlt
jg
outs
hlt
pop
int
(bad)
pop
and
ins
sahf
pop
ficomp
mov
pop
ficomp
mov
ins
sahf
cmovge
hlt
pop
and
ins
sahf
add
hlt
xchg
jne
fs
ins
pushf
push
jmp
hlt
jg
outs
hlt
pop
int
(bad)
pop
and
ins
jge
or
jge
dec
ins
or
adc
mov
dec
ins
or
inc
int3
mov
dec
je
aas
dec
mov
pop
and
ins
je
dec
mov
push
and
ins
pushf
pop
daa
ins
hlt
(bad)
std
dec
hlt
pop
xchg
and
pop
imul
hlt
call
and
add
pop
and
ins
hlt
xchg
jne
sub
ins
pushf
push
jmp
hlt
jg
outs
hlt
pop
int
aad
and
ins
sahf
pop
ficomp
mov
pop
ficomp
mov
ins
sahf
add
hlt
pop
and
ins
sahf
or
hlt
xchg
jne
pop
into
ins
pushf
in
cld
cs
jge
test
pop
xchg
or
popf
jmp
adc
int
or
fsubp
cmp
cmps
and
jb
sbb
loope
jne
push
je
pop
dec
cdq
das
push
and
dec
add
(bad)
xor
mov
pop
jae
loope
ficom
cld
mov
out
or
jge
dec
ins
or
sub
lahf
aam
and
cmp
cmp
retf
pop
and
pop
imul
hlt
inc
scas
sub
cmp
cwde
movs
pushf
pusha
xchg
fist
cmp
pop
dec
ins
pushf
pop
and
mov
pop
dec
lea
push
and
ins
sbb
add
int3
mov
dec
ins
or
adc
mov
dec
ins
movs
jge
out
out
push
sub
int
movs
jge
push
loopne
and
movs
sub
int3
ins
sahf
pop
int
aam
and
ins
jne
fs
hlt
pop
dec
ins
or
adc
mov
dec
ins
or
popa
int3
mov
dec
inc
cmc
pop
and
sub
int
movs
jge
push
loopne
sub
je
dec
mov
push
and
ins
sahf
pop
int
aam
and
ins
sahf
pop
dec
outs
sahf
pop
dec
ins
sahf
adc
sahf
pop
dec
ins
sahf
pop
dec
shl
pop
and
push
cld
jge
test
and
ins
mov
adc
jae
pop
dec
ins
or
adc
mov
dec
ins
or
inc
int3
mov
dec
or
add
hlt
xchg
jne
sub
ins
pushf
xchg
jmp
hlt
jge
test
or
sub
or
loop
mov
ins
sahf
pop
dec
das
cmc
pop
and
sub
hlt
pop
dec
sbb
push
and
ins
hlt
pop
ficomp
mov
outs
cmp
sbb
push
push
and
ins
sahf
push
dec
and
pop
and
sub
hlt
pop
into
js
pop
dec
ins
pushf
pop
and
hlt
call
and
ins
sahf
pop
ficomp
mov
pop
ficomp
mov
ins
pushf
cmp
hlt
jge
push
loopne
pop
add
pop
movs
cmp
retf
cli
cs
jg
mov
pop
dec
ins
sbb
cmp
movs
int
pop
movs
stos
jecxz
and
pop
ror
pop
xchg
mov
ins
pushf
cmp
hlt
jge
push
loopne
mov
dec
outs
hlt
xchg
jne
sub
ins
pushf
xchg
jmp
hlt
jge
test
or
sub
or
dec
ins
or
adc
mov
dec
ins
or
popa
int3
mov
dec
jl
xchg
and
add
push
and
ins
movs
jg
mov
pop
dec
mov
push
and
jb
pop
xchg
push
push
and
in
jge
xchg
shl
sub
rcl
hlt
jge
push
xchg
jg
ins
hlt
pop
dec
scas
hlt
pop
and
cmp
push
jmp
hlt
jg
mov
pop
dec
ins
sbb
cmp
adc
ins
or
adc
mov
dec
ins
or
popa
int3
mov
dec
jl
jmp
hlt
pop
dec
or
ss
pop
dec
mov
push
and
jb
pop
xchg
call
and
sub
push
in
jae
dec
pop
and
ins
hlt
jg
ins
hlt
inc
dec
push
push
and
ins
sahf
pop
int
jmp
ins
sahf
pop
ficomp
mov
pop
ficomp
mov
ins
sahf
pop
dec
mov
pop
and
ins
sahf
or
hlt
pop
jne
mov
ins
pushf
int
cs
jge
test
or
cs
jge
xchg
shl
sub
rcl
hlt
jge
add
pop
and
ins
hlt
jge
add
pop
and
cs
jg
mov
pop
dec
ins
sbb
cmp
test
mov
dec
ins
or
adc
mov
dec
ins
or
inc
int3
mov
dec
je
xchg
and
push
loopne
and
cld
push
push
and
ins
pushf
pop
daa
ins
hlt
inc
hlt
pop
xchg
push
and
ins
hlt
jge
xchg
shl
sub
shl
hlt
jge
push
fdivr
push
loopne
and
mov
push
and
ins
pushf
pop
daa
ins
hlt
inc
jno
pop
xchg
and
pop
imul
hlt
call
and
push
stos
jge
add
pop
movs
cmp
retf
cli
cs
jg
mov
pop
dec
ins
not
and
ins
push
aaa
mov
xchg
shl
sub
rcl
hlt
jge
add
pop
and
ins
hlt
jge
add
pop
movs
cmp
hlt
cld
cs
jg
mov
pop
dec
ins
sbb
cmp
mov
aam
call
fucom
xor
out
cwde
or
jp
cmp
xchg
leave
js
inc
jb
push
or
pop
dec
ins
pushf
xchg
and
push
hlt
jge
add
pop
and
test
and
xchg
or
mov
push
hlt
inc
int
in
pop
and
ins
or
loop
sbb
cmp
hlt
xchg
inc
nop
hlt
shl
lock
and
cmp
push
sar
push
fnstcw
bound
ins
pushf
push
and
iret
or
cmps
test
cs
xchg
ins
or
add
into
ins
pushf
inc
cld
cs
call
sub
xchg
ja
cmp
lods
cmp
push
or
ficomp
in
sbb
mov
dec
ins
hlt
pop
movs
test
ficom
ja
and
sub
sahf
loop
stos
dec
in
scas
mov
pop
and
hlt
inc
jae
stc
or
jb
ror
into
inc
push
and
xchg
or
aas
in
pop
and
in
dec
jo
pop
pushf
arpl
pop
and
mov
mov
and
in
cwde
fdiv
call
add
movs
adc
adc
xchg
cs
call
sbb
cmp
xchg
mul
add
cmps
ins
jns
and
test
add
jo
pop
movs
adc
adc
pushf
add
or
fidivr
into
xor
pop
xchg
icebp
bound
les
and
test
add
push
push
dec
daa
inc
push
and
xchg
or
(bad)
jecxz
and
sbb
jg
fnsave
call
mov
hlt
pop
lods
pushf
add
lods
jmp
jge
movs
adc
pop
push
jge
xchg
xchg
cs
call
sbb
xor
pop
xchg
std
bound
push
cmps
ins
jns
and
test
push
add
inc
push
and
xchg
or
das
jecxz
and
sbb
jg
fidiv
call
or
pop
lods
pushf
fucom
lods
stos
je
fisub
push
dec
dec
inc
push
and
xchg
or
arpl
pop
and
sbb
jg
fidiv
call
fnstsw
pop
movs
adc
sbb
pushf
inc
xchg
cs
call
sbb
xor
and
mov
pop
dec
daa
sub
pop
ficom
push
and
xchg
pushf
sub
cs
jg
fnsave
push
and
xchg
pushf
xlat
add
inc
jbe
pop
cmps
test
sahf
aad
adc
(bad)
xor
or
cmp
sahf
sar
inc
scas
sbb
test
cmp
fucomp
lods
stos
jge
jae
mov
and
ins
mov
call
sub
sbb
ins
mov
pop
jp
scas
dec
out
hlt
inc
lods
mov
adc
jbe
mov
popa
lods
pushf
(bad)
stos
dec
test
ret
in
repz
xchg
enter
jne
loop
and
ins
hlt
scas
sub
mov
lahf
or
(bad)
dec
in
xchg
or
push
jge
mov
mov
cmp
(bad)
xor
cwde
lahf
or
fisubr
push
dec
stos
inc
push
and
xchg
or
mov
add
aad
xor
fisubr
push
dec
mov
and
xchg
or
ret
loope
and
xchg
or
push
jge
push
xchg
cs
call
sbb
xor
cwde
lahf
or
fisubr
push
dec
jne
push
and
xchg
or
pop
loope
and
ins
hlt
xchg
cwde
lahf
or
fisubr
push
dec
pop
inc
push
and
xchg
or
aaa
loope
and
xchg
or
push
jge
pop
xchg
cs
call
sbb
xor
cwde
lahf
or
fisub
dec
add
and
xchg
or
dec
loope
and
in
xchg
cwde
lahf
or
fisub
push
dec
out
push
and
xchg
or
imul
and
xchg
or
xchg
cs
call
sbb
xor
cwde
lahf
or
fisub
push
dec
movs
inc
push
and
xchg
or
mov
add
ret
in
not
xchg
or
fst
pushf
call
add
mov
cwde
lahf
or
fisub
push
dec
outs
inc
push
and
xchg
or
jmp
pop
and
xchg
or
push
jge
aaa
xchg
cs
call
sbb
xor
push
int3
mov
test
sbb
ficom
or
lods
pushf
add
lods
jmp
jge
dec
sbb
push
and
ins
sbb
leave
xchg
or
fwait
or
movs
rol
out
ficom
dec
call
xchg
or
sub
rcl
jge
movs
stos
xchg
or
ins
pushf
test
ret
scas
or
cmps
test
sahf
mov
gs
mov
test
adc
ins
je
fst
jo
daa
ins
hlt
xchg
cwde
nop
or
ficom
xchg
sbb
ror
jmp
xchg
into
sbb
stos
jno
fst
or
ficom
mov
test
or
ficom
hlt
pop
cmps
test
scas
popf
dec
hlt
pop
ror
or
lods
stos
ja
fst
call
scas
arpl
cmp
xor
or
jge
jl
xor
ror
ficom
hlt
pop
cmps
push
xchg
mov
bound
add
mov
ins
pushf
cmp
mov
cmp
sbb
sbb
pop
and
ins
pushf
or
cs
call
sbb
xor
loope
pop
pop
dec
ins
lock
and
xchg
or
ja
pop
and
in
ret
rcl
jno
fst
sub
jmp
xchg
or
fninit
pop
and
ins
jns
fst
add
loope
jmp
xchg
or
arpl
pop
and
xchg
or
nop
or
fidivr
in
std
cs
call
sbb
xor
loope
sahf
pop
test
or
ficom
hlt
pop
dec
ins
pushf
jecxz
cs
call
sbb
mov
pusha
std
xlat
sub
popf
push
and
nop
or
cmps
lods
icebp
inc
int
loop
and
xchg
or
popf
out
pop
and
mov
xor
data16
xchg
adc
pop
fcmovu
or
ficom
hlt
jg
mov
pop
test
or
ficom
hlt
pop
cmps
test
jg
fidiv
jmp
or
pop
test
or
ficom
hlt
pop
lods
jmp
pop
xor
xchg
je
and
add
ficom
or
fisubr
(bad)
sub
ficom
or
sbb
pop
and
xchg
or
fidivr
sar
hlt
call
sbb
xor
loope
jns
fst
add
ins
jge
cmc
fwait
or
test
or
ficom
hlt
pop
scas
shl
ficom
mov
add
rcl
pop
and
mov
xor
fidivr
mov
int
in
and
xchg
or
pop
out
and
xchg
or
rol
out
ficom
mov
pop
test
or
ficom
inc
jecxz
xchg
or
push
mov
dec
ins
sahf
pop
int
out
and
ins
hlt
call
cmps
call
fiadd
shr
in
push
in
jno
fcom
or
fiadd
rol
hlt
pop
dec
sub
or
test
add
xchg
or
jp
scas
fsubp
push
dec
ja
ins
hlt
call
cmp
cmp
pushf
adc
cmc
pop
cmp
aaa
ins
hlt
sahf
mov
gs
xor
push
xor
hlt
jge
test
add
inc
sub
out
mov
xchg
push
and
sub
hlt
xchg
(bad)
xchg
mov
and
ins
sbb
xor
hlt
jg
ins
hlt
pop
dec
cld
push
push
and
ins
sbb
xor
hlt
inc
int
loope
and
in
jg
ins
hlt
pop
test
inc
stc
ficom
sbb
xor
add
mov
ins
jns
xchg
or
jne
jmp
shl
ins
sti
xchg
cmp
pop
cmps
imul
push
and
cs
xchg
out
enter
push
and
push
in
lods
lods
add
in
repz
fdiv
(bad)
xor
xchg
jl
add
cli
ficom
call
fistp
call
inc
jl
sahf
in
push
(bad)
fild
out
cmp
sahf
cmc
xor
xchg
sahf
xlat
in
sub
jmp
cmc
popf
mov
push
cld
popa
in
pop
push
sub
ret
sbb
fisubr
xor
out
ss
push
bound
xchg
mov
jno
enter
test
push
cli
ficom
mov
dec
mov
jno
leave
xchg
or
imul
and
iret
sbb
fidivr
xchg
xchg
or
jne
mov
xchg
xchg
loop
ficom
hlt
pop
test
push
cli
ficom
or
cmps
test
jge
loope
mov
xchg
or
xchg
in
and
in
jge
test
sbb
cs
jg
int
pop
dec
stos
sub
and
ins
sbb
ss
hlt
sahf
std
pop
sub
out
dec
jne
xchg
or
and
ins
pop
jno
add
iret
ins
pushf
xchg
mov
dec
sbb
push
and
ins
jns
or
pop
mov
ins
dec
or
leave
pushf
mov
mov
mov
dec
stos
sub
and
ins
sbb
ss
hlt
sahf
std
pop
sub
out
dec
cmc
enter
adc
and
aad
pop
and
add
iret
ins
pushf
xchg
mov
dec
ins
push
and
ins
ja
gs
test
adc
std
pop
and
mov
iret
lods
scas
sahf
pop
dec
ins
sahf
adc
sahf
pop
dec
ins
hlt
pop
gs
mov
call
sahf
adc
jne
push
sbb
xchg
sti
pop
and
loope
mov
int
cli
pop
and
xchg
or
ins
hlt
(bad)
fadd
hlt
call
inc
clc
ficom
sbb
sub
and
push
idiv
mov
call
sub
ins
hlt
call
sbb
fidivr
jp
ins
hlt
call
cmp
gs
enter
or
scas
jae
jns
nop
or
jb
and
pusha
aam
jge
add
mul
or
test
ror
hlt
loopne
in
mov
mov
in
call
sub
and
mov
lods
mov
iret
lods
scas
push
and
mov
mov
lods
sub
and
ins
sbb
sub
pusha
mov
jge
dec
outs
mov
and
arpl
pop
lods
sub
pusha
mov
pop
and
jmp
pop
and
cld
rcl
fwait
pop
sahf
mov
out
cmps
enter
out
mov
es
hlt
pop
loop
xor
and
movs
hlt
pop
and
mov
aam
sub
int
sti
pop
and
pop
imul
hlt
jge
push
hlt
jge
push
hlt
jge
add
pop
out
ins
pushf
idiv
cs
jg
mov
pop
dec
ins
sbb
sub
and
scas
popa
jp
ins
pushf
adc
hlt
(bad)
cmp
pop
dec
ins
sbb
xchg
xchg
or
ins
hlt
sub
inc
pushf
cmp
hlt
call
pusha
hlt
pop
dec
adc
sub
mov
in
aaa
gs
ins
hlt
(bad)
mov
ins
movs
call
fisubr
or
and
inc
sub
out
jno
enter
test
pop
stc
ficom
mov
dec
adc
movs
mov
and
cli
or
cmps
test
push
in
repz
add
inc
push
and
fdiv
pop
int
pop
call
jg
hlt
call
sahf
pop
dec
ins
pushf
fst
hlt
jge
push
hlt
dec
popa
hlt
pop
jne
xchg
sbb
or
jne
hlt
jge
add
gs
sahf
pop
dec
ins
sbb
sub
int
clc
pop
and
ins
hlt
pop
dec
ins
or
and
pop
cli
pop
and
mov
lods
mov
iret
lods
scas
jns
sar
sub
and
loope
repz
ficomp
and
mov
ss
and
or
and
shl
adc
cmp
ins
hlt
loopne
in
jmp
stos
jg
sub
or
sub
popa
push
and
xchg
neg
mov
test
and
ins
hlt
sbb
push
out
and
jge
pop
and
ins
hlt
sub
call
sbb
xchg
sbb
push
and
ins
hlt
pop
dec
cdq
das
push
and
cs
(bad)
cmp
sbb
ficom
jge
dec
sub
and
xchg
or
mov
call
mov
loope
ret
fcom
adc
ficom
hlt
push
in
jo
and
test
call
popa
int3
mov
int
clc
pop
and
out
retf
fcom
or
(bad)
sbb
scas
stc
cmp
ficom
or
sbb
or
ficom
or
cmps
test
pushf
mov
or
fiadd
(bad)
xchg
or
cmc
sbb
jge
out
neg
xchg
or
mov
call
stc
xchg
or
push
jmp
movs
jge
push
hlt
call
and
ins
jge
or
jge
cmps
push
nop
mov
mov
int
mov
xchg
cs
sahf
fstp
sahf
loop
shl
cs
pop
movs
push
test
sub
hlt
inc
xchg
call
xchg
cs
push
sub
lods
adc
fdiv
call
and
fld
sahf
loop
hlt
mov
push
sub
ins
hlt
jge
test
sbb
ins
hlt
mov
repz
sbb
cld
bound
(bad)
clc
pop
and
in
(bad)
fcom
icebp
adc
in
jecxz
xchg
or
and
cs
arpl
icebp
arpl
icebp
daa
mov
push
icebp
out
sub
icebp
add
icebp
imul
mov
cs
arpl
push
icebp
sbb
push
icebp
add
(bad)
repnz
and
jl
mov
mov
push
icebp
imul
mov
cs
arpl
sub
inc
pop
xor
test
and
xchg
hlt
call
sub
loop
mov
and
xchg
or
cmps
leave
sub
ficom
or
fidivr
jle
ins
hlt
sahf
mov
test
adc
xchg
jge
dec
xchg
hlt
pop
and
xchg
or
pop
sbb
fs
sbb
das
ins
hlt
xchg
cwde
xchg
or
fisubr
dec
ins
sahf
pop
dec
aas
sub
and
addr16
pop
ficomp
mov
repnz
ins
hlt
(bad)
sti
imul
jmp
aam
or
jecxz
push
jmp
inc
push
and
ins
hlt
pop
dec
xchg
hlt
pop
and
xchg
or
pop
jo
ins
sbb
das
ins
hlt
call
cmp
gs
enter
or
or
pushf
dec
les
hlt
call
sbb
mov
or
ins
hlt
bound
add
iret
ins
sahf
pop
int
(bad)
pop
and
cs
(bad)
jns
hlt
pop
int3
cmp
pop
and
ins
add
lods
jmp
jge
test
or
ficom
or
fidivr
cmp
cs
call
sbb
sub
loope
pushf
call
mov
cmp
and
stc
mov
int
std
pop
and
xchg
or
push
dec
sahf
pop
dec
ins
pushf
sbb
cs
jge
test
sbb
cmp
mov
int
std
pop
and
ins
jns
fcom
or
push
cmc
pop
push
xchg
ja
xor
push
hlt
jg
mov
sbb
das
ins
hlt
call
and
ins
sbb
shl
ins
pop
sub
fidiv
fist
or
ficom
enter
sahf
pop
dec
ins
pushf
lock
jge
test
push
and
stc
mov
int
std
pop
and
ins
je
fst
jno
fist
dec
xchg
shl
jno
fist
add
jg
mov
pop
test
add
call
hlt
pop
cmps
test
jg
ins
hlt
pop
test
or
ficom
push
push
and
ins
je
fcom
aam
and
mov
sbb
sub
hlt
call
and
ins
sbb
call
jns
aam
or
jne
fxch
ins
jns
aam
or
jne
out
sbb
ins
ja
xor
ins
jns
fcom
sar
sub
hlt
pop
movs
ror
jmp
add
add
shl
pop
int
cld
pop
and
sub
hlt
pop
int3
stc
not
and
ins
hlt
call
jns
aam
or
jne
push
shl
xchg
aam
or
jne
inc
sbb
xor
ins
jns
fcom
sar
sub
hlt
pop
movs
ror
jmp
add
add
shl
pop
int
cld
pop
and
sub
hlt
pop
int3
inc
not
and
xchg
or
ins
hlt
(bad)
fsubr
or
push
dec
sahf
pop
dec
ins
pushf
cmp
cs
jge
test
and
xchg
repz
and
ins
xor
and
jmp
jle
and
les
push
int
add
add
shl
pop
int
cld
pop
and
sub
hlt
pop
int3
aad
pop
and
xchg
or
scas
jmp
enter
jne
fadd
pop
test
or
ficom
or
fidivr
cmp
cs
call
sbb
sub
hlt
xchg
loope
pushf
call
mov
cmp
and
inc
repz
and
xchg
or
push
dec
sahf
pop
dec
ins
pushf
push
repnz
jge
test
and
repz
int
repz
and
ins
xor
and
jmp
jle
and
les
push
int
add
add
shl
pop
int
repz
and
sub
hlt
pop
int3
ins
not
and
xchg
or
test
or
ficom
je
and
sub
fist
pop
xchg
retf
pop
and
xchg
or
jmp
movs
jg
mov
pop
test
add
(bad)
fldenv
cmps
test
scas
int
hlt
pop
ror
or
scas
jmp
jge
dec
ins
sahf
pop
dec
push
pushf
pop
and
repz
int
icebp
pop
and
xchg
or
push
hlt
jge
xchg
inc
out
xchg
or
mov
hlt
pop
movs
push
test
(bad)
stc
daa
mov
xchg
mov
sbb
(bad)
fsub
aaa
jge
loope
sti
fcom
les
aad
or
int
icebp
pop
and
or
fidivr
adc
and
xchg
or
mov
pop
test
add
(bad)
sub
sub
sub
leave
xchg
or
ja
jns
aam
or
jbe
inc
out
xchg
or
movs
imul
xchg
leave
xchg
or
jne
idiv
mov
jmp
and
nop
pushf
or
fiadd
and
mov
int
repnz
and
push
lock
push
hlt
jg
ins
hlt
push
dec
dec
fs
and
ins
jge
aad
or
lods
xchg
(bad)
stos
sahf
adc
fcmovu
add
ficom
hlt
call
cmp
gs
enter
or
call
cmps
jg
into
mov
fcmovu
add
ficom
hlt
jge
loope
sti
fcom
pushf
sti
repz
call
fiadd
out
adc
jge
fcmovu
add
ficom
hlt
shl
add
and
push
lock
add
mov
std
cs
jg
fdiv
pop
movs
test
xchg
ja
cmp
imul
cmp
and
xchg
jge
into
jge
bound
xchg
add
push
fs
and
jnp
cmp
sahf
shr
sbb
mov
ror
cmps
sahf
(bad)
sahf
loop
mov
sbb
and
ins
hlt
xchg
pop
jl
sbb
push
rcl
xchg
sar
sub
hlt
pop
movs
stos
rcpps
icebp
mov
push
or
movs
int
pop
int
lock
and
cs
bound
xchg
sar
sub
hlt
pop
push
pop
fmul
ficomp
and
jbe
ins
hlt
sub
jo
push
and
inc
imul
mov
out
ror
xor
inc
imul
(bad)
call
and
ins
iret
and
js
sub
mov
and
test
and
ins
iret
and
dec
je
push
fdiv
call
and
ins
pop
sbb
fwait
adc
adc
iret
and
icebp
mov
push
push
or
pop
je
ins
adc
fs
jge
or
jge
push
pop
fmul
scas
jno
mov
and
stc
mov
push
push
or
pop
fmul
scas
jno
mov
ins
iret
and
push
or
cmc
mov
push
pop
jo
ins
adc
fs
std
int3
push
jle
bound
xchg
add
jbe
adc
ins
pop
adc
stos
dec
jle
ss
and
dec
cld
in
ins
xchg
dec
clc
in
ins
xchg
dec
in
ins
xchg
dec
loopne
ins
xchg
dec
aam
ins
xchg
dec
fsub
ins
xchg
dec
(bad)
in
ins
xchg
dec
shl
ins
xchg
in
inc
jb
dec
pop
and
push
(bad)
bound
push
(bad)
sahf
(bad)
push
hlt
pop
cmps
test
sahf
pusha
nop
std
xlat
push
inc
jge
bound
aam
fild
repz
in
icebp
xchg
fisttp
into
ins
mov
fwait
imul
push
imul
and
ins
sahf
push
jb
hlt
inc
int
sbb
fidiv
cmp
pop
xor
jl
pop
mov
jl
pop
push
xchg
shl
ins
hlt
pop
scas
cmp
pop
adc
dec
call
fistp
mov
pop
mov
mov
and
jg
add
pop
and
dec
mov
ins
xchg
dec
mov
ins
xchg
dec
mov
xchg
dec
mov
xchg
dec
movs
in
ins
xchg
dec
mov
xchg
dec
lods
in
ins
xchg
dec
test
ins
xchg
dec
xchg
in
ins
xchg
dec
nop
in
ins
xchg
dec
pushf
in
ins
xchg
dec
cwde
in
ins
xchg
dec
test
ins
xchg
dec
and
ins
xchg
dec
mov
ins
xchg
dec
mov
ins
xchg
dec
je
ins
xchg
dec
jo
ins
xchg
dec
jl
ins
xchg
dec
js
ins
xchg
dec
fs
ins
xchg
dec
pusha
in
ins
xchg
dec
ins
in
ins
xchg
dec
push
xchg
dec
push
in
ins
xchg
dec
push
in
ins
xchg
dec
pop
in
ins
xchg
dec
pop
in
ins
xchg
dec
inc
in
ins
xchg
dec
inc
in
ins
xchg
dec
dec
in
ins
xchg
dec
dec
in
ins
xchg
dec
xor
ins
xchg
dec
xor
ins
xchg
dec
cmp
ins
xchg
dec
cmp
ins
xchg
dec
and
ins
xchg
dec
and
ins
xchg
dec
sub
ins
xchg
dec
sub
ins
xchg
dec
adc
ins
xchg
dec
adc
ins
xchg
dec
sbb
ins
xchg
dec
sbb
ins
xchg
dec
or
ins
xchg
dec
or
ins
xchg
dec
hlt
jecxz
ins
xchg
dec
lock
ins
xchg
dec
cld
jecxz
ins
xchg
dec
clc
jecxz
ins
xchg
dec
in
ins
xchg
dec
loopne
ins
xchg
dec
in
jecxz
ins
xchg
dec
call
xchg
dec
aam
ins
xchg
dec
shl
ins
xchg
dec
fsub
ins
xchg
dec
fsub
ins
xchg
dec
(bad)
xchg
dec
shl
ins
xchg
dec
int3
jecxz
ins
xchg
dec
enter
xchg
dec
mov
ins
xchg
dec
mov
ins
xchg
dec
mov
xchg
dec
mov
xchg
dec
movs
jecxz
ins
xchg
dec
mov
xchg
dec
lods
jecxz
ins
xchg
dec
test
ins
xchg
dec
xchg
jecxz
ins
xchg
dec
nop
jecxz
ins
xchg
dec
test
ins
xchg
dec
and
ins
xchg
dec
mov
ins
xchg
dec
mov
ins
xchg
dec
je
ins
xchg
dec
js
ins
xchg
dec
fs
ins
xchg
dec
pusha
jecxz
ins
xchg
dec
ins
jecxz
ins
xchg
dec
push
xchg
dec
push
jecxz
ins
xchg
dec
push
jecxz
ins
xchg
dec
pop
jecxz
ins
xchg
dec
pop
jecxz
ins
xchg
dec
dec
jecxz
ins
xchg
dec
dec
jecxz
ins
xchg
dec
xor
ins
xchg
dec
xor
ins
xchg
dec
cmp
ins
xchg
dec
cmp
ins
xchg
dec
and
ins
xchg
dec
and
ins
xchg
dec
sub
ins
xchg
dec
sub
ins
xchg
dec
adc
ins
xchg
dec
adc
ins
xchg
dec
sbb
ins
xchg
dec
sbb
ins
xchg
dec
add
ins
xchg
dec
add
ins
xchg
dec
or
ins
xchg
dec
or
ins
fs
.byte
.byte
ins
hlt
pop
