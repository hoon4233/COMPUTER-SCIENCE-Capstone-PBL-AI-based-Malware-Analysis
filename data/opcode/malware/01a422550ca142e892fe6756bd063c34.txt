fdivr
add
add
inc
cld
enter
daa
sub
in
or
pop
rcr
cmps
data16
jo
fidiv
in
add
outs
sar
fdiv
lods
inc
xor
inc
pop
adc
loope
ret
test
int
call
jl
push
push
cdq
lahf
cmp
inc
repnz
(bad)
retf
or
in
or
inc
pop
cwde
mov
cdq
inc
hlt
mov
nop
xchg
sar
ins
add
add
dec
bound
hlt
rcr
dec
fcomp
daa
xrelease
stos
movs
and
or
fld
or
outs
in
mov
xor
sub
mov
xchg
push
fwait
dec
mov
sbb
xor
mov
sub
add
(bad)
popa
(bad)
sti
(bad)
pop
xor
xor
popa
fisttp
add
scas
sbb
mov
jno
push
lods
aad
cmp
push
jecxz
aas
fistp
cmps
jmp
(bad)
jo
push
loop
aam
adc
enter
stos
push
imul
and
mov
pusha
call
in
fnstsw
add
cdq
out
adc
retf
adc
(bad)
mov
sbb
mov
pop
mov
or
imul
cmp
dec
ins
int3
or
jnp
or
in
mov
retf
xchg
sub
jb
mov
div
adc
and
mov
jnp
xchg
ins
pop
mov
mov
(bad)
jle
and
mov
jmp
xor
pop
sub
cmp
mov
xchg
retf
test
arpl
mov
pop
pop
dec
in
mov
mov
stc
add
pop
jno
aad
mov
stc
push
pushf
pop
or
pop
xor
(bad)
icebp
(bad)
mov
mov
fsubr
in
sahf
pop
xchg
inc
stos
out
mov
xchg
jnp
bound
clc
aaa
jns
cdq
fbld
push
aaa
mov
and
push
jb
or
mov
mov
pop
pop
cmp
mov
jo
stc
push
cmc
sbb
jns
or
jmp
mov
dec
jp
pop
(bad)
adc
gs
mov
xchg
or
stos
jb
lods
cmps
imul
ins
gs
test
test
jno
cmc
cld
mov
cmp
dec
out
and
xchg
movs
mov
daa
std
adc
lods
sti
xchg
pop
addr16
fiadd
ins
into
aam
cmp
or
sbb
cs
inc
fadd
ss
or
and
ret
repnz
and
xchg
jb
cdq
scas
arpl
and
and
iret
jmp
and
add
(bad)
int
test
push
push
mov
xchg
xchg
ret
add
pop
and
stos
push
jne
xchg
loop
les
inc
sahf
add
ins
jp
popf
fistp
xchg
shr
cld
push
lods
call
mov
push
and
adc
and
enter
stos
jno
push
pop
iret
lods
into
cmp
add
push
ret
dec
pop
icebp
xchg
xchg
arpl
push
ins
in
inc
jge
sar
aad
lods
adc
add
pop
ficomp
js
rcl
jge
pop
add
fwait
pop
in
(bad)
mov
or
jb
je
test
mov
sbb
mov
push
sbb
icebp
outs
test
xchg
(bad)
fild
js
push
or
popa
push
das
addr16
and
adc
lock
cmp
add
shl
push
mov
sbb
(bad)
ins
mov
sbb
mov
xor
and
mov
mov
xor
and
mov
or
jl
jp
aas
push
pop
sbb
cs
pop
into
jns
clc
sahf
movs
outs
jecxz
push
inc
lea
adc
mov
xor
xor
ins
aaa
push
stos
jne
js
nop
mov
les
imul
mov
sub
stc
push
ss
jmp
sbb
and
jge
adc
sbb
pop
adc
in
icebp
mov
xlat
and
dec
dec
sbb
and
dec
mov
not
xchg
mov
movs
clc
jg
shr
pop
xchg
jg
lock
inc
aas
push
xlat
inc
cli
mov
in
pop
adc
cs
sub
fdiv
add
dec
daa
outs
push
and
out
xor
mov
cs
mov
adc
jno
mov
rcl
ds
clc
xchg
and
call
pop
jo
mov
or
cdq
std
inc
inc
pop
loop
xor
mov
ret
ins
pop
add
xor
jb
out
cmp
adc
data16
jge
or
test
or
mov
push
xchg
call
cmp
jp
(bad)
ja
pop
pop
sar
jmp
sub
das
xchg
xor
dec
or
sub
sub
rol
cmp
mov
jge
or
mov
sub
mov
jecxz
xchg
mov
or
in
sub
popa
jno
mov
sahf
mov
ins
jmp
pop
mov
push
(bad)
fcomip
or
pop
mov
retf
enter
scas
add
fstp
out
adc
xchg
pusha
lahf
push
ret
sbb
sbb
stos
adc
push
popa
sub
mov
pop
push
mov
cmp
(bad)
dec
loope
std
dec
adc
ins
inc
ja
xchg
idiv
sahf
(bad)
cmp
add
mov
neg
shl
add
ret
aaa
jmp
aaa
inc
xor
xor
test
jb
push
int3
sar
lods
cmps
popa
adc
icebp
test
sub
sbb
arpl
stos
xor
call
mov
ja
in
std
mov
cmp
clc
jmp
fstp
pop
sbb
xchg
stos
mov
stc
push
les
adc
dec
ins
or
mov
arpl
aaa
pop
adc
ret
ja
sahf
popa
xchg
mov
adc
test
dec
popa
push
lds
xchg
inc
call
aaa
(bad)
out
aaa
imul
mov
xor
jp
mov
cmp
xor
sbb
je
sbb
aas
outs
mov
push
aad
lods
pushf
or
gs
fcom
add
jo
mov
ins
in
jecxz
pop
mov
pop
ds
mov
push
mov
cwde
xor
sub
jae
imul
pusha
push
and
adc
or
sub
leave
inc
movs
adc
mov
mov
mov
and
pop
cmp
es
out
push
jp
lock
imul
in
xacquire
pop
sti
cdq
or
aas
fild
and
out
adc
loop
mov
pop
pusha
inc
rol
jmp
inc
cmp
pop
arpl
shl
add
xchg
in
in
lock
jnp
les
sub
mov
jmp
lods
fsub
mov
sub
stc
test
pop
adc
add
lods
(bad)
fsub
jno
pop
add
mov
xor
loop
and
mov
jmp
mov
xor
push
pop
or
stos
mov
arpl
push
or
popa
jg
or
les
daa
mov
jle
jnp
mov
out
mov
sub
push
into
push
nop
in
sbb
stc
mov
xchg
into
and
js
and
inc
xor
pop
fdiv
loop
adc
or
mov
dec
push
pop
arpl
iret
(bad)
fsub
rcr
out
aas
inc
in
lea
mov
inc
das
cmps
call
and
data16
or
arpl
pop
(bad)
push
push
fwait
enter
in
loop
sbb
add
int
outs
stc
xor
jmp
popa
out
test
pop
mov
movs
cmp
mov
mov
in
mov
mov
sbb
leave
xchg
adc
mov
into
pop
scas
ret
inc
push
repnz
aam
adc
add
or
out
fcomp
out
scas
into
jl
inc
dec
mov
sbb
rol
and
int
fidivr
add
mov
lds
add
push
fdiv
stos
inc
aad
mov
je
sub
pop
in
add
mov
cwde
iret
sahf
inc
loop
aas
add
imul
inc
aad
data16
or
repnz
jbe
mov
arpl
loope
adc
sbb
(bad)
adc
xor
pushf
dec
mov
(bad)
push
mov
jo
dec
or
sar
fcom
call
fist
stc
aam
mov
mov
es
int
in
inc
sub
daa
gs
not
sub
inc
pop
(bad)
xchg
jp
fadd
push
ins
in
jnp
and
add
dec
icebp
push
nop
inc
push
adc
mov
mov
sbb
inc
pushf
pop
cld
in
xor
inc
pushf
jl
enter
call
in
jb
inc
or
call
jmp
sub
pop
test
lods
xor
inc
or
shr
popa
jge
sahf
xor
ret
xlat
mov
or
stc
int3
add
sbb
jmp
adc
pop
in
mov
shl
sbb
add
cs
mov
imul
pop
mov
arpl
lods
dec
es
or
mov
sti
inc
fstp
je
sub
xor
mov
loopne
rol
mov
clc
and
inc
mov
xchg
imul
sub
adc
push
jno
mov
jo
cli
lds
in
js
mov
lahf
mov
add
dec
lods
jmp
pop
data16
jp
out
sbb
cmp
dec
xchg
(bad)
mov
or
adc
mov
rol
pushf
sub
and
std
and
fld
push
jo
push
dec
mov
(bad)
aas
inc
sub
data16
loopne
jb
jno
xchg
(bad)
outs
inc
inc
inc
call
nop
jp
sub
stos
mov
sub
sbb
jbe
mov
jmp
jns
fmul
fwait
mov
xor
cdq
les
sbb
sub
je
inc
cdq
xchg
push
inc
js
dec
shl
and
inc
lds
jnp
jge
pushf
pop
nop
add
shl
mov
cmp
sbb
stos
retf
jl
jo
cwde
jge
xchg
push
retf
addr16
into
push
leave
test
push
pop
test
adc
jae
sub
pop
out
cmp
pop
popf
cmp
sub
loopne
cmp
call
mov
je
mov
enter
jnp
xor
jnp
fwait
pop
mov
pop
retf
add
xor
nop
lods
jge
pop
nop
retf
xchg
inc
(bad)
fnstenv
(bad)
fldenv
pop
dec
sbb
xchg
in
test
out
int
add
jns
sub
push
jmp
ja
cmp
ja
(bad)
repz
ret
fwait
or
mov
aaa
xchg
mov
lods
lea
xor
adc
mov
adc
mov
jmp
test
nop
cmp
sahf
and
repnz
dec
sub
das
out
scas
(bad)
(bad)
aad
fsub
test
enter
icebp
addr16
cmp
(bad)
ins
or
xchg
(bad)
stos
mov
sti
or
ins
push
sbb
xchg
mov
push
ds
js
sub
push
es
mov
mov
lock
ds
and
push
push
mov
shl
push
not
inc
cmp
sbb
test
xor
or
bound
sub
pop
shl
adc
int
int3
out
push
pop
(bad)
repnz
out
ins
sub
add
stos
sbb
das
shl
xchg
mov
gs
je
leave
inc
xor
pop
mov
jo
jp
daa
jp
scas
pop
or
or
inc
or
repnz
xchg
nop
xchg
or
pop
mov
mov
mov
ja
mul
cmp
cdq
mov
jmp
dec
addr16
fistp
fmul
add
mov
loope
ins
rol
call
sbb
iret
in
and
push
pop
std
mov
out
ret
xor
lods
imul
fldenv
fstp
ins
enter
and
mov
inc
imul
push
ss
jb
mov
dec
es
push
mov
mul
push
and
mov
jmp
add
movs
jb
das
adc
jecxz
mov
adc
xor
cmp
imul
clc
nop
mov
jp
xchg
jno
in
push
xchg
test
outs
and
lock
cmps
test
loope
into
inc
adc
mov
cdq
xchg
jg
por
lock
(bad)
sar
pushf
inc
sub
jo
dec
xor
and
cmp
mov
adc
fst
adc
out
cs
xchg
fild
test
je
les
pop
shl
shr
dec
fcom
or
fild
or
sub
fst
(bad)
sahf
rol
iret
inc
gs
in
adc
sub
lea
xor
nop
mov
dec
jecxz
add
scas
sub
mov
mov
fmul
pop
ror
mov
and
dec
mov
cmc
jp
(bad)
es
push
lea
inc
mov
add
cdq
xor
fldenv
add
jmp
loopne
cdq
in
pop
outs
adc
mov
push
dec
push
out
sub
loopne
or
cmp
pop
fcmove
and
std
and
pop
pop
jmp
adc
enter
repnz
fsub
mov
clc
popa
jnp
in
pop
jmp
mov
sub
pusha
inc
adc
sbb
xor
imul
test
push
clc
retf
dec
push
pop
sub
adc
push
scas
sbb
mov
xor
adc
cmps
out
iret
test
jmp
in
push
mov
cli
in
aas
mov
fdivp
mov
jecxz
daa
stos
popf
nop
jae
dec
mov
invd
jge
(bad)
mov
sub
sub
pmovmskb
mov
shr
mov
push
sar
xor
call
mov
mov
cmp
mov
mov
lods
dec
jl
sbb
add
xchg
adc
add
arpl
push
cmp
lock
xchg
push
jle
mov
cmp
xor
cmp
pop
inc
mov
or
scas
ret
and
test
jmp
fmul
push
mul
adc
fwait
jmp
das
mov
inc
push
xor
adc
mov
dec
fld
pop
sub
add
out
sahf
sub
jne
je
(bad)
mov
mov
fwait
das
int
jbe
adc
repnz
lea
outs
arpl
jmp
iret
mov
into
outs
pop
pusha
push
pop
fwait
inc
or
sub
inc
test
cmps
jns
push
popa
mov
out
adc
push
push
clc
push
mov
retf
inc
fdivp
xchg
out
fisttp
jp
out
arpl
jo
inc
das
imul
push
push
cmp
imul
mov
cmp
push
outs
adc
icebp
(bad)
pop
fdiv
cmp
xchg
jnp
shr
mov
pop
and
and
es
fucomip
(bad)
mov
xchg
in
jo
out
xor
push
inc
rcr
bound
loop
iret
sbb
adc
xchg
cmc
call
cmc
mov
sub
rcr
inc
xchg
loop
xchg
(bad)
(bad)
jns
mov
loopne
sbb
xchg
cmp
inc
push
(bad)
jge
icebp
jnp
(bad)
mov
sbb
mov
inc
(bad)
inc
ins
push
sbb
not
mov
stos
fisubr
fldcw
and
push
sar
daa
lock
(bad)
xor
sub
sbb
mov
aaa
dec
fiadd
fild
push
sub
mov
gs
ret
mov
jmp
repz
int
int3
push
int3
add
push
sbb
test
xchg
test
jmp
(bad)
lods
stc
lock
ins
push
inc
inc
clc
lea
pop
mov
fld
jno
jle
fwait
rcr
mov
cmp
push
jae
hlt
push
loopne
dec
in
xchg
addr16
aad
push
loop
jbe
mov
aad
pop
ret
add
inc
call
aaa
xor
ficom
mov
int
outs
in
outs
jo
int3
or
xor
stc
dec
daa
xchg
xor
js
pop
rcr
and
in
test
cld
push
push
xor
jg
cmp
(bad)
fidivr
xchg
and
nop
mov
adc
mov
adc
xchg
cmc
fwait
or
xchg
pop
arpl
std
sbb
cmp
and
hlt
mov
cmps
jmp
adc
inc
das
movs
pushf
xor
dec
(bad)
fsub
jmp
in
iret
and
xor
aas
out
repnz
popa
dec
aas
loop
(bad)
aas
push
adc
pushf
mov
pop
loopne
lock
pop
mov
add
shl
jp
(bad)
xor
lock
dec
xchg
push
or
scas
ja
(bad)
jle
lds
add
jbe
cld
mov
xor
movs
mov
test
inc
ret
les
sub
jb
push
out
aaa
mov
dec
mov
adc
pop
mov
mov
aam
addr16
push
inc
out
fild
popf
pop
inc
pslld
fnstcw
or
add
sub
scas
stc
push
movs
push
ror
loopne
or
inc
push
pop
test
jecxz
sbb
pop
pushf
pop
pop
push
xchg
rcl
std
dec
stos
xlat
stos
mov
hlt
xor
aas
fisubr
pusha
ss
scas
in
or
lods
push
xor
loope
sbb
ret
pop
pop
loope
adc
(bad)
dec
les
ds
push
stos
mov
div
dec
stc
and
jge
push
sbb
imul
jb
push
scas
xor
hlt
jmp
mov
inc
mov
fs
adc
arpl
jb
mov
or
out
fist
mov
call
mov
ds
push
repz
retf
sahf
out
mov
pop
fimul
xchg
jmp
(bad)
sbb
xlat
mov
(bad)
mov
push
push
and
or
jns
div
xchg
hlt
jb
cs
out
lods
in
push
cmps
or
inc
fidivr
adc
add
and
in
xchg
rcr
dec
xchg
shl
push
into
sti
jae
fcmovnbe
inc
sub
dec
dec
int
jmp
lock
mov
in
data16
sbb
jl
sbb
addr16
xchg
sbb
cmp
xchg
ins
out
add
xor
icebp
mov
cmp
div
sub
inc
mov
dec
mov
clc
imul
retf
jo
test
cmp
pop
sub
icebp
imul
mov
push
or
fwait
sbb
dec
pop
fild
xor
mov
pop
fisttp
sub
pop
jge
pushf
or
or
enter
nop
push
cmp
push
sub
add
arpl
xchg
push
movs
jp
mov
jbe
pop
mov
or
mov
jg
mov
(bad)
jmp
xor
and
push
mov
pop
enter
aaa
jecxz
ss
les
dec
dec
push
mov
sub
xchg
push
outs
sbb
das
mov
je
clc
adc
out
cmps
sub
push
sbb
jle
jmp
pop
bound
ror
jnp
ja
add
xor
mul
scas
dec
push
push
mov
ror
inc
pop
sub
idiv
xor
retf
iret
popa
cmp
xchg
ss
xor
(bad)
mov
push
jmp
jns
mov
mov
rcl
ins
adc
repnz
or
or
pop
push
jle
jecxz
dec
test
fdivr
jo
nop
mov
xor
push
retf
jbe
fisub
sub
ins
lea
int3
mov
ficomp
adc
in
adc
pop
out
xchg
push
jno
ins
dec
repz
adc
cmp
cmp
int
xchg
stc
loope
test
pop
mov
cmp
push
imul
cli
jle
lods
inc
stos
sub
adc
mov
and
xor
xlat
sahf
addr16
mov
mov
imul
push
and
popa
mov
or
jnp
push
ins
jb
clc
pop
xchg
or
outs
dec
in
lock
stc
repz
xlat
pop
jecxz
into
jl
(bad)
xchg
push
cmp
dec
sahf
xchg
fnstenv
inc
push
data16
lds
inc
int3
mov
cmc
scas
sbb
je
movs
popf
fist
cmp
or
lea
hlt
and
pop
pop
xlat
movs
int3
mov
lock
fisubr
loop
jae
push
nop
add
test
sub
dec
push
test
push
and
cmp
mov
pop
cmp
pop
jb
cld
lea
cs
mov
push
mov
xchg
add
sbb
call
data16
add
sti
cmp
cvtpi2ps
dec
xchg
push
sub
idiv
push
inc
pop
add
jmp
add
add
nop
xchg
pop
cld
jp
xchg
retf
scas
xor
xor
ss
int
outs
mov
rcl
sbb
addr16
add
jo
xchg
sbb
fcomp
mov
outs
cmp
jle
mov
cmp
pop
lea
adc
pop
mov
xchg
jnp
mov
movs
test
rep
das
hlt
gs
push
push
jae
mov
imul
lock
lahf
call
lock
stos
cwde
mov
fimul
mov
loope
das
pop
push
push
pop
sbb
ret
push
pusha
retf
test
ins
fst
mov
add
mov
xor
or
cli
inc
push
pushf
test
in
xchg
les
sbb
das
cmp
std
das
mov
sar
cld
leave
sbb
mov
shl
les
fs
cmp
in
js
mov
pusha
inc
mov
mov
pop
mov
pop
in
or
add
add
pusha
retf
cmp
mov
xor
cmps
mov
push
lock
push
icebp
daa
repz
retf
test
fs
outs
cmps
sub
mov
and
bnd
or
xor
mov
sbb
sub
and
xchg
cdq
pop
cdq
mov
inc
xor
and
ficomp
or
lahf
inc
fisttp
retf
test
retf
add
scas
mov
pop
push
jns
dec
mov
cmp
pop
cmps
dec
popa
and
push
sbb
add
or
adc
pop
inc
std
pop
or
out
test
cmc
mov
jb
push
cmp
lds
call
bound
mov
out
cmps
xchg
inc
sar
loope
loopne
or
xchg
add
xchg
sbb
outs
jl
into
shl
or
and
mov
or
dec
cmps
jg
pop
lds
(bad)
push
out
mov
cmp
movs
stos
(bad)
pop
cli
addr16
or
inc
sub
int
rol
inc
nop
(bad)
into
mov
mov
cwde
pop
popa
jge
add
xor
ret
push
adc
cmp
pop
lods
jmp
and
or
movs
iret
stos
mov
jmp
aam
adc
and
and
movs
aam
push
out
in
jmp
shr
mov
sub
add
mov
ds
movs
rol
adc
inc
lahf
dec
mov
adc
push
sbb
rcl
mov
jbe
sar
(bad)
fcmovu
jmp
jp
fwait
jmp
dec
jp
sub
clc
cmp
add
frstor
mov
in
xchg
out
loop
sbb
sahf
adc
clc
mov
cs
add
stos
sub
lods
in
loope
cmc
mov
or
paddd
xchg
xor
addr16
cs
out
call
adc
in
sbb
mov
adc
pop
sbb
(bad)
retf
frstor
data16
addr16
in
xchg
mov
mov
and
daa
sbb
stos
lahf
push
push
xchg
stc
and
arpl
pop
dec
inc
fcomi
mov
jp
and
mov
(bad)
add
pop
leave
push
lds
sbb
imul
ins
jmp
mov
xor
mov
jae
hlt
iret
push
and
push
div
pop
das
sbb
cmp
hlt
lods
std
pop
leave
xchg
inc
bound
add
mov
xlat
cmovbe
out
inc
call
leave
jge
jg
push
rol
scas
mov
(bad)
jo
outs
adc
retf
out
push
sub
faddp
test
mov
dec
push
ror
sbb
inc
addr16
out
imul
into
(bad)
ret
cmp
cmp
mov
pop
xchg
cmp
sub
mov
inc
pushf
or
adc
jle
fld
int3
inc
imul
adc
pop
mov
push
pop
sub
lods
pop
call
mov
adc
push
fbstp
stos
outs
or
sub
xor
cwde
jle
js
into
cmp
pop
cmp
mul
int3
sub
movs
gs
jmp
xchg
mov
xchg
shl
in
pop
mov
xchg
push
(bad)
mov
inc
fwait
xor
mov
cmp
push
add
push
aaa
inc
pop
pop
in
inc
pop
sbb
ins
(bad)
iret
and
(bad)
or
je
ins
mov
es
inc
imul
rcr
loope
add
push
(bad)
out
mov
mov
inc
cmp
sbb
retf
pop
test
into
faddp
cs
loope
(bad)
mov
cmp
lea
scas
jg
ret
cmp
cli
inc
mov
out
push
mov
jge
cmps
lods
shl
adc
and
sahf
out
sbb
and
fcomp
daa
mov
adc
enter
cmp
aam
add
cmps
mov
imul
pusha
movs
fwait
mov
cmp
pop
pop
push
scas
dec
add
adc
pop
fistp
fadd
lods
sbb
addr16
out
ss
add
xor
int
ds
inc
lea
xchg
cmp
or
int
rcl
jecxz
xchg
and
ins
jns
cs
adc
ja
fcom
push
mov
cmp
inc
jl
int
sbb
cli
jnp
idiv
fstp
loop
jge
lds
adc
or
fldcw
xor
pop
lahf
pop
push
daa
push
or
test
dec
mov
aam
sbb
sbb
dec
push
jmp
popf
in
les
adc
add
pop
pop
popf
(bad)
in
pop
mov
(bad)
adc
inc
push
push
sub
mov
cwde
(bad)
xlat
dec
push
jmp
sbb
nop
in
jmp
inc
bound
cmps
(bad)
cmp
adc
pusha
mov
mov
fcmove
mov
iret
push
dec
outs
dec
jge
inc
clc
ret
jno
leave
push
cmp
push
pop
sub
std
and
cmp
scas
xor
cmp
inc
mov
retf
test
iret
fist
adc
mov
mov
hlt
mov
or
cmp
enter
icebp
je
jbe
adc
and
ret
sar
nop
mov
dec
call
inc
scas
dec
mov
mov
aam
cmovb
sbb
lds
mov
shl
jg
cwde
jne
clc
pusha
inc
or
mov
xor
out
in
sub
xchg
inc
shr
sti
adc
xor
mov
fiadd
(bad)
jmp
fcomp
and
xor
mov
adc
aaa
and
in
mov
sub
stc
stc
jmp
ret
jge
mov
movs
add
adc
dec
inc
or
and
aas
mov
xor
and
mov
mov
and
call
pop
test
adc
fwait
pusha
jnp
mov
and
xchg
and
sbb
add
popa
mov
int3
adc
jg
xor
test
movs
dec
out
cmp
dec
sub
sub
push
scas
stos
les
mov
mov
mov
bound
jmp
push
mov
add
out
xchg
shl
add
inc
sahf
pop
repz
sbb
cmp
repz
gs
cdq
(bad)
sub
jl
inc
mov
clc
xor
mov
add
push
das
enter
addr16
(bad)
outs
push
popa
dec
mov
loop
(bad)
sub
ins
jmp
jae
push
mov
jg
pop
push
push
sub
fild
push
dec
inc
cld
mov
push
int
arpl
ror
(bad)
mov
push
ins
jecxz
xchg
pop
test
push
or
add
sub
cmp
(bad)
xchg
push
adc
ja
pop
inc
or
inc
and
pop
daa
adc
sub
add
lods
xchg
inc
inc
jo
and
(bad)
jno
(bad)
into
ret
ds
stos
sbb
cmp
out
push
sbb
pusha
xchg
cld
xchg
gs
mov
xchg
outs
xchg
ins
ins
aad
ret
sub
and
sbb
adc
xchg
sub
xor
fwait
loop
test
gs
sub
sbb
popa
into
inc
pop
mov
call
cmp
icebp
mul
push
push
lea
pusha
sbb
int
push
pop
mov
pop
push
cmp
aad
push
call
nop
loop
push
jmp
test
cmp
mov
xor
sub
inc
imul
push
cmps
pop
mov
lods
out
mov
das
xchg
xor
loopne
and
mov
(bad)
cmp
pop
or
pushf
loopne
fsubp
cs
nop
xor
stos
pop
cmp
inc
cld
stos
enter
scas
ret
ds
jb
jne
mov
mov
(bad)
bnd
push
sub
cmp
xor
or
jge
imul
movs
sbb
ss
retf
xor
jmp
shr
mov
ss
mov
out
mov
push
mov
mov
popf
cmp
outs
cdq
and
push
adc
xor
push
push
mov
scas
fstp
push
inc
jp
outs
sub
or
movs
add
psubusw
fcomp
cmps
jnp
mov
mov
imul
sub
mov
leave
sub
les
js
out
xchg
cs
int3
retf
pop
cmp
push
in
add
sbb
enter
lods
lods
or
ds
push
mov
into
pop
xor
inc
xchg
lods
and
arpl
sti
push
mov
jmp
push
int3
jb
inc
push
xlat
mov
fcom
cli
or
scas
fisttp
arpl
push
not
popa
mov
ret
push
aad
fcom
mov
inc
sub
(bad)
sbb
cmps
movs
cmp
cwde
loope
ret
jns
sbb
jecxz
push
and
and
jle
cwde
sbb
push
je
jo
mov
sub
jp
mov
jo
es
xor
xchg
dec
popa
cmp
in
pusha
xor
add
mov
inc
dec
das
jae
cdq
and
jg
pop
mov
iret
mov
fucomi
aam
sub
mov
in
ds
or
fndisi(8087
(bad)
cmc
dec
pop
mov
imul
xor
jnp
aam
adc
mov
pop
and
mov
fbstp
xchg
sub
push
adc
xor
pop
scas
(bad)
mov
das
jae
clc
pop
(bad)
xchg
jne
or
dec
(bad)
push
fistp
xchg
push
add
sub
mov
inc
add
fidiv
mov
in
pop
jle
aad
sub
enter
pop
push
push
test
(bad)
jg
popf
push
jo
je
(bad)
out
dec
pop
ins
or
sub
popf
leave
imul
cmp
xor
adc
les
adc
rol
lea
aam
(bad)
jmp
fcmovnbe
adc
stos
and
call
shr
jo
dec
out
cmps
test
add
add
sbb
adc
(bad)
nop
jp
ss
jecxz
retf
jecxz
sbb
push
hlt
inc
pushf
adc
aas
ror
mov
and
cmp
loopne
cmps
daa
lea
out
and
or
jb
imul
pop
les
adc
fdivp
data16
mov
sub
mov
jecxz
inc
ss
jbe
pop
outs
lahf
stos
aaa
inc
xchg
xor
lock
xor
test
xor
sub
call
jns
jns
cmp
mov
pop
lock
xchg
inc
rcl
mov
mov
lods
les
sbb
in
shl
lods
adc
sar
cmp
add
xchg
push
adc
lahf
jg
aas
shr
and
hlt
stos
inc
out
fcom
cmc
sbb
pop
ret
or
and
xchg
repz
lahf
fcmove
xchg
sub
inc
cmps
rcr
call
jns
xchg
sbb
stc
cs
inc
mov
fstp
mov
rol
stc
xor
pushf
mov
and
fmul
cmps
jl
vxorpd
call
pop
fistp
mov
xchg
(bad)
repnz
inc
mov
jns
push
xchg
dec
mov
mov
pop
mov
pop
sbb
dec
xlat
dec
push
(bad)
mov
add
mov
cmp
dec
test
mov
lock
xchg
jle
retf
jmp
jo
les
xor
push
stc
jbe
out
jbe
fs
retf
push
push
inc
(bad)
aad
lods
push
pop
rol
int
add
popa
cmp
jmp
or
adc
test
mov
sbb
out
lods
test
arpl
mov
dec
stc
enter
sti
xor
(bad)
cli
mov
push
idiv
add
popf
cmp
imul
dec
push
iret
mov
cld
out
sbb
mov
mov
jmp
cdq
out
and
push
neg
pop
inc
mov
xor
test
and
jb
or
mov
sar
fsubr
jp
pop
dec
ficom
out
sub
sbb
(bad)
adc
shr
inc
dec
mov
mov
cmp
es
sub
loop
dec
jae
stos
daa
ss
cmc
sbb
das
jl
aaa
lds
xchg
xchg
push
idiv
ror
lock
push
cmc
add
xor
clc
aad
sub
in
or
push
xor
jp
sar
outs
dec
icebp
icebp
arpl
push
inc
add
pop
movs
(bad)
jb
popf
(bad)
push
mov
call
mov
imul
inc
imul
movs
push
call
ss
mov
cmp
je
add
jbe
icebp
mov
(bad)
stos
push
dec
add
pop
sbb
inc
cmps
minps
push
inc
push
clc
fisttp
fsub
mov
adc
neg
ins
dec
jbe
mov
in
push
or
jae
mov
jb
scas
lods
sbb
add
mov
test
call
lock
cli
int3
add
test
mov
je
fnsave
mov
cmp
dec
sub
sub
sbb
shl
aas
sub
loope
sbb
fs
mov
xor
lea
mov
test
rol
aam
gs
mov
mov
dec
dec
sbb
cmc
nop
pop
push
ins
push
jl
loope
xor
xchg
push
jnp
test
inc
scas
cs
lods
sbb
xor
rcl
inc
or
pop
mov
sahf
push
mov
add
xchg
xchg
push
call
mov
sar
ds
fdivp
fcos
xor
inc
mov
leave
xlat
cmc
inc
fwait
out
jl
cmps
popa
out
ins
retfw
adc
xor
jbe
ret
mov
sub
(bad)
jp
shr
lds
add
add
sbb
and
dec
xchg
loope
or
std
call
mov
test
scas
add
fidiv
in
mov
data16
neg
sbb
sub
cmp
es
or
lahf
pusha
cwde
xchg
mov
clc
cmp
lods
jnp
fucomp
or
sbb
mov
int3
cmp
jp
fwait
sub
jl
shl
mov
xor
sbb
mov
sub
out
fwait
ja
scas
pushf
sbb
stos
icebp
sbb
in
inc
aaa
out
mov
clc
pop
xchg
and
clc
es
js
dec
setb
aaa
cdq
fs
fidivr
inc
inc
and
cmp
stos
movs
adc
lahf
jnp
retf
icebp
fild
rcr
cmp
ins
repnz
lods
and
aad
fisttp
jns
es
stc
xchg
rol
jb
enter
icebp
jg
mov
pop
sbb
adc
pop
push
js
sbb
in
lock
jbe
stc
xor
jns
inc
movs
jo
out
push
jns
mov
mov
dec
xchg
(bad)
dec
xor
push
sub
mov
push
es
(bad)
call
scas
je
or
mov
test
xchg
mov
lds
stos
(bad)
jb
jmp
clc
dec
dec
push
mov
pop
aad
pop
add
jb
mov
adc
add
mov
aas
shl
es
repnz
bound
mov
scas
sub
aas
movs
adc
gs
je
addr16
adc
sbb
hlt
sub
mov
repz
xor
std
pop
int3
xlat
cli
mov
push
stc
retf
or
imul
movs
addr16
outs
xchg
(bad)
js
test
cmp
rcl
sbb
cmp
xor
nop
push
mov
inc
in
in
mov
and
dec
test
mov
push
ret
push
adc
and
jmp
movs
pop
cdq
mov
inc
arpl
mov
mul
repnz
aad
das
push
cmp
outs
jle
xchg
clc
mov
mov
leave
cmp
xor
push
fdivr
in
nop
dec
fisttp
ja
dec
pop
sbb
pushf
add
es
clc
clc
mov
imul
xor
call
dec
sub
pop
push
mov
xchg
retf
lods
mov
fistp
inc
mov
add
mov
daa
mov
sub
mov
and
pop
dec
repnz
cwde
cmp
setp
clc
adc
mov
pop
int3
adc
inc
and
xor
xchg
push
or
xchg
popf
lock
fimul
dec
je
fbstp
pop
ins
(bad)
scas
pop
pop
dec
add
pop
loopne
mov
add
ffreep
pop
xchg
inc
xchg
xchg
arpl
test
adc
jae
mov
mov
mov
jmp
xor
push
movs
and
enter
aam
jl
mov
into
stc
dec
sub
sbb
xor
leave
mov
test
or
in
clc
jno
push
aas
adc
repz
and
fs
push
mov
pop
push
pop
jmp
xchg
fistp
adc
test
inc
nop
mov
pop
clc
fisttp
retf
dec
xor
cmp
sub
jmp
in
sub
stos
inc
mov
inc
cmp
aas
out
mov
add
sub
xchg
sub
cli
xchg
mov
in
cmp
inc
test
jbe
call
adc
ret
in
test
in
xor
mov
ror
xchg
and
dec
arpl
shr
cdq
mov
(bad)
call
sub
ins
ret
inc
mov
jle
js
inc
pop
sub
inc
loope
jae
cmp
adc
arpl
jmp
pop
jnp
stos
sbb
cmp
lahf
mov
add
mov
fs
xor
jp
test
lods
pop
pop
imul
cld
fcmovnbe
sub
adc
aaa
popa
add
cmp
dec
xchg
sub
mov
dec
imul
sar
jae
mov
fdiv
repnz
sti
jge
aaa
aas
enter
call
mov
pop
xchg
jne
jbe
sub
pop
xchg
ja
stos
test
nop
adc
mov
xor
inc
push
dec
call
and
mul
cmp
cdq
sti
or
call
mov
jo
bound
std
(bad)
add
pop
push
jp
push
popf
cli
or
loope
sbb
xchg
pshufw
ret
mov
fwait
pop
xor
xchg
inc
out
popa
inc
call
ja
hlt
inc
mov
sti
mov
inc
mov
adc
sahf
xchg
adc
push
adc
shr
sub
push
add
and
stos
xlat
and
(bad)
mov
iret
je
dec
or
(bad)
out
mov
int3
ja
mov
jno
sub
fstp
js
icebp
sub
dec
inc
jmp
mov
loop
xlat
xchg
ja
and
and
or
aad
and
aam
jp
mov
outs
push
icebp
dec
cmp
imul
ins
movs
mov
and
push
out
daa
cmps
js
in
(bad)
jmp
and
add
sub
fwait
sub
enter
call
pop
cld
in
push
sub
rcl
xor
sahf
dec
xor
ror
sbb
(bad)
dec
cmp
sbb
inc
jl
push
bound
add
mov
das
inc
sbb
fadd
xchg
pop
fst
push
out
lea
les
pop
xchg
mov
ins
jae
lahf
and
cmp
mov
adc
jle
cmp
dec
ret
or
and
mov
loope
fisub
pop
cld
add
and
push
stos
je
shl
faddp
(bad)
jo
leave
ss
and
ret
fild
stos
dec
loope
inc
inc
xchg
or
ret
mov
pop
xor
(bad)
sbb
push
mov
jno
cwde
xchg
retf
nop
push
add
xchg
sub
and
or
pop
dec
ret
mov
inc
cmc
call
pop
mov
imul
mov
cmp
popa
push
stos
scas
inc
movs
xchg
test
(bad)
push
sbb
push
in
pop
sub
ins
push
pop
and
lahf
lahf
hlt
adc
aaa
jp
adc
jae
mov
cmps
push
pop
jne
sub
dec
(bad)
call
scas
xlat
mov
push
sbb
jnp
xlat
dec
mov
inc
sub
xchg
xchg
jns
fisttp
xchg
ins
pop
fist
jg
sar
cmp
inc
push
daa
jbe
and
jns
in
cmp
and
pop
cwde
in
inc
jne
out
mov
fadd
mov
dec
mov
movs
out
xor
(bad)
inc
push
jmp
mov
gs
pop
loope
adc
push
call
pop
mov
adc
push
popf
sahf
xor
jmp
std
retf
stos
mov
add
loop
and
dec
sbb
jle
test
fwait
pushf
cmc
inc
out
mov
mov
popf
rcr
push
scas
push
js
mov
pop
iret
(bad)
stos
add
repnz
rcl
and
pop
mov
call
inc
push
sti
pop
mov
out
pusha
xor
aaa
cdq
fiadd
leave
sahf
(bad)
in
into
push
aas
adc
cli
push
jl
nop
pushf
cmp
jge
mov
sbb
adc
sahf
popf
retf
and
mov
mov
or
mov
mov
aad
or
test
iret
pop
cmp
ss
out
imul
push
cmp
inc
bnd
and
test
mov
mov
loop
pop
inc
jno
aam
add
xchg
xor
mov
gs
mov
dec
push
xor
cmp
icebp
mov
mov
aas
outs
lea
push
jno
jbe
fxch
jg
push
nop
and
rcl
xchg
xchg
or
in
pop
mov
icebp
loope
and
mov
jnp
aas
push
ins
dec
pop
dec
or
xor
call
or
out
out
xchg
test
mov
fild
push
iret
jp
ret
adc
in
shr
xchg
mov
cs
imul
pop
bound
outs
das
sbb
popa
jb
jae
jmp
dec
push
add
mov
mov
cmp
ins
adc
ja
out
pop
dec
out
movs
loopne
mov
jnp
daa
ins
xor
mov
rcr
fcomp
mov
jl
or
sbb
arpl
fstp
mov
in
fcmovnb
mov
inc
clc
out
cmc
push
sub
add
cmp
sub
cmc
es
popf
fild
stos
dec
or
in
mov
int3
inc
push
xor
dec
hlt
js
leave
xor
xchg
add
sub
mov
push
mov
or
and
shr
pop
jmp
push
lods
xchg
sub
sbb
movs
scas
sbb
mov
xchg
out
mov
push
fistp
mov
adc
cmps
out
js
jae
cmps
cli
push
mov
imul
shld
(bad)
pop
push
dec
fs
jns
es
inc
data16
or
jno
xor
cld
push
pop
mov
inc
(bad)
(bad)
push
mov
in
mov
mov
push
xchg
fistp
fs
inc
push
cmps
jmp
repnz
and
mov
xor
cmp
ret
lahf
sbb
jno
xlat
fsub
pop
pop
mov
rcl
dec
jg
adc
xchg
ss
pushf
xor
ins
lea
cli
fisubr
in
imul
dec
pop
pop
data16
cmp
fadd
das
icebp
inc
pop
add
sahf
push
fs
cwde
aam
jge
sahf
scas
std
test
nop
xchg
inc
or
dec
and
sbb
cs
inc
jg
mov
mov
xchg
push
xchg
add
and
and
fsub
sbb
add
xor
cmp
mov
into
or
jno
neg
dec
xchg
sbb
adc
mov
inc
(bad)
ins
scas
adc
inc
es
sub
call
movs
cmp
clc
cmp
loopne
outs
(bad)
push
test
lods
gs
jmp
jo
in
pop
jnp
mov
xor
adc
mov
loope
cmp
or
into
adc
fbld
sub
add
rcl
adc
fld
in
or
jmp
push
ss
lods
aas
mov
inc
xchg
and
loopne
adc
inc
sbb
fldcw
pop
push
jge
out
mov
xchg
xor
mov
cs
inc
shr
dec
jp
and
xchg
sbb
repnz
fidivr
dec
mov
mov
pop
add
outs
popa
add
inc
sbb
cmp
arpl
sub
pop
cmp
sbb
ret
stos
cmp
ror
ror
sub
into
push
push
gs
(bad)
mov
aaa
cmps
pusha
ficom
adc
mov
mov
repz
xchg
sahf
cmps
ret
add
cli
addr16
add
and
cmps
adc
xchg
xor
push
pop
fnstcw
and
xor
mov
fsubr
stos
test
cld
popa
aam
retf
pop
mov
inc
mov
cmp
pop
in
sbb
pop
dec
test
jo
aam
mov
add
in
mov
popa
jb
mov
ret
cmp
xor
adc
cmc
fsubr
xchg
push
(bad)
retf
je
lods
add
push
xor
push
push
in
mov
sub
in
push
adc
div
cs
retf
inc
mov
fucom
add
neg
jg
mov
push
dec
repnz
sbb
gs
push
jno
jno
push
mov
push
shr
in
clc
adc
jmp
jecxz
push
or
cmp
pop
sub
add
jecxz
push
add
retf
mov
jo
sbb
cmps
je
out
push
push
mov
mov
lods
add
mul
pushw
or
icebp
jo
int
fadd
arpl
xor
ja
sub
loop
retf
or
sbb
sub
adc
pushf
mov
outs
mov
es
iret
push
ror
outs
test
push
(bad)
arpl
xor
dec
div
shl
push
inc
push
idiv
imul
jne
cmc
es
mov
xchg
pop
(bad)
mov
jle
fcomp
push
mov
cwde
outs
out
mov
imul
(bad)
dec
out
jae
dec
mov
push
xor
out
and
xor
fcom
sahf
sbb
dec
push
iret
fstp
jb
and
ror
dec
mov
shr
int3
ror
adc
sbb
(bad)
retf
mov
ins
bound
sub
fisubr
bound
ror
sbb
iret
(bad)
not
popw
or
test
mov
test
in
out
pusha
enter
xor
xor
stos
mov
mov
inc
cmp
addr16
pop
ss
xchg
lods
test
cmps
cmp
jecxz
mov
jno
pop
push
(bad)
mov
cmp
pop
test
dec
xlat
push
sub
push
imul
repz
push
inc
jb
jae
in
cmp
aad
mov
mov
xor
sbb
fnstcw
jp
sbb
adc
mul
jg
icebp
inc
out
loope
mov
int3
sbb
sub
lods
inc
into
aam
sbb
sbb
fdiv
inc
sub
jg
xor
inc
stc
jo
retf
cdq
fcomi
ins
xchg
ds
imul
mov
pusha
repz
mov
ss
(bad)
test
dec
std
call
adc
jg
ins
pop
push
inc
out
fcom
(bad)
pushf
add
add
fcmovb
mov
sub
sub
push
lods
clc
enter
ret
inc
aad
pusha
sbb
mov
push
stos
push
adc
and
push
shl
rol
stos
dec
dec
retf
push
xor
shr
out
xchg
xor
dec
mov
loopne
sub
cmp
sti
or
or
xor
stos
out
fisubr
sti
retf
inc
mov
shl
les
jmp
out
adc
imul
test
dec
imul
int
arpl
mov
pushf
push
dec
test
in
enter
push
aas
je
test
mov
fs
test
mov
add
adc
pop
xor
add
push
push
scas
add
xchg
into
inc
out
mov
sub
sbb
pop
out
pop
sar
retf
hlt
ret
add
out
xor
int
push
pop
xor
inc
pusha
mov
pop
push
jp
sub
sbb
or
adc
dec
mov
xchg
or
mov
and
mov
or
sbb
jl
mov
(bad)
push
mov
sbb
fwait
in
xor
scas
mov
jae
add
xor
mov
xor
xchg
inc
push
nop
mov
xchg
cmp
and
mov
sbb
lods
test
int
or
bswap
lds
cmp
div
loopne
in
arpl
fdivr
es
adc
out
leave
push
mov
neg
scas
test
div
jmp
lods
sbb
aas
in
iret
cs
pop
sbb
ins
or
sub
neg
retf
push
dec
jmp
push
scas
push
add
xchg
outs
popf
cmp
pop
inc
inc
pop
push
aaa
sti
jnp
jge
push
sbb
jmp
or
push
pushf
xor
(bad)
call
mov
xlat
sub
shl
imul
xchg
jp
mov
mov
into
test
mov
shl
mov
jae
or
inc
std
jge
das
xor
int3
lds
mov
out
pusha
and
pop
es
out
std
aam
push
mov
ret
cmp
gs
mov
xchg
ret
aaa
rol
ins
(bad)
mov
push
mov
jmp
ss
dec
push
imul
pop
push
cdq
out
xor
lods
cmps
outs
inc
mov
add
imul
mov
std
cmps
test
dec
mov
xor
ins
cdq
adc
add
int3
mov
and
icebp
call
and
pushf
retf
mov
push
das
pop
ins
out
retf
adc
push
push
arpl
aaa
aam
outs
lock
aas
ins
retf
push
mov
jnp
mov
push
push
lods
fcomp
jns
bound
jge
inc
out
out
fadd
or
xchg
xor
push
xchg
test
or
aad
cld
aad
xchg
xchg
sub
icebp
cmp
jne
dec
jl
jne
test
daa
sar
mov
mov
std
pop
mov
sar
lods
loope
lock
imul
xor
mov
in
and
jno
iret
popf
fstp
inc
aad
ret
outs
cli
fdivr
bound
jge
pop
xor
xor
stos
in
stos
jne
in
retf
call
loop
jae
jge
sub
sbb
and
jno
stos
mov
mov
inc
sub
lds
sub
(bad)
fcmove
sbb
out
jecxz
adc
push
enter
push
idiv
jns
mov
mov
movs
imul
pop
pop
pop
cld
gs
pop
pushf
hlt
popa
mov
xchg
mov
out
inc
fld
mov
outs
xor
mov
jge
sbb
fisttp
enter
add
int3
or
gs
pop
stos
xor
push
push
adc
mov
sar
and
mul
cmp
jl
adc
lods
mov
mov
pusha
aaa
mov
bound
add
hlt
jnp
es
gs
pop
aad
pushf
mov
jp
iret
retf
dec
call
sub
mov
loopne
rcr
jae
jne
adc
test
lods
pushf
inc
cdq
lds
cli
mov
daa
cwde
js
pop
test
or
call
adc
sbb
and
pop
repnz
mov
in
adc
test
push
jl
mov
loope
mov
adc
push
pop
mov
jb
pop
aad
enter
xor
test
add
pop
das
xor
fnsave
jb
outs
hlt
into
push
inc
push
pusha
jmp
and
mov
fs
sbb
dec
mov
pop
in
outs
aas
inc
mov
mov
lahf
pop
jl
xchg
sbb
push
pop
cdq
shr
adc
jmp
or
adc
inc
(bad)
je
cmc
push
jbe
ret
sbb
xor
addr16
jno
mov
idiv
jge
xor
mov
cmp
jl
stos
sub
fwait
clc
in
in
stos
retf
jbe
and
mov
daa
test
nop
addr16
and
add
mov
mov
test
dec
xchg
movs
mov
div
lock
dec
and
lahf
dec
inc
add
xchg
ins
ins
es
or
into
jns
(bad)
in
js
mov
mov
jb
add
adc
shl
mov
mov
dec
rol
push
dec
push
mov
rcl
(bad)
(bad)
fsubr
lock
dec
dec
mov
push
(bad)
clc
mov
bound
pop
jo
(bad)
in
dec
sahf
dec
nop
xchg
xor
adc
jmp
je
xor
mov
in
(bad)
xchg
repnz
inc
fld
ins
(bad)
(bad)
xor
inc
stos
sub
push
inc
or
inc
dec
or
pushf
pop
scas
add
mov
sub
out
(bad)
retf
sub
jg
movs
pushf
and
xchg
pushw
pop
jge
ds
sub
jbe
push
into
adc
je
adc
mov
in
fsub
popa
push
jg
mov
xchg
jge
inc
scas
mov
arpl
push
retf
lock
xchg
cmp
cmp
icebp
push
ret
sahf
lahf
mov
and
out
cmc
pushf
data16
fist
xor
das
cmc
jb
jbe
jo
xor
xchg
adc
shl
call
jne
js
and
in
(bad)
shl
cmp
xchg
dec
mov
mov
dec
xor
test
out
pushf
add
xchg
es
add
add
jnp
mov
jno
test
fmulp
es
jl
out
dec
inc
addr16
fisttp
cwde
icebp
and
scas
jno
pop
rol
add
cmps
and
sbb
adc
xlat
pop
jmp
retf
in
xor
sub
sub
retf
add
mov
xor
dec
pusha
push
sar
or
rcr
ficom
sub
es
ror
pop
lahf
cmp
(bad)
inc
add
int3
adc
sbb
stos
dec
imul
aaa
sti
jne
daa
cwde
sbb
mov
jmp
xchg
shr
and
and
or
inc
mov
xor
lea
ins
mov
mov
pop
mov
mov
outs
out
in
xor
fcom
jo
adc
popf
mov
das
adc
dec
icebp
add
xor
push
xor
fnstcw
ss
mov
dec
leave
and
cld
add
pusha
push
mov
push
loopne
das
dec
xchg
imul
imul
shr
in
sbb
jne
or
or
inc
(bad)
pop
push
dec
and
xchg
ds
popf
icebp
push
movs
jns
pop
ss
gs
push
push
jmp
cmp
jb
jmp
sub
vpshaw
and
shr
cmp
sahf
out
lds
ds
ror
sar
in
rol
retf
popa
repz
icebp
movs
movs
hlt
loopne
inc
ss
adc
inc
add
(bad)
xchg
sbb
es
ja
mov
addr16
and
lds
pop
xor
and
mov
leave
push
inc
mov
popf
hlt
pop
jnp
out
test
ins
dec
inc
inc
fs
jmp
cs
fwait
jo
movs
aaa
retf
stos
arpl
and
or
pop
shl
mov
cmp
mov
sti
cld
cmp
lods
mov
push
popa
mov
dec
push
xchg
ins
mov
pop
mov
inc
dec
adc
cmps
dec
mov
ja
inc
bound
imul
mov
mul
push
add
sar
fwait
cmp
mov
scas
xor
cmps
cdq
xchg
inc
lods
in
cmp
mov
mov
test
dec
or
mov
jne
sbb
sbb
mov
fcom
mov
or
int3
pop
or
retf
fild
scas
push
mov
xor
pop
scas
and
lods
mov
inc
push
test
pop
adc
pop
stos
and
addr16
cmp
pop
xor
loop
les
fwait
or
gs
pop
add
in
int3
test
or
inc
mov
inc
mov
xor
in
add
cwde
adc
ins
lods
jb
cmc
adc
push
mov
jl
mov
and
push
pop
push
add
gs
or
push
mov
pop
fmul
pop
popf
jb
dec
and
in
dec
iret
dec
jo
call
enter
in
js
ror
out
sub
inc
and
add
ror
inc
int3
pop
ins
jbe
cmp
sub
adc
mov
das
jmp
dec
xchg
popf
adc
test
sub
imul
inc
sbb
and
rcr
push
sbb
push
jg
pop
idiv
retf
xchg
pop
add
fbld
jne
pop
bound
das
test
imul
pop
adc
add
ret
add
cmp
jge
mov
adc
iretw
pop
arpl
imul
(bad)
cmc
inc
add
test
outs
cs
mov
lock
add
jle
test
clc
out
mov
push
sti
hlt
xor
inc
shl
or
push
leave
call
fsub
adc
mov
lds
cmp
stos
ds
test
sbb
retf
adc
jge
push
pushf
mov
jne
cmc
mov
adc
dec
mov
lock
sti
dec
adc
leave
das
mov
hlt
sub
jbe
fwait
add
mov
test
sub
sbb
pushf
jmp
and
mov
xchg
lea
or
mov
push
sahf
push
or
ja
mov
sbb
popf
push
xchg
jae
sub
pop
hlt
jle
sbb
in
in
(bad)
cmp
mov
cmp
pop
or
mov
mov
mov
sets
pop
dec
cld
and
ret
(bad)
push
jp
test
mov
lea
sbb
and
jnp
jbe
sub
inc
aas
or
test
mov
lods
and
enter
es
shr
mov
dec
sub
dec
push
nop
or
int
inc
fs
mov
stos
mov
pop
jmp
push
jle
dec
jmp
fadd
pop
xor
ror
(bad)
cmp
and
fstp
test
mov
scas
push
out
clc
jmp
jae
sub
mov
mov
add
mov
pushf
out
shl
sti
inc
ins
ss
add
(bad)
movs
mov
stos
jle
pop
hlt
cmps
rcr
sub
mov
lahf
push
cmps
xchg
xchg
retf
popf
jne
dec
test
cmp
aam
mov
test
ja
mov
xor
xchg
fisttp
add
cmp
nop
aaa
ins
sbb
lds
jle
pusha
push
leave
iret
inc
xchg
sub
xchg
(bad)
fbld
sahf
or
es
repnz
cmp
imul
cmp
dec
test
ins
(bad)
jl
sbb
sub
sbb
xchg
in
dec
mov
cwde
sub
inc
pop
sub
adc
loope
daa
retf
test
out
mov
push
pop
loopne
adc
aas
std
je
sub
aam
cwde
cmps
scas
lods
fs
add
push
add
push
cmp
sub
in
lock
ds
and
or
add
dec
inc
ret
mov
addr16
inc
pushf
stc
jno
lea
mov
in
mov
les
add
out
imul
cmps
push
or
fwait
pop
push
retf
out
lea
or
nop
scas
jge
and
and
jo
mov
enter
dec
jg
adc
retf
sbb
ror
nop
out
dec
push
cmp
popa
xchg
and
ss
outs
hlt
out
(bad)
movs
out
in
fs
cmp
lods
adc
in
sub
(bad)
movs
xlat
movs
jmp
cmp
inc
mov
jge
sbb
hlt
adc
iret
push
xchg
icebp
fimul
int
push
mov
cmc
sub
inc
xor
pop
push
mov
adc
retf
sbb
stc
adc
jge
xor
or
jecxz
adc
imul
dec
xor
imul
data16
test
inc
dec
inc
lea
sub
cmp
fnsave
add
xchg
aad
mov
jmp
rol
xchg
pusha
in
iret
inc
repnz
test
addr16
mov
fcomp
jmp
adc
or
retf
inc
inc
(bad)
fisubr
dec
lods
mov
hlt
pop
mov
or
pop
enter
mov
or
sub
or
scas
mov
push
xchg
push
push
mov
sbb
or
std
test
add
mov
ror
inc
test
sub
add
mov
pop
rcl
inc
test
mov
test
push
pop
push
pop
loopne
xchg
sar
push
xor
rol
xor
mov
jl
xor
or
lahf
xchg
fsub
mov
add
sbb
pushf
pop
xchg
ror
dec
xor
inc
pop
call
inc
sahf
mov
and
xor
mov
