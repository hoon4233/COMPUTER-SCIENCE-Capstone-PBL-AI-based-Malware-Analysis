inc
push
adc
je
inc
and
imul
cmp
push
mov
cmc
add
jno
jl
pop
push
fbld
dec
mov
push
cdq
inc
pop
mov
jbe
cmp
push
or
mov
or
xchg
outs
call
les
out
dec
sub
or
push
jae
xor
icebp
imul
xor
adc
aam
stc
add
push
push
gs
pop
stos
push
pushf
mov
push
lock
retf
mov
mov
gs
pop
mov
ins
mov
sbb
push
xor
xchg
mov
ins
dec
stc
and
pop
arpl
shr
mov
gs
mov
mov
sti
and
or
and
xchg
xchg
sub
push
(bad)
mov
call
pop
cwde
fbstp
xor
cmp
jb
fild
(bad)
jnp
fisubr
sub
sbb
xchg
loopne
out
ins
in
xor
cmps
sub
mov
sub
xor
pop
jb
cs
pop
cmc
in
out
lods
or
pop
clc
push
mov
stos
cdq
dec
mov
test
add
fld
fsubr
daa
lock
jl
pop
in
xor
xor
sub
xchg
push
pop
movs
fdivp
sub
xchg
xchg
xor
out
jecxz
mov
mov
and
mov
push
ret
push
jmp
sbb
and
dec
dec
pop
mov
xchg
fbstp
sbb
fs
outs
mov
pop
xchg
test
stc
(bad)
ror
mov
xchg
adc
std
mov
mov
inc
neg
js
comiss
popf
das
push
rcl
ins
je
mov
stos
jo
xchg
sub
test
add
movs
sahf
sub
inc
(bad)
dec
aam
mov
pop
movs
mov
add
je
inc
in
cmc
sub
mov
mov
sbb
jno
mov
xor
out
jb
ret
sbb
push
hlt
xor
sbb
pushf
outs
mov
or
xchg
hlt
cmp
inc
push
mov
fstp
sbb
or
push
mov
(bad)
out
fldenv
hlt
js
das
jp
retf
fadd
xor
add
mov
pop
mov
les
mov
xchg
mov
pop
dec
and
aaa
inc
pop
enter
out
inc
dec
push
in
(bad)
cmp
clc
and
ins
sar
sahf
iret
inc
shl
add
data16
fucomi
leave
sbb
out
(bad)
enter
add
loope
cmp
mov
in
xchg
jbe
cmps
aas
pop
call
test
xchg
aam
shl
inc
dec
repz
test
push
test
dec
rcl
pop
dec
clc
dec
outs
daa
nop
pop
lds
mov
bts
push
out
mov
lock
pop
enter
mov
sbb
push
ficomp
inc
stos
dec
arpl
fwait
call
push
(bad)
sbb
out
xchg
dec
push
push
pushf
sar
xlat
push
jle
push
and
adc
mov
es
jle
out
mov
dec
pop
adc
test
int3
outs
mov
cmp
(bad)
xor
or
mov
ja
icebp
mov
cld
mov
add
mov
pop
inc
mov
sub
jle
inc
data16
stos
fisttp
sbb
outs
retf
mov
rcl
push
push
sub
popa
cmps
push
call
shr
sbb
mov
cmp
(bad)
(bad)
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
jnp
out
xchg
inc
in
and
add
xchg
arpl
mov
jge
shr
cmp
scas
lods
lock
inc
jbe
scas
mov
fcomip
cmp
pop
test
pop
inc
add
xor
and
sbb
test
push
scas
cld
xchg
pop
xor
pop
xor
cmp
cwde
and
xchg
scas
addr16
lds
(bad)
sub
push
adc
mov
(bad)
dec
adc
add
fucom
daa
inc
nop
int
cwde
nop
xor
jmp
cli
mov
pop
inc
pop
imul
pop
and
mov
push
frstor
in
mov
xor
rcr
imul
outs
lds
sub
xor
xor
ud1
cs
arpl
cmp
fsub
fisub
jno
jno
or
xchg
ret
mov
imul
mov
and
push
test
(bad)
push
data16
fwait
push
in
int
mov
inc
push
retf
fld
ins
bound
mov
hlt
or
sbb
int3
aas
jge
cdq
add
inc
add
ret
sub
outs
adc
push
ret
mov
dec
data16
movs
sar
fwait
shl
sub
mov
cmp
test
sub
dec
fs
daa
mov
dec
or
sar
pop
(bad)
and
mov
cwde
adc
mov
into
pop
(bad)
jno
cdq
outs
(bad)
or
xlat
test
push
sub
out
and
and
cmp
fldcw
repz
dec
lds
add
add
cmp
xchg
push
rcl
test
jnp
and
shr
fcomi
(bad)
cmp
ins
out
shl
mov
adc
xor
je
push
pop
push
bnd
mov
popa
mov
sub
sbb
add
add
dec
mov
(bad)
cmp
push
imul
out
lods
dec
pop
jo
outs
bound
sub
rcl
sub
fistp
xor
cmovbe
int3
(bad)
test
test
imul
jae
push
sub
lds
mov
into
sar
inc
or
jo
xchg
or
pop
xor
pop
add
mov
pushf
or
inc
mov
cmc
(bad)
xchg
jp
push
out
jg
(bad)
xlat
mov
or
adc
jg
jne
loop
push
jmp
jns
pusha
fnsave
add
sbb
jecxz
xchg
xchg
mov
stos
mov
jmp
push
mov
rcr
jno
dec
adc
inc
data16
jmp
test
addr16
mov
jmp
out
test
push
pop
(bad)
jns
scas
and
add
fldenv
jnp
jne
sub
push
js
cli
pop
mov
jmp
add
movs
jbe
xor
mov
inc
mov
sar
call
frstor
add
xchg
popa
jle
xor
xchg
pop
lahf
mov
cmp
pushf
shl
stos
adc
dec
lods
cmp
call
mov
cmp
mov
and
loopne
out
mov
push
push
ins
scas
push
mov
or
push
shl
sbb
pop
loop
mov
and
in
inc
into
jb
int3
mov
movs
xor
push
and
mov
and
outs
outs
mov
push
scas
pop
xor
inc
add
fsave
pop
jp
pop
test
ret
shl
sbb
in
out
jecxz
aaa
sub
loope
test
int3
dec
fild
(bad)
lods
mov
adc
adc
xor
mov
mov
int
mov
mov
(bad)
cwde
dec
fwait
shl
xlat
jo
jecxz
fwait
int3
stos
pop
mov
sti
or
rol
pop
xor
adc
shl
test
fwait
mov
rcl
(bad)
in
dec
add
dec
ret
lods
and
jns
dec
hlt
cmp
bound
jp
jecxz
rcl
popw
jp
retf
imul
adc
jns
and
or
pop
lock
inc
add
pop
ins
mov
mov
push
xor
(bad)
iret
mov
out
mov
xor
test
call
aaa
hlt
xchg
sub
arpl
cmp
mov
icebp
and
xor
fisubr
sbb
xchg
jno
rcr
jnp
pop
sbb
mov
adc
push
xor
jl
lods
xchg
push
sar
mov
fldpi
add
cmp
and
xor
lea
adc
mov
(bad)
jle
cmp
inc
test
test
imul
cmps
mov
(bad)
ja
lds
cmp
lahf
std
shl
daa
sbb
popf
jno
loope
push
repnz
ja
pop
inc
fistp
adc
inc
mov
das
pushf
mov
call
adc
or
psubusw
sbb
sbb
adc
fcom
mov
mov
and
rol
or
mov
sub
(bad)
mov
mov
pop
push
retf
cmp
pop
jle
dec
mov
ret
mov
hlt
dec
jbe
jmp
add
cdq
(bad)
loop
in
inc
xor
inc
push
push
jb
cld
jbe
cmps
mov
xor
cmp
fsub
xchg
add
and
jb
or
icebp
mov
mov
inc
sub
dec
dec
and
ds
repnz
and
dec
ja
mov
int3
lahf
mov
xor
shl
lods
int
push
add
test
sahf
ret
add
sbb
push
stos
ficomp
movs
cmps
sbb
adc
sbb
inc
dec
fst
mov
(bad)
push
jecxz
(bad)
sti
nop
cmp
xchg
int3
jp
jae
sub
dec
add
sub
sbb
lods
retf
ror
pop
inc
pop
imul
pusha
sahf
inc
test
sbb
mov
inc
test
and
data16
mov
gs
cld
mov
pop
dec
mov
adc
mov
out
sbb
sbb
mov
xchg
adc
sbb
add
daa
cmps
(bad)
push
xchg
and
mov
xchg
std
push
(bad)
sub
js
add
in
mov
int3
mov
pushf
jp
cli
retf
or
adc
adc
mov
scas
pop
cmc
mov
xlat
mov
mov
call
pop
pop
test
lods
push
lods
add
add
push
cmp
mov
repnz
(bad)
rol
leave
mov
inc
xchg
sub
add
icebp
pop
xor
push
loopne
jo
add
aad
jmp
dec
xchg
push
mov
jge
cld
ins
into
and
in
jns
shl
add
arpl
push
test
sub
xor
outs
std
mov
and
(bad)
cmp
fst
sbb
(bad)
push
dec
(bad)
xlat
or
push
add
(bad)
mov
adc
push
cmp
jecxz
adc
dec
inc
xchg
fimul
popf
movs
sahf
rol
mov
cdq
cs
ins
in
or
not
sbb
jb
inc
add
shl
or
push
ja
in
push
in
adc
and
pop
dec
enter
xchg
les
call
call
mov
mov
(bad)
(bad)
cmp
mov
cmp
iret
mov
and
fisubr
sub
and
or
and
adc
xchg
jmp
dec
push
and
ins
xchg
pop
cli
push
cwde
stc
xor
mov
stos
addr16
pop
mov
shl
or
ffreep
sahf
(bad)
std
and
scas
pop
push
and
jno
repz
inc
(bad)
in
or
in
lahf
mov
add
push
cli
mov
test
call
test
clc
sub
ret
movs
hlt
jbe
xchg
clc
push
push
nop
inc
add
int3
int
dec
icebp
adc
ror
jle
repz
es
rol
div
in
in
fldcw
sbb
out
push
cmp
xor
dec
add
les
jo
fwait
cmp
cli
cmp
addr16
movs
add
dec
xchg
loop
vmread
call
fcmovbe
lahf
inc
jle
(bad)
cmp
in
xor
mov
adc
and
jae
scas
or
cli
cmps
cmp
das
shl
push
pop
or
add
mov
add
dec
cmp
(bad)
pusha
mov
jecxz
jecxz
jmp
adc
jmp
or
lods
retf
clc
cmp
sub
cmp
test
ins
leave
fbld
es
pop
pop
mov
movs
sub
out
dec
retf
(bad)
ds
fwait
std
sub
mov
lock
cmp
mov
pand
xchg
jl
jge
mov
mov
ret
test
js
jg
sub
jmp
lods
cs
fsubp
or
sbb
adc
(bad)
repz
cmp
xchg
xchg
enter
pop
dec
clc
or
mov
add
sar
cwde
add
or
pop
loop
outs
sbb
sahf
jb
lock
adc
pop
movs
mov
add
cmp
dec
es
jmp
inc
xchg
neg
push
pop
jl
rol
cmp
xchg
or
in
mov
push
or
aad
lods
out
mov
test
mov
add
mov
xchg
jmp
in
sahf
xchg
nop
call
push
cmp
pusha
add
pop
out
dec
retf
push
xor
adc
xchg
mov
out
call
iret
adc
leave
sbb
dec
add
fwait
cs
(bad)
pop
adc
dec
cld
scas
mov
shl
mov
mov
cdq
ret
sub
xor
das
ds
cmc
jmp
leave
fild
loop
loope
out
sub
or
ret
mov
pop
sub
mov
xor
inc
std
adc
stos
push
aas
aam
bnd
jp
or
shl
or
sub
lahf
cmp
out
shl
dec
adc
or
data16
pop
sbb
jle
cmps
(bad)
xchg
shl
lahf
or
inc
movs
inc
mov
xchg
fisttp
enter
jmp
jnp
lahf
(bad)
loop
lods
or
pop
sub
mov
or
inc
pop
js
gs
ja
adc
aas
out
xor
stc
in
test
rcr
retf
xor
xor
add
pop
push
jecxz
cld
xchg
add
adc
push
popa
sar
add
push
pop
cmps
test
popa
add
jmp
dec
adc
data16
sub
or
jne
xor
fcom
shl
fmul
adc
sbb
inc
add
or
inc
push
add
pop
pusha
test
cmp
sbb
or
or
xchg
js
mov
add
adc
add
and
clc
addps
add
adc
add
jb
add
mov
add
mov
enter
push
movs
es
push
fwait
sub
xchg
into
xchg
xor
inc
or
les
push
dec
mov
bound
add
call
add
adc
stc
mov
adc
dec
enter
mov
arpl
(bad)
bound
call
and
or
jmp
ret
cmp
dec
int3
add
dec
bound
ret
or
sub
pusha
add
add
data16
call
frstor
ja
push
jb
push
mov
sar
pop
and
push
pop
add
pop
inc
jmp
xor
inc
add
jecxz
push
hlt
add
rol
push
call
push
call
add
jnp
add
add
shl
mov
mov
call
dec
int3
mov
adc
stc
imul
shl
fsubr
mov
fmul
popf
outs
add
mov
mov
ror
mov
jmp
xor
sbb
mov
add
mov
aam
daa
ret
inc
(bad)
mov
pop
add
mov
add
mov
clc
cmp
imul
add
sbb
xchg
add
add
adc
sub
call
call
add
push
push
cld
pop
mov
add
pusha
add
test
test
call
call
push
rol
ror
test
(bad)
jle
xchg
and
nop
xchg
mov
inc
add
pop
add
(bad)
jge
or
ret
mov
or
push
je
mov
adc
add
or
xor
or
add
inc
jge
add
xchg
adc
push
in
aaa
xor
add
arpl
(bad)
pop
xchg
mov
loope
or
and
and
adc
or
in
push
pusha
retf
add
adc
add
xor
rol
test
call
cmp
add
add
pusha
mov
add
les
add
jmp
movups
pop
push
je
add
sub
(bad)
out
or
jmp
loope
imul
and
xchg
in
sub
add
addr16
push
fstp
inc
sti
nop
stc
ror
pushf
(bad)
and
add
cmp
add
xor
push
push
xchg
and
add
lea
pop
add
inc
pop
jge
and
test
add
cld
mov
pop
or
and
add
pushf
sub
push
ret
rol
adc
or
mov
mov
out
mov
sub
adc
call
jns
sbb
and
xor
lods
add
daa
xor
jmp
add
sbb
or
mov
test
sbb
or
sbb
pop
and
dec
jbe
mov
push
adc
adc
push
push
pop
mov
sub
push
add
mov
mov
dec
sbb
or
cmp
inc
dec
in
cli
and
sbb
mov
sbb
or
add
mov
ret
pop
ins
psubsb
cmps
add
mov
rol
push
push
add
cmp
sub
mov
add
sub
fld
pop
sub
es
add
inc
push
add
jne
call
lods
call
add
xor
cmp
inc
sub
rcr
push
scas
pushf
push
sbb
sub
pusha
add
add
push
mov
jmp
loop
add
loop
addr16
sub
inc
clc
add
push
loop
push
in
add
push
or
or
sub
mov
push
or
jbe
mov
inc
mov
call
add
xchg
and
sub
in
pop
adc
inc
and
jae
mov
loop
lea
pushf
add
adc
xchg
mov
push
push
adc
jne
mov
add
dec
loopne
add
pusha
dec
mov
(bad)
adc
add
add
outs
clc
mov
call
jne
fadd
add
mov
call
add
add
daa
jno
out
push
adc
jge
add
ja
cmp
mov
add
sbb
arpl
or
fwait
xchg
rol
inc
push
ret
add
jp
aas
xor
imul
call
fild
sbb
scas
sbb
adc
mov
leave
xor
adc
add
adc
sub
inc
add
sub
pusha
rcr
(bad)
jmp
(bad)
call
mov
in
je
and
fld
rol
dec
add
int3
mov
cmc
cdq
bound
adc
in
or
out
das
push
inc
inc
cdq
sub
mov
pusha
pand
add
inc
or
pop
mov
ret
loopne
adc
jge
inc
pop
add
in
and
out
mov
add
pop
or
jp
(bad)
add
mov
push
add
inc
mov
popa
xchg
add
dec
loopne
(bad)
mov
inc
add
sub
sbb
adc
inc
loope
data16
adc
mov
inc
push
push
add
add
adc
es
ror
(bad)
int3
push
adc
mov
call
std
adc
pusha
jbe
enter
jne
or
push
pop
xor
add
je
add
cmp
add
or
sub
enter
sub
mov
and
shl
jecxz
add
call
pop
add
cld
std
mov
sbb
inc
mov
add
add
xor
int3
dec
cmp
mov
imul
and
aam
inc
rol
sub
jno
and
xchg
adc
add
jne
mov
rol
aaa
mov
inc
push
mov
add
inc
fsubr
mov
div
jmp
mov
jg
adc
and
jg
test
inc
or
inc
push
gs
or
push
shr
push
(bad)
(bad)
movs
add
mov
mov
jge
nop
and
rcr
adc
inc
add
inc
xchg
mov
push
xor
sbb
cmp
add
shr
mov
pusha
jp
dec
jne
sbb
mov
mov
sbb
inc
(bad)
cld
(bad)
loopne
sub
or
pop
push
mov
push
cmp
jne
movzx
imul
mov
test
jne
mov
movzx
xor
div
add
mov
jne
mov
xor
mov
div
mov
mov
xor
leave
ret
mov
push
push
push
movzx
push
xor
pop
div
mov
mov
sub
call
mov
test
je
call
mov
and
jmp
mov
xor
mov
div
movzx
mov
imul
xor
xor
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
call
push
call
call
pop
ret
ja
mov
sbb
fmulp
pop
jo
scas
enter
outs
stos
jbe
inc
push
mov
sub
push
add
ja
mov
sbb
out
gs
or
sbb
xor
dec
sub
shr
call
jg
jmp
and
sbb
mov
cli
test
inc
push
mov
sub
push
push
mov
push
mov
mov
mov
mov
xor
add
mov
push
call
pop
push
pop
mov
or
xor
not
lea
mov
push
call
neg
sbb
and
add
pop
mov
push
pop
xor
xor
lea
mov
lea
mov
or
and
push
pop
mov
dec
jne
push
pop
push
call
push
call
push
mov
call
add
push
call
add
dec
jne
push
push
xor
push
call
push
push
call
push
call
call
mov
call
mov
sub
mov
and
xor
imul
mov
div
mov
mov
mov
cmp
jne
mov
mov
xor
div
mov
imul
mov
mov
mov
mov
or
xor
not
push
pop
mov
mov
movzx
sub
jne
mov
sub
imul
mov
cmp
jne
mov
mov
xor
div
mov
mov
mov
lea
movzx
xor
sub
xor
add
add
mov
mov
movzx
sub
mov
jne
lea
xor
push
pop
sub
movzx
imul
mov
movzx
add
or
xor
mov
mov
lea
mov
movzx
xor
imul
test
jne
mov
xor
div
mov
movzx
sub
je
xor
push
call
pop
test
jne
call
mov
call
shr
mov
mov
cmp
jne
mov
xor
mov
div
lea
push
push
push
mov
mov
call
push
mov
call
cmp
jne
cmp
jne
push
call
pop
test
je
push
call
mov
or
call
and
imul
xor
mov
mov
mov
mov
lea
push
call
pop
push
pop
push
push
push
call
dec
jne
lea
push
mov
call
pop
push
pop
push
push
push
call
dec
jne
lea
push
call
inc
cmp
pop
jg
mov
sub
mov
sub
add
cmp
ja
mov
add
mov
imul
mov
mov
sub
mov
lea
mov
lea
or
mov
mov
mov
cmp
jne
mov
movzx
xor
div
mov
mov
sub
mov
jmp
mov
cmp
jne
mov
xor
mov
div
mov
cmp
jne
mov
push
pop
xor
div
push
add
imul
mov
jmp
mov
movzx
call
and
sub
mov
mov
mov
sub
add
mov
movzx
imul
mov
movzx
add
or
mov
sub
movzx
and
imul
or
and
and
mov
mov
movzx
mov
mov
mov
test
jne
mov
xor
mov
div
mov
test
jne
mov
call
xor
div
push
mov
mov
and
or
call
or
pop
mov
add
movzx
xor
lea
mov
mov
mov
or
shr
mov
sub
sub
xor
mov
div
mov
mov
test
jne
mov
xor
mov
div
movzx
inc
imul
add
mov
and
xor
add
or
mov
sub
mov
jne
mov
xor
mov
div
mov
test
jne
mov
call
xor
and
div
xor
mov
mov
mov
movzx
div
mov
and
sub
xor
mov
jne
mov
xor
mov
div
inc
cmp
mov
jb
mov
mov
test
jne
mov
mov
call
and
xor
div
mov
call
mov
and
add
add
xor
mov
cmp
jne
mov
xor
div
mov
mov
mov
mov
mov
mov
mov
sub
or
push
pop
lea
mov
push
mov
call
push
push
push
call
call
call
push
jmp
xor
jmp
push
mov
push
push
dec
leave
mov
xlat
sub
sub
repz
inc
push
pop
xor
and
int
cs
or
out
push
pop
xor
out
shl
dec
mov
loopne
push
add
in
xor
xchg
sti
sbb
cli
push
xchg
shr
mov
or
mov
xor
xor
retf
jb
out
test
cmp
repnz
add
ror
popa
out
xor
inc
mov
int
fistp
push
fs
inc
clc
fild
xor
js
ficomp
xchg
mov
leave
and
nop
add
das
out
lock
sbb
test
int3
int3
int3
int3
int3
int3
int3
lds
in
sbb
aas
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
jle
inc
jecxz
and
ins
xor
dec
ror
xor
dec
test
add
shl
or
lods
xor
dec
int
or
and
mov
les
add
out
jle
or
mov
int
popf
add
sbb
add
shl
stos
or
push
add
add
(bad)
xchg
lock
push
jb
mov
pop
xor
inc
add
jecxz
test
int
adc
loopne
mov
add
or
mov
mov
add
jmp
sti
add
scas
hlt
sbb
add
stos
inc
pmulhuw
aam
add
and
xor
bound
inc
sub
nop
icebp
(bad)
jle
inc
call
jge
loopne
push
jmp
inc
add
(bad)
mov
or
cmova
test
jmp
mov
push
loopne
call
nop
ret
xchg
rol
or
cmp
cwde
repnz
lock
pop
add
cmp
jmp
add
daa
lods
add
cmp
scas
call
jmp
xchg
mov
pusha
pusha
mov
lds
adc
adc
and
ret
xchg
ins
enter
call
add
sbb
inc
test
add
sar
push
mov
pop
xor
add
push
add
lock
push
jo
cmp
sbb
add
push
add
mov
adc
pop
shl
add
inc
(bad)
sldt
xor
retf
addr16
in
jae
sbb
ins
mov
fwait
repnz
sub
rcr
loopne
or
fstp
popa
push
sbb
inc
hlt
mov
push
cmp
adc
jne
dec
or
push
mov
test
and
add
mov
mov
stos
loopne
or
aaa
mov
pop
add
aas
cmps
push
sbb
fimul
and
inc
push
or
add
aas
clc
jne
in
(bad)
jmp
movs
and
fadd
ret
add
pop
ss
(bad)
mov
and
mov
push
repnz
enter
in
or
fs
mov
dec
arpl
pusha
es
sub
pop
lods
retf
gs
sub
call
push
add
add
(bad)
out
and
enter
sar
adc
lock
fs
sub
jae
popf
shl
jmp
shl
mov
add
add
imul
ror
add
mov
arpl
out
mov
mov
add
cmp
add
add
push
lock
jo
or
cmp
sub
call
jmp
add
jle
ror
sub
pop
add
pusha
(bad)
data16
test
jge
pusha
movs
xor
mov
into
ss
or
inc
and
gs
into
and
xor
popf
and
adc
add
pop
sbb
push
call
imul
nop
sahf
add
add
mov
push
jecxz
shr
test
mov
inc
jp
pop
inc
retf
ret
sbb
test
add
xor
push
mov
ja
scas
jmp
or
adc
outs
add
jg
(bad)
jmp
adc
add
cwde
sbb
or
test
or
sti
or
add
mov
call
mov
loopne
mov
fild
sbb
jno
(bad)
add
jne
add
sbb
pop
inc
retf
dec
sub
outs
call
add
push
test
add
cmp
popa
pop
pusha
mov
clc
in
and
push
ds
cs
add
lea
cld
or
call
or
aaa
into
add
dec
test
mov
pop
and
push
mov
push
sub
mov
add
clc
sub
mov
pop
sti
mov
sbb
push
mov
ret
add
inc
call
cmovo
push
mov
hlt
adc
lea
fcom
aam
lock
and
inc
adc
push
jbe
adc
jae
mov
and
pop
add
add
call
ror
in
add
aas
loope
push
mov
test
mov
add
call
add
inc
push
sbb
push
nop
fs
dec
inc
jb
sbb
add
cmp
leave
mov
adc
lea
movs
cmp
inc
mov
push
or
xor
test
jmp
into
xor
mov
jb
inc
mov
xor
push
push
mov
xlat
and
sbb
test
add
or
pop
add
leave
movs
dec
fsub
lds
xchg
retf
mov
adc
ret
mov
push
adc
push
mov
inc
inc
add
mov
mov
add
and
add
add
imul
push
mov
cmps
add
xor
pop
jmp
jne
add
mov
(bad)
push
or
arpl
call
add
add
add
mov
rcr
xchg
add
pop
js
aam
pop
fs
ror
add
rcl
mov
jmp
add
dec
add
repnz
call
push
inc
jl
add
push
cmp
inc
inc
and
inc
inc
sub
jne
add
mov
dec
add
add
mov
or
add
test
add
adc
sub
dec
fdiv
inc
fcom
loop
inc
dec
push
add
xor
add
push
add
sti
ins
lods
inc
inc
and
je
mov
mov
jge
mov
je
pop
outs
loope
call
dec
xcrypt-cbc
cmps
adc
push
inc
lock
dec
and
jecxz
data16
inc
mov
pop
cmp
xchg
mov
shl
add
xchg
lock
dec
jno
sub
or
call
add
sbb
dec
adc
pop
out
cmp
xchg
pop
call
jge
or
add
shl
add
jo
mov
jp
int3
inc
mov
loopne
add
leave
push
adc
cmp
and
xor
or
rcl
in
adc
add
mov
add
lahf
inc
stc
add
test
add
and
adc
add
arpl
int3
loop
cmp
mov
xchg
fadd
jae
out
(bad)
fadd
in
xlat
xchg
aam
hlt
gs
and
and
ja
push
and
dec
mov
call
inc
and
pop
jno
and
sbb
punpckhbw
sub
add
mov
jge
or
sub
loop
add
call
(bad)
shr
sbb
mov
push
call
lds
mov
stos
cmp
add
(bad)
in
push
and
add
pop
inc
popf
inc
fcom
movs
cs
sub
add
(bad)
test
imul
or
fs
mov
mov
xor
add
add
loopne
inc
inc
push
call
and
add
rol
add
fcmovu
adc
or
jmp
add
mov
inc
add
enter
call
add
icebp
movs
clc
pusha
(bad)
call
or
loopne
cmp
cmp
xor
pop
clc
jne
sbb
fmul
push
test
or
(bad)
add
inc
inc
sbb
test
mov
ret
arpl
cmps
or
dec
call
push
repnz
mov
nop
mov
loopne
ret
rcl
mov
inc
nop
inc
sub
pop
test
sub
adc
leave
aas
stc
sub
test
mov
mov
add
and
and
(bad)
movs
mov
cmp
and
adc
repnz
mov
clc
stos
add
hlt
sar
lock
jns
jmp
cwde
dec
dec
push
fs
push
mov
movs
xchg
sub
add
repz
add
cmp
call
leave
jl
add
inc
dec
add
xchg
sub
arpl
loopne
mov
xchg
fld
xchg
add
lock
ds
ins
mov
rcr
jge
add
jl
add
call
inc
push
sbb
mov
add
jmp
pop
xchg
call
sub
jecxz
mov
stos
inc
pop
lock
sub
mov
fsub
mov
sub
pop
mov
add
pop
xchg
call
inc
popa
add
push
mov
add
fsubr
jecxz
add
dec
rcr
pop
sub
pop
pop
add
add
jmp
rol
add
add
test
or
mov
and
sub
mov
cwde
push
add
pop
xchg
add
popf
push
nop
stos
push
out
ja
add
add
shl
mov
mov
cmp
add
sbb
scas
and
add
cmps
out
mov
mov
or
outs
lock
aam
fld
mov
enter
retf
fsub
shl
add
daa
add
add
add
call
sub
add
inc
add
or
and
adc
ror
shld
ror
push
sub
push
add
hlt
call
mov
and
cmp
mov
add
nop
add
adc
xchg
add
sbb
pop
pop
je
inc
adc
nop
add
arpl
add
mov
call
adc
movs
bound
inc
add
add
jmp
dec
pop
mov
dec
adc
mov
pop
and
pop
push
add
xor
loopne
push
sub
shr
pusha
push
popa
xchg
adc
add
or
mov
push
je
fidiv
add
jmp
js
fidiv
push
cmp
add
add
test
pop
and
add
movnti
les
and
dec
add
mov
rcr
push
and
mov
add
(bad)
or
(bad)
mov
xor
inc
push
push
(bad)
sbb
je
pop
add
sub
call
adc
add
pop
mov
add
in
fild
sti
push
add
inc
call
mov
add
cmp
sub
jb
test
ss
sbb
out
xor
jns
add
adc
add
les
mov
or
jne
mov
(bad)
call
nop
xchg
push
ret
popf
dec
popa
rcr
popf
push
(bad)
cmps
call
and
adc
pusha
pop
and
pop
and
add
push
mov
inc
loope
jae
mov
bound
sub
hlt
inc
mov
repnz
pop
xor
cmc
shl
push
jmp
xor
out
call
add
add
add
add
adc
or
call
rcr
data16
inc
(bad)
out
and
dec
iret
add
sbb
add
cmp
xchg
std
loope
mov
dec
or
push
pmaddwd
(bad)
call
fsub
sbb
addr16
jl
pop
lock
xchg
push
cmp
(bad)
nop
add
inc
mov
pop
rol
lea
mov
xor
push
adc
or
inc
add
mov
movntq
test
add
add
lea
sbb
add
out
(bad)
cmp
push
xor
mov
fs
stc
les
inc
mov
cwde
test
mov
fmul
sub
sbb
daa
sub
and
iret
or
xor
scas
and
mov
call
test
pusha
test
mov
call
add
movs
nop
rol
cmp
mov
xor
dec
inc
add
cmp
lock
test
sub
int
mov
and
or
add
mov
mov
adc
mov
adc
les
add
add
mov
pop
xor
inc
dec
add
mov
sbb
or
add
xor
pop
and
cmp
aad
lock
pop
add
pop
push
and
shl
fld
sub
add
dec
imul
and
sub
mov
push
aas
fsub
dec
fild
leave
idiv
mov
add
inc
pop
cmp
sub
lods
xchg
mov
in
xor
or
add
(bad)
mov
mov
cld
xor
inc
inc
pop
or
out
adc
sub
test
add
inc
push
lds
add
(bad)
enter
or
mov
jo
mov
call
cmp
inc
jo
add
xor
hlt
enter
lds
call
lahf
mov
and
add
ins
mov
push
and
inc
push
addr16
or
call
sbb
je
hlt
shr
icebp
add
call
jno
add
inc
cmp
push
icebp
test
call
jmp
mov
add
inc
mov
test
and
mov
add
inc
add
ins
pusha
popa
scas
inc
jno
or
test
test
mov
icebp
ret
fiadd
sbb
jmp
add
xor
jge
xchg
dec
push
xor
pusha
(bad)
jno
and
loopne
adc
inc
out
shr
mov
leave
and
add
bound
mov
jne
and
ret
xor
mov
mov
scas
retf
inc
xor
add
adc
fwait
inc
xchg
pushf
add
call
rol
shr
cmp
and
rol
push
add
shl
add
xchg
test
add
pusha
and
pop
add
mov
mov
mov
and
add
or
push
sub
mov
inc
push
or
add
repnz
sbb
mov
sub
push
lea
add
dec
adc
and
add
test
call
call
aam
sbb
cmp
and
das
lock
inc
add
inc
jecxz
push
add
addr16
cld
add
add
test
mov
add
ins
push
push
push
fsubr
jp
mov
add
ret
call
arpl
cdq
inc
adc
outs
lods
add
std
inc
inc
and
(bad)
pop
mov
mov
cmp
aaa
ror
mov
mov
or
jne
movs
mov
mov
mov
mov
jne
inc
lock
std
mov
add
out
int3
cmovo
pop
inc
fiadd
inc
pop
jae
or
xchg
pusha
inc
loopne
loopne
or
jb
push
(bad)
mov
retf
add
lock
mov
add
sar
int3
push
inc
add
add
add
and
inc
xchg
aam
aaa
in
dec
add
add
push
fs
test
les
mov
dec
icebp
or
pusha
or
pop
rol
push
xor
call
push
rol
push
pop
sbb
inc
fnstenv
sbb
(bad)
movzx
sbb
add
add
mov
cmps
dec
mov
add
sub
push
inc
adc
add
sub
dec
pop
dec
mov
shl
pushf
(bad)
daa
dec
push
add
push
call
jns
cmp
push
sbb
shr
or
in
(bad)
dec
add
dec
add
pusha
add
cmp
sbb
pop
dec
dec
add
and
jmp
test
add
rol
rol
add
dec
dec
loopne
push
adc
or
mov
dec
add
or
(bad)
jge
add
dec
jl
push
add
dec
test
push
cmp
sbb
lar
dec
add
fs
and
add
xor
add
call
push
push
push
add
adc
daa
leave
enter
xor
and
add
outs
and
mov
rol
add
cmp
sub
mov
test
inc
add
pusha
mov
test
pop
xchg
or
add
add
adc
pop
add
lea
mov
add
loop
mov
push
push
xlat
add
xchg
sbb
ret
add
push
add
jmp
test
add
sbb
add
inc
xor
dec
movs
dec
xchg
(bad)
xor
shl
push
mov
inc
test
add
fimul
inc
mov
adc
mov
sub
fsub
dec
push
cwde
stos
add
and
mov
add
inc
cmps
pop
xor
or
aas
add
outs
add
push
add
into
xchg
add
ins
rcr
cmp
adc
imul
add
push
push
add
push
retf
iret
push
sub
fwait
ror
jbe
ja
cmp
push
enter
mov
push
mov
push
adc
push
fiadd
inc
test
jbe
or
xor
pop
add
push
push
outs
add
dec
cmp
(bad)
call
pop
pop
mov
cmps
mov
fcomp
jne
neg
push
inc
mov
cmp
mov
cmp
add
add
adc
push
add
add
pop
add
in
dec
std
cmp
ret
sbb
sbb
pop
call
xor
inc
clc
in
cmp
test
or
add
adc
add
test
inc
(bad)
jbe
mov
lock
push
push
adc
std
push
adc
mov
or
shl
jmp
inc
adc
ret
adc
imul
rcl
test
call
lea
push
lea
cmc
and
push
xor
je
call
jmp
lock
add
leave
xor
or
or
std
call
shr
and
fmul
adc
call
add
dec
popf
mov
add
inc
inc
mov
lock
mov
push
call
jg
push
call
mov
in
or
or
or
loopne
add
clc
push
jl
(bad)
fcomi
pop
out
test
or
inc
cmp
push
ins
sbb
gs
fadd
cmp
and
push
clc
leave
rol
inc
push
or
pop
mov
pop
add
(bad)
cmp
and
add
mov
mov
sbb
pushfw
aaa
add
pop
dec
jle
imul
xor
adc
rdtsc
jge
call
inc
(bad)
in
add
mov
mov
jb
cmps
(bad)
repz
add
add
xchg
add
xor
call
mov
js
lea
lock
mov
dec
or
pop
xor
mov
sbb
jmp
push
gs
inc
adc
adc
add
add
cmp
repz
pop
cli
xor
mov
push
verr
fnstcw
and
cdq
(bad)
sti
jge
inc
cmp
and
bound
call
push
add
inc
xor
cwde
inc
adc
sub
call
sub
push
add
lds
push
cmp
add
sbb
add
(bad)
add
adc
xor
push
add
inc
test
push
jg
daa
ds
sub
cmp
add
add
outs
dec
popa
jmp
mov
aam
test
or
js
pusha
(bad)
mov
mov
push
test
jge
cmp
mov
add
ret
mov
mov
xor
cmps
mov
and
add
dec
sub
lock
pop
fcomp
push
call
mov
mov
dec
std
sub
stos
add
add
add
mov
mov
add
test
loopne
adc
shl
call
sub
add
xor
call
mov
mov
sub
xor
xor
add
adc
jl
ret
push
ror
push
inc
loop
push
cmc
cmp
xlat
pop
adc
fs
xchg
add
add
add
adc
add
add
xlat
inc
jle
call
pop
xchg
push
adc
push
shl
pusha
ror
loopne
pushw
xchg
jle
pop
les
jmp
ltr
shr
push
push
sub
mov
push
xchg
adc
mov
dec
fsub
out
dec
bound
pop
sbb
pop
inc
call
arpl
mov
xchg
in
add
sbb
jne
cdq
call
and
repnz
pusha
adc
clc
inc
cmp
push
adc
test
mov
rol
call
inc
(bad)
xor
unpckhps
add
in
ds
std
adc
mov
jne
jmp
sbb
jp
add
inc
dec
(bad)
cmp
adc
aad
sub
jmp
add
pop
sbb
popf
mov
inc
sbb
pop
mov
daa
inc
mov
out
stc
push
test
add
clc
or
push
jp
or
lahf
les
imul
and
and
or
call
add
sbb
adc
sub
loopne
inc
add
mov
xchg
call
pushf
or
push
dec
int
scas
js
ror
iret
or
adc
cmp
mov
jmp
lea
adc
or
mov
adc
jae
add
call
add
retf
and
rcl
mov
imul
add
call
xor
add
add
dec
mov
jns
mov
jmp
(bad)
adc
jns
mov
lods
jge
inc
inc
dec
add
xor
jecxz
call
add
and
push
mov
and
sub
cmp
inc
mov
jp
or
sub
adc
xchg
test
and
mov
pop
add
call
fwait
in
push
add
fstp
cmp
mov
add
xor
and
fisub
je
loope
add
add
(bad)
movs
jae
jae
call
call
xchg
add
scas
sub
xbegin
mov
call
xor
jne
or
cmp
jmp
shl
jno
and
mov
and
imul
mov
inc
bound
popa
test
inc
je
inc
mov
add
push
rol
mov
ins
adc
ret
push
test
call
pop
add
add
jne
cmp
and
push
add
loopne
adc
jmp
jne
add
cmps
add
push
into
inc
sbb
aam
add
call
add
add
jo
jge
call
push
gs
pop
add
or
add
es
add
add
shl
cmp
cmp
add
add
add
fs
arpl
add
add
loope
call
xchg
dec
add
xchg
movs
mov
ds
xchg
add
jecxz
xor
add
add
mov
inc
test
xor
mov
movs
add
loopne
icebp
or
fidiv
add
inc
(bad)
jmp
and
fs
mov
pop
inc
mov
fadd
loopne
ins
add
add
xor
lock
or
fs
hlt
test
mov
test
dec
jecxz
pop
add
dec
pop
mov
bound
and
mov
sub
add
add
add
mov
test
add
or
mov
add
lea
xchg
and
bnd
aam
mov
call
push
or
mov
adc
dec
adc
iret
lock
xor
add
dec
push
and
test
popa
outs
inc
sbb
mov
add
mov
mov
lea
popf
inc
mov
pushf
dec
add
mov
or
add
adc
cwde
bound
mov
cli
xchg
inc
sbb
adc
mov
add
mov
adc
shl
mov
arpl
push
ret
mov
push
and
rcl
dec
add
mov
pop
or
mov
add
cmp
jne
jne
shl
and
pop
inc
jge
loopne
dec
loope
pop
add
and
add
xchg
sbb
push
cwde
cmp
and
add
or
dec
call
pusha
mov
ret
inc
shl
and
loopne
xchg
inc
fldenv
jo
mov
xor
rol
add
add
or
add
xor
or
je
call
or
push
sub
add
rcr
push
les
mov
add
jne
fs
call
jno
or
nop
pop
mov
mov
mov
push
fild
pop
mov
fisttp
xor
pop
mov
add
xor
add
xor
add
rcr
and
call
add
jnp
cmp
push
das
add
sub
test
push
add
push
jmp
pop
or
shl
adc
clc
xor
ins
pop
in
add
and
push
mov
inc
stc
mov
add
and
push
add
add
loopne
mul
pusha
jecxz
dec
pop
mov
pop
xchg
xor
cwde
add
ror
sub
shr
adc
ror
sbb
adc
pop
add
shl
rol
test
loopne
pop
add
(bad)
je
imul
shl
jmp
adc
inc
mov
inc
(bad)
lea
or
fadd
add
ins
adc
add
push
sub
call
dec
fidivr
inc
and
mov
pusha
add
aaa
popf
inc
add
shl
push
mov
and
dec
fsubr
adc
rcl
add
mov
loopne
xor
sar
sbb
or
call
push
xor
mov
hlt
je
push
lock
fild
and
push
adc
scas
rol
dec
add
inc
jmp
add
jp
sub
inc
out
pop
add
call
add
in
dec
sbb
call
jge
pop
das
mov
and
jle
add
dec
inc
aam
clc
shr
add
loope
add
call
pop
and
lea
or
xchg
ss
push
xchg
cwde
mov
mov
jno
pop
add
sbb
add
inc
(bad)
ret
inc
inc
jo
jne
inc
pop
repz
rol
inc
enter
inc
hlt
mov
add
jo
add
aaa
sub
adc
inc
xchg
mov
pop
add
and
and
or
mov
cmp
inc
push
adc
fdivr
adc
fld
add
rol
loopne
popa
or
push
sub
or
in
add
adc
sub
call
fadd
movs
or
add
push
add
xor
movs
fldcw
test
xchg
add
lock
dec
or
adc
inc
xchg
mov
and
add
xor
into
arpl
shl
dec
sbb
mov
sbb
inc
jo
cmps
add
add
pop
call
clc
mov
add
test
pop
add
add
push
add
rol
adc
jge
loop
(bad)
leave
sbb
mov
cli
jmp
mov
push
xchg
pop
dec
lock
test
loopne
mov
push
xchg
call
cmp
inc
xchg
mov
dec
add
add
pop
jae
mov
add
push
add
mov
hlt
mov
icebp
test
or
aam
pusha
xor
dec
mov
imul
cmp
inc
ja
nop
inc
sbb
add
jmp
add
xchg
or
push
ror
dec
mov
sub
movs
ret
test
hlt
pop
je
or
xor
adc
push
adc
rcl
add
pop
inc
pusha
mov
pcmpeqd
cld
pop
rcr
add
push
push
mov
push
add
sbb
push
inc
add
inc
mov
rol
sub
sub
dec
push
mov
fimul
fidiv
test
in
xchg
add
mov
mov
in
cwde
inc
add
add
or
pusha
sbb
sbb
outs
std
aaa
push
call
add
push
push
mov
add
hlt
mov
in
mov
jmp
nop
out
lea
mov
cmp
inc
dec
add
xor
cmps
fs
jne
nop
ror
add
rol
mov
add
jge
inc
inc
lds
loope
call
rol
adc
add
dec
lea
mov
cmp
add
xor
jne
loope
add
(bad)
xor
add
shl
pop
lea
aaa
lea
ja
nop
inc
push
push
push
add
mov
push
inc
inc
mov
mov
push
push
dec
add
add
add
pusha
sub
jmp
pop
dec
ror
pop
push
pop
add
rcr
adc
push
or
rcl
add
xchg
(bad)
call
or
inc
mov
add
xor
xlat
fs
and
inc
or
call
fsub
xor
pop
rol
add
push
mov
ror
mov
into
dec
callw
movs
push
xor
les
inc
adc
or
sub
jl
bound
adc
add
pop
inc
add
dec
cmp
inc
add
push
call
dec
xchg
cdq
mov
shl
jmp
(bad)
xchg
aas
fcmovnu
rol
pop
xor
data16
bound
sbb
add
repz
add
pusha
(bad)
adc
adc
les
mov
es
int
and
clc
xchg
add
fsub
pop
adc
add
add
rol
pusha
pop
inc
dec
add
ret
add
add
xchg
lea
cld
rcl
repnz
sbb
fs
add
loopne
or
xchg
dec
mov
mov
dec
xor
pop
in
mov
push
inc
int3
(bad)
sub
lea
add
mov
mov
sbb
jne
rcl
je
and
jg
test
cs
jmp
cmp
loopne
jnp
add
sbb
add
call
add
dec
shl
sbb
daa
inc
add
add
and
rol
dec
jae
loopne
js
rol
cmps
push
push
mov
cmovo
(bad)
sub
mov
inc
and
add
add
in
loopne
jg
add
push
lock
push
add
mov
mov
add
and
and
pop
push
or
sub
call
dec
xor
shl
je
add
call
add
fnstsw
cmp
call
add
mov
add
pusha
rol
fld
add
ret
dec
jl
call
call
daa
ss
add
mov
dec
scas
test
inc
add
dec
and
adc
inc
(bad)
into
sbb
mov
mov
fdivr
xor
rol
add
mov
cmp
or
add
dec
arpl
add
nop
adc
dec
adc
add
add
add
adc
pop
mov
add
cmp
pop
add
dec
sub
inc
dec
test
(bad)
nop
mov
dec
shl
or
in
add
or
sub
push
dec
mov
mov
leave
test
cmp
add
(bad)
dec
ret
ins
xor
add
jnp
add
(bad)
mov
sti
or
call
add
or
test
cld
mov
rol
(bad)
jecxz
add
shr
add
add
add
push
mov
cmp
shl
add
add
xchg
out
add
add
or
add
cmp
dec
cmps
mov
push
mov
mov
xor
jo
mov
adc
sahf
add
sqrtps
shl
add
add
push
push
and
shl
add
add
add
dec
and
bound
(bad)
jo
call
jne
add
daa
cli
test
sub
pop
adc
mov
mov
lea
bound
xchg
inc
xor
(bad)
xor
push
pop
mov
add
pop
add
push
sbb
mov
call
sbb
in
cmp
nop
inc
and
mov
sbb
jne
popa
fbld
dec
add
mov
movs
xchg
jle
dec
inc
add
add
rol
add
mov
femms
dec
mov
enter
sub
sbb
adc
inc
adc
hlt
add
rol
mov
adc
add
nop
mov
in
xor
loope
mov
mov
fs
add
inc
inc
xor
add
add
mov
pop
add
sub
sub
add
mov
call
loope
add
mov
pusha
add
dec
jmp
sub
test
pop
cmp
add
and
es
and
add
fiadd
jp
add
mov
sbb
inc
mov
out
add
mov
add
jo
fisub
xor
add
sar
add
add
xor
fadd
jno
add
sbb
or
inc
dec
add
push
add
call
add
add
mov
test
or
mov
xor
inc
xchg
mov
shr
or
add
cdq
add
jecxz
xchg
cwde
call
test
test
mov
shr
inc
fadd
or
mov
cmp
or
jne
jo
or
pusha
cmp
punpckhbw
add
inc
clc
add
pusha
ins
call
add
(bad)
fiadd
xor
sub
adc
mov
xor
adc
mov
shl
cmp
push
sbb
push
add
js
jle
dec
add
jne
fisttp
add
call
pop
loop
add
add
or
jne
pop
sbb
imul
pop
jnp
pop
inc
ja
inc
add
movs
mov
mov
mov
sub
pushf
inc
add
data16
dec
add
inc
add
cmp
test
sbb
pop
mov
lea
jge
push
enter
mov
mov
cmp
mov
nop
call
inc
jge
punpckhbw
aam
iret
push
add
adc
cs
shl
rol
bound
adc
mov
out
mov
dec
add
mov
xor
je
je
sub
push
in
bound
hlt
pop
xor
adc
xchg
add
shl
and
loope
inc
xchg
sbb
into
xchg
mov
cmp
add
je
add
mov
push
mov
pop
dec
call
mov
push
pop
inc
pop
dec
dec
add
mov
dec
mov
or
(bad)
xchg
nop
adc
pop
push
push
ret
mov
inc
sub
push
add
jl
mov
and
call
test
call
call
(bad)
inc
add
add
add
xor
push
adc
add
jns
add
add
sbb
cmp
mov
add
dec
pop
mov
inc
ds
and
fstp
mov
and
xor
add
mov
cmp
pop
or
mov
adc
mov
movs
dec
xchg
je
movs
popa
aas
adc
add
les
or
add
fld
jmp
push
dec
loope
int
mov
iret
add
pop
add
push
and
add
mov
add
dec
xor
mov
add
cld
add
add
jmp
push
add
jmp
xchg
inc
add
test
inc
or
movs
or
inc
mov
add
hlt
fsubr
call
call
sub
adc
dec
mov
dec
pop
add
push
push
add
mov
gs
ds
add
add
mov
add
and
jge
popa
(bad)
dec
movs
add
inc
jo
call
xchg
lock
inc
and
or
(bad)
call
adc
and
add
adc
add
push
push
pop
outs
push
jmp
hlt
mov
jns
add
mov
js
hlt
jb
and
or
add
inc
sbb
jne
mov
fld
test
scas
icebp
out
jne
adc
adc
mov
add
loop
and
std
mov
xchg
pop
rol
xchg
mov
inc
sub
add
mov
stc
inc
inc
dec
add
push
nop
in
sub
rcl
fcom
adc
or
jmp
or
mov
pop
jge
push
jmp
add
mov
ins
js
pushf
dec
dec
add
lea
push
pop
xchg
adc
rol
mov
add
add
add
pop
inc
mov
sub
adc
jne
or
add
psubsb
movs
add
movs
jbe
add
cdq
and
add
mov
mov
add
or
push
gs
add
aas
adc
dec
mov
cmp
add
inc
inc
ins
pop
dec
pop
jnp
or
dec
mov
add
pop
loopne
daa
add
add
stos
dec
test
out
mov
add
hlt
xchg
mov
inc
cmp
add
or
sbb
add
leave
add
add
add
sbb
adc
xor
lock
mov
xchg
inc
add
mov
test
in
gs
cmp
pop
stos
sub
pop
add
shl
test
inc
mov
or
enter
jge
add
add
add
movs
js
repnz
fcom
mov
add
push
jle
lock
dec
mov
jne
add
and
inc
push
jecxz
dec
push
sbb
(bad)
push
fs
adc
push
call
xor
test
add
add
out
jbe
mov
or
push
jmp
call
xlat
call
cmps
shl
clc
add
or
inc
das
loopne
imul
int3
add
mov
push
or
sub
mov
or
dec
cmp
sub
fst
pop
add
push
mov
pop
loopne
hlt
mov
add
inc
stos
sbb
inc
add
and
push
dec
inc
imul
mov
pop
enter
mov
lock
or
push
pushf
repz
dec
or
add
rcl
aaa
or
mov
push
mov
loop
cmp
push
mov
adc
and
or
add
inc
adc
and
push
daa
inc
cdq
pusha
pop
or
fsubp
mov
add
mov
add
mov
jb
sbb
rol
mov
stc
ror
mov
mov
inc
cmp
push
add
add
mov
retf
mov
mov
jo
mov
xchg
and
push
nop
(bad)
mov
call
and
mov
or
push
mov
mov
adc
mov
test
add
lea
add
push
aam
pop
add
push
add
push
push
jmp
inc
sar
or
popa
mov
mov
pop
add
mov
and
add
loopne
mov
add
dec
xchg
sbb
cmps
mov
(bad)
and
loope
cmp
dec
or
or
clc
test
add
sub
pusha
aad
arpl
call
mov
jmp
shl
test
add
mov
data16
fist
shr
inc
lods
sbb
mov
cld
add
mov
inc
mov
fldenv
inc
inc
jmp
mov
mov
mov
or
dec
add
add
mov
pop
pop
dec
sub
push
push
nop
push
add
and
add
imul
add
mov
add
inc
sub
loop
mov
mov
inc
add
mov
xor
inc
cmp
in
adc
mov
clc
xchg
push
pop
pusha
mov
mov
or
jb
add
cmp
push
xchg
data16
adc
add
add
adc
pusha
mov
or
test
cmp
add
add
cmp
call
inc
rol
inc
inc
inc
dec
xchg
or
mov
add
add
xchg
call
push
push
jb
mov
jge
test
push
add
pop
adc
loopne
add
add
loopne
inc
pop
add
adc
add
or
in
inc
test
adc
adc
rol
or
jo
pop
push
adc
xchg
pop
xor
mov
dec
add
call
frstor
les
xor
call
gs
add
adc
lds
inc
pushf
adc
add
fwait
add
out
lea
cmp
adc
mov
test
push
inc
add
or
jbe
push
ret
xor
xchg
lea
add
xor
imul
mov
adc
add
dec
cmp
xor
in
mov
call
or
adc
rol
mov
sub
syscall
add
sub
sub
call
(bad)
jmp
shl
mov
jno
pop
inc
loop
adc
dec
cmp
dec
mov
add
(bad)
pop
add
jne
mov
enter
dec
call
call
popf
or
or
or
mov
fwait
mov
pop
cmovne
enter
add
stos
call
rcl
dec
dec
call
add
push
add
(bad)
loopne
or
add
dec
aas
cmp
or
mov
adc
pusha
pop
mov
xor
add
push
movups
xor
call
mov
adc
rol
mov
les
and
inc
add
push
add
add
aam
popa
sub
enter
lea
add
sbb
int3
add
jge
jne
xor
(bad)
fisttp
call
mov
add
add
or
mov
call
lods
aas
cli
add
xor
dec
push
adc
call
push
xor
call
jno
push
add
dec
outs
add
dec
add
add
inc
je
jb
dec
xor
mov
push
jne
adc
call
and
stos
(bad)
(bad)
push
and
aaa
xor
mov
mov
inc
rol
xlat
mov
je
jmp
inc
cmp
stos
jno
mov
and
test
mov
call
push
jmp
inc
(bad)
mov
or
mov
mov
out
inc
add
rcl
int3
xchg
cdq
pop
push
int
setg
xchg
mov
out
mov
push
inc
or
add
add
into
loopne
cmp
dec
inc
es
adc
sbb
or
pop
cwde
inc
mov
lea
add
adc
and
popf
push
aas
out
les
cmp
add
bnd
and
jae
(bad)
mov
mov
add
dec
add
mov
imul
dec
shl
rcl
or
add
or
loop
je
or
xor
ja
add
add
push
jge
or
(bad)
push
jge
clc
add
dec
add
adc
mov
out
rol
jo
popf
mov
test
add
test
jnp
mov
push
xor
jmp
pop
xchg
bound
pop
pusha
jle
add
pushf
jb
shl
(bad)
rol
adc
mov
jge
movs
push
nop
fimul
xor
scas
push
push
mov
push
inc
data16
add
mov
clc
mov
and
xor
inc
jb
jecxz
rol
and
or
and
mov
mov
inc
dec
stc
or
sub
push
dec
imul
test
and
adc
mov
and
fcom
pop
dec
push
test
add
inc
ret
jb
push
mov
push
sbb
add
mov
push
sbb
mov
cmp
add
add
iret
add
jne
inc
jae
dec
pop
or
leave
push
adc
rol
mov
loopne
inc
inc
jo
add
sub
loop
sar
add
sub
add
jmp
pop
jg
and
add
outs
ins
int
mov
in
loop
(bad)
mov
jl
add
sbb
xor
add
push
jne
test
mov
add
inc
add
inc
rol
nop
mov
sbb
movs
xor
xor
adc
test
add
loopne
test
enter
not
div
pop
icebp
fiadd
daa
sbb
mov
dec
jne
loopne
add
icebp
jg
cmp
dec
and
cmps
daa
lea
push
out
add
xor
push
call
add
push
sub
stos
push
pop
push
sbb
movs
je
sub
add
and
rcr
jmp
adc
or
mov
add
xchg
add
out
mov
or
sbb
inc
push
call
shl
or
test
pop
add
loopne
mov
or
add
xor
mov
add
dec
dec
sbb
dec
call
push
add
jmp
adc
les
cli
movs
mov
cmp
adc
add
add
dec
add
and
pop
out
and
test
xor
ja
add
(bad)
xor
jo
mov
(bad)
arpl
or
popa
inc
add
dec
ret
dec
push
add
fld
mov
or
lea
adc
xor
and
cmp
test
push
adc
jne
nop
pop
push
add
add
add
push
mov
sub
mov
jb
add
fwait
pop
inc
daa
and
cwde
addr16
ins
and
sbb
jge
cmp
lock
shl
aas
add
jno
jmp
adc
dec
cmp
ja
nop
dec
dec
push
push
dec
and
add
push
mov
jge
loopne
xor
dec
(bad)
popf
or
add
sbb
inc
add
pop
add
mov
mov
inc
cmp
add
mov
shl
ret
(bad)
clc
imul
pop
adc
add
imul
add
lods
xor
arpl
inc
movs
add
mov
mov
mov
dec
cmp
jb
jne
daa
lock
rol
cmc
je
cmp
nop
xor
add
add
add
jae
add
jne
or
rol
push
xchg
in
mov
fmul
nop
mov
add
and
or
add
dec
fisub
dec
dec
mov
jmp
xor
add
add
mov
test
shl
push
dec
call
xchg
add
cmp
(bad)
push
hlt
ins
mov
xchg
sbb
pop
call
arpl
fdiv
add
jmp
popf
inc
push
aas
aad
mov
inc
add
leave
jge
push
dec
inc
xchg
sub
mov
push
pop
add
add
test
jb
rol
loop
jne
or
add
adc
sbb
push
test
call
adc
add
(bad)
fbld
push
add
sbb
mov
imul
mov
call
xor
add
inc
sbb
(bad)
inc
sahf
mov
xor
cmps
inc
add
sub
fcom
ss
mov
and
inc
or
js
call
adc
stos
clc
rol
adc
add
gs
ror
cmp
mov
pop
das
jl
fadd
add
mov
xor
xor
and
add
add
add
push
fcomp
inc
add
rcl
add
xor
xor
adc
pop
test
pushf
push
adc
pop
push
std
adc
sub
leave
jge
jno
int3
cwde
jge
outs
icebp
and
or
jge
inc
call
call
(bad)
sbb
inc
ret
test
inc
sahf
enter
or
mov
cmp
jne
shl
dec
xor
and
inc
push
loopne
call
cwde
cmp
or
jno
or
cmp
xor
nop
dec
std
inc
or
je
call
lds
call
push
loopne
in
fwait
mov
sbb
clts
push
aas
add
push
dec
mov
in
loopne
add
in
cmp
sti
add
pop
xor
mov
in
js
adc
call
add
(bad)
push
mov
push
and
add
call
cmp
lock
loopne
ficomp
ss
add
or
movs
inc
fist
add
call
cli
shl
add
test
call
int
loopne
and
adc
cmp
add
in
test
fild
daa
push
jne
(bad)
jp
mov
add
mov
test
inc
and
mov
inc
cmp
sbb
adc
adc
adc
dec
fs
and
push
(bad)
jmp
push
xor
(bad)
and
sub
in
add
add
xchg
add
ja
bound
mov
gs
(bad)
xor
jge
pop
push
scas
push
add
shl
and
adc
mov
out
fsub
ins
inc
xchg
adc
repz
scas
in
push
cmp
add
push
or
adc
cmp
call
clc
push
js
mov
cmp
add
pushf
push
lea
mov
cmc
or
inc
enter
call
test
sbb
adc
and
push
push
cli
mov
and
push
loopne
add
adc
loope
cmps
add
add
add
inc
mov
mov
movs
or
dec
push
das
push
add
add
push
dec
cmp
retf
nop
addr16
push
add
add
inc
sub
mov
jecxz
inc
inc
cwde
add
dec
mov
mov
add
adc
and
dec
add
clc
lds
add
cmp
dec
inc
xchg
test
sbb
mov
loope
mov
cs
loope
icebp
and
cs
add
add
adc
and
(bad)
pop
pusha
xor
(bad)
sub
push
push
call
inc
or
cmps
shl
inc
ja
xchg
jbe
call
fisttp
push
add
mov
arpl
push
bound
scas
jne
jne
jne
cmps
ret
dec
ret
add
and
popa
rol
push
xchg
(bad)
and
out
fadd
add
add
push
fsub
xor
add
adc
mov
add
add
and
rol
push
ror
inc
call
mov
add
add
inc
stos
cmp
and
jmp
mov
add
fadd
or
add
sub
mov
pop
jo
and
inc
pop
dec
add
clc
add
mov
cmp
cli
or
inc
inc
adc
push
push
call
add
jae
mov
bound
and
sub
or
mov
fidivr
mov
mov
xor
xchg
js
and
add
xor
lock
call
and
add
push
add
add
nop
rcl
add
jns
cli
jo
add
and
pop
loop
clc
sbb
out
xchg
fxch
or
jne
mov
shr
add
or
jo
mov
add
adc
or
mov
je
and
call
test
add
xor
inc
scas
inc
push
inc
jge
adc
call
adc
loopne
ins
movs
push
push
xor
das
into
leave
push
ret
nop
sar
adc
inc
inc
cmp
mov
mov
add
inc
mov
inc
jge
and
xchg
ret
int
dec
sub
jmp
jbe
loopne
nop
mov
sbb
(bad)
retf
dec
push
cmp
loop
push
xor
add
shr
add
add
pop
in
add
mov
cwde
push
jne
mov
mov
push
mov
mov
shl
sbb
adc
add
add
inc
jmp
or
add
test
inc
shr
jle
add
add
aaa
rol
icebp
je
jae
adc
call
push
sbb
xor
and
add
and
push
jno
es
sub
call
hlt
lock
adc
cs
adc
aam
cld
sbb
mov
push
inc
lahf
dec
and
cmp
add
arpl
dec
dec
xchg
pop
add
das
adc
jne
mov
and
push
sub
sub
mov
shr
(bad)
add
add
add
cmp
test
push
mov
cmp
add
mov
pop
add
test
add
(bad)
call
test
or
loope
or
add
bound
ret
cmp
jb
add
(bad)
sti
push
add
sbb
mov
jge
add
sub
sub
call
adc
inc
cld
je
add
and
and
out
retw
int
pusha
add
dec
add
xlat
add
or
adc
push
inc
int3
ret
add
mov
add
add
rcl
inc
stos
add
pusha
inc
xor
xchg
sbb
(bad)
sub
stos
out
clc
arpl
push
jle
sub
or
push
test
add
and
sbb
inc
mov
cwde
sub
int3
xchg
inc
nop
scas
xchg
push
mov
or
push
dec
add
call
and
mov
cwde
add
call
mov
loopne
sub
dec
mov
pop
adc
icebp
xchg
movs
adc
rcl
je
cmp
aaa
add
repz
xor
pop
add
xabort
inc
aad
push
add
scas
stos
sti
jae
mov
mov
add
jp
(bad)
shl
jle
xor
cmp
std
pop
add
push
mov
add
and
mov
cmp
cmc
push
mov
sub
popa
cdq
adc
add
add
jae
loop
test
add
jmp
inc
jg
stc
add
dec
add
inc
inc
mov
jb
in
inc
push
xor
pusha
mov
cmp
ret
inc
test
or
and
push
add
sbb
add
mov
add
js
add
mov
dec
imul
outs
xchg
add
call
cmps
and
cld
test
push
jge
adc
into
mov
and
push
add
and
add
clc
test
mov
dec
dec
inc
mov
jmp
push
sub
shl
rsqrtps
xor
neg
adc
pop
mov
punpckldq
cwde
or
les
mov
push
adc
jne
inc
add
push
inc
adc
mov
into
mov
pop
sbb
mov
add
test
adc
push
push
cmp
push
call
add
jbe
jno
pusha
add
mov
adc
add
and
add
add
xor
imul
xor
jb
mov
lds
ins
adc
mov
push
adc
bound
ror
inc
jg
add
add
das
cmps
or
xor
push
xor
lock
hlt
pop
xor
mov
jmp
and
and
sub
add
push
dec
mov
add
inc
retf
dec
or
add
mov
mov
push
rcl
mov
psubsb
add
popf
push
add
dec
test
(bad)
loopne
sbb
test
test
clc
and
bound
dec
mov
mov
push
call
imul
push
add
psubsb
xor
push
jne
ret
nop
fcmovu
add
jle
sub
vpmacsww
add
jl
xchg
jo
loopne
mov
jmp
inc
addr16
ror
jge
mov
or
adc
enter
loopne
jns
cwde
(bad)
jmp
inc
dec
mov
and
cmp
loope
push
adc
pop
dec
cld
test
add
or
push
pop
sbb
adc
mov
sbb
jne
add
cld
dec
inc
mov
adc
test
lea
cdq
push
cdq
jnp
add
rol
xor
(bad)
call
inc
adc
mov
push
sbb
add
mov
test
call
mov
push
pop
mov
xchg
ins
rol
pusha
lock
sti
fs
xchg
inc
pusha
call
add
ds
inc
mov
and
hlt
add
movs
aad
pop
mov
addr16
call
dec
or
or
sbb
adc
push
push
pop
add
sub
push
cmp
sub
inc
div
pop
sbb
add
inc
inc
lea
sub
mov
add
jmp
xor
pusha
push
pop
arpl
mov
leave
inc
xchg
mov
add
push
or
or
xor
pop
push
rol
jl
add
add
add
stos
mov
push
sbb
popa
(bad)
adc
xchg
pop
mov
test
inc
push
mov
push
jle
sbb
cmp
dec
jl
mov
call
mov
fbstp
clc
aaa
call
rcl
add
xor
push
add
(bad)
and
call
loopne
jl
add
lods
mov
add
test
call
jno
out
jmp
add
retf
sub
and
in
mov
adc
mov
fmul
xchg
sets
mov
cmp
add
fisub
adc
dec
push
lea
push
inc
add
mov
ffree
xchg
popa
xchg
add
(bad)
scas
jmp
dec
icebp
or
or
call
and
and
mov
(bad)
shl
push
push
add
in
and
add
xor
mov
je
add
xchg
and
mov
add
ror
jo
lock
int
xor
add
adc
loopne
aaa
inc
xchg
call
pop
ret
lea
pusha
icebp
jns
add
dec
add
adc
pushf
add
mov
cmp
jl
add
mov
dec
pop
repz
xchg
sub
jmp
mov
ror
pop
or
clc
mov
sub
and
call
or
dec
nop
mov
push
pop
das
push
fcom
dec
loopne
and
ja
les
dec
lock
imul
fsubr
xchg
mov
push
jnp
mov
invlpg
in
jge
cmp
clc
jg
mov
test
clc
dec
add
movs
rcr
cmp
xor
leave
dec
add
sub
add
push
jo
int
mov
pop
push
movs
xor
and
lds
test
xor
or
lods
mov
add
add
inc
inc
push
or
mov
and
in
call
sub
inc
push
mov
or
retf
add
push
push
push
pusha
mov
out
mov
clc
inc
add
dec
rol
add
add
(bad)
fnstcw
test
ret
test
inc
add
add
retf
mov
pop
test
(bad)
std
mov
sub
pop
dec
mov
cmp
mov
add
loopne
ret
pop
pop
loope
and
push
rcr
or
jne
mov
call
or
stos
sub
lods
sub
add
add
cmp
dec
add
push
mov
pop
push
rol
pusha
xchg
mov
add
jne
data16
nop
xor
mov
mov
push
add
outs
add
adc
mov
or
push
push
add
mov
loopne
add
and
mov
dec
add
cld
pusha
test
add
test
inc
imul
push
pop
sbb
cmp
or
cdq
pop
xor
add
ja
add
adc
or
ret
or
add
jge
adc
sub
add
inc
cmps
dec
and
sub
mov
and
add
inc
add
xchg
test
out
sub
es
jp
jge
jge
gs
imul
xor
add
add
ds
inc
add
popf
call
mov
dec
mov
test
jp
add
inc
in
add
fst
dec
lods
dec
push
and
push
(bad)
out
add
sbb
sub
cmovo
push
out
mov
stos
shl
aam
dec
cmp
test
clc
cmp
test
add
add
add
and
in
and
mov
test
mov
inc
or
fadd
mov
call
mov
or
sub
push
ins
add
push
nop
push
add
sub
pop
loopne
add
add
push
gs
add
jge
retf
or
mov
mov
or
jae
mov
shl
fiadd
add
add
add
cmp
mov
nop
xor
inc
mov
dec
(bad)
sahf
inc
or
add
je
push
or
call
add
lea
and
data16
xor
push
repnz
outs
jmp
leave
adc
rcl
daa
les
add
or
(bad)
mov
xchg
add
in
call
sbb
add
or
jne
gs
cmp
mov
inc
add
add
bswap
rcl
or
add
mov
add
adc
mov
call
pop
add
add
or
loope
add
or
xor
add
push
and
mov
jmp
movs
add
nop
loopne
clc
dec
push
cmp
nop
dec
and
add
inc
dec
daa
call
xor
rcl
push
fsub
popa
adc
and
call
call
add
push
pop
mov
add
add
add
call
inc
data16
and
add
cmc
dec
and
cli
mov
push
push
mov
add
mov
rol
lds
mov
stos
add
hlt
rcl
pop
inc
dec
mov
add
push
or
push
sub
cwde
cmp
add
loop
xor
call
and
pusha
mov
add
add
or
(bad)
push
mov
add
adc
add
sub
pop
pushf
jne
imul
cwde
add
adc
mov
push
push
mov
cmps
jo
loopne
add
dec
and
mov
leave
jge
inc
js
call
in
add
sbb
scas
sub
gs
adc
je
nop
xchg
push
rcl
push
xor
ins
aas
push
call
cmp
aam
push
xchg
mov
add
push
add
mov
loopne
inc
add
shl
cwde
aaa
in
cmp
or
xchg
pop
push
add
sub
adc
test
sbb
or
inc
jo
push
xchg
inc
nop
dec
push
cmp
add
std
or
inc
jno
and
cwde
pusha
add
or
xchg
fwait
jns
dec
dec
dec
rol
add
add
add
add
inc
fnstcw
in
add
mov
jmp
push
push
mov
shl
pop
fdiv
sar
popa
sub
pop
test
push
xor
sub
pushf
test
mov
jle
xor
mov
adc
push
inc
call
sub
stc
or
sbb
adc
add
clc
mov
aam
add
fsubr
es
mov
xor
or
xchg
xchg
inc
xor
setbe
call
adc
and
add
ins
adc
push
shl
inc
(bad)
loop
jne
push
inc
mov
pusha
pop
call
mov
dec
je
inc
mov
adc
xchg
add
pop
jmp
add
call
jo
fs
jmp
xor
push
fwait
sub
icebp
jae
cmp
dec
sub
inc
inc
pop
jecxz
push
pop
cwde
dec
pop
add
add
push
add
push
xchg
ss
mov
add
or
pcmpeqw
cmp
call
leave
add
cmp
dec
lods
(bad)
push
mov
push
ins
push
dec
cmc
(bad)
int3
sub
shl
inc
sbb
nop
add
cli
ins
add
pop
jne
add
pop
push
and
nop
(bad)
and
js
add
add
mov
icebp
sahf
push
dec
inc
leave
inc
pop
xor
sbb
dec
adc
add
mov
stos
sub
scas
and
xor
adc
mov
rol
mov
pusha
inc
shr
rol
ror
movs
inc
mov
push
pop
mov
jno
pusha
push
loopne
mov
test
add
icebp
sbb
add
aam
inc
cmp
add
pusha
ror
xchg
push
call
and
inc
call
cmp
call
add
fadd
or
cmp
add
push
or
(bad)
xor
bound
in
imul
addr16
fsub
addr16
data16
add
mov
mov
int3
shl
add
pop
add
pop
test
in
(bad)
sbb
(bad)
lock
push
add
and
dec
gs
and
sub
add
sub
inc
ss
cmp
inc
add
push
gs
add
push
loope
retf
inc
ror
ret
(bad)
sti
add
adc
dec
inc
dec
xor
add
add
aas
mov
dec
enter
inc
add
or
pop
cmp
loop
aam
add
adc
xchg
js
rdmsr
test
and
(bad)
call
sbb
mov
call
push
inc
loopne
push
jmp
mov
and
jl
push
xor
mov
(bad)
les
hlt
add
adc
mov
mov
adc
push
pop
add
fld
pushf
ss
lods
fiadd
daa
rcl
add
out
mov
push
mov
gs
call
adc
add
in
dec
rol
aas
xchg
(bad)
adc
add
xchg
loopne
or
push
add
adc
cs
jmp
loopne
inc
add
xor
add
xchg
cmps
add
jb
std
fs
push
sbb
add
jne
data16
mov
xor
movs
dec
add
add
sub
add
bound
popa
adc
add
add
add
add
(bad)
adc
stos
fisub
and
add
adc
inc
push
sbb
mov
add
(bad)
call
mov
cmps
daa
push
add
mov
add
xchg
daa
cdq
and
shr
pop
add
push
lock
add
nop
mov
adc
add
mov
aas
mov
add
inc
mov
adc
mov
add
add
and
mov
add
jmp
push
sbb
push
xchg
push
fsubr
xor
add
scas
pop
fwait
mov
and
outs
and
retf
mov
inc
test
add
mov
mov
jle
test
fist
add
es
leave
shl
or
mov
rol
add
cmp
inc
mov
dec
adc
sub
push
or
retf
icebp
inc
push
mov
jne
dec
pop
pop
jo
inc
dec
in
add
or
add
dec
loopne
xchg
pop
call
into
inc
add
jo
dec
push
mov
add
xchg
lock
add
add
dec
push
idiv
cwde
mov
cmp
push
leave
test
mov
or
inc
add
push
and
cvtpi2ps
and
adc
dec
dec
leave
xor
push
add
push
add
dec
inc
add
imul
add
or
add
add
in
mov
icebp
test
mov
shr
fdiv
rcl
add
xor
add
movs
retf
ret
stos
push
add
add
pop
add
je
add
xor
movs
jae
xchg
jne
add
push
dec
add
cmp
call
mov
inc
xchg
sbb
add
or
xor
inc
dec
ret
xchg
nop
dec
(bad)
mov
fdivr
fild
inc
call
in
add
pop
movlps
mov
add
adc
mov
rol
add
sahf
xor
jno
inc
call
add
xor
inc
inc
add
xor
push
add
add
add
push
jno
inc
dec
add
mov
mov
call
mov
(bad)
iret
add
mov
add
mov
fild
test
add
aam
sbb
mov
inc
nop
jo
ss
mov
test
and
jo
dec
lock
mov
push
enter
sbb
aam
jne
fcom
lods
int3
sbb
push
int
add
or
stos
adc
mov
add
pop
add
xchg
push
add
inc
lea
mov
inc
adc
jmp
jmp
jle
push
jb
and
push
push
push
ss
jge
cs
(bad)
push
rol
call
mov
in
xchg
mov
test
mov
and
push
dec
adc
mov
dec
lea
dec
add
rcr
popf
and
mov
xor
add
test
call
jge
add
das
in
jg
cmp
push
fdiv
hlt
cwde
retf
pop
mov
(bad)
in
stc
adc
je
push
hlt
fs
ud0
sbb
cmp
xchg
sub
add
ret
and
xor
movs
add
pop
inc
mov
and
jmp
add
pop
add
lock
add
mov
add
xchg
cmp
jle
or
mov
push
dec
xchg
sub
add
inc
jb
add
xchg
rol
cmp
adc
adc
fmul
adc
test
pusha
add
mov
cmp
sub
les
add
add
cmp
fdivp
dec
and
add
add
ret
xor
pop
jge
mov
loopne
dec
jne
add
repz
dec
sbb
test
push
call
inc
call
add
jmp
sub
adc
lds
mov
(bad)
test
nop
dec
mov
mov
add
add
sti
shl
mov
imul
cmps
imul
mov
repz
ror
push
mov
cmp
in
ret
call
inc
or
pusha
mov
add
test
ja
add
inc
cwde
or
sbb
inc
add
jecxz
jo
or
retf
push
and
add
push
mov
clc
pop
add
shl
add
scas
fmul
adc
inc
and
add
inc
xor
jo
adc
xadd
add
jge
inc
add
adc
inc
mov
jmp
xchg
adc
popa
xchg
inc
add
mov
test
add
add
xor
lods
cmps
adc
push
and
adc
xchg
repz
fild
dec
je
sbb
mov
mov
add
imul
add
and
and
inc
add
add
pop
add
or
or
add
cmp
mov
pop
cli
mov
add
fwait
add
call
adc
(bad)
and
push
popf
call
sbb
out
rol
or
lds
sbb
add
and
add
push
and
add
out
dec
sub
mov
sub
mov
adc
or
rol
call
das
push
dec
mov
jnp
add
push
adc
sub
add
jne
nop
push
loop
lahf
push
add
add
loope
mov
add
xor
mov
inc
add
jg
jmp
adc
pop
xor
in
xor
adc
pushf
mov
add
sub
add
mov
sbb
jmp
jmp
cmp
test
adc
inc
mov
clc
pop
ja
xor
dec
jmp
jmp
pop
or
push
add
mov
mov
adc
jne
adc
sbb
sub
ficomp
and
fwait
mov
repnz
test
pop
add
mov
pop
and
bound
test
inc
cmp
add
add
dec
pop
sbb
sbb
ret
add
dec
push
or
xchg
add
push
dec
xor
int3
cld
push
repnz
xor
push
outs
aam
or
and
inc
add
adc
popa
sbb
mov
dec
push
pusha
fadd
mov
fiadd
cdq
jl
js
sub
sub
add
pop
inc
push
mov
test
add
add
mov
pop
pop
pop
mov
add
dec
inc
stos
mov
icebp
cwde
jne
push
xchg
add
xor
mov
jnp
call
loopne
xchg
push
rcl
mul
push
jg
and
or
cmp
sub
push
adc
add
jecxz
call
mov
(bad)
fisubr
push
daa
add
sahf
or
and
cmp
imul
push
add
pop
jb
inc
add
inc
cwde
add
adc
dec
call
or
push
or
je
push
or
push
add
mov
mov
loopne
add
jmp
add
mov
in
mov
mov
mov
push
add
add
pusha
pop
xchg
in
and
add
mov
clc
(bad)
pop
xchg
add
add
hlt
lods
inc
dec
nop
dec
adc
sahf
(bad)
push
nop
mov
add
out
(bad)
pop
inc
test
pop
add
pop
inc
and
inc
inc
dec
mov
add
or
mov
inc
int3
shl
xor
pop
mov
xchg
cmp
mov
add
inc
loope
add
add
push
and
mov
rol
jo
adc
lea
icebp
push
mov
mov
add
add
test
icebp
call
jmp
pop
and
add
push
jb
popa
jmp
adc
inc
or
push
or
add
test
add
cli
or
add
fistp
hlt
(bad)
fld
mov
popa
or
inc
call
mov
sbb
push
add
aaa
inc
mov
ss
jne
(bad)
pop
dec
add
add
add
dec
push
xor
icebp
retf
mov
call
cli
add
push
or
dec
add
add
and
dec
push
hlt
nop
add
or
mov
call
inc
push
movs
inc
and
or
add
lock
test
sbb
jb
push
mov
xchg
push
sbb
call
call
inc
mov
add
ja
ret
jne
inc
clc
inc
inc
lock
push
push
cdq
sub
loope
adc
cmp
add
shl
or
bound
dec
je
or
movs
and
or
add
push
sbb
add
movs
cwde
adc
inc
mov
sub
xor
sahf
jge
les
(bad)
and
cmp
add
rcl
jb
aas
add
or
inc
push
push
push
add
mov
mov
fwait
cmp
nop
shl
inc
mov
test
call
loopne
add
shl
xchg
push
loopne
enter
call
dec
and
add
leave
and
jle
sar
pop
in
jne
sbb
es
dec
psrld
jmp
lahf
xchg
sbb
xor
pop
add
repnz
add
sub
mov
dec
and
call
dec
ror
add
sub
adc
push
test
fmul
or
cmp
loopne
add
je
or
js
add
add
test
jno
(bad)
daa
and
call
(bad)
mov
cmp
and
adc
add
inc
add
mov
add
sub
mov
sbb
test
jge
mov
dec
dec
push
add
add
inc
test
jns
sub
ror
or
rol
cmp
or
mov
arpl
inc
push
mov
cld
ret
cmove
sar
lahf
cmp
adc
test
inc
not
add
call
add
cmc
xor
call
adc
mov
pop
arpl
ret
call
jne
loop
xor
push
and
push
xor
ret
dec
dec
test
test
add
add
add
and
inc
ja
sub
inc
ror
add
push
lods
pop
push
jecxz
dec
fadd
mov
add
push
sbb
call
(bad)
dec
mov
add
push
xor
rol
and
pusha
jle
push
add
add
adc
add
mov
test
add
adc
push
inc
inc
ins
in
cmc
sub
test
fadd
mov
pop
add
mov
and
inc
mov
dec
and
jmp
inc
inc
mov
xor
add
retf
outs
push
add
mov
shl
mov
loopne
call
push
add
add
add
test
mov
or
retf
jmp
rcl
and
xor
add
inc
mov
push
add
push
sub
(bad)
test
std
call
pop
sub
rcr
nop
mov
mov
enter
dec
mov
ja
shr
add
mov
jg
mov
(bad)
sub
sbb
in
add
sti
sbb
add
jbe
fs
stc
dec
(bad)
imul
sbb
rol
adc
lock
mov
call
pusha
loope
xchg
add
add
jae
call
jmp
icebp
add
inc
add
mov
push
push
add
std
mov
add
inc
daa
call
add
retf
add
imul
or
add
test
leave
pusha
lds
(bad)
(bad)
jle
xor
or
push
clc
cmc
push
js
inc
in
inc
popf
or
or
xchg
ins
shl
int
add
repz
push
add
add
dec
rcl
adc
or
adc
add
nop
(bad)
jg
call
inc
push
add
adc
add
test
cwde
push
adc
hlt
jnp
outs
xchg
push
dec
add
mov
add
cli
ins
xor
inc
add
fwait
call
sbb
ror
cld
sbb
dec
mov
add
inc
adc
addr16
sub
pusha
add
add
pop
add
test
add
lea
or
cmp
inc
add
dec
cmp
add
adc
std
ret
sub
inc
inc
inc
inc
xlat
pop
jns
call
xor
or
test
push
inc
add
add
call
cmp
cmova
call
icebp
and
(bad)
mov
test
and
push
(bad)
repnz
add
call
lock
add
call
xor
mov
loopne
or
mov
pop
or
inc
shl
in
jge
out
add
adc
lea
push
xchg
sbb
mov
cmp
xor
nop
mov
add
(bad)
mov
inc
adc
add
or
xor
inc
xchg
pop
loopne
inc
add
test
add
pop
add
adc
mov
mov
dec
adc
cmp
sub
and
add
imul
xor
or
sbb
xchg
pop
cli
add
mov
mov
push
mov
call
push
add
dec
inc
shl
(bad)
call
mov
adc
js
xchg
mov
jl
xor
lahf
adc
mov
emms
mov
add
add
push
into
retf
jle
call
mov
rcr
sbb
xchg
xchg
push
test
adc
mov
jmp
jle
adc
cmp
xor
push
lea
push
arpl
mov
mov
adc
out
dec
push
inc
xor
xchg
add
dec
dec
xor
stc
mov
or
mov
xor
inc
ret
adc
add
pop
and
inc
pop
stos
inc
mov
cmp
call
push
leave
data16
add
sbb
pop
lea
xor
pushf
add
repnz
push
cmp
add
inc
xchg
inc
add
push
sub
jmp
or
add
ror
add
push
add
ret
adc
and
xor
mov
add
inc
cmp
ret
mov
mov
add
shl
outs
inc
test
les
loop
cmovs
add
adc
xor
push
pop
hlt
mov
add
push
sub
inc
mov
loop
cmp
sbb
jmp
lea
nop
jnp
add
add
add
jge
jne
add
call
mov
cmp
mov
in
add
dec
xor
inc
loopne
add
add
dec
dec
pop
fsubr
mov
jnp
adc
pop
inc
dec
inc
add
mov
add
loope
or
mov
or
je
and
or
and
dec
push
sbb
xchg
dec
pop
pop
sub
in
xchg
jmp
push
add
add
(bad)
es
xchg
cmp
inc
inc
cs
lock
add
sub
add
add
and
test
pop
lldt
imul
mov
dec
push
loope
jne
(bad)
or
or
sbb
test
push
sbb
pop
jmp
dec
sbb
ins
ins
call
test
pop
add
adc
scas
jno
(bad)
or
dec
ds
jl
popa
add
inc
push
add
push
out
mov
jne
dec
inc
add
loopne
cmp
push
fdivr
dec
inc
test
dec
dec
sbb
aas
fcom
push
mov
push
mov
daa
cmps
nop
inc
(bad)
jmp
mov
imul
xor
jmp
clc
push
push
sbb
add
mov
hlt
dec
sbb
jge
lods
sub
dec
mov
inc
(bad)
inc
in
lea
add
xor
add
adc
add
clc
mov
jns
jbe
dec
rol
mov
inc
pop
mov
(bad)
test
sub
bnd
push
add
jne
dec
pop
dec
push
out
out
pop
inc
jne
cdq
mov
dec
les
pop
add
test
pop
mov
stc
add
add
add
add
dec
xchg
jne
xchg
jl
add
in
fld
xchg
jne
inc
pop
add
and
test
ror
cmp
push
pop
lods
or
and
leave
aaa
adc
iret
jecxz
dec
lahf
fisttp
add
add
dec
sub
add
add
add
loopne
jo
add
aas
add
mov
(bad)
mov
jp
xor
stc
add
push
mov
jae
mov
add
cs
pop
add
inc
mov
inc
or
movs
test
push
add
out
jl
mov
inc
clc
sub
inc
mov
clc
and
das
push
aam
loopne
inc
inc
je
sub
(bad)
push
mov
cmps
(bad)
jmp
add
xor
add
add
add
add
xchg
call
ret
add
test
lea
std
add
cmp
push
and
scas
and
mov
adc
cmp
mov
int
mov
xor
mov
push
inc
imul
adc
jae
cmp
add
add
add
bound
outs
and
cmp
jo
nop
mov
add
loopne
test
xchg
ins
xor
add
adc
enter
add
xor
cs
retf
pop
popa
rol
jae
and
add
mov
mov
mov
add
enter
add
jp
aad
call
or
mov
in
call
sub
mov
movs
add
dec
ror
dec
call
push
adc
jecxz
add
mov
push
shl
(bad)
fbld
add
sub
clc
lock
and
pusha
add
dec
(bad)
jno
in
dec
cmp
stos
popa
hlt
(bad)
nop
lea
mov
and
les
add
mov
jne
jb
aad
and
pop
sti
or
sbb
jle
add
vmread
out
add
cmp
(bad)
lock
push
push
or
sbb
inc
push
xor
mov
adc
scas
clc
mov
mov
outs
mov
pop
maxps
push
xor
mov
and
dec
add
ror
nop
(bad)
pusha
push
push
push
add
sbb
inc
add
call
add
movs
test
xchg
sbb
and
ror
push
call
ss
push
adc
dec
sbb
xor
mov
and
and
push
mov
fld
and
push
rol
(bad)
push
adc
add
(bad)
addr16
addr16
mov
jp
add
or
inc
inc
clc
nop
add
push
push
or
lock
inc
cld
cmp
clc
jne
add
call
xor
(bad)
xor
fld
jge
clc
stos
sub
pusha
inc
int3
add
or
call
mov
popf
nop
add
mov
add
scas
add
cmovne
test
push
jne
inc
add
push
aaa
call
in
xor
add
pusha
sbb
push
inc
call
adc
lds
add
sbb
test
je
pop
adc
push
inc
mov
arpl
add
dec
inc
adc
xor
in
add
add
push
add
pop
jmp
mov
mov
mov
les
xchg
mov
call
imul
push
jge
add
push
lods
adc
pusha
sub
add
sub
test
push
out
lds
sub
(bad)
mov
or
xchg
add
ins
add
jge
add
push
add
add
jle
dec
rol
add
or
mov
dec
sub
or
sbb
add
sbb
shl
or
(bad)
aam
hlt
push
add
jl
dec
push
push
or
add
push
and
test
or
mov
pop
add
test
or
or
add
test
cmps
fsub
sar
cmp
add
mov
push
sbb
sbb
sbb
popf
inc
std
punpckhbw
inc
in
pop
or
sbb
xchg
and
jae
jge
mov
das
mov
cmp
adc
mov
mov
in
test
add
jge
outs
icebp
add
movs
xchg
sbb
call
push
push
mov
dec
xor
rol
cwde
add
fild
pop
xor
dec
popf
add
lods
dec
add
cmp
add
add
and
iret
mov
les
xor
sub
inc
and
rol
push
add
add
adc
push
xor
dec
ficom
les
add
dec
outs
xchg
push
push
rcl
add
jmp
dec
in
cmp
ltr
push
cwde
and
mov
(bad)
jmp
les
in
cmp
add
push
ror
add
les
fdiv
dec
rol
ror
repnz
sub
add
mov
add
add
xchg
push
add
je
leave
add
push
push
pusha
int
add
add
add
xor
push
sub
pusha
mov
add
inc
rol
add
adc
adc
rol
xor
stc
inc
dec
sbb
jne
fdiv
adc
jb
dec
call
hlt
mov
xor
pop
add
clc
add
add
adc
mov
cmps
add
add
popa
(bad)
xor
(bad)
(bad)
push
test
retf
js
add
jne
push
mov
jge
add
pushf
adc
add
inc
add
pop
xchg
dec
jne
call
push
rol
dec
in
inc
and
push
popa
xor
call
and
call
inc
cwde
push
or
cld
ret
cmp
fisttp
popf
mov
mov
call
inc
and
xor
adc
call
or
xor
test
adc
dec
cmp
sub
(bad)
xchg
cmc
test
(bad)
call
add
mov
adc
add
fiadd
call
add
and
adc
clc
in
add
nop
fisttp
(bad)
or
pop
sub
add
fiadd
jnp
mov
mov
into
mov
outs
or
sti
pop
enter
add
inc
pop
mov
add
add
cmp
hlt
loopne
add
int
mov
adc
jne
add
dec
mov
dec
icebp
pop
mov
retf
adc
cmp
test
add
pop
enter
add
pop
aas
aad
leave
popf
add
push
adc
loope
dec
mov
add
test
adc
adc
jo
fild
nop
jae
add
add
add
push
xchg
fistp
xchg
add
pop
cmp
inc
and
js
add
xchg
mov
add
loope
fst
push
fwait
ins
lds
ins
aaa
jno
into
and
pusha
loopne
test
cmp
push
add
nop
bound
push
add
sbb
int3
push
pop
and
add
cmp
xchg
cmp
sub
ds
pusha
sti
add
or
adc
sti
add
clc
jne
mov
mov
shl
mov
or
add
dec
or
add
mov
in
add
adc
test
inc
(bad)
(bad)
push
inc
(bad)
loopne
jne
add
rcl
lea
pop
hlt
sbb
stos
call
xchg
or
add
dec
call
pop
and
mov
mov
ds
add
rol
jmp
inc
add
sbb
push
push
pop
dec
shl
out
dec
inc
bound
and
test
lock
inc
sub
int
push
add
pushf
retf
call
add
inc
inc
or
sar
lods
mov
xor
mov
mov
and
ret
mov
push
(bad)
fdiv
rol
and
xchg
popa
mov
add
adc
test
inc
cwde
push
rol
stc
out
mov
loopne
mov
add
mov
jne
push
adc
punpckhwd
clc
or
fadd
or
and
cmc
jmp
inc
add
dec
rol
lock
cmp
loopne
sub
nop
sbb
xor
push
inc
pop
push
nop
cmp
adc
mov
add
popa
fadd
les
inc
and
add
inc
pop
call
push
and
lds
cmp
or
or
nop
jae
adc
shl
xor
mov
mov
call
add
bound
nop
xor
call
push
call
jbe
push
mov
xlat
push
add
mov
(bad)
mov
or
sbb
add
add
mov
loopne
push
add
dec
fxam
jge
mov
je
hlt
and
stos
xor
dec
movs
sub
dec
mov
push
push
add
xchg
mov
mov
pcmpgtb
movs
push
adc
test
imul
leave
push
mov
push
add
add
or
fld
rcl
push
shl
add
test
xor
add
or
pop
not
and
xchg
rol
pop
and
push
mov
xchg
jo
xor
mov
inc
(bad)
mov
fwait
mov
call
adc
test
dec
(bad)
inc
push
add
push
add
jne
push
arpl
add
idiv
(bad)
call
sbb
cmps
sbb
or
cmp
jo
ins
add
push
inc
inc
mov
and
add
sbb
pop
dec
push
mov
(bad)
loopne
pusha
shr
adc
push
push
call
pop
add
call
xor
movs
push
test
sub
icebp
jg
push
sbb
add
cli
ficom
inc
loopne
mov
cmp
add
mov
mov
xor
test
push
adc
cdq
stc
add
mov
lock
call
lea
add
sub
out
retf
inc
and
cmp
hlt
lahf
xor
or
idiv
call
cmc
inc
enter
call
shr
shr
fwait
jle
mov
jmp
cld
lock
xor
add
into
js
or
push
retf
cwde
pop
dec
rcl
popf
mov
movq
dec
aaa
add
repz
mov
jne
push
push
or
cmp
aad
mov
and
call
movs
fdiv
push
inc
xor
add
pop
push
fisttp
adc
add
xor
jmp
or
call
jge
sub
lea
or
mov
test
push
out
add
jno
add
sub
in
into
test
ret
or
test
test
fs
pop
call
and
adc
or
dec
push
and
fwait
ret
push
jne
add
inc
fidivr
xor
shl
scas
and
and
popa
xchg
mov
mov
add
inc
cs
or
mov
enter
add
jb
and
xor
fs
adc
ret
push
cmp
add
ds
sbb
mov
sti
or
ss
dec
enter
add
add
dec
and
add
push
imul
push
sub
str
call
add
jnp
shl
push
shl
adc
jne
daa
or
fucomi
xchg
idiv
xor
mov
(bad)
add
lock
push
add
outs
adc
mov
mov
add
cmp
jo
mov
push
(bad)
inc
cwde
or
add
ja
inc
pop
add
push
pop
sgdtd
fisubr
nop
push
mov
lea
cld
gs
fimul
cmp
shr
xor
mov
sub
or
stos
dec
gs
scas
int3
xlat
pop
jmp
adc
inc
add
jmp
mov
cmp
or
mov
inc
test
sub
xor
or
mov
inc
sub
stos
mov
rol
inc
cmp
dec
push
add
add
add
sub
add
mov
push
add
cli
mov
ror
in
pop
push
dec
dec
cmp
cs
leave
add
mov
ror
sub
ror
lea
(bad)
cmovno
inc
adc
icebp
mov
push
add
adc
sub
inc
mov
push
add
cld
mov
mov
inc
add
pop
je
add
pop
xor
cmc
mov
and
jno
push
fcom
adc
call
fadd
add
jmp
ds
iret
pop
pop
inc
mov
ret
add
sub
inc
push
movs
test
les
cs
test
rcr
lods
jge
leave
or
mov
and
mov
call
call
mov
push
push
test
pop
inc
dec
pop
ret
arpl
inc
mov
mov
sub
out
mov
cmp
test
lgdtd
add
add
test
mov
pop
ret
inc
add
cmp
movs
mov
inc
pop
dec
movs
adc
and
push
lahf
cli
xchg
lods
push
pusha
add
mov
mov
pop
add
pop
jle
add
int3
or
jmp
xor
add
addr16
push
out
and
adc
sub
iret
add
push
adc
leave
sahf
daa
or
sbb
in
add
pop
sub
add
call
push
lea
add
adc
shl
ins
add
xchg
jne
inc
rol
pop
adc
gs
retf
stc
pusha
out
ror
adc
cdq
xchg
and
adc
mov
aad
inc
inc
pop
mov
sub
fcomp
pop
adc
jl
mov
and
xchg
and
add
imul
xor
inc
adc
out
push
cld
mov
sti
pop
mov
pop
push
(bad)
cli
add
cmp
test
xor
or
pop
add
mov
add
adc
add
ret
add
and
xlat
addr16
loope
add
jge
mov
shr
pause
movs
inc
add
add
call
test
int3
add
mov
add
pop
mov
call
loopne
pop
cmp
ss
bound
add
das
and
pop
(bad)
jp
mov
add
and
sub
push
or
xor
push
sub
add
push
dec
rol
mov
add
push
adc
dec
test
ret
add
adc
test
lds
nop
dec
pop
or
add
and
sub
mov
jecxz
xor
(bad)
out
pusha
and
add
ins
push
mov
das
or
cs
add
mov
or
(bad)
and
arpl
pop
adc
je
les
js
inc
jl
sbb
test
add
dec
dec
mov
ret
mov
jo
call
pusha
add
call
add
inc
adc
inc
and
inc
add
push
pop
data16
test
int
add
mov
movs
in
jmp
inc
jmp
jne
test
stos
inc
cmp
add
or
add
mov
add
mov
jbe
(bad)
fcomp
mov
add
ret
cmp
sbb
sbb
in
add
fidivr
add
adc
add
mov
icebp
in
or
push
sbb
test
push
or
test
add
pop
in
dec
test
add
jo
call
pusha
dec
inc
loopne
adc
cmps
push
call
xchg
jne
and
add
xor
call
repnz
or
mov
mov
pop
push
adc
push
cmp
xor
adc
mov
mov
rcl
outs
add
ret
inc
inc
test
add
cmp
add
dec
or
xor
jo
and
adc
mov
dec
push
mov
jo
mov
or
sbb
test
inc
dec
xor
and
or
leave
(bad)
mov
jne
push
ins
mov
and
dec
mov
jmp
and
add
mov
add
inc
add
add
dec
adc
mov
sbb
and
adc
sbb
and
mov
add
add
rcr
or
fild
push
or
mov
sub
add
push
and
push
mov
push
test
test
(bad)
rol
pusha
icebp
mul
mov
aaa
cmps
add
add
dec
call
add
push
xchg
mov
popa
pop
push
and
add
mov
add
xchg
lahf
push
fadd
sub
and
leave
xor
(bad)
fadd
rcl
add
cmp
sub
push
and
or
pop
add
lods
inc
inc
push
add
adc
pop
push
adc
pop
adc
mov
push
push
dec
jmp
test
and
pop
jno
shr
adc
adc
adc
ds
push
inc
cmovo
xlat
cmc
sti
xor
sbb
sbb
or
add
or
clc
mov
cmp
mov
and
inc
pop
movs
sbb
sbb
jnp
iret
enter
jmp
push
or
mov
pop
or
push
enter
sahf
push
add
xor
mov
or
sub
mov
ja
pop
adc
std
and
push
and
imul
dec
popa
add
add
add
inc
and
push
int3
psubb
sbb
mov
sbb
sub
add
enter
add
test
mov
cdq
add
add
add
popf
inc
xor
add
iret
xor
in
sub
in
xor
add
enter
xor
add
enter
test
js
call
lea
(bad)
mov
add
dec
mov
or
inc
push
xchg
add
mov
test
and
add
ror
test
les
sbb
clc
out
inc
pop
ret
bound
dec
lea
add
add
add
and
push
leave
mov
mov
jle
or
xchg
or
fs
or
sub
inc
xor
mov
clc
(bad)
in
lds
add
(bad)
(bad)
jmp
bound
adc
add
arpl
add
add
or
pop
inc
jne
rol
les
ds
call
mov
add
add
sbb
call
add
(bad)
inc
ins
nop
dec
mov
dec
jne
dec
xor
cmp
mov
rcl
add
cmp
xor
mov
sub
jne
add
call
mov
addps
xor
push
cmp
rol
mov
or
call
push
sbb
push
call
and
aam
sub
adc
cmp
add
add
pop
sub
add
xor
lock
pop
std
push
repnz
mov
push
adc
hlt
cmp
push
outs
das
scas
push
clc
out
push
add
pop
sub
push
add
or
call
call
dec
js
mov
add
and
dec
call
call
sub
popa
dec
test
add
rol
shl
xor
test
loop
mov
sbb
call
inc
mov
popa
xchg
or
shr
sub
ror
add
(bad)
add
ins
aaa
mov
(bad)
xor
mov
xchg
std
add
push
add
push
rol
pushf
pop
in
add
add
inc
add
add
push
jmp
jne
(bad)
rol
add
inc
and
rcr
dec
pop
in
jge
add
clc
lea
lock
ret
sub
xor
sbb
loope
loopne
jmp
add
lea
add
call
cmp
and
mov
je
sub
pop
push
inc
or
add
sub
sbb
sbb
test
pop
test
addr16
add
mov
add
inc
aam
or
jecxz
test
bound
shr
push
or
adc
adc
xor
push
push
rcl
cwde
jmp
add
jle
bound
outs
add
add
mov
cmp
xor
push
popa
add
add
add
arpl
shl
add
inc
cmp
push
add
inc
mov
stos
rol
and
xor
call
add
pop
or
or
add
xor
push
add
call
sbb
mov
inc
adc
add
mov
sub
ss
push
(bad)
fiadd
ret
and
pop
loopne
add
jne
rol
cld
in
test
call
and
call
loopne
les
fnstsw
add
pop
adc
cmp
std
bound
jg
xor
mov
sub
lea
pop
ds
mov
mov
push
cmp
add
jl
push
ds
pop
add
test
mov
jge
jb
xor
add
xchg
and
test
push
mov
dec
add
or
xor
loop
pusha
loopne
cmp
jo
lea
cmp
and
(bad)
lock
jl
dec
push
sbb
mov
sub
and
inc
xor
xor
inc
outs
icebp
cmps
inc
mov
add
adc
add
inc
mov
inc
lods
pop
enter
shr
inc
jmp
add
pop
mov
fld
loopne
jnp
call
adc
add
dec
daa
int
mov
adc
add
inc
cmp
or
or
out
rol
xor
add
push
push
inc
mov
xor
call
dec
add
push
and
and
iret
cld
add
add
mov
daa
je
icebp
adc
rol
push
iret
add
push
mov
push
repz
add
add
lea
aam
jne
cmp
shl
test
adc
add
test
or
test
add
mov
or
inc
shr
ret
out
mov
add
cmp
aaa
and
call
lea
add
pop
sbb
or
loopne
cmp
add
add
in
add
loop
or
push
ret
jnp
imul
add
push
lock
inc
push
and
pop
stos
call
push
add
add
(bad)
sub
fld
(bad)
dec
jne
add
ret
ins
sahf
dec
cmps
(bad)
xor
fmul
sbb
rcl
in
jne
and
arpl
adc
dec
jg
mov
mov
loopne
add
xchg
loopne
cli
add
add
inc
push
adc
push
add
inc
mov
push
add
xchg
fsubr
add
inc
fist
add
add
lock
or
add
ret
dec
adc
hlt
pop
push
ror
adc
jmp
add
push
mov
mov
call
sbb
add
cmp
cmp
adc
call
dec
outs
adc
push
push
mov
mov
add
add
das
jne
call
adc
jge
loopne
(bad)
mov
jl
push
push
inc
popf
xor
inc
mov
mov
add
adc
add
ret
push
retf
push
xlat
call
cmp
sar
rcl
popa
shl
cmp
or
fcom
push
ror
dec
and
add
mov
stos
xchg
mov
push
push
dec
imul
cli
add
jmp
add
and
jmp
mov
mov
pop
add
dec
ss
and
add
dec
adc
sub
fmul
push
or
cld
jne
ret
jne
cwde
add
add
cmp
push
ja
mov
call
in
dec
inc
bound
cmp
hlt
xor
jae
cld
sar
loopne
push
pushf
xlat
jmp
ret
jne
push
mov
sub
push
xor
jge
add
mov
and
addr16
push
inc
inc
cmp
sbb
pop
bound
movs
sbb
add
push
add
mov
mov
mov
call
xor
int3
arpl
push
and
adc
add
push
push
pop
aam
inc
ins
mov
out
aad
(bad)
inc
test
xor
adc
sub
(bad)
loopne
lock
arpl
dec
(bad)
jmp
adc
lea
data16
rol
jp
mov
jmp
scas
jb
sub
inc
add
add
cmp
jbe
push
in
shl
mov
or
and
cmp
push
data16
std
psubusb
rol
add
aad
push
in
mov
mov
add
add
ss
mov
adc
sbb
(bad)
loope
call
div
jmp
pop
pop
add
and
pop
cmp
mov
add
ins
dec
jns
fimul
push
or
adc
mov
lock
stc
cmp
bound
add
add
prefetchnta
sbb
xor
mov
jmp
push
inc
inc
jns
adc
xchg
xor
xor
(bad)
repnz
pusha
fiadd
xchg
add
add
ss
add
jmp
push
mov
add
add
or
(bad)
xor
loop
mov
add
cmp
xabort
cmp
push
loopne
adc
lea
jb
push
loop
(bad)
or
xor
mov
jne
add
jno
add
pop
int
int
sbb
or
shl
mov
call
shl
pop
xor
pushf
jb
jecxz
or
loop
call
test
icebp
popa
add
lea
add
jno
dec
and
js
push
dec
xor
mov
inc
and
push
add
pop
adc
mov
into
lods
mov
push
add
pop
or
daa
inc
and
add
inc
inc
mov
pop
pop
(bad)
daa
xchg
into
sub
dec
push
push
add
dec
add
add
dec
or
mov
(bad)
enter
adc
(bad)
jl
inc
jl
mov
rol
adc
and
fwait
add
or
out
pop
xchg
inc
pop
sub
sbb
add
imul
cdq
in
jmp
sub
sbb
add
add
add
jp
inc
aas
int
cld
add
adc
loopne
add
pusha
push
xor
pop
add
fcomp
or
jbe
xor
sub
rol
daa
add
shl
xchg
rcl
inc
dec
xor
xor
cmp
invd
push
repz
gs
mov
adc
inc
dec
ins
fisub
inc
add
movntq
ret
sbb
push
mov
leave
push
inc
popa
sub
push
clc
pusha
and
bnd
pop
cmp
ror
ss
sbb
adc
xor
out
je
add
mov
pop
add
jp
add
adc
add
add
cmp
add
add
jb
mov
xlat
shr
mov
mov
rcl
jo
sub
popa
add
or
ror
jmp
(bad)
lea
outs
add
call
add
adc
rol
ret
(bad)
cvtps2pd
or
sub
push
dec
sub
add
ror
mov
pop
call
or
mov
xor
je
push
enter
rcr
sbb
cld
add
add
add
mov
dec
inc
cmps
and
add
add
leave
mov
pop
add
pusha
add
push
dec
mov
push
ror
add
xor
dec
xor
dec
icebp
mov
(bad)
dec
xor
lea
in
mov
and
inc
aad
add
jge
add
mov
clc
rol
clc
add
test
add
lea
pop
pcmpgtd
sahf
jne
add
out
ins
jge
fdivr
add
inc
add
repnz
lock
cmps
add
xor
add
xor
shl
cli
add
mov
mov
loopne
add
add
add
mov
and
or
inc
ror
jbe
add
cmp
clc
inc
sbb
mov
or
inc
mov
ins
rol
scas
add
lock
dec
lds
inc
add
mov
call
inc
or
inc
add
nop
and
add
movs
sar
call
imul
pop
test
test
retf
mov
sti
pop
or
rol
(bad)
aas
rol
pusha
rol
rcl
sbb
cmp
xor
dec
mov
shl
add
add
and
in
add
fsubr
ret
add
sub
sbb
sub
pop
neg
or
and
dec
popa
or
add
xchg
push
or
push
or
cmp
loope
add
(bad)
sbb
or
adc
or
adc
or
add
push
or
pop
test
ror
sbb
and
inc
dec
jl
add
add
inc
add
add
or
rcl
lods
movs
(bad)
push
inc
jle
cmp
adc
lea
mov
add
ror
scas
add
xchg
test
or
jne
test
inc
add
add
add
xchg
repz
rcr
mov
jmp
ret
inc
jmp
inc
add
mov
push
test
mov
or
and
xor
mov
push
sbb
mov
add
mov
cmps
(bad)
and
jg
inc
call
xchg
xor
sub
push
push
xor
push
push
adc
mov
xor
add
mov
scas
les
inc
adc
sub
push
adc
shr
(bad)
and
js
int3
push
aam
rol
push
and
fs
or
bound
mov
int3
loopne
call
loope
mov
add
xor
add
cwde
mov
xor
icebp
push
outs
mov
push
test
or
sub
inc
shr
cwde
clc
jne
adc
cmp
movs
je
lock
jmp
xchg
pop
and
xor
leave
jecxz
jmp
add
inc
mov
xor
add
sahf
dec
push
into
and
or
int
jl
and
cmp
add
adc
mov
inc
fnstcw
lea
nop
arpl
mov
outs
jmp
add
dec
ret
jge
push
loope
mov
and
sbb
and
pop
jp
xor
add
jmp
push
add
xchg
add
push
add
mov
popa
mov
and
call
xor
add
imul
nop
shr
inc
cmp
test
inc
daa
sub
mov
add
add
call
add
add
jmp
add
jge
jno
add
mov
push
add
into
inc
add
add
call
call
leave
push
jo
repz
add
dec
or
sbb
jne
mov
xchg
push
ret
and
sti
ins
push
inc
push
add
fidiv
add
adc
jmp
outs
cmp
jne
adc
inc
dec
mov
ret
les
xor
sbb
jg
stc
mov
fcom
inc
shl
or
mov
fwait
push
call
cmps
scas
call
mov
das
shr
xor
pop
pop
shl
and
push
or
add
inc
mov
add
adc
and
jmp
out
push
jmp
ret
js
sub
dec
add
and
cmp
cmp
fsubr
rol
addr16
inc
add
(bad)
paddusw
inc
add
mov
push
and
dec
js
mov
or
push
call
jge
call
data16
mov
mov
add
cmp
pop
imul
(bad)
cmp
push
add
je
enter
and
ret
call
push
add
call
enter
mov
add
add
add
add
push
scas
loopne
and
sub
add
inc
(bad)
push
cmps
jo
fadd
mov
add
je
add
call
and
push
add
inc
pusha
pusha
xor
int
or
and
add
xchg
int
enter
xor
add
sbb
add
jge
loopne
push
aam
and
dec
hlt
enter
ins
add
inc
mov
pop
adc
add
add
ret
dec
sub
xor
sub
mov
loope
aaa
(bad)
(bad)
mov
movs
dec
inc
add
popf
les
lahf
and
add
mov
or
dec
cmpps
mov
mov
pop
(bad)
sub
les
mov
jne
test
push
ror
clc
lea
inc
inc
rol
or
fwait
adc
movs
fs
jno
ret
dec
pop
xor
loope
cmp
push
mov
call
push
cmp
lea
repnz
or
add
jb
cld
add
jne
inc
add
mov
or
cdq
rol
add
jne
add
mov
and
adc
ds
add
in
(bad)
xor
or
add
ret
cld
or
sbb
xor
push
mov
call
mov
sub
dec
jge
and
les
and
jg
cmp
lea
add
call
and
int
cmp
mov
(bad)
adc
jno
(bad)
popa
ror
loope
pop
add
rol
push
or
dec
or
mov
mov
xor
mov
cli
push
jne
add
inc
mov
popf
data16
js
add
xor
dec
jno
push
add
in
adc
push
pusha
xchg
xor
rcr
pop
sub
inc
movs
dec
add
test
jne
or
or
push
call
adc
in
add
pusha
push
ins
jmp
sbb
sbb
mov
pop
xchg
add
adc
daa
pop
popf
mov
push
cmp
inc
ss
dec
adc
push
and
mov
jnp
add
call
test
mov
add
push
inc
push
fadd
push
cmp
add
popa
and
or
fdiv
dec
add
add
jp
pop
add
add
mov
jle
mov
and
adc
test
dec
ja
inc
dec
jns
sbb
je
cs
inc
mov
adc
jne
or
add
and
adc
rol
fisub
cmp
push
mov
cmps
add
add
jge
std
ins
add
ja
fs
mov
je
add
mov
xor
push
dec
mov
sbb
jge
(bad)
push
adc
or
mov
pop
dec
pop
sub
dec
pop
jns
mov
outs
ror
dec
xchg
xchg
mov
data16
icebp
add
test
xadd
pop
add
jno
dec
pop
pusha
inc
push
add
inc
mov
mov
pop
add
leave
or
(bad)
enter
pop
add
arpl
push
data16
fadd
jne
mov
call
jno
jmp
jne
loopne
icebp
inc
mov
cmp
out
add
mov
loop
add
mov
test
dec
jmp
pop
xchg
pusha
mov
fmul
enter
push
lea
add
inc
xchg
inc
or
push
popa
fild
jle
mov
add
lock
pusha
fsubr
mov
nop
push
out
add
inc
sbb
add
test
jmp
add
outs
push
add
xor
call
add
rcl
dec
pop
sbb
shr
add
xor
cmp
pusha
inc
mov
push
dec
addr16
and
add
add
sub
sub
jge
popf
sub
mov
xor
mov
les
(bad)
fucom
push
jge
add
add
shl
or
add
dec
rol
inc
adc
scas
(bad)
jge
add
popa
call
or
sub
rcr
pop
or
mov
add
sub
pop
pop
xchg
or
nop
in
pop
sbb
sbb
dec
pop
adc
add
jb
add
(bad)
aad
fadd
add
adc
cwde
hlt
jne
add
cli
jo
push
inc
mov
inc
dec
inc
add
mov
test
push
rdtsc
add
add
test
and
icebp
sahf
call
pop
push
fsubr
add
call
add
xor
fimul
call
add
inc
imul
nop
inc
add
cmps
enter
add
or
cmp
jne
call
xchg
in
adc
aam
lock
add
sub
inc
and
jp
rol
add
in
add
xor
jmp
je
and
mov
ss
pop
loopne
mov
shr
jl
or
push
push
dec
into
add
mov
push
or
inc
push
fadd
push
mov
pop
dec
loope
pop
arpl
sbb
les
add
pop
add
cwde
xchg
call
jecxz
inc
jo
xor
mov
lea
adc
mov
fiadd
push
jne
push
mov
xor
sbb
lods
lock
mov
add
fwait
inc
mov
mov
pop
pop
push
(bad)
(bad)
xor
add
dec
jno
outs
cmp
sbb
adc
jo
dec
add
add
cmp
leave
xchg
push
pushf
push
inc
paddw
push
call
cmp
adc
loopne
jmp
lea
dec
pusha
jmp
adc
call
mov
add
mov
dec
cmp
add
jmp
add
pop
call
cwde
or
add
and
and
jnp
add
rol
jmp
sbb
add
mov
xor
inc
shl
jne
sbb
cwde
aam
add
inc
pusha
mov
adc
push
add
push
mov
pushf
add
inc
loop
mov
sbb
or
sbb
add
mov
outs
ror
mov
lea
inc
test
enter
inc
sub
dec
xchg
sub
and
xchg
nop
and
adc
(bad)
dec
enter
test
add
add
add
(bad)
pop
adc
test
addr16
sub
sbb
add
mov
ret
int
scas
std
pop
inc
loope
add
fadd
(bad)
aad
xchg
add
add
es
mov
push
ret
in
sub
add
add
pusha
pusha
inc
cs
mov
jmp
sbb
and
je
jo
out
or
jge
mov
outs
cmp
xchg
jbe
outs
fisubr
pop
mov
cmp
rcl
add
test
mov
fadd
add
sbb
outs
add
xor
add
sub
and
rol
fld
call
jns
pop
pop
pop
cmp
dec
adc
les
xchg
cmovo
add
icebp
add
push
cmp
(bad)
mov
sub
in
inc
std
add
adc
add
jmp
add
shl
enter
ret
push
add
pushf
fadd
xor
je
shr
test
loopne
and
and
and
sub
fwait
sbb
dec
dec
inc
(bad)
ficom
pop
pusha
jl
cmovs
mov
push
mov
add
jmp
lock
push
je
add
pop
inc
xchg
cmp
add
jo
dec
cmp
pop
cmp
loope
in
or
push
push
add
ret
dec
inc
add
add
mov
outs
sbb
lock
add
call
mov
add
popa
add
adc
popf
add
das
pop
or
push
cmp
out
or
mov
jae
xor
xchg
add
clc
push
sar
lock
call
and
sub
inc
sub
shl
jge
inc
ror
adc
dec
call
xchg
jmp
jae
call
add
addr16
ds
mov
push
std
mov
sbb
inc
mov
mov
add
adc
or
call
jne
mov
mov
inc
test
add
ds
mov
pop
push
call
movs
jb
jmp
mov
sbb
sbb
ret
pop
mov
and
mov
shl
call
mov
sub
push
mov
and
ins
and
mov
mov
(bad)
adc
cmp
ds
push
add
push
repnz
or
es
inc
mov
push
jmp
aas
xchg
daa
push
xchg
nop
add
cmp
mov
or
pop
pop
add
cmp
str
sub
push
mov
mov
fadd
add
loop
and
inc
jge
lds
jo
add
mov
dec
push
xor
add
mov
or
push
add
call
call
jae
data16
mov
sahf
rcr
call
pop
inc
sub
push
push
les
mov
push
cmp
fcom
dec
add
push
mov
out
call
add
call
add
daa
stc
add
push
cs
lods
ror
fs
add
add
test
add
add
fcomp
(bad)
in
add
outs
adc
push
adc
xchg
add
mov
clc
enter
add
unpckhps
add
xlat
in
push
(bad)
push
or
push
not
add
mov
shl
xchg
add
jl
cmp
push
xor
mov
or
rol
pop
fs
add
rol
sbb
rol
add
gs
sub
mov
dec
inc
enter
push
mov
outs
dec
cs
imul
jne
fidiv
sub
(bad)
call
xchg
or
adc
loopne
inc
or
push
stc
into
and
dec
mov
movs
call
inc
in
add
dec
push
add
mov
push
add
dec
je
aad
push
call
add
add
ret
add
call
add
inc
mov
inc
test
shl
add
loop
lock
and
cmp
stos
xchg
inc
add
add
nop
or
add
mov
dec
push
scas
or
add
(bad)
xchg
or
pusha
pop
xchg
or
std
mov
daa
and
add
and
ins
or
or
push
iret
scas
and
inc
inc
or
call
enter
push
(bad)
xchg
cmp
add
add
adc
adc
add
shl
add
ret
pop
dec
and
dec
js
not
add
dec
adc
scas
inc
nop
lock
sub
add
and
lock
and
mov
add
add
push
add
pop
icebp
test
add
fist
mov
add
pop
(bad)
jmp
clc
add
data16
inc
and
add
sar
cmp
hlt
xor
fs
ror
push
push
bswap
xchg
pop
lods
add
lock
psubsb
test
pop
cmp
bound
lock
sbb
(bad)
adc
adc
xor
(bad)
mov
add
loopne
ins
mov
xadd
adc
inc
push
mov
add
add
add
loope
ror
lea
dec
sbb
sub
push
and
mov
cld
add
sar
mov
and
test
sub
and
mov
sub
add
dec
mov
rcl
cmp
add
mov
sti
add
add
ret
call
clc
inc
inc
push
xor
add
push
add
mov
add
add
(bad)
nop
cmp
int
sbb
add
test
push
push
push
push
fwait
sub
adc
call
leave
dec
xchg
aas
ror
hlt
loopne
and
push
mov
add
and
ja
mov
add
add
cmp
stc
adc
enter
mov
sub
mov
add
add
inc
inc
int
leave
mov
cld
mov
xor
adc
aaa
(bad)
dec
fwait
push
or
add
repnz
shr
mov
push
mov
inc
ret
ss
push
repnz
lock
mov
mov
sbb
adc
pusha
js
add
or
pusha
fdiv
push
ins
popf
add
cli
fadd
add
mov
xor
xor
inc
and
ret
push
cld
scas
and
jae
inc
idiv
adc
ja
add
es
add
or
(bad)
cmp
lea
add
repnz
add
inc
sbb
sbb
daa
lods
push
jl
or
or
push
adc
add
mov
add
xlat
dec
sbb
loopne
inc
or
push
push
add
psrad
jmp
psubsb
mov
inc
inc
enter
mov
xor
in
push
add
(bad)
cmc
inc
xor
and
add
mov
call
dec
cdq
xor
icebp
mov
(bad)
and
or
xchg
adc
jge
adc
(bad)
and
inc
inc
and
add
bound
nop
das
dec
jmp
test
inc
pop
add
mov
dec
adc
or
add
inc
lock
aad
out
xor
ins
sbb
add
call
cmp
call
mov
pop
or
inc
add
push
dec
mov
xchg
jp
add
(bad)
jo
add
lock
add
add
std
ror
and
loope
or
xchg
sbb
add
pop
push
test
or
mov
dec
xor
push
or
test
add
adc
add
dec
add
mov
shl
pusha
add
pop
xor
lds
push
mov
inc
fsubr
pop
add
or
add
sbb
add
pop
pop
and
jmp
pop
push
mov
mov
add
inc
add
push
xchg
ds
call
push
add
and
call
mov
sub
jbe
popa
sub
inc
fmul
in
push
add
mov
or
add
add
ret
ret
les
enter
add
and
add
push
call
and
out
sti
ret
push
add
mov
lods
cs
or
dec
cmp
clc
add
ret
add
sub
add
sbb
call
(bad)
int3
ins
add
(bad)
dec
mov
add
add
ss
mov
call
or
test
fcom
add
call
ret
add
add
mov
pop
pop
pop
fadd
sar
add
inc
dec
nop
inc
adc
pop
add
dec
pusha
jmp
fcom
dec
call
call
rol
add
call
jmp
push
pop
push
xor
jbe
xchg
syscall
pop
add
rol
popf
pop
push
outs
xchg
and
and
lahf
add
sbb
ror
call
std
and
dec
call
add
jmp
rcl
and
cmp
mov
add
mov
pusha
sbb
push
push
ret
scas
push
movs
rol
pop
inc
data16
mov
fs
sub
call
dec
lods
mov
xor
add
mov
add
add
cmp
(bad)
mov
and
loopne
lock
add
fadd
call
call
call
push
cdq
add
mov
lock
push
mov
(bad)
popa
add
inc
push
shr
addr16
fisubr
mov
outs
out
call
jne
cmp
adc
stos
aas
or
add
cmp
fcmove
xor
or
adc
xchg
shl
push
add
push
(bad)
mov
cmp
add
pop
loop
ret
jge
es
pop
inc
gs
clc
adc
or
mov
adc
shr
xlat
ret
inc
jbe
ret
add
mov
and
xor
push
add
push
dec
ret
les
sbb
fmulp
and
add
aaa
(bad)
psubusb
jne
sbb
add
add
and
dec
dec
push
dec
add
mov
inc
test
dec
or
fsubr
push
add
add
push
add
adc
xor
jno
add
mov
(bad)
outs
or
add
(bad)
call
cmp
cmp
add
jo
inc
test
(bad)
cmps
push
mov
lea
jle
mov
xchg
(bad)
pop
sub
aaa
or
jg
fisttp
add
push
sbb
or
pop
call
or
xor
call
mov
sbb
push
sub
add
test
mov
mov
push
pop
rcr
add
add
inc
lahf
add
arpl
cwde
int
dec
mov
cli
or
fdiv
std
mov
lds
xlat
sbb
dec
add
add
inc
mov
call
mov
push
shl
push
les
push
pop
add
add
loopne
sub
add
add
add
call
fdivr
push
mov
push
jne
xchg
pusha
adc
add
push
std
fnsave
push
mov
pusha
loope
rol
mov
ins
shl
jns
or
inc
mov
repnz
shl
loop
add
(bad)
dec
sub
push
ror
nop
sub
std
loopne
sbb
mov
jnp
or
add
jmp
lea
aam
mov
dec
dec
or
xor
xchg
sbb
dec
ins
mov
adc
sahf
add
rcl
adc
loope
lock
xchg
push
cmp
arpl
mov
mov
dec
or
(bad)
ja
dec
inc
dec
inc
sub
push
aas
push
inc
clc
and
xor
add
cmp
add
sub
add
and
ins
xchg
arpl
jp
scas
mov
mov
push
dec
loop
push
cmp
mov
mov
inc
call
test
add
popa
das
pop
shl
inc
xchg
jmp
dec
and
xor
add
xor
ds
add
dec
ins
xor
sub
aaa
add
shl
enter
call
and
ins
push
int
xchg
shl
fdiv
mov
in
sar
dec
jge
push
add
add
mov
aam
inc
xchg
push
and
call
lahf
mov
add
push
adc
sub
or
loop
add
inc
push
pusha
add
call
jmp
add
or
daa
inc
or
sbb
ins
enter
mov
jno
jl
dec
aas
add
xor
iret
sbb
jns
xor
pop
add
add
call
or
xor
lock
mov
dec
mov
dec
test
add
mov
ds
or
ja
push
and
pusha
adc
add
push
inc
bound
pop
mov
push
es
add
pusha
mov
add
fld
pusha
push
rcl
push
pop
sbb
jne
add
and
les
jge
add
ja
add
add
add
mov
das
jo
add
add
daa
call
push
add
test
test
add
in
push
and
add
jo
jmp
sub
jno
cmp
ret
inc
(bad)
fdiv
add
push
push
mov
xor
popf
inc
fs
outs
ja
cmp
or
enter
and
(bad)
add
xor
adc
pop
push
inc
sub
lods
jo
mov
mov
add
inc
stos
push
add
das
xchg
sub
call
push
jnp
lock
les
add
es
mov
push
or
fsub
into
mov
mov
ja
lods
or
inc
and
add
repz
loop
inc
dec
push
sub
add
ror
aam
inc
add
sbb
rol
sbb
nop
add
add
add
mov
dec
add
and
or
inc
mov
call
cmp
retf
nop
pusha
push
call
mov
push
push
sub
mov
fs
je
add
sbb
jge
xchg
jmp
add
loop
dec
pop
xchg
add
bound
adc
push
add
call
inc
or
test
scas
test
ror
or
add
xor
inc
add
test
call
test
add
jg
call
popf
mov
add
ss
xor
and
adc
add
adc
and
mov
call
inc
pop
add
cmp
add
fbld
jp
mov
add
(bad)
call
or
sar
push
fadd
or
push
add
dec
xor
sbb
rcl
in
push
retf
add
stc
mov
add
adc
cwde
shr
fidiv
or
pusha
mov
add
add
mov
xchg
xor
inc
jno
push
jo
mov
rol
dec
push
dec
adc
clc
enter
inc
cli
sti
push
and
inc
out
xchg
add
push
push
xchg
psubsb
pusha
inc
jmp
or
loope
adc
mov
xor
add
inc
pusha
jmp
add
test
mov
syscall
mov
out
adc
lahf
pop
(bad)
adc
push
dec
push
pop
add
das
ins
jae
test
(bad)
fild
sub
add
in
add
sub
add
dec
sub
or
dec
mov
add
pusha
inc
call
jno
test
pop
cmp
or
adc
(bad)
dec
je
cmp
dec
adc
add
pop
and
add
jmp
cmp
inc
add
test
add
ss
cmp
loopne
push
jmp
jno
popa
inc
push
jg
xor
push
add
add
mov
lds
(bad)
and
fucomi
popa
jne
inc
or
add
push
or
ud2
popf
add
or
mov
pop
adc
push
mov
mov
sub
call
out
add
jb
add
mov
rol
(bad)
std
call
add
mov
data16
ror
xor
jne
mov
test
sub
sub
mov
add
adc
loop
add
xchg
inc
add
inc
add
cmp
cmp
repnz
shl
sub
mov
rol
add
pop
jmp
cwde
mov
mov
pop
add
and
stos
add
add
or
cwde
mov
add
mov
popa
mov
call
inc
clc
sub
pop
pop
xor
xlat
scas
mov
mov
add
lahf
add
pop
dec
mov
add
inc
add
or
and
add
test
sbb
sbb
stc
call
and
sub
cmp
add
add
ror
cmp
mov
call
loop
xor
add
iret
inc
mov
cmp
add
sub
je
mov
cmp
inc
add
add
inc
push
add
add
and
mov
in
add
inc
call
and
clc
fiadd
mov
mov
call
add
inc
xor
xor
inc
add
in
loopne
dec
fiadd
cs
add
dec
inc
add
and
sub
sub
xchg
call
stos
call
sub
add
lahf
in
es
push
jne
out
xor
xchg
cmp
sbb
adc
sbb
mov
and
cmp
and
cmc
add
call
rcl
adc
aam
inc
inc
add
push
ret
lea
push
(bad)
mov
inc
jbe
sbb
xor
call
or
add
xor
sar
add
inc
dec
cmp
test
leave
mov
movs
cmovnp
xor
add
jmp
xor
ss
add
and
add
jmp
add
out
jl
sbb
add
jge
call
mov
add
mov
add
add
test
add
inc
daa
inc
hlt
movs
xor
fs
push
cmp
mov
add
add
fcom
loopne
push
adc
adc
hlt
ins
retf
add
add
mov
add
mov
pop
rol
lds
nop
arpl
adc
lds
inc
call
sbb
rcl
ins
inc
adc
cdq
iret
ss
mov
mov
je
pop
or
push
pop
add
sub
sub
imul
add
loop
add
xor
mov
(bad)
push
cmp
or
sub
rol
sbb
rcl
mov
add
xchg
pop
mov
cwde
add
mov
pop
xlat
or
test
dec
mov
(bad)
mov
fidivr
add
inc
dec
cli
mov
push
rcl
and
add
mov
add
mov
pop
jne
adc
dec
add
inc
inc
inc
jmp
or
test
push
add
in
sub
call
jmp
mov
xchg
dec
popa
in
and
ret
rol
inc
ret
pop
sub
xchg
les
(bad)
push
dec
add
add
push
call
or
loopne
call
pmuludq
mov
pop
js
ret
dec
dec
shr
fmul
inc
jle
ror
dec
inc
and
movs
test
add
test
inc
and
add
push
retf
pop
inc
jge
add
cli
dec
and
push
jmp
cmp
dec
dec
jge
push
ret
inc
(bad)
or
lea
repnz
and
sub
movs
or
(bad)
outs
add
xchg
pop
mov
adc
inc
add
lock
clc
movs
add
add
into
mov
inc
pop
loopne
add
xchg
pop
sub
xchg
dec
add
pusha
pushf
cmp
cmp
inc
add
inc
shl
mov
add
push
(bad)
imul
data16
inc
add
test
test
enter
adc
pusha
mov
mov
or
add
add
push
sub
call
lock
add
mov
add
ret
ins
jmp
aad
add
mov
sahf
leave
xor
loopne
retf
imul
(bad)
mov
xor
add
mov
cmp
test
add
sets
nop
mov
aam
add
adc
jmp
push
sub
adc
add
repz
stc
mov
sbb
push
mov
jecxz
test
pop
lar
sahf
dec
cmps
add
or
push
add
in
lock
add
or
add
add
mov
add
add
inc
jl
add
add
rcl
pop
mov
jge
xchg
rcl
inc
push
je
push
and
std
test
call
xchg
dec
add
and
add
push
out
mov
inc
add
push
cs
and
pop
mov
jo
adc
jmp
jnp
sub
mov
or
pop
jge
xchg
jle
mov
fild
sbb
jo
fsubr
mov
rcl
dec
(bad)
pop
jge
push
inc
add
mov
push
sub
inc
(bad)
lea
call
ret
xchg
add
loope
add
in
push
add
cwde
fiadd
retf
nop
jmp
inc
lds
jmp
enter
ret
xor
cmp
pop
call
clc
shl
and
xor
inc
adc
push
adc
xchg
add
icebp
retf
and
add
(bad)
dec
add
ss
add
in
enter
push
add
xor
pop
call
inc
mov
xor
ins
mov
enter
xor
mov
inc
xor
or
mov
(bad)
mov
test
add
dec
cmp
test
lds
inc
add
mov
std
call
rcl
mov
mov
movd
mov
sub
pop
add
jbe
add
add
je
add
dec
jecxz
sbb
shl
adc
add
add
test
add
add
add
add
adc
lods
jge
lock
repz
and
add
sub
push
xor
jno
push
mov
xchg
and
(bad)
pusha
lahf
sbb
mov
sub
into
add
add
call
test
add
and
dec
and
adc
mov
add
push
not
mov
mov
mov
leave
rol
mov
call
rol
and
push
mov
mov
ret
push
add
call
inc
push
pop
les
call
add
xchg
push
and
or
jo
and
popa
loopne
sbb
xor
push
add
or
add
mov
add
add
in
ins
sti
call
lea
mov
xor
add
mov
cmp
jmp
adc
rol
aam
leave
lock
push
lods
call
repz
pop
retf
out
retf
movs
or
je
out
add
pushf
add
add
add
dec
jne
jecxz
call
add
mov
call
dec
xor
bound
ret
call
push
dec
stos
push
in
push
test
and
add
or
push
pop
cwde
add
xor
lock
bswap
das
or
add
call
mov
mov
push
push
add
xor
dec
fiadd
enter
add
das
pop
cli
add
call
int3
ret
add
or
jge
add
sbb
pop
xchg
add
add
mov
rcl
sahf
add
push
adc
adc
mov
cmp
xor
add
inc
add
add
pusha
ror
ret
daa
cmp
xadd
inc
dec
call
sub
or
inc
and
fcmovu
test
cmp
loop
sldt
les
mov
add
mov
rol
cld
loopne
sbb
ror
pop
push
add
add
inc
fld
and
or
icebp
mov
add
rcl
jb
pop
cmp
and
lock
movs
mov
push
ret
xchg
fstp
sub
jge
call
push
cmp
add
and
add
mov
rcl
push
cmp
push
dec
nop
pop
in
push
call
add
add
mov
inc
shl
add
add
jmp
rol
add
push
dec
add
xor
jmp
mov
sbb
sub
paddq
test
dec
add
outs
repz
mov
leave
lods
xor
nop
jno
cmp
sub
push
in
sahf
mov
lgs
sub
dec
out
add
add
add
mov
lock
popf
add
mov
add
add
add
adc
loope
ret
add
mov
js
mov
inc
inc
inc
add
mov
push
dec
daa
push
add
add
or
mov
popa
call
cmps
mov
mov
push
pop
lds
nop
dec
add
jne
retf
repnz
cmps
in
inc
pop
(bad)
sbb
inc
cmc
enter
mov
add
add
and
push
mov
das
mov
js
mov
enter
and
sub
jb
or
movs
push
std
xor
inc
hlt
shl
dec
mov
cwde
add
pop
add
mov
push
push
test
pushf
rol
call
fimul
dec
test
and
icebp
mov
inc
call
(bad)
mov
nop
fld
or
sbb
dec
stos
ror
ret
mov
inc
mov
or
enter
nop
addr16
add
xchg
add
mov
cmp
pop
in
dec
push
outs
lea
mov
dec
inc
mov
mov
lds
ror
ret
add
sbb
xor
inc
pop
cmp
std
inc
xor
mov
mov
add
xor
das
cmp
call
add
std
rol
retf
ins
jne
call
clc
mov
push
inc
mov
movs
add
add
cmp
inc
jno
shr
inc
test
and
pop
or
mov
push
test
add
pop
sub
daa
call
sub
cmc
(bad)
dec
loope
call
add
add
cmp
dec
mov
add
sbb
inc
fadd
mov
push
lods
mov
mov
jae
and
repnz
add
sbb
add
adc
add
mov
add
jle
add
xchg
push
int3
fadd
enter
sbb
rcr
or
and
mov
in
adc
scas
adc
and
mov
xor
adc
sbb
add
and
inc
lock
dec
(bad)
pop
rol
xchg
add
push
jge
inc
pusha
inc
push
xchg
push
jae
or
sbb
mov
add
add
pop
das
test
test
pop
aas
dec
push
xor
fucomi
push
fcmovnb
push
mov
cwde
sbb
test
add
fadd
inc
and
add
aaa
xor
jmp
push
pusha
add
sub
add
inc
mov
mov
xchg
(bad)
mov
mov
jg
or
pop
pop
push
mov
popa
inc
add
push
add
add
mov
add
mov
dec
mov
inc
mov
inc
add
add
mov
add
out
add
sub
sar
mov
and
inc
dec
test
and
nop
pop
sbb
push
xchg
ja
nop
and
mov
add
add
rcl
mov
push
jmp
call
leave
fiadd
cmp
push
lea
lahf
mov
cmp
jo
jge
inc
push
or
add
(bad)
call
test
lock
(bad)
sub
push
dec
adc
or
mov
xor
add
shr
add
test
mov
dec
xchg
shr
push
adc
or
add
fcomp
and
fild
dec
pop
(bad)
jmp
push
imul
jle
push
inc
jne
xor
fdivr
psubb
call
shl
fistp
push
jne
adc
mov
test
ret
add
jne
add
call
out
or
adc
and
jne
cmp
bound
sar
add
adc
or
push
push
push
(bad)
jmp
mov
mov
sbb
pusha
add
fadd
add
add
inc
add
xchg
push
out
or
(bad)
call
and
adc
lock
clc
inc
add
add
outs
push
add
shl
(bad)
mov
test
xchg
sub
jmp
ja
add
add
inc
xchg
mov
inc
test
mov
mov
and
cmp
and
mov
call
dec
mov
adc
sbb
test
leave
cmc
xor
cs
iret
shl
or
mov
push
or
fld
mov
xor
ins
sub
pop
pop
inc
jb
call
push
sbb
push
inc
inc
repz
enter
aam
pop
loopne
lahf
push
jne
push
lds
xchg
pop
dec
inc
mov
adc
rcl
hlt
shl
inc
leave
ret
test
jne
and
call
mov
adc
shl
add
jge
(bad)
clc
les
add
(bad)
cld
mov
or
rol
sti
gs
loope
les
add
(bad)
(bad)
jge
sub
and
and
mov
add
add
sbb
mov
dec
add
fsubr
test
sar
mov
push
push
loope
je
push
retf
cmp
sub
test
mov
pop
pusha
ds
mov
or
loop
sub
xor
xor
or
add
adc
jno
mov
(bad)
mov
dec
mov
push
cmp
ds
pop
add
mov
mov
shl
call
fidiv
cmp
add
inc
leave
jo
xchg
add
cld
fdiv
dec
dec
xor
dec
fadd
and
mov
push
inc
retf
sbb
adc
add
push
or
div
mov
add
add
sub
call
push
(bad)
(bad)
sbb
pop
push
mov
leave
cld
adc
add
les
inc
mov
or
push
push
add
xlat
(bad)
fcmovb
xchg
sgdtd
call
bound
cmp
test
add
(bad)
adc
cld
push
(bad)
jge
fild
sbb
push
add
push
inc
rol
aaa
lods
mov
pop
xor
adc
jo
enter
jnp
ret
jae
jne
inc
test
mov
xor
hlt
pusha
xchg
mov
or
xchg
sbb
clc
mov
xchg
mov
pop
popa
pop
add
inc
mov
js
jle
mov
out
inc
cmp
add
call
or
jge
pop
inc
ret
adc
jg
psubb
push
sub
adc
aad
arpl
popa
inc
imul
rcl
or
jmp
add
push
cmp
lea
test
pusha
mov
sahf
jne
adc
nop
shl
ret
cmp
sbb
call
sbb
and
mov
and
or
loop
or
test
add
outs
test
(bad)
and
test
mov
inc
adc
mov
xchg
sub
mov
push
add
cmp
hlt
inc
push
ins
call
dec
or
jns
push
outs
inc
fstp
cmp
cdq
sbb
js
add
(bad)
jmp
add
add
jmp
add
jno
add
add
(bad)
and
push
push
movs
mov
add
rol
or
(bad)
or
pop
or
add
mov
mov
cmp
push
mov
pusha
(bad)
push
xor
sub
add
dec
rol
and
push
mov
push
adc
call
and
or
inc
cmp
jge
mov
(bad)
adc
or
jl
sub
push
add
mov
or
pop
add
inc
xor
dec
js
mov
cmp
add
push
add
mov
sbb
jmp
pusha
add
add
mov
cmp
test
mov
xor
rol
add
xchg
adc
add
push
add
les
mov
add
mov
mov
mov
repnz
add
lock
add
adc
and
dec
pop
push
adc
add
sub
hlt
dec
adc
add
add
adc
push
sub
dec
inc
call
add
repnz
mov
and
xchg
adc
add
and
adc
add
popa
push
jb
add
mov
cmp
xchg
jl
mov
jne
push
push
icebp
cwde
add
adc
inc
adc
push
call
add
add
enter
pop
call
cmp
cmp
cmp
xor
mov
nop
add
sub
inc
mov
sub
or
scas
sub
push
add
pop
push
push
sbb
call
sbb
inc
arpl
pusha
and
add
add
sbb
pushf
dec
ins
jae
add
lock
inc
dec
jne
mov
push
pusha
mov
nop
ret
or
int3
xor
xor
cmp
push
inc
mov
clc
nop
fdiv
pop
les
mov
dec
and
in
adc
jne
push
jmp
add
cmp
push
retf
test
jmp
shl
xchg
or
dec
cld
dec
add
outs
dec
inc
dec
in
aad
pushf
clc
js
mov
xor
(bad)
es
add
pop
add
sbb
or
mov
add
add
sbb
out
out
xor
icebp
test
add
adc
add
inc
test
sub
mov
add
inc
movs
shl
inc
mov
adc
bound
nop
push
or
mov
int3
xor
add
sbb
sub
xor
daa
push
adc
pop
lods
add
jnp
add
or
inc
push
dec
push
add
enter
lahf
pusha
or
mov
xchg
sub
mov
add
les
or
ins
jge
inc
and
and
in
nop
std
xor
xor
jne
test
add
sub
sub
mov
ds
popa
inc
jmp
push
cmp
cwde
add
ret
fldcw
inc
and
or
add
push
(bad)
stos
mov
mov
mov
ins
add
sahf
inc
add
push
mov
shr
call
mov
jbe
dec
sbb
call
ror
mov
dec
add
mov
adc
jne
inc
push
mov
in
rcr
or
lods
call
int3
mov
mov
popf
cmp
test
cmp
mov
push
jno
je
mov
pop
or
mov
push
and
xchg
xchg
out
push
leave
add
add
add
clc
mov
loope
mov
jne
jne
sub
shl
add
adc
ret
add
push
xchg
add
jne
inc
add
(bad)
and
loopne
(bad)
dec
xchg
js
push
add
dec
rcr
cmp
or
in
mov
push
loop
and
dec
dec
add
call
dec
sbb
add
and
shl
push
(bad)
mov
mov
push
or
fs
add
push
clc
inc
adc
or
fcmove
js
xor
clc
bound
cmp
or
fmul
ins
add
call
(bad)
div
mov
popf
mov
or
add
jge
lods
ja
xor
popf
addr16
inc
pusha
inc
retf
(bad)
dec
add
mov
add
shr
mov
adc
jne
xor
push
inc
add
mov
es
add
punpckldq
add
add
repnz
stos
enter
(bad)
push
in
add
mov
mov
inc
mov
mov
mov
or
ror
loopne
in
clc
syscall
adc
cwde
add
mov
add
repnz
sub
inc
mov
mov
add
mov
push
add
sbb
imul
pop
or
or
push
outs
dec
add
aaa
inc
call
icebp
mov
or
dec
xlat
mov
add
xchg
mov
or
imul
dec
loope
out
push
jmp
pop
jno
and
sti
dec
xchg
add
jge
add
mov
shr
call
call
pop
inc
dec
or
mov
(bad)
push
add
cmp
add
retf
call
dec
xchg
adc
mov
clc
pusha
and
push
or
xor
push
add
popf
bound
push
lea
add
add
cmp
mov
pushf
xchg
or
add
(bad)
cmp
repnz
ss
xchg
fs
adc
adc
push
popa
sti
add
and
aas
stos
cmp
popa
jecxz
cs
add
add
add
jo
adc
add
popa
adc
and
pop
push
pop
int
mov
sub
mov
add
inc
lods
mov
add
cmp
or
push
xchg
add
clc
push
jo
sbb
test
add
rol
test
mov
push
call
pusha
xor
sbb
std
cmp
pusha
add
pusha
push
add
mov
jne
fdiv
fdivr
repnz
lock
repnz
rcl
dec
mov
add
and
push
xor
in
addr16
adc
call
xlat
jne
pusha
call
or
in
lea
and
add
jae
ret
add
push
cmps
fild
sub
push
adc
inc
icebp
or
jno
call
dec
and
shr
xor
mov
loopne
add
loopne
adc
mov
ds
call
fiadd
add
inc
jne
cmp
call
inc
adc
cmps
int3
les
sbb
aam
add
call
add
(bad)
and
push
test
mov
rcl
add
add
fwait
dec
shr
jle
cmp
or
dec
ins
mov
xchg
push
lock
mov
push
sbb
mov
add
add
push
mov
push
jns
inc
ror
mov
rol
push
add
test
dec
add
sub
mov
call
add
div
stc
lock
fmul
ins
shl
mov
add
repnz
push
sbb
mov
(bad)
jl
test
mov
mov
lea
mov
in
cmp
cmp
adc
inc
ror
and
test
ret
cdq
pop
mov
xchg
add
out
ja
adc
add
push
ins
mov
and
or
mov
inc
xor
aad
call
call
mov
mov
dec
sub
and
push
pop
dec
and
stos
bound
jne
mov
aaa
inc
sbb
clc
add
add
lea
xor
dec
or
jae
test
add
push
or
fsubr
cmovae
pushf
and
add
mov
(bad)
fdivr
sub
pop
add
call
(bad)
jmp
enter
jge
aaa
mov
lock
push
adc
nop
mov
adc
jecxz
add
lock
dec
or
jae
push
shr
sub
maxps
push
add
ror
ret
dec
add
add
mov
sbb
test
and
in
rol
cdq
xchg
call
mov
js
sbb
lock
push
dec
add
push
repnz
add
je
jne
shr
xor
and
inc
call
add
test
and
add
adc
add
or
adc
mov
shr
add
add
push
or
repz
jl
jge
mov
push
mov
inc
add
or
jg
ret
rol
jmp
push
test
xor
add
inc
call
aaa
push
mov
pushw
das
or
adc
add
js
add
push
push
lea
mov
and
xchg
xor
add
sbb
rol
add
and
cmps
inc
add
in
pop
xchg
bound
lea
dec
jge
bound
mov
cmp
or
aaa
add
pop
sbb
adc
std
mov
and
or
mov
xchg
xchg
sub
mov
inc
push
cmp
cs
xor
cld
pop
je
mov
jne
add
add
push
mov
arpl
rcl
call
fidivr
jne
(bad)
mov
pop
das
or
xor
pop
or
add
add
push
push
scas
lea
clc
add
mov
shr
mov
or
outs
inc
(bad)
or
pushf
inc
cmp
es
call
sub
(bad)
aas
or
push
test
add
pusha
ins
or
pop
(bad)
bnd
add
movs
add
dec
pop
xor
cdq
inc
pop
ins
add
mov
test
ret
cmps
pop
and
ret
xor
rcl
mov
aaa
add
(bad)
call
inc
test
sub
les
test
mov
xor
loope
sbb
cmp
add
add
and
lods
imul
adc
xchg
sbb
mov
add
inc
mov
add
in
add
jge
push
lock
shl
push
mov
loope
jo
mov
rol
push
dec
sub
inc
mov
sub
xchg
cld
dec
jo
pminsw
or
pusha
push
test
call
jo
dec
je
fadd
add
test
(bad)
xchg
in
rol
and
call
or
cmovl
ins
test
ret
cmp
int
pop
dec
loopne
imul
cmp
add
cld
loopne
ficomp
jbe
add
(bad)
sbb
mov
scas
push
add
js
and
(bad)
and
pusha
inc
dec
in
mov
es
or
or
adc
call
jne
and
jne
dec
add
and
dec
pop
add
xchg
mov
enter
popf
clc
cmp
ror
mov
in
or
push
sbb
add
scas
push
xor
push
sti
jo
add
hlt
cmp
int3
popf
sar
test
dec
pop
adc
inc
(bad)
mov
adc
rol
pusha
add
loopne
and
push
push
pusha
jmp
push
add
push
outs
and
pusha
hlt
loopne
inc
popa
dec
pop
sbb
retf
mov
add
cmp
pop
mov
jmp
and
push
add
add
gs
adc
add
jp
inc
xor
add
pop
add
pop
add
jne
xor
(bad)
xor
mov
xchg
and
add
sub
lock
adc
add
and
sub
mov
or
push
std
fwait
inc
sbb
lds
push
and
add
add
jnp
jae
stc
xchg
dec
js
cmp
fcom
loopne
add
pop
and
rcl
femms
pop
push
ins
loopne
add
cmp
inc
and
inc
or
sbb
mov
rcl
mov
add
fs
mov
sbb
pop
movs
imul
popa
and
add
sub
mov
jne
stos
or
cs
add
dec
call
mov
(bad)
call
add
xchg
or
push
adc
add
pushw
lea
mov
add
push
mov
cmp
add
add
punpckhbw
adc
sub
add
jo
and
ror
add
rcr
add
add
call
adc
mov
xchg
push
shr
call
and
jmp
loopne
cmp
add
(bad)
cmp
and
fs
add
sahf
jne
fadd
push
call
call
xchg
add
mov
pop
dec
or
push
ffree
dec
and
push
aam
mov
adc
leave
jge
sbb
ret
xor
or
add
sub
push
adc
jmp
pop
add
(bad)
mov
mov
mov
xor
sar
fdiv
ret
xchg
fcom
mov
add
push
xor
shr
jmp
add
popa
sbb
jne
sbb
jnp
mov
test
push
add
lock
pop
lahf
sbb
xchg
xor
inc
ret
and
mov
add
adc
add
add
mov
(bad)
(bad)
jge
cmp
add
shl
or
mov
movs
ds
xor
or
add
lea
add
adc
push
popa
push
jl
lahf
cs
les
gs
rol
add
shr
iret
test
mov
inc
call
mov
in
add
ret
fsubr
add
mov
test
ror
jmp
aam
and
nop
cmp
pop
push
jne
mov
mov
add
sgdtd
test
add
push
lods
adc
adc
clc
xchg
movs
add
cld
push
jge
inc
inc
(bad)
jmp
ret
les
dec
or
test
sub
jae
adc
stos
add
jmp
dec
pop
xor
dec
and
mov
sahf
jge
add
add
inc
or
xlat
lock
add
call
ror
div
sub
int
imul
sbb
cmp
or
dec
fild
inc
adc
add
ret
inc
add
add
pop
cmp
or
add
adc
dec
popa
adc
aam
add
mov
enter
push
and
xor
mov
push
loope
cmp
mov
pop
or
add
or
or
inc
sti
cdq
loopne
add
mov
and
push
clc
aaa
sbb
add
pusha
sub
sbb
dec
out
add
imul
jne
jl
or
add
xchg
inc
inc
add
push
mov
mov
adc
or
xor
add
aaa
shl
add
add
(bad)
je
test
mov
push
inc
lock
add
call
add
(bad)
adc
xchg
add
mov
call
sbb
cmps
fsub
jae
or
cwde
ror
test
add
dec
and
push
push
lock
add
jmp
rol
movs
push
inc
xor
sub
add
dec
dec
ret
xor
cmp
add
push
jae
xor
add
lock
mov
cli
add
add
add
dec
add
fld
es
cmp
cs
cmp
rol
jo
inc
cmp
jp
in
dec
das
push
pop
test
lea
sbb
movs
jmp
pop
jns
fsub
xor
ja
or
and
and
lea
add
inc
add
or
aam
jmp
call
add
inc
add
sbb
sbb
add
mov
call
pop
(bad)
data16
sbb
adc
add
pop
push
xor
cmp
mov
out
or
add
test
rol
push
pop
mov
xor
pop
mov
inc
push
mov
add
add
lea
sub
jne
test
cmp
sub
shr
mov
dec
test
add
jae
jno
and
push
push
add
push
cmp
add
rcl
cmp
dec
push
push
mov
pop
add
sar
cmps
les
dec
dec
movs
addr16
rol
inc
ja
jle
loopne
cld
add
add
push
pop
je
fist
out
dec
retf
sbb
add
(bad)
pop
add
push
add
add
sbb
mov
fs
test
add
sub
add
or
mov
add
pop
out
popa
jp
jae
or
mov
push
test
nop
or
push
add
pop
adc
or
mov
add
ret
mov
les
inc
mov
xchg
ret
jne
adc
or
jecxz
daa
add
fldenv
xor
xor
mov
add
add
add
pop
hlt
add
mov
adc
imul
cdq
xchg
jmp
adc
jne
nop
loopne
lahf
push
or
xchg
pop
xchg
sub
add
add
rcl
add
or
add
push
ds
gs
fisttp
push
dec
mov
push
add
ds
sbb
je
add
les
cmp
sbb
add
add
pushw
call
inc
pop
add
cmp
sbb
imul
jo
jl
add
mov
pop
mov
ja
sub
add
loope
mov
pop
jne
add
popa
add
ficom
loopne
mov
xlat
cld
mov
push
jae
inc
cmp
cmc
add
mov
cmp
lea
add
adc
and
pop
push
or
xchg
mov
jmp
add
and
mov
mov
lock
add
fadd
enter
add
xor
add
or
rcl
les
dec
call
call
test
and
lea
sbb
push
add
int3
or
popf
xchg
add
mov
push
dec
outs
pusha
call
mov
aas
lock
xchg
lock
mov
mov
sub
push
shr
test
push
adc
adc
adc
inc
add
pop
inc
xor
outs
push
(bad)
inc
or
or
(bad)
pushf
mov
cmp
add
mov
sti
add
clc
and
ret
call
adc
inc
inc
add
mov
popa
and
mov
dec
add
call
in
and
adc
gs
push
mov
add
movs
shl
add
inc
mov
fimul
jmp
dec
repnz
push
adc
add
xchg
push
jmp
lsl
adc
pusha
add
mov
or
test
or
jne
push
mov
cs
add
add
xor
inc
cmps
loopne
popa
xor
aas
pusha
jno
into
add
add
add
push
add
add
test
jb
adc
in
leave
add
rcl
push
std
add
add
movs
shr
jno
add
jne
js
xor
test
add
ret
js
and
mov
icebp
add
xchg
and
inc
(bad)
add
add
add
dec
inc
inc
dec
clc
(bad)
loopne
xor
stos
sbb
add
shl
(bad)
push
add
push
ficomp
movs
and
aaa
or
push
or
fadd
mov
push
cmp
imul
push
and
loopne
cmps
add
je
pop
xor
adc
aam
add
je
loop
mov
scas
inc
(bad)
call
inc
jg
sbb
cmps
repz
int3
adc
cmps
icebp
adc
jne
add
je
icebp
and
dec
(bad)
nop
das
push
imul
or
sub
outs
and
subps
xor
add
outs
add
xor
test
sbb
pushf
data16
and
popa
or
out
rcr
add
in
mov
sbb
adc
xchg
push
arpl
das
add
mov
mov
xor
movs
push
add
sbb
arpl
in
or
and
mov
movs
dec
(bad)
pusha
inc
jae
loopne
icebp
pop
add
add
add
add
add
faddp
or
add
pusha
jb
xchg
add
add
dec
and
les
add
or
loopne
call
adc
mov
pop
add
sbb
mov
in
pop
cmp
pop
push
inc
hlt
mov
sub
shl
jns
mov
(bad)
std
push
mov
or
jne
adc
mov
mov
mov
add
or
cmp
(bad)
in
mov
movs
xor
add
getsec
sbb
and
(bad)
add
bswap
xchg
jb
lods
loopne
jns
pop
add
push
fild
inc
add
mov
lea
je
jo
cmp
aaa
rol
loop
cmps
xor
loope
ret
call
add
sbb
sbb
xor
(bad)
or
fiadd
int3
sbb
mov
xchg
loopne
pop
mov
jge
nop
add
inc
push
or
add
push
or
dec
test
sar
push
gs
add
nop
pushf
xor
cmp
call
add
xchg
mov
push
add
add
dec
inc
(bad)
loopne
add
test
xadd
and
jne
les
jle
add
xor
jae
or
add
lock
dec
jmp
and
push
add
inc
cmp
sub
jne
cmp
add
xchg
mov
jbe
sbb
mov
and
push
dec
add
push
dec
add
fadd
cmp
or
xchg
pusha
or
dec
pop
dec
ror
push
and
ret
jge
xchg
add
shl
sbb
cld
pop
add
hlt
call
add
dec
or
hlt
inc
call
xchg
jle
mov
add
mov
call
dec
add
and
mov
ret
ficomp
or
(bad)
push
and
adc
add
les
xor
shl
in
fldcw
push
enter
cmp
dec
add
xor
hlt
lock
add
add
add
sub
adc
jne
push
push
mov
push
addr16
fidiv
xchg
lidtd
push
imul
add
sub
or
loopne
imul
jge
xor
and
retf
popf
add
add
pop
add
dec
fistp
mov
sbb
sbb
add
push
jne
xor
out
add
add
stc
dec
jo
jno
adc
jmp
pop
mov
push
xchg
add
xor
test
sbb
mov
nop
outs
fdivp
add
sub
add
pop
mov
arpl
mov
adc
rol
push
test
add
call
and
jb
inc
or
mov
test
ja
jb
jp
popa
push
add
inc
(bad)
lock
mov
test
aam
and
add
shr
ss
es
push
and
push
mov
adc
mov
int3
popf
mov
add
loopne
out
add
push
int3
dec
adc
sbb
scas
mov
adc
(bad)
jg
(bad)
or
rol
daa
add
add
inc
adc
xor
loop
lahf
jge
inc
cs
inc
dec
and
ret
sti
sbb
dec
clc
and
call
mov
mov
dec
or
add
sbb
stos
push
fdivr
jg
lock
inc
(bad)
adc
arpl
cmp
add
popa
mov
dec
dec
push
add
add
add
outs
das
mov
mov
or
adc
imul
dec
inc
dec
rcl
pop
loop
adc
mov
pop
nop
std
push
inc
or
or
rcl
add
push
inc
xor
rol
rol
or
mov
and
inc
inc
in
mov
sub
push
adc
add
push
and
or
mov
pop
(bad)
mov
cmp
add
fisubr
int
addr16
add
cmps
(bad)
or
or
add
add
add
inc
rcl
ins
add
and
inc
push
pop
iret
es
add
cmps
pop
add
xchg
or
pusha
sub
sar
cld
push
sahf
add
inc
lea
jno
push
xchg
sar
jmp
push
xchg
sub
arpl
movss
clc
add
sub
cmp
(bad)
pusha
adc
jge
push
push
xchg
scas
or
fsubr
nop
rol
repnz
push
mov
lock
or
inc
or
loopne
add
or
fcomp
rol
ret
xor
loop
in
inc
and
mov
inc
mov
add
or
in
xlat
pop
mov
mov
clc
xor
dec
jno
add
add
dec
add
adc
add
add
add
xor
add
or
ret
nop
add
jae
xor
add
rcr
repnz
and
mov
add
call
cld
adc
movs
add
in
add
xor
push
add
inc
xchg
add
push
ret
add
or
call
sbb
push
call
test
jmp
push
cld
inc
test
ror
popf
inc
adc
rol
mov
pop
add
and
add
add
test
test
xchg
test
push
push
test
add
xchg
add
add
sbb
push
add
add
mov
mov
inc
sub
rol
hlt
sti
les
add
and
add
mov
inc
ret
inc
call
pop
push
(bad)
call
cmp
add
nop
dec
push
add
mov
add
add
sub
pop
stc
pop
std
loopne
sahf
add
cmp
or
add
scas
inc
push
ds
xor
jne
add
or
mov
add
add
jne
mov
fadd
dec
jp
add
jne
loopne
cmp
xchg
and
dec
pushf
add
mov
mov
adc
xchg
fisttp
add
dec
xor
sub
inc
pushf
push
add
or
jno
add
ret
ret
mov
outs
push
ss
mov
inc
jge
int
call
pop
ret
and
xor
xor
retf
adc
cs
and
add
pusha
or
or
add
cli
repz
add
and
mov
adc
pmulhw
or
addr16
add
jmp
ror
jge
adc
pop
dec
jo
cmp
mov
pop
aam
xor
(bad)
sub
dec
dec
or
add
in
pop
test
push
add
enter
lea
jmp
sub
popa
cmp
pop
add
verw
in
shl
cmps
mov
data16
adc
outs
adc
inc
add
push
sub
or
add
push
push
push
cmp
dec
xor
mov
rcl
xor
in
add
xor
scas
seto
or
mov
add
push
cmp
push
push
add
add
mov
xor
add
mov
test
test
jns
jle
ins
clc
add
mov
jge
mov
popa
xor
and
or
and
sub
add
ds
call
cld
mov
jb
out
(bad)
sub
or
(bad)
rol
xor
adc
xchg
add
shl
sbb
mov
mov
mov
ds
or
mov
and
jo
mov
and
dec
adc
inc
mov
and
mov
xchg
jns
push
movq
movs
inc
nop
dec
fdivr
(bad)
jge
inc
addr16
fmul
pushf
cmps
xchg
ret
sar
pushf
push
inc
cmp
jmp
sbb
add
enter
call
and
call
pushf
push
xor
push
dec
fmul
nop
call
mov
adc
add
mov
or
inc
shl
add
lock
in
sub
clc
cmps
bound
push
inc
or
pop
mov
shr
(bad)
hlt
(bad)
inc
mov
dec
mov
push
mov
mov
or
call
add
dec
xor
dec
mov
inc
mov
dec
and
push
add
aas
xchg
fs
add
pop
repnz
pop
push
xor
mov
cld
or
push
and
add
sbb
push
jmp
adc
outs
ret
dec
jbe
stc
call
(bad)
mov
in
xor
adc
add
and
(bad)
pop
mov
adc
add
jl
sub
sbb
add
pop
pop
rol
mov
push
cmp
mov
sbb
push
int
mov
test
or
mov
add
rcr
add
pusha
add
add
popa
inc
push
mov
iret
je
mov
or
mov
add
xchg
ror
add
dec
les
lea
enter
jne
enter
mov
xor
mov
mov
or
add
and
call
jmp
add
inc
add
xchg
call
mov
fnstsw
cmp
retf
fst
or
pop
mov
(bad)
push
shl
retf
or
aas
mov
add
jne
call
clc
add
jnp
xor
nop
fdivr
repz
lock
and
push
sub
add
lock
xchg
and
ret
add
dec
ss
xor
fild
xchg
(bad)
xor
mov
push
mov
addr16
add
add
and
add
scas
mov
add
jge
xchg
call
or
call
inc
jo
mov
adc
pop
add
retf
add
call
prefetch
sbb
(bad)
ss
add
pinsrw
dec
add
jne
add
push
add
je
std
add
loope
cmp
or
push
cmp
add
dec
xchg
lock
stos
xchg
test
adc
mov
out
imul
add
push
add
jmp
bound
rol
inc
add
js
adc
or
push
inc
call
add
push
bound
adc
mov
popa
or
and
test
pop
sub
in
sub
in
add
call
adc
dec
add
add
(bad)
push
pop
add
push
mov
add
add
adc
call
inc
ret
loope
mov
pop
pop
and
push
pop
lds
and
sahf
cmovb
inc
(bad)
sbb
stos
push
dec
pusha
push
add
inc
pop
ror
test
and
call
test
fcomp
and
into
lea
xor
in
clc
cmp
and
dec
cmps
push
push
icebp
push
push
fs
inc
xor
mov
mov
add
or
add
mov
cmps
add
add
ficom
push
imul
lock
pop
jl
out
add
cmp
lock
lea
add
mov
add
ror
imul
ror
loop
ins
cld
or
mov
xchg
dec
into
or
or
cmp
dec
or
jne
imul
pop
test
add
dec
clc
add
add
add
mov
dec
popa
push
mov
dec
neg
daa
add
enter
xchg
sbb
lea
cdq
cmp
add
add
push
mov
(bad)
lahf
add
fmul
add
add
sub
loopne
and
rol
jns
add
lods
push
(bad)
cmp
jae
(bad)
call
adc
gs
and
lock
jne
cmp
adc
popa
das
adc
jno
push
loope
cmp
(bad)
call
lea
add
dec
retf
mov
call
jne
mov
ins
push
pop
adc
das
shl
cmp
sub
les
(bad)
cmp
inc
inc
icebp
loopne
or
inc
lock
in
lea
in
xchg
test
push
int
repnz
call
ins
inc
in
mov
add
or
inc
pop
lahf
(bad)
cmp
and
push
sbb
add
bswap
add
xchg
jnp
jo
jecxz
and
psadbw
pop
fs
pop
mov
xchg
aas
add
loopne
rol
or
lods
movs
add
adc
add
or
inc
mov
push
sub
push
add
add
test
(bad)
pop
nop
lea
mov
mov
xchg
(bad)
jg
enter
mov
call
mov
call
add
not
and
inc
add
test
(bad)
call
dec
hlt
rcl
pop
sub
sub
dec
mov
pusha
call
adc
clc
inc
dec
adc
mov
sub
ror
add
add
inc
inc
add
add
mov
ud0
adc
or
cmp
cmp
add
cmp
mov
pop
add
mov
push
movs
rol
add
sub
push
mov
xchg
or
nop
cld
add
jnp
add
add
jmp
arpl
add
mov
mov
cmp
add
cmps
rcr
dec
inc
inc
add
iret
rcr
mov
adc
push
push
xchg
pusha
test
or
add
icebp
loopne
inc
xor
test
inc
test
add
cmc
push
or
pop
mov
adc
sub
add
add
out
call
or
test
sub
and
mov
push
push
push
add
add
or
mov
inc
or
(bad)
xchg
mov
jmp
push
dec
add
add
xchg
add
mov
add
inc
and
test
addr16
lock
xor
xchg
call
or
sbb
and
sbb
and
sub
adc
push
mov
and
inc
or
add
mov
hlt
cmp
adc
add
adc
pop
les
add
mov
push
add
jb
jne
jmp
fimul
sahf
add
ret
popa
call
clc
sbb
xchg
call
push
shl
lods
jne
mov
adc
dec
jmp
call
(bad)
js
sub
loopne
mov
jae
dec
mov
add
add
loopne
push
scas
cs
test
add
push
mov
mov
inc
sub
pop
or
mov
xor
push
sbb
cdq
ds
push
jmp
icebp
leave
or
jo
mov
add
pusha
loope
mov
add
cmp
jmp
dec
add
mov
mov
inc
pop
jae
es
(bad)
mov
push
add
or
adc
push
add
add
add
dec
add
lods
les
ins
pop
add
pop
mov
push
push
sub
mov
adc
mov
rol
add
add
inc
arpl
pusha
add
add
loopne
shl
add
icebp
add
dec
call
lea
jo
add
sbb
inc
(bad)
std
nop
push
pop
lea
fadd
push
pop
inc
or
xor
pushf
and
xchg
add
call
xchg
jae
(bad)
aas
jne
jp
push
clc
add
mov
xor
add
cmp
test
jo
dec
and
(bad)
fidivr
iret
mov
xor
add
lock
inc
outs
pop
add
in
inc
pop
mov
xor
fbld
mov
ret
test
or
ins
dec
call
xor
(bad)
hlt
or
add
adc
movs
pop
mov
and
or
clc
clc
add
add
add
push
in
push
add
push
add
inc
add
adc
aam
inc
ret
xor
sbb
add
nop
dec
cwde
xor
jmp
call
jl
ret
mov
mov
mov
or
test
pop
add
mov
adc
jne
test
mov
inc
inc
aam
push
lods
cmp
add
adc
cmp
ins
cwde
aaa
add
enter
mov
sub
add
loope
in
adc
fld
add
mov
xor
pop
mov
sbb
or
push
and
mov
push
call
and
mov
adc
pop
adc
add
pop
adc
jmp
xchg
mov
loopne
adc
cld
mov
mov
dec
popa
cmp
shl
add
(bad)
mov
fs
inc
mov
add
cmp
nop
add
add
shl
adc
sbb
push
add
(bad)
jmp
inc
dec
stos
je
xor
add
add
movs
xchg
mov
adc
xor
or
scas
push
call
(bad)
dec
inc
call
and
dec
(bad)
shl
ds
xchg
mov
jecxz
mov
add
or
cmp
rcl
dec
and
inc
inc
mov
push
add
test
call
sub
mov
xchg
mov
ins
push
dec
adc
jno
pop
jmp
inc
mov
add
pop
mov
add
loopne
outs
add
inc
and
(bad)
add
test
je
add
push
add
add
and
xlat
mov
push
sbb
aad
mov
add
add
pop
std
pop
and
test
jle
ficomp
icebp
mov
dec
mov
push
js
mov
dec
enter
jae
xor
call
inc
inc
ins
push
add
pop
push
add
xchg
push
sub
and
jo
inc
call
push
adc
cmp
clc
cdq
inc
call
outs
inc
pusha
nop
call
fsubr
call
std
adc
mov
push
inc
or
adc
mov
pusha
mov
push
xchg
add
mov
jge
mov
call
sub
lods
pushf
add
add
les
cmps
mov
push
cwde
jbe
dec
leave
stos
pop
adc
test
jno
add
push
out
add
ja
imul
call
xchg
add
int
in
add
mov
cs
(bad)
mov
push
dec
sbb
add
(bad)
mov
popa
inc
rcl
std
sub
adc
sub
or
cmc
mov
inc
fwait
add
popf
add
cdq
dec
xor
push
mov
push
mov
loop
loopne
inc
add
add
mov
add
bound
mov
cmpxchg8b
pop
nop
ja
add
inc
stos
clc
xor
sub
enter
test
(bad)
inc
jne
add
pop
call
dec
or
rol
mov
call
sub
mov
mov
or
sar
ins
out
(bad)
out
(bad)
ror
(bad)
cmp
call
inc
call
dec
pushf
add
push
sbb
pop
movs
cmps
fnstenv
fld
jnp
add
or
dec
add
xor
fisub
shl
push
add
add
mov
inc
iret
dec
and
pop
adc
call
je
add
in
(bad)
jb
or
mov
rol
test
xadd
(bad)
add
add
dec
xchg
pop
dec
xor
dec
add
inc
add
outs
(bad)
(bad)
call
and
into
add
and
std
test
pop
fadd
adc
add
sahf
jmp
mov
ret
add
outs
mov
sub
es
mov
and
push
jmp
add
push
dec
inc
pop
add
rcl
outs
adc
(bad)
rol
ffree
call
jnp
jmp
stos
inc
inc
jl
repnz
sub
add
loopne
xor
add
jno
test
add
jnp
mov
push
cmp
cmp
add
or
add
xchg
in
jmp
add
comiss
xadd
sahf
mov
or
pop
add
call
mov
sub
add
or
jge
dec
jmp
inc
test
add
rol
cmp
mov
add
add
jge
jmp
adc
adc
pop
inc
push
inc
add
add
std
push
cmp
add
outs
mov
ror
add
mov
jne
jmp
loopne
jo
inc
add
aaa
adc
cdq
popf
add
add
aaa
add
enter
inc
movs
add
dec
mov
push
cmp
add
xor
inc
xor
and
and
cvtdq2ps
test
add
add
add
add
mov
mov
pop
add
fldenv
push
add
mov
ss
call
(bad)
xchg
inc
pusha
mov
sti
push
add
inc
fadd
mov
arpl
ret
call
popa
add
xor
rcr
push
pop
add
xor
movs
inc
in
(bad)
dec
in
fadd
sbb
add
push
add
and
add
mov
inc
das
add
add
sbb
mov
push
mov
add
nop
cmp
and
test
mov
rol
mov
pop
cmp
les
stos
and
fadd
dec
cmps
js
add
xor
push
fiadd
add
xchg
mov
sub
les
ins
add
mov
push
dec
and
dec
(bad)
call
sbb
xchg
mov
and
add
push
add
add
mov
loopne
std
mov
mov
xchg
mov
test
push
add
push
fadd
push
or
movzx
xor
and
push
mov
mov
push
adc
mov
add
pop
dec
lods
imul
mov
adc
sbb
lea
call
stos
enter
inc
pop
call
jmp
inc
and
jno
call
push
inc
(bad)
xor
adc
xor
add
cmp
mov
or
loop
arpl
rcl
loopne
push
call
push
and
movs
add
call
ss
add
(bad)
xor
pop
add
add
enter
dec
add
sub
fadd
lea
inc
daa
fsubrp
and
xchg
test
cli
xor
les
mov
int3
push
add
add
mov
xor
mov
movs
call
push
mov
adc
add
add
hlt
shr
and
dec
loopne
loopne
shl
mov
add
push
add
or
add
jne
mov
in
popf
and
call
add
add
mov
inc
ret
mov
lea
sbb
or
mov
pop
sbb
mov
mov
std
jp
shr
adc
push
ret
cld
mov
sub
dec
add
adc
loopne
mov
cmp
cmp
adc
enter
sbb
sbb
adc
(bad)
ficom
and
add
cli
xchg
test
jns
jl
xchg
add
add
jne
mov
gs
mov
dec
sub
xor
mov
je
add
xchg
add
adc
mov
add
xchg
imul
add
add
add
sbb
sahf
sbb
call
add
arpl
add
mov
mov
adc
inc
and
call
add
into
out
lea
xor
jns
xor
and
jo
dec
add
mov
sub
add
push
adc
rcl
push
sbb
push
dec
adc
xor
add
push
add
add
sbb
and
shl
add
inc
or
loope
add
xchg
add
jo
jecxz
mov
mov
jmp
rol
xchg
lea
pop
add
add
fisub
add
pop
les
add
adc
cmp
(bad)
push
adc
pop
call
call
add
(bad)
loopne
add
sbb
icebp
and
jne
pop
jecxz
and
add
(bad)
out
inc
add
sub
inc
xchg
add
add
jmp
add
push
inc
xor
rcr
mov
add
scas
add
pop
inc
sub
push
dec
mov
sahf
xor
dec
jmp
outs
push
pusha
mov
imul
(bad)
ret
call
shl
call
ror
push
adc
mov
mov
add
add
fsubr
enter
test
imul
jo
add
add
add
adc
mov
or
or
inc
push
cmp
xor
and
push
mov
ror
xor
adc
or
loopne
push
xchg
xchg
shl
outs
lods
cmps
arpl
xor
xor
sub
mov
(bad)
xor
add
cmp
cmp
cmp
inc
push
jg
enter
adc
add
pop
or
clc
add
jno
call
adc
dec
add
add
adc
fadd
add
xor
xchg
add
add
add
add
ror
push
add
prefetch
mov
test
leave
jne
(bad)
mov
sub
push
push
add
push
sbb
cmp
jmp
sidtd
test
test
dec
mov
iret
inc
dec
add
cmp
and
nop
cmp
shl
mov
inc
or
add
sub
add
mov
mov
and
or
out
push
loopne
xchg
call
mov
pushf
sbb
sbb
or
push
or
cmp
call
push
stc
add
pop
stc
mov
or
and
mov
dec
fadd
pop
mov
pop
dec
jmp
and
xchg
inc
add
jmp
push
dec
xor
jle
sbb
call
dec
mov
sbb
add
cwde
(bad)
cmp
mov
add
test
rol
mov
or
push
mov
add
push
dec
mov
mov
jp
pusha
add
add
push
cmp
and
pop
mov
aad
add
add
jo
inc
enter
add
add
pop
cmp
xchg
imul
add
daa
mov
xor
mov
and
mov
push
in
add
leave
pusha
icebp
or
add
add
mov
rol
mov
in
cmp
dec
or
test
push
enter
mov
movs
jmp
add
and
aam
pop
mov
mov
and
ins
pop
inc
cmp
xor
push
or
push
dec
mov
hlt
adc
cmp
loopne
add
lea
in
sub
and
or
inc
push
add
adc
pop
clc
sub
pop
add
movs
(bad)
call
push
ror
push
jo
push
je
js
(bad)
and
add
pusha
mov
mov
adc
xchg
call
mov
fs
pop
add
ret
mov
mov
scas
fisub
popf
icebp
xchg
pop
or
jo
mov
dec
adc
xor
test
mov
call
add
add
add
iret
push
inc
iret
fist
rcl
add
pop
nop
push
jo
sar
or
dec
js
dec
jge
or
lock
add
es
sbb
push
inc
nop
retf
lock
cmp
arpl
dec
add
lock
mov
data16
test
mov
jb
and
sub
and
lea
scas
lea
(bad)
(bad)
call
icebp
add
frstpm(287
add
cmps
push
int3
pop
retf
push
jge
and
dec
push
and
xor
in
add
nop
push
sar
xor
in
mov
xor
push
in
sbb
sub
test
add
cmp
or
or
test
mov
inc
mov
jcxz
add
add
add
repz
add
lock
or
call
adc
addr16
shl
mov
add
fdiv
movs
mov
push
xor
xchg
add
mov
inc
mov
add
jb
push
add
add
xlat
shl
xor
mov
ret
dec
pop
add
inc
push
test
or
sub
dec
add
pushf
add
leave
test
rcr
ret
adc
xor
xor
pop
loopne
leave
or
shr
add
lock
mov
add
mov
cmps
xor
cmp
shr
mov
mov
nop
push
pop
pusha
add
adc
add
nop
push
add
sub
(bad)
sub
push
imul
and
ins
dec
movs
mov
add
mov
or
lods
mov
jmp
daa
nop
add
xchg
adc
call
aam
shl
push
cmc
repnz
enter
add
and
nop
cmp
inc
stos
add
push
in
sub
rcl
loope
xor
push
mov
jne
aaa
mov
inc
add
inc
hlt
dec
pusha
call
mov
adc
(bad)
mov
and
and
sbb
ret
call
inc
add
ins
dec
call
xor
nop
jmp
call
cmp
add
jl
call
and
cmp
sti
les
call
add
inc
test
add
ret
xlat
cmp
sub
mov
sub
cmp
inc
add
and
jge
or
or
xadd
sub
les
lea
add
inc
inc
mov
mov
or
add
inc
shr
jb
sbb
inc
add
data16
jmp
push
dec
pcmpgtb
xchg
in
test
add
mov
pop
add
mov
push
nop
inc
and
fiadd
jne
mov
mov
lock
or
ss
add
xrelease
jbe
adc
jmp
test
cmps
and
add
mov
cs
inc
retf
cmp
push
(bad)
and
aam
ficomp
or
popa
add
inc
loopne
and
push
lahf
add
lods
add
xor
add
xlat
and
add
inc
inc
loope
jo
add
call
inc
inc
add
or
add
xor
sbb
inc
or
frstor
push
lds
push
or
adc
push
mov
in
inc
dec
and
sahf
popa
call
dec
ins
stc
or
inc
push
call
aad
pusha
and
scas
and
push
xchg
test
nop
test
sbb
leave
rcr
add
rol
inc
push
dec
add
xchg
imul
push
xor
ins
call
movs
aaa
test
imul
mov
dec
fld
out
or
(bad)
call
pop
add
dec
pop
or
sub
xchg
sar
and
sub
sbb
and
cmp
lea
inc
push
sbb
sub
mov
jae
cmp
add
push
jne
rol
add
cmp
arpl
jge
and
add
pop
jg
(bad)
fcomp
xchg
sub
add
test
dec
jp
push
and
rol
xor
mov
add
sbb
jecxz
call
pusha
nop
dec
sbb
adc
(bad)
test
les
pop
xor
rol
call
pusha
sub
add
mov
add
aas
jno
add
add
mov
inc
add
and
or
jmp
adc
(bad)
mov
inc
lods
or
rol
cmc
ins
adc
imul
jge
(bad)
mov
add
retf
add
pop
add
or
mov
mov
adc
pop
add
add
add
inc
adc
xlat
or
pushf
cmp
and
fs
inc
dec
pop
add
int
push
call
cld
mov
sbb
or
or
call
push
pop
add
inc
inc
cmps
xchg
mov
aam
mov
or
sbb
rol
icebp
lock
add
xchg
sbb
adc
jp
inc
psraw
adc
mov
ret
mov
add
rol
push
call
add
mov
sar
scas
xchg
mov
jno
rol
push
loopne
mov
xchg
lods
mov
mov
imul
into
sub
jmp
xchg
add
cmp
cmp
inc
jmp
jne
movs
xchg
and
add
loope
push
mov
add
outs
sbb
rol
jne
(bad)
lock
inc
call
repz
add
pop
mov
push
sar
add
shl
mov
add
add
test
mov
hlt
call
das
stos
inc
data16
not
inc
pushf
shl
xor
adc
push
sti
enter
mov
retf
add
add
jge
add
add
inc
mov
add
push
cmp
ror
ss
jns
and
xchg
jmp
and
adc
and
sbb
or
sub
push
mov
add
outs
push
enter
push
cmp
std
xlat
icebp
push
dec
add
mov
add
pusha
add
sub
mov
adc
mov
push
or
call
push
call
inc
outs
call
add
inc
push
add
mov
test
sbb
test
push
pop
fadd
lea
dec
pop
in
push
add
xchg
and
inc
inc
push
in
add
add
mov
mov
or
mov
adc
jg
add
add
pop
sbb
or
cmp
mov
mov
adc
add
popa
retf
inc
add
push
pop
popf
cmp
out
xchg
out
xchg
add
test
xchg
and
cmp
inc
add
pop
add
add
dec
mov
scas
sub
push
dec
add
adc
add
xchg
adc
cmc
nop
ja
add
fmul
je
and
inc
aam
and
outs
add
outs
dec
dec
push
sub
jp
out
ss
sti
inc
loopne
fild
or
add
push
call
sbb
mov
sbb
sbb
rcr
arpl
cdq
add
inc
push
ins
and
hlt
shl
add
les
pushf
dec
push
add
add
jl
and
push
pop
sub
mov
jae
add
sbb
cmp
mov
sub
adc
inc
daa
xor
ins
cmp
mov
(bad)
pop
pop
pop
sub
push
das
jmp
test
or
add
and
call
mov
dec
add
push
call
mov
rcr
inc
or
dec
rcr
dec
add
dec
mov
in
or
mov
shr
and
pop
cmovo
sub
or
outs
jns
add
inc
add
ins
cdq
push
add
movs
cmp
xor
xlat
rcl
push
(bad)
out
mov
rcl
jb
add
jge
mov
popf
xchg
ja
xchg
leave
mov
cmp
inc
add
or
push
loopne
fs
add
pusha
cmp
xchg
mov
add
inc
je
shl
jbe
add
mov
or
sub
pusha
add
add
push
adc
repnz
aas
sub
and
add
adc
or
ror
sar
jo
mov
inc
pop
pusha
xor
add
(bad)
cli
lea
add
mov
or
mov
ins
mov
inc
or
add
jne
add
(bad)
clc
mov
and
push
call
rcr
seto
sub
add
add
add
sub
add
out
(bad)
mov
ror
(bad)
mov
mov
inc
mov
add
sbb
or
or
leave
add
xchg
mov
inc
push
adc
add
add
add
jmp
mov
inc
add
shl
xor
mov
cmp
jge
scas
call
loopne
inc
or
mov
sbb
add
(bad)
or
(bad)
and
leave
mov
jne
sub
add
or
loopne
jg
or
cmp
jno
push
add
outs
pushf
inc
popa
sbb
sub
call
stos
adc
jmp
in
add
or
nop
mov
add
(bad)
leave
push
add
xchg
add
sti
and
mov
enter
shr
loope
sbb
add
adc
add
add
or
nop
jo
and
call
and
repnz
push
add
cmp
pop
add
adc
push
add
dec
cmp
mov
mov
test
jb
or
and
sub
int3
into
test
iret
push
lods
lock
aam
xchg
add
call
or
push
dec
cmp
xchg
or
or
not
add
inc
(bad)
loopne
adc
adc
xor
jmp
adc
neg
xor
mov
sub
test
adc
add
call
cmp
outs
lock
out
sbb
call
mov
push
add
adc
cmp
sub
sbb
xchg
and
pop
xchg
(bad)
call
pop
add
add
adc
cmp
or
add
mov
aad
adc
xchg
push
fld
inc
mov
(bad)
icebp
dec
mov
inc
cs
add
popa
test
mov
mov
sub
call
push
icebp
push
lock
adc
jb
pop
fadd
js
add
mov
pusha
jne
rcl
int3
mov
(bad)
outs
mov
and
sub
shl
call
ficomp
add
pop
sbb
mov
add
sbb
sbb
push
or
lea
pusha
dec
add
ror
sbb
gs
or
add
ins
jge
jmp
dec
add
test
(bad)
in
sbb
adc
clc
mov
push
or
add
test
inc
sub
sub
test
add
add
inc
ins
mov
sub
rcr
jne
inc
or
loopne
popa
dec
(bad)
js
std
adc
mov
cmp
dec
adc
test
add
sbb
xacquire
and
push
inc
lahf
jl
adc
pop
sbb
add
or
pop
xor
and
add
pop
inc
and
push
loopne
jmp
loopne
inc
jo
xchg
jge
add
into
mov
popa
add
add
lock
test
sbb
xchg
cmc
lock
shr
mov
or
repnz
mov
push
call
str
ins
mov
jo
mov
aas
xor
or
add
je
and
jo
add
dec
push
or
inc
ret
push
fiadd
adc
push
call
adc
jge
xchg
mov
ret
mov
sub
imul
jmp
mov
(bad)
call
push
push
in
adc
inc
adc
cmps
or
add
and
dec
mov
ret
test
sbb
call
push
jo
es
loop
add
jmp
jmp
dec
cmp
add
cmp
add
pop
adc
mov
adc
loopne
add
mov
jne
punpckhbw
inc
add
mov
dec
add
add
push
mov
pop
push
pusha
xor
or
mov
jge
mov
add
add
(bad)
xchg
mov
or
add
add
mov
and
xchg
mov
add
inc
popa
push
call
push
sub
push
jno
pop
sbb
xor
sub
add
jno
adc
add
int3
fiadd
xor
pop
push
call
cmp
add
ud0
add
inc
xor
sbb
push
push
rol
dec
add
and
sub
test
jno
hlt
push
xor
or
mov
or
in
mov
push
dec
(bad)
pusha
jne
jo
clc
add
movs
mov
rol
lock
or
jg
push
arpl
add
or
jno
mov
call
mov
(bad)
dec
add
lock
call
pop
imul
pop
add
fwait
add
adc
sub
dec
test
pop
push
mov
jbe
int
retf
push
add
add
add
call
add
arpl
push
add
inc
push
dec
or
call
nop
jne
movs
mov
ror
jmp
faddp
inc
and
inc
xor
sbb
cdq
inc
jle
ror
(bad)
xor
ins
shl
add
imul
jae
sti
inc
add
loopne
add
pop
bound
add
cmps
push
add
add
pop
in
add
cmp
push
add
mov
jo
dec
mov
mov
mov
inc
add
mov
or
add
add
aaa
sbb
cmp
add
inc
pusha
xchg
push
test
jle
add
xor
arpl
cmp
(bad)
mov
xor
gs
xchg
add
push
pop
in
outs
add
enter
or
jb
add
adc
cmps
mov
xchg
ins
and
or
call
or
add
or
movs
add
lods
pop
pop
mov
sbb
pusha
add
scas
dec
aam
lock
loop
adc
div
call
sub
xor
push
call
and
shr
inc
out
icebp
sbb
loopne
push
div
adc
pusha
aam
jl
dec
inc
test
add
idiv
scas
inc
add
and
push
push
jo
dec
aam
add
into
add
mov
ja
mov
add
movs
xchg
add
call
sahf
int
loopne
pusha
jge
push
mov
lea
(bad)
push
dec
jne
or
xchg
mov
dec
add
inc
pop
mov
loopne
dec
add
test
(bad)
xor
add
xor
push
push
push
adc
add
hlt
mov
inc
dec
shl
pusha
mov
push
daa
or
loopne
add
in
jne
shr
mov
push
mov
inc
scas
repnz
and
add
and
add
add
push
add
into
call
test
dec
addr16
out
fs
sar
in
mov
push
push
aas
inc
bound
pop
pop
add
add
movs
and
add
push
pusha
inc
inc
movs
cld
jne
rol
cmp
dec
jmp
sub
(bad)
jne
push
sar
test
mov
xor
add
add
push
inc
and
jne
push
inc
cmp
das
sub
pop
mov
pop
(bad)
std
jne
or
cmp
pop
popa
je
call
mov
mov
js
add
shl
push
pop
mov
adc
pop
cmp
imul
push
add
add
inc
and
dec
dec
(bad)
xor
(bad)
in
and
add
inc
push
lock
rcl
dec
jge
jecxz
mov
dec
jne
dec
sbb
adc
stos
inc
xor
add
pop
rcl
xchg
jmp
add
jno
xchg
push
jbe
or
push
ss
lods
adc
and
mov
inc
add
sbb
ror
sub
loop
jmp
add
mov
and
xor
lods
dec
push
adc
add
jae
shr
daa
(bad)
dec
jne
rol
push
ror
shl
or
leave
ror
stos
cmp
sub
fmul
adc
xor
psubb
adc
fs
mov
inc
iret
xchg
mov
sbb
(bad)
fiadd
jnp
xchg
pop
and
call
add
fild
btr
add
mov
dec
xchg
daa
loope
je
add
ret
mov
leave
adc
mov
test
ret
mov
aaa
add
and
add
adc
xchg
push
adc
add
inc
adc
pop
add
call
or
add
jmp
aad
inc
pop
add
inc
cmp
mov
xchg
(bad)
adc
add
add
add
or
call
add
fiadd
mov
outs
and
or
inc
call
lea
cwde
in
add
add
xor
mov
jne
sbb
call
add
(bad)
jne
add
icebp
ins
(bad)
js
add
bound
shl
stos
call
jmp
dec
add
outs
in
xor
je
lods
inc
into
popa
add
es
xchg
popa
add
add
in
jge
cld
paddb
adc
sub
inc
arpl
jb
push
adc
mov
pop
je
int
loopne
and
sub
mov
sbb
jne
jno
jmp
ins
push
jmp
push
add
xchg
mov
jle
mov
rcr
add
xor
pop
fcmovbe
jmp
push
add
cwde
pop
sub
mov
pop
mov
mov
add
(bad)
js
sub
add
pop
dec
stos
push
inc
mov
pop
mov
push
xchg
icebp
sbb
add
add
dec
popf
inc
inc
add
adc
dec
ret
(bad)
push
xchg
xor
adc
js
push
xor
add
or
add
inc
add
hlt
cmp
push
pushf
jne
in
sbb
repnz
or
es
dec
fdivr
mov
call
into
cwde
jmp
sbb
xor
add
add
shr
add
ds
(bad)
push
or
mov
mov
jne
cmps
mov
test
pop
add
(bad)
call
out
sar
test
bound
xor
sti
pop
add
pop
pop
or
xchg
cmp
add
aam
inc
popf
call
out
inc
inc
add
and
aas
push
inc
dec
fidivr
or
adc
pcmpgtw
add
lods
fiadd
lock
or
push
push
rol
and
and
push
pop
repnz
inc
sbb
mov
in
(bad)
cmp
or
(bad)
or
adc
arpl
call
por
xor
adc
mov
lea
add
lock
ret
pop
mov
sbb
xchg
xchg
sub
add
inc
nop
sbb
inc
fdivr
les
not
(bad)
jbe
js
push
rol
add
add
bound
jge
mov
inc
push
and
add
inc
loopne
adc
sbb
adc
add
loopne
adc
pop
jge
mov
fnstenv
out
jne
addr16
xchg
add
call
or
jo
sub
cmp
add
call
loope
push
call
xor
mov
rol
add
add
xlat
and
cmp
ret
adc
adc
dec
add
xchg
add
push
call
add
out
jo
inc
mov
sub
mov
data16
xchg
dec
(bad)
xor
inc
jno
sub
call
in
call
mov
and
sbb
pusha
mov
shl
add
push
push
jns
sar
rol
add
mov
movs
jmp
test
les
add
adc
xor
add
or
rcr
mov
xor
inc
popa
add
ja
inc
sub
push
adc
cmp
aaa
mov
add
add
add
xchg
mov
cmp
stc
sub
mov
mov
jo
cmp
push
sar
or
std
push
shl
xor
add
jbe
fsubr
dec
rol
ss
loopne
(bad)
call
sub
dec
inc
repnz
add
(bad)
push
dec
jmp
mov
cmp
inc
in
add
and
xlat
rcl
pop
sub
or
or
pop
inc
inc
add
add
jae
mov
call
std
retf
or
add
push
xchg
fmul
adc
inc
and
shr
add
adc
add
inc
sbb
fdiv
push
sub
push
mov
mov
pop
inc
add
inc
ds
sub
cdq
push
cmp
add
add
xor
push
push
add
xchg
adc
or
in
in
push
dec
add
sbb
mov
push
add
push
mov
retf
inc
add
mov
xor
add
inc
and
inc
sbb
aaa
sbb
adc
and
sub
inc
es
ret
adc
add
dec
ror
mov
jne
call
add
mov
mov
add
enter
add
add
das
enter
xchg
add
jno
mov
or
and
add
mov
rol
test
mov
or
mov
add
and
loopne
xchg
dec
test
push
add
sar
add
jo
call
adc
push
add
inc
add
add
sbb
int3
pop
add
add
push
(bad)
mov
dec
mov
xchg
adc
add
sub
add
cmps
xadd
je
xor
pop
push
and
push
add
popa
add
xchg
clc
add
dec
sub
les
fild
inc
inc
inc
inc
push
mov
add
xor
and
or
push
mov
dec
inc
pop
mov
test
movlps
mov
add
arpl
(bad)
cdq
inc
add
add
sbb
cld
add
mov
stos
pop
(bad)
enter
add
jmp
jmp
inc
add
add
sub
mov
and
add
dec
pop
sbb
sub
mov
mov
call
push
pusha
add
or
lea
jbe
jmp
inc
lahf
mov
or
add
jge
lea
adc
dec
and
ret
inc
pop
add
add
or
inc
and
test
(bad)
adc
dec
out
rcr
test
add
jnp
and
daa
sub
pop
cmp
je
test
add
jmp
cmp
or
or
bound
xor
add
pop
push
test
inc
push
mov
mov
movs
ret
inc
pop
xor
cmp
add
or
mov
adc
test
push
arpl
xchg
add
mov
add
adc
(bad)
dec
(bad)
mov
push
lock
movs
test
cmp
xchg
or
dec
ror
jo
call
add
jmp
add
xor
add
add
adc
push
push
mov
push
call
movs
inc
pop
pusha
in
test
mov
add
add
mov
dec
cmps
sbb
mov
add
aaa
dec
(bad)
call
push
mov
and
add
add
fwait
punpckhwd
push
xchg
push
adc
call
call
adc
lea
push
and
push
lea
shr
inc
xor
add
pop
add
(bad)
adc
rol
lock
retf
jmp
cmp
or
das
cwde
jle
add
adc
or
mov
cmp
mov
lock
dec
call
adc
sub
add
add
mov
add
pop
mov
xlat
sbb
or
add
test
sub
or
rcl
int
test
(bad)
enter
sbb
clc
inc
(bad)
mov
xchg
mov
call
dec
sbb
sbb
jne
xor
fist
mov
pop
cmp
ds
xor
leave
mov
push
mov
add
call
sub
add
or
call
data16
mov
popf
dec
nop
dec
jmp
push
add
in
lock
mov
test
dec
stc
adc
lock
add
sub
inc
adc
xchg
adc
pusha
add
inc
popf
jo
lock
push
and
jne
adc
jle
mov
add
add
jne
jmp
mov
add
push
dec
jne
add
push
mov
or
add
jge
and
mov
dec
add
push
xchg
add
jo
mov
jle
int3
mov
push
out
(bad)
jmp
sub
dec
mov
add
add
add
add
inc
xor
cdq
inc
call
or
push
sub
mov
add
jne
xor
in
and
jnp
call
or
or
jl
test
loop
jge
add
loop
mov
rol
aas
inc
retf
add
or
sbb
outs
clc
dec
or
repnz
outs
inc
rcr
fcomp
mov
add
cmp
add
and
xor
xor
hlt
xor
adc
and
data16
cmps
mov
push
mov
das
add
adc
push
jecxz
call
adc
dec
push
mov
test
xor
call
sub
mov
or
add
or
adc
mov
add
adc
cmp
mov
inc
mov
sbb
add
das
loopne
aam
push
add
pop
sbb
out
rcr
lods
jbe
add
cdq
and
add
rcr
mov
popa
fucomi
pusha
or
and
pushf
mov
sbb
adc
std
iret
mov
sbb
outs
pop
sbb
ret
add
add
dec
or
in
in
int3
call
in
sbb
psubsb
mov
add
adc
aam
loopne
add
lea
adc
mov
pusha
adc
call
add
mov
(bad)
fcomp
xchg
dec
mov
inc
fsub
pop
test
iret
or
xor
cmp
in
add
arpl
rol
shl
ror
outs
in
adc
stos
adc
push
and
add
cmp
add
in
adc
jb
mov
ret
sbb
stc
add
cmp
fmul
lock
lea
push
outs
adc
inc
popf
add
test
xor
jg
xchg
add
adc
mov
pop
and
nop
mov
jnp
ret
iret
add
add
xchg
arpl
mov
call
inc
add
in
call
sub
call
cmp
jno
pop
push
ror
mov
add
add
sbb
jmp
ins
adc
je
pop
dec
add
into
push
cs
add
add
std
add
mov
dec
xor
sbb
cmp
call
dec
mov
add
adc
mov
jmp
dec
xlat
dec
fild
call
push
test
xchg
add
or
call
jo
add
add
popf
jns
add
in
(bad)
push
cmp
fmul
or
leave
popf
add
add
aas
push
push
xor
ins
inc
jnp
loopne
call
cmp
xchg
call
mov
lahf
lds
add
push
cs
daa
pushw
and
add
add
es
xor
mov
lods
mov
push
dec
cli
adc
sbb
clc
test
addr16
sub
adc
push
jmp
adc
add
(bad)
jle
add
(bad)
fimul
call
pusha
add
fninit
dec
add
xor
and
mov
adc
adc
add
clc
clc
call
jmp
inc
lea
call
loopne
or
shr
mov
inc
push
adc
ror
mov
add
inc
sub
pop
call
mov
rol
adc
add
not
adc
in
xchg
adc
inc
mov
sub
add
ret
in
push
dec
pop
lea
mov
add
add
iret
push
js
inc
data16
push
lea
add
add
push
and
inc
call
add
or
add
(bad)
(bad)
inc
xor
shl
mov
cmp
push
dec
add
dec
xchg
xchg
add
jbe
adc
int3
add
adc
jg
xor
pop
sub
jo
xchg
push
js
fimul
fiadd
add
and
sub
jmp
add
mov
pop
add
jecxz
xor
icebp
pop
jge
jo
mov
add
sar
add
adc
dec
adc
dec
adc
mov
or
sub
pop
dec
mov
add
scas
adc
call
mov
adc
mov
or
shl
push
sub
adc
inc
jne
add
add
sub
test
cmp
add
adc
inc
daa
mov
push
adc
call
and
pop
pop
mov
push
inc
test
mov
add
mov
bound
dec
inc
test
pop
push
add
jge
out
add
call
add
add
shl
je
sub
mov
or
cmp
loop
enter
(bad)
push
movs
jo
js
pop
pusha
loope
add
mov
inc
aaa
or
add
inc
adc
retf
adc
mov
inc
sbb
jge
add
pop
and
sahf
and
adc
and
jl
mov
str
add
call
inc
inc
pop
cmp
inc
call
popf
inc
(bad)
out
add
xor
imul
pushf
add
add
rcr
call
jne
(bad)
cmovae
mov
inc
mov
retf
retf
push
out
xor
jne
inc
jmp
lea
sbb
or
popf
ucomiss
add
pusha
add
or
gs
add
push
(bad)
loope
mov
(bad)
clc
sbb
inc
repnz
xor
test
adc
cmp
pusha
xor
arpl
psrlw
mov
fisub
add
pop
fmul
adc
pusha
jno
std
pop
call
inc
add
push
inc
xchg
fidivr
lds
inc
mov
cmp
lods
adc
add
mov
(bad)
faddp
fwait
call
cmovo
add
add
add
and
push
or
ret
and
ret
mov
in
jo
xor
or
dec
xchg
adc
xor
xor
add
std
sbb
std
push
mov
jne
stc
and
adc
add
lock
stc
sub
add
push
(bad)
shl
cli
or
call
and
add
or
and
stos
xchg
mov
sub
add
sub
rcr
into
jmp
sbb
call
push
add
add
and
jmp
test
or
pusha
jge
adc
xor
imul
and
inc
int3
push
add
add
aas
(bad)
call
cmp
add
pop
mov
sub
clc
mov
(bad)
cmp
call
and
inc
adc
mov
lock
sbb
xchg
(bad)
bound
add
xor
sub
or
push
(bad)
mov
xor
into
push
push
lea
(bad)
je
(bad)
(bad)
cdq
add
jae
and
arpl
or
test
jp
repz
hlt
add
add
loopne
add
ror
call
inc
pop
adc
mov
jmp
fnsave
loopne
popf
test
(bad)
xor
add
jmp
inc
push
aaa
add
add
repz
cmp
fisub
add
je
add
sar
rol
dec
adc
jo
add
mov
jge
add
sub
mov
mov
imul
and
(bad)
cmp
movs
add
(bad)
call
das
loope
(bad)
xor
jne
mov
lods
popa
inc
cmps
add
push
add
add
lods
cwde
add
fadd
add
fs
test
dec
cs
shr
nop
adc
sub
or
dec
mov
jmp
xor
jmpw
mov
add
sub
add
bound
add
add
jmp
or
imul
rol
add
add
clc
call
data16
add
mov
pop
and
(bad)
cmp
push
test
jle
add
sub
mov
adc
mov
xchg
inc
add
add
mov
xor
mov
push
push
add
popa
or
dec
std
pusha
cli
inc
dec
les
add
push
call
je
dec
add
adc
add
xor
std
enter
adc
xchg
imul
add
add
(bad)
mov
popf
mov
lea
add
inc
add
es
dec
shl
mov
jne
push
push
push
add
push
imul
add
rol
arpl
and
add
and
or
add
stos
add
dec
mov
mov
and
push
xor
xor
push
and
jnp
and
mov
ret
mov
push
int3
cmp
(bad)
call
and
dec
mov
in
add
inc
add
inc
es
mov
add
(bad)
push
or
add
jo
dec
popf
mov
ins
movups
xor
rcr
sub
call
mov
inc
add
inc
add
pushf
add
push
add
nop
jp
add
pop
sub
xchg
cmp
(bad)
data16
pushf
cmp
or
lahf
cdq
xor
sub
add
add
cli
jne
add
add
and
jle
repnz
enter
mov
push
sub
pop
mov
push
loop
push
aam
int3
or
nop
pusha
test
push
popa
mov
push
(bad)
or
sub
(bad)
and
sub
add
mov
add
ret
pop
test
or
adc
mov
cmp
jo
inc
inc
lock
fs
sub
pop
sub
adc
add
popf
sar
cmp
mov
rol
add
pop
sub
sbb
add
pop
ret
cmps
das
adc
add
add
jg
sbb
pusha
loopne
mov
mov
jns
shl
fcomp
pusha
lock
sub
pop
xor
and
or
inc
add
adc
imul
test
adc
inc
mov
arpl
popa
leave
fsub
cmovno
add
inc
add
ja
mov
mov
bound
call
add
add
popa
pop
enter
mov
jmp
cmp
add
add
inc
and
add
inc
adc
popa
push
fsubr
cmp
jmp
mov
add
outs
pop
pop
shl
fld
test
and
mov
adc
aas
jp
in
add
in
inc
add
pop
cli
push
mov
pusha
push
xor
push
push
xor
add
mov
pop
push
xor
enter
push
fcom
xor
mov
pop
test
iret
inc
(bad)
jo
outs
ror
or
xchg
je
shr
in
jmp
retf
cmp
sbb
inc
sub
jge
dec
int
(bad)
lock
je
cmp
test
or
repnz
outs
xor
add
dec
xor
mov
add
or
add
pop
mov
(bad)
push
call
popa
jmp
retf
add
sub
dec
lea
or
shr
imul
lods
idiv
and
test
add
add
add
dec
test
pop
jl
fadd
movs
call
in
test
(bad)
aad
shr
and
loopne
call
adc
add
push
push
rol
adc
cmp
daa
inc
sub
pop
add
add
xor
jl
mov
add
and
(bad)
or
shl
mov
mov
add
and
sahf
and
iret
stc
jne
inc
mov
gs
or
cmp
push
and
push
mov
call
mov
and
call
xchg
adc
call
add
call
sub
add
push
arpl
test
rol
clc
add
add
xor
sub
in
mov
sub
je
add
add
adc
call
lods
and
add
call
push
add
or
pop
(bad)
loope
adc
dec
movs
call
push
enter
ins
xor
inc
or
add
inc
add
pusha
pusha
xchg
add
fwait
call
add
push
adc
add
call
push
mov
and
or
add
push
add
xor
test
inc
in
add
pop
leave
push
mov
add
cwde
push
add
xchg
pop
and
popa
add
aaa
add
(bad)
call
mov
dec
add
std
fiadd
leave
mov
or
pushf
pop
jmp
adc
std
cmp
(bad)
mov
call
adc
xchg
fsub
add
mov
call
test
mov
(bad)
pop
add
in
mov
inc
inc
mov
mov
add
and
popa
enter
lock
add
dec
mov
add
inc
and
jo
pop
push
push
add
mov
add
lock
sbb
pusha
adc
mov
(bad)
shl
add
cmp
add
inc
inc
add
jns
sbb
jl
or
fxam
add
add
add
rcl
and
inc
mov
jbe
cmp
jne
movs
adc
push
arpl
mul
cld
add
add
add
pop
add
sub
in
es
add
add
hlt
push
adc
add
inc
cmp
and
mov
sar
xor
add
mov
cmp
sub
pusha
inc
add
mov
pusha
sub
pop
inc
enter
inc
inc
pop
dec
sub
jg
scas
dec
lods
xchg
ds
add
(bad)
jmp
dec
pushf
push
add
punpcklwd
fbld
mov
push
push
or
push
mov
xor
inc
pop
movs
lock
fadd
add
add
inc
push
mov
jo
add
mov
adc
add
jge
dec
xchg
lea
loopne
push
mov
push
call
fs
bound
dec
xor
adc
cmp
shl
pusha
add
xor
adc
bound
pusha
ror
rol
adc
mov
mov
push
jle
push
jne
push
add
add
inc
add
mov
fld
mov
clc
add
(bad)
cmpxchg
test
arpl
or
add
movs
sub
xor
call
add
ret
inc
mov
mov
stos
xor
inc
imul
mov
add
sub
push
mov
cdq
and
mov
add
imul
add
add
jo
add
lahf
inc
(bad)
scas
pop
inc
shl
push
or
sub
stc
add
adc
mov
jb
test
or
or
or
(bad)
and
and
inc
lock
add
mov
push
inc
mov
add
lea
ret
add
jno
mov
cmps
lods
pop
and
ror
or
adc
jmp
(bad)
call
add
push
add
xor
sub
dec
inc
adc
adc
add
rol
add
mov
icebp
add
adc
fs
add
jno
inc
lods
pop
inc
je
add
bound
push
sti
cmp
add
or
add
mov
and
adc
inc
dec
sub
add
scas
pushf
xor
dec
mov
cmp
dec
pusha
movs
mov
add
lock
cmp
jne
bound
mov
xor
xchg
loopne
aaa
jecxz
inc
inc
gs
aaa
inc
add
dec
sub
adc
in
and
add
add
adc
dec
inc
add
lea
fistp
cmp
mov
aaa
add
(bad)
jge
add
add
inc
or
add
mov
js
clc
add
adc
add
rcr
add
ror
push
add
jle
adc
rol
mov
sahf
fadd
push
cmp
xor
pop
dec
sub
add
xor
movs
add
jecxz
inc
mov
or
ror
mov
js
dec
mov
mov
jo
aaa
mov
and
and
inc
add
add
and
add
(bad)
lock
retf
adc
pop
call
rol
mov
jge
ret
mov
aad
dec
jmp
in
jne
inc
out
push
sbb
jbe
leave
test
add
add
xor
push
(bad)
or
call
or
and
add
push
push
jns
sub
or
call
push
loope
add
pop
xor
mov
add
mov
or
push
sbb
(bad)
loopne
call
sub
add
adc
jmp
test
ret
inc
mov
lods
ror
xchg
loopne
and
str
push
and
fild
pop
imul
adc
dec
push
push
mov
add
lock
mov
call
jmp
mov
add
inc
push
dec
add
sbb
jmp
xchg
std
clc
pusha
or
loopne
out
(bad)
jo
and
daa
out
mov
adc
rcr
call
xchg
icebp
push
add
cmp
jge
movs
pop
adc
inc
xchg
mov
imul
inc
pop
clc
add
add
add
add
xchg
or
add
mov
add
add
call
add
test
inc
call
add
add
xor
pop
xor
push
inc
nop
jmp
xchg
ror
or
xchg
inc
add
sub
mov
pop
jg
test
add
push
sub
aaa
jno
mov
add
loop
rol
adc
ss
mov
pusha
lock
mov
inc
test
xor
je
shr
xor
push
cmp
stc
mov
(bad)
inc
sub
(bad)
add
cmp
add
sub
or
xchg
test
add
add
jg
mov
sldt
inc
icebp
xor
add
in
add
loope
es
mov
rol
lea
pusha
mov
push
repnz
sub
inc
adc
add
push
push
push
bound
in
cs
or
and
daa
test
test
leave
jmp
je
data16
cmps
add
add
call
add
inc
mov
or
or
mov
dec
sub
push
adc
add
add
add
ret
les
mov
add
rol
dec
add
mov
sub
cmp
sub
test
push
pop
push
or
test
add
adc
add
mov
ror
adc
add
ret
dec
mov
add
sbb
rol
add
cmp
jg
shl
enter
inc
push
xor
push
sub
add
cmps
add
sub
nop
add
mov
jmp
mov
dec
xor
add
or
adc
call
xchg
sbb
pusha
les
rcl
mov
test
mov
mov
push
test
push
adc
mov
loopne
sbb
call
fcomp
xchg
gs
loopne
(bad)
shl
add
or
push
not
mov
sbb
sbb
nop
mov
nop
mov
jbe
mov
jmp
adc
jmp
dec
and
add
dec
add
rol
push
add
add
and
push
or
inc
hlt
cwde
jp
push
or
adc
call
add
push
mov
mov
add
inc
fdiv
inc
rcr
adc
invd
add
or
pop
jb
lods
mov
jl
add
aam
imul
or
mov
add
mov
push
jge
aas
sub
gs
and
jl
add
add
out
cmp
mov
jp
shr
or
daa
sbb
jge
mov
jae
add
fwait
push
lock
mov
adc
xlat
stos
lds
ins
js
push
add
add
pop
out
add
inc
call
add
mov
add
mov
es
les
xor
lock
gs
jo
mov
mov
test
lea
sub
jg
adc
mov
add
(bad)
dec
add
call
push
dec
xor
sub
dec
gs
cmp
jmp
call
inc
pop
test
dec
dec
mov
add
aas
or
int
test
pop
add
call
add
xor
add
(bad)
lock
add
fwait
add
mov
or
push
inc
pop
dec
add
push
sbb
ror
not
add
aam
mov
push
pop
xchg
inc
add
jmp
xchg
pop
cmp
retf
sbb
and
jmp
push
add
add
jae
inc
clc
jmp
push
add
adc
std
mov
sub
nop
jle
xor
ret
add
std
lock
add
mov
shufps
test
add
call
ins
inc
cld
add
and
inc
inc
ficom
rcr
dec
cmp
pushf
adc
stos
add
or
pop
cli
fwait
test
add
sbb
movs
mov
repz
mov
sbb
inc
sub
call
add
paddusb
and
shl
fadd
stos
push
out
mov
mov
mov
inc
(bad)
jne
jge
jecxz
add
test
loopne
or
or
push
sbb
popa
push
popf
or
add
hlt
adc
add
mov
(bad)
pusha
in
xlat
outs
add
inc
mov
and
cmp
sbb
mov
pop
sub
std
dec
and
xor
mov
add
xchg
add
push
push
push
mov
pop
(bad)
dec
es
inc
or
mov
bnd
out
ror
sub
(bad)
fnstsw
test
lea
dec
mov
jmp
je
shr
mov
add
add
adc
add
adc
add
or
call
inc
shr
cld
icebp
add
xor
add
mov
cwde
xor
mov
je
mov
dec
add
push
hlt
add
cld
add
push
lods
sbb
mov
mov
add
adc
add
xor
sub
ret
sub
mov
inc
lock
fdiv
add
jecxz
add
fist
call
lahf
cmp
xchg
push
sahf
xchg
into
pop
adc
rcr
adc
adc
and
mov
xor
adc
popa
(bad)
lock
cmp
xor
inc
or
movs
daa
add
mov
dec
inc
pop
clc
push
and
adc
mov
xchg
mov
int3
je
add
or
add
adc
xchg
pop
test
loopne
cmp
adc
add
cmp
(bad)
xchg
call
out
add
jmp
cmp
imul
or
xchg
push
add
dec
call
and
add
gs
mov
add
mov
inc
xchg
(bad)
pop
cmp
pop
shl
add
cmp
imul
enter
ja
cmp
call
mov
add
push
enter
je
push
add
adc
mov
lea
adc
add
stos
xchg
aam
jo
cmp
add
aam
(bad)
xchg
add
pop
rcl
push
or
xchg
lods
call
jo
adc
pop
push
shr
add
cmove
les
fmul
cmovae
ins
fstp
scas
mov
popa
fisttp
mov
push
(bad)
mov
pushf
add
inc
push
add
xor
inc
add
shr
add
mov
int3
(bad)
jne
push
pusha
push
pop
(bad)
inc
fdiv
inc
add
lea
mov
add
dec
cmp
pop
inc
add
xchg
push
loopne
push
pop
test
sbb
jne
jne
xchg
add
retf
out
rol
add
mov
adc
add
push
mov
arpl
rcl
adc
jb
call
pop
push
sub
xor
xor
add
dec
add
lock
enter
rcl
cmp
mov
xor
add
clc
call
cdq
(bad)
sbb
add
adc
push
mov
add
dec
lods
add
pop
ror
and
or
add
sub
lea
sub
add
call
xor
push
lea
rol
popa
bound
ss
pop
push
mov
add
or
add
adc
add
xor
mov
add
and
add
ror
jne
daa
hlt
inc
aam
clc
add
cmps
push
or
add
jmp
daa
add
pop
mov
and
or
loopne
mov
punpcklbw
push
add
jns
inc
or
call
mov
xchg
push
adc
jo
push
ror
ror
imul
inc
lock
inc
push
add
cmp
mov
pop
clc
add
jecxz
mov
jle
add
mov
pop
fcom
inc
add
les
add
push
retf
push
dec
cwde
add
inc
nop
retf
call
inc
jmp
call
sti
pop
dec
dec
add
pop
enter
and
and
cmp
add
mov
push
pop
enter
add
or
lock
rol
jo
imul
sub
push
jmp
bound
int3
(bad)
mov
jb
sbb
add
inc
push
inc
imul
scas
xor
sub
add
push
cmp
(bad)
(bad)
or
dec
icebp
cmp
xor
cmp
push
adc
dec
and
and
add
push
jl
fisttp
push
and
inc
test
jo
ret
or
ret
lea
adc
fsubr
ss
rol
popf
add
add
adc
xchg
rcl
shl
arpl
test
or
xchg
xor
ret
inc
dec
inc
and
loop
add
add
and
mov
mov
pop
sub
inc
imul
inc
verw
jge
adc
test
push
jne
ja
pop
aas
fisttp
xchg
sub
pop
add
or
mov
add
inc
pop
mov
add
push
add
inc
add
inc
or
cmp
add
cmps
mov
xor
push
loop
add
jge
push
(bad)
test
and
sub
inc
dec
test
and
mov
add
and
(bad)
ror
mov
pusha
add
test
call
inc
js
sbb
mov
movaps
test
fisttp
inc
bound
add
push
pop
mov
push
mov
pop
and
add
or
push
lock
(bad)
cmovne
lea
call
lock
daa
add
test
lock
or
dec
jmp
add
or
shl
test
lock
mov
push
adc
das
push
int3
stos
and
and
dec
rol
mov
and
inc
test
mov
inc
xor
jne
sub
outs
and
rcl
ja
lods
call
sub
mov
add
rol
and
mov
add
call
add
xchg
(bad)
add
in
mov
push
xor
push
mov
inc
scas
add
rcl
outs
add
mov
jbe
push
xor
dec
adc
push
mov
jle
dec
adc
jmp
and
lahf
mov
adc
add
je
call
ret
push
or
pushf
je
add
mov
adc
in
push
fadd
inc
push
out
add
push
cmp
and
ret
lds
rol
inc
rol
cmp
movs
or
xor
add
push
add
call
add
cmp
add
push
test
(bad)
push
or
add
add
inc
inc
(bad)
mov
test
inc
rol
loop
inc
loopne
push
mov
jne
lods
dec
int3
add
mov
sbb
add
xor
cmp
je
mov
mov
pop
cwde
mov
push
add
mov
xor
sbb
xor
shl
sub
clc
adc
nop
into
fst
sar
xor
call
xor
push
mov
inc
add
jnp
fs
jp
push
add
add
cmp
test
and
(bad)
ds
mov
in
(bad)
pushf
rol
jb
inc
data16
nop
add
adc
inc
adc
add
mov
jmp
inc
ret
jne
nop
add
or
lea
inc
add
fild
rcl
out
add
mov
adc
xchg
push
add
add
jge
add
dec
sub
mov
and
adc
adc
xchg
fiadd
mov
inc
adc
push
hlt
dec
xchg
fldcw
sbb
push
sar
add
inc
test
test
sub
std
sub
or
(bad)
aas
loopne
push
xor
and
fs
add
add
aaa
add
or
inc
fadd
das
mov
mov
icebp
pop
or
outs
call
mov
xchg
xor
adc
jp
pusha
xchg
das
inc
push
and
mov
add
mov
add
add
pop
cmp
(bad)
(bad)
call
pop
fwait
movaps
leave
das
adc
add
adc
mov
jmp
add
add
and
sbb
xlat
xchg
addps
iret
adc
add
test
dec
dec
retf
or
push
mov
add
add
add
add
shl
add
sbb
or
dec
dec
sbb
or
mov
mov
push
call
cdq
dec
iret
cmp
push
mov
adc
and
(bad)
xor
jne
jge
mov
sbb
dec
loopne
mov
xor
inc
add
dec
arpl
add
push
xchg
test
inc
test
xchg
or
inc
add
stc
add
add
pop
(bad)
or
mov
jl
sub
movs
shr
stos
add
add
or
push
fs
xor
add
pop
mov
in
add
std
and
add
add
inc
lock
push
pop
into
inc
xchg
jmp
add
rcl
adc
call
add
call
add
add
es
sub
inc
or
inc
addr16
or
daa
add
stc
cli
pop
sbb
ins
fld
(bad)
(bad)
jo
inc
sbb
enter
call
add
xchg
add
and
jl
and
mov
push
(bad)
add
add
sar
add
jne
mov
adc
mov
add
add
inc
jmp
test
push
in
jge
inc
test
jne
or
mov
or
mov
xor
dec
and
cmps
push
popf
inc
jge
jae
xor
sub
adc
mov
sbb
stos
add
pop
sub
mov
push
pop
or
dec
pusha
mov
add
jno
mov
inc
jne
pop
or
loopne
pop
xor
mov
test
and
xor
hlt
inc
and
mov
add
bound
call
imul
xchg
add
mov
mov
push
or
add
into
jnp
nop
add
or
or
push
mov
push
push
jmp
in
dec
cmp
inc
loopne
sbb
add
and
add
popf
add
inc
cmp
mov
pop
fild
or
mov
jge
xchg
pop
test
test
(bad)
ucomiss
pop
dec
push
push
jnp
adc
jbe
pslld
pop
mov
ds
mov
mov
(bad)
and
push
sub
mov
pop
dec
or
ins
sar
rol
mov
call
pop
push
call
shl
add
adc
dec
add
(bad)
jmp
adc
and
add
and
xor
add
mul
int3
inc
ja
sub
fild
add
add
adc
cmp
sub
cmp
test
mov
inc
mov
sbb
cmp
test
sbb
and
jo
(bad)
rcl
add
add
xchg
lds
add
enter
or
sbb
ret
cmc
dec
mov
mov
and
xor
cmp
adc
add
or
dec
in
add
imul
add
stc
sbb
mov
inc
aaa
(bad)
fstp
loope
inc
les
push
mov
ret
mov
bound
and
pop
or
fnsave
add
adc
sub
and
in
sub
push
sub
out
add
add
mov
adc
push
in
rcl
shl
inc
fcom
fldenv
ret
jge
mov
pop
adc
jmp
add
adc
inc
mov
mov
mov
pop
test
mov
shl
nop
fisttp
fmul
dec
mov
loopne
push
xor
outs
jno
xchg
ja
sbb
push
inc
aas
test
dec
push
pusha
pushf
fsubr
add
inc
(bad)
pusha
add
add
data16
out
add
inc
iret
inc
add
add
add
pop
dec
inc
jbe
xchg
jecxz
inc
mov
inc
and
ins
xchg
jmp
inc
and
add
adc
xor
adc
dec
xor
add
mov
add
adc
cmp
or
pop
inc
sub
lea
xor
and
loopne
ud0
leave
lods
loopne
add
add
dec
xlat
(bad)
or
or
add
sbb
popa
fld
dec
loope
mov
inc
add
mov
pop
add
addr16
arpl
rol
jno
bound
test
test
cmp
fdiv
lods
xor
imul
mov
mov
add
xor
mov
mov
sbb
pop
adc
add
loope
sub
add
and
add
(bad)
mov
mov
adc
add
sub
out
popf
pop
add
push
jno
and
pop
lea
or
jp
(bad)
and
push
lock
fsubr
icebp
dec
cmp
shl
or
push
or
(bad)
lea
mov
shr
ret
mov
mov
mov
inc
cwde
jge
popa
pusha
push
push
cmps
jo
call
std
dec
xchg
xor
jbe
xor
add
push
daa
add
push
nop
aam
add
add
add
mov
int
xor
pusha
lock
jns
fisttp
and
mov
add
push
jnp
dec
call
mov
xor
inc
push
push
push
push
retf
loopne
mov
xchg
and
mov
sub
dec
les
xlat
or
or
pop
adc
sub
inc
dec
call
imul
dec
add
(bad)
adc
push
sub
pop
loope
ficom
adc
loopne
add
push
pop
aam
or
movs
jmp
jge
sbb
psrad
frstor
add
paddb
add
push
cmp
pushf
adc
or
push
adc
sbb
fcom
(bad)
add
adc
xchg
in
lock
push
retf
add
fld
cld
das
sub
sbb
jne
mov
aaa
(bad)
mov
add
retf
dec
test
sub
bndstx
mov
add
call
and
or
mul
movs
push
push
mov
dec
out
mov
push
push
add
add
mov
pop
call
sub
push
add
pop
call
and
add
loopne
push
ss
add
add
call
sbb
cmp
call
add
push
nop
push
enter
mov
nop
div
rcr
dec
add
mov
add
in
nop
inc
add
pusha
xlat
adc
icebp
or
sub
xchg
xor
adc
loopne
dec
add
movs
dec
mov
lock
adc
cmp
jmp
cmc
mov
lock
push
sbb
rol
jp
loop
jg
dec
add
jecxz
or
test
mov
call
shl
inc
add
push
fild
add
and
call
add
and
push
not
sub
jne
js
adc
xor
dec
and
loopne
pop
out
test
sbb
ret
fbstp
push
mov
test
ror
inc
add
inc
adc
repnz
out
jge
add
loopne
push
mov
pop
mov
push
add
data16
je
inc
xchg
mov
jb
call
push
pusha
lods
ss
fs
mov
sub
sub
arpl
jb
test
jne
mov
loopne
pop
dec
test
rol
xchg
inc
clc
dec
fucomi
cdq
add
adc
es
cmp
fild
xchg
and
dec
mov
loope
cmps
push
adc
cli
aas
and
dec
sub
stos
dec
enter
add
mov
call
sbb
daa
xor
xor
cmovb
imul
inc
lea
scas
and
xor
les
inc
inc
jns
test
inc
mov
cmp
and
mov
pop
push
lock
test
adc
shr
ror
xchg
cwde
add
ds
mov
mov
push
push
add
ret
add
rol
add
es
add
dec
fst
add
clc
add
pop
pop
push
mov
add
push
push
mov
mov
mov
xchg
or
pop
xor
sbb
nop
cwde
sub
(bad)
call
or
mov
sbb
mov
xor
cmp
dec
push
inc
push
mov
bound
xor
mov
cmp
add
ret
(bad)
or
add
leave
add
inc
call
mov
sbb
(bad)
fld
jmp
add
add
pop
(bad)
and
add
or
int3
(bad)
sbb
dec
cmp
adc
loopne
mov
pop
(bad)
and
cmp
add
stc
and
je
adc
sub
add
bound
push
call
add
jl
push
xchg
push
xor
jmp
outs
add
enter
clc
rcr
or
and
or
xor
mov
xor
dec
icebp
fs
lds
dec
call
jo
or
xor
loope
and
bound
sbb
and
mov
pop
add
add
lods
dec
mov
pop
pusha
inc
push
and
mov
add
adc
add
xchg
outs
add
xchg
cmp
add
sbb
xchg
test
pop
outs
ins
add
push
add
adc
ret
mov
xor
movs
loope
fdivr
inc
fcomp
(bad)
(bad)
rol
arpl
(bad)
push
inc
add
push
mov
jae
call
mov
loopne
jg
ret
mov
add
push
inc
dec
dec
mov
pop
add
jb
add
jmp
add
add
mov
jb
or
jne
(bad)
inc
rcl
inc
mov
xor
add
nop
push
mov
push
or
fmul
mov
adc
add
add
mov
push
push
hlt
call
xchg
or
and
push
mov
add
xchg
and
inc
aam
mov
add
mov
and
add
loopne
push
push
add
rol
mov
push
cwde
setno
push
js
push
call
shl
jp
jne
mov
adc
push
mov
add
add
lahf
mov
pop
push
add
shr
add
jb
mov
pop
push
popa
push
inc
popa
cmps
pop
mov
div
(bad)
jecxz
mov
sub
add
adc
mov
mov
or
inc
jmp
cmps
cld
add
add
jne
mov
mov
cmp
nop
and
and
nop
jl
test
inc
adc
pop
mov
xor
or
call
scas
add
cmpxchg
jge
gs
hlt
popa
rcr
sbb
jne
fisttp
inc
lds
push
add
add
push
out
jg
push
dec
push
inc
outs
add
jmp
pop
fiadd
mov
(bad)
arpl
mov
enter
or
mov
xchg
add
add
and
pusha
push
add
add
mov
add
ficom
or
mov
or
xchg
push
push
adc
dec
rol
inc
call
inc
sbb
or
lock
push
inc
rol
ins
pop
cmp
pop
mov
jp
mov
mov
std
mov
adc
jnp
dec
add
inc
inc
pop
add
adc
sbb
sub
add
push
push
mov
adc
add
stos
and
sub
rcl
jne
je
in
mov
jo
and
add
push
or
xor
add
jae
call
rcl
and
fs
pop
mov
xchg
adc
jle
add
in
add
mov
mov
mov
ret
dec
xor
(bad)
aam
movs
add
in
test
inc
mov
add
lock
call
and
adc
aas
nop
dec
push
adc
dec
add
(bad)
and
sub
add
call
jne
and
and
mov
rol
(bad)
and
mov
leave
push
inc
popa
pop
jne
mov
inc
cmp
mov
add
or
or
add
dec
add
push
cmp
sub
or
sbb
dec
jmp
(bad)
call
sub
adc
push
mov
mov
pop
sub
dec
push
xor
mov
push
dec
xor
adc
add
popa
test
jl
add
inc
pop
pop
inc
and
jb
pop
add
add
enter
cmc
adc
dec
pop
ja
mov
and
lods
add
repnz
aam
push
push
cdq
in
push
mov
push
rol
xor
dec
or
dec
aas
xchg
mov
rol
mov
xchg
add
jecxz
sbb
cwde
fdiv
add
cmps
cvtps2pd
add
test
in
push
sub
popa
lds
mov
in
rol
(bad)
(bad)
add
add
add
dec
cwde
dec
(bad)
xor
add
mov
sub
sbb
rol
jnp
push
add
adc
and
adc
in
add
imul
add
nop
add
pusha
retf
xchg
or
out
or
outs
add
mov
leave
push
cmp
retf
add
test
add
mov
and
jl
and
add
(bad)
push
xlat
adc
and
add
ins
mov
mov
cwde
pop
mov
xor
repnz
call
call
or
inc
xchg
(bad)
dec
or
dec
push
push
dec
sbb
cmp
mov
fcomp
cmp
jo
inc
mov
sub
imul
or
int3
xchg
jmp
inc
fimul
push
inc
jns
add
xor
shr
add
mov
and
mov
mov
test
inc
inc
dec
test
add
fiadd
ret
popa
test
xchg
enter
sti
mov
adc
out
push
jns
imul
push
cmp
jns
sub
je
add
push
dec
xor
dec
add
movs
xor
xor
add
lock
mov
mov
cmp
call
cmps
icebp
xlat
jmp
add
add
cmp
inc
or
add
cmp
and
ffree
and
or
pushw
(bad)
aad
mov
mov
lock
sub
dec
mov
out
add
push
(bad)
call
and
sub
push
and
push
pop
je
or
dec
test
inc
push
push
dec
inc
shl
and
push
add
ins
push
xor
into
add
inc
inc
mov
lar
test
iret
pop
dec
pop
push
xor
mov
fadd
add
test
add
push
(bad)
xchg
leave
sbb
or
fucompp
or
das
add
dec
or
test
popa
add
jmp
xor
lock
xchg
mov
mov
(bad)
les
push
adc
adc
dec
add
add
add
xchg
test
sbb
cmps
ins
mov
or
mov
pop
or
add
push
aad
test
test
cmps
add
mov
loopne
(bad)
sub
loopne
les
add
add
add
push
je
mov
mov
push
push
mov
enter
or
add
and
call
call
inc
scas
inc
rcl
inc
mov
retf
add
cmp
mov
call
and
inc
cmp
dec
scas
ret
scas
add
lsl
or
or
pop
add
mov
frstor
fadd
pop
add
das
clc
inc
or
pop
call
ret
lea
xor
test
cmp
ror
xlat
call
call
pop
add
inc
add
cmp
xchg
and
pop
div
call
sar
test
lods
mov
sbb
call
inc
bound
popf
jmp
shl
add
clc
adc
call
test
push
xor
int3
das
push
scas
sub
adc
enter
push
add
add
sbb
adc
mov
push
enter
pop
push
loopne
test
jo
shr
mov
jo
(bad)
and
call
adc
cmp
call
dec
in
add
icebp
inc
inc
or
jmp
cs
push
push
(bad)
and
pusha
xor
pop
pusha
or
pop
jno
(bad)
adc
test
xchg
cmp
arpl
jne
call
cmp
jmp
adc
ret
dec
or
pusha
cwde
pop
imul
sar
call
pop
add
adc
dec
dec
or
or
test
push
push
dec
or
inc
cmp
xor
or
jne
mov
add
loope
or
nop
iret
sbb
push
push
dec
call
add
push
sub
add
jecxz
cmc
or
inc
ins
adc
push
out
sub
or
add
test
add
jo
mov
test
repz
nop
mov
js
aam
add
clc
push
clc
mov
in
mov
inc
cmp
pop
rol
mov
(bad)
pop
adc
add
(bad)
push
mov
add
cwde
bound
or
inc
call
fiadd
repz
ds
aas
loopne
mov
cmps
pop
sub
bound
cwde
movs
or
add
add
test
lea
push
inc
inc
test
gs
lsl
movs
call
add
pop
push
adc
test
xchg
push
shl
inc
pop
jge
inc
call
sar
inc
imul
add
call
or
(bad)
test
dec
sub
inc
mov
add
push
clc
test
add
push
nop
jge
xor
(bad)
clc
add
inc
pusha
pop
or
ret
loope
add
loopne
pop
clc
jmp
loopne
adc
les
test
mov
cmp
inc
jne
add
pop
retf
cwde
fst
or
mov
rcr
addr16
mov
add
add
push
xor
xchg
add
repnz
sub
dec
aam
fdiv
or
push
loopne
dec
das
add
retf
data16
mov
add
popa
call
sub
inc
push
xor
adc
fidiv
rcl
ret
pusha
arpl
sbb
mov
jns
push
dec
xor
xchg
and
mov
lea
push
push
pop
mov
ins
and
call
addr16
push
add
or
xabort
xor
mov
cli
ret
dec
add
out
rol
add
pop
arpl
xchg
les
or
cmp
adc
sub
bound
into
pop
push
cwde
fcmovb
pop
sub
cdq
dec
stos
das
loopne
add
mov
rol
add
fiadd
icebp
inc
add
or
mov
xor
test
dec
jno
mov
add
sub
jne
add
je
bound
cmp
push
adc
and
push
cmp
ins
loopne
rcl
stos
pop
add
xchg
add
dec
mov
push
add
add
and
(bad)
or
and
adc
aaa
add
add
jge
lock
jae
mov
ffreep
pop
mov
add
dec
mov
mov
xor
rol
pusha
jg
jbe
pop
push
mov
mov
rol
les
push
(bad)
(bad)
jns
fsub
and
mov
pop
inc
xor
inc
sub
outs
xchg
ins
and
sbb
repnz
or
hlt
push
test
nop
adc
inc
out
jae
loope
loopne
add
add
mov
ret
or
fistp
mov
cmps
(bad)
call
add
or
call
inc
test
ret
and
sub
inc
cmp
clc
add
push
pop
mov
add
or
mov
test
in
sar
add
call
dec
lock
es
sar
mov
and
adc
call
add
adc
fsub
mov
add
push
pop
add
sub
mov
loope
call
jge
dec
in
fisub
jle
push
gs
and
or
ins
fdiv
sub
arpl
and
adc
adc
mov
pcmpeqw
inc
dec
gs
jg
inc
mov
xchg
dec
pop
xor
imul
cmps
fldl2t
les
xor
(bad)
add
mov
dec
in
push
je
sar
add
pop
xchg
sbb
jb
mov
mov
xchg
push
push
jne
iret
mov
mov
sub
xchg
xlat
ins
nop
push
out
mov
rcl
mov
rcl
add
mov
adc
inc
sbb
add
add
pusha
das
sbb
lea
pop
inc
jne
pop
ins
add
jmp
cmp
test
add
sahf
iret
call
or
arpl
test
add
push
dec
cwde
inc
jp
dec
add
and
test
int3
push
add
inc
mov
jmp
mov
repz
jmp
lock
shl
mov
add
pusha
add
enter
frstor
mov
add
push
jecxz
mov
das
dec
into
jmp
push
(bad)
ror
cmp
pusha
add
scas
push
push
push
nop
xchg
xor
push
jge
jle
xor
add
and
add
push
adc
mov
xchg
arpl
add
test
scas
and
mov
enter
arpl
add
rol
push
add
and
call
xor
aam
cmp
xor
sbb
adc
imul
cmp
dec
and
mov
test
mov
adc
mov
adc
and
mov
enter
push
sub
and
mov
add
and
and
int3
or
pop
add
sahf
jne
jo
daa
adc
jne
pushf
dec
add
(bad)
lahf
mov
pop
call
add
mov
loope
les
call
add
lods
pop
rol
fisub
adc
jle
call
popf
mov
out
inc
mov
ror
xor
xchg
(bad)
enter
and
dec
loope
sahf
inc
add
or
bound
shl
inc
aas
cmp
mov
add
push
sub
inc
loop
push
and
add
cmp
adc
pushf
(bad)
nop
lahf
call
mov
or
add
mov
(bad)
call
mov
dec
mov
inc
add
and
xor
add
cmp
pop
jmp
dec
lea
and
sbb
jg
inc
sbb
push
cmp
inc
mov
and
pusha
dec
call
ins
cmp
add
push
jge
push
call
les
add
in
pop
inc
call
and
call
pop
pop
xor
sar
add
add
mov
sub
cmp
popa
add
xor
mov
mov
mov
xor
sub
xor
inc
dec
fadd
push
cli
cdq
leave
or
aas
xlat
(bad)
clc
sar
adc
mov
push
jo
pop
loopne
add
mov
add
and
or
test
or
js
sub
fcom
push
add
mov
add
add
mov
or
sub
adc
push
and
(bad)
inc
add
popa
add
cmps
cwde
or
and
sbb
adc
movs
(bad)
push
inc
shr
jne
xchg
add
mov
call
push
inc
fist
adc
mov
movs
or
sub
call
in
daa
add
inc
aas
mov
das
repz
pop
push
pxor
repz
and
mov
test
dec
mov
mov
add
aam
arpl
ins
cmp
dec
cmp
rcr
sub
add
add
pop
or
mov
push
mov
push
ds
sbb
dec
clc
inc
pop
push
and
push
jmp
jmp
mov
nop
add
and
push
dec
inc
btc
add
ss
adc
mov
mov
push
and
inc
test
loope
jb
adc
lock
or
nop
(bad)
adc
adc
sti
bound
jl
add
inc
mov
sub
dec
idiv
add
data16
test
in
add
push
add
mov
das
jge
ret
test
clc
div
cmps
add
call
sar
add
or
add
rol
and
cs
jmp
xchg
push
inc
pop
fistp
adc
add
popa
and
dec
test
push
pusha
call
xor
aam
(bad)
mov
lea
cmp
jbe
packsswb
pop
jno
sbb
xor
sbb
call
in
add
shr
or
jge
sbb
sti
push
add
xchg
cmp
add
or
rol
mov
stos
fist
aam
retf
bound
loop
sar
xchg
sub
call
sbb
add
mov
lods
add
inc
std
add
push
mov
hlt
jmp
mov
imul
push
loopne
(bad)
jl
inc
data16
mov
mov
push
invd
mov
cmps
movs
call
inc
add
add
push
add
push
or
mov
mov
ins
hlt
pop
push
xchg
or
dec
xchg
push
jne
add
inc
or
push
inc
shl
bswap
adc
adc
ss
jne
inc
test
or
add
test
mov
or
aam
add
add
jle
add
mov
fsub
mov
jo
jo
sbb
xor
ss
add
dec
xor
push
push
std
sbb
or
mov
pop
mov
add
dec
inc
jge
dec
inc
jo
add
call
add
or
sbb
mov
dec
or
add
add
ret
add
in
cs
push
xor
adc
mov
mov
mov
push
mov
cmp
add
and
test
call
add
in
mov
jne
add
es
mov
push
rol
adc
pop
les
or
adc
jo
xor
xchg
test
sbb
arpl
dec
(bad)
enter
jge
add
jge
je
adc
pop
test
nop
pusha
pop
add
adc
(bad)
loopne
mov
shr
rcl
sub
adc
cmp
inc
sub
call
int3
mov
add
adc
push
push
lea
mov
shr
(bad)
out
fld
dec
cmps
add
add
pusha
ret
add
cmp
call
sti
and
loop
clc
add
(bad)
sub
pop
bound
add
mov
test
and
lock
add
mov
add
xchg
cmp
dec
cmps
rol
xchg
mov
sbb
jmp
add
xor
ja
cld
add
movs
jo
push
lock
aas
and
pushf
pop
jle
xchg
punpckhbw
mov
dec
inc
sbb
test
dec
clc
xchg
jb
jge
pop
adc
fdivr
popa
mov
and
cld
call
add
add
cmp
clc
add
and
push
gs
xchg
jge
and
shl
add
mov
push
add
scas
lock
mov
inc
xchg
sbb
inc
push
jg
mov
ss
adc
aam
jb
add
test
sub
(bad)
lea
gs
pop
jnp
dec
pop
ret
movs
push
add
push
dec
push
jne
or
shr
add
loope
or
lock
cmp
adc
mov
push
stos
inc
shl
inc
jns
jno
inc
inc
or
add
dec
sub
shr
inc
pop
shl
imul
data16
lock
pusha
dec
adc
add
leave
sub
pusha
call
xor
outs
add
push
jbe
or
dec
call
lods
in
dec
lock
push
and
jmp
add
mov
sub
add
je
shl
mov
xchg
dec
repnz
pop
add
push
lods
call
mov
sbb
xlat
add
mov
in
add
xor
pushf
mov
dec
inc
dec
sahf
lock
add
xor
ret
rcl
adc
dec
xor
mov
jns
sbb
shl
or
mov
and
dec
ret
rol
xor
mov
loopne
xchg
or
or
pcmpgtb
xchg
ins
add
add
and
aas
inc
mov
jg
call
loopne
call
jne
add
shl
or
adc
lock
pop
pop
setp
inc
mov
sbb
push
loop
cmp
adc
and
lock
setae
fdiv
inc
dec
ficom
mov
add
jnp
add
add
push
lea
lds
inc
or
test
test
call
push
inc
dec
loope
sub
cmp
push
(bad)
jmp
and
pop
cmp
test
aaa
(bad)
rcr
call
pop
in
sub
pop
mov
add
in
add
adc
cmp
in
scas
sub
movs
mov
add
add
cmps
cmp
mov
mov
mov
inc
and
jo
jmp
dec
rdtsc
xchg
and
je
call
or
mov
add
arpl
rol
push
rol
inc
mov
xchg
adc
frstor
add
in
pop
and
adc
cmp
add
dec
fcmovnb
call
sbb
call
sub
adc
inc
repz
mov
push
add
mov
add
jno
add
inc
pop
or
pop
push
mov
fprem
push
hlt
and
mov
mov
mov
jl
dec
adc
add
mov
pop
add
rcl
add
add
mov
js
mov
enter
dec
aad
add
mov
(bad)
mov
add
xor
sbb
sub
inc
jle
test
test
test
call
add
mul
inc
add
jge
push
jne
add
jmp
lods
int
mov
imul
mov
adc
push
pop
sbb
addr16
adc
pushf
jg
dec
push
call
out
xor
add
add
and
jb
push
mov
enter
fcomp
fadd
push
loop
rol
add
mov
add
call
call
push
(bad)
nop
push
add
xor
loopne
push
data16
lahf
add
add
add
or
push
mov
in
push
mov
call
test
push
or
xchg
call
test
inc
(bad)
dec
xchg
(bad)
add
xchg
add
mov
inc
mov
dec
pop
adc
mov
xchg
or
add
add
push
xadd
xor
pop
push
or
dec
push
inc
and
inc
dec
dec
inc
bound
adc
retf
sbb
inc
add
and
cmp
dec
call
add
inc
dec
enter
aas
push
call
or
cmp
add
test
add
add
push
(bad)
shr
mov
add
adc
add
dec
push
push
or
xlat
mov
leave
pop
add
push
ror
ror
cmp
and
cmp
pop
push
call
add
cmp
rcl
es
arpl
inc
inc
add
adc
mov
mov
and
inc
repz
js
add
jge
cmp
(bad)
loope
sbb
call
call
cld
add
inc
mov
push
mov
inc
pop
call
jecxz
mov
and
fist
or
adc
nop
outs
lock
push
inc
add
or
fs
mov
inc
pop
adc
(bad)
mov
add
xor
mov
loop
str
js
add
mov
or
sbb
leave
push
je
inc
jne
inc
push
cs
pop
or
add
add
lods
daa
inc
add
sbb
push
mov
push
call
int
dec
add
or
add
inc
call
add
enter
add
or
add
mov
add
(bad)
mov
es
add
dec
adc
mov
mov
or
add
lods
xchg
xor
sbb
xchg
test
int3
jmp
aad
popf
add
pop
jne
mov
lea
xor
cmp
sbb
popa
adc
shr
pop
cwde
loope
mov
push
push
cld
xchg
sub
(bad)
not
add
push
pop
sbb
sub
rol
cmp
mov
push
pop
xchg
jmp
push
add
add
lea
cmp
and
dec
add
shl
jmp
leave
add
rol
pop
add
lock
push
stos
inc
mov
add
add
loope
push
cmp
and
push
call
push
test
add
add
add
neg
rol
jne
clc
outs
add
lea
mov
add
pop
adc
in
cmp
xor
call
or
add
rol
push
rol
add
mov
mov
mov
iret
add
mov
ins
jge
add
dec
jne
popa
outs
div
add
(bad)
mov
pop
add
add
xor
push
jne
push
imul
mov
nop
sbb
sub
mov
and
mov
shr
and
or
dec
and
mov
adc
add
cmc
ins
sahf
mov
add
add
jns
dec
int3
add
jno
call
push
retf
loope
retf
add
push
rol
inc
and
and
call
cdq
sar
lock
call
add
fistp
dec
pop
mov
sbb
mov
sahf
pusha
or
lods
call
dec
je
and
sbb
ret
add
mov
push
xchg
sub
pop
or
inc
fadd
push
call
add
add
mov
test
loope
sar
xchg
pop
add
xor
shr
sub
jnp
ja
call
call
enter
jmp
mov
sub
mov
or
push
pop
fmul
dec
add
and
stos
rol
shl
inc
adc
dec
jmp
sbb
push
cwde
or
jbe
push
jmp
add
ins
dec
out
mov
(bad)
aad
and
cmp
xor
(bad)
lock
inc
jne
aas
add
mov
and
add
pop
cmp
loopne
mov
add
inc
mov
and
mov
mov
adc
aam
jnp
sbb
and
jnp
and
in
sbb
or
add
pushf
xor
arpl
add
pop
cmp
retf
mov
and
stos
add
adc
daa
and
(bad)
fdivr
push
or
add
push
xor
add
cli
xor
add
clc
mov
loopne
add
(bad)
fld
pop
or
and
and
add
dec
loopne
cmp
out
push
add
shr
retf
add
add
pop
enter
enter
jo
or
pop
add
and
pop
inc
pusha
ud0
enter
xor
add
popa
or
inc
mov
xor
sub
add
call
xor
or
lock
sub
push
mov
and
test
movs
call
bound
mov
mov
or
icebp
dec
in
call
inc
add
nop
or
add
lea
packuswb
xor
inc
inc
fild
push
jge
mov
inc
adc
add
pop
cmp
loopne
dec
(bad)
add
jae
xor
pop
add
enter
test
adc
dec
and
add
add
add
xor
js
loope
test
adc
adc
hlt
pop
add
xor
inc
mov
(bad)
mov
int
lods
add
add
punpckhbw
inc
sbb
add
aam
mov
add
push
icebp
sbb
add
sahf
and
call
loopne
or
loopne
mov
add
test
dec
add
call
cmp
shl
test
jecxz
or
and
movs
cmp
push
or
push
dec
pop
add
les
cdq
push
sub
add
add
mov
push
add
call
and
or
fstp
call
push
inc
sbb
mov
adc
jne
ror
rol
mov
icebp
add
lock
push
add
dec
inc
bound
nop
nop
xchg
add
mov
push
icebp
sbb
rol
adc
push
dec
and
call
popf
or
leave
fist
dec
(bad)
jbe
test
cmp
add
mov
ret
add
push
syscall
and
pop
add
adc
sub
adc
pop
xchg
mov
dec
jne
push
add
adc
arpl
and
test
push
dec
jnp
shr
rol
shl
scas
push
add
mov
stos
add
jmp
dec
and
inc
mov
mul
jbe
push
add
pop
inc
call
xchg
ror
add
mov
jge
add
push
test
(bad)
enter
shl
call
mov
adc
push
add
xor
pop
add
xor
mov
test
or
inc
data16
rcl
xor
add
inc
jne
test
push
rcr
xor
pop
dec
or
inc
dec
gs
test
add
cwde
je
jno
add
mov
add
ins
or
adc
sub
inc
add
les
add
aaa
push
(bad)
push
and
sar
not
cmp
sub
add
mov
clc
push
jmp
js
movs
adc
gs
mov
fwait
pusha
jg
mov
fdivr
or
cmp
mov
rol
fcomp
mov
xor
pop
xor
pop
add
loopne
(bad)
cmp
and
add
sbb
shl
lods
lods
mov
xor
dec
mov
add
int3
add
add
shl
mov
dec
dec
inc
rol
push
test
jmp
loopne
mov
adc
dec
cli
call
and
or
or
in
(bad)
jmp
test
mov
pop
mov
popa
mov
leave
fwait
add
push
add
xchg
add
adc
push
pop
push
add
pop
or
inc
rcr
iret
lods
adc
sar
push
jl
call
test
jne
adc
call
das
adc
mov
call
and
femms
dec
fld
add
add
add
add
add
or
rcl
xor
mov
cld
cmp
add
loop
test
jge
xchg
rol
jmp
mov
jb
xor
add
aaa
xchg
jmp
rol
les
xor
adc
pop
call
int
nop
fisubr
xor
push
shl
and
jg
(bad)
ror
dec
add
jmp
call
(bad)
push
icebp
or
loope
inc
es
push
push
test
std
mov
add
push
sbb
and
nop
add
add
add
imul
jge
add
inc
mov
mov
jo
aad
push
pop
mov
sahf
sub
arpl
adc
mov
ror
shr
inc
cmp
push
lods
jmp
xchg
mov
dec
or
and
(bad)
clc
enter
xchg
add
retf
pop
pop
push
bound
add
add
(bad)
mov
addr16
sbb
mov
push
add
xchg
inc
add
fadd
xchg
and
(bad)
jmp
and
pop
(bad)
retf
or
add
mov
imul
fmul
ret
loopne
jne
add
mov
add
push
add
adc
ror
adc
pop
sbb
xor
or
push
lock
add
loopne
aas
xor
push
rol
lea
add
lods
adc
pop
jg
loop
xchg
add
jmp
(bad)
aas
add
inc
mov
lahf
or
les
adc
push
add
scas
jl
int
add
(bad)
rcl
add
pop
cmp
add
retf
push
inc
movs
fsub
pop
lock
shl
fsubr
mov
out
stc
imul
test
pop
nop
jp
sub
movlps
mov
in
or
imul
or
cmc
sete
rcl
add
mov
and
dec
adc
mov
and
inc
add
add
add
xor
mov
cmp
mov
push
mov
add
pop
adc
iret
xor
or
fld
imul
add
add
adc
sbb
and
xor
add
or
dec
and
xor
add
adc
inc
and
inc
push
pop
mov
psrlw
sbb
add
inc
add
mov
nop
je
adc
xor
and
cli
add
es
xor
add
add
movs
imul
add
adc
mov
hlt
add
sar
add
push
add
pop
call
rol
sar
aas
add
js
adc
test
in
inc
rol
call
cmp
mov
nop
rol
fcom
adc
add
sti
into
add
mov
stos
call
mov
xchg
push
lods
add
sbb
dec
xor
lea
or
mov
cmp
and
dec
jmp
jne
movs
js
rol
rol
mov
push
add
in
aam
adc
add
mov
test
call
add
adc
or
cwde
aaa
retf
sub
js
xchg
or
test
push
fadd
out
push
push
fdivr
call
xchg
das
xchg
mov
pop
jle
sbb
add
jmp
fst
push
outs
inc
pop
jb
add
pop
or
add
adc
jo
popa
push
jae
jmp
dec
test
rol
add
pop
sbb
mov
add
(bad)
test
pop
dec
pop
dec
xchg
add
popf
mov
ja
cmp
call
xor
adc
adc
dec
xchg
(bad)
pop
xchg
pop
sbb
jnp
daa
push
add
push
test
js
adc
jmp
dec
add
and
(bad)
mov
loop
add
or
mov
fcmovbe
inc
fisubr
add
loope
enter
dec
lock
push
xor
and
adc
lea
lods
jle
push
add
sub
inc
enter
loopne
lock
ficomp
lock
xor
call
cld
inc
imul
shl
les
inc
dec
cmp
mov
add
add
loopne
cmp
in
push
verw
or
add
mov
(bad)
jmp
inc
add
xor
xchg
or
dec
push
or
add
push
add
add
dec
push
add
call
(bad)
xgetbv
jmp
xor
mov
add
(bad)
das
add
call
mov
cmp
push
dec
add
adc
btc
mov
outs
add
inc
fiadd
add
jnp
and
and
in
loopne
add
add
add
shl
adc
call
out
push
or
ret
add
push
jae
popa
call
imul
push
inc
call
mov
inc
adc
xchg
add
add
mov
add
dec
icebp
pusha
add
add
popa
ret
and
fst
mov
and
or
shl
xchg
mov
push
jecxz
sub
pop
mov
imul
push
test
jnp
inc
add
pop
inc
mov
nop
call
int
add
add
and
and
test
inc
fadd
or
mov
test
or
push
adc
fidiv
ins
loope
outs
jb
add
push
test
ret
mov
jmp
add
in
push
and
test
push
mov
jo
push
xadd
inc
inc
lods
rol
mov
mov
push
dec
add
pop
or
loopne
add
add
sbb
dec
test
pusha
and
mov
add
test
dec
mov
and
xchg
mov
outs
shl
pop
add
add
fmul
xadd
ret
add
shl
add
pop
and
add
out
dec
iret
ror
push
mov
js
adc
inc
mov
add
jne
int3
call
stc
ret
mov
ret
mov
mov
or
cmp
xchg
or
pop
bound
and
push
dec
loopne
lds
push
push
pusha
push
scas
or
mov
add
stc
inc
jg
push
(bad)
or
mov
call
aam
leave
mov
call
lock
inc
and
lea
mov
add
add
add
(bad)
ja
popa
adc
je
test
cmp
mov
call
fld
stos
(bad)
jne
jae
add
rol
add
popf
xchg
add
arpl
in
inc
in
loope
in
dec
jno
push
sub
or
test
invd
add
pusha
pcmpeqd
ret
push
add
add
push
mov
pusha
cmp
call
rcl
pop
(bad)
clc
dec
cmp
push
push
(bad)
cmp
aam
push
add
mov
ja
jne
add
pop
inc
mov
xchg
add
sub
adc
add
add
rcr
add
cmp
shl
add
je
inc
test
dec
add
sahf
add
fadd
ds
mov
dec
in
rol
mov
loopne
pusha
(bad)
mov
xor
add
and
add
push
dec
pop
shl
push
push
push
lds
push
shr
sahf
push
push
call
push
adc
jmp
ins
jne
xchg
dec
jo
cmovs
sbb
mov
push
cdq
add
mov
fs
sbb
add
je
mov
or
push
cmp
xor
add
rcl
jns
dec
inc
call
add
outs
mov
ja
jbe
mov
add
int3
or
in
loopne
push
jns
adc
add
arpl
pop
push
add
inc
push
jge
push
call
xor
sldt
dec
aaa
pop
loop
add
jb
adc
sbb
push
mov
cmp
rol
adc
or
dec
add
add
add
fcom
sbb
sub
(bad)
mov
add
adc
xchg
dec
push
add
push
enter
adc
or
mov
push
add
outs
sub
sub
add
(bad)
jmp
call
or
shl
mov
add
adc
jne
add
mov
jmp
mov
sub
enter
push
call
pop
mov
xor
add
jnp
dec
fs
mov
add
mov
mov
enter
cmp
inc
nop
add
inc
or
(bad)
test
add
push
icebp
inc
dec
dec
call
add
popa
arpl
add
mov
or
dec
or
clc
pop
push
or
mov
ret
adc
(bad)
jbe
loopne
ins
fsubr
pop
xor
add
jge
add
inc
sbb
or
push
push
cs
and
mov
add
retf
mov
add
lock
dec
add
cmp
nop
ret
adc
add
xchg
(bad)
dec
push
jo
adc
icebp
pop
cmp
rcl
add
mov
sub
mov
mov
scas
fadd
loopne
fdiv
popf
and
add
pop
sub
xchg
stos
rol
cmp
or
mov
and
aaa
inc
inc
bound
fnstsw
pop
mov
mov
je
outs
and
or
sub
inc
xor
cmps
retf
std
cdq
add
jmp
add
test
or
add
test
call
push
jge
sub
test
mov
mov
mov
mov
push
dec
call
call
sbb
sbb
and
cmp
enter
push
or
pop
xchg
pusha
(bad)
call
inc
out
xchg
or
add
and
std
adc
add
add
add
and
sub
mov
sbb
or
add
call
inc
dec
ins
jb
add
dec
push
push
test
and
mov
xor
test
adc
push
ret
push
mov
add
adc
push
add
cmps
and
movntps
lock
add
add
add
push
push
scas
ret
(bad)
inc
mov
add
cmps
call
inc
mov
xor
inc
and
or
add
mov
and
push
test
adc
jb
rol
add
jne
add
xchg
adc
or
(bad)
jne
lods
or
mov
stos
adc
arpl
dec
add
ret
adc
xor
mov
jecxz
outs
add
test
lods
call
sbb
sbb
or
(bad)
call
cmp
jle
pop
movs
inc
xor
and
dec
xor
push
mov
cmp
mov
clc
test
or
or
mov
or
cli
cmovae
dec
test
dec
rol
xor
test
or
loope
call
test
shr
mov
xor
(bad)
push
mov
add
sbb
ins
add
dec
add
sbb
jecxz
call
sbb
jmp
or
inc
in
add
mov
ret
add
test
add
push
push
inc
or
mov
xchg
dec
addr16
(bad)
shl
inc
jmp
add
or
(bad)
enter
mov
(bad)
je
in
lea
movs
inc
sbb
add
fist
sbb
jbe
inc
dec
and
repz
js
and
adc
xor
popa
enter
jmp
mul
mov
sub
adc
add
ret
inc
jg
pop
add
pop
popa
call
loope
jl
mov
test
add
es
inc
add
in
dec
add
fldenv
lods
add
test
push
ret
add
push
add
movs
call
and
push
or
in
add
xor
add
and
mov
sbb
sar
add
dec
xchg
add
add
push
and
ret
adc
inc
jno
popf
test
inc
jnp
sbb
add
lahf
shl
and
jo
jle
jge
add
(bad)
str
call
jecxz
add
and
lea
test
cmp
add
cmp
xor
inc
add
mov
adc
jae
jns
data16
arpl
lods
mov
rcr
enter
sub
mov
jmp
add
arpl
jge
xor
sub
add
pop
or
adc
sub
add
mov
cmp
pop
push
call
add
dec
lods
push
neg
(bad)
iret
push
test
sbb
ror
mov
je
test
wrmsr
inc
add
mov
xchg
sub
call
add
inc
sub
sub
push
xor
add
(bad)
pop
pop
jl
xchg
push
or
mov
shl
sbb
push
call
push
pusha
loop
xor
call
mov
sub
adc
and
jmp
lea
int
inc
sub
inc
mov
into
shl
std
adc
ins
or
adc
pop
test
clc
loopne
add
clc
dec
add
enter
cld
add
ror
xchg
pop
push
in
imul
add
inc
dec
or
add
push
add
mov
add
loope
aas
mov
jne
adc
and
enter
loop
mov
rcl
adc
shr
xchg
ret
pop
test
mov
ins
add
mov
lds
add
sub
pop
mov
loopne
outs
xor
fsub
adc
mov
or
in
test
clc
mov
lock
push
jg
sub
mov
scas
or
inc
xor
mov
hlt
add
mov
inc
add
jmp
dec
mov
inc
or
daa
or
pop
jg
ret
push
mov
cmp
and
push
js
mov
add
mov
add
xchg
sar
outs
call
(bad)
(bad)
call
jge
adc
dec
inc
jo
mov
stc
jae
test
push
imul
add
add
mov
dec
neg
nop
xor
mov
jb
rol
push
inc
mov
pop
movs
rol
fcomp
add
xor
in
push
loopne
xor
push
cld
pop
dec
dec
add
mov
(bad)
jo
and
shl
nop
test
call
lahf
add
jne
and
dec
(bad)
(bad)
inc
add
or
cmp
adc
rcl
or
and
dec
add
add
add
push
test
sbb
in
add
push
jno
ret
dec
add
fwait
call
dec
call
sbb
cmc
dec
leave
fld
add
sub
popa
in
pusha
adc
adc
call
or
add
add
sbb
add
(bad)
or
mov
call
add
stos
rcr
push
add
lods
call
mov
inc
xor
sahf
lea
dec
and
inc
mov
mov
das
add
add
nop
jo
or
popa
inc
call
add
and
movs
test
enter
add
popa
fadd
loopne
inc
dec
dec
lea
rol
icebp
inc
adc
push
add
into
mov
mov
(bad)
pcmpeqw
push
mov
xor
add
add
and
in
sub
and
add
push
mulps
pop
jnp
rcl
mov
add
mov
and
adc
ins
rcl
cmp
inc
add
mov
rol
dec
add
je
call
add
and
mov
in
inc
jno
test
cld
xchg
or
pop
(bad)
nop
add
xchg
and
inc
pop
inc
add
mov
or
mov
cld
call
pusha
sbb
call
(bad)
sti
adc
add
jge
jnp
xor
in
add
mov
adc
dec
loope
mov
add
jmp
inc
inc
add
mov
pop
sbb
test
clc
cmp
cwde
(bad)
and
add
fiadd
and
mov
jnp
loope
inc
mov
add
enter
aaa
lock
sub
push
sub
add
lds
fadd
retf
dec
in
add
adc
aaa
add
add
dec
hlt
xor
or
inc
sub
loopne
mov
add
sub
add
and
and
add
bound
stos
mov
add
add
(bad)
adc
clc
cmp
mov
pop
(bad)
push
ins
call
aas
sar
add
add
repz
icebp
test
dec
sub
jnp
dec
jb
call
add
inc
out
lea
je
icebp
xor
pushf
mov
cmp
clc
add
inc
bound
shr
pop
add
ror
jne
stos
sub
add
mov
push
rol
test
inc
mov
stos
add
icebp
jmp
ret
jne
repnz
sti
push
adc
cld
sbb
and
add
xor
add
and
add
sbb
add
push
or
fsub
push
add
les
and
add
call
mov
and
xor
push
push
pop
ret
adc
adc
pusha
add
mov
add
inc
inc
call
push
mov
pushf
mov
call
inc
adc
add
arpl
adc
sbb
ret
aas
dec
loopne
loop
add
jge
pop
push
div
pop
hlt
popa
rcl
pop
add
add
push
xstore-rng
cmps
test
cmp
call
xor
add
add
sub
dec
or
add
mov
mov
lock
adc
push
mov
jmp
push
daa
sbb
jo
popa
jmp
inc
mov
xor
mov
add
mov
ror
fcom
clc
xor
loopne
shl
test
push
mov
out
or
arpl
add
add
test
and
and
fild
xchg
cmps
adc
add
lods
adc
fstp
xor
(bad)
div
dec
add
and
push
or
scas
add
add
aaa
inc
add
adc
jb
call
inc
xor
pop
push
or
jmp
ror
es
add
dec
pop
push
push
mov
add
and
add
out
int
and
ret
xchg
jne
(bad)
(bad)
and
and
add
push
inc
and
shr
sub
add
add
and
push
lea
inc
call
push
(bad)
or
adc
add
inc
add
push
mov
call
add
push
mov
call
sub
lock
add
and
test
ja
div
test
xor
add
cld
mov
lock
xchg
or
xor
lock
repz
test
call
enter
call
sub
ret
aas
adc
add
add
inc
add
rol
and
cmovs
add
mov
(bad)
xchg
je
xor
pop
test
adc
add
add
ss
(bad)
loopne
rcr
cli
jne
add
add
add
add
add
push
enter
add
add
rcl
ja
mov
add
and
push
mov
lea
xchg
jne
aam
test
mov
adc
or
add
pop
push
pusha
icebp
push
sub
pop
pop
add
add
add
adc
sbb
add
add
call
add
jae
xor
add
mov
test
jne
sub
adc
jae
add
jmp
inc
pop
pusha
mov
shl
inc
add
call
and
shl
mov
or
cmp
push
loopne
or
adc
stos
add
xchg
push
adc
sti
adc
or
add
and
xlat
add
add
mov
sbb
pop
test
ror
cs
movs
and
add
add
fwait
add
mov
inc
pop
and
cmp
(bad)
push
add
jo
add
add
inc
jge
or
add
lahf
ror
jo
push
jle
std
sbb
sub
cmp
inc
inc
addr16
es
mov
add
or
adc
and
mov
inc
dec
push
mov
sub
stc
(bad)
dec
add
cmps
jmp
sub
mov
pop
fiadd
aam
call
jg
add
pop
pop
add
cmc
cmp
dec
popa
es
cmps
or
mov
movs
das
add
test
push
out
repnz
ins
xor
sahf
aaa
sbb
inc
add
push
dec
add
inc
movs
pop
dec
add
into
test
mov
mov
fsub
rol
(bad)
(bad)
add
gs
pusha
dec
cdq
and
sbb
and
call
push
push
arpl
or
mov
rol
or
add
xchg
pavgw
test
rcl
add
ror
mov
dec
clc
aas
xchg
shl
popf
jns
inc
call
rcr
jge
nop
cmc
imul
add
pop
cld
add
add
xchg
loopne
adc
mov
test
sbb
call
lods
fild
add
cmp
xor
xchg
adc
shl
and
inc
mov
inc
or
adc
fprem
add
cld
sar
in
fdiv
sbb
cmps
push
add
add
enter
add
add
push
mov
push
ret
push
add
mov
push
sub
jne
add
fisub
add
add
sti
jge
fs
add
neg
adc
add
or
add
add
in
push
add
push
push
cmovnp
xor
call
sub
pop
fisub
pop
sar
call
call
verw
push
gs
ds
adc
jmp
jne
ror
push
mov
add
sti
(bad)
sahf
dec
(bad)
jns
xor
(bad)
mov
inc
add
inc
add
dec
xor
call
rol
add
adc
lock
xor
add
arpl
(bad)
in
push
mov
jo
call
int
mov
add
sub
inc
mov
cmp
sbb
add
add
(bad)
fild
(bad)
push
sar
je
jmp
xor
mov
inc
add
loopne
pop
aad
xchg
nop
enter
fwait
add
inc
add
push
add
add
dec
(bad)
shl
sbb
xor
fadd
jge
call
push
xchg
daa
adc
test
call
jae
add
and
test
add
cmp
inc
inc
aaa
cmp
add
enter
jne
xor
cmp
and
dec
mov
vrsqrtss
push
or
cmp
je
add
(bad)
push
mov
sub
(bad)
mov
inc
push
mov
push
xor
xor
cs
cli
or
dec
lods
add
nop
jl
ds
add
mov
add
add
fs
sbb
mov
data16
push
xlat
jge
sub
loope
or
(bad)
adc
or
aad
pusha
mov
fcom
push
and
push
dec
rcl
adc
pop
xor
cld
test
adc
add
add
lahf
add
dec
cs
xchg
xor
dec
enter
jecxz
add
test
xor
xchg
sbb
aaa
mov
mov
and
dec
push
or
arpl
inc
out
push
add
inc
sbb
adc
add
jl
sub
xor
mov
add
sbb
loope
add
cmp
(bad)
call
jge
loope
xchg
mov
cmp
pop
(bad)
in
add
xchg
push
dec
or
push
aad
sbb
mov
out
int
sub
and
xor
sbb
fs
push
inc
jge
push
nop
nop
add
test
xor
cmp
call
or
daa
aaa
inc
loopne
sbb
(bad)
in
mov
add
lods
or
mov
dec
add
loopne
sbb
test
fist
into
add
bound
ret
push
push
xchg
sbb
push
loope
(bad)
mov
mov
or
ret
pop
dec
sar
sbb
hlt
cwde
fsub
add
jmp
xchg
dec
inc
jo
jg
inc
sub
nop
or
mov
lods
rcl
and
mov
adc
lock
pop
xor
(bad)
dec
mov
mov
mov
dec
out
inc
add
ins
add
adc
test
inc
fsubp
xchg
mov
adc
add
xchg
add
adc
or
ds
add
movs
push
add
inc
int3
or
sub
add
jbe
add
add
xor
call
add
add
sub
jo
xor
add
adc
mov
repnz
mov
xchg
call
movs
push
inc
sbb
call
pusha
xor
or
sbb
outs
dec
xchg
dec
(bad)
fidivr
inc
mov
add
std
std
inc
or
js
jl
sbb
push
add
jmp
inc
fisttp
lock
aad
inc
adc
add
call
cmp
cmp
push
jmp
int3
js
add
mov
mov
mov
jecxz
cmp
inc
test
add
inc
xchg
or
add
mov
jns
add
add
add
fwait
mov
mov
dec
adc
mov
sub
add
mov
lods
jno
rcl
cdq
arpl
xchg
movs
movs
push
dec
jmp
push
pop
mov
add
daa
retf
mov
xor
sbb
push
call
movs
(bad)
adc
sahf
or
cld
push
xor
push
add
std
xor
inc
jne
rcr
add
add
or
cwde
cmp
test
call
sub
adc
mov
hlt
sbb
add
dec
jl
push
jg
adc
inc
pusha
call
inc
inc
add
dec
mov
or
push
or
push
add
and
add
or
cmc
xchg
aam
and
retf
add
push
fiadd
inc
pushf
push
jge
jne
add
cmc
inc
push
and
call
sub
inc
ret
mov
add
sbb
jmp
loopne
popa
dec
sub
add
(bad)
out
adc
add
punpckhbw
pop
adc
(bad)
push
mov
add
rol
add
mov
cmp
stos
test
call
jl
jmp
and
nop
or
test
fnstenv
mov
dec
call
inc
mov
jle
or
xchg
pop
inc
push
sbb
mov
mov
add
(bad)
sub
stc
loope
add
mov
push
xchg
pop
jb
push
inc
stc
push
test
in
dec
xlat
ins
add
ins
test
add
add
add
pop
gs
sub
loope
inc
push
cmp
push
adc
dec
call
sub
jb
or
sbb
lock
dec
test
adc
call
fcmove
fs
dec
add
sbb
add
cmps
sbb
mov
add
dec
call
add
add
sub
(bad)
call
add
and
add
add
pop
add
pop
add
push
jo
inc
sbb
adc
jne
(bad)
in
test
or
add
dec
add
or
call
daa
mov
aas
push
sub
jno
or
sub
test
add
add
cmps
repz
add
push
add
inc
add
rol
movzx
dec
pusha
add
add
jp
push
xchg
dec
adc
adc
fs
sbb
add
add
mov
aas
rcl
jg
repz
xchg
cmps
or
cmpxchg
add
push
sbb
nop
imul
add
mov
rcl
jg
adc
push
loopne
add
(bad)
jg
add
add
inc
add
jo
add
add
fucomi
jbe
add
inc
mov
ret
push
call
inc
mov
adc
movs
nop
nop
add
add
inc
and
pusha
jne
dec
call
dec
pusha
add
pop
mov
add
add
call
or
ds
adc
add
and
push
clc
pushf
add
and
xor
dec
call
cmp
push
add
add
inc
sar
add
fcom
add
jne
dec
test
dec
jb
inc
rcl
and
jmp
add
push
push
addr16
es
cmc
or
(bad)
loope
lods
or
add
call
cwde
push
adc
add
adc
cmp
pop
pop
call
xor
push
add
dec
add
dec
sbb
imul
add
push
cdq
and
mov
push
mov
jge
rol
shl
inc
fimul
push
rol
mov
fs
mov
or
or
mov
push
jge
ja
add
adc
mov
in
inc
add
sub
sbb
fldenv
xor
sbb
add
push
loop
adc
jo
lds
or
mov
es
and
xchg
cwde
in
inc
inc
jno
add
add
push
add
leave
xchg
movs
dec
leave
popa
mov
sub
mov
add
and
call
push
lea
test
or
lods
fs
ja
add
test
rol
(bad)
repnz
adc
push
add
add
inc
add
mov
ins
in
clc
test
inc
push
jbe
shl
ret
dec
xchg
push
add
inc
jne
adc
inc
rol
cmps
xchg
inc
loopne
fcom
mov
inc
loope
imul
mov
leave
or
add
inc
xchg
in
mov
or
push
push
movs
or
(bad)
pop
sub
xor
add
test
js
inc
jmp
(bad)
mov
nop
dec
leave
push
lea
inc
(bad)
or
adc
adc
test
add
(bad)
dec
mov
add
test
dec
xor
pop
add
scas
inc
pop
mov
sbb
in
lahf
inc
add
je
add
mov
out
dec
dec
inc
jle
ret
mov
mov
call
dec
mov
(bad)
cmp
push
test
and
sti
xchg
add
xor
or
test
test
mov
xchg
fcom
clc
mov
callw
daa
pop
call
pop
(bad)
lea
sub
mov
scas
cwde
and
push
jmp
adc
mov
or
add
adc
rol
test
and
jp
inc
dec
loopne
push
jl
stos
data16
sub
dec
push
pop
inc
and
les
push
add
repnz
jle
push
push
leave
fild
add
jmp
inc
call
sub
(bad)
call
inc
paddw
inc
add
inc
sbb
jecxz
push
add
test
add
add
pop
lock
dec
aas
add
movs
paddb
push
les
add
and
add
inc
pop
(bad)
fild
call
jno
cmp
cmp
pop
adc
fsubr
add
pop
add
popa
fiadd
mov
and
inc
sbb
ror
jge
sub
(bad)
call
and
test
add
jle
add
sub
shr
test
sbb
outs
add
add
cmp
add
mov
or
mov
loop
xchg
loop
add
inc
adc
add
loopne
shr
inc
push
shl
push
add
sub
or
push
add
add
fidivr
add
push
adc
(bad)
add
or
rcr
nop
inc
pop
dec
clc
push
and
mov
dec
add
push
rcr
pusha
push
add
nop
and
rol
push
inc
xor
mov
out
nop
mov
call
or
inc
jmp
add
mov
mov
add
(bad)
dec
or
sbb
push
add
mov
fiadd
push
mov
shl
sub
add
pop
enter
mov
adc
stos
or
add
pop
add
add
or
add
jb
pop
xor
or
js
hlt
out
dec
ficom
lods
xchg
pop
push
dec
lods
add
mov
push
ins
add
bound
inc
fdiv
in
fldcw
fisttp
inc
and
add
call
jl
cmp
or
mov
adc
sub
cmp
push
add
mov
xchg
ins
inc
push
mov
imul
add
adc
and
movs
sbb
icebp
dec
and
inc
xchg
add
add
pop
sahf
cmps
mov
inc
sub
jnp
add
(bad)
call
mov
stc
paddsw
fucomp
add
and
and
sbb
test
mov
and
add
dec
test
clc
aaa
mov
add
call
mov
test
sysret
stc
outs
push
fild
push
add
add
adc
jae
shr
add
mov
mov
push
add
mov
rcl
xor
das
in
add
and
icebp
outs
inc
adc
pusha
int
inc
pop
push
jne
out
mov
inc
minps
mov
add
pop
add
add
add
in
in
call
mov
lock
loopne
or
fimul
popa
push
dec
xchg
push
jne
call
enter
mov
setns
sub
sar
mov
push
push
add
adc
mov
add
adc
shld
adc
rol
fmul
dec
or
call
enter
jecxz
cmp
mov
mov
adc
push
add
add
push
neg
adc
or
adc
sub
and
push
add
mov
or
add
push
call
add
push
xchg
in
add
call
sar
cld
push
sub
mov
mov
xor
fadd
add
mov
dec
add
jnp
add
adc
clc
popa
mov
xor
arpl
push
pop
add
shl
nop
inc
add
cmp
push
push
and
push
push
adc
mov
cmp
loopne
call
add
pop
call
mov
imul
rcl
jmp
pop
pusha
call
add
add
dec
push
je
movs
add
add
movq
xor
call
jl
add
or
push
test
call
push
dec
imul
add
adc
cmp
adc
ins
jmp
adc
or
push
movs
cwde
popa
add
(bad)
mov
jmp
call
sbb
or
jno
and
and
div
push
adc
push
mov
mov
popa
push
add
adc
lock
call
add
call
add
rcr
cmc
pusha
add
mov
(bad)
call
rol
lea
pop
shr
cmp
hlt
or
add
or
push
add
push
inc
add
mov
jne
cwde
inc
add
xchg
cwde
inc
inc
mov
add
sub
add
bound
adc
addr16
add
aaa
inc
dec
inc
jmp
lods
ret
nop
push
add
(bad)
rol
add
mov
push
mov
dec
daa
dec
mov
hlt
mov
pop
xor
cs
adc
jle
stos
push
add
xor
mov
enter
jnp
in
and
inc
cwde
jg
add
inc
add
push
nop
push
jns
call
add
cmps
xchg
enter
push
jne
adc
add
and
push
add
or
and
add
add
rcl
nop
or
cmp
or
(bad)
sub
add
add
xor
or
in
push
pop
add
fadd
add
push
ins
mov
call
mov
sub
adc
inc
movs
inc
add
fild
pop
dec
leave
call
and
mov
inc
add
jg
inc
loopne
sub
mov
je
inc
add
jne
add
xchg
lea
jle
cmp
pop
mov
add
add
cmp
jb
push
and
setle
in
push
cmp
js
pop
cmp
sub
les
add
sub
pop
adc
adc
add
nop
add
test
test
mov
xor
adc
jne
pusha
pop
(bad)
push
add
hlt
mov
add
cmps
add
(bad)
in
inc
sbb
jg
or
call
pop
mov
inc
mov
xor
push
jne
rol
xor
dec
push
jge
or
cwde
add
push
into
call
(bad)
jmp
push
nop
shr
cmp
add
xor
add
cmp
fcomp
mov
rcr
sbb
rol
rcl
sub
pop
adc
in
xor
mov
jmp
jo
rcl
pusha
and
inc
dec
dec
dec
ins
(bad)
wbinvd
outs
add
inc
mov
add
adc
loope
inc
psubb
call
test
push
mov
mov
out
jp
mov
sub
adc
jnp
test
rol
mov
add
movs
push
inc
icebp
lock
push
call
or
add
movs
test
jmp
inc
push
xchg
pop
add
loopne
add
out
sbb
and
mov
inc
xor
add
enter
sub
test
cmp
nop
xor
ins
clc
repnz
sub
mov
loopne
fadd
aad
jmp
movs
or
rol
inc
add
and
jo
jns
mov
arpl
add
sub
and
lock
(bad)
out
add
pop
ins
xchg
lea
lea
int3
shl
push
sub
jmp
or
add
cmp
mov
add
add
mov
call
test
xchg
or
cmp
jge
pop
xor
adc
xchg
aam
push
test
xor
mov
inc
pop
sub
mov
stc
mov
fst
add
dec
sub
lock
and
mov
xchg
mov
cmp
(bad)
jge
adc
loopne
loopne
test
rol
push
test
lea
call
mov
mov
call
mov
cld
add
pop
fiadd
lock
push
or
retf
dec
jne
adc
test
cmp
or
pop
cdq
fist
add
inc
jmp
enter
sub
sub
add
cmp
(bad)
leave
loopne
call
mov
add
inc
pop
cmp
add
loopne
daa
ret
call
dec
add
inc
adc
add
rol
aam
add
and
pop
inc
retf
xor
loopne
cmp
test
add
or
enter
adc
sbb
cld
pop
ret
add
inc
or
add
sbb
out
retf
adc
loopne
pop
add
jae
std
adc
add
mov
pop
push
add
(bad)
xor
xor
add
imul
dec
and
inc
inc
pop
cwde
xchg
cmps
call
iret
stos
push
(bad)
shl
jmp
cli
dec
in
or
pop
test
sub
sub
cmp
push
add
jmp
loop
push
add
inc
or
out
xchg
mov
dec
and
inc
add
add
enter
pop
or
or
sbb
icebp
cwde
pop
into
add
add
xor
sbb
dec
mov
popf
or
or
mov
test
add
jb
jmp
add
lock
gs
or
inc
add
shl
xchg
lea
ins
dec
inc
movs
and
fs
movs
aaa
mov
add
test
call
dec
dec
inc
dec
cmp
add
popa
push
pop
imul
mov
shl
and
ret
mov
adc
adc
ret
inc
mov
add
sbb
add
retf
inc
imul
push
(bad)
mov
cmp
add
in
dec
dec
test
mov
dec
rcr
pop
shr
push
and
stos
push
pop
dec
add
inc
adc
cmp
lea
mov
call
add
(bad)
adc
pop
jne
pop
cmp
sbb
xchg
shl
xor
cmp
cmps
cmp
mov
daa
ror
shr
add
add
pusha
xor
adc
mov
push
cwde
in
xor
out
mov
dec
lods
add
add
add
dec
or
sub
clc
test
xchg
aam
pop
push
dec
dec
shl
jb
call
add
mul
mov
(bad)
add
mov
call
adc
adc
cmp
inc
and
jbe
(bad)
jmp
sbb
add
or
call
or
cmp
add
and
add
loop
inc
aad
mov
inc
call
cmp
adc
sub
sub
cmp
xchg
push
push
mov
mov
and
movs
movs
push
pop
add
pcmpeqd
mov
adc
cmp
fsubr
and
call
(bad)
lock
clc
rol
call
inc
stc
lea
cmp
push
mov
add
cmp
popa
pop
mov
add
pop
cwde
push
xor
push
jl
xor
add
mov
xor
push
lahf
mov
mov
xchg
ret
add
cmps
cmovbe
je
dec
inc
add
add
(bad)
jmp
lahf
dec
or
dec
rol
call
inc
lods
pop
mov
adc
jmp
popa
or
and
arpl
mov
pop
jmp
cmp
push
add
add
lds
inc
inc
je
lods
add
mov
xor
inc
test
add
adc
dec
add
dec
inc
in
cld
and
jmp
push
test
clc
mov
mov
xor
and
je
jmp
call
es
push
rol
mov
mov
xchg
inc
fs
add
test
ja
adc
loopne
push
popa
das
jecxz
xor
mov
and
sbb
and
dec
add
pop
add
push
inc
push
xchg
nop
ins
movs
and
lods
or
add
dec
fild
add
mov
and
(bad)
sbb
jmp
push
test
add
adc
add
enter
cli
call
inc
pop
sub
add
jno
add
dec
xchg
popa
xchg
pushw
or
loopne
xor
jns
add
(bad)
pusha
xor
adc
add
ror
inc
mov
or
or
scas
jg
mov
sbb
mov
add
pusha
add
add
mov
fbld
push
or
mov
pop
add
pop
ror
fst
jnp
xor
sbb
add
adc
(bad)
inc
pop
and
test
call
sahf
inc
add
add
iret
and
stc
jmp
mov
rcr
mov
push
in
lods
daa
ds
jo
add
(bad)
push
push
inc
pop
inc
mov
dec
repnz
es
add
mov
adc
call
clts
dec
cs
push
jbe
pop
add
sbb
xchg
mov
iret
mov
jmp
lods
sub
add
(bad)
jb
les
push
ror
dec
add
dec
and
add
jmp
push
add
mov
add
push
or
rol
rcr
sbb
adc
inc
add
xchg
add
or
aas
pusha
add
data16
adc
sbb
rol
inc
mov
push
call
pop
add
pop
inc
popa
ja
adc
add
adc
popf
not
xchg
adc
call
xchg
add
int3
cmp
loopne
xor
imul
scas
jge
jne
xor
add
add
xor
mov
mov
mov
dec
adc
or
ror
mov
daa
call
mov
push
jns
inc
in
push
inc
test
xchg
retf
sub
test
daa
xor
dec
es
aas
add
inc
je
add
(bad)
fiadd
rcl
dec
ds
fsub
xor
jp
shr
xchg
push
inc
mov
lods
pop
inc
add
fldenv
rcr
cmp
(bad)
push
inc
cwde
add
push
call
loope
enter
push
cmp
repz
jmp
add
push
loopne
add
add
stc
test
xor
sbb
xor
aas
rcl
push
jmp
mov
add
mov
inc
xor
xchg
or
inc
dec
fiadd
cmps
dec
ret
sar
push
add
dec
and
fld
mov
or
xchg
cmp
(bad)
cdq
pusha
xor
mov
(bad)
xchg
xor
jnp
jne
add
adc
add
mul
aas
push
add
and
inc
add
unpckhps
shl
and
and
adc
(bad)
popa
inc
mov
std
not
or
add
inc
or
mov
push
push
add
pop
jmp
add
inc
add
dec
call
mov
add
dec
inc
add
jne
and
add
or
add
add
popa
shl
or
call
mov
jnp
mov
and
mov
mov
retf
mov
pushf
loopne
inc
sub
dec
xor
add
scas
or
add
push
ret
xor
push
mov
add
pop
add
rol
xor
sar
icebp
sbb
push
sbb
push
fmul
push
add
sbb
or
setg
icebp
add
call
jbe
add
mov
adc
and
dec
xor
dec
cmp
imul
add
repz
aas
mov
out
lea
and
call
enter
lar
jmp
ror
add
xor
call
sar
add
pop
push
cmovno
push
test
mov
add
xchg
and
sub
push
call
or
and
lds
push
sub
add
adc
add
inc
mov
add
xchg
add
and
lea
ss
mov
in
inc
push
loopne
add
dec
jmp
push
cld
sbb
and
leave
add
mov
add
mov
pop
pop
xlat
call
push
add
int3
adc
add
pop
test
jp
and
mov
sub
xchg
and
dec
test
call
add
std
adc
rcr
add
rcl
popa
sub
loopne
add
add
add
je
call
std
in
(bad)
jb
std
sub
add
mov
xor
lods
push
call
jmp
cmp
je
daa
call
add
push
sbb
mov
or
add
add
adc
or
sbb
dec
adc
mov
inc
daa
add
mov
sub
jo
jge
dec
push
nop
loopne
jno
add
push
in
pop
mov
add
mov
add
mov
inc
pop
add
rol
cs
and
pop
adc
jbe
std
push
divps
(bad)
je
or
add
sub
fisttp
loop
xchg
out
or
sbb
sub
xor
add
or
iret
jp
add
hlt
mov
mov
ret
(bad)
push
sub
mov
sub
dec
add
add
pop
adc
je
and
mov
add
sldt
rol
and
(bad)
clc
xchg
enter
hlt
and
mov
(bad)
adc
les
add
add
test
inc
mov
push
imul
test
frstor
xor
dec
inc
in
jo
rcl
add
je
add
mov
ror
add
pushw
add
push
sub
add
add
xor
add
call
arpl
call
or
das
pop
test
cmc
pushf
adc
ret
call
cwde
add
lea
or
pop
push
push
adc
rcr
add
cmps
jmp
inc
daa
cld
mov
dec
jne
cmp
sub
pop
ss
push
mov
and
loopne
aas
add
dec
loopne
mov
push
mov
rcr
or
add
add
fwait
loopne
inc
or
xor
add
(bad)
mov
push
mov
stos
test
inc
jp
and
inc
mov
xor
mov
dec
and
push
call
or
call
push
pop
test
pop
xchg
adc
jae
call
pusha
outs
ds
or
xor
and
jge
xor
clc
adc
fs
adc
sub
add
jmp
add
cmp
adc
movs
movlps
push
push
loopne
add
call
inc
sub
sub
inc
fdiv
xor
add
add
cmp
les
mov
mov
pop
add
in
hlt
adc
hlt
out
or
mov
pop
xor
push
add
retf
dec
or
or
or
dec
in
les
rol
inc
inc
xchg
add
call
jbe
jl
adc
add
(bad)
push
je
(bad)
dec
add
sahf
jno
call
inc
in
(bad)
and
xor
movs
lea
adc
fs
rcl
add
loop
ss
shr
stc
jnp
aas
mov
mov
pushf
add
mov
jmp
pop
add
jmp
cmp
sbb
add
call
cmp
add
imul
test
and
popa
add
pop
adc
pusha
mov
loopne
in
xchg
sbb
mov
data16
mov
inc
dec
inc
and
dec
in
or
or
cmp
add
jle
call
adc
mov
mov
push
xchg
push
or
stos
movs
retf
add
jmp
clc
and
dec
les
fcomp
adc
dec
adc
mov
sub
pop
inc
dec
sub
add
(bad)
(bad)
and
sub
push
movs
cli
shl
lea
or
push
adc
aas
jge
add
add
sub
add
cmp
adc
cmps
dec
mov
cwde
call
rol
jmp
inc
sbb
mov
enter
nop
sbb
loopne
jne
add
popf
cmp
mov
pop
push
xchg
inc
push
movups
(bad)
out
xchg
clc
dec
add
dec
sub
inc
or
add
(bad)
mov
cdq
(bad)
(bad)
pusha
fisubr
in
add
aaa
(bad)
xlat
nop
mov
cmps
or
sub
pop
cmp
dec
jmp
lea
pop
mov
add
loopne
xor
adc
or
xor
pusha
les
push
sar
push
push
jne
sub
add
sti
dec
mov
pop
nop
call
ds
mov
(bad)
lods
add
and
or
mov
jb
inc
call
adc
jne
add
std
add
das
add
lock
jl
stos
inc
pop
(bad)
mov
adc
paddb
mov
add
loope
add
jns
je
add
cmp
adc
shl
js
jge
mov
test
mov
jne
push
xor
call
fs
add
xchg
sbb
adc
add
xchg
adc
out
or
in
push
aam
sub
call
push
adc
lods
add
inc
xchg
lock
or
sbb
fdivr
or
test
sub
into
dec
jge
and
dec
stc
add
std
jno
xlat
jb
adc
dec
ins
dec
add
ret
add
cmp
adc
sub
ja
aaa
and
xor
mov
call
and
xor
dec
pop
add
mov
and
sahf
mov
add
jb
pop
mul
dec
inc
call
popf
push
test
adc
or
call
jge
add
or
push
push
pop
and
loopne
sub
lock
or
call
adc
add
ds
ins
adc
push
add
cmp
gs
add
add
or
(bad)
fadd
outs
test
or
dec
pop
clc
rol
(bad)
jmp
xor
test
sub
inc
inc
aaa
repnz
push
pop
pop
or
dec
pusha
dec
push
vprotw
pop
push
add
and
sub
inc
push
mov
sbb
enter
add
ror
xor
mov
mov
clc
xchg
jg
add
cmp
nop
mov
bound
add
add
sbb
add
push
cmps
pop
add
add
ror
mov
sar
loope
push
hlt
aas
add
repz
or
lahf
call
push
and
sbb
mov
test
mov
push
or
test
pop
xchg
push
and
or
jmp
jnp
add
adc
xchg
shl
add
add
mov
add
jmp
dec
push
popf
pop
add
cwde
test
jne
sub
add
ret
mov
add
pop
add
cmp
inc
add
xor
jge
pop
mov
push
dec
mov
pop
push
add
add
add
add
dec
popf
test
add
push
jmp
dec
add
add
xor
clc
and
(bad)
enter
das
or
inc
cdq
mov
dec
cmp
cmp
add
lock
call
push
add
test
mov
inc
(bad)
call
push
xchg
mov
leave
test
xor
inc
(bad)
std
and
jg
mov
sbb
mov
enter
lock
popa
push
add
add
ins
push
test
push
adc
repnz
daa
int
push
inc
nop
sub
and
push
add
jnp
arpl
adc
and
add
add
pop
xchg
xor
dec
arpl
imul
add
and
add
call
rol
add
add
cmps
jne
sbb
jecxz
sbb
pop
icebp
inc
push
add
push
push
out
mov
add
inc
stos
sbb
adc
(bad)
in
add
add
jmp
add
(bad)
xchg
mov
dec
add
loopne
int
push
int3
rcl
imul
loopne
adc
pop
or
hlt
repnz
mov
(bad)
xor
cmps
dec
mov
push
in
xor
mov
in
int3
pop
xchg
cmp
shr
test
add
add
xchg
sar
push
pop
add
rol
or
out
or
add
icebp
dec
add
adc
push
push
lea
add
and
pop
bound
test
inc
mov
push
jge
test
pop
jae
add
inc
jge
add
cmp
(bad)
adc
das
push
sbb
push
push
and
rcr
push
jmp
mov
mov
and
shl
add
and
xchg
lock
jne
jmp
jl
sub
pop
or
pop
cmp
lea
ins
cwde
add
mov
push
add
lock
inc
sti
add
mov
inc
cdq
push
aaa
scas
loopne
popf
es
xor
mov
inc
jge
rcl
lock
add
inc
mov
add
cmp
jge
outs
pop
add
call
xlat
ins
add
out
pop
mov
and
(bad)
jmp
fbstp
ud0
inc
cmc
xchg
stos
add
mov
xchg
cwde
or
dec
cwde
dec
shl
inc
sbb
push
jne
mov
aas
add
call
mov
add
lods
lock
add
sbb
inc
lods
jne
sbb
cwde
add
add
dec
or
ud0
or
test
fchs
ret
add
mov
mov
push
jmp
movs
inc
call
add
dec
cmp
mov
(bad)
xor
and
test
add
inc
push
add
add
inc
inc
das
test
int
test
pusha
add
add
and
jne
xlat
mov
loope
push
dec
inc
sub
sar
(bad)
test
sar
mov
lock
add
and
add
mov
call
(bad)
arpl
add
or
call
push
dec
sbb
and
mov
add
loopne
call
xor
leave
call
(bad)
and
or
jo
ins
inc
push
pop
cmp
mov
in
mov
jmp
ins
data16
cmp
pop
adc
push
or
add
cmovnp
inc
add
into
jmp
xor
cmp
lods
push
call
mov
push
add
mov
jne
(bad)
push
mov
add
shl
sbb
mov
dec
call
and
mov
mov
cmp
or
xor
add
adc
push
lea
out
sub
test
dec
call
sbb
add
mov
add
sub
sti
add
test
adc
out
add
push
int
and
mov
ja
mov
or
jmp
pop
std
or
mov
ins
jae
inc
add
add
add
in
ja
scas
inc
add
(bad)
movups
imul
in
fmul
mov
inc
or
pop
cmp
sub
push
leave
add
dec
add
cmovno
mov
pop
add
lods
adc
mov
leave
inc
push
fwait
test
add
add
daa
dec
jne
inc
xchg
add
inc
add
xchg
mov
push
jae
xchg
push
push
rcl
push
dec
dec
inc
enter
mov
push
add
mov
dec
jmp
ret
add
shl
add
adc
xchg
out
add
add
in
add
push
sbb
add
mov
mov
add
rcr
push
jnp
jl
call
rcl
jne
mov
and
hlt
cmp
dec
mov
mov
clc
xor
jne
and
lods
pusha
mov
jmp
add
mov
(bad)
mov
push
mov
aaa
loop
pop
pusha
cdq
inc
push
inc
call
mov
call
jmp
or
ret
and
xlat
dec
(bad)
jmp
sbb
mov
lock
nop
sub
jne
xchg
jo
or
es
dec
movs
mov
cmp
test
adc
test
pop
pop
cmc
add
inc
test
add
jl
ficom
pusha
jo
add
adc
xchg
lock
out
and
inc
add
(bad)
in
shl
add
cwde
sub
ins
mov
shl
lea
into
add
and
mov
push
out
sub
or
inc
inc
inc
fs
add
mov
xor
inc
sub
les
loop
push
push
lods
sbb
dec
repz
das
rcl
add
inc
mov
or
sub
and
test
or
rdtsc
add
xor
push
sbb
and
dec
jne
ror
sub
test
stos
dec
call
add
add
lea
mov
repz
xchg
pusha
sub
adc
aam
push
add
and
scas
inc
inc
mov
cmp
push
push
or
imul
jge
mov
loopne
ins
add
or
push
mov
cmp
pusha
cmp
or
lds
mov
xor
and
arpl
(bad)
lea
pop
fisttp
(bad)
call
pop
int3
and
setno
and
or
lods
add
es
push
int
dec
(bad)
sti
and
and
add
mov
test
test
(bad)
int
call
dec
ss
popa
jne
sbb
push
xor
dec
repnz
adc
xor
aad
cld
and
add
xchg
mov
ins
outs
shl
ret
shl
add
pop
push
sbb
fadd
nop
adc
(bad)
jnp
hlt
jo
push
add
push
xchg
call
data16
(bad)
cmp
js
lahf
add
dec
mov
leave
inc
jnp
add
push
div
fnstenv
lock
int3
arpl
out
sbb
add
add
test
sar
or
xor
jnp
push
push
adc
out
call
jb
or
stos
ins
test
jb
(bad)
push
inc
or
push
pop
lds
push
adc
xchg
inc
loope
sti
pusha
dec
add
add
inc
xor
(bad)
jmp
xor
cld
test
rcl
fmul
mov
ret
xchg
inc
sbb
add
mov
inc
add
test
mov
ja
adc
add
inc
inc
inc
(bad)
inc
and
or
mov
mov
ret
inc
or
stc
ret
add
addr16
add
or
or
jbe
mov
call
mov
popa
cmp
inc
xor
ja
xor
inc
popf
pop
push
jno
add
cmp
mov
or
and
mov
dec
fsubr
xor
sub
dec
add
cmp
pusha
inc
and
mov
pop
add
or
xor
add
or
or
dec
loopne
pop
jge
push
shl
or
xor
add
pop
add
fadd
xor
sub
add
cmp
push
test
int3
movs
mov
rol
cmp
add
movs
add
test
adc
add
hlt
call
pop
test
mov
mov
bound
jmp
mov
jne
adc
les
rol
data16
cmp
or
inc
loopne
ret
add
dec
add
pop
inc
call
xchg
dec
dec
add
mov
mov
push
sub
xchg
call
mov
rol
jecxz
adc
mov
push
inc
pop
retf
mov
xor
or
sub
pushf
retf
add
movs
push
adc
ins
popf
pop
or
push
push
or
call
mov
push
ror
aas
cmp
ins
les
mov
add
movs
fs
inc
push
jne
(bad)
fadd
add
xor
call
data16
or
dec
fiadd
or
sbb
nop
add
add
mov
ret
add
add
test
(bad)
call
ins
dec
inc
jecxz
xor
push
inc
and
not
add
mov
add
push
push
push
xchg
setg
cmp
inc
push
or
dec
and
jns
clc
xchg
nop
mov
out
jno
ret
push
xor
inc
pop
inc
xchg
jne
xor
popf
dec
fwait
inc
mov
jne
add
(bad)
mov
cmp
ror
(bad)
(bad)
clc
add
and
dec
push
mov
(bad)
les
sbb
inc
call
add
sbb
add
add
add
jne
xor
call
jmp
or
fadd
test
push
mov
arpl
loop
mov
add
call
cmp
pop
sbb
pusha
shl
mov
icebp
inc
cmp
or
mov
pushf
add
ret
jecxz
or
jmp
add
add
inc
push
and
cmp
add
adc
ror
clc
pop
pusha
mov
sub
pop
mov
popf
mov
ficom
je
add
add
leave
mov
jecxz
popa
or
imul
and
add
adc
jne
xor
shl
mov
in
call
test
push
pusha
sub
jmp
add
push
shl
adc
(bad)
rol
pop
inc
fisttp
cwde
or
sbb
cwde
adc
jmp
add
mov
loopne
add
add
fdivr
lods
and
nop
in
push
add
pop
and
inc
sbb
call
add
adc
sub
dec
sbb
cmp
xchg
jbe
inc
test
dec
inc
ret
add
cmp
rcr
and
ficomp
loopne
jmp
bound
and
shl
cmp
ins
fild
jo
dec
add
pop
and
dec
ret
add
addr16
add
mov
int3
sub
push
cli
or
in
inc
iret
add
push
jne
push
adc
or
add
inc
movs
psubsb
sbb
xchg
push
clc
dec
inc
cmp
and
loope
push
mov
inc
add
popa
inc
push
movs
xchg
sub
cmovb
mov
sub
add
pushf
xchg
add
push
cmc
sub
(bad)
and
fcomp
pusha
add
add
xor
sub
pop
mov
in
jge
and
sbb
jecxz
call
dec
push
cmp
add
and
pop
sbb
mov
add
mov
or
das
adc
popa
js
inc
cmp
add
push
call
pop
adc
mov
loopne
mov
loop
int
inc
movs
add
ja
fsub
inc
inc
jmp
enter
les
sub
adc
pusha
leave
and
push
cmp
add
cli
add
in
xor
add
or
add
cmp
mov
add
add
or
push
add
addr16
jmp
imul
or
add
push
xchg
and
dec
pusha
pop
int3
add
enter
push
add
and
push
add
(bad)
icebp
and
cmps
outs
cmp
dec
add
mov
arpl
sbb
inc
push
add
pop
rol
cmp
add
add
add
pop
xor
cmp
stos
movups
pop
pop
and
punpckhbw
sti
retf
adc
mov
add
and
sub
mov
sub
add
popa
inc
mov
imul
dec
adc
nop
icebp
or
push
inc
sub
add
mov
add
add
test
add
xor
push
push
aaa
pop
call
cmp
add
add
and
cmp
mov
mov
fild
mov
add
or
add
cvtpi2ps
add
sbb
and
jne
dec
mov
retf
xchg
add
or
or
push
(bad)
rol
add
add
add
dec
push
push
and
fisttp
add
int
add
adc
(bad)
mov
dec
xor
idiv
out
jne
mov
test
push
stos
jns
mov
xchg
push
xchg
out
cvttps2pi
jno
and
lock
rcr
popa
push
pop
and
jne
mov
clc
and
(bad)
or
mov
jge
sub
popf
add
add
test
add
repnz
pop
call
add
adc
jmp
nop
xchg
or
inc
mov
pushf
add
mov
or
mov
jne
dec
and
test
call
sub
loope
test
pop
call
test
push
mov
mov
out
xor
daa
ret
add
add
call
cmp
inc
idiv
add
mov
add
loope
dec
add
bound
sub
clc
add
inc
rol
add
xchg
pusha
push
aas
loope
stos
push
dec
push
xchg
leave
rol
pop
or
mov
dec
sub
adc
shr
add
sbb
iret
add
lea
or
sbb
and
pop
xor
add
call
add
add
sbb
out
and
jne
inc
test
mov
mov
mov
retf
add
(bad)
icebp
sbb
rol
jne
dec
xchg
mov
add
push
pusha
inc
add
add
test
ror
or
cmp
add
add
or
push
fisttp
mov
dec
jae
push
mov
add
jmp
inc
jno
lea
or
(bad)
popa
dec
dec
lahf
or
push
mov
mov
fistp
call
xchg
jo
pop
in
mov
dec
jge
add
jae
add
sub
ret
lahf
popa
fnstenv
add
add
jle
sub
nop
cmpxchg
sub
and
cmps
and
xchg
sbb
pop
call
add
call
mov
pop
loope
push
push
add
cmp
dec
add
sub
sub
inc
inc
adc
ret
add
xchg
fdiv
and
add
or
ret
pop
pop
outs
add
fsubr
jno
pushf
aaa
imul
adc
add
push
rcr
rcl
data16
movs
outs
or
call
jb
mov
mov
push
sub
mov
pop
sub
je
jmp
jb
xchg
xchg
add
push
add
jge
call
(bad)
adc
add
mov
call
push
stc
lea
pop
adc
das
pop
js
and
das
add
adc
push
add
or
add
add
in
add
mov
mov
or
ret
dec
(bad)
and
loopne
inc
sbb
push
rcr
cmp
pop
jl
aaa
lds
mov
call
arpl
jge
(bad)
sub
call
mov
enter
cmp
mov
push
dec
mov
jb
cwde
adc
mov
jg
in
push
add
push
add
mov
mov
inc
mov
adc
fmulp
adc
not
sub
shl
jmp
xor
jns
pusha
push
add
jg
sub
or
clc
mov
add
add
cmp
je
dec
pop
mov
mov
mov
dec
call
sub
inc
aas
pop
nop
pop
inc
mov
mov
add
aam
pusha
dec
loope
mov
add
jmp
add
push
add
and
rol
jo
in
jl
add
xor
call
jb
xchg
enter
adc
loope
add
call
adc
mov
pop
jne
add
and
test
xchg
sahf
add
add
add
xor
mov
xchg
jne
call
dec
mov
xchg
and
pop
inc
push
sbb
push
xor
mov
std
add
sbb
xchg
rol
add
add
loopne
add
dec
pusha
or
in
fucomip
cmps
add
push
(bad)
fcomp
aas
lock
mov
call
jo
add
add
push
mov
fucompp
add
add
pop
add
mov
sbb
push
(bad)
leave
not
jae
mov
jecxz
push
dec
push
cwde
push
mov
add
or
push
add
lds
cmps
loope
mov
inc
mov
add
lahf
add
mov
lods
add
scas
inc
mov
push
add
mov
ins
shl
dec
mov
and
ret
add
push
mov
dec
test
ins
inc
pop
xor
sbb
mov
mov
dec
push
cmp
push
push
sbb
jnp
jns
inc
push
ficom
arpl
add
push
add
das
sub
cmps
add
shl
push
mov
mov
bound
push
pop
inc
add
inc
add
or
(bad)
adc
mov
or
mov
fs
leave
xor
xchg
add
adc
xchg
cmp
cmp
add
call
pop
inc
jl
loope
call
mov
mov
jmp
aam
(bad)
jg
push
adc
add
mov
add
call
mov
xchg
add
add
mov
lock
retf
push
imul
add
fdiv
adc
or
or
cmp
xchg
and
adc
popa
(bad)
jo
add
inc
xor
pop
rcl
maxps
xchg
mov
adc
add
xor
inc
mov
mov
mov
xchg
push
add
inc
add
fisub
mov
and
jmp
add
test
add
sar
dec
sbb
and
nop
cli
cmp
cmp
adc
int
jne
and
jb
add
adc
pop
js
add
sbb
add
dec
mov
mov
inc
inc
je
(bad)
call
add
ror
lea
inc
call
lds
jne
add
jae
je
and
add
imul
call
jno
sbb
dec
add
add
movs
or
add
add
fcmovnbe
std
pushf
sub
xadd
mov
and
mov
adc
xor
add
lock
mov
jno
push
xchg
test
push
sbb
mov
rol
and
push
add
inc
test
add
mov
xor
sub
inc
mov
call
rol
lock
xchg
push
push
add
sub
inc
or
popf
add
call
mov
dec
cmp
test
add
jmp
js
pop
add
lock
mov
callw
mov
add
xor
add
str
add
push
pop
xchg
xor
(bad)
fnsave
ror
(bad)
fwait
jbe
add
add
adc
retf
mov
lds
call
mov
mov
mov
add
pop
in
xlat
add
and
push
aam
adc
bndldx
(bad)
loopne
and
add
adc
add
xor
push
or
scas
add
imul
data16
cmp
jmp
stc
(bad)
ds
sbb
nop
pop
jl
lock
call
(bad)
mov
inc
mov
adc
mov
inc
adc
mov
inc
jne
and
or
add
add
popf
(bad)
and
cmp
arpl
gs
inc
nop
fild
mov
mov
push
call
add
inc
(bad)
jmp
ret
call
inc
inc
adc
add
jmp
and
add
add
inc
jl
fadd
xor
add
dec
str
cwde
loopne
mov
enter
inc
adc
add
xor
sub
jecxz
test
push
push
call
rol
xor
jmp
add
dec
in
fisttp
xor
or
adc
cmp
xor
loopne
lock
mov
mov
inc
in
inc
xor
sti
ret
dec
xor
push
or
xor
or
or
and
cmp
jne
add
or
adc
hlt
daa
xchg
or
and
aad
add
(bad)
jmp
lea
cmp
push
xchg
addr16
jnp
lock
sub
xor
mov
push
clc
les
or
rol
adc
dec
adc
add
dec
jns
add
add
mov
add
pop
test
repnz
add
cmp
inc
add
dec
adc
test
(bad)
xchg
test
xor
xchg
mov
pcmpeqw
(bad)
cmp
adc
add
mov
shl
mov
add
or
(bad)
add
(bad)
lods
test
add
push
shr
inc
mov
sub
pushf
rol
dec
fadd
shr
add
test
mov
jo
sub
inc
add
test
push
or
adc
mov
inc
jnp
and
jbe
rol
xor
repz
mov
adc
inc
pop
inc
add
add
push
add
adc
mov
adc
pop
xor
invd
jne
cmps
push
or
jp
sahf
add
add
add
push
xor
sbb
sub
hlt
out
jg
dec
and
inc
ins
add
add
dec
adc
or
adc
inc
sub
dec
bound
dec
adc
or
dec
clc
adc
inc
add
sub
push
inc
push
or
jmp
add
outs
cwde
or
mov
mov
dec
push
add
hlt
mov
xchg
and
mov
aaa
mov
jne
fld
jo
cmp
add
fstp
js
dec
stos
jae
aam
cmp
int3
add
add
push
scas
fisttp
cwde
clc
sub
sub
mov
add
cmp
lea
push
push
inc
add
xor
adc
ja
xchg
sar
lods
push
add
sahf
xor
mov
int3
dec
ret
enter
(bad)
repnz
ret
push
es
dec
call
jmp
push
hlt
adc
mov
mov
add
repz
jmp
ss
add
je
xor
inc
pop
xor
mov
stc
adc
adc
push
psubb
ins
fmul
call
add
test
(bad)
inc
add
mov
aas
and
lock
fstp
sbb
rol
pop
adc
movs
mov
cmp
(bad)
loopne
out
retf
mov
jne
fmul
call
xlat
or
adc
or
inc
mov
jne
xchg
(bad)
adc
sti
mov
dec
into
add
lds
lea
rcl
and
aam
or
jne
ins
rcl
movs
(bad)
call
les
data16
add
icebp
call
test
add
loope
add
and
push
sub
add
or
dec
add
cmp
adc
and
sbb
add
add
push
push
mov
(bad)
sub
dec
or
call
lea
add
xor
push
loopne
mov
add
cmp
push
or
jo
shl
inc
daa
adc
add
inc
push
jmp
jmp
jne
call
mov
push
dec
add
fs
and
div
je
add
loopne
sbb
sub
and
mov
add
add
cmp
dec
and
rol
and
shr
(bad)
loope
loop
jge
nop
in
mov
cwde
and
dec
add
fsub
add
call
adc
mov
sub
jae
dec
and
and
sbb
(bad)
mov
mov
str
cmp
loopne
(bad)
xchg
add
pusha
inc
ret
lds
pop
inc
cmp
pop
popf
or
xchg
data16
nop
call
and
push
add
inc
pop
or
pop
push
and
pusha
mov
and
jne
add
adc
bound
push
adc
shl
or
(bad)
mov
vpshufd
mov
cmp
call
cmc
les
call
cmp
add
loope
xor
or
jl
push
pop
inc
adc
jbe
call
push
inc
add
inc
or
lea
mov
add
call
cmps
aas
or
dec
loopne
cli
test
dec
call
dec
inc
shl
dec
add
jmp
call
inc
mov
add
ins
push
mov
call
push
or
repz
inc
jg
cdq
lock
pop
stc
push
add
add
add
std
sti
sub
add
stos
pop
(bad)
call
arpl
and
inc
hlt
pusha
mov
mov
movs
xor
lock
cmp
mov
dec
loopne
arpl
add
push
or
movs
lar
add
lock
rol
movs
inc
lock
call
pop
dec
jb
sti
scas
inc
xchg
sbb
push
leave
out
push
add
inc
loopne
add
add
push
ds
pop
rol
in
pop
sbb
ret
in
cmp
mov
add
pushf
sbb
shr
mov
add
cdq
daa
add
fist
dec
cmp
dec
sub
add
mov
call
sub
mov
add
retf
rcr
inc
out
iret
adc
adc
inc
pop
sahf
add
add
push
or
and
stos
inc
inc
jne
dec
inc
inc
mov
and
test
xor
mov
jge
jb
inc
sub
icebp
jge
call
add
std
or
add
or
test
addr16
mov
mov
lea
jne
pop
mov
jb
loope
pop
loopne
xchg
(bad)
lock
ret
inc
rol
and
mov
pusha
pop
inc
and
add
push
inc
ret
push
add
sub
clc
mov
cmp
and
xor
popf
nop
mov
add
mov
inc
push
inc
xor
pop
inc
inc
and
add
dec
call
sub
and
call
in
add
dec
and
pop
cmp
push
lods
or
enter
sub
and
add
add
xor
scas
xor
sbb
jge
mov
je
jg
sbb
repz
xchg
add
mov
cmp
mov
mov
add
xchg
(bad)
lock
call
add
xchg
gs
je
sar
add
cmc
and
icebp
enter
and
adc
mov
and
in
inc
icebp
mov
inc
add
push
gs
pop
je
add
push
sub
mov
(bad)
push
mov
push
add
loope
xor
add
xchg
mov
lea
add
inc
add
call
mov
push
xor
push
cwde
and
and
mov
sub
jb
adc
jmp
call
xor
mov
xor
pushf
sub
dec
and
ret
mov
inc
ins
add
inc
jb
rol
pop
inc
imul
push
sub
push
movs
mov
add
loope
and
mov
adc
inc
and
inc
dec
jg
xor
pusha
jae
lods
dec
rol
cmp
call
xchg
adc
sbb
pushaw
or
pop
call
arpl
sbb
daa
xor
in
outs
mov
movs
popf
rcr
movs
add
jp
and
jno
push
pop
fild
ins
pop
pop
call
dec
add
adc
jecxz
add
(bad)
fs
add
add
add
mov
mov
ret
test
leave
or
and
push
(bad)
lea
pandn
mov
lock
mov
add
add
adc
or
dec
int3
lea
add
cmc
add
mov
mov
jbe
sub
loopne
push
push
inc
add
mov
or
pop
add
inc
pusha
pop
add
imul
push
push
push
dec
xor
fldcw
mov
add
mov
call
inc
and
sub
inc
aaa
mov
push
cmp
pop
stos
cli
pop
add
shl
and
inc
or
add
dec
inc
out
inc
call
xor
xchg
loope
cmp
call
add
or
pop
adc
(bad)
dec
in
mov
add
scas
and
xchg
jne
inc
xlat
jmp
push
inc
ja
add
cmp
lea
and
mov
add
sbb
inc
fcomp
loope
cmp
xchg
cmp
sub
add
pop
or
std
xor
pusha
add
fadd
add
xor
fwait
test
xchg
sub
aam
cmp
mov
loopne
sbb
call
arpl
sar
push
pop
shl
ret
add
call
hlt
xlat
cwde
loope
es
add
call
and
cmp
enter
cmp
rol
lea
or
add
shl
mov
lods
gs
dec
push
inc
div
sub
inc
(bad)
inc
add
aaa
call
imul
pop
int
test
push
sti
(bad)
lods
pop
rol
sub
inc
add
push
jne
lock
push
(bad)
pusha
fs
xor
or
ror
add
shl
dec
cld
ret
sub
add
add
add
test
aas
mov
call
lea
push
pop
add
in
mov
test
call
movs
jne
cmp
xchg
or
xor
pop
je
push
inc
adc
add
cmp
sbb
popa
push
mov
call
adc
add
ds
xor
sub
cmp
inc
loopne
add
mov
mov
and
aaa
add
mov
push
pop
push
adc
add
mov
dec
adc
jno
call
inc
sub
xchg
push
pop
in
add
ret
lea
jmp
arpl
loopne
pushf
push
push
pop
inc
add
inc
add
dec
add
lods
stc
std
jo
inc
dec
jmp
adc
add
xor
daa
push
call
sbb
jmp
test
jge
xchg
mov
mov
jne
add
add
test
xor
jae
call
xor
sub
enter
push
cs
pop
push
test
loopne
sbb
mov
push
pop
in
aaa
mov
ja
inc
inc
leave
or
push
mov
inc
cmp
dec
add
mov
in
jb
add
push
cmp
jne
push
push
cld
cmp
or
lock
push
push
test
str
call
out
xchg
add
mov
or
add
fld
jmp
dec
pop
adc
lds
lock
add
sub
cmp
add
js
popa
and
push
push
jne
adc
or
add
add
call
or
bound
imul
rcl
xor
lds
int3
ret
push
push
add
sar
ret
scas
retf
add
add
(bad)
and
add
sbb
mov
pop
add
push
into
add
rol
add
cld
adc
sub
mov
fiadd
cmp
push
call
add
sub
mov
call
test
call
mov
cmp
and
or
push
sbb
pop
add
add
test
add
cmp
add
rol
shl
aaa
inc
add
daa
inc
lods
and
jno
or
add
rol
sbb
cmp
xchg
mov
push
nop
add
add
call
adc
add
jb
mov
mov
lgs
mov
lea
add
call
cmp
or
inc
inc
aam
push
add
push
js
ret
test
inc
or
adc
(bad)
in
(bad)
and
dec
adc
arpl
cmp
call
out
sbb
mov
call
push
mov
adc
mov
dec
add
test
push
add
out
repz
xchg
mov
and
stos
or
mov
inc
pop
movs
ret
imul
add
add
ja
jo
xchg
lods
add
je
jns
add
or
fld
and
inc
inc
aam
cmp
add
call
inc
sar
inc
mov
inc
fiadd
or
fdiv
or
pf2id
cdq
jnp
ds
fsubr
push
leave
jecxz
pop
ins
cmp
test
mov
mov
jg
mov
inc
cld
add
add
test
mov
inc
sbb
outs
adc
bound
add
add
mov
call
mov
sldt
retf
xor
or
lods
add
int3
mov
mov
and
popf
adc
add
pop
add
add
or
or
dec
rol
add
inc
js
add
pop
fisttp
(bad)
loopne
jge
cmp
mov
pusha
jg
dec
or
push
inc
mov
hlt
pop
adc
add
add
call
fidivr
sub
xor
xor
rol
lea
sqrtps
jmp
fidivr
mov
add
add
out
push
stc
imul
push
pop
fcom
add
push
push
ds
jne
int3
sbb
sbb
movs
ja
push
rcr
sub
or
test
or
mov
xor
(bad)
sbb
pop
or
add
test
cld
push
pop
add
call
add
add
add
add
push
ret
shl
xchg
shl
shl
sbb
sahf
ret
rol
add
push
mov
sahf
jmp
mov
add
nop
add
add
xchg
bound
push
adc
pop
stos
mov
shl
xor
xchg
push
dec
dec
fld
jb
mov
test
or
nop
arpl
dec
dec
lock
xchg
push
fmul
mov
or
inc
push
ret
jp
je
in
ds
mov
pop
inc
pusha
add
in
mov
cmp
xchg
or
pop
outs
and
fadd
fiadd
cmp
shl
nop
mov
add
add
lds
and
sub
scas
add
out
push
add
and
mov
clc
adc
add
das
jge
push
pusha
(bad)
in
push
fld
mov
add
je
dec
mov
mov
push
push
shufps
sar
mov
and
ror
dec
add
jo
add
popa
push
jae
enter
jns
inc
popa
std
inc
lock
test
jo
nop
add
lldt
inc
add
add
inc
test
mov
or
add
call
push
hlt
mov
loope
sbb
and
push
cdq
add
dec
dec
test
les
push
(bad)
mov
mov
add
in
add
jns
jmp
jp
stos
inc
push
test
add
inc
(bad)
rcl
shl
cmps
add
add
push
inc
pop
adc
add
push
in
mov
add
add
add
pop
and
add
lock
cwde
add
mov
add
dec
dec
push
lock
add
(bad)
mov
in
fild
add
push
rcr
or
call
and
inc
(bad)
mov
sub
pop
test
mov
add
push
rol
add
push
inc
pusha
inc
add
jne
and
cmp
outs
dec
test
add
enter
add
retf
mov
jmp
dec
ins
push
add
fadd
lods
(bad)
and
mov
call
(bad)
add
adc
and
icebp
nop
inc
adc
xchg
pop
in
pop
test
add
icebp
add
add
add
add
dec
nop
loope
or
sbb
mov
add
leave
call
mov
xor
push
add
sub
add
call
mov
add
push
push
push
mov
pop
loope
call
lea
sti
add
nop
dec
and
pop
and
push
add
div
(bad)
call
mov
dec
xor
add
dec
pop
add
fmul
add
fdiv
dec
pop
push
jmp
sub
pop
xor
pmuludq
add
loope
test
add
or
mov
mov
mov
test
mov
icebp
add
clc
test
lahf
test
dec
jne
inc
push
pusha
mov
jle
call
sbb
and
add
aas
test
inc
dec
jecxz
sbb
push
and
or
outs
shl
add
pusha
dec
in
push
mov
xchg
sbb
mov
(bad)
scas
add
pminsw
ds
adc
sbb
retf
mov
add
stos
and
add
je
pop
fcom
add
jo
push
in
loopne
push
test
and
dec
jp
pushf
jbe
nop
call
add
pop
add
xchg
mov
xor
nop
sub
add
or
lock
add
jmp
add
push
inc
add
jae
loopne
test
shr
rol
inc
aam
inc
dec
stos
clc
outs
jmp
mov
adc
jmp
add
ds
inc
test
dec
pop
mov
call
and
add
shr
dec
sbb
sub
jne
add
inc
pop
adc
adc
mov
pop
xor
dec
add
data16
push
outs
or
jne
sub
jne
or
adc
nop
sbb
sbb
mov
mov
add
add
mov
in
xchg
pop
add
mov
add
not
hlt
ret
movs
mov
out
loopne
out
xor
mov
jmp
pop
jns
inc
loopne
or
inc
js
mov
stc
jl
add
jbe
test
jns
add
jmp
rol
jp
mov
adc
add
mov
fld
movs
aas
add
test
rol
call
nop
arpl
add
or
add
pop
jne
adc
push
inc
nop
(bad)
jne
add
sbb
sbb
ds
mov
mov
loope
adc
mov
dec
dec
jnp
test
sbb
clc
inc
cmp
inc
jge
or
rol
(bad)
aad
ins
sbb
adc
clc
pop
mov
addr16
stc
pusha
add
mov
mov
and
and
ds
dec
adc
or
lea
loope
add
add
adc
add
adc
push
mul
mov
enter
leave
sub
push
and
aam
add
add
mov
mov
push
mov
add
out
and
in
add
or
aaa
sub
add
mov
xlat
inc
push
jmp
pop
(bad)
sbb
loopne
add
nop
hlt
in
test
and
xor
jb
add
pop
mov
add
add
addr16
cwde
xor
rcl
adc
bound
call
add
and
mov
add
and
lar
and
les
pusha
push
cmovne
and
sar
add
fs
or
xor
add
cld
add
imul
int
and
mov
xor
add
add
cld
xor
fnstenv
in
mov
mov
or
sub
or
cmp
sbb
inc
push
jmp
inc
add
add
add
sbb
bound
lods
add
test
pusha
inc
inc
cmp
mov
add
add
outs
or
adc
or
add
jne
inc
jb
verw
and
push
push
in
int
bswap
jae
mov
push
out
cmp
and
sbb
adc
mov
sbb
icebp
dec
add
bound
dec
pop
jecxz
(bad)
mov
push
nop
jmp
push
mov
call
cmp
imul
int3
xor
add
xor
retf
inc
add
and
xor
add
sub
pop
shl
push
ret
and
cmp
or
lea
in
dec
inc
add
add
xchg
dec
push
add
call
push
pop
mov
add
push
jno
test
mov
mov
add
fsub
add
sbb
cmp
adc
call
popf
lea
push
rcl
adc
cmp
icebp
sbb
add
sub
add
cmc
inc
add
sbb
pop
mov
and
sub
mov
add
push
fs
sub
and
leave
add
xor
lea
pop
cdq
or
dec
rol
inc
test
adc
add
push
push
push
and
pop
loope
jne
xor
mov
aaa
lea
adc
add
dec
je
cwde
pop
or
mov
cmp
add
add
rcl
js
cmps
icebp
push
(bad)
mov
mov
or
std
push
mov
push
inc
repnz
and
jp
jmp
or
adc
jo
push
mov
(bad)
and
add
(bad)
sbb
or
inc
jbe
mov
add
xor
xchg
mov
dec
mov
add
add
add
or
adc
push
adc
jns
push
lock
push
add
adc
add
add
add
sbb
push
mov
dec
cmovns
inc
inc
mov
iret
and
xchg
pusha
pusha
iret
dec
sbb
add
add
movs
pop
inc
inc
mov
push
push
(bad)
fld
call
dec
lea
add
loope
retf
bound
(bad)
cmp
inc
and
pop
push
add
jns
add
sub
lods
xchg
sbb
call
ds
ror
les
mov
push
mov
mov
int3
and
adc
xor
pop
push
je
sub
add
cli
jmp
nop
stc
add
inc
pusha
dec
adc
cmp
ror
add
add
lock
add
add
mov
ror
add
adc
dec
imul
movs
in
dec
dec
or
or
add
adc
jne
aaa
pop
and
sub
and
fadd
add
xor
push
pusha
xor
dec
and
jp
out
pop
mov
call
pop
lldt
popa
jae
(bad)
call
sub
ror
push
je
cld
dec
lahf
jmp
add
mov
lea
jge
ins
xor
icebp
push
mov
fadd
add
pop
mov
mov
mov
mov
push
xchg
js
inc
or
push
add
fldenv
mov
mov
inc
cmp
add
popf
jne
cmps
(bad)
retf
adc
xchg
lea
mov
pop
add
nop
inc
add
imul
rol
add
aaa
mov
mov
in
test
jmp
ins
ins
call
push
repz
outs
sub
ins
gs
xchg
rol
and
call
lock
add
add
sub
dec
or
pop
pop
test
sbb
add
push
inc
or
and
sub
mov
add
lock
cdq
and
leave
add
mov
faddp
and
cmp
or
push
add
clc
cmp
add
mov
and
loopne
sub
test
or
adc
jecxz
mov
add
add
mov
call
add
nop
mov
mov
repnz
and
inc
jbe
pop
test
xor
gs
jns
push
mov
loopne
stos
xor
add
xchg
lock
mov
inc
adc
or
mov
clc
call
xor
adc
add
jmp
pop
iret
loopne
xchg
nop
mov
ror
push
add
add
add
lock
push
test
add
push
call
jge
pop
adc
mov
loope
imul
es
inc
add
adc
pop
mov
adc
add
call
rcl
call
cwde
add
ins
pop
and
imul
bound
repz
mov
inc
hlt
add
xor
jo
loope
mov
mov
cmp
add
loopne
nop
test
mov
(bad)
mov
shl
movs
push
pop
mov
repnz
mov
xchg
dec
push
add
inc
add
xlat
xor
xchg
or
and
loopne
jne
add
rol
and
movs
inc
clc
add
or
sbb
shl
dec
es
mov
jmp
add
add
add
sbb
sti
or
enter
add
mov
xor
or
push
sbb
cld
pop
add
and
sbb
je
push
push
bound
shl
cmp
xchg
add
ja
dec
add
hlt
jmp
and
add
add
add
nop
hlt
sub
call
fs
dec
shl
add
scas
add
pusha
add
imul
pop
xor
sahf
shl
xchg
out
repz
add
push
add
(bad)
fadd
or
scas
xor
add
add
or
push
popa
add
and
add
loope
dec
or
add
and
cmp
fimul
add
add
push
xchg
jmp
jge
or
sti
sbb
shl
jmp
xor
and
test
inc
push
test
mov
add
or
loop
push
jo
shr
test
push
loopne
jmp
push
or
add
xchg
jmp
add
mov
sbb
dec
add
add
pusha
add
push
gs
nop
ret
or
pop
cmp
loop
cmp
push
sub
(bad)
fadd
stos
sub
mov
(bad)
adc
mov
push
add
xchg
add
outs
pop
sbb
loopne
add
or
jo
cmp
movs
xor
call
mov
fist
pop
and
rcl
out
or
and
push
icebp
sbb
popa
add
sbb
or
outs
(bad)
xor
jae
mov
out
test
repz
stc
cmpxchg
clc
push
push
jae
jge
add
ret
and
push
les
sub
add
push
mov
add
adc
mov
and
iret
ror
ret
dec
dec
adc
mov
ja
loopne
std
jmp
subps
ja
push
sub
loope
pusha
call
or
and
add
inc
adc
add
sbb
lahf
push
push
ror
inc
xor
push
in
and
fiadd
adc
sbb
jmp
call
cwde
dec
lds
pop
lock
xchg
push
jge
or
adc
ret
inc
mov
daa
add
add
push
ja
fld
ins
add
ret
add
mov
push
mov
call
and
int3
or
fstp
mov
stos
mov
popa
sub
add
mov
xchg
clc
ins
mov
push
push
jmp
add
loop
ds
hlt
mov
js
xor
cwde
adc
in
out
add
fbld
mov
inc
mov
or
sub
pop
pushf
(bad)
mov
sub
or
arpl
add
mov
adc
adc
push
push
pusha
sub
add
dec
lock
xor
inc
jge
add
movaps
inc
int3
push
or
std
nop
pusha
add
or
inc
or
scas
cmovs
loopne
ret
int3
mov
mov
add
(bad)
fld
(bad)
jns
movs
inc
and
adc
das
add
add
(bad)
pop
cmp
add
(bad)
(bad)
fadd
sub
adc
fild
and
and
inc
add
outs
call
loopne
loop
cdq
loop
imul
sub
rol
add
add
cld
jmp
push
nop
and
cdq
pop
std
(bad)
mov
pop
mov
push
aas
shr
mov
out
add
add
push
shr
dec
cmp
stos
test
dec
adc
pop
add
add
mov
inc
(bad)
jmp
or
push
push
add
ds
push
add
push
pusha
pusha
add
int3
add
adc
dec
and
sub
(bad)
sti
in
mov
add
xchg
fisttp
pop
ret
or
lock
call
loop
inc
shl
imul
nop
dec
add
out
(bad)
adc
push
ja
inc
sub
sbb
cli
mov
inc
repnz
call
add
ins
mov
xor
int
add
xchg
xor
dec
ret
and
or
push
adc
arpl
aas
jb
arpl
je
dec
(bad)
cmp
cmp
sbb
ret
pusha
cmp
test
or
sub
add
dec
jmp
adc
mov
ret
sahf
add
inc
add
out
mov
adc
inc
add
mov
or
xor
call
push
das
add
or
add
adc
add
add
inc
push
arpl
add
add
mov
and
add
push
and
add
mov
out
pop
mov
cmp
in
cmc
pop
and
push
sbb
add
adc
mov
add
call
call
call
les
scas
test
jp
mov
add
inc
and
cmp
jns
jno
lea
inc
test
add
rcl
mov
xchg
and
add
mov
fld
rol
add
add
repz
dec
and
test
and
mov
dec
les
add
loopne
js
add
call
add
nop
add
call
adc
nop
pop
test
push
push
dec
cwde
nop
adc
sub
sub
mov
push
cmp
add
(bad)
call
pop
sti
mov
les
or
inc
or
mov
cli
jmp
and
(bad)
push
mov
test
sub
mov
cmp
add
les
xor
ror
test
pop
cwde
aaa
dec
cmp
pop
scas
add
loopne
or
xor
enter
test
shl
lock
shl
adc
push
jno
call
nop
movs
add
aas
sar
out
jne
jge
pop
call
add
punpcklwd
cmp
push
call
sub
ins
rol
adc
sub
jne
sar
das
movs
cmp
mov
add
push
xor
and
(bad)
arpl
call
jnp
xchg
setne
loopne
mov
push
add
add
pusha
jle
dec
in
push
add
add
push
inc
push
or
jns
loop
loopne
or
add
adc
mov
dec
push
inc
int3
dec
(bad)
and
jmp
shr
adc
fwait
and
test
jmp
add
add
in
jno
pop
push
in
dec
and
and
add
add
pop
dec
mov
push
adc
adc
scas
jo
fistp
jecxz
sub
xor
sub
mov
rol
in
(bad)
jge
addr16
push
mov
xchg
add
add
call
(bad)
and
pop
fst
add
add
add
add
in
inc
push
cmp
push
aam
push
loopne
test
or
nop
add
(bad)
sub
inc
xor
(bad)
xchg
jp
(bad)
jno
jne
ret
mov
push
adc
add
xor
sbb
jmp
gs
jle
inc
adc
test
rol
test
arpl
mov
ret
test
or
add
push
rol
ret
cmp
aas
inc
adc
sub
add
add
xor
add
add
hlt
push
call
inc
rol
leave
add
test
shl
inc
mov
pop
add
push
pop
add
cmp
push
rol
add
adc
test
inc
push
call
mov
lea
add
call
mov
add
push
mov
call
add
dec
xor
shr
mov
andps
or
xor
(bad)
fld
and
push
das
inc
call
int3
inc
dec
add
add
push
movs
inc
jbe
jne
mov
add
cmp
and
add
push
push
call
ins
pop
mov
and
push
pop
add
cwde
xor
cmc
add
ret
pop
add
cmovge
cmp
and
add
pop
in
inc
test
dec
shr
pop
loope
mov
push
inc
adc
call
seto
in
inc
add
(bad)
jge
retf
and
mov
inc
fimul
fsub
scas
add
inc
sub
test
push
mov
pop
dec
add
ins
dec
push
mov
mov
add
mov
data16
stos
dec
sub
add
mov
adc
xchg
mov
loope
add
add
rol
xor
inc
data16
pop
bound
add
add
(bad)
ins
fcom
add
std
add
pop
mov
loopne
add
add
rol
inc
add
or
add
jno
aam
xor
jecxz
cmp
mov
add
mov
fs
lock
(bad)
fld
mov
add
add
aaa
pop
mov
push
cwde
add
mov
pusha
(bad)
in
add
ds
int
push
inc
inc
dec
call
or
(bad)
rcr
fcom
rol
add
xchg
sbb
loop
push
mov
pop
add
xchg
fmul
jne
(bad)
push
mov
jnp
out
add
add
call
inc
gs
test
ficomp
shl
pusha
sbb
add
sub
(bad)
ror
lods
call
ins
add
cmps
sub
add
in
push
xchg
lods
or
add
retf
mov
push
adc
add
or
mov
(bad)
js
dec
add
xor
and
add
ret
jl
add
add
pop
jmp
stos
pop
retf
add
add
mov
retf
add
mov
inc
dec
xor
add
pop
xchg
add
add
jne
mov
mov
pop
dec
add
dec
push
inc
and
inc
dec
mov
sbb
dec
mov
dec
dec
or
adc
add
adc
out
push
mov
mov
jb
ss
nop
push
add
dec
push
add
in
mov
cmp
push
mov
popf
add
mov
push
xchg
mov
and
mov
lea
push
push
push
xor
jns
add
pop
sbb
xor
arpl
sub
inc
push
inc
or
and
sqrtps
cmp
stos
xlat
fadd
repnz
or
mov
and
add
add
pop
psubsb
push
push
lods
(bad)
push
mov
add
add
add
add
ss
mov
outs
and
jo
movs
xchg
push
add
add
adc
inc
jg
lds
iret
add
inc
mov
dec
inc
dec
mov
cs
add
dec
dec
push
sub
enter
int3
pop
add
add
add
xchg
stos
sbb
sub
lea
push
or
xchg
leave
sub
lock
push
mov
add
sbb
add
das
add
and
push
inc
add
add
xchg
push
push
pop
jne
push
xchg
add
cmps
es
nop
mov
call
add
jb
add
ror
jne
add
add
adc
dec
adc
push
lock
or
xor
test
mov
cmps
rcr
bound
inc
mov
or
gs
aam
push
or
call
mov
test
fimul
add
(bad)
mov
xor
mov
jecxz
jno
(bad)
call
test
or
dec
add
mov
cmp
and
arpl
pop
jb
mov
xchg
rol
push
add
push
add
aad
push
add
add
mov
add
or
fdiv
adc
jmp
dec
or
pusha
add
xchg
add
or
clc
add
mov
pop
dec
inc
xor
(bad)
dec
cwde
adc
add
push
xor
fmul
ins
add
test
mov
ror
add
add
shl
mov
add
ins
xchg
add
add
call
jle
push
or
stc
ror
or
daa
mov
inc
dec
js
into
call
add
dec
cmp
add
mov
xor
retf
or
cmp
add
or
js
call
(bad)
inc
and
mov
nop
(bad)
pop
lahf
add
add
aam
add
dec
inc
sbb
(bad)
test
mov
lock
sbb
and
rol
push
ret
std
and
popa
add
push
push
add
add
daa
popf
fsubr
xchg
dec
mov
sub
add
push
inc
mov
xor
or
popa
inc
xor
inc
mov
or
sub
cmp
cmp
ret
push
push
mov
adc
jl
or
dec
add
push
(bad)
mov
inc
shl
cmp
cmp
call
dec
add
add
test
xor
push
cli
inc
cs
dec
xchg
(bad)
fucomip
add
(bad)
push
ja
add
pop
mov
ins
xchg
fild
inc
xor
outs
int3
nop
cmps
adc
mov
daa
dec
test
add
pop
add
adc
arpl
imul
add
call
pushf
and
popa
jne
add
call
add
ret
adc
add
and
jecxz
movs
adc
add
add
shl
dec
pop
call
add
adc
inc
jp
push
xchg
dec
jmp
int3
inc
add
fadd
(bad)
cmp
and
lds
add
inc
xor
sbb
call
push
fistp
add
rcl
add
inc
ins
jmp
add
cdq
adc
jge
call
xchg
fdivr
or
or
push
ret
sub
test
ja
and
rdtsc
add
shl
out
call
xor
push
rol
mov
arpl
mov
add
in
inc
inc
mov
add
dec
shl
call
test
adc
ins
push
jbe
cwde
idiv
add
or
pop
fmul
pop
in
test
ds
or
call
nop
enter
mov
mov
lahf
adc
xor
mov
psubsb
psrld
call
lock
cwde
loopne
dec
sti
sub
inc
inc
push
push
jns
call
push
fisubr
mov
xor
je
add
add
inc
jbe
call
or
inc
call
call
inc
mov
cmp
das
xor
jmp
pop
inc
mov
ins
add
shl
ins
xchg
add
xchg
xchg
ror
mov
push
add
adc
dec
xor
push
cmc
inc
or
popa
mov
rcr
test
call
and
inc
add
call
pop
in
add
out
call
shl
push
fmul
push
xor
cdq
add
pop
minps
add
push
mov
rol
inc
push
adc
aaa
cmp
inc
and
fcomp
xchg
push
nop
inc
int3
add
inc
or
or
cmps
xor
mov
mov
test
xor
add
inc
xor
add
dec
xchg
lock
add
sub
les
ret
push
in
ss
ins
add
cmp
mov
dec
add
lea
call
and
add
sbb
xor
or
test
mov
inc
xchg
shr
js
add
inc
test
scas
psrld
inc
clc
shr
aaa
mov
add
add
adc
mov
pop
add
inc
(bad)
call
mov
jge
xchg
add
jmp
push
add
cwde
rol
add
jne
div
add
xchg
push
rcr
in
cmps
repz
jbe
ror
dec
cld
sub
sbb
addr16
jecxz
add
dec
add
sub
mov
inc
and
test
add
nop
bound
xchg
or
cmp
add
es
add
add
movs
push
mov
and
test
add
inc
ror
rcr
popa
(bad)
neg
pusha
add
adc
outs
sub
push
adc
mov
shr
and
sbb
jne
add
and
mov
mov
movs
adc
and
ror
add
arpl
mov
and
hlt
test
cmp
lock
mov
shr
rcl
push
pusha
xchg
(bad)
cmp
mov
jge
(bad)
xor
inc
arpl
xor
les
add
jne
inc
sbb
add
test
inc
nop
pusha
sar
sub
push
mov
add
or
outs
push
in
call
and
push
aaa
sbb
push
shl
sub
mov
ret
lds
loopne
bound
lds
jmp
pusha
pusha
jae
cld
rol
jl
(bad)
or
clc
(bad)
sub
call
imul
push
and
pusha
cmp
cld
stos
jle
inc
push
cmp
dec
or
mov
sbb
pusha
push
add
daa
inc
mov
add
adc
call
call
pop
fxch
or
test
lahf
inc
mov
movs
add
add
and
push
pop
push
faddp
xor
adc
popf
inc
adc
test
jge
mov
shl
add
add
add
push
add
mov
dec
lods
add
mov
and
add
mov
push
shr
(bad)
rol
(bad)
nop
jo
setnp
add
lock
ror
add
mov
or
add
push
xchg
call
mov
ds
xor
fcom
ins
std
std
scas
les
cmp
rol
ret
pop
loopne
add
cmp
out
fdivr
add
rol
push
push
or
add
and
xchg
call
xor
adc
cmp
add
sub
popa
add
cld
es
adc
or
je
add
shr
jne
sub
(bad)
popa
dec
inc
nop
sub
sub
dec
scas
pop
shr
dec
pop
add
scas
clc
xor
push
fst
sbb
fimul
add
add
dec
push
push
adc
add
clc
call
add
add
mov
cmp
mov
mov
lea
pop
jmp
or
add
ss
sub
retfw
sub
fadd
sbb
mov
pop
mov
inc
xchg
and
jl
push
inc
lock
clc
rcr
dec
pusha
or
push
lldt
and
add
mov
mov
cmp
pusha
add
adc
adc
inc
pop
push
add
pop
or
inc
test
add
inc
pop
data16
lock
mov
call
push
sub
sbb
add
mov
mov
mov
add
or
add
push
dec
add
mov
js
sldt
cmp
ins
add
popa
adc
mov
add
add
jmp
ins
push
enter
inc
adc
mov
rcr
inc
es
jmp
xchg
(bad)
mov
jl
dec
lea
jne
adc
les
push
add
cwde
js
pop
pop
call
xor
add
push
push
sub
dec
inc
or
lsl
mov
(bad)
mov
jo
or
add
push
pop
add
push
adc
dec
sbb
adc
add
inc
repnz
mov
inc
movs
add
push
add
mov
shr
or
sub
add
mov
mov
sbb
jl
add
sub
retf
mov
mov
popa
push
mov
shl
add
add
mov
pop
xchg
ror
stos
xor
pop
sbb
push
loope
dec
lock
push
repnz
push
jmp
xchg
mov
push
jmp
lods
fdivrp
mov
xor
add
or
inc
sbb
and
adc
inc
popf
xor
mov
jmp
out
and
jge
inc
ds
inc
mov
or
jns
and
add
or
inc
jbe
data16
xor
add
jbe
sbb
xchg
mov
por
inc
push
ins
push
mov
mov
fnstenv
xor
inc
add
fimul
dec
(bad)
inc
jmp
ror
mov
das
jl
sub
add
push
call
mov
add
retf
call
adc
adc
ret
test
jmp
add
scas
add
xor
and
push
inc
mov
les
psubsb
in
adc
jb
and
and
xor
pop
add
add
mov
mov
rol
add
loope
push
xor
mov
ins
push
fsubr
mov
aam
mov
dec
add
add
mov
add
ret
rol
mov
mov
add
add
push
adc
add
call
add
add
pop
rol
shl
sar
add
lahf
pusha
push
push
or
dec
nop
sub
stos
cld
jecxz
xor
push
adc
jmp
add
and
shl
test
mov
mov
adc
lock
add
add
push
add
shr
call
cmp
add
xchg
add
and
add
iret
or
inc
mov
adc
gs
call
lea
add
inc
pushf
pusha
push
or
adc
lods
adc
push
in
push
icebp
mov
mov
pop
add
or
add
call
ins
(bad)
in
call
add
mov
add
add
jne
pop
sub
dec
or
aam
(bad)
nop
loope
add
add
inc
mov
mov
and
scas
dec
inc
sub
es
pushf
movs
in
add
cs
int
add
loop
add
pop
sbb
adc
enter
cmp
push
call
inc
or
adc
jmp
or
push
adc
add
cdq
pop
add
cmps
mov
or
mov
sub
xor
popa
dec
jge
push
sub
xor
cmp
cmp
inc
loopne
sub
adc
or
inc
push
mov
xchg
sub
xchg
add
xchg
das
add
cmp
adc
test
and
les
rol
or
add
add
push
sbb
sbb
push
sar
das
cmp
hlt
pop
daa
add
xor
sub
add
arpl
jle
out
in
or
call
inc
xor
pusha
jb
ret
dec
pusha
push
repz
add
add
mov
call
add
mov
xor
cmp
sub
and
push
iret
loopne
test
mov
fimul
add
or
test
inc
int3
(bad)
adc
xor
punpckhdq
inc
inc
adc
bswap
dec
jnp
inc
arpl
sub
pop
add
mov
cld
mov
lock
xchg
loopne
add
test
lock
nop
and
mov
add
add
(bad)
jmp
scas
sub
add
movs
mov
add
and
and
imul
push
hlt
add
adc
shl
adc
inc
add
fdiv
ror
cld
mov
jecxz
sub
out
xor
pusha
(bad)
cmp
mov
retf
sub
mov
les
inc
dec
dec
and
push
add
jno
test
pop
jge
add
pop
aas
xor
mov
adc
push
(bad)
lods
pop
add
add
add
jne
xor
enter
inc
(bad)
pop
shl
rcl
add
add
xchg
and
call
mov
mov
push
push
dec
sbb
js
add
mov
mov
inc
add
rcr
cmp
adc
in
fsubr
dec
fimul
(bad)
inc
scas
ret
nop
call
call
cli
cdq
add
inc
js
mov
scas
xor
dec
jl
pop
or
mov
fucomp
pop
pop
jo
arpl
call
pop
add
push
lea
dec
fmul
add
sbb
add
pop
adc
mov
icebp
inc
popa
(bad)
cmp
mov
add
push
mov
enter
jne
add
out
cmp
add
movups
jbe
mov
int3
jmp
push
dec
push
jne
mov
inc
sbb
cmp
jno
adc
push
xor
call
xor
mov
test
test
or
add
retf
je
les
mov
pop
cmp
jnp
and
push
inc
and
mov
jmp
adc
pop
jne
test
jo
shr
nop
and
(bad)
nop
shr
cmp
dec
shl
rol
or
cmp
jmp
dec
imul
xchg
add
pop
mov
loopne
sub
dec
int3
add
mov
add
cmp
ror
(bad)
and
daa
call
enter
and
sti
push
call
pop
ins
sbb
push
cmp
push
inc
xchg
xchg
sbb
loopne
jge
mov
add
movs
or
xor
leave
or
outs
mov
jne
in
jle
dec
add
and
out
dec
add
inc
ret
push
jl
pop
sub
and
imul
popa
inc
push
mov
call
sidtd
test
sub
not
and
or
pop
rol
shr
ror
adc
ret
test
push
test
adc
pusha
pop
test
mov
and
add
add
loopne
mov
adc
inc
add
ret
add
or
inc
and
xchg
cld
add
push
adc
in
push
rol
add
adc
mov
jo
test
ret
inc
add
rol
push
xorps
sub
pop
inc
jmp
adc
or
adc
mov
add
push
adc
add
lock
and
inc
xor
add
rol
fild
out
je
inc
add
adc
inc
adc
push
cmp
push
mov
add
push
push
adc
arpl
pop
jecxz
adc
push
cmps
bound
pop
stos
and
call
mov
mov
jmp
dec
add
fs
mov
add
shl
mov
jge
add
mov
add
add
test
call
inc
arpl
and
add
jmp
mov
adc
inc
dec
pop
call
pusha
dec
add
loop
in
xor
in
jo
adc
add
pop
adc
inc
inc
add
jmp
dec
int3
or
dec
test
adc
or
ins
into
add
add
js
jns
loope
adc
and
push
inc
add
add
pop
add
jge
lea
add
add
cwde
jle
add
add
or
pop
add
mov
nop
(bad)
in
sbb
push
test
pop
add
inc
add
inc
fistp
add
add
inc
jl
jge
mov
jg
push
call
ds
push
or
int3
out
dec
jae
jae
in
dec
add
xor
pop
add
sbb
and
add
adc
and
dec
and
mov
rcl
add
add
test
inc
add
push
or
popf
cli
add
push
add
cmp
pop
adc
adc
push
cmp
add
out
jmp
push
jge
loopne
popa
jge
mov
in
cmp
mov
xor
pusha
add
adc
jb
jbe
repnz
mov
call
pop
add
adc
rol
dec
xor
retf
jb
jecxz
jmp
cmp
push
test
push
push
mov
mov
rcl
ins
mov
sub
scas
mov
add
inc
and
adc
fsub
cmp
outs
jle
xor
test
add
xchg
cmps
enter
mov
inc
addr16
add
or
jmp
sub
lock
lahf
inc
pop
add
dec
std
inc
call
cmp
mov
retf
call
not
push
add
add
mov
sbb
push
or
sub
push
popf
ret
dec
icebp
pslld
inc
and
add
add
dec
icebp
sbb
inc
sub
add
add
inc
add
cld
and
add
cmp
xchg
repnz
ss
push
and
lock
les
loopne
jge
add
inc
jge
xor
inc
mov
or
and
dec
loopne
add
lods
xchg
pop
imul
add
inc
add
dec
xor
retf
jbe
jb
add
inc
and
add
xchg
adc
mov
push
or
mov
nop
lock
xor
cmp
ds
push
fild
add
add
push
pop
mov
rol
inc
mov
adc
nop
jmp
gs
add
adc
mov
rol
add
add
or
sub
push
xor
xor
or
je
aad
inc
sub
loope
loop
lea
mov
dec
push
sub
add
inc
call
jp
and
push
add
adc
dec
jge
fcmovne
add
add
add
shl
add
add
add
in
cmc
mov
loope
mov
inc
rol
aad
xchg
inc
adc
ror
test
add
cmp
or
(bad)
mov
and
jb
sbb
mov
ins
mov
xor
and
add
test
mov
mov
sahf
mov
push
test
add
daa
fdivrp
sub
mov
sub
xchg
loop
mov
ds
mov
jmp
ror
movs
cmp
int3
pop
jmp
add
rcr
inc
call
and
rol
test
or
nop
or
add
sbb
rcl
sub
lea
inc
jmp
cld
xor
push
cmps
sbb
dec
(bad)
call
sbb
and
sub
dec
mov
add
add
add
jl
add
push
call
add
adc
add
add
push
mov
pushf
inc
jo
in
adc
add
or
sti
lods
sbb
jp
inc
sub
sbb
sbb
clc
inc
pusha
add
add
sub
inc
xchg
mov
test
push
repnz
add
inc
test
adc
or
cli
inc
jmp
popf
add
dec
popa
push
jno
mov
or
add
jmp
pusha
rol
ins
xchg
xchg
cs
jne
pop
call
sar
mov
mov
sub
and
add
pop
add
cs
add
es
pop
add
call
cmp
push
and
jno
mov
test
cmps
add
add
es
jge
jae
je
or
sub
cld
cmp
xadd
push
adc
stc
test
add
call
adc
adc
adc
sbb
test
add
call
mov
jne
cmp
pusha
adc
and
inc
jl
add
xchg
add
into
sbb
call
dec
push
loopne
loopne
mov
rcl
or
jnp
or
add
dec
inc
or
ror
jge
add
add
xor
daa
repnz
(bad)
in
mov
mov
enter
dec
repz
stc
and
push
and
rol
xor
or
or
ins
add
push
call
dec
or
pop
(bad)
nop
sbb
add
(bad)
mov
or
adc
pop
xor
inc
loope
cld
rcr
add
aaa
and
cmp
adc
xor
repnz
push
test
push
and
call
(bad)
loope
xchg
popf
add
mov
add
push
das
test
sti
outs
call
xor
call
push
loop
pushf
add
push
shl
data16
and
mov
test
sbb
push
mov
test
or
adc
ret
pop
and
mov
adc
fst
add
mov
mov
mov
popf
shr
pop
(bad)
scas
clc
mov
cdq
lock
mov
push
inc
rcr
mov
inc
and
dec
mov
imul
sti
mov
test
inc
and
popa
or
mov
test
aad
pop
add
sbb
and
cwde
sub
cpuid
sbb
shl
adc
sahf
icebp
stos
nop
push
adc
mov
lds
stos
xchg
lock
push
add
dec
jmp
dec
inc
mov
xchg
push
or
xor
inc
mov
cmovo
adc
dec
pushf
add
ret
sbb
add
add
mov
mov
ins
add
sub
add
call
fadd
xor
push
bound
fcomp
adc
xor
ins
add
mov
cmp
add
or
retf
mov
retf
test
inc
dec
jge
add
sub
enter
jne
add
ret
or
jmp
es
xor
push
add
dec
push
add
push
fwait
add
(bad)
leave
add
cmps
add
inc
call
adc
xchg
aas
call
mov
adc
cmp
and
fld
and
prefetcht0
pop
loope
or
dec
in
popw
dec
test
fcom
scas
call
add
mov
lea
mov
pop
jnp
add
push
add
push
call
add
adc
or
sbb
loopne
and
or
jge
push
pop
and
les
add
and
ret
dec
or
add
push
pop
adc
inc
add
and
adc
mov
and
add
push
add
lock
push
inc
or
test
adc
shl
adc
push
add
add
icebp
adc
lock
ins
pusha
pop
sub
add
outs
mov
add
icebp
add
mov
and
scas
and
add
add
add
rol
adc
jmp
cmc
arpl
rol
sbb
add
adc
pop
xor
outs
xchg
adc
inc
xor
int
pop
test
add
adc
add
mov
test
xor
pop
inc
jl
rol
pop
add
clc
clc
inc
add
(bad)
cmp
mov
(bad)
call
adc
popa
fldl2t
add
pusha
mov
call
(bad)
mov
jl
scas
push
mov
xchg
aaa
xchg
push
xor
jnp
ins
sbb
test
add
ffreep
inc
adc
cld
cli
jle
add
das
or
inc
std
(bad)
sti
dec
push
sub
jae
xchg
clc
sti
scas
add
lock
call
out
add
jb
inc
add
cli
mov
aaa
adc
xor
test
or
push
add
xor
sahf
test
pop
sub
adc
add
or
inc
cwde
add
call
or
or
pop
push
push
pop
or
cmp
dec
call
btr
inc
test
push
add
add
sbb
add
dec
sub
and
jl
loope
cli
sbb
adc
add
adc
adc
(bad)
daa
mov
mov
in
pop
icebp
(bad)
cli
and
add
add
xchg
xor
inc
mov
pop
sub
add
idiv
pop
mov
or
add
icebp
jmp
sub
adc
in
or
fs
xchg
and
arpl
cli
pop
mov
jnp
mov
add
call
add
pop
add
test
add
inc
add
mov
lea
add
call
xor
psubsb
pop
add
push
(bad)
lea
je
mov
push
(bad)
push
xor
loopne
add
cmp
adc
pop
pop
mov
mov
add
dec
sub
add
jo
shl
sbb
pop
add
add
(bad)
dec
or
mov
xchg
nop
add
push
mov
rcl
and
add
mov
out
push
add
pop
mov
cwde
and
call
add
xor
bound
inc
xor
and
icebp
in
add
dec
and
fist
add
push
mov
add
or
mov
adc
mov
ds
cmp
inc
pop
or
sar
mov
test
inc
rol
jecxz
mov
push
inc
popf
sbb
add
inc
ud0
mov
icebp
pop
push
test
ja
inc
paddusb
adc
test
pop
in
add
pop
scas
rol
push
add
xor
add
jbe
inc
jmp
push
(bad)
push
add
call
sar
jo
fs
lea
test
add
add
mov
xor
add
add
dec
xchg
shl
adc
(bad)
gs
lock
pop
movups
sbb
or
xor
add
push
pusha
xor
add
add
addr16
(bad)
fcomp
jmp
call
mov
add
adc
outs
or
sar
loopne
xor
mov
(bad)
and
add
and
or
push
call
pop
push
sub
jne
nop
mov
jmp
(bad)
and
js
jge
push
xor
xor
push
inc
and
inc
sahf
add
adc
and
pop
cmps
scas
push
ss
sbb
(bad)
add
add
add
add
add
add
add
jmp
pusha
push
je
ror
add
pop
scas
fwait
jb
je
adc
scas
mov
mov
test
enter
xor
ja
push
adc
inc
cmovne
adc
add
iret
mov
sbb
add
push
or
pop
mov
mov
xchg
pop
retf
stos
mov
pop
ret
add
mov
(bad)
and
add
retf
jbe
add
dec
xchg
adc
jp
mov
fild
dec
add
add
add
movs
mov
mov
jb
es
xchg
adc
push
inc
push
sub
push
in
adc
sub
add
cmc
add
inc
cwde
cdq
mov
add
add
add
cmp
or
bound
adc
test
inc
xor
pusha
hlt
push
add
dec
cmp
dec
dec
adc
out
mov
or
inc
pop
push
test
mov
jl
jo
add
add
dec
arpl
out
std
fmul
push
xchg
ins
cld
in
add
ins
or
inc
into
cmp
xchg
lods
call
rcl
dec
or
cmp
inc
xor
add
pop
xor
adc
and
xor
mov
cmp
add
cmp
jne
or
inc
add
pusha
add
push
aad
jmp
sub
arpl
and
(bad)
inc
js
xor
dec
mov
adc
loopne
push
adc
xor
jne
lock
mov
or
jne
xor
xor
mov
pop
mov
call
leave
inc
add
adc
add
rol
add
sbb
jne
add
and
ret
and
xor
add
add
jne
mov
push
and
call
stos
rol
sysexit
push
mov
adc
or
dec
jmp
push
stc
or
adc
test
inc
push
(bad)
pop
fdiv
clc
gs
add
(bad)
push
sub
inc
push
push
jbe
jge
loop
jbe
and
add
xchg
dec
dec
add
add
retf
fs
and
and
loopne
sbb
test
dec
or
add
adc
add
cmp
sub
pusha
rcr
stos
xor
add
(bad)
test
mov
dec
cmp
add
adc
pop
pop
ss
lahf
push
push
add
and
and
popf
add
push
ret
jne
jge
inc
add
xchg
add
add
mov
pop
pop
rcr
mov
test
add
inc
and
data16
or
pop
shl
and
dec
xchg
rcl
jmp
add
add
mov
mov
loope
sub
rol
mov
inc
adc
jmp
icebp
or
clc
mov
fcmove
add
into
mov
loope
or
ret
mov
loop
jmp
ret
fisub
jbe
lock
(bad)
sbb
adc
jge
sbb
pop
aaa
mov
popf
mov
mov
loop
adc
and
mov
in
lock
mov
rol
test
push
hlt
and
adc
repz
push
push
test
inc
(bad)
dec
xor
dec
icebp
xchg
pop
out
push
xor
jne
jmp
pop
add
and
add
inc
add
and
mov
push
add
inc
push
je
pusha
outs
mov
lods
mov
lsl
data16
std
xor
push
push
loop
ins
adc
test
or
mov
and
xor
jne
mov
adc
int3
test
add
stos
jne
add
in
or
add
fisttp
sub
add
jmp
cmp
call
inc
ret
aam
add
aad
xor
lock
or
loopne
sub
pop
inc
or
pushf
jne
pop
mov
sbb
popa
lock
add
add
hlt
jg
and
fisubr
pop
jne
mov
and
test
mov
mov
fcomp
les
push
ret
je
in
lea
mov
sbb
push
mov
lock
call
xor
cld
mov
or
push
add
outs
jg
push
or
inc
inc
add
jbe
add
ror
mov
movs
add
nop
mov
jmp
push
adc
(bad)
cli
dec
and
call
push
fs
inc
imul
cld
jns
jl
int
add
fdivrp
call
push
(bad)
je
dec
in
cwde
dec
jmp
call
mov
loop
add
jne
add
add
adc
xadd
sbb
call
push
aas
dec
add
add
call
(bad)
sbb
pusha
call
add
rol
mov
adc
add
add
call
and
xor
adc
test
sub
and
imul
call
inc
add
cwde
pop
push
mov
mov
call
call
jmp
bound
mov
inc
call
push
add
add
pop
dec
push
mov
call
xchg
call
add
sbb
pusha
ins
add
push
jne
(bad)
test
add
push
loopne
clc
adc
add
inc
xchg
add
rcl
test
xchg
xor
sub
add
scas
inc
inc
lea
pusha
inc
jl
add
retf
call
add
jne
add
inc
sbb
adc
subps
push
loopne
ret
xor
or
adc
das
mov
test
movs
jo
inc
(bad)
ret
mov
lock
push
add
mov
loopne
mov
push
inc
push
test
jge
cmp
mov
add
add
mov
jb
fsub
and
pop
call
adc
test
and
push
adc
inc
dec
test
test
dec
add
add
and
nop
retf
xchg
add
sar
cmp
mov
in
loope
iret
inc
xchg
mov
cmp
pushf
xchg
push
popa
mov
inc
add
xor
call
retf
sub
dec
stc
adc
add
push
add
dec
movaps
lea
sahf
loope
dec
add
and
push
leave
or
inc
stc
add
jo
sub
push
push
test
add
popf
call
pop
je
adc
add
xor
push
nop
mov
rcl
or
add
sub
ins
jle
dec
adc
cli
mov
push
inc
pop
sub
push
pop
ror
add
repnz
movs
sub
add
hlt
call
xchg
add
add
mov
aam
repnz
pop
test
jmp
call
sub
or
aam
and
rol
pop
push
xchg
adc
cs
xor
lea
dec
xchg
bound
repnz
inc
adc
lock
adc
dec
mov
(bad)
xor
inc
or
mov
add
mov
add
rol
dec
int
out
lock
xchg
or
mov
adc
add
mov
sub
aam
add
cmc
es
push
test
inc
add
push
loope
mov
or
inc
call
pushf
or
cmps
call
jne
mov
inc
push
and
add
add
sub
add
mov
ud0
adc
dec
sub
mov
add
loopne
and
ror
pop
inc
sar
sub
sbb
inc
add
bound
add
dec
dec
add
pushf
push
outs
or
call
lock
add
add
rol
or
push
in
add
popa
inc
mov
movzx
add
mov
sub
dec
push
push
jo
add
jmp
imul
mov
add
dec
mov
jmp
push
add
adc
or
shl
adc
pop
add
inc
add
push
push
or
push
cmp
mov
lea
retf
add
mov
push
dec
mov
clc
sbb
push
js
add
inc
loope
push
ret
cs
nop
imul
or
cmp
dec
loopne
push
inc
or
add
call
inc
xor
add
add
cmps
lods
mov
ret
cmp
or
outs
pop
test
add
mov
and
sub
leave
push
pop
rol
sub
inc
test
push
inc
rcr
add
add
dec
xchg
add
add
bound
adc
or
or
js
je
and
test
add
add
pusha
and
nop
add
popf
mov
adc
ud0
scas
sbb
dec
push
inc
xor
add
add
mov
aam
fstp
les
pop
add
mov
nop
jno
add
mov
xchg
dec
addr16
jne
rol
add
add
test
cmp
mov
dec
and
add
mov
xchg
add
addr16
pop
add
ins
xor
add
jmp
loopne
mov
xchg
rol
cmp
add
add
push
enter
mov
sar
jns
adc
call
std
clc
add
or
add
xor
enter
adc
popf
bt
add
mov
fldlg2
adc
add
or
clc
push
dec
and
add
push
(bad)
cmp
xchg
add
shl
dec
or
dec
and
jno
push
cwde
xchg
and
mov
out
push
mov
xor
scas
pop
inc
sbb
dec
cmp
pusha
psrlq
add
dec
sbb
cmp
or
add
jne
cmps
mov
adc
xor
or
push
fild
mov
xor
fcom
adc
mov
enter
rol
add
add
inc
or
inc
js
jno
push
adc
loop
je
nop
add
ret
push
sbb
inc
test
mov
add
or
icebp
hlt
add
inc
(bad)
or
pusha
in
adc
push
int
test
les
and
add
fcomp
jl
xor
xor
and
add
jne
add
inc
pop
xchg
stc
add
push
loopne
xchg
add
sub
out
ret
jmp
test
push
add
fiadd
sbb
clc
hlt
pop
inc
add
call
add
popa
sbb
or
call
test
add
call
add
pop
and
add
add
add
and
pop
sar
push
adc
add
shl
mov
add
int
inc
jno
or
jge
push
dec
loop
add
push
mov
mov
push
inc
fmul
push
jo
ins
fdivr
ret
clc
fistp
sub
daa
inc
xor
and
adc
jmp
loopne
add
lea
pop
inc
push
mov
jns
push
sbb
add
add
sti
adc
adc
fadd
clc
xor
add
push
cwde
push
out
ret
add
loop
mov
or
hlt
popa
repnz
pop
add
retf
add
add
into
test
mov
and
loop
mov
mov
outs
hlt
ret
inc
nop
pop
and
dec
add
aam
add
pop
add
mov
sub
sub
add
jne
add
add
add
add
mov
push
inc
mov
push
xchg
add
jge
dec
add
sbb
cmp
add
fwait
push
fs
enter
rcr
scas
mov
pop
add
mov
or
aas
dec
or
test
mov
inc
push
cmp
mov
cmps
jmp
adc
add
add
cmpps
arpl
test
inc
mov
push
xor
test
dec
add
fild
inc
sub
fidiv
jle
push
inc
add
push
dec
add
sub
icebp
jnp
jne
scas
push
dec
jle
jo
and
add
mov
jne
cmova
in
(bad)
xchg
cmp
push
test
adc
xor
jnp
outs
add
mov
retf
shl
push
xor
test
repz
mov
adc
mov
add
rol
cmp
pop
push
ret
pop
and
add
cmp
push
sub
add
cmp
nop
add
sub
ret
nop
out
or
fadd
add
add
dec
loop
sbb
and
add
add
sub
cmp
push
stos
xor
pop
fmul
in
or
ret
call
sub
sbb
add
sub
rol
add
ror
cwde
push
fcom
xchg
pop
mov
test
mov
mov
pusha
test
add
inc
jmp
mov
enter
or
add
inc
sbb
mov
add
mov
loope
pop
add
push
add
xor
xor
pusha
hlt
jl
add
test
dec
push
push
xor
and
add
mov
arpl
cmp
add
add
add
cmp
lea
xor
mov
fadd
les
fistp
movs
add
jno
inc
rol
cmp
call
push
push
add
inc
cmp
cli
dec
add
mov
push
or
sbb
adc
add
es
verr
out
call
push
push
inc
fadd
inc
adc
call
fadd
push
add
add
pop
fdivr
popa
add
mov
add
mov
lods
xchg
add
xor
push
add
add
pusha
inc
add
push
mov
push
jb
aad
push
jge
and
rcr
enter
call
push
add
cmovb
add
jmp
add
dec
jno
adc
imul
adc
jo
pop
adc
mov
and
or
(bad)
jo
icebp
or
mov
or
test
xchg
inc
xor
mov
rol
xchg
mov
or
mov
adc
bound
xchg
add
xchg
push
add
iret
pop
out
shr
cmp
inc
cmp
(bad)
or
lea
cld
mov
(bad)
cmp
adc
add
or
and
mov
pusha
dec
mov
add
add
and
add
(bad)
std
add
mov
adc
add
push
inc
mov
inc
sub
and
add
add
shl
add
add
push
call
or
mov
das
add
add
ror
lock
xor
push
dec
fist
inc
call
push
mov
and
inc
stc
push
int3
cli
inc
or
xchg
jns
(bad)
add
and
gs
cmp
dec
mov
or
es
fbstp
cli
push
add
or
jmp
fs
add
dec
les
adc
icebp
xchg
jae
add
imul
call
sub
pop
dec
mov
fs
add
sub
rol
add
pop
test
sbb
cmp
add
outs
sbb
sbb
xlat
push
mov
xor
add
dec
xchg
dec
rol
mov
or
or
sbb
nop
pop
outs
pushf
mov
xchg
clc
push
outs
pop
inc
rol
push
push
inc
mov
je
push
add
dec
lock
add
sysenter
cmp
enter
inc
das
inc
sub
or
fimul
push
add
sub
inc
rol
stc
mov
inc
add
sub
test
inc
and
lods
mov
movlps
mov
pusha
mov
cpuid
fldcw
sub
or
add
mov
in
fld
test
aaa
push
add
not
lock
add
sub
repz
cmp
mov
mov
nop
jge
sbb
or
ds
inc
arpl
or
dec
lock
test
mov
inc
rcl
xchg
call
push
push
add
add
sub
outs
sar
jno
aas
cmove
and
push
and
jae
add
call
cmp
in
push
inc
mov
add
push
inc
and
push
mov
mov
lds
add
inc
loopne
cmp
jne
add
aas
jl
xor
je
jno
pop
jmp
popa
ficom
or
rcr
add
or
lds
int3
mov
jne
movs
fisubr
jb
int3
jmp
mov
jno
sub
push
push
adc
and
dec
sti
push
js
xor
jmp
movs
xchg
inc
mov
bndstx
cmp
mov
pop
mov
pusha
xor
call
or
shr
add
push
out
push
aas
call
lock
inc
add
add
aaa
or
push
or
call
sub
lds
or
dec
(bad)
out
add
mov
add
or
push
push
add
repz
ror
ror
cmp
inc
add
push
add
push
xor
adc
test
int3
inc
xor
clc
inc
add
mov
inc
iret
lock
icebp
mov
push
add
push
inc
push
add
pop
sbb
mov
ins
mov
call
inc
rol
test
pop
mov
jg
push
test
xor
scas
inc
test
inc
call
add
mov
jno
cmp
sub
jmp
add
test
add
lock
add
add
xor
jne
dec
enter
and
add
enter
call
call
lock
add
fwait
cmps
add
jne
jmp
mov
xchg
out
sahf
mov
sbb
loope
add
xor
pusha
ret
inc
dec
push
sub
call
jnp
mov
or
call
mov
xor
adc
(bad)
jne
adc
sub
call
xchg
movs
out
add
push
and
pop
mov
mov
add
jp
push
lods
inc
ins
or
rol
add
or
add
dec
push
ror
or
and
xor
adc
jmp
add
pop
add
add
cmp
add
pusha
sbb
push
cmp
jge
test
xor
xor
dec
jo
jmp
dec
in
mov
or
add
ret
push
mov
and
je
add
shl
push
cmp
cmp
or
ret
cwde
adc
call
and
add
inc
adc
mov
add
pop
repz
add
xor
add
pop
add
rol
jge
call
ret
and
xor
add
dec
or
or
add
push
enter
aam
mov
jmp
or
add
add
mov
push
scas
nop
fisub
repz
not
sbb
rcl
push
jmp
inc
inc
jmp
cmps
add
push
or
repz
inc
cmp
arpl
(bad)
xadd
add
nop
add
add
adc
lds
push
bound
pop
sub
mov
mov
(bad)
loop
mov
add
fwait
call
lock
imul
fisttp
add
add
push
sub
test
jge
or
call
into
or
push
(bad)
or
pop
xchg
add
xchg
mov
add
add
push
enter
sub
mov
or
and
outs
add
adc
in
inc
rol
fldenv
not
inc
add
rol
lods
jmp
popa
jmp
and
add
sti
pop
xchg
add
gs
(bad)
dec
mov
inc
and
add
adc
test
add
mov
jne
jne
div
popf
jg
cmps
lds
mov
add
inc
jle
add
fcomp
pop
add
dec
or
or
fsub
jg
jle
sbb
xor
push
adc
shl
jp
mov
push
pop
pusha
or
mov
std
push
arpl
inc
push
mov
add
arpl
xor
fsub
adc
push
loope
lea
adc
inc
dec
and
sub
ror
jmp
add
je
hlt
add
push
add
pusha
sbb
and
xor
add
pop
add
push
test
add
mov
add
leave
(bad)
cmp
in
jne
adc
test
add
jnp
call
xor
push
add
mov
jmp
and
sbb
push
adc
fs
and
sub
push
xor
jo
sub
dec
mov
push
dec
stos
not
and
add
add
add
and
jl
shr
add
or
dec
sub
and
imul
call
sti
shl
mov
fist
dec
push
push
dec
ret
or
inc
add
mov
adc
scas
push
pop
jnp
mov
or
xchg
sar
push
xchg
push
(bad)
setne
xchg
mov
mov
and
pop
call
in
mov
in
xor
dec
cmp
push
movs
xor
add
dec
aam
bound
mov
mov
into
rol
push
inc
mov
test
jge
inc
call
call
test
add
retf
cmp
ror
shl
test
add
add
push
add
add
repz
test
lar
(bad)
mov
adc
push
dec
inc
(bad)
call
inc
inc
and
imul
out
mov
lds
push
mov
cmp
stos
lods
xor
push
gs
jmp
xor
gs
xor
cmp
lock
call
dec
add
rol
mov
mov
paddusb
adc
pusha
jge
add
mov
in
add
call
add
sbb
pusha
outs
pushf
test
cwde
aam
cmp
add
test
iret
mov
add
hlt
add
add
xchg
dec
add
shl
dec
cmp
add
or
push
cmp
adc
ret
push
sub
or
and
enter
ja
xchg
mov
mov
jno
call
test
call
add
call
and
adc
sbb
add
add
cmp
add
push
add
movs
xchg
add
es
xchg
loope
cmp
add
pop
emms
sub
nop
jb
test
movs
or
adc
inc
add
push
fdiv
in
rol
add
mov
repnz
ret
add
unpckhps
popa
call
fldenv
and
inc
add
sbb
dec
push
enter
add
lock
fs
push
add
mov
push
and
loopne
fsubr
pushf
sbb
add
inc
(bad)
or
pop
xor
add
cmp
ret
add
adc
enter
add
enter
outs
gs
add
fucomp
add
sbb
adc
adc
mov
and
popa
xor
add
add
xor
pop
add
add
sbb
push
or
movs
jge
mov
jo
add
fld
add
call
fadd
and
inc
mov
ins
test
shl
loop
inc
add
mov
mov
and
lahf
dec
fadd
xchg
adc
push
push
add
pop
aam
mov
aad
add
cdq
pusha
mov
cmp
arpl
test
mov
or
jns
add
mov
add
dec
fnsave
jl
inc
adc
dec
ja
and
mov
add
push
sar
sub
add
mov
add
add
add
(bad)
rol
call
add
dec
inc
adc
push
push
loope
and
add
sbb
add
mov
or
sbb
jne
add
rol
add
push
push
adc
test
jge
aam
pop
inc
sar
jno
add
xchg
push
in
mov
shl
sub
sbb
dec
bnd
add
ins
add
cmc
add
cmps
leave
ins
add
aas
xor
and
cmps
push
adc
pusha
add
push
add
add
mov
sub
jmp
jmp
lods
into
bound
call
push
adc
je
mov
test
mov
add
mov
pop
ds
rol
xchg
jb
add
pusha
push
or
dec
inc
add
push
pop
mov
inc
fdiv
push
or
sbb
imul
enter
pop
add
inc
pusha
add
jb
std
push
add
mov
pop
add
mov
inc
pop
xchg
or
pop
push
add
or
cmp
lods
and
add
mov
jne
inc
cli
inc
popa
pop
push
imul
rol
pop
pop
add
call
adc
imul
popa
or
add
pop
jno
add
dec
int
mov
les
stos
add
mov
adc
push
sar
add
and
add
push
loopne
cwde
test
inc
xor
xor
je
lahf
ins
addr16
jmp
rol
sub
sub
adc
mov
jnp
in
pop
gs
ds
push
mov
rol
add
xor
jno
adc
push
shl
jbe
and
push
jo
add
mov
sub
mov
cmp
push
pop
test
in
xor
mov
enter
adc
(bad)
mov
add
mov
dec
fwait
adc
push
cmp
mov
int3
lock
and
shr
dec
setnp
push
lea
add
jmp
sub
add
sbb
cmp
adc
add
arpl
xor
xor
add
adc
add
mov
xor
push
sub
push
pop
sub
add
add
add
push
dec
add
adc
adc
or
push
rcr
fcom
call
add
xchg
call
sub
(bad)
mov
and
cmp
loopne
jg
inc
and
mov
call
push
call
call
call
pop
adc
popf
pop
xchg
push
call
popa
test
stos
add
(bad)
jp
add
xchg
or
add
rol
dec
cmp
cmp
push
add
cmovno
pop
and
ret
cli
push
add
add
add
aad
jge
lds
sub
pusha
dec
add
verr
and
out
and
or
cmp
mov
push
adc
or
push
test
xor
mov
push
or
sbb
push
push
sbb
imul
or
add
js
repz
push
push
mov
outs
popf
jp
mov
add
jl
add
add
movs
adc
rol
add
jmp
(bad)
dec
add
jecxz
inc
pop
fsubr
add
cmp
ret
ss
loopne
mov
add
loopne
adc
std
add
add
pop
pop
add
(bad)
shr
cwde
imul
loopne
mov
add
call
loopne
pusha
pop
mov
add
inc
add
sbb
clc
icebp
call
inc
pop
jo
inc
(bad)
int
sbb
aad
movhps
add
sar
sbb
test
cmp
ror
call
or
sbb
xor
in
cmp
enter
xor
pop
retf
inc
xor
mov
dec
ret
call
sub
push
test
sub
add
add
inc
fwait
xor
(bad)
mov
dec
repz
inc
loopne
mov
popa
xor
mov
hlt
call
cwde
cdq
add
and
nop
inc
call
call
push
mov
sbb
test
in
jnp
add
xor
rcr
mov
data16
rol
xor
add
inc
jg
in
sbb
jns
fsub
xor
or
add
add
mov
sub
icebp
push
test
pop
add
lea
sbb
cmp
adc
cld
movnti
pusha
push
dec
and
mov
movs
inc
les
or
dec
add
or
add
add
inc
add
in
jne
add
dec
call
mov
add
mov
inc
ins
and
cmp
jge
jae
mov
add
mov
push
xor
pushf
add
jl
rol
pusha
loope
ror
add
push
dec
add
sub
push
mov
mov
test
or
add
adc
xchg
add
mov
or
(bad)
or
or
hlt
xchg
inc
(bad)
loopne
jecxz
shr
push
xor
fisttp
jmp
mov
daa
and
aaa
mov
push
jge
push
cmovo
pop
loope
add
inc
(bad)
mov
sub
add
jno
fadd
xor
mov
mov
mov
dec
jge
pusha
loop
shl
inc
fisttp
add
cmp
fiadd
xor
and
bnd
adc
push
call
add
add
push
add
push
adc
int
fisttp
jne
mov
mov
rcl
or
sbb
gs
aad
xor
aaa
call
mov
add
clc
add
cmp
stc
dec
cmp
or
and
rol
add
xor
mov
inc
mov
dec
mov
mov
dec
push
shl
loope
aaa
xor
test
shl
push
stc
test
pusha
inc
inc
add
sar
test
add
pop
push
add
mov
mov
jno
sbb
add
add
and
mov
pop
les
cmp
dec
push
push
lea
inc
pop
add
outs
pop
mov
add
test
daa
dec
mov
icebp
add
cld
jl
hlt
fsub
ret
mov
pusha
adc
sub
ficom
adc
loopne
call
mov
inc
in
xor
or
mov
fcmove
and
and
xor
sbb
lea
inc
push
inc
add
lock
xor
add
mov
push
add
mov
add
pushw
add
xor
add
adc
xor
adc
jp
push
cld
push
mov
call
(bad)
push
and
push
inc
cmp
lock
cmp
and
and
and
xor
add
add
sub
add
arpl
xor
or
add
ror
(bad)
je
mov
call
popa
add
shl
rcl
sar
sbb
jmp
mov
push
add
add
popa
call
add
pop
or
imul
in
jae
cmp
icebp
mov
xor
adc
aam
inc
nop
push
add
mov
inc
cmp
inc
fistp
push
pusha
inc
and
and
nop
mov
add
or
inc
sub
ret
mov
or
inc
aad
mov
cmp
push
test
jge
jne
add
push
add
add
xchg
scas
mov
test
push
xchg
and
cmp
pop
fs
test
dec
cmp
adc
aam
mov
cmovno
aaa
add
and
mov
sub
xor
and
adc
mov
lods
mov
add
pop
push
std
push
push
aas
lea
inc
mov
push
mov
call
and
add
and
pusha
push
pop
cmp
xor
or
inc
push
aad
mov
cmp
jmp
add
pop
jae
sub
imul
mov
adc
xor
mov
push
mov
pop
test
mov
and
jge
push
clc
inc
jmp
fcom
sbb
xor
xor
loope
dec
mov
or
dec
sbb
adc
call
leave
add
inc
xlat
leave
jo
and
and
ror
or
jne
xchg
add
dec
xor
push
or
add
xor
adc
das
call
inc
add
psllw
and
es
or
mov
popf
mov
mov
lea
add
cld
popa
add
mov
xchg
add
add
ss
xchg
adc
add
add
inc
inc
adc
pop
push
inc
mov
call
call
adc
jmp
add
in
rcl
sbb
or
call
adc
sbb
(bad)
mov
nop
loopne
fsub
add
and
add
inc
add
popa
sar
fdivr
les
lock
mov
and
add
fwait
mov
vprolvd
out
add
adc
rol
cmc
mov
pop
add
cmps
aas
call
lock
mov
inc
push
and
jmp
inc
xchg
ss
push
xadd
shr
mov
pop
mov
add
add
mov
or
mov
test
mov
add
(bad)
clc
(bad)
lea
sar
sub
inc
add
call
xchg
push
adc
push
lock
push
xchg
add
mov
push
call
xchg
add
jo
scas
retf
push
stos
bound
push
adc
inc
mov
add
mov
mov
sub
scas
push
mov
lock
push
cdq
add
add
and
push
cmp
sar
cmp
mov
repz
push
cmp
add
adc
inc
push
add
add
call
add
int3
add
nop
add
sub
dec
adc
sub
dec
and
mov
xor
and
mov
pop
call
add
add
mov
dec
or
adc
shl
mov
add
sub
add
add
dec
mov
sub
adc
mov
mov
inc
test
inc
mov
call
cmp
and
(bad)
and
or
shl
cwde
push
pusha
add
and
lds
push
movs
stos
and
push
int
stos
lods
jne
lock
add
shl
jge
test
popf
add
and
add
sbb
lea
and
call
dec
pop
cs
js
jmp
aas
push
sbb
imul
jo
(bad)
aam
push
inc
and
and
(bad)
push
test
je
sar
fmul
mul
jmp
add
inc
fmul
ss
loopne
xchg
or
xor
cmp
jge
lods
add
jne
jmp
pop
cmps
and
sub
adc
add
sbb
add
bound
pop
jge
jmp
dec
mov
adc
mov
push
mov
push
xor
fbld
sub
rol
out
pusha
mov
adc
or
and
xchg
or
jge
add
xor
fiadd
dec
out
mov
sub
add
scas
enter
gs
in
clc
int3
jo
add
add
dec
push
sysexit
jno
jmp
xor
add
adc
ds
mov
xchg
xor
pcmpgtb
jle
jmp
ret
popa
push
add
and
mov
and
mov
mov
pop
mov
(bad)
aad
lar
push
or
inc
add
cmp
dec
push
mov
add
pop
dec
stos
cmp
sbb
pop
enter
add
mov
add
inc
shr
mov
mov
popa
rcr
shl
pop
dec
adc
rcl
dec
mov
add
add
or
ror
cmp
jmp
add
cli
leave
adc
or
bound
push
cli
fisttp
adc
dec
test
adc
and
aaa
add
push
add
mov
popa
mov
push
je
(bad)
dec
xchg
hlt
inc
fistp
add
mov
mov
sbb
jg
pop
jo
add
bound
pop
mov
clc
add
push
les
dec
or
and
mov
push
push
ret
mov
and
push
inc
sbb
add
and
popf
call
add
call
fadd
mov
jno
sub
and
push
pop
and
jo
cmp
dec
add
add
adc
(bad)
cmovp
dec
sub
add
cmp
aas
or
add
add
test
loope
add
add
call
inc
jecxz
in
cmc
fist
xchg
mov
les
inc
add
shl
call
and
mov
mov
icebp
jmp
sub
inc
pop
jno
mov
inc
push
add
lock
pop
popf
add
mov
sbb
call
xor
add
sahf
push
ret
pusha
jbe
icebp
jne
push
add
xchg
(bad)
mov
or
aaa
pop
and
fild
test
pop
sbb
cdq
add
loopne
push
mul
in
arpl
pusha
push
add
cmp
cmp
inc
adc
cmps
add
js
dec
mov
mov
mov
and
aas
add
inc
retf
test
nop
jne
xor
add
push
add
(bad)
pusha
add
arpl
add
inc
scas
or
(bad)
fisttp
and
loope
call
inc
xchg
sub
(bad)
(bad)
imul
add
dec
adc
adc
mov
daa
add
add
inc
mov
dec
pop
sub
add
inc
add
mov
call
cwde
shl
movs
push
pop
inc
fs
loop
add
mov
or
or
call
add
call
dec
add
aam
imul
add
add
jne
add
ins
pop
add
xor
adc
inc
add
push
je
sub
inc
push
add
jg
push
lahf
loopne
pop
call
dec
pop
jp
inc
ret
and
pop
add
test
mov
sbb
add
and
std
add
push
push
shl
shr
inc
adc
int3
in
xor
icebp
add
dec
test
pusha
shl
sti
adc
add
inc
xor
loopne
popa
or
add
cmp
inc
push
mov
add
enter
xchg
add
push
arpl
imul
inc
jl
loop
and
clc
xor
inc
imul
add
loopne
push
jmp
popa
call
and
jne
push
mov
enter
mov
mov
ror
xor
jns
call
mov
add
mov
add
add
jbe
push
pop
add
and
push
inc
inc
add
test
(bad)
call
gs
call
inc
jge
add
pusha
add
add
mov
mov
mov
sbb
mov
push
dec
rol
add
inc
loope
dec
shr
inc
jo
mov
and
mov
add
inc
sar
dec
add
push
sub
jmp
call
push
xor
pop
pop
sub
iret
rcl
nop
mov
shl
loop
mov
push
inc
jo
dec
push
std
dec
add
add
or
add
lahf
nop
add
add
jmp
dec
xor
adc
add
add
push
adc
jmp
xor
push
or
mov
bound
inc
mov
add
add
sub
xor
rcr
push
adc
and
xor
jne
jo
inc
xor
iret
add
xor
(bad)
mov
sbb
sub
sub
mov
loopne
or
sbb
mov
adc
daa
add
into
pop
mov
sbb
pop
dec
pop
add
or
and
or
add
mov
(bad)
and
add
xchg
inc
add
add
mov
inc
call
stos
ret
dec
call
mov
add
add
sub
lock
add
sbb
mov
add
mov
jge
inc
mov
inc
push
mov
add
add
push
push
mov
test
lea
dec
inc
and
mov
dec
dec
cmp
add
inc
cmp
(bad)
stc
and
sub
and
pop
push
and
add
call
sbb
jge
mov
pusha
or
lock
push
stos
fdivp
push
jmp
adc
fcomi
add
push
jne
jnp
push
adc
or
add
addr16
sbb
pop
jne
add
repnz
mov
and
lock
adc
inc
add
dec
inc
pop
(bad)
and
(bad)
enter
xor
or
or
adc
dec
add
add
popa
xchg
inc
lea
test
xchg
adc
pop
data16
aad
je
fadd
call
call
inc
std
loop
adc
pop
mov
sbb
add
and
dec
cmps
call
dec
add
dec
jno
push
add
jmp
or
mov
push
or
push
dec
dec
add
inc
mov
(bad)
mov
mov
adc
adc
test
(bad)
shl
xor
mov
jmp
and
add
inc
mov
fld
and
mov
add
mov
push
sub
in
adc
xchg
and
pop
xor
cmp
loop
clc
mov
scas
mov
add
mov
inc
in
lds
fisubr
inc
mov
add
pop
mov
lock
pusha
xchg
out
sub
add
test
adc
loop
add
jns
and
adc
fild
mov
in
mov
call
mov
push
push
add
add
inc
add
sub
out
xchg
or
mov
push
hlt
repnz
loope
scas
jecxz
sub
pop
adc
sti
add
mov
sub
cmp
push
pop
outs
and
push
daa
ret
xor
lods
mov
add
jge
inc
inc
adc
sub
jnp
test
dec
icebp
pop
call
loopne
sub
add
add
add
loopne
imul
stos
test
add
or
jmp
sar
add
(bad)
push
popf
inc
add
mov
add
xlat
repz
and
xchg
dec
or
pusha
loopne
inc
rol
lds
test
out
inc
je
pop
call
ja
add
fadd
add
inc
mov
fdivr
jecxz
add
call
dec
add
bound
pop
add
add
or
mov
mov
pop
mov
pop
call
and
das
mov
fld
cmp
cmp
inc
mov
push
dec
jne
add
push
xor
jmp
mov
nop
ror
add
outs
inc
imul
dec
mov
fcom
pusha
and
outs
or
adc
ss
mov
add
add
add
mov
paddusw
add
call
mov
mov
push
mov
dec
push
dec
setbe
lea
add
int3
lock
dec
adc
mov
add
mov
pop
add
cmp
pop
movd
test
fadd
test
dec
rol
inc
add
stc
aaa
mov
inc
ror
popa
push
jne
push
push
mov
mov
nop
jns
mov
jp
or
push
js
jp
movs
pushf
adc
jecxz
xchg
mov
add
arpl
add
xor
retf
lea
xor
es
mov
and
dec
push
inc
adc
xchg
popa
sti
or
sar
and
rol
jge
mov
jmp
pop
call
or
in
or
test
add
mov
adc
and
add
dec
cmp
call
add
mov
add
rol
fild
push
and
add
add
(bad)
jg
add
xor
push
add
bound
loopne
ret
ins
add
mov
add
add
(bad)
push
adc
push
repnz
and
mov
push
add
push
pop
add
push
adc
sbb
in
pop
test
shl
mov
jne
je
push
inc
mov
push
sbb
push
push
arpl
(bad)
test
adc
in
mov
push
push
adc
or
and
add
femms
mov
mov
(bad)
fld
xor
mov
xor
jmp
test
add
sar
add
push
vmptrld
add
addr16
mov
push
test
sbb
je
bound
inc
add
outs
push
add
add
xchg
add
cmp
pop
mov
add
call
add
adc
add
sbb
lock
add
push
add
in
mov
or
mov
push
push
mov
push
push
mov
add
je
sbb
dec
mov
popa
test
push
mov
jne
mov
add
add
mov
pusha
or
fsubr
adc
or
inc
pushf
mov
add
call
cld
adc
mov
add
dec
push
mov
add
adc
add
add
mov
or
pop
jae
in
sar
add
mov
pop
sub
or
sbb
ror
in
mov
jge
sub
mov
shl
or
add
add
mov
mov
sub
cmp
add
ret
imul
cs
test
sub
mov
jmp
mov
add
adc
or
call
pop
xchg
dec
sbb
jne
cs
ficomp
add
or
inc
pop
data16
jmp
add
add
aam
xlat
call
mov
add
nop
add
mov
add
(bad)
sbb
sub
mov
add
push
jo
and
add
add
mov
and
sbb
or
inc
sub
test
loop
addr16
pop
pusha
add
cmc
mov
cli
adc
(bad)
adc
adc
pusha
add
add
pop
inc
lock
add
adc
add
dec
add
inc
ror
in
jne
push
push
xor
or
adc
repnz
inc
and
dec
(bad)
nop
or
cmp
cmp
sub
inc
pop
add
inc
push
call
call
test
rol
add
add
or
or
add
leave
ret
or
call
mov
add
push
pop
mov
ror
sbb
or
popf
or
call
dec
inc
add
hlt
fs
push
lock
add
jb
add
cmp
adc
add
mov
push
jmp
adc
mov
mov
add
and
ret
adc
aas
inc
lock
and
lock
inc
add
pop
adc
mov
adc
jmp
or
dec
rcl
cwde
call
pusha
iret
add
cld
cmp
nop
adc
sub
pusha
xchg
or
hlt
or
test
sub
adc
add
add
mov
dec
inc
lea
add
or
add
nop
add
les
scas
add
push
jno
mov
add
inc
outs
mov
sbb
js
add
xor
add
sbb
mov
into
add
add
inc
imul
dec
and
jg
clc
inc
inc
pop
cmp
rcl
push
or
inc
and
add
sub
enter
mov
xor
add
or
(bad)
test
jo
dec
and
xchg
mov
fsub
mov
jns
sbb
xor
(bad)
rol
ss
or
fsubr
add
xchg
pop
bound
cmovs
add
xchg
stc
es
add
inc
cmp
pop
inc
jmp
mov
imul
call
add
push
xor
mov
or
xor
inc
inc
ret
pop
jmp
dec
sbb
test
ins
jle
test
add
enter
bound
or
add
das
sub
add
test
aad
sub
jo
push
not
mov
and
push
and
inc
mov
out
adc
add
push
test
sub
inc
movs
xor
dec
shr
loopne
xor
or
rcr
add
and
add
mov
dec
xchg
sub
add
push
imul
aas
dec
loop
jp
call
add
sub
xchg
add
add
xor
je
adc
xor
pusha
or
inc
int
les
pop
call
add
and
test
push
shl
push
inc
test
push
loope
or
jge
jne
mov
ror
lea
rcl
cmp
popa
push
dec
ins
jmp
mov
pop
add
inc
xor
adc
cmc
xor
sub
push
enter
dec
add
add
or
xor
call
xor
xor
mov
add
sub
jg
mov
sbb
test
add
fisttp
add
xor
mov
mov
dec
and
sub
dec
aad
add
test
call
jmp
(bad)
mov
push
ret
add
add
inc
int
pop
sbb
or
sbb
sub
ret
add
test
ins
inc
xchg
adc
(bad)
sbb
call
xor
loop
pop
inc
popw
push
add
nop
movsx
gs
add
adc
add
push
loop
hlt
jle
mov
mov
aaa
push
jmp
sbb
add
inc
dec
pcmpeqw
int3
mov
test
fisubr
mov
add
mov
push
test
push
or
mov
push
mov
fdivr
add
add
fisubr
or
aam
loopne
ror
and
add
test
dec
test
sbb
mov
lea
pushw
pop
pusha
inc
push
add
push
lock
mov
dec
push
pop
int3
xchg
and
in
or
shl
in
adc
or
add
add
loopne
bound
shr
add
dec
lea
add
mov
lds
mov
call
pusha
add
and
mov
call
(bad)
clc
jecxz
sub
push
dec
sub
jne
hlt
ret
test
push
sbb
add
xor
add
fiadd
sub
lods
add
push
add
movs
adc
xor
jns
call
imul
cmp
pusha
cmp
ret
mov
jmp
dec
push
cld
sbb
dec
outs
mov
repz
jl
pop
mov
xor
shl
mov
xor
add
pop
adc
adc
inc
loopne
adc
add
dec
add
add
mov
add
adc
push
or
sbb
or
nop
inc
add
call
das
mov
push
pop
dec
add
sahf
sub
add
adc
inc
or
add
pop
push
sub
mov
in
rol
pop
adc
dec
inc
xchg
add
and
pop
pop
ror
or
jge
jmp
push
jb
jp
cmp
add
shrd
lods
add
test
rcl
js
adc
or
mov
pusha
jae
add
icebp
cmp
shl
fld
add
hlt
add
and
add
push
add
push
stc
add
sub
push
mov
dec
inc
je
mov
gs
jb
add
push
adc
imul
add
mov
and
call
inc
xor
jmp
pushf
push
arpl
jmp
or
cmp
xchg
adc
mov
xor
neg
cmp
movs
add
test
(bad)
adc
mov
pop
push
inc
dec
push
fisttp
jge
add
mov
and
push
rol
add
push
stos
sub
add
add
add
test
imul
add
adc
dec
and
xor
sbb
lods
pop
sbb
xor
push
inc
inc
inc
add
add
ja
das
jmp
push
pop
hlt
(bad)
add
add
cmp
call
mov
mov
pop
sbb
dec
push
add
add
xchg
push
sbb
enter
inc
test
add
sub
je
inc
xchg
add
adc
add
call
scas
(bad)
fmul
inc
inc
xchg
(bad)
enter
rol
mov
and
pop
jo
add
add
pop
std
sbb
repnz
push
add
jb
sbb
adc
ret
jno
dec
cmps
cmp
add
rol
inc
add
pop
add
mov
inc
pop
and
xor
jne
add
movs
add
dec
jbe
push
add
pusha
out
pusha
add
hlt
sar
in
and
jp
add
push
push
add
add
push
jnp
dec
inc
or
push
rol
inc
push
push
add
or
push
mov
xchg
add
shr
dec
rol
clc
call
inc
inc
add
popf
adc
call
cmp
aam
inc
mov
sti
inc
jae
shr
cmp
pop
pop
mov
add
clc
push
add
rol
add
shl
wbinvd
inc
ins
inc
clc
add
lock
add
add
push
(bad)
shr
call
jae
pop
jne
push
(bad)
pusha
out
dec
cdq
(bad)
cmc
cmp
test
add
cmp
inc
push
and
jne
push
mov
sbb
or
adc
xor
add
add
fadd
add
inc
xchg
sub
cmp
inc
add
dec
je
and
out
test
mov
and
push
int3
imul
sub
add
add
test
jge
add
add
int3
(bad)
loop
inc
jns
add
and
out
rol
mov
pop
movq
call
push
loopne
icebp
mov
jmp
mov
popa
dec
add
out
add
ins
loop
stc
or
pop
sub
mov
pop
lods
xor
addr16
add
fild
mov
and
or
call
add
or
mov
adc
or
add
and
push
add
xor
adc
cmp
mov
sar
mul
add
and
sbb
and
imul
call
ds
jne
dec
jae
callw
clc
add
inc
call
jae
jmp
cld
jne
add
jb
lahf
shl
sar
add
pop
ret
inc
add
stos
push
call
ja
add
test
fdiv
test
loope
add
adc
pop
add
mov
push
and
(bad)
ins
outs
test
jnp
aas
or
xchg
xchg
pop
cmp
nop
arpl
dec
add
fadd
add
and
gs
clc
and
inc
add
push
add
and
shufps
iret
add
xchg
call
mov
xchg
popa
clc
clc
xor
ss
shl
and
jnp
push
add
pop
jmp
or
xor
and
ret
stc
nop
mov
push
add
stos
shr
xchg
ds
in
sub
mov
add
mov
pop
call
sub
add
inc
add
or
fcomp
jmp
and
rcl
xor
orps
add
mov
sbb
punpckhdq
add
cmp
add
sbb
add
test
clc
test
xchg
add
jecxz
jmp
cmp
xor
jge
rcl
(bad)
fucom
mov
fwait
add
add
sbb
add
jb
add
mov
dec
push
mov
sub
fmul
add
and
push
mov
inc
xchg
jmp
ret
add
mov
(bad)
inc
rol
or
into
dec
jmp
lea
cmp
dec
shl
mov
cmp
adc
cmp
mov
jae
add
adc
inc
mov
ficom
adc
sbb
jae
jecxz
and
push
xchg
mov
inc
push
cvtdq2ps
cdq
add
xor
and
mov
ror
or
push
loopne
hlt
jge
add
scas
call
adc
dec
mov
adc
mov
sti
ins
add
mov
push
or
sub
pop
sbb
and
pop
pop
mov
or
loope
add
adc
add
(bad)
call
mov
add
cmp
add
add
push
xor
jne
xchg
call
add
mov
and
ror
mov
xor
add
sahf
(bad)
push
adc
add
mov
adc
cmps
div
jmp
add
sub
jmp
push
bound
mov
mov
icebp
ins
and
sbb
sub
or
pop
xor
or
adc
pop
add
test
add
push
jno
cmp
test
and
add
shl
pop
add
and
sqrtps
test
(bad)
dec
push
adc
xor
jle
ins
lods
mov
inc
loope
add
push
pop
jp
cmp
push
or
and
inc
add
arpl
inc
add
leave
xor
push
movhlps
push
add
mov
jg
inc
add
jmp
xor
and
int
popa
call
and
mov
pop
and
inc
xchg
xchg
inc
dec
and
push
add
and
ins
pop
arpl
sbb
sbb
cmp
dec
mov
inc
adc
add
mov
icebp
push
xor
add
cmps
mov
mov
xor
cmp
jno
add
mov
lea
(bad)
jno
dec
add
mov
mov
dec
mov
add
ja
or
push
push
mov
add
sub
mul
jb
adc
add
mov
add
retf
jecxz
popa
in
repnz
adc
mov
sahf
add
add
xchg
call
add
aam
push
push
pop
xor
xchg
push
lock
movs
push
sldt
lock
adc
sbb
or
or
dec
loopne
jne
push
mov
ins
add
or
dec
add
mov
fiadd
add
add
add
add
xchg
jo
jns
lods
push
(bad)
(bad)
inc
aam
push
sbb
pop
loop
pop
mov
dec
stc
inc
adc
add
add
xchg
xchg
mov
push
les
je
sbb
pop
enter
add
or
add
ins
add
lahf
mov
add
add
or
or
jo
fbld
mov
pusha
and
loopne
add
(bad)
adc
(bad)
rcr
push
push
add
adc
(bad)
pop
inc
cmovne
add
xor
xor
(bad)
push
push
fs
call
add
inc
inc
lea
xchg
fst
and
lock
inc
mov
mov
call
out
or
and
adc
xchg
(bad)
mov
lahf
dec
push
mov
add
push
add
add
repz
dec
call
rol
xchg
jnp
push
and
cmp
add
mov
adc
add
dec
mov
dec
sar
add
lods
sub
das
or
cmp
add
andnps
add
dec
add
adc
mov
add
add
test
movs
add
push
pop
popf
lods
inc
inc
add
inc
and
test
add
add
dec
mov
call
push
dec
jo
jo
xor
xor
cli
jb
push
in
adc
ror
mov
push
dec
mov
je
mov
add
push
jge
lock
add
lods
test
pop
sub
je
test
or
dec
mov
and
mov
mov
xor
push
and
push
pop
jmp
xor
cmp
sub
sbb
add
(bad)
mov
jecxz
mov
jo
sub
add
add
add
xor
movs
dec
jl
xchg
add
or
mov
dec
and
popa
mov
add
(bad)
jl
cmp
(bad)
push
rcl
or
cmovne
add
je
pushw
pop
test
add
add
add
xchg
cli
es
add
ud1
cpuid
mov
or
dec
add
xor
add
xor
cwde
ja
or
add
xor
mov
inc
jne
and
mov
bswap
or
add
mov
xor
lods
cmp
pop
sub
sub
lock
inc
test
sbb
xor
icebp
mov
add
cmp
add
add
sbb
sub
add
or
add
fisub
add
cld
and
inc
add
mov
and
mov
and
add
add
in
dec
or
dec
add
add
out
pushf
mov
add
jno
stos
es
test
loopne
adc
add
adc
add
jle
dec
cmovl
pop
bound
xchg
sbb
mov
test
xchg
sbb
lea
and
rol
or
mov
loope
pop
adc
sbb
and
or
(bad)
jmp
add
mov
add
or
add
fwait
cmp
test
add
ror
push
push
loopne
xchg
cmp
mov
(bad)
stc
cld
add
inc
ss
inc
mov
test
or
xchg
adc
xchg
and
xchg
das
jge
xor
adc
sub
add
add
leave
imul
xor
adc
pop
inc
inc
push
jge
adc
add
jle
and
add
ret
dec
stc
push
add
shr
add
pop
inc
add
rcl
mov
(bad)
sbb
push
add
inc
lock
push
ret
xor
push
jge
cmp
or
test
adc
pop
inc
call
and
and
xchg
push
(bad)
int3
(bad)
sub
and
add
adc
jmp
adc
std
xor
adc
inc
add
jle
push
xchg
imul
dec
jecxz
add
pop
xor
add
and
push
out
add
and
movs
inc
mov
dec
or
out
inc
add
call
es
sub
add
popf
and
pop
add
(bad)
loop
lock
imul
and
inc
xchg
mov
push
int3
add
arpl
retf
add
lock
add
ins
sbb
jae
add
sub
dec
cmp
nop
out
and
inc
cmovs
mov
call
push
inc
ret
xor
xor
add
jne
or
inc
push
lock
jb
popf
adc
jno
loope
les
push
sbb
test
lea
push
ret
test
add
push
cwde
jge
cmp
and
add
lods
mov
clc
mov
leave
add
mov
iret
mov
push
outs
pop
test
add
add
call
add
add
stos
push
and
cmp
loopne
les
add
push
add
loop
push
jb
dec
dec
shl
pop
and
mov
fwait
es
inc
les
inc
inc
dec
lea
ret
rol
jnp
xchg
adc
jge
push
jl
xor
js
and
loopne
out
(bad)
std
jmp
adc
in
sar
in
sbb
sub
(bad)
mov
adc
or
outs
pushf
loopne
rcr
add
dec
push
mov
add
(bad)
cwde
add
mov
js
mov
push
dec
inc
call
jo
add
cmp
clc
add
rcl
lock
pop
and
add
push
call
xor
add
add
dec
push
or
ds
mov
and
sbb
inc
mov
data16
ror
loopne
lea
push
pop
adc
inc
pop
sbb
add
cmp
test
and
or
sar
and
call
and
xchg
cmp
add
mov
lock
or
push
adc
(bad)
(bad)
inc
adc
test
mov
add
(bad)
jle
dec
call
push
sbb
adc
aam
adc
xor
enter
add
pop
add
fneni(8087
adc
and
add
mov
add
mov
jne
or
sbb
add
out
inc
and
add
rol
outs
(bad)
fidiv
pop
inc
popa
jecxz
add
mov
sar
(bad)
in
pop
out
adc
fwait
imul
adc
add
mov
add
jne
loope
add
fs
aam
or
pushw
imul
inc
call
add
mov
jmp
pop
je
pusha
add
out
bswap
call
adc
cmp
or
inc
adc
and
add
jmp
call
test
(bad)
leave
cmp
shl
pop
add
xor
mov
add
call
add
adc
cmp
fwait
sbb
xor
mov
adc
add
jle
jl
out
fsubr
jne
and
mov
xor
push
(bad)
pusha
adc
shl
add
xchg
fisttp
add
add
add
add
repz
sar
sbb
mov
pop
loope
test
pop
jns
add
inc
pop
xor
mov
or
sub
repnz
add
add
cmovl
mov
add
jmp
(bad)
mov
shl
add
sahf
jle
and
jae
push
lock
sbb
ficomp
mov
sbb
add
adc
dec
lgdtd
and
mov
mov
iret
inc
mov
sub
lahf
push
push
adc
jne
push
pop
pop
jmp
pop
jge
(bad)
xor
push
arpl
add
call
add
ror
leave
inc
pushf
pusha
mov
sbb
push
jl
add
add
adc
sub
add
sub
cld
mov
xchg
clc
push
aam
loopne
push
and
inc
int
xchg
sbb
xor
push
adc
jl
rol
adc
push
pop
push
sahf
sub
xor
(bad)
in
aaa
add
push
movs
psubsb
xor
sbb
add
pmaxub
add
add
push
and
add
jne
jne
cmp
push
mov
call
dec
fsubr
add
mov
fs
imul
xchg
push
pusha
std
adc
shl
or
mov
sbb
add
add
daa
mov
add
xlat
jne
les
cmp
push
push
pusha
mov
add
mov
rol
mov
dec
ret
dec
and
add
push
add
push
dec
xor
mov
jnp
fwait
cmp
jnp
or
mov
(bad)
call
fld
add
inc
and
pop
add
inc
and
dec
mov
ret
xor
add
cmp
ret
mov
ins
sar
push
mov
add
push
jge
push
out
add
rol
add
xchg
adc
push
dec
dec
add
ret
add
mov
or
ss
rol
mov
dec
call
xor
add
imul
call
lds
push
call
add
cmp
lods
test
xlat
push
cmp
push
add
stc
add
add
ja
xor
push
mov
mov
sbb
loopne
xor
jb
xchg
arpl
adc
xchg
and
xchg
add
add
pushf
sbb
add
dec
lods
add
rol
rol
inc
pop
test
popa
pop
mov
jecxz
sar
adc
push
jnp
push
dec
lds
add
add
lea
mov
es
bound
push
add
sbb
add
inc
and
inc
push
in
ins
int
push
loope
mov
jo
gs
sbb
dec
xchg
sbb
call
mov
(bad)
movs
iret
pusha
pop
add
cmp
inc
dec
xor
push
dec
(bad)
sysenter
rol
rol
mov
loop
clc
inc
lods
pop
add
xor
dec
mov
and
fwait
push
rcl
push
mov
or
and
add
test
add
str
jmp
add
sub
enter
stc
and
mov
push
inc
rol
(bad)
jg
push
jmp
jne
mov
adc
add
add
dec
add
add
cmps
inc
mov
dec
out
add
and
pop
add
push
sub
(bad)
call
fistp
fidivr
mov
add
mov
xchg
add
cmp
nop
add
or
(bad)
mov
adc
add
and
test
add
add
test
gs
dec
xor
shr
push
test
ud0
punpckldq
push
inc
or
adc
movs
into
mov
mov
inc
(bad)
mov
inc
and
dec
inc
mov
xchg
test
and
xor
add
or
call
scas
xor
call
or
sbb
aam
rol
retf
add
mov
call
jne
fisttp
sub
fisub
loopne
add
or
and
inc
sub
mov
dec
lea
mov
test
retf
lock
stos
jne
sub
and
or
inc
add
shr
inc
call
xor
in
shl
add
xor
add
jge
add
push
add
inc
pop
push
ror
sub
rdtsc
inc
movs
inc
call
add
mov
sub
loopne
cli
(bad)
xor
test
call
and
loope
push
loope
hlt
mov
sbb
or
sub
popf
push
aaa
xor
call
lock
or
or
push
sub
and
pop
es
in
js
pop
(bad)
adc
add
movs
in
add
or
adc
pop
add
jnp
ret
cmc
adc
inc
push
add
push
push
imul
push
cmp
adc
jno
call
test
dec
and
dec
dec
psubsb
test
lods
mov
jne
(bad)
int3
mov
inc
lea
add
sbb
into
add
add
cwde
xor
rol
xor
loope
push
push
pop
shl
add
mov
fcom
jbe
push
add
inc
pusha
mov
mov
fadd
add
inc
add
add
sub
xchg
add
out
mov
jp
fiadd
or
push
jge
inc
arpl
pusha
in
add
jne
add
jb
mov
mov
mov
add
rol
adc
add
cmp
lea
and
rcr
pop
add
js
fmul
mov
add
and
inc
nop
dec
add
(bad)
or
sbb
add
dec
mov
add
and
add
add
test
mov
add
xor
fmul
add
das
add
nop
add
loopne
out
dec
adc
in
add
loop
pop
push
test
dec
or
popa
dec
add
add
add
push
cmp
jno
lock
jne
fadd
mov
adc
mov
add
mov
cmps
xor
or
sbb
add
and
inc
adc
add
mov
or
add
call
jmp
mov
jmp
dec
ret
ja
push
retf
inc
add
mov
into
add
(bad)
xor
mov
jo
movs
push
and
mov
pop
mov
mov
shr
hlt
sub
push
or
push
mov
or
inc
dec
mov
lds
adc
mov
mov
leave
sub
add
rol
inc
lea
add
adc
mov
icebp
add
xor
xor
xor
add
push
or
ins
dec
push
and
ins
mov
mov
and
add
mov
add
add
(bad)
lea
add
mov
loopne
add
call
adc
std
add
push
call
sahf
push
mov
fs
add
daa
push
push
add
fwait
test
enter
add
loopne
dec
xor
cmp
(bad)
add
dec
pop
dec
test
les
mov
mov
imul
sbb
into
mov
shl
mov
add
pop
(bad)
in
xchg
dec
and
mov
xchg
int
hlt
rol
lahf
inc
or
pushf
add
add
retf
out
add
pop
cmp
and
sbb
adc
and
loopne
loope
dec
sub
jne
add
add
pusha
rcl
add
out
mov
jb
mov
out
and
add
mov
add
or
jo
inc
clc
jne
mov
inc
loop
add
nop
mov
add
add
cld
dec
add
mov
mov
pop
dec
mov
jne
add
xor
push
add
sub
shl
frstor
xchg
mov
hlt
popa
into
rol
loopne
push
mov
push
std
mov
setns
rcpps
add
inc
adc
inc
out
call
inc
arpl
add
(bad)
dec
cmp
lea
dec
xchg
add
push
test
push
jmp
call
mov
push
es
das
mov
dec
inc
jmp
sbb
xor
add
add
movs
fisttp
adc
sbb
mov
add
add
ror
or
out
call
dec
scas
adc
add
inc
add
sub
add
or
jbe
call
or
mov
lds
dec
dec
pop
pusha
popa
movaps
pop
(bad)
mov
mov
sqrtps
mov
call
gs
loop
inc
add
sar
jne
outs
push
add
jmp
hlt
addr16
jmp
dec
add
add
cdq
mov
xchg
ss
dec
push
jmp
jmp
push
jge
fcom
lea
and
cmp
or
clc
jb
add
adc
inc
(bad)
jnp
je
jno
or
add
add
add
push
call
sub
mov
call
mov
dec
jns
call
xchg
bound
pop
sub
cs
imul
mov
add
mov
cmp
bound
call
and
and
and
pusha
call
loope
daa
psubsb
mov
loopne
dec
cli
jmp
shl
mov
int
fs
mov
cmp
and
add
add
repz
inc
adc
inc
shl
xor
call
jge
shl
inc
sub
or
add
scas
pop
mov
push
cmp
push
pusha
and
shl
jno
aas
add
add
xor
mov
inc
inc
fadd
cmp
push
and
mov
add
add
mov
xor
add
inc
mov
push
stos
push
in
inc
inc
adc
into
cmp
push
push
push
mov
fstp
lock
add
sub
cmp
jbe
add
push
hlt
inc
sbb
inc
aas
sub
or
inc
mov
and
mov
xchg
aaa
je
adc
cmp
add
push
and
aad
mov
add
add
add
mov
and
and
add
inc
pop
not
dec
push
pop
imul
sbb
dec
call
mov
add
add
sub
and
icebp
ja
add
mov
inc
and
ins
push
sub
push
add
call
add
or
lods
cmp
cmp
mov
jmp
outs
and
add
add
push
pusha
jne
add
or
add
sub
(bad)
(bad)
and
ret
add
(bad)
mov
ret
add
or
pop
or
dec
sub
mov
in
add
loopne
add
shl
pop
ret
xchg
call
add
ins
loope
pop
add
cmp
pop
lock
inc
or
add
add
mov
mov
cld
jne
inc
inc
stos
dec
add
push
add
xor
or
lea
ret
(bad)
jmp
popf
(bad)
xor
jne
rcl
inc
adc
xlat
call
sar
mov
add
pop
xor
push
jmp
add
jp
call
retf
fadd
stc
inc
or
loope
and
mov
mov
xor
lea
in
mov
mov
dec
add
add
adc
mov
add
jo
sbb
loopne
test
or
add
cld
dec
push
push
push
adc
dec
sub
and
aas
or
add
and
push
test
push
push
dec
mov
add
mov
jo
add
jbe
shl
loop
add
or
add
test
and
jmp
ins
push
or
fadd
inc
push
aam
mov
jp
add
inc
add
sub
xchg
inc
mov
add
mov
xor
inc
add
pushw
fs
add
sbb
scas
cmp
jno
mov
xchg
add
sbb
dec
mov
sub
(bad)
fadd
or
mov
mov
call
repz
mov
push
add
add
add
call
fimul
fiadd
ss
or
cld
add
push
xor
(bad)
mov
loopne
lock
xchg
sbb
and
mov
jb
add
add
outs
add
mov
add
(bad)
jno
adc
add
or
inc
test
call
les
shl
add
iret
sbb
cwde
add
xchg
mov
repnz
cmps
push
add
ror
pop
xor
stos
add
inc
and
in
ins
inc
sbb
add
xchg
ss
shl
dec
ss
push
or
push
inc
sub
mov
xor
cmp
or
call
xchg
xor
add
lock
pop
add
inc
retf
mov
ss
fistp
pop
add
add
add
or
jmp
add
or
test
pusha
push
inc
js
bnd
add
mov
pop
fsubr
imul
jge
add
or
dec
push
rol
mov
jge
xchg
movs
daa
add
test
add
add
inc
add
or
loopne
rcl
pop
and
add
mov
pusha
sub
les
lock
and
mov
les
pusha
add
dec
sub
sahf
cmp
add
mov
add
add
inc
add
adc
jge
call
push
or
dec
sub
add
jne
in
push
ret
pop
sub
pusha
push
add
mov
dec
test
push
invlpg
sbb
sub
fwait
mov
mov
xchg
rol
push
inc
push
ror
or
lock
xor
add
ret
ins
mov
add
popa
add
dec
adc
and
das
add
add
cmp
stc
jg
cmps
mov
xchg
add
dec
fild
dec
add
add
stc
popf
add
add
cwde
jne
pop
xor
xor
rcr
loopne
(bad)
inc
les
outs
ret
or
stos
mov
ds
ror
pop
mov
movs
xchg
rol
mov
mov
xor
add
mov
mov
push
push
add
add
mov
loopne
(bad)
cmps
enter
add
test
add
je
push
(bad)
repz
add
inc
jmp
add
dec
mov
mov
pop
retf
add
inc
add
pop
je
add
loopne
outs
cmp
inc
mov
xor
push
call
jne
inc
add
lds
xor
clc
mov
mov
cmp
or
push
fisttp
fmul
add
mov
push
xchg
jmp
cmp
jo
cld
push
jo
mov
add
sbb
add
push
sbb
sub
add
sbb
jmp
cmp
mov
jge
pop
pushf
push
ja
pop
xchg
adc
add
call
mov
adc
inc
loopne
push
call
int
jge
pop
inc
dec
mov
push
cmp
lds
sub
sub
pusha
xchg
mov
dec
push
add
and
lock
fadd
mov
jge
shr
mov
imul
mov
or
jne
lods
mov
add
pop
pushf
xor
inc
push
mov
lock
call
aas
rol
imul
jne
aaa
adc
sub
call
mov
inc
adc
add
jae
xchg
inc
pop
call
add
inc
xchg
or
mov
adc
mov
or
sub
mov
mov
enter
nop
push
add
call
add
push
out
div
fdiv
add
add
xor
ret
push
(bad)
add
pop
popa
add
and
int3
dec
cmp
pop
pop
add
or
test
mov
fcom
nop
add
sub
push
(bad)
push
jo
repnz
push
add
add
mov
add
jo
ror
pusha
jno
lods
clc
add
ror
(bad)
or
imul
add
(bad)
jb
aaa
or
push
call
rol
mov
inc
imul
add
out
call
dec
inc
pop
adc
call
in
add
add
adc
nop
sub
call
mov
loope
add
call
call
ret
lock
xadd
adc
jne
push
cmp
test
adc
or
add
dec
or
push
xor
in
bound
push
and
push
mov
sti
inc
and
inc
movs
add
xlat
rcl
or
mov
movs
and
push
xchg
add
inc
jns
mov
mov
inc
es
add
inc
push
stos
xor
ret
sar
mov
call
xchg
push
push
ret
add
add
jmp
and
dec
add
add
jo
inc
mov
bound
add
cmps
les
sub
add
xor
adc
std
add
imul
add
inc
add
or
loopne
add
cmp
mov
popf
and
jmp
add
inc
cmc
add
fld
out
mov
jmp
push
loop
push
xor
push
add
sub
in
add
mov
or
in
inc
je
call
jmp
push
aas
add
add
adc
jne
aad
mov
shl
(bad)
icebp
sub
dec
add
jle
(bad)
add
fnstenv
loope
call
call
pusha
xor
add
pusha
mov
sbb
sar
xor
and
sub
pop
and
std
fadd
mov
add
fisttp
or
dec
dec
bound
sub
and
xchg
add
hlt
inc
rol
bound
and
pop
push
push
rol
lahf
dec
jo
jo
add
lea
mov
adc
add
call
movs
xor
add
or
inc
dec
xor
push
jge
xchg
int3
mov
lea
inc
cmovo
dec
and
ja
icebp
and
leave
aam
movnti
fsub
test
push
add
push
call
push
add
mov
stos
rol
call
arpl
push
ins
adc
adc
mov
call
add
test
adc
pop
pop
add
xchg
and
push
push
jmp
inc
call
pusha
pop
mov
daa
dec
movups
xchg
add
leave
bound
mov
inc
add
jp
pusha
add
(bad)
movs
xor
add
retf
mov
pushf
or
or
add
push
add
sbb
and
jne
mov
ins
lock
or
je
add
inc
and
dec
out
and
jo
mov
add
mov
movs
add
pusha
add
add
add
push
mov
pusha
or
push
jo
xor
out
adc
lea
add
js
adc
xchg
or
sbb
mov
loope
cmp
cmp
add
(bad)
lar
out
xchg
add
rol
sar
inc
call
test
js
inc
push
lock
pop
and
push
popa
push
imul
lock
adc
call
add
add
popa
adc
fnstenv
or
aad
cmp
pusha
push
test
icebp
iret
add
xchg
inc
jne
add
xor
mov
mov
push
jnp
push
mov
rcl
or
adc
and
or
sub
call
xor
inc
adc
add
(bad)
(bad)
shl
sub
es
add
mov
or
pop
fmul
add
add
std
push
xchg
sbb
add
mov
inc
inc
and
jp
(bad)
sub
mov
popf
idiv
fadd
add
popa
sbb
xor
and
add
mov
(bad)
sbb
xchg
push
add
mov
add
inc
inc
pusha
sar
dec
adc
call
cwde
stos
xchg
mov
xor
and
xchg
test
out
dec
and
and
and
lock
inc
jo
push
jmp
adc
mov
inc
and
dec
jne
adc
aas
add
inc
dec
arpl
add
add
pusha
push
mov
push
rcr
mov
add
sbb
jo
pop
inc
cmp
rol
adc
lea
or
or
mov
inc
and
loopne
inc
push
cld
push
ror
mov
add
or
mov
adc
ret
cmp
inc
daa
in
popa
add
or
mov
and
call
cmp
nop
call
jnp
cmp
add
dec
inc
enter
shl
add
fnop
sbb
cmp
pop
mov
add
dec
jmp
hlt
dec
mov
push
clc
xchg
pusha
or
push
mov
and
add
cdq
mov
mov
paddd
inc
adc
sub
rcr
sub
add
jo
and
(bad)
and
dec
adc
mov
jne
xchg
jmp
jns
hlt
call
mov
or
add
ret
mov
inc
or
mov
push
inc
loopne
mov
lds
test
mov
dec
cpuid
jp
aas
mov
add
mov
dec
push
out
add
jne
add
sbb
push
mov
dec
dec
mov
hlt
or
inc
xchg
fld1
sub
lock
hlt
and
loopne
add
popa
or
inc
repnz
add
call
pusha
shl
popa
pop
call
add
test
add
fild
add
and
inc
adc
call
inc
pop
in
stos
mov
jno
cmp
dec
jge
inc
push
xor
pusha
and
clc
rcl
add
fdivr
or
es
je
xor
sar
and
and
push
lock
lds
ror
test
stc
adc
hlt
imul
movs
xor
popa
ror
sbb
(bad)
neg
dec
mov
mov
sbb
adc
add
into
sbb
mov
push
dec
(bad)
fnstsw
out
dec
mov
imul
sbb
jae
dec
mov
jp
mov
inc
sub
add
or
inc
call
ins
sub
inc
add
dec
fld
cwde
inc
push
xchg
rcl
daa
mov
push
nop
add
mov
inc
add
rol
push
sub
call
pusha
pop
jge
pop
dec
add
jo
add
test
shr
(bad)
call
push
cmp
enter
and
inc
sub
push
add
pop
xor
scas
or
and
icebp
pusha
popa
inc
dec
adc
pop
retf
movaps
sub
in
push
sub
adc
add
rol
inc
test
lds
gs
dec
add
adc
push
stos
push
jge
mov
inc
adc
mov
sub
add
add
inc
call
stc
add
aaa
inc
or
or
idiv
call
push
jne
sbb
cmp
and
cmp
xor
or
dec
pop
dec
push
add
arpl
xor
add
test
ja
ret
cdq
sub
add
aaa
or
pop
pop
cmp
arpl
bound
add
jmp
sub
sbb
ret
cmp
enter
fiadd
add
mov
add
jno
imul
dec
cmp
add
call
sub
inc
cld
mov
add
enter
ins
adc
test
mov
inc
rcl
push
adc
xor
add
inc
mov
inc
and
test
in
mov
dec
or
call
inc
pop
mov
push
add
jns
and
inc
mov
xor
push
sbb
mov
aaa
std
add
xchg
add
adc
push
(bad)
jne
sbb
and
xchg
sbb
push
cmp
sbb
call
push
dec
add
sub
cld
mov
add
xchg
add
mov
inc
push
mov
add
dec
or
je
shl
shl
add
push
pop
test
pusha
rcl
inc
rol
call
push
push
(bad)
bound
(bad)
retf
push
nop
je
mov
or
dec
scas
ret
add
ror
icebp
adc
mov
cwde
test
test
sub
loopne
stos
add
jo
jmp
cmp
adc
or
mov
adc
dec
test
or
(bad)
int3
dec
movs
jmp
movs
pop
add
js
test
call
add
inc
rol
(bad)
mov
add
xchg
sbb
and
mov
add
sub
add
loopne
lods
mov
mov
or
mov
sar
or
pop
jmp
add
sbb
add
ss
dec
xchg
(bad)
jo
push
adc
loopne
add
or
mov
(bad)
jmp
clc
jmp
ins
mov
dec
and
gs
jmp
inc
cs
lock
ror
add
add
add
mov
add
inc
jge
and
add
add
and
mov
mov
adc
jne
inc
add
mov
jb
(bad)
jbe
mov
test
add
fdivp
popa
pop
out
xor
call
push
(bad)
cmp
adc
shl
jmp
dec
popf
adc
sbb
lds
inc
repz
inc
inc
ins
add
xchg
push
rol
inc
add
mov
mov
mov
movs
inc
cwde
js
inc
add
add
daa
inc
mov
push
add
mov
test
(bad)
push
pusha
add
shl
push
add
repnz
mov
xchg
add
pop
cmp
inc
jb
dec
add
mov
mov
xchg
dec
call
stos
add
ins
in
popf
push
and
add
lock
mov
cwde
xor
ss
add
xor
clc
dec
push
sub
or
scas
mov
add
leave
icebp
or
or
push
inc
je
push
xor
mov
sub
sbb
xchg
mov
jne
add
inc
loopne
add
call
add
adc
iret
cmp
je
scas
push
ret
add
das
cld
adc
sar
clc
inc
pop
sub
or
add
(bad)
and
inc
inc
mov
jmp
call
adc
jne
pop
adc
jl
stos
ins
es
mov
loopne
in
mov
add
add
sbb
and
dec
les
ror
add
cmp
inc
dec
inc
data16
pop
push
add
popa
or
call
add
or
dec
(bad)
fadd
jo
pop
jmp
call
and
jo
fiadd
ja
or
or
pop
add
add
dec
add
test
stos
or
call
sbb
mov
cmp
into
cmp
fadd
or
jge
add
mov
and
add
jmp
pop
and
xor
add
and
push
mov
xor
dec
dec
out
repnz
add
fucomi
dec
(bad)
std
add
mov
xor
loopne
add
add
push
add
call
mov
push
push
push
inc
mov
dec
jmp
add
or
(bad)
out
add
xchg
add
dec
inc
test
sar
call
pop
ret
mov
sub
add
cmp
mov
dec
shr
imul
adc
adc
add
loop
loopne
jmp
lock
cs
shl
call
dec
mov
call
test
rol
shr
push
sbb
ins
add
pop
mov
adc
(bad)
pop
push
and
mov
test
xor
cmp
sub
cmp
dec
pop
adc
pop
add
ja
inc
xlat
nop
fsubr
dec
add
add
shr
mov
mov
mov
add
lds
or
dec
mov
mov
pop
loope
add
adc
test
in
and
dec
jo
sub
test
jl
adc
xchg
dec
mov
fadd
jae
or
adc
or
sbb
(bad)
adc
(bad)
pop
adc
ss
xor
mov
push
xor
lock
call
jmp
add
in
sub
push
or
dec
add
out
and
add
rcl
push
mov
xor
push
jmp
add
ret
rol
out
cmp
add
add
and
je
ins
jbe
call
jecxz
mov
push
push
mov
pop
fild
add
mov
push
inc
or
and
add
ins
adc
or
dec
mov
adc
(bad)
pushf
ret
mov
pop
push
scas
lea
call
inc
sar
sbb
or
inc
jo
jmp
jns
add
push
adc
xchg
call
adc
test
mov
cs
jle
adc
and
push
ret
leave
adc
add
dec
outs
and
ja
add
call
popa
scas
add
add
dec
xchg
fdiv
cmps
inc
inc
pop
fbstp
test
mov
xchg
push
mov
mov
xchg
mov
inc
inc
ret
loopne
add
add
inc
call
arpl
sub
jp
push
add
lock
mov
xor
fadd
shl
adc
(bad)
xchg
dec
or
xchg
push
pop
and
mov
stos
loop
mov
sub
and
(bad)
(bad)
mov
sar
call
add
movs
and
sbb
inc
adc
add
push
sbb
ja
adc
push
movs
jmp
add
inc
push
(bad)
pop
(bad)
mov
mov
add
es
xor
addr16
inc
cli
call
and
mov
push
mov
inc
retf
stos
mov
icebp
mov
mov
adc
je
or
out
int3
or
add
jne
je
and
adc
pop
add
dec
and
jne
imul
push
mov
inc
jne
inc
and
inc
add
sahf
test
pop
add
push
es
sub
sub
pop
out
es
lock
sbb
test
adc
push
call
lea
cdq
inc
jne
add
inc
adc
xlat
xor
add
mov
test
movs
push
inc
shr
mov
add
adc
lock
shl
inc
jne
adc
push
dec
push
iret
add
add
sbb
mov
or
je
xchg
repz
add
and
or
jmp
add
ficom
add
test
retf
and
mov
jmp
adc
or
push
call
inc
xor
sub
call
repnz
addr16
add
test
or
mov
nop
mov
sbb
les
call
cld
fbstp
nop
rol
xchg
sub
add
mov
add
jo
(bad)
dec
jge
bound
inc
and
std
or
push
add
(bad)
xchg
fmul
sbb
mov
adc
push
push
xor
lods
add
push
ret
arpl
adc
pop
add
cmp
or
outs
sbb
jmp
push
pusha
pop
cli
cmp
cmp
and
add
mov
hlt
test
sub
add
and
inc
aam
add
mov
xor
inc
sub
cdq
push
call
add
mov
jo
pushf
sbb
and
inc
add
dec
sub
mov
(bad)
call
add
test
or
enter
pusha
add
adc
data16
pop
add
pop
arpl
jg
nop
adc
and
mov
add
add
add
sbb
syscall
inc
xchg
push
add
add
xor
add
adc
and
dec
and
push
adc
push
jo
adc
add
mov
add
data16
add
and
divps
retf
or
dec
add
popa
arpl
sbb
add
push
xor
inc
popf
add
adc
jb
jge
xchg
dec
fadd
mov
mov
and
rcl
or
stos
mov
cmp
ins
sbb
and
lock
dec
enter
adc
cmp
call
cmp
adc
sar
fs
cmovs
adc
push
fild
and
mov
jnp
in
add
iret
and
push
call
call
pop
pop
adc
push
ss
pop
shr
mov
dec
in
mov
int3
arpl
leave
add
aam
jne
add
push
mov
dec
inc
dec
xchg
xchg
dec
add
adc
pushf
adc
push
mov
mov
call
inc
add
add
add
lock
add
inc
xor
add
retf
xchg
ror
test
cmp
add
add
popf
neg
dec
call
add
out
call
add
sub
call
pop
inc
add
rol
xor
lods
call
and
or
inc
in
add
jb
jnp
push
mov
xchg
inc
into
adc
and
xor
cli
cmp
lock
adc
daa
and
add
fld
jno
adc
mov
pop
add
rol
aaa
mov
leave
push
call
mov
ds
pop
push
mov
in
mov
xchg
push
data16
add
test
add
lods
or
inc
pop
push
add
jo
or
popf
push
dec
push
sub
push
add
lock
clc
push
shl
push
in
dec
jns
mov
add
inc
add
push
cmp
fild
loop
inc
inc
xor
pop
adc
call
push
pop
jo
nop
cmp
std
in
call
add
or
movs
enter
adc
or
jmp
in
add
aam
lea
std
mov
inc
ja
or
out
inc
or
sub
aas
inc
loopne
mov
xchg
inc
pushf
adc
jge
popa
adc
dec
add
rcr
dec
fmul
pop
add
push
sub
inc
add
add
push
add
aaa
call
sti
inc
push
je
(bad)
std
add
add
or
add
add
(bad)
scas
sbb
add
mov
or
inc
cmp
pop
adc
push
loopne
cdq
mov
pop
sbb
outs
call
add
xchg
push
inc
shr
add
jns
mov
data16
out
pop
add
cmps
cmp
rol
inc
or
xor
add
rcl
push
push
add
fsubr
add
add
dec
adc
and
add
xchg
sbb
je
sbb
and
adc
adc
add
dec
push
scas
call
inc
out
push
call
(bad)
sbb
add
inc
es
add
(bad)
adc
mov
loope
and
je
adc
pop
shl
retf
add
mov
call
push
mov
inc
pop
pop
dec
cmp
gs
nop
mov
add
xor
test
dec
ror
sub
jmp
and
loopne
call
cmps
test
mov
std
sub
adc
call
mov
xor
jmp
mov
inc
sub
and
sbb
sar
add
rcl
aam
lea
loopne
adc
jge
ror
mov
push
and
xchg
jne
popw
jbe
add
jne
int3
(bad)
xchg
push
test
loope
jecxz
xlat
ins
(bad)
lock
xchg
push
or
jge
add
pusha
dec
fcom
sbb
add
cmps
(bad)
adc
in
sub
dec
nop
adc
ffree
jns
add
add
add
mov
loop
stos
test
add
dec
cmps
push
mov
add
adc
and
add
ins
mov
das
pop
add
inc
lock
push
pop
add
add
(bad)
jne
push
mov
mov
jb
enter
icebp
xlat
adc
add
mov
lock
sahf
cmp
das
js
nop
jae
and
xor
pusha
push
dec
ins
xchg
(bad)
dec
nop
mov
mov
add
sub
mov
add
push
in
test
inc
add
add
dec
imul
inc
sub
add
push
mov
test
jo
mov
push
add
in
jo
xchg
add
xchg
pusha
xchg
adc
mov
add
mov
push
lds
dec
add
test
fs
addr16
or
mov
cmp
mov
jne
and
xchg
inc
add
mov
addr16
(bad)
and
add
add
add
xor
cwde
repnz
mov
or
sahf
add
nop
popa
push
bswap
pop
push
cld
add
mov
xchg
add
pop
sbb
push
push
or
push
push
and
add
mov
inc
and
lock
adc
or
xor
add
call
add
std
mov
lods
dec
shr
(bad)
pusha
and
push
test
add
mov
scas
inc
xor
dec
push
push
inc
pop
add
and
xor
add
mov
push
inc
(bad)
pop
cmp
xor
jno
xor
push
add
cmp
add
adc
pop
xchg
mov
pop
inc
pop
add
add
inc
sbb
push
dec
inc
(bad)
jl
pushf
mov
cmp
shl
pushf
mov
test
pop
push
add
adc
add
add
pop
push
and
adc
and
mov
inc
push
(bad)
sbb
mov
add
push
call
lea
add
inc
and
out
sbb
dec
add
and
xlat
mov
dec
or
adc
or
mov
inc
inc
inc
push
js
ss
lock
mov
or
inc
iret
mov
add
std
popa
lahf
add
ror
add
imul
push
xchg
(bad)
mov
jb
mov
sti
cmps
vmwrite
or
add
add
dec
push
dec
mov
cmp
xor
add
adc
sbb
push
add
icebp
sub
add
inc
and
mov
imul
(bad)
call
loopne
add
add
add
pop
push
fadd
add
pop
add
pusha
jmp
push
test
dec
cwde
and
add
leave
movs
push
push
shl
dec
pop
sub
popa
inc
push
cmp
jl
std
(bad)
dec
add
inc
sbb
add
xor
push
pusha
add
popa
enter
jmp
xchg
dec
xchg
rcl
hlt
add
add
push
loopne
je
inc
pop
and
fistp
push
(bad)
sub
xor
jl
sub
push
push
cld
push
pusha
add
adc
and
or
mov
dec
xor
shr
(bad)
sub
ror
test
inc
push
pop
add
test
dec
in
sub
in
add
dec
mov
jle
adc
mov
ja
push
call
add
push
jge
loope
pop
add
push
mov
gs
std
mov
mov
xchg
clc
mov
add
push
inc
push
inc
and
and
push
dec
xchg
rol
add
fiadd
push
ror
push
jge
adc
and
add
push
cmp
add
push
add
inc
fcom
push
sub
xor
add
push
shl
aaa
jmp
lock
mov
push
and
jmp
aam
rol
(bad)
nop
jge
add
add
adc
dec
push
sahf
add
jmp
lahf
sub
push
mov
or
add
add
shl
sldt
fld
mov
adc
add
std
or
mov
mov
js
icebp
inc
dec
jo
por
or
pusha
mov
movs
call
mov
add
cli
add
xchg
test
and
add
add
add
and
shl
call
call
inc
and
xor
mov
out
xchg
ss
dec
jp
int
or
das
repnz
fild
or
sbb
fcomp
call
es
xchg
out
add
cwde
imul
pusha
jo
xchg
inc
mov
mov
jg
inc
or
mov
inc
call
cmp
dec
(bad)
dec
pusha
rol
pop
cmp
mov
aam
ins
cmovno
mov
xchg
pop
add
call
add
nop
dec
(bad)
movs
cli
(bad)
int3
adc
cmp
rol
xor
mov
xor
stc
xchg
cmp
mov
pop
cmp
daa
add
add
adc
add
je
cmp
es
adc
addr16
mov
push
ja
inc
xchg
pop
add
xor
push
ins
sub
inc
inc
call
sub
ret
mov
and
add
dec
sbb
mov
idiv
call
sub
rol
inc
imul
les
dec
mov
add
lock
add
jne
adc
inc
cmp
mov
in
daa
adc
jne
dec
test
adc
in
lock
sub
mov
add
inc
inc
or
mov
mov
add
call
cs
dec
sbb
add
add
jmp
in
push
fisttp
inc
sbb
xchg
xor
sub
add
add
add
pop
mov
mov
adc
inc
add
add
into
inc
sub
rcr
and
push
dec
add
sbb
in
inc
xor
inc
xor
inc
mov
std
push
or
inc
hlt
mov
push
call
jge
mov
pop
sbb
sub
mov
sub
test
call
mov
test
sub
and
shr
add
push
add
ret
or
or
add
xor
loopne
scas
push
mov
or
add
mov
add
rol
ror
icebp
dec
xor
loopne
es
xor
xor
sub
ret
add
and
add
add
push
sub
adc
daa
add
loopne
add
loope
lock
(bad)
int
xlat
push
(bad)
mov
ss
(bad)
jne
sub
add
add
dec
add
mov
inc
inc
or
bnd
call
jge
cld
call
cmps
test
push
sbb
inc
fs
test
cld
clc
bound
mov
push
mov
push
sub
pop
inc
xor
hlt
mov
add
(bad)
and
call
rol
add
loopne
add
clc
adc
pop
push
mov
sub
dec
loope
fs
dec
add
add
lods
or
js
std
mov
retf
lock
mov
pop
push
xor
retf
pop
cmp
inc
fbstp
cmovne
add
(bad)
call
dec
add
dec
sub
add
lds
cmp
inc
add
sbb
pop
cli
add
loopne
pop
cmps
ret
and
push
in
cmp
mov
rol
add
mov
add
mov
mov
enter
dec
and
inc
add
and
push
and
out
in
pushf
hlt
movs
cmp
adc
add
cmp
sahf
dec
fsub
mov
push
or
add
sbb
loop
push
add
push
dec
jmp
in
rol
nop
add
mov
call
push
lea
pop
dec
add
cmp
dec
fnstcw
nop
lahf
test
and
pop
nop
and
add
call
xchg
arpl
adc
outs
ret
rol
push
push
mov
call
push
add
rol
je
add
add
mov
stos
cs
sbb
add
inc
gs
jns
sbb
sub
call
xchg
mov
aam
xchg
call
jmp
add
icebp
in
test
sub
mov
dec
push
add
inc
adc
add
pop
push
call
lock
add
inc
add
push
add
inc
out
inc
inc
test
add
loopne
add
ins
jmp
mov
dec
call
mov
sbb
xor
dec
jge
sbb
dec
mov
jmp
push
add
(bad)
nop
in
cdq
cmp
pop
or
push
add
rcl
push
add
loopne
and
cwde
add
sub
xchg
scas
add
sti
cmp
call
add
push
push
or
add
test
xor
(bad)
inc
cli
add
push
rol
rcl
shl
and
or
shr
pusha
pop
push
fs
or
xor
jb
test
and
add
sbb
sahf
jne
push
mov
cs
or
push
cmp
inc
dec
dec
add
scas
add
add
xlat
inc
lds
mulps
push
movs
cmp
das
cmps
dec
call
std
arpl
clc
or
push
add
mov
call
dec
stc
add
and
bound
add
int3
add
sub
pop
xchg
inc
add
jecxz
pop
push
add
adc
push
jae
fs
add
push
or
call
jo
and
inc
dec
clc
pushf
add
pop
dec
mov
jg
add
xchg
cld
add
mov
sub
or
add
cmp
sub
loope
jge
pop
add
inc
fdiv
jne
push
pop
xor
push
out
enter
sbb
test
inc
mov
jge
mov
lea
call
inc
test
test
inc
cmp
loope
fdivr
loopne
and
pusha
dec
inc
call
add
xor
add
add
mov
mov
add
push
leave
inc
test
cmp
sbb
and
jmp
call
dec
arpl
call
jle
adc
lea
sub
add
add
stc
add
dec
inc
add
add
ret
jmp
aaa
cmp
pop
add
or
add
mov
mov
dec
cmp
jb
xchg
pop
add
movs
push
xor
inc
push
push
rol
ins
jb
ror
dec
bound
xchg
shl
xchg
add
call
(bad)
retf
add
mov
jmp
test
sti
and
mov
test
sbb
dec
pop
add
ret
or
push
ret
sub
(bad)
call
add
push
inc
ds
adc
jne
add
adc
call
clc
add
mov
rcr
sbb
or
sub
ins
add
add
fwait
or
adc
add
xor
push
inc
(bad)
push
push
xor
inc
dec
ror
dec
test
add
add
or
mov
add
call
stos
pop
push
or
pop
add
rol
and
test
jmp
cmc
mov
shl
jnp
cmp
fsubr
fiadd
jmp
xor
sar
test
rol
call
pop
inc
xor
mov
aaa
call
cmps
mov
test
pushf
add
pop
sub
in
pop
call
rcr
push
push
leave
call
sbb
add
loopne
push
add
mov
push
push
dec
add
sar
clc
jne
mov
cld
xor
call
dec
push
add
dec
arpl
xchg
add
loop
shl
fild
adc
add
dec
xor
popa
adc
mov
inc
(bad)
sti
cs
adc
sub
cmp
inc
add
push
call
adc
push
sub
xchg
pop
push
ja
jge
push
push
xchg
sbb
dec
push
or
or
les
call
add
sbb
mov
add
in
idiv
push
imul
fisttp
rol
xor
pop
or
add
add
add
add
movs
call
push
add
xchg
xchg
inc
test
enter
and
test
jge
or
add
add
cmp
mov
movs
outs
or
sub
add
push
cmp
lock
sub
or
xor
lea
jmp
add
mov
and
xchg
add
jno
hlt
adc
call
jmp
jne
and
pop
inc
add
shl
sbb
or
ins
add
pop
inc
daa
pop
call
sub
inc
and
inc
xchg
push
xor
mov
adc
inc
inc
mov
call
push
push
mov
leave
pop
push
cmp
test
popf
loopne
add
sbb
push
mov
add
in
lock
mov
dec
xchg
lahf
hlt
adc
es
or
add
push
mov
cdq
mov
push
mov
sub
cmp
pop
popf
jnp
or
loope
or
mov
sbb
xor
fidiv
jmp
adc
xor
call
ja
and
cmp
call
adc
add
test
loope
xchg
pop
test
inc
leave
pop
add
jmp
and
imul
add
fcmovbe
push
dec
inc
adc
fiadd
mov
mov
icebp
inc
mov
fisub
aaa
shr
push
or
add
push
(bad)
dec
mov
mov
mov
pushf
push
xchg
mov
dec
inc
outs
pop
adc
adc
add
cmps
sub
inc
inc
adc
clc
ror
shl
in
dec
adc
lock
push
push
mov
push
shl
mov
mov
inc
jmp
push
mov
add
xchg
add
add
or
add
lea
add
popa
cmp
or
dec
push
sar
xchg
add
mov
cmps
pusha
or
call
call
lea
inc
in
jmp
add
mov
cmp
test
iret
mov
inc
(bad)
bound
test
adc
adc
ror
add
add
mov
mov
ror
adc
mov
inc
nop
push
ror
xor
inc
xor
sbb
or
ret
fdiv
mov
add
jl
add
jg
arpl
fs
rol
cmp
push
inc
stos
jp
adc
aam
inc
rcl
ret
add
call
xchg
loopne
inc
pop
ret
jno
cmp
pop
push
adc
jno
inc
inc
shl
popa
adc
push
add
jo
push
add
dec
(bad)
inc
add
pusha
sbb
mov
push
jnp
aam
arpl
add
rcl
jmp
push
pop
adc
xor
je
adc
pop
push
push
add
pop
sub
or
push
arpl
lea
add
enter
scas
add
shl
mov
adc
or
mov
cmp
lods
mov
push
call
add
push
les
xchg
mov
cmp
clc
xor
jnp
shl
push
fld
lds
pushf
lea
or
enter
and
xor
test
cmp
scas
mov
rol
add
xor
sub
rcl
and
(bad)
loopne
and
sub
push
jne
retf
add
mov
fisttp
and
test
mov
in
mov
xchg
not
or
jne
push
xor
pusha
pop
mov
xchg
add
fwait
cs
(bad)
lock
shl
pop
hlt
mov
test
pop
or
sub
add
test
fcomp
push
fs
cmovs
inc
mov
and
dec
jle
add
call
fwait
pop
call
jb
inc
(bad)
je
add
jmp
push
clc
pop
clc
pop
push
gs
lock
cmp
enter
std
clc
dec
add
and
adc
inc
pushf
out
repnz
call
mov
push
test
pusha
dec
add
mul
add
add
sub
add
and
lods
push
mov
add
cmp
cmp
and
or
shl
inc
inc
pusha
push
add
add
add
jmp
dec
call
test
dec
pop
loope
push
push
rcr
or
rol
push
lods
sbb
mov
and
xor
add
add
dec
inc
mov
jge
loope
pusha
mov
add
mov
push
xor
push
inc
add
loopne
dec
add
jne
jne
pop
cmp
sub
push
enter
adc
add
pusha
push
and
sbb
call
dec
inc
ret
jne
mov
add
(bad)
lea
add
mov
jne
xchg
inc
sub
test
jno
loopne
and
sbb
sbb
push
dec
inc
sbb
jmp
add
jne
push
inc
add
inc
cmp
call
test
add
cmp
push
call
cmp
adc
jmp
push
jge
push
cmp
jmp
xor
popa
rol
mov
call
push
mov
ja
or
dec
test
add
rol
pop
pusha
xor
fcmove
mov
dec
add
sbb
add
push
xchg
jo
repz
inc
add
jnp
jmp
add
pusha
add
sbb
dec
adc
lea
xor
rol
jb
push
dec
lar
push
or
call
push
les
(bad)
sbb
add
or
test
loop
mov
add
xor
call
popa
add
mov
adc
inc
jno
sbb
inc
loop
dec
mov
mov
mov
and
les
and
dec
mov
and
rol
xchg
add
inc
pop
sub
lahf
inc
pop
push
inc
add
push
add
ror
call
and
(bad)
mov
add
in
dec
fmul
xor
jge
mov
add
scas
aas
jmp
shr
out
sub
or
rol
je
pop
enter
ins
ror
jo
lea
call
nop
sti
sub
and
and
cmp
pop
push
sbb
add
pop
ins
xchg
adc
add
dec
add
ror
or
jmp
pop
inc
pop
dec
pop
or
sbb
sbb
xlat
popf
nop
ins
aad
inc
loopne
int3
cmp
lahf
ret
adc
dec
jmp
mov
lea
int
xor
jo
push
in
fld
out
mov
add
cwde
lods
rcr
or
cmp
add
and
loope
xor
outs
(bad)
mov
mov
pop
mov
add
push
adc
xchg
adc
inc
mov
sub
sub
sub
mov
jnp
call
fmul
jge
mov
add
jne
fs
ins
lods
push
dec
in
pop
dec
ret
cmp
popf
mov
add
lods
lahf
daa
xchg
cwde
cmp
jne
shr
or
add
lea
jmp
add
inc
sub
inc
push
into
add
push
test
mov
xor
outs
mov
shr
add
lea
test
add
test
add
and
popf
push
add
sub
add
test
outs
pop
mov
cmovnp
add
loope
xor
imul
ret
jno
and
cmp
add
inc
mov
add
rcr
or
push
dec
call
and
ror
xor
out
add
add
dec
or
call
dec
add
add
test
dec
add
inc
jmp
shl
add
sub
jmp
inc
movs
push
inc
adc
sbb
retf
push
shl
mov
dec
mov
add
inc
sbb
add
cmp
add
mov
jne
and
adc
add
push
add
add
inc
push
and
call
rcr
rcl
push
aam
out
jmp
cmp
punpckhbw
push
outs
dec
push
add
mov
mov
sbb
dec
jmp
int3
add
xchg
inc
(bad)
jl
(bad)
loopne
push
xor
mov
sub
add
hlt
cmp
mov
add
sub
add
add
add
add
and
push
jbe
aaa
add
add
inc
aas
mov
mov
xor
or
jae
mov
pop
int3
arpl
adc
push
push
jmp
push
xor
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
int3
int3
rcl
xor
push
fbld
fsub
xchg
mov
popa
push
adc
je
mov
sub
or
mov
cs
addr16
das
push
mov
inc
(bad)
leave
pop
pop
in
cmp
jp
xchg
mov
stos
sbb
push
add
es
loop
adc
pop
je
jo
push
and
jmp
in
outs
aam
adc
mov
mov
mov
lods
or
jg
xchg
in
dec
xchg
push
add
mov
mov
push
pop
mov
cmps
xchg
into
fidivr
sbb
cdq
sub
and
pop
test
lods
xchg
mov
repnz
inc
push
ins
call
jmp
or
das
dec
mov
popf
jecxz
jmp
push
rcr
mov
lods
fdivr
xchg
mov
cli
icebp
jno
inc
icebp
add
cli
sbb
sub
xor
shr
pop
sbb
out
aas
and
mov
mov
(bad)
fwait
sti
xchg
les
adc
or
fiadd
mov
retf
fidiv
fs
adc
inc
pusha
hlt
and
outs
jle
mov
mov
leave
icebp
sub
(bad)
(bad)
and
xor
lea
jb
loopne
dec
or
xlat
ins
pop
(bad)
cmp
mov
adc
mov
call
ins
inc
adc
ss
mov
fdivr
fs
gs
(bad)
repnz
out
mov
mov
push
fisttp
out
loope
adc
xor
ffree
and
add
mov
mov
mov
mov
jg
push
jae
jecxz
cmp
xchg
call
pushf
scas
hlt
xlat
sub
mov
out
das
sub
ins
dec
xchg
mov
nop
(bad)
xchg
int3
test
push
in
out
ret
push
sar
sbb
sub
mov
and
mov
iretw
xor
sub
jmp
jmp
add
fbstp
jae
adc
data16
in
push
loopne
mov
mov
xchg
jge
mov
mov
sbb
fild
fwait
leave
jmp
mov
sbb
and
int
inc
addr16
xor
pop
sbb
dec
adc
loop
fs
mov
pop
cmp
pop
loopne
std
ds
adc
mov
outs
fs
pop
call
cwde
js
fcmovnu
pusha
xor
xchg
(bad)
dec
fsubr
test
jp
sub
cmc
xor
imul
(bad)
add
pop
mov
adc
loopne
mov
dec
mov
xor
cmps
and
inc
adc
sub
ss
mov
pop
gs
inc
mov
fsubr
cmp
(bad)
push
lock
call
sub
mov
and
adc
aas
addr16
inc
xchg
popa
rol
inc
lods
fisttp
pop
retf
cmps
sub
rcl
mov
cmp
popa
loop
xchg
into
pop
jp
call
and
test
shl
jecxz
mov
in
(bad)
std
jns
fisub
xchg
adc
out
test
xor
movs
and
sub
popa
xchg
sbb
(bad)
xor
push
iret
loop
psubb
enter
push
aaa
cwde
inc
sub
adc
push
les
cli
cmps
sti
ret
mov
clc
dec
lock
mov
leave
adc
stos
xchg
out
loope
inc
dec
mov
sub
push
sbb
dec
pop
push
scas
or
add
sub
in
xor
int
and
or
shl
sbb
add
mov
cmp
dec
ficom
lock
inc
shl
fild
push
aad
retf
inc
lds
dec
mov
mov
pop
adc
inc
sbb
jecxz
dec
push
ds
clc
dec
pushf
mov
sub
or
sub
loopne
xor
jnp
fidivr
add
mov
lds
add
repnz
and
xor
push
push
cli
jmp
rol
rcl
xor
bound
je
leave
xor
mov
mov
lods
out
adc
add
dec
retf
test
test
push
sbb
les
pop
test
and
jne
(bad)
adc
outs
jl
xchg
hlt
cmp
ret
int
es
shr
lods
sub
and
jle
fldenv
nop
aam
xchg
ss
jnp
adc
push
imul
pop
test
inc
shl
mov
lds
loopne
jecxz
cmp
movs
jl
mov
jae
sti
mov
(bad)
adc
scas
outs
pop
iret
pop
xor
rcl
sbb
cmp
aas
fiadd
inc
mov
imul
shl
inc
xor
push
sub
imul
mov
aas
cwde
rol
mov
aam
dec
pop
pop
mov
scas
lods
mov
cs
sbb
inc
xchg
adc
pop
dec
mov
mov
in
into
rol
add
sti
rep
mov
(bad)
out
sub
sub
mov
inc
xlat
xchg
nop
mov
jno
push
les
fistp
xchg
xor
fisttp
pop
mov
dec
imul
mov
push
icebp
inc
inc
mov
mov
test
pop
(bad)
mov
jg
clc
mov
aad
cmp
xor
inc
imul
lahf
adc
(bad)
push
aad
(bad)
retf
xor
cwde
enter
or
sahf
cmps
cdq
out
mov
push
cwde
cmp
add
test
lds
std
sbb
test
xchg
movs
inc
mov
lds
cmp
sbb
mov
pop
inc
xchg
call
pop
xchg
lock
sar
pop
out
jg
pop
lock
inc
sbb
push
(bad)
fdivr
xchg
sub
das
push
mov
mov
push
iret
and
popa
jmp
sub
and
add
imul
or
sub
sbb
jo
xchg
pushf
xchg
and
addr16
ret
ins
mov
or
into
inc
dec
mov
add
inc
test
pop
push
mov
mov
sub
add
ret
stc
mov
xchg
addr16
cmp
out
or
add
xlat
mov
push
xor
in
in
xor
jmp
pop
pop
sar
inc
pushf
or
dec
xlat
cmc
sbb
xchg
dec
sbb
dec
mov
daa
lock
popf
bound
and
cmp
add
mov
mov
addr16
call
scas
test
rcr
jmp
fdiv
jle
cmp
sub
cli
clc
pop
xchg
test
cmp
ins
sti
jne
pop
mov
or
mov
nop
pop
xchg
sbb
mov
sbb
fist
hlt
sub
jne
jbe
fld
fld
mov
fbld
clc
std
fcomp
sbb
add
cdq
(bad)
test
popa
gs
mov
dec
push
leave
inc
cmp
push
mov
fstp
rcr
.byte
.byte
