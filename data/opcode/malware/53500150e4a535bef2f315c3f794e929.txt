jg
repz
inc
add
add
jns
add
inc
nop
sbb
or
push
je
or
ins
push
add
add
iret
repz
push
ins
jo
inc
(bad)
(bad)
jnp
adc
cwde
push
pop
push
dec
bound
arpl
cwde
add
mov
dec
call
dec
dec
dec
test
dec
dec
je
ins
push
mov
dec
dec
pop
mov
test
sbb
push
mov
nop
in
(bad)
lock
push
mov
push
sub
mov
(bad)
mov
neg
sub
ret
push
push
inc
ja
xor
test
je
push
xor
adc
ret
jae
fs
add
jne
std
dec
add
xor
mov
inc
dec
mov
jb
mov
adc
jae
mov
bound
rcl
arpl
sar
lea
adc
movs
ret
push
push
mov
xchg
(bad)
push
jg
jecxz
cmp
(bad)
mov
jmp
(bad)
dec
and
mov
sti
sbb
xor
sbb
cwde
dec
adc
inc
add
pop
(bad)
mov
mov
hlt
add
ret
cmp
jge
jcxz
out
(bad)
(bad)
in
cmp
je
push
mov
mov
ja
lea
lea
std
rep
jmp
xor
cmp
or
je
and
cmp
(bad)
out
scas
sar
mov
mov
sub
rep
cld
dec
sar
js
adc
js
imul
xor
pop
pop
ret
test
jae
or
add
adc
cmp
jbe
cmp
jne
sti
push
or
add
jmp
xor
mov
jmp
cmp
xor
mov
imul
jmp
mov
add
dec
mov
mov
in
sti
jmp
jo
fisttp
push
outs
cmp
jb
sti
jg
ret
jbe
mov
mov
inc
inc
adc
cmc
shl
icebp
inc
lods
pop
pop
into
test
std
aas
js
(bad)
add
mov
mov
sub
mov
test
jne
push
add
push
(bad)
std
fnstsw
aas
or
mov
mov
mov
imul
adc
mov
je
cmp
dec
jmp
mov
mov
cmp
jb
cmp
ja
sub
push
sbb
mov
shl
data16
mov
rep
pop
ds
fldcw
out
je
push
jecxz
ins
and
rcr
mov
aaa
add
nop
sub
outs
test
push
(bad)
lock
ja
in
pop
cld
xor
hlt
cmps
retf
in
pop
mov
adc
push
clc
mov
ret
stos
mov
xor
push
shr
dec
test
pop
cmp
mov
sub
pop
add
pop
fadd
jmp
cmp
je
pop
mov
mov
sbb
or
mov
mov
push
sbb
jne
jo
test
jne
iret
lods
mov
aas
add
sub
adc
mov
fdivr
(bad)
mov
xchg
jmp
cmp
test
je
movzx
push
add
repnz
mov
imul
mov
mov
push
mov
je
cld
pop
sahf
mov
cmp
out
push
mov
or
cmp
mov
sbb
sub
add
js
pop
jmp
pop
les
ficom
push
cli
jl
jmp
xor
lea
mov
mov
imul
adc
test
mov
pop
pop
pop
ret
fadd
fmul
or
push
outs
cmovs
jle
adc
mov
out
mov
call
daa
sbb
out
jbe
push
es
push
and
pop
pop
out
sbb
fsubr
cmp
movs
add
cli
in
sti
mov
scas
push
sbb
inc
pop
push
pusha
outs
lds
cmp
data16
ins
mov
loopne
scas
jg
sbb
push
push
arpl
sbb
hlt
push
cmp
je
or
jne
movsx
inc
inc
jmp
add
shl
ins
ss
js
mov
inc
pop
pop
adc
loop
aas
fldenv
pop
mov
inc
add
add
mov
adc
cmp
sbb
cld
pop
cmp
mov
mov
test
push
sar
dec
xor
and
mov
cmp
cli
out
push
je
dec
inc
xor
sub
adc
sbb
js
add
lahf
out
inc
jbe
cmp
pop
stos
mov
cmc
enter
jbe
jmp
adc
adc
push
jl
mov
pusha
lds
push
dec
add
push
xor
ret
push
inc
jnp
sar
sub
push
scas
inc
adc
mov
push
out
aaa
in
or
mov
loopne
cmp
fs
loopne
or
dec
mov
add
mov
mov
dec
aam
pop
dec
aad
out
mov
inc
add
sbb
push
or
push
(bad)
shl
fnstenv
retf
mov
or
retfw
pusha
add
out
outs
sbb
add
(bad)
or
ds
adc
ins
fimul
adc
cmp
jae
mov
pop
add
pop
jge
pop
out
(bad)
sar
pop
mov
or
xor
push
push
jb
add
jle
dec
mov
aad
mov
ficom
rcr
call
es
paddd
sbb
mov
mov
mov
(bad)
dec
ret
cmp
jle
mov
inc
mov
(bad)
cld
rcr
rol
mov
mov
mov
mov
sbb
jmp
fs
test
pop
out
stos
add
add
retf
cmp
add
adc
mov
pop
nop
mov
neg
pusha
and
add
out
and
add
sbb
inc
loope
pop
dec
rcr
outs
adc
ja
add
mov
mov
lock
rep
add
ret
mov
add
mov
cmp
jne
cmp
adc
jl
dec
ror
out
cli
fidivr
sahf
rol
pop
push
or
(bad)
mov
mov
sub
add
je
mov
jle
rol
sbb
sbb
push
adc
cmp
push
mov
sub
cdq
nop
fs
jo
jo
mov
stc
les
movs
cmp
pop
adc
adc
imul
add
sti
fwait
popa
lock
pop
cmp
adc
(bad)
add
jns
sub
rol
call
jl
ins
adc
ud0
je
inc
clc
in
mov
(bad)
mov
push
sbb
add
xor
or
dec
and
jg
xor
pop
aad
inc
or
push
dec
add
or
xchg
adc
xlat
xchg
jle
jo
pop
and
rcl
(bad)
push
out
cli
popf
sbb
inc
add
scas
add
pop
mov
push
inc
mov
xchg
mov
iret
mov
daa
stc
mov
call
mov
xor
clc
or
push
push
mov
adc
loopne
ds
add
out
mov
in
ss
lock
add
jg
(bad)
jmp
(bad)
cld
mov
mov
jo
pop
cmp
cwde
(bad)
mov
pop
lea
cmp
sub
mov
dec
push
or
mov
and
pop
popa
mov
(bad)
mov
adc
sub
fld
fistp
imul
pop
fidiv
jge
xor
inc
xchg
out
mov
mov
cli
jg
push
leave
mov
push
cmp
je
cmp
mov
in
or
scas
xor
add
rcr
shr
pop
pop
pop
sub
and
sub
or
or
addr16
fxch
(bad)
in
add
or
xor
cmp
push
dec
mov
icebp
call
repnz
jne
not
pop
add
pop
pop
xor
push
lods
cld
outs
add
in
cld
ret
xor
sbb
test
or
mov
push
cld
add
cmp
adc
push
pop
(bad)
push
outs
mov
adc
jge
popf
inc
icebp
adc
popa
add
cmp
je
cmp
jbe
frstor
fcmove
or
add
or
into
nop
xor
cld
add
(bad)
sbb
dec
ret
adc
cli
lds
push
sbb
sub
clc
mov
mov
jmp
retf
mov
mov
cmps
xor
es
adc
push
cmp
jmp
pop
or
inc
cld
cmp
and
dec
jne
inc
pop
out
xchg
adc
clc
cld
mov
jae
add
dec
jmp
inc
fisttp
inc
pushf
sbb
shr
jne
js
ror
jne
mov
cmp
sbb
pop
lea
jmp
xchg
rol
ja
sub
(bad)
cld
les
imul
mov
sub
ja
add
push
shr
mov
mov
cmp
jne
dec
je
clc
lahf
or
dec
add
add
jmp
shr
cmp
jmp
adc
add
and
and
in
fwait
cmps
cmp
cmp
jne
or
and
fiadd
add
jmp
shr
aam
sti
(bad)
or
pop
pusha
adc
shr
shr
sbb
popf
stos
push
cdq
mov
mov
mov
push
inc
pop
add
add
movs
mov
xor
test
pop
das
scas
adc
pop
adc
mov
and
mov
(bad)
fbstp
cmps
rcpps
or
das
pushf
es
jl
cmp
jge
sub
push
jl
push
adc
iret
hlt
test
mov
shr
in
fldpi
jmp
jne
mov
pop
pop
cmps
ret
outs
ror
xchg
stc
(bad)
seto
dec
jl
adc
push
mov
jle
sub
cmps
jle
inc
sub
add
lea
jl
rol
dec
mov
lds
push
ss
adc
inc
jbe
aas
(bad)
(bad)
jle
dec
cld
push
pushf
dec
js
mov
inc
js
adc
in
xlat
jno
mov
cmp
repz
pop
je
adc
add
(bad)
in
pop
jb
js
or
cmp
push
sbb
dec
lods
and
pop
int3
jne
sub
ret
loopne
and
shl
cld
(bad)
sbb
outs
xchg
popa
jmp
xor
add
jle
cmp
jl
icebp
idiv
(bad)
add
lods
in
add
jmp
push
push
das
adc
(bad)
push
pop
xor
push
sub
(bad)
in
ja
cmp
imul
addr16
adc
push
mov
or
inc
add
pop
and
hlt
jle
cmp
(bad)
adc
jmp
mov
stos
adc
lea
in
(bad)
pusha
or
or
dec
push
das
int3
or
pop
push
mov
and
add
out
add
aam
sbb
fs
or
fwait
push
js
mov
add
retf
or
fnstsw
into
add
test
fcomp
xor
hlt
pop
ins
cmp
(bad)
imul
pop
push
push
and
jb
inc
xor
sbb
pop
add
data16
sbb
or
mov
out
dec
or
mov
sub
adc
sti
add
push
jmp
dec
cmp
and
mov
and
ret
cmp
push
cmp
rol
push
mov
or
xchg
out
xchg
(bad)
dec
cmp
inc
test
fcmovnbe
jmp
rcl
add
push
cld
jne
out
and
cmps
cmps
jmp
popf
adc
or
mov
adc
dec
or
cmp
push
lock
leave
bound
iret
fstp
stos
daa
hlt
sub
mov
je
push
jl
push
mov
add
mov
into
clc
loope
dec
adc
pushf
dec
jg
mov
iret
mov
(bad)
dec
mov
mov
and
je
cmp
je
mov
jmp
or
je
cmp
mov
add
lods
je
stos
bound
jg
call
or
adc
jmp
push
mov
mov
cs
add
dec
cs
adc
enter
cmp
pop
jmp
cmp
jbe
stos
loopne
dec
sub
out
loopne
sub
adc
stc
add
mov
cmc
xchg
mov
ds
pop
js
cmp
xchg
push
lea
sub
inc
and
pop
mov
pop
sti
(bad)
addr16
loopne
or
adc
jl
stos
xor
sub
fimul
enter
pop
in
jmp
adc
retf
jmp
test
pusha
fcomp
and
(bad)
icebp
jmp
inc
xchg
pop
daa
lock
in
push
inc
lahf
and
push
aad
cmp
cmp
ror
sub
sub
cmp
jnp
add
xor
push
jo
push
popa
add
call
push
pop
rcl
dec
enter
xor
or
jmp
and
inc
aaa
push
and
mov
lea
outs
cld
out
js
add
dec
clc
push
push
add
sar
add
add
lods
imul
out
or
lods
mov
cmp
je
imul
or
adc
js
add
fst
cmp
or
movs
jge
leave
xchg
ret
and
inc
ins
lea
sar
pop
and
call
add
je
aas
in
loop
sub
inc
sbb
jmp
aas
cs
jae
jmp
push
push
xor
add
mov
arpl
jb
js
ds
add
hlt
dec
jne
outs
ins
pop
ror
sbb
xchg
or
adc
not
mov
mov
in
cs
dec
in
push
popa
jge
mov
xchg
push
out
push
sbb
jmp
enter
sub
xor
xchg
pop
adc
jp
push
sub
std
adc
les
movs
jo
xor
add
es
ja
loopne
mov
sti
add
add
inc
jmp
icebp
loop
mov
add
add
je
cmp
aaa
leave
cdq
or
and
daa
js
enter
add
push
(bad)
inc
pop
nop
std
sbb
xchg
xchg
push
loopne
scas
mov
dec
push
add
inc
in
dec
out
inc
xchg
hlt
mov
cmps
jbe
in
ins
push
fdiv
aaa
pop
dec
les
es
and
adc
mov
sub
jb
or
outs
pop
(bad)
dec
sbb
mov
jl
cmp
adc
sub
mov
dec
push
frstor
jmp
mov
fstp
push
out
adc
aaa
clc
into
cli
mul
mov
sbb
ror
test
mov
ret
push
shr
in
(bad)
mov
or
jne
or
je
or
je
push
jns
xchg
or
fisub
add
imul
adc
(bad)
cmp
shl
rcl
rcl
rcl
cmp
nop
mov
jmp
add
inc
loop
pop
test
sub
aaa
ret
div
pop
repz
add
iret
neg
sti
add
icebp
mov
mov
stc
clc
dec
fist
xchg
cli
bnd
push
add
jg
aas
dec
cmp
or
inc
setb
jmp
setl
call
or
or
xchg
std
jnp
jle
add
fiadd
inc
sbb
fimul
mov
cli
jne
cmp
(bad)
push
sub
(bad)
jb
sub
mov
and
cmp
jl
(bad)
and
jge
fsub
lds
or
mov
inc
repz
dec
sbb
add
mov
mov
ror
and
pushf
add
rol
or
stc
cld
lds
dec
fdivr
inc
in
aam
mov
mov
push
ficomp
mov
or
push
mov
sub
jmp
je
(bad)
icebp
popf
ins
jg
add
stos
sbb
inc
jmp
cmp
mov
mov
inc
and
sbb
mov
cld
xchg
cmp
push
retf
ins
cmp
ret
or
push
stc
mov
jb
out
aam
fidiv
loopne
out
sub
jmp
sbb
jmp
(bad)
loopne
daa
push
cmp
jo
inc
jmp
jl
cmp
sbb
pop
pop
sub
jbe
jmp
pop
add
jg
mov
cdq
int
adc
movs
ror
add
and
mov
mov
sub
rcr
inc
push
sub
jae
cmps
shl
xor
mov
push
pop
rol
xor
lock
stos
int3
add
adc
int3
lods
push
jl
cs
jg
sub
adc
push
dec
push
xor
nop
or
and
cmps
pop
add
or
int
aaa
cmp
je
dec
add
xchg
ror
lods
pop
out
test
mov
mov
sbb
and
pop
(bad)
rol
or
sbb
and
jl
das
fsub
dec
arpl
pop
loopne
and
inc
push
dec
clc
fs
pop
add
add
test
jg
mov
adc
aam
cmp
rol
cld
push
and
scas
sbb
rcr
jmp
push
push
push
call
add
in
push
add
mov
mov
or
in
xor
lods
fisttp
ins
call
cdq
idiv
cmp
je
xor
xchg
or
xor
jge
jge
mov
mov
ret
bound
cmc
or
add
mov
sub
add
xor
cmp
pop
dec
stos
pop
cdq
pusha
imul
adc
retf
in
jge
or
jae
mov
push
in
test
push
pusha
int
inc
push
sub
adc
into
stos
sbb
push
dec
rcr
pushf
jbe
add
add
add
lock
fisttp
lods
mov
or
imul
test
add
cmps
sub
add
cli
or
add
xchg
dec
jo
and
inc
hlt
int
dec
mov
fimul
adc
ds
fucomip
add
sub
push
dec
jne
enter
adc
mov
push
sub
in
inc
jg
dec
clc
jne
mov
xor
push
cmp
pop
rol
mov
mov
inc
push
jecxz
ret
push
lods
adc
dec
jp
push
push
or
pop
lods
mov
jmp
pop
jo
mov
cmps
les
sub
das
inc
sub
sbb
jle
fmul
ror
push
in
push
jne
xchg
pop
call
push
or
mov
push
sbb
push
and
fistp
or
inc
daa
ins
fwait
rol
les
(bad)
pushf
jge
movs
mov
aad
push
xor
xor
into
and
sahf
push
sbb
jmp
or
pop
scas
push
cmps
mov
cld
push
jmp
sbb
adc
xchg
jmp
sbb
mov
dec
inc
cmp
ja
mov
inc
jmp
add
pop
add
enter
in
(bad)
fcmovb
jmp
or
mov
adc
sbb
and
imul
xor
add
jmp
pusha
add
dec
aaa
jae
mov
rol
dec
or
mov
jne
jb
or
dec
mov
and
sbb
or
add
cmp
lea
ret
xor
test
pop
adc
repnz
mov
mov
pop
dec
fidivr
ror
adc
push
push
and
mov
ss
cld
inc
inc
push
and
mov
lfs
cmp
fmul
imul
or
mov
int
stos
cli
pop
and
adc
in
or
add
ret
in
jmp
and
pop
pop
push
push
stos
loope
adc
pop
das
adc
xchg
cmp
fsub
mov
xor
inc
mov
mov
jne
xor
or
cmp
bnd
js
sub
mov
jo
nop
in
add
cmps
xor
adc
mov
adc
loope
add
jle
ins
inc
out
inc
mov
inc
das
cmps
outs
(bad)
(bad)
jmp
je
outs
outs
jae
inc
outs
jo
jb
addr16
sub
xor
add
xor
shr
xor
inc
jbe
outs
addr16
bound
dec
push
repz
inc
and
sbb
mov
and
cmp
movs
pop
sbb
aaa
and
call
mov
adc
nop
aam
or
lahf
out
and
dec
sub
cmps
shl
push
mov
shl
test
js
and
ret
mov
gs
and
sub
imul
shl
mov
jl
addr16
sub
or
jge
adc
push
js
sbb
dec
dec
popa
leave
mov
pop
jb
mov
lds
jb
outs
int3
jl
and
in
loopne
(bad)
daa
daa
daa
daa
aam
int3
enter
daa
(bad)
sar
add
nop
cwde
xchg
mov
adc
ds
aas
cmp
push
stc
push
and
push
add
push
add
leave
leave
sub
leave
leave
leave
leave
jl
je
leave
leave
leave
leave
ins
push
leave
leave
pop
pop
push
push
leave
leave
leave
leave
dec
dec
inc
inc
leave
leave
leave
leave
cmp
xor
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
add
hlt
lock
repnz
rol
aam
jb
jb
enter
daa
daa
daa
int
mov
lods
add
lds
push
cld
xor
ret
test
neg
lods
or
jne
pop
cmp
xchg
jl
or
dec
popa
jns
adc
les
inc
dec
movups
imul
mov
jb
shl
push
sbb
outs
adc
outs
das
fst
lock
jb
xor
inc
adc
mov
retf
cmp
jne
mov
xchg
and
inc
xchg
stos
fcom
push
sub
xor
inc
fadd
or
test
add
pop
xor
adc
test
lods
sbb
hlt
hlt
push
push
add
scas
push
mov
pop
jo
jmp
outs
push
ret
push
mov
add
stc
push
push
sti
jle
rcl
push
push
push
pop
mov
sahf
mov
mov
les
lods
je
or
jecxz
js
popf
push
sub
and
fsub
lea
push
fcomp
and
push
(bad)
jp
call
lods
ficom
or
cdq
out
pop
not
fst
cmp
adc
or
mov
push
jmp
mov
or
cld
jmp
addr16
loope
push
daa
dec
dec
sub
(bad)
repnz
fld
cmp
or
xor
push
sbb
call
(bad)
loopne
(bad)
mov
daa
ss
push
push
dec
lock
out
scas
sub
test
lods
xor
add
xchg
sub
and
gs
ja
adc
imul
gs
xor
dec
dec
outs
popa
fs
jg
cmp
pop
cmps
in
outs
adc
lea
lock
mov
cld
add
icebp
sbb
pop
pop
imul
mov
inc
push
adc
push
xor
fidivr
stos
sbb
jns
sub
xor
push
add
ret
add
lock
sbb
xlat
adc
sbb
cmps
call
sub
push
ret
mov
test
aam
xor
pop
clc
or
or
sbb
dec
outs
fs
nop
or
outs
fs
inc
add
fsubr
outs
arpl
fs
jae
push
inc
js
push
push
xor
clc
sub
cmp
mov
jno
lds
sbb
cmp
pop
popa
aad
pop
adc
out
push
adc
and
adc
ret
lea
xor
jns
cmp
cmp
ror
ret
div
pop
sub
shl
pop
rcr
mov
js
pop
shl
dec
clc
inc
mov
mov
mov
cmp
or
add
repz
mov
jl
inc
xor
ins
mov
pop
add
out
inc
mov
es
sub
pop
popf
add
shl
rep
fisttp
scas
jno
mov
jge
(bad)
enter
rcr
jbe
add
loopne
out
cmc
push
or
je
or
test
jmp
inc
or
jmp
and
fidiv
cwde
sub
fnstsw
pop
add
adc
jmp
and
push
add
outs
sub
pop
(bad)
clc
retf
xchg
movs
push
scas
sar
dec
add
jmp
dec
test
jb
fiadd
sub
inc
add
je
pop
dec
pop
hlt
add
shl
clc
mov
(bad)
movzx
add
mov
jbe
cli
mov
dec
jne
mov
mov
mov
rol
xor
or
lock
dec
test
mov
xor
sub
test
inc
hlt
dec
movs
(bad)
lahf
inc
stos
push
adc
push
add
into
mov
(bad)
lock
and
inc
pop
repz
int3
test
cmp
dec
jnp
retf
inc
fsubr
push
xor
pop
icebp
mov
push
cmp
push
adc
fiadd
(bad)
lock
hlt
jmp
sbb
sbb
data16
jne
jecxz
je
and
and
movs
mov
sub
pop
ds
fcmovb
push
int3
rol
xor
cmp
cmp
mov
lods
add
and
adc
or
push
mov
cmp
(bad)
jnp
dec
or
in
fdiv
xchg
lods
mov
adc
add
and
in
push
inc
cmp
(bad)
ins
xchg
or
push
push
scas
dec
cld
push
push
pop
jl
hlt
ror
icebp
hlt
sub
or
inc
adc
jb
inc
push
dec
aam
push
push
adc
jb
add
push
push
push
aam
ja
out
pushf
push
lea
or
add
adc
mov
out
addr16
mov
xor
lea
mov
or
div
jge
jae
xor
xor
add
aas
or
add
xor
mov
push
inc
adc
pop
dec
xor
and
dec
enter
loope
mov
sub
add
loopne
aam
add
js
daa
nop
lock
inc
or
jp
add
sub
inc
sbb
jnp
pop
pop
sbb
inc
sub
push
adc
or
push
sbb
test
mov
daa
adc
rcr
push
sub
mov
pminsw
aaa
clc
or
mov
push
add
cld
xchg
aas
aam
mov
aam
push
add
inc
or
add
ds
inc
clc
mov
mov
cmp
and
or
add
lods
lahf
sub
add
adc
mov
push
pop
clc
in
push
mov
(bad)
test
jbe
clc
add
shr
cs
(bad)
sar
ins
inc
popa
add
call
push
xor
jg
mov
mov
or
mov
xchg
or
sub
push
aam
dec
aaa
leave
and
inc
(bad)
cmp
or
inc
test
push
out
jg
sbb
je
jbe
rol
(bad)
ret
daa
ror
pop
je
out
and
repz
jecxz
push
jbe
cmp
shl
push
adc
aaa
and
sub
mov
jmp
push
sbb
xor
mov
inc
dec
and
inc
xor
inc
inc
stos
ret
paddb
pop
hlt
add
call
or
aaa
and
das
add
in
adc
inc
dec
aad
add
mov
mov
mov
dec
mov
pop
inc
mov
sub
loopne
push
push
pushf
daa
lahf
cmc
add
mov
int
lock
lds
inc
and
pop
inc
test
(bad)
leave
pop
std
iret
les
or
inc
ins
xor
cs
mov
dec
ds
jl
es
mov
xor
por
fsub
mov
push
lds
lods
daa
sub
das
rcl
cdq
les
in
xor
push
fwait
inc
shr
adc
push
loopne
adc
mov
push
inc
add
inc
add
add
xor
dec
inc
mov
and
loop
cwde
add
cwde
mov
cmp
push
into
sub
mov
lea
or
or
inc
dec
jne
inc
mov
or
cmps
stc
push
shr
imul
and
addr16
dec
repnz
inc
mov
inc
js
pop
xchg
je
inc
jg
mov
loop
xor
es
mov
push
mov
inc
js
inc
pop
(bad)
gs
inc
add
cmp
xchg
jb
iret
nop
inc
and
fcomp
frstor
mov
inc
cmp
push
or
adc
ds
or
push
mov
icebp
outs
push
push
inc
fbstp
push
(bad)
cmp
and
scas
das
jne
ret
dec
outs
ror
sub
push
add
jmp
dec
loop
push
ins
mov
adc
inc
sub
sbb
and
push
jb
inc
inc
mov
(bad)
mov
and
inc
mov
stos
fst
push
in
shl
adc
test
or
dec
pop
aam
push
leave
add
imul
pop
jb
dec
sub
je
pop
rol
(bad)
fwait
outs
cmps
and
cs
leave
sub
jne
test
je
sbb
add
push
push
inc
ja
dec
repnz
dec
xor
xchg
adc
out
je
les
push
mov
xor
(bad)
popa
ja
inc
xchg
(bad)
mov
sti
add
dec
scas
mov
push
add
ds
stc
cmp
sbb
mov
in
stc
addr16
cwde
sbb
xchg
retf
enter
movs
iret
jo
pushf
pop
inc
test
js
pop
mov
sbb
scas
xor
mov
mov
mov
cwde
les
nop
pop
lds
lahf
enter
pushf
jb
in
rcr
movs
aam
arpl
adc
fdivr
inc
mov
pop
mov
loope
loop
in
enter
in
mov
int3
out
xchg
aam
fmul
and
sbb
loopne
loopne
lahf
in
fsub
cmp
(bad)
call
fsub
hlt
lock
cmc
hlt
ins
xchg
dec
ja
jg
clc
cld
aas
sub
jb
add
fild
add
xchg
or
sbb
and
sbb
adc
enter
or
sbb
pop
and
xor
jb
and
sub
out
dec
je
add
pop
in
pusha
nop
nop
pop
xchg
dec
popf
add
cmp
jne
nop
arpl
mov
nop
inc
push
cmp
and
inc
push
cmp
sbb
adc
cmp
nop
or
add
sbb
enter
lock
enter
int3
enter
sbb
mov
jb
movs
mov
pushf
cwde
xchg
mov
pusha
enter
dec
dec
and
adc
dec
loope
pop
adc
push
cmp
push
jmp
repnz
pop
xlat
cli
push
sub
push
push
movs
fldenv
dec
test
nop
retf
mov
push
les
test
in
pusha
cld
in
xchg
add
push
sbb
sub
xor
xchg
jo
je
retf
push
js
jl
push
sbb
adc
clc
or
je
cmp
inc
sub
pop
and
cmps
ja
or
cs
ins
cs
test
lods
sti
mov
outs
outs
ins
push
outs
popa
jo
push
xor
scas
fcos
and
je
imul
je
pusha
pop
push
pop
aaa
das
fwait
push
add
add
ds
rol
mov
fs
gs
outs
jb
add
ins
pop
sub
aas
push
sbb
lea
pop
sub
add
dec
mov
push
sbb
cmp
or
push
push
adc
xchg
xchg
and
fs
jb
add
adc
jmp
sbb
add
(bad)
sbb
div
addr16
mov
and
loopne
mov
pop
push
in
sub
fst
outs
push
mov
pop
pop
add
jo
(bad)
mov
mov
mov
mov
push
push
mov
cdq
sbb
mov
aas
pop
or
mov
sbb
or
das
mov
popf
mov
lea
sub
and
ins
jmp
xor
retf
test
mov
fsubr
in
ss
test
adc
int3
enter
pop
rol
les
std
adc
xor
mov
lock
jo
pop
lea
in
sti
mov
sub
rcl
adc
in
(bad)
mov
jge
cmp
adc
and
xor
sbb
mov
jnp
jmp
retf
push
mov
add
fild
das
(bad)
inc
rcl
jmp
jbe
mov
les
add
jmp
pusha
jmp
jmp
sub
nop
cmp
bound
inc
retf
neg
jmp
xchg
addr16
xor
and
mov
jno
or
dec
push
enter
pop
sbb
aam
xlat
ins
mov
stos
out
sub
fdivr
cli
jbe
into
outs
data16
popa
(bad)
pop
dec
xor
stos
adc
sbb
outs
outs
ja
pop
inc
jne
outs
je
cmps
sub
ja
aaa
(bad)
push
arpl
push
xor
sub
xor
aaa
xor
xor
cmp
nop
inc
shl
inc
push
leave
adc
out
stc
aaa
ss
aaa
xor
xor
aaa
aaa
xor
aaa
xor
push
or
cmp
mov
jns
push
xor
xor
push
inc
ret
xor
shl
jl
jmp
in
pop
push
lahf
ins
adc
inc
cld
sbb
loopne
sub
add
movs
ret
add
adc
mov
mov
shr
jmp
push
push
aam
sbb
aas
xchg
scas
cmp
push
lock
and
pop
xchg
jns
adc
push
jae
or
inc
popf
cmp
sub
je
push
outs
test
mov
mov
test
je
call
das
and
retf
dec
jae
mov
bound
sbb
add
jo
mov
mov
std
or
inc
add
out
jne
sub
adc
clc
pop
jb
add
loopne
add
cld
push
ret
mov
xchg
nop
pop
hlt
inc
sub
je
adc
test
dec
jle
xor
dec
sbb
cmp
out
jne
or
pop
and
push
and
cmp
inc
inc
dec
dec
dec
xchg
push
pushf
push
retf
imul
mov
push
cmp
je
jmp
(bad)
cli
or
add
inc
and
mov
shl
push
push
push
inc
clc
push
cmp
cmps
mov
pop
or
test
pusha
enter
mov
imul
add
inc
ror
pop
test
jae
pop
inc
outs
clc
pop
lods
sub
push
ror
dec
inc
(bad)
ja
jb
in
inc
dec
push
jns
dec
adc
pop
or
dec
mov
pop
sbb
pop
jmp
add
outs
add
mul
adc
cmp
je
call
sbb
in
or
pop
mov
and
mov
movs
dec
fadd
sbb
dec
jp
ss
movs
call
push
daa
sub
hlt
imul
movhps
push
test
push
hlt
or
aas
pusha
or
pop
in
inc
retf
push
add
mov
mov
call
adc
gs
ror
or
call
add
dec
xor
pop
and
lds
push
retf
push
pop
into
add
jmp
or
cmps
cmove
inc
mov
mov
mov
or
push
add
and
aaa
xchg
xchg
sahf
push
pop
pop
mov
or
mov
pop
mov
lahf
pop
add
push
adc
bound
ins
aas
lods
inc
mov
or
push
push
push
das
mov
or
das
loope
ret
inc
js
arpl
sbb
imul
jae
test
xchg
nop
pop
mov
pop
int
mov
(bad)
leave
push
dec
mov
or
cmp
push
test
and
ss
or
jg
inc
push
push
inc
push
inc
pop
jo
ins
outs
mov
pop
ins
and
lea
inc
outs
ins
xor
add
shl
ins
das
pop
ret
cmp
dec
sub
cmp
push
ss
cmc
int3
ret
aaa
pop
inc
jo
inc
popa
je
push
push
rcr
daa
or
fsub
icebp
call
fwait
aas
adc
push
push
push
in
cwde
cs
cmc
push
popa
adc
sub
inc
xchg
fwait
inc
hlt
mov
adc
in
pop
or
fld
adc
jmp
pop
dec
push
dec
cmp
lods
movs
xor
inc
inc
mov
cmp
pop
in
add
add
pop
mov
imul
cmp
sub
add
push
ret
fs
icebp
xchg
xor
mov
cdq
mov
sbb
cwde
xchg
adc
stc
cld
xchg
adc
cmp
push
pop
or
pop
outs
adc
es
ins
inc
ins
inc
imul
les
(bad)
mov
in
pushf
xchg
push
xchg
imul
sub
test
push
push
push
add
hlt
xchg
pop
arpl
push
pop
stc
(bad)
sti
mov
push
hlt
cmp
sti
add
fs
fnsave
cwde
mov
and
sbb
jo
in
scas
or
pop
out
or
mov
pusha
div
dec
or
mov
sub
mov
int
and
inc
cmp
js
sbb
dec
mov
add
mov
jmp
int
in
ja
or
in
xchg
or
addr16
ret
adc
xor
(bad)
mov
xchg
inc
pop
ins
sub
or
adc
test
lds
xchg
xchg
addr16
inc
fnstsw
xchg
push
xchg
dec
jmp
popa
or
into
pop
add
or
jmp
(bad)
mov
(bad)
push
retf
xor
fsubr
mov
jne
push
sub
enter
pushf
mov
push
enter
push
cmp
push
bound
or
test
pop
push
add
or
nop
inc
bound
sbb
push
dec
sub
inc
addr16
ins
inc
imul
outs
push
jne
arpl
inc
xchg
add
add
in
sub
or
and
mov
sti
and
xor
lods
push
aas
add
pushf
test
or
pop
push
je
and
inc
dec
ins
aad
shl
jnp
pop
pop
push
test
xchg
int3
arpl
mov
jge
pop
push
sbb
test
outs
jo
pop
arpl
ins
sbb
jl
sub
add
xchg
push
aas
aaa
ja
inc
pop
inc
(bad)
pop
dec
mov
fnsave
(bad)
mov
adc
jmp
inc
cmp
jne
mov
add
stos
jno
jbe
int3
cmps
inc
into
add
fmul
popf
jmp
icebp
mov
mov
les
push
adc
(bad)
push
mov
push
call
enter
or
pusha
push
call
fcomp
push
sbb
mov
test
arpl
mov
pop
neg
mov
shr
mov
mov
xchg
les
mov
cmc
test
loop
dec
data16
push
mov
pop
cwde
arpl
mov
test
push
pop
xchg
nop
lea
clc
sub
cmp
sub
mov
retf
and
aaa
adc
sub
pop
loope
mov
inc
cmps
int
sub
xchg
sar
jne
sub
rol
in
jo
int
push
push
sbb
inc
adc
xchg
cmps
cmp
nop
pop
or
cdq
adc
add
adc
mov
repnz
call
je
inc
push
pop
cmp
je
pop
sbb
loop
jne
sub
inc
sub
add
pop
je
imul
mov
cmp
push
jnp
mov
hlt
pop
dec
push
xor
nop
mov
jmp
mov
push
sbb
rol
and
addr16
lds
dec
push
stc
push
aad
mov
stos
add
add
ror
loopne
and
inc
inc
jne
outs
jae
popa
jb
mov
dec
mov
add
test
in
mov
pop
jmp
ret
not
and
addr16
lds
(bad)
pop
adc
fadd
mul
push
fisttp
lahf
sub
pusha
ins
mov
in
xor
xor
bswap
(bad)
aaa
hlt
mov
imul
mov
lock
mov
add
push
inc
imul
adc
or
imul
adc
cmp
cmp
dec
adc
sar
daa
inc
arpl
and
(bad)
sub
jne
in
ins
call
ins
jo
outs
shl
call
xor
outs
push
int3
push
push
add
push
push
ret
sbb
add
and
cmp
aaa
sub
jns
push
ss
adc
add
mov
mov
push
push
dec
add
xlat
sbb
dec
aam
add
je
enter
or
or
push
lods
dec
pop
(bad)
lahf
pop
loopne
mov
pop
dec
int
int
xchg
int
pause
retf
add
inc
imul
nop
dec
imul
jo
and
xchg
stc
sbb
xchg
adc
cmp
cmp
or
pop
aaa
sub
pop
dec
js
xchg
fwait
add
push
xor
mov
mov
jg
lock
adc
adc
mov
mov
dec
pushf
pop
add
mov
jbe
sub
or
fwait
xchg
or
(bad)
or
inc
daa
daa
mov
cmp
in
hlt
retf
arpl
loopne
dec
and
push
sub
dec
dec
call
mov
add
movs
loopne
add
push
or
lock
add
in
lock
inc
or
mov
adc
in
ret
ret
xchg
adc
movs
imul
rcl
int3
xlat
pand
lock
jl
bound
mov
sbb
dec
mov
pop
ja
daa
daa
aaa
daa
enter
dec
sbb
in
xlat
sub
(bad)
int3
mov
pop
push
test
aam
in
shr
adc
in
mov
js
mov
ror
pop
cmp
xchg
mov
mov
daa
inc
sar
lods
lods
add
and
add
daa
test
movs
movs
or
fdiv
out
xchg
or
out
mov
cs
mov
leave
leave
ror
xchg
xchg
xchg
xor
repnz
add
nop
loopne
enter
mov
fcmove
add
nop
mov
cmp
mov
xor
call
mov
cmp
inc
xchg
pop
pop
jle
mov
lods
pop
fsubr
test
inc
pop
xchg
or
mov
aas
add
xchg
jge
push
outs
ins
inc
imul
or
sub
mov
xchg
outs
jb
loopne
jno
xchg
outs
dec
push
in
pop
cwde
fs
or
ror
movq
and
mov
pushf
mov
pushf
jmp
xor
lock
repnz
call
dec
xchg
cmp
movs
xor
mov
call
lea
inc
mov
adc
push
lea
push
inc
add
pop
popf
in
lods
jge
inc
clc
mov
lods
sub
fcmovu
sub
push
int3
lods
rol
push
dec
sub
mov
rol
loopne
mov
inc
cmp
jae
mov
imul
pop
mov
or
or
pslld
cmp
pop
adc
call
mov
imul
adc
adc
add
test
mov
sar
pusha
(bad)
add
pop
test
xchg
ja
mov
pop
fiadd
add
in
dec
call
or
ret
loop
fsub
pop
xchg
push
ret
inc
push
add
pop
idiv
and
mov
mov
fimul
sbb
test
adc
jno
enter
jne
sub
out
xchg
sbb
fcmovbe
lock
push
dec
jl
add
push
jo
clc
or
jbe
push
movs
cmps
jo
into
or
adc
push
inc
ins
ins
iret
add
pushf
enter
sbb
loopne
add
mov
jne
xchg
dec
jne
loop
loop
clc
adc
xchg
dec
mov
pop
xor
sbb
dec
xor
gs
cmp
(bad)
movs
adc
xchg
adc
or
in
pop
or
cmps
lahf
call
or
ja
loope
push
shl
sub
shr
sahf
ds
adc
lods
arpl
jbe
movs
and
in
dec
mov
xor
jbe
es
fild
inc
sbb
fmul
xchg
add
fdiv
fidiv
inc
dec
or
and
shl
cmp
pop
sbb
sbb
push
mov
fcom
ja
cmp
and
inc
fsubr
mov
sub
daa
ss
ret
cmp
or
es
lods
or
iret
or
clc
sbb
nop
daa
xchg
js
pusha
mov
inc
push
push
mov
das
shl
cmp
dec
mov
mov
popa
clc
sbb
mov
mov
ror
lock
inc
adc
shl
jp
imul
xchg
adc
mov
cmp
mov
aaa
cmps
fsubr
ret
jp
pusha
bound
lds
mov
add
pusha
inc
call
dec
sar
mov
cmp
lock
sbb
sub
cwde
(bad)
jnp
add
sub
and
and
call
in
lods
jp
or
(bad)
pop
lods
sub
sbb
mov
push
lods
push
or
lahf
jp
mov
inc
and
cmp
mov
lock
aas
and
imul
sub
mov
outs
mov
jnp
cs
inc
call
outs
imul
mov
mov
add
add
in
push
nop
adc
in
in
add
stos
jo
or
push
ja
mov
xchg
xor
mov
pop
xchg
push
sub
shr
sub
test
outs
push
dec
mov
test
mov
stos
add
or
sbb
mov
les
dec
mov
dec
sub
je
jmp
jmp
bnd
sbb
jbe
mov
mov
iret
pop
sbb
add
mov
in
or
jmp
shrd
neg
sahf
cmc
sub
movs
jl
in
test
nop
jae
xchg
std
test
cmp
add
sub
and
ret
leave
xchg
outs
jo
call
sub
test
adc
(bad)
mov
lea
xor
pop
fsub
push
daa
inc
sbb
imul
xchg
inc
lods
inc
inc
and
mov
adc
ret
(bad)
rcr
idiv
adc
aad
jmp
cmp
add
(bad)
enter
movzx
jno
mov
sbb
hlt
inc
in
les
sbb
out
out
fdiv
sti
or
xchg
mov
adc
push
mov
rcl
pop
ja
or
idiv
movs
das
mov
cs
push
ja
cmp
sbb
add
mov
ror
movs
hlt
and
clc
jle
or
icebp
test
test
sahf
pop
clc
push
pop
inc
push
or
mov
push
dec
dec
je
jne
lods
fist
in
inc
add
nop
adc
mov
gs
enter
(bad)
jle
outs
loopne
pop
outs
push
popa
cld
cmps
imul
sbb
iret
and
out
ds
and
cs
dec
gs
jne
inc
push
(bad)
ins
je
fs
data16
iret
shl
jbe
mov
ds
(bad)
fld
jmp
or
fstp
mov
cmp
je
fs
sbb
sbb
les
dec
out
shl
xor
gs
outs
jb
pop
inc
outs
outs
outs
arpl
popf
in
add
cwde
jae
push
mov
pop
xor
(bad)
xchg
(bad)
vcvtsd2ss
cwde
fadd
pop
cli
jp
fwait
mov
push
dec
lock
shr
sar
inc
sbb
or
xor
sbb
hlt
add
retf
mov
push
cli
mov
add
stos
or
rep
mov
movs
inc
lods
jecxz
sub
pop
push
ins
enter
mov
mov
xor
mov
cld
push
sub
mov
push
pop
adc
and
push
inc
iret
mov
movs
stos
jo
mov
xor
arpl
cdq
outs
imul
jb
jns
or
jmp
push
and
add
adc
jmp
lods
fs
or
clc
clc
and
ret
and
mov
out
out
popa
jo
outs
sub
or
inc
aaa
test
xor
add
xchg
mov
sar
ret
sbb
popa
mov
lods
adc
pop
call
inc
and
or
fist
xor
inc
xor
push
scas
adc
gs
mov
sbb
xchg
xor
rcr
jne
inc
push
lods
push
nop
(bad)
xor
xchg
xchg
jbe
or
xor
xor
call
(bad)
mov
xchg
sbb
(bad)
xchg
outs
ds
hlt
cli
add
je
pop
xchg
adc
adc
lods
mov
cmp
sbb
adc
ret
int3
(bad)
mov
adc
aad
lods
sbb
in
mov
dec
out
jne
adc
jb
movs
sbb
int3
jmp
js
mov
sbb
dec
jb
jnp
js
and
in
xor
or
mov
(bad)
dec
or
push
mov
cld
xchg
and
sbb
sbb
shl
add
ficom
add
and
mov
mov
loopne
push
out
mov
or
sbb
push
std
cmp
xor
loope
scas
stc
mov
adc
mov
push
lea
push
jno
popa
add
inc
loopne
mov
sbb
sbb
loop
or
in
add
fsub
ror
and
outs
pop
mov
sub
and
pop
mov
xchg
sti
sbb
sub
aam
aaa
and
nop
nop
sbb
jbe
icebp
rol
repz
sbb
adc
or
add
fld
mov
outs
and
inc
add
ss
inc
sub
in
out
aam
icebp
xor
ret
or
leave
and
std
inc
mov
aaa
adc
push
inc
and
push
inc
daa
std
mov
mov
push
mov
sub
int3
repz
dec
sub
mov
(bad)
mov
xor
jmp
pusha
and
lds
xor
iret
(bad)
push
push
stos
test
and
jae
cbw
mov
cld
fs
call
(bad)
test
(bad)
int3
iret
and
or
and
xchg
shl
or
push
inc
inc
inc
pop
add
xchg
ss
or
pop
pop
add
je
jo
dec
add
dec
ds
sub
sbb
jns
icebp
and
cmp
(bad)
stc
out
xchg
je
fucom
add
push
push
dec
dec
imul
addr16
jl
les
push
jl
push
push
cmp
xchg
pop
mov
aam
fidiv
ror
sbb
enter
and
add
aam
mov
je
rcl
push
or
and
ja
mul
mov
sbb
mov
in
movs
movs
ret
push
mov
js
les
cmp
js
inc
push
mov
jmp
sbb
xlat
mov
sub
xchg
inc
inc
js
ja
shl
cld
mov
adc
sbb
or
cld
das
stc
dec
sub
lock
out
rcl
clc
mov
xor
adc
mov
adc
scas
cmp
vmwrite
aas
pop
dec
mov
icebp
call
icebp
push
mov
call
pop
inc
inc
inc
add
das
cmp
cmp
mov
enter
ins
mov
pop
(bad)
jnp
cmc
call
mov
push
cwde
repz
adc
shl
mov
and
test
jl
inc
or
pop
sub
je
mov
add
je
xchg
pop
hlt
dec
jne
mov
jp
jecxz
xchg
push
pop
daa
and
or
test
xor
add
in
mov
hlt
hlt
push
jb
mov
add
loopne
mov
pop
lock
fmul
jg
add
test
aaa
pop
fs
sbb
(bad)
jno
add
pop
jp
push
cwde
or
bound
add
mov
fstsw
sahf
mov
xchg
pop
push
je
test
call
std
test
push
push
clc
aam
push
in
mov
es
mov
mov
ret
jbe
outs
fwait
push
ja
or
and
int
je
cmp
aam
test
cmp
fadd
inc
loopne
hlt
mov
sub
les
push
inc
dec
xor
or
int3
add
fsubr
es
jnp
mov
in
add
pop
iret
call
xor
mov
out
and
sub
dec
clc
push
test
clc
jns
sbb
(bad)
fnstsw
fcmovnu
xor
fnstsw
sahf
jne
rol
mov
add
or
inc
addr16
cmp
push
add
cmc
lea
pop
pop
sub
sahf
add
push
or
imul
and
lock
or
add
ret
pop
push
jne
in
dec
enter
xor
add
pop
shl
in
mov
add
cmp
imul
lock
and
in
mov
dec
dec
mov
or
and
push
add
adc
xchg
ror
dec
mov
scas
outs
cld
lea
add
push
mov
cmp
pop
or
mov
cmps
mov
mov
shl
add
dec
cld
xor
arpl
xor
pop
push
jne
xchg
hlt
sbb
inc
inc
je
push
pop
pusha
test
xor
xchg
add
dec
jmp
int
outs
xchg
aam
mov
jbe
push
mov
sub
jp
arpl
lock
sub
xchg
in
sub
fdiv
mov
pop
push
arpl
xchg
push
or
add
mov
push
add
or
nop
mov
xchg
xchg
jne
xlat
cdq
les
mov
in
ins
push
mov
push
xor
lods
fild
test
dec
test
rcl
push
cmp
test
loopne
inc
adc
gs
pusha
and
mov
add
clc
inc
(bad)
pop
fwait
jge
mov
stos
adc
mov
or
xchg
sub
xor
add
mov
loopne
mov
xor
dec
movs
out
pop
movs
and
mov
mov
shl
push
in
sbb
pushf
mov
inc
cmps
mov
ins
enter
test
pop
or
aaa
and
lahf
aam
push
or
cmp
sbb
call
ror
pushf
mov
push
cwde
mov
push
sti
icebp
jb
push
shl
xchg
xchg
add
pop
add
sbb
fidivr
push
js
int
jecxz
push
es
add
fwait
clc
out
xchg
dec
mov
dec
shr
mov
(bad)
(bad)
(bad)
daa
shl
rol
inc
jb
pop
mov
bound
in
dec
pop
sar
or
sub
pop
jg
adc
outs
sbb
jle
enter
xchg
push
mov
ins
jns
push
push
or
rep
movs
pop
mov
mov
xor
mov
shl
or
inc
dec
jne
mov
data16
pop
dec
sbb
jg
in
push
test
(bad)
sbb
push
scas
icebp
scas
xchg
mov
inc
sbb
pusha
call
into
push
pop
push
push
imul
daa
push
sbb
repz
loopne
outs
pop
inc
mov
imul
adc
inc
movs
sbb
retf
repnz
in
es
xchg
sbb
dec
cmp
add
rcr
push
pop
sub
push
and
jl
cmps
cmp
leave
gs
dec
inc
aam
dec
push
fs
dec
inc
cmp
js
fiadd
cmp
xor
out
push
adc
xor
lock
xor
pop
repnz
inc
xchg
inc
push
and
movs
add
mov
fmul
(bad)
popa
sub
push
sbb
arpl
xchg
inc
sub
sub
dec
sub
and
dec
das
sub
sbb
pop
add
mov
dec
pop
pusha
pushf
push
dec
add
mov
test
cmp
cmp
cmp
aaa
push
(bad)
(bad)
jmp
sub
sub
xor
bound
data16
add
pop
enter
lahf
addr16
ins
adc
or
and
loope
ds
aam
retf
mov
xor
jle
inc
sub
fwait
cmp
sub
mul
sbb
movs
mov
and
inc
sbb
pop
push
dec
popa
and
je
cmp
out
xchg
xchg
or
int3
mov
int3
add
xor
es
(bad)
sub
or
sar
or
mov
cmp
fs
int
dec
enter
inc
rcr
jmp
xor
das
test
loop
sbb
call
rol
fisttp
push
push
mov
lahf
idiv
lds
mov
cmp
cmp
mov
mov
das
rcr
aam
shl
ror
stos
fild
or
jmp
rol
dec
jnp
sbb
sti
pop
or
stos
dec
jne
pop
lahf
out
pop
fcomp
je
xchg
je
pop
sub
cdq
and
movs
sar
or
loopne
mov
jmp
pop
or
pop
mov
daa
or
inc
dec
mov
sub
gs
movs
cmp
les
xchg
cmp
dec
jle
mov
js
cs
add
sub
(bad)
fisubr
out
mov
sar
imul
in
cdq
shl
or
pop
sbb
in
sbb
mov
mov
adc
dec
pop
imul
dec
sbb
aad
std
add
mov
xchg
outs
jmp
push
inc
out
out
adc
out
pop
and
add
fstp
xlat
scas
mov
pop
cmp
xor
push
cs
xchg
push
dec
and
aaa
dec
sahf
xlat
js
inc
cmps
mov
and
clc
rcl
mov
outs
mov
aas
mov
ins
push
popa
mov
hlt
in
lods
pop
pop
mov
ud2
mov
or
and
push
pop
imul
lahf
push
imul
jo
imul
inc
xlat
or
inc
dec
sub
jl
add
daa
lock
pop
add
les
nop
fist
pop
or
test
and
or
leave
data16
jmp
enter
jge
add
sub
jl
inc
mov
sar
inc
ret
mov
cmp
jb
cmp
jbe
popa
add
aad
loopne
add
aam
ficomp
jne
mov
ins
push
add
add
pop
js
lock
shl
clc
addr16
mov
add
ins
and
fmul
mov
stos
movs
addr16
dec
cmp
pop
and
stos
adc
daa
js
inc
xor
sahf
cmps
sti
nop
sbb
es
push
jae
xor
and
loopne
cmp
adc
loope
hlt
les
xchg
inc
sahf
dec
sbb
inc
ins
xor
dec
pop
int3
mov
stc
cmp
mov
cmp
(bad)
and
inc
sbb
sbb
mov
in
xchg
mov
loope
and
xchg
jo
aam
cwde
fistp
or
pop
icebp
or
mov
dec
ins
add
dec
add
sbb
fs
test
xlat
movs
inc
outs
sti
into
shl
clc
pop
inc
push
mov
cdq
dec
cwde
mov
outs
dec
cmp
into
add
push
int
outs
or
or
xlat
dec
xchg
inc
(bad)
aam
xchg
stos
adc
adc
lea
xchg
adc
cdq
pop
mov
add
push
enter
outs
ror
pusha
out
pop
ret
outs
pop
and
push
in
cs
pop
ins
mov
lods
pop
pop
enter
jo
push
jb
nop
pop
push
je
fs
cs
push
js
pop
jb
dec
dec
dec
or
dec
pop
sbb
sub
add
loope
dec
rcl
lock
scas
fisub
jne
imul
jbe
lods
lea
pop
movs
pusha
inc
mov
movs
mov
sbb
and
inc
movs
add
mov
fcomp
jne
and
pop
push
inc
xchg
sbb
lods
mov
jecxz
mov
(bad)
lock
push
mov
fld
mov
loop
in
cs
call
sbb
cdq
dec
call
pop
and
push
fsubrp
mul
push
xchg
int3
adc
daa
call
ret
mov
inc
sub
push
lods
inc
mov
adc
lahf
in
(bad)
jne
push
arpl
jo
add
xor
sub
and
pop
rol
rol
(bad)
and
scas
test
xor
xor
sbb
out
adc
imul
nop
and
sub
push
mov
lahf
adc
enter
adc
enter
pushf
sbb
and
fstp
inc
es
or
or
or
outs
outs
enter
lods
hlt
std
nop
xchg
or
mov
pushf
cld
std
add
nop
dec
cmps
dec
in
fucomi
call
call
sbb
mov
fcomp
enter
loopne
push
enter
std
fs
ss
in
push
fcmovbe
rcr
int3
aam
jne
or
jmp
jecxz
pop
push
mov
pop
shl
loopne
push
in
sbb
push
xor
lock
rcl
add
push
dec
call
dec
pop
xor
shl
das
mov
xchg
inc
mov
lods
cmp
sub
rol
(bad)
shr
outs
sub
enter
nop
dec
enter
mov
clc
pop
jbe
push
hlt
push
mov
fsubr
test
jae
push
int
inc
lock
leave
call
imul
push
dec
dec
pop
push
sbb
jle
and
rol
lock
rcl
jge
leave
mov
cld
ins
les
mov
das
push
mov
and
or
imul
(bad)
call
je
or
xchg
call
lahf
jne
ficom
mov
sbb
or
mov
repnz
mov
sub
or
sub
lds
jge
mov
outs
pop
ss
jmp
xor
or
rol
adc
lock
mov
sar
lods
dec
jb
pop
sub
or
cmp
imul
test
xchg
inc
dec
js
int
stos
mov
xchg
mov
sbb
retf
mov
mov
int3
xchg
xlat
(bad)
jmp
daa
adc
jp
ins
ins
outs
loop
jmp
and
outs
js
and
sahf
ins
outs
jp
jb
xor
inc
stc
xchg
or
xor
inc
jmp
jo
xor
(bad)
and
push
div
arpl
jae
dec
lock
or
jae
je
mov
test
das
or
mov
push
push
pop
dec
cli
pop
inc
popa
jae
dec
mov
pop
inc
xchg
inc
jne
data16
cwde
clc
push
dec
xor
pop
bound
add
ins
outs
je
and
lods
inc
pop
push
arpl
push
push
inc
push
and
cmp
push
enter
mov
xor
jl
sbb
les
data16
retf
inc
mov
xor
pop
jo
jae
xchg
push
adc
or
lods
pop
test
imul
outs
outs
sbb
das
xor
mov
xor
jno
cs
(bad)
cmp
jl
clc
dec
aaa
inc
movaps
les
test
jne
sub
adc
or
int3
dec
sub
sub
icebp
jb
add
mov
daa
je
inc
jmp
push
xor
add
pop
dec
push
xlat
clc
sbb
add
push
push
fcom
fistp
and
(bad)
int3
pusha
sbb
mov
pop
mov
adc
push
int3
popf
or
pop
aam
xor
hlt
add
sbb
popa
add
shl
and
mov
push
xchg
(bad)
xor
or
sbb
jnp
jmp
xchg
push
xchg
push
xor
js
arpl
loope
inc
or
lods
adc
popa
mov
sbb
fld
arpl
popf
add
cmp
and
inc
lock
(bad)
mov
sbb
mov
adc
repnz
pop
cwde
out
into
inc
sbb
sahf
mov
dec
push
clc
cdq
and
outs
icebp
mov
lahf
add
inc
sahf
ret
scas
imul
cmp
add
sub
movs
mov
icebp
xchg
inc
in
mov
lods
inc
sub
in
retf
mov
pop
cld
sub
std
xchg
daa
lea
sbb
push
pushf
mov
push
popf
daa
adc
(bad)
nop
jb
sbb
add
sbb
dec
add
jmp
rol
fs
pop
cmp
cld
or
rol
lods
enter
xor
or
add
xchg
enter
fs
push
ss
enter
inc
pop
mov
dec
mov
and
ror
test
adc
push
icebp
dec
in
cmp
push
mov
add
scas
adc
mov
movs
push
pop
push
and
push
jo
pop
in
add
mov
ror
cmp
sar
push
ins
xchg
add
(bad)
fld
cdq
sub
sbb
cmp
dec
or
add
mov
adc
jmp
jle
inc
jle
adc
nop
nop
pusha
xor
rol
cwde
pushf
mov
shl
pop
aam
jnp
mov
cld
fld
dec
sub
mov
mov
xor
mov
or
adc
sbb
adc
xor
loope
cmp
cmp
add
ror
push
ss
or
pop
movs
mov
loopne
jb
push
js
cli
clc
push
sub
push
mov
add
cmp
jge
push
nop
sub
daa
jo
in
pop
lock
leave
push
dec
repz
popf
retf
imul
xor
cmps
mov
add
pushf
mov
xchg
xchg
add
mov
lds
nop
das
adc
mov
or
sahf
and
and
cmps
and
cmp
mov
stc
nop
mov
push
pop
mov
test
ja
(bad)
jp
mov
ja
sbb
cli
mov
pusha
dec
jae
mov
pop
ret
pop
movs
cdq
sbb
fs
or
retf
arpl
loopne
jmp
add
loope
mov
movs
test
in
or
sub
in
lods
add
xor
mov
mov
push
inc
push
push
dec
push
push
inc
inc
sub
add
cmp
mov
lock
clc
cmps
adc
mov
shr
and
cld
push
xor
push
mov
jl
test
sub
add
inc
jns
push
mov
add
fdivr
movs
out
ret
sub
aaa
xchg
bound
inc
and
or
mov
push
pop
in
inc
sbb
sub
mov
mov
pop
(bad)
pop
adc
out
push
pop
inc
dec
dec
inc
dec
dec
dec
push
push
inc
sbb
sbb
jmp
mov
mov
outs
or
cwde
int
stc
mov
push
pop
hlt
xor
repz
inc
sbb
out
sar
int3
pushf
inc
inc
js
ss
mov
sti
push
adc
push
in
dec
push
mov
call
pop
test
addr16
out
jl
imul
jno
push
cmp
dec
repz
or
jnp
jp
mov
mov
sub
mov
xor
out
nop
mov
test
dec
cmp
cmps
stc
mov
add
pop
ret
xor
or
mov
and
rcl
sub
adc
cs
je
push
and
xor
push
bound
test
sub
test
xchg
jp
mov
cmp
inc
fsub
or
or
inc
call
cmps
jge
cwde
in
and
ror
cdq
loopne
out
and
mov
fsub
xchg
fdivr
jl
aam
adc
imul
cdq
int3
mov
enter
daa
enter
les
sub
es
sar
and
mov
jmp
mov
mov
ss
lahf
mov
adc
mov
dec
push
fcomip
pushf
lods
mov
or
(bad)
dec
in
mov
jmp
hlt
adc
inc
call
lock
lock
cmp
fisub
lods
add
or
dec
adc
sbb
rol
add
outs
xor
or
push
icebp
xchg
in
jmp
femms
inc
mov
sbb
lods
adc
sub
xchg
mov
ins
mov
pusha
or
pop
dec
push
in
mov
test
mov
jecxz
test
test
cmps
clc
cmp
sbb
in
jnp
or
adc
cmp
inc
push
ret
pop
das
daa
push
inc
push
push
push
dec
push
inc
dec
(bad)
scas
ret
xor
dec
dec
dec
push
cs
bound
add
sub
iret
dec
push
dec
and
pop
inc
dec
push
inc
inc
dec
pop
daa
dec
inc
dec
dec
inc
dec
dec
mov
xchg
inc
or
and
stc
inc
push
push
dec
or
inc
and
lahf
cmps
nop
mov
pop
push
test
sub
shr
lock
rcl
mov
into
pop
add
inc
es
cld
add
mov
push
enter
adc
mov
pop
retfw
int3
enter
enter
fmul
(bad)
or
fnstsw
loope
add
in
inc
xor
test
pop
addr16
aaa
fwait
cmp
cmp
mov
add
inc
ds
jg
(bad)
aas
xor
ss
cmp
cmp
cmp
add
add
add
push
pop
or
or
or
pop
stc
dec
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
add
(bad)
jmp
daa
sub
sub
sub
cs
xor
xor
inc
jns
adc
cld
repz
jmp
out
movs
push
test
jns
out
sub
nop
in
out
sahf
out
jmp
cwde
pushf
dec
out
sahf
in
hlt
xchg
lock
mov
add
mov
mov
or
in
xor
push
add
or
(bad)
cld
aas
push
add
add
dec
add
add
sbb
idiv
jg
add
dec
add
inc
add
pop
add
ja
inc
pop
dec
dec
pop
add
push
push
inc
aas
jbe
repz
add
add
dec
inc
dec
jmp
or
dec
dec
inc
push
aaa
jg
dec
lahf
or
push
pop
jb
popaw
cs
(bad)
jmp
pushf
js
in
aam
adc
xor
add
(bad)
ja
jae
outs
adc
js
or
add
std
nop
add
adc
mov
sub
fmul
add
sbb
in
mov
or
(bad)
(bad)
(bad)
(bad)
mov
aad
out
jno
sahf
add
add
nop
sbb
jo
pop
in
push
pop
ins
jl
(bad)
(bad)
(bad)
call
data16
jp
out
scas
mov
or
and
(bad)
(bad)
and
jl
(bad)
(bad)
(bad)
call
outs
or
shr
pop
and
sub
test
sub
es
(bad)
(bad)
(bad)
(bad)
fdivr
pushf
xor
dec
add
(bad)
fs
mov
sbb
hlt
sbb
daa
cmp
xchg
(bad)
(bad)
jmp
out
pop
mov
push
rcr
movs
push
pop
xchg
or
dec
adc
rol
mov
test
and
xchg
sbb
and
cmp
data16
pop
cmp
push
and
mov
(bad)
(bad)
(bad)
call
mov
ret
cmc
cwde
imul
ds
mov
sub
and
(bad)
(bad)
jmp
push
shl
inc
ret
mov
rcr
addr16
jmp
(bad)
(bad)
push
sub
cmps
test
or
push
shr
and
scas
jl
add
(bad)
(bad)
dec
or
aam
cmp
mov
inc
daa
ja
inc
jne
(bad)
(bad)
(bad)
std
aam
mov
mov
test
cmps
dec
dec
and
pop
sub
and
(bad)
cmp
(bad)
mov
cdq
mov
shl
dec
(bad)
cli
loop
xor
aas
daa
out
retf
xchg
shr
or
(bad)
(bad)
(bad)
jmp
jge
jmp
lock
je
lock
mov
push
(bad)
push
mov
inc
std
and
fdivrp
jmp
pop
pop
or
pop
sub
mov
(bad)
cwde
leave
ret
daa
fdiv
jnp
(bad)
(bad)
dec
mov
sub
arpl
or
inc
div
mov
pop
and
cmp
mov
mov
adc
gs
adc
xor
out
neg
(bad)
(bad)
(bad)
(bad)
mov
(bad)
pop
rcr
push
lods
stos
imul
pop
outs
dec
scas
ja
sar
(bad)
call
in
cmp
sbb
pushf
test
mov
mov
or
lahf
imul
dec
(bad)
(bad)
aas
jle
bound
je
(bad)
xor
or
push
push
xchg
(bad)
(bad)
(bad)
inc
(bad)
jmp
xchg
retf
outs
imul
xchg
adc
push
loope
loopne
iretw
shl
(bad)
clc
(bad)
mov
(bad)
(bad)
inc
jae
lods
add
jo
icebp
aad
cmc
jp
or
mov
daa
mov
movs
nop
push
(bad)
(bad)
(bad)
(bad)
jmp
repz
mov
jmp
into
add
mov
cli
jae
mov
jne
pushf
in
mov
mov
movs
adc
repz
scas
sbb
sub
cmp
fstp
cld
pusha
(bad)
(bad)
(bad)
push
fiadd
sti
sbb
jg
mov
add
sbb
mul
icebp
mov
hlt
sub
(bad)
(bad)
(bad)
call
dec
or
and
lods
dec
das
sahf
arpl
jmp
cmp
adc
pop
or
(bad)
(bad)
(bad)
jmp
dec
das
test
out
stos
inc
jp
mov
cli
fwait
(bad)
popw
push
imul
(bad)
(bad)
dec
sub
ja
push
out
popa
in
neg
cmp
mov
int3
pop
(bad)
mov
(bad)
call
fs
aad
hlt
clc
push
add
cmp
add
mov
enter
call
and
(bad)
(bad)
jmp
sub
xchg
nop
inc
adc
js
jecxz
pop
xchg
aad
(bad)
(bad)
(bad)
jmp
mov
jns
sub
push
push
jne
xchg
jmp
dec
xchg
xchg
(bad)
cmc
cmp
(bad)
(bad)
jmp
mov
xchg
jnp
cmp
dec
es
mov
dec
sbb
adc
(bad)
mov
and
movs
dec
pop
ficom
popa
sub
popa
sbb
inc
jl
mov
data16
cmp
arpl
mov
mov
hlt
not
jge
dec
(bad)
(bad)
(bad)
call
into
lds
fisubr
rcr
hlt
push
or
or
xchg
outs
mov
jmp
les
mov
dec
cmp
xor
ret
fdivrp
jmp
inc
adc
aam
stos
or
mov
shl
iret
std
fstp
sub
in
push
sub
mov
sub
icebp
pushf
ret
(bad)
(bad)
(bad)
push
pop
mov
mov
inc
jecxz
dec
scas
popa
adc
and
(bad)
dec
test
and
dec
addr16
jb
test
jmp
loop
cli
jb
xor
inc
outs
push
or
ret
(bad)
mov
icebp
icebp
mov
ins
mov
lods
ss
mov
in
push
jno
lods
(bad)
(bad)
(bad)
call
jne
or
sub
push
sub
inc
sub
cmp
into
mov
in
(bad)
(bad)
fild
jg
cmp
stos
out
cmp
sbb
add
mov
and
(bad)
jg
jp
call
enter
adc
xchg
cld
cmp
jbe
iret
pusha
or
stos
fcom
inc
adc
push
fnsave
push
clc
push
ja
jmp
fbld
cmp
in
jbe
pushf
cmc
cs
test
sub
sbb
sub
add
jmp
xchg
les
ror
mov
je
scas
repz
inc
(bad)
(bad)
out
out
and
xor
leave
mov
cmps
or
push
cmc
dec
addr16
mov
xor
mov
pop
cmp
push
jge
rol
mov
(bad)
(bad)
inc
add
sub
pop
out
or
int3
out
push
jbe
movs
mov
pushf
dec
loop
inc
pop
add
pop
cmp
jne
mov
adc
xchg
pop
lock
jmp
jle
imul
pop
adc
das
ss
jg
xchg
jmp
sar
sub
loop
scas
push
stc
pop
aam
gs
shr
aam
dec
lahf
jmp
(bad)
push
xlat
fscale
push
xchg
mov
cmp
imul
pop
(bad)
xchg
test
stos
aas
sub
(bad)
mov
idiv
inc
out
jmp
pop
sbb
xor
lea
unpcklps
in
stos
push
in
jle
call
je
cmp
add
jmp
mov
fidiv
pop
and
sub
scas
inc
rcr
push
sahf
sbb
outs
icebp
icebp
(bad)
jmp
scas
inc
(bad)
cmc
dec
dec
repnz
into
repnz
ss
and
fcomip
fild
cwde
mov
stc
jae
fstp
ds
cmp
gs
(bad)
(bad)
cli
and
repz
call
fidivr
sub
(bad)
xchg
shl
js
(bad)
(bad)
jmp
and
test
(bad)
(bad)
pop
and
push
mov
inc
jo
mov
cmp
arpl
(bad)
(bad)
jmp
and
mov
out
adc
jge
mov
shr
sub
(bad)
jmp
iret
mov
mov
and
inc
xor
lahf
cli
inc
jmp
jmp
lock
jo
pop
dec
cli
loop
popa
jo
je
push
mov
mov
add
test
(bad)
(bad)
push
sbb
sub
mov
jnp
scas
sti
jecxz
jle
into
add
jbe
(bad)
jne
mov
popf
inc
(bad)
call
(bad)
(bad)
and
inc
imul
dec
(bad)
(bad)
jg
adc
inc
hlt
in
mov
clc
mov
jns
push
stc
fcomp
(bad)
(bad)
push
jmp
inc
pop
adc
test
xor
mov
(bad)
(bad)
call
jb
and
out
jecxz
rcr
cli
or
scas
repz
fdivp
mov
fistp
(bad)
(bad)
(bad)
inc
cdq
xchg
in
xchg
dec
dec
xlat
iret
mov
jno
or
shl
mov
(bad)
(bad)
jmp
push
and
pop
mov
push
fwait
jmp
sbb
call
sub
int
mov
(bad)
(bad)
push
mov
lock
out
mov
push
or
push
iret
inc
mov
loop
push
lds
pop
dec
ins
hlt
(bad)
push
adc
push
int
ja
push
(bad)
fistp
jge
mov
test
xor
ss
push
mov
jmp
mov
fnstenv
addr16
mov
test
mov
(bad)
(bad)
push
pushf
xlat
mov
(bad)
mov
pushf
jg
mov
sti
push
sbb
mov
dec
mov
mov
outs
fs
cmp
sbb
or
sbb
cli
(bad)
dec
and
fst
call
sahf
jbe
out
mov
add
sbb
clc
fidivr
cmp
push
cmp
into
lods
pop
mov
test
mul
pop
aad
fld
test
(bad)
(bad)
call
dec
adc
loope
xlat
cmps
push
mov
mov
or
fdivr
and
(bad)
(bad)
cli
(bad)
jae
stc
xchg
sbb
mov
sbb
add
xor
adc
in
mov
push
and
(bad)
(bad)
(bad)
clc
enter
pop
addr16
or
mov
outs
cmc
xlat
pushf
in
jmp
(bad)
repz
(bad)
call
push
in
or
stc
add
ror
adc
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
add
lea
out
das
cmp
outs
or
(bad)
(bad)
(bad)
jmp
mov
mov
or
jbe
push
lods
adc
fld
mov
inc
(bad)
dec
lock
add
mov
mov
outs
push
jp
js
cmps
(bad)
push
pop
fild
mov
push
or
jns
cmp
jg
sbb
xchg
mov
inc
ss
xlat
mov
jg
retf
and
add
inc
push
and
push
push
in
pop
ins
sub
ret
pop
(bad)
(bad)
(bad)
jmp
(bad)
jg
retf
out
dec
sbb
add
cmps
cmp
jecxz
ins
fdivr
cdq
call
(bad)
(bad)
(bad)
push
pop
data16
ins
test
ret
cwde
fidiv
(bad)
jmp
aam
ins
cld
ins
je
div
cs
or
(bad)
lahf
mov
pushf
sti
dec
xchg
ret
inc
xor
(bad)
call
repz
cmp
inc
xchg
or
mov
add
jmp
movs
aad
xchg
cmp
sahf
in
in
(bad)
pop
lods
imul
imul
idiv
add
jl
pop
test
push
adc
lods
je
(bad)
std
(bad)
call
inc
sbb
into
adc
mov
mov
in
std
dec
push
daa
jg
scas
jg
jg
dec
push
xlat
lahf
hlt
loope
adc
mov
call
int3
movs
sub
add
xor
mov
dec
jno
test
(bad)
call
ds
out
outs
cmp
aas
sbb
fadd
loopne
pop
dec
jns
cmp
mov
repz
pop
or
push
adc
inc
outs
loop
cmp
jp
pop
out
out
jge
aad
sbb
mul
std
(bad)
(bad)
call
cmp
xor
add
pop
sbb
and
(bad)
cmp
push
call
sti
pop
jne
sar
pop
pushf
dec
or
pop
mov
out
repnz
loopne
call
call
jg
out
sbb
mov
test
clc
in
xor
xor
or
lds
popa
add
(bad)
std
xchg
mov
std
cmp
in
scas
pmuludq
test
push
push
lods
mov
pop
dec
(bad)
fcomip
call
div
jge
fdivr
lock
clc
test
mov
and
dec
pop
(bad)
(bad)
mov
test
(bad)
sbb
inc
nop
cdq
push
or
(bad)
or
xor
and
or
or
xor
retf
push
jne
(bad)
(bad)
dec
pop
cmps
cmps
repz
pushf
pop
jb
mov
inc
shl
dec
cmp
cld
jmp
aas
sti
cmc
mov
xchg
mov
mov
dec
fwait
(bad)
mov
xchg
sub
retf
(bad)
(bad)
(bad)
push
(bad)
jl
pop
and
mov
in
pushf
inc
fisttp
push
pop
push
sbb
and
iret
call
xor
sbb
iret
(bad)
jnp
sub
mov
fcmovnu
je
dec
ret
mov
jno
jp
retf
(bad)
call
call
cmp
pop
(bad)
enter
pop
test
out
sar
lock
jo
(bad)
(bad)
(bad)
fild
sbb
sti
rol
push
or
icebp
int
popf
in
cs
movs
push
fsubr
mov
(bad)
push
xlat
xchg
mov
jbe
cmp
mov
push
icebp
(bad)
(bad)
(bad)
push
loop
(bad)
out
hlt
scas
lds
mov
jbe
aam
(bad)
fdivr
(bad)
(bad)
jmp
repz
pop
lock
mov
call
test
(bad)
call
lods
(bad)
hlt
add
ret
cmp
cmc
jmp
stc
into
(bad)
ins
cld
xlat
iret
mov
(bad)
push
(bad)
test
inc
and
(bad)
fld
aaa
test
adc
(bad)
call
xlat
aas
popa
fst
shl
pushf
sahf
adc
(bad)
(bad)
(bad)
call
add
scas
jno
and
jb
das
or
in
(bad)
aas
retf
scas
pop
lock
cmp
rcl
(bad)
(bad)
cmp
(bad)
dec
pop
jno
cmps
mov
and
and
dec
pop
jo
sbb
dec
jns
jmp
or
jnp
and
mov
(bad)
outs
push
add
mov
push
mov
sbb
(bad)
jmp
outs
push
sbb
js
shl
out
ins
mov
xlat
(bad)
(bad)
(bad)
call
(bad)
jge
mov
sbb
sub
push
aam
add
cmps
mov
jmp
and
(bad)
(bad)
jmp
or
cli
icebp
add
adc
addr16
xor
rcr
cmps
js
(bad)
(bad)
(bad)
fld
pop
gs
cld
pop
imul
xor
shr
or
bound
jne
cdq
xchg
pop
jle
leave
mov
fstp
push
(bad)
(bad)
fcomip
mov
xchg
and
jl
repz
cli
ins
ret
jl
dec
out
out
clc
fbld
in
sub
mov
sar
fistp
mov
(bad)
(bad)
inc
mov
loope
leave
sub
inc
imul
mov
call
jmp
push
inc
daa
mov
adc
dec
pop
jbe
cld
sbb
adc
xchg
pop
adc
push
xchg
fdivr
mov
sub
cmp
add
jno
jl
mov
mov
out
iret
xchg
call
(bad)
fst
and
mov
cmp
mov
mov
xor
xchg
stos
movs
lods
jbe
xchg
inc
(bad)
(bad)
dec
mov
pusha
cmp
or
and
xor
(bad)
(bad)
push
inc
and
ds
popa
jmp
pop
in
push
in
cld
push
test
fistp
dec
shl
sub
xchg
(bad)
(bad)
jg
cmps
outs
sbb
loopne
and
or
cmp
add
adc
cdq
adc
in
cdq
popa
mov
adc
push
test
xor
pushf
and
(bad)
jmp
sub
push
js
loop
movs
mov
movs
test
adc
pop
mov
jmp
shl
aam
cmp
inc
rcl
push
push
push
and
and
(bad)
jmp
imul
or
or
outs
outs
ret
enter
push
fcom
int
pop
fistp
outs
repnz
pop
stc
and
mov
push
xchg
add
inc
clc
cmp
jmp
fnstsw
sub
inc
rcl
add
imul
inc
ins
xchg
adc
movs
cwde
int3
stos
adc
jl
jmp
(bad)
(bad)
dec
adc
arpl
jmp
outs
pushf
mov
test
mov
(bad)
(bad)
(bad)
fisttp
loopne
sti
ss
jo
jae
jg
push
xchg
add
xor
js
dec
cmp
(bad)
(bad)
mov
pusha
push
popa
sub
ret
or
out
push
pop
and
test
(bad)
mov
fdiv
pop
jecxz
out
fdiv
je
sub
sub
xchg
(bad)
(bad)
(bad)
call
outs
mov
pop
xchg
push
test
mov
and
icebp
xor
leave
iret
je
add
(bad)
(bad)
inc
adc
daa
test
popf
or
add
lea
xchg
mov
jp
dec
mov
(bad)
call
loopne
retf
add
rcr
inc
inc
stos
pop
add
jecxz
fnstsw
(bad)
(bad)
(bad)
(bad)
jnp
cdq
aaa
cmp
dec
ror
adc
retf
dec
mov
xchg
(bad)
sahf
aaa
jge
add
std
(bad)
(bad)
jmp
mov
and
mov
mov
cmp
int3
test
and
(bad)
call
jge
mov
ins
vpmuludq
cmp
sub
mov
in
or
mov
cmps
jae
or
jmp
fdiv
repnz
std
(bad)
(bad)
(bad)
(bad)
cli
ret
mov
gs
int3
repz
(bad)
in
(bad)
jae
mov
call
dec
pop
ja
mov
jns
jp
fild
lock
dec
cmp
shl
pop
push
xchg
hlt
lahf
aas
xchg
push
dec
mov
sbb
es
retf
(bad)
cmp
cli
pop
dec
xor
lods
inc
cmps
icebp
lock
pusha
cld
sbb
(bad)
(bad)
(bad)
jle
push
daa
mov
push
mov
jae
data16
pusha
sbb
cmps
sbb
mov
shl
sub
in
push
push
add
lahf
cmc
cmp
cli
aam
test
pop
xor
add
jge
in
std
push
add
cmp
sbb
(bad)
push
cld
fstp
adc
cld
xchg
sbb
inc
add
dec
cmps
pop
pop
(bad)
(bad)
(bad)
(bad)
jmp
or
scas
fimul
push
lahf
shl
cmp
or
pop
mov
(bad)
(bad)
(bad)
call
xor
mov
push
out
and
add
mov
adc
sbb
fisttp
push
cmp
add
cmps
into
not
xor
(bad)
call
pop
sub
pop
lds
lahf
xchg
std
pop
and
ror
mov
pop
movs
ret
or
out
cli
inc
mov
stc
adc
jl
jne
cmp
push
xchg
test
cmc
mov
sbb
sub
rol
repnz
dec
ss
pop
mov
jo
sbb
mov
mov
enter
retf
shl
sub
jp
fld
stos
bound
push
mov
mov
jle
add
adc
push
push
inc
mov
adc
push
shl
or
cwde
and
add
(bad)
(bad)
(bad)
inc
xor
mov
outs
jecxz
mov
sub
xor
mov
mov
jmp
inc
xchg
lahf
shl
into
outs
mov
rcl
mov
sub
fmul
ins
(bad)
out
in
lahf
cmp
(bad)
(bad)
dec
retf
cmp
(bad)
cld
cmc
pushf
std
call
mov
lds
inc
jb
cwde
fcomip
(bad)
(bad)
cli
std
aam
adc
sbb
dec
sub
dec
and
pop
loop
(bad)
jmp
dec
sbb
inc
add
mov
loope
mov
push
sub
inc
push
(bad)
(bad)
(bad)
mov
sub
push
(bad)
cmp
std
xor
mov
bound
and
xchg
dec
mov
sbb
inc
xchg
jno
xor
or
xchg
jbe
push
aaa
xor
(bad)
(bad)
(bad)
call
pusha
ret
loope
cmp
xchg
mov
lods
lods
movs
call
ficom
and
jge
dec
dec
jns
(bad)
lahf
sbb
xchg
fnstenv
inc
(bad)
(bad)
(bad)
push
mov
mov
cmp
inc
(bad)
adc
ins
(bad)
xchg
in
retf
mov
in
lahf
and
(bad)
fcomip
(bad)
sti
mov
pop
sar
sub
cwde
sahf
sbb
imul
pop
cld
xchg
xchg
dec
(bad)
and
add
jp
dec
loop
add
mov
popa
push
mov
ja
(bad)
jg
stos
test
mov
(bad)
aam
aam
scas
dec
xchg
dec
shl
ins
mov
(bad)
(bad)
jmp
mov
(bad)
mov
std
jp
mov
scas
push
xor
push
xlat
repnz
push
or
mov
push
scas
xor
cmp
(bad)
adc
xchg
outs
inc
daa
mov
cmp
or
cmp
(bad)
(bad)
inc
or
jmp
xchg
mov
daa
rol
jae
or
(bad)
jmp
jae
stos
cmps
and
xchg
clc
dec
test
inc
xor
and
xor
(bad)
(bad)
(bad)
jg
ds
xlat
ror
js
in
sbb
inc
cmp
cmc
mov
(bad)
stos
jno
mov
jmp
pop
pop
les
jno
adc
adc
sbb
mov
xor
and
adc
call
in
fild
sub
cmps
pop
sbb
add
and
mov
mov
dec
aad
sub
fisttp
sbb
push
cmp
dec
(bad)
(bad)
inc
sub
or
inc
mov
jl
das
out
mov
es
(bad)
cmp
outs
out
lds
call
push
cwde
add
add
test
leave
call
fdiv
(bad)
and
dec
bound
std
and
pop
lods
(bad)
(bad)
(bad)
jg
mov
in
mov
jno
cmp
cli
(bad)
in
ins
mov
iret
lods
in
sar
(bad)
(bad)
inc
sbb
cld
scas
cs
pusha
xor
adc
je
bound
jno
mov
(bad)
(bad)
jg
mov
mov
or
call
les
or
iret
xor
mov
push
jmp
dec
call
int
mov
mov
mov
(bad)
(bad)
(bad)
in
iret
mov
mov
mov
and
adc
aam
and
cwde
les
das
test
(bad)
(bad)
(bad)
dec
rcr
popa
add
fdiv
dec
inc
in
mov
or
int
test
out
(bad)
(bad)
inc
push
ja
dec
push
inc
ror
xchg
in
jecxz
mov
fsin
hlt
or
mov
inc
(bad)
call
shl
adc
xchg
les
pop
sbb
sub
inc
inc
push
dec
adc
loop
jmp
push
cs
cmc
scas
adc
movs
adc
dec
push
stos
inc
sahf
jg
(bad)
inc
repz
je
movs
je
jae
push
fwait
cmps
leave
out
stc
mov
clc
cmp
out
push
pop
ins
ins
hlt
inc
add
iret
loopne
cmc
and
cmp
add
(bad)
(bad)
inc
sbb
inc
cmc
enter
fadd
cld
or
adc
add
or
mov
lock
sub
add
into
push
pusha
cld
cmp
xor
idiv
ror
xchg
(bad)
(bad)
call
les
ror
lods
cmp
icebp
les
and
je
or
(bad)
fcomip
add
inc
add
jno
das
pop
out
or
ret
jg
cwde
in
push
fdiv
psubd
(bad)
(bad)
mov
sti
scas
jnp
mov
call
fadd
arpl
push
(bad)
int
mov
out
cli
pusha
inc
inc
lock
jno
or
imul
mov
mov
ret
lea
pop
dec
push
dec
out
and
div
xor
or
mov
test
or
jle
push
cmps
in
(bad)
lock
adc
cli
scas
mov
call
(bad)
dec
inc
sub
loop
aaa
sbb
movs
mov
imul
mov
(bad)
(bad)
(bad)
inc
test
test
ja
push
pop
adc
daa
xchg
xor
test
movs
xchg
cmp
pop
lock
int3
mov
add
iret
mov
and
push
cld
dec
pop
rcr
test
call
fistp
cdq
push
(bad)
(bad)
(bad)
jmp
sti
jb
sub
popf
lahf
retf
push
fwait
pop
mov
pop
(bad)
jg
dec
cld
lock
div
cmp
or
clc
or
lds
cmp
call
ss
and
xor
js
cli
pop
inc
and
fst
sbb
(bad)
call
push
add
push
mov
dec
out
iret
arpl
lds
inc
iret
in
xchg
sbb
(bad)
(bad)
(bad)
inc
sub
cmp
mov
and
sub
jnp
movs
pop
jl
push
js
stos
(bad)
(bad)
(bad)
cld
dec
fild
add
jbe
and
mov
mov
cwde
mov
clc
sahf
(bad)
(bad)
(bad)
dec
cmps
sub
xor
or
je
mov
sub
inc
dec
push
pop
nop
dec
cld
ins
jmp
jecxz
lods
cld
adc
ror
add
mov
(bad)
(bad)
(bad)
push
xor
mov
in
sahf
mov
or
(bad)
out
cmps
mov
xchg
cmc
add
cmp
jmp
cmps
cmp
adc
or
mov
test
call
jl
ret
test
push
call
sbb
(bad)
(bad)
inc
(bad)
sar
loopne
aad
jmp
call
add
imul
daa
lock
xor
push
test
pop
mov
(bad)
(bad)
jg
popf
xlat
test
dec
sbb
jno
and
mov
inc
and
cli
push
adc
ret
xchg
dec
daa
inc
rol
and
(bad)
out
scas
(bad)
(bad)
(bad)
dec
or
jge
jmp
jnp
mov
jae
jb
and
out
add
(bad)
dec
divps
mov
adc
adc
push
jle
(bad)
(bad)
(bad)
push
push
xor
mov
(bad)
xchg
jns
bt
inc
push
xchg
adc
xlat
mov
outs
pop
push
ins
xchg
push
dec
cmp
push
leave
out
jnp
stos
cmp
inc
js
(bad)
mov
ss
(bad)
(bad)
call
push
pop
mov
fwait
mov
xchg
addr16
xchg
jg
mov
stos
fs
or
push
inc
(bad)
(bad)
(bad)
call
mov
jge
dec
inc
ds
dec
pop
and
jno
test
adc
in
(bad)
(bad)
(bad)
push
fcom
scas
inc
clc
fisubr
movs
add
loope
mov
pop
(bad)
fsubr
(bad)
(bad)
push
cs
push
in
sbb
mov
lahf
dec
rcl
jge
adc
or
call
jmp
jns
sub
add
mov
and
cdq
es
sub
adc
dec
fisub
rcr
inc
adc
sub
mov
ret
and
(bad)
inc
popa
cmp
je
jge
(bad)
xchg
je
jo
push
pop
sbb
(bad)
dec
xor
movs
ret
rdmsr
inc
cmp
clc
sbb
pop
push
and
nop
add
inc
pop
dec
xlat
(bad)
(bad)
(bad)
js
call
mov
dec
xchg
test
movs
call
or
bound
call
and
dec
push
int3
lds
add
repnz
les
(bad)
fcomip
repnz
xchg
pop
stc
das
out
arpl
sub
push
mov
inc
or
(bad)
(bad)
fistp
popf
sub
sbb
mov
xchg
stc
inc
and
push
push
or
cmps
int3
out
(bad)
(bad)
call
pop
icebp
mov
or
aam
mov
int3
jns
adc
sahf
inc
xor
adc
hlt
jmp
xchg
push
enter
stc
mov
sbb
pop
xor
inc
mov
(bad)
dec
std
sub
(bad)
mov
cmp
(bad)
(bad)
jmp
in
retf
repz
or
retf
(bad)
mov
cmp
(bad)
jnp
icebp
(bad)
(bad)
fisubr
dec
into
and
loope
sar
imul
pushf
or
(bad)
(bad)
(bad)
call
pusha
lods
ja
outs
shr
lods
getsec
mov
adc
cmc
(bad)
int3
push
arpl
mov
(bad)
(bad)
mov
and
popa
pushf
rcr
inc
jmp
push
push
adc
inc
call
out
data16
mov
add
add
(bad)
jg
sbb
retf
push
test
aaa
(bad)
lods
jle
aas
sub
call
inc
neg
scas
mov
pop
clc
sub
(bad)
(bad)
jmp
inc
clc
cdq
sbb
sub
fwait
adc
aam
sahf
dec
add
mov
leave
jp
shr
call
cmp
ror
xchg
inc
mov
push
cmp
(bad)
(bad)
inc
xchg
test
and
out
add
cli
retf
sub
mov
leave
or
cmp
jecxz
stos
(bad)
fbstp
xor
lods
outs
cmp
js
(bad)
mov
and
push
test
xchg
xor
nop
nop
adc
(bad)
(bad)
jmp
pop
sar
jno
xchg
pop
mov
mov
mov
into
(bad)
(bad)
(bad)
push
shl
or
mov
xchg
sbb
pop
dec
pushf
(bad)
aam
xchg
and
hlt
lods
(bad)
(bad)
(bad)
(bad)
jmp
inc
arpl
cld
sub
mov
push
or
pop
sub
dec
mov
cld
(bad)
jg
es
test
fs
adc
(bad)
sub
ds
sbb
(bad)
push
cdq
out
dec
popf
test
inc
jbe
cwde
pop
test
inc
xor
dec
and
ins
jmp
(bad)
(bad)
inc
aaa
cwde
jmp
pop
leave
sub
test
cli
pushf
inc
jg
inc
scas
fadd
push
fistp
fwait
out
(bad)
(bad)
push
clc
sub
ins
outs
push
cdq
arpl
mov
scas
daa
je
paddq
cmps
cdq
jb
cmc
stc
mov
mov
sbb
cmp
inc
call
inc
inc
fcom
sub
sbb
cmp
push
adc
pop
(bad)
(bad)
jmp
fcom
icebp
pop
cwde
test
push
push
or
mov
ds
mov
jmp
pop
sbb
push
in
sub
dec
xor
not
(bad)
(bad)
(bad)
call
ja
das
retf
inc
mov
(bad)
not
push
dec
xor
dec
mov
pop
(bad)
(bad)
(bad)
push
clc
fdivp
add
nop
dec
aas
outs
mov
sbb
mov
cld
dec
sub
mov
push
js
push
fisttp
cmp
jb
outs
fnstenv
jle
test
imul
sahf
out
in
out
lods
test
dec
xor
dec
add
jmp
inc
jecxz
cmps
out
xor
cmp
(bad)
(bad)
jmp
repz
pop
sbb
ret
pop
lahf
outs
inc
sub
ret
push
int3
rcr
into
out
mov
(bad)
(bad)
jmp
or
xor
test
sbb
(bad)
(bad)
call
inc
or
xor
adc
icebp
mov
retf
cmp
jb
jp
arpl
(bad)
(bad)
dec
xor
cmp
pop
adc
mov
loopne
sub
icebp
mul
jae
mov
mov
xor
ja
pop
sub
xor
jl
cmps
mov
(bad)
(bad)
(bad)
inc
jnp
or
mov
hlt
cmps
push
push
inc
adc
add
(bad)
(bad)
out
(bad)
sbb
jmp
or
mov
mov
pushf
hlt
dec
cli
pop
(bad)
(bad)
(bad)
(bad)
jmp
xchg
imul
test
ret
dec
ror
loop
je
and
std
cmc
add
cmp
or
idiv
cmp
je
dec
ret
jo
xor
jmp
cli
call
dec
aad
(bad)
dec
rcl
(bad)
out
or
push
mov
and
fisttp
cld
cmp
je
(bad)
out
iret
push
popa
mov
stos
loopne
sbb
pop
call
jmp
xchg
mov
xchg
mov
adc
into
shl
cmp
mov
(bad)
(bad)
(bad)
inc
sub
iret
les
aas
mov
ins
mov
call
adc
loop
(bad)
push
mov
pop
jp
fstp
popa
arpl
cmp
push
std
(bad)
mov
dec
call
and
icebp
cmp
mov
jnp
xchg
or
cld
sbb
test
inc
call
sar
(bad)
(bad)
(bad)
call
sbb
gs
add
push
or
push
int3
imul
(bad)
push
ja
adc
neg
enter
add
lock
xchg
retf
dec
je
jb
das
jmp
mov
push
pop
aaa
in
repnz
mov
js
mov
mov
fistp
js
mov
pop
js
setnp
(bad)
jmp
cwde
dec
test
imul
ds
ja
adc
pop
(bad)
jg
call
pop
mov
or
fiadd
mov
jecxz
ins
(bad)
(bad)
jg
inc
retf
int
adc
jne
lods
clc
dec
xchg
fst
adc
aaa
push
nop
inc
sar
sahf
clc
fild
lods
push
scas
lock
adc
sub
(bad)
jmp
add
(bad)
push
sti
repnz
add
pop
mov
jecxz
inc
sbb
rcr
(bad)
(bad)
(bad)
jmp
jl
xchg
ror
cmp
repz
adc
js
ret
lea
(bad)
(bad)
(bad)
inc
popf
add
les
ret
test
pusha
sub
test
mov
test
ret
pop
(bad)
(bad)
(bad)
jmp
jl
jg
jge
repz
loop
sub
and
cli
arpl
push
pop
xor
fs
(bad)
jmp
(bad)
imul
int3
jb
xor
mov
pop
jle
and
retf
jbe
add
icebp
(bad)
inc
xor
shr
jge
sub
enter
or
mov
sar
(bad)
lahf
push
xchg
dec
out
push
hlt
(bad)
dec
xor
fidiv
lock
(bad)
(bad)
call
data16
xor
and
or
add
(bad)
(bad)
call
push
jg
inc
test
popf
mov
pop
xor
das
pop
loopne
outs
out
loope
(bad)
out
repnz
(bad)
(bad)
(bad)
ds
shl
pop
daa
inc
inc
and
push
push
cwde
jg
and
mov
ret
std
stc
aam
cli
mov
data16
jmp
push
cmp
dec
in
sub
iret
cmp
loopne
push
sbb
(bad)
lea
push
mov
sar
(bad)
dec
xchg
cmp
mov
(bad)
xor
aad
xchg
stc
fisubr
nop
inc
jne
(bad)
(bad)
out
sbb
jl
lock
outs
cmp
repnz
dec
fnsavew
jmp
fs
das
jae
or
(bad)
push
out
sub
push
cld
cs
inc
test
fadd
fwait
(bad)
(bad)
(bad)
jge
and
and
add
js
popf
mov
int
and
popa
or
(bad)
jg
inc
mov
or
push
mov
jge
pushf
mov
fs
lock
sub
popa
(bad)
inc
(bad)
(bad)
(bad)
mov
ror
and
test
xchg
jle
aam
xor
(bad)
(bad)
(bad)
jmp
(bad)
enter
jmp
cmps
cmp
inc
gs
pushf
push
pop
mov
icebp
(bad)
(bad)
jmp
repnz
scas
push
scas
fisub
mov
pusha
jbe
(bad)
cli
scas
sti
cmp
(bad)
mov
inc
xchg
shr
dec
ins
xor
sub
js
(bad)
(bad)
(bad)
jmp
cmp
repz
push
mov
or
imul
mov
sbb
mov
xor
lds
(bad)
(bad)
(bad)
jmp
fmul
and
push
dec
out
int
stc
sbb
mov
in
rcr
pushf
or
hlt
inc
int3
and
and
movs
inc
lea
int3
cmp
ror
(bad)
jmp
arpl
cmp
cmp
dec
imul
rcl
(bad)
(bad)
(bad)
(bad)
cld
shr
xchg
lods
dec
arpl
aad
mov
dec
pop
sub
jno
mov
(bad)
(bad)
jmp
or
mov
jmp
sar
jne
(bad)
jne
fdivr
call
dec
pop
ins
imul
dec
mov
cmps
cmp
arpl
sahf
(bad)
jae
(bad)
dec
add
mov
adc
neg
(bad)
out
cwde
mov
inc
cmp
cld
xchg
cmpxchg
loopne
dec
push
pusha
adc
and
popf
mov
jmp
inc
jmp
push
cmp
push
(bad)
jo
stos
jg
aas
sbb
xor
push
add
in
adc
out
xchg
mov
jg
test
jmp
pop
jmp
pop
das
jno
mov
sub
jnp
add
fcomp
rcr
popf
sar
(bad)
push
push
popf
(bad)
pop
jne
shr
fwait
mov
retf
mov
je
push
pop
pop
cmps
push
popf
retf
pop
jg
mov
lea
std
jg
ins
shl
push
mov
(bad)
dec
(bad)
jg
push
loopne
mov
stos
aas
cmc
and
pop
sti
ja
add
gs
cld
dec
add
pop
dec
mov
pop
(bad)
(bad)
(bad)
(bad)
jnp
loope
adc
cmp
mov
std
imul
add
(bad)
(bad)
jmp
shl
test
fwait
adc
rcl
mov
mov
imul
jmp
mov
int
or
loop
jge
scas
mov
inc
push
dec
pop
mov
push
pushf
sub
mov
(bad)
dec
pop
test
xor
xchg
mov
xor
test
xchg
in
sub
or
or
into
push
push
int
mov
into
sahf
idiv
call
pusha
cmp
mov
or
jno
pushf
and
dec
jg
(bad)
xchg
inc
jmp
push
xor
add
outs
clc
call
je
mov
cmc
das
(bad)
fucomi
mov
sahf
inc
add
cld
(bad)
(bad)
(bad)
fild
into
movs
pop
(bad)
xchg
pop
call
sub
add
xlat
fbstp
in
or
adc
cmp
sub
fadd
pop
push
sub
adc
pusha
add
inc
adc
push
(bad)
(bad)
jg
inc
test
mov
daa
mov
out
imul
das
popa
sbb
push
(bad)
(bad)
(bad)
(bad)
std
dec
xor
adc
mov
pop
sbb
mov
retf
xchg
mov
aaa
cld
push
dec
or
adc
std
call
pop
cmp
test
push
inc
nop
les
pop
add
inc
enter
jmp
inc
inc
pop
lahf
inc
cli
jp
sahf
sub
push
fnstsw
pop
and
xchg
inc
push
scas
sbb
or
jo
iret
mov
sbb
es
(bad)
(bad)
(bad)
jmp
adc
aas
aam
clc
add
jle
lock
cmps
test
gs
pop
dec
mov
xor
shl
dec
(bad)
movs
push
aad
mov
in
pop
xchg
inc
xchg
mov
ins
or
pop
dec
mov
mov
(bad)
mov
xor
stos
aam
pusha
(bad)
(bad)
(bad)
(bad)
dec
out
inc
repz
(bad)
push
test
push
retf
stos
or
inc
out
clc
sub
sbb
pop
xor
iret
cmp
sub
mov
jmp
int
jecxz
push
adc
in
push
fwait
jbe
(bad)
(bad)
(bad)
mov
lahf
xor
jecxz
sbb
mov
aaa
loop
(bad)
fild
push
add
outs
ja
movs
(bad)
(bad)
(bad)
xlat
push
pop
ja
leave
pop
movs
lods
mov
sub
sub
cli
mov
cmp
mov
jmp
sbb
aad
add
fbstp
pop
popf
xchg
mov
inc
lahf
ds
(bad)
jmp
pop
lods
jo
movs
sbb
mov
sub
push
jno
leave
sub
push
sub
mov
push
or
cmps
(bad)
mov
mov
or
test
(bad)
(bad)
(bad)
sti
pop
pop
xor
mov
adc
imul
fldcw
dec
rol
ret
mov
pop
mov
aaa
hlt
inc
inc
(bad)
push
dec
inc
sbb
mov
push
mov
(bad)
(bad)
jmp
ret
jbe
jns
lods
and
es
mov
and
outs
ins
cmp
(bad)
inc
dec
and
pop
jnp
jne
sbb
push
xlat
adc
cmp
mov
jmp
(bad)
cmp
jmp
in
pop
jle
cdq
fadd
sub
mov
jno
(bad)
(bad)
out
cli
dec
mov
in
mov
ins
pop
int
pop
adc
imul
inc
repnz
call
jno
daa
xchg
dec
add
(bad)
(bad)
jg
xor
pop
ja
dec
and
pop
adc
adc
mov
(bad)
(bad)
(bad)
call
mov
mov
mov
mov
push
dec
scas
inc
jnp
push
inc
push
cmp
(bad)
mov
push
xchg
cwde
ja
adc
stos
jmp
inc
xor
inc
push
gs
sar
ss
in
enter
xor
add
stc
dec
(bad)
movs
push
mov
push
mov
jg
(bad)
cmp
jne
pop
xchg
leave
jbe
bound
rcr
push
jne
pop
jb
xchg
jne
pop
inc
jmp
into
imul
jbe
call
stos
out
addr16
mov
mov
loop
mov
in
(bad)
(bad)
jmp
sub
sub
push
jne
jne
mov
pop
enter
cmps
in
sbb
aam
fstp
(bad)
out
clc
jmp
je
mov
cmp
sub
das
inc
push
stos
movs
xor
cli
(bad)
push
(bad)
pop
arpl
movs
cmps
fwait
jl
jecxz
loope
invd
test
xchg
jg
pushf
adc
sbb
(bad)
call
out
pop
sar
cwde
mov
push
cs
sar
dec
pop
aam
fnstsw
(bad)
jmp
stc
cmps
lods
cmp
sub
hlt
cdq
xchg
aam
test
fwait
jae
out
imul
dec
adc
ins
dec
inc
fdiv
mov
enter
jns
inc
(bad)
(bad)
call
push
popf
in
mov
cmp
sub
mov
(bad)
(bad)
cmp
mov
add
enterw
std
(bad)
pop
or
xchg
pop
xchg
data16
mov
inc
or
xor
pop
xor
shl
mov
bound
imul
inc
and
pop
mov
shl
adc
(bad)
push
(bad)
fsub
les
push
ins
mov
add
(bad)
(bad)
jmp
sub
iret
lods
enter
push
push
or
stos
xchg
mov
mul
mov
test
xchg
pop
cld
mov
dec
movs
push
mov
adc
loope
dec
ins
loopne
sbb
sub
call
shl
mov
dec
sub
sahf
adc
mov
jecxz
out
lods
and
(bad)
inc
movs
push
sub
inc
jbe
int
mov
jns
mov
pop
cdq
scas
xchg
add
loope
sub
inc
(bad)
call
jmp
scas
pop
push
pop
pusha
xor
pop
ins
in
jmp
adc
in
push
aad
xor
fcomip
push
ja
out
mov
les
sbb
cmp
mov
jle
xchg
mov
(bad)
push
cmp
sbb
xor
xor
rol
scas
nop
cmc
push
push
stc
xchg
in
(bad)
(bad)
(bad)
call
xchg
adc
push
jg
sbb
pop
dec
mov
xchg
xor
out
sub
(bad)
(bad)
(bad)
call
jmp
lock
shl
(bad)
or
jmp
rcl
(bad)
(bad)
call
out
xchg
fisttp
ror
jnp
pop
mov
mov
push
mov
(bad)
imul
daa
ror
sbb
test
cli
pop
repnz
out
xchg
stc
iret
pop
dec
rcl
jmp
cmp
lods
(bad)
(bad)
(bad)
(bad)
jg
les
fs
cmovnp
sbb
adc
jne
xor
xchg
jp
gs
(bad)
mov
(bad)
(bad)
push
loope
iret
mov
imul
in
imul
push
lea
loopne
(bad)
(bad)
call
(bad)
cs
adc
push
gs
fdiv
push
inc
and
(bad)
dec
dec
push
cli
push
add
call
popf
cmp
into
popa
popf
mov
jmp
xor
mov
push
sub
(bad)
jl
shr
mov
cld
stos
mov
xchg
dec
push
cmp
pop
mov
test
loopne
aaa
fidiv
fbstp
popf
movs
dec
(bad)
movs
mov
cmp
inc
inc
adc
ror
pop
jle
outs
xchg
imul
in
ins
pop
(bad)
(bad)
(bad)
(bad)
cld
pusha
xlat
jp
sbb
test
sar
dec
jecxz
jle
mov
sbb
sbb
or
pop
fnstsw
jae
(bad)
(bad)
call
repz
mov
adc
cld
stos
or
mov
lock
cld
(bad)
inc
pop
rcl
sub
test
sub
xlat
cmp
int3
(bad)
jns
pop
(bad)
fsub
lock
xchg
push
or
sub
xchg
and
das
(bad)
(bad)
(bad)
call
mov
test
in
imul
mov
cld
retf
in
fldenv
(bad)
(bad)
(bad)
jmp
push
or
add
mov
adc
jecxz
add
mov
mov
outs
(bad)
sbb
(bad)
jp
scas
sub
lahf
sahf
mov
int3
jge
mov
xor
add
dec
adc
push
inc
(bad)
(bad)
jg
xchg
es
fiadd
sub
fistp
fwait
je
inc
pop
(bad)
pop
(bad)
test
xchg
dec
ins
(bad)
(bad)
(bad)
inc
adc
fs
fstp
test
imul
adc
test
or
push
mov
in
pop
and
xchg
cdq
les
ret
xchg
hlt
pop
jne
scas
pop
ins
sub
cmc
mov
jg
inc
test
adc
and
leave
fbld
adc
(bad)
ss
mov
push
and
push
pop
ins
mov
movs
mov
add
and
sar
jmp
inc
dec
imul
outs
xor
les
inc
sbb
js
inc
cmp
inc
push
push
adc
jmp
ror
(bad)
jmp
scas
and
mov
and
pop
ds
ins
enter
xlat
rol
(bad)
(bad)
mov
cli
mov
js
jg
or
movs
out
jb
test
test
cmp
push
(bad)
call
pop
dec
inc
aam
adc
push
(bad)
and
ror
stos
movs
adc
call
push
pop
add
sbb
mov
cmp
cli
mov
(bad)
(bad)
(bad)
mov
imul
jns
pop
jnp
rol
xor
aas
mov
push
dec
(bad)
outs
(bad)
(bad)
(bad)
call
jae
out
jl
enter
fs
outs
and
inc
mov
mov
cld
loop
mov
lods
push
or
in
push
(bad)
push
sar
(bad)
push
mov
clc
pushf
inc
push
adc
mov
xor
adc
sbb
scas
(bad)
(bad)
(bad)
inc
scas
mov
mov
test
and
jae
push
and
pop
loopne
cmps
and
aaa
push
pop
and
rcl
mov
push
test
jno
sbb
mov
pop
push
inc
arpl
jmp
pop
xor
mov
xchg
(bad)
(bad)
dec
in
rcr
movs
cmps
call
xchg
sbb
jne
test
xchg
push
lds
cmp
jns
loope
(bad)
fild
sahf
pop
int3
push
dec
(bad)
bound
push
imul
cli
jns
add
cmp
clc
(bad)
push
ja
pop
lods
adc
sub
mov
nop
dec
dec
push
xchg
pop
je
and
(bad)
and
stc
jns
mov
add
dec
ss
leave
out
push
jmp
mov
push
mov
adc
fwait
adc
xchg
int
stos
lds
ror
ss
dec
iret
or
pop
in
loope
(bad)
(bad)
call
arpl
(bad)
mov
cmp
in
add
scas
test
push
loopne
jecxz
jmp
cmp
les
jae
pop
mov
ins
add
(bad)
in
ret
(bad)
push
mov
sbb
lock
movs
mov
or
pop
push
pop
pop
dec
mov
jbe
sbb
add
int3
push
push
out
jne
push
jb
(bad)
(bad)
(bad)
(bad)
mov
enter
clc
mov
(bad)
jmp
(bad)
cmp
fild
dec
add
xchg
cdq
enter
dec
inc
mov
leave
mov
cli
push
adc
movs
int
dec
pop
and
(bad)
(bad)
(bad)
push
cmp
inc
xchg
xlat
enter
loopne
aad
rol
or
(bad)
sar
fwait
ss
sub
inc
(bad)
mov
pop
test
lock
xlat
jmp
xor
mov
cmp
mov
cdq
cmc
jle
rol
cdq
lods
imul
pop
pop
cmovns
inc
add
shr
cmc
mov
ja
out
cli
mov
cwde
cli
(bad)
(bad)
(bad)
push
jb
adc
pushf
jmp
inc
in
out
and
jmp
xchg
call
(bad)
(bad)
jmp
call
adc
sub
int
dec
jne
jne
test
jl
mov
dec
push
retf
push
xchg
or
mov
cdq
cwde
fisttp
fild
push
dec
or
loopne
sbb
into
les
pop
loopne
mov
and
adc
adc
imul
and
aaa
sub
call
push
call
ins
lahf
jmp
rol
(bad)
(bad)
jg
push
adc
in
add
mov
icebp
in
sbb
xchg
dec
es
(bad)
jg
push
sar
add
mov
in
mov
std
in
jg
push
loopne
push
rcl
adc
cmc
push
and
pushf
mov
and
add
cmp
add
dec
cmp
mov
imul
dec
jo
aad
push
push
xchg
adc
leave
nop
(bad)
adc
and
stc
lods
jle
lock
aas
(bad)
(bad)
jmp
push
xchg
pusha
mov
cmp
add
pop
pushf
rol
jmp
sub
dec
xchg
div
call
std
call
add
sbb
xchg
scas
fadd
hlt
out
(bad)
(bad)
jmp
stos
mov
vaesdec
ror
je
outs
fs
xchg
lahf
push
xchg
pop
dec
sar
(bad)
(bad)
dec
cmp
lock
(bad)
push
or
clc
popf
cmp
sub
add
jmp
fdivrp
repnz
int
dec
loopne
dec
jmp
push
adc
xchg
xlat
inc
aad
mov
test
jg
jb
jg
(bad)
std
jmp
call
(bad)
jne
repnz
jecxz
imul
stos
mov
icebp
(bad)
(bad)
jmp
imul
out
out
mov
or
jle
dec
shr
or
jmp
or
lods
aam
mov
adc
out
(bad)
(bad)
(bad)
inc
adc
cmp
cdq
push
push
adc
aam
push
pusha
std
mov
add
xor
(bad)
(bad)
(bad)
jmp
or
inc
adc
fnstcw
and
jecxz
mov
mov
scas
(bad)
(bad)
(bad)
call
or
dec
push
add
fdivp
lods
push
repnz
cli
xlat
mov
ins
push
add
mov
(bad)
cmp
pop
pop
rol
mov
or
ret
jl
(bad)
(bad)
(bad)
out
(bad)
xchg
cmp
xchg
popa
push
iret
or
pusha
jl
ficom
movs
lds
lods
push
cld
xchg
aas
sbb
dec
in
jp
push
cmc
int3
mov
call
int
call
inc
cwde
xor
mov
jno
(bad)
jmp
jmp
push
mov
adc
and
xor
jmp
and
add
iret
popf
mov
cmp
aam
pop
das
add
call
mov
pop
sub
ds
hlt
add
cmovo
mov
jo
(bad)
jmp
les
pop
pop
sbb
repz
in
inc
(bad)
push
stos
dec
imul
clc
fisttp
shl
cmps
out
cli
sbb
mov
mov
cld
(bad)
dec
xchg
sub
jmp
mov
inc
pop
dec
(bad)
adc
sub
(bad)
jmp
jmp
jmp
and
sbb
sbb
fistp
fiadd
xor
leave
aaa
xor
add
(bad)
jmp
sub
jnp
in
and
mov
jns
daa
mov
rol
(bad)
call
outs
fldcw
stos
mov
ds
sub
lods
xchg
aad
jmp
(bad)
(bad)
(bad)
out
mov
sub
cmc
jmp
sbb
adc
jecxz
shl
(bad)
out
push
add
(bad)
(bad)
(bad)
cmp
mov
cld
dec
retf
cmp
movs
or
push
arpl
fs
call
(bad)
jmp
je
retf
inc
push
mov
or
lods
or
test
(bad)
jmp
into
sub
ret
cwde
cld
retf
add
repnz
fcom
and
cmp
test
or
adc
mov
jge
outs
cmp
test
mov
(bad)
jmp
xlat
add
add
fbld
jg
or
into
iret
pop
add
push
inc
mov
mov
pushf
push
sub
mov
dec
stos
cmp
push
daa
push
test
(bad)
mov
cmp
adc
dec
adc
xor
or
(bad)
(bad)
(bad)
aad
inc
cld
xor
clc
shl
aam
repz
pop
fcmovnbe
pop
xchg
cmp
(bad)
(bad)
(bad)
inc
mov
pop
arpl
mov
inc
mov
push
or
test
sar
(bad)
jmp
jns
xor
(bad)
stos
sub
dec
pop
cld
sub
add
daa
pop
sbb
fcomip
jg
sbb
and
int3
or
clc
jecxz
dec
add
arpl
or
loopne
repz
out
or
pop
jne
jmp
in
add
out
add
push
mov
(bad)
(bad)
call
aam
fisttp
push
pop
xor
inc
je
ror
data16
jnp
lods
data16
loop
jle
jo
add
push
(bad)
(bad)
(bad)
jmp
jg
inc
imul
add
ja
repnz
loop
(bad)
add
pop
(bad)
(bad)
(bad)
inc
into
inc
mov
cmp
aad
cmp
pop
xor
js
cmp
add
jp
and
sbb
sar
std
add
xor
call
ins
sar
add
xchg
(bad)
(bad)
(bad)
dec
(bad)
aad
addr16
fisttp
(bad)
ror
pop
scas
nop
xor
int
xlat
leave
mov
jo
push
lock
inc
imul
les
stos
stos
sub
mov
ror
mov
(bad)
jmp
mov
xchg
(bad)
mov
adc
jl
jmp
dec
in
jge
push
inc
cdq
daa
movups
outs
inc
arpl
cmc
in
xchg
jae
(bad)
loop
pop
test
inc
aaa
cld
jmp
mov
cli
add
(bad)
js
pop
pop
fwait
(bad)
(bad)
(bad)
out
hlt
repz
mov
clc
repz
(bad)
pop
fdivr
mov
iret
pop
(bad)
call
repnz
sub
jnp
inc
add
inc
and
out
add
fidiv
push
fwait
sbb
aaa
std
call
push
jge
out
jo
jns
ret
(bad)
push
dec
cmp
ret
(bad)
push
sbb
mul
std
scas
iret
cli
jo
jbe
outs
stc
mov
ja
(bad)
outs
out
(bad)
(bad)
jmp
push
push
lahf
(bad)
mov
inc
xchg
hlt
push
mov
add
add
mov
pop
xchg
push
mov
icebp
shl
cmps
scas
movs
dec
or
and
fmul
into
xor
ret
rcl
(bad)
(bad)
jmp
pop
adc
shl
adc
inc
in
mov
add
mov
in
sub
sbb
enter
pop
fdivr
mov
call
mov
jmp
xchg
sub
stos
(bad)
mov
sahf
(bad)
leave
adc
rcl
aad
stc
mov
or
adc
push
jecxz
mov
adc
sahf
adc
js
add
dec
pop
je
xor
cs
outs
(bad)
mov
outs
cli
rol
jmp
adc
(bad)
mov
push
sbb
fadd
pavgb
repz
xlat
push
push
mov
call
icebp
push
add
mov
dec
mov
inc
ret
pop
mov
mov
js
cli
stos
mov
xchg
call
push
fcom
mov
(bad)
call
call
inc
xchg
(bad)
pop
push
inc
inc
ds
fisubr
ins
out
xchg
mov
stos
dec
add
adc
and
fild
cmps
iret
pop
xor
stc
adc
(bad)
out
ret
stos
inc
sar
or
std
sbb
or
gs
sub
out
(bad)
mov
lods
jbe
(bad)
in
jns
lock
(bad)
(bad)
fcomip
(bad)
sti
mov
hlt
pop
dec
mov
jo
lds
(bad)
std
pop
test
js
loop
dec
aam
cmc
pop
mov
inc
and
(bad)
(bad)
inc
mov
movs
enter
mov
bound
or
pop
fsubr
jno
(bad)
out
loop
mov
dec
inc
mov
mov
xchg
ins
cmp
imul
ins
sbb
sub
xchg
add
push
inc
add
dec
mov
shr
adc
inc
hlt
mov
or
mov
cwde
inc
mov
cmp
pusha
into
pop
loopne
dec
fnstsw
push
stos
or
lods
lods
std
sbb
enter
test
enter
(bad)
jg
das
jae
pop
xchg
repz
mul
push
inc
inc
push
test
fild
sub
(bad)
(bad)
mov
adc
cld
and
or
or
(bad)
or
mov
cld
shr
push
fsub
rol
repnz
and
mov
call
std
dec
add
cmps
xchg
shl
fs
push
mov
cmp
das
clc
dec
lods
cmp
xor
mov
pop
(bad)
push
into
aas
hlt
in
xchg
sbb
push
out
test
mov
jbe
test
xchg
jmp
inc
inc
cmc
mov
cli
xchg
push
std
(bad)
fild
js
jle
cmp
push
aam
jmp
sahf
mov
pop
stc
scas
jg
call
clc
inc
out
inc
cld
mov
fidiv
or
jne
sahf
push
stos
pop
icebp
(bad)
jmp
sub
mov
out
es
cwde
pmulhw
(bad)
(bad)
(bad)
jmp
sub
scas
xchg
adc
push
cmp
mov
cdq
mov
(bad)
(bad)
(bad)
call
in
mov
sbb
sbb
mov
inc
or
icebp
push
or
(bad)
push
ficomp
cli
fucomip
sub
inc
daa
stc
(bad)
addr16
mov
mov
lods
sub
ja
push
stos
jno
mov
xchg
or
push
call
scas
clc
call
arpl
les
js
add
(bad)
stc
cdq
(bad)
in
sbb
(bad)
push
(bad)
gs
jp
je
mov
cmp
jo
mov
(bad)
fbld
or
xchg
(bad)
(bad)
(bad)
cmp
in
es
call
pop
mov
xor
push
xchg
loopne
inc
and
mov
dec
pop
in
fadd
mov
popa
xor
or
(bad)
(bad)
mov
push
hlt
int3
je
jmp
ror
xchg
sbb
inc
xchg
stos
xor
out
mov
(bad)
inc
cmp
fstp
pop
jge
sbb
dec
lock
xor
xor
or
xchg
xchg
clc
retf
out
das
cmp
push
(bad)
loope
outs
je
(bad)
(bad)
cmp
push
outs
mov
inc
sbb
popa
adc
or
sub
(bad)
sar
add
mov
ins
mov
add
(bad)
(bad)
(bad)
push
sub
push
lods
cld
int3
sar
out
std
jl
loopne
je
pop
call
call
pop
scas
cld
enter
fsubr
loop
cld
jmp
push
inc
js
dec
sar
cmp
xchg
movs
cmp
and
sub
or
or
aam
xor
jp
xchg
dec
sahf
cli
mov
(bad)
(bad)
(bad)
(bad)
mov
xchg
sbb
xchg
aad
js
cmp
jle
mov
xor
mov
inc
sbb
push
mov
in
test
test
sahf
cmps
js
(bad)
mov
(bad)
push
xchg
retf
in
adc
into
loop
pusha
int
(bad)
jmp
adc
out
ror
push
sub
ret
jmp
ss
sbb
iret
out
arpl
loope
inc
into
add
out
(bad)
(bad)
cmp
sbb
out
dec
mov
repnz
std
push
xchg
mov
and
jmp
add
sub
(bad)
idiv
outs
fisttp
jae
enter
scas
clc
mov
out
cmp
jg
mov
ins
jnp
repnz
sbb
mov
jecxz
dec
jle
outs
(bad)
sti
inc
xchg
fprem1
push
or
in
mov
and
add
je
call
mov
pop
inc
sahf
pop
cmp
dec
ins
adc
ja
(bad)
fistp
sub
dec
mov
(bad)
in
inc
call
(bad)
jge
loop
mov
add
mov
sar
fld
push
mov
outs
mov
(bad)
mov
and
loope
push
les
stos
mov
mov
call
mov
test
jbe
sbb
nop
add
(bad)
mov
sbb
in
ja
add
mov
call
fidiv
(bad)
dec
jge
shl
fnstenv
mov
jp
cmps
sahf
adc
jo
movsx
shr
mov
(bad)
pop
dec
cld
cmp
mov
jnp
mov
iret
add
stos
js
xchg
stc
ret
push
inc
arpl
es
(bad)
mov
adc
ss
fsubr
mov
lods
lahf
pop
int
addr16
hlt
jp
pop
sar
and
push
mov
enter
sub
lahf
(bad)
(bad)
(bad)
push
out
outs
loop
in
jp
lds
sbb
retf
sbb
sti
test
and
mov
(bad)
(bad)
(bad)
(bad)
xlat
mov
in
inc
sar
xchg
mov
mov
mov
enter
repnz
int
(bad)
dec
push
cmps
mov
jg
sar
test
inc
out
fdiv
movs
lds
add
(bad)
(bad)
jmp
repnz
dec
ret
jl
repz
pop
loope
pop
mov
mov
clc
aas
(bad)
jge
(bad)
(bad)
(bad)
jmp
(bad)
inc
ret
push
jbe
or
pop
js
sbb
sbb
(bad)
call
push
or
pushf
and
dec
sbb
ins
xlat
fidivr
call
(bad)
jmp
stc
cmp
js
ret
cmp
mov
in
outs
jmp
adc
sub
call
and
lock
loope
inc
ja
dec
adc
(bad)
mov
sar
and
lock
(bad)
(bad)
inc
push
mov
cld
(bad)
sti
aas
sar
lds
mov
(bad)
(bad)
(bad)
jmp
(bad)
es
and
cmp
mov
lock
retf
push
push
pop
in
(bad)
(bad)
(bad)
dec
adc
repz
(bad)
mov
inc
dec
adc
inc
repnz
leave
pop
inc
sbb
mov
(bad)
(bad)
jnp
pop
and
sbb
repz
pop
mov
ins
xchg
aad
repnz
les
(bad)
(bad)
(bad)
push
(bad)
scas
fdiv
paddb
xor
mov
mov
xor
jb
popf
pop
clc
outs
das
push
scas
cmp
mov
push
loope
adc
mov
and
ss
repnz
sub
cmp
call
jns
(bad)
sub
stc
clc
lahf
icebp
adc
or
outs
int3
ret
les
adc
(bad)
in
push
xor
(bad)
(bad)
(bad)
out
scas
int
cmp
rcl
push
movs
pop
pushf
sti
das
out
and
mov
xor
push
sub
(bad)
(bad)
jmp
add
cmp
cld
sahf
dec
cld
stc
xor
mov
daa
add
in
imul
jno
loopne
ins
cld
lock
sub
int3
mov
mov
push
sahf
clc
imul
(bad)
jmp
(bad)
and
adc
jle
pop
hlt
cli
adc
or
(bad)
(bad)
(bad)
call
stc
xchg
sar
push
sub
xchg
ss
(bad)
call
pop
jp
mov
add
sar
(bad)
inc
mov
sub
ja
sub
jae
(bad)
(bad)
inc
rol
gs
mov
retf
xchg
call
adc
(bad)
inc
cld
jle
add
pop
test
cmp
xchg
push
shl
enter
jo
fiadd
fisttp
icebp
xchg
push
ins
movs
mov
call
clc
sbb
or
ins
shl
inc
repz
jo
or
imul
pop
cld
jmp
mov
call
sbb
fwait
scas
enter
pop
adc
call
xchg
mov
inc
adc
mov
je
loope
push
imul
into
jno
xor
inc
ret
dec
and
(bad)
mov
faddp
repz
ins
fcomi
imul
jns
jo
pop
(bad)
(bad)
(bad)
jmp
xchg
popf
mov
pop
jle
jae
leave
mov
sub
das
adc
add
push
push
xchg
pop
cmp
(bad)
inc
mov
cmps
push
fdiv
xchg
ja
cld
inc
mov
dec
frstor
sahf
xchg
ret
push
mov
jns
imul
xor
(bad)
mov
clc
enter
fdivr
out
fisubr
inc
adc
dec
mov
in
fwait
push
add
push
inc
mov
mov
mov
xor
stos
push
jmp
ja
mov
outs
(bad)
popf
(bad)
jmp
pop
sbb
xchg
sub
sti
ror
fdiv
test
inc
pop
leave
push
das
aad
(bad)
dec
repnz
jb
ror
inc
out
lahf
mov
adc
mov
(bad)
(bad)
(bad)
jg
cli
jns
nop
pop
inc
xor
out
adc
push
or
add
call
(bad)
(bad)
(bad)
inc
adc
xor
jo
inc
sbb
hlt
adc
call
inc
(bad)
lahf
es
push
(bad)
mov
rcl
ins
in
shr
mov
fs
add
sbb
mov
cmc
push
jl
test
push
dec
and
pushf
push
ds
stos
dec
xor
mov
in
pusha
jl
mov
popa
dec
js
ret
add
(bad)
(bad)
(bad)
cmp
jae
arpl
jmp
sbb
push
mov
clc
xchg
sub
(bad)
(bad)
jg
xchg
adc
stc
cmc
dec
pop
mov
mov
adc
and
sub
pop
xor
(bad)
(bad)
jmp
daa
retf
adc
popf
adc
popa
mov
(bad)
xor
shl
scas
or
call
jbe
daa
or
add
add
shl
fcomp
push
sti
fcmovu
repz
dec
pop
jno
repz
pop
cmp
cld
imul
jg
and
xchg
arpl
or
cli
out
mov
lods
sub
(bad)
pop
(bad)
push
xlat
(bad)
push
xchg
cmp
and
push
fidivr
(bad)
icebp
mov
pop
push
mov
ja
(bad)
call
rcr
cwde
push
push
ins
cld
pop
aad
dec
jmp
mov
call
xchg
cld
daa
push
sbb
lea
mov
mov
paddusb
cmp
jae
inc
push
adc
inc
adc
add
call
cld
xchg
adc
loopne
or
push
fdiv
(bad)
stc
aaa
mov
(bad)
(bad)
(bad)
call
iret
pusha
mov
xchg
or
sahf
in
(bad)
adc
mov
fimul
mov
jl
(bad)
call
dec
xor
cdq
(bad)
dec
mov
and
movs
cmp
fistp
inc
(bad)
clc
out
mov
lea
inc
mov
mov
sub
(bad)
(bad)
(bad)
push
jmp
xor
lea
mov
loope
xchg
jle
(bad)
mov
(bad)
(bad)
in
jg
repz
movs
adc
inc
add
mov
adc
jle
retf
fdivr
jno
pop
hlt
jg
mov
repz
sbb
loop
jecxz
(bad)
or
retf
icebp
out
cmp
mov
xchg
sbb
sub
shl
outs
clc
shl
jne
stos
(bad)
gs
pop
outs
jle
(bad)
(bad)
(bad)
outs
inc
or
jno
push
pushf
sbb
div
mov
ret
inc
std
das
push
iret
rol
mov
push
(bad)
(bad)
(bad)
jmp
(bad)
iret
jecxz
out
pushf
dec
sti
ja
stos
mov
cld
lods
lahf
rcl
jge
sahf
in
(bad)
(bad)
jmp
cli
or
fistp
and
popf
and
pop
xor
lock
outs
ret
stos
push
xor
dec
(bad)
pop
push
inc
stos
outs
cli
nop
arpl
imul
test
jmp
(bad)
(bad)
(bad)
fild
mov
add
mov
test
hlt
and
rcl
(bad)
xchg
lods
lock
push
sti
lock
lods
pop
jb
push
pushf
push
or
les
adc
push
and
ret
xchg
sub
cli
cs
ret
push
pop
add
cld
(bad)
sti
xchg
and
cmp
call
xchg
add
mov
(bad)
(bad)
mov
shr
adc
jmp
out
mov
sbb
or
or
push
scas
xchg
ds
pop
icebp
(bad)
call
adc
lea
iret
push
lea
out
jb
mov
cli
ins
(bad)
mov
out
xchg
ins
adc
sub
push
in
into
cs
xlat
(bad)
call
xchg
stos
mov
lods
mov
shr
jge
xchg
dec
lea
movs
or
or
scas
ins
add
pop
in
es
jg
jecxz
pop
fldcw
ins
ret
inc
sub
jg
hlt
pop
jne
test
ds
ja
ret
mov
js
push
jmp
jne
add
inc
(bad)
repz
push
xbegin
ret
jb
mov
mov
(bad)
add
sub
xor
sub
xchg
sub
cmc
(bad)
(bad)
cld
or
inc
outs
xlat
dec
push
cmc
xchg
clc
enter
jecxz
out
call
std
dec
adc
std
sub
add
fnsave
sbb
jbe
cmp
mov
loope
jmp
and
ins
push
in
stc
dec
sub
mov
cmp
xor
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
jecxz
jo
sub
aas
lock
(bad)
adc
add
cmp
dec
and
ds
(bad)
(bad)
call
mov
xchg
les
cs
push
leave
cmp
(bad)
(bad)
cli
jmp
fiadd
jge
gs
or
aas
loopne
xor
mov
dec
(bad)
(bad)
(bad)
call
outs
sbb
(bad)
(bad)
ret
imul
stos
xor
add
fs
loop
sub
(bad)
(bad)
call
das
xchg
mov
jle
mov
jne
adc
adc
aad
sti
mov
repz
clc
enter
clc
jo
ret
mov
mov
add
pop
xor
rol
jno
lds
jae
add
(bad)
call
cmp
push
rcl
(bad)
out
in
xor
inc
scas
or
(bad)
(bad)
(bad)
inc
inc
mov
dec
mul
add
add
aaa
push
fld
(bad)
stc
ds
lods
out
into
out
stos
(bad)
(bad)
call
push
in
inc
mov
leave
call
and
dec
pop
mov
(bad)
(bad)
(bad)
dec
stos
dec
mov
js
addr16
in
sahf
sbb
int3
shl
inc
and
loopne
jg
jmp
test
add
jmp
push
call
out
aas
jle
pop
mov
in
add
(bad)
in
in
mov
clc
xor
repnz
das
adc
cmps
mov
jg
inc
adc
(bad)
(bad)
jg
xor
stos
les
add
xacquire
out
jne
(bad)
pop
and
xor
pop
push
and
push
nop
lock
sbb
sbb
jmp
dec
movs
xor
imul
nop
push
mov
dec
jno
push
jne
jno
jo
dec
(bad)
add
arpl
adc
dec
(bad)
fcomip
test
dec
xchg
nop
out
fwait
jb
mov
in
ja
ds
xlat
lods
adc
(bad)
(bad)
inc
movs
mov
pop
stc
push
fbstp
scas
xor
add
hlt
inc
cmp
xor
jnp
out
imul
call
xchg
les
add
adc
dec
and
jne
out
push
push
add
jmp
cmps
lods
mov
out
adc
mov
xor
cmp
cmp
cdq
ret
stos
mov
push
daa
arpl
sahf
push
and
pop
popf
shl
sbb
cmps
aaa
push
(bad)
(bad)
(bad)
in
sbb
pushf
jo
mov
add
stos
(bad)
jle
push
stc
push
pushf
cmc
inc
pop
jns
fcomi
push
(bad)
(bad)
(bad)
inc
mov
push
daa
pop
call
or
movs
fisubr
mov
mov
jmp
mov
out
out
jb
test
fs
add
xchg
xchg
dec
(bad)
aam
jnp
cmp
push
pop
or
inc
sbb
pop
(bad)
jg
push
xor
stos
or
and
out
xchg
movs
mov
pop
stos
or
jmp
sbb
adc
pop
mov
(bad)
mov
mov
cmp
fsubr
sub
mov
(bad)
(bad)
(bad)
cmp
mov
fsub
xchg
adc
addr16
lahf
bound
cmp
fwait
pop
xchg
call
mov
(bad)
jmp
jle
add
mov
xor
push
jne
mov
aam
adc
(bad)
(bad)
(bad)
call
in
pop
pop
rcr
adc
aas
or
shl
ret
das
lahf
push
movs
enter
(bad)
(bad)
push
jmp
mov
rcl
out
adc
jmp
push
dec
(bad)
(bad)
(bad)
(bad)
fcmovb
fbstp
push
pop
aam
(bad)
lahf
sahf
js
sub
pop
fsub
icebp
sahf
retf
push
out
sti
mov
scas
pop
(bad)
dec
fdiv
rcr
inc
cmp
dec
push
in
jnp
cli
mov
ins
sub
push
(bad)
(bad)
(bad)
inc
imul
jg
int
cli
push
test
pop
arpl
cli
cmc
je
mov
repnz
(bad)
(bad)
jmp
mov
jp
sub
cmp
xchg
push
pop
fdiv
(bad)
(bad)
mov
xor
pop
(bad)
fst
sbb
jno
pop
pop
xor
out
pop
lds
(bad)
(bad)
inc
pop
xchg
test
imul
push
shl
sahf
(bad)
jns
sar
add
(bad)
(bad)
jmp
pop
jo
xlat
sbb
rcr
fistp
mov
jg
pop
movs
sbb
adc
dec
fist
push
test
bound
add
(bad)
inc
call
push
stc
int
push
adc
mov
std
sbb
fdivr
pop
or
xchg
adc
or
retf
inc
fnstcw
call
(bad)
jb
(bad)
shl
mov
aas
inc
cdq
popa
jnp
outs
push
add
ud0
jne
xchg
loop
(bad)
fcmovne
jmp
xor
(bad)
jecxz
mov
call
stc
pop
jmp
aad
test
xchg
xor
(bad)
jmp
mov
outs
add
outs
dec
pop
jg
ins
addr16
(bad)
call
cmp
fmul
repz
fcmovnu
fstp
push
gs
mov
push
dec
push
je
dec
push
or
fild
mov
cld
cld
(bad)
(bad)
(bad)
jmp
inc
jecxz
pop
pop
push
mov
je
sbb
add
in
jb
rcr
pop
push
jg
(bad)
push
loope
cmps
xchg
ret
push
cmps
and
jg
call
out
adc
ins
xchg
pop
jo
mov
(bad)
call
push
cmp
cmp
lock
or
mov
jg
(bad)
(bad)
cmp
dec
cld
jb
sar
pop
fsub
adc
clc
(bad)
mov
push
shl
mov
lahf
ja
cmp
mov
(bad)
call
or
std
xchg
(bad)
retf
push
mov
shl
(bad)
(bad)
fbstp
(bad)
ds
sub
jnp
int
push
or
adc
pop
pop
xchg
icebp
cmp
cmp
in
mov
xchg
neg
(bad)
call
add
jae
fidiv
jp
sub
inc
push
pop
dec
adc
cmp
neg
div
stos
xchg
je
mov
sub
or
(bad)
(bad)
dec
push
adc
aam
cdq
stc
cmp
jmp
mov
scas
(bad)
call
or
xchg
iret
ss
jecxz
mov
int3
adc
fwait
and
inc
xor
or
(bad)
dec
cmp
mov
jmp
iret
xchg
shl
fcmovbe
fnstenv
(bad)
(bad)
(bad)
mov
adc
xlat
inc
add
call
punpckldq
pop
not
mov
(bad)
xor
inc
(bad)
(bad)
(bad)
jmp
lods
jbe
mov
popf
jle
cmc
or
arpl
add
pusha
dec
mov
add
pop
cmc
stos
lock
retf
lahf
(bad)
dec
push
push
lods
(bad)
and
addr16
(bad)
jmp
fucomp
aaa
cmp
(bad)
fidivr
pop
xlat
in
sub
in
jp
inc
stc
sbb
clc
xchg
fadd
or
(bad)
das
adc
outs
clc
not
icebp
xor
sbb
mov
aaa
dec
jae
out
sbb
(bad)
jmp
cli
adc
icebp
pop
div
retf
movs
jecxz
les
test
adc
(bad)
mov
or
sbb
sub
dec
clc
pop
sbb
(bad)
(bad)
js
psubsb
add
sub
push
jne
push
loope
es
dec
outs
ja
cmp
clc
dec
jmp
jle
sbb
pop
xor
stos
pop
mov
sar
loop
sub
jmp
js
xor
jecxz
shl
or
(bad)
(bad)
cs
fs
test
inc
repnz
add
inc
or
cdq
out
pop
into
stc
dec
jne
clc
(bad)
(bad)
dec
mov
add
test
cmc
xchg
aam
lahf
cmps
xchg
xchg
sub
aaa
lea
aad
lods
xchg
out
add
rcl
jne
(bad)
outs
dec
clc
test
push
call
dec
outs
out
(bad)
(bad)
call
pop
mov
stc
in
imul
add
pop
jmp
mov
in
lahf
or
inc
adc
in
scas
pop
movs
cmp
pusha
cld
sbb
(bad)
(bad)
(bad)
(bad)
call
jle
mov
clc
mov
(bad)
push
adc
push
ret
mov
mov
pop
pop
stc
xor
hlt
xor
daa
xchg
outs
add
out
xchg
mov
out
ret
pop
mov
push
out
cdq
and
outs
pop
xchg
mov
(bad)
push
in
pop
mov
xchg
div
jmp
cvtps2pd
pop
mov
shr
(bad)
inc
clc
mov
popa
xchg
mov
fdiv
or
aas
icebp
(bad)
(bad)
push
cwde
cld
rcl
dec
ins
rep
daa
mov
lods
xlat
sub
cld
(bad)
push
mov
call
retf
sub
and
dec
xchg
(bad)
(bad)
(bad)
inc
xchg
mov
test
fcomp
cmc
ins
push
in
cmp
gs
sahf
adc
xchg
jle
jmp
mov
outs
cmp
fidiv
retf
pminsw
inc
xor
push
call
pop
hlt
popf
pop
mov
sbb
push
mov
adc
shl
in
(bad)
(bad)
(bad)
dec
inc
xchg
pop
sub
add
mov
pop
out
sbb
add
icebp
fwait
lahf
test
add
pop
aad
xor
(bad)
(bad)
jmp
ja
jl
lea
ficom
in
stos
retf
jo
loopne
jae
call
jecxz
mov
cld
loope
repz
jo
clc
shr
lahf
mov
push
mov
(bad)
(bad)
call
test
jle
hlt
lods
push
aam
hlt
sub
in
mov
jbe
pop
fld
sub
sbb
push
inc
(bad)
pop
mov
and
test
outs
cli
call
add
pop
and
push
add
test
das
(bad)
js
push
mov
(bad)
mov
shl
fwait
clc
stos
xor
mov
jae
pop
sbb
dec
lds
adc
je
xor
pop
add
sub
cld
jno
or
mov
fidivr
int
fisttp
clc
push
(bad)
fiadd
add
sbb
sahf
pop
std
mov
adc
dec
in
aas
fldl2t
fwait
outs
jg
(bad)
(bad)
jmp
les
or
pop
fsubr
repnz
ror
out
data16
push
mov
sub
popa
sub
mov
cmp
(bad)
pop
cmp
jmp
shl
adc
sbb
xor
dec
xchg
sar
push
das
mov
pop
mov
(bad)
cld
test
inc
out
sub
push
(bad)
(bad)
call
lahf
inc
movs
cmp
add
sub
cwde
xchg
ins
int3
repnz
or
cmp
sbb
mov
mov
lods
in
aam
lahf
retf
repnz
cmp
clc
lods
push
test
mov
pop
mov
(bad)
call
clc
xchg
loope
inc
popf
cdq
mov
rcr
pop
mov
xchg
cmps
mov
test
je
jmp
cmp
imul
sbb
cmc
fwait
mov
(bad)
(bad)
(bad)
cld
xor
leave
in
cmp
cld
movs
pop
adc
or
or
sahf
stc
inc
jg
inc
in
sar
inc
fcomip
js
imul
mov
scas
push
sub
and
mov
outs
ds
imul
popf
shl
(bad)
imul
ret
sti
mov
(bad)
(bad)
jg
mov
pop
ins
push
mov
out
dec
arpl
mov
lods
retw
hlt
jmp
cwde
cli
dec
call
pop
or
les
push
pop
or
mov
ds
mov
scas
push
inc
xchg
jb
clc
fwait
stos
mov
push
pop
ret
(bad)
(bad)
(bad)
jmp
test
jno
dec
(bad)
and
add
arpl
dec
lahf
sahf
neg
(bad)
(bad)
(bad)
jmp
(bad)
pushw
pop
jmp
mov
out
mov
ds
inc
inc
fs
lods
(bad)
xor
inc
aad
sar
(bad)
push
aas
rcr
mov
popa
xchg
inc
adc
inc
(bad)
cli
movsx
scas
xchg
sub
(bad)
(bad)
jg
(bad)
scas
xchg
outs
push
mov
daa
int
in
(bad)
pop
mov
mov
(bad)
(bad)
(bad)
(bad)
aas
cmp
lods
jge
fbld
mov
jae
and
push
out
aad
add
dec
xor
les
or
ret
fwait
std
dec
cmp
xchg
sbb
fdiv
shl
jg
jns
mov
inc
arpl
clc
fcomip
das
xchg
pop
aad
and
hlt
fsub
pop
cwde
pushf
je
mov
and
cli
jmp
cld
dec
mov
popa
xor
(bad)
mov
pop
sub
inc
xchg
test
mov
mov
or
test
jle
cmps
sub
push
std
test
out
(bad)
dec
aaa
out
ret
stc
cmp
mov
or
(bad)
call
lods
inc
stos
scas
aam
shr
int3
xor
daa
pop
aaa
ja
push
ss
cmp
(bad)
inc
mov
(bad)
fucom
std
in
in
dec
enter
or
(bad)
(bad)
call
xchg
or
pop
or
jp
enter
pop
test
fwait
cs
pop
xor
scas
clc
push
cmc
xchg
mov
clc
and
xchg
add
fadd
call
or
push
stos
call
dec
sub
inc
mov
or
jl
das
(bad)
jmp
jbe
jne
sub
(bad)
mov
pop
add
mov
push
adc
jecxz
jmp
vpaddusw
mov
stos
cmp
sti
push
and
fild
push
xchg
dec
outs
jle
(bad)
push
imul
clc
scas
add
mov
leave
pop
inc
cli
je
ss
pop
gs
call
dec
test
add
fsub
jae
sbb
outs
mov
out
inc
into
mov
sub
(bad)
call
inc
lea
mov
sub
call
dec
pop
frstor
js
mov
fstp
jle
je
iret
pop
cmp
or
shr
cmps
ss
(bad)
(bad)
jg
push
cmps
inc
shl
hlt
ins
stos
mov
push
sbb
(bad)
and
xchg
test
sar
push
cli
ins
test
imul
push
mov
push
(bad)
(bad)
(bad)
fistp
sub
xor
movs
scas
in
xlat
lock
sbb
aas
sbb
mov
dec
jmp
stos
lods
push
nop
xor
or
test
imul
or
push
pop
inc
dec
std
pushf
adc
not
(bad)
out
mov
pop
sub
lea
retf
aaa
mov
sbb
mov
push
mov
and
pop
out
psubd
(bad)
(bad)
(bad)
mov
jns
popf
mov
popa
cmp
mov
dec
out
xlat
add
js
aas
adc
dec
(bad)
jmp
call
mov
cmc
(bad)
(bad)
lods
pop
mov
ins
push
(bad)
(bad)
(bad)
inc
(bad)
mov
jno
leave
outs
sub
(bad)
jmp
fimul
(bad)
(bad)
push
pop
push
inc
push
(bad)
cmp
adc
hlt
cdq
cmp
pop
(bad)
aad
cmp
or
fs
mov
mov
jge
and
jo
push
mov
scas
jb
jp
les
dec
mov
sub
mov
jl
cmp
sub
dec
add
rol
popa
shl
xchg
dec
adc
mov
mov
call
call
rol
aas
cmps
mov
mov
xchg
jle
call
xchg
in
out
jo
call
in
(bad)
add
jle
cld
mov
inc
mov
mov
inc
pop
jmp
lahf
out
(bad)
call
(bad)
pop
push
jle
pusha
push
(bad)
push
add
rcl
jae
retf
pop
push
dec
movs
jns
das
stos
movs
push
inc
xchg
inc
scas
(bad)
fsubr
mov
jno
fstp
inc
sub
and
jb
aas
gs
cmp
jmp
jbe
pop
dec
loopne
mov
cs
jmp
mov
jae
jle
fsubp
mov
sahf
js
cli
jno
(bad)
mov
(bad)
hlt
and
inc
push
xchg
adc
sbb
call
into
push
not
jmp
dec
inc
shl
(bad)
adc
fs
add
push
in
dec
(bad)
(bad)
(bad)
call
in
in
or
aam
pop
mov
popf
push
into
push
sbb
sub
stos
popf
shl
cld
jno
pop
lods
add
jmp
cmc
aad
icebp
xlat
pusha
aam
je
scas
jno
shr
clc
dec
and
test
clc
cld
cld
repz
mov
push
adc
(bad)
(bad)
cmp
arpl
sar
imul
stos
add
outs
xchg
sub
rcr
jg
jg
push
cs
jg
es
clc
movs
sbb
push
mov
xor
pop
mov
sub
out
adc
out
scas
call
(bad)
in
out
jp
aad
jl
cmp
daa
sbb
inc
and
aas
xlat
xlat
and
pop
add
(bad)
(bad)
call
mov
loop
out
sub
fcomp
popf
sub
cld
je
mov
jg
dec
inc
dec
mov
pop
add
sub
and
(bad)
(bad)
fcomip
sub
jmp
adc
push
sub
inc
rcr
fsubr
mov
(bad)
cmp
aas
(bad)
(bad)
mov
jb
outs
int3
jge
loop
fidiv
jno
inc
(bad)
cmp
(bad)
jmp
fisttp
xor
aad
mov
jmp
dec
clc
aam
jmp
jno
push
scas
sbb
push
cmp
xchg
stos
dec
dec
fstp
icebp
daa
cmps
clc
inc
addr16
call
(bad)
push
scas
fdivrp
clc
cli
pop
(bad)
push
sbb
hlt
mov
add
ret
jle
ficomp
add
jb
cld
das
cli
test
sbb
(bad)
mov
ss
jmp
ret
imul
cmc
add
cmp
xchg
cwde
(bad)
(bad)
(bad)
push
dec
mov
pop
cwde
pop
sbb
iret
pop
fst
aad
icebp
pop
mov
js
or
(bad)
jle
(bad)
call
iret
inc
xor
fist
retf
icebp
dec
fwait
cmc
mov
jp
into
shl
sbb
hlt
mov
add
push
enter
jmp
clc
dec
ds
adc
mov
pop
push
push
mov
call
push
ds
outs
pop
icebp
lahf
cmps
sbb
loop
mov
jmp
into
enter
lods
(bad)
(bad)
(bad)
dec
cld
xchg
ins
pop
jns
data16
(bad)
inc
jge
sbb
aaa
mov
inc
push
outs
xor
add
and
dec
repz
clc
mov
mov
sub
xchg
cmp
jge
mov
cli
xlat
pop
in
cld
les
mov
mov
add
(bad)
push
xchg
icebp
jb
fisub
jmp
add
cli
mov
sub
(bad)
fcomp
(bad)
jmp
or
sbb
xchg
push
jb
(bad)
call
mov
push
neg
scas
jle
int
push
test
sub
jmp
aas
mov
retf
ds
or
inc
fild
push
lea
out
push
cmc
int3
sub
jmp
scas
int
cmc
ins
inc
sub
dec
cmp
add
int3
lock
xchg
mov
pop
test
mov
(bad)
sahf
push
sub
push
(bad)
(bad)
(bad)
(bad)
jmp
int3
cmp
mov
mov
adc
push
scas
sub
jmp
hlt
test
sahf
fist
add
and
mov
pop
jo
fsubr
xor
call
dec
pop
sub
das
push
icebp
mov
or
lock
dec
push
sub
call
je
out
cli
cmps
cmp
out
push
int3
(bad)
retf
repz
je
(bad)
(bad)
(bad)
dec
gs
jge
imul
ja
cmp
iret
sub
ins
jl
(bad)
jg
inc
adc
sub
adc
daa
pop
push
repz
cdq
enter
bnd
(bad)
(bad)
(bad)
jmp
mov
adc
inc
jo
xchg
xor
push
mov
sahf
cli
sub
adc
jo
(bad)
dec
icebp
and
xchg
std
nop
ror
es
int
inc
dec
movs
mov
cld
dec
cmp
pop
std
je
or
int3
std
arpl
ss
jmp
cmp
mov
js
mov
clc
lahf
jle
mov
pop
icebp
dec
cdq
retf
push
push
adc
push
sub
mov
ss
lods
in
neg
jmp
add
hlt
inc
add
push
inc
and
mov
lahf
test
or
loopne
ror
mov
ret
dec
pop
ins
pop
sti
dec
jmp
mov
neg
push
(bad)
cmc
pushf
ds
fwait
cld
mov
(bad)
(bad)
(bad)
inc
jns
out
xchg
adc
daa
mov
sub
test
inc
pop
ds
add
adc
cwde
(bad)
pop
js
or
lds
stos
xor
stos
xchg
jle
jae
out
inc
pop
int3
add
call
xchg
jmp
cmp
sub
les
jb
or
(bad)
fst
cld
mov
dec
xlat
jp
sbb
(bad)
xchg
add
daa
cmp
setl
inc
jne
iret
cmp
mov
retf
jle
cwde
(bad)
(bad)
(bad)
jg
std
and
pop
(bad)
loop
call
rol
mov
sahf
retf
retf
jmp
mov
sbb
pushf
call
jg
mov
rcr
fdiv
or
pushf
xor
aas
retf
and
inc
in
lods
retf
jg
add
lock
sub
(bad)
(bad)
(bad)
(bad)
jl
xchg
pop
push
pop
pop
adc
retf
repz
fdivp
mov
xor
sbb
(bad)
call
sub
inc
ins
xchg
sub
out
loope
pop
clc
(bad)
jnp
(bad)
rcr
push
jne
(bad)
(bad)
fcomip
sbb
fidiv
fild
shr
ss
jo
cld
ror
(bad)
(bad)
(bad)
dec
cwde
cld
fs
xchg
repnz
cld
repnz
dec
hlt
ins
push
mov
adc
(bad)
(bad)
jmp
push
je
xchg
and
push
rcl
rcl
pop
in
les
vandps
pushf
loopne
(bad)
(bad)
in
je
aam
mov
jne
jne
div
outs
or
inc
js
repz
xchg
nop
mov
inc
mov
sar
stos
dec
sti
pop
frstor
mov
jbe
shl
in
cdq
(bad)
(bad)
(bad)
call
aam
jo
retf
pop
out
mov
push
xor
cmp
imul
sub
ins
aad
iret
ret
outs
(bad)
(bad)
inc
dec
push
jo
pmullw
xchg
pop
cmp
aas
aam
lock
faddp
neg
(bad)
(bad)
(bad)
call
xor
inc
and
or
push
arpl
sub
adc
push
or
cmp
sbb
(bad)
call
push
test
js
leave
dec
das
jecxz
mov
mov
(bad)
jg
push
adc
adc
pushf
inc
mov
clc
push
pop
out
push
stos
fdivr
mov
cmp
stos
data16
lahf
call
jo
mov
inc
mov
cld
sbb
push
(bad)
(bad)
call
out
pop
mov
dec
lds
cmps
mov
xchg
iret
jp
stos
xchg
enter
pop
xchg
(bad)
(bad)
pop
div
adc
adc
mov
pop
adc
fs
push
(bad)
mov
(bad)
jg
inc
sbb
jo
inc
fmul
test
or
pop
sti
test
add
ret
add
dec
mov
int3
idiv
inc
scas
inc
pusha
adc
inc
add
inc
add
or
add
adc
add
shr
push
pusha
pop
bound
xor
add
in
(bad)
push
inc
lods
add
cmp
mov
add
dec
mov
inc
mov
ss
mov
push
xchg
push
inc
cs
jle
add
inc
rol
cmp
add
fstp
test
ss
int3
add
or
xlat
std
jg
or
cmp
aad
data16
aas
dec
fadd
inc
dec
into
add
dec
psrlq
mov
mov
fld
dec
test
lea
outs
push
(bad)
add
loope
dec
jecxz
out
add
inc
push
lea
add
and
push
(bad)
fnstsw
xchg
push
push
lea
jnp
add
dec
push
fcmovu
jbe
mov
push
fbld
xchg
adc
push
xchg
push
push
xchg
pop
fist
(bad)
cs
sti
ins
repz
dec
mov
outs
pop
loopne
push
cwde
push
push
cdq
ds
pop
outs
in
(bad)
outs
ss
pushf
or
(bad)
dec
xchg
xor
call
call
pushf
adc
push
pop
sahf
lldt
pop
sahf
mov
xchg
cmp
hlt
cmp
sahf
pop
add
sub
lahf
sbb
pop
lahf
sbb
mov
outs
push
mov
xor
xchg
dec
xchg
push
into
xchg
mov
inc
mov
push
movs
pop
add
movs
and
pusha
cmps
(bad)
in
fwait
and
push
addr16
sbb
ins
sti
in
mov
push
xchg
push
add
fmul
xchg
pop
add
xchg
aaa
ins
aaa
sub
fadd
data16
nop
fld
xchg
mov
xchg
faddp
stos
(bad)
stos
(bad)
ss
jecxz
cmps
jbe
mov
mov
push
call
popf
jmp
mov
push
mov
jle
lods
add
movs
inc
movs
call
dec
mov
push
shr
pop
mov
jo
(bad)
cmps
out
push
stos
out
mov
fnsave
mov
mov
jmp
hlt
mov
cmp
mov
mov
push
mov
add
mov
(bad)
mov
in
mov
in
mov
xlat
xchg
mov
(bad)
sbb
hlt
ret
repnz
in
(bad)
mov
push
les
ret
(bad)
cli
add
test
outs
fisttp
inc
(bad)
es
enter
dec
int3
mov
fcmovnu
ds
into
push
aas
into
ss
in
pop
dec
int
fmul
outs
push
inc
int
into
into
inc
mov
rol
iret
outs
fild
push
pop
shr
leave
fidiv
sahf
ret
fnop
mov
pop
lock
into
icebp
ss
add
rcl
ja
outs
sbb
popf
(bad)
(bad)
in
add
out
mov
in
push
out
loope
into
in
ins
jnp
in
push
fsubr
push
call
in
pop
loope
xchg
mov
ss
jmp
jmp
push
icebp
ds
(bad)
(bad)
cs
cmc
push
cli
test
cld
add
sti
test
sti
inc
std
lods
bnd
add
sub
and
fwait
mov
push
xor
aas
aas
xor
sbb
pushf
mov
mov
aas
inc
inc
aas
packsswb
xchg
fdivr
ja
pop
inc
aas
pop
pop
xor
and
popf
je
pop
rcr
sbb
inc
inc
bound
stc
test
and
pop
fisubr
ss
popf
mov
stc
push
sbb
shl
jle
sub
adc
xchg
mov
aad
mov
inc
and
sub
lock
add
and
(bad)
leave
fwait
dec
add
xor
push
ror
or
movs
and
pop
fadd
(bad)
inc
push
jp
mov
mov
adc
outs
mov
dec
add
jb
(bad)
mov
ret
les
mov
mov
push
dec
add
test
pop
fs
push
push
pop
ins
mov
shl
jg
mov
dec
inc
dec
dec
dec
or
les
cmp
pop
cmp
inc
push
add
mov
mov
lods
xchg
and
std
ins
stc
dec
push
scas
ret
jnp
inc
imul
inc
jnp
ret
lods
pop
popa
psubsw
test
ror
fiadd
test
ins
ret
nop
pop
fist
cmps
les
dec
pop
mov
sahf
in
nop
imul
rcr
and
pop
dec
push
mov
mov
sbb
push
push
add
add
stos
les
test
pop
mov
stc
scas
loopne
add
push
add
push
inc
jbe
mov
and
fisttp
inc
push
pop
push
adc
pop
add
ret
ins
cmp
stos
xchg
xchg
pop
cwde
mov
test
adc
and
test
mov
pop
mov
jno
push
mov
jl
mov
mov
out
cs
or
and
add
sbb
ret
push
fcom
or
xchg
lahf
mov
(bad)
(bad)
mov
rol
jge
pop
pop
data16
(bad)
jns
jg
xchg
pop
(bad)
out
mov
cwde
add
sbb
pop
pop
stos
ret
fldcw
test
push
les
bound
(bad)
xchg
outs
push
inc
add
(bad)
cmp
mov
test
jae
pop
pusha
bound
push
outs
ja
pop
add
arpl
sbb
mov
cmp
sub
loopne
pop
adc
pop
xchg
aas
cmp
sbb
xchg
sbb
nop
sbb
sbb
mov
pop
daa
daa
and
pop
adc
mov
add
pop
pop
scas
ins
mov
loope
pop
and
push
loopne
push
mov
rcr
xor
aaa
lds
pusha
pop
sbb
pusha
sub
ret
or
sub
cmp
ss
inc
sub
xor
sahf
push
push
adc
cmp
sub
xor
(bad)
mov
in
add
loopne
pop
cld
push
aas
sub
test
or
inc
imul
dec
gs
jg
aas
clc
pop
retf
dec
lock
imul
adc
fdiv
add
scas
shl
or
dec
sub
shl
outs
xchg
and
bswap
minps
cmp
cld
add
add
movs
lahf
hlt
push
call
stc
jbe
push
push
push
xchg
pop
cs
push
add
xchg
push
xchg
shl
push
xchg
adc
push
push
arpl
adc
sahf
mov
xlat
jbe
fidivr
pop
cmps
in
inc
int3
cld
push
(bad)
imul
(bad)
mov
(bad)
pushf
aas
mov
in
and
shr
cmp
cli
mov
sbb
lds
cmp
cmp
cli
push
idiv
mov
pop
pop
test
shl
push
mov
push
sub
outs
push
adc
push
fwait
adc
push
xchg
cmps
push
dec
clc
inc
inc
into
inc
xchg
mov
into
push
repz
nop
cmp
les
add
loopne
cmp
lahf
data16
call
cwde
adc
push
xchg
add
dec
mov
test
outs
daa
ret
dec
movs
ds
pop
into
int
cmp
loopne
outs
or
xchg
pop
mov
or
or
outs
lahf
pop
pop
fwait
jle
in
cmp
outs
push
mov
dec
jecxz
shl
and
loopne
mov
enter
inc
dec
in
loopne
addr16
popf
push
icebp
pop
mov
repz
jg
xchg
push
cdq
add
pop
inc
jg
inc
enter
cli
dec
mov
pop
call
push
adc
setg
out
popa
or
(bad)
adc
push
pop
fadd
mov
inc
xchg
out
adc
jle
pop
cmp
pop
ja
paddb
lds
call
dec
test
add
(bad)
jb
lods
dec
push
ss
jle
ror
jle
mov
outs
pop
dec
mov
add
or
dec
mov
inc
scas
xchg
sbb
int3
inc
mov
pusha
enter
rol
ds
jg
dec
and
pop
xor
or
mov
fwait
or
pop
push
xchg
push
dec
xchg
lock
rep
iret
xchg
or
test
jle
pop
push
pop
test
icebp
pop
pop
push
add
xchg
adc
add
inc
adc
mov
inc
aam
xchg
and
jle
push
test
mov
(bad)
mov
pop
pop
aas
rol
push
mulps
js
adc
adc
(bad)
cs
mov
inc
add
scas
push
test
dec
rol
(bad)
iret
jle
lds
push
inc
sbb
cmc
adc
leave
sbb
push
fwait
or
fcmovnu
push
outs
popf
fisub
and
jb
xor
data16
and
mov
sar
(bad)
jbe
xchg
jg
push
sahf
jno
inc
aas
lods
and
push
cmp
stc
cmp
ins
inc
mov
adc
pop
pop
push
pop
add
movs
and
(bad)
loopne
(bad)
in
repnz
out
push
loop
fdivrp
leave
fnstcw
mov
sub
inc
jl
push
mov
sbb
and
cld
jecxz
adc
enter
cmps
push
pop
inc
pop
mov
pop
test
or
ja
adc
inc
into
inc
jnp
jo
(bad)
sti
cld
cwde
stc
push
sahf
push
in
push
add
inc
(bad)
clc
sti
push
std
adc
mov
jmp
stos
loop
or
xchg
movaps
neg
jg
push
push
std
push
movs
adc
jle
lahf
outs
pop
rol
out
xchg
fild
data16
push
repz
mov
push
xchg
pop
cld
or
lea
dec
xchg
push
xchg
lods
cmp
rol
inc
pusha
push
shl
mov
jb
cmp
mov
sti
mov
idiv
data16
popa
mov
pusha
aad
jg
out
mov
xchg
fistp
push
mov
icebp
icebp
push
mov
push
xchg
mov
inc
mov
daa
add
fwait
add
out
scas
and
mov
hlt
inc
xchg
(bad)
fcom
pop
out
cmp
ja
pushw
(bad)
cld
push
(bad)
bound
cli
add
repnz
movs
jbe
dec
jle
cmp
mov
hlt
mov
aaa
mov
xchg
icebp
jmp
div
inc
fmul
cmp
jg
out
or
pop
sahf
sbb
bound
push
(bad)
push
cmps
loopne
cmp
into
push
inc
sahf
in
pop
jbe
xchg
aas
push
mov
ds
add
mov
adc
push
mov
sti
add
pop
inc
retf
cli
sahf
jg
jnp
cvtps2pd
bound
jmp
mov
sbb
test
or
push
out
jle
lds
inc
pop
std
mov
push
adc
add
inc
pop
jbe
and
cs
add
mov
test
repz
adc
dec
xchg
or
mov
sub
clc
jle
sahf
jo
inc
out
or
std
fstp
adc
push
pop
or
jle
xchg
mov
cmps
or
jbe
data16
sahf
loope
jle
inc
xor
outs
ds
in
cdq
sub
adc
push
ins
(bad)
jmp
(bad)
cmp
(bad)
fcomp
out
(bad)
clc
cmc
icebp
fwait
gs
fs
mov
dec
xchg
mov
dec
in
mov
jle
rcl
inc
add
jg
in
cmp
(bad)
movs
pop
ds
movs
test
int
lock
xchg
jle
in
div
pushf
addr16
inc
jno
dec
seto
hlt
in
pop
or
adc
xchg
mov
pop
xor
jmp
push
push
sub
jne
pop
fisubr
(bad)
pop
idiv
xor
mov
call
shr
jg
jp
(bad)
mov
lea
xchg
arpl
or
imul
mov
in
jle
int3
jo
lds
iret
inc
iret
pop
jmp
and
pop
and
test
(bad)
shl
cs
sub
cmp
jbe
mov
cmp
xor
adc
jle
inc
cmps
cmp
xchg
mov
mov
mov
cli
outs
(bad)
add
rcl
call
dec
or
rcr
jg
and
sar
add
stos
sbb
dec
imul
cmp
add
jne
(bad)
cli
cld
clc
push
out
add
retf
(bad)
push
xchg
push
js
push
(bad)
jle
shl
adc
ss
ds
inc
mov
out
dec
retf
push
pop
int3
dec
ds
mov
inc
sar
mov
pop
js
or
test
out
push
push
xchg
call
push
popa
push
mov
mov
dec
rcl
mov
or
sub
dec
xchg
or
dec
hlt
mov
jle
call
push
ficomp
push
data16
xchg
inc
(bad)
inc
enter
jl
ret
inc
inc
retf
jle
pop
in
rcr
gs
movs
das
inc
mov
and
out
sbb
jbe
outs
cmp
sbb
dec
rol
push
ins
jbe
push
hlt
push
push
pop
fcomi
test
add
test
sbb
jbe
out
jbe
loopne
cmps
shr
mov
(bad)
lds
(bad)
push
(bad)
inc
push
adc
imul
inc
sar
arpl
mov
aas
pop
mov
adc
and
ja
outs
pop
and
or
push
jbe
mov
cmp
outs
push
pushf
mov
dec
rcl
daa
ficomp
push
xchg
pushf
loopne
mov
mov
shl
(bad)
cmps
inc
pop
sbb
(bad)
push
sbb
repnz
popw
fmul
mov
ret
sahf
fild
rol
ret
ret
in
enter
clflush
icebp
dec
push
sbb
xchg
out
arpl
(bad)
out
movs
and
push
xchg
das
iret
out
outs
mov
rol
mov
dec
fsubr
push
xchg
popf
loop
xchg
xor
stos
jmp
rcl
sbb
ds
cwde
fdivr
ret
inc
ins
popa
sbb
in
fwait
ins
mov
lods
call
repz
or
mov
rol
and
sub
jle
loope
mov
fs
pop
cmp
lods
(bad)
sbb
test
(bad)
aaa
int
sbb
into
rcl
dec
inc
dec
xlat
nop
sbb
into
xchg
call
add
push
rcl
jmp
clc
jne
adc
cld
scas
and
inc
lock
stc
daa
cld
fiadd
call
push
mov
inc
enter
push
pushf
cmp
push
lods
jmp
out
push
mov
mov
dec
movs
imul
mov
pop
add
jg
stos
daa
pop
add
add
mov
outs
dec
or
inc
(bad)
data16
pop
iret
jbe
rol
push
inc
inc
push
pop
jae
out
inc
push
fiadd
cmp
fstp
aaa
adc
dec
call
aad
call
(bad)
fcmovu
pop
rol
in
(bad)
rcr
jmp
inc
jl
cmp
(bad)
ss
(bad)
aaa
xchg
fild
xchg
iret
data16
(bad)
ss
ficom
jecxz
mov
in
out
jmp
mov
sahf
xchg
cmp
cmc
or
jg
hlt
jmp
add
and
ins
stos
pop
std
dec
data16
inc
out
fstp
dec
retf
rcl
push
and
fcomp
fnstsw
iret
ins
icebp
enter
dec
fstp
push
dec
push
fcmovu
push
pop
shl
cmp
cmp
xchg
icebp
cmp
imul
dec
dec
dec
fcomp
ds
dec
dec
mov
loopne
es
cmp
jle
sar
pop
xchg
push
cmps
cmp
outs
enter
dec
rol
sahf
int
ror
xlat
push
mov
pop
inc
push
inc
ficom
enter
data16
push
push
dec
inc
dec
outs
sahf
xchg
iret
inc
inc
dec
dec
dec
aas
dec
(bad)
loope
ds
pop
push
inc
or
fstp
push
call
add
inc
(bad)
pop
sbb
out
retf
and
jbe
push
aam
not
pushf
push
sbb
mov
jg
ud1
inc
push
fld
inc
repnz
sahf
xchg
dec
inc
inc
dec
dec
shl
mov
ds
inc
cmp
in
jle
shl
push
into
dec
data16
sti
dec
ror
dec
ret
jae
rcl
not
and
push
jb
mov
dec
loopne
jle
lods
sbb
adc
cmp
push
pop
rcr
adc
cmps
dec
push
fiadd
jg
cmps
in
inc
push
inc
push
and
int
aas
dec
fisttp
mov
jo
lock
add
fnstcw
(bad)
fmul
ins
pop
sahf
idiv
push
test
jbe
repnz
xchg
fst
push
add
jmp
or
dec
pop
(bad)
pop
(bad)
inc
neg
in
push
jg
iret
rol
mov
add
push
popa
fimul
pop
(bad)
ja
xor
mov
fst
out
dec
push
loop
jle
outs
xor
and
pop
arpl
sbb
fbstp
aad
(bad)
addr16
cmp
cmp
out
loopne
dec
pop
jecxz
jle
std
popa
sub
aas
push
push
xchg
pop
loopne
dec
push
(bad)
jg
add
ja
outs
dec
fs
and
mov
push
enter
push
jle
add
(bad)
push
add
jecxz
push
pusha
loope
scas
out
xor
push
xchg
push
ja
mov
shr
dec
push
fsubrp
push
outs
popf
push
pop
push
and
shl
jle
add
test
add
push
adc
loop
push
loopne
or
call
scas
push
pop
loope
push
pop
fucomip
dec
pop
fucomip
pop
mov
in
push
loopne
into
loope
dec
loope
push
popa
loopne
xchg
leave
jae
push
pusha
loopne
jle
add
cdq
dec
add
out
cmp
ja
and
adc
leave
in
sub
add
cmp
stos
and
inc
or
add
pop
adc
mov
dec
pop
ret
jae
jo
punpcklbw
xor
inc
push
ins
cld
aas
xchg
sub
add
inc
lahf
add
(bad)
scas
mov
cmp
push
call
sahf
cs
push
fstp
add
or
inc
fsubr
ror
dec
into
inc
es
xchg
call
mov
push
dec
xchg
sbb
inc
jbe
add
jo
ins
lods
push
dec
pop
inc
push
scas
ss
js
jecxz
lea
mov
add
xchg
mov
jbe
add
fadd
ins
fcomp
push
xchg
dec
data16
loopne
push
cmps
shl
into
adc
push
push
pushf
or
scas
jnp
dec
pop
popf
push
out
js
arpl
or
(bad)
inc
push
push
pop
cmps
pop
lahf
inc
hlt
test
mov
aas
push
cmc
test
mov
lea
pop
inc
pop
movs
sbb
in
sub
cmps
add
fimul
push
add
outs
pop
into
add
push
xor
inc
gs
adc
sbb
ins
test
neg
test
scas
sbb
xchg
push
push
jge
jl
dec
add
sbb
test
push
mov
push
test
sbb
mov
mov
cmps
jbe
mov
push
(bad)
fild
clc
mov
mov
stos
xchg
cmps
ja
mov
lods
add
scas
ins
ret
mov
test
test
dec
mov
inc
scas
xchg
idiv
mov
mov
add
out
mov
mov
(bad)
fcmovnbe
lock
mov
test
es
mov
add
add
mov
stc
add
into
data16
ret
mov
(bad)
dec
enter
adc
push
retf
(bad)
sti
int3
mov
imul
retf
sti
add
int
dec
int
inc
into
stc
mov
ret
cs
stc
mov
fidivr
imul
push
loopne
je
cli
add
loope
cld
fisubr
(bad)
loopne
add
retf
lahf
loope
jle
mov
cld
loop
test
push
std
out
add
in
inc
mov
outs
pop
(bad)
jmp
cmps
fidivr
mov
fild
fsubr
idiv
in
jmp
shr
clc
outs
hlt
cs
hlt
inc
ss
shl
hlt
cli
stc
imul
clc
idiv
hlt
stc
add
and
or
mov
cmp
call
xor
xor
es
add
test
jns
cmp
fiadd
sbb
inc
sub
add
(bad)
inc
pop
inc
aas
add
inc
sti
sub
cmp
xchg
add
inc
cmp
sub
ss
stc
cmp
xchg
pop
cmps
lea
ss
iret
add
dec
mov
mov
cmp
cmp
xchg
pop
inc
cmp
cmp
xchg
xchg
jnp
add
fisubr
sbb
cmp
mov
jbe
push
lahf
popa
cmp
cmp
fwait
dec
cmp
je
dec
push
in
dec
pop
mov
jp
jns
jns
dec
dec
inc
add
cwde
dec
push
in
mov
sbb
pop
popf
dec
inc
(bad)
nop
std
jae
mov
add
sahf
data16
pop
mov
out
jg
aas
mov
imul
xchg
push
inc
dec
sub
nop
inc
dec
popa
(bad)
ffreep
sti
xchg
call
push
add
and
sahf
popf
dec
popf
mov
imul
or
adc
(bad)
jmp
adc
pop
outs
outs
arpl
adc
mov
sbb
push
adc
mov
aas
adc
cmp
and
dec
add
fiadd
stc
sbb
aas
movzx
fisubr
add
sbb
cmp
test
and
sub
jbe
and
add
or
aas
push
rol
adc
sub
lods
inc
int3
and
ret
pop
rol
or
add
loopne
jae
addr16
pop
lock
gs
out
dec
stos
loopne
int3
lahf
fwait
inc
add
bound
pop
add
cwde
adc
push
push
adc
push
call
sbb
test
inc
push
xchg
adc
xchg
push
clc
jmp
jl
inc
enter
cwde
inc
ret
icebp
jne
shr
aas
mov
es
inc
mov
shl
(bad)
push
aas
enter
xor
cli
add
ss
retf
outs
mov
push
in
inc
and
icebp
pop
popf
adc
xchg
xchg
call
(bad)
pop
(bad)
pop
xchg
cmp
scas
jmp
movs
cmp
pop
dec
xor
pop
fmul
jmp
inc
imul
loop
in
(bad)
cmps
sbb
push
(bad)
adc
addr16
xchg
out
aam
xor
mov
inc
inc
ficom
retf
sti
out
pop
push
push
dec
sub
push
cli
pop
addr16
clc
and
push
call
or
mov
les
pop
mov
nop
aaa
(bad)
(bad)
outs
cmp
push
stc
pop
pop
lods
push
ret
cmp
push
xchg
outs
push
mov
pop
leave
adc
xchg
aaa
push
(bad)
push
or
shr
sbb
pop
test
push
mov
xchg
out
mov
push
iret
daa
leave
std
push
sbb
adc
adc
pop
out
mov
ds
push
pushf
out
aam
rcr
push
popf
push
dec
mov
jmp
mov
outs
(bad)
in
cld
pop
sbb
push
ds
test
(bad)
mov
mov
outs
xchg
movs
data16
jmp
call
xor
(bad)
notrack
or
xchg
repz
pop
pop
(bad)
cmp
icebp
inc
orps
ja
inc
mov
test
jmp
add
push
clc
int3
in
(bad)
stc
into
mov
sti
mov
(bad)
(bad)
(bad)
mov
inc
push
(bad)
int
(bad)
popa
pusha
jg
pop
leave
cli
cmps
inc
mov
add
(bad)
test
outs
jl
sub
push
(bad)
std
out
sahf
and
xchg
inc
ja
test
pop
adc
je
push
push
loope
add
inc
fnsave
call
push
out
push
xchg
mov
(bad)
adc
not
adc
(bad)
cmp
or
imul
jmp
cmc
xchg
push
adc
and
cmps
cmp
push
mov
fiadd
sub
dec
push
out
inc
inc
mov
test
and
push
adc
mov
sub
jmp
dec
(bad)
inc
aas
pop
dec
mov
jg
push
stc
hlt
hlt
push
and
jbe
mov
xchg
movs
sbb
arpl
push
sbb
cs
not
imul
jmp
lds
lock
jp
cmp
or
inc
cmp
cld
call
call
mov
test
(bad)
loope
inc
(bad)
sub
pop
sbb
push
movs
push
push
cmp
sbb
(bad)
lods
inc
sub
jg
test
loop
cmps
push
mov
test
mov
retf
out
pop
and
int3
mov
mov
sbb
dec
stos
xchg
stos
inc
test
stos
xchg
(bad)
mov
aam
dec
out
or
lea
cwde
es
(bad)
mov
retf
inc
mov
lods
daa
push
adc
(bad)
mov
jmp
push
dec
movs
es
push
or
push
mov
test
dec
sub
clc
ds
cmp
sub
push
or
inc
mov
and
jmp
add
sub
and
push
push
test
imul
xchg
xchg
sub
gs
inc
push
test
neg
pop
test
push
sub
rol
push
dec
test
sub
mov
sub
ret
inc
mov
add
and
data16
push
mov
mov
jo
idiv
call
fwait
adc
out
pcmpeqw
jge
push
pop
es
push
test
test
call
dec
dec
xor
cli
dec
stos
adc
test
inc
aaa
cmp
jle
ds
jmp
inc
mov
pusha
(bad)
dec
loope
movs
push
inc
test
push
retf
jg
dec
loopne
dec
fiadd
fdivr
mov
sbb
mov
repz
leave
push
loopne
mov
loope
ins
jle
xchg
stos
push
inc
jmp
(bad)
cmp
ds
jmp
pop
clc
push
mov
mov
std
cdq
inc
ins
lods
and
pop
jae
push
cmps
imul
push
(bad)
cmp
div
mov
pop
stos
test
push
adc
inc
call
mov
into
mov
(bad)
mov
stos
cs
mov
mov
cmp
(bad)
cmp
lods
iret
outs
push
jge
(bad)
cmp
loopne
mov
inc
mov
and
cmp
mov
fwait
dec
jbe
mov
ror
fs
pop
(bad)
or
inc
scas
cmp
mov
inc
fild
inc
ds
popf
mov
pop
inc
dec
push
aas
ss
fiadd
cmp
inc
inc
(bad)
xchg
idiv
xor
mov
add
mov
push
inc
xchg
rol
ja
xchg
shr
xchg
mov
imul
dec
in
jle
push
add
add
push
add
push
shr
out
test
sbb
jmp
add
push
data16
daa
(bad)
cli
das
aaa
jmp
dec
pop
fnstenv
pop
mov
ret
(bad)
fdivrp
ficomp
js
xchg
mul
stc
add
and
or
pop
leave
jle
enter
push
(bad)
aas
dec
inc
inc
aam
or
jle
inc
inc
add
loope
push
popa
loop
cmps
jmp
or
dec
or
push
repz
pop
out
in
add
jecxz
inc
add
loopne
add
loop
push
pusha
loop
pop
or
(bad)
ja
push
fsubr
push
(bad)
stos
in
dec
push
pop
loope
inc
add
fnstenv
pop
add
sub
mov
mov
adc
lea
loop
push
popa
loope
push
pop
loopne
inc
cdq
dec
es
add
int3
shl
add
test
pop
cs
or
add
adc
pusha
imul
inc
push
mov
ror
inc
rol
mov
sar
es
cmp
out
add
push
fnsave
ror
data16
push
pop
pop
cmp
aaa
push
push
jp
aaa
mov
or
inc
or
jo
js
push
pop
or
call
cdq
pop
add
pop
and
cmps
pop
popf
push
pop
lahf
adc
adc
mov
mov
pop
pop
(bad)
ss
mov
xor
pop
sbb
pusha
sub
daa
push
mov
add
pop
test
add
add
and
movs
and
push
cmc
ins
sub
dec
mov
dec
dec
sub
push
add
push
lahf
bound
in
mov
repz
add
push
jg
dec
jle
jb
sub
stos
jle
cmp
push
mov
add
or
mov
add
mov
hlt
xchg
add
pop
icebp
in
icebp
mov
add
mov
dec
vcomisd
in
(bad)
rcl
(bad)
std
mov
add
int3
mov
ss
pop
sahf
push
retf
aam
call
retf
les
retf
pop
sahf
ror
push
int
adc
cs
mov
xchg
dec
sti
inc
into
push
inc
(bad)
ror
add
sar
pusha
std
adc
jbe
cli
fcmovu
xlat
add
mov
add
push
mov
sbb
and
and
and
(bad)
inc
int
sub
push
push
push
div
dec
dec
inc
fs
add
inc
push
arpl
dec
(bad)
jg
sub
xor
imul
cmp
gs
cmp
cmp
(bad)
fcmovnu
into
inc
jno
xor
das
add
cmp
dec
outs
pop
pop
bound
aaa
ss
pop
cld
out
dec
inc
inc
jo
push
pop
pop
push
sub
add
dec
popa
pop
ins
dec
dec
dec
std
in
iret
push
push
sbb
or
adc
or
adc
lock
or
popa
sbb
aas
push
jb
sbb
jl
add
adc
jb
clc
push
call
rol
out
rol
imul
hlt
pop
cld
aas
out
iret
add
dec
mov
call
movups
xor
cmp
(bad)
neg
jle
loopne
pusha
aad
outs
push
push
(bad)
retf
dec
xor
(bad)
clc
(bad)
cli
cmp
scas
icebp
into
xchg
inc
mov
add
cwde
into
inc
dec
shr
in
fnsave
inc
(bad)
rol
jmp
xchg
pop
mov
push
pop
cdq
push
pop
cs
fld
sbb
ins
adc
pop
imul
rol
xchg
(bad)
(bad)
(bad)
call
sti
rol
xchg
cld
jb
lahf
sbb
and
jmp
dec
add
and
sbb
(bad)
inc
das
inc
pop
fstp
add
(bad)
mov
sahf
stc
push
iret
xchg
or
inc
jle
mov
add
pop
sbb
xchg
jge
test
les
inc
push
mov
push
push
inc
movs
mov
dec
push
mov
and
jle
ss
push
outs
jmp
pop
mov
rcl
add
jmp
xlat
cs
rol
inc
jmp
inc
adc
inc
xchg
xor
sahf
xchg
pop
call
mov
xor
inc
push
xlat
idiv
inc
adc
jle
data16
and
and
mov
adc
add
(bad)
(bad)
(bad)
dec
call
jmp
jmp
push
call
xchg
dec
xor
test
jbe
xor
push
dec
inc
mov
dec
push
xor
mov
dec
ret
repnz
ja
int
jle
jg
push
mov
push
addr16
outs
jmp
xor
aam
inc
call
jg
inc
inc
adc
scas
fcmovne
push
ficom
call
jle
stos
inc
push
outs
xchg
movs
or
mov
pop
das
mov
jle
add
sub
mov
and
add
add
es
aaa
mov
pop
fwait
cmp
cmp
add
push
inc
add
aam
and
iret
push
add
cmp
sub
cmp
adc
jns
gs
sub
bound
sub
ds
in
inc
mov
inc
call
pop
xor
adc
xor
cmp
cs
mov
cmp
ja
adc
push
push
inc
mov
sub
xor
addr16
cmp
ins
out
adc
cmp
ret
enter
mov
push
xchg
ins
imul
dec
push
inc
ret
int
dec
pop
push
dec
mov
jne
loop
pop
out
jo
jmp
dec
shl
les
pushf
ins
gs
sub
leave
add
xor
movs
in
xor
push
popa
arpl
scas
push
je
and
push
sbb
and
ss
shr
sbb
jo
xor
cmp
mov
xchg
xchg
(bad)
and
rcl
retf
aam
iret
jne
xchg
mov
test
mov
mov
and
out
jmp
fild
loopne
aad
loopne
iret
enter
loopne
and
push
into
retf
fld
fldenv
(bad)
in
clc
mov
xchg
test
sbb
call
hlt
in
fimul
pop
hlt
div
icebp
sbb
jmp
cli
std
lock
aaa
lea
jg
push
enter
pushf
fcomp
pushf
rcr
xor
fcmovnu
shl
es
das
clc
rcl
fcmove
int3
xchg
mov
fld
xchg
xchg
loop
iret
xchg
sbb
(bad)
arpl
pusha
jecxz
bound
push
es
push
xchg
bound
mov
(bad)
mov
sub
sbb
mov
in
pusha
stos
cmp
add
mov
pusha
imul
call
mov
(bad)
mov
fcmovu
icebp
test
mov
inc
mov
mov
lea
and
das
mov
mov
in
rcl
adc
aad
iret
aas
jns
inc
inc
cmc
push
stc
arpl
(bad)
inc
leave
stc
stc
out
std
(bad)
push
imul
outs
adc
fst
xchg
(bad)
(bad)
(bad)
dec
mov
mov
or
dec
outs
rcl
sahf
sub
and
push
and
in
das
mov
call
push
rcr
push
jno
jae
inc
les
inc
sub
lods
mov
(bad)
(bad)
call
mov
fs
imul
cmp
bound
push
jmp
int3
inc
pop
cmp
call
retf
or
scas
rol
inc
sub
sub
ins
daa
dec
sub
push
jo
mov
mov
and
dec
popa
adc
inc
push
int
jmp
sar
(bad)
push
push
enter
cmp
shl
fbstp
scas
cs
(bad)
imul
xor
adc
mov
cmp
neg
ins
int
scas
shl
mov
inc
jo
das
and
cwde
or
in
fcom
sbb
xchg
add
mov
dec
jo
xchg
mov
sti
push
(bad)
(bad)
dec
out
add
aaa
mov
fs
lds
add
out
std
fcmovne
inc
retf
sar
(bad)
(bad)
call
dec
sbb
xchg
mov
push
in
jmp
hlt
push
jbe
push
es
sahf
push
cmp
add
pop
jbe
lods
out
fisub
adc
ds
test
fisttp
loop
sub
(bad)
(bad)
call
gs
and
imul
mov
sub
mov
add
movs
test
mov
(bad)
(bad)
jmp
lds
in
adc
ins
idiv
mov
pusha
shr
mov
sbb
rol
push
inc
dec
imul
ins
shl
dec
xor
(bad)
(bad)
(bad)
call
fiadd
jno
dec
jnp
push
mov
out
mov
xor
jge
sti
add
or
sub
test
and
and
xor
adc
and
popa
hlt
sbb
ret
(bad)
(bad)
push
and
out
sub
inc
fadd
pop
imul
jg
inc
xchg
neg
adc
mov
mov
popa
mov
mov
(bad)
(bad)
push
std
mov
cwde
push
jne
(bad)
mov
xor
leave
and
push
jae
fild
(bad)
(bad)
(bad)
call
jnp
icebp
mov
ins
neg
xchg
dec
sbb
add
aad
(bad)
(bad)
(bad)
inc
gs
add
pop
jmp
dec
data16
sti
mov
and
jbe
jns
xchg
inc
xchg
add
mov
jmp
add
ja
(bad)
(bad)
dec
call
fnstenv
test
and
sbb
add
cld
add
(bad)
call
stos
push
fsubr
rcr
call
dec
fxch
mov
in
cs
scas
mov
xchg
fwait
(bad)
(bad)
(bad)
(bad)
fldenv
push
mov
pop
sti
in
retf
dec
(bad)
loop
cmps
retf
mov
fdiv
jno
test
adc
scas
cmps
aad
addr16
add
and
not
cld
scas
sbb
adc
enter
push
mov
pop
movs
adc
fistp
sbb
popf
ret
xchg
repz
call
cmp
and
into
cmps
je
out
hlt
xchg
out
sub
push
fadd
fldcw
in
mov
(bad)
retf
hlt
retf
(bad)
jmp
(bad)
pop
pushf
sbb
add
ret
inc
(bad)
sbb
popa
or
sub
cmp
ud0
(bad)
jmp
lock
xor
push
or
sbb
mov
(bad)
mov
ins
daa
(bad)
jmp
pop
pop
aad
stos
(bad)
push
add
sub
push
push
(bad)
fild
pop
shr
sub
retf
mov
(bad)
dec
pop
cli
push
xor
or
mov
jge
jo
nop
pushf
jns
sbb
xchg
in
mov
(bad)
(bad)
jmp
mov
mov
inc
ror
dec
popa
xlat
les
xchg
fisttp
stos
dec
(bad)
push
ins
add
call
sahf
movs
cmp
sub
aas
mov
lods
pop
push
(bad)
(bad)
(bad)
call
mov
jl
push
lock
cmp
xchg
push
dec
scas
call
add
push
fidivr
fldcw
leave
clc
inc
dec
movs
jo
aaa
push
mov
icebp
push
jbe
das
push
inc
pop
popa
sahf
jbe
mov
ins
aad
inc
dec
xor
jmp
clc
xchg
fst
fsubrp
enter
inc
sub
(bad)
call
add
or
add
in
sub
or
fst
repnz
and
ret
into
ins
es
sbb
and
fs
xlat
sub
in
xor
cld
add
mov
add
(bad)
(bad)
(bad)
(bad)
mov
mov
or
mov
jo
mov
add
xor
jp
call
mov
loope
jo
ret
aas
dec
cmp
mov
sti
mov
pop
loope
jmp
xor
cmp
(bad)
call
mov
xchg
test
ss
(bad)
push
push
mov
sbb
jb
bnd
cmps
inc
push
mov
sbb
adc
(bad)
(bad)
(bad)
inc
mov
ss
cli
mov
xchg
inc
and
sub
call
sub
xchg
xchg
sub
(bad)
(bad)
(bad)
cmp
or
lods
jae
dec
add
add
mov
imul
push
inc
push
cmp
imul
jmp
out
je
les
cli
jl
(bad)
(bad)
(bad)
call
sub
cwde
shl
out
pop
add
jno
outs
jmp
add
daa
mov
(bad)
(bad)
(bad)
push
cs
push
and
push
dec
inc
xchg
xchg
xchg
xor
pop
out
clc
aam
jmp
push
xchg
push
xchg
add
or
rcr
fcmovnb
(bad)
in
stos
clc
mov
scas
cli
(bad)
push
dec
or
xor
lock
sbb
hlt
nop
jae
stc
mov
(bad)
(bad)
(bad)
jmp
out
push
lahf
shl
jle
push
popf
test
bound
out
pusha
xor
(bad)
(bad)
(bad)
jmp
adc
in
xor
xchg
mov
dec
fild
out
ins
call
(bad)
(bad)
(bad)
call
add
pop
and
sub
push
add
pop
xchg
mov
pop
cld
(bad)
(bad)
call
mov
jnp
nop
sub
add
cmc
xchg
dec
pop
in
nop
jb
(bad)
jmp
and
sar
xchg
je
movs
(bad)
popa
cmp
jecxz
(bad)
(bad)
(bad)
jmp
mov
mov
ins
add
sahf
rol
or
jns
inc
stos
lock
pop
jno
add
(bad)
(bad)
jmp
cmc
ja
mov
cmp
dec
loope
mov
rcl
arpl
dec
dec
sbb
(bad)
dec
adc
test
pop
test
imul
mov
rcl
mov
pcmpgtb
cmp
sbb
sbb
ds
inc
or
(bad)
(bad)
inc
daa
jns
add
imul
ret
or
in
movs
push
ficomp
pause
ja
fcomip
(bad)
inc
cmp
std
dec
push
sub
or
add
mov
call
(bad)
(bad)
(bad)
mov
inc
mov
out
cmp
mov
repnz
inc
call
les
push
adc
push
jg
rcr
or
shl
mov
(bad)
jecxz
call
xchg
dec
std
(bad)
(bad)
call
in
std
jae
test
(bad)
outs
pop
or
cmp
jns
jno
(bad)
(bad)
xchg
(bad)
cmp
nop
push
(bad)
(bad)
push
shr
lods
lods
xchg
mov
and
dec
inc
adc
fwait
mov
call
scas
(bad)
(bad)
(bad)
jmp
hlt
add
push
leave
sub
xor
sub
jl
push
dec
movs
repnz
not
dec
adc
call
and
jle
lods
fld
inc
or
add
mov
fistp
fdivr
or
cmp
push
nop
mov
test
mov
xlat
loopne
and
icebp
test
jmp
dec
mov
(bad)
(bad)
dec
inc
movs
cmp
xchg
ror
ret
int
pop
mov
mov
cld
adc
push
and
push
or
mov
das
mov
int3
fdiv
dec
int3
ja
inc
adc
sub
cld
xchg
pop
inc
mov
cwde
not
mov
dec
mov
popf
add
(bad)
dec
jl
mov
fsubr
arpl
xlat
xchg
(bad)
(bad)
(bad)
fild
jno
jle
inc
sub
bound
retf
aas
push
xchg
push
lea
cmp
(bad)
(bad)
(bad)
(bad)
push
mov
pop
xor
mov
call
clc
push
dec
loopne
mov
cwde
cmps
sub
dec
cli
(bad)
(bad)
(bad)
(bad)
aas
adc
cs
inc
cmp
cdq
es
cmp
or
(bad)
(bad)
(bad)
(bad)
jg
test
dec
mov
cmp
xchg
imul
ja
bound
pop
(bad)
in
(bad)
inc
add
call
cdq
mov
or
pop
sub
and
cli
(bad)
(bad)
call
inc
in
adc
aad
xchg
leave
add
clc
pop
sbb
es
(bad)
jl
test
(bad)
jmp
mov
sbb
xchg
cmp
mov
inc
adc
fdivr
(bad)
(bad)
call
pop
inc
hlt
adc
(bad)
pop
and
pop
xchg
bound
cmps
sbb
inc
aaa
mov
loop
mov
std
(bad)
jmp
dec
inc
nop
gs
sub
out
fcmovbe
adc
sub
repnz
(bad)
(bad)
call
fadd
mov
sbb
dec
cmc
or
cld
loope
sbb
inc
in
jmp
jo
out
pop
sub
push
inc
sti
outs
xor
(bad)
pop
and
push
cmp
call
int
(bad)
and
shr
or
sub
adc
ins
(bad)
(bad)
(bad)
push
idiv
dec
and
ror
cli
out
sti
adc
popa
pop
sahf
push
scas
ins
sub
jl
(bad)
(bad)
(bad)
(bad)
cmp
mov
jmp
mov
ins
clc
sbb
or
(bad)
mov
(bad)
(bad)
dec
lahf
(bad)
je
retf
mov
in
fscale
push
clc
nop
cwde
in
add
jae
push
inc
inc
push
xor
sbb
dec
imul
iret
int
fcom
mov
(bad)
call
ret
inc
xor
mov
mov
pop
(bad)
pop
mov
cmp
nop
jmp
aam
pop
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
adc
aaa
add
sbb
jmp
movs
mov
fadd
(bad)
jmp
mov
xchg
adc
retf
xchg
cmp
nop
outs
loopne
(bad)
dec
jecxz
(bad)
(bad)
(bad)
call
fnstenv
sub
push
xor
jmp
(bad)
jmp
(bad)
div
mov
mov
xchg
cli
shl
call
jmp
dec
push
cmp
cld
out
int
mov
mov
aad
push
(bad)
addr16
(bad)
(bad)
jmp
sbb
push
in
cld
fdivp
cmp
push
popa
inc
or
pop
icebp
(bad)
inc
add
sti
aas
adc
out
push
adc
fstp
pop
xor
(bad)
(bad)
(bad)
jmp
pop
je
adc
adc
aaa
int3
xchg
push
cmps
cmps
ret
movs
pop
aas
fs
xchg
jbe
(bad)
(bad)
jmp
popf
add
jns
std
or
sub
fisttp
lahf
mov
mov
jns
push
(bad)
(bad)
(bad)
(bad)
ds
jp
push
aas
test
popf
pop
aas
fwait
jg
rol
inc
add
mov
xor
(bad)
call
ss
ja
jmp
push
scas
mov
(bad)
ds
mov
sahf
(bad)
(bad)
mov
dec
cli
mov
mov
gs
mov
sub
(bad)
mov
aas
call
hlt
sbb
pop
ins
mov
fwait
inc
loopne
xchg
push
pop
gs
fsub
pop
outs
or
(bad)
(bad)
jmp
add
jo
push
pop
fchs
mov
mov
in
mov
mov
cmc
jmp
or
lahf
dec
push
and
push
sbb
pusha
add
(bad)
(bad)
call
out
add
xchg
xchg
jno
mov
add
hlt
outs
adc
push
clc
out
(bad)
(bad)
(bad)
jmp
mov
cli
and
sahf
and
aas
mov
sbb
sub
push
fidivr
lahf
lods
push
(bad)
call
loopne
cmp
sbb
out
fimul
imul
iret
mov
das
cli
call
and
scas
inc
jns
jg
push
shl
leave
retf
cmps
or
cmc
(bad)
push
iret
(bad)
(bad)
(bad)
call
ror
scas
mov
loopne
cmp
mov
into
rol
repnz
(bad)
(bad)
call
sub
push
jmp
movs
lahf
mov
ins
pop
rcl
(bad)
adc
imul
jno
ret
adc
sub
inc
mov
pop
sbb
aam
movs
push
or
push
inc
sbb
pop
push
test
cmp
inc
xor
pop
inc
push
lock
fstp
dec
dec
lahf
(bad)
inc
cmp
and
jle
jnp
sub
adc
xchg
ss
lahf
cmp
aaa
imul
and
mov
sysexit
test
call
fcomip
jl
pop
adc
call
retf
rcl
scas
mov
push
jbe
ds
mov
add
cs
(bad)
(bad)
(bad)
(bad)
jmp
addr16
mov
add
pop
test
lods
repz
(bad)
repnz
scas
pushf
cwde
pop
inc
push
cmp
push
xor
and
shr
loope
sbb
pusha
out
adc
push
sbb
jns
call
(bad)
call
movs
dec
ror
(bad)
sar
mov
stos
scas
arpl
xchg
int3
adc
inc
bound
cmp
jmp
jmp
les
jecxz
aas
push
or
inc
mov
inc
fucomip
adc
xlat
mov
es
push
and
(bad)
ret
rcr
fdiv
pop
xchg
shr
inc
(bad)
(bad)
(bad)
inc
jmp
xor
adc
sbb
and
sar
mov
jecxz
outs
popa
sbb
(bad)
(bad)
dec
sbb
add
mov
sub
and
sbb
popf
icebp
pop
bound
or
cmp
cmp
fidivr
clc
outs
pop
mov
xlat
inc
retf
jb
mov
add
mov
fs
(bad)
cmovne
pop
xchg
(bad)
aad
jb
(bad)
mov
mov
pop
mov
int
retf
fstp
jge
mov
jmp
adc
int3
sbb
sar
xor
sub
and
aas
dec
mov
mov
xchg
jl
ffreep
ds
cmps
mov
cdq
dec
and
mov
aas
mov
cmp
jp
mov
rol
out
dec
(bad)
(bad)
(bad)
(bad)
jl
shl
jl
push
add
mov
mov
stc
imul
(bad)
push
lahf
mov
sub
in
call
pop
repz
ins
or
add
xor
sub
sar
(bad)
call
inc
dec
call
mov
push
pop
push
add
out
(bad)
(bad)
jg
adc
or
js
sub
mov
bound
add
(bad)
call
cmps
mov
mov
lods
es
pushf
outs
xor
mov
sbb
mov
mov
add
push
mov
rcl
sbb
icebp
push
pushf
and
adc
(bad)
jg
fwait
push
hlt
jo
scas
popa
mov
jle
sbb
retf
ffreep
daa
cdq
pop
cmp
and
and
(bad)
(bad)
(bad)
call
add
fsub
sbb
int3
into
ins
out
pop
inc
mov
ja
scas
xor
(bad)
(bad)
(bad)
mov
jbe
mov
pusha
hlt
(bad)
rol
movs
rol
pop
cli
fstp
pusha
cli
pop
add
jl
js
stos
sub
cmp
xchg
(bad)
(bad)
(bad)
(bad)
fsubr
push
cmp
push
xlat
imul
sbb
lds
sbb
scas
push
(bad)
(bad)
dec
int
mov
mov
cmps
in
dec
adc
movs
fsubr
mov
ret
(bad)
fcomip
dec
sub
xor
jl
cdq
push
push
or
out
ret
retf
inc
(bad)
(bad)
(bad)
jmp
clc
mov
push
mov
jp
xor
aam
sub
fs
mov
shl
adc
(bad)
(bad)
jl
dec
pop
outs
jbe
sbb
leave
push
jg
inc
inc
xchg
loopne
add
jae
push
xor
sar
ret
fs
jmp
mov
xchg
pop
inc
in
pop
cmp
cmp
clc
pop
cmp
mov
inc
(bad)
(bad)
dec
cmp
cmp
shr
ins
imul
push
shl
adc
pop
xchg
and
(bad)
(bad)
push
jecxz
retf
xor
stos
cmp
test
jbe
popf
cwde
stos
cs
mov
or
pop
ss
int
lods
jmp
cmc
out
sub
rol
cli
pop
loop
mov
psllw
icebp
(bad)
dec
and
loopne
mov
pop
mov
or
jbe
aaa
loopne
std
(bad)
dec
pop
xor
add
sbb
xlat
es
repnz
fbld
(bad)
(bad)
dec
rcr
int3
xor
test
sub
jg
ds
cwde
inc
or
inc
cmp
std
xor
jbe
xchg
bound
aam
mov
lock
(bad)
(bad)
jge
cmp
in
fiadd
xchg
mov
adc
mov
hlt
jbe
(bad)
dec
sbb
pop
fstp
or
xor
cld
push
ret
test
fdivr
(bad)
call
pop
cmc
mov
xchg
test
adc
jg
xor
push
sub
dec
push
cmps
or
aam
(bad)
(bad)
dec
xor
cdq
xlat
push
sub
inc
mov
out
enter
xchg
imul
cld
(bad)
jmp
aam
leavew
sahf
sub
or
jb
mov
gs
sub
(bad)
jg
or
hlt
cmp
test
jo
mov
fadd
push
retf
xor
(bad)
(bad)
(bad)
(bad)
sti
inc
inc
popa
adc
xor
cmp
xor
scas
das
jp
test
mov
add
xchg
fwait
dec
aaa
(bad)
(bad)
(bad)
(bad)
inc
xor
outs
xor
or
dec
dec
or
sbb
outs
out
in
pop
jne
data16
sbb
pop
(bad)
rcr
stos
and
mov
fld
mov
dec
sub
cs
(bad)
call
jp
jbe
mov
sub
dec
fistp
pop
or
aaa
lods
dec
(bad)
(bad)
(bad)
push
jo
jg
adc
cwde
addr16
mov
sbb
jo
dec
cmp
and
out
jns
les
and
push
test
pop
int
or
fs
add
(bad)
(bad)
(bad)
cld
sub
mov
xchg
inc
pop
cmps
push
mov
and
xor
call
iret
push
shr
and
dec
dec
rol
xor
jp
(bad)
jmp
push
xor
and
aad
and
xchg
lods
push
xchg
mov
mov
mov
in
aad
lock
dec
rcl
pop
inc
imul
cmp
fild
sbb
popf
cmps
fcom
in
sbb
sub
(bad)
jmp
(bad)
xor
sbb
pop
iret
gs
and
jbe
rol
dec
push
inc
ja
mov
(bad)
(bad)
jmp
mov
or
and
adc
sbb
push
test
push
mov
gs
std
mov
(bad)
adc
xor
fcomp
dec
popf
pop
sar
scas
mov
mov
aaa
cmp
or
mov
inc
shl
stc
aaa
mov
push
cwde
(bad)
(bad)
(bad)
inc
pop
leave
aam
mov
fisttp
push
mov
inc
ins
jns
(bad)
jg
(bad)
pop
cmp
rcl
int
adc
or
(bad)
(bad)
inc
das
mov
sub
add
gs
out
inc
iret
sbb
or
pop
xchg
and
mov
(bad)
(bad)
(bad)
cli
mov
adc
dec
fwait
cmps
add
jns
sbb
sbb
xor
pusha
mov
(bad)
call
push
xchg
xor
push
fwait
jle
jno
add
stc
aam
into
pop
(bad)
mov
push
or
xchg
mov
jmp
and
fistp
stc
inc
in
mov
es
push
mov
sar
mov
fdiv
(bad)
(bad)
(bad)
dec
sub
mov
rcr
mov
inc
push
icebp
xchg
les
xor
out
data16
(bad)
(bad)
dec
pop
sub
sbb
das
inc
iret
aaa
add
test
sub
je
ror
lods
push
imul
out
clc
(bad)
(bad)
push
xchg
cmps
(bad)
fisttp
lods
push
int3
(bad)
ds
fcom
and
mov
(bad)
(bad)
(bad)
(bad)
jl
cmp
enter
hlt
dec
inc
push
and
fadd
bound
cdq
xchg
and
call
(bad)
(bad)
(bad)
jmp
add
push
mov
mov
imul
and
test
icebp
cwde
and
jmp
lds
(bad)
(bad)
mov
outs
scas
(bad)
lds
jg
mov
int
xor
fldcw
adc
enter
sub
sbb
or
call
mov
test
call
(bad)
jle
pop
jns
ins
jge
adc
push
cmps
xchg
and
int3
rcl
xor
hlt
mov
mov
sar
iret
scas
cmp
(bad)
out
movs
iret
inc
aaa
push
inc
and
scas
shl
dec
inc
(bad)
(bad)
(bad)
call
adc
sbb
test
dec
ss
add
test
mov
and
xchg
std
inc
das
and
call
push
push
movs
out
std
mov
shl
xchg
movs
pop
xchg
hlt
xchg
ja
enter
adc
pop
mov
dec
push
inc
jbe
add
mov
les
mov
cmp
jmp
inc
cmp
cmp
gs
jge
outs
jns
push
cs
inc
add
clc
jae
jnp
cmp
or
(bad)
jmp
ds
add
lahf
(bad)
push
xchg
rcr
dec
outs
(bad)
(bad)
jmp
mov
bound
add
psrlw
cmc
sbb
sbb
xchg
sar
(bad)
(bad)
jmp
(bad)
mov
inc
adc
mov
pop
stos
ret
jbe
fs
fcomp
mov
(bad)
(bad)
push
call
xchg
aaa
movs
xor
fcomp
adc
xchg
sub
cmc
jg
ds
xchg
jecxz
ja
enter
inc
int3
inc
push
mov
(bad)
push
inc
outs
cmp
add
mov
push
sub
fnstcw
inc
pop
pushf
(bad)
(bad)
(bad)
dec
xchg
mov
or
leave
fcmovne
sub
rcl
and
mov
sub
js
(bad)
call
std
in
jns
loopne
mov
dec
xchg
loope
iret
mov
div
fst
mov
xchg
xchg
push
(bad)
out
jg
push
das
pavgb
inc
jno
jmp
(bad)
dec
scas
jnp
shr
dec
ret
pop
cmp
pop
std
(bad)
mov
(bad)
xlat
stos
dec
push
mul
inc
pop
iret
push
inc
ds
ficom
cwde
mov
call
push
push
or
sbb
out
ins
test
mov
bound
inc
(bad)
(bad)
push
scas
popa
retf
mov
hlt
mov
mov
cmp
aam
mov
rcl
cmps
pop
and
call
test
ins
loop
cmp
sub
ins
mov
repz
jl
shl
into
aaa
add
xor
lods
jg
jl
je
int
lock
sbb
clc
mov
ja
sahf
aas
pop
mov
push
add
mov
retf
(bad)
(bad)
jmp
jae
cmps
cmc
push
leave
sbb
fnsave
add
in
pop
jmp
dec
pusha
jne
mov
mov
mov
cmp
in
outs
push
or
inc
out
push
pushf
fst
pop
inc
loop
scas
and
xchg
outs
popf
mov
(bad)
jecxz
imul
(bad)
jmp
ss
jno
(bad)
lahf
mov
loopne
inc
add
mov
mov
cwde
mov
mov
(bad)
(bad)
jg
mov
clc
xchg
cmp
adc
aad
xchg
(bad)
adc
push
xchg
xchg
(bad)
(bad)
jg
xor
xlat
test
xchg
or
int3
fwait
adc
movs
(bad)
or
(bad)
add
cmp
ss
pop
movs
mov
xor
mov
pop
int
les
and
les
aad
and
pop
mov
cld
imul
and
xor
call
shr
sbb
cmp
or
sar
mov
push
xchg
mov
movs
mov
movs
sub
sar
pop
xchg
(bad)
(bad)
(bad)
call
jecxz
loopne
add
xor
test
adc
ror
xchg
jae
add
js
scas
(bad)
push
into
js
mov
pop
in
pop
call
mov
aaa
cld
outs
je
jge
je
xor
cld
in
xor
jo
or
pop
inc
mov
call
mov
scas
xor
cli
and
cmp
push
popf
xchg
mov
(bad)
(bad)
or
push
sti
sub
and
cmp
test
sub
push
scas
mov
push
fstp
scas
cli
pop
cmc
pop
push
push
fidivr
or
sti
pop
jb
xchg
aad
daa
push
mov
(bad)
(bad)
(bad)
call
test
shl
loop
mov
pop
test
fisttp
(bad)
mov
cmps
ds
mov
mov
xchg
add
(bad)
(bad)
push
ret
mov
jae
lods
js
pusha
ja
fbstp
adc
dec
retf
(bad)
(bad)
(bad)
jmp
xchg
lds
movs
jo
jle
push
sub
outs
(bad)
in
xor
add
push
cmps
jbe
(bad)
(bad)
call
fild
pop
pusha
cmp
push
retf
mov
dec
psraw
jle
inc
dec
pop
(bad)
(bad)
jg
pop
push
jle
pop
and
lods
xor
jmp
adc
iret
ds
jmp
push
and
arpl
iret
stos
stos
add
sbb
aam
(bad)
(bad)
(bad)
jmp
lock
(bad)
mov
xchg
add
pop
cmps
dec
mov
xor
mov
(bad)
jg
xlat
pop
call
cdq
mov
or
jb
adc
and
add
(bad)
(bad)
dec
repz
mov
jmp
lea
movs
dec
sbb
add
sub
mov
push
or
mov
sbb
push
and
dec
mov
call
lock
pop
mov
pop
cmp
dec
dec
xchg
xchg
stc
(bad)
(bad)
(bad)
jmp
out
mov
mov
jae
scas
stos
mov
setns
mov
xor
pop
sub
out
pop
adc
sbb
cmps
outs
loop
sub
lods
(bad)
(bad)
(bad)
call
jo
js
in
fsub
mov
fcmovnu
push
fwait
mov
arpl
lods
jp
push
inc
inc
or
dec
(bad)
jmp
jmp
les
sti
std
jle
jo
dec
fstp
lods
test
pop
cli
(bad)
fcomip
mov
ret
retf
push
push
test
iret
retf
popa
in
(bad)
(bad)
jmp
dec
cmc
mov
xchg
sbb
cmps
repz
or
out
loopne
dec
ins
or
dec
out
call
(bad)
out
(bad)
scas
mov
scas
mov
stos
aaa
lahf
ficomp
loop
int3
(bad)
(bad)
(bad)
call
daa
inc
das
jmp
in
push
dec
mov
dec
mov
mov
imul
cmp
sbb
mov
(bad)
jmp
cdq
and
mov
dec
popf
xchg
cdq
add
nop
repz
movs
sub
cmp
mov
and
mov
retf
sbb
fbld
push
dec
push
scas
adc
cmc
call
imul
clc
int
and
outs
frstor
dec
ss
sub
mov
cmc
shl
inc
call
dec
(bad)
out
xor
sub
dec
mov
movs
out
fbld
(bad)
(bad)
jmp
(bad)
fisttp
dec
div
pusha
enter
shr
adc
sahf
loop
(bad)
(bad)
cmp
or
mov
cmps
dec
pop
(bad)
mov
pop
mov
(bad)
(bad)
mov
or
mov
ret
fnstcw
adc
jae
(bad)
mov
ins
je
mov
push
stos
jl
out
jl
fiadd
cli
inc
pop
aad
push
(bad)
(bad)
(bad)
dec
xchg
mov
aam
imul
jmp
(bad)
clc
std
mov
or
out
clc
jmp
ficomp
test
jmp
push
cmc
or
inc
(bad)
(bad)
jg
movs
lods
loopne
jns
mov
fidiv
scas
neg
mov
(bad)
(bad)
(bad)
jmp
fsub
jne
fwait
dec
xor
test
jge
pop
mov
fucom
fld
aaa
sbb
cld
dec
adc
xor
jle
ins
dec
lea
xor
into
mov
(bad)
(bad)
(bad)
out
mov
inc
jmp
call
mov
dec
loope
pop
out
leave
adc
stc
jg
(bad)
call
add
jb
adc
push
xchg
loopne
and
test
dec
sbb
xchg
ror
(bad)
(bad)
(bad)
push
sbb
mov
pop
iret
pop
jbe
inc
fwait
nop
jno
sub
cdq
jp
mov
cmp
ja
rcr
cmp
mov
pop
xchg
retf
jo
clc
mov
repnz
arpl
push
pop
or
dec
xor
jg
inc
es
aaa
or
and
rcr
xor
cmp
push
loop
adc
push
ins
test
mov
dec
add
mov
mov
icebp
push
pop
inc
jg
idiv
sbb
adc
inc
cmp
hlt
jle
dec
mov
push
jl
jecxz
into
or
test
(bad)
call
mov
cmp
rcr
outs
repnz
aam
pusha
ins
inc
jg
(bad)
call
dec
xor
fmul
popa
add
sub
test
xor
push
int3
fs
adc
jo
adc
(bad)
(bad)
inc
cmps
js
xlat
outs
cmp
adc
in
mov
mov
(bad)
(bad)
fild
pushf
outs
mov
push
inc
int3
bound
leave
ja
sbb
mov
jmp
fcomp
imul
add
call
int
lock
std
pushf
ins
xchg
aad
fdivr
xchg
(bad)
(bad)
(bad)
jmp
scas
sbb
aaa
adc
cmps
xchg
pop
sbb
push
mov
iret
pop
pop
jecxz
dec
pop
(bad)
(bad)
(bad)
(bad)
cli
sahf
rol
mov
(bad)
push
pusha
xor
fmul
add
push
xlat
xchg
pop
xchg
std
mov
(bad)
(bad)
jmp
jno
pusha
test
std
or
cmps
movs
cmp
inc
add
(bad)
mov
pop
leave
jb
adc
push
cmp
je
mov
jl
add
inc
data16
pop
sar
dec
les
pop
in
int3
aaa
cmp
call
cmp
or
push
shr
out
xor
hlt
(bad)
(bad)
(bad)
push
ficom
cs
(bad)
into
lock
ret
outs
not
jnp
je
imul
(bad)
(bad)
dec
mov
movs
and
out
pushf
ins
mov
pop
mov
jnp
ja
push
or
es
sar
jmp
xor
cwde
and
addr16
push
(bad)
(bad)
dec
call
pusha
xor
lds
stos
dec
dec
dec
sahf
mov
add
jo
xor
add
push
lock
cs
jl
xlat
dec
fwait
jo
lock
icebp
in
(bad)
(bad)
jmp
cwde
mov
mov
popf
addr16
and
mov
jnp
test
jge
inc
hlt
into
repz
test
test
cmp
dec
dec
fs
adc
or
push
aad
(bad)
jmp
push
mov
pop
daa
pop
inc
arpl
sahf
mov
mov
or
adc
fcom
ds
(bad)
add
test
mov
test
imul
lock
push
mov
call
stc
xchg
out
jne
(bad)
(bad)
(bad)
push
sub
scas
push
arpl
sub
stos
aas
jle
and
jae
(bad)
(bad)
(bad)
call
and
daa
movs
push
stc
adc
mov
adc
fist
or
add
(bad)
jmp
imul
xor
inc
xchg
jae
jns
xchg
inc
popa
mov
fisttp
mov
call
sbb
add
mov
mov
pop
clc
and
(bad)
(bad)
(bad)
mov
jmp
mov
cmps
sub
cld
xchg
jae
cwde
stos
iret
sbb
mov
repz
fmul
stos
jnp
(bad)
(bad)
call
mov
push
inc
cs
xchg
aam
mov
int3
test
in
xchg
dec
gs
int3
jecxz
xchg
mov
push
test
(bad)
jmp
jl
lds
loope
leave
push
pop
fldcw
jo
sbb
and
lahf
lock
call
xor
ins
repz
repz
inc
xchg
or
int3
imul
adc
jns
(bad)
(bad)
(bad)
dec
mov
xor
out
pop
jnp
repz
movs
xor
cmps
jno
or
dec
dec
clc
call
jmp
add
(bad)
(bad)
(bad)
cmp
xchg
les
imul
inc
fstp
sub
test
(bad)
jmp
hlt
out
sti
sbb
sbb
sar
jns
mov
enter
scas
push
(bad)
and
les
push
lods
ins
mul
test
adc
mov
psraw
adc
aad
mov
or
sub
inc
cmp
fdivr
ja
jmp
ret
mov
scas
cmp
push
std
(bad)
(bad)
inc
adc
pop
sbb
outs
ds
cmp
test
xchg
out
jp
stos
push
xchg
push
lods
aas
cmc
(bad)
call
add
and
xlat
pop
mov
push
je
sub
dec
(bad)
fild
cmp
popa
xchg
cdq
cmps
aaa
push
xchg
ins
test
lea
adc
xor
movs
fs
push
or
lahf
sahf
adc
mov
in
cmp
(bad)
(bad)
cli
hlt
jne
mov
mov
sub
out
sbb
pop
(bad)
pop
inc
lahf
sub
std
(bad)
(bad)
jmp
mov
jno
sub
sub
in
inc
sub
out
(bad)
push
std
ja
jb
jbe
and
push
ja
sbb
push
in
test
ret
(bad)
(bad)
(bad)
jmp
mov
xlat
mov
sar
push
adc
sbb
test
(bad)
jg
mov
fst
mov
inc
div
out
movs
dec
clc
nop
pop
add
inc
daa
outs
jg
(bad)
(bad)
fcom
sbb
pop
mov
pop
jne
sbb
mov
enter
(bad)
call
(bad)
std
shl
loope
loope
call
push
and
inc
mov
(bad)
(bad)
push
or
idiv
sbb
leave
jnp
dec
leave
aad
aad
fnstenv
adc
xchg
jns
(bad)
mov
xchg
sub
lahf
xlat
mov
or
or
(bad)
dec
xchg
xor
inc
mov
pop
mov
jne
jmp
fcmovb
sbb
add
in
inc
xchg
(bad)
(bad)
(bad)
call
dec
pop
sub
in
add
xor
shl
inc
aam
ins
(bad)
(bad)
(bad)
fistp
popa
jp
pop
mov
mov
loope
inc
push
aas
jo
xor
and
and
(bad)
(bad)
call
mov
mov
push
push
mov
ja
es
pop
leave
mov
or
inc
dec
sbb
(bad)
(bad)
(bad)
call
loope
sbb
xor
mov
(bad)
lds
ja
ds
and
icebp
(bad)
push
xor
sbb
xchg
pushf
call
pop
xlat
bound
jg
or
push
(bad)
cli
add
dec
xchg
pop
inc
inc
repz
popf
scas
scas
pop
out
enter
adc
jmp
mov
xchg
and
scas
mov
xchg
fs
add
or
or
ret
cmps
adc
mov
inc
lock
das
retf
pop
jae
sbb
mov
ja
(bad)
(bad)
mov
cld
mov
shl
pop
lahf
mov
hlt
js
xchg
cli
ds
mov
(bad)
dec
push
das
mov
sub
inc
popa
das
ja
sbb
mov
js
mov
pop
cwde
je
sub
dec
(bad)
jge
pusha
mov
cmp
mov
add
cs
(bad)
(bad)
jmp
daa
pop
dec
dec
dec
or
mov
or
mov
mov
or
cli
cmps
cli
in
(bad)
fnsave
jmp
sbb
xor
(bad)
(bad)
out
pop
iret
shl
iret
daa
ja
cmps
mov
add
popf
xor
div
mov
(bad)
(bad)
jmp
jmp
popf
rcl
sbb
mov
call
(bad)
dec
loopne
mov
inc
inc
clc
add
rcr
(bad)
(bad)
(bad)
push
sbb
outs
lds
dec
push
pop
nop
inc
or
out
stos
xlat
sti
gs
scas
cmp
ins
popf
jle
push
bound
mov
jge
cmp
hlt
adc
mov
and
xchg
pop
xor
(bad)
(bad)
jg
jge
ss
inc
push
jae
xchg
pop
arpl
fwait
xchg
sub
(bad)
(bad)
inc
loopne
enter
mov
lea
sbb
stos
aaa
out
popf
pop
sbb
test
shl
push
adc
xor
enter
iret
jne
fdiv
mov
ss
inc
sbb
in
std
mov
call
out
mov
push
je
cld
xchg
mov
and
inc
pop
ficomp
xor
leave
cmp
lahf
cmp
mov
nop
(bad)
xor
cmp
sbb
lea
(bad)
(bad)
(bad)
(bad)
inc
sti
test
cmp
or
mov
idiv
(bad)
(bad)
(bad)
call
sbb
sbb
and
jo
push
mov
xrelease
xor
and
pop
mov
(bad)
icebp
(bad)
adc
fsubr
(bad)
(bad)
call
sub
mov
retf
dec
jge
std
pop
bound
push
sub
xchg
adc
add
outs
fmul
out
sbb
sbb
ret
sbb
(bad)
(bad)
(bad)
(bad)
jmp
jbe
jl
push
stc
pop
push
cmp
cld
int
jo
ret
mov
sti
popa
out
not
(bad)
(bad)
(bad)
jmp
sub
mov
fmul
outs
jne
xor
xor
pusha
pop
push
mov
movs
movs
outs
add
sub
dec
pop
call
(bad)
mov
ret
mov
test
sbb
pop
xchg
jbe
(bad)
(bad)
in
sar
mov
fist
int3
push
sub
mov
mov
sbb
test
pusha
into
jl
sbb
mov
cmps
(bad)
retf
(bad)
call
push
mov
bound
jmp
pop
setl
int3
cmc
xor
pop
loopne
(bad)
jl
pop
fs
sub
push
dec
pop
sbb
pushf
into
inc
jb
in
or
(bad)
(bad)
dec
dec
mov
(bad)
loop
jge
mov
outs
mov
xor
into
or
fadd
cwde
add
ja
push
sbb
out
cmps
sar
out
cmps
mov
push
inc
(bad)
imul
dec
loopne
sub
sub
jge
leave
test
cmp
mov
pop
pop
jecxz
(bad)
(bad)
dec
mov
cmps
inc
add
xlat
or
xlat
fcom
mov
rcr
(bad)
(bad)
jg
retf
fsubr
aas
or
(bad)
xchg
(bad)
xor
lahf
aas
retf
xor
add
(bad)
(bad)
inc
in
inc
jp
retf
cmps
mov
ret
push
(bad)
imul
or
xchg
imul
mov
clc
(bad)
mov
je
xchg
push
loope
outs
je
outs
push
aam
sbb
repz
(bad)
(bad)
jmp
das
pop
mov
movs
push
int
retf
xor
dec
lahf
clc
push
pop
pop
fiadd
(bad)
(bad)
(bad)
(bad)
mov
cmc
mov
mov
scas
inc
ret
and
mov
xchg
cmps
inc
xchg
inc
les
lods
sbb
jnp
lea
dec
jnp
fldenv
adc
cmps
ins
xchg
cmp
in
or
push
fidivr
icebp
stc
jae
retf
in
pop
pop
inc
scas
bound
aam
xchg
cmp
(bad)
(bad)
repz
popf
add
sub
enter
fucomip
cmp
pop
lock
pop
inc
bound
(bad)
(bad)
(bad)
(bad)
jl
mov
push
xor
sbb
cdq
sub
ret
cwde
inc
mov
(bad)
(bad)
push
or
repz
xor
adc
or
mov
ret
out
dec
lock
xchg
(bad)
(bad)
(bad)
jmp
aas
add
pop
and
xchg
push
int
(bad)
(bad)
shl
(bad)
(bad)
call
shl
dec
fs
mov
mov
fisub
add
iret
mov
xchg
shl
mov
lock
(bad)
mov
sbb
in
pop
xor
jmp
rcr
add
push
rcr
retf
mov
mov
fidivr
(bad)
(bad)
dec
jnp
xchg
test
xor
shl
cld
cmc
pop
into
or
dec
inc
push
mov
(bad)
inc
shl
clc
or
xchg
dec
xor
xor
aad
daa
mov
ja
cmp
idiv
add
aaa
aad
push
jg
arpl
jg
repz
outs
hlt
dec
xor
cmp
xor
outs
cld
(bad)
xchg
mov
inc
in
out
dec
or
aam
push
mov
scas
cmp
xchg
xchg
call
push
test
outs
or
cmp
push
(bad)
pusha
movs
push
ja
adc
mov
gs
call
pop
sub
and
mov
dec
sub
xchg
mov
jbe
dec
jge
adc
dec
fs
xlat
dec
pop
lock
mov
call
and
mov
(bad)
jg
stos
dec
dec
nop
push
dec
scas
xor
cmp
sar
(bad)
(bad)
xor
pop
popf
ins
(bad)
(bad)
(bad)
push
imul
xlat
or
ret
(bad)
dec
sbb
xor
push
xchg
mov
xor
and
(bad)
(bad)
push
ror
pop
shl
test
dec
pop
shl
add
(bad)
jg
xor
cmps
fisttp
mov
push
aaa
jle
push
aas
inc
mov
retf
mov
out
push
inc
push
push
pop
sub
cmp
lahf
imul
inc
or
inc
(bad)
(bad)
cmp
test
sar
push
xor
sub
pop
mov
push
pop
(bad)
(bad)
(bad)
jmp
sbb
xlat
sbb
out
repz
into
scas
or
js
not
mov
dec
dec
(bad)
dec
aad
jl
(bad)
(bad)
jmp
(bad)
nop
rcl
mov
cdq
cmps
je
push
cmp
push
aam
cdq
mov
jno
cmp
aas
sub
je
jmp
xlat
out
xor
jmp
xor
jge
imul
dec
gs
int
add
cmp
and
dec
push
mov
out
test
ficom
xchg
scas
cwde
pop
(bad)
(bad)
(bad)
call
fcmove
dec
xchg
stos
test
mov
jbe
in
dec
adc
sahf
mov
outs
mov
inc
sbb
(bad)
(bad)
jmp
movs
out
xchg
xchg
hlt
mov
pmaxsw
iret
jg
sub
(bad)
(bad)
(bad)
(bad)
jle
push
and
ror
push
jns
clc
lahf
jmp
in
cld
pop
shl
inc
pop
lock
(bad)
call
cvtdq2ps
lahf
cli
xchg
xor
fdiv
arpl
push
mov
repnz
or
test
and
pop
icebp
jnp
sub
aaa
dec
sub
cmp
sbb
cli
or
call
xchg
push
scas
ficom
mov
xor
stos
mov
stos
sub
(bad)
(bad)
dec
outs
int3
rol
push
inc
lahf
test
repnz
mov
(bad)
push
xchg
cmp
push
add
out
and
cmp
or
inc
cs
lea
jle
das
mov
(bad)
sub
fadd
and
add
ret
push
loop
bound
mov
lahf
loopne
push
adc
push
aad
xchg
sbb
and
(bad)
out
mov
jmp
je
adc
jl
cmp
mov
push
pop
jecxz
mov
sbb
aaa
sub
mov
(bad)
jmp
fs
push
stos
imul
iret
leave
es
push
jp
scas
mov
mov
add
(bad)
dec
xchg
or
pop
ins
in
cwde
add
(bad)
xchg
push
sub
rol
(bad)
(bad)
(bad)
jmp
inc
repnz
jo
ins
arpl
push
and
jecxz
ss
leave
mov
ins
leave
sbb
sub
(bad)
(bad)
mov
inc
rcl
push
out
xchg
popf
scas
xor
in
loopne
(bad)
(bad)
(bad)
call
loope
jmp
push
pop
jnp
mov
lods
mul
ret
(bad)
(bad)
(bad)
jmp
mov
jae
movs
add
jl
mul
pop
fbstp
xchg
jge
adc
sbb
xchg
sub
jmp
ret
jns
xor
inc
fisttp
push
mov
aas
push
adc
cmps
cs
out
xlat
iret
repz
push
test
sti
rcr
xchg
das
jb
inc
sub
lea
mov
cmp
dec
jmp
stos
push
test
push
jg
in
(bad)
ds
sbb
stos
xchg
mov
cmps
(bad)
(bad)
mov
sub
sbb
inc
inc
xor
mov
(bad)
dec
or
out
inc
in
xlat
mov
out
stos
pop
imul
int
cmp
pop
xor
(bad)
(bad)
(bad)
call
pop
mov
idiv
push
in
fwait
adc
stos
cmps
iret
ficom
in
sbb
(bad)
(bad)
(bad)
(bad)
fnstenv
and
or
add
cmp
pop
repz
or
sub
push
inc
pop
movs
cmp
push
call
jne
retf
dec
xchg
fdivr
retf
lahf
bound
cmp
and
xchg
repz
rcr
data16
loopne
and
rol
mov
icebp
jle
jg
mov
data16
imul
iret
mov
test
call
jmp
push
sahf
jecxz
(bad)
cmps
ss
and
xchg
fs
dec
push
rol
(bad)
inc
dec
ret
mov
sub
mov
cmp
cdq
dec
cmc
test
dec
and
call
(bad)
call
outs
sub
(bad)
lods
push
add
ror
inc
mov
(bad)
fistp
inc
(bad)
fdivr
and
pop
push
mov
cmp
scas
xor
or
(bad)
(bad)
(bad)
cld
push
mov
mov
adc
push
out
aad
adc
scas
dec
xchg
scas
fcom
shl
sub
adc
and
or
(bad)
xchg
iret
mov
sub
test
int3
or
add
lock
cmps
dec
dec
pop
add
ss
mov
push
clc
bound
adc
and
jbe
sbb
repnz
(bad)
(bad)
call
xor
mov
(bad)
stos
shl
loopne
xchg
out
ret
push
aam
cmps
mov
mov
in
cmp
(bad)
(bad)
std
inc
or
mov
push
mov
leave
call
mov
jecxz
test
(bad)
fld
mov
jmp
mov
int
bound
jecxz
outs
mov
rcr
mov
mov
mov
cmp
fstp
sub
or
sub
nop
dec
clc
inc
mov
loopne
ja
(bad)
push
mov
jecxz
out
dec
xor
cmp
sbb
mov
mov
(bad)
(bad)
push
cli
sbb
loop
jle
jle
test
push
fwait
pop
sbb
(bad)
xchg
jl
pop
push
xchg
out
(bad)
(bad)
(bad)
call
sub
fcom
(bad)
cdq
retf
inc
jmp
sar
das
xchg
movs
pushf
rcl
(bad)
cmp
(bad)
fsubr
retf
pop
cmc
outs
inc
movs
gs
jb
push
mov
(bad)
(bad)
(bad)
inc
cmc
pop
xor
or
xchg
test
cld
scas
shr
loop
add
xor
cwde
jmp
sub
popa
xchg
sub
cmp
adc
scas
jnp
aam
pop
lock
dec
push
push
add
xchg
dec
add
jnp
adc
aaa
(bad)
(bad)
(bad)
jmp
jge
fstp
mov
call
(bad)
sti
mov
mov
addr16
mov
(bad)
(bad)
dec
or
mov
fadd
dec
out
jmp
ret
in
cli
pop
xchg
(bad)
and
sub
inc
pop
sub
(bad)
(bad)
jmp
stos
movs
sub
nop
sub
pshufw
mov
cmps
sbb
mov
(bad)
call
std
shl
sbb
jg
xchg
pop
in
sbb
ror
xchg
mov
xor
(bad)
(bad)
cmp
push
adc
cmp
xchg
and
sub
fmul
int
(bad)
(bad)
(bad)
inc
jae
outs
and
jns
sti
stos
lock
retf
data16
scas
add
(bad)
mov
icebp
sub
imul
sbb
(bad)
adc
jle
fiadd
(bad)
call
or
pop
xchg
xchg
sub
jns
sub
loopne
push
mov
(bad)
(bad)
(bad)
inc
into
push
pop
adc
and
cwde
scas
ret
test
jns
jb
adc
mov
call
mov
push
fnstsw
xlat
xchg
cmps
cld
loopne
sub
xor
sub
idiv
icebp
aaa
inc
jg
icebp
push
mov
adc
daa
fs
mov
rol
call
arpl
jp
pop
(bad)
lea
dec
outs
xchg
les
push
jmp
sahf
popf
jl
test
and
sti
or
sbb
out
sbb
add
mov
sub
(bad)
into
pop
push
sar
jecxz
jne
mov
jmp
mov
fisub
(bad)
mov
mov
pushf
idiv
(bad)
(bad)
out
push
rcr
repz
icebp
mov
das
dec
fdiv
stos
rol
pop
cld
fnstcw
pop
lock
(bad)
(bad)
(bad)
jnp
stos
ja
xchg
test
dec
mov
repz
cmp
sbb
lds
dec
enter
pop
adc
(bad)
jmp
sahf
and
out
or
fisubr
add
xor
bound
push
xor
dec
jg
or
pop
sbb
xchg
outs
jb
xchg
pop
iret
mov
call
xor
fs
popf
fdivr
jb
pop
sub
bound
aad
loop
(bad)
neg
xchg
adc
(bad)
(bad)
(bad)
(bad)
mov
(bad)
std
leave
ret
das
bound
inc
fild
cmps
fldcw
push
jl
int
fwait
fwait
push
icebp
(bad)
(bad)
inc
dec
jmp
popa
jge
xchg
cmp
mov
push
cld
pop
movs
daa
test
mov
out
sti
and
adc
loop
sahf
or
cld
(bad)
inc
cmps
sti
xor
(bad)
daa
mov
xlat
and
(bad)
(bad)
mov
(bad)
(bad)
fild
out
loope
and
hlt
dec
jmp
add
mov
cmp
in
(bad)
(bad)
call
ins
adc
mov
dec
inc
inc
mov
imul
pop
mov
(bad)
(bad)
std
lahf
mov
imul
cmps
loope
iret
xor
daa
adc
pop
rol
jl
dec
not
(bad)
jmp
dec
pop
mov
and
pop
jmp
mov
jmp
or
mov
loop
movs
into
mov
(bad)
stos
scas
(bad)
sbb
sbb
test
(bad)
mov
push
pop
jle
xchg
pop
lods
push
inc
push
cmps
das
mov
pop
(bad)
(bad)
jmp
push
stc
int3
aaa
mov
hlt
and
mov
xor
hlt
call
cmps
outs
adc
(bad)
call
mov
sub
sbb
pop
mov
xor
mov
cs
lock
(bad)
jmp
inc
ins
lods
shl
retf
pop
aam
ds
xchg
xchg
scas
(bad)
(bad)
fucomip
push
xchg
shl
loope
fmulp
sbb
mov
std
loopne
add
push
inc
ins
ret
cdq
sub
aas
imul
push
ret
jmp
cmp
or
adc
(bad)
(bad)
(bad)
in
cs
fiadd
xchg
cdq
fs
push
std
xchg
mov
js
loopne
push
mov
(bad)
(bad)
push
lods
push
jbe
mov
cmp
mov
or
and
cdq
ins
push
and
mov
cdq
shl
xchg
(bad)
(bad)
(bad)
jmp
adc
mov
xchg
xchg
fild
push
dec
and
out
sahf
in
(bad)
or
(bad)
call
and
xor
ins
in
and
pop
scas
add
mov
adc
mov
jne
movs
push
pop
and
dec
mov
pushf
adc
adc
mov
(bad)
(bad)
(bad)
jp
and
cwde
pop
cmps
pop
sbb
imul
mov
mov
(bad)
lahf
inc
(bad)
(bad)
dec
cmp
push
mov
sbb
repz
sbb
sbb
(bad)
(bad)
(bad)
inc
dec
(bad)
sbb
ror
test
push
push
cmp
xlat
pop
push
jmp
(bad)
push
push
dec
xor
out
mov
push
int3
jecxz
inc
aam
jmp
jmp
(bad)
(bad)
(bad)
push
out
pop
call
dec
jg
and
jl
push
gs
icebp
sbb
js
(bad)
jmp
rol
into
add
sbb
mov
int
call
(bad)
(bad)
mov
inc
push
xchg
mov
mov
fstp
or
push
icebp
mov
out
popf
imul
push
call
sbb
or
lods
aas
and
xlat
and
jle
(bad)
(bad)
(bad)
(bad)
push
fisub
inc
mov
retf
xchg
movs
inc
ror
test
(bad)
stc
push
mov
lock
fisub
sar
push
cld
sub
scas
ror
lods
push
adc
mov
fmulp
add
xchg
sar
(bad)
(bad)
(bad)
jge
ss
or
push
mov
jns
das
add
add
pop
stc
lods
cwde
mov
lds
inc
mov
nop
cmp
cmp
pushf
shr
inc
jl
(bad)
(bad)
jg
ins
inc
dec
push
mov
test
and
das
sub
pop
pusha
or
jmp
hlt
ins
ins
fisub
(bad)
dec
retf
cmp
test
or
jle
xchg
(bad)
stc
out
add
shr
call
mov
push
push
aam
pop
imul
(bad)
call
jg
jb
add
fiadd
ror
in
stos
jge
xchg
adc
(bad)
(bad)
(bad)
(bad)
jns
jb
outs
popf
hlt
mov
push
add
and
std
sbb
cli
fcomi
stc
sbb
dec
neg
add
dec
dec
xchg
jmp
add
stos
scas
outs
movs
hlt
jg
bound
push
dec
add
xchg
int3
xchg
cmp
(bad)
(bad)
push
adc
repz
sti
shl
dec
inc
adc
out
pop
dec
hlt
or
push
xchg
imul
loopne
(bad)
push
fistp
loop
je
mov
xchg
jle
shr
adc
mov
pop
lock
mov
scas
fmulp
inc
add
jmp
mov
(bad)
call
les
lock
ins
aaa
push
stos
jle
retf
jns
les
jmp
mov
(bad)
(bad)
call
in
dec
xlat
pop
mov
lahf
pusha
(bad)
and
dec
push
adc
add
(bad)
and
pop
pop
fs
rcr
out
(bad)
(bad)
(bad)
call
sbb
add
or
push
push
gs
pop
shl
es
sar
sbb
jecxz
sbb
call
lahf
sahf
xchg
sbb
and
cmps
and
aas
adc
xchg
imul
jle
dec
shl
adc
mov
aaa
pop
mov
(bad)
(bad)
(bad)
jg
adc
xchg
push
aas
popf
cwde
out
fcmovnbe
sub
xchg
ret
add
mov
add
(bad)
mov
sub
(bad)
push
popf
cmps
loop
add
lods
push
sub
adc
repnz
cmp
out
clc
lds
(bad)
(bad)
jmp
and
dec
inc
xchg
sub
and
(bad)
jmp
(bad)
and
lods
(bad)
(bad)
(bad)
dec
sti
xor
fucomp
or
ins
lds
mov
and
mov
(bad)
(bad)
(bad)
call
out
jmp
mov
das
cmp
mov
dec
push
aas
mov
sbb
push
iret
hlt
lahf
push
cmp
seta
(bad)
(bad)
(bad)
jnp
aad
movs
pop
push
test
jne
and
mov
dec
jl
or
aam
repz
nop
test
push
pop
call
mov
lahf
sti
add
push
scas
dec
sahf
fisttp
mov
xchg
push
jno
mov
xor
loopne
sar
dec
push
cmp
test
sar
in
into
fwait
imul
sbb
push
shr
hlt
sahf
fsubr
adc
adc
hlt
daa
lahf
in
aad
lock
mov
daa
add
mov
outs
mov
mov
icebp
enter
jnp
adc
(bad)
(bad)
mov
add
sub
sbb
inc
out
fdivr
(bad)
js
fcomip
call
call
iret
push
shl
pushf
cmp
stos
(bad)
(bad)
(bad)
dec
dec
outs
leave
(bad)
fcom
and
int
or
in
xchg
adc
mov
(bad)
jg
mov
mov
(bad)
mov
cs
pop
xchg
call
(bad)
jmp
loopne
sbb
or
retf
xor
dec
or
inc
(bad)
out
es
adc
sub
(bad)
jg
xor
push
cs
icebp
das
jo
mov
in
xchg
and
add
xor
dec
(bad)
inc
and
mov
sbb
dec
movs
popa
aaa
shl
(bad)
(bad)
jg
push
outs
ins
jl
push
xchg
popa
jmp
and
mov
inc
data16
(bad)
(bad)
dec
mov
push
mov
test
cmc
je
jno
dec
add
xor
ret
mov
loop
(bad)
call
idiv
in
in
inc
js
mov
jmp
(bad)
(bad)
fbstp
xchg
inc
imul
mov
jmp
push
jne
call
loopne
arpl
mov
and
(bad)
fdiv
mov
or
mov
enter
(bad)
jmp
or
scas
inc
bound
add
dec
mov
pop
mov
mov
adc
pop
push
xchg
icebp
ret
jns
mov
jb
shr
(bad)
(bad)
(bad)
jmp
mov
push
mov
push
mov
iret
mov
aad
lahf
gs
sbb
jmp
pop
mov
scas
xor
scas
(bad)
cwde
dec
cmp
test
pop
mov
pop
mov
(bad)
aam
test
push
(bad)
mov
fsubrp
jp
(bad)
(bad)
(bad)
call
xchg
mov
add
pushf
outs
xchg
cmp
mov
sbb
sar
(bad)
(bad)
push
nop
loop
fwait
leave
jae
inc
jge
inc
xchg
xchg
jae
pop
cmp
or
frstor
(bad)
(bad)
dec
fsub
sti
clc
(bad)
mov
repnz
or
popa
mov
dec
add
int
ss
es
(bad)
dec
mov
iret
add
into
shl
mov
(bad)
(bad)
(bad)
jmp
pop
xor
mov
inc
inc
bnd
(bad)
not
adc
ins
imul
daa
call
clc
(bad)
(bad)
(bad)
dec
call
stos
inc
cmps
mov
and
mov
mov
not
(bad)
push
stc
sbb
div
(bad)
mov
loopne
push
lods
int
or
bound
add
mov
pop
mov
inc
push
jge
push
test
lock
or
mov
or
(bad)
jmp
xor
or
xor
push
test
test
xchg
push
inc
mov
int3
sub
call
(bad)
inc
push
ret
xchg
out
mov
stos
std
push
inc
jg
leave
clc
(bad)
fidivr
sub
stos
cmp
(bad)
(bad)
push
xlat
(bad)
mov
repz
outs
test
cmc
test
in
add
mov
push
ret
stc
pop
mov
cld
(bad)
push
sub
int3
sub
inc
add
movs
in
xor
test
and
xlat
(bad)
(bad)
jg
cdq
cmc
lahf
jns
xchg
mov
xor
test
mov
(bad)
and
gs
(bad)
(bad)
(bad)
call
adc
mov
xchg
dec
pop
fisttp
cs
and
retf
pop
fcom
loopne
(bad)
popa
(bad)
(bad)
inc
mov
loop
test
xor
jbe
dec
loope
pop
push
cmp
push
mov
jbe
pop
xlat
outs
cmp
pop
sub
add
outs
lahf
(bad)
jno
fidiv
push
int
pop
cld
inc
ss
mov
cli
addr16
movs
arpl
jmp
pop
aas
pmulhuw
mov
repz
mov
jb
rcl
in
adc
adc
(bad)
(bad)
(bad)
dec
lods
xlat
pop
inc
xchg
pop
adc
sbb
push
in
pusha
ins
jg
movs
or
mov
pop
adc
dec
cdq
sahf
fcomp
dec
mov
xchg
aaa
cmc
push
adc
imul
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
shl
push
scas
lds
adc
aaa
push
in
lock
jbe
cld
repz
(bad)
inc
lock
cmp
in
push
push
sub
mov
mov
fdiv
cwde
pop
lahf
pop
lods
pop
inc
aaa
mov
jmp
push
aam
pusha
in
loop
rcl
(bad)
dec
push
not
dec
jno
push
and
(bad)
pop
loope
sbb
aam
inc
mov
(bad)
(bad)
(bad)
(bad)
jg
cli
icebp
aas
pop
je
int
fucomp
(bad)
leave
shl
outs
jbe
inc
jmp
xchg
(bad)
(bad)
cmp
cli
push
xor
je
add
jecxz
xchg
adc
in
arpl
xchg
push
dec
cmc
xchg
out
inc
(bad)
(bad)
(bad)
push
or
ror
add
popa
or
push
cmps
xor
sti
mov
mov
shl
das
push
int
push
mov
pop
repnz
or
mov
sahf
scas
add
(bad)
dec
xor
xchg
shr
test
aad
movs
in
aas
aas
xor
fsub
addr16
(bad)
push
mov
jno
xor
mov
jnp
mov
inc
or
xchg
push
(bad)
(bad)
(bad)
inc
(bad)
push
out
add
mov
fs
push
hlt
leave
mov
cmp
jg
(bad)
dec
pop
jmp
vmovupd
icebp
mov
enter
jp
test
xor
ja
ins
aaa
loopne
ins
push
ins
adc
stc
fisttp
stos
push
mov
pop
dec
sbb
inc
sti
fmul
jp
popf
(bad)
(bad)
(bad)
(bad)
inc
js
push
sbb
mov
or
push
ss
ins
push
into
jae
pop
fmul
mov
(bad)
(bad)
(bad)
call
aaa
jg
test
shr
retf
jo
dec
jb
add
mov
ins
(bad)
(bad)
(bad)
(bad)
mov
or
imul
and
xchg
(bad)
call
in
fnsave
and
lea
int3
adc
icebp
cmp
fcomp
int3
dec
(bad)
(bad)
jg
or
jae
js
leave
(bad)
nop
jno
ds
movs
inc
loope
fwait
scas
int
test
idiv
mov
(bad)
(bad)
(bad)
out
add
cmp
push
and
popa
fsub
shl
inc
or
pop
call
adc
out
adc
test
jge
mov
rcr
inc
jo
movs
stos
fild
in
mov
(bad)
inc
sbb
dec
(bad)
jno
and
cmp
push
aas
mov
pusha
inc
dec
out
fs
loopne
call
fistp
aas
or
or
pop
and
xchg
sub
jmp
(bad)
(bad)
inc
pop
(bad)
pop
rol
repz
pop
inc
dec
xor
pop
pop
jbe
and
add
out
(bad)
(bad)
jg
cmp
(bad)
sti
mov
jmp
icebp
lds
pop
push
outs
ss
scas
jg
icebp
jp
ficom
test
call
xor
pop
jecxz
sbb
ds
js
pop
(bad)
push
stos
(bad)
or
xchg
scas
pop
movs
push
dec
or
lea
mov
pop
cmp
(bad)
dec
adc
push
and
hlt
mov
xor
fs
or
cld
test
addr16
(bad)
(bad)
call
or
add
ds
scas
hlt
pop
loop
push
sahf
inc
cs
mov
mov
(bad)
(bad)
jg
stos
scas
pop
mul
add
xlat
scas
fisttp
repz
add
mov
not
bound
and
jno
pop
inc
jnp
in
mov
out
outs
aas
dec
push
xchg
push
push
in
aad
test
(bad)
(bad)
dec
sbb
pop
cmp
jb
xchg
into
push
or
or
mov
jno
jmp
mov
cld
cli
pop
nop
mov
pushf
xor
mov
(bad)
(bad)
call
(bad)
mov
test
cld
retf
dec
cmp
push
inc
adc
jle
inc
outs
inc
add
push
ror
jmp
clc
xchg
stc
(bad)
(bad)
mov
rcl
shl
loopne
push
imul
(bad)
(bad)
call
shr
mov
imul
inc
or
out
mov
cli
dec
mov
cld
mov
sub
(bad)
(bad)
inc
call
mov
lds
shr
aas
or
push
mov
cmp
mov
(bad)
jmp
ds
pop
cdq
jns
mov
jne
dec
push
mov
(bad)
xchg
jge
(bad)
(bad)
(bad)
out
(bad)
push
or
push
jae
icebp
cmp
jo
sbb
call
and
(bad)
(bad)
inc
adc
movs
cmc
sub
xor
push
dec
dec
pop
sub
cmps
je
or
(bad)
call
xchg
nop
mov
cmp
loope
ds
pop
and
out
push
jp
dec
gs
pop
inc
nop
adc
(bad)
(bad)
push
outs
cdq
push
idiv
cmps
dec
sub
mov
call
iret
cwde
leave
cli
(bad)
(bad)
out
mov
dec
mov
mov
add
adc
imul
mov
cmp
push
in
sbb
sub
pop
adc
cmps
cmp
call
mov
mov
push
pusha
or
dec
xchg
sub
aad
cmps
ss
pop
in
loop
fild
sbb
neg
sbb
(bad)
sbb
jle
sbb
(bad)
in
xlat
or
sbb
mov
ja
xchg
xchg
jo
aam
jmp
sahf
js
pop
fidiv
(bad)
(bad)
(bad)
jmp
aam
mov
mov
js
push
inc
imul
push
sub
pusha
cld
jmp
and
jle
daa
and
mov
sub
(bad)
(bad)
jg
iret
mov
adc
repz
jecxz
adc
gs
aas
inc
pop
in
dec
jge
sbb
(bad)
or
(bad)
jmp
in
mov
jno
xor
and
mov
in
(bad)
(bad)
jmp
and
lock
icebp
idiv
mov
xchg
sub
xchg
xchg
stos
pop
(bad)
(bad)
(bad)
inc
or
retf
enter
mul
(bad)
and
push
sar
das
bound
(bad)
dec
(bad)
jg
jae
ds
push
mov
xchg
arpl
(bad)
call
dec
test
cli
mov
mov
dec
push
(bad)
inc
or
ja
(bad)
(bad)
dec
call
pushf
in
and
leave
shl
jno
ds
or
loope
test
(bad)
jmp
inc
pop
adc
jmp
and
jp
mov
mov
dec
pusha
repz
push
cli
stos
cld
mov
(bad)
clc
fisub
push
stc
test
mov
push
cli
(bad)
(bad)
push
mov
jno
pop
leave
inc
dec
or
addr16
mov
mov
and
mov
xlat
mov
push
test
jp
push
jle
pop
adc
and
test
(bad)
(bad)
(bad)
(bad)
jp
ss
or
outs
add
mov
clc
iret
mov
add
in
jo
sbb
rcl
(bad)
call
dec
inc
int
lea
ds
shr
std
sbb
mov
nop
adc
jns
cmp
popa
jmp
dec
mov
jae
xchg
inc
(bad)
dec
out
sub
in
pop
pop
hlt
mov
mov
clc
mov
rcl
loop
enter
(bad)
(bad)
jmp
aas
ret
(bad)
mov
pop
fdiv
rol
popf
inc
(bad)
cli
fmul
and
in
sbb
adc
(bad)
(bad)
jmp
lahf
push
sbb
xchg
aad
xor
push
rol
mov
adc
lds
(bad)
(bad)
(bad)
inc
push
push
mov
jg
shl
mov
add
mul
adc
(bad)
(bad)
call
pop
mov
add
adc
ins
mov
mov
jmp
(bad)
(bad)
call
jbe
push
push
loopne
pop
mov
xchg
mov
dec
xchg
arpl
test
lock
lds
out
(bad)
(bad)
(bad)
push
or
loopne
js
add
jge
fcmovbe
out
scas
lods
sbb
call
adc
dec
jl
pop
cmp
addr16
test
mov
mov
nop
cs
ins
mov
loopne
(bad)
(bad)
dec
mov
and
sub
popf
daa
mov
imul
xchg
cld
add
adc
cmp
pop
or
dec
loopne
dec
je
(bad)
(bad)
inc
aam
dec
pop
imul
push
or
sti
repz
and
imul
inc
mov
pop
adc
adc
mov
je
cdq
in
(bad)
(bad)
jmp
xchg
xchg
push
sub
mov
pop
xor
jmp
fcmovnu
in
sbb
push
data16
(bad)
(bad)
call
mov
popf
outs
fidiv
push
jp
jl
dec
add
inc
push
xchg
(bad)
(bad)
(bad)
inc
scas
ins
(bad)
push
dec
adc
xor
mov
add
mov
and
(bad)
(bad)
dec
addr16
and
adc
sbb
dec
dec
or
mov
mov
jnp
xlat
inc
(bad)
call
mov
inc
data16
loope
in
test
jmp
dec
shl
stos
sahf
test
fimul
ins
push
dec
sbb
ret
sbb
sti
jecxz
(bad)
jg
add
adc
loope
push
or
ret
int
ja
add
(bad)
call
jle
add
aam
jp
xchg
and
lds
mov
jg
(bad)
(bad)
(bad)
call
int
icebp
retf
mov
inc
pop
mul
sbb
add
cmps
(bad)
cmp
xchg
fdiv
sbb
pop
cmp
(bad)
push
dec
icebp
jmp
hlt
sar
mov
inc
xor
dec
scas
cmp
jbe
and
jge
mov
jae
(bad)
(bad)
push
test
fiadd
push
retf
pop
(bad)
imul
loopne
outs
inc
jge
(bad)
(bad)
(bad)
call
pop
lods
fdiv
repnz
xor
imul
cmp
fnstsw
(bad)
(bad)
(bad)
jmp
movs
or
sahf
jle
addr16
add
mov
sbb
jp
mov
(bad)
(bad)
push
and
jmp
cdq
loope
jp
test
data16
std
mov
aas
cmp
cmp
mov
xchg
repz
stos
sbb
or
and
inc
out
cmp
(bad)
jmp
(bad)
fwait
xlat
sbb
or
mov
movs
cmp
imul
dec
pusha
repnz
jmp
clc
mov
lock
adc
fimul
fs
dec
js
hlt
ror
(bad)
jmp
or
pop
add
nop
daa
sbb
sbb
or
or
xor
xchg
popa
imul
fwait
push
pop
mov
cmp
xor
and
aaa
std
add
call
imul
inc
mov
(bad)
dec
pop
lahf
pop
xlat
dec
movs
lods
mov
mov
inc
aas
mov
inc
sbb
cmps
aam
je
and
mov
sbb
gs
loopne
(bad)
(bad)
call
mov
pop
inc
cmp
(bad)
xor
call
test
lds
stc
mov
outs
cli
(bad)
in
mov
cmp
imul
push
cmps
aaa
sahf
pop
jns
mov
jmp
sub
cmp
daa
mov
(bad)
in
int
push
imul
loop
xor
cld
test
push
xchg
ret
or
(bad)
call
jle
aaa
fild
mov
dec
adc
aaa
lods
in
or
fwait
adc
sbb
push
cld
int
icebp
push
dec
stos
(bad)
jl
(bad)
push
stos
mov
lahf
pusha
pop
jge
(bad)
loope
(bad)
inc
pop
shl
sbb
mov
jno
ss
daa
pop
fst
mov
jmp
nop
dec
test
mov
mov
lock
inc
or
mov
cmps
fsub
mov
dec
sub
rcl
fldenv
test
mov
aas
adc
inc
cmps
sar
(bad)
(bad)
cmp
inc
test
xor
cli
xor
jmp
aad
in
mov
mov
sbb
ret
adc
dec
add
add
mov
lds
mov
pop
into
movs
xlat
daa
jecxz
repnz
fisub
jl
cdq
jne
(bad)
(bad)
(bad)
mov
xchg
pop
push
add
dec
and
sub
inc
cdq
repz
iret
push
mov
xchg
and
jecxz
out
(bad)
push
lods
cmp
aas
or
fdiv
cwde
call
xor
dec
lock
call
lods
aad
inc
(bad)
push
mov
pop
dec
test
aad
fs
mov
jp
push
xchg
sub
and
sti
icebp
sbb
fsub
push
jb
add
(bad)
(bad)
jg
retf
push
and
jg
jbe
add
and
pushf
cld
(bad)
(bad)
call
js
pop
or
cmc
or
cmp
jle
cwde
fnstcw
sbb
and
pop
sahf
mov
stos
cld
and
push
xchg
cdq
mov
sbb
scas
enter
jno
imul
sub
loope
loope
into
inc
adc
pop
adc
pushf
fwait
(bad)
(bad)
(bad)
call
ret
adc
arpl
push
das
and
imul
push
pop
inc
aaa
xchg
cmps
popa
jo
(bad)
jmp
mov
cmp
dec
add
(bad)
in
das
inc
ret
add
mov
push
dec
lods
sysenter
push
das
add
(bad)
mov
pop
fnsave
(bad)
(bad)
inc
add
xchg
test
test
sbb
(bad)
add
out
add
cmc
dec
stc
popw
(bad)
(bad)
(bad)
mov
(bad)
out
pop
cs
inc
and
cwde
mov
sbb
xor
call
jmp
and
cdq
rol
scas
add
fld
hlt
and
(bad)
(bad)
push
add
scas
adc
push
cs
inc
xor
or
mov
(bad)
push
push
out
dec
mov
outs
mov
mov
ror
lods
mov
dec
(bad)
jmp
sar
mov
test
jl
xor
je
outs
sbb
xchg
loop
(bad)
(bad)
jmp
xchg
cmps
mov
movs
scas
shl
push
and
repnz
mov
enter
test
ret
jne
mov
int
mov
sub
push
shr
add
(bad)
jg
dec
pushf
mov
out
outs
jmp
inc
les
stos
ficomp
outs
inc
(bad)
(bad)
call
adc
fisubr
cdq
fmulp
or
clc
fisubr
jo
xchg
popf
pop
in
dec
inc
xbegin
push
mov
jp
and
pop
mov
jns
sbb
add
lods
mov
aas
inc
push
(bad)
(bad)
out
cli
imul
retf
ds
push
aad
(bad)
retf
push
leave
mov
fs
cmp
(bad)
std
adc
or
fdivr
lea
pop
fwait
push
loope
aas
arpl
ret
jns
cmp
jmp
mov
lea
cdq
push
(bad)
jo
lock
inc
fstp
pop
dec
(bad)
(bad)
(bad)
(bad)
jle
or
push
adc
sbb
jmp
xor
(bad)
call
sar
(bad)
(bad)
(bad)
mov
fiadd
inc
add
push
xchg
div
mov
(bad)
fmul
pop
jl
fdivr
jmp
scas
lahf
xchg
in
fiadd
sub
xchg
pop
jmp
dec
sti
push
es
ins
(bad)
(bad)
(bad)
call
add
leave
loopne
add
jg
sbb
inc
retf
outs
enter
(bad)
(bad)
(bad)
dec
dec
hlt
iret
adc
pop
cmps
(bad)
dec
sub
xchg
push
aas
cmps
pop
jbe
or
adc
(bad)
(bad)
jmp
xor
sar
scas
retf
fidiv
xor
pop
push
cmp
(bad)
cs
(bad)
(bad)
call
pushf
cmp
enter
sbb
xor
adc
sbb
pop
mov
cmp
fimul
dec
add
pop
iret
push
push
inc
sbb
sahf
mov
(bad)
(bad)
push
pop
lahf
push
pusha
cmp
pop
jge
mov
push
mov
(bad)
pop
fwait
gs
test
test
(bad)
(bad)
call
add
test
mov
cmp
adc
add
pop
sub
inc
imul
arpl
(bad)
adc
ds
lahf
mov
test
or
pop
pushf
cmc
jecxz
(bad)
(bad)
dec
add
in
test
dec
out
clc
sbb
adc
rcr
ret
call
loopne
loop
xlat
call
cld
sub
cmp
loope
xchg
(bad)
movs
cmps
enter
in
ins
loope
(bad)
(bad)
(bad)
(bad)
call
addr16
out
mov
xchg
cmp
or
xor
jb
cmp
jmp
(bad)
dec
xchg
mov
push
(bad)
cmp
mov
(bad)
jmp
cs
(bad)
(bad)
jmp
jmp
jmp
out
and
add
cmc
pop
fmul
sti
dec
adc
loop
sbb
add
inc
dec
jl
fwait
add
xchg
and
pusha
(bad)
(bad)
(bad)
inc
movs
xor
leave
(bad)
xchg
shl
call
imul
mov
sbb
test
adc
jl
inc
int
test
push
loop
(bad)
(bad)
jmp
iret
icebp
mov
jne
adc
sub
dec
xor
sbb
fwait
xchg
cmp
in
sbb
outs
(bad)
(bad)
(bad)
(bad)
cmp
je
and
inc
aad
and
mov
pop
loopne
ja
scas
js
ja
outs
out
int3
cmp
dec
lahf
xor
jmp
es
clc
imul
push
imul
out
jmp
xlat
sbb
or
push
sub
sub
inc
add
sub
pop
mov
sbb
jle
dec
outs
push
fstp
in
fstp
je
sub
jmp
push
xor
mov
cvttps2pi
(bad)
pop
xchg
js
sub
pop
std
push
xor
xor
jae
sahf
pop
or
or
and
(bad)
(bad)
call
enter
push
lock
jge
div
(bad)
and
stc
ror
xor
(bad)
push
sbb
add
ins
test
cmp
loop
fild
fdiv
mov
retf
mov
(bad)
cmp
(bad)
mov
ror
rol
xchg
imul
jp
call
cmp
fcmovbe
dec
(bad)
je
fstp
pushf
cmp
ja
cdq
icebp
sub
(bad)
(bad)
call
lds
les
pop
es
test
xchg
inc
dec
(bad)
mov
icebp
adc
sbb
cmps
fild
cmps
call
adc
inc
mov
cwde
adc
mov
mov
cs
ins
arpl
mov
scas
push
(bad)
xor
cmp
lock
(bad)
(bad)
jmp
out
dec
adc
aam
scas
pop
rol
inc
adc
dec
jb
cmp
in
in
cld
and
mov
jb
sbb
rol
xor
dec
int3
add
mov
add
call
fbld
fcom
and
mov
pop
imul
jbe
dec
je
lods
cmp
dec
jg
int
push
test
pop
rcl
or
mov
and
push
pop
cmp
cmp
(bad)
dec
push
es
push
push
in
(bad)
(bad)
xchg
leave
jbe
fadd
or
dec
add
sbb
jecxz
push
ret
mov
dec
mov
fmul
fwait
in
(bad)
(bad)
mov
pop
inc
jp
fs
add
add
xor
(bad)
(bad)
push
xchg
inc
mov
inc
aas
xor
push
jno
push
mov
cmp
and
lods
scas
les
call
push
sbb
stc
dec
(bad)
fdivrp
push
pandn
ins
pop
ret
ret
jo
mov
enter
sub
(bad)
(bad)
(bad)
(bad)
mov
or
stos
sti
inc
std
mov
popf
loop
pop
xor
cs
daa
in
mov
in
xor
(bad)
(bad)
push
dec
pop
mov
mov
mov
int3
popf
stos
inc
out
cmps
dec
outs
dec
mov
mov
and
push
(bad)
(bad)
(bad)
dec
aam
pop
int3
inc
adc
std
stos
jmp
sbb
sbb
aam
lods
dec
movs
push
cmc
aad
sbb
xchg
(bad)
(bad)
(bad)
inc
cmps
inc
xor
xor
hlt
outs
xor
xlat
(bad)
out
adc
test
rep
loopne
inc
sbb
sti
sti
mov
mov
loop
cmp
cld
mov
std
lock
ficom
add
and
js
mov
xchg
pusha
mov
test
push
adc
(bad)
dec
(bad)
call
push
nop
movs
lods
or
pop
mov
loop
(bad)
dec
or
mov
adc
dec
mov
pusha
call
icebp
out
(bad)
(bad)
(bad)
mov
arpl
ss
add
mov
sub
in
ds
sub
or
out
and
inc
pop
ja
push
and
xchg
das
push
dec
push
adc
jmp
or
idiv
(bad)
jmp
test
jno
xchg
dec
sbb
shl
popf
sar
sub
sbb
xchg
push
adc
mov
stc
bound
push
cmp
push
push
ret
fiadd
out
xchg
lock
loope
push
div
jge
sub
push
push
dec
add
dec
or
xchg
sbb
fistp
dec
stc
mov
jmp
(bad)
inc
sub
sub
out
dec
jg
(bad)
sahf
pop
imul
pop
movs
hlt
mov
pop
out
movnti
sub
sbb
ret
xor
out
fs
out
jne
xchg
mov
cmp
sar
add
pop
mov
(bad)
(bad)
fsubp
aad
xchg
xor
sub
repz
jo
out
add
cwde
mov
test
sub
mov
mov
popf
mov
sahf
jno
pop
sbb
ret
(bad)
(bad)
jmp
leave
mov
rcr
sub
xor
jnp
xchg
ror
sar
das
shr
inc
dec
cmc
je
dec
nop
and
push
add
aaa
sub
(bad)
(bad)
call
xchg
mov
inc
test
cmp
jle
mul
xchg
imul
sar
(bad)
cmp
aam
sbb
fdivr
or
adc
inc
popa
ret
push
xchg
fdiv
sbb
xchg
sub
movs
(bad)
(bad)
(bad)
(bad)
mov
les
jmp
sbb
mov
dec
iret
mov
push
cmp
addr16
(bad)
(bad)
jmp
leave
fwait
mov
mov
xor
movs
adc
xchg
pop
mov
dec
mov
push
pop
loopne
inc
sub
repnz
mov
stc
xchg
add
pop
inc
dec
or
popf
pop
mov
(bad)
in
mov
sti
shl
lods
lods
fdiv
ficomp
sbb
mov
dec
xchg
ds
jge
pop
popa
in
mov
mov
(bad)
sbb
movs
and
mov
imul
pop
add
xor
arpl
stos
or
(bad)
(bad)
(bad)
mov
or
mov
cmp
mov
mov
and
(bad)
mov
mov
popa
(bad)
(bad)
(bad)
call
mov
xchg
in
test
loop
cs
xchg
mov
fbld
lahf
cld
(bad)
(bad)
call
cmp
lock
in
outs
dec
jo
leave
add
lods
jno
jmp
inc
xor
sub
pop
clc
inc
scas
loop
(bad)
jmp
movs
lods
jb
adc
fdivr
mov
push
test
std
jle
mov
xchg
nop
or
or
mov
aas
adc
hlt
mov
(bad)
jg
call
cmp
call
push
push
jmp
xor
(bad)
xor
(bad)
(bad)
jmp
(bad)
pop
aaa
movs
sub
mov
std
mov
or
xchg
mul
xor
call
loope
(bad)
jg
or
ins
and
add
add
stos
cli
pop
ror
(bad)
(bad)
(bad)
(bad)
jl
pop
shl
mov
mov
int
dec
push
in
inc
pusha
cmp
dec
pop
sbb
mov
(bad)
(bad)
(bad)
(bad)
inc
pop
add
mov
xor
sbb
and
popa
inc
or
sbb
loope
mov
inc
cmps
out
cwde
adc
jg
push
pop
(bad)
mov
dec
jmp
scas
sub
mov
(bad)
(bad)
(bad)
jmp
int3
daa
mov
jp
sub
jmp
sub
push
push
int3
(bad)
repz
lock
in
daa
adc
xchg
adc
ins
jl
lahf
adc
mov
push
movs
inc
icebp
or
ja
addr16
lock
sbb
push
div
fs
(bad)
(bad)
(bad)
(bad)
cmp
or
mov
js
push
sub
mov
(bad)
cmp
jmp
cmp
jle
pop
mov
(bad)
push
pop
jge
or
popf
int
xchg
jle
lock
(bad)
(bad)
(bad)
dec
cli
test
enter
pushf
mov
sbb
inc
xchg
in
mov
push
jg
inc
outs
fdivrp
(bad)
(bad)
inc
mov
jmp
mov
hlt
cmp
jno
add
and
and
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovnb
imul
test
int3
push
cld
mov
retf
(bad)
xchg
push
add
aam
test
(bad)
(bad)
(bad)
dec
adc
mov
retf
mov
mov
or
jl
adc
lods
jp
pushf
(bad)
(bad)
(bad)
(bad)
in
and
xchg
mov
sti
and
inc
push
loopne
test
add
dec
xchg
(bad)
(bad)
(bad)
push
pop
jns
dec
call
mov
movups
mov
(bad)
inc
and
mov
dec
push
cli
xor
inc
add
je
test
or
(bad)
(bad)
in
pop
mov
outs
lea
pop
mov
adc
fadd
fidiv
sbb
(bad)
(bad)
call
in
mov
push
arpl
out
adc
mov
sub
xor
(bad)
push
daa
push
daa
add
(bad)
(bad)
jmp
inc
movs
test
push
rcr
pop
mov
dec
ret
mov
add
jg
push
outs
xor
pushf
xlat
jp
movs
sub
push
xor
xchg
dec
mov
jno
dec
adc
inc
outs
mov
fcomip
inc
push
mov
xchg
or
cdq
dec
push
je
imul
inc
xchg
sub
jmp
cdq
jmp
rol
dec
sbb
fsub
(bad)
dec
push
loope
popa
arpl
stos
adc
js
clc
scas
outs
fwait
or
aaa
cld
(bad)
(bad)
mov
js
sbb
sub
push
xor
(bad)
(bad)
jmp
cs
and
adc
out
and
movaps
pop
cmp
lods
cli
in
pushf
mov
jmp
sbb
popa
push
dec
ins
lods
(bad)
aad
lods
(bad)
inc
xor
inc
mov
lds
mov
ss
dec
pusha
sbb
sub
sbb
cmp
popf
adc
enter
push
(bad)
call
(bad)
hlt
cld
and
cwde
dec
sbb
push
xchg
mov
fwait
mov
(bad)
inc
test
mov
stc
leave
in
xor
fld
enter
retf
cmc
(bad)
jg
inc
or
(bad)
icebp
cwde
(bad)
int
cmps
inc
dec
jns
sti
enter
cs
(bad)
push
sub
xor
mov
test
inc
mov
idiv
(bad)
(bad)
jg
movs
ja
(bad)
stos
pop
adc
lahf
xor
cli
xor
push
sbb
adc
aam
mov
(bad)
(bad)
(bad)
(bad)
fimul
pop
outs
push
inc
push
add
retf
div
mov
repnz
in
popaw
jp
(bad)
(bad)
(bad)
(bad)
jge
inc
cmps
bound
aam
push
call
test
push
jb
aam
(bad)
(bad)
(bad)
push
mov
retf
retf
or
dec
addr16
mov
call
mov
retf
bound
mov
xor
or
sub
sti
fnstcw
and
nop
ins
mov
js
pop
jl
stos
cmp
or
and
in
xlat
pop
pushf
lods
pop
sbb
(bad)
jg
ret
pop
xor
add
test
fs
mov
jecxz
xor
(bad)
jecxz
shl
mov
sti
push
push
jns
adc
sbb
aas
xchg
add
jecxz
cs
jp
inc
ror
cmps
and
add
lock
cmp
(bad)
(bad)
dec
inc
adc
xchg
out
js
gs
aas
(bad)
push
add
xchg
jne
aad
cmp
(bad)
push
xor
push
sub
jo
out
jle
scas
stos
sbb
xlat
add
repz
(bad)
out
clc
dec
inc
xlat
mov
inc
mov
rcr
scas
mov
dec
aam
add
call
enter
out
repnz
fdiv
(bad)
icebp
cs
clc
jmp
nop
xor
pop
and
mov
(bad)
(bad)
dec
cld
push
cmp
(bad)
pop
jae
loopne
cmc
or
dec
add
cmp
test
(bad)
(bad)
(bad)
dec
inc
jmp
and
imul
jae
push
xchg
dec
mov
sbb
inc
(bad)
(bad)
(bad)
(bad)
fild
and
mov
lds
cli
(bad)
idiv
sbb
retf
add
(bad)
mov
ja
sbb
stos
mov
mov
nop
inc
cmc
cmp
dec
daa
cmp
(bad)
xor
(bad)
(bad)
out
xchg
xor
xor
push
(bad)
jmp
(bad)
cmps
(bad)
fidiv
retf
xor
rol
repnz
test
dec
in
pushf
mov
into
jns
jne
push
(bad)
mov
fisub
outs
push
xor
imul
cmp
inc
enter
mov
xor
sbb
jl
jl
and
or
cld
pop
mov
or
push
inc
test
(bad)
adc
(bad)
(bad)
(bad)
fdiv
and
in
cmps
or
and
inc
out
and
in
ja
dec
cwde
lahf
dec
xor
pop
call
jmp
add
push
xchg
inc
loopne
aam
mov
mov
inc
mov
mov
jmp
dec
pop
sbb
or
inc
cmp
mov
and
sub
and
(bad)
(bad)
call
test
xchg
(bad)
fs
inc
sbb
inc
rol
pop
cmp
stos
rcl
fsub
and
clc
cli
mov
sbb
(bad)
(bad)
jmp
stos
add
xchg
push
pop
jecxz
lea
ins
stos
push
adc
add
add
(bad)
(bad)
dec
outs
mov
sbb
push
loopne
mov
adc
xchg
not
clc
push
add
cmps
ficomp
mov
(bad)
(bad)
push
inc
ror
ins
ror
push
in
and
sbb
scas
xchg
push
lock
and
sbb
(bad)
call
inc
sbb
sbb
or
jbe
dec
retf
mov
push
xor
(bad)
(bad)
jmp
add
mov
std
and
xlat
sub
and
(bad)
fmul
sub
dec
mov
inc
mov
push
shr
mov
(bad)
imul
dec
jl
gs
jg
xor
stos
jl
cmp
xor
ja
inc
ret
or
jp
xchg
push
aaa
je
pop
sahf
lods
sbb
iret
push
xor
pop
mov
mov
dec
sahf
push
aas
push
cmps
pop
mov
leave
sbb
(bad)
jmp
clc
or
sub
xchg
push
mov
fnstenv
xor
(bad)
(bad)
call
pop
mov
jmp
mov
push
sahf
jp
dec
ins
xchg
out
push
mov
bound
ss
adc
(bad)
(bad)
jmp
sub
cmpxchg
jb
ret
jle
inc
push
(bad)
jno
or
je
mov
(bad)
(bad)
push
loopne
(bad)
jmp
add
sbb
pop
retf
out
int3
xchg
sbb
dec
mov
mov
ins
mov
or
daa
jge
(bad)
(bad)
fbld
mov
rol
pusha
adc
pop
and
ret
out
imul
push
push
pop
call
cld
pop
sbb
mov
movs
movs
imul
pop
or
in
and
ret
cmc
inc
jl
lods
and
(bad)
(bad)
call
xor
jmp
out
pop
lods
pop
movs
push
inc
scas
dec
cwde
jmp
inc
sub
mov
retf
cmp
es
js
push
fdivr
xchg
repz
repnz
xchg
retf
loopne
(bad)
inc
cmp
jne
outs
aaa
xor
adc
loop
ins
xchg
icebp
push
inc
adc
mov
call
stos
inc
sub
lods
adc
stos
xchg
sbb
ret
adc
push
sbb
xor
pop
icebp
dec
xchg
and
mov
test
rcl
sbb
jmp
jge
(bad)
(bad)
(bad)
push
jmp
div
sar
push
jb
pop
enter
imul
and
cmp
(bad)
(bad)
(bad)
cmp
pop
mov
mov
push
jmp
aad
adc
clc
fs
ins
or
pop
(bad)
(bad)
(bad)
jmp
mov
pop
fmulp
jmp
add
mov
out
cmp
push
and
std
inc
pop
dec
(bad)
(bad)
(bad)
jmp
fild
outs
mov
js
jg
inc
fsubr
jg
loop
or
xchg
mov
and
(bad)
(bad)
push
sbb
fwait
jge
out
add
ds
pop
add
in
sub
or
mov
(bad)
(bad)
inc
js
jmp
jbe
jne
hlt
push
stc
(bad)
mov
mov
xor
sub
sahf
(bad)
(bad)
(bad)
call
fs
iret
push
fsub
cmp
cdq
push
push
dec
xor
adc
in
mov
(bad)
call
(bad)
cdq
js
movs
jmp
sahf
cs
movs
jge
dec
sub
mov
xchg
pop
cld
sbb
inc
sbb
out
xchg
loopne
outs
ret
and
mov
mov
retf
xor
and
push
inc
fsubr
clc
test
sti
shl
fs
ins
cmp
popf
dec
leave
(bad)
ror
call
call
mov
or
(bad)
(bad)
mov
ret
leave
out
sti
push
pop
fild
sbb
enter
fstp
cmp
ins
(bad)
(bad)
dec
cwde
call
inc
jg
xchg
in
mov
cli
daa
js
inc
mov
sub
bound
mov
push
fcom
dec
sbb
inc
stos
shl
nop
imul
(bad)
dec
or
sbb
imul
pop
mov
sbb
sub
jp
movs
mov
popf
hlt
cmc
inc
xor
xor
push
retf
es
ret
retf
pop
nop
hlt
shl
jns
fdivrp
(bad)
call
fst
cmp
and
test
lods
xchg
int3
test
mov
adc
cli
pop
(bad)
pop
repz
fcmovnu
xor
pmaxub
mov
or
inc
movs
clc
push
xchg
push
ret
(bad)
(bad)
jmp
xor
jne
cmp
mov
icebp
(bad)
ins
fistp
mov
call
imul
fdiv
int3
movs
lea
icebp
jnp
call
ja
iret
lds
add
or
jge
das
cdq
pushf
dec
hlt
dec
(bad)
xchg
push
xor
lock
inc
mov
mov
daa
jnp
popa
mov
or
(bad)
(bad)
(bad)
fistp
cmp
pop
loope
popf
sbb
pop
xor
and
adc
(bad)
jmp
jle
movs
inc
push
sub
cmp
push
js
mov
push
mov
mov
(bad)
(bad)
call
mov
call
cmc
mov
cld
mov
pop
mov
movs
dec
mov
(bad)
(bad)
dec
push
cmp
mov
sub
rcr
int3
mov
jmp
sub
imul
div
(bad)
inc
pop
aam
or
mov
and
jo
jg
js
(bad)
(bad)
push
das
cmp
and
xchg
add
es
rcr
(bad)
(bad)
(bad)
out
and
test
pop
aam
out
ins
idiv
add
xchg
hlt
aas
pop
leave
and
and
pushf
clc
(bad)
inc
arpl
out
out
sbb
into
lock
shl
cmp
xchg
and
cli
push
cmp
sub
(bad)
jmp
ja
cmps
pop
retf
ja
or
add
mov
fs
int
(bad)
in
hlt
pop
sub
(bad)
(bad)
jmp
push
clc
in
test
dec
sub
loope
dec
div
sub
cmp
(bad)
hlt
adc
out
das
out
in
xchg
fidivr
(bad)
(bad)
(bad)
jmp
mov
loope
cli
mov
fbld
jmp
int
sub
jmp
inc
sub
(bad)
inc
sub
and
sub
dec
ja
jmp
xchg
sar
aaa
sub
fwait
clc
das
cli
push
xchg
inc
rcl
push
cmc
mov
jmp
cmps
in
sub
retf
mov
cwde
out
ret
ficom
ret
dec
ret
pop
popa
or
mul
call
cs
lock
adc
repnz
mov
and
pushf
and
cmp
out
dec
push
xchg
icebp
inc
ins
(bad)
dec
(bad)
sub
or
test
jp
pushf
jbe
(bad)
(bad)
jmp
and
dec
fadd
mov
in
push
mov
sbb
movs
leave
mov
call
fmul
mov
in
jl
push
out
mov
sti
xlat
data16
out
call
scas
cli
add
cmps
add
push
dec
movs
xor
call
cmp
lea
jl
fs
xchg
cmp
push
mov
push
int
pushf
(bad)
fcomip
call
pop
loopne
push
push
adc
jbe
dec
sbb
int
cmp
ret
jmp
jbe
(bad)
(bad)
in
rcl
cmps
sub
and
cmp
ss
mov
mov
imul
dec
inc
movs
sub
mov
jae
das
xchg
call
div
repz
(bad)
jmp
in
lods
pop
dec
nop
sahf
adc
leave
xlat
ins
cdq
fwait
sub
sti
mov
out
fst
(bad)
(bad)
(bad)
push
push
cmp
jmp
mov
mov
mov
shl
(bad)
(bad)
dec
outs
cmp
int3
pop
fcmovnu
jb
dec
jp
(bad)
pop
inc
jno
adc
(bad)
(bad)
(bad)
(bad)
mov
movs
int
adc
sub
cmp
dec
inc
inc
gs
neg
ret
lds
inc
aas
push
into
push
test
icebp
xchg
mov
in
push
mov
cmc
xchg
jo
arpl
aaa
std
(bad)
inc
shl
jecxz
and
outs
and
jmp
sub
fbstp
mov
aaa
push
sub
test
sbb
(bad)
jmp
shr
mov
pop
js
dec
sbb
in
cli
(bad)
call
in
aam
bound
push
fld
(bad)
(bad)
call
jle
(bad)
mov
mov
cmps
mov
js
fstp
enter
push
clc
(bad)
(bad)
push
pop
push
inc
sbb
sbb
ins
cmc
lods
inc
mov
(bad)
xchg
aad
fcmovnb
jne
(bad)
inc
out
loop
pop
add
inc
stos
scas
out
cmps
dec
call
pop
(bad)
(bad)
(bad)
jmp
rol
or
imul
sub
or
mov
clc
mov
dec
mov
nop
adc
inc
xchg
cwde
aas
ret
dec
lods
mov
(bad)
push
ret
sub
and
sbb
cmp
mov
sar
clc
(bad)
push
adc
repnz
sti
cmps
pusha
lds
or
cmps
mov
(bad)
xor
inc
mov
adc
add
sbb
es
movs
jecxz
sub
inc
mov
mov
(bad)
dec
inc
and
aas
pop
pushaw
out
fisttp
(bad)
dec
jg
pop
loop
int3
scas
cld
(bad)
(bad)
(bad)
(bad)
aas
retf
pop
lds
inc
pop
or
pop
inc
ss
or
mov
mov
loopne
call
(bad)
(bad)
(bad)
inc
lahf
mov
and
popf
xchg
pop
dec
push
xor
loope
sub
mov
jmp
mov
cwde
cmp
rcl
push
aad
dec
push
jmp
xor
(bad)
(bad)
inc
sbb
inc
cmps
int
xor
leave
sti
and
mov
and
fnstcw
mov
xchg
out
fild
ror
loope
cmp
or
mov
(bad)
call
lock
stos
rcr
dec
add
mov
jnp
push
and
(bad)
(bad)
(bad)
jge
and
sub
fnstenv
out
repz
(bad)
sti
fldenv
(bad)
fstp
(bad)
(bad)
(bad)
fisttp
inc
push
lds
mov
loop
out
test
(bad)
mov
pop
mov
ja
sbb
mov
inc
je
aad
enter
cmps
(bad)
xchg
shl
mov
sub
daa
arpl
xor
(bad)
(bad)
mov
(bad)
jmp
je
xchg
lods
jo
cs
cdq
(bad)
xor
jle
ds
(bad)
(bad)
cmp
pushf
aaa
enter
add
mov
jnp
jns
(bad)
(bad)
(bad)
aas
cmp
outs
jb
dec
aad
cli
fs
cmps
repz
imul
mov
nop
shl
(bad)
(bad)
dec
int
xor
jmp
jo
or
mov
mov
add
mov
mov
inc
clc
mov
push
cmp
in
cmps
je
(bad)
(bad)
jg
(bad)
stc
xchg
inc
test
je
scas
std
xchg
push
jnp
es
test
sub
add
sahf
(bad)
(bad)
(bad)
inc
pop
arpl
xor
push
jge
test
cli
(bad)
lds
in
sar
stc
sar
push
and
dec
(bad)
mov
mov
inc
fidivr
mov
out
outs
sub
(bad)
jg
aas
pusha
and
mov
mov
sar
xchg
jns
(bad)
(bad)
(bad)
call
mov
ds
in
out
cli
jne
xor
push
push
pop
dec
mov
pop
inc
and
dec
pop
loopne
call
ja
jge
outs
scas
inc
cmp
outs
aas
dec
sbb
or
sub
inc
lea
mov
outs
(bad)
cmps
sbb
inc
pop
push
push
cmps
call
sbb
mov
scas
add
in
push
fmul
inc
cdq
movs
pop
popf
add
adc
(bad)
(bad)
(bad)
dec
cld
mov
xor
cdq
imul
dec
int3
fist
xchg
mov
(bad)
(bad)
(bad)
(bad)
mov
pop
jbe
mov
xor
mov
lds
cmp
dec
push
sbb
(bad)
(bad)
(bad)
inc
outs
push
inc
add
dec
or
mov
ror
or
ret
jmp
mov
push
(bad)
aam
test
lock
and
daa
movs
sub
pop
cmp
in
jge
pop
mov
ins
pop
repz
push
dec
repz
jnp
mov
adc
add
(bad)
(bad)
(bad)
jmp
iret
into
retf
out
mov
mov
cmp
or
(bad)
stos
sub
(bad)
jmp
cmp
jl
out
jb
hlt
inc
jns
jl
repz
ja
jbe
fs
jl
stos
add
retw
(bad)
jmp
xchg
popf
jo
ret
mov
cld
movs
mov
(bad)
(bad)
push
mov
or
cmp
in
adc
fwait
xor
test
push
stc
adc
jmp
clc
dec
xor
push
popa
xor
push
enter
call
(bad)
push
repnz
jns
mov
dec
dec
loope
add
dec
cmp
inc
inc
mov
push
xchg
jb
jmp
add
and
test
outs
cli
arpl
sbb
or
or
out
mov
fisttp
icebp
call
in
xchg
cmp
adc
popa
call
call
jne
out
test
and
or
xchg
ins
test
popa
fs
jno
cmc
dec
(bad)
push
jmp
cmp
xchg
pop
and
lea
ror
dec
out
sbb
(bad)
(bad)
inc
cmps
xchg
fs
jmp
das
inc
(bad)
pusha
inc
and
(bad)
(bad)
mov
push
sbb
pop
and
pop
jbe
pushf
pushf
rol
out
test
or
in
(bad)
(bad)
(bad)
(bad)
in
jmp
xchg
hlt
(bad)
je
sub
adc
test
mov
icebp
data16
push
dec
call
clc
(bad)
mov
jbe
test
mov
out
fdivr
push
push
xchg
or
std
jmp
pusha
mov
push
test
mov
test
rcl
call
aad
popf
adc
(bad)
pop
jmp
inc
sbb
cmc
xchg
lods
xchg
mov
mov
jecxz
(bad)
mov
mov
fisub
sub
rcr
adc
(bad)
(bad)
(bad)
inc
inc
nop
(bad)
jmp
shl
cli
sub
movs
in
mov
mov
or
xchg
push
gs
add
(bad)
(bad)
(bad)
inc
xlat
loope
mov
aas
in
pop
jo
ins
test
push
mov
call
push
pop
scas
mov
bound
mov
cmps
cmp
(bad)
(bad)
(bad)
dec
ins
ret
adc
lahf
xchg
bound
js
cmps
nop
push
sbb
jbe
sub
(bad)
(bad)
(bad)
dec
xchg
test
retf
test
hlt
aam
sbb
jp
call
(bad)
jmp
mov
dec
std
pop
or
shl
push
pop
mov
jecxz
push
into
loope
adc
sbb
call
mov
inc
das
repz
test
add
movs
add
and
sbb
(bad)
inc
pop
loopne
mov
cwde
sbb
inc
pop
cwde
cwde
inc
iret
dec
sahf
pop
nop
push
cmp
repz
jmp
jne
cmps
and
mov
test
cmp
xlat
lods
add
sub
fcomp
imul
jp
add
out
into
leave
inc
push
arpl
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aad
sub
call
mov
jo
xor
xchg
mov
sahf
shr
jmp
popa
gs
arpl
adc
mov
loop
test
xor
test
icebp
movs
sahf
(bad)
(bad)
(bad)
dec
push
lods
push
push
data16
enter
jbe
je
jmp
(bad)
(bad)
(bad)
call
mov
dec
xchg
call
aas
jb
xchg
sbb
sub
(bad)
(bad)
(bad)
jmp
xlat
inc
popa
sbb
bound
sbb
mov
add
xchg
shr
(bad)
jmp
or
(bad)
es
aaa
scas
ss
mov
or
pop
(bad)
(bad)
push
jmp
fnstcw
dec
ds
push
je
test
popa
cwde
xchg
aaa
mov
or
(bad)
(bad)
(bad)
jge
out
out
pop
dec
dec
push
jl
dec
mov
pop
int3
mov
fcmove
sub
popf
nop
call
lock
rcl
jno
je
mov
ret
dec
std
ficomp
push
add
adc
(bad)
(bad)
call
pop
ja
dec
xor
push
inc
sub
cmp
and
adc
fbld
cld
aaa
sbb
stc
pop
cmp
(bad)
ins
(bad)
(bad)
jg
add
ins
push
shl
mov
es
pop
push
jbe
jmp
(bad)
(bad)
(bad)
inc
xchg
shr
or
movs
das
adc
sbb
adc
or
dec
stos
fisub
push
inc
xchg
jl
fcom
(bad)
in
ins
pop
(bad)
(bad)
call
push
repnz
jo
outs
adc
xor
aam
arpl
jmp
into
inc
(bad)
(bad)
(bad)
mov
pop
scas
out
dec
and
mov
dec
push
lahf
or
ins
adc
scas
mov
(bad)
(bad)
(bad)
call
(bad)
aas
jl
inc
sub
jb
ins
loopne
daa
xchg
xchg
call
pusha
jmp
mov
(bad)
(bad)
(bad)
call
xchg
ret
sub
jl
nop
xlat
mov
mov
stc
sub
mov
jne
(bad)
(bad)
(bad)
push
cdq
bound
aad
adc
mov
cmps
dec
mov
cs
fbld
and
retf
(bad)
(bad)
(bad)
fbld
jb
sbb
inc
ds
sub
adc
fist
sub
push
pop
(bad)
(bad)
push
enter
pusha
jle
cmps
jnp
and
sbb
cmp
shr
nop
adc
push
movs
push
jmp
ins
sub
jmp
or
imul
push
retf
cld
mov
inc
mov
es
jb
(bad)
out
clc
dec
mov
sbb
repnz
(bad)
retf
xchg
(bad)
mov
leave
pusha
sub
(bad)
(bad)
(bad)
jmp
jnp
cwde
pop
add
sub
int3
mov
inc
dec
inc
dec
cmp
jmp
and
(bad)
mov
test
mov
jae
cmp
xchg
xor
jecxz
adc
cwde
xchg
out
out
and
push
std
mov
std
out
inc
inc
cld
test
(bad)
arpl
call
adc
push
cmp
cmp
enter
and
aaa
mov
data16
dec
mov
inc
jmp
jl
push
jne
jnp
(bad)
(bad)
jmp
sub
mov
adc
cmp
clc
aad
mov
sahf
fwait
dec
mov
dec
js
repz
pop
pusha
and
sar
push
fsub
pcmpgtd
dec
mov
ret
leave
xor
(bad)
(bad)
call
(bad)
mov
fisub
push
mov
or
(bad)
cmp
sar
(bad)
(bad)
call
adc
xchg
push
je
mov
out
sti
pop
dec
mov
sub
inc
dec
fs
fdiv
sbb
jecxz
in
sar
(bad)
jmp
mov
inc
mov
arpl
adc
or
inc
pop
(bad)
(bad)
jg
mov
mov
scas
fs
data16
sub
repnz
push
cmps
inc
mov
dec
lods
cld
pop
add
loop
stos
les
mov
in
std
xor
xchg
les
test
cmps
xchg
ins
mov
inc
fdivr
mov
cmc
(bad)
jg
mov
(bad)
(bad)
sar
mov
push
(bad)
shl
or
(bad)
(bad)
jmp
sub
cmp
not
enter
dec
sahf
xor
(bad)
aas
xchg
pop
retf
js
(bad)
(bad)
mov
cwde
shl
std
pop
and
fist
push
iret
mov
mov
(bad)
(bad)
call
repz
retf
or
xor
(bad)
mov
jmp
ins
stc
add
adc
and
(bad)
mov
retf
xchg
das
cmp
in
inc
cmp
dec
es
mov
sahf
dec
pop
push
cmp
adc
push
fwait
jmp
shr
dec
add
(bad)
dec
xsha1
cmps
or
jg
and
clc
mov
je
mov
push
adc
fwait
mov
cmp
cld
enter
sbb
mov
sahf
xchg
push
(bad)
jmp
jnp
add
push
adc
outs
fst
push
and
bound
jp
(bad)
cmp
fmul
movs
daa
mov
push
sub
sub
sahf
or
loop
arpl
(bad)
push
jl
jno
xor
cmp
mov
jbe
pop
ret
xor
(bad)
mov
fidivr
or
aam
mov
ins
out
pop
xor
dec
les
add
mov
(bad)
inc
jmp
add
out
and
call
(bad)
(bad)
mov
fcom
ret
cmp
fisubr
mov
(bad)
(bad)
(bad)
push
cmp
xlat
pop
push
sbb
es
out
xor
repz
ds
leave
ss
idiv
(bad)
(bad)
(bad)
push
aad
fs
mov
mov
les
icebp
mov
ds
mov
jl
(bad)
(bad)
dec
xor
dec
lock
pop
jno
daa
inc
popf
lods
ds
retf
daa
mov
call
dec
and
push
imul
scas
fmul
dec
sahf
sbb
hlt
xor
xchg
sub
(bad)
(bad)
inc
das
test
dec
imul
inc
stc
imul
cs
(bad)
imul
(bad)
dec
sar
ins
(bad)
imul
(bad)
xchg
jnp
fwait
inc
scas
sbb
int
and
nop
mov
call
push
inc
adc
retf
cld
adc
mov
fild
lods
sti
enter
mov
stos
(bad)
inc
movs
outs
inc
in
out
out
clc
jns
inc
test
adc
jg
pop
push
clc
dec
jb
adc
cmps
and
fidiv
push
mov
push
ins
push
mov
mov
nop
mov
mov
mov
mov
popf
imul
push
dec
in
sub
punpckhwd
test
inc
cmp
mov
xlat
iret
(bad)
mov
jl
push
xchg
mov
dec
add
jo
push
(bad)
(bad)
mov
or
pop
fisttp
fimul
fld
mov
xchg
imul
mov
fwait
jecxz
mov
add
in
xor
gs
jmp
call
cmp
idiv
push
and
pop
jl
or
sahf
push
jmp
sahf
mov
rcl
cld
call
loopne
add
dec
mov
jmp
in
add
inc
add
mov
fistp
and
sub
jmp
enter
and
(bad)
test
jmp
sub
xor
and
(bad)
loopne
mov
test
loopne
movs
in
inc
ret
push
retf
(bad)
(bad)
(bad)
call
jns
xchg
push
lods
add
xchg
repz
xchg
cli
aas
cmp
shr
cdq
js
(bad)
(bad)
(bad)
jmp
pop
(bad)
test
dec
fsubr
imul
loopne
push
in
sbb
cs
mov
fsub
(bad)
(bad)
(bad)
dec
sbb
mov
mov
bound
aaa
mov
cld
clc
(bad)
(bad)
jmp
fist
pushf
mov
mov
stos
pop
add
mov
js
ss
push
push
fistp
push
and
repz
and
mov
sub
(bad)
(bad)
(bad)
call
sub
aam
out
addr16
xor
fimul
imul
(bad)
inc
ins
jle
push
mov
nop
(bad)
shl
test
mov
pusha
shl
(bad)
shl
mov
(bad)
inc
retf
cli
push
sub
xchg
into
jmp
xor
jmp
stc
mov
adc
test
ret
mov
pop
push
cld
xor
leave
retf
mov
adc
jno
(bad)
(bad)
(bad)
(bad)
mov
pop
and
lds
jp
mov
push
std
je
rcr
das
clc
and
inc
(bad)
(bad)
(bad)
(bad)
(bad)
ds
xchg
xlat
lea
mov
and
push
push
test
dec
cwde
sub
(bad)
cmp
in
es
jnp
inc
pop
push
dec
or
sti
inc
sub
sti
(bad)
(bad)
(bad)
(bad)
dec
jmp
aas
sahf
push
add
mul
inc
or
jecxz
xchg
pop
and
mov
(bad)
(bad)
mov
mov
call
repnz
test
int
pop
int3
and
movups
mov
xchg
cmp
sub
push
dec
lahf
mov
popf
out
or
imul
push
scas
cmps
leave
leave
jnp
cmc
gs
daa
(bad)
(bad)
(bad)
jmp
scas
fisubr
mov
mov
ins
sub
ret
push
pop
dec
ja
mov
shl
call
pop
in
(bad)
push
dec
jnp
test
outs
xchg
mov
daa
shl
mov
fldcw
loop
mov
test
jl
sub
dec
adc
out
lods
stos
shl
add
jle
(bad)
push
add
mov
jno
sbb
push
add
fwait
loopne
aas
xchg
jmp
clc
inc
(bad)
dec
call
jecxz
(bad)
(bad)
(bad)
push
imul
and
xor
fucomp
iret
in
dec
mov
sbb
dec
cmp
or
inc
pop
xor
loopne
in
stos
aam
cwde
inc
out
sbb
jmp
adc
sub
ret
mov
movs
inc
sbb
and
sbb
mov
sar
xor
pushf
mul
and
out
loopne
sbb
in
imul
(bad)
std
sti
mov
dec
mov
adc
call
ins
inc
inc
mov
int3
dec
mov
(bad)
(bad)
(bad)
jmp
dec
or
fs
test
jns
(bad)
cwde
jp
xor
call
and
push
inc
cmp
pop
into
xchg
mov
ret
(bad)
(bad)
dec
lods
dec
ret
mov
xchg
leave
ds
(bad)
(bad)
fnstenv
mov
int3
ins
popf
dec
(bad)
(bad)
(bad)
inc
xor
xchg
ins
push
adc
cwde
jne
cmp
leave
rcl
gs
dec
xchg
movs
inc
cmp
(bad)
(bad)
(bad)
call
and
pushf
aam
adc
sub
mov
and
mov
pop
aaa
cld
(bad)
(bad)
sti
int
ret
fs
dec
pusha
mov
call
adc
mov
pop
retf
into
(bad)
cdq
adc
jmp
(bad)
pushf
dec
push
xlat
and
aaa
(bad)
mov
(bad)
loop
int3
mov
xor
fnstcw
(bad)
(bad)
(bad)
call
dec
imul
in
frstor
aam
dec
pop
and
jmp
inc
cdq
mov
cld
cs
push
(bad)
(bad)
inc
outs
arpl
push
lahf
dec
stos
clc
pop
add
aad
xor
icebp
test
lahf
or
cmp
mov
xchg
xchg
aaa
mov
xchg
dec
dec
loop
ror
or
push
jae
xor
leave
sub
clc
pushf
mov
cli
(bad)
(bad)
push
dec
push
cmp
sub
repnz
xchg
mov
xchg
and
(bad)
out
cmps
outs
out
addr16
mov
mov
mov
xchg
inc
mov
rcr
push
(bad)
sub
(bad)
mov
mov
jae
outs
js
arpl
pop
shl
popf
ret
adc
(bad)
into
inc
loop
(bad)
(bad)
(bad)
jmp
xchg
vpunpcklbw
paddusb
and
mov
jp
push
sub
aas
push
pusha
aam
(bad)
(bad)
push
push
stc
fcom
fst
jno
or
push
pop
mov
and
(bad)
mov
call
cs
dec
loopne
push
adc
pop
loopne
retf
mov
mov
iret
sbb
clc
in
emms
adc
and
mov
jl
repz
add
fwait
loop
lea
outs
mov
sbb
mov
(bad)
xchg
(bad)
(bad)
(bad)
jmp
cwde
arpl
or
jne
pop
push
add
adc
xchg
imul
(bad)
xor
mov
(bad)
cld
jae
jp
or
push
leave
aaa
dec
jmp
mov
je
adc
in
xchg
mov
push
shr
mov
inc
jmp
popa
pushf
lods
bound
sub
idiv
(bad)
(bad)
call
sub
xchg
minps
mov
inc
retf
mov
mov
xlat
cmc
int3
cmp
(bad)
jmp
ins
dec
clc
sub
imul
aam
pop
or
mov
lea
pop
pop
hlt
(bad)
(bad)
(bad)
jmp
mov
into
sbb
mov
mov
(bad)
cs
mov
loope
(bad)
imul
lods
push
mov
pop
xchg
dec
fdivr
mov
call
fstp
sbb
add
mov
inc
fs
in
and
add
fisub
es
xchg
pop
push
cmps
xchg
pusha
mov
stos
pop
push
inc
pop
stc
cwde
add
pop
xchg
loop
adc
aaa
dec
rcl
mov
hlt
cmp
pop
jl
jo
(bad)
(bad)
jmp
cld
pusha
xor
fucom
mov
mov
jg
jmp
std
rol
inc
inc
jecxz
mov
(bad)
call
fsubr
add
jge
and
fistp
mov
cmp
test
je
sub
sbb
pop
nop
movsx
adc
fsub
(bad)
inc
jmp
repz
fisttp
mov
pop
cmp
jl
mov
sub
cmp
push
add
add
fcomip
jmp
adc
(bad)
mov
imul
cmp
xor
push
xor
lock
push
mov
jns
sbb
stos
retf
(bad)
bnd
xor
call
mov
inc
xchg
(bad)
lods
in
mov
(bad)
and
and
(bad)
(bad)
(bad)
push
out
movups
(bad)
aaa
imul
mov
sub
xchg
pop
push
shl
outs
push
pop
(bad)
fcomip
adc
push
adc
scas
arpl
xchg
dec
or
(bad)
push
pop
cmps
popf
je
fdivr
sahf
test
mov
inc
mov
xor
jmp
ja
sbb
(bad)
jmp
ret
sbb
mov
inc
mov
jmp
push
sbb
cld
(bad)
(bad)
push
push
scas
(bad)
ror
outs
mov
mov
popf
pop
or
test
add
aas
push
icebp
(bad)
push
clc
fidiv
inc
dec
xchg
dec
dec
aas
retf
push
add
add
dec
(bad)
push
into
xor
rol
add
inc
mov
fstp
aaa
pop
aaa
fnstenv
sub
ss
push
aam
dec
(bad)
(bad)
(bad)
jmp
sahf
and
pushf
push
and
xor
add
jmp
or
push
mov
pop
(bad)
(bad)
(bad)
(bad)
jmp
into
sub
push
sbb
xor
mov
mov
mov
mov
(bad)
inc
retf
jbe
push
sbb
sub
cdq
repz
out
mov
daa
rcr
(bad)
(bad)
(bad)
call
retf
(bad)
mov
adc
xchg
test
(bad)
push
push
mov
pushf
mov
arpl
(bad)
call
aam
iret
fisttp
push
out
xchg
inc
(bad)
adc
shr
adc
and
xchg
loop
fwait
scas
push
shl
push
imul
fwait
and
dec
sub
fwait
(bad)
cmc
jbe
cld
mov
ds
mov
xchg
std
dec
cdq
or
(bad)
jmp
xor
push
fs
jo
aam
push
out
sbb
mov
ins
add
(bad)
jnp
jle
push
pop
jecxz
jge
add
test
adc
add
pop
sub
ror
enter
inc
push
and
call
jge
jge
adc
cmp
push
lods
mov
mov
jnp
inc
mov
bound
mov
test
adc
aad
pop
les
hlt
and
in
fwait
popa
mul
mov
add
(bad)
(bad)
jmp
inc
(bad)
mov
and
push
imul
push
jnp
cld
inc
or
(bad)
es
push
ss
jg
dec
pop
jae
dec
or
jbe
add
adc
pop
das
scas
adc
clc
pop
movs
add
(bad)
jmp
jg
sub
call
cmp
loope
pop
add
(bad)
call
mov
aad
lods
jb
aaa
adc
(bad)
(bad)
dec
jmp
push
cmc
jl
fidiv
mov
repnz
(bad)
lahf
rol
push
mov
addr16
ds
in
int
(bad)
(bad)
(bad)
(bad)
aas
aad
ret
xchg
jl
mov
mov
and
lods
xchg
loop
out
cdq
ror
(bad)
(bad)
jmp
dec
adc
sub
cmp
mov
rcr
or
(bad)
fsubrp
test
dec
out
aas
cmp
jne
jl
lods
push
nop
pop
outs
xor
xchg
cmp
dec
mov
push
add
sub
lahf
dec
imul
in
and
loopne
mov
xchg
push
and
std
mov
into
adc
cmps
sti
xor
fisubr
add
fsubr
push
push
js
(bad)
push
mov
sbb
cmp
scas
push
mov
jmp
ret
(bad)
dec
push
aas
inc
pop
xchg
ss
mov
out
(bad)
jecxz
(bad)
(bad)
(bad)
jmp
xchg
dec
sub
mov
jo
popf
ret
fdivr
loop
xlat
inc
jmp
(bad)
push
xchg
add
and
xchg
dec
ins
gs
int
cmp
sahf
jmp
stos
repz
dec
add
adc
dec
add
jl
add
imul
mov
push
ret
loop
mov
mov
std
(bad)
(bad)
(bad)
fistp
jl
stc
or
iret
retf
sub
xchg
mov
mov
(bad)
(bad)
(bad)
call
xchg
sbb
retf
sbb
and
ret
out
pop
sub
jg
pop
(bad)
(bad)
mov
scas
shr
dec
jb
mov
clc
add
sbb
or
(bad)
jmp
mov
mov
loop
scas
loope
inc
(bad)
xor
add
jmp
mov
jb
in
or
(bad)
(bad)
(bad)
jmp
sub
pop
adc
retf
adc
imul
bound
adc
(bad)
(bad)
jmp
imul
popa
push
pop
xchg
pop
iret
in
cmps
jle
and
aad
sbb
ja
jp
(bad)
(bad)
call
ror
and
jle
idiv
fdivr
or
cmp
push
add
aaa
sub
mov
(bad)
(bad)
dec
sbb
cld
fsub
cmps
arpl
je
out
push
test
(bad)
call
and
sahf
or
ja
sub
fistp
pop
cmp
repz
stc
inc
in
jb
push
jg
(bad)
(bad)
(bad)
jmp
test
xlat
gs
pop
xlat
jno
xor
xor
dec
add
and
icebp
sbb
enter
or
sbb
sub
jnp
xor
inc
push
bound
xchg
out
pop
xlat
clc
push
scas
jne
cld
mov
mov
adc
imul
push
mov
push
jae
js
sbb
(bad)
(bad)
out
clc
ja
outs
jge
int3
xor
repz
(bad)
icebp
out
sbb
mov
outs
pusha
ds
jp
lea
stos
shl
scas
add
movs
jne
sub
mov
and
jl
push
(bad)
cmp
iret
xor
push
call
xchg
xchg
pop
push
or
add
xchg
int3
push
out
sbb
movs
inc
xchg
(bad)
(bad)
mov
repnz
push
inc
push
inc
scas
mov
mov
repnz
adc
jg
(bad)
jp
sti
push
xchg
(bad)
fimul
push
jns
or
sbb
std
cld
hlt
leave
jle
xlat
(bad)
(bad)
(bad)
call
push
mov
adc
das
and
daa
loopne
cli
das
add
(bad)
jg
cdq
jbe
retf
mov
out
cmps
outs
xchg
(bad)
pop
jmp
xor
sub
pusha
popf
or
clc
cld
push
adc
xchg
sbb
and
and
cwde
or
inc
inc
xor
sar
nop
cmps
xchg
xchg
mov
or
jnp
mov
stos
add
cmp
je
icebp
jmp
cmp
adc
sub
add
mov
(bad)
push
out
mov
adc
ins
xchg
sub
xor
push
inc
mov
dec
cmp
adc
dec
cmp
sbb
jp
ficom
jg
(bad)
inc
pop
mov
push
nop
das
inc
push
ret
fistp
xchg
imul
(bad)
(bad)
(bad)
jmp
mov
sub
iret
cmp
sbb
mov
dec
and
imul
xor
stos
(bad)
push
push
rcr
dec
cmp
test
sub
add
cmps
sub
call
jmp
push
js
xor
inc
cdq
loopne
xor
ja
xchg
xchg
outs
(bad)
call
(bad)
(bad)
call
mov
jo
shl
dec
mov
cli
adc
mov
daa
icebp
shl
(bad)
(bad)
fisubr
xchg
test
mov
xor
jle
(bad)
mov
jecxz
(bad)
dec
(bad)
(bad)
inc
ds
cs
cmc
pop
arpl
jne
fcomp
push
xabort
pusha
(bad)
dec
xor
inc
sub
aam
in
repnz
pop
fidivr
(bad)
(bad)
(bad)
jmp
cwde
pushf
call
pop
jne
scas
sub
and
inc
xchg
and
add
cmp
daa
fwait
pop
cld
(bad)
jmp
adc
xchg
inc
and
cmp
mov
call
jmp
fisubr
inc
jmp
xor
inc
pusha
push
jno
(bad)
(bad)
mov
add
gs
(bad)
(bad)
fsub
(bad)
push
ror
das
mov
push
stos
clc
xor
cmps
cmp
fdivr
lea
jmp
cmp
jp
sub
dec
(bad)
(bad)
call
nop
jge
call
mov
xchg
xor
(bad)
(bad)
(bad)
cld
jnp
cmc
adc
jmp
jns
fidiv
iret
outs
sbb
sti
adc
inc
loopne
mov
inc
inc
add
cs
icebp
fbld
push
test
mov
cs
adc
fadd
js
dec
adc
fs
pop
(bad)
(bad)
dec
(bad)
ficomp
xchg
jbe
hlt
cmp
mov
(bad)
(bad)
call
int3
popf
mov
lea
push
out
sbb
sbb
mov
cmc
retf
call
std
dec
enter
jmp
ret
mov
sub
mov
push
aaa
in
(bad)
(bad)
(bad)
(bad)
cmp
in
jmp
push
xchg
adc
pusha
fld
mov
aad
int
in
or
(bad)
(bad)
(bad)
cld
xchg
in
xchg
cdq
xor
ins
iret
pop
mov
push
out
fwait
lea
pop
or
clc
idiv
jmp
out
aas
mov
pop
xchg
jne
scas
or
push
mov
aas
lahf
or
(bad)
(bad)
inc
std
mov
repnz
stos
es
sub
mov
lock
push
clc
(bad)
(bad)
(bad)
js
icebp
dec
adc
push
cmp
pop
push
jb
jg
adc
dec
mov
stos
repz
dec
xchg
cmp
mov
jnp
inc
xchg
jns
(bad)
(bad)
out
cs
sub
ficom
imul
in
scas
cmp
es
and
(bad)
(bad)
(bad)
(bad)
cmp
sub
fldenv
shr
xor
push
(bad)
push
pop
or
sub
xor
jns
mov
into
xor
and
fcmovb
(bad)
sti
(bad)
fcomip
xchg
xor
cli
jbe
push
int
fcom
test
(bad)
jg
sbb
push
xchg
sub
dec
(bad)
iret
nop
inc
push
push
inc
pop
rcr
js
cmp
xor
mov
or
xchg
xchg
fisubr
fdiv
xor
(bad)
dec
lock
lods
(bad)
inc
mov
xchg
pop
cs
fnstcw
cmp
inc
xchg
je
sub
mov
cli
jo
cmc
ret
sbb
push
(bad)
(bad)
(bad)
fsub
lods
xchg
stos
jne
pop
add
jmp
or
add
adc
xor
in
movs
inc
stos
(bad)
(bad)
(bad)
push
sbb
push
pop
iret
jge
fisubr
push
pop
sub
imul
ror
pop
call
push
pushf
shl
sbb
(bad)
cmp
stos
fistp
and
jge
jp
std
jns
lahf
rol
jge
(bad)
(bad)
inc
adc
push
push
pop
cmp
push
mov
cmc
or
mov
lods
(bad)
(bad)
(bad)
dec
arpl
jecxz
push
out
imul
std
or
add
mov
mov
push
stc
(bad)
(bad)
(bad)
jmp
test
pop
mov
mov
loop
shl
inc
push
mov
jmp
jge
jg
(bad)
dec
xchg
call
inc
test
aaa
sub
dec
add
push
jnp
push
std
dec
lock
(bad)
iret
out
pop
push
sbb
add
int
xchg
sbb
outs
mov
(bad)
dec
hlt
dec
ret
cmc
inc
rcr
add
pop
dec
and
lods
sti
rol
iret
imul
(bad)
(bad)
mov
fimul
call
bound
lds
cmp
repnz
or
mov
push
(bad)
(bad)
jg
fist
pop
jp
push
add
or
sub
leave
shl
outs
rcl
(bad)
(bad)
(bad)
push
xchg
mov
cmp
xor
retf
call
repz
jb
adc
xchg
dec
fnstcw
pushf
xchg
addr16
pop
sar
mov
iret
imul
xchg
and
sar
jmp
fs
(bad)
cmp
push
in
enter
(bad)
(bad)
call
call
ins
xchg
pop
inc
and
loop
jg
cdq
test
adc
retf
jbe
dec
or
std
push
bound
std
cwde
pusha
and
mov
outs
push
out
fild
(bad)
(bad)
ds
sbb
popf
or
aas
jmp
lea
pop
adc
pop
pop
(bad)
(bad)
push
push
aaa
icebp
push
jne
jb
mov
lahf
jns
sub
jae
imul
mov
outs
add
mov
imul
loope
inc
call
jb
jbe
test
loop
fwait
vpmulhw
in
adc
mov
(bad)
(bad)
jg
das
mov
aam
outs
sbb
mov
add
out
xor
(bad)
(bad)
(bad)
call
adc
jmp
(bad)
in
or
inc
pop
push
leave
pop
jg
(bad)
call
fiadd
xchg
jmp
adc
(bad)
repnz
and
(bad)
push
dec
cmp
mov
sahf
xor
ficom
stos
into
dec
arpl
pusha
cli
fldcw
mov
aam
(bad)
js
imul
pop
out
adc
mov
pop
xchg
leave
or
leave
movs
mov
jg
(bad)
mov
mov
ds
push
push
jl
ins
pop
or
xlat
(bad)
(bad)
(bad)
(bad)
jp
dec
dec
adc
jno
sbb
sub
xchg
cmps
adc
movs
sub
xchg
fisttp
inc
push
sbb
cdq
jno
cmp
mov
clc
(bad)
(bad)
jmp
mov
sub
pop
mov
rcr
arpl
pop
mov
(bad)
jmp
push
addr16
into
push
fwait
ror
cmc
fiadd
xchg
and
adc
stos
xor
adc
push
inc
mov
scas
mov
cmp
push
out
pushf
jno
mov
adc
inc
sbb
xor
push
pop
cmps
movs
aad
cmps
cs
fistp
cld
(bad)
out
jo
sub
add
and
xor
int3
(bad)
jecxz
fstp
jb
ds
pop
mov
lods
scas
add
call
(bad)
mov
sub
adc
(bad)
mov
sub
pop
dec
sub
(bad)
(bad)
jmp
xor
sti
outs
mov
sbb
xchg
(bad)
push
ss
lods
test
loopne
aad
(bad)
(bad)
cld
jmp
data16
(bad)
(bad)
(bad)
cmp
fcom
test
fs
(bad)
push
pop
(bad)
sbb
test
xchg
dec
stos
cmps
push
jb
inc
(bad)
(bad)
(bad)
jmp
xchg
xor
mov
data16
mov
sub
mov
or
call
ret
scas
cmp
sbb
clc
jns
inc
cmp
xor
outs
(bad)
(bad)
fimul
(bad)
jg
pop
rcr
or
add
mov
cmp
call
fnstcw
or
push
call
mov
jge
xor
or
pop
int
(bad)
(bad)
(bad)
dec
and
test
pop
out
ins
pop
push
ja
out
jmp
adc
push
xchg
sub
(bad)
jmp
js
retf
xchg
nop
in
cdq
mov
lock
(bad)
(bad)
lock
push
adc
dec
inc
sub
(bad)
(bad)
push
cdq
or
and
lock
arpl
movs
push
sti
int3
xor
sbb
xor
aaa
dec
(bad)
sbb
(bad)
in
xchg
or
xchg
xchg
ret
cmc
and
mov
push
je
mov
xor
out
(bad)
(bad)
mov
add
in
ins
lods
jo
or
in
jle
in
int
xlat
push
adc
(bad)
(bad)
jmp
push
mov
mov
pop
xchg
frstor
into
or
mov
push
dec
inc
sbb
inc
sbb
jne
movs
or
dec
push
loop
fdivr
(bad)
xor
(bad)
(bad)
call
xor
arpl
ss
shr
ins
pop
ins
or
ds
loopne
mov
pop
lods
nop
jnp
sbb
sbb
pop
mov
or
lods
mov
dec
cmp
out
(bad)
(bad)
jmp
jbe
lds
xor
cmps
das
inc
hlt
mov
je
(bad)
(bad)
inc
mov
sub
xchg
into
pop
bound
pcmpgtw
daa
adc
mov
(bad)
dec
dec
dec
cs
lock
in
dec
inc
add
jo
add
and
stc
loope
jecxz
mov
xchg
mov
mov
aad
into
adc
mov
jns
jmp
pop
sti
mov
(bad)
(bad)
(bad)
dec
sub
push
add
fs
int3
lock
stc
pop
pop
adc
cmps
pop
(bad)
fcomip
call
sbb
sbb
mov
cld
sahf
xchg
sub
mov
(bad)
(bad)
(bad)
call
aad
mov
loopne
dec
sahf
mov
out
scas
pop
dec
add
jge
cmp
stc
jecxz
sar
jmp
loope
xchg
dec
pop
arpl
rcr
shr
push
fs
pop
int
outs
lock
push
sub
call
scas
xor
imul
ror
ds
ds
push
test
(bad)
(bad)
inc
sbb
dec
mov
mov
outs
jle
mov
in
push
dec
xlat
adc
(bad)
mov
fild
sbb
fs
mov
push
inc
xor
(bad)
(bad)
call
mov
jle
mov
jo
cmc
ins
xor
repnz
leave
adc
lea
mov
jg
inc
xchg
cmp
push
ficom
sbb
popa
or
push
mov
pop
sar
lahf
or
out
fldcw
daa
pop
push
(bad)
(bad)
(bad)
inc
mov
leave
dec
sbb
xor
lds
xchg
jae
(bad)
(bad)
(bad)
call
mov
retf
lock
mov
cld
enter
pop
retf
or
(bad)
(bad)
fisttp
mul
dec
sbb
cdq
cmp
push
sbb
in
nop
dec
in
cmps
sbb
in
cmp
inc
pushf
adc
std
(bad)
call
(bad)
retf
jmp
ret
cmp
retf
aad
mov
test
fist
cmp
call
xchg
outs
xchg
push
int
fbld
arpl
sub
pop
sbb
push
xor
mov
cmp
mov
fimul
mov
(bad)
(bad)
dec
sbb
aam
and
push
int3
pop
dec
and
inc
test
cmps
cmp
call
hlt
xchg
aad
test
mov
mov
(bad)
(bad)
(bad)
inc
adc
lds
push
std
leave
sbb
shl
cmps
adc
sbb
(bad)
(bad)
push
pop
jb
jmp
aad
xchg
cmps
xchg
mov
cwde
in
cld
int3
cmp
(bad)
jmp
mov
mov
scas
in
mov
int
iret
repz
jo
pop
sub
or
pop
hlt
sub
adc
ins
cli
lods
push
pop
retf
mov
pop
jnp
pop
stos
shl
fs
jbe
dec
test
out
cs
imul
or
xor
dec
jb
push
push
loope
jo
mov
mov
(bad)
(bad)
push
rol
cmps
ret
pop
loope
popa
test
loop
and
push
lds
stos
dec
movs
ins
aam
gs
call
clc
fild
fs
lock
adc
ins
movs
rol
cmp
add
aad
push
ret
push
stos
test
fdiv
sbb
repz
das
hlt
in
mov
(bad)
lds
(bad)
(bad)
(bad)
dec
dec
pop
mov
jmp
ja
fnstenv
jo
test
ret
sbb
shl
(bad)
(bad)
(bad)
(bad)
out
sbb
inc
sahf
call
int3
lods
cld
and
add
jbe
pop
and
test
(bad)
(bad)
inc
std
xlat
inc
and
adc
dec
sahf
jnp
pusha
lahf
mov
mov
fldenv
in
shl
(bad)
jmp
xor
cmc
mov
fstp
xor
pop
xor
aad
sub
(bad)
(bad)
(bad)
push
xor
mov
test
push
in
xchg
shl
push
imul
aas
sub
fsubr
(bad)
out
clc
(bad)
call
sub
in
xchg
dec
cmp
lock
aaa
pop
loopne
mov
push
add
(bad)
inc
aas
retf
retf
sar
dec
jmp
pop
retf
(bad)
(bad)
jmp
push
aas
sub
fs
pop
or
test
fsubr
movs
test
aam
sar
jg
jg
inc
jae
movs
gs
movs
add
mov
sub
outs
mov
dec
(bad)
inc
rol
jl
sbb
fcomp
or
stos
leave
push
add
(bad)
(bad)
call
jno
daa
iret
push
push
popa
or
scas
mov
(bad)
and
or
push
sub
add
inc
in
into
inc
int3
inc
pusha
sahf
jae
jne
xchg
mov
sbb
xchg
test
fdiv
inc
neg
xchg
pop
call
(bad)
(bad)
(bad)
call
js
retf
pop
lahf
xor
sbb
mov
sub
(bad)
cmp
jno
xor
repnz
in
pop
(bad)
jmp
sbb
jmp
push
jmp
cmp
ins
(bad)
(bad)
(bad)
call
inc
mov
mov
inc
hlt
dec
dec
fst
mov
xor
sbb
cmps
pop
hlt
ds
movs
call
int3
cmp
icebp
push
sbb
int3
retf
and
jg
cs
out
xchg
aaa
add
(bad)
(bad)
(bad)
jmp
cmc
dec
test
imul
xor
das
adc
mov
adc
hlt
cli
pop
lock
das
mov
mov
xchg
mov
xchg
or
add
out
lahf
loope
sbb
push
aaa
cwde
in
xor
fdivr
jg
(bad)
push
jo
sets
hlt
xor
jg
into
pop
sub
push
xor
dec
mov
fwait
lahf
sub
mov
push
push
scas
cmp
(bad)
jg
fistp
xchg
pusha
dec
fcmovnu
sbb
in
mov
test
sbb
addr16
xchg
add
sar
es
cmc
add
xor
(bad)
(bad)
(bad)
jmp
mov
nop
scas
xor
jno
arpl
sbb
js
(bad)
ins
push
push
add
dec
in
xchg
push
jmp
xchg
ret
(bad)
das
pop
ins
shl
cmps
mov
dec
cli
jmp
gs
(bad)
mov
stc
in
inc
inc
add
shr
inc
fs
lods
pop
mov
or
fmul
(bad)
jmp
inc
and
ror
xchg
pop
jb
jbe
iret
repnz
imul
fsub
mov
pop
loopne
cmp
mov
shl
add
pushf
pushf
mov
mov
sub
aad
(bad)
mov
push
imul
pop
sbb
cmp
out
out
and
push
sbb
cmc
sub
icebp
loope
mov
or
inc
(bad)
(bad)
jmp
xor
sar
lea
dec
adc
ss
(bad)
(bad)
std
lods
cwde
ja
sub
ds
or
jmp
test
and
pop
pop
loop
(bad)
(bad)
mov
mov
iret
xor
int3
or
pop
js
fistp
icebp
imul
(bad)
dec
or
shl
test
jo
into
in
stos
popa
cmp
pop
(bad)
(bad)
(bad)
inc
cmp
test
or
int
out
iret
inc
inc
std
ja
xchg
push
fs
inc
mov
(bad)
into
push
(bad)
jmp
mov
loop
sub
retf
push
inc
push
out
mov
mov
(bad)
es
jo
js
hlt
or
pop
xor
or
jp
xor
add
mov
or
out
je
(bad)
(bad)
(bad)
call
cmc
adc
push
es
jae
or
cmp
inc
arpl
jb
sbb
jnp
(bad)
(bad)
(bad)
jmp
or
in
call
(bad)
in
dec
and
sub
mov
mov
(bad)
inc
mov
daa
dec
mov
imul
push
adc
cmp
test
(bad)
(bad)
inc
sub
lock
std
and
repz
sahf
inc
into
iret
int3
push
xchg
arpl
adc
dec
fnstsw
je
xor
pop
mov
jbe
mov
outs
mov
enter
push
jge
push
adc
imul
cdq
outs
call
inc
jnp
xor
mov
and
cs
sub
(bad)
push
cmp
add
retf
loop
sub
shl
dec
idiv
or
xchg
jl
mov
sub
mov
mov
jecxz
hlt
ja
xchg
nop
and
(bad)
(bad)
(bad)
cmp
cmp
fucomip
call
cdq
jp
in
or
adc
push
inc
ret
mov
jnp
push
arpl
(bad)
(bad)
push
rcr
and
(bad)
(bad)
(bad)
jmp
ror
loope
out
es
out
ins
sub
fcomp
add
adc
(bad)
(bad)
mov
dec
xchg
pushf
test
dec
fcomp
std
inc
and
and
(bad)
(bad)
jg
in
inc
cmp
stc
mov
cmp
inc
mov
or
icebp
mov
sbb
(bad)
(bad)
(bad)
in
cmp
aaa
sub
movntq
and
mov
rcl
mov
mov
mov
inc
fs
fldz
int3
lds
ins
adc
(bad)
push
(bad)
mov
push
push
ds
imul
xchg
fcom
scas
jns
ret
ss
inc
and
mov
int
(bad)
(bad)
jmp
fidiv
jnp
ss
aad
(bad)
add
mov
movs
repnz
xchg
sahf
dec
fisubr
xchg
(bad)
(bad)
(bad)
mov
outs
mov
in
daa
jo
call
xchg
(bad)
std
sbb
(bad)
(bad)
(bad)
(bad)
jmp
inc
add
jp
sub
icebp
rcl
arpl
add
dec
lods
jae
add
jns
cmp
in
mov
sub
or
mov
cmc
adc
movs
fst
(bad)
mov
out
dec
(bad)
pop
aas
call
xor
cmp
in
stos
cmp
(bad)
call
cmps
cmp
movs
dec
push
jge
mov
lods
lock
retf
je
dec
stos
push
push
loop
adc
(bad)
ins
pusha
ds
(bad)
jecxz
xchg
int3
stos
icebp
aaa
mov
mov
mov
mov
mov
push
xor
pop
pop
jne
mov
fcmovbe
jne
cdq
nop
sar
jo
imul
imul
cmp
sub
fisub
pusha
aaa
xchg
pop
(bad)
sti
(bad)
(bad)
jmp
neg
or
sbb
sub
in
push
test
jg
adc
int3
inc
mov
mov
imul
test
xor
push
(bad)
xchg
aas
add
mov
lahf
outs
xor
cmp
(bad)
jmp
scas
fldcw
leave
fs
clc
push
enter
int3
in
xor
dec
nop
ror
stos
iret
je
(bad)
(bad)
push
push
out
popf
mov
pop
mov
jge
clc
lea
sub
mov
push
pop
(bad)
cmp
(bad)
(bad)
inc
sub
int3
fs
lds
sbb
mov
adc
test
mov
mov
ror
fdivrp
(bad)
jmp
cmp
ins
nop
test
lds
scas
xor
jb
ins
fld
pop
and
jno
inc
jo
(bad)
(bad)
push
cli
imul
mov
and
out
xchg
pop
xchg
loop
sub
sbb
inc
sub
jo
xor
icebp
inc
xor
xchg
add
mov
scas
push
xor
mov
aad
ss
push
rol
(bad)
xchg
xor
pop
scas
pop
mov
and
(bad)
(bad)
(bad)
jmp
test
or
xchg
lahf
jg
fs
or
pushf
fldcw
add
add
out
and
sar
(bad)
icebp
call
adc
mov
std
dec
rcl
out
push
or
aam
fs
mov
ja
inc
pop
lods
inc
stc
dec
sbb
sahf
(bad)
(bad)
(bad)
dec
call
jge
aaa
lods
addr16
adc
xor
mov
pop
push
inc
loopne
(bad)
(bad)
dec
pop
xchg
in
mov
sbb
jmp
mov
jae
mov
das
retf
scas
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
inc
in
clc
fisub
aaa
mov
test
retf
push
gs
mov
or
scas
or
cwde
jg
(bad)
call
add
xor
ror
cmps
(bad)
(bad)
call
pop
push
or
mov
xchg
aaa
pop
mov
clc
mov
mov
dec
ret
aam
stos
mov
or
jecxz
call
(bad)
clc
test
mov
pop
scas
xchg
pop
nop
add
sbb
sbb
(bad)
dec
push
xchg
shl
ss
dec
and
or
mov
xor
cmp
cmp
mov
mov
(bad)
(bad)
push
sub
and
cdq
jno
sahf
sahf
and
pop
push
data16
add
ja
push
xchg
pop
add
mov
(bad)
jmp
push
shl
sub
in
and
xchg
test
inc
iret
pop
(bad)
pop
stos
data16
jmp
rcr
dec
scas
pop
xchg
psrlq
sbb
sti
sub
(bad)
jmp
mov
std
rcr
mov
movs
in
mov
scas
xchg
lods
mov
enter
lods
popf
add
(bad)
(bad)
cmp
(bad)
mov
out
push
dec
fsubp
sbb
sub
and
test
mov
add
imul
xchg
pusha
sub
in
push
loopne
les
outs
mov
div
(bad)
cmp
sahf
imul
fisttp
clc
(bad)
dec
or
jbe
es
push
retf
jg
cmp
gs
pushf
shl
sar
mov
(bad)
inc
into
loop
(bad)
jo
or
jge
add
jmp
inc
aas
inc
fsubrp
dec
mov
dec
(bad)
(bad)
(bad)
call
mov
inc
cmp
fs
or
jno
mov
jp
fmul
(bad)
jg
(bad)
and
sbb
adc
jecxz
cmp
sub
(bad)
(bad)
jmp
push
push
sti
add
inc
in
sub
inc
call
adc
mov
adc
ds
cs
inc
and
push
mov
lods
pop
mov
rcl
(bad)
arpl
xchg
push
loope
cmc
dec
jp
(bad)
(bad)
(bad)
call
jge
mov
pusha
rol
lds
fs
out
dec
cmp
xchg
js
mov
rcr
(bad)
(bad)
inc
ds
dec
pop
xchg
mov
push
les
iret
jns
mov
(bad)
(bad)
call
add
cmp
sub
loop
mov
outs
(bad)
fwait
xchg
push
sahf
(bad)
test
(bad)
call
sti
push
sbb
iret
rol
fisttp
xchg
adc
and
mov
xchg
(bad)
xchg
(bad)
inc
dec
imul
or
jmp
lahf
inc
cld
adc
sbb
dec
sub
sub
jmp
outs
in
idiv
lds
xor
jmp
mov
dec
into
cli
add
inc
pop
retf
sahf
inc
jmp
pusha
add
or
addr16
(bad)
call
(bad)
jg
and
lods
jl
cwde
sbb
adc
sub
shl
(bad)
jmp
outs
arpl
mov
bound
das
das
test
stc
imul
ins
sbb
sbb
ds
ret
cwde
fcos
(bad)
(bad)
jmp
push
mov
inc
bound
sbb
lea
loope
pushf
iret
cmc
in
push
lods
repnz
dec
ror
mov
call
inc
cli
or
imul
push
lahf
movs
cdq
jmp
sub
mov
cmps
es
xor
addr16
js
or
cld
inc
out
pop
mov
inc
ins
iret
pop
js
jmp
hlt
test
stc
mov
jg
(bad)
sti
(bad)
ror
scas
sub
cmp
dec
data16
cmp
jge
(bad)
(bad)
(bad)
fistp
dec
cmps
add
lahf
in
aam
dec
cwde
jbe
mov
pushf
jno
pusha
jb
leave
mov
das
(bad)
(bad)
(bad)
call
retf
pop
in
xchg
cmp
aam
and
dec
jns
shl
push
cdq
(bad)
and
stos
(bad)
(bad)
(bad)
call
xchg
ret
ror
or
or
mov
mov
cmp
pop
sbb
sti
jmp
(bad)
jmp
push
ins
or
fild
push
jle
push
sub
fst
mov
test
jge
leave
mov
(bad)
xor
ret
les
mov
push
inc
or
mov
add
inc
aam
mov
test
xor
(bad)
(bad)
(bad)
call
imul
stc
enter
xchg
rol
ret
jbe
pop
push
(bad)
(bad)
(bad)
call
xor
jns
mov
test
cmp
mov
out
add
dec
inc
lock
aam
pop
outs
jbe
sub
(bad)
and
lock
inc
xchg
cmc
jo
push
lods
adc
inc
jnp
cwde
scas
or
jge
push
(bad)
xor
test
inc
(bad)
aad
mov
push
cs
std
loop
push
push
cwde
inc
call
int
xchg
inc
outs
(bad)
aaa
adc
(bad)
(bad)
(bad)
jmp
and
pop
sbb
(bad)
(bad)
pop
mov
push
(bad)
cli
fisttp
jle
mov
clc
push
ds
fcomp
adc
enter
mov
push
daa
mov
mov
(bad)
mov
scas
cmp
cwde
jb
cdq
jp
nop
jmp
mov
jle
cld
(bad)
(bad)
call
and
int
in
ss
gs
cwde
mov
push
xor
jg
jle
sub
jle
xchg
aam
jmp
(bad)
(bad)
call
mov
cmc
scas
xor
push
xor
iret
imul
(bad)
(bad)
(bad)
jg
jb
jbe
jb
mov
test
cmps
fistp
movs
push
sub
push
dec
fs
jae
cmp
std
ret
pop
push
jmp
cmp
lahf
cmps
(bad)
jecxz
pop
mov
cli
jg
(bad)
pushf
popa
ja
fisubr
pop
mov
jb
xchg
int
aam
(bad)
(bad)
mov
in
mov
mov
jg
fimul
xchg
adc
or
(bad)
(bad)
ficom
jg
lods
mov
sbb
test
not
cwde
push
ins
sub
(bad)
(bad)
(bad)
inc
or
pop
arpl
add
and
or
and
sub
dec
lahf
mov
movs
inc
mov
(bad)
out
jp
or
es
(bad)
jmp
push
and
xor
add
xor
jns
outs
pusha
add
jg
fcomip
(bad)
jmp
mov
push
repnz
idiv
hlt
sbb
pop
xor
xchg
jmp
push
cld
call
xchg
or
enter
inc
lahf
hlt
pmulhuw
(bad)
outs
cwde
cmp
or
(bad)
out
aad
mov
adc
push
das
adc
(bad)
jmp
pop
adc
ret
div
(bad)
idiv
mov
pop
sub
aaa
outs
int3
(bad)
sbb
sub
ins
adc
fmul
(bad)
dec
lock
or
adc
and
adc
cmp
les
add
(bad)
(bad)
jmp
sahf
cmp
js
je
sti
mov
sbb
jmp
sbb
outs
clc
(bad)
jmp
push
and
jns
call
movs
loope
repnz
xchg
push
out
pusha
dec
stos
in
xlat
int
(bad)
(bad)
inc
and
cld
adc
and
push
frstor
shl
test
sar
push
(bad)
(bad)
(bad)
push
or
mov
push
int
adc
jns
sbb
idiv
scas
push
jbe
je
repz
xor
pop
jmp
push
sub
(bad)
(bad)
jmp
jmp
mov
cld
jno
dec
inc
repnz
adc
and
jge
push
and
(bad)
dec
loope
test
xor
sbb
(bad)
pop
fcmove
add
cmp
test
(bad)
(bad)
mov
not
xor
pop
jo
scas
push
sbb
sub
loopne
xor
arpl
cmp
cmp
cmp
aaa
(bad)
(bad)
mov
mov
in
sub
mov
mov
sub
into
out
leave
fisub
aaa
clc
jg
jmp
movs
sbb
inc
add
fs
xor
test
xchg
gs
(bad)
(bad)
jmp
pop
scas
xchg
gs
ja
lods
cmps
inc
xor
jge
addr16
mov
xchg
scas
sbb
add
and
mov
mov
push
add
jmp
mov
sbb
icebp
push
into
dec
and
mov
je
in
mov
and
je
pop
call
mov
icebp
sbb
sbb
push
sub
(bad)
(bad)
(bad)
dec
or
or
(bad)
lods
or
cdq
mov
fist
jl
xchg
push
mov
int3
dec
mov
adc
fbld
sub
fdivr
fcomip
inc
push
pusha
sbb
imul
mov
out
jne
movs
and
loopne
test
loope
(bad)
dec
push
inc
ins
ret
sub
scas
ret
and
loop
sub
call
imul
jp
add
rol
(bad)
(bad)
(bad)
cmp
xchg
cmps
lods
xor
dec
and
bound
mov
ins
clc
mov
(bad)
inc
jg
dec
inc
loopne
ficomp
inc
sbb
push
scas
(bad)
mov
enter
scas
aas
pop
jg
ret
xor
(bad)
jmp
(bad)
jmp
jecxz
xchg
lds
cmp
jmp
sub
push
cld
dec
lods
dec
xchg
lock
add
int
push
loopne
imul
iret
dec
out
icebp
sub
mov
mov
xlat
or
mov
ins
inc
xor
nop
add
dec
movs
scas
movs
loope
(bad)
call
daa
add
xchg
push
outs
retf
inc
and
jp
out
dec
mov
adc
lds
jg
(bad)
mov
jbe
stos
dec
inc
push
sub
cmps
outs
in
fcomp
lea
cmc
push
call
lock
push
arpl
gs
stc
fcom
pop
adc
xchg
(bad)
(bad)
(bad)
call
idiv
aaa
pop
imul
dec
aaa
clc
popf
mov
fld
cmp
scas
les
cmp
(bad)
jmp
retf
leave
cmp
rcr
pop
mov
or
(bad)
(bad)
(bad)
(bad)
jl
cmp
stos
xor
add
sahf
clc
neg
push
scas
int
(bad)
mov
xchg
jecxz
repz
fidiv
jg
(bad)
(bad)
std
mov
pop
xchg
mov
push
push
mov
das
fist
sahf
in
call
(bad)
cmp
mov
cmp
movs
sti
xchg
xchg
xchg
les
iret
(bad)
(bad)
(bad)
push
dec
imul
pop
(bad)
in
sbb
pusha
ss
mov
cli
(bad)
call
hlt
fdivr
shl
ror
cli
dec
addr16
mov
push
mov
push
pop
mov
adc
(bad)
pop
lock
or
shl
pop
add
scas
pushf
sub
call
or
jmp
loopne
mov
pop
je
dec
pop
sub
cmp
sbb
push
xchg
hlt
(bad)
pop
shr
(bad)
(bad)
(bad)
push
and
daa
push
div
pop
aaa
push
jb
enter
mov
dec
fwait
call
or
jbe
jae
call
xor
jmp
(bad)
pop
mov
in
mov
pop
cmps
dec
or
mov
jno
adc
or
ins
(bad)
(bad)
(bad)
call
clc
jae
add
sbb
dec
mov
and
dec
popa
les
(bad)
cmp
mov
cs
inc
pop
std
push
cmps
outs
cmp
and
inc
test
jbe
inc
shl
(bad)
(bad)
(bad)
jmp
scas
cwde
shr
pop
inc
les
mov
fisubr
retf
or
int
add
dec
iret
fsubr
push
cs
add
stos
test
loop
aam
outs
pusha
cmp
add
arpl
inc
fcomp
xchg
jl
jo
and
inc
je
or
(bad)
(bad)
push
loopne
cmp
push
iret
inc
or
mov
xchg
and
push
add
scas
jae
mov
(bad)
pusha
daa
mov
xchg
shl
(bad)
jg
jmp
xchg
(bad)
fcomip
mov
test
leave
ins
fisub
cs
or
sar
push
sub
push
or
mov
push
jp
add
(bad)
inc
xor
adc
in
addr16
into
adc
rcl
wbinvd
cmp
(bad)
(bad)
(bad)
jmp
aaa
repnz
shr
pushf
xlat
adc
retf
mov
or
test
pop
sahf
xchg
dec
adc
(bad)
(bad)
call
lds
gs
iret
jmp
jae
cmp
(bad)
fild
push
sbb
push
xor
test
test
inc
(bad)
mov
or
leave
test
aaa
out
ins
pushf
and
scas
test
and
sub
(bad)
(bad)
(bad)
jnp
xor
xor
repnz
ds
popf
out
and
mov
xor
mov
add
fsub
lods
push
mov
mov
or
mov
lock
push
inc
adc
fsubp
inc
jmp
inc
cli
repnz
mov
xor
dec
(bad)
jmp
mov
dec
push
das
jns
add
rol
sahf
loop
pop
movs
fdivrp
mov
(bad)
(bad)
push
cli
imul
sub
cmc
sub
jp
xor
mov
cmp
inc
(bad)
xchg
pusha
push
mov
sub
aas
movs
mov
ins
lods
cmp
xchg
push
push
shl
sub
ret
jmp
das
and
mov
out
movs
adc
call
call
mov
shr
int3
sub
dec
adc
adc
js
or
lea
inc
push
fiadd
pop
dec
cmps
push
dec
in
test
pop
sar
jmp
push
push
out
pop
das
in
popa
call
pop
aam
(bad)
jmp
out
fimul
pop
mov
jbe
mul
in
ds
(bad)
(bad)
mov
jmp
mov
test
cmps
sbb
mov
call
lds
pop
jl
jbe
mov
adc
call
imul
int3
sub
fisub
pop
xor
push
adc
sub
or
sar
gs
jecxz
pushf
inc
ds
(bad)
or
call
pop
stos
and
js
mov
js
mov
(bad)
mov
stos
int3
jbe
shl
loope
rol
cmp
(bad)
inc
jp
sbb
push
mov
adc
jecxz
mov
mov
mov
(bad)
(bad)
(bad)
jmp
jecxz
dec
cli
shl
xor
aas
iret
jp
pop
and
leave
or
test
add
xchg
call
pop
mov
(bad)
aas
dec
push
xchg
sti
jnp
dec
mov
jecxz
sub
adc
jmp
add
pop
xor
rol
cmp
or
cmps
xchg
data16
aam
(bad)
(bad)
jmp
pushw
push
outs
sahf
icebp
mov
sub
pop
mov
outs
cmps
in
adc
aaa
jo
(bad)
out
cli
call
cmps
jns
repz
clc
inc
xchg
pop
jno
icebp
stos
jno
sbb
mov
dec
push
pop
xor
jmp
shr
lods
sar
sar
push
adc
jnp
or
hlt
movs
scas
xchg
(bad)
(bad)
call
xchg
cmp
jle
add
sub
push
inc
sbb
xor
aad
push
sub
aaa
or
data16
inc
pop
adc
dec
cmp
outs
dec
in
mov
and
(bad)
call
xlat
adc
movs
jb
cmps
or
sbb
or
adc
dec
jmp
int3
mov
cmc
(bad)
jl
mov
push
in
add
outs
imul
repnz
loope
(bad)
(bad)
(bad)
jmp
mov
push
fnstenv
pop
or
add
mul
push
addr16
adc
lds
(bad)
(bad)
(bad)
(bad)
out
mov
out
aaa
inc
mov
jno
and
shl
mov
iret
lock
pop
call
mov
xor
cmp
sub
cdq
fcmovne
push
and
mov
(bad)
(bad)
(bad)
push
pop
inc
xchg
mov
lock
cmps
inc
cdq
(bad)
loope
push
rcr
paddsb
(bad)
(bad)
(bad)
jmp
sahf
mov
adc
out
xchg
lahf
or
jle
push
dec
xor
in
xchg
jg
(bad)
(bad)
(bad)
call
test
(bad)
jno
mov
inc
push
pop
(bad)
sub
jnp
lea
sbb
loope
outs
(bad)
(bad)
(bad)
call
scas
push
idiv
and
(bad)
xor
movs
jmp
jb
lods
iret
mov
outs
cld
mov
lods
retf
mov
imul
(bad)
(bad)
(bad)
(bad)
fsubr
test
jbe
xor
loope
push
call
outs
sti
pop
xchg
jecxz
cdq
loop
add
push
push
stos
or
inc
test
push
(bad)
(bad)
(bad)
mov
aas
ja
sbb
das
fnstcw
xor
mov
and
push
jle
arpl
scas
add
(bad)
jmp
aaa
aaa
and
cmp
outs
mov
jmp
cli
fwait
push
jae
in
inc
adc
call
retf
pop
leave
rol
(bad)
(bad)
jmp
cmp
inc
dec
jecxz
int
(bad)
pushf
and
adc
inc
aad
inc
sar
push
out
fwait
addr16
xor
cmp
pop
outs
xchg
pop
(bad)
(bad)
push
into
sahf
pushf
mov
jge
jb
mov
js
test
dec
mov
out
fcomip
(bad)
call
mov
sub
div
ret
add
call
int
cmp
in
loop
xchg
mov
cld
ja
xor
ins
(bad)
fcomip
mov
add
shl
mov
imul
mov
mov
sbb
pop
cdq
sar
add
jmp
pop
mov
ret
hlt
xor
cs
(bad)
cmp
daa
stc
mov
icebp
sub
and
call
retf
xor
leave
inc
sbb
sbb
xchg
(bad)
(bad)
(bad)
(bad)
std
push
add
movs
int
dec
mov
shl
xchg
and
add
jae
popa
lock
les
push
cmc
pop
add
xor
xchg
(bad)
(bad)
jmp
push
cmp
jne
mov
(bad)
cmp
cli
jae
pop
add
(bad)
inc
loopne
mov
lods
aad
xlat
nop
dec
(bad)
push
mul
mov
inc
lock
(bad)
(bad)
(bad)
inc
adc
jae
dec
arpl
fidiv
test
cdq
cld
mov
xor
push
mov
and
dec
jg
shr
(bad)
(bad)
(bad)
inc
scas
shl
aaa
inc
xor
mov
jno
dec
cmps
cmp
sub
cli
inc
(bad)
xchg
push
mov
and
test
xor
pop
scas
jmp
sub
call
jmp
mov
dec
retf
addr16
mov
out
jae
push
fcomp
jns
(bad)
(bad)
(bad)
sti
repnz
cli
das
fcmovnbe
mov
jmp
in
inc
test
mov
push
(bad)
(bad)
dec
sub
jg
out
lock
ss
ins
arpl
sbb
(bad)
(bad)
mov
scas
loopne
mov
push
mov
add
xlat
int
fimul
pop
inc
in
gs
int3
push
shr
add
dec
scas
adc
and
stos
and
(bad)
dec
and
jae
sub
pop
lea
ins
jno
(bad)
(bad)
push
push
rep
xchg
jecxz
out
mov
pusha
test
(bad)
out
xchg
imul
add
mov
fadd
xchg
dec
jg
inc
xchg
(bad)
(bad)
(bad)
inc
daa
mov
push
mov
push
stos
inc
gs
push
xchg
and
sar
inc
aaa
std
add
cmp
or
xor
in
movs
test
pusha
and
(bad)
(bad)
call
ja
les
or
lahf
lea
retf
ret
mov
into
mov
(bad)
jg
cmp
jg
outs
and
fcomp
mov
gs
jmp
fs
mov
mov
ss
xlat
lahf
sti
adc
ds
ja
cwde
es
(bad)
(bad)
(bad)
jmp
jmp
das
cmp
cli
clc
xchg
add
in
xchg
data16
movs
sub
je
sub
push
jge
in
jne
sbb
xchg
or
pop
sbb
mov
js
sar
shr
fwait
arpl
jb
mov
sub
outs
clc
(bad)
sti
dec
mov
je
mov
cmp
cmp
dec
jbe
add
push
or
out
mov
(bad)
push
int
imul
dec
xchg
ficom
stos
jle
cs
sahf
ins
iret
add
cmp
inc
(bad)
xchg
jb
fnsave
sbb
(bad)
(bad)
(bad)
mov
jg
aaa
dec
pop
test
int
fldenv
in
mov
je
cmp
(bad)
(bad)
(bad)
dec
test
je
fsubr
sbb
(bad)
ins
sbb
or
cmp
mov
(bad)
(bad)
(bad)
call
(bad)
push
or
mov
psubq
pusha
mov
and
cmp
dec
popa
jae
xchg
imul
movs
inc
mov
rol
ror
out
jg
pop
mov
ret
sbb
pusha
add
adc
scas
mov
(bad)
(bad)
jg
stos
fwait
push
sbb
mov
pusha
mov
mov
adc
mov
mov
xchg
mov
add
sbb
cmps
push
dec
or
jae
(bad)
xchg
and
js
(bad)
(bad)
(bad)
mov
jns
pop
cmp
imul
(bad)
pop
jmp
fistp
adc
bound
popf
(bad)
mov
out
adc
cmp
pop
out
shr
retf
leave
imul
and
repz
(bad)
xchg
or
outs
sar
dec
ins
rcr
retf
jbe
pop
sbb
idiv
pop
outs
fcomp
(bad)
push
and
lahf
mov
(bad)
mov
mov
and
cmps
push
add
add
mov
rcr
(bad)
(bad)
inc
dec
test
push
mov
std
out
push
pop
and
popf
iret
arpl
jno
dec
bound
dec
push
inc
mov
and
das
sub
sbb
movs
bound
dec
test
xlat
(bad)
jmp
cmp
mov
add
cld
mov
mov
out
pop
sbb
jg
aam
int3
jo
imul
mov
jmp
(bad)
push
lahf
xchg
repz
add
(bad)
pushf
in
add
ror
add
mov
call
cmp
dec
clc
retf
mov
(bad)
(bad)
dec
sti
add
rol
fcmovb
sub
jle
xor
push
or
jo
int
cdq
xor
jecxz
clc
fwait
shr
call
cmps
pop
in
test
test
(bad)
jmp
ins
push
imul
cmp
inc
xor
stos
pop
outs
fxch
(bad)
(bad)
(bad)
push
retf
jb
xchg
push
jnp
mov
loop
sbb
mov
mov
nop
sbb
mov
ds
(bad)
(bad)
dec
in
mov
inc
daa
push
call
out
sbb
push
xchg
(bad)
imul
push
mov
sar
fild
(bad)
mov
mov
add
(bad)
loop
xor
lock
mov
or
aaa
retf
(bad)
and
sbb
movs
cwde
xchg
(bad)
(bad)
(bad)
jmp
ret
or
ds
inc
mov
mov
mov
cmp
jae
mov
xchg
hlt
(bad)
(bad)
inc
and
adc
daa
xor
clc
sbb
sub
or
(bad)
(bad)
call
lahf
and
outs
call
inc
or
adc
pop
ds
out
xchg
lahf
jnp
stos
sbb
(bad)
(bad)
jmp
mov
nop
inc
(bad)
imul
call
mov
loop
(bad)
(bad)
jmp
das
and
dec
push
and
xchg
ins
movs
inc
aam
xchg
data16
jo
(bad)
jmp
inc
ja
or
pop
jge
nop
(bad)
call
hlt
movs
(bad)
(bad)
mov
dec
movs
repnz
test
dec
add
pop
idiv
(bad)
(bad)
jl
push
cli
cwde
or
sub
sub
ins
pop
add
mov
and
mov
inc
pop
hlt
dec
inc
aad
push
push
aad
rcr
mov
push
(bad)
jg
test
les
sub
dec
pop
xchg
xchg
test
push
mov
mov
(bad)
(bad)
jmp
lea
sub
ret
outs
bound
inc
adc
inc
mov
leave
stos
and
out
jmp
cmp
enter
dec
fidivr
test
scas
aam
ja
hlt
ret
mov
repz
dec
mov
cmps
xlat
rol
inc
mov
(bad)
(bad)
jmp
popf
mov
dec
add
sub
sbb
stc
xor
xchg
push
(bad)
(bad)
(bad)
(bad)
cld
popa
pusha
adc
cmp
xchg
jmp
(bad)
es
lods
out
jl
push
mov
sbb
(bad)
(bad)
call
inc
sahf
xor
int
sbb
call
xor
and
jmp
jno
nop
(bad)
out
movs
add
movs
inc
xor
inc
push
adc
fdivr
(bad)
(bad)
jmp
arpl
stc
pusha
rol
sahf
fwait
mov
(bad)
jne
or
add
(bad)
(bad)
jmp
or
mov
out
ret
adc
sbb
and
add
(bad)
(bad)
call
jmp
mov
sbb
(bad)
mov
in
inc
enter
(bad)
jns
std
cmc
jb
shl
jb
test
dec
and
xchg
je
xor
pop
mov
sbb
(bad)
(bad)
(bad)
jmp
mov
out
mov
fst
push
push
and
pop
jae
xlat
push
jae
daa
ja
jne
sub
push
jecxz
inc
movs
mov
or
or
fstp
lds
adc
(bad)
(bad)
(bad)
out
inc
call
mov
adc
cmc
retf
add
scas
out
in
pop
mov
(bad)
(bad)
(bad)
(bad)
sti
fnstcw
retf
pop
sub
mov
leave
jmp
inc
xchg
pusha
arpl
repz
(bad)
(bad)
push
push
and
push
and
sbb
sbb
jae
cmps
xor
lods
outs
jp
test
les
xor
or
cli
cli
inc
popa
outs
loop
mov
inc
push
loopne
bound
xchg
das
sar
in
(bad)
mov
inc
rol
sbb
retf
add
out
cmp
out
pop
lock
sub
sbb
fs
dec
sti
and
(bad)
(bad)
jmp
ss
add
inc
neg
sbb
xor
aaa
pop
movs
xchg
push
mov
mov
(bad)
push
repz
inc
xchg
mov
pop
sbb
out
mov
aam
call
mov
shl
into
loop
fiadd
push
cdq
das
in
mov
(bad)
push
and
mov
add
dec
retf
imul
sbb
call
inc
xchg
retf
mov
sti
cmps
adc
or
jno
lods
popa
adc
test
es
(bad)
(bad)
jns
pop
and
test
and
mov
test
dec
cmp
push
push
retf
pop
rol
das
pop
pop
loop
or
retf
xchg
cmp
adc
jne
mov
xor
cmp
lds
add
(bad)
jmp
sub
jge
mov
xor
xchg
test
pop
cmp
inc
jl
ret
aad
js
push
aam
adc
xor
push
jle
(bad)
mov
add
add
loop
cmp
mov
(bad)
(bad)
(bad)
call
mov
adc
push
enter
xor
mov
ficom
(bad)
(bad)
(bad)
inc
test
movs
cmp
mov
(bad)
ret
cmp
(bad)
sar
(bad)
jmp
call
(bad)
outs
es
popa
jl
(bad)
neg
dec
mov
pusha
xchg
mov
(bad)
(bad)
(bad)
jg
vmovaps
pop
sub
fist
dec
adc
fadd
imul
jnp
sar
stos
mov
jne
gs
(bad)
mov
and
nop
addr16
(bad)
(bad)
cmp
add
out
push
xchg
cld
add
jle
adc
(bad)
mov
pop
leave
loop
scas
mov
sbb
fstp
lahf
or
call
pop
fisttp
push
push
pop
xchg
mov
pop
mov
sti
xchg
mov
cs
(bad)
sub
and
adc
stos
add
jbe
(bad)
(bad)
push
and
test
scas
mov
mov
cmp
mov
xchg
cmp
pop
repnz
xor
loop
and
cmp
sub
(bad)
cmp
ds
cmp
pop
loopne
shl
jg
call
adc
in
and
add
or
mov
int3
jne
(bad)
(bad)
(bad)
push
aas
xlat
sti
add
inc
xor
sbb
sbb
jcxz
int
enter
and
(bad)
(bad)
push
push
aaa
push
fild
and
movs
mov
jg
ds
clc
adc
pop
mov
rol
dec
mov
shl
add
inc
cdq
or
fmul
xchg
out
pop
xchg
xchg
or
push
xlat
mov
or
(bad)
(bad)
(bad)
cmp
fidiv
xor
test
popf
in
ds
mov
(bad)
mov
sub
(bad)
xor
sub
or
push
cld
pop
inc
xchg
ror
mov
call
inc
sub
fld
loope
xchg
push
aaa
inc
ret
cmc
cmp
pop
icebp
jmp
retf
lods
cmp
cdq
fldenv
movs
and
movs
add
push
stos
hlt
and
dec
aaa
test
call
arpl
or
mov
comiss
fcom
fsubr
mov
std
les
pop
mov
mov
dec
mov
fist
pushf
frstor
outs
pause
(bad)
(bad)
(bad)
(bad)
cld
mov
jo
lods
or
cs
dec
sub
(bad)
mov
mov
push
mov
pop
cld
pop
adc
fs
mov
mov
push
repnz
in
mov
(bad)
(bad)
(bad)
(bad)
js
inc
xor
cmp
mov
xor
add
out
add
loop
cmp
movs
ret
cmp
inc
inc
push
cmp
add
mov
sbb
data16
sbb
(bad)
dec
aad
sub
shl
sub
jge
gs
fidivr
repz
jns
push
xchg
mov
(bad)
mov
and
add
out
lea
inc
xchg
out
xchg
mov
(bad)
(bad)
dec
in
add
push
fwait
in
cmc
fadd
add
sbb
push
aad
(bad)
(bad)
(bad)
jmp
imul
mov
jg
sahf
mov
out
lahf
push
pop
shr
daa
getsec
pop
cwde
in
popa
dec
imul
rcl
inc
scas
cdq
out
cmp
fdiv
hlt
mov
loopne
enter
sbb
jge
cli
(bad)
(bad)
js
stos
and
rdmsr
icebp
and
cld
sbb
sbb
addr16
pop
push
pushf
and
scas
(bad)
(bad)
(bad)
(bad)
std
push
jp
test
adc
dec
ror
loopne
into
ja
mov
jno
sub
jmp
mov
daa
mov
lds
jb
sbb
add
bound
(bad)
call
pushf
call
fs
mul
lahf
jbe
call
adc
(bad)
mov
add
push
jbe
arpl
call
fimul
jge
add
inc
in
(bad)
(bad)
(bad)
jmp
cmps
not
xor
icebp
loope
nop
lahf
cwde
scas
(bad)
cmp
sbb
shl
(bad)
(bad)
push
mov
loopne
mov
and
bound
dec
inc
call
arpl
push
inc
cmp
(bad)
(bad)
call
and
repnz
jl
outs
jb
xchg
push
jmp
push
rcr
pop
mov
cmc
pop
inc
shr
sahf
cmp
push
repnz
dec
in
add
pop
inc
mov
popf
jmp
addr16
pop
jb
adc
xchg
(bad)
cld
mov
call
loopne
fst
pop
pop
mov
xor
dec
or
cmps
jae
mov
(bad)
(bad)
jmp
xor
sbb
and
xor
mov
fiadd
(bad)
jmp
call
jnp
jne
fldcw
(bad)
xchg
mov
lahf
add
(bad)
fist
inc
cwde
test
shl
mov
sub
mov
mov
xchg
es
into
(bad)
call
(bad)
out
cmp
stc
in
push
push
jnp
scas
rcl
sti
gs
inc
fcmovu
(bad)
(bad)
(bad)
dec
and
dec
ins
mov
mov
loopne
pop
popf
and
xchg
pop
dec
or
jmp
(bad)
jg
xor
gs
int
xor
hlt
(bad)
(bad)
(bad)
cmp
cmps
push
test
xlat
jae
clc
dec
out
or
test
xor
jmp
inc
pop
push
aaa
mov
cmps
adc
rcr
dec
mov
cmps
xor
mov
mov
xor
push
pop
(bad)
icebp
push
or
fsub
push
(bad)
(bad)
jmp
int
adc
nop
xchg
and
mov
inc
aam
jo
(bad)
adc
inc
jmp
in
or
push
xchg
jp
or
cmp
(bad)
(bad)
(bad)
call
xchg
xlat
retf
(bad)
(bad)
retf
adc
lods
aam
rol
call
lock
mov
(bad)
(bad)
call
adc
xchg
inc
cmp
jle
or
jae
imul
in
mov
fsub
retf
and
cmp
outs
test
push
mov
icebp
in
xchg
push
adc
scas
jg
call
jl
inc
adc
ret
xchg
test
(bad)
(bad)
(bad)
dec
add
sbb
iret
mov
fild
js
daa
xor
ins
adc
shr
dec
adc
push
jmp
adc
xor
xor
(bad)
jge
sbb
es
in
(bad)
and
(bad)
(bad)
dec
xchg
inc
clc
xlat
test
popf
ins
xlat
adc
je
push
cdq
jecxz
jmp
push
xchg
mov
or
js
mov
xchg
es
sub
adc
pop
push
adc
(bad)
inc
dec
add
vorps
mov
ror
mov
pop
nop
dec
mov
outs
pop
xor
out
and
mov
fmul
ret
mov
cmp
jnp
shl
(bad)
(bad)
fstp
loop
dec
adc
sub
out
add
mov
(bad)
(bad)
(bad)
jg
push
sbb
dec
jge
mov
pop
loope
sbb
movs
cmc
mov
hlt
mov
(bad)
(bad)
dec
(bad)
gs
fidivr
loop
dec
inc
loop
mov
push
inc
sbb
jns
shl
xlat
and
xor
add
dec
sahf
push
data16
daa
or
stos
lods
mov
(bad)
(bad)
(bad)
jmp
es
rcr
shl
retf
test
addr16
aam
pop
pop
(bad)
(bad)
(bad)
(bad)
fisub
dec
pusha
push
add
shl
jnp
and
dec
les
dec
(bad)
(bad)
(bad)
jmp
adc
sahf
fcomip
add
data16
dec
imul
das
ja
sti
mov
call
xchg
repz
ds
outs
inc
les
push
ds
retf
shr
retf
stos
or
or
(bad)
(bad)
dec
pop
adc
mov
aad
xor
lock
push
sub
mov
cmps
fld
sbb
(bad)
(bad)
shl
ss
cmp
dec
push
(bad)
pop
inc
out
retf
jmp
imul
cmp
call
jb
mov
enter
mov
(bad)
sub
fcmovnb
test
retf
stos
push
or
scas
or
(bad)
(bad)
(bad)
dec
jb
fs
aas
stc
cmp
mov
push
mov
loope
inc
cmp
jnp
cmp
(bad)
(bad)
(bad)
(bad)
in
adc
int
dec
push
cmps
inc
mov
rcl
pop
adc
adc
(bad)
lahf
mov
fldcw
(bad)
(bad)
push
mov
pop
and
xor
mov
mov
jmp
(bad)
mov
out
add
aad
test
clc
fnstsw
inc
or
js
aam
sbb
ret
inc
and
or
inc
mov
(bad)
(bad)
(bad)
cmp
stos
or
jns
sbb
jmp
xor
jmp
nop
mov
xchg
in
retf
ja
(bad)
jb
(bad)
(bad)
(bad)
jmp
pop
in
sti
cwde
out
daa
xchg
mov
mov
sbb
or
and
cmp
outs
stos
xor
or
lahf
push
ret
aas
jg
test
adc
xor
mov
(bad)
(bad)
jmp
push
sti
pop
jns
mov
(bad)
pushf
loop
sar
std
inc
stos
inc
mov
movs
mov
jmp
ret
adc
(bad)
pop
and
inc
jle
xor
into
inc
outs
cmp
nop
xchg
mov
dec
(bad)
(bad)
(bad)
call
test
loopne
push
xchg
jo
sub
or
dec
mov
mov
inc
jmp
ins
daa
inc
and
(bad)
jmp
xor
jnp
call
test
xchg
pop
dec
aam
sbb
cmp
fwait
movs
pop
lods
in
fnstcw
jp
in
popa
sbb
inc
or
std
rcl
iret
mov
(bad)
jmp
sbb
inc
inc
push
sub
(bad)
pop
or
aam
xchg
fs
cmps
pop
(bad)
(bad)
(bad)
dec
ret
push
and
mov
cld
dec
addr16
arpl
ss
xchg
pop
cmp
repz
adc
mov
sub
push
adc
jb
pushf
add
pop
(bad)
(bad)
(bad)
(bad)
jmp
or
aad
scas
stos
push
mov
mov
sbb
(bad)
sti
and
jmp
push
dec
pop
int
pushf
call
ins
movs
imul
mov
xchg
icebp
push
lods
out
and
out
dec
mov
adc
dec
or
in
sbb
data16
(bad)
dec
mov
xchg
mov
xor
test
lods
add
jmp
push
dec
and
movs
ins
jmp
push
cld
mov
pop
sbb
loop
jmp
(bad)
cmp
pop
cwde
dec
lods
jo
adc
xchg
fdivr
pop
or
push
pop
add
xor
mov
mov
add
mov
mov
inc
mov
mov
(bad)
(bad)
out
cli
xor
xor
shl
lds
jge
call
jg
pop
adc
pop
add
lahf
inc
lods
mov
dec
cmp
je
lea
jmp
sbb
(bad)
(bad)
(bad)
dec
xlat
int3
or
stos
(bad)
jp
xchg
mov
aad
fs
fnstenv
jp
ds
cmp
gs
(bad)
(bad)
dec
mov
or
les
rcr
sub
inc
fdiv
rol
cld
(bad)
dec
fiadd
and
into
or
xchg
pop
sahf
mov
and
push
in
(bad)
fcmovne
cmp
std
(bad)
in
add
pop
in
test
xor
mov
lea
call
call
jae
or
mov
cvtdq2ps
mov
push
mov
adc
popa
ss
push
(bad)
inc
je
cmps
sub
push
(bad)
imul
icebp
(bad)
(bad)
(bad)
(bad)
cli
mov
lea
pop
and
or
adc
jg
(bad)
movs
and
cdq
test
cmp
sub
fs
pop
outs
jge
pop
jo
xor
mov
pop
push
sub
in
adc
out
cld
(bad)
(bad)
(bad)
call
xor
adc
mov
add
sbb
xor
call
leave
(bad)
push
mov
dec
call
scas
sar
int
popf
mov
jg
cmp
(bad)
(bad)
(bad)
mov
xchg
and
aam
stos
or
pop
cmp
push
mov
ja
mov
push
push
dec
out
(bad)
(bad)
jmp
popf
cli
jle
lods
dec
sbb
xor
pop
cs
cmp
pop
imul
xchg
(bad)
(bad)
(bad)
push
xchg
mov
pop
pmaddwd
std
ds
jecxz
out
push
mov
loop
mov
(bad)
push
pop
leave
push
bound
jmp
shl
imul
test
cmp
cmp
dec
or
ins
mov
(bad)
jg
mov
sbb
inc
jne
pop
adc
out
arpl
and
outs
cmp
xor
or
push
fidivr
mov
loop
push
std
out
clc
sbb
cmp
(bad)
(bad)
(bad)
jmp
add
dec
xchg
loopne
outs
mov
es
xchg
aad
inc
stc
sti
push
jmp
pop
xor
ins
aaa
jl
and
mov
dec
cmc
loop
in
sub
xchg
nop
popf
popf
dec
and
dec
ficom
call
inc
(bad)
outs
lods
loope
das
and
stc
scas
test
lods
sbb
adc
(bad)
(bad)
(bad)
inc
dec
xchg
cld
test
scas
dec
xor
js
jle
cmp
xlat
ret
push
les
(bad)
(bad)
(bad)
jmp
jae
sub
int
pop
(bad)
add
sub
aaa
mov
and
pop
mov
fild
dec
inc
dec
ss
sub
xor
or
xchg
lock
jmp
sub
or
(bad)
push
and
lahf
jle
(bad)
out
movs
xchg
sbb
aas
adc
jmp
test
pop
mov
(bad)
(bad)
cmp
jno
(bad)
xchg
(bad)
cmp
loopne
fsincos
xchg
repnz
mov
pop
or
inc
ret
(bad)
(bad)
(bad)
jge
push
dec
imul
adc
jne
mov
jl
mov
push
pop
scas
pop
stos
mov
out
(bad)
(bad)
(bad)
jmp
sbb
cmp
xchg
or
inc
jns
mov
jno
sbb
repnz
(bad)
(bad)
inc
jge
data16
popf
sub
fiadd
leave
push
cwde
dec
xchg
(bad)
or
sar
push
(bad)
(bad)
(bad)
jmp
xor
sbb
jmp
cld
pop
cs
pop
mov
push
dec
pop
in
mov
sub
loop
mov
cdq
(bad)
(bad)
(bad)
dec
cmp
sbb
mov
loope
add
loop
mov
adc
adc
(bad)
(bad)
(bad)
call
(bad)
xchg
xor
pop
and
test
sbb
mov
dec
dec
aad
sti
xor
(bad)
(bad)
(bad)
inc
mov
push
push
xchg
jmp
cmp
push
sahf
imul
push
das
(bad)
(bad)
(bad)
jmp
or
aaa
and
rol
mov
dec
pop
jecxz
mov
or
(bad)
(bad)
cmp
fld
jne
adc
rcl
sub
(bad)
inc
jp
rcr
dec
dec
jb
lahf
jno
(bad)
sbb
out
in
rcl
(bad)
jmp
ror
mov
and
push
lods
jmp
pop
xor
(bad)
(bad)
cli
pop
mov
mov
pop
pop
and
or
mov
mov
(bad)
push
cld
lock
rcr
and
fistp
cdq
das
popf
mov
(bad)
(bad)
(bad)
jmp
xor
jmp
push
(bad)
jge
data16
sbb
mov
push
push
fdiv
inc
lods
scas
push
xor
mov
or
adc
cmps
(bad)
call
arpl
pop
cmps
or
ss
icebp
adc
int3
jl
xchg
inc
adc
popa
(bad)
fs
mov
hlt
jl
dec
sub
mov
stos
repnz
ins
xchg
sar
inc
jnp
push
ret
push
movs
ins
jecxz
adc
sub
(bad)
pop
mov
(bad)
(bad)
dec
or
mov
add
cld
out
xor
(bad)
push
mov
or
dec
xor
pop
mov
mov
mov
call
mov
inc
and
and
or
pop
imul
dec
jge
es
in
dec
add
mov
pop
cld
pop
stc
mov
test
(bad)
cmp
jge
cs
add
sbb
daa
icebp
(bad)
(bad)
call
jmp
sbb
adc
inc
dec
fcom
push
(bad)
push
out
sub
gs
jle
push
repnz
jle
cs
pop
nop
dec
xor
(bad)
jg
and
daa
scas
scas
loopne
inc
xchg
xor
fdivr
dec
cmp
xor
cmp
(bad)
(bad)
fcomp
lods
jb
jmp
mov
jmp
scas
test
pusha
jns
call
(bad)
dec
scas
and
dec
dec
cli
cs
cli
sub
clc
popf
xchg
repz
or
cmp
xlat
xchg
and
clc
(bad)
cmp
jbe
xchg
xor
(bad)
out
sbb
lods
mov
add
(bad)
(bad)
jmp
shl
lods
in
popa
(bad)
xchg
xchg
mov
push
lahf
add
xchg
push
push
test
sbb
aas
cmp
(bad)
(bad)
dec
mov
div
pusha
inc
adc
pop
push
cs
cmps
jns
sti
repz
ret
(bad)
(bad)
(bad)
mov
mov
hlt
dec
pop
cmps
sti
pop
enter
mov
dec
popa
mov
xchg
xchg
sti
push
test
(bad)
(bad)
(bad)
(bad)
inc
imul
xchg
push
cmc
and
and
mov
test
(bad)
jge
dec
out
dec
test
cmp
push
mov
jnp
imul
pop
vpmaddwd
sub
(bad)
(bad)
(bad)
jmp
and
sbb
mov
nop
repnz
sbb
jnp
dec
movs
add
sub
ret
lahf
call
cmp
(bad)
(bad)
mov
cld
(bad)
lods
cmp
shl
push
jbe
(bad)
or
fdiv
inc
mov
jnp
push
std
call
stos
mov
imul
xchg
daa
pop
or
dec
in
bound
test
aad
call
cmp
imul
(bad)
std
les
mov
mov
pushf
push
pusha
xor
stc
(bad)
(bad)
(bad)
dec
into
add
or
(bad)
fwait
cdq
loope
iret
in
inc
and
xor
(bad)
(bad)
(bad)
(bad)
std
mov
jp
hlt
jae
enter
fneni(8087
(bad)
daa
retf
repnz
sti
cli
inc
or
addr16
(bad)
(bad)
inc
xchg
sub
aaa
mov
cmps
and
mov
push
enter
xchg
xor
push
cmp
(bad)
(bad)
(bad)
jle
stc
outs
sub
pop
mov
aas
and
and
xchg
hlt
lock
jmp
mov
(bad)
inc
test
dec
ins
cmp
(bad)
(bad)
jle
imul
out
daa
xchg
lahf
test
jne
iret
mov
dec
xchg
(bad)
xor
dec
pop
pop
inc
inc
pop
mov
cmp
imul
pop
cmp
inc
add
(bad)
cli
call
ror
pop
in
cmp
(bad)
(bad)
jmp
popf
in
xchg
(bad)
call
xor
in
cmp
mov
inc
call
add
(bad)
inc
dec
sti
loopne
mov
in
rcl
xchg
cmps
out
inc
stos
mov
ins
je
mov
jp
ins
(bad)
in
sub
stos
dec
gs
bnd
stc
fwait
xchg
sbb
sbb
(bad)
(bad)
(bad)
push
adc
nop
and
sbb
les
(bad)
test
(bad)
(bad)
inc
test
xchg
cli
sahf
inc
mov
pop
nop
test
mov
repz
enter
jecxz
fwait
(bad)
(bad)
jg
xor
frstpm(287
int3
clc
and
jb
jne
push
ret
dec
xchg
ret
(bad)
(bad)
dec
pop
out
sub
aam
add
lods
(bad)
test
cmc
adc
call
inc
in
out
pusha
jno
hlt
ficomp
push
add
ja
(bad)
jmp
mov
out
arpl
loope
out
popa
and
imul
pop
add
(bad)
call
xchg
ss
bound
mov
mov
addr16
add
call
fidiv
xlat
or
mov
scas
cmp
mov
(bad)
call
jge
imul
xor
jae
dec
repnz
in
cdq
retf
fdivr
push
call
xchg
hlt
sbb
mov
cli
ss
xor
enter
call
dec
cmp
or
daa
sbb
xchg
mov
lea
call
lock
lahf
sub
sar
(bad)
(bad)
call
gs
lahf
sub
dec
dec
rol
rcl
fbld
jb
pop
pop
inc
xchg
and
jnp
and
retf
push
imul
and
sbb
das
or
jns
sub
(bad)
(bad)
call
ja
xchg
fadd
xlat
loop
add
push
mov
test
and
(bad)
cmp
popa
push
mov
fidiv
cmps
inc
dec
adc
mov
or
rcr
sub
dec
(bad)
std
mov
out
fld
call
sbb
call
xor
lds
fidivr
test
(bad)
(bad)
jmp
fsub
bound
pop
adc
push
movs
dec
cmp
mov
jne
fadd
inc
fnstenv
(bad)
(bad)
(bad)
call
test
imul
xchg
jg
push
mov
out
fcom
call
rcr
mov
pusha
mov
mov
aam
xchg
sbb
fdivr
in
pop
xchg
and
jmp
out
cmp
ins
dec
pusha
fwait
int3
xor
push
sbb
ins
fisttp
call
xchg
pushf
jg
jae
mov
repz
and
dec
call
je
inc
xchg
(bad)
(bad)
(bad)
dec
imul
sbb
sub
push
mul
or
inc
sete
(bad)
(bad)
(bad)
(bad)
(bad)
inc
js
std
mov
sar
mov
sbb
cmp
ja
mov
(bad)
(bad)
(bad)
push
push
jp
shl
in
into
xchg
sbb
push
loopne
dec
es
mov
jmp
push
out
cwde
sar
mov
fs
dec
fistp
jns
stos
(bad)
(bad)
(bad)
jle
add
es
inc
inc
or
jmp
xor
idiv
(bad)
(bad)
(bad)
mov
adc
es
cmp
lods
and
mov
sub
mov
stos
jg
jb
scas
aaa
sbb
mov
ret
ins
xchg
(bad)
(bad)
(bad)
inc
fidiv
test
adc
mov
cwde
and
add
add
mov
or
push
test
test
(bad)
(bad)
cmp
push
enter
rcl
push
cmp
int3
jmp
jg
sbb
pop
movs
adc
nop
mov
cwde
nop
add
pop
repz
cwde
xchg
movs
mov
xchg
cmp
(bad)
mov
mov
sub
popf
popf
fidiv
fadd
ret
and
test
sbb
add
sub
pop
dec
dec
test
mov
gs
les
iret
std
jg
add
ret
push
(bad)
(bad)
mov
inc
jmp
jecxz
inc
cld
jg
add
xor
call
fisubr
iret
adc
cld
jg
pop
dec
xor
and
sub
dec
(bad)
(bad)
jg
test
pop
xchg
fistp
pop
push
je
and
sbb
or
loop
(bad)
(bad)
call
adc
pop
icebp
ins
mov
sbb
stc
sbb
pop
cmp
in
fist
std
mov
xor
jmp
outs
dec
jge
into
out
lods
(bad)
(bad)
jmp
adc
add
imul
jge
neg
jno
jnp
sbb
daa
and
imul
cmp
(bad)
(bad)
inc
gs
mov
add
add
(bad)
std
mov
inc
dec
cmc
enter
mov
fisttp
mov
mov
lahf
sahf
dec
(bad)
(bad)
dec
clc
adc
jns
jns
or
dec
xlat
loope
push
push
sbb
out
mul
(bad)
call
fiadd
push
sub
and
mov
icebp
push
and
inc
sbb
(bad)
(bad)
(bad)
(bad)
jmp
xchg
fiadd
sbb
hlt
sbb
mov
and
lds
pop
mov
aaa
sub
(bad)
mov
lds
(bad)
push
hlt
ins
add
dec
and
and
mov
mov
pop
pop
(bad)
(bad)
(bad)
(bad)
(bad)
lds
addr16
stos
leave
js
rcr
fwait
cmp
mov
lock
pop
and
mov
jmp
cmp
or
movs
lds
mov
mov
xor
inc
scas
(bad)
(bad)
(bad)
fcomip
sbb
inc
jne
dec
mul
pop
mov
pop
in
neg
(bad)
(bad)
jmp
mov
(bad)
jge
ret
jbe
mov
dec
xchg
push
(bad)
(bad)
jg
lock
dec
out
(bad)
imul
cld
loop
adc
in
(bad)
(bad)
jmp
and
in
and
pop
adc
xchg
sub
sbb
loop
int3
or
cmc
(bad)
(bad)
(bad)
(bad)
out
sar
or
cmp
(bad)
mov
lods
mov
mov
xlat
cwde
add
xchg
daa
clc
sar
add
retf
rol
in
adc
push
sub
(bad)
(bad)
push
je
test
mov
int3
add
pushw
inc
xor
mov
js
(bad)
(bad)
jmp
sub
int
and
(bad)
and
nop
sbb
pop
ds
(bad)
(bad)
push
stos
enter
in
das
jno
xchg
stos
mov
xor
fucomp
mov
iret
ins
and
jg
(bad)
inc
stos
cwde
push
or
mov
dec
jmp
mov
xchg
mov
aaa
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
or
mov
repz
rcr
jl
fiadd
inc
dec
xor
push
xor
jmp
fsubr
xlat
test
call
(bad)
fcom
loop
mov
pop
mov
sar
fld
sbb
cmps
and
(bad)
(bad)
(bad)
jmp
and
add
clc
hlt
xor
xor
sbb
call
(bad)
jno
sti
pop
(bad)
pop
aam
xor
jo
mov
push
imul
mov
cli
xor
sub
jmp
loope
cmps
dec
test
pusha
adc
in
xor
movs
mov
mov
push
sbb
(bad)
xchg
sub
xchg
mov
(bad)
(bad)
(bad)
jmp
int3
sbb
dec
aas
and
in
addr16
cld
out
or
jmp
mov
xchg
in
(bad)
(bad)
dec
gs
jbe
or
and
jl
(bad)
sub
lock
(bad)
push
xor
mov
mov
lock
pcmpeqb
dec
and
adc
es
add
(bad)
ficomp
ja
jae
sahf
js
ret
mov
je
jmp
push
int3
adc
adc
test
loope
cmp
rol
jns
fdiv
retf
outs
rcr
daa
fsub
jmp
shl
push
mov
jno
push
mov
add
xchg
js
(bad)
(bad)
dec
jp
data16
cdq
xor
scas
jae
pop
fdivr
mov
dec
add
ror
push
ja
add
je
jl
xchg
test
mov
adc
dec
pop
inc
shl
(bad)
(bad)
(bad)
call
sub
test
retf
sub
xchg
dec
push
pop
cmp
mov
inc
imul
jl
push
jns
aas
dec
bound
xor
cdq
sbb
(bad)
(bad)
(bad)
dec
popf
adc
adc
xor
jge
mov
add
loop
ins
pop
dec
jmp
(bad)
ja
cmp
fs
xchg
aaa
cmp
push
inc
mov
and
cmp
pop
or
stos
sar
call
dec
inc
xor
xchg
(bad)
mov
(bad)
movs
adc
mov
dec
or
sahf
cmps
cmps
adc
push
xlat
idiv
(bad)
(bad)
mov
mov
sbb
sub
push
add
ror
(bad)
and
(bad)
(bad)
push
loop
inc
repz
xlat
mov
cmp
cs
mov
mov
cmp
mov
cli
(bad)
(bad)
jg
adc
mov
dec
push
mov
in
inc
adc
jno
(bad)
fdivrp
(bad)
jmp
jp
xchg
dec
mov
adc
mov
aaa
inc
inc
xchg
aam
aaa
ja
(bad)
jmp
mov
fst
jle
in
adc
and
mov
outs
add
jmp
rol
cli
stc
jns
pop
cmps
outs
mov
mov
xchg
lea
fidiv
jmp
jmp
cdq
push
push
mov
mov
xor
(bad)
dec
sbb
pop
and
or
xlat
add
jle
lods
mov
mov
dec
arpl
pcmpgtb
(bad)
(bad)
(bad)
(bad)
cmp
inc
xchg
sbb
sbb
mov
ins
dec
adc
push
loopne
sub
dec
and
inc
rcl
std
(bad)
int
and
in
mov
stos
inc
jecxz
push
(bad)
(bad)
jnp
mov
cmps
jmp
jmp
push
pusha
pop
pushf
inc
aaa
cmps
xchg
mov
sub
lock
jbe
cld
ror
jae
sbb
mov
fs
(bad)
(bad)
(bad)
(bad)
jle
jle
pop
xchg
xchg
and
xchg
jne
in
out
add
sar
in
int
data16
(bad)
mov
mov
dec
adc
jmp
push
fwait
popa
or
adc
(bad)
(bad)
dec
arpl
mov
push
ins
or
lea
mov
(bad)
rcl
inc
push
aam
mov
push
jle
call
or
loopne
and
(bad)
call
cmp
fsub
out
cmp
repnz
stc
cmp
mov
leave
(bad)
mov
pop
(bad)
xchg
into
in
in
cld
dec
xchg
cld
xchg
cmp
lock
inc
push
push
pop
fdivr
fwait
sub
ss
(bad)
(bad)
push
inc
stc
cli
addr16
sub
outs
imul
push
or
ret
cmps
or
in
lds
pop
ret
ins
(bad)
(bad)
(bad)
jmp
inc
ins
pop
loopne
loop
dec
mov
pushf
rcr
cs
and
rcr
call
nop
icebp
jecxz
dec
int
add
push
pop
(bad)
add
and
push
mov
and
push
mov
js
inc
push
jae
iret
bound
cdq
cmp
test
(bad)
push
test
retf
sub
(bad)
aad
fstp
aam
loop
or
in
stc
add
cmp
(bad)
(bad)
jmp
clc
pushf
sbb
es
pop
jmp
push
xchg
xchg
(bad)
cmc
jecxz
push
les
ja
cmc
push
mov
pusha
icebp
push
cmp
pushf
jbe
dec
les
jecxz
dec
push
cmp
or
xchg
adc
iret
xor
ds
xor
ss
(bad)
jg
cmp
adc
mov
(bad)
fdiv
(bad)
pop
jmp
xchg
dec
mov
loopne
mov
sbb
int
cmp
push
rcr
mov
fnsave
push
(bad)
(bad)
(bad)
(bad)
cli
iret
push
jae
movs
jns
sub
setbe
mov
jnp
mov
adc
outs
(bad)
push
aaa
mov
aam
mov
xchg
ja
in
mov
xor
or
(bad)
(bad)
(bad)
inc
mov
and
loop
popf
jne
jg
enter
ins
mov
out
lods
sub
xor
aad
cli
(bad)
push
test
jg
scas
and
adc
sub
and
(bad)
(bad)
inc
int
(bad)
jb
dec
lea
popf
cwde
mov
test
push
sbb
push
ins
push
sahf
mov
(bad)
push
xor
jmp
outs
cmps
mov
pop
jmp
xor
pop
jp
pusha
cmp
(bad)
jmp
xchg
add
outs
loopne
pop
xor
adc
imul
(bad)
(bad)
(bad)
js
mov
xchg
pop
int
out
mov
and
mov
out
ds
add
cli
inc
xchg
je
xchg
lock
push
mov
stos
fdivr
jmp
fs
or
xchg
jne
jo
cmp
(bad)
(bad)
(bad)
dec
js
repnz
daa
xchg
dec
push
jmp
jmp
iret
fldcw
mov
push
push
std
and
imul
xor
push
nop
in
fild
jns
(bad)
dec
jmp
ficom
retf
pop
jne
leave
mov
clc
push
scas
cli
cmp
call
(bad)
jge
popf
pop
cld
retf
jmp
dec
xor
pop
(bad)
dec
push
pop
mov
(bad)
(bad)
(bad)
call
inc
adc
pop
sub
dec
sub
push
int
retf
cld
dec
bound
mov
call
int
mov
pop
lds
fs
loopne
loope
and
enter
inc
fs
aaa
out
inc
cmp
adc
mov
scas
pxor
(bad)
jmp
push
mov
jecxz
(bad)
out
jmp
add
push
(bad)
inc
jb
and
(bad)
(bad)
push
test
mov
leave
js
js
jno
cmc
loopne
shr
lock
je
(bad)
(bad)
(bad)
(bad)
jp
aas
dec
jo
mov
xchg
sub
mov
(bad)
out
cmc
popa
js
xor
(bad)
push
adc
(bad)
(bad)
push
lods
outs
scas
xchg
leave
xchg
rol
inc
xor
xchg
sbb
cmp
sbb
jmp
push
fcomip
pop
not
dec
mov
imul
enter
jmp
(bad)
(bad)
inc
dec
jmp
ins
ja
xor
call
cmp
out
pop
ins
pop
adc
mov
fcomip
inc
mov
pusha
int3
hlt
jecxz
mov
lock
(bad)
(bad)
call
dec
(bad)
sahf
xlat
xor
cmp
pop
pop
retf
out
pop
ins
pop
jno
rcr
(bad)
xor
(bad)
scas
hlt
(bad)
(bad)
(bad)
(bad)
mov
inc
stc
xor
imul
icebp
pop
enter
push
sar
(bad)
frstor
mov
ret
out
mov
cmps
xchg
dec
inc
icebp
(bad)
(bad)
(bad)
call
sbb
lds
mov
jmp
mov
gs
push
cld
(bad)
call
out
add
rep
push
jno
sbb
fwait
add
sbb
xchg
icebp
sub
ror
and
pop
jmp
(bad)
adc
ja
mov
push
sub
cmp
push
xchg
(bad)
dec
in
add
(bad)
mov
adc
mov
xchg
aam
or
cs
in
cmc
test
sub
fdiv
xchg
int
pop
test
je
xlat
mov
or
ja
aam
or
sub
xchg
mov
inc
xchg
and
dec
lods
nop
push
and
or
les
enter
xchg
mov
or
idiv
(bad)
jmp
sub
cmp
mov
je
jle
inc
or
mov
(bad)
(bad)
(bad)
call
adc
dec
pop
mov
cli
inc
pop
cld
xchg
xor
jp
enter
or
(bad)
jmp
leave
aad
aad
mov
pop
cwde
mov
js
and
mov
dec
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
aas
iret
jle
arpl
stc
ret
mov
mov
sbb
fmul
(bad)
(bad)
(bad)
call
out
pop
enter
dec
cmp
pcmpeqd
jno
test
xchg
push
arpl
mov
(bad)
(bad)
(bad)
call
lea
sub
test
push
idiv
push
xor
call
mov
mov
xor
jne
xor
dec
mov
rol
xchg
push
shr
sbb
pop
sti
stc
jp
fst
and
xor
test
test
add
mov
neg
repnz
clc
(bad)
(bad)
(bad)
clc
cmps
fmul
es
pop
push
mov
pusha
test
retf
lea
shr
adc
dec
jmp
(bad)
and
(bad)
jg
sti
sbb
sub
in
(bad)
xchg
cmp
add
fs
sti
sub
push
and
aad
hlt
adc
call
test
and
sub
(bad)
(bad)
jg
push
scas
mov
xor
stos
jg
fwait
(bad)
icebp
add
add
and
push
sub
inc
adc
cmc
or
and
(bad)
(bad)
(bad)
call
pop
rcl
push
push
push
dec
ins
sahf
jg
inc
fwait
mov
jbe
cmp
popa
jp
(bad)
(bad)
call
sbb
fwait
popa
mov
adc
mov
imul
shl
dec
cli
(bad)
(bad)
call
movs
xchg
and
mov
sbb
xchg
cmps
xor
push
or
test
jmp
jne
and
int
inc
jb
daa
call
je
pop
pop
dec
sub
(bad)
(bad)
inc
sbb
xchg
ret
aas
aad
int3
xor
mov
ins
jmp
(bad)
(bad)
(bad)
dec
xchg
xchg
cwde
pop
mov
fcomp
push
test
push
sar
lock
call
mov
push
adc
outs
push
xchg
(bad)
pop
inc
movs
daa
call
(bad)
mov
mov
cmp
xchg
je
mov
inc
push
sub
popa
mov
(bad)
jmp
cmp
push
ss
sbb
leave
in
es
fnstcw
(bad)
(bad)
(bad)
call
sahf
call
(bad)
(bad)
mov
add
xchg
sbb
xchg
add
clc
call
call
mov
xor
cmp
nop
mov
inc
and
(bad)
(bad)
(bad)
(bad)
mov
cwde
pushf
push
pop
pop
adc
das
add
sti
pop
dec
mov
push
push
ret
rcl
lock
(bad)
(bad)
push
sbb
add
cmp
jae
adc
dec
call
cmp
call
jmp
sbb
nop
aad
and
outs
cmp
or
hlt
icebp
push
fwait
and
jmp
mov
dec
jb
xchg
adc
or
(bad)
call
in
(bad)
mov
mov
sub
sti
mov
dec
and
mov
sbb
(bad)
(bad)
(bad)
(bad)
jge
mov
dec
or
fiadd
or
adc
fdivp
repnz
and
push
(bad)
(bad)
(bad)
(bad)
jmp
jmp
mov
test
mov
mov
(bad)
daa
sbb
pop
in
dec
push
push
mov
(bad)
jmp
sti
stos
xchg
sti
movs
mov
ins
add
lahf
push
push
add
sub
out
jmp
push
ret
(bad)
(bad)
(bad)
(bad)
clc
loop
push
popf
aad
mul
sahf
int3
sub
out
xor
call
add
sti
jns
cld
(bad)
(bad)
(bad)
cld
adc
add
xor
sbb
and
ret
repz
push
movs
icebp
mov
(bad)
and
cwde
aaa
push
pop
retf
mov
dec
loop
aad
(bad)
jg
inc
mov
ficom
and
test
jbe
mov
sbb
nop
(bad)
inc
pop
out
sbb
adc
cmp
dec
sti
rol
lock
jmp
rcr
push
mov
and
dec
inc
add
and
mov
test
and
jno
vandps
ret
jmp
mov
mov
cmps
add
mov
ss
and
add
sar
adc
(bad)
mov
cwde
int3
push
lds
pusha
stc
pop
sahf
mov
mov
xor
mov
(bad)
inc
xchg
aam
cwde
xor
ror
addr16
xchg
cmp
and
aad
out
(bad)
(bad)
(bad)
call
mov
fstp
hlt
mov
sub
push
xor
lahf
sub
(bad)
jmp
sub
jne
adc
pop
cmp
jl
ins
pop
sub
movs
iret
inc
fisttp
(bad)
sbb
xor
push
pop
shl
push
mov
sub
into
(bad)
(bad)
(bad)
jmp
adc
or
sub
ficomp
sub
rcr
push
stos
xchg
std
inc
aad
pop
cmp
stos
mov
ds
das
(bad)
(bad)
(bad)
(bad)
mov
rcl
mov
int3
jle
xor
in
aam
jle
pushfw
inc
stos
(bad)
(bad)
(bad)
jmp
addr16
push
pop
xor
dec
inc
and
sub
out
into
xchg
push
jo
(bad)
(bad)
call
jge
cld
enter
pop
pop
adc
xlat
inc
lods
xchg
into
or
mov
xor
or
pop
inc
xchg
adc
inc
ret
fadd
lods
movs
pop
adc
lds
cmp
std
(bad)
(bad)
(bad)
jmp
push
xor
add
ins
mov
fnstenv
in
pop
mov
dec
hlt
jle
inc
cdq
jg
or
mov
adc
das
ret
mov
jg
inc
cld
popa
(bad)
fstp
sahf
jae
adc
popf
add
(bad)
(bad)
(bad)
push
aad
mov
bound
push
or
sub
js
jo
sbb
push
add
movs
outs
stos
(bad)
(bad)
(bad)
push
(bad)
icebp
push
pop
jge
fild
dec
jecxz
cmc
sub
or
shr
adc
int3
jae
(bad)
(bad)
call
shr
push
jl
adc
pop
fld
movs
cmp
fxch
mov
(bad)
call
int
sahf
cwde
and
jmp
out
test
(bad)
cs
enter
fbstp
test
in
or
lds
mov
lods
jecxz
gs
repz
(bad)
inc
cmc
cmp
ja
sub
jbe
jmp
(bad)
(bad)
dec
inc
jb
sub
mov
cmps
add
pop
nop
adc
dec
ja
mov
mov
in
fiadd
mov
stos
cmp
pop
xor
inc
dec
jg
sub
sar
and
push
mov
loope
mov
pop
popa
movs
sbb
je
xchg
data16
cli
fild
sti
stc
sbb
iret
in
mov
and
mov
std
cmp
ret
(bad)
push
out
dec
test
(bad)
retf
lods
xor
or
jns
xchg
cmps
(bad)
or
ja
pusha
rcr
daa
sbb
and
dec
mov
xor
imul
addr16
(bad)
(bad)
dec
aas
int3
inc
and
fsub
aas
dec
sar
test
cwde
pop
idiv
popf
cmps
or
pop
mov
(bad)
call
adc
retf
mov
inc
sub
neg
xchg
pop
inc
and
test
sbb
adc
mov
dec
push
ja
add
adc
cmp
adc
inc
js
es
adc
xchg
sub
xor
sub
jno
xor
aaa
mov
push
aas
sub
xor
inc
xor
mov
fild
jnp
clc
jns
std
xchg
orps
cmps
retf
cli
cwde
and
(bad)
dec
jbe
cdq
jle
mov
nop
mov
call
inc
aas
adc
and
inc
or
retf
xor
adc
(bad)
call
test
out
add
lahf
test
adc
cmc
aam
test
rol
(bad)
(bad)
jg
aam
stos
dec
lds
sbb
push
fwait
retf
inc
(bad)
(bad)
inc
xchg
jp
mov
add
sbb
jmp
and
call
call
or
jno
int3
add
xor
stos
stos
push
sbb
push
addr16
pop
mov
and
dec
cld
pcmpeqw
ins
pop
add
mov
(bad)
jg
rcl
and
mov
dec
aad
pusha
pop
fistp
adc
jmp
dec
mov
push
mov
dec
xchg
sar
dec
out
(bad)
shl
das
mov
and
cld
pusha
pop
sti
dec
inc
cmp
(bad)
jmp
jne
and
xor
jecxz
push
dec
cmc
mov
push
out
mov
out
pop
or
inc
xchg
sbb
dec
push
pop
and
ss
adc
out
inc
jmp
fs
dec
cmp
js
(bad)
outs
adc
lds
enter
push
jbe
sub
xor
(bad)
(bad)
jg
lahf
pop
or
fiadd
pop
dec
xchg
xor
les
or
sti
mov
loop
jmp
jl
ins
mov
pop
pushf
int3
and
(bad)
(bad)
jmp
sub
jbe
repnz
test
add
push
jae
aas
add
mov
jmp
clc
pop
xchg
and
sbb
outs
arpl
scas
xor
(bad)
(bad)
(bad)
(bad)
std
inc
(bad)
(bad)
mov
outs
(bad)
xlat
(bad)
cmp
mov
adc
test
ja
out
adc
mov
das
lahf
ror
push
prefetchw
in
(bad)
(bad)
dec
mov
pop
and
xchg
inc
popf
jp
jl
aaa
xor
popf
icebp
mov
and
(bad)
push
cmp
mov
shl
cmp
jae
xchg
ins
mov
sbb
or
jecxz
xchg
sub
push
dec
add
aad
shr
dec
inc
jne
sahf
aas
sbb
jo
cli
shl
mov
call
push
mov
lods
xor
adc
scas
dec
push
das
into
sti
jmp
cli
push
push
(bad)
outs
inc
imul
mov
outs
and
scas
ds
jle
mov
or
cmp
sbb
(bad)
in
(bad)
(bad)
call
inc
fwait
pop
and
call
pop
xchg
xor
test
pop
mov
(bad)
(bad)
push
mov
stc
mov
and
mov
and
(bad)
adc
loop
jo
mov
sahf
popa
push
xchg
sahf
cmp
popa
(bad)
(bad)
(bad)
inc
sbb
push
xchg
(bad)
mov
aaa
mov
ins
or
fnsave
sub
or
aaa
cld
inc
adc
adc
inc
arpl
ds
aaa
or
(bad)
(bad)
call
out
lahf
pushf
xor
in
jb
cmp
cmps
(bad)
fwait
jmp
icebp
jg
mov
push
mov
lods
fmul
mov
loop
loopne
stos
pushf
(bad)
(bad)
(bad)
inc
push
call
adc
int3
adc
mov
xchg
out
push
dec
push
loopne
xchg
out
pop
pop
push
aaa
cld
(bad)
(bad)
fidivr
scas
pop
push
in
cmp
rcl
test
adc
mov
(bad)
(bad)
(bad)
jmp
dec
push
or
dec
(bad)
out
push
mov
inc
dec
mov
xchg
cmp
add
(bad)
(bad)
inc
xor
pop
cs
scas
push
or
and
arpl
pop
ins
pop
(bad)
popf
shl
(bad)
(bad)
(bad)
(bad)
jg
mov
push
ficom
and
cdq
pop
mov
mov
ret
aas
xor
adc
(bad)
inc
mov
bound
inc
(bad)
cmp
das
mov
mov
(bad)
(bad)
(bad)
cmp
push
mov
jb
sbb
push
mov
inc
std
hlt
stos
xchg
call
jmp
out
mov
(bad)
call
shl
push
imul
je
adc
clc
leave
(bad)
je
sar
pop
cmc
outs
xchg
xor
into
add
scas
mov
jb
rol
pop
(bad)
pop
(bad)
mov
mov
sbb
pop
jl
pushf
sbb
(bad)
(bad)
fsubr
cmp
out
loope
sub
cmc
cmp
sub
dec
mov
popf
jge
pop
push
cmps
(bad)
(bad)
jg
jo
xor
xchg
dec
add
out
fisub
movs
test
add
sub
(bad)
mov
std
fcomi
in
cmps
pop
xor
cmp
fisub
mov
(bad)
(bad)
(bad)
push
repnz
jle
iret
jp
arpl
movs
sub
imul
rol
(bad)
(bad)
(bad)
in
icebp
into
cwde
test
push
dec
sbb
pop
out
lea
and
mov
xchg
(bad)
call
out
push
cmc
or
add
push
lahf
mov
(bad)
(bad)
push
jns
jg
cmp
inc
ja
xchg
push
xchg
mov
mov
push
xlat
mov
stc
aas
outs
imul
sbb
sahf
xor
or
or
pop
push
xor
(bad)
(bad)
jmp
ds
pop
repz
loop
nop
xchg
sahf
push
mov
jp
loopne
test
sub
(bad)
(bad)
dec
pop
push
out
cmps
sti
xchg
nop
ss
gs
mov
(bad)
sbb
lahf
stos
test
xor
(bad)
(bad)
dec
test
mov
jmp
inc
bound
mov
adc
loop
pusha
cmc
inc
add
inc
cld
cmps
(bad)
inc
xchg
inc
or
adc
xchg
xchg
cmp
nop
pop
jecxz
(bad)
(bad)
call
popa
fimul
xlat
aam
test
add
pop
ds
(bad)
(bad)
jmp
jno
enter
pop
mov
add
movs
lock
cmp
pop
(bad)
jbe
ja
(bad)
call
in
mov
mov
add
(bad)
int
jnp
inc
icebp
inc
inc
mov
es
clc
clc
dec
cmps
daa
cmp
mov
push
in
(bad)
adc
or
jmp
cs
int
jp
out
sbb
ror
cmp
(bad)
call
adc
add
dec
pusha
inc
pop
int
sub
(bad)
popa
dec
call
(bad)
(bad)
(bad)
jmp
or
xlat
sub
scas
stos
int
mov
mov
call
mov
(bad)
(bad)
(bad)
call
data16
cmps
xchg
test
jo
mov
mov
stos
xor
mov
pop
inc
ss
(bad)
(bad)
(bad)
jns
cmp
jae
cmp
jae
xor
shr
sbb
outs
repnz
cdq
lea
and
ins
aad
sbb
div
add
pop
dec
or
test
(bad)
(bad)
(bad)
call
call
aaa
fisubr
shr
adc
pushf
scas
retf
add
inc
js
mov
xchg
call
jmp
enter
mov
fnstenv
data16
popa
sub
inc
int
pop
push
xor
cli
(bad)
jmp
push
lahf
inc
pop
mov
sbb
clc
(bad)
ins
cld
add
adc
call
popf
or
dec
in
popf
push
mov
scas
out
mov
out
sub
(bad)
dec
add
sub
mov
(bad)
stos
mov
or
mov
lock
mov
verr
loope
fbld
(bad)
(bad)
(bad)
call
sahf
jns
xlat
lahf
cmp
push
add
cmp
loopne
(bad)
push
mov
js
mov
mov
jl
xchg
sbb
dec
ja
push
je
ret
test
push
xchg
adc
sar
or
mov
or
mov
ds
xchg
lahf
hlt
dec
repz
loopne
adc
fdiv
lahf
stc
lahf
in
pop
pop
das
jg
sbb
dec
inc
pop
pushf
and
push
in
dec
enter
sub
xor
icebp
inc
pop
mov
(bad)
(bad)
call
mov
or
lds
in
xchg
mov
mov
xchg
dec
repz
movs
jl
cmp
dec
mov
xor
cmps
rol
clc
mov
(bad)
cmp
or
ja
sbb
call
mov
aam
jmp
imul
stos
in
data16
test
mov
cwde
(bad)
jae
xchg
pop
lods
sbb
(bad)
(bad)
dec
mov
(bad)
out
xor
mov
push
xor
mov
(bad)
jle
sub
daa
pop
(bad)
jp
(bad)
(bad)
(bad)
call
push
mov
mov
sbb
push
dec
inc
adc
add
cmp
rol
xchg
call
or
aas
push
shl
call
pop
dec
ret
gs
inc
cmp
pushf
je
repz
test
cmc
and
fs
(bad)
(bad)
mov
nop
cmp
add
cmp
dec
in
mov
sub
int3
adc
loopne
(bad)
(bad)
(bad)
push
pusha
aad
xchg
jle
in
xchg
fnsave
push
test
mov
jo
mov
push
lods
cmp
std
xchg
rcr
push
jecxz
sar
pop
adc
push
clc
mov
stos
dec
cmp
jecxz
in
push
mov
cmp
xchg
sbb
outs
int3
xchg
jno
jmp
cmp
push
out
mov
push
fld
add
retf
jne
cmp
(bad)
jmp
retf
sub
je
cmps
push
jecxz
fld
sti
push
int3
or
(bad)
(bad)
fdiv
jmp
cmp
in
pop
mov
das
movs
push
xor
(bad)
dec
(bad)
mov
xchg
lock
jmp
loope
test
inc
and
jbe
pop
jmp
push
pushf
mov
lea
popf
inc
xchg
dec
mov
add
xchg
pop
(bad)
cmp
dec
mov
sbb
mov
sub
pop
les
into
jp
xchg
cmp
(bad)
jmp
pop
pop
out
and
xor
fld
(bad)
lahf
adc
test
inc
in
js
(bad)
(bad)
(bad)
call
inc
push
pop
dec
shl
cmps
lds
mov
les
pusha
or
cmp
dec
xor
test
(bad)
sbb
jae
jbe
inc
ja
(bad)
(bad)
(bad)
dec
xchg
sahf
push
pusha
xchg
(bad)
cmp
mov
or
ror
(bad)
iret
in
imul
jmp
add
jl
sbb
push
mov
pop
mov
adc
xchg
test
or
jo
test
mul
fs
and
push
pusha
test
xchg
das
in
fdiv
gs
mov
push
lods
mov
adc
outs
mov
and
pop
in
repz
int3
pusha
or
adc
scas
mov
movs
cwde
mov
xor
and
(bad)
(bad)
jmp
inc
xor
pop
lds
add
push
das
sub
and
into
xor
push
(bad)
(bad)
(bad)
(bad)
mov
movs
icebp
fcomi
jmp
add
popa
je
sbb
pop
clc
cli
(bad)
call
jae
(bad)
aam
(bad)
or
cld
jle
stos
inc
dec
inc
xchg
push
sub
repz
xchg
jnp
sub
cmp
in
ds
aas
arpl
(bad)
inc
inc
sbb
int
pop
sub
push
jns
outs
(bad)
(bad)
(bad)
(bad)
mov
and
ja
mov
mov
rcr
and
dec
nop
pop
dec
js
(bad)
(bad)
fstp
ins
pop
ds
shl
or
(bad)
imul
push
cmp
inc
inc
xor
adc
jge
jle
jecxz
add
pusha
mov
aaa
outs
out
sti
gs
(bad)
push
scas
shl
imul
sti
sbb
lea
in
(bad)
(bad)
(bad)
(bad)
mov
cmps
or
(bad)
xor
scas
fisub
and
std
sbb
jmp
dec
in
(bad)
(bad)
call
sub
lods
mov
push
mov
pop
in
push
or
adc
xor
js
(bad)
(bad)
mov
mov
ja
jmp
xchg
cld
arpl
sbb
xchg
jmp
call
cmps
pop
mov
inc
jne
vdivss
loope
inc
mov
xor
(bad)
(bad)
(bad)
mov
ins
xor
xchg
mov
repz
sub
dec
mov
cmps
(bad)
call
xchg
das
test
outs
stc
call
xor
out
xchg
int3
repnz
cld
(bad)
call
fcomip
jle
ret
rcl
in
push
xor
pop
cmp
mov
cwde
inc
xor
addr16
pop
jl
loop
pop
inc
inc
sti
int3
test
sbb
mov
inc
add
xchg
and
xchg
ret
aam
bswap
cld
in
xchg
cld
(bad)
(bad)
call
jnp
jge
sti
aaa
out
lods
mov
add
cmps
cmp
(bad)
push
mov
ds
sahf
inc
rcr
mov
test
aam
ret
inc
adc
push
lock
cmp
dec
stos
pop
pop
xchg
arpl
ds
jb
cmp
(bad)
call
je
scas
jle
mov
call
fadd
(bad)
(bad)
ficom
xor
cwde
loopne
xchg
repnz
inc
rol
pushf
mov
lea
sahf
sar
(bad)
jmp
dec
jbe
xchg
dec
in
mov
(bad)
jb
test
and
dec
jle
ds
(bad)
les
sbb
lds
js
in
aad
stos
sub
(bad)
push
rcl
sbb
sub
inc
fst
sbb
jmp
add
or
cld
(bad)
(bad)
(bad)
mov
jo
outs
mov
sub
inc
(bad)
retf
adc
lds
aaa
mov
out
xchg
adc
pop
dec
pop
add
dec
push
lahf
pop
xor
fwait
pop
sub
and
(bad)
inc
jae
(bad)
mov
int3
cs
fistp
mov
sub
mov
out
adc
cli
(bad)
inc
jb
lods
inc
ins
(bad)
xchg
fisubr
sbb
or
iret
stc
pop
ficom
(bad)
(bad)
call
xor
aam
repz
mov
push
sar
(bad)
fisttp
test
sbb
imul
pop
outs
sub
rol
loopne
(bad)
inc
call
push
mul
leave
mov
inc
test
rcl
mov
mov
pop
out
xor
ficom
retf
cmps
(bad)
mov
pop
iret
jp
int3
and
sub
outs
sbb
sahf
jp
sbb
(bad)
(bad)
push
inc
loop
jg
inc
jle
outs
and
sub
push
mov
push
xor
test
mov
fist
scas
(bad)
jecxz
adc
adc
std
pushf
inc
ins
sti
pop
sar
fisub
or
mov
xor
lock
inc
mov
jl
cmp
jno
int3
jg
cmps
xor
mov
dec
mov
stos
sub
jmp
xor
(bad)
(bad)
call
loope
xchg
push
push
test
test
inc
jae
sub
jl
ret
(bad)
(bad)
dec
mov
iret
pop
int3
jmp
mov
xor
sahf
loope
js
(bad)
jg
sub
push
out
mov
sbb
test
lock
inc
loopne
mov
js
std
add
(bad)
sbb
mov
mov
(bad)
push
jmp
sti
mov
push
cmps
movs
test
pushf
scas
test
(bad)
(bad)
(bad)
call
inc
scas
bnd
inc
jl
add
pop
push
hlt
int3
aas
jnp
inc
dec
jge
xchg
in
es
dec
js
xor
enter
sub
std
and
call
(bad)
fild
idiv
add
movs
and
jnp
cli
pop
jle
sar
mov
dec
jle
jnp
loop
cmp
add
push
pop
dec
call
imul
xchg
mov
push
in
icebp
adc
clc
ds
jmp
iret
scas
leave
js
or
aam
repz
mov
loop
adc
fs
sbb
(bad)
jg
push
(bad)
xchg
mov
or
mov
clc
push
pop
mov
push
out
inc
push
sbb
inc
icebp
addr16
iret
and
xchg
mov
sub
mov
fidivr
sbb
call
add
xor
inc
cli
sub
and
inc
leave
test
(bad)
mov
aaa
cld
mov
mov
ficomp
add
test
pop
(bad)
jnp
pop
loop
aas
out
pop
mov
(bad)
(bad)
cmp
pushf
fsub
push
dec
and
adc
inc
rol
jmp
ss
(bad)
(bad)
(bad)
jmp
cmps
jae
sar
or
retf
cmc
test
push
jnp
int3
pop
xchg
xchg
fwait
sub
(bad)
push
in
mov
outs
iret
pusha
fnstcw
fdivr
nop
and
mov
xor
cli
(bad)
(bad)
mov
adc
xlat
stc
adc
jp
sar
add
inc
test
call
rcl
sbb
add
repz
lea
fstp
(bad)
(bad)
dec
jecxz
jmp
pushf
mov
mov
es
jmp
pop
mov
test
push
hlt
ins
cmp
ret
call
jmp
xchg
ret
in
xchg
or
daa
push
cmp
pusha
cmp
mov
dec
js
mov
pop
iret
dec
xor
push
inc
and
xor
fcos
(bad)
jmp
aas
dec
nop
jo
dec
sbb
pusha
and
dec
xor
icebp
fld
(bad)
aam
(bad)
(bad)
call
mov
pushf
jmp
test
dec
xor
mov
cmp
sub
fist
(bad)
(bad)
mov
sbb
add
stos
sar
or
add
and
(bad)
out
pushw
add
ss
cmp
cmp
daa
xchg
stos
(bad)
(bad)
jno
fdivr
(bad)
(bad)
jmp
and
aaa
push
xor
pop
push
lea
and
rol
(bad)
call
(bad)
(bad)
dec
jns
loope
sub
(bad)
pop
pusha
ins
jo
lock
ja
mov
inc
or
xor
(bad)
(bad)
(bad)
jmp
cmp
push
dec
jne
dec
xor
sbb
les
cmp
adc
(bad)
(bad)
jmp
imul
push
xchg
cmp
jge
daa
ret
pop
push
cmp
scas
push
(bad)
(bad)
(bad)
dec
dec
ret
sub
shl
not
(bad)
rcl
xchg
pop
mov
dec
fst
mov
add
sub
sbb
scas
dec
cmp
add
mov
(bad)
(bad)
dec
push
je
pop
faddp
popa
adc
and
cmp
or
outs
xor
mov
push
cmc
rol
(bad)
(bad)
(bad)
jmp
dec
ror
clc
(bad)
cmp
push
icebp
fist
(bad)
retf
xor
ins
mov
add
add
xchg
dec
jle
mov
dec
mov
and
dec
aam
adc
mov
das
mov
idiv
xchg
adc
mov
(bad)
(bad)
fucomip
push
pop
inc
mov
out
je
lds
stos
iret
add
xchg
push
arpl
cmps
jle
(bad)
(bad)
(bad)
(bad)
mov
mov
out
scas
mov
nop
adc
lods
out
popf
pop
shr
in
(bad)
(bad)
push
mov
aad
sahf
inc
add
mov
mov
mov
movs
enter
repnz
jns
mov
inc
adc
or
push
js
dec
pop
ret
(bad)
(bad)
(bad)
call
add
add
int
fcomp
cmp
fist
add
out
mul
xlat
mov
(bad)
pop
jg
(bad)
jmp
mov
lahf
mov
test
jmp
loope
push
in
(bad)
(bad)
(bad)
(bad)
cmp
xchg
popf
xchg
in
cs
add
scas
cli
stc
or
sub
adc
(bad)
inc
loopne
push
add
pop
test
add
in
pop
or
(bad)
(bad)
(bad)
clc
pop
dec
add
fwait
lods
nop
and
fmul
jge
sub
mov
es
jmp
cmp
adc
arpl
hlt
sbb
sub
jmp
inc
xlat
clc
shl
mov
icebp
push
xchg
(bad)
(bad)
push
nop
adc
mov
push
push
dec
ficomp
push
ja
or
push
push
adc
(bad)
mov
or
mov
(bad)
(bad)
call
stos
cld
jge
into
sbb
out
push
inc
(bad)
in
por
and
jmp
(bad)
sti
call
adc
ds
aad
pusha
adc
arpl
jg
(bad)
fcomip
push
xchg
or
repz
movs
(bad)
repz
mov
ja
mov
pop
mov
push
mov
mov
push
ins
inc
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
pusha
pop
add
cs
bnd
enter
repz
outs
icebp
mov
into
adc
nop
ret
mov
(bad)
(bad)
jmp
pop
jb
cmps
inc
jg
jo
push
push
pop
sbb
loope
es
(bad)
(bad)
mov
inc
(bad)
retf
fiadd
ret
cmp
mov
loopne
fisubr
cmc
cld
int3
stc
xor
xchg
mov
inc
or
call
fdivr
frndint
test
mov
outs
out
in
xor
sbb
ds
fisub
mov
test
pop
or
loope
pop
in
adc
mov
call
mov
jl
cmp
push
sbb
aam
cmp
adc
push
jp
imul
push
or
lods
dec
jmp
int3
adc
mov
xor
mov
outs
jmp
shr
test
stc
dec
and
ret
mov
cli
cmp
lds
(bad)
sti
bnd
sahf
xchg
or
(bad)
jge
jb
out
inc
(bad)
sar
fs
mov
test
jecxz
in
loop
or
pop
(bad)
jg
(bad)
ins
mov
(bad)
sub
lock
rcl
loopne
lahf
xchg
repz
(bad)
(bad)
(bad)
sti
push
sbb
pop
ins
das
mov
in
mov
mov
ja
pop
pop
lods
jle
test
mov
(bad)
(bad)
(bad)
mov
sbb
inc
push
sbb
mov
adc
popa
push
dec
call
call
adc
or
push
add
imul
xor
adc
pushf
lds
stos
cmc
ret
mov
sbb
adc
das
fdivr
jmp
lods
and
je
add
xor
sbb
icebp
mov
in
(bad)
(bad)
(bad)
(bad)
in
leave
xchg
inc
(bad)
pop
scas
sbb
mov
jl
or
adc
movs
xchg
inc
fstp
ret
xchg
fwait
(bad)
fstp
ja
fbstp
jbe
mov
(bad)
inc
cwde
fs
(bad)
outs
mov
push
sbb
stos
and
jno
dec
jns
jmp
js
ret
adc
into
add
pop
add
push
popa
(bad)
(bad)
(bad)
(bad)
jmp
test
pop
pop
sahf
mov
xor
adc
pop
icebp
jecxz
iret
out
imul
lds
stos
retf
lock
(bad)
data16
or
(bad)
jg
mov
movs
adc
dec
mov
cdq
xchg
push
jae
(bad)
(bad)
jmp
cli
inc
outs
test
pop
mov
shl
adc
sub
aam
push
push
ja
mov
push
mov
sahf
outs
(bad)
(bad)
(bad)
jmp
add
cmp
repnz
dec
cli
jbe
xchg
mov
test
aaa
cli
xlat
mov
jno
mov
(bad)
jmp
(bad)
sti
cwde
dec
std
je
not
sbb
test
dec
add
push
fstp
jo
mov
(bad)
(bad)
call
pop
movs
push
push
data16
sub
test
xchg
dec
scas
jae
push
add
pop
or
xchg
loope
(bad)
jns
dec
xlat
xor
inc
dec
(bad)
(bad)
(bad)
inc
dec
mov
sbb
push
pusha
fcom
mov
fld
mov
in
xlat
sar
(bad)
call
rcr
loope
fidiv
fsubr
ds
jp
dec
xchg
dec
(bad)
sbb
(bad)
inc
in
les
and
int3
xlat
inc
push
idiv
push
sahf
dec
iret
add
mov
mov
push
(bad)
rcr
retf
xchg
(bad)
(bad)
(bad)
inc
pusha
and
sbb
or
mov
or
scas
adc
fdiv
sub
xor
inc
sub
sbb
pop
and
nop
or
cld
into
pop
les
movs
stos
mov
sub
adc
cdq
sbb
push
lahf
xor
jle
ror
(bad)
(bad)
call
ja
shl
cmp
mov
in
add
push
scas
dec
(bad)
out
jno
pushf
mov
dec
cmp
aas
adc
sbb
dec
je
xchg
push
cli
jo
jl
stc
or
(bad)
(bad)
(bad)
fnstsw
cmps
push
pop
mov
add
imul
das
mov
mov
(bad)
(bad)
(bad)
(bad)
fnstenv
stos
mov
dec
fs
push
push
dec
dec
sub
bound
jecxz
pop
dec
lods
(bad)
(bad)
(bad)
call
or
pop
iret
fbstp
xchg
lods
mov
loope
pusha
push
push
data16
xchg
jg
(bad)
(bad)
(bad)
out
pop
xor
jno
outs
(bad)
jl
and
and
pop
pop
popf
ret
out
icebp
scas
aaa
popa
jecxz
(bad)
mov
mov
and
inc
aad
xchg
stc
sahf
push
iret
jnp
out
adc
bound
gs
(bad)
call
mov
jle
and
xchg
inc
mov
(bad)
mov
mov
ret
inc
mov
cs
loop
jmp
(bad)
(bad)
(bad)
(bad)
jnp
test
sbb
popa
push
sub
shl
add
bound
mov
xor
(bad)
(bad)
call
jp
mov
mov
pop
jp
out
mov
pop
mov
outs
sahf
xor
sbb
lds
(bad)
xor
sub
leave
xchg
clc
daa
scas
dec
test
(bad)
(bad)
(bad)
(bad)
mov
out
bnd
xchg
lods
pop
sub
jnp
ret
jl
mov
(bad)
shl
test
inc
mov
outs
mov
add
xor
push
fdiv
pop
das
into
mov
(bad)
jmp
in
cmps
pop
cmp
es
repz
shr
neg
pop
push
inc
adc
(bad)
(bad)
(bad)
in
or
shl
pop
inc
push
mov
xchg
int3
pop
mov
mov
(bad)
call
pop
adc
mov
in
adc
cmp
mov
ficomp
jge
sbb
and
(bad)
push
daa
or
and
mov
ins
pop
call
cmp
lea
adc
(bad)
jmp
shl
in
sub
push
pop
add
outs
test
imul
sbb
cmp
cmps
fild
fdivp
mov
stc
xchg
ins
sbb
xor
aad
inc
sub
sub
fdiv
addr16
or
xchg
add
(bad)
ins
mov
inc
sub
sub
mov
or
adc
add
mov
jl
ja
(bad)
jg
lds
faddp
mov
daa
call
stc
cmp
dec
jl
cdq
xor
cli
(bad)
(bad)
jle
test
mov
(bad)
sbb
(bad)
jb
adc
outs
(bad)
hlt
mov
(bad)
(bad)
jg
std
shr
std
repz
shr
jne
sbb
js
shl
cmp
(bad)
in
(bad)
(bad)
(bad)
dec
cdq
mov
xor
and
fst
test
in
ins
(bad)
mov
iret
or
add
sbb
ror
call
js
clc
xchg
pop
jae
dec
jmp
cmp
and
pop
cmps
inc
sbb
and
xor
mov
int
or
mov
(bad)
(bad)
push
sar
pop
xlat
ret
sahf
dec
ins
mov
xchg
mov
pop
int3
push
xor
loop
ss
movs
(bad)
call
cld
sti
jge
add
sub
inc
sbb
jae
cmps
or
add
das
das
cli
(bad)
jmp
pop
clc
pop
jg
and
inc
cmp
adc
cmp
(bad)
(bad)
(bad)
dec
inc
cmps
mov
rol
pushf
outs
movs
pop
fld
js
in
movs
enter
pop
jmp
sbb
call
mov
pop
pop
dec
std
adc
xchg
(bad)
mov
inc
mov
xor
dec
loope
mov
and
js
(bad)
(bad)
mov
inc
rcr
xchg
push
icebp
pop
xchg
not
nop
mov
in
xchg
pop
and
pushf
add
jg
push
dec
aad
jb
fstp
dec
fidivr
xchg
nop
mov
fdivr
mov
data16
mov
adc
mov
and
inc
and
lahf
(bad)
(bad)
(bad)
dec
stos
push
dec
add
int
mov
mov
xor
dec
dec
ja
test
lods
inc
(bad)
(bad)
(bad)
call
adc
pop
lock
jo
mov
jmp
lea
int3
(bad)
pop
call
cld
daa
pop
mov
shl
pop
into
arpl
inc
xchg
pop
dec
jp
jg
sbb
into
stos
jns
outs
dec
adc
out
js
cs
cmp
popa
adc
lock
out
add
popf
push
(bad)
push
cmp
mov
(bad)
(bad)
inc
jo
adc
jp
xchg
or
pop
or
and
pop
mov
push
addr16
push
mov
jmp
push
mov
add
scas
add
or
js
pop
pusha
cmps
(bad)
(bad)
(bad)
(bad)
fdiv
pop
push
or
stc
sbb
js
push
push
xlat
imul
jnp
popa
repz
clc
call
in
jle
cmc
push
nop
add
out
xchg
fist
pusha
test
scas
dec
ret
(bad)
jmp
add
add
stos
jge
dec
dec
cmp
mov
push
jne
pop
(bad)
(bad)
jmp
adc
enter
je
cmp
mov
mov
and
add
int3
or
sbb
and
pop
sti
sub
add
into
lods
fidiv
add
dec
sar
lds
pop
jb
mov
lds
xor
je
adc
(bad)
dec
ror
sbb
push
pop
(bad)
cmps
(bad)
retf
jmp
cmp
(bad)
pop
icebp
(bad)
push
das
add
cmps
sub
call
jo
retf
ss
xchg
sub
retf
xlat
add
test
adc
adc
mov
jg
dec
cmps
sbb
pop
retf
(bad)
jmp
adc
in
cmp
in
cmp
mov
xchg
or
movs
mov
inc
lock
clc
mov
mov
sbb
outs
mov
or
(bad)
(bad)
(bad)
jmp
in
lea
push
push
fldcw
xchg
test
iret
iret
dec
test
repnz
xor
mov
dec
jbe
pop
inc
jg
ret
cmps
jmp
push
shl
imul
shr
xlat
idiv
sub
sbb
jmp
xor
mov
sub
push
pop
fcomp
sbb
(bad)
(bad)
jmp
ror
or
ds
xchg
ret
lahf
xor
inc
cmp
jne
dec
ret
icebp
retf
push
push
(bad)
mov
shl
jecxz
(bad)
(bad)
inc
stos
jae
push
xchg
cmp
push
xor
and
lock
xchg
inc
xchg
clc
call
inc
jns
sbb
(bad)
(bad)
(bad)
dec
adc
sahf
sub
xchg
push
sub
test
loope
test
stos
pushf
jp
in
(bad)
(bad)
jg
mov
sbb
sbb
lea
pushw
(bad)
xchg
xor
(bad)
(bad)
(bad)
jmp
cs
mov
sar
inc
cmp
imul
add
xchg
sbb
call
push
fistp
pop
sub
(bad)
(bad)
(bad)
(bad)
fild
mov
mov
loopne
xchg
das
dec
enter
add
inc
push
cld
(bad)
dec
iret
add
fmulp
and
sub
call
jle
retf
dec
xchg
mov
fmul
or
sahf
adc
fistp
push
mov
(bad)
(bad)
dec
in
cmp
(bad)
push
sub
jmp
fild
les
pop
(bad)
(bad)
(bad)
fild
cmps
mov
leave
(bad)
into
jae
jp
aaa
test
push
jno
xchg
iret
jno
add
(bad)
inc
mov
stos
test
adc
add
lods
and
pusha
cmp
xor
jmp
out
mov
pop
push
jl
or
retf
inc
inc
imul
push
ja
ret
and
dec
jbe
pop
pop
movs
jmp
(bad)
call
or
sub
outs
cmp
push
aam
xchg
jp
or
mov
fnsave
pop
inc
pop
and
and
sar
repz
mov
shl
mov
add
jmp
jo
xchg
imul
(bad)
push
mov
mov
loope
push
in
addr16
or
cli
jo
loopne
shr
sub
fld
dec
push
pop
dec
mov
and
(bad)
call
aas
retf
mov
push
jbe
lods
adc
xchg
iret
lods
mov
dec
mov
dec
dec
inc
cmp
test
repz
je
cmp
into
sub
addr16
xchg
sar
not
jmp
sbb
(bad)
(bad)
(bad)
(bad)
out
gs
pop
pop
lea
dec
sub
sub
lods
dec
mov
cdq
mov
(bad)
(bad)
(bad)
fimul
mov
cmp
outs
inc
outs
aas
xor
jl
jecxz
fcomp
call
hlt
push
xchg
add
gs
cmp
in
dec
(bad)
in
and
push
lds
cmps
dec
adc
adc
adc
clc
pushf
enter
call
outs
mov
retf
xchg
(bad)
(bad)
(bad)
jmp
fmulp
cld
call
test
jle
inc
es
ins
mov
add
rcr
cs
add
movs
call
mov
jae
lea
(bad)
(bad)
jmp
jge
movs
icebp
cmp
(bad)
test
call
popa
xchg
adc
jmp
inc
add
les
rep
(bad)
repnz
int3
xor
(bad)
(bad)
call
pop
mov
retf
mul
das
ret
cs
inc
inc
xor
ret
fisttp
cmps
(bad)
(bad)
out
mov
jnp
adc
ss
hlt
movs
out
jmp
jmp
push
xor
push
lds
add
mov
add
inc
out
(bad)
adc
mov
outs
jmp
call
push
add
scas
push
repnz
push
jae
mov
stc
pop
and
(bad)
and
loop
sbb
cmp
std
aad
sbb
xchg
mov
(bad)
(bad)
(bad)
mov
mov
adc
xchg
dec
bound
and
xor
js
mov
(bad)
(bad)
(bad)
jmp
in
jl
int
scas
mov
into
imul
add
xlat
push
pop
je
cmps
aaa
ins
pop
movs
jno
add
or
jmp
sub
push
aaa
sar
inc
hlt
dec
fcmovnb
sub
sbb
xor
(bad)
(bad)
fisttp
imul
inc
jg
aaa
mov
popa
xchg
mov
push
xchg
cs
inc
mov
mov
aaa
call
push
mov
(bad)
mov
fdiv
gs
adc
cli
xchg
(bad)
(bad)
(bad)
jmp
popa
cmp
xor
sahf
jbe
fst
sub
jnp
js
retf
cmp
out
sub
push
add
(bad)
(bad)
(bad)
(bad)
cmp
cwde
cmp
jmp
sbb
xchg
push
rol
in
inc
lods
jp
(bad)
(bad)
(bad)
cmp
fbstp
and
imul
mov
pop
aad
daa
popa
outs
aas
dec
xor
fild
jmp
imul
ds
xor
sbb
outs
pop
and
dec
push
xchg
repnz
dec
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
nop
fadd
rcr
dec
call
push
mov
xchg
mov
pop
popf
fbstp
dec
(bad)
(bad)
(bad)
call
rcl
xor
fimul
ds
inc
dec
sahf
daa
pop
jno
imul
(bad)
(bad)
jmp
push
cwde
add
jae
loop
ss
jmp
imul
(bad)
(bad)
call
jmp
enter
jmp
pushf
sbb
xchg
jp
mul
(bad)
jmp
leave
rcr
mov
into
(bad)
mov
or
or
retf
cmps
inc
imul
jnp
mov
cmp
cmp
mov
and
aas
jo
outs
mov
mov
les
push
add
cwde
(bad)
(bad)
(bad)
(bad)
cmp
jbe
fisubr
je
and
or
add
inc
pop
cmps
dec
jne
nop
(bad)
(bad)
mov
fidiv
sub
dec
lahf
xchg
movs
dec
push
(bad)
call
xor
pop
(bad)
cmps
aas
push
scas
ret
and
(bad)
(bad)
call
pop
jb
fmul
sub
out
hlt
sbb
pop
jae
sbb
jmp
jae
pop
cmp
jecxz
mov
dec
enter
fild
ret
xchg
lahf
push
adc
(bad)
(bad)
(bad)
jmp
shl
mov
mov
and
add
inc
push
xchg
mul
(bad)
(bad)
(bad)
jmp
cdq
test
mov
js
push
cld
mov
daa
popf
add
and
mov
mov
leave
lods
mov
fcom
(bad)
jg
cdq
mov
(bad)
cdq
stc
das
sub
outs
lods
repnz
enter
xchg
mov
push
jae
mov
sub
les
cdq
scas
enter
mov
fbstp
test
clc
call
pop
and
or
daa
dec
adc
in
mov
inc
test
(bad)
(bad)
(bad)
inc
mov
cmp
aaa
jle
dec
jp
outs
call
loop
jp
sbb
(bad)
(bad)
call
sub
sbb
pop
adc
jecxz
cwde
inc
ins
fwait
das
xor
mov
sub
(bad)
(bad)
jg
les
loopne
adc
js
sbb
js
add
add
(bad)
(bad)
cmp
jecxz
lods
retf
inc
out
test
xor
push
sub
inc
xor
push
xchg
mov
repnz
cwde
das
mov
repz
cs
inc
enter
pop
test
out
pop
lds
adc
add
(bad)
(bad)
dec
(bad)
fucomip
sub
pop
dec
xchg
mov
sbb
jne
dec
sahf
movs
mov
imul
rcl
add
mov
jmp
(bad)
xor
inc
fidivr
push
clc
fstp
mov
dec
loope
movs
inc
cmps
xchg
(bad)
push
sub
int
add
xchg
mov
dec
sbb
aaa
cmp
(bad)
(bad)
(bad)
jmp
dec
jge
and
and
jecxz
cld
scas
fisttp
jmp
jno
push
lea
loop
push
xchg
lods
(bad)
(bad)
(bad)
push
jae
add
int3
xchg
retf
or
cdq
es
fsub
add
xor
ret
xchg
cmp
(bad)
(bad)
jmp
leave
cmps
stos
mov
in
or
pop
mov
ins
adc
mov
(bad)
(bad)
fbld
and
iret
test
cmp
jae
imul
pop
js
pop
data16
ss
mov
inc
mov
cwde
jnp
push
xlat
xchg
or
cdq
mov
jp
cli
mov
xchg
xor
neg
pop
cmps
in
ja
mov
aas
(bad)
(bad)
(bad)
(bad)
js
jb
and
add
ja
or
xchg
cmps
loopne
sub
inc
in
adc
mov
(bad)
(bad)
dec
outs
mov
cmp
in
add
jno
jmp
add
(bad)
push
cmp
add
popf
ret
cmp
leave
jne
enter
(bad)
(bad)
jmp
sbb
and
cmps
adc
jle
or
or
loopne
fld
aad
jmp
add
cmp
jmp
mov
cli
ss
(bad)
push
mov
xchg
fidivr
sub
xor
fcom
loope
fisub
shl
(bad)
cmps
in
(bad)
(bad)
(bad)
(bad)
jg
sti
xor
or
jmp
outs
gs
push
xchg
in
stc
push
(bad)
popa
xor
or
pop
(bad)
(bad)
jg
push
outs
mov
loop
push
or
adc
jmp
test
sbb
or
daa
fcomp
cmp
scas
je
(bad)
push
push
imul
mov
pop
outs
ss
mov
popf
lea
fnstsw
sar
push
sbb
cmps
popf
push
es
mov
xlat
mov
pop
movs
(bad)
push
or
xchg
mov
mov
(bad)
(bad)
(bad)
jg
jmp
cwde
pop
push
mov
int3
mov
stc
ror
xchg
mov
inc
out
jmp
fs
repz
xor
scas
clc
dec
inc
inc
test
push
mov
adc
inc
inc
push
rol
push
jb
mov
adc
push
xchg
mov
adc
and
mov
cmps
out
inc
sub
(bad)
(bad)
call
fmul
addr16
pop
sbb
fsubr
mov
jg
dec
sbb
dec
lock
xchg
stos
(bad)
(bad)
mov
xor
adc
sti
popa
or
pop
fild
(bad)
call
xor
sti
cli
call
sbb
(bad)
mov
push
nop
(bad)
(bad)
(bad)
(bad)
call
fsub
and
push
cmps
sbb
movs
mov
inc
fst
jmp
(bad)
push
lahf
mov
fs
jp
cmp
call
(bad)
(bad)
push
xor
out
fs
ja
(bad)
push
into
cmp
imul
lds
cdq
loop
inc
jg
sbb
fdivp
icebp
(bad)
(bad)
(bad)
frstor
jne
xchg
repz
pop
xor
inc
sbb
dec
adc
push
mov
fist
jmp
int
mov
les
mov
pop
jmp
(bad)
(bad)
push
adc
push
icebp
out
bound
into
(bad)
mov
arpl
adc
fld
and
inc
das
adc
(bad)
(bad)
mov
ss
inc
xor
(bad)
rcl
(bad)
sub
(bad)
(bad)
(bad)
(bad)
stc
stos
addr16
loopne
or
(bad)
imul
lock
test
mov
pop
mov
(bad)
(bad)
jmp
ins
push
je
imul
push
retf
and
cmp
pusha
inc
pop
sbb
call
add
or
out
mov
push
mov
sub
jns
push
ret
clc
sub
aaa
cld
jo
scas
jnp
setle
call
(bad)
call
loopne
vmovq
icebp
mov
outs
lgs
(bad)
out
push
bound
push
(bad)
(bad)
(bad)
inc
pop
sbb
adc
std
ins
sbb
inc
fldenv
test
(bad)
(bad)
call
cmps
xchg
bound
dec
ins
mov
jle
fsub
mov
dec
push
fmul
cmp
ja
jmp
mov
add
push
scas
mov
push
xor
xor
addr16
push
(bad)
(bad)
(bad)
inc
or
addr16
sub
fldln2
(bad)
shl
test
cmps
fist
outs
xor
dec
sar
mov
dec
icebp
mov
xchg
push
mov
add
pop
icebp
addr16
inc
cmp
call
(bad)
push
int3
into
push
push
gs
pop
aaa
dec
and
push
inc
enter
sub
out
cdq
(bad)
test
mov
(bad)
(bad)
(bad)
jmp
inc
sbb
mov
mov
mov
jnp
and
add
xchg
gs
das
sar
(bad)
jmp
js
stos
in
mov
jmp
repz
inc
retf
stos
das
xchg
arpl
adc
call
push
loopne
pop
mov
jbe
scas
aam
cmc
sbb
jbe
ficomp
pop
xchg
ror
gs
pop
stos
mov
(bad)
mov
add
add
iret
inc
sub
push
dec
lock
(bad)
(bad)
fild
mov
adc
shl
btr
or
add
bound
aaa
movs
int3
pop
pop
sbb
(bad)
jg
call
push
in
cmp
dec
outs
lahf
cdq
jno
push
pop
dec
push
ret
dec
inc
sbb
(bad)
(bad)
(bad)
(bad)
cld
jle
xchg
adc
mul
cmp
outs
lods
pop
fild
xor
adc
xor
(bad)
jmp
lahf
push
js
sahf
inc
call
xchg
pop
cwde
cmp
mov
inc
lods
movs
mov
fdivr
jmp
xor
jmp
push
inc
push
cmp
push
xchg
xor
popf
sbb
sti
(bad)
jmp
mov
mov
mov
pop
ror
cmp
mov
scas
(bad)
(bad)
(bad)
fist
cmp
iret
pop
clc
jne
adc
nop
sub
push
mov
cwde
outs
adc
(bad)
jmp
push
mov
mov
pop
in
frstor
(bad)
(bad)
fbld
bound
pop
dec
pop
fsubp
scas
pop
aas
xor
pop
out
jmp
(bad)
(bad)
(bad)
inc
xchg
mov
popf
mov
cmc
(bad)
mov
dec
enter
sub
(bad)
(bad)
(bad)
dec
and
dec
push
dec
es
lods
cmps
mov
jmp
sub
les
les
test
inc
xchg
pop
add
cli
cs
add
mov
sahf
pop
int3
std
(bad)
(bad)
jmp
push
and
mov
xor
es
xor
xchg
dec
or
jmp
clc
push
sar
adc
inc
add
fbstp
adc
call
daa
jns
jne
std
mov
mov
sbb
stos
pop
sub
ss
mov
loope
(bad)
(bad)
(bad)
jmp
addr16
repz
sahf
test
stos
fsub
add
test
scas
ins
cwde
sti
mov
mov
inc
dec
outs
jmp
sbb
test
aaa
or
push
ss
mov
adc
(bad)
(bad)
dec
in
rcl
jp
retf
hlt
aas
or
ret
and
repnz
fs
mov
jg
jb
(bad)
(bad)
(bad)
push
pop
cmps
pop
xor
jmp
mov
dec
std
push
mov
imul
or
xor
iret
jmp
cld
(bad)
jmp
mov
and
mov
push
jg
adc
loop
fmul
retf
mov
jl
sub
out
mov
movs
int3
scas
inc
not
(bad)
mov
jo
(bad)
imul
cld
test
jno
xchg
add
(bad)
inc
icebp
aam
movs
(bad)
xchg
loopne
mov
cmp
cmp
cwde
sub
xchg
pop
xchg
push
int
ss
(bad)
(bad)
(bad)
jmp
mov
fsubr
arpl
sub
fwait
cmp
cmps
push
push
cdq
fcomip
mov
push
repz
aam
(bad)
(bad)
(bad)
dec
xchg
add
das
and
in
and
jbe
lahf
(bad)
fmul
clc
retf
(bad)
dec
mov
cmp
jb
dec
adc
cmp
mov
loope
(bad)
(bad)
(bad)
mov
outs
stos
jae
mov
pop
pop
cli
loope
push
dec
dec
sub
out
mov
cmp
cmp
(bad)
(bad)
jmp
test
sbb
data16
mov
data16
xor
shl
xor
(bad)
(bad)
(bad)
(bad)
cmp
cmp
popa
or
xchg
jge
fst
xor
test
pop
(bad)
(bad)
(bad)
(bad)
jg
ret
in
retf
pop
in
ss
lods
mov
xor
lock
mov
call
sar
aas
xchg
shr
rcr
call
imul
loop
(bad)
(bad)
(bad)
jmp
in
shr
and
imul
das
rcr
aas
push
push
dec
jge
mov
(bad)
(bad)
call
jno
push
sub
imul
test
(bad)
cmps
cmp
lahf
dec
(bad)
mov
cmp
call
xchg
mov
(bad)
scas
hlt
xchg
retf
in
or
push
cmp
fwait
js
jb
xchg
imul
(bad)
push
addr16
pop
jmp
push
pop
dec
and
push
xor
ins
int
adc
mov
cmp
jmp
movs
mov
cmp
push
mov
jmp
mov
pop
lahf
int
sbb
(bad)
jmp
mov
adc
rcl
pop
and
imul
adc
(bad)
(bad)
call
xlat
mov
shr
xor
out
int3
xchg
into
xchg
leave
fwait
jg
ret
cmp
adc
mov
jle
(bad)
inc
push
imul
dec
aas
ret
inc
mov
xor
ret
icebp
mov
jo
test
mov
je
mov
(bad)
call
enter
retf
mov
push
dec
shl
sti
out
test
cmp
aad
mov
inc
bound
(bad)
(bad)
(bad)
call
cmp
mov
or
leave
xor
nop
bound
lods
fadd
(bad)
(bad)
mov
xchg
and
and
and
mov
xchg
mov
and
inc
clc
(bad)
mov
ret
mov
lahf
sub
or
scas
cld
lods
or
xchg
das
push
mov
js
sbb
outs
cmp
sbb
inc
cld
fadd
adc
fwait
repnz
mov
push
mov
sub
(bad)
dec
lahf
div
xchg
rcl
mov
lea
loop
nop
push
and
jmp
mov
inc
mov
lods
inc
sar
inc
dec
mov
test
sbb
(bad)
(bad)
jmp
stc
in
sbb
das
pushf
hlt
test
lahf
cmps
fnstcw
sub
mov
in
pop
pop
dec
xchg
pop
adc
pop
movs
js
(bad)
(bad)
push
ror
and
imul
push
jmp
ins
xlat
mov
dec
(bad)
(bad)
(bad)
push
jmp
sbb
daa
retf
mov
idiv
mov
popf
gs
dec
out
(bad)
(bad)
(bad)
(bad)
stc
rol
sub
in
enter
dec
sub
pop
push
add
movs
fwait
add
mov
scas
sub
xchg
jp
idiv
sbb
int
cwde
outs
mov
(bad)
and
or
(bad)
call
repz
jmp
loopne
pop
inc
shl
mov
cmp
(bad)
(bad)
mov
jbe
cmp
(bad)
jmp
or
sbb
out
call
(bad)
(bad)
cmp
cmp
sub
adc
xchg
push
jge
lock
out
add
outs
rcr
add
(bad)
jp
outs
shl
sub
les
xchg
jmp
repnz
call
out
ror
rol
push
mov
(bad)
(bad)
(bad)
push
add
fs
and
fs
xchg
fadd
repz
xlat
dec
inc
mov
(bad)
(bad)
(bad)
std
push
aam
xchg
xor
xchg
daa
add
pusha
popa
inc
mov
mov
inc
movs
jae
arpl
call
in
lods
ja
push
es
xor
xchg
mov
push
test
mov
fcomip
jmp
xor
test
dec
clc
es
in
jns
mov
pop
icebp
(bad)
(bad)
inc
pop
pop
mov
nop
cmps
sbb
xor
jb
mov
mov
les
movs
add
jge
sub
enter
popf
(bad)
(bad)
(bad)
push
sbb
jns
inc
dec
dec
rcr
push
cmps
and
jl
rcr
mov
inc
fdiv
(bad)
(bad)
jmp
xlat
inc
and
ds
in
inc
mov
loop
dec
fstp
or
shr
pop
ret
mov
test
aad
aas
cs
test
cmp
leave
movs
xchg
in
in
les
mov
sti
jg
mov
mov
xor
cmps
xor
jb
fld
ja
and
mov
sub
ss
shl
rcr
(bad)
(bad)
fbld
jno
jp
cld
ja
in
out
mov
pop
outs
(bad)
div
jne
fsubr
dec
pop
mov
les
sub
out
aas
jmp
ror
sub
cmc
pop
jle
outs
pop
(bad)
(bad)
(bad)
call
fidivr
jecxz
push
out
adc
push
pushf
inc
sub
stos
pop
lea
push
(bad)
(bad)
(bad)
(bad)
fstp
pop
(bad)
test
(bad)
(bad)
push
cli
mov
jmp
scas
and
dec
ret
push
popf
or
jg
inc
hlt
(bad)
inc
repnz
stc
jmp
adc
(bad)
(bad)
(bad)
mov
mov
ins
xor
sub
movs
out
not
inc
movs
mov
xor
scas
ins
sbb
ins
popa
mov
lods
sub
cmps
sub
mov
(bad)
push
and
hlt
sbb
(bad)
call
xor
mov
lds
in
test
jmp
(bad)
(bad)
dec
lods
jb
xor
jns
jp
movs
mov
jmp
jecxz
xor
(bad)
call
xlat
sub
jnp
push
or
push
and
mov
loope
(bad)
(bad)
call
cli
aaa
ds
outs
sub
and
jmp
mov
gs
add
(bad)
(bad)
jmp
cmps
(bad)
js
fwait
or
pop
xchg
cmp
pop
mov
xor
outs
dec
fs
mov
or
stc
push
ret
retf
leave
lock
xchg
sub
(bad)
(bad)
call
imul
or
shr
(bad)
dec
mov
sbb
in
jbe
add
xchg
imul
outs
lods
aad
adc
sbb
inc
jbe
mov
xor
sub
(bad)
call
pop
adc
(bad)
and
push
aam
lods
call
mov
std
fdivr
hlt
cld
(bad)
(bad)
jg
xchg
pop
sbb
cld
pop
mov
xor
sub
inc
ud1
sti
(bad)
(bad)
push
rcl
mov
scas
cli
dec
addr16
in
test
popa
cs
outs
inc
xor
(bad)
(bad)
(bad)
call
inc
repz
aad
pushf
pop
sbb
ret
cmp
cs
adc
pusha
sbb
push
or
ja
(bad)
call
mov
add
push
popf
imul
(bad)
(bad)
(bad)
dec
add
sub
mov
lock
sbb
es
into
(bad)
das
mov
inc
mov
call
mov
fwait
add
lea
(bad)
(bad)
(bad)
call
cld
jne
dec
add
or
cmp
jae
enterw
mov
sbb
(bad)
(bad)
(bad)
(bad)
jmp
aas
pop
pop
cmps
ja
push
dec
stc
loopne
push
sbb
sub
inc
push
mov
(bad)
(bad)
(bad)
call
and
xchg
cs
ins
arpl
mov
inc
sub
mov
mov
in
pop
popa
fisub
mov
sar
call
imul
test
test
ss
(bad)
fcomip
jg
push
lods
sbb
sub
pop
mov
mov
xor
push
enter
call
inc
push
pop
inc
dec
call
sbb
pop
nop
stc
imul
fmul
repnz
xchg
push
pop
jnp
into
and
loope
dec
retf
xor
es
xor
call
push
jmp
mov
jnp
xchg
bound
les
in
rep
std
(bad)
(bad)
(bad)
cmp
in
sub
cmc
ror
push
imul
in
cmp
(bad)
jmp
mov
(bad)
ins
dec
sbb
inc
xchg
int3
jae
cmc
or
mov
call
jae
inc
or
(bad)
xchg
adc
outs
int3
ret
call
inc
add
(bad)
inc
pushf
and
push
xchg
ret
aas
xchg
(bad)
cmp
push
rol
push
lods
(bad)
(bad)
(bad)
jmp
push
out
lea
push
loopne
dec
sbb
aaa
add
mov
jmp
jae
fidivr
push
pop
popf
xchg
gs
jmp
(bad)
xchg
imul
(bad)
inc
mov
cmp
out
xchg
dec
mov
cmp
or
stos
mov
retf
int
shr
call
sub
or
(bad)
leave
cmp
(bad)
push
outs
push
push
xchg
aas
fs
push
xor
leave
mov
call
pop
jb
jp
dec
add
or
bound
div
cli
dec
jle
adc
repz
(bad)
and
(bad)
call
push
xchg
jmp
ins
(bad)
mov
mov
(bad)
mov
pop
jo
xchg
fidivr
push
inc
gs
aad
loop
dec
mov
pop
pop
mov
sub
sub
(bad)
sbb
push
push
cmp
int
add
in
popa
and
cmps
jg
call
pop
int3
sbb
(bad)
push
mov
rcr
pop
sahf
xor
out
add
or
mov
(bad)
(bad)
(bad)
mov
imul
std
data16
loopne
fist
in
jo
lods
call
jmp
gs
in
sahf
enter
xchg
and
rcl
push
mov
(bad)
(bad)
sbb
(bad)
jg
push
or
pop
outs
shl
in
xchg
ret
popf
add
and
(bad)
(bad)
push
jmp
xchg
push
fwait
mov
out
mov
(bad)
(bad)
call
(bad)
sbb
movs
jmp
lds
arpl
cld
js
cmp
shl
call
das
sbb
lods
lods
(bad)
and
movs
jmp
(bad)
lock
mov
jnp
mov
xor
sub
inc
push
jmp
and
cmc
mov
and
jno
(bad)
jmp
popa
pop
xor
mov
cmps
push
in
pop
jno
mov
dec
(bad)
push
loope
(bad)
(bad)
mov
inc
inc
push
jp
xchg
jno
mov
mov
or
lock
mov
add
fcmovu
test
xor
(bad)
(bad)
(bad)
mov
aas
adc
push
lods
sub
ss
lods
pusha
jo
enter
(bad)
jmp
rep
retf
data16
(bad)
xchg
jmp
and
push
xlat
outs
enter
jecxz
fisubr
(bad)
push
out
pop
and
loope
das
idiv
lock
push
sbb
sbb
add
push
idiv
(bad)
(bad)
dec
or
out
and
lahf
loop
aad
pushf
xchg
test
sbb
(bad)
(bad)
(bad)
jmp
fwait
fs
iret
leave
pop
jnp
lods
pop
dec
les
adc
adc
mov
call
jne
add
add
arpl
ja
ss
imul
scas
or
test
pop
adc
push
sbb
sbb
jmp
stc
jecxz
pop
cmp
out
(bad)
cmp
inc
(bad)
fwait
outs
out
hlt
sub
xchg
scas
(bad)
(bad)
(bad)
push
pop
fnstsw
pop
pop
lods
jge
push
jmp
mov
sub
jmp
and
in
and
(bad)
call
mov
adc
ins
add
jnp
cmp
retf
out
push
(bad)
jmp
cmp
mov
xchg
push
cmps
or
add
(bad)
call
push
sbb
jae
dec
in
dec
popa
stos
ss
and
dec
das
add
xlat
addr16
mov
jmp
outs
jle
loop
push
mov
add
cmp
retf
fidiv
std
(bad)
jg
inc
push
les
and
push
shl
imul
push
cmps
pop
and
jecxz
cdq
sbb
mov
mov
add
push
aad
jb
(bad)
(bad)
(bad)
(bad)
jmp
and
push
(bad)
icebp
cmp
ret
leave
(bad)
pavgb
and
fst
sar
(bad)
(bad)
call
pop
dec
arpl
push
icebp
and
fisttp
jle
fistp
pop
adc
or
bound
ja
jmp
mov
sbb
mov
mov
(bad)
mov
inc
sub
jns
sbb
cmp
xor
(bad)
jmp
inc
cwde
fs
push
push
repnz
(bad)
and
jg
lahf
xor
push
and
gs
(bad)
(bad)
call
xor
(bad)
fucomp
push
mov
das
xchg
aam
gs
aaa
mov
mov
retf
inc
imul
ins
dec
out
cmp
mov
ffreep
stc
(bad)
(bad)
(bad)
jmp
xchg
inc
inc
add
pop
cmp
mov
stos
or
sub
dec
sub
(bad)
(bad)
fdiv
xlat
mov
sti
xchg
jmp
sub
shr
(bad)
(bad)
fbld
or
pop
jbe
cmp
movs
cs
cmps
std
fstp
xchg
lods
les
xor
(bad)
(bad)
mov
lods
push
out
pop
adc
outs
or
or
out
jl
(bad)
(bad)
push
mov
shr
adc
mov
das
mov
mov
lea
xor
(bad)
(bad)
sti
xor
xchg
inc
sar
pushf
cld
icebp
mov
out
idiv
(bad)
jmp
cdq
mov
fsub
sbb
fwait
pop
push
and
sbb
aad
test
jg
(bad)
call
jmp
mov
idiv
push
push
cmc
jb
dec
clc
out
shr
(bad)
(bad)
(bad)
push
ds
(bad)
mov
jmp
mov
mov
adc
mov
(bad)
mov
dec
push
bound
sub
pusha
mul
(bad)
(bad)
cmp
adc
jb
dec
inc
dec
xchg
mov
sahf
(bad)
fdiv
sub
(bad)
(bad)
(bad)
call
sub
xchg
stos
sbb
sub
les
push
push
shl
push
fdivr
(bad)
(bad)
(bad)
inc
cs
sar
in
mov
icebp
sahf
mov
sar
lahf
call
xor
jg
test
shr
(bad)
dec
retf
(bad)
pop
push
sbb
sbb
sub
add
jge
dec
nop
pop
mov
xor
rcr
cmovo
dec
stos
mov
fwait
add
(bad)
call
and
popa
loopne
in
pop
inc
sbb
addr16
jl
pop
fist
movs
shl
inc
inc
ja
repz
xchg
push
xchg
fst
(bad)
(bad)
mov
jbe
in
mov
fld
adc
sbb
hlt
adc
test
push
test
mov
inc
dec
rol
adc
adc
retf
cld
xchg
inc
retf
push
jp
pop
aas
icebp
sti
push
cmovae
inc
mov
(bad)
enter
push
jl
mov
iret
or
xchg
(bad)
jno
push
hlt
cld
inc
sub
fidiv
inc
or
cmp
cld
push
mov
mov
adc
ror
push
in
push
or
retf
leave
sbb
xor
(bad)
(bad)
fdivr
imul
cwde
sub
aam
scas
imul
(bad)
xor
hlt
inc
lahf
jl
cmp
stos
or
push
sar
push
dec
adc
lods
push
or
pop
xchg
pop
icebp
mov
(bad)
mov
out
cs
das
mov
pop
cmps
inc
jge
lgs
cs
add
or
cmp
(bad)
(bad)
(bad)
jmp
mov
retf
sbb
cld
push
mov
sub
xor
fwait
jmp
call
lds
mov
repnz
push
xor
outs
(bad)
call
mov
xchg
in
cmp
cmps
hlt
fcmovnbe
fiadd
pushf
adc
cmp
(bad)
(bad)
inc
adc
xchg
test
fbld
ret
(bad)
xchg
push
push
fstp
shl
push
(bad)
(bad)
(bad)
call
mov
rcl
jg
stos
jno
push
pop
icebp
jecxz
adc
imul
push
call
jecxz
mov
movaps
fwait
in
xor
loop
(bad)
(bad)
push
pop
movs
call
xor
and
jnp
pop
cmp
fbld
xchg
jno
sbb
xchg
aas
xchg
cmps
rcr
(bad)
outs
and
fimul
sub
push
or
sbb
(bad)
(bad)
dec
mov
fucom
sahf
outs
es
cmp
sbb
jmp
leave
sbb
sbb
adc
xor
and
sahf
in
jb
push
mov
dec
push
aad
(bad)
(bad)
jg
sub
inc
ins
mov
push
ret
mov
sbb
pop
cs
(bad)
mov
and
pusha
call
jp
sbb
ins
or
(bad)
(bad)
jmp
loopne
imul
cmps
and
sbb
call
add
cmp
sub
xchg
aad
mov
cmp
sar
mov
pop
fs
mov
sar
repnz
(bad)
fst
mov
mov
rol
or
cmp
mov
test
inc
dec
adc
mov
xor
mov
popf
cmp
std
jg
jle
adc
sub
push
cmp
dec
dec
pop
dec
out
inc
in
jge
(bad)
(bad)
(bad)
jmp
inc
mov
mov
cmp
push
sti
cmp
jl
sub
mov
xchg
mov
(bad)
(bad)
jmp
xor
outs
mov
js
out
imul
and
in
test
repz
(bad)
call
add
inc
inc
cmp
lfs
dec
and
xchg
clc
push
loop
call
inc
(bad)
xchg
sbb
movs
sbb
loop
adc
push
sub
xor
loope
fwait
scas
pushf
fbld
bound
(bad)
(bad)
dec
clc
scas
mov
js
cmp
das
or
aas
ds
jg
add
push
popa
xor
(bad)
(bad)
(bad)
fstp
inc
xchg
mov
pop
add
sub
and
sub
xor
inc
mov
enter
fbld
js
lock
jns
push
aam
xchg
add
dec
(bad)
call
jp
sbb
gs
in
sbb
aam
out
daa
int3
pop
dec
arpl
cmp
(bad)
(bad)
(bad)
fstp
mov
mov
(bad)
or
pop
pop
js
xchg
(bad)
hlt
sar
push
ins
xor
fdiv
mov
mov
jmp
push
ja
jp
cmps
popf
pop
sub
xchg
push
push
xor
(bad)
push
xchg
loop
mov
jo
or
icebp
mul
push
mov
mov
jg
(bad)
inc
add
pop
imul
xchg
mov
sub
clc
add
scas
and
pushf
int
mov
cld
sbb
(bad)
(bad)
jmp
fist
jae
adc
mov
push
push
dec
cmp
loop
xchg
xchg
movs
clc
sbb
cmp
xchg
sti
mov
sbb
inc
xchg
mov
mov
pop
and
push
(bad)
lods
outs
dec
gs
adc
inc
ins
repnz
ss
pop
pop
ins
(bad)
jmp
out
jle
cmp
sar
sub
add
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
nop
repz
sbb
bound
pop
xor
push
mov
pop
lahf
pop
(bad)
(bad)
(bad)
inc
rcl
out
stos
rcr
jl
and
add
lock
pop
and
mov
out
fdivr
(bad)
(bad)
(bad)
fcmovnu
ror
push
sub
aas
adc
daa
inc
ss
js
jno
or
jmp
pusha
aam
test
ins
and
pop
sbb
test
retf
jge
scas
(bad)
(bad)
(bad)
push
scas
jecxz
and
(bad)
sub
cmp
mov
push
sub
and
add
and
(bad)
jg
jge
pusha
mov
mov
out
repnz
imul
setnp
add
pop
ins
dec
push
or
mov
clc
(bad)
(bad)
jmp
xchg
int
call
push
imul
sbb
rol
xchg
sahf
cmps
mov
(bad)
out
xchg
std
inc
push
aas
pushf
std
mov
add
cmp
(bad)
push
jbe
mov
jb
cli
(bad)
call
pop
mov
ret
ds
iret
test
sub
pop
lods
sub
adc
popa
call
add
adc
xor
add
pop
call
out
stc
(bad)
(bad)
(bad)
(bad)
mov
jb
add
call
add
shl
sub
mov
stc
or
cmp
(bad)
(bad)
jmp
lahf
push
ja
jns
stos
fdivr
lds
retf
ja
jnp
jge
cmp
shr
or
and
ror
les
sbb
inc
mov
(bad)
aas
les
dec
inc
mov
and
daa
sub
jg
pop
outs
sbb
sbb
(bad)
(bad)
(bad)
mov
(bad)
adc
les
pop
popa
scas
call
popf
xlat
add
nop
cmp
popf
stos
pusha
mov
dec
nop
jo
test
push
pop
(bad)
(bad)
push
stc
pop
or
push
mov
out
xchg
std
cmp
imul
das
icebp
das
sar
pop
retf
mov
jl
retf
inc
adc
test
add
out
dec
adc
pop
xchg
inc
(bad)
(bad)
(bad)
(bad)
inc
mov
aad
adc
(bad)
imul
mov
movs
in
stos
ja
or
mov
mov
(bad)
call
xchg
inc
fnstsw
test
sub
stos
fsubr
test
repz
(bad)
mov
mov
jg
or
lea
fstp
stos
and
pop
add
out
leave
mov
(bad)
(bad)
jmp
push
jmp
in
ror
xor
push
in
mov
cld
stos
mov
pop
xchg
(bad)
dec
dec
stos
mov
pop
call
scas
xor
in
mov
mov
call
xadd
xchg
mov
inc
das
(bad)
(bad)
(bad)
call
scas
xlat
mov
nop
test
and
jnp
jmp
jno
jge
xchg
jbe
sbb
std
(bad)
cmp
xchg
sbb
movs
lods
pop
and
ja
mov
jg
jg
sbb
lea
call
inc
cdq
aaa
loope
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
adc
out
cmp
sub
sub
leave
ins
pop
jne
fisttp
xor
(bad)
(bad)
jmp
dec
not
add
in
mov
jle
int3
lock
mov
popa
es
(bad)
(bad)
jmp
jl
in
sub
test
dec
sbb
and
dec
mov
inc
mov
(bad)
(bad)
(bad)
(bad)
cmp
pop
xchg
push
mov
stos
adc
xor
xor
xchg
shr
imul
sub
out
(bad)
mov
cmc
lea
push
fild
fcomp
ret
xchg
xchg
push
pmaxub
adc
mov
adc
inc
test
loope
mov
and
xor
add
(bad)
jmp
shl
ds
jmp
lods
setns
pop
test
add
lahf
jbe
cmc
fcmovne
xlat
ins
xor
(bad)
mov
bound
bound
sub
rol
lds
cmp
pop
ins
popa
shl
stos
je
jns
mov
inc
clc
mov
adc
repnz
xchg
repz
add
scas
out
je
xor
push
lds
lahf
sbb
or
in
push
fldcw
mov
xor
or
(bad)
(bad)
jmp
outs
mov
aas
sti
xchg
mov
cmps
(bad)
movs
jmp
call
leave
jl
vmread
imul
xor
in
int
(bad)
(bad)
jmp
dec
or
jl
pop
xchg
xchg
xchg
daa
pusha
jns
pushf
int
pop
inc
xchg
sti
std
mov
dec
leave
or
(bad)
jmp
jge
daa
cmps
movs
rol
jns
xchg
and
mov
add
sub
(bad)
adc
(bad)
mov
push
sub
in
xchg
imul
sub
(bad)
(bad)
jg
dec
(bad)
in
pop
popf
cmps
push
shl
cmps
outs
int3
(bad)
push
xchg
jl
sbb
adc
(bad)
(bad)
(bad)
jmp
jg
push
aam
xchg
popa
test
jle
pop
jo
and
in
fldcw
pop
push
stc
xchg
popa
mov
mov
or
pop
inc
jl
fisubr
sub
js
(bad)
pop
mov
(bad)
mov
leave
pop
repnz
cmps
pushf
retf
inc
sahf
or
(bad)
mov
jmp
mov
or
sahf
inc
jb
push
and
mov
(bad)
(bad)
inc
dec
pop
pop
sub
ds
fdiv
call
xor
(bad)
dec
push
in
(bad)
(bad)
(bad)
mov
mov
or
and
int
inc
retf
pop
jg
mov
(bad)
(bad)
(bad)
(bad)
mov
or
xor
stc
jnp
mov
cwde
popf
add
sbb
sub
retf
ret
outs
inc
ret
ret
jge
scas
das
movs
mov
push
pushf
inc
mov
(bad)
(bad)
dec
in
das
fimul
pop
dec
inc
imul
pop
lds
fbld
cmps
add
(bad)
(bad)
(bad)
push
popa
fstp
hlt
mov
repz
xor
cmps
push
push
iret
stos
test
scas
aam
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
mov
adc
jno
mov
push
jp
dec
or
and
push
cmp
(bad)
dec
ror
inc
out
dec
xor
cs
sbb
push
adc
sar
(bad)
dec
int
mov
cmp
jnp
xchg
call
mov
adc
xchg
jl
jae
pop
add
(bad)
(bad)
(bad)
jmp
lods
and
stos
add
outs
push
push
fnsave
inc
in
repnz
popa
fs
mov
sar
lds
pop
xchg
dec
jg
ins
or
mov
sub
mov
(bad)
(bad)
call
int3
sbb
add
int
inc
test
inc
ja
push
mov
inc
lock
(bad)
(bad)
(bad)
fstp
ins
cdq
loopne
or
mov
int
mov
cwde
(bad)
(bad)
(bad)
call
and
sbb
ja
push
xor
clc
(bad)
pusha
ret
(bad)
dec
shr
push
xchg
fsubr
call
nop
fsubr
jns
in
cmp
pop
jo
mov
je
pushf
xchg
xchg
pop
mov
leave
out
(bad)
rol
das
mov
dec
or
dec
(bad)
pop
mov
sbb
adc
loope
jl
push
popa
pusha
stos
leave
jecxz
dec
lea
(bad)
(bad)
(bad)
jge
pop
jle
je
test
mov
test
nop
pop
aas
outs
std
popf
(bad)
(bad)
(bad)
mov
cmp
inc
iret
std
sbb
popa
imul
jno
pop
cmp
arpl
inc
int3
dec
(bad)
(bad)
(bad)
jmp
fsubr
and
jg
jg
lock
test
test
mov
(bad)
(bad)
jmp
sub
fst
add
and
stc
lea
daa
pop
mov
(bad)
jmp
lods
in
loop
loop
nop
add
add
jp
pusha
test
test
(bad)
sbb
inc
movs
xor
ja
leave
daa
das
js
fdiv
dec
mov
mov
aam
xchg
mov
inc
mov
out
add
repnz
inc
repz
(bad)
(bad)
(bad)
call
aad
dec
outs
mov
(bad)
or
repz
in
push
test
xor
imul
mov
(bad)
(bad)
fidivr
cmp
ja
inc
lods
pop
lods
adc
fist
ror
mov
(bad)
sub
mov
shl
loop
(bad)
cld
inc
pop
sub
imul
scas
mov
inc
(bad)
(bad)
(bad)
mov
outs
adc
ror
mov
dec
retf
mov
dec
(bad)
(bad)
(bad)
call
scas
fild
mov
hlt
xlat
loopne
or
mov
add
repz
xchg
cld
(bad)
(bad)
(bad)
fdiv
jno
push
dec
lods
fimul
mov
cmp
mov
ficom
iret
cmc
push
sub
(bad)
call
(bad)
cwde
dec
shl
scas
in
test
pop
jbe
mov
addr16
js
jbe
xchg
mov
or
int
adc
rol
(bad)
(bad)
jmp
sub
sbb
mov
mov
out
xor
nop
imul
movs
mul
add
(bad)
(bad)
(bad)
(bad)
clc
sbb
mov
test
mov
sub
dec
adc
in
lahf
and
jbe
sysenter
gs
mov
fcomip
mov
sbb
fisub
std
xor
lods
sbb
mov
(bad)
(bad)
(bad)
call
and
fwait
shr
mov
pop
sahf
loop
jl
xchg
call
mov
sar
dec
movs
sbb
pop
loopne
jp
inc
jb
(bad)
jmp
jg
out
neg
je
xor
xor
lods
js
mov
and
icebp
shl
jp
sbb
test
(bad)
(bad)
dec
dec
dec
inc
rcr
pop
mov
in
adc
out
scas
jl
mov
jg
gs
mov
mov
in
out
push
and
xor
jg
test
popf
aas
cmp
loope
mul
adc
call
(bad)
(bad)
dec
iret
add
adc
mov
push
scas
and
sti
or
pop
mov
and
mov
je
pop
cmc
(bad)
cmp
push
(bad)
sti
cmp
test
xor
lea
cmp
(bad)
call
in
ins
fdiv
or
pop
pop
arpl
cmps
hlt
js
bound
and
(bad)
jmp
stos
call
pop
pop
out
ins
or
gs
inc
adc
and
js
push
(bad)
(bad)
(bad)
push
pop
cdq
fdiv
jl
push
jecxz
fnstsw
test
xor
sub
adc
stos
push
pop
(bad)
(bad)
(bad)
jmp
sbb
adc
mov
push
gs
loop
mov
(bad)
(bad)
(bad)
call
adc
xor
das
and
aad
(bad)
push
mov
cmp
cmp
int3
aaa
and
pop
(bad)
(bad)
(bad)
push
dec
xor
cmps
mov
(bad)
jge
sbb
jle
jbe
push
cdq
xor
fs
aad
je
(bad)
(bad)
jmp
call
into
popf
out
mov
sti
xchg
test
and
jl
(bad)
(bad)
(bad)
(bad)
sti
scas
and
cmp
sbb
into
mov
outs
pop
repnz
push
test
leave
movs
xchg
push
(bad)
(bad)
(bad)
jmp
repnz
adc
fdivr
(bad)
pop
mov
ins
pop
push
mov
push
lods
add
push
gs
(bad)
inc
addr16
cmp
test
outs
leave
mov
lds
mov
add
fs
enter
rol
(bad)
hlt
pop
mov
shr
and
ss
dec
mov
jmp
inc
sbb
rcl
inc
add
int3
jo
and
(bad)
(bad)
dec
jnp
pusha
je
xchg
sub
xchg
xchg
aad
inc
cld
push
sahf
les
dec
fidivr
sbb
(bad)
adc
(bad)
(bad)
(bad)
cmp
icebp
and
call
jecxz
js
scas
out
sbb
xchg
cli
pop
(bad)
mov
xchg
mov
in
mov
push
push
add
movs
stos
jle
inc
clc
nop
data16
mov
mov
push
fldcw
xor
out
mov
fisubr
sbb
lock
cmp
(bad)
adc
mov
test
mov
mul
cmp
push
push
pop
xchg
and
pusha
(bad)
call
into
ins
sbb
pop
icebp
lock
cli
mov
scas
mov
ret
jg
cmc
(bad)
jmp
or
outs
push
iret
or
push
jbe
jb
ret
adc
pop
sahf
xor
and
ds
iret
mov
push
fisubr
stos
leave
cs
dec
cld
(bad)
(bad)
call
cdq
mov
cmp
cdq
and
das
push
cmps
and
enter
(bad)
call
push
push
arpl
aam
cmps
iret
xchg
pop
scas
rol
and
dec
je
pop
aad
popa
dec
cli
fbld
or
in
sbb
(bad)
(bad)
jmp
inc
jb
xchg
mov
or
xor
in
arpl
xchg
adc
or
leave
inc
in
xor
xor
cmc
dec
inc
fdiv
push
nop
into
dec
mov
(bad)
(bad)
jmp
lds
sti
dec
mov
pushf
and
mov
movs
sahf
adc
dec
xor
pop
pop
mov
shr
dec
idiv
inc
fs
hlt
mov
ins
(bad)
(bad)
cmp
call
aad
mov
push
(bad)
(bad)
jmp
rol
shl
push
xchg
xchg
mov
adc
mov
(bad)
(bad)
(bad)
push
and
repz
mov
imul
cld
add
aas
mov
and
pop
bound
mov
xchg
push
loop
and
imul
movs
jb
(bad)
(bad)
(bad)
push
dec
test
stos
xchg
xchg
jl
push
xor
xchg
(bad)
add
test
dec
mov
xchg
(bad)
(bad)
(bad)
dec
arpl
pop
call
mov
mov
pop
push
icebp
cmp
mov
lods
inc
xchg
inc
sub
(bad)
jg
inc
or
mov
into
ds
in
repz
(bad)
pop
and
mov
inc
in
(bad)
(bad)
mov
sbb
movs
pop
fidivr
dec
push
fmul
mov
sub
push
adc
(bad)
(bad)
call
mov
and
fst
repz
dec
and
lods
loopne
(bad)
(bad)
jmp
cwde
add
cmc
push
add
jne
push
xchg
aas
or
jno
dec
add
(bad)
(bad)
(bad)
call
aam
jb
movs
pop
mov
mov
xchg
add
cmp
test
lds
add
cli
(bad)
jnp
xchg
inc
test
call
adc
jbe
push
ror
div
mov
jmp
clc
jp
pop
sub
repz
in
adc
xchg
dec
rcl
call
xchg
inc
(bad)
(bad)
jmp
sbb
mov
and
inc
sub
xchg
sahf
mov
pop
jb
mov
clc
sbb
lahf
adc
jmp
jb
stos
adc
(bad)
call
ret
fidiv
mov
add
jno
rcr
pop
dec
(bad)
call
das
out
mov
scas
and
(bad)
cli
je
adc
jne
and
mov
(bad)
(bad)
jmp
outs
sbb
aad
sahf
mov
(bad)
mov
mov
(bad)
cli
sub
(bad)
pop
stos
mov
cmp
pop
mov
cmp
sbb
ss
and
mov
mov
sub
sbb
or
dec
mov
rcl
ds
sub
psraw
out
jae
sub
popa
pop
add
enter
imul
dec
cmpxchg
retf
dec
xchg
pop
dec
stos
jp
mov
jge
stc
iret
or
sub
outs
cli
icebp
fld
mov
inc
sbb
cmp
cli
xor
(bad)
movs
fcom
je
bnd
adc
fimul
(bad)
(bad)
(bad)
mov
in
fdivr
push
cmp
loop
mov
outs
jbe
sbb
ficom
mov
inc
adc
(bad)
int3
mov
pop
pop
stos
pop
push
dec
xor
(bad)
out
jg
cmps
(bad)
(bad)
jmp
and
addr16
adc
out
popa
popa
and
inc
aad
(bad)
(bad)
(bad)
(bad)
stc
(bad)
push
pop
sti
scas
cmps
sbb
push
xor
jns
adc
push
or
xor
fs
(bad)
(bad)
(bad)
jmp
out
push
mov
daa
hlt
int
sbb
hlt
cmp
ss
test
jnp
push
iret
(bad)
(bad)
(bad)
jmp
test
xchg
fist
pop
(bad)
push
push
sub
sbb
jno
xlat
cli
add
cmp
(bad)
(bad)
cli
pop
mov
ins
xor
mov
push
inc
call
push
in
test
and
(bad)
(bad)
call
lea
arpl
push
jmp
addr16
sub
mov
arpl
pusha
dec
push
icebp
popa
(bad)
(bad)
(bad)
inc
aaa
mov
mov
mov
push
lea
test
mov
xchg
add
repnz
popf
push
cmp
xchg
push
ja
and
ret
fistp
sub
xchg
popf
call
push
aam
int3
(bad)
retf
inc
xchg
adc
mov
mov
sub
(bad)
(bad)
mov
pop
mov
inc
inc
es
add
popf
fld
ss
out
movs
push
jb
mov
js
and
(bad)
js
xchg
or
inc
(bad)
dec
enter
ja
shl
pop
pop
xchg
cmps
retf
pop
fs
pop
inc
test
(bad)
call
inc
sbb
inc
xor
lods
mov
inc
imul
es
icebp
sub
xor
sahf
mov
sbb
jmp
gs
inc
(bad)
(bad)
(bad)
jg
test
push
jmp
call
and
jo
std
xchg
movs
scas
adc
jmp
jae
mov
adc
or
xchg
jnp
jl
push
(bad)
(bad)
(bad)
call
out
imul
pop
sub
mov
sahf
fxch
jo
retf
sbb
sbb
sar
mov
jge
(bad)
(bad)
call
mov
imul
xchg
call
jae
shl
pop
mov
pop
loopne
(bad)
mov
into
js
sub
ins
xor
mov
loop
mov
jb
dec
popa
add
(bad)
(bad)
jmp
mul
push
push
std
cmp
jns
push
pop
fistp
je
mov
ret
sar
loop
ror
or
sbb
inc
xchg
inc
add
jecxz
cmp
std
fcmovb
xor
retf
jle
dec
repnz
(bad)
(bad)
(bad)
dec
cmp
sti
jp
adc
mov
ja
dec
and
xchg
rcl
sbb
aas
shl
dec
lds
mov
ret
pop
(bad)
out
sub
or
add
das
ficomp
mov
shl
push
inc
retf
(bad)
dec
out
ret
popa
icebp
inc
inc
xlat
shr
bound
and
cli
(bad)
(bad)
(bad)
dec
mov
xlat
mov
sbb
fmul
enter
pop
jge
in
data16
push
pop
std
(bad)
jmp
retf
dec
pushf
xor
jp
fcom
movs
(bad)
imul
sbb
call
popa
and
pop
lea
push
cdq
jo
pop
adc
mov
(bad)
(bad)
(bad)
call
(bad)
popa
dec
jmp
dec
mov
or
not
(bad)
lods
and
fdiv
cmp
inc
sub
pop
sbb
xchg
fimul
sbb
lds
add
cli
sbb
mov
in
dec
mov
jmp
sub
stos
lods
and
add
sbb
movs
loope
or
mov
ror
ja
imul
push
dec
mov
out
(bad)
(bad)
jmp
test
xchg
cmp
rcr
sub
lock
mov
aam
cmp
call
daa
(bad)
fistp
or
(bad)
test
in
add
mov
or
retf
push
mov
pop
aas
retf
jbe
sti
mov
xchg
xor
sub
add
jae
or
(bad)
(bad)
jmp
push
int3
dec
mov
mov
ror
jo
in
rcl
out
mov
xchg
(bad)
jmp
xchg
xchg
sbb
cs
or
cmp
pop
jecxz
scas
push
or
daa
retf
(bad)
inc
je
add
mov
dec
movs
ja
or
lods
outs
cmc
retf
mov
or
sbb
lock
cmps
(bad)
(bad)
(bad)
call
push
mov
jae
lea
daa
mov
aam
scas
loopne
das
imul
lahf
(bad)
sbb
sbb
jmp
mov
adc
pop
lea
aam
and
and
(bad)
(bad)
(bad)
inc
retf
fist
lea
push
repz
adc
gs
js
mov
icebp
in
(bad)
fbld
test
call
pop
(bad)
(bad)
(bad)
call
mov
(bad)
cmps
loop
in
mov
fnstcw
outs
out
(bad)
ja
les
adc
gs
sbb
sar
dec
cmp
retf
push
xchg
fwait
mov
(bad)
(bad)
(bad)
jmp
fsub
mov
dec
test
adc
pop
and
(bad)
jno
(bad)
(bad)
(bad)
inc
add
inc
cdq
xchg
jne
xor
add
gs
mov
(bad)
(bad)
je
(bad)
(bad)
call
jne
loope
nop
je
es
stos
jecxz
outs
js
sbb
rcl
jmp
mov
push
ds
idiv
pop
test
int3
mov
(bad)
(bad)
inc
dec
cmp
call
cmp
pop
mov
loopne
sub
(bad)
jnp
(bad)
(bad)
call
and
mov
ja
scas
enter
out
aam
push
adc
dec
inc
pop
dec
shr
mov
repz
push
cmp
ss
sbb
mov
jle
pop
cmps
retf
call
loop
dec
fwait
clc
mov
mov
(bad)
(bad)
call
sbb
jl
ret
out
cs
push
xor
and
fistp
jp
cmp
mov
(bad)
(bad)
inc
push
mov
aad
push
popf
mov
popf
xchg
jmp
je
outs
div
and
cli
jg
pusha
mov
iret
add
add
loop
pop
pop
adc
sahf
xchg
(bad)
(bad)
(bad)
call
imul
scas
inc
jbe
sub
lods
mov
push
pop
sbb
push
xor
lods
pop
ins
(bad)
(bad)
(bad)
call
(bad)
push
mov
fld
pop
pop
sahf
jmp
cmps
sub
mov
out
sub
and
sbb
(bad)
jo
xor
xor
out
clc
mov
(bad)
(bad)
in
(bad)
(bad)
call
cmp
fwait
retf
or
stos
xor
mov
adc
out
test
shr
(bad)
inc
inc
mov
cmp
pop
or
scas
jns
dec
das
out
loop
je
test
xor
lahf
fdivr
(bad)
(bad)
call
mov
xchg
in
(bad)
sub
repnz
cmps
test
out
pop
retf
repz
rcl
(bad)
(bad)
(bad)
(bad)
cmp
sbb
mov
sbb
push
pushf
mov
jo
icebp
add
lods
xchg
je
mov
das
sar
call
mov
neg
or
vpsubsb
in
dec
jmp
mov
aam
dec
prefetch
or
mov
(bad)
(bad)
(bad)
jmp
pop
xor
stos
cdq
jns
cli
imul
inc
(bad)
(bad)
dec
or
mov
adc
loopne
jg
mov
cli
(bad)
call
cld
mov
sub
cmps
.byte
inc
inc
