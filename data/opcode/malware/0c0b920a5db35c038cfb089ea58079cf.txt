test
pusha
je
dec
adc
or
dec
sbb
dec
dec
fidiv
dec
data16
sbb
inc
mov
je
pcmpgtd
cmp
je
dec
add
jecxz
data16
les
push
out
ds
aas
push
cmp
inc
push
mov
jmp
mov
push
dec
add
dec
pop
push
mov
cwde
cdq
and
lea
(bad)
dec
test
sub
sbb
and
daa
hlt
xchg
add
cmps
pop
push
(bad)
dec
cmp
cwde
adc
cwde
fwait
mov
cwde
into
sbb
and
or
dec
jmp
dec
push
test
dec
xchg
xor
dec
data16
inc
jecxz
(bad)
dec
data16
xor
mov
(bad)
ss
mov
call
int3
cwde
mov
retf
into
je
dec
jmp
mov
sbb
ret
or
les
cwde
dec
dec
in
je
jg
ss
cwde
dec
dec
lds
or
lds
data16
dec
data16
sti
jae
ss
inc
jbe
xchg
pop
dec
jbe
data16
sti
jnp
ss
push
cmp
cmp
jmp
sub
inc
cmps
add
aaa
push
(bad)
mov
mov
mov
(bad)
stc
lods
pop
xor
mov
jl
inc
adc
ret
aaa
retf
sti
into
les
push
ror
push
movs
pop
and
jbe
cmp
loope
mov
test
dec
jbe
test
je
dec
or
cs
je
int3
mov
push
lods
dec
mov
je
dec
data16
inc
mov
dec
test
mov
dec
fidiv
dec
data16
loope
sahf
mov
pop
(bad)
ss
cmps
jl
(bad)
dec
in
into
mov
fs
pushfw
xor
je
mov
(bad)
dec
data16
adc
das
dec
mov
dec
les
addr16
dec
lea
and
fidiv
dec
data16
adc
(bad)
je
dec
and
or
scas
push
(bad)
ss
daa
cld
xchg
adc
data16
dec
in
(bad)
sbb
and
mov
jae
adc
inc
je
xchg
dec
push
inc
mov
(bad)
and
and
scas
imul
(bad)
daa
inc
les
mov
addr16
ss
mov
push
jbe
mov
outs
(bad)
ss
pusha
jbe
pushfw
xchg
data16
mov
shufps
xchg
cmps
jl
(bad)
dec
scas
mov
in
data16
dec
movs
je
mov
xor
je
sbb
and
outs
add
(bad)
mov
push
lds
data16
iret
push
push
push
pcmpgtd
mov
(bad)
cmp
bound
movs
or
ds
aad
cmp
mov
xor
and
inc
sub
ret
jne
cdq
and
cmps
movs
add
dec
xor
je
mov
les
mov
inc
ds
cwde
mov
dec
in
retf
mov
dec
adc
(bad)
es
(bad)
dec
inc
(bad)
dec
xchg
xchg
dec
retf
cmp
ja
jae
aad
cmp
cmp
jl
mov
sbb
pop
(bad)
fist
add
and
and
imul
cdq
add
mov
jl
aam
je
(bad)
mov
je
inc
nop
add
jle
lahf
xchg
jb
mov
or
cmp
jbe
mov
mov
mov
mov
mov
cmp
je
inc
nop
add
jle
lahf
(bad)
sbb
dec
data16
inc
out
mov
test
xor
(bad)
mov
sub
mov
std
and
xor
jns
adc
aad
mov
scas
push
data16
and
cdq
add
cmps
pop
or
iret
mov
lea
cmp
mov
cdq
add
and
cdq
add
cmps
inc
or
cmp
call
mov
lea
(bad)
es
rol
inc
ds
mov
and
in
(bad)
sbb
and
push
push
ja
cmp
xchg
push
lods
dec
mov
je
sub
je
es
cmp
lods
out
xchg
out
mov
dec
adc
test
mov
dec
sahf
call
dec
imul
mov
cdq
xor
(bad)
xchg
test
dec
add
jbe
mov
les
dec
xchg
add
les
mov
lods
out
xor
(bad)
movs
xor
in
cmp
out
(bad)
dec
adc
cmp
sahf
inc
xchg
je
mov
xor
cmp
data16
adc
xchg
jle
data16
cmps
push
add
dec
xor
js
adc
inc
mov
mov
and
repz
mov
std
add
movs
std
push
mov
mov
mov
add
inc
xchg
je
mov
mov
inc
mov
mov
movs
push
std
xor
call
(bad)
bnd
dec
cdq
mov
(bad)
mov
std
add
movs
std
push
mov
mov
(bad)
mov
jno
dec
cdq
mov
ret
(bad)
mov
sub
mov
fwait
inc
fdivr
int3
sub
ss
out
mov
mov
push
je
les
jl
pushf
sub
(bad)
push
out
mov
movs
cmps
mov
mov
movs
lahf
(bad)
movs
test
pop
stos
mov
mov
(bad)
adc
das
jl
ss
nop
sbb
sub
mov
mov
ins
mov
je
mov
sahf
std
xor
test
inc
fsub
dec
mov
mov
push
dec
mov
add
movs
adc
call
adc
test
xor
mov
mov
mov
dec
mov
sbb
mov
mov
mov
in
sub
mov
mov
das
lahf
sub
or
mov
cmp
ss
lahf
fcmovb
and
bound
dec
xchg
push
js
ja
push
cmp
push
jge
or
les
mov
push
mov
sbb
das
jl
xor
dec
cmp
cmovnp
and
mov
cdq
jno
sti
and
cmp
push
cwde
scas
and
nop
cmps
jecxz
cmp
sbb
sbb
sub
or
fwait
mov
pop
in
or
or
and
pop
cwde
mov
int3
mov
mov
mov
retf
push
std
adc
mov
mov
mov
cmp
scas
cmp
dec
mov
lods
dec
push
mov
dec
data16
nop
mov
jl
dec
or
cs
adc
sahf
jne
(bad)
mov
std
adc
das
fwait
mov
std
and
ss
nop
sbb
add
lock
fidivr
fadd
(bad)
and
pop
in
and
(bad)
cmp
pop
in
and
xchg
les
xchg
inc
in
xor
mov
jo
push
cdq
daa
into
test
xchg
dec
or
mov
les
xchg
inc
mov
dec
sub
mov
xchg
les
jl
(bad)
bound
(bad)
dec
mul
dec
in
ret
je
xchg
push
je
ret
xchg
daa
jbe
test
mov
dec
data16
add
dec
xchg
xchg
dec
or
jge
inc
cli
mov
or
and
and
and
dec
out
mov
(bad)
outs
scas
leave
shl
mov
jl
test
bound
out
xchg
mov
mov
les
rcr
je
dec
out
mov
mov
push
mov
xchg
imul
iret
(bad)
adc
(bad)
es
leave
sbb
sub
(bad)
dec
push
mov
adc
xchg
jle
data16
cmps
add
xor
jg
pusha
out
lods
(bad)
xchg
out
mov
jb
rol
jae
push
rol
je
or
inc
mov
mov
js
aaa
shl
mov
and
cdq
std
add
or
(bad)
call
dec
jg
and
(bad)
mov
mul
rol
ss
dec
push
mov
dec
data16
inc
scas
cdq
mov
pop
cdq
add
cmps
lods
push
(bad)
dec
or
scas
mov
jecxz
cmp
popf
mov
int3
mov
je
cmp
jecxz
lds
(bad)
dec
(bad)
and
dec
data16
push
dec
mov
mov
dec
data16
cmp
xor
pop
in
dec
cmp
jp
xor
lock
dec
data16
xor
jne
dec
in
ds
out
mov
mov
je
arpl
mov
inc
data16
dec
sbb
test
xor
jbe
or
data16
int3
inc
or
data16
xor
ss
mov
dec
lods
dec
mov
cs
adc
out
lods
out
xchg
out
mov
mov
xchg
les
xor
(bad)
and
ret
xchg
ret
inc
mov
bound
xchg
ror
outs
(bad)
mov
mov
push
dec
or
je
inc
cmps
add
dec
push
mov
or
ss
(bad)
mov
dec
(bad)
dec
data16
or
cmc
sub
ret
cmp
lds
(bad)
pop
in
dec
cmp
bnd
dec
out
xor
inc
cmps
add
mov
jb
mov
dec
inc
mov
mov
dec
and
cdq
std
add
or
(bad)
call
dec
jg
and
mov
mov
xchg
dec
xor
mov
cli
xlat
test
std
push
mov
cdq
mov
(bad)
movs
sub
mov
xchg
lock
out
mov
mov
mov
mov
dec
mov
in
cmp
xor
iret
pop
inc
ret
inc
dec
data16
cmp
xor
xchg
dec
mov
lea
dec
mov
sahf
fs
in
xor
lds
ja
jae
add
jae
add
int3
add
dec
or
xchg
daa
not
test
and
add
or
data16
dec
(bad)
(bad)
test
pushf
push
mov
adc
sub
mov
in
cmp
and
(bad)
in
add
test
xor
xchg
xchg
dec
or
mov
jle
lahf
fiadd
add
jbe
add
movs
je
add
div
or
jae
or
int3
add
ds
mov
hlt
cli
jg
jnp
jbe
mov
int3
add
(bad)
cmp
mov
push
inc
pop
pcmpgtd
cmp
mov
mov
mov
dec
or
lods
dec
or
lods
dec
push
je
dec
es
shl
je
adc
je
(bad)
and
dec
ss
mov
data16
or
pop
int3
scas
mov
cmp
stc
mov
outs
mov
dec
pushw
mov
adc
and
cmp
sahf
pushf
bound
data16
mov
cdq
add
cmps
pop
sbb
dec
cmp
popf
xchg
fadd
dec
pushfw
mov
sbb
iret
cdq
jbe
cmp
mov
lods
(bad)
xchg
out
mov
retf
cmp
and
cs
je
(bad)
jecxz
cmp
cdq
mov
pop
mov
cmp
(bad)
inc
data16
xchg
lods
dec
mov
cmp
je
cmps
rcr
(bad)
dec
out
icebp
or
dec
lods
dec
mov
mov
mov
pushf
(bad)
mov
mov
push
sti
rol
ss
dec
adc
(bad)
dec
jmp
es
mov
dec
ss
(bad)
mov
cmp
or
cmc
sub
ret
cmp
xchg
mov
xchg
cmp
cdq
pusha
sti
dec
data16
(bad)
and
cli
inc
data16
xchg
lods
dec
mov
icebp
push
mov
mov
dec
ss
(bad)
mov
or
or
jae
dec
data16
out
daa
je
cli
cmps
mov
mov
imul
out
mov
(bad)
fisttp
sbb
test
lahf
pop
cmp
fmul
pop
in
and
xchg
les
xchg
xor
xor
inc
cmps
jnp
repnz
je
sub
leave
js
cwde
mov
inc
loop
les
hlt
jnp
cdq
mov
dec
imul
lods
dec
push
sub
or
cdq
mov
pop
mov
mov
test
(bad)
fcmovnb
cmp
data16
lods
out
icebp
push
cwde
mov
imul
cmp
mov
dec
imul
leave
clc
jecxz
cmp
jecxz
cmp
(bad)
xor
(bad)
dec
in
retf
icebp
je
cwde
mov
dec
arpl
push
data16
jmp
sti
and
ss
dec
imul
dec
xchg
lods
dec
mov
(bad)
daa
ss
dec
mov
xor
pop
mov
dec
data16
and
and
dec
repnz
mov
mov
pushf
mov
cdq
mov
push
cmp
mov
mov
dec
data16
dec
push
mov
or
daa
je
add
js
mov
je
cmp
(bad)
daa
fist
mov
mov
mov
mov
jb
mov
dec
adc
retf
cmp
or
scas
loop
ss
daa
ss
dec
mov
mov
test
dec
data16
and
and
dec
repnz
mov
mov
pushf
sub
push
cmp
mov
mov
dec
data16
dec
push
xlat
es
daa
je
test
js
mov
je
cmp
(bad)
daa
fist
mov
mov
mov
mov
jb
mov
dec
adc
retf
cmp
or
scas
fild
aam
dec
mov
xor
pop
mov
dec
data16
mov
sar
cdq
jne
dec
data16
push
das
data16
lods
out
icebp
outs
mov
mov
or
scas
int3
xchg
(bad)
daa
ss
dec
mov
xor
pop
mov
dec
data16
mov
sar
cdq
jne
dec
pushw
(bad)
daa
push
xchg
test
and
push
pushfw
jmp
mov
cmp
or
scas
test
cmp
xchg
mov
int3
mov
je
cmp
(bad)
daa
push
xchg
test
leave
cmp
xchg
cmp
in
retf
mov
dec
adc
retf
cmp
in
jb
cwde
mov
cmp
ret
aas
shl
(bad)
dec
jmp
cmp
mov
lahf
xlat
mov
jb
data16
sbb
ss
in
add
test
mov
jg
je
retf
cmp
data16
xchg
xchg
xchg
dec
retf
cmp
mov
inc
cdq
mov
pop
in
dec
cmp
cmp
xor
jo
dec
jmp
jle
cwde
mov
mov
and
ja
and
(bad)
and
dec
mov
or
dec
imul
inc
jmp
push
dec
mov
movs
cmp
fimul
dec
jmp
lea
data16
retf
cmp
into
mov
mov
je
dec
jmp
push
mov
mov
mov
and
retf
cmp
xor
movs
mov
(bad)
dec
jmp
adc
not
pop
mov
mov
jb
je
dec
out
xor
inc
cmps
jnp
jb
je
ret
cmp
mov
cmp
icebp
movs
(bad)
dec
data16
xor
je
vphaddwq
je
retf
cmp
cdq
mov
pop
in
dec
cmp
pop
std
xor
retf
data16
inc
cmps
cdq
mov
pop
in
icebp
sbb
pop
mov
(bad)
mov
idiv
sahf
gs
into
xchg
xchg
dec
data16
inc
stos
cdq
mov
pop
in
icebp
cs
mov
imul
cmp
jnp
daa
gs
into
lea
retf
dec
mul
cdq
mov
dec
cdq
sar
cwde
mov
ret
cmp
or
mov
mov
mov
popf
aad
data16
dec
mov
adc
data16
lods
out
icebp
dec
mov
mov
cdq
shr
cwde
mov
fwait
mov
mov
sbb
scas
and
dec
retf
cmp
data16
mov
add
test
retf
cmp
cwde
mov
ret
mov
stc
jae
cdq
mov
int3
mov
fbstp
dec
xchg
shl
cmp
out
xchg
jg
data16
mov
cdq
mov
sbb
dec
cmp
dec
std
xor
mov
xor
jbe
dec
in
push
cwde
mov
ret
cmp
xchg
mov
sar
mov
and
ja
pusha
sti
dec
data16
(bad)
and
(bad)
dec
outs
mov
retf
(bad)
dec
jmp
outs
mov
mov
mov
and
ja
and
xchg
push
lods
dec
mov
or
dec
imul
inc
jmp
daa
dec
data16
dec
mov
lods
dec
sub
and
(bad)
dec
add
cmp
inc
cdq
mov
(bad)
jecxz
cmp
cdq
mov
pop
jmp
mov
cwde
mov
jbe
and
bound
xchg
ror
push
mov
mov
cwde
(bad)
mov
xor
mov
mov
cmp
xor
(bad)
mov
idiv
and
(bad)
int3
ret
cld
cmp
out
mov
mov
sbb
scas
and
dec
retf
cmp
jb
(bad)
dec
data16
or
push
jnp
cdq
mov
dec
imul
dec
retf
cmp
rol
inc
(bad)
cdq
mov
pop
in
dec
cmp
inc
std
xor
mov
xor
je
dec
add
jnp
cdq
mov
inc
imul
inc
repnz
mov
mov
jnp
mov
mov
adc
cmp
push
mov
mov
fnstenv
inc
out
mov
(bad)
fld
cmp
test
inc
pop
cdq
mov
(bad)
movs
hlt
jnp
cdq
mov
dec
imul
add
xchg
mov
mov
je
dec
or
cmp
(bad)
mov
mov
icebp
cmp
cmp
mov
mov
dec
in
rol
mov
stc
dec
mov
mov
int3
scas
mov
cmp
mov
mov
sub
mov
stc
inc
cs
mov
pop
in
icebp
ds
mov
arpl
cs
je
int3
mov
icebp
cmp
ds
test
icebp
cmp
inc
push
(bad)
dec
in
(bad)
(bad)
mov
idiv
cdq
mov
dec
adc
jnp
(bad)
mov
cdq
mov
(bad)
movs
inc
cdq
mov
pop
in
inc
cmp
outs
mov
cdq
mov
(bad)
mov
dec
inc
call
jns
mov
inc
cdq
mov
pop
in
inc
cmp
outs
inc
cdq
mov
pop
in
inc
cmp
outs
cmc
xor
mov
cwde
cmp
cdq
mov
jbe
cwde
cmp
call
mov
je
dec
mov
mov
(bad)
mov
and
jg
and
int3
(bad)
inc
in
icebp
push
mov
mov
inc
fdivrp
in
and
cdq
std
add
mov
je
inc
in
icebp
adc
push
mov
mov
mov
inc
in
icebp
sbb
push
mov
pop
data16
retf
cmp
xor
xchg
mov
adc
das
jl
cdq
sbb
sti
and
scas
aad
xor
sub
je
dec
data16
mov
dec
imul
pop
xor
pushf
add
add
push
(bad)
mov
mov
add
mov
mov
dec
data16
pop
fs
cmps
add
(bad)
dec
in
ret
dec
(bad)
dec
xchg
adc
(bad)
and
stos
mov
mov
idiv
iret
shl
(bad)
dec
adc
cmp
inc
mov
scas
addr16
dec
in
xor
mov
adc
mov
test
push
aaa
sbb
mov
lahf
ins
mov
mov
mov
mov
or
je
fisubr
retf
sub
or
dec
mov
mov
push
hlt
jb
pushw
(bad)
and
es
dec
or
lock
mov
je
adc
cwde
ficomp
call
xchg
dec
int3
ds
scas
out
xor
(bad)
cmps
mov
cmp
ss
mul
dec
div
dec
out
rcr
je
push
jmp
dec
mul
ja
xor
into
fbld
je
mov
pop
push
data16
dec
data16
push
dec
scas
std
pop
mov
pop
push
data16
dec
data16
ss
je
ud0
xchg
daa
je
(bad)
dec
data16
mov
je
inc
jmp
mov
retf
test
jns
shl
je
cmps
push
jbe
dec
cdq
jno
sti
and
test
xchg
(bad)
and
xchg
dec
les
hlt
retf
push
stc
xor
inc
pop
les
add
push
addr16
(bad)
dec
arpl
data16
shl
std
push
data16
std
pop
cmps
outs
jbe
dec
cdq
jno
shl
je
mov
je
mov
add
data16
stc
xor
test
inc
je
iret
imul
ud0
xchg
inc
cmp
stc
xor
test
data16
scas
out
xor
(bad)
cmps
hlt
retf
push
stc
xor
cmp
stc
xor
test
sbb
imul
jl
ud0
xchg
xchg
cmp
stc
xor
test
scas
std
pop
iret
imul
jne
dec
mov
xchg
je
dec
pop
cmp
stc
xor
test
inc
je
iret
imul
jbe
dec
and
xchg
je
dec
(bad)
cld
cmp
shl
(bad)
mov
dec
pop
push
data16
das
xchg
ds
iret
imul
xor
dec
addr16
out
mov
xchg
jno
shl
je
xchg
dec
mov
jns
shl
je
cmps
xor
cwde
pop
push
test
jno
shl
je
sahf
data16
out
and
xchg
jno
fbld
je
mov
(bad)
out
mov
xchg
jno
shl
je
(bad)
data16
mov
add
test
xor
(bad)
dec
data16
push
jle
std
pop
int3
arpl
data16
ret
(bad)
jle
popf
sbb
je
inc
jle
xchg
cmc
aaa
mov
xchg
xor
and
or
ss
dec
outs
mov
sbb
mov
xor
loop
test
dec
pop
hlt
(bad)
dec
data16
dec
sbb
imul
jo
data16
retf
push
stc
xor
cmp
rol
xor
pop
push
data16
jecxz
arpl
data16
pop
jno
je
iret
imul
xor
pop
push
mov
adc
mov
and
and
sti
and
xor
jmp
dec
es
mov
mov
xor
add
or
scas
std
pop
inc
shl
out
and
jecxz
data16
(bad)
and
addr16
out
xor
inc
shl
xor
je
dec
imul
inc
xor
jno
fbld
je
xchg
std
pop
inc
shl
xor
je
dec
adc
or
xor
push
pcmpgtd
sti
or
xor
inc
xor
or
dec
adc
inc
dec
outs
in
dec
fs
sti
iret
sbb
retf
push
stc
xor
out
xchg
mov
mov
sub
dec
imul
(bad)
int3
xchg
or
add
iret
sbb
ret
inc
div
dec
in
retf
je
movs
jle
ss
popa
retf
je
dec
out
jo
ja
xor
push
pcmpgtd
into
fbld
je
dec
push
xchg
scas
inc
mov
in
retf
je
movs
jle
ss
popa
retf
je
dec
out
jo
out
ss
mov
js
pcmpgtd
(bad)
shl
je
dec
push
xchg
scas
cmp
rol
jo
pcmpgtd
jge
je
mov
out
mov
adc
mov
mov
iret
in
ins
cmc
xor
(bad)
mov
add
data16
cmc
and
cs
cmp
mov
je
cmps
movs
sub
dec
lds
or
ds
out
mov
fdiv
mov
cdq
dec
data16
(bad)
shl
je
jb
ss
sbb
xlat
xor
daa
je
add
ss
sbb
xlat
not
daa
je
adc
ss
sbb
xlat
sahf
out
and
dec
mov
mov
cmp
jl
mov
jl
jo
mov
(bad)
dec
cdq
jno
sti
and
scas
retf
fdiv
mov
fcom
or
jle
(bad)
dec
out
lods
out
xchg
out
mov
sub
std
cmp
je
int3
add
dec
mul
cmp
ss
int3
add
dec
mul
xchg
addr16
dec
mov
je
ret
jl
data16
sub
je
or
jbe
dec
data16
push
jle
std
add
dec
data16
sub
je
xor
stc
mov
fbstp
dec
xchg
and
dec
jmp
and
cdq
popa
xor
daa
je
xchg
push
lods
dec
mov
xor
or
dec
or
and
dec
or
lods
dec
or
cmp
sbb
(bad)
and
cmp
stc
cmp
push
(bad)
cmps
xchg
adc
mov
and
lods
dec
cdq
add
pushw
(bad)
and
adc
(bad)
into
lea
dec
mov
dec
mov
cmp
ss
pushf
xchg
mov
les
and
xchg
jmp
and
je
lods
out
xor
movs
sub
mov
cmp
and
les
mov
dec
mov
sbb
xor
les
fs
add
inc
adc
xor
ret
push
mov
and
dec
jmp
xor
or
cmp
outs
mov
jg
xor
sub
(bad)
movs
pop
add
xor
and
fldcw
jo
std
ds
std
add
mov
pop
jbe
xchg
sub
mov
in
add
les
js
dec
adc
test
mov
stc
bound
mov
je
cmp
jo
push
jne
mov
je
cmp
jo
push
jbe
mov
je
cmp
jo
push
ja
mov
je
cmp
jo
push
jo
mov
je
inc
loop
les
inc
dec
in
pusha
clc
(bad)
jb
add
cdq
je
stc
and
movs
repz
leave
stc
jb
dec
data16
mov
jnp
pop
jo
add
jecxz
(bad)
dec
data16
cmp
mov
stc
jb
dec
in
lds
pusha
shl
add
dec
imul
(bad)
dec
add
and
jnp
dec
arpl
cs
cmp
shl
cmp
pusha
dec
pop
jae
jp
es
cmps
fsubr
(bad)
dec
out
xor
int3
scas
mov
jbe
xchg
pop
arpl
int3
mov
lahf
xor
int3
mov
or
xor
dec
mov
(bad)
call
dec
data16
movs
inc
jnp
or
dec
ret
popf
fidiv
(bad)
dec
adc
or
mov
mov
add
data16
cli
jno
add
jae
jo
add
mov
fs
cli
dec
bound
xchg
sahf
imul
dec
out
ror
dec
mov
pushf
ret
jo
jae
add
jb
je
dec
adc
mov
pushf
ret
iret
pop
jb
cmp
push
dec
and
pop
jno
movs
(bad)
test
dec
data16
iret
pop
dec
les
add
ds
out
ror
dec
mov
pushf
(bad)
iret
pop
jb
cmp
std
ds
mov
jae
jbe
or
mov
bound
dec
pusha
dec
cs
data16
dec
pop
popf
(bad)
dec
add
int3
scas
mov
jbe
xchg
pop
arpl
int3
mov
lahf
lods
inc
cmps
(bad)
std
xor
ja
dec
sahf
imul
dec
in
and
(bad)
jb
(bad)
dec
data16
jae
jne
sbb
pop
jb
cmp
std
ds
mov
jae
jne
jno
mov
gs
cli
dec
addr16
(bad)
sahf
imul
dec
imul
mov
pop
mov
dec
data16
jb
je
dec
adc
cmp
fs
sbb
(bad)
mov
sahf
ret
popa
(bad)
dec
data16
into
cdq
je
dec
data16
clc
fwait
mov
adc
das
jl
mov
sbb
mov
cmp
ss
jl
push
push
mov
dec
adc
into
cdq
pushf
lds
add
into
cdq
pushf
lds
pop
aam
in
xor
bound
mov
xchg
(bad)
popf
(bad)
dec
test
jno
sti
and
leave
stc
xor
fs
cli
pop
inc
in
dec
push
scas
dec
mov
lods
xchg
cmps
repz
aas
mov
cmp
mov
fnstenv
je
dec
adc
cmps
data16
cmp
mov
(bad)
mov
pusha
rol
jb
or
je
or
inc
push
out
jo
ret
mov
out
xchg
xchg
dec
movs
dec
mov
scas
(bad)
lahf
out
xor
ret
mov
gs
mov
push
dec
int3
scas
mov
scas
out
lahf
out
mov
xchg
movs
inc
cmps
(bad)
std
xor
xor
dec
in
and
(bad)
jbe
ret
cmp
ss
int3
scas
mov
mov
and
dec
movs
inc
cmps
(bad)
std
xor
dec
(bad)
dec
data16
sbb
xchg
pop
cmps
xchg
les
and
cmp
js
adc
xchg
jle
inc
je
cmps
dec
sub
xchg
cmps
pusha
mov
mov
icebp
and
cmps
jl
(bad)
dec
pop
je
dec
out
ror
jne
retf
cmp
shl
(bad)
dec
out
and
cmp
jo
xchg
fwait
cmp
fidiv
(bad)
dec
adc
repnz
aad
shl
xor
jae
adc
or
lea
leave
stc
xrelease
mov
std
push
out
mov
and
jnp
inc
imul
and
mov
fcomp
mov
std
ret
in
xchg
ret
mov
dec
inc
imul
lods
fs
push
jmp
mov
mov
popa
xchg
(bad)
daa
je
or
je
(bad)
repz
mov
std
ret
in
dec
out
xor
inc
shl
xor
(bad)
js
cli
dec
mov
jnp
add
xchg
mov
je
stc
xrelease
mov
mov
dec
in
shr
xor
dec
imul
leave
stc
xrelease
mov
mov
dec
in
pusha
rcr
push
sbb
shl
(bad)
iret
fist
leave
retf
icebp
jne
dec
mov
aas
mov
std
inc
xchg
mov
add
call
mov
mov
pop
cmps
xchg
rol
mov
je
retf
cmp
push
je
dec
data16
cs
aas
je
(bad)
mov
xchg
(bad)
(bad)
ror
mov
movs
je
dec
dec
pop
mov
mov
inc
retf
mov
mov
dec
mov
cmp
ss
int3
ret
cwde
sub
data16
daa
cdq
mov
dec
cdq
shr
cdq
mov
cli
mov
push
cmp
cdq
test
inc
cmps
add
cdq
je
shl
stos
cmp
out
scas
pop
movs
fs
dec
and
les
inc
test
sahf
fwait
cmp
cdq
je
dec
pushw
sbb
cdq
mov
dec
pushw
leave
(bad)
mov
je
retf
cmp
data16
dec
out
(bad)
mov
cdq
add
cmps
jle
cmp
mov
mov
clc
sbb
data16
retf
cmp
cdq
mov
dec
adc
test
rcr
cdq
mov
aam
je
cmps
es
dec
imul
cmp
jae
push
pcmpgtd
push
mov
ret
sub
cdq
je
ficom
xchg
(bad)
(bad)
mov
xchg
les
dec
inc
ja
dec
pop
mov
xor
fs
pop
mov
ja
mov
mov
inc
mov
fild
ret
push
jno
arpl
jb
data16
jnp
mov
das
scas
adc
ss
cmps
ins
and
dec
out
icebp
xchg
cdq
mov
gs
ret
jae
je
(bad)
repz
add
gs
retf
cmp
cdq
mov
(bad)
stos
cmp
fs
inc
fstp
aam
mov
call
mov
std
inc
fistp
fcomp
mov
inc
mov
test
mov
push
fcmovb
jecxz
sbb
mov
mov
dec
inc
mov
enter
add
mov
std
inc
sti
mov
test
mov
hlt
jnp
mov
mov
dec
data16
and
mov
js
(bad)
repz
sbb
xor
retf
dec
addr16
fcmove
stos
cmp
adc
test
ret
mov
dec
ret
cmp
cdq
mov
jae
push
pcmpgtd
ficom
xchg
(bad)
les
out
es
ficom
je
dec
data16
je
(bad)
jecxz
sbb
jecxz
(bad)
dec
data16
mov
jne
je
(bad)
mov
jnp
dec
pop
popf
(bad)
dec
data16
iret
sbb
loop
(bad)
dec
popfw
fisttp
je
retf
cmp
data16
int3
mov
dec
retf
cmp
cdq
mov
int3
retf
nop
sbb
sub
iret
pop
je
addr16
test
fs
dec
push
mov
pop
je
pop
out
test
(bad)
hlt
dec
jle
mov
pop
je
inc
sub
jb
data16
fcmovb
stos
cmp
shl
xchg
cdq
mov
lds
jo
pop
popf
(bad)
dec
add
les
(bad)
dec
data16
cmps
cdq
stc
cmp
inc
stos
mov
std
xor
mov
dec
sahf
pop
lds
(bad)
or
and
out
gs
cdq
mov
inc
shl
gs
cdq
mov
lods
fs
jp
ret
mov
jae
iret
pop
dec
(bad)
dec
data16
cmp
cli
jb
je
dec
add
iret
pop
dec
lds
je
cmp
cli
jb
je
dec
add
iret
pop
dec
ret
dec
data16
cmp
sub
in
mov
or
sbb
jp
jo
xchg
fwait
cmp
mov
mov
mov
cdq
mov
push
jnp
mov
ss
jmp
push
mov
test
xchg
cmps
popf
les
call
mov
jo
mov
sub
cdq
cmc
jnp
mov
(bad)
cmp
shl
(bad)
cmps
dec
mov
mov
icebp
xor
inc
shl
xor
(bad)
js
cli
dec
mov
jnp
pusha
popf
mov
adc
das
jl
mov
xor
fwait
inc
mov
movs
loope
adc
or
stc
repz
ss
div
(bad)
dec
xchg
rol
sahf
ins
in
dec
data16
mov
repnz
jg
data16
mov
jmp
push
repnz
jg
data16
mov
adc
into
and
or
je
pop
in
ja
stc
xor
mov
out
cmp
jle
or
gs
ficomp
and
and
in
data16
lds
jo
nop
dec
sbb
inc
shl
iret
and
(bad)
jb
je
dec
sbb
dec
or
std
xchg
mov
ret
inc
mov
dec
idiv
movlps
or
jne
(bad)
in
ror
jo
inc
in
ret
cmp
bndstx
or
jne
or
mov
inc
in
ror
jno
dec
out
cmp
test
mov
dec
dec
inc
dec
data16
dec
out
cmp
xor
(bad)
movs
pop
add
xor
dec
data16
inc
nop
aaa
(bad)
ja
jo
or
jne
xor
mov
mov
xor
dec
lea
dec
imul
rol
cdq
jne
inc
out
xor
or
dec
adc
dec
or
std
xchg
mov
ret
in
(bad)
dec
adc
or
mov
sbb
xchg
xchg
pop
xor
jl
xchg
cmp
in
div
adc
dec
xchg
xchg
dec
or
je
dec
xor
(bad)
cmps
add
(bad)
dec
out
test
cdq
xor
jae
je
mov
mov
inc
out
clc
adc
jae
or
(bad)
movs
pusha
cmp
or
(bad)
mov
mov
cmp
popf
xchg
jo
dec
pushfw
mov
sbb
adc
repz
xor
sub
dec
xchg
xchg
dec
retf
cmp
push
cmp
outs
stc
inc
dec
xchg
nop
dec
data16
inc
dec
xchg
(bad)
dec
test
or
mov
cmp
jl
fld
xor
gs
and
adc
mov
fwait
mov
std
and
mov
xor
arpl
add
add
scas
iret
data16
and
gs
dec
data16
cmp
outs
pushf
mov
data16
mov
mov
cmp
mov
les
js
outs
inc
push
movs
pop
std
ds
out
mov
dec
xor
mov
mov
pop
or
cs
xor
mov
mov
push
je
mov
out
mov
dec
in
retf
jl
or
cmp
std
cmp
add
sbb
and
js
je
les
mov
es
adc
xchg
inc
mov
fprem1
scas
aad
std
ds
std
add
data16
dec
or
lods
dec
push
je
dec
cmps
mov
dec
data16
add
cwde
mov
sub
or
dec
and
and
dec
or
nop
cmps
mov
xor
(bad)
cmps
test
dec
add
(bad)
movs
push
mov
mov
mov
dec
pushw
mov
mov
scas
and
nop
cmps
cwde
and
pop
pop
data16
mov
xchg
dec
or
mov
dec
data16
adc
das
jl
and
jb
mov
mov
mov
dec
push
hlt
(bad)
dec
pushw
ret
push
(bad)
daa
data16
(bad)
cdq
add
cmps
inc
and
inc
mov
add
jle
lahf
inc
sahf
and
and
dec
or
nop
cmps
dec
and
dec
or
mov
push
data16
cmps
inc
and
dec
push
mov
movs
pusha
std
ds
std
add
cmp
xchg
sbb
and
outs
mov
mov
pop
retf
gs
cmp
addr16
jle
std
sbb
jne
or
retf
inc
(bad)
out
and
sbb
add
daa
daa
xchg
test
rcl
and
cs
je
int3
mov
addr16
stc
bound
daa
push
xchg
test
loope
dec
test
dec
fwait
inc
sbb
jae
je
dec
mov
dec
mov
or
std
xchg
mov
sbb
scas
and
cs
je
int3
mov
mov
xchg
sbb
and
outs
push
movs
and
out
into
and
scas
je
ss
cmps
push
daa
(bad)
dec
aas
inc
cmp
and
jp
ss
cmps
inc
daa
(bad)
dec
in
into
or
mov
push
push
es
data16
les
mov
dec
mov
sbb
mov
mov
xchg
hlt
jmp
lods
out
xchg
out
mov
mov
xchg
(bad)
dec
in
sub
adc
dec
in
and
or
push
out
jnp
data16
dec
data16
jmp
inc
xor
mov
add
dec
or
jno
fs
xor
je
mov
out
mov
stc
and
aaa
int3
cmps
push
or
add
int3
or
in
dec
data16
stos
mov
hlt
mov
les
js
clc
es
or
mov
jo
cwde
jnp
or
inc
(bad)
js
and
jo
and
jne
xor
lods
(bad)
xchg
out
mov
or
jno
in
and
inc
shl
lahf
lfs
clc
xor
sub
pop
and
xchg
dec
or
xor
inc
shl
les
jl
clc
xor
out
lahf
imul
add
and
(bad)
dec
in
xor
inc
shl
les
jl
clc
xor
out
lahf
xor
les
nop
cdq
adc
in
fcomip
int3
(bad)
pop
es
hlt
xor
xchg
int
cmp
in
fcomip
add
fcomip
in
jle
in
fcomip
xor
fcomip
in
psadbw
push
fcomip
xor
fcomip
in
psadbw
push
fcomip
dec
push
fcomip
in
cmp
(bad)
jmp
push
hlt
mov
test
int
pop
rol
retf
push
fcomip
add
fcomip
in
jle
in
fcomip
test
jbe
in
fcomip
add
fcomip
in
cs
push
fcomip
adc
(bad)
ja
cmp
in
cmps
data16
dec
ds
fcomip
in
mov
xor
fisttp
cli
pcmpgtd
dec
push
mul
push
fucomip
cmp
fcomip
in
pop
outs
in
fist
push
fcomip
in
mov
push
fistp
push
fcomip
in
mov
in
retf
in
ja
in
fist
mov
cmps
fcomip
in
fild
popf
jne
fwait
mov
pop
es
shl
into
cmp
je
scas
and
sub
rol
das
mul
push
fcomip
int3
(bad)
pop
es
and
imul
push
fcomip
in
int3
sahf
je
fcomip
add
xor
xchg
std
pop
fcomip
in
cmps
in
fcomip
inc
adc
mul
push
pop
mul
push
fcomip
std
push
fcomip
in
mov
mul
push
fcomip
in
pop
mul
push
fcomip
retf
call
fcomip
jne
fcomip
in
lods
xchg
in
fcomip
int3
(bad)
jmp
push
int3
sahf
je
fcomip
add
mov
test
std
pop
fcomip
in
cmps
in
fcomip
inc
adc
mul
push
pop
mul
push
fcomip
std
push
fcomip
in
mov
mul
push
fcomip
in
pop
mul
push
fcomip
retf
rol
jle
in
fcomip
jne
fcomip
in
lods
xchg
in
fcomip
adc
push
sub
mov
sbb
xchg
inc
mov
in
sub
les
js
(bad)
and
or
inc
(bad)
and
stos
out
xor
jle
std
sub
xchg
dec
or
mov
mov
data16
neg
and
dec
xchg
adc
(bad)
and
push
dec
xchg
and
es
mov
push
out
mov
sbb
add
mov
mov
movs
dec
pushf
inc
add
dec
or
je
dec
data16
inc
shl
cmp
(bad)
xchg
lea
in
xor
(bad)
xchg
lea
out
and
adc
cli
xor
fs
xchg
test
fs
stc
sub
leave
stc
bound
lods
data16
cmp
push
dec
xchg
xor
stc
jbe
jo
pushf
pop
or
jbe
xor
and
and
data16
or
mov
cmp
mov
imul
xchg
cmps
movs
cmp
dec
or
dec
or
xchg
cmps
aam
(bad)
dec
in
loop
cmp
dec
xchg
adc
(bad)
and
add
mov
inc
cs
add
jp
mov
sub
mov
xchg
icebp
fst
mov
out
test
mov
sub
imul
std
pop
mov
pushf
jns
mov
pop
or
mov
dec
(bad)
out
and
int3
pop
mov
or
push
mov
jns
je
ret
xchg
mov
jl
(bad)
sahf
mov
int3
mov
mov
retf
jnp
(bad)
dec
imul
(bad)
les
push
and
in
pop
pop
fdivr
data16
adc
out
or
sbb
mov
mov
dec
outs
repnz
dec
nop
gs
add
and
xchg
cmps
xchg
cmp
dec
or
lods
dec
out
lods
lds
leave
test
xor
pop
mov
add
mov
xor
aas
(bad)
dec
out
lods
lds
call
jle
test
dec
stos
leave
test
xor
cmp
and
dec
or
ja
mov
popa
sbb
and
neg
xor
dec
(bad)
mov
ret
xchg
(bad)
(bad)
jbe
mov
data16
adc
(bad)
mov
(bad)
movs
jnp
popf
cmps
xchg
(bad)
inc
mov
sti
lahf
(bad)
(bad)
cmps
loopne
(bad)
dec
out
xor
cmps
sbb
(bad)
dec
in
or
inc
ror
adc
test
out
dec
sbb
and
inc
mov
or
scas
neg
ss
ja
(bad)
(bad)
(bad)
pop
mov
dec
test
mov
cmp
dec
(bad)
dec
out
lods
lds
xchg
call
lahf
(bad)
(bad)
jle
test
dec
stos
leave
test
xor
cmp
and
dec
or
jne
(bad)
mov
test
mov
fs
or
ss
dec
arpl
mov
gs
add
and
leave
stc
xor
push
scas
(bad)
mov
movs
jnp
data16
retf
stos
lds
leave
test
ret
mov
dec
pop
pause
jnp
dec
xchg
(bad)
mov
dec
inc
xor
sbb
push
out
test
test
mov
and
xchg
gs
repnz
xchg
cmps
jmp
mov
and
fs
(bad)
and
data16
cmp
cli
push
data16
or
pushf
xchg
mov
xchg
xchg
mov
nop
cs
das
je
(bad)
xchg
and
and
cmps
sub
(bad)
dec
xor
je
(bad)
sub
mov
(bad)
sbb
and
push
std
add
jecxz
cmp
arpl
jb
data16
dec
data16
(bad)
int
(bad)
dec
xchg
xchg
dec
retf
cmp
sub
cmp
mov
fldenv
std
push
push
out
mov
mov
std
cmp
repz
mov
cmc
xor
(bad)
mov
mov
movs
dec
pushf
add
je
stc
sbb
(bad)
push
out
mov
movs
cmps
mov
mov
movs
lahf
(bad)
movs
test
cwde
mov
iret
and
cli
inc
adc
cmp
data16
lea
mov
dec
cdq
mov
jl
icebp
shl
mov
mov
and
ffreep
ss
daa
xchg
stos
test
icebp
cmp
cmps
or
(bad)
dec
out
test
mov
or
lods
dec
or
lods
dec
push
je
dec
es
inc
mov
mov
pop
mov
dec
data16
inc
mov
xchg
pop
ss
mov
cld
or
data16
jl
je
and
fwait
mov
pop
push
jne
dec
data16
repnz
cmp
xchg
mov
mov
sub
mov
nop
xor
dec
cdq
jno
sti
and
xchg
daa
mov
icebp
cmp
xchg
ds
dec
out
add
dec
retf
cmp
and
dec
retf
cmp
data16
cs
je
mov
add
data16
nop
and
scas
cmp
cmp
data16
cmps
jnp
(bad)
dec
xor
je
xor
je
iret
mov
test
sub
stos
aaa
and
sbb
push
jmp
sahf
std
add
data16
add
je
int3
add
xchg
ret
xchg
and
imul
cdq
add
mov
jl
sub
je
(bad)
xchg
test
dec
add
(bad)
and
mov
jne
dec
cdq
add
mov
mov
and
je
mov
mov
or
je
adc
das
jl
fld
int
std
ds
sahf
std
add
and
addr16
cmp
mov
cdq
add
mov
jl
jle
je
int3
mov
and
xor
sub
mov
mov
lods
dec
jmp
rcr
cdq
add
mov
js
cmp
ror
inc
mov
fwait
mov
std
and
and
dec
stc
xchg
into
mov
stc
xor
push
(bad)
daa
pusha
je
dec
or
lods
dec
or
cmp
push
mov
mov
mov
jge
cmp
push
movs
push
mov
mov
push
(bad)
mov
mov
clc
cs
inc
cmps
add
mov
mov
enter
jle
lahf
xlat
into
mov
mov
mov
dec
inc
push
(bad)
mov
inc
mov
adc
or
dec
or
xor
sbb
inc
mov
(bad)
dec
fidiv
dec
and
and
ret
xchg
daa
jg
les
je
cmp
mov
mov
dec
data16
cmp
push
movs
pop
stc
adc
lods
dec
or
cmp
jbe
mov
mov
dec
data16
cmp
mov
mov
dec
inc
push
movs
jle
jmp
data16
test
xor
(bad)
mov
cdq
or
sub
stos
aaa
and
sbb
ror
ret
ds
std
add
pop
mov
or
mov
or
cs
je
(bad)
and
jbe
mov
mov
mov
(bad)
es
(bad)
and
data16
dec
or
lods
dec
push
adc
or
gs
mov
ret
lahf
rol
sahf
jne
(bad)
mov
ss
cmps
call
xor
adc
mov
or
xchg
mov
or
dec
pop
pop
stos
test
and
mov
std
and
ss
nop
sbb
add
les
js
or
inc
(bad)
out
and
(bad)
mov
dec
retf
cmp
ds
mov
adc
and
mov
lods
dec
sbb
ret
cmc
xor
mov
fs
mov
out
clc
dec
adc
inc
jae
je
ins
out
mov
cmp
sbb
(bad)
imul
adc
(bad)
and
jge
lods
xchg
cmps
mov
(bad)
dec
out
mov
and
jge
cmp
ss
mov
pushf
add
call
mov
lods
(bad)
mov
jg
(bad)
lea
or
sub
mov
xchg
les
jl
xchg
or
(bad)
xchg
inc
ss
mov
je
(bad)
and
mov
lods
jle
std
cmp
je
mov
bound
mov
ins
jnp
dec
push
div
ds
jo
or
ds
cwde
je
movs
cs
xor
std
idiv
dec
inc
add
xor
idiv
dec
fdivr
sub
mov
sbb
adc
xchg
daa
cmp
test
pushf
jp
data16
mov
cmp
cwde
jnp
or
fisttp
xchg
sub
mov
cs
je
sbb
and
pop
shl
nop
shl
mul
cdq
mov
dec
in
sub
xchg
pop
ss
mov
mov
pop
cdq
add
cmps
out
cmp
movs
jge
cmp
push
cmps
pop
jg
dec
in
ds
mov
cmp
cs
je
jle
popf
loope
data16
cmp
dec
or
je
retf
cmp
and
mov
(bad)
jecxz
cmp
cdq
mov
and
lods
cmp
mov
cmp
bound
or
fsub
mov
mov
mov
int3
movs
add
xor
fwait
mov
cdq
add
daa
bound
dec
mov
ss
xchg
std
add
and
stos
mov
mov
mov
xchg
je
mov
mov
inc
in
loope
mov
mov
mov
pushf
mov
mov
xchg
nop
and
cmp
outs
pushf
add
data16
mov
mov
call
dec
test
sbb
dec
data16
mov
sbb
mov
ror
dec
or
inc
mov
mov
data16
inc
data16
(bad)
xchg
lea
arpl
in
push
xor
dec
fist
(bad)
dec
in
xor
cdq
mov
sbb
dec
sbb
and
mov
je
mov
cdq
mov
(bad)
mov
je
inc
data16
(bad)
xchg
lea
arpl
aad
xchg
xchg
test
sar
cwde
mov
ins
and
mov
ss
mov
mov
mov
pushf
(bad)
or
inc
mov
or
data16
inc
data16
(bad)
xchg
lea
arpl
aad
xchg
xchg
test
sar
cwde
mov
movs
and
mov
xchg
dec
retf
cmp
and
ins
je
dec
inc
mov
dec
data16
dec
data16
mov
call
nop
and
xchg
cmps
loopne
(bad)
dec
in
(bad)
mov
push
scas
pop
mov
mov
mov
and
outs
mov
sbb
add
cmp
int3
dec
data16
mov
sbb
mov
ror
scas
or
inc
mov
int3
nop
and
cmp
call
dec
test
test
mov
and
ins
je
dec
inc
mov
or
cdq
mov
cmps
dec
xor
dec
in
into
daa
gs
test
sar
cwde
mov
pop
and
mov
je
imul
dec
inc
mov
dec
data16
dec
data16
mov
call
nop
and
xchg
cmps
fdiv
(bad)
dec
in
(bad)
into
nop
imul
or
je
cmps
gs
(bad)
xchg
lea
jmp
sbb
lock
(bad)
dec
jmp
sbb
adc
call
xchg
and
xchg
cmps
sbb
(bad)
dec
in
out
cmp
(bad)
dec
fistp
dec
in
xor
inc
pushf
mov
je
sub
je
(bad)
xchg
lea
cdq
and
sbb
test
dec
data16
dec
data16
mov
sbb
mov
ror
or
inc
mov
xor
cmp
pushf
ss
dec
fistp
dec
in
xor
jne
or
cli
call
dec
test
mov
int3
dec
data16
mov
sbb
mov
ror
xor
outs
sbb
xchg
and
cmp
jb
inc
mov
mov
pop
push
out
sbb
and
(bad)
int3
mov
je
imul
dec
inc
mov
or
cdq
mov
cmps
aam
(bad)
dec
in
into
test
xchg
dec
retf
cmp
and
(bad)
imul
dec
inc
mov
or
cdq
mov
cmps
sbb
(bad)
dec
in
into
cmps
pop
ss
dec
fistp
dec
in
xor
inc
pushf
out
or
data16
(bad)
xchg
lea
cdq
and
sbb
test
dec
imul
inc
jmp
or
add
data16
mov
cmc
sub
ret
int3
cmp
in
icebp
jp
fwait
mov
retf
cmp
cwde
mov
mov
mov
repnz
cli
je
mov
data16
(bad)
xchg
lea
pop
es
mov
outs
(bad)
dec
data16
mov
cmps
sahf
(bad)
sar
cdq
std
adc
mov
je
mov
and
ret
(bad)
mov
and
shl
(bad)
int3
mov
test
cdq
icebp
jle
fwait
mov
fimul
(bad)
dec
imul
cmp
xchg
mov
mov
add
ret
(bad)
mov
and
retf
cmp
and
xchg
cmps
sub
fisub
fistp
dec
in
xor
jne
fwait
xchg
and
cmp
call
dec
test
test
mov
daa
je
imul
dec
inc
mov
or
cdq
mov
cmps
inc
xor
into
cmps
mov
jle
dec
in
xor
jne
ss
and
cmp
call
dec
test
icebp
jp
fwait
mov
data16
retf
cmp
cwde
mov
retf
cmp
cdq
mov
mov
(bad)
mov
addr16
les
push
cmp
data16
jnp
mov
dec
imul
dec
mov
in
xor
dec
mov
pop
icebp
ds
mov
int3
xor
dec
in
icebp
ds
mov
mov
shl
aas
stos
test
icebp
xor
sub
dec
in
retf
cmp
cdq
test
dec
add
(bad)
mov
mov
mov
mov
jbe
je
retf
cmp
fmul
ret
mov
mov
inc
mov
mov
ds
test
mov
mov
cli
xchg
mov
mov
add
mov
test
mov
inc
cdq
mov
pop
push
adc
or
pop
je
int3
mov
je
mov
cdq
mov
(bad)
mov
std
add
fistp
dec
in
xor
jne
fwait
xchg
and
cmp
call
dec
test
cmc
stc
dec
data16
dec
data16
mov
sbb
test
mov
mov
pushf
data16
je
mov
call
je
(bad)
xchg
lea
arpl
aad
xchg
xchg
test
sar
cwde
mov
xor
je
int3
mov
mov
mov
popf
std
dec
data16
xor
je
mov
cmp
cdq
stc
inc
dec
mov
pop
cdq
sar
cwde
mov
mov
mov
(bad)
jecxz
cmp
jecxz
cmp
and
cmp
call
dec
test
popf
clc
dec
data16
dec
data16
mov
sbb
adc
mov
mov
pushf
into
jo
je
mov
add
je
inc
data16
(bad)
xchg
lea
arpl
aad
lods
stos
test
sar
cwde
mov
lods
pop
je
int3
mov
test
mov
clc
dec
data16
dec
data16
mov
sbb
mov
ror
jle
data16
mov
hlt
xchg
and
cmp
call
dec
test
adc
int3
dec
data16
mov
sbb
add
(bad)
test
aas
sbb
cwde
mov
dec
xor
mov
jmp
je
(bad)
xchg
lea
arpl
aad
cmp
cmp
pop
je
int3
mov
adc
dec
mov
dec
data16
dec
data16
mov
sbb
test
mov
mov
pushf
out
data16
mov
sbb
je
inc
data16
(bad)
xchg
lea
arpl
aad
xchg
xchg
test
sar
cwde
mov
mov
je
int3
mov
je
imul
dec
inc
mov
dec
data16
dec
data16
mov
call
nop
and
xchg
cmps
les
dec
in
(bad)
daa
dec
stos
test
sar
cwde
mov
cld
pop
je
int3
mov
xchg
dec
retf
cmp
pop
je
imul
dec
inc
mov
or
cdq
mov
cmps
in
(bad)
dec
in
into
daa
jp
test
sar
cwde
mov
and
(bad)
int3
mov
je
imul
dec
inc
mov
or
cdq
mov
cmps
sub
(bad)
dec
in
into
daa
jl
test
sar
cwde
mov
js
je
int3
mov
test
mov
int3
dec
data16
mov
sbb
mov
ror
retf
je
mov
inc
xchg
cdq
mov
pop
in
icebp
cmp
fs
test
pushf
or
je
mov
push
data16
inc
data16
(bad)
xchg
lea
arpl
aad
xchg
xchg
test
sar
cwde
mov
test
(bad)
int3
mov
test
push
je
or
cdq
mov
cmps
aam
(bad)
dec
in
into
cmps
or
dec
fistp
dec
in
xor
jne
ss
and
cmp
call
dec
test
cmp
cs
data16
mov
mov
and
call
xchg
and
xchg
cmps
pop
dec
(bad)
dec
in
(bad)
cmps
js
(bad)
dec
fistp
dec
in
xor
jne
ss
and
cmp
call
dec
test
stos
sbb
cdq
mov
cmps
dec
dec
(bad)
dec
in
into
(bad)
xchg
pop
ss
mov
je
inc
data16
(bad)
xchg
lea
arpl
aad
xchg
xchg
test
sar
cwde
mov
mov
je
int3
mov
je
imul
dec
inc
mov
dec
data16
dec
data16
mov
call
nop
and
xchg
cmps
ror
in
(bad)
daa
mov
test
sar
cwde
mov
clc
pop
je
int3
mov
je
dec
or
lods
dec
push
je
dec
mov
dec
data16
inc
cmps
cdq
mov
into
mov
mov
cdq
mov
cmps
ror
or
dec
repnz
mov
mov
and
cli
call
mov
mov
rcr
mov
pushf
cmp
data16
cli
call
dec
data16
ss
cdq
mov
(bad)
mov
je
(bad)
mov
sub
mov
(bad)
sbb
sub
aaa
push
std
ds
std
add
pop
cmc
add
pop
je
inc
shl
cmp
push
call
or
cwde
mov
pop
mov
(bad)
daa
loopne
test
icebp
cmp
addr16
iret
mov
push
out
cmp
xor
jae
push
js
data16
xchg
and
scas
add
addr16
iret
mov
ss
sbb
xchg
and
scas
xchg
mov
test
dec
push
ja
dec
out
mov
cdq
mov
inc
std
ds
std
add
scas
mov
mov
(bad)
sbb
and
jbe
(bad)
imul
(bad)
dec
xchg
xchg
dec
retf
cmp
cli
mov
mov
inc
inc
repnz
scas
addr16
inc
fistp
jl
dec
arpl
dec
data16
inc
ret
fwait
mov
(bad)
sahf
pop
ds
mov
jl
mov
mov
sbb
call
dec
and
push
out
fwait
mov
sbb
std
inc
aaa
fwait
mov
mov
aam
mov
pushf
mov
je
sbb
dec
aaa
fwait
mov
ret
ret
ret
(bad)
or
cdq
mov
dec
mov
xor
retf
cmp
cdq
mov
pop
push
je
(bad)
jecxz
cmp
fwait
mov
cmps
pusha
inc
(bad)
dec
in
and
(bad)
jmp
cmp
arpl
dec
aas
fwait
mov
ret
mov
out
loope
mov
mov
cmps
mov
dec
out
icebp
push
mov
mov
ret
mov
pushf
bnd
je
mov
mov
mov
repz
data16
and
je
daa
bound
dec
jmp
jb
cdq
mov
dec
push
rcr
data16
dec
data16
cs
mov
int3
mov
jns
cmps
mov
(bad)
dec
push
mov
and
je
cmp
data16
inc
mov
mov
pop
jmp
jb
cdq
mov
dec
cdq
rcl
mov
cli
test
mov
mov
cli
out
mov
mov
rcr
mov
cli
(bad)
mov
mov
stc
inc
sti
fwait
mov
pop
mov
mov
test
mov
mov
(bad)
adc
cmps
or
(bad)
dec
push
mov
dec
fs
daa
(bad)
test
dec
jmp
cmp
mov
(bad)
dec
out
mov
mov
mov
retf
cmp
cwde
mov
pop
mov
dec
pushf
adc
loop
cmp
data16
or
dec
retf
cmp
data16
mov
inc
neg
je
test
xchg
dec
retf
cmp
or
dec
add
cmp
idiv
fwait
mov
dec
adc
mov
pushf
cmp
mov
dec
data16
inc
neg
xchg
sub
ret
mov
stc
inc
neg
je
dec
or
lods
dec
or
lods
dec
jmp
cmp
pushfw
sar
je
(bad)
dec
data16
cli
into
mov
mov
mov
sub
jle
(bad)
mov
loopne
mov
sbb
nop
and
scas
xor
mov
mov
and
mov
(bad)
int3
mov
mov
mov
lahf
call
(bad)
mov
mov
pop
push
add
or
data16
mov
mov
push
pushf
lds
pushf
dec
jnp
je
retf
cmp
fwait
mov
jae
push
push
inc
mov
or
dec
mov
jnp
fwait
mov
dec
adc
dec
xchg
je
cmps
xor
dec
fisub
dec
and
jecxz
cmp
bound
dec
jmp
cmp
mov
(bad)
daa
or
test
icebp
cmp
bswap
cmp
cdq
mov
dec
adc
jmp
ds
sahf
std
add
mov
dec
out
cdq
popa
data16
dec
in
pop
mov
mov
ret
cmp
push
je
into
mov
dec
data16
enter
and
fwait
mov
cmps
mov
shl
mov
hlt
push
je
(bad)
mov
lahf
rol
inc
ds
mov
mov
dec
xor
and
mov
sbb
call
mov
std
ds
out
mov
mov
mov
cmp
cs
je
lea
std
xchg
mov
add
cmps
mov
mov
(bad)
xor
or
dec
lea
std
xchg
mov
data16
lea
std
xchg
mov
data16
clc
and
(bad)
lahf
imul
leave
clc
xor
xchg
and
data16
mov
inc
xor
leave
(bad)
jb
mov
mov
or
dec
or
dec
mov
push
je
int3
mov
std
ss
cmps
jno
cmps
xor
(bad)
dec
cdq
add
inc
shl
cmp
and
(bad)
pushf
xchg
je
cmp
jno
cwde
stc
or
jno
call
push
sahf
jne
(bad)
mov
mov
pusha
jno
clc
xor
xchg
mov
ss
ret
je
or
sbb
sbb
je
dec
or
cs
push
je
(bad)
mov
std
add
push
je
ret
xchg
sbb
and
cmp
je
les
mov
sbb
xchg
jle
jns
(bad)
cmps
cld
inc
(bad)
dec
xor
jl
mov
sahf
jne
(bad)
mov
mov
vmwrite
xchg
jecxz
dec
data16
inc
xrelease
push
scas
cdq
mov
dec
mov
add
jnp
(bad)
data16
(bad)
sahf
inc
ds
mov
xchg
cmp
test
mov
ins
cdq
ror
cdq
mov
cmp
xchg
jg
je
(bad)
cmp
cmp
cmp
mov
sub
retf
cmp
jmp
jp
cdq
mov
mov
and
cmps
call
mov
jne
sbb
data16
mov
mov
mov
pushf
xchg
jnp
je
mov
push
cmp
jae
xchg
cs
sahf
and
jecxz
es
std
add
xor
dec
(bad)
shl
(bad)
cmp
popf
xchg
push
push
data16
sbb
call
or
int3
add
data16
test
cdq
mov
dec
test
xor
je
and
je
(bad)
mov
hlt
cli
dec
add
(bad)
mov
jne
sbb
cdq
test
or
push
je
int3
mov
je
mov
mov
test
mov
std
add
xchg
inc
ss
mov
je
retf
cmp
data16
mov
and
jg
data16
(bad)
xchg
lea
arpl
shl
xchg
xchg
test
icebp
(bad)
scas
cdq
mov
dec
in
into
into
mov
pushf
jle
data16
inc
data16
(bad)
xchg
lea
arpl
out
cmps
rol
fist
(bad)
dec
in
xor
xchg
sbb
xchg
cmc
dec
test
or
dec
data16
dec
data16
mov
sbb
mov
jecxz
es
and
aam
je
int3
mov
ss
je
mov
and
enter
int3
mov
xchg
dec
retf
cmp
push
je
imul
dec
inc
mov
or
xchg
cmc
dec
test
gs
dec
data16
dec
data16
mov
sbb
mov
je
test
aas
sbb
cdq
mov
dec
jmp
(bad)
scas
cdq
mov
dec
in
(bad)
mov
fs
pop
mov
je
mov
and
outs
mov
je
mov
and
pushf
push
je
int3
mov
je
imul
dec
inc
mov
or
xchg
hlt
dec
test
jle
or
xchg
hlt
dec
test
add
data16
cmp
je
imul
dec
inc
mov
or
xchg
hlt
dec
test
ja
or
xchg
hlt
dec
test
dec
hlt
dec
data16
dec
data16
mov
sbb
push
add
cmp
jmp
(bad)
scas
cdq
mov
dec
jmp
(bad)
scas
cdq
mov
dec
in
(bad)
daa
dec
stos
test
icebp
(bad)
scas
cdq
mov
dec
in
into
cmps
mov
dec
fistp
dec
in
xor
jb
ss
and
dec
retf
cmp
data16
mov
ss
std
add
sub
icebp
(bad)
scas
cdq
mov
dec
in
into
cmps
int3
inc
(bad)
dec
fistp
dec
in
xor
jb
ss
and
dec
retf
cmp
data16
mov
fcom
xchg
cmp
data16
mov
mov
data16
inc
data16
(bad)
xchg
lea
arpl
shl
xchg
xchg
test
icebp
(bad)
scas
cdq
mov
dec
in
into
into
mov
dec
mov
scas
cdq
mov
dec
jmp
(bad)
scas
cdq
mov
dec
in
(bad)
cmps
inc
inc
(bad)
dec
fistp
dec
in
xor
jb
ss
and
dec
retf
cmp
data16
mov
(bad)
xchg
and
dec
retf
cmp
data16
mov
push
push
data16
test
cdq
mov
mov
int3
dec
data16
mov
sbb
mov
jecxz
es
and
mov
je
int3
mov
je
test
aas
(bad)
mov
add
je
sbb
leave
(bad)
scas
cdq
mov
dec
jmp
(bad)
scas
cdq
mov
dec
in
(bad)
cmps
loopne
(bad)
dec
fistp
dec
in
xor
jb
ss
and
dec
retf
cmp
data16
mov
sbb
xchg
cmp
data16
mov
xor
je
cmps
and
fistp
dec
in
xor
jb
ss
and
dec
retf
cmp
data16
mov
out
data16
inc
data16
(bad)
xchg
lea
arpl
out
cmps
push
pop
(bad)
dec
in
xor
xchg
sbb
xchg
test
add
movs
sbb
xchg
test
add
je
dec
or
lods
dec
or
scas
dec
data16
sbb
in
dec
data16
inc
mov
mov
into
mov
stc
inc
dec
xchg
jmp
pushw
mov
mov
mov
and
mov
and
cli
call
dec
mov
mov
pop
(bad)
dec
push
mov
movs
push
ss
mov
sub
mov
(bad)
sbb
and
xor
retf
(bad)
sahf
pop
ds
mov
mov
dec
push
add
push
(bad)
dec
in
sub
sbb
fucomp
dec
call
dec
out
loope
mov
mov
addr16
mov
popf
mov
(bad)
mov
je
cmps
pop
pop
(bad)
dec
mov
mov
sbb
cdq
and
cs
dec
je
(bad)
jecxz
cmp
data16
inc
jmp
mov
pop
mov
ret
je
retf
cmp
and
scas
sti
mov
je
iret
mov
and
outs
mov
retf
(bad)
dec
push
jo
dec
data16
inc
mov
mov
pop
jmp
jb
cdq
mov
dec
ficomp
dec
and
jecxz
cmp
mov
aam
mov
daa
dec
retf
cmp
cdq
mov
push
push
inc
loop
les
sbb
xchg
and
dec
retf
cmp
data16
retf
cmp
cwde
mov
pop
mov
call
stos
cdq
mov
dec
out
mov
mov
or
dec
retf
cmp
data16
mov
ds
std
add
cdq
xor
dec
data16
stos
cwde
mov
dec
data16
int3
fucomi
cmp
add
cmp
std
ds
sahf
std
add
jecxz
cmp
or
mov
mov
mov
and
dec
or
lods
outs
or
lods
dec
or
dec
retf
cmp
fs
(bad)
dec
outs
mov
retf
div
dec
cdq
shr
mov
mov
(bad)
test
(bad)
cmp
(bad)
mov
mov
sbb
and
dec
retf
cmp
data16
mov
inc
xor
pop
inc
mov
(bad)
dec
jmp
cmp
adc
in
dec
data16
add
add
daa
mov
dec
mov
in
dec
data16
inc
xor
icebp
mov
dec
adc
iret
mov
data16
dec
xchg
je
cmps
sub
(bad)
dec
push
jo
dec
data16
inc
fistp
pushf
push
gs
mov
mov
or
scas
and
jecxz
cmp
aad
cmp
mov
je
inc
loop
(bad)
dec
data16
inc
ret
popf
mov
pop
xor
mov
outs
jge
inc
loop
(bad)
dec
pushw
(bad)
mov
loopne
mov
stc
inc
ret
popf
mov
pop
mov
inc
rcr
rcl
mov
mov
mov
(bad)
mov
je
mov
loopne
mov
pushf
and
scas
inc
mov
pop
(bad)
dec
ss
xchg
and
nop
cmps
xchg
pop
(bad)
dec
in
rol
add
daa
ins
test
dec
mov
pop
rcr
dec
xchg
(bad)
movs
jne
sbb
rcl
mov
mov
mov
icebp
pop
mov
mov
push
and
mov
loopne
mov
pushf
adc
push
ds
popf
mov
(bad)
mov
je
mov
call
(bad)
dec
data16
inc
sti
fwait
mov
pop
mov
out
dec
pushw
(bad)
mov
sar
mov
pushf
(bad)
data16
mov
mov
cdq
shl
mov
pop
dec
je
(bad)
mov
sub
dec
xor
and
mov
xor
fwait
inc
fst
xchg
pop
std
ds
out
mov
cmps
sub
dec
out
xor
mov
js
or
je
les
or
fs
and
data16
mov
je
mul
sub
dec
xchg
xchg
dec
or
ins
out
dec
mov
dec
xor
(bad)
push
xor
(bad)
dec
jmp
cmp
or
nop
daa
sbb
xchg
je
dec
mov
dec
data16
add
sahf
inc
ds
mov
(bad)
data16
xor
je
sbb
inc
mov
mov
cmp
popf
xchg
jo
dec
pushfw
dec
imul
ret
int3
push
dec
data16
test
icebp
cmp
or
cmp
outs
pushf
cs
mov
mov
mov
mov
mov
lea
scas
mov
je
ret
ss
and
cmps
mov
(bad)
dec
or
cmp
push
inc
dec
xchg
mov
pop
mov
mov
test
dec
data16
(bad)
xchg
lahf
aam
mov
push
les
mov
out
dec
data16
add
and
in
retf
jno
cmp
xor
jnp
(bad)
sub
lahf
scas
(bad)
sahf
jne
(bad)
mov
and
dec
mov
adc
jmp
xor
or
scas
or
je
mov
hlt
addr16
data16
clc
and
scas
mov
ss
adc
in
faddp
and
test
je
jp
jmp
dec
mov
add
je
sub
xor
int3
sahf
jns
sar
add
pop
cdq
ins
dec
mov
mov
or
lods
dec
or
lods
dec
or
lods
dec
or
lods
dec
or
scas
fbld
(bad)
and
pusha
push
(bad)
cmps
dec
pop
(bad)
dec
out
mov
dec
xor
div
pushfw
dec
addr16
mov
or
nop
and
sti
xor
(bad)
dec
or
nop
and
(bad)
ss
cmps
add
or
nop
and
stc
xor
(bad)
dec
or
nop
and
repz
cmps
and
out
mov
mov
mov
dec
xor
div
pushfw
mul
je
dec
xor
div
pushfw
out
data16
dec
xor
div
pushfw
(bad)
addr16
dec
xor
div
pushfw
(bad)
addr16
mov
mov
or
nop
and
push
(bad)
dec
or
nop
and
sti
xor
(bad)
dec
or
nop
and
lds
(bad)
cmps
lods
push
(bad)
dec
or
nop
and
lds
(bad)
cmps
fcom
dec
out
mov
mov
mov
adc
and
aas
fcmovnbe
(bad)
sahf
and
and
cmp
jmp
loope
data16
out
es
xchg
loopne
(bad)
and
sti
xor
(bad)
dec
or
cmp
aad
dec
mov
dec
data16
cli
shl
je
xchg
loopne
(bad)
and
(bad)
ss
cmps
push
mov
mov
mov
mov
inc
jmp
je
in
inc
jmp
dec
push
stos
inc
pcmpgtd
cmp
pushfw
and
je
mov
inc
fcmovu
es
test
(bad)
in
data16
dec
push
stos
inc
pcmpgtd
cmp
pushfw
push
imul
out
shl
je
call
push
aad
dec
push
stos
inc
pcmpgtd
cmp
pushfw
pop
imul
out
daa
je
int3
inc
je
in
dec
in
xchg
stos
inc
pcmpgtd
cmp
pushfw
mov
mov
mov
or
cmp
aad
dec
mov
fcmovbe
daa
je
xchg
loopne
(bad)
and
(bad)
ss
cmps
sub
dec
cmp
inc
mov
mov
sub
data16
mov
adc
call
xchg
and
nop
cmps
jecxz
cmp
outs
jmp
dec
out
or
lods
dec
ss
scas
imul
nop
cmps
add
(bad)
dec
out
mov
mov
mov
dec
cdq
inc
repnz
je
dec
xor
xor
xor
and
daa
data16
pop
push
test
or
and
scas
dec
fs
cmps
dec
push
(bad)
dec
lds
pushw
pushw
(bad)
mov
inc
pop
push
pushw
(bad)
pop
or
dec
or
pushf
mov
pop
push
je
iret
ss
xchg
and
scas
xchg
mov
pushf
ds
je
dec
stc
xor
repz
xor
repz
xor
(bad)
dec
in
xor
and
push
or
scas
inc
data16
xchg
daa
mov
scas
sbb
cmps
fcom
dec
lds
or
fs
(bad)
and
addr16
(bad)
and
fidiv
dec
or
lods
dec
or
lods
pop
mov
add
mov
push
(bad)
sbb
cmp
jmp
dec
mov
jecxz
pushw
(bad)
mov
inc
pop
push
pushw
(bad)
mov
xor
pushw
(bad)
daa
push
jbe
dec
or
lods
addr16
je
dec
ss
xchg
and
scas
xchg
mov
pushf
mov
je
xor
ss
and
stc
xor
repz
xor
in
data16
aaa
or
scas
dec
data16
daa
jle
test
scas
sbb
cmps
je
(bad)
dec
(bad)
or
push
inc
pop
push
pushw
(bad)
mov
xor
pushw
(bad)
daa
mov
(bad)
dec
push
aam
dec
pushw
out
daa
data16
pop
push
mov
sbb
and
lods
dec
mov
retf
je
mov
or
cmp
jmp
dec
or
cmp
aam
dec
or
scas
aaa
addr16
daa
fdiv
or
scas
dec
data16
daa
call
scas
sbb
cmps
cld
push
(bad)
dec
lds
push
pushw
(bad)
mov
inc
pop
push
pushw
(bad)
mov
adc
or
add
dec
data16
pop
push
ja
iret
ss
nop
and
scas
retf
(bad)
and
data16
cmps
sti
xor
test
je
or
je
pop
mov
dec
data16
xchg
and
lods
dec
push
aaa
(bad)
dec
mov
cmps
sti
xor
(bad)
dec
or
cmp
jmp
dec
or
cmp
aam
dec
push
pop
(bad)
dec
pushw
hlt
daa
int3
je
dec
or
scas
dec
data16
xchg
daa
mov
icebp
sbb
pushw
(bad)
cmps
fs
(bad)
dec
(bad)
or
sahf
std
add
stc
xor
repz
(bad)
ss
daa
dec
jne
dec
or
scas
in
je
daa
enter
push
ja
iret
ss
nop
and
scas
retf
(bad)
and
data16
arpl
xor
cmp
push
jmp
dec
or
cmp
aam
dec
or
lods
je
xchg
(bad)
dec
data16
dec
data16
dec
data16
daa
or
scas
sbb
cmps
in
(bad)
dec
(bad)
or
inc
je
and
stc
xor
repz
xor
inc
dec
data16
mov
je
daa
jb
(bad)
dec
push
je
dec
ss
xchg
and
scas
xchg
mov
pushf
xchg
gs
ss
and
stc
xor
repz
xor
mov
dec
push
mov
dec
data16
dec
data16
or
mov
je
dec
inc
je
in
push
in
xchg
je
jp
jmp
dec
or
cmp
aam
dec
or
scas
mov
je
daa
push
jne
dec
or
scas
dec
data16
daa
jne
test
scas
sbb
cmps
test
(bad)
dec
lds
dec
sahf
std
add
stc
xor
repz
xor
nop
daa
sub
(bad)
dec
push
aam
dec
data16
dec
data16
dec
mov
scas
test
je
rol
repnz
test
je
jp
jmp
dec
or
cmp
aam
dec
or
scas
arpl
(bad)
daa
div
or
scas
dec
data16
xchg
daa
mov
jne
or
data16
sbb
je
in
loop
test
je
jp
jmp
dec
or
cmp
aam
dec
or
scas
int
je
daa
movs
je
dec
or
scas
dec
data16
xchg
daa
not
test
jne
or
data16
pop
inc
je
in
jp
xchg
mov
mov
mov
dec
cdq
inc
repnz
je
dec
cdq
inc
cmps
out
and
lods
push
or
scas
xchg
data16
and
out
scas
xchg
mov
scas
test
je
dec
pushfw
push
outs
data16
addr16
xor
repz
xor
repz
(bad)
ss
and
xchg
je
dec
or
scas
dec
data16
xchg
daa
mov
jne
or
data16
rol
(bad)
in
inc
jmp
dec
or
cmp
jmp
dec
or
cmp
aam
dec
or
scas
aam
je
daa
iret
jne
dec
or
scas
dec
data16
xchg
daa
test
pop
or
add
dec
(bad)
or
cdq
mov
inc
je
mov
out
mov
cmp
mov
inc
mov
mov
and
fwait
mov
data16
mov
adc
xchg
mov
(bad)
mov
je
cmps
jae
cmp
outs
jmp
dec
out
mov
mov
mov
dec
cdq
inc
into
shl
je
mov
and
dec
data16
sub
mov
jnp
xor
dec
or
inc
pop
or
lods
dec
push
je
iret
ss
nop
and
scas
scas
mov
jbe
dec
mov
out
data16
sub
je
dec
cdq
inc
repnz
je
dec
ss
cli
les
mov
or
push
shl
out
scas
xchg
scas
test
je
int3
inc
je
in
(bad)
jmp
dec
out
xchg
je
dec
cdq
inc
repnz
je
dec
cdq
inc
sub
je
arpl
mov
mov
or
push
xchg
and
out
scas
xchg
mov
scas
test
je
jo
je
in
push
aam
dec
or
lods
dec
or
lods
dec
or
lods
dec
or
lods
dec
or
scas
repz
and
outs
push
shl
out
mov
dec
xor
div
pushfw
es
data16
dec
cdq
inc
repnz
je
dec
cdq
inc
cmps
out
and
lods
sub
lods
pop
or
scas
dec
data16
xchg
daa
mov
icebp
sbb
pushw
(bad)
cmps
mov
(bad)
dec
lds
jle
std
add
sbb
test
je
or
je
mov
pushf
pop
push
pushfw
push
push
data16
cmp
test
je
jp
jmp
(bad)
hlt
sti
ffreep
ss
jnp
bound
addr16
mov
pushf
pop
push
pushfw
call
je
dec
push
cmp
dec
mov
cmps
sti
xor
(bad)
dec
or
cmp
jmp
dec
or
cmp
aam
dec
push
pop
(bad)
dec
pushw
hlt
and
gs
pop
push
test
or
and
lods
dec
mov
dec
data16
inc
out
and
inc
mov
(bad)
dec
or
cmp
jmp
dec
or
cmp
aam
dec
push
pop
(bad)
dec
pushw
cli
and
data16
dec
data16
xchg
daa
mov
icebp
sbb
pushw
(bad)
cmps
pushf
push
dec
lds
push
pushfw
test
dec
cdq
inc
repnz
je
dec
cdq
inc
sub
je
pop
push
cmc
(bad)
dec
pushw
test
jb
(bad)
dec
push
je
dec
ss
xchg
and
scas
xchg
mov
pushf
jp
data16
cmp
ss
inc
ds
mov
inc
pop
push
pushw
(bad)
mov
xor
pushw
(bad)
and
data16
mov
(bad)
daa
data16
pop
push
ss
data16
xchg
and
lods
dec
mov
fmul
xlat
not
daa
je
dec
cdq
inc
repnz
je
dec
cdq
inc
sub
je
pop
push
mov
dec
data16
dec
data16
sub
je
dec
ss
xchg
and
scas
xchg
mov
pushf
adc
gs
mov
jnp
xor
repz
xor
nop
daa
fbstp
push
aam
dec
data16
dec
data16
dec
mov
scas
test
je
inc
js
(bad)
in
repnz
test
je
jp
jmp
dec
or
cmp
aam
dec
or
scas
stos
addr16
daa
xor
push
dec
data16
daa
sbb
sbb
cmps
mov
(bad)
dec
lds
addr16
push
inc
pop
push
pushw
(bad)
mov
xor
pushw
(bad)
daa
fwait
je
dec
push
mov
dec
pushw
fsub
data16
pop
push
and
or
and
lods
dec
mov
fisttp
xlat
data16
and
lods
dec
cdq
inc
repnz
je
dec
cdq
inc
cmps
out
and
lods
push
push
test
pushw
jmp
jb
(bad)
dec
out
scas
ffreep
ss
daa
scas
test
je
dec
pushfw
cmps
push
data16
push
repz
into
mov
push
(bad)
mov
inc
pop
push
pushw
(bad)
mov
adc
or
dec
push
and
and
xchg
mov
scas
test
je
dec
pushfw
loop
data16
addr16
xor
repz
xor
repz
(bad)
ss
and
cmp
shl
data16
pop
push
test
or
and
scas
dec
fs
cmps
mov
dec
lds
pushw
(bad)
mov
inc
pop
push
pushw
(bad)
mov
xor
pushw
shl
std
je
dec
push
xor
dec
pushw
fsub
data16
pop
push
xchg
pop
or
and
lods
dec
mov
fimul
xlat
pop
in
and
not
pop
ds
mov
mov
mov
xchg
lock
jmp
je
dec
push
hlt
(bad)
dec
pushw
lds
data16
iret
cdq
add
cmps
call
mov
mov
jnp
(bad)
(bad)
and
jg
mov
std
ds
sahf
std
add
mov
fisttp
mul
mov
jmp
ss
jmp
xor
jmp
cmp
cdq
add
daa
pop
rol
pushf
movs
in
cdq
mov
jle
fwait
mov
cmp
xor
test
and
or
cdq
add
cmps
(bad)
xchg
cmp
and
dec
or
dec
or
sbb
sti
and
scas
dec
data16
cmps
repnz
cmp
in
(bad)
dec
xchg
xchg
dec
or
das
jl
mov
data16
nop
icebp
imul
out
outs
push
data16
in
(bad)
ss
je
mov
and
sbb
je
(bad)
xchg
jne
(bad)
mov
je
inc
data16
(bad)
xchg
lea
out
sub
iret
sbb
jnp
and
dec
retf
cmp
data16
xor
lods
jbe
data16
inc
dec
cdq
mov
pop
mov
dec
data16
mov
daa
xchg
les
cdq
mov
dec
out
lea
je
xor
pusha
ja
data16
inc
dec
cdq
mov
pop
mov
mov
daa
push
lds
cdq
mov
dec
out
cmp
gs
add
ss
je
mov
and
in
je
iret
sbb
mov
retf
cmp
data16
mov
call
xor
div
data16
inc
dec
cdq
mov
pop
mov
mov
daa
(bad)
lds
cdq
mov
dec
out
cmp
gs
nop
xlat
ss
je
mov
and
or
je
iret
sbb
(bad)
std
and
dec
retf
cmp
data16
mov
out
cmp
gs
outs
aam
mov
je
mov
and
inc
jno
(bad)
iret
sbb
(bad)
std
and
dec
retf
cmp
data16
xor
and
stc
inc
dec
cdq
mov
pop
mov
(bad)
and
and
scas
add
ss
je
mov
and
dec
clc
xor
cmp
data16
(bad)
and
scas
psubw
cmp
pushfw
and
je
mov
ss
cwde
mov
(bad)
mov
mov
dec
xor
and
and
outs
retf
arpl
idiv
mov
mov
out
adc
jmp
ror
cs
mov
iret
(bad)
adc
xor
adc
and
out
repnz
data16
sbb
retf
jle
dec
mov
fmulp
mov
and
jecxz
xor
adc
test
icebp
sub
jo
(bad)
dec
mov
fmul
int
dec
data16
mov
sahf
mov
iret
fild
mov
push
fdiv
stc
inc
mov
mov
jnp
sahf
mov
dec
adc
mov
ss
cdq
xor
jae
mov
pop
ss
mov
mov
dec
adc
test
ss
cdq
xor
jae
(bad)
iret
fild
mov
push
jne
or
xchg
mov
pop
mov
ror
hlt
jnp
sahf
mov
dec
adc
push
aad
mov
cdq
xor
jae
(bad)
into
mov
cld
dec
data16
jnp
sahf
mov
dec
adc
jnp
ss
cdq
xor
jae
(bad)
iret
fild
mov
push
cmp
data16
inc
mov
mov
jnp
sahf
mov
inc
adc
and
ss
cdq
xor
jae
mov
jne
(bad)
mov
mov
inc
adc
(bad)
aad
mov
cdq
xor
jae
(bad)
iret
fild
mov
push
fidiv
data16
inc
mov
mov
jnp
sahf
mov
inc
adc
xchg
ss
cdq
xor
jb
mov
and
jecxz
xor
fild
mov
push
pushf
jne
data16
inc
mov
mov
ror
hlt
jnp
sahf
mov
inc
adc
dec
shl
mov
cdq
xor
jb
(bad)
iret
fild
mov
push
push
jb
data16
inc
mov
mov
mov
and
dec
retf
cmp
cdq
mov
xchg
xchg
dec
retf
cmp
(bad)
ss
daa
jmp
lahf
sub
out
icebp
cs
xchg
mov
mov
add
int3
fistp
retf
push
ja
dec
out
test
mov
add
dec
push
scas
lods
dec
push
add
or
cdq
mov
outs
std
inc
mov
cmps
jnp
xchg
fs
cmps
bound
dec
out
cmp
loop
les
hlt
jnp
call
dec
data16
repnz
mov
mov
jnp
fs
mov
mov
mov
je
retf
cmp
and
dec
retf
cmp
data16
mov
jle
data16
test
cdq
mov
in
ds
mov
cmp
(bad)
push
data16
mov
outs
movs
push
out
mov
movs
cmps
mov
mov
movs
lahf
(bad)
mov
mov
mov
xrelease
je
jb
jmp
icebp
daa
not
test
pop
pop
or
cwde
mov
pop
mov
dec
data16
sub
push
(bad)
daa
not
test
imul
data16
inc
mov
mov
pop
mov
add
cmp
mov
mov
mov
and
push
jb
mov
and
jecxz
xor
jecxz
ds
and
pop
mov
mov
mov
and
clc
jno
(bad)
daa
lods
test
icebp
cmp
lods
arpl
dec
in
rol
jecxz
cmp
jae
mov
mov
mov
test
mov
mov
pop
push
mov
or
sahf
mov
pop
mov
ror
test
retf
cmp
data16
dec
push
sbb
data16
inc
mov
mov
pop
mov
pop
mov
test
retf
(bad)
dec
jmp
cmp
arpl
cwde
jo
(bad)
push
out
icebp
ds
mov
jne
(bad)
mov
xchg
mov
(bad)
mov
mov
inc
imul
cmp
sahf
mov
mov
in
or
and
dec
retf
cmp
data16
mov
dec
std
and
dec
retf
cmp
data16
retf
cmp
data16
retf
cmp
mov
enter
mov
pusha
adc
mov
lock
mov
mov
dec
lea
ret
cmp
cdq
mov
cmp
je
mov
mov
mov
stc
inc
mov
mov
pop
push
mov
inc
mov
mov
pop
mov
ror
test
mov
mov
dec
out
icebp
push
mov
call
pop
data16
repnz
cmp
xor
xchg
out
icebp
xor
pop
je
mov
xchg
mov
(bad)
mov
mov
pop
cdq
shl
cdq
mov
and
je
ret
ds
and
and
je
ret
cmp
xchg
mov
mov
or
dec
xor
retf
cmp
rol
js
es
dec
or
add
(bad)
pop
mov
inc
mov
mov
pop
xor
mov
cmps
(bad)
mov
retf
jge
inc
jecxz
cmp
sahf
mov
cmps
xor
(bad)
dec
out
movs
sbb
scas
movups
cmps
dec
popa
(bad)
dec
aas
popf
push
adc
and
ficom
pop
data16
sbb
iret
cmc
dec
mov
xor
dec
push
loopne
or
addr16
dec
mov
dec
data16
inc
jmp
mov
inc
cmps
add
pop
mov
xlat
dec
pushw
(bad)
cmps
cwde
pusha
(bad)
dec
aas
std
push
mov
les
jl
jnp
xor
pop
push
data16
dec
data16
xor
daa
ss
xlat
dec
data16
dec
data16
ffreep
ss
cmps
js
(bad)
dec
mov
dec
data16
push
jae
mov
inc
push
(bad)
movs
sbb
dec
data16
retf
cmp
mov
(bad)
daa
not
test
icebp
ja
cdq
mov
mov
mov
jb
mov
dec
imul
inc
dec
adc
test
movs
jecxz
shl
(bad)
mov
add
data16
add
cmps
clc
pusha
(bad)
dec
fsub
dec
mov
mov
push
dec
mov
add
mov
loope
mov
rcr
lock
or
dec
imul
cmp
mov
movs
pop
aaa
std
pop
mov
cmps
(bad)
fldenv
std
push
push
out
mov
mov
std
xor
repnz
popa
mov
rcr
inc
clc
mov
push
into
lea
into
dec
data16
loopne
mov
dec
mov
dec
data16
add
movs
jne
inc
mov
mov
mov
fisubr
mov
inc
dec
retf
cmp
and
scas
cmp
sub
jb
(bad)
and
mov
ja
cdq
mov
dec
jmp
mov
jo
cmp
data16
retf
cmp
cdq
mov
jle
mov
xlat
sub
jbe
mov
jne
(bad)
movs
push
(bad)
cmps
dec
jnp
dec
push
leave
push
or
and
scas
mov
jmp
dec
mov
aad
data16
push
jle
std
add
mov
stc
repz
mov
(bad)
test
dec
xchg
adc
shr
or
and
scas
aas
(bad)
ss
cmps
or
(bad)
dec
jmp
out
mov
and
(bad)
dec
xchg
or
and
scas
mov
in
dec
mov
dec
data16
push
jle
std
add
mov
stc
repz
mov
(bad)
test
dec
xchg
adc
les
or
and
scas
dec
clc
xor
(bad)
dec
in
xchg
fcmovne
sub
mov
(bad)
imul
(bad)
dec
xchg
ror
push
lods
dec
mov
lods
dec
or
lods
dec
or
scas
dec
data16
daa
jmp
leave
dec
data16
cmp
jbe
dec
or
xchg
cmps
les
dec
mov
je
ret
xchg
ret
sub
push
shr
cdq
test
dec
add
and
xor
repnz
mov
mov
mov
int3
xchg
and
and
cmp
rcr
or
mov
dec
data16
xor
stc
inc
cli
mov
xlat
dec
data16
dec
cli
mov
xchg
pop
jne
cmp
int3
nop
pop
jmp
jae
cdq
mov
xor
(bad)
and
ss
les
xchg
xchg
test
add
or
(bad)
dec
fidiv
and
mov
inc
mov
mov
mov
ret
scas
mov
xchg
dec
xchg
lods
dec
mov
inc
pop
push
data16
add
je
or
je
dec
mov
leave
dec
data16
sbb
mov
dec
sbb
pushfw
outs
inc
data16
or
je
dec
or
cs
(bad)
and
mov
mov
sub
and
lds
je
or
mov
xchg
(bad)
dec
out
lods
(bad)
xchg
out
mov
or
and
cmp
je
and
stc
xor
(bad)
and
pushw
(bad)
daa
data16
dec
push
xchg
sbb
xchg
and
lods
dec
mov
(bad)
shl
je
mov
sbb
dec
push
loopne
or
pushfw
fiadd
je
dec
mov
mov
test
dec
dec
(bad)
dec
data16
mov
push
loope
or
data16
xor
jne
dec
data16
inc
jecxz
mov
into
movs
push
mov
pushfw
pop
inc
data16
dec
mov
mov
sub
data16
push
mov
ret
sub
retf
mov
sbb
sti
and
scas
ss
rol
pushf
dec
fstp
jge
cmp
jecxz
shl
(bad)
dec
mov
je
dec
data16
push
mov
into
xchg
ins
pushf
dec
data16
inc
out
mov
pop
or
lods
dec
push
mov
(bad)
and
data16
cmps
add
(bad)
dec
jmp
outs
mov
pushw
(bad)
daa
popf
push
xchg
je
dec
mov
cs
je
and
data16
dec
cdq
inc
(bad)
shl
je
jl
je
movs
jle
sub
je
xchg
dec
lods
dec
mov
xor
pop
mov
enter
(bad)
and
and
(bad)
dec
outs
mov
call
(bad)
sbb
xchg
inc
mov
xor
jo
sbb
sub
(bad)
and
retf
fs
retf
repz
dec
sbb
mov
jnp
and
cli
jl
dec
pop
gs
dec
data16
sub
jb
jne
dec
adc
pop
addr16
inc
jmp
dec
data16
retf
out
(bad)
dec
(bad)
sbb
dec
idiv
daa
shl
(bad)
dec
imul
scas
mov
push
sbb
or
cdq
mov
mov
(bad)
mov
mov
mov
rcr
stos
cdq
mov
jbe
inc
stos
fwait
mov
ret
cmp
or
dec
data16
inc
loop
(bad)
dec
data16
inc
mov
inc
sub
je
test
mov
test
mov
pop
inc
fwait
fwait
mov
int3
mov
fisubr
loope
mov
mov
lahf
adc
retf
cmp
cdq
mov
(bad)
call
fwait
mov
fs
push
cmp
mov
cdq
pop
inc
xchg
fwait
mov
pop
in
icebp
sbb
mov
cmp
mov
or
xor
(bad)
dec
out
mov
mov
mov
jb
rol
je
out
add
test
sbb
or
sahf
std
add
inc
adc
data16
jb
rol
sbb
or
cdq
mov
or
aas
jae
dec
cdq
inc
scas
sti
and
cs
or
dec
data16
ds
std
add
data16
dec
pop
xor
inc
jecxz
ror
(bad)
cmps
mov
(bad)
dec
(bad)
pop
ror
(bad)
shl
je
or
into
mov
jl
lods
push
mov
and
jecxz
cmp
arpl
dec
in
xor
(bad)
jecxz
cmp
dec
je
je
in
or
arpl
addr16
arpl
data16
je
test
data16
je
loopne
or
arpl
addr16
arpl
gs
arpl
push
data16
je
pusha
pop
push
data16
in
je
and
mov
retf
inc
cwde
mov
je
or
data16
je
aam
or
arpl
push
add
daa
(bad)
fs
dec
cdq
add
cmps
in
js
dec
push
mov
mov
mov
dec
data16
add
ret
lods
cmp
mov
stc
inc
xchg
fwait
mov
pop
mov
inc
stos
fwait
mov
cmps
pop
jb
dec
out
mov
mov
mov
mov
je
ret
cmp
mov
xchg
mov
jnp
cwde
mov
dec
adc
or
scas
sbb
ss
and
data16
jp
jmp
int3
dec
popfw
sbb
je
retf
cmp
cdq
mov
retf
cmp
shl
(bad)
dec
imul
scas
mov
je
ret
cmp
loop
test
sbb
dec
data16
dec
mov
mov
int3
scas
mov
cmp
imul
cwde
mov
sbb
mov
test
dec
add
and
push
lods
test
je
loopne
je
mov
lock
data16
sbb
(bad)
neg
xchg
dec
retf
cmp
fwait
mov
mov
stc
inc
mov
push
pop
push
or
fwait
mov
pop
mov
add
mov
dec
data16
inc
mov
mov
pop
cdq
inc
fcmovu
es
pushf
outs
je
iret
fisttp
mov
or
lods
dec
push
jp
or
pop
jle
dec
cdq
inc
fcmovu
es
movs
outs
je
cmps
xor
jmp
cmp
cdq
xor
jae
je
mov
mov
cmp
(bad)
and
and
lods
dec
mov
dec
mov
push
repz
cmps
sar
dec
(bad)
fcmovnb
dec
data16
mov
mov
dec
lea
stc
jecxz
cmp
fwait
mov
mov
inc
mov
outs
or
lods
dec
push
xchg
adc
lods
jge
dec
cdq
inc
fcmovu
es
cmp
(bad)
cmps
push
jo
dec
out
cmp
jecxz
cmp
fcomip
xor
jg
mov
mov
mov
and
retf
cmp
and
dec
retf
cmp
data16
mov
cmp
je
retf
cmp
(bad)
ss
cmps
cmp
leave
cmp
inc
push
(bad)
and
and
lods
dec
mov
repz
(bad)
ss
cmps
cwde
jl
dec
pop
inc
mov
mov
pop
jmp
aaa
mov
mov
dec
jmp
aaa
mov
mov
dec
in
(bad)
daa
cdq
je
dec
jmp
cmp
push
pop
pop
push
pushfw
inc
inc
data16
repnz
mov
mov
add
and
into
mov
mov
push
pop
pop
push
pushfw
pop
inc
data16
fisub
(bad)
into
xchg
mov
dec
data16
inc
mov
mov
pop
jmp
aaa
mov
mov
dec
jmp
aaa
mov
mov
dec
in
(bad)
daa
cdq
je
dec
jmp
cmp
push
pop
pop
push
pushfw
fiadd
je
repnz
mov
mov
add
and
or
je
enter
mov
pop
pop
push
pushfw
repnz
data16
bound
mov
mov
mov
test
dec
add
int3
sahf
ja
outs
or
lods
dec
push
pop
adc
xor
(bad)
dec
cdq
inc
out
shl
je
mov
je
cmps
sahf
jbe
dec
mov
mov
movs
pop
jnp
retf
cmp
cwde
mov
jae
or
jae
or
and
dec
mov
cs
outs
je
mov
pop
pop
push
pushfw
push
dec
data16
mul
iret
jecxz
cmp
popf
mov
mov
ja
mul
mov
popa
data16
retf
cmp
fwait
mov
pop
push
pop
push
or
fwait
mov
pop
mov
add
mov
dec
data16
inc
mov
mov
pop
cdq
inc
out
daa
je
pusha
popa
je
iret
fisttp
mov
or
lods
dec
push
adc
cld
jae
dec
cdq
inc
out
daa
je
or
(bad)
cmps
es
dec
mov
mov
movs
pop
jnp
retf
cmp
cwde
mov
jae
or
jae
or
and
mov
cs
je
mov
push
pop
push
pushfw
into
dec
data16
dec
fs
iret
jecxz
cmp
fwait
mov
mov
mov
(bad)
dec
adc
cmp
into
cmc
sub
pop
je
ret
cmp
xchg
mov
mov
sbb
xchg
and
dec
retf
cmp
data16
mov
cs
out
icebp
and
or
dec
or
lods
dec
or
lods
dec
push
je
dec
es
shl
je
int3
arpl
jecxz
cmp
pushw
(bad)
mov
test
mov
pushf
push
dec
data16
jb
rol
inc
pop
pcmpgtd
push
mov
hlt
cli
dec
add
(bad)
movs
push
mov
cwde
cmp
push
in
xchg
shl
cdq
mov
mov
(bad)
and
fwait
mov
pop
or
scas
mov
rol
dec
data16
ret
cmp
out
(bad)
dec
adc
sub
jmp
aaa
mov
mov
mov
pushf
inc
dec
data16
dec
jmp
sub
fs
scas
and
cmp
xchg
mov
mov
adc
dec
mov
cwde
mov
cmps
cwde
ja
dec
cdq
inc
sub
je
in
je
and
bound
(bad)
and
data16
outs
div
cmps
shl
out
icebp
ss
mov
push
mov
or
lods
dec
or
cmp
xchg
mov
mov
fld
dec
data16
retf
ffreep
ss
int3
scas
mov
cmp
stc
push
mov
xor
je
cli
xchg
mov
mov
cdq
ret
push
mov
cwde
cmp
push
cwde
adc
cwde
mov
cmps
mov
(bad)
dec
out
mov
mov
mov
cli
xchg
mov
mov
adc
dec
data16
and
ss
dec
data16
and
or
test
or
xchg
sti
and
scas
dec
data16
cmps
xabort
mov
mov
and
stc
xor
(bad)
dec
out
mov
mov
mov
pop
cdq
add
mov
cmp
push
mov
mov
cwde
adc
mov
dec
xor
and
mov
sbb
push
xchg
add
and
dec
addr16
inc
jecxz
(bad)
dec
idiv
mov
(bad)
je
lock
push
pushf
pop
push
pushfw
dec
data16
mov
inc
shl
je
inc
cdq
inc
inc
out
and
cs
je
hlt
addr16
push
pop
pop
push
pushfw
mov
data16
jp
jmp
dec
adc
jp
loope
dec
mov
repz
repz
cmp
repz
xor
(bad)
dec
out
mov
test
xor
(bad)
mov
xor
rep
stc
xor
(bad)
dec
pop
inc
out
daa
je
pop
out
mov
and
(bad)
cmp
repz
sti
xor
(bad)
dec
pop
inc
out
daa
je
ins
out
mov
and
(bad)
cmp
repz
(bad)
ss
cmps
pushf
ja
dec
lea
cli
push
(bad)
mov
out
mov
xchg
pop
inc
shl
je
dec
in
imul
jp
aad
dec
adc
push
pop
jmp
dec
out
mov
mov
mov
jp
jmp
dec
adc
push
inc
jmp
dec
pop
inc
fcmovu
es
dec
in
imul
jp
jmp
dec
adc
push
push
aad
dec
pop
inc
out
daa
je
dec
in
imul
jp
aad
dec
adc
push
jp
xchg
scas
mov
cdq
add
mov
cmp
push
xchg
cmps
adc
dec
lea
mov
mov
cmp
popf
xchg
cmp
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
mov
(bad)
dec
out
mov
jo
add
and
ss
xchg
dec
data16
mov
xor
mov
movs
xor
inc
add
jp
leave
icebp
popa
jge
cmp
outs
adc
js
outs
mov
dec
in
out
xchg
push
(bad)
cmps
mov
jne
and
mov
lahf
into
mov
pop
(bad)
pop
data16
dec
inc
dec
(bad)
pop
data16
movs
dec
mov
dec
inc
mov
dec
data16
sbb
test
enter
das
mov
inc
jl
les
push
ret
loop
cwde
in
xor
dec
movs
jl
dec
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
xchg
data16
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
je
push
add
.byte
